jg
in
leave
sbb
add
enter
dec
les
call
mov
mov
push
loope
iret
jno
jge
inc
sar
ins
inc
not
fimul
mov
cmp
fwait
popa
ja
or
stc
mov
clc
add
mov
pop
(bad)
mov
lds
and
dec
mov
out
mov
das
xor
xor
stos
push
mov
sbb
sbb
push
inc
clc
das
call
in
mov
mov
sar
out
imul
pop
or
mov
pop
or
fbstp
xchg
sbb
fwait
test
jne
in
cmp
sahf
arpl
xor
test
cmps
(bad)
and
bound
popa
ins
add
cld
xchg
(bad)
jmp
mov
into
ins
dec
pusha
stos
mov
arpl
xchg
aam
xchg
lods
test
loope
dec
cs
push
(bad)
(bad)
nop
fsubr
ja
pop
mov
xchg
(bad)
sub
sub
cdq
mul
mov
jle
into
xor
ss
ror
int
mov
xor
pushf
retf
cld
movs
push
xchg
pop
adc
rcr
js
das
ss
test
daa
(bad)
clc
adc
sbb
in
icebp
jge
and
inc
jl
inc
jmp
sti
fwait
aam
aas
xchg
sub
and
dec
les
sbb
push
daa
jb
retf
ror
and
rol
fidivr
aaa
xor
add
xor
aam
inc
jnp
or
dec
out
adc
fsubp
pop
or
push
into
add
lods
xchg
xchg
out
ins
jecxz
xor
adc
or
sub
cmp
jge
mov
repnz
(bad)
loopne
fcomp
sub
xchg
mov
fucomp
in
ins
and
add
inc
and
fst
fadd
pop
jno
test
add
out
cli
xchg
sbb
mov
pop
inc
test
xchg
jb
in
fwait
pop
sbb
push
sbb
mov
mov
cmp
jl
cmp
push
out
pushf
ret
enter
cmp
lea
jp
pop
aaa
or
add
adc
fistp
xor
jmp
xor
dec
mov
pop
dec
dec
xchg
neg
mov
or
ror
cmp
stos
xor
adc
movs
gs
test
mov
mov
cs
cs
jnp
jecxz
dec
retf
enter
(bad)
cmc
(bad)
pusha
dec
cs
adc
lods
pop
popa
dec
push
aaa
jo
jo
and
mov
and
xchg
(bad)
outs
jnp
xor
cli
out
mov
xchg
mov
add
arpl
jmp
loope
sbb
mov
xchg
cld
sbb
retf
cli
pop
push
xor
push
cs
nop
test
mov
or
scas
test
jg
or
lahf
adc
mov
mov
jnp
repz
dec
or
adc
mov
lea
jns
xor
loopne
cmp
ss
mov
pop
js
test
push
outs
cmp
cld
xchg
mov
pop
int3
mov
test
cmp
gs
fdivrp
mov
cmp
mov
int3
xor
outs
daa
cwde
push
cs
xchg
and
sub
dec
cmc
jnp
or
mov
dec
(bad)
hlt
not
add
std
push
loop
call
jnp
push
jmp
xchg
cmp
push
fiadd
hlt
stos
mov
imul
xchg
inc
push
repz
dec
push
outs
mov
je
inc
xor
scas
sub
je
fisttp
dec
mov
adc
and
lea
stc
dec
xor
sub
retf
outs
or
cs
imul
add
out
mov
xchg
gs
push
(bad)
jne
sub
in
cs
jo
popf
pop
test
xchg
mul
inc
dec
scas
mov
popf
stc
pop
hlt
push
test
imul
shl
push
clc
dec
adc
cmc
pop
add
jle
adc
cmp
push
ror
ins
in
sub
(bad)
in
je
and
iret
repz
or
into
lds
push
sub
sar
and
cli
xor
pop
mov
data16
out
push
leave
lods
xor
(bad)
jg
xor
adc
add
ja
xor
sbb
mov
imul
mov
and
mov
sahf
mov
adc
test
shr
repnz
push
icebp
jae
xchg
ss
push
dec
imul
pop
add
cmp
cmps
or
sbb
pushf
push
sub
lods
repnz
or
push
mov
push
cmp
dec
les
pop
push
dec
xchg
movs
jge
icebp
inc
mov
retf
mov
jnp
xchg
jne
sbb
les
mov
stos
shld
rcr
les
sub
mov
paddusb
xor
add
jecxz
loopne
test
mov
pop
pop
sbb
sub
xlat
popa
jne
cmp
add
jp
and
dec
in
test
adc
sbb
mov
repnz
aad
xor
cmc
ss
push
test
inc
mov
push
gs
bound
and
mov
adc
inc
pusha
dec
sub
(bad)
mov
lock
adc
lahf
cld
xchg
aaa
fadd
mov
mov
(bad)
xor
sahf
sbb
mov
mov
xchg
int3
pop
xor
add
mov
fidiv
xlat
cmps
sti
jnp
pop
cmc
ins
or
outs
std
or
pop
xor
call
gs
sbb
lods
scas
jle
scas
xor
push
jge
call
xchg
jecxz
outs
cs
mov
push
lods
push
sti
sub
jb
dec
aam
popa
mov
mov
idiv
sbb
jo
mov
call
loopne
ins
push
ja
sti
movzx
cmps
dec
jmp
adc
and
daa
fimul
sub
cdq
iret
inc
cmps
add
push
mov
fdivr
sub
shl
xor
add
bound
fiadd
pop
out
mov
shr
imul
xor
(bad)
shl
iret
push
idiv
fst
push
dec
repz
xor
pop
mov
retf
adc
(bad)
aam
mov
mov
adc
icebp
xor
jnp
mov
stos
in
jmp
mov
in
bound
fwait
(bad)
clc
imul
icebp
mov
push
outs
lock
clc
adc
enter
ror
out
mov
mov
xor
cmc
mov
shr
mov
and
mov
xchg
nop
jo
ds
mov
idiv
and
xor
add
(bad)
mov
rcr
xchg
ins
xor
inc
mov
mov
retf
addr16
fadd
cmp
dec
aaa
ins
cmp
xchg
and
adc
add
jbe
in
mov
aad
fistp
add
mov
mov
push
rcr
cmp
pop
dec
sub
sbb
xchg
dec
iret
add
pop
lea
inc
add
inc
ja
dec
inc
dec
jge
fisttp
cmp
xor
fisubr
sahf
adc
jne
repz
aaa
dec
cmp
out
fwait
and
lea
mov
or
loopne
les
aas
ret
sti
xchg
cmc
xchg
fs
lods
aam
loopne
imul
retf
sbb
inc
xchg
mov
ins
jo
scas
dec
or
rcl
je
pusha
adc
xchg
or
ret
cli
xchg
mov
test
xchg
xchg
jmp
int
push
add
mov
add
test
ror
fisubr
xchg
add
mov
mov
pop
retf
push
les
mov
(bad)
(bad)
sbb
push
stos
rcr
mov
ror
outs
cmp
xor
jns
or
jne
and
imul
lds
xchg
jns
imul
enter
movs
clc
retf
(bad)
xlat
es
out
sub
pop
test
sar
imul
mov
rol
scas
pushf
cli
daa
je
sub
add
iret
jnp
into
(bad)
sub
xor
dec
jmp
in
pop
out
clc
dec
mov
ret
sub
pop
sub
jae
fnstcw
mov
pop
xchg
mov
pop
bound
pusha
(bad)
xor
adc
cdq
mov
dec
pop
shl
cmp
aas
test
dec
(bad)
in
or
cmp
sti
dec
mov
jle
mov
lock
mov
es
pusha
push
mov
pop
jp
dec
mov
mov
movs
xchg
int3
lds
push
(bad)
pop
ins
push
arpl
outs
jb
mov
imul
adc
fistp
or
inc
fucom
leave
bound
stos
push
mov
xor
adc
cmp
lock
and
mov
std
popf
cld
jne
cmp
dec
mov
and
push
xchg
push
adc
xor
leave
in
int
push
jmp
push
xchg
or
in
jmp
xchg
xlat
mov
cli
(bad)
fdivr
sub
xchg
xor
cwde
add
mov
jbe
adc
mov
push
repz
push
xlat
xchg
dec
xchg
bound
sub
rol
js
aam
lods
in
int3
pop
pop
push
stos
sub
push
push
pop
repz
(bad)
or
dec
pop
pop
hlt
mov
shr
cs
out
pop
mov
mov
jl
std
pusha
in
popf
or
sub
pop
add
aaa
addr16
push
jg
push
push
sbb
jb
xor
and
movs
or
adc
mov
fiadd
fcom
push
xor
jns
adc
leave
lock
xor
push
cmps
push
push
dec
adc
movs
mov
das
rol
aaa
iret
mov
dec
mov
mov
sub
inc
jns
cmp
(bad)
xchg
add
fidivr
pop
icebp
sbb
retf
pop
into
loope
rcr
adc
outs
mov
sub
neg
adc
or
int
xor
lock
push
mov
cs
pop
push
jne
movs
cmp
fldcw
lods
jmp
popa
push
test
and
lock
cwde
push
test
outs
in
out
fld
ja
ret
push
inc
in
std
push
cld
inc
jne
add
ins
xor
inc
retf
jl
jo
test
rcl
push
sub
(bad)
push
or
and
int
int3
xchg
jp
dec
adc
adc
ret
inc
pop
aas
sub
sahf
clc
addr16
jg
cmc
push
xor
adc
pop
jp
out
lods
push
mov
or
xchg
jg
addr16
(bad)
push
das
push
fs
pop
out
movs
mov
leave
aam
jg
js
xlat
icebp
push
push
fidivr
std
add
ds
add
adc
mov
stc
lods
ror
push
inc
or
int
adc
jge
inc
jno
sbb
inc
mov
es
gs
and
pop
popa
push
cmps
push
sbb
cmp
lock
test
iret
xor
sub
xor
dec
jnp
add
pop
pop
stos
or
jmp
xor
cwde
adc
mov
leave
jbe
mov
xchg
mov
jmp
lea
mov
mov
arpl
sahf
mov
sbb
rol
in
fidiv
xor
adc
leave
lock
mov
xlat
xchg
sahf
xor
cli
xor
(bad)
adc
mov
dec
leave
jo
aas
retf
fdiv
in
sbb
out
and
dec
adc
in
loope
inc
inc
outs
sub
int3
cli
cmp
jp
and
mov
xchg
and
mov
popa
xor
inc
xchg
push
add
inc
cld
popf
test
pusha
out
mov
fcomi
rcl
mov
popf
pushf
ja
mov
fs
xor
shr
je
stc
cmp
push
pop
sub
imul
push
xlat
jmp
addr16
push
jle
inc
and
leave
in
lock
push
popf
repz
add
cli
jnp
or
nop
ror
jl
loope
loop
mov
cmova
mov
sar
mov
jae
or
ins
mov
push
dec
jne
sub
cmps
lods
pop
mov
shl
mov
xor
mov
sbb
jne
push
xlat
jmp
push
cmp
sub
shr
jmp
sub
cmp
sahf
gs
ds
nop
imul
cwde
scas
mov
cmp
mov
in
sub
pshufw
fldenv
inc
and
xchg
cmp
(bad)
sub
bound
je
outs
mov
mov
add
retf
addr16
ret
mov
sbb
mov
adc
enter
adc
cmp
and
pop
loop
or
call
xchg
(bad)
pop
test
xor
je
aam
enter
sbb
into
arpl
ja
test
clc
data16
sbb
fwait
out
repnz
fst
jne
lods
mov
div
iret
int
push
sbb
jo
jecxz
test
std
push
push
adc
movs
adc
leave
sub
jp
fucomi
dec
xchg
xor
jno
push
fmul
fstp
dec
jp
sar
addr16
outs
pop
outs
clc
add
cdq
test
mov
adc
pop
or
sub
test
mov
test
and
mov
mov
mov
push
push
cmp
xor
xchg
add
fwait
sub
cmc
inc
ds
js
pusha
rol
in
xchg
pop
cmps
dec
aas
push
nop
(bad)
test
sti
int
leave
es
fcmovbe
test
fidivr
push
mov
test
jmp
xchg
adc
cs
(bad)
cs
add
sar
jno
clc
jecxz
mov
outs
sbb
cwde
stc
xchg
popf
sbb
sbb
jle
jmp
mov
loopne
cmp
ins
and
jae
adc
cwde
cmc
sub
or
clc
adc
sub
in
bnd
cmps
in
mov
sub
(bad)
rcl
xor
xchg
inc
and
cmp
sbb
cmps
or
pushf
add
sub
nop
mov
test
xor
mov
xor
test
cwde
jns
xor
xlat
inc
mov
stc
pop
add
mov
into
push
xchg
(bad)
out
sbb
pop
jno
xchg
xor
mov
stos
jge
fisubr
dec
dec
outs
dec
ds
cmp
or
daa
sbb
mov
mov
adc
stos
pop
scas
fdiv
adc
cmps
xor
mov
gs
pop
arpl
or
pushf
lock
pop
push
and
nop
inc
popa
(bad)
mov
inc
mov
or
mov
pop
cwde
ret
jp
mov
enter
neg
and
xor
adc
adc
inc
inc
fwait
add
adc
cmps
(bad)
jae
jae
pop
mov
pop
dec
cld
in
cs
dec
cld
aam
xor
sbb
inc
sub
mov
cmp
mov
(bad)
cdq
adc
repz
lods
sahf
mov
rcl
jmp
jl
sbb
int
push
mov
xchg
pusha
pop
lods
sbb
sub
mov
mov
call
push
mov
adc
dec
sbb
fisub
pop
enter
(bad)
imul
aas
sub
gs
inc
push
xor
rol
pop
les
(bad)
(bad)
fidiv
test
into
out
mov
out
in
cli
daa
movs
cmps
inc
adc
fstp
cmp
cmps
call
pop
test
mov
jle
hlt
pop
cs
ja
sbb
retf
ds
fisttp
cmc
gs
data16
test
aam
push
imul
dec
inc
sub
(bad)
stc
dec
jle
jnp
xchg
adc
repnz
pop
or
inc
cmps
add
push
mov
scas
cmp
jbe
mov
call
xchg
loop
fbstp
int
mov
sbb
jb
fs
jmp
out
scas
add
pop
pop
rol
cmp
rol
inc
push
scas
aam
icebp
xchg
adc
rcr
mov
inc
(bad)
cli
cwde
sar
cs
loop
es
sub
or
nop
bound
inc
and
pop
mov
js
dec
mov
fst
sub
cmp
es
jge
inc
enter
adc
in
addr16
(bad)
fwait
lods
lods
jb
mov
push
pop
ds
mov
xchg
adc
sub
sbb
sub
loopne
push
jl
test
xchg
loopne
pop
ss
syscall
shl
sbb
xchg
into
jnp
xlat
popf
outs
pop
(bad)
sub
test
fdivr
(bad)
jnp
lods
or
dec
retf
ficomp
xchg
cmp
jle
or
call
xor
jo
stos
jo
retf
outs
push
sbb
arpl
sbb
xor
div
fnstenv
add
pusha
movs
jbe
fcmovu
div
fcmovbe
jnp
es
jns
jnp
loope
ins
(bad)
in
cli
int3
and
repz
or
iret
and
jmp
xor
call
(bad)
fadd
mov
addr16
jecxz
fs
mov
sbb
std
js
and
(bad)
in
mov
add
add
pop
xor
mov
popa
cli
mov
dec
out
mov
jb
mov
or
jno
add
mov
int3
or
cli
sub
cmp
xchg
cmc
cwde
enter
sbb
movs
inc
and
rcl
and
nop
xor
mov
sbb
clc
int
aaa
fs
imul
stos
lods
cmps
mov
mov
dec
xchg
scas
pop
adc
push
push
push
lods
jno
clc
sbb
pop
push
fwait
dec
stos
sbb
cmc
(bad)
aad
mov
popf
jbe
(bad)
mov
push
call
shr
fcom
push
loopne
xor
mov
iret
sar
ror
lods
xor
and
xchg
aaa
pop
mov
test
data16
in
data16
gs
std
xor
push
movs
aad
cmp
or
(bad)
mov
jle
jp
sbb
jp
retf
imul
xor
ins
rol
(bad)
in
xor
sbb
in
xchg
in
mov
mov
sbb
ins
inc
jmp
push
in
cmps
movs
mov
and
ret
mov
in
push
xrelease
lds
dec
jo
push
imul
mov
loop
xor
jg
push
movs
ins
mov
sbb
adc
std
xor
adc
leave
adc
push
xchg
jae
cmps
loope
inc
cmp
lods
or
push
or
xchg
dec
push
sti
push
adc
push
jns
in
outs
loope
out
inc
int3
dec
pop
or
test
pop
xor
jl
setns
aad
push
xor
out
(bad)
out
cmps
pusha
jne
pop
nop
imul
jbe
cmp
enter
and
test
fwait
icebp
in
jecxz
shl
xor
sti
cmp
cmps
sub
jmp
das
out
(bad)
and
(bad)
push
in
(bad)
fs
into
mov
out
inc
mov
repnz
pushf
popf
xchg
jbe
out
(bad)
movs
iret
or
dec
inc
ss
aad
ins
ds
(bad)
fwait
jnp
inc
sar
jbe
push
daa
imul
(bad)
js
shl
(bad)
cmps
out
cmp
adc
ret
add
pop
popa
mov
fwait
sub
push
lds
xadd
daa
mov
sub
cmps
xchg
dec
mov
add
aad
jg
push
cmp
or
cmp
mov
mov
dec
push
lods
mov
ins
push
and
push
(bad)
cmps
or
mov
xchg
mov
in
push
mov
gs
adc
xchg
fild
(bad)
mov
dec
sub
mov
mov
fdiv
jns
pop
out
pop
sub
jmp
mov
jmp
stos
out
into
call
and
out
test
in
push
lods
inc
xor
out
rcl
cmc
cwde
add
xlat
arpl
sub
dec
fistp
sub
fmul
mov
aam
mov
xchg
fist
pushf
fist
and
xchg
call
mov
adc
xchg
jb
inc
xchg
ins
arpl
push
(bad)
aaa
dec
arpl
add
fucomi
loop
mov
xor
imul
push
jle
push
mov
pop
loop
mov
cmp
pop
inc
adc
jo
sub
shl
sbb
(bad)
fsub
mov
jae
pop
adc
shr
and
(bad)
dec
nop
repnz
fwait
lods
xchg
loope
ja
ficomp
in
stos
mov
push
stos
nop
jmp
stc
pusha
jge
sbb
and
or
adc
outs
imul
cmc
(bad)
call
cs
sub
mov
mov
dec
shl
mov
scas
adc
cmps
pop
ds
scas
cmp
hlt
std
or
rol
inc
inc
in
dec
js
ds
sbb
pop
in
cmp
fcmovu
sub
ret
shl
sub
push
add
mov
mov
dec
mov
dec
sbb
mov
lahf
in
sbb
or
inc
sub
mov
std
inc
and
dec
retf
jmp
and
jae
iret
pop
jl
loop
push
adc
xlat
les
mov
sbb
enter
enter
mov
imul
dec
jmp
pop
in
dec
mov
test
cmps
test
out
mov
out
lods
mov
cmps
(bad)
jg
outs
dec
push
sbb
mov
std
(bad)
pop
pop
pop
retf
nop
stc
jmp
add
mov
repnz
adc
call
aas
test
xchg
jmp
mov
xlat
sub
jbe
jmp
mov
fcmovnu
inc
mov
leave
movs
push
loop
mov
(bad)
hlt
cmp
pop
repz
rcl
(bad)
lods
push
or
mov
dec
aam
arpl
repnz
rcr
scas
xor
mov
lea
xchg
lahf
loopne
out
outs
xlat
das
jmp
jo
cwde
cmps
xchg
mov
mov
ret
cmp
outs
xlat
rcl
(bad)
ds
cmp
aaa
push
mov
loop
dec
pop
xor
mov
popa
out
xchg
mov
cmp
lahf
mov
les
pushf
dec
arpl
movs
mov
ret
out
jl
jmp
mov
in
mov
mov
ins
xchg
jmp
pop
retf
cmp
es
jb
jg
fcomp
inc
(bad)
je
loopne
or
mov
jmp
retf
mov
lods
inc
movs
sbb
stos
cmc
or
pop
aam
pop
push
or
mov
inc
mov
push
inc
stos
cmp
not
imul
xchg
arpl
cmp
add
pop
ins
(bad)
or
xor
ins
push
test
push
sbb
or
push
out
push
arpl
xchg
out
nop
retf
jmp
pushf
cli
std
lock
imul
cmp
push
inc
push
push
loop
add
clc
int3
pusha
std
push
std
add
loopne
sub
(bad)
sar
imul
aas
pop
test
dec
(bad)
push
(bad)
hlt
sbb
loope
ja
add
push
pop
ins
add
xlat
push
jl
cld
push
dec
gs
pop
mov
shr
or
ja
push
inc
bound
adc
adc
cmp
pop
int
iret
data16
xor
pop
mov
cwde
sbb
sub
(bad)
sub
in
(bad)
push
mov
adc
or
jno
xchg
pusha
sub
in
push
jne
pusha
adc
adc
cmc
repz
and
add
fistp
out
xchg
jmp
sub
data16
dec
aas
scas
pop
dec
loop
sub
xchg
cld
cs
mov
or
adc
push
sbb
or
xor
add
push
lahf
cmps
or
mov
and
popf
out
pop
call
pusha
jl
pop
repnz
inc
or
std
push
stos
pushf
mov
mov
in
sbb
sub
aaa
push
cmp
lods
call
add
dec
(bad)
jecxz
cmp
and
adc
xor
jl
inc
popa
rcr
popa
outs
stos
mov
mov
add
xor
jmp
std
(bad)
add
clc
xchg
stos
push
mov
cwde
pop
std
ror
scas
sbb
and
sub
push
fstp
xor
es
(bad)
jl
mov
mov
xchg
xchg
test
stos
es
je
rcr
jae
aaa
cld
pop
aaa
gs
mov
cmp
pop
pop
pop
mov
mov
inc
daa
gs
outs
pop
mov
adc
inc
mov
icebp
addr16
ss
cld
sahf
mov
movs
cmc
or
sub
push
aas
fadd
mov
or
test
xor
adc
addr16
jnp
add
inc
hlt
sub
jne
xor
lods
cmc
lahf
imul
jmp
loopne
inc
stos
imul
fdiv
call
sub
adc
or
push
mov
dec
icebp
jno
or
push
push
and
add
iret
sar
dec
loop
mov
sbb
push
xchg
int
repnz
xchg
rcr
shl
je
hlt
inc
adc
jno
pop
mov
jmp
scas
sub
bound
jo
jnp
inc
xor
scas
adc
adc
fisttp
xchg
loope
ficomp
fwait
in
adc
shl
pop
mov
enter
add
lods
out
stos
clc
push
pop
std
lods
ret
movs
and
inc
idiv
add
inc
sbb
ret
nop
in
sbb
and
retf
xor
ds
jo
dec
aaa
mov
imul
ss
or
jae
dec
maskmovq
div
movs
mov
xchg
rcr
fcmovnbe
ins
inc
mov
add
std
loope
lds
dec
jl
xchg
dec
ret
or
int
inc
loope
fwait
add
(bad)
pop
cmp
retf
inc
movs
les
inc
mov
jbe
xchg
push
push
xchg
and
push
inc
ds
sar
adc
push
jp
iret
ss
shld
imul
push
mov
shl
repnz
adc
sbb
out
mov
lahf
in
retf
pop
sbb
xchg
fld
scas
mov
adc
les
jbe
aas
push
or
mov
call
dec
popf
ins
daa
push
pop
and
addr16
xor
data16
or
pop
xchg
div
leave
xor
mov
jns
movs
aas
int3
aas
(bad)
daa
lods
mov
push
push
cmps
stos
mov
push
cmp
ja
lods
inc
retf
in
cmp
lea
jp
ss
push
xor
enter
jne
adc
mov
sub
out
dec
neg
cmp
xchg
aam
mov
xor
adc
aad
stos
lahf
sub
loope
sbb
inc
jmp
addr16
and
sbb
mov
ss
sub
or
cmps
jae
jae
test
es
mov
inc
inc
std
push
jg
mov
sti
shl
or
sub
sub
adc
pop
aam
mov
push
sbb
outs
push
stos
or
repz
push
jecxz
aaa
imul
or
stos
xchg
int
(bad)
sti
adc
pop
in
jbe
mov
pop
int
dec
inc
xchg
(bad)
je
jne
push
jmp
mov
popa
mov
jecxz
dec
xor
mov
add
es
imul
mov
mov
(bad)
and
and
cmps
sub
in
leave
inc
jbe
dec
push
(bad)
sti
lods
test
adc
movs
or
jnp
loopne
cld
jge
test
inc
retf
add
push
enter
cwde
outs
mov
xor
out
push
pop
push
call
mov
inc
mov
bound
cmp
mov
mov
push
mov
in
jmp
cmc
mov
mov
movs
or
mov
sbb
aad
mov
add
pop
pop
aam
es
dec
ins
push
cmps
xchg
or
and
jb
fwait
outs
out
das
or
fisttp
rol
xor
adc
retf
mov
inc
and
inc
cmps
jns
xor
scas
(bad)
ins
jbe
ja
repz
pop
imul
mov
xchg
ret
fsubr
cwde
mov
cmps
ret
bound
int3
pop
and
aam
xchg
pop
sar
sub
cs
mov
mov
mov
in
cmc
pop
mov
js
xchg
pop
mov
fldenv
clc
adc
not
push
inc
pusha
mov
mov
imul
or
les
cld
add
mov
cmps
jge
daa
add
dec
pop
nop
loopne
movs
pop
pop
sbb
add
ret
cmp
sbb
mov
test
fdivr
pushf
jae
js
jno
cmp
cmp
stos
idiv
fcomp
inc
and
mov
adc
lahf
shl
enter
mov
pop
inc
jge
cmp
cmp
ds
add
cli
sbb
inc
inc
leave
leave
push
cdq
fwait
pop
arpl
jns
mov
(bad)
leave
enter
(bad)
mov
fisubr
sahf
mov
add
andnps
mov
xor
mov
adc
movs
jo
test
cmp
stc
pop
dec
movs
xchg
jp
or
mov
xor
push
mov
adc
adc
adc
ror
outs
cmp
pop
ret
into
pop
int3
arpl
aas
daa
xchg
push
ss
(bad)
pop
jecxz
sahf
outs
mov
repnz
pop
div
xchg
(bad)
imul
adc
or
xchg
dec
retf
popa
sahf
add
push
pop
jp
or
xor
pop
sub
add
and
xor
sahf
xchg
sar
das
test
mov
adc
xchg
cmc
sbb
in
fiadd
inc
mov
icebp
mov
xchg
sub
xchg
scas
ins
outs
popa
xlat
inc
sub
mov
mov
les
loope
or
outs
sub
jns
dec
inc
in
inc
add
and
fdecstp
xor
imul
cmp
fsubr
cmp
imul
dec
or
movs
or
cmp
std
dec
or
sub
in
int3
das
imul
addr16
mov
ins
dec
inc
cmp
pop
ja
aaa
adc
push
sti
std
xchg
mov
xor
mov
js
sub
mov
pop
push
popa
outs
call
dec
mov
or
repz
mov
xchg
call
add
sbb
inc
xchg
jp
adc
sub
push
sub
jg
and
jno
pop
mov
or
in
leave
inc
or
in
mov
sub
jmp
xor
aad
and
sub
mov
test
enter
arpl
pop
hlt
or
push
push
jg
pop
lods
fs
mov
retf
stos
imul
sbb
jbe
aam
(bad)
je
test
call
sub
inc
push
lods
sbb
div
and
sub
xchg
jno
mov
popf
je
fiadd
mov
gs
cli
cmp
aam
lods
lods
movs
cs
repz
test
jge
(bad)
dec
addr16
cmps
dec
ds
aaa
or
xchg
pop
loope
push
and
sbb
jg
sahf
aad
pushf
in
dec
ret
pop
mov
out
jp
leave
adc
mov
push
data16
push
(bad)
push
add
pop
aad
jg
ds
adc
movs
iret
call
rcpps
inc
xchg
pop
imul
(bad)
mov
cwde
loope
lods
pop
pop
fs
pushf
ja
movs
add
outs
push
rcr
cmp
mov
dec
mov
out
xor
or
enter
jmp
jecxz
cmp
jns
popa
int
sbb
aad
mov
ds
or
jae
(bad)
add
mov
xchg
scas
jae
out
xchg
not
fs
ja
inc
adc
xor
sub
xor
call
sar
sub
mov
pop
add
popa
test
scas
pop
adc
jns
pop
cli
pop
dec
push
sti
push
xlat
jge
gs
outs
(bad)
nop
jg
daa
sbb
and
rcr
mov
xor
ins
out
std
loope
cmp
(bad)
inc
cmps
cmc
pop
add
(bad)
int
pop
pop
jg
mov
gs
and
iret
test
sub
and
int
pop
int
outs
cmps
and
mov
xlat
das
pop
mov
scas
fcomp
(bad)
popa
and
mov
das
(bad)
fcom
fst
dec
ss
iret
add
test
imul
popa
pop
jg
adc
lods
xlat
and
or
cmp
cmp
jns
mov
push
dec
cmp
pop
imul
movs
mov
and
cwde
xchg
xor
sahf
fld
and
sub
dec
(bad)
cmps
rcr
sahf
sti
ficomp
movs
sbb
ror
out
pusha
jae
aad
push
cmps
out
fmul
stos
loop
mov
cld
out
jnp
into
call
sar
dec
sbb
lahf
xor
xchg
cmc
push
movs
sbb
cld
add
pop
icebp
dec
or
fs
adc
mov
push
adc
dec
or
dec
lock
add
jne
sub
jg
xchg
lea
vmwrite
pop
ss
cli
outs
mov
xor
leave
push
es
mov
ret
mov
jb
dec
iret
mov
lods
inc
lock
out
add
pusha
rcl
adc
div
inc
fnstsw
add
sbb
sbb
mov
xchg
mov
pop
jb
jmp
add
cmp
div
pop
mov
repnz
call
ret
jp
in
fisttp
pop
mov
in
mov
lods
mov
sub
aam
push
jecxz
movs
jnp
xor
mov
fstp
aad
fstp
stos
jp
out
ja
dec
sub
std
jb
add
and
jb
lahf
push
pusha
dec
fistp
pmulhw
fwait
popf
popf
jns
mov
popf
and
(bad)
sbb
ins
ins
rcl
add
call
leave
sub
inc
xchg
pop
jbe
adc
push
sub
dec
shr
shl
mov
fnstenv
jge
movs
sbb
mov
and
sti
or
pop
or
jg
push
mov
popa
or
xchg
shr
cmp
jne
sub
mov
add
test
mov
into
test
add
xor
into
or
mov
or
sbb
push
bound
push
clc
lods
and
jge
and
sub
ins
and
cwde
sub
mov
cs
jo
pop
inc
out
sub
pusha
fcom
xor
mov
mov
lods
nop
or
outs
test
jmp
jl
inc
push
sub
aam
add
gs
je
es
pop
out
cmp
sbb
popa
xor
daa
test
test
neg
data16
and
mov
or
popa
inc
fidivr
add
cmp
ins
jns
mov
sub
and
or
push
(bad)
jne
sbb
mov
and
ins
sti
outs
cmp
xchg
lock
sbb
(bad)
mov
add
xchg
or
adc
inc
retf
xchg
jecxz
push
sbb
push
rcl
push
dec
out
aad
and
or
pop
iret
xchg
stos
push
shl
sti
in
add
pop
movs
xor
mov
(bad)
ins
xchg
mov
xor
add
shl
mov
test
not
sbb
mov
inc
dec
sub
popf
in
pop
clc
jo
mov
ins
pop
push
push
lds
mov
xchg
rol
cmp
inc
fidivr
cwde
mov
adc
inc
call
dec
ror
and
add
inc
in
adc
cdq
fld
outs
xchg
aaa
jns
test
xchg
fisubr
hlt
(bad)
mov
loopne
cmp
mov
lods
add
add
hlt
mov
mov
dec
xchg
push
int
add
pop
cmp
fnstcw
pop
in
sub
call
cmps
(bad)
fmul
out
sbb
popf
daa
sub
loopne
bound
mov
pusha
pop
dec
popf
and
pop
dec
repz
adc
pop
inc
add
(bad)
or
je
andnps
out
arpl
outs
add
mov
dec
xchg
mov
mov
clc
adc
dec
loope
push
arpl
xchg
add
std
xchg
pop
call
ins
or
jb
mov
mov
imul
jl
xor
and
(bad)
mov
cmp
sbb
je
mov
adc
in
xchg
js
xchg
sbb
mov
(bad)
rol
repz
xor
sbb
xchg
sahf
cld
sbb
sbb
and
mov
imul
int3
jno
jnp
xor
adc
aam
dec
popa
and
mov
or
sbb
jb
inc
lds
mov
mov
shr
test
loopne
sti
pop
std
(bad)
ins
clc
lea
out
jg
fmul
jne
ret
inc
leave
call
and
and
push
adc
fild
cmp
enter
or
es
pop
jnp
mov
and
inc
and
(bad)
(bad)
ret
outs
cmp
repz
ds
int3
pop
fcom
jb
sahf
dec
aam
sub
add
pushf
retf
daa
xor
pop
lock
mov
in
in
and
cmp
pop
xor
ss
leave
iret
mov
inc
lods
sbb
sbb
push
mov
in
jnp
int3
mov
mov
pop
lea
dec
mov
jmp
jmp
inc
and
sub
dec
lods
jnp
jge
ja
neg
cmp
ror
xor
mov
aas
add
outs
inc
loop
pop
es
jo
stc
and
sub
aam
jg
sti
inc
jl
xchg
shl
in
add
int3
lea
pushf
sbb
xor
iret
ins
test
inc
mov
xchg
lods
fmul
out
push
mov
fmul
xchg
sbb
xor
sub
cdq
add
push
or
sbb
pop
push
ss
fcmovnu
push
test
and
ficom
sub
pop
mov
inc
xchg
and
and
sub
lock
push
mov
nop
xchg
add
(bad)
xchg
push
repz
mov
jb
mov
sti
fmulp
jg
adc
(bad)
pop
sub
push
push
jnp
xor
xor
fiadd
adc
movs
dec
fst
fwait
int3
or
(bad)
and
mov
mov
and
call
leave
mov
pop
jge
push
test
shl
sub
imul
jae
push
xchg
pop
jge
dec
xchg
addr16
mov
adc
or
xchg
lods
dec
xor
(bad)
pop
loopne
xor
xor
sbb
ins
pop
mov
iret
and
sbb
nop
call
lock
or
aam
cli
pop
movs
pop
(bad)
pop
jecxz
adc
cmps
inc
ret
outs
popf
dec
outs
out
xchg
icebp
das
xor
ror
adc
and
aas
xor
push
lock
cmps
mov
fisubr
clc
jle
cmp
dec
iret
int
mov
dec
add
mov
and
sub
es
push
jbe
sub
jb
out
or
add
sbb
ja
movs
jg
xor
js
int3
inc
cdq
inc
imul
mov
loop
adc
push
xlat
adc
movs
cmp
adc
mov
xor
xor
sbb
push
jne
in
mov
mov
sti
test
ss
mov
shl
aad
fs
inc
aam
fsubr
jnp
mov
cmp
test
and
popf
rcl
mov
repz
mov
jno
and
hlt
mov
movs
out
dec
rol
and
push
ja
mov
xchg
cli
retf
add
cmc
jge
dec
pop
dec
push
out
mov
jno
pop
sub
call
xor
fstp
inc
iret
mov
pop
inc
inc
stos
xchg
inc
xor
clc
ror
add
test
adc
cmp
int
dec
sbb
mov
dec
mov
jecxz
inc
(bad)
and
inc
cwde
ins
(bad)
js
(bad)
pmaxub
mov
push
mov
mov
psubd
inc
out
fs
sar
dec
mov
test
push
xchg
pop
retf
out
int
xor
mov
out
mov
sbb
test
(bad)
out
mov
jl
cmp
add
into
jb
cmp
mov
test
loope
inc
add
(bad)
and
adc
jns
dec
addr16
jmp
les
pop
add
jnp
leave
add
jnp
mov
push
fsub
cli
push
sub
pop
fistp
push
mov
stc
push
fld
test
fisttp
or
inc
adc
push
movs
sbb
gs
arpl
outs
jmp
adc
cld
ror
sbb
ror
in
and
push
aaa
mov
pop
retf
fs
mov
hlt
sub
movs
xchg
out
push
mov
inc
gs
add
mov
and
pop
xor
cli
ds
in
sbb
dec
retf
xchg
fist
repnz
cmp
and
(bad)
in
mov
aam
pop
add
call
jl
std
pop
inc
fcom
cdq
push
jae
rcl
jp
and
xlat
gs
push
das
xchg
xchg
stc
dec
sbb
test
cmp
lea
inc
inc
pop
adc
div
scas
(bad)
push
jns
dec
mov
cld
inc
ret
imul
dec
sub
sti
push
(bad)
cmp
outs
jns
adc
sahf
inc
add
mov
cmp
jb
popa
or
cmc
xchg
dec
pop
aad
popf
lea
retf
sahf
sar
push
js
sub
xor
and
les
pop
xchg
sub
sub
sbb
adc
stos
xor
dec
add
cdq
loopne
xor
push
ja
sahf
pop
es
dec
cld
cmp
xchg
dec
or
fwait
mov
aas
xchg
in
pop
mov
ds
dec
in
push
ins
into
imul
loope
add
cmp
or
gs
push
push
or
hlt
lods
mov
js
inc
jp
sbb
adc
mov
mov
sar
ds
sub
(bad)
jp
cmp
inc
and
dec
repnz
cmp
test
das
bound
or
adc
jge
clc
mov
pushf
call
pop
scas
push
xlat
sub
sar
dec
xor
les
retf
mov
fs
ja
loope
cdq
out
xchg
push
clc
or
cmp
sub
xchg
push
mov
aas
call
bound
fmulp
out
cmp
int3
test
mov
call
addr16
xor
je
xchg
ds
sub
aad
int
popf
scas
jne
mov
loope
xchg
pop
fst
in
mov
fwait
data16
mov
sbb
mov
sub
daa
jne
xor
pop
xor
int3
or
jge
movs
fidivr
adc
jno
out
(bad)
clc
vpand
ss
loop
cwde
jno
arpl
mov
in
inc
neg
or
mov
fs
ins
jecxz
fcomp
xor
add
jle
pop
mov
icebp
loop
int
jecxz
mov
test
cmp
xchg
(bad)
repnz
out
inc
jmp
in
jecxz
les
mov
mov
cmp
sbb
add
dec
and
push
adc
jge
aam
imul
call
aaa
jae
and
hlt
xor
fwait
in
xor
jnp
cmp
pop
jecxz
mov
shl
or
jmp
adc
cmp
push
pushf
int3
xor
jo
sbb
(bad)
and
and
mov
scas
fsubr
or
jo
lds
fsubr
cli
lock
sbb
imul
adc
pop
scas
dec
movs
(bad)
(bad)
scas
jns
(bad)
pcmpeqd
leave
lods
push
inc
jns
xor
adc
mov
jno
pop
lea
loopne
sub
sbb
adc
inc
push
cdq
pop
jmp
sbb
not
push
inc
jnp
xchg
loope
and
fldenv
dec
ins
cli
pop
out
pop
jecxz
xor
add
in
stos
call
push
fidiv
mov
inc
mov
mov
in
shl
fcmovnu
cmp
aad
and
cmp
sub
pop
sahf
xor
inc
nop
test
jmp
or
data16
push
dec
nop
(bad)
xor
inc
mov
fisub
mov
ret
and
imul
aam
or
dec
add
push
in
mov
adc
xor
call
push
in
add
ja
js
jbe
push
imul
movs
jg
add
push
ret
je
or
xchg
pop
daa
dec
pop
cdq
loop
cmc
push
pop
pop
(bad)
push
push
mov
fs
and
jns
call
xchg
or
ss
cmps
movs
sbb
popa
nop
push
int
imul
leave
in
add
pop
repz
scas
xchg
loope
(bad)
popf
xor
mov
inc
or
sahf
ret
loop
popa
jno
mov
sub
aad
pop
xor
adc
inc
adc
cmp
movs
arpl
lods
shl
mov
fbstp
ret
cmp
or
pop
dec
aaa
(bad)
scas
sbb
jl
stc
movs
inc
bound
ja
js
adc
cmp
retf
jg
dec
out
aas
fninit
jecxz
dec
jp
in
fs
pushf
mov
cdq
add
jne
jecxz
and
scas
aaa
pop
test
push
rcl
ins
sub
mov
arpl
loope
(bad)
ss
push
or
icebp
mov
ja
xor
sub
xchg
pusha
add
or
sbb
inc
inc
cmp
pop
ins
pop
rcr
in
sti
mov
inc
xchg
fmul
bound
or
jmp
jmp
aaa
mov
cli
jmp
mov
jmp
ds
sbb
mov
hlt
int3
clc
out
push
ret
dec
adc
mov
xor
mov
inc
jmp
aaa
arpl
mov
add
cmp
ret
inc
mov
jbe
mov
mov
jns
sub
movs
leave
xor
out
cli
out
mov
(bad)
cmp
mov
inc
add
dec
mov
cmp
movs
jecxz
sbb
mov
mov
aaa
iret
or
fsubr
ror
daa
retf
cwde
jae
xor
pop
mov
pop
xor
mov
push
jbe
pop
and
fistp
in
cs
jne
pop
out
jns
lahf
xchg
aam
xor
jno
mov
xchg
rcr
jnp
adc
pop
push
pop
movs
push
fisttp
pop
xor
lods
jne
test
xchg
fucomp
ret
mov
pusha
retf
mov
xchg
loop
or
cmp
cmp
in
fdiv
dec
jae
dec
ja
fwait
pop
into
xor
inc
fisubr
jmp
fidivr
and
pushf
outs
ret
inc
aaa
inc
loop
push
or
iret
les
aaa
mov
pop
xchg
out
inc
push
sbb
or
inc
push
mov
jmp
dec
addr16
mov
aaa
hlt
mov
movhlps
stos
jge
daa
mov
jecxz
test
in
lock
shl
fidiv
pop
adc
or
inc
aaa
push
xchg
mov
sbb
sar
sub
cmps
xor
scas
mov
sbb
(bad)
scas
xlat
jl
mov
xchg
push
sbb
sub
xchg
jmp
mov
mov
ret
mov
mov
int
ror
test
call
test
push
inc
cmps
mov
mov
mov
cld
shr
outs
pop
jmp
cdq
and
ins
dec
add
je
xchg
in
mov
sbb
addr16
repz
popf
sub
jb
add
test
adc
dec
fcom
ds
adc
dec
test
push
dec
hlt
(bad)
dec
push
add
daa
mov
outs
mov
mov
aas
lock
push
and
rep
mov
and
mov
out
and
fchs
xchg
mov
jle
test
arpl
loope
mov
out
mov
je
pop
clc
aaa
out
cld
push
sbb
nop
push
mov
jle
call
stos
aad
shl
fstp
pop
jle
mov
push
loop
in
mov
sub
mov
cmovno
scas
icebp
cmp
xchg
fcom
add
mov
test
push
jno
cmps
inc
pop
fisubr
xchg
add
(bad)
cmp
sub
xor
and
mov
sub
outs
add
push
jmp
jo
xlat
inc
jp
repnz
pop
xor
cmc
(bad)
add
fcom
test
les
cmp
mov
stos
fsub
loope
xchg
(bad)
and
mov
cli
int
jmp
jle
xor
pop
or
stc
fsub
jmp
jmp
push
push
xchg
mov
pop
sub
push
sub
in
add
pop
sbb
and
inc
xor
sahf
pop
cmps
retf
sbb
jbe
sar
pop
xchg
sbb
(bad)
in
scas
jmp
xchg
pushf
add
add
sahf
pop
and
outs
out
or
in
loope
scas
clc
pop
fs
inc
sub
dec
and
mov
fadd
mov
retf
popa
jge
call
outs
sti
fsub
(bad)
mov
add
ss
mul
adc
xor
mov
lods
and
sub
sub
pop
jb
push
cdq
sub
retf
je
imul
mov
or
aas
jmp
jo
adc
add
fld
mov
cmp
push
push
(bad)
xchg
(bad)
sub
ins
stos
pop
stos
(bad)
into
or
xchg
fadd
aam
call
mov
pushf
sub
scas
lods
cmp
push
imul
and
in
repz
pop
jmp
add
ins
stos
rol
hlt
mov
push
outs
sbb
mov
push
jne
neg
fwait
hlt
(bad)
cs
scas
test
inc
cli
dec
iret
std
rcr
pop
jg
bound
add
je
adc
and
pop
jle
clc
(bad)
(bad)
in
test
gs
sti
mov
ins
fcomp
xchg
gs
cwde
mov
mov
mov
repz
mov
dec
les
xchg
call
mov
js
mov
lahf
xchg
and
xor
ret
into
mov
dec
cmp
outs
retf
sbb
mov
pop
add
mov
xor
lock
push
test
add
fsubr
test
sub
out
hlt
inc
std
bound
mov
adc
mov
mov
add
mov
pop
dec
push
sbb
mov
mov
mov
xor
jp
outs
jns
sbb
div
mov
ins
pop
or
mov
cmp
fsub
adc
shl
xchg
cmp
sar
mov
fmul
xor
jg
cwde
push
mov
data16
pushf
call
adc
aas
add
jne
adc
stc
and
xchg
outs
icebp
out
pop
mov
dec
or
sar
in
iret
dec
fdivr
jbe
inc
out
cdq
test
or
shl
adc
dec
xor
xor
in
jae
dec
dec
in
hlt
push
pushf
jmp
xlat
pop
fild
push
outs
into
mov
adc
sub
jns
mov
nop
xchg
mov
out
mov
scas
push
aam
loopne
cmc
jge
sub
pop
hlt
pop
cld
jle
xchg
loop
inc
jmp
movs
xchg
sub
sbb
mov
shr
jmp
stc
(bad)
jge
mov
dec
fild
add
push
push
or
sub
or
clc
loopne
call
pop
in
adc
in
adc
scas
dec
popa
ja
sub
(bad)
push
pop
loope
scas
jge
jne
xchg
int3
call
arpl
popf
pop
mov
imul
lods
ficom
pop
mov
adc
ja
pop
jge
inc
or
(bad)
push
loopne
adc
not
leave
clc
test
scas
push
fnsave
scas
cmps
push
and
dec
out
xor
shl
mov
popa
jbe
stos
sbb
into
or
sbb
test
popf
xchg
pushf
dec
mov
repz
repz
xchg
mov
pop
push
mov
and
push
xor
fadd
and
clc
jno
mov
cli
or
pop
fdiv
pop
cmp
cmp
cmp
fucomip
xor
lock
(bad)
or
pop
lea
cmp
sbb
add
fcmovu
mov
fnstsw
inc
cmp
xor
jae
neg
xchg
jp
mov
mov
inc
sbb
jmp
xchg
push
cld
ins
push
(bad)
xchg
pop
mov
out
mov
xchg
dec
ja
sbb
xchg
imul
sbb
pop
cmp
aad
sar
stos
jnp
ret
loop
ret
in
stos
je
mov
pop
mov
push
jmp
xchg
or
stc
out
daa
ret
push
fist
inc
lods
sahf
vpunpckhqdq
stos
adc
jg
repz
add
push
jbe
out
adc
push
inc
inc
shl
xchg
jbe
and
cmps
mov
xchg
mov
cli
adc
jnp
das
cs
xchg
add
inc
mov
sub
dec
mov
jp
or
xchg
sub
rcr
imul
cmp
jns
mov
lds
mov
push
jb
xchg
add
xchg
jbe
mov
das
dec
push
add
add
add
mov
sahf
inc
mov
pop
mov
(bad)
mov
int3
outs
xlat
gs
and
jmp
cdq
cmp
adc
pop
popf
pop
cmp
and
push
inc
scas
(bad)
push
push
push
cmp
or
gs
shr
pop
std
inc
adc
pop
sbb
or
lahf
mov
sti
or
out
jmp
js
shl
fxch
addr16
outs
es
mov
cmp
sbb
imul
scas
or
pop
ins
imul
mov
inc
bound
add
mov
outs
dec
jae
and
jnp
repnz
sti
mov
and
out
add
jmp
adc
cld
sti
pusha
sub
ja
out
iret
inc
sbb
cld
jle
aas
das
add
aam
mov
lahf
arpl
cmps
mov
xchg
jecxz
popf
jnp
(bad)
stos
push
and
call
retf
loope
or
in
cld
or
mov
and
push
int
cmp
add
addr16
xor
xchg
and
mov
daa
inc
mov
call
hlt
int3
popa
pusha
mov
xchg
outs
dec
pop
jbe
shl
ds
ins
das
cmp
xor
stc
test
mov
sbb
shl
adc
cmp
add
fimul
add
xor
les
mov
into
mov
or
retf
push
dec
and
mov
xchg
inc
call
inc
pop
icebp
mov
dec
pop
lock
mov
(bad)
push
sbb
and
xor
mov
outs
jo
out
dec
outs
cmp
rcr
pop
push
and
repz
or
mov
jns
out
shl
push
xchg
sbb
push
mov
mov
add
shl
scas
inc
push
or
lds
push
sub
aam
fsub
push
dec
push
jbe
in
lock
dec
out
shl
add
mov
and
adc
mov
mov
gs
jb
jecxz
adc
in
retf
enter
mov
xchg
cmp
push
dec
out
outs
xchg
inc
jmp
pop
inc
movs
stos
fwait
test
lock
or
mov
jle
ss
jl
or
dec
jae
add
jb
fs
dec
cmps
adc
or
xchg
fisubr
rcl
icebp
in
int
fidiv
jae
or
mov
cmp
jecxz
adc
(bad)
out
or
add
pusha
xchg
jg
lea
outs
dec
(bad)
sub
(bad)
dec
jmp
cdq
call
hlt
fs
and
lahf
sbb
mov
mov
out
mov
and
sub
cmps
(bad)
outs
ror
xchg
lods
hlt
inc
mov
(bad)
cdq
and
jp
mov
int3
lods
sbb
push
jecxz
dec
xchg
pop
add
adc
mov
icebp
mov
mov
cmps
jb
dec
push
aam
mov
adc
xchg
mov
nop
inc
pop
pop
cli
sub
and
inc
popf
(bad)
bound
xchg
jns
div
xor
ror
jg
and
inc
sub
in
ins
stc
out
pop
push
lds
imul
pop
and
and
mov
pop
addr16
ret
jmp
add
cmp
mov
fadd
jb
or
dec
cmp
mov
iret
call
stc
pop
daa
adc
add
or
fist
and
je
arpl
outs
sahf
ficom
adc
add
or
and
out
iret
jae
or
and
mov
retf
sub
add
add
loop
cmp
stos
in
jge
mov
fwait
pop
in
aad
out
lods
mov
dec
in
and
out
adc
jmp
rcr
movs
test
or
xchg
stos
addr16
push
cmp
ds
xor
mov
cli
inc
mov
sbb
sbb
push
add
lds
retf
jmp
push
nop
aad
xor
adc
std
cli
and
xor
pop
icebp
shl
add
push
push
lahf
and
nop
stos
leave
push
aad
pusha
xor
out
cmp
movs
test
dec
lahf
aam
je
(bad)
iret
jle
mov
or
xchg
into
mov
xchg
xchg
retf
into
jb
neg
retf
jnp
je
and
(bad)
clc
xor
jp
mov
cmp
cmp
out
push
ds
loopne
dec
enter
fiadd
mov
ins
push
pop
enter
retf
jle
add
pusha
mov
cmp
sub
cmp
xchg
loop
mov
aad
push
mov
pop
push
stos
and
pop
sbb
inc
mov
in
lsl
aad
push
sub
add
and
enter
stos
pop
stc
aas
mov
pusha
in
neg
stc
imul
dec
add
sub
outs
or
mov
pop
dec
mov
sar
cmp
in
mov
pushf
adc
xor
movs
add
fistp
in
pusha
cmps
push
cld
ja
lahf
sub
sbb
sti
lahf
sub
cli
pop
jg
lods
xchg
xor
jle
or
mov
in
xchg
jns
fdivr
push
mov
lods
adc
push
ret
jns
mov
mov
push
cmps
mov
add
or
scas
popa
icebp
adc
xor
push
ins
mov
out
imul
adc
sbb
pop
fs
cmp
push
dec
adc
sub
adc
pop
jle
mov
add
mov
popf
les
arpl
add
inc
or
mov
in
pusha
inc
sub
fisttp
dec
shr
movs
inc
xchg
es
xchg
add
add
in
xchg
inc
jo
add
(bad)
xor
xor
sar
mov
out
ds
adc
rol
inc
push
jl
jge
xor
pop
mov
pop
mov
xchg
mov
mov
jmp
(bad)
push
mov
jne
cld
cmps
push
fstp
inc
pop
cli
ja
aaa
rcr
mov
test
push
loop
push
js
test
movaps
push
(bad)
loop
push
pusha
fwait
jmp
addr16
and
xchg
mov
rcr
dec
cli
dec
fidiv
retf
pushf
or
das
mov
dec
cmp
mov
mov
push
lahf
jns
fmul
push
out
sbb
adc
jbe
cmp
inc
stc
mov
(bad)
pop
not
movs
add
jno
push
jp
dec
adc
hlt
xchg
pop
sub
sahf
sbb
add
mov
imul
out
out
and
jle
scas
push
data16
mov
add
xchg
pop
adc
jb
sbb
jle
pushf
popa
cdq
gs
pushf
outs
dec
mov
fistp
sbb
in
cmps
addr16
push
jge
xor
cmps
cs
not
nop
hlt
sti
retf
loope
stos
aaa
mov
push
retf
dec
mov
cmps
xlat
sbb
xchg
cmps
in
(bad)
in
(bad)
lea
pop
pop
loopne
addr16
cs
popf
test
enter
adc
cmp
jno
cmp
lea
(bad)
mov
ud1
jno
pop
push
sub
iret
xchg
sbb
mov
mov
das
mov
and
iret
sub
push
jle
mov
mov
add
jno
cmc
loope
dec
sbb
ret
push
mov
in
pop
push
cs
lods
scas
mov
mov
push
mov
test
loop
aam
mov
stos
arpl
test
dec
add
stos
jmp
cmps
push
fcmovbe
pop
cld
scas
mov
cmp
icebp
mov
jl
lds
mov
and
pop
add
sbb
sub
adc
loope
jp
jmp
mov
out
mov
and
ret
sub
push
ja
jnp
adc
sbb
aam
repz
add
push
jb
sub
outs
sbb
jmp
daa
aad
mov
xchg
xchg
jns
cdq
add
xchg
sti
repz
leave
mov
sub
lahf
inc
pop
in
fs
sbb
les
aas
fwait
xchg
cmp
addr16
scas
mov
popa
jmp
int3
or
dec
mov
sub
pop
addr16
add
pop
in
adc
or
pop
xor
cmc
mov
or
xor
sahf
imul
ret
inc
sbb
sub
loop
push
ins
pop
std
mov
idiv
gs
cmp
cmc
jecxz
fbld
lea
repnz
adc
(bad)
push
out
push
test
iret
(bad)
pop
neg
pusha
cmps
pop
push
cmc
fidivr
fs
fs
fimul
pop
in
(bad)
push
out
sbb
rcl
add
and
adc
pop
mov
push
pusha
(bad)
dec
cwde
enter
stc
xor
push
sub
je
xchg
jg
retf
mov
jno
jl
cdq
xor
fs
xor
inc
push
retf
fistp
mov
mov
jne
mov
cdq
popf
push
loop
push
mov
cmps
fsub
jp
call
ja
into
or
sub
shl
sub
fiadd
dec
fs
mov
fimul
mov
fmul
cmc
push
xchg
mov
dec
mov
sbb
add
push
test
mov
inc
mov
ss
and
and
add
mov
in
mov
std
dec
bound
mov
nop
aas
inc
push
movs
out
xchg
nop
cmp
or
sub
add
dec
dec
sub
mov
jle
fistp
xor
adc
aam
or
loop
std
mov
ins
js
retf
adc
or
and
stc
shl
jl
mov
mov
(bad)
jmp
repz
sbb
mov
mov
xchg
mov
dec
in
jle
gs
inc
mov
jno
inc
cdq
stos
xchg
(bad)
sbb
xchg
mov
cs
mov
cmp
cld
xchg
mov
aas
ins
cmps
ins
clc
sub
leave
and
pushw
mov
int3
push
fistp
xor
xlat
outs
test
add
ret
mov
ja
sub
sti
mov
inc
fidiv
ja
xchg
movs
retf
sub
pop
inc
std
mul
mov
mov
and
jle
mov
jle
movs
xor
jmp
push
mov
aaa
mov
mov
push
mov
(bad)
and
cwde
inc
add
jo
adc
call
(bad)
into
inc
(bad)
stc
push
mov
or
and
(bad)
int3
inc
inc
push
jmp
dec
sub
pop
push
or
mov
ins
fimul
lods
jl
mov
sub
cwde
xchg
jg
(bad)
xor
sbb
jge
xor
cli
xor
enter
out
lods
call
add
scas
pop
dec
daa
adc
jmp
push
std
sbb
inc
fwait
cli
jl
test
imul
adc
stos
xor
xor
call
fild
sub
sub
es
fmul
cmp
pop
fild
mov
rcl
icebp
les
pop
test
xchg
inc
stc
jl
mov
cli
(bad)
test
(bad)
pop
or
xor
add
inc
dec
or
imul
cmps
or
cwde
retf
imul
les
sbb
sahf
jle
xchg
push
xchg
in
enter
sbb
pop
mov
ds
adc
push
mov
mov
retf
test
(bad)
repz
xor
retf
in
sub
aas
sbb
pop
fst
movs
lahf
xchg
push
push
and
push
call
cmp
call
mov
movs
sub
mov
add
mov
mov
sbb
test
inc
dec
popa
lods
jg
sub
test
(bad)
jge
shl
loop
call
push
retf
or
loop
add
fcomp
xlat
mul
inc
es
xor
xchg
push
jo
mul
fcomip
fiadd
push
ret
xor
ret
clc
mov
cmp
(bad)
aas
call
adc
mov
mov
or
addr16
popa
iret
push
cli
adc
xchg
sub
xor
push
xchg
hlt
retf
fistp
sbb
je
cmp
imul
in
rcl
std
jne
jmp
sbb
push
gs
lds
repz
mov
pop
adc
cmc
in
arpl
jne
repz
jne
hlt
push
daa
in
lods
inc
mov
mov
popf
push
mov
stos
jmp
push
adc
sbb
mov
outs
jo
mov
jb
test
or
data16
xchg
(bad)
add
jb
push
pop
daa
(bad)
out
stc
mov
rol
pop
mov
lock
pop
xchg
cli
jmp
push
xor
cmp
sbb
cmc
cli
dec
and
xchg
push
jp
fucomi
mov
xchg
test
stc
and
(bad)
fsubr
add
loopne
inc
jae
(bad)
loopne
fnstcw
div
out
add
xor
fsub
lock
xor
shl
stc
add
cli
enter
cs
mov
xchg
out
push
dec
pop
pop
and
jl
in
mov
inc
cld
xor
addr16
in
ret
inc
add
sub
(bad)
push
push
cmp
ds
sbb
sti
and
fbstp
je
int3
push
lods
test
and
push
sub
es
call
sbb
ffreep
gs
shl
std
out
sbb
inc
dec
mov
call
cmp
iret
scas
popa
ret
shl
pop
pop
sub
sahf
loope
push
les
cmp
sbb
and
stos
dec
jns
sub
neg
push
add
and
xchg
push
aad
cld
fs
call
std
xor
sbb
imul
dec
jp
repnz
sahf
xor
popf
mov
mov
push
out
mov
(bad)
test
adc
mov
sub
inc
cmp
fld
mov
js
fstp
lahf
mov
and
(bad)
iret
adc
jmp
and
pop
div
popa
pushf
pop
or
pop
xchg
icebp
and
xchg
(bad)
jecxz
imul
fs
adc
scas
or
inc
inc
dec
push
rcl
inc
adc
dec
or
jecxz
enter
fdivr
icebp
ja
inc
std
fwait
popf
popf
adc
or
ret
int
mov
das
std
mov
pop
mov
pop
sbb
ja
mov
hlt
(bad)
out
xchg
cs
sbb
xchg
outs
or
out
out
jecxz
jg
shr
mulps
inc
jne
dec
sub
mov
rdtsc
mov
ret
mov
(bad)
stc
and
popf
mov
(bad)
mov
add
out
mov
out
ja
sub
adc
mov
es
and
outs
test
sbb
or
(bad)
jecxz
mov
xor
out
cmp
adc
mov
cdq
mov
lods
mov
mov
cmp
cdq
adc
push
shl
push
repz
push
in
pop
sbb
mov
mov
cmp
out
shl
mov
jns
test
sbb
pop
fisttp
lods
ss
cmp
or
lods
in
sub
cmc
mov
test
mov
popa
scas
call
push
mov
dec
cmp
call
dec
scas
and
bound
or
pop
inc
mov
or
or
icebp
mov
mov
je
pop
aad
repz
adc
retf
nop
dec
add
mov
stc
fcomi
addr16
iret
sbb
bound
xor
fidiv
jp
mov
adc
std
cmps
mov
jnp
and
pop
mov
leave
mov
aam
jle
out
outs
pop
loope
popf
leave
ins
pop
in
enter
xlat
cld
out
sbb
xor
inc
cmp
mov
adc
mov
mov
jb
push
test
jge
cli
mov
cmp
sbb
pop
sbb
imul
cmp
sbb
inc
aaa
xchg
dec
loope
aas
or
xor
fstp
dec
dec
xchg
std
repnz
push
(bad)
lea
sti
and
push
push
test
push
leave
in
pop
dec
shl
movs
xchg
push
mov
or
or
xchg
cmp
mov
aaa
fwait
ds
ret
dec
movs
push
aad
ja
xchg
out
or
sbb
std
mov
sbb
push
ficomp
lods
out
xchg
sub
jmp
mov
les
lea
popa
out
and
cmp
imul
and
out
dec
jmp
pop
sbb
rcr
cdq
bswap
push
push
ret
ds
push
jge
cs
adc
loopne
cwde
pusha
ins
in
mov
adc
push
cmps
fwait
bound
sub
jae
ror
rcl
data16
shl
mov
inc
call
icebp
add
(bad)
adc
mov
pop
test
rcl
pop
inc
or
aam
mov
pop
inc
pop
adc
mov
repz
jmp
icebp
ret
sbb
xchg
rcr
fimul
cmp
in
aas
jl
push
mov
rcl
sub
mov
(bad)
iret
lahf
mov
aam
mov
sbb
outs
and
sub
cmps
fst
out
dec
push
or
add
inc
cmp
jno
sub
fsub
xor
mov
or
(bad)
in
arpl
push
pop
cmp
stc
pop
sbb
adc
or
aas
gs
(bad)
dec
js
ja
cwde
fwait
pop
rcr
popa
jmp
ficom
aad
adc
fnsave
mov
lahf
jae
(bad)
repnz
outs
aad
pop
push
mov
add
xor
xor
xchg
repz
lock
cli
test
daa
loopne
retf
repz
fs
(bad)
lea
xchg
mov
push
jle
fcom
jno
imul
jge
ret
jnp
test
xor
inc
cli
loopne
push
push
cld
xchg
mov
adc
cld
push
ror
outs
add
pop
add
push
sti
push
sbb
xor
cmp
dec
pushw
xchg
add
outs
jmp
mov
sub
leave
push
cmp
(bad)
cmp
pop
xor
and
and
arpl
xchg
dec
lods
imul
xchg
sbb
movs
and
push
gs
mov
jl
pop
cmp
call
inc
cld
repz
out
adc
adc
push
(bad)
adc
add
int
jno
(bad)
jmp
xchg
and
mov
fs
sub
xor
(bad)
push
push
ret
movs
jl
xchg
sub
push
fwait
in
ret
(bad)
sbb
repz
(bad)
popf
int
add
cmps
push
cmps
fucomip
mov
icebp
in
mov
lods
jmp
add
adc
mov
call
pop
sbb
mov
scas
scas
xor
popf
fs
sbb
and
push
xchg
test
push
ss
xchg
in
test
shr
sbb
cld
sbb
mov
cmc
cmps
cmp
in
jns
fcomp
neg
iret
push
fsubr
or
js
lahf
iret
jns
push
das
push
into
xor
add
mov
cmp
rol
hlt
push
(bad)
and
inc
fs
add
fidivr
test
js
les
out
jge
jb
jns
scas
pop
inc
lods
xor
std
popa
mov
daa
ret
sbb
adc
add
aad
ds
gs
xor
mov
out
xlat
jge
mov
dec
data16
pop
mov
fldenv
int3
dec
jle
arpl
jo
mov
mov
mov
es
jle
sbb
jae
test
sub
dec
leave
inc
les
cmps
out
ficom
mov
sub
repz
cmps
ins
fs
sub
jl
in
ins
loop
mov
mov
cs
addr16
fs
adc
fsubrp
adc
adc
fiadd
push
ret
es
mov
xchg
cmp
in
push
cmp
dec
lods
(bad)
adc
sar
iret
jne
inc
aaa
add
push
ins
retf
jb
cmp
pop
sti
int3
xchg
sahf
inc
or
outs
mov
adc
dec
fldlg2
push
hlt
push
lds
and
adc
add
ds
loope
jo
outs
cmps
and
repz
out
arpl
iret
scas
or
mov
pusha
repz
cmp
popa
int
scas
movs
sbb
out
push
mov
mov
je
lock
pop
dec
pop
pusha
dec
test
mov
aam
test
pop
pushf
in
dec
retf
xchg
mov
in
(bad)
scas
mov
push
or
adc
ins
hlt
and
add
repz
dec
clc
enter
sub
mov
pop
scas
popa
jmp
pop
jne
jb
lea
popa
lea
jnp
mov
mov
out
(bad)
push
mov
lock
cwde
mov
call
sub
jg
addr16
adc
in
lea
adc
fstp
push
pop
rol
mov
into
lods
gs
ficomp
cmc
stos
daa
and
in
sahf
je
add
ffreep
dec
in
pop
ror
mov
cmps
xor
mov
cld
scas
rcl
or
imul
cmp
leave
in
jmp
test
add
dec
push
add
sub
fstp
stc
jae
out
push
ins
push
or
pusha
push
adc
retf
test
xchg
ret
xor
add
stc
test
mov
push
or
mov
shl
dec
dec
xchg
cwde
add
bound
aaa
push
aad
dec
loop
fistp
inc
push
sti
stos
js
std
sahf
add
or
sub
nop
ret
and
dec
inc
xor
sub
and
adc
aas
out
outs
jb
push
add
inc
pop
aad
dec
(bad)
xchg
add
sbb
xchg
shl
xchg
test
add
fmul
jle
mov
es
sbb
popf
sti
dec
sti
sub
stos
rcr
adc
mov
push
imul
aad
pop
and
cmp
jl
dec
rol
and
jg
jmp
daa
iret
aaa
out
mov
dec
cmps
dec
sub
rol
pop
sbb
push
test
mov
mov
das
test
mov
cmps
ja
mov
lods
out
stos
arpl
dec
sub
add
retf
dec
inc
ds
pusha
push
jmp
retf
gs
inc
popa
scas
jmp
push
fwait
mov
arpl
jp
and
rcl
gs
jne
sub
ret
sbb
stc
das
push
push
jge
rcr
sahf
cmps
and
(bad)
cmp
inc
pop
jl
sbb
sbb
push
shl
jne
ret
jmp
loope
jle
push
push
mov
fld
push
mov
cdq
in
aaa
fistp
repz
pop
in
dec
or
pushf
test
mov
and
aas
call
aam
dec
adc
xor
push
(bad)
mov
add
sbb
pop
int
in
inc
aas
jnp
ins
jno
pop
xchg
sbb
rcr
cmps
sbb
inc
xor
xlat
and
(bad)
mov
push
cmp
pop
cdq
cli
ffree
add
jmp
mov
sub
sub
outs
pop
lock
add
nop
cli
pop
pop
adc
jb
sbb
into
loopne
push
sbb
in
mov
xchg
or
xchg
loop
push
loope
jb
jle
clc
addr16
mov
movs
add
sub
push
dec
nop
jnp
imul
mov
jno
jmp
inc
or
sub
jle
xchg
or
sbb
sub
or
mov
cld
dec
or
mov
pop
add
shr
fisubr
mov
add
sub
mov
out
pop
adc
sub
out
fst
jp
aad
inc
iret
add
verr
ret
sbb
imul
fxch
cld
and
movs
xchg
jo
mov
jecxz
jns
fnstcw
mov
or
sub
(bad)
les
mov
shl
sbb
out
xchg
push
in
out
xor
xor
sub
pop
lahf
and
dec
fdivr
dec
xchg
aad
popf
ret
push
lods
or
push
shl
pop
xor
retf
hlt
(bad)
jmp
in
and
jbe
movs
mov
iret
es
xchg
xchg
out
mov
or
nop
fidivr
jo
mov
cmp
gs
push
fistp
(bad)
cli
cld
inc
jge
jo
fsub
mov
push
ins
ins
and
not
adc
aad
and
adc
sbb
pushf
push
in
scas
push
mov
mov
(bad)
cmp
mov
cmp
cli
cmp
cmp
scas
hlt
and
fidivr
mov
dec
or
xor
dec
hlt
(bad)
push
xor
loope
rcr
out
movs
or
scas
pop
pusha
sub
xchg
cmp
fcom
out
inc
dec
call
or
adc
xor
xor
movs
int
mov
into
mov
mov
das
lock
loopne
test
push
popf
mov
add
sub
push
jle
ficom
jae
fild
ds
lock
pushf
outs
outs
sbb
pop
leave
pop
cmp
sti
aam
call
add
adc
in
into
jecxz
adc
jbe
push
cli
cmp
add
outs
popf
sbb
ds
xlat
movs
xor
sbb
and
cmps
cmp
retf
popa
and
mov
xchg
jb
js
pop
popa
mov
test
out
inc
mov
rcr
repnz
mov
retf
stc
pop
jg
ficom
ret
leave
xchg
push
sub
push
inc
add
hlt
sub
xchg
test
loope
push
xor
pop
mov
jp
mov
sbb
dec
jle
cmp
loop
jmp
call
loope
xchg
test
xchg
std
cmp
pushf
mov
xchg
stc
scas
and
push
dec
out
cs
push
int
xor
pop
fisttp
or
xchg
mov
sti
dec
sbb
fs
xchg
push
lahf
sub
(bad)
rcl
call
(bad)
cdq
in
pop
std
cdq
test
ins
sbb
push
pop
mov
mov
test
out
jne
adc
hlt
mov
adc
add
and
add
leave
int3
push
hlt
adc
test
xor
cdq
fnstenv
xchg
iret
and
(bad)
mov
xchg
push
xchg
das
test
push
je
mov
sar
xchg
jecxz
or
cli
dec
sub
or
mov
bound
mov
xor
dec
pop
lsl
xchg
in
mov
imul
push
rcl
pop
je
jbe
xchg
(bad)
lods
imul
dec
mov
jle
push
adc
shl
xor
fs
xchg
imul
int3
es
add
ret
push
fld
inc
mov
sbb
in
dec
daa
mov
movaps
popa
xor
(bad)
out
(bad)
lock
test
sbb
push
jmp
mov
(bad)
scas
mov
sbb
(bad)
aaa
(bad)
mov
add
cwde
sbb
mov
mov
push
xchg
mov
int
inc
ss
dec
retf
out
frstor
inc
pop
push
xor
das
shl
(bad)
je
into
ins
das
xor
vpsubusb
add
out
xlat
jle
dec
cmp
stos
add
popa
cmp
out
js
icebp
push
xor
jnp
mov
(bad)
xchg
icebp
js
addr16
push
aam
ja
out
ins
adc
jl
mov
mov
pop
sbb
adc
stc
cmp
mov
fs
imul
mov
adc
sub
iret
cwd
ja
adc
cld
adc
mul
inc
iret
xchg
mov
cmp
add
pop
hlt
aam
mov
pop
(bad)
xchg
lea
jb
ss
call
test
xchg
and
ret
push
pushf
inc
mov
je
lods
jbe
xchg
mov
mov
test
sar
jnp
ret
icebp
push
addr16
jl
pop
pop
rol
nop
dec
mov
(bad)
mov
cmp
mov
nop
stc
push
jno
in
imul
add
add
(bad)
in
int3
cld
xchg
dec
xor
cmp
dec
ins
js
push
push
enter
daa
cmp
cmp
adc
jl
xchg
pop
daa
cdq
clc
retf
mov
pop
aam
push
cmp
or
mov
aas
popa
sub
or
jp
mov
mov
movs
sub
jno
mov
cmp
mov
mov
nop
and
mov
add
sbb
adc
test
push
adc
nop
pop
mov
xchg
or
dec
pop
lock
or
mov
fnsave
push
mov
mov
push
mul
sbb
add
in
jmp
jbe
out
repnz
xchg
iret
jmp
mov
pop
sahf
icebp
sbb
stos
cmp
shr
dec
test
neg
or
leave
pop
mov
mov
clc
ret
mov
cmps
sbb
pusha
and
jo
jae
cmc
pop
xchg
les
aas
movs
imul
mov
mov
cdq
jg
dec
lds
push
cld
les
aam
pop
mov
jl
ret
xor
xrelease
add
ds
enter
js
call
xchg
hlt
inc
cmps
add
aas
movs
dec
sub
fcomp
es
adc
jmp
sub
(bad)
cli
test
iret
push
push
jno
pop
jnp
xor
pop
ss
adc
or
pusha
out
bound
adc
not
aam
sub
push
mov
(bad)
or
mov
cmp
sahf
mov
mov
push
xchg
xchg
mov
add
cmp
lds
sbb
fs
gs
scas
(bad)
div
mov
mov
xchg
xchg
je
jecxz
test
gs
imul
mov
scas
dec
add
inc
lea
rcr
mov
xchg
cmp
inc
xor
adc
and
(bad)
push
mov
mov
loope
call
ret
sub
fcom
pop
pop
push
pop
std
imul
mov
ins
ret
sub
xchg
ficom
cli
xchg
pop
cmp
inc
adc
sti
dec
push
push
dec
fcomp
xor
xor
mov
rcl
inc
sahf
cmc
out
and
ficom
xchg
and
adc
int
fcomip
push
mov
ficomp
cmp
not
sbb
inc
mov
mov
cmps
and
aam
dec
loopne
and
fldcw
cmp
push
mov
xor
or
mov
adc
push
mov
mov
(bad)
fiadd
jo
cmp
dec
data16
enter
ja
push
fnstcw
pandn
xor
sub
sub
xlat
stos
xchg
pop
inc
(bad)
pop
inc
cmp
jo
int3
jne
adc
mov
adc
jmp
mov
iret
cdq
arpl
pop
xchg
xor
xor
call
push
and
push
js
jmp
sbb
sbb
lock
adc
push
dec
mov
enter
adc
or
int
and
push
cmp
cli
ret
adc
shr
push
cmp
not
inc
cmc
(bad)
movs
cmp
inc
popa
mov
push
lea
or
add
sbb
mov
sahf
outs
cwde
cmc
pop
icebp
js
jmp
xor
pop
xchg
cmc
sub
pushf
test
dec
pop
xchg
popa
push
mov
test
repz
adc
mov
mov
and
pop
sti
adc
dec
jbe
mov
mov
or
mov
jecxz
sbb
push
cdq
retf
add
rol
mov
pop
add
test
xchg
repnz
mov
add
das
loope
inc
xchg
mov
arpl
add
es
call
outs
aam
loop
lea
jno
dec
adc
and
inc
cmp
nop
mov
pop
sbb
js
sbb
pop
pop
idiv
xchg
fs
xor
mov
mov
xor
inc
dec
lods
mov
popf
fdecstp
call
inc
bound
out
clc
retf
jmp
sub
sbb
cmp
push
(bad)
push
call
ficom
jle
in
dec
icebp
jnp
js
adc
outs
mov
push
iret
adc
fidiv
jecxz
mov
mov
push
std
jb
test
test
jb
xchg
popa
dec
xlat
lea
jno
adc
xchg
sbb
repnz
loope
mov
rcl
test
aad
inc
and
ds
pop
and
and
es
adc
pop
mov
aaa
sub
pop
ficomp
iret
out
out
fldenv
and
dec
enter
clc
xchg
xor
and
sub
cmps
push
sbb
out
jmp
out
jnp
mov
in
ret
in
ret
dec
sub
or
in
inc
fbld
in
and
dec
sbb
sti
and
pop
imul
fs
push
mov
push
pop
lds
dec
mov
imul
jnp
test
inc
cmp
inc
aad
pop
xor
sbb
(bad)
cmps
adc
outs
dec
les
mov
cld
pop
push
js
pop
outs
rol
add
jmp
rcr
jne
xor
xor
xor
sub
int
jmp
in
mov
leave
mov
adc
or
in
dec
adc
fwait
fwait
arpl
mov
sub
mov
clc
push
cli
stos
stos
in
fs
ret
sbb
sbb
xchg
pop
pop
mov
rol
jo
sbb
cmp
cmp
bound
jp
xor
fs
ja
jae
loopne
ret
in
or
(bad)
outs
psubsw
sub
mov
push
xchg
pop
cmp
add
mov
and
add
sti
mov
jb
jecxz
cmp
lea
loopne
inc
in
push
add
cmp
dec
imul
test
add
add
(bad)
rol
pop
xchg
cli
cmp
dec
rcr
ja
(bad)
loop
je
mov
sbb
and
xchg
aaa
ins
ins
ret
(bad)
gs
jnp
push
pop
lods
stos
cdq
je
das
sub
mov
test
cli
lods
fst
js
fild
push
or
push
mov
push
xlat
jno
dec
sub
rcl
sbb
or
aad
jmp
sbb
ins
mov
inc
cmp
mov
inc
xor
and
(bad)
pop
pop
inc
dec
push
mov
repz
pusha
mov
loop
add
retf
xor
(bad)
(bad)
mov
into
outs
neg
mov
imul
mov
fst
or
inc
or
cli
mov
add
mov
mov
xor
xchg
pusha
ret
cs
scas
and
sub
aas
dec
test
jmp
aas
inc
call
and
or
push
clc
pop
les
in
push
cli
mov
push
mov
std
sub
cmp
pop
push
adc
(bad)
pop
sub
sar
jmp
or
out
and
adc
in
les
xchg
lahf
fist
aaa
mov
push
inc
and
xlat
fist
sbb
test
jmp
sub
xchg
arpl
mov
loopne
repnz
adc
adc
mov
outs
jl
jle
jecxz
push
popa
add
cld
lds
jle
aaa
dec
push
les
scas
or
mov
aaa
push
std
jo
xchg
(bad)
cmp
mov
cld
cmp
push
loopne
jl
int
jno
pop
call
pop
cmp
popa
mov
call
stc
neg
repz
pop
call
daa
inc
sti
shl
add
iret
xchg
push
cmp
jg
cs
push
icebp
push
push
mov
adc
pop
pushf
mov
adc
jp
adc
cmp
jecxz
or
xchg
sub
scas
in
jg
mov
fimul
clc
dec
jbe
xor
(bad)
pop
dec
ds
sti
adc
lods
cmp
xchg
aas
ja
adc
ds
add
or
xchg
bnd
xlat
nop
and
add
fild
adc
cmp
(bad)
sbb
retf
cmp
inc
sbb
rcr
sbb
int
rcr
ins
rol
cdq
fwait
and
xor
dec
int3
mov
pop
clc
loopne
std
js
inc
addr16
call
cmp
add
mov
mov
ret
dec
cs
jle
les
loopne
sub
or
aam
test
cld
ficomp
jle
fild
sbb
stc
and
mov
aas
cld
jo
push
adc
cs
into
and
iret
mov
les
fisubr
mov
pop
mov
pop
outs
shl
or
xchg
das
or
ret
jbe
mov
jmp
xor
icebp
jo
jl
in
ja
inc
fnstcw
inc
(bad)
xchg
(bad)
pusha
jb
cli
xor
lods
dec
and
mov
clc
call
sbb
test
mov
imul
test
hlt
mov
test
xlat
xchg
add
movs
rcl
cmp
jle
cmp
lds
bound
out
loop
lds
mov
call
clc
les
cld
loop
js
jp
xchg
shr
and
xchg
mov
mov
stos
repnz
push
dec
mov
xor
jmp
jp
xor
mov
adc
stos
jmp
(bad)
retf
ret
out
pushf
loopne
pop
fdivr
out
in
jnp
adc
jl
mul
scas
xchg
mov
retf
pushf
sbb
jno
scas
adc
jp
sbb
dec
mov
test
sbb
shr
movs
xor
mov
xchg
(bad)
push
stos
push
les
push
cmps
sbb
cmc
mov
aaa
fiadd
jmp
pop
mov
ja
and
pop
mov
and
push
add
jbe
popf
and
outs
mov
sbb
jmp
ror
adc
dec
iret
jno
push
stos
lock
lahf
pusha
mov
imul
aas
test
sub
mov
int
xor
cwde
fst
sub
and
inc
mov
or
das
jmp
mul
pop
jbe
loop
ret
fwait
in
cmp
mov
sub
dec
mov
movups
aas
add
ftst
xchg
and
mov
inc
fucomp
push
(bad)
jmp
mov
xchg
jl
lods
(bad)
(bad)
jmp
dec
cmp
je
fidiv
imul
xchg
mov
je
inc
out
(bad)
mov
sub
or
push
sub
je
mov
jno
movs
js
out
pop
pop
xor
fistp
mov
dec
lods
into
or
mov
dec
cmc
ins
fst
pop
out
jne
xchg
and
push
sub
dec
aas
mov
ins
call
lock
dec
gs
test
push
imul
mov
pop
pop
jbe
fcom
iret
cmp
xchg
jne
mov
test
clc
xchg
fwait
cmp
sahf
xchg
lods
test
into
cmp
dec
jge
lea
jmp
pop
mov
xchg
inc
dec
xchg
imul
(bad)
jne
mov
xor
arpl
and
sub
dec
aam
jge
sub
and
lahf
mov
and
inc
jg
in
outs
icebp
mov
clc
adc
sahf
loop
std
call
shl
(bad)
mov
cmp
inc
cmp
nop
jmp
inc
mov
push
pop
xchg
(bad)
fs
and
mov
rol
xor
jne
adc
pop
rol
shr
imul
inc
mov
cwde
push
in
mov
push
mov
cdq
test
push
pop
mov
inc
int
cs
and
mov
push
or
ret
test
loope
ret
lds
add
mov
addr16
aas
xor
ss
stos
sub
fild
mov
inc
fwait
jecxz
push
pop
sbb
mov
pop
pop
mov
cwde
jb
dec
mov
xchg
xchg
leave
movs
int
js
add
jmp
jge
lea
and
xchg
push
lahf
xor
cmps
ret
and
imul
outs
add
pop
inc
or
mov
out
xchg
gs
push
lds
lea
jns
dec
call
mov
xchg
dec
mov
pop
mov
push
addr16
mov
sub
sub
stc
jnp
push
add
(bad)
jns
(bad)
(bad)
jmp
mov
jb
xor
mov
jne
cld
adc
xor
push
mov
mov
add
or
das
sub
pop
cmp
push
mov
xchg
mov
lahf
xor
add
ret
popf
xchg
addr16
jnp
mov
into
adc
out
inc
retf
sub
cdq
xchg
lds
xlat
sbb
xlat
xchg
mov
dec
icebp
sub
aas
cmps
mov
pusha
mov
cs
fs
xor
pop
cdq
outs
outs
out
and
ds
pusha
jl
rcl
(bad)
mov
test
add
mov
popf
and
adc
adc
jo
pop
div
(bad)
rcl
(bad)
or
scas
icebp
imul
inc
adc
push
push
mov
and
dec
sahf
pop
aas
pop
call
jmp
lods
scas
adc
ins
cmp
mov
in
dec
xor
dec
lea
xor
push
int
sar
jg
mov
hlt
lods
and
(bad)
in
xchg
arpl
test
fld
push
ins
fldcw
inc
test
xchg
jecxz
sub
mov
xchg
or
test
sub
mov
mov
sbb
rol
sti
clc
jmp
adc
fadd
lea
push
or
scas
dec
movs
sbb
dec
mov
ja
mov
sbb
aaa
push
inc
icebp
pop
fmul
ins
(bad)
fidivr
and
jno
xchg
hlt
and
cmp
(bad)
data16
and
(bad)
cmp
mov
xlat
or
mov
adc
push
inc
push
out
push
ror
nop
dec
gs
or
ret
sub
movs
mov
lods
push
dec
fsubr
sahf
les
mov
neg
mov
cs
and
pop
nop
cmp
inc
sbb
sub
int3
pop
cmp
leave
jle
add
push
adc
mov
adc
sub
lea
test
cmps
push
loope
cmp
or
and
aam
ds
inc
repnz
xchg
cmp
stos
fistp
adc
(bad)
sti
je
adc
test
icebp
pop
fisubr
mov
stos
stos
and
sbb
xchg
fimul
pusha
sbb
rcr
in
fldcw
push
push
rcl
jns
mov
xchg
retf
sbb
and
fadd
add
icebp
out
mov
jmp
mov
int3
or
sub
sbb
sbb
cmc
stc
push
enter
or
daa
xor
cmps
mov
sub
mov
mov
les
jno
jmp
adc
loope
or
push
fldenv
add
pop
dec
lds
xor
jle
test
dec
out
pop
mov
icebp
xlat
lahf
pop
ss
or
pop
xchg
xor
lds
test
mov
sbb
cmp
xchg
fbstp
out
neg
sub
push
jmp
mov
cs
sbb
nop
jmp
inc
sti
adc
and
fimul
adc
sub
add
(bad)
sub
mov
dec
ret
(bad)
sahf
hlt
mov
mov
clc
sbb
ret
inc
xlat
into
inc
mov
inc
inc
imul
int
inc
cmp
stc
movs
mov
add
mov
and
imul
add
xlat
mov
lods
mov
jbe
ret
jge
ins
sub
in
xchg
dec
sti
jecxz
out
push
and
jecxz
out
popa
cli
call
mov
out
pop
sbb
std
push
sub
jns
sbb
sub
in
call
loope
mov
sbb
adc
data16
movs
inc
test
xchg
xchg
mov
add
ins
out
push
jno
call
cs
push
dec
sub
mov
pop
and
adc
jne
xchg
push
jnp
pusha
jmp
das
add
mov
jno
sub
jp
mov
xor
or
addr16
and
mov
xor
lahf
cdq
dec
or
mov
imul
fstp
jecxz
pop
xchg
mov
adc
xchg
in
iret
mov
and
mov
pusha
out
push
sub
pop
push
hlt
cmps
out
lahf
or
vmread
lahf
clc
cmps
addr16
inc
push
loope
mov
shl
xor
mov
fild
push
std
cld
or
and
push
icebp
mov
pop
std
lds
pop
mov
xchg
mov
inc
pop
cmp
xchg
icebp
pop
std
push
pop
scas
(bad)
jecxz
loop
jmp
in
nop
aad
mov
jbe
ins
ds
and
mov
xchg
cmp
movs
ss
(bad)
xchg
in
cmc
lahf
mov
fld
std
push
ss
pop
mov
xchg
loop
int
out
out
lods
add
in
sahf
pusha
mov
pop
cmc
aam
push
out
push
pop
sbb
ins
cwde
int
call
mov
push
dec
add
test
js
(bad)
jmp
ret
call
ss
loope
fld
mul
fdiv
push
ret
jp
lahf
shl
push
shl
leave
xchg
jmp
pop
or
or
sbb
mov
out
cs
call
ds
sub
test
inc
adc
sar
fldenv
and
outs
push
push
cmp
fwait
sub
into
push
adc
sbb
fild
xor
out
shr
call
sub
cmp
pusha
bound
aaa
adc
inc
mov
add
in
outs
aas
adc
clc
daa
jmp
aas
loopne
jb
jns
cld
inc
addr16
cmps
pop
push
std
retf
sub
sub
or
mov
or
arpl
(bad)
imul
adc
or
pop
ret
outs
imul
int
push
retf
and
mov
xor
jns
int3
mov
imul
mov
cpuid
lds
ss
and
shl
mov
mov
cs
int3
push
sbb
test
or
sbb
push
lock
pop
xlat
mov
call
mov
jae
pop
jnp
fld
aas
stc
dec
ins
sub
sub
sbb
or
xor
test
aam
adc
xchg
jne
pushf
jnp
lods
add
inc
in
pop
sub
or
push
ds
mov
xchg
in
cld
push
movs
adc
out
cmp
stos
cmp
add
inc
out
sbb
cmc
mov
mov
pop
sub
push
add
jge
sub
mov
out
xchg
adc
dec
mov
adc
jg
dec
icebp
sbb
(bad)
push
jmp
xor
jp
push
and
shl
arpl
into
cdq
xchg
pop
retf
xor
or
fstp
dec
push
adc
xor
int
jo
xchg
xor
cmp
xchg
sbb
add
(bad)
stos
adc
sbb
je
jecxz
mov
je
mov
js
lea
jbe
cwde
pop
rcr
mov
pop
clc
out
pop
inc
and
xchg
leave
cmps
and
lods
lods
xor
fisttp
add
mov
(bad)
in
jge
and
push
lods
xchg
mov
shr
leave
inc
sbb
fldenv
cmp
fdivrp
out
push
adc
mov
ret
inc
data16
cmps
dec
dec
xor
icebp
jae
das
or
and
push
mov
int3
sub
jne
sahf
(bad)
cmp
int3
lock
xchg
pop
icebp
iret
adc
test
mov
xor
xchg
loope
call
sub
or
cmp
sahf
loop
xchg
cmps
sbb
lea
fiadd
sbb
fnstcw
sub
cli
jge
mov
popa
push
popa
lock
in
add
jg
push
int
mov
les
popf
fmul
(bad)
xor
xchg
lock
xor
clc
push
and
mov
push
bound
fwait
or
xor
icebp
popf
xor
push
js
add
jnp
mov
adc
or
hlt
nop
arpl
fcmovnb
(bad)
sbb
sbb
or
dec
mov
clc
or
repnz
and
je
adc
in
adc
test
inc
imul
pop
dec
stos
xchg
arpl
or
add
inc
push
pop
leave
xor
dec
lods
mov
dec
mov
pop
mov
mov
fdivp
xchg
push
in
jbe
and
inc
int3
add
inc
in
pop
sub
jp
daa
mov
rcl
rcr
shl
(bad)
fisubr
repz
jns
xchg
aam
aaa
les
ins
outs
fwait
add
pop
fsubr
mov
movs
hlt
hlt
pusha
test
popa
push
xor
idiv
pop
pop
fdivr
test
push
sbb
out
imul
push
ret
jno
js
xor
cld
in
icebp
adc
loope
mov
paddq
xchg
test
or
test
and
outs
add
pop
cmc
xlat
and
xchg
sub
sar
shl
out
jo
push
leave
movs
sbb
lods
js
bound
jp
sub
push
xor
je
push
fcmovne
repz
adc
jnp
rol
mov
rcl
fild
dec
mov
sub
push
gs
repz
xchg
mov
fucom
test
cli
in
xchg
(bad)
popf
int3
cmovle
xchg
push
test
push
shl
leave
pop
icebp
sbb
int3
dec
or
inc
jb
(bad)
addr16
jecxz
lds
jmp
cmps
shl
fild
jne
mov
loop
xlat
fdivr
sahf
ret
or
and
or
or
sar
hlt
sbb
mov
mov
pop
sub
xlat
out
mov
cmc
mov
push
pop
repnz
shr
(bad)
fwait
jge
xor
scas
sub
(bad)
in
xor
inc
pinsrw
inc
sbb
rcr
jbe
sbb
xor
(bad)
jg
jns
scas
pop
std
ret
xor
xchg
jno
or
icebp
or
dec
push
jl
(bad)
mov
js
jae
(bad)
push
ror
cdq
sbb
sub
std
cmc
cld
push
call
ret
dec
das
loope
mov
test
jne
mov
dec
or
xor
sbb
adc
cmps
push
mov
lods
xor
dec
stc
sahf
popa
scas
es
mov
inc
xchg
fiadd
inc
push
xchg
in
or
fwait
sub
jbe
jae
jo
xchg
cld
retf
mov
cmc
test
ficomp
mov
push
repz
push
imul
jmp
sti
jb
dec
(bad)
fnstsw
rcr
add
or
add
xor
je
inc
dec
pusha
repz
lods
adc
sub
mov
ret
jmp
mov
push
leave
lods
mov
mov
ss
sbb
push
sbb
mov
shr
adc
xchg
es
inc
xor
mov
add
xlat
in
jns
scas
ds
mov
(bad)
(bad)
por
popf
js
cmp
sub
les
push
inc
jns
push
out
mov
mov
mov
imul
es
add
and
mov
arpl
pop
mov
xchg
iret
inc
push
cwde
in
loopne
ficom
sbb
call
add
add
mov
inc
fucomip
pop
sbb
cwde
inc
mov
iret
mov
out
std
popa
and
push
xchg
or
and
fcomip
jp
push
xlat
sub
lods
xchg
retf
(bad)
xchg
imul
push
popf
sahf
shl
add
xchg
clc
into
xchg
outs
push
push
stos
idiv
mov
popa
mov
mov
retf
inc
out
mov
jno
adc
inc
loop
or
dec
push
xchg
icebp
ror
outs
sbb
mov
stos
int3
dec
push
dec
mov
xchg
aam
inc
test
idiv
je
inc
cmp
into
mov
das
sbb
xchg
sub
adc
jb
int
sbb
and
push
fmul
test
jmp
int
pushf
cli
sar
inc
sbb
inc
je
cli
jo
mov
imul
jg
add
pushf
xlat
dec
pop
or
leave
add
dec
js
gs
and
xor
adc
imul
shl
xchg
cmp
mov
push
inc
jns
sub
mov
jl
pushf
dec
xor
mov
loope
data16
ja
sub
pop
(bad)
sub
movs
out
ret
sahf
pushf
dec
test
xor
xor
push
in
popf
aam
cmp
xchg
addr16
les
(bad)
push
dec
rcl
fbstp
jg
iret
dec
mov
outs
and
fisub
dec
pop
retf
or
aam
adc
mov
mov
inc
jbe
cmp
xchg
xchg
pop
out
mov
(bad)
jo
push
test
in
mov
pushf
ret
paddw
les
lods
hlt
xor
mov
mov
cs
cmc
mov
and
call
(bad)
cli
(bad)
fadd
imul
push
and
dec
inc
stos
mov
adc
out
(bad)
(bad)
xor
pop
or
ss
fld
fwait
not
sbb
loope
mov
ins
(bad)
mov
adc
dec
adc
(bad)
push
mov
push
out
and
sub
dec
ss
or
fcom
sub
leave
clflush
ins
adc
stc
hlt
mov
(bad)
cmp
xor
out
xchg
push
mov
(bad)
jae
xchg
push
fs
mov
push
jecxz
inc
lods
and
(bad)
push
mov
or
leave
test
sbb
push
or
rol
cdq
int3
sbb
test
add
and
mov
cld
jp
les
pop
cmc
(bad)
and
or
sbb
mov
mov
int
pop
test
std
sub
push
xor
les
test
js
push
sub
cli
enter
mov
xchg
bound
pop
push
imul
fadd
pop
bound
lds
rcl
(bad)
int3
pop
push
js
rol
repnz
loope
mov
pop
loop
or
mov
pop
inc
cmp
sub
mov
ret
and
cmc
out
ins
loopne
xchg
outs
inc
(bad)
xlat
mov
dec
mov
loop
mov
movs
and
add
(bad)
sbb
jmp
sbb
sbb
test
mov
pop
pop
outs
push
imul
sub
mov
cwde
xchg
sti
mov
jp
imul
mov
and
inc
jb
fisttp
test
mov
pop
jmp
pop
push
or
rcr
mov
mov
call
cli
push
adc
das
daa
xor
lahf
movs
dec
mov
mov
ins
inc
xchg
aas
retf
sbb
icebp
punpcklwd
inc
xchg
ret
jno
mov
push
add
mov
inc
popa
xor
dec
cdq
in
lock
cmc
push
or
cld
xor
jge
mov
cmp
jb
push
adc
xchg
ret
or
test
mov
int
cdq
push
cmp
outs
cdq
(bad)
fidiv
cmp
push
cmp
add
repnz
cmp
sbb
test
pop
inc
add
in
sub
fnstenv
lock
sub
gs
sub
addr16
sbb
sahf
push
fstp
xchg
xchg
fcom
(bad)
add
iret
in
imul
arpl
ja
push
stos
pop
mov
clc
aaa
or
and
add
(bad)
in
jle
inc
nop
mov
inc
rcl
jmp
shr
test
out
xchg
repnz
neg
mov
dec
repnz
push
(bad)
xchg
sbb
in
inc
int
cmp
aam
adc
cmp
and
inc
jmp
hlt
test
push
ror
dec
in
nop
in
out
loopne
pusha
hlt
add
xchg
(bad)
xor
hlt
mov
pop
adc
sub
inc
jno
hlt
adc
icebp
adc
sub
fisttp
mov
mov
xchg
mov
out
(bad)
xchg
mov
ret
jmp
mov
dec
sbb
ss
mov
push
stc
imul
cld
mov
and
or
mov
in
xchg
cmp
stos
retf
aam
lds
lea
mov
and
call
or
ret
outs
mov
sbb
and
(bad)
test
out
outs
sbb
out
popa
(bad)
push
add
leave
xor
or
mov
mov
jno
jmp
jnp
cs
jl
push
mov
jge
imul
lea
sahf
inc
fwait
push
pop
int3
add
mov
and
pop
mov
leave
ds
movs
xchg
scas
mov
call
xchg
ja
adc
mov
mov
inc
es
out
mov
loope
cmps
and
mov
sahf
push
xchg
inc
xchg
bound
mov
out
or
mov
sub
inc
mov
xchg
mov
es
dec
js
xor
clc
xchg
cwde
movs
in
adc
lea
retf
addr16
fld
add
neg
mov
adc
adc
push
loop
push
sub
jle
sahf
fidiv
cmp
fwait
out
js
mov
pop
shl
sbb
push
(bad)
xor
jmp
push
fwait
test
pop
jge
xor
fs
jmp
jne
hlt
dec
stos
div
test
rol
cmp
jge
std
xchg
mov
bsr
xor
push
dec
pop
iret
es
push
xchg
and
cmp
je
dec
mov
jbe
inc
mov
add
mov
stc
div
js
add
sbb
dec
sbb
xlat
outs
int
mov
in
daa
xor
xchg
daa
adc
dec
nop
aaa
xchg
xchg
xor
push
xchg
jns
push
cwde
jge
xlat
pop
jne
dec
out
dec
gs
adc
pop
ins
add
dec
sahf
std
stos
xor
adc
pop
daa
cdq
clc
mov
push
add
rol
push
inc
mov
std
xchg
xchg
mov
test
jp
arpl
imul
mov
das
inc
add
xchg
call
mov
aam
mov
pop
jns
sub
mov
(bad)
jmp
push
mov
dec
je
add
jmp
mov
adc
xchg
mov
push
jno
mul
and
(bad)
dec
retf
test
push
movs
sbb
mul
btc
(bad)
cmc
dec
add
add
bound
mul
or
and
mov
adc
pop
push
dec
mov
in
scas
xchg
push
ficom
and
adc
push
jne
leave
cs
or
add
shl
arpl
rcr
pop
lea
cmc
mov
fadd
pop
mov
mov
pop
mov
test
mov
mov
xchg
das
xor
enter
pop
mov
ja
enter
nop
xchg
pop
pop
sub
lods
mov
pop
mov
fsub
mov
(bad)
shl
stos
loopne
sar
icebp
in
aas
push
int3
pusha
push
faddp
repnz
out
add
test
cmp
add
dec
push
rcl
in
cmp
add
loop
and
fldenv
div
push
jne
loopne
call
and
add
xlat
arpl
popf
add
cmp
outs
lahf
fcomp
push
add
loope
sbb
xchg
cmovb
loop
xor
hlt
pop
push
into
ret
leave
dec
mov
pop
(bad)
popf
xchg
cmp
pop
shl
pop
repnz
mov
gs
cmp
add
sbb
lea
pop
sti
sti
adc
fimul
add
adc
fcmovnb
daa
adc
mov
or
retf
cli
shr
xchg
sub
add
iret
cmp
sahf
push
js
mov
xor
shl
mov
das
addr16
pop
mov
fnstsw
push
fst
mov
jmp
scas
fcom
arpl
jecxz
fmul
sub
add
cdq
jae
xor
je
push
push
sbb
cdq
loop
cmp
xor
nop
daa
ja
fbstp
out
mov
leave
or
aam
or
or
cwde
cdq
xor
stc
pop
scas
xchg
movs
jmp
add
lds
jge
jmp
mov
call
pop
ret
iret
(bad)
mov
cmc
stos
jg
xchg
lods
shl
pop
retf
mov
inc
push
pushw
cs
sar
stos
ja
mov
push
jbe
out
cdq
retf
push
and
jl
push
adc
and
imul
inc
mov
and
(bad)
in
jno
inc
int
(bad)
ss
aaa
and
add
sbb
adc
mov
retf
das
mov
jecxz
ds
mov
je
push
dec
call
aad
imul
mov
xor
sar
jb
fstp
fcomp
adc
rol
ins
arpl
pop
out
mov
and
sub
jmp
mov
xchg
pop
mov
inc
mov
sbb
in
gs
jnp
inc
(bad)
ftst
popa
sub
pop
jecxz
push
mov
or
push
das
fs
jno
dec
aam
fdivp
jmp
xchg
sub
mov
dec
test
mov
clc
retf
sub
shl
idiv
sbb
icebp
cmp
retf
jne
push
inc
jg
call
int
and
scas
out
cmp
mov
jmp
add
jmp
ds
pusha
sub
pushf
mov
fld
cmp
mov
das
cmp
std
cmp
mov
cmps
pop
movs
cmp
aas
dec
fstp
mov
add
mov
sbb
or
jno
cdq
loop
push
int3
jns
mov
repz
mov
mov
aas
int3
cs
jb
call
sti
xor
and
movs
(bad)
adc
or
jmp
pop
popa
mov
(bad)
push
adc
inc
xchg
cld
ret
fidivr
dec
retf
rol
cmp
inc
int
inc
test
and
push
xlat
test
and
imul
and
dec
fimul
fcomip
sub
sub
cwde
sbb
repz
cdq
jmp
mov
cld
inc
add
push
call
sbb
sub
pop
cwde
std
or
lock
jecxz
cmp
(bad)
aad
cmc
cmp
ins
movs
push
cmp
xchg
enter
sub
cli
xchg
imul
mov
mov
jge
mov
sbb
mov
cmps
test
leave
push
ret
mov
sti
cli
repz
lods
mov
(bad)
xchg
xor
cwde
add
in
add
cmp
or
dec
leave
push
xchg
jae
(bad)
cmp
addr16
jg
sbb
or
leave
push
stc
movs
mov
cmp
leave
outs
leave
jo
push
push
xor
mov
ds
add
or
hlt
idiv
adc
inc
add
je
data16
xlat
mov
sbb
movs
dec
push
mov
enter
loopne
dec
cmp
(bad)
dec
dec
icebp
xor
test
sbb
sahf
and
jae
mov
(bad)
adc
scas
xchg
push
sbb
jmp
sub
test
pop
mov
or
test
push
les
aam
push
repz
sub
sub
jb
sahf
inc
int3
push
mov
and
or
lock
xor
cld
cli
or
loopne
mov
je
sbb
iret
or
jmp
out
mov
mov
adc
mov
loopne
sbb
pop
retf
inc
mov
popa
pop
cmps
sbb
or
mov
out
movs
or
mov
(bad)
pop
shl
mov
inc
xor
test
sub
sub
sti
outs
mov
cld
xchg
sub
mov
ror
jbe
jl
sar
or
jmp
mov
pop
pop
pop
mov
cmp
dec
fcmovnbe
pushf
div
(bad)
mov
test
scas
mov
jne
mov
fwait
rcr
jb
shl
fwait
test
(bad)
xchg
jle
push
test
sub
jle
cmp
pop
add
rcr
inc
test
pop
test
pop
mov
cmps
mul
(bad)
call
jmp
pop
mov
pop
imul
jbe
sti
mov
push
shr
cld
pushf
call
xchg
add
jmp
es
pop
dec
lods
adc
inc
pop
fs
out
sbb
pop
mov
dec
pop
sbb
adc
cmp
or
mov
shl
hlt
ins
xchg
add
or
test
sbb
fnstsw
sub
movs
fwait
mov
lock
test
push
lahf
call
pop
xor
scas
xor
pop
hlt
pop
test
arpl
loop
sbb
test
or
xlat
adc
rcl
mov
mov
call
and
into
inc
mov
or
sub
pop
shr
out
popf
sub
jne
outs
mov
dec
mov
jge
sub
dec
bound
dec
cld
push
or
xor
inc
ds
push
fldcw
dec
push
fmul
(bad)
or
sbb
inc
jmp
sbb
xchg
xor
dec
test
dec
fsubr
push
rol
xchg
pop
cmp
sbb
mov
xchg
mov
stc
mov
jno
adc
jns
cmps
pop
(bad)
loope
mov
adc
(bad)
in
pushf
mov
mov
aam
sub
call
pop
inc
push
out
dec
faddp
xor
mov
in
icebp
add
les
inc
push
loope
push
mov
and
fcmovbe
imul
adc
outs
les
fstp
inc
es
repz
jp
adc
and
pushf
movs
jae
push
push
rcl
and
(bad)
mov
pop
sbb
aas
jbe
les
xor
sbb
mov
push
sar
and
dec
ret
fst
mov
pop
cmp
pushf
pop
jne
push
and
lods
mov
les
cdq
adc
inc
fmul
or
inc
jnp
stos
(bad)
test
mov
(bad)
cwde
test
popa
mov
xchg
sbb
or
test
cmp
fisttp
test
xor
adc
and
popa
dec
loope
ds
popf
jge
sar
push
dec
adc
(bad)
mov
add
ins
sahf
mov
dec
test
lds
xor
popa
pop
shr
and
scas
je
xchg
rol
imul
jne
sbb
xchg
jo
or
fist
jo
cld
dec
and
in
fsubr
fild
js
sbb
pusha
dec
mov
(bad)
out
imul
push
mov
sbb
xor
mov
popa
stos
xchg
adc
test
data16
fdivr
stos
mov
lock
add
repnz
movs
jg
and
sar
xchg
cmp
jmp
int3
sti
cmp
test
sbb
add
or
loope
xchg
cmp
jbe
sub
(bad)
push
or
ror
adc
arpl
jo
aad
cmps
jns
(bad)
xchg
xor
xor
mov
adc
pop
cmp
jmp
and
mov
pushf
jns
add
mov
(bad)
imul
and
cmp
nop
lods
adc
sbb
pop
enter
xchg
dec
jbe
push
stos
mov
xchg
aad
jnp
aad
inc
aad
repz
sub
mov
jbe
lods
mov
mov
mov
jmp
or
inc
cmc
mov
fs
iret
scas
xchg
sbb
cmc
mov
mov
arpl
mov
mov
jae
mov
xchg
mov
aam
adc
mov
dec
mov
cmp
(bad)
scas
pop
mov
cmp
inc
(bad)
jnp
dec
mov
std
and
jnp
adc
rol
fiadd
mov
sti
xor
in
fild
cmp
or
inc
mov
push
outs
inc
shr
retf
daa
js
add
sub
dec
aam
pop
mov
and
sti
xchg
addr16
cmp
mov
loopne
dec
fst
jmp
mov
fidiv
arpl
inc
lds
mov
cmp
inc
cmp
cmp
push
sub
lahf
into
in
jp
rcl
sub
cmps
adc
dec
or
ret
leave
jne
xor
adc
(bad)
jl
call
fdiv
dec
pop
cs
sbb
aas
sub
mov
push
fdiv
inc
ss
and
sar
(bad)
xchg
repnz
and
popa
js
sti
xchg
pop
(bad)
pusha
sbb
adc
mov
adc
mov
inc
dec
xchg
or
sar
adc
retf
inc
scas
xor
dec
(bad)
idiv
cli
inc
ins
leave
mov
add
lods
cmc
push
mov
push
sbb
adc
push
push
out
clc
adc
add
pop
inc
(bad)
ins
xchg
rol
mov
shl
pop
es
daa
movs
xchg
adc
adc
out
or
pop
in
push
in
sbb
push
mov
sub
fist
inc
push
int3
xor
lods
jmp
push
cmp
add
mov
mov
ror
ficom
retf
stos
fcomp
jmp
xor
test
(bad)
shr
outs
scas
cmp
push
jns
cmp
mov
and
xlat
jbe
pop
and
fist
xchg
jmp
sub
int3
add
or
adc
adc
fisub
outs
mov
cmp
inc
stc
sti
xlat
pusha
mov
loop
push
shr
pop
enter
scas
fcmovne
inc
or
push
call
test
jle
sbb
imul
jmp
or
sub
stos
test
cmp
js
jg
push
test
lods
call
jp
aaa
and
and
lods
cmps
xor
add
sbb
aas
adc
(bad)
rol
test
inc
fnstenv
aam
in
inc
(bad)
fild
shl
test
mov
add
lods
adc
into
mov
fs
sbb
cmp
clc
int3
clc
pop
jae
xchg
and
sub
adc
dec
in
ss
ret
xor
loope
mov
mov
and
pop
mov
pop
cmp
loop
and
outs
pop
push
xchg
xor
adc
int
mov
and
mov
cdq
inc
push
cmc
into
fnstenv
inc
loopne
(bad)
jae
push
push
adc
xchg
sub
ds
xor
push
mov
mov
sub
(bad)
retf
cmp
pop
ins
dec
add
test
fs
dec
mov
push
repnz
lods
xchg
jne
lods
mul
sbb
pop
aas
or
mov
sbb
xor
add
imul
lea
adc
iret
push
mov
mov
jmp
dec
pop
push
mov
and
mov
and
inc
pop
sar
xchg
ret
and
dec
pop
add
stos
push
and
cmp
xchg
ret
mov
jae
repz
out
cld
(bad)
fs
or
jmp
pop
cmps
outs
xor
or
mov
cs
lods
loope
aaa
popf
sahf
jmp
not
lahf
mov
ss
jbe
test
xchg
fdiv
in
xchg
and
shl
pop
mov
inc
daa
aam
dec
ret
cdq
or
jp
lahf
fwait
mov
fst
sbb
adc
jns
mov
dec
push
sub
push
xor
pop
or
in
mov
sbb
cmp
mov
(bad)
ror
gs
sub
call
rcl
in
pop
in
push
dec
shl
xor
out
cmp
xor
repnz
ins
out
jns
pop
pop
fwait
xchg
xor
repnz
loop
cmp
xor
out
in
xlat
sub
in
ja
and
sub
adc
call
mov
sub
sbb
mov
inc
mov
mov
adc
cmp
(bad)
push
add
sbb
jge
push
shl
or
arpl
(bad)
scas
pop
inc
or
aad
add
mov
das
pop
int3
cmc
adc
and
dec
dec
retf
and
ss
ds
stc
adc
(bad)
loope
add
cmp
mov
cmp
adc
xor
ror
call
or
xor
xchg
ds
add
pop
mov
mov
mov
or
jb
repz
pop
aam
pop
imul
cmp
call
xor
test
cmc
xor
xchg
cmp
xlat
test
pop
mov
es
mov
jmp
out
popa
std
mov
jl
jge
mov
sti
jbe
inc
cld
dec
in
rcl
xchg
xor
sbb
jmp
push
call
in
fist
push
sbb
nop
cmp
jo
sub
ds
xchg
push
cmp
jecxz
fild
pushw
mov
int
cmp
rol
call
int
retf
push
xor
sub
sub
inc
not
sub
pop
jg
add
or
retf
adc
aaa
jb
xchg
aam
jb
pop
repnz
mov
push
mov
aas
pop
dec
es
xchg
add
push
mov
xor
lods
test
jge
xor
repnz
add
icebp
inc
ins
fmul
cmp
mov
gs
push
and
inc
add
xor
ror
mov
repnz
arpl
and
std
gs
xor
mov
leave
shl
mov
(bad)
mov
sub
inc
push
inc
in
cld
mov
fild
jae
xor
xchg
adc
sub
xchg
sti
mov
dec
ins
adc
(bad)
or
mov
pusha
push
out
dec
test
push
js
jmp
push
shr
cmc
in
fisttp
xor
cmps
pop
or
lds
(bad)
movs
push
inc
dec
out
xchg
int
xchg
lods
ins
clc
ror
pop
push
movs
xchg
adc
fwait
retf
aas
ja
xchg
lock
and
inc
mov
sti
jo
or
repz
jne
mov
das
sbb
xchg
sbb
clc
cli
xchg
cmp
push
(bad)
push
ret
ss
not
cld
push
test
jmp
add
les
ss
cli
das
bound
jg
rcl
adc
pusha
sbb
rcl
xchg
dec
ins
adc
aad
pop
pop
cmp
imul
outs
push
or
adc
jns
xor
arpl
movs
sbb
aad
imul
mov
out
out
in
repz
ret
xchg
lods
and
lods
inc
push
ret
repnz
gs
sbb
mov
test
push
out
popf
ficom
inc
inc
and
sbb
mov
fistp
add
adc
scas
pusha
(bad)
in
xchg
enter
clc
push
adc
vaddsd
sbb
mov
cmp
scas
pushf
push
call
inc
cld
movs
cmp
test
push
aaa
inc
xlat
mov
cmp
jl
les
pop
sub
cmc
xor
fild
inc
sbb
pop
cmp
inc
lods
dec
not
rcl
mov
ret
push
mov
retf
xor
or
mov
sub
std
push
lods
ss
mov
mov
adc
sbb
call
aaa
mov
ins
arpl
xchg
sar
sbb
sar
jl
pop
mov
(bad)
outs
adc
fst
jae
xchg
push
or
outs
sub
lock
sub
ja
add
push
cmp
gs
xor
fmul
aam
jae
in
xchg
xor
imul
push
call
lods
jle
add
rcr
lds
cli
ins
and
shr
repz
call
pop
les
pusha
nop
std
(bad)
xlat
add
addr16
(bad)
pop
xor
mov
or
stos
leave
push
jae
retf
shr
mov
sub
in
mov
mov
sbb
adc
mov
shl
mov
pop
out
js
mov
xor
(bad)
adc
push
aad
cwde
push
ds
jb
add
adc
popa
xchg
aas
pop
mov
dec
adc
nop
out
and
mov
xchg
and
xchg
call
mov
add
inc
jp
and
retf
fcom
movs
ins
(bad)
lods
into
adc
inc
push
cld
sbb
fcmovbe
push
sbb
out
mov
leave
leave
(bad)
inc
and
and
cmp
mov
dec
mov
push
int
fs
jl
ins
sti
sub
push
in
out
dec
sub
fsubp
je
fsubr
imul
add
jmp
(bad)
(bad)
into
popa
cmp
(bad)
fcmovu
adc
xor
xchg
mov
mov
cmp
xor
pushf
xor
adc
arpl
jg
push
xchg
pop
adc
or
jae
jl
xchg
ja
repnz
ins
je
jb
or
pop
rol
sub
push
hlt
pop
pop
jns
push
adc
jmp
or
mov
mov
test
mov
mov
xlat
sbb
lods
or
fs
inc
push
inc
frstor
push
repz
ror
mov
inc
push
dec
dec
adc
std
pop
ins
fcom
lods
das
add
mov
xchg
clc
cli
jbe
cmp
inc
sbb
cs
lock
rol
jle
cmps
and
and
or
cmp
imul
movs
(bad)
mov
jl
(bad)
fwait
hlt
xchg
int
pushf
push
rol
call
xchg
mov
hlt
push
mov
cli
sub
xchg
push
or
sbb
sub
iret
inc
sub
scas
dec
movs
out
leave
jns
pop
and
les
mov
xor
outs
cmp
mov
or
xor
xchg
in
xchg
pop
cdq
in
retf
push
pop
aas
pop
shl
ret
add
lock
mov
mov
pop
loope
aas
dec
xchg
in
push
ja
rcr
fsubr
xchg
in
scas
arpl
jne
jb
(bad)
loop
push
xchg
pop
imul
add
stos
push
adc
stos
push
jnp
movs
stc
shr
clc
sahf
(bad)
popa
inc
pushf
mov
cmps
dec
cmp
adc
cmp
popf
adc
xchg
mov
dec
xor
jns
pop
or
pop
loopne
and
and
into
lods
jno
or
mov
or
sub
fwait
ja
inc
test
pop
sub
xor
sbb
dec
fdiv
aad
(bad)
push
addr16
hlt
cli
sbb
sbb
inc
call
in
xchg
pop
imul
mul
xchg
sti
pop
stos
push
mov
inc
popf
sub
inc
mov
cmp
add
mov
ffreep
or
movs
loop
js
lds
in
inc
dec
mov
sti
je
and
in
je
mov
stos
or
popa
scas
xchg
xchg
mov
dec
sub
pop
int
xchg
cld
cmp
call
dec
fwait
adc
xor
push
cmp
adc
push
ins
or
cmp
fild
(bad)
(bad)
call
pop
cmovp
das
iret
outs
pop
cmp
push
imul
sahf
enter
mov
mov
adc
adc
mov
sar
mov
into
ss
arpl
add
clc
inc
ficomp
or
xchg
jg
clc
enter
cmp
cmp
inc
das
gs
sbb
sbb
pusha
jp
lahf
clc
jo
mov
mov
sar
dec
in
ins
and
xor
mov
mov
and
jecxz
cdq
or
loope
push
xchg
xchg
xchg
xor
mov
mov
sti
idiv
push
mov
dec
jmp
ins
or
sti
cmp
mov
push
test
mov
cmp
mov
bound
in
pop
add
pop
pushf
push
sub
jl
and
adc
cmps
cs
mov
das
and
ss
push
pop
and
cli
movs
inc
retf
fadd
jnp
push
xchg
inc
call
or
imul
lea
sti
mov
fdivp
mov
js
cwde
int3
call
inc
jb
pop
pop
jle
cmp
inc
shr
call
add
sbb
xor
ret
mov
xchg
out
jl
push
pop
push
xchg
dec
and
push
mov
ds
xlat
(bad)
cs
jmp
out
test
int
cmps
push
lds
ret
mov
fstp
sbb
xchg
xchg
or
movs
push
nop
xlat
pop
jp
(bad)
in
loope
repz
push
pop
fistp
rol
pop
shr
(bad)
push
mov
ret
cmp
cwde
fcmovbe
cwde
outs
mov
lock
in
add
les
lods
adc
sub
push
sti
lea
test
movs
test
push
(bad)
sbb
mov
mov
sub
vpslld
int3
out
(bad)
scas
test
mov
xor
jno
pusha
cmp
int3
(bad)
mul
icebp
movs
pop
adc
dec
bound
stos
test
test
adc
retf
mov
inc
fimul
scas
jns
pop
stos
or
push
push
sbb
fimul
xchg
(bad)
loopne
sbb
xor
pop
xchg
jo
jo
bound
dec
push
add
pushf
xor
xchg
xchg
jl
mov
cmp
stos
call
push
mov
xchg
jnp
mov
rcl
bound
in
xchg
je
or
sbb
out
push
dec
ror
pop
sub
neg
lock
cmp
in
movs
inc
jbe
icebp
dec
dec
push
and
dec
mov
pop
iret
fcomi
xor
adc
cmps
out
inc
shl
dec
cmp
or
lahf
mov
mov
bnd
stos
or
pop
mov
jbe
les
nop
and
inc
arpl
mov
loop
retf
inc
inc
cmp
dec
scas
inc
repnz
inc
mov
mov
leave
sbb
mov
das
xlat
xchg
adc
mov
out
or
xor
les
inc
clc
or
popf
shr
mov
dec
jbe
lods
test
jl
adc
pop
cmp
jo
add
mov
sahf
std
lds
mov
xlat
xchg
fwait
daa
mov
in
(bad)
pop
nop
xor
retf
pop
stos
ds
fadd
push
jnp
sbb
mov
lahf
and
shr
mov
inc
sub
call
sahf
push
mov
adc
daa
addr16
pop
jl
or
test
std
fs
mov
jge
jo
js
push
sub
push
add
fistp
cmp
jae
and
mov
aam
out
iret
fiadd
cmp
cld
pop
mov
or
jecxz
xchg
adc
mov
scas
outs
les
jle
push
xor
lahf
adc
in
sub
mov
lock
cmp
push
push
movs
call
mov
add
test
mov
(bad)
fnop
call
cmc
jmp
jbe
in
dec
ror
in
sub
mov
int3
sub
jmp
jno
mov
rcr
xchg
jecxz
gs
icebp
daa
les
jl
test
inc
cmps
test
pop
dec
sbb
jne
popa
xlat
adc
ret
xor
or
repz
mov
sbb
fnsave
js
cmp
pop
jmp
bound
or
mov
(bad)
push
push
leave
jo
cdq
pop
push
mov
inc
ja
cmp
mov
lds
push
adc
xchg
sub
xor
adc
scas
cmps
inc
imul
repnz
movs
dec
fisub
xor
xchg
enter
pop
adc
jnp
mov
mov
shl
pop
outs
pop
shl
(bad)
ins
in
int3
imul
gs
addr16
xor
mov
push
sub
xchg
fld
sbb
movs
push
or
mov
sbb
sbb
sbb
push
dec
movs
jo
fs
or
in
js
call
dec
outs
lods
mov
sub
movs
popa
rol
in
xchg
test
pop
call
xchg
mov
out
adc
jo
pop
xchg
sbb
ins
in
mov
sbb
dec
inc
outs
lahf
loopne
pushf
fidivr
pop
mov
jb
inc
pop
repz
jge
shr
aam
push
push
mov
xchg
jnp
ret
out
aaa
sub
mov
push
push
jg
in
arpl
outs
sub
arpl
scas
(bad)
sub
(bad)
add
out
mov
scas
sub
jmp
xor
test
fdiv
mov
cmovae
les
imul
call
outs
add
xchg
cmp
sub
sbb
xor
ret
dec
push
xor
aam
and
xchg
sbb
push
mov
addr16
mov
outs
xchg
pusha
in
stos
or
and
cmp
xchg
aad
push
inc
push
mov
mov
jmp
cmp
pop
adc
jp
sti
dec
dec
and
(bad)
lahf
imul
fcom
push
xor
mul
inc
jg
cs
pop
mov
mov
xchg
xor
or
mov
inc
cmp
add
enter
lahf
nop
push
cdq
ret
sbb
dec
je
in
mov
mov
in
(bad)
fsubr
or
retf
mov
cs
shl
fucomip
xor
add
imul
mov
in
and
imul
out
sub
int
aaa
push
sub
es
pop
mov
adc
repz
push
cmp
xor
mov
popaw
fisub
imul
mov
dec
xchg
stc
ret
dec
and
aad
cmp
retf
xchg
mov
(bad)
rcr
scas
sbb
mov
popf
xchg
imul
mov
dec
imul
push
icebp
ret
pusha
or
jp
mov
cli
dec
xor
stos
dec
mov
in
ds
xor
pop
push
xchg
cmp
jecxz
pusha
xor
out
sbb
sub
jl
inc
xlat
retf
loope
stos
push
xor
sbb
dec
pop
sbb
xor
mov
xchg
pop
movs
ds
and
ja
adc
xchg
sub
push
xor
push
retf
iret
lods
jp
les
and
cs
lock
mov
sbb
and
(bad)
lock
pop
fbstp
leave
jmp
ds
mov
pop
or
dec
stos
adc
retf
jae
movs
mov
mov
pop
fdivr
adc
inc
(bad)
mov
frstor
and
enter
jo
jno
dec
push
mov
repnz
addr16
sbb
xlat
xchg
pusha
loopne
push
jg
pusha
dec
xchg
stos
jmp
repnz
pop
jle
cmps
leave
gs
jge
inc
int
and
les
bnd
or
ins
hlt
mov
jae
in
int
inc
mov
(bad)
fucomi
jg
cmp
or
cdq
sbb
pop
cmp
stos
fbld
push
outs
dec
shrd
adc
mov
stos
and
push
jo
inc
lods
sbb
mov
mov
push
aas
sti
sub
sbb
mov
hlt
mov
sub
jl
ss
mov
push
push
sbb
les
fistp
adc
stos
add
inc
push
mov
or
and
cmp
addr16
add
xchg
fcmovnb
xchg
and
inc
mov
inc
mov
repz
pop
in
jmp
cld
dec
sub
sbb
push
ins
jo
xor
(bad)
and
test
adc
jmp
jnp
sbb
stos
loop
pop
cmp
xor
sbb
das
je
push
push
pop
adc
or
jo
lahf
mov
push
retf
cmp
lods
test
stos
iret
add
pop
les
mov
jns
dec
xor
lods
pop
pop
inc
fadd
call
scas
jge
push
imul
pop
lods
fidivr
jns
sti
pop
in
xchg
out
in
loope
cld
pop
clc
sub
jne
fwait
daa
xor
push
xchg
pop
xor
sub
or
retf
loope
sub
jae
leave
or
sar
out
dec
aas
leave
xor
xchg
loop
sub
inc
loop
cli
mov
gs
jge
mov
mov
scas
out
sub
mov
pusha
push
clc
pop
mov
cmc
(bad)
or
add
fmul
scas
xchg
(bad)
sub
stc
scas
pusha
push
push
std
xor
add
jmp
test
dec
stos
and
fucomp
xor
scas
arpl
lea
mov
mov
lods
cmp
sbb
in
push
not
jmp
fs
sahf
je
xchg
and
jae
loop
jp
mov
jae
dec
mov
dec
lods
scas
xchg
cmp
or
mov
test
lds
mov
cmps
cs
xor
add
xchg
ins
ror
movs
pop
cmp
jge
mov
dec
adc
mov
sub
pop
das
xchg
imul
imul
mov
add
xor
lods
xor
ror
nop
push
cmps
pop
dec
icebp
sbb
int3
ficom
or
mov
loopne
mov
xchg
inc
inc
mov
sbb
or
or
cmp
ret
repz
or
pop
imul
sar
cmp
or
inc
int3
jns
fs
imul
pop
sub
pusha
pop
(bad)
ins
scas
pop
mov
xlat
sub
popa
fs
mov
repnz
sbb
retf
pop
lahf
mov
stc
xchg
jecxz
ja
sbb
imul
sub
nop
xlat
adc
movs
sbb
mov
add
outs
inc
lods
jbe
int3
daa
and
ret
add
mov
(bad)
mov
and
jae
out
adc
aas
leave
push
adc
adc
xor
jmp
mov
outs
and
popa
outs
mov
xchg
inc
inc
cmc
scas
in
add
enter
loope
sbb
jle
dec
xor
int3
addr16
jb
retf
jmp
adc
mov
call
sub
mov
cmp
push
stc
pop
push
and
(bad)
mov
ret
jl
and
shl
loop
pop
movs
js
mov
mov
mov
das
nop
adc
enter
jle
mov
cmps
(bad)
aam
fistp
cmps
loop
push
add
mov
mov
inc
jbe
stc
das
aam
cli
fcmovnbe
xor
add
mov
mov
fst
sub
inc
inc
stc
data16
push
int3
dec
mov
push
mov
(bad)
sbb
imul
jmp
dec
rcr
xchg
pop
popf
push
xor
xchg
add
pop
in
mov
fucomip
(bad)
dec
cmps
fmul
jle
push
pusha
pop
jbe
sub
into
aam
dec
mov
stos
mov
xor
dec
pop
ins
cmp
jnp
fimul
add
xor
push
and
test
dec
fadd
jle
jb
xchg
xchg
rcl
cmp
ins
scas
mov
jg
sbb
sub
aam
sbb
and
into
inc
mov
(bad)
sub
test
push
stos
imul
in
(bad)
in
jmp
rcr
rol
mov
and
(bad)
out
sbb
loope
sub
inc
stos
popa
pop
push
(bad)
mov
mov
mov
test
das
push
add
push
xchg
int
mov
loopne
sub
sub
cmp
mov
mov
shr
sbb
sub
push
adc
xchg
sbb
into
mov
add
aad
dec
pop
or
dec
push
imul
cmp
xor
jne
cmp
mov
cmp
push
inc
les
rol
mov
pop
add
cwde
add
rol
test
aas
repz
push
xlat
jmp
stos
rcl
push
jbe
xor
inc
xlat
and
in
xor
scas
jle
jp
out
cli
mov
int3
mov
je
xchg
mov
clc
push
sti
loopne
in
cmp
test
cmp
repz
(bad)
dec
lods
inc
(bad)
mov
stc
xor
inc
pushf
std
fidivr
push
pop
nop
rep
mov
nop
cs
lds
shr
mov
fnstsw
mov
int3
jmp
enter
leave
js
jno
pop
add
xor
push
cmp
fwait
mov
xor
imul
call
cmp
jmp
and
rol
bound
lods
dec
dec
lds
ret
mov
in
loop
icebp
sub
ret
cmp
and
mov
add
shl
sbb
(bad)
in
leave
mov
jp
in
add
cmp
jo
mov
mov
inc
stos
inc
mov
sub
lock
lahf
icebp
cmp
xor
lods
cwde
pop
pop
je
xor
cmps
mov
mov
push
xor
into
dec
push
inc
repnz
out
inc
adc
mov
push
fwait
jecxz
adc
mov
xor
rol
ins
ja
or
jmp
(bad)
add
in
es
arpl
cmp
dec
adc
aad
cmp
dec
cs
sbb
test
leave
mov
mov
jecxz
dec
mov
or
hlt
std
shr
aam
in
lds
adc
cmps
add
xlat
(bad)
xchg
aad
and
call
or
(bad)
shr
sbb
jecxz
ror
xchg
(bad)
jg
xchg
add
mov
cmp
sbb
sbb
cmp
les
ins
clc
mov
add
and
mov
sar
nop
lea
sub
push
sbb
push
push
sar
out
xchg
push
in
fnstcw
mov
imul
mov
jp
test
(bad)
mov
cmp
sub
cmp
pop
ror
xchg
xor
das
jmp
mov
inc
stc
lods
and
hlt
mov
xor
mov
jns
pop
lods
mov
lds
shl
cmps
out
add
push
mov
adc
push
inc
xchg
dec
ins
mov
dec
cld
stc
sub
es
push
arpl
(bad)
jl
jmp
mov
cmps
aaa
(bad)
jmp
not
jo
cmp
repnz
lods
mov
jbe
push
xchg
mov
mov
inc
fistp
inc
loopne
push
ds
mov
(bad)
push
aad
(bad)
cld
out
mov
in
dec
dec
(bad)
sbb
fucom
mov
adc
add
(bad)
loopne
or
mov
cwde
pop
call
mov
leave
dec
retf
and
mov
add
fmul
outs
mov
and
cmp
sahf
outs
cdq
jne
cmc
xor
xchg
fidiv
mov
mov
sbb
jnp
xchg
retf
mov
fbstp
jp
cmps
lods
mov
enter
push
inc
leave
dec
and
and
xchg
and
jno
mov
cli
dec
sti
jge
inc
nop
or
jg
repnz
ja
inc
pop
mov
je
dec
fmul
rcl
push
adc
ins
mov
sbb
pop
jno
mov
daa
mul
or
je
les
stos
and
fwait
cmp
pop
std
fdivr
push
sbb
mov
mov
cwde
xor
push
and
and
into
dec
mov
cmp
movs
jp
js
mov
inc
sahf
push
out
mov
clc
je
inc
sbb
mov
jb
mov
mov
mov
das
iret
dec
ret
xchg
xor
test
cmp
das
cmp
sbb
iret
jb
sub
mov
push
in
lods
mov
shl
dec
jmp
ins
adc
bound
push
push
xchg
mov
push
adc
mov
jae
enter
pop
sbb
sub
mov
repnz
lea
ret
ret
in
xchg
fisub
mov
loopne
fistp
mov
div
fxch
fsubr
mov
leave
js
js
cwde
push
leave
add
test
cmc
and
xchg
pop
sahf
cdq
shl
inc
lock
fld
pushf
aaa
mov
mov
das
int3
xor
idiv
or
mov
xchg
dec
ficom
ret
dec
push
sub
ror
and
mov
dec
es
enter
cmp
mov
adc
push
mov
mov
pop
cmps
sbb
xchg
jmp
aaa
push
and
and
test
jne
push
mov
movs
rcl
and
cmp
push
dec
adc
shl
pop
aad
(bad)
or
add
leave
(bad)
call
retf
je
xor
cmp
rol
pop
fld
xchg
cmp
and
mov
xor
fwait
add
mov
cmc
cmp
cmps
hlt
or
das
outs
retf
dec
jnp
hlt
jg
pusha
bound
in
push
cmp
into
mov
cmc
repnz
sub
pop
lods
out
outs
xchg
mov
add
mov
test
fdiv
out
in
div
scas
jecxz
in
cmp
mov
and
fild
add
push
outs
and
inc
mov
adc
cmp
xor
xor
sti
xor
xlat
imul
pop
sbb
aaa
retf
sbb
add
dec
(bad)
fild
add
push
mov
mov
cli
repz
sub
js
push
retf
inc
stos
or
sub
ins
(bad)
out
jb
dec
xor
cmp
push
aas
adc
sub
(bad)
sti
pop
out
mov
sti
cmp
xor
repnz
dec
jb
pop
test
inc
repz
test
adc
retf
ins
dec
xchg
int3
out
push
xor
imul
(bad)
adc
xchg
loope
das
fadd
(bad)
fadd
pop
loop
arpl
mov
repz
popf
inc
or
cs
stos
xchg
nop
jnp
pusha
xchg
das
cld
jbe
add
pop
pop
pop
jo
cmp
sub
aaa
add
int
or
in
repnz
mov
push
jl
jmp
add
add
rcl
js
pushf
sbb
test
int
movs
pop
sti
add
stc
jge
and
cmps
mov
rcl
jmp
aam
mov
std
sub
mov
jae
lods
pushf
das
or
(bad)
xor
xor
mov
fcomp
cmp
jl
inc
add
data16
jno
lods
cmp
rol
xchg
add
mov
scas
xchg
lds
xor
pop
lea
sahf
cli
mov
cmp
mov
mov
jmp
and
lahf
rol
not
push
dec
into
jmp
jne
pop
mov
shr
stc
add
xor
loop
pop
inc
in
pop
inc
xor
add
sbb
je
aas
dec
pop
and
push
or
sbb
push
fadd
jge
jl
in
mov
dec
mov
push
fcom
mov
test
add
xchg
or
into
cld
cwde
ffree
ins
mov
pop
adc
ins
xor
jnp
loop
sub
pushf
data16
mov
ret
inc
jp
adc
addr16
mov
sbb
lock
xchg
mov
dec
shl
gs
cmp
cmp
cmps
push
jb
xlat
dec
dec
shl
push
test
shr
stos
jle
leave
or
cmp
dec
or
xchg
loope
push
pop
mov
nop
dec
(bad)
dec
nop
add
pop
test
call
jb
mov
sub
movs
xlat
cs
xchg
inc
cs
addr16
sub
std
movs
or
fs
out
push
adc
stc
adc
sti
mov
mov
lods
adc
sub
and
cld
lds
addr16
mov
popa
retf
push
xor
add
ins
stc
movs
inc
sbb
sar
or
mov
repnz
cmc
test
ds
sub
out
jb
mov
das
je
fnstenv
cmp
aaa
test
fwait
pop
or
sub
pop
cdq
xor
addr16
or
(bad)
jo
cs
out
(bad)
mov
jne
mov
loop
jl
jmp
xor
and
add
or
and
sub
jg
sub
add
lock
sbb
clts
cwde
icebp
jp
fistp
(bad)
push
xchg
adc
jno
(bad)
loop
daa
test
and
sbb
iret
arpl
mov
sub
aaa
cmp
arpl
mov
mov
stc
mov
pop
std
pop
pop
ja
test
xchg
mov
push
in
mov
lahf
dec
jle
push
lea
dec
jae
cwde
xchg
push
push
xchg
sbb
jle
in
pop
pop
dec
movs
push
fist
push
stos
neg
add
xor
pop
dec
sbb
in
or
(bad)
adc
lock
or
sub
nop
cmps
inc
test
cmps
sbb
pop
xor
push
xchg
or
bound
retf
ins
cmp
add
adc
idiv
mov
mov
sahf
dec
ss
mov
nop
outs
and
dec
push
fwait
xchg
and
lea
and
mov
mov
mov
cmp
adc
and
xor
aam
mov
call
loopne
retf
repnz
adc
stos
ror
out
call
cdq
dec
jnp
jmp
pop
mov
xor
mov
fild
sbb
test
fdivr
retf
outs
in
or
out
sbb
bound
test
in
ss
nop
dec
mov
push
add
push
rol
(bad)
mov
fwait
jg
or
mov
push
xchg
shr
aas
in
jae
cmps
xor
push
icebp
xchg
push
repz
inc
ds
sar
xor
(bad)
inc
jns
shl
push
mov
jmp
sbb
push
test
dec
xor
push
retf
scas
ret
dec
test
mov
movs
xor
mov
push
fadd
jbe
sub
xor
jb
xor
pop
pop
imul
inc
mov
fs
push
or
jl
xor
int3
nop
fcom
mov
clc
mov
(bad)
test
mov
xchg
push
jns
adc
(bad)
iret
ret
xchg
jne
retf
test
ret
pop
mov
mov
shl
cld
push
jno
push
test
xor
adc
jl
(bad)
scas
out
call
mov
xor
sub
xor
dec
(bad)
sub
and
inc
sbb
scas
adc
xchg
pusha
lea
adc
cs
adc
xchg
jnp
fwait
jb
dec
xchg
fdiv
mov
cmp
inc
mov
xchg
lock
lahf
pop
mov
push
adc
jle
pop
sbb
adc
nop
and
jle
cmp
push
dec
dec
fidivr
push
imul
test
mov
push
(bad)
jge
bound
or
in
sbb
(bad)
sahf
inc
mov
jnp
hlt
and
mov
mov
mov
push
pop
pusha
ins
rcr
movs
xor
push
shr
or
das
or
mov
jl
xor
leave
in
adc
pop
xchg
adc
mov
js
mov
iret
int3
jno
inc
rol
inc
push
xchg
je
test
sbb
adc
sbb
xchg
in
gs
pusha
(bad)
mov
shr
imul
sbb
gs
fdivrp
ja
pop
mov
mov
cwde
cmp
jae
cmp
sub
out
cli
stos
stos
sub
pop
mov
(bad)
push
scas
mov
fcmovu
sub
push
shl
inc
int
(bad)
in
in
lea
arpl
add
cmp
scas
test
add
rol
nop
inc
call
out
mov
(bad)
or
out
test
add
fstp
mov
(bad)
inc
scas
hlt
stos
adc
or
inc
mov
ins
push
imul
jns
test
fadd
call
jne
les
add
push
dec
ja
pop
inc
mov
pop
aas
test
imul
enter
cli
mov
inc
scas
int3
cmps
test
mov
mov
mov
mov
cdq
stos
push
fcom
mov
inc
int3
push
in
leave
pushf
push
rcl
fsubr
call
mov
xchg
jp
js
scas
mov
(bad)
aas
es
cmps
lahf
add
fcmovne
fsubr
xchg
push
push
push
clc
jl
dec
pop
je
fs
rol
and
jmp
stos
or
inc
mov
test
repnz
push
push
out
iret
inc
jecxz
rol
mov
dec
or
dec
mov
fidivr
sbb
in
in
mov
stos
mov
jae
les
jecxz
rol
and
clc
mov
xchg
fwait
lods
xor
xor
xchg
dec
push
xor
xor
mov
adc
outs
pop
mov
aam
dec
xor
xor
pop
ins
rol
leave
iret
rcr
out
sub
or
in
mov
mov
add
dec
jo
add
inc
and
xlat
push
mov
int
or
je
add
packssdw
(bad)
push
scas
(bad)
mov
nop
fnstcw
jl
add
jmp
push
mov
xchg
out
iret
add
xchg
dec
cs
and
jge
shl
xchg
popa
and
imul
inc
enter
lahf
inc
push
xor
jmp
fiadd
mov
not
mov
cmc
div
test
jnp
xor
xor
fld
ins
lods
ins
sub
test
cdq
nop
setbe
xchg
movs
int3
dec
leave
loop
xor
std
(bad)
cmps
mov
xchg
mov
movs
in
and
sub
pand
data16
pop
or
jbe
xor
mov
pop
ins
xor
and
in
push
mov
mov
inc
call
test
pop
iret
les
sub
test
xchg
stos
outs
loope
mov
dec
(bad)
mov
and
pop
cmp
arpl
cmp
inc
sbb
jbe
fdiv
and
jge
xchg
mov
pop
jnp
sub
jecxz
fdivr
sub
jmp
mov
jmp
add
jl
sbb
out
pop
movs
push
pop
stos
popa
adc
scas
cwde
(bad)
inc
cs
adc
mov
xchg
and
push
dec
sti
mov
js
jecxz
mov
dec
push
movs
cld
stos
data16
ficom
adc
and
jbe
push
imul
mov
add
es
shl
iret
mov
mov
xor
daa
mov
cli
nop
push
inc
add
test
ja
xor
retf
rcl
out
js
add
or
dec
in
sub
fstp
push
push
mov
mov
leave
and
iret
sub
(bad)
mov
push
(bad)
sub
mov
mov
js
pop
jg
push
outs
xor
fsub
push
jecxz
cmps
call
rol
loop
mov
pop
pop
js
mov
pop
(bad)
retf
lock
mov
out
in
fiadd
mov
ror
sub
mov
or
(bad)
sub
(bad)
es
(bad)
inc
xor
push
or
test
ins
(bad)
in
dec
cmp
mov
or
je
sti
leave
mov
mov
xchg
ret
xchg
out
mov
mov
iret
fiadd
ret
mov
cwde
dec
sub
dec
dec
cwde
sahf
or
lods
in
mov
pop
jns
fwait
nop
mov
jg
aad
(bad)
mov
lds
movs
outs
pop
scas
sub
pop
and
inc
xor
push
adc
sbb
sar
fnsave
dec
pop
cmp
mov
std
mov
sbb
retf
scas
shl
repz
adc
and
xchg
xchg
mov
ds
fild
loop
pop
test
xor
in
retf
dec
(bad)
sbb
adc
(bad)
push
xchg
cmp
outs
stc
cmp
or
sub
adc
sub
mov
inc
jle
adc
adc
or
rcr
mov
push
repz
sub
xchg
jg
(bad)
cmp
push
ret
ffreep
pop
and
daa
aad
mov
ficom
lock
xor
mov
cmp
dec
test
popf
loopne
retf
or
fwait
or
retf
pop
mov
test
jl
or
mov
inc
xchg
fimul
lods
nop
pop
(bad)
mov
loopne
xchg
loopne
call
add
mov
mov
xor
jl
nop
enter
mov
add
and
cmp
pop
test
xor
push
out
add
sbb
icebp
mov
adc
es
xchg
or
popf
xchg
outs
push
nop
xchg
mov
sahf
dec
(bad)
mov
leave
outs
stc
dec
sysexit
test
xchg
cmps
pop
jmp
inc
popf
inc
test
pop
imul
adc
push
mov
jmp
fucomi
outs
movs
fst
dec
mov
shl
xchg
sub
out
je
push
pcmpeqw
sbb
adc
shr
inc
mov
sub
xchg
jae
xchg
pop
dec
fsub
dec
inc
ss
int3
shl
test
addr16
out
xor
cdq
xor
push
pusha
dec
sti
scas
(bad)
mov
outs
daa
mov
call
stc
(bad)
dec
in
in
imul
pop
or
(bad)
movs
mov
jmp
fst
xchg
xchg
cli
mov
mov
cli
daa
add
imul
int3
dec
shl
in
push
pop
dec
pop
mov
sbb
sub
cld
fldcw
dec
sar
daa
push
xchg
xor
(bad)
dec
mov
dec
jp
and
pop
push
inc
jge
push
mov
xor
xchg
mov
sbb
sbb
jp
xor
xchg
or
push
lahf
call
and
xor
fs
jle
ins
cmp
aam
ins
and
outs
data16
repnz
sub
popa
fwait
(bad)
pusha
mov
mov
cmc
mov
jns
stos
dec
add
pop
cmps
pop
or
add
pop
cmp
sbb
sbb
xchg
cmc
popa
add
sbb
jge
add
pushf
dec
cmps
std
mov
lahf
cmp
cmp
xchg
cwde
jb
mov
inc
retf
or
sbb
pusha
xchg
shl
aad
jne
fbld
adc
lahf
sti
jns
test
rol
or
mov
cmps
inc
out
cmp
and
mov
fld
add
into
sub
jo
ins
xor
mov
ins
cdq
dec
in
pop
jnp
ins
aad
lods
and
mov
(bad)
lods
mov
or
repnz
stos
cmp
jbe
xchg
dec
dec
lods
mov
dec
lea
movs
sbb
lock
mov
mov
ins
mov
pop
jo
iret
ins
daa
xchg
xor
fidiv
fiadd
and
(bad)
or
cmp
les
mov
and
cmp
std
scas
xchg
outs
popf
pop
push
lods
add
dec
dec
sbb
rcr
outs
sub
scas
dec
push
dec
cmc
std
push
add
arpl
mov
outs
(bad)
jp
pusha
lods
dec
jl
aam
test
push
ds
mov
pop
sbb
dec
push
push
and
xchg
das
pop
pop
fisubr
xchg
js
pop
pop
lods
and
mov
push
fcomi
cmps
inc
xchg
and
into
in
retf
mov
jnp
icebp
xchg
mov
push
lods
pop
dec
sub
mov
movs
and
sar
sbb
cli
ins
js
or
push
push
or
jns
xchg
dec
inc
fild
cdq
mov
(bad)
mov
jecxz
jb
scas
mov
mov
add
call
adc
sub
mov
pop
pop
ror
mov
inc
lods
mov
dec
adc
cmp
ja
outs
xlat
ja
pop
popf
pop
out
mov
hlt
movs
jb
outs
xchg
loopne
loope
mov
mov
leave
pushf
and
and
mov
xchg
jmp
test
xor
sbb
das
daa
add
mov
lea
bound
adc
xlat
cwde
jmp
sub
and
jle
xlat
sahf
xor
cli
sahf
push
mov
cmc
out
jle
dec
int3
push
dec
jg
dec
mov
sub
scas
lock
dec
daa
add
out
pushf
cwde
aas
xchg
pop
sar
in
mov
and
(bad)
pop
scas
mov
ins
stos
ins
inc
sahf
mov
leave
ja
out
hlt
and
cdq
xlat
inc
adc
jmp
mov
cmp
xor
sub
cmp
cmc
loop
fdivr
les
sbb
dec
mov
sti
dec
mov
push
lahf
lods
jmp
inc
sub
pop
dec
aaa
clc
dec
scas
ret
jge
xchg
adc
mov
(bad)
not
xchg
mov
popf
in
les
cli
pop
dec
cli
jle
fild
rcl
dec
cmps
cmp
imul
or
xor
lods
mov
test
jecxz
fisttp
imul
test
add
push
pop
outs
(bad)
jge
sub
pop
cmp
or
adc
(bad)
fldenv
aam
and
xchg
mov
jl
ret
push
inc
dec
mov
and
jns
arpl
hlt
cdq
punpckldq
jle
fsub
xlat
shl
push
popf
retf
stos
and
xchg
push
or
lahf
(bad)
mov
and
ror
jbe
xor
and
jo
or
fimul
xchg
out
aad
loop
lds
sbb
std
fcomp
cmps
mov
pop
push
jge
add
mov
xor
xlat
out
xchg
enter
sub
aas
mov
cld
dec
mov
sbb
mov
les
pop
je
sub
and
xchg
(bad)
imul
aas
mov
repnz
inc
jo
pop
sbb
mov
add
inc
pop
punpcklwd
mov
sahf
scas
movs
ffree
xor
dec
retf
fcmovnbe
loope
jmp
ja
in
fmul
xchg
push
mov
(bad)
ret
call
les
mov
stc
push
fld
jno
scas
aad
loop
xor
mov
clc
dec
xchg
fdivr
rcl
xchg
xor
push
lea
sti
add
push
out
in
dec
xchg
mov
sti
pop
repz
fld
sar
xchg
out
fild
ret
(bad)
cmc
xchg
mov
mov
and
xchg
push
adc
and
xlat
call
push
push
fnstenv
fstp
sbb
jmp
adc
jecxz
mov
outs
mov
call
jg
xor
in
or
lahf
and
jle
test
into
inc
mov
xor
scas
cmp
mov
inc
jns
ret
ror
pop
movs
or
outs
sub
test
sub
in
xchg
inc
sbb
mov
iret
jmp
or
ins
mov
loop
loopne
inc
xor
pop
push
mov
push
cwde
mov
xchg
jg
in
(bad)
lds
adc
lods
das
leave
mov
xchg
mov
addr16
sub
cmp
xchg
xor
adc
jle
add
(bad)
je
ins
(bad)
mov
jmp
rcr
arpl
out
adc
mov
mov
fld
fsub
push
mov
xlat
das
nop
sbb
mov
adc
pusha
sub
mov
out
popa
push
ss
mov
imul
jp
push
adc
cld
in
cmps
outs
bound
inc
push
push
cs
jmp
mov
or
and
fs
mov
pusha
aaa
and
xor
fistp
or
mov
adc
ins
retf
jno
(bad)
jmp
pop
aaa
pop
movs
shl
xor
sub
xchg
(bad)
popa
ror
push
bound
dec
stos
ds
or
scas
std
dec
cmp
dec
dec
and
cwde
in
pop
into
es
mov
mov
push
adc
fs
cli
or
pop
cmc
inc
cmp
in
sub
xor
js
jp
dec
scas
(bad)
mov
iret
cmc
test
push
mov
mov
jb
xchg
adc
mov
(bad)
stc
lock
in
outs
(bad)
mov
or
pop
sbb
gs
nop
jle
cli
fisub
les
or
cmp
test
xor
push
es
out
add
cmp
mov
bound
leave
add
repnz
aam
inc
pop
fs
fadd
mov
pop
mov
sub
out
out
inc
lea
cmp
or
ja
mov
fld
(bad)
xchg
dec
repz
stos
stos
jo
leave
fiadd
movs
adc
cmp
int3
cmc
jae
scas
shl
pop
out
xchg
sbb
lods
je
enter
adc
add
cmps
mov
sub
dec
adc
jbe
(bad)
clc
shr
ret
cmp
inc
mov
inc
fld
xor
adc
inc
shl
inc
cmp
jno
clc
xor
inc
ss
fdivp
add
add
mov
cmp
pop
pop
xor
jge
sub
sub
out
mov
jmp
mov
iret
mov
outs
pusha
rcl
loop
je
sub
dec
add
xor
inc
or
pop
fsub
jo
push
rcl
iret
gs
in
adc
arpl
xchg
das
retf
and
stos
fist
inc
bound
mov
adc
sbb
jo
xor
adc
shr
xchg
inc
or
scas
aas
movs
(bad)
pop
out
mov
pop
rcr
inc
jb
dec
aam
hlt
jl
adc
icebp
pop
imul
fstp
inc
test
adc
call
(bad)
sub
dec
pop
pop
fild
jmp
mov
push
sar
mov
movs
sub
call
cld
cmp
scas
or
cmc
sub
cwde
mov
add
stos
dec
mov
push
cmps
sbb
push
lock
ret
add
jmp
movs
mov
push
jo
out
mov
aaa
test
in
test
mov
arpl
lea
lea
aam
inc
xor
dec
add
js
fwait
aam
out
push
mul
imul
inc
xchg
mov
or
mov
mov
jge
movs
fistp
jb
aam
or
aas
jae
cld
cwde
shr
mov
mov
ficomp
xchg
mov
fldenv
retf
inc
and
jg
enter
ss
sbb
pop
adc
stc
ds
sbb
cmp
mov
sub
xchg
loopne
pop
enter
nop
mov
es
fidivr
and
imul
mov
in
test
fwait
or
arpl
leave
(bad)
jg
cwde
(bad)
cmp
test
jne
retf
jmp
cmp
ins
xchg
fcom
shl
adc
sbb
lds
xlat
push
cmps
popa
imul
jle
sub
adc
std
gs
scas
sahf
movs
sub
jmp
lea
out
adc
ror
out
xchg
movs
test
pop
sbb
pushf
call
popa
sub
cld
xor
or
retf
lea
jp
xchg
jnp
test
mov
mov
adc
scas
jle
adc
ror
add
out
in
push
fbld
and
(bad)
loope
gs
sbb
or
push
adc
movs
cmp
jae
pop
mov
cmc
scas
hlt
fdivr
mov
push
push
jp
mov
hlt
sbb
icebp
jno
mov
retf
mov
movs
jg
dec
mov
mov
mov
in
pop
iret
sbb
sbb
lahf
sub
cmp
leave
lds
stos
pop
fs
cs
and
push
int3
pop
imul
test
test
push
fldenv
(bad)
bound
fistp
dec
mov
clc
(bad)
stos
ret
xlat
lock
gs
push
call
push
loop
imul
add
(bad)
and
cmps
popf
xlat
sbb
mov
push
mov
pusha
or
imul
stos
data16
test
xchg
pop
hlt
shl
leave
les
scas
repnz
das
push
add
cmp
cmp
push
or
data16
in
lods
je
jnp
add
js
mov
out
sbb
push
and
jmp
sbb
jne
in
cld
inc
jmp
test
cmp
push
mov
sbb
mov
lods
dec
mov
jae
cmps
les
xor
(bad)
mov
adc
gs
(bad)
jmp
cmps
fisubr
rol
outs
jl
in
push
das
aaa
xchg
in
inc
adc
xchg
aaa
popf
sub
cdq
and
aad
(bad)
cwde
cs
fisub
inc
mov
cli
int
jecxz
mov
sub
and
cmp
mov
push
jle
sar
pop
push
enter
cwde
daa
push
push
adc
adc
dec
loopne
add
fstp
(bad)
lods
xchg
lods
inc
call
ret
lds
ror
push
xchg
dec
jnp
xchg
xchg
pop
in
and
out
test
inc
xchg
(bad)
mov
xchg
loope
stos
add
push
loopne
retf
and
outs
pop
xlat
aaa
outs
call
pop
or
xor
arpl
out
fwait
cmp
jb
push
addr16
dec
fldenv
pop
sub
popf
or
cmp
sub
ins
push
push
leave
sahf
daa
mov
adc
mov
mov
iret
adc
cmp
add
cdq
popf
push
mov
repz
shl
xor
cmps
aam
mov
and
gs
xor
imul
xchg
or
dec
icebp
ss
xor
aaa
(bad)
ins
sub
adc
out
jecxz
xchg
repnz
inc
pop
lods
lahf
out
stc
add
jns
(bad)
mov
loop
(bad)
dec
lock
or
cmc
jmp
arpl
pop
cld
out
int3
ror
jmp
jmp
aam
push
repz
cmp
out
pop
xchg
mov
js
pop
test
mov
addr16
loope
movs
mov
(bad)
jmp
mov
mov
es
adc
cmc
jnp
clc
std
xchg
(bad)
mov
jle
xchg
mov
and
push
mov
sti
das
pop
mov
and
outs
inc
mov
loop
imul
leave
cli
or
repz
imul
adc
retf
xlat
stos
lea
je
dec
out
ds
es
mov
aam
outs
int
adc
jmp
ret
sub
mov
jl
in
sbb
out
inc
cmps
mov
push
sub
and
(bad)
xchg
push
push
(bad)
mov
lahf
mov
enter
pop
jae
cmp
imul
jmp
out
out
nop
add
mov
fcom
jg
push
shl
push
mov
aas
rcr
ret
(bad)
lahf
fs
or
outs
push
add
inc
rcr
inc
mov
jecxz
jae
jge
clc
or
and
dec
adc
pop
push
push
inc
jb
fisub
cli
sbb
or
imul
mov
cmp
div
push
xchg
int
popf
mov
in
jo
lea
mov
out
ret
adc
fdivr
add
test
frstor
fsub
mov
in
xchg
jle
sbb
sub
lods
movs
pop
xchg
std
pop
dec
jo
ja
dec
dec
cld
cmps
retf
pop
adc
je
int
sub
imul
add
out
mov
repnz
xchg
lods
pop
jmp
dec
ret
out
cdq
inc
xchg
add
mov
scas
scas
aaa
call
pop
aaa
jp
mov
out
push
outs
fld
add
mov
stos
mov
mov
dec
sar
fcomp
xchg
add
lahf
std
push
fwait
clc
and
neg
jg
dec
pop
enter
dec
add
aad
retf
mov
jbe
cmp
mov
fidivr
mov
push
push
mov
rol
fld
lock
jmp
not
adc
adc
cmp
and
and
test
daa
jmp
fs
rcr
ins
into
daa
dec
leave
fnstsw
out
push
ds
fidiv
jb
nop
cwde
sub
rol
mov
jp
inc
dec
adc
mov
shl
jae
push
jg
popa
arpl
shl
mov
es
xchg
jb
shl
cli
shr
fcomp
into
enter
daa
imul
or
inc
mov
mov
lds
cmp
mov
pop
test
push
xchg
xor
movs
movs
add
mov
hlt
in
fdivrp
mov
lock
jne
sub
jecxz
cmp
gs
mov
(bad)
mov
gs
stc
imul
push
dec
aad
cwde
add
dec
test
je
sbb
mov
cmc
fcmovb
sbb
mov
adc
xor
dec
inc
mov
push
add
sbb
aad
popa
dec
push
push
sti
push
xchg
push
jmp
sti
xor
sub
jp
add
test
cmp
xlat
push
sbb
imul
mov
mov
lods
stos
xchg
xor
aaa
and
sbb
xor
ins
mov
les
push
test
sbb
mov
xchg
mov
push
loope
xchg
or
sahf
aas
cmp
sbb
loop
into
jmp
sbb
cmps
jmp
add
inc
mov
(bad)
stc
fs
mov
scas
mov
test
jne
pop
adc
(bad)
lods
xchg
test
call
or
xor
push
dec
sbb
addr16
or
or
pushf
lahf
shl
pop
xchg
out
jns
fs
ds
bound
pop
fld
ret
(bad)
pop
push
mov
cmp
in
das
lds
pop
jge
leave
xchg
popf
lds
push
cmps
fist
fldenv
jge
xor
mov
add
jge
sub
mov
xor
xor
clc
retf
or
jae
dec
xchg
jle
arpl
or
push
stos
cmp
mov
fs
jb
cmc
icebp
mov
xor
out
test
sbb
xchg
aaa
pop
mov
loope
aam
in
jb
rol
mov
clc
rcl
jg
stos
sti
xor
in
outs
cmp
cmp
fisttp
mov
push
mov
ss
loop
adc
clc
xchg
jecxz
fmul
mov
or
jbe
or
dec
js
out
icebp
movs
movs
nop
fidivr
loope
push
jl
sub
mov
daa
repnz
popf
(bad)
xor
aad
enter
xor
scas
or
stos
and
cmp
mov
dec
adc
xchg
jmp
xchg
popa
lods
out
(bad)
pop
xchg
dec
aad
mov
movs
jnp
adc
adc
jl
sbb
or
and
out
inc
clc
and
shl
mov
lock
(bad)
movs
popf
icebp
ud2
popa
test
aam
push
dec
cmps
adc
jg
fdivr
leave
ins
cwde
or
shl
cmp
jb
imul
push
jmp
movs
stc
mov
adc
mov
test
(bad)
std
pop
push
and
adc
sbb
pop
enter
aam
out
dec
in
cmp
aas
ins
mov
xchg
add
push
in
sbb
out
mov
sub
ror
push
stc
scas
rcl
sub
(bad)
movlps
and
push
pop
imul
sbb
stos
cwde
mov
inc
mov
pop
retf
fs
ins
mov
call
(bad)
push
inc
adc
xchg
out
pop
cdq
icebp
test
data16
loop
mov
repnz
fs
mov
stc
cwde
stc
cli
sub
repz
mov
dec
dec
nop
cld
pop
add
es
or
loope
sahf
push
arpl
jns
dec
icebp
push
pop
aam
retf
or
mov
outs
adc
mov
ret
fcmovnbe
lods
dec
or
imul
jle
iret
gs
mov
cmc
test
leave
mov
je
je
sbb
push
mov
xor
xor
dec
js
xchg
hlt
sbb
(bad)
test
loop
mov
and
xor
mov
pop
mov
data16
inc
lds
mov
jbe
mov
call
in
arpl
retf
data16
mov
je
xchg
movs
fld
jo
fcomip
fimul
push
lds
mov
and
std
retf
sahf
sbb
ret
add
retf
sbb
test
int3
out
add
cdq
js
(bad)
call
sub
push
retf
push
ds
mov
cmc
mov
fild
inc
push
idiv
je
jp
push
sbb
inc
mov
ins
push
loop
lods
jge
add
and
cmp
aam
sahf
fild
push
sbb
out
jbe
or
ffree
ret
mov
pxor
inc
add
sub
outs
in
sub
dec
mov
aaa
iret
jns
push
mov
in
xor
jecxz
popa
pop
cmp
data16
jge
popa
(bad)
dec
test
xlat
outs
add
mov
mov
test
ds
(bad)
jne
iret
lods
push
pushf
sub
add
mov
xor
cmp
rol
movs
mov
sub
scas
(bad)
cmp
jmp
cmp
das
fwait
jae
int
out
leave
mov
inc
test
enter
arpl
add
dec
(bad)
push
jae
lods
jmp
and
adc
sbb
sahf
ja
push
das
mov
dec
ds
fst
lahf
iret
adc
and
push
inc
ins
jmp
cmps
cli
fwait
inc
not
scas
retf
or
xor
stos
push
push
cmp
mov
retf
fadd
pop
jmp
sub
xchg
mov
lods
sub
adc
or
jb
inc
jbe
jge
or
jnp
shl
in
es
sbb
jecxz
ret
outs
inc
push
outs
adc
adc
js
rcl
mov
sbb
jge
add
push
jmp
inc
in
(bad)
pusha
call
sahf
ret
test
dec
dec
mov
test
in
cmps
push
cmp
pop
in
and
pop
fistp
cli
mov
xchg
mov
and
sub
repnz
cmp
das
(bad)
xchg
push
aam
dec
scas
test
test
sar
icebp
and
pop
daa
xchg
mov
lsl
mov
cmc
(bad)
fiadd
popa
or
dec
mov
mov
push
ficom
rcr
add
push
cmp
ins
lods
sbb
mov
aaa
adc
fisub
inc
sbb
scas
add
mov
arpl
(bad)
aam
jl
jmp
cld
jle
out
fstp
xor
xchg
(bad)
dec
pop
and
xor
sbb
dec
pop
cmps
sbb
xor
jbe
jl
sub
dec
leave
sub
mov
and
xchg
imul
inc
mov
sbb
xchg
sbb
data16
adc
ins
loopne
mov
sbb
imul
sbb
mov
jno
adc
add
pcmpeqw
mov
adc
jmp
adc
inc
scas
ins
adc
aas
sbb
sub
stc
and
and
xor
inc
mov
adc
ror
fst
jmp
mov
xchg
loop
mov
push
in
push
jmp
jns
repz
in
pop
and
pop
cmps
mov
xchg
push
ins
inc
xor
outs
fstp
add
pop
stos
or
data16
imul
inc
mov
or
cmp
clc
scas
xor
test
add
sbb
mov
dec
dec
lahf
mov
retf
pop
leave
(bad)
add
add
push
daa
mov
pusha
cli
jmp
cmp
(bad)
cmp
pop
and
xor
xchg
add
int3
jecxz
jg
sbb
(bad)
fs
xlat
jo
ins
cs
jmp
test
mov
pop
push
ds
mov
inc
lds
adc
pop
rcr
loopne
pop
jbe
jge
fdiv
mov
xchg
in
loopne
test
ds
pop
mov
xor
jmp
jns
jne
cmps
cwde
mov
mov
loop
pop
jnp
fsub
and
jp
add
push
fnstcw
cs
fcomp
inc
xchg
(bad)
(bad)
iret
pop
pop
nop
sub
jg
fistp
cs
jns
stc
bound
sub
das
in
adc
mov
cmp
test
cmp
mov
mov
push
dec
pop
cli
add
jg
and
fld
cmp
lahf
ret
mov
cmp
ror
add
mov
pop
rol
add
pop
ja
iret
out
sbb
mov
sub
ror
ins
int3
fnstenv
or
mov
in
xor
sti
cdq
mov
push
jmp
xor
push
out
out
mov
xor
enter
pop
add
ret
jmp
inc
add
cmp
cmps
popa
mov
jg
xor
mov
std
jno
xchg
jno
push
scas
imul
sbb
stc
outs
movs
sbb
pop
(bad)
cmp
pop
cmp
xchg
and
xor
inc
ret
cwde
mov
lds
cmp
mov
mov
cmps
jae
xchg
(bad)
neg
mov
inc
xchg
add
pop
ss
xchg
test
inc
ja
jne
cmp
loop
(bad)
push
xlat
arpl
mov
or
pop
fld
int3
mov
hlt
test
add
pop
mov
xlat
jp
ror
sub
push
ja
fst
fiadd
push
pop
dec
dec
push
pop
sbb
sbb
popa
mov
out
cmp
xor
mov
and
out
test
xor
pusha
lods
or
dec
mov
xchg
xchg
add
outs
test
arpl
ficomp
inc
inc
outs
jns
mov
ret
or
sub
scas
inc
(bad)
aam
jp
daa
xchg
xchg
ins
in
das
loop
pop
mov
pop
cmp
push
or
js
cmp
inc
jmp
mov
movups
adc
pop
mov
call
jg
jns
ss
xchg
jmp
es
stos
xchg
xor
out
ins
test
test
retf
dec
scas
mov
cld
and
enter
push
push
xor
xor
fdivrp
leave
call
or
fsubrp
adc
aad
jecxz
mov
xchg
and
repz
xchg
push
lock
mov
sub
(bad)
outs
or
push
outs
mov
test
cld
mov
pop
hlt
pop
mov
push
repz
dec
fdivr
(bad)
sub
mov
retf
xor
jge
out
mov
add
and
daa
mov
(bad)
add
cwde
fsub
mov
aam
cmc
jnp
xchg
repz
retf
mov
lock
jg
in
add
mov
cmps
les
out
mov
add
xchg
pop
xchg
pop
mov
cs
and
or
pop
retf
cmc
jne
xchg
hlt
push
stos
scas
outs
lods
shl
ins
xor
sub
sub
sub
adc
int3
xor
imul
fidiv
and
add
mov
pop
movs
fdivr
push
addr16
sub
adc
stos
(bad)
popf
mov
dec
(bad)
cld
sub
fwait
stos
cli
xor
mov
mov
inc
das
je
sub
(bad)
shr
lds
in
pop
pop
mov
mov
arpl
and
cmp
jle
mov
adc
mov
mov
loop
lods
mov
sub
ss
cwde
pop
or
(bad)
leave
out
jmp
test
mov
call
imul
xor
xchg
cmps
or
xchg
sub
ins
or
push
iret
dec
icebp
or
push
add
imul
imul
add
add
or
push
cmp
aam
adc
fisub
shl
mov
les
mov
sub
scas
dec
xlat
mov
and
dec
in
shl
jb
mov
dec
lds
push
push
iret
cdq
popa
cli
in
test
in
push
mov
ds
adc
cmp
dec
push
je
mov
mov
pop
sbb
inc
and
ja
movs
or
(bad)
jno
pop
mov
jg
xor
xchg
mov
or
out
mov
out
test
dec
jne
xchg
(bad)
mov
or
shr
mov
jle
sub
adc
add
pushf
cli
jbe
scas
sahf
add
lahf
jle
nop
cmps
pop
or
cmp
dec
inc
repz
loopne
add
test
mov
pop
mov
(bad)
xchg
aam
adc
out
mov
sbb
push
xor
mov
retf
dec
es
les
test
jo
retf
mov
jle
fwait
adc
pushf
out
lahf
xlat
mov
push
push
mov
pop
retf
sbb
mov
cmp
mov
ins
fwait
cdq
push
mov
xor
cmps
inc
and
je
mov
sub
retf
pop
jge
inc
dec
es
call
push
cli
mov
cmp
add
sar
inc
xor
push
stc
adc
gs
or
xor
pop
retf
push
in
loop
mov
test
jmp
jmp
neg
push
mov
add
jmp
ja
lahf
retf
lock
sub
mov
adc
fdiv
ret
pop
adc
sbb
(bad)
and
xchg
out
mov
mov
mov
adc
push
popf
aad
and
xchg
xchg
retw
ret
aad
push
mov
xchg
mov
call
sub
std
in
cmp
leave
loop
mov
lods
cli
div
adc
mov
mov
pushf
sub
mov
aaa
cmc
outs
movs
sahf
bound
data16
aam
ret
sub
sbb
adc
movs
push
pop
jbe
mov
push
movs
sti
xchg
jmp
xchg
inc
push
xchg
sar
rcl
test
or
loop
sub
mov
xor
mov
inc
sub
sub
jg
xchg
scas
push
pop
push
shl
iret
or
ror
sub
ret
cmp
sub
aaa
clc
mov
sar
fwait
inc
sbb
adc
test
cmp
xor
xchg
adc
mov
mov
loop
jne
enter
int
pop
test
pop
cmp
inc
std
mov
pop
inc
out
mov
dec
sub
inc
pop
mov
pop
or
retf
mov
pushf
pop
outs
push
xchg
adc
je
fiadd
scas
cmp
movs
ja
mov
xor
(bad)
out
cmps
mov
cdq
dec
inc
jnp
inc
scas
sbb
xor
sbb
lea
and
mov
mov
mov
(bad)
leave
mov
jbe
sub
jmp
bound
mov
in
sbb
test
enter
scas
out
cmps
outs
icebp
movs
arpl
pusha
push
leave
mov
loope
xchg
ss
rcr
retf
mov
arpl
and
imul
fisttp
stos
std
pop
clc
and
ja
cmp
pushf
aas
mov
rcr
mov
pop
fstp
inc
mov
or
adc
cmp
and
or
ins
inc
nop
out
cmp
xlat
cmps
cmp
shl
pushf
rol
ror
sbb
fadd
ins
xchg
shr
or
xchg
pinsrw
mov
daa
cli
pop
jae
arpl
mov
lods
mov
lds
jmp
out
adc
enter
imul
arpl
js
mov
mov
cwde
xor
inc
scas
data16
cmp
into
lods
cmc
call
scas
jns
cld
jb
inc
(bad)
retf
loope
movs
push
fsubr
jmp
xchg
sbb
imul
mov
adc
rcl
mov
(bad)
test
mov
xor
mov
xchg
mov
mov
add
cmps
add
repz
fwait
int
jecxz
sti
cmp
fs
retf
out
jmp
pop
loopne
dec
dec
test
lahf
sahf
popa
retf
lods
xor
ror
or
imul
iret
mov
fwait
cld
shl
das
jbe
dec
jnp
cmp
mov
jmp
sub
jbe
stc
jb
test
push
pop
jecxz
lds
fnstenv
nop
dec
mov
ja
gs
shl
rcr
sub
test
fstp
jl
div
cld
adc
enter
out
inc
stos
mov
ja
add
inc
pushf
popf
inc
mov
cs
push
cmps
adc
not
imul
js
mov
fs
mov
lea
fidivr
mov
sbb
mov
cli
jl
bound
arpl
pushf
dec
push
inc
in
fstp
pop
add
jmp
jle
inc
lock
and
call
arpl
(bad)
jge
xchg
outs
scas
inc
call
adc
jnp
mov
mov
test
xchg
mov
mov
xor
mov
out
retf
sub
hlt
shl
retf
mov
mov
pop
ja
and
ror
frstor
adc
std
mov
dec
loope
dec
or
xchg
pop
mov
sti
not
aas
dec
stos
or
mov
or
hlt
or
pop
ins
cmc
cdq
inc
call
inc
nop
lds
push
sub
stos
push
or
repz
mov
sub
pop
sub
ds
jl
push
xchg
xor
dec
js
movs
pop
fistp
gs
jp
sbb
jbe
add
pop
aam
rol
dec
dec
stc
clc
cmp
xchg
in
sbb
adc
sar
clc
div
lods
cmp
arpl
sbb
(bad)
fidivr
push
pop
loop
mov
push
int
mov
sar
ins
jge
mov
and
repnz
xlat
out
mov
lock
mov
pop
js
dec
sub
pop
lods
shl
pop
sub
pop
jne
clc
pop
sbb
xchg
test
push
mov
pop
push
mov
fwait
adc
xchg
jecxz
dec
out
xor
jmp
retf
int3
outs
lock
(bad)
push
cmp
mov
bound
movs
push
sub
mov
cmp
retf
jae
sbb
pop
dec
lods
data16
pop
adc
jnp
into
jae
pop
mov
xchg
xchg
fcomp
push
sbb
sbb
in
mov
ficom
test
xor
fist
(bad)
in
nop
lods
cmp
shl
sub
cmp
mov
repz
test
and
sub
lds
mov
test
xchg
jecxz
loop
jmp
dec
cmps
aas
mov
fcom
jge
ret
add
dec
lea
adc
aam
mov
jne
pop
or
ret
repz
sti
clc
fild
fadd
cmp
cmps
cwde
xchg
pop
stos
mov
xchg
test
sub
scas
fsubr
jg
push
es
mov
sbb
mov
mov
scas
push
cld
inc
cdq
sub
shl
jg
mov
(bad)
rcl
xchg
mov
mov
xchg
fild
dec
mov
cwde
aad
inc
and
xchg
or
adc
adc
sub
jl
ror
div
pop
mov
sub
in
repnz
(bad)
adc
mov
lock
clc
sti
pop
pop
and
lods
jb
jp
popf
scas
cmp
push
shr
enter
xchg
xchg
dec
ss
(bad)
jle
(bad)
out
pop
das
mov
inc
cmps
fmul
add
(bad)
cmp
clc
pop
push
test
sub
xor
scas
aam
retf
(bad)
lock
adc
mov
lahf
lods
js
jecxz
or
mov
cmp
mov
retf
dec
vpmacsdql
imul
sub
dec
ja
in
xchg
dec
xor
and
out
test
frstor
mov
lock
cmp
cmp
loop
shl
clc
int3
dec
imul
hlt
int3
cmp
push
jg
push
daa
pushf
inc
push
or
or
xchg
in
not
lods
mov
repz
pop
add
xor
jmp
jmp
jo
imul
sbb
fwait
cmp
push
push
stc
(bad)
lods
fcom
pop
mov
xchg
movs
push
sub
dec
repnz
xchg
lods
bound
shl
inc
lods
stos
xor
imul
adc
jle
xlat
sbb
jnp
sahf
call
(bad)
cmps
jmp
dec
xchg
out
xor
add
ja
fs
mov
aaa
das
fsubr
jl
(bad)
sub
ins
jno
mov
sbb
mov
ret
loopne
in
push
cwde
push
js
cwde
add
push
push
mov
sbb
inc
jecxz
mov
sar
hlt
pop
and
adc
sub
addr16
jo
cmp
push
and
jp
std
icebp
inc
and
push
mov
rcl
xchg
pop
sbb
sar
push
push
sub
add
mov
inc
and
xchg
loop
dec
and
test
xor
sbb
sbb
test
xchg
xchg
xchg
pop
dec
or
nop
loope
pop
push
pop
push
movs
push
push
xchg
ins
lock
inc
mov
fdivrp
stos
fst
cmp
aas
or
and
jo
cmp
(bad)
test
jecxz
mov
sbb
cmps
aaa
cmps
fsubr
pop
fidiv
int
mov
cmp
movs
cmp
sahf
xlat
daa
js
es
sbb
and
mov
loop
popf
pusha
xor
fisttp
lods
or
pop
mov
cmp
fs
dec
jb
out
popf
call
and
movs
jecxz
in
adc
inc
and
loop
add
cmp
jnp
xor
cmp
xchg
adc
loop
aaa
pop
and
aaa
scas
or
sub
mov
push
sahf
shl
jecxz
repnz
test
in
push
jmp
movs
xor
xchg
enter
les
and
or
fldenv
mov
xor
hlt
cmp
mov
mov
shl
repnz
les
adc
rcl
shl
inc
ja
in
pop
hlt
call
pop
mov
stos
jns
cld
lods
pop
daa
cmp
call
cmp
ins
bound
cmp
std
mov
pop
aad
stc
inc
cmps
inc
test
xor
std
call
mov
rcl
call
stos
jns
les
sbb
std
call
push
std
mov
cvtdq2ps
data16
in
xor
xchg
cmp
xchg
inc
(bad)
(bad)
lahf
adc
xchg
cmp
xchg
pop
std
push
jbe
xchg
inc
arpl
out
into
add
repnz
retf
sbb
ret
es
xchg
push
mov
sub
xchg
mov
out
push
xor
mov
sub
cmp
int
pop
mov
cmp
sar
push
fnstenv
cwde
aad
xchg
mov
xchg
cmps
pop
ins
cs
jl
leave
clc
into
jmp
loopne
and
(bad)
pop
mov
sbb
loopne
mov
cmp
push
js
inc
aam
jge
loop
shl
cld
shr
jle
nop
mov
mov
xchg
fistp
fidiv
(bad)
mov
cmp
add
dec
dec
leave
js
adc
pusha
adc
out
pop
mov
shr
mov
mov
ret
les
pop
or
xor
das
data16
shl
push
jl
inc
rcr
scas
sub
mov
iret
and
mov
inc
adc
push
push
add
sub
ss
dec
fprem
xor
cld
or
inc
cmp
lods
mov
popa
mul
test
stos
imul
out
jae
mov
adc
fwait
(bad)
stos
xor
stos
or
loope
lahf
stos
cmp
std
mov
add
inc
mov
fld
mov
fnstcw
and
popf
into
fcomp
jecxz
not
cmp
mov
and
hlt
pop
std
loopne
adc
push
pushf
pop
push
pop
enter
mov
jmp
nop
dec
and
(bad)
dec
jb
(bad)
ins
fcom
adc
repz
daa
adc
pop
ja
inc
sbb
mov
ins
and
fcomp
sahf
mov
rol
pusha
adc
xor
outs
push
clc
cld
push
jecxz
aaa
pop
fld
cs
enter
mov
int3
and
je
fwait
ror
(bad)
or
repz
xchg
mov
inc
pop
int
in
aam
mov
sahf
xchg
jge
adc
imul
xchg
sbb
cmp
in
jecxz
scas
or
movzx
mov
pushf
addr16
xchg
popf
(bad)
loopne
xor
sbb
jmp
mov
push
xor
push
dec
add
jecxz
fisttp
inc
push
push
dec
test
cmc
aaa
fs
retf
out
cmp
stc
sub
push
xor
or
gs
dec
sbb
in
xchg
or
test
cmp
sub
or
(bad)
sar
les
fild
add
in
popf
rcr
jg
inc
pop
nop
pop
add
retf
in
sbb
sar
clc
dec
push
xchg
inc
inc
in
xlat
pop
sub
xchg
(bad)
fmul
jge
ja
retf
sbb
pop
cdq
push
xchg
push
cmc
mov
xchg
sub
nop
clts
in
inc
cmp
pop
clc
shl
xchg
mov
cs
das
daa
scas
mov
push
jns
cmc
xor
mov
or
adc
loop
or
sar
push
push
outs
cmps
and
push
jmp
xchg
ret
add
jb
daa
add
das
push
out
mov
out
stos
movs
enter
xchg
ror
inc
ss
out
xor
movs
outs
(bad)
jae
jns
outs
shl
xchg
xor
cmp
sbb
and
test
aas
add
pop
clc
or
adc
call
or
adc
mov
jns
cmp
pop
xor
(bad)
xor
push
adc
fmul
add
test
adc
enter
pusha
ja
push
pop
push
cwde
sti
ret
std
fmul
jne
mov
push
or
xchg
pushf
mov
mov
dec
scas
mov
fwait
ja
(bad)
(bad)
aad
push
push
dec
push
adc
push
xor
mov
bound
and
inc
retf
push
and
je
out
push
lock
dec
push
test
imul
ficom
xchg
or
add
push
push
sar
test
frstor
loopne
add
mov
mov
(bad)
out
sub
and
pop
lods
dec
xor
scas
jp
stos
xor
inc
push
mov
jmp
and
mov
lods
movs
and
loope
je
jns
jnp
mov
sub
or
dec
mov
add
aas
lock
rcr
jnp
mov
push
scas
sbb
rol
adc
mov
movs
inc
test
pop
sbb
add
aam
retf
jecxz
fnsave
sbb
mov
fldcw
jo
cwde
lea
mov
sar
rcr
sbb
push
mov
and
mov
or
das
popf
dec
(bad)
jae
xor
add
mov
mov
mov
mov
or
cmp
mov
mov
in
enter
sub
in
dec
outs
aad
xor
out
addr16
arpl
and
stos
es
sub
jno
mov
pop
(bad)
int3
pop
add
sbb
pusha
leave
pop
pop
(bad)
sbb
push
inc
xor
cld
fnop
movs
ror
mov
jl
push
push
retf
outs
jge
lds
mov
jp
hlt
xor
mov
stos
repnz
repnz
gs
mov
dec
cdq
div
xor
inc
ret
xor
push
out
jecxz
adc
cdq
jmp
aad
leave
sar
mov
sub
mov
test
jnp
iret
lods
ins
mov
(bad)
mov
repnz
and
mov
push
je
push
call
(bad)
inc
in
adc
call
repz
into
jmp
je
leave
movs
aam
mov
inc
stos
mov
sub
inc
lahf
aam
fst
das
mov
sbb
dec
movs
ins
or
call
and
sbb
inc
cmp
nop
imul
movs
or
enter
xchg
dec
neg
ret
ins
inc
jne
aas
ficom
arpl
and
dec
mov
xchg
xchg
sub
push
ret
retf
push
mov
xchg
stos
jnp
lea
pusha
xor
jmp
stos
mov
and
in
jne
cmp
sahf
push
lods
cmp
or
clc
xor
or
scas
or
adc
test
push
cwde
jmp
add
retw
jg
cmp
movs
and
sbb
sbb
xchg
xor
jl
adc
push
das
xchg
mov
ins
mov
imul
mov
sbb
jb
mov
shl
or
in
shr
aad
push
push
cmp
mov
and
test
add
pop
(bad)
xchg
jg
xor
neg
repnz
movs
loopne
adc
cld
rol
jge
push
addr16
arpl
and
cmp
cmp
xchg
das
push
out
mov
cmp
scas
dec
jno
data16
shr
in
sub
punpckldq
loope
outs
pusha
jge
das
push
pop
rcl
push
out
cmps
cld
stc
test
test
in
mov
bound
pop
sti
ds
mov
xchg
shr
loope
jmp
je
jmp
loop
dec
mov
or
fld
shl
adc
iret
enter
aad
adc
daa
out
adc
dec
in
call
scas
mov
(bad)
mov
movs
addr16
inc
push
adc
cmps
ds
lods
xchg
bound
fcmovu
dec
or
fcom
dec
pop
int3
mov
(bad)
repnz
xchg
jmp
or
dec
or
push
jecxz
sub
mov
jae
mov
push
xchg
pop
hlt
push
movs
rcr
pop
outs
xchg
jno
sahf
xchg
and
or
push
xor
add
(bad)
popa
scas
mov
mov
mov
mov
nop
inc
sbb
rcr
push
call
(bad)
js
push
jno
in
xchg
xlat
gs
ins
mov
pop
mov
icebp
pop
cmp
mov
jg
in
je
test
movzx
std
mov
pop
(bad)
(bad)
sbb
movs
mov
inc
pop
adc
mov
pop
pop
pop
popf
inc
inc
and
add
xchg
push
mov
sub
push
and
cmc
ins
jle
xlat
mov
repnz
loop
fisub
mov
ds
jmp
dec
fwait
sahf
retf
mov
push
dec
inc
xor
mov
mov
jecxz
xchg
sub
sbb
cmc
jge
push
out
stc
cmps
sbb
out
mov
mov
mov
mov
adc
leave
mov
ret
mov
cmc
into
ins
sbb
aad
mov
das
icebp
and
push
repnz
enter
inc
xor
pop
mov
sbb
aad
push
push
pusha
out
scas
xchg
sar
jle
dec
adc
mov
sub
mov
mov
cdq
push
test
pop
add
push
adc
clc
ja
cmp
jae
sub
mov
loope
pusha
dec
fwait
sub
cmp
mov
cmp
xchg
lods
xchg
dec
xor
pop
mov
fcomp
lods
es
les
in
cmps
addr16
mov
out
inc
push
arpl
test
mov
cmps
(bad)
adc
loopne
es
icebp
mov
and
outs
sub
jae
lahf
and
or
popa
inc
push
jmp
ins
scas
pushf
mov
cmp
(bad)
out
test
and
gs
add
stc
cmp
imul
and
pcmpgtb
std
dec
(bad)
or
dec
mov
call
pushf
pusha
(bad)
mov
(bad)
mov
(bad)
jmp
mov
mov
adc
pusha
arpl
rcr
nop
mov
cli
ins
pop
fild
or
jl
repnz
pop
push
out
jmp
push
xor
push
loope
clc
iret
rol
jge
push
jmp
(bad)
mov
cmp
outs
shr
call
clc
push
sub
xchg
jge
bound
mov
adc
xchg
(bad)
les
push
loope
int
cwde
stos
outs
lods
push
dec
push
jecxz
push
ins
neg
fst
fild
cli
aaa
inc
(bad)
inc
xor
std
outs
jg
pop
pop
mov
fucomip
cmp
(bad)
in
sub
ss
xchg
cwde
mov
xchg
and
cmp
movs
xchg
loopne
and
and
jnp
mov
shr
aam
mov
sbb
jg
cld
lods
into
int
jne
dec
iret
ins
xor
in
in
add
lds
scas
mov
lods
ret
pop
cld
xor
jo
and
sub
cmp
adc
sbb
mov
inc
test
pop
std
clc
(bad)
ja
ret
and
fcmovu
pop
clc
add
lock
jle
mov
in
pusha
adc
push
jbe
and
ret
arpl
in
repnz
push
cmp
gs
mov
cmp
dec
add
pop
cli
mov
jge
xchg
arpl
push
rcl
rcl
imul
retf
outs
mov
pop
push
pusha
scas
push
pop
mov
retf
jp
add
fcom
mov
sbb
icebp
mov
(bad)
mov
out
mov
adc
(bad)
cmp
inc
push
xor
mov
or
daa
out
stc
cmp
fdiv
arpl
or
cmp
sbb
mov
pop
inc
adc
ds
xor
jae
xor
cmc
or
outs
sub
cld
add
mov
idiv
das
adc
int3
mov
test
mov
cmp
retf
inc
js
xchg
ins
adc
stc
ss
push
daa
dec
(bad)
adc
sub
aaa
push
loopne
cmp
cmp
jle
fstp
mov
adc
in
sar
xor
rcl
mov
add
dec
ins
xor
(bad)
mov
push
mov
or
cmp
addr16
mov
div
mov
test
mov
jno
sbb
mov
sub
sub
push
adc
xchg
mov
jns
rcr
fprem1
lods
stos
sbb
mov
inc
jg
je
and
jmp
mov
jecxz
mov
add
push
sub
xlat
inc
rol
inc
adc
push
pop
shr
sbb
(bad)
sbb
pop
and
pop
or
addr16
push
mov
inc
out
shl
mov
jg
push
out
mov
push
mov
cli
xchg
add
(bad)
jno
push
xchg
into
mov
call
out
fnsave
shl
in
in
push
into
inc
idiv
dec
das
loopne
sbb
sbb
push
cmps
sub
repnz
push
mov
xor
jmp
aam
in
jge
repz
jecxz
push
cmp
push
fcmovnbe
call
aam
adc
data16
sbb
adc
or
xlat
fwait
(bad)
jl
fcmovnbe
arpl
push
sbb
jmp
fsubrp
adc
dec
fild
pop
lods
or
fiadd
lock
sbb
movs
dec
movs
inc
rcl
and
mov
out
mov
mov
scas
mov
inc
jnp
inc
jl
mov
pushf
jg
and
xchg
inc
test
mov
jnp
cli
inc
out
mov
(bad)
clc
lods
lahf
push
inc
jge
mov
jo
push
jne
or
cld
addr16
test
fcomp
pop
lods
cdq
inc
fisubr
into
jnp
idiv
push
shr
add
ins
retf
pop
mov
in
into
sbb
and
addr16
dec
push
out
ds
sbb
out
adc
mov
movs
mov
popa
cmps
push
ret
call
push
out
push
cmps
push
(bad)
scas
jmp
add
mov
lea
lock
cwde
or
sbb
dec
inc
sbb
lea
sub
rcl
xor
inc
pop
stc
dec
push
ja
sbb
jmp
jo
jbe
push
adc
(bad)
rcl
jnp
cdq
shufps
dec
mov
cmp
or
into
mov
xor
fidivr
(bad)
and
(bad)
call
addr16
pusha
xchg
in
daa
push
in
fstp
cmp
jmp
mov
shl
jg
or
gs
mov
mov
js
xchg
repnz
mov
mov
xchg
(bad)
jecxz
out
pop
dec
mov
aam
xchg
loope
mov
dec
and
ja
push
mov
add
mov
call
faddp
sub
addr16
out
dec
jle
jmp
ret
sub
aas
dec
xchg
mov
xchg
out
mov
pop
fidiv
loopne
push
sti
xchg
xchg
jle
in
mov
or
fcom
adc
sbb
mov
and
shl
fcomp
sub
cmps
sub
in
cmps
pop
lock
push
inc
sub
rcr
popf
xor
mov
(bad)
ror
jmp
sub
movs
dec
mov
call
inc
jmp
inc
dec
jle
pop
jnp
sbb
hlt
ja
fwait
cmp
pop
pushf
sbb
adc
push
lods
sbb
xchg
dec
lods
add
pop
jno
mov
inc
push
cmp
xor
push
lea
repnz
mov
popa
scas
dec
imul
jge
pusha
ret
cmps
add
loopne
clc
dec
inc
cmps
sbb
jmp
movs
push
fstp
mov
dec
je
call
scas
out
mov
add
bound
ins
mov
stos
jno
imul
jle
cmp
xlat
jbe
retf
fistp
mov
cmp
or
add
sbb
retf
cmps
jno
sbb
mov
xchg
movs
nop
in
and
dec
ss
fisub
cwde
addr16
jle
(bad)
xchg
sbb
clc
das
aam
or
dec
add
add
dec
dec
mov
test
pop
xchg
cmp
xchg
jbe
stos
push
shl
test
or
scas
stos
xor
and
jno
push
pop
inc
out
sub
jl
dec
pop
loopne
popa
scas
push
enter
clc
jnp
inc
or
ror
mov
lahf
mov
mov
cld
jecxz
shl
or
lea
push
xchg
hlt
and
xchg
arpl
sbb
push
pop
lahf
(bad)
lahf
call
pop
add
popa
or
sub
aaa
in
ins
xlat
mov
xor
add
mov
jne
movs
pop
dec
pop
pop
data16
sub
in
rcr
in
ret
in
and
sub
loop
xor
sar
ret
into
jne
pop
jl
shl
iret
add
je
ret
dec
pop
ror
in
hlt
pop
out
shl
leave
in
sbb
cmps
sbb
pop
fisub
adc
inc
fwait
test
pop
pop
mov
and
push
bound
jo
add
lahf
jmp
mov
jg
outs
cdq
(bad)
jo
jmp
mov
icebp
pop
or
sub
mov
lods
aas
jne
test
aaa
mov
inc
cld
ffreep
in
(bad)
loopne
inc
iret
stc
call
cli
psadbw
shr
aad
aas
mov
call
xor
xor
fidiv
fst
mov
jo
sub
mov
cdq
div
sar
mov
dec
popa
and
inc
jno
outs
iret
jne
pop
in
push
(bad)
jbe
xchg
push
cmps
sub
out
repnz
call
ins
sbb
or
inc
pcmpeqw
in
cmps
les
dec
xchg
sbb
xchg
jne
xchg
cmp
push
adc
mov
out
pop
cmp
cmp
push
test
das
cmc
mov
lock
in
add
jmp
loopne
dec
mov
add
mov
adc
lahf
jecxz
das
xchg
loopne
cmps
xor
jmp
test
pop
pop
(bad)
push
xchg
out
mov
std
call
pop
movs
outs
sbb
pop
sub
test
cmp
iret
adc
mov
mov
add
xchg
or
jge
pop
mov
(bad)
idiv
popa
call
mov
xchg
jmp
retf
push
pusha
bnd
das
cmps
mov
loope
cli
inc
rcr
into
jne
dec
ret
in
jbe
or
or
lods
sub
xor
pop
mul
sahf
js
adc
aas
test
push
iret
mov
jge
shl
ss
ret
push
lds
(bad)
pop
neg
jmp
add
cmp
out
pop
scas
ror
stc
pop
in
jb
or
inc
sbb
pusha
repz
shl
add
mov
out
nop
mov
jb
add
jge
inc
xor
or
in
pop
mov
pop
add
test
std
mov
xor
gs
repz
test
popf
out
inc
dec
cs
mov
aad
dec
mov
xor
shl
adc
push
mov
inc
dec
or
stos
out
inc
fisub
jmp
mov
(bad)
scas
cmp
sub
sbb
fstp
mov
inc
(bad)
cli
sahf
dec
lods
call
stos
out
sbb
mov
mov
cmp
movs
inc
jge
rcl
xor
gs
push
loope
lds
mov
push
out
and
pusha
xor
loopne
push
push
clc
shl
fidiv
fisttp
push
mov
int
fsubr
sar
sbb
ret
pop
fnstcw
cmp
sbb
enter
mov
add
add
fsubp
inc
push
(bad)
xor
jne
loop
or
pop
sub
rcl
inc
inc
xchg
pop
inc
adc
inc
dec
imul
cmc
dec
xor
mov
mov
rol
push
and
sub
jle
add
retf
call
(bad)
(bad)
inc
or
jmp
add
mov
fadd
xchg
nop
mov
outs
daa
xor
sub
movs
push
pop
jl
aam
je
pop
in
retf
or
jmp
jae
cmp
fwait
sbb
pop
jp
jle
add
iret
dec
mov
xor
xchg
jl
outs
adc
loope
popf
jbe
adc
mov
mov
fbstp
fmul
inc
or
std
jmp
jbe
jg
popf
das
dec
into
xchg
call
or
rcr
imul
sub
xor
xchg
xor
push
sub
xchg
retf
jl
lahf
push
or
outs
fwait
div
mov
std
mov
rcr
mov
rcl
push
bnd
scas
inc
enter
cmc
jns
pop
bound
xchg
sbb
sub
test
icebp
add
test
or
pop
test
mov
cwde
or
nop
mov
movs
fiadd
sub
div
ret
xor
sub
push
push
push
sbb
loope
not
adc
pop
fstp
out
cmp
imul
fistp
std
ret
mov
ret
jb
popa
nop
push
(bad)
pusha
fwait
(bad)
mov
add
jae
imul
mov
(bad)
ja
in
xchg
outs
mov
scas
push
fs
in
jmp
inc
xchg
aad
out
jle
jno
cli
mov
and
pop
adc
pop
sub
inc
out
out
pop
shl
push
xchg
mov
add
mov
jmp
pop
fld
push
or
pop
push
sub
aam
and
jno
xchg
push
daa
aad
or
xor
into
mov
push
hlt
pop
retf
pushf
mov
imul
call
or
xor
dec
xor
jae
xor
div
mov
sbb
jl
data16
loop
div
lods
pusha
lods
fistp
push
adc
sahf
imul
cmp
mov
mov
cmps
jae
pop
xchg
retf
shr
jle
iret
pop
xchg
data16
(bad)
lds
inc
jge
jecxz
xlat
fisub
sub
adc
push
iret
mov
hlt
push
sub
imul
sub
xchg
aas
retf
jmp
xchg
clc
lahf
stos
icebp
test
push
mov
cmp
fldenv
stos
lods
pop
cs
clc
xor
inc
imul
mov
vsubsd
xor
(bad)
jl
dec
rcr
push
mov
imul
retf
inc
push
out
add
jmp
mov
loop
and
or
inc
mov
or
dec
ret
imul
loope
add
adc
mov
stos
sub
sti
adc
test
fiadd
fisubr
sub
push
jge
jmp
pop
mov
pop
jmp
jb
rcl
xor
jg
dec
icebp
sbb
dec
sub
push
pop
loope
shl
pop
mov
imul
cdq
(bad)
or
add
and
clc
cdq
mov
jns
cmps
or
sub
gs
mov
shr
outs
jp
sbb
dec
mov
aaa
jae
pop
adc
mov
xchg
sbb
sub
(bad)
(bad)
mov
outs
xor
mov
test
out
cmp
cmp
mov
jmp
xchg
and
das
shl
or
pop
addr16
addr16
cmp
mov
cmp
fcmovb
mov
test
rcl
retf
push
add
ds
pushf
and
out
cli
sti
jl
jl
call
jae
(bad)
test
xchg
(bad)
sub
dec
jmp
push
cli
scas
mov
dec
or
nop
xor
scas
sbb
sbb
dec
ja
mov
das
hlt
or
sub
retf
popa
adc
ss
sub
or
add
jno
addr16
dec
sbb
sbb
adc
ret
dec
scas
cdq
rol
dec
lea
lea
retf
nop
sbb
pop
dec
movs
rcl
mov
sbb
ret
ja
leave
cs
ss
nop
sub
cli
shr
in
sub
or
pop
dec
xor
xchg
pop
in
fwait
mov
xor
sahf
mov
(bad)
retf
stos
sbb
stos
pop
stc
shl
pop
and
cmp
and
scas
mov
repz
pop
add
pop
inc
fild
xchg
jp
add
fstp
ret
and
inc
rol
cmp
ins
mov
push
ficom
in
arpl
cld
mov
push
(bad)
fiadd
ja
cwde
cdq
mov
loope
jp
or
call
test
enter
aam
outs
call
loop
call
push
in
mov
hlt
inc
sbb
cli
mov
pop
mov
std
(bad)
pop
imul
outs
aam
jmp
mov
push
jmp
mov
pop
enter
ret
sbb
lods
test
rcr
jle
aaa
div
inc
shl
addr16
addr16
or
rcl
adc
movs
push
push
into
jmp
data16
repz
or
ret
arpl
inc
or
mov
jmp
test
sub
jmp
scas
dec
mov
pop
outs
xchg
pop
fwait
ins
adc
pop
int
fdivr
xchg
das
push
icebp
(bad)
hlt
sub
inc
jg
sti
into
cmp
mov
mov
cmp
mov
xor
cli
inc
rcl
xlat
jbe
push
sub
fild
or
mov
fdivr
stc
lds
repz
retf
adc
pop
dec
imul
stos
or
vmwrite
retf
inc
jns
pop
les
icebp
or
data16
cdq
push
data16
pusha
out
sbb
push
inc
hlt
jne
jb
test
(bad)
push
xchg
or
xchg
mov
adc
dec
test
inc
rcl
cmps
call
or
in
mov
adc
mov
jle
dec
lock
mov
inc
xchg
je
mov
or
cmps
sub
and
jecxz
js
push
addr16
scas
sub
je
outs
out
mov
add
sub
cmp
fadd
test
pop
hlt
test
jbe
push
rcl
adc
or
(bad)
std
(bad)
mov
hlt
pop
or
cs
repnz
stos
inc
and
inc
jae
ds
gs
inc
fbld
test
ja
cmp
test
retf
xor
outs
in
xchg
cmp
pop
sbb
aam
push
jb
cs
pop
pop
inc
out
nop
lock
inc
cmps
mov
xor
mov
enter
jge
mov
push
outs
push
cmps
popa
hlt
jb
jge
sub
addr16
jmp
in
loopne
sbb
out
cmp
loop
cdq
add
jb
js
popf
sub
sahf
stos
mov
arpl
mov
or
out
sbb
nop
mov
lahf
jg
mul
jge
pop
lea
xchg
or
data16
pop
cwde
or
cmps
cmp
out
lahf
repnz
mov
pop
mov
mov
nop
cwde
xor
jne
cs
inc
in
cmps
cdq
imul
xor
fwait
push
cmp
mov
mov
loop
adc
mov
inc
or
mov
into
(bad)
push
dec
jno
mov
(bad)
xchg
ret
pop
mov
jns
mov
and
push
cmp
sub
std
cld
rcr
jmp
push
shld
cmps
ins
sub
adc
mov
add
xor
adc
and
cmp
mov
test
and
inc
dec
bound
hlt
xlat
mov
jbe
adc
(bad)
xor
in
ret
outs
xlat
cmps
ds
ret
mov
stos
dec
cmps
jg
out
push
(bad)
(bad)
test
mul
rep
cmp
dec
adc
inc
mov
int3
imul
cmp
outs
scas
inc
aaa
adc
jo
xchg
sub
mov
test
pop
outs
push
xchg
mov
outs
push
frstpm(287
scas
push
sbb
push
inc
enter
stc
dec
and
mov
xchg
add
sahf
jge
xchg
pop
fcomp
callw
xor
neg
adc
push
movs
ret
and
ja
int3
loop
mov
loope
dec
mov
test
fbld
push
shl
xchg
xor
ja
mov
fcom
jmp
mov
das
sbb
adc
adc
shl
(bad)
dec
adc
clc
fld
xlat
add
imul
gs
outs
mov
or
mov
ja
mov
(bad)
mov
push
arpl
sahf
retf
jl
stc
repnz
push
leave
int
adc
lock
scas
pushf
aas
dec
mov
data16
das
mov
clc
scas
or
inc
adc
aas
bound
jbe
dec
jecxz
or
stc
je
cs
in
jmpw
mov
push
cmp
popa
aam
sbb
xchg
jp
push
adc
inc
sub
popa
jnp
(bad)
adc
push
jbe
inc
nop
and
xchg
cwde
pop
sub
jns
mov
cmp
mov
shl
jnp
leave
inc
cli
dec
or
into
push
xchg
or
fwait
jmp
je
push
xchg
adc
js
pusha
(bad)
dec
in
fst
push
popa
adc
cmp
je
ins
push
add
ins
mov
inc
xor
cmp
bound
sti
and
ficomp
xor
mov
push
xor
(bad)
jne
push
xor
jp
fbld
add
mov
daa
ror
adc
imul
cmp
fwait
inc
or
sar
call
std
mov
pop
mov
push
sub
push
sub
les
mov
xlat
repz
stos
cld
(bad)
sbb
and
sbb
imul
inc
pusha
mov
nop
push
mov
mov
adc
sub
xor
cmps
pushf
test
dec
popf
mov
lods
jecxz
jp
xor
sub
addr16
cld
mov
lahf
(bad)
out
pop
pop
xchg
lea
ret
mov
call
or
scas
xchg
adc
mov
pop
icebp
clc
pop
jle
sbb
mov
fs
push
push
pop
shr
(bad)
loop
adc
dec
push
and
xchg
adc
fdivp
int
jmp
das
adc
sbb
in
in
sbb
aad
fst
sbb
sub
and
ins
and
pop
fidivr
sbb
mov
fcomp
xor
(bad)
sbb
mov
add
stc
sbb
inc
mov
and
xor
mov
cwde
cmp
out
jmp
push
xchg
les
bound
xchg
aam
jae
(bad)
retf
mov
jmp
aas
mul
popa
adc
js
push
push
xchg
mov
(bad)
and
inc
adc
adc
sub
sbb
scas
mov
add
outs
imul
shl
mov
in
jmp
cmp
cmp
or
repz
pop
lods
into
sbb
mov
test
sub
mov
test
and
xchg
and
mov
popa
int
(bad)
push
push
das
ret
cmp
cdq
xchg
mov
xor
test
fld
or
mov
and
or
sti
push
ds
sub
imul
mov
(bad)
cmp
retf
cmp
inc
jnp
sar
je
pop
mov
out
ds
out
sbb
pop
loopne
push
sub
call
test
les
sahf
push
push
mov
sar
add
push
mov
pop
cmp
ret
clc
dec
loope
xchg
addr16
fist
popa
add
mov
mov
xchg
gs
jle
and
dec
mov
fnstenv
xchg
lds
cmps
mov
jbe
mov
xchg
mov
mov
push
enter
dec
cld
add
das
adc
add
mov
mov
enter
jo
(bad)
push
mov
push
xor
retf
jns
call
adc
jmp
jl
add
sub
jns
ds
shl
loopne
movs
ja
mov
jl
(bad)
inc
adc
jmp
cmp
push
pop
jno
addr16
sub
sbb
adc
inc
ja
add
sub
(bad)
jo
push
loope
outs
call
or
add
sbb
loop
push
and
cmp
(bad)
fdivp
inc
push
push
data16
and
or
inc
dec
sub
add
sar
call
adc
push
into
pop
sbb
outs
call
dec
in
out
jge
sub
fst
repz
js
jecxz
push
mov
jb
les
daa
mov
or
jmp
aas
sbb
pop
fimul
scas
je
sub
pop
movs
or
cmps
cmp
xchg
(bad)
cmp
retf
scas
cmc
popa
or
iret
xchg
loope
aad
sbb
sub
push
sub
xor
dec
ja
fimul
add
popa
(bad)
clc
cs
stos
mov
add
fmul
shr
xchg
add
sbb
das
lods
mov
ret
mov
jmp
fcomp
or
je
(bad)
sti
(bad)
out
fdivr
pop
cmp
sbb
sub
cwde
fs
test
add
adc
into
es
data16
push
push
jo
fmul
outs
dec
aam
jp
sti
jnp
dec
shr
pop
mov
sti
js
push
xor
add
pop
out
(bad)
scas
cmp
jo
test
cld
out
bound
inc
outs
mov
dec
mov
retf
dec
pusha
loop
jo
inc
loope
inc
cmp
enter
pop
dec
mov
jnp
xchg
cwde
loop
push
mov
xor
fisttp
int3
pop
hlt
pop
outs
stos
pop
push
ret
push
leave
sub
mov
pop
fwait
popa
dec
ss
adc
(bad)
scas
dec
pop
jmp
fadd
adc
inc
sub
in
ss
add
into
sub
jnp
xor
repnz
dec
int3
xor
idiv
sbb
test
xchg
jb
or
cdq
or
in
xchg
adc
(bad)
jmp
fld
(bad)
sub
call
and
fcom
mov
in
idiv
add
mov
add
mov
xor
shl
fidiv
sub
push
pop
loopne
and
mov
adc
sbb
jge
mov
stos
ret
lods
mov
cld
cli
shl
or
fs
dec
fcomp
call
mov
inc
loopne
out
sub
js
clc
jns
in
push
movnti
shr
les
mov
pop
jp
popf
cmc
fsubr
xor
ds
cmp
dec
mov
push
sub
cld
adc
(bad)
jp
mov
in
inc
in
test
mov
sahf
je
adc
ins
mov
xchg
fistp
mov
xchg
test
sub
mov
into
jne
xchg
cs
and
adc
mov
mov
adc
mov
cli
cmps
xchg
mov
inc
jmp
shr
add
inc
inc
movs
out
inc
test
sti
call
scas
clc
xor
jns
gs
(bad)
xlat
mov
dec
in
push
push
fwait
add
sahf
pop
or
cmp
sub
dec
fstp
push
sbb
jecxz
or
jl
retf
inc
push
jbe
adc
out
jp
movs
push
pop
popf
ror
mov
cmps
mov
fs
and
nop
xchg
movs
lds
mov
mov
jnp
cmp
pop
pop
inc
mov
jge
or
inc
xchg
daa
mov
pop
or
add
pop
jmp
push
fst
and
add
ins
sbb
mov
std
(bad)
repz
push
push
imul
daa
pop
(bad)
cmp
adc
dec
stos
cmp
sbb
nop
js
push
das
cmps
(bad)
sbb
push
jmp
int3
dec
enter
dec
repnz
and
xlat
push
xchg
fisttp
lods
cmp
mov
adc
das
(bad)
sbb
jo
xchg
loop
shl
fwait
push
cld
mov
retf
xchg
aaa
jl
int3
adc
stos
ja
test
int
cdq
das
out
xchg
fisttp
inc
and
outs
push
pop
xor
or
ret
add
out
pop
push
fidivr
cs
mov
mov
push
and
xchg
add
(bad)
jmp
mov
pop
mov
jae
jo
out
jns
push
mov
pop
or
adc
pop
mov
imul
ret
outs
icebp
cmp
lods
xor
dec
jg
cmp
(bad)
pop
xchg
fisttp
pop
sahf
adc
push
dec
xor
mov
xor
mov
idiv
xor
xor
pop
ds
add
je
or
lock
mov
stos
sbb
mov
mov
add
pop
dec
aas
mov
mov
pop
inc
fimul
xchg
xchg
outs
popf
add
bound
jle
mov
adc
push
push
mov
mov
ss
pop
and
jno
jbe
and
and
sub
ss
jmp
scas
loop
cmp
inc
enter
aad
sub
and
data16
add
scas
sbb
xor
pop
cmp
mov
cs
cmps
int
mov
clc
arpl
mov
add
mov
sbb
loopne
sub
sub
mov
inc
mov
lods
mov
and
xlat
mov
ss
test
adc
sbb
pop
into
out
outs
(bad)
push
ins
inc
(bad)
call
sub
sbb
aad
and
lods
adc
dec
and
xor
test
fcmove
or
call
sbb
cld
jmp
or
add
and
aaa
ja
(bad)
(bad)
movs
jge
mov
lea
jle
outs
cmp
mov
mov
hlt
das
(bad)
in
les
dec
adc
pop
push
pop
into
ins
das
mov
and
int3
mov
cmps
sbb
sub
jp
repnz
add
mov
inc
out
pusha
retf
jne
fbstp
pop
div
and
sbb
jae
stos
rol
and
jmp
adc
xchg
nop
dec
retf
aad
cmc
dec
sar
aas
mov
pop
retf
mov
fst
jno
xchg
jecxz
scas
aam
clc
xchg
fistp
jp
dec
scas
cmp
sbb
adc
mov
test
jnp
imul
retf
sbb
pop
inc
cmp
mov
repz
inc
jmp
into
mov
and
xchg
jmp
fisub
fs
(bad)
mov
sub
push
cwde
aaa
sti
aaa
xor
cmc
and
mov
in
shl
dec
scas
jo
jns
pop
cmp
js
(bad)
retf
es
jg
imul
cmp
imul
aad
movs
adc
ret
ds
int3
cwde
push
out
jecxz
add
sub
xchg
in
mul
xchg
mov
push
cmp
dec
lock
mov
adc
mov
or
(bad)
jle
xchg
or
jb
mov
pop
stos
push
add
xchg
inc
das
dec
mov
push
xor
dec
push
mov
aam
ror
dec
(bad)
int
mov
mov
fidivr
iret
dec
push
ja
dec
std
(bad)
xchg
xor
or
inc
inc
inc
imul
and
out
sub
mov
mov
cmp
jns
gs
ret
xchg
into
sub
adc
and
pushf
outs
sub
stos
ss
cmps
test
mov
xchg
sub
cmp
adc
aad
cld
pop
adc
add
fdivr
mov
fsub
pop
dec
(bad)
cmp
xor
adc
mov
in
popf
mov
ja
sub
rcl
cmp
fadd
arpl
and
ins
sahf
imul
adc
and
push
mov
enter
sub
(bad)
and
imul
gs
leave
cld
pop
out
mov
pop
or
dec
maskmovq
hlt
lods
inc
lahf
call
std
cwde
jns
mov
test
add
enter
jge
dec
xchg
movs
jmp
mov
and
cmps
in
mov
out
outs
lods
jge
(bad)
xchg
add
lods
scas
pusha
xchg
lea
fdivr
mov
push
out
aaa
mov
pushf
je
xchg
xchg
(bad)
out
arpl
outs
ficom
imul
push
push
xor
inc
or
into
cli
out
xlat
sbb
fstp
push
mov
nop
pop
cmc
outs
test
mov
sub
gs
adc
jns
mov
mov
call
xchg
out
ja
jle
inc
aas
out
jne
mov
mov
test
lods
pop
in
xchg
adc
neg
and
add
push
fiadd
cdq
call
ficomp
push
push
push
loope
or
cwde
or
(bad)
jle
sbb
pop
mov
imul
jo
fist
xchg
stc
into
outs
and
cmc
sbb
adc
into
jbe
push
arpl
loopne
lea
lods
sbb
out
ins
arpl
jno
jge
add
sub
out
xchg
les
out
mov
xor
sub
pop
ss
mov
sahf
cmps
cmp
xchg
or
mov
jecxz
std
sbb
mov
inc
mov
test
cmp
repnz
loopne
arpl
movs
lahf
mov
leave
cmp
dec
sub
outs
xchg
inc
push
xchg
test
mov
mov
aad
sbb
adc
jmp
lods
enter
loop
(bad)
ror
rol
inc
inc
cmp
xchg
adc
sub
lods
popa
push
xor
pop
lods
call
int3
inc
(bad)
mov
xchg
fstp
movs
mov
xchg
leave
test
inc
sbb
in
popa
jmp
mov
pop
inc
aam
mov
xchg
cmp
clc
add
inc
repz
in
fbld
mov
loop
push
sub
mov
(bad)
shr
aaa
es
test
adc
loope
or
(bad)
push
inc
inc
push
add
fadd
inc
inc
sbb
stc
mov
ins
gs
and
mov
neg
pop
stos
imul
and
add
imul
test
cmp
aaa
fild
mov
outs
xchg
shl
aas
inc
je
out
or
out
cmp
outs
sub
xchg
mov
popa
shl
scas
sbb
adc
pushf
pop
or
jnp
movs
sar
test
iret
retf
add
jne
mov
fldenv
lock
cmp
xchg
or
and
cmp
push
jnp
cld
(bad)
jns
gs
in
sbb
inc
mov
sub
mov
clc
ds
inc
add
hlt
out
fbld
cld
out
je
test
mov
or
pop
cmp
dec
es
jle
jecxz
push
push
jmp
mov
cmp
aad
arpl
add
bound
jo
fwait
outs
outs
pop
pop
sbb
call
in
nop
ss
data16
cli
push
mov
dec
sub
mul
sahf
sub
outs
dec
pop
mov
imul
or
iret
test
mov
js
sub
mov
cli
imul
bound
sub
sub
retf
into
lods
mov
repnz
dec
test
push
hlt
sbb
and
jl
fwait
xor
aam
cdq
sbb
inc
lock
scas
push
ud0
test
adc
sub
mov
ins
stos
jl
stos
jbe
cmc
inc
in
jb
imul
retf
(bad)
mov
mov
adc
test
mov
mov
cmp
or
mov
int3
jle
ss
mov
std
popf
dec
dec
test
mov
mov
stc
jmp
std
pop
xchg
jae
push
dec
cmp
test
pcmpgtb
pop
jmp
pushf
sbb
cmp
fmul
clc
in
call
jb
adc
pop
jl
push
jl
jnp
dec
ret
or
or
sub
test
push
mov
sub
add
and
inc
jl
jmp
lods
jne
or
repnz
jne
or
inc
or
sub
pop
gs
sub
mov
rcr
rol
jmp
push
xor
mov
mov
es
xchg
call
loop
sahf
aam
add
mov
shl
adc
inc
sti
inc
mov
pop
pop
jb
sub
das
inc
mov
test
pop
hlt
add
xor
add
jnp
pop
cli
pop
ja
movs
xor
dec
outs
mov
(bad)
and
bound
push
int3
shl
fs
stc
push
outs
in
shl
pushf
mov
push
xor
movs
aad
cmp
pusha
pop
mov
sbb
dec
ja
mov
test
push
(bad)
sar
out
pop
mov
mov
inc
xor
scas
cmp
ja
dec
mov
je
mov
adc
and
and
movs
out
icebp
out
jmp
jmp
and
cmp
pop
and
(bad)
or
pop
dec
and
pop
les
repz
mov
stos
pop
add
lea
aaa
int
push
(bad)
lea
push
leave
cwde
pop
out
pop
icebp
ds
mov
jmp
push
leavew
push
fmul
jb
push
pop
pop
out
xchg
adc
pop
cmp
jge
or
mov
add
(bad)
pop
pop
cmp
sbb
hlt
shl
ret
aam
push
push
inc
xchg
loop
sub
xlat
push
xor
jno
cmp
inc
push
sbb
fdivrp
dec
test
pop
ins
out
pop
lahf
mov
out
popf
aaa
sbb
outs
xlat
mul
xchg
scas
xlat
push
ret
(bad)
sbb
movs
sbb
dec
xchg
jmp
mov
out
mov
mov
inc
dec
or
fbld
int3
js
xchg
mov
jl
cmps
cli
fimul
cmp
dec
hlt
dec
fs
rcl
les
lds
and
mov
jns
popa
(bad)
das
xchg
xor
xchg
popa
mov
imul
rcr
rcl
dec
sub
pop
outs
outs
dec
pop
pop
repz
fld
cmp
mov
leave
loopne
mov
repnz
(bad)
jmp
sar
adc
jmp
xor
or
sbb
sub
gs
out
xchg
xchg
pop
jns
and
cmp
jb
ja
xchg
jp
adc
and
jne
cwde
ins
in
sti
push
outs
js
pop
adc
loop
sbb
jns
push
cld
sub
lea
or
sbb
out
sbb
lods
mov
push
mov
ss
fimul
or
loopne
into
or
push
xchg
scas
sbb
sbb
jp
stos
mov
add
sbb
or
xchg
das
add
jmp
add
sbb
fiadd
mov
in
out
inc
jmp
jle
mov
jb
sub
pusha
xchg
out
push
int3
push
adc
ret
or
(bad)
repnz
pop
js
fimul
(bad)
cld
and
or
pop
loop
cmp
fmul
cmp
out
xchg
ficomp
scas
cmc
pop
(bad)
mov
cmp
add
jle
icebp
xor
into
shr
bound
ret
xchg
js
add
push
dec
out
push
addr16
fisttp
xor
int
jge
jo
cmp
scas
aas
or
jge
rcl
mov
cmps
out
stc
out
add
xchg
sbb
push
mov
pop
fst
pop
popa
shl
pop
out
or
hlt
jnp
ins
out
ror
imul
inc
and
ja
xchg
lds
mov
jnp
leave
inc
ret
loop
cld
inc
pop
inc
ds
mov
add
aaa
out
loope
aaa
add
add
aas
fs
adc
mov
pop
and
sbb
and
cdq
data16
and
call
xor
repz
mov
sbb
cmp
shr
fadd
int
sub
call
xor
lds
addr16
dec
out
adc
stos
test
test
in
jbe
push
jmp
xchg
test
mov
push
lds
xor
or
mov
xchg
imul
ror
cmp
imul
adc
inc
out
aaa
jmp
sub
mov
and
adc
mov
or
dec
loopne
mov
sbb
fistp
mov
outs
push
pop
xchg
mov
aaa
neg
mov
xor
sbb
out
leave
adc
push
aas
mov
into
jno
jge
rcr
sub
sbb
stos
aas
jb
imul
add
out
cwde
or
hlt
shl
push
lds
div
in
(bad)
int
shr
fistp
ret
or
cmp
jmp
loope
jl
adc
jg
or
sub
sti
imul
loop
imul
dec
fwait
jmp
push
shr
cdq
jp
bound
(bad)
cmp
out
addr16
sbb
les
je
mov
cs
scas
ffreep
mov
mov
xlat
adc
lods
inc
dec
mov
retf
dec
sbb
jns
xor
jge
(bad)
pop
push
test
out
(bad)
inc
dec
fisttp
jle
js
jmp
sub
fidivr
sub
adc
sar
pushf
mov
mov
enter
dec
jb
inc
mov
stc
(bad)
xor
iret
imul
mov
pop
cld
and
jle
leave
push
fadd
jecxz
cwde
mov
mov
test
stos
call
mov
imul
sub
(bad)
mov
push
nop
adc
jmp
add
mov
or
mov
xchg
jl
sbb
sbb
xchg
push
push
xchg
xchg
mov
jg
fiadd
shl
(bad)
fcom
mov
enter
enter
dec
and
out
int
push
jns
(bad)
data16
mov
push
in
pop
in
cs
idiv
xchg
imul
lock
jecxz
push
cdq
rcr
xor
dec
mov
xor
pop
jno
ins
cmp
pop
inc
mov
je
rcl
lds
aam
mov
call
lea
stos
fdivr
enter
outs
push
(bad)
mov
lea
sub
pop
mov
push
aad
mov
loope
shl
pop
xchg
jno
xor
mov
test
pop
or
adc
sub
inc
sahf
ret
pop
in
sbb
stos
xchg
adc
test
adc
aaa
xchg
jge
test
cld
dec
push
daa
jl
stc
jbe
inc
call
xchg
inc
pop
bound
repnz
pop
sub
mov
fst
inc
mov
shl
loopne
test
jnp
(bad)
ja
cmp
or
push
add
add
dec
xor
add
ficomp
sbb
iret
mov
jecxz
push
mov
mov
mov
inc
scas
inc
pushf
mov
fistp
popf
iret
call
bound
je
cmp
mov
dec
xchg
dec
(bad)
dec
push
cmps
pop
ins
mov
mov
repz
dec
movs
ficom
push
pop
cmp
popa
dec
aam
dec
mov
loop
or
add
leave
xor
lahf
test
push
in
adc
movs
xchg
stc
jo
jecxz
neg
jns
out
ins
iret
cmp
jmp
dec
adc
mov
cmc
js
loope
aas
retf
xor
dec
inc
stos
inc
xchg
cwde
push
adc
fld
adc
adc
push
jmp
(bad)
ror
cmp
xchg
cmps
inc
inc
or
mov
sbb
xor
in
push
pop
test
sub
or
cmps
bound
sub
mov
cmp
std
pop
popf
add
fcom
jmp
call
add
cld
or
sbb
dec
sub
fadd
aad
inc
add
pop
mov
clc
stos
dec
inc
imul
daa
push
or
push
pop
imul
retf
add
shl
jae
fs
bound
fwait
pcmpeqd
pusha
dec
and
mov
and
imul
shr
sbb
and
retf
popa
icebp
int
jecxz
hlt
mov
xlat
jle
iret
mov
repz
sub
jae
leave
ja
outs
iret
call
add
ins
test
int
ins
mov
mov
iret
jmp
dec
cmp
fistp
cmp
es
jae
retf
mov
push
outs
xor
adc
or
div
fwait
pop
xor
mov
das
push
sub
(bad)
aam
sahf
fidiv
adc
jg
dec
repz
lahf
ret
pop
xor
pop
stos
ficomp
or
jl
scas
imul
(bad)
stos
pop
jmp
repz
pop
aaa
(bad)
push
shl
loop
dec
mov
or
cmp
(bad)
int
out
xchg
lock
in
sti
es
push
add
inc
xchg
sbb
push
mov
pop
mov
cdq
inc
mov
xchg
js
push
in
lods
je
sqrtps
out
or
or
pop
mov
cli
cmp
mov
jns
ss
es
jecxz
(bad)
mov
push
mov
cmp
mov
pop
pop
mov
jnp
xor
pop
sub
(bad)
fucomp
pop
add
sbb
dec
or
jge
or
mov
cmp
dec
mov
xchg
xchg
xchg
lods
and
cmp
cwde
cmp
xchg
adc
clc
jnp
add
loopne
dec
add
in
clc
xor
or
push
or
fld
imul
std
mov
xchg
lock
jg
xchg
xor
ja
mov
idiv
and
xchg
xlat
out
mov
imul
push
xchg
sbb
imul
iret
or
mov
rcl
push
aaa
lock
push
or
adc
pop
adc
dec
jle
xor
dec
mov
jne
mov
cdq
or
and
mov
out
(bad)
cmps
ja
mov
mov
push
pop
rep
mov
daa
mov
jno
dec
gs
rcr
pop
push
inc
jnp
lock
inc
push
lock
dec
xlat
xchg
and
xchg
adc
or
in
jmp
retf
fdivr
pop
cwde
in
dec
lods
stc
cmp
cmp
cmp
cmc
or
imul
das
push
inc
mov
jg
mov
nop
jno
scas
cmp
cs
xchg
cdq
lods
push
push
xor
inc
dec
push
jno
je
cmp
or
dec
mov
xchg
inc
shr
popa
mov
clc
bound
scas
lea
cs
xchg
(bad)
adc
pop
das
jle
ja
jns
cwde
pop
in
loopne
aam
iret
jecxz
mov
es
bound
popa
mov
mov
rcl
fst
add
enter
or
push
(bad)
jp
sub
pcmpgtw
inc
mul
xchg
sbb
js
ror
add
outs
retf
mov
lods
je
ret
and
sub
pop
int
dec
pop
dec
mov
push
xor
or
add
popa
inc
mov
dec
(bad)
push
std
ins
arpl
jmp
adc
add
inc
ficomp
in
int
arpl
jns
out
stos
push
mov
int
daa
jbe
femms
cmp
rcr
pushf
fs
nop
xchg
push
or
cmc
push
mov
or
sub
xor
adc
sbb
inc
pop
fcmovne
test
shl
jmp
sbb
xchg
lock
sti
(bad)
ss
rcl
adc
lahf
shr
jno
jno
pop
push
int
add
adc
cli
popa
leave
pushf
pop
xlat
adc
rol
fstp
inc
add
xchg
into
int3
cmp
mov
push
add
test
mov
xor
jmp
push
mov
and
pop
iret
and
stos
add
adc
stos
xor
or
and
das
call
sub
mov
mov
std
push
and
mov
xchg
cs
push
rcr
push
pop
call
jb
push
iret
mov
add
pop
mov
fwait
jp
repz
test
add
retf
push
(bad)
imul
push
or
js
scas
sti
leave
icebp
inc
(bad)
in
or
ins
sbb
or
addr16
dec
mov
inc
cmps
mov
dec
(bad)
sbb
dec
popf
dec
bound
stos
add
adc
neg
sbb
adc
rep
cmc
pop
jno
sbb
mov
push
iret
stc
loopne
add
aad
mov
enter
mov
adc
mov
add
in
sbb
mov
scas
xlat
add
jmp
in
les
fst
mov
es
xor
and
sbb
jmp
lods
adc
test
(bad)
and
aad
inc
shr
sbb
mov
daa
adc
cli
out
enter
adc
or
sbb
scas
mov
cs
inc
mov
jns
mov
mov
cdq
add
lods
xchg
mov
(bad)
push
fwait
cmp
pop
cmp
loop
clc
es
imul
pop
xor
mov
mov
inc
ins
stos
mov
jb
cdq
add
fild
mov
xor
add
or
xor
xor
sub
xchg
xor
clc
xchg
(bad)
js
ret
std
push
jp
ror
xchg
pop
mov
pushf
insertq
add
adc
sbb
ret
ds
inc
xor
sahf
cmp
pop
hlt
pop
ror
jns
sub
pop
test
push
pop
inc
int
in
ins
pop
push
mov
adc
ret
in
mov
cdq
scas
pop
sbb
xchg
out
neg
ds
pop
or
scas
mov
dec
clc
into
xchg
sbb
adc
leave
jecxz
fist
adc
xchg
sub
mov
dec
push
mov
mov
leave
loop
pop
inc
inc
xchg
xchg
cdq
push
mov
ror
push
sub
loop
or
xor
dec
push
sub
mov
sub
das
lds
pop
out
cmc
or
enter
push
int3
loop
fs
mov
pop
cmc
iret
push
adc
add
add
data16
adc
inc
call
and
pop
cwde
ja
test
jne
stos
dec
add
adc
in
outs
repz
and
sbb
cmp
movs
std
adc
pop
mov
mov
sub
and
fnsave
cmc
sub
idiv
stos
jmp
mov
xchg
in
adc
outs
cmp
sbb
(bad)
imul
xor
mov
lds
mul
mov
dec
lods
or
mov
mov
aad
cs
and
stos
adc
xlat
add
mov
es
sub
pop
inc
pushf
adc
jnp
cmps
inc
loop
dec
xor
jns
adc
test
xchg
ss
repz
sti
movs
and
mov
aaa
cld
dec
cmc
mov
jo
fmul
loopne
cmp
xor
(bad)
je
or
imul
arpl
mov
lods
outs
ja
cmp
xchg
xor
daa
jge
jge
add
xchg
or
sub
ins
arpl
cs
adc
xor
xor
in
xchg
aam
jo
out
mov
jl
into
jae
pop
push
push
or
(bad)
rol
cmp
mov
fcomp
lahf
movs
push
jg
daa
or
out
aaa
dec
das
(bad)
test
jo
lea
out
mov
sahf
sub
add
pusha
(bad)
movs
gs
dec
addr16
loope
aaa
pop
mov
cmp
call
cdq
lods
sbb
sub
std
int3
mov
mov
call
sub
aas
leave
fwait
mov
or
push
lock
cmp
add
ins
scas
rcl
jae
fcompp
out
mov
fld
jle
push
call
sub
jmp
cmps
mov
ins
dec
cdq
lods
rcl
dec
out
add
mov
inc
loop
pop
mov
mov
lahf
mov
ins
push
jmp
mov
xor
std
data16
lock
sahf
and
retf
push
sbb
fld
sub
sub
dec
add
adc
add
(bad)
jmp
dec
push
daa
add
xor
cmps
dec
inc
cdq
es
das
xchg
js
leave
mov
jl
push
adc
fcomi
push
mov
fwait
(bad)
xlat
retf
das
mov
and
mov
je
ficomp
ds
cmp
popa
jae
or
sub
mov
leave
popa
lods
pop
sti
add
fwait
iret
aaa
adc
sbb
mov
cmps
test
jecxz
xor
and
sahf
push
fsub
cmps
cmp
lahf
jmp
mov
fnstenv
call
lahf
adc
or
in
dec
in
retf
lods
ret
jecxz
pusha
lea
std
test
test
jns
xor
xor
(bad)
dec
mov
hlt
mov
mov
pop
lds
and
lock
mov
xchg
enter
jno
dec
push
test
mov
adc
iret
sti
bound
add
sbb
push
in
stos
inc
xor
(bad)
mov
adc
popf
inc
jecxz
cmovns
arpl
in
rcl
mov
push
mov
adc
int3
inc
xchg
or
adc
shr
(bad)
mul
loop
pop
imul
cdq
je
arpl
mov
lds
loope
in
cmp
xor
les
ss
repz
jmp
xchg
lahf
push
sbb
jp
gs
dec
sub
add
hlt
push
out
or
inc
mov
push
xor
ficom
jg
dec
jne
daa
dec
fdivr
outs
pusha
lahf
call
dec
add
fisub
call
cdq
loop
mov
xchg
xchg
movs
sbb
cmps
cmp
jmp
rol
xor
or
out
mov
dec
pop
or
jns
and
pop
push
aas
rcr
dec
or
es
pop
inc
cmp
cmc
mov
hlt
adc
sub
lea
idiv
fistp
dec
add
(bad)
sbb
test
pusha
sbb
ficomp
mov
sbb
push
jecxz
xchg
jmp
inc
retf
inc
enter
push
pop
cmc
dec
pop
mov
jne
stos
enter
scas
fisubr
push
xor
stos
jo
and
stos
outs
xlat
mov
xchg
(bad)
pop
in
push
mov
shl
mov
loopne
les
pop
(bad)
repz
stos
xchg
mov
hlt
lods
sahf
outs
lahf
dec
retf
nop
in
fmulp
push
jge
retf
adc
jmp
in
cli
fistp
dec
into
xor
outs
hlt
adc
lods
(bad)
mov
jg
dec
add
push
adc
dec
daa
inc
popf
dec
push
mov
into
lods
dec
cmp
adc
push
mov
inc
dec
push
into
fsub
pop
fadd
pop
int3
rol
mov
ror
fmul
dec
xor
push
dec
xchg
rcr
pop
mov
rcr
ins
test
xchg
sub
or
add
pop
push
and
outs
jns
jne
jns
mov
jecxz
xchg
mov
sub
adc
jns
cmps
sbb
aad
pop
adc
mov
xchg
mov
pop
jb
clc
nop
gs
dec
push
or
pop
aaa
mov
call
fucomi
fldcw
sbb
int3
push
mov
mov
jb
loopne
dec
xchg
xor
cmp
call
pop
and
inc
dec
mov
sahf
clc
sbb
jg
dec
cmp
in
retf
and
sti
or
fisub
dec
in
push
pop
sbb
jge
fcmove
sub
pop
in
push
mov
cmc
arpl
inc
jl
test
pop
cmp
mov
push
ins
dec
lds
mov
out
pop
cli
mov
cmp
cmps
xchg
mov
adc
iret
xor
mov
push
add
inc
push
repz
jno
dec
mov
(bad)
(bad)
int3
add
pop
push
xchg
adc
push
ins
push
dec
pop
inc
xchg
out
(bad)
aaa
cdq
lds
aam
xor
cmps
addr16
dec
retf
or
cmp
inc
cld
pop
nop
pop
sbb
(bad)
call
push
ret
pop
inc
xchg
and
rol
ss
add
(bad)
mov
cmps
adc
pop
retf
jno
loop
xchg
mov
or
repnz
dec
xchg
sbb
stos
test
sbb
fcom
clc
mov
inc
popa
ins
xchg
cdq
xchg
les
and
bound
hlt
(bad)
jecxz
sbb
pop
(bad)
es
pop
cmp
cmc
lods
imul
fdivr
push
adc
clc
mov
call
std
in
sub
inc
push
sbb
push
out
frstor
addr16
or
mov
pop
mov
sub
fcmovne
js
in
movs
les
in
pop
das
jbe
mov
jo
js
test
or
pop
scas
jae
cmp
jle
lock
push
lds
clc
push
jnp
jp
jne
repnz
outs
(bad)
xchg
pop
repnz
ss
(bad)
sub
and
sub
push
int
jecxz
js
(bad)
movs
sub
push
aas
popa
data16
fnstcw
(bad)
fld
fild
push
mov
push
jae
out
dec
mov
and
jb
push
mov
lahf
sub
std
or
ds
repnz
mov
push
xor
(bad)
test
stos
fwait
retf
sub
sti
out
loop
jns
jge
sbb
add
mov
mov
adc
jg
add
(bad)
fsubr
or
jl
push
lods
adc
xor
push
inc
aam
mov
outs
pop
pusha
into
dec
sub
and
rcl
xchg
mov
dec
pop
fwait
ja
mov
pop
arpl
frstor
xor
inc
pop
adc
pop
or
outs
push
bound
cmps
dec
xchg
and
daa
leave
mov
xchg
loop
xchg
call
rcr
push
or
js
cmp
in
clc
out
pop
das
(bad)
cwde
or
int
sar
cdq
xchg
mov
adc
jmp
nop
or
push
or
fmul
das
outs
or
outs
inc
inc
push
sbb
push
pop
fist
jb
rcl
in
push
(bad)
outs
ror
aad
cmps
inc
mov
adc
add
add
sub
push
sub
dec
jnp
and
adc
dec
mov
scas
bswap
test
push
push
xor
or
mov
or
pop
inc
and
adc
imul
xor
adc
or
dec
(bad)
fldcw
add
hlt
cmps
pop
ins
xchg
jl
inc
or
in
or
cmp
mov
daa
jmp
sahf
cmp
inc
sbb
mov
data16
mov
push
xchg
mov
cli
xor
inc
rcr
stc
cmovnp
sbb
clc
arpl
push
sbb
inc
(bad)
dec
ja
int3
inc
out
ins
cdq
pop
dec
movs
xchg
nop
imul
sub
scas
cwde
hlt
mov
sub
das
xor
pop
adc
leave
fild
ss
das
cli
(bad)
jle
(bad)
popa
pusha
test
push
hlt
mov
lods
shl
mov
mov
or
and
test
retf
jns
rcr
int
jecxz
sbb
shl
inc
inc
outs
push
mov
mov
fldenv
jae
mov
sahf
mov
inc
cmp
push
xor
lahf
dec
das
cmp
jg
push
cmps
xchg
and
fwait
adc
sub
sahf
or
xchg
jmp
shl
inc
cmp
pushaw
jb
sti
lods
push
pop
adc
push
cmps
loop
ror
das
dec
pushf
sti
or
jl
nop
mov
xchg
es
fdivr
cmp
sub
sbb
and
or
mov
cmp
iret
push
outs
jb
data16
adc
jae
int3
pop
ja
scas
dec
movnti
and
out
repz
ror
(bad)
(bad)
jae
adc
cwde
push
ja
dec
pop
sbb
arpl
arpl
xchg
xchg
neg
pop
daa
or
jecxz
sahf
mov
jne
mov
sbb
(bad)
fild
cmps
jg
int
cdq
fistp
icebp
shr
mov
inc
das
add
mov
stos
pusha
inc
es
mov
sub
pusha
and
sub
(bad)
cli
dec
fistp
pop
popf
xor
pop
shl
leave
je
sub
mul
out
lea
jno
and
pop
das
ins
or
dec
mov
daa
icebp
and
jmp
inc
xor
jecxz
rcl
ss
inc
lahf
pushf
mov
or
fild
sub
fisttp
xchg
mov
cmc
cmp
mov
data16
in
xor
jecxz
mov
arpl
nop
rcr
sbb
sti
jo
add
iret
mov
ins
lock
push
dec
xchg
add
(bad)
jge
and
push
xlat
std
mov
out
in
sti
xor
cmc
push
std
sub
or
(bad)
frstor
fisttp
iret
fwait
adc
ret
xor
sbb
jge
sub
adc
mov
sbb
xlat
cmp
scas
mov
std
xor
(bad)
les
and
or
adc
xor
push
sub
call
outs
cs
pop
lds
repnz
pop
and
jg
fwait
lock
mov
sub
adc
fst
imul
add
jno
dec
xchg
call
loope
out
or
fmul
fist
xchg
int
cmp
inc
jecxz
and
dec
jmp
ins
mov
sub
jns
ret
mov
sbb
int
retf
js
lods
scas
fisubr
inc
add
add
aad
push
dec
jg
ret
daa
addr16
in
out
jp
inc
leave
std
lahf
xchg
xor
outs
push
inc
nop
and
pop
in
pop
sbb
xchg
xor
xchg
ja
add
mov
add
fcmovnbe
inc
sub
lds
cmp
or
push
(bad)
aad
int3
icebp
xchg
xchg
std
out
cmc
pop
imul
pop
mov
and
call
jle
inc
(bad)
mov
test
sub
and
dec
into
and
in
ret
push
jbe
clc
nop
sbb
int3
xchg
in
or
daa
xchg
add
xchg
ja
mov
test
rcr
mov
xchg
inc
ror
test
arpl
into
pop
and
dec
adc
pop
inc
test
and
ins
les
aad
sti
sbb
jb
mov
leave
jg
clc
xchg
jno
test
mov
cmp
lods
retf
js
push
lock
dec
or
icebp
pop
or
mov
or
in
into
mov
or
jmp
push
sub
mov
adc
push
and
sbb
mov
aad
jg
pop
rcl
(bad)
aad
inc
mov
call
pop
call
pop
pushf
lahf
or
inc
daa
jne
js
test
jne
or
sahf
pusha
cmp
scas
dec
or
mov
cmp
or
jns
jp
div
or
pusha
push
rcl
fwait
and
jle
pop
mov
sbb
pop
sub
rcl
pushf
(bad)
push
loope
inc
ins
dec
leave
jp
loope
add
pop
pop
pusha
ds
mov
cli
mov
inc
inc
loope
push
enter
add
je
and
add
jbe
std
dec
jg
loopne
ins
aam
pusha
push
inc
ret
outs
jmp
mov
and
shl
inc
outs
shl
sbb
call
mov
cmp
cld
ds
mov
int
cmp
mov
shl
add
out
repnz
mov
inc
std
and
sahf
lods
test
test
push
aad
sub
outs
cmp
sub
add
dec
inc
jg
sub
icebp
loope
mov
es
lock
or
in
sub
mov
rol
mov
aaa
aad
call
scas
nop
and
out
add
cwde
xchg
cmp
fld
test
jnp
data16
aam
jne
test
jmp
aad
in
scas
xchg
dec
jle
or
mov
movs
or
mov
stc
cld
lods
xchg
out
push
pop
scas
mov
cmps
shr
sub
scas
pop
sbb
xchg
sbb
sbb
ss
xor
mov
out
jl
jmp
addr16
fisttp
mov
sbb
movs
lods
call
fs
movs
adc
test
(bad)
sbb
dec
mov
bnd
pushf
push
pusha
pop
leave
sahf
cmp
test
pop
cmps
(bad)
mov
and
neg
(bad)
fcomp
imul
xchg
(bad)
mov
inc
and
mov
clc
(bad)
sbb
ins
out
mov
aas
jp
jg
sahf
xchg
jge
aas
xchg
scas
or
enter
sbb
sub
mov
inc
jl
imul
dec
pop
test
pusha
xchg
ss
test
cmps
jl
int3
icebp
stc
leave
ret
xor
enter
lods
mul
xchg
mov
adc
mov
jl
mov
inc
fsubr
mov
adc
pop
push
jmp
jbe
popa
push
or
mov
push
pop
xor
xchg
std
lds
mov
gs
in
(bad)
(bad)
repz
or
(bad)
dec
sbb
inc
stc
ja
adc
(bad)
lods
outs
cli
das
inc
or
adc
das
mov
shl
dec
or
pop
xor
out
mov
sbb
pop
dec
inc
movs
arpl
shl
mov
movs
cmps
dec
outs
dec
cmp
lds
xchg
cmps
out
cmc
out
sub
fcmove
mov
xchg
retf
xchg
xchg
mov
xchg
jbe
inc
sete
mov
test
fdivr
push
loop
and
or
dec
and
(bad)
pop
call
mov
mov
sbb
and
fcomp
int3
(bad)
or
push
lds
push
enter
push
pop
(bad)
push
jno
push
shl
hlt
fisubr
cmp
xchg
jno
imul
add
bound
fldz
stc
adc
pop
in
fsub
sbb
adc
push
bound
in
fwait
lea
push
scas
pop
cld
cmp
and
retf
shl
jecxz
mov
xchg
dec
push
or
pop
sbb
push
cmps
mov
scas
push
and
pushf
mov
mov
ret
cmps
add
aaa
je
push
push
cmp
or
cmp
and
mov
mov
lahf
xchg
cmc
jnp
in
out
and
popa
rcl
push
out
mov
mov
stos
mov
mov
sub
sti
das
mov
cmp
data16
repnz
ins
repz
scas
push
jb
sbb
enter
pop
or
sbb
xchg
push
cmp
inc
or
div
pop
add
retf
xchg
out
inc
scas
(bad)
xchg
nop
int3
fcomp
in
shl
popf
or
or
push
out
push
mul
js
or
mov
(bad)
je
aaa
jl
out
aaa
aam
outs
xor
(bad)
out
dec
stos
ins
in
pop
(bad)
mov
adc
dec
repnz
clc
mov
rcl
pop
retf
int
sti
loopne
mov
mov
sub
out
inc
dec
xor
int3
push
ins
xlat
push
pop
xor
or
ret
out
dec
or
xor
jmp
shl
mov
gs
nop
ffreep
inc
push
inc
(bad)
leave
sbb
xchg
lds
fdiv
ins
push
xor
or
push
fucomp
jle
cld
push
and
movs
dec
pop
icebp
imul
push
ficom
addr16
push
dec
cmp
out
shl
out
xchg
call
xor
dec
(bad)
xor
pop
dec
adc
adc
add
sub
scas
cdq
and
mov
ficom
nop
stos
mov
clc
ins
ins
mov
sahf
mov
jp
dec
stos
outs
les
jbe
dec
jmp
push
mov
and
mov
repz
xor
jg
xchg
inc
arpl
xor
and
and
xchg
js
sub
sbb
fidiv
mov
pop
dec
sti
mov
lahf
jp
jno
cwde
call
ds
sbb
fst
retf
sub
(bad)
sar
adc
sahf
call
mov
fs
pusha
dec
shl
int
in
add
or
cmp
loope
and
jno
popw
aam
movs
out
scas
std
xchg
sbb
mov
xchg
mov
(bad)
cld
sub
and
xchg
adc
push
sbb
in
and
mov
and
xchg
cmps
jb
xchg
push
push
gs
dec
in
jmp
cvtdq2ps
mov
ins
mov
fdiv
mov
rcl
mov
(bad)
iret
sbb
dec
loop
mov
push
cmp
repnz
mov
push
je
adc
jns
adc
dec
in
inc
in
fsubr
adc
sub
adc
xlat
ds
jbe
iret
push
clc
mov
mov
xchg
dec
sahf
pop
lea
repnz
sbb
cwde
push
iret
jmp
add
sbb
adc
and
ins
sub
mov
xchg
movs
xor
test
je
adc
mov
pop
sbb
mov
cmp
and
xor
les
adc
pop
pop
sub
loop
sar
sbb
test
pop
scas
test
int3
adc
adc
xor
pop
(bad)
mov
jbe
mov
icebp
xor
sub
int3
dec
xchg
mov
popa
(bad)
int3
ror
loop
adc
movs
add
(bad)
push
xor
push
mov
jge
ss
dec
hlt
frstor
xor
iret
clc
stos
cmc
push
stos
mov
and
frstor
push
push
js
mov
cmp
or
mov
jb
inc
jne
cmp
imul
mov
mov
xchg
mov
and
out
xchg
rcl
(bad)
jecxz
es
push
xchg
lahf
lock
sub
and
xor
aad
iret
push
lea
stos
pop
jne
xchg
push
xchg
cs
xchg
xchg
gs
add
fwait
inc
pop
movs
xor
cs
lods
sbb
mov
aaa
dec
outs
rol
in
fst
mov
rcl
in
aad
ret
xor
pop
(bad)
in
mov
and
movs
sahf
lds
test
pop
loopne
sub
cmp
js
jp
adc
jle
test
push
pop
xlat
pop
xchg
pop
bound
sbb
and
mov
das
imul
ret
clc
jge
cmc
pop
cmp
shl
push
leave
and
call
int
scas
sub
out
cmp
popf
push
cmp
scas
in
jae
cmp
add
add
test
into
or
iret
cmps
pop
mov
jge
out
push
rcr
enter
xchg
cmp
pop
jne
cmp
iret
popa
ins
fs
mov
jmp
cmp
adc
dec
fmul
aam
add
dec
push
add
push
sbb
add
imul
push
mov
and
int3
mov
mov
pop
les
aad
rcl
mov
pop
scas
stc
inc
ret
das
fdivr
or
mov
sbb
adc
std
pop
in
ss
push
movs
mov
xor
into
add
mov
sbb
sub
popa
stc
(bad)
jmp
cmp
loope
ja
dec
adc
into
stc
das
fidiv
mov
lods
clc
add
mov
inc
jae
push
mov
pop
scas
cmps
shl
or
push
nop
jb
sbb
mov
jno
pushf
movs
mov
jge
adc
mov
dec
ja
sub
loopne
dec
imul
adc
jnp
addr16
mov
dec
and
inc
repz
pushf
clc
stc
rcr
inc
jmp
jl
sbb
jmp
aaa
mov
out
cmp
inc
adc
inc
fcmovne
arpl
jmp
xchg
call
jne
dec
xor
push
scas
lahf
push
cmovbe
xchg
add
push
cmp
cmc
inc
jge
jns
push
call
pop
sbb
loopne
aad
push
loop
in
stos
in
jae
dec
lock
leave
mov
and
dec
xchg
call
jge
inc
xchg
test
es
sub
mov
and
or
sub
jno
rcl
movs
ror
and
mov
sbb
mov
xchg
sti
(bad)
hlt
mov
push
add
push
jne
xchg
cmc
scas
and
shl
lods
int
pop
ins
push
outs
or
add
enter
in
fs
xchg
jmp
out
call
(bad)
and
imul
mov
rol
adc
in
stc
push
jl
dec
mov
imul
(bad)
mov
dec
fidiv
cmp
(bad)
jle
xlat
adc
das
cmp
jnp
les
sbb
pop
leave
sar
xor
les
in
sbb
and
retf
(bad)
sti
in
ror
jle
test
repnz
and
movs
cdq
lods
adc
aas
mov
rcr
sbb
sbb
sahf
iret
xchg
iret
pushf
mov
or
jg
enter
je
lahf
push
dec
nop
(bad)
lds
cli
in
xor
int
pop
push
dec
push
push
hlt
adc
cld
sbb
clc
popf
shr
pop
pop
mov
adc
jle
adc
mov
test
jno
sub
pop
push
push
movs
stc
add
test
test
jecxz
dec
mov
adc
jecxz
jno
push
mov
aas
in
xlat
(bad)
xchg
sbb
pusha
and
and
and
push
push
and
and
pop
daa
mov
jmp
cmp
push
rol
dec
xor
ret
ret
xchg
out
and
out
fimul
nop
ds
ret
sbb
inc
mov
or
sahf
sub
cmps
ficom
jns
cmp
pop
dec
les
popa
iret
pop
xor
add
cli
sub
push
(bad)
adc
jecxz
dec
xchg
cwde
scas
mov
jecxz
out
xor
cmp
ins
push
jge
mov
jb
fsub
call
es
adc
je
fbstp
jmp
sub
and
(bad)
outs
jl
int3
in
xlat
cld
pop
xlat
add
xchg
data16
jb
nop
xchg
sub
pop
mul
lea
mov
js
aaa
je
fs
dec
test
call
sbb
inc
mov
sub
test
fdivr
xchg
push
add
inc
sbb
push
lahf
mov
push
fs
les
test
call
scas
ss
mov
in
(bad)
aaa
int
retf
and
sub
inc
jge
and
loopne
adc
mov
fdivr
repnz
fmul
sbb
add
test
retf
jmp
jp
loop
jnp
mov
push
mov
inc
stc
ffreep
test
mov
jmp
inc
pop
mov
sbb
jle
stc
mov
iret
mov
sbb
mov
jns
inc
les
and
xchg
cwde
mov
mov
pop
lods
or
(bad)
out
jae
fnstenv
test
cmc
inc
push
idiv
fstp
addr16
sbb
pop
or
out
xchg
sbb
retf
movs
addr16
loope
add
in
jmp
dec
fld
lds
dec
movs
mov
js
sub
jbe
lahf
fadd
add
int
inc
jmp
add
adc
ficom
mov
inc
push
mov
shl
jns
adc
shl
rcr
xor
mov
aad
stos
adc
inc
mov
dec
add
adc
xchg
inc
(bad)
jl
nop
les
icebp
aaa
icebp
in
xor
fdivr
mov
fisubr
jnp
push
shl
into
fld
dec
aad
push
das
imul
mov
les
sbb
test
xor
jge
lds
sbb
stc
mov
pop
adc
pop
fidivr
and
add
mov
cmp
or
mov
sub
es
aam
fmul
jbe
sub
paddusw
jbe
std
adc
lock
and
mov
js
cdq
fstp
popf
jmp
sub
pop
pop
into
cmp
xlat
jns
xchg
clc
xor
push
out
loop
fsubp
(bad)
sub
neg
xchg
ret
movs
aas
lods
cmc
stos
in
(bad)
push
jmp
into
int
push
xchg
scas
pop
ret
mov
or
hlt
in
cmps
xor
imul
add
movs
es
or
jle
jbe
cmps
sbb
dec
mov
in
jo
mov
movs
pop
and
cmc
cmp
sbb
pop
mov
lock
push
mov
ins
sub
mov
jno
mov
mov
xor
push
in
ins
imul
add
outs
and
sub
sbb
jl
test
std
clc
out
inc
xchg
ja
(bad)
dec
movs
cdq
test
imul
mov
xchg
outs
adc
ror
xor
sub
into
mov
test
push
mov
mul
in
cmp
mov
or
rol
out
lahf
pop
stc
add
jge
push
sbb
xchg
lock
jmp
mov
adc
mov
aam
add
hlt
dec
rcl
je
jae
ror
out
pop
fwait
push
fstp
test
mov
ror
repnz
add
push
retf
out
jmp
sbb
out
imul
cld
(bad)
daa
addr16
in
or
push
jno
(bad)
push
mov
inc
push
cmp
jmp
mov
mov
pop
jbe
mov
outs
add
or
fs
das
xchg
mov
mov
or
lea
vmovmskps
lods
xor
and
mov
and
push
jecxz
jecxz
adc
xor
mov
xchg
jne
aad
xor
stos
sbb
scas
jo
and
or
and
scas
(bad)
xchg
cld
and
jbe
iret
mov
aam
mov
xor
pop
cmp
out
shr
ins
icebp
inc
inc
jns
mov
push
mov
pop
stos
mov
lds
fld
addr16
mov
stos
pushf
mov
adc
lds
das
jno
imul
cli
jecxz
jg
mov
xor
adc
es
cli
adc
loopne
add
sbb
dec
into
dec
xchg
add
sbb
and
jns
fsubr
fnsave
xor
sbb
jns
xor
daa
jno
enter
xor
je
mov
jl
(bad)
push
(bad)
dec
les
gs
or
sub
in
cmc
aam
cmp
and
in
ins
call
les
lea
lods
adc
adc
add
in
mov
pop
stos
call
and
and
pop
adc
lahf
test
xor
cmp
pop
sar
dec
ja
rcr
xor
dec
gs
stos
mov
cli
mov
sub
(bad)
or
stos
inc
hlt
addr16
into
into
jnp
fist
push
out
push
ficomp
pusha
push
int
adc
scas
ficomp
stc
xchg
mov
mov
or
cmc
cmp
aaa
xchg
xchg
mov
popa
xchg
mov
jg
mov
push
adc
xor
xchg
cdq
adc
jecxz
ret
mov
scas
(bad)
jns
in
aaa
push
push
pop
scas
adc
icebp
mov
das
pop
inc
out
sahf
mov
out
mov
dec
mov
mov
pop
push
mov
cs
or
pop
pop
inc
xchg
cmps
adc
inc
pop
out
loope
and
and
mov
imul
bnd
out
jmp
jmp
repz
xor
ins
cmp
push
les
sub
mov
cmps
adc
jecxz
mov
retf
int3
(bad)
les
push
xor
xor
pop
idiv
jle
cmps
rcr
sub
in
clc
gs
add
jecxz
leave
sbb
or
adc
cmp
cmp
lea
stos
repnz
mov
xor
cs
jecxz
push
pop
sub
es
mov
js
shr
aam
ret
add
std
call
inc
cmp
dec
mov
loope
lock
stc
aas
popa
shl
adc
test
jecxz
push
mov
js
psubd
cmp
sub
and
dec
adc
sbb
lds
icebp
shl
mov
xchg
retf
icebp
or
push
mov
es
aaa
and
repz
and
mov
and
inc
add
pop
adc
lock
sub
jp
adc
ret
movs
xor
dec
jnp
adc
add
pop
sub
iret
loope
lods
xor
cmp
loope
scas
rcr
imul
xor
mov
jno
push
sbb
jmp
or
or
ret
pop
mov
mov
jb
icebp
mov
xor
outs
or
in
in
(bad)
sub
cmp
mov
mov
xchg
cld
fiadd
inc
mov
mov
xchg
(bad)
lock
dec
je
jp
test
loopne
pop
lods
aad
stc
in
push
pop
fdivr
stc
or
outs
add
pop
mov
inc
xchg
mov
ds
pop
sti
inc
sahf
rcl
push
enter
push
xor
movs
mov
scas
call
sub
adc
pushf
push
mov
cld
popa
shr
jl
xchg
(bad)
mov
outs
in
xchg
mov
aaa
mov
inc
lods
pop
sbb
and
dec
ds
sbb
rcr
outs
pop
cmp
and
retf
enter
js
inc
add
mov
dec
pop
mov
cmps
pusha
mov
into
ja
mov
mov
in
stos
imul
or
inc
ja
retf
xor
lea
es
bound
and
test
(bad)
mov
mov
mov
or
rcl
fucomi
xchg
push
ds
push
arpl
call
sti
ins
ds
aaa
push
adc
aad
xlat
jecxz
mov
movs
or
neg
les
xchg
push
push
mov
sub
mov
sbb
add
nop
ffree
xchg
inc
or
cld
in
jne
add
imul
xchg
mov
adc
sti
jmp
jmp
jno
inc
div
ret
pop
mov
pop
push
or
sbb
retf
fnstsw
pause
loop
pop
add
mov
call
cmp
arpl
push
mov
test
inc
pop
inc
neg
cmp
add
(bad)
lods
pop
mov
sbb
movs
jmp
cmc
xchg
sub
aam
mov
popf
or
jo
shl
push
fidivr
mov
cmps
mov
adc
sub
(bad)
mov
sub
mov
pushf
xlat
and
in
pop
out
sbb
(bad)
out
stos
push
pusha
out
mov
xchg
add
cmp
inc
aas
jmp
lea
jg
mov
pop
push
and
loope
mov
dec
push
in
pop
mov
loope
sbb
and
nop
and
adc
ss
xchg
xchg
in
ret
(bad)
sbb
mov
jecxz
stos
xlat
test
rcr
addr16
add
cwde
repz
sti
dec
sbb
lds
cdq
pusha
jmp
and
add
push
add
psubusb
mov
aas
dec
add
push
in
scas
dec
mov
shr
mov
inc
push
mov
shl
cmp
jmp
adc
or
nop
xor
xor
idiv
jmp
jne
and
push
cmp
(bad)
or
cmp
or
shl
ds
jo
mov
xchg
and
mov
rcl
cs
add
pop
jbe
test
sahf
cmp
mov
or
dec
sub
outs
aas
jmp
xchg
mov
(bad)
push
fisub
enter
sar
xlat
dec
loopne
iret
pop
inc
and
and
inc
data16
je
leave
cmp
xor
sti
rcr
loopne
xor
jne
inc
dec
bnd
xchg
outs
dec
call
inc
xchg
pushf
out
ret
inc
ja
cmp
(bad)
xor
rcr
or
ds
jmp
nop
jl
mov
sub
push
and
mov
mov
mov
add
sub
arpl
stos
in
cmps
jnp
test
sbb
mov
mov
scas
jnp
movs
repnz
xchg
cmp
xchg
in
ret
mov
fisttp
push
imul
push
sub
mov
popf
xchg
ja
dec
popf
aaa
inc
adc
sub
xchg
je
adc
rol
dec
ins
pop
jno
fldcw
lahf
mov
rcl
xchg
mov
sbb
in
test
jo
popf
jbe
inc
fistp
hlt
jmp
scas
psubw
inc
push
stc
add
repz
jmp
in
pop
mov
out
rcr
pop
xor
mov
frstor
imul
add
out
push
aas
movs
imul
test
ins
add
jno
popf
push
mov
jnp
ficom
stc
std
sbb
or
push
hlt
repnz
fdivr
sbb
dec
sbb
mov
xor
loopne
movs
jnp
dec
mov
jecxz
mov
dec
stc
push
stc
or
sahf
out
inc
pusha
push
jmp
cmp
sbb
scas
outs
pop
test
ficom
xor
push
push
xlat
inc
scas
mov
jo
es
jbe
gs
imul
fcomp
adc
(bad)
push
and
cmp
bound
movs
jbe
inc
mov
cmp
mov
loop
imul
pop
out
pop
mov
stc
xor
mov
mov
mov
sbb
add
ror
int3
mov
xor
call
sub
inc
push
pop
lods
mov
push
lock
inc
hlt
aad
test
pop
mov
dec
mov
dec
(bad)
mov
jecxz
out
mov
pop
cmp
repnz
int
xchg
arpl
push
cmps
add
aad
call
or
push
add
pop
xor
cmp
mov
cmc
add
js
xchg
imul
stos
jne
cwde
jns
icebp
sbb
or
cmc
jno
pcmpgtb
mov
adc
fsub
lgdtd
loope
and
and
pushf
in
nop
das
xchg
xchg
pop
iret
nop
xchg
imul
push
pop
or
pop
adc
fwait
cmps
test
and
sub
jb
movs
loopne
inc
and
movs
adc
mov
jae
data16
test
mov
gs
fsubr
pop
fadd
push
push
aas
js
data16
inc
pop
hlt
inc
jb
imul
jecxz
call
(bad)
mov
les
mov
ret
sub
mov
lods
cmps
out
psrad
mov
and
es
inc
dec
lods
in
ja
clc
out
xor
push
ins
gs
div
or
push
sbb
pop
cmp
adc
loopne
sub
out
push
out
mov
bound
stos
and
adc
cli
sub
movs
sub
test
push
xchg
mov
arpl
push
movzx
stc
adc
outs
int
xor
pop
cmp
inc
or
xchg
pop
lock
jmp
mov
push
fist
mov
sub
cmp
dec
aaa
jne
call
in
xor
arpl
outs
mov
mov
mov
adc
sbb
push
je
mov
bound
sub
pop
or
inc
fisub
mov
pop
xchg
add
dec
fst
mov
mov
aaa
inc
xchg
jg
div
aad
jo
pop
jnp
cmp
pop
hlt
shl
test
in
mov
push
pop
popf
cld
mov
clc
add
adc
inc
cli
dec
mov
jmp
xchg
cmp
push
push
and
mov
outs
and
xor
shl
add
mov
or
inc
xor
gs
jns
nop
and
add
jnp
xchg
or
aad
pushf
xor
out
add
movs
cdq
out
adc
lds
call
in
adc
and
mov
ds
cwde
mov
add
dec
loopne
xchg
push
ins
ja
add
(bad)
mov
cwde
jb
retf
pushf
xor
sbb
or
xchg
and
pop
movs
adc
cmc
cmp
adc
shr
pop
int3
call
add
mov
test
je
push
xchg
jmp
sbb
ss
pop
mov
xchg
repz
cld
inc
ror
int
aam
and
sti
jge
add
lods
mov
in
xor
(bad)
ret
push
popa
mov
sub
cmp
mov
jmp
daa
(bad)
cmp
adc
int
lock
rol
sub
rol
and
xor
jp
xor
dec
je
mov
xchg
pop
cmp
xor
jl
pop
sub
dec
push
mov
ins
inc
jle
imul
stos
pop
stos
lahf
nop
cmp
imul
cmp
cmc
mov
das
adc
xor
add
and
ret
cmc
mov
and
mov
(bad)
aas
shr
mov
push
dec
aas
lahf
inc
enter
xchg
xor
stc
sbb
and
cmps
hlt
dec
mov
inc
jge
push
sub
jmp
push
nop
mov
aaa
test
add
outs
int3
and
mov
push
cs
shr
les
cmp
jmp
fwait
in
stos
sbb
cmp
ja
adc
cli
jne
mov
enter
cdq
(bad)
xor
inc
loope
nop
ds
xor
rep
scas
aaa
mov
fcomip
lahf
or
loop
popa
out
not
leave
sub
mov
(bad)
cmp
int
scas
fisttp
(bad)
(bad)
nop
arpl
stos
repz
add
popa
shl
out
pop
mov
and
icebp
sahf
cmp
call
mov
cmc
call
sub
stos
in
int3
sbb
jg
ret
jecxz
dec
xchg
add
retf
or
shr
arpl
repnz
push
jecxz
call
iret
xchg
imul
or
push
mov
sbb
push
cmc
dec
xchg
adc
mov
or
push
cmc
xchg
fs
mov
popa
mov
mov
sub
(bad)
xchg
test
cmp
sbb
out
adc
mov
xchg
fisub
add
ds
mov
loope
mov
je
mov
hlt
mov
mov
nop
int
cmps
mov
mov
dec
lahf
repnz
je
sub
in
neg
jmp
ret
stos
aad
mov
mov
fnstenv
std
lock
mov
int
(bad)
loope
cli
mov
ss
outs
in
daa
imul
pop
jns
test
fstp
imul
out
(bad)
retf
pop
std
xchg
push
xchg
push
(bad)
mov
or
sub
jmp
xchg
aas
cmp
in
or
xor
test
les
and
mov
in
jae
mul
mov
jecxz
out
mov
dec
mov
xchg
sbb
int3
stos
rcr
jmp
xor
(bad)
xor
fisubr
cmp
lock
add
fs
(bad)
lahf
lds
sub
jb
das
je
cmp
int3
out
adc
ss
pop
ja
add
sub
dec
xchg
push
hlt
sub
xor
movs
stos
xchg
mov
adc
cs
stc
sbb
call
xlat
sub
add
gs
add
xor
enter
dec
or
pop
push
sbb
mov
dec
outs
repz
fild
mov
mov
nop
sub
jbe
or
leave
adc
jp
push
inc
cmp
mov
cmp
test
js
std
mov
ins
ficomp
loope
aad
xor
mov
pop
and
dec
(bad)
mov
and
dec
xchg
ins
sar
mov
call
mov
xor
and
jmp
inc
fs
jo
pop
xlat
daa
arpl
jmp
mov
xchg
data16
daa
cdq
sbb
sbb
jae
jnp
ret
cdq
clc
ror
dec
je
cs
pop
push
push
cs
inc
push
adc
rol
sbb
mov
sbb
sbb
not
hlt
xor
out
lock
xor
fild
mul
push
dec
pop
xchg
data16
into
sbb
sbb
aam
int
movs
jbe
int
ret
leave
mov
push
mov
std
imul
dec
cwde
dec
movs
add
cld
cmps
ficomp
add
imul
cmp
inc
pop
mov
adc
sbb
(bad)
jge
sti
pop
add
xchg
mov
mov
arpl
adc
cmp
retf
dec
aad
or
shr
sbb
mov
xchg
push
jb
pop
sub
leave
daa
pop
icebp
sbb
retf
pop
mov
fild
inc
shl
adc
not
mov
popa
rol
pop
sti
idiv
loopne
inc
and
mov
inc
arpl
cvtdq2ps
dec
pop
test
mov
jp
sub
nop
shl
lods
xchg
mov
xchg
dec
sbb
lea
mov
into
cmp
cwde
add
pop
test
(bad)
pop
mov
(bad)
push
mov
mov
mov
lods
xchg
mov
mov
in
std
or
int
mul
outs
in
inc
xchg
xchg
div
ret
xor
cmp
ds
jnp
xchg
adc
jle
push
pop
mov
dec
cmp
push
loope
mov
aaa
out
rcl
xchg
push
int
mov
repnz
pop
inc
jne
fcomi
mov
rcr
mov
test
lock
in
push
jae
stc
(bad)
push
xchg
loopne
add
dec
jnp
xchg
jno
jb
and
push
mov
adc
outs
pop
rcl
cmp
inc
daa
repnz
pop
pop
ds
sbb
cs
or
adc
mov
add
aam
(bad)
xlat
cmp
cmp
js
xor
dec
xor
aam
out
cld
fist
xchg
mov
pop
ror
shl
in
aad
cmp
add
or
mov
popa
sar
pop
and
jns
push
adc
mov
xchg
and
jb
push
pop
sbb
xor
xchg
xor
cmps
mov
icebp
inc
hlt
call
rcl
mov
inc
mov
dec
xchg
int
and
in
jmp
mov
test
add
imul
fdiv
fdivp
xchg
nop
test
aam
leave
hlt
out
mov
cdq
das
shr
inc
repnz
in
push
mov
fs
mov
mov
pop
jno
inc
adc
imul
sub
out
pop
mov
adc
dec
movlps
pop
mov
int
xor
cmp
popf
inc
lock
or
ror
lds
mov
mov
fistp
jle
(bad)
dec
xlat
shr
imul
cs
popa
(bad)
leave
adc
(bad)
scas
dec
sub
dec
daa
inc
sub
push
pushf
mov
pop
not
cmc
shr
fsqrt
add
sbb
push
mov
stc
cmps
xor
inc
cld
push
sub
out
cmp
mov
fcom
sub
xchg
or
sbb
sbb
push
fistp
pop
and
ret
ficomp
push
or
jp
in
fisttp
mov
inc
or
imul
xchg
in
push
call
scas
idiv
inc
repz
mov
pop
and
fcomi
add
push
repnz
add
in
fmulp
xor
cs
out
std
cli
xchg
push
aad
das
jmp
mov
ins
mov
into
mov
lahf
push
xor
dec
out
in
(bad)
out
enter
mov
xchg
or
fdivr
ror
sub
jle
inc
inc
mov
sti
adc
es
out
scas
mov
fldenv
ss
adc
test
retf
cmp
xor
or
inc
push
retf
std
nop
push
test
(bad)
rcr
mov
mov
sahf
xchg
pushf
addr16
shl
or
lods
sub
inc
mov
mov
scas
test
scas
ds
pop
jae
clc
mov
jbe
dec
xor
mov
mov
sub
outs
adc
sbb
jg
rol
push
into
ret
je
(bad)
call
jmp
mov
jbe
xlat
scas
hlt
adc
fidivr
test
and
pushf
repz
mov
pop
fld
sbb
mov
jns
or
adc
test
mov
jnp
xchg
xchg
clc
bswap
imul
pop
add
aad
shl
cwde
add
lds
in
xor
fistp
sti
or
dec
lds
aas
das
int
cs
xchg
mov
or
ins
push
call
outs
inc
jne
test
ds
pusha
push
ja
fstp
ss
jnp
outs
mov
or
sub
add
jmp
xchg
cmp
cli
pop
push
xor
mov
in
daa
shl
dec
push
xor
cmp
pop
jmp
pop
xchg
pop
daa
cld
cli
test
mov
or
or
sbb
mov
jnp
cdq
pop
mov
aam
pop
stos
push
fistp
clc
fiadd
call
mov
xacquire
mov
lahf
and
out
xor
cmp
sbb
xchg
inc
mov
in
mov
les
adc
adc
adc
cwde
or
ja
xchg
enter
dec
jmp
pop
sub
mov
ret
mov
shl
mov
push
lods
(bad)
call
lods
adc
arpl
inc
dec
enter
push
sbb
sbb
inc
dec
push
out
pop
imul
push
in
(bad)
fdivrp
jmp
sbb
int3
test
mov
and
cdq
xor
and
cmp
enter
call
lods
fidiv
iret
pop
add
mov
jbe
fnstsw
jmp
out
ss
cli
aaa
sbb
fbstp
(bad)
add
div
in
add
fisubr
push
ja
push
aam
pop
pop
sub
adc
stc
ret
jle
cmp
mov
ret
shl
test
sbb
mov
cmps
rol
bnd
shr
fidiv
cld
daa
into
bound
jne
dec
pop
cs
dec
push
daa
inc
fimul
fcmovnb
mov
push
arpl
int3
imul
loope
fs
mov
or
(bad)
outs
or
data16
ins
push
adc
ds
std
(bad)
xor
cmp
push
std
xchg
out
jno
sub
xlat
das
mov
inc
call
and
mov
arpl
fwait
pop
jb
movs
xchg
inc
mov
jbe
cmp
jmp
call
rcl
mov
jns
and
popa
cmp
cli
mov
test
and
fs
inc
xor
xor
jmp
cmp
inc
call
inc
sub
adc
mov
pop
sub
lahf
sahf
sub
jmp
adc
inc
std
jmp
sub
mov
test
xor
or
adc
movs
stc
xchg
cmps
mov
test
ss
enter
hlt
ins
imul
or
jecxz
movs
add
push
dec
xor
aam
push
mov
cmc
data16
fwait
xlat
scas
shl
bound
data16
mov
push
iret
fadd
xchg
sbb
ds
icebp
gs
jb
jno
stos
out
fmul
int3
scas
push
cmp
mov
dec
pop
(bad)
call
gs
loope
cli
mov
call
xchg
push
or
sub
(bad)
mov
mov
dec
xlat
sbb
or
shl
dec
pop
pop
inc
inc
aam
popf
pushf
pushf
out
mov
cmp
das
cs
test
adc
or
xor
stos
nop
call
hlt
mov
sbb
mov
sar
sbb
repnz
sbb
stc
lock
cmovae
jl
(bad)
ss
data16
movs
mov
and
or
fmul
cs
ss
add
lgs
xchg
pop
jmp
add
jle
pop
mov
retf
fdiv
sti
je
cmps
xor
mov
popf
shl
test
retf
pop
loope
movs
outs
mov
cmp
sahf
push
add
push
ins
fstp
pop
loope
push
or
sbb
cwde
sahf
je
xor
ret
mov
xor
add
jp
scas
fsubr
pop
stc
add
cmp
xchg
jnp
sub
mov
mov
rcl
push
aad
xchg
jno
dec
or
cmp
cmps
sbb
in
add
dec
dec
pop
or
int3
iret
popf
in
pop
aam
and
or
(bad)
jmp
mov
mov
or
push
test
and
mov
cmps
push
lds
popf
mov
ss
out
push
cmp
hlt
adc
xchg
add
sub
sahf
pop
addr16
inc
and
repnz
sar
push
push
dec
push
cli
mov
sbb
push
pop
jns
leave
cli
mov
jmp
add
out
into
cmp
or
lahf
xor
popf
lock
ja
and
push
mov
jg
call
mov
add
jnp
call
jg
xlat
sti
xor
movs
jmp
jno
fst
push
inc
fld
loop
ja
sub
stos
sub
mov
sti
test
push
dec
mov
push
dec
or
test
movs
inc
ins
push
dec
enter
sbb
jecxz
cmp
sti
cmps
sbb
in
jae
cdq
mov
stos
xchg
cmps
pop
inc
lock
fstp
jmp
popf
xor
(bad)
push
les
sbb
and
sub
jne
not
iret
or
pop
and
stc
add
rcl
mov
in
sbb
adc
push
call
adc
xor
inc
and
mov
fmul
pusha
mov
pop
add
mov
pop
adc
mov
cmp
data16
pop
popa
mov
inc
add
sbb
or
jmp
jns
dec
std
aaa
and
mov
stos
rol
cdq
lods
in
pop
loop
or
mov
pop
and
push
sbb
mov
je
ds
xchg
movs
stos
lahf
pop
bound
pop
xor
or
push
and
pop
cli
lods
cs
mov
stos
stos
popf
das
xor
jnp
jge
imul
mov
into
in
clc
and
adc
test
push
push
cmp
push
rcl
rcr
pop
cwde
lods
lods
push
fstp
daa
dec
retf
mov
(bad)
leave
pop
(bad)
xchg
bound
sub
pop
and
dec
adc
int3
mov
stc
cmp
stc
mov
cdq
xor
loopne
push
ja
imul
out
push
in
jmp
adc
mov
push
sub
push
adc
mov
rcl
adc
adc
inc
in
int3
fisttp
test
cli
sub
dec
jns
xchg
in
nop
or
sbb
mov
sub
sub
push
aas
lods
inc
cwde
clc
jmp
pop
push
pusha
bound
and
ror
test
xor
mov
jne
sub
mov
cmp
mov
imul
xor
adc
fidivr
jmp
cld
add
sbb
movs
adc
sbb
pushf
jmp
or
mov
push
mov
rcl
add
jnp
(bad)
sub
inc
inc
adc
scas
jecxz
dec
out
aaa
pop
xchg
push
pop
outs
sub
xlat
ja
aaa
leave
adc
xchg
mov
mov
mov
mov
(bad)
out
xchg
or
imul
push
lods
push
out
ret
outs
iret
movs
push
mov
iret
sub
(bad)
cmps
clc
jle
dec
mov
int3
data16
stos
ret
shl
cmp
pop
loop
mov
cli
dec
fnstsw
lods
or
push
les
pop
xor
and
sub
dec
and
aam
sub
movs
mov
cmp
jge
test
xor
(bad)
call
idiv
and
lock
jle
stos
jp
fld
in
push
or
pushf
call
xchg
jmp
dec
cmc
add
jns
xchg
fld
ffree
mov
fild
sub
stos
xchg
xchg
inc
add
ret
cld
mov
pop
fsubp
mov
addr16
pushf
mov
rcr
pop
push
movs
pop
ror
or
sar
jno
or
(bad)
shl
dec
aas
sbb
clc
nop
xor
inc
cmp
call
push
xchg
sbb
sbb
push
or
cwde
jle
in
mov
dec
mov
es
aaa
xchg
(bad)
das
jnp
sub
mov
jne
push
arpl
and
mov
in
cmp
test
sub
adc
add
xchg
faddp
inc
adc
pop
sub
ins
jp
push
mov
sbb
cdq
fld
inc
adc
fs
dec
jae
lods
jle
neg
fsubr
ja
cmp
adc
inc
xchg
outs
pop
sahf
add
scas
push
arpl
add
push
cmp
imul
inc
imul
xor
(bad)
js
pop
fdivr
inc
shr
cmps
in
cmp
pop
xchg
jbe
scas
mov
mov
and
jae
inc
cmp
push
aad
dec
jmp
mov
in
idiv
push
jg
pop
test
scas
dec
fcmovnbe
mov
cmc
pop
retf
mov
mov
pop
dec
test
pushf
pop
mov
inc
je
mov
shl
aas
dec
out
mov
jl
xor
and
inc
xchg
ja
sti
and
and
inc
lods
and
cld
mov
jmp
sbb
test
pusha
or
mov
sub
pop
outs
scas
dec
std
push
fisubr
xchg
xor
xor
adc
inc
sbb
test
mov
scas
cmp
sub
fmul
or
dec
fnstcw
aaa
int3
fcomp
xor
jb
sbb
jp
pop
push
aaa
call
jmp
cmps
outs
test
out
push
int
pushf
mov
movs
mov
pop
push
movs
call
retf
js
push
scas
movs
or
(bad)
mov
mov
adc
adc
fcmovnbe
leave
or
es
retf
fnstcw
addr16
movs
jns
arpl
sub
xchg
inc
bound
sub
inc
cmp
ja
call
push
dec
cmps
dec
mov
push
cli
jb
xor
add
sbb
xchg
enter
jae
ds
repnz
(bad)
cmp
mov
mov
cmps
sbb
loop
mov
ret
pop
addr16
loope
sub
ja
mov
add
cwde
and
nop
aaa
or
mov
mov
(bad)
jecxz
aam
ss
sub
leave
loop
mov
or
jne
push
sbb
enter
sti
mov
push
pop
inc
retf
mov
dec
mov
jmp
in
sbb
retf
mov
in
in
imul
out
or
ret
idiv
add
scas
outs
ficomp
add
into
add
or
jmp
add
mov
int3
inc
les
int
pop
mov
repz
pop
in
push
jmp
stc
pop
adc
jae
cmp
jp
add
sbb
(bad)
cmps
push
std
ret
(bad)
cld
fs
retf
pop
jne
mov
inc
sar
jno
fild
fwait
add
repz
mov
loopne
loop
xor
jbe
push
or
pushf
inc
mov
push
addr16
xchg
mov
pop
cwde
loopne
xchg
adc
sbb
or
(bad)
xor
fs
jmp
jno
imul
xor
push
cmp
out
outs
push
mov
bound
jbe
pop
cmp
lods
mov
mov
jmp
and
jle
mov
or
sbb
mov
nop
in
call
inc
push
dec
mov
jg
mov
cmp
xor
push
stos
sub
retf
loopne
popa
addr16
mov
clc
mov
cmp
inc
dec
adc
sbb
sub
mov
cmp
xor
push
movs
call
push
lock
lods
out
mov
lods
ret
in
sub
pop
jb
lds
mov
(bad)
adc
add
adc
jb
push
fbld
or
mov
ret
push
fistp
dec
push
mov
sub
mov
dec
pop
pop
push
std
icebp
aaa
and
int
sub
imul
push
js
mov
mov
sbb
cwd
outs
adc
inc
scas
dec
xor
cdq
cmp
call
cmp
call
gs
sbb
scas
je
bound
mov
stos
sub
lock
out
test
jbe
std
xor
scas
and
mov
fldcw
jmp
adc
add
in
cvtpi2ps
xor
stc
lock
mov
call
mov
rol
add
popf
adc
jae
mov
in
scas
pusha
(bad)
in
js
xor
fadd
xchg
shl
imul
pop
repnz
push
out
pop
loopne
ins
xor
(bad)
jg
das
dec
(bad)
repnz
sub
call
push
pop
pop
ins
mov
add
call
shl
sub
mov
test
imul
ficom
inc
inc
mov
xor
sbb
sub
jo
jp
lds
jnp
inc
test
retf
mov
lods
add
sub
mov
mov
or
xchg
lock
dec
loope
or
pop
scas
rcl
xor
lea
pop
loop
mov
jmp
cmps
xor
das
jl
fadd
mov
push
cmps
leave
loope
or
inc
mov
xchg
pop
xor
mov
call
add
sar
into
shr
mov
sub
cmps
cmp
xlat
test
imul
jb
mov
sbb
gs
cdq
sub
or
pop
div
and
call
mov
mov
jge
lahf
mov
or
jb
or
cmp
xchg
faddp
lds
push
data16
sub
mov
jns
jb
jno
lea
xchg
movs
xor
and
stos
(bad)
or
pop
xchg
pop
jg
push
aam
and
mov
aam
test
ja
shl
cmp
scas
cli
mov
push
jle
and
adc
adc
aam
out
mov
add
xchg
mov
sub
into
add
or
je
mov
pop
outs
mov
ss
lock
sub
(bad)
aam
fmul
mov
imul
ds
(bad)
cld
jge
xor
push
jno
and
sub
push
popf
adc
push
jge
lds
nop
mov
adc
jle
jge
retf
out
xor
(bad)
in
xlat
(bad)
mov
dec
mov
shl
jl
pop
call
stc
cmps
fcomp
gs
idiv
imul
addr16
aad
cmc
retf
and
dec
aad
sub
pop
lock
mov
repz
dec
fs
inc
daa
shr
xchg
imul
add
adc
pop
shl
push
jl
pusha
retf
sbb
and
mov
sub
and
popa
adc
int3
sbb
fiadd
cmp
das
enter
xor
cmp
test
lds
gs
mov
(bad)
and
aad
fimul
jge
sbb
xor
and
mov
mov
jle
(bad)
pop
cld
jo
xchg
dec
int
pop
aad
jg
movs
mov
sbb
xor
mov
jmp
retf
xor
call
add
xor
inc
inc
or
fld
and
arpl
rol
int3
jo
aad
mov
shl
shl
outs
mov
adc
mov
(bad)
push
aad
mov
sbb
lods
jmp
fwait
mov
ds
inc
push
jae
shr
sub
retf
jmp
sbb
add
lods
dec
push
jns
fnsave
je
jbe
mov
adc
fsubr
jge
inc
ins
ss
jnp
cmp
sbb
mov
cmp
rcr
jbe
mov
and
push
adc
mov
cli
popa
repnz
jno
pop
jle
out
push
das
jnp
dec
push
dec
jb
xor
lds
sub
jl
loop
xchg
mov
jo
mov
loope
sbb
cmp
lock
push
jb
push
icebp
or
int
dec
ja
jb
pop
out
dec
mov
ins
dec
or
icebp
push
push
test
aam
sbb
pop
ss
adc
cmps
cmc
rcl
add
getsec
cdq
adc
or
mov
inc
dec
data16
das
enter
mov
jg
bound
jmp
test
and
outs
pushf
inc
fs
fidiv
ins
test
fisttp
cwde
addr16
jle
xor
push
pop
pop
xchg
jle
or
jnp
sbb
fadd
jo
sub
movs
cwde
mov
pop
sbb
gs
popf
mov
add
(bad)
mov
mov
mov
in
add
or
cmp
xor
bound
out
in
fst
sbb
dec
sub
aam
xlat
dec
mov
lock
xchg
mov
and
adc
push
fnstsw
outs
addr16
mov
pusha
jmp
mov
sti
pop
push
jp
xor
xchg
mov
mov
and
adc
push
add
mov
dec
jl
mov
mov
cmp
cli
jmp
icebp
inc
fbstp
jge
dec
mov
fistp
cli
pop
adc
push
mov
fcomp
xor
lahf
nop
lahf
xor
xor
and
mov
pop
cmc
push
arpl
jno
sbb
aam
popf
or
push
mov
sub
mov
xchg
jp
adc
das
cmp
arpl
mov
sub
neg
sbb
fmul
icebp
or
repz
xor
pushf
ja
dec
aam
xchg
add
fs
int
sbb
xchg
cmc
lahf
or
dec
cwde
(bad)
dec
push
mul
or
mov
cmps
movs
cmc
and
dec
std
stos
mov
call
pop
adc
jmp
aas
mov
adc
jmp
pop
xlat
xchg
lock
dec
iret
daa
jnp
push
dec
lahf
inc
enter
fdiv
jle
retf
les
(bad)
sbb
add
pop
pushf
and
jmp
cld
frstor
mov
shr
int3
ss
push
pushf
or
jecxz
push
in
xor
imul
in
push
lahf
mov
pop
push
mov
retf
outs
cli
xchg
sub
pusha
mov
popf
add
pop
cmc
aam
inc
loope
fsub
push
sti
mov
sub
int
inc
sbb
or
mov
push
test
stos
out
add
jge
fcom
dec
pop
xchg
inc
retf
fld
sub
lods
and
xchg
dec
int3
aaa
movs
mov
dec
push
fisttp
mov
fidivr
jno
(bad)
lods
adc
adc
push
or
repz
movs
movs
add
mov
cdq
dec
mov
vpshufd
out
jae
aas
stos
or
sbb
xchg
out
mov
mov
bound
test
shl
and
pushf
and
retf
mov
test
mov
lods
cmp
xor
sahf
mov
(bad)
push
xor
sbb
ror
cdq
mov
mov
cmps
(bad)
pop
mov
mov
jae
or
jecxz
pusha
push
mov
push
pop
push
ins
sbb
ss
gs
dec
addr16
call
jb
pop
lahf
frstor
in
mov
jmp
scas
and
or
pop
inc
pop
cmp
test
hlt
sbb
jmp
call
xlat
xor
add
pusha
jmp
sahf
cmp
(bad)
and
lea
jge
xchg
sub
mov
stc
push
xchg
pop
das
lods
or
jae
shl
push
cmp
jmp
in
cwde
movs
ret
jge
frstor
cmp
test
(bad)
mov
(bad)
into
je
sub
mov
out
mov
leave
add
xchg
popa
mov
gs
push
in
mov
push
stos
nop
xor
jl
retf
test
jmp
sbb
jmp
push
jecxz
(bad)
in
mov
push
rcl
jno
test
xor
fisubr
stos
sub
imul
cld
icebp
dec
push
popa
repnz
lock
data16
xchg
dec
loopne
fisubr
imul
imul
push
dec
dec
sub
pop
clc
push
sti
mov
movs
popf
and
pop
and
sbb
push
clc
stos
sub
or
dec
nop
jg
je
cmp
iret
xchg
jge
add
and
test
ficomp
mov
push
jmp
mov
xchg
pop
je
jae
aad
add
int
or
add
sbb
mov
sbb
lock
idiv
adc
inc
mov
int3
and
dec
mov
in
movs
retf
cmp
sbb
aaa
aad
in
fnsave
push
cmp
ss
cmp
mov
xchg
rcl
adc
add
push
add
fnstsw
clc
pshufw
aam
repnz
imul
int
dec
sti
dec
(bad)
cmps
mov
add
jo
inc
jmp
xor
sub
scas
retf
(bad)
xor
idiv
adc
adc
out
cmp
jmp
repz
add
sub
test
and
pop
cs
je
or
popa
or
scas
xor
in
ins
test
xor
jmp
aas
pop
xlat
mov
sbb
inc
jl
movs
and
fbld
leave
inc
ror
add
daa
stc
popf
pusha
or
js
(bad)
pop
jge
add
pop
stos
pop
inc
mov
adc
push
pop
mov
shl
mov
inc
je
lods
fistp
mov
rcl
and
rcl
test
sar
ficomp
mov
pop
mul
adc
(bad)
jnp
pop
ja
jge
push
xchg
in
out
out
das
daa
sbb
xor
dec
fidivr
jge
inc
ror
data16
ror
std
mul
repz
test
scas
pop
xor
add
xchg
mov
mov
add
inc
fisttp
ins
cwde
adc
or
push
int3
hlt
jg
jno
loopne
xchg
cmp
mov
sub
and
test
or
mov
dec
loopne
fld
jne
push
ds
in
in
and
mov
das
jp
mov
xor
inc
fwait
dec
dec
dec
push
push
mov
fcomp
pop
fdivr
jno
hlt
and
bound
arpl
cmp
cs
xchg
mov
push
pop
mov
xchg
fs
and
into
xlat
inc
add
test
dec
test
mov
pop
call
mov
xor
in
call
pop
xchg
push
popf
rcl
push
js
dec
icebp
daa
ins
icebp
mul
nop
int3
jle
outs
sbb
test
retf
mov
(bad)
and
jnp
loopne
leave
or
cs
jae
leave
pop
scas
and
xchg
shl
mov
jnp
pop
sahf
sub
ins
adc
dec
xor
pop
fwait
je
sbb
adc
mov
sbb
popa
add
imul
xor
ins
enter
pop
mov
int
dec
dec
sbb
sub
repz
pusha
cmps
(bad)
xor
cmp
ss
xchg
xchg
sub
mov
inc
call
inc
adc
aad
es
mov
xchg
xor
push
lods
inc
fld
out
fmul
or
add
adc
ds
ins
loopne
js
or
shl
mov
idiv
(bad)
aam
je
out
rcr
pop
cmc
pop
retf
mov
rcl
xor
scas
mov
out
inc
jg
jmp
popf
shl
shl
jge
aas
sub
mov
cmc
(bad)
stc
and
push
popf
pop
mov
and
fcom
paddusw
mov
pop
call
pop
sahf
nop
pop
je
pop
add
ficomp
adc
inc
push
pop
fs
stos
(bad)
cmc
or
adc
push
leave
int
and
test
aas
sbb
arpl
xor
enter
(bad)
cmp
mov
push
push
or
mov
sbb
push
shl
mov
ret
xor
hlt
mov
loope
dec
xor
rep
ficomp
xor
es
xlat
aaa
dec
add
dec
sahf
popa
push
call
dec
mov
mov
rcl
xchg
add
mov
or
ja
pop
iret
enter
sbb
or
mov
fs
lock
mov
jmp
cli
mov
xlat
sti
dec
inc
xor
clc
les
cld
out
pop
or
into
add
sbb
add
adc
xor
push
cmp
lea
mov
mov
repnz
cmp
sbb
inc
sub
push
cmp
inc
and
mov
xchg
mov
out
or
shld
lds
mov
hlt
cdq
(bad)
movs
jae
movs
ffreep
inc
and
mov
cmp
jo
pop
pop
aaa
les
mov
cdq
fnstenv
inc
rol
sub
mov
jmp
mov
add
mov
jp
cdq
daa
add
ds
add
push
push
mov
dec
into
dec
jge
fisub
mov
or
stc
xchg
xor
shr
out
out
jbe
ss
test
(bad)
sub
into
mov
mov
push
inc
sahf
ret
pop
sbb
add
fld
je
sti
jo
in
mov
xchg
es
or
out
fiadd
fstp
pusha
shl
cdq
iret
adc
cmp
xor
sahf
pop
pop
jle
pop
sub
adc
and
repz
sub
push
jns
clc
mov
cdq
xchg
ss
dec
jecxz
xchg
mov
call
push
xchg
sub
jmp
mov
(bad)
sub
xor
push
jo
sbb
mov
dec
or
jg
mov
sbb
dec
adc
js
cwde
test
movs
or
push
pop
inc
shr
push
out
push
ds
data16
dec
daa
pop
jno
pop
pop
mov
xlat
jmp
ret
fld
or
mov
mov
out
xchg
cwde
adc
pop
cmc
int
inc
ins
in
mov
cli
enter
repz
xchg
sbb
push
sbb
(bad)
push
xchg
adc
sbb
ret
sbb
cmp
jmp
nop
(bad)
sub
jb
jb
ja
(bad)
jns
dec
shr
pop
ret
inc
jns
aam
shr
xchg
pop
add
test
ins
rol
out
mov
call
mov
je
and
jo
cmps
es
lock
fs
adc
(bad)
mov
inc
sbb
or
inc
fstp
mov
imul
xor
imul
adc
push
or
sub
fwait
adc
scas
(bad)
mov
(bad)
hlt
inc
fxch
test
sbb
jb
inc
out
aam
push
pop
xchg
and
inc
daa
cli
pop
stos
xor
pop
int
add
sub
jb
inc
pop
inc
mov
add
add
sbb
test
fs
add
add
mov
dec
xchg
cmp
rcl
jl
adc
inc
mov
cli
fmul
repnz
bound
scas
jle
out
je
leave
ss
out
or
sbb
xchg
sub
cmp
popf
pop
ss
popf
mov
sti
lods
and
jle
ds
jo
fcom
in
test
fidiv
rcr
pop
jae
(bad)
xchg
(bad)
sbb
pusha
and
inc
retf
inc
xchg
enter
pop
xchg
push
stos
push
jno
data16
retf
adc
xchg
jg
retf
mov
sub
sbb
sub
or
xlat
ret
mov
dec
push
mov
mov
inc
cld
push
dec
xor
mov
cmps
in
mov
fmul
in
lods
or
xor
loopne
inc
cmp
sti
mov
call
pop
add
rcl
lock
xchg
inc
popa
xor
and
leavew
(bad)
addr16
js
(bad)
xchg
or
test
pop
enter
jl
mov
imul
push
and
call
ss
adc
enter
rcl
imul
pop
shl
mov
sub
inc
shr
cmp
xchg
lock
xlat
or
repnz
mov
aad
cld
ficomp
fnsave
dec
xor
sti
(bad)
bnd
push
push
adc
ss
fnstsw
and
pop
into
lods
mov
shl
mov
out
adc
gs
xchg
pushf
mov
mov
mov
daa
mov
dec
cmp
sub
adc
xor
mov
sub
popf
ror
mov
adc
push
ds
test
adc
leave
and
int
arpl
aaa
ror
or
jae
adc
repz
push
(bad)
cld
lds
cmps
mov
call
ja
rcr
or
mov
ins
jg
ja
int
shr
jmp
and
jg
and
jb
add
ins
xchg
cmp
inc
fmul
shl
aam
pop
fst
aas
push
out
inc
mov
ret
lsl
pop
xchg
stos
jno
pop
mov
xchg
xchg
js
push
arpl
add
pop
fwait
mov
add
leave
lods
sbb
jno
bound
xchg
cmp
cmp
cmp
out
repz
or
neg
push
clc
sti
popa
cmps
call
repnz
xor
cdq
pop
xchg
ds
jno
push
dec
xor
push
or
out
add
push
stos
daa
mov
sub
jns
sbb
push
push
into
jo
scas
mov
cmp
shl
ins
mov
cmp
jbe
dec
in
sbb
test
lahf
pop
addr16
int3
xlat
xchg
dec
lea
add
push
xor
and
push
xor
pop
(bad)
cmps
fidivr
jno
sub
dec
mov
lods
es
fstp
sub
and
mov
mov
xlat
cmps
fld
lock
jnp
stos
cmps
rcr
jecxz
mov
pushf
mov
icebp
push
mov
jecxz
mov
cmps
pop
mov
push
mov
jmp
loope
and
fnsave
dec
popa
and
jge
cmc
mov
adc
xchg
div
xor
mov
cld
sbb
data16
(bad)
sbb
add
xchg
pop
and
cmp
fcomp
cli
(bad)
cs
call
xchg
cwde
mov
pop
push
leave
xor
sbb
xor
jmp
pushf
iret
movs
movzx
daa
dec
add
jae
std
call
js
ror
(bad)
xor
push
jae
outs
(bad)
enter
mov
jo
test
pusha
std
or
outs
fsubrp
mov
fisub
cdq
cmps
push
pop
jne
test
mov
js
clc
inc
movs
push
xlat
dec
leave
es
dec
cs
dec
jb
inc
gs
push
push
mov
mov
jmp
fisubr
ja
and
(bad)
loop
(bad)
cmps
ret
lahf
jbe
mov
push
mov
add
jns
jne
in
adc
sub
punpckhbw
fst
sub
shl
enter
stos
popa
mov
push
jmp
push
js
call
test
lea
xchg
mov
adc
pop
mov
jmp
mov
out
dec
jb
fisub
sbb
adc
dec
shl
cmps
cmp
cmp
mov
sub
ret
test
frstor
or
stos
rol
push
or
xor
lahf
loop
inc
xor
in
jne
mov
aas
mov
test
scas
add
fistp
push
mov
arpl
outs
mov
adc
xchg
sub
ret
jnp
mov
outs
adc
mov
mov
loopne
or
xchg
mov
fdivr
mov
sbb
sahf
pop
out
fistp
xchg
push
xor
inc
jg
repnz
imul
xchg
mov
repnz
out
(bad)
push
enter
mov
hlt
loopne
mov
cli
dec
out
popf
and
lea
mov
inc
daa
mov
lock
sub
aaa
xor
inc
adc
icebp
(bad)
aad
cli
gs
daa
xchg
and
mov
add
inc
sub
xchg
mov
movs
(bad)
(bad)
fcom
aas
repz
fstp
test
vmovshdup
add
xor
out
ins
mov
push
jmp
imul
pop
mov
sbb
adc
sar
mov
pusha
fwait
xor
ja
dec
dec
aam
mov
aaa
repz
stc
sub
in
mov
pushf
test
push
add
call
std
dec
inc
movs
pusha
pushf
jne
mov
addr16
adc
pop
mov
movs
repnz
outs
in
adc
dec
adc
xor
inc
inc
repnz
lods
sbb
fadd
lds
sbb
push
mov
xchg
cmp
xor
pop
dec
out
mov
in
push
mov
lods
(bad)
(bad)
repnz
pop
fld
imul
and
mov
inc
aas
cmp
mov
(bad)
sbb
cld
add
xchg
sub
(bad)
dec
mov
fnsave
adc
sub
cld
pop
sub
out
xchg
cli
fisttp
xchg
xchg
inc
lds
stc
adc
sbb
loope
scas
or
icebp
sbb
mov
(bad)
shr
ins
stos
mov
inc
xchg
mov
xor
(bad)
in
sub
outs
in
sbb
cld
ficomp
dec
sti
(bad)
repz
cld
pop
icebp
fbstp
aam
cmps
sub
cmp
ss
push
push
scas
sbb
push
dec
adc
fwait
inc
jno
pop
scas
ins
sar
pop
and
mov
mov
fcmovbe
setle
push
dec
add
xchg
push
push
or
(bad)
adc
aam
pop
mov
lods
ja
ficom
ja
mov
jo
ret
addr16
mov
fs
pop
js
or
or
loope
cmp
push
and
mov
and
mov
inc
and
push
sub
(bad)
xchg
sti
mov
repnz
jno
and
jns
xchg
push
xchg
icebp
fisttp
mov
scas
mov
mov
pusha
loopne
jb
cmp
cmps
rcl
stos
repnz
sbb
in
fwait
dec
out
shl
ja
push
dec
jge
mov
jbe
popf
cs
and
aas
movs
inc
jb
(bad)
rol
dec
push
cmps
pushf
movs
and
push
test
mov
jge
ins
dec
adc
sub
xor
loopne
sub
sbb
call
bound
sbb
jno
retf
pop
pop
in
inc
pop
jle
test
jns
shr
movs
fcom
or
push
fsub
ret
pusha
dec
in
pop
cdq
mov
push
mov
pop
add
add
add
movs
cmp
xchg
cld
call
mov
add
xor
rol
mov
pop
test
or
mov
aas
inc
or
pop
rcl
les
dec
adc
scas
ins
outs
mov
cmps
leave
mov
iret
cdq
sub
stc
call
icebp
xchg
or
call
jo
cmp
mov
stos
pop
or
cld
or
sbb
das
ret
(bad)
jl
enter
cmp
mov
es
xchg
mov
inc
cmp
or
xor
jecxz
sub
imul
push
retf
sqrtps
adc
and
dec
stos
xchg
mov
ds
rol
jg
ror
pop
pop
sub
push
lods
xor
xchg
ret
mov
pop
adc
pop
pop
lods
icebp
mov
add
or
and
cmp
or
loopne
or
pop
sbb
les
pop
xor
or
loop
pop
cmps
push
in
or
mov
dec
inc
inc
ret
and
adc
cmc
jecxz
int3
bound
leave
pop
cwde
mov
and
mov
jb
mov
mov
or
data16
xchg
push
inc
movs
add
cmp
stc
mov
jmp
sub
pop
mov
repz
movs
data16
dec
mov
imul
inc
add
scas
test
sti
aas
clc
xor
adc
sbb
js
add
shl
and
inc
into
mov
aas
mov
jae
cwde
jno
fadd
xchg
lods
sbb
jnp
adc
cmp
mov
pop
int
leave
xor
repnz
push
xchg
pop
push
not
and
adc
jp
cld
mov
call
lock
add
aas
mov
cmp
jmp
ss
add
(bad)
lods
mov
out
and
mov
iret
pushf
adc
mov
push
dec
ret
ins
inc
jne
fs
sub
inc
sub
mov
mov
test
lods
mov
inc
idiv
in
xchg
push
sbb
mov
mov
mov
jns
and
push
mov
mov
mov
pop
mov
dec
out
movs
jp
out
cmp
loop
cmps
adc
adc
repz
xchg
loopne
push
or
or
es
mov
lea
inc
add
or
pusha
in
punpcklbw
loope
jnp
std
jne
jmp
in
jp
mov
xor
sub
adc
fstp
fild
xchg
mov
cli
shr
inc
inc
retf
and
ja
(bad)
leave
daa
jle
inc
sbb
push
lods
es
jnp
xchg
daa
fimul
test
inc
mov
test
push
mov
and
xor
out
adc
pusha
mov
pop
add
call
das
neg
test
out
ins
dec
sti
rcl
cdq
jecxz
inc
add
add
fwait
outs
sti
adc
cmc
jne
jl
fdiv
inc
or
call
xchg
xor
aas
mov
jno
pop
inc
call
push
sub
enter
enter
mov
bound
mov
fidivr
mov
loop
stos
mov
iret
fild
pop
repz
inc
xor
pop
xchg
mov
mov
fstp
ficom
pop
cmp
in
cld
js
sti
or
sbb
data16
out
xchg
fwait
jbe
daa
push
lods
and
adc
xlat
in
in
xchg
pop
rcl
stos
pushf
scas
std
pop
inc
pop
add
jecxz
cs
aaa
lods
xchg
mov
xchg
enter
in
mov
adc
ds
or
test
fidiv
push
inc
sub
mov
sub
sub
cmc
xor
push
jge
cwde
movs
pop
cmp
mov
(bad)
jnp
repnz
or
and
pop
pop
jg
repnz
cmc
icebp
arpl
pop
and
call
push
aam
sbb
xchg
fstp
mov
sub
lahf
push
push
bound
out
mov
dec
dec
fisttp
mov
push
sub
imul
pop
and
lds
cmp
pusha
loop
pusha
and
std
dec
or
sub
cdq
cmp
cmps
mov
lahf
fstp
mov
add
ror
scas
jns
or
sub
xchg
mov
cmp
sub
mov
cs
fcomp
lds
loope
xor
ja
xor
mov
jns
in
in
in
in
inc
or
inc
sub
cmp
jb
fld
ss
xchg
mov
imul
enter
call
mov
xlat
fld
(bad)
adc
mov
(bad)
lock
leave
xchg
jp
fidiv
pop
and
adc
push
mov
mov
sub
test
sbb
xchg
jmp
es
xchg
loop
or
stos
xchg
mov
add
int3
jae
and
mov
pop
push
mov
xchg
cmc
sbb
ss
and
xchg
or
div
out
and
mov
xor
xor
out
push
movs
addr16
sbb
inc
pushf
ins
cmps
les
scas
and
jecxz
loop
aad
jle
cmp
out
cdq
add
push
outs
(bad)
mov
sar
fsubr
aaa
lds
mov
pop
cld
push
stos
pushf
jae
mov
paddsb
pop
pop
push
inc
dec
mov
ret
xor
or
cmc
xchg
shl
jmp
cmp
and
sti
push
jb
rcl
fld
adc
dec
lds
xchg
sub
jb
fdiv
push
fwait
ins
aam
fwait
mov
aad
in
sbb
nop
cmp
inc
or
jne
lahf
cmps
test
out
push
xor
mov
xlat
adc
fisttp
mov
scas
sbb
dec
in
lahf
in
dec
pop
stos
mov
mov
jmp
lds
mov
xor
sbb
adc
and
push
ja
sub
add
mov
xchg
adc
imul
adc
push
daa
jg
fs
inc
cmp
clc
mov
xor
dec
in
sub
test
(bad)
loop
pushf
loop
mov
inc
and
fwait
xor
cmps
into
mov
sbb
shl
adc
ss
test
mov
ficom
es
sub
dec
fild
inc
jl
mov
pop
sub
xchg
repz
sbb
mov
or
retf
sar
dec
pop
cmps
les
test
daa
jge
and
imul
jge
cmp
in
(bad)
rol
iret
xchg
call
aas
fwait
jne
mov
sub
jmp
movs
sub
push
cmp
in
xchg
mov
cmp
ja
jo
sbb
push
in
xor
push
retf
mov
fidiv
mov
pusha
nop
rcl
repz
mov
fst
inc
pop
mov
sbb
or
div
pusha
adc
jns
jo
int
and
aaa
xchg
retf
dec
shl
cli
xor
rcl
test
leave
or
adc
push
pop
xor
aam
je
xchg
clc
mov
rol
pop
js
sbb
sub
aam
dec
adc
stos
(bad)
sbb
cs
inc
sbb
push
xor
stos
shl
(bad)
jp
repz
scas
hlt
movs
sbb
mov
iret
jae
or
fdivr
sahf
sub
xchg
xor
mov
xor
rcr
mov
call
mov
(bad)
cmps
or
xor
jo
dec
pop
xor
xor
fcom
(bad)
mov
sbb
rol
adc
outs
sar
ret
pop
out
xlat
ja
outs
mov
mov
test
mov
sbb
adc
out
cmp
mov
shr
push
cdq
push
xlat
sbb
jmp
mov
sti
(bad)
cdq
pop
adc
inc
and
fstp
sub
sbb
or
inc
and
test
repnz
fadd
xor
cmp
xor
stos
xor
imul
out
fst
xchg
xlat
or
aad
arpl
test
adc
cmp
aad
jbe
and
fisttp
ret
xor
bound
loop
sbb
cmps
outs
mov
and
jl
mov
jp
mov
cmp
ret
movs
rol
imul
xchg
jmp
adc
not
jg
mov
and
addr16
or
outs
sti
xchg
jbe
pop
test
stos
xor
mov
cmp
cmp
hlt
dec
daa
stc
mov
jecxz
lods
(bad)
pusha
gs
pop
fsubr
sar
cli
retf
fmul
cdq
sbb
mov
lahf
das
in
mov
fs
mov
or
popf
hlt
outs
fld
int
lea
enter
out
(bad)
cmc
repz
pop
(bad)
sar
and
out
add
gs
pusha
pop
xor
ss
movs
jmp
cs
out
and
mov
fist
mov
push
xchg
ds
xchg
lahf
clc
xor
mul
in
scas
cmp
hlt
jo
or
frstor
or
pushf
or
sbb
jge
add
ret
and
push
push
xchg
mov
fiadd
into
dec
les
jbe
repz
jnp
ficomp
int3
fistp
jb
outs
inc
loope
add
cwde
jbe
ins
leave
add
inc
loopne
icebp
push
mov
lock
lds
out
dec
cmc
mov
mov
jne
sub
pop
out
jns
pop
aad
cs
ss
mov
or
ja
es
addr16
jp
pop
add
and
jns
mov
pop
pop
mov
xchg
popf
mov
jbe
cld
fcom
std
mov
add
fcomp
scas
add
loop
pop
push
stc
sub
sub
dec
ss
movs
mov
cmp
sub
mov
dec
movs
pop
fadd
push
and
stc
shl
loopne
mov
or
int3
jo
xchg
and
jne
mov
cmp
jle
jns
inc
pop
out
xchg
xchg
leave
cmp
outs
fnstenv
xor
jl
out
int
test
shr
sbb
(bad)
out
fld
sbb
sub
sbb
cs
stc
test
ja
sub
test
movs
retf
sub
xchg
xor
jno
push
out
and
adc
enter
pop
jmp
fld
out
call
popf
xchg
imul
adc
and
mov
pop
pusha
add
ret
inc
fbld
fsub
jbe
xlat
pop
mov
in
sub
mov
sub
mov
sbb
gs
cmp
or
test
mov
sbb
ficom
adc
sub
out
cdq
sbb
cli
test
fld
ret
mov
leave
mov
fcmovnbe
popa
sub
mov
mov
cmp
dec
enter
movs
dec
xchg
icebp
inc
out
loopne
mov
in
add
(bad)
(bad)
jl
adc
mov
jns
fdiv
push
mov
pop
call
dec
sub
sti
in
pop
xor
mov
jno
mov
mov
iret
(bad)
(bad)
push
xor
and
add
mov
nop
xor
dec
sahf
(bad)
cmc
mov
adc
jns
xor
pop
aam
push
mov
inc
hlt
and
es
pop
add
push
icebp
pop
mov
xchg
test
sub
cmp
pusha
mov
shr
test
jmp
iret
rcr
or
push
mov
pop
fisub
imul
iret
lods
rcr
jno
jbe
outs
mov
shl
add
ja
jo
pushf
adc
mov
mov
test
push
mov
push
into
add
pop
add
pop
ret
jg
cmp
or
mov
pop
xor
add
fwait
sub
jmp
(bad)
movs
push
cmp
hlt
fidiv
out
push
ins
test
push
das
jg
nop
sbb
mov
stos
ins
jmp
fst
ds
out
movs
pop
cmp
add
test
in
push
shr
call
push
fistp
in
push
cmps
outs
and
(bad)
aas
clc
ret
pop
je
loop
push
cmp
loope
pusha
pop
aaa
fisub
shr
ret
addr16
aad
jg
jp
xchg
pop
xchg
sbb
sub
mov
add
out
and
pop
jno
(bad)
and
fwait
cmovg
pop
mov
adc
mov
sti
(bad)
bound
fisub
ds
mov
popf
jmp
ret
mov
mov
dec
add
pop
pop
mov
pslld
enterw
or
dec
mov
(bad)
lods
popa
test
jl
push
dec
add
inc
mov
pop
mov
mov
jae
adc
fnstenv
call
mov
loopne
bound
cmp
and
imul
cmps
test
mov
faddp
or
xchg
xchg
int
jbe
ins
sar
fs
mul
inc
fcom
mov
push
arpl
test
and
xor
pop
mov
cmp
jae
pop
mov
pop
xor
jl
dec
dec
(bad)
lock
or
xor
mov
mov
inc
repz
and
push
fiadd
mov
leave
int
pop
test
arpl
xchg
mov
xor
ins
push
xor
sub
adc
(bad)
js
repz
and
imul
push
aas
xchg
sbb
add
jg
outs
aaa
cmps
push
popa
pop
test
dec
repnz
test
(bad)
fistp
lods
pop
xor
outs
lds
int
jmp
dec
imul
dec
jg
pop
cmp
ja
and
or
push
sub
daa
sbb
lahf
enter
clc
push
push
xor
sub
pop
std
jmp
adc
inc
adc
sub
and
sbb
js
(bad)
(bad)
sar
cli
xor
dec
test
out
fsub
lods
sub
aam
das
mov
mov
dec
clc
js
cmp
pop
pusha
jb
pop
add
add
das
sub
mov
cmp
sti
mov
rcl
adc
arpl
fiadd
sub
scas
dec
fstp
retf
ror
xlat
and
movs
mov
add
je
adc
mov
ins
std
out
sbb
mov
mov
sar
jae
sbb
popf
xchg
jecxz
out
jo
div
(bad)
dec
push
imul
gs
test
dec
aaa
outs
stc
jbe
in
mov
inc
std
test
mov
lahf
xchg
fwait
mov
sbb
add
mov
fsub
jecxz
and
adc
cwde
mov
sbb
dec
xchg
mov
cmp
dec
dec
mov
sbb
cmp
add
aam
enter
or
xchg
scas
and
jne
jb
sahf
push
(bad)
sub
ins
rol
out
push
(bad)
sbb
out
cmp
popa
add
lods
imul
clc
retf
movs
inc
push
cwde
fst
scas
mov
push
mov
nop
xchg
imul
inc
add
cmp
or
repnz
push
and
dec
sbb
addr16
ficom
repnz
sbb
cli
mov
out
jb
pop
mov
mov
lea
dec
push
adc
lods
out
cmps
push
ins
out
pop
push
add
sub
push
and
ss
add
dec
jl
push
out
dec
repnz
dec
dec
add
push
(bad)
mov
adc
lahf
jle
cmp
jge
movs
mov
push
aam
jno
xchg
into
fild
pop
sub
clc
sub
xor
out
jns
dec
xchg
pop
sub
fwait
jo
and
test
dec
aas
js
push
data16
cli
imul
sbb
mov
sbb
aas
(bad)
leave
sar
sahf
ja
cmp
aas
mov
stos
retf
retf
jecxz
rol
cmps
mov
cmp
lahf
xchg
lock
imul
and
or
push
pop
dec
or
adc
loope
or
pusha
aas
sbb
push
stc
cmp
pop
vpandn
stos
arpl
cmps
pop
in
adc
mov
and
inc
xchg
push
jg
call
fstp
scas
lods
cmps
add
lds
adc
(bad)
es
mov
push
lods
mov
jg
nop
sbb
bound
cmp
jno
add
retf
mov
arpl
fdivrp
scas
data16
xor
in
repnz
mov
fimul
retf
sub
int3
stos
cmp
sbb
shr
das
fisubr
je
sub
je
xor
clc
and
test
inc
and
(bad)
std
jge
aad
pop
sub
pop
std
inc
dec
mov
cmp
xor
(bad)
or
int
fld
xchg
(bad)
jecxz
gs
jl
dec
mov
(bad)
aam
inc
fsub
adc
ret
dec
loope
dec
out
xchg
add
loop
loop
dec
mov
ret
inc
mov
sub
or
sub
adc
rol
(bad)
rcr
add
jge
jns
jne
into
addr16
daa
sub
xchg
push
sbb
add
fcomp
fisubr
mov
xor
bound
ja
xor
add
in
cmp
sub
(bad)
pop
cli
mov
or
lods
jecxz
call
test
pop
stos
inc
inc
lds
push
cwde
adc
jbe
mov
mov
cli
cmps
(bad)
adc
push
jns
hlt
out
xor
inc
xor
nop
cmp
or
lods
sub
or
outs
jno
aad
movs
mov
inc
gs
push
nop
pop
fcomp
jle
ds
enter
lahf
cmps
or
sbb
out
sti
pop
xchg
hlt
retf
stc
js
lock
sub
ficomp
or
(bad)
mov
jnp
push
outs
mov
xchg
je
push
cmp
test
or
(bad)
loop
push
aad
les
or
mov
loopne
mov
push
lods
add
retf
mov
into
jle
loope
mov
test
jg
mov
push
out
idiv
jae
pop
add
xchg
(bad)
(bad)
add
arpl
jge
ins
imul
push
jo
aam
sub
lods
push
jo
mov
or
ret
outs
mov
stc
jl
or
xor
aad
jo
ret
and
xchg
push
or
popa
cmp
xchg
pop
push
jo
jl
(bad)
daa
cld
xchg
jl
jae
jp
mov
mov
jge
inc
(bad)
or
sbb
loop
loopne
sbb
aaa
xor
sub
sbb
mov
ins
jns
xlat
(bad)
fild
aad
xchg
jp
mov
and
mov
pop
xchg
xor
jl
popa
inc
cmp
mov
jno
stos
inc
jne
movs
pop
leave
in
xor
stc
lea
(bad)
addr16
mov
hlt
ja
pop
and
jge
jno
or
fwait
fwait
aam
push
out
sub
scas
stc
mov
xor
sub
sbb
xor
push
xchg
cmps
sbb
sbb
cmp
xchg
jae
fidiv
test
push
mov
ror
xlat
inc
sbb
ins
push
cld
stc
dec
mov
test
push
(bad)
aaa
fsub
mov
dec
popa
sub
pop
xchg
mov
xchg
cld
cld
cld
ins
(bad)
jmp
lods
jae
or
push
shr
movs
ret
mov
popa
test
cmp
repnz
loope
je
sub
sbb
mov
es
jecxz
inc
push
lods
mov
dec
aam
ja
jmp
mov
jmp
xchg
or
mov
inc
bound
sub
int
and
(bad)
xor
mov
in
sbb
xchg
and
or
pop
and
jbe
push
add
or
fcmovnb
sub
sub
cmps
jp
and
jl
icebp
fdiv
inc
jb
scas
and
fistp
dec
xchg
enter
repz
(bad)
sbb
adc
or
dec
push
jns
sbb
push
adc
retf
mov
ret
add
lods
mov
xlat
sbb
lods
in
dec
lea
(bad)
repz
push
in
mov
dec
(bad)
sub
popf
lock
cmps
add
xor
xchg
xchg
mov
pop
movs
sar
jmp
inc
inc
xchg
sub
cmp
repz
lods
psubusw
movs
mov
sti
push
mov
xchg
sub
pop
jg
stc
hlt
xchg
(bad)
xor
mov
js
shl
or
or
gs
xor
dec
mov
adc
addr16
or
popf
inc
stos
(bad)
or
jo
(bad)
cmps
lea
mov
in
in
(bad)
mov
pop
mov
inc
pop
push
scas
mov
push
leave
pop
sbb
mov
and
xchg
test
dec
xchg
jae
mov
pop
pop
push
cmp
jp
inc
rcr
shl
mov
sub
xchg
ins
shl
dec
and
out
jl
xor
jg
ds
sub
sub
push
(bad)
and
and
mov
mov
stos
call
(bad)
mov
adc
sar
jne
cmp
sbb
push
(bad)
outs
push
mov
call
pextrw
mov
push
sub
lods
xor
pop
cmp
cwde
ret
push
mov
push
leave
int
sahf
mov
mov
mov
sub
es
cmps
popf
pop
sub
rol
daa
and
mov
ins
or
stc
add
lea
xor
mov
jge
xor
dec
sbb
mov
add
jp
pop
and
jmp
and
jg
fidiv
mov
mov
es
imul
pop
stos
das
sub
push
push
fcom
adc
jmp
aas
push
pop
gs
out
sub
sub
mov
lods
adc
cmp
mov
adc
cmps
std
fcom
call
(bad)
out
cmps
jmp
pop
or
mov
xchg
mov
and
mov
push
push
push
sub
xor
cmp
cmp
xchg
mov
push
add
lock
pop
out
inc
cmp
mov
pop
sbb
mov
sbb
mov
push
(bad)
mov
mov
(bad)
xlat
cmp
adc
sbb
shl
repnz
inc
jmp
in
cmc
inc
pusha
mov
xor
and
inc
or
js
int3
hlt
cmp
jae
push
out
ds
sub
out
or
add
out
or
dec
push
mov
call
jb
arpl
pop
jmp
xchg
pop
pop
adc
cmp
xor
add
pop
jmp
xchg
jno
in
push
jg
ror
icebp
inc
call
mov
stos
outs
and
fisubr
mov
cmp
popa
xchg
sbb
push
lds
mov
(bad)
adc
xlat
inc
push
lahf
xchg
mov
ins
call
jo
popf
or
mov
push
and
push
fnsave
cld
pop
mov
or
xchg
shr
(bad)
out
sti
push
and
out
jnp
xchg
jp
cmp
inc
aas
dec
ja
or
push
mov
repz
and
outs
pop
mov
sub
pop
mov
cwde
jo
mov
add
add
cmp
mov
mov
push
fld
add
push
cmp
adc
scas
fnstenv
repnz
dec
inc
imul
jns
sahf
xchg
popa
fwait
dec
dec
xor
add
arpl
pop
and
in
retf
idiv
mov
dec
neg
aaa
push
clc
fsubr
inc
clc
pop
sti
or
popf
mov
push
lds
and
dec
int
fidiv
jg
leave
xor
jno
jecxz
xchg
pusha
dec
mov
stos
sub
inc
sub
out
xchg
es
xchg
jns
fsub
int3
or
push
sbb
mov
mov
enter
ins
push
lahf
sbb
pop
or
xor
sahf
sbb
sbb
inc
inc
popf
cmps
dec
mov
or
mov
jne
cmp
bound
jns
xor
push
xchg
fstp
imul
fisttp
push
rcr
sbb
hlt
jb
dec
ret
rcr
mov
or
and
jge
shl
and
outs
cs
and
push
fdiv
addr16
xor
push
adc
test
imul
jg
sub
cmps
comiss
cli
mov
mov
add
or
mov
fnstcw
xlat
mov
mov
adc
pop
aaa
fwait
pushf
dec
repz
out
push
shl
sbb
(bad)
pop
shl
dec
push
adc
fwait
mov
ja
adc
(bad)
stc
add
nop
adc
cs
in
out
les
mov
popa
or
mov
jno
jae
mov
push
inc
sbb
loope
sti
push
add
test
and
and
rol
ja
jo
mov
fnsave
mov
rol
push
in
dec
movs
xchg
fs
outs
(bad)
(bad)
jle
clc
adc
dec
mov
sbb
pop
call
dec
retf
out
adc
jo
lds
or
aaa
sbb
fs
data16
loopne
jp
inc
inc
push
jg
inc
sub
or
sti
div
cld
mov
outs
shl
mov
leave
je
fidivr
mov
lods
clc
adc
mov
and
hlt
push
or
inc
outs
mov
out
(bad)
jo
stos
push
and
lahf
ret
loopne
lds
sub
adc
jmp
(bad)
xchg
push
or
jle
cli
imul
int
and
jecxz
cmp
icebp
(bad)
push
std
push
and
iret
inc
sbb
dec
test
outs
inc
sub
sub
clc
cwde
fst
ins
(bad)
mov
cs
push
stos
cmps
jle
int3
mov
jecxz
cmp
inc
push
(bad)
scas
gs
cmps
(bad)
shl
mov
cmp
sahf
push
les
sbb
movs
out
out
add
ja
mov
cmp
mov
or
popa
or
in
or
dec
cmp
daa
and
sub
out
push
xrelease
je
dec
cmp
ins
fisub
xor
out
dec
dec
pop
jbe
add
ror
dec
mov
fld
jns
outs
add
adc
xchg
jno
jb
jo
das
mov
retf
jl
push
jl
push
pushf
out
xchg
fst
ret
sub
(bad)
lods
jmp
jo
stos
xchg
pop
aas
mov
pop
(bad)
adc
push
dec
xchg
ins
rol
lahf
jp
leave
repz
cmp
sbb
out
nop
dec
sub
mov
xor
jge
sbb
jmp
xchg
add
ficom
imul
aas
aad
dec
cmps
call
dec
cmp
push
push
cmps
pop
iret
es
inc
movs
cmps
lods
cmp
cli
pop
inc
add
sbb
movs
cwde
adc
mov
jle
pop
xor
sub
fmulp
cmp
cwde
mov
sub
out
cmp
lods
fsub
icebp
mov
in
ins
add
mov
pop
xor
dec
cmp
call
and
mov
outs
ret
or
retf
mov
inc
and
lods
mov
adc
add
outs
out
lods
adc
mov
nop
scas
retf
dec
test
fnstsw
mov
fs
mov
ds
call
bound
jno
movs
or
sti
aad
ins
in
dec
fs
fsubr
jno
inc
lods
pop
outs
fsubr
(bad)
xor
jle
mov
bound
popa
mov
es
xchg
sub
test
(bad)
sbb
pop
arpl
(bad)
mov
jnp
jmp
adc
lahf
lahf
mov
into
dec
dec
dec
fdiv
jecxz
out
ret
inc
data16
inc
shl
sbb
cmc
mov
loope
cwde
mov
dec
jne
(bad)
in
mov
div
or
dec
enter
shl
in
mov
jge
xchg
ret
cs
scas
mov
inc
sub
aad
sti
add
jle
push
ret
cmp
adc
ret
fld
out
ja
cmps
or
inc
or
pop
fisubr
or
sbb
push
pop
imul
inc
sti
mov
xchg
jp
add
jl
xor
ja
cmp
in
fdivr
fdivr
sbb
add
test
ja
xlat
nop
jmp
retf
lods
lods
ss
mov
jp
(bad)
arpl
(bad)
imul
xchg
imul
in
add
jae
mov
mov
or
enter
rcr
icebp
add
dec
cmp
push
sbb
mov
cli
or
adc
push
sbb
xchg
mov
adc
dec
loope
push
push
cdq
jg
xor
pushf
xchg
jge
add
popf
cld
mov
repz
rcr
popf
jb
inc
out
or
rcr
or
xchg
pop
sbb
sahf
pop
add
mov
jge
adc
cvtps2pi
(bad)
imul
jmp
dec
ds
inc
and
popf
int3
enter
push
test
mov
loope
shr
sbb
stc
push
ss
xchg
mov
test
rcl
fisttp
js
push
popf
mov
push
out
push
stc
inc
or
jo
push
xchg
sbb
in
xlat
sub
push
dec
push
fdivr
jnp
xor
aas
cmp
add
lahf
out
xor
loopne
dec
jae
in
inc
fld
xchg
pop
mov
push
aam
jle
cmps
ss
add
mov
mov
(bad)
std
call
xlat
pop
fisttp
xchg
sbb
xchg
outs
js
mov
lahf
pop
int3
mov
rol
sbb
aaa
and
shl
in
lods
jmp
fsubrp
mov
(bad)
pop
add
cld
jo
push
pop
fidiv
in
add
xor
inc
cmp
jo
cli
sbb
es
mov
cmp
imul
mov
pop
lds
pop
mov
and
pop
dec
mov
and
adc
xchg
mov
mov
mov
jecxz
mov
mov
ds
xor
xor
cwde
test
pushf
aas
es
loopne
pop
jp
in
sub
and
or
xor
dec
pop
mov
popa
fs
aaa
loop
ja
pop
adc
mov
neg
sbb
xchg
arpl
sbb
sahf
enter
outs
xchg
mov
inc
dec
ret
mov
cmps
sbb
jle
stc
mov
cdq
xor
(bad)
cdq
pop
mov
pop
mov
sbb
vsubss
ret
sti
test
adc
int3
repz
sti
mov
mov
mov
mov
call
gs
xlat
jg
pop
shl
adc
call
sti
imul
nop
vpsrlq
xor
stos
cmc
scas
sahf
(bad)
adc
cdq
add
adc
mov
enter
das
into
xchg
mov
cmp
lods
dec
lds
popf
sub
xlat
das
jno
mov
(bad)
xor
inc
cmp
sti
adc
inc
fstp
push
cs
jnp
push
lahf
xor
or
(bad)
(bad)
sbb
xchg
js
jno
es
or
pop
mov
jae
pop
icebp
mov
clc
test
xchg
adc
fld
(bad)
gs
icebp
fisub
inc
mov
dec
sahf
shr
or
call
(bad)
mov
dec
dec
add
push
hlt
enter
fist
sbb
in
pop
cld
xchg
dec
inc
jle
lea
cdq
sti
arpl
sub
jp
lods
jg
push
cmp
int
jbe
or
ficomp
dec
push
adc
std
mov
dec
mov
ror
stos
xor
rcr
sbb
cmps
push
in
or
inc
push
mov
dec
mov
mov
lods
aam
inc
push
inc
push
cwde
xlat
xor
and
push
xor
dec
neg
xor
and
dec
xchg
mov
(bad)
iret
lahf
test
jmp
mov
ins
jns
adc
jmp
and
dec
(bad)
test
out
and
push
jne
iret
xchg
dec
scas
mov
cld
inc
sti
dec
out
js
inc
xor
out
stos
inc
mov
fistp
or
push
xor
mov
hlt
inc
adc
push
icebp
pop
inc
fldcw
les
mov
jno
mov
test
adc
jmp
sub
mov
push
loope
mov
out
and
and
aam
ret
in
add
push
repz
es
lock
adc
enter
and
scas
xor
cmp
and
enter
pop
nop
cmp
cmp
out
(bad)
sbb
in
mov
sti
aas
(bad)
pop
mov
mov
or
les
not
js
adc
or
mov
mov
dec
je
xlat
pusha
mov
mov
push
lods
data16
xchg
sbb
mov
daa
inc
mov
ret
inc
sbb
inc
push
xor
jp
rcl
test
adc
sub
ja
push
mov
addr16
(bad)
sub
xchg
mov
cmp
and
rol
scas
in
(bad)
daa
call
jg
lock
xor
popf
mov
mul
test
enter
imul
jg
adc
aas
xor
push
inc
add
mov
adc
mov
inc
mov
add
rcr
cmp
mov
mov
or
push
mov
fimul
inc
or
outs
sub
xor
and
dec
add
xor
add
jne
cmp
xor
sub
inc
sub
aaa
retf
(bad)
iret
mov
or
or
add
sbb
xchg
mov
xchg
rcr
int3
jmp
fcomp
push
scas
scas
mov
mov
mov
movs
dec
cmp
xchg
out
fbstp
cmps
dec
or
popa
jns
bound
dec
fdivr
pop
int3
fsub
dec
mov
xchg
xor
aad
test
call
dec
lock
imul
xchg
imul
test
xchg
cdq
adc
imul
inc
push
or
pop
out
es
dec
ret
dec
cmps
(bad)
cmc
stc
mov
and
mov
lock
sti
jns
jmp
rep
vphaddbq
sub
popa
or
dec
xchg
inc
xor
mov
lds
and
cmp
leave
outs
and
xor
mov
xchg
xor
lods
push
xchg
shl
mov
scas
inc
out
aaa
jns
sub
dec
jmp
sbb
inc
aad
xchg
push
jmp
adc
(bad)
outs
sbb
or
fwait
mov
xor
push
sub
push
out
jbe
gs
fs
and
leave
shl
(bad)
mov
sbb
pusha
push
mov
xchg
sub
cli
pop
sub
fwait
or
in
add
imul
call
sub
rep
ficomp
les
aaa
dec
jmp
jp
(bad)
aad
push
mul
or
pop
loope
pop
adc
scas
xchg
sub
mul
fcomp
xor
and
shr
pop
xor
ret
les
ror
lods
sar
ja
arpl
jb
mov
add
aad
arpl
stc
enter
fsub
jl
daa
push
test
push
ret
push
enter
inc
sub
mov
jb
(bad)
mov
je
and
sbb
fld
mov
dec
sahf
fstp
xchg
mov
xor
cmp
xor
inc
addr16
cmp
test
mov
jl
dec
push
jp
fdivr
pop
and
fidiv
push
stos
pop
or
push
cwde
imul
mov
lods
adc
scas
je
jp
js
dec
repz
stos
pop
xor
adc
cli
add
popf
ret
fdiv
add
mov
test
loopne
(bad)
sbb
repnz
pop
fdivr
mov
test
lahf
or
cwde
cwde
mov
add
add
jmp
pop
js
jb
and
or
cwde
lock
cmp
mov
mov
iret
inc
sub
inc
(bad)
adc
(bad)
iret
ins
pop
clc
push
push
in
fild
jae
and
inc
movs
push
dec
mov
das
rcl
and
mov
test
data16
xchg
mov
pop
mov
pop
lds
mov
out
retf
int3
push
mov
push
mov
jno
pop
push
jns
dec
fcom
mov
lahf
xchg
sti
loope
stos
cmp
add
dec
add
addr16
stc
sub
mov
shr
mov
adc
ror
push
xlat
or
cli
int3
pop
popf
aam
sub
inc
mov
cwde
mov
test
shl
test
aaa
shl
mov
cmc
cmp
mov
push
fadd
mov
cmps
pop
pushf
out
outs
jge
xchg
cmp
dec
or
mov
mov
int3
shl
movs
cs
(bad)
call
adc
dec
out
lods
xor
mov
ret
call
cmp
cmp
xor
push
mov
lods
dec
adc
mov
mov
inc
pushf
aad
test
dec
pop
fucomp
mov
jbe
ror
lods
(bad)
idiv
fstp
pop
push
inc
lock
addr16
push
out
mov
mov
push
rcr
inc
int
sub
xchg
or
call
push
jmp
sbb
push
pop
mov
push
sub
dec
jge
(bad)
cmp
fdiv
jle
add
pop
sahf
or
shl
lahf
pop
adc
push
inc
repz
outs
add
mov
vpcomtrueq
push
cld
cmps
movs
xor
push
xchg
add
sub
mov
push
(bad)
out
xlat
inc
inc
jl
dec
iret
xor
jne
movs
cs
int3
dec
dec
sub
mov
push
add
inc
loopne
rol
dec
iret
sbb
adc
push
rol
cmp
or
pop
push
xchg
sbb
aas
push
fisttp
test
push
adc
aas
adc
test
jbe
add
repnz
lods
pop
inc
es
icebp
inc
jmp
jmp
(bad)
mov
jge
jge
(bad)
lock
lahf
bound
neg
lods
jle
sar
pop
add
lods
xchg
enter
ret
shr
jnp
in
int3
push
arpl
aad
push
ins
cmps
adc
sub
pop
inc
nop
push
sub
inc
test
mov
fmul
lahf
xchg
xor
and
lods
push
addr16
(bad)
and
clc
lea
jecxz
mov
jns
push
out
stos
add
ds
fst
mov
push
add
retf
sub
jne
fcomp
cs
push
sub
pop
sbb
inc
jle
jns
sbb
and
aaa
movs
cmps
loop
ins
and
cmp
xor
aas
fwait
(bad)
push
sti
stos
mov
dec
enter
add
loope
(bad)
mov
or
xor
cmp
mov
xchg
inc
shl
dec
aaa
adc
jo
stc
ja
in
das
mul
movs
test
sbb
lock
xchg
es
mov
lea
or
rol
mov
sbb
sub
imul
addr16
rcr
dec
inc
push
pushf
dec
loopne
mov
xchg
sbb
(bad)
mov
pop
xor
imul
sti
popa
dec
mov
push
in
add
and
and
mov
repnz
out
sbb
stos
in
js
inc
in
popf
pop
movs
int
jbe
bnd
dec
aad
mul
mov
retf
push
clc
test
pushf
cwde
or
fldcw
push
mov
sub
adc
jb
dec
cmp
adc
popf
mov
push
loop
push
sub
xchg
add
mov
jno
push
mov
sbb
pop
lds
xchg
jp
test
push
jae
mov
mov
sbb
aas
cdq
ret
adc
push
cmp
xor
mov
pop
jae
add
push
dec
pop
pop
adc
test
cmp
inc
inc
cli
in
mov
dec
push
push
cmps
cmc
mov
imul
popa
dec
xchg
data16
mov
rcl
mov
pop
movs
call
(bad)
add
mov
jnp
das
jecxz
fist
icebp
xor
lock
push
mov
lock
xor
cdq
fwait
popa
ret
xchg
sub
sbb
leave
xchg
jns
mov
ja
in
and
ret
stc
in
pop
mov
xor
retf
lahf
jno
sbb
sbb
xchg
(bad)
adc
test
loope
add
das
iret
dec
mov
xchg
and
adc
je
jo
ret
paddd
cli
popa
call
xor
test
pop
scas
cmp
sbb
add
jl
imul
pop
comiss
pop
sti
aad
je
jmp
push
or
and
push
ror
pushf
rol
add
jno
int
sub
jns
pop
mov
push
push
imul
out
mov
sbb
cmp
ja
and
cmps
loop
xchg
(bad)
push
les
sbb
adc
lods
bound
pushf
lahf
add
adc
gs
pop
mov
inc
mov
imul
jle
add
dec
dec
lahf
jp
mov
mov
rol
mov
aad
push
mov
mov
push
sub
pop
call
sbb
sub
dec
faddp
and
sbb
int3
test
aam
push
or
loope
test
out
xchg
xlat
push
jmp
scas
fsub
ss
add
fidiv
dec
cmp
push
and
pop
les
mov
jl
cli
fisub
call
cmp
shr
sub
mov
xchg
mov
lahf
dec
pop
sti
aad
xor
or
mov
or
hlt
imul
inc
ss
mov
xchg
dec
adc
pop
jle
push
iret
pop
mov
xor
jmp
cmp
ins
add
sbb
stc
loop
cmps
mov
sub
stos
int
or
call
dec
push
adc
push
jge
add
dec
xchg
shl
js
mov
lock
pop
movs
push
cmp
or
movlps
pop
xor
inc
in
sub
les
es
cmp
xor
test
test
mov
mov
rol
sbb
xor
xor
lods
out
and
popa
jp
lea
pop
and
jb
mov
imul
(bad)
ins
xor
mov
mov
shl
jo
jle
mul
or
pusha
shr
and
push
arpl
sbb
xlat
nop
jns
ss
repz
push
xchg
sbb
clc
cdq
push
into
pop
neg
icebp
cmp
mov
clc
jo
xchg
mov
test
mov
inc
ja
mov
movs
test
adc
dec
jo
loopne
xchg
pop
stos
leave
pop
push
jle
xor
inc
sub
jg
push
xchg
mov
test
aad
(bad)
fisubr
mov
mov
add
xchg
in
fisub
mov
and
xchg
pop
jg
(bad)
clc
xlat
aad
mov
and
inc
sbb
add
jecxz
jb
dec
test
jbe
pop
lods
ret
jmp
inc
sub
je
movs
in
das
fwait
lods
mov
jg
add
loopne
test
mov
lods
or
jb
je
jl
(bad)
fwait
test
sbb
movs
inc
xchg
mov
cwde
icebp
sahf
in
push
addr16
ret
sti
xchg
pop
jmp
cmp
adc
pop
adc
mov
dec
enter
sbb
cmp
ficom
iret
and
int3
mov
adc
cmps
sti
in
iret
test
gs
test
nop
jl
pop
imul
popf
jg
test
ret
and
ins
ficomp
cli
inc
leave
adc
ss
xchg
iret
xchg
mov
push
neg
jle
mov
imul
mov
cmp
imul
push
push
mov
or
push
movs
in
inc
adc
sbb
and
popa
arpl
mov
cmps
mov
xchg
adc
xchg
bound
xor
(bad)
rcr
add
imul
sbb
cmp
pop
scas
jo
inc
jmp
mov
and
and
lds
call
cwde
jnp
cmp
out
jno
nop
xchg
mov
pop
dec
xchg
jnp
test
inc
xchg
jmp
push
cwde
fsin
cmp
inc
ret
pop
jmp
xor
shl
out
adc
gs
sbb
jp
test
into
xchg
enter
idiv
test
mov
cli
or
xor
jb
(bad)
or
repz
scas
ins
out
push
add
add
std
push
out
cmp
mov
push
icebp
pop
aad
icebp
sbb
popa
outs
jmp
addr16
jmp
add
mov
push
add
je
inc
push
dec
aad
or
stos
call
xchg
inc
mov
in
jbe
das
lahf
pop
repnz
mov
jno
ror
sbb
mov
push
push
xlat
int
lock
or
xor
mov
sar
inc
cmps
jno
in
jne
adc
lahf
sub
out
xor
aaa
loopne
pop
cld
lea
mov
adc
push
in
ins
lods
and
jns
lds
xchg
xor
xor
lods
jae
xchg
mov
xchg
xor
xlat
lds
enter
jno
(bad)
mov
mov
lods
loopne
mov
pusha
daa
aam
mov
out
mov
pop
bound
ss
lods
shl
lahf
xor
add
jle
jnp
push
push
pop
int3
mov
add
mov
inc
popf
mov
(bad)
jne
and
push
mov
mov
mov
ins
xchg
and
ins
lock
mov
xchg
ror
or
in
add
adc
mov
or
stos
hlt
(bad)
pop
std
inc
pop
call
lock
mov
ret
sbb
rcr
cmps
push
pushf
aaa
test
fwait
pop
sub
arpl
pop
and
adc
mov
repnz
out
or
inc
pop
popa
mov
loop
cmps
xchg
and
call
cmp
dec
imul
push
(bad)
inc
sbb
lock
call
mov
mov
push
(bad)
test
addr16
mov
xchg
pop
ins
fdivr
or
jmpw
rol
add
jae
(bad)
jns
push
jne
pop
retf
add
jp
lock
ins
jp
lods
cmp
sar
dec
stc
and
mov
pop
push
sbb
adc
pusha
dec
xor
mov
push
repz
pop
xchg
cmp
mov
out
movs
out
dec
xor
jbe
mov
fdivr
inc
mov
aaa
push
neg
jbe
and
xchg
dec
cwde
mov
dec
dec
jge
cli
pop
or
mov
test
cmp
mov
movs
lock
inc
sub
movs
jb
sbb
mov
cmp
mov
xchg
repz
jmp
xchg
xchg
push
out
stos
push
xbegin
aaa
mov
loopne
xor
adc
pop
cli
test
pop
das
sar
les
(bad)
js
mov
sub
scas
loope
movs
jl
jae
add
or
push
mov
dec
sub
(bad)
hlt
mov
mov
js
stos
mov
fistp
out
cs
jmp
xlat
ins
cmp
jae
sub
mov
test
inc
or
and
xor
adc
mov
add
adc
movs
jmp
cmp
dec
sbb
hlt
pushf
ret
and
jno
pop
cmp
loope
out
mov
inc
loope
add
xor
push
cwde
and
cmp
or
(bad)
push
or
jg
jbe
fidiv
enter
sub
pop
jne
dec
in
xor
ror
lock
ret
jb
xor
int3
push
dec
shl
jg
scas
into
push
ins
fdivr
cmp
sub
test
aaa
mov
xor
fstp
pop
ror
mov
add
sub
dec
or
je
fmul
popa
adc
int3
mov
out
shr
loopne
popa
sbb
lea
push
or
mov
jne
or
jge
scas
iret
mov
loope
dec
std
shl
out
mov
std
xchg
jmp
(bad)
lds
mov
pop
test
jg
inc
inc
scas
xchg
stos
retf
out
daa
mov
(bad)
sub
jnp
lds
xor
mov
pop
jae
add
sbb
dec
push
push
inc
fild
adc
cmp
cmp
xchg
je
pop
pop
mov
loopne
scas
ins
dec
stc
rcr
jno
jbe
cs
xor
or
stc
cmp
sbb
adc
aam
pop
jg
lahf
push
pop
movs
jmp
inc
mov
lds
mov
fisubr
xchg
clc
retf
repz
sub
mov
(bad)
gs
add
pop
fdiv
call
addr16
push
jmp
mov
mov
je
push
mov
cmc
xor
into
outs
sbb
fwait
repnz
stos
mov
jg
out
xor
mov
mov
aad
test
popf
sbb
xchg
xchg
repnz
xchg
fisttp
and
push
dec
sub
fbstp
mov
scas
(bad)
loopne
sub
push
add
in
sbb
cmps
lock
inc
dec
call
jmp
adc
nop
jp
mov
call
xor
sub
test
dec
mul
jg
hlt
adc
cmp
(bad)
sub
adc
xchg
gs
mov
stos
and
adc
aam
repnz
(bad)
out
cdq
lahf
mov
clc
call
(bad)
sub
and
mov
(bad)
push
xor
in
sub
aas
imul
pop
or
outs
and
pop
mov
jg
imul
popa
std
movs
nop
iret
comiss
ja
inc
ret
adc
sub
pusha
push
mov
mov
xchg
pop
mov
seto
cmp
in
leave
aad
ja
sub
pop
push
jmp
mov
jg
pop
pop
xchg
pop
sub
cs
jne
dec
cmp
mov
mov
inc
xchg
data16
popa
les
mov
ret
sar
loopne
push
dec
pop
jg
dec
xor
pop
jne
jecxz
jne
jnp
inc
int3
loopne
shl
sub
pop
js
popf
and
popa
jno
cmp
cwde
cmp
inc
jb
push
xor
scas
ret
dec
dec
repnz
inc
ins
xor
scas
ins
mov
nop
mov
aas
push
inc
daa
nop
add
cwde
hlt
inc
cmovbe
stc
xor
sub
pop
cdq
gs
pop
sahf
sbb
pand
and
fisubr
outs
or
xchg
test
ret
test
daa
push
pop
out
and
mov
call
std
out
leave
neg
mov
lea
pushf
int3
std
mov
push
mov
push
movs
xchg
jg
(bad)
xchg
dec
dec
daa
out
xlat
retf
dec
jg
mov
sub
jmp
pop
mov
stos
cmp
mov
xor
adc
add
in
dec
add
adc
xchg
mov
push
addr16
push
test
cmc
(bad)
ficom
inc
sub
inc
ror
jle
loop
push
mov
jge
jnp
mov
aas
dec
jmp
es
fld
bound
and
sbb
jmp
repz
sub
push
aam
xchg
test
into
pop
out
test
jno
out
(bad)
cmps
cmp
sar
fild
idiv
ja
xor
ret
pop
call
daa
cmps
push
mov
and
fistp
icebp
push
scas
(bad)
loopne
test
cld
xchg
or
repnz
push
jmp
or
outs
mov
or
outs
ins
cwde
pop
pop
mov
xchg
idiv
pop
jl
lods
je
jnp
aam
cdq
ror
ficomp
outs
leave
and
xor
cmp
ins
dec
mov
or
test
(bad)
aaa
or
jge
icebp
neg
xlat
xchg
jbe
(bad)
mov
ins
and
sbb
loope
repz
mov
pop
daa
add
mov
retf
cmc
mov
js
stos
(bad)
movs
les
inc
test
mov
jb
call
std
and
cdq
push
push
sub
mov
sub
or
sub
adc
call
leave
jg
and
popf
dec
cmp
and
and
jl
mov
(bad)
xchg
lock
(bad)
jecxz
cmp
sub
jecxz
or
pusha
cmp
push
call
test
dec
push
ffreep
and
xchg
cdq
mul
pop
or
cmp
cmp
scas
retf
cmps
xchg
shl
cwde
add
jo
mov
les
dec
scas
xchg
xchg
lock
pop
jmp
repnz
and
jae
popa
(bad)
movs
fild
mov
and
mov
sub
inc
sbb
(bad)
stos
xchg
mov
(bad)
aad
mov
les
test
repnz
inc
jp
xlat
movs
jmp
test
sbb
icebp
movs
push
not
pop
pop
popa
div
push
mov
icebp
xlat
out
push
adc
jmp
sub
xchg
or
push
retf
hlt
xor
test
int
mov
sbb
clc
ins
lahf
jge
add
in
push
std
ins
pop
retf
int3
jecxz
or
daa
jecxz
fwait
push
cmp
retf
push
pop
int3
retf
xor
ja
mov
xor
mov
push
test
jb
xlat
pop
mov
pop
adc
ret
jb
repz
sub
test
mov
repnz
jmp
cdq
fadd
sbb
pusha
stos
jl
sbb
mov
in
icebp
loop
leave
push
pop
out
movs
cmc
sbb
mov
mov
lods
mov
jmp
jmp
int3
xor
push
out
jecxz
repz
sbb
jmp
ror
test
bound
nop
cmc
addr16
xlat
adc
inc
pop
xchg
sbb
mov
or
or
loope
or
mov
xchg
xchg
and
into
imul
aam
outs
jo
cmc
xchg
xor
or
adc
and
cmp
ja
sbb
dec
adc
inc
repnz
data16
adc
pop
dec
sbb
cmc
fstp
dec
(bad)
pop
inc
inc
aam
lds
add
pop
outs
not
shr
sbb
jg
scas
(bad)
adc
adc
test
test
js
sbb
inc
data16
mov
sar
xchg
sbb
lock
mov
aam
mov
je
xor
fiadd
jae
pop
cmp
mov
jmp
add
mov
inc
rcl
fld
cmp
mov
pxor
sub
mov
jge
fwait
cwde
dec
push
and
pop
lahf
xor
arpl
(bad)
ins
mov
sub
mov
mov
(bad)
sti
ins
add
cmp
daa
ret
retf
sbb
mov
gs
call
call
lods
(bad)
stc
dec
mov
cmp
mov
push
(bad)
test
sub
sbb
je
aad
inc
jp
in
test
pop
cmc
pop
adc
pop
sub
and
sub
lods
ret
add
jno
xor
mov
xor
cmp
xchg
xchg
lods
adc
movs
out
jp
shl
or
jg
sub
push
icebp
mov
sbb
or
sub
cmp
test
push
rol
nop
xchg
bound
(bad)
dec
adc
mov
imul
int3
cwde
push
lods
nop
mov
mov
inc
(bad)
dec
adc
add
or
jne
pop
movs
jge
push
adc
daa
pop
and
sbb
retf
not
pop
xor
retf
clc
imul
stc
fs
sub
sahf
jns
xor
xchg
ror
pop
(bad)
sbb
sbb
mov
ret
or
js
js
jle
dec
nop
scas
inc
add
cld
in
out
xchg
aaa
xchg
jge
sar
clc
inc
push
jne
inc
dec
ins
std
ins
shrd
int
mov
xor
jl
push
pop
inc
push
test
int
leave
xchg
sub
mov
ror
jp
mov
xor
pop
cmp
mov
jmp
mov
cmp
ins
enter
sti
sub
sbb
push
aad
xchg
(bad)
mov
repz
ror
shl
into
nop
sbb
in
mov
(bad)
jne
mov
iret
test
mov
dec
stc
sub
or
adc
jl
fnsave
cmps
add
push
or
stc
sbb
xor
gs
test
adc
xor
cmps
sbb
sar
retf
push
inc
jmp
movs
sub
loopne
adc
(bad)
pop
cdq
pop
push
std
ror
jg
int3
mov
dec
aad
mov
mov
fdivr
sar
std
(bad)
jns
rcr
ret
in
mov
icebp
pushw
(bad)
rcr
gs
sbb
aad
pop
inc
hlt
mov
mov
inc
add
sbb
mov
adc
jmp
or
xchg
mov
push
pop
xor
inc
cmp
xchg
jmp
shl
sbb
out
imul
es
aas
call
or
or
popf
jmp
xchg
in
nop
add
mov
cli
out
ret
lods
outs
pop
ror
xor
jo
fnstenv
sub
das
retf
addr16
sbb
xor
xor
(bad)
jg
push
jae
xchg
or
pop
retf
mov
inc
mov
cwde
int
push
add
pop
push
sbb
cmps
mov
xchg
dec
jp
mov
in
inc
int3
mov
push
mov
inc
pop
cmp
and
test
(bad)
mov
cwde
loopne
dec
cmp
loop
pop
xor
jo
push
fist
sahf
xchg
mov
es
rcl
jnp
ds
jb
xor
sbb
rcl
fcomp
cmps
loope
es
nop
mov
in
shl
and
(bad)
jbe
enter
pop
and
push
movs
pop
daa
mov
adc
adc
push
or
iret
xor
cld
mov
mov
dec
sbb
or
sbb
jle
imul
frstor
fadd
dec
enter
ror
gs
inc
aad
xchg
fisub
ins
lods
push
pushf
and
push
mov
jmp
and
aam
aas
dec
add
sbb
mov
popa
sbb
add
pusha
test
outs
loopne
pop
inc
mov
sbb
shl
enter
popf
cdq
ror
nop
inc
sub
inc
mov
mov
mov
jb
push
arpl
popa
pop
jl
inc
repz
test
mov
mov
mov
ins
les
mov
mov
or
push
aad
push
int
shl
mov
jb
adc
jb
cld
(bad)
stos
jbe
mov
jl
(bad)
pop
cmps
push
pushf
in
fcom
mov
pusha
xor
adc
or
loope
daa
lods
add
add
arpl
fcomp
retf
lods
pop
cmp
jle
cdq
dec
enter
nop
cmp
in
push
cmc
adc
leave
inc
cmp
mov
fiadd
add
aam
test
test
(bad)
push
iret
pop
(bad)
pop
int
aaa
(bad)
cdq
sbb
ret
leave
aam
add
and
lock
jae
mov
sbb
nop
imul
shr
lods
and
jno
mov
(bad)
sbb
outs
dec
adc
inc
adc
push
in
ja
ficom
je
mov
mov
and
enter
or
cmp
ins
pop
jbe
into
outs
mov
ret
data16
jmp
xor
nop
add
push
fadd
cwde
(bad)
sbb
cs
pop
lahf
addr16
cmp
jns
mov
popa
or
push
pop
fistp
adc
mov
sbb
mov
fisub
frstor
sbb
and
aaa
mov
and
mov
cdq
xchg
and
retf
stos
dec
push
add
jno
ret
in
rcr
mov
dec
shl
sbb
mov
bound
fcom
xor
pop
push
push
jmp
int3
jge
xchg
inc
out
push
fisub
jmp
shr
push
dec
add
push
sbb
mov
test
sti
adc
ss
sub
aaa
or
rol
xchg
mov
push
pop
and
mov
inc
xor
(bad)
push
(bad)
scas
xor
lock
(bad)
out
xchg
fdiv
movups
mov
scas
hlt
add
inc
psubq
cmc
adc
ja
imul
dec
pop
inc
push
shl
sbb
pop
add
cmps
lods
push
mov
addr16
push
popa
pop
cwde
int
lock
jl
mov
pop
movs
sub
mov
ds
pop
adc
push
dec
pop
adc
aas
adc
and
xchg
dec
or
or
push
addr16
mov
les
mov
fmul
cld
push
sub
clc
aam
fisub
cmp
adc
ss
mov
mov
jno
push
in
ins
jmp
xchg
push
sbb
jle
push
sbb
or
(bad)
in
and
xchg
sub
mov
mov
lock
push
in
ret
ret
mov
fs
out
js
mov
fisttp
xlat
sbb
stos
into
push
dec
popa
mov
rcl
in
ror
jo
inc
ret
daa
leave
call
repz
aad
lahf
push
ds
fimul
dec
(bad)
mov
pop
rol
sbb
and
mov
sahf
xchg
scas
and
mul
iret
cmps
add
bound
jno
iret
ret
rcl
and
adc
(bad)
pop
push
test
push
xor
dec
in
or
pop
test
cmc
xchg
loop
pop
mov
inc
add
cmp
frstor
push
scas
push
jnp
mov
add
pop
push
fnstenv
jmp
repnz
cmp
outs
mov
or
fst
(bad)
call
jmp
inc
cmp
xchg
inc
inc
ins
dec
mov
jne
test
mov
call
sub
dec
xor
push
dec
add
les
ret
cmp
push
fdivr
loopne
std
sbb
jl
cmp
jbe
xor
dec
aaa
sub
mov
sbb
jb
adc
xchg
scas
fucomp
cmps
jge
lods
dec
xchg
clc
popa
out
fidiv
mov
sub
sbb
imul
xor
imul
scas
xchg
pop
or
xor
jns
pop
jbe
or
cmps
lods
add
mov
jg
popf
jg
int
retf
bound
push
cmps
xor
mov
ret
fst
mov
imul
aas
jge
adc
jecxz
dec
add
adc
adc
pop
(bad)
cli
daa
or
and
jbe
jnp
pop
inc
cmp
imul
jecxz
test
jp
scas
pop
xchg
push
cld
pop
jle
jecxz
inc
ror
mov
xlat
popa
call
data16
xchg
mov
or
xor
nop
call
in
loope
mov
mov
test
jns
es
mov
xchg
sbb
out
in
xchg
mov
xor
retf
shl
imul
call
inc
arpl
xor
lods
call
pop
test
xchg
xchg
(bad)
xchg
add
add
(bad)
fimul
retf
loop
fst
ds
sbb
loopne
or
pop
mov
sbb
sub
pop
enter
pop
sbb
and
pop
fwait
sbb
leave
(bad)
arpl
jmp
jle
(bad)
mov
xchg
lea
pop
sbb
test
pop
je
or
xchg
xor
cli
inc
in
and
loope
push
push
xor
(bad)
outs
arpl
call
mov
jl
cdq
arpl
or
jg
hlt
aas
js
pusha
dec
mov
mov
pop
sbb
pushf
adc
jle
jmp
xchg
fdivr
pusha
xchg
ds
fwait
loop
add
(bad)
and
mov
icebp
mov
dec
cmp
call
xor
push
mov
dec
adc
pushf
and
push
cmp
mov
fcomi
pop
push
je
jmp
pop
aaa
pop
and
and
mov
inc
sub
jb
inc
inc
mov
clc
mov
push
jmp
and
xchg
das
aas
sub
pop
mov
lds
mov
jp
loopne
and
cmp
xchg
add
icebp
mov
(bad)
fwait
push
rcl
jl
xor
lea
adc
clc
mov
retf
pop
ret
fimul
jp
push
imul
cmps
aaa
jle
fnsave
push
(bad)
pop
repnz
dec
(bad)
mov
pop
icebp
and
aas
pop
call
pop
dec
and
mov
mov
test
mov
add
mov
cmp
fwait
xchg
inc
shl
aad
adc
jl
pop
stc
test
jne
push
ror
(bad)
aas
add
outs
jae
dec
stos
cmp
xor
mov
mov
outs
mov
jp
add
cmp
and
push
push
xor
xchg
push
fmul
cmp
mov
sub
push
aas
lods
lds
inc
mov
gs
cmp
imul
adc
shr
leave
rcr
daa
std
nop
mov
lahf
popf
push
fcomp
jecxz
es
push
stos
jo
xchg
or
popf
out
in
(bad)
mov
(bad)
jmp
pop
xor
jns
and
dec
mov
adc
rol
sub
pop
jne
sub
sahf
nop
int
aam
push
mul
mov
in
mov
pop
xchg
xchg
push
jb
clc
hlt
push
inc
pop
and
adc
in
fdiv
cmp
pop
jg
mov
stc
xchg
jle
sbb
test
cmps
mov
leave
rcr
(bad)
and
inc
jns
dec
sub
jnp
int
ret
cmp
and
fcomp
sub
aad
add
push
mov
mov
jge
pop
dec
push
dec
add
pop
jnp
push
gs
sbb
ficom
adc
and
adc
imul
adc
in
push
xor
pop
mov
(bad)
pop
cmp
sub
outs
fnstsw
pusha
cs
mov
adc
aaa
in
loop
and
int3
mov
xor
jne
mov
mov
sub
pushf
xor
scas
xchg
xchg
sub
je
push
loopne
not
inc
sbb
pushf
xor
jmp
test
jnp
lds
mov
push
dec
scas
push
fwait
test
stos
clc
das
ins
mov
jmp
xchg
mov
lods
inc
xchg
jb
fadd
les
ror
cmp
stos
adc
pop
hlt
dec
into
push
mov
popa
mov
jb
sub
shr
fcmovu
ins
dec
loop
dec
pop
lock
dec
arpl
(bad)
jl
cs
dec
ret
sbb
ja
aad
sub
jno
stos
add
retf
cmp
or
in
adc
ror
sub
and
sub
adc
ret
cs
mov
loope
xor
pop
cld
dec
adc
adc
mov
ret
jbe
dec
inc
pop
or
out
int
and
test
sahf
mov
jmp
(bad)
popf
add
es
xchg
mov
push
les
xlat
lods
inc
test
mov
add
sbb
mov
leave
retf
mov
lock
push
adc
mov
fmul
shl
outs
jge
jae
ds
ss
or
mov
imul
and
sbb
mov
cmps
fs
mov
or
loop
inc
out
fadd
mov
sysexit
out
ins
jbe
int3
cmp
stc
jge
sbb
dec
jl
inc
dec
xchg
xor
mov
adc
jns
mov
jle
outs
inc
outs
(bad)
loopne
xor
or
aam
pop
mov
add
rol
xor
out
dec
jmp
mul
jb
inc
hlt
push
inc
arpl
mov
xchg
(bad)
jmp
test
movs
imul
pop
and
faddp
daa
retf
stos
jge
and
cwde
xlat
out
rcr
sahf
aam
dec
mov
out
jbe
inc
xchg
mov
shr
les
and
std
(bad)
mov
or
sub
and
jl
mov
xor
push
dec
add
cmps
(bad)
cld
or
and
and
popa
add
mov
jne
xchg
sti
push
push
pusha
les
div
xor
mov
mov
outs
gs
jbe
retf
jo
ror
cmp
sbb
sub
loope
je
cmp
mov
adc
(bad)
inc
mov
add
nop
add
or
dec
bound
jno
and
add
psubusw
push
les
cwde
ss
stos
shr
retf
in
fstp
test
mov
cmp
sub
push
lds
mov
sbb
mov
fst
ror
jb
enter
mov
pop
mov
sbb
out
loope
cmps
test
jns
mov
ins
cmps
lahf
test
(bad)
loope
or
jg
cmp
ins
jae
iret
mov
lods
mov
sub
(bad)
loope
imul
stc
pop
pop
outs
pushf
(bad)
mov
push
into
push
aad
fidivr
mov
in
mov
test
dec
int
mov
shl
out
push
sbb
xor
outs
js
sub
jb
retf
inc
push
call
push
push
and
xchg
pop
test
jl
aas
xor
fs
out
test
imul
in
jmp
push
mov
arpl
mov
or
pop
dec
fisubr
test
push
mov
mov
jae
push
mov
jns
out
cmp
stos
ret
jl
sub
(bad)
cmp
aas
stos
pop
int3
push
ds
sar
xchg
bound
addr16
push
adc
adc
lahf
xchg
pop
cld
mov
(bad)
retf
jnp
jp
shl
mov
fcmovnb
mov
call
xchg
push
jnp
mov
mul
repz
repz
dec
fwait
sub
pushf
out
jmp
test
mov
cli
cmp
inc
lock
jne
nop
dec
int3
jmp
(bad)
out
push
sub
cmps
jno
and
clc
or
stc
sub
xchg
mov
and
or
stos
scas
(bad)
xchg
lds
fcom
push
test
stos
repz
inc
mov
sub
and
jmp
jmp
xor
dec
loope
push
mov
lods
cmps
cmps
cmp
mov
pushf
xor
rcr
jp
xchg
mov
xor
adc
or
out
sub
loop
inc
div
rcl
int
add
movs
sbb
fist
xor
ret
jmp
add
jge
fwait
hlt
mov
sbb
arpl
test
jmp
out
stos
mov
inc
jbe
out
xchg
shr
into
mov
mov
jge
and
pusha
popa
jl
popa
jo
dec
jne
loop
enter
enter
lea
sub
test
inc
mov
sub
aaa
jae
mov
je
push
das
arpl
mov
jge
adc
jo
or
shr
sbb
sub
retf
xchg
sbb
xor
loop
stc
cdq
xchg
mov
cdq
(bad)
pop
jne
daa
cmps
lods
sub
dec
push
int
jecxz
pop
gs
push
mov
icebp
test
jmp
add
dec
test
jnp
dec
std
dec
jmp
jecxz
adc
(bad)
call
cmp
cmp
in
dec
fstp
jb
xor
adc
jne
adc
stc
add
cmp
add
lds
rcl
and
lock
lods
fwait
imul
enter
or
and
popa
push
(bad)
fnstsw
fimul
dec
shr
inc
test
cmp
add
dec
pushf
pop
sbb
sti
or
cmp
cld
test
pop
xcrypt-cfb
cmps
daa
(bad)
(bad)
pushf
test
sub
or
movs
xor
(bad)
jg
adc
jb
mov
stos
pop
rol
js
bound
xchg
pop
push
jb
popf
test
das
scas
ja
cmc
leave
mov
ins
mov
comiss
xor
(bad)
fs
push
push
rol
test
ja
enter
aaa
fucom
add
fs
out
xor
es
jmp
aaa
or
mov
add
out
sbb
mov
repnz
pop
vmwrite
cmps
pop
xlat
cwde
cwde
mov
mov
and
lahf
in
(bad)
in
xor
jbe
leave
je
and
retf
pop
mov
je
sbb
inc
in
add
sbb
loopne
in
add
adc
in
lods
mov
lea
ret
or
push
dec
add
jl
and
pop
push
retf
dec
cli
sbb
out
add
scas
and
sahf
js
pop
mov
push
in
pop
mov
push
retf
lds
sub
fwait
std
pop
div
pop
mov
jbe
loop
mov
xchg
jmp
sbb
jb
je
jno
mov
and
pop
fcmovne
mov
add
sahf
int3
sub
icebp
pop
fst
xchg
lods
mov
cmp
or
push
sub
jmp
jne
outs
outs
retf
mov
push
ins
add
cmp
aad
cwde
fs
xor
(bad)
in
push
jo
in
push
mov
imul
aas
out
mov
push
mov
push
and
sbb
pop
pop
sub
cmp
mov
add
lahf
fucom
push
cmp
xchg
(bad)
xor
cmps
retf
ret
fild
iret
test
aad
out
jbe
sahf
fmul
mov
mov
mov
mov
div
push
xchg
in
outs
pop
inc
sar
jmp
ss
(bad)
ret
dec
adc
fsubrp
and
loopne
push
jo
sbb
push
ins
int
xlat
(bad)
mov
out
stos
mov
std
mov
je
jp
(bad)
cmps
(bad)
fwait
mov
push
mov
pop
cmp
stos
leave
dec
sbb
sbb
xor
pop
aaa
test
ja
jb
movs
ss
xor
xchg
loopne
push
add
sti
push
pop
mov
lods
jno
lds
jle
(bad)
daa
lods
mov
add
and
mov
sub
cmovns
xchg
int
push
loopne
rol
mov
push
jp
add
pop
or
dec
mov
jge
mov
push
mov
and
cmp
cli
jg
les
fsub
daa
dec
ins
push
or
push
(bad)
sbb
call
mov
cmc
mov
ins
imul
fiadd
(bad)
sub
or
ins
js
pop
into
or
adc
mov
call
mov
pushf
xchg
jle
mov
pop
hlt
aad
out
jge
xor
inc
inc
lea
cs
jo
or
imul
adc
dec
jb
popa
or
cmp
dec
push
dec
icebp
add
shl
sahf
(bad)
sub
inc
pushf
inc
pushf
cmp
xchg
cli
mov
retf
test
pop
test
pop
pushf
sbb
int3
cmp
cld
pop
inc
pop
in
mov
cmp
mov
adc
cmp
mov
or
or
push
stc
sub
iret
mov
push
cdq
mov
xor
jmp
neg
test
adc
sub
lahf
inc
sub
sub
sub
cli
adc
cmp
add
mov
fild
xor
dec
test
pop
jmp
push
rcl
pop
cdq
repnz
out
cld
ins
xor
(bad)
lock
sub
test
mov
dec
mov
imul
into
mov
sub
sar
or
(bad)
out
push
jmp
inc
enter
fs
sub
xchg
mov
test
jno
add
std
add
or
inc
(bad)
mov
push
add
clc
mov
or
mov
je
jmp
cmps
cdq
inc
and
mov
sbb
call
call
or
enter
mov
cmps
pop
dec
mov
jns
arpl
test
shl
pop
push
pop
push
test
aaa
cmp
in
jge
inc
xor
add
das
pop
mov
cwde
nop
pop
push
or
jae
pushf
aaa
call
cmp
daa
stc
pop
mov
jmp
xor
jle
(bad)
fild
push
adc
clc
xchg
mov
vpsraw
mov
jl
js
in
xor
cli
xor
or
push
cmp
movs
cdq
mov
mov
pop
adc
or
xor
jbe
pop
sbb
adc
rcl
hlt
add
fwait
lds
push
popf
xor
or
xchg
xor
pop
movs
mov
loopne
ror
stc
sub
and
mov
loopne
xchg
dec
shl
das
jno
sahf
dec
shl
smsw
cli
dec
mov
movs
pop
not
sub
pop
adc
icebp
jmp
lahf
(bad)
jg
add
dec
mov
or
test
idiv
mov
jne
inc
cmp
aad
inc
pop
call
sbb
dec
add
rcl
pushf
push
das
cwde
push
dec
dec
loope
test
out
jbe
mov
sbb
mov
push
jge
xor
lock
jae
aam
adc
into
popf
jge
xchg
dec
xchg
push
push
mov
cs
xor
ficomp
daa
or
push
test
xchg
popf
shr
imul
mov
and
xchg
es
int3
hlt
adc
and
imul
add
mov
adc
inc
cmp
rol
mov
cmps
push
xlat
dec
fist
sub
sbb
sbb
mov
iret
lods
mov
je
push
xchg
call
sbb
lods
adc
cli
push
pop
lds
cmp
pop
ins
ja
ret
sub
imul
out
sbb
add
popf
push
outs
jmp
mov
(bad)
xchg
xchg
jmp
lods
sub
fimul
dec
sub
xchg
sub
addr16
mov
lahf
sub
jmp
std
(bad)
out
aaa
xor
clc
mov
cmp
test
adc
mov
test
cmps
ds
lahf
xchg
rol
ret
and
shr
mov
or
imul
adc
xchg
fist
icebp
adc
xchg
xchg
or
sub
add
enter
pop
mov
dec
fst
mov
loop
jmp
mov
dec
icebp
sti
jle
add
cwde
(bad)
pop
repnz
and
fild
sahf
add
sub
dec
push
fwait
nop
ret
mov
test
and
pushf
fst
dec
lds
adc
push
sbb
(bad)
aam
and
push
dec
dec
push
bound
or
daa
daa
test
(bad)
imul
add
(bad)
or
push
aad
dec
or
mov
(bad)
in
jp
jnp
(bad)
add
ror
call
mov
retf
out
mov
(bad)
xlat
pop
push
push
jmp
cmps
aas
jnp
hlt
outs
aad
jmp
inc
out
in
pop
leave
lock
test
fnstsw
loope
add
jmp
int3
mov
or
xchg
fdivp
xor
xchg
inc
cmp
jnp
(bad)
not
or
and
mov
jp
in
and
gs
inc
adc
cmp
out
jmp
jge
(bad)
(bad)
fs
mov
mov
jns
mov
(bad)
push
fsubr
das
in
push
xchg
cmps
dec
sub
add
test
inc
dec
(bad)
std
cwde
jle
jb
aaa
adc
add
pop
jnp
jl
dec
out
xor
mov
test
ins
out
push
ret
stc
mov
mov
ds
dec
add
nop
(bad)
mov
test
add
jecxz
xor
push
xlat
cdq
jne
dec
xor
cli
xchg
movs
jae
sahf
enter
outs
jle
lahf
mov
push
jns
icebp
mov
lock
out
jmp
pop
xor
fmul
mov
jmp
add
(bad)
mov
into
shrd
ss
call
mov
add
sbb
xor
mov
jno
push
sbb
stos
dec
popa
js
lock
enter
cmp
leave
scas
xor
or
repz
push
mov
shl
jp
or
ja
aas
add
inc
jecxz
mov
cs
cmps
ds
outs
int3
sub
out
icebp
xchg
xor
into
or
clc
inc
(bad)
(bad)
xor
pop
(bad)
mov
jecxz
mov
enter
int3
lds
into
jmp
imul
mov
sub
into
sub
(bad)
shl
cmp
lock
sbb
stos
ret
and
fidiv
ds
arpl
pop
fwait
(bad)
lock
mov
push
jge
mov
push
test
int3
and
movs
repnz
inc
sar
loop
repnz
xchg
adc
imul
lahf
imul
ds
clc
test
int3
sub
cmp
sub
adc
add
repz
xor
sub
into
inc
(bad)
adc
daa
shl
sar
in
jge
fsub
out
stos
jno
repnz
pop
rol
dec
add
or
shl
mov
adc
(bad)
jle
rcl
in
scas
(bad)
jl
jae
xor
in
cmps
outs
les
jmp
adc
rcr
add
inc
mov
cwde
jl
les
pusha
aad
mov
out
or
aam
fstp
mov
inc
pop
xchg
sbb
or
add
pushf
sub
in
jb
and
js
or
adc
mov
adc
pop
rol
test
test
mov
xor
fs
jno
cmp
and
mov
mov
or
enter
lods
fistp
jle
xchg
or
sub
call
mov
mov
sub
test
pop
js
scas
clc
cmp
loop
jp
mov
jle
and
pop
in
jo
mov
js
shr
add
popf
out
dec
mov
mov
lds
adc
repz
test
scas
inc
mov
dec
into
sub
stos
out
test
into
inc
mov
jae
aaa
sbb
or
call
pushf
pop
mov
in
push
cmps
xchg
xor
jbe
dec
stos
or
inc
mov
outs
lock
sahf
xchg
bound
loopne
mov
mov
fmul
(bad)
fwait
inc
pop
iret
push
adc
jns
jg
mov
add
add
add
not
int
jp
jno
lock
and
loopne
jmp
inc
mov
in
or
dec
mov
xor
mov
out
addr16
dec
iret
out
xchg
mov
or
popa
xchg
ja
daa
inc
inc
mov
jle
(bad)
cmps
and
arpl
(bad)
jp
jne
stc
xor
push
cmp
in
sbb
call
add
jb
nop
(bad)
xchg
jnp
es
retf
dec
pop
cmp
loopne
sbb
out
sbb
out
jge
push
cs
mov
dec
mov
js
retf
jno
pop
jp
out
inc
ins
popa
leave
mov
scas
cmp
pop
mov
retf
cmp
ret
test
and
mov
adc
fs
data16
mov
ficomp
mov
dec
xchg
lea
mov
cmp
popf
movs
data16
scas
fisttp
pop
mov
xchg
adc
fadd
jnp
and
movs
(bad)
aam
mov
mov
push
push
outs
jne
xchg
call
ret
sub
mov
cmps
stos
jnp
mul
push
in
sub
push
mov
mov
inc
cmp
or
mov
repnz
stc
sbb
jbe
fucompp
cmp
xor
or
sub
mov
(bad)
xchg
in
fwait
and
leave
imul
or
call
sbb
clc
jp
fst
pusha
jb
and
pop
pop
(bad)
jmp
or
std
repz
pop
cmp
sti
mov
scas
fnstsw
sahf
in
out
scas
imul
push
mov
mov
pop
clc
inc
test
(bad)
dec
aaa
jge
sbb
dec
sub
sbb
pop
mov
or
push
mov
mov
xor
and
add
icebp
ss
test
call
sar
sub
or
leave
cmp
jp
inc
dec
cmps
pop
ret
(bad)
sbb
out
(bad)
jns
mov
pop
inc
add
xor
outs
outs
ror
mov
icebp
out
fst
fs
test
pop
retf
mov
das
and
add
push
mov
xchg
std
dec
add
rol
pop
not
mov
xchg
jne
int
fwait
aas
int3
and
pusha
and
enter
or
cdq
ret
push
add
pop
pop
sub
stos
(bad)
sub
or
inc
cwde
dec
push
std
mov
mul
inc
hlt
mov
lea
mov
add
aad
lods
clc
outs
outs
sbb
sbb
test
or
(bad)
in
sub
ds
mov
pushf
out
pop
mov
retf
cmp
fild
jmp
fisubr
xor
fidivr
dec
ror
imul
ror
mov
pushf
mov
cmp
cdq
inc
jmp
fdiv
inc
mov
jl
ret
pop
add
push
aad
aas
(bad)
btc
lds
or
jle
nop
inc
lock
pop
loopne
aad
sbb
sub
jmp
cmp
movs
sahf
mov
or
(bad)
adc
popf
sub
adc
adc
div
test
ret
stc
es
jb
daa
repnz
jl
mov
lds
mov
xlat
dec
cmp
leave
adc
inc
aas
lock
ins
mov
inc
inc
push
and
es
out
cmp
loop
adc
xor
xor
jo
dec
data16
sti
add
mov
pop
and
aaa
arpl
test
jle
xchg
les
sub
movs
pop
sub
sbb
(bad)
adc
test
fsubr
js
jne
imul
sbb
mov
inc
into
arpl
sbb
cmp
pop
mov
inc
(bad)
loop
pop
mov
fwait
jne
adc
jns
pusha
dec
jecxz
cmps
in
test
lahf
or
push
dec
inc
jb
loop
mov
cli
push
push
ja
mov
scas
or
arpl
div
adc
push
adc
inc
add
fs
xchg
fcomp
push
out
pop
mov
or
fadd
imul
(bad)
cmp
sti
xchg
jle
sub
inc
cmps
dec
ror
push
pop
fadd
rcl
push
jns
xchg
push
retf
mov
mov
adc
jns
rcr
jmp
pop
cmps
ss
movs
das
ss
adc
jecxz
mov
mov
push
imul
dec
mov
sub
sub
out
retf
jb
or
shr
and
jnp
fdivp
sbb
jnp
fild
js
mov
pop
scas
in
add
(bad)
mov
outs
(bad)
cmp
inc
(bad)
mov
cmps
fcomp
pop
das
daa
push
ret
jge
pop
int3
gs
repz
es
inc
pop
out
jbe
std
fld
cmp
xchg
shl
sub
xchg
ds
sbb
push
in
and
jnp
jle
movs
aam
xchg
and
movs
fcomp
(bad)
jae
inc
loop
pusha
xchg
ja
and
lods
lea
pop
iret
dec
mov
inc
lea
daa
push
xchg
and
stos
(bad)
data16
jnp
pop
add
mov
dec
jmp
sbb
scas
int
adc
call
dec
loope
test
lds
ds
lahf
jmp
mov
sbb
mov
je
push
pop
(bad)
xchg
jb
ja
inc
mov
sub
call
xchg
pop
dec
mov
push
inc
lods
cmp
mov
fld
and
in
leave
fs
and
daa
mov
jge
mov
test
pop
les
fldcw
imul
test
xchg
or
(bad)
cmp
or
cmps
icebp
(bad)
xlat
aas
aaa
les
imul
mov
mov
mov
jo
xchg
fwait
dec
addr16
mov
aas
jmp
pop
out
(bad)
inc
call
repz
push
jne
pop
sahf
adc
retf
xlat
cmp
or
fwait
and
lahf
ds
add
cwde
ins
ret
sbb
sub
mov
adc
mov
jmp
fwait
or
jmp
jmp
ret
sar
mov
sbb
mov
and
(bad)
jns
sub
scas
push
add
popf
pop
mov
jmp
and
gs
cmp
sub
push
push
popf
imul
fdiv
cmp
dec
sub
aas
mov
mov
adc
pop
mov
mov
fs
repz
clc
in
pop
out
fisub
je
pop
mov
or
inc
lods
fadd
ror
dec
(bad)
es
mov
and
out
mov
jb
call
icebp
ret
jbe
xor
dec
cmps
jns
nop
cwde
pusha
inc
add
dec
cmp
outs
pop
loope
hlt
cmps
adc
adc
or
mov
iret
cmp
xchg
cmc
and
inc
stc
int
or
dec
loope
mov
add
outs
cmp
mov
in
xchg
mov
mov
pop
ins
or
jns
or
inc
cmp
test
imul
inc
inc
push
xchg
sahf
cmp
add
xchg
sub
nop
fstp
xchg
cmps
lock
pop
out
ds
aad
je
in
call
add
int3
cmp
adc
cmp
dec
add
and
(bad)
das
xor
ficomp
adc
adc
repnz
xchg
ins
and
inc
xchg
adc
cmp
and
aad
ret
popa
retf
push
or
inc
les
inc
xchg
mov
mov
cwde
jg
(bad)
lods
pop
movs
mov
push
jmp
or
and
push
push
jecxz
mov
jne
test
fnstsw
add
mov
mov
mov
push
mov
jp
ds
shl
jl
enter
and
ret
or
mov
push
es
xor
xor
fisub
repnz
das
cdq
out
pop
das
xor
in
and
je
ror
call
xor
push
retf
fwait
fs
push
fiadd
sbb
mov
pop
dec
(bad)
popa
push
fld
lock
dec
jle
add
cli
mov
call
popa
and
pop
jecxz
out
jecxz
out
pop
sbb
outs
movs
invd
bound
adc
jl
call
jns
xor
cmp
data16
mov
add
in
ret
addr16
inc
push
nop
adc
test
fisubr
call
cs
and
push
xor
jns
popf
xchg
movs
xchg
dec
(bad)
pop
ja
and
enter
lahf
cwde
xchg
jae
fwait
push
outs
aaa
outs
xor
outs
and
outs
std
je
js
test
fild
inc
cmp
fldlg2
shl
stc
pop
out
jge
mov
sub
scas
sub
jbe
sub
add
int3
mov
icebp
sbb
retf
pusha
stos
mov
repz
mov
or
pop
push
xchg
mov
rcr
ja
sub
cmc
push
aas
pop
adc
cli
pusha
lods
bound
cmp
push
push
or
and
std
jg
int
mov
mov
sub
(bad)
jnp
push
in
outs
xor
dec
in
push
scas
jne
(bad)
push
cmp
mov
push
jl
cli
add
in
xchg
jl
scas
fs
cli
bound
and
loop
pop
rol
clc
fst
scas
pushf
push
jne
add
mov
ss
cli
rcr
ja
adc
sbb
clc
adc
mov
loope
inc
sub
and
dec
pop
aaa
push
in
fisttp
loope
mov
test
jl
(bad)
xor
lea
or
mov
(bad)
push
jecxz
int3
fsub
lock
cld
dec
jmp
mov
xchg
ret
fst
gs
shl
je
jae
mov
mov
hlt
cmp
pusha
add
xlat
nop
xchg
aas
cdq
mov
ins
push
mov
cdq
ror
pop
inc
cmp
cmp
sti
in
lods
jp
pop
cli
lds
loope
mov
rcr
xchg
stc
jle
xor
pop
loopne
test
push
mov
clc
pop
pop
ins
mov
mov
adc
std
mov
pop
arpl
jo
movs
xchg
fs
jg
test
data16
daa
sub
adc
fstp
sar
jne
mov
push
mov
mov
bsr
xor
cmp
test
(bad)
out
loop
sub
sub
jge
sbb
add
sub
xor
jae
push
(bad)
cmps
mov
dec
dec
sub
lods
in
sbb
imul
and
and
int3
mov
xor
stos
jmp
lods
mov
stos
imul
push
mov
loop
fxch
pop
sti
push
push
xchg
clc
cdq
xchg
out
popf
push
stc
xchg
sbb
out
sbb
push
jne
xlat
mov
mov
(bad)
aad
push
push
mov
jg
std
(bad)
sbb
jl
cmc
popa
fnstcw
(bad)
aaa
sbb
icebp
sti
in
stos
test
sub
xor
dec
repz
inc
jmp
xchg
mov
push
stos
push
int3
stos
jns
jmp
sub
sub
add
push
add
nop
jb
(bad)
xchg
ud1
or
loop
js
pop
fidivr
lahf
pop
inc
ins
jbe
mov
mov
mov
retf
ins
mov
pop
jns
add
mov
std
mov
xor
xchg
sub
dec
aas
or
or
int3
push
in
aad
retf
stos
cdq
retf
pop
xlat
mov
cmp
xchg
fadd
pushf
and
fimul
int
mov
paddsb
add
lock
into
or
add
xlat
dec
ss
pop
jecxz
(bad)
fdivp
in
add
cmp
clc
jmp
ss
sbb
sbb
xlat
jge
xor
xor
enter
xor
adc
mov
scas
mov
scas
jp
mov
fisub
call
and
movs
cwde
js
ds
or
(bad)
cmp
int
mov
jmp
movs
pop
cmc
adc
and
add
or
pushf
mov
xchg
cmc
data16
mov
gs
and
call
jl
mov
mov
push
iret
test
xor
sti
xlat
xor
aam
push
pop
lods
xchg
fimul
sbb
rcr
out
sar
add
int3
mov
push
jo
adc
mov
mov
addr16
cmp
fild
pop
movs
adc
ss
pop
xor
(bad)
test
jbe
dec
icebp
or
shl
xor
enter
aam
add
push
fst
adc
and
retf
mov
pop
out
sbb
pop
cmp
pop
daa
push
cmp
out
ins
sbb
aas
pop
xor
dec
cmp
or
fidivr
enter
sub
scas
nop
dec
sbb
icebp
sar
pushf
cmp
adc
inc
aad
jg
cmps
rcl
add
shl
wbinvd
ins
pop
add
mov
loop
leave
sub
jmp
outs
int3
fs
and
push
xor
loop
jne
mov
loope
sahf
xchg
loopne
jae
lds
jmp
add
jo
je
mov
in
pop
mov
iret
push
pop
xchg
ins
jle
jle
mov
sbb
inc
jl
jne
push
inc
pop
cmp
fcmovne
(bad)
dec
(bad)
fstp
loopne
pop
cwde
daa
xor
lods
pslld
std
dec
movs
add
jg
ret
sbb
push
repz
jae
pop
ret
dec
jp
pop
retf
mov
cwde
pop
mov
mov
ret
test
pop
pushf
nop
cmp
inc
pop
cdq
nop
mov
mov
(bad)
jae
popf
out
test
inc
out
mov
psllq
cmps
dec
sub
aas
and
mov
fnstsw
out
repz
mov
cli
std
jb
xor
mov
call
loopne
ret
xlat
jnp
xchg
adc
outs
xchg
mov
cli
mov
nop
xchg
arpl
cmp
mov
push
xchg
push
ret
test
mov
cdq
cmp
xchg
jge
jb
call
jp
retf
jo
cmp
sbb
xchg
outs
pop
pop
mov
xor
xchg
sti
xor
in
lahf
xor
mov
mov
sar
in
test
test
in
in
cdq
les
test
cmc
add
cmp
cld
call
leave
das
xchg
out
sub
movs
inc
mov
dec
hlt
pop
lea
mov
pusha
scas
push
jns
scas
nop
push
xchg
dec
das
lock
jle
adc
inc
ror
lds
bound
fisttp
(bad)
pop
imul
dec
jbe
jmp
fimul
mov
in
cmp
imul
(bad)
addr16
out
cmp
mov
lds
add
adc
(bad)
or
xchg
mov
push
cmp
fidivr
ss
pop
rcr
mov
aas
scas
nop
push
std
jbe
test
jae
ja
push
mov
dec
dec
fs
ja
inc
enter
out
rcl
icebp
(bad)
addr16
xor
adc
sub
push
imul
ds
mov
jno
daa
movs
pop
pop
adc
repz
test
xchg
out
mov
outs
pop
cmp
mov
mov
mov
and
cmp
bound
fisttp
mov
jb
test
scas
add
daa
js
push
das
hlt
pop
cmp
ficom
(bad)
loop
cwde
cmp
pop
les
fbld
cmp
cwde
aas
pop
out
inc
pop
sub
pop
push
popa
int
jb
lds
xchg
in
adc
ds
add
ror
pusha
and
add
mov
(bad)
mov
movs
push
and
mov
(bad)
xchg
jl
test
lea
mov
dec
jno
add
dec
repz
xchg
sahf
(bad)
jnp
in
and
mov
(bad)
xchg
mov
call
mov
sub
add
fsubr
imul
or
xor
and
fs
xor
mov
jae
add
adc
jmp
inc
dec
pop
pop
fistp
sub
movs
outs
and
inc
test
aad
clc
popa
xchg
loop
in
pop
ja
xchg
pop
ins
jno
cmp
ins
mov
adc
dec
sub
sub
cli
mov
push
into
adc
sbb
and
inc
push
or
jno
pusha
sub
lock
loopne
jp
jl
repnz
add
aad
outs
or
mov
pusha
in
out
outs
cli
call
test
int3
mov
scas
push
test
fist
cmc
sbb
clc
dec
in
arpl
cli
in
test
xor
outs
int3
dec
mov
fiadd
push
ror
ins
(bad)
call
retf
sbb
xor
sar
jp
cmp
pop
jo
and
in
jle
enter
jne
xchg
xchg
nop
iret
add
ins
shl
enter
mov
mov
sub
sbb
fdiv
les
jno
retf
and
addr16
cmova
xor
or
loopne
xor
push
pop
test
xor
sti
loop
mov
add
add
xor
sbb
jl
mov
sub
movs
add
cmovg
mov
push
rcl
inc
xchg
push
mov
cmp
jmp
fnstcw
or
sahf
push
popf
sbb
jno
out
pusha
sbb
mov
nop
cmps
sub
jle
adc
test
addr16
inc
mov
add
xchg
scas
and
add
jmp
es
or
sahf
jbe
sub
jae
pop
jnp
xor
dec
push
lea
(bad)
mov
xor
mov
and
ss
mov
and
in
adc
sub
aad
adc
or
fdivr
mov
ret
repnz
sub
test
dec
icebp
in
adc
push
ss
lea
push
adc
inc
add
ficomp
xchg
dec
(bad)
mov
xor
dec
lods
fnstenv
pop
push
adc
mov
aas
mov
fistp
data16
sub
fimul
nop
pop
mov
mov
inc
mov
mov
and
dec
xchg
xor
sbb
add
ins
add
dec
jmp
movs
pop
dec
fist
push
fs
not
paddusw
inc
mov
loopne
int3
push
xlat
push
xchg
inc
xlat
loop
jno
jns
xchg
sub
cmp
or
dec
jle
add
jb
mov
into
inc
or
push
loope
or
das
(bad)
into
aam
add
out
xor
popf
mov
inc
mov
(bad)
sti
fdivr
cmps
dec
out
jno
test
cmc
mov
jmp
gs
mov
in
loope
mov
push
jns
add
sub
inc
movs
icebp
dec
movs
shl
bound
dec
ret
retf
or
popa
call
daa
adc
jg
dec
test
mov
dec
mov
inc
icebp
mov
jno
jnp
std
adc
in
cmp
ins
fwait
daa
pop
(bad)
shr
out
call
xchg
xchg
cmp
mov
pop
xchg
add
mov
je
adc
pop
dec
mov
jnp
ret
out
daa
add
mov
sbb
xchg
mov
js
test
jge
push
adc
xor
xor
ja
in
jge
jle
add
jp
stos
sbb
and
ret
loopne
sub
push
sbb
jne
push
jl
out
sub
pusha
daa
and
or
cmp
lods
xor
dec
inc
sub
mov
dec
jmp
ret
data16
fmul
push
dec
mov
mov
or
xchg
gs
and
mov
add
cmp
nop
imul
cmp
or
sub
rcl
ja
sahf
push
jge
outs
pop
cmp
xor
shl
add
mov
xor
adc
cmps
call
repnz
fdivr
test
push
scas
add
xchg
rcl
ret
call
ret
push
stos
icebp
in
(bad)
repz
cmps
dec
iret
test
stos
rol
rcr
add
adc
inc
inc
and
xor
jge
sub
adc
aas
xor
movups
sbb
ins
jnp
jb
mov
pop
addr16
pop
lahf
leave
(bad)
imul
cs
or
shl
jbe
repnz
movs
std
das
push
add
xchg
xchg
cmp
out
push
cmp
sbb
cmp
in
mov
push
aaa
aaa
dec
stc
int3
or
lods
ror
in
cmc
mov
mov
std
andps
js
push
xchg
(bad)
adc
les
xor
daa
fisttp
mov
mov
pop
es
hlt
xlat
stc
push
out
push
pop
fnstsw
push
pop
push
retf
fwait
test
mov
mov
std
mov
jae
inc
cmp
and
and
mov
ja
sbb
int3
or
icebp
xchg
pop
pop
lahf
(bad)
adc
xlat
push
and
popa
popa
inc
xchg
sbb
test
cmp
sbb
fsub
nop
out
outs
inc
mov
sub
cwde
mov
mov
shl
jge
ret
retf
xor
cdq
mov
(bad)
pusha
cmp
and
fild
in
pop
lods
mov
sbb
pushf
pop
into
pop
jge
jmp
test
fild
arpl
int3
cmp
sbb
out
xchg
mov
mov
cli
inc
mov
je
cmp
and
cmp
adc
sar
(bad)
cs
or
mov
stos
enter
jge
adc
mov
test
push
adc
pop
pop
pop
dec
push
out
hlt
loope
cdq
push
mov
ror
sbb
dec
push
xchg
loope
dec
pop
xchg
or
sbb
lea
mov
add
or
sbb
xlat
adc
test
push
stos
xor
repz
mov
bound
cmp
mov
xlat
push
int3
pop
jne
and
xchg
loop
inc
sahf
dec
mov
cmp
out
stos
push
mov
sbb
cdq
pop
mov
add
cmp
mov
jb
es
les
push
xchg
test
out
mov
mov
cmps
daa
mov
enter
cmp
mov
mov
cli
fs
push
add
mov
cmp
dec
cmps
fst
fwait
add
inc
xchg
xor
add
sbb
jg
mov
xor
mov
push
pop
jmp
repz
push
shl
cld
fist
and
aaa
xor
or
jnp
pop
adc
mov
arpl
add
mov
jbe
out
cmp
jmp
adc
ret
out
push
xchg
jg
xchg
add
cmps
iret
shl
popf
ja
cwde
test
ins
test
ret
mov
cdq
pop
retf
cmp
aad
mov
xlat
dec
iret
int3
enter
movs
call
das
retf
adc
xchg
jmp
push
pushf
or
aam
mov
sub
mov
cmp
fist
fadd
cwde
mov
inc
enter
mov
jbe
pusha
jg
inc
aad
jns
cld
mov
sbb
in
outs
jl
aaa
and
dec
loope
add
jl
data16
shr
idiv
add
imul
sub
fild
push
push
pop
xchg
or
repz
in
in
in
xor
repnz
sbb
(bad)
movs
fist
mov
xchg
pop
inc
int3
mov
sar
fcomp
aaa
or
mov
or
xchg
adc
std
xor
sub
xchg
cmp
sub
sbb
hlt
repnz
ds
pop
xor
ss
not
xor
mov
sbb
lods
sbb
sub
xor
or
sbb
jne
jns
ja
inc
js
and
je
pop
movs
inc
dec
dec
mov
cmps
movs
adc
adc
push
mov
sub
adc
iret
push
jle
daa
idiv
pop
aaa
mov
add
in
and
es
enter
sbb
push
test
jae
add
or
jns
lods
or
adc
push
push
fsubr
xchg
fdivr
nop
cmp
jne
or
into
cmp
xchg
movs
scas
mov
sbb
sub
adc
sahf
out
scas
lea
mov
mov
std
dec
jge
movs
dec
sub
sub
sbb
cmc
adc
(bad)
neg
mov
jp
mov
cli
add
inc
cmp
ins
in
lods
retf
inc
cmp
xchg
in
dec
xor
dec
or
and
xlat
lea
jo
push
fs
push
and
cmps
lods
add
dec
push
enter
test
scas
xchg
xchg
icebp
imul
mov
loopne
adc
mov
pushf
in
fs
das
out
push
mov
lods
cmc
mov
inc
mov
push
xchg
push
xor
mov
mov
inc
test
xchg
movs
cmc
scas
and
cdq
jmp
or
xor
adc
push
imul
jp
ss
dec
pop
ds
jp
sbb
mov
ret
lds
mov
mov
mov
ret
or
xchg
int3
(bad)
mov
mov
out
mov
call
mov
jg
mov
jne
mov
imul
push
push
call
imul
clc
(bad)
adc
aas
in
(bad)
fidivr
lahf
jg
mov
mov
jnp
cld
aaa
xor
or
in
sbb
movs
lods
xchg
mov
(bad)
mov
push
xor
bound
inc
inc
jo
ret
cdq
mov
sbb
into
mov
add
adc
and
test
mov
mov
sbb
out
lahf
mov
cmp
dec
dec
adc
mov
cmp
mov
inc
add
push
add
or
aas
adc
xor
add
jbe
mov
sub
dec
icebp
loop
mov
daa
push
out
mov
dec
lahf
pop
jl
sub
inc
mov
leave
fisttp
jne
and
aas
test
add
ret
xor
sahf
xor
push
jmp
dec
imul
sbb
out
cpuid
into
xchg
loopne
out
xchg
add
pop
ss
jno
retf
fdivr
lods
mov
daa
aad
vcvtsi2sd
or
mov
pop
not
or
mov
fbstp
cli
mov
or
jge
mov
int3
call
xchg
jecxz
push
jae
sub
dec
xchg
pushf
je
mov
mov
push
add
sar
xlat
test
fbld
lods
xor
rcr
adc
rcr
nop
adc
lea
dec
mov
push
jecxz
pop
sub
sub
out
dec
push
stos
movs
jmp
dec
pusha
xchg
pop
rol
cdq
cmp
push
sub
or
pop
push
mov
mov
mov
fsubr
je
cmp
xchg
cli
gs
(bad)
jne
mov
shl
gs
enter
push
add
dec
mov
cmc
ret
in
rcl
ins
cmps
dec
add
push
ret
sbb
dec
sub
clc
adc
outs
xor
jb
xchg
(bad)
aad
movs
add
inc
mov
bound
cmp
lea
sbb
js
pushf
stos
or
and
xchg
adc
icebp
mov
mov
pop
xchg
mov
ins
and
aam
in
bnd
push
lea
inc
(bad)
fdiv
push
mov
dec
mov
push
test
pop
or
std
mov
and
je
push
adc
mov
jl
dec
jnp
mov
ror
sub
mov
and
cmp
pusha
or
fidivr
push
out
mov
jbe
mov
push
(bad)
mov
add
stc
ja
int
shr
push
leave
pop
aaa
sbb
leave
jmp
jno
pop
push
inc
(bad)
rcr
mov
cdq
xor
and
add
cld
sar
shl
and
xlat
mov
sbb
int
and
(bad)
loopne
mov
mov
mov
fsub
jge
adc
loop
imul
loopne
mov
repnz
fld
sub
jge
pop
xchg
ds
xor
xchg
mov
jle
scas
sub
pushf
call
jno
fs
dec
js
mov
mov
and
sub
inc
fsub
in
cmp
add
dec
jecxz
test
je
adc
fs
test
add
out
(bad)
cdq
add
xor
adc
xor
rcr
mov
xchg
adc
pop
push
jle
in
repnz
fiadd
dec
xor
dec
out
pop
sub
ds
call
iret
mov
dec
icebp
and
sub
mov
cwde
adc
mov
outs
pushf
lds
and
pop
jo
bound
xchg
repz
cwde
fdiv
pop
(bad)
sub
or
dec
mov
aaa
add
js
fbstp
test
popf
and
lds
mov
mov
ja
test
mov
jns
in
dec
out
sub
sub
mov
stc
jb
jne
add
std
inc
jmp
mov
shl
ret
movs
cwde
fldcw
ins
and
loop
and
cwde
mov
mov
push
mov
imul
(bad)
sti
adc
loopne
mov
dec
or
test
push
das
imul
inc
out
xchg
mov
push
and
inc
push
xor
pop
mov
push
outs
sti
mov
dec
(bad)
icebp
pop
rol
out
cdq
scas
jnp
out
pop
adc
cld
or
jp
retf
sub
daa
pop
cmp
xchg
lods
ficomp
push
retf
(bad)
clc
nop
pop
push
adc
mov
rol
(bad)
push
stos
xor
or
test
jge
rol
and
sbb
jg
stc
not
mov
mov
test
das
dec
(bad)
imul
push
jmp
ret
inc
push
xchg
sub
xchg
sub
aad
mov
in
lea
dec
xlat
out
push
mov
sar
aad
and
test
sub
out
and
push
inc
adc
rol
data16
mov
mov
mov
jo
jbe
mul
into
imul
ret
aaa
xor
dec
fsubr
cmps
ret
test
push
cmp
mov
sub
out
pop
test
add
adc
popa
pop
not
xor
fistp
xor
stc
cmp
or
scas
mov
(bad)
pop
jns
ss
sbb
arpl
fwait
push
pop
out
inc
pop
enter
add
outs
mov
mov
jbe
push
or
push
aas
dec
sub
leave
mov
mov
add
xor
xor
xor
pop
inc
test
dec
lock
sub
dec
jbe
pop
faddp
xchg
stc
jg
(bad)
(bad)
jge
xchg
sbb
jns
jne
stc
test
jbe
ja
mov
push
adc
xchg
push
stos
jg
dec
xchg
push
(bad)
add
div
test
and
add
(bad)
xlat
int3
jmp
test
dec
xor
jg
loope
mov
adc
(bad)
shl
xchg
or
lock
cmc
call
out
test
data16
pop
mov
aam
js
xchg
sbb
inc
inc
ins
loop
scas
push
aam
mov
jno
fsub
mov
cmps
ret
lahf
out
push
sbb
sub
movs
stos
xor
aam
sub
call
mov
addr16
test
(bad)
popf
xchg
jno
jnp
es
mov
addr16
ror
sub
adc
jmp
into
cmp
fld
adc
adc
call
dec
mov
add
loop
pusha
adc
and
inc
ss
and
xchg
(bad)
mov
fld
mov
jns
sbb
inc
mov
inc
sbb
and
mov
pop
cmc
loop
in
scas
jmp
js
push
das
inc
xchg
jmp
gs
(bad)
loopne
std
es
dec
inc
jge
pop
sub
stos
sbb
jbe
sti
push
pop
test
repnz
dec
and
addr16
lods
and
hlt
push
and
jl
push
aaa
dec
pop
adc
pop
pop
iret
sbb
sbb
fstp
adc
pop
add
mov
enter
cwde
loope
aam
push
sub
(bad)
mov
add
dec
adc
les
push
(bad)
lods
imul
int
(bad)
mov
out
xor
mov
cmp
mov
xchg
cmps
xchg
retf
mov
mov
fsin
dec
ds
pop
push
adc
sub
in
fild
popf
out
and
stos
xor
imul
scas
outs
push
movs
fnstsw
ds
xchg
int
sahf
dec
pop
ds
mov
imul
xchg
sub
iret
xchg
data16
mov
inc
cmps
out
jp
addr16
mov
gs
mov
cs
fimul
inc
pop
pop
inc
or
mov
fild
push
cdq
and
sbb
js
mov
xchg
gs
dec
pop
out
jp
mov
and
add
repz
and
imul
aad
add
and
in
push
sub
rcr
imul
lods
fiadd
or
inc
shr
sahf
out
imul
das
mov
shl
or
inc
nop
into
cdq
outs
xchg
rcr
mov
or
and
fwait
dec
int3
push
iret
ja
and
cld
cmp
push
into
inc
mov
sub
jnp
jb
pop
in
sbb
push
bound
cmp
repnz
sti
and
into
out
lahf
add
xor
movs
ret
iret
add
cld
shr
int3
je
inc
sahf
aad
aaa
push
leave
push
push
mov
int
mov
jmp
scas
popf
leave
fwait
dec
dec
not
fcomp
imul
loopne
push
mov
mul
add
adc
aaa
movs
psrlq
mul
jne
and
ins
jnp
add
adc
inc
cmp
cld
ins
test
mov
or
push
push
jo
jp
sub
int3
inc
rcl
dec
xchg
mov
mov
inc
mov
mov
data16
mov
popf
fs
jb
loop
jnp
xchg
shl
inc
push
and
(bad)
scas
sar
cli
pop
scas
in
test
pop
jge
movs
mov
adc
sub
test
mov
stc
mov
xor
pop
or
mov
fdiv
jmp
mov
push
mov
cmps
sbb
cmp
jmp
mov
call
mov
cmp
adc
inc
pop
xor
sbb
push
pop
xchg
retf
push
xor
sub
sbb
xlat
push
sub
xor
js
cmc
sub
retf
and
push
ss
push
dec
popa
cli
push
lds
cli
mov
arpl
cmp
scas
dec
cmps
cmp
movs
pusha
cld
clc
repz
mov
or
in
push
or
(bad)
jp
or
imul
push
cmp
sti
push
fwait
loope
pop
inc
call
fst
pop
imul
int3
adc
ss
cmp
cdq
imul
call
call
xor
cwde
rcl
pop
lods
inc
xor
cwde
or
int
rep
cwde
xchg
shl
jmp
mov
lahf
imul
push
cli
bound
xor
adc
iret
add
xlat
xchg
or
and
lea
int3
mov
jecxz
adc
jl
push
cmp
adc
dec
retf
pop
scas
cmp
mov
xlat
icebp
ja
add
push
jecxz
cmp
(bad)
and
repz
xchg
loop
aaa
(bad)
sub
mov
adc
push
popf
cmp
ret
add
cmp
push
adc
sar
mov
pop
les
push
pop
xchg
lock
pop
adc
add
mov
and
xchg
pop
adc
sub
push
inc
clc
xchg
fdiv
cmps
hlt
pmuludq
pop
loop
jne
daa
es
test
jmp
jo
dec
cmc
retf
jl
or
pop
neg
int3
aas
xor
call
lods
pop
jle
ins
or
mov
mov
cmp
pop
jmp
push
mov
lds
push
pop
adc
mov
sub
inc
xor
cs
out
in
test
and
cli
(bad)
mov
adc
jecxz
add
pop
shl
inc
mov
adc
clc
repnz
ror
nop
(bad)
and
jnp
pop
cld
sti
sub
or
icebp
inc
xchg
xor
add
out
shl
fdivr
xor
add
loopne
test
jne
adc
cmp
fiadd
enter
ss
inc
mov
out
je
mov
cmp
or
scas
mov
jno
int3
lahf
sbb
jecxz
dec
dec
and
lea
dec
push
and
lods
dec
pop
cmc
leave
lea
pop
lock
fild
and
add
nop
lahf
or
and
aas
cmp
call
and
pop
push
sahf
sub
aam
push
inc
cmp
jmp
push
pusha
fwait
ins
lock
loop
mov
sbb
inc
xor
jp
jmp
test
sbb
imul
push
pop
test
icebp
push
bound
out
and
inc
dec
inc
or
inc
jmp
mov
dec
pop
or
repnz
push
sub
mov
mov
pop
push
cmps
popf
push
jns
push
not
sub
xor
iret
mov
push
int
mov
fwait
lods
push
jmp
mov
sar
xor
pop
sub
xor
(bad)
jg
dec
xor
arpl
shl
mov
cmps
cmps
loopne
test
outs
cmp
cld
push
push
mov
xor
pushf
retf
adc
pop
mov
stos
jae
inc
mov
(bad)
std
dec
push
push
xchg
stc
add
push
retf
jbe
jle
mov
add
dec
pop
xor
mov
scas
push
xlat
pop
sar
nop
mov
push
(bad)
adc
fcom
fsubr
xor
push
popf
sbb
mov
test
push
mov
mov
stc
pop
adc
add
mov
mov
fwait
add
adc
ja
xor
inc
and
xor
pop
test
out
addr16
in
enter
dec
xchg
js
rcl
pop
and
add
pop
push
jo
cmp
(bad)
xchg
mov
mov
lods
adc
push
mov
pop
ds
and
mov
cwde
scas
mov
push
jb
sbb
popa
int
in
push
and
cmp
inc
add
(bad)
shr
fld
ss
test
je
(bad)
movs
movs
arpl
mov
imul
jne
movs
push
mov
add
loopne
jecxz
rol
dec
rol
ret
out
jae
clc
in
mov
push
push
mov
ins
stos
popf
and
or
repz
xlat
cmp
xor
jge
xchg
push
mov
gs
das
mov
sbb
fwait
sub
mov
mov
(bad)
xchg
scas
or
pop
push
and
enter
mov
xor
push
xchg
sahf
push
fisub
jg
fild
jl
jge
jo
das
inc
popf
xor
mov
shl
movs
call
and
adc
dec
mov
xchg
cmps
jle
repnz
mov
mov
enter
dec
ret
and
sbb
and
cmp
mov
shr
jns
jne
ret
push
xchg
sub
imul
jbe
mov
or
shr
jle
inc
ss
xor
stos
stc
lahf
fsubr
mov
cs
adc
pop
push
push
fwait
add
add
jne
in
les
in
pushf
or
xchg
mov
loope
clc
das
(bad)
mov
sub
mov
shl
xchg
push
fidivr
cld
aam
mov
lock
inc
imul
hlt
xchg
xlat
call
sub
xlat
mov
jmp
aas
aas
into
ret
push
jle
add
adc
nop
push
add
cdq
sub
loopne
daa
add
mov
mov
cmp
popf
add
in
push
sbb
or
push
mov
aad
xchg
mov
inc
xor
fild
ficom
pop
loope
mov
pop
outs
aas
mov
cmp
xor
clc
mov
scas
mov
fcmovbe
adc
jo
add
or
pop
add
dec
(bad)
cmp
push
aaa
adc
repnz
sbb
jmp
pop
xor
(bad)
je
add
push
test
jmp
imul
sti
sbb
cmp
test
add
adc
mov
or
lock
jle
sub
cs
inc
(bad)
cmp
jge
call
jmp
and
inc
scas
mov
pop
out
pop
push
jns
push
push
ret
icebp
mov
pop
jne
inc
sub
test
test
retf
jecxz
dec
pop
mov
push
shl
outs
cmp
fst
jae
popf
sti
ret
inc
shl
outs
xchg
popa
mov
gs
mov
cmp
repnz
jmp
nop
xor
adc
call
lods
retf
fild
aam
in
into
call
pop
inc
mov
sub
and
lahf
dec
outs
add
or
add
adc
jecxz
call
push
pop
mov
push
cmp
aad
sahf
hlt
jb
sub
ret
call
fwait
and
or
push
lock
inc
xchg
test
(bad)
pop
gs
hlt
and
push
jecxz
pop
cld
aam
mov
rol
xchg
imul
icebp
xor
int
out
dec
ja
sbb
mov
sub
pop
outs
xchg
lock
inc
add
fs
xor
sub
je
mov
mov
mov
out
pop
dec
push
sbb
fwait
std
mov
popa
dec
je
push
(bad)
mov
adc
or
aaa
test
cmp
xchg
mov
out
xlat
out
cmp
and
or
test
mov
lea
or
pop
(bad)
fidivr
cmp
movs
imul
xchg
pop
je
sbb
and
xchg
dec
fistp
push
jl
ret
call
xor
or
inc
les
sub
push
dec
lahf
rcl
repnz
int
or
ret
gs
scas
imul
mov
test
xor
add
jnp
sahf
xchg
jbe
and
int
xlat
xchg
popa
xor
in
aam
cmp
xchg
push
lods
sahf
jle
xchg
and
movs
add
loop
add
lahf
jno
in
gs
jecxz
jns
push
aad
dec
sub
and
push
pop
aaa
pop
test
test
xchg
pop
enter
xor
sub
dec
mov
out
sbb
test
sahf
pop
into
push
fwait
(bad)
hlt
repnz
xor
scas
mov
xor
shl
pop
add
adc
iret
mov
cmp
idiv
add
int
mov
jge
sar
ds
xor
fild
jle
ins
mov
add
dec
iret
inc
xchg
jl
mov
loop
lods
jle
outs
neg
jp
aas
xor
pop
jg
jmp
jnp
sub
out
xchg
daa
adc
pop
cmp
push
int
mov
jbe
aad
shl
ins
jnp
jae
dec
ficomp
(bad)
shl
mov
xchg
fs
out
dec
ins
ja
fs
or
mov
xor
mov
adc
adc
in
cmovl
jb
sbb
cmp
mov
adc
dec
out
retf
fild
jno
ins
xor
push
and
xor
sub
in
dec
xchg
or
dec
xor
add
(bad)
push
fidivr
bound
dec
int
cmp
ins
mov
mov
jb
fwait
cld
push
adc
in
lea
stos
cmp
inc
repnz
mov
sbb
or
outs
mov
not
add
or
sbb
inc
bound
mov
cdq
retf
add
(bad)
div
jo
pmaxsw
pop
cmp
ret
stc
sbb
cld
xchg
mov
mov
mov
int3
outs
xor
pop
adc
loop
popa
sub
push
popa
mov
add
(bad)
enter
fdivrp
test
nop
xchg
scas
adc
jb
xor
mov
xchg
out
push
add
xlat
jne
sbb
popa
loope
rol
std
dec
es
jae
popf
xor
pop
dec
jo
(bad)
jmp
out
sbb
in
scas
ret
gs
leave
sub
mov
and
cli
call
or
loope
jge
jb
dec
les
shr
enter
pop
test
rol
xchg
and
mov
adc
mov
add
repnz
mul
dec
xor
outs
aam
scas
cmp
sar
adc
adc
sbb
fisubr
or
pop
add
mov
cmps
int3
loope
xor
sar
in
int3
push
mov
daa
push
xchg
dec
jne
mov
cmovl
inc
dec
pop
fst
popa
imul
or
adc
cmp
xor
cli
es
loop
and
adc
jnp
cmc
rcl
inc
lds
(bad)
mov
fidiv
jbe
pop
xchg
cmp
cmps
or
sub
popa
stos
rcl
test
mov
dec
jp
aas
ins
shl
shl
add
dec
jmp
nop
mov
ffree
push
push
push
sbb
stos
cdq
add
mov
pop
mov
sar
(bad)
rol
xchg
inc
shl
or
loop
mov
ror
jp
jno
fild
(bad)
std
add
es
test
push
adc
mov
outs
push
and
retf
mov
sbb
adc
loope
dec
cmc
fwait
sbb
outs
sahf
inc
stos
jge
test
cmp
mov
dec
imul
mov
xchg
retf
movs
lods
xchg
in
shr
into
mov
outs
add
adc
ret
addr16
std
mov
aaa
mov
into
lock
shl
rcr
inc
arpl
rcr
fadd
sub
das
aas
movs
cld
pop
push
pop
xchg
push
mov
pop
in
or
repz
aam
in
cmps
outs
and
shl
(bad)
inc
adc
mov
icebp
adc
and
sbb
jae
jmp
test
jne
sub
or
rcl
imul
jg
in
sahf
and
mov
or
inc
imul
jp
cwde
inc
cmp
dec
xchg
inc
and
rol
(bad)
stos
jp
mov
test
(bad)
loopne
jecxz
(bad)
pop
add
cdq
push
jg
mov
repnz
mov
(bad)
sbb
mov
pusha
or
sbb
(bad)
mov
cmp
lods
sbb
jns
mov
aaa
cmp
or
vfrczss
jle
test
or
xor
jp
cmc
test
sub
inc
xor
sbb
out
sub
or
aad
call
cmp
mov
retf
dec
outs
out
popf
xchg
loope
imul
clc
jp
push
xor
into
or
xor
rcr
lods
mov
rcl
imul
loopne
jp
(bad)
jmp
hlt
lods
lock
pop
xchg
cdq
push
or
in
enter
nop
jno
xchg
cmps
xor
dec
test
ss
jnp
pop
adc
stos
xchg
daa
cld
dec
mov
outs
stos
sub
inc
and
lods
pop
mov
mov
je
lock
das
mov
test
cmps
jbe
add
pop
and
push
push
inc
sub
fsubr
mov
test
scas
retf
add
pop
or
data16
xor
sar
sbb
loop
test
inc
jl
add
movs
push
clc
mov
in
mov
mov
hlt
xchg
lock
mov
into
and
(bad)
fsub
icebp
cli
mov
and
loopne
mov
lds
fs
add
push
cmp
retf
xchg
push
inc
add
sub
mov
fwait
jbe
popf
out
int
test
(bad)
into
out
xchg
push
xchg
sbb
jmp
adc
lods
inc
aam
sub
push
sbb
lea
arpl
fldcw
dec
and
dec
adc
push
push
hlt
xchg
cmps
pop
pop
inc
clc
ja
pop
enter
lock
fild
sbb
aad
movs
icebp
mov
mov
in
inc
add
cmps
into
or
xor
jmp
gs
(bad)
sahf
pop
sbb
jp
mov
js
mov
or
rcl
xchg
or
jo
lahf
sbb
movzx
lds
mov
cmp
add
push
xor
mov
sbb
mov
sbb
ds
dec
mov
mov
sbb
movs
mov
jmp
popf
imul
inc
and
retf
jge
pop
cmc
ins
and
mov
adc
outs
test
inc
pop
cmps
or
or
and
mov
sub
sbb
nop
sbb
pusha
stc
mov
fild
mov
jno
std
retf
int3
movs
js
lahf
jae
jns
ret
xor
rcr
mov
push
sub
out
mov
and
(bad)
pop
clc
dec
push
into
jge
add
rol
inc
iret
inc
in
mov
leave
xchg
int
fsubr
mov
pop
fidiv
(bad)
pop
stos
or
scas
out
imul
retf
out
jae
mov
in
stc
iret
sbb
push
loope
adc
pop
jb
cwde
push
call
dec
xlat
sbb
and
mov
ins
dec
mov
mov
cmp
jge
push
and
movs
push
cmps
mov
rcl
icebp
dec
inc
cmps
inc
and
sub
pop
pop
dec
lods
jbe
push
shr
mov
adc
cmp
dec
inc
and
sub
or
clc
ins
sbb
jl
sub
inc
ds
sbb
mov
sbb
iret
sbb
dec
push
sub
push
dec
mov
aaa
lock
jg
push
sbb
test
or
push
push
add
xchg
push
retf
lods
sub
lahf
pop
lds
xchg
jnp
scas
stc
hlt
jae
push
lahf
retf
mov
mov
sub
aad
(bad)
mov
jle
inc
push
in
jle
nop
icebp
dec
pop
push
repz
mov
lds
popf
dec
pop
sbb
dec
xchg
jns
and
call
push
jbe
push
xchg
mov
or
jmp
jmp
arpl
sbb
and
popa
ret
push
repz
in
icebp
cmps
dec
fsubp
loope
push
pop
xor
pop
sub
adc
(bad)
aad
cs
(bad)
leave
inc
shr
mov
mov
fwait
xchg
into
fnsave
scas
adc
jno
movs
popf
xor
adc
cmp
xchg
adc
xchg
cs
loop
icebp
and
inc
sbb
mov
ret
jg
cmp
ret
jg
cmp
mov
scas
cmp
jbe
xor
jp
rcl
jmp
add
mov
rol
(bad)
popf
movs
inc
aas
test
jne
or
mov
jns
addr16
mov
sub
xchg
xor
lods
pop
dec
xlat
dec
pusha
popa
mov
push
cmps
cmp
fdiv
mov
cli
in
mov
call
ret
dec
mov
jge
sahf
cmp
mov
(bad)
cmc
enter
daa
sbb
pusha
(bad)
in
invd
add
jno
shl
ins
mov
jbe
rcr
das
mov
xchg
sbb
mov
icebp
push
mov
inc
mov
mov
dec
mov
fadd
dec
pop
lock
lahf
scas
xchg
(bad)
jg
scas
mov
cmp
scas
imul
imul
cmp
ds
rcl
retf
mov
cmp
sbb
outs
xlat
cmps
stos
aaa
sbb
mov
ret
aas
add
xchg
cmc
ja
sbb
mov
inc
push
sbb
mov
lock
add
jmp
mov
xchg
sub
cmps
inc
mov
jo
cli
lock
dec
fwait
jno
and
fwait
mov
cmc
(bad)
lahf
pop
cmp
arpl
(bad)
cmc
sub
cmp
stos
mov
add
jecxz
inc
sbb
(bad)
pop
inc
add
adc
jmp
lds
es
jmp
(bad)
mov
repz
in
mov
sti
xchg
xchg
div
mov
leave
out
rcr
sbb
cmps
push
outs
add
mov
cwde
(bad)
nop
test
sub
xor
rcr
repnz
cmp
mov
bound
xchg
mov
aaa
mov
aaa
xlat
push
xchg
jge
(bad)
or
push
or
jle
mov
idiv
fstp
mov
sub
mov
sub
(bad)
dec
movs
std
dec
xlat
fwait
fwait
cmp
sub
les
shr
pop
pop
jo
jge
xchg
inc
mov
and
in
aas
xor
sbb
lahf
push
aam
shl
xchg
movs
or
retf
push
sub
mov
(bad)
fsub
push
nop
jmp
stc
scas
jno
add
sub
out
outs
pop
setne
retf
imul
clc
std
inc
jecxz
xchg
or
(bad)
icebp
mov
enter
and
mov
mov
jl
aam
js
or
lds
and
fistp
int
loop
xchg
cmp
aam
mov
push
les
nop
pop
rcl
mov
push
outs
sub
mov
cmp
lock
or
mov
jo
sub
xacquire
stos
hlt
sar
leave
sbb
mov
mov
neg
ins
adc
aad
sbb
xchg
icebp
dec
rol
jp
dec
pop
cdq
mov
dec
or
sar
int
add
lds
repnz
int
sub
(bad)
in
dec
mov
mov
cdq
loope
cmp
retf
dec
mov
bound
test
add
stc
sbb
sub
pop
inc
mov
aad
pop
cdq
ins
arpl
imul
hlt
ds
shl
sub
pop
(bad)
sbb
sbb
lock
out
cmc
mov
mov
sub
cmps
clc
lods
dec
adc
cmc
pop
enter
stc
(bad)
es
or
aaa
into
adc
cwde
push
xchg
js
push
ds
mov
mov
mov
fst
lea
inc
dec
stos
stos
out
jge
inc
leave
sub
inc
fimul
jmp
imul
adc
jmp
clc
mov
ds
pop
pop
jno
mov
aad
push
stc
mov
sbb
mov
outs
jge
lea
pop
test
jno
(bad)
and
repz
dec
push
adc
call
inc
aaa
int3
cld
nop
arpl
(bad)
ror
sbb
frstor
rcl
mov
arpl
push
jmp
cmc
ins
retf
rcr
cld
ss
push
jno
jns
cmp
jge
sub
fiadd
jge
nop
pushf
sbb
aaa
imul
jnp
(bad)
(bad)
sbb
and
clc
fwait
retf
mov
ja
retf
(bad)
repnz
out
lds
pop
jns
jno
and
mov
xor
jae
inc
in
mov
push
fs
test
xchg
or
fcmovnb
in
cmp
and
ret
sbb
push
shl
cdq
adc
and
in
retf
fstp
push
popf
popw
sti
js
jp
fs
xlat
in
sti
inc
(bad)
mov
shr
cmp
dec
pop
mov
mov
pop
cs
adc
push
add
inc
jnp
sub
mov
push
fild
(bad)
xlat
sbb
add
jg
outs
push
xchg
jo
dec
mov
scas
sub
popf
mov
cmp
jge
jmp
push
dec
push
fisttp
aam
cwde
or
push
push
cmp
lahf
dec
sbb
test
cli
push
movs
and
cmps
je
mul
ja
or
pop
in
xor
stos
call
fisttp
pop
lea
retf
fadd
jle
push
(bad)
ficom
out
inc
and
fwait
stos
std
js
dec
or
inc
shr
sbb
pop
jo
push
push
sub
or
retf
dec
adc
retf
mov
jnp
jno
pop
rcl
out
int
in
sbb
scas
pop
jb
push
sub
test
loop
repnz
aaa
(bad)
out
ficom
fstp
push
xchg
fwait
movs
jbe
je
cs
imul
mov
and
or
add
stos
dec
jne
mov
cmp
out
pusha
call
shl
cli
sahf
leave
mov
inc
mov
neg
(bad)
retf
push
gs
adc
cmps
dec
gs
mov
cmp
mov
cmp
cmps
in
sti
shr
jp
dec
hlt
cmc
lea
push
jg
sbb
pop
push
jp
jmp
and
stos
xchg
inc
xlat
mov
jns
adc
rcl
(bad)
pop
jb
inc
push
xor
imul
(bad)
or
xor
xor
lahf
iret
jmp
scas
fsub
enter
add
mov
test
ret
fwait
xchg
test
call
push
sub
add
mov
jnp
xchg
cmp
inc
jae
repz
test
push
vucomiss
cmp
xor
pop
cmps
out
push
test
int
movq
push
leave
leave
jnp
mov
in
aas
add
mov
jecxz
lods
popa
dec
dec
and
jecxz
test
fbstp
mov
in
pop
cwde
test
mov
fldz
sub
inc
je
aas
pop
push
cmp
(bad)
mov
clc
loope
fisttp
sub
pop
jnp
aaa
mov
imul
lods
add
ds
cmps
adc
fadd
jo
mov
loopne
mov
push
and
iret
out
sbb
add
dec
ins
xchg
shr
or
push
jno
retf
test
push
lds
in
ss
call
mov
in
inc
pop
jne
inc
and
(bad)
cmp
out
adc
xor
ficomp
dec
xchg
int
je
stos
arpl
cs
sub
retf
imul
outs
ss
scas
rol
jp
dec
arpl
sbb
not
(bad)
movs
test
sub
call
jmp
add
or
pushf
rcl
aaa
jmp
repnz
push
cs
ret
mov
cmps
adc
adc
fwait
imul
xchg
add
sub
fld
or
inc
movs
cmps
xchg
xchg
in
cdq
popa
and
sub
jle
xchg
sbb
mov
rol
popf
test
psubq
mov
mov
outs
push
lods
(bad)
loop
js
dec
mov
fstp
repz
dec
or
jbe
rcl
fs
mov
and
scas
xchg
pop
sbb
mov
dec
push
scas
pop
push
ins
add
jmp
xchg
cs
sti
jle
into
call
jns
push
cmp
lahf
mov
js
and
fwait
jp
push
mov
add
sub
pop
mov
retf
gs
outs
mov
mov
mov
dec
cmp
mov
int
mov
sti
jno
hlt
pop
sbb
aaa
inc
pop
shl
pop
inc
ds
dec
out
mov
shr
in
cmp
xchg
mov
out
jl
jmp
test
push
xchg
push
dec
adc
and
stos
or
sbb
repnz
icebp
fst
sahf
cld
xchg
xchg
fsub
jae
in
lock
push
ret
loop
mov
jl
repz
mov
into
or
xor
inc
cmp
pop
push
dec
sbb
and
mov
rcr
(bad)
sub
(bad)
adc
mov
inc
dec
std
out
imul
pop
enter
ja
dec
jp
sub
cmp
stc
sbb
pop
add
mov
movntq
out
call
mov
iret
push
int
and
xor
add
sub
mov
imul
mov
mov
ss
inc
aad
in
mov
xchg
or
xor
mov
scas
xchg
imul
imul
js
jnp
shr
xchg
mov
xor
mov
push
lds
jns
push
mov
push
inc
popa
push
fistp
iret
xchg
call
(bad)
cli
cli
aam
xor
xchg
mov
imul
cs
mov
sub
pop
fs
jae
push
push
cmps
mov
xchg
mov
lods
loopne
les
loopne
mov
xchg
movs
mov
xchg
les
(bad)
jmp
push
sbb
fidiv
movs
cdq
push
aas
ds
push
add
inc
jmp
xor
mov
aas
mov
cmp
out
out
(bad)
adc
xor
cmp
shl
xchg
test
repnz
jns
or
xor
repnz
jne
lock
es
dec
addr16
aam
xor
mov
fs
ins
mov
pop
mov
or
jecxz
mov
sbb
nop
mov
sub
stos
lock
fld
push
pop
adc
dec
mov
retf
movs
mov
jge
xor
(bad)
out
enter
into
loopne
inc
sar
into
imul
stos
or
inc
scas
mov
or
jmp
sub
std
xchg
jae
pop
pop
inc
test
cmp
sbb
popf
mov
fwait
adc
dec
stos
jg
mov
mov
jle
cld
dec
jmp
xchg
ins
fldenv
dec
loopne
mov
jne
jmp
push
cmp
sti
mov
mov
(bad)
test
xor
sbb
add
xor
ret
stc
pop
or
mov
mov
or
pop
into
hlt
fisttp
icebp
adc
dec
inc
push
or
popa
mov
sub
lock
xor
dec
pusha
push
stos
(bad)
adc
push
dec
imul
lods
mov
repnz
cmp
jecxz
push
ins
mov
and
ins
xchg
add
jle
push
std
je
loope
xchg
dec
mov
test
push
sbb
sahf
imul
mov
pop
jmp
ud2
adc
xchg
icebp
or
scas
mov
neg
inc
xor
mov
in
add
jg
xor
lods
iret
sbb
mov
int3
jbe
and
and
jecxz
std
cli
sbb
into
jecxz
(bad)
jmp
gs
ja
and
sub
cld
push
(bad)
sahf
test
jp
leave
push
xchg
out
lahf
xchg
std
mov
ja
push
iret
jns
xchg
in
inc
inc
jmp
inc
(bad)
(bad)
xchg
ins
pusha
adc
and
shl
rcl
shr
mov
inc
xchg
movs
cmp
fs
cdq
xlat
cmp
adc
shl
jge
push
cmps
stos
je
push
stos
popf
aas
cmp
add
xchg
adc
pop
cmp
test
ret
pop
or
and
or
fcom
inc
add
sub
imul
inc
add
jl
and
mov
pop
out
call
adc
cmp
push
push
ins
hlt
fistp
lahf
fwait
push
dec
mov
lock
arpl
dec
xor
iret
cmp
sti
sbb
fnstsw
inc
or
loope
dec
loope
outs
loop
mov
mov
pop
int
les
cmp
jns
add
shl
test
popa
mov
mov
add
xor
mov
adc
push
pop
je
pop
arpl
ds
inc
and
and
repnz
sub
lds
adc
dec
movs
aam
ins
retf
(bad)
fiadd
jo
hlt
inc
mov
mov
mov
or
sti
adc
jp
test
(bad)
jmp
xchg
neg
repnz
xor
add
aad
div
fdiv
mov
sub
idiv
stc
lahf
inc
les
push
es
lods
or
mov
es
pop
dec
xchg
in
hlt
or
xor
enter
iret
or
psraw
xor
retfw
dec
pushf
mov
inc
inc
pop
dec
fs
clc
retf
sahf
les
push
sub
xchg
icebp
dec
scas
sar
dec
mov
test
mov
add
push
scas
sub
or
push
xor
inc
mov
mov
outs
es
iret
mov
arpl
sbb
or
mov
cdq
mov
dec
xchg
xor
cmp
mov
jbe
or
inc
leave
sbb
pop
dec
adc
cmp
ss
mov
stc
inc
in
(bad)
fild
jp
cmp
lods
pusha
fld
ds
jnp
sar
pop
(bad)
(bad)
push
cmp
adc
dec
clc
loopne
cmp
mov
mov
sbb
pop
imul
leave
loopne
test
out
int
(bad)
out
ror
add
(bad)
cmps
daa
jnp
rol
adc
push
rcr
jae
adc
ins
mov
ret
(bad)
clc
rcr
or
mov
adc
enter
hlt
mov
mov
add
jge
jle
fldenv
(bad)
clc
xor
out
fisttp
xchg
gs
(bad)
mov
push
push
in
push
pusha
mul
jge
lea
push
sar
shl
ret
pop
push
xchg
jbe
jbe
pop
add
push
pop
mov
sahf
push
ret
jnp
xchg
xor
pop
jecxz
movs
fcmovnu
(bad)
bound
cmps
dec
retf
pushf
mov
popa
sub
retf
mov
push
sar
cmp
sub
aas
std
fsubr
in
xor
cdq
xor
in
repnz
jmp
pop
xlat
cli
xchg
out
xor
jbe
pushf
sti
jmp
or
out
xor
icebp
push
xor
in
and
push
fadd
(bad)
fs
xlat
inc
mov
dec
rcr
in
dec
test
xor
mov
mov
clc
inc
sub
std
(bad)
cmp
outs
lods
idiv
rep
sub
inc
je
sub
mov
push
xchg
andps
or
or
outs
push
imul
mov
adc
leave
cld
aam
es
mov
pop
call
dec
add
jns
ja
lahf
lods
sar
mov
cmp
adc
sub
jns
sbb
inc
in
cwde
stos
dec
cwde
xchg
cmps
in
ds
xchg
mov
repnz
shr
test
shl
popf
push
call
add
adc
sbb
scas
fist
fwait
push
imul
cmp
add
cld
cmp
dec
sahf
inc
rcr
sub
and
daa
fxch
mov
xor
add
pop
mov
(bad)
jle
ins
(bad)
jbe
dec
fstp
adc
ret
ss
rcr
lods
adc
outs
mov
stc
xchg
retf
mov
out
lock
mov
out
ret
sub
push
push
jl
out
sbb
xchg
cmp
xor
rcr
xor
and
push
adc
mov
sub
adc
jb
jecxz
stos
adc
arpl
sub
and
xchg
push
mov
ja
nop
repz
hlt
rcr
imul
push
mov
int3
lea
sti
push
popf
(bad)
jmp
pop
mov
adc
retf
xchg
jo
or
test
mov
ins
jecxz
outs
bound
add
mov
ss
sbb
sub
rcl
xchg
jle
ficom
inc
mov
mov
cmc
call
(bad)
xor
(bad)
jbe
ja
aad
jns
cmp
loope
test
push
in
ss
sahf
or
pusha
push
sar
aaa
std
pop
xchg
push
mov
aad
jge
pop
sti
out
sbb
pushf
jne
jg
arpl
out
mov
push
jle
cli
jg
outs
adc
push
xor
loopne
int3
pop
nop
test
cdq
addr16
jmp
push
psrlw
movs
jae
mov
xchg
push
adc
pop
add
xchg
stc
sub
mov
rol
hlt
cmp
shl
pushf
jmp
inc
iret
fwait
push
cwde
std
aam
scas
icebp
mov
dec
call
inc
ja
push
cmp
mov
or
jge
and
pop
lahf
xadd
ins
push
and
shr
bound
push
out
mov
mov
retf
adc
jp
push
nop
test
sub
cdq
adc
or
clc
and
lock
mov
push
jmp
pop
lods
xchg
fidivr
jbe
cmp
sub
fcmovnb
aam
push
and
lods
push
jno
sub
(bad)
xor
loop
fs
sub
mov
sti
nop
push
test
leave
adc
test
xchg
inc
mov
mov
sub
sahf
out
push
hlt
push
aaa
in
std
jecxz
rcr
push
lock
icebp
inc
cmps
into
inc
mov
mov
sub
jns
jnp
ja
jae
xor
jb
mov
dec
jmp
ja
inc
jbe
addr16
ds
jnp
jne
pushf
sar
(bad)
fdiv
sar
pop
pop
jge
jno
mov
mov
retf
mov
pop
out
fdiv
out
mov
add
(bad)
mov
call
out
popa
mov
cli
leave
adc
js
stos
int
or
pop
cdq
mov
lock
mov
jne
cmovb
dec
push
test
das
cmp
ret
in
into
xor
int3
push
dec
or
outs
(bad)
loop
inc
push
push
or
mov
sub
movs
mov
jg
push
leave
adc
mov
push
xchg
fucomi
or
xor
push
(bad)
std
outs
sysret
data16
adc
ret
mov
out
lods
enter
stc
cmps
rcl
push
jbe
mov
clc
inc
pushf
sub
stc
imul
stos
pop
cmp
enter
clc
mov
sbb
cmp
test
mov
jb
or
jmp
dec
scas
mov
xchg
mov
pcmpeqd
in
sub
xchg
imul
jmp
mov
and
hlt
(bad)
jno
jae
add
loope
movs
leave
cmp
pop
xor
sbb
int3
xchg
test
and
outs
cmp
or
jmp
call
lock
mov
test
je
fwait
leave
(bad)
push
xchg
dec
or
aad
call
popa
retf
clc
mov
xor
push
jmp
js
adc
mov
lods
scas
ret
or
addr16
enter
adc
inc
gs
gs
in
lds
or
ja
jge
xor
jno
pop
mov
push
hlt
std
lock
shl
test
mov
inc
push
div
xor
jle
cli
pop
bound
push
inc
cs
inc
xlat
cmp
xor
mov
fcom
mov
xchg
enter
dec
nop
ss
add
fcmove
pop
or
ds
sub
mov
and
out
mov
mov
leave
popf
rcl
loop
dec
dec
cmp
mov
out
sub
sub
xor
xor
xor
xchg
and
mov
xor
xchg
pop
ror
inc
dec
ins
xchg
repz
jge
mov
idiv
jne
cmp
jo
sbb
cmc
scas
inc
push
popa
fs
shr
pop
pusha
mov
adc
mov
pop
gs
mov
test
fsubr
ja
test
fucomp
and
scas
pop
adc
popa
mov
clc
fimul
push
cs
mov
pop
les
into
cdq
xor
pusha
movs
mov
daa
push
xchg
adc
mov
mov
sbb
cmp
mov
mov
leave
cdq
xchg
sub
or
test
dec
mov
retf
ins
sub
sub
sbb
push
jle
(bad)
jo
xor
fs
stos
xor
mov
ret
call
cwde
xchg
adc
adc
jnp
movs
pop
sbb
retf
je
out
pop
js
fisub
sub
dec
or
fwait
ja
pop
sub
sahf
cmp
(bad)
jno
call
out
xor
call
jge
mov
push
sahf
sbb
sbb
icebp
inc
int3
imul
add
ss
adc
jmp
hlt
aad
inc
sub
out
out
iret
(bad)
js
sbb
mov
sbb
cmps
jge
cmp
or
sub
fdivr
imul
call
leave
and
dec
add
jecxz
inc
adc
inc
mov
call
test
je
int
dec
push
int
jne
cmps
arpl
mov
xor
cmp
adc
in
ret
dec
dec
cld
jae
jmp
aaa
test
repz
(bad)
push
mov
mov
pop
gs
fsub
xlat
add
fwait
inc
shl
pop
mov
fisub
enter
xchg
shl
xor
jae
jge
fdivr
push
cmp
sub
add
inc
nop
dec
adc
mov
nop
and
xchg
fiadd
xor
pop
popf
rcr
stc
enter
inc
in
push
jb
push
fld
dec
mov
es
mov
(bad)
pop
leave
xchg
xor
dec
lock
sub
nop
(bad)
test
lahf
sbb
push
mov
xchg
es
jmp
rcl
ficom
adc
sbb
xor
or
xor
test
inc
and
cmp
int
push
hlt
adc
ret
add
sahf
std
cwde
sbb
gs
mov
sbb
out
jnp
xor
add
(bad)
push
daa
add
lods
xchg
call
cwde
xor
cdq
rcl
fstp
int
lods
ret
aam
inc
int
sbb
adc
mov
inc
adc
xchg
test
mov
add
imul
cli
xlat
jnp
pusha
out
and
mov
movs
ret
mov
pop
xlat
xor
push
pop
repz
pop
mov
mov
fsubp
cmp
sub
jg
xor
out
je
mov
adc
lods
sbb
jo
adc
mov
xor
hlt
or
dec
mov
in
in
in
mov
pop
rcr
add
or
inc
out
inc
sbb
mov
(bad)
ss
pushf
xor
test
lods
(bad)
into
push
out
push
(bad)
in
outs
sar
push
in
sub
aas
(bad)
int
mov
dec
pop
clc
scas
lods
cmp
es
and
cmp
hlt
leave
dec
xor
sub
test
dec
or
out
shl
les
(bad)
adc
jnp
out
test
mov
pop
int
outs
mov
pop
pop
jno
shr
test
jp
dec
mov
pop
xchg
pusha
es
dec
or
call
mov
mov
push
test
cmp
jno
stc
inc
fs
jne
repnz
jge
ret
(bad)
stos
retf
push
and
aam
shr
jb
or
cs
mov
sub
je
push
push
mov
xchg
sub
mov
nop
ins
int3
xchg
xor
test
ja
xlat
sub
nop
mov
or
fild
add
popa
cs
fcmovbe
lea
enter
push
call
outs
xchg
xchg
and
cmp
ja
xchg
xor
sbb
push
sbb
lds
sahf
fwait
cs
test
push
lds
mov
ins
push
outs
jmp
call
adc
outs
ret
push
push
lahf
scas
test
cmp
inc
jmp
add
pushf
clc
repz
jmp
ret
or
outs
jo
mov
dec
mov
inc
mov
add
jnp
mov
pushf
adc
lods
sbb
(bad)
cmp
jmp
repz
jge
pop
neg
movs
sub
sti
mov
shl
inc
pop
xchg
cmovp
lds
xor
cmp
sahf
movs
jo
les
out
fiadd
fldenv
(bad)
idiv
jecxz
pop
popf
test
movs
add
jmp
test
popa
push
push
dec
retf
adc
adc
sub
ss
in
mov
pop
inc
sbb
dec
mov
mov
and
sub
mov
jmp
jmp
cmp
push
mov
mov
cmp
inc
iret
mov
adc
xchg
ins
sbb
push
not
cmp
jg
jmp
es
test
jecxz
popa
lods
xchg
pop
xchg
stos
sub
pop
sbb
push
(bad)
imul
adc
shr
sbb
sub
shl
ret
arpl
adc
jne
mov
outs
mov
mov
dec
ret
jo
test
jg
cmp
xchg
popa
mov
and
pop
or
pushf
add
adc
popa
ret
adc
daa
aad
lahf
inc
xchg
adc
lods
dec
rep
pushf
scas
shr
jbe
rcl
cmc
test
cmp
lods
fsubr
cmp
pop
retf
cmp
cmp
sub
and
jecxz
aaa
mov
inc
inc
fadd
ins
test
pop
sbb
dec
daa
in
push
je
(bad)
popa
sti
mov
test
test
inc
xchg
cmp
adc
sub
ins
in
in
adc
adc
xlat
outs
add
mov
ror
jecxz
retf
pop
fsubr
rol
mov
add
pop
mov
inc
das
cmc
dec
(bad)
in
and
mov
xchg
jle
mov
mov
mov
scas
inc
scas
mov
mov
(bad)
or
test
outs
lods
lods
cmps
das
mov
jle
lods
sub
mov
out
ja
mov
out
(bad)
adc
lods
test
pushf
ret
into
cwde
mov
mov
pop
retf
lea
pop
or
adc
js
pop
cmp
(bad)
sbb
add
cmp
sub
and
ins
jo
push
mov
jbe
jge
dec
ss
ins
sbb
cld
dec
xchg
push
or
adc
test
lods
pop
mov
lods
inc
(bad)
sub
xor
mov
fdivrp
pop
cmps
push
(bad)
jl
ret
(bad)
out
lds
arpl
es
sbb
mov
iret
and
push
inc
jg
mov
ret
mov
int3
adc
es
fwait
je
jns
addr16
add
xchg
sub
push
pop
pop
in
and
pop
in
shl
jg
sub
out
aad
jge
ficom
push
push
mov
fwait
mov
lds
mov
push
or
fidivr
mov
(bad)
adc
cmp
gs
pop
or
int3
cmp
jmp
mov
pop
cmps
leave
pop
lock
dec
dec
mov
adc
int3
ss
xchg
sub
mov
into
repz
sahf
into
(bad)
inc
and
mov
cmp
xchg
mov
jo
push
cmps
fld
movs
jp
rol
pop
inc
pop
(bad)
outs
or
jp
jns
in
cmp
jno
std
lahf
test
sahf
and
(bad)
in
fimul
repnz
and
aaa
fs
and
jns
(bad)
bts
push
xchg
xor
cmps
movs
add
scas
mov
pop
jmp
call
test
mov
fprem
pop
sbb
xchg
add
cmp
xor
fwait
mov
bound
sahf
inc
test
fidivr
stc
adc
sub
ds
aaa
out
push
push
push
aaa
mov
pop
sti
ficomp
xchg
cld
mov
imul
loopne
mov
retf
and
loopne
mov
loop
xor
gs
add
retf
ins
call
mov
clc
clc
xor
mov
or
inc
or
xor
push
enter
rcl
shl
(bad)
retf
and
bound
sub
fld
lods
sbb
add
outs
daa
leave
inc
test
outs
pop
ss
jmp
push
imul
mov
cli
outs
test
xor
mov
adc
push
xor
add
push
rol
jmp
xchg
mov
js
repz
add
adc
sti
push
repz
jae
aas
pop
popa
outs
sub
loopne
and
in
inc
int3
pop
arpl
mov
push
mov
mov
ret
test
sub
adc
in
mov
cdq
movs
retf
movs
dec
pop
or
aad
fwait
sbb
test
jns
and
out
mov
cmps
mov
add
mov
mov
jmp
add
repz
hlt
sub
scas
xchg
scas
(bad)
lds
(bad)
sub
ror
stos
inc
mov
je
fwait
jne
sbb
leave
mov
dec
(bad)
aas
mov
lahf
hlt
sub
jg
xchg
cmp
out
inc
xchg
ret
or
jns
xchg
fbstp
xchg
jno
mov
test
imul
pop
sub
jnp
fcomp
in
xor
mov
adc
in
cmp
je
lahf
cmp
shr
test
pop
pop
scas
loop
dec
mov
js
push
mov
and
ins
adc
or
ret
(bad)
push
jle
out
add
outs
into
push
adc
sub
fnsave
gs
clc
xchg
mov
retf
fst
push
mov
xlat
add
ficomp
or
ds
outs
in
rcr
je
das
icebp
dec
mov
cmps
dec
push
mov
adc
add
stc
aaa
shl
sar
inc
and
or
div
mov
leave
adc
loope
xchg
sub
jmp
lds
gs
jge
fmul
jl
push
test
or
sbb
xor
call
fsub
cmps
pop
mov
jae
inc
icebp
(bad)
adc
jg
(bad)
cld
inc
aad
test
out
push
xchg
rcl
cmps
mov
into
sbb
sahf
test
retf
ins
div
pop
xor
adc
int3
push
sbb
or
addr16
mov
arpl
retf
xchg
cmc
(bad)
mov
cmp
aam
shl
xchg
lods
lds
mov
sti
sbb
push
aam
xor
cmps
add
dec
add
push
and
in
and
dec
inc
inc
jg
jecxz
and
xor
push
push
imul
xchg
loopne
mov
xchg
xor
cmps
inc
xchg
shr
pop
push
fstp
sub
daa
les
mov
inc
ficom
sti
cli
les
push
rcr
dec
rol
mov
dec
pop
aam
mov
mov
in
push
imul
sbb
add
(bad)
push
pop
bnd
loope
addr16
js
(bad)
js
ret
jb
sub
rcl
mov
out
ja
leave
pop
test
lock
call
sub
js
lea
inc
imul
pop
adc
movs
jae
pop
adc
mov
ins
daa
arpl
out
fsub
loope
inc
dec
mov
mov
mov
out
out
xchg
mul
add
jmp
cmps
adc
ds
push
bound
sbb
daa
jmp
push
inc
retf
dec
out
and
repnz
pop
in
adc
xlat
xor
inc
cld
and
stc
fnstsw
mov
repz
rcl
push
mov
jge
mov
or
in
fidivr
in
dec
mov
(bad)
inc
mov
fs
jnp
push
pop
pop
out
pusha
xor
xchg
div
add
push
sub
test
push
aam
popf
jg
sysret
xor
xchg
xchg
(bad)
xor
pop
shl
(bad)
mov
sub
idiv
inc
loope
dec
push
clc
jmp
fsubr
jne
sub
hlt
outs
and
add
push
xchg
cmps
pop
addr16
mov
xchg
push
jae
adc
pop
dec
dec
jmp
push
dec
mov
loope
loopne
push
shl
add
push
jmp
sbb
adc
sbb
push
add
(bad)
inc
jo
fwait
adc
aad
jle
mov
mul
sub
pop
cmp
and
cdq
dec
jo
sub
aas
jae
xchg
xor
inc
fcmove
je
cdq
jno
mov
mov
add
fbld
or
dec
repnz
mov
xor
inc
js
adc
fild
jp
sub
shr
pop
in
(bad)
dec
(bad)
mov
xchg
sahf
mov
out
mov
test
pop
and
inc
or
push
xor
bound
dec
mov
stc
xlat
xchg
adc
sbb
fsub
push
retf
pop
adc
cs
mov
push
lds
fist
fnstcw
popa
les
sub
cmp
sbb
adc
ins
adc
test
pusha
jecxz
retf
shl
loop
adc
cdq
jge
sti
dec
sbb
dec
ficom
aad
shl
xlat
ret
pop
xchg
and
int
lds
mov
pop
js
push
fdivr
inc
jnp
cmps
pop
pushf
push
call
or
pop
mov
xor
inc
cwde
idiv
fisub
jo
jo
sbb
fcom
add
cli
sub
pop
int3
ds
or
xor
sub
or
xchg
mov
cmp
sbb
in
mov
lock
pop
mov
sub
fnstenv
pop
pusha
test
bound
in
rcr
test
inc
dec
dec
xchg
repz
sbb
sub
addr16
mov
and
adc
cwde
jae
(bad)
fiadd
mov
add
and
cmp
pop
jg
inc
push
fst
dec
jnp
push
mov
fwait
jb
arpl
dec
sub
sub
fiadd
sbb
pushf
jb
inc
jecxz
push
not
inc
fldenv
test
sbb
xor
mov
jne
push
ins
dec
xor
pop
lods
es
jbe
inc
les
test
push
push
xchg
cwde
cdq
lods
and
sub
inc
outs
aam
mov
sbb
loop
dec
neg
stc
(bad)
(bad)
loope
stc
call
pminsw
fidivr
adc
lds
aas
sbb
mov
dec
xchg
or
and
test
inc
leave
push
sbb
mov
push
lods
gs
sti
jo
iret
mov
jge
mov
shr
and
das
cmc
(bad)
rcl
pop
sbb
jg
cdq
dec
mov
aad
mov
fist
in
inc
pop
sub
jmp
clc
js
push
push
jb
adc
lds
cmp
push
mov
aad
scas
lea
inc
pop
push
icebp
xlat
addr16
or
in
daa
cmp
(bad)
cmp
aaa
es
adc
push
push
rsm
sub
shl
je
cmc
stos
xchg
mov
push
outs
mov
addr16
and
ret
and
mov
pop
(bad)
inc
lds
cmp
push
leave
inc
add
dec
scas
fmul
lea
adc
call
add
bound
lock
ja
mov
lahf
mov
rol
out
dec
sbb
xchg
jg
pop
add
sub
std
(bad)
sbb
cmp
add
inc
inc
cmp
fcom
mov
(bad)
dec
xchg
(bad)
iret
mov
or
pop
xchg
into
inc
mov
lea
(bad)
bnd
sbb
push
ret
rcr
nop
mov
sbb
pushf
inc
scas
mov
and
jmp
test
mov
daa
imul
aaa
adc
mov
xchg
jecxz
adc
sub
cmp
daa
cmp
js
div
mov
aaa
mov
call
sbb
mov
jnp
jo
popf
test
scas
mov
mov
int
pop
pop
jmp
test
push
lods
sbb
in
add
add
and
(bad)
shl
sub
adc
rcl
(bad)
(bad)
cmp
shr
pop
test
cmc
(bad)
fs
pop
jg
cmp
cli
mov
mov
mov
nop
sub
sub
outs
cs
sti
or
xchg
add
mov
movs
sbb
inc
iret
adc
push
or
add
add
call
jbe
(bad)
xchg
mov
stos
mov
lock
inc
jae
cmps
fistp
push
xor
and
dec
scas
mov
inc
mov
nop
mov
mov
pop
sbb
cmp
cdq
push
inc
inc
or
add
ss
scas
scas
in
ds
out
aas
arpl
icebp
jp
sti
xor
jmp
xchg
pop
inc
pushf
outs
clc
lea
cli
pop
scas
int
cmp
dec
aas
out
std
(bad)
pop
and
mov
jl
stc
out
inc
xor
dec
mov
shl
xchg
cmp
adc
push
push
push
mov
pop
cmp
leave
cmp
cmp
push
test
nop
scas
fwait
push
mov
stc
ror
ins
cli
out
pop
mov
enter
into
pushf
push
dec
or
xchg
dec
call
cs
dec
sub
mov
cwde
bound
in
fisttp
outs
mov
adc
lods
test
cli
push
or
movs
mov
mov
cmps
mov
inc
mov
adc
pop
xchg
aam
ds
jecxz
mov
or
jnp
dec
mov
xor
out
aad
inc
xor
mov
adc
inc
(bad)
xchg
sub
push
dec
cwde
dec
pop
adc
fistp
push
out
pop
repz
ins
in
ins
loop
sbb
rol
scas
sbb
repnz
and
xchg
jge
jnp
sbb
push
outs
xchg
adc
int
xor
ja
(bad)
xchg
retf
lock
xor
arpl
sbb
mov
jo
out
std
hlt
or
cmp
outs
xchg
sbb
add
inc
dec
mov
mov
bnd
and
cmp
test
les
gs
jecxz
ret
xchg
(bad)
shl
out
and
clc
ret
mov
sbb
cmp
jno
sub
fmul
xlat
mov
jbe
nop
int3
addr16
add
cmp
gs
rcr
call
pop
dec
inc
mov
mov
adc
xchg
add
jp
in
mov
mov
add
jns
push
std
arpl
nop
pop
daa
sbb
push
adc
in
arpl
adc
in
add
mov
mov
lods
sbb
pop
rcl
push
ins
adc
cmp
and
loop
dec
add
add
aam
ret
mov
dec
push
cdq
enter
test
fsubr
jnp
or
adc
xor
mov
pandn
mov
iret
cmps
nop
int
aaa
call
cld
fiadd
fild
bound
xchg
ret
push
pop
movs
pop
in
and
fdivr
push
fist
and
xchg
mov
sbb
rcr
pop
leave
out
stc
xchg
inc
cmp
jo
adc
inc
ret
push
sbb
jecxz
in
in
add
fld
movs
das
aad
and
call
xor
in
push
push
aas
push
lea
je
sahf
fdivrp
cmps
outs
sub
movs
push
addr16
or
mov
pushw
xchg
sbb
sbb
sbb
push
mov
cmps
loopne
ds
jo
cmc
loopne
xor
inc
call
in
bnd
jbe
daa
jmp
repnz
xchg
and
nop
inc
(bad)
jmp
mov
sbb
test
mov
scas
out
push
ds
jnp
xor
enter
mov
xchg
aaa
add
xchg
retf
mov
xor
jae
stos
mov
mov
add
dec
iret
xor
sub
mov
and
cmp
inc
clc
mov
pop
mov
xchg
pushf
mov
stc
cmp
pop
ret
lods
shl
cdq
pop
cmps
test
addr16
push
(bad)
push
mov
loope
cmc
mov
sbb
jno
arpl
mov
mov
arpl
into
mov
cmp
sub
add
xchg
add
mov
or
or
cmps
lods
add
je
lahf
sar
xchg
cli
imul
scas
cld
ss
sbb
or
inc
jge
jmp
popa
xchg
mov
mov
mov
mov
sub
lods
stos
out
sbb
je
push
push
test
push
push
aaa
push
test
retf
daa
push
xor
lds
lea
and
ins
hlt
loopne
fs
push
es
in
xor
nop
aad
sbb
and
mov
arpl
in
aam
int
dec
push
push
ret
xchg
xchg
adc
push
jp
jle
rcr
sub
inc
fcom
dec
push
popa
add
mov
dec
cmps
and
sbb
sub
or
push
shl
pop
dec
std
mov
ja
mov
sbb
mov
xchg
inc
fstp
rcl
fdivr
and
movntps
cmp
push
popf
jp
gs
mov
mov
in
ret
xchg
cwde
sbb
outs
mov
lahf
jmp
push
xchg
jb
(bad)
jl
xor
xchg
aad
and
sub
and
test
imul
aad
pop
cmp
pop
popf
xchg
das
cli
mov
xsha1
lds
daa
stos
or
and
iret
or
mov
popa
jmp
mov
(bad)
shl
sub
mov
adc
and
imul
popf
push
sbb
or
jo
add
push
fdivr
call
outs
and
loope
xchg
repnz
jp
clc
cld
xor
bound
vfnmadd231ss
imul
or
cmp
fs
gs
sbb
mov
sbb
pop
repz
inc
gs
pop
cli
cmp
xchg
cmp
mov
jnp
mov
call
cmp
sbb
popf
out
push
ds
or
cs
sub
sub
icebp
js
(bad)
fiadd
jnp
ss
in
sbb
repnz
mov
test
loopne
call
les
sbb
pop
fdivr
cmp
aaa
ins
mov
inc
lahf
dec
push
jle
ficom
jns
rcr
pop
cmp
clc
cmp
fcom
repz
jmp
repz
inc
arpl
xchg
bound
pop
inc
xchg
add
sub
cmp
jb
push
push
jo
adc
dec
jb
xchg
jl
mov
jbe
cmp
mov
adc
mov
adc
mov
es
mov
scas
out
push
out
pop
pop
and
and
xor
pop
int3
stos
mul
pop
xor
or
mov
xchg
loope
xor
out
and
adc
mov
aaa
xchg
mov
pop
jl
vsqrtss
hlt
(bad)
pop
dec
imul
ds
lahf
stos
pop
mov
jo
adc
push
mov
jae
xchg
popa
mov
push
and
jb
popf
mov
inc
sbb
cld
pusha
dec
sbb
ja
mov
int
rcr
cmps
push
cmp
sbb
jp
jno
mov
ret
sti
leave
outs
and
std
and
pusha
xor
loopne
add
add
call
rcr
loopne
out
ficomp
sub
push
loopne
inc
out
(bad)
lods
les
cmp
ins
lds
fsub
loope
aas
xchg
dec
push
fidivr
call
rcr
inc
mov
mov
inc
adc
adc
add
das
xchg
xlat
gs
shr
ja
push
xchg
inc
xor
leave
cmps
pop
mov
adc
jo
fisttp
sub
adc
(bad)
dec
(bad)
push
ja
pop
ss
xor
adc
sub
fidivr
and
imul
jge
call
call
jbe
call
dec
popf
ficom
pop
push
cli
mov
test
ror
out
ins
xor
add
cmc
add
ja
inc
jge
lahf
jg
or
loop
cld
dec
mov
fsubr
mov
push
mov
es
test
jmp
mov
push
sub
add
xor
gs
stos
cs
lock
sub
cld
mul
inc
(bad)
jae
bound
jne
retf
jl
sub
dec
fcomp
cmps
jle
das
jmp
xchg
push
sub
sbb
mov
cmps
dec
dec
add
mov
sti
fldcw
mov
icebp
sbb
in
jge
add
cli
leave
sub
cmp
dec
inc
aaa
dec
add
ret
adc
cmp
in
cmp
pop
mov
xchg
dec
jno
add
test
xchg
jb
div
cli
xor
sbb
ds
outs
sbb
fimul
loope
fst
test
fst
fmul
in
mov
jb
or
inc
sub
inc
lahf
aad
and
push
cmc
ins
push
js
or
aas
imul
mov
ficom
sbb
lea
cwde
pop
ret
fld
push
mov
inc
mov
mov
jmp
(bad)
aas
sbb
movs
sbb
or
rol
sub
dec
arpl
sti
call
xchg
or
not
nop
xchg
test
mul
mov
loopne
call
push
push
in
shl
test
push
jne
test
(bad)
pop
sbb
add
dec
rcr
je
into
lock
mov
push
imul
test
mov
mov
push
mov
mov
mov
(bad)
mov
fnstsw
or
push
repz
inc
es
mov
out
xor
scas
push
push
scas
call
sub
xchg
or
cdq
dec
xchg
sub
push
test
sub
fnstcw
mov
inc
inc
sbb
inc
(bad)
inc
or
mov
cmc
mov
or
sbb
int3
into
push
mov
adc
iret
push
sbb
push
fsubr
mov
test
int3
jmp
xchg
pop
das
bound
jne
or
dec
jmp
ins
jns
xchg
mov
jl
mov
mov
push
or
dec
ja
and
push
add
mov
pop
lahf
add
stos
inc
mov
and
and
mov
jmp
call
test
adc
pop
mov
add
enter
sahf
loop
sbb
out
in
imul
rcl
mov
ds
jo
fnstenv
sar
repz
inc
arpl
rol
adc
repz
mov
hlt
mov
xchg
in
mov
test
je
test
fsub
ds
or
iret
or
jmp
sub
mov
and
xor
hlt
push
mov
pop
retf
call
adc
fnstcw
xor
outs
fs
outs
or
lods
pop
into
or
stos
xor
cmp
loopne
sbb
push
dec
test
aad
cwde
add
les
jne
xor
les
fsub
sbb
test
pop
push
(bad)
jmp
push
mov
mov
mov
aaa
adc
retf
dec
test
cs
mov
push
dec
jns
stos
xor
mov
ins
sbb
clc
adc
and
stos
sub
popf
mov
sar
add
pop
sbb
lea
sti
jg
lahf
les
mov
bound
int
(bad)
mov
(bad)
movs
mov
add
sub
imul
xor
jle
out
repnz
xchg
lahf
in
pop
out
fsubp
movaps
sbb
mov
in
xchg
dec
mov
xchg
jne
mov
xor
div
cmp
xor
pop
aas
jne
sti
push
lds
sbb
div
push
mov
stos
push
std
setle
arpl
sub
sbb
into
retf
jecxz
mov
das
out
and
hlt
dec
sti
dec
leave
push
(bad)
mov
mov
adc
mov
adc
lahf
arpl
xchg
push
dec
adc
mov
leave
or
jmp
imul
shl
outs
fsubr
js
push
add
add
sahf
jmp
add
dec
scas
mov
inc
(bad)
outs
mov
stos
pop
movs
(bad)
pusha
pop
daa
xor
add
adc
inc
popf
ja
out
(bad)
lahf
inc
lods
mov
xor
psubusb
hlt
sub
sub
mov
pop
stos
test
sahf
dec
int3
mov
test
adc
fstp
sar
not
gs
or
sub
maskmovq
test
mov
repnz
out
push
mov
bound
jmp
and
mov
or
repz
sbb
inc
sub
cld
nop
mov
outs
xchg
mov
shr
dec
fwait
rol
mov
imul
xor
hlt
adc
and
push
xchg
inc
test
cmps
loop
xor
cmps
and
jo
dec
pushf
fcomp
sub
rcr
jmp
mov
push
dec
add
(bad)
push
shl
adc
jg
pushf
scas
or
dec
adc
mov
and
movs
mov
adc
push
movs
xchg
sbb
or
xor
add
lods
scas
jge
cmps
mov
mov
mov
pop
into
in
aaa
xlat
test
in
jp
sub
int
scas
xor
mov
(bad)
(bad)
push
in
ss
(bad)
(bad)
addr16
jmp
sti
shr
je
imul
push
inc
test
jbe
add
pop
or
xchg
sbb
arpl
retf
iret
push
dec
retf
(bad)
sub
push
pop
(bad)
xor
test
lea
test
in
sub
test
rcr
in
(bad)
int3
dec
(bad)
or
dec
arpl
pusha
call
dec
not
movs
lock
adc
add
cmp
jbe
fist
iret
enter
sbb
dec
mov
push
inc
cmp
imul
je
icebp
lea
gs
cdq
mov
dec
enter
xor
sti
nop
mov
pop
cmc
cmp
arpl
cwde
xchg
inc
mov
cmp
jno
sbb
add
cmp
retf
mov
or
pop
mov
lahf
jno
cmps
lods
inc
in
in
lahf
mov
movs
fld
mov
das
fcomp
sub
sbb
arpl
inc
fs
cmp
mov
xchg
jne
pop
das
jbe
retf
icebp
cmp
push
nop
sbb
test
dec
js
(bad)
fisttp
repnz
or
mov
cld
out
(bad)
les
jb
loopne
dec
(bad)
arpl
mov
xchg
dec
test
xor
push
addr16
mov
aaa
mov
call
or
xchg
pop
(bad)
repz
shr
inc
imul
and
adc
cmps
mov
or
cmp
pusha
adc
inc
icebp
cmp
fdiv
ficom
jmp
lods
sub
lds
cwde
adc
push
js
test
cmp
cmp
pushf
scas
and
pop
cld
into
sbb
mov
cmps
or
lods
jg
fsub
test
les
lods
push
enter
and
mov
ja
jg
add
jp
push
jge
je
adc
sbb
mov
jecxz
addr16
movs
addr16
ins
je
gs
jmp
retf
jbe
movs
mov
xchg
mov
jb
pop
mov
stos
jno
enter
dec
or
and
enter
cmp
sub
out
push
xchg
push
lods
push
adc
nop
nop
rcl
push
xor
dec
pop
xchg
test
mov
ins
jl
xchg
xchg
je
lock
cs
xchg
jnp
inc
leave
pop
(bad)
xor
sub
xchg
stos
pop
sbb
jg
cmp
(bad)
cmp
aam
in
xchg
xchg
inc
mov
and
jl
frstor
sbb
add
rcr
jae
mov
mov
in
xor
pushf
mov
mov
mov
loope
ror
add
sbb
and
mov
out
repnz
sub
inc
enter
sub
jmp
ficomp
enter
or
jp
pop
mov
fucom
jle
ja
test
rcr
xor
inc
(bad)
cld
xchg
sbb
hlt
test
and
sub
or
int
sub
retf
inc
ss
fwait
out
sub
add
fsubr
dec
rol
fwait
add
xor
icebp
push
xchg
cmp
mov
jl
scas
test
sub
sub
ja
aaa
cmc
shr
icebp
call
xchg
cs
or
inc
sub
aaa
shl
outs
popa
xor
xor
fmul
jno
sub
(bad)
aam
sub
or
mov
mov
ror
ret
mov
xchg
sbb
in
lahf
nop
mov
xchg
js
rcr
or
push
sbb
adc
or
inc
xchg
mov
and
xor
jge
pop
fwait
cmp
out
add
fs
lods
mov
add
rcr
cmps
aam
aam
pop
jbe
jle
lods
sbb
or
pop
adc
call
in
xor
dec
imul
or
dec
sbb
sti
rcl
cmp
in
mov
sub
arpl
sub
and
out
lea
or
loope
and
push
rol
in
xor
mov
(bad)
sub
pusha
adc
cmp
in
in
pop
dec
or
shr
rcr
xchg
pop
jmp
hlt
mov
clc
cdq
ins
test
popa
xor
mov
pop
stc
pushf
mov
jnp
push
dec
test
cmp
dec
dec
enter
retf
(bad)
adc
ret
fnstcw
in
ficomp
(bad)
out
xor
test
pop
icebp
data16
sub
pusha
xor
icebp
pop
push
sti
jnp
add
ja
dec
aam
inc
sbb
iret
lea
into
dec
mov
pop
inc
inc
sti
stc
sbb
pop
pop
(bad)
jl
xchg
sbb
or
add
jae
push
add
cwde
dec
push
fs
test
xor
test
loop
pushf
jge
add
mov
inc
jecxz
jmp
jmp
lods
or
je
jno
add
retf
sar
sub
cs
loope
loope
lds
loop
jno
(bad)
aas
test
cwde
rcl
call
nop
in
fiadd
jp
mov
jae
jo
wbinvd
push
shr
stos
or
or
daa
mov
mov
inc
fild
add
xor
push
iret
push
aas
movs
ret
and
loop
or
xchg
push
loop
push
mov
sahf
repnz
or
imul
imul
mov
test
js
cli
je
mov
dec
and
cmp
and
mov
loopne
lods
outs
pop
inc
outs
hlt
les
fdivr
inc
jb
xchg
pop
xchg
jo
addr16
push
(bad)
pop
nop
mov
inc
mov
gs
(bad)
push
xor
push
dec
jne
pop
jns
cmp
and
pop
ss
pushf
or
or
aaa
mov
push
imul
jl
mov
or
inc
push
outs
xchg
push
jg
fbstp
push
jbe
and
(bad)
mov
aam
sbb
dec
scas
loop
retf
addr16
fucomp
sub
cmps
icebp
dec
mov
pop
ds
and
js
pop
cli
cmp
mov
mov
xor
ficom
test
push
adc
out
int3
dec
(bad)
jmp
(bad)
mov
(bad)
sub
js
int
jb
sbb
ret
or
or
and
clc
mov
pop
call
mov
push
iret
out
cmc
pop
arpl
fs
cmp
out
es
dec
aaa
xchg
out
inc
mov
jo
shr
add
gs
out
pusha
or
mov
sbb
xchg
mov
(bad)
into
push
imul
jbe
add
xor
retf
outs
lahf
arpl
sbb
pusha
not
dec
jg
or
adc
stc
pop
push
push
loope
push
add
(bad)
jae
jns
or
dec
push
aam
pop
hlt
ss
fsub
ins
or
popa
cli
sahf
aas
(bad)
(bad)
popf
or
or
jbe
push
jae
aam
js
xor
call
nop
nop
xlat
jns
outs
imul
enter
inc
cld
mov
cmc
imul
dec
jecxz
sar
enter
shrd
push
mov
dec
push
(bad)
cmc
xchg
sub
shl
shl
pop
sub
mov
mov
xchg
mov
shl
add
push
and
popw
sti
mov
mov
movs
or
pop
std
(bad)
mov
outs
mov
push
inc
repnz
jl
push
hlt
mov
push
push
jb
ds
les
int
ds
and
push
pop
inc
std
xchg
addr16
mov
add
push
call
cmp
stos
cld
add
mov
outs
clc
sub
push
jb
bound
jo
xchg
(bad)
and
dec
push
adc
cmc
adc
mov
sahf
inc
push
sbb
jp
std
repnz
sub
fist
outs
xor
dec
or
data16
xchg
je
jbe
arpl
inc
(bad)
push
ss
add
mov
in
ds
(bad)
aad
vpsubusb
in
mov
pop
mov
fldenv
repnz
mov
out
ds
add
lock
jp
fwait
bound
fistp
idiv
mov
pop
xchg
mov
call
xor
outs
jno
rcpps
test
dec
push
push
imul
ja
cmp
shl
je
sti
sar
pop
inc
frstor
or
aaa
xlat
inc
clc
push
cmp
inc
loope
cmp
inc
xor
fsubr
adc
dec
xchg
stos
cld
fwait
or
pop
imul
retf
cmp
pop
cmp
add
jecxz
fdiv
push
fbstp
jl
pushf
ret
popf
mov
sub
adc
pop
imul
mov
outs
xor
fwait
pusha
mov
jge
or
cli
or
mov
cmp
xchg
jecxz
mov
jp
fcos
sbb
xor
mov
xchg
(bad)
stc
pop
lahf
not
out
fmul
jl
inc
mov
push
out
stos
fsubr
xchg
pop
fwait
mov
xor
jge
mov
cli
out
fsubr
stos
pusha
fbld
pop
cmc
mov
inc
sahf
mov
sub
and
les
stos
inc
xlat
add
outs
das
js
call
and
sbb
hlt
pop
mov
nop
cmps
dec
cs
or
in
push
popf
lahf
enter
and
rol
inc
inc
loop
int3
mov
mov
mov
or
in
push
in
gs
xor
mov
jmp
repnz
inc
adc
mov
add
xchg
sbb
ficom
sar
pop
pusha
or
and
das
jl
mov
test
fs
or
jb
scas
push
(bad)
retf
dec
test
adc
sub
jbe
fcomp
sbb
push
fidivr
jecxz
(bad)
test
cdq
aam
and
jae
xor
mov
or
and
inc
adc
shl
out
outs
dec
sub
outs
mov
mov
xchg
cmc
push
jl
scas
pop
aas
xchg
ror
fsubp
mov
push
and
lock
data16
mov
jge
or
stc
or
dec
xchg
pushf
push
addr16
hlt
jo
pop
sub
add
(bad)
jp
pop
jecxz
or
scas
xlat
rcl
xor
xchg
mov
div
cld
(bad)
int3
lea
in
cwde
shl
jo
(bad)
int
or
push
dec
adc
shl
inc
cmp
sbb
push
arpl
add
stos
shl
pop
inc
adc
in
jge
xchg
clc
inc
cmp
div
loop
jg
inc
sub
xor
and
mov
pop
mov
mov
out
jno
sub
xor
mov
push
jl
cmp
and
inc
ror
add
or
mov
mov
movs
and
xchg
and
aam
jae
xor
bound
xor
mov
rcl
push
sub
stos
inc
outs
xchg
add
inc
dec
dec
cli
rcl
das
xchg
loop
mov
scas
inc
cmp
xchg
mov
or
test
push
lea
sbb
dec
xchg
cmps
pop
jne
popa
imul
sti
enter
icebp
mov
add
push
clc
call
data16
fdiv
aaa
jp
mov
stos
inc
mov
sub
xor
push
mov
pop
out
fadd
mov
inc
ss
push
(bad)
jg
(bad)
int
iret
movs
jmp
sub
mov
jns
lock
cld
or
ins
or
fstp
out
or
stos
ffree
cs
lea
pop
mov
add
xchg
pushf
inc
rol
mov
cld
sub
addr16
outs
jmp
mov
sbb
add
jae
cmps
mov
test
das
clc
popf
inc
mov
dec
test
dec
push
adc
xor
loope
xchg
push
mov
mov
mov
loop
aas
mov
jg
sbb
cmp
sub
daa
cmp
ss
jb
dec
(bad)
dec
or
adc
repz
mov
ret
sub
xchg
ror
mov
xchg
push
pop
fdivrp
mov
and
test
xor
into
mov
add
sub
ss
das
fldenv
inc
xchg
movs
mov
sub
dec
test
into
xor
imul
pop
out
mov
jns
add
mov
jecxz
out
fwait
push
jbe
inc
in
or
pop
and
cmp
data16
pop
call
in
push
out
shl
dec
nop
in
jae
ret
sahf
jnp
fs
push
out
adc
adc
prefetchnta
mov
and
pop
(bad)
std
movs
addr16
imul
sbb
(bad)
mov
dec
push
inc
scas
inc
out
inc
in
out
leave
repnz
out
sti
adc
cwde
push
mov
jge
dec
add
inc
mov
mov
cmp
push
mov
ret
sub
jbe
push
ins
lods
jne
push
push
lds
mov
sti
scas
fidivr
mov
mov
sub
test
add
cmp
mov
call
inc
sbb
add
or
mov
jmp
xlat
ins
cld
mov
ror
mov
sbb
sub
inc
dec
mul
pop
cmps
rcl
retf
retf
lods
repz
jne
cmc
ret
mov
cli
xchg
fnstcw
sbb
xor
test
ins
dec
mov
mov
inc
sbb
adc
aad
stc
jb
daa
loop
mov
int3
popa
aad
dec
lea
jecxz
cmps
ret
inc
dec
cdq
jmp
cmc
jo
dec
test
test
lods
and
repnz
xchg
test
fneni(8087
sahf
jno
or
aad
adc
xor
(bad)
repz
aam
sbb
out
jnp
sub
push
in
push
stc
xchg
out
imul
imul
aad
sahf
enter
into
inc
popa
movs
ret
jmp
(bad)
cmc
jg
mov
pop
jecxz
fwait
(bad)
out
ja
adc
ret
sbb
cmp
mov
add
(bad)
push
cmc
xor
mov
sbb
jnp
pop
loopne
sbb
cli
push
add
sub
xor
xor
test
and
scas
in
mov
es
adc
in
mov
sub
or
neg
mov
and
inc
jae
shl
bound
mov
push
dec
cmp
push
xor
pop
mov
jno
sbb
fcomp
adc
adc
inc
imul
jmp
mov
or
jo
jbe
jl
ds
icebp
mov
retf
xor
mov
ss
int
mov
sub
inc
adc
pop
dec
les
xchg
test
popf
adc
xlat
outs
adc
in
mov
cmp
(bad)
jne
das
sub
or
push
cmp
stc
and
sbb
out
ds
mov
mov
jecxz
mov
mov
out
mov
xor
in
(bad)
rcl
mov
idiv
push
fidiv
or
push
es
sub
sbb
sbb
dec
pop
cdq
mov
mov
mov
add
mov
popf
mov
lock
mov
out
into
shr
xchg
not
xchg
sub
mov
xor
leave
push
adc
jmp
mov
js
mov
cld
nop
push
je
cmc
inc
xchg
jno
mov
rol
inc
mov
imul
add
adc
test
pop
jno
mov
cli
stos
mov
mov
nop
daa
mov
sub
kandb
sub
xor
dec
xor
jb
add
jle
enter
pop
and
sub
test
mov
out
dec
dec
cli
add
pushw
xchg
jbe
mov
adc
mov
or
lods
js
stos
cs
(bad)
mov
dec
add
rcr
mov
sbb
mov
test
popa
fs
clc
push
ret
add
(bad)
mov
in
mov
mov
call
imul
or
mov
push
(bad)
shl
inc
mov
in
movs
ins
cmp
cmp
call
jecxz
sbb
cmp
lock
out
lea
test
call
adc
pop
and
js
push
mov
pop
mov
and
xchg
xor
aam
retf
pop
in
jge
int3
(bad)
enter
pushf
cmp
test
sbb
sar
adc
xchg
lods
jns
fwait
jne
xor
cmp
daa
ins
sub
sub
and
push
pusha
rol
jecxz
mov
mov
jmp
nop
js
out
push
sbb
xor
xor
gs
dec
jne
and
mov
ins
push
fs
push
out
pop
pop
dec
pop
in
mov
xchg
pop
mov
inc
retf
cld
dec
mov
inc
sub
adc
js
gs
adc
shl
adc
popf
jno
mov
push
xor
out
push
out
dec
jmp
sbb
int3
getsec
add
xor
imul
mov
ffree
imul
push
xor
pop
stos
pop
movs
sbb
sub
popa
in
push
fdiv
pop
mov
daa
ret
sbb
in
cmp
movs
jle
clc
call
inc
cmps
das
(bad)
gs
adc
cmp
mov
mov
jbe
rcr
or
push
js
xor
xchg
sub
xor
ins
lock
pop
dec
(bad)
sbb
mul
leave
nop
xor
popa
bound
jbe
retf
mov
xchg
or
test
fcom
jmp
iret
std
inc
mov
push
(bad)
jnp
popa
rcr
test
xlat
scas
arpl
push
push
mov
push
fcom
pop
xor
pop
push
push
arpl
imul
outs
jge
data16
xchg
in
retf
(bad)
loopne
xlat
(bad)
push
jl
jp
push
add
gs
or
dec
ds
xor
lods
adc
xchg
mov
pop
jns
mov
iret
or
dec
adc
out
cdq
xchg
shr
retf
int
sub
cmp
out
lahf
jo
adc
cmp
iret
in
inc
ins
test
inc
or
dec
jmp
out
adc
clc
std
pop
sti
scas
xor
sbb
adc
cmp
jbe
popf
repnz
xchg
jp
dec
lods
sbb
pusha
adc
mov
cmps
mov
mov
out
adc
mov
and
cld
dec
push
or
lea
inc
clc
push
daa
mov
fst
mov
mov
jbe
mov
cmps
loope
jo
ins
(bad)
mov
mov
mov
mov
and
adc
out
outs
mov
pop
xchg
jo
xchg
push
sbb
jecxz
daa
push
or
ss
push
push
mov
adc
cdq
jo
lock
mov
fwait
mov
adc
clc
adc
call
or
leave
test
jae
fisub
sbb
aad
ss
aam
inc
xchg
outs
mov
packssdw
or
imul
aam
push
jb
idiv
dec
inc
push
push
in
add
push
sti
(bad)
sbb
mov
cmp
cmp
ja
xchg
mov
push
repz
adc
out
inc
dec
inc
pop
xlat
xchg
int
add
lods
cld
ins
adc
xchg
call
add
in
jl
les
and
mov
lds
cmc
outs
mov
and
xor
outs
inc
cmc
rol
test
es
sbb
fdivrp
mov
inc
ss
es
ss
add
sbb
out
call
in
xlat
cmps
dec
inc
pop
movs
addr16
lods
jge
shl
je
jmp
sar
and
call
xchg
mov
mov
popf
call
sar
imul
ret
or
push
push
add
repnz
adc
test
pop
or
das
dec
pusha
pop
mov
sub
pop
lds
xchg
push
mov
add
addr16
imul
dec
pop
adc
ins
lods
test
mov
stos
lahf
lahf
popf
arpl
and
test
loopne
push
cwde
xor
mov
inc
out
mov
scas
js
ret
scas
dec
fidivr
mov
sar
gs
clc
(bad)
sbb
(bad)
nop
mov
fistp
(bad)
pop
lahf
cmps
xchg
mov
(bad)
dec
push
cmps
pause
jp
pop
stos
adc
pop
ret
enter
mov
aam
shl
icebp
ins
out
loopne
mov
fdivr
js
nop
hlt
in
cdq
jne
not
adc
imul
or
iret
xchg
adc
sub
adc
add
push
pop
fist
adc
mov
sub
pop
call
mov
lods
jle
fpatan
adc
and
ins
inc
adc
sbb
cmp
sbb
lahf
push
adc
mov
das
jge
shl
test
out
pop
(bad)
mov
and
jge
addr16
jns
inc
out
cwde
sahf
pop
adc
daa
cmp
and
sahf
cs
mov
xor
sbb
and
(bad)
in
xchg
adc
imul
sbb
cmp
lea
mov
stos
sub
jecxz
mov
push
outs
movs
jp
or
es
mov
loope
in
adc
xor
fcom
fisubr
pop
sbb
and
les
in
adc
dec
or
in
rcr
pop
dec
or
aas
lods
cwde
xor
push
sbb
inc
(bad)
xlat
mov
imul
mov
pop
jne
icebp
cmps
aaa
scas
retf
xor
xor
jne
rcl
cmc
jmp
xchg
popf
mov
movs
mov
pop
stos
cmp
jnp
rcl
add
cmp
stos
loopne
jecxz
or
sbb
daa
and
(bad)
push
cmc
js
(bad)
cmp
arpl
mov
cmp
mov
cwde
cmp
les
fwait
pop
retf
jmp
mov
cmp
pop
cmps
mov
mov
rol
fwait
fwait
iret
jnp
js
imul
mov
mov
inc
mov
jb
pop
jp
jg
ins
mov
es
cmp
mov
out
int
je
movs
mov
fnsave
adc
dec
rol
int3
stos
leave
(bad)
sti
mov
retf
or
sbb
imul
cwde
stos
cmp
or
ror
fild
jne
mov
jmp
cld
dec
loopne
test
mov
xor
jmp
jg
cmp
ds
out
or
or
in
push
test
mov
sbb
movs
push
inc
mov
add
call
add
mov
mov
movs
jns
ja
pop
inc
stos
pop
adc
mov
rcl
in
push
aas
pop
ret
stc
loope
repnz
js
retf
loope
test
xor
mov
in
daa
push
jbe
push
cmps
aad
jo
jnp
faddp
jmp
sub
mov
call
and
lods
imul
mov
loope
lds
out
pop
adc
xchg
(bad)
jmp
mov
xchg
sti
daa
dec
pop
push
lods
enter
cmp
aam
add
(bad)
ror
scas
jle
ins
push
fst
push
cwde
lahf
cmp
sub
jb
xchg
push
xor
inc
rol
stos
pop
aam
sub
cmp
js
xchg
mov
inc
das
leave
pop
dec
call
stos
scas
int
lods
aas
mov
cmp
out
es
mov
les
push
cld
clc
ins
popa
lods
rol
leave
addr16
(bad)
or
push
out
in
mov
(bad)
lahf
push
and
clc
add
pop
cmp
sbb
mov
sub
movs
cs
in
mov
mov
(bad)
fstp
inc
loope
adc
cdq
push
inc
imul
xchg
jecxz
(bad)
sub
mov
mov
shl
pop
es
ss
loopne
cmp
ror
aam
pop
movs
dec
push
and
cmps
sar
inc
mov
xchg
adc
push
jns
cli
loopne
out
adc
add
out
out
fsub
(bad)
fcomp
idiv
das
retf
cmps
iret
out
xchg
sahf
test
adc
and
gs
sbb
popa
cmps
pop
xor
and
cmp
mov
or
int
jb
fisub
jbe
pop
aas
push
fdiv
mov
mov
xor
xor
das
(bad)
(bad)
and
sbb
push
pop
pop
or
mov
or
pop
xchg
pop
inc
shr
outs
mov
sahf
mov
imul
cwde
cwde
push
mov
icebp
inc
repz
mov
mov
(bad)
fwait
push
leave
xor
or
es
jmp
sub
out
inc
aad
rcr
mov
mov
mov
mov
int
mov
sub
xlat
mov
fwait
xor
rcr
lock
add
bound
sbb
dec
adc
dec
daa
cmp
lds
fwait
dec
adc
cmps
mov
out
adc
and
rcr
or
push
xor
inc
mul
jg
pop
inc
adc
push
sub
cmp
leave
or
(bad)
nop
or
shl
dec
test
ret
lods
gs
je
cmp
mov
out
jecxz
or
pop
dec
jae
mov
inc
push
cmp
pop
push
cmc
popf
(bad)
jmp
cwde
mov
jg
scas
sub
jb
ds
lods
sub
cs
enter
xor
aam
mov
repnz
fs
mov
jne
daa
cmps
mov
xchg
sub
movs
sbb
mov
mov
pop
hlt
push
xor
sbb
retf
ftst
cli
mov
inc
jno
or
jp
pop
sub
pop
daa
mov
fisttp
fwait
pop
xor
loope
add
ret
sbb
cdq
out
out
(bad)
mov
jne
mov
jle
add
arpl
jmp
(bad)
clc
sbb
mov
retf
sub
adc
mov
mov
imul
jnp
test
dec
xchg
cli
int3
out
or
mov
mov
xor
(bad)
fwait
test
xor
int
scas
sub
inc
ins
ds
stc
ins
mov
in
push
movs
out
jno
adc
bound
(bad)
jae
sub
nop
push
jge
lods
popa
push
stos
lods
push
mov
jle
add
pop
leave
or
(bad)
enter
shl
mov
ins
pushf
mov
addr16
outs
jno
std
(bad)
mov
pushf
into
cmp
cmp
(bad)
cmp
dec
jmp
nop
lods
jo
or
push
jmp
movs
inc
or
dec
mov
push
and
retf
aad
or
in
retf
fdivr
test
and
scas
test
lea
repnz
mov
mov
psubb
inc
xor
mov
pop
cmp
inc
dec
repz
or
xchg
sar
scas
and
enter
bound
inc
ret
and
sbb
inc
js
xchg
call
aas
cmps
into
sub
dec
add
in
or
call
sbb
jg
(bad)
cmp
ror
ins
push
mov
mov
add
sti
jne
xchg
jmp
push
jecxz
xor
loope
pop
add
(bad)
dec
cld
(bad)
ffree
push
cmp
jne
inc
jmp
adc
pop
adc
mov
or
mov
mov
and
add
push
add
push
not
ds
(bad)
(bad)
jmp
xor
(bad)
mov
scas
das
imul
or
fdivr
or
sbb
es
(bad)
(bad)
aad
adc
and
rcr
add
inc
dec
pop
stos
dec
in
dec
jne
pop
dec
mov
jl
iret
(bad)
mov
sahf
call
call
mov
fwait
add
sbb
add
pop
into
add
clc
mov
in
repz
mov
push
push
cmp
popa
cmp
imul
loopne
sbb
mov
sub
hlt
xchg
jo
cmc
call
xlat
mov
repz
bound
fld
xchg
sub
push
lock
(bad)
aam
push
mov
call
cli
jae
int
mov
shl
cwde
sbb
sbb
push
jg
cmp
pop
enter
iret
enter
pop
pop
(bad)
in
inc
std
xchg
push
add
mov
mov
mov
and
add
xor
or
xor
js
les
das
adc
les
scas
and
inc
inc
iret
dec
pop
jno
cmp
mov
xlat
call
int3
mov
or
adc
sub
jb
gs
fs
push
inc
xchg
jg
jmp
fxch
outs
add
push
xor
bound
xchg
call
xchg
jb
adc
add
or
int
or
adc
shl
movs
das
push
mov
xchg
mov
nop
popa
int
mov
sub
pop
(bad)
stos
repz
push
jmp
jmp
sub
and
ss
lds
push
inc
pop
mov
into
cmps
punpcklbw
xor
(bad)
push
dec
mov
rcr
idiv
mov
inc
xacquire
sbb
sti
movs
jl
je
neg
or
je
dec
add
retf
sti
add
jmp
inc
cmp
xor
dec
jae
adc
xor
int
inc
ja
add
jbe
pop
push
dec
jp
outs
rcl
pop
fistp
jmp
hlt
and
call
int3
adc
cmp
add
inc
popa
jno
pop
push
mov
mov
test
fld
inc
sbb
push
dec
js
mov
xchg
aaa
mov
sub
or
sbb
and
repz
ss
dec
ja
mov
ds
ja
xchg
mov
ret
(bad)
fisttp
pushf
into
dec
xor
cmc
cmp
fcomp
sbb
imul
jl
push
jno
ss
xor
js
xchg
cmp
ins
mov
cmp
mov
jae
xor
fisttp
or
ret
lods
cmp
mov
sahf
imul
jp
daa
into
test
nop
sbb
rcr
inc
cmp
js
xor
in
xor
outs
inc
push
sub
leave
stos
loope
(bad)
(bad)
es
pop
add
jae
inc
dec
or
iret
loop
(bad)
jne
jnp
or
mov
cmps
mov
cmp
jle
fldcw
jge
add
adc
dec
pop
pop
pusha
xchg
jns
sbb
ret
mov
das
into
inc
cmp
imul
add
ffreep
push
mov
push
(bad)
adc
adc
adc
fcmovnb
sub
push
sar
push
pop
into
lock
sbb
inc
outs
movs
jge
call
or
pop
mov
pop
retf
call
xchg
in
xchg
into
imul
cmps
mov
ret
in
push
or
nop
(bad)
sti
aas
scas
pop
rcl
jo
adc
ins
fdivr
lock
push
in
sbb
mov
cdq
adc
jb
(bad)
push
mov
xor
popf
in
xor
ror
cmp
jge
jae
xor
xor
or
adc
xchg
xchg
lods
movs
or
adc
sahf
(bad)
mov
xor
jg
clc
push
sub
test
push
les
in
xor
out
sub
and
imul
sbb
dec
push
dec
add
das
mov
call
nop
sbb
mov
mov
call
push
cs
mov
and
test
cdq
push
aas
loopne
inc
jg
out
jle
ins
or
inc
ficomp
(bad)
sbb
or
aas
loopne
adc
sar
in
jp
push
pop
dec
(bad)
shr
std
push
fisttp
and
or
fwait
or
push
cli
aam
mov
ja
cld
lea
mov
retf
test
dec
dec
pop
inc
(bad)
cs
daa
add
mov
fst
sbb
daa
(bad)
hlt
scas
pop
jmp
xchg
mov
jb
(bad)
movs
pop
in
(bad)
cmp
dec
push
iret
xchg
stos
adc
jg
call
xor
into
jmp
loop
nop
movs
add
mov
pop
repz
test
call
stos
(bad)
pop
and
cmc
or
leavew
xlat
sub
mov
in
(bad)
jb
dec
or
jecxz
test
daa
outs
jae
mov
cmp
ins
xor
repz
aam
out
ds
out
out
in
iret
inc
jmp
aam
leave
jp
fwait
add
inc
(bad)
fnstenv
dec
and
sar
xchg
mov
adc
lds
mov
adc
and
out
fs
stc
xor
(bad)
xchg
pop
or
arpl
adc
int3
jbe
test
xor
pop
mov
les
repz
ror
(bad)
jb
push
add
dec
xor
loop
cmp
pop
mov
icebp
sbb
outs
xchg
pop
mov
pop
mov
jne
stos
stos
ret
test
adc
xchg
add
rcr
rcl
and
sbb
fld
repz
arpl
(bad)
mov
mov
test
push
cmp
xlat
dec
es
inc
ret
push
sub
inc
xchg
mov
dec
jecxz
imul
inc
sub
aad
inc
stos
dec
xlat
and
inc
pop
pop
(bad)
xor
push
xlat
bnd
mov
jns
(bad)
push
scas
cmp
xor
dec
and
rol
xor
pusha
(bad)
mov
sub
ss
pop
test
adc
mov
je
dec
and
pop
test
adc
mov
push
add
xor
add
push
cwde
push
and
aad
and
xchg
and
ror
bound
xor
mov
inc
pop
fiadd
jmp
les
popa
sbb
movs
mov
test
std
icebp
jno
imul
xchg
cmp
push
gs
adc
jns
shr
sub
stos
movs
xchg
add
int3
jnp
and
dec
cmps
mov
sbb
cmp
lods
ficom
mov
bound
addr16
imul
outs
sbb
mov
int
mov
ficomp
xchg
test
jmp
push
pop
ret
xor
inc
shl
sti
repnz
loope
cmps
cmps
sbb
loope
mov
js
mov
adc
dec
xor
clc
sahf
faddp
cld
clc
jb
jg
xor
xor
or
sbb
(bad)
cmp
repnz
aas
cmp
cmp
inc
popf
sbb
mov
jb
clc
mov
dec
ja
in
pop
call
(bad)
in
push
dec
dec
cs
add
cmc
data16
and
add
cmp
mov
mov
sbb
push
dec
fwait
les
test
leave
lock
jnp
cdq
or
les
in
retf
sbb
repz
sub
popa
in
es
jno
loop
iret
jns
enter
imul
sub
push
adc
push
xchg
push
xor
pop
xor
rcl
and
movs
stos
test
sub
int3
pop
mov
and
mov
adc
test
and
test
pop
pop
lods
xor
fdiv
dec
push
test
fwait
sbb
daa
push
dec
xor
jnp
pop
add
pop
xor
pop
cdq
ret
pop
adc
dec
push
mov
clc
loop
sub
inc
(bad)
mov
inc
pop
sub
push
mov
pushf
fiadd
mov
inc
pushf
add
ficom
or
cli
aas
nop
loop
sub
lahf
adc
stos
mov
ds
repnz
popa
or
das
cmc
inc
xor
(bad)
lea
ret
aam
inc
test
xchg
daa
mov
pop
into
inc
add
mov
das
or
aad
jno
(bad)
popf
es
dec
adc
jmp
or
pop
push
jae
fsub
fcmovnu
dec
sbb
xor
movs
fidiv
(bad)
jmp
mov
sti
repnz
add
cmp
lods
gs
call
fwait
push
adc
sar
xor
pop
mov
cmp
jmp
push
inc
or
fmul
add
pop
retf
loop
ficomp
pop
inc
sar
jo
leave
fnstcw
fdecstp
push
mov
inc
sub
jge
adc
and
iret
dec
inc
push
push
test
adc
popf
leave
sbb
scas
mov
mov
and
dec
mov
jns
rol
pop
pop
or
add
js
test
xor
imul
mov
lahf
and
call
mov
repnz
out
dec
sbb
inc
in
jne
cmps
lods
loope
loope
mov
adc
adc
bnd
jmp
leave
push
dec
mov
fdiv
sbb
mov
xchg
retf
popf
int3
aam
mov
shl
jae
pop
pshufw
test
cmp
xchg
outs
or
xchg
xchg
and
jns
and
cmp
inc
and
mov
adc
les
mov
fdivp
add
jl
adc
inc
inc
cmp
xlat
nop
mov
sub
ja
mov
in
jp
fdiv
es
call
aaa
mov
outs
dec
cmps
lods
test
cmc
push
scas
lods
in
into
xchg
out
inc
jge
int
daa
popa
dec
and
fcom
out
xor
xchg
mov
jmp
leave
xor
ror
nop
cmp
lahf
neg
and
stos
pusha
push
jae
sub
or
dec
push
mov
out
push
mov
data16
sti
adc
in
clc
mov
mov
push
inc
jne
jp
mov
pop
test
push
cld
dec
pop
adc
mov
ins
test
outs
xchg
lds
stos
popa
lods
xchg
xor
mov
imul
adc
loop
movlps
enter
dec
mov
fidivr
loopne
push
and
mov
jbe
mov
loop
jb
repz
vmovss
rcr
scas
or
cmp
sub
stos
fistp
aam
pop
loope
das
dec
push
outs
test
aam
sbb
outs
ins
fsubr
ds
xchg
dec
jns
mov
(bad)
in
shr
imul
or
pop
cmp
rol
test
xchg
shl
dec
imul
aas
cmp
jg
stos
ins
fbld
mov
lock
shl
mov
mov
mov
inc
jge
retf
jmp
cli
cwde
das
and
xor
cld
inc
test
lods
mov
mov
stc
fist
xor
pop
sub
daa
cmp
fbstp
mov
mov
(bad)
fstp
jmp
adc
inc
xor
add
addr16
push
xchg
stos
xchg
sub
movs
clc
(bad)
scas
xchg
push
adc
pop
out
or
fbstp
xchg
enter
je
inc
not
lds
mov
inc
movs
cmc
in
shl
mov
sub
ds
call
mov
inc
inc
hlt
push
cmps
bnd
repnz
dec
mov
lea
hlt
popa
xchg
mov
or
and
pop
sbb
daa
std
push
sahf
xchg
fld
pop
push
(bad)
sub
add
mov
sub
lahf
dec
out
dec
(bad)
push
cmp
hlt
sbb
xchg
mov
retf
inc
jnp
daa
add
in
cmp
and
cmp
retf
inc
push
xor
xchg
outs
mov
cmp
mov
test
jb
fwait
hlt
add
mov
mov
mov
ins
mov
lahf
fwait
aaa
rol
adc
fcom
outs
addr16
jecxz
mov
lea
fbld
cmp
or
pop
in
jmp
fcmovnu
push
(bad)
int3
push
mov
movs
std
mov
test
sahf
mov
jmp
add
in
pop
daa
repz
or
dec
pop
stc
xchg
mov
js
rol
rcl
jge
cmp
xchg
xor
inc
jmp
push
jo
jno
fisttp
int
or
scas
out
je
add
xchg
pop
inc
inc
inc
inc
shr
gs
loope
inc
inc
sbb
cs
lahf
xor
ss
mov
pop
sbb
or
or
pop
test
and
mov
pop
pop
push
mov
les
jl
adc
loopne
fdiv
stos
jnp
retf
inc
(bad)
(bad)
and
retf
aaa
jecxz
retf
jns
xchg
jg
inc
ins
mov
je
fprem
and
adc
cmp
mov
pushf
mov
xchg
pop
pop
int3
xchg
lock
je
loopne
xchg
cld
cmp
ret
sub
movs
mov
sar
pop
dec
scas
xlat
fcomp
(bad)
ret
test
inc
and
cmps
mov
adc
inc
cld
sbb
popa
sub
in
jmp
ins
pushf
lods
movs
sbb
idiv
test
retf
sti
xlat
mul
sahf
packssdw
xchg
dec
(bad)
sub
int
sbb
test
cmp
popf
xor
push
es
loopne
jae
stos
add
mov
sahf
xor
sbb
cs
enter
xor
adc
add
ror
mov
adc
dec
fldcw
pop
adc
and
pusha
inc
or
or
mov
hlt
out
aas
popa
in
loope
fstp
mov
pop
mov
push
cli
jp
dec
mov
push
cmp
nop
mov
aas
push
push
sbb
jae
sbb
stos
mov
adc
pop
cld
or
lock
leave
pushf
or
adc
add
pop
add
sti
out
loopne
xchg
lods
xor
mov
sub
jp
mov
add
and
in
rcr
ret
and
cdq
(bad)
arpl
scas
push
cmp
sahf
add
ja
jae
and
push
mov
int
rol
fcomp
xor
sub
push
pop
jo
idiv
mov
xor
clc
jo
aad
jne
push
out
cmp
xchg
pop
adc
jg
int
push
movs
movs
mul
dec
xchg
cmp
adc
adc
and
fidiv
cmp
jbe
adc
mov
fsub
mov
inc
in
and
mov
jmp
xchg
sar
ja
aaa
inc
push
cwde
jge
add
pop
adc
xchg
jae
sub
sbb
jne
or
xchg
dec
and
mov
pop
xchg
pop
and
test
outs
adc
aas
push
or
repz
(bad)
inc
add
test
mov
ret
(bad)
arpl
sub
mov
pop
popf
add
pop
ins
add
movs
out
mov
fcom
mov
out
das
in
xchg
fimul
adc
sub
mov
cmps
sahf
jp
lods
mov
aad
adc
xchg
xchg
adc
retf
rol
adc
stos
mov
in
adc
inc
into
ss
jbe
ss
xor
cdq
cmp
mov
pop
cwde
fwait
shr
pop
adc
movs
movs
mov
out
xlat
mov
and
fiadd
sbb
mov
daa
aaa
push
inc
out
sub
mov
cmps
inc
mov
sub
xchg
aas
jge
andps
push
mov
inc
adc
outs
mov
add
push
dec
jne
mov
sahf
pop
jbe
ja
or
cmc
mov
jmp
pop
push
mov
push
out
push
pop
pushf
loope
in
mov
mov
cmc
(bad)
out
je
js
push
mov
mov
pushf
cmp
popa
imul
das
dec
adc
test
jmp
inc
call
lock
adc
lea
lds
xlat
or
mov
mov
sbb
mov
pop
and
cmp
loope
xor
cmp
pop
jge
add
sub
or
or
add
jecxz
neg
push
jne
sub
sbb
pushf
leave
jecxz
hlt
ror
mov
icebp
imul
xchg
inc
pusha
add
and
int
sar
fwait
sbb
into
sti
push
adc
fsub
out
pop
sbb
retf
dec
push
jp
fild
xor
mov
jl
ja
mov
sbb
(bad)
je
inc
lock
daa
repnz
loopne
mov
or
test
mov
pop
push
push
jle
pop
call
jl
and
fnstsw
pop
data16
test
dec
and
sub
movs
mov
ins
fist
mov
jnp
iret
repz
test
pop
ds
or
js
dec
ss
test
call
push
dec
cmc
arpl
mov
int
repnz
add
popa
jmp
jecxz
mov
push
sbb
cmp
mov
mov
mov
mov
mov
push
xchg
cmps
xchg
loopne
shr
outs
or
or
pop
cdq
pop
repnz
jle
lods
fist
loopne
enter
fdivr
mov
and
int3
dec
add
aam
pop
cmp
add
nop
loop
(bad)
stc
cmps
pop
mov
in
iret
and
inc
push
mov
sub
fsub
nop
loopne
movs
xor
rcl
test
sbb
aad
pop
and
push
cld
mov
out
and
pop
bound
xor
or
cli
sub
or
and
pop
mov
inc
adc
rcl
pop
imul
into
or
fmul
or
outs
lahf
mov
sti
jmp
movs
mov
icebp
xchg
mov
adc
cmp
icebp
inc
stc
adc
jp
xor
sbb
lock
mov
popf
adc
dec
pop
xchg
pop
dec
out
outs
movs
mov
pop
pop
pop
daa
icebp
mov
pop
jnp
outs
sbb
mov
sbb
mov
push
or
add
xchg
push
imul
aas
xchg
xor
or
sbb
xchg
push
(bad)
adc
das
push
addr16
pop
jmp
(bad)
pop
sub
aad
adc
inc
or
(bad)
iret
popf
or
outs
cmps
je
gs
sar
jmp
xlat
add
push
arpl
ror
inc
mov
pusha
lods
fild
(bad)
call
or
dec
jg
push
js
cmp
js
ss
dec
pop
and
xor
mov
popf
push
mov
cli
add
addr16
lock
jmp
in
fldenv
repz
push
inc
and
imul
mov
es
cmps
sub
cmp
dec
pop
lods
inc
push
int
dec
or
stos
(bad)
xchg
out
xchg
xlat
out
paddusw
mov
xor
dec
retf
lock
push
test
push
sbb
cdq
(bad)
in
push
dec
imul
and
scas
inc
or
inc
mov
adc
jne
dec
and
loop
or
and
push
enter
lahf
and
dec
add
mov
(bad)
or
or
xchg
jne
ficom
mov
cmp
cmps
outs
lods
sub
or
das
sti
cmp
or
iret
dec
inc
xchg
mov
pop
nop
sbb
push
retw
mov
mov
sub
dec
or
mov
fsubr
jno
aas
pop
fwait
jecxz
loope
fidiv
call
repnz
adc
imul
in
dec
xor
lea
sub
add
movs
pop
mov
mov
xor
pop
mov
into
(bad)
or
imul
push
adc
call
mov
mov
push
mov
mov
xchg
mov
cmp
sub
cmp
xor
add
pop
nop
dec
dec
xor
shl
xchg
daa
shr
pop
mov
mov
out
or
mov
add
mov
jmp
and
call
mov
jle
xchg
dec
sub
cmp
xchg
and
push
ficom
push
push
out
and
daa
loope
push
sbb
cmp
popf
xchg
mov
inc
movs
imul
jp
cmp
push
sub
pop
mov
xchg
mov
in
push
xor
mov
jmp
das
fstp
nop
mov
popa
adc
and
inc
cmp
jae
cli
sar
dec
sahf
test
adc
or
xor
out
retf
inc
cld
mov
mov
adc
pusha
sub
gs
outs
rcr
shl
shl
and
call
adc
loop
sub
inc
dec
mov
into
loope
jl
xchg
cmp
dec
pop
dec
adc
mov
xor
inc
int
jle
and
sbb
mov
dec
fstp
sub
inc
pop
push
cmc
(bad)
call
not
dec
pop
sub
rol
movs
stos
mov
inc
fsub
daa
movs
cmp
add
xor
adc
jae
call
mov
xchg
inc
jl
sbb
sub
inc
cmps
mov
dec
xchg
xchg
pop
repnz
es
inc
iret
add
sub
add
mov
xchg
rol
pop
arpl
pop
es
add
retf
or
mov
int3
dec
retf
sahf
mov
mov
or
inc
outs
gs
out
retf
stos
in
add
retf
mov
xor
sub
ret
inc
jmp
push
std
push
call
push
cmp
push
adc
mov
iret
paddd
arpl
in
bound
mov
dec
jo
gs
imul
push
xor
sbb
inc
aas
test
adc
or
push
sub
retf
in
jns
mov
icebp
lods
xchg
cmp
daa
scas
mov
xchg
int3
mov
jmp
sub
push
sbb
inc
inc
lahf
int
lods
leave
gs
sub
das
xchg
fld
cmp
rcl
pop
out
xchg
add
dec
aad
dec
sti
adc
inc
das
xchg
cmps
sbb
xor
jecxz
mov
jg
push
mov
and
push
pop
jle
iret
je
inc
and
pop
and
imul
call
push
movs
icebp
mov
mov
cmp
rcr
mov
cmp
sbb
ins
sti
ror
mov
inc
stos
sub
es
fwait
imul
and
mov
lods
scas
ins
aad
xchg
fs
cmc
dec
mov
jmp
push
pop
out
inc
xor
pusha
dec
scas
sbb
cli
mov
leave
(bad)
xchg
ss
cmc
dec
int
or
mov
hlt
push
mov
outs
scas
loop
jp
les
js
test
movs
push
retf
dec
mov
fwait
or
or
adc
retf
cmp
mov
lods
test
mov
popa
push
mov
ds
je
repnz
out
pushf
(bad)
xor
mov
(bad)
jp
jno
in
ins
or
cmc
(bad)
mov
in
retf
mov
dec
mov
xor
inc
std
in
xor
stc
jecxz
iret
sub
(bad)
or
jmp
retf
aas
popf
xchg
int
ja
mov
cmp
fistp
sahf
push
and
pop
gs
mul
out
nop
fld
mov
int
test
leave
push
xchg
push
out
inc
fld
xor
jp
sub
pop
pop
ret
movs
ins
movs
push
js
mul
add
out
xchg
push
inc
mov
mov
cmp
pop
jp
mov
shl
jmp
xor
mov
fld
cmp
push
lock
push
pop
(bad)
jmp
or
mov
call
scas
xchg
sbb
mov
cmc
mov
push
sti
jl
jno
mov
mov
scas
inc
sbb
lods
rol
jae
clc
xor
dec
shl
xchg
cmp
je
mov
or
cmps
adc
pop
test
out
aaa
mov
push
xor
ins
jmp
and
loop
push
cmps
and
sbb
mov
adc
mov
rcl
test
cdq
std
pop
add
shr
inc
std
adc
retf
add
sub
mov
dec
xor
push
leave
mov
lds
sub
mov
adc
mov
call
add
icebp
mov
sti
pop
into
popf
ins
ins
mov
jp
retf
cmp
rcl
ret
inc
mov
xchg
test
mov
dec
in
pop
pop
mov
or
sbb
pop
jmp
data16
call
adc
loope
in
repnz
nop
invd
popa
or
jae
stc
js
ror
bound
out
cmp
(bad)
push
daa
jg
frstor
adc
mov
rcl
repz
enter
es
cmp
mov
ja
jne
xchg
out
js
clc
jle
mov
aaa
scas
add
jb
fisubr
inc
into
cmp
rol
outs
pop
xchg
les
dec
ins
jb
mov
mov
push
cmp
adc
retf
repz
movs
push
je
jbe
call
pop
jmp
call
sub
jg
or
enter
movs
shr
sbb
imul
mov
add
sub
into
lahf
mov
aad
jns
call
inc
add
test
jmp
addr16
jno
mov
xor
into
jp
add
stos
pop
hlt
adc
jg
push
enter
and
pusha
sub
add
fwait
aad
das
xor
ret
fstp
rep
cmp
mov
in
sbb
push
adc
(bad)
mov
jg
fstp
ret
mov
inc
push
jbe
fidivr
sbb
loope
jns
ss
lods
mov
xor
les
dec
push
mov
popa
call
pop
stc
imul
mov
push
pushf
pop
xchg
push
pop
jb
add
lock
(bad)
fcmovb
inc
mov
repnz
cmc
knotw
push
sub
inc
outs
push
inc
or
frstpm(287
mov
and
add
(bad)
sub
jne
call
cmps
movs
ja
aam
xchg
enter
mov
ret
cs
loopne
inc
sar
mov
push
bound
leave
(bad)
or
add
mov
test
loope
sti
dec
mov
nop
movntq
out
mov
std
lahf
push
sbb
push
dec
mov
sub
inc
jb
push
push
lds
std
jbe
(bad)
pop
or
or
or
sub
mov
xor
lods
fld
cld
jae
loopne
push
fwait
ins
sbb
sub
push
xor
pop
icebp
stos
test
sub
iret
or
enter
push
int
(bad)
cld
in
pop
cmp
or
cmp
mov
jl
mov
jmp
retf
jns
add
xor
add
push
jne
cmp
sub
clc
fwait
jns
mov
cdq
sub
add
aad
cmps
imul
push
push
xchg
mov
jb
ja
ins
jno
call
mov
mov
es
lods
mov
cmp
or
mov
movs
push
mov
int
xchg
rcr
xor
pop
xor
mov
lock
fwait
sbb
ss
cs
pop
mov
jns
stos
lea
cmp
jbe
xchg
cmps
stos
push
ins
lea
imul
xchg
pushf
mul
ins
in
(bad)
and
jne
sbb
and
jo
in
and
shl
cmps
mov
dec
pop
mov
sbb
dec
mov
jo
jge
xor
lods
mov
push
mov
dec
test
fs
jnp
out
retf
outs
sub
xor
fdivp
mov
add
adc
arpl
mov
test
jae
sbb
pop
retf
test
test
ss
adc
xor
or
in
sub
mov
adc
hlt
adc
pop
arpl
fcom
sbb
retf
xor
sub
not
fadd
rcl
xor
xchg
cmp
adc
cmp
add
inc
fdiv
call
out
cmp
pop
adc
cmp
shl
es
add
dec
repnz
push
jne
(bad)
lahf
out
in
xor
pop
sub
add
lahf
inc
into
add
cwde
sti
inc
dec
sub
mov
xor
test
movs
fcmovnbe
or
mov
xchg
pop
movs
mov
outs
xchg
movs
inc
les
aad
outs
add
gs
and
mov
mov
sub
fmul
cmps
mov
sub
add
ret
xchg
dec
dec
and
xor
cmp
cmp
dec
gs
out
out
pop
(bad)
pop
mov
add
jmp
inc
jp
mov
mov
xchg
ins
pop
stc
inc
sbb
(bad)
(bad)
xchg
pushf
jns
jno
xchg
dec
or
es
push
pusha
repnz
mov
mov
into
lods
and
ins
mov
mov
push
lods
xor
mov
lods
xor
cmc
sub
sbb
jo
imul
mov
mov
lds
add
dec
push
lods
pop
cs
std
outs
out
js
das
xchg
adc
rcl
add
dec
and
sahf
mov
mov
push
clc
inc
push
sahf
add
test
(bad)
ficom
loop
pushf
ds
or
mov
rcl
mov
sbb
fstp
cmps
fdecstp
adc
adc
ret
mov
ds
add
xor
ret
int3
sub
pop
cli
inc
and
in
cmp
jl
ret
fdivr
imul
dec
cs
or
sbb
mov
inc
mov
test
das
mov
lahf
mov
dec
in
sar
push
lods
dec
add
test
out
sbb
push
je
in
out
sbb
jg
jno
cwde
jmp
in
ret
sbb
sbb
fmulp
cs
cmp
aaa
xchg
xchg
dec
out
or
or
xchg
ss
ror
cmc
(bad)
jl
frstor
popf
jmp
rol
sub
add
add
push
mov
cmp
jg
aad
xchg
xor
js
jnp
add
mov
xor
loopne
xchg
pop
idiv
jmp
inc
enter
jmp
fld
mov
mov
jge
ss
call
cdq
adc
pop
mov
xchg
push
and
enter
push
es
or
(bad)
repnz
in
imul
in
push
mov
int
sub
cmp
inc
sbb
adc
ins
cmp
aaa
rol
addr16
iret
push
(bad)
int3
mov
cmp
stc
jb
(bad)
cli
outs
adc
jmp
data16
inc
cmps
xchg
gs
in
gs
call
cld
out
push
ret
sbb
xchg
fwait
xchg
inc
inc
mov
cmp
jne
pop
jecxz
outs
loope
mov
pop
rcr
lock
int3
inc
pusha
jne
inc
dec
sub
sbb
cmp
(bad)
mov
int3
lods
nop
push
sbb
cwde
jmp
cmp
cs
lods
scas
test
inc
pop
cli
and
loopne
cdq
push
push
jmp
movs
test
pop
mov
cdq
mov
jg
push
ret
(bad)
mov
mov
mov
test
retf
jb
mov
cmp
adc
(bad)
mov
cmp
cmp
push
int
mov
scas
jg
mov
mov
sbb
pop
fwait
retf
test
mov
adc
push
pop
stos
test
retf
arpl
sub
div
addr16
xor
inc
mov
ret
sahf
ss
add
pop
push
mov
add
dec
adc
cmp
out
xchg
sub
ja
aaa
jne
adc
std
int3
mov
mov
xchg
sub
mov
sahf
mov
test
mov
sub
stos
push
xor
adc
lea
sub
(bad)
(bad)
push
lods
push
push
(bad)
mov
imul
sbb
sub
nop
test
(bad)
pop
cmp
xchg
je
cmps
dec
and
add
pop
jle
jae
pop
lock
in
rcl
icebp
mov
sbb
imul
cmps
ja
xchg
jne
leave
das
hlt
xor
aam
jae
xor
pop
je
adc
fisttp
cmps
js
jb
jl
cmp
fidiv
das
mov
add
jg
rcr
mov
lods
stc
mov
rep
jmp
jmp
pushf
les
sub
xor
push
push
mov
mov
adc
in
mov
or
je
add
push
sbb
repz
popa
sbb
imul
scas
sub
lods
scas
(bad)
adc
fiadd
push
pop
inc
mov
jnp
pusha
mov
pop
xlat
sbb
push
sbb
push
pop
xor
fisub
mov
pop
pop
push
and
test
fmul
fwait
jmp
mov
leave
retf
rcl
scas
enter
cmp
pop
xor
enter
shl
cs
sub
loop
push
dec
mov
jne
xchg
jns
imul
lea
xchg
fsub
mov
nop
or
dec
mov
jbe
mov
mov
(bad)
jmp
fstp
mov
sti
xchg
daa
jmp
pop
jl
mov
mov
xor
stc
cmp
add
adc
mov
dec
(bad)
stc
fcomp
xchg
and
pusha
(bad)
jae
jp
xchg
rol
pop
xchg
mov
inc
mov
ret
dec
loopne
div
pop
imul
rcl
pop
into
xchg
adc
loop
jo
mov
fidivr
push
mov
scas
xor
in
clc
xchg
sub
add
add
jbe
sbb
call
in
data16
leave
jnp
xlat
outs
iret
mov
xor
retf
sbb
outs
adc
dec
out
adc
fist
pop
scas
push
into
or
jp
std
mov
aas
imul
in
test
dec
jge
pusha
lds
rol
xchg
pusha
inc
scas
pushf
pop
add
inc
xchg
test
mov
jb
jo
jecxz
sub
jmp
dec
retf
out
cmc
push
dec
and
sar
fiadd
pop
sub
xchg
mov
mov
sub
xlat
popf
gs
pop
add
scas
pop
sub
jmp
dec
add
jg
push
adc
dec
jl
retf
scas
mov
clc
test
sbb
sbb
dec
fwait
out
stc
(bad)
(bad)
mov
iret
fucomi
pushf
mov
jmp
in
dec
xchg
sbb
dec
fucom
ja
sti
pop
arpl
(bad)
sub
or
jl
mov
(bad)
mov
outs
clc
arpl
fnstcw
xchg
mov
xor
(bad)
ja
and
xchg
es
call
sub
sbb
inc
pop
data16
les
rcr
in
mov
pop
cmp
rol
(bad)
dec
push
fimul
xor
cmp
add
mov
test
or
ss
inc
ret
adc
jo
sbb
or
sbb
stos
imul
ss
dec
sub
push
mov
(bad)
jne
lea
jecxz
jns
or
mov
mov
mov
mov
leave
mov
fimul
ins
in
cmp
pop
loop
sub
dec
sahf
aad
jne
pop
inc
outs
sub
aad
ret
push
add
cmc
jae
imul
lea
test
out
ins
popa
test
ret
add
jnp
adc
leave
iret
cmp
xor
cmp
(bad)
jnp
bound
mov
lock
mov
(bad)
fisub
ret
pop
adc
inc
test
inc
sub
(bad)
xchg
dec
rol
xchg
xor
pop
xchg
hlt
jp
ficom
movsx
fld1
pop
add
push
sahf
hlt
add
jle
fbld
inc
xchg
xor
add
pushf
xor
mov
and
and
inc
push
fprem
cld
and
ror
mov
add
loopne
(bad)
inc
lahf
cwde
jmp
lock
push
out
push
push
cmp
ds
mov
rcr
ins
repnz
fstp
adc
loope
cli
dec
(bad)
rol
sbb
jecxz
ret
jno
dec
cli
in
cmp
push
(bad)
enter
rcr
pop
dec
arpl
pop
(bad)
call
sub
push
(bad)
shl
adc
xor
movs
ucomiss
xchg
push
adc
push
ret
imul
(bad)
pop
int
jnp
pushf
out
adc
sbb
cmp
(bad)
stc
or
and
cmps
pop
xor
cs
leave
xor
test
gs
dec
inc
jne
nop
nop
sub
and
cmp
jb
nop
sbb
push
lds
neg
add
test
movs
mov
adc
sbb
fidivr
cld
or
(bad)
sub
mov
movs
adc
sbb
pop
rcl
sbb
mov
cmps
push
sbb
and
jmp
outs
mov
and
or
movs
dec
mov
jg
cs
(bad)
mov
movs
xchg
ficomp
add
xchg
pop
sub
fisttp
mov
mov
add
mov
sete
out
and
jnp
xchg
adc
add
ds
push
cmps
pusha
or
cmp
inc
cmp
or
or
dec
mov
mov
mov
(bad)
fidiv
push
cwde
call
sub
ins
push
lods
jp
pusha
mov
jo
iret
fisubr
addr16
mov
jl
adc
outs
mov
rol
popa
cdq
out
mov
jmp
in
jne
mov
push
pop
ins
xor
imul
fcomp
addr16
div
ins
push
in
ds
enter
fwait
add
sub
jmp
xor
test
(bad)
mov
and
outs
lock
sbb
xchg
lea
inc
pop
jnp
jno
inc
inc
pushf
in
test
sbb
in
add
mov
inc
popa
sbb
mov
ins
repnz
mov
sub
push
or
and
cdq
mov
pop
sar
adc
movs
sbb
push
dec
out
ins
cwde
aaa
mov
pop
(bad)
les
sub
push
sub
cmp
nop
not
dec
fnop
sbb
add
(bad)
aaa
retf
or
setb
cmp
jo
add
jne
sub
repz
xor
pushf
in
xor
fnsave
out
je
je
adc
scas
mov
rol
dec
outs
es
mov
mov
call
mov
fistp
shl
sub
adc
xlat
push
mov
je
(bad)
dec
or
push
aam
or
sbb
cdq
push
and
outs
pop
std
int
sub
leave
sti
pop
in
push
cmps
in
movs
outs
add
fsub
xor
xchg
xchg
imul
dec
xor
sbb
je
sbb
and
mov
test
xor
cmps
out
inc
cmc
dec
test
xchg
jmp
mov
add
jbe
xchg
movs
mov
and
jl
pushf
scas
imul
imul
jecxz
enter
sbb
cmp
addr16
test
sub
ds
movaps
stc
pop
xor
and
mov
cmps
cs
sbb
inc
pop
sar
out
pop
es
sbb
iret
xchg
xchg
int3
mov
push
mov
and
in
sahf
push
mov
cs
adc
loope
pop
retf
xor
sub
adc
in
aam
cmp
js
jb
dec
out
xor
and
movs
nop
pop
fimul
xchg
inc
cs
cli
test
shr
and
inc
lods
call
dec
dec
add
and
gs
jecxz
xlat
pusha
sbb
retf
call
and
adc
cmps
ror
push
test
pop
mov
retf
sub
mov
sar
mov
and
popf
push
sbb
retf
or
lds
fwait
add
mov
xor
leave
or
sbb
pushf
hlt
in
(bad)
pushf
sub
jnp
fsubr
hlt
cmp
imul
repnz
cwde
dec
xchg
add
sbb
pushf
mov
push
jecxz
int3
rcr
sub
sbb
mov
mov
sub
test
js
and
cmc
ds
xchg
clc
xor
sbb
jo
enter
call
cmps
push
dec
push
cmp
cmp
loop
fadd
dec
ds
jl
push
mov
add
movs
retf
imul
jno
data16
stc
mov
xor
mov
call
mov
mov
outs
sbb
les
bound
retf
pusha
shl
(bad)
sbb
(bad)
jmp
popf
in
bound
outs
rol
pop
inc
and
fisubr
repnz
add
mov
movs
push
(bad)
mov
retf
push
retf
in
xlat
pop
jae
mov
inc
sti
jne
movs
loopne
stos
std
mov
clc
pop
add
pop
mov
lds
stos
pop
inc
inc
and
or
test
mov
dec
cmp
adc
push
clc
mov
or
imul
mov
sub
xchg
call
int3
jl
and
out
mov
mov
or
les
pop
scas
push
mov
cmp
imul
idiv
loopne
xchg
sbb
mov
pop
mov
icebp
pop
dec
mov
push
mov
cdq
mov
cld
add
dec
in
jle
xor
jg
inc
fsubr
inc
imul
inc
into
in
and
xchg
mov
and
retf
sar
cs
ins
inc
movs
test
aad
dec
mov
outs
dec
mov
ins
xrelease
pop
sbb
rol
jno
pop
(bad)
int
popf
mov
test
xchg
pop
cmp
lods
mov
sbb
sub
xchg
ss
push
mov
push
out
fs
dec
pop
adc
jmp
inc
mov
into
inc
or
stos
scas
sub
xlat
call
sub
mov
push
xor
push
outs
dec
stos
fisttp
pop
cmps
sti
mov
jmp
scas
cmp
sbb
xchg
dec
outs
sti
dec
pop
repz
int3
cmp
or
popf
cmps
pop
mov
call
mov
jmp
fbstp
(bad)
xor
xchg
push
and
nop
or
push
mov
xor
dec
cmp
mov
call
into
jmp
dec
push
(bad)
mov
stos
dec
xchg
fld
rcr
sti
jne
sub
loopne
mov
sub
retf
mov
mov
aad
jno
mov
(bad)
mov
out
scas
icebp
out
inc
adc
lea
xchg
movs
aam
in
or
and
adc
sbb
movs
movs
int3
inc
sti
loopne
mov
inc
xchg
sbb
fstp
ds
cs
xor
stc
jp
pop
mov
cli
sub
call
mov
fcomi
jnp
test
xchg
test
sbb
push
adc
fst
or
das
cmp
xor
jmp
dec
movs
cwde
(bad)
les
cmp
mov
int3
mov
add
inc
sub
cmp
mov
xor
enter
mov
mov
mov
add
mov
fwait
call
dec
cmp
gs
pop
add
pop
shr
in
jp
xchg
jge
js
clc
out
inc
xchg
je
xchg
fwait
outs
sbb
das
adc
push
dec
push
popa
cmc
add
stc
push
out
cmps
cmp
push
push
fcom
loope
add
inc
mov
add
add
lods
pop
xor
xchg
repz
mov
sbb
xor
lahf
fcomi
ds
stos
dec
(bad)
ffreep
dec
xchg
pop
pop
popf
inc
sti
(bad)
sub
fmul
sub
push
fwait
das
adc
cmps
add
rol
fadd
xchg
mov
std
repz
(bad)
fbld
pop
stos
xchg
fwait
dec
xor
adc
addr16
cli
gs
fwait
add
jno
icebp
cmc
test
push
jns
test
lahf
js
pop
retf
fdiv
fst
in
inc
call
sbb
dec
dec
std
into
int3
push
cmp
or
add
pop
adc
pop
jp
jmp
adc
aas
arpl
cdq
stos
(bad)
cs
loopne
mov
add
retf
in
ins
cwde
mov
cmp
cmp
lds
out
cmp
ins
sub
mov
(bad)
push
adc
inc
mov
lock
inc
add
std
pop
daa
xchg
pop
xor
push
xchg
jmp
mov
mov
mov
retf
loopne
push
(bad)
pop
xchg
lods
pop
xor
lods
dec
dec
or
pushf
cmps
inc
xlat
popf
fwait
sysenter
jge
fild
lock
add
(bad)
div
or
xor
retf
inc
shl
mov
dec
inc
mov
pop
pop
and
sbb
cwde
jecxz
cmp
cmc
mov
(bad)
push
pop
cmp
mov
hlt
test
xchg
jne
imul
lods
(bad)
stos
push
adc
div
fsubr
mov
add
jge
xchg
xor
inc
xor
stos
xor
push
ins
(bad)
pop
jmp
mov
add
mov
frstor
mov
or
test
rcr
or
data16
shr
and
xor
push
je
in
xchg
ins
xchg
(bad)
idiv
ror
add
or
cmp
sub
les
(bad)
push
in
adc
sbb
push
test
xlat
sub
or
lea
cmps
pusha
pop
imul
fwait
pushf
pop
sub
xchg
les
lahf
push
mov
lahf
sbb
push
pop
fisub
lock
cmp
sub
mov
stos
cmp
jmp
pop
adc
push
mov
push
push
jle
cmp
mov
rcr
sti
(bad)
xlat
stos
movs
sub
es
scas
cmps
mov
in
sub
jmp
xchg
xor
add
mov
dec
jne
iret
into
xor
movs
mov
test
sbb
pop
pop
inc
mov
cwde
into
xchg
xchg
cli
pushf
nop
fiadd
cs
pop
popa
xchg
movs
mov
pop
adc
cmp
loope
ins
int
jmp
pop
out
retf
lahf
sahf
shl
and
mov
sub
retf
adc
mov
add
test
cmps
adc
push
dec
push
sub
inc
sub
mov
in
fadd
in
cmc
mov
call
inc
mov
mov
lods
imul
push
xor
js
dec
pusha
ins
mov
(bad)
sahf
mov
cdq
push
sbb
sbb
js
loope
mov
scas
loopne
or
add
add
add
pop
in
push
in
jmp
popf
sub
in
test
js
popf
addr16
shr
sbb
call
je
ror
repnz
sahf
outs
dec
dec
xchg
mov
xor
into
and
or
push
sbb
adc
gs
ins
jbe
mov
in
inc
sbb
and
pop
mov
sbb
sbb
ins
dec
loope
lock
xchg
xor
mov
adc
mov
das
pop
pop
add
rol
mov
mov
ret
and
mov
jmp
aaa
retf
adc
or
fdiv
pop
test
repnz
sub
xor
push
pop
call
mov
or
sbb
mov
nop
adc
cld
sbb
fdiv
pop
sbb
xor
adc
call
push
jmp
sti
nop
loop
mov
pop
adc
scas
push
lods
mov
push
data16
cmp
adc
add
pop
aas
mul
cdq
adc
mov
and
pop
push
hlt
jmp
outs
ret
outs
sbb
push
into
cmc
xchg
retf
push
sbb
pop
pop
cmps
mov
std
sti
sbb
(bad)
out
ret
pop
imul
test
cmc
and
mov
int
retf
adc
xchg
inc
scas
dec
int3
cmp
lods
or
jg
xchg
xor
push
retf
sub
adc
loopne
stos
mov
call
movs
or
sub
adc
xchg
cmp
cmp
jmp
mov
jb
dec
rcr
adc
sar
das
sub
pushf
xchg
mov
jmp
pop
adc
pop
pop
mov
lods
adc
adc
out
cmovs
and
xchg
(bad)
stos
cmc
call
ss
sub
dec
push
mov
daa
mov
(bad)
int3
push
dec
inc
push
push
mov
leave
retf
out
sbb
enter
inc
daa
sub
pusha
sbb
out
push
jno
cmps
or
fs
mov
push
test
sub
sbb
mul
xchg
inc
dec
out
mov
in
popf
mov
lahf
xor
stc
lods
ja
mov
pop
jns
mov
jg
dec
clc
shl
ds
ss
mov
bound
ror
(bad)
fwait
pusha
(bad)
rol
sub
dec
iret
jmp
out
mov
push
xchg
mov
and
dec
mov
sub
xchg
xchg
pop
pop
jg
fwait
das
dec
dec
push
cmc
xchg
fs
in
jnp
in
loop
xchg
loop
mov
mov
pop
dec
iret
mov
mov
clc
sbb
jbe
call
jl
add
or
push
ins
jle
mov
inc
mov
out
push
xor
popf
pop
push
jmp
sub
and
pop
(bad)
xlat
lea
fcmovnu
retf
and
push
rol
xor
push
in
lods
push
xchg
pop
dec
data16
ins
(bad)
in
push
int3
mov
repz
(bad)
stc
pop
add
and
or
repz
stos
cmp
(bad)
jb
scas
xor
cmps
or
xor
cmp
fidiv
ds
(bad)
retf
mov
adc
nop
mov
sbb
(bad)
in
int
pop
cmp
test
jp
sub
sar
mov
aam
cmp
ja
cmp
push
js
push
gs
pop
out
xor
push
enter
(bad)
jns
cmps
adc
ret
out
mov
and
ret
mov
mov
mov
jno
(bad)
loope
outs
pop
test
lahf
mov
test
mov
out
into
pop
and
hlt
(bad)
sub
mov
test
and
gs
mov
jbe
cmps
pop
or
push
jne
(bad)
je
cmc
jg
ret
ja
leave
nop
and
cmp
sbb
jae
fwait
jecxz
mov
sbb
mov
inc
fucom
adc
xor
jb
fisub
es
and
pop
pop
add
cmc
fmulp
inc
add
test
inc
stc
imul
loop
dec
imul
arpl
inc
mov
pop
hlt
xchg
daa
dec
adc
mov
ins
ins
cmp
mov
xchg
jnp
scas
fld
inc
sbb
mov
xchg
mov
cli
cld
sub
ret
in
sub
loopne
mov
and
inc
or
scas
in
mov
test
nop
mov
jo
les
std
xchg
scas
xor
cwde
test
ja
adc
add
mov
nop
mov
push
ja
add
and
test
nop
imul
or
into
fdiv
test
clc
mov
outs
jl
lahf
sub
loope
dec
mov
dec
lds
xor
jle
cmp
movs
or
shl
inc
and
mov
cmp
adc
(bad)
cli
call
out
push
lahf
dec
fst
dec
enter
(bad)
mov
xchg
daa
leave
sbb
cmp
mov
inc
and
jb
push
jno
out
dec
pop
jo
das
sub
mov
sub
mov
dec
daa
cmp
jl
and
iret
adc
mov
shl
(bad)
jmp
add
jp
push
push
hlt
call
fwait
pop
cmp
cmp
push
mov
aaa
sbb
dec
stc
mov
std
es
ret
aas
or
jno
lds
adc
clc
enter
xchg
jp
mov
aaa
ss
aad
and
movs
jae
jnp
out
sub
xchg
jno
cmp
fs
push
(bad)
dec
aam
sub
jns
sbb
cli
push
pop
daa
mov
dec
pop
mov
test
cmc
push
jmp
push
out
les
cmp
sub
aas
pop
stc
pop
shl
icebp
shl
fs
dec
mov
jno
push
mov
sub
mov
fiadd
push
dec
lea
or
jae
mov
jns
mov
mov
mov
xchg
xlat
mov
retf
jbe
(bad)
add
shr
inc
sbb
std
jnp
test
jae
addr16
add
mov
in
(bad)
adc
jno
pop
cmp
js
inc
pop
mov
ds
stos
cs
mov
ficomp
inc
mov
jmp
retf
ret
imul
fs
loop
jbe
cmp
mov
pusha
pop
pop
sub
mov
add
(bad)
jne
cmp
mov
movs
rep
mov
xchg
clc
inc
call
test
push
(bad)
mov
or
out
je
arpl
sbb
cmp
xor
xlat
out
mov
ins
inc
dec
mov
or
push
sbb
sub
int
pushw
lds
repnz
jb
add
cmp
test
mov
adc
jo
mov
fld
mov
stos
jbe
fistp
and
daa
inc
adc
das
das
in
mov
popf
cmp
push
sbb
dec
stc
push
adc
pop
jne
push
int
xlat
xor
lock
add
test
shl
lods
mov
add
fs
xchg
pop
mov
fld
add
xor
xchg
pop
add
cmp
loope
jbe
mov
cmp
cmp
into
jo
inc
sbb
dec
movs
popa
mov
adc
cs
fidivr
sub
icebp
popf
les
rol
sbb
aaa
cwde
and
inc
call
in
aas
cmp
pop
ds
out
push
into
sbb
movs
sbb
fst
dec
pop
pop
shr
adc
add
repz
push
cmp
mov
(bad)
jecxz
mov
cmp
sbb
xchg
popa
test
jp
in
dec
ror
sbb
and
cld
call
jne
push
in
fstp
pop
stc
retf
push
jg
repz
std
sahf
sbb
pop
jae
cmp
xchg
and
dec
(bad)
out
mov
fs
and
outs
adc
pop
repnz
ret
std
in
mov
jg
dec
test
pushf
mov
mov
loopne
pop
or
xchg
cld
add
push
mov
xor
fisubr
ror
popa
jne
jge
(bad)
daa
sub
ror
outs
in
ja
adc
mov
mov
pop
push
sbb
push
jle
lock
lea
les
movs
mov
push
adc
sub
(bad)
inc
add
adc
out
into
out
fld
outs
loop
xchg
mov
das
mov
ror
int
adc
push
js
sbb
fstp
lea
cmp
out
pop
push
mov
pop
jge
dec
cmp
cs
fadd
into
push
in
sbb
xor
pop
dec
pop
call
mov
test
mov
adc
dec
cwde
pushf
loope
test
stc
cli
sahf
cmp
(bad)
sti
nop
rol
call
cmps
xor
jb
or
out
into
sub
adc
push
mov
lahf
aad
xchg
sbb
cmp
call
imul
js
xchg
jg
in
(bad)
leave
repz
and
movhps
jle
xchg
cmps
mov
jno
dec
pop
js
call
loopne
inc
sbb
sbb
ss
jge
push
cmp
(bad)
popf
inc
aaa
std
push
or
pop
fucomi
mov
mov
jo
dec
sub
mov
mov
int
ret
fiadd
mov
inc
push
inc
dec
test
into
jp
sbb
inc
je
shl
retf
repnz
fld
mov
sub
dec
scas
mov
push
jmp
test
xchg
daa
fild
or
cmps
push
in
inc
fcomp
mov
push
sub
(bad)
aas
les
mov
cmc
lds
xchg
sub
fwait
loope
pop
mov
xor
and
mov
mov
into
gs
repz
mov
mov
mov
fiadd
(bad)
jle
out
fisttp
adc
xor
pop
popf
xor
dec
inc
jg
and
xchg
jnp
pop
leave
in
add
jmp
xchg
fdiv
lea
fisttp
sar
xchg
(bad)
cmp
xchg
sub
mov
mov
clc
inc
and
add
outs
inc
mov
adc
cmp
test
pushf
(bad)
aad
inc
loope
mov
add
fild
aam
or
mov
aas
mov
ja
and
sbb
(bad)
test
iret
push
push
sbb
lock
dec
aad
into
jo
rol
aas
dec
fwait
enter
cmps
xor
mov
mov
push
or
inc
dec
mov
sbb
dec
out
pop
xlat
mov
xchg
hlt
sub
jb
push
or
mov
call
imul
imul
xor
(bad)
push
mov
pop
(bad)
movs
cli
ins
dec
sbb
add
mov
sub
fwait
sub
sbb
arpl
mov
data16
aas
add
push
lods
and
and
jmp
je
in
mov
jecxz
aaa
fcomi
cmp
push
(bad)
jns
sub
sbb
add
mov
and
sbb
jnp
inc
scas
adc
push
adc
or
mov
mov
stos
or
xor
jnp
mov
nop
ins
das
xor
xor
mov
jmp
or
bound
mov
sbb
jge
lahf
inc
in
mov
push
inc
imul
fcomp
pusha
xor
pop
push
cwde
pop
jbe
fs
mov
dec
sub
into
ja
js
stos
sbb
fdivrp
mov
aam
das
mov
aad
adc
dec
push
retf
inc
or
add
(bad)
pop
pop
jg
out
and
push
or
js
ja
lods
pop
sti
ins
pop
xchg
xor
pusha
mov
(bad)
or
in
sbb
test
(bad)
outs
jnp
dec
lds
pop
xchg
lds
xor
movntps
jle
aam
xchg
xor
pop
mov
arpl
pusha
loope
xchg
jae
repnz
pusha
fldln2
push
cmc
push
retf
sahf
push
in
adc
stos
and
xlat
push
xchg
call
out
(bad)
aas
in
and
out
jmp
bound
xchg
adc
mov
cmp
(bad)
dec
mov
cld
jecxz
push
mov
into
jecxz
cmc
fsubr
sub
dec
stos
dec
inc
out
mov
fsub
push
xor
xor
out
sbb
xor
outs
out
mov
pop
xchg
iret
leave
outs
push
inc
cmps
and
add
les
lea
outs
(bad)
repz
add
aam
test
and
dec
neg
or
js
dec
mov
das
push
js
stc
ror
inc
std
mov
(bad)
arpl
add
fwait
sub
mov
ja
cli
and
jae
sub
lahf
mov
cmp
mov
jnp
push
cmp
push
(bad)
cmc
loop
call
std
mov
stc
popa
mov
mov
or
push
xchg
adc
sbb
in
jns
dec
cwde
es
mov
or
push
or
or
out
xlat
test
jl
and
sahf
pop
jl
push
(bad)
in
jns
rol
jmp
adc
xchg
in
sahf
outs
mov
or
mov
popa
jmp
jle
mov
in
jmp
xor
test
sbb
xor
clc
addr16
cmc
shr
xchg
repnz
pop
mov
sahf
mov
mov
addr16
jo
into
sbb
push
(bad)
out
sti
xchg
xor
cmps
fadd
xor
mov
fmul
fisubr
scas
inc
js
lods
jne
ins
mov
mov
jg
jo
push
sahf
js
mov
loop
mov
xchg
jge
dec
push
mov
out
xor
mov
loop
push
daa
inc
or
mov
mov
(bad)
jmp
xchg
cmps
cli
and
and
dec
mov
mov
mov
inc
repz
dec
xor
push
xor
enter
and
push
addr16
js
mov
dec
inc
loope
jle
ja
xor
cmps
cwde
and
sbb
push
je
sbb
mov
add
xrelease
or
xchg
jmp
push
add
and
jne
test
dec
paddb
push
imul
movs
shl
jbe
inc
jg
dec
jns
add
mov
or
fld
ss
cmp
ins
outs
in
call
xchg
fidiv
push
inc
sub
stos
sub
inc
jo
lahf
adc
jmp
push
pop
repnz
sahf
pop
xchg
pop
inc
pop
call
mov
in
dec
ins
add
les
rcl
loop
jbe
push
pop
cdq
mov
push
cwde
call
adc
frstor
test
test
sti
and
cdq
add
pop
push
mov
adc
xchg
rol
arpl
(bad)
aad
jp
int
push
pop
inc
or
jecxz
mov
cmps
stos
or
inc
leave
push
xor
mov
(bad)
lods
sub
sti
shr
lds
pop
cmp
gs
lods
jl
cvtpi2ps
das
out
dec
mov
mov
and
imul
fs
outs
ins
fild
shr
dec
xlat
sub
xchg
nop
movs
mov
aas
jb
rcl
movs
fwait
movs
(bad)
sar
xor
jnp
mov
mov
sbb
xor
pop
loop
sbb
movs
adc
js
fs
into
fdivr
in
lock
loop
cmp
popf
xchg
lods
call
jecxz
ds
pusha
into
aas
rcr
jp
repz
scas
mov
push
xor
mov
mov
jno
popf
imul
mov
cmp
hlt
shl
(bad)
or
push
and
push
test
xor
mov
or
and
sbb
cmps
push
(bad)
ins
sbb
xchg
dec
inc
out
xor
data16
xchg
jnp
jae
inc
mov
fs
push
jbe
push
push
gs
mov
je
dec
lods
aad
scas
sub
cmp
push
or
addr16
in
outs
cmps
inc
loope
or
leave
dec
fstp
and
sbb
aad
pop
jl
jo
dec
fisubr
mov
in
jne
jb
stos
out
sub
popa
sbb
clc
call
push
push
sti
xchg
sub
div
out
loop
or
mov
mov
icebp
fcmovne
retf
xchg
xchg
test
sbb
stos
out
test
mov
imul
fwait
xchg
sbb
cmp
xchg
adc
jno
neg
mov
jns
mov
inc
mov
test
outs
jbe
or
add
inc
popf
push
daa
jnp
xor
push
cmp
int
nop
xor
jecxz
imul
mov
sub
jmp
int3
fbld
ins
push
nop
addr16
not
mov
or
mov
push
jg
add
inc
mov
and
into
mov
pop
jo
xchg
or
imul
mov
arpl
bound
mov
cmp
test
xchg
es
push
in
inc
stos
icebp
sbb
dec
rol
das
repnz
xchg
cdq
mov
mov
inc
fwait
xor
aam
cli
loope
pushf
cld
push
pop
out
adc
ret
cdq
out
or
push
add
mov
jp
add
mov
cmc
inc
stos
test
test
pop
dec
iret
sub
sbb
sub
pop
sub
clc
out
fnstcw
mov
mov
and
jb
movs
lea
xchg
in
cs
cwde
jg
sbb
push
std
mov
sub
mov
mov
push
(bad)
push
mov
data16
inc
jo
adc
mov
(bad)
mov
arpl
adc
in
push
data16
icebp
mov
cmps
lock
sub
psubsb
leave
les
icebp
fadd
jmp
fnstsw
cmp
test
ror
pusha
lds
in
xor
and
sub
pop
cmp
jb
inc
stos
mov
jo
ficomp
add
pop
push
loop
xchg
dec
mov
pop
aad
inc
xor
(bad)
adc
adc
jl
rcr
in
or
mov
loope
icebp
aam
adc
fdivp
or
daa
adc
sub
mov
mov
out
rcr
pop
sbb
aas
inc
jmp
in
push
and
gs
cdq
and
call
dec
aaa
mov
jp
daa
inc
repz
dec
lods
xchg
sub
sub
inc
(bad)
jns
jmp
jle
aaa
push
add
sti
push
imul
mov
add
mov
jnp
es
int
mov
fisubr
sti
pusha
ficomp
inc
test
xor
jnp
lock
jmp
adc
adc
sbb
cmp
lahf
jmp
ss
dec
inc
xor
mov
jbe
push
mov
repnz
push
outs
sbb
and
dec
jle
shr
inc
lds
call
nop
je
mov
mov
out
js
jmp
or
dec
cmp
xor
or
nop
sahf
dec
(bad)
retf
xchg
mov
(bad)
pusha
xchg
mov
fist
jae
add
std
in
dec
jmp
stos
pop
cmp
add
int3
mul
jae
sar
mov
jae
fst
and
pop
outs
push
cdq
or
xchg
lods
xor
sbb
addr16
nop
idiv
out
and
or
mov
adc
test
add
add
ret
jns
mov
fs
les
mov
sbb
push
pop
fist
movs
scas
lods
cmp
rol
ins
dec
ins
repz
and
dec
pop
scas
adc
(bad)
push
les
js
enter
or
push
pop
cmp
xchg
mov
mov
daa
loope
cwde
mov
mov
jle
adc
sahf
sbb
cld
and
mov
(bad)
dec
pop
xor
xchg
push
lds
jle
or
or
ds
dec
retf
ins
pop
cdq
mov
inc
(bad)
fucom
dec
loopne
imul
mov
fs
xchg
fisttp
fist
xchg
into
addr16
dec
mov
jecxz
stc
sub
or
test
cmp
mov
test
(bad)
mov
mov
cmps
mov
popa
and
mov
jnp
jbe
in
mov
add
xchg
dec
ss
inc
stos
test
call
xchg
mov
sbb
jle
xchg
dec
shr
pop
fist
(bad)
dec
xchg
add
test
mov
(bad)
mov
movs
repz
dec
ins
clc
adc
jmp
push
and
mov
sbb
rcr
into
jbe
xchg
das
aas
dec
add
jg
loope
xchg
fs
ret
and
gs
and
adc
scas
sbb
and
add
and
xchg
jg
gs
es
and
push
pop
fcom
pop
xor
dec
cmp
pop
mov
pusha
xchg
in
icebp
(bad)
fild
nop
sahf
lock
adc
nop
xchg
push
je
cmp
imul
repz
mov
cmp
cmp
les
xchg
adc
dec
push
and
dec
loope
shl
sbb
outs
dec
xor
pusha
stos
ds
add
or
or
xor
dec
call
fdivr
fnstenv
jl
xor
test
adc
(bad)
push
repnz
jae
imul
(bad)
repnz
sti
iret
push
sbb
mov
imul
retf
pop
pop
cmp
jmp
mov
imul
ja
ret
add
push
and
iret
mov
push
mov
bound
jge
fs
cwde
mov
ins
and
and
fdiv
adc
rol
stos
fs
shl
popa
fstp
and
adc
es
mov
xchg
sbb
aam
pop
ret
rol
movs
add
jno
ret
xchg
bound
outs
and
mov
fisubr
mov
add
repnz
cdq
fidivr
retf
std
mov
loop
call
jecxz
fidiv
das
addr16
sub
lgs
les
out
scas
cs
pop
add
xchg
cs
(bad)
or
pop
xor
lods
pop
leave
idiv
xor
xor
xchg
test
lahf
test
cmps
popa
aam
push
and
retf
xor
pop
nop
fmul
int3
sar
(bad)
mov
cmps
fisub
cld
mov
popa
mov
jge
jo
pop
sub
mov
inc
mov
pmulhw
inc
push
retf
lds
repnz
sub
adc
lea
nop
loop
test
sti
into
mov
pop
pop
rol
mov
mov
sbb
jae
fwait
xchg
ds
sbb
icebp
mov
adc
inc
cmps
test
xor
sub
mul
sub
push
hlt
mov
ds
xchg
xor
ss
jae
aaa
and
jmp
mov
popf
test
arpl
mov
xlat
pop
mov
aaa
inc
clc
xor
sbb
adc
or
mov
orps
adc
or
mov
stos
aad
sbb
push
jmp
aad
add
retf
inc
xor
das
jmp
sbb
jmp
js
inc
test
dec
ror
je
adc
ret
fistp
loope
mov
dec
shr
pop
aas
mov
loop
push
mov
xor
xchg
pop
dec
inc
jl
daa
cli
sbb
out
scas
in
push
cmp
movs
mov
add
xchg
pop
push
cmps
mov
mov
mov
adc
mov
adc
mov
and
adc
stos
fcmovnb
nop
or
addr16
(bad)
lock
arpl
sahf
or
ficomp
push
cmp
test
push
cmp
sbb
in
adc
repz
jl
in
fucom
fldenv
sub
adc
inc
shl
mov
outs
sbb
fidivr
stos
xchg
outs
cmp
push
mov
loopne
jmp
ficom
stc
pop
sysret
(bad)
hlt
in
std
loop
ja
aam
stc
fadd
(bad)
adc
sub
xor
cmp
add
lock
scas
cdq
shl
enter
sub
pop
fwait
(bad)
mov
cmc
mov
xor
lods
outs
and
push
inc
mov
add
shl
mov
rcl
jns
jno
adc
cmp
and
out
test
sbb
sub
iret
lods
push
inc
inc
retf
xor
sbb
stos
lock
mov
mov
enter
in
cmp
out
mov
dec
movs
dec
add
xchg
mov
sbb
lods
fisttp
(bad)
ins
xor
or
mov
push
cmp
out
rep
push
push
enter
cmp
inc
and
push
fistp
fild
sbb
push
dec
jno
xor
adc
inc
enter
inc
loope
xor
and
cmp
xchg
mov
cmps
dec
mov
(bad)
dec
inc
aam
mov
fcomp
movs
jge
xor
xor
arpl
mov
dec
sti
xor
xchg
mov
pop
xchg
adc
or
pop
sbb
rcr
cwde
mov
adc
push
cs
jl
mov
out
mov
sbb
clc
and
jp
fcom
fcom
push
or
pop
out
add
sti
call
leave
test
int3
test
push
jmp
jmp
jmp
popf
cmp
(bad)
mov
fucom
repnz
leave
popf
cli
ret
sub
dec
mov
(bad)
fmul
(bad)
cmps
cmp
ins
jnp
mov
xchg
stos
enter
test
test
mov
pusha
sub
cmp
mov
xchg
adc
loope
inc
test
sbb
cmp
sbb
sbb
xlat
or
pop
mov
into
cmp
inc
sbb
mov
(bad)
les
xchg
leave
sti
push
fwait
xor
out
movs
mov
je
jge
lea
lods
mov
adc
inc
cdq
add
xor
fnstenv
lahf
sub
mov
jle
dec
aaa
xchg
aad
gs
rcr
sub
aas
fisttp
(bad)
xchg
rol
and
pop
mov
cmc
jbe
cwde
(bad)
call
jmp
loopne
mov
popa
(bad)
aam
and
sbb
mov
ds
gs
dec
push
repnz
mov
sahf
jno
pop
xchg
cdq
mov
in
out
and
cmp
fwait
cmovo
test
jecxz
adc
sbb
ret
fsub
jmp
out
xor
jns
xchg
mov
mov
jns
add
mov
shl
mov
cmp
movs
jl
pop
xor
pop
hlt
xor
push
jne
add
rcr
and
inc
sub
or
pushf
sar
loope
pop
loope
mov
jg
mov
jmp
retf
or
adc
push
jl
inc
mov
push
fucomp
fidiv
fsubr
or
mov
ins
movs
das
pop
and
mov
xor
mov
ins
pop
mov
push
out
jmp
ret
rsm
add
jne
enter
pop
pop
loop
leave
add
cmp
or
nop
jbe
inc
cmps
jle
shr
pop
call
xchg
aad
daa
sar
aas
stos
mov
sub
nop
and
bound
pop
and
bound
push
mov
push
add
(bad)
lods
pop
scas
icebp
push
dec
and
cmps
arpl
aam
add
push
out
and
in
pop
rol
scas
iret
lods
arpl
fidivr
xor
imul
lods
fimul
xor
pusha
fbstp
push
cmps
push
(bad)
repnz
hlt
cli
clc
pop
mov
sar
data16
sbb
retf
fist
dec
jmp
mov
sar
popa
mov
dec
daa
mov
mov
aaa
cmp
pop
ror
repnz
push
lock
jmp
xchg
(bad)
pop
adc
call
cmp
sub
inc
int3
pop
test
push
jne
loope
or
cld
xchg
or
cmp
ret
xchg
shr
adc
emms
mov
ffreep
hlt
mov
loop
cmp
imul
pop
fisubr
in
sub
mov
mov
bound
jecxz
jnp
push
mov
aam
jmp
in
mov
and
jo
jbe
mov
stc
in
sub
add
mov
scas
test
jo
or
jle
and
add
sbb
movs
and
xlat
pusha
cmp
dec
imul
mov
movs
jecxz
push
fwait
mov
cmps
jnp
test
ror
in
(bad)
cs
jle
arpl
pminsw
retf
jge
pop
or
scas
xchg
imul
rol
sub
jno
lahf
and
jne
xor
sbb
dec
pop
xchg
mov
(bad)
dec
in
out
jbe
sbb
pop
out
cmps
(bad)
pop
mov
bound
popf
cdq
or
or
mov
add
inc
imul
push
bound
in
int3
push
xchg
mov
retf
mov
ja
mov
xchg
ss
imul
add
mov
push
cmp
iret
adc
mov
hlt
stos
outs
sub
or
movs
push
inc
pusha
repnz
inc
jl
jmp
xchg
ror
jle
inc
sbb
or
jb
or
pause
test
ror
stos
cmp
push
push
push
movaps
mov
fdivr
jno
xor
mov
jl
push
retf
nop
mov
leave
je
ins
ds
pop
xor
jg
rcr
das
iret
xor
arpl
ins
pop
push
into
dec
int3
jg
xchg
xchg
sbb
push
test
icebp
adc
sub
stos
inc
adc
mov
loopne
xchg
fst
inc
(bad)
(bad)
das
adc
mov
dec
mov
mov
jbe
cmp
dec
js
pushf
sub
in
call
pop
ja
sub
and
mov
repnz
imul
jmp
mov
outs
cs
rol
je
adc
xor
test
leave
mov
and
mov
test
mov
shl
adc
cmps
pushf
mov
repz
push
mov
loopne
retf
jb
pushf
xor
add
adc
add
and
sbb
mov
fst
hlt
mov
dec
aad
in
or
pushf
stos
test
push
inc
sbb
(bad)
sti
cld
and
out
mov
inc
sub
add
sub
inc
pop
scas
std
mov
sbb
or
lods
mov
addr16
int
sbb
jl
js
pop
mov
cmp
mov
and
movs
jns
mov
mov
xor
mov
loopne
popf
cmp
(bad)
mov
hlt
adc
pop
dec
add
fdivr
push
and
push
mov
repnz
int3
les
pop
fmul
ds
cmps
lea
cmp
cmp
and
lahf
retf
inc
stos
and
(bad)
jl
xor
inc
aad
leave
mov
(bad)
(bad)
sbb
xchg
inc
(bad)
xchg
pop
retf
ins
push
idiv
out
jbe
in
dec
jge
mov
cmp
fidivr
add
outs
and
xchg
mov
mov
and
hlt
or
push
ss
sar
hlt
mov
push
fmul
mov
dec
js
dec
sub
mov
jne
inc
hlt
pop
mov
xor
popa
pushf
repz
fsub
test
and
xchg
stc
or
xchg
out
mov
iret
cmp
jle
push
stc
sbb
mov
lock
sub
inc
das
cmp
ret
xlat
or
jns
pop
ja
adc
std
leave
mov
adc
dec
cmps
jmp
es
cdq
ror
hlt
pop
clc
pop
bound
in
rol
lock
jo
cmp
xchg
sub
aam
xor
adc
ror
add
push
pop
dec
or
aam
int
mov
push
scas
cld
addr16
jl
xchg
mov
xor
xor
bound
xor
push
dec
nop
or
push
lahf
(bad)
mov
je
push
xchg
int
or
inc
or
mov
cld
add
loope
pop
pop
mov
ror
fdivr
in
and
iret
call
sub
cs
iret
iret
jmp
retf
es
out
icebp
in
icebp
idiv
test
push
jmp
cmp
jle
xchg
adc
int
cmp
loope
cli
arpl
jmp
mov
call
pop
lahf
mov
inc
sahf
or
scas
sub
repz
mov
and
push
mov
add
loope
mov
(bad)
cmp
pop
fsub
and
or
cwde
call
scas
stos
sub
popa
xor
loopne
outs
xor
push
cmp
icebp
adc
and
xor
mov
aam
adc
mov
leave
std
retfw
jmp
adc
sbb
sub
mov
jle
sbb
mov
jmp
inc
or
or
xchg
pop
cmps
mov
rcr
out
cmps
int
xor
rol
call
cmps
and
arpl
sub
fstp
pop
leave
in
push
inc
xchg
call
pop
mov
into
xchg
and
adc
mov
jnp
push
sub
jbe
sti
dec
ins
int
add
ins
add
add
aam
sbb
push
outs
aas
and
cmp
mov
icebp
push
dec
pop
mov
jle
inc
icebp
clc
(bad)
retf
lods
int
pop
inc
movs
sbb
sbb
data16
sbb
jle
clc
xor
push
jnp
mov
or
push
jo
in
xchg
sahf
sar
dec
add
fld
inc
pop
xchg
xchg
(bad)
bnd
dec
dec
xor
jo
dec
pop
pusha
xchg
or
bound
sub
mov
std
sub
cmp
push
loopne
cdq
and
into
jmp
and
cmps
xchg
xchg
dec
js
data16
mov
mov
stos
leave
test
loop
dec
cmp
or
ror
pop
jl
mov
push
mov
dec
leave
xor
sbb
pop
imul
push
sar
push
jg
adc
xor
popf
fmul
call
push
mov
lods
test
add
cwde
test
and
sub
sar
inc
iret
inc
fs
ins
sbb
cli
mov
(bad)
fdivr
mov
imul
jge
cmp
xchg
dec
xchg
rcl
adc
sbb
fcom
fldenv
mov
push
fsubr
mov
mov
std
retf
lods
lds
xchg
jp
mov
sbb
xchg
xlat
mov
dec
xor
cmp
push
loopne
js
mov
mov
lock
sbb
jnp
js
in
inc
pop
sahf
data16
(bad)
dec
push
and
scas
inc
out
and
or
ror
jp
adc
jmp
cli
sar
nop
call
sub
sbb
mov
sub
icebp
or
(bad)
int
lds
mov
pushf
aam
xchg
clc
cmps
fiadd
inc
dec
jmp
sub
movs
push
dec
push
enter
fdiv
aaa
daa
cs
cmps
(bad)
outs
cdq
into
into
mov
cmps
jns
stos
or
push
or
into
pop
or
mov
mov
push
or
sbb
cmp
mov
inc
sub
inc
pop
sbb
mov
sbb
sub
jle
imul
add
mov
xor
mov
lods
cwde
mov
pop
(bad)
adc
in
jno
neg
pop
or
inc
call
xchg
jmp
adc
arpl
daa
pop
cmps
retf
push
(bad)
lods
mov
mov
jne
ds
jns
dec
int3
pop
repnz
cmp
pop
adc
add
shl
mov
pop
cmp
mov
pop
push
add
fsub
push
cmp
mov
cmp
lea
pop
stc
aad
int3
fdiv
add
ret
inc
fst
or
mov
outs
fisttp
cmp
add
adc
mov
and
ja
add
dec
sub
sbb
push
je
sub
sub
sub
mov
ins
rcr
jecxz
rcr
adc
int3
jmp
scas
mov
pop
push
xlat
iret
xchg
daa
(bad)
scas
ror
movzx
sub
ret
xor
jne
in
lods
xchg
ss
or
sar
bound
push
imul
popf
mul
adc
jmp
(bad)
(bad)
jecxz
cli
gs
aad
jnp
ins
or
push
dec
lahf
pusha
jl
ins
icebp
bound
or
mov
jle
data16
mov
xor
enter
das
int3
cs
cmp
std
test
or
jnp
mul
mov
dec
pop
and
outs
(bad)
xor
push
cmp
mov
jp
bound
fcom
cs
adc
gs
push
(bad)
or
xchg
call
or
jp
pop
mov
repnz
stos
xchg
pop
sub
(bad)
es
sub
xchg
cld
fs
pop
xor
and
ror
call
or
mov
mov
and
mov
push
mov
cmp
xchg
add
pop
mov
jmp
fisub
dec
pop
xchg
sbb
inc
mov
mov
stc
(bad)
bound
sbb
add
inc
push
mov
retf
mov
xchg
mov
jecxz
fdiv
jle
cmps
sbb
push
push
sbb
add
(bad)
adc
push
mov
popf
in
lea
xchg
mov
pop
adc
stc
in
jmp
and
inc
mov
or
pop
jae
jmp
mov
mov
std
push
lahf
dec
xor
inc
sub
mov
mov
jne
sbb
out
xchg
pop
ret
push
sbb
jns
or
jns
outs
aas
dec
mov
push
mov
imul
xchg
mov
push
push
push
loopne
loop
jae
adc
push
ins
add
imul
dec
les
mov
in
pushf
mov
outs
shl
mov
xor
(bad)
mov
outs
mov
inc
and
mov
and
mov
out
into
push
mov
inc
icebp
movs
inc
ja
imul
ins
inc
inc
ret
adc
mov
cmp
call
pop
je
mov
sbb
jno
mov
jno
pop
int3
div
mov
jmp
outs
(bad)
sbb
dec
hlt
inc
(bad)
std
mov
push
and
retf
sti
inc
and
jge
jmp
cwde
cmp
add
mov
sub
and
arpl
jb
push
jmp
cmp
pop
push
scas
stc
inc
aad
pop
mov
xor
xor
das
mov
loop
stc
retf
pushf
int3
fnstenv
dec
sub
push
dec
sbb
sub
(bad)
mov
or
xchg
out
sbb
jne
neg
jle
or
dec
mov
stos
mov
dec
adc
leave
fild
mov
aas
test
test
arpl
mov
loop
jo
out
stc
imul
iret
ins
adc
mov
(bad)
fwait
popa
mov
inc
mov
ins
cdq
ret
push
jne
mov
jge
enter
xor
lods
into
in
int
aas
or
cli
stc
jne
enter
add
bnd
mul
push
xchg
in
fs
mov
xchg
push
add
jae
jnp
jg
xlat
int
(bad)
lock
je
dec
sbb
cmp
pop
xor
mov
pop
popa
aam
fbld
xlat
mov
mov
lds
jno
rcr
and
fcom
mov
clc
push
fisubr
jmp
jecxz
pushf
xlat
rol
inc
sub
mov
mov
pop
mov
adc
mov
fdiv
lea
push
push
cs
js
or
or
sub
dec
or
cmp
loop
or
out
das
shl
mov
push
sbb
xchg
outs
mov
sbb
lds
add
dec
jno
test
lods
sbb
push
dec
jnp
fld
iret
pushf
or
and
les
and
and
mov
pop
aaa
push
mov
ret
sbb
push
dec
mov
and
retf
pop
lahf
inc
push
sub
lods
mov
test
in
adc
call
shl
pop
mov
fneni(8087
and
xlat
(bad)
ffreep
clc
in
sub
pusha
mov
mov
pushf
movs
aad
neg
pop
cmps
ret
hlt
popf
dec
ss
jle
test
xor
stos
xor
pusha
dec
xor
xor
mov
lods
outs
aam
in
lahf
pop
xlat
out
stos
push
(bad)
adc
mov
dec
cli
cmc
inc
stos
out
xchg
mov
out
das
gs
mov
and
arpl
and
fdivr
mov
pop
pop
ja
push
mov
lahf
inc
daa
pop
mov
test
mov
(bad)
cmp
inc
ficom
or
push
cmp
pop
shl
sbb
push
lds
fst
mov
scas
ret
sbb
lock
dec
mul
fs
daa
stc
icebp
mov
pop
lods
lods
adc
pop
push
adc
movs
sahf
ins
dec
sub
out
or
(bad)
neg
sbb
sbb
addr16
or
outs
xchg
les
scas
or
dec
inc
fs
pop
cmc
mov
int3
test
test
mov
in
xchg
movs
sti
sub
out
mov
std
test
std
ss
pop
cmp
fwait
push
leave
pusha
fstp
fadd
inc
rcr
sub
sbb
out
int
push
xchg
sahf
clc
xchg
dec
dec
inc
loope
cli
xchg
leave
sbb
inc
jmp
int3
fstp
cmpxchg
ror
ret
or
dec
idiv
sahf
push
fld
mov
xor
mov
inc
dec
mov
mov
ror
push
push
pop
jle
pop
or
inc
(bad)
mov
push
lods
and
mov
(bad)
xor
xchg
es
cmps
xor
in
(bad)
pop
pusha
enter
pop
scas
jns
jbe
xor
dec
cmp
adc
push
js
sub
and
hlt
mov
mov
pushf
or
xchg
leave
std
in
lods
in
xchg
lahf
lock
div
nop
loope
in
xchg
mov
sbb
call
and
in
adc
lods
ficomp
scas
and
add
sti
jmp
xchg
shl
pop
pop
ret
mov
xacquire
sbb
repnz
mov
sub
lahf
xchg
mov
lods
push
jmp
test
mov
xchg
pop
pop
pop
and
(bad)
nop
out
or
cli
jmp
inc
xor
mov
or
sbb
in
sar
pushf
sub
mov
ja
stc
pop
push
lds
ss
adc
dec
inc
imul
jae
pop
jmp
cmps
jno
xor
add
out
sbb
push
fsubp
iret
fwait
test
cmp
(bad)
mov
push
dec
mov
mov
or
out
dec
(bad)
push
aaa
push
mov
rcr
mov
shr
cli
pop
mov
sub
int3
lock
lds
std
jl
(bad)
xchg
rcl
cld
fdivr
inc
xor
pop
(bad)
mov
popf
fwait
mov
xchg
sbb
pop
fisubr
jg
sar
cmp
pop
adc
mov
sbb
je
push
mov
mov
dec
int3
inc
cmps
gs
dec
mov
jns
cmp
(bad)
mov
pop
inc
cmc
push
cs
mov
(bad)
nop
retf
mov
mov
xor
jns
aam
pop
jmp
xchg
stc
push
lods
dec
leave
clc
das
dec
push
dec
inc
rcl
or
in
imul
std
xor
das
data16
lea
popa
cs
sub
dec
mov
or
(bad)
jmp
test
xchg
mov
cdq
stos
test
les
mov
clc
jne
pop
cmp
neg
sub
mov
and
cs
stos
mov
std
out
cld
pop
cmp
sysenter
jb
fisubr
inc
push
xchg
pop
mov
cmp
pop
sahf
outs
lods
jg
or
fdivr
dec
mov
int3
int3
(bad)
pop
call
pusha
and
pop
dec
dec
push
call
xchg
nop
xchg
push
leave
sub
in
cld
sbb
fcom
pop
xor
or
xchg
mov
pop
jmp
int3
fcom
xchg
and
popf
mov
icebp
mov
or
or
lods
js
outs
mov
or
in
mov
pushf
xor
jl
jg
fisttp
xor
aam
adc
sub
and
mov
imul
in
mov
sub
sbb
stos
aaa
add
test
adc
aad
sub
dec
pop
lods
jmp
lea
sbb
mov
and
sti
popa
not
(bad)
mov
pop
hlt
stos
jmp
jb
pusha
cmp
fist
cdq
test
xor
push
jbe
fwait
sub
adc
std
mov
cmp
jle
div
ins
das
add
arpl
add
(bad)
movs
pop
jbe
sbb
cmc
les
and
enter
jle
imul
iret
mov
in
sbb
jnp
dec
add
push
pusha
cmps
mov
inc
into
ins
dec
mov
in
test
out
jmp
stos
sub
ret
cmps
fistp
dec
sub
sahf
mov
retf
in
push
shl
std
out
cmp
or
jge
mov
mov
mov
loopne
les
(bad)
cmp
hlt
inc
mov
js
cwde
daa
mov
pop
dec
fld
(bad)
lea
xchg
sahf
push
cld
mov
(bad)
add
outs
or
and
dec
pop
mov
cmps
in
mov
in
fist
ffreep
push
ret
das
mov
inc
cmc
stos
push
xor
cmp
push
xchg
adc
add
in
pop
add
shl
hlt
les
out
lods
cmps
nop
xchg
retf
xor
cmp
push
daa
iret
adc
push
je
xlat
xchg
ins
ror
pop
retf
ss
jp
cmp
dec
jmp
mov
into
cmp
push
int
inc
(bad)
lock
(bad)
cmp
ins
rol
pop
sub
retf
aaa
mov
ss
mov
inc
xor
sti
int
jnp
push
fcmovnu
dec
movs
push
mov
inc
mov
gs
cmp
add
push
in
imul
cs
mov
sub
fsub
cmp
ret
ja
mov
imul
icebp
std
xchg
mov
add
pop
xor
mov
jle
cmp
dec
ins
stos
push
sub
sbb
gs
pop
jmp
mov
xchg
sti
or
(bad)
mov
test
jg
fs
xchg
mov
pop
pop
or
data16
fucomp
movs
loopne
outs
mov
jne
ins
push
jmp
and
rcr
ret
xchg
into
fwait
inc
push
into
into
clc
call
xchg
cdq
pop
out
popf
lods
fidivr
nop
adc
mov
xchg
adc
fst
inc
clc
mov
add
sar
call
arpl
(bad)
(bad)
cld
repz
std
sbb
std
jmp
movs
in
mov
adc
sub
fidiv
ficomp
cwde
jnp
outs
pushf
repz
pop
ds
test
mov
mov
retf
pop
std
int3
sti
mov
in
mov
mov
and
adc
shl
mov
dec
dec
in
inc
cmp
scas
retf
xor
pop
pop
sti
aas
xor
imul
gs
xchg
push
scas
mov
pop
stos
jb
stos
repz
outs
xchg
shr
mov
fstp
sub
nop
dec
loop
cli
mov
xor
fwait
ins
test
mov
lds
test
nop
fs
mov
test
jecxz
lods
or
lods
js
outs
hlt
push
arpl
test
fimul
sbb
shr
cmp
adc
lea
and
jle
jmp
and
popa
jecxz
mov
addr16
sbb
jne
loope
call
jg
xchg
add
sbb
jl
and
into
ja
jae
xchg
push
aad
fs
test
xlat
jge
ja
and
and
xchg
dec
enter
xor
sbb
mov
jne
xor
push
and
inc
(bad)
pushf
mov
mov
hlt
push
popf
sbb
jmp
cwde
and
mov
sahf
xchg
mov
xlat
fnstenv
shl
leave
push
daa
dec
repnz
not
loop
cmp
and
push
mov
(bad)
cmp
int
test
push
jns
and
test
neg
xor
mov
xchg
out
add
imul
sub
call
mov
sub
sbb
mov
je
jecxz
loopne
pop
cmc
inc
ret
sbb
(bad)
sub
jns
ret
lods
(bad)
aaa
pop
retf
into
movs
mov
jge
mov
test
call
cmp
stos
mov
cld
scas
jp
dec
jbe
add
dec
push
addr16
cdq
push
sbb
xchg
mov
pop
sub
cmp
jg
jne
fcom
push
push
and
outs
mov
retf
add
mov
mov
(bad)
jne
fisubr
stos
enter
sbb
mov
rol
jo
sub
leave
dec
jecxz
repz
fist
or
retf
dec
xchg
mov
lock
adc
cmp
stos
xor
and
mov
ds
xor
(bad)
mov
adc
les
push
gs
adc
popa
ror
jb
addr16
jecxz
aas
rep
mul
mov
mov
mov
xchg
sar
or
out
es
pop
dec
adc
daa
jmp
pcmpeqw
addr16
(bad)
mov
mov
jl
mov
or
sub
les
popa
pop
(bad)
or
inc
mov
pop
clc
and
inc
in
fs
pop
ret
or
pop
daa
test
stc
xchg
mov
dec
mov
fwait
jl
inc
xor
cld
push
mov
shl
sbb
pop
not
retf
iret
ins
jo
shr
enter
aad
das
icebp
mul
adc
(bad)
jp
out
and
mov
jo
jg
pop
jns
lahf
and
das
dec
jge
popf
in
add
xor
loope
in
pop
std
sub
ins
dec
fisttp
out
dec
cwde
and
gs
syscall
cmp
inc
add
mov
push
add
xor
call
lahf
dec
sub
push
cs
add
call
cld
shl
sbb
jb
pop
or
jo
popf
sbb
bound
in
ret
gs
std
jne
ins
mov
add
ja
into
push
pop
(bad)
mov
in
sbb
pop
aaa
in
sahf
jns
push
rcr
test
rcr
xor
xor
jmp
xor
sbb
sub
and
push
xchg
jmp
cmp
lahf
inc
lds
lods
cmp
add
int3
lahf
jmp
push
aam
sbb
movs
icebp
ja
rol
pop
jg
lods
mov
js
lock
cli
mov
sub
loopne
mov
cmp
dec
add
es
jno
or
dec
scas
(bad)
(bad)
mov
adc
js
adc
sbb
adc
inc
and
xchg
psubsw
sub
(bad)
mov
jge
leave
adc
in
sbb
bound
cmps
mov
inc
sbb
push
ins
pop
add
clc
scas
imul
sbb
adc
pop
dec
addr16
lock
pop
add
jl
scas
dec
shl
lock
and
mov
mov
paddq
mov
cmc
sbb
mov
in
xchg
and
in
sub
mov
ret
jbe
and
jbe
push
jp
stos
scas
int
hlt
sbb
jb
fidivr
outs
xor
push
shl
dec
frstor
mov
inc
pop
mov
sub
mov
or
or
inc
pop
popa
mov
scas
out
mov
imul
pop
or
jb
es
xlat
sub
aam
gs
lods
stos
xor
cmp
mov
mov
add
test
sbb
mov
mov
mov
jmp
arpl
sbb
sbb
mov
and
or
inc
sub
fsubrp
mul
adc
mov
stos
push
popf
xchg
xor
addr16
imul
loope
cli
mov
or
iret
sub
sub
sbb
fld
sbb
pop
pop
inc
or
retf
xor
add
cld
mov
mov
inc
push
inc
push
jne
ja
pop
cs
ficom
lods
stc
push
inc
cmc
aas
inc
fld
jp
mov
cmp
inc
adc
push
lahf
enter
adc
push
popf
add
adc
icebp
or
sbb
inc
jg
pop
retf
mov
add
mov
and
dec
sbb
fadd
test
imul
mov
int
je
dec
js
sar
push
inc
lods
rcl
fstp
push
fstp
ret
wrmsr
ror
jecxz
sar
adc
xchg
lods
sahf
js
test
js
mov
jb
ja
or
in
je
sbb
loop
jnp
into
dec
mov
push
mov
push
dec
cs
cwde
pop
mov
adc
pop
pop
jg
bound
xchg
pop
fcom
std
jmp
stos
jne
mov
sbb
cmp
les
and
push
test
repnz
sub
add
mov
enter
xchg
xlat
clc
ds
cmp
pop
es
addr16
repnz
mov
loopne
aam
push
jg
mov
push
outs
lds
loop
lds
test
fsub
sub
sbb
cmp
and
sbb
jo
sbb
hlt
mov
and
add
movs
mov
mov
xchg
push
cmps
push
aaa
add
add
nop
dec
push
arpl
js
repnz
or
sub
and
adc
std
sti
rcr
push
fstp
ret
je
dec
lods
mov
fdiv
stos
icebp
mov
adc
inc
push
inc
or
pop
mov
sub
cmp
clc
mov
inc
dec
sbb
mov
jnp
stos
clc
retf
int
jge
(bad)
pop
mov
xchg
or
sub
repnz
jmp
fbld
add
xchg
xchg
jge
and
xchg
dec
sub
call
push
and
aas
jge
pushf
xor
push
mov
cwde
addr16
mov
mov
cmp
mov
inc
jle
sbb
xchg
push
pushf
(bad)
clc
push
xor
fs
ja
imul
fldenv
in
pop
push
push
xchg
mov
adc
push
fld
xor
cmp
loope
jecxz
sti
xchg
call
adc
sbb
lahf
mov
int3
cld
repnz
ja
xlat
push
sar
cmp
ret
and
das
push
mov
fs
xor
push
mov
in
mov
xor
mov
loopne
(bad)
and
or
xchg
adc
xchg
(bad)
xor
mov
clc
sub
xchg
int3
mov
jno
retf
push
test
xor
fdiv
mov
push
icebp
add
in
scas
leave
fnstenv
inc
jb
xchg
or
stc
mov
jno
cmp
loopne
cmp
jg
stos
stc
repz
shl
push
push
pop
xchg
jbe
mov
imul
jbe
cmp
pusha
(bad)
jle
dec
push
jns
push
or
not
dec
cmp
fcomp
push
fucomip
lods
sub
mov
retf
ds
inc
dec
nop
inc
add
cmc
xchg
fsub
call
fwait
jb
stos
adc
inc
mov
gs
out
jo
add
jnp
push
xchg
pushf
pushf
push
cld
or
out
cs
(bad)
sbb
xchg
test
mov
jl
dec
int
fucomi
jg
fisttp
sub
add
jnp
scas
push
inc
arpl
jmp
dec
push
je
in
push
add
retf
cdq
mov
xchg
or
inc
and
or
popa
adc
out
xor
rcl
jmp
call
(bad)
icebp
add
xchg
or
jno
sbb
sbb
add
xchg
mov
sub
ins
jns
loope
popf
push
add
push
jo
in
fcmovnb
ins
mov
push
hlt
movs
sub
and
data16
call
hlt
test
mov
push
ret
call
lods
call
push
rcl
aaa
xor
pop
js
scas
sar
fs
mov
mov
cli
pop
mov
adc
mov
dec
repz
sbb
inc
pop
cdq
repz
inc
std
aaa
or
movs
les
fild
aad
dec
rcr
aad
out
xchg
fisttp
ret
mov
sbb
js
adc
mov
arpl
movs
mov
imul
fimul
out
sbb
in
gs
or
mov
(bad)
(bad)
jno
lods
leave
xchg
mov
in
and
mov
out
clc
test
loopne
pop
gs
addr16
push
xchg
jno
fisubr
mov
data16
stc
pop
or
dec
fwait
adc
jmp
xor
imul
mov
cmc
stos
std
adc
jmp
pop
fmul
hlt
xchg
xor
lds
cmp
sbb
mov
adc
out
and
xor
(bad)
and
dec
gs
push
mov
jmp
push
int3
pop
in
nop
dec
mov
jo
jmp
aam
mov
cdq
dec
mov
adc
call
sub
aad
mov
ja
je
mov
and
ins
scas
mov
lods
mov
xchg
cs
jne
int3
mov
aad
xchg
mov
mov
add
fld
jecxz
xchg
clc
ds
ficom
sahf
idiv
jbe
sub
test
adc
add
add
mov
loop
loop
xchg
inc
mov
xchg
fild
mov
cmp
jecxz
pop
(bad)
mov
outs
lock
test
out
xchg
dec
cwde
leave
mov
jns
pop
jmp
aad
das
lahf
mov
mov
cld
jg
das
loopne
stos
jb
(bad)
mov
sub
mov
aas
imul
mov
push
dec
jl
xchg
dec
(bad)
mov
hlt
mul
adc
fucomip
lahf
lds
lock
mov
xor
jge
sub
jle
iret
into
lahf
(bad)
jg
mov
sub
(bad)
je
nop
xchg
out
or
in
and
pop
mov
movs
or
repz
xor
pop
das
jmp
ror
shl
enter
jecxz
pop
cmps
sbb
pop
hlt
dec
mov
push
inc
push
mov
cmps
adc
retf
fisubr
jno
or
aas
inc
adc
mov
xchg
clc
mov
nop
retf
push
mov
xchg
leave
dec
mov
in
arpl
movs
aas
xchg
or
mov
(bad)
(bad)
(bad)
pushf
xchg
cld
xor
out
fldcw
mov
call
or
cwde
cs
adc
rol
lar
push
ins
je
stos
jge
cmps
out
fistp
xchg
mov
adc
xor
fsub
jb
xor
test
or
mov
xchg
inc
arpl
mov
inc
or
loop
sbb
addr16
in
pop
retf
mov
and
add
sub
mov
mov
lods
push
das
icebp
jmp
or
inc
xlat
iret
rcr
sbb
(bad)
sub
push
pop
or
fstp
ja
es
leave
push
or
adc
sbb
repz
mov
cmp
data16
add
xchg
mov
imul
inc
fisttp
push
sub
bound
jno
jg
jl
adc
mov
mov
push
data16
mov
xor
inc
(bad)
xor
adc
or
data16
(bad)
call
add
in
mov
sub
add
jl
and
mov
rcl
add
or
(bad)
mov
lods
sbb
xchg
std
jl
xchg
mov
out
sub
mov
aad
or
jae
lahf
mov
mov
out
adc
(bad)
mov
pop
or
gs
mov
gs
cmp
cmp
loop
les
inc
idiv
out
syscall
fwait
jne
pop
or
out
mov
repz
in
dec
scas
out
dec
adc
sub
pop
mov
jno
pop
addr16
mov
(bad)
popa
push
mov
ins
setp
and
xor
stos
push
mov
add
or
xchg
jge
jmp
loop
or
sub
jo
jmp
mov
mov
and
mov
xchg
dec
ds
mov
dec
lahf
push
pop
adc
inc
cmp
iret
fiadd
push
cwde
jle
push
inc
jae
es
or
or
sbb
and
adc
or
retf
addr16
(bad)
mov
sbb
cmp
fistp
and
cld
jo
pushf
aam
mov
add
jno
sti
xor
unpcklps
mov
cmc
in
es
add
mov
jge
xchg
data16
sbb
mov
loopne
outs
into
inc
stos
push
and
add
nop
shr
mov
hlt
gs
repz
test
xchg
sahf
arpl
push
xor
outs
xor
jmp
jg
bound
add
mov
mov
jge
in
sbb
scas
pop
jmp
imul
mov
sti
lea
iret
sub
shr
sub
xchg
pop
mov
mov
mov
enter
arpl
xlat
mov
movs
pusha
repnz
cdq
cmps
(bad)
pop
cld
lahf
mov
jge
push
fwait
mov
stos
jp
mov
inc
push
jge
sub
xor
or
imul
gs
cli
mov
mov
dec
sahf
xor
(bad)
fild
ja
(bad)
mov
addr16
lock
fld
push
mov
push
push
mov
shl
lock
fadd
jl
push
clc
jg
loop
xor
inc
pop
sub
push
shl
or
push
cmp
(bad)
dec
jg
mov
out
mov
ins
bound
dec
imul
gs
shl
(bad)
rcr
xchg
dec
lds
in
(bad)
inc
loopne
mov
xchg
clc
sub
shl
adc
xchg
enter
aas
inc
and
pop
push
int
aam
sbb
cmp
cli
push
scas
cmps
dec
or
sar
int
div
mov
int3
cmp
int3
popf
jle
pop
jg
sbb
jbe
xchg
cmp
add
cli
enter
xchg
adc
mov
lods
ror
retf
dec
jg
push
pop
mov
rcr
mov
mov
lds
loopne
ret
or
sbb
or
jle
out
inc
mov
adc
cmp
xchg
jo
push
and
adc
sub
xchg
jb
ins
xor
cmc
inc
pop
and
cmp
loope
mov
repnz
(bad)
lods
cmps
cdq
jmp
jb
test
xchg
add
pop
push
add
inc
fld
(bad)
cmp
iret
jb
ret
pop
cmps
aas
cld
popa
cld
rol
lods
sub
pop
cld
cmp
dec
pop
sbb
add
jmp
movs
imul
rcl
rcr
hlt
ds
(bad)
lock
sti
(bad)
mov
retf
add
icebp
mov
dec
scas
dec
pop
sbb
push
neg
and
jg
popf
in
repnz
(bad)
fisttp
(bad)
sbb
arpl
add
lds
outs
mov
cmp
es
shr
push
xlat
inc
dec
cmp
dec
push
xchg
inc
mov
mov
loop
enter
imul
dec
cmp
das
and
or
mov
jbe
out
adc
adc
jge
lods
mov
(bad)
js
jg
and
jmp
xor
mov
mov
mov
pop
fisttp
sti
int3
push
cmp
(bad)
call
dec
jnp
sub
in
stc
in
jnp
imul
into
or
pop
pop
dec
xor
push
xor
or
cmps
in
sbb
jge
dec
push
inc
mov
mov
les
push
cmp
push
pop
nop
leave
push
mov
and
jne
in
inc
ins
test
in
add
and
or
mov
inc
add
mov
cli
mov
push
dec
mov
in
push
out
jo
push
jo
jnp
xchg
mov
inc
in
xchg
xchg
sbb
call
and
inc
es
(bad)
sti
mov
cmp
sub
push
les
ficomp
pop
sub
mov
mov
or
mov
sub
pushf
and
mov
imul
mov
inc
mov
or
xor
retf
fwait
shl
xor
pusha
mov
es
sub
dec
mov
adc
scas
jg
lds
jb
sbb
in
or
xchg
xor
sbb
xchg
dec
arpl
add
mov
(bad)
xchg
sahf
pop
arpl
jg
sbb
dec
mov
mov
inc
sub
movs
repnz
mov
stc
fst
test
ss
(bad)
(bad)
sub
jo
mov
neg
scas
mov
inc
lds
add
pop
test
adc
push
jnp
jmp
pop
mov
hlt
xor
retf
inc
push
dec
or
add
inc
(bad)
outs
sbb
into
aaa
sub
inc
pop
mov
push
mov
out
in
xchg
cmp
clc
lea
(bad)
shl
sbb
sub
push
dec
mov
adc
mov
imul
(bad)
sahf
sub
pusha
pushf
pushw
pushf
dec
pop
mov
retf
lea
sbb
push
jle
ror
jnp
mov
cdq
xor
cmp
add
iret
das
pop
mov
pop
pop
adc
ds
add
ds
push
ins
or
ror
mov
iret
lods
cld
ja
cmp
xor
call
fiadd
scas
mov
ins
or
jmp
mov
mov
pop
sbb
adc
imul
cs
fcmovnu
(bad)
nop
inc
xchg
into
cmp
mov
mov
pop
sub
std
mov
bound
cmp
or
xor
mov
and
bound
(bad)
call
dec
call
jb
or
test
fmul
dec
fs
xchg
push
stos
lods
xor
in
jg
push
call
sub
pop
push
mov
cmc
cmp
(bad)
sbb
popa
(bad)
sbb
push
iret
jns
outs
and
xor
mov
pop
mov
cli
ja
cmp
pop
inc
jmp
mov
jecxz
pop
pusha
rcr
(bad)
cmp
fs
dec
add
aam
pop
leave
mov
xchg
add
mov
add
pop
pusha
aam
cmps
sbb
xor
mov
dec
stc
mov
enter
sub
mov
mov
push
xchg
push
leave
cmc
(bad)
hlt
xlat
imul
xor
adc
cmp
hlt
cmp
(bad)
fneni(8087
cdq
and
dec
pop
jbe
addr16
push
xchg
adc
loopne
mov
inc
ret
clc
push
inc
popa
cdq
inc
inc
xor
jle
ds
xor
mov
(bad)
adc
add
rol
dec
out
pop
popa
fcomp
mov
mov
and
(bad)
and
xchg
inc
inc
aam
fld
dec
push
test
in
sahf
repz
jle
retf
out
adc
mov
(bad)
pop
push
dec
outs
bound
push
mov
and
inc
push
in
push
loopne
jne
jecxz
cmp
pop
outs
iret
test
and
mov
mov
mov
(bad)
(bad)
iret
sbb
ss
mov
mov
jne
call
test
jns
in
out
mov
xlat
dec
cwde
cld
imul
dec
movs
or
fstp
fist
mov
pusha
and
push
ficom
jmp
aam
cli
pop
cmp
(bad)
call
rcr
dec
dec
sahf
jg
adc
je
fsub
(bad)
mov
outs
or
jno
xchg
inc
mov
mov
loope
test
sub
or
sub
aas
and
push
adc
rol
pop
mov
js
push
iret
lds
sub
popa
push
push
lahf
aam
popa
lds
or
aas
add
shl
loopne
int
(bad)
push
pushf
fnstcw
in
cmp
das
push
retf
pop
ja
das
jbe
pop
out
aam
push
cmps
nop
mov
in
push
pop
or
add
je
push
push
stc
dec
pop
push
pop
mov
push
xor
stos
mov
call
sub
adc
ins
sti
fcomp
inc
arpl
(bad)
ficomp
pop
or
xor
mov
(bad)
jecxz
or
xor
mov
fucomp
lock
sub
add
sbb
es
inc
cmp
lahf
adc
retf
cmp
jecxz
lahf
or
push
mov
dec
add
gs
and
fsubr
cs
mov
push
pushf
stc
dec
call
cli
inc
dec
dec
inc
push
fnsave
push
std
jle
pop
out
movs
stc
pop
into
es
test
mov
fs
cmp
pop
lss
out
sbb
jecxz
out
dec
mov
add
jne
pushf
jo
mov
jo
minps
addr16
mov
fwait
data16
mov
out
mov
pop
mov
data16
pop
aaa
dec
or
adc
pop
cmps
xor
inc
mov
lahf
sbb
pop
repz
xchg
ins
(bad)
fmul
xchg
getsec
cli
or
(bad)
outs
enter
inc
out
loope
pop
ficomp
mov
cld
pop
push
icebp
dec
push
sub
jo
xor
push
jo
mov
popa
mov
cmp
ret
test
lods
cmp
out
inc
clc
jne
lahf
mov
push
(bad)
jmp
sahf
adc
or
xchg
enter
push
dec
push
dec
push
ins
lock
sub
xchg
pop
rcr
xchg
(bad)
sub
sub
push
adc
xchg
es
dec
fisttp
cmp
sbb
dec
stos
int
jle
ficom
jmp
adc
adc
pop
retf
(bad)
cmp
mov
rcl
(bad)
xchg
xchg
and
mov
bound
rcl
popf
pop
(bad)
addr16
fist
jo
sbb
push
sti
and
cli
les
into
cmp
(bad)
jmp
daa
aaa
pop
das
jbe
mov
fcom
(bad)
movnti
xor
sbb
and
and
xchg
outs
lock
int3
mov
aas
jg
and
lock
in
popf
scas
cwde
lods
cmp
xchg
jl
sar
add
hlt
pop
iret
fst
js
ja
ins
pop
leave
dec
jne
adc
xchg
stos
lods
mov
xchg
jmp
ins
sbb
mov
jge
add
lock
aam
rcr
fisub
enter
push
popa
and
add
add
mov
xchg
pop
adc
icebp
shl
pushw
imul
mov
(bad)
cdq
(bad)
sub
inc
xlat
sbb
repz
or
cmp
gs
xchg
fwait
sbb
stc
cmps
pop
mov
push
push
(bad)
popa
xchg
out
popa
inc
(bad)
shl
add
mov
push
push
xor
(bad)
dec
adc
mov
pushf
push
out
xor
arpl
enter
aam
dec
test
fdivp
add
outs
push
sub
shl
jb
mov
popf
aad
push
gs
shl
out
je
in
sbb
fstp
push
loop
rcl
jecxz
(bad)
es
cmps
pop
pop
jle
push
cwde
outs
fdiv
jb
mov
inc
inc
cmp
xor
xchg
and
call
mov
repnz
xor
imul
lahf
mov
aas
outs
(bad)
cld
js
(bad)
jns
mov
lods
aaa
ret
shr
pusha
dec
inc
and
cwde
movs
setbe
rol
mov
stos
fcom
call
jae
xchg
test
movs
mov
push
mov
dec
mov
adc
mov
pop
(bad)
retf
out
inc
xor
data16
in
ss
mov
js
adc
xchg
xchg
xchg
or
mov
(bad)
lahf
loope
pop
cmp
in
(bad)
sti
scas
jp
movs
mov
movs
inc
jbe
sub
sar
repz
xchg
cmp
mov
dec
fnstsw
dec
mov
sbb
nop
bts
(bad)
cmp
daa
push
mov
or
cmps
cmp
leave
mov
mov
in
loopne
loopne
jnp
fst
xor
test
mov
ins
aad
(bad)
pop
js
les
dec
popa
je
ror
sub
xchg
outs
test
dec
add
sub
popf
mov
daa
and
pop
sub
pop
aam
mov
pop
push
mov
fs
mov
sub
xor
push
pusha
aam
pushf
xchg
and
cmc
mov
add
scas
sbb
push
mov
mov
ror
cdq
and
clc
outs
fsubrp
or
mov
outs
xor
mov
(bad)
push
test
call
push
push
mov
cmp
cmps
mov
jno
mov
or
jne
cmp
mov
imul
ins
cmp
das
scas
in
pusha
mov
shl
popf
fcmove
test
pop
xor
mov
sub
cmp
xchg
out
sbb
fst
xchg
and
cwde
shr
repnz
add
sbb
inc
inc
imul
push
lock
mov
aas
lock
pop
outs
push
mov
sti
ins
sub
imul
sub
mov
jo
dec
sbb
pusha
sbb
test
or
inc
or
test
and
inc
jbe
retf
popa
enter
retf
jmp
jmp
dec
repnz
xchg
iret
mov
xchg
adc
les
fs
cmp
inc
shr
imul
mov
mov
sub
push
lock
fwait
das
mov
mov
jns
inc
jne
xchg
gs
mov
mov
xadd
jmp
jmp
push
add
cmp
hlt
cdq
mov
mov
mov
pop
mov
cmp
cmp
in
jmp
rol
addr16
std
or
scas
mov
loope
cwde
(bad)
push
sub
aam
inc
movs
mov
imul
fidiv
pop
push
aad
inc
loope
test
jne
jmp
and
mov
les
pop
test
aas
pop
or
jg
push
clc
jge
ins
lahf
cmps
mov
pop
lea
test
mov
mov
add
popf
push
cdq
sub
psubq
scas
inc
mov
fld
fmul
aam
repnz
cmp
pop
inc
xchg
loope
pop
repz
sbb
jl
fdivr
lock
mov
data16
pushf
mov
pop
push
shl
push
lods
scas
(bad)
into
iret
sbb
push
mov
sub
pop
cdq
or
pop
inc
push
jno
jp
call
js
scas
mov
fisubr
mov
nop
(bad)
repz
or
pop
inc
jae
jbe
sbb
(bad)
retf
jecxz
(bad)
inc
xchg
push
pop
call
pop
pop
pop
pushf
sbb
fbstp
adc
push
loopne
xchg
add
jle
fild
aaa
movs
cdq
mov
cmp
pop
fadd
push
adc
fistp
adc
pop
mov
or
xchg
jb
or
shl
cwde
(bad)
iret
(bad)
and
dec
je
ss
dec
inc
jae
jle
add
ror
fmul
push
mov
fld
test
jnp
(bad)
sub
xor
jg
imul
hlt
ss
push
call
jle
stos
xor
cmp
arpl
cmp
in
dec
cmp
and
pop
or
into
inc
lds
and
and
pop
sub
mov
cdq
lods
jae
icebp
int3
jg
cmp
fwait
inc
add
loop
mov
(bad)
in
adc
les
cmp
cmp
xor
jnp
inc
and
and
sbb
data16
lahf
shl
ds
and
jge
pop
dec
int3
push
imul
leave
jmp
mov
imul
adc
pop
outs
jbe
mov
push
xchg
mov
hlt
jp
xchg
ret
neg
jg
pop
mul
push
in
and
mov
test
pop
pop
lock
push
dec
cs
sar
out
mov
inc
ss
dec
jecxz
es
dec
iret
out
scas
sub
cmp
mov
cld
adc
push
ret
pop
frstor
pop
shl
enter
or
pop
dec
push
stos
(bad)
cmps
dec
sub
lods
xor
(bad)
ins
rcl
mov
(bad)
xchg
rol
fiadd
pop
and
push
jne
cs
out
pop
cwde
inc
jle
inc
jno
shr
mov
adc
and
sub
ins
imul
mov
jl
jmp
lods
fadd
in
push
(bad)
xor
pop
test
dec
leave
aam
repz
sbb
push
mov
loopne
daa
mov
mov
(bad)
cmps
jne
call
push
mov
dec
sbb
jle
cmp
add
mov
iret
hlt
adc
and
in
imul
add
addr16
mov
pop
ins
movs
xchg
inc
(bad)
arpl
push
ror
sub
out
or
div
or
xor
cmp
push
rep
(bad)
jbe
cs
sahf
ror
sbb
push
sbb
dec
add
repz
cmp
outs
pop
push
bound
mov
sbb
xchg
mov
aaa
ret
inc
test
push
popa
ss
psubw
cmp
pop
adc
jecxz
add
add
add
jmp
hlt
pop
rcr
inc
sbb
jge
xor
xlat
je
jne
xor
outs
(bad)
retf
ret
pop
clc
jmp
mov
add
in
dec
or
cs
mov
repz
sub
inc
sar
mov
gs
jmp
and
xchg
mov
sub
mov
in
add
outs
push
test
jne
outs
push
xchg
inc
xor
pop
into
rcl
inc
cli
mov
retf
in
xchg
stos
or
push
sbb
aad
(bad)
adc
adc
sub
inc
iret
stos
mov
je
test
lea
dec
jl
retf
add
lds
leave
mov
xchg
sti
xor
call
mov
jl
das
leave
scas
sub
ftst
stc
(bad)
int3
or
or
stos
adc
sbb
pusha
(bad)
test
adc
enter
shl
imul
push
dec
icebp
xor
sbb
setno
jl
sub
mov
dec
nop
mov
adc
(bad)
jecxz
or
xchg
pop
in
cwde
js
mov
mov
push
pop
and
mov
sbb
mov
fs
push
(bad)
cli
imul
xor
add
adc
and
int
sub
clc
pop
aaa
stos
cmp
mov
fstp
shl
xor
jge
mov
xlat
xchg
loop
mov
repz
sbb
push
push
xor
dec
jmp
std
(bad)
cmp
xor
push
addr16
std
push
(bad)
fninit
fisttp
out
add
mov
ror
sti
jmp
addr16
inc
jb
xor
mov
js
sub
fcomip
sbb
mov
dec
or
xchg
lods
push
mov
mov
test
sub
pop
push
lea
lods
inc
or
cmp
xchg
sub
jbe
mov
mov
test
pop
xor
je
mov
cmps
xchg
cli
fist
loopne
push
mov
cwde
ins
inc
hlt
push
cli
jg
inc
adc
mov
xchg
test
ds
pop
jns
fsubr
sahf
mov
inc
inc
jle
and
stos
mov
push
mov
hlt
sbb
jmp
cmp
repz
push
pop
iret
dec
int3
dec
cmps
data16
xchg
mov
aad
repnz
jb
stc
outs
je
mov
jle
inc
add
mov
inc
je
mov
daa
pop
and
cs
inc
hlt
mov
mov
pop
sbb
cmp
inc
mov
or
imul
nop
xchg
sbb
iret
mov
mov
rcl
jo
dec
jl
jbe
test
and
fld
inc
push
into
xchg
and
inc
and
cmp
xchg
ret
mov
push
fnstcw
fisubr
push
sbb
imul
popa
dec
aam
inc
stos
in
mov
iret
leave
push
loope
push
pushf
fnstcw
xchg
out
fadd
fst
push
cmp
(bad)
fisttp
popa
fnstenv
sub
(bad)
int3
hlt
lahf
lds
jno
ins
jge
lea
icebp
sub
fadd
(bad)
mov
cmps
jecxz
xor
xor
ins
(bad)
sbb
addr16
inc
or
mov
pop
cdq
retf
cs
ins
add
jg
mov
add
jg
mov
imul
or
call
xchg
mov
clc
sub
retf
nop
pop
sub
dec
jbe
inc
mov
or
jnp
iret
lea
adc
repnz
scas
push
jne
outs
into
iret
inc
inc
and
pusha
sbb
int3
hlt
pop
fbstp
outs
mov
loopne
inc
mov
add
jnp
bound
dec
outs
dec
mov
jno
daa
cwde
pop
mov
cmp
lds
stc
mov
div
lods
xchg
sar
adc
xchg
in
addr16
fcomp
mov
or
fist
(bad)
js
cmc
imul
sbb
fmulp
xchg
pop
cmp
and
dec
mov
lahf
xchg
dec
(bad)
jae
mov
pop
ja
shl
mov
repz
fidivr
bound
nop
push
aas
dec
mov
jmp
add
mov
out
sub
shl
nop
loop
loop
sub
imul
mov
cmp
mov
inc
add
mul
push
mov
or
mov
jecxz
jge
inc
imul
inc
out
pusha
aas
(bad)
mov
test
lods
dec
adc
or
adc
out
in
jb
imul
sub
jno
inc
pop
push
or
xchg
lahf
imul
out
or
out
movs
nop
lods
rcl
xor
mov
xor
pop
push
rcl
push
pop
in
mov
ds
push
daa
add
and
cmc
or
stc
scas
jge
sub
retf
in
push
fmulp
push
sbb
pop
xchg
push
pushf
ja
pop
mov
pop
mov
test
mov
das
push
and
scas
fidivr
cmc
add
pop
inc
stos
adc
scas
dec
sbb
or
int3
mov
pushf
mov
push
xor
push
aaa
lods
pop
mov
push
sar
cmp
mov
inc
pop
push
in
(bad)
jmp
in
pusha
jge
pusha
push
addr16
mov
js
pop
mov
jp
sbb
lods
sbb
loope
ds
adc
add
stos
dec
mov
sub
fs
cmp
mov
jno
pop
in
dec
(bad)
adc
call
cld
jnp
sub
das
pop
inc
cmp
adc
xchg
cmp
das
retf
icebp
mov
outs
fidiv
inc
icebp
or
(bad)
push
je
mov
inc
imul
ror
xor
mov
jb
sub
or
(bad)
shl
call
sub
(bad)
out
out
mov
xor
scas
dec
push
push
dec
add
bound
push
mov
jae
and
pop
xlat
mov
jmp
dec
ja
enter
push
add
mov
jmp
xchg
dec
lahf
aas
mov
jmp
inc
xchg
pop
mov
mov
dec
cld
jecxz
xchg
sub
xchg
jge
add
cmp
mov
xchg
nop
ds
mov
dec
int3
mov
cmps
fnstsw
ds
xchg
xchg
and
loopne
cmp
es
mov
cmp
mov
adc
sbb
pop
pop
cmc
shr
add
adc
push
out
aaa
syscall
xchg
push
push
mov
xchg
dec
pop
push
(bad)
xchg
fdivr
lea
repz
shr
sbb
pop
cli
(bad)
ret
jge
out
mov
xchg
mov
pop
cmps
add
shl
and
pop
hlt
(bad)
mov
add
mov
dec
lods
ds
mov
ret
in
dec
loopne
loopne
(bad)
(bad)
aad
fimul
jmp
xchg
jmp
int3
dec
ds
sbb
sub
ror
sbb
iret
int3
int
neg
and
inc
mov
mov
adc
pop
inc
xchg
rcr
jecxz
xbegin
jno
pop
jb
leave
ins
mov
mov
adc
dec
stc
xlat
inc
jae
dec
ret
inc
and
mov
(bad)
push
pop
sub
ror
fstp
je
unpckhps
and
jle
sub
add
retf
in
sub
cmp
icebp
fiadd
ss
jmp
(bad)
jae
adc
adc
mov
ins
pop
dec
mov
or
jne
test
dec
xor
mov
jae
or
rcr
jno
pop
push
mov
es
fwait
mov
mov
(bad)
mov
inc
inc
pop
inc
mov
shr
or
popa
out
add
sbb
dec
dec
test
rcr
(bad)
jne
shl
lds
adc
outs
dec
lods
sti
repz
pop
inc
mov
cli
add
sbb
hlt
fadd
sbb
outs
adc
mov
and
xchg
mov
in
mov
push
in
test
fnstcw
mov
ja
add
cmp
cmp
mov
div
mov
sar
lods
sbb
mov
dec
ret
jp
add
(bad)
dec
pop
ins
js
push
scas
xor
fdivr
out
(bad)
and
lock
sahf
mov
out
cmp
cmps
jb
cli
pop
dec
out
sbb
add
inc
xor
fwait
jge
stc
cmp
call
out
scas
movs
push
jno
mul
repnz
cmp
(bad)
enter
or
inc
xchg
leave
sti
pop
inc
out
cmp
stos
adc
inc
in
in
pushf
shl
(bad)
push
fidivr
in
xchg
pop
les
pop
mov
jmp
cmp
mov
jle
mov
fldenv
fwait
neg
mov
push
pop
mov
and
mov
push
out
xchg
sar
cmc
xchg
retf
test
jns
imul
jb
lea
mov
dec
int3
fisubr
add
(bad)
sbb
pop
or
xor
adc
push
(bad)
(bad)
lods
repnz
dec
iret
ins
dec
inc
out
jg
sub
xchg
shl
shl
jno
aad
das
bound
into
fwait
cmp
adc
add
mov
fwait
sub
inc
std
sub
int
out
sahf
icebp
sub
jg
xlat
sub
rcr
inc
jbe
ss
scas
leave
mov
dec
inc
xor
mov
cmps
aas
inc
je
stos
jns
hlt
ds
mov
xchg
or
outs
into
sbb
out
rcl
shl
push
fidiv
repz
mov
dec
jbe
xor
pop
arpl
shl
mov
mov
jle
cld
sahf
mov
shr
imul
pop
lods
cmp
dec
inc
div
mov
pushf
push
pop
fcmovnbe
cmps
ins
das
inc
mov
inc
lods
aad
inc
lahf
mov
mov
or
pop
mul
mov
sub
push
adc
clc
push
int
std
aad
pop
dec
cmp
xchg
aas
ins
push
hlt
das
jg
dec
cld
mov
dec
inc
or
test
mov
dec
push
leave
lea
inc
and
inc
mov
dec
nop
xor
inc
scas
xchg
enter
adc
mov
aaa
mov
dec
mov
xor
pop
push
xchg
movs
xlat
out
nop
in
push
xor
fwait
stos
(bad)
jecxz
pusha
lds
inc
xor
int3
and
and
aas
inc
int3
jae
cmp
cld
jp
jns
stos
lock
jl
sub
jns
add
cdq
into
fidiv
fld
gs
cmp
repz
in
jno
fistp
sub
jb
jl
xor
jge
add
pushf
xchg
in
in
cmps
es
(bad)
int3
arpl
test
test
imul
test
ins
cdq
cmp
and
test
cmp
(bad)
enter
mov
mov
gs
addr16
push
add
mov
(bad)
sar
test
jne
prefetch
fwait
inc
shl
pop
add
mov
out
lahf
add
jg
inc
pop
sub
loop
inc
sahf
ins
jge
cmp
(bad)
jp
jle
std
mov
inc
inc
pop
scas
mov
xchg
adc
mov
push
out
inc
rcl
inc
cmp
out
ret
jnp
lock
sbb
or
or
nop
mov
jbe
call
outs
call
sbb
out
arpl
mov
xchg
stos
and
xor
in
dec
sub
div
sahf
dec
pushf
mov
add
in
gs
call
lock
jmp
mov
imul
pop
mov
sub
adc
or
xchg
imul
xchg
sbb
repz
std
fsubr
lds
mov
inc
sti
mov
fs
in
sbb
aam
sub
sub
cwde
push
cmp
xchg
mov
pop
mov
and
pop
loope
retf
mul
stos
cmc
push
lahf
sub
sbb
add
jbe
dec
or
jl
jns
loopne
or
sbb
add
mov
xchg
icebp
add
mov
cmp
loopne
push
sub
out
popf
jnp
cld
into
and
mov
sub
jg
addr16
push
(bad)
(bad)
pop
inc
adc
out
cli
retf
bound
jmp
sahf
out
mov
lock
repz
call
and
mov
pop
adc
inc
into
popa
sahf
or
loop
inc
add
ret
jnp
fcom
aad
cli
or
mov
dec
loope
sbb
lahf
push
ret
cld
push
out
cs
xor
mov
sub
sub
jb
test
push
outs
je
outs
std
pop
mov
sub
mov
outs
mov
ret
mov
ins
aam
cmp
scas
pop
dec
jmp
lods
mov
push
repz
call
jo
sbb
idiv
(bad)
mov
daa
mov
data16
das
pop
sbb
sub
jg
repz
xor
lods
imul
(bad)
pop
sbb
and
push
imul
in
mov
(bad)
mov
imul
push
mov
fldcw
adc
(bad)
in
imul
and
outs
cld
and
into
xor
sbb
and
sub
pop
movs
cmp
sub
retf
sub
pop
outs
jmp
dec
cmp
sti
sub
sub
mov
lds
push
test
jecxz
(bad)
push
cld
fadd
xchg
fcom
add
icebp
scas
jo
fdivr
lods
pop
jns
xor
or
fiadd
jns
mov
sbb
adc
jmp
(bad)
jnp
mov
mov
(bad)
xor
mul
fld
je
inc
inc
loop
dec
into
imul
mov
aam
dec
fstp
mov
fisub
fwait
dec
dec
rcl
cmp
ror
add
sti
jmp
pop
mov
data16
or
jmp
shr
pop
loop
push
fwait
pop
ins
add
add
mov
sub
jbe
mov
bswap
sub
jp
jmp
cmp
mov
xchg
imul
mov
popf
mov
(bad)
cmc
dec
addr16
adc
and
bound
dec
jg
dec
jl
loop
jns
pop
(bad)
jge
cmc
jnp
jg
pop
(bad)
push
jmp
popf
sbb
(bad)
fmul
push
push
les
push
lods
jo
fst
sbb
jl
fmul
inc
push
retf
mov
inc
into
add
jae
iret
pop
mov
loopne
arpl
sub
push
or
mov
cli
and
sbb
jg
push
sub
and
pop
jmp
sub
cmp
mov
test
pop
imul
mov
pop
pop
inc
adc
mov
mov
sub
dec
push
jbe
jecxz
js
rcl
dec
faddp
push
fld
outs
and
push
js
dec
sbb
sahf
test
xchg
(bad)
lock
clc
mov
lea
adc
add
jno
js
mov
xor
xchg
test
push
and
in
out
inc
pop
adc
and
mov
imul
and
add
dec
mov
xor
sahf
gs
xchg
ds
movs
mov
sar
pop
pop
in
pop
sub
jae
loopne
push
ins
xchg
loopne
rol
pop
jp
(bad)
xchg
(bad)
rcr
bound
in
fld
scas
enter
jmp
ror
(bad)
xchg
popf
lock
sbb
icebp
mov
es
pop
ja
jae
sbb
mov
add
push
dec
adc
nop
inc
mov
outs
je
push
xchg
add
mov
sub
cmp
xchg
mov
cmps
push
(bad)
aaa
mov
lods
shl
cmp
mov
test
xor
fsubr
sub
or
fst
mov
and
in
movs
inc
loop
dec
jle
add
jns
adc
add
(bad)
repnz
aad
gs
push
movs
push
sti
test
jbe
push
add
pop
scas
(bad)
fs
rol
inc
mov
jg
test
adc
xchg
xor
fld
call
jns
and
xchg
ds
idiv
ins
push
sub
sub
addr16
retf
inc
jnp
cmps
in
sbb
in
cdq
out
data16
mov
out
call
pop
mov
adc
push
arpl
and
outs
mov
fdivr
fsubr
mov
jae
dec
pop
push
popf
pop
pop
cmp
popa
push
jmp
addr16
mov
scas
ja
mov
outs
xor
loopne
ret
test
xchg
sub
add
xchg
dec
or
sar
ficomp
push
ins
lea
push
stc
loopne
rcl
inc
jg
rol
adc
push
cmps
push
and
push
or
jmp
and
int
ins
add
cmp
lods
lea
or
movs
sbb
(bad)
stc
sbb
in
xchg
inc
out
xchg
lds
shr
sbb
push
pop
dec
cmp
inc
inc
inc
test
inc
rol
retf
(bad)
push
mov
mov
push
dec
stc
mov
rcr
mov
push
or
mov
rdmsr
outs
jg
dec
xor
daa
hlt
cmps
mov
cld
scas
pop
mov
enter
lds
movs
mov
fdiv
fst
mov
jle
(bad)
and
ins
jbe
(bad)
out
xor
adc
push
sahf
js
stos
bound
jecxz
jmp
push
and
jp
cmp
in
loop
neg
into
pusha
pop
imul
inc
ret
scas
in
adc
and
scas
xchg
cwde
add
outs
imul
aad
pop
mov
out
pop
mov
repz
cs
pop
add
pop
ret
add
sub
(bad)
cmps
nop
add
stos
push
bound
fimul
mov
mov
inc
sbb
cmp
iret
fisubr
add
cmp
sbb
ret
inc
arpl
inc
xlat
scas
js
cmp
pop
sbb
and
push
std
mov
stos
push
push
jbe
sub
and
jl
mov
jb
mov
mov
(bad)
pushf
push
adc
loope
div
add
or
inc
push
mov
in
mov
sbb
mov
lea
test
dec
sub
cdq
outs
push
or
mov
sbb
adc
adc
jg
(bad)
lock
or
call
out
sti
inc
push
inc
push
jmp
mov
xlat
rcr
fsub
sub
loope
int3
jmp
jae
sub
add
mov
or
mov
test
aam
or
loopne
dec
cli
sub
daa
nop
shr
add
leave
cmp
sub
lahf
inc
pop
mov
or
xchg
or
add
dec
fmul
lock
jno
retf
sbb
mov
imul
imul
aam
lock
inc
sub
(bad)
mov
cmps
sbb
retf
push
(bad)
pop
std
pop
hlt
pop
push
jp
pop
sbb
dec
push
sar
jnp
and
in
lahf
out
xor
lods
adc
ins
push
mov
push
retf
loope
pushf
mov
xor
icebp
js
adc
mov
inc
inc
xor
push
cld
mov
cmps
push
cmp
add
adc
pop
xchg
cmps
mov
das
and
imul
mov
inc
push
mov
xchg
mov
adc
ret
jecxz
mov
jle
sub
jb
icebp
xchg
iret
xchg
xchg
pop
retf
sti
lods
stc
mov
stos
leave
fwait
jae
call
mov
(bad)
ins
popa
scas
(bad)
dec
(bad)
jae
and
rcr
jp
rcl
add
mov
ret
mov
pop
dec
adc
frstor
push
mov
push
sub
mov
ret
rol
cmc
mov
jmp
scas
sbb
dec
outs
jno
and
fcomp
sub
rcr
dec
sbb
fs
xchg
push
jmp
inc
xlat
jno
jecxz
and
das
je
lods
xor
pop
out
push
es
out
popa
movs
je
fstp
push
test
sbb
lea
mov
inc
pop
scas
loope
into
mov
js
test
fs
ret
jae
xchg
popa
test
dec
imul
scas
sub
retf
add
sub
mov
gs
sub
in
lock
gs
retf
stc
cmp
popa
ins
es
cmp
jno
mov
mov
fucom
pop
jmp
pop
pop
pusha
and
sbb
pshufw
sbb
mov
(bad)
fdiv
sar
xor
jmp
dec
sbb
push
xchg
fwait
cdq
stos
mov
xlat
call
inc
adc
test
and
pop
mov
add
pop
jmp
(bad)
push
stos
rcl
sbb
xchg
fidivr
xor
out
(bad)
aas
scas
sar
loopne
nop
aad
jo
mov
sahf
jo
popa
sar
fcmovnbe
cmp
out
mov
inc
jmp
cmp
test
or
mov
sar
xchg
bswap
mov
mov
mov
outs
lahf
idiv
loopne
and
popa
imul
bound
adc
ror
and
xchg
addr16
pop
inc
jo
and
fistp
loope
mov
scas
aas
lods
add
adc
mov
mov
fmul
sub
je
repz
and
or
sahf
(bad)
das
and
jmp
int
mov
and
mov
push
mov
sbb
xor
int3
hlt
enter
inc
xor
stos
(bad)
push
jmp
out
aad
mov
cmp
mov
sbb
(bad)
ja
loope
out
jb
les
or
pop
test
shl
in
jp
sar
call
popf
cmps
jp
push
data16
jmp
xor
pop
add
enter
retf
add
popa
pop
outs
mov
shr
push
dec
mov
adc
cmps
sbb
inc
out
ret
adc
and
or
mov
sub
in
test
call
push
sub
inc
in
dec
jle
xchg
mov
push
pop
xor
mov
(bad)
jae
out
dec
inc
test
imul
scas
xchg
(bad)
xlat
imul
(bad)
jmp
int3
stos
fwait
int
and
imul
fiadd
(bad)
retf
dec
dec
and
retf
loope
mov
adc
mov
cwd
in
int
in
ret
jns
or
bound
call
push
add
(bad)
(bad)
sbb
retf
push
loopne
movs
sti
cli
stc
bound
arpl
(bad)
mov
(bad)
cmps
cmp
pop
idiv
sbb
dec
inc
out
int3
aaa
or
add
fcmovnb
movs
scas
and
outs
and
loop
je
mov
adc
sti
cli
xchg
cmps
push
lahf
mov
pop
push
xlat
aaa
out
stos
or
inc
stc
repz
xchg
out
aas
hlt
imul
aam
call
pop
pop
sahf
inc
add
leave
mov
mov
ins
push
push
xchg
lea
pop
adc
je
mov
fdiv
bound
push
xchg
push
gs
pusha
pop
pop
sub
jnp
mov
cmps
mov
lock
inc
cmc
or
data16
outs
mov
lods
fucom
push
(bad)
(bad)
jb
push
ror
call
xor
pop
cmp
aaa
es
mov
pop
and
aad
push
addr16
dec
xor
(bad)
cmp
(bad)
adc
es
test
daa
ret
push
(bad)
add
test
ds
loop
cmove
in
sub
jne
test
ss
stos
daa
mov
rol
adc
jo
xor
dec
xlat
hlt
ret
aaa
rol
pop
arpl
xor
pop
mov
pop
cmp
xchg
xchg
arpl
loop
push
mov
add
lods
sahf
pusha
and
ja
test
xchg
rcr
mov
push
and
xchg
dec
mov
setbe
xor
cs
jo
jl
leave
sbb
mov
jl
fdivr
lahf
fidiv
sbb
sbb
in
add
jbe
xor
arpl
or
outs
add
and
in
or
jl
dec
dec
pop
(bad)
imul
push
aad
fidivr
jo
(bad)
rcr
retf
mov
adc
mov
push
add
sbb
(bad)
out
sub
jb
rol
jo
xchg
hlt
repnz
fcomp
or
xchg
scas
(bad)
shr
aam
loope
xchg
sbb
cmp
mov
in
stos
pop
sub
mov
mov
call
sti
imul
stos
clc
jl
aas
adc
loopne
push
push
fild
cmp
ins
stc
inc
jge
mov
dec
fmul
fld
clc
fisub
cmps
and
bound
add
jge
shl
push
lods
iret
cdq
xor
movs
das
cmp
repz
fisttp
cdq
add
pop
add
sbb
and
repz
mov
push
mov
call
and
loop
add
cmp
jmp
dec
pushf
ret
enter
sub
outs
and
std
lahf
jno
dec
ins
nop
call
aam
jns
mov
inc
push
inc
mov
loope
lods
sti
test
daa
fnstcw
lods
push
sbb
popf
jo
jnp
push
sub
imul
pop
fistp
loope
push
inc
rcl
jl
nop
or
call
cmp
leave
lock
gs
in
test
std
or
lahf
cmps
test
xchg
sub
retf
pushf
mov
fucomp
adc
rcr
ins
push
ss
mov
dec
repnz
icebp
ror
test
daa
fbstp
cmp
push
pusha
mov
je
mov
arpl
out
push
daa
jbe
jmp
gs
frstor
leave
pop
dec
push
pop
push
(bad)
sbb
push
into
repz
mov
imul
(bad)
fdivr
mov
test
or
ror
push
neg
mov
ins
arpl
fdiv
mov
xchg
cmovg
adc
(bad)
and
imul
bound
adc
popf
(bad)
dec
jne
inc
(bad)
adc
popf
scas
fnstcw
inc
pop
jle
cmp
call
jns
xchg
and
xchg
(bad)
call
js
inc
inc
arpl
mov
pushf
jnp
ins
mov
xchg
pop
gs
push
adc
push
popf
and
gs
dec
xlat
out
xchg
cmp
mov
test
push
xchg
mov
mov
jmp
add
push
and
xchg
dec
cld
into
mov
add
das
push
dec
sti
retf
jg
ds
inc
mov
lods
imul
xchg
xchg
xor
add
fld
mov
jg
outs
xor
fisubr
(bad)
and
dec
push
cld
daa
fild
das
fistp
push
add
push
mov
test
addps
inc
aad
(bad)
and
cld
xor
(bad)
mov
jl
jmp
fwait
out
xchg
repnz
sti
cmps
ret
or
inc
iret
outs
imul
fld
push
repz
cmp
fild
lods
imul
push
lods
xchg
xor
(bad)
dec
clc
push
je
shl
je
(bad)
inc
test
cmp
in
add
out
xor
daa
xor
dec
inc
pop
repnz
loope
ret
popf
pop
scas
add
jge
lods
repz
jge
bound
push
ror
mov
mov
xor
data16
add
and
jg
push
mov
and
cmp
push
or
inc
scas
add
pushf
mov
int3
shl
cli
sub
add
outs
in
imul
scas
loope
or
and
shl
sbb
mov
mov
mov
xchg
jl
call
xor
sub
dec
call
(bad)
cmc
scas
cmps
fistp
dec
mov
pop
(bad)
cwde
mov
retf
pop
xchg
leave
shr
mov
dec
rcl
call
cs
cmp
inc
and
stc
pop
call
fmul
stos
mov
mov
or
ja
push
pop
sar
xchg
stos
xchg
jns
dec
repnz
repz
ins
out
mov
mov
dec
inc
jb
nop
movs
mov
adc
jl
jmp
(bad)
cmp
and
jns
or
adc
addr16
xchg
lods
and
daa
pop
fnsave
sub
or
stos
cs
mov
fadd
(bad)
movs
inc
add
pop
xor
cmps
mov
mov
retf
jo
cmp
stos
pop
movs
and
imul
xor
push
cbw
out
xor
enter
add
(bad)
pop
rol
clc
gs
sub
ds
jl
stc
in
dec
inc
inc
loope
dec
or
bound
push
mov
jb
sub
ins
mov
sbb
adc
cmp
cli
ins
sub
xchg
sub
jns
arpl
sbb
inc
mov
ret
lock
push
jle
inc
lds
lods
jle
push
lock
or
cmp
addr16
mov
fs
jmp
sbb
inc
xorps
inc
push
mov
add
cli
xor
test
jmp
sub
jmp
mov
les
jecxz
inc
fistp
dec
xchg
xchg
icebp
push
les
xlat
sbb
mov
bound
test
mov
xchg
mov
pop
daa
mov
jle
or
adc
and
cmp
(bad)
lahf
js
movs
mov
aad
inc
mov
push
(bad)
(bad)
iret
push
push
repnz
inc
and
outs
popa
add
add
daa
inc
jbe
push
xchg
pop
jmp
call
sbb
int3
jmp
cdq
cld
daa
pop
mov
cmps
stc
mov
test
(bad)
xor
or
retf
xor
loopne
jne
mov
das
pop
mov
mov
cs
adc
hlt
xchg
and
pop
or
punpckldq
xchg
push
jns
cwde
push
lods
pushf
data16
pop
xchg
jl
add
mov
popf
dec
pop
dec
adc
(bad)
clc
iret
dec
scas
sbb
stos
cmc
push
(bad)
or
mov
add
shr
sbb
icebp
(bad)
cdq
dec
inc
mov
fistp
pop
mov
arpl
ins
jmp
cmp
test
std
inc
jne
call
imul
shl
mov
mov
lea
sbb
xor
popf
sbb
call
jl
add
adc
ret
daa
lods
mov
les
outs
div
xchg
aaa
fistp
cdq
pop
ret
sbb
test
sub
sub
sub
push
lahf
sbb
and
mov
push
popa
sbb
loop
shr
into
jecxz
pop
rcl
jecxz
outs
cmps
inc
and
(bad)
and
inc
cmp
xchg
mov
add
inc
mov
mov
les
in
sub
sbb
repz
inc
push
ss
stc
xor
pop
sbb
lea
pop
sbb
(bad)
mov
fdivp
jo
inc
inc
or
iret
mov
mov
push
es
pushf
mov
and
int3
icebp
sub
in
test
mov
popa
test
addr16
xor
xor
mov
adc
jl
popf
mov
jo
je
jb
push
dec
cmps
mov
sbb
fs
out
pop
jmp
out
sub
xor
and
xchg
outs
mov
lock
dec
and
cmp
adc
pop
dec
push
xor
add
jo
mov
or
icebp
mov
popa
test
pop
addr16
es
sbb
mov
pop
cs
rcl
call
imul
das
repz
mov
scas
or
jae
or
pop
xchg
jno
dec
xor
test
idiv
pop
fiadd
je
mov
ficom
(bad)
aam
lea
repz
call
js
retf
les
pop
stos
gs
in
push
ret
out
outs
leave
pop
xchg
jl
jl
mov
cmc
out
or
and
ror
or
inc
outs
popf
cmps
iret
aam
je
xchg
movs
jo
arpl
adc
mov
fwait
(bad)
rcr
or
out
jno
jo
(bad)
adc
mul
sub
xchg
arpl
movs
jmp
in
scas
sbb
or
lahf
sub
push
aaa
shl
addr16
push
mov
xor
scas
std
and
push
sti
inc
imul
mov
adc
mov
cmp
ja
adc
push
fld
mov
adc
mov
jge
sbb
std
out
dec
cmps
cmps
imul
test
xchg
ret
sbb
add
jecxz
mov
fs
mov
aaa
mov
jecxz
icebp
in
jecxz
data16
jae
nop
mov
or
mov
mov
inc
outs
and
retf
sub
sub
or
imul
pusha
in
add
pushf
pop
xchg
in
dec
and
ffree
xor
(bad)
ins
push
or
popf
pop
(bad)
pop
and
adc
adc
nop
mov
push
sbb
dec
leave
das
xlat
xchg
mov
ret
(bad)
or
out
mov
or
inc
enter
sub
in
out
jl
pop
addr16
rcr
add
push
sub
aaa
pushf
xor
sbb
std
and
pop
mov
pop
add
ds
imul
add
cwde
sbb
call
cmp
or
jb
dec
cmp
inc
push
mov
jae
adc
aam
dec
pop
cs
jb
push
in
push
or
cmps
mov
jne
hlt
fcom
xchg
imul
add
movs
jo
add
and
sub
dec
push
nop
std
push
mov
push
mov
add
lods
xchg
push
pushf
and
addr16
popa
xchg
inc
retf
sahf
cmps
inc
pop
mov
mov
push
xor
or
mov
pushf
pop
mov
sbb
test
pop
sbb
mov
dec
pop
xor
mov
jns
mov
fs
mov
sub
push
and
clc
mov
sub
sbb
sub
fist
jne
les
stos
jb
dec
add
(bad)
(bad)
cli
push
arpl
mov
cmp
fadd
imul
jecxz
adc
and
mov
sub
ja
jno
mov
leave
dec
cmc
in
mov
jge
pop
enter
sub
out
sub
push
adc
pop
(bad)
scas
jecxz
cmp
cmp
icebp
inc
xor
movs
mov
xor
retf
stos
lahf
fisub
add
dec
xor
push
pop
call
cmp
push
in
sti
and
cwde
retf
push
icebp
inc
je
outs
xchg
xchg
cdq
mov
mov
call
out
jb
push
repnz
mov
or
imul
ror
xor
cdq
jge
(bad)
sti
push
dec
fcmovnbe
inc
or
hlt
pop
pop
jnp
addr16
(bad)
fst
add
xor
push
enter
je
cmp
inc
xchg
sahf
xor
mov
cwde
int
es
mov
loopne
in
ret
dec
xchg
sub
push
fimul
sub
sub
ja
xor
daa
test
loop
pop
adc
stos
jbe
sub
sar
xor
fimul
das
mov
popf
mov
in
aaa
je
(bad)
mov
sbb
sar
gs
push
jae
jge
outs
add
cmp
pop
leave
xchg
icebp
dec
sti
jbe
imul
fst
sahf
add
icebp
mov
bound
sbb
xor
movs
cmp
dec
xchg
out
rol
sub
ins
sbb
ds
in
in
or
out
xlat
add
aad
xor
stos
call
data16
loope
out
bound
dec
gs
repz
pop
arpl
dec
test
sahf
xchg
out
stos
call
pop
lds
mov
cmp
and
cld
mov
mov
mov
sbb
data16
xor
lea
dec
lds
dec
push
mov
jno
lds
xchg
aam
clc
jae
mov
loopne
sbb
push
mov
mov
or
dec
mov
in
mov
mov
cmp
adc
pop
sti
lea
adc
out
sti
int
js
mov
xchg
xor
inc
jmp
ss
repnz
stc
pop
fwait
lods
push
outs
xchg
sbb
mov
aad
push
or
sub
imul
mov
mov
and
cmp
stos
mov
sbb
add
inc
or
pop
imul
or
ins
jno
dec
sub
mul
pop
or
fisub
or
fldenv
and
rcl
xchg
int3
xchg
aad
mov
sbb
out
dec
rcl
jge
add
fsubr
inc
mov
scas
shl
out
lods
mov
sbb
xchg
jmp
inc
outs
shl
je
mov
jmp
movs
add
xlat
dec
test
cmp
inc
adc
sbb
movs
mov
push
sti
mov
ja
psllq
push
add
and
stc
jae
rol
jnp
push
jbe
sbb
sub
push
psrlq
retf
mov
das
add
out
aad
inc
adc
jae
xor
mov
lds
retf
cs
mov
jl
test
sub
pop
call
xor
xor
movs
inc
sub
pop
mov
xor
scas
nop
mov
call
lods
fld
xchg
sub
xchg
es
fsubr
stos
push
shl
retf
rol
repnz
jmp
ror
fisttp
cs
mov
jp
sub
inc
push
or
ins
mov
jl
inc
dec
mov
arpl
mov
mov
rcl
icebp
jmp
pop
aaa
jo
(bad)
sub
jo
bound
fisttp
mov
xlat
sbb
adc
jp
push
push
cmp
cmps
aad
adc
fild
ins
cmp
addr16
js
and
aas
and
lods
sbb
pop
push
xchg
test
adc
shl
jmp
jb
jecxz
pop
pop
or
mov
aad
out
jmp
sub
in
das
in
jns
dec
xchg
jl
pop
pop
fcmove
add
xchg
or
mov
mov
add
xchg
sbb
jb
ret
in
out
cwde
dec
push
jnp
cmps
xchg
test
scas
mov
push
dec
out
icebp
imul
xor
bnd
pop
out
mov
scas
test
ss
push
outs
dec
jnp
pop
pop
jp
dec
xchg
std
addr16
rcl
mov
sub
sbb
cmp
xor
movs
sub
sub
enter
ins
ds
or
adc
fiadd
adc
movs
mov
push
mov
lahf
cmp
inc
pop
jbe
push
jne
jae
call
jo
pusha
lods
xor
jecxz
sub
retf
jge
stos
sub
mov
add
out
push
(bad)
inc
push
adc
cmp
add
outs
hlt
cmp
pop
repz
push
mov
in
mov
not
fbld
sub
in
mov
sbb
adc
or
xor
(bad)
sti
mov
(bad)
in
mov
fnstsw
cmp
adc
mov
xor
pop
mov
icebp
pop
and
ror
lea
mov
mov
adc
(bad)
mov
sub
mov
aaa
scas
jns
or
dec
std
adc
(bad)
mov
adc
int
clc
push
adc
call
fwait
cmp
dec
call
bound
js
leave
(bad)
lock
in
fld
repz
and
(bad)
mov
dec
cwde
and
dec
jg
popf
mov
aad
adc
jecxz
retf
and
cmp
add
scas
loopne
aam
loope
mov
adc
jnp
fild
xor
adc
cmp
push
das
inc
(bad)
mul
rcl
push
adc
sub
sub
xchg
fcmovb
mov
add
mov
sbb
es
out
scas
out
leave
inc
aaa
inc
inc
inc
test
aam
dec
sbb
repnz
je
lea
xchg
jle
cmps
cmp
xchg
dec
aaa
mov
pop
xor
lods
xchg
add
mov
ss
and
loop
pushf
icebp
icebp
inc
xchg
shr
mov
cmp
movs
(bad)
mov
jmp
sar
pop
dec
call
push
mov
sbb
push
outs
pop
adc
jno
add
imul
(bad)
mov
retf
mov
pop
in
add
sub
aas
dec
xchg
test
jecxz
mov
sbb
jnp
cdq
mov
sub
fstp
icebp
jno
stos
inc
imul
mov
pop
call
(bad)
mov
or
or
ins
inc
(bad)
jnp
das
xchg
(bad)
xor
(bad)
sbb
popa
ror
adc
aaa
inc
or
sbb
mov
pop
dec
push
std
inc
clc
mov
mov
xlat
add
inc
add
dec
mov
aam
outs
add
inc
mov
pop
int3
add
mov
fisub
dec
ds
push
jns
es
jae
jmp
mov
pop
push
cmp
xchg
mov
(bad)
inc
mov
fstp
aad
pop
ret
sub
ins
cmp
pop
les
push
repnz
mov
fsub
aad
xor
gs
pop
enter
fmul
dec
mov
pop
or
pop
dec
(bad)
cmp
push
mov
push
sub
out
and
xchg
push
enter
mov
cli
xchg
test
xchg
ror
out
jg
das
shr
push
xor
jp
sbb
inc
test
adc
out
jge
sbb
(bad)
xchg
jne
ins
jb
jnp
neg
pop
xor
add
adc
add
pop
call
cwde
xlat
(bad)
sub
lods
mov
and
ja
fwait
inc
jp
sbb
add
loop
jge
inc
mov
jmp
lahf
leave
jge
mov
cmp
mov
test
sbb
sbb
imul
pop
lock
jp
loopne
clc
dec
jo
das
pop
xchg
xor
dec
or
push
stos
pop
enter
inc
clc
test
and
sub
arpl
xor
mov
and
push
fdivr
ds
mov
jg
add
das
sub
pop
xchg
mov
inc
adc
nop
dec
int
or
jmp
mov
pop
test
js
adc
jne
stos
inc
pusha
pop
pop
sub
add
inc
inc
fucomi
les
imul
leave
movs
(bad)
jns
inc
push
add
jg
mov
push
sub
inc
or
jo
or
scas
mov
mov
arpl
mov
mov
stos
out
es
loop
or
stc
fld
in
mov
fwait
jge
mov
in
sbb
fld
pusha
out
dec
in
cmps
mov
inc
out
es
dec
inc
and
mov
call
repnz
iret
jmp
imul
inc
movs
and
mov
sbb
cdq
xor
inc
outs
jg
push
xchg
movs
fiadd
dec
xchg
cmp
jb
sbb
aam
jmp
push
xor
imul
adc
inc
inc
in
xchg
jo
mov
call
mov
fbstp
cmp
jo
inc
(bad)
adc
push
lods
fmul
lods
mov
xchg
sub
fdivr
xor
stos
loopne
lods
(bad)
or
ss
pushf
jns
jl
in
(bad)
out
dec
xor
push
push
jns
mov
pop
(bad)
mov
mov
(bad)
inc
stos
into
dec
pushf
mov
out
iret
cmc
inc
ss
pop
fdiv
mov
cmp
sti
sbb
dec
xchg
or
call
out
fldcw
stos
xchg
idiv
jo
jmp
std
je
test
xor
in
push
aad
fnstenv
mov
div
dec
out
bound
pop
call
imul
fcomp
xor
mov
jecxz
jae
xlat
(bad)
inc
sahf
aaa
and
inc
ret
xlat
jnp
retf
cmp
lods
push
fxch
mov
jg
std
shr
enter
call
push
icebp
inc
cwde
jle
cmp
dec
daa
pop
mov
mov
adc
jnp
mov
lahf
jo
test
lds
or
or
(bad)
inc
sbb
adc
aad
outs
popa
xchg
adc
and
and
fmulp
test
fimul
repz
(bad)
fisttp
xchg
jne
ret
inc
mov
cs
test
jle
shl
pop
mov
mov
into
pop
xchg
mov
mov
push
push
rol
(bad)
pushf
cmp
(bad)
aam
mov
pop
mov
dec
sub
inc
pusha
push
inc
sub
xor
mov
jp
hlt
mov
inc
enter
scas
jb
cmp
repz
cmp
test
jge
(bad)
ror
dec
mov
punpcklbw
das
mov
fldcw
dec
jmp
daa
push
daa
mov
xor
inc
and
js
xchg
cs
rcl
or
aaa
or
(bad)
(bad)
aad
mov
xor
cdq
aaa
js
xchg
jmp
jnp
cli
cmp
dec
sbb
add
mov
and
ins
(bad)
jne
xchg
push
(bad)
xchg
or
mov
fmul
outs
push
inc
(bad)
outs
(bad)
or
push
enter
js
sub
test
adc
push
sbb
or
out
lods
je
xchg
cmp
lods
push
fisttp
cdq
ds
imul
xor
xor
mov
stos
or
rcr
mov
retf
iret
fbld
jne
(bad)
dec
jnp
inc
mov
mov
mov
sub
inc
mov
xchg
arpl
ret
add
mov
inc
mov
in
addr16
jmp
push
aas
rcr
call
into
ja
push
xor
jecxz
out
popf
mov
dec
jmp
(bad)
stos
icebp
lahf
xchg
rcl
test
mov
imul
daa
jmp
out
sbb
ds
call
cmp
mov
call
mov
xchg
push
or
loop
mov
cli
aam
pop
jp
dec
mov
(bad)
pop
ins
or
or
ror
jl
pop
inc
fcmovnb
icebp
fdivr
aad
outs
movs
shl
sbb
in
imul
inc
jmp
ds
scas
outs
ret
sahf
jo
push
adc
cmps
mov
pop
jl
push
inc
push
cmps
sub
cmps
daa
dec
ret
ss
push
cs
sub
push
test
fisttp
xor
stos
adc
push
out
or
lods
hlt
jmp
test
inc
pop
cs
jo
mov
ja
sbb
dec
cdq
or
xlat
ja
shl
addr16
sub
(bad)
loope
xchg
add
ds
dec
pop
xchg
adc
retf
or
(bad)
dec
enter
pushf
push
mov
push
adc
add
sub
(bad)
(bad)
out
cwde
cmp
and
adc
cwde
aad
push
sbb
push
ret
add
mov
out
imul
push
fdivr
cmp
(bad)
or
adc
std
xchg
mov
stc
dec
xchg
xlat
in
aam
lods
mov
push
mov
cmp
and
sub
cs
or
arpl
in
lods
dec
(bad)
mov
cmp
setg
add
mov
cmps
sub
mov
pusha
cld
les
hlt
mov
ins
and
xchg
(bad)
ss
cmps
pushw
lock
ja
test
scas
cmp
call
stc
in
pop
sub
pop
pop
rcl
or
jg
into
pusha
shl
or
pop
scas
sub
pop
in
xchg
(bad)
aad
pop
mov
cmp
mov
movs
pop
pop
pop
das
sub
lahf
scas
mov
scas
call
inc
loopne
add
inc
pop
mov
cmps
and
inc
adc
popf
les
shl
push
xor
or
cmp
and
addr16
in
dec
dec
mov
mov
dec
fs
sar
mov
in
fwait
dec
test
pop
(bad)
or
push
cmps
adc
mov
sbb
arpl
dec
mov
mov
outs
clc
mov
jb
xor
jecxz
pop
retf
ret
sub
arpl
xchg
lods
int3
mov
lods
pop
pop
hlt
cmp
xor
ret
cmp
mov
adc
push
movs
xchg
scas
sbb
test
clc
cmc
dec
ret
mov
fcomp
and
mul
in
and
dec
xchg
cmps
inc
(bad)
push
sbb
lods
mov
(bad)
(bad)
jb
mov
add
cmp
mov
sub
mov
cmp
pop
push
dec
xchg
sbb
pop
add
jg
clc
add
and
push
adc
in
ror
sbb
scas
mov
push
sbb
mov
jo
xchg
ins
retf
adc
or
in
fsubrp
in
push
ffreep
mov
add
mov
adc
fcomi
push
movs
inc
jecxz
loopne
mov
ret
cmp
xchg
xchg
popf
sub
mov
ficomp
ret
jb
out
test
xor
push
mov
jl
pop
mov
add
jmp
dec
add
ss
hlt
scas
jb
xor
dec
mov
or
ror
scas
xchg
and
xor
mov
mov
rol
les
lods
mov
repz
les
repnz
fxch
xchg
jecxz
loop
(bad)
imul
addr16
sahf
cwde
mov
xchg
jg
mov
outs
jo
cs
mov
jmp
addr16
sub
neg
rol
mov
setg
movs
or
sbb
mov
cmp
lods
loop
stos
jmp
enter
jl
stos
ins
mov
pop
stc
adc
jbe
movs
sub
xchg
fmul
inc
test
mov
fisttp
push
ja
outs
mov
aaa
jge
es
sub
xor
xor
cld
add
enter
xchg
lea
loop
mov
mov
repnz
mov
pop
fcmovnu
xor
aad
dec
repnz
movups
nop
out
mov
test
in
imul
arpl
push
fsubr
sub
and
xchg
movs
xchg
xchg
cld
repnz
push
ret
pop
bound
lds
dec
imul
add
and
push
mov
add
pop
ss
mov
inc
aas
inc
out
pop
jmp
test
in
test
daa
adc
push
data16
sbb
data16
retf
xchg
jbe
mov
mov
scas
sub
ss
xor
dec
xchg
inc
(bad)
sar
js
aad
fild
mov
mov
dec
stos
jo
jae
(bad)
enter
mov
pushf
mov
jbe
xor
adc
bound
inc
sbb
adc
in
jmp
cld
fwait
xor
mov
mov
stos
jb
cmp
cmp
dec
iret
dec
ja
add
jbe
pop
mov
pop
xchg
add
xor
out
dec
addr16
dec
sbb
xor
ret
add
jge
jb
push
inc
xchg
outs
imul
sub
xor
int
imul
(bad)
loope
daa
lods
loopne
stc
pop
inc
in
ret
inc
pop
out
outs
in
jle
inc
xlat
dec
xor
mov
sbb
mov
dec
lods
leave
and
add
dec
jb
xchg
pop
mov
fist
mov
es
push
mov
push
adc
xchg
push
loopne
sti
arpl
mov
lahf
inc
inc
mov
dec
(bad)
clc
es
add
jmp
in
cmp
sbb
repz
fwait
inc
push
mov
sbb
dec
mov
fcomp
cmp
repnz
cdq
mul
clc
repnz
push
cdq
enter
mov
out
addr16
bound
jmp
mov
lods
das
shr
mov
ins
pop
aad
test
sbb
mov
and
adc
push
and
dec
imul
adc
add
imul
(bad)
outs
aaa
pop
stos
fstp
mov
popa
cmc
inc
call
aas
dec
test
mov
sub
popf
adc
cli
fsubr
mov
adc
mov
mov
and
dec
enter
jo
jmp
fdivr
and
hlt
push
shl
fsubr
adc
imul
xlat
gs
setl
test
add
mov
mov
inc
push
inc
cmps
mov
lds
jns
retf
push
xchg
je
cli
fldcw
repnz
sub
das
add
or
aad
xchg
adc
mov
call
jae
jns
ds
fdivr
inc
add
loope
fstp
sbb
or
data16
mov
sub
fcomp
je
add
mov
jge
inc
jl
and
jle
je
xchg
ja
mov
or
and
das
jnp
mov
jmp
sub
aam
fdiv
push
loopne
mov
jl
xchg
in
lahf
xlat
out
cld
in
sub
mov
mov
cmp
(bad)
pop
pop
inc
push
jb
dec
and
test
mov
rcl
sub
mov
out
adc
dec
(bad)
test
inc
jmp
push
mov
stos
dec
mov
popa
hlt
sbb
movq
fiadd
dec
mov
pop
mov
(bad)
cwd
sahf
cmp
cmp
mov
jae
call
xchg
in
push
jmp
pushf
loop
adc
xchg
jp
iret
jmp
add
dec
arpl
mov
pop
sar
out
dec
jnp
xchg
cmp
and
push
sahf
dec
mov
jle
xchg
les
pop
test
enter
iret
sbb
jecxz
add
add
sub
gs
push
mov
ins
xchg
push
cld
ret
adc
sbb
or
mov
loope
fcmove
adc
xor
xchg
mov
ss
test
fdivrp
test
mov
in
test
lds
add
push
rol
jge
pop
mov
adc
cwde
mov
cmp
inc
push
call
mov
(bad)
sbb
xor
ret
mov
mov
shr
push
test
in
jae
out
sbb
push
push
in
mov
aam
pusha
push
fild
push
or
cmp
std
(bad)
and
dec
jge
and
outs
sbb
into
dec
mov
loope
daa
xor
test
in
out
add
fs
sub
rcr
cmp
pop
push
or
inc
pop
cmp
inc
bswap
jb
cmp
mov
cs
ins
sub
dec
call
ss
std
sub
jno
xchg
cmp
inc
jne
and
fstp
mov
and
push
fistp
inc
mov
push
std
(bad)
fld
fsub
sbb
xor
jne
mov
xor
mov
inc
outs
jne
test
cmp
inc
pop
retf
loop
xchg
dec
cmp
repnz
mov
dec
xor
xchg
inc
rcl
into
and
rcl
call
cmc
push
xor
arpl
scas
mov
mov
or
cmps
mov
push
mov
fistp
imul
jge
and
aas
pop
inc
lods
push
in
cmc
sub
repnz
ds
add
mov
xlat
push
lods
xlat
(bad)
sbb
in
and
int3
mov
mov
push
out
fistp
fbstp
push
xchg
(bad)
and
ins
mov
sub
outs
jmp
or
jg
add
sahf
sbb
mov
out
mov
push
js
push
gs
xchg
sbb
ds
or
xor
pop
leave
ja
lea
shl
and
and
imul
ins
rcl
sbb
inc
cmps
xor
xchg
test
add
cmp
cmc
lods
inc
xor
call
jge
(bad)
xlat
cli
in
leave
sbb
push
pop
aad
and
and
aam
or
push
stc
sbb
scas
(bad)
adc
clc
pop
fwait
aas
pop
xchg
xchg
movs
add
lods
xchg
dec
or
jae
mov
loopne
sub
leave
or
ret
dec
ss
adc
dec
mov
pop
in
cmp
cmp
adc
cwde
ins
xor
popa
inc
dec
(bad)
sbb
or
add
push
int
idiv
pavgw
adc
lds
aad
mov
dec
mov
xchg
adc
outs
aaa
pop
dec
(bad)
sahf
mov
xchg
shl
fdiv
aam
sbb
jl
adc
push
push
dec
mov
shl
mov
dec
loope
shl
int3
lahf
stos
jno
xchg
cld
int
sar
mov
inc
xchg
test
inc
sub
pop
lods
dec
lea
push
test
cld
push
push
inc
imul
imul
xchg
jnp
ins
in
es
xchg
lock
add
aaa
cmp
and
mov
test
and
adc
cmps
mov
mov
push
push
jns
sub
pop
cmp
and
(bad)
mov
sbb
cmp
cmps
idiv
jle
(bad)
cmp
xchg
cli
fdivr
mov
mov
adc
loop
arpl
sub
outs
pop
mov
fdivp
mov
push
icebp
xor
aas
int3
mov
outs
mov
ja
xor
ror
mov
mov
sub
add
dec
(bad)
jmp
pop
cmp
aam
mov
fisubr
dec
retf
xchg
(bad)
mov
leave
fild
repz
test
inc
jnp
xor
imul
(bad)
outs
(bad)
jbe
sub
daa
dec
test
dec
sbb
lock
mov
mov
or
cmc
retf
and
dec
mov
test
push
addr16
fadd
xchg
test
fistp
or
jle
sbb
ja
jecxz
out
push
lds
mov
mov
mov
in
xchg
xchg
add
or
mov
and
aaa
cmps
xor
add
scas
std
cmp
out
sahf
pop
mov
call
stos
jl
movs
mov
nop
add
mov
push
pop
ins
sub
add
and
mov
mov
cmp
aam
dec
stc
push
arpl
int
add
std
rol
mov
and
je
jl
inc
iret
pop
dec
fstp
loopne
dec
retf
cmp
cmps
push
jne
mov
dec
adc
into
dec
icebp
xchg
out
xor
push
ret
pop
sub
cmp
ja
mov
movs
in
pop
cmp
cmp
pop
inc
pusha
lock
add
dec
mov
pop
or
mov
xchg
scas
xor
hlt
ret
cli
mov
cli
test
jno
and
sbb
(bad)
mov
out
pushf
inc
dec
(bad)
or
fist
int
jbe
(bad)
xchg
nop
repz
ror
es
into
add
lea
or
push
cmp
(bad)
push
push
cmps
(bad)
pop
push
cmp
stos
lds
mov
xchg
adc
pop
std
pop
aas
dec
dec
mov
xchg
sbb
and
jmp
fstp
mov
adc
retf
cmp
add
push
push
pop
jg
retf
pusha
leave
mov
pop
retf
int
scas
fisub
mov
sahf
pushfw
xchg
mov
fisttp
(bad)
sbb
jae
dec
mov
cld
push
inc
jle
or
inc
inc
hlt
sti
pop
mov
and
ss
in
push
(bad)
leave
jns
and
imul
addr16
in
pop
(bad)
jecxz
jne
shl
jge
je
cmp
pushf
cmp
test
dec
jg
mov
xchg
jbe
idiv
cmp
add
loopne
iret
mov
pop
mov
aas
jecxz
je
lea
ins
icebp
adc
ss
sbb
dec
adc
mov
xlat
ret
test
stos
js
arpl
cdq
enter
imul
fld
xlat
pop
hlt
retf
or
inc
sub
in
movs
or
jp
cmp
mov
push
or
lds
jns
clc
push
cmp
ins
xchg
int
mov
imul
adc
xor
xor
xlat
clc
int3
in
cmp
xchg
mov
push
adc
je
mov
imul
repz
in
test
push
sub
ins
int3
ret
sbb
mov
pop
loope
cdq
fistp
dec
je
inc
add
mov
out
imul
fist
adc
xchg
xor
icebp
scas
pop
mov
mov
adc
test
xor
in
scas
cmp
xor
je
rcr
mov
sbb
lods
push
cs
popa
fcmovnb
mov
sbb
das
test
xchg
js
xor
push
pop
test
jno
mov
dec
mov
out
or
aad
mov
(bad)
repz
xchg
ja
fisttp
iret
shr
add
push
test
push
(bad)
out
inc
add
(bad)
cdq
and
xlat
or
mov
xchg
xchg
aad
push
pop
dec
xchg
popf
out
xchg
ss
test
mov
pusha
adc
(bad)
outs
pop
call
cmp
add
push
nop
mov
fwait
repz
call
add
(bad)
out
shr
not
into
das
cmp
cmp
jmp
and
add
pop
fucomi
xchg
mov
mov
push
jbe
inc
push
or
jle
cwde
ror
pmaddwd
jl
pop
inc
xor
outs
push
push
adc
nop
lea
inc
retf
das
xor
js
and
inc
sub
ja
lock
fmul
push
mov
mov
xchg
xor
push
outs
ret
jmp
push
je
dec
inc
jl
jecxz
fild
push
cmps
(bad)
stos
scas
ds
xor
and
add
push
push
ret
hlt
es
sbb
leave
adc
add
js
mov
mov
out
push
add
push
inc
test
xchg
scas
in
div
(bad)
dec
mov
adc
std
jl
(bad)
loop
stos
mov
cmp
xlat
and
pop
ret
mov
call
sar
fld
cmp
test
mov
cmps
stos
or
add
lahf
rcl
jmp
push
xor
inc
dec
cwde
jmp
inc
jns
mov
jp
jmp
dec
jne
adc
out
add
dec
sar
lock
cs
xchg
js
add
stc
std
push
cmc
sbb
aaa
sbb
and
cld
mov
pop
mov
adc
movs
cwde
stos
ja
out
retf
retf
cmp
mov
and
dec
xor
mov
imul
cmc
mov
sub
sub
jmp
and
xchg
mov
xor
xlat
pop
out
xchg
jmp
mov
mov
call
inc
inc
dec
(bad)
fidiv
(bad)
aaa
add
cmp
fnstenv
mov
ret
mov
retf
jmp
lahf
outs
jb
fiadd
js
fisttp
xchg
jecxz
xchg
jmp
out
out
mov
sbb
call
sub
neg
mov
mov
mov
jnp
or
mov
sbb
ret
pop
rcl
rol
inc
inc
cmc
add
ret
pop
int
mov
cmp
call
clc
cmp
cmp
arpl
xor
fs
mov
jo
or
sahf
stos
call
fs
push
push
mov
adc
dec
sub
inc
and
push
sbb
or
sbb
dec
inc
out
sbb
pushf
jns
arpl
les
and
lahf
jecxz
aad
dec
xor
and
in
mov
push
jp
ja
fistp
mov
add
jae
sar
pop
inc
mov
daa
sub
mov
pop
pushf
sub
clc
(bad)
fistp
mov
push
loopne
jmp
fwait
sbb
scas
inc
push
jl
dec
add
dec
add
(bad)
stos
ins
imul
or
adc
es
cld
dec
push
pop
cmps
add
push
and
xchg
(bad)
jle
nop
and
sahf
push
popf
retf
lahf
inc
cmp
aam
inc
out
sub
ret
(bad)
push
dec
aam
adc
xchg
aaa
sbb
jo
imul
xor
retf
and
fisub
inc
or
jmp
jbe
mov
push
mov
ror
jp
mov
ins
sbb
div
fisttp
xchg
sbb
add
int
daa
dec
xchg
mov
inc
push
test
loopne
pop
out
repnz
dec
mov
add
jb
mov
or
into
in
push
test
cmp
mov
adc
add
lods
jg
mov
bound
push
pop
push
mov
mov
xor
xchg
cmps
mov
enter
repnz
imul
pop
mov
or
sub
aaa
dec
scas
mov
dec
jp
inc
add
dec
lock
in
or
adc
cld
test
mov
ret
jmp
jns
mov
icebp
or
mov
add
pusha
mov
movs
into
aaa
imul
(bad)
xor
and
arpl
retf
sahf
push
cmps
pop
add
ret
inc
cmp
push
ja
out
or
lea
shr
jecxz
push
(bad)
adc
(bad)
jmp
imul
dec
adc
push
loopne
sub
push
mov
xchg
sbb
dec
fsubrp
test
test
test
(bad)
out
aas
test
inc
add
(bad)
push
xchg
adc
mov
jno
out
jo
pop
div
cwde
adc
mov
sub
xchg
xchg
jp
xchg
jge
inc
imul
mov
fcom
fwait
bound
add
jecxz
xchg
jne
test
(bad)
pop
aas
mov
jne
aas
pop
std
pop
push
and
inc
popf
add
lods
or
sub
mov
jp
and
fs
(bad)
sahf
fistp
test
mov
inc
imul
ror
cmp
jge
add
ins
jmp
je
ins
pop
test
cmp
inc
xor
push
xchg
dec
fs
adc
jle
xchg
or
push
push
outs
push
pop
and
dec
jbe
add
mov
in
test
cmp
sbb
shld
pop
add
pusha
ror
or
and
adc
scas
rcr
lds
or
(bad)
(bad)
sbb
mov
leave
sbb
popf
mov
add
ins
cli
aaa
fst
or
or
push
std
(bad)
jo
(bad)
cli
scas
popf
add
add
loop
cs
add
push
pop
in
ret
shl
test
push
inc
dec
ficomp
arpl
push
movs
out
mov
xchg
pop
add
cmps
mov
push
loopne
(bad)
jecxz
jle
addr16
mov
or
(bad)
fistp
push
dec
push
mov
in
popf
xchg
in
and
push
loope
xchg
sub
fwait
mov
dec
fs
push
movs
dec
sub
adc
mov
clc
std
in
test
pop
sub
mov
sub
pushf
adc
in
pop
or
or
push
cwde
shl
push
arpl
repz
mov
std
or
mov
aaa
jne
or
(bad)
adc
mov
mov
mov
push
jnp
pop
pop
sbb
inc
scas
dec
jbe
test
stos
adc
cld
push
pop
aam
scas
mov
movs
sub
dec
mov
add
sub
xor
fcmovne
inc
mov
mov
fistp
add
dec
sbb
lea
sbb
pusha
mov
ds
and
icebp
lods
push
popf
push
(bad)
push
dec
jle
leave
frstor
test
cs
popf
and
add
cmps
push
(bad)
lods
stos
daa
jo
mov
jmp
push
push
add
cmp
test
mov
adc
push
popa
leave
cmp
fadd
loope
dec
mov
sbb
nop
ins
pop
stc
cli
or
jae
pop
cdq
adc
cmp
test
mov
xor
retf
mov
push
jmp
push
mov
jns
xor
xor
out
pop
(bad)
xchg
out
sbb
fstp
adc
adc
(bad)
jle
sbb
out
mov
xor
cmp
jmp
daa
inc
cld
in
out
outs
or
repz
(bad)
xor
shl
jle
in
loopne
loope
push
push
ret
pusha
sub
rol
inc
rcr
or
jbe
arpl
push
and
sti
lods
mov
in
sbb
(bad)
jge
pop
cli
int
shl
aam
out
mov
sub
ret
mov
rcl
test
xor
pop
fist
jmp
fist
push
push
cmp
dec
inc
cmp
dec
and
retf
loop
and
adc
push
clc
outs
fsub
xor
jp
call
inc
adc
pop
aas
and
nop
in
ret
lahf
pop
mov
mov
pop
ss
(bad)
inc
loope
mov
call
fadd
dec
xor
dec
inc
dec
xor
sub
jmp
push
(bad)
or
xor
rcr
mov
and
cmp
je
out
sbb
xchg
jle
and
enter
jo
arpl
sub
and
cmp
clc
cmc
stos
scas
push
add
cld
out
das
rol
xchg
mov
imul
mul
mov
pop
add
pop
xchg
sbb
xchg
mov
in
mov
dec
in
retf
lahf
arpl
mov
or
cmps
js
or
mov
(bad)
jecxz
repz
sbb
adc
mov
data16
mov
scas
fisttp
sbb
xlat
gs
cmp
pop
sub
lods
addr16
arpl
scas
xor
xor
cld
fsubr
adc
pop
push
fdiv
pop
rcl
pop
xchg
inc
lods
mov
xor
sbb
or
add
or
aad
mov
ds
cmp
outs
cmc
std
inc
xor
mov
les
dec
cdq
mov
je
lea
xchg
vpsubsw
stos
adc
mov
fld
scas
sbb
shr
call
sub
cmp
fcom
aas
dec
mov
mov
mov
jae
mov
inc
lock
jae
jecxz
(bad)
stos
ret
sbb
fwait
mov
or
or
inc
sar
dec
xchg
mul
retf
and
lock
or
inc
xchg
mov
inc
jno
cmp
jno
gs
and
dec
add
aas
jns
sub
js
repz
push
dec
inc
add
out
adc
fwait
push
popf
inc
jmp
pop
or
or
je
and
add
push
or
adc
mov
jle
jno
sbb
mov
jmp
mov
sub
mov
push
loop
addr16
xor
mov
jle
out
dec
(bad)
das
lea
movs
dec
jp
addr16
rol
cmp
call
pop
into
arpl
pop
mov
push
push
iret
aam
mov
jle
cmp
xchg
push
jns
repz
or
xor
shrd
clc
push
jle
das
fld
loope
mov
inc
cwd
lahf
ret
clc
ds
xchg
mov
dec
and
loop
xor
jp
das
adc
test
scas
xor
cmps
or
mov
push
(bad)
not
cmp
and
popa
push
inc
rol
mov
jg
fisub
mov
je
mov
cmp
inc
xchg
mov
mov
test
sbb
xchg
push
dec
jno
dec
sub
std
test
out
mov
nop
cli
cmp
fsubr
outs
test
mov
mov
out
mov
jae
lods
push
or
outs
xchg
daa
mov
push
sub
bound
push
dec
mov
in
or
push
je
jae
xchg
js
xor
lds
stc
sbb
or
or
cs
daa
lahf
pop
je
rol
adc
mov
mov
cwde
ror
ins
fistp
test
gs
xchg
or
and
aam
add
jno
ins
ret
stos
inc
pop
xor
push
lock
sahf
(bad)
sbb
call
mov
pop
or
jnp
cs
adc
sbb
aam
repz
inc
paddw
cmp
xor
xchg
pop
cmps
pop
in
xor
xor
dec
enter
stos
cmps
sub
or
pop
xchg
jmp
jns
add
int
fwait
mov
stos
out
fcom
jmp
push
jns
ret
mov
inc
or
pop
and
fs
jae
dec
jle
cdq
sahf
ja
xchg
xor
test
shr
movs
sub
jecxz
and
mov
test
ja
call
jnp
lahf
sub
and
adc
cld
mov
adc
xchg
jecxz
inc
dec
or
adc
mov
inc
mov
mov
push
aas
inc
dec
loope
mov
jg
inc
mov
je
jge
and
or
jmp
pusha
aad
outs
cld
push
xor
shr
and
icebp
mov
in
pushf
mov
and
aam
push
add
cmps
xor
test
and
jmp
nop
pushf
lahf
loop
xlat
add
cwde
inc
push
xchg
rcl
fs
push
dec
mov
js
ins
xchg
mov
fidiv
rcr
mov
into
sub
cdq
mov
out
loope
jbe
mov
cdq
jecxz
daa
push
add
arpl
ror
cmp
xchg
xchg
loopne
shl
leave
mov
bound
mov
aaa
push
shl
enter
or
in
cmps
mov
cwde
xor
mov
mov
jmp
inc
arpl
fs
adc
movs
dec
sbb
xor
inc
retf
test
dec
loope
pop
jmp
pushf
push
xor
sub
clc
cmp
int
(bad)
jge
daa
sub
pop
dec
dec
mov
jl
lock
fucomp
push
test
cmps
lahf
mov
je
loopne
push
adc
mul
mul
mov
repnz
xchg
div
xlat
(bad)
and
ret
pop
add
sbb
xlat
repnz
outs
mov
aaa
cmps
lock
icebp
push
lds
add
lods
mov
jnp
push
fmul
ficom
ins
retf
pop
xchg
cmp
movs
or
xchg
inc
fist
pop
mov
cmp
scas
out
cdq
cmp
sub
repz
push
outs
cli
cmc
inc
push
cmc
imul
cmps
sbb
jg
cld
xchg
mov
xchg
lahf
and
push
(bad)
fistp
iret
out
sbb
lods
mov
subps
arpl
fmul
xor
test
test
push
imul
or
fadd
(bad)
jb
call
adc
loop
add
shl
xchg
adc
jnp
adc
pop
gs
shl
fisttp
or
mov
push
fistp
aas
icebp
enter
mov
mov
adc
pop
sub
push
dec
jge
push
out
inc
mov
add
cmp
mov
sbb
push
std
xor
imul
dec
loopne
dec
sbb
add
adc
adc
(bad)
lods
mov
cmp
mov
xor
rcr
popf
stos
adc
dec
vmovupd
cmp
dec
adc
das
and
imul
ffreep
das
or
stos
dec
(bad)
scas
pusha
test
adc
cmp
mov
mov
and
sahf
mov
je
dec
jo
dec
mov
nop
xor
shl
dec
lahf
sub
sub
sub
pop
(bad)
mov
test
fldenv
or
dec
movs
loopne
test
pop
imul
repnz
or
mov
pop
xchg
or
mov
enter
mov
sti
jb
mov
mov
or
test
xor
push
add
jno
pusha
stos
dec
ficomp
dec
inc
cmp
jl
sub
xor
fnstsw
jge
jg
mov
imul
out
pop
cmp
sbb
outs
lods
sub
test
icebp
jecxz
adc
sbb
(bad)
cli
mov
aad
and
jmp
stos
adc
xchg
sti
cld
dec
mov
in
pusha
pop
je
xor
xchg
call
cli
leave
ret
mov
repnz
inc
cmp
ins
cmp
mov
pop
add
push
dec
pop
sbb
stc
sbb
xchg
push
dec
or
in
cmp
pop
mov
or
lds
jbe
jns
aas
add
in
jno
sahf
cli
icebp
pop
imul
push
movs
and
add
mov
ret
arpl
(bad)
sbb
dec
repnz
call
test
push
mov
aad
and
clc
push
jmp
xchg
lods
jmp
lahf
shl
jmp
adc
adc
mov
pop
pushf
dec
adc
sbb
adc
adc
shl
cdq
(bad)
cli
repz
xor
sub
fdiv
jg
mov
mov
add
pop
fld
push
xchg
xor
push
cmp
dec
popa
iret
sbb
movs
test
sub
inc
inc
xchg
sbb
dec
dec
aam
neg
addr16
or
jg
in
aaa
mov
retf
jl
cmp
scas
enter
xor
jbe
pop
add
sbb
iret
pop
retf
adc
out
lds
xor
jae
add
mov
lods
add
aas
popf
aam
bound
push
loop
inc
cmps
xbegin
xchg
mov
cwde
mov
xlat
push
add
dec
jns
jmp
test
push
stos
aam
mov
imul
aam
inc
nop
xchg
mov
rcl
fwait
xchg
xchg
mov
lea
jb
pop
or
mov
ds
pop
js
sub
ja
pusha
and
dec
sbb
sub
daa
mov
sub
pop
or
push
xchg
call
icebp
bound
mov
mov
loop
adc
shl
and
mov
adc
bound
and
out
mov
ja
in
test
lds
mov
pusha
sub
fnstcw
or
imul
retf
jbe
sub
and
jl
sbb
dec
shl
call
xor
iret
frstor
mul
(bad)
push
jge
loop
and
idiv
mov
and
inc
dec
push
mov
hlt
cmp
in
frstor
outs
into
pop
pushf
fcom
ret
in
retf
push
xchg
adc
jmp
xchg
ficom
xchg
ror
cmps
scas
jnp
js
xor
and
add
dec
mov
add
mov
in
mov
jne
repnz
(bad)
outs
lock
ficom
std
sbb
nop
adc
sub
rol
leave
push
shl
add
and
push
jb
push
into
dec
leave
fnstsw
sbb
xor
std
test
pop
sbb
imul
xchg
(bad)
xor
popf
cli
and
jo
sub
mov
mov
out
jp
loop
cli
jp
xchg
popa
push
fiadd
push
jmp
add
xchg
dec
jb
jp
outs
push
pop
jp
aaa
adc
call
xor
call
jmp
fist
mov
mov
lods
movs
xor
outs
retf
scas
ins
or
rol
cmp
cmp
push
call
std
cmp
add
dec
fistp
test
push
mov
aad
mov
mov
test
mov
dec
cmp
mov
mov
xchg
scas
adc
inc
jno
sbb
pusha
(bad)
mov
imul
inc
jmp
push
mov
lds
and
sbb
jae
sub
xlat
cwde
cmp
hlt
and
test
mov
mov
shl
lds
add
and
push
push
jae
and
inc
push
fmul
sti
mov
sbb
outs
mov
sub
xchg
mov
in
scas
rcr
mov
lock
sub
push
lods
popf
sub
or
loope
or
(bad)
test
das
inc
dec
fwait
(bad)
out
mov
pop
cmps
cmp
mov
rol
mov
and
jmp
dec
push
lahf
ret
ins
movs
outs
dec
es
xor
and
cmp
xchg
push
dec
cmps
mov
xchg
cmps
aam
mov
inc
ss
repz
or
xchg
adc
call
stc
sbb
outs
fild
pop
dec
out
push
mov
pop
les
pop
in
or
stos
push
adc
mov
ds
xchg
ins
cmp
popa
sti
mov
div
mov
xchg
cmp
and
cmp
popf
rcl
dec
scas
sbb
inc
es
cli
dec
mov
cld
mov
dec
push
cld
lds
or
add
and
ret
bound
fistp
aaa
lods
cmp
sbb
retf
sar
ror
in
xor
push
into
pop
sbb
leave
mov
push
ficomp
test
std
jmp
hlt
popa
out
mov
hlt
out
xchg
sbb
add
xchg
cmp
cmp
sub
popa
daa
and
hlt
fs
lods
addr16
out
mov
xor
push
aam
push
out
add
stc
inc
mov
push
mov
mov
adc
(bad)
repnz
pop
dec
mov
scas
push
imul
push
in
adc
sar
test
xchg
mov
loop
hlt
cs
sub
aam
aas
pop
mov
push
in
es
xchg
jle
cmp
lock
inc
outs
shr
inc
xchg
(bad)
xchg
mov
addr16
fldz
and
and
iret
inc
pop
(bad)
jmp
mov
stos
cmc
xchg
repz
mov
shr
lods
and
xchg
inc
es
(bad)
xor
int3
adc
ret
in
shl
fdiv
push
push
add
mov
mov
xchg
inc
sub
in
sbb
and
jne
pushf
mov
sti
in
call
push
dec
push
push
push
(bad)
mov
out
dec
inc
sub
push
and
les
nop
fnstcw
shl
mov
xchg
mov
and
(bad)
mov
jno
dec
push
cmps
retf
cmp
pop
je
cmp
mov
sbb
xchg
movs
pop
loop
call
or
ja
dec
dec
push
int3
push
jecxz
mov
cmps
cmp
cmp
frstor
call
cmps
(bad)
mov
or
out
outs
cs
scas
sbb
or
xor
ror
ins
mov
and
xchg
push
pop
push
xchg
inc
rcl
mov
movs
rcr
stc
adc
ins
cmp
xchg
das
neg
jae
sti
fbld
cmp
shl
lock
jno
mov
xchg
pop
les
pop
cmp
fld
(bad)
push
mov
int
(bad)
jmp
ret
mov
push
push
sub
je
(bad)
sbb
vpminsw
push
daa
and
ror
hlt
xchg
cli
adc
loopne
fidiv
out
inc
mov
pop
(bad)
cs
jns
cmp
retf
gs
and
rol
repz
inc
out
push
jmp
out
push
dec
xchg
ret
mov
sbb
sub
ret
mov
push
ret
push
mov
mov
inc
aad
cdq
loop
cdq
push
int
int3
adc
(bad)
ds
dec
pushf
mov
(bad)
int
call
xchg
iret
adc
ds
sbb
mov
or
call
jmp
xor
leave
xlat
test
or
sbb
(bad)
sbb
and
test
retf
sub
mov
push
pusha
sub
jmp
sub
sbb
ficom
mov
add
nop
arpl
add
xor
cmps
hlt
mov
lock
mov
inc
retf
les
es
js
lds
ins
mov
in
cs
and
mov
cmp
jge
sub
dec
test
jne
hlt
out
inc
mov
lock
hlt
pop
ins
ror
push
cmps
aad
dec
f2xm1
jmp
cmp
mov
stos
jecxz
xchg
div
sbb
enter
mov
mov
xor
mov
pop
repnz
fnstenv
or
cmc
fwait
push
test
jmp
retf
sub
add
jmp
retf
or
mov
add
add
inc
in
test
dec
loop
mov
xor
(bad)
in
mov
pushf
push
inc
pop
fld
pop
sub
dec
lock
fwait
ds
arpl
push
push
add
lds
sahf
(bad)
test
sub
adc
(bad)
retf
xchg
mov
cwde
out
xlat
jmp
shl
sbb
cmps
add
shl
inc
popf
adc
int3
cmps
mov
inc
xor
fld
fdivp
inc
sub
cmp
lahf
jnp
cs
add
iret
pop
aaa
jmp
fsubr
push
push
popa
movs
dec
adc
leave
rcl
daa
cwde
bound
add
mov
xchg
adc
add
xor
mov
nop
jb
popf
das
shr
icebp
nop
xor
(bad)
or
cmps
push
sbb
jb
jns
rcl
test
inc
loop
out
stc
in
xor
(bad)
xchg
inc
and
mov
leave
add
push
idiv
(bad)
pop
stos
adc
mov
or
push
aad
jns
mov
int3
xchg
push
lods
mov
adc
inc
into
in
sbb
cmp
and
or
sub
out
and
in
xchg
nop
test
test
in
jbe
push
add
push
mov
jae
cmp
fs
fs
inc
jl
data16
ret
stos
ror
cmp
adc
lds
test
lods
nop
ret
or
push
dec
imul
push
es
sbb
dec
pop
mov
mov
repnz
xor
push
cmp
or
je
fs
add
dec
pushf
sar
das
mov
mov
sbb
les
dec
sbb
mov
jecxz
lds
sbb
data16
lea
ins
mov
jl
cmp
stos
fiadd
pusha
sub
add
outs
shl
fwait
test
xchg
add
inc
jmp
inc
mov
pop
retf
mov
mov
push
dec
xchg
outs
inc
je
inc
cmp
(bad)
sub
push
xchg
xor
lods
test
cmps
test
inc
xor
lock
(bad)
mov
je
jne
mov
xchg
addr16
adc
ins
int3
add
inc
dec
and
cmp
hlt
int
adc
dec
and
leave
stos
mov
in
cs
push
xchg
rol
ja
inc
inc
cmp
bound
fwait
jp
test
shl
jns
xlat
cmp
add
in
xchg
and
test
cmps
dec
neg
lods
out
lock
mov
inc
lods
mov
rcl
add
aam
cdq
adc
fadd
(bad)
pop
popa
dec
mov
outs
and
data16
push
mov
pop
adc
push
sub
pop
repz
call
popa
div
jns
adc
push
fadd
fs
or
mov
mov
push
xor
std
add
scas
add
mov
mov
mov
sub
not
in
rol
mov
dec
xchg
push
sar
push
addr16
xchg
dec
fisub
data16
ins
movs
(bad)
jle
enter
push
pushf
jp
call
shl
movs
daa
pop
(bad)
imul
test
dec
loop
jno
fldenv
daa
fwait
pop
sub
pop
inc
or
pop
aas
push
nop
push
xchg
pop
xchg
call
in
xchg
adc
test
shr
sbb
cmp
(bad)
xor
popf
fwait
sahf
add
or
cmp
mov
ja
mov
and
ficom
mov
add
(bad)
inc
or
int3
xor
out
scas
xor
outs
mov
stos
cmp
sbb
fwait
test
adc
mov
das
dec
in
mov
mov
ja
ss
loop
sub
mov
mov
xchg
add
xchg
bswap
fbstp
lods
cmc
dec
adc
out
outs
mov
xchg
sub
dec
in
dec
cmp
arpl
and
jecxz
sbb
push
sub
movs
dec
sbb
das
loope
xchg
(bad)
pop
jge
inc
dec
sahf
xor
jp
fst
cmp
aaa
fwait
adc
jns
iret
lds
xchg
dec
outs
imul
add
xchg
(bad)
int3
dec
shl
jae
bound
scas
jno
xchg
cld
outs
mov
inc
xor
je
sbb
mov
loopne
jl
rcl
icebp
jns
mov
or
sub
sub
xchg
pop
mov
lods
rcl
mov
in
es
xor
int3
scas
sub
push
cmp
xchg
mov
(bad)
push
mov
call
(bad)
lods
cld
pop
sbb
mov
pop
les
and
cmp
jb
retf
das
pop
cmp
(bad)
push
popa
jbe
test
call
mov
cs
sub
or
arpl
push
ja
jp
div
xor
bound
inc
xor
pop
vmovshdup
xor
jmp
ja
push
add
mov
mov
stos
adc
ror
or
out
test
rdpmc
neg
lock
cmp
push
(bad)
in
jo
pushf
jecxz
or
pop
sub
sbb
pop
inc
(bad)
test
in
pop
xchg
cwde
loope
mov
arpl
ins
sbb
test
adc
clc
retf
xchg
jmp
or
inc
jb
retf
and
adc
lods
ret
gs
shr
and
das
and
add
aaa
push
sbb
into
adc
or
mov
jbe
(bad)
adc
out
in
xchg
(bad)
in
cmp
adc
add
xchg
dec
xlat
push
popa
mov
(bad)
fld
xor
dec
fwait
cdq
stos
in
loopne
aaa
pop
fbld
movs
or
pop
jo
(bad)
sar
mov
das
sar
not
mov
add
cmps
pop
es
(bad)
outs
push
xchg
pop
mov
push
shr
fsub
not
or
adc
push
call
cli
add
sbb
mov
dec
inc
fidivr
jnp
in
call
std
loop
mov
shl
ret
add
call
cmc
pop
sub
fbstp
adc
dec
mov
add
or
addr16
cmp
xor
test
cmp
inc
(bad)
lea
fld
mov
adc
mov
mov
out
into
scas
cdq
pop
out
test
push
dec
xor
stos
fadd
out
loop
test
data16
jae
jae
or
out
push
shr
imul
xchg
repz
pop
js
ss
and
pop
or
or
xchg
mov
mov
inc
out
scas
sar
or
cmps
pop
push
jmp
jl
sub
fidivr
add
pop
sti
aas
push
push
push
outs
push
fs
aam
mov
or
add
xchg
inc
inc
ins
(bad)
loope
callw
test
cmc
cdq
or
in
sbb
or
(bad)
mov
mov
mov
add
cmps
xchg
push
inc
das
arpl
out
push
add
xchg
in
rcl
popf
cmp
shl
pop
in
dec
add
dec
out
into
mov
stc
aaa
out
xchg
ds
jl
aas
mov
xchg
push
inc
arpl
mov
test
push
push
daa
jo
std
lds
cmp
cmc
cdq
and
retf
xor
jmp
cmp
hlt
or
push
cdq
adc
movs
jbe
shr
mov
ret
sub
pop
sub
cmp
adc
aaa
std
inc
ja
hlt
adc
pop
mov
shl
push
mov
dec
in
xor
xchg
push
fwait
jns
mov
xchg
sub
cs
icebp
xchg
(bad)
xchg
sbb
(bad)
sub
popf
lahf
fsub
dec
movs
lahf
or
inc
xlat
jp
pop
mov
cmp
retf
cmp
lea
in
test
push
mov
out
sub
sbb
repz
(bad)
in
imul
pop
scas
mov
inc
hlt
arpl
xor
jecxz
and
jo
pop
cmc
icebp
sar
dec
cdq
dec
add
mov
xor
mov
and
arpl
sub
pushf
stos
ins
icebp
add
pop
push
lahf
call
xor
retf
bound
cmp
xchg
or
sti
sub
pop
inc
lds
call
stos
in
or
mov
call
je
cli
rcl
stc
outs
jnp
cli
stos
push
loopne
inc
shr
mov
mov
dec
sar
enter
mov
pop
daa
rcr
lahf
jmp
aad
gs
call
push
pop
jg
popf
pop
add
jnp
call
mov
jae
stos
gs
mov
and
fist
mov
mov
ds
pop
test
add
aam
sbb
xor
sbb
adc
sbb
shl
jnp
adc
sbb
push
fstp
dec
aam
add
xor
push
sub
inc
mov
aaa
iret
call
in
cmps
in
and
inc
ret
ret
ret
cs
adc
mov
push
ror
sbb
sub
data16
mov
xor
outs
ja
arpl
ins
rcl
pop
push
mov
inc
push
push
mov
cmps
pop
xchg
push
fcomp
frndint
cli
push
mov
outs
push
push
clc
and
pusha
cmp
xchg
ins
call
mov
repz
add
outs
aam
mov
mov
(bad)
jg
loopne
pop
push
pusha
icebp
push
jo
aad
std
pop
adc
inc
shr
push
xor
je
cmps
push
jl
outs
adc
pop
icebp
loope
sbb
in
sbb
jp
adc
lods
retf
jae
sar
mov
icebp
push
xchg
push
test
xchg
jmp
or
ins
gs
ins
jmp
daa
ins
jl
sbb
js
ja
inc
add
repnz
inc
xchg
cmc
mov
pushf
xlat
arpl
jmp
jae
mov
sub
mov
xchg
pop
dec
popf
and
and
inc
mov
xor
daa
or
xor
mov
lods
mov
jmp
mov
inc
jge
cmp
dec
fcom
xor
add
mov
daa
imul
test
cdq
ds
fimul
js
dec
sub
enter
imul
adc
xchg
aam
adc
cmc
pop
inc
mov
shr
in
lea
cmp
outs
(bad)
xchg
cmp
cmp
jl
out
pop
inc
imul
jne
xchg
leave
cdq
push
ins
imul
jl
dec
inc
pop
pop
pop
(bad)
dec
sub
adc
ror
mov
pop
pop
and
and
lds
fild
shl
mov
inc
loop
in
sub
adc
aaa
jns
in
ins
adc
push
cmp
repnz
sbb
mov
add
and
fcomp
fwait
pop
fldenv
xchg
sub
aaa
and
call
aad
push
movs
pusha
(bad)
popa
jb
push
(bad)
sar
ins
inc
pop
mov
icebp
in
jne
fucomi
iret
sbb
fdivr
mov
pop
and
lock
sub
push
dec
mul
imul
mov
cmps
retf
mov
aaa
inc
outs
mov
dec
pop
cmp
rcl
xor
xchg
cmps
add
mov
jle
push
mov
xchg
xor
ss
push
repnz
mov
nop
(bad)
das
push
push
jle
lahf
xor
mov
cmps
test
mov
cmp
dec
int
mov
sti
dec
ficomp
add
push
aam
rcr
lods
test
push
inc
adc
test
out
popa
fsubp
mov
add
dec
cli
dec
add
cmp
test
or
cli
out
fdivr
das
shr
imul
pop
sbb
fnsave
cmps
fcomp
push
std
pop
lea
cmps
sub
mov
aam
mov
adc
in
scas
sub
mov
cmps
add
jp
in
mov
dec
lods
jecxz
mov
ret
ins
add
mov
adc
std
fs
push
cli
es
adc
arpl
add
dec
jmp
loop
fisub
adc
cmp
sub
fdiv
add
fimul
pusha
and
(bad)
das
outs
or
mov
test
xor
and
daa
ret
(bad)
neg
cs
test
cmp
push
jge
inc
push
jns
les
cmp
movs
jmp
sti
pop
popf
jnp
out
mov
sub
jmp
jle
ins
(bad)
adc
call
inc
fst
xchg
ins
rol
call
fisub
jno
inc
call
repz
xor
cmps
mov
mov
mov
daa
sub
and
xor
pusha
ror
or
cmp
fadd
out
lods
ffreep
ficom
stos
or
repz
push
(bad)
sbb
lds
cmc
ror
pop
mov
fstp
pop
xchg
xchg
movs
dec
xchg
sub
call
and
rcr
jmp
inc
dec
mov
adc
fsqrt
xlat
jb
sahf
mov
inc
mov
mov
xchg
je
and
nop
and
sahf
popf
xchg
xor
cmp
fdivr
or
mov
mov
retf
dec
or
jae
inc
pop
retf
pop
fwait
scas
add
sti
cli
sub
mov
in
xlat
jp
nop
push
sbb
shl
mov
loopne
dec
ins
bound
rcl
repnz
adc
cdq
push
cld
aaa
out
addr16
int
xchg
not
in
ror
xlat
push
aas
pop
ja
inc
cdq
cli
push
lds
retf
or
cmp
pop
mulps
stos
jnp
cld
jb
and
sub
fsubr
jmp
jnp
adc
push
popf
bound
dec
mov
aam
nop
sub
mov
mov
ss
dec
scas
cmps
mov
cwde
jnp
rol
or
add
cmp
dec
and
mov
jge
jg
jle
(bad)
adc
or
or
dec
ins
into
xor
cmc
mov
out
sbb
loopne
xchg
aas
fild
mov
addr16
ret
sbb
jne
popf
push
je
into
mov
inc
ins
or
lods
mov
inc
add
ins
sbb
out
inc
shl
ds
aaa
push
pop
jmp
ret
sbb
dec
dec
sub
mov
test
addr16
mov
mov
scas
inc
xchg
jg
and
in
imul
pop
mov
xor
inc
lea
fsubr
mov
pop
push
and
pop
shl
stos
jmp
push
nop
icebp
mov
movlps
cmp
scas
(bad)
push
or
fidivr
call
dec
add
fcomp
mov
xchg
(bad)
das
jnp
mov
push
cmp
push
dec
cmps
push
add
loope
mov
in
push
push
sbb
cdq
mov
imul
dec
not
cld
cmp
sub
jmp
mov
lods
lea
cmp
cmp
cmp
xor
jne
and
sbb
jb
sub
iret
hlt
push
sahf
nop
enter
xchg
std
neg
movs
ret
push
lar
dec
dec
imul
jge
ins
pop
sbb
jae
xor
clc
mov
out
in
aas
mov
addr16
sub
xor
loope
dec
mov
push
jns
xor
enter
test
sbb
or
sar
push
pop
imul
mov
xchg
ret
arpl
adc
mov
adc
(bad)
loopne
dec
cmp
add
loop
in
jl
xor
mov
popf
dec
adc
test
push
lahf
pop
scas
push
sub
or
test
pop
sub
lahf
sbb
sbb
cmp
sub
mov
sub
jmp
shl
pusha
inc
jp
repnz
jmp
gs
jge
push
leave
in
call
loopne
or
(bad)
jl
repz
push
aas
xchg
push
movs
xor
inc
aam
mov
fwait
dec
test
mov
inc
(bad)
mov
mov
dec
sub
lahf
or
int3
xor
mov
xor
sub
icebp
fcmovu
adc
fs
sub
mov
push
or
div
mov
add
add
or
or
push
cld
fcmovnu
les
push
jmp
bound
push
push
sbb
sub
pushf
fiadd
cs
repnz
pop
cmc
mov
cmps
iret
jns
rcr
dec
lods
scas
add
into
cmp
repz
ret
ret
ffreep
sahf
repz
pop
vmulpd
pop
rcr
icebp
call
add
inc
push
mov
sbb
jg
(bad)
shl
pop
or
xchg
lock
jmp
outs
push
jmp
push
or
imul
loopne
data16
jge
ins
sub
push
pop
fimul
scas
mov
mov
jge
pusha
dec
scas
shl
adc
mov
(bad)
mov
mov
jmp
adc
jmp
fist
xor
stos
jb
(bad)
das
fstp
fst
fbstp
pop
mov
sbb
inc
dec
fwait
xchg
enter
lds
sahf
xor
mov
inc
or
ss
popa
jae
out
test
pop
sahf
mov
push
(bad)
shl
std
sar
fcomp
outs
adc
scas
(bad)
cdq
sub
mov
jp
fdiv
push
dec
cwde
xor
mov
xor
mov
inc
popf
test
sub
out
cmp
aam
jle
test
nop
sub
js
dec
pop
dec
sbb
and
gs
mov
pop
inc
rcl
retf
sbb
loop
sub
or
xchg
out
sbb
mov
jmp
mov
outs
xchg
mov
pop
add
and
xchg
add
out
loopne
or
push
xchg
push
xlat
xchg
fcomp
mov
mov
mov
inc
ss
imul
aas
(bad)
cwde
cld
jmp
stos
lock
jne
adc
sbb
jae
std
push
pusha
push
loopne
mov
mov
nop
adc
inc
popf
sub
xor
cmps
push
ins
aas
mov
cmp
dec
cmc
jle
(bad)
rol
icebp
jg
sub
fldenv
jb
jae
loopne
dec
inc
call
je
movs
clc
lods
(bad)
and
cmc
lea
rol
mov
vcvtss2si
adc
jg
push
fadd
adc
cmp
pop
mov
shr
mov
jmp
and
mov
(bad)
out
pop
xchg
lea
mov
es
mov
nop
push
xor
mov
inc
mov
push
add
xchg
xchg
rcr
or
jb
out
push
mov
ja
push
xor
mov
out
mov
aam
loopne
add
push
inc
mov
call
js
cmp
fdiv
out
mov
icebp
dec
cmps
call
inc
pop
clc
sbb
fisub
jns
jle
leave
inc
rcr
int3
jno
mov
jo
popf
loope
gs
data16
jnp
cmp
and
retf
cmc
sub
icebp
mov
xchg
retf
adc
jmp
mov
sub
das
arpl
cwde
xor
xor
mov
pop
dec
mov
addr16
or
xchg
xor
jnp
shr
jno
sbb
test
sbb
adc
adc
nop
fs
fs
and
sti
inc
mov
sub
sbb
xchg
in
cmp
out
push
inc
push
mov
(bad)
dec
xor
sbb
repz
dec
or
pushf
cmc
mov
inc
hlt
inc
jl
jp
adc
xchg
in
adc
(bad)
imul
xchg
mov
jp
inc
dec
nop
or
jecxz
add
imul
test
pop
das
pop
rol
sbb
push
setae
mov
dec
mov
mov
ret
mov
sar
out
push
cmp
outs
mov
pushf
mov
mov
cmp
je
rcl
sub
mov
push
repz
inc
aaa
ror
or
les
out
out
fsub
push
adc
pusha
xchg
ins
int3
in
lods
clc
or
add
dec
sub
pop
push
icebp
into
adc
in
mov
mov
bound
(bad)
sub
fs
cli
mov
pop
cdq
aaa
pop
push
push
cld
mov
rol
das
enter
in
cmp
jmp
(bad)
cwde
mov
lds
(bad)
sbb
ficomp
xchg
push
push
mov
pop
icebp
adc
or
xchg
stos
mov
xor
cwde
stos
cmp
imul
leave
lods
imul
rcr
ss
or
inc
adc
inc
push
fdivrp
out
retf
sub
test
jge
int3
imul
outs
dec
pop
cmp
dec
int
sbb
and
movlps
out
js
bound
mov
add
(bad)
sub
fwait
mul
(bad)
cmp
scas
aas
pop
(bad)
data16
mov
and
sbb
jg
ds
sbb
mov
jg
jmp
cmps
fisubr
stc
lods
rol
mov
mov
outs
neg
pop
or
jo
fbstp
adc
cdq
mov
and
cmp
(bad)
es
daa
adc
add
fs
repnz
stos
inc
push
cmp
out
pop
popf
mov
push
scas
leave
cmps
xchg
js
icebp
retf
inc
jnp
inc
push
int3
popa
push
(bad)
aam
fs
int
pop
in
cmps
mov
movs
cmp
in
clc
ror
test
pop
retf
xchg
daa
(bad)
iret
push
add
dec
sar
push
jle
jo
xchg
xchg
push
(bad)
cwde
clc
xchg
pop
push
xchg
outs
jmp
ret
imul
sbb
test
imul
popf
push
in
int
popf
cmp
outs
dec
mov
or
imul
cwde
rcr
push
call
icebp
push
ror
pop
dec
xlat
adc
pop
cld
mov
add
sub
shl
(bad)
pop
xchg
lods
ja
mov
and
mov
cmc
enter
icebp
and
dec
sub
ss
and
cwde
aaa
out
pop
cmc
xchg
outs
xchg
dec
fiadd
loope
leave
sahf
mov
sti
mov
pop
pop
jbe
jmp
cli
push
cmps
jle
test
jmp
repnz
jne
add
enter
imul
sbb
aad
cwde
cmp
imul
idiv
xchg
and
or
movs
test
push
int3
out
test
ds
retf
cmp
pop
pop
cmp
out
repnz
(bad)
gs
push
inc
cld
loopne
mov
and
mov
push
inc
fnstsw
fwait
sbb
loopne
jmp
mov
std
scas
out
mov
cmp
or
mov
loope
out
sub
dec
jl
jecxz
push
xchg
mov
lahf
in
jle
int3
jecxz
mov
mov
repz
add
fstp
in
(bad)
jg
out
iret
cmps
xor
adc
pop
xchg
inc
(bad)
out
ja
or
mov
and
mov
mov
mov
xchg
add
and
(bad)
sar
(bad)
into
mov
sar
sbb
loope
scas
arpl
push
or
aad
inc
or
inc
shr
in
adc
jo
mov
pushf
pop
or
mov
mov
or
xor
xchg
sti
sub
or
ins
sbb
cmp
out
cmp
clc
(bad)
out
and
cli
add
dec
jae
xor
jg
push
lods
cmps
aad
imul
fild
sub
mov
cmps
outs
push
add
mov
imul
mov
xchg
rcr
scas
jmp
sub
or
xor
pop
pusha
push
and
xor
and
sbb
and
mov
pop
or
jmp
es
in
push
test
push
add
inc
test
popf
out
pop
cmp
xor
jno
push
xchg
hlt
inc
adc
test
jae
and
cmp
sub
pop
and
ins
(bad)
pushf
fwait
ja
jmp
loop
sbb
shl
jmp
shl
and
aad
test
or
jmp
and
in
ficom
ds
mov
outs
(bad)
lods
pusha
adc
xchg
(bad)
rcl
imul
pop
mov
movs
(bad)
ds
cmp
mov
push
test
ffreep
add
clc
addr16
xchg
dec
add
jle
jmp
lea
add
or
test
push
xchg
or
cmc
inc
jne
and
mov
test
sub
cmp
call
fbstp
scas
lods
jmp
push
adc
into
shr
push
out
sahf
inc
mov
cmp
cdq
test
jae
data16
aam
sub
fdiv
sar
rcl
cmp
fcom
pop
leave
pop
push
sbb
ins
out
jmp
or
push
and
push
dec
jae
push
mov
cmp
movs
shr
imul
test
or
loope
mov
pop
ins
nop
iret
pop
ja
ins
mov
xchg
push
push
movs
iret
in
push
dec
frstor
push
jle
mov
(bad)
(bad)
push
jo
adc
cmp
bnd
js
xor
shr
mov
jo
daa
jge
pop
xchg
adc
mov
add
mov
pop
cmp
mov
push
jecxz
sbb
movs
cwde
adc
add
mov
adc
jo
inc
jbe
fcom
(bad)
rcl
xor
cs
pop
sbb
cdq
sub
sbb
(bad)
push
xor
sbb
cs
jo
imul
push
movs
add
or
mov
xor
xor
push
xchg
adc
test
inc
push
mov
sbb
call
ds
ret
test
or
xchg
cdq
push
xchg
fidiv
(bad)
jnp
mov
push
xlat
mov
add
test
xchg
add
pcmpgtb
and
push
cld
and
loope
and
cmps
mov
pop
inc
sbb
add
cmc
or
scas
pop
pushf
loop
mov
hlt
les
out
sub
add
pop
mov
jne
lods
bound
mov
bound
xchg
jl
cmp
aas
rcr
jno
sbb
mov
dec
daa
inc
imul
add
mov
dec
jl
mov
mov
mul
aaa
inc
cmovl
and
cli
lock
mov
shl
adc
enter
test
or
cli
ss
ror
cwde
or
adc
test
dec
xor
mov
jns
pop
ret
xchg
fld
into
mov
cmp
lods
inc
rcr
lods
adc
imul
pop
std
or
fadd
add
shr
jnp
or
add
mov
enter
imul
or
pop
jnp
mov
xchg
popa
test
shl
push
scas
aam
ror
cmp
push
(bad)
push
stos
mov
stos
out
repnz
xchg
dec
in
call
imul
cmps
cmp
sahf
loope
imul
and
or
outs
dec
xchg
leave
mov
xor
outs
push
pop
imul
call
cdq
ds
fisubr
cmps
lds
pop
loop
ins
loopne
mov
std
sub
mov
mov
inc
sub
and
jle
push
cs
and
cwde
repnz
ds
sti
add
fidivr
xlat
loopne
mov
pop
mov
rcl
xchg
outs
pop
sbb
xor
repnz
test
es
xchg
cwde
fist
and
ins
and
xchg
jo
dec
jle
cs
inc
out
nop
jmp
jle
xchg
call
adc
cwde
or
fcom
sub
fs
icebp
pop
mov
loop
int3
push
shr
ret
cli
inc
mov
sbb
inc
jo
xor
cld
mov
push
scas
and
adc
jle
sbb
add
push
stos
outs
sub
jp
push
mov
movs
jne
push
mov
test
int
into
push
jmp
pop
push
jge
add
ss
mov
or
cld
(bad)
xchg
jae
or
sbb
mov
jp
jmp
pop
fild
loope
xchg
repz
inc
mov
mov
imul
or
jae
inc
push
rcr
lods
lahf
shl
pop
xlat
jnp
adc
enter
and
dec
cmp
ss
cmp
je
mov
mov
add
shl
fisub
jmp
cmp
stos
pop
mov
dec
and
out
or
call
xchg
arpl
jno
inc
jo
and
xor
fisub
xor
push
fcmovb
shl
loopne
outs
adc
inc
(bad)
(bad)
into
push
das
xor
and
leave
xchg
mov
aaa
dec
lds
loope
je
test
mov
mov
cmove
sub
(bad)
ficom
fldcw
cwde
adc
cwde
or
xor
in
inc
push
f2xm1
inc
mov
(bad)
mov
pop
or
nop
js
clc
hlt
lods
sti
add
and
jne
icebp
aas
dec
sbb
pop
ror
dec
lea
repz
push
jo
out
ds
adc
sub
inc
xlat
jmp
bound
fwait
aam
mov
fwait
test
cld
bound
or
pop
xchg
xchg
or
ficom
add
sub
(bad)
movs
scas
add
test
in
xchg
mov
sbb
or
mov
pop
jecxz
fs
push
sbb
mov
mov
xor
cdq
pop
fild
enter
adc
jne
and
icebp
add
or
xor
retf
ins
and
jb
push
repnz
and
in
mov
in
and
jb
icebp
stos
retf
aam
out
pop
or
jo
sbb
fst
jnp
mov
jae
adc
icebp
add
int
mov
nop
bound
push
sbb
test
scas
cmp
retf
out
sbb
rcl
xor
pop
pusha
xlat
js
mov
push
adc
inc
imul
jmp
je
mov
sub
clc
pop
cld
ss
push
xor
xlat
rcl
add
lods
jbe
mov
or
(bad)
and
xor
arpl
jl
inc
or
aas
push
test
arpl
int3
xchg
cld
test
cmc
test
inc
bound
call
xchg
scas
push
mov
sub
or
imul
ins
and
mov
cmp
jne
pop
rcl
icebp
and
and
cli
fsub
add
adc
and
cmp
jns
or
jae
jmp
push
mov
out
add
or
in
or
mov
ins
mov
ret
repz
(bad)
and
sub
sbb
out
fdiv
push
mov
dec
mov
loopne
pop
(bad)
lahf
(bad)
std
retf
or
stos
and
or
dec
push
outs
inc
or
mov
jge
and
mov
sub
sub
int3
and
push
fs
enter
xchg
inc
push
jmp
scas
movs
dec
add
sub
jae
mov
xchg
not
mov
into
fld
outs
test
mov
popf
ds
scas
push
repz
(bad)
adc
cwde
lock
popa
test
shr
fsubr
ins
mov
push
test
mov
inc
std
jbe
xor
xor
mov
int
mov
jmp
jae
adc
loopne
add
sub
ds
ins
push
sub
jg
cmp
push
xor
into
neg
call
add
jo
test
push
xchg
imul
(bad)
cmp
push
xor
push
pop
and
pushf
popw
lods
in
xchg
or
jg
hlt
loopne
bound
sahf
dec
loope
inc
rcl
addr16
dec
ins
pop
in
cmc
mov
xchg
out
repnz
movs
pop
dec
scas
sbb
nop
into
sub
mov
mov
(bad)
imul
pop
ins
sahf
or
inc
add
retf
xor
retf
sub
mov
add
or
mov
jg
lahf
push
mov
push
mov
(bad)
pop
not
sbb
pop
fldenv
sbb
ds
xchg
pop
dec
jbe
adc
test
pusha
ret
adc
popf
xchg
mov
xchg
xchg
les
sbb
jl
jp
stos
idiv
cmps
ror
fisttp
ds
mov
jecxz
ret
(bad)
aad
ins
movs
shl
pop
out
adc
push
in
add
mov
adc
sub
out
or
inc
xchg
inc
fs
rcl
inc
mov
cwde
dec
inc
dec
mov
dec
popf
aam
xlat
push
(bad)
in
fild
push
outs
pop
sar
xor
xor
in
add
test
cmp
push
in
imul
xor
and
and
push
jge
sbb
loopne
mov
inc
lock
data16
div
or
sti
fdiv
add
nop
sub
loopne
pop
cld
push
cmp
xchg
cdq
neg
xchg
inc
and
es
sbb
bound
pop
(bad)
inc
inc
sub
sbb
jecxz
jnp
and
mov
xchg
xor
cmp
bound
mov
out
pop
ins
scas
jge
ret
loopne
dec
push
std
neg
ins
mov
or
dec
mov
jmp
mov
xchg
cmp
aam
pushf
js
xrelease
jo
pop
mov
rcr
xchg
iret
inc
inc
shl
aas
(bad)
and
rcr
arpl
fiadd
and
cli
in
retf
bound
sbb
enter
pusha
mov
call
mov
pusha
imul
add
fs
lods
das
dec
retf
jns
add
jae
cli
add
inc
or
test
stc
lods
push
in
ror
fscale
push
mov
inc
xchg
jmp
test
mov
inc
cmp
cmps
imul
das
icebp
sub
nop
aaa
mov
sbb
and
pop
stc
mov
lea
mov
test
call
movs
inc
jbe
fst
add
sub
cmp
push
jb
ds
add
adc
shr
mov
cs
dec
pop
dec
(bad)
adc
push
cmp
jno
mov
das
lock
imul
xor
ficomp
dec
or
jno
sahf
jb
adc
xlat
adc
je
sbb
push
daa
mov
aam
scas
push
push
jp
out
xchg
cmps
xchg
(bad)
(bad)
xor
adc
push
mov
jbe
leave
fld
xlat
push
mov
xor
jo
rcr
xor
(bad)
cs
inc
ror
ds
mov
push
pop
icebp
fs
les
bound
or
and
in
push
int
add
(bad)
pop
push
push
aas
sub
adc
dec
hlt
push
push
sub
movs
pop
jle
in
fisubr
xor
sub
ja
mov
jae
outs
or
movs
cmc
inc
xchg
pop
xor
ins
xchg
mov
pushf
mov
jmp
mov
jmp
mov
das
xchg
mov
aam
bound
inc
mov
pop
dec
retf
cld
stos
cmp
mov
pop
jae
add
xchg
cwde
es
jno
call
fadd
sbb
outs
sbb
aaa
call
ss
rcl
lock
push
inc
sub
xchg
cdq
addr16
lds
xchg
jl
adc
adc
repnz
push
push
stos
sub
pop
mov
repnz
rcr
clc
mov
enter
sub
push
inc
jge
jb
or
mov
sub
inc
pop
pushf
mov
iret
sub
cwde
les
int3
adc
(bad)
mov
frstor
fbld
retf
pop
jecxz
fwait
rcl
sbb
cmp
mov
xchg
gs
push
cwde
fwait
push
fbld
out
push
call
dec
mov
(bad)
data16
ret
mov
and
add
jb
icebp
(bad)
or
lods
(bad)
rcr
pop
inc
or
cmp
mov
loop
fs
les
and
push
iret
sub
cmps
sub
popf
jno
lea
enter
lahf
idiv
jo
aas
aaa
cmp
pusha
pop
xor
fucomip
cs
inc
ja
cmp
call
cld
sti
int
jo
jno
cmp
jg
xchg
xchg
mov
mov
(bad)
pop
push
push
ja
pop
mov
test
(bad)
icebp
mov
push
push
mov
or
cli
push
pop
mov
or
test
int3
mov
test
add
mov
inc
pop
pop
and
mov
or
ss
mov
mov
cmp
stc
ins
fstp
jbe
(bad)
call
dec
push
ds
push
push
das
data16
adc
out
sahf
and
pop
or
dec
retf
cmp
adc
push
push
cmp
pushf
mov
xchg
pop
ret
pop
sahf
sub
fiadd
ins
push
cmp
xchg
adc
sub
addr16
data16
in
out
(bad)
retf
or
mov
xor
in
les
aas
cmp
test
mov
cld
mov
mul
mov
inc
xchg
adc
push
and
fdivr
test
sbb
lds
push
or
jns
sub
push
cs
stc
int
out
add
popf
(bad)
aaa
dec
or
mov
imul
mov
mov
mov
out
stc
or
in
mov
xor
inc
or
push
adc
jo
pop
xchg
jge
popa
and
mov
xor
mov
and
cs
lea
jae
call
push
push
inc
jle
loope
or
jle
jbe
cmp
pop
jnp
ds
into
aaa
xor
xchg
fwait
int
mov
mov
adc
sub
push
mov
scas
cmp
fstp
cmp
jnp
mov
push
into
imul
addr16
mov
dec
shl
fsubrp
push
scas
stc
dec
(bad)
shr
jnp
lods
pop
arpl
cmp
test
lods
cmp
push
sub
out
cmc
xchg
pop
and
xchg
pop
fistp
std
push
ud2
in
or
push
popf
int
loope
mov
test
cli
pop
loop
mov
push
and
out
mov
div
lahf
outs
jno
mov
mov
outs
pop
and
mov
stos
ret
jno
dec
and
in
and
icebp
fldenv
and
dec
ins
in
jnp
fwait
dec
mov
sub
push
imul
push
aaa
or
call
mov
scas
in
pop
jo
retf
pop
pop
mov
mov
hlt
inc
jo
mov
push
retf
int3
mov
imul
dec
pop
fdivr
test
div
stos
mov
inc
and
add
adc
add
push
(bad)
(bad)
movs
stc
aad
xor
push
cld
into
popf
sti
into
sub
ins
movs
(bad)
mov
xchg
(bad)
pop
add
inc
jle
jecxz
cld
sti
xor
jg
pop
inc
and
and
mov
fcmove
mov
fcomp
push
xor
outs
stos
pop
movs
in
ds
inc
ja
shr
sbb
addr16
mov
xor
or
out
fs
mov
mov
scas
clc
pop
mov
cmc
cmp
jne
push
and
inc
cli
(bad)
test
sub
int3
mov
sbb
inc
sub
outs
mov
out
jge
mov
push
lahf
sti
sbb
sbb
mov
ins
or
dec
xchg
aam
jnp
out
jmp
mov
push
ins
lahf
ror
pop
in
cdq
out
xchg
ja
ret
les
mov
sub
inc
mov
mov
cmp
and
or
mov
mov
sub
movs
sbb
(bad)
movs
jmp
xor
out
mov
mov
jle
mov
jno
mov
xor
xor
or
inc
pop
mov
sub
push
sub
add
je
xchg
or
sbb
int
out
sub
in
test
sub
xchg
xchg
das
jle
out
out
cmp
add
cmps
xchg
aad
xchg
push
pop
imul
fadd
imul
(bad)
popa
popa
jne
cmp
add
clc
dec
outs
retf
not
mov
push
sbb
cld
dec
in
or
xchg
int
cmp
and
aad
jnp
fwait
mov
pop
jbe
sub
cmps
(bad)
sub
stc
sbb
and
fs
les
iret
lahf
div
mov
jl
jge
out
bound
mov
push
pop
inc
les
stos
lea
xor
out
cmp
push
in
cmp
sub
ins
xchg
std
cld
cli
mov
int3
ret
lock
fwait
mov
push
ficomp
pop
in
jmp
push
cli
jp
jmp
hlt
and
jl
xchg
mov
hlt
or
sub
adc
xchg
ret
pop
sti
dec
adc
vpsrlw
sbb
repz
jg
sub
adc
inc
fiadd
mov
sbb
mov
mov
addr16
les
mov
cld
into
cmp
in
sub
jge
cmp
cdq
scas
test
out
mov
jne
dec
pusha
test
les
push
je
inc
sub
xor
daa
inc
fcomp
mov
cli
dec
faddp
cmc
call
sub
imul
or
jmp
xor
ins
(bad)
push
pop
enter
mov
mov
(bad)
sub
mov
cmc
push
dec
jmp
lods
mov
das
test
jbe
ja
les
je
mov
call
jle
gs
inc
push
jge
push
xchg
pop
ret
imul
loopne
shr
inc
or
pop
cmp
add
mov
and
out
jbe
jno
add
jecxz
add
mov
jno
mov
fmul
dec
fild
lahf
sub
mov
(bad)
cmp
es
cmps
sub
mov
cmp
hlt
lahf
push
add
push
mov
sub
cmp
cmps
aam
push
push
les
lods
pop
mov
push
cdq
sub
ja
js
mov
es
sbb
jg
jne
mov
test
mov
mov
pusha
cmp
lods
repnz
in
adc
fstp
sbb
or
loope
xor
out
bound
mov
std
mov
and
jmp
xchg
pop
dec
mov
ja
test
popf
mov
enter
sub
adc
mov
retf
fsubr
fstp
mov
dec
push
lods
push
outs
mov
jmp
mov
cmps
sub
sub
fs
icebp
lock
fsub
add
cmp
inc
mov
movs
dec
jecxz
pop
jmp
sub
idiv
sub
mov
adc
dec
in
push
fadd
and
dec
cmps
inc
jmp
call
pusha
hlt
ins
mov
push
xor
aaa
add
sbb
mov
pusha
inc
or
and
dec
je
add
mov
dec
pop
aad
xchg
outs
and
or
loop
pop
cmp
sbb
add
pop
mov
jmp
jo
dec
sub
fistp
xchg
mov
jmp
aad
or
dec
fld
ins
sub
int3
sbb
mov
mov
call
bound
daa
popa
pusha
(bad)
lods
jp
sub
jmp
cli
dec
add
mov
jle
out
push
fs
xchg
in
mov
pushf
dec
adc
sub
inc
xor
scas
mov
aas
mov
inc
xchg
add
adc
cdq
mov
es
dec
leave
loope
cmp
inc
stos
loop
nop
push
pop
fdivrp
mov
hlt
fadd
leave
add
mov
rcl
xchg
imul
mov
xchg
mov
call
frstor
xchg
push
inc
(bad)
push
pop
or
inc
mov
mov
mov
sbb
jnp
mov
inc
cmps
ret
fs
mov
icebp
aam
stos
ret
pop
mov
es
int
sbb
lds
sub
retf
stos
or
ds
add
repnz
add
mov
sub
mov
cmc
sbb
jne
or
loop
jns
outs
mov
fnstcw
jg
add
cmp
loope
pop
fiadd
in
push
jp
jl
into
in
push
and
and
dec
lods
test
(bad)
jb
or
(bad)
fs
in
lock
enter
aas
dec
jge
in
addr16
movs
xor
xor
mov
xor
dec
and
adc
sahf
in
mov
pop
pop
dec
add
jnp
pop
mov
stc
add
(bad)
mov
rol
popf
nop
dec
neg
add
mov
sbb
mov
daa
dec
jbe
mov
sbb
pop
xor
inc
(bad)
xchg
test
mov
sub
stos
sub
fucomip
jmp
dec
pop
fnstcw
inc
mov
test
dec
inc
fsubr
mov
push
fwait
sbb
mov
sub
movs
adc
or
xchg
bound
dec
pop
fs
bound
pop
jge
aad
cmp
xlat
fbld
in
mov
outs
nop
(bad)
js
bound
jge
iret
in
daa
fist
cmp
fcomp
jecxz
cs
test
dec
adc
mov
adc
daa
add
jge
mov
push
ja
jbe
xor
or
arpl
pop
push
add
lds
cli
repnz
ds
pop
push
or
mov
enter
or
loop
ret
push
sub
mov
(bad)
xor
pop
daa
in
inc
int3
push
movs
mov
or
push
and
out
mov
pop
push
add
mov
es
sbb
test
cdq
add
or
fmul
cmp
push
mov
add
loopne
hlt
test
ss
push
push
test
(bad)
jmp
and
sbb
xchg
xchg
jmp
xor
ds
and
jnp
sar
sbb
test
nop
push
out
ss
loop
sub
cmp
dec
sub
push
mov
add
and
inc
mov
push
sub
(bad)
jnp
adc
retf
dec
enter
repnz
mov
fmul
pop
jge
inc
sbb
push
adc
ficomp
xor
or
stos
push
inc
jp
jno
lods
push
push
leave
sbb
and
(bad)
les
jecxz
ja
adc
or
pop
movs
adc
mov
cmc
push
pop
mov
lods
dec
test
inc
xchg
jo
aaa
xchg
mov
jmp
mov
stc
and
clc
mov
mov
hlt
int
mov
cmps
das
(bad)
shl
mov
and
call
jmp
push
sub
or
jae
xchg
ret
inc
mov
(bad)
pop
or
dec
lods
and
call
or
rol
mov
push
outs
inc
jl
inc
adc
(bad)
test
xchg
add
leave
nop
dec
test
xchg
pop
cmp
fild
add
or
gs
and
pop
jo
adc
fcomp
xor
pop
repnz
int
sub
popa
xor
jae
adc
sub
in
bound
mov
rcl
mov
xor
and
leave
mov
and
stc
adc
mul
mov
mov
jg
sub
cmp
shr
push
jge
xor
xchg
add
lock
daa
shr
cmp
sub
inc
and
mov
mov
adc
jge
cmp
ja
arpl
call
icebp
xchg
shr
xchg
xchg
repnz
xchg
or
ret
scas
pop
lods
jbe
scas
push
repnz
sbb
into
cmp
jmp
mov
fbstp
mov
fistp
(bad)
sbb
adc
outs
movs
js
mov
xor
dec
scas
adc
or
xor
mov
ss
mov
adc
xchg
clc
xchg
jl
imul
cmp
xor
leave
enter
mov
in
cmp
cwde
mov
jae
mov
mov
shr
and
or
leave
dec
or
int3
sub
cmc
mov
cmp
push
sbb
loope
mov
sbb
leave
jg
fmulp
in
(bad)
popf
sbb
xchg
and
pop
mov
js
xor
jl
dec
out
mov
cmp
pusha
adc
xchg
addr16
popf
pop
cdq
call
stos
fld
pop
pop
out
cmp
test
aas
mov
addr16
push
jo
dec
adc
das
sahf
(bad)
jmp
scas
imul
call
pop
sub
push
repnz
jb
inc
lods
or
dec
jmp
pop
mul
arpl
or
and
mov
xlat
sbb
push
sbb
cmp
mov
je
dec
sub
pushf
lds
stos
cmps
sahf
rcr
sub
movs
jbe
and
jb
jle
js
add
jb
or
js
sar
push
adc
hlt
cmp
mov
lods
inc
addr16
mov
mov
push
mov
sub
add
fwait
push
out
jo
mov
lock
jge
mov
lods
dec
or
cmp
fidivr
sub
jns
push
sbb
xor
icebp
leave
xor
stos
stc
dec
inc
fcom
inc
push
and
jecxz
ins
mov
popa
retf
cmp
sub
xor
sbb
push
std
adc
cmp
cli
cmp
inc
retf
mov
mov
push
add
call
cmp
or
scas
int
dec
enter
sbb
retf
adc
inc
aad
push
fist
or
and
outs
push
in
push
mul
jg
mov
dec
push
add
shl
fmul
push
sub
stos
cld
jb
aad
mov
outs
aam
xchg
fisubr
mov
adc
xor
push
xor
mov
stos
lock
and
(bad)
adc
fst
or
iret
cs
gs
push
inc
cmp
and
mov
int3
mov
sub
mov
nop
sub
daa
pop
mov
inc
and
sahf
scas
sub
jae
or
jo
cmp
pop
sub
xchg
fimul
jnp
push
lds
dec
adc
scas
xchg
sub
in
jmp
or
fsubr
adc
popa
dec
dec
dec
js
dec
mov
mov
mov
sub
je
hlt
loope
push
into
jmp
jnp
or
movs
push
dec
or
dec
shl
or
es
vpaddsb
mov
xchg
leave
jp
jb
push
aaa
test
inc
sbb
xor
xor
sbb
cmc
pop
pop
js
cmp
imul
in
in
mov
in
mov
adc
rol
jp
cmp
hlt
fist
mov
mov
loope
xlat
arpl
sub
pop
or
dec
dec
xor
ja
fcomp
scas
sbb
dec
lods
xchg
ins
jmp
sbb
pop
aas
popa
pusha
jns
(bad)
mov
cvtps2pd
sar
ret
or
fild
retf
scas
fwait
enter
sti
cmp
or
retf
test
push
repz
push
sbb
scas
xchg
push
xchg
cmp
int3
sbb
mov
or
rol
mov
ins
fidivr
daa
lea
jnp
cwde
mov
adc
scas
jp
sub
test
lahf
inc
xor
les
loope
imul
fwait
or
ja
sahf
mov
es
push
jb
pop
out
adc
cld
aam
jo
mov
xchg
push
dec
inc
daa
jae
mov
cmc
mov
test
xchg
scas
xchg
jae
pop
iret
push
dec
mov
mov
push
sbb
jns
push
sub
mov
add
shl
mov
mov
sbb
lods
in
lds
in
mov
jne
mov
into
mov
sbb
sub
data16
pushf
xchg
lods
pop
fist
xchg
xor
mov
xor
fs
dec
push
popa
mov
outs
test
test
mov
jl
pop
jns
mov
enter
mov
pop
mov
add
aas
test
sub
fcmovne
nop
adc
(bad)
inc
pop
sbb
push
and
(bad)
mov
dec
clc
mov
clc
cmp
shl
in
mov
push
cwde
sub
popf
iret
je
mov
sub
ja
and
fwait
mov
inc
or
clc
stos
inc
std
sbb
nop
adc
pop
in
fs
push
fild
pop
jmp
repnz
daa
dec
cwde
cmps
dec
push
push
add
mov
mov
loope
fnstenv
xchg
mov
ret
pusha
sti
fldenv
add
lds
jnp
cwde
inc
in
jns
sbb
sbb
lods
cmp
cs
fmul
pop
nop
es
jg
jmp
xchg
test
repnz
pop
stos
outs
cmps
fwait
and
dec
das
add
adc
mov
sub
xor
pushf
loope
push
aas
pusha
add
loope
ficom
push
mov
mov
mov
and
push
fimul
mov
sub
dec
sbb
push
pop
pop
das
into
fimul
shr
outs
movs
mov
push
push
xor
gs
pop
shl
loop
xchg
popf
xlat
add
aas
xor
cmp
sbb
push
adc
xchg
std
pop
xchg
jae
cmps
mov
ins
pusha
mov
or
std
daa
and
mov
xchg
lea
(bad)
shl
add
and
jbe
sub
mov
mov
sbb
sbb
jcxz
jl
(bad)
fistp
or
push
sbb
mov
adc
mov
loope
fs
imul
cmps
add
imul
mov
xchg
mov
xor
inc
lds
pushf
lock
lock
mov
push
in
clc
or
push
ins
push
repnz
sbb
cmp
(bad)
ficom
inc
sbb
mov
adc
push
ret
mov
das
mov
adc
adc
and
add
or
aaa
mov
cmp
aaa
sbb
jne
mov
leave
sbb
sbb
into
or
pop
mov
jb
push
mov
movs
stos
jg
jnp
mov
dec
neg
or
dec
add
ret
neg
inc
push
jmp
mov
fimul
push
sbb
pop
in
ret
mov
xchg
je
dec
fiadd
fs
ret
fwait
xor
fcmovnu
cli
loop
cwde
sbb
rol
retf
(bad)
aas
and
ret
es
lock
push
cmp
jae
xchg
adc
(bad)
mul
mov
cs
pop
cld
leave
sbb
jp
loop
lds
jnp
sti
int3
ffreep
mov
cli
in
pop
pop
fistp
push
je
push
or
scas
dec
and
in
sub
std
lock
pop
test
dec
xchg
inc
adc
cdq
sbb
add
retf
pop
in
in
cli
pop
pop
(bad)
xchg
jg
fwait
adc
lods
je
imul
and
enter
xchg
in
ret
(bad)
nop
lods
push
hlt
stc
shl
mov
mov
jg
push
loope
push
or
clc
or
pusha
mov
jmp
in
cmps
push
jno
mov
sti
fimul
push
pop
repz
sbb
jmp
pop
push
ret
jl
pop
jmp
arpl
clc
out
sbb
(bad)
cld
inc
mov
push
loope
cmp
sub
jbe
push
jo
(bad)
adc
pop
push
fisttp
pop
sub
sbb
outs
inc
mov
stos
jmp
pop
push
mov
fwait
adc
xchg
clc
adc
xor
jecxz
push
push
pop
movs
fidivr
jg
sbb
and
into
push
xor
fs
pop
cdq
add
fisubr
pop
xchg
fst
dec
mov
dec
add
xchg
push
xchg
iret
daa
ja
inc
addr16
push
inc
push
mov
push
jge
mov
jnp
xchg
sbb
movs
xor
mov
leave
test
sahf
scas
jb
das
pop
icebp
adc
icebp
in
cmp
inc
push
sbb
leave
sbb
sub
cwde
pop
mov
mov
sti
outs
out
(bad)
pop
shr
icebp
test
and
push
jecxz
imul
lds
sub
fldenv
jmp
pop
ror
out
clc
cmp
icebp
(bad)
push
fdivr
cli
adc
add
(bad)
retf
ins
xor
ret
xlat
mov
mov
out
or
test
push
push
push
arpl
es
mov
sbb
xor
int
jmp
push
xchg
dec
cmp
out
fcom
and
jns
sahf
dec
scas
fmul
and
add
xor
lahf
pop
retf
into
neg
mov
jae
pushf
loope
and
push
pop
sbb
fsub
inc
ret
gs
push
rol
xchg
out
inc
(bad)
push
sbb
arpl
and
mov
sub
cld
and
sub
pop
sub
or
emms
add
lds
daa
rcl
add
cs
push
int
loop
enter
fisub
ret
je
jne
inc
lds
inc
pushf
mov
into
mov
mov
fsub
push
push
sub
xchg
jp
in
jno
jae
sbb
fild
jmp
xchg
add
inc
fwait
mov
dec
daa
add
icebp
ror
scas
(bad)
cmp
cmps
fist
cmc
adc
mov
enter
nop
pop
mov
vpmacsdd
lods
mov
in
test
rcl
pop
adc
xor
mov
mov
jns
ret
jb
xchg
mov
pop
(bad)
imul
mov
lods
(bad)
fcomp
fninit
mov
outs
pop
mov
dec
fiadd
cmp
sub
lds
mov
mov
cmp
cmp
loopne
movsx
mov
sub
lea
sbb
mov
xchg
and
es
and
inc
retf
sbb
(bad)
mov
mov
mov
js
pop
jge
(bad)
push
inc
js
sub
cmp
jmp
leave
aaa
inc
adc
cld
sbb
and
aas
push
repnz
add
bound
hlt
fnstenv
pop
push
jmp
push
popf
or
(bad)
cmp
out
lock
iret
dec
cmp
stos
shr
xchg
push
xchg
xchg
mov
xchg
push
adc
xor
ins
stc
fwait
mov
sahf
sub
cmps
ja
or
jno
cld
and
test
pop
pop
arpl
cmc
push
movs
fstp
mov
xor
dec
xlat
cwde
loope
mov
xchg
ja
(bad)
or
ret
inc
mov
lods
mov
in
mov
shr
inc
pop
or
scas
mov
lods
dec
sar
je
into
or
retw
or
cmp
jge
fmul
test
jno
repnz
je
ror
pushf
lahf
sahf
dec
ret
cmp
es
frstor
fild
pcmpeqd
(bad)
rcr
movs
popf
aas
stos
shl
leave
outs
aaa
dec
jnp
xor
mov
dec
stc
pushf
ds
xor
add
sahf
ja
rol
cmp
pop
stos
loope
std
test
fild
jecxz
mov
jbe
dec
add
mov
lds
mov
push
jp
xlat
scas
add
dec
cli
pop
test
loop
mov
cmps
out
cmps
pop
sbb
inc
outs
js
jns
fiadd
ja
jmp
and
test
fnsave
cmps
js
inc
mov
xlat
data16
cmps
(bad)
xor
and
or
loop
(bad)
push
std
xor
push
(bad)
jb
fisubr
gs
pop
call
arpl
jne
sub
mov
cmp
push
rep
pop
int3
or
pop
xor
push
cmp
inc
jle
inc
add
pop
cmp
inc
xchg
inc
push
sar
out
dec
sti
jle
adc
fistp
call
and
sbb
dec
ins
sub
pop
ja
mov
xchg
movs
pop
gs
xchg
fcmovne
or
fs
xchg
sbb
call
mov
std
mov
or
sti
sub
ror
mov
mov
adc
xor
inc
pop
ds
leave
mov
ret
jle
sub
pop
outs
push
int3
mov
adc
adc
scas
clc
popf
ds
(bad)
mov
dec
jmp
pop
pushw
leave
adc
pop
aad
dec
jmp
pop
aas
in
sbb
cmp
xchg
(bad)
movs
dec
xchg
or
and
jb
mov
inc
jmp
jecxz
popa
jmp
test
xchg
dec
sub
and
mov
cmp
jns
bnd
mov
popf
and
or
fadd
stc
bound
retf
jp
push
icebp
scas
jecxz
mov
popf
icebp
popa
and
daa
aad
int3
(bad)
adc
sub
adc
test
scas
or
jecxz
sub
mov
ins
gs
lea
ins
pop
stos
imul
shl
shr
xor
sti
or
mov
cwde
sti
rcr
and
push
inc
test
bound
dec
jo
sbb
mov
inc
mov
clc
das
fwait
pop
xchg
pop
cmp
cmp
call
ss
and
add
fimul
or
xchg
call
ja
pop
mov
icebp
dec
jns
vpaddsw
ins
sahf
sbb
out
mov
jmp
add
push
retf
out
ins
ds
dec
jno
(bad)
fild
or
jmp
outs
mov
repz
cmp
in
gs
xor
jbe
cdq
loopne
loopne
xchg
mov
pop
cmp
sbb
inc
test
or
adc
add
add
mov
fldl2t
cmp
in
sub
pop
mov
fcom
xor
lea
ret
loop
sub
sub
dec
xchg
inc
mov
lea
jmp
xor
shl
mov
push
mov
sub
test
jno
xchg
pop
js
retf
pop
jo
fwait
mov
cmp
lock
ret
mov
clc
lods
sbb
repz
test
iret
sbb
retf
mov
lods
or
scas
aaa
dec
test
aas
push
imul
loope
(bad)
cdq
(bad)
lea
push
and
mov
xchg
outs
add
sahf
cmp
sub
ss
xchg
fst
or
or
shr
pop
or
xchg
xor
jnp
mov
xchg
sbb
mov
push
cmps
sbb
mov
dec
inc
cli
outs
rcr
and
inc
mov
pop
jno
cmp
mov
mov
div
nop
cmp
xchg
in
mov
gs
jnp
add
cmp
dec
jl
aad
mov
jbe
stc
std
arpl
inc
mov
cmp
mov
clc
push
xor
jne
cmp
xchg
jmp
rol
cmp
jbe
pop
in
mov
je
sahf
arpl
sub
push
or
dec
shl
test
nop
sub
(bad)
push
ins
inc
(bad)
repz
dec
or
fcomp
fist
jnp
bound
inc
mov
mov
pop
neg
ss
cmp
scas
mov
mov
xor
cmp
cmps
push
imul
rcr
add
popa
dec
or
outs
xor
in
pop
mov
lahf
pop
or
fistp
mov
mov
icebp
repnz
popf
xor
mov
popa
ret
data16
jp
dec
mov
mov
enter
jp
fmul
push
or
test
add
push
nop
arpl
loope
mov
lea
nop
mov
ja
jns
lods
sahf
mov
add
ds
mov
pop
shr
dec
int3
imul
and
xchg
xor
out
pop
fcomp
mov
or
sbb
cmpps
add
inc
xor
inc
mov
dec
add
loop
cmp
pop
(bad)
jns
xor
retf
enter
fcomp
stos
outs
xchg
push
sub
in
cmp
mov
sub
sbb
sahf
push
xor
outs
test
jmp
mov
xchg
sahf
enter
enter
jae
inc
addr16
inc
in
neg
sahf
pop
or
out
pop
xchg
retf
dec
adc
xor
dec
mov
and
ds
lea
pop
movs
loop
int
cld
cmc
mov
ds
je
cdq
mov
in
xchg
xchg
and
mov
or
xchg
test
dec
mov
jp
fwait
cmp
or
mov
call
mov
mov
mov
mov
aas
cmp
jl
shl
jo
push
and
xchg
pop
cmps
jns
in
mov
(bad)
retf
pop
rol
cli
lahf
xchg
jecxz
or
add
and
cmp
mov
daa
(bad)
clc
push
or
shl
cmp
sub
sahf
mov
dec
sub
(bad)
sub
xor
popf
retf
imul
or
xor
shl
sahf
test
xchg
repz
out
xor
xor
call
hlt
sti
mov
pop
fisubr
pop
lods
xchg
sahf
push
xchg
aam
lea
mov
scas
out
sti
push
adc
or
fnstenv
jmp
ficomp
jnp
rcr
(bad)
jle
arpl
mov
jl
jg
ret
xchg
xchg
popf
cmp
mov
inc
ficom
jl
cmp
cmp
or
sbb
(bad)
std
xchg
pusha
pop
shl
dec
or
pop
mov
loope
jge
je
jecxz
js
out
or
lea
pop
xchg
cmp
and
xchg
cmp
xor
fsub
lds
xchg
push
call
test
rcl
add
test
mov
fild
imul
cmps
out
push
fwait
sub
ds
xor
jg
xchg
ret
mov
icebp
mov
call
mul
jae
mov
or
je
sub
jle
aad
sub
fst
test
inc
push
inc
clc
clc
js
outs
in
inc
cwde
sbb
xchg
inc
pop
mov
add
shr
ret
adc
lods
iret
or
cmp
call
inc
xlat
call
add
movs
pavgb
mov
daa
ja
mov
rcr
inc
(bad)
sbb
rol
sbb
(bad)
push
out
ins
mov
jg
gs
out
dec
pushf
add
loope
xchg
fisubr
mov
outs
lods
lods
clc
cmp
xor
xchg
fild
out
push
mov
adc
out
pushf
int3
(bad)
pushf
pusha
in
xchg
popa
pusha
cmp
stos
xchg
mov
pop
pop
push
iret
scas
jo
push
mov
dec
jbe
mov
dec
rol
lea
fmul
mov
jne
dec
cmc
inc
imul
and
fst
xchg
mov
xchg
jmp
dec
lea
sub
xchg
sbb
push
loop
movs
jp
pop
cmps
and
pop
sub
mov
mov
sub
mov
test
(bad)
mov
jno
mov
xchg
retf
lock
pop
shl
mov
xor
icebp
rol
(bad)
fisub
xor
hlt
leave
cmps
dec
cld
shl
jbe
push
ins
cs
push
hlt
cld
scas
(bad)
push
mov
imul
push
ins
lahf
stc
xchg
popa
push
icebp
les
fbld
int3
push
mov
out
scas
mov
les
push
sbb
outs
das
ins
mov
pop
xchg
adc
sbb
imul
aad
mov
add
cmp
hlt
stos
(bad)
aam
add
(bad)
cmp
and
retf
loopne
jnp
repnz
cwde
int
xchg
inc
or
sbb
std
jne
shl
add
ins
dec
dec
add
loope
imul
inc
cmp
ss
call
mov
pop
push
dec
or
push
and
repz
dec
mov
inc
mov
xor
out
add
xchg
daa
ins
ins
shl
push
fucomi
outs
movs
add
scas
cwde
add
push
jmp
nop
cs
cmp
jmp
jnp
adc
enter
mov
jb
xchg
cmp
aam
test
push
lock
add
loop
mov
mov
xor
sbb
out
mov
inc
mov
cmp
icebp
scas
imul
fldcw
in
pop
ss
pop
adc
sbb
stos
jb
mov
fwait
pop
pop
dec
in
mov
sti
enter
pop
cbw
mov
popa
or
jecxz
cmp
xchg
mov
dec
cmp
cli
loope
pop
push
mov
pop
rcl
pop
int
dec
pop
stc
inc
or
pop
ret
mov
fld
and
faddp
ror
mov
and
mov
in
xor
leave
lea
cmps
sbb
adc
loope
mov
sbb
mov
inc
ror
leave
pop
sub
or
inc
jge
push
(bad)
mov
add
daa
push
scas
xor
jge
jo
ds
and
cmp
xlat
cmp
sub
or
add
mov
movs
fld
gs
add
repnz
aad
jno
jnp
sbb
xchg
(bad)
cmps
dec
push
leave
ret
sar
xchg
or
xor
pop
cwde
sbb
inc
ficomp
clc
(bad)
icebp
or
mov
dec
ja
xchg
dec
jbe
sub
loopne
add
ins
stos
fistp
test
in
lea
leave
or
es
lods
sbb
call
dec
inc
enter
call
cmp
push
cdq
pop
scas
xchg
mov
xchg
ficomp
je
sub
cdq
out
xor
pushf
popf
or
adc
rol
lods
mov
inc
add
lods
icebp
icebp
or
call
rcr
sub
mov
push
push
in
push
ins
and
mov
mov
inc
xor
fldenv
bnd
adc
out
ds
push
cmp
ins
mov
jge
scas
shl
fcmovbe
inc
fidivr
mov
sbb
mov
inc
cld
ja
jae
scas
jae
pop
cmp
repz
push
ror
cmp
push
pop
adc
sub
dec
sub
in
sbb
add
ins
inc
mov
cli
rcl
xchg
jb
(bad)
cmp
inc
push
cmc
jmp
jg
push
adc
xchg
out
leave
jg
or
repz
pushf
push
jecxz
jg
fsubr
cmp
cmp
dec
jmp
ret
loope
fwait
inc
xor
sbb
pop
(bad)
int3
cmps
dec
movs
sbb
imul
push
scas
call
inc
cmp
mov
mov
mov
mov
cs
mov
mov
test
repnz
jg
jo
cmp
pop
jl
push
xor
lods
aad
imul
xlat
pop
(bad)
loopne
pop
push
mov
call
call
ins
addr16
fidivr
(bad)
xchg
sar
neg
enter
sahf
mov
in
imul
pop
sub
ret
in
sub
jns
dec
fimul
add
int3
jo
jle
in
shl
repz
dec
cmc
leave
add
sub
push
mov
push
sbb
cmp
test
dec
mov
sub
adc
sub
rol
bound
sub
inc
movs
dec
pop
push
adc
in
leave
fld
dec
sub
add
outs
add
jno
xor
scas
ret
cmp
add
push
pop
nop
sub
jl
sub
lds
jp
mov
mov
mov
into
push
cs
cli
mov
mov
vpsubsw
jns
aaa
cmp
push
mov
(bad)
popf
xchg
retf
mov
inc
jne
in
lods
ss
cmp
xchg
mov
int3
enter
mov
dec
jp
push
sub
adc
dec
daa
hlt
inc
cli
(bad)
sar
out
int
add
std
cdq
popf
out
fs
mov
push
jp
mov
dec
lock
pop
in
mov
lock
icebp
(bad)
dec
cmps
gs
xor
push
rcr
add
jg
movs
call
mov
(bad)
sbb
movups
and
scas
popa
adc
adc
pop
movs
rcr
cmp
mov
das
out
fstp
lock
mov
mov
iret
inc
lock
pop
int
cwde
nop
bound
mov
out
mov
(bad)
pop
int3
push
int
iret
push
call
jmp
or
pop
sub
(bad)
mov
cdq
cwde
adc
mov
xchg
ret
ja
sub
or
and
push
jns
(bad)
jl
icebp
sbb
xchg
in
or
loopne
fwait
test
jp
adc
mov
jmp
pop
ror
(bad)
jmp
mov
loope
rol
mov
push
movs
outs
fld
(bad)
out
ficom
or
pop
cmp
ret
add
pop
xchg
sub
pop
(bad)
or
loop
jbe
xchg
mov
test
add
and
aam
dec
pop
dec
leave
shl
or
sbb
data16
daa
scas
mov
ja
and
cmp
mov
adc
(bad)
jg
dec
jle
test
jb
xor
jge
rol
cmps
fistp
mov
cwde
add
test
lods
ins
jns
add
ds
and
scas
dec
jno
inc
test
add
out
adc
pop
inc
arpl
loope
iret
mov
mov
adc
fnstenv
cmp
outs
out
pop
retf
lock
sti
daa
out
es
es
ja
cs
xchg
jae
fst
out
popa
ss
fwait
std
and
out
push
loope
mov
and
dec
adc
mov
fs
and
xor
mov
ds
xchg
sub
cmps
outs
pop
clc
sti
adc
fcmovnbe
push
sbb
out
popf
adc
mov
inc
sbb
leave
xchg
ret
sub
cmps
(bad)
sub
cdq
mov
aaa
repz
fadd
jg
movs
add
int
mov
rcr
mov
rcl
dec
dec
xor
lds
retf
cmp
ins
ja
mov
add
ret
call
movs
push
movs
jb
je
add
xor
loopne
xchg
daa
mov
shl
adc
out
mov
rcl
fmul
xor
jno
xchg
xchg
mov
jno
inc
pop
inc
leave
outs
jl
xchg
loopne
push
mov
xor
mov
outs
jmp
cmp
xor
pop
fcom
push
pop
xor
xor
mov
adc
stos
mov
xor
lods
push
sub
push
xchg
jae
dec
push
fldcw
test
inc
mov
ja
data16
js
and
mov
sbb
mov
mov
mov
aam
lds
push
mov
daa
call
mov
push
cmp
cmp
xor
jmp
imul
fdivr
ss
inc
imul
xchg
sbb
rep
dec
cmp
mov
pop
jmp
and
add
ins
aaa
dec
xchg
inc
cmp
fst
dec
scas
adc
sbb
call
int3
jae
aad
gs
test
xor
in
pusha
sub
arpl
jmp
loope
retf
and
add
lods
jg
icebp
mov
push
xor
lea
je
or
push
and
int
mov
mov
adc
stos
sbb
xchg
cdq
adc
add
cmc
jno
mov
cwde
xchg
dec
pop
mov
adc
dec
out
jmp
mov
sahf
or
cmps
in
xchg
push
xchg
fwait
ret
int
rol
push
pop
pushf
mov
jae
rol
and
fnstsw
inc
xor
mov
adc
bswap
pop
test
mov
pop
mov
push
dec
add
pusha
paddd
add
js
jl
add
fbld
or
popf
sbb
xchg
call
idiv
stos
out
xor
inc
cmp
popf
fstp
sub
div
xor
jo
int
add
ja
push
mov
aad
ror
mov
and
push
fs
or
fs
push
mov
inc
data16
sub
cwde
push
mov
mov
inc
inc
mov
jne
xor
add
mov
or
(bad)
mov
les
out
test
mov
pop
pop
jg
(bad)
in
inc
mov
das
push
mov
xor
mov
aad
fucomip
in
inc
add
lods
stos
inc
fcomp
push
out
call
mov
dec
sub
ins
dec
pusha
push
iret
or
adc
cwde
aaa
xlat
lds
mov
or
mov
pop
int3
add
cmc
add
xlat
into
mov
mov
sub
fdiv
repz
test
pushf
inc
(bad)
int
ins
arpl
mov
fcom
clc
mov
mov
xor
jmp
dec
fwait
stos
sbb
mov
leave
sub
enter
fimul
sbb
mov
cmovo
int
aad
push
jle
xchg
mov
xchg
mov
and
ror
aas
sub
push
mov
fsub
and
push
lahf
xchg
and
push
outs
rcr
sub
mov
sub
icebp
push
pop
fild
or
sub
fst
loop
stc
mov
pop
inc
or
cli
test
stc
inc
out
ret
lds
retf
inc
mov
jmp
or
sar
cld
enter
xor
add
les
(bad)
out
call
sbb
ficomp
dec
(bad)
cld
sahf
pop
pop
sbb
pop
daa
sub
and
leave
sar
(bad)
into
lock
pop
call
sub
repz
jmp
shr
xchg
sub
rcr
test
xchg
xor
pusha
xchg
sub
sub
sahf
jnp
cmps
imul
in
inc
out
and
lods
int
push
test
lods
and
cwde
cmps
cld
pop
or
pop
ja
fld
mov
mov
jmp
mov
push
and
mov
cmp
xor
adc
std
sub
sbb
fst
ror
cld
(bad)
cld
mov
rcr
sti
cmp
out
dec
std
test
imul
push
xchg
arpl
push
fld
mov
ja
dec
xor
out
jbe
inc
mov
daa
xlat
jle
xor
mov
add
jmp
int
fstp
dec
cld
jle
mov
mov
cmp
pusha
push
in
and
and
mov
pop
cmp
add
dec
scas
xchg
(bad)
adc
(bad)
adc
pop
scas
repnz
nop
dec
popa
repnz
mov
xor
add
sbb
fild
cmp
push
std
xor
vmread
jge
add
mov
loop
lock
adc
push
jg
jg
xchg
(bad)
cmp
inc
push
add
mov
mov
add
pusha
jl
dec
ins
mul
sti
cwde
xchg
mov
or
jp
jl
std
xor
dec
push
loop
enter
xchg
lock
and
sub
mov
in
pop
push
inc
jp
and
pop
mov
add
pop
adc
push
sub
and
int
ret
dec
sub
inc
cmp
pop
stos
mov
call
add
mov
das
in
in
xor
push
mov
popf
sub
jno
dec
mov
push
push
cmp
arpl
stos
leave
pop
(bad)
out
movs
adc
repnz
dec
or
push
repz
ret
push
dec
sub
fdivr
inc
(bad)
les
sti
(bad)
fst
in
dec
pop
in
js
mov
xchg
pop
or
pop
in
inc
fst
sub
adc
in
cdq
inc
mov
mov
call
test
add
mov
fild
mov
(bad)
sbb
sub
(bad)
or
(bad)
push
pop
xchg
test
cmp
dec
and
loop
jge
dec
pushf
dec
out
xchg
mov
lds
rcl
inc
enter
and
in
loope
jae
pop
std
loop
and
or
xchg
imul
loope
xchg
sbb
adc
mov
mov
cmp
cmp
mov
out
pop
imul
in
push
dec
add
mov
adc
mov
adc
rcr
loopne
adc
xor
hlt
icebp
inc
and
mov
cdq
jne
repz
jecxz
fnsave
xchg
cmp
rcr
cld
mov
sbb
push
mov
inc
movs
cmp
shr
loopne
cdq
dec
cmc
adc
sbb
cld
mov
jmp
ret
retf
sub
(bad)
pop
je
jle
mov
adc
test
xor
bound
idiv
dec
fdiv
jecxz
neg
xor
inc
jno
mov
das
cwde
sbb
mov
pop
ds
fbld
scas
loope
push
or
popf
test
stos
pop
mov
jle
mov
pop
in
cmp
xchg
retf
xchg
jo
dec
fistp
lea
imul
mov
shl
loopne
mov
cs
ret
adc
(bad)
test
call
imul
inc
or
and
call
mov
mov
mov
outs
clc
in
cmp
retf
and
cmps
sti
hlt
sbb
sub
or
and
je
xchg
cmp
ret
mov
in
inc
xchg
rol
(bad)
jp
mov
popf
push
fild
mov
mov
adc
cmp
or
sub
aaa
xchg
mov
imul
jle
pop
cmps
adc
clc
ds
mov
aad
je
das
test
inc
jne
sbb
retf
aad
or
sub
ins
call
test
and
add
or
inc
xchg
(bad)
or
cmp
sbb
xchg
cmp
mov
sbb
pop
fwait
(bad)
jmp
push
call
mov
movs
ret
fs
out
mov
js
or
movs
cli
mov
lds
test
push
cmc
dec
and
cmp
popf
adc
ffreep
cld
gs
mov
push
sbb
mov
sti
pop
dec
or
push
in
fdiv
mov
mov
push
icebp
bound
mov
xchg
sbb
add
xchg
in
cmp
or
inc
outs
(bad)
iret
bound
cwde
add
clc
and
inc
mov
jmp
mov
push
fs
(bad)
push
mov
fstp
dec
pop
xchg
repnz
and
xor
adc
repz
xor
adc
inc
jb
mov
stc
mov
gs
or
sbb
cmps
lds
mov
jnp
jecxz
in
inc
test
mov
test
mov
sbb
in
neg
scas
ins
in
int3
xchg
daa
mov
cld
ja
ret
xchg
std
pop
aas
xor
ss
cs
add
xchg
ins
cld
not
jns
adc
sub
pop
mov
repnz
out
fs
sbb
sbb
out
pop
fiadd
xor
cmp
or
pop
mov
call
push
dec
bound
inc
xor
jb
aad
cmp
push
pop
ds
pop
jecxz
mov
jbe
aad
mov
jmp
outs
pop
pushf
call
pusha
dec
fcom
push
sbb
loop
jle
pop
or
cmp
xchg
and
lahf
sub
jne
push
fcom
mov
push
out
dec
push
(bad)
retf
jmp
push
(bad)
mov
inc
or
push
sbb
mov
sub
jnp
push
cdq
adc
jae
out
cmps
fwait
push
cmp
aaa
cmp
(bad)
les
xor
xchg
stos
lds
or
push
jl
sub
out
mov
(bad)
ds
xor
icebp
or
sbb
test
rcl
jno
fisttp
iret
das
das
imul
test
cld
dec
das
jb
xor
scas
cs
push
in
inc
pop
lahf
xlat
xor
adc
addr16
out
scas
shl
ins
std
push
push
dec
arpl
int3
or
test
enter
aaa
pusha
xlat
je
movs
dec
cdq
jns
call
hlt
test
in
and
xchg
call
pop
xlat
inc
in
dec
mov
pop
imul
xor
and
movs
mov
jo
xor
sti
xchg
inc
inc
fdiv
fbld
popa
out
leave
aad
pop
ss
inc
sub
addr16
(bad)
std
xor
int
ins
xchg
push
or
pop
add
loop
xchg
les
mov
inc
jmp
pop
mov
sub
es
mov
movs
add
iret
mov
jp
adc
sbb
or
jle
dec
xor
inc
push
lods
fnstsw
mov
and
jbe
cli
ins
xor
scas
(bad)
bound
nop
inc
bound
xchg
mov
fst
daa
cmp
retf
sub
jmp
or
cmp
(bad)
adc
ins
lock
call
push
fild
and
sub
push
fld
pop
rcr
in
repz
dec
and
adc
fcomip
(bad)
(bad)
mov
scas
push
imul
fs
leave
jne
shl
jge
mov
js
and
sub
or
stos
inc
cdq
mov
iretw
leave
and
push
scas
addr16
dec
adc
push
xor
lods
xchg
mov
and
pop
jmp
mov
and
inc
dec
jmp
cwde
je
mov
clc
jmp
ja
repnz
dec
pop
fnsave
push
xor
pusha
adc
shl
mov
call
push
jne
jp
mov
dec
xchg
cs
icebp
gs
cdq
call
jae
and
mov
push
repz
stos
sub
fsubp
pop
stos
jnp
ror
mov
test
lahf
mov
xor
in
xor
jge
adc
sti
cmp
cmp
hlt
or
arpl
jae
imul
(bad)
(bad)
aas
test
fdivp
movs
add
add
or
add
mov
inc
push
pop
call
es
mov
nop
sahf
xlat
int
jnp
and
inc
and
lea
fdivr
jno
repnz
inc
cld
pop
mov
mov
aam
lods
sti
out
mov
pop
push
loop
aad
stc
cmps
mov
push
add
in
pop
inc
sub
mov
aas
fwait
inc
ja
adc
rol
retf
dec
push
scas
push
push
xchg
pushf
fist
push
xchg
cmp
xchg
fnstenv
push
fist
sbb
shr
jnp
cmps
or
pop
xchg
out
pop
enter
inc
aam
jns
sbb
sub
stos
clc
pop
jge
mov
push
jge
in
xor
add
es
mov
aam
and
adc
add
xor
fyl2x
sub
mov
das
xor
mov
fucomip
shl
popf
js
mov
je
les
scas
push
neg
add
icebp
push
or
pop
xor
pop
call
popf
out
shl
cmp
aas
xor
cmp
inc
push
xchg
sbb
bound
or
call
mov
cmc
test
add
push
jnp
test
mov
add
(bad)
xchg
dec
pusha
loopne
mov
inc
not
mov
test
nop
movs
test
mov
push
dec
idiv
dec
push
sbb
ror
xchg
adc
cmp
out
jbe
inc
(bad)
mov
(bad)
cmc
in
cmp
pop
xchg
nop
push
(bad)
fistp
hlt
test
xchg
and
int
stc
push
movs
and
(bad)
sbb
cmp
cld
nop
mov
retf
mov
push
cmps
xor
sar
fcom
jle
push
mov
mov
inc
sub
pop
xchg
imul
xor
pop
sbb
daa
lock
push
pop
daa
fstp
fcom
mov
add
jecxz
mov
scas
or
and
mov
and
adc
fidiv
pop
pop
fwait
mov
mov
stos
aas
loopne
lea
test
and
pop
mov
outs
rol
je
xor
xchg
sub
sahf
out
stc
addr16
push
test
stos
inc
sti
mov
in
(bad)
aad
push
(bad)
aad
in
sub
mov
ret
fiadd
lods
mov
rol
push
and
ret
out
psubb
pop
sub
je
adc
cwde
xor
loopne
call
cmp
and
fldenv
fadd
pop
cmps
retf
(bad)
pop
mov
scas
jecxz
das
pop
push
jb
fisub
pusha
ret
dec
xchg
push
mov
loopne
xchg
retf
in
movs
sub
adc
call
(bad)
sub
in
pop
dec
and
xchg
jae
imul
(bad)
iret
fmul
inc
cwde
ins
pop
xchg
sahf
movs
mov
sub
je
push
(bad)
cmp
or
fs
add
fild
fcom
adc
enter
xchg
push
inc
test
fwait
cmp
pop
cmp
dec
add
fild
or
xchg
aaa
add
xor
mov
test
mov
lahf
sub
enter
iret
inc
and
xchg
push
pop
cs
test
out
mov
sub
add
xchg
shl
add
mov
mov
push
movs
retf
mov
lea
and
das
in
jecxz
mov
arpl
and
ds
or
gs
pop
clc
xor
xchg
out
jmp
inc
jnp
and
retf
movs
push
popa
je
dec
sub
jo
loop
mov
sub
mov
test
in
jnp
sar
popa
dec
addr16
ins
mov
sub
add
std
mov
loop
(bad)
daa
shl
xchg
jge
add
(bad)
inc
sub
mov
mov
mov
push
vcvtps2pd
ret
pop
arpl
repz
adc
dec
or
rol
mov
retf
add
frstor
xor
jo
xlat
mov
dec
inc
sub
xchg
xor
dec
jg
mov
mov
ja
xor
jns
shl
push
jmp
jne
gs
ds
and
dec
movs
adc
ror
ins
ja
cli
xor
jmp
hlt
int
lods
leave
jl
push
xor
stc
push
les
jmp
int3
test
cmc
mov
push
sbb
pushf
push
cwde
inc
and
sbb
out
pop
sbb
int
xchg
cmp
pop
out
dec
dec
rcl
enter
mov
sub
dec
les
movs
xchg
pop
sub
push
loopne
push
(bad)
jnp
addr16
mov
xor
enter
movs
fs
mov
push
ret
jp
mov
rol
ss
test
and
cld
cmp
rcl
xchg
mov
inc
jecxz
aam
push
pop
lahf
pop
imul
pop
adc
movs
inc
mov
mov
fisubr
retf
jmp
stc
mov
jle
push
or
dec
retf
jg
push
add
test
xchg
imul
and
iret
fnsave
fld
(bad)
dec
sbb
cwde
aas
(bad)
out
mov
or
test
jne
jg
cmps
or
mov
pop
push
adc
repz
clc
sub
dec
mov
dec
pop
imul
pop
movs
add
popa
mov
scas
test
xchg
sub
stos
xchg
inc
in
xor
or
xor
xor
mov
cmp
sti
xchg
mov
or
in
pop
div
call
out
pusha
shl
sahf
dec
cmp
jmp
pop
in
push
xor
mov
fnstenv
shl
jo
in
loopne
adc
add
ret
xlat
pusha
xchg
(bad)
cli
adc
jne
inc
loop
pop
ret
nop
add
ds
push
(bad)
sbb
(bad)
mov
jg
fstp
xor
add
jp
jecxz
mov
clc
pushf
push
inc
jo
inc
cmp
cmps
inc
add
shr
jmp
adc
aaa
mov
jg
cs
leave
das
pop
clc
mov
scas
jmp
jb
xchg
sbb
cmp
repz
loopne
add
push
jno
sbb
(bad)
ret
movs
pop
push
ret
lods
(bad)
fisub
sub
enter
dec
into
mov
jnp
lds
sub
sbb
cmc
xchg
arpl
aas
in
mov
cli
pop
cmp
loope
push
add
nop/reserved
fadd
in
fidiv
ficomp
out
xchg
lock
retf
cmps
sbb
inc
fld
mov
pop
pop
add
popa
jno
inc
fldcw
imul
jne
les
loop
ds
sar
test
sub
add
fiadd
in
mov
xor
add
xchg
inc
stos
add
push
pop
adc
call
cmp
stc
cwde
adc
sub
dec
adc
xchg
or
scas
mov
fisubr
sub
dec
into
ficomp
rcl
adc
dec
jo
cld
loope
lea
xchg
stos
jmp
jle
adc
add
loopne
cs
mov
mov
jle
test
inc
mov
sub
jge
xchg
mov
imul
in
jbe
and
sbb
xchg
jp
xchg
repnz
mov
cli
aaa
fimul
sub
nop
mov
dec
mov
fisubr
in
rcl
and
ret
gs
cmps
or
test
fmul
push
or
jmp
mov
push
(bad)
mov
mov
out
push
xor
and
mov
cmp
fcom
mov
jae
dec
mov
mov
fmulp
in
rcl
xchg
scas
and
adc
cdq
jns
sub
cmp
or
outs
std
pushf
add
cmps
imul
adc
inc
or
xor
dec
idiv
addr16
je
and
into
stos
cmc
inc
or
ds
jl
push
push
pop
aas
(bad)
or
and
push
push
out
sbb
sub
xlat
pop
or
bound
jnp
mov
push
adc
ror
aas
test
xor
cmp
add
(bad)
fidivr
movlhps
rcr
test
leave
fist
add
fwait
dec
sbb
aam
sbb
in
in
push
retf
movs
sub
call
lock
ins
or
jo
das
dec
das
mov
addr16
jo
sub
cmp
add
mov
xor
add
xchg
or
out
push
and
push
xchg
or
adc
jb
mov
cmp
cmp
cmp
mov
shr
lods
inc
call
lods
sbb
inc
in
pop
call
outs
jg
lods
or
in
mov
mov
add
mov
mov
js
into
xchg
int
(bad)
ins
jg
loopne
sbb
mov
mov
sub
push
pop
(bad)
test
popa
push
push
or
mov
and
sub
push
cmp
pop
nop
pusha
scas
iret
outs
scas
fwait
hlt
inc
retf
jecxz
push
dec
scas
push
retf
(bad)
dec
mov
or
xchg
cmp
and
xor
push
adc
bound
mov
xor
imul
pop
jle
or
mov
sbb
add
or
dec
mov
cmp
fmulp
aas
sbb
mov
mov
cs
mov
lahf
jae
mov
cmp
icebp
jle
inc
adc
push
fnsave
rol
jecxz
pop
fsub
sub
aam
jg
jle
cmc
pop
jae
outs
in
sub
sti
xchg
dec
aas
arpl
pop
call
es
lock
push
(bad)
xor
sbb
push
rol
lods
jmp
push
outs
mov
test
mov
pushf
ins
test
rcr
sub
xchg
repnz
(bad)
repnz
jns
cmp
cwde
call
lea
pop
inc
jbe
rcr
test
xchg
mov
jae
out
adc
inc
add
mov
push
out
into
add
sub
repnz
aam
pushf
pop
aad
xor
sahf
imul
mov
add
push
xor
and
adc
mov
push
cwde
mov
mov
into
sbb
mov
in
popa
scas
mov
loop
daa
rol
gs
out
xchg
mov
pushf
push
jbe
stos
aaa
adc
mov
daa
jb
in
jl
pop
add
inc
jecxz
dec
push
call
ror
add
or
cmp
jmp
pop
daa
sub
xor
outs
(bad)
dec
ret
cs
jg
add
cmp
adc
jno
iret
cmp
sub
ficomp
pshufw
push
pusha
cdq
sbb
sub
cwde
jg
stos
in
cmps
leave
call
gs
lods
out
stc
in
fnsave
mov
iret
sbb
lds
mov
sub
fincstp
inc
inc
lods
sbb
pop
add
xchg
adc
(bad)
mov
fwait
jl
or
mov
or
add
aaa
test
sub
xchg
mov
jp
add
mov
test
xlat
popf
gs
xchg
je
add
push
mov
cmps
jmp
fmul
adc
push
dec
xchg
rcl
lahf
add
lods
cmp
xor
fwait
in
adc
in
sbb
xchg
adc
cmp
dec
fst
xor
add
out
popf
dec
sub
mov
sbb
fcos
sub
test
xchg
and
dec
aas
jno
in
pop
dec
mov
or
les
push
bound
sub
jmp
mov
cmp
adc
call
pop
mov
clc
dec
push
aaa
fwait
dec
jg
(bad)
jne
cs
dec
scas
inc
cmp
xchg
mov
xchg
outs
stc
jmp
out
push
add
push
and
js
pop
test
pop
movs
stos
fcomp
dec
cs
leave
retf
xchg
push
and
loopne
and
dec
jecxz
retf
pop
test
outs
ins
cli
out
mov
icebp
sha256rnds2
data16
fisubr
mov
push
push
push
ds
sti
loop
push
enter
jle
inc
cwde
mov
clc
mov
iret
inc
or
mov
aaa
mov
lock
int3
aaa
add
fwait
lods
pop
pop
shl
adc
sbb
aad
or
and
div
adc
xchg
les
dec
ja
sub
(bad)
int
pop
test
inc
dec
stos
xor
and
out
fidiv
push
xchg
dec
push
inc
push
fisubr
or
dec
add
lahf
shl
imul
jecxz
dec
cmp
cmp
push
jno
or
cmp
ss
jno
xor
pop
adc
(bad)
addr16
lea
sti
je
pop
push
inc
inc
test
cs
push
fcom
stos
xlat
mov
sub
pop
mov
or
jp
imul
ins
mov
rcl
fsubr
je
int3
jl
pop
or
out
movs
or
xchg
inc
sub
jge
aas
and
(bad)
shr
sub
imul
mov
sbb
arpl
inc
ja
inc
fwait
or
fadd
pop
sbb
repz
or
mov
pop
lods
cmps
lea
ins
retf
adc
add
popf
scas
inc
ins
int3
sbb
lea
push
out
pushf
ins
xchg
add
scas
and
(bad)
icebp
repz
pushf
adc
cmc
adc
add
les
lock
enter
js
out
mov
mov
add
dec
mov
push
jb
mov
mov
dec
iret
clc
mov
pop
dec
sahf
xor
cmp
outs
lock
stos
inc
or
mov
xchg
(bad)
in
int3
fild
arpl
push
sahf
jp
and
push
jmp
in
jmp
retf
(bad)
jg
jecxz
inc
ins
and
leave
add
stos
push
loop
xor
cld
cmp
(bad)
(bad)
hlt
sub
mov
dec
popf
imul
dec
push
inc
cmp
loope
in
stc
dec
outs
cmc
inc
sbb
inc
or
push
ret
pop
mov
test
cwde
push
fs
pop
sub
rcr
nop
movs
bound
sahf
jne
jecxz
jg
mov
jmp
retf
xor
sub
jae
and
out
inc
lahf
mov
lahf
dec
add
sar
inc
inc
ror
sub
jecxz
inc
push
cmps
xchg
fs
cmp
adc
cmp
iret
rcr
sti
mov
jae
cmps
gs
cmp
or
sub
mov
add
dec
sbb
dec
xor
xor
mov
push
jns
mov
es
scas
dec
adc
arpl
adc
fstp
in
fwait
jecxz
es
sub
icebp
xlat
mov
rcr
pop
ror
das
push
les
jne
neg
jns
xchg
in
pushf
and
push
les
xchg
out
jg
push
dec
scas
outs
sti
and
sub
adc
push
ds
xchg
mov
inc
fwait
test
jb
add
dec
add
or
inc
mov
inc
iret
adc
jns
lea
and
jno
fisub
popf
mov
push
mov
mov
jg
cmp
ins
cli
cvttps2pi
aaa
add
in
mov
retf
inc
popf
loope
mov
push
xchg
xchg
or
cld
aaa
mov
mov
je
xchg
add
sbb
mov
scas
daa
xor
rol
adc
les
inc
push
sub
(bad)
jno
shl
nop
cmp
push
sub
cwde
cmps
movs
imul
stos
ins
mov
int3
mov
fs
jns
xchg
test
fisubr
push
sbb
mov
jmp
inc
mov
loopne
jae
jge
popa
sbb
adc
mov
add
and
ret
in
push
cmp
loop
mov
mov
mov
clc
pop
or
jle
je
outs
push
jle
pop
xchg
(bad)
xchg
add
outs
loope
icebp
sbb
cmp
stos
push
lahf
cmp
inc
test
les
dec
out
jns
sub
(bad)
sub
les
dec
jnp
das
and
mov
sti
adc
call
lahf
push
test
cs
xchg
fist
mov
sub
mov
outs
gs
jg
pusha
pushf
retf
sub
mov
jae
jp
sbb
add
mov
ficom
enter
cmp
repnz
mov
out
xchg
(bad)
mov
add
pusha
cmp
cmc
sti
dec
xchg
js
sbb
(bad)
scas
mov
lods
mov
push
scas
outs
push
dec
mov
adc
xchg
mov
mov
sbb
xchg
(bad)
push
pop
in
xchg
outs
in
push
ss
and
lods
and
lahf
adc
jmp
aas
daa
pop
cs
mov
and
sub
add
fild
stc
pushf
in
cwde
ss
repz
scas
and
xchg
jmp
es
push
dec
push
add
in
fist
xchg
or
adc
or
push
clc
push
push
aaa
or
push
lahf
in
int3
mov
cmp
dec
fwait
or
pushf
mov
je
push
jnp
jns
pop
sub
sbb
js
xchg
ds
mov
scas
shl
sub
sbb
or
dec
cmp
add
leave
scas
mov
cmps
cdq
jo
sti
popf
sub
adc
test
mov
loop
ror
(bad)
arpl
neg
push
mov
xor
xor
aaa
call
xor
scas
rol
xchg
cs
pop
sbb
popa
ret
pop
movs
pop
pop
aaa
cmc
test
add
cmps
and
push
inc
fsub
fs
sub
sbb
mov
cmp
xchg
jne
inc
fidivr
add
and
ret
int3
lds
and
loopne
jne
dec
inc
pop
aad
ins
add
int3
or
test
xchg
bound
ds
or
cld
daa
jbe
mov
xor
and
adc
cs
out
dec
adc
pop
dec
lds
push
mov
pop
fs
pop
popa
xchg
jge
stc
stos
jge
dec
frstor
adc
popf
cs
jae
and
nop
int3
stc
add
inc
out
inc
xchg
(bad)
sahf
xlat
ss
rol
cmc
and
xor
add
xchg
mov
jmp
sub
and
ins
jl
sub
inc
movs
or
add
imul
sub
loopne
cmp
cmp
ins
push
movs
sahf
inc
imul
dec
jae
dec
push
bound
scas
(bad)
jp
jbe
cmps
adc
sub
int
pop
add
xchg
add
aad
faddp
dec
and
mov
ins
icebp
pop
in
or
mov
cdq
lods
mov
cmps
loope
push
jnp
jmp
sbb
icebp
(bad)
push
mov
cmp
push
add
or
scas
clc
fcomp
fimul
sbb
pop
stos
and
mov
add
push
aas
ins
jb
test
jmp
dec
cmp
rcr
shl
mov
dec
iret
jle
or
in
mov
mov
pushf
and
imul
imul
jl
inc
sbb
arpl
adc
cmp
mov
cmp
mov
sub
call
push
outs
idiv
gs
sub
outs
popf
jae
cmps
sti
adc
pop
frstor
jae
out
or
push
mov
xchg
jmp
lahf
mov
call
popf
pop
pop
rcr
adc
jb
pop
mov
out
(bad)
retf
add
pop
add
dec
movs
sahf
mov
or
ret
mov
call
out
mov
sub
push
retf
sub
pop
adc
sub
push
jmp
stc
das
int
cmps
push
je
(bad)
test
pop
fwait
sub
dec
jge
retf
inc
sbb
jbe
or
xor
xor
adc
(bad)
test
loope
or
jbe
sti
fwait
sbb
cdq
imul
push
pop
jmp
daa
and
jns
dec
test
push
xchg
in
add
into
ret
loop
or
xchg
cmp
jno
sbb
or
rol
mov
das
retf
push
call
mov
mov
jge
or
jb
xor
dec
lea
pushf
leave
out
imul
ins
pop
clc
or
sbb
cmc
mov
xchg
lgs
rcl
dec
mov
and
mov
mov
loopne
(bad)
xor
or
in
icebp
(bad)
(bad)
ror
or
pop
add
es
fwait
cmp
aam
aas
cwde
and
ins
fsubrp
loop
pop
cmps
enter
cdq
and
popf
cmp
into
push
(bad)
mov
push
lods
div
xor
inc
add
iret
icebp
sub
inc
pop
retf
mov
stc
loope
mov
push
call
das
lds
inc
dec
aam
out
add
jecxz
add
sub
jmp
sbb
and
cmp
sbb
stos
mov
or
mov
mov
add
daa
sbb
mov
pop
add
(bad)
and
inc
mov
fwait
mov
ss
and
xchg
inc
push
jmp
mov
js
jle
or
(bad)
adc
xlat
or
ins
xor
clc
idiv
mov
sbb
mov
inc
nop
jbe
add
xchg
adc
imul
push
ja
inc
aad
enter
push
xchg
sbb
adc
mov
pop
pop
add
mov
hlt
ss
jmp
cmp
mov
pop
cwde
sbb
mov
and
loop
aad
(bad)
fild
fldcw
pop
mov
and
push
in
seta
test
enter
pop
dec
test
pop
xchg
icebp
xchg
mov
fcmovne
bound
mov
in
ins
test
pop
out
call
or
out
xchg
leave
std
repnz
cs
pop
sbb
push
int
pop
fs
push
jl
sbb
mov
leave
and
jl
sbb
xor
mov
inc
stos
mov
out
push
aad
or
loop
imul
add
xor
dec
mov
mov
dec
stos
cdq
ins
call
and
call
iret
daa
stos
push
inc
add
mov
push
sub
or
int3
out
adc
xchg
and
push
and
sbb
or
and
pop
(bad)
retf
xchg
inc
and
jae
aad
scas
leave
and
idiv
xchg
rol
(bad)
icebp
loopne
ror
stos
sti
movs
push
and
inc
push
ins
push
loopne
popf
mov
jbe
out
pop
ret
fisttp
aaa
gs
cmps
or
cmp
repnz
mov
cmp
int3
div
lds
or
stos
mov
inc
out
fidivr
(bad)
cmp
sbb
add
jge
inc
push
mov
push
mov
adc
xlat
push
fcompp
mov
pop
popf
inc
cmp
push
fucomip
je
mov
sbb
outs
js
shl
clc
mov
in
(bad)
push
pusha
xor
inc
(bad)
(bad)
clc
xor
mov
xchg
inc
xchg
xchg
inc
outs
lea
xor
aam
pop
xchg
test
mov
sbb
pop
ret
push
enter
cs
jnp
out
adc
jle
mov
fwait
jge
cwde
jle
call
cmp
scas
call
rol
arpl
dec
stos
sbb
xor
pop
gs
or
mov
dec
dec
push
or
adc
or
sbb
or
adc
jo
jns
cmp
or
adc
retf
shr
mov
push
mov
mov
sub
ja
clc
push
xor
pop
and
push
repz
inc
jg
cld
adc
pop
mul
sbb
lods
arpl
stos
push
neg
sahf
mov
loope
cmp
mov
std
mov
call
mov
sbb
jnp
icebp
xor
inc
jmp
inc
int
mov
add
pop
adc
shl
outs
daa
(bad)
(bad)
icebp
fidivr
and
mov
xor
fist
jge
pushw
movs
rol
mov
mov
fistp
sub
fnsave
adc
(bad)
push
les
or
inc
pop
ins
cli
dec
cwde
inc
cmc
in
push
inc
and
fcmovnb
adc
or
js
movs
jge
cmp
addr16
(bad)
dec
rcr
xor
outs
sub
jl
xchg
pop
xchg
dec
mov
xor
sti
push
fmulp
xchg
jne
jp
xchg
icebp
pusha
xchg
add
repnz
push
sbb
sar
or
mov
push
jne
cmp
xchg
jle
mov
outs
sub
cmp
adc
call
scas
or
cmp
jmp
in
xor
xchg
cmc
jecxz
call
jmp
inc
js
jmp
icebp
or
jae
or
inc
int3
retf
jmp
sub
test
cmp
nop
xchg
and
inc
jae
repnz
addr16
mov
inc
call
lds
test
rcl
loope
dec
fidivr
pop
pxor
mov
mov
xlat
mov
or
ss
add
jp
jno
pop
mov
shr
xor
arpl
xchg
movs
retf
jg
ins
sub
sub
(bad)
outs
pop
push
cld
out
aad
aam
jno
in
frstor
lods
imul
sub
imul
ins
mov
jno
mov
mov
jmp
mov
mov
gs
add
cmp
mov
data16
repz
repz
or
fcmovnbe
(bad)
iret
mov
aad
pop
cmp
(bad)
sub
jmp
iret
loop
sub
imul
retf
dec
(bad)
jg
rcl
rcr
xchg
inc
ss
dec
test
lock
test
adc
arpl
shl
dec
out
add
add
(bad)
mov
por
pop
xchg
mov
nop
fadd
inc
aaa
sub
int
push
inc
adc
mov
cli
jns
lock
nop
mov
inc
clc
inc
out
cld
cmp
nop
push
imul
xlat
ret
outs
inc
mov
retf
jb
jg
sbb
cmp
cmp
pop
movs
aas
add
mov
cmp
push
dec
push
lods
shl
out
add
sbb
push
and
xchg
fldcw
lds
bnd
inc
xor
(bad)
out
and
out
sub
scas
xchg
call
or
jecxz
and
and
(bad)
jecxz
ja
bound
aaa
pop
sbb
test
cli
movs
push
aas
leave
dec
popf
mov
fdiv
data16
push
(bad)
mov
push
jg
and
mov
ss
imul
ror
cmps
gs
sti
scas
hlt
mul
ins
das
pop
retf
pushf
push
inc
imul
or
repz
pop
in
mov
es
mov
dec
sub
mov
ss
aaa
inc
push
jle
ret
pop
inc
in
mov
jmp
or
out
mov
dec
lock
xchg
sbb
sub
mov
xor
inc
pop
jbe
xor
cli
sahf
xor
dec
mov
cmp
mov
aas
das
add
push
inc
xor
das
cdq
xor
loop
mov
fs
pop
xlat
movs
mov
push
inc
jp
add
(bad)
mov
movs
das
push
sbb
mov
stos
fsubrp
repz
mov
cmp
(bad)
xchg
enter
pop
outs
xchg
pop
not
add
xlat
leave
mov
mov
icebp
mov
(bad)
adc
data16
mov
push
int
pop
adc
pop
push
imul
arpl
pop
pop
sub
mov
or
sub
jle
sbb
ja
push
add
mov
stos
divps
fwait
outs
push
lahf
xor
cmp
into
in
aaa
or
in
or
shr
loop
add
inc
pop
mov
in
sbb
das
(bad)
sub
rol
or
jl
xchg
popf
ins
inc
mov
aaa
movs
aad
dec
jb
fldenv
or
sbb
ss
xor
xchg
cld
pop
fld
scas
repnz
push
pusha
and
inc
out
out
and
xchg
and
outs
fwait
mov
shl
mov
aas
repnz
dec
call
out
call
push
adc
mov
cmp
pop
add
cli
into
push
mov
mov
or
imul
fisttp
jl
nop
cmc
cmp
inc
push
lahf
(bad)
pop
ds
push
mov
and
scas
push
or
xchg
mov
fadd
mov
int
popf
push
inc
push
jns
je
jg
aas
jnp
dec
jbe
std
out
aas
add
cld
adc
stc
ins
leave
adc
int3
ja
mov
sbb
lea
aam
adc
test
mov
adc
mov
shl
or
inc
cld
jb
adc
fiadd
jmp
shr
pop
call
xchg
cdq
dec
pop
test
inc
sbb
repnz
or
and
push
daa
push
add
add
push
ins
xor
cmp
pop
pop
push
mov
es
sub
mov
or
pop
mov
lods
mov
leave
out
lock
sub
sub
sbb
mulps
lods
pop
loopne
xchg
std
mov
test
push
cmp
sbb
push
add
popf
scas
jmp
push
in
mov
imul
in
cmc
xchg
addr16
rol
movs
and
data16
inc
int3
and
loop
push
cmp
cmp
test
push
imul
jl
(bad)
xor
lods
adc
enterw
sub
dec
lods
inc
aam
test
push
dec
je
fbstp
mov
retf
shl
stos
jo
sbb
mov
sti
shl
movs
jo
inc
inc
sbb
or
(bad)
pop
inc
enter
push
(bad)
or
outs
aaa
addr16
cmp
mov
inc
add
mov
outs
or
dec
std
ds
retf
jl
mov
mov
out
mov
mov
es
push
add
xor
lds
or
(bad)
out
mov
push
cmc
mov
push
mov
fwait
repz
in
push
out
push
rol
pusha
jb
pop
jl
pop
adc
dec
xchg
cmp
or
xchg
or
sar
add
jmp
jmp
dec
xchg
jae
push
cmp
sub
xor
mov
retf
retf
imul
pop
xchg
fwait
push
repz
xor
adc
sbb
cwde
out
mov
(bad)
mov
or
pop
into
mov
arpl
mov
movs
pop
jl
and
mov
lea
mov
push
jo
ds
jns
addr16
outs
push
enter
push
inc
repz
nop
sbb
add
sbb
adc
cmps
jnp
int
iret
data16
aad
ror
cmp
cli
or
pop
js
lods
mov
hlt
arpl
jo
adc
shl
mov
dec
adc
in
adc
ds
push
imul
inc
jbe
pop
add
push
aaa
leave
mov
sar
(bad)
dec
xor
adc
lods
cwde
mov
mov
sub
fisttp
std
push
fwait
or
scas
fsubr
xchg
inc
xchg
stos
fnstcw
mov
or
data16
and
xor
and
test
dec
icebp
mov
loop
xchg
push
add
mov
sub
in
aaa
scas
mov
(bad)
fld
(bad)
mov
jecxz
sub
cmps
add
pop
inc
cmp
cmp
out
cmp
pop
int
es
jmp
mov
add
mov
repnz
mov
(bad)
inc
push
aaa
int
and
arpl
mov
inc
cmp
mov
push
loop
(bad)
idiv
jl
iret
stc
xchg
xchg
rcl
jmp
cmp
les
(bad)
push
fwait
inc
add
mov
ins
ret
retf
and
rol
inc
push
shl
sub
fs
mov
inc
jb
jp
pusha
call
pop
stos
cmp
mov
sar
cmp
les
stc
in
std
outs
mov
repnz
dec
fld
(bad)
fld
fs
sub
mov
ins
mov
mov
sbb
adc
pop
mov
(bad)
mul
test
jp
cs
popf
mov
iret
xor
jb
inc
push
add
jecxz
jb
cmp
mov
push
sub
jg
push
sub
cld
and
shl
xor
inc
retf
pop
add
mov
(bad)
adc
mov
or
pop
test
pop
pop
or
mov
repz
sub
xchg
mov
jns
loope
das
inc
sbb
cmp
out
xor
out
pusha
mov
pop
popf
cmp
xchg
push
pop
cmp
mov
jae
bound
sub
adc
xor
gs
cmps
retf
fdivr
loopne
cmp
cmc
ss
jns
pop
cmp
loop
es
out
call
mov
das
call
imul
cmp
sar
test
aaa
jle
and
jno
mov
add
inc
cdq
pop
push
jbe
xchg
add
fld
or
pop
into
inc
stos
and
out
pop
cmp
(bad)
inc
ficomp
mov
scas
pop
adc
mov
mov
test
add
jnp
xor
push
ds
push
inc
mov
stos
imul
dec
lahf
or
push
rcl
inc
jle
jae
jnp
push
in
fsub
inc
fwait
xor
mov
sbb
ja
mov
test
mov
retf
and
push
pusha
sub
cld
inc
inc
dec
mov
xchg
and
xchg
push
pop
sti
pusha
imul
pop
lods
gs
int
adc
scas
push
je
xor
pop
in
inc
pop
jo
je
loopne
arpl
cmp
mov
dec
rcl
cmp
(bad)
xor
loopne
xchg
sbb
or
int3
push
mov
ins
icebp
adc
daa
push
pushf
add
add
sub
adc
sar
jmp
inc
cmps
xchg
adc
(bad)
xchg
das
mov
cmps
cmps
pop
int
or
shr
pushf
fbld
jns
cmp
pop
jecxz
xor
test
mov
mov
nop
(bad)
arpl
fs
popa
es
call
sub
pop
inc
pop
test
sub
pop
aam
adc
gs
xchg
ret
xor
pop
retf
lods
or
fldenv
inc
js
dec
mov
jmp
mov
(bad)
leave
lds
imul
add
les
out
mov
mov
push
inc
lock
ret
pop
in
dec
jecxz
pop
inc
xor
xchg
sub
fwait
push
ds
stos
repnz
and
push
mov
imul
out
push
mov
xchg
jne
test
jge
mov
or
adc
jmp
jo
jb
pop
call
inc
and
(bad)
mov
rcr
mov
in
push
and
(bad)
jecxz
mov
adc
or
mov
mov
sahf
or
cmp
inc
mov
fcmovbe
sbb
xor
pushf
je
push
outs
aam
jmp
pop
push
or
sbb
mov
lods
sub
iret
std
add
dec
lods
sub
enter
movs
xchg
ficomp
mov
mov
jo
cmps
xor
pop
outs
lock
cdq
sbb
pop
fiadd
cdq
inc
cwde
inc
or
popf
mov
jle
cmp
call
test
lds
sub
mov
shl
mov
cmps
(bad)
xor
(bad)
jnp
mov
dec
test
in
mov
mov
cli
out
jge
inc
lods
mov
call
sbb
fcom
fdivp
sbb
lock
cmp
adc
and
aas
scas
inc
push
xchg
mov
pop
stos
jmp
cmp
push
mov
(bad)
sar
dec
int
movs
mov
(bad)
aaa
in
ret
rcr
inc
in
(bad)
sbb
mov
fcmovu
mov
into
out
adc
push
loopne
pop
mov
call
dec
scas
pop
pop
cmp
or
dec
lods
out
mov
rcl
pop
sbb
xchg
js
pop
outs
mov
out
mov
test
jge
fnsave
add
jo
adc
jo
std
ret
push
sub
mov
xor
out
ins
jecxz
rol
test
retf
inc
cmps
cmp
mov
dec
pop
mov
icebp
jg
loope
ja
(bad)
pop
aas
icebp
sub
push
mov
fsub
shl
pop
dec
iret
popa
popf
repz
mov
aad
mov
xchg
mov
sub
std
mov
cmp
loope
(bad)
jecxz
push
cs
retf
jg
cwde
pushf
into
mov
push
fs
cmp
ss
hlt
les
mov
shl
cld
mov
mov
mov
cli
sar
fistp
gs
xchg
dec
xchg
inc
lahf
sahf
arpl
xlat
sub
and
leave
lods
scas
mov
mov
ficom
iret
jb
popfw
cli
cli
dec
push
push
scas
loopne
ins
sbb
lods
shl
popf
out
and
aam
pop
jbe
imul
pusha
adc
pop
ins
xor
adc
cmps
test
pop
div
lea
sub
mov
sahf
and
sbb
imul
mov
jbe
lds
fwait
xor
mov
out
adc
or
or
mov
inc
pop
xchg
loope
dec
aam
in
ficomp
xchg
jne
mov
cmp
fist
pop
or
js
lods
je
sbb
or
xchg
or
push
loope
fistp
fsubr
cs
add
(bad)
fdiv
sub
add
daa
cmps
scas
repz
dec
(bad)
aam
xor
outs
mov
call
sbb
test
xchg
push
adc
ins
add
and
imul
repz
mov
retf
lods
pusha
xlat
or
add
or
jns
movs
idiv
ret
mov
sbb
sub
in
(bad)
dec
std
pop
fistp
mov
loope
call
das
js
std
dec
xor
aas
gs
das
mul
mov
lea
cld
fsub
mov
xor
xor
mov
test
sbb
mov
inc
arpl
loope
shl
mov
xchg
fcom
mov
xchg
or
fisub
in
(bad)
out
add
inc
ret
in
add
sbb
dec
aam
xchg
(bad)
mov
loope
cdq
in
(bad)
push
dec
jo
in
jno
sbb
cwde
xor
pop
imul
arpl
das
cli
sbb
(bad)
or
mov
sbb
jecxz
data16
mov
retf
add
xor
jl
loop
hlt
in
mov
and
rcr
jmp
mov
clc
or
(bad)
adc
and
mov
pop
add
or
sub
or
cmp
fs
cmp
sbb
push
jno
rcr
pushf
mov
jnp
dec
mov
addr16
inc
pop
and
(bad)
ficomp
cld
push
sbb
rol
icebp
ja
rol
test
cmp
mov
pop
sub
ins
mov
pop
ds
les
mov
nop
inc
daa
inc
mov
cmp
dec
sub
or
mov
mov
inc
push
dec
cmp
mov
xor
retf
icebp
shl
mov
hlt
pop
xor
sahf
dec
ret
push
jae
out
lods
outs
dec
es
mov
mov
jno
sbb
xor
lods
dec
mov
adc
jo
mov
push
int3
adc
lock
xor
in
rcl
lods
aad
mov
cmp
sub
(bad)
push
pop
cmp
xor
in
mov
stc
movs
add
cmp
or
xor
mov
mov
popa
ja
adc
into
sub
jp
sahf
dec
cmp
out
nop
call
pusha
into
je
jle
and
cmp
les
xchg
cld
(bad)
pusha
and
mov
mov
es
cmp
enter
inc
dec
(bad)
add
adc
adc
stos
jo
jmp
fbstp
aaa
(bad)
pushf
addr16
push
fld
fucomip
pop
cmp
into
inc
arpl
mov
js
rol
sar
adc
push
mov
es
ins
add
lea
mov
jbe
push
mov
push
loope
aad
mov
test
icebp
mov
cmps
scas
test
cmps
jmp
push
lds
and
push
pop
or
dec
loop
popf
mov
gs
mov
mov
jmp
xchg
jb
mov
push
adc
mov
imul
cmp
dec
add
jmp
into
pop
pop
movs
pop
jl
aas
cs
sub
ins
cli
push
shr
scas
mov
xchg
or
out
pop
arpl
and
inc
mov
daa
pop
mov
hlt
shr
jbe
sbb
arpl
out
fs
bswap
dec
sbb
mov
loop
pushf
aad
rcr
movs
ficomp
dec
sub
lods
mov
add
fs
and
iret
call
xor
pop
out
mov
mov
or
mov
ja
sbb
mov
dec
mov
adc
jne
ins
pop
xor
cld
xor
jno
jmp
jg
sub
jmp
push
aam
out
jno
dec
ret
sbb
cmps
fisttp
jp
dec
mov
mov
push
xchg
cmp
(bad)
fisubr
pop
and
mov
jecxz
ja
mov
ja
loop
jp
xor
cmp
sub
and
mov
ficomp
cmovbe
test
cs
dec
sbb
cmp
sub
and
stc
push
out
fwait
sub
outs
div
sub
inc
lahf
in
sbb
rcr
cmp
lea
push
jg
mov
fsubr
mov
sbb
int3
or
sub
test
in
repz
push
shr
jns
mov
fldcw
(bad)
pop
jnp
jbe
jp
sbb
lods
and
cmp
jno
sub
cmps
loopne
scas
jae
push
and
dec
(bad)
aaa
ins
mov
mov
cmp
lea
xor
cmc
or
inc
std
or
dec
scas
les
jb
fwait
sti
adc
aas
jge
aam
jo
push
jbe
ja
push
xchg
mov
outs
mov
mov
cdq
inc
fbld
add
int3
inc
scas
stc
add
into
(bad)
push
hlt
int
cwde
xor
or
xchg
add
push
dec
in
cdq
cmps
repz
sbb
mov
push
inc
stc
call
cli
dec
mov
mov
movs
cmp
jno
jae
pop
stos
shl
sub
aad
dec
xchg
hlt
mov
leave
ficom
push
repnz
or
lods
push
das
ins
in
sbb
scas
mov
pop
lea
scas
sti
ret
cmp
js
repz
mov
stos
(bad)
mov
and
movs
sub
push
add
pusha
aam
xor
ror
inc
add
mov
pop
push
test
xor
mul
mov
adc
out
sub
dec
data16
add
xchg
dec
out
pop
push
pop
pop
nop
push
jo
xor
mov
jle
xchg
repnz
cli
push
jmp
iret
mov
sbb
and
pushf
fs
rol
aaa
dec
mov
mov
sar
sub
enter
jo
pop
jbe
xchg
cmp
jns
and
xchg
data16
cmps
jae
scas
rcl
xchg
mov
mov
pop
movs
nop
or
dec
inc
mov
jge
iret
sbb
adc
adc
imul
sub
std
(bad)
jne
xlat
pop
stos
sub
mov
movs
add
test
jbe
jp
cmp
sub
(bad)
out
and
push
add
fimul
in
pop
pushf
(bad)
adc
clc
mov
or
daa
dec
loop
push
aaa
iret
xchg
xor
jns
shr
je
leave
adc
es
addr16
jge
or
or
xchg
sti
lock
xor
or
in
sbb
pushf
mov
sbb
mov
inc
pushf
sbb
fst
outs
dec
or
ins
sahf
push
std
enter
fist
and
rcr
fwait
sub
jne
in
sbb
sbb
fdiv
jns
lea
repz
imul
jle
xchg
mov
xchg
fild
xchg
ds
push
fdiv
fistp
cmc
mov
js
outs
rol
out
xchg
and
dec
lahf
mov
sub
jmp
jmp
out
adc
sbb
dec
sar
test
icebp
cmps
mov
or
lahf
enter
(bad)
std
arpl
cmp
jecxz
push
rol
sub
push
inc
xor
or
sti
cmp
adc
pop
sbb
push
jp
push
dec
loop
(bad)
pop
sar
stos
dec
clc
mov
adc
fst
fimul
jge
pushf
lock
(bad)
movs
add
pop
mov
das
mov
add
add
lahf
cmp
cdq
jbe
and
out
adc
dec
push
mov
push
xor
das
cdq
jl
pusha
or
test
(bad)
mov
daa
pop
push
and
fstp
or
shl
lds
or
in
xchg
lgs
add
and
push
mov
sub
lea
xchg
jb
mov
ins
int3
popa
sub
in
mov
ins
xchg
xor
inc
dec
add
idiv
bound
sti
jne
test
pop
cmps
scas
pop
test
movs
adc
jae
or
les
js
and
loop
mov
and
out
(bad)
outs
sbb
stos
cwde
cld
jnp
push
(bad)
or
(bad)
cmp
loopne
xor
or
cmp
cmp
sbb
cli
mov
push
dec
cmc
add
push
push
in
imul
in
ss
add
dec
addr16
in
inc
test
cmp
cli
test
sbb
inc
xchg
nop
pop
loopne
add
scas
mov
movs
lock
jne
xchg
cwde
add
fisttp
fndisi(8087
mov
mov
or
dec
leave
fisttp
les
call
and
xchg
dec
das
repz
(bad)
mov
pop
mov
adc
imul
retf
mov
(bad)
xchg
jno
sbb
add
jg
mov
dec
das
js
mov
fnstsw
cmp
add
dec
mov
push
mov
add
add
mov
dec
arpl
jmp
outs
gs
jmp
dec
in
mov
pop
aad
in
jmp
(bad)
ins
pop
inc
jnp
int3
out
sbb
sub
push
xor
sub
js
or
xor
out
retf
inc
cmp
jne
jno
es
dec
lea
js
pop
jno
xor
lock
push
(bad)
popa
(bad)
je
loope
jb
and
cmp
fld
loope
sub
iret
sub
sbb
xchg
out
pop
add
cmp
sbb
push
ss
cmp
gs
(bad)
mov
div
inc
xchg
lock
add
enter
push
(bad)
sub
ins
push
int3
cli
mov
adc
pop
inc
repz
pop
cs
add
or
ins
and
aaa
add
jae
cmp
loope
inc
sar
pop
sub
popa
loop
movzx
cmp
jge
in
sub
jge
xchg
mov
aad
cmp
rcl
ror
outs
xchg
mov
dec
sub
lea
jae
in
gs
push
repz
jge
sti
adc
imul
dec
xor
test
call
fisttp
or
or
mov
cmp
and
sbb
sbb
or
hlt
push
dec
test
(bad)
imul
adc
mov
inc
pop
das
xor
push
sahf
(bad)
push
inc
mov
aad
out
xchg
loopne
dec
mov
pop
std
inc
and
xchg
cmp
mov
cwde
ret
jbe
fbld
inc
stc
ds
addr16
int
jg
pop
out
repnz
test
add
mov
inc
cs
inc
scas
xor
inc
adc
jg
inc
push
fild
and
xchg
inc
push
ror
mov
mov
pop
adc
bnd
out
or
retf
ss
jnp
mov
mov
iret
int3
sbb
ror
push
mov
pop
outs
hlt
sub
inc
push
loopne
imul
lods
ror
xchg
ror
rcl
xlat
jno
pop
dec
prefetch
and
test
pop
adc
mov
ret
jae
cmp
icebp
mov
push
popf
fs
jge
fdiv
in
push
cwde
mov
push
into
mov
sbb
adc
sub
cs
adc
push
xor
stos
xchg
call
sahf
out
je
test
sub
movs
xchg
add
ret
test
inc
inc
and
push
mov
or
fistp
shl
jbe
pop
js
sub
jbe
outs
outs
xchg
mov
mov
pusha
stc
loopne
and
and
leave
jg
push
out
and
leave
adc
inc
pop
das
in
jmp
nop
xor
and
in
xor
sub
dec
inc
adc
stc
(bad)
fdiv
or
ret
mov
es
dec
mov
cmp
test
lods
std
lods
xchg
fdivp
mov
mov
ja
sub
xor
les
lock
cmp
inc
icebp
int
push
mov
cmc
xchg
mov
sub
shr
mov
push
ret
nop
daa
jno
pop
ss
or
adc
lods
lea
bound
shr
dec
push
dec
pop
sub
fld
fadd
adc
mov
jno
mov
cs
inc
sbb
shr
sbb
pop
mov
lds
in
pop
je
add
or
mov
leave
jg
dec
mov
in
clc
cld
stos
in
shr
and
retf
loopne
sar
push
push
int
les
fbstp
fnstcw
inc
adc
out
cdq
xor
mov
fdivr
sbb
inc
out
push
xchg
mov
clc
int3
cmp
mov
arpl
mov
xchg
out
inc
jnp
cmp
shl
or
pop
push
or
adc
jbe
jo
loop
dec
jno
mov
push
pop
clc
and
adc
inc
sub
xlat
outs
fwait
stc
iret
pop
(bad)
xchg
rcl
mov
daa
rol
and
mov
cmp
in
dec
mul
push
hlt
sbb
xchg
outs
call
in
cdq
add
psubsw
int3
inc
jp
mov
sar
inc
mov
xchg
dec
mov
or
es
jp
cmp
xor
jo
or
cmp
and
push
jl
push
mov
lahf
sahf
test
mov
stc
int
lods
fwait
movs
call
dec
lods
test
int3
pusha
push
movs
mov
nop
mov
lds
test
scas
frndint
aas
adc
leave
pop
jp
cmp
mov
shr
mov
in
bound
or
stos
das
add
sahf
jns
push
pop
sbb
pusha
daa
inc
or
or
sub
clc
stc
pop
and
movs
(bad)
dec
xlat
xor
and
fstp
pop
and
sbb
and
cmps
and
call
jns
repz
data16
movs
sbb
mov
mov
sub
test
fisttp
xchg
pop
sub
sbb
push
leave
popa
sbb
data16
or
mov
fs
int
loopne
push
ins
jge
xor
jmp
imul
dec
not
imul
mov
dec
and
push
inc
adc
ins
dec
or
fidivr
in
jg
inc
out
mov
hlt
mov
mov
gs
dec
mov
in
sbb
mov
push
aam
push
out
inc
stc
gs
pop
mov
ror
inc
loopne
ins
add
lea
sbb
jo
push
xor
movs
add
xchg
mov
call
sub
sbb
in
arpl
or
cmc
xor
cld
ds
mov
ds
in
mov
jo
scas
fsub
push
pop
push
out
mov
sbb
ins
(bad)
lods
inc
sub
ins
sub
mov
test
clc
mov
ret
daa
loope
push
fld
push
jne
out
mov
fild
mov
mov
repnz
inc
ror
jo
lock
and
add
add
clc
push
scas
xchg
popf
test
inc
arpl
inc
jne
retf
(bad)
mov
mov
push
stos
loopne
cmp
inc
enter
sbb
mov
and
scas
dec
or
icebp
into
cmp
jbe
lods
pushf
mov
or
or
into
out
call
fxam
pushf
sub
xor
(bad)
adc
xchg
cmp
lods
jbe
cmp
sub
fist
ds
bound
test
aam
cwde
and
jmp
push
mov
inc
push
pop
(bad)
push
add
sub
fldenv
mov
sub
dec
push
xchg
add
or
(bad)
jmp
push
mov
sbb
cli
jae
jne
cdq
cmps
cli
mov
test
hlt
shl
mov
mov
(bad)
push
mov
sbb
pop
mov
jno
cmc
int
add
pushf
les
adc
jp
xor
jo
xchg
xchg
jns
push
inc
jno
inc
popf
sbb
ds
arpl
ss
js
xchg
mov
jnp
sti
ins
sti
icebp
sbb
and
ja
aas
sti
daa
imul
inc
pop
ret
jp
sar
dec
(bad)
iret
xchg
or
mov
xchg
in
dec
fs
pop
test
sbb
mov
mov
aad
adc
movs
addr16
dec
test
pushf
lods
mov
jne
(bad)
std
dec
ds
add
xor
pop
int
dec
pop
inc
fisubr
adc
and
xor
(bad)
dec
sub
stos
xor
add
fs
mov
adc
and
sbb
or
jecxz
mov
sar
push
arpl
add
scas
leave
jns
out
cdq
retf
dec
aad
pshufw
(bad)
fiadd
mov
mov
imul
inc
and
push
sti
inc
mov
popa
xchg
arpl
les
pop
rcl
ss
jge
fisubr
bound
or
fist
mov
movs
lock
and
xchg
xchg
jl
push
stc
xor
clc
pop
pop
push
sub
push
movs
or
mov
fsubr
rol
and
pop
cwde
or
mov
jecxz
movs
sbb
inc
ins
and
jmp
push
out
nop
call
sub
mov
push
out
outs
add
jbe
push
ret
adc
ret
mov
jg
jnp
cmps
mov
lods
in
sbb
sti
add
stos
push
xor
out
daa
loop
ror
or
jecxz
xchg
popa
dec
std
ja
jecxz
stc
adc
fsubr
pop
inc
movs
sbb
jp
xchg
and
stos
dec
xor
inc
sar
inc
jl
dec
or
loopne
retf
retf
fdiv
fadd
aad
rol
jge
sub
imul
aam
rcr
sbb
pop
jle
pushf
lock
cli
cmp
out
mov
sbb
xor
pop
xor
pop
dec
sbb
pushf
mov
mov
cmp
inc
(bad)
movs
mov
stos
or
add
rol
inc
cmp
jg
nop
test
dec
stc
fs
xchg
jle
jmp
lock
xor
push
dec
scas
dec
inc
xor
jno
xchg
jg
pop
jecxz
je
xor
bound
rcl
sbb
(bad)
add
sub
pop
popf
cmps
mov
std
cli
outs
(bad)
jne
call
push
arpl
xor
inc
and
je
sbb
jge
dec
ja
jge
repz
lods
leave
push
mov
inc
and
jne
add
cwde
mov
pop
call
sar
stos
lock
jmp
gs
jns
jno
cmp
adc
jne
mov
imul
rcr
fisub
int
stos
mov
xor
loope
and
sub
rcr
pop
xor
sbb
mov
cmp
push
retf
sub
jmp
xor
jg
jo
cmc
push
test
daa
fidiv
call
cdq
and
test
inc
push
jecxz
inc
xchg
in
dec
jp
(bad)
and
fdiv
mov
push
add
cdq
arpl
mov
mov
dec
pop
sbb
lods
xor
cmp
cmp
dec
jae
rcr
cmp
test
dec
(bad)
repnz
stos
xchg
mov
sbb
in
jmp
imul
adc
jg
arpl
mov
sub
aas
cmp
jno
cmp
int
push
enter
xor
dec
jmp
ret
out
arpl
in
rcl
adc
(bad)
sbb
xchg
int
xor
neg
inc
pop
xlat
pop
adc
je
xchg
pushf
iret
xor
pop
fsubr
mov
std
push
sub
imul
push
mov
mov
loop
gs
and
stos
sti
xchg
xor
iret
cdq
int
adc
mov
cmp
div
push
inc
xchg
lea
sub
fcmovne
(bad)
push
fstp
and
add
add
cmp
inc
jl
push
gs
in
out
mov
xchg
shr
push
and
xchg
pop
sub
push
out
cmps
popa
cmp
lods
(bad)
mov
mov
xchg
dec
sub
loop
std
call
stos
pop
enter
lea
or
popa
and
and
mov
imul
cmp
out
push
lock
inc
jo
popf
(bad)
or
add
pop
out
fs
pop
ds
int3
ds
into
dec
fldenv
test
push
lahf
mov
ja
cmps
fstp
sbb
sub
or
loopne
mov
pop
mov
xchg
jb
enter
lods
lods
add
lods
jle
dec
xchg
push
xor
sub
sbb
jmp
jno
and
loop
mov
cmc
push
cli
movs
lea
mov
frstor
ins
push
mov
push
inc
cwde
pop
inc
mov
xchg
sar
fisubr
xor
sbb
lds
fistp
das
mov
arpl
movs
mov
adc
test
cmp
or
loop
shl
pop
fiadd
cmc
movs
popf
inc
mov
bound
mov
inc
fstp
or
xchg
sbb
(bad)
movs
loope
pop
pop
loopne
or
push
pop
push
sbb
ins
inc
pop
xlat
cmovge
push
jp
shl
push
mov
(bad)
sub
(bad)
loop
scas
in
cmp
lods
icebp
cmp
push
push
test
cmp
ret
pop
jle
retf
push
pop
call
imul
push
test
sbb
cmc
nop
adc
ss
or
dec
mov
jp
jmp
out
ret
es
sbb
pushf
and
stc
cld
bnd
retf
jnp
mov
fwait
call
xchg
push
pop
daa
aaa
mov
stos
adc
cwde
clc
fistp
inc
jnp
cmp
cmp
dec
je
or
std
out
pop
dec
xlat
inc
movs
mov
fdivr
jns
push
xchg
aaa
push
xor
inc
adc
movs
mov
push
call
adc
(bad)
cld
ret
or
cmp
imul
pop
movs
inc
xchg
cwde
or
mov
jb
movs
mov
pop
jl
or
imul
mov
sub
ror
stos
dec
je
add
rol
aam
jo
jge
sti
iret
dec
fdiv
dec
iret
mov
enter
push
jecxz
jne
and
xchg
adc
(bad)
sbb
sti
movs
call
into
cmps
ds
sbb
test
into
mov
push
stc
inc
dec
add
mov
sub
sbb
aas
les
add
hlt
jp
mov
mul
adc
xchg
xlat
or
xor
addr16
(bad)
leave
mov
xchg
not
fisubr
inc
gs
xchg
push
and
test
or
fcom
adc
(bad)
outs
movs
mov
push
push
fs
pop
sbb
movs
enter
xlat
imul
xlat
aaa
cdq
xchg
mov
dec
popa
retf
inc
or
inc
jbe
js
cmps
sub
aas
adc
scas
sub
or
and
retf
mov
(bad)
xchg
adc
jb
xchg
pusha
mov
std
sar
pop
dec
cmp
scas
mov
dec
(bad)
gs
and
enter
cmc
cmp
and
sahf
mov
stos
int
jo
mov
xchg
rcr
mov
jmp
mov
mov
sbb
int
stc
mov
sub
mov
jo
add
fcomp
xor
pop
or
sub
and
dec
pop
sti
push
or
lahf
mov
jns
mov
jge
(bad)
xadd
mov
rol
sbb
push
stc
mov
ins
mov
ror
cmp
lds
lock
(bad)
mov
or
std
mov
fisubr
push
jg
mov
xchg
jge
xor
ror
pop
jnp
mov
cs
dec
xchg
xlat
cmp
adc
xor
jb
xchg
fimul
or
adc
add
dec
jns
into
dec
push
push
outs
repnz
xchg
dec
mov
retf
fstp
mov
fs
call
ins
mov
xor
xlat
ds
xchg
mov
popf
sub
sub
ins
fwait
jle
mov
test
sar
idiv
add
clc
cmp
push
mov
cmps
jbe
inc
push
scas
cmp
sub
pop
out
ss
cmp
shl
or
inc
inc
sbb
jb
push
add
js
mov
data16
mov
sub
shl
test
movs
push
test
shr
mov
xor
dec
jp
push
xor
lock
lods
push
cld
xor
clc
ror
jne
int3
(bad)
das
xlat
push
sub
push
push
jb
stos
cs
jmp
in
ins
xlat
dec
xchg
and
mov
push
in
leave
into
icebp
inc
push
push
cwde
inc
imul
xor
add
or
xor
popf
leave
mov
jno
out
jmp
push
inc
sub
jne
jmp
or
arpl
mov
mov
repnz
not
xchg
xor
pushf
in
loopne
sbb
retf
pop
test
lea
gs
sub
pop
xchg
fs
je
xchg
mov
lahf
and
ss
jle
fstp
inc
imul
outs
lahf
icebp
ja
jae
xchg
cmp
frstor
int3
xchg
cmp
dec
clc
cmc
(bad)
jns
int3
mov
xchg
add
(bad)
jne
stc
adc
cmps
outs
jno
mov
ret
je
xchg
sbb
pop
ds
fs
mov
mov
adc
out
sbb
mov
jno
rcr
jb
cmps
inc
ins
mov
pop
les
fadd
dec
xor
stos
ret
xchg
lahf
rol
movs
stos
or
test
fld
outs
inc
push
push
inc
xchg
mov
xor
inc
xchg
xchg
inc
stos
xchg
out
sbb
sub
mov
in
fbld
pop
or
adc
jno
sub
push
cmps
pop
and
lds
fld
or
and
mov
add
jecxz
stc
xor
test
in
retf
lahf
call
inc
pop
jno
jno
ds
sub
mov
movs
push
imul
jns
sub
fidivr
push
in
ss
dec
jp
pop
or
test
inc
sub
push
adc
jecxz
inc
out
dec
es
xchg
cdq
add
sbb
cs
and
stos
test
pop
(bad)
hlt
fld
sti
or
das
or
cmps
stc
in
or
sub
out
mov
jne
ss
add
pushf
cwde
jecxz
shl
xor
inc
fs
pop
pop
ret
mov
sub
cmp
imul
mov
sub
mov
inc
pop
push
cmc
dec
lahf
sub
jmp
in
xor
iret
and
sub
mov
inc
(bad)
nop
out
dec
mov
(bad)
fisubr
mov
jge
(bad)
cmc
sbb
add
push
loope
fcom
test
loop
mov
mov
fsubr
push
and
adc
add
clc
jbe
test
jb
call
dec
inc
in
jno
aaa
pop
cs
cmp
outs
adc
fdiv
lods
ins
cmps
adc
add
fs
je
mov
dec
and
not
push
push
cmp
add
and
pop
shl
je
aas
push
xor
pop
push
sbb
ja
sbb
mov
ror
(bad)
lahf
ret
xor
fistp
jmp
packssdw
mov
bound
(bad)
jl
cld
rcr
xchg
shr
jp
ret
out
inc
inc
dec
cs
and
lds
jb
mov
repz
jmp
xor
or
(bad)
pop
push
aas
and
inc
leave
inc
cmc
sbb
sti
xchg
ja
jnp
adc
jmp
mov
in
stc
adc
or
inc
stos
mov
outs
mov
(bad)
and
mov
(bad)
xchg
test
xchg
xchg
mov
mov
xchg
int3
outs
retf
mov
lea
sar
in
mov
sbb
xchg
jnp
jnp
pop
movs
inc
xor
cmps
adc
nop
inc
push
push
inc
mov
cs
inc
and
jne
dec
in
sbb
sub
and
sub
repnz
sbb
push
jg
mov
mov
movs
or
stc
mov
pop
xor
jae
mov
xchg
mov
cdq
dec
push
jno
jmp
shr
in
inc
and
add
pop
dec
(bad)
out
mov
repnz
jg
xlat
rol
inc
mov
sbb
mov
jbe
fcomp
aaa
repz
xchg
sbb
pushf
mov
inc
in
pop
sub
cmp
mov
push
mov
fcmovu
xor
jnp
cmp
xchg
push
push
mov
mov
pushf
and
sbb
and
je
jae
mov
mov
ret
add
fld
inc
rcl
pop
test
sub
adc
retf
push
pop
mov
and
repnz
or
inc
scas
ret
inc
sub
jbe
xchg
jmp
inc
jg
mov
push
adc
sub
xchg
or
shl
(bad)
cld
jno
lods
jnp
fimul
div
inc
push
inc
or
retf
sub
or
repnz
call
sbb
push
mov
and
fist
cmps
sahf
in
fld
and
out
gs
push
lahf
push
fidivr
jmp
into
leave
out
cs
out
pop
bound
xchg
sbb
iret
xchg
nop
push
inc
lds
jl
dec
sub
dec
mov
and
push
iret
dec
fist
test
shr
inc
inc
in
and
lods
push
sar
mov
mov
fmul
pop
push
sub
push
ret
pop
adc
jmp
loopne
push
sahf
call
ins
test
dec
sti
inc
ror
inc
cmp
xchg
aam
xchg
ins
push
cld
outs
inc
repz
into
scas
mov
int
loop
xchg
mov
sahf
stc
sahf
push
cmc
addr16
push
(bad)
mov
mov
repz
and
retf
fild
dec
xchg
es
mov
pop
cmp
cmp
test
arpl
gs
hlt
(bad)
(bad)
adc
fist
popa
bound
cmps
ins
lahf
push
cmp
pop
enter
add
shl
or
jge
inc
add
dec
xor
add
sti
mov
mov
cmps
sub
cmp
or
jg
and
inc
inc
mov
clc
pop
repz
pop
and
push
scas
adc
(bad)
bound
das
sahf
jmp
fdivrp
inc
pop
mov
sbb
xchg
icebp
aas
sub
bound
daa
sub
pushf
test
stc
stos
and
mov
dec
jl
and
and
adc
in
pop
jbe
out
mov
scas
push
std
in
dec
mov
push
xchg
mov
jle
dec
mov
xor
lea
jmp
mov
add
mov
xor
iret
loop
push
nop
clc
mov
rol
test
inc
ja
test
outs
gs
push
ds
mov
jbe
cmp
xor
aaa
mov
out
leave
repz
cld
fwait
jae
mov
push
add
sahf
add
not
lods
or
cmps
dec
lds
pop
dec
pop
xchg
xor
into
shl
cdq
mov
fldcw
dec
cmp
dec
and
inc
push
imul
jns
and
shl
jno
les
add
dec
movs
lods
xor
dec
sbb
mov
daa
sub
out
sbb
daa
add
inc
sub
xchg
cmps
cwde
leave
jne
sbb
scas
int3
iret
movs
inc
shl
les
push
loopne
fst
push
xchg
xor
das
fstp
ins
mov
jg
pop
dec
or
addr16
jae
pop
pop
pop
xor
dec
adc
(bad)
xchg
xlat
sahf
or
shl
adc
fwait
jg
(bad)
int
ins
dec
dec
inc
scas
jmp
std
(bad)
imul
test
mov
mov
sbb
popa
rol
jae
jg
mov
popa
add
inc
sti
pop
fadd
sbb
adc
or
lea
jne
add
nop
sbb
mov
imul
mov
xor
(bad)
xor
fiadd
mov
cmp
faddp
inc
popa
cmp
cmps
jns
cwde
dec
inc
into
push
jle
mov
neg
xor
(bad)
test
leave
cli
sub
sub
pop
sub
inc
pop
mov
sub
or
repz
mov
fstp
mov
cmp
or
mov
mov
or
mov
lds
pop
ins
pop
inc
jge
in
jle
cmp
and
push
arpl
loopne
jns
cmp
out
dec
lds
fcomp
xor
sbb
dec
sbb
and
pop
add
or
add
mov
mov
(bad)
scas
and
popf
mov
dec
mov
dec
cmp
mov
xchg
jnp
stos
xor
aad
mov
cmp
(bad)
jp
push
xchg
(bad)
fmul
popf
mov
scas
xchg
cmp
adc
pusha
push
and
ffreep
jae
pop
fisub
shl
retf
fistp
push
fcomp
daa
ds
pop
mov
pusha
mov
sub
outs
or
sahf
repz
call
xchg
(bad)
retf
addr16
fwait
cwde
les
jge
dec
fisttp
xchg
enter
mov
and
pop
sbb
xor
ss
mov
pop
jecxz
stos
push
jno
or
mov
jle
sbb
out
imul
imul
adc
mov
pop
pusha
and
xor
into
mov
or
movs
jge
pop
icebp
leave
add
sbb
adc
and
popf
ja
cmps
loope
fisttp
retf
das
lahf
call
jnp
push
pushf
aas
sub
aaa
xor
lods
mov
inc
ret
xor
mov
jp
or
inc
xchg
(bad)
xchg
jmp
inc
lahf
jp
out
sbb
inc
and
jb
bound
stc
out
(bad)
idiv
enter
out
dec
mov
mov
dec
loope
pop
jbe
and
fnstsw
je
es
fadd
inc
dec
push
sub
push
stc
loopne
sbb
out
out
repnz
aad
pushf
xor
or
mov
lea
or
mov
mov
adc
or
cmp
cld
outs
push
sub
retf
or
cmps
pop
or
aas
aam
ret
shr
push
cdq
bnd
cmp
in
retf
jo
mov
or
push
push
stos
(bad)
dec
sbb
inc
push
or
int
or
mov
push
aas
fs
xchg
cmp
cli
ins
push
int
sti
js
xor
sti
mov
ret
and
hlt
test
ret
xchg
into
sbb
jl
cmp
rol
fs
push
ja
mov
test
dec
or
in
jmp
add
cmp
pop
sub
cld
cmp
mov
aam
and
adc
xchg
xor
add
cmp
aad
ss
inc
mov
mov
and
cdq
jge
(bad)
adc
and
leave
inc
(bad)
repnz
xor
push
adc
lock
dec
outs
ret
popa
je
mov
ins
je
outs
(bad)
add
das
xchg
and
dec
sbb
xor
mov
mov
fwait
mov
call
jp
neg
pushf
ins
mov
jne
pop
sbb
mov
(bad)
or
test
imul
sub
mov
movs
mov
mov
xchg
jecxz
mov
sub
push
pop
loopne
cli
movs
jo
sub
dec
pop
mov
mov
or
lea
loope
and
dec
cmp
and
clc
mov
jns
sub
xor
push
movs
cmp
aas
sbb
jne
and
mov
dec
(bad)
cmp
cmps
imul
fisubr
bound
jb
xchg
lods
sub
(bad)
and
movs
jns
test
mov
shl
mov
xchg
or
inc
pop
data16
out
(bad)
and
(bad)
jns
into
inc
or
mov
mov
add
or
int
sbb
dec
mov
dec
fdivr
mov
sbb
repz
jbe
lock
es
inc
and
out
pop
hlt
mov
dec
bound
or
dec
into
pop
pop
(bad)
mov
cmp
push
mov
pop
lock
and
and
popf
retf
and
dec
and
retf
xchg
cmp
add
jae
icebp
stc
pop
fimul
shl
ror
push
gs
dec
out
pop
or
gs
xor
xor
(bad)
cmp
xchg
add
call
idiv
aam
inc
push
out
in
mov
cmp
mov
cli
add
push
add
push
push
(bad)
mov
fcos
push
jl
xchg
data16
mov
xchg
mov
mov
fwait
xor
dec
xor
jns
inc
push
xchg
add
call
dec
mov
stc
lods
push
pop
ds
jg
and
jg
add
icebp
sub
push
sub
aas
sbb
mov
sbb
cmp
popf
jmp
(bad)
out
xchg
pop
lods
rcr
pop
repnz
hlt
pop
mov
(bad)
cli
pop
cld
add
mov
sbb
(bad)
es
jle
in
gs
jno
inc
cmp
push
in
in
mov
sub
pop
(bad)
push
jle
aad
xor
dec
sub
push
dec
ds
daa
fcomip
pusha
enter
shr
jp
mov
out
push
test
pop
adc
fsubr
out
bound
movs
nop
mov
xor
inc
sub
adc
pop
das
sbb
or
mul
out
jl
push
cmp
test
dec
dec
mov
iret
adc
movs
add
lahf
sbb
ins
in
add
and
je
push
out
in
repnz
pop
xchg
jno
cmps
push
data16
pusha
xchg
cmp
sar
enter
adc
push
inc
sbb
nop
repnz
ins
mov
aam
in
mov
out
push
(bad)
sub
sbb
push
in
sbb
sub
scas
pop
xor
sbb
mov
mov
cmp
sub
push
repz
les
xchg
loopne
cwde
jae
sbb
push
pop
rcr
retf
int3
stos
inc
mov
mov
cmc
mov
out
mov
ret
int3
jae
aas
(bad)
mov
sbb
dec
sbb
cwde
xor
loopne
sub
push
push
mov
fsub
loop
lods
dec
add
scas
lods
lock
pusha
cmp
(bad)
out
push
test
mov
cmp
dec
clc
push
adc
mov
xchg
add
sub
push
xor
sar
inc
xor
ins
add
dec
or
xchg
iret
xchg
repz
js
nop
repz
sub
jecxz
fwait
(bad)
and
push
sti
and
fldlg2
imul
jmp
jmp
pop
cmc
dec
and
push
fwait
ret
daa
(bad)
push
iret
or
cmps
int3
mov
imul
mov
in
push
fidiv
and
jnp
in
xchg
cmps
retf
add
jle
inc
jbe
pop
jb
jo
pop
pop
xchg
and
call
pop
inc
fldenv
xchg
bound
dec
jb
stos
xor
shl
fistp
hlt
and
into
and
pop
stc
dec
push
gs
outs
adc
mov
and
daa
out
cmp
dec
neg
das
in
pop
fiadd
(bad)
(bad)
fcomp
pop
hlt
and
push
xchg
adc
xor
ret
mov
popa
mov
sub
inc
popa
pop
lea
in
mov
inc
dec
lock
pop
repz
jns
mov
inc
cmp
sub
lds
pop
stos
pop
add
adc
cli
ret
popa
cmp
xor
xor
ret
push
sub
cdq
sahf
hlt
in
cwde
fist
mov
cmp
shr
inc
(bad)
aam
xor
dec
push
push
or
xor
xchg
inc
jge
mov
sub
push
movs
movs
xor
xor
xchg
jnp
adc
je
cmp
dec
sbb
loopne
add
cmps
gs
ins
int3
push
xchg
mov
dec
mov
mov
out
test
or
icebp
movs
cdq
xor
fstp
rol
pop
xchg
imul
loope
movs
and
clc
add
and
outs
xchg
out
cwde
pushf
(bad)
pop
scas
imul
(bad)
adc
fdiv
mov
repnz
inc
pop
fbstp
mov
imul
adc
jmp
pop
adc
mov
sub
jle
dec
cs
cmp
fwait
test
jbe
cmp
imul
(bad)
hlt
sbb
pop
mov
scas
push
push
in
fwait
cwde
cld
jmp
jmp
je
lds
inc
dec
sub
movs
fwait
xor
outs
push
push
inc
rcl
mov
ret
test
aas
cli
cmp
movs
add
dec
in
mov
sub
mov
jle
loopne
pop
or
fsub
lds
jmp
add
(bad)
fsubrp
xor
mov
xor
pop
nop
mov
or
dec
loopne
adc
movs
dec
sub
(bad)
dec
mov
pop
xchg
(bad)
out
sar
xchg
mov
sub
stos
mov
test
jecxz
pop
clc
test
call
xchg
shl
movs
xor
jno
pop
call
sar
call
xchg
ror
mov
xor
fcompp
(bad)
xchg
sub
mov
jae
add
jecxz
sub
xchg
leave
mov
add
fcomp
and
outs
cwde
and
xchg
add
lods
cmp
xor
dec
or
ja
cmp
inc
jle
pop
sbb
ins
mov
mov
clc
mov
push
shl
pushf
into
jne
mov
or
lea
mov
loopne
cli
rol
mov
xor
mov
or
lock
lock
mov
push
mov
jo
popf
adc
jecxz
mov
out
inc
ds
mov
mov
pop
mov
dec
scas
mov
inc
outs
inc
mov
jle
retf
cmp
mov
rcr
fsub
sub
jmp
xchg
fcomp
es
scas
aas
(bad)
xor
std
sbb
cmp
cmp
mov
ror
sbb
ss
cmp
lods
jg
pop
mov
inc
xchg
dec
das
dec
xor
movs
sub
cmp
pop
retf
mov
jmp
sbb
mov
movs
cmps
(bad)
xchg
pop
idiv
sbb
pop
push
and
popa
mov
add
test
ds
adc
imul
and
xchg
test
daa
xchg
adc
mov
call
(bad)
mov
push
bswap
div
cmp
std
ret
xchg
lods
jb
xor
das
loope
out
inc
and
push
dec
movs
loope
push
pop
add
jecxz
leave
mov
xchg
mov
rcl
xchg
int3
mov
sbb
and
cmp
xor
sub
gs
pushf
dec
push
sub
mov
mov
dec
in
in
mov
ins
mov
jmp
push
jecxz
adc
sbb
xchg
popa
adc
dec
inc
cmp
lock
sub
push
adc
fst
clc
sbb
ds
xor
ror
out
loop
movs
bound
ret
adc
mov
xchg
repz
loope
loop
mov
add
nop
adc
cmp
xor
inc
cdq
arpl
retf
mov
mov
icebp
mov
fmul
mov
dec
cmp
fsub
lahf
(bad)
pop
aaa
test
ror
xor
(bad)
shl
cmp
adc
dec
push
sub
adc
mov
xor
xchg
pop
cmps
dec
sbb
icebp
out
les
lods
scas
sub
in
cli
push
movs
cwde
cdq
cmps
mov
adc
enter
xchg
push
and
xchg
and
mov
cli
inc
jg
loop
pop
test
(bad)
sbb
xchg
rol
inc
into
movs
xchg
jns
dec
xchg
not
mov
daa
aad
lock
adc
cli
shr
sbb
(bad)
xchg
xor
sbb
mov
enter
dec
std
adc
add
inc
test
pop
fsubr
cli
cli
push
xor
adc
cmp
popf
repnz
call
xor
setnp
stc
hlt
pop
mov
jne
cli
in
ror
jns
scas
cmp
push
push
bound
sub
les
repnz
add
mov
and
data16
adc
inc
pop
ret
xchg
inc
xor
push
push
pop
xor
xor
lds
jecxz
push
push
jae
not
lea
add
call
mov
fcomip
pop
mov
inc
out
movs
pop
test
out
jb
and
push
paddq
lea
leave
push
mov
add
push
pop
ret
fld
pop
sub
and
mov
daa
(bad)
icebp
scas
mov
fdivr
mov
cmp
pop
push
pop
mov
mov
add
in
pop
popa
or
jo
pop
xor
xor
add
cmc
add
test
std
cmps
xchg
inc
lahf
xor
mov
cmp
jo
adc
mov
les
sub
cli
arpl
test
adc
and
std
push
xchg
xchg
pop
push
out
xchg
fprem
push
movs
jae
sbb
mov
cmc
(bad)
xor
icebp
xchg
(bad)
shl
jno
jo
push
sub
fcomp
add
mov
stos
xor
mov
sub
cld
xchg
ret
mov
or
jo
dec
ins
or
gs
add
pop
setb
sbb
imul
(bad)
imul
and
jns
mov
sbb
cmps
xor
adc
cmc
adc
push
std
packuswb
mov
and
mov
jnp
arpl
xchg
dec
shl
call
int
pusha
leave
ds
adc
jbe
push
stc
sti
or
sbb
in
push
push
xchg
mov
cmp
std
mov
pop
dec
mov
jae
sbb
fwait
and
dec
cmp
inc
neg
aam
cmp
sub
pop
cmps
mov
push
(bad)
ror
(bad)
dec
sub
add
pop
jns
xor
loopne
ror
and
and
movs
lods
ret
ins
clc
push
inc
cwde
adc
shl
xor
shr
sbb
jnp
or
xor
mov
jo
pop
xor
xlat
mov
and
sub
xchg
xchg
xchg
push
pop
test
xor
pop
mov
push
xor
sbb
scas
pop
mov
rcl
rol
adc
es
nop
iret
push
ds
push
fs
ret
or
aad
xchg
xchg
jbe
or
clc
jmp
mov
aam
call
into
adc
xchg
(bad)
mov
add
sub
mov
and
add
(bad)
adc
pop
ins
movs
mov
repz
xor
cld
cmp
push
sti
frstor
or
fwait
cli
(bad)
shr
ja
sti
push
dec
pusha
inc
(bad)
daa
mov
sbb
std
cmp
fdivr
jle
sbb
les
das
adc
into
in
or
and
xchg
inc
scas
mov
adc
or
in
jmp
dec
test
test
xchg
and
sub
mov
hlt
mov
mov
repnz
inc
push
cmp
adc
fwait
loop
sub
dec
je
retf
pop
cs
sbb
jnp
icebp
and
push
push
mov
xchg
fisttp
pop
mov
scas
out
sbb
adc
pop
mov
dec
lea
or
cmp
xchg
mov
clc
sbb
add
bnd
add
bound
mov
addr16
mov
ror
adc
sub
and
das
ret
jae
out
push
jnp
ja
fidivr
js
scas
cmp
xchg
out
xchg
jg
adc
jno
or
outs
stc
dec
mov
imul
pop
aam
mov
(bad)
aad
inc
inc
sbb
jne
sahf
jle
call
mov
and
and
xor
inc
adc
or
mov
xor
sbb
add
jp
imul
daa
xlat
ja
enter
jb
cmps
jp
mov
mov
rcl
pop
push
xchg
addr16
push
into
clc
aas
adc
mov
mov
xchg
fstp
(bad)
mov
or
sub
cmps
mov
dec
xchg
xchg
or
stc
jl
retf
dec
daa
mov
push
mov
mov
cmps
mov
xor
arpl
xor
(bad)
push
push
idiv
(bad)
in
dec
mov
repnz
ss
rol
push
ret
adc
lods
add
pop
nop
cld
das
(bad)
xlat
push
sub
adc
fisttp
mov
push
lea
(bad)
out
imul
jmp
dec
aam
fisttp
push
int
jne
push
push
movs
cmp
in
(bad)
adc
jmp
mov
pop
imul
xlat
imul
jnp
mov
dec
xchg
shl
rcl
push
or
adc
ja
ret
sti
push
aas
mov
fbstp
mov
pop
jecxz
(bad)
ins
hlt
xor
pop
imul
rcr
push
cdq
(bad)
scas
adc
xchg
jns
inc
(bad)
mov
outs
dec
adc
lods
pop
jmp
xchg
call
inc
fcomip
mov
or
mov
icebp
sbb
data16
inc
pop
push
mov
ficomp
mov
mov
add
int
movs
frstor
ja
loop
xchg
xchg
call
dec
push
mov
cmp
pop
add
test
xor
in
sub
sub
cwde
jp
inc
adc
cmp
mov
mov
shl
mov
aam
dec
in
sub
fidiv
mov
imul
xor
mov
leave
lock
add
ja
icebp
mov
popf
rol
adc
cmp
xor
push
inc
ret
cmp
jne
das
mov
or
push
pop
rcr
fs
pusha
bound
jmp
loop
data16
jp
in
push
push
pop
aad
and
repnz
push
ret
push
cmp
shr
cmp
bound
pop
inc
addr16
dec
les
in
scas
dec
sub
in
pop
dec
sub
mov
mov
fdivr
hlt
mov
xor
jb
out
pop
in
dec
ret
mov
or
inc
dec
popf
cmp
pop
rcr
outs
push
or
cmps
or
cdq
xchg
mov
sbb
outs
push
pusha
movs
adc
lea
mov
(bad)
leave
out
fwait
pusha
shr
dec
sub
cmp
mov
jmp
stos
mov
dec
or
xchg
mov
push
js
mov
in
retf
mov
mov
push
jnp
xor
in
pop
int3
scas
fadd
jne
in
mov
(bad)
mov
xchg
fild
mov
rol
and
sahf
sbb
scas
jns
bound
jle
pop
dec
push
loopne
int3
(bad)
jnp
(bad)
adc
adc
stos
adc
cdq
stos
lahf
in
sbb
sub
add
pop
ror
sub
cmp
mov
cs
rol
mov
inc
jb
gs
in
xchg
pop
or
push
jno
mov
test
inc
jmp
das
jne
neg
lds
mov
pusha
fimul
mov
xor
push
retf
fbstp
scas
rol
and
add
(bad)
pop
push
or
nop
(bad)
je
fistp
dec
add
(bad)
inc
mov
mov
cmps
fdecstp
or
je
psubw
xor
dec
nop
sbb
cmp
sbb
es
add
sub
mov
popf
dec
fidiv
ins
es
pop
dec
or
cmp
jne
and
and
pop
pop
jo
xchg
ins
mov
adc
and
mov
inc
dec
mov
adc
not
xlat
in
sti
hlt
push
add
or
pushf
jns
pushf
aam
into
jns
mov
les
sbb
pop
adc
out
push
icebp
or
imul
pushf
sbb
xor
fmulp
and
add
mov
mov
icebp
repnz
popa
lds
jl
or
cmp
jg
nop
mul
enter
push
mul
cmps
push
and
sti
mov
out
stos
loope
clc
xchg
jb
xchg
mov
dec
test
repnz
sahf
in
mov
jge
sbb
inc
mov
popf
test
cld
add
aad
(bad)
ret
cmp
dec
pop
retf
dec
test
mov
(bad)
(bad)
xor
jnp
mov
inc
add
(bad)
pop
add
test
test
(bad)
js
hlt
out
add
leave
mul
neg
push
mov
cli
aas
sub
aam
xchg
and
add
adc
inc
clc
xchg
in
and
ja
adc
loope
xor
call
mov
xor
jg
xchg
mov
rcr
sub
lea
fwait
popa
pop
fistp
and
mov
and
in
out
and
xchg
xchg
je
sub
fdiv
jmp
jle
dec
jle
jge
(bad)
call
and
lods
jae
add
adc
mov
cmp
lods
std
aam
fldcw
je
jmp
std
addr16
push
loopne
mov
xchg
test
pop
xchg
aad
movs
jno
jge
xchg
repz
cmp
out
dec
add
inc
and
mov
jne
push
movs
sbb
sbb
and
add
test
in
popa
push
dec
push
sub
pop
call
ja
fisttp
mov
stc
dec
leave
dec
and
bound
xchg
(bad)
inc
retf
outs
scas
cmps
xor
pop
stos
out
pop
(bad)
fild
jnp
into
pop
xchg
mov
bound
data16
xlat
add
cli
pusha
inc
test
jmp
in
xchg
bound
cmps
mov
(bad)
dec
aad
mov
inc
rol
jp
cmp
nop
and
out
jmp
ret
js
mov
dec
dec
mov
sub
adc
and
(bad)
jb
mov
or
xchg
test
push
stos
lods
mov
imul
pop
dec
lahf
in
mov
(bad)
fcmove
leave
aaa
call
and
cmc
push
(bad)
pop
outs
and
adc
push
in
lods
std
(bad)
es
cmp
mov
fiadd
xor
mov
dec
in
call
pop
push
mov
in
rol
mov
mov
int3
sbb
(bad)
imul
jle
cld
adc
sbb
dec
jns
add
cmp
pop
fiadd
test
mov
in
fild
test
and
mov
pop
movs
into
mov
ror
pop
pop
sahf
enter
push
mov
cmps
dec
outs
mov
lods
mov
dec
mov
(bad)
push
imul
xchg
mov
jo
in
pushf
dec
mov
jns
xor
or
ret
cmp
inc
dec
(bad)
jmp
push
cmps
jp
js
jg
xchg
inc
out
pop
daa
int3
jmp
sbb
sahf
xchg
jbe
jne
rol
pop
cdq
cwde
test
pop
inc
not
and
adc
mov
jecxz
dec
(bad)
pop
ret
int3
adc
stc
loopne
mov
loop
sub
dec
adc
shr
dec
xchg
les
add
pop
cmp
xor
inc
or
mov
dec
sbb
sbb
or
inc
jbe
ins
test
shl
(bad)
jp
outs
pusha
adc
mov
(bad)
jo
jecxz
and
in
ror
sbb
or
out
xlat
xor
xchg
adc
fcomp
lods
cmp
mov
outs
pop
jg
push
dec
addr16
mov
dec
pop
loope
(bad)
xchg
mov
xchg
ret
mov
sbb
inc
test
inc
mov
aad
pop
stos
sub
rcr
dec
emms
das
mov
push
aad
(bad)
jne
outs
cdq
in
and
mov
xor
hlt
push
sub
xchg
jne
inc
into
(bad)
pop
ret
mov
popf
add
addr16
test
ins
mov
out
in
dec
jo
lods
mov
jnp
add
add
out
jo
iret
add
sahf
mov
inc
dec
mov
mov
cld
and
xchg
inc
ins
sub
fstp
jl
jnp
jmp
mov
fidiv
cmp
xchg
ins
aad
ja
sbb
scas
cmps
mov
dec
push
out
xor
or
push
mov
add
enter
sub
retf
mov
mov
adc
or
pop
mov
retf
ret
and
jmp
dec
and
mov
int3
ds
(bad)
mov
cmp
cmp
in
lock
inc
test
loopne
js
push
rcr
xchg
(bad)
and
jle
xchg
inc
outs
sbb
ds
adc
jl
mov
mov
sub
popf
jle
xchg
push
mov
mov
dec
(bad)
je
imul
jmp
mov
jno
and
mov
rol
mov
push
rcr
fiadd
mov
fwait
pop
call
cdq
mov
jp
leave
mov
fsubr
ret
arpl
(bad)
adc
mov
enter
jecxz
sub
out
cmp
cli
pop
jmp
cmp
cmp
call
cmp
mov
sbb
inc
push
push
inc
dec
inc
js
(bad)
cmp
ja
mov
sbb
ins
jb
ret
(bad)
out
gs
test
(bad)
aad
sub
inc
add
clc
(bad)
adc
hlt
pop
add
iret
popa
xchg
cmp
and
sub
add
retf
adc
mov
adc
test
and
je
mov
dec
cld
bound
mov
lods
adc
sbb
push
xlat
dec
enter
and
add
scas
xor
ret
fild
stos
aas
mov
lahf
mov
shr
stos
int3
xchg
sub
cmp
inc
xlat
ins
mov
loopne
add
ret
push
out
pop
jne
or
add
dec
out
adc
jae
call
jbe
dec
adc
sub
movs
and
fbld
xchg
shr
xor
adc
movs
xchg
leave
repnz
ja
stos
xor
aad
fld
sub
fadd
inc
fs
shr
out
mov
ja
retf
and
push
sub
loop
(bad)
fistp
loope
push
push
mov
inc
jmp
dec
push
xlat
out
jge
push
inc
in
call
cmp
das
mov
(bad)
sub
std
icebp
out
or
std
pop
out
out
adc
in
push
sbb
je
xchg
cli
mov
push
add
pop
jmp
aad
(bad)
cmp
xor
and
popa
xchg
mov
cmp
inc
test
or
inc
push
mov
fisubr
add
daa
jne
jg
outs
popf
push
push
ins
jmp
jecxz
and
jmp
in
push
jp
pop
mov
xchg
leave
sub
mov
(bad)
lods
imul
ss
dec
pop
sbb
leave
aaa
sahf
add
dec
cwde
adc
jnp
inc
push
out
idiv
imul
aaa
aaa
pop
shl
mov
sub
shl
adc
or
dec
xchg
jne
repnz
sub
jno
inc
and
not
std
jo
sub
out
and
cdq
mov
jns
add
aaa
fcomi
mov
ja
pop
retf
test
sub
in
jp
mov
js
gs
in
cmp
movs
cli
retf
gs
fst
inc
popf
mov
lods
mov
xchg
cmp
jl
leave
dec
les
icebp
dec
arpl
mov
and
mov
push
cs
sub
inc
clc
jp
push
fld
loop
inc
out
jl
pop
ret
outs
(bad)
push
sbb
jo
push
pusha
fs
jl
inc
jnp
retf
je
mov
ins
mov
popf
jle
pushf
push
ins
and
div
xchg
(bad)
jnp
pop
in
push
add
sbb
dec
in
or
ret
in
(bad)
std
aaa
dec
dec
pcmpgtb
out
and
mov
and
in
jecxz
xchg
rol
jbe
test
cmps
(bad)
in
test
mov
adc
(bad)
iret
sbb
mov
test
adc
sbb
lea
dec
add
adc
not
test
pop
out
or
inc
sbb
fld
je
push
mov
lods
outs
mov
push
fstp
jle
push
push
clc
test
mov
add
and
out
mov
inc
add
cld
jb
fsubr
pop
ror
cmc
out
mov
pop
dec
inc
push
ss
inc
mov
pop
mov
mov
sahf
retf
test
sub
adc
(bad)
pop
xchg
outs
retf
pop
xchg
add
jl
pop
fcom
add
scas
enter
scas
xor
pushf
movs
jmp
pop
adc
jmp
sub
addr16
(bad)
imul
out
mov
cld
std
dec
mov
into
hlt
in
sbb
adc
or
push
jno
cmp
stos
adc
adc
xchg
cmp
sahf
rol
outs
pop
mov
mov
mov
fdivrp
jo
shl
inc
das
das
out
in
jb
in
push
pop
push
jmp
pop
push
pop
ja
mov
and
pop
bound
sbb
add
retf
pop
lock
fistp
sbb
mov
es
in
or
fdivr
fdiv
xor
sbb
jmp
rcr
stos
sbb
or
sbb
add
xchg
loop
aaa
arpl
gs
add
std
pop
pushf
test
outs
into
outs
inc
in
outs
dec
fld
adc
or
in
xor
mov
xor
mov
hlt
hlt
xchg
jmp
push
ret
xor
in
mov
bound
icebp
and
jp
out
xorps
ins
dec
push
ss
adc
sbb
mov
dec
aam
lea
sub
std
jae
pop
sub
xchg
inc
sbb
ins
mov
loope
adc
dec
dec
nop
sbb
mov
addr16
outs
dec
jmp
dec
sbb
daa
add
push
retf
adc
adc
mov
mov
inc
xchg
mov
or
cwde
or
add
and
inc
adc
sub
test
push
icebp
mov
add
imul
or
rcl
adc
sub
sub
scas
pop
xchg
cmp
js
inc
rcl
mov
jmp
add
mul
imul
cli
rcr
rol
mov
xor
popf
jno
imul
add
mov
ret
or
scas
dec
push
mov
xchg
icebp
push
inc
jno
enter
jmp
inc
ret
add
mov
and
jmp
pop
jne
stos
inc
xor
cmp
inc
fdivr
add
sbb
stos
adc
test
pop
(bad)
jmp
lods
adc
iret
(bad)
ins
and
ror
dec
dec
cmp
sbb
inc
out
cmps
scas
and
jle
lea
or
xchg
in
repz
xor
xchg
jbe
mov
aad
add
movs
push
add
push
fnstcw
aad
rol
pop
ins
cmp
(bad)
bnd
fdiv
lods
xchg
mov
jge
sti
cdq
gs
xor
dec
pop
dec
dec
pop
sub
es
btc
lahf
(bad)
lock
fs
sub
xchg
loope
and
(bad)
bound
mov
ror
and
lods
adc
or
jnp
into
or
jmp
test
ror
in
inc
shr
inc
cs
aad
cmps
xchg
xchg
(bad)
push
jmp
add
lea
mov
fst
out
fcomp
clc
je
push
outs
jp
sar
mov
retf
add
and
scas
inc
mov
sbb
mov
mov
sub
push
add
mov
push
push
lds
mov
mov
inc
jle
pop
inc
fisubr
ja
push
mov
mov
add
sbb
dec
mov
adc
data16
ret
and
into
push
(bad)
push
add
cld
or
mov
rep
out
je
cmps
rcl
repnz
popf
push
stc
add
or
cld
ins
into
fbld
push
ja
adc
jg
in
inc
push
loope
in
add
inc
mov
pop
or
js
jbe
mov
jbe
pop
sub
(bad)
pop
out
ret
sub
xor
mov
cs
mov
xchg
push
call
sbb
mov
push
(bad)
cmp
scas
sbb
loope
xchg
inc
dec
xchg
jp
imul
sbb
lds
mov
(bad)
cmp
cdq
xchg
mul
dec
jmp
out
or
or
test
mov
call
in
push
sub
xrelease
or
mov
push
pusha
adc
call
xchg
stos
push
cdq
cmc
shr
je
ja
enter
leave
mov
mov
sbb
xchg
xchg
or
retf
popa
xchg
dec
jle
inc
sbb
in
xchg
mov
push
sbb
mov
jg
cmp
movs
mul
or
mov
mov
arpl
jg
adc
(bad)
sbb
cld
inc
pop
popa
pop
xchg
mov
dec
mov
xchg
retf
mov
xchg
int
cmps
push
loopne
loope
out
test
or
push
retf
add
das
cwde
in
and
sbb
sub
repnz
pop
(bad)
inc
mov
scas
int3
jecxz
mov
ins
xor
js
sbb
xor
jmp
retf
iret
mov
cmc
pushf
push
call
mov
and
adc
call
std
pusha
dec
sub
mov
adc
cmp
aam
hlt
repz
fdivr
mov
push
cli
ins
cmc
push
jnp
mov
add
push
and
mov
mov
add
(bad)
add
add
loop
test
jmp
pusha
and
xor
or
inc
sbb
add
ret
ins
jecxz
(bad)
stc
popf
cdq
add
lods
mov
out
sbb
test
or
pop
cdq
push
in
aad
and
jmp
(bad)
imul
inc
sbb
pop
xor
(bad)
dec
mov
add
adc
xchg
arpl
lods
les
cdq
xchg
test
sub
xchg
xor
sub
pop
inc
mov
mov
js
pop
js
arpl
es
test
addr16
dec
push
inc
push
add
inc
pop
gs
retf
lods
sbb
xchg
mov
push
sub
sub
aas
shl
dec
je
push
out
mov
adc
dec
nop
and
push
or
push
ss
loop
or
(bad)
mov
or
dec
pop
xor
inc
pop
cmps
scas
dec
stc
ds
pop
mov
sub
loope
shl
fdivr
scas
jmp
ret
xchg
cmps
lock
out
cld
xchg
stc
cld
fnsave
pop
inc
ret
fs
xor
push
imul
fstp
push
push
mov
mov
xchg
inc
add
stc
(bad)
ss
sub
pop
jl
and
xlat
push
in
in
cmps
mov
jne
(bad)
sbb
add
imul
inc
push
fldenv
mov
fisttp
addr16
in
dec
call
mov
push
or
inc
aaa
iret
push
jbe
loope
mov
push
jmp
add
popf
arpl
lsl
pop
jnp
inc
movs
outs
jno
repnz
sbb
push
jae
(bad)
aam
xchg
addr16
outs
fsubp
(bad)
jl
xchg
mov
pop
dec
add
shr
jae
lods
arpl
scas
test
rol
jmp
push
xchg
xor
and
add
aaa
sub
add
jae
xchg
jle
dec
xchg
pop
imul
mov
aaa
inc
(bad)
or
xchg
aad
dec
push
sbb
fwait
jle
aas
inc
cmp
shl
ins
jecxz
inc
adc
xchg
clc
mov
mov
cmp
aas
dec
mov
test
loopne
fsub
xor
xchg
lods
jbe
dec
movs
dec
mov
jmp
pop
mov
sub
loop
popa
out
adc
jnp
mov
sub
loop
pmulhw
ins
movs
mov
push
loop
pop
add
lea
fcomp
addr16
and
sub
imul
pandn
fwait
mov
fidivr
in
xor
imul
push
out
and
lods
repz
push
test
mul
and
mov
shl
sti
jae
fldcw
xchg
imul
dec
test
mov
cdq
ret
ins
lds
inc
push
out
sbb
enter
pop
xchg
mov
push
xchg
(bad)
push
adc
popf
or
mov
cmpps
add
mov
call
lock
sbb
inc
mov
fsubr
cmp
mov
cli
out
mov
movs
jnp
pusha
sub
fstp
clc
call
mov
pop
and
pushf
fld
dec
aaa
pop
sbb
icebp
cmp
add
pop
mov
js
int
pop
imul
into
imul
ss
aaa
in
imul
cli
mov
iret
add
push
mov
lock
out
mov
bound
and
rol
xor
out
popa
dec
sub
jl
add
daa
(bad)
or
mov
pop
leave
dec
push
clc
loopne
int
pop
mov
add
add
cwde
mov
jnp
pushf
sbb
pop
mov
cmp
sub
jae
mov
and
addr16
xchg
or
fnstcw
std
xchg
inc
add
sbb
retf
inc
in
jmp
sar
ins
add
push
arpl
push
loop
call
inc
sti
push
ficomp
in
icebp
sti
dec
dec
inc
jmp
and
and
rol
(bad)
rol
jbe
sbb
push
jmp
popa
sahf
dec
mov
fidivr
cmp
scas
xchg
ja
push
mov
mov
mov
push
jg
xor
in
clc
call
test
mov
xchg
mov
fidivr
bound
les
retf
push
xor
movs
pop
cdq
mov
adc
mov
bound
lahf
out
gs
sub
or
loopne
je
cmp
jecxz
sti
fisubr
and
in
sub
in
call
sbb
stos
rcl
stos
push
and
or
jmp
push
(bad)
cwde
adc
push
sub
ss
out
cmp
push
in
ins
loope
fwait
mov
and
xor
pop
call
cmpxchg
in
stos
imul
cmps
ja
cdq
pop
xor
aam
xchg
iret
loope
add
sub
push
test
fst
ror
shl
aas
int3
mov
stos
jmp
mov
int3
hlt
retf
cmc
pop
outs
call
mov
and
fiadd
sahf
clc
aad
ja
mov
cld
mov
stc
sub
imul
and
mov
add
inc
push
cdq
mov
xor
mov
test
sub
pop
clc
and
inc
aam
mov
test
leave
xor
mov
data16
out
dec
xchg
mov
rcl
in
xchg
int
(bad)
enter
sti
leave
sti
sahf
pop
mov
cmps
(bad)
push
pop
inc
out
arpl
ror
in
pop
mov
test
test
call
ficomp
fist
aad
xchg
adc
ins
test
out
inc
or
mov
push
int3
int3
mov
fmul
mov
fisub
fiadd
leave
stc
mov
movs
cmc
cmp
push
inc
jns
dec
inc
cmps
into
push
outs
jmp
push
repnz
stos
dec
dec
pop
stos
lock
pop
push
std
adc
inc
sbb
dec
sub
ret
test
fcom
jmp
fwait
jb
xchg
push
cdq
lahf
mov
or
sub
fisub
inc
dec
ss
fcomp
(bad)
iret
sub
in
hlt
mov
popa
push
jne
int
int
cwde
cmp
mov
jae
enter
xchg
mov
into
xor
mov
pop
js
(bad)
inc
fwait
es
icebp
ror
ret
adc
xchg
movs
fcomp
fld
loopne
adc
cld
dec
fdiv
pop
lods
sbb
ret
inc
xor
xor
lods
pop
fwait
sub
mov
movs
add
mov
push
repnz
sti
dec
sar
mov
xor
lods
scas
call
push
inc
push
jns
add
pusha
mov
lods
mov
xor
push
jb
loope
adc
sub
lods
push
adc
cmp
idiv
ins
dec
fadd
push
in
lods
jns
cwde
popf
les
dec
imul
(bad)
sub
test
push
dec
xor
or
add
rol
push
dec
clc
push
cmp
jmp
leave
and
mov
retf
mov
hlt
adc
inc
xchg
cli
aad
nop
lods
mov
xchg
movs
js
pop
xor
outs
push
mov
cmp
retf
addr16
mov
cmc
and
stos
push
retf
aaa
mov
call
mov
pop
jns
lods
adc
mov
xchg
xchg
dec
xchg
cmp
ror
mov
add
aas
mov
daa
popf
(bad)
daa
xchg
std
mov
hlt
jne
(bad)
int
add
xchg
aaa
call
test
sbb
movs
enter
push
iret
push
leave
sub
cmovge
mov
or
mul
popf
xor
xchg
into
ins
(bad)
popf
ret
xchg
mov
inc
aas
cmp
cs
add
fcmovnbe
(bad)
(bad)
sub
sbb
mov
js
push
jg
int3
test
ficom
in
pop
cmps
(bad)
in
xlat
ins
shl
rcr
int
pop
mov
outs
sub
loop
and
sub
lock
jnp
sub
iret
rol
push
popf
jb
xor
add
ins
jb
scas
or
dec
mov
jmp
dec
pop
cld
dec
xchg
iret
sbb
push
test
test
pop
dec
inc
fcom
mov
dec
lods
sub
dec
imul
cld
popf
mov
jbe
sbb
xchg
dec
ret
push
inc
sbb
push
mov
pop
mov
enter
mov
add
xchg
xchg
jmp
clc
daa
ja
ds
retf
sar
mov
not
mov
(bad)
sub
adc
xor
mov
inc
add
add
daa
cmps
or
cwde
pushf
cmp
fstp
jae
mov
jb
shl
ret
xor
loop
adc
sbb
mov
mov
pushf
adc
and
imul
add
and
cmps
cmp
dec
xlat
lahf
ja
sbb
push
pop
retf
ret
out
retf
fisub
pop
test
pop
add
mov
mov
mov
sub
pop
mov
das
sbb
out
xor
push
inc
leave
enter
(bad)
(bad)
or
aas
in
push
cmp
sub
(bad)
enter
fild
inc
ss
xchg
mov
push
mov
loopne
add
shl
in
jnp
lods
mov
adc
add
sub
mov
push
jmp
and
in
lahf
psubd
(bad)
stos
lds
adc
inc
lock
hlt
aaa
jmp
repnz
shl
aaa
ss
xor
push
push
sub
je
sub
pusha
xchg
xchg
sub
pop
push
cmp
lods
adc
adc
add
mov
jmp
test
pavgb
inc
inc
lods
jecxz
fwait
(bad)
dec
jne
ror
sbb
fist
adc
jl
movs
into
fadd
add
sar
aad
outs
scas
pop
fisttp
push
and
stc
(bad)
dec
jmp
popf
dec
jmp
jg
leave
sub
lea
jg
jno
and
pop
packsswb
repz
test
inc
pop
xor
mov
repz
dec
(bad)
lods
or
idiv
in
sbb
inc
dec
movs
jo
lds
ret
aam
sbb
popf
push
push
xchg
mov
jmp
popa
pop
lahf
sub
mov
mov
int3
mov
cld
lea
ret
mov
xor
retf
pop
jle
sbb
inc
push
and
or
neg
jle
ds
dec
xchg
push
xor
test
sbb
jmp
jge
fist
push
cli
and
lock
out
scas
popa
add
adc
mov
xor
cmc
in
imul
pop
lock
movs
mov
in
pop
jg
es
cwde
mov
repnz
jl
mov
lahf
jl
cmp
xor
mov
pop
xor
inc
ins
dec
jmp
movaps
xchg
daa
aam
mov
xchg
out
jo
in
xlat
push
jo
in
mov
or
test
mov
movs
out
fs
aaa
loop
jmp
js
lock
jb
or
iret
push
sti
call
loope
imul
cmps
mov
outs
xor
(bad)
fstp
mov
pop
mov
sbb
inc
jp
mov
dec
clc
iret
or
xchg
js
jo
repz
adc
inc
adc
imul
nop
pushf
add
(bad)
cmp
sub
(bad)
jecxz
(bad)
push
mov
outs
pop
ret
imul
inc
jae
loopne
outs
jbe
es
and
stos
mov
push
loop
aas
add
shr
pushf
cld
and
pop
mov
rol
pop
dec
mov
mov
mov
lds
push
aaa
or
inc
pop
out
aam
mov
test
sub
xlat
shl
gs
xchg
mov
(bad)
mov
shl
cmp
ret
in
xchg
test
mov
adc
or
push
loopne
and
pop
sbb
lahf
and
xchg
es
in
xchg
xacquire
(bad)
mov
jbe
je
push
cmp
push
mov
gs
mov
movs
cli
pop
jecxz
test
sar
fiadd
jp
cs
inc
push
mov
ficom
cld
cmp
inc
mov
movs
cmp
mov
push
xchg
outs
jp
outs
jl
call
cmps
push
xchg
pusha
daa
movs
sub
pop
cmp
xchg
in
pop
jns
adc
inc
sahf
push
imul
mov
bound
xchg
repz
les
(bad)
lods
pop
pop
fs
(bad)
lods
cli
mov
into
xor
cdq
fadd
pop
(bad)
test
jp
sbb
push
sub
out
push
movs
fnstsw
test
mov
aad
enter
sti
xchg
sub
inc
pop
addr16
out
push
dec
xchg
retf
xchg
inc
xor
mov
stos
xor
inc
push
jb
sbb
or
out
test
mov
pop
mov
das
push
ins
inc
jb
ds
fbstp
mov
mov
push
xor
in
and
ds
dec
dec
xor
imul
jne
shl
lods
gs
push
mov
jmp
fst
pop
data16
arpl
fsub
pushf
xchg
cmps
sti
bound
std
adc
dec
lahf
out
in
je
xor
sti
popf
aaa
loope
sbb
in
mov
scas
popf
std
mov
or
mov
scas
popf
pop
pop
inc
(bad)
jmp
jae
push
call
call
jmp
sub
enter
inc
cmp
loop
fnsave
pusha
out
add
jmp
pop
loope
js
fnstenv
in
fmul
xlat
or
mov
outs
mov
sbb
xchg
std
mov
xchg
pop
fwait
shl
ror
jns
and
call
(bad)
pop
pop
pop
imul
add
sbb
inc
pop
mov
mov
jl
neg
mov
push
addr16
or
jg
setns
jo
jg
xor
jge
cs
mov
cmp
sub
test
mov
mov
lahf
or
lahf
pop
dec
push
in
xchg
xchg
pop
dec
cdq
pushf
nop
dec
test
outs
inc
dec
in
cmp
mov
lods
sar
push
mov
pop
mov
daa
ds
pop
mov
outs
and
mov
sub
mov
push
push
jns
xchg
repz
sub
aas
mov
cld
xor
inc
loope
dec
xchg
lea
mov
test
inc
mov
or
mov
lods
sbb
xor
(bad)
stos
shl
push
jle
pop
jns
mov
ss
data16
fs
jecxz
and
mov
rcr
xor
retf
mov
xor
adc
repnz
mov
adc
das
outs
daa
pop
int3
in
cwde
scas
and
push
jmp
es
mov
sub
cmp
push
fcmove
and
dec
jne
ins
test
dec
mov
repnz
mov
mov
call
push
and
pop
leave
call
or
mov
jno
cmps
push
pop
ins
lods
stc
xor
repnz
ins
jg
popf
js
and
mov
mov
or
jmp
(bad)
in
mov
mov
jg
mov
stc
imul
dec
sbb
sub
out
jnp
cs
mov
repz
jp
xchg
in
jg
cli
add
dec
mov
jns
dec
jo
inc
ss
jmp
sti
jbe
sbb
in
es
add
es
outs
std
es
xor
cdq
dec
fdiv
dec
inc
repnz
mov
fcom
or
mov
pushf
movs
clc
push
adc
addr16
test
pop
inc
retf
adc
fadd
fcom
sbb
jnp
stos
js
bound
pop
in
inc
pushf
add
jne
jle
stos
dec
push
push
sub
or
pop
sub
outs
mov
(bad)
sbb
xlat
call
push
ja
lahf
js
or
jle
sub
das
retf
test
jle
mov
jns
outs
out
jbe
sub
or
push
js
xor
mov
jo
sbb
icebp
add
push
js
movs
add
xchg
ficomp
cmps
inc
test
(bad)
jmp
or
lahf
mov
cmp
or
push
stos
mov
or
inc
mov
ficomp
iret
xchg
je
mov
cmp
leave
stos
inc
push
es
jle
jmp
adc
mov
sub
dec
cmp
mov
call
arpl
call
int
popf
pop
adc
mov
retf
les
xlat
jne
or
retf
daa
(bad)
fadd
push
or
mov
mov
xchg
or
hlt
adc
jne
mov
out
stc
pushf
movs
jo
xchg
xchg
lock
adc
xchg
sub
mov
fwait
retf
mov
jmp
btr
int
sub
sub
jge
shr
xchg
aad
sti
in
les
(bad)
jo
popa
and
pop
fist
neg
repnz
dec
lock
or
add
push
ret
cmp
dec
pop
imul
push
pushf
movs
jecxz
add
arpl
stos
dec
add
add
cdq
stos
sbb
xchg
(bad)
mov
fiadd
pushf
mov
inc
(bad)
cwde
push
icebp
dec
sub
ins
sub
outs
retf
pop
push
adc
jg
sub
inc
loope
mov
add
cmp
and
cmp
fimul
xchg
jecxz
xchg
out
lahf
mov
xor
or
pop
call
sbb
fcom
xor
fimul
sbb
scas
js
xor
mov
stos
or
popf
xchg
mov
pop
mov
fwait
clc
push
adc
pop
cmp
ds
rol
lods
pop
sub
dec
pop
lods
dec
pop
loop
mov
iret
sub
or
out
cmp
adc
push
adc
sbb
outs
ds
cmc
sbb
or
xlat
mov
push
jo
hlt
push
jecxz
add
and
mov
inc
faddp
sar
mov
mov
les
imul
add
mov
daa
jns
mov
jns
popf
hlt
ret
fs
lds
scas
cmp
out
fcmovnbe
es
add
pop
mov
arpl
movs
jmp
or
dec
fiadd
fs
es
les
and
(bad)
ja
or
das
sub
aam
(bad)
scas
icebp
dec
add
adc
mov
mov
jb
add
ror
xor
jmp
cmps
add
inc
xchg
loopne
stos
pop
and
scas
rcl
xor
retf
jne
mov
movs
aam
or
aaa
aas
mov
xor
scas
and
cmc
mov
push
xchg
clc
fwait
cmp
repz
aam
mov
mov
pop
sbb
pop
jg
retf
cmp
push
or
pop
adc
iret
adc
repnz
push
aas
or
push
sbb
imul
adc
arpl
sahf
mov
mov
cmps
aad
imul
adc
mov
stc
jne
dec
inc
cmps
mov
mov
loope
popa
mov
rcl
leave
mov
sub
retf
mov
jbe
xchg
or
mov
push
jecxz
push
and
add
test
scas
push
jle
je
es
mov
test
mov
dec
ficomp
or
nop
nop
add
push
shr
push
je
xchg
xlat
mov
mov
pop
das
shl
xchg
ficom
outs
mov
in
outs
fcomp
test
loop
fisttp
dec
inc
stos
and
push
sbb
leave
mov
mov
addr16
add
push
aaa
fdiv
push
push
xchg
shl
jo
(bad)
leave
stos
icebp
xchg
je
inc
les
mov
jp
xor
sub
into
repz
or
stc
popf
inc
xchg
fdiv
aam
mov
inc
jae
(bad)
enter
and
xor
pop
pop
xlat
fistp
pop
jmp
ret
pop
sub
add
sbb
jne
stos
push
lea
and
test
push
sbb
in
jl
sbb
xor
cmc
jbe
ds
push
mov
pop
neg
fist
cmps
mov
cmc
outs
jo
fxch
daa
pop
addr16
lods
movs
clc
js
and
enter
lahf
mov
pop
mov
lock
das
(bad)
push
iret
cmps
mov
dec
sbb
scas
sti
xchg
in
movs
mov
jge
inc
or
pop
mov
loop
ror
je
je
adc
repnz
repnz
aam
sbb
test
add
pop
movs
jge
jmp
in
(bad)
add
popf
xlat
mov
shl
xchg
pop
popf
call
popf
dec
cli
dec
push
int
mov
std
mov
xor
cmps
sti
lods
ins
movs
xor
fcomp
cli
call
lea
inc
jo
enter
push
sti
mov
cwde
add
or
call
cmc
ja
mov
jecxz
(bad)
jecxz
clc
bound
dec
rol
scas
inc
or
mov
test
bswap
jae
rcr
sti
loop
sub
out
sti
push
mov
fwait
test
cdq
call
stc
test
data16
add
lahf
inc
mov
xor
movs
or
int3
imul
inc
fs
adc
cmc
out
xor
push
cmp
lods
xchg
clc
(bad)
lea
add
cmp
mov
inc
mov
int
stc
pushf
push
dec
inc
sbb
mov
cmp
outs
jmp
das
push
adc
mov
je
push
mov
movs
jl
(bad)
outs
rcl
xchg
mov
iret
pop
add
push
fwait
rcl
and
in
add
jb
out
add
sysret
lock
mov
adc
sub
fcomip
(bad)
stc
out
jp
sbb
(bad)
push
ret
pop
mov
outs
xchg
jbe
rcr
pop
push
hlt
dec
jne
dec
inc
(bad)
(bad)
in
cmovns
cmps
das
mov
icebp
mov
adc
push
fistp
lea
mov
adc
pop
xchg
adc
dec
shl
dec
mov
sub
dec
loope
mov
cmp
in
xchg
mov
adc
shr
ret
xlat
sti
ins
fisub
xor
add
fnstcw
mov
pop
mov
jbe
mov
stos
and
sbb
mov
(bad)
fsubr
mov
mov
mov
lods
(bad)
push
ds
ins
push
sahf
test
imul
ins
and
pop
push
push
iret
retf
lods
or
push
ja
mov
mov
xchg
dec
je
test
push
pop
jmp
push
adc
cli
aaa
stos
add
scas
xchg
adc
loope
push
push
add
adc
inc
pop
pop
cmc
mov
dec
(bad)
mov
bound
xchg
push
jne
xor
ret
xchg
sub
sbb
cwde
pop
inc
mov
adc
jp
xchg
xchg
push
and
call
inc
and
test
cmps
xchg
ins
add
ret
push
movs
mov
les
xor
xchg
pop
and
push
data16
jmp
or
add
jnp
icebp
fldenv
ss
stos
push
fld
xlat
into
xor
movs
test
push
xor
jle
jge
or
cdq
lods
sub
les
scas
and
es
das
sub
sub
or
aam
inc
movs
xchg
cmp
pop
adc
out
repnz
das
push
mov
adc
pop
adc
in
xor
cmc
jae
xchg
or
adc
push
retf
retf
cmps
hlt
cmp
imul
les
jnp
xchg
mov
ret
in
push
retf
je
or
test
(bad)
xchg
mov
arpl
sbb
push
fmul
add
adc
bound
mov
pop
popf
cwde
fwait
push
push
sbb
sti
test
pop
mov
cli
leave
push
xchg
retf
call
inc
aas
pop
fdivr
jns
xchg
aas
movs
aas
es
cdq
retf
or
ss
sub
nop
(bad)
push
pop
cs
xchg
fimul
mov
push
mov
xchg
dec
aaa
fwait
retf
sub
frstor
jnp
loop
(bad)
mov
push
test
mov
out
push
jmp
add
out
jo
mov
fld
aas
dec
in
ins
mov
into
push
mov
inc
mov
mov
cli
test
sti
(bad)
mov
inc
or
outs
push
sub
jg
add
jbe
mov
neg
push
add
not
loope
test
(bad)
test
and
inc
push
cli
xor
sahf
leave
xlat
call
pop
push
adc
cli
mov
pop
and
lahf
imul
and
sub
cli
mov
inc
(bad)
icebp
and
popa
mov
dec
lds
or
push
add
icebp
add
sbb
in
jns
(bad)
cmp
ins
jbe
je
in
leave
ds
pop
rcr
neg
not
out
cmps
jae
xor
ins
sti
stos
xlat
clc
jge
scas
pop
sub
jne
(bad)
leave
cs
sbb
mov
adc
add
addr16
movs
test
test
inc
mov
cmps
sbb
sub
sub
test
adc
stos
outs
(bad)
rcr
in
jg
call
jp
out
sub
jmp
mov
cmps
gs
mov
inc
adc
repnz
sbb
xchg
das
pushf
rcr
sar
rol
inc
pop
pop
fwait
mov
test
dec
(bad)
loopne
lahf
popa
pop
ror
pop
dec
sbb
hlt
jg
or
movs
inc
ret
inc
dec
sub
mov
adc
jns
ins
lea
jmp
mov
mov
xchg
push
iret
xor
int3
es
and
imul
ss
(bad)
cmp
scas
mov
movs
pop
int
xchg
jmp
xor
and
push
imul
sbb
inc
bound
inc
mov
jg
sub
pop
mov
pop
jne
out
lods
pop
mov
add
xchg
or
dec
xchg
(bad)
lods
dec
shl
push
fimul
sbb
rol
jb
jecxz
jmp
test
mov
jle
or
pusha
mov
call
add
xor
mov
and
fstp
jmp
lods
test
dec
pusha
cmps
mov
(bad)
sbb
xor
imul
jbe
mov
jae
mov
jg
jmp
xchg
daa
sub
scas
js
inc
jp
jge
fidivr
test
aad
iret
(bad)
xchg
add
sbb
int
popa
or
xor
cli
xor
in
fisttp
es
data16
(bad)
adc
pop
add
fdivp
push
jp
retf
inc
pop
arpl
daa
dec
sbb
pop
jge
sub
xchg
push
and
cli
xor
shl
add
test
cmp
ret
int
aas
mov
xchg
cmp
inc
sbb
xor
mov
xchg
call
aaa
cwde
xor
adc
sub
jae
imul
ins
lahf
mov
stc
(bad)
mov
push
dec
(bad)
or
mov
dec
cmp
cmp
loop
mov
cwde
retf
daa
mov
cmp
push
pop
xor
sbb
int
inc
stos
repz
xchg
(bad)
(bad)
inc
mov
lahf
mov
loope
adc
inc
icebp
lds
push
mov
or
pusha
push
and
lods
or
sti
fimul
retf
(bad)
stc
movs
xor
mov
ja
retf
mov
sub
xchg
hlt
fnstcw
pop
add
push
add
fisub
inc
xlat
loope
ds
sub
ror
mov
retf
pushf
pop
lea
(bad)
mov
rcl
sub
cli
pop
mov
push
hlt
popf
outs
(bad)
mov
dec
fldcw
or
ret
xor
hlt
mov
fstp
mov
test
cmp
sub
adc
cmp
jmp
loope
xor
xchg
jecxz
inc
cmp
es
outs
sub
lock
jae
popa
les
in
mov
lods
stos
fld
test
cwde
in
sbb
cld
out
call
sbb
or
rep
jge
cmp
shl
movs
ret
adc
stc
popa
push
sub
push
mov
lds
lods
sbb
jns
jno
or
jb
(bad)
mov
in
test
adc
call
sub
sub
sub
popf
mov
aas
dec
repnz
mov
sub
sbb
aad
popf
cmp
fwait
pop
rol
mov
(bad)
push
lods
jnp
add
icebp
xor
xchg
jmp
xor
adc
xor
fstp
adc
jno
(bad)
jnp
fidivr
ins
fimul
in
fs
jmp
or
add
retf
outs
iret
pop
xchg
cs
dec
or
pop
ins
mul
bound
mov
pop
jo
pusha
jb
addr16
stc
jmp
or
push
fcom
fs
push
mov
ins
scas
dec
mov
in
pop
push
pop
sub
mov
das
mov
jbe
call
lods
mov
and
push
and
ss
sar
iret
imul
add
pop
cli
mov
jne
call
(bad)
jp
ins
jne
xchg
push
outs
in
inc
loop
fadd
mov
xchg
fcom
jmp
movs
loope
jg
inc
dec
fidiv
ss
cmps
test
stos
daa
and
(bad)
cs
adc
fisubr
adc
or
sbb
mov
out
push
fadd
mov
or
test
xor
ds
lahf
xlat
xchg
fsub
in
loopne
in
and
test
ins
xchg
cdq
loopne
retf
inc
das
jl
xor
inc
dec
sub
push
dec
and
inc
add
sub
hlt
add
test
movs
add
enter
je
lock
or
lods
mov
pop
push
loope
or
out
sub
inc
test
or
pop
(bad)
jl
mov
mov
out
cmp
ret
sbb
pushf
ins
aaa
cmp
jge
js
dec
inc
rol
das
cwde
cmp
je
sub
rcl
dec
sub
push
retf
test
mov
inc
daa
fcom
shr
pop
sub
jnp
xchg
or
pop
sbb
int3
push
repnz
cmp
cmp
and
cwde
xor
shl
gs
stos
push
fs
aad
mov
addr16
popa
cmp
mov
cs
addr16
int3
xchg
addr16
fadd
mov
fstp
in
jne
mov
jns
rcl
xchg
xor
dec
cmps
sub
pop
push
lds
in
lods
mov
xor
pop
leave
xchg
adc
xchg
or
jle
out
xchg
cwde
test
push
sbb
movs
fnstcw
jmp
cs
xchg
cmc
iret
inc
dec
outs
dec
sub
sbb
add
std
mov
sbb
ds
xor
jmp
adc
jg
sub
mov
mov
mov
das
add
daa
push
jle
ja
add
mov
nop
rcl
out
xchg
push
adc
or
cli
aas
adc
mov
pop
fst
sbb
out
jno
push
lods
das
mov
test
(bad)
ror
push
and
push
jecxz
das
and
les
push
dec
fnstenv
xor
push
jge
dec
stos
pop
test
imul
fistp
push
pop
inc
inc
cmc
jae
movs
dec
fwait
ret
jno
into
pop
cmp
dec
adc
add
outs
test
inc
pop
out
cmp
cmp
iret
inc
or
fsubr
sahf
mov
imul
call
jecxz
aaa
inc
dec
xor
fcom
jns
clc
sub
sub
xchg
mov
mov
xchg
sbb
sbb
pop
in
ins
(bad)
push
mov
shr
fadd
fild
fsub
clc
mov
xlat
fst
shl
cmps
and
xchg
push
fst
ins
push
inc
xchg
arpl
lahf
arpl
clc
cmp
inc
jg
pop
pop
xor
movs
dec
mov
ror
sbb
push
adc
loop
div
mov
pop
cmp
pop
lds
test
in
stos
add
adc
cmp
mov
xlat
pop
leave
pushf
push
jne
jbe
into
jnp
mov
std
push
in
xor
and
push
cmp
ss
inc
or
jmp
scas
mov
repnz
rcr
lea
aam
mov
mov
retf
mov
out
outs
and
outs
scas
mov
daa
mov
jp
jnp
pusha
sub
inc
popa
ret
mov
push
lods
out
pop
lock
mov
pop
pushf
(bad)
mov
or
shr
inc
sbb
jne
or
lock
enter
xchg
repnz
cmp
ret
(bad)
fwait
push
inc
push
inc
xchg
popf
or
loope
push
xchg
xor
scas
pop
mov
push
and
and
mov
xor
dec
mov
add
push
or
scas
mov
jmp
mov
cmp
cmc
jg
mov
shr
cmps
pop
add
xchg
aaa
inc
ins
lds
xor
xor
xlat
xchg
mov
(bad)
and
call
pusha
adc
or
xchg
dec
jb
inc
out
or
cmp
mov
cs
ret
cmp
lds
xor
push
gs
adc
pop
sub
nop
ficomp
rcr
gs
imul
iret
pop
pop
cmps
xchg
jg
push
dec
lahf
ins
sti
cld
aam
jmp
add
add
pusha
jnp
mov
xlat
(bad)
stos
lods
add
xor
jmp
xlat
ror
mov
fisttp
add
fdiv
xchg
and
xchg
ja
or
jmp
adc
inc
pop
aaa
sbb
popa
jo
ds
cmp
and
shl
cmp
retf
xor
adc
mov
aaa
jnp
and
mov
mov
fsubr
adc
cmovnp
xor
repz
fild
adc
(bad)
jns
mov
(bad)
outs
iret
fimul
cld
or
cmps
jb
pop
push
jp
add
lods
xchg
cld
sbb
inc
adc
xor
jnp
sar
(bad)
ins
xchg
push
mov
xor
inc
sbb
(bad)
pop
(bad)
push
js
(bad)
ret
cwde
jmp
dec
icebp
(bad)
(bad)
popf
shr
movs
test
test
lahf
ins
addr16
iret
cmps
push
outs
pusha
xchg
xchg
mov
outs
jmp
out
imul
scas
mov
in
loope
icebp
out
loopne
dec
xchg
aad
xor
(bad)
jle
and
cld
mov
xlat
rol
lds
lds
lods
or
stos
xchg
sub
mov
iret
xlat
std
fidiv
push
daa
inc
push
aam
inc
arpl
push
xor
leave
jmp
cs
push
je
call
popa
cmp
sti
imul
xchg
pop
or
jg
leave
std
lods
aaa
sub
shl
add
push
ds
mov
jmp
inc
dec
test
shl
loopne
xchg
sbb
in
xchg
lock
mov
rcr
jecxz
inc
push
dec
cmps
or
or
in
jbe
lods
stc
loope
adc
mov
fsubr
xor
ss
aas
rcr
dec
ins
dec
pop
into
cli
or
lock
adc
push
nop
gs
sub
sldt
xchg
push
dec
sti
push
sub
add
or
clc
inc
lds
mov
cmps
popa
pop
ins
pop
mov
in
mov
dec
xor
test
data16
dec
sbb
pop
mov
int3
xor
ja
out
xchg
imul
scas
xchg
mov
push
xchg
shl
dec
popa
sub
out
sti
push
int3
inc
mov
pop
jp
imul
push
imul
xchg
test
into
push
mov
in
in
adc
dec
stos
test
fst
in
aam
inc
in
add
in
popf
pusha
popa
fs
sub
ror
push
push
mov
xchg
mov
std
mov
aaa
test
inc
lahf
pusha
sbb
test
les
pop
pop
pusha
push
dec
xchg
fdiv
fsub
stos
mul
icebp
pop
pop
sub
sbb
mov
push
pop
mov
int
sbb
arpl
inc
dec
mov
ret
jne
sahf
jo
cmp
(bad)
jnp
out
daa
xchg
int3
mov
dec
mov
loope
out
add
or
jmp
jge
cmc
adc
push
inc
daa
rcr
enter
mov
mov
rcr
xchg
and
pop
dec
sbb
ja
add
std
addr16
dec
cmp
cs
dec
js
xor
into
in
out
retf
jmp
fsubr
aam
push
sbb
pop
jae
rcl
xchg
xchg
or
rep
jle
lock
xchg
add
mov
into
int
lahf
add
xchg
push
push
mov
dec
push
rcr
popa
cmc
ja
ret
call
popa
xor
scas
mov
retf
clc
dec
inc
mov
xchg
push
fisttp
(bad)
pop
(bad)
mov
push
fdiv
int3
add
in
ds
jb
lods
pusha
jae
mov
fisttp
fistp
aam
mov
fsubp
mov
jle
fcmovne
jmp
daa
mov
xchg
fadd
mov
inc
gs
outs
cmp
outs
cld
cmc
into
mov
jecxz
add
cmp
xor
or
sbb
dec
sub
and
loopne
test
mov
mov
data16
fwait
cwde
icebp
pusha
inc
add
jp
jmp
xchg
inc
jo
mov
push
add
call
aad
retf
inc
cmp
leave
inc
jp
sub
daa
daa
nop
mov
cs
mov
out
push
mov
adc
jae
out
rcl
inc
lds
test
adc
lods
dec
das
mov
or
xor
pop
jge
ss
pop
hlt
and
push
shr
pop
fs
jg
cmp
jg
cld
addr16
sbb
mov
or
les
out
lods
push
jmp
retf
outs
dec
shl
adc
or
call
or
retf
retf
test
cmps
fcom
jo
jp
outs
push
in
xchg
mov
pop
mov
or
push
outs
mov
dec
rol
outs
in
iret
inc
sar
mov
data16
inc
gs
sbb
push
sbb
arpl
in
add
std
xor
push
(bad)
add
test
or
mov
pop
aam
cmp
pop
inc
and
test
jmp
mov
lods
sbb
jle
push
dec
push
in
mov
xor
sti
push
sub
sbb
pusha
cmc
ror
jno
jg
loop
xor
imul
xchg
dec
jo
loop
jp
cmp
jge
call
cs
inc
stos
or
jl
enter
xor
gs
addr16
rol
mov
repnz
pop
push
cmp
or
std
lahf
push
push
jp
adc
jmp
(bad)
gs
cmps
push
ins
nop
sbb
popf
outs
inc
xchg
push
xchg
sub
cwde
mov
mov
sbb
(bad)
pop
dec
mov
sub
mov
jbe
sub
add
shr
and
sti
(bad)
jno
mov
stos
mov
ret
inc
xlat
imul
mov
inc
repnz
pop
ins
sbb
push
mov
pop
jb
mov
adc
sub
adc
inc
sbb
ds
push
add
bound
xor
xor
inc
(bad)
std
xor
cmp
test
pop
cmp
test
imul
sub
pop
push
leave
loopne
jo
ret
mov
jno
mov
and
jecxz
push
jns
or
mov
inc
or
xor
xchg
or
add
sar
xor
retf
std
xchg
int
adc
and
inc
retf
jg
fimul
or
sub
mov
mov
hlt
jo
cmp
lahf
mov
aas
cmps
push
adc
je
or
jg
data16
jno
xor
inc
xor
out
xchg
aam
cwde
in
sbb
mov
fistp
add
mov
add
inc
js
hlt
add
fstp
pop
in
cmp
mov
sub
adc
ins
sub
nop
cmps
sub
outs
mov
xchg
mov
loop
ss
jnp
and
mov
std
call
sbb
shl
fcmovbe
push
ret
cmp
outs
lods
jl
mov
push
js
sub
repz
cmp
icebp
xchg
sti
imul
ins
call
dec
ror
fmul
lds
loopne
jl
out
fs
pop
(bad)
out
lock
(bad)
add
sbb
shl
xchg
lods
sbb
in
lods
fs
into
mov
pushf
cmc
ja
mov
jmp
xchg
jb
mov
test
sahf
and
lea
aam
sbb
sub
(bad)
call
ins
pop
dec
jbe
or
or
inc
lds
sub
xchg
mov
mov
jb
mov
pop
mov
cs
call
push
ja
add
lock
adc
push
test
repnz
mov
xor
add
mov
aam
(bad)
das
mov
add
ins
enter
xor
ss
scas
sub
xor
cmps
movs
dec
inc
fiadd
je
retf
inc
push
pop
jne
xchg
cmps
gs
arpl
cmps
dec
sub
add
es
lods
mov
daa
push
add
test
lock
lds
ins
cmps
dec
div
and
pop
daa
cmps
mov
cmp
stos
test
push
mov
xor
popf
and
dec
pop
out
bound
inc
imul
into
mov
ret
pop
inc
xchg
jecxz
scas
ss
test
mov
loopne
jp
dec
xchg
int
sbb
in
stos
ret
or
int
mov
inc
and
mov
pop
push
call
push
mov
fidiv
fnstenv
pusha
mov
inc
rcl
sahf
mov
dec
jmp
push
or
test
pop
inc
lods
mov
loopne
inc
shl
xchg
mov
push
adc
dec
cmp
sbb
add
stc
ds
iret
stos
jno
arpl
aas
jnp
add
pop
pop
cli
adc
pop
xchg
mov
popa
push
cmp
xchg
xlat
imul
or
fnstcw
dec
test
mov
xor
shl
scas
daa
inc
hlt
ret
(bad)
fcom
ss
push
ins
dec
jp
scas
shl
(bad)
scas
inc
fisub
and
vcvtdq2pd
loope
mov
or
cmc
xchg
sbb
and
rcr
inc
fsincos
push
stc
ds
aaa
fild
and
jecxz
aam
cmp
cmp
hlt
les
inc
pcmpgtb
jl
push
inc
ret
in
mov
pop
(bad)
or
add
cs
dec
push
(bad)
mov
add
cmc
(bad)
stos
iret
stos
sub
ins
cwde
add
icebp
pop
push
mov
sub
adc
lahf
or
ret
imul
xchg
fiadd
add
out
loope
stos
loopne
jnp
ret
cwde
and
jnp
aam
rol
adc
xchg
cmp
call
scas
mov
mov
mov
cmp
and
popa
lds
adc
jmp
add
push
xor
imul
sbb
push
cmp
sbb
cdq
jbe
pop
mov
lds
aaa
mov
and
and
dec
mov
mov
xchg
cmp
dec
add
inc
div
mov
cld
pop
sahf
pop
cmp
movs
hlt
and
mov
inc
mov
sub
fidiv
arpl
cmp
in
ret
mov
cld
add
pop
rcr
sub
in
mov
das
cmps
bound
sbb
int3
and
cmp
mov
xchg
lods
dec
adc
pop
sahf
int
add
fidivr
mov
sub
out
cmp
cdq
sti
pop
adc
dec
and
lods
jb
movs
or
sbb
xchg
dec
inc
inc
xor
int
lods
pop
stos
jae
push
adc
or
rcl
iret
jle
(bad)
ror
repz
or
mov
ins
mov
cmp
call
pop
data16
pop
pop
pop
mov
inc
(bad)
sar
(bad)
push
ret
je
mov
fs
je
not
xchg
clc
push
pushf
cwde
xor
push
mov
loopne
jmp
addr16
les
xor
shl
mov
ja
jmp
aam
scas
cmp
mov
cmp
mov
inc
sbb
ds
punpckhwd
ret
mov
out
mov
daa
push
mov
test
sub
loopne
adc
idiv
cmp
push
test
mov
ret
repnz
jg
test
fucom
enter
jbe
xchg
cmp
add
inc
sbb
mov
outs
jecxz
and
xchg
jo
jbe
mov
and
dec
ds
(bad)
sbb
and
adc
mov
cmc
mov
mov
xchg
and
jo
mov
dec
arpl
xchg
push
mov
jno
shr
jmp
inc
fidivr
inc
sbb
jmp
out
xor
ss
push
adc
or
mov
add
push
push
sbb
aad
push
(bad)
arpl
ficomp
fs
jg
xor
mov
mov
(bad)
stos
adc
mov
out
test
jae
mov
jge
das
inc
sub
add
idiv
mov
pusha
test
hlt
repz
jmp
test
cwde
cmc
int
test
iret
dec
mov
cmp
xchg
sbb
out
cld
cld
imul
cmp
jnp
push
add
dec
inc
push
(bad)
cmps
pop
mov
sub
xchg
add
movs
stc
jo
add
cdq
mov
leave
loope
in
aas
add
shr
mov
stos
movs
jge
and
jb
adc
outs
jge
cmp
out
xchg
ds
pop
add
and
hlt
data16
dec
jo
retf
fcomp
sub
sbb
ss
inc
stc
les
mov
inc
mov
jge
movs
iret
repz
jno
sub
clc
cli
rcr
push
inc
jae
adc
(bad)
in
sbb
add
inc
sahf
outs
lods
mov
adc
xor
mov
push
adc
test
mov
push
popa
mov
adc
jge
adc
jo
pop
mov
cwde
pop
mov
sti
in
jmp
and
jns
jbe
pop
inc
push
lea
mov
xchg
lahf
test
sbb
mov
in
mov
xchg
fwait
into
mov
mov
addr16
in
fcomp
mov
jl
sub
jnp
jb
call
fdiv
aad
push
ins
fild
add
les
mov
jnp
pop
push
mov
lds
std
loop
mov
mov
fcomp
test
cld
cli
adc
mov
cwde
lahf
and
scas
sar
jp
jmp
out
(bad)
imul
cs
pop
cmc
(bad)
lods
or
dec
and
mov
fnstcw
jne
xchg
sub
jle
xchg
sahf
pop
ss
cmp
cmp
dec
pop
dec
add
or
(bad)
ins
jae
fcomp
xor
jg
shr
in
pop
jbe
jmp
adc
push
test
dec
pop
sbb
popf
add
push
shr
pop
fisttp
dec
jl
enter
ret
or
lds
push
push
mov
jns
repz
loop
or
es
mov
pusha
(bad)
call
dec
mov
or
sub
push
out
add
adc
mov
add
pop
and
imul
mov
pop
pop
cmp
lock
mov
and
into
cmp
xor
dec
mov
or
mov
stos
call
jno
out
dec
push
xchg
adc
sub
xor
out
fstp
in
dec
mov
sbb
jl
shl
fistp
xchg
jle
mov
jmp
lods
mov
and
les
push
jne
shr
push
retf
cmp
sbb
pause
sbb
outs
mov
bound
test
call
push
adc
mov
into
dec
mov
adc
das
xor
call
cdq
movs
or
sub
test
fwait
in
mov
aam
scas
cmc
pop
shr
das
pop
(bad)
aas
clc
loop
stc
fwait
(bad)
stos
ret
outs
push
xchg
mov
adc
dec
lods
inc
lock
pop
or
iret
movs
push
xchg
imul
add
imul
mov
fld
mov
inc
fld
(bad)
jecxz
(bad)
in
lock
out
shr
movs
js
jecxz
fild
pushw
fwait
xchg
cmp
xchg
fs
jecxz
inc
pop
stc
out
movs
dec
or
stos
mov
sub
sub
in
inc
mov
into
sbb
dec
sbb
pop
ja
addr16
inc
ret
jbe
inc
fst
dec
dec
loopne
neg
loop
mov
xchg
(bad)
push
retf
push
scas
adc
call
stos
jmp
mov
xchg
add
nop
adc
mov
and
jl
call
jnp
jns
sub
ficom
retf
rcr
sbb
stos
fldcw
xchg
pop
mov
adc
iret
aad
adc
jno
repnz
iret
loope
rcr
pop
cmp
push
push
and
cmp
dec
xchg
fcom
ins
add
mov
add
addr16
xchg
movs
ret
iret
or
or
jle
int
mov
lods
inc
jbe
mov
aam
jnp
in
pop
out
mov
aad
pop
inc
mov
fidivr
adc
jmp
aad
clc
movs
cs
movs
inc
mov
add
push
and
mov
dec
add
rol
enter
push
leave
xchg
out
movlps
test
add
mov
cmp
daa
xor
jmp
ret
xor
outs
shr
cmp
jb
je
xlat
scas
sbb
xchg
jns
fisttp
pop
imul
repz
xor
test
mov
out
int3
rcl
and
push
ror
aad
push
xchg
cmps
icebp
sub
jo
pop
cmp
push
add
mov
mov
jecxz
xor
or
jno
js
leave
test
fisttp
xlat
dec
sbb
das
and
int
stos
rcr
addr16
xor
movd
push
pop
scas
inc
loop
fist
xor
enter
xor
shl
push
xchg
inc
clc
push
mov
xor
cdq
adc
outs
dec
outs
lods
or
push
arpl
rcpps
sub
push
ins
push
fnstcw
pop
or
jbe
xor
dec
dec
xor
xor
add
pop
add
(bad)
jb
repz
lea
loop
mov
xchg
out
movs
fbld
push
sar
mov
push
into
jg
jo
jmp
add
cld
add
retf
pusha
push
fmul
pop
mov
mov
mov
xchg
xor
sar
pushf
nop
es
adc
imul
pop
out
ret
push
jb
(bad)
and
hlt
out
mov
mov
mov
call
or
(bad)
iret
mov
repz
adc
popf
mov
jns
mov
xlat
jns
out
dec
mov
sub
pop
push
jbe
push
xchg
jp
ficomp
mov
jl
aam
dec
xor
xchg
(bad)
mov
push
jnp
aas
cmp
mov
aas
or
inc
sbb
mov
neg
fnstcw
inc
call
hlt
xor
mov
ins
lock
and
or
aad
jle
xor
cmp
fisttp
add
ins
push
(bad)
jle
arpl
jo
or
mov
push
lock
xor
mov
fidivr
cmp
fcomp
or
dec
js
loope
jecxz
dec
inc
and
adc
std
out
fwait
nop
adc
adc
or
cmps
(bad)
addr16
jae
pop
clc
aad
pop
scas
in
das
adc
xchg
push
daa
xor
jnp
sar
fsubr
push
push
je
add
jl
jae
int
jmp
outs
rcl
add
cmp
xchg
inc
lea
pop
mov
(bad)
lock
jp
mov
add
jmp
lahf
outs
xor
mov
leave
data16
dec
bound
add
jo
sar
xchg
push
popf
or
pop
cmovae
add
lds
cmp
push
mov
cmp
pop
std
daa
sti
push
push
out
mov
pop
repnz
mul
dec
(bad)
loope
mov
sahf
jno
aas
jne
call
cli
inc
ret
movs
mov
mov
bound
repnz
lahf
stos
aad
sbb
jo
ins
popfw
inc
lods
mov
add
movs
xchg
mov
mov
outs
xor
mov
dec
lds
jl
arpl
push
inc
mov
out
ror
mov
lods
push
add
xor
retf
repz
dec
sbb
call
hlt
inc
and
div
jne
bound
xchg
cmp
ss
xor
pop
ds
mov
push
out
xor
pop
lahf
xor
and
add
das
xchg
push
mov
mov
mov
psrlw
scas
adc
(bad)
cli
nop
or
test
addr16
dec
fmul
push
xchg
adc
pop
mov
das
add
xor
(bad)
rcr
fdiv
or
sub
scas
int3
test
xchg
adc
xlat
cmp
sbb
inc
cmp
repz
aam
in
scas
push
lods
bound
xor
fsub
iret
into
aaa
not
sti
pop
sti
push
in
cwde
hlt
adc
jmp
ja
jp
push
ror
mov
in
jmp
mov
add
aas
mov
ja
mov
cmps
sub
add
fild
sub
fcomip
int
pop
pop
pop
(bad)
out
sar
pop
or
pop
mov
(bad)
mov
lea
push
fwait
jnp
pop
pop
push
sbb
jne
push
test
sub
add
push
push
mov
push
fsub
loope
jecxz
iret
in
jp
fldcw
push
jle
and
cs
frstor
hlt
mov
jp
xchg
aas
imul
inc
cmp
mov
xor
ds
movs
push
aad
stos
or
in
out
xor
scas
or
fwait
push
imul
aaa
dec
sub
pop
xor
test
out
push
push
jae
mov
xchg
out
xchg
sub
aad
sub
push
loop
fldcw
mov
sub
push
push
cmp
jb
shr
inc
jbe
mov
mov
gs
sub
repz
cld
xchg
push
(bad)
fild
stc
lock
gs
jle
repz
push
invd
or
jl
pop
jae
out
adc
fucomip
fwait
aaa
std
inc
or
icebp
inc
sbb
mov
add
cwde
shl
sti
les
call
imul
sbb
mov
adc
push
mov
mov
icebp
dec
aaa
adc
jne
jne
lods
hlt
mov
push
(bad)
int
fidivr
lock
sbb
pop
daa
ret
dec
jecxz
push
imul
add
loop
mov
pop
and
ins
fidiv
fstp
in
and
pusha
jp
cmp
mov
sbb
shr
xor
mov
adc
pop
mov
call
sub
std
sub
(bad)
mov
outs
leave
aam
sub
pmuludq
mov
push
ret
pop
inc
test
mov
jp
ficomp
push
or
in
fcmovnb
lods
inc
sar
pop
scas
out
out
adc
adc
data16
ret
mov
scas
push
shl
mov
outs
sub
push
fnstcw
push
mov
imul
fld
lds
call
aaa
inc
mov
stos
shr
stos
pop
popf
xchg
mov
bound
lods
adc
out
loope
arpl
cwde
inc
xor
jle
pusha
out
fcomip
fs
mov
jecxz
(bad)
and
mov
fist
jge
xchg
xchg
daa
cmc
add
mov
fiadd
std
(bad)
cmp
push
jmp
mov
int
pop
ins
fcmovu
mov
push
jno
cs
jno
adc
add
je
cmps
xchg
push
inc
daa
test
xchg
int
in
out
ja
(bad)
jl
lds
mov
out
push
clc
icebp
cmp
std
lea
fisttp
sbb
cwde
(bad)
call
into
and
fs
mov
adc
gs
int3
adc
adc
cmp
push
dec
cmp
iret
mov
stos
push
mov
add
jbe
xor
cmp
test
pop
fucomip
inc
jns
(bad)
xor
test
push
shl
mov
xor
and
sti
mov
cmp
and
xor
es
aas
sub
cmp
lahf
cmp
inc
push
sti
sub
jnp
xchg
push
in
pusha
movs
xor
xchg
gs
xchg
out
and
clc
jmp
push
cmps
ficom
cmps
fdivr
or
scas
push
fild
cdq
push
cmp
and
shl
jp
ror
add
fcmovnu
push
mov
or
sub
scas
mov
add
aas
adc
xchg
scas
inc
jne
xor
stc
jno
add
cwde
nop
jne
and
ret
ins
shl
call
mov
lods
cmps
pop
push
ja
arpl
cdq
mov
dec
jb
out
nop
enter
fld
fcomp
xchg
push
enter
test
in
push
cmps
xchg
xor
sub
mov
imul
rcl
bound
mov
lahf
ds
xchg
inc
imul
and
sub
add
adc
push
mov
aam
jle
xor
and
scas
test
das
test
ret
fwait
xchg
pop
bound
scas
fdivr
es
cwde
jl
cmps
sbb
dec
(bad)
lods
ret
ret
and
out
dec
jmp
mov
sbb
cmp
sbb
(bad)
out
cmp
imul
pop
retf
jne
inc
add
and
(bad)
call
lea
mov
outs
(bad)
and
imul
push
shr
retf
arpl
ins
push
adc
ins
push
adc
inc
jne
popa
jmp
cmc
into
test
inc
fs
dec
hlt
mov
push
or
adc
inc
out
leave
fcomp
adc
(bad)
loopne
jg
push
pusha
into
jne
nop
add
ret
cmp
mov
sbb
pop
mov
jle
mov
push
mov
test
popa
imul
dec
add
out
movs
mov
cmp
or
(bad)
sub
mov
mov
fbld
loope
xchg
jb
imul
jl
push
mov
fild
cmp
push
push
ficom
add
jb
jo
push
lahf
dec
mov
xchg
ficom
shr
jmp
shr
mov
movs
scas
xchg
and
jmp
ret
imul
mov
movs
pop
outs
sub
mov
lea
shl
or
xchg
jle
dec
sti
mov
mov
test
neg
mov
mov
jmp
jmp
xor
xor
call
xchg
xchg
ret
xor
repz
lock
dec
in
mov
(bad)
mov
sub
mov
fidiv
stc
or
jle
inc
mov
ret
lods
mov
lahf
mov
adc
loopne
jl
lds
push
or
(bad)
push
or
jmp
inc
daa
sbb
adc
mov
into
call
test
fbstp
test
and
scas
xchg
out
setne
push
test
or
loop
aaa
cmp
frstor
cmps
and
sbb
mov
xor
xor
xor
jne
pushf
ds
xor
in
or
fwait
in
jge
or
dec
aas
jo
cmp
jae
idiv
in
out
push
movs
push
and
arpl
or
int
fcmove
out
or
das
jnp
aad
rol
or
leave
call
popf
ror
xchg
enter
xor
test
add
iret
mov
xor
and
aad
nop
fidivr
sub
lea
lods
dec
test
lods
mov
sub
out
ja
mov
les
lods
cmps
mov
fs
xchg
dec
lock
push
mov
sub
hlt
dec
inc
popa
std
xchg
sub
or
xor
jge
add
fdivr
push
test
call
std
pushf
sub
ret
fimul
fild
ins
stos
mov
cmc
ins
and
add
mov
jne
mov
pop
mov
mov
mov
jp
fiadd
cwde
pop
rol
in
popf
clc
je
arpl
leave
shl
std
movs
dec
mov
inc
fisub
jge
and
shl
enter
stos
jbe
mov
lahf
enter
sub
add
inc
cmp
and
inc
hlt
xchg
xchg
iret
outs
fsub
xchg
arpl
inc
dec
push
fst
ds
or
test
inc
(bad)
jb
lahf
pop
xchg
sti
fadd
out
gs
xchg
push
popf
or
imul
pop
loope
or
iret
xor
ret
cld
movs
call
cli
mov
ins
scas
jmp
mov
lahf
jmp
push
mov
xchg
adc
psubsw
stc
repz
or
inc
pop
ins
addr16
add
lahf
test
sar
or
jo
mov
enter
(bad)
stc
mov
push
mov
xchg
jmp
mov
ins
pushf
dec
(bad)
mov
ret
imul
das
xchg
cwde
xor
jge
shl
mov
push
rcl
aas
or
movs
fcmovu
sub
ficomp
mov
inc
or
push
rcl
push
sub
inc
les
mov
int
gs
out
and
sar
add
and
inc
repnz
dec
call
sti
jge
iret
ins
icebp
cmps
(bad)
aad
sub
and
bound
sbb
test
mov
into
jge
fst
mov
add
retf
ret
jne
xor
xchg
js
add
inc
(bad)
ficom
(bad)
pop
shl
mov
and
jnp
retf
mov
pop
and
jmp
sbb
adc
push
jo
cmp
bsr
fwait
xchg
mov
mov
popf
push
sbb
adc
shr
sub
mov
sbb
xor
push
fiadd
jle
(bad)
out
sub
ret
add
push
pop
aas
repnz
or
cli
mov
loopne
retf
sti
rol
aaa
sbb
adc
loop
cwde
mov
loop
rcr
push
jnp
add
inc
mov
cmc
jne
jno
add
call
cmc
xchg
aas
(bad)
imul
sub
sub
cwde
enter
cmps
push
nop
aam
pusha
ret
jno
rcl
arpl
lods
fmul
and
adc
adc
jmp
ja
(bad)
int
fistp
bndstx
push
ss
push
cmc
pop
jno
cdq
mov
xchg
cmp
je
out
rol
xor
xor
sbb
xchg
gs
inc
lock
mov
fst
jmp
lods
test
inc
cmps
in
adc
aaa
sub
pop
pop
mov
xlat
stos
push
pushf
addr16
dec
pop
xchg
push
add
aad
sub
mov
pop
xor
jbe
ror
sbb
int
mov
lea
call
stos
xor
daa
push
cli
(bad)
cmp
fidivr
mov
push
in
sub
bound
stos
jb
(bad)
cli
sub
jnp
(bad)
cmp
test
arpl
movs
ins
jmp
fmul
push
push
push
mov
xlat
add
mov
add
int
in
or
mov
test
xchg
inc
dec
(bad)
xlat
and
mov
jbe
sbb
stos
cmp
cmp
jnp
fmulp
movs
add
mov
push
loopne
shl
loope
adc
jmp
test
js
scas
adc
cmp
test
outs
sti
jno
mov
clc
call
xchg
xor
enter
dec
call
enter
cmp
dec
mov
jo
fs
fcomp
and
(bad)
int
sbb
or
adc
dec
sbb
xchg
mov
lods
ins
fwait
sub
adc
mov
dec
pop
pop
movs
mov
mov
ficomp
imul
pop
repnz
xor
ficomp
inc
pop
shr
outs
pop
pushf
movs
jecxz
outs
mov
jge
shl
or
pop
inc
sbb
cmp
pop
pushf
jg
and
aaa
add
mov
pop
les
sbb
xlat
comiss
mov
ins
aad
ss
sub
jle
(bad)
mov
jge
pop
mov
cwde
aam
mov
sub
icebp
addr16
arpl
cmp
mov
dec
out
js
jno
jbe
ror
jb
pop
xlat
dec
imul
mov
test
fnstenv
popf
dec
gs
jge
test
sbb
(bad)
cmovnp
les
clc
add
frstor
xor
ficomp
popa
xor
add
jg
sbb
push
stos
aas
mov
pop
fcomp
sbb
nop
mov
xchg
xor
jp
sbb
pop
xor
sbb
ror
outs
xchg
retf
aad
sub
aad
mov
mov
sti
mov
dec
xchg
fstp
fsubrp
ss
(bad)
(bad)
jecxz
dec
inc
mov
push
pop
iret
xchg
aad
shl
or
neg
fsub
mov
mov
or
and
stos
ins
in
xchg
fmul
dec
stos
adc
jecxz
pop
mov
cld
iret
daa
into
dec
das
cdq
xchg
iret
in
add
outs
outs
repnz
sub
inc
rcr
test
push
cmp
enter
aaa
mov
sub
fnstcw
mov
xchg
aam
jmp
aad
sub
imul
cli
fcmovne
push
rol
sahf
in
sbb
or
std
xlat
mov
sar
and
fmul
(bad)
mov
xchg
rol
add
les
mov
in
ss
pop
pop
lds
lock
inc
shl
ins
mov
xchg
test
test
mov
adc
(bad)
dec
cwde
xor
ja
or
dec
movs
lahf
mov
mov
ins
or
inc
pushf
mov
jp
inc
pmulhuw
ds
mov
xor
mov
pop
push
inc
adc
test
xchg
fadd
xchg
inc
xchg
cmp
test
popa
movs
inc
cmp
pop
adc
adc
adc
jmp
dec
loope
xchg
xchg
ds
fsub
or
stc
cmp
mov
pusha
scas
popf
jg
pop
mov
sbb
repnz
cli
mov
or
xchg
push
mov
(bad)
push
cwde
dec
mov
and
sbb
adc
jnp
mov
fwait
xchg
add
cmp
outs
adc
ffreep
int
dec
loopne
rol
hlt
data16
adc
(bad)
cmc
fidivr
mov
jmp
mov
dec
xor
pop
sbb
out
ret
je
xchg
pop
fs
mov
sub
cmc
or
sbb
lods
out
sub
pop
dec
idiv
push
adc
fbstp
ins
rcl
push
retf
arpl
lahf
jb
out
std
xchg
push
adc
fsubr
mov
pop
retf
les
vunpcklps
push
jne
jno
repz
cmp
pop
push
jle
and
adc
test
movs
inc
mov
cmp
nop
adc
xor
pop
adc
rcl
rcr
sbb
jecxz
clc
or
xchg
xchg
popf
mov
xchg
adc
or
xchg
outs
inc
arpl
xchg
pop
ss
inc
push
dec
mov
xchg
mov
inc
shl
adc
push
push
inc
inc
lds
bound
or
pop
sahf
jg
into
imul
inc
lds
mov
cs
or
daa
sub
scas
add
sub
dec
mov
cmps
add
jnp
scas
mov
gs
jecxz
inc
lock
xchg
cmp
and
or
xor
mov
or
test
xor
add
lods
sbb
inc
outs
dec
inc
push
in
clc
lods
xchg
pushf
inc
lahf
sbb
adc
dec
add
pop
iret
int
hlt
bound
push
lods
dec
jb
pop
call
dec
icebp
pop
push
mov
and
or
cmps
mov
mov
shr
daa
push
fstp
(bad)
call
ss
xchg
pop
and
xchg
adc
daa
adc
mov
cmps
add
pop
sti
mov
(bad)
popf
xchg
jecxz
jne
push
mov
in
pop
in
mov
data16
call
lea
out
mov
fwait
mov
rol
and
scas
fistp
iret
pop
inc
test
push
jge
or
clc
mov
(bad)
pop
aad
adc
inc
mov
pop
or
sti
adc
and
and
test
ror
bound
jmp
push
pop
test
adc
mov
push
pop
sbb
les
loopne
pop
sbb
mov
jo
loope
lock
mov
mov
dec
bound
mov
push
xlat
push
icebp
fisub
retf
cmovno
out
mov
popa
xchg
jne
je
xchg
xor
out
push
push
mov
lea
stc
test
(bad)
fwait
pop
and
add
(bad)
ins
outs
mov
imul
cmps
loop
lds
cmps
shl
xor
(bad)
repnz
movs
mov
loope
mov
mov
sub
into
(bad)
arpl
dec
test
scas
xchg
into
mov
or
cli
cli
xchg
in
push
leave
mov
add
xchg
popa
add
mov
push
ds
adc
mov
mov
out
js
aaa
jmp
stos
dec
mov
mov
mov
ss
xchg
xchg
pop
js
popa
dec
pop
iret
or
fs
mov
(bad)
sbb
jle
popa
addr16
cld
jo
les
add
gs
loopne
add
hlt
stos
xor
xchg
data16
pop
clc
mov
pop
mov
dec
mov
jge
idiv
mov
aad
ja
repnz
mov
fs
addr16
js
inc
xchg
push
xchg
push
or
mov
inc
cmp
lods
pop
sbb
rcr
outs
sub
mov
movs
cmp
ins
lock
xchg
adc
out
jle
xchg
fiadd
sub
push
daa
inc
loope
fdivr
in
cs
mov
add
jmp
imul
mov
rcr
pop
adc
cli
fwait
ja
mov
(bad)
cs
pop
les
(bad)
les
outs
or
div
or
and
enter
and
sbb
cmp
adc
in
lsl
pop
cmp
stos
lods
in
shl
test
jle
test
push
or
sub
loopne
sub
xchg
nop
stos
fadd
dec
cs
std
sar
js
add
sbb
out
cmp
adc
inc
stc
mov
adc
mov
(bad)
dec
clc
arpl
push
fiadd
mov
adc
fbld
dec
push
cmp
daa
aam
mov
js
fnstsw
xlat
aad
into
sbb
sbb
mov
fwait
fs
or
clc
outs
push
cmp
push
push
or
or
idiv
pop
call
sbb
pop
aaa
push
adc
daa
retf
adc
imul
dec
js
in
and
clc
xor
sbb
test
repz
cmps
cmp
xor
rol
or
add
and
lahf
sub
movs
add
and
adc
cld
(bad)
popa
les
mov
leave
sub
lods
ins
sub
loop
(bad)
dec
pushf
scas
or
cmps
(bad)
or
jp
pop
lods
mov
ficom
out
fcmovne
jp
sbb
dec
ds
sub
adc
cmps
test
rcl
xchg
into
ins
movs
sub
jp
xor
sub
inc
mov
(bad)
out
lock
xor
jl
inc
ror
test
fild
ins
dec
inc
push
or
push
dec
xchg
sub
add
(bad)
dec
mov
jg
cmp
mov
ror
gs
in
out
mov
sub
stc
or
pop
daa
xchg
jecxz
movs
or
mov
pop
jae
outs
out
sub
mov
mov
add
shr
fild
xchg
int
jbe
adc
(bad)
imul
mov
sbb
mov
dec
repz
lahf
pop
mov
popf
inc
out
pop
dec
cwde
xor
and
mov
inc
add
lods
jg
ficom
test
es
jnp
pusha
mov
or
fisubr
or
and
jmp
fs
jb
cdq
mov
sbb
pop
xchg
shl
loope
ffree
retf
bound
inc
lahf
or
cmps
rol
jl
fs
aas
xor
xor
jae
push
or
(bad)
popa
cmp
jne
xchg
movs
outs
mov
test
push
or
ret
pop
xchg
inc
mov
dec
jno
pushf
xor
sub
movs
out
div
and
and
mov
lods
call
fist
add
fcom
stos
sbb
mov
lods
sub
jecxz
shl
cmp
aaa
push
shl
daa
mov
sbb
ret
repnz
inc
push
pop
dec
lods
pop
and
jnp
or
in
fimul
fld
sbb
gs
inc
dec
gs
test
push
pop
mov
pop
jle
aaa
arpl
mov
add
lea
retf
push
call
icebp
pusha
fmul
in
inc
or
push
sub
daa
sbb
xchg
rcr
hlt
jmp
in
jne
or
pop
sbb
mov
(bad)
jmp
hlt
fcomp
pop
add
call
push
ins
pop
xor
adc
lea
add
sti
mov
(bad)
icebp
test
mov
ss
adc
pop
fwait
jecxz
adc
std
dec
leave
adc
frstor
push
xchg
rcr
loop
imul
push
add
sti
fsubr
stos
ins
lahf
lea
adc
popa
xchg
and
rol
fist
in
pop
test
jbe
push
push
lods
mov
loope
push
adc
pusha
adc
dec
push
icebp
pop
mov
mov
je
aam
inc
in
push
adc
mov
jb
adc
arpl
lods
mov
jge
dec
call
pop
ins
daa
push
imul
jmp
(bad)
out
xor
jne
mov
ss
(bad)
std
and
pop
call
adc
sti
outs
gs
xor
or
fcom
dec
or
jbe
jnp
xor
push
pop
bound
movs
fbstp
popa
push
iret
push
xor
popa
push
cmc
inc
pop
je
cmps
das
push
sti
add
call
add
sub
stc
dec
in
xor
xchg
and
add
fucom
stc
mov
dec
mov
mov
dec
out
pminsw
xor
idiv
(bad)
or
mov
cld
xchg
out
jbe
loope
lods
(bad)
dec
cmp
xor
and
jae
retf
arpl
into
retf
jmp
fimul
inc
call
dec
xchg
jmp
push
lods
add
call
movs
mov
inc
js
cld
stos
and
nop
cmp
pop
pop
mov
cld
jmp
add
push
loopne
outs
stc
pop
ret
call
inc
add
shl
clc
xlat
inc
stos
sbb
stos
or
mov
adc
mov
je
cmp
and
or
pop
xadd
adc
inc
fstp
mov
xchg
mov
mov
adc
xor
push
repz
and
add
int
dec
mov
mov
(bad)
(bad)
ja
div
retf
fisub
rcl
in
stc
rcl
sar
sahf
hlt
xor
sbb
jmp
test
pop
inc
sar
adc
jmp
inc
mov
mov
sbb
or
mov
dec
xchg
jno
or
and
stc
fsub
inc
xor
mov
imul
sub
repz
in
push
push
adc
inc
cmps
fisub
fmul
xor
mov
pop
in
je
(bad)
adc
pop
stc
loope
std
xor
mov
sub
imul
xchg
popa
and
or
inc
jno
mov
mov
out
mov
push
call
aas
adc
mov
in
mov
sub
cmps
inc
jle
test
aas
push
inc
inc
mov
lock
jo
cli
sbb
jmp
daa
jo
add
mov
push
mov
add
sbb
data16
jnp
push
mov
mov
mov
gs
lock
mov
sti
push
js
outs
(bad)
cmp
daa
(bad)
scas
retf
inc
mov
mov
mov
xchg
mov
pushf
adc
push
xchg
fidivr
nop
inc
or
leave
mov
mov
sub
aam
scas
aaa
jmp
es
and
inc
out
and
mov
pop
imul
cmp
aad
outs
retf
leave
retf
rol
arpl
sbb
add
adc
aaa
jne
mov
call
mov
mov
rol
mov
(bad)
inc
or
lea
dec
popa
push
jmp
fwait
std
lods
cmp
xor
movs
fcom
mov
stc
mov
mov
sbb
dec
mov
inc
std
call
mov
xchg
jmp
ja
sub
mov
sub
and
jl
call
mov
dec
cmps
in
mov
stos
(bad)
popa
inc
jle
add
ret
test
gs
in
gs
pop
dec
or
scas
(bad)
div
daa
ds
or
inc
imul
adc
sbb
js
sub
adc
xchg
call
pop
mov
nop
mov
push
pop
jecxz
sbb
or
imul
ret
cld
add
jo
imul
push
sti
ror
scas
mov
rcr
xor
push
imul
(bad)
(bad)
mov
sbb
cmps
adc
adc
mov
cmp
aam
mov
(bad)
icebp
add
jp
dec
mov
mov
aaa
push
mov
imul
ins
push
xor
push
jle
mov
lds
push
fnsave
mov
aad
sub
mov
sub
js
and
in
imul
or
mov
cmp
aas
cli
clc
idiv
mov
jmp
js
mov
ror
cmp
jns
jae
std
cmc
fld
push
sub
and
mul
cmp
es
push
xor
xlat
test
mov
adc
dec
retf
pop
ficomp
sub
ins
js
loop
mov
in
cmp
inc
fdiv
dec
dec
ffree
mov
sub
cld
cli
jne
bound
mov
(bad)
jmp
test
push
xor
stos
dec
and
mov
shr
mov
ds
sbb
sti
sahf
cmc
mov
(bad)
stos
push
push
js
add
push
jnp
mov
cli
add
jmp
lock
loopne
sub
xchg
and
inc
pushf
jb
push
cmp
mov
cwde
jo
es
mov
(bad)
pop
push
inc
xchg
fcomi
cs
rcr
shr
cmps
(bad)
or
aam
mov
xlat
test
pop
jb
ja
imul
push
ins
fisttp
cmps
push
mov
xchg
jmp
daa
mov
sub
repnz
ret
xchg
jmp
es
sub
fcmovu
sub
inc
das
loope
cwde
xor
pop
and
aam
sbb
ficom
scas
adc
cmc
dec
test
std
xchg
dec
shl
iret
pusha
mov
or
xchg
xchg
cmp
retf
stos
xor
imul
repnz
in
or
test
lds
sub
sub
sbb
cdq
jmp
es
in
jns
cwde
call
movs
mov
loope
retf
sub
ja
mov
sub
pop
jl
dec
push
scas
adc
out
aas
retf
fs
xchg
and
cmps
push
inc
cmp
mov
call
push
push
mov
adc
xor
push
push
mov
call
cmc
xor
adc
test
push
jo
mov
push
jp
and
(bad)
int3
or
sub
inc
stos
ret
mov
stos
sahf
xor
stos
sub
aaa
das
or
push
stos
sbb
cwde
retf
inc
or
and
into
xor
rcl
cmps
pop
ficomp
inc
mov
inc
and
xchg
xor
mov
addr16
hlt
pop
pop
push
inc
jmp
in
daa
cld
inc
(bad)
call
das
sub
sub
cmp
inc
fmul
loope
push
adc
jbe
loop
mov
imul
add
lds
pop
mov
mov
dec
fsub
call
dec
jmp
sbb
jb
xor
sub
outs
mov
pop
js
push
stc
mov
clc
movs
leave
dec
scas
popf
aam
(bad)
rol
outs
loope
in
(bad)
fcomp
adc
push
popf
enter
mov
mov
fldcw
out
xlat
mov
adc
rcr
ins
mov
scas
add
es
bound
fist
cmp
fidiv
mov
sub
pusha
lock
inc
mov
sti
push
aam
enter
mov
int3
cmps
mov
cmps
adc
and
jb
bswap
scas
loop
add
rol
xchg
mov
xlat
out
adc
mov
loopne
push
sar
leave
aad
pop
popa
test
daa
mov
loop
dec
dec
xor
rcl
scas
daa
add
lea
push
pop
xchg
xchg
mov
(bad)
sub
out
cmp
adc
cmp
lods
ret
lods
mov
fsubr
and
mov
inc
fist
sbb
mov
jl
test
enter
cs
sub
push
dec
popa
or
dec
jne
rol
jnp
sbb
jle
and
and
jmp
and
sahf
mov
enter
jle
xchg
pop
dec
test
lods
nop
or
enter
daa
dec
pop
cmp
sub
out
sbb
daa
ins
(bad)
cld
fstp
jge
xor
icebp
out
adc
cmp
sbb
gs
out
jmp
dec
(bad)
call
push
into
xor
aaa
adc
icebp
pop
xor
mov
loopne
dec
ret
pop
jge
jl
es
pop
push
mov
into
mov
ret
cmp
cmc
(bad)
mov
inc
mov
loope
and
xchg
daa
pop
xor
cmp
fs
mov
sar
(bad)
sbb
or
(bad)
out
es
inc
into
into
cmp
out
das
add
enter
das
jno
repnz
inc
gs
or
jbe
cli
or
push
adc
add
sub
and
sbb
push
in
mov
jp
rol
cmp
fstp
cwde
dec
push
add
dec
xchg
and
cmps
repnz
mov
adc
xor
pop
mov
adc
pop
shl
mov
pop
xor
ins
out
or
retf
(bad)
jecxz
movs
sbb
and
out
shl
cmp
sbb
sbb
inc
lock
inc
add
cli
push
test
push
jmp
adc
pop
dec
es
out
loope
jbe
jne
jb
or
retf
sub
mov
cmp
int3
(bad)
mov
mov
hlt
sub
ret
test
mov
fwait
loope
jo
jmp
call
sbb
retf
pusha
lock
fsub
cs
push
out
cs
pop
in
inc
push
cmp
mov
retf
in
sbb
jge
(bad)
cmp
out
fwait
pusha
retf
cmp
and
and
imul
inc
sbb
inc
xor
add
jle
xor
mov
ja
xchg
xor
sub
shl
les
push
mov
cmp
pop
aas
pop
mov
xchg
loopne
dec
jo
push
call
jmp
adc
push
inc
test
repz
adc
ja
push
fs
jp
inc
call
dec
dec
xor
jns
sub
rep
jne
or
retf
call
ja
push
cmp
loop
mov
push
inc
jae
outs
pop
mov
ds
fisubr
aam
test
lds
cmc
lds
or
cmp
adc
push
out
dec
pop
mov
shl
ficomp
mov
sar
repz
repz
xchg
xchg
mov
add
cld
cmp
dec
xchg
outs
xchg
dec
add
mov
pop
nop
pusha
sbb
xchg
test
sar
fcomp
repz
pushf
popa
sbb
in
es
xchg
inc
jl
push
add
xchg
mul
fisubr
push
xchg
enter
mov
pop
dec
or
push
loopne
inc
sub
bound
cmc
sbb
int
xchg
inc
rcpps
xchg
aam
or
cmp
push
ins
mov
not
rcr
les
retf
xchg
sub
aam
mov
inc
jmp
pop
ds
push
ds
lods
and
push
mov
pop
lods
pusha
fld
rcr
sbb
pusha
cmp
pop
out
sar
stos
pop
add
out
pop
inc
xor
shl
inc
cmp
test
jne
and
in
jo
adc
mov
(bad)
cmp
daa
and
and
das
rol
mov
ficom
imul
pushf
retf
jnp
mov
xchg
out
outs
js
xlat
cdq
stos
icebp
ins
and
(bad)
aaa
sbb
movs
and
xor
mov
xor
daa
fidivr
pop
jle
sysenter
cmp
stos
pop
fisubr
adc
and
mov
dec
sub
and
shl
sub
push
test
jne
sbb
mov
int
lods
cdq
scas
icebp
mov
nop
int3
xchg
jl
inc
(bad)
repnz
push
push
or
or
mov
js
mov
sub
into
popf
xor
push
mov
mov
mov
cmp
sbb
xchg
or
mov
movs
scas
mov
sbb
push
mov
push
add
scas
jnp
mov
icebp
or
push
or
lea
ficom
dec
popf
test
test
leave
pop
cmps
int
stos
push
ret
push
idiv
pop
jmp
rol
jp
loop
test
pop
sar
jge
mov
and
int
adc
cmp
lds
dec
jns
scas
ins
xor
dec
inc
cmp
inc
cmp
jmp
js
sub
push
daa
adc
ret
adc
loopne
rcr
xchg
xchg
jae
inc
(bad)
jl
cmp
adc
sbb
jno
in
mov
test
dec
jecxz
stc
push
jle
cmp
and
test
mul
cld
sub
das
jbe
ja
call
pop
aas
(bad)
push
movs
ret
cld
nop
(bad)
js
mov
mov
cvtps2pi
xchg
retf
jecxz
out
in
imul
xor
mov
mov
dec
add
xchg
sahf
gs
sub
pop
sbb
inc
stos
(bad)
sbb
pop
xchg
cs
test
mov
mov
idiv
push
lea
mov
mov
adc
xchg
stc
cmp
pushf
test
push
pusha
pop
cmps
add
mov
xor
push
pop
push
lea
xor
fwait
lods
add
xor
inc
mov
mov
jg
and
ret
xchg
mov
xchg
out
adc
dec
rol
repz
popa
push
inc
pop
enter
iret
lock
jle
shl
cmp
mov
popa
stos
adc
addr16
clc
pop
sub
jl
jb
mov
pop
dec
jno
cmps
sti
push
mov
inc
sbb
dec
and
pop
packssdw
stc
inc
mov
int
fs
adc
xor
loopne
bt
sbb
adc
cld
jmp
mov
push
es
lock
or
jbe
jbe
test
jmp
sbb
push
jnp
sbb
pop
dec
sub
addr16
cdq
fidiv
and
jbe
das
mov
(bad)
adc
(bad)
or
pop
or
sub
pop
stos
mov
sbb
adc
mov
sbb
shl
mov
daa
inc
jns
test
rol
push
pop
stos
inc
ret
test
sbb
dec
mov
repnz
nop
enter
or
sti
xchg
ficomp
(bad)
pop
jmp
es
(bad)
jge
jae
cli
mov
inc
clc
adc
inc
jl
push
in
mov
(bad)
(bad)
(bad)
push
iret
loopne
outs
fimul
push
push
test
xchg
cmps
fst
mul
std
inc
addr16
mul
dec
imul
dec
std
mov
push
dec
sbb
push
cmp
fcomip
jo
fdiv
mov
fistp
inc
imul
pop
scas
xor
adc
iret
push
dec
inc
outs
or
dec
or
hlt
cli
pop
imul
stos
dec
stos
neg
fmul
addr16
outs
and
movs
push
sbb
fldenv
lock
fdivp
sub
cli
adc
enter
cmp
jp
(bad)
retf
out
imul
movs
imul
loop
cmps
fabs
call
or
(bad)
aas
mov
test
mov
mov
pop
scas
jg
xor
inc
outs
ins
(bad)
fdiv
popa
xchg
sbb
aam
jmp
mov
and
lods
jns
rol
jbe
movs
dec
iret
fadd
sbb
js
pop
adc
dec
push
(bad)
movs
xor
lods
in
adc
push
arpl
mov
(bad)
jl
sti
push
mov
jo
in
int
push
mov
or
pop
daa
inc
sbb
rcr
xchg
jg
inc
and
adc
jbe
push
jns
daa
rol
out
aam
je
je
xchg
dec
icebp
gs
jl
repz
ret
xor
pop
in
xor
fadd
mov
retf
cmc
daa
fs
push
(bad)
jns
cmps
adc
call
je
stos
fwait
jecxz
mov
icebp
retf
neg
imul
sti
adc
ret
mov
fisubr
add
add
and
dec
outs
std
pop
movs
sbb
jle
mov
adc
sahf
movs
outs
sub
movs
outs
sbb
cli
xchg
setbe
bound
mov
imul
clc
(bad)
jb
inc
adc
xor
mov
pop
(bad)
aad
and
sbb
lahf
out
pop
sub
add
jns
mov
enter
jg
sub
cld
push
cmp
call
in
sub
call
ja
push
inc
pop
test
inc
jo
data16
daa
mov
xchg
out
int
in
das
cmp
std
inc
jl
xchg
pop
les
push
or
push
sbb
fld
(bad)
outs
dec
jmp
ja
adc
pop
jo
int
dec
sub
ret
push
inc
bound
mov
aam
lock
in
mov
cmp
and
fisubr
push
xlat
lock
(bad)
jp
push
inc
xor
shr
mov
sbb
repnz
push
adc
sbb
mov
test
aad
inc
loop
add
pop
sbb
pop
mov
mov
adc
push
mov
ror
jnp
sbb
in
aas
push
cmp
push
add
fcomp
sbb
ret
leave
mov
fucom
(bad)
jae
or
xor
ret
addr16
fsub
xor
add
ins
movs
test
sub
mov
cmp
xchg
push
jmp
into
pop
sub
inc
in
cmp
sbb
xor
or
std
pop
loopne
add
fcom
add
add
leave
mov
loope
mov
jae
add
daa
mov
fs
mov
mov
(bad)
rcl
fnstcw
ret
lods
mov
test
push
test
sbb
dec
fst
aaa
sub
in
retf
dec
mov
pop
into
sbb
outs
and
popf
xchg
jecxz
shl
sbb
cmp
dec
rcr
push
neg
and
movs
pop
push
dec
into
and
das
push
dec
test
mov
clc
mov
sbb
pop
sbb
mul
push
jne
adc
div
ds
and
int3
mov
xor
or
or
inc
popf
push
(bad)
stos
rcr
dec
rcr
cmp
out
or
ins
repnz
aad
out
push
int3
mov
xchg
icebp
lea
imul
inc
icebp
jnp
iret
outs
mov
dec
push
cmp
or
xor
sbb
ss
das
jmp
ficom
or
mov
push
inc
xchg
pop
jo
mov
and
inc
pusha
or
or
pop
mov
shr
pop
test
mov
outs
neg
sbb
mov
mov
mov
xchg
mov
adc
call
or
ret
xchg
xchg
pop
dec
lahf
ret
cmc
xchg
mov
ja
push
hlt
mov
addr16
adc
add
out
cdq
das
inc
cld
outs
pop
sbb
stos
loope
xchg
das
xor
mov
cld
push
cmps
mov
sti
xchg
movs
(bad)
fwait
scas
xlat
ja
loop
out
arpl
sub
mov
fstp
mov
pop
dec
std
movs
pop
add
pop
pop
inc
fidivr
xchg
adc
pop
pop
sbb
test
pop
stos
jge
sbb
jmp
(bad)
jmp
jge
(bad)
jae
in
cmp
mov
out
adc
jo
into
adc
loope
sub
push
cwde
or
mov
jl
movs
or
sub
fs
icebp
adc
into
and
mov
jb
adc
lods
movs
mov
dec
xchg
retf
stc
mov
and
inc
cmp
cld
mov
popa
stos
inc
push
mov
pop
push
jecxz
movs
sar
stos
add
leave
mov
push
xor
xchg
cmc
adc
and
jno
mov
mov
popf
sub
sub
lock
pop
and
fs
inc
out
jl
out
xor
xor
jl
fisttp
ins
add
cmp
(bad)
jb
and
add
dec
push
and
iret
and
xor
nop
inc
leave
js
out
pop
sbb
mov
jb
movs
push
mov
xchg
imul
jnp
addr16
jp
xor
test
pop
adc
cld
inc
jo
xchg
xchg
(bad)
fistp
sub
test
jle
adc
sbb
mov
and
lock
jb
or
scas
add
(bad)
lahf
fisubr
push
nop
int
popf
data16
add
icebp
push
mov
hlt
fisub
add
ins
adc
sbb
add
cld
lods
test
xor
mov
cmp
mov
or
pop
fst
pop
cdq
mov
mov
sub
fisttp
dec
push
sub
nop
rcr
hlt
fsubr
adc
cmp
jmp
mov
push
xchg
cmp
inc
lahf
dec
ret
aad
xlat
dec
mov
ins
inc
retf
(bad)
pop
retf
retf
pop
cmp
sti
sub
pop
xchg
mov
pop
mov
loopne
add
cmp
inc
daa
adc
lahf
xor
sub
gs
push
sub
gs
movs
cmp
add
dec
or
in
enter
mov
aad
sub
xchg
loop
cmp
pusha
sub
fnstsw
sub
pop
add
cdq
pop
inc
pop
jl
adc
fcom
sub
shr
sar
mov
(bad)
xor
adc
daa
adc
fldcw
pop
jle
outs
and
(bad)
and
push
jmp
fucom
mov
xchg
movs
jge
lock
jo
push
jo
outs
popf
jns
pop
and
xchg
sub
je
add
aam
cmp
shl
and
add
rcl
call
mov
mov
int3
outs
inc
std
and
xchg
sub
xor
ss
rcl
cld
loop
icebp
jecxz
in
loope
pushf
xor
mov
mov
push
xor
and
add
pop
lods
push
and
dec
mov
movs
cmp
mov
dec
call
lods
jmp
es
dec
inc
mov
xor
shr
in
jecxz
mov
test
aam
push
sar
cmp
out
lea
stos
mov
clc
mov
push
or
adc
adc
sbb
cs
mov
mov
imul
jge
movs
cmps
daa
ds
mov
sub
cmp
lods
cmps
adc
add
sbb
xor
push
lock
fs
mov
in
int3
aaa
arpl
(bad)
shr
mov
xor
lock
dec
pop
out
out
add
xor
jl
loopne
mov
inc
dec
push
je
imul
or
pop
cwde
ret
jmp
(bad)
jns
jnp
inc
inc
in
stc
mov
sti
add
pushf
or
not
test
sbb
push
mov
adc
jno
xchg
and
dec
in
nop
dec
je
xor
scas
test
sub
mov
and
aas
cld
and
in
sbb
retf
loope
imul
push
dec
sbb
or
cmps
rol
outs
sub
stos
psrad
jmp
xchg
push
xchg
test
into
or
mov
inc
adc
ret
out
outs
cmp
mov
pop
inc
mov
cmp
out
popa
inc
dec
test
xchg
(bad)
cmp
out
add
pop
jg
inc
clc
es
(bad)
push
(bad)
cmps
xor
sahf
lock
add
int3
add
gs
int
add
mov
(bad)
sbb
pushf
sbb
push
jns
push
pop
ds
retf
push
xor
test
mov
fistp
jecxz
jnp
cs
mov
inc
mov
out
dec
rol
pop
jmp
and
push
add
retf
arpl
pop
jne
(bad)
and
nop
and
nop
(bad)
icebp
in
jg
pop
fwait
add
outs
pop
sub
jae
cmp
pop
mov
imul
popa
push
jge
call
add
push
movs
ret
stos
dec
mov
push
fnstsw
sbb
pop
mov
jmp
fidivr
pop
icebp
cmp
inc
adc
dec
mov
aas
mul
cmp
sbb
pop
dec
out
dec
enter
lds
mov
jo
mov
or
push
stos
nop
into
and
xor
add
pop
jecxz
sbb
mov
test
loop
sbb
push
sub
adc
push
sub
repnz
xor
rcl
jge
and
mov
pop
sets
sub
jmp
ins
test
inc
mov
enter
sub
cmc
jo
mov
fistp
adc
mov
and
pop
stc
fnstsw
cmc
inc
jg
xchg
mov
jl
pop
lds
ficom
ds
push
call
loope
pusha
adc
fsub
(bad)
and
mov
mov
xor
icebp
mov
pop
xchg
add
bound
mov
sahf
int
stos
out
xchg
push
cld
test
lea
add
pushf
inc
inc
in
push
popf
dec
mov
sahf
(bad)
adc
aam
into
scas
sbb
jno
loopne
pushf
sub
sti
bound
(bad)
mov
adc
xchg
hlt
xchg
idiv
leave
and
push
adc
xchg
popa
adc
data16
adc
and
rcr
sub
add
sub
pop
pop
and
xchg
adc
sbb
push
dec
pop
mov
pop
aas
dec
(bad)
(bad)
sti
sub
adc
and
mov
stos
in
or
adc
pushf
add
div
jno
cmps
inc
jmp
repz
das
inc
cmp
imul
push
stc
lods
movs
cmovnp
imul
xor
and
adc
shl
xchg
retf
cmp
sti
cdq
mov
call
das
daa
(bad)
sahf
dec
or
mov
pop
pushf
out
jne
outs
ja
add
push
or
mov
jmp
fisub
inc
xor
xchg
retf
icebp
in
dec
xchg
inc
bt
fisub
out
fsubr
jmp
out
call
dec
jo
in
leave
cmps
mov
cs
jb
sbb
adc
inc
and
mov
jmp
ins
arpl
rcl
gs
pop
fnstsw
xchg
jp
loop
pushf
push
sub
xchg
iret
push
push
outs
xor
mov
nop
mov
std
lods
call
test
idiv
jb
popf
push
add
push
je
inc
lock
mov
sti
fbstp
and
jle
inc
jb
jl
outs
sub
icebp
in
cmp
adc
cs
sbb
jae
push
data16
cmps
add
xchg
out
out
pop
push
pop
(bad)
pop
adc
cmp
int
cld
and
cmp
out
stc
mov
add
push
mov
int
stc
(bad)
stos
cmp
aaa
xlat
loope
lahf
and
add
xor
push
scas
mov
add
adc
test
(bad)
cwde
clc
cmp
dec
fisubr
fdiv
fbld
and
fiadd
xor
jge
mov
dec
ret
or
in
mov
xchg
in
lds
sbb
imul
(bad)
sbb
push
rcr
adc
mov
into
cmp
or
adc
mov
and
mov
add
push
repnz
lahf
mov
add
mov
imul
loopne
inc
inc
cmps
add
mov
call
jg
fiadd
jbe
xchg
mov
cmps
xor
cmp
and
mov
cdq
adc
cmp
loop
icebp
mov
cli
push
mov
adc
add
neg
bound
mov
fild
popa
sub
sub
xchg
sub
fist
popa
loop
dec
setge
(bad)
mov
pop
xchg
xchg
jg
test
loope
sub
enter
movs
sbb
icebp
clc
popa
fstp
or
adc
daa
(bad)
jae
mov
sbb
mov
jl
adc
fist
aaa
loop
sahf
push
inc
mov
mov
iret
pop
lods
popa
xor
daa
dec
in
jno
pop
push
gs
push
in
daa
popf
or
or
sbb
xlat
jns
cmp
out
sti
rol
push
sub
mov
xchg
sar
inc
inc
ins
sbb
(bad)
sub
outs
loope
out
xchg
fisub
xlat
sub
dec
cmp
push
int3
inc
arpl
popa
movs
jmp
jle
sub
(bad)
push
and
lea
mov
cmp
fld
xchg
outs
enter
ds
push
mov
ins
cld
and
btr
out
fs
jo
sbb
add
push
adc
retf
fisubr
adc
mov
jns
fs
sbb
jns
push
popf
gs
cs
es
aam
jecxz
hlt
or
or
mov
leave
arpl
ror
jp
(bad)
sbb
ds
ja
sub
cmp
out
adc
push
inc
aad
pop
sub
mov
mov
pop
cmp
and
fwait
(bad)
leave
inc
scas
or
pop
jg
call
dec
push
js
(bad)
xor
adc
push
sar
lods
dec
or
xor
mov
sub
scas
mov
add
or
cld
dec
sub
cmp
or
pusha
scas
leave
jae
push
pop
es
xor
xor
jge
push
pop
imul
jo
cmp
mov
retf
xchg
push
mov
push
or
mov
call
pushf
mov
cmps
hlt
stos
mov
repnz
call
fwait
ret
imul
and
out
clc
outs
mov
push
out
jae
mov
in
dec
ins
pop
pause
js
lods
jg
add
jle
or
cmp
popa
fsub
sbb
shr
and
pushf
jb
push
xchg
ret
imul
scas
adc
or
dec
xchg
ficomp
lea
push
out
bswap
mov
out
inc
(bad)
movs
inc
cmp
xchg
retf
icebp
lods
add
fs
(bad)
enter
pop
sub
fsub
dec
pop
stos
shl
mov
mov
jmp
std
(bad)
lock
dec
fiadd
add
dec
hlt
jnp
jns
inc
in
push
cwde
daa
cmc
mov
pop
push
push
test
lods
(bad)
push
add
pop
in
es
bound
sub
mov
sub
mov
cld
aaa
mov
jle
push
mov
sub
push
sbb
add
loope
jns
outs
sar
add
iret
mov
mov
(bad)
cmp
jle
repnz
outs
xchg
push
enter
mov
jbe
cmps
jmp
jo
mov
test
pop
add
sub
inc
sub
sub
movs
(bad)
jge
out
pop
inc
mov
inc
push
in
scas
xchg
gs
in
inc
xchg
ret
xchg
std
dec
jmp
stos
imul
mov
mov
ds
or
lsl
pop
mov
fmul
cmps
hlt
sbb
stos
nop
cmps
push
jmp
pop
movs
fldcw
(bad)
sub
scas
pop
xor
test
aas
mov
mov
mov
xchg
pop
leave
push
retf
adc
fild
dec
mul
adc
(bad)
push
cli
fmul
push
xchg
sbb
cmps
loop
push
popa
shl
push
xor
stos
js
repnz
int
pusha
push
jnp
push
xor
pop
cdq
ret
(bad)
pop
push
or
inc
push
mov
imul
cmps
dec
in
retf
movs
push
sub
mov
loopne
fs
pop
fmul
inc
pop
jbe
push
push
adc
cs
mov
addr16
jb
adc
les
mov
aad
push
mov
or
lahf
in
cld
(bad)
loop
pop
and
push
into
pop
push
es
std
sub
cmp
inc
cdq
add
dec
jns
mov
fcmove
test
lea
pop
ins
push
bnd
(bad)
pop
es
loope
leave
call
pusha
cld
xchg
mov
mov
sti
(bad)
cdq
inc
retf
jg
and
and
int3
clc
mov
cmp
retf
ds
xchg
push
bound
pusha
jp
es
sbb
fst
jo
pop
xchg
sub
pusha
out
mov
test
popa
cwde
ret
xchg
loopne
je
sbb
dec
outs
add
pop
jp
mov
ja
lahf
and
inc
ret
mov
lods
sahf
retf
pop
xchg
jmp
adc
cmps
outs
popf
dec
shr
mov
jae
cld
scas
call
cmps
movd
cmp
hlt
pop
xchg
sub
xchg
pop
rol
cmps
movs
dec
jle
test
pop
pop
inc
test
icebp
loop
out
retf
bnd
sub
nop
shr
add
push
mov
sti
dec
lahf
mov
xchg
mov
pop
js
add
aad
stos
stos
iret
outs
sub
dec
repnz
xchg
adc
mov
ds
add
xor
jle
and
mov
dec
mov
mov
daa
adc
add
outs
jecxz
xchg
adc
lea
xor
xchg
push
adc
retf
add
mov
pop
and
push
jbe
inc
test
icebp
popa
in
push
inc
icebp
test
sub
fbstp
cmc
add
ins
je
or
sbb
mov
gs
and
(bad)
aad
loopne
aas
mov
mov
jns
cmp
pop
leave
sub
es
jnp
xor
test
in
adc
mov
cmps
loope
cmc
(bad)
or
cmc
arpl
xor
cmp
mov
shr
fnsave
mov
out
cwde
into
adc
sbb
rcl
mov
pop
mov
out
out
cmp
fbstp
xor
scas
int3
push
pop
push
pop
ja
and
cli
pop
test
jg
mov
(bad)
jne
in
js
cmp
scas
cmc
push
mov
dec
dec
sub
loope
jnp
cmps
sub
(bad)
push
mov
lds
loopne
mov
(bad)
xchg
arpl
cwde
xor
add
int
loopne
sbb
jns
cli
(bad)
int3
les
les
pop
adc
repz
adc
mov
push
jge
std
shl
invd
retf
loopne
dec
add
pop
mov
scas
sbb
inc
imul
(bad)
adc
pop
mov
(bad)
(bad)
add
rol
ins
adc
int
mov
dec
cmc
(bad)
cdq
jge
add
lea
or
mov
jne
repnz
(bad)
rcr
(bad)
inc
mov
xchg
xchg
dec
push
ja
add
scas
leave
fbstp
jecxz
cmps
ret
mov
push
cmc
out
jmp
xor
mov
mov
out
fdiv
or
ins
xor
fdivr
push
(bad)
dec
sahf
adc
(bad)
mov
add
cmps
xchg
popf
add
fdivr
out
loope
test
xchg
push
mov
sbb
sbb
inc
sbb
dec
xchg
xchg
mov
ror
push
mov
and
mov
push
xor
inc
fcmove
sbb
push
add
sti
pop
popa
and
jo
enter
cmp
popa
mov
cmp
nop
js
sbb
mov
adc
shr
sbb
test
aam
jg
mov
ds
mov
mov
add
mov
bnd
jns
xchg
in
sti
lahf
jge
pop
shl
sar
je
aaa
out
lods
mov
mov
lock
pop
push
mov
adc
xchg
mov
jne
test
outs
shl
imul
movs
or
(bad)
xor
imul
aad
lods
test
enter
sbb
pop
jo
dec
adc
arpl
mov
xchg
sti
dec
rol
out
push
and
stc
data16
add
or
inc
lock
xchg
xchg
ds
fidiv
inc
pop
xchg
in
loop
cdq
or
push
jae
xor
imul
pop
add
aaa
scas
mov
stos
neg
xchg
jle
jbe
xchg
mov
xchg
inc
mov
jae
ss
mov
push
in
js
ds
add
sub
mov
and
jns
push
(bad)
and
and
das
or
(bad)
pop
adc
popa
jp
popf
mul
cwde
mov
clc
(bad)
adc
dec
pop
or
hlt
dec
push
(bad)
cmp
add
out
iret
or
xor
ins
sbb
mov
push
adc
daa
(bad)
add
pop
jg
mov
dec
arpl
add
mov
repnz
xor
jecxz
cli
or
jns
xor
push
sub
stc
cmps
cmp
in
mul
dec
fsubr
mov
cmp
out
adc
mov
push
mov
sti
(bad)
call
fwait
inc
pop
movs
sbb
into
cmc
loop
stos
mov
xchg
and
or
out
mov
dec
movs
xchg
add
ins
int
outs
lahf
xlat
dec
jg
lds
fst
mov
cwde
imul
mov
jnp
jg
inc
cs
dec
jl
enter
add
ret
dec
stos
xor
mov
jmp
data16
ret
dec
shr
ds
mov
dec
xor
or
xor
mov
adc
repz
xchg
(bad)
adc
mov
fdivr
and
jp
push
mov
or
popf
or
xor
xchg
call
js
jae
mov
(bad)
push
jno
pop
jl
mov
add
fldenv
cmp
push
addr16
xchg
nop
dec
lock
and
jl
test
popf
cli
xor
sbb
mov
mul
fdiv
sbb
pop
ds
hlt
pop
faddp
test
retf
add
xor
xor
adc
sti
sub
and
mov
fsincos
cwde
mov
inc
ja
mov
dec
ror
cmp
pop
les
cs
cmp
xchg
pop
nop
imul
add
pop
int3
bound
mov
mov
mov
or
js
pop
or
sub
sahf
push
mov
aas
mov
sbb
push
dec
mov
xchg
cmp
mov
cwde
movs
ret
ins
jle
and
lods
ss
and
mov
loop
push
or
(bad)
hlt
adc
sbb
bnd
xchg
scas
dec
sbb
cmp
xchg
adc
rcl
fisttp
sbb
adc
(bad)
ja
or
sahf
add
pop
pop
mov
repz
call
mov
inc
xchg
mov
ins
in
sti
jg
scas
je
ds
(bad)
dec
xchg
int3
push
fdiv
push
gs
cld
arpl
jno
and
cs
rcl
cmp
push
push
cmp
mov
js
aas
xor
outs
sbb
sbb
or
mov
push
dec
daa
bound
leave
adc
sti
push
int3
or
leave
jge
jle
loope
lahf
fisttp
add
pop
sbb
ss
scas
cmps
cmp
pop
out
loope
dec
fnstcw
mov
or
sub
sub
fcom
and
adc
or
div
mov
nop
shl
sbb
hlt
push
in
aas
popf
out
mov
bound
jns
xchg
nop
jle
ret
add
add
jb
mov
pop
dec
jge
mov
sbb
sar
sbb
jmp
sbb
hlt
add
sbb
mov
push
cs
mov
dec
mov
daa
jbe
mov
or
pop
jle
test
(bad)
cmps
mov
(bad)
jae
xlat
dec
lds
movs
sub
hlt
out
scas
sub
mov
lods
add
repz
nop
daa
(bad)
fwait
mov
dec
lds
jp
and
aaa
push
cmps
pop
xor
dec
xchg
jmp
jl
scas
fmul
daa
mov
sbb
push
fisub
popa
(bad)
in
dec
or
pusha
int
xchg
arpl
jecxz
dec
mov
sbb
gs
mov
mov
and
mov
(bad)
push
pop
rcr
and
ret
movs
pop
jb
inc
mov
inc
hlt
and
pop
(bad)
xor
mov
sbb
cmp
and
and
rol
test
mov
and
add
fcmovnbe
loope
mov
bound
lds
add
or
mov
jg
int3
loopne
lock
out
mov
les
test
retf
pop
cmps
or
test
loopne
enter
loopne
jne
sub
scas
aaa
movs
xor
sar
mov
in
mov
call
dec
loopne
stc
pop
jp
add
repz
aad
data16
arpl
rcl
rcl
frstor
jle
iret
or
lea
in
mov
xor
sar
into
xor
outs
icebp
rol
les
fs
inc
pop
adc
(bad)
pushf
jg
xor
ds
mov
dec
adc
pop
mov
pop
test
mov
or
enter
jno
fdiv
xor
jmp
pusha
mov
and
sbb
(bad)
(bad)
out
shr
je
dec
push
push
inc
jo
and
jge
push
and
jmp
and
dec
add
add
cld
mov
retf
cmp
xchg
jp
int3
aas
imul
xor
js
rcr
add
shl
add
jmp
cmp
jno
pop
cmp
out
inc
mul
retf
loope
push
and
rol
cmp
inc
xchg
out
bound
daa
jle
or
movs
fsubrp
dec
pop
jo
pop
and
or
push
mov
xor
pusha
adc
fucom
aas
mov
jecxz
shr
push
repnz
pop
(bad)
xor
push
sti
(bad)
mov
imul
jb
mov
jno
dec
xchg
inc
stos
lds
jb
cmc
add
sbb
xchg
shl
sbb
cld
cmp
cmc
and
pop
xchg
sbb
pop
sbb
dec
ror
push
sbb
call
les
mov
mov
sbb
fcomp
lgs
cmps
jo
js
push
sbb
(bad)
outs
sbb
mov
sar
pop
cmps
mov
dec
out
(bad)
mov
ror
sub
leave
sbb
lods
dec
dec
shl
or
inc
pop
outs
jo
and
fwait
pop
hlt
sub
sbb
push
cmp
fldenv
out
inc
mov
mov
mov
js
jp
in
xor
adc
fcomi
cmp
clc
(bad)
out
push
(bad)
xchg
mov
fcomp
in
dec
pop
das
mov
xchg
add
pop
movs
pop
loopne
mov
sub
rcl
test
(bad)
imul
fdiv
movs
dec
lock
mov
sbb
inc
pusha
sbb
push
ror
es
lods
int
add
sahf
dec
xor
cmp
je
out
mov
push
xor
mov
repnz
add
outs
stos
jo
cmp
test
pop
jle
movs
or
jecxz
and
out
arpl
jae
fidivr
aaa
lods
mov
xchg
je
outs
icebp
push
xchg
ss
loopne
adc
cmp
inc
pusha
test
jle
lahf
ret
sub
out
cmp
xor
bnd
nop
lea
push
xchg
lock
inc
xchg
out
icebp
jmp
idiv
loop
dec
pop
xor
pop
sub
scas
or
pop
(bad)
sub
mov
xor
(bad)
out
(bad)
mov
dec
pop
retf
or
gs
out
xor
nop
jge
retf
fdivr
sbb
dec
jmp
ror
mov
mov
sbb
outs
inc
hlt
dec
cmp
pushf
mov
push
jno
test
repnz
loope
sub
stos
ins
sub
pop
scas
cwde
mov
sbb
pusha
or
int3
ins
xchg
bndldx
jmp
mov
jnp
test
enter
in
xchg
repnz
adc
cmp
mov
lahf
sahf
xchg
aas
in
ret
popa
cmp
dec
jge
out
aaa
sahf
ror
cld
push
je
bound
push
mov
rol
lods
jmp
ret
sbb
scas
cmp
cld
aaa
cmp
test
fwait
cmp
loopne
xor
pop
xchg
adc
inc
ret
and
(bad)
push
int3
inc
xor
sub
dec
into
(bad)
aam
arpl
dec
pop
iret
mov
push
(bad)
rcr
inc
daa
and
int3
mul
mov
xchg
adc
shl
movs
adc
inc
clc
push
mov
push
jbe
mov
cmp
pop
outs
cmp
outs
rcl
xor
fistp
mov
and
cmps
mov
add
fbld
stos
std
jecxz
adc
and
(bad)
outs
pushf
xchg
(bad)
cli
push
ins
jge
test
es
mov
je
enter
sub
xchg
push
popf
adc
hlt
and
cmp
sbb
add
jns
ins
aad
bound
pop
iret
addr16
mov
xchg
xor
push
das
cmc
dec
(bad)
(bad)
xchg
jo
iret
mov
jbe
adc
dec
mov
pop
cmps
(bad)
call
dec
ret
outs
punpckhbw
mov
sbb
mov
test
sahf
dec
(bad)
cmp
mov
push
and
int
xor
in
inc
test
or
add
fadd
push
dec
in
push
dec
imul
aam
fsubr
or
jecxz
inc
popf
or
sub
mov
int3
mov
cmp
into
popa
test
ja
call
cmp
add
gs
js
cmp
xlat
(bad)
fimul
fdivr
inc
sbb
adc
in
jp
xlat
jg
inc
stos
sbb
push
xchg
jg
pop
cwde
mul
xor
(bad)
out
icebp
stos
cmps
and
mov
jnp
rol
out
stc
dec
sbb
out
mov
sbb
ss
lods
adc
pusha
pushf
sub
sub
or
pop
mov
xchg
(bad)
fdiv
mov
pop
jecxz
and
arpl
mov
push
jecxz
lea
dec
mov
dec
add
pop
mov
dec
gs
fwait
jl
add
mov
or
jmp
jb
stos
mov
retfw
test
fidivr
mov
loopne
pop
cwde
mov
mov
dec
mov
jp
call
fadd
rol
jmp
sub
cmps
cmp
jecxz
mov
ja
aam
das
and
enter
shl
xchg
int
mov
adc
movs
push
sbb
push
fisubr
and
jns
ins
out
aam
mov
pop
in
jle
or
mov
jb
push
mov
movs
sbb
cwde
test
(bad)
mov
push
and
movs
nop
dec
add
adc
mov
in
jnp
stos
push
mov
rol
xchg
(bad)
mov
or
inc
push
dec
dec
fisub
loopne
retf
dec
cs
ficomp
fcmovu
cdq
sahf
mov
loope
(bad)
outs
xchg
int
scas
stos
aam
mov
imul
cdq
lahf
inc
cdq
push
or
cdq
lods
cmps
mov
popa
mov
cmp
(bad)
mov
int3
ja
fldcw
je
inc
mov
sub
dec
sbb
inc
mov
mov
ss
sbb
sahf
rol
mov
jg
out
inc
sar
nop
sub
xor
add
test
sbb
test
(bad)
(bad)
ficom
mov
push
outs
nop
rep
sbb
push
cmps
or
fimul
xor
push
test
fadd
mov
mov
adc
cdq
and
test
inc
aas
test
sahf
jbe
pop
cmp
or
lods
mov
pop
mov
push
sub
aaa
fwait
icebp
loope
out
outs
sbb
imul
call
mov
xchg
dec
dec
int3
xor
dec
or
movs
cmps
pop
mov
and
xchg
xchg
pusha
adc
ins
xchg
mov
push
mov
popf
jle
test
dec
push
rol
stc
jl
cdq
loop
xchg
fidivr
adc
lea
mov
loopne
das
jmp
pop
fcomip
pusha
stc
mov
rcl
mov
push
adc
xchg
pcmpgtw
int3
retf
sub
xor
outs
call
push
(bad)
pop
das
loopne
bound
dec
(bad)
add
xor
ins
retf
lock
in
mov
mov
push
cmc
mov
jecxz
adc
mov
sbb
arpl
clc
sub
sbb
mov
cmp
cld
push
push
push
imul
xchg
and
jnp
jbe
int3
add
jbe
push
leave
cmp
pop
or
xlat
mov
cli
push
retf
adc
pop
out
push
push
loopne
out
pop
cmc
pop
add
xor
jne
cli
fiadd
in
pop
mov
dec
mov
pop
cmp
dec
cwde
jle
arpl
push
mov
mov
test
dec
imul
std
cli
fstp
aad
ins
add
lods
inc
sub
out
aam
mov
dec
add
out
les
adc
mov
(bad)
sbb
adc
dec
test
(bad)
hlt
push
bound
mov
sub
mov
cmp
cmp
ror
mov
push
jae
(bad)
xlat
mov
inc
mov
sbb
pushf
(bad)
xlat
bound
xchg
jle
pop
fist
aaa
daa
fs
add
jecxz
das
scas
jo
inc
xchg
jo
mov
adc
int
xlat
in
ins
pop
dec
pop
add
out
mov
inc
imul
adc
retf
fdivr
aaa
jl
inc
xchg
mov
add
pop
inc
clc
push
jmp
cld
jg
shl
into
sbb
aaa
or
pop
inc
jmp
ret
pop
push
pop
mov
cmp
cmc
mov
xchg
ror
push
mov
mov
add
outs
loopne
loopne
pop
call
dec
jo
jmp
xchg
xchg
mov
push
retf
jg
jp
jmp
inc
hlt
loop
xor
cmp
inc
push
push
test
stos
jmp
(bad)
mov
repnz
mov
mov
test
or
shl
xor
cmp
xchg
enter
pushf
push
sub
adc
ss
dec
sbb
mov
fcomi
retf
nop
jne
and
clc
ins
lock
je
nop
sub
fs
inc
mov
mov
pop
fs
mov
jns
retf
mov
div
mov
int3
push
inc
daa
mov
xchg
stos
pushf
sbb
lock
fsubr
dec
shl
int3
dec
mov
mov
cli
test
shl
cmp
fcompp
and
fld
test
jo
call
sub
movs
jecxz
adc
push
or
int
sahf
hlt
test
hlt
mov
(bad)
cmps
dec
mov
loopne
ficom
add
cmp
not
cmp
rcl
add
in
xchg
repnz
lahf
xchg
push
or
bswap
mov
cmp
mov
arpl
fisttp
push
mov
test
jnp
or
xchg
sbb
nop
fwait
sahf
dec
push
mov
out
das
int3
mov
push
rcl
inc
mov
stos
push
inc
mov
xchg
xor
add
adc
push
and
dec
pop
jae
stos
adc
push
imul
adc
xchg
pop
and
push
movs
lds
and
stc
verr
nop
adc
pop
pop
mov
popfw
inc
add
push
test
mov
inc
retf
dec
pop
xor
push
loop
out
inc
movs
jb
scas
pop
iret
adc
mov
pushf
sar
mov
test
push
ret
scas
adc
aaa
pop
inc
dec
jg
fcom
popa
pop
mov
(bad)
cld
jnp
int3
test
add
or
cs
sbb
enter
fld
sbb
test
jbe
jecxz
pop
or
pop
fsub
das
mov
arpl
ja
popf
sub
mov
jns
call
arpl
ret
or
cld
push
sub
ret
fnstsw
lods
lahf
cmp
js
data16
movs
loop
mov
jge
ins
rcl
sti
test
retf
and
adc
pushf
lahf
neg
xor
dec
arpl
and
add
sub
nop
or
out
mov
ins
mov
fimul
ss
and
(bad)
fbld
mov
mov
hlt
fcmove
cld
and
jno
jp
inc
cmp
sbb
sar
xlat
imul
in
clc
test
push
test
(bad)
xor
les
outs
or
mov
lahf
xlat
or
movs
int3
cmps
ss
and
xchg
loope
shl
cmps
shl
sub
fisub
imul
mov
sub
lods
dec
mov
ja
cwde
mov
inc
cmp
jne
push
rol
sbb
fdivr
adc
shl
adc
push
sbb
add
xchg
in
mov
dec
popa
fdiv
add
dec
fs
xchg
xor
popf
lahf
inc
push
lods
mov
dec
xchg
rol
fisttp
sub
sub
cli
and
in
fwait
xor
sbb
ds
enter
call
popf
or
cld
mov
call
not
pop
retf
dec
(bad)
sub
sbb
mov
test
push
pop
sub
cmp
dec
adc
out
sub
dec
aas
mov
repz
in
sub
dec
stos
xchg
pushf
adc
mov
fcmovne
inc
(bad)
shl
sub
cmp
cmp
dec
icebp
xor
int
jp
push
das
dec
jo
repnz
sbb
inc
xor
xchg
mov
mov
mov
enter
xor
sub
push
out
cdq
jne
not
pop
jae
adc
ins
test
fcom
in
shl
repnz
inc
or
xor
sbb
das
iret
or
add
icebp
jbe
imul
inc
pop
jg
pop
ret
mov
mov
or
sar
jecxz
jne
lea
jmp
shl
push
fcomp
and
dec
int3
fld
dec
xlat
mov
jp
adc
pusha
stos
cmp
xor
pop
jns
sbb
mov
jns
scas
dec
loopne
mov
sbb
or
inc
mov
and
out
mov
sti
add
jo
sahf
cmp
adc
std
in
ins
imul
pop
hlt
lahf
js
in
pop
add
ror
sbb
ret
iret
test
push
xor
or
and
fnstcw
in
imul
xchg
mov
push
jbe
inc
cs
sub
ja
stc
sbb
mov
iret
mov
jmp
movs
xchg
cmp
adc
jnp
mov
ins
fisttp
jge
jmp
sbb
jge
clc
push
push
lea
cmps
into
js
mov
sar
and
or
call
add
(bad)
mov
cmp
in
jno
sti
dec
and
sbb
mov
adc
js
sub
add
jmp
lahf
pop
rcr
jp
and
mov
outs
inc
ror
push
fisttp
ret
mov
shr
push
lods
xor
and
arpl
aam
push
ficom
out
in
stos
test
dec
xlat
mov
fist
xlat
sbb
push
inc
sub
pop
add
or
shl
stos
mov
(bad)
adc
sbb
cmp
adc
and
mov
adc
(bad)
in
jae
imul
out
sub
push
mov
movs
loopne
adc
ror
dec
les
push
add
setg
jmp
rol
mov
cmp
inc
xor
out
or
pop
push
mov
stos
inc
into
je
jno
ja
cwde
cmp
cmp
inc
mov
mov
cmp
push
mov
adc
ret
adc
dec
sar
popf
xchg
clc
adc
jne
cmps
inc
and
and
push
jae
inc
push
mov
add
push
cmps
jp
sub
movs
pushw
ins
push
add
adc
push
inc
arpl
es
clc
and
mov
push
sti
cdq
ret
mov
mov
mov
cs
lods
sub
vpcmpeqb
lods
jnp
fisttp
cs
mov
jl
mov
mov
mov
jmp
xor
cmp
ret
call
mov
sar
push
push
pop
jno
cmps
jle
push
into
repz
repnz
or
sub
push
push
ss
adc
cmp
adc
xor
xor
and
and
sbb
mov
mov
ins
jb
in
rcl
and
aad
inc
movs
push
pop
push
dec
mov
jle
leave
jbe
gs
pop
icebp
sub
hlt
dec
xor
leave
icebp
push
jnp
dec
or
mov
add
push
imul
inc
and
ret
stos
push
jg
sbb
or
movs
jle
inc
ja
dec
addr16
arpl
stos
cmp
clc
inc
push
int3
mov
sub
jae
int3
iret
std
or
lahf
cld
dec
arpl
stc
inc
pop
(bad)
push
dec
jne
sub
fdiv
add
std
inc
xchg
sar
xchg
pop
inc
jge
sub
pop
mov
push
into
cmp
adc
lea
or
dec
jmp
mov
mov
clc
xor
jmp
mov
xor
push
(bad)
pop
(bad)
aad
std
cmp
add
and
ds
leave
xchg
es
popf
lock
les
scas
mov
ins
enter
cmps
xor
nop
loop
test
jbe
mov
idiv
sbb
int
in
iret
dec
pop
sbb
pop
sbb
sbb
pop
push
test
pop
and
push
inc
inc
jmp
in
inc
mov
and
shl
mov
cli
out
ret
or
das
cmps
dec
jb
repz
lea
cmps
xor
fisub
shl
mov
dec
cmp
sbb
add
sub
inc
shl
sbb
or
or
rcr
add
mov
or
add
xor
int
jae
ja
push
fst
and
add
rcl
sbb
lds
push
fild
or
leave
push
mov
dec
xchg
xchg
mov
pop
mov
cmp
dec
test
leave
pop
scas
fmul
mov
sbb
push
push
mov
es
mul
clc
adc
pop
mov
xchg
cdq
mov
sub
mov
pusha
cmp
js
loopne
bound
arpl
ins
xchg
retf
mov
jne
inc
cwde
mov
(bad)
dec
mov
mov
dec
xchg
adc
fadd
jmp
fidivr
repnz
aam
(bad)
ja
aam
int
daa
icebp
and
in
repnz
(bad)
fsub
pop
(bad)
in
mov
ret
out
mov
fisubr
addr16
fwait
adc
xor
fmulp
scas
push
hlt
and
push
mov
(bad)
(bad)
icebp
or
nop
inc
out
mov
add
cmc
cmp
sbb
sub
jmp
xchg
and
stos
and
sar
xor
push
or
bound
int
iret
sub
mov
out
mov
test
add
sbb
xchg
lods
shl
push
lock
addr16
retf
mov
mov
fcomp
repnz
xchg
add
ret
push
fild
jg
xchg
pop
enter
sbb
mov
or
push
loope
adc
and
aad
out
add
mov
adc
inc
(bad)
push
ret
sbb
mov
cli
fld
cmp
xchg
aam
cmp
test
mov
pushf
out
mov
clc
push
jo
test
xchg
dec
and
ss
repz
into
cdq
daa
rcr
sbb
mov
iret
inc
inc
addr16
stos
mov
jmp
cmp
and
jmp
sub
push
mov
push
xchg
adc
fcom
push
jnp
retf
idiv
jmp
ja
and
repz
xchg
jg
ds
mov
test
fwait
shl
xchg
repnz
loope
xchg
cld
lock
push
sub
test
test
xor
push
inc
jmp
and
xchg
xchg
call
iret
xchg
add
js
jle
push
jg
retf
inc
xlat
idiv
dec
add
inc
scas
pop
ins
(bad)
pop
(bad)
loop
stos
and
test
sbb
push
retf
push
fcomp
inc
dec
and
ins
rcr
pop
pop
mov
and
imul
gs
dec
jo
mov
inc
xchg
das
inc
mov
aaa
push
cmp
push
mov
sub
dec
lods
xchg
dec
jb
fist
push
shl
fwait
or
fucomip
cmp
xlat
sbb
cmp
(bad)
mov
inc
push
inc
dec
in
mov
ja
cli
ret
ret
push
xchg
xor
mov
xor
lods
push
stos
cmp
or
jl
lds
out
(bad)
xchg
xchg
add
enter
push
mov
idiv
icebp
jmp
pop
lea
imul
add
mov
xchg
cwde
icebp
mov
push
pushf
lahf
ret
cs
sahf
inc
mov
adc
push
and
je
fstp
in
test
or
bound
and
mov
aad
std
in
and
popf
cmc
xor
cmp
or
in
data16
fsubr
pop
sub
jbe
pop
jp
push
pop
or
xor
clc
push
mov
xchg
je
or
mov
(bad)
push
stc
(bad)
pop
stc
jp
jae
(bad)
inc
add
jmp
mov
mov
add
push
nop
xchg
aam
inc
and
push
xchg
jae
pop
lahf
js
or
dec
mov
dec
addr16
add
pusha
push
les
scas
xchg
test
jge
sbb
pop
inc
jl
pop
pop
mov
mov
mov
rcl
retf
dec
out
cld
popa
mov
mov
mov
cli
add
mov
or
mov
push
push
pop
cmp
dec
xlat
push
inc
(bad)
xchg
out
jo
pushf
(bad)
cld
idiv
adc
jg
stos
adc
fld
pop
repz
out
fild
xor
clc
dec
aas
dec
sub
test
cs
leave
dec
and
lods
mov
mov
bound
je
sbb
push
xchg
fdiv
cs
pushw
cmp
out
xlat
sbb
and
scas
neg
pop
mov
jmp
pop
int3
(bad)
inc
mov
cmp
xor
jp
ss
push
xchg
add
sub
fbstp
jle
cld
dec
sbb
push
push
enter
dec
dec
mov
aaa
popf
xlat
lods
bound
sti
inc
or
(bad)
inc
movs
(bad)
dec
push
and
push
xchg
call
in
cwde
jbe
sub
mov
sbb
sbb
push
int3
adc
int
movs
jno
scas
sub
popf
(bad)
inc
pop
imul
in
fcomp
jg
std
stos
out
aad
loope
leave
lds
mov
add
clc
mov
mov
push
popf
cld
xchg
aaa
jbe
jno
mov
cmps
inc
adc
add
mov
push
jl
jns
jp
push
cmp
fidiv
xchg
repnz
outs
clc
mov
inc
inc
mov
xor
adc
push
mov
xchg
in
mov
xlat
loopne
sar
fisttp
std
mov
test
push
and
aaa
and
push
cld
or
mov
cwde
xchg
sub
mov
xchg
jecxz
aam
xchg
into
mov
out
out
jle
loopne
icebp
stos
push
adc
aad
mov
cmc
ret
cmp
in
pushf
add
shl
ja
mov
fist
sbb
dec
pop
mov
cmps
add
mov
dec
cmp
loope
and
add
and
jb
stc
movs
or
sbb
leave
cs
sbb
jl
dec
pop
leave
jne
bts
mov
enter
pop
js
(bad)
mov
adc
jge
into
xor
push
cmp
jecxz
rol
enter
sbb
sahf
pop
push
shr
enter
xchg
jge
mov
rcl
inc
dec
pop
xchg
pop
jecxz
rcl
es
xchg
repnz
iret
or
jge
loopne
addr16
mov
(bad)
mov
add
add
iret
rol
sub
cmp
test
push
movs
dec
or
loop
xlat
(bad)
mov
inc
int
and
inc
mov
push
jns
jmp
in
adc
fwait
xchg
add
jbe
pusha
xor
sub
fldcw
adc
pop
ret
add
(bad)
pop
inc
lock
inc
je
loope
pusha
mov
jmp
pop
pop
dec
out
dec
mov
sub
dec
out
test
jns
ficomp
or
scas
mov
mov
rol
test
clc
pop
les
sub
push
loopne
push
es
cmp
es
ror
loop
dec
xchg
jmp
jo
cmp
out
cmps
push
or
inc
add
faddp
or
mov
pop
mov
ret
dec
std
jae
mov
mov
aam
fdivrp
mov
pusha
or
push
test
jmp
inc
test
in
mov
pop
popa
dec
push
sbb
cmp
add
push
add
ins
and
bound
lahf
xor
(bad)
push
bound
jle
jle
inc
sub
mov
jl
pusha
jns
scas
jle
iret
cli
hlt
xchg
ins
or
adc
or
mov
sbb
(bad)
or
xor
dec
fsub
mov
pushf
mov
fucom
(bad)
loopne
or
adc
mov
xchg
div
mov
shl
sub
push
ret
mov
lock
dec
jo
adc
in
sahf
adc
rol
push
sbb
scas
cmp
mov
aad
neg
pop
rol
dec
movs
daa
sbb
and
xchg
dec
inc
push
call
jo
mov
cmp
jmp
mov
div
or
fild
cmc
cld
sub
bound
fldenv
jne
cmc
adc
inc
sub
mov
ret
imul
sahf
scas
mov
cmp
and
jo
call
ret
mov
not
mov
jl
pushf
(bad)
fld
fsubp
arpl
ins
push
pushf
(bad)
push
mov
pushf
fisubr
cmps
mov
push
push
xor
call
cwde
add
and
mov
inc
mov
adc
fstp
mov
inc
adc
clc
mov
mov
or
xchg
into
ret
mov
and
jbe
adc
jmp
jp
jmp
stc
pop
pop
cmc
scas
xchg
ds
mov
cmps
clc
pop
add
add
loopne
add
not
and
push
fucom
retf
int
retf
pop
call
or
out
inc
adc
dec
lea
fidiv
and
xor
(bad)
cld
fwait
adc
loopne
popw
add
add
inc
bound
xchg
addr16
xchg
mov
mov
mov
aas
es
or
mov
jne
lock
jns
test
push
xchg
sar
cli
je
pusha
push
jmp
pop
jb
int
add
retf
fild
repnz
mov
mov
imul
xor
ret
inc
out
out
mov
xor
mov
or
add
pop
sbb
popa
inc
test
fisub
push
jp
inc
cdq
push
clc
mov
mov
sbb
pop
mov
mov
jns
repz
fldcw
test
pop
sub
inc
sub
in
lods
std
and
sub
ret
mov
mov
push
test
mov
jo
mov
and
push
push
mov
ins
scas
dec
daa
xchg
movs
cmps
fidivr
xchg
xchg
fneni(8087
shl
and
mov
in
jns
mov
scas
and
mov
adc
jo
mov
adc
into
lods
ud2
dec
pushf
xchg
aas
aaa
test
xor
adc
mov
and
je
or
and
dec
xchg
xor
in
sbb
xchg
mov
sbb
jge
xchg
pop
xor
jecxz
sub
cmp
cmps
mov
or
cmc
mov
mov
fcomip
stos
aaa
mov
clc
sbb
(bad)
fld
out
jae
inc
push
dec
and
mov
mov
mov
daa
xor
mov
xchg
mov
ret
out
adc
adc
shl
es
mov
jg
call
mov
lods
sub
das
imul
sti
push
mov
sbb
pop
xchg
push
mov
js
cmp
pop
rcl
sub
cmp
jbe
aaa
dec
pop
jmp
and
test
gs
popf
mov
mov
dec
repz
lahf
ins
sub
cs
push
jnp
pop
pop
imul
nop
(bad)
mov
retf
mov
xchg
jns
pop
xlat
jg
push
add
jl
mov
in
jp
pushf
dec
pop
add
and
xchg
je
rcl
enter
pushf
xor
sbb
jno
cmc
addr16
pop
(bad)
xor
or
std
arpl
scas
shr
leave
mov
lods
ja
mov
dec
push
ins
lea
sbb
aas
jge
jno
sub
into
push
fs
sbb
(bad)
daa
mov
dec
dec
mov
xor
inc
ja
jnp
in
dec
pop
iret
imul
cli
sti
in
call
mov
mov
push
ins
mov
(bad)
sub
lahf
ds
xor
test
pop
pop
aas
mov
jo
ret
add
pop
fdivr
pop
repz
imul
pop
fsubr
cmc
call
pop
test
dec
push
sub
bound
mov
inc
inc
dec
xchg
add
push
(bad)
jnp
retf
(bad)
xlat
sbb
lods
mov
add
pop
dec
push
retf
aad
scas
add
stos
nop
cmp
pop
inc
xchg
icebp
adc
sub
dec
jg
div
leave
out
not
cmps
push
mov
inc
loope
xor
jmp
pop
mov
popa
jge
mov
loop
jl
pop
push
das
adc
fsub
cwde
loope
jl
cmp
(bad)
pop
not
adc
sahf
and
fbld
out
jnp
out
(bad)
push
fadd
push
push
pop
jmp
or
xchg
(bad)
or
aam
jecxz
repz
daa
jecxz
imul
imul
push
add
mov
or
mov
jo
test
xor
cmp
jb
mov
lods
adc
inc
sbb
rol
pop
adc
xchg
mov
cmp
add
xor
aad
xchg
sub
rol
jecxz
ret
(bad)
repnz
shl
stc
out
call
sbb
call
sub
push
dec
adc
lock
data16
inc
in
addr16
sbb
aad
jno
pushf
mov
cdq
push
jmp
push
je
aam
pop
and
cmp
js
dec
adc
mov
xchg
fdiv
push
mov
adc
into
pop
fild
lds
jmp
retf
retf
xlat
lea
inc
adc
and
(bad)
and
inc
je
icebp
scas
push
imul
sub
mov
dec
popf
mov
or
pop
ret
sbb
pop
test
aaa
cld
(bad)
pop
scas
aad
jecxz
push
xchg
out
pop
jno
xchg
adc
scas
loope
adc
addr16
sub
cdq
mov
loope
cmp
(bad)
jp
ds
cwde
jno
xchg
sbb
stos
xchg
sub
jle
daa
dec
(bad)
mov
mov
retf
mov
icebp
dec
jmp
iret
pop
(bad)
or
sub
inc
add
adc
(bad)
in
movs
sbb
sub
aaa
aam
or
xor
or
xor
lods
rol
out
sbb
inc
sbb
outs
pushw
lods
rcr
(bad)
xchg
mov
test
popa
and
call
or
adc
sar
xchg
sahf
sub
(bad)
mov
dec
or
and
mov
cwde
fcom
(bad)
enter
imul
add
jno
add
sbb
mov
hlt
fs
mov
cdq
dec
push
imul
cmp
or
jno
xor
and
inc
mov
jl
ficom
cmp
cmc
pop
jmp
push
hlt
and
dec
pop
sbb
cld
push
mul
lea
adc
add
loopne
mov
mov
cmp
stos
rol
mov
les
jnp
lahf
(bad)
jnp
add
pop
lea
out
das
sti
ror
mov
les
push
(bad)
push
push
sub
pop
dec
popa
jns
sbb
maskmovq
push
mov
mov
into
hlt
pop
fs
repnz
add
inc
pop
ins
and
adc
lea
lahf
out
dec
add
pop
in
outs
dec
jo
(bad)
push
icebp
jmp
in
push
sub
xchg
push
inc
out
stc
sub
adc
push
adc
lods
sub
sbb
popf
lods
test
inc
dec
mov
push
iret
les
fisttp
adc
mov
and
xor
push
jb
aad
mov
sub
cmps
gs
mov
daa
xchg
mov
mov
sub
add
and
mov
pop
inc
ins
or
xor
rol
pop
movs
pop
movs
pop
ret
xor
mov
fcom
dec
clc
in
(bad)
addr16
mov
loop
mov
sub
mov
jo
iret
jno
or
mov
fsubr
leave
cmp
test
cmc
jnp
out
mov
and
jbe
jmp
or
cmps
cld
add
clc
dec
ss
cli
xchg
les
fwait
mov
outs
retf
lock
js
lds
test
xchg
inc
sub
movs
ja
add
dec
fistp
rol
add
cmc
sub
bound
movs
jne
xchg
(bad)
jmp
les
push
xchg
movs
and
lods
in
pop
vorps
mov
jp
inc
fwait
ret
xchg
popf
and
add
fiadd
adc
cs
mov
jno
add
mov
jmp
adc
fisubr
clc
clc
jle
mov
(bad)
dec
fcmovne
fsub
test
and
out
add
jbe
mov
pushf
mov
movs
ins
imul
int
cmps
adc
mov
repnz
mov
stos
pop
mov
adc
push
aas
cmp
data16
std
inc
xor
rol
jo
pusha
icebp
push
ja
(bad)
push
sbb
lods
test
pop
push
test
xor
leavew
sub
ret
mov
pusha
aas
and
xor
sub
shr
mov
stos
and
push
out
js
sbb
ror
ffreep
movs
mov
leave
jle
push
mov
imul
pop
sar
retf
xor
fstp
aaa
dec
sti
push
cmp
movzx
mov
mov
pop
push
sti
and
imul
cmp
push
movs
push
pop
inc
aam
add
adc
fstp
sbb
aad
cdq
pusha
loopne
xchg
sbb
and
pop
icebp
je
cdq
sbb
sbb
xor
sub
mov
loop
sub
leave
into
cdq
in
cmp
stos
inc
into
addr16
push
(bad)
es
scas
mov
push
mov
int3
cmps
fisubr
pop
out
jl
test
fcom
(bad)
stc
movs
aad
xchg
mov
jmp
add
fistp
jne
inc
jp
sbb
push
mov
cmp
fidiv
xchg
(bad)
data16
cmp
xchg
daa
sub
lahf
movs
push
xor
push
imul
dec
cmp
adc
ss
mov
cmp
mov
jl
jge
pop
or
add
push
and
push
push
mov
add
mov
ins
ja
sbb
idiv
xor
out
mov
xor
mul
cmp
adc
pop
dec
push
jg
popf
lahf
sub
in
push
dec
cmp
adc
imul
inc
push
push
pop
xor
sub
add
jl
jno
mov
shl
jo
stc
mov
mov
push
idiv
das
or
jg
outs
repnz
pop
xchg
ror
in
jnp
fist
rcr
mov
ficomp
mov
cdq
das
ja
xlat
mov
xchg
fstp
pop
repnz
add
loopne
push
cwde
xchg
sub
lods
ret
daa
aas
and
mov
mov
in
jne
cs
push
push
popa
push
mov
dec
loop
mov
mov
xchg
dec
mov
leave
pop
add
aad
ficom
xor
cmp
ds
adc
jmp
(bad)
hlt
pop
cmp
ss
loopne
fcmovb
cmp
stc
imul
out
push
sbb
sahf
cmp
pop
ins
mov
fwait
nop
or
ds
sub
cmp
add
jg
je
sub
inc
in
push
dec
(bad)
into
inc
sub
push
fdivr
push
cmp
sbb
lds
dec
and
or
mov
inc
je
mov
adc
mov
sar
lea
inc
mov
mov
dec
push
jae
jge
imul
mov
mov
dec
and
xor
cmp
out
in
or
out
imul
nop
mov
xor
(bad)
lds
mov
fadd
add
or
in
orps
bound
(bad)
call
rcr
ins
test
stc
mov
arpl
ja
and
cwde
int
or
test
stos
xchg
or
(bad)
ficomp
sar
pop
and
or
std
cmp
shr
ds
jge
hlt
cli
add
jp
sar
xor
push
add
hlt
push
mov
pop
push
pop
adc
jl
movs
repnz
xchg
dec
rol
aad
jnp
lds
dec
ss
mov
xchg
adc
or
mov
sub
jns
xchg
(bad)
cmp
push
shl
sub
fwait
icebp
push
pop
inc
pusha
hlt
lods
xor
add
jmp
stc
or
cmps
repnz
xchg
or
test
xchg
jecxz
cmp
mov
into
mov
dec
and
(bad)
lahf
push
addr16
das
retf
add
pop
cmps
mov
dec
pop
sub
xor
sub
adc
push
xor
inc
cld
inc
dec
mov
cmc
pushf
stos
xchg
push
cmp
jl
mov
mov
(bad)
fdiv
shr
or
nop
xchg
fild
out
shl
es
dec
sub
adc
sbb
cmc
mov
daa
pop
pop
push
mov
xchg
jns
xor
jne
push
pusha
pop
movs
inc
cmc
mov
xor
jg
cmp
hlt
clc
xor
dec
cmp
idiv
xchg
xor
retf
cmps
lds
pop
jb
dec
pop
sub
xlat
mov
xchg
imul
and
sbb
xchg
xor
imul
fmul
dec
popf
int3
movs
aas
jle
js
dec
out
stos
cmps
add
cli
jae
mov
cli
inc
mov
or
adc
push
mov
adc
sbb
lds
leave
jmp
mov
ds
push
bound
mov
fild
lea
push
loopne
int3
sub
jle
mov
das
in
fiadd
int3
stos
dec
and
mov
jo
jbe
and
repnz
mov
lahf
scas
icebp
cmp
and
dec
fistp
pop
mov
(bad)
jecxz
dec
sahf
and
out
mov
sub
in
mov
adc
call
add
jb
js
enter
dec
hlt
aam
fimul
iret
xor
aaa
test
mov
outs
mov
cdq
repnz
dec
dec
or
jmp
sbb
outs
and
shl
call
mov
push
sbb
or
hlt
push
mov
sbb
xor
pop
jnp
mov
pushf
int
adc
pusha
sbb
jne
shl
mov
adc
dec
sbb
test
out
inc
pop
les
xchg
clc
call
or
enter
inc
shr
mov
pop
and
and
imul
dec
cmp
ret
in
dec
pop
dec
xor
fsubr
fwait
mov
cdq
lods
(bad)
jmp
sti
fmul
je
xchg
in
loope
xor
inc
ins
mov
sbb
test
jne
or
rcl
mov
cmp
dec
enter
scas
sub
cwde
cmps
rcr
scas
dec
lahf
mov
xchg
iret
sub
sub
mov
mov
dec
pop
or
in
icebp
outs
jae
cs
lds
push
jo
ins
pop
dec
add
fisub
dec
cmp
xor
xchg
sbb
or
retf
adc
cmp
and
jno
jo
jge
pop
(bad)
dec
icebp
sahf
mov
cld
fmul
mov
and
lahf
inc
iret
outs
and
mov
fidivr
push
mov
les
mov
imul
ret
arpl
xor
mov
pop
pop
pop
xchg
inc
dec
movs
sbb
xor
add
mov
cs
call
ss
(bad)
fiadd
test
int3
cmc
or
push
push
shl
cwde
mov
push
icebp
sar
add
xchg
adc
mov
push
imul
sbb
push
sbb
ret
cmp
sahf
push
gs
mov
aam
lods
int3
cwde
cmp
(bad)
push
and
scas
out
push
mov
pop
out
ficom
or
push
pop
ja
push
xchg
mov
bound
aaa
and
sbb
sub
xor
inc
sub
les
fisubr
or
bound
ret
mov
out
mov
mov
int
or
adc
mov
mov
(bad)
ret
in
out
add
movs
push
je
inc
shr
sbb
sub
popa
mov
mov
pop
cmp
or
dec
lock
sbb
mov
pop
into
mov
xchg
loop
xor
(bad)
jo
mov
inc
fldcw
sub
jns
dec
mov
sub
out
sbb
imul
cmp
or
adc
test
sbb
sbb
mov
sbb
movs
pop
push
adc
pop
int
in
daa
scas
push
out
test
or
and
pop
cmc
fwait
cmps
shr
jb
scas
inc
pop
jg
xchg
cld
es
cwde
js
(bad)
jecxz
repnz
adc
call
gs
shl
(bad)
mov
mov
js
sub
aas
dec
daa
mov
mov
inc
stos
mov
sti
mov
jae
pop
js
(bad)
cli
sbb
pop
and
(bad)
jg
add
(bad)
repz
mov
out
mov
mov
ret
or
(bad)
cdq
ds
(bad)
sub
sub
ret
jns
pop
pusha
push
popf
add
dec
js
retf
test
xchg
cmp
and
dec
les
aas
pop
sub
jp
aaa
sar
add
stc
ror
push
ss
mov
lds
pop
fldcw
nop
pop
mov
or
rol
std
xchg
pop
test
cmp
and
jl
inc
aam
loope
loopne
(bad)
and
mov
inc
out
js
leave
fmul
nop
sub
ins
scas
jno
pop
loopne
mov
aas
xchg
sbb
neg
pop
loopne
arpl
cmp
in
xor
jne
(bad)
and
jecxz
push
es
jge
sbb
sub
mov
jp
and
stos
mov
loop
add
imul
daa
adc
and
jge
dec
xchg
mov
cmp
dec
fnstsw
mov
and
scas
jbe
and
jp
inc
loop
addr16
pop
dec
sahf
in
pop
fist
cmp
stos
push
mov
add
sbb
cmp
jne
stos
ds
dec
cmp
fcom
jecxz
int3
bound
sbb
dec
(bad)
jmp
and
push
adc
sub
lods
or
data16
mov
mov
and
das
pop
rcr
dec
sub
fdivp
pushf
mov
sub
mov
ins
arpl
lods
mov
out
xor
and
sbb
mov
dec
lods
cli
push
push
push
adc
inc
aad
xor
or
lods
inc
jno
call
sub
xchg
add
shl
jnp
ret
mov
dec
xchg
push
sub
push
add
les
adc
jmp
ror
cmc
(bad)
pop
outs
inc
jmp
sbb
jno
inc
cmp
or
jge
gs
(bad)
lock
ror
push
mov
ret
in
jp
xchg
xor
sub
xchg
cmp
test
rcl
xchg
jmp
cmps
out
loopne
xchg
mov
jecxz
push
mov
mov
or
fmul
sbb
cmp
ficom
cwde
loopne
mov
addr16
gs
cmc
push
outs
and
mov
jecxz
push
(bad)
xchg
cld
and
(bad)
aad
inc
mov
jge
sbb
test
mov
sbb
and
cmp
mov
cmp
shl
mov
xlat
int3
sub
dec
sbb
add
lock
daa
shl
retf
int3
mov
(bad)
mov
in
sti
in
mov
sub
dec
ja
add
popa
mov
xchg
fst
out
mov
mov
imul
outs
pop
mov
mov
and
mov
pusha
push
stos
ins
mov
lea
loop
inc
(bad)
mov
icebp
dec
ret
adc
push
add
push
mov
arpl
popf
lock
push
jae
jb
test
(bad)
sbb
mov
stc
sar
arpl
ja
and
(bad)
in
cdq
pop
jne
ja
das
cmp
les
add
sub
test
int3
sub
aad
sti
sti
shl
add
ja
xlat
popa
and
xchg
int
fsub
call
das
mov
pop
mov
xchg
daa
sbb
retf
bound
sub
push
dec
scas
lods
xor
mov
fist
out
add
push
jecxz
(bad)
mov
clc
mov
mov
cmps
test
mov
xchg
cmp
out
data16
and
adc
dec
shr
popa
cmp
mov
push
sub
push
daa
jo
aaa
jo
lds
inc
pop
loop
in
mov
push
sbb
aam
fidivr
dec
imul
mov
and
mov
sub
js
and
(bad)
repnz
adc
fisttp
sbb
adc
outs
outs
push
push
and
out
cmps
aam
cmp
out
pop
in
aam
fild
mov
jno
(bad)
mov
jns
clc
adc
sahf
push
cdq
lods
xlat
in
das
push
jle
mov
popa
push
retf
ss
std
mov
test
push
cs
test
ins
cs
sahf
sbb
mov
push
pop
mov
js
mov
lods
push
xor
inc
ins
mov
add
loop
scas
mov
jb
dec
pop
bswap
pop
stc
push
aam
fisub
xchg
out
inc
rol
daa
in
aas
sbb
mov
mov
fadd
in
nop
movs
inc
sbb
lock
pop
icebp
ins
in
sbb
mov
les
xchg
cmp
inc
pop
xchg
fadd
xor
cmp
pop
in
xchg
sbb
jge
imul
scas
fld
ds
fnstenv
dec
test
out
push
fs
test
inc
inc
sub
xchg
sub
dec
adc
jecxz
fistp
sub
fwait
dec
test
fnsave
pushf
test
mov
add
mov
adc
inc
sub
arpl
(bad)
loop
out
mov
mov
mov
movs
arpl
jne
xchg
dec
inc
mov
stc
xchg
fwait
cmps
mov
(bad)
sub
imul
call
sub
add
jmp
lods
cs
sbb
jae
push
es
das
fs
mov
lahf
cmc
fld
bound
jge
sbb
sahf
fidivr
pop
stos
scas
dec
sbb
arpl
jb
stos
int
shl
ins
adc
ins
adc
xor
mov
xor
xchg
lock
sti
ror
cmp
xor
inc
inc
lods
add
pushf
nop
sbb
neg
aaa
call
mov
movs
cmp
lds
jg
add
lahf
ds
les
les
sahf
(bad)
shl
mov
out
adc
fidiv
add
mov
movs
(bad)
clc
mov
cld
and
xchg
mov
sbb
mov
adc
in
sti
out
lods
push
mov
mov
cmp
sbb
cmps
sub
test
adc
push
shl
pop
ins
mov
mov
sub
cmps
ss
out
dec
(bad)
xchg
mov
jb
test
popf
push
inc
jno
pop
dec
pop
pop
mov
sbb
sub
imul
popa
mov
movs
xchg
push
dec
(bad)
jl
push
retf
retf
rcr
mov
movs
loope
inc
jl
aam
xor
push
sar
ror
mov
xor
mov
cmp
push
mov
call
pop
out
fbld
pop
add
in
add
jmp
sysenter
push
mov
cld
push
adc
imul
push
pusha
inc
stc
mov
outs
mov
(bad)
mov
lods
cmp
ret
rcr
(bad)
mul
push
ins
cwde
popa
rol
jl
sub
sbb
pop
xchg
daa
inc
stc
sub
jge
xchg
push
das
dec
aam
retf
pop
and
stos
xchg
xchg
outs
scas
addr16
fidivr
push
or
push
adc
push
cmc
dec
push
jae
ins
fistp
xor
mov
mov
ss
add
rcr
fcmovnu
call
pop
loopne
or
repz
dec
mov
ja
dec
mov
call
adc
mov
cmp
sbb
xor
sub
dec
xchg
sub
and
sub
(bad)
sti
sub
adc
add
outs
mov
jmp
data16
icebp
(bad)
dec
cmp
popa
mov
into
data16
ds
mov
pop
mov
add
ins
test
cs
pop
jecxz
mov
cmp
dec
add
movs
xchg
cld
jmp
pushf
inc
mov
out
push
in
sub
sahf
outs
aad
mov
push
test
pop
or
stc
int
sbb
div
jb
jbe
sbb
call
inc
cmp
cs
mov
jp
push
rol
jae
xchg
mul
sbb
pop
pop
mov
loopne
push
cmp
adc
clc
pop
pop
sbb
pusha
jbe
not
mov
mov
jb
daa
sub
mov
or
ins
cs
stc
(bad)
add
cmp
dec
mov
imul
jne
inc
xchg
cli
cmp
xor
mov
inc
dec
fstp
loop
stc
je
imul
inc
scas
bnd
iret
xchg
les
rol
lahf
pop
je
mov
leave
and
sahf
cmps
pop
xor
xchg
sbb
les
dec
(bad)
dec
ja
xor
mov
xor
jno
data16
push
mov
mov
mov
xchg
pop
mov
dec
xor
leave
pop
pop
rcr
aad
scas
sbb
scas
scas
xchg
add
push
mov
mov
inc
fstp
mov
mov
xchg
arpl
mov
cmps
cli
sub
adc
and
and
ds
mov
sub
sbb
mov
in
call
div
daa
sub
ret
pop
ins
stos
xchg
cmps
mov
xchg
aas
add
(bad)
inc
push
inc
repz
add
and
inc
pop
mov
pop
fdivr
xor
jecxz
sbb
clc
fisub
fmul
lahf
ficom
test
push
jnp
shl
repnz
arpl
jmp
mov
jne
pop
xchg
pop
ss
(bad)
clc
stos
push
mov
sbb
ins
test
popf
je
outs
ret
imul
icebp
adc
dec
out
mov
jl
mov
hlt
mov
outs
mov
rol
pop
jbe
aaa
xor
or
sub
xchg
sbb
mov
arpl
je
pushf
pop
or
out
dec
pop
add
sbb
repz
inc
dec
xchg
mov
loop
mov
sbb
je
sar
mov
stos
push
sub
lds
add
jmp
leave
inc
loop
in
cmp
mov
pop
mov
in
or
fist
dec
aad
mov
jmp
push
jge
mov
pop
mov
and
sar
mov
add
ja
inc
shr
es
or
ror
nop
dec
std
shl
(bad)
les
xor
aam
enter
outs
div
inc
adc
ja
repnz
(bad)
rcr
dec
shl
(bad)
in
inc
mov
cmp
cmc
mov
popf
gs
sub
dec
xchg
inc
sar
in
out
dec
pop
(bad)
mov
out
adc
or
fiadd
scas
sbb
out
xor
jae
test
data16
push
rcl
and
fidivr
movs
aaa
jnp
in
mov
mov
jmp
aaa
fnstcw
aas
push
lea
(bad)
sub
jp
jo
in
sub
mov
retf
adc
pop
cmp
jl
jp
out
xchg
jge
jmp
jmp
xchg
xchg
fwait
add
or
sbb
inc
mov
fdivr
movs
mov
fmul
rcl
addr16
inc
aad
imul
in
and
cmp
ins
aas
and
clc
ror
mov
dec
cmps
mov
shr
xor
ins
jmp
stos
sti
xchg
pushf
ret
or
adc
mov
leave
xor
mov
nop
inc
push
dec
mov
adc
outs
outs
or
push
icebp
out
mov
pop
xchg
mov
sub
xor
inc
cld
mov
out
push
or
loop
test
mov
in
sbb
sub
cmp
adc
mov
(bad)
or
(bad)
and
jecxz
xchg
sti
push
dec
and
add
lods
xor
sbb
mov
les
nop
lods
fs
xor
xchg
jo
push
adc
sbb
mov
push
and
movs
out
movs
xor
and
push
push
gs
mov
cmps
fucomip
pushf
cmp
push
retf
movs
lahf
movs
cwde
(bad)
jmp
xchg
frstor
xor
or
jecxz
adc
jno
mov
std
cmp
xchg
mov
aaa
repnz
sahf
int
push
jne
aas
cs
sbb
or
jne
into
adc
sbb
into
mov
scas
mov
cmp
(bad)
stos
mov
not
(bad)
test
pop
(bad)
mov
ror
mov
mov
jmp
inc
sti
mov
and
call
aaa
sti
mov
fcomip
adc
lock
mov
dec
add
repnz
sti
dec
popf
mov
jp
mov
sbb
fisttp
xchg
jnp
jmp
inc
(bad)
mov
ins
adc
mov
and
out
sti
arpl
call
push
ret
adc
fiadd
repnz
(bad)
and
and
or
cwde
jmp
xchg
retf
shl
xor
xchg
dec
rep
dec
xchg
cwde
lods
popf
add
test
jnp
imul
jp
add
and
fs
push
jecxz
(bad)
ins
jge
test
sub
mov
ja
shl
cmp
add
(bad)
pop
shr
pusha
mov
or
push
jg
adc
xchg
mov
mov
cmp
add
jmp
dec
int3
test
icebp
pop
fisubr
scas
repz
imul
lods
outs
in
inc
rol
test
cli
sub
xchg
sbb
push
les
mov
mov
shl
icebp
add
pop
sbb
xor
pop
fdivr
mov
mov
jecxz
idiv
xchg
push
daa
dec
push
(bad)
sub
push
iret
xor
and
sub
mov
push
cwde
push
xchg
cmp
mov
pop
push
gs
es
push
ret
call
mov
dec
push
sar
arpl
in
shr
mov
jno
mov
mov
or
ins
fucomi
mov
mov
fisubr
mov
jg
push
jo
sar
les
shr
fiadd
out
xor
or
das
hlt
aad
dec
scas
pop
clc
lahf
iret
sbb
pop
js
retf
jmp
(bad)
pop
cmp
std
xor
cmps
retf
ret
xchg
icebp
imul
cs
lock
pop
jp
loop
jae
jns
xchg
clc
adc
mov
ret
xor
out
loop
(bad)
jmp
jle
test
imul
adc
pop
xlat
mov
sub
mov
out
test
stos
shl
sar
shr
or
xchg
sub
movs
push
push
hlt
and
outs
aam
loope
dec
nop
mov
out
neg
jae
or
loop
and
test
sub
dec
sub
test
repnz
adc
fxch
xchg
cwde
int
pop
gs
ja
aaa
adc
mov
test
pop
sbb
(bad)
aaa
push
mov
adc
mov
das
clc
xchg
inc
and
xchg
xor
jg
dec
xchg
add
in
fdivr
jp
jmp
sub
xchg
daa
mov
sti
sub
lds
jmp
outs
in
add
ret
daa
pop
mov
sbb
in
ficomp
add
cmovne
clc
xlat
lock
test
shr
jmp
mov
jns
fsubr
loopne
mov
in
mov
aad
xor
inc
mov
call
sbb
push
mov
push
dec
xchg
sub
mov
and
hlt
xchg
test
enter
or
fidivr
dec
mov
repz
cmp
xor
pop
std
lock
push
or
stos
iret
mov
and
sub
add
repz
repnz
cmp
lea
(bad)
icebp
test
xchg
lods
xchg
sbb
or
push
idiv
loope
(bad)
in
rol
fnstcw
mov
aam
jp
or
push
xchg
and
pop
add
inc
int3
push
and
aaa
inc
ret
dec
mov
mov
fidiv
or
jae
call
inc
mov
(bad)
lock
cli
sub
adc
mov
mov
movs
sbb
fwait
jecxz
xlat
dec
clc
ret
pop
xchg
cmp
imul
jmp
sbb
adc
das
out
xchg
jbe
jle
fdiv
sbb
mov
pop
xchg
mov
outs
ret
cmp
jae
outs
jge
in
push
mov
pop
xchg
sbb
retf
in
inc
mov
and
ret
xchg
pop
xchg
inc
jecxz
mov
xchg
xor
div
lods
mov
adc
sbb
sbb
mov
lahf
loopne
xchg
sbb
or
cdq
fdiv
push
movs
fwait
adc
mov
pop
bnd
sbb
stc
pop
mov
(bad)
sti
add
cmps
or
push
lods
pop
lods
(bad)
retf
mov
sub
cmc
inc
dec
mov
fidiv
add
push
inc
in
movs
out
je
sti
sbb
mov
iret
adc
call
bound
xchg
xchg
call
out
mov
movs
in
ja
jl
push
adc
adc
add
shr
cmc
mov
inc
test
lahf
movs
or
scas
push
into
push
jecxz
jbe
cmp
(bad)
push
jne
pop
pop
test
outs
mov
lods
xor
shl
les
test
xchg
jmp
les
retf
or
dec
inc
test
push
clc
mov
rcl
int3
pop
iret
js
imul
inc
push
out
sub
mov
ficom
inc
ja
dec
sbb
add
cmp
(bad)
adc
jg
in
fnstcw
mov
dec
(bad)
jl
xchg
add
pushf
sbb
addr16
mov
mov
je
and
jbe
js
test
data16
in
jns
xchg
mov
add
jb
addr16
hlt
scas
mov
(bad)
rcl
dec
fwait
push
(bad)
mov
cmp
cs
cmc
arpl
cld
and
pop
lea
daa
cmps
pop
les
arpl
ret
pop
and
ud0
pop
test
pop
jno
imul
mov
jbe
or
mov
sub
pop
movs
and
out
ins
inc
das
retf
loope
inc
pop
(bad)
retf
xor
adc
mov
xor
jns
xor
mov
jecxz
in
and
out
icebp
mov
and
pop
fdivr
cmp
inc
sub
hlt
je
popa
cs
xor
loop
xor
movs
pusha
loopne
call
jns
test
or
inc
mov
mov
fwait
(bad)
retf
lea
ins
imul
mov
adc
iret
sbb
fisttp
mov
push
adc
out
outs
dec
sbb
add
iret
add
bound
mov
adc
sub
pop
jbe
fs
xchg
jle
jecxz
cmp
ror
aas
in
lods
fisttp
add
or
xchg
daa
outs
and
sbb
push
cmp
sbb
adc
lods
add
loope
int
pop
imul
arpl
cwde
sbb
outs
fld
lods
imul
shr
jbe
xchg
or
push
pop
adc
adc
int3
jmp
cli
dec
pop
es
dec
cdq
cwde
inc
je
xor
into
push
mov
in
jnp
loope
test
push
ffree
stos
popf
push
imul
sbb
pop
or
sti
jb
sub
cli
xchg
jmp
sub
loop
xchg
pop
xor
add
mov
dec
adc
and
or
or
push
sbb
xor
adc
adc
call
out
pop
jns
dec
or
adc
loope
je
retf
push
rcr
ffree
push
cs
pop
jecxz
sbb
cmps
sub
test
fimul
mov
mov
mov
je
jne
push
or
popa
sbb
xlat
xor
test
push
lea
or
dec
add
jo
out
ret
repnz
add
pop
xor
into
dec
sbb
rcr
mov
mov
pushf
das
mov
inc
cmp
scas
jp
xor
test
mov
xchg
aaa
pop
in
mov
sub
ins
cmc
(bad)
xchg
fsub
jp
pop
mov
cli
movs
push
test
sahf
push
mov
or
leave
gs
dec
(bad)
cmp
loop
shl
mov
addr16
clc
neg
ucomiss
or
mov
add
cdq
push
mov
inc
comiss
lea
je
inc
mov
loopne
xor
jmp
pop
nop
mov
(bad)
arpl
mov
dec
jg
or
push
and
or
and
aad
sub
stc
rol
stc
xchg
xchg
jmp
sahf
pop
jmp
ja
xchg
in
dec
xor
imul
jb
push
and
mov
cmp
in
cmp
adc
data16
dec
cmp
and
cmps
mov
test
adc
jp
mov
xor
gs
inc
mov
mov
data16
inc
or
sub
cmp
arpl
dec
or
or
movs
call
fs
stc
enter
add
sub
call
sbb
ret
and
rcr
retf
cmp
jne
mov
dec
push
dec
sbb
push
or
inc
test
aas
imul
les
push
(bad)
not
mov
(bad)
mov
fs
(bad)
stos
cwde
push
cld
cmp
add
into
mov
or
pop
push
pop
mov
dec
cmp
jnp
mov
ins
push
inc
int
mov
push
and
cmps
push
fwait
shr
test
adc
adc
cwde
jle
adc
fcom
mov
fdivr
fwait
inc
movs
xor
sub
inc
mov
enter
mov
mov
mov
jle
(bad)
mov
sub
xchg
cmp
cmp
mov
mov
outs
ins
sub
mov
dec
mov
xor
lods
mov
xlat
fst
sbb
sub
pop
in
adc
pushf
cmc
repnz
dec
hlt
push
or
push
mov
jge
shl
jmp
pop
push
or
and
repz
jge
xor
mov
mov
inc
xlat
push
mov
popf
int3
dec
hlt
rcl
clc
icebp
ss
idiv
mov
adc
xor
pop
jne
inc
or
repz
mov
imul
test
cmps
cli
jge
mov
sub
cmp
test
add
hlt
xor
hlt
adc
movs
cld
push
in
cdq
mul
cdq
xchg
cld
loope
pop
aam
dec
xchg
lods
mov
mov
fsub
test
dec
out
hlt
jo
xchg
push
push
dec
fadd
pop
push
leave
call
mov
xor
jnp
adc
lahf
mov
push
out
call
cmc
lock
push
fisttp
mov
std
push
sub
pop
fs
in
retf
jmp
and
dec
scas
jle
sti
daa
les
push
movs
cmps
repz
and
jbe
dec
pop
fwait
inc
es
push
aaa
fdiv
push
loope
or
retf
ss
pop
or
nop
push
push
sub
or
jge
arpl
loope
movs
dec
adc
dec
rcr
int3
fcomp
inc
xchg
jnp
add
xor
mov
sahf
ins
dec
inc
neg
xchg
(bad)
cmp
stos
mov
lahf
in
dec
movsx
jl
push
ins
push
mov
sbb
inc
psrlq
movs
or
cwde
sahf
(bad)
stos
xchg
cmp
(bad)
fnsave
jge
jl
lds
sbb
fwait
jge
stc
xor
xor
mov
dec
outs
add
jecxz
aad
mov
push
hlt
adc
(bad)
pop
out
jmp
in
fadd
and
xchg
inc
xchg
nop
push
xchg
(bad)
dec
cmp
clc
out
or
pop
(bad)
push
cdq
sbb
lods
adc
cmp
lahf
adc
mov
rcr
repz
arpl
stos
jnp
aam
les
fcomp
lahf
sbb
in
retf
cmp
pop
shr
sub
or
push
scas
cli
or
je
ret
popf
mov
inc
mov
or
sub
jmp
ins
inc
es
fwait
sbb
ins
push
aam
jmp
adc
push
pop
fisubr
repz
xor
outs
lods
pop
and
jmp
push
fwait
ret
stos
dec
es
push
and
add
adc
inc
mov
or
loope
je
ins
ret
pop
mov
inc
loope
(bad)
rol
loopne
xor
push
and
jmp
mov
jp
xchg
in
bound
loopne
out
mov
cmc
xchg
mov
or
mov
ds
dec
scas
or
xor
xchg
pop
push
xchg
mov
add
and
test
idiv
mov
pop
fild
xor
fisttp
cmp
xchg
dec
and
loopne
repz
cmp
outs
lds
mov
add
cmp
push
pop
scas
cmp
addr16
imul
das
xor
test
cmp
cmp
(bad)
and
jns
(bad)
std
mov
in
jno
inc
and
mov
ret
(bad)
das
inc
mov
test
push
sub
ins
fcmovu
lahf
ja
das
xor
pop
sbb
pop
and
mov
call
shl
mov
cld
test
fmul
outs
gs
add
repz
inc
call
mov
push
ja
(bad)
popa
add
push
(bad)
pop
dec
and
cmps
jl
xor
into
call
lock
popa
mov
popa
test
sahf
cmp
xor
and
mov
mov
in
and
pusha
ret
in
and
scas
int3
outs
pushf
xchg
nop
mov
shl
enter
or
push
call
iret
out
xchg
jge
cmp
sbb
dec
pop
mov
xor
retf
mov
mov
or
mov
or
frstor
test
nop
adc
imul
push
jb
mov
loop
cmps
sbb
xchg
pop
xchg
push
lds
lods
sub
outs
shl
sub
jnp
pushf
adc
jecxz
add
and
leave
sbb
jb
or
js
cmps
gs
dec
dec
pushf
mov
dec
out
inc
test
push
cmp
lods
pop
adc
xor
push
aas
inc
dec
and
repz
std
add
or
ret
or
cmps
mov
mov
adc
loopne
and
in
inc
adc
fcmovu
cmps
add
rcl
nop
fwait
mov
lods
jno
std
call
add
rcl
mov
cmp
cwde
mov
mov
es
sub
add
lea
mov
jne
mov
pusha
cmp
xchg
popa
or
mov
jecxz
mov
int
push
hlt
mov
xor
ds
rol
pop
sbb
dec
dec
mov
sub
ror
pop
pop
lods
pop
cmp
sbb
dec
xchg
push
fild
das
loopne
ret
add
les
arpl
cmp
jae
ret
movs
or
adc
aad
(bad)
cmp
out
and
or
and
or
retf
test
cmc
rol
mov
xor
fdiv
fcmove
and
je
inc
mov
xor
scas
pop
push
out
das
mov
aas
sbb
jecxz
and
sub
xor
ja
out
adc
and
jmp
cmp
inc
jns
nop
jl
sub
cmp
pop
cmc
mov
inc
das
mov
fldenv
mov
in
shr
adc
daa
fnstsw
das
sti
lahf
push
aas
(bad)
out
pop
fs
scas
int
mov
jae
cli
retf
mov
mov
jnp
sub
push
pop
xchg
std
lea
popf
ja
cmc
cmp
mov
hlt
cmc
add
cld
push
(bad)
repz
jmp
nop
or
pop
add
push
sub
inc
fwait
test
call
push
iret
mov
mov
enter
outs
mov
and
mov
sub
ja
cmp
mov
lea
xchg
jg
jp
and
aad
aad
les
es
sub
xchg
push
js
pushf
idiv
xchg
stos
stos
aad
xchg
jnp
imul
mov
jecxz
ss
imul
xor
add
sub
jmp
aas
(bad)
mov
add
mov
and
fnstcw
cmp
push
xor
xchg
push
fwait
or
pop
cdq
inc
push
xlat
sub
sub
int3
mov
jnp
and
push
inc
(bad)
sub
xchg
push
pop
jge
push
(bad)
mov
(bad)
retf
dec
aaa
dec
arpl
dec
jge
aam
icebp
ror
or
or
stos
in
pop
cmp
dec
scas
icebp
and
mov
jne
ss
dec
cmp
jg
mov
adc
mov
jo
int
xor
add
cmp
xchg
ins
ret
jmp
mov
mov
mov
pop
mov
call
addr16
sub
ss
jns
ins
xchg
mov
in
imul
mov
nop
std
mov
aam
mov
pushf
sbb
fldenv
fcmovnbe
push
ficom
mov
push
adc
xor
add
sub
mov
cmp
pop
sbb
aas
out
push
lea
fdivp
or
loopne
pop
pop
test
mov
fbld
mov
xor
dec
repz
adc
imul
jo
inc
dec
adc
xchg
bound
sub
inc
repz
push
jmp
sbb
cmc
jecxz
ret
xor
push
fisub
lods
xchg
int3
fs
add
push
pushf
pop
push
fisubr
mov
ror
movs
xor
(bad)
and
adc
sbb
cmp
popa
xchg
mov
adc
mov
retf
inc
jns
dec
(bad)
ret
out
div
mov
sti
sbb
jns
jns
lods
xchg
xor
shl
xchg
icebp
push
in
fsub
dec
repz
mov
stos
and
jecxz
popa
sbb
(bad)
js
add
dec
mov
movs
pop
xchg
jmp
loopne
sbb
xor
sbb
shl
cmp
repz
pop
(bad)
or
repz
in
pop
pop
cmp
aam
mov
xlat
test
nop
fistp
dec
retf
pop
inc
jp
or
jne
push
stos
push
repnz
mov
fsubr
xchg
ror
or
mov
push
add
jle
aaa
(bad)
mov
push
inc
mov
sti
mov
(bad)
cmp
xchg
dec
push
test
ss
jl
test
pop
aad
mov
leave
xchg
popa
add
sti
cs
out
mov
rcr
gs
pop
cs
and
imul
sub
dec
xchg
sbb
scas
cmp
test
mov
shl
popa
outs
jo
jmp
out
sub
or
popa
int
out
xchg
cmp
push
sub
and
ins
adc
test
adc
push
rcl
pusha
imul
adc
jmp
add
outs
mov
add
jge
ret
inc
mov
cmp
gs
or
mov
push
mov
cmp
xor
inc
mov
mov
mov
aad
pop
(bad)
sti
add
dec
jnp
lahf
xor
adc
enter
pop
add
stos
mov
mov
ror
retf
ficom
xlat
cmp
sti
adc
fiadd
inc
xlat
neg
out
mov
xor
hlt
js
shl
outs
rol
std
mov
lods
lds
sbb
mov
cli
jae
leave
sub
movlps
icebp
int
mov
daa
movs
jno
clc
jg
call
inc
mov
call
js
imul
jmp
inc
mov
into
mov
jb
dec
sub
pop
inc
mov
in
add
ds
mov
sar
mov
mov
lods
es
(bad)
std
retf
cld
jo
mov
pop
hlt
dec
ffree
out
xor
aad
outs
push
cmp
or
outs
ficom
dec
lock
xor
mov
push
jmp
imul
outs
mov
xor
cmp
into
retf
lea
fdivr
lea
shr
fs
cld
mov
jmp
pop
gs
out
clc
jns
inc
rcl
fist
in
aas
mov
popf
ds
aas
sub
arpl
aad
push
xor
repz
xchg
pop
pusha
popa
jg
scas
or
(bad)
retf
add
mov
scas
pop
aaa
je
mov
std
outs
ins
mov
call
and
rcr
rcl
pop
mov
sub
xchg
mov
cld
inc
inc
(bad)
mov
adc
clc
cmp
hlt
movs
movs
out
repz
xchg
and
sub
sub
cmc
sbb
pop
dec
test
or
movs
jae
das
jl
xor
dec
mov
sub
and
dec
sub
mov
dec
lock
in
(bad)
pop
adc
pop
jno
adc
push
daa
pop
or
daa
or
add
out
push
call
and
ins
mov
inc
fistp
or
xchg
push
jmp
inc
int
mov
inc
mov
call
in
pop
pop
in
and
shl
iret
cld
adc
lahf
lods
mov
sbb
adc
call
call
adc
ret
mov
jmp
mov
push
out
aas
mov
mov
aam
jle
jbe
and
cmp
mov
xchg
inc
sar
in
ss
pusha
xor
ret
inc
fcmovnb
adc
shl
sub
pop
nop
xor
or
(bad)
jne
call
xchg
movs
shl
cmp
mov
add
pop
xor
call
add
out
shl
aad
scas
sbb
js
jb
int
xchg
retf
mov
push
mov
xchg
sub
in
push
cmp
lods
es
push
arpl
or
pop
aad
lods
xchg
mov
je
icebp
pxor
cmp
push
push
aam
mov
and
xchg
dec
cmps
mov
xchg
test
and
mov
imul
and
int
movs
ins
adc
xor
inc
aam
out
shr
mov
in
les
dec
ins
dec
into
mov
ins
aaa
cmps
inc
mov
pusha
aas
jo
adc
pop
(bad)
and
retf
stc
and
mov
lds
pop
pop
idiv
add
dec
das
mov
push
dec
call
(bad)
adc
xchg
mov
and
push
adc
mov
or
clc
jmp
pusha
sahf
mov
jle
lock
jmp
mov
sub
pushf
scas
xor
and
hlt
push
fwait
or
ds
js
leave
inc
fdivr
mov
mov
cmp
lock
mov
or
add
outs
sub
mov
shr
popf
jmp
ja
aas
fnstsw
ins
mov
add
sub
mov
and
jmp
push
and
call
sub
rcr
ret
fisubr
fcom
jo
dec
cmp
ss
xchg
sub
push
int3
or
sbb
sub
mov
jg
mov
sbb
(bad)
fwait
cs
pop
movs
dec
jmp
cmc
jmp
lods
arpl
test
mov
jp
and
push
xor
std
dec
jae
leave
push
cmp
xchg
push
jp
lds
imul
add
and
popa
add
fld1
jmp
push
sub
adc
shr
xchg
les
mov
dec
sbb
jmp
loop
dec
push
movs
jno
imul
repnz
test
xor
cmp
mov
fld
mov
xor
stc
inc
imul
and
or
repz
mov
xor
jno
daa
xchg
and
imul
or
dec
jae
pop
pushf
pop
cmp
out
(bad)
mov
jbe
xchg
inc
mov
aam
xor
loopne
clc
lahf
fidivr
xchg
or
cli
xor
ja
pop
push
mov
or
je
or
mov
ja
jo
mov
scas
xchg
mov
rcl
push
out
stc
hlt
inc
jmp
scas
and
fs
test
test
leave
outs
cmp
mov
loope
jb
cmp
shl
or
lods
xchg
cmp
push
mov
mov
jmp
stos
or
mov
imul
in
and
push
push
sub
mov
and
(bad)
fs
push
xchg
or
loop
and
push
rcr
bound
fsubr
lds
inc
test
adc
js
pop
push
retf
fsub
ja
mov
dec
xor
inc
stc
in
inc
movs
jae
pop
adc
outs
imul
sub
pusha
inc
jae
lds
sub
or
pop
dec
cli
adc
push
sar
and
mov
popf
add
idiv
push
mov
add
popa
and
push
xlat
fmul
popf
xchg
cmp
addr16
push
adc
push
int3
push
in
sbb
mov
add
pop
ins
ret
fstp
inc
mov
scas
push
sub
sbb
add
push
xor
sbb
les
push
adc
push
and
js
or
ficomp
lods
adc
push
adc
iret
push
push
loopne
xchg
mov
(bad)
loopne
nop
sbb
and
ds
ins
adc
in
stos
mov
sbb
xor
adc
sub
or
cmp
xlat
push
inc
in
test
ins
or
xchg
sub
(bad)
cs
push
inc
push
loop
data16
push
test
add
jo
and
or
iret
or
and
lds
add
in
mov
mov
mov
push
jecxz
pop
or
cmp
adc
enter
xchg
aas
mov
repnz
cli
movs
inc
sbb
jb
pop
aaa
or
cld
pop
adc
movs
xchg
inc
js
mov
jno
scas
mov
loop
pusha
ror
fcom
or
dec
imul
(bad)
fmul
cmps
(bad)
iret
jecxz
daa
mov
and
sub
fmul
push
push
(bad)
xchg
test
lds
shr
call
imul
lahf
loop
and
lock
add
push
scas
addr16
gs
dec
sahf
mov
cmps
imul
mov
aad
adc
mov
(bad)
mov
jbe
jmp
(bad)
mov
mov
xchg
in
dec
rcr
jb
loope
push
xor
xor
ins
popa
mov
push
lock
outs
(bad)
clc
test
mov
loope
mov
xchg
test
sbb
test
mov
add
mov
adc
popf
enter
inc
xor
sbb
or
out
movs
sbb
inc
or
popa
rcl
xor
dec
mov
repnz
data16
and
mov
mov
into
adc
jge
call
iret
and
out
cmp
xchg
or
lods
in
jb
jmp
fbstp
or
sub
shl
mov
or
push
jmp
pop
and
cli
adc
jo
mov
pcmpeqw
sub
xor
retf
scas
out
ss
mov
jg
(bad)
loop
in
mov
movs
mov
ins
xor
mov
fstp
fisttp
mov
adc
jmp
inc
mov
xchg
fwait
lahf
ins
aaa
mov
stos
xor
push
and
cmp
dec
sbb
push
stos
les
sahf
cmp
inc
pop
and
xor
icebp
push
lock
xchg
xchg
outs
dec
inc
push
ja
mov
or
dec
dec
pop
arpl
ja
add
stc
mov
lahf
mov
arpl
jl
xor
jo
pop
xchg
hlt
mov
inc
xchg
(bad)
mov
cwde
popa
call
outs
fs
pop
aaa
pop
pop
ret
inc
or
mov
mov
and
fnstsw
dec
xchg
scas
or
icebp
ss
loop
rol
bound
(bad)
pop
fist
and
cdq
shr
out
cs
push
in
lock
cmp
sbb
inc
jmp
loopne
cmp
(bad)
fnsave
arpl
(bad)
cld
cli
dec
cmps
lahf
pushf
adc
inc
retf
stc
stos
enter
push
fs
xchg
pop
push
clc
mov
mov
mov
sahf
jns
imul
push
push
in
mov
xor
hlt
jno
push
or
mov
int3
cmp
(bad)
cmps
sub
aam
add
inc
jnp
test
adc
xor
fdivp
stos
nop
clc
sub
dec
add
mov
jmp
call
jae
xchg
mov
(bad)
cmc
xlat
xchg
repnz
push
dec
add
jge
jns
mov
dec
mov
dec
ins
retf
inc
mov
xchg
fs
int3
fidiv
and
sbb
xchg
out
mov
dec
popa
pop
pop
call
mov
push
jb
mov
retf
movs
xchg
mov
int3
je
jmp
pop
sub
dec
bound
hlt
push
mov
jmp
add
rcl
scas
dec
neg
push
and
das
pop
in
inc
sbb
loop
cdq
fist
xchg
je
dec
(bad)
mov
sub
outs
mov
or
pop
mov
dec
xchg
pop
enter
jnp
jnp
leave
mov
call
pop
cld
(bad)
out
inc
jno
fisub
leave
loop
sti
jg
inc
jo
shl
pop
dec
mov
stos
xor
sahf
imul
xchg
repnz
icebp
int3
inc
(bad)
sub
stos
hlt
scas
and
in
addr16
push
sbb
mov
xchg
push
retf
fist
clc
xor
xchg
push
adc
xchg
or
jmp
scas
rol
push
stos
or
loop
mov
es
test
sub
mov
ror
aad
sub
sub
call
dec
fcmovbe
pushf
ss
or
fdivrp
(bad)
push
push
xor
pusha
fdiv
xor
mov
enter
lahf
and
int3
cmps
test
rcr
cld
and
mov
xchg
mov
or
sub
rcl
xor
and
push
ret
shl
mov
add
cmp
mov
frstor
or
loopne
scas
movs
pop
pushf
je
mov
cld
addr16
push
xlat
nop
rol
(bad)
cli
xchg
repnz
mov
movs
loopne
push
out
movs
pop
jb
sub
loop
jmp
lock
addr16
pushf
push
and
jbe
lahf
fmul
leave
lds
mov
fadd
xchg
shl
mov
push
shl
dec
xchg
icebp
movs
pop
pop
aaa
jmp
inc
mov
mov
lock
les
gs
dec
aaa
mov
cdq
cmc
jb
pop
test
jo
mul
imul
xchg
jmp
pop
lea
fs
scas
xor
xchg
jb
mov
movs
xchg
xchg
in
enter
imul
ret
pop
mov
cmc
rcr
test
mov
adc
jmp
jp
cmps
add
jg
xchg
data16
mov
scas
mov
imul
jnp
ins
dec
dec
cmp
push
lods
cdq
test
or
or
retf
mov
xor
test
jno
imul
or
lods
add
pop
inc
add
cmp
pop
jae
aaa
xchg
pop
sbb
pop
jb
fistp
je
cmc
mov
(bad)
jbe
mov
pop
mov
jns
movs
add
inc
dec
aam
mov
outs
mov
push
in
push
hlt
pop
cmp
inc
test
call
out
add
jmp
add
sub
jb
hlt
hlt
scas
inc
xor
jmp
cwde
jns
add
aad
rcl
lds
mov
hlt
scas
mov
cmp
push
mov
(bad)
aad
cmp
mov
or
mov
outs
sub
sbb
sbb
push
xchg
sub
and
ror
inc
jbe
dec
mov
(bad)
sar
pop
jo
jg
je
pusha
push
nop
dec
or
push
xchg
xchg
xchg
lea
test
sahf
call
cmps
daa
mov
and
cmps
(bad)
sti
cmp
repnz
and
fbld
inc
push
je
test
jge
fisubr
push
adc
repz
jge
cld
pop
mov
rcl
int
cmps
dec
mov
xchg
xor
fcmovnb
leave
dec
sbb
cs
jno
das
mov
scas
sub
in
mov
cmp
mov
jp
mov
popf
pop
mov
movs
mov
jge
inc
sub
arpl
sub
jmp
stos
and
test
mov
cmp
fst
and
pop
inc
mov
div
mov
jg
stc
mov
dec
cmps
mov
mov
add
push
retf
adc
ret
rcl
mov
xor
sub
loopne
dec
adc
(bad)
mov
test
xor
mov
(bad)
sub
in
inc
xchg
movs
out
sar
sbb
pop
push
loope
mov
mov
and
mov
mov
cld
aas
pop
adc
xlat
xchg
sbb
cmc
cmps
stos
ret
cmps
(bad)
lahf
adc
adc
jnp
std
push
xchg
xor
arpl
push
clc
cmp
push
xor
sbb
fwait
cmp
clc
mov
imul
adc
das
idiv
das
xchg
push
lods
dec
push
(bad)
out
call
out
or
jbe
push
jecxz
fwait
and
push
xor
push
les
add
fdivr
outs
call
es
mov
fldenv
outs
fnclex
stc
pop
ds
cwde
(bad)
adc
mov
fsubr
popa
sbb
mov
es
sub
push
dec
sbb
(bad)
aam
mov
imul
lock
fstp
outs
imul
in
scas
fdiv
jo
add
mov
mov
mov
shl
test
jo
or
jg
and
jg
mov
rcl
(bad)
cwde
fst
pop
sbb
push
push
mov
shl
dec
ds
mov
sbb
and
dec
loop
mov
jle
rcl
ja
push
add
dec
add
add
shl
pop
leave
fistp
mov
or
fdivr
ins
gs
out
jecxz
gs
sbb
mov
cld
enter
mov
fs
pop
or
dec
jnp
add
push
xchg
and
sbb
ficom
xor
push
xlat
adc
cwde
and
or
jns
dec
xchg
ret
cmp
sub
rol
push
pop
cwde
xchg
inc
sbb
mov
loope
xchg
mov
xchg
mov
xor
cmps
jae
addr16
inc
mov
(bad)
sub
shr
cmp
outs
mov
loope
sbb
aas
push
sbb
push
push
or
and
jo
aam
idiv
fwait
xor
and
ret
out
xor
mov
(bad)
xor
and
jg
fchs
ret
mov
mov
call
adc
shl
sub
sub
out
mov
or
jns
push
addr16
mov
(bad)
xchg
inc
dec
cmp
(bad)
ss
shl
ss
das
cwde
xchg
mov
gs
sar
mov
lods
xchg
mov
and
push
loop
mov
pop
or
mov
or
jmp
sti
dec
fcmovnbe
test
mov
add
mov
sub
popa
jo
(bad)
fstp
stos
jp
jb
sar
inc
jp
mov
cmc
bound
repz
daa
lods
out
int
pop
mov
mov
mov
sub
shl
and
or
jo
rcr
daa
adc
jne
sbb
dec
xor
int3
lea
jl
addr16
retf
cmp
dec
pop
pop
sti
in
or
xchg
test
push
pop
leave
jge
fmul
mov
fnstcw
pop
shl
les
jl
ja
scas
fbstp
push
hlt
jg
jl
sbb
cmp
addr16
jnp
bound
enter
out
std
rcr
jecxz
sub
addr16
nop
test
cmps
xchg
jmp
sar
or
pusha
dec
mov
in
cmps
retf
adc
mov
sub
lock
fwait
aad
stc
mov
sub
xchg
clc
and
fmul
mov
outs
in
mov
adc
adc
movs
lahf
mov
xchg
inc
ds
repnz
cwde
adc
jo
bound
mov
jae
mov
dec
je
mov
stc
xchg
mov
pusha
imul
cmp
adc
in
inc
mov
lock
movs
into
enter
sub
repnz
dec
cmp
xchg
clc
mov
add
adc
gs
mov
add
dec
lahf
and
lods
sbb
cmp
iret
sbb
stc
or
lea
leave
adc
push
adc
iret
repz
outs
stc
push
jb
push
sub
pop
loope
rcl
xchg
sub
sbb
dec
cmp
jnp
or
push
mov
int
adc
clc
aad
or
mov
adc
or
inc
test
mov
test
mov
mov
cmp
cmps
inc
rcr
leave
sbb
out
inc
fidivr
repz
test
jo
(bad)
in
(bad)
repz
mov
jmp
xchg
into
ss
mov
or
push
in
stos
sub
or
dec
mov
cmp
(bad)
ja
rcr
xor
or
repnz
and
repnz
push
ret
pop
imul
sub
push
imul
xchg
test
mov
loop
(bad)
loopne
cmp
mov
sub
and
push
mov
inc
(bad)
xor
es
sar
adc
mov
sub
and
mov
push
sti
cmps
lea
mov
add
retf
mov
nop
xor
cmp
into
xor
pop
lock
fldcw
inc
and
mov
sub
ret
imul
mul
test
shl
retf
out
push
cld
and
(bad)
adc
push
aaa
sub
push
jge
in
jp
iret
cmps
xor
sahf
and
pushf
(bad)
mov
dec
mov
iret
or
test
(bad)
jmp
xlat
pop
jnp
dec
xchg
xchg
js
or
push
imul
out
fcomp
aam
bound
movs
fisttp
xor
xchg
cmp
cwde
pop
push
sub
int
lods
loop
scas
push
add
cmp
popa
or
aaa
icebp
xchg
pusha
das
fidivr
mov
jmp
jb
mov
sbb
jnp
and
mov
cwde
jo
and
xchg
ins
lods
ret
jl
jae
rcl
aad
sub
mov
xchg
icebp
and
or
stc
leave
fsub
xchg
loope
dec
sub
inc
mov
xchg
adc
arpl
push
lea
or
fild
vpmaxsw
not
or
pushf
mov
push
and
aas
stos
xchg
mov
es
and
pop
and
shr
sub
and
dec
or
in
cmp
sbb
push
xor
out
push
push
adc
ret
xchg
or
lock
mov
cwde
ret
push
fscale
or
jns
jo
aad
push
idiv
loopne
pushf
rcr
mov
cmp
push
xor
fnstsw
lods
and
cmps
xchg
pop
(bad)
jo
imul
aas
mov
into
mov
int
or
cli
out
(bad)
lock
push
ja
in
sbb
vcmpps
add
and
(bad)
push
push
jns
add
push
pushf
(bad)
jl
jp
fisub
int
jg
add
ret
mov
rcr
fwait
in
in
stc
out
repz
(bad)
jecxz
dec
call
cmp
outs
pop
add
lods
jecxz
aas
movs
mov
and
cli
cld
mov
in
out
out
aad
mov
imul
aam
adc
ret
repnz
call
adc
cmp
loope
jl
mov
and
xor
stos
mov
mov
sar
push
mov
aaa
in
jnp
jne
inc
stos
cmps
xchg
push
add
sub
jno
sbb
mov
out
movs
inc
sub
and
push
cmp
xor
cmp
leave
pop
and
fs
mov
jns
or
int3
jbe
cmp
mov
cdq
inc
fwait
popa
pop
imul
xor
lds
out
das
mov
push
inc
daa
test
test
xchg
pop
fsubp
sahf
imul
ja
sbb
outs
cmp
and
lds
push
or
adc
ror
inc
popf
jnp
je
cmp
add
sti
mov
jg
ja
and
jp
xchg
stc
jmp
loop
in
pop
jae
pop
leave
pop
repnz
out
add
es
or
out
sub
jae
jnp
push
sub
jo
mov
mov
cmp
inc
xlat
inc
int3
lea
std
pop
jp
es
(bad)
fisubr
fst
les
ds
sub
das
mov
adc
xor
ds
imul
jo
addr16
stos
pop
pushf
jae
jl
cmps
adc
push
rol
adc
test
fsubr
mov
(bad)
pop
pop
mov
xor
adc
out
pop
lock
jo
stc
sbb
rol
mov
mov
cmp
adc
push
adc
cmp
ja
jmp
mov
adc
aam
in
fwait
jo
mov
fst
push
mov
xchg
dec
imul
mov
ins
loop
push
clc
dec
jmp
test
push
(bad)
les
(bad)
sub
adc
adc
stc
push
xchg
(bad)
push
mov
jmp
and
jg
sbb
push
adc
add
push
daa
outs
mov
mov
xor
(bad)
mov
ds
inc
cmps
xor
(bad)
mov
mov
shl
movs
xchg
repz
cs
inc
sbb
xchg
adc
pop
movs
or
into
xor
in
inc
ins
mov
mov
pushf
xchg
rcl
mov
push
jle
lds
sub
addr16
xchg
cli
push
shr
add
mov
imul
and
les
pop
xor
repnz
dec
mov
adc
cmp
mov
adc
out
pop
test
rcl
std
addr16
xor
out
mov
jmp
jnp
sar
call
movs
ja
mov
xchg
jl
sbb
mov
jmp
test
dec
or
cld
sub
cmp
(bad)
jae
mov
dec
mov
cwde
jo
call
mov
(bad)
inc
xchg
jecxz
scas
mov
call
or
inc
push
mov
(bad)
jmp
out
add
jne
jmp
cmp
mov
nop
xchg
or
dec
adc
cmps
jle
mov
pmullw
xor
mov
call
adc
call
fsub
ja
adc
retf
add
mov
pop
jne
dec
out
ss
(bad)
(bad)
dec
mov
mov
sub
js
push
rcr
outs
test
imul
clc
dec
stos
imul
mov
mov
gs
outs
inc
not
push
mov
movs
lea
jmp
push
cmp
div
retf
jg
cmp
out
and
stos
pusha
sub
icebp
jmp
fst
xchg
out
js
jmp
pop
and
sub
les
xchg
sbb
add
xor
sub
jmp
loope
ret
in
xchg
mov
(bad)
or
and
mov
scas
imul
lea
out
add
add
pop
fild
fdivrp
ds
push
sbb
out
sub
mov
sahf
sbb
push
lds
inc
xchg
outs
push
shl
push
cwde
mov
movs
cmp
push
push
push
jl
adc
mov
push
(bad)
in
imul
dec
aad
cli
add
sahf
add
lods
pop
sub
mov
jl
stos
call
mov
adc
add
fs
mov
jecxz
(bad)
imul
pop
(bad)
xchg
ja
pop
push
bound
dec
out
jmp
in
pushf
mov
dec
pop
xor
inc
xor
aas
jge
icebp
jecxz
inc
inc
mov
ja
pop
addr16
sbb
xchg
rcl
mov
les
dec
push
repz
fcomp
push
jge
jmp
sbb
(bad)
out
mov
cwde
dec
popa
and
xlat
cmp
call
dec
nop
mov
xchg
sub
cmp
dec
mul
or
mov
loop
xor
out
rcr
sub
ins
inc
dec
xlat
xchg
lock
daa
icebp
and
dec
jne
rcr
arpl
imul
xchg
adc
clc
mov
and
dec
jle
sbb
xor
xchg
mov
sbb
mov
and
movs
test
add
nop
fsub
mov
call
stc
ret
mov
out
mov
push
icebp
int3
movs
ins
popa
iret
outs
push
adc
mov
pop
push
push
movs
ficomp
mov
cmp
icebp
clc
out
shl
arpl
pop
ja
arpl
ss
out
mov
push
mov
add
adc
mov
loop
loop
mov
fbld
lods
xor
push
xlat
fxch
push
nop
mov
sbb
gs
inc
dec
mov
ins
mov
mov
xchg
int3
fwait
shr
in
and
mov
imul
dec
fs
(bad)
jl
adc
inc
movs
out
add
(bad)
lock
mov
ins
call
int
xor
jae
cmp
cmps
and
aaa
pop
xor
sbb
icebp
sar
mul
xor
leave
inc
inc
push
into
shl
add
sub
movs
and
push
mov
sar
je
stc
repnz
pop
addr16
rol
jmp
scas
mov
repz
dec
xor
outs
push
mov
std
xor
fild
and
stos
jb
std
xlat
in
pop
push
aaa
cmps
mov
(bad)
stos
cs
leave
xchg
clc
push
fstp
daa
(bad)
ja
add
cmp
inc
jns
xor
sbb
xor
dec
ret
jl
or
jmp
movs
mov
adc
ja
xchg
and
dec
call
test
in
add
inc
iret
std
ret
inc
test
in
(bad)
and
enter
fwait
mov
data16
rcl
or
imul
mov
jg
(bad)
lods
dec
stc
push
sbb
mov
popa
aas
pop
stos
nop
nop
sbb
cdq
and
jg
dec
(bad)
and
mov
xchg
mov
push
xchg
mov
xchg
cmp
sbb
mov
mov
rcl
les
adc
sub
mov
lahf
shl
pop
xchg
mov
inc
ret
call
nop
scas
mov
rol
sub
and
pop
mov
sub
sub
jns
stc
push
jbe
inc
push
outs
call
in
fisttp
mov
rcl
popf
fxch
mov
fucom
cli
test
adc
mov
jl
lea
test
and
or
xor
(bad)
pushf
pop
sub
inc
movs
jge
cli
sbb
outs
cdq
adc
xlat
aad
lea
dec
imul
mov
adc
or
jmp
mov
out
lods
mul
pop
outs
sbb
mov
fcomp
sbb
lods
pop
in
lods
pop
int
cmp
(bad)
repnz
ss
imul
lods
das
or
pop
call
outs
rol
(bad)
and
mov
mov
aad
dec
cmp
push
lods
cmp
hlt
push
ins
ja
xor
xchg
ins
jb
lea
retf
dec
fwait
adc
cmps
xchg
(bad)
loopne
and
ret
shl
cs
dec
sub
xor
mov
add
and
int
pop
or
cdq
jnp
les
add
jp
push
push
mov
inc
cdq
sbb
hlt
xchg
aas
mov
mov
pop
dec
leave
sub
adc
mov
loopne
or
mov
add
or
dec
sub
test
push
mov
lock
mov
mov
into
adc
int3
inc
or
jp
stc
aad
or
outs
mov
out
in
pop
leave
in
xor
pop
sub
nop
push
dec
jmp
ins
xchg
dec
lods
mov
addr16
std
out
daa
dec
xor
jnp
imul
mov
jno
push
pop
cmp
das
fwait
addr16
or
outs
ret
ds
aam
push
sbb
cmp
mov
cvtps2pd
push
cmps
jg
xchg
out
mov
and
xor
in
xchg
sub
fbstp
pop
fmul
(bad)
fistp
xchg
aaa
and
push
push
add
or
jge
and
dec
in
int
xchg
fs
and
add
xchg
dec
cmps
ret
icebp
outs
ja
push
mov
cmp
icebp
cwde
lds
jmp
or
call
xor
ss
loop
cmps
ins
fs
in
dec
iret
fstp
mov
cmc
xchg
es
push
jb
clc
or
mov
push
mov
test
mov
xchg
in
test
ss
sbb
add
inc
mov
mov
pop
and
cmp
(bad)
jb
sbb
sub
outs
(bad)
push
or
ret
xor
in
lahf
inc
scas
loope
fidivr
mov
push
xchg
into
data16
mov
aaa
mov
push
pop
mov
add
inc
add
shr
or
jmp
outs
test
adc
xor
int
push
and
jl
jne
jbe
pop
sbb
fstp
or
outs
test
and
cwde
dec
add
pop
xor
movs
jns
mov
(bad)
clc
imul
mov
or
dec
sbb
push
sar
loop
hlt
ins
std
cmp
pop
mov
jmp
shl
pop
pushf
sbb
xor
and
call
mov
cmp
fistp
ins
add
xchg
add
jns
mov
ds
ss
popf
shl
cs
inc
pop
test
imul
xchg
scas
fisubr
push
loop
or
push
add
call
xor
pop
inc
or
paddb
imul
lahf
loop
cmp
fs
out
xchg
dec
iret
lea
es
scas
jae
movs
out
ror
pop
jns
dec
fild
push
lea
jb
adc
push
dec
test
ja
scas
xor
int3
push
mov
es
int3
mov
mov
cmp
sbb
xchg
shr
imul
jo
push
std
fs
(bad)
fld
pop
or
push
xor
inc
fs
push
cmp
cwde
and
loopne
popa
push
push
sbb
jbe
lahf
xchg
call
mov
push
stos
fild
sar
fld
ss
dec
fnsave
mov
iret
std
add
push
jnp
inc
call
xchg
push
xchg
std
push
and
shl
jg
enter
rol
or
cmps
gs
gs
push
and
imul
xor
and
int
mov
aam
cdq
push
test
rcr
(bad)
je
das
mov
mov
mov
scas
pop
mov
imul
(bad)
push
shl
stos
pushf
out
hlt
mov
adc
clc
fild
pop
dec
jne
push
add
gs
dec
cmc
and
jns
loopne
popf
cmps
test
rol
data16
cli
cmps
mov
mov
jb
je
mov
pusha
jb
movs
fst
lods
icebp
jbe
and
pop
and
jg
lods
and
or
loope
int3
xchg
pushw
xchg
mov
dec
push
push
pop
lahf
lea
dec
mov
int
psubd
and
push
jg
push
lods
pusha
dec
dec
stos
xchg
xchg
inc
push
mov
sar
in
cmp
or
pop
sbb
cmp
cmp
fld
sub
adc
jmp
fisubr
jl
retf
lahf
fs
out
ret
pop
(bad)
div
loope
aaa
and
or
outs
rcl
mov
int
cmp
pop
push
std
mov
add
adc
mov
movs
pop
mov
in
add
ja
fmul
fld
lea
jno
loope
push
xor
(bad)
loopne
stos
mov
mov
ret
data16
stos
inc
jbe
jp
lahf
outs
aam
adc
(bad)
jno
enter
add
in
std
adc
out
jb
out
or
inc
or
repz
mov
xchg
dec
loop
icebp
pop
in
loopne
xchg
jne
sub
in
dec
dec
pop
add
sub
jecxz
pop
lods
lods
mov
jl
mov
push
(bad)
pop
pop
pop
stc
or
int
sbb
out
add
push
cdq
cmp
cmp
jle
std
jl
arpl
repnz
retf
pop
dec
inc
ja
cmp
outs
cmps
(bad)
mov
(bad)
js
fsubrp
cmp
xchg
(bad)
mov
cmp
sbb
int3
dec
push
add
lods
icebp
(bad)
fs
(bad)
xchg
dec
cmps
loopne
int
sti
mov
enter
rcl
std
lods
inc
xor
add
test
add
pop
sti
int3
call
sbb
mov
inc
dec
neg
jbe
fsub
cmps
jno
and
jo
inc
push
retf
mov
sbb
bound
xchg
inc
lea
jl
(bad)
push
jb
pop
dec
dec
jae
(bad)
push
loopne
jle
enter
push
add
cmp
enter
ss
int3
and
mov
rcl
int
hlt
cmp
push
and
jge
cmp
les
pop
and
pop
out
dec
ret
xor
les
shl
mov
add
inc
data16
daa
push
pushf
repnz
icebp
dec
jnp
out
loopne
inc
dec
or
loope
mov
ins
lahf
neg
inc
mov
inc
fbld
pop
cmp
(bad)
daa
and
xor
movs
jbe
xchg
fsubr
fist
sahf
cwde
jnp
scas
mov
cwde
mov
dec
outs
psrld
js
test
jp
popa
jo
add
test
(bad)
ins
push
into
ds
call
mov
shr
outs
ret
mov
cmp
mov
xor
inc
call
loope
jo
jmp
nop
lock
in
cmps
pop
rcr
inc
dec
das
mov
push
scas
sub
fldenv
mov
leave
call
mov
(bad)
jo
pop
popa
jl
jb
arpl
jmp
adc
dec
jae
add
cli
fwait
call
dec
inc
jmp
pop
sub
lock
(bad)
and
loopne
sbb
in
in
sbb
pop
mov
mov
dec
stc
mov
add
push
rcpps
inc
adc
stc
mov
xchg
leave
and
and
jge
ja
pop
inc
mov
(bad)
fcom
ret
in
jle
mov
jno
xchg
rcr
test
mov
xor
mov
inc
xor
sbb
cmc
(bad)
outs
pop
cmp
stos
add
mov
ss
lods
outs
lods
or
push
jp
js
movs
cmp
jbe
sub
mov
jmp
fwait
and
ins
xchg
dec
mov
and
addr16
loopne
inc
fs
sub
into
pop
daa
push
jmp
loop
push
jmp
or
or
add
nop
inc
pcmpeqd
inc
push
mov
lock
mov
enter
dec
call
cmps
mov
cmp
movs
cs
jns
sub
clc
sbb
xor
inc
out
fcmovbe
mov
sub
lock
inc
pop
push
mov
pop
iret
mov
hlt
adc
cli
pop
jne
mov
inc
test
rcr
push
mov
stc
in
das
lods
push
ret
fld
lods
std
cld
loope
add
cwde
aaa
movs
sbb
add
in
and
repz
inc
jae
adc
dec
std
repz
push
lds
mov
dec
jp
sbb
jle
lea
jmp
mov
cs
fiadd
push
movs
dec
or
lods
ficom
jecxz
sysret
mov
dec
ins
cmp
mov
dec
iret
inc
and
mov
jp
cmp
(bad)
jge
outs
pusha
cmp
lock
mov
int
into
xor
mov
into
pop
sar
push
in
cmp
ret
sub
(bad)
ss
pop
out
sub
and
push
dec
xchg
or
nop
jne
in
icebp
sbb
pop
cmp
mov
les
xchg
dec
mov
std
mov
xchg
and
mov
in
fstp
loopne
shl
xchg
dec
adc
xchg
aad
xchg
push
int
mov
retf
push
test
push
and
mov
dec
popf
xchg
fwait
mov
movs
fnsave
shr
lahf
xlat
pop
clc
cmp
mov
sbb
dec
imul
mov
in
arpl
jl
add
sbb
repnz
test
jo
aaa
xor
xchg
cmps
xor
xlat
ja
jp
div
cmp
jle
mov
popf
retf
int
xor
imul
mov
mov
mov
gs
cmc
xchg
add
bound
loop
shl
pop
inc
mov
mov
aad
mov
stc
push
nop
xchg
push
test
mov
xchg
sbb
mov
fs
sub
fcomp
sbb
fdiv
ret
sbb
js
sbb
cdq
stc
int3
mov
push
sub
out
and
lock
fwait
ret
jnp
(bad)
push
add
sahf
and
ret
mov
xchg
cmps
stos
adc
mov
sub
pop
aas
jbe
pop
push
call
(bad)
in
or
mov
call
stc
xchg
lea
push
mov
rol
push
popf
xchg
js
out
xlat
mov
push
test
inc
cli
std
call
aam
loopne
iret
fmul
test
push
cmp
xor
hlt
sbb
dec
lds
sub
(bad)
mov
ror
fs
mov
sub
mov
xor
cmp
jecxz
push
xchg
inc
js
or
loopne
test
mov
and
daa
std
repnz
adc
cld
or
ins
outs
ret
jp
adc
lds
jecxz
push
xchg
loop
cmp
xor
push
cld
mov
loop
xor
mov
in
dec
cmps
push
xor
not
aaa
and
adc
add
xor
xchg
mov
shr
xchg
outs
mov
pop
jmp
aas
imul
pop
dec
scas
test
adc
test
sub
leave
inc
inc
mov
aaa
and
sbb
sbb
cmps
ret
out
hlt
int3
scas
fcmovnb
das
push
dec
lahf
xor
enter
mov
cmovns
loope
push
mov
iret
aaa
pop
fimul
test
jb
push
fsub
and
xor
cmc
pop
adc
push
pop
jne
jmp
adc
int3
inc
dec
sahf
jno
cmp
push
adc
xchg
pop
lds
test
retf
sbb
mov
jb
icebp
cli
jmp
(bad)
mov
(bad)
das
popf
lods
sub
mov
outs
scas
xor
xchg
and
push
and
mov
(bad)
stos
gs
and
xor
ds
mov
dec
enter
sub
popf
or
adc
movs
int
mov
int3
mov
xor
sub
mov
push
cmp
pop
or
mov
test
mov
das
pop
(bad)
pusha
cmps
lods
or
sbb
push
mov
ret
loope
sub
mov
sbb
in
xchg
ret
lfs
adc
sub
leave
xor
jne
inc
dec
jmp
dec
mov
xchg
add
mov
out
ins
cmp
leave
ja
int
cld
pushf
pop
xor
cwde
push
out
xchg
mov
imul
mov
push
out
out
mov
jg
cmps
mov
inc
and
fiadd
adc
mov
sub
mov
jg
popa
adc
push
xchg
mov
xchg
sub
cwde
scas
adc
hlt
jb
add
mov
sbb
js
stc
imul
or
cdq
scas
inc
dec
in
leave
mov
jne
mov
adc
outs
cs
stc
push
push
fiadd
xor
fnstsw
fiadd
scas
cs
and
int
pop
sti
cmp
test
popa
and
jmp
mov
cmp
jg
or
bndldx
mov
lea
mov
mov
icebp
(bad)
and
xor
push
loop
pop
shl
xchg
aas
dec
into
nop
push
or
inc
lds
mov
arpl
and
movs
stos
push
xchg
out
retf
lock
clc
xchg
add
dec
leave
xor
sbb
sub
jle
adc
(bad)
pop
mov
std
call
mov
cwde
sbb
out
and
mov
inc
inc
(bad)
daa
sahf
repnz
jmp
ror
sbb
push
int
aaa
cmp
pushf
(bad)
mov
int3
iret
std
sbb
xlat
push
push
loopne
into
pop
ins
mov
fistp
xchg
imul
call
xchg
ret
bsr
scas
inc
jbe
or
stc
sahf
mov
retf
push
and
dec
pop
mov
pop
inc
ss
(bad)
sbb
popa
lahf
jnp
(bad)
push
pop
fmul
cli
jns
sub
jp
adc
retf
lods
pop
out
ret
mov
std
push
scas
clc
(bad)
sti
jmp
sbb
loopne
int3
das
xchg
stc
or
xchg
lods
cmps
test
mov
or
push
xchg
mov
shl
arpl
pop
loopne
imul
fstp
add
pushf
mov
out
nop
jnp
pop
cmps
sbb
mov
mov
push
dec
push
dec
out
push
xchg
out
xchg
lods
vmovaps
fmulp
sbb
in
cmp
pop
sub
rcr
mov
lahf
mov
add
mov
inc
in
imul
xor
leave
mov
loope
xor
xor
dec
cmps
cmp
mov
fidivr
ins
jb
lds
(bad)
rcr
neg
dec
cmp
cmp
out
or
fmul
imul
adc
repnz
fadd
es
data16
loopne
add
jo
inc
xchg
adc
xor
(bad)
rcl
push
and
add
in
fdiv
xchg
int
clc
push
push
jo
outs
bound
and
pop
pushf
or
push
(bad)
adc
test
fbld
jae
push
push
mov
mov
push
dec
xor
pop
(bad)
ret
ins
xchg
xchg
clc
mov
cmp
dec
and
mov
mov
(bad)
shr
jmp
inc
or
jecxz
push
daa
cmp
lds
jbe
inc
sub
xor
mov
fistp
inc
pop
jno
adc
mov
ins
dec
xchg
ins
ja
jbe
pop
xor
pop
repnz
add
pushf
cmp
push
mov
push
push
mov
out
sbb
dec
sti
dec
jecxz
mov
lods
push
arpl
aad
pop
repz
sbb
nop
adc
(bad)
cs
inc
push
pop
push
iret
sahf
pop
fs
call
cmp
popf
fwait
je
xchg
or
arpl
mov
loop
nop
inc
mov
adc
scas
inc
rol
test
ds
mov
rcl
add
pushf
sbb
stc
stos
out
test
cmp
ds
mov
stos
pop
push
pop
jge
into
fcmovnb
cs
or
xor
or
and
inc
ins
add
(bad)
push
mov
sti
sbb
or
and
adc
cmp
adc
dec
sbb
mov
fadd
repnz
sahf
and
xchg
sub
(bad)
sar
cmp
inc
cmp
pop
mov
sub
sub
fisttp
test
xlat
cmps
add
ucomiss
in
mov
mov
mov
push
cli
cmp
addr16
push
retf
jecxz
out
jecxz
mov
cwde
jb
xchg
cmps
pop
call
addr16
cli
fist
sub
cmp
pop
adc
fist
nop
int
test
push
sbb
rcr
xor
ins
add
int3
lahf
mov
adc
jnp
and
mov
cs
jle
test
test
imul
cdq
or
inc
fidiv
js
mov
xlat
in
mov
cmp
sbb
cmp
adc
fist
xchg
ss
retf
pop
jnp
call
jmp
je
and
and
scas
adc
xor
pushf
inc
cwde
popf
pop
in
and
das
repnz
popf
xchg
scas
dec
inc
pop
xchg
push
icebp
(bad)
push
jne
add
into
inc
push
pop
stos
jg
(bad)
jne
lds
jg
sub
push
mov
(bad)
lock
mov
shl
js
in
pop
jmp
call
add
(bad)
mov
pop
pushf
fidiv
push
pushf
pop
pop
inc
jp
push
sub
mov
das
dec
lahf
rcl
pushf
arpl
lods
stos
dec
add
sub
shl
inc
adc
sar
hlt
push
adc
push
je
pop
clc
je
cs
test
mov
cmp
cld
pop
mov
dec
movs
aam
out
fstp
jg
cmp
js
je
jg
ror
cmps
aas
xchg
add
test
xor
adc
and
fs
sahf
retf
sub
inc
ds
xor
adc
pop
in
imul
jb
fiadd
jmp
cmp
mov
and
jb
sbb
cwde
outs
mov
ss
or
dec
push
jp
int
or
pop
in
or
ror
dec
cli
pop
xchg
out
fcom
jb
sar
mov
xchg
mov
mov
mov
mov
add
sahf
je
dec
out
call
popf
ds
retf
push
xchg
mov
or
xor
xchg
into
dec
jecxz
retf
push
mov
xor
popa
int
cmp
xor
mov
inc
loope
or
ds
popf
es
das
pop
popf
pop
push
xchg
jge
jmp
jecxz
or
rcr
leave
scas
jmp
imul
pop
rcl
jb
in
push
cmp
add
(bad)
loop
xlat
push
(bad)
cwde
jp
aad
jnp
mov
dec
(bad)
in
push
call
add
stc
inc
es
iret
add
jg
xor
dec
or
outs
push
mov
cmp
mov
jl
gs
inc
fwait
adc
xor
movs
ins
jo
xchg
scas
pop
push
jnp
div
je
and
pop
add
dec
movsx
pop
jnp
cmps
inc
add
ror
int
fnstenv
cmp
call
in
call
je
adc
fisttp
xchg
dec
int
or
jmp
adc
dec
xor
jp
jo
sti
push
or
icebp
jmp
sub
jp
mov
jo
mov
les
pop
jns
dec
daa
and
push
imul
call
stos
push
in
mov
mov
jb
fisub
in
or
push
sbb
ja
jl
mov
add
sbb
je
repnz
xor
daa
add
mov
out
cld
adc
gs
daa
jno
add
sub
ror
pop
movs
int
inc
fidiv
xchg
inc
pop
mov
ret
dec
clc
cld
xchg
lods
pop
jo
mov
pop
sar
shl
rcl
push
or
outs
add
xchg
stc
xchg
imul
in
arpl
cmp
fcomp
jns
pop
das
xchg
leave
push
sahf
das
xchg
inc
xchg
mov
cmc
xor
xlat
xchg
cmp
push
bound
sahf
ins
imul
dec
sbb
in
cwde
add
cmps
mov
push
nop
pop
icebp
popf
cmp
inc
jns
sbb
pop
and
shl
pop
adc
xlat
mov
push
outs
push
mov
iret
xchg
clc
add
cmp
adc
push
int3
retf
push
rol
mov
pop
or
jns
test
fst
addr16
mov
(bad)
data16
test
add
bnd
pop
cdq
xchg
out
xchg
pushf
ret
pop
in
aad
in
add
jb
jns
pop
push
(bad)
ins
add
dec
shl
sar
sti
add
icebp
cmc
and
jns
xor
adc
cld
imul
xchg
lea
adc
inc
icebp
movs
out
cmp
(bad)
jp
pop
mov
ficom
xchg
or
lea
pop
sub
push
sub
sbb
call
and
clc
xlat
js
pushf
sar
mov
in
mov
hlt
jle
popf
pop
sbb
or
add
je
sbb
nop
cdq
cld
test
mov
data16
sahf
mov
push
and
lahf
iret
inc
(bad)
fcmovnbe
fwait
mov
call
mov
mov
jg
mov
out
or
jnp
ja
js
sbb
shr
jno
jmp
push
retf
mov
out
jp
adc
add
adc
fld
mov
pushf
repz
fstp
or
jb
jecxz
push
jle
mov
fimul
dec
in
fnstsw
lods
(bad)
pop
into
add
push
mov
(bad)
enter
pop
cmp
cdq
out
xlat
cmps
test
outs
outs
push
or
(bad)
rcl
sbb
ins
add
cmp
cmp
adc
leave
jl
adc
cmp
fs
jge
mov
xchg
mov
dec
dec
jp
jmp
xor
mov
pushf
fiadd
aam
(bad)
rcr
push
bound
cmp
scas
fistp
mov
in
lods
pop
adc
push
push
adc
jnp
scas
or
dec
pop
cli
sbb
sbb
rcr
inc
enter
repnz
pop
inc
pop
cmovnp
mov
pop
in
repnz
outs
jb
int
cmp
shl
repz
sub
pop
pop
enter
in
jmp
dec
sar
mov
sbb
pop
iret
pop
cwde
retf
int3
xor
cwde
adc
out
ret
jns
icebp
xlat
cmp
xor
jle
aas
in
movs
cmps
mov
push
inc
jno
jnp
inc
popf
pushf
and
movs
push
xchg
scas
in
adc
lods
idiv
outs
pop
xor
sbb
mov
ret
aam
cdq
pop
jg
pop
add
jne
mov
(bad)
sbb
dec
pop
fadd
jmp
outs
scas
(bad)
sbb
ins
and
retf
frstor
cmp
nop
cdq
(bad)
std
sbb
mov
lea
and
aam
test
inc
xor
adc
dec
pop
idiv
push
retf
sti
or
js
pop
arpl
aas
call
fwait
inc
ror
inc
dec
dec
addr16
inc
sbb
sar
xchg
push
jno
(bad)
js
cmp
push
dec
lods
(bad)
mov
and
cmp
jg
add
and
shl
dec
sbb
shl
pop
movs
std
sbb
adc
mov
dec
out
jp
inc
mov
mov
stos
inc
xor
cli
std
cmp
pusha
loop
cs
jl
xchg
mov
pop
shl
jbe
dec
or
fsubr
add
(bad)
js
cld
cmps
imul
jecxz
inc
repnz
jmp
push
push
mov
jbe
aas
ss
fdiv
call
sbb
into
push
push
neg
jmp
out
mov
dec
mov
mov
cli
(bad)
sahf
cmp
jecxz
into
add
sub
std
shl
jno
in
(bad)
jns
add
icebp
sub
sub
push
xor
in
retf
and
or
iret
pop
idiv
add
jp
or
iret
or
bound
loop
mov
push
or
enter
push
inc
iret
out
xor
sti
pop
push
(bad)
shl
jge
out
xchg
mov
jno
jb
ror
jmp
aaa
inc
lds
dec
add
popa
ror
fisubr
adc
loopne
and
cli
or
and
jle
sbb
xor
loope
mov
les
ror
mov
sub
or
shl
dec
cs
hlt
jge
fld
dec
std
sbb
scas
xor
jno
xor
lea
icebp
out
xor
mov
mov
mov
fdiv
mov
jmp
and
xlat
mov
cwde
icebp
sbb
and
test
push
adc
cld
adc
sbb
nop
mov
stc
adc
add
stc
add
test
enter
cld
daa
inc
mov
lods
and
adc
push
ins
adc
push
pop
xchg
jns
add
xchg
push
movs
push
push
add
das
adc
scas
nop
xor
add
retf
outs
mov
or
jb
xor
jl
pusha
xor
aad
mov
inc
fiadd
jg
pushf
fild
cmp
jg
or
adc
cmc
cmp
add
arpl
adc
ret
adc
or
mov
xor
(bad)
fucomp
push
pop
test
cld
movs
mov
add
clc
popa
movs
cmp
rcr
neg
inc
ins
aas
push
and
iret
iret
sub
add
cwde
add
(bad)
mov
and
pop
outs
arpl
inc
js
ret
pop
mov
cmp
xor
pop
xchg
arpl
jle
jae
inc
in
mov
cmc
iret
dec
out
test
pop
imul
inc
pop
sar
enter
retf
fsubr
popf
xor
test
xchg
sub
aam
cmp
adc
mov
jne
jae
inc
retf
test
cli
xchg
sbb
jae
shr
xchg
dec
mov
test
add
push
in
dec
inc
ret
mov
push
push
add
sti
push
adc
(bad)
xchg
cmp
fidivr
call
rcl
xchg
pop
or
and
div
jl
jmp
xchg
xchg
push
aad
dec
in
out
mov
jo
enter
test
aad
xchg
inc
rcr
scas
movs
push
(bad)
lods
mov
mov
popa
add
mov
in
and
cmp
adc
imul
cmps
xchg
add
(bad)
pop
retf
(bad)
out
int3
popf
leave
xchg
sub
stos
push
call
mov
xchg
mov
ins
aaa
movs
mov
mov
mov
sbb
sub
ret
scas
nop
push
add
pop
lods
outs
xchg
sub
cmps
push
sar
or
stos
hlt
pop
mov
into
scas
sbb
add
push
adc
and
push
pop
cmp
in
jb
loop
iret
sub
xchg
shl
les
ret
fisubr
ins
push
pushf
sub
pop
pop
and
adc
ret
fs
aas
add
jl
sahf
sbb
outs
stos
xchg
jmp
jmp
or
aaa
inc
out
and
fadd
sbb
xchg
xchg
idiv
les
scas
popa
out
arpl
xchg
retf
push
push
mov
jle
lea
xor
aam
sub
test
mov
test
lods
pop
les
in
xchg
push
xchg
xor
and
cmp
sbb
movs
enter
mov
mov
or
push
retf
adc
popf
ins
iret
(bad)
test
jg
repz
fucomi
aaa
or
aas
(bad)
daa
mov
jmp
push
pop
popf
mov
loopne
retf
sbb
fcmovne
pop
jbe
sub
sbb
int3
out
movs
push
sub
icebp
in
inc
jecxz
cmp
cmp
mov
push
fwait
jmp
repnz
add
mov
repnz
pop
jae
dec
les
push
xchg
xchg
pop
mov
mov
pop
add
fsubr
mov
test
or
fdiv
(bad)
push
mov
test
aam
rcr
xor
outs
ret
inc
xchg
mov
lods
or
cdq
call
lods
in
arpl
xchg
pop
xor
xchg
repnz
test
mov
enter
lods
shl
push
and
pop
cmp
in
pushf
popa
bound
data16
cmp
and
pop
sub
nop
push
pop
lods
mov
repz
out
adc
bound
jle
cmp
test
push
cmc
add
es
mov
out
ret
icebp
fbstp
test
(bad)
fimul
add
dec
fisttp
sub
test
sti
out
aas
xchg
push
div
xchg
pop
jecxz
cmps
xor
xchg
jmp
hlt
lods
mov
sbb
mov
inc
fnsave
stos
dec
push
jo
mov
out
push
cli
sbb
inc
mov
sub
jo
mov
sbb
(bad)
call
repz
mov
dec
xor
mov
mov
je
repz
fild
fscale
movs
add
stos
aam
jge
push
jo
lds
and
js
push
shr
test
bsr
loop
xchg
mov
mov
ficom
in
fcmovnbe
push
lods
fcom
shl
nop
add
in
sub
or
in
lods
xchg
frstor
cmps
xor
aaa
cmp
mov
sbb
cmp
and
dec
dec
sub
icebp
outs
pop
cmp
sbb
imul
(bad)
call
adc
pcmpgtd
popa
push
xchg
popa
push
xchg
sbb
jmp
mov
mov
or
sub
movs
clc
sub
pop
sub
sub
jne
adc
or
mov
test
nop
es
lods
(bad)
mov
dec
mov
repnz
add
imul
shl
add
inc
cli
sbb
push
fadd
rcr
jnp
adc
mov
xchg
je
jmp
inc
fild
adc
in
jo
sbb
pop
cmps
jp
icebp
mov
push
dec
rol
jo
fisttp
test
adc
aam
mov
cmps
or
xchg
pop
mov
ja
test
jle
dec
mov
or
pop
or
in
(bad)
loopne
sub
cmp
daa
dec
ret
push
div
addr16
pop
out
(bad)
and
arpl
mov
push
retf
adc
mov
stc
repz
mov
cmc
outs
leave
cmp
data16
aas
nop
xor
jmp
push
fst
or
in
ins
mov
xor
imul
adc
fld
test
in
mov
pop
popa
jbe
jno
mov
xor
fdivr
push
jo
inc
es
lds
xchg
dec
cmp
add
adc
stos
(bad)
xchg
dec
ret
push
jmp
cdq
xchg
sar
xor
(bad)
push
addr16
add
push
dec
pop
ficom
jmp
push
push
dec
loope
scas
sub
cmp
xchg
les
sbb
jns
inc
dec
jp
push
sbb
test
stos
shr
daa
sub
or
jl
mov
mov
adc
add
xor
cmc
stos
and
mov
retf
sbb
retf
imul
lods
clc
imul
(bad)
jo
fcmovnbe
imul
push
iret
add
jge
sahf
xchg
mov
adc
ficomp
cmp
stc
xchg
in
(bad)
cli
out
shl
leave
or
xchg
sbb
xchg
jg
or
pop
call
add
movs
ja
pushf
jecxz
mov
mov
fisttp
cmc
fnstcw
scas
pop
mov
xor
push
sub
cld
pushf
xor
cld
xor
jb
or
std
cld
aad
push
not
in
sub
les
push
or
mov
jbe
int3
mov
pop
dec
lahf
imul
add
mov
aaa
movs
clc
call
(bad)
cmps
es
adc
js
sub
cmp
and
cmps
and
push
(bad)
jecxz
mov
mov
mov
and
mov
(bad)
jmp
inc
not
in
xchg
adc
jns
cdq
aas
push
jae
mov
mov
push
push
sbb
retf
ds
clc
xor
mov
add
ja
hlt
stos
xchg
add
movs
jp
pop
pop
ror
xchg
or
xor
mov
pop
cmps
mov
mov
push
out
xor
push
mov
mov
jnp
sar
retf
pop
jnp
jmp
sub
into
sub
add
adc
jl
sahf
pusha
inc
daa
jp
cld
(bad)
push
sub
call
fidiv
mov
push
stos
cwde
enter
mov
lahf
cmps
rol
jecxz
push
and
fdivr
cmp
cmps
mov
out
loope
xchg
mov
push
cmp
mov
add
and
es
pop
test
cmp
popf
jnp
lock
push
lods
sbb
sub
and
jecxz
xor
xor
mov
ret
or
les
push
mov
icebp
cmp
and
pop
jmp
loope
fisub
pop
dec
clc
mov
imul
pop
push
sbb
int
pop
mov
outs
jae
leave
int
adc
call
sub
mov
inc
jns
ja
sbb
adc
push
pop
jp
stos
xchg
push
lea
fstp
inc
push
adc
out
push
cmps
mov
aas
adc
icebp
cmps
add
push
in
jbe
and
ins
jmp
dec
ret
aam
inc
shl
push
(bad)
ror
popa
xchg
popf
stos
sbb
or
cmps
lahf
inc
call
sub
arpl
cmps
or
mov
mov
cmp
add
rol
retf
adc
jle
sti
fdivr
lods
cmp
cmc
test
ret
mov
mov
jne
mov
mov
dec
mov
mov
adc
xchg
sub
rol
in
out
lds
push
cmc
mov
sub
inc
xchg
clc
call
adc
call
sbb
and
(bad)
std
jb
mov
xchg
xchg
dec
mov
push
rcl
dec
jp
dec
into
mov
mov
adc
mov
mov
and
mov
and
sar
xor
dec
push
inc
xchg
retf
in
jne
clc
mov
xor
mov
sub
xchg
mov
loop
inc
mov
jo
adc
adc
mov
adc
scas
test
cmps
xor
retf
push
ins
in
jns
lahf
push
jp
shr
and
xchg
dec
jmp
std
jns
cmp
movs
inc
inc
popa
stos
mov
inc
jnp
xor
movs
mov
sbb
xchg
clc
popf
and
into
lds
push
mov
repnz
mov
add
(bad)
in
scas
fmulp
and
sbb
es
gs
mov
aaa
retf
cwde
or
cmps
sub
out
pop
daa
sbb
push
jcxz
call
dec
cwde
pop
data16
outs
inc
cmp
jp
jb
sti
or
inc
fwait
pop
bound
sbb
sub
movs
aad
add
popf
enter
call
mov
pop
mov
push
mov
xor
pop
cld
or
mov
push
aas
cmps
pop
cmp
pop
sbb
pop
mov
xchg
add
push
ret
jmp
mov
mov
stc
jle
adc
pushf
in
mov
repnz
(bad)
push
mov
mov
imul
sub
les
aam
fwait
ds
outs
mov
pop
fidivr
or
movs
xchg
push
jbe
rol
jnp
mov
enter
hlt
add
add
sti
sbb
add
sub
mov
and
cli
fmul
xor
(bad)
sub
mov
shl
pop
into
js
mov
mov
leave
aam
data16
xchg
or
sbb
cmc
jnp
mov
inc
mov
mov
(bad)
shr
aaa
mov
out
mov
or
pop
sti
test
shl
push
sti
inc
xor
push
jecxz
stos
lods
pop
out
mov
push
vucomiss
jmp
aas
lods
fsubr
daa
jae
movs
dec
rcr
push
and
sbb
stos
jbe
add
dec
cmp
adc
mov
test
sbb
idiv
std
jmp
inc
adc
loop
xchg
dec
dec
xor
mov
(bad)
loopne
sub
ret
sbb
int3
int
movs
sub
jbe
mov
xor
mov
xor
adc
adc
(bad)
mov
sub
jno
xor
sbb
scas
mov
xchg
cmp
xor
jno
js
test
repnz
cmp
(bad)
(bad)
push
jnp
mov
mov
ins
gs
aaa
cmps
sub
jmp
aad
mov
mov
dec
retf
in
popf
pop
and
(bad)
hlt
test
sub
sahf
fmul
jp
inc
popf
cmc
jmp
out
mov
in
sbb
add
xchg
rcr
dec
das
sbb
lods
lds
pop
outs
int
dec
out
(bad)
sti
arpl
xchg
imul
(bad)
les
or
call
shl
mov
outs
rol
xor
xchg
ins
pop
mov
rol
cmc
mov
and
adc
jns
cli
aas
add
mov
push
shr
sub
lea
test
pop
or
aam
dec
sub
xor
inc
dec
xlat
sbb
test
mov
(bad)
stc
jmp
in
movs
aad
repnz
mov
imul
pushf
or
test
add
sbb
enter
call
(bad)
mov
test
sub
div
cld
je
push
jo
mov
jb
(bad)
jo
iret
cmps
push
rcl
and
push
cmp
and
or
je
mov
and
in
push
mov
rcl
pop
or
xchg
cs
adc
or
jne
xchg
pop
sbb
inc
jmp
inc
adc
cmps
or
inc
icebp
test
lahf
pop
jge
ret
xor
sar
pop
and
pop
sub
pop
dec
addr16
(bad)
test
and
pop
mov
fld
ins
add
inc
push
mov
inc
mov
gs
jae
mov
iret
sub
sub
cwde
cdq
pop
imul
push
pop
test
cmps
and
fwait
xchg
mov
sbb
dec
pop
stos
xor
ret
and
and
pushf
adc
pop
mov
xchg
xor
xchg
mov
out
imul
sub
leave
pusha
adc
(bad)
imul
(bad)
aaa
pop
int
mov
rcr
aas
ins
imul
cdq
stos
or
in
lea
icebp
clc
jp
cmp
in
sub
in
fcom
scas
mov
or
sbb
leave
aam
mov
mov
or
adc
push
iret
sub
dec
aas
retf
inc
hlt
bound
cs
leave
xchg
movs
mov
fs
jbe
sub
aam
and
stc
mov
adc
clc
jo
loopne
out
push
sub
dec
jae
and
mov
retf
jecxz
test
mov
jl
in
aad
and
jno
popf
icebp
xchg
scas
push
ins
out
fstp
dec
mov
mov
push
aam
jmp
mov
xchg
adc
ins
xor
cmc
cmp
mov
gs
jne
add
dec
cmp
fld
stos
sub
pop
inc
call
sub
cdq
hlt
(bad)
fldenv
jae
rcl
cmp
aam
mov
rol
xor
iret
(bad)
std
jno
fstp
adc
mov
mov
retf
lock
xchg
dec
dec
sub
loope
(bad)
and
das
jl
fdiv
mov
shl
ss
jb
loopne
mov
int3
and
mul
and
dec
mov
cpuid
mov
movs
mov
rol
mov
div
pushf
outs
jmp
xor
int
and
cmps
call
arpl
push
xchg
and
imul
dec
(bad)
(bad)
sti
or
sub
(bad)
adc
or
inc
cmc
ja
bndstx
aaa
mov
mov
cmp
dec
adc
mov
popa
pop
enter
out
xor
adc
jmp
scas
inc
ret
mov
in
or
jg
mov
mov
inc
lods
aaa
punpckhwd
jmp
mov
jae
xchg
std
inc
sub
popa
jo
cdq
in
test
mov
cld
cmp
mov
jecxz
neg
pushf
lods
addr16
pop
lods
mov
pop
(bad)
lahf
scas
loope
cmp
inc
mov
outs
sub
les
xchg
sub
sub
xchg
jb
xchg
imul
test
movs
mov
jnp
retf
push
call
stos
outs
or
cmp
js
mov
inc
(bad)
fld
or
push
dec
push
cmc
gs
in
xor
and
and
xlat
mov
idiv
pusha
add
sub
push
add
mov
inc
jbe
test
dec
mov
outs
lds
pop
pop
inc
add
movs
mov
xchg
scas
xchg
js
cmp
popa
cmps
dec
movq
xchg
pop
lods
shl
(bad)
loope
arpl
(bad)
cmc
cmps
mov
retf
fs
jb
mov
mov
fsubr
adc
sub
cs
out
xlat
mov
iret
les
and
scas
xor
jb
sbb
in
ret
xchg
xlat
jnp
and
ret
pop
outs
stc
mov
addr16
sub
sbb
mov
mov
xchg
jb
loope
pop
mov
xor
out
lods
push
sbb
fbld
cmps
pop
push
retf
jo
pop
cli
lods
mov
push
push
adc
jae
and
inc
aam
jl
mov
pop
das
ret
leave
jnp
fstp
repz
sub
arpl
inc
in
mov
xchg
mov
xor
jnp
scas
push
mov
xor
or
into
arpl
es
mov
jl
sbb
pusha
mov
dec
pop
mov
add
inc
test
scas
sub
mov
test
pop
int3
cmp
mov
loope
loope
push
sub
inc
inc
cmp
mov
inc
aad
push
adc
cmc
pushf
fs
cmp
in
mov
mov
lahf
sbb
cld
xor
arpl
retf
push
xchg
mov
pusha
test
mov
mov
ins
push
popa
inc
adc
mov
pop
jnp
data16
(bad)
add
dec
pop
ins
jno
fdiv
mov
inc
shr
inc
xchg
xchg
pop
ja
mov
aaa
ins
dec
lods
(bad)
mov
adc
xchg
out
push
push
mov
pop
std
neg
push
cmc
cmp
add
pop
mov
in
arpl
push
jp
ja
jno
aam
stos
push
jne
sub
sar
xor
pusha
enter
dec
aad
jmp
push
xchg
sub
ins
mov
push
pop
div
inc
push
sbb
lock
call
or
out
mov
or
mov
or
mov
push
repnz
push
xchg
retf
movs
inc
xchg
and
(bad)
adc
pusha
xchg
(bad)
int
ficomp
push
cmps
push
pop
cs
aad
sub
and
sbb
leave
pop
test
loopne
cmc
cmp
mov
cld
add
(bad)
cli
and
lds
retf
pop
mov
daa
pop
or
retf
inc
add
icebp
mov
pop
xchg
out
mov
mov
jne
jmp
mov
cmp
daa
or
out
push
(bad)
push
jnp
ret
aaa
arpl
jb
out
fmulp
es
hlt
jns
push
mov
or
dec
sbb
stos
aad
jns
test
mov
in
adc
jno
clc
and
pop
xchg
loopne
pushf
fs
mul
(bad)
xchg
movs
leave
stos
xor
xchg
mov
adc
int3
push
sbb
cmp
adc
ret
(bad)
aad
or
jg
jge
push
mov
mov
adc
lds
scas
mov
out
lods
push
sbb
mov
data16
idiv
adc
jecxz
dec
add
fstp
std
or
stos
movs
ins
mov
mov
(bad)
push
add
outs
jae
xchg
mov
les
fsubr
jmp
ret
cmps
push
stos
psubq
das
mov
and
dec
sbb
mov
ret
scas
or
(bad)
cmp
xor
or
(bad)
jg
gs
push
inc
cmp
or
mov
fs
sbb
stos
sbb
jmp
imul
sahf
aam
cdq
mov
mov
ins
fimul
pop
lods
(bad)
mov
mov
mov
push
rol
xchg
jmp
or
jno
rcl
sub
xchg
mov
mov
add
mov
ret
pop
test
jle
jecxz
scas
retf
scas
jne
add
or
(bad)
hlt
mov
dec
push
(bad)
outs
arpl
mov
repz
xchg
les
rcl
mov
adc
mov
fisttp
jg
add
pusha
sub
pop
outs
and
adc
(bad)
or
cmove
adc
retf
clc
jp
mov
sbb
dec
mov
cmp
scas
pop
ficom
mov
mov
adc
clc
pop
(bad)
jae
popaw
pop
shl
mov
jp
xchg
call
pop
xor
pop
(bad)
(bad)
(bad)
repz
icebp
xor
adc
or
loop
out
shl
cmps
cmps
sbb
jp
mov
call
cli
dec
pop
mov
sbb
mov
test
cmp
push
or
mov
add
into
or
es
(bad)
lock
mov
jge
std
xchg
mov
jge
inc
add
push
xchg
out
xchg
xchg
or
fcom
and
inc
inc
test
inc
jge
jno
ss
ret
xchg
loop
push
ret
add
repz
sbb
xchg
fisttp
sub
test
mov
mov
aaa
out
out
bnd
cmps
xor
xchg
jnp
repz
sbb
lock
rcl
fwait
add
fild
xor
jmp
gs
scas
jmp
outs
jnp
adc
sub
pop
enter
mov
mov
movs
adc
into
(bad)
gs
aam
imul
xchg
ins
and
jge
nop
sub
jns
or
sub
lods
xor
mov
sub
jle
adc
sar
ret
loopne
push
mov
inc
sub
pushf
fcomp
mov
aas
push
lahf
test
jo
gs
fld
pop
enter
sub
sbb
cmp
loope
ret
lock
jg
push
int
mov
push
stos
retf
push
fidiv
in
sbb
jnp
pop
xor
test
push
pop
cmp
mov
or
mov
and
jns
xor
push
inc
pop
pop
test
cmc
jnp
mov
pop
stc
push
cmp
in
cmp
or
ja
dec
adc
cmp
and
mov
in
out
cmps
aaa
mov
or
cmp
movs
(bad)
pop
mov
iret
sti
jae
pusha
test
imul
repz
test
or
repz
pop
iret
bound
jmp
es
fiadd
push
cs
gs
sti
or
xor
push
cmp
out
mov
sub
pop
sbb
xor
mov
std
xor
mov
outs
inc
loopne
jl
pop
enter
mov
ror
fs
mov
mov
xor
or
out
mov
fist
jmp
mov
popa
(bad)
aad
lock
test
fs
dec
mov
jmp
pushf
add
cdq
cli
add
mov
gs
xchg
not
fbld
call
fadd
std
outs
test
sbb
pop
mov
imul
push
out
rcr
add
dec
xor
mov
jge
jnp
loope
pop
inc
mov
fidiv
or
or
mov
adc
cmp
sbb
push
sbb
test
shl
cmp
push
inc
adc
imul
int3
xchg
call
dec
sbb
in
movs
int3
and
lahf
sbb
pop
inc
push
mov
or
pop
lock
add
sub
mov
setl
mov
fcom
mov
inc
adc
inc
jmp
shl
in
fsubr
mov
jge
sub
jg
imul
jl
dec
sub
cmp
test
pop
add
in
cmp
arpl
inc
or
xchg
push
test
add
mov
jle
and
sbb
imul
shr
and
xor
scas
sub
inc
cwde
or
mov
sti
mov
out
shl
xchg
xchg
mov
xor
mov
push
pop
jo
loope
mov
ret
retf
test
mov
in
cdq
cmp
sbb
sub
mov
mov
inc
xchg
fs
sbb
xchg
inc
dec
xchg
inc
sub
pop
cmps
push
xchg
bound
or
(bad)
movs
pusha
cs
jbe
xchg
and
retf
add
mov
retf
jnp
or
jno
cmps
sub
test
pushf
popa
adc
inc
outs
lds
adc
and
shl
and
cmp
shl
inc
in
jecxz
adc
imul
mov
and
sbb
and
enter
push
fisubr
fisub
or
outs
adc
and
mov
xchg
push
push
pop
jecxz
add
sub
cs
cmc
mov
shr
inc
jecxz
and
xchg
adc
mov
pop
sub
dec
mov
pop
in
add
pop
out
popf
ret
sete
cld
out
lods
xor
ins
adc
push
test
out
xor
aaa
dec
(bad)
mov
ret
popa
std
sbb
dec
shr
and
aad
cmps
pop
mov
jno
(bad)
out
ja
jns
daa
lahf
popa
outs
sub
mov
cmps
iret
cmp
cmp
and
sbb
js
scas
mov
inc
bound
add
cld
enter
imul
mov
mul
xchg
cwde
nop
adc
dec
cmp
inc
(bad)
xlat
ins
sti
fs
(bad)
sbb
ficomp
jb
sar
out
outs
(bad)
jae
scas
retf
mov
in
jns
cmps
cmp
mov
jo
ss
stos
gs
retf
mov
add
loope
jns
call
xor
dec
mov
mov
call
cmps
mov
add
pop
test
lahf
cmp
push
sbb
arpl
or
jnp
mov
mov
test
(bad)
test
xor
mov
hlt
pop
inc
xchg
fcomp
adc
ins
pop
inc
js
jmp
shl
mov
xchg
sti
jbe
not
mov
pop
xor
inc
pop
sbb
sar
dec
aas
xchg
push
inc
dec
push
in
cmp
out
xchg
mov
push
push
xchg
push
movs
test
aad
popa
mov
hlt
enter
fnstenv
stos
daa
jp
fidivr
daa
and
test
iret
add
push
inc
(bad)
mov
adc
bound
jmp
pop
or
imul
test
addr16
stos
sbb
les
xchg
push
inc
mov
mov
pop
sub
fwait
jns
push
mov
push
pushf
adc
mov
cmp
push
xor
imul
movs
sbb
xchg
mov
in
mov
stc
pop
add
inc
xor
and
add
scas
mov
sti
(bad)
jle
push
pop
inc
fld
inc
hlt
and
(bad)
cmp
mov
push
jae
lds
jmp
std
adc
fidiv
dec
je
mov
inc
pop
or
push
push
(bad)
cdq
into
push
adc
frstor
ja
inc
xor
xor
repnz
mov
xor
stos
inc
les
mov
test
mov
xor
cmp
sbb
je
(bad)
iret
cmp
push
sub
ds
out
enter
lock
jae
popf
test
mov
(bad)
arpl
sub
je
cdq
test
fnstcw
xchg
sahf
jle
dec
add
adc
aad
mov
jmp
cli
xchg
rol
rcl
gs
std
stos
repz
add
test
push
rol
out
inc
int
jmp
inc
ficomp
xchg
sub
loopne
pop
xor
daa
js
pop
fstp
test
inc
mov
pop
jo
daa
jne
in
daa
and
lods
jno
mov
clc
cmp
shl
push
xchg
(bad)
out
pop
mov
addr16
fild
into
scas
add
add
xchg
xor
mov
int
and
leave
loopne
adc
jecxz
xchg
fldenv
daa
xor
jecxz
call
push
fisub
lods
xor
mov
adc
div
ins
ret
sub
int3
dec
mov
cwde
in
or
push
and
shl
or
lods
call
push
jnp
popa
cli
sahf
jmp
test
int3
lock
mov
retf
je
cld
fimul
mov
movs
test
outs
or
int
and
outs
xchg
dec
out
inc
sbb
stc
js
pop
pop
lock
push
jmp
cs
and
adc
sub
icebp
mov
mov
sahf
or
xchg
or
mov
sbb
jno
pop
cmc
jns
repz
cmps
mov
cmps
lds
xchg
inc
movs
jne
imul
push
popf
fwait
or
xchg
push
pop
cmp
sub
stc
sbb
mov
jnp
aam
ds
retf
stc
dec
add
gs
ins
arpl
and
clc
iret
or
in
les
mov
(bad)
js
arpl
add
dec
or
pop
test
cwde
xchg
fstp
bound
inc
retf
test
jno
fs
(bad)
sbb
call
and
int3
shl
sub
adc
cdq
jge
xchg
mov
dec
clc
enter
xchg
out
movzx
cmp
aad
into
adc
jb
add
jne
ret
add
repz
xor
sbb
daa
retf
pop
or
cmp
xor
push
xchg
fwait
aam
xor
add
push
loope
and
xor
hlt
bound
or
adc
dec
stos
or
mov
ds
mov
xor
mov
sbb
jae
aad
mov
or
mov
cmp
in
cld
es
xchg
out
in
or
das
fwait
mov
or
mov
adc
mov
mov
std
cmps
sar
pop
mov
icebp
arpl
sub
mov
lods
popf
shl
sahf
scas
pop
mov
push
xor
cwde
inc
mov
in
retf
cli
lds
push
sahf
dec
popf
(bad)
mov
cmp
push
push
test
pop
ss
sahf
push
shl
mov
and
mov
push
dec
ss
sub
and
(bad)
call
cmps
jecxz
or
pop
loop
jo
adc
lods
jne
xor
bound
xor
fs
xlat
imul
adc
or
dec
call
bound
mov
jo
ret
adc
fadd
lahf
jecxz
cs
in
les
ins
cmp
(bad)
cmps
dec
pusha
fdiv
and
into
int
mov
cmp
jb
in
pop
add
jno
hlt
dec
(bad)
iret
jecxz
mov
int3
push
xor
and
jno
xor
test
pushf
push
jge
cmp
push
fcmovnu
ds
or
popa
pusha
imul
push
repz
nop
js
mov
lock
mov
inc
add
idiv
pop
test
or
leave
arpl
mul
std
adc
cmp
pop
jmp
pop
xchg
mov
cmp
(bad)
div
loop
and
test
ret
jmp
push
or
inc
clc
pop
ss
or
shr
and
mov
pusha
popf
jmp
xor
leave
cdq
push
adc
or
(bad)
scas
std
lds
aad
jns
sbb
ss
sbb
imul
call
mov
xchg
int3
cwde
scas
(bad)
(bad)
jno
xor
mov
jp
and
cmp
push
jp
xchg
mov
lods
push
xor
and
test
mov
xor
jno
into
imul
call
adc
popa
dec
mov
test
mul
jnp
or
stc
pop
mov
test
stc
mov
scas
mov
mov
pusha
or
add
pop
mov
jne
sbb
out
pusha
into
test
int3
test
loopne
lods
push
mov
dec
and
in
cld
out
in
jmp
dec
pushf
jge
mov
or
mov
test
cld
jecxz
ins
mov
xor
push
sub
inc
inc
aaa
add
sub
rcl
ror
mov
pop
add
mov
and
and
cmp
hlt
stos
sub
pop
xchg
push
dec
fadd
outs
cmc
cs
shl
inc
cs
mov
test
pop
mov
jo
fcomp
lds
lahf
pop
xchg
cmp
dec
loope
add
mov
lahf
ret
dec
jmp
xchg
jns
mov
cmp
adc
mov
xchg
push
inc
mov
adc
leave
loop
pop
mov
inc
xor
call
jle
push
outs
dec
fimul
and
pop
push
retf
nop
lahf
push
fisub
dec
cmp
ret
add
arpl
xchg
mov
or
jl
xor
xor
sbb
add
ss
xchg
in
inc
pop
pop
cmp
das
cmp
lds
sub
aaa
(bad)
mov
out
ins
jecxz
cwde
mov
hlt
out
jl
mov
and
inc
movs
repz
out
push
or
enter
cld
dec
mov
scas
push
mov
mov
jae
ret
shr
push
es
mov
rcl
test
sbb
pop
push
mov
jg
(bad)
lods
jnp
loop
mov
shl
add
mov
cmp
(bad)
sahf
imul
push
ror
out
in
cmp
scas
dec
test
lods
jb
adc
pop
and
sub
dec
push
mov
adc
mov
pop
retf
aaa
mov
loope
inc
sbb
test
loopne
stos
dec
ret
mov
cmp
or
(bad)
cmp
xchg
sub
xor
push
jb
pop
retf
pop
pop
stos
dec
cmp
inc
adc
(bad)
aam
cmp
adc
nop
movs
xchg
jecxz
icebp
inc
sbb
sbb
mov
clc
dec
(bad)
fcom
sub
into
mov
(bad)
fld
sbb
mov
idiv
cmp
stc
and
sub
pop
pop
pop
mov
pusha
xlat
jne
or
xor
xor
pop
pop
inc
pop
out
pop
das
repnz
inc
cs
test
xor
inc
scas
les
les
(bad)
stos
xchg
ins
or
mov
xor
jno
iret
test
mov
lahf
test
mov
xchg
jb
(bad)
lods
ss
mov
xor
mov
mov
ds
dec
mov
pop
mov
ins
adc
mov
jno
sbb
imul
stc
push
dec
push
scas
dec
inc
inc
fstp
lea
or
xchg
cmps
pop
ja
fadd
and
nop
cld
inc
stos
sub
repnz
adc
test
aas
aas
es
retf
mov
jmp
lds
jae
sahf
sub
jns
pop
mov
mov
cmps
adc
push
enter
sub
test
sbb
ret
cli
xchg
clc
(bad)
cmc
in
push
out
cmps
sbb
data16
xchg
adc
dec
adc
mov
sbb
mov
xor
mov
popf
lds
outs
jmp
hlt
jne
stos
and
add
shl
ficom
xor
in
icebp
jo
repz
adc
push
xchg
xlat
loopne
dec
xchg
dec
addr16
cmp
sbb
inc
push
lock
(bad)
cmp
(bad)
xor
mov
cdq
mov
jg
mov
and
push
shr
fwait
dec
push
cs
push
inc
mov
imul
sub
sub
inc
(bad)
popf
data16
pusha
adc
inc
inc
inc
sub
xlat
push
sub
fisub
xchg
inc
into
(bad)
pop
in
aad
sub
icebp
fcom
fisub
cmp
rep
das
fnstsw
and
sub
lock
clc
call
sub
adc
inc
dec
cmp
aaa
jmp
loop
or
cmp
stc
xor
cmps
push
mov
retf
adc
test
ret
arpl
rcl
push
or
mov
test
pop
mov
dec
cmps
cmp
das
movs
rol
daa
fwait
mov
in
bound
inc
icebp
jno
jo
call
std
sti
cs
dec
pop
and
enter
xor
shr
sbb
stos
std
sbb
aam
jmp
mov
jg
fimul
mov
aam
fs
(bad)
in
fwait
sbb
and
in
mov
popf
out
inc
dec
lds
fmulp
pop
outs
pop
(bad)
sbb
mov
mov
nop
add
xor
shl
jp
mov
pop
hlt
and
test
push
into
push
xor
mov
adc
aad
fidivr
pushf
push
mov
mov
mov
cmc
xchg
mov
jmp
xor
or
push
stos
xor
inc
dec
jae
mov
add
out
and
aad
mov
pop
adc
(bad)
ss
jp
repnz
lahf
cwde
ins
xchg
js
(bad)
ins
or
push
not
cmps
sub
dec
lods
jmp
sahf
push
je
mov
xor
ins
and
ss
movs
dec
cmp
cmps
mov
pop
mov
sbb
daa
inc
out
imul
inc
out
out
xlat
adc
mov
inc
inc
std
sub
mov
push
add
jg
mov
mov
mov
ds
sti
sbb
(bad)
les
push
data16
or
sahf
sbb
pop
or
sub
push
pop
push
pusha
movs
fsubr
shr
movs
ds
into
test
aad
retf
(bad)
fcompp
pop
popa
sti
mov
popa
sti
jp
add
std
nop
les
sub
ret
jnp
adc
mov
fcmovb
pop
mov
(bad)
into
xor
nop
inc
add
out
cmp
sbb
adc
jg
shl
nop
call
mov
mov
xorps
pop
repnz
mov
xor
jb
pusha
push
mov
cs
add
int
sbb
adc
push
dec
jbe
aaa
xchg
ret
mov
xchg
push
fdivr
loopne
repnz
xchg
mov
jmp
lock
jl
mov
dec
cld
sub
fidivr
cmp
cmp
xchg
push
adc
and
mov
sbb
stos
jmp
dec
cmp
xchg
or
into
jmp
pop
push
addr16
push
cwde
xor
cli
push
in
mov
das
sub
imul
inc
and
xchg
(bad)
or
in
stc
in
outs
out
mov
inc
js
jmp
dec
or
jecxz
lock
sbb
mov
test
sub
and
lahf
push
repz
or
ret
popa
inc
bound
lock
js
jg
fwait
icebp
dec
test
or
adc
sbb
dec
push
pop
sub
dec
adc
mov
sar
jbe
jecxz
and
test
gs
fwait
(bad)
or
int3
cmc
jmp
and
pop
outs
jge
xchg
pop
(bad)
(bad)
inc
imul
xlat
push
push
or
lock
cdq
mov
je
loop
stos
cmp
enter
retf
cwde
sub
jecxz
cs
cmp
loopne
popf
inc
and
popa
push
jl
mov
outs
mov
xor
push
mov
sbb
ret
imul
mov
cmp
dec
ss
or
in
fsubr
jo
shl
inc
dec
jb
push
xchg
mov
test
in
les
int3
and
push
adc
lea
idiv
push
enter
and
mov
jg
push
xchg
xchg
mov
fldenv
mov
xchg
mov
imul
iret
xor
xor
inc
push
shl
sub
leave
add
dec
jp
cwde
(bad)
mov
sar
add
lds
mov
sti
mov
stos
xchg
lods
in
(bad)
call
xor
ins
(bad)
push
dec
fist
data16
or
mov
pop
aad
into
stos
mov
daa
inc
add
or
in
js
out
xchg
ins
test
popa
fistp
call
iret
mov
pop
outs
mov
ins
fdiv
pop
test
idiv
jb
scas
xor
push
ja
fs
cmp
fld
pop
mul
test
mov
addr16
mov
xchg
dec
gs
push
push
or
ret
inc
adc
jg
sub
add
push
test
mov
xor
mov
or
inc
xchg
push
leave
or
fs
jnp
ins
fisubr
pop
scas
jne
jo
cdq
cs
addr16
movs
out
jecxz
ins
lods
fnstsw
cmps
(bad)
call
mov
div
sahf
lds
sbb
pop
ret
fdivr
mov
xchg
lds
and
dec
psubb
outs
and
push
xchg
sub
inc
nop
ret
stos
cld
push
(bad)
mov
js
cmps
sub
fdiv
mov
stc
movs
sahf
add
pop
enter
rcr
addr16
shr
mov
fild
test
or
aaa
call
lock
leave
shl
fimul
push
clc
adc
iret
cmp
cdq
sub
mov
and
push
inc
mov
mov
outs
jp
fadd
int
outs
xchg
daa
sbb
push
jnp
fadd
push
shr
adc
scas
pop
sahf
clc
fwait
cmc
movs
and
mov
xor
pop
and
push
out
and
push
mov
sbb
int3
ret
lahf
pop
adc
rcr
jmp
pop
pop
xchg
inc
mov
and
cmp
aas
mov
mov
or
out
test
fs
fs
hlt
shl
adc
push
gs
popa
(bad)
(bad)
stos
dec
mov
ins
ror
pop
sub
fcmovu
nop
ret
sbb
dec
in
pusha
aaa
retf
mov
pop
jne
push
cmps
cmp
or
aaa
das
aam
xor
xor
dec
jl
(bad)
add
int3
xchg
inc
adc
leave
sbb
(bad)
mov
shr
mov
bound
jo
push
rcr
sbb
jp
(bad)
in
jg
and
or
cmp
(bad)
pop
push
inc
add
cmp
mov
movs
add
(bad)
push
mov
push
cmc
dec
inc
movd
mov
sahf
test
leave
cs
mov
fwait
sbb
add
inc
popa
push
cdq
retf
loopne
adc
aam
push
(bad)
xchg
push
ins
mov
(bad)
fsubr
xchg
mov
mov
mov
dec
jae
mov
scas
fadd
push
mov
xor
inc
cmp
sahf
dec
fidiv
aad
xor
imul
or
rcl
mov
add
test
fcom
mov
mov
inc
fdivr
adc
fs
aam
add
out
fdivr
xor
mov
mov
lds
imul
jl
jmp
icebp
addr16
adc
(bad)
jae
stos
mov
fmul
shl
and
or
fiadd
push
xor
ss
adc
jmp
and
dec
mov
jp
call
data16
sbb
pusha
rcl
cli
into
dec
or
inc
sub
fisttp
sbb
test
std
repz
push
and
mov
jp
mov
ret
out
inc
mov
mov
fnop
mov
jae
sbb
aad
push
and
inc
or
xor
pop
mov
adc
imul
or
mov
fstp
frstor
xlat
pop
jnp
sbb
jne
add
xor
push
xchg
jmp
jo
popf
adc
repz
pop
mov
cmps
cmps
add
cmp
in
rcr
scas
jmp
loope
scas
(bad)
and
rol
add
and
fs
sub
sbb
jae
fnstenv
rep
jns
data16
jge
fisubr
fimul
cmp
fs
mov
(bad)
jne
imul
ficom
das
cmps
sub
pop
cmp
sahf
add
add
pop
pop
add
mov
sar
(bad)
mov
dec
scas
mov
dec
ja
mov
pop
scas
(bad)
dec
cmp
test
test
inc
pop
hlt
add
aam
movs
or
sbb
rol
cs
dec
inc
jns
mov
cld
sahf
jae
inc
ret
es
les
loope
mov
jbe
mov
mov
pushf
mov
pop
daa
call
repz
addr16
xchg
movs
xchg
jno
mov
mov
pop
cmp
push
cdq
push
add
fsub
mov
loop
jl
push
add
dec
xchg
sub
add
sub
xchg
push
(bad)
(bad)
sub
and
loopne
xor
sbb
jne
scas
icebp
mov
push
jmp
stc
xchg
jecxz
dec
jnp
popf
pop
xchg
dec
jge
mov
mov
(bad)
outs
imul
dec
bound
sbb
jle
cmp
sub
sub
arpl
ret
and
in
mov
push
retf
test
jae
jge
fwait
sbb
cbw
js
iret
pop
mov
xchg
fimul
or
cmp
or
jmp
(bad)
mov
or
cwde
xor
test
daa
or
push
xchg
pop
cmps
jne
fwait
pop
std
mov
movs
sbb
fild
pop
(bad)
cmp
or
xor
leave
data16
aas
out
cmp
repz
icebp
sub
lock
hlt
imul
nop
xor
xlat
fdiv
sub
fwait
inc
or
and
push
(bad)
and
mov
pop
mov
test
out
cs
push
mov
lds
nop
jbe
pop
push
cli
cmp
dec
and
jae
jns
lods
xor
inc
mov
cld
mov
xchg
mov
mov
pop
pmuludq
pop
std
sahf
push
in
popf
out
loop
(bad)
fisub
adc
xor
adc
cmc
xchg
jecxz
mov
fidiv
in
jne
cmp
mov
int3
js
jnp
pop
jmp
sub
outs
or
or
in
jecxz
xor
pop
xchg
js
add
dec
lods
jmp
or
jle
sbb
add
push
daa
test
jmp
jle
cmp
test
retf
push
pop
sti
mov
xchg
xchg
and
mov
mov
mov
int3
mov
add
sbb
dec
in
addr16
movs
mov
fwait
adc
sub
(bad)
jbe
cmp
js
cmp
fsubr
test
mov
xor
xlat
push
sahf
cmp
mov
stos
pop
push
mov
xor
fst
outs
cmps
jle
add
mov
mov
mov
repz
rol
dec
movs
test
in
sub
sbb
add
mov
xor
mov
jmp
sbb
test
imul
push
sbb
fs
aad
into
push
jg
mov
in
retf
jmp
push
xor
aad
imul
(bad)
mov
jl
sub
sub
jb
mov
addr16
and
mov
pop
jnp
mov
jae
movs
add
iret
jno
stos
sbb
mov
jns
inc
xchg
repz
jmp
stc
cmps
and
push
pop
pop
pop
cmps
dec
sbb
fist
dec
cmps
fbstp
xchg
jae
les
cld
jns
xor
outs
es
mov
add
scas
cmc
inc
sar
xchg
sub
sahf
add
mov
pop
pop
das
in
jne
xchg
test
cmc
xchg
cmp
jne
mov
mov
mov
add
js
popa
jl
dec
mov
cmp
adc
dec
jg
outs
push
sub
cmps
sar
ss
in
xor
ss
test
rol
jl
and
retf
fst
enter
out
pushf
int
int
jbe
cmp
mov
repz
push
out
inc
mov
or
enter
movs
je
jg
popa
adc
xchg
stc
pop
xchg
jge
mov
call
mov
fxch
in
or
je
call
imul
mov
aad
mov
fld
test
dec
enter
dec
cmp
cmp
jns
push
adc
clc
(bad)
je
mov
stc
(bad)
popa
outs
in
push
test
scas
pop
movs
dec
push
loop
add
adc
adc
or
outs
fiadd
sbb
and
pop
ja
mov
je
inc
adc
and
gs
add
push
lahf
dec
xor
sbb
xor
jns
jmp
(bad)
adc
dec
dec
mov
stos
xchg
shl
iret
add
mov
arpl
cmp
fisub
jecxz
repnz
adc
inc
lods
fist
push
loopne
(bad)
mov
or
(bad)
out
add
add
lock
jns
fdiv
clc
push
lods
aad
and
inc
cs
xchg
sbb
ja
sbb
(bad)
push
jmp
call
sub
(bad)
jmp
or
int
or
(bad)
enter
mov
icebp
lock
push
jg
daa
(bad)
ror
xchg
jmp
data16
test
jmp
test
fwait
sahf
stos
out
dec
cmc
pop
daa
jne
mov
adc
retf
adc
mov
mov
push
movs
js
lods
push
xor
or
pusha
stos
cmp
ins
stos
xor
in
mov
add
xchg
jno
lahf
ins
ret
sbb
(bad)
mov
pop
(bad)
pop
push
or
shl
push
bound
xchg
sahf
xlat
lds
adc
add
jg
jp
shl
ins
xchg
push
jno
scas
cmp
loope
adc
popa
inc
pop
cdq
jge
pop
add
pop
pop
cmp
inc
mov
(bad)
repz
jmp
call
nop
adc
pop
retf
adc
sbb
movs
in
clc
out
call
adc
pop
mov
(bad)
push
arpl
cmp
aaa
xor
jmp
add
cmp
push
daa
jmp
pop
inc
and
dec
in
in
daa
imul
cmp
call
fld
lahf
mov
loop
in
inc
out
ficomp
jle
nop
xchg
push
mov
mov
(bad)
sbb
ror
outs
jbe
push
pop
ja
xor
cld
(bad)
cld
aas
fcom
xchg
add
adc
test
into
sub
outs
jle
stos
imul
mov
dec
adc
retf
and
cmp
aad
repz
hlt
mov
sbb
lahf
mov
dec
inc
sub
(bad)
les
out
je
and
pop
jbe
fwait
loop
mov
inc
in
dec
dec
mov
push
dec
jmp
ret
inc
sbb
dec
stc
and
ret
cmp
fsub
adc
int
jmp
cmps
jp
push
jecxz
aaa
fsub
mov
xor
xchg
arpl
adc
fsubr
mov
mov
pop
je
mov
push
(bad)
call
mov
push
mov
add
jp
hlt
and
nop
xor
in
pop
push
inc
test
sbb
mov
sub
cmc
(bad)
xor
push
pop
xchg
pusha
ror
xor
adc
call
mov
push
sahf
lock
aas
fwait
add
(bad)
jecxz
je
dec
sar
fisttp
inc
(bad)
or
test
jns
push
jle
push
cmps
push
mov
shl
and
repz
pop
outs
sub
retf
inc
xchg
add
clc
js
mov
push
enter
(bad)
shl
stos
ret
cld
jns
(bad)
in
or
xchg
mov
pop
pop
sbb
mov
push
adc
nop
cmp
in
add
fsub
fistp
xchg
inc
leave
inc
jl
push
jno
test
iret
mov
fstp
enter
(bad)
stc
scas
inc
push
add
cmps
pusha
jge
int3
out
in
pushf
mov
test
mov
xchg
adc
dec
mov
mov
fistp
cmp
hlt
add
inc
shl
mov
mov
retf
jns
xor
sbb
adc
push
push
xchg
cdq
(bad)
cs
aaa
jle
sub
fwait
pop
pop
les
dec
sbb
fwait
data16
shl
ja
mov
sub
jo
inc
in
dec
stos
cmp
clc
inc
add
jbe
cmp
push
in
mov
dec
outs
movs
jg
or
dec
jmp
xor
lods
ret
mov
fidivr
adc
or
pop
lea
sti
mov
stos
inc
mov
push
jbe
lods
inc
xor
es
mov
push
and
inc
jo
push
mov
sub
fcomi
fild
stc
mov
jo
add
cmp
cmp
push
ffreep
mov
inc
fnsave
mov
xlat
cmp
sbb
sub
bound
mov
add
pop
push
or
push
out
into
pop
push
xchg
pushf
xchg
in
sti
cwde
fstp
ss
xchg
imul
pop
inc
sub
pop
je
repnz
fdiv
xchg
inc
fist
cmp
push
xchg
and
test
daa
bound
pop
sub
dec
lock
in
ffreep
mov
mov
sti
or
movs
xor
mov
int
jle
lods
movs
mov
pop
mov
pop
push
ins
adc
and
fs
imul
jmp
jmp
dec
cdq
movs
das
movs
gs
ds
and
outs
xchg
shl
fs
ins
dec
jl
sbb
adc
or
mov
jno
inc
adc
mov
mov
cmp
iret
in
or
xlat
add
fwait
pop
xor
and
test
ss
mov
push
jns
mov
sub
ins
(bad)
das
mov
out
sub
(bad)
xchg
je
push
in
mov
pop
dec
push
scas
aam
leave
mov
xlat
in
xchg
and
sbb
pop
sbb
xor
fnstcw
and
pop
inc
mov
fcom
stos
jno
popf
mov
mov
adc
sar
cld
data16
ds
mov
jecxz
jmp
inc
jbe
add
pop
call
je
popa
xchg
pop
mov
mov
cld
jmp
ins
out
add
sbb
ror
repnz
pop
adc
movs
adc
jl
push
sbb
scas
dec
mov
imul
cmc
in
stos
mov
pusha
(bad)
dec
jne
add
test
pusha
xor
sahf
out
xchg
xor
fmul
push
stc
mov
(bad)
jg
inc
lea
(bad)
aaa
cmps
inc
jo
out
gs
inc
fisttp
mov
shl
push
and
(bad)
lock
mov
add
fxtract
push
add
std
les
loope
mov
or
repz
jl
adc
stos
dec
es
push
jmp
jnp
ret
xlat
mov
or
fxtract
cmp
out
push
in
cs
push
outs
in
jae
sbb
push
outs
(bad)
fwait
inc
sbb
push
sub
in
or
test
and
xchg
pop
push
jg
in
imul
fwait
and
or
sbb
push
push
pop
arpl
dec
inc
xchg
push
mov
inc
and
in
mov
sti
add
dec
and
outs
xchg
sub
pop
clc
cmp
xchg
cmc
push
inc
pop
data16
out
jo
arpl
pop
push
cmp
bound
jb
and
xchg
inc
rcr
mov
test
inc
mov
out
xchg
xchg
xor
and
xchg
pop
jmp
jp
mov
daa
xchg
pop
repz
mov
enter
adc
ja
test
fucomp
ror
mov
adc
cs
(bad)
leave
add
and
ret
add
loopne
add
mov
das
or
lea
sti
popa
inc
inc
inc
sub
movs
mov
mov
loop
leave
mov
cs
adc
xor
push
call
or
inc
leave
call
adc
and
ins
pop
pop
gs
retf
jbe
dec
xchg
and
(bad)
cmp
jecxz
jp
sub
adc
nop
vhsubpd
(bad)
mov
imul
dec
scas
jl
sub
shl
paddsw
xchg
gs
cmp
or
fstp
cdq
mov
test
jae
pop
lock
ja
cmp
fucomip
xchg
cmp
pop
mov
add
imul
mov
ret
cdq
adc
pusha
push
cmp
(bad)
mov
dec
cli
push
repz
inc
pop
mov
js
and
das
repz
fdivr
aad
test
or
jns
int3
push
sbb
mov
int
mov
shr
sub
or
repz
arpl
and
fcom
and
push
lds
in
xchg
add
into
inc
cmp
shl
(bad)
mov
add
and
jecxz
aas
outs
adc
or
dec
inc
stc
or
pop
add
lds
sub
pop
sbb
xor
sub
icebp
or
(bad)
mov
pusha
test
cmps
inc
mov
sti
cmps
mov
popa
push
imul
std
ror
outs
out
push
jo
xor
adc
test
fdivr
fsubr
arpl
stos
jmp
adc
mov
add
mov
add
jno
cwde
or
hlt
sub
dec
cmp
mov
test
test
or
in
jo
cmp
enter
sti
mov
adc
sbb
push
int3
dec
int
stc
push
mov
mov
cld
cld
jno
mov
jmp
jnp
popf
mov
and
aad
pop
jp
cmp
xchg
mov
sub
sbb
jae
mov
lea
adc
jae
mov
inc
and
pop
mov
xor
pop
imul
pop
inc
(bad)
ja
std
jne
jp
add
pop
xchg
fst
inc
arpl
(bad)
cmps
pop
hlt
xchg
lods
imul
out
retf
push
xchg
adc
std
fiadd
repnz
mov
push
push
cmp
inc
mov
hlt
pop
xlat
mov
mov
dec
pop
and
adc
cmp
mov
cmp
add
jo
call
inc
jle
jmp
pop
sar
add
cs
cmps
fcomp
lods
retf
xor
inc
sub
pop
xchg
push
loopne
test
fwait
addr16
movs
lock
adc
test
sub
popf
retf
jp
or
jl
(bad)
shr
xchg
jecxz
sub
xor
hlt
(bad)
xor
dec
mov
sbb
xchg
and
sub
fld
push
or
xor
mov
push
sub
sbb
in
repz
clc
inc
xor
xor
adc
inc
jno
add
stos
mov
gs
cld
shl
icebp
mov
sti
imul
ja
adc
or
adc
jmp
fcom
out
mov
cmp
push
pop
cmp
mov
cld
ins
xchg
pop
jae
mov
adc
dec
mov
jb
(bad)
fdivr
bound
lahf
mov
call
xor
pop
sbb
inc
mov
mov
addr16
dec
pop
nop
push
nop
xor
ficomp
jmp
push
and
mov
ds
xor
push
dec
mov
pushf
jb
sbb
dec
sbb
push
hlt
jle
lahf
adc
mov
xchg
xor
push
mov
add
movs
pop
lahf
adc
out
into
mov
hlt
inc
ret
sub
sbb
int3
ret
cld
xlat
add
ss
adc
mov
sub
call
or
les
mov
icebp
mov
(bad)
mov
push
jl
mov
inc
clc
xor
fs
dec
fwait
retf
xor
mov
fsub
adc
mov
retf
mov
cmp
dec
mov
jg
sti
outs
jae
(bad)
mov
dec
(bad)
xor
xor
mov
hlt
outs
fbstp
rcl
sub
addr16
inc
jmp
sub
(bad)
test
test
inc
in
icebp
sti
sub
enter
loop
mov
inc
fld
cmp
hlt
mov
std
aad
aam
dec
fnsave
in
ret
cmp
pusha
dec
je
push
shl
mov
fst
gs
push
pop
or
adc
stc
int
out
fnstenv
jmp
push
pushf
outs
ret
mov
leave
(bad)
sbb
lds
cmp
mov
cdq
out
push
jns
mov
loope
pop
cmc
pop
or
mov
adc
cmps
mov
pop
into
clc
fwait
jge
inc
popa
(bad)
fnstsw
mov
nop
and
fimul
jne
push
call
and
bound
or
or
jo
mov
pop
or
sub
dec
cmp
mov
and
cld
mov
int3
scas
test
add
fldcw
pop
stc
or
loopne
ins
push
icebp
sbb
and
mov
jmp
nop
dec
cmp
mov
out
push
and
sar
adc
mov
outs
and
sahf
jnp
mov
or
retf
call
aad
jmp
arpl
dec
int3
push
push
es
fsubr
push
fistp
sti
jno
int
xchg
pop
jbe
pop
rol
in
mov
pop
pop
movs
aad
push
sahf
sub
push
sub
test
rol
mov
pop
(bad)
dec
or
sbb
mov
enter
es
pop
fistp
mov
mov
mov
xor
dec
add
jno
mov
add
jl
pop
bnd
test
hlt
jecxz
out
inc
rcl
mov
pop
repz
mov
or
retf
sbb
mov
pop
xchg
mov
stos
aad
cmp
sub
je
and
hlt
add
lahf
push
call
cmp
mov
xchg
add
mov
std
lods
out
push
arpl
pushf
std
pop
push
es
into
and
xchg
sahf
inc
pop
jle
out
ds
inc
cli
cwde
xor
push
xchg
dec
ja
xor
sar
mov
dec
scas
aad
loopne
stos
jecxz
xchg
sar
dec
leave
test
jae
push
push
mov
sub
xor
pop
popa
mov
dec
mov
imul
adc
icebp
(bad)
in
in
lahf
push
dec
scas
xor
or
ins
cmp
mov
data16
dec
cli
inc
dec
(bad)
js
mov
adc
cmc
push
test
sub
std
and
(bad)
sbb
adc
or
cmps
movs
push
ds
retf
ds
lds
fisub
nop
push
jo
scas
and
inc
dec
cmps
and
add
test
mov
mov
fdivr
dec
add
outs
add
stc
push
imul
fdivr
pushf
or
test
mov
jo
sub
cmp
add
jae
shr
mov
jg
aam
data16
mov
jl
sub
rcr
jmp
xchg
push
or
adc
icebp
inc
loopne
xchg
sbb
push
jo
xor
fdivr
pushf
mov
cmp
bound
enter
mov
fwait
push
jbe
mov
inc
or
cmc
jb
add
ja
fild
push
cli
xchg
mov
cmps
pusha
push
lds
mov
sti
sahf
mov
jmp
add
mov
or
push
pop
mov
jmp
or
test
fdiv
fs
jl
mov
adc
xchg
and
push
xchg
xor
mov
out
mov
fs
adc
ins
dec
loope
ffreep
add
or
(bad)
pushf
iret
(bad)
loop
nop
xchg
pop
sub
rol
syscall
xor
test
dec
mov
and
push
gs
imul
xchg
xor
lock
fsubr
xchg
cwde
push
push
pop
xor
lock
inc
jne
jae
mov
clc
sbb
jp
out
ss
test
inc
xor
and
enter
lea
sbb
pop
cmps
sub
movs
(bad)
aaa
test
cmp
fist
out
int3
xchg
out
stc
cdq
pop
test
arpl
xchg
mov
add
jmp
ins
rol
retf
out
dec
dec
daa
add
adc
adc
xor
lods
dec
call
and
sbb
xchg
push
xchg
jg
jmp
mov
lods
xor
ins
ins
jle
dec
hlt
jp
fmul
add
cmps
push
dec
push
(bad)
loope
dec
dec
inc
mov
iret
imul
jo
mov
in
adc
repz
inc
or
pop
aad
inc
push
sbb
in
data16
ficomp
fcmovbe
push
mov
loop
lods
loop
sbb
enter
or
xchg
xor
js
inc
popf
xchg
mov
or
push
cmc
mov
outs
pop
pushf
jl
mov
or
or
cmp
mov
stos
mov
dec
inc
into
pop
cmp
mov
add
mov
test
xchg
(bad)
pop
sub
loop
push
mov
ror
add
jmp
or
pop
aas
sbb
rcr
and
movs
lods
dec
sbb
leave
jg
xor
loope
jmp
and
mov
test
arpl
lock
sbb
inc
and
add
pop
inc
mov
cmp
movs
mov
xor
scas
loope
mov
jmp
mov
std
inc
xchg
cmp
in
lahf
sbb
push
and
xor
sbb
repz
(bad)
cld
call
inc
mov
pop
cs
mov
xchg
cld
shr
(bad)
xchg
and
lods
int3
mov
gs
push
pusha
stos
sbb
inc
test
cmp
cmp
inc
push
jno
pusha
adc
mov
test
mov
loopne
dec
movs
mov
es
xchg
cmp
cmp
jb
cmp
ins
push
clc
pop
dec
gs
pop
push
xor
loope
leave
sbb
out
(bad)
adc
adc
fwait
xchg
xor
cmp
dec
imul
xor
add
out
fisttp
ret
shl
imul
call
push
jle
(bad)
pop
out
int
and
dec
xor
mov
ja
jecxz
jne
test
rcl
or
enter
jge
leave
jmp
sub
push
cmp
sub
jmp
cmp
sti
(bad)
mov
push
fs
lock
icebp
and
mov
add
ds
gs
imul
fisttp
or
cmps
mov
inc
loopne
push
pop
adc
ret
fwait
(bad)
mov
push
js
dec
(bad)
mov
push
sub
movs
jo
jge
imul
sub
iret
lods
ret
popf
nop
aad
addr16
in
xor
test
jbe
outs
sahf
dec
cmc
pop
leave
cs
(bad)
inc
jg
in
pop
sbb
jmp
jle
in
sub
mov
pop
cs
dec
pop
add
cmp
jg
(bad)
jnp
pop
ins
fdivr
mov
sub
sbb
enter
cmp
jb
pop
mov
mov
mov
cwde
push
xlat
cld
mov
rcr
sbb
scas
daa
pop
mov
mov
xor
test
fisttp
mov
jmp
cli
and
call
mov
jne
and
repnz
add
mov
pop
or
ja
loope
outs
sbb
xor
into
fisttp
ror
push
aam
std
mov
fisttp
xchg
loope
out
push
dec
xor
xchg
cmps
fild
push
gs
sar
jnp
pop
mov
mov
int3
std
int3
xchg
sbb
call
push
lea
mov
push
and
(bad)
pop
pop
icebp
pop
gs
pop
cmp
ds
dec
mov
es
mov
sub
aaa
stos
adc
inc
rol
add
cs
(bad)
shl
or
cmp
xor
add
xchg
xor
mov
inc
imul
in
mov
pop
jnp
retf
scas
mov
mov
lds
mov
popa
cwde
dec
adc
sbb
sbb
imul
or
sbb
scas
pusha
cmp
push
int3
add
jl
mov
into
repz
imul
push
mov
push
pop
gs
sbb
mov
cmp
jp
push
jmp
xor
mov
or
stos
sbb
adc
gs
sbb
lods
sbb
shl
(bad)
repnz
hlt
clc
je
push
or
out
mov
cld
dec
cmp
jns
ins
mov
push
jmp
sahf
stos
fidiv
dec
dec
rcr
scas
shl
mov
into
scas
xor
mov
mov
add
call
mov
ss
enter
test
pop
dec
aam
(bad)
pop
cli
inc
add
xor
sti
arpl
inc
lds
scas
jnp
xchg
adc
adc
ror
mov
cli
mov
loopne
scas
fs
xlat
(bad)
mov
pushf
fcomp
mov
pop
jmp
mov
ret
xor
imul
mov
jnp
or
mov
and
cs
mov
xchg
mov
rcr
or
imul
lods
jl
sar
jg
rol
(bad)
out
pushf
fidiv
sub
or
xchg
es
push
dec
js
repz
fadd
jp
add
cwde
or
nop
pop
ficom
sub
or
inc
xor
fcmovne
sahf
sbb
shr
inc
test
outs
dec
bound
pop
ja
sub
outs
or
push
jmp
(bad)
in
call
pop
lahf
jne
jp
ins
or
mov
in
cs
cmp
sub
ret
inc
add
push
aam
pop
imul
push
mov
test
cmp
xor
sbb
repz
mov
jecxz
dec
aad
call
fxch
std
ror
sbb
pop
shr
fcomp
imul
or
or
mov
jmp
fwait
inc
mov
repnz
(bad)
mov
scas
and
repz
add
call
mov
or
(bad)
sahf
mov
retf
movs
push
(bad)
cwde
bound
mov
out
pop
xchg
(bad)
mov
test
sub
cdq
xchg
ret
dec
sbb
or
mov
lods
in
cmps
jmp
pop
(bad)
mov
add
(bad)
shr
mov
(bad)
sbb
lds
sub
jae
xchg
pop
rcr
sar
cmc
mov
push
jae
mov
ret
jbe
adc
mov
jb
scas
and
loop
(bad)
pop
(bad)
xor
and
add
xacquire
or
mov
push
pushf
inc
int3
xor
jno
xlat
mov
sbb
dec
jl
sbb
mov
(bad)
(bad)
(bad)
ins
add
mov
fadd
mov
fs
repnz
nop
adc
push
dec
mov
ds
mov
sub
pop
sbb
(bad)
das
std
push
lods
sbb
sbb
inc
scas
dec
inc
pushf
mov
pop
(bad)
out
int3
or
or
mov
and
mov
pop
into
mov
stos
dec
cld
adc
jecxz
mov
mov
or
shl
dec
xchg
inc
xchg
xchg
and
jae
pop
pop
aam
icebp
cmps
push
xchg
retf
push
xchg
arpl
addr16
jl
in
jl
imul
in
cmc
ret
push
and
das
jecxz
jp
out
cmp
inc
(bad)
mov
jo
ins
stos
pushf
lds
call
mov
mov
loopne
sub
mov
xchg
push
test
dec
aaa
cmps
sub
outs
dec
jnp
sub
xor
movs
jb
push
loop
mov
push
jns
test
les
lods
mov
icebp
mov
popa
popf
inc
mov
ret
xchg
mov
mov
cmp
push
adc
aad
movs
mov
nop
sub
add
adc
xchg
adc
test
ret
popf
mov
jmp
hlt
scas
adc
push
sbb
push
xchg
xchg
das
sub
xor
out
jne
xchg
cli
arpl
add
aad
imul
nop
ror
add
add
(bad)
jbe
pop
push
sub
je
lods
mov
lock
popa
jmp
push
not
lea
jo
mov
jae
cmp
push
popf
and
shl
mov
sbb
xchg
mov
cli
xchg
mov
dec
lods
stc
imul
loopne
mov
cmp
push
and
rcl
rcr
les
movs
adc
xchg
sub
out
lds
fild
sub
mov
and
dec
lds
cmp
jbe
mov
push
nop
push
inc
ret
mov
test
clc
out
mov
nop
(bad)
sahf
jnp
or
sti
mov
dec
xchg
hlt
cwde
inc
jl
mov
mov
inc
push
pop
call
push
addr16
push
in
aad
cmp
(bad)
daa
aam
cld
jmp
xchg
out
xor
pop
ror
cmps
mov
ss
sub
push
ds
add
sahf
rol
aas
out
hlt
push
(bad)
out
xor
push
mov
mov
or
xchg
fcomi
dec
ret
cwde
lea
mov
mov
sbb
and
pop
stc
cwde
pop
add
enter
test
push
fucomi
icebp
inc
imul
rcr
lds
or
inc
inc
cmps
xchg
lods
xor
inc
jo
ins
jg
add
mov
dec
mov
push
inc
sbb
repz
pop
or
outs
and
pusha
xor
in
and
sbb
ror
mov
fild
adc
hlt
or
mov
jno
ds
cmp
out
inc
xchg
mov
adc
mov
cld
scas
fdivr
dec
jecxz
data16
xchg
and
das
lahf
std
in
daa
xchg
adc
lds
popf
add
lods
imul
mov
scas
mov
sbb
repz
inc
jae
xchg
test
imul
xchg
jb
and
daa
or
shr
dec
sub
mov
ficomp
popf
push
ja
sbb
fst
add
push
mov
push
leave
pop
fwait
add
rol
popf
mov
jmp
(bad)
data16
imul
call
push
xor
loopne
dec
aas
mov
setae
arpl
fst
mov
inc
and
adc
add
adc
stos
arpl
(bad)
repnz
(bad)
les
dec
inc
mov
int
cmc
jo
dec
xor
stos
lods
xor
sbb
sbb
mov
or
sub
cmc
js
sbb
xchg
inc
mov
mov
mov
and
ins
pop
jns
dec
xlat
cmp
dec
sub
pop
cmps
cmp
mov
cmp
mov
das
iret
jne
jp
push
inc
shl
leave
add
jo
mov
call
call
fxch
and
xchg
pop
cmp
loopne
pop
ret
lea
mov
xor
mov
mov
sbb
mov
xor
jne
fidivr
adc
ret
push
mov
fsubr
inc
xor
adc
cmps
popa
sub
jno
pop
movs
mov
jnp
imul
aaa
in
cmc
int
dec
out
mov
fbld
rcr
pop
fisub
xor
retf
shr
nop
pop
add
add
jno
sbb
enter
push
cli
pop
out
pop
(bad)
out
push
jle
fisttp
dec
dec
es
js
in
sub
fs
xlat
sahf
fucomp
mov
and
xor
pusha
sbb
push
sbb
sbb
xchg
dec
aam
in
xchg
aas
popa
sbb
push
push
jmp
(bad)
js
in
scas
sbb
xchg
int
cmp
sub
sbb
pop
mov
std
xor
out
mov
cmp
es
jg
cmp
jmp
mov
int3
test
movs
jle
dec
pop
cmc
dec
movs
xchg
das
cmps
shl
cdq
test
sti
and
call
jo
push
loopne
inc
lods
pusha
mov
xor
(bad)
(bad)
sbb
leave
xor
sub
or
xchg
mov
xchg
sti
mov
cli
sbb
mov
xor
sbb
mov
aad
push
and
xchg
add
adc
sub
sub
mov
mov
ss
jle
leave
dec
jne
(bad)
jno
cmovs
xchg
popf
push
xchg
dec
es
loop
mov
ja
push
call
push
adc
push
sub
xchg
fisttp
jle
cmp
jae
loope
adc
add
jb
(bad)
movs
adc
push
mov
and
mov
ror
or
ja
jnp
mov
dec
test
jmp
mov
mov
sahf
movs
mov
(bad)
leave
cdq
jle
outs
add
fdiv
inc
cmp
fmul
mov
adc
lahf
out
add
pop
pop
fcmovbe
and
movs
enter
adc
ins
in
sbb
ficom
xor
fisub
pop
mov
lock
ror
sub
into
cmc
adc
fidiv
(bad)
jecxz
mov
xchg
stos
mov
sub
cdq
or
hlt
push
dec
or
std
or
xor
sbb
in
imul
xchg
popf
jnp
mov
arpl
dec
bnd
ja
outs
pusha
clc
movs
outs
mov
jecxz
(bad)
push
and
pop
movs
xchg
daa
lea
push
stos
cmp
les
jmp
clc
(bad)
push
fwait
jl
scas
call
mov
mov
jl
js
mov
outs
inc
mov
xor
mov
jb
or
mov
fcmovnb
arpl
stos
push
and
dec
pop
es
push
aad
ds
sbb
inc
mov
jno
sbb
inc
jg
mov
mov
sbb
in
inc
jle
jbe
js
cmp
sahf
dec
push
xchg
sub
jg
das
mov
or
or
pop
mul
popf
jmp
mov
jns
xchg
cmps
add
jg
mov
mov
xlat
mov
sub
dec
dec
(bad)
(bad)
xchg
and
aas
pop
imul
addr16
push
shl
or
fisttp
inc
lods
pusha
pop
cdq
in
pop
cli
sub
pop
stos
jmp
push
or
into
jmp
dec
test
cmps
mov
push
movs
inc
add
pop
jo
cmps
sti
call
arpl
add
enter
jne
jns
sar
cmps
rcr
push
sbb
adc
cmp
in
mov
cmp
mov
mov
shl
and
push
daa
not
jo
es
retf
push
in
je
inc
rep
push
in
jae
xlat
dec
hlt
and
frstor
sub
cmp
push
xchg
sbb
jecxz
stos
std
into
dec
sbb
retf
repz
mov
retf
rcr
sbb
inc
inc
mov
mov
add
sti
aam
sbb
lock
(bad)
jne
sbb
ret
aad
pusha
xchg
iret
xor
addps
hlt
inc
mov
je
jb
clc
jmp
pop
add
push
lds
rcr
in
loope
mov
mov
jl
inc
mov
jae
push
xor
fwait
jns
pusha
mov
fcmovb
adc
js
pop
movs
pop
or
xchg
test
iret
dec
and
or
xor
loop
jb
push
jmp
call
or
jp
cld
xlat
movs
cdq
icebp
fisub
lods
(bad)
mov
mov
mov
fild
xor
arpl
ins
cld
push
push
stos
sub
jmp
les
push
popa
xor
xchg
xchg
aaa
dec
inc
or
mov
push
loop
adc
mov
cld
in
mov
ins
mov
mov
mov
(bad)
adc
pop
pop
mov
das
mov
mov
push
inc
jo
dec
jp
push
(bad)
shl
daa
adc
test
in
and
push
fiadd
push
pop
inc
jb
mov
adc
dec
fwait
stos
(bad)
bound
daa
jecxz
cmp
or
sub
loopne
mov
sbb
mov
data16
imul
ds
xor
mov
or
pop
push
dec
jbe
ds
pushf
mov
pop
bswap
aas
add
outs
mov
pop
jmp
fisub
repz
lea
push
outs
lahf
xchg
push
xchg
pop
cmp
push
and
ret
fnstenv
pusha
test
comiss
ins
sahf
out
sub
and
lods
outs
out
or
test
aaa
(bad)
xchg
sub
out
xor
popf
mov
or
dec
cmp
lahf
icebp
lods
jno
mov
push
sub
outs
and
and
push
inc
jbe
int3
shl
call
cli
ss
mov
mov
lock
mov
sbb
sbb
cmp
pop
mov
xor
dec
push
cdq
fsubr
imul
jmp
(bad)
les
and
add
jge
push
lahf
jmp
dec
nop
xchg
iret
test
neg
cmp
push
loop
dec
push
daa
push
jno
rol
clc
les
out
fwait
test
imul
aaa
(bad)
cmps
mov
arpl
adc
(bad)
and
mov
(bad)
fld
out
inc
xchg
ds
outs
jne
clc
cmps
stos
jp
fidivr
cmp
stos
fld
mov
leave
faddp
and
mov
jmp
add
pop
pop
mov
(bad)
not
test
cmp
retf
jge
imul
outs
lea
mov
aaa
push
ret
xlat
mov
icebp
sub
mov
rcl
(bad)
movs
inc
xchg
jle
mov
in
push
loop
cmp
outs
(bad)
stc
push
scas
push
mov
shr
fisubr
jge
pop
inc
xchg
or
xchg
jb
push
fsincos
cmp
sbb
mov
test
xchg
mov
fwait
pusha
test
outs
ror
or
jge
push
and
mov
daa
rcl
pop
leave
shr
mov
loop
dec
ret
cmp
call
repz
xchg
push
aam
sbb
cmp
jecxz
mov
mov
jecxz
ret
sbb
or
jmp
xor
cmc
xlat
jbe
or
mov
sub
mov
out
xchg
loop
cmp
and
stc
jo
cmp
mov
cli
mov
lds
mov
or
scas
popf
jge
xchg
stos
(bad)
jno
dec
pop
sub
js
dec
sar
leave
add
xchg
or
inc
stos
mov
cmc
jb
rol
arpl
cwde
les
or
cwde
mov
aam
mov
pop
or
ins
cs
dec
jbe
pop
jb
jge
std
neg
mov
rdtsc
lea
lock
(bad)
scas
je
ret
or
mov
jmp
gs
fisttp
mov
cmps
push
ins
mov
ja
aad
sub
push
adc
dec
mov
std
dec
(bad)
and
pushf
push
in
es
sub
cmp
fdiv
daa
or
test
cdq
cmp
jmp
in
mov
jnp
(bad)
std
cli
test
cmps
xchg
and
pop
dec
fcom
dec
into
shr
adc
xchg
leave
xor
sub
in
repnz
es
jmp
push
lods
movs
inc
enter
push
fwait
shr
xchg
jmp
dec
sbb
je
lods
pop
xlat
jle
ret
mov
or
test
sub
pop
scas
adc
sub
cmp
sbb
loopne
or
add
inc
pop
call
retf
gs
movs
sub
jb
xchg
lods
popa
adc
and
and
dec
pop
hlt
aas
lods
xchg
ds
mov
stos
add
dec
inc
pop
imul
sbb
pusha
sub
adc
out
je
inc
lods
out
add
retf
bound
push
xor
pop
je
ror
jg
push
leave
loope
sbb
outs
cli
shr
out
mov
push
bound
mov
or
es
cmp
fisubr
add
pushf
adc
cmps
leave
inc
retf
js
add
pop
add
xchg
popf
add
int3
push
cmp
test
aas
dec
sti
sbb
pop
xor
hlt
adc
ds
fld1
jmp
adc
xchg
push
xor
adc
xor
pushf
loopne
and
add
mov
xchg
push
jle
je
test
adc
int3
mov
les
pop
mov
out
aaa
and
inc
add
out
add
push
adc
cmc
std
in
or
mov
sub
les
(bad)
mov
adc
popa
xor
mov
or
test
add
jb
sbb
repnz
jbe
lods
lods
in
add
std
aam
fmul
jae
shr
in
and
es
into
sti
dec
add
and
pop
pop
push
jmp
idiv
cwde
js
cmp
sub
mov
retf
dec
jg
mov
xchg
cld
adc
ret
fadd
dec
mov
nop
fucomp
and
fldenv
fxsave
jbe
call
hlt
sub
dec
dec
aad
jmp
mov
sete
call
fstp
xor
lods
rcl
clc
pop
pushf
(bad)
iret
not
ins
daa
dec
cmp
stos
aam
dec
jbe
lds
les
outs
push
pop
xchg
and
adc
loop
outs
(bad)
jmp
movs
mov
(bad)
ja
or
out
test
pop
mov
xchg
mov
sub
outs
cmp
sbb
and
xor
dec
adc
or
sbb
scas
fild
jnp
std
cld
rcl
push
data16
leave
pushf
retf
inc
push
push
dec
cwde
sub
cmp
mov
mov
shl
xor
cwde
jmp
shr
neg
sbb
adc
test
loopne
or
mov
fidiv
and
ror
retf
or
adc
fld
hlt
pop
xor
dec
push
jp
cmp
inc
pop
xor
shl
cmp
cmp
cmp
add
daa
int
into
xor
or
sbb
(bad)
idiv
popa
or
adc
jae
mov
mov
ds
ror
test
loopne
test
mov
mov
mov
aaa
cmp
push
(bad)
push
jl
stos
jbe
jb
int
dec
jg
add
dec
xor
mov
jp
lods
ds
xor
leave
les
repnz
inc
call
adc
adc
ss
pop
push
dec
inc
xor
sbb
xor
jns
fcom
imul
gs
outs
sbb
retf
aam
dec
fild
fiadd
fmulp
cmp
sbb
inc
xchg
fdivr
inc
lds
dec
xchg
cld
inc
iret
(bad)
or
out
mov
sbb
and
pop
test
dec
and
fwait
jmp
add
sti
adc
arpl
sti
xchg
test
(bad)
dec
jns
sbb
arpl
dec
fisttp
cmc
jecxz
pop
mov
in
adc
bound
mov
and
push
mov
test
xor
imul
inc
sar
pop
sbb
adc
les
xchg
out
shr
jb
or
add
pop
adc
inc
fidiv
cwde
jno
lds
fs
mov
push
fwait
movs
stos
sbb
icebp
xor
or
movs
enter
pop
and
pop
shl
mov
call
xchg
cwde
fmul
rol
mov
aas
popa
dec
bound
fsubr
or
stc
or
xor
adc
(bad)
sbb
imul
pop
shl
fcomp
jecxz
and
jbe
dec
adc
fidivr
push
mov
in
xchg
stos
in
scas
das
push
das
xor
jp
mov
loopne
mov
into
jp
xor
mov
jg
cmp
int3
pop
inc
mov
cmps
mov
das
in
push
and
xor
xor
stos
jg
imul
ins
jg
xchg
ret
mov
int
sbb
sbb
scas
sub
in
js
bswap
js
lods
mov
dec
in
scas
test
popa
pcmpeqw
mov
test
mov
dec
jb
jnp
or
fs
fwait
call
mov
jle
popa
test
mov
jnp
mov
dec
sbb
jnp
rcr
enter
dec
repnz
fild
mov
sbb
int
cmc
xchg
jg
jns
mov
mov
mov
jg
retf
xor
lods
jns
aad
arpl
(bad)
psrlw
lahf
push
pop
cmps
aad
cmps
inc
mov
jne
out
stc
push
push
jmp
fs
outs
cmp
std
jmp
mov
rcl
sbb
test
sub
mov
sub
mov
arpl
sahf
xchg
repnz
jb
add
adc
fidiv
xor
pop
fs
aad
xor
hlt
out
sbb
inc
call
or
in
add
sub
pop
sar
or
and
add
push
jmp
cmp
repz
stc
mov
fwait
ror
fisttp
loope
(bad)
mov
in
arpl
inc
loopne
ss
nop
jmp
sti
aas
lods
daa
lods
cmp
popa
jl
int
imul
push
xor
les
cmp
push
popa
pop
inc
cmp
cmp
enter
pop
xor
pop
mov
movs
jb
push
push
sub
pusha
xchg
xchg
test
fisttp
inc
xchg
pop
lahf
je
cwde
(bad)
stos
test
retf
cmp
stos
inc
pop
sub
sub
mov
dec
movs
dec
iret
add
mov
pop
imul
push
xor
cmp
in
pop
(bad)
xchg
jo
cmps
pushf
test
lock
ffreep
mov
mov
mov
cdq
lea
mov
lods
out
add
addr16
loope
adc
cmp
mov
pop
int
mov
push
fstp
icebp
mov
mov
fsub
loop
lahf
mov
int
cld
or
push
mov
cmps
or
comiss
adc
pop
sub
sub
push
cld
rol
test
inc
adc
loope
or
loop
test
xchg
(bad)
pop
mov
and
xchg
std
rcl
mov
adc
mov
jns
mov
mov
mov
jne
(bad)
cmp
fcomp
aam
mov
adc
push
sbb
mov
outs
int3
sti
(bad)
sti
shl
loop
adc
adc
sbb
dec
jne
add
jns
add
mov
xchg
pop
out
es
sbb
ja
jbe
add
jl
push
(bad)
pop
mov
jb
aad
inc
mov
cmp
mov
test
pop
mov
stos
cdq
data16
aas
stos
sbb
adc
dec
xor
rcr
test
outs
pop
jle
cmp
(bad)
adc
cmp
mov
divps
out
scas
mov
jnp
into
fs
loope
or
or
or
sti
in
add
xlat
in
sbb
pop
mov
lods
cmps
dec
cmps
push
movs
test
add
inc
js
push
popa
scas
or
stos
adc
push
cmps
enter
sti
mov
inc
mov
dec
and
cmp
sub
sahf
or
sahf
adc
xor
loope
int3
xor
imul
es
mov
push
into
jl
dec
clc
dec
dec
cmova
push
aaa
and
ret
jp
leave
nop
add
xor
sbb
mov
out
js
dec
mov
cmps
jecxz
test
adc
jnp
adc
out
(bad)
sbb
jmp
fnstcw
iret
inc
ja
ss
movs
std
shl
inc
std
inc
(bad)
das
cmp
int3
mov
int3
adc
in
fwait
test
and
aam
daa
or
xor
mov
(bad)
pop
icebp
jno
push
frstor
retf
jle
and
sar
pop
ins
lock
(bad)
and
stc
push
pop
inc
fcmovbe
inc
sub
jmp
les
cmps
or
out
ffree
data16
sub
inc
or
push
push
sbb
and
xor
inc
push
(bad)
push
ret
jno
fild
jge
jp
adc
test
mov
jl
mov
test
dec
(bad)
cmc
xor
bound
loop
jl
inc
mov
jmp
ret
stc
jns
adc
sbb
data16
shl
inc
push
push
ins
lds
pop
fsub
retf
dec
push
xor
jmp
movs
sub
adc
aam
push
frstor
fdivr
dec
repz
jae
bound
jae
pusha
inc
push
xor
jnp
mov
jnp
outs
ret
inc
mov
fwait
sub
or
dec
push
mov
and
pop
sub
popa
stos
stos
mov
call
popf
push
aam
xor
dec
bound
jbe
xchg
sub
sub
sbb
adc
and
mov
pusha
lods
mov
data16
cdq
cmp
inc
bound
out
(bad)
xor
test
push
xchg
push
dec
jo
cld
mov
pop
cmp
xor
icebp
and
jge
addr16
inc
jo
xchg
fild
cmp
test
xchg
in
dec
test
inc
ja
or
call
cdq
retf
inc
icebp
loop
mov
push
push
test
scas
push
mov
and
jns
and
loope
jns
or
call
jp
cmp
add
sub
mov
push
jmp
mov
in
jl
jle
mov
jnp
in
fst
(bad)
je
cmps
and
xchg
sub
push
je
(bad)
fidivr
out
jle
sub
add
jle
repz
dec
push
pmaxsw
loope
(bad)
push
(bad)
ja
sbb
scas
scas
movs
or
push
jp
ja
adc
mov
pop
push
and
cmp
stos
aaa
xchg
es
outs
cs
and
xchg
dec
retf
sbb
pushf
(bad)
cmps
pop
or
sti
or
xor
xchg
push
pop
sub
lea
shr
fwait
jb
add
inc
rcl
test
adc
cmp
push
hlt
mov
or
adc
fisttp
xchg
rol
mov
pushf
call
sub
imul
es
xchg
clc
jge
pop
les
inc
mul
cmp
cmp
rcr
test
or
lea
retf
add
and
ins
inc
xchg
dec
scas
and
pusha
test
sub
mov
inc
pop
push
sbb
ror
sti
fimul
shl
xchg
popa
xchg
push
push
stc
lahf
nop
add
mov
add
cmp
cwde
imul
mov
sbb
cli
xlat
sub
mov
pop
xor
or
jbe
and
xchg
push
jns
gs
test
fimul
xchg
imul
mov
mov
cmps
mov
daa
movs
push
cld
ret
inc
js
scas
mov
mov
mov
dec
jb
stc
pop
pop
or
push
nop
mov
cdq
hlt
(bad)
cli
(bad)
push
sbb
and
pop
stos
lods
push
nop
clc
repz
mov
adc
mov
int
push
dec
mov
jo
rcl
call
into
sbb
jmp
and
mov
addr16
jge
pop
lods
xchg
pop
cwde
xchg
sbb
repz
dec
pop
and
inc
xchg
imul
bound
dec
push
mov
shl
fstp
int
push
jge
pop
mov
std
repz
in
push
loop
vpcmpeqd
out
dec
push
(bad)
in
mov
scas
nop
lahf
cmp
sahf
jns
test
sub
fwait
xchg
pop
adc
mov
jno
out
adc
stos
add
mov
dec
mov
pop
aad
xchg
or
jl
icebp
xor
xchg
pop
lods
dec
add
mov
test
aaa
mov
mov
push
jb
mov
aam
pop
retf
jne
cmp
push
push
leave
xchg
adc
xor
cs
or
in
aam
sub
jo
cli
mov
outs
inc
jnp
nop
sbb
mov
sbb
pop
pop
sbb
out
idiv
ds
add
sti
pop
xchg
pusha
adc
xor
add
ins
ror
xlat
jno
retf
dec
dec
in
(bad)
mov
xchg
push
shl
or
daa
mov
push
ja
and
mov
pop
and
mov
cmp
sbb
mov
repnz
xchg
mov
xchg
push
and
mov
and
or
xor
or
sti
leave
xchg
test
sar
ficomp
and
call
sahf
jne
pop
lds
or
xchg
mov
aaa
out
mov
inc
(bad)
pop
mov
iret
retf
cmp
in
or
shr
or
inc
and
push
call
dec
xchg
ret
aad
mov
add
fstp
or
xchg
jle
mov
cmc
push
aas
mov
ins
add
and
sbb
push
cld
push
movs
call
and
int3
in
mov
xchg
mov
outs
es
out
(bad)
shl
dec
shl
mov
pop
cld
adc
push
cdq
(bad)
xchg
sub
cmp
scas
dec
mov
test
sub
and
sub
jmp
cmps
dec
in
mov
push
enter
sar
xor
stc
je
sub
mov
into
xchg
add
add
push
xor
call
cwde
mov
pop
sub
dec
dec
imul
call
(bad)
push
test
adc
lahf
xchg
fnstsw
test
sub
test
add
sbb
adc
lea
adc
xor
sbb
or
loope
jns
pop
adc
rcr
cdq
inc
inc
fiadd
aaa
mov
pop
iret
inc
ficom
add
out
aad
or
cmp
sbb
mov
test
aam
hlt
xchg
daa
push
inc
movd
ins
outs
movs
scas
fld
mov
and
mov
adc
inc
cmp
repnz
jnp
and
xor
xlat
imul
sahf
and
sub
int
shl
ror
pop
addr16
cwde
js
inc
(bad)
push
addr16
dec
in
lock
fwait
stos
jecxz
or
imul
out
jo
push
retf
dec
dec
mov
or
call
cmc
ret
push
cmp
out
inc
(bad)
nop
loope
mov
or
(bad)
sar
into
add
fwait
sbb
or
jbe
retf
jb
pop
and
sbb
xchg
sbb
sbb
addr16
xchg
or
repz
jl
mov
mov
inc
std
shl
ret
scas
push
jns
loopne
aas
sub
mov
in
out
mov
mov
arpl
imul
icebp
inc
and
mov
sub
jmp
mov
add
outs
test
mov
xor
data16
jb
std
in
jmp
aam
push
dec
stc
sbb
push
mov
imul
(bad)
popa
mov
pop
out
pop
std
pop
cmp
std
lods
test
sub
cld
cmps
push
xor
mov
das
fist
stc
mov
mov
push
mov
mov
shr
dec
or
adc
test
jecxz
xor
stc
mov
ds
mov
js
dec
cmp
stos
cdq
mov
shl
push
jbe
and
cld
loop
sar
enter
xchg
lea
rcr
cmp
mov
lahf
sub
sub
inc
arpl
push
pusha
stos
push
mov
clc
mov
fstp
push
and
ret
xor
int3
icebp
nop
fistp
hlt
push
mul
(bad)
sti
inc
and
nop
and
or
pusha
cmp
lds
xor
repz
fcomp
xor
data16
push
push
(bad)
fimul
xchg
jmp
mov
dec
(bad)
dec
mov
mov
(bad)
jge
mov
lock
and
mov
mov
adc
mov
push
gs
xchg
daa
jmp
cli
retf
in
and
pop
imul
cmp
pop
xchg
push
cli
or
es
loopne
movs
loopne
shr
mov
iret
cmp
mov
das
pop
dec
dec
ret
add
popf
imul
mov
pop
mov
mov
ret
sub
and
push
outs
sub
je
xchg
retf
sbb
std
adc
sub
and
gs
(bad)
mov
hlt
jo
or
push
mov
leave
rol
repnz
int3
cmp
push
ja
cmps
sub
call
xchg
sub
jle
mov
jp
clc
jge
add
xor
repz
in
scas
shr
loop
cs
shl
out
in
mulps
ss
lds
add
and
nop
lea
or
daa
arpl
cli
imul
div
(bad)
fisttp
mov
xor
and
ins
mov
div
jmp
pop
add
into
pop
dec
retf
mov
cmp
shl
pushf
fisttp
xabort
sub
and
lods
jmp
lods
pop
fwait
mov
lods
cmp
xor
outs
test
jmp
cmp
jp
mov
adc
stos
sbb
pop
enter
rcr
bnd
xchg
dec
inc
pop
mov
movs
sbb
cmps
push
inc
mov
pop
(bad)
jmp
div
fidiv
inc
jns
xchg
xchg
xchg
das
dec
inc
jno
xchg
cmp
aam
(bad)
gs
jp
outs
pop
add
mov
push
mov
push
ins
mov
or
mov
movs
enter
adc
xchg
sar
and
mov
test
or
test
mov
shl
mov
xchg
out
call
pop
pusha
dec
(bad)
fstp
sub
jp
aad
jmp
test
push
mov
mov
inc
ds
idiv
and
cld
inc
lock
push
jnp
into
mov
or
jbe
xor
ret
sub
adc
rcr
adc
leave
in
ror
dec
xchg
leave
mov
dec
sti
(bad)
repnz
push
adc
xchg
jo
and
dec
outs
inc
push
cs
int
mov
cwde
mov
out
std
cli
pop
push
mov
xor
dec
cmp
add
out
inc
and
inc
out
and
mov
pop
adc
out
add
in
call
out
push
sub
cmp
sar
sbb
rcr
fcom
ds
xchg
jbe
mov
loope
loopne
sbb
dec
add
pop
xor
or
iret
xchg
test
mov
pop
xchg
mov
das
(bad)
push
mov
in
add
add
jge
jae
add
rcr
add
fcomp
mov
out
mov
add
fs
jbe
ret
lock
jge
pop
outs
dec
pop
pop
fbstp
shl
jnp
(bad)
je
xlat
mov
hlt
mov
push
jmp
int
test
sub
adc
popf
push
dec
inc
pusha
icebp
inc
out
adc
loope
inc
and
xchg
out
sbb
pop
outs
test
mov
jae
cdq
or
in
cmp
jl
lods
dec
xchg
lahf
lods
xchg
sbb
xlat
imul
push
call
js
add
add
cmps
and
mov
push
push
je
into
stos
or
jge
jbe
pop
sbb
xor
seta
xchg
dec
sub
and
test
aam
ss
xchg
in
cmp
pop
xchg
ficom
inc
fucomp
jns
sub
cmp
and
lahf
nop
enter
push
sbb
or
dec
outs
mov
hlt
arpl
add
(bad)
push
pop
nop
movs
inc
les
or
sahf
sbb
jmp
xchg
xor
out
and
test
adc
out
out
in
popa
es
sub
ss
lds
sub
and
push
aad
xchg
les
lods
cmp
out
pop
inc
sub
sub
and
mov
add
int3
add
int
ss
and
(bad)
mov
jg
xchg
xlat
pop
adc
icebp
aas
adc
sbb
ret
push
mov
hlt
retf
lock
push
in
ret
addr16
mov
and
and
imul
jmp
cdq
nop
jnp
stos
dec
movs
out
dec
xchg
loop
dec
fimul
mov
sub
neg
push
test
mov
jmp
xor
int3
xor
cmps
mov
jmp
push
sub
cmp
out
shl
and
ficom
dec
jge
sub
lds
push
rcl
cmp
sub
push
outs
les
pop
or
sbb
ja
jno
call
(bad)
fucomip
push
mov
out
fld
ins
jo
cld
test
shl
outs
xor
mov
adc
fs
cmc
add
push
pop
mov
cmc
out
retf
ret
dec
jmp
or
mov
ss
and
js
cmps
sbb
and
cmp
xor
mov
sar
ror
inc
sahf
add
retf
ins
pop
fstp
xchg
imul
outs
adc
jne
sub
(bad)
push
(bad)
jbe
repnz
mov
aad
nop
inc
or
outs
xor
ds
pop
push
dec
xchg
scas
mov
sub
jg
pop
jo
dec
imul
or
ficom
cdq
retf
cmps
outs
inc
pop
retf
adc
dec
ins
imul
lds
fidiv
and
xor
imul
mov
mov
or
xchg
mov
pop
push
mov
and
cmp
adc
or
jp
xor
fisttp
pusha
pop
cmp
pop
ficomp
or
push
out
jo
popf
cmp
(bad)
xchg
sub
retf
inc
lock
pop
pop
jmp
data16
jg
cmp
das
mov
loope
push
adc
ds
repz
iret
in
fcom
adc
(bad)
movs
loop
dec
or
sub
pop
outs
neg
imul
aad
or
mov
or
xchg
mov
fcmovnbe
pusha
mov
and
xchg
and
xor
push
or
stc
shr
mov
(bad)
(bad)
bound
ss
out
cmp
mov
icebp
cmps
(bad)
mov
lods
cmp
push
xchg
sub
inc
pop
iret
pop
and
inc
clc
xchg
das
xchg
adc
cmp
stos
mov
and
ss
push
mov
outs
call
xchg
test
jne
add
dec
xchg
in
ror
mov
imul
ss
xor
cmp
dec
push
mov
clc
mov
inc
(bad)
rcl
(bad)
mov
pop
fdiv
and
bound
cdq
push
jle
in
cmc
and
lods
mov
mov
mov
pop
das
ja
loop
inc
mov
shl
dec
jp
popf
(bad)
stos
sub
xor
cdq
retf
imul
fadd
addr16
out
add
adc
popa
push
bound
mov
add
in
test
iret
cwde
sub
loop
sub
clc
or
fsub
(bad)
or
rcl
fidivr
cmp
xlat
pop
test
xchg
mov
iret
ror
inc
dec
push
inc
scas
sub
aaa
push
stos
sub
cmp
sahf
aas
push
sbb
movaps
call
mov
into
push
out
mov
and
mov
sub
mov
test
xchg
out
add
inc
sbb
in
push
mov
aas
sub
or
(bad)
mov
jb
das
dec
push
cmp
push
cwde
aam
fidivr
in
add
cmp
mov
xchg
inc
lds
mov
icebp
mov
pop
ja
lods
in
mov
rol
pop
aad
ins
add
jb
sahf
cdq
fsub
adc
sbb
mov
pop
into
sbb
out
movs
inc
popa
jbe
movs
mov
dec
test
push
bnd
adc
int3
(bad)
in
inc
mov
lock
adc
xor
inc
fwait
sbb
push
leave
mov
mov
lahf
and
mov
push
dec
ss
mov
xor
pop
xlat
mov
adc
imul
(bad)
div
(bad)
jno
mov
daa
mov
dec
mov
call
jg
call
push
dec
dec
jmp
push
ja
and
xchg
push
pop
mov
ror
lods
out
shr
mov
add
cwde
and
adc
(bad)
ja
das
fcom
jmp
repz
jge
lahf
cmc
and
(bad)
mov
mov
das
jns
dec
out
sbb
fadd
lods
jo
hlt
bound
mov
inc
fist
jo
fistp
inc
sub
pop
shr
jmp
mov
pop
mov
inc
xchg
pushf
in
pop
sub
xchg
cld
jle
rcl
jle
push
dec
mov
out
fucomip
push
ret
test
inc
dec
pop
mov
inc
jge
popa
iret
in
fcmovnb
dec
stos
sbb
dec
mov
and
data16
aam
(bad)
vpcmpgtb
cmp
in
or
fadd
xchg
sub
and
arpl
hlt
clc
outs
sub
cmp
dec
cdq
or
mov
jle
push
fxch
repz
mov
xor
ins
and
pop
sub
mov
xchg
lea
cmp
mov
sbb
lods
pop
loope
pop
jecxz
xchg
cmp
cmp
sbb
xor
cmp
shl
xchg
or
sahf
and
xor
dec
push
jnp
adc
clc
lea
(bad)
call
adc
mov
daa
xor
std
jg
jge
mov
ss
(bad)
fs
out
imul
adc
sbb
mov
jne
sub
xchg
ds
pop
sub
fsub
push
jl
add
outs
lods
data16
test
sub
jne
lods
das
fcomp
(bad)
sub
fild
fisttp
(bad)
out
pusha
push
push
xor
xor
and
popf
enter
pushf
mov
rcr
jle
movs
imul
sub
outs
or
mov
daa
mov
loopne
stos
not
sbb
and
xchg
jg
test
fisttp
sub
into
test
sar
js
xchg
test
stos
enter
adc
xchg
jne
add
cmp
imul
fmul
cwde
(bad)
mov
repnz
mov
sar
hlt
and
jae
sub
sub
xchg
cld
ret
leave
adc
mov
push
xchg
stos
jl
scas
push
js
adc
(bad)
popf
(bad)
enter
mov
das
and
cmp
data16
out
icebp
nop
(bad)
mov
lock
pop
ret
sbb
xchg
jmp
ja
and
fmul
loop
inc
fidivr
adc
inc
cmp
test
out
mov
pop
lahf
jge
in
ffree
ficomp
jne
(bad)
call
sahf
sbb
aad
jmp
call
xor
pop
(bad)
ficomp
ds
mov
mov
dec
sub
loope
push
cmp
inc
int
in
xor
test
mov
test
mov
out
mov
arpl
push
mov
xchg
push
inc
cwde
mov
cmp
ffreep
push
dec
and
xchg
or
in
jb
adc
into
(bad)
packssdw
daa
out
movzx
xchg
pop
or
dec
mov
enter
ficom
out
out
mov
jo
inc
fst
push
les
cmp
lock
jbe
test
fdiv
cdq
in
jecxz
shr
rol
ficomp
jmp
repz
jae
ds
sbb
pop
retf
mov
fsubr
aaa
sub
jmp
add
pop
idiv
adc
adc
push
inc
xor
test
mov
mov
add
movs
push
xor
jecxz
jbe
cli
xchg
rcr
mov
xor
test
movs
lods
mov
ja
aaa
xor
pop
or
pop
ins
push
outs
into
sti
fwait
push
in
sahf
retf
dec
push
in
out
cld
dec
nop
xchg
not
shr
hlt
push
and
xchg
mov
and
repnz
adc
es
in
or
mov
stc
pusha
and
xor
and
pop
pop
into
cmp
mov
stc
cmp
add
pop
xor
and
gs
int
scas
fmulp
mov
pusha
pop
sbb
cmp
mov
xchg
xor
std
or
or
jmp
push
mov
mov
adc
mov
pop
inc
das
mov
fisubr
sti
push
push
cmp
xor
movs
jmp
aaa
scas
lods
fistp
sub
sar
iret
adc
xchg
sub
cmc
iret
mov
jl
inc
jle
divps
or
leave
out
rcl
popa
fs
scas
pop
mov
mov
xchg
and
dec
retf
data16
xor
push
repz
dec
lds
ss
fld
cmp
cmp
or
sar
out
jecxz
pop
inc
push
int
sub
jne
ja
hlt
mov
test
daa
push
repz
or
aam
sub
add
xor
mov
xchg
cmp
clc
mov
mov
ret
stos
mov
outs
hlt
xor
xchg
call
push
test
fwait
mov
dec
pop
aad
dec
imul
mov
inc
jmp
inc
fldenv
xchg
sbb
out
mov
and
je
dec
mov
inc
cdq
aad
ret
or
xor
push
xor
sbb
not
adc
push
and
mov
and
dec
push
js
(bad)
mov
stos
lods
(bad)
sub
pop
cdq
fistp
mov
leave
cli
arpl
test
jno
std
dec
stos
adc
shl
fsubr
loopne
or
and
dec
ret
adc
aaa
inc
rcr
mov
ss
fmul
push
call
inc
jmp
data16
mov
fist
mov
pushf
sbb
dec
adc
repz
xchg
inc
(bad)
cmp
push
and
xor
add
jecxz
jmp
push
and
sub
loopne
lahf
pop
mov
xor
mov
fild
xor
rol
retf
inc
dec
mov
xchg
push
jmp
mov
push
xchg
xor
cwde
pop
xchg
push
ffreep
sub
sbb
inc
mov
jns
bound
jl
xor
pusha
sbb
jg
xchg
jns
jecxz
inc
mov
jp
push
xchg
cs
fadd
loope
stos
xchg
dec
out
jp
pop
sub
xchg
fiadd
push
cmp
cs
xor
cs
and
inc
cmp
sbb
clts
ins
dec
mov
adc
fidivr
scas
add
mov
jp
(bad)
mov
push
js
sti
inc
imul
out
int
fld
dec
cmp
ror
pop
mov
popf
mov
push
sbb
adc
push
jns
xor
test
push
lods
jmp
idiv
jl
pushf
xor
push
mov
std
cmc
pop
pop
(bad)
mov
dec
scas
sysexit
push
out
jp
xor
ret
and
mov
jo
jo
test
aad
aaa
es
out
cmps
je
cs
(bad)
fidiv
dec
jmp
(bad)
xor
inc
pop
mov
dec
push
inc
mov
into
push
out
sbb
cmc
inc
jno
sbb
rol
sub
lds
das
cld
icebp
or
sub
sub
out
sbb
sub
jle
hlt
das
leave
out
pop
cmp
cmp
push
pop
ror
movs
(bad)
loopne
pushf
add
jne
dec
dec
sub
jns
test
pop
add
add
lods
cmp
sbb
pop
xor
pop
cld
cmc
inc
mov
fld
cmp
inc
ins
mov
ins
add
cmp
pop
mov
mov
xchg
daa
gs
inc
test
loope
dec
lea
mov
cmps
scas
jecxz
sar
lods
cmp
ins
stc
cmp
enter
cmp
inc
cs
lock
in
dec
or
int
xchg
mov
shr
pop
test
(bad)
fimul
dec
shr
xor
out
pop
fnstenv
push
jbe
sub
mov
shl
outs
fs
xor
nop
inc
mov
mov
mov
es
inc
lods
movs
xor
movs
pop
push
out
mov
adc
xchg
lock
call
add
dec
gs
aad
cmp
outs
repnz
and
in
mov
mov
jno
das
daa
xchg
inc
(bad)
sbb
cmp
push
add
xchg
mov
lods
jle
pop
mov
repz
push
ficom
mov
inc
movs
and
adc
mov
mov
mov
push
push
ror
mov
push
push
je
ret
mov
push
retf
xchg
outs
mov
retf
scas
(bad)
adc
mov
scas
iret
test
test
jmp
sub
add
sub
fld
scas
and
retf
xchg
mov
cmp
pop
cli
mov
mov
out
sub
push
mov
jne
bound
pop
lock
add
jle
ins
cld
div
xor
fsubr
pop
adc
xor
pushf
lods
dec
repnz
dec
mov
bnd
xchg
stos
lea
mov
pop
cmp
inc
xor
icebp
loopne
cmps
popf
cmp
mov
clc
inc
(bad)
fadd
sbb
mov
sti
ja
nop
xchg
sub
je
xor
xor
call
pushf
stos
out
leave
xchg
test
mov
gs
sahf
cmp
sbb
int
pop
pop
mov
xor
daa
and
mov
inc
in
fwait
mov
cdq
mov
cmp
cmp
icebp
cmps
addr16
sbb
fwait
sub
sbb
js
movs
xor
inc
xlat
and
pop
or
push
add
add
stc
call
inc
push
loop
jae
inc
out
or
push
pop
push
add
jb
stos
mov
cmc
test
addr16
hlt
mov
cmp
test
or
loope
enter
xlat
aaa
push
bound
fisttp
inc
xor
mov
call
push
and
pop
inc
retf
inc
fstp
test
inc
xor
addr16
cmp
daa
je
push
pop
jge
jb
mov
cmp
dec
aam
sub
mov
mov
bnd
popa
jns
xchg
fld
fild
xor
xlat
push
in
and
jmp
mov
cmp
inc
or
es
jne
int3
shr
(bad)
arpl
call
out
mov
push
adc
scas
jmp
push
push
dec
nop
ins
ja
or
in
aad
inc
sub
test
sbb
stc
jbe
jl
xchg
cmps
movs
loop
icebp
ins
jmp
in
dec
fisub
retf
sub
sbb
and
inc
xor
popf
inc
mov
mov
clc
mov
add
jg
inc
push
jo
inc
ds
mov
lods
cmp
pop
mov
into
jmp
inc
xor
jmp
fild
push
in
rol
sbb
jbe
add
mov
aaa
xchg
pushf
rol
xor
dec
jge
push
test
(bad)
cwde
fsub
fbstp
loope
std
rcr
adc
push
cmp
push
fwait
add
int
call
jmp
test
loope
mov
pop
nop
ins
shl
adc
imul
adc
mov
sbb
sbb
fadd
adc
sub
aaa
ins
movs
add
sbb
cmc
cmp
pop
pop
mov
imul
or
test
mov
pop
icebp
ins
imul
imul
inc
fldenv
loope
stc
test
xchg
dec
shl
add
jecxz
scas
fild
jo
(bad)
push
inc
(bad)
test
mov
shl
hlt
cli
push
fadd
xchg
ins
pop
sub
mov
pusha
fsubr
mov
xor
push
inc
push
adc
into
call
mov
mov
in
movs
dec
pop
cld
jae
test
jmp
psrad
mov
jge
jecxz
cmp
in
fwait
loopne
clc
dec
and
(bad)
cs
nop
jle
jno
loop
mov
pop
xchg
dec
(bad)
in
sub
jae
scas
or
push
fist
stc
test
xlat
idiv
mov
adc
imul
pop
inc
adc
inc
sub
das
push
push
dec
push
jb
fsub
into
jmp
sahf
mov
ins
mov
rol
cmp
and
fistp
push
jle
vmwrite
scas
aad
nop
aad
pop
fdivp
xor
dec
mov
lds
mov
fmul
sub
or
outs
shr
adc
mov
call
push
mov
sti
hlt
lods
iret
fist
in
out
(bad)
sbb
fldcw
movs
mov
or
jbe
sub
jge
lahf
cld
cmp
fistp
int3
mov
and
or
xchg
cs
movs
cli
imul
inc
in
(bad)
mov
pop
push
inc
daa
lds
sbb
pop
pop
jg
xor
pop
mov
mov
push
aas
cmps
xchg
shl
mov
jl
(bad)
push
mov
pushf
xor
jne
retf
in
dec
shl
dec
pop
gs
pop
leave
mov
jecxz
mov
ins
mov
aam
loop
sbb
fidiv
inc
pop
bound
ret
cmps
sub
mov
clc
loopne
sub
xchg
jne
in
add
push
adc
mov
cwde
rol
scas
mov
int
aam
mov
mov
enter
outs
or
mov
shl
out
xor
adc
js
das
mov
cwde
and
cmp
lahf
shl
lods
push
sub
adc
jae
adc
mov
pushf
mov
lds
cmp
mov
ror
popa
lds
fcmove
pop
into
push
cmp
add
stos
add
aam
mov
mov
(bad)
and
and
imul
cmp
sbb
mov
inc
sub
mov
ja
out
clc
aad
pop
pop
test
movs
movs
sub
xchg
sar
mov
adc
pop
ins
jle
cmc
xor
movs
not
in
and
shr
cwde
cmc
popf
ror
ss
pop
dec
popf
push
ins
mov
not
jb
xor
int
inc
lock
jo
cmp
int
sub
dec
out
mov
mov
ficom
outs
pop
adc
xchg
xor
mov
xchg
jl
xor
add
inc
pop
clc
cmp
xchg
or
xlat
mov
dec
xchg
ss
cmps
xor
fnstenv
sub
call
pop
dec
push
jp
cs
dec
movs
ins
sub
jb
inc
jmp
hlt
icebp
pop
xor
cmc
xchg
pop
mov
in
lahf
jmp
aad
sbb
or
jae
jae
xor
inc
retf
mov
shl
cmp
pop
sub
add
pmullw
pop
les
cs
dec
shl
xchg
sti
int3
leave
xchg
xchg
jb
inc
fcmove
sub
add
or
mov
shr
addr16
ins
data16
fistp
outs
jne
cs
xor
dec
add
sbb
int
push
fild
push
pop
test
icebp
xchg
fidiv
mov
not
lods
cwde
cmp
aad
jmp
in
es
repnz
pop
ins
and
icebp
push
dec
stos
dec
icebp
xlat
adc
and
cmps
sbb
pop
call
pusha
and
popf
cmps
adc
mov
cld
push
(bad)
int3
pop
adc
out
jno
mov
dec
in
mov
daa
pop
xchg
dec
rcr
sub
inc
and
add
(bad)
out
add
popa
outs
lods
test
(bad)
mov
out
mov
(bad)
aad
add
xor
mov
sbb
mul
dec
mov
mov
inc
xchg
in
mov
jmp
in
shl
outs
or
mov
jg
(bad)
fs
mov
cwde
jg
mov
arpl
pop
nop
inc
rcr
das
mov
es
out
imul
inc
test
dec
shr
pop
mov
adc
lods
dec
outs
add
sbb
push
pop
and
or
jp
sub
(bad)
movd
pop
scas
rcl
pop
ins
pop
xor
dec
and
xchg
aad
lock
aaa
add
push
and
or
mov
or
pop
dec
jmp
ds
mov
dec
pop
dec
add
and
call
or
std
sub
jo
sti
push
xchg
sbb
in
sar
(bad)
arpl
test
jge
test
sbb
dec
lea
xchg
jmp
shl
push
aam
mov
dec
loope
call
js
movs
(bad)
(bad)
push
push
mov
mov
add
out
(bad)
or
rol
jns
and
or
push
fs
jp
sub
sub
sub
(bad)
cmc
enter
stos
or
sub
movs
hlt
push
xor
push
adc
cmc
cmp
mov
jecxz
ror
dec
pop
fisub
mov
call
xchg
in
pop
pop
xor
adc
leave
fbld
inc
add
mov
mov
outs
or
sbb
(bad)
arpl
add
pop
retf
mov
adc
or
ret
jle
aas
pop
push
imul
or
fsubr
cdq
fnstsw
jbe
mov
or
mov
test
lods
and
add
add
int
(bad)
adc
retf
mov
popa
cdq
jmp
leave
mov
in
xor
jge
fld
xchg
jecxz
cmp
ds
or
xchg
mov
loop
add
jo
mov
andnps
shr
call
mov
add
or
shr
pusha
stos
xchg
bnd
or
jae
outs
sub
ins
daa
sbb
sbb
sbb
test
pop
jns
and
lods
leave
inc
sub
in
xchg
pop
dec
in
mov
fist
pop
cmp
xor
dec
dec
outs
adc
mov
sbb
sbb
jne
leave
jno
mov
gs
jle
cli
das
push
pop
iret
pop
pop
and
clc
mov
xor
and
mov
test
add
loope
pop
mov
adc
imul
push
outs
test
cmp
nop
mov
daa
neg
mov
rcl
idiv
loope
pop
popf
jo
rcr
push
lds
dec
ja
xor
cs
push
aam
sub
fsub
or
out
sti
pop
cwde
cmp
or
push
mov
mov
fmul
cmp
mov
(bad)
pushf
sub
and
sub
and
repz
xor
daa
in
pop
xor
pushf
sbb
neg
and
inc
je
daa
inc
fs
push
in
jae
jmp
sub
inc
adc
imul
mov
cli
cmps
xchg
jecxz
or
retf
in
mov
jnp
or
pop
mov
or
adc
retf
adc
aaa
mov
shl
stos
jge
cmp
stos
iret
gs
add
fwait
cmp
mov
lods
leave
and
xchg
mov
lahf
sbb
repz
cmp
movs
xor
inc
popa
push
cs
std
stc
cmps
inc
mov
test
jl
outs
cmc
(bad)
adc
sub
mov
rcl
jecxz
mov
xlat
lock
jo
int3
mov
add
xor
loopne
add
xchg
sbb
and
in
add
fidiv
mov
push
push
(bad)
cwde
dec
loop
or
popf
(bad)
push
test
and
push
test
ja
mov
pop
out
mov
stos
xor
scas
les
(bad)
lahf
sar
add
ja
xor
mov
loopne
push
mov
cld
sbb
shl
jb
adc
shl
(bad)
ins
jns
jae
dec
test
repz
rcr
out
rcl
stos
je
add
xor
daa
xor
mov
adc
pushf
(bad)
fist
cmps
les
jmp
scas
loop
fs
mov
jmp
outs
lahf
xor
loopne
imul
shl
jle
js
xlat
js
add
mov
xor
popa
push
or
pop
mov
add
mov
mov
leave
dec
cmps
or
pop
lods
int3
leave
pop
xor
dec
test
mov
or
jle
ret
data16
pop
sahf
jl
mov
xchg
push
ja
test
es
aaa
mov
sti
test
scas
fdivr
pop
mov
lods
ret
iret
or
lea
mov
mov
jecxz
fiadd
adc
sbb
into
inc
lahf
push
lock
stos
addr16
cwde
jmp
or
inc
jl
inc
ret
inc
test
mov
hlt
inc
xlat
popf
and
mov
sub
pop
sub
inc
pop
ret
scas
push
mov
lahf
stos
imul
push
outs
or
sbb
out
add
add
cli
xor
dec
mov
jl
sbb
(bad)
mov
retf
jbe
push
retf
xchg
bound
fdivr
jp
push
cmp
pusha
inc
pusha
lock
retf
hlt
adc
mov
mov
in
adc
out
test
jmp
lods
test
dec
xor
add
jmp
test
out
xchg
pop
cdq
ror
push
mov
or
mov
xor
cld
aaa
add
nop
out
clc
out
je
out
mov
mov
jbe
jmp
test
not
adc
push
loopne
or
jg
push
jp
push
not
and
imul
loop
fsubr
(bad)
cmp
shr
xor
push
cld
fcomp
sbb
mov
sbb
fcomp
test
cwde
mov
jmp
and
xchg
and
fisttp
jnp
inc
xchg
nop
stc
in
clc
inc
lods
cmp
and
aam
scas
test
push
cld
and
push
sub
sar
and
test
jns
add
inc
out
mov
movs
xchg
repz
cdq
push
jne
jle
popf
mov
jecxz
cmp
pop
call
mov
pop
mov
mov
nop
test
lods
xor
mov
cmp
stos
jnp
fldenv
retf
push
pop
mov
pop
std
sahf
shr
jnp
push
or
inc
or
pop
jge
cmp
ins
or
int
int
das
popf
jl
ja
and
and
or
add
sbb
outs
mov
scas
xor
xchg
inc
call
xor
(bad)
fadd
push
dec
int
adc
ret
push
sbb
push
lahf
clc
loop
push
dec
fldenv
inc
jnp
outs
dec
pop
aam
shl
sub
mov
movs
out
leave
aad
mov
dec
js
lods
pop
mov
retf
loop
ds
repnz
pop
adc
pushaw
or
popa
push
data16
cmp
(bad)
fadd
sbb
sbb
push
mov
mov
mov
inc
movs
hlt
xor
sub
int
pop
mov
scas
push
test
mov
xor
cwde
mov
push
xchg
out
popa
scas
aad
mov
clc
(bad)
std
dec
ja
imul
xchg
mov
pop
xchg
fsubp
rcr
xchg
jb
push
mov
shr
shr
xchg
pop
movs
mov
dec
fsubr
lahf
push
leave
mov
mov
push
mov
into
(bad)
cld
xchg
ror
je
mov
in
mov
pop
les
(bad)
stc
ror
add
shl
jmp
cs
mov
out
pop
inc
scas
push
xor
adc
or
call
mov
imul
dec
add
scas
paddw
mov
xchg
add
vandpd
pop
ret
stos
pop
sti
retf
loop
and
add
jle
sbb
mov
or
jge
dec
sub
call
in
dec
or
mov
dec
mov
cmp
inc
icebp
cli
xlat
shl
cmp
sbb
retf
dec
mov
adc
(bad)
jmp
mov
jae
mov
sbb
pusha
cmp
lods
and
fldcw
xor
outs
inc
xchg
mov
mov
icebp
dec
out
rol
lods
leave
and
pushf
and
fild
(bad)
add
pop
pcmpeqb
rcl
dec
sub
ss
cmp
jnp
mov
adc
mov
stos
jno
jb
jg
push
dec
sub
or
div
xor
icebp
jne
pusha
push
mov
clc
xor
mov
(bad)
call
sbb
push
push
es
mov
retf
sub
fnstenv
jp
(bad)
retf
add
push
fdivr
fld
loopne
jl
int
cwde
loopne
cmp
dec
repnz
or
jl
int3
pop
repz
iret
mov
stos
jb
mov
fwait
and
repnz
pop
aas
lea
rcr
aad
and
xor
cmp
ror
iret
leave
sbb
jb
adc
out
jmp
sbb
xor
pop
jmp
sub
fisubr
lds
fisubr
iret
nop
ret
mov
xchg
mov
aaa
leave
jge
push
fs
ret
fnstcw
push
adc
adc
sbb
pop
dec
or
addr16
popf
bound
(bad)
pushf
mov
jo
addr16
push
arpl
dec
rcl
std
cmp
out
mov
push
inc
aam
push
sbb
push
test
cmp
les
pop
pop
int
pusha
mov
jg
(bad)
inc
pop
popa
pusha
mov
mov
pop
and
and
cwde
jl
aad
jne
stos
push
fistp
xchg
jmp
mov
aas
(bad)
push
fisubr
and
dec
outs
(bad)
push
jo
neg
popa
sar
push
or
mov
ja
sbb
xchg
adc
xchg
(bad)
fs
jge
sub
cmps
adc
push
imul
call
js
xor
mov
repnz
xchg
pop
xchg
int
or
xor
or
mov
inc
sbb
scas
jne
xchg
(bad)
sti
pop
nop
jo
test
les
mov
mov
das
mov
fs
cmps
mov
jl
ds
mov
dec
cmc
add
adc
jnp
sub
or
pop
js
sahf
add
xor
scas
(bad)
adc
cmc
mov
stos
dec
push
pusha
ds
pop
test
lods
jge
add
jae
or
test
lea
mov
jae
sub
movs
cmp
xchg
repz
repnz
dec
add
xor
and
adc
out
or
mov
fiadd
mov
es
dec
nop
jbe
dec
cmp
dec
out
mov
mov
scas
cmp
mov
xchg
push
nop
cmp
sub
pop
repz
dec
add
or
nop
ss
mov
xchg
int
sar
out
jae
into
cmp
jne
sbb
(bad)
retf
std
sbb
pop
je
bsf
cmp
push
push
adc
xchg
mov
lods
add
add
rol
movs
lahf
jne
inc
nop
leave
xlat
dec
not
ja
pop
daa
push
lock
xchg
xor
push
inc
cs
mov
xchg
push
fiadd
jg
retf
nop
imul
rol
push
loopne
imul
lock
mov
pop
retf
xor
(bad)
jo
in
in
sub
sbb
mov
pop
xor
cmps
mov
add
dec
test
dec
in
nop
pop
daa
aad
cdq
ret
jb
in
gs
dec
popa
lods
and
shl
cmps
jmp
mov
lahf
inc
add
mov
sub
mov
bnd
push
and
xchg
pop
and
shr
xchg
jbe
cmp
aaa
xor
sub
mov
dec
hlt
cs
fdiv
adc
inc
cwde
retf
call
inc
xchg
cmp
test
add
jb
ds
sbb
and
adc
xor
add
cmp
push
stc
inc
ja
sbb
pushf
mov
cwde
mov
sbb
inc
pop
lods
cld
add
scas
xchg
or
jb
(bad)
jmp
cld
stc
jne
dec
movs
ins
das
or
xchg
sti
sahf
imul
and
xor
aad
repz
and
push
js
xor
in
(bad)
dec
out
jmp
ins
lahf
push
jl
bound
push
pop
jg
pop
loop
xor
das
add
jecxz
sbb
xchg
xor
jl
hlt
aam
test
(bad)
stos
push
clc
xchg
cmps
cmp
daa
mov
repnz
sbb
in
xor
or
dec
adc
out
and
jno
jnp
jmp
dec
push
repnz
ffree
dec
(bad)
lods
jo
pop
add
mov
das
das
xor
pop
sbb
fs
in
sub
pop
xor
aad
outs
and
out
xchg
mov
xchg
ins
ror
(bad)
(bad)
jmp
stc
fs
inc
ss
mov
fcom
mov
add
add
adc
jge
iret
popa
data16
xor
test
jl
sahf
sub
rcr
push
adc
mov
rol
jmp
(bad)
mov
ret
xlat
jae
mov
mul
mov
and
retf
mov
pushf
into
cmps
adc
and
outs
push
add
mov
popa
aas
adc
mov
cmp
mov
fld
pop
ins
xchg
ror
xchg
pop
xchg
pop
xor
xchg
mov
or
xchg
imul
retf
pop
mov
loope
icebp
ret
cmc
and
push
xchg
dec
sbb
div
in
(bad)
adc
scas
ror
pop
add
fnstsw
lock
sbb
pop
in
mov
pop
pusha
adc
aad
cmc
inc
or
xor
test
add
fld
aaa
in
pop
adc
outs
mov
push
inc
cmp
les
jge
ja
call
push
mov
jg
icebp
ja
fbstp
cmp
cld
xor
mov
(bad)
fnsave
jmp
repz
dec
xor
adc
retf
enter
lock
lock
mov
sub
int3
stc
mov
stos
cmp
push
mov
or
fcmovnbe
into
out
sar
outs
lds
aad
int3
imul
pop
pop
aaa
mov
mov
sar
cmps
push
ins
es
(bad)
push
pop
mov
jno
lahf
pop
mov
cmp
test
or
lds
sbb
scas
or
cmps
sub
outs
je
pop
nop
aad
jle
ret
xor
adc
test
push
xchg
inc
lods
movs
les
mov
movs
dec
xchg
cmp
lods
mov
inc
jl
jne
push
dec
push
out
inc
xchg
adc
add
popf
mov
mov
adc
cmp
es
(bad)
pop
xor
std
adc
in
xchg
sbb
sub
pop
cs
dec
retf
lock
push
push
jno
inc
int3
cmp
sti
stos
add
push
adc
mov
mov
in
cwde
push
xchg
mov
inc
clc
push
sbb
push
xchg
mov
xor
rcr
rcl
ret
imul
or
in
icebp
jecxz
mov
(bad)
aaa
cs
mov
int
cmp
xor
push
test
cmp
jge
sbb
std
jnp
inc
sub
xchg
pop
cdq
mov
popa
jnp
adc
or
mov
(bad)
popa
in
sub
ja
xchg
outs
fdivr
pop
push
add
pusha
sbb
dec
and
mov
sbb
retf
push
pop
pop
cmp
dec
sub
cmp
add
movs
inc
jnp
dec
sbb
test
leave
dec
mov
jb
cmp
add
push
push
push
or
push
cld
pop
push
add
jmp
push
ret
sub
pop
inc
mov
jo
inc
xchg
nop
rcl
xchg
cmp
push
xlat
or
or
pop
xchg
cmps
sbb
ror
in
dec
adc
add
dec
inc
mov
fmul
mov
dec
in
pushf
mov
push
jne
xchg
out
test
popf
xchg
sub
ds
fdivrp
ror
sub
xor
pop
enter
inc
je
shl
aaa
sub
push
push
pop
(bad)
lds
sbb
icebp
cli
cmp
ret
fwait
mov
sub
popa
scas
or
psubsw
mov
lea
or
or
push
jne
ins
push
test
sbb
loop
push
nop
mov
mov
sbb
push
add
mov
stos
inc
mov
sbb
imul
sbb
out
sub
stc
push
test
(bad)
in
mov
(bad)
mov
into
push
mov
ss
cmps
jbe
sub
scas
in
cmc
push
fadd
repz
retf
imul
les
out
mov
add
mov
enter
xlat
(bad)
aam
imul
mov
cli
push
sub
sbb
jbe
stos
xor
or
add
arpl
or
push
add
and
fmul
xor
cli
xchg
popf
nop
cmp
sub
cs
les
daa
or
stos
xor
jmp
xchg
frstpm(287
jo
pop
mov
into
gs
stos
repz
xchg
stos
cwde
mov
jl
and
cmps
(bad)
sub
add
arpl
or
das
cmp
pop
mov
pop
and
jbe
retf
dec
fild
(bad)
jne
icebp
(bad)
in
add
daa
fsub
jns
sahf
mov
jne
mov
xor
or
(bad)
scas
and
adc
or
dec
sub
xchg
sti
aas
mov
ror
popf
loopne
or
inc
fisubr
jp
movs
fcompp
jmp
imul
push
mov
or
mov
xor
jno
retf
addr16
icebp
dec
ss
and
pop
lahf
adc
test
fild
push
and
ins
and
inc
sub
push
stos
adc
add
xor
mov
neg
pop
repz
push
popa
lods
pop
(bad)
(bad)
jg
dec
jl
add
imul
sbb
inc
xchg
inc
shl
test
gs
pop
ins
sub
mov
(bad)
sbb
jg
xor
shl
adc
jle
jmp
inc
mov
jg
movs
test
ins
bound
(bad)
adc
cs
dec
dec
lea
cld
sub
sbb
pop
frstor
dec
aaa
mov
outs
xchg
out
xor
sbb
lea
ret
mov
jmp
pusha
adc
cmp
and
sbb
fadd
push
fnsave
out
ret
jns
inc
pop
jno
jae
stc
movs
xchg
xchg
mov
jno
pop
aas
pop
mov
sub
fnstcw
xchg
pop
call
cmps
pop
jge
push
jnp
pop
and
div
imul
sbb
cmps
pop
(bad)
imul
rol
mov
add
jb
cdq
ret
cmp
mov
loope
es
or
ins
out
or
js
mov
sti
aam
push
pop
loope
mov
dec
mov
adc
add
mov
xchg
pusha
pop
cwde
jns
adc
sahf
fstp
jge
sar
jno
add
sahf
gs
xchg
xabort
data16
add
idiv
retf
and
sbb
(bad)
push
jo
rcr
inc
ins
inc
push
or
adc
pop
jmp
cmps
nop
mov
xchg
xor
jmp
mov
cli
jb
inc
jle
clc
shr
mov
call
or
mov
in
sbb
out
sbb
xor
js
sbb
adc
(bad)
fidivr
test
mov
jecxz
(bad)
movs
mov
test
movs
push
aam
sahf
(bad)
daa
(bad)
and
dec
cmc
jecxz
dec
adc
jle
cmp
sbb
jmp
cmps
inc
fadd
mov
push
imul
test
mov
mov
test
add
aad
(bad)
into
adc
pop
xchg
xchg
mov
inc
jb
push
and
xor
addr16
jne
(bad)
jge
sbb
imul
cwde
xchg
aaa
pop
pop
out
sti
ss
loopne
js
stos
mov
sub
mov
nop
movs
ss
nop
cmp
sub
and
scas
pop
mov
pop
sub
adc
fwait
push
call
out
fistp
jecxz
fld
mov
mov
sbb
stos
cwde
popa
loop
(bad)
icebp
xor
inc
aam
or
xchg
adc
jne
xchg
adc
repz
mov
loop
xor
int3
mov
jno
or
sub
add
cmp
mov
pop
add
mov
icebp
sar
fs
jp
in
out
adc
pop
loop
xchg
lahf
das
hlt
imul
sbb
jne
xor
into
iret
jbe
xchg
push
inc
daa
stc
in
retf
mov
push
fistp
jp
call
imul
sub
mov
or
mov
shl
pop
inc
pop
adc
aad
inc
add
mov
fldcw
push
aad
icebp
pop
jmp
jno
int
pop
and
retf
cmp
jecxz
adc
rcr
xor
in
push
mov
inc
lds
enter
mov
jmp
mov
sub
sahf
and
cld
and
add
mov
test
sub
movs
mov
dec
out
(bad)
dec
lods
ror
mov
(bad)
fnstcw
jmp
je
mov
aam
sub
dec
jp
mov
in
xor
cmps
mov
and
adc
jmp
mov
push
sbb
movs
hlt
inc
(bad)
fld
out
cmc
mov
jnp
mov
bnd
xlat
(bad)
jl
cmp
fist
ret
mov
repnz
adc
loop
lahf
mov
or
movzx
popf
les
sub
mov
or
in
xor
popa
mov
push
or
mov
mov
mov
xor
adc
or
inc
ret
add
dec
addr16
popa
mov
adc
lahf
jno
fmul
fistp
push
and
scas
pop
jnp
jns
test
call
jb
push
mov
mov
jb
jp
add
lahf
jbe
test
pop
or
repnz
mov
jo
dec
mov
pusha
xchg
mov
test
and
xor
or
lods
xchg
fdivrp
inc
int
xchg
add
mov
adc
push
cld
push
test
sbb
mov
jge
stos
jb
sub
and
les
imul
mov
cmp
pop
pop
dec
fwait
dec
adc
and
in
ret
xchg
shl
cmps
jecxz
sahf
pop
outs
sub
js
icebp
mov
sbb
sar
or
es
xor
shr
sbb
xchg
dec
jne
movs
jle
jne
fs
sub
pop
inc
lahf
dec
pushf
retf
je
cmp
popf
lock
rol
lods
lea
mov
and
mov
mov
ss
sbb
pop
sub
pop
aad
and
mov
xchg
cmps
mov
loope
push
popf
(bad)
ins
lods
dec
cli
xchg
hlt
fucompp
ret
fst
(bad)
in
js
lock
pop
inc
out
inc
jbe
iret
into
rcr
fwait
push
lock
loop
in
or
dec
movs
dec
push
pushf
out
das
sub
mov
sbb
jecxz
jl
xchg
push
dec
addr16
and
popf
mov
mov
adc
jmp
and
mov
jnp
adc
icebp
call
inc
retf
sub
sbb
cld
mov
jle
outs
xor
sbb
lahf
shl
outs
fld
xor
jmp
neg
push
sub
neg
sub
jns
leave
or
xor
cmc
loope
ins
scas
cli
or
mov
jmp
add
xchg
in
mov
nop
lods
addr16
pop
imul
fidivr
gs
test
or
fwait
stos
retf
jmp
cmp
xchg
ss
cwde
push
bound
jg
lea
adc
sbb
pushf
rcl
out
mov
sbb
adc
mov
das
dec
stc
int
inc
ror
test
mov
js
std
pop
push
call
int3
daa
jbe
(bad)
push
adc
adc
cmp
and
xchg
mov
ss
add
pop
movlps
mov
out
sub
pop
addr16
mov
sbb
add
ds
popa
mov
addr16
not
bound
cmp
test
mov
push
or
lds
out
push
pop
xor
out
ret
and
xchg
xchg
sub
dec
scas
clc
(bad)
jne
sbb
jp
or
push
into
pop
lahf
xchg
or
in
pop
and
add
xor
cmp
push
dec
or
xor
jno
add
add
mov
fsubr
push
fs
jmp
hlt
push
adc
push
mov
jecxz
je
sub
scas
es
mov
je
push
add
std
sahf
mov
push
std
push
scas
test
and
(bad)
add
push
mov
pop
xchg
nop
stos
adc
dec
out
arpl
push
js
cld
test
out
call
dec
sub
iret
aaa
jb
add
jmp
cwde
jae
cmp
add
add
xor
aaa
ret
enter
je
mov
inc
or
add
xchg
movs
or
bound
shr
sbb
xchg
mov
mov
push
xor
pop
loopne
(bad)
inc
popf
(bad)
nop
scas
lods
in
fwait
aad
repz
iret
cmp
stos
cmps
in
push
pop
rcl
push
aas
cmc
int3
gs
popf
addr16
adc
xor
js
ss
pop
and
adc
pop
sbb
es
sub
inc
aaa
inc
arpl
mov
cwde
dec
sahf
adc
cmp
imul
ins
bnd
cmp
loope
push
jno
and
outs
xlat
fucomp
xor
xchg
mov
test
dec
sbb
jo
xchg
iret
xlat
(bad)
mov
int3
mov
mov
sub
push
xlat
adc
int
jmp
jno
lahf
outs
sbb
loop
add
jmp
sbb
rcl
retf
fcmovnbe
in
(bad)
pop
xchg
mov
dec
push
dec
lods
sub
call
mov
movs
pop
push
inc
jmp
mov
(bad)
jbe
cmp
mov
in
cmp
test
and
pop
test
aad
fdiv
cld
sub
jns
jns
retf
adc
imul
in
ret
sbb
and
aaa
es
or
mov
ret
adc
jnp
(bad)
pop
pop
adc
outs
pop
push
rcl
inc
inc
mov
mov
(bad)
stc
std
push
cmps
adc
out
fwait
loop
dec
bound
loop
cdq
inc
mov
and
cmp
mov
imul
cld
mov
pop
jns
inc
jno
cmps
in
int3
loope
movs
xchg
cwde
sahf
hlt
and
jl
jne
ins
repz
dec
adc
repz
sub
dec
loopne
push
ret
repz
inc
es
cs
mov
jmp
sub
push
ret
fwait
test
jne
push
sub
sar
add
es
pop
mov
mov
or
push
sahf
bound
lods
cmps
jecxz
sbb
test
add
lahf
fist
xor
and
sub
pop
js
shr
and
jo
xchg
sub
ds
popf
mov
daa
repz
lahf
jecxz
add
call
sub
sbb
(bad)
jecxz
adc
sub
xchg
dec
xchg
mov
(bad)
scas
pop
cmp
jne
fild
xchg
mov
(bad)
fld
adc
imul
cmc
sbb
stos
fwait
ss
or
xchg
mov
(bad)
cmp
fadd
dec
into
cmp
scas
jne
xor
fidiv
dec
mov
rol
test
sub
in
movs
or
scas
ret
imul
sbb
loope
sub
out
pop
ja
aam
(bad)
out
add
mov
xchg
iret
fs
and
jae
mov
or
mov
sbb
mov
adc
jnp
movs
xor
cmp
mov
dec
pop
mov
outs
enter
xor
mov
ss
fisubr
jmp
lock
jge
mov
adc
push
add
ss
or
xchg
cmp
pop
xor
retf
fist
outs
xor
pusha
jle
push
sahf
cmps
add
xchg
ins
daa
in
(bad)
dec
sbb
mov
sbb
imul
sub
es
jne
retf
add
mov
push
sti
loopne
xor
xchg
xor
ds
jp
test
in
rol
mov
frstor
aas
mov
sub
xlat
sub
push
mov
mov
mov
jnp
fsub
or
in
dec
into
in
(bad)
les
mov
(bad)
imul
aaa
fstp
inc
out
push
out
sub
repz
inc
jo
mov
or
not
fild
ins
inc
fst
retf
outs
push
and
mov
out
test
nop
mov
into
jbe
mov
add
repz
and
pop
xchg
push
cmp
jmp
call
(bad)
pop
sar
mov
dec
scas
ror
cmp
pop
cdq
das
pop
pop
test
or
lds
cmp
movs
dec
(bad)
inc
inc
aam
cmp
fisttp
mov
jno
aas
dec
sub
mov
mov
stos
sub
pushf
cmp
je
or
jns
push
inc
call
jb
jecxz
xchg
adc
xor
or
inc
(bad)
rcr
fistp
fdivr
add
adc
cdq
or
mov
add
(bad)
cmp
arpl
cmc
icebp
cdq
jne
pop
ror
jae
(bad)
cmp
out
jno
push
daa
retf
adc
mov
and
inc
pop
outs
jmp
in
xor
arpl
frndint
pop
dec
and
add
mov
mov
or
(bad)
mov
je
(bad)
xor
or
dec
jmp
(bad)
mov
mov
cli
cli
xchg
jge
lds
and
xchg
ins
push
lea
add
sbb
jp
inc
pop
sub
lods
in
sbb
in
inc
call
mov
out
and
lods
test
adc
dec
mov
sar
jge
ret
cmp
out
jg
retf
xchg
test
add
in
jmp
lock
psraw
jg
rol
and
and
push
daa
or
push
xlat
fild
jmp
test
repnz
fisubr
mov
pop
jno
stc
xchg
push
xchg
push
push
adc
mov
dec
cld
ror
arpl
jg
inc
loop
mov
xor
xor
ret
adc
mov
clc
icebp
ins
pop
adc
test
jmp
push
push
loopne
xchg
in
addr16
lds
in
push
inc
mov
es
mov
cs
jmp
adc
movs
dec
ror
ja
xlat
cmps
aam
or
fmulp
dec
mov
add
and
ins
mov
and
jge
cld
scas
jmp
pop
pop
jbe
pop
inc
scas
push
jge
das
and
cmp
outs
sahf
test
jnp
mov
dec
outs
shl
sbb
adc
xchg
imul
in
inc
push
cmp
inc
push
cmp
push
cmp
mov
pop
sti
pop
mov
das
iret
xor
inc
jne
ret
mov
cs
dec
outs
daa
inc
mov
dec
in
and
xchg
test
xchg
mov
add
dec
xor
ret
xor
xor
add
pop
xor
popf
pop
push
(bad)
jle
in
pop
cwde
shl
jmp
je
imul
dec
shl
adc
and
lock
in
(bad)
dec
ins
mov
jae
xor
(bad)
mov
pop
or
pop
fwait
repnz
gs
push
cli
add
mov
in
frstor
inc
out
or
inc
ins
adc
pop
(bad)
fs
push
or
push
ins
adc
pop
jl
cld
nop
shl
sub
and
jnp
bound
fdivr
xchg
sub
pusha
in
push
(bad)
movs
mov
lods
test
xchg
sahf
lods
cmp
or
adc
jge
cmp
mov
(bad)
xchg
cmovl
xor
je
cmp
cmp
psubw
dec
dec
mov
retf
sub
add
cmp
fimul
loop
cmp
xchg
xchg
sbb
inc
mov
inc
or
(bad)
cmp
ins
(bad)
push
addr16
jmp
xor
pop
mov
inc
cmps
mov
mov
sbb
add
test
icebp
inc
aas
sub
mov
push
vpsubw
sub
shr
repz
or
lock
movs
aad
xchg
push
push
jmp
sbb
jl
xchg
ins
add
jg
xor
jne
pop
inc
jns
(bad)
scas
in
jl
or
cmc
rep
inc
or
fist
lea
shr
lods
xlat
xchg
sub
cmp
jns
jl
fcmovne
neg
sub
pop
sbb
imul
dec
mov
or
mov
fdivr
push
jmp
add
js
inc
arpl
push
lds
cmp
fst
les
aas
and
call
adc
xor
or
pop
mov
mov
mov
test
inc
fwait
pop
inc
mov
adc
into
mov
jno
jnp
test
dec
sub
retf
cmps
inc
push
xlat
sub
out
cld
in
push
(bad)
stos
jle
retf
adc
nop
dec
push
ror
test
pop
aaa
(bad)
bound
(bad)
pop
push
pop
cmp
jo
or
dec
mov
jb
and
mov
test
add
mov
push
jno
leave
add
popa
mov
fld
cmps
ret
aad
xlat
out
sbb
dec
push
arpl
inc
lock
movs
ins
outs
xchg
sar
inc
and
call
add
lods
sbb
fidivr
sub
mov
push
or
pusha
jmp
repnz
or
dec
icebp
lahf
arpl
clc
cmp
cmps
(bad)
fwait
ja
lahf
sub
add
call
mov
pop
jae
cmp
xchg
push
push
fcomp
sbb
push
xchg
cdq
pushf
and
push
or
dec
sbb
push
fnstsw
fcomip
in
sbb
and
xor
inc
mov
cmc
enter
inc
(bad)
imul
in
cmp
cmc
fmul
movs
fs
repnz
cmp
xchg
mov
jnp
or
ret
adc
sbb
scas
test
push
sub
mov
movs
push
sub
fidivr
and
sbb
xor
(bad)
jmp
xor
ret
inc
jnp
cwde
outs
mov
(bad)
push
fwait
in
scas
mov
xor
add
ds
and
dec
xlat
mov
xchg
in
call
jb
xchg
mov
out
sub
pop
xor
xchg
cmp
scas
inc
pop
call
mov
and
mov
fsubrp
call
jb
sub
lods
aaa
out
cwde
mov
in
fsub
cwde
xor
pop
pop
xchg
bound
or
aam
out
xor
lds
test
es
xor
pop
test
scas
fisttp
fst
add
jp
jp
daa
push
jne
xor
dec
outs
cmps
cli
mov
mov
xor
icebp
test
ret
xor
cmp
push
inc
shl
mov
sbb
fdiv
or
and
loop
cmp
rcl
fdivr
or
adc
inc
push
pop
inc
fbstp
sbb
or
and
sub
hlt
push
sub
(bad)
adc
jnp
loope
lods
or
sub
xchg
inc
das
icebp
loop
xchg
ja
mov
dec
cmps
jno
push
xor
in
jmp
mov
adc
gs
scas
mov
or
cdq
lods
add
leave
push
(bad)
aam
mov
ret
data16
mov
mov
loope
loop
sub
mov
xor
jmp
adc
push
sbb
dec
fwait
jne
into
mov
fdivr
adc
popf
aaa
xchg
push
aam
arpl
sub
sub
dec
loope
or
loopne
inc
push
cld
std
(bad)
into
sub
mov
xchg
pop
add
pop
daa
ins
cmp
add
sbb
sbb
xor
fadd
add
push
mov
int3
ss
inc
jecxz
hlt
shl
je
je
popw
int
in
inc
jg
push
cmp
dec
ins
push
mov
ins
sub
jo
push
imul
outs
ins
fist
mov
push
or
mov
in
shr
cmc
imul
data16
test
push
mov
imul
jge
sub
and
cmps
loopne
adc
jle
dec
std
cmps
sbb
mov
xor
jmp
dec
dec
out
mov
cmps
push
(bad)
or
pop
add
mov
jle
test
fistp
jmp
jb
or
in
clc
add
test
out
ja
dec
out
xchg
lahf
xchg
push
test
cs
outs
dec
fimul
test
push
sbb
jo
stos
rol
jmp
scas
pop
es
rol
cmc
test
xchg
and
dec
cmp
imul
sub
jbe
and
or
jbe
out
or
imul
cmp
daa
loopne
fsub
dec
add
sub
clc
xor
rol
push
push
into
mov
xor
cmps
loopne
mov
add
push
push
fisttp
repz
aas
sbb
mov
mov
add
loope
mov
inc
or
jo
add
jmp
(bad)
push
adc
mov
jae
std
xchg
mov
jne
xchg
fdiv
xlat
inc
clc
iret
and
out
sub
popf
sub
out
push
cmp
ficomp
add
test
ret
test
(bad)
std
mov
addr16
or
or
out
outs
mov
jp
lahf
test
daa
mov
arpl
adc
ss
je
cld
jmp
dec
clc
bound
out
jl
dec
lock
xchg
add
mov
out
mov
mov
jmp
fist
xor
movs
and
enter
add
daa
aas
dec
cmp
cmp
sub
adc
dec
add
inc
xchg
push
push
mov
call
jge
out
inc
xchg
jl
jmp
(bad)
mov
jp
loope
jmp
cmps
pop
push
cmp
adc
mov
gs
mov
call
(bad)
out
fidivr
test
sahf
fcmovnb
fldl2e
les
jle
push
repnz
cmc
retf
iret
outs
xchg
jne
and
add
fs
mov
js
mov
jno
sub
rol
lea
sbb
mov
fidivr
cs
aad
leave
xchg
xchg
inc
mov
lods
mov
cmp
inc
mov
inc
ret
jge
sub
shl
xchg
stos
popf
xor
ja
ins
sahf
mov
retf
movs
adc
nop
xchg
(bad)
popa
mov
out
xchg
mov
shr
fldenv
fs
cdq
add
jle
int
jp
xlat
test
pushf
ins
out
ds
arpl
mov
jle
push
mov
or
jge
xor
mov
int3
loope
mov
scas
xchg
fcom
test
sbb
add
call
jmp
jo
fadd
stc
dec
ret
cmp
sbb
or
push
in
outs
cmc
adc
test
call
jo
jo
sbb
int
push
or
sub
xchg
or
dec
pop
mov
test
mov
inc
pop
jge
les
in
repz
jge
ds
stc
adc
out
mov
fst
pop
jno
or
mov
fisttp
repz
mov
(bad)
jmp
or
pcmpeqw
pushf
or
dec
scas
addr16
es
xchg
add
xlat
xor
es
cmps
cmp
sub
mov
push
push
xor
push
pusha
xor
jne
mov
add
pop
leave
in
outs
jb
cwde
mov
test
and
cmc
or
scas
test
jle
adc
lahf
(bad)
enter
sub
dec
sub
xchg
mov
lods
and
or
sbb
cs
cmp
sub
or
mov
sar
fdivr
leave
dec
pmulhuw
and
inc
cwde
lahf
enter
outs
(bad)
cmp
out
mov
in
test
nop
fbld
xor
shl
pop
or
xchg
cmc
fcom
aaa
add
push
mov
sar
and
retf
cmps
mov
push
std
sbb
jno
lahf
and
aam
or
call
mov
in
sti
jmp
cwde
cmps
cmps
test
in
aam
mov
sbb
pushf
sbb
xchg
mov
out
adc
stos
xchg
lahf
test
push
xor
sbb
movs
mov
push
repnz
icebp
xor
xlat
call
push
cdq
inc
rcl
add
retf
adc
cmps
cmps
fs
adc
in
iret
in
retf
arpl
or
push
or
imul
dec
xchg
xchg
adc
fcomp
and
outs
add
sbb
add
mov
sub
(bad)
adc
imul
add
adc
and
jmp
mov
fsubrp
out
(bad)
out
xor
clc
scas
frstor
repz
jae
ja
es
inc
xor
add
jmp
sub
dec
jo
dec
ins
dec
pop
xlat
xchg
mov
pushf
adc
stc
je
push
dec
jle
ins
and
push
mov
inc
dec
sti
push
mov
mov
cmps
outs
out
xchg
inc
sub
stos
add
inc
mov
inc
retf
icebp
cmovp
or
dec
addr16
add
pop
(bad)
mov
dec
mov
imul
lahf
int3
inc
xchg
mov
clc
pop
cmc
ret
das
das
cld
in
adc
push
add
sbb
in
stos
mov
jecxz
lods
ret
call
and
jle
push
hlt
mov
clc
outs
outs
or
sbb
and
sub
push
or
outs
inc
leave
inc
and
inc
sbb
dec
or
mov
push
lea
or
cmp
push
xchg
rcl
mov
push
popf
call
sar
cmc
and
frstor
pop
mov
sbb
sbb
ins
mov
adc
sbb
jne
jge
mov
ret
iret
push
lock
lea
retf
movs
retf
(bad)
cmps
pop
add
xchg
scas
in
cli
push
out
sbb
data16
pop
cmp
mov
push
leave
and
mov
sub
cmp
mov
mov
mov
fs
mov
pop
in
(bad)
adc
jl
mov
mov
lock
mov
fisub
xchg
sub
in
pop
and
or
sub
jmp
lock
sti
push
repnz
sbb
sbb
jmp
jno
imul
add
(bad)
test
iret
sub
imul
push
mov
lea
sub
pop
loopne
arpl
jb
xchg
pop
xor
sub
fld
(bad)
js
and
cdq
add
stos
(bad)
jge
cmc
lahf
ficomp
push
mov
adc
js
popa
jmp
sub
aad
psllw
into
imul
adc
sti
adc
or
leave
mov
cmps
sbb
std
(bad)
xchg
stos
movs
(bad)
jp
xchg
aas
mov
scas
fbld
xor
add
mov
push
sub
call
cmp
and
push
cmp
scas
sub
mov
lds
xor
jle
jo
popa
data16
and
in
jmp
fwait
(bad)
cli
fcom
dec
out
mov
loopne
push
loopne
mov
xor
push
xchg
xchg
mov
shr
cmp
push
inc
xchg
pop
mov
jecxz
push
cld
test
or
xchg
sbb
leave
les
clc
dec
(bad)
dec
ds
in
jle
sbb
xchg
and
jbe
lods
sti
xor
pusha
test
xchg
sti
retf
sbb
ins
inc
iret
sbb
ret
xor
xchg
ds
mov
call
je
pop
aam
push
jge
out
retf
(bad)
test
cmp
stos
lods
call
clc
jmp
adc
arpl
cmps
sar
pop
(bad)
jmp
pop
cdq
push
jg
retf
cmc
inc
mov
sbb
adc
push
fidiv
es
ins
xchg
data16
push
fsubrp
dec
sbb
mov
cmp
dec
into
inc
xchg
outs
add
ret
cli
(bad)
mov
mov
stc
lahf
mov
mov
dec
sub
idiv
ins
and
mov
mov
fist
cmp
mov
adc
mov
pop
mov
int3
push
lods
or
push
aas
mov
jle
bound
js
pop
mov
jns
into
hlt
mov
xchg
adc
aam
stos
or
repnz
pop
mov
ins
fwait
loope
mov
pop
jns
xchg
xor
mov
or
adc
inc
sbb
addr16
push
cmp
mov
mov
pop
stos
inc
sub
int
rcr
xlat
jmp
into
dec
and
test
jb
sbb
add
sar
cmps
cmp
test
dec
xchg
pop
shr
addr16
sbb
adc
jbe
adc
adc
subps
lods
mov
stos
lods
jg
sub
add
jbe
shr
xchg
pop
aad
pop
push
adc
jmp
or
mov
jecxz
and
mov
jmp
lods
mov
pop
adc
imul
iret
adc
xor
ret
js
add
iret
jmp
mov
rcr
stc
ret
call
push
dec
mov
add
test
in
mov
pushf
cmp
sbb
cmp
jbe
push
aam
mov
ds
(bad)
and
and
hlt
loope
inc
jnp
jp
fst
icebp
push
(bad)
jg
xor
in
xchg
push
add
lahf
jne
(bad)
mov
rol
pushf
or
dec
mov
jp
mov
test
mov
fdiv
ss
lods
sub
dec
lock
xchg
test
and
into
(bad)
aam
fcmovb
or
aas
nop
dec
call
sbb
mov
sti
pop
xchg
jnp
enter
inc
push
test
push
xor
scas
in
mov
sbb
lahf
mov
es
clc
or
mov
mov
call
adc
pop
pmulhw
push
mov
gs
imul
cmp
scas
mov
cwde
mov
sub
stc
into
imul
scas
(bad)
sbb
bound
mov
ret
movs
std
(bad)
push
add
test
mov
inc
cmp
(bad)
push
ins
out
ss
mov
jno
cmp
sbb
cli
cli
rcr
fisubr
(bad)
fnsave
aad
ret
or
lock
mov
add
(bad)
ror
jae
sbb
cmp
mov
mov
aam
cs
imul
inc
sub
sub
mov
cmp
sub
shl
cdq
inc
push
jecxz
pop
out
mov
sbb
inc
push
mov
(bad)
int
dec
sbb
fstp
xchg
inc
jbe
jge
xchg
ins
ds
cmp
icebp
popf
jl
jns
jmp
ins
std
xor
jne
into
call
and
add
jmp
retf
adc
out
mov
sti
scas
push
sub
add
mov
clc
inc
loopne
mov
or
ins
pop
xchg
hlt
xor
xor
dec
inc
shl
jne
fisub
jno
mov
sbb
stos
and
xor
daa
cwde
add
arpl
arpl
inc
in
push
fldcw
and
jns
mov
mov
loop
test
(bad)
adc
pop
in
sbb
pop
add
ret
js
mov
xchg
sub
dec
add
jb
cmp
cs
pop
in
je
xchg
rol
sbb
jecxz
or
hlt
das
popf
into
retf
fs
fimul
dec
aad
push
and
mov
fdiv
ror
mov
cwde
cli
mov
dec
aaa
(bad)
mov
in
mov
mov
jecxz
jb
pop
test
sbb
add
mov
js
leave
jmp
xor
scas
sbb
pop
add
loop
mov
xlat
stos
push
jg
lahf
ret
pop
inc
sbb
inc
mov
mov
sub
pusha
shl
jg
cmp
in
lock
pushf
out
mov
and
in
prefetch
or
inc
lea
int
sbb
fwait
bound
mov
test
or
out
dec
bound
sbb
or
retf
lods
fisubr
mov
adc
xor
sar
shl
arpl
push
fstp
int
imul
aad
mov
cmp
jp
mov
clc
das
cmps
inc
inc
rcr
test
push
dec
(bad)
and
enter
pusha
daa
mov
push
jbe
ss
mov
out
dec
push
sbb
inc
push
sbb
mov
mov
repnz
xchg
shr
cdq
arpl
pop
int
iret
call
jb
pop
test
xchg
inc
ret
sub
adc
mov
add
call
xor
fnstsw
xor
jmp
mov
loop
pushf
sub
mov
push
xchg
mov
pop
retf
aaa
sbb
dec
xor
fs
into
adc
add
mov
das
shl
mov
mov
and
mov
cmp
test
mov
pop
sbb
jmp
add
rcl
out
pop
jge
(bad)
mov
pop
(bad)
call
into
mov
mov
dec
inc
in
xchg
bswap
jne
mov
jle
iret
adc
mov
cmp
rcr
dec
xchg
aad
or
mov
in
and
ret
(bad)
lods
xchg
xchg
mov
cwde
mov
popf
pop
xchg
ds
aaa
sub
mov
movs
cdq
sbb
push
cmp
mov
pop
and
push
sbb
add
sub
in
lds
xor
mov
dec
add
dec
(bad)
ret
(bad)
gs
mov
scas
nop
lahf
mov
cld
sti
enter
clc
mov
out
daa
inc
add
pop
sub
mov
test
clc
imul
dec
sub
mov
data16
fcom
dec
adc
add
push
or
xor
jne
ins
out
hlt
jb
xor
jnp
jno
cmp
(bad)
loopne
dec
je
(bad)
mov
lock
out
mov
adc
xor
nop
sahf
sbb
in
data16
adc
fwait
add
rcr
xchg
add
mov
and
data16
mov
cmp
ja
mov
not
sbb
loope
or
dec
aad
out
cmp
movs
push
push
and
into
out
mov
test
add
pushf
sti
jle
pop
jnp
das
dec
iret
ret
jl
add
stos
call
pop
inc
xor
les
dec
mov
(bad)
daa
xchg
sbb
xor
(bad)
neg
nop
sti
xchg
and
clc
jb
retf
aam
(bad)
loop
xor
xor
xlat
call
pop
data16
cmp
and
cmp
pop
push
pop
sbb
int
ins
pop
(bad)
(bad)
pop
push
mov
lea
dec
cmc
int3
or
push
adc
(bad)
sub
out
bound
arpl
jnp
jnp
jmp
push
into
and
mov
sub
add
cld
sbb
jnp
adc
cmp
lods
jnp
push
xchg
mov
call
sub
and
arpl
clc
sahf
push
loopne
mov
sbb
sbb
xor
lea
push
sub
sub
in
push
repz
mov
pop
add
or
in
es
pop
cmps
and
add
dec
and
or
xor
movs
push
mov
int3
jp
push
inc
xor
mov
pop
jne
fldcw
mov
xchg
mov
mov
pop
outs
pop
test
hlt
imul
jae
stc
dec
retf
(bad)
xor
and
aad
ins
xor
jle
shl
xlat
cmps
(bad)
ins
fild
es
push
sbb
rol
inc
inc
xor
int
pop
imul
mov
loopne
pop
pushf
(bad)
cmp
mov
aad
ins
mov
xchg
out
mov
je
and
and
into
inc
or
(bad)
call
loopne
mov
pop
mov
pop
cs
dec
int
mov
sbb
fidivr
jmp
shr
das
stc
inc
mov
retf
stos
neg
xor
out
dec
mov
in
xchg
push
jns
int3
adc
push
mov
mov
or
dec
dec
pop
cli
ins
mov
sbb
leave
cmp
sbb
rcr
fbstp
movs
js
mov
and
adc
add
das
sbb
mov
mov
pop
mov
push
(bad)
mov
mov
std
pop
fwait
or
and
movs
mov
pop
test
sbb
sbb
push
jge
jns
cmp
xor
call
or
cmp
stos
pop
or
sub
mov
pop
jbe
pop
out
push
mov
inc
scas
test
sub
xchg
inc
imul
scas
clc
mov
inc
femms
pop
movs
mov
cmp
call
mov
xor
test
jge
or
and
jge
retf
jge
xchg
cmp
jnp
ins
ds
stc
xchg
cmc
retf
mov
les
mov
dec
imul
mov
call
fldpi
cli
push
push
mov
dec
adc
(bad)
mov
add
inc
push
int
add
enter
out
mov
push
and
mov
mov
ret
mov
adc
mov
cmp
xchg
sub
xlat
dec
mov
pop
fdivrp
retf
mov
jae
push
pusha
pop
dec
ja
frstor
mov
popa
stos
test
cmp
outs
jo
cmp
mov
loop
and
dec
(bad)
fmul
push
sar
cmp
mov
call
out
push
mov
retf
jmp
ret
test
ficom
clc
xor
cwde
dec
xchg
stos
mov
leave
fdivr
jb
icebp
inc
ins
(bad)
dec
push
jae
ds
arpl
lods
test
dec
outs
movs
in
cmps
iret
jmp
inc
popa
or
cs
test
jnp
cmps
mov
mov
test
ins
cld
push
mov
sub
cmp
mov
ficom
das
mov
cmp
adc
xor
test
ror
call
mov
in
in
retf
sbb
xor
pop
shl
nop
xchg
fs
push
cmp
fwait
arpl
enter
out
icebp
iret
lods
fstp
shl
cmp
pop
sti
mov
pusha
mov
and
sub
out
das
jmp
dec
das
adc
aam
retf
xor
inc
sar
sar
fs
test
les
jns
dec
gs
aaa
xor
call
mov
push
fldcw
jmp
pop
lea
cmp
outs
(bad)
add
test
mov
pop
add
sub
mov
repz
cld
jmp
or
mov
test
jo
aaa
add
dec
call
jp
cli
es
pushw
or
cmc
mov
cmps
xchg
test
mov
inc
mov
int3
push
mov
or
xchg
rcr
stc
pop
jle
jp
fnstenv
push
add
mov
push
sub
and
inc
add
and
inc
mov
inc
in
mov
scas
xor
fcomp
fisubr
or
pop
xchg
mov
add
imul
call
adc
aas
sbb
jbe
pop
mov
call
outs
pop
int
cmp
dec
aad
pop
out
xchg
and
push
xchg
call
arpl
mov
cmps
xor
sahf
mov
sub
add
jle
fs
in
test
push
je
jns
lock
ffree
cmps
in
xchg
rcl
dec
pusha
aam
or
in
mov
es
sub
rcl
mov
cmp
push
out
mov
or
(bad)
cli
jbe
dec
mov
pop
sub
jle
mov
fsubr
add
js
pmullw
out
stos
jnp
in
inc
sahf
test
mov
cs
sub
adc
jecxz
test
out
fmul
popf
in
lods
neg
pop
fcomp
xchg
pop
push
les
xchg
or
data16
xchg
push
bound
sbb
or
bound
call
icebp
repnz
jle
frstor
mov
dec
or
call
mov
push
xchg
inc
dec
sbb
jns
into
add
sub
cli
cmp
sub
cmp
inc
xor
inc
pop
sub
cli
les
dec
or
mov
mov
push
jg
retf
call
popf
and
mov
loope
push
push
xchg
mov
leave
ss
mov
xchg
xor
jecxz
pop
xor
mov
and
ins
push
aaa
(bad)
sbb
adc
inc
cmps
int
or
xor
push
mov
fimul
or
test
add
loopne
repz
and
cdq
aaa
xchg
xchg
inc
cmp
sar
push
test
pop
aam
fst
mov
jmp
pop
or
popf
jp
xchg
aam
outs
fnstsw
loope
sbb
xor
mov
jae
inc
test
adc
and
push
sub
push
xchg
aad
fsub
and
xor
pop
mov
das
pop
call
cmps
cld
and
popf
nop
sbb
mov
data16
cmp
sub
(bad)
lods
inc
dec
jge
push
imul
lods
sti
jge
xadd
pop
popa
lds
or
xor
mov
enter
sub
(bad)
mov
lods
loopne
pop
call
test
stc
not
xchg
fistp
out
pop
mov
retf
sbb
jmp
mov
stos
dec
jnp
test
call
xor
movs
sub
popf
neg
shl
ins
ret
inc
cld
jge
popf
sar
mov
mov
aam
fsubr
idiv
xchg
jmp
mov
test
stos
movs
mov
add
ficomp
or
(bad)
push
popf
cmp
mov
sub
mov
cmp
or
and
cmps
cmc
add
jp
test
fisub
xor
dec
adc
or
imul
sub
sub
push
cmp
test
sub
inc
or
sbb
cli
sbb
repnz
dec
fmul
movs
mov
xor
jp
and
leave
(bad)
sbb
dec
sub
idiv
stos
clc
fcomp
xchg
lods
adc
xchg
inc
fbstp
out
push
repz
test
dec
mov
push
lahf
xor
xor
imul
sub
cli
sub
outs
mov
mov
in
cld
scas
push
xchg
xor
retf
add
fmul
in
imul
xchg
ds
cs
inc
push
jecxz
pop
and
aas
cmps
mov
inc
popa
pop
or
add
sbb
adc
mov
mov
or
js
test
mov
retf
mov
add
out
add
or
movs
mov
movs
aad
retf
xor
jle
hlt
and
sbb
adc
lahf
stc
jno
xchg
sar
mov
jb
xchg
dec
sub
push
nop
jmpw
or
sub
sbb
test
mov
xchg
pop
shr
bound
sub
jne
ja
in
out
jne
xchg
je
jo
mov
pop
mov
xor
push
int3
ja
sub
outs
pop
dec
(bad)
xchg
gs
test
mov
xor
sub
mov
sub
repnz
add
xchg
jo
add
jbe
jmp
inc
mov
mov
movs
dec
ficom
jnp
or
mov
inc
js
cmp
icebp
rcl
js
arpl
pop
in
(bad)
out
pop
jge
and
xchg
push
and
adc
ror
rcl
add
stos
in
fs
gs
and
not
xchg
mov
pop
(bad)
pop
jmp
ins
push
fcomp
rcl
imul
mov
sub
pop
pop
clc
mov
inc
hlt
in
icebp
pop
int3
test
call
adc
retf
leave
sar
ret
sub
sbb
cli
jbe
push
add
scas
add
daa
xor
outs
and
mov
imul
add
idiv
repnz
sbb
inc
push
stos
pop
fiadd
cmps
sbb
pop
dec
(bad)
sti
int
out
out
ret
ins
mov
test
mov
xor
xor
jl
mov
pop
mov
mov
mov
or
nop
stos
(bad)
imul
lods
(bad)
bound
test
in
push
sub
cli
aad
lds
(bad)
and
push
in
int3
out
mov
cmp
(bad)
mul
lods
bound
jmp
or
pusha
pop
call
data16
mov
or
jns
add
ret
add
cdq
aad
mov
stos
cmp
mov
repz
int3
jle
shl
sbb
push
(bad)
and
cmp
jae
inc
pop
sub
imul
and
mov
mov
mov
pop
cmp
ss
cmps
rcr
pop
int3
push
dec
ror
cmp
sahf
hlt
adc
add
mov
cs
jecxz
jge
or
inc
jge
mov
mov
jne
sbb
push
mov
mov
js
rcr
mov
push
jnp
stc
test
adc
outs
fcmovnbe
push
shl
pop
dec
jmp
sbb
push
jle
stc
dec
imul
jecxz
outs
pop
mov
xor
xchg
ins
mov
jmp
bound
out
add
div
int
sub
dec
or
mov
push
daa
shl
(bad)
and
repz
xchg
cmc
lock
data16
push
mov
dec
and
push
shl
and
xlat
xchg
add
ss
out
pop
xchg
sub
(bad)
in
test
scas
jecxz
mov
in
psllw
xchg
mul
shl
jecxz
and
mov
les
repnz
aaa
push
stc
push
mov
mov
outs
xor
fwait
cdq
xrelease
stc
dec
scas
xchg
cmp
dec
cmp
or
sub
cwde
cs
xor
and
pop
test
repz
imul
pop
mov
fdivp
and
out
mov
jp
enter
inc
cwde
xchg
(bad)
jp
push
fisttp
fwait
scas
cmp
cwde
mov
cmp
sub
pusha
pop
cwde
std
mov
in
adc
inc
nop
xchg
ret
shl
aad
adc
jae
mov
ror
dec
inc
addr16
(bad)
mov
jle
xor
jp
adc
into
ds
inc
jae
popf
inc
sub
cmp
lock
ret
test
test
jmp
repnz
cmps
pop
pop
and
sahf
jecxz
movs
in
dec
into
push
add
lock
inc
test
(bad)
out
pop
add
outs
pop
push
cmps
into
hlt
je
sti
fnstenv
jo
repnz
jg
pop
das
es
test
mov
lods
sub
mov
mov
mov
jmp
push
jno
xchg
jg
mov
push
sti
push
and
cli
mov
xor
stc
int
inc
imul
xchg
xchg
cmp
and
inc
or
lea
stc
inc
push
in
or
into
inc
and
in
pop
add
test
rcr
call
rcr
fdivr
aas
jge
idiv
outs
and
jno
adc
adc
pop
aaa
(bad)
mov
cs
mov
mov
push
inc
add
pop
jns
mov
movs
icebp
fdiv
cdq
fcom
add
mov
loop
add
jge
rcr
mov
mov
fs
lods
adc
mov
aam
stos
adc
in
es
lods
(bad)
adc
xor
out
and
adc
mov
(bad)
(bad)
adc
test
push
pop
lods
pop
sbb
cmp
push
push
popa
jne
push
pop
mov
lods
cmp
mov
cmps
inc
mov
mov
xchg
adc
ds
(bad)
scas
pop
clc
std
fimul
mov
mov
cmp
ret
xor
sbb
adc
jb
out
sub
jle
or
add
sbb
js
or
sub
mov
dec
push
test
jge
dec
aas
sahf
sbb
mov
mov
call
sub
repnz
call
out
dec
pop
ins
sub
shl
pop
xor
mov
mov
xor
xchg
mov
push
xor
ror
adc
and
pop
adc
or
mul
out
int3
xchg
add
pusha
and
and
lods
mov
fsub
sti
sti
sub
movs
mov
xchg
jne
mov
in
repz
sbb
inc
sbb
ins
lea
cmp
push
xor
dec
sbb
cmp
cli
cwde
inc
fwait
ud1
test
ss
shr
pop
pop
enter
ret
adc
or
add
repz
retf
popf
inc
cs
dec
cmp
cli
nop
mov
add
mov
movs
xchg
xchg
sahf
jp
dec
sub
shl
cmp
mov
sbb
popf
jle
push
mov
xchg
xchg
sti
xchg
xchg
inc
repz
mov
pop
fist
jge
call
fdivr
mov
pop
call
sbb
lods
cmp
xchg
pusha
popf
rol
mov
cmp
adc
stos
push
dec
jl
dec
xor
and
mov
xchg
fwait
pushf
sub
sbb
sub
test
and
mov
sti
retf
sbb
out
int
add
mov
jecxz
jmp
aad
scas
sbb
fs
mov
(bad)
adc
pop
cmp
pop
popa
jge
mov
push
ins
les
pusha
ds
(bad)
scas
pop
pushf
add
je
(bad)
xor
int
push
int
add
pop
adc
call
mov
leave
pop
enter
jae
(bad)
out
mov
add
(bad)
mov
enter
lods
enter
retf
adc
popf
jbe
mov
retf
sub
push
icebp
je
fwait
movs
mov
sbb
or
pop
push
pop
push
mov
jae
movs
repz
adc
lea
les
fbld
fiadd
ins
xor
cdq
mov
sahf
test
xor
jns
jge
addr16
sub
cmps
pop
jp
int3
cmc
(bad)
push
cmp
mov
cli
add
dec
sbb
out
hlt
ins
mov
xchg
inc
pop
jb
mov
lahf
ret
aaa
xor
daa
sbb
mov
test
add
mov
sub
out
cmp
cmp
inc
jge
mov
(bad)
mov
cmc
fnstenv
xor
jmp
in
jle
scas
xchg
mov
sub
dec
int
dec
shl
dec
sbb
push
int3
icebp
sub
out
sbb
push
xor
sub
iret
sbb
clc
xchg
std
or
sbb
push
iret
pop
pusha
push
pop
icebp
sub
or
cmps
pusha
and
jns
jg
mov
retf
in
add
dec
and
in
xchg
out
or
mov
inc
mov
jbe
inc
test
ret
cs
imul
test
nop
movs
mov
fild
push
pop
(bad)
ficomp
jg
or
mov
test
jg
jmp
int3
dec
sbb
push
sar
adc
call
fsub
icebp
pop
mov
and
aaa
repnz
jo
sbb
sar
sar
inc
mov
into
ret
in
or
fstp
xor
push
jge
(bad)
dec
and
in
mov
push
mov
add
mov
int
cmp
movs
or
and
pushf
xchg
mov
int3
test
xchg
cli
cmp
jg
and
cmp
ror
push
das
mov
and
and
add
pop
(bad)
mov
inc
retf
mov
mov
rcr
xor
sub
jp
test
jno
loopne
shl
idiv
aad
or
add
mov
jne
inc
push
sub
xchg
sbb
push
jae
ja
or
and
cli
jle
cli
xor
popa
cmps
mov
bound
loope
xlat
ds
neg
(bad)
pop
aad
push
mov
cmp
pop
lock
sbb
xchg
dec
movs
ret
int3
xchg
cmps
inc
jno
mov
push
test
sub
out
call
aaa
repz
aam
push
dec
test
dec
add
mul
repz
idiv
push
xchg
xor
jne
or
test
pop
sbb
int
shl
mov
pusha
inc
mov
pfmax
lods
shl
ret
out
cmp
rcl
pop
jns
stos
cwde
shr
push
and
push
pop
cmp
inc
jmp
mov
test
shr
xchg
outs
inc
push
xchg
stos
cmp
outs
push
in
cmp
adc
adc
leave
dec
jo
(bad)
jmp
lods
and
lahf
add
mov
lock
test
dec
jmp
sbb
stos
inc
mov
fdivp
adc
cli
and
xchg
push
loop
cmp
add
dec
out
mov
les
pop
mov
test
pusha
mov
test
push
pop
inc
adc
sub
xchg
and
sub
xor
mov
sub
inc
je
sub
(bad)
cmc
test
outs
pusha
cdq
movs
cmp
test
into
sbb
stos
mov
sub
cmc
mov
loopne
cmp
out
push
ret
adc
jbe
mov
nop
mov
test
repz
add
pop
mov
cdq
idiv
cmps
pop
mov
mov
push
mov
mov
mov
lods
adc
mulps
addr16
cmc
mov
add
adc
iret
cmc
inc
sbb
dec
loopne
es
in
jns
lea
(bad)
test
outs
xchg
or
icebp
aad
cwd
mov
adc
mov
pop
and
xchg
jb
cmp
lods
mov
rol
ret
pop
imul
or
dec
mov
js
mov
dec
jo
push
jg
add
loop
pop
test
pop
xor
leave
fucomp
adc
ret
clc
fs
loope
sub
push
mov
add
ss
rcl
fdivr
and
cwde
fcomp
lahf
lds
pop
pop
dec
das
mov
loop
mov
shl
clc
hlt
xchg
repz
das
sbb
fst
pop
sub
jb
sbb
add
cmp
es
je
xor
idiv
shl
xor
cmp
mov
int
es
icebp
adc
jne
mov
in
fbstp
pusha
fwait
jmp
cmp
inc
add
sbb
sub
ret
lods
mov
sbb
inc
ret
imul
lock
cmp
or
pop
sbb
inc
jle
push
arpl
je
dec
cmp
jb
pop
cmp
push
(bad)
jl
shr
outs
or
mov
aam
sub
ja
sub
enter
stos
xchg
fisttp
add
mov
inc
es
das
stos
icebp
xchg
(bad)
iret
cmp
cmp
aaa
shr
pop
jo
repnz
push
xor
enter
xchg
pop
not
mov
xchg
fdiv
aad
mov
xchg
mov
jb
jae
xchg
xchg
mov
cmp
and
(bad)
sbb
inc
xchg
pushf
arpl
fdiv
mov
sub
lds
out
int
fldcw
scas
daa
call
inc
xor
sysexit
inc
dec
inc
scas
dec
mov
pop
mov
dec
and
fwait
dec
neg
fisttp
fwait
ret
lds
iret
popf
loope
xor
retf
dec
cdq
add
dec
xor
fadd
inc
mov
ss
ficomp
ret
dec
jno
pop
test
pusha
repz
push
jbe
mov
mov
cmp
mov
or
mov
fwait
sbb
in
outs
inc
fwait
and
inc
push
hlt
pop
(bad)
fs
mov
push
mov
aam
mov
jae
adc
out
mov
data16
sbb
mov
adc
ss
je
and
js
sub
fs
add
fsub
repnz
test
mov
addr16
sub
(bad)
and
push
pop
pop
fsub
fsub
jmp
idiv
jb
mul
push
sbb
jg
jmp
inc
push
fistp
cmps
jae
inc
or
or
cmp
outs
xor
adc
(bad)
and
inc
mov
mov
mov
shl
mov
or
pop
sub
test
jo
frstor
in
and
or
shl
fistp
sar
test
leave
add
loop
(bad)
leave
or
pop
enter
sub
jbe
sbb
xlat
add
out
sbb
jnp
neg
add
sbb
push
sub
or
and
fistp
push
adc
inc
mov
sbb
outs
add
(bad)
lods
rcr
(bad)
sahf
(bad)
mov
retf
push
mov
fsubr
jmp
fidivr
sbb
(bad)
jle
jge
std
jns
call
adc
cmp
mov
xor
rcl
fidiv
cmc
add
jecxz
jbe
call
push
lods
adc
lods
imul
push
xor
int
cmp
pop
hlt
mov
xor
push
ds
gs
data16
cmps
mulps
scas
nop
inc
sbb
cdq
mov
and
in
fsubr
xor
sbb
sub
mov
enter
and
mov
fist
and
adc
icebp
inc
arpl
jl
test
int
inc
mov
pop
jmp
lods
and
and
imul
je
int
rol
lds
sahf
or
add
cmp
neg
dec
dec
mov
ins
push
mov
adc
xor
daa
push
dec
jecxz
icebp
jnp
dec
icebp
dec
pop
adc
(bad)
mov
xor
(bad)
push
and
addr16
adc
adc
int
(bad)
cmps
pop
iret
push
cld
pop
mov
xor
cmp
and
cmps
retf
jle
dec
jl
rcr
sub
dec
iret
lock
popf
movs
scas
cmp
scas
pop
lods
aas
fdiv
and
les
out
adc
(bad)
out
call
outs
mov
mov
aad
mov
call
and
dec
xchg
add
test
shl
pop
add
cmp
mov
sub
das
adc
call
ret
rcl
jmp
data16
mov
std
cld
add
outs
inc
ss
mov
fcmove
mov
push
jbe
adc
cmp
dec
jbe
mov
or
dec
es
xor
gs
shl
jb
je
push
or
mov
jne
sub
cmp
ins
aad
xor
fwait
push
imul
cs
outs
jns
sub
mov
pushf
mov
pop
dec
imul
hlt
data16
jp
push
pop
rcl
retf
scas
xor
fldenv
jnp
shr
and
fild
leave
mov
mov
test
mov
int
dec
lahf
cmps
add
pop
idiv
sub
jl
lds
pop
inc
movs
lea
fwait
lahf
loop
lds
es
cmc
sbb
mov
in
add
mov
ss
daa
adc
into
sbb
add
loop
xchg
jmp
lds
hlt
(bad)
clc
cli
pop
cmc
in
sbb
cmp
pusha
add
push
jbe
test
or
ror
call
test
add
jl
sbb
lock
pop
cwde
push
shl
jne
js
movs
bound
mov
scas
and
das
push
push
sub
(bad)
mov
push
fwait
stc
pushf
or
(bad)
xlat
(bad)
mov
bound
xchg
mov
les
je
cmp
jne
push
pop
xchg
pushf
and
mov
pop
fisub
mov
cmp
lock
xor
test
cmps
inc
mov
ins
push
(bad)
imul
mov
jl
nop
pop
lds
cmp
outs
leave
push
add
sub
dec
xor
fnstcw
push
nop
and
xchg
imul
bound
std
retf
add
movs
in
xchg
into
xor
ret
fstp
sub
or
retf
arpl
(bad)
outs
sbb
add
sbb
loop
cmps
and
loopne
adc
cmps
jns
xchg
jnp
inc
fiadd
pop
je
dec
xchg
dec
ins
xchg
mov
jl
and
lods
stos
icebp
pop
jo
xchg
loope
xchg
lds
mov
cmps
mov
pop
xchg
pusha
and
idiv
fisttp
mov
pop
inc
jmp
mov
sbb
cmps
push
ins
pop
cmc
rcl
push
fcomp
dec
xor
in
push
sub
fwait
adc
and
and
mov
test
ss
test
sub
pushf
pop
xor
jp
pushf
sub
xor
cmps
repnz
mov
rcr
(bad)
test
pop
aaa
sub
push
stc
sbb
cs
pusha
rcr
retf
and
adc
loop
and
push
pop
push
fyl2xp1
rcl
es
daa
sub
jno
push
mov
cmp
xchg
test
cmp
add
or
add
test
cmp
fnsave
jp
mov
jge
pop
inc
add
push
push
inc
popf
adc
sub
mov
mov
pop
aad
inc
jmp
pop
jb
jae
pop
in
or
pop
and
pop
jb
(bad)
cmp
xor
and
adc
cs
add
lock
xchg
xchg
sub
push
mov
(bad)
mov
test
fnclex
out
dec
gs
rcr
push
scas
dec
fdivr
lods
sahf
inc
jmp
jb
test
loope
xchg
xchg
push
xor
add
in
ins
test
cwde
push
mov
mov
push
jo
and
adc
mov
or
or
inc
add
sbb
dec
stos
mov
pop
out
inc
cmc
sti
xor
sbb
mov
cmp
or
xor
jns
imul
fadd
repnz
pop
cmp
and
dec
sahf
jp
mov
fisub
xor
lea
or
push
or
mov
sahf
gs
repnz
fdivr
sbb
dec
imul
(bad)
jge
cmp
sar
adc
pop
out
xchg
xchg
imul
int
mov
mov
aam
mov
pop
jg
out
dec
push
xchg
mov
mov
jmp
push
sbb
xchg
xchg
pop
jecxz
fs
inc
push
sar
jmp
mov
test
and
xlat
dec
iret
sub
shl
mov
fbld
push
mov
xchg
sbb
ret
stos
clc
arpl
faddp
or
sub
sub
pop
mov
fdiv
gs
in
not
stos
add
js
mov
daa
add
imul
and
in
mov
orps
mov
adc
push
shl
arpl
fwait
add
mov
out
lds
call
ficom
sbb
jae
or
adc
(bad)
outs
cmp
mov
xchg
mov
sub
fild
xchg
aam
loopne
push
jno
div
jne
dec
ficom
int
adc
sahf
je
jns
adc
out
lahf
and
shl
aam
lea
adc
inc
push
mov
and
cmp
mov
sbb
test
fild
dec
out
push
mov
mov
(bad)
dec
xor
sbb
inc
test
outs
(bad)
call
cli
add
jae
imul
out
test
mov
aad
jmp
push
pop
test
mov
push
scas
xchg
(bad)
clc
xchg
cmps
pop
mov
jge
pusha
(bad)
push
mov
mov
jl
lock
jmp
dec
aam
mov
pop
add
retf
push
aad
cwde
xor
push
aam
mov
(bad)
sub
xlat
rol
dec
das
loop
pop
jl
scas
ja
je
out
scas
push
not
pop
call
dec
loopne
pop
loope
sbb
fimul
mov
out
ret
mov
or
and
xchg
mov
pop
xchg
or
cmp
jne
inc
mov
scas
and
into
adc
jo
lods
xchg
mov
les
test
(bad)
push
lds
add
movs
fwait
add
test
aaa
sahf
mov
cmps
xlat
ins
imul
(bad)
rol
(bad)
in
rcl
(bad)
in
fs
sub
or
or
imul
and
push
sahf
jbe
mov
ins
fnsave
test
cmp
mov
aad
test
xchg
or
inc
mov
or
dec
sbb
mov
jp
pop
ror
outs
mov
or
sub
push
pop
jne
mov
lock
sbb
sbb
inc
mov
xlat
jecxz
enter
mov
add
push
dec
jne
les
(bad)
pop
xor
mov
jns
or
adc
fucomp
xchg
add
cwde
push
mov
push
pop
(bad)
in
lock
loope
movs
mov
xchg
jmp
ror
repnz
aaa
cmp
inc
fnstcw
lock
hlt
daa
mov
pop
aas
mov
xchg
mov
mov
mov
es
push
sub
fcom
push
es
jnp
nop
xor
jge
iret
clc
pop
pop
mov
iret
ja
enter
sub
fwait
lods
bound
add
(bad)
mov
inc
mov
inc
inc
fdiv
sub
outs
lods
shr
pop
mov
fidivr
loopne
or
rcr
aas
mov
shl
cmp
xchg
mov
dec
inc
repz
outs
jbe
mov
adc
mov
adc
(bad)
adc
mov
cmps
cmp
push
pop
pop
sti
mov
icebp
sahf
std
pushf
mov
xor
inc
jl
les
xchg
mov
adc
retf
pop
hlt
iret
cmp
push
xor
movs
push
cmp
and
cmp
lods
clc
repnz
mov
addr16
pop
aas
xchg
inc
imul
jle
test
aaa
mov
mov
dec
fcmove
scas
pop
push
cwde
or
fnstcw
and
pop
ror
aas
sub
dec
xor
loope
sahf
push
fstp
pop
inc
lahf
ret
inc
stos
mov
mov
lods
lods
sbb
fcomi
rcr
test
jg
fistp
cmp
sub
int
cmp
(bad)
lock
inc
cmp
cmps
je
jo
(bad)
xor
enter
inc
shl
mov
jae
fbld
or
adc
icebp
or
shl
jmp
mov
and
sbb
in
call
push
sub
mov
and
aas
mov
cld
xor
inc
shl
icebp
cmps
outs
fldenv
or
mov
jmp
enter
cs
xchg
movs
sbb
sub
dec
div
in
add
scas
inc
pop
add
sub
std
pop
sbb
sub
sub
inc
ss
shl
movs
lods
xchg
ins
ins
ror
and
xlat
cld
xchg
and
aad
call
jl
mov
sub
dec
es
arpl
cmp
jp
xchg
into
push
and
pop
idiv
scas
inc
js
shl
lods
test
out
add
xor
aam
fisub
stc
or
sbb
cmps
mov
(bad)
(bad)
aad
in
xchg
out
mov
movs
adc
add
adc
jle
mov
leave
(bad)
js
pop
sbb
cmp
mov
push
push
pop
mov
aaa
jp
aad
sub
out
inc
cmp
push
adc
dec
jmp
(bad)
imul
jo
rcl
add
jb
lods
cmp
std
ds
rol
pop
neg
mov
pop
xor
xor
sub
adc
fild
and
jmp
mov
xchg
mov
pop
and
rcr
jb
jecxz
adc
mov
or
out
jmp
fucomp
or
jmp
pop
push
jp
mov
pop
mov
imul
mov
and
(bad)
inc
or
sbb
(bad)
(bad)
adc
mov
mov
push
ja
sbb
lahf
push
movs
jl
add
rcl
les
retf
sbb
dec
mov
push
(bad)
addr16
getsec
inc
xor
add
mov
gs
fs
inc
sbb
sbb
sbb
mov
test
pop
jl
sub
data16
and
push
xchg
inc
jnp
or
jnp
call
dec
jge
dec
jle
lahf
xor
xrelease
jnp
jmp
lods
loope
ins
pop
dec
stos
or
dec
xchg
xor
das
fmul
cs
and
fstp
outs
jp
add
test
mov
push
aam
jmp
ficomp
(bad)
movs
xor
dec
cmp
jmp
jno
adc
mov
jmp
inc
jns
push
pusha
fcom
out
push
adc
and
test
scas
inc
test
sbb
in
les
enter
add
es
out
jmp
mov
shr
adc
xlat
push
xchg
push
ds
iret
shl
fdivr
shr
dec
retf
pop
pop
in
or
push
ret
test
pop
jno
lea
or
inc
add
dec
xor
push
mov
mov
xchg
sub
mov
aas
neg
pop
iret
ja
inc
stos
out
(bad)
(bad)
scas
jg
push
into
push
push
data16
fcmovu
pmulhuw
clc
fs
shl
pop
jp
push
sahf
in
mov
arpl
bnd
test
out
mov
call
sar
scas
fiadd
jg
and
mov
(bad)
int
xlat
ins
or
and
fst
and
stos
mov
sti
push
and
test
inc
pop
bound
mov
in
mov
ins
add
jecxz
and
iret
jbe
xchg
mov
jo
mov
ret
lahf
dec
adc
cmp
inc
in
test
pop
pop
fwait
std
and
(bad)
cld
lods
lahf
jecxz
or
(bad)
mov
stos
jno
aad
cwde
lods
(bad)
dec
sbb
mov
pop
adc
cli
je
pop
data16
out
pusha
jl
sbb
es
add
sub
push
mov
add
lods
fs
inc
jbe
and
xor
xchg
(bad)
push
pop
clc
xchg
dec
inc
jnp
inc
popa
jbe
stos
sbb
fldcw
outs
xchg
rcl
cld
sbb
and
int
shl
ja
xchg
or
xchg
mov
inc
inc
cmp
dec
xor
imul
scas
pop
(bad)
push
xchg
aaa
mov
sub
xchg
or
loopne
add
push
cmps
movs
lds
sahf
jbe
adc
mov
xor
pop
xor
jmp
dec
fstp
add
fdivrp
cmp
or
fsubr
(bad)
inc
mov
sbb
daa
out
jno
mov
je
add
rol
sub
jns
lods
push
jmp
fsub
jo
(bad)
out
daa
xchg
ins
popa
retf
xchg
xor
popf
(bad)
bound
or
inc
jl
repz
fstp
mov
inc
les
pop
in
sar
loopne
mov
test
pop
and
add
adc
dec
sbb
mov
sub
call
sub
into
iret
mov
push
mov
or
mov
inc
pop
sar
push
ds
ret
mov
add
lock
jo
pop
jo
mov
cmps
stc
xor
xor
mov
pop
mov
inc
mov
lds
pop
adc
push
pop
jne
push
and
pop
add
inc
push
aas
mov
and
pop
mov
(bad)
dec
int3
xchg
sbb
xlat
xchg
jo
sub
aad
cmp
mov
xchg
cli
(bad)
jmp
leave
out
xor
(bad)
loop
ds
ret
or
sub
(bad)
pop
int3
sub
leave
repnz
repnz
inc
inc
movs
xchg
mov
loop
shr
(bad)
loopne
loope
sbb
xchg
add
mov
dec
jo
push
xlat
rcr
cmp
jae
popa
shr
cmp
mov
arpl
rcl
ja
lock
aam
jae
sub
cwde
mov
xor
cmp
pop
out
push
push
xor
xchg
pop
ins
pusha
aas
add
enter
jae
ja
cmp
mov
repnz
push
pusha
add
xor
stos
push
cmps
cs
adc
add
and
lds
push
mov
imul
imul
imul
aas
inc
sub
jmp
mov
sbb
mov
xchg
jecxz
mov
ficomp
dec
mov
xchg
out
mov
ret
lahf
and
(bad)
cld
in
pushf
iret
mov
call
mov
sti
popf
(bad)
dec
in
jae
xchg
cmps
(bad)
call
rcr
cmp
lods
int3
fild
mov
mov
inc
leave
shl
adc
je
loope
xchg
lea
cmp
rep
in
and
jge
push
and
sbb
push
or
adc
sar
adc
pop
xchg
test
cmps
push
repz
pop
popf
sub
lods
in
cmp
icebp
lods
hlt
xor
clc
dec
ret
mov
ins
repnz
mov
gs
cmp
(bad)
int3
lods
push
sti
retf
inc
repnz
mov
(bad)
jecxz
icebp
popf
enter
pushf
shr
outs
enter
pop
lds
(bad)
pop
sub
fs
inc
int
repz
int
in
push
enter
dec
add
es
test
push
add
and
cmp
or
inc
jb
(bad)
cmps
inc
(bad)
out
sbb
sbb
dec
stos
mov
std
or
and
add
inc
cmp
mov
mov
movs
shl
mov
jl
(bad)
sub
popa
repnz
int
test
jbe
or
rcr
out
(bad)
(bad)
jle
jb
add
addr16
aam
frstor
push
jg
add
retf
arpl
xchg
jb
ds
in
xor
aad
sbb
push
jge
pop
and
icebp
jae
repz
pop
in
xor
pop
data16
cmp
sti
mov
add
daa
push
push
sahf
sahf
in
out
sti
pop
jne
xchg
jb
movs
mov
neg
adc
out
gs
sub
out
fisub
aam
jb
bound
jno
mov
mov
sbb
mov
cmp
sahf
sub
cli
ja
rcl
adc
pushf
jecxz
mov
stos
adc
jg
fbld
sbb
cld
inc
sub
stc
test
retf
dec
xor
into
push
sbb
nop
add
movs
test
fbld
sub
lds
scas
fs
das
fist
std
enter
gs
add
sbb
pop
pop
pop
movs
jl
test
fldenv
es
cld
cld
add
dec
lds
pop
inc
test
pop
or
ds
push
mov
bound
loop
mov
xchg
sti
int
jmp
aaa
fst
ja
icebp
sub
mov
cmp
mov
xlat
mul
dec
mov
cmp
pop
lea
jge
xor
mov
push
ror
pop
xchg
shl
mov
jnp
movs
or
push
jle
cli
(bad)
pop
xchg
sub
(bad)
fs
xchg
sar
ins
jle
neg
repnz
mov
xchg
movs
xor
pop
mov
cmp
sub
std
into
pushf
pop
out
cmp
sbb
jne
dec
test
fidiv
cli
mov
push
xor
shr
push
mov
hlt
push
push
pop
dec
push
in
daa
mov
ucomiss
fsubr
mov
retf
scas
jecxz
cmp
out
cmps
cwde
xor
dec
adc
lds
cmp
inc
mov
sbb
imul
sahf
xlat
addr16
test
sbb
push
iret
aaa
mov
pop
inc
out
cld
jo
clc
jp
or
fwait
sub
xor
scas
cmp
jae
aam
shl
mov
jp
cdq
mov
xchg
mov
mov
sahf
pop
push
les
jnp
cmp
adc
or
sbb
mov
stc
sar
hlt
imul
imul
loopne
cmp
and
add
loop
sbb
cld
push
push
(bad)
dec
ror
push
out
aaa
pop
addr16
or
pop
stos
push
xchg
cmc
add
scas
pusha
adc
push
movmskps
mov
pop
jl
jo
je
std
das
jg
aas
jnp
cld
and
scas
mov
loope
dec
add
mov
test
dec
or
push
sbb
xchg
pop
in
inc
loope
mov
popf
in
mov
mov
push
inc
movs
int
sub
loope
add
and
dec
jno
aad
push
adc
fdivr
iret
and
push
in
(bad)
sub
test
jmp
cli
or
dec
sbb
repz
fwait
cdq
lods
xor
int
jl
test
dec
xchg
test
pop
and
cmp
ret
pop
adc
(bad)
push
mov
push
push
xor
inc
add
add
(bad)
les
jmp
loopne
sahf
addr16
push
ror
loope
xchg
jno
jge
push
jmp
xor
iret
lock
sub
ds
imul
xchg
xchg
mov
push
shr
mov
lahf
jp
fsubr
inc
imul
pop
mov
dec
(bad)
popa
add
mov
ret
dec
data16
jg
jl
add
sbb
inc
inc
retf
pop
shl
aaa
jg
cmc
or
pop
add
in
pop
mov
mov
dec
push
mov
retf
jns
adc
cmp
call
sub
lock
or
aam
sub
ja
out
dec
sbb
ret
dec
mov
bound
cli
xor
add
sbb
mov
inc
ja
jo
ja
jo
push
lea
std
les
sbb
pop
(bad)
cmps
inc
pop
sub
repnz
cmp
jecxz
bound
test
and
jmp
push
cmp
retf
and
dec
lds
shl
and
aad
cdq
pop
fisub
add
mov
mov
dec
outs
sub
push
ret
rcr
xor
jl
mov
mov
jmp
mov
jecxz
sub
dec
jecxz
fs
(bad)
ficom
xchg
mov
jne
xlat
out
xchg
dec
and
jbe
push
or
xor
sub
mov
fstp
xor
cmps
sbb
mov
das
inc
xchg
sbb
lds
fstp
sub
mov
leave
inc
iret
test
pop
ficom
hlt
cmp
fwait
push
jbe
aad
push
push
pop
aas
sbb
jmp
or
mov
dec
dec
lods
jbe
sbb
adc
out
add
dec
inc
bound
scas
retf
dec
ret
jecxz
scas
and
arpl
imul
xlat
sbb
xchg
jle
fwait
lahf
int3
jns
and
rcr
xchg
inc
test
push
call
movs
and
jno
cmp
xchg
or
push
ror
dec
jle
movs
or
jmp
fsubr
or
mov
lea
sahf
adc
mov
imul
add
sub
xor
shl
addr16
jnp
sub
call
retf
jmp
(bad)
or
lods
add
scas
push
addr16
sub
cmp
pop
cmp
repz
cmp
lock
clc
and
cmps
out
mov
out
in
(bad)
mov
shl
movs
es
add
into
jle
pop
outs
or
sub
mov
mov
aaa
push
call
popa
(bad)
push
(bad)
mov
mov
sar
jo
or
retf
inc
jl
js
ins
pop
cld
push
imul
loope
arpl
aam
cli
divps
imul
(bad)
out
jp
sahf
jne
or
retf
in
add
les
jle
popf
popa
arpl
lea
mov
or
int
mov
mov
imul
mov
aad
mov
lock
stos
cdq
into
add
sar
cmc
pop
push
inc
or
std
test
xchg
clc
stos
ss
or
pop
pusha
cmp
repz
cmp
stos
pop
mov
pop
ins
jne
mov
xor
daa
mov
cmps
mov
loopne
xor
mov
ins
cmp
xor
dec
push
mov
cmp
into
push
jle
sub
sub
ror
cmp
or
addr16
dec
fs
add
repz
call
pop
adc
xor
inc
xchg
or
xchg
xor
mov
push
xor
xor
imul
ror
mov
push
pop
test
cwde
js
and
retf
data16
loop
bound
ins
push
das
pop
scas
mov
jmp
idiv
jg
in
jns
sbb
mul
cmp
mov
test
ins
movs
in
mov
inc
jbe
pop
loopne
rol
sbb
sbb
data16
loope
cmp
jns
aas
scas
test
cmc
fild
sub
nop
mov
pop
push
sub
dec
inc
mov
pushf
gs
dec
mov
cmp
add
xor
lock
mov
loope
sbb
and
adc
popa
pop
loope
fdiv
hlt
xor
dec
enter
scas
sub
leave
mov
jmp
sbb
mov
pop
gs
loop
sub
push
pop
mov
cs
daa
mov
fadd
js
sbb
mov
(bad)
dec
push
aas
jecxz
out
inc
xchg
adc
add
sub
shl
or
dec
mov
jp
jp
shr
or
pop
arpl
es
mov
xor
mov
mov
test
ss
call
das
jb
and
push
xor
xchg
dec
xor
xchg
inc
xor
jb
mov
add
repnz
aaa
adc
iret
out
rcr
aas
retf
jmp
inc
test
les
mov
mov
dec
cmp
sbb
loope
push
iret
cmp
inc
popf
scas
lock
push
sti
pop
cmp
sbb
dec
cmp
mov
aas
test
out
push
jb
jg
push
jmp
mov
mov
out
pop
jmp
movs
cmp
dec
lds
or
in
push
push
or
in
xchg
out
add
pushf
and
xchg
adc
retf
je
ret
std
repz
ficom
mov
sub
xor
popf
dec
sub
sahf
mov
push
sahf
push
sbb
stc
loope
hlt
mov
mov
jmp
shr
adc
add
or
cmp
js
sbb
dec
test
push
jp
stc
std
es
lods
adc
xor
mov
cmp
jmp
retf
icebp
dec
xchg
mov
dec
pop
dec
in
cmp
add
aam
(bad)
cmp
loopne
mov
cdq
jns
jmp
inc
jbe
inc
das
int3
sub
inc
int
jo
lock
std
(bad)
jmp
(bad)
adc
hlt
jnp
add
pop
cmp
push
adc
mov
icebp
cmp
rcl
scas
lds
cmp
adc
cmc
es
or
out
call
jmp
xor
sbb
xchg
xchg
imul
fild
mov
ins
imul
movs
loopne
test
std
popa
mov
dec
ja
xchg
add
ins
cmc
mov
xchg
sbb
aaa
cmc
lock
cli
jb
fs
adc
pop
push
push
div
int
cli
addr16
mov
mov
xor
dec
or
jb
fidiv
jmp
gs
xchg
sbb
mov
(bad)
std
xor
outs
scas
xchg
jbe
push
jo
xchg
int3
(bad)
mov
fist
scas
add
std
xchg
popf
or
inc
push
adc
shl
mov
sub
movs
adc
hlt
ret
lock
xchg
mov
call
std
cmp
sbb
sub
adc
imul
call
stos
mov
xor
adc
outs
jb
movs
mov
dec
adc
pop
inc
or
cmps
sub
xchg
jecxz
sahf
dec
repnz
add
stos
daa
pop
cmc
lods
aad
ret
or
add
in
fcmovnb
movs
cmc
dec
(bad)
stc
adc
and
stos
jmp
cmps
mov
mov
and
ret
popa
mov
cmc
mov
fnsave
sbb
mov
push
and
stos
mov
push
pop
or
sub
neg
pusha
xor
stos
jo
push
xor
mov
dec
xor
mov
out
cmps
lods
fdivr
(bad)
lods
cs
in
jno
int
fisttp
es
data16
jp
imul
sar
(bad)
mov
lahf
jle
loope
and
jno
and
pop
mov
call
pop
gs
mov
inc
pop
outs
test
jecxz
xlat
and
push
jbe
ss
mov
idiv
mov
sub
mov
shl
std
xchg
icebp
pop
jae
push
cld
lods
push
lds
push
ret
loop
(bad)
pop
push
data16
cdq
div
dec
pop
pop
mov
outs
and
fs
sub
dec
aaa
mov
stc
mov
movs
into
xor
jns
ret
outs
dec
in
xor
inc
loop
xchg
rcr
fsub
cwde
mov
dec
int3
push
ror
jge
and
dec
nop
cld
jns
xlat
add
jne
loope
loop
inc
gs
cdq
sbb
not
ficom
or
mov
mov
cwde
xor
cmc
out
ja
xchg
enter
pushw
js
add
ins
lea
xor
and
fisttp
xor
in
pop
sar
mov
and
xchg
jecxz
fsubr
pusha
inc
jmp
sbb
or
jbe
scas
sub
aaa
and
pop
fdiv
adc
or
inc
sub
mov
adc
add
ficom
stos
ret
cmp
sti
je
cmp
js
stos
jp
out
sbb
sbb
jle
xor
jl
push
xchg
or
cwde
xor
mov
sbb
stc
imul
stc
dec
jbe
addr16
jno
cmps
push
xchg
ror
dec
lds
ins
popa
or
sbb
scas
dec
sub
ret
sbb
jbe
xchg
test
daa
test
and
ja
pop
jp
mov
add
pushf
retf
inc
or
pop
das
jo
aaa
leave
test
dec
mov
pop
and
xor
repnz
iret
adc
cld
jmp
ffree
mov
test
xchg
sub
mov
lods
dec
xchg
sbb
jecxz
inc
cmp
rep
pushf
repz
inc
mov
(bad)
(bad)
(bad)
imul
test
inc
jbe
mov
inc
pop
jno
in
int
sub
call
out
pusha
mov
ficom
fstp
cmps
jmp
fimul
scas
pop
rol
or
int3
sub
lock
clc
sub
xor
bound
pop
out
pop
ins
retf
add
(bad)
movs
rcr
adc
rcr
shl
call
pop
cmp
push
pusha
mov
sub
lock
in
push
xchg
mov
pop
test
pop
xchg
imul
and
les
es
int3
mov
ret
inc
clc
rcl
push
test
fdiv
cli
rcl
or
aas
add
mov
mov
call
dec
mov
js
xor
fsubr
cmp
pop
les
outs
pop
xor
xchg
xor
jg
xlat
xchg
jns
jge
out
inc
pop
jb
(bad)
push
cmp
js
ret
jge
std
daa
pop
push
dec
jnp
ins
lods
xor
gs
mov
(bad)
call
jae
enter
xchg
adc
std
jmp
xor
jno
jae
sub
cmp
push
xchg
outs
ja
outs
xchg
nop
mov
and
jae
adc
mov
setge
mov
sub
mov
dec
movs
pop
lods
lds
xchg
cdq
and
cmp
sub
sbb
repnz
push
jmp
jg
outs
cmp
mov
dec
in
and
jmp
in
inc
aad
dec
(bad)
cmp
pop
dec
sbb
aaa
out
inc
ror
cwde
push
xor
ror
mov
ror
cli
xor
test
and
xchg
inc
test
pop
adc
mov
jne
sub
dec
repz
adc
icebp
popf
pop
int3
in
sub
xchg
daa
clc
dec
mov
jo
call
data16
pop
jo
outs
sub
cmp
loop
mov
loopne
jnp
add
fild
icebp
dec
cmp
add
adc
loopne
sahf
dec
add
fs
loop
ja
in
push
movs
xchg
adc
jns
push
add
cli
popf
std
retf
add
or
cwde
lods
mov
loop
dec
fcomp
cs
push
xchg
mov
mov
cdq
stc
fsubr
and
sub
dec
mov
out
vmovntps
mov
gs
enter
iret
or
cmc
lea
jmp
dec
pop
fld
push
mov
dec
adc
pop
outs
shld
popf
xchg
jmp
int3
mov
pop
ror
adc
add
or
xor
aad
int
jno
cmc
js
push
jmp
fcmove
and
xchg
mov
clc
aam
test
dec
mov
fs
sbb
or
and
lds
push
jne
dec
inc
fs
push
div
imul
or
in
pop
or
jl
or
or
or
cli
pop
mov
add
shl
adc
pop
mov
in
push
mov
addr16
or
cmps
sti
mov
ds
sbb
jne
and
lods
fsub
add
mov
out
retw
std
cld
cmp
cmp
and
into
lea
loopne
pop
mov
xor
dec
pop
mov
pop
aad
das
and
pop
(bad)
std
adc
add
sub
dec
cmp
mov
(bad)
aam
add
mov
cmp
push
rcl
jmp
pusha
and
inc
std
loope
sub
in
pop
shl
mov
xlat
rcl
push
add
sbb
out
push
cld
jmp
(bad)
cmp
test
cld
data16
adc
push
push
push
ret
mov
enter
and
test
daa
(bad)
fst
or
sub
call
xchg
xor
ds
ja
call
mov
sbb
xor
jge
in
mov
or
adc
mov
les
inc
sub
ja
jne
inc
stos
es
cmp
cmp
int3
dec
jg
imul
fild
add
jge
push
outs
pop
mov
(bad)
pop
(bad)
js
dec
imul
jecxz
aad
fild
(bad)
daa
js
add
or
std
ret
call
jbe
or
inc
into
pop
inc
sbb
push
stc
clc
cli
ret
jg
jno
add
pop
push
das
xchg
es
push
xchg
or
in
in
xor
cmps
popa
push
neg
cmp
mov
xor
leave
in
mov
pop
imul
dec
mov
les
call
(bad)
mov
pop
xchg
and
jmp
jecxz
pop
push
jmp
mov
push
jge
enter
dec
mov
and
or
sbb
loope
or
test
fwait
push
cli
(bad)
nop
push
jae
xor
inc
push
push
pop
xchg
push
popf
jp
repnz
push
lahf
pushf
scas
xchg
into
std
add
dec
icebp
std
aam
loopne
scas
ret
mov
or
adc
fisub
dec
lahf
(bad)
mov
mov
gs
pop
outs
xor
mov
xchg
add
shl
hlt
int
cmc
pop
dec
push
daa
and
out
dec
jae
add
mov
les
dec
or
mov
ss
mov
inc
int3
cmps
jle
mov
(bad)
xor
push
sbb
inc
pop
pop
xor
pusha
jle
add
(bad)
fst
pavgb
pusha
xor
push
push
movd
sbb
jo
cwde
sub
into
scas
pop
xchg
mov
sub
mov
jbe
or
js
inc
jmp
dec
jle
pushf
mov
in
ror
loope
nop
xchg
stc
inc
icebp
in
aad
scas
or
dec
sub
jmp
inc
inc
bound
mov
cs
popa
dec
xchg
enter
push
in
mov
and
dec
sbb
add
jmp
lods
push
fdivr
inc
xor
pop
jae
xor
dec
sbb
add
(bad)
adc
fs
mov
fbstp
inc
adc
sub
scas
cmp
icebp
(bad)
mov
jb
pop
mov
loope
shr
push
push
adc
push
cli
(bad)
push
mov
adc
jne
popa
int
xor
rep
cmps
out
fsub
imul
xor
fs
cmp
mov
push
shr
xor
(bad)
retf
push
out
out
fwait
(bad)
jecxz
sub
outs
sub
sahf
or
fisub
cdq
repz
mov
scas
adc
or
mov
mov
or
(bad)
out
dec
or
out
outs
retf
nop
push
popf
mov
in
hlt
xor
test
sbb
add
leave
pusha
jno
aam
inc
idiv
xchg
ins
test
popf
ds
scas
and
mov
dec
ret
call
cmp
cmps
mov
gs
clc
(bad)
dec
dec
fst
mov
xor
movs
sbb
loop
mov
fadd
mov
shl
push
shr
out
and
jl
inc
fwait
mov
test
test
enter
pop
mov
push
xchg
(bad)
js
mov
jnp
xchg
(bad)
cmps
mov
imul
add
and
dec
and
jl
push
(bad)
inc
inc
imul
or
int3
and
int
repz
mov
mov
mov
xor
lea
xadd
and
aad
in
mov
lock
add
shr
pop
aam
pop
rcl
mov
jne
dec
add
cmp
aaa
addr16
mov
(bad)
and
pop
and
lds
push
lock
call
inc
outs
and
repnz
cmps
xchg
rcl
cmp
cwde
in
ret
aaa
push
mov
sbb
push
shl
inc
dec
iret
neg
ja
xchg
xor
(bad)
cwde
stc
nop
test
imul
xchg
aas
inc
add
add
lods
mov
ins
cmp
or
push
es
and
sub
cmp
sbb
push
pop
sbb
stc
sub
or
enter
add
fistp
inc
dec
mov
adc
adc
out
fwait
fs
ins
int3
and
and
xchg
jnp
inc
and
cmp
dec
(bad)
xchg
xor
sbb
xchg
fsubr
push
in
cmps
xchg
jmp
jo
cmp
mov
clc
sbb
xchg
(bad)
pop
rcr
sbb
mov
sar
pop
sbb
pusha
sbb
xor
dec
mov
mov
push
je
in
aaa
or
stos
test
sahf
push
cld
xor
pop
sub
scas
shr
sub
cmp
inc
dec
jl
hlt
dec
dec
daa
xor
add
jl
js
inc
popa
jmp
mov
in
sub
fsub
cmp
fsub
je
jge
imul
mov
das
sub
cmp
out
mov
clc
mov
push
mov
test
in
je
xchg
cmp
lahf
sub
cmc
pop
scas
and
test
add
scas
aas
lods
retf
cmp
stos
push
aas
sbb
inc
or
inc
xor
xchg
leave
call
sub
push
cmp
xchg
sar
adc
inc
mov
mov
xlat
sub
xchg
outs
xor
(bad)
sub
loopne
out
push
cmps
or
and
fld
adc
gs
jmp
pop
pushf
add
pusha
and
mov
and
xlat
dec
scas
lea
pop
pop
stos
jb
mov
mov
in
or
jp
ja
or
mov
and
jmp
mov
addr16
xor
inc
(bad)
stos
xor
in
outs
rol
fadd
jae
add
(bad)
jg
cld
adc
mov
adc
js
mov
adc
jne
into
jbe
mov
push
xor
out
push
aaa
ret
push
pop
sbb
mov
shl
push
rsqrtps
movs
test
mov
xlat
data16
adc
or
xor
xor
jl
xor
aad
xchg
addr16
in
add
mul
inc
repz
std
sbb
jns
cmp
cli
fst
cmova
xor
mov
cmps
and
mov
ror
cs
mov
push
das
mov
pop
mov
dec
adc
nop
aaa
hlt
sbb
pop
jbe
push
push
xchg
frstor
jecxz
dec
jne
outs
fdivr
iret
outs
imul
mov
call
mov
fimul
dec
int3
sub
lea
adc
ret
stc
jo
dec
mov
add
scas
in
(bad)
std
xchg
call
mov
jno
jo
rcl
fisub
inc
test
dec
push
aaa
jnp
mov
sub
mov
div
push
daa
sub
out
ss
cmp
cdq
scas
sbb
mov
jmp
int3
push
push
inc
cmp
xchg
icebp
mov
jno
leavew
sbb
push
dec
jle
out
mov
aas
cmc
push
fcmovne
test
inc
cs
pop
in
movs
sti
cmc
data16
mov
cmps
jb
sub
bound
and
psraw
(bad)
xchg
fs
adc
(bad)
adc
(bad)
data16
dec
cmc
push
ins
fstp
pusha
inc
xchg
jnp
pop
(bad)
push
push
adc
mov
outs
mov
mov
aam
je
frstor
sub
imul
add
jb
jno
push
mov
xchg
xchg
jmp
jg
movs
imul
xor
adc
repnz
inc
cmc
xchg
shl
or
mov
or
mov
push
pcmpeqd
dec
mov
pop
aas
jns
(bad)
fiadd
shl
jl
test
xor
rcr
mov
jo
enter
jo
mov
sbb
nop
das
xor
dec
sbb
ficomp
lods
gs
sub
dec
sub
adc
push
xor
xchg
mov
lds
inc
aaa
and
call
rcl
retf
jo
ds
adc
jle
add
icebp
jb
mov
jecxz
xchg
iret
xchg
aad
loopne
inc
scas
sahf
add
xchg
data16
cmp
jb
in
mov
mov
xchg
lock
add
mov
xor
mov
in
xchg
fmul
mov
and
mov
or
mov
pop
pop
(bad)
sbb
mov
xlat
inc
push
int
imul
icebp
pushf
add
addr16
xlat
outs
and
dec
adc
mov
outs
push
addr16
imul
mov
or
add
out
(bad)
cmp
stos
cli
mov
push
lahf
mov
mov
sbb
push
add
sbb
out
ror
jg
pop
movs
pop
add
and
sub
dec
fsubr
inc
xlat
into
xchg
bound
jle
in
mov
mov
ja
or
std
push
pop
adc
and
(bad)
push
xchg
pop
pop
clc
cmp
call
jb
sbb
and
loopne
ja
cmp
inc
jo
cmps
sbb
inc
test
lods
dec
test
xchg
mov
stc
dec
mov
call
mov
pop
dec
iret
mov
xchg
dec
inc
fsubr
movs
and
leave
xchg
push
push
in
out
ins
mov
xor
dec
dec
mov
pop
mov
xchg
jno
cmp
(bad)
and
xchg
adc
push
outs
clc
jns
rcl
mov
in
pop
aad
cld
(bad)
repz
sub
jp
add
jne
cmps
jb
out
test
das
push
rol
jge
les
jne
sbb
test
ror
pop
mov
aas
mov
dec
shr
ficom
push
lods
adc
stc
popa
xchg
mov
add
push
ins
cs
lea
xchg
stos
sub
push
movs
call
fcmovne
fwait
out
mov
fist
mov
jno
push
scas
pop
hlt
xor
gs
sub
call
inc
(bad)
xchg
mov
push
out
sbb
cwde
out
test
xor
sub
arpl
in
out
xchg
popa
sbb
mov
or
sahf
lock
int3
cli
enter
or
mov
inc
ds
int
push
rol
je
cld
xor
retf
inc
js
orps
xor
inc
stos
call
pop
xor
dec
cli
int
xor
(bad)
push
pop
lods
imul
pop
sbb
xchg
mov
int
jp
mov
cmp
or
xor
inc
stos
icebp
and
cmp
retf
dec
addr16
inc
fdiv
das
and
push
iret
push
sbb
jnp
cmps
ret
jmp
hlt
out
(bad)
pop
les
icebp
aaa
leave
fdiv
mov
inc
and
stc
sub
nop
mov
inc
test
mov
mov
pusha
adc
and
mov
push
aaa
jmp
leave
mov
push
sbb
pop
or
xchg
inc
add
xor
mov
arpl
xlat
sub
push
mov
js
test
sbb
mov
loopne
les
jae
sub
inc
addr16
add
stos
js
stos
imul
int3
xor
xchg
adc
jbe
or
sahf
inc
nop
pop
rcl
ss
push
jns
sub
jmp
mov
cmp
arpl
mov
arpl
mov
and
(bad)
arpl
lock
or
xchg
or
popa
cmp
mov
fadd
adc
jmp
outs
test
cdq
data16
repz
and
xor
test
sub
mov
xor
ret
ret
or
cmp
jb
es
fidivr
enter
xchg
xchg
jecxz
fimul
ins
int
rcr
mov
stc
xchg
jge
or
cdq
push
inc
int3
sbb
fsubrp
and
(bad)
jo
call
add
ss
jp
scas
retf
scas
dec
lods
(bad)
xchg
shr
lahf
in
and
dec
les
test
out
sub
ret
sti
mov
mov
rsqrtps
xchg
lods
xlat
aam
ficomp
push
mov
lahf
inc
or
fisttp
pop
xchg
lock
push
cmp
fsub
sub
jl
repnz
xchg
cmp
push
mov
mov
mov
mov
hlt
dec
pop
and
push
scas
and
jnp
iret
add
es
popf
pop
fcmovnu
cmp
std
movs
dec
retf
sbb
jmp
or
push
or
or
or
pop
pop
cld
dec
test
xchg
fs
jo
scas
out
je
test
jne
mov
int
lock
cmps
adc
test
cld
add
mov
xchg
jno
stc
add
mov
push
dec
in
setnp
mov
dec
inc
aam
mov
pop
mov
jge
push
dec
cwde
mov
cmp
sub
adc
iret
xchg
out
test
and
xor
sub
sub
push
jb
aaa
(bad)
mov
js
sbb
xor
dec
adc
push
mov
xor
retf
mov
mov
xchg
fsubr
outs
fadd
jg
or
stos
pop
mov
mov
xor
lds
daa
pop
dec
push
aas
dec
stos
xor
xchg
sti
mov
ins
mov
inc
xchg
(bad)
jnp
inc
pusha
fldenv
in
pop
sub
into
mov
ficomp
add
enter
xor
in
test
fwait
sbb
rcr
arpl
mov
dec
call
hlt
std
nop
sbb
adc
hlt
push
scas
sbb
dec
sti
popf
xlat
mov
push
pop
aad
ss
and
ja
daa
je
fstp
aad
add
fsubrp
jno
mov
pop
int3
dec
test
shl
or
dec
mov
pop
xchg
xor
fild
ins
jae
movs
out
add
jp
dec
xchg
sbb
push
sbb
dec
lahf
out
fidivr
js
sti
addr16
pop
sti
push
jl
inc
inc
dec
and
mov
lds
in
es
das
ins
mov
add
add
sti
loope
push
retf
push
sbb
or
lock
stc
inc
arpl
movs
jbe
int3
(bad)
std
pop
xchg
xor
cmps
ret
cmp
out
aad
xchg
and
add
xor
nop
xchg
xchg
dec
ret
dec
retf
and
and
rcr
inc
arpl
sbb
fldcw
xchg
sub
mov
or
retf
fs
ss
xchg
in
jl
(bad)
in
mov
les
fistp
mov
sub
pop
enter
mov
scas
push
push
test
ret
pop
xlat
jnp
ja
test
mov
xchg
shl
loope
cld
push
xchg
push
inc
repnz
mov
iret
mov
div
and
fsubr
leave
js
or
ins
lock
scas
aam
mov
and
ins
push
push
cdq
jo
imul
aad
push
ficom
push
ds
sub
stc
stos
or
jns
ja
bound
mov
loop
xor
test
mov
or
sbb
pop
fstp
dec
ret
sbb
dec
push
(bad)
hlt
(bad)
(bad)
xor
add
ss
mov
test
or
adc
dec
mov
xor
sub
loop
dec
je
push
jb
loopne
in
and
jbe
add
ror
mov
inc
out
push
sbb
imul
movs
mov
int
and
(bad)
(bad)
adc
push
jmp
add
ffree
inc
(bad)
push
pop
in
in
cmp
stc
mov
aad
test
inc
mov
xor
xchg
dec
dec
jmp
add
or
mov
mov
jecxz
sub
pop
inc
pop
sti
push
cmp
fld
dec
ja
pop
dec
inc
pop
js
inc
mov
adc
fld
xor
inc
mov
and
fld
mov
dec
add
mov
shl
ret
test
lods
out
jmp
ins
cmp
(bad)
stc
push
in
xchg
lock
movs
fmul
push
leave
call
jae
xchg
mov
pop
mov
aad
mov
icebp
xchg
imul
je
push
stc
mov
xor
sbb
(bad)
sti
rcr
mov
int3
cmp
loopne
stos
jns
xchg
and
mov
mov
jb
cli
sbb
cmp
xor
and
fwait
pop
or
mov
cs
test
mov
push
inc
es
sbb
fcomp
or
sbb
mov
loope
xchg
jns
mov
cmp
out
pushf
(bad)
push
mov
data16
pop
test
jnp
push
xlat
dec
dec
xchg
mov
add
(bad)
fist
fisttp
repnz
sar
or
aaa
xor
pushf
sti
xor
in
xor
or
ret
ins
call
fdivr
mov
inc
jecxz
inc
sbb
out
jl
movs
test
mov
xchg
push
pop
xor
rcr
clc
out
push
push
add
pop
jb
or
add
fistp
popa
inc
test
mov
out
jmp
push
into
test
sub
iret
icebp
(bad)
int3
push
fist
sbb
xchg
jle
lods
cmp
dec
inc
ss
jae
das
fisub
adc
(bad)
es
mov
rcl
bnd
mov
arpl
sbb
or
xor
mov
adc
es
and
inc
loopne
inc
add
mov
dec
mov
jmp
in
mov
jb
outs
scas
repnz
mov
(bad)
mov
mov
and
xchg
push
dec
sbb
sub
(bad)
outs
retf
neg
imul
push
sbb
(bad)
cmp
cmp
pop
mov
mov
sub
mov
push
dec
mov
jl
jg
mov
push
pop
or
lods
loopne
jle
jno
mov
sti
jb
jp
adc
sar
mov
xchg
ss
ret
sub
push
adc
mov
sub
in
jge
or
int
lods
sahf
cwde
or
jle
test
sbb
pop
cmp
or
mov
imul
and
arpl
cli
inc
adc
mov
cmc
inc
mov
in
cmp
les
cmp
leave
jne
cmp
mov
push
repz
out
mov
ss
popf
arpl
rcl
and
push
jo
inc
xchg
and
lock
or
xchg
sar
mov
out
mov
cmp
mov
jp
jmp
xchg
cmps
(bad)
inc
or
iret
jle
in
push
xor
xchg
(bad)
mov
cdq
jl
mov
adc
xchg
das
mov
lds
mov
jecxz
(bad)
cmc
xchg
call
xor
(bad)
nop
je
rcr
outs
repnz
call
adc
push
pop
mov
or
inc
shl
push
cmp
repz
retf
xchg
sub
test
or
xor
xchg
movs
jnp
and
xchg
xchg
loopne
inc
cmp
shr
pop
push
pop
add
mov
bound
adc
jae
sahf
test
xchg
in
jmp
fs
sbb
stos
mov
lahf
dec
inc
mov
lea
or
inc
sub
mov
push
cmps
xor
fldenv
daa
mov
loop
nop
xlat
ror
mov
mov
jmp
dec
push
les
xor
xchg
cmp
adc
repnz
adc
cli
sub
mov
mov
xor
in
adc
int
inc
mov
xchg
repz
add
add
mov
xchg
shl
jae
xor
fdivr
dec
popa
loope
mov
push
push
or
outs
xchg
test
(bad)
pop
lock
sub
jae
pop
jb
pop
pop
mov
mov
call
xchg
in
push
mov
pop
(bad)
sbb
jl
retf
add
inc
jle
sub
cmp
and
mov
outs
cmp
sbb
lods
cli
aas
pop
call
mov
inc
or
dec
and
enter
jmp
clc
out
ds
pop
aad
add
repz
fld
xor
and
popf
mov
mov
xchg
loope
mov
ficom
sub
cmp
aaa
adc
cmp
sub
or
icebp
repz
sbb
dec
xchg
inc
shl
in
idiv
pop
pop
loop
pop
pop
jle
clc
into
jl
xlat
push
lods
lea
leave
pushf
retf
pop
inc
std
loope
(bad)
lods
aad
aas
sbb
lock
push
adc
jns
mov
push
in
ins
push
add
pusha
(bad)
aaa
test
outs
sti
inc
mov
xlat
push
(bad)
aas
rol
pop
(bad)
shl
ins
or
xchg
mov
(bad)
out
dec
loope
aam
push
ret
or
pop
dec
sbb
cld
push
xor
fwait
lods
in
xor
adc
retf
cdq
lea
pop
push
shl
mov
dec
lock
inc
mov
mov
or
pushf
or
into
test
xchg
xor
cmp
jmp
fdiv
icebp
jno
int
xchg
jb
fwait
(bad)
jge
lods
mov
inc
push
inc
imul
lea
enter
cs
mov
jmp
inc
test
enter
(bad)
mov
xchg
mov
push
cld
sub
dec
dec
mov
in
arpl
inc
add
hlt
mul
dec
mov
loop
sahf
mov
(bad)
mov
add
pop
inc
int3
xchg
xchg
sahf
outs
mov
scas
jle
xor
addr16
scas
ds
or
mov
sbb
cld
mov
dec
rol
fld
cmp
mov
out
scas
mov
mov
pop
fadd
ins
mov
ins
inc
xor
or
mov
popf
in
test
push
std
cmps
cdq
out
mov
add
adc
push
fst
int
jmp
scas
sbb
dec
sti
call
push
cmps
cmp
push
push
cmp
inc
sub
jne
ja
into
xchg
add
add
push
pop
pop
rep
push
adc
xor
aam
add
jmp
call
cmp
gs
or
inc
popa
adc
dec
loopne
imul
std
push
cmp
jp
inc
cmp
enter
cmp
and
jmp
mov
jns
scas
ins
(bad)
sbb
iret
or
lahf
sbb
shl
xchg
inc
lods
mov
gs
(bad)
jns
fistp
imul
and
jmp
scas
jecxz
sub
xchg
(bad)
push
int
push
dec
mov
hlt
arpl
jge
fcomp
push
dec
dec
je
loop
adc
push
in
add
cld
in
mov
add
cs
dec
cwde
mov
pop
pushf
dec
sub
mov
gs
or
mov
fimul
fprem
pop
cdq
out
int
loope
ror
data16
cld
jne
xchg
sbb
cmp
(bad)
jmp
out
rcr
mov
sbb
jmp
mov
push
lock
cmp
aad
mov
mov
inc
jmp
loop
xchg
rol
movs
ins
mov
mov
fwait
cmp
icebp
call
xlat
mov
dec
cmp
into
pop
mov
dec
rcl
leave
mov
out
jecxz
cmc
pop
lock
lock
scas
xor
sbb
outs
cmp
lock
mov
inc
int3
jae
test
push
pop
pushf
adc
adc
sub
neg
iret
mov
sbb
or
fistp
xchg
sbb
sahf
pand
ins
jge
retf
and
sub
outs
aad
jnp
push
mov
and
jns
in
sbb
(bad)
pop
jb
inc
inc
sbb
sbb
jnp
or
lds
loope
jge
adc
sbb
gs
movs
mov
cmp
and
mov
mov
mov
addr16
sahf
retf
jbe
mov
movs
xlat
xchg
aas
lea
mov
test
sar
sbb
je
shl
loopne
scas
pop
(bad)
js
mov
mov
dec
retf
push
loope
mov
sbb
jnp
shl
(bad)
mov
inc
mov
push
aam
sar
xor
ja
fisttp
data16
lahf
dec
nop
cmp
push
sbb
sbb
xor
xchg
add
mov
inc
cmps
cli
and
or
loopne
push
ja
add
mov
scas
xchg
test
and
or
jbe
jb
mov
out
sub
je
inc
jae
pop
xor
cmp
cmp
inc
bound
scas
call
adc
add
pushf
mov
mov
cwde
xchg
xor
or
xor
mov
cmp
jne
icebp
out
call
cmp
ins
inc
cmp
cmp
movs
xor
sbb
sar
cs
dec
sub
ret
data16
pop
pop
ins
and
rol
sbb
fmulp
movs
dec
mov
retf
cdq
jle
jmp
jns
fdiv
and
mov
fst
aad
pusha
xchg
bnd
push
movs
stc
test
ins
sub
sbb
into
inc
lods
fsubr
es
repnz
push
(bad)
push
or
in
mov
jg
pop
stos
dec
das
mov
(bad)
dec
cmps
dec
dec
inc
jmp
adc
std
fisubr
or
add
call
call
dec
xchg
mov
push
push
faddp
xchg
mov
push
jecxz
dec
shl
inc
xchg
cmp
add
jmp
push
jns
push
loopne
inc
push
adc
xlat
imul
and
sbb
(bad)
add
mov
mov
mov
adc
std
or
adc
mov
xor
xchg
inc
imul
scas
pop
or
mov
cmc
imul
gs
fmul
pop
lock
push
mov
(bad)
retf
int
push
inc
ins
scas
ret
(bad)
jl
leave
fst
das
cmps
jae
mov
test
lds
xor
adc
pop
xor
jmp
mov
dec
dec
sbb
pop
xchg
mov
sub
dec
enter
div
out
repz
lds
and
out
aad
cmp
xchg
imul
or
xchg
xor
cmc
stos
sbb
iret
mov
mov
scas
pop
int3
pushf
mov
pop
mov
pop
push
and
iret
mov
add
mov
movs
pop
mov
fwait
mov
and
add
lahf
sub
mov
(bad)
das
xlat
test
mov
sub
add
xor
fisttp
mov
lods
adc
fsubr
dec
add
sar
adc
call
ds
into
add
mov
push
repz
adc
add
jne
das
fdiv
(bad)
dec
inc
aaa
mov
test
les
jp
push
pop
dec
xor
js
fld
jo
out
ds
xchg
adc
or
popa
in
pop
or
adc
sar
daa
fisubr
jae
es
xchg
out
xor
xchg
pop
ss
or
xor
dec
mov
popf
fmul
nop
pop
out
cwde
mov
into
popf
outs
outs
push
ja
push
or
stc
in
lods
xchg
ja
mov
jge
and
and
sub
xlat
pop
addr16
jae
push
in
ja
inc
ds
adc
call
pop
dec
xor
(bad)
in
icebp
popf
fs
mov
xor
pop
xchg
shr
out
mov
clc
das
ins
jmp
out
sti
bound
push
push
(bad)
push
pop
call
popa
add
leave
dec
cmp
not
fsubrp
cmps
xchg
leave
arpl
xchg
mov
mov
pop
cmp
mov
icebp
pop
sub
and
sub
adc
adc
lock
push
outs
not
mov
push
jmp
aas
loope
sbb
xchg
add
adc
je
fs
dec
pop
aad
cli
es
adc
(bad)
ja
sbb
xchg
mov
pop
aas
loop
loope
ins
xlat
pop
jg
sbb
jmp
adc
push
inc
adc
cmp
cmp
jo
or
inc
xor
out
jmp
idiv
push
or
mov
(bad)
stc
das
outs
cmps
loope
(bad)
stc
jmp
inc
xor
ins
inc
repnz
cwde
fs
push
out
jo
pop
sbb
xor
and
(bad)
push
nop
sbb
adc
mov
mov
stc
adc
jb
fbstp
aad
(bad)
(bad)
mov
cmps
push
sar
cs
cmp
cmps
adc
xor
movs
add
push
dec
push
mov
pop
sub
cmps
pop
jmp
hlt
or
shl
lock
fild
daa
sar
and
std
shr
cs
sub
push
add
pop
jl
push
inc
std
dec
(bad)
fimul
mov
dec
sub
aad
in
push
inc
js
xchg
sub
pop
aad
xchg
or
jno
scas
ss
mul
icebp
mov
repz
push
aas
test
pop
xchg
div
ins
jne
arpl
scas
rol
pop
mov
xchg
jns
mov
push
mov
int
js
mov
xchg
cmp
push
shl
push
jo
sbb
jne
push
push
xchg
add
daa
jge
ins
sti
inc
mov
movs
sbb
test
inc
clc
fimul
test
test
(bad)
mov
retf
ucomiss
mov
jb
adc
sbb
push
mov
adc
dec
sub
mov
test
mov
jbe
lock
inc
cmp
mov
push
in
ins
jl
in
fsub
aaa
dec
dec
test
mov
add
mov
cmp
repnz
fcom
enter
loopne
(bad)
call
cdq
xor
jecxz
xchg
in
scas
pop
sbb
sar
mov
scas
lahf
inc
mov
pushw
cmps
jg
dec
les
shl
test
es
xchg
in
jle
in
dec
(bad)
mov
push
in
gs
xchg
cwde
imul
xchg
jl
xor
jmp
push
int3
inc
sub
pop
mov
cmp
sar
mov
dec
inc
push
scas
pop
aas
pop
pop
sub
pop
jnp
addr16
pop
fst
frstor
hlt
fcom
iret
add
xchg
out
cmp
in
cmps
test
ins
sbb
jg
pushf
mov
out
in
ds
sbb
pop
sbb
mov
add
(bad)
clc
push
pop
clc
cmp
in
das
adc
loopne
jle
pusha
mov
jecxz
aad
repnz
and
push
stos
cmp
add
pop
add
dec
mov
cmc
push
data16
jnp
fwait
jmp
test
nop
fisubr
rcr
mov
out
sub
pop
mov
sub
push
and
xchg
push
or
pop
lahf
or
inc
cdq
test
stos
repz
pop
fmul
jns
repnz
ins
mov
xor
xchg
ins
xchg
dec
scas
mov
not
ret
jae
sbb
out
shr
cwde
mov
(bad)
dec
jne
xor
inc
jne
jge
add
dec
pop
xchg
stos
sbb
and
aam
loope
loopne
aaa
fstp
dec
adc
cmps
lods
pushf
mov
retf
cmc
or
push
jecxz
movs
ds
xchg
cmp
lea
pop
jo
mov
or
inc
aad
jecxz
mov
sbb
push
std
xchg
add
inc
jmp
jbe
cwde
mov
add
push
stos
leave
mov
pusha
lahf
push
mov
cmp
enter
popa
in
jmp
xchg
jp
adc
cdq
mov
pop
add
into
cwde
aad
jl
sahf
sub
ds
push
je
je
mov
sub
xchg
and
and
mov
inc
std
sub
mov
lds
and
into
sub
sub
out
push
jbe
test
vaddsubps
jmp
inc
push
sub
mov
inc
das
lods
gs
sub
xor
arpl
pop
push
push
and
pop
xor
jmp
push
push
push
adc
fwait
das
bound
push
push
icebp
sahf
jne
push
mov
adc
jmp
cmp
pop
fldz
rcl
popf
scas
mov
out
mov
test
xchg
test
fild
adc
mov
push
xchg
inc
xor
sbb
mov
das
xchg
adc
into
push
add
not
aaa
fst
arpl
inc
sub
ja
out
dec
in
loope
adc
pop
(bad)
push
pop
call
adc
xor
jge
xor
fs
test
or
aas
pop
ins
pop
push
nop
sar
cdq
mov
push
jle
pop
bound
in
sbb
lock
push
and
jnp
mov
and
(bad)
ror
and
fnsave
idiv
int
sahf
or
pop
xchg
test
retf
(bad)
dec
jae
std
pop
loop
daa
cmps
outs
(bad)
mov
iret
out
rcr
push
xlat
mov
and
and
push
cmp
add
enter
repnz
mov
inc
dec
inc
xchg
inc
jae
movs
les
sbb
in
xchg
push
pop
aam
fwait
test
dec
inc
pop
leave
pusha
sbb
or
in
jbe
add
or
push
or
aad
add
in
ins
xlat
cmp
cmps
outs
imul
call
xchg
in
sub
mov
adc
icebp
push
mov
imul
mov
sbb
fisttp
imul
dec
(bad)
imul
push
cwde
mov
je
cmp
adc
add
(bad)
sub
jecxz
cmp
and
push
sar
mov
fld
cmp
pop
add
movs
push
or
scas
sar
ss
aas
jnp
call
loope
(bad)
mov
iret
js
mov
je
cld
test
jae
dec
fsqrt
pop
aaa
hlt
jne
sub
or
xlat
jle
mov
dec
adc
add
mov
retf
inc
sub
je
dec
ss
popa
leave
inc
ins
xchg
adc
dec
scas
jge
or
pop
jl
add
(bad)
dec
adc
imul
ins
aad
(bad)
jae
hlt
outs
ins
sbb
dec
(bad)
imul
imul
in
inc
lods
fucomip
(bad)
mov
hlt
dec
das
adc
or
push
fsubr
pop
nop
in
ret
sub
gs
add
ror
or
jne
test
mov
fcom
loop
dec
xchg
xchg
in
aaa
adc
ds
jae
scas
sub
hlt
movs
pop
int3
loope
lods
rcr
pop
xchg
mov
sahf
push
jnp
inc
pop
scas
fdivr
and
fadd
xor
jo
in
inc
inc
or
xlat
std
or
push
mov
sahf
loop
dec
aam
adc
inc
movs
and
push
loop
push
out
mov
movs
icebp
movs
sahf
push
je
jmp
(bad)
xchg
push
(bad)
push
xchg
aad
popf
pop
cld
(bad)
mov
xor
mov
inc
sbb
cmp
test
(bad)
push
xor
(bad)
xor
outs
stos
inc
outs
mov
int3
call
cli
xor
rol
rcl
jae
sbb
mov
aam
retf
sub
push
dec
test
pop
cld
fcomip
cmc
jo
dec
popf
fldenv
jo
bound
jmp
ficom
cdq
push
int3
js
mov
rcl
and
fcomp
int3
arpl
jnp
ja
mov
loope
rcl
push
add
(bad)
cmp
hlt
mov
loopne
fst
mov
fcmovbe
mov
jne
(bad)
dec
jb
or
mov
clc
adc
call
cmp
je
movs
and
inc
fsub
loop
ja
aas
enter
nop
sbb
xchg
adc
or
out
mov
lock
daa
mov
mov
mov
nop
lahf
mov
or
jle
xlat
rcl
xchg
and
adc
xchg
int
mov
jg
inc
adc
xchg
adc
jmp
jbe
push
rol
add
es
mov
mov
dec
mov
test
outs
xchg
and
sbb
adc
jmp
jge
retf
inc
add
xor
or
or
mov
push
xor
fisub
das
jg
sbb
jae
xchg
fadd
jmp
inc
jno
cwde
inc
pop
jmp
push
jp
or
mov
push
mov
ret
or
or
imul
(bad)
cmps
outs
xor
out
test
aaa
fs
or
aaa
mov
push
xchg
jge
repnz
popf
add
add
sahf
retf
mov
arpl
(bad)
cli
movs
pop
or
mov
shl
out
or
mov
or
cmp
in
movs
jno
pusha
xchg
jmp
add
add
add
inc
sbb
pop
pop
mov
jge
xor
jne
lahf
sub
fwait
jecxz
jne
into
push
hlt
stos
shl
nop
cmp
js
mov
xor
fcmovu
test
inc
mov
dec
and
push
pushf
cld
xchg
lods
je
rcl
mov
jb
lea
xchg
or
add
fisubr
jae
aaa
loopne
in
pusha
(bad)
or
int3
ja
(bad)
cmp
enter
aad
and
ret
(bad)
pop
push
mov
in
mov
out
mov
push
hlt
jb
jno
dec
dec
mov
add
pop
mov
fistp
gs
adc
pop
jae
ja
in
es
imul
inc
loopne
movs
xlat
cmp
lods
jns
hlt
sbb
mov
jbe
cmp
add
push
data16
aam
mov
retf
push
mov
jno
push
mov
enter
(bad)
cmp
adc
jle
(bad)
mov
or
fsub
add
jo
and
jo
mov
paddsw
sub
test
(bad)
gs
sbb
push
mov
sbb
push
jns
mov
lds
jb
out
ins
lock
mov
mov
pusha
inc
mov
adc
(bad)
push
inc
adc
mov
pop
lods
dec
add
lods
fs
adc
(bad)
mov
push
in
mov
push
pop
jns
mov
fs
sub
movs
test
adc
sar
retf
bound
cld
shl
cmp
jecxz
push
sub
push
xchg
ds
lahf
lock
call
inc
addr16
mov
jo
and
xchg
(bad)
int3
sub
rcr
push
int3
aad
xchg
test
dec
adc
addr16
xor
ds
loop
adc
sti
(bad)
dec
or
adc
adc
cmps
mov
mov
arpl
inc
loope
jmp
repnz
std
sbb
int
or
inc
pop
lahf
xor
mov
pop
retf
les
fcomi
stc
adc
xchg
popa
(bad)
or
jmp
or
adc
dec
(bad)
mov
es
daa
loope
pusha
inc
add
icebp
add
cmc
pusha
mov
sar
pop
and
xlat
adc
mov
dec
inc
in
fxam
sbb
dec
(bad)
jge
repz
or
nop
or
(bad)
inc
dec
jnp
jecxz
sbb
sbb
jne
push
cwde
cdq
add
pop
aad
jae
add
(bad)
lahf
jmp
cmp
mov
ds
dec
push
aam
push
rcl
arpl
int
aaa
xchg
call
xchg
call
(bad)
sub
jle
lock
and
arpl
pop
nop
fisub
es
xchg
mov
int3
shl
sub
scas
enter
mov
mov
scas
lea
sub
in
sti
das
repnz
call
sub
rcr
mov
mov
daa
xchg
pop
lock
lods
cs
adc
shr
fsub
sub
scas
ror
xchg
and
xchg
popf
pop
loope
cmp
jns
push
retf
jbe
cs
es
cmc
cmc
aam
jl
xchg
or
sbb
push
pop
add
jbe
push
cmps
imul
in
cmp
popf
xchg
push
pop
cmp
imul
xchg
call
add
push
retf
push
adc
mov
cli
dec
mov
pop
fistp
aaa
iret
push
movs
test
ins
mov
sub
int
jmp
xchg
neg
sub
jecxz
loop
cld
push
lock
cmp
loop
xlat
aam
push
or
shr
loopne
or
or
daa
pop
mov
fsubp
(bad)
add
mov
add
loop
ins
repnz
jo
mov
call
or
xchg
shr
mov
pop
in
jp
mov
int3
fnstenv
mov
or
mov
inc
mov
mov
sub
pop
cmp
sub
stos
add
jae
cmp
xchg
cdq
xchg
mov
(bad)
push
jnp
sbb
mov
push
cwde
sahf
mov
pop
sub
xor
and
shl
scas
in
icebp
shr
ret
test
pop
enter
xchg
cli
sbb
sbb
stos
daa
push
mov
jnp
test
add
lock
in
mov
pop
scas
xlat
(bad)
push
adc
xor
lods
inc
xchg
add
jae
test
(bad)
mov
pop
cmp
pop
out
pop
cmps
adc
out
mov
jno
mov
nop
xor
jns
pop
add
inc
ret
xchg
inc
adc
(bad)
(bad)
je
loope
sbb
add
push
jns
js
sbb
nop
aas
(bad)
pop
iret
lds
adc
in
mov
loop
arpl
(bad)
mov
iret
loop
or
xor
repnz
sub
imul
aaa
dec
sbb
fwait
xchg
shr
out
addr16
es
leave
and
mov
scas
(bad)
icebp
push
sub
adc
xlat
pop
fnstcw
and
lea
jp
pusha
inc
stos
(bad)
sub
pop
aad
inc
test
mov
into
stos
es
repnz
jns
push
mov
xchg
pop
cwde
push
cmps
dec
jno
out
cdq
dec
dec
or
sub
(bad)
das
ret
and
cmps
cmps
sahf
fstp
mov
cwde
sbb
rcl
cwde
movs
xor
aas
sbb
movs
mov
inc
xor
cmp
daa
jo
mov
adc
retf
push
fsub
jmp
pop
loop
and
arpl
fnsave
iret
inc
test
fisttp
push
hlt
mov
cwde
retf
scas
jae
pop
sbb
neg
out
xchg
mov
sub
push
mov
mov
aam
xor
rol
xchg
arpl
jg
rol
call
cmp
stc
rcr
(bad)
jmp
dec
loope
sub
mov
and
sub
adc
push
fwait
sbb
popf
mov
popf
jbe
addr16
pop
xchg
(bad)
movs
adc
jl
(bad)
out
pushf
lds
mov
and
loopne
add
or
mov
repz
and
dec
push
add
(bad)
arpl
test
push
ret
mov
imul
mov
dec
aad
rcl
mov
test
mov
sub
cmp
pushf
adc
xchg
jbe
add
retf
xchg
push
call
cmc
stos
movs
xchg
pop
repnz
imul
repz
shl
dec
sub
xchg
pop
(bad)
jecxz
das
(bad)
push
xor
mov
je
sbb
and
jecxz
cmp
cmp
dec
hlt
jge
xchg
adc
ja
shr
repnz
add
jl
jl
mov
jno
inc
mov
iret
pop
pop
retf
lds
fwait
loope
sub
fsub
mov
mov
sub
std
mov
dec
adc
pop
mov
jae
push
int3
jae
data16
data16
pop
mov
add
mov
and
or
sub
jno
or
ds
mov
test
sub
jbe
pop
cmps
and
cmp
push
test
xor
inc
cmc
jo
push
arpl
jae
cmp
jecxz
push
aas
xchg
mov
xchg
fadd
and
cmps
jae
mov
bound
adc
test
in
mov
in
and
mov
mov
fwait
pop
out
cmp
pop
pop
mov
xchg
ja
inc
push
mov
shl
push
xor
adc
xor
stos
or
retf
ffreep
jmp
in
es
in
stos
icebp
cmp
scas
push
inc
mov
loop
cdq
gs
cmps
push
lahf
shr
push
pop
inc
fdivr
xor
mov
outs
lock
je
aad
lds
js
xor
and
or
ins
push
dec
xchg
jge
xlat
cmp
ret
add
enter
jnp
jns
push
scas
lahf
cwde
fimul
cmp
scas
cmps
inc
push
pop
ja
shl
mov
inc
mov
dec
mov
cmp
pop
push
or
ins
popf
movs
mov
fwait
pop
jl
dec
cmp
nop
retf
(bad)
in
mov
into
sahf
or
jecxz
adc
and
push
xor
mov
rcl
dec
imul
mov
out
loope
mov
cs
test
(bad)
cdq
fidivr
sub
jmp
(bad)
jge
cs
mov
pop
jp
jo
xor
push
retf
ret
test
test
adc
in
out
sbb
pop
movs
and
nop
xor
inc
or
(bad)
pop
outs
xor
push
fisttp
addr16
mov
in
or
test
lea
sti
or
jecxz
inc
cmp
sbb
jmp
add
adc
adc
mov
add
test
scas
movs
in
add
fnstsw
(bad)
adc
fs
push
push
dec
lods
inc
in
jmp
mov
push
jge
in
mov
xor
retf
iret
aad
mov
cmp
test
pop
mov
pop
sbb
loopne
aam
dec
push
das
xchg
mov
in
test
mov
sbb
repnz
push
sub
cmp
les
aaa
xor
imul
push
mov
xchg
into
xchg
xchg
aaa
dec
add
inc
mov
xchg
sub
dec
hlt
add
or
sbb
xchg
shr
out
push
xchg
aaa
and
or
retf
jns
cwde
jecxz
ins
out
or
daa
sub
mov
cmps
cwde
jbe
stos
aad
cli
das
int3
sbb
imul
(bad)
cmps
ror
push
adc
mov
inc
and
js
jge
iret
and
and
fisttp
std
push
inc
mov
loope
jge
or
mov
add
out
dec
cmc
ds
clc
pop
cmps
dec
scas
push
in
push
jle
ret
ss
cmp
pop
cmps
div
aam
add
inc
mov
inc
add
mul
pop
pop
mul
push
pop
jnp
sbb
arpl
sahf
mov
inc
out
or
popf
adc
loope
mov
cmp
retf
xor
aaa
inc
sbb
rcr
push
inc
pop
mov
inc
int
mov
shl
loope
jg
ins
mov
retf
inc
(bad)
jle
or
inc
pusha
pop
call
ror
pop
stc
cmp
lods
sub
gs
in
xchg
jbe
out
movs
pop
call
inc
sub
or
imul
jnp
loop
popf
mov
fs
cmp
and
lea
fld
jge
fidivr
adc
div
idiv
ror
and
arpl
sub
js
popa
(bad)
dec
cmp
sbb
sar
lahf
or
sub
(bad)
jno
or
xor
mov
sub
aas
jne
fistp
dec
aad
mov
ror
ds
and
out
arpl
push
jge
enter
add
dec
(bad)
cmps
cmp
inc
cli
hlt
fimul
stos
mov
inc
pop
loop
stc
and
add
push
loop
inc
or
mov
cmp
je
sbb
loope
sub
push
lea
mov
(bad)
(bad)
(bad)
dec
dec
pop
and
mov
(bad)
icebp
xchg
hlt
shr
push
imul
sub
sbb
cmp
push
aam
mov
lods
std
test
xlat
cmp
sbb
push
push
addr16
jle
push
inc
cs
imul
adc
and
scas
scas
pop
push
shr
jg
sti
or
dec
pop
sub
daa
sub
(bad)
outs
cmp
cmps
jno
jns
(bad)
pop
(bad)
out
lock
aaa
cwde
xor
jnp
scas
fdivr
mov
jg
cmps
cmc
scas
stos
jge
aam
adc
push
(bad)
cmps
mov
adc
sti
xchg
into
leave
fistp
icebp
xchg
xchg
mov
jo
idiv
shl
xchg
inc
pop
pop
jge
pusha
or
mov
mov
push
pop
je
xlat
lahf
neg
or
aas
xor
or
adc
dec
pop
dec
call
movs
shl
js
xacquire
in
jmp
shl
xor
loopne
shl
and
dec
cld
xchg
ds
and
mov
push
xlat
pushf
(bad)
adc
push
test
scas
popa
add
and
jp
xor
jns
cmp
mov
cmps
popa
out
push
or
(bad)
or
(bad)
pop
lods
add
pop
retf
dec
fisub
arpl
mov
cmp
push
mov
mov
jmp
cli
cmp
pop
sbb
push
sub
cmp
xor
aad
int3
mov
pop
ins
rol
clc
jle
pop
adc
push
pushf
push
and
call
add
add
and
arpl
(bad)
test
push
cli
hlt
das
mov
adc
lods
ficomp
fistp
addr16
mov
mov
mov
mov
xchg
inc
retf
in
mov
inc
mov
sbb
or
fwait
out
cmp
mov
push
stos
dec
out
sar
out
out
dec
sub
jne
sub
cmp
retf
sub
xchg
jp
sbb
pop
push
jmp
pop
jg
push
test
js
std
mov
in
shl
in
gs
adc
mov
pop
add
xchg
cmp
cmp
rcr
int3
cli
movs
clc
mov
or
imul
movs
out
sbb
inc
pop
outs
es
xor
fwait
enter
pop
into
cmp
loope
mov
aad
jle
dec
xchg
add
xlat
sub
scas
sbb
push
mov
das
mov
sub
xchg
daa
xchg
jmp
fdivr
ins
movs
mov
xor
dec
adc
jb
fistp
or
inc
push
mov
pop
pop
nop
rol
push
test
add
push
(bad)
jne
icebp
mov
ret
popf
movsx
and
mov
xchg
xor
jne
(bad)
in
push
mov
es
aaa
pop
fwait
xor
test
jl
sbb
retf
or
mov
xchg
push
enter
(bad)
cmp
and
mov
xor
and
sbb
inc
or
sbb
fst
js
adc
fmul
cmps
jae
xchg
xchg
dec
add
clc
leave
mov
push
push
mov
xor
outs
aaa
out
cdq
add
mov
cdq
push
pop
and
mov
xor
jb
retf
mov
lds
lds
addr16
and
sahf
inc
out
sub
test
int3
add
add
scas
xchg
and
(bad)
mov
mov
jo
(bad)
pop
test
int
sti
cmp
out
push
push
sbb
mov
stc
retf
mov
add
push
mov
and
enter
int3
lahf
sbb
mov
ret
aad
xor
stos
daa
sub
test
inc
pushf
test
sub
xor
cmp
int
int3
(bad)
cmp
ret
pop
in
dec
dec
xor
push
xor
pop
sahf
dec
data16
cmp
xchg
xor
fadd
ins
cmc
fistp
retf
ins
cmps
pop
mov
pop
mov
push
add
sub
add
sar
add
mov
cmps
pusha
shr
ret
push
inc
div
das
loopne
ret
mov
and
sub
test
pop
fist
push
pop
add
adc
xchg
test
add
mov
ds
shld
pop
xlat
bound
movs
shl
push
sahf
and
in
adc
adc
cmp
push
pop
push
mov
mov
inc
out
sub
out
xor
inc
sub
repnz
cli
es
imul
mov
push
jno
xchg
ret
out
jp
cwde
jb
and
rol
cmp
xchg
mov
shr
adc
mov
mov
in
loop
outs
mov
adc
in
mov
sbb
sub
dec
lea
mov
inc
cmp
daa
jne
stos
inc
aam
xchg
xor
cmps
cvtpi2ps
mov
lea
push
(bad)
push
std
dec
adc
loopne
mov
lds
add
shl
jmp
fwait
and
mov
std
movs
sub
retf
dec
enter
sub
repz
(bad)
mov
scas
aas
xor
adc
ss
daa
mov
ja
in
pop
mov
mov
xchg
add
sub
push
adc
jmp
in
jbe
push
sar
leave
(bad)
adc
or
lock
and
inc
sub
add
ret
arpl
sub
mov
mov
rol
pop
cdq
dec
movs
sub
push
movs
push
cld
sbb
adc
dec
jl
mov
pop
addr16
jp
jmp
push
or
jmp
repz
cmps
xor
shl
add
int3
dec
xchg
arpl
xor
jp
and
in
icebp
adc
test
retf
dec
xor
aaa
adc
xchg
mov
ds
adc
mov
(bad)
xchg
retf
dec
and
push
ja
jb
mov
dec
pop
sbb
inc
jnp
jp
cmp
retf
mov
sti
adc
mov
xchg
mov
cmc
or
pop
inc
rcr
push
mov
adc
mov
xor
push
inc
jmp
mov
mov
dec
mov
pop
mov
stos
sar
push
jl
das
lods
fsub
lea
adc
scas
sahf
add
out
in
sti
cmps
jno
cld
call
out
push
xor
enter
data16
mov
imul
dec
fdivr
jmp
fisub
adc
add
in
lock
enter
inc
fcmovnb
rol
jg
xlat
sub
test
dec
aaa
ret
(bad)
pop
(bad)
loop
pushf
pop
fwait
sbb
cdq
scas
mov
stos
mov
sti
fisubr
sbb
xchg
xchg
or
mov
cli
sub
mov
cdq
cli
dec
arpl
aad
adc
adc
retf
call
std
div
xlat
aaa
jl
in
js
or
dec
push
jb
mov
out
fbld
push
in
mov
push
movs
not
test
enter
scas
(bad)
mov
cmp
jmp
je
add
dec
jg
mov
cld
cld
add
xchg
nop
add
int
out
mov
stc
adc
xor
loop
dec
ja
cmp
jmp
pop
daa
fild
cmps
call
mov
ror
outs
inc
add
jmp
ins
aas
mov
xchg
adc
mov
out
sub
adc
out
xlat
push
push
lock
pop
sub
rol
pop
fcmovbe
jle
xor
imul
lahf
xor
dec
ins
mov
mov
xchg
std
lahf
dec
(bad)
pop
nop
push
mov
popf
out
shl
test
(bad)
adc
pop
xchg
in
mov
push
les
arpl
push
repnz
sub
iret
clc
(bad)
std
mov
enter
outs
push
popa
or
sub
adc
xchg
adc
cmps
cmp
mov
mov
jo
lds
xchg
data16
lahf
inc
fadd
popa
fs
push
pop
mov
jbe
mov
xlat
(bad)
adc
es
shr
add
fadd
aaa
inc
movs
adc
inc
dec
add
inc
(bad)
ret
cmps
(bad)
call
pop
fbstp
arpl
arpl
fnstsw
xchg
rcl
outs
sti
das
adc
cld
out
cmp
cdq
fst
lock
lods
(bad)
push
lahf
mov
popf
add
mov
pop
(bad)
cld
fdiv
dec
add
pop
into
in
xchg
movs
cli
into
ins
rol
rcr
iret
cdq
pop
pop
push
test
mov
add
and
int3
xor
mov
or
imul
test
xchg
cmp
xor
js
xchg
mov
std
pop
sar
xor
ins
add
sar
sbb
sti
inc
jno
fsubr
cmc
(bad)
or
pop
dec
cmp
enter
outs
inc
mov
icebp
pop
dec
add
push
push
aas
or
outs
cmc
sbb
cld
cld
push
jo
xchg
xor
inc
jmp
icebp
out
gs
and
sub
lea
fs
and
in
and
adc
cmova
aas
xor
xlat
ja
pushf
push
cmp
out
jb
ds
jmp
mov
add
mov
cmp
mov
je
lods
test
adc
xchg
or
call
cmp
cmp
(bad)
ror
ins
loope
popa
sub
cdq
jo
stc
add
push
scas
sub
ret
mov
shr
or
loope
xor
add
stos
int
retf
sbb
test
out
mov
xchg
lods
pop
pmaddwd
cdq
cwde
popa
repz
pop
sbb
xor
and
and
jb
xor
xor
bswap
cmp
js
call
scas
ja
xor
mov
popf
and
xlat
and
xchg
in
adc
xchg
push
arpl
pop
pop
pop
mov
movs
sub
retf
data16
jbe
out
pusha
cmp
inc
test
scas
xchg
mov
out
imul
leave
dec
bound
xchg
outs
pushf
sahf
add
mov
jmp
aas
enter
ja
mov
push
or
repz
jbe
pop
jo
fidivr
mov
push
mov
pushf
bound
add
movs
pushaw
scas
fidivr
xchg
js
cmp
test
jmp
dec
lods
cmp
push
stos
mov
mov
mov
das
or
retf
call
out
dec
jl
sbb
push
xor
inc
cmps
cmp
(bad)
out
shl
addr16
xor
add
adc
lods
cli
stc
jg
add
ds
add
xchg
fisttp
popf
in
ins
js
dec
pop
scas
leave
(bad)
iret
hlt
push
adc
stos
mov
cmps
dec
mov
or
mov
xchg
and
stc
sar
(bad)
test
cdq
add
jae
jbe
pushf
cmp
daa
cmp
jne
mov
icebp
scas
xchg
les
mov
shl
xor
push
adc
data16
clc
or
jne
push
leave
and
nop
jp
lahf
push
push
dec
mov
fmul
sbb
push
(bad)
dec
sub
movs
mov
ror
fidivr
movs
sbb
inc
lahf
ret
data16
cmp
fdiv
rcr
fist
(bad)
mov
outs
fs
movd
in
imul
jecxz
pop
xchg
or
push
push
mov
jg
adc
sar
call
sbb
add
push
jmp
mov
adc
mov
pusha
jbe
jmp
cli
(bad)
js
imul
sbb
jno
dec
aas
jle
lds
inc
ds
daa
ficom
push
test
xor
push
adc
mov
scas
xchg
dec
aaa
leave
ss
out
(bad)
ins
ja
shl
mov
push
jmp
sub
fsubr
mov
clc
fcomp
xlat
data16
ss
mov
xor
jno
push
adc
cmp
dec
iret
stos
adc
mov
or
test
rcr
enter
push
add
cmps
jecxz
cld
mov
loope
xchg
push
out
and
or
push
mov
(bad)
call
mov
daa
jno
aam
jo
test
loopne
in
loope
outs
(bad)
(bad)
pop
ret
fptan
pop
arpl
movs
adc
test
mov
lods
ins
nop
and
inc
adc
scas
test
popa
mov
push
jo
sub
push
imul
rol
stos
(bad)
xor
lock
sub
cmp
jnp
pop
add
mov
(bad)
int
and
push
ds
mov
enter
rol
or
retf
or
push
xor
jo
xchg
mov
inc
aas
clc
ins
dec
jg
lock
bound
inc
lahf
or
arpl
mov
mov
loope
dec
ret
pop
imul
mov
fimul
lock
into
inc
xchg
stos
imul
outs
cmp
scas
cmp
pusha
in
mov
outs
retf
add
call
dec
or
int3
sbb
xchg
nop
stc
sahf
lds
cmp
enter
adc
jne
jg
cmps
xor
lods
mov
aad
pop
push
cmps
mov
cdq
or
sahf
rcl
add
in
scas
and
ficom
mov
push
call
jne
fldcw
and
mov
dec
push
ret
cmps
retf
pop
(bad)
in
movs
outs
add
inc
xchg
xor
int3
leave
and
std
pop
jb
or
pop
retf
cmp
fwait
mov
cmp
mov
inc
cwde
out
cmps
add
inc
setg
sahf
xor
jno
add
popf
push
push
icebp
pop
rcr
push
jle
retf
out
scas
pop
lea
cmps
xchg
hlt
pop
jnp
test
fs
pop
adc
nop
cmp
xchg
jle
xchg
(bad)
cmp
fwait
sbb
mov
int3
add
out
and
ret
xlat
dec
cmp
adc
dec
in
xor
mov
retf
in
mov
or
mov
xchg
popf
push
jns
inc
mov
fwait
adc
dec
(bad)
leave
repz
inc
call
or
pop
xor
and
mov
dec
dec
xlat
push
xchg
dec
and
jae
mov
xlat
pop
bound
(bad)
test
cmp
loopne
mov
ficom
out
pop
in
repz
add
sub
aad
mov
stc
int
call
pop
inc
daa
scas
jno
(bad)
sbb
pop
lea
dec
and
ss
jo
in
mov
(bad)
xchg
push
cmp
push
pop
mov
jnp
mov
punpcklwd
xchg
add
dec
mov
mov
(bad)
(bad)
iret
dec
inc
mov
or
jmp
stos
sbb
or
xchg
inc
sbb
popf
jbe
push
xor
cmp
inc
mov
movs
in
push
jmp
test
cmps
call
mov
mov
jns
add
frstor
xchg
xchg
(bad)
scas
xlat
pushf
popf
je
test
mov
dec
int
sbb
ja
mov
pop
fstp
or
push
mov
jge
ds
jle
out
cli
add
je
mov
jg
pop
or
ins
jbe
loopne
in
add
add
add
add
pop
sbb
inc
mov
out
cdq
jle
pop
dec
imul
aad
jmp
jle
ret
pop
mov
cmps
cmp
pop
jne
es
mov
xchg
push
(bad)
je
and
cmps
jge
xchg
mov
out
inc
iret
test
neg
mov
stos
cmps
mov
(bad)
addr16
mov
and
or
cld
cmps
sub
cld
ss
nop
jo
cmp
test
ror
xlat
cmp
push
or
fcomi
mov
les
test
cmps
sub
dec
adc
neg
sar
pop
add
mov
in
and
cmp
or
and
stos
cdq
sub
cmp
sbb
int
push
push
fcom
mov
(bad)
sahf
xor
adc
cmp
sti
popf
addr16
push
and
sbb
cmc
arpl
retf
mov
inc
adc
(bad)
hlt
sub
dec
add
je
cmp
imul
pop
push
nop
lahf
and
fdivr
stos
fcmovu
inc
enter
daa
inc
mov
pop
inc
or
adc
mov
xchg
loope
pop
jmp
aam
icebp
repnz
mov
jmp
push
jmp
inc
fs
lahf
repz
xor
push
outs
and
xor
std
mov
xor
add
sar
movs
mov
or
retf
mov
adc
and
add
jns
out
(bad)
in
enter
jae
mov
movs
fmulp
push
lahf
test
jecxz
cmp
test
sti
es
push
repz
into
pusha
xchg
adc
dec
rcr
jnp
sbb
jmp
add
pushf
stos
ss
dec
sbb
out
mov
pop
cmps
jmp
cmp
pop
in
jno
ins
mov
sbb
mov
xor
jnp
std
(bad)
cli
imul
repz
mov
mov
pop
enter
aad
xor
fld
in
in
add
and
mov
bound
out
fcmovu
mov
dec
inc
fs
mov
lods
push
push
mov
test
xchg
test
int3
dec
push
and
mov
mov
iret
and
mov
jo
(bad)
aaa
inc
loop
dec
pushf
sti
add
sbb
repz
inc
mov
or
sbb
daa
xor
scas
retf
dec
mov
lea
inc
xchg
mov
imul
push
sub
pop
mov
or
or
xor
or
pop
int
mov
gs
pop
(bad)
fst
aas
lods
jg
in
addr16
in
jmp
add
ss
fld
jbe
push
add
inc
test
aad
and
jmp
push
ret
ror
jp
in
movs
jb
int
sub
movs
inc
imul
test
xor
push
and
cmps
fsubr
stos
movs
xor
cmp
mov
or
xor
sbb
out
mov
pusha
mov
test
or
lock
pop
dec
mov
push
shl
xchg
je
and
call
call
lds
mov
xor
sahf
int
inc
shr
jno
or
in
xor
xchg
inc
js
mov
scas
neg
jb
inc
stos
cmp
sahf
cmpxchg
jmp
or
stos
scas
inc
nop
jne
mov
jns
xor
jnp
pop
sbb
jmp
daa
xchg
inc
cmc
push
(bad)
sahf
jmp
inc
mov
icebp
jmp
sub
inc
js
jp
shl
sub
mov
add
test
or
cmp
cmp
in
push
cmp
push
mov
test
mov
dec
push
ret
push
adc
loopne
rol
pusha
mov
sub
jmp
push
jo
mov
sbb
dec
jg
sbb
(bad)
cmp
jns
sbb
mov
retf
dec
push
mov
ret
repz
cmp
packssdw
imul
dec
sbb
mov
sbb
es
sbb
mov
sbb
push
adc
out
add
mov
inc
cmps
sub
mov
and
cmp
ss
xchg
push
clc
xchg
jb
aad
inc
mov
dec
test
jo
and
cmp
(bad)
imul
dec
mov
stos
or
push
cmp
cmp
dec
iret
fstp
retf
pop
mov
scas
sahf
fmul
aaa
shl
rcr
lgs
sub
aam
mov
(bad)
sbb
mov
or
pop
(bad)
into
stos
jnp
dec
pop
xchg
loopne
lahf
or
js
mov
imul
sub
lock
inc
add
mov
addr16
jmp
(bad)
int
imul
cmp
pop
pop
mov
sbb
push
jne
pop
mov
xor
fld
xchg
cmp
mov
and
in
dec
jl
aaa
iret
and
hlt
shl
inc
jmp
movs
idiv
rol
push
repnz
(bad)
adc
and
cmp
outs
es
add
lods
addr16
pop
dec
lahf
mov
in
push
pop
loope
retf
jo
sbb
cmp
lea
mov
sub
repnz
fadd
rcr
je
out
dec
push
jbe
xchg
mov
(bad)
das
lahf
addr16
loope
pop
test
in
xor
sahf
int3
iret
out
je
mov
jbe
and
mov
pop
(bad)
and
jmp
jp
pushf
inc
add
mov
mov
ins
test
call
pop
jge
xor
sbb
mov
retf
out
mov
pop
sbb
pop
cli
push
sbb
xor
add
fwait
sbb
movs
adc
jae
push
or
inc
out
pop
nop
(bad)
jle
xchg
adc
cmps
sub
les
inc
and
ror
enter
stos
fs
lods
lods
fwait
dec
hlt
sub
call
pop
lods
loop
xor
xchg
jne
lods
mov
fcomip
arpl
cld
add
add
cmp
mov
(bad)
mov
xor
mov
jmp
imul
(bad)
jmp
dec
out
jne
pushf
in
(bad)
fldcw
imul
test
mov
adc
pop
aaa
mov
sub
pop
jmp
je
aas
fadd
gs
in
pop
add
nop
enter
push
nop
cs
movs
in
pop
daa
test
repz
(bad)
jns
mov
push
mov
mov
in
pop
int3
mov
aas
arpl
mov
bnd
jns
mov
fldcw
shl
sbb
and
scas
jae
dec
loope
movs
jmp
ins
jmp
daa
pop
movs
inc
adc
inc
mov
std
sub
shr
imul
out
call
lds
push
and
mov
dec
cmp
pop
mov
mov
stos
call
call
xor
sbb
cmps
cmp
aad
jae
dec
add
push
jmp
xchg
aam
rcl
mov
aaa
add
mov
mov
and
add
ins
push
xchg
mov
dec
add
lock
or
adc
(bad)
jmp
push
xor
mov
cmps
add
lea
add
lea
test
test
push
mov
sub
aas
aad
push
mov
mov
and
add
std
inc
dec
cs
sbb
out
pusha
jnp
lock
mov
mov
out
fstp
xchg
int3
gs
xor
jecxz
in
mov
xchg
ret
lea
pop
das
int
jne
xchg
push
clc
mov
scas
rol
jl
jmp
adc
fisub
jge
mov
jb
fbstp
or
push
mov
sahf
xor
rep
xchg
dec
xor
pop
adc
outs
ja
fiadd
or
and
pop
dec
xchg
dec
cmp
add
sbb
sbb
pushf
retf
loop
mov
je
mov
cmp
cmp
xor
and
out
and
nop
cs
mov
out
push
adc
data16
xor
inc
mov
pop
(bad)
stc
adc
ret
sub
and
xor
pop
mov
nop
xor
gs
push
mov
dec
xor
inc
pop
jns
push
pusha
(bad)
in
ds
test
fwait
cmp
jno
jecxz
push
pop
test
ins
ds
inc
fld
cvtps2pi
inc
mov
loop
lds
scas
int
arpl
xchg
add
fisttp
sbb
cwde
int3
gs
inc
popf
ins
test
sbb
shl
xchg
sub
mov
mul
dec
sbb
aaa
jl
cmp
jmp
fcom
leave
sti
xor
fldenv
popa
dec
push
jmp
mov
add
std
pop
pushf
xlat
jecxz
add
leave
loope
retf
dec
shr
sbb
cmp
mov
push
or
repz
retf
mov
add
dec
adc
scas
dec
and
or
out
test
sub
add
and
gs
xchg
and
xor
test
mov
mov
mov
xlat
add
mov
jmp
fst
faddp
cmps
add
scas
xor
jp
jnp
pop
in
inc
scas
inc
mov
inc
mov
cmp
add
or
and
xor
aaa
test
push
inc
inc
sbb
sbb
xchg
sahf
inc
shl
adc
jp
fs
test
mov
aad
fucomi
xchg
xchg
fild
xor
in
adc
xor
mov
cmp
and
bnd
push
pop
fimul
fadd
dec
js
in
inc
push
(bad)
rcl
mov
scas
std
shl
xor
inc
aam
ss
scas
ret
in
out
outs
add
xchg
mov
mov
test
(bad)
fadd
or
dec
inc
and
mov
cwde
ins
jns
fdivr
pop
xor
mov
sbb
mov
repz
pop
dec
in
gs
fidivr
xchg
xor
neg
mov
js
xor
lods
push
adc
mov
ror
je
xchg
jne
(bad)
ror
and
fs
sub
int
mov
push
pop
sub
paddusb
jmp
pop
movs
in
test
and
popf
and
ins
scas
movs
mov
addr16
pop
sbb
mov
cli
stos
push
adc
mov
repnz
add
jmp
push
push
jmp
loopne
movs
mov
icebp
adc
lods
imul
cmp
enter
pop
inc
pop
sbb
(bad)
loop
push
(bad)
push
xor
fstp
adc
les
dec
jmp
and
add
cmp
sbb
dec
fisubr
jmp
pushf
leave
inc
cmc
std
xor
add
stos
xchg
aam
or
sti
or
sub
jmp
sar
mov
push
cmps
(bad)
aad
xchg
fwait
dec
jmp
rcl
cdq
imul
xchg
aaa
jg
jmp
pop
js
cmps
stc
les
outs
mov
add
push
lock
mov
xor
fld
test
sahf
pop
jmp
test
int
jge
push
mov
inc
cld
jnp
inc
adc
mov
mov
sar
jl
jbe
fs
dec
lods
pusha
mov
imul
cli
add
jmp
shufps
(bad)
sahf
sar
jbe
jo
popa
iret
add
test
push
aad
sti
xchg
pusha
dec
push
enter
adc
or
repnz
fistp
pushf
cmp
mov
pop
push
and
push
dec
jecxz
fsub
icebp
dec
shr
push
mov
shl
dec
and
sbb
movs
dec
xor
dec
xor
pop
stos
(bad)
xlat
xor
sbb
inc
test
int3
push
(bad)
into
lds
mov
xchg
sub
je
adc
xor
jmp
mov
push
jecxz
ret
cs
push
cmp
mov
js
out
pop
adc
lock
xor
enter
xchg
ficom
cmp
pop
imul
retf
cli
(bad)
hlt
call
data16
stos
inc
int
jnp
mov
jmp
mov
add
scas
retf
xchg
or
rol
xor
inc
mov
dec
mov
or
fisttp
iret
sub
push
mov
popa
sub
cmp
movs
enter
loope
retf
jp
pushf
xchg
cmps
sti
sbb
stos
scas
xor
cmp
in
fs
rcr
shl
cmp
ror
xchg
fidivr
loopne
pop
or
jle
adc
xchg
(bad)
les
xor
in
inc
push
leave
(bad)
cmp
cs
inc
sar
mov
and
xor
cmp
mov
fsubr
ds
fs
mov
(bad)
jmp
jge
or
ret
stos
std
outs
daa
test
push
in
or
fdivr
pusha
shl
sub
aas
mov
enter
scas
outs
(bad)
push
js
pushf
shl
call
sahf
lahf
and
sub
jbe
xchg
cwde
sub
inc
push
mov
xor
in
arpl
lods
add
jle
jecxz
sub
stc
dec
sub
mov
inc
(bad)
sub
mov
xchg
add
inc
and
and
mov
or
aas
mov
sub
test
out
pop
cmps
cs
inc
mov
sub
(bad)
pop
jecxz
sbb
stc
sub
fsubr
sbb
pop
cmp
lds
sahf
add
pop
sub
jae
or
cmp
mov
pusha
inc
leave
fstp
jp
retf
add
sub
call
mov
xor
sbb
imul
pop
sub
xchg
je
and
cdq
sub
sub
shl
outs
stos
out
scas
fstp
mov
dec
pop
jp
jnp
mov
call
mov
jmp
(bad)
xor
in
dec
pop
and
dec
xor
out
out
stc
and
out
lods
lods
xchg
pop
inc
mov
dec
pusha
cli
push
pop
shl
jmp
sbb
or
test
(bad)
leave
rol
xor
mov
call
test
adc
jg
in
lods
pusha
inc
inc
pop
sub
mov
mov
mov
fcmovne
popa
pop
pop
imul
cmp
call
xor
gs
mov
dec
cli
stos
imul
fwait
mov
repz
mov
jns
pop
push
mov
lea
stc
inc
sub
lahf
ror
add
inc
pop
dec
movs
adc
(bad)
jmp
sub
push
pop
in
mov
sub
mov
mov
jno
jb
push
rol
jmp
mov
scas
dec
and
out
gs
lods
xchg
inc
or
jbe
aas
mov
repnz
shr
inc
inc
imul
popa
into
sbb
sbb
call
adc
lahf
inc
push
and
xchg
xchg
neg
lods
add
dec
lahf
xor
leave
adc
(bad)
scas
pop
add
movs
pop
xor
sbb
clc
mov
mov
or
fmul
or
scas
xor
dec
ficomp
xor
xchg
pop
lea
call
out
cmp
sbb
bound
jmp
call
or
sbb
(bad)
mov
xsaveopt
add
add
xchg
xor
rol
in
in
leave
lahf
inc
xchg
adc
pop
les
mov
sub
xor
(bad)
fs
mov
out
mov
or
sub
jno
in
mov
loopne
add
sbb
(bad)
or
jae
jmp
and
rcl
mov
ins
sar
mov
pop
push
(bad)
jl
dec
shl
les
xchg
mov
ret
inc
jp
jmp
mov
fld
inc
lock
push
lods
mov
nop
sbb
xor
pop
in
mov
bnd
mov
mov
fst
test
cmps
out
cdq
jge
sub
ins
popa
retf
int3
pushf
jae
hlt
ss
mov
aas
in
dec
retf
cmc
push
inc
cmc
inc
inc
jae
loope
mov
mov
jb
mov
cdq
rcl
push
adc
stc
push
adc
push
mov
sbb
leave
push
dec
repz
sbb
addr16
push
sub
mov
or
test
shr
inc
pop
xchg
(bad)
test
jmp
mov
adc
pop
xchg
aam
inc
lea
mov
xor
das
and
mov
lahf
fcomp
adc
sub
jno
ds
jl
add
inc
push
and
jge
jo
pop
mov
sahf
mov
idiv
std
sbb
and
jmp
and
aaa
mov
retf
les
sti
xchg
loop
mov
mov
cmp
ins
outs
mov
sub
stos
cmp
das
(bad)
sar
dec
rol
data16
add
sti
cmp
cmps
(bad)
ja
mov
nop
int
outs
repz
scas
xchg
push
lock
xchg
pop
jmp
adc
xchg
add
sbb
jb
sbb
lahf
inc
add
jp
mov
mov
sub
aam
push
inc
outs
aad
out
clc
rcr
icebp
jge
sbb
movs
outs
add
cld
inc
shr
inc
fcmovnbe
shr
int
and
loop
(bad)
and
cmp
and
mov
mov
fild
push
inc
dec
jge
test
jmp
mov
(bad)
cmp
cmp
pop
aas
adc
pop
rcl
ror
adc
cmp
rcr
or
(bad)
lahf
stc
adc
dec
sub
mov
adc
xchg
ja
adc
sbb
inc
retf
inc
fstp
adc
mov
push
inc
jecxz
mov
jns
scas
push
sbb
or
pop
pop
lods
xchg
stos
call
sbb
cli
les
sti
sbb
out
out
mov
repz
(bad)
xchg
mov
sbb
pop
cmps
je
test
pop
jge
push
mov
imul
sbb
push
jmp
inc
aad
gs
cmp
jmp
das
inc
sub
push
dec
std
pop
mov
(bad)
mov
sbb
rcr
jb
add
push
or
aam
mov
cmc
adc
add
(bad)
in
sbb
cdq
pop
add
xlat
ins
add
or
push
fistp
adc
jo
inc
xchg
scas
sbb
inc
sti
xchg
pop
add
push
add
xor
xlat
fsub
pop
sub
cld
fdiv
mov
cmp
leave
mov
jg
jnp
push
inc
lds
xor
addr16
int
mov
aam
jmp
push
lods
dec
out
adc
add
sbb
mov
xchg
inc
ret
push
pop
icebp
jns
xor
jo
(bad)
popa
mov
shl
repnz
aaa
data16
cmps
jmp
lea
mov
icebp
rcl
mov
add
push
inc
mov
(bad)
push
adc
xchg
pop
xchg
and
or
clc
dec
iret
sub
aam
aaa
int
push
jl
stos
or
ins
jns
fimul
outs
mov
jp
cs
xlat
jns
sbb
in
fisubr
mov
mov
inc
repnz
fwait
push
in
out
mov
xchg
xchg
lock
daa
inc
outs
rcl
inc
call
pop
dec
cmp
xor
movs
fst
mov
mov
out
ins
or
mov
adc
inc
das
jp
ja
cwde
fidiv
jno
lods
sbb
push
jmp
add
ror
jno
out
stos
imul
pop
sub
pop
xchg
out
pop
call
or
out
sub
ja
pop
leave
inc
cmc
sub
(bad)
dec
and
sbb
cmp
stc
sbb
out
mov
inc
movs
xchg
inc
mov
mov
imul
cs
enter
push
adc
xor
stos
std
int3
or
mov
leave
fld
inc
sti
or
clc
mov
xor
jnp
mov
imul
mov
cmp
ins
and
int3
call
jl
adc
or
inc
lock
sbb
inc
xor
sbb
retf
sub
push
fadd
xchg
into
jp
in
sti
popa
leave
test
daa
lea
xor
or
data16
retf
xor
xchg
xor
add
call
ins
dec
shr
lock
dec
mov
mov
test
daa
sbb
pop
(bad)
js
xchg
xchg
ss
jg
jge
cs
and
mov
es
pop
mov
loope
loope
xor
jo
test
(bad)
cli
jb
icebp
jo
push
in
das
ja
cmc
iret
mov
mov
push
jge
out
or
pop
mov
sbb
and
pop
xor
push
push
stos
sub
and
push
mov
add
inc
add
sub
xor
cli
sahf
jno
les
out
jp
mov
pop
mov
leave
xor
fs
cmp
dec
cwde
sbb
je
and
adc
mov
push
cmp
movs
stc
mov
leave
jo
jae
jecxz
sar
pop
ret
aam
jl
push
retf
int3
repz
mov
jbe
mov
add
scas
add
ss
imul
clc
dec
test
add
xchg
fadd
mov
arpl
push
xor
fwait
das
and
pop
push
adc
pop
and
mov
arpl
adc
shl
mov
jne
or
xor
sub
setno
inc
(bad)
arpl
jmp
or
lods
pop
inc
cwde
aad
pop
jp
push
lahf
adc
sub
sbb
scas
je
and
mov
sub
data16
sub
stos
add
sbb
xor
jb
(bad)
into
repnz
test
push
shr
les
mov
and
push
ins
add
inc
hlt
je
jmp
xchg
cmps
and
mov
lds
mov
inc
ret
mov
xlat
repz
fst
push
and
loop
lods
imul
sbb
dec
sbb
in
inc
pop
test
mov
enter
nop
jle
leave
cmp
popfw
mov
jp
sti
fs
mov
pop
out
jnp
imul
stos
mov
lods
jbe
inc
adc
sub
jmp
add
inc
mov
and
mov
(bad)
xchg
pop
(bad)
frstor
add
sub
lahf
dec
and
cli
sbb
cld
dec
imul
sbb
mov
mov
test
sbb
sahf
add
xlat
xchg
jmp
pop
lods
repz
retf
jno
push
pusha
cmp
inc
call
jle
push
jmp
inc
mov
retf
sbb
mov
out
mov
lds
popf
dec
out
xchg
sub
icebp
mov
pop
mov
add
outs
aas
stos
mov
add
mov
ds
in
mov
arpl
rcr
imul
(bad)
repz
pop
add
push
sbb
adc
or
in
bound
add
jns
inc
fiadd
cld
mov
inc
cmp
dec
pop
mov
inc
add
movs
arpl
mov
or
ja
mov
push
inc
pop
cld
int3
call
mov
sub
leave
push
jno
cwde
ds
stos
mov
fcom
out
push
mov
cmp
shr
jae
sbb
and
pop
ss
iret
sub
mov
push
mov
into
leave
jae
test
repz
cmp
sbb
mov
xor
outs
pusha
sub
sbb
inc
or
ss
adc
push
(bad)
imul
and
je
rcl
popf
addr16
add
shr
test
inc
inc
es
mov
pop
retf
popa
neg
add
xchg
jl
push
test
lods
cmp
and
push
div
cmp
paddsb
push
cmps
pop
clc
pop
lods
xchg
jmp
pop
stos
dec
xor
mov
push
jne
call
sbb
imul
shl
and
and
jmp
sahf
into
iret
xchg
cmp
das
jbe
xchg
mov
fistp
and
retf
mov
cmp
std
sbb
mov
jmp
dec
out
add
or
leave
jg
push
popa
les
imul
adc
xchg
sub
stos
sbb
pop
push
push
jl
out
sbb
mov
stc
mov
adc
push
mov
movs
add
jmp
fidivr
jge
loope
not
iret
call
sub
pop
add
(bad)
cs
sub
neg
push
test
sbb
int3
jecxz
lock
pop
xchg
lea
mov
fdivr
stos
or
dec
push
js
leave
or
aaa
scas
xchg
fisub
bound
mov
arpl
dec
inc
(bad)
cmp
xor
sbb
jg
dec
aam
movs
push
and
inc
adc
clc
ficomp
sbb
js
fcom
retf
icebp
mov
mov
into
ds
lods
adc
mov
adc
xchg
enter
popa
shr
(bad)
lods
cmp
movs
fisub
stos
loop
xor
ret
sub
pop
outs
lods
pop
inc
stos
xor
mov
sub
push
test
push
cdq
xchg
mov
and
xchg
push
mov
rcl
xor
mov
cs
addr16
jle
or
imul
dec
sub
pop
call
(bad)
sahf
mov
iret
daa
loop
(bad)
mov
out
mov
inc
mov
xor
ds
mov
nop
sbb
call
mov
pop
mov
pop
pushf
cmps
popf
js
cmp
das
mov
dec
sbb
mov
add
pushf
shr
cdq
popf
fsubr
xchg
or
inc
imul
sbb
dec
jno
jns
pop
mov
jp
add
mov
mov
or
sub
rol
xor
sar
dec
and
(bad)
bound
pop
cmp
imul
pop
hlt
cmp
fs
adc
and
rcr
sar
loope
inc
dec
cmp
cmp
push
or
aad
inc
outs
and
sbb
add
dec
ins
jp
inc
hlt
sub
in
retf
enter
dec
in
and
cwde
mov
mov
pop
xchg
call
xchg
ret
loopne
lahf
cmc
push
cmp
dec
inc
mov
mov
out
push
into
sub
xlat
js
add
cmp
cmp
xchg
ret
(bad)
or
sub
lock
mov
aam
or
mov
add
ins
or
mov
fistp
repz
outs
and
mov
scas
add
mov
push
dec
mov
(bad)
(bad)
out
out
fdiv
inc
cmp
jl
arpl
mov
inc
lods
std
inc
lahf
xchg
popf
mov
sbb
sti
fidiv
inc
call
mov
bound
push
int
mov
and
mov
repnz
stos
out
fwait
jns
imul
jp
jg
sbb
nop
pop
dec
cmp
mov
ds
mov
arpl
(bad)
out
(bad)
push
std
outs
xor
sbb
in
ins
mov
(bad)
fisub
xlat
aam
scas
mov
lods
int
sub
inc
jno
data16
mov
mov
cmps
(bad)
outs
push
or
or
aaa
push
(bad)
loope
dec
out
outs
out
fadd
add
sbb
aad
aam
sbb
sahf
test
pop
rcr
xchg
shl
ret
bound
sbb
test
imul
fs
aas
mov
int
jnp
ror
cmp
shr
adc
inc
inc
je
sub
int
loopne
push
push
cmp
cmps
lea
mov
or
(bad)
fs
outs
mov
loope
call
bound
mov
mov
or
imul
push
jecxz
dec
mov
ret
or
pop
jmp
dec
mov
test
sbb
sbb
mov
xchg
cdq
jmp
aam
add
push
dec
loop
ja
mov
jbe
pop
jmp
lods
pop
ins
daa
inc
leave
jne
dec
dec
pop
jp
loopne
adc
mov
xchg
inc
cmc
cli
(bad)
mul
pusha
iret
push
das
leave
cmp
mov
xchg
in
mov
dec
std
sar
cmps
mov
push
or
stc
jecxz
je
icebp
dec
add
xor
push
out
and
add
pushf
mov
pop
aas
xor
lds
cmp
xor
push
mov
inc
jecxz
pop
fmul
jnp
add
dec
add
xor
sbb
stos
leave
jg
int3
add
daa
and
inc
mov
div
push
lock
mov
and
hlt
mov
push
pop
push
(bad)
fbld
xor
sbb
mov
mov
loope
iret
popa
inc
inc
mov
into
enter
dec
js
popa
inc
cmc
sub
or
cdq
lahf
(bad)
jb
mov
das
push
call
loop
pop
mov
mov
inc
imul
push
sbb
push
dec
or
mov
retf
mov
les
call
scas
out
test
jae
in
jbe
xchg
lea
mov
outs
out
test
mov
je
and
lods
xchg
mov
das
(bad)
out
out
xor
jo
std
fmul
aad
out
stos
xchg
fdivr
jns
sbb
add
iret
icebp
mov
add
or
int
jmp
ds
icebp
jae
mov
jns
test
inc
push
mov
add
mov
sbb
repnz
pop
or
fsubr
(bad)
sub
xchg
xchg
mov
(bad)
pop
movs
daa
shl
xlat
test
and
out
xchg
js
mov
sbb
mov
mov
mov
fadd
adc
mov
xchg
scas
cs
and
cld
xor
lods
jno
dec
rol
pop
(bad)
test
and
neg
mov
xchg
leave
xor
stc
cmp
out
jbe
fs
test
cmp
inc
iret
jmp
std
js
in
(bad)
int
fisubr
popa
cmps
inc
adc
jmp
sbb
iret
pop
jp
push
push
push
ins
mov
(bad)
xchg
leave
xchg
adc
and
ret
mov
mov
adc
sbb
xchg
mov
shl
jp
inc
sbb
jae
add
xor
gs
call
retf
jns
xlat
adc
inc
movs
cmp
test
imul
outs
push
lods
push
jmp
inc
iret
mov
or
cmp
ins
jmp
xchg
ds
xor
push
ret
inc
mov
cmps
pusha
pop
cmp
das
push
dec
(bad)
jae
or
and
adc
add
xor
retf
dec
push
mov
test
xchg
shl
sbb
jl
dec
dec
lods
lahf
sbb
lds
in
cli
adc
sub
push
xor
adc
mov
mov
or
ss
in
outs
inc
dec
arpl
jg
scas
push
mov
sahf
and
push
add
add
dec
add
mov
push
outs
mov
mov
fldenv
and
and
push
stos
stc
inc
xchg
pop
xchg
sbb
sti
inc
sub
dec
int3
inc
test
das
or
cmp
mov
into
push
retf
nop
mov
ds
xchg
test
aaa
xchg
jg
imul
xchg
cdq
gs
or
bound
pop
xchg
adc
xor
jg
cdq
push
jno
iret
sbb
xor
cdq
sti
mov
out
push
hlt
and
pop
lods
mov
ret
aad
fnstenv
cmps
cwde
test
stos
sbb
imul
hlt
inc
mov
loope
loopne
xchg
pusha
mov
cmp
cmp
fist
stc
mov
xchg
sub
aaa
les
mov
sub
sar
mov
cdq
in
pushf
sub
mov
pop
ret
in
xchg
cmps
fsincos
fidivr
loop
popa
cld
setno
retf
jnp
sub
sub
mov
mov
movs
hlt
(bad)
outs
mov
push
jo
add
arpl
test
in
cmps
mov
mov
stc
stos
cwde
push
aaa
xchg
jb
pop
xchg
pop
daa
push
push
fs
mov
pop
popf
inc
ja
adc
push
push
lods
sub
cdq
nop
fcomp
sbb
dec
lods
das
gs
mov
mov
shl
mov
test
cmp
movs
daa
mov
rcl
idiv
ror
out
scas
jecxz
test
loopne
(bad)
lods
push
loopne
pop
push
std
xor
int3
or
push
adc
pop
push
imul
pop
call
call
mov
cmps
jg
inc
pushf
sub
leave
sbb
jb
test
out
jne
mov
jno
xchg
xor
sbb
xor
push
dec
mov
test
cmp
dec
mov
ret
xor
out
stc
or
pop
sti
mov
sub
mov
cwde
xchg
pop
adc
fild
outs
sbb
and
test
lock
cs
fistp
mov
mov
(bad)
loop
pusha
dec
pop
enter
movs
jbe
xlat
(bad)
xor
xchg
scas
jp
imul
cmp
jge
fneni(8087
jns
jmp
test
mov
xchg
xor
pop
ins
push
in
jl
std
scas
movs
xor
(bad)
sbb
xchg
sbb
push
mov
push
mov
sbb
sub
mov
xchg
div
mov
in
mov
outs
pop
pusha
ret
jne
movs
sub
imul
icebp
shr
adc
mov
jnp
scas
sbb
push
xchg
repz
mov
in
push
out
mov
and
mov
repnz
jbe
inc
jp
hlt
jl
xor
addr16
repnz
out
mov
mov
scas
and
push
pushf
sahf
add
and
or
cmp
dec
pop
clc
jae
loope
inc
call
or
(bad)
lea
enter
scas
shl
movs
test
cmp
out
outs
retf
and
dec
das
cmc
cmp
outs
js
add
jne
(bad)
idiv
cdq
sub
inc
daa
(bad)
push
imul
xor
mov
push
aaa
xor
jmp
mov
hlt
xchg
sub
mov
push
movs
jnp
xor
lahf
pusha
ja
in
rcr
neg
push
add
movs
pop
xor
(bad)
inc
dec
test
sub
cmp
cmp
adc
clc
in
lods
iret
adc
mov
mov
add
cmp
push
bound
inc
mov
pop
sub
sbb
inc
mov
stos
dec
ror
mul
mov
jo
pop
(bad)
(bad)
nop
adc
inc
aam
and
sbb
mov
(bad)
add
adc
sub
fldcw
mov
scas
or
in
inc
int3
and
jle
jae
fwait
daa
pop
dec
xor
push
push
shl
push
test
sbb
imul
sti
jge
ja
hlt
aad
rcl
jge
adc
dec
push
test
and
or
ret
fwait
mov
xor
retf
mov
cmc
outs
inc
pusha
mov
xchg
leave
jnp
mov
inc
jg
in
jge
or
out
sub
pushf
shl
sub
jl
call
dec
sub
pop
out
es
std
lods
mov
div
cmp
mov
fistp
int3
sub
cmc
xchg
mov
mov
pop
mov
fmul
inc
arpl
and
pop
push
xchg
pop
inc
int3
ret
pop
lods
push
enter
test
pop
sub
bound
pop
data16
pushf
and
data16
loopne
call
inc
and
xor
addr16
(bad)
push
stos
jl
sti
and
lahf
fimul
mov
je
call
xchg
mov
in
push
xchg
(bad)
jae
add
mov
or
(bad)
adc
push
std
xor
dec
es
cmp
push
mov
sbb
repz
jmp
lea
sub
into
call
jne
sub
jmp
mov
stos
sbb
xor
jns
adc
inc
adc
pushf
ret
test
push
aaa
xor
inc
mov
adc
fistp
mov
mov
fiadd
lds
fisttp
or
cs
mov
pop
int
xor
jnp
mov
jae
adc
stc
push
push
lahf
pushf
jne
fmul
je
and
stos
call
scas
cmp
jmp
sbb
sub
int3
add
sub
mov
or
stos
fstp
add
arpl
sbb
cmps
into
aad
pop
xchg
mov
fidiv
daa
jg
pop
and
fist
and
por
xchg
(bad)
push
add
sub
hlt
(bad)
jl
sbb
adc
inc
push
cmp
call
movs
jecxz
test
sbb
pusha
push
pop
mov
xor
fld
or
push
popa
sbb
rol
cmp
in
popf
dec
in
sub
fnstsw
add
push
mov
jae
sub
jmp
inc
sbb
popa
sbb
add
add
addr16
lahf
aad
cmp
loopne
jae
(bad)
stc
je
clc
cmps
clc
pop
mov
mov
or
sbb
lds
scas
or
mov
cmc
rcr
leave
inc
adc
movs
(bad)
mov
sbb
push
rol
xor
or
lods
push
or
inc
push
int3
cmp
stos
icebp
cmp
jnp
push
fadd
movs
jb
cmp
xchg
pop
sbb
cmp
out
push
cmc
dec
mov
dec
out
dec
sub
mov
dec
ss
adc
jno
inc
cmp
inc
pop
lods
data16
adc
shr
adc
js
mov
(bad)
push
enter
and
outs
push
pop
test
pop
jge
sub
pop
(bad)
push
adc
in
and
xor
xor
pop
in
mov
neg
scas
ins
int
loop
ins
sbb
in
adc
dec
pusha
int3
pop
or
xchg
sub
adc
dec
js
add
mov
sbb
mov
or
fs
rcl
xchg
and
sbb
xor
dec
data16
cmps
rcr
sub
fwait
aaa
das
nop
and
and
(bad)
jl
or
dec
adc
push
dec
cmp
out
push
or
mov
dec
xchg
call
inc
sbb
loop
fmul
mov
xor
xlat
int
adc
xor
adc
dec
movs
data16
std
xor
inc
or
icebp
js
xlat
xchg
cmp
jnp
enter
inc
int3
js
xchg
mov
xchg
and
fdiv
or
inc
and
loop
sub
adc
and
test
pop
(bad)
mov
sbb
bound
mov
pop
es
aas
scas
inc
jg
retf
push
and
and
fcmovb
sar
ins
retf
sbb
inc
sub
aas
xchg
and
push
xchg
jge
shl
mov
(bad)
outs
adc
dec
mov
and
xor
daa
call
shl
(bad)
dec
out
add
inc
xlat
mov
loope
rcr
adc
mov
loop
int3
lahf
jge
or
jno
mov
aam
sub
cmps
sbb
jmp
and
into
cwde
mov
std
fdivr
ins
pop
jnp
mov
dec
inc
into
sub
retf
cld
jp
jmp
outs
mov
dec
mov
in
xor
inc
gs
inc
inc
mov
(bad)
stos
es
adc
in
pop
gs
loope
aad
cli
fiadd
mul
or
aaa
and
mov
push
(bad)
mov
(bad)
mov
jg
adc
sbb
(bad)
stc
bndldx
cmp
(bad)
lahf
and
shr
pop
mov
mov
mov
movs
cmp
and
popa
jnp
jmp
cmc
gs
push
mov
setae
inc
test
imul
push
outs
or
outs
clc
les
ss
jmp
lahf
jp
addr16
jle
sahf
sbb
mov
mov
add
push
test
iret
add
mov
xchg
out
stc
inc
inc
sub
daa
mov
add
xchg
(bad)
or
and
loop
dec
cs
aam
jmp
xchg
hlt
fwait
sub
addr16
in
adc
out
(bad)
mov
aam
mov
hlt
mov
cld
jmp
jnp
or
add
out
pop
sbb
shr
stos
fmul
xchg
and
sub
sar
mov
mov
(bad)
cmps
or
mov
dec
test
pushf
mov
cmp
mov
xchg
push
sahf
jl
push
add
or
inc
out
jl
cli
mov
les
stos
out
mov
enter
add
lods
add
adc
cmp
rcl
inc
scas
jecxz
imul
mov
push
mov
in
inc
push
retf
ins
rcl
inc
or
pop
push
mov
inc
nop
scas
or
movs
jae
clc
mov
test
idiv
cmp
retf
std
popf
sub
or
push
add
xchg
jg
fstp
adc
jae
gs
add
mov
addr16
loope
pop
outs
fiadd
sbb
jmp
push
pop
or
(bad)
cdq
push
out
into
idiv
out
xchg
add
(bad)
push
cmps
or
sbb
(bad)
iret
aam
add
xchg
xchg
pushf
xor
repnz
shr
and
sub
call
aad
es
loopne
cmc
jb
leave
mov
jl
push
push
push
call
outs
pusha
cmp
movs
pushf
rcl
xchg
adc
test
movs
bound
aad
test
int
add
int3
sub
sbb
xlat
pop
loope
pop
fisubr
test
pop
and
mov
int
jge
inc
add
push
xor
imul
cld
xor
test
push
pop
mov
jmp
stos
jno
neg
lods
pop
mov
retf
mov
aas
add
dec
sti
cmp
adc
cmp
inc
in
push
cmps
jge
sub
mov
and
lods
(bad)
test
cmps
sar
add
jmp
and
(bad)
push
mov
les
inc
jns
push
mov
mov
loop
sub
or
stos
mov
adc
es
ror
lds
mov
jmp
hlt
test
cmps
mov
sbb
jle
xor
ret
sbb
cmps
adc
add
out
push
hlt
lds
mov
ret
fs
jp
rol
imul
std
gs
sub
jb
jnp
push
push
movs
or
aas
xchg
std
lods
scas
int
add
and
sub
xor
pop
pop
cld
hlt
cmp
jae
mov
idiv
(bad)
jns
outs
mov
sbb
(bad)
mul
int
iret
stc
mov
movs
fidiv
(bad)
mov
or
jae
inc
sub
jge
jecxz
mov
dec
jecxz
jns
and
cli
ret
pushf
lods
cmc
mov
mov
out
repnz
jae
leave
push
std
js
xor
bound
or
neg
ret
adc
mov
jecxz
test
test
dec
sbb
call
and
mov
aad
adc
mov
(bad)
aaa
xchg
fst
stc
inc
jle
and
and
scas
enter
xor
jmp
mov
repnz
jns
pop
fistp
add
sbb
mov
add
jnp
stc
adc
out
inc
push
test
out
inc
hlt
sub
popa
js
test
outs
inc
std
sbb
inc
mov
mov
test
adc
mov
fbstp
or
mov
daa
sub
or
pop
sbb
sti
or
mov
adc
sbb
sub
push
shr
mov
cmp
(bad)
or
mov
push
fst
sub
dec
icebp
and
mov
mov
ds
xchg
sbb
sub
pushf
mov
lea
adc
push
adc
into
inc
les
pop
pop
jp
dec
retf
aas
mov
(bad)
ins
nop
stos
lahf
xchg
aam
sub
gs
pop
data16
pop
bound
lods
dec
sub
or
jmp
jle
movs
jo
xchg
test
(bad)
jae
mov
not
xchg
or
xchg
and
das
sub
mov
dec
nop
jp
mov
call
xor
hlt
fiadd
ror
mov
int3
iret
mov
aas
xor
daa
aam
lods
xchg
outs
mov
ins
outs
(bad)
int3
pop
xor
std
in
push
ret
jb
fs
mov
call
inc
sub
push
les
mov
scas
push
dec
cmps
out
or
inc
push
imul
gs
jle
cmps
ret
arpl
jmp
adc
fidiv
clc
js
aaa
push
retf
xor
test
out
xchg
ret
mov
mov
idiv
adc
cmc
adc
js
mov
sbb
adc
call
hlt
dec
lods
add
and
enter
jns
shl
sub
call
fst
push
iret
clc
movs
jo
in
jne
mov
mov
aaa
jnp
mov
ss
jae
cld
xchg
aaa
mov
lock
clc
aaa
jo
adc
pusha
mov
pop
pop
in
sub
mov
sbb
fstp
adc
and
push
(bad)
shl
aam
mov
mov
add
or
fcmovnbe
jmp
mov
push
lods
int
std
mov
dec
cli
gs
fwait
xchg
push
std
xchg
cld
mov
into
mov
movs
mov
lock
cld
cli
and
rol
pop
retf
jle
push
repz
xchg
mov
xchg
mov
or
es
call
cld
mov
pushf
stos
fmul
add
cmps
push
aam
push
es
mov
icebp
cmovns
loop
rol
cmps
add
xchg
xchg
jg
call
sbb
das
icebp
push
mov
push
shr
push
and
fnsave
xchg
pop
ret
push
mov
xchg
dec
mov
add
mov
movs
(bad)
out
cwde
(bad)
pushf
test
scas
xchg
jnp
cmp
pop
rcl
rcl
aaa
push
stc
xchg
iret
enter
mov
push
dec
pop
out
adc
add
inc
cwde
inc
daa
cld
(bad)
out
mov
sti
shl
pop
xchg
cdq
mov
jecxz
push
data16
jmp
mov
mov
add
(bad)
shr
push
scas
(bad)
popf
test
idiv
push
xchg
bound
mov
fmul
rcr
xor
push
xor
xlat
arpl
outs
mov
les
and
aas
mov
call
rcl
push
inc
es
rcl
into
push
loop
push
call
cmp
xchg
sti
dec
dec
sbb
shr
into
in
lahf
mov
pop
into
xchg
fcomp
xchg
dec
ins
adc
in
aaa
daa
clc
sbb
jmp
dec
adc
push
push
les
mov
hlt
jge
cli
(bad)
lds
out
jae
fucomip
int
cpuid
mov
mov
aad
xor
test
jne
push
jge
pop
jmp
lock
pop
or
push
push
push
add
push
sbb
sar
jo
jbe
mov
pop
xlat
xlat
(bad)
repnz
js
adc
mov
pusha
nop
outs
or
mov
mov
dec
mov
mov
mov
dec
iret
hlt
cmc
dec
dec
movs
jp
pop
or
aam
sbb
sbb
imul
loop
outs
xchg
fdivr
shl
cwde
call
out
cdq
repz
pop
and
test
mov
and
add
loopne
push
enter
or
aad
enter
mov
ins
ja
std
test
add
jl
aas
push
add
popf
dec
mov
aas
popf
push
dec
sub
pop
loop
(bad)
outs
adc
mov
xlat
ins
or
push
repnz
lods
ins
adc
adc
adc
fidivr
inc
jg
sti
or
stc
std
sbb
call
push
inc
cmp
fst
stc
les
mov
cli
loop
das
cmp
cli
(bad)
jno
pop
xchg
mov
adc
push
out
add
mov
test
xchg
and
loopne
scas
dec
mov
in
jnp
push
push
or
mov
into
pusha
addr16
push
test
retf
aas
sbb
and
sbb
fcomp
jecxz
push
fwait
cs
inc
jl
mov
(bad)
lahf
xor
out
add
jae
pop
and
pop
leave
das
lea
das
push
cmps
sub
add
popf
adc
jne
mov
in
inc
and
mov
(bad)
add
mov
imul
or
jno
in
cmp
fcomp
lods
enter
jg
pop
imul
push
mov
xor
xor
out
xor
mov
mov
pop
and
(bad)
rol
and
and
mov
ins
push
dec
scas
xor
jmp
cld
mov
xor
outs
pop
hlt
pop
mov
mov
mov
(bad)
sbb
fs
mov
popf
xor
and
add
mov
aaa
repz
xor
(bad)
jmp
mov
jne
mov
in
jle
mov
lds
popa
imul
sbb
dec
je
and
push
mov
and
xchg
xor
inc
mov
mov
scas
push
inc
(bad)
(bad)
loopne
pop
jmp
(bad)
pop
jo
mov
mov
jo
push
(bad)
aam
gs
and
enter
add
cmp
adc
or
mov
and
and
popf
cmps
pop
mov
jno
out
adc
je
or
adc
out
mov
dec
sbb
pop
pop
das
mov
sub
sbb
fisub
xchg
and
(bad)
cmc
in
hlt
repz
fnsave
je
and
fcom
xor
push
pop
pop
aam
jo
daa
xor
pop
dec
pop
popa
imul
lahf
(bad)
jbe
inc
dec
(bad)
fbstp
xchg
fcomp
loope
jl
add
dec
inc
add
sbb
sahf
sbb
xlat
sub
sbb
lods
in
fdivr
mov
adc
daa
adc
pop
fmul
sbb
das
pushf
adc
push
lods
sbb
xor
test
push
sbb
add
or
jb
sub
sub
in
sub
shr
cwde
push
sbb
ss
inc
leave
pop
ins
xchg
mov
xchg
adc
pop
mov
inc
or
sbb
outs
aas
test
inc
pop
xor
pop
(bad)
mov
push
mov
std
ins
mov
adc
jne
dec
inc
imul
outs
or
sbb
call
(bad)
dec
mov
push
sub
push
mov
mov
pop
or
and
mov
in
xlat
xor
and
jbe
fwait
or
add
out
test
adc
mov
adc
arpl
or
int3
pop
into
mov
cmps
push
cmps
fs
mov
or
imul
out
out
push
inc
ins
in
shl
pop
dec
mov
sub
ss
jmp
aaa
fadd
in
and
pop
repnz
push
dec
mov
and
add
cmp
jl
aam
push
mov
ins
adc
fst
or
test
xchg
adc
pop
scas
nop
pushf
retf
iret
into
jnp
pop
inc
pop
cmp
pushf
jmp
xchg
push
adc
mov
retf
fs
mov
jae
xchg
xchg
pop
(bad)
adc
adc
aad
inc
sbb
mov
call
shr
pop
or
adc
sbb
rol
mov
adc
jge
mov
push
iret
call
xchg
pushf
jmp
sahf
sbb
out
sbb
cld
adc
loope
test
push
out
dec
xchg
mov
retf
lods
xor
jae
outs
xor
mov
add
sub
imul
loopne
sbb
ja
fwait
mov
mov
push
das
xchg
xor
or
inc
cmp
sahf
outs
adc
xchg
xor
outs
xchg
xchg
and
mov
and
rcr
aam
faddp
inc
pop
sbb
fsub
inc
cmp
mov
ins
mov
mov
mov
cmp
push
les
fnstcw
test
iret
je
iret
out
xchg
push
in
jge
clc
adc
rol
aas
aas
mov
(bad)
test
lock
pop
add
cmp
pusha
jo
in
frstor
aad
das
xor
or
add
test
adc
or
in
clc
inc
imul
shl
sar
push
cmp
rol
xor
push
pop
pop
push
jae
adc
mov
mov
sub
jge
mov
lods
out
(bad)
mov
test
aas
cmp
movs
mov
cwde
push
jle
mov
jmp
inc
js
adc
mov
hlt
adc
jnp
cdq
inc
lock
xchg
cmp
dec
mov
stos
aad
bound
mov
xchg
imul
xor
sub
mov
jno
xchg
push
test
inc
scas
jge
mov
jecxz
ret
adc
test
sar
popf
jg
or
in
cs
ja
push
adc
(bad)
movs
enter
out
pop
sti
pop
and
dec
(bad)
inc
ror
push
push
and
mov
fs
lods
sub
(bad)
call
mov
pop
das
ds
jle
imul
push
cmp
push
mov
xchg
dec
jns
pushf
xchg
loope
pop
fsubp
push
inc
mov
popf
(bad)
sub
jecxz
jno
pop
add
push
or
lds
pop
adc
out
cdq
mov
mov
bound
pop
test
jl
inc
gs
add
ss
mov
test
sbb
ja
adc
push
xchg
daa
inc
adc
rcl
xor
das
popa
cld
or
xchg
mov
ret
adc
pop
cld
lods
ret
add
call
scas
xchg
or
sub
rol
cmp
cmp
popa
or
cmps
push
xchg
cmp
pop
stos
out
sub
lahf
xchg
push
pop
mov
out
ror
test
dec
or
fcom
or
dec
dec
and
sbb
fisubr
cmp
pop
or
scas
rcl
arpl
xor
fimul
sub
jmp
ss
sub
sbb
jge
or
(bad)
lea
mov
test
in
stc
sbb
in
(bad)
jge
xchg
add
lahf
push
sti
or
push
mov
shl
and
xchg
and
shr
repnz
movs
inc
inc
push
fidivr
fnstsw
iret
mov
sub
add
retf
jbe
mov
or
retf
mov
mov
fs
int
dec
mov
imul
push
push
push
data16
iret
mov
and
in
jns
adc
add
fisubr
push
ins
btr
dec
jg
nop
cs
sbb
mov
cld
sub
xchg
ins
test
arpl
jle
sub
sbb
mov
sub
push
pop
jns
rcl
jmp
xor
mov
test
(bad)
and
ffreep
jl
xchg
push
push
dec
mov
mov
ins
inc
arpl
stos
scas
shl
sub
add
call
xchg
ja
xchg
cmp
jecxz
and
aam
fwait
in
js
inc
push
or
pop
fs
cmp
sbb
dec
vmaskmovdqu
mov
shl
and
ins
(bad)
shr
(bad)
xor
scas
stc
mov
adc
call
xor
jbe
stos
adc
mov
sahf
movs
icebp
adc
outs
or
or
ror
push
sub
mov
or
(bad)
mov
nop
nop
js
in
lock
out
lea
jb
lods
les
mov
or
push
repz
jns
pop
and
fadd
bound
daa
ror
xor
jge
jb
xchg
jne
(bad)
es
dec
add
lods
jne
adc
outs
fwait
int
xor
bound
cdq
xchg
js
mov
xlat
cli
(bad)
mov
cmps
adc
das
add
dec
js
stos
lea
outs
std
mov
lods
jg
clc
aaa
imul
push
mov
sub
jno
mov
shl
test
cmps
xor
cwde
mov
repnz
fisubr
fld
ins
mov
or
mov
push
jp
push
mov
or
jae
lods
pop
(bad)
(bad)
movs
mov
mov
or
and
pop
push
adc
ret
jl
cmp
push
sbb
mov
shl
and
pop
ret
or
sbb
movs
fild
lea
shl
xchg
call
jmp
sti
jo
hlt
in
adc
fnsave
mov
icebp
xor
cmp
and
cmp
xor
lds
pusha
jnp
xor
loopne
pop
outs
sub
arpl
sub
leave
and
push
les
mov
jno
cmp
push
sbb
repz
fst
stc
jno
xor
push
ret
rol
push
xchg
jbe
inc
mov
scas
repnz
pop
iret
retf
and
mov
nop
outs
inc
cmp
push
fs
dec
inc
or
rcr
inc
dec
iret
xchg
test
ds
sbb
and
in
adc
movd
test
or
movs
(bad)
fsub
adc
or
mov
shr
and
mov
mov
movd
repz
inc
ds
xchg
mov
ins
xchg
adc
pop
dec
mov
sbb
add
retf
pop
in
repnz
inc
jmp
ret
pop
pop
loope
rcr
push
icebp
les
dec
jmp
iret
mov
imul
scas
fsubr
fsub
sbb
out
hlt
test
sbb
xchg
clc
ret
aas
xchg
adc
cmp
aaa
fld
pop
mov
add
adc
stc
bound
test
shr
push
sbb
out
adc
outs
cmps
mov
push
jne
cmp
icebp
daa
pop
xchg
adc
jns
dec
pop
sbb
mov
mov
pop
jp
and
mov
movs
in
gs
mov
jmp
ss
ror
push
fcom
cs
and
xor
rcl
cdq
push
fbld
(bad)
mov
out
fdivrp
xchg
adc
dec
test
cli
loopne
aas
fcomp
lock
dec
pinsrw
and
icebp
xor
adc
dec
fs
add
dec
pop
ss
cld
test
adc
cmp
ret
xchg
inc
jecxz
call
and
pop
push
xchg
adc
push
inc
inc
or
jb
imul
pop
push
cmps
push
inc
test
fstp
mov
stc
mov
fdiv
add
push
icebp
out
inc
aam
push
aas
xor
inc
cmp
es
pop
mov
and
imul
cmp
xchg
and
test
xor
rol
cmp
lods
and
rcl
push
sti
push
push
clc
ins
in
inc
jb
pop
lods
add
inc
xchg
cmp
push
movs
mov
retf
xchg
xchg
in
daa
mov
mov
ins
cs
fimul
jo
fwait
movs
xchg
sahf
push
bnd
xor
imul
sub
and
movs
xor
gs
mov
jmp
cmp
and
xor
test
xchg
jmp
cmps
add
or
mov
or
jbe
sbb
ss
or
xor
mov
ret
mov
mul
(bad)
push
fcmovbe
and
jo
into
push
das
jmp
mov
jb
inc
imul
mov
lods
xor
jge
movs
add
mov
movs
mov
call
loope
mov
sti
repz
xchg
mov
sahf
add
in
sub
jae
jmp
jmp
dec
fld
std
mov
out
xor
mov
jg
addr16
cmp
aas
mov
mov
outs
outs
lds
dec
mov
inc
js
fsin
dec
imul
ins
add
sbb
dec
xlat
bound
addr16
jp
xor
jl
out
add
aad
cmp
dec
in
push
movs
lahf
or
adc
les
add
push
mov
mov
or
dec
inc
and
mov
dec
mov
or
sbb
push
xchg
bound
and
and
pushw
xor
js
adc
cmc
jmp
retf
das
mov
outs
test
xor
jb
mov
sub
sar
adc
aaa
in
jge
imul
sub
fs
jle
inc
test
int
sub
push
mov
or
ins
movs
test
push
in
stos
mov
enter
fcom
test
lahf
sub
mov
jo
lahf
xor
or
iret
add
mov
ja
xor
sub
aam
or
and
mov
mov
sub
in
inc
das
xor
jmp
ret
mov
icebp
cmps
mov
call
pop
cmp
in
and
jb
xchg
sub
movs
adc
xor
in
pop
dec
push
fbld
popf
sbb
push
xor
pop
and
lods
mov
fadd
xchg
mov
xchg
inc
and
add
pusha
cmp
iret
dec
xlat
test
inc
mov
pop
jge
test
inc
stc
sub
pusha
push
push
push
xchg
fsub
sbb
fstp
jmp
mov
test
fstp
xchg
xor
nop
aad
jmp
icebp
adc
mov
sub
mov
add
pop
adc
mov
sub
inc
jbe
xchg
dec
addr16
movs
into
sub
mov
ja
sub
add
(bad)
jo
sub
mov
add
ds
inc
test
jecxz
daa
ss
mov
and
adc
call
lahf
cmps
shr
fild
pop
and
and
mov
sbb
mov
dec
popa
aam
dec
je
sub
lock
daa
stos
ja
bound
cmp
mov
push
push
test
push
adc
imul
cdq
fisttp
arpl
enter
adc
adc
push
les
mov
adc
loop
or
sbb
adc
mov
lods
adc
xchg
scas
popf
mov
out
mul
sbb
shl
dec
lahf
addr16
aas
js
and
scas
push
stc
xchg
mov
mov
add
cmp
sbb
jb
push
push
mov
ja
pop
ins
xlat
ret
mov
ins
mov
arpl
xor
jno
xchg
lock
retf
cmps
cmps
jge
dec
retf
cmp
adc
cmp
adc
iret
adc
adc
inc
inc
push
out
pop
dec
pop
imul
adc
add
cmps
leave
ret
mov
(bad)
xchg
dec
or
sbb
sub
jmp
hlt
dec
data16
jg
pop
xchg
je
dec
repnz
mov
mov
clc
xchg
sbb
pop
lods
(bad)
and
inc
aaa
nop
sbb
aaa
push
pop
shl
loopne
call
sbb
scas
retf
ins
mov
xchg
adc
lods
mov
lea
in
xchg
jb
inc
and
fnstcw
mov
je
cmp
stos
rcl
daa
push
dec
int3
das
pop
sub
cmps
inc
sub
dec
xlat
dec
dec
pop
adc
xor
mov
mov
mov
dec
int3
(bad)
retf
mov
mov
xchg
xor
in
lods
mov
repz
dec
(bad)
fwait
pop
aaa
(bad)
cwde
mul
xchg
sbb
arpl
xchg
jnp
push
add
mov
or
sub
push
push
xchg
xchg
mov
and
loop
jmp
cmps
lods
jmp
cmp
mov
push
dec
movs
pop
push
add
loopne
mov
xlat
bound
clc
or
inc
lea
push
jnp
lea
aad
aam
dec
imul
fbstp
je
cmps
clc
pushf
shl
call
xor
jb
test
mov
jl
mov
sub
adc
lods
mov
inc
out
arpl
xchg
xchg
xchg
ins
cmp
stos
dec
cmps
iret
inc
sub
or
fcmovnu
jcxz
fadd
movs
or
std
sub
jbe
cmps
(bad)
xlat
dec
dec
fistp
inc
mov
push
or
frstor
aad
dec
lods
cmp
cmp
movs
xchg
arpl
in
(bad)
daa
and
div
rol
(bad)
scas
fs
push
pop
inc
movs
push
jp
int3
icebp
loop
scas
push
es
sahf
xlat
push
mov
loop
int3
(bad)
out
cld
aam
inc
lds
mov
fnstenv
mov
and
mov
add
cmp
mov
or
or
test
xchg
dec
jl
nop
aaa
inc
or
jbe
and
mov
sbb
cmp
int3
jbe
mov
aad
mov
ins
pop
test
dec
jbe
fstp
jle
test
mov
jne
xchg
lods
rcr
mov
cmp
shr
sbb
jge
call
and
mov
and
xchg
jmp
push
sub
repz
mov
cld
xchg
aaa
and
add
fs
repz
jnp
mov
ins
aad
scas
shr
cmp
addr16
ret
clc
mov
fcomp
lea
pop
mov
pop
pop
mov
mov
fidivr
ds
xor
push
sbb
lods
add
(bad)
les
push
mov
push
rol
(bad)
lods
fmulp
sub
retf
repz
adc
iret
pop
cmp
loope
push
sbb
add
sub
adc
adc
inc
dec
repnz
push
cmc
jno
adc
aas
in
je
sub
(bad)
ss
arpl
sbb
and
aad
fwait
lock
xor
lahf
bswap
int
dec
dec
out
pushf
mov
mov
dec
jo
cmp
(bad)
pop
jp
adc
xor
mov
je
or
lods
adc
int
sub
mov
push
sti
push
mov
mov
outs
ins
mov
xlat
mov
add
rol
jnp
xor
rcr
dec
inc
dec
movs
or
jns
out
aaa
int3
(bad)
xor
out
loopne
sub
nop
cmp
repnz
push
ins
adc
rcl
es
popa
stos
add
aam
push
fnstenv
add
sbb
pop
pop
cmp
sub
hlt
pushf
mov
xchg
mov
fisttp
aas
int3
ds
xchg
in
dec
lds
add
movs
and
mov
fnstenv
push
repnz
jmp
dec
push
jge
jo
ficomp
jno
add
shl
cli
iret
sbb
jl
mov
(bad)
sub
fdivr
mov
imul
mov
loop
jg
jge
mov
dec
repnz
shl
xor
int
push
pop
dec
arpl
dec
sahf
ret
stos
frstor
test
inc
call
jb
dec
call
out
inc
jns
dec
icebp
xchg
pusha
sub
xchg
mov
add
pusha
int
inc
les
fistp
loope
stc
dec
mov
pop
and
retf
sub
out
cli
imul
adc
int3
movs
add
dec
mov
jbe
cmp
pop
repnz
lahf
imul
mov
push
lea
push
(bad)
cmp
iret
mov
or
pop
mov
lahf
cmps
mov
test
or
retf
cmps
cmp
ret
bound
es
xor
je
mov
lea
leave
ror
mov
movs
xchg
and
cmp
pushw
aaa
in
scas
add
add
mov
inc
loope
sahf
imul
jne
gs
sub
fidiv
stc
repz
popf
pusha
ret
mov
stos
(bad)
js
or
pop
sahf
fcomp
xchg
pop
scas
jmp
not
ins
in
jb
push
inc
neg
neg
mov
cmps
xor
icebp
inc
pop
ret
jbe
shl
iret
std
ffree
push
fiadd
repz
mov
dec
fld
fild
and
pop
mov
jo
inc
jae
fwait
mov
cwde
and
cli
sbb
jb
cmp
xor
in
mov
in
xor
pusha
mov
xor
push
jl
or
ds
and
xchg
mov
ds
(bad)
retf
adc
sub
pop
out
(bad)
mov
into
leave
push
hlt
push
icebp
push
(bad)
aad
push
ss
mov
jno
sbb
and
xchg
add
pop
test
lea
xchg
jmp
pop
daa
scas
pushf
inc
mov
fcom
push
dec
sbb
pusha
xchg
adc
adc
jnp
xor
stos
retf
test
jge
scas
pop
lods
adc
ins
dec
in
and
cmp
mov
test
scas
lahf
cmp
pop
loope
loop
or
cmps
pop
jne
cmps
retf
fstp
mov
imul
xchg
jmp
or
movs
mov
paddusb
js
push
repnz
jg
mov
and
push
push
dec
mov
js
arpl
inc
add
ret
sub
adc
(bad)
jbe
(bad)
jae
add
fwait
xor
lock
push
mov
in
add
sti
mov
xchg
int3
nop
push
ror
movs
inc
jo
icebp
addr16
ja
pop
aaa
rcr
push
mov
rol
inc
retf
ja
dec
mov
xor
sbb
ins
push
call
iret
cmp
dec
xchg
mov
add
repnz
jne
neg
jmp
movs
or
icebp
les
cld
and
xchg
xchg
jle
mov
stc
fsub
and
dec
mov
lods
js
add
popf
and
pop
and
adc
repz
aam
das
gs
iret
mov
xor
inc
stc
xor
shl
in
ins
into
dec
pop
cmp
int
push
loop
stos
imul
cwde
mov
cmps
push
out
jmp
adc
cmps
shl
xchg
mov
iret
inc
test
addr16
and
inc
or
xor
xchg
fld
imul
js
arpl
clc
mov
aaa
movs
(bad)
fldenv
mov
mov
mov
es
mov
mov
imul
pop
push
jmp
pop
lods
push
leave
xchg
iret
enter
mov
gs
cmp
in
push
adc
xchg
mov
call
push
cli
in
cmp
push
mov
mov
inc
jg
pop
lods
int3
dec
jno
pop
mov
sbb
add
mov
xchg
fnstsw
xchg
lahf
pop
mov
adc
dec
popf
sbb
not
or
ins
inc
sub
cmps
sar
push
pop
pop
xor
adc
test
addr16
mul
les
cwde
xor
pop
xchg
or
imul
jb
das
data16
outs
shl
cmp
or
jmp
sub
(bad)
test
int3
std
and
pusha
pop
push
fiadd
bts
mov
or
or
jae
dec
add
push
sub
out
cmp
or
pop
cwde
stos
and
imul
fwait
aaa
ins
clc
ja
shl
jge
lods
cmp
pop
(bad)
pop
add
xchg
pop
xor
aas
fld1
cld
fdivr
and
sub
clc
iret
pop
jno
push
add
repnz
outs
jp
enter
imul
sysenter
fcomp
inc
sub
jae
mov
test
sbb
bound
icebp
stos
not
lahf
js
pop
rol
iret
into
and
jp
rcr
mov
xchg
mov
jmp
lock
outs
cld
test
cli
inc
fwait
mov
xchg
out
rcr
test
pop
out
push
adc
enter
dec
call
in
loopne
pop
clc
xchg
and
std
fmul
mov
arpl
jmp
fstp
push
daa
mov
lods
push
push
test
test
adc
fnstcw
adc
xor
mov
cmp
cwde
mov
sti
jno
mov
fst
mov
mov
jecxz
sub
mov
sti
add
and
add
dec
and
mov
cli
scas
or
cmp
and
jae
sub
into
pop
sbb
cld
loope
pop
xchg
mov
and
xlat
xor
jg
stos
and
xor
mov
ds
or
inc
jl
and
mov
push
sbb
ins
rcr
inc
mov
push
cmps
xchg
hlt
test
outs
or
mov
jg
inc
(bad)
not
jl
cmp
push
sub
pop
lods
xor
cmp
cmp
jo
je
std
lods
cld
test
(bad)
(bad)
jmp
pushf
cmp
push
xchg
retf
jle
out
mov
add
jns
fs
jge
push
iret
xchg
mov
bound
lock
test
xlat
xchg
clc
dec
mov
(bad)
pop
fild
mov
xor
sub
mov
sbb
jp
push
hlt
ret
hlt
repnz
shr
mov
cli
mov
sub
jne
repz
push
fcomip
pop
clc
pop
push
in
push
(bad)
cs
das
xchg
aad
cmp
rcl
xor
fcmovb
push
mov
in
sub
jno
or
mov
jle
xchg
in
ret
cmps
je
xor
cmp
icebp
fcmovnb
inc
out
test
adc
xchg
lods
aaa
ret
cmp
sbb
push
xchg
mov
inc
daa
jl
lahf
xchg
sbb
push
fisubr
inc
push
dec
lock
sub
jmp
sbb
add
ins
pop
mov
es
test
mov
xor
test
cmp
pop
test
pop
scas
pop
sub
fiadd
jo
repz
jmp
and
push
arpl
add
and
das
sub
clc
rcr
fmulp
sbb
loopne
mov
popf
cld
sbb
sub
dec
xchg
cmp
outs
xor
fiadd
sti
sbb
sar
iret
jge
repz
enter
jns
and
lds
xor
popf
gs
push
mov
ret
inc
inc
shl
cdq
xchg
xchg
push
jge
daa
push
xor
inc
mov
jl
inc
jae
mov
cmp
ds
data16
mov
fwait
mov
mov
add
mov
push
dec
cmp
sub
ficom
cwde
jb
push
or
and
bound
ficom
imul
dec
(bad)
sub
dec
loopne
js
and
aas
fcmovnbe
sahf
or
lods
jmp
repnz
lods
cwde
dec
mov
bound
cmps
mov
into
stc
cmp
and
fisub
aam
ins
pop
xor
xor
jb
sbb
push
jp
add
xchg
mov
push
mov
arpl
adc
sbb
aam
fnsave
mov
aad
add
mov
dec
adc
dec
jno
dec
int
repnz
inc
std
pop
mov
bound
iret
addr16
lods
pop
in
sub
(bad)
pmuludq
fpatan
daa
(bad)
out
arpl
ss
pop
cmp
mov
aad
xchg
and
mov
in
mov
or
jno
add
int
xor
and
ins
xchg
push
push
jae
fwait
jb
hlt
jae
and
call
mov
cld
in
xchg
int
add
arpl
ins
inc
rcl
clc
pop
stc
div
dec
xchg
test
cld
sbb
mov
in
inc
fxch
ffreep
lods
shl
dec
push
fisubr
mul
mov
and
push
pop
ror
pusha
popa
jmp
cmps
inc
jo
inc
int
pop
xchg
mov
loope
aad
into
fld
shl
pop
xchg
xor
or
and
sbb
or
loopne
jae
pusha
xchg
mov
retf
repnz
out
(bad)
fldcw
retf
(bad)
mov
mov
fsqrt
mov
arpl
mov
jbe
je
xchg
jnp
(bad)
stos
(bad)
cmps
ins
enter
in
ins
adc
les
xchg
xor
push
fmul
adc
test
mov
or
gs
sbb
test
js
xor
push
xor
pop
add
pop
repz
pop
cmc
repnz
cwde
das
push
cs
or
(bad)
mov
fwait
sahf
xor
imul
add
arpl
jb
lock
cmc
xor
mov
xor
jp
jge
test
(bad)
push
stos
loop
ja
push
xchg
dec
rcr
aaa
sbb
adc
xchg
hlt
(bad)
loopne
fild
or
and
pop
loop
push
mov
and
and
repz
adc
xchg
pop
mov
jns
gs
jnp
push
dec
bswap
sub
mov
xchg
mov
mov
mov
fmul
jmp
xchg
retf
js
(bad)
lock
jns
repz
jnp
or
mov
xchg
gs
pop
jl
mov
in
or
fild
(bad)
jmp
idiv
bound
outs
push
lds
int
pushf
lods
in
dec
or
(bad)
jbe
fdivr
std
inc
adc
push
inc
sbb
out
dec
repz
ror
dec
cli
test
fidivr
sti
out
js
add
outs
mov
fisttp
les
jl
cmp
scas
pop
ret
sbb
add
mov
je
and
mov
jbe
test
xchg
lahf
xchg
addr16
or
xchg
iret
aas
sub
add
fadd
dec
fstp
out
stos
pop
cli
daa
sahf
inc
jmp
hlt
es
cmp
jno
jl
ror
mov
std
movs
cmp
fimul
(bad)
retf
retf
imul
mov
cmp
loop
xchg
test
pop
xchg
out
ss
scas
test
push
or
fcom
inc
adc
call
shl
in
xlat
or
xlat
sub
jg
jg
jecxz
(bad)
push
pop
or
fild
hlt
mov
sbb
xchg
iret
sub
add
mov
pop
pusha
pusha
cwde
add
leave
fsubr
pop
add
or
into
dec
and
scas
retf
jmp
sti
lahf
push
test
fsubr
nop
xor
inc
repnz
cmp
setg
push
pop
into
call
pop
inc
iret
xchg
lahf
imul
(bad)
cmp
out
(bad)
fld
push
cmp
dec
ins
cmp
inc
jmp
xchg
push
mov
cmp
dec
shl
popa
(bad)
shl
sub
mov
cld
sar
inc
arpl
mov
ss
shl
mov
cmp
cld
push
fcomip
out
pop
sub
div
sbb
push
gs
jl
hlt
xchg
sub
add
fist
dec
xchg
pop
mov
jle
adc
imul
pusha
data16
or
out
inc
scas
or
out
add
clc
lods
xor
mov
inc
test
jbe
shr
test
push
lods
push
push
jmp
mov
and
xor
(bad)
retf
pop
push
pop
add
and
jmp
push
jmp
(bad)
mov
jnp
popf
rol
stos
cmp
sub
pop
xchg
ins
pop
popa
fild
rol
jmp
in
mov
or
inc
sub
adc
imul
dec
inc
mov
stos
xchg
nop
dec
mov
test
cmp
or
pop
ins
sub
test
pop
push
add
sub
int3
out
ficomp
jp
(bad)
repz
into
sbb
sub
pushf
cli
push
jne
das
test
test
lahf
pop
push
lods
stc
sub
shr
rcr
sub
aaa
call
add
pop
inc
cli
clc
daa
sbb
pushf
in
jg
adc
ror
sbb
and
int3
fwait
outs
jb
int3
add
(bad)
imul
stos
data16
mov
add
fistp
call
inc
add
loopne
dec
cmps
mov
jns
sub
hlt
cdq
cmps
nop
and
jno
cmp
inc
or
dec
shl
pusha
mov
dec
xor
aaa
xor
rcr
call
mov
out
faddp
jne
enter
sub
icebp
mul
push
movs
inc
push
adc
sub
sbb
scas
jp
in
ds
dec
bound
stc
and
sbb
clc
add
loopne
add
sub
cmp
leave
sub
imul
or
retf
pop
jecxz
jnp
pop
imul
dec
(bad)
jg
adc
mov
jb
cmc
xchg
retf
pop
js
outs
fs
es
ins
fwait
sbb
pop
mov
dec
jecxz
ret
(bad)
enter
push
xor
push
jno
movs
jns
out
leave
ret
daa
pop
push
in
add
movs
inc
cmc
mov
cmp
xor
push
mov
imul
cmp
lahf
out
sub
xchg
ins
pop
and
fwait
pusha
(bad)
jne
jae
add
lahf
lods
scas
xchg
push
and
out
jecxz
push
push
push
out
mov
xchg
push
cmp
jo
adc
and
pop
enter
sbb
hlt
sbb
mov
jecxz
clc
std
xchg
fneni(8087
iret
inc
mov
inc
lds
movs
jecxz
fidivr
jecxz
xchg
and
push
mov
add
out
and
mov
inc
ror
inc
cmp
add
shl
imul
mov
popf
(bad)
(bad)
fcomp
dec
dec
fisttp
notrack
mov
les
inc
adc
arpl
or
lods
(bad)
fimul
jg
jl
mov
mov
ja
aam
adc
inc
xor
dec
add
dec
(bad)
sbb
or
test
repz
sbb
outs
ja
scas
cmp
es
mov
repnz
cmp
aam
cmp
(bad)
shl
ror
pop
xchg
cmp
addr16
das
dec
or
sahf
adc
cli
pusha
test
mov
fcmovb
push
ror
pop
or
mov
adc
lds
fwait
inc
xchg
jb
mov
or
test
outs
ss
push
ret
les
ret
(bad)
mov
mov
mov
fild
push
mov
(bad)
sahf
push
fs
punpckhdq
xchg
push
mov
and
mov
leave
mov
test
mov
dec
jg
mov
adc
mov
retf
imul
push
addr16
dec
loopne
repnz
push
adc
mov
call
pop
mov
mov
cmp
into
xor
leave
imul
cli
dec
inc
stc
xchg
inc
divps
arpl
xchg
cmp
ss
and
ret
shr
lods
gs
cmp
jl
sar
ficom
ror
dec
push
mov
aad
pop
(bad)
adc
xor
push
push
and
add
test
repnz
icebp
in
nop
test
faddp
sub
ret
out
enter
test
jno
aaa
cdq
cmps
mov
push
nop
test
jbe
movs
jnp
xchg
jbe
loope
cmp
xchg
add
mov
ret
es
add
sbb
sub
mov
mov
adc
std
out
shr
fstp
sbb
sub
mov
aam
fistp
stos
lock
mov
and
outs
push
xchg
call
adc
mov
xor
cmps
push
sub
mov
rcr
lods
popa
push
cwde
fstp
or
mov
dec
ja
xchg
test
cmc
fisttp
cwde
(bad)
outs
(bad)
cli
rcl
lods
pop
lock
or
inc
adc
pushf
adc
jmp
mov
cmps
imul
sbb
mov
(bad)
aaa
shl
mov
adc
xchg
int
push
xchg
jns
int3
iret
repnz
push
pop
arpl
das
add
cmp
sub
sub
xchg
cli
movs
imul
push
out
(bad)
retf
pop
lahf
push
mov
sbb
cs
test
mov
mov
push
or
xchg
pop
es
fsubrp
mov
aam
scas
add
test
in
mov
sbb
inc
xchg
sahf
pushf
mov
jecxz
sbb
scas
dec
jmp
and
adc
mov
fld
pop
sbb
sub
mov
jbe
out
mov
icebp
jmp
int
add
movs
jns
sbb
push
out
icebp
cmp
mov
add
fwait
mov
or
mov
cmps
pop
imul
test
xchg
adc
shl
fcmovu
daa
xor
imul
jle
cmp
and
mov
xlat
mov
ror
in
sbb
mov
xor
movs
pop
ins
xor
out
(bad)
sub
xchg
(bad)
clc
mov
ss
jmp
mov
popf
in
add
xchg
mov
outs
in
inc
inc
and
inc
dec
adc
fidiv
jle
sahf
adc
cmp
mov
xchg
cmp
js
adc
(bad)
movs
pop
icebp
mov
cmp
xchg
mov
pop
inc
(bad)
enter
cs
fnstenv
mov
mov
sub
add
push
mov
adc
stos
pop
push
test
fisubr
xchg
sbb
sbb
cmps
out
add
jmp
jns
loopne
add
fbld
mov
aad
test
stc
les
sbb
jp
sbb
push
aas
sbb
lea
ins
cmps
lds
scas
lods
adc
outs
push
xor
iret
and
icebp
mov
xor
pushf
jno
dec
push
fldcw
xchg
cmc
popf
inc
fwait
push
push
nop
xor
mov
pusha
in
or
daa
pop
xor
imul
mov
fisttp
mov
push
lds
jmp
jns
cld
dec
push
and
daa
pop
xor
das
pop
pop
fstp
add
ds
or
jo
(bad)
jle
sbb
cmps
cdq
leave
push
stos
in
pop
mov
and
retf
fdiv
fistp
sbb
adc
inc
mov
sub
retf
sbb
dec
push
mov
push
rol
(bad)
call
inc
ins
mov
mov
mov
call
ins
rcr
pop
push
jae
pop
sub
jmp
imul
std
mov
icebp
mov
lock
jne
fs
dec
bound
lahf
fs
ss
aam
cdq
mov
jne
daa
call
(bad)
xchg
xor
je
mov
pop
pop
loop
lods
push
cmp
stos
or
inc
and
loopne
ret
sti
xchg
sti
int
adc
sub
idiv
shl
adc
adc
sbb
pop
mov
in
loope
out
inc
fstp
iret
std
inc
sbb
les
aad
lahf
ss
lss
neg
sbb
icebp
imul
lahf
jg
imul
ret
pop
jb
sub
lods
int3
sub
push
push
into
pcmpeqw
imul
test
gs
mov
mov
div
push
pop
inc
mov
push
mov
sub
cmp
ja
cmp
pop
jg
jae
repnz
cmp
ins
jb
mov
fcom
sbb
pop
pop
adc
cmp
in
mov
sbb
std
jecxz
cmp
(bad)
cld
inc
cmps
mov
sub
inc
lds
adc
adc
repnz
cmp
rcl
idiv
add
fiadd
push
mov
and
and
es
gs
dec
in
stc
stos
(bad)
popa
scas
hlt
out
mov
inc
adc
aaa
scas
popa
fwait
stos
je
push
pop
mov
push
fidiv
repz
test
mov
test
(bad)
or
int
(bad)
dec
jb
push
inc
jns
out
mov
iret
push
movs
sbb
movs
jp
outs
pop
or
xchg
fisubr
xchg
mov
ja
mov
(bad)
aas
shl
mov
adc
imul
and
xchg
pushf
into
xor
inc
or
push
adc
cli
repnz
jle
push
cmp
popf
arpl
jl
loopne
sub
clc
mov
mov
sar
push
lods
ins
loopne
mov
jns
out
push
fsubr
dec
mul
pop
jb
push
push
jl
add
and
sub
popa
jmp
inc
shl
jp
sbb
ror
mov
adc
push
stos
adc
xchg
cmps
push
pop
fbstp
clc
sbb
mov
push
enter
into
sub
stos
xchg
adc
(bad)
push
sbb
enter
pop
jb
jb
(bad)
add
add
dec
fiadd
das
fisub
jge
adc
out
rcr
cmps
aaa
imul
std
mov
int3
xchg
dec
jmp
jo
fldcw
mov
dec
in
cmp
test
enter
scas
std
add
ja
mov
push
mov
loope
or
jb
cdq
cdq
js
adc
nop
sub
push
xor
mov
adc
lock
(bad)
adc
xlat
js
call
jp
out
dec
pop
mov
sub
pop
sbb
hlt
movs
(bad)
xor
enter
sbb
inc
(bad)
hlt
jo
in
sar
loope
sbb
cmps
out
fs
fadd
xchg
enter
mov
mov
push
mov
push
fwait
div
das
pop
jae
(bad)
sub
dec
cld
lahf
popf
mul
xor
pop
aad
ret
mov
pop
mov
sti
aas
(bad)
mov
sub
lods
xor
mov
pop
popf
xchg
les
cmp
inc
cmp
shr
jo
cs
xchg
mov
test
and
das
test
sub
jmp
or
(bad)
aam
add
js
movs
mov
retf
adc
mov
jg
enter
mov
outs
add
sbb
leave
mov
shl
dec
outs
xor
jbe
call
jecxz
dec
inc
add
ins
adc
pop
js
retf
add
mov
pop
push
mov
imul
sub
xor
je
add
xor
mov
mov
dec
mov
ret
je
sbb
(bad)
jb
shl
lds
mov
jecxz
mov
mov
scas
neg
leave
mov
clc
xchg
dec
push
adc
xor
mov
inc
xchg
fnstcw
stos
xchg
sar
ret
test
(bad)
in
mov
movs
dec
lds
xor
xor
iret
add
(bad)
jmp
mov
int3
retf
xchg
or
and
inc
inc
call
neg
repz
cmp
pop
repz
daa
push
inc
lahf
jno
aaa
aam
dec
repnz
fcomp
sbb
outs
cmp
mov
and
rcl
add
pop
lds
adc
mov
pop
movs
xlat
mov
idiv
dec
sbb
enter
cmp
dec
stos
rep
mov
dec
xchg
dec
div
cmp
mov
lea
push
xchg
fs
and
sub
out
jmp
es
xor
and
mov
sub
cmp
pusha
inc
and
adc
rcr
mov
cmp
mov
pop
test
int3
mov
jecxz
hlt
test
fcom
cmp
nop
sbb
loopne
mov
adc
sub
std
fld
enter
mov
fist
and
or
jmp
outs
pop
ins
lahf
mov
mov
mov
pop
xor
or
clc
jb
add
adc
shr
cmp
dec
mov
fcmove
xchg
push
scas
mov
push
mov
inc
mov
xor
int3
xor
mov
mov
sahf
loop
pop
imul
mov
call
pushf
mov
jle
cmps
cmp
mov
ins
ja
rcl
cmc
sub
xchg
test
add
jle
pop
xor
pop
fstp
cli
mov
cmp
cmp
xor
mov
stc
inc
sbb
fs
add
mov
pop
aad
test
push
xchg
scas
pop
add
into
in
xor
fimul
jae
adc
xchg
cmps
mov
shl
mov
push
push
test
mov
add
mov
dec
jne
ins
mov
mov
(bad)
push
or
int3
dec
sub
enter
add
pushf
sub
xchg
jl
add
or
inc
cmps
int
xchg
ret
mov
rcl
or
sub
dec
sbb
cmp
and
mov
xor
push
shr
sub
pop
inc
inc
and
xchg
pop
mov
pop
mov
out
gs
lods
xor
cwde
fisttp
xor
shr
(bad)
out
or
out
ret
ds
into
xlat
push
dec
xchg
add
xchg
xor
pop
add
clc
je
add
aaa
scas
cmps
cmp
push
sti
or
push
mov
popa
mov
cs
or
sbb
sub
retf
push
outs
add
mov
inc
fs
inc
push
pop
or
ret
call
sub
sbb
cdq
push
icebp
mov
push
stos
in
(bad)
cmc
pop
mov
into
sub
xor
xor
cwde
loope
xor
shr
repz
mov
aam
pop
lods
and
mov
jae
push
xchg
retf
out
loop
and
cmp
aaa
adc
dec
test
cs
(bad)
lods
les
in
in
ret
inc
mov
jno
push
stc
dec
push
push
xchg
inc
(bad)
cmps
inc
xor
xor
push
dec
pushf
test
ret
cli
push
lods
arpl
inc
lods
ret
shl
sub
inc
std
mov
jbe
cwde
pop
aad
cmp
push
dec
shl
mov
sub
xchg
pop
cmps
call
pusha
out
add
fs
jg
or
adc
pop
enter
xor
jp
out
movs
call
push
mov
push
xchg
jnp
cmp
cld
dec
data16
sbb
arpl
hlt
je
dec
inc
sub
pop
push
sbb
sub
push
and
es
sti
xor
dec
cmps
cdq
jae
mov
lods
push
mov
rcr
xchg
push
sub
stc
dec
adc
ds
pop
loop
sti
mov
dec
pop
inc
push
aam
or
and
mov
shr
cmps
push
lahf
add
outs
nop
sahf
pop
push
pop
shl
test
mov
in
jge
push
adc
jmp
aam
imul
loopne
aam
adc
xlat
fisub
movs
aad
mov
scas
or
stos
and
push
and
lea
iret
sbb
mov
in
outs
jle
xchg
in
mov
mov
mov
lahf
les
push
dec
mov
lock
mov
mov
cmp
mov
sbb
gs
cmps
or
push
rcl
fld
jmp
jmp
add
sbb
call
sbb
ja
mov
cdq
(bad)
push
jmp
adc
pusha
lods
int
mov
f2xm1
xor
inc
loop
push
cmps
fadd
icebp
wbinvd
or
mov
fcomp
pop
pop
xchg
add
jns
inc
test
adc
neg
jmp
or
jmp
pusha
dec
xchg
mov
int
pop
rol
cli
mov
inc
pop
xchg
ins
add
pop
fs
sub
inc
lods
sub
loope
push
xor
mov
push
shl
dec
stos
xchg
jecxz
cs
mov
mov
mov
push
jmp
xchg
jo
dec
sbb
pusha
xchg
into
mov
pop
mov
aad
fwait
scas
sar
aam
loope
ins
sbb
dec
pop
or
sub
mov
out
push
lahf
ins
ds
mov
mov
icebp
fwait
dec
push
or
push
sti
mov
xor
jg
mov
xchg
add
ret
test
xlat
pop
ror
add
les
adc
push
(bad)
fistp
pop
retf
sub
pushf
(bad)
daa
jae
mov
cld
aas
pop
test
push
ret
add
daa
mov
jmp
xchg
add
rol
test
clc
push
out
dec
jp
sbb
pusha
cdq
xor
(bad)
scas
repz
stos
add
stos
add
sub
sti
shl
xor
les
stos
mov
sub
adc
jmp
dec
cld
shl
and
loop
pop
mov
sub
mov
jge
stc
cmps
loop
xor
out
sbb
xchg
fs
mov
in
add
lods
xchg
jl
aam
div
pop
jp
xlat
sub
xchg
pop
push
mov
xchg
pmulhw
rol
cs
adc
div
jo
pushf
loope
es
shr
mov
loope
adc
sub
test
sbb
sub
pop
pop
loop
push
add
int
cdq
enter
xor
push
imul
test
pop
cdq
and
test
pmuludq
inc
in
xchg
fucomi
std
dec
call
mov
jns
jbe
icebp
repz
fimul
enter
push
fcmovb
pop
lods
push
jo
scas
fcomi
icebp
daa
push
ss
mov
dec
dec
leave
shr
fwait
icebp
adc
push
inc
or
pavgb
(bad)
sar
push
mov
ret
and
inc
out
nop
sti
pop
cli
(bad)
repz
stos
push
jb
iret
jmp
in
retf
xlat
push
data16
jmp
dec
jge
aas
cwde
je
adc
mov
jo
add
push
jb
jle
shl
pop
cmp
outs
dec
(bad)
xchg
push
jns
mov
add
call
mov
fistp
push
in
pushf
das
fs
in
aas
mov
(bad)
jmp
xchg
in
xor
pushf
cli
movs
(bad)
push
psllw
(bad)
(bad)
out
cdq
xor
jmp
jnp
mov
push
push
pop
jmp
(bad)
into
loopne
mov
aas
and
dec
or
xchg
fnstenv
mov
test
xor
outs
sub
test
jb
inc
sub
push
ret
ins
push
sti
dec
sbb
movs
cmp
mov
shr
ret
fnstsw
gs
inc
pop
jae
mov
push
adc
jle
outs
add
out
stc
rcl
mov
jno
rol
jle
xchg
adc
or
xor
rcl
or
mov
loop
adc
repnz
or
push
mov
ins
sbb
jmp
ret
(bad)
jns
rcl
xlat
dec
mov
pop
ds
retf
ja
std
aaa
aam
add
push
inc
xchg
pop
or
fisub
push
out
cli
and
sahf
dec
dec
cmps
xchg
inc
xchg
inc
cwde
cs
repnz
sbb
pop
xchg
mov
ss
pop
arpl
scas
dec
push
scas
cdq
pop
adc
push
mov
dec
jmp
mov
rcl
push
xchg
xchg
dec
sbb
mov
das
mov
in
je
mov
inc
sbb
jno
inc
push
fisubr
xor
fbstp
bound
sub
cmps
dec
loop
loope
adc
nop
mov
and
or
mov
or
ss
xchg
jg
pusha
pop
js
push
sbb
rcl
cmp
add
lods
(bad)
int3
mov
imul
lods
push
cmp
lock
inc
adc
lea
iret
getsec
scas
jp
and
out
add
dec
sbb
fist
ret
das
in
bound
(bad)
call
cmp
dec
add
pop
or
es
push
xchg
iret
dec
xor
ficomp
dec
mov
jle
arpl
mov
es
mov
data16
jno
xchg
pop
ret
mov
retf
(bad)
jl
push
jg
cdq
add
aam
jae
mov
add
scas
pop
push
mov
adc
fwait
sub
test
sbb
inc
iret
dec
repz
mov
call
enter
test
push
cmp
pop
aam
outs
popa
rol
pusha
mov
xor
shr
adc
pop
and
lock
fdivr
lea
loopne
out
(bad)
div
div
sar
data16
retf
ret
in
fdivp
xlat
shl
push
mov
test
xor
(bad)
das
mov
sub
sbb
mov
dec
aad
aad
cwde
add
sbb
push
cli
xchg
test
les
retf
mov
rcl
icebp
sub
cmps
sub
sub
mov
push
jns
ficom
jns
or
into
push
mov
pusha
mov
mov
lahf
fwait
xor
shl
cmps
fwait
jae
jo
(bad)
inc
std
xchg
and
out
ds
jmp
push
je
adc
add
sub
iret
and
mov
inc
push
add
sub
or
ds
inc
les
or
sbb
sub
pop
jne
cdq
out
fldenv
jbe
retf
aad
popa
inc
fnstcw
dec
sbb
pop
dec
call
out
jns
xor
cmp
adc
push
sbb
fmul
cmps
push
cmp
fistp
addr16
shr
pop
push
pop
sub
cdq
dec
outs
stos
xor
push
ficom
pop
jl
mov
nop
pop
pushf
daa
(bad)
jmp
(bad)
out
cld
pop
pusha
cmp
mov
mov
dec
jne
fimul
test
mov
das
xchg
xchg
inc
ds
pop
bound
cmp
in
push
clc
test
push
lds
lock
test
dec
sbb
je
sbb
mov
pop
das
ret
adc
cmp
enter
int
mov
(bad)
push
sbb
push
in
mov
inc
retf
cmp
xor
popf
sbb
test
jbe
outs
dec
into
inc
je
dec
inc
sub
dec
dec
add
rcr
mov
fwait
or
sahf
cmp
pop
sahf
retf
jmp
and
inc
movs
mov
arpl
jns
xchg
mov
pop
pop
dec
push
xor
(bad)
mov
nop
cmp
fdivr
rol
push
aad
aas
lods
mov
jo
stos
mov
cmp
ss
push
out
push
xchg
cmp
das
jmp
dec
cmp
jo
add
jp
int
sub
js
js
stc
pop
fs
test
mov
sub
daa
popa
xor
cmp
(bad)
jns
cwde
fsub
sbb
xchg
lods
sub
mov
retf
(bad)
fadd
bound
cmovae
xor
jns
dec
loopne
jecxz
mov
cli
lds
call
dec
mov
fisub
mov
sub
test
fidivr
adc
jg
and
shl
sbb
pop
mov
xchg
sbb
inc
ja
xchg
int3
cmp
hlt
mov
out
add
push
mov
je
(bad)
hlt
je
scas
inc
xchg
sbb
push
idiv
mov
cmp
sub
jge
shl
or
dec
adc
jle
aaa
daa
adc
mov
cwde
mov
jp
imul
sbb
sar
aas
(bad)
cmp
leave
push
(bad)
xlat
mov
push
cli
pop
fidiv
fild
jle
cmc
retf
adc
jae
ss
jnp
dec
ds
and
cmp
add
push
pop
sub
dec
fs
in
pop
das
xor
sub
and
daa
jb
jb
mov
dec
mov
mov
pop
mov
mov
sub
mov
lods
mov
jbe
cwde
popa
pop
sub
mov
jp
popa
adc
int
jge
cmp
or
lds
cmps
sti
cld
sbb
sbb
inc
addr16
sbb
mov
mov
xchg
and
push
adc
or
rol
pop
push
(bad)
sub
jge
sbb
int
add
icebp
inc
ss
dec
outs
arpl
and
xchg
fwait
or
cs
mov
popa
sbb
add
sub
cs
or
cmp
dec
sbb
and
rcl
cmps
lds
shr
adc
jge
pop
dec
jmp
mov
inc
xchg
call
sub
mov
cmp
inc
dec
dec
retf
or
and
gs
fwait
mov
sbb
sbb
xchg
(bad)
loop
aas
mov
fnstenv
dec
mov
jmp
idiv
or
push
rol
scas
scas
imul
shl
ret
sbb
leave
int3
ins
jp
mov
jae
xchg
pop
sbb
cmp
add
int
and
mov
sub
fdiv
xchg
lods
xchg
cmp
add
stos
daa
cli
out
sar
push
sbb
mov
adc
cld
dec
mov
mov
imul
pop
sti
cmp
ins
inc
rcr
icebp
or
mov
mov
pop
(bad)
hlt
xchg
(bad)
adc
loope
clc
mov
sti
shl
rcl
add
dec
jmp
iret
lea
mov
mov
cmps
xchg
jp
outs
jo
dec
jp
fldcw
mov
sub
sbb
neg
xchg
add
jns
stos
inc
inc
int
xchg
and
jecxz
cmp
hlt
dec
pop
popa
aam
jge
pop
rol
rcr
call
repnz
es
lods
mov
(bad)
jns
out
xchg
and
cmp
mov
mov
jb
(bad)
and
push
inc
mov
in
mov
test
mov
aas
movs
dec
cld
(bad)
in
mov
cmp
sbb
adc
call
or
push
int
and
lods
cmp
jge
out
xor
cmps
xor
or
in
loope
xchg
mov
mov
jnp
out
and
fs
sub
outs
fwait
cmp
aas
sbb
icebp
data16
aaa
(bad)
push
jg
sub
pop
inc
mov
mov
ja
push
dec
add
push
push
js
and
dec
inc
pop
sbb
(bad)
fnstsw
imul
sbb
sub
cmp
repz
xlat
aad
or
sbb
jne
sbb
nop
cmp
mov
cs
lea
ret
inc
inc
(bad)
xchg
xchg
adc
jb
adc
jl
jmp
sub
popa
in
pusha
jmp
dec
sub
es
div
(bad)
jmp
inc
lds
imul
xchg
cmp
add
or
icebp
push
aam
add
push
sbb
in
mov
and
or
cld
or
inc
(bad)
sbb
dec
clc
mov
jg
jb
or
(bad)
lea
and
test
lea
hlt
les
ins
sar
loopne
mov
push
leave
cld
or
dec
inc
and
in
pop
pop
cmp
fs
or
or
pop
sbb
adc
or
pop
std
jg
adc
mov
adc
xchg
lods
loopne
mov
ja
mov
(bad)
ja
(bad)
scas
or
xor
fcom
jmp
call
fidiv
stos
adc
aam
in
cmp
push
popa
sub
scas
pop
pop
sbb
fistp
retf
jb
inc
enter
push
sub
std
push
and
dec
neg
push
popf
sbb
jb
pop
pop
enter
inc
les
fidiv
mov
rol
clc
stos
inc
adc
jns
fcomp
iret
stc
cwde
mov
pop
add
gs
and
mov
dec
sahf
sbb
xchg
das
(bad)
or
cdq
pop
inc
out
mov
sti
out
or
cs
jge
dec
dec
sub
mov
sub
inc
loopne
jmp
and
(bad)
loop
dec
mov
je
cmps
jnp
ins
lock
lock
or
mov
mov
int3
xor
cs
xchg
out
mov
cmps
(bad)
sub
call
movs
rol
test
add
cmp
push
jno
jne
adc
sbb
xor
fs
xlat
fst
mov
popa
mov
ror
mov
adc
mov
adc
sub
or
or
xchg
je
push
mov
add
dec
inc
and
push
adc
pusha
in
xchg
loop
xchg
xchg
stc
sti
or
leave
repz
mov
mov
fsub
test
dec
aad
jg
sub
adc
out
add
mov
cmp
pop
sar
retf
xor
or
retf
sbb
mov
cmp
adc
shr
cmp
mov
jb
ins
push
or
mov
loopne
xchg
lods
leave
jo
test
adc
push
fs
jbe
mov
inc
in
ret
cmps
out
mov
dec
mov
out
xchg
sub
xchg
xor
or
jle
cmp
sbb
pop
xchg
cmp
imul
fild
daa
mov
pop
xchg
add
push
or
mov
mov
xchg
cdq
mov
push
and
mov
jge
stos
mov
stc
xor
into
sub
int3
nop
sahf
mov
inc
sub
xor
sbb
fld
xor
or
pop
fcmove
jecxz
out
push
add
xor
adc
mov
push
adc
push
rol
adc
nop
jmp
push
jmp
inc
jp
shr
sbb
(bad)
adc
cs
sar
jmp
repz
mov
push
fldenv
shr
int3
adc
ficomp
mul
jmp
inc
xchg
ins
or
aad
dec
push
or
ja
test
ins
jmp
rcr
sbb
push
xor
dec
cmp
cld
jl
cdq
sub
mov
push
mov
xor
xchg
and
xor
jecxz
clc
aad
jge
jns
mov
mov
pop
mov
imul
jmp
imul
and
dec
dec
mov
xchg
sbb
sbb
movs
mov
sbb
mov
mov
sbb
imul
mov
jnp
jmp
cmp
cmp
mov
aas
xor
loopne
into
jmp
mov
cli
push
jno
mov
nop
sub
or
inc
add
xchg
or
add
inc
loop
sahf
jp
std
call
pop
(bad)
push
mov
es
stos
xchg
jmp
fsubr
adc
sbb
xchg
hlt
xchg
pushf
fdivr
test
hlt
shr
mov
div
shl
out
mov
pop
mov
pop
addr16
xchg
sar
sbb
imul
cmp
cs
ret
inc
cmp
xchg
idiv
jmp
sbb
clc
(bad)
rol
ret
cmps
dec
out
enter
push
adc
lock
inc
mov
pop
lds
jmp
mov
jecxz
daa
mov
mov
push
pop
xor
or
inc
sub
and
not
xchg
and
cdq
xor
test
shl
(bad)
xchg
es
inc
dec
fst
mov
xchg
mov
mov
and
(bad)
push
push
jno
stos
loopne
xchg
add
test
ror
adc
mov
add
imul
ja
ss
enter
or
mov
cs
rcr
and
cs
leave
mov
or
push
jge
xchg
cli
in
ins
test
pop
int3
pop
mov
mov
les
mov
(bad)
sub
ror
mov
jns
dec
test
(bad)
pop
sbb
mov
push
ret
push
mov
add
cs
adc
sar
movs
addr16
sbb
cmps
(bad)
aaa
call
push
aaa
sub
stc
movs
and
sbb
inc
addr16
lods
rcr
test
hlt
mov
cmp
add
scas
(bad)
mov
out
shr
mov
dec
bnd
xor
sbb
rcl
and
pushf
sub
inc
iret
adc
push
pop
jge
ror
dec
aam
aaa
js
xor
jmp
and
cmps
cmp
popa
sbb
call
ds
and
or
mov
mov
mov
jb
sub
mov
sbb
cs
sub
in
or
repnz
sti
adc
pop
inc
adc
inc
jmp
lahf
adc
ds
jnp
pop
stos
mov
push
sub
mov
add
mov
stc
or
imul
mov
dec
in
mov
fld
sub
dec
pop
outs
cmp
arpl
adc
cmp
call
push
movs
retf
leave
adc
pushf
test
pop
nop
mov
ror
pop
or
lds
test
mov
(bad)
icebp
js
sbb
in
int3
ror
adc
jl
mov
sbb
js
mov
mov
push
test
lea
je
xor
push
pop
cmp
stos
mov
pop
cmp
mov
fbld
pop
test
push
retf
mov
shl
inc
jne
ds
das
in
push
and
xchg
xchg
push
sub
xchg
or
inc
push
ja
icebp
int
(bad)
in
clc
in
cmp
cli
lods
add
je
sbb
adc
int3
out
cmps
xchg
cmp
sbb
clc
push
(bad)
(bad)
adc
push
lock
push
jnp
das
xor
call
xchg
lea
xor
cmp
clc
jg
sub
jecxz
and
or
add
xlat
pop
sbb
int3
movs
sub
jp
sub
repnz
cmps
not
mov
mov
jo
mov
movs
or
mov
mov
jecxz
daa
mov
or
mov
dec
aaa
jl
fs
sub
or
pusha
and
sahf
xchg
adc
push
nop
mov
sti
shl
add
adc
ins
(bad)
(bad)
jne
jle
or
adc
xlat
sub
popf
jp
icebp
or
dec
pop
(bad)
adc
sbb
data16
inc
and
sbb
pop
cmp
sahf
adc
mov
dec
xchg
or
lahf
and
iret
pop
or
adc
jmp
inc
mov
cmp
add
jb
or
cmc
jbe
outs
fwait
stos
adc
jg
rcl
cwde
push
sahf
adc
push
or
rcl
add
add
out
mov
mov
aam
adc
push
sub
push
sbb
in
outs
sbb
fld
xor
icebp
arpl
popa
adc
bound
out
jae
pop
jbe
push
outs
jne
inc
rcr
jmp
fist
pop
xchg
call
rol
xchg
test
push
in
push
push
out
iret
hlt
dec
inc
ja
aaa
and
xor
aaa
addr16
ret
into
out
or
mov
mov
mov
movs
dec
vhsubpd
imul
xchg
cld
add
pop
psubusb
xor
jae
std
neg
nop
ins
loopne
fnstsw
rcr
push
lahf
arpl
imul
je
(bad)
adc
adc
mov
add
xor
lock
(bad)
sub
data16
icebp
and
sbb
popa
cmp
cmp
xchg
pop
push
aaa
imul
adc
out
pop
mov
jge
stc
cdq
add
test
ror
dec
xor
xor
daa
mov
pusha
inc
(bad)
jnp
daa
jbe
aad
lock
adc
iret
mov
movs
div
fild
aad
aaa
xchg
das
and
jne
add
xor
das
out
adc
jecxz
loop
lods
push
or
jecxz
cld
mov
push
xchg
inc
dec
aaa
cdq
sub
test
test
arpl
movs
ds
mov
jae
mov
gs
pushf
repz
mov
int3
pop
mov
xor
cmp
daa
cmp
outs
call
hlt
jmp
or
int3
mov
aas
mov
aas
mov
aas
adc
jb
fcom
(bad)
jb
cdq
data16
xlat
sub
mov
aam
rol
and
sub
dec
dec
pop
out
pop
ret
adc
leave
enter
pop
je
dec
retf
jle
mov
cmp
adc
lods
mov
push
test
xchg
inc
mul
push
lahf
repz
lods
add
mov
repnz
dec
add
cs
mov
sbb
or
cmc
out
add
mov
sub
xor
into
jmp
repz
xchg
or
(bad)
inc
adc
jg
xor
icebp
adc
jle
sbb
nop
out
dec
into
adc
or
cmp
stc
jmp
mov
data16
dec
or
mov
mov
imul
push
test
dec
ret
in
cmp
push
xor
jecxz
inc
ins
retf
repz
test
push
rcr
jnp
mov
ret
aam
jle
test
inc
push
outs
push
mov
rcl
nop
popf
xor
mov
mov
add
dec
mov
fs
iret
cmp
add
retf
movs
add
stos
add
daa
or
push
add
std
lea
push
imul
sbb
sub
inc
push
leave
pop
mov
addr16
cmps
cmp
xchg
ja
sbb
in
ins
xchg
arpl
outs
add
call
xlat
js
stos
cmps
imul
js
(bad)
dec
stos
pusha
rol
pop
(bad)
mov
cmc
mov
add
nop
f2xm1
xchg
or
mov
pop
inc
and
fidivr
xor
jmp
in
xchg
add
jmp
or
cmp
or
sti
pop
xchg
sub
push
(bad)
in
stos
ss
sbb
xchg
popa
out
fnstcw
hlt
dec
cld
xchg
mov
sets
or
xchg
sbb
daa
fcmovne
iret
xchg
icebp
mov
ja
out
jo
lods
cmps
adc
cli
add
shl
scas
sub
es
adc
not
pop
adc
lds
and
test
mov
pop
dec
add
push
xchg
and
mov
mov
mov
dec
out
sbb
jle
and
fimul
mov
jl
mov
jnp
pop
adc
in
repnz
mov
div
test
test
dec
jno
adc
jecxz
daa
fld
xchg
push
sar
jecxz
or
pop
sbb
pop
iret
test
aas
lds
or
movs
or
inc
rcr
push
test
enter
popa
daa
pusha
aad
mov
rol
xchg
cmc
sub
sub
inc
cwde
mov
sub
(bad)
cmp
sti
and
xor
add
push
std
sbb
push
xchg
push
outs
and
push
imul
je
pop
fisttp
ins
div
inc
leave
mov
out
call
mov
shl
jo
stos
stos
xor
and
jge
jge
mov
imul
outs
mov
or
or
das
jmp
leave
scas
cwde
aas
(bad)
dec
fidivr
not
push
adc
jge
fcomp
sub
dec
mov
pushf
outs
inc
xor
stos
pop
out
mov
stos
lods
shr
loope
scas
iret
mov
seta
xlat
and
push
mov
bnd
call
xor
in
push
pop
sub
sbb
push
ins
rcr
cmps
mov
inc
jno
fs
and
xor
and
sbb
daa
outs
jbe
iret
stc
lahf
arpl
pusha
push
out
idiv
es
pop
fs
fwait
sub
rol
ds
rcl
adc
jg
iret
sbb
cmps
test
enter
xchg
and
xchg
clc
ret
sbb
mov
add
sbb
mov
gs
mov
int3
adc
bnd
mov
aas
aam
mov
or
shl
div
and
loop
inc
mov
leave
movs
jo
push
addr16
mov
and
xchg
mov
mov
push
pushf
jns
sahf
cmp
jb
mov
dec
(bad)
sbb
bnd
inc
adc
push
cmps
mov
stos
in
mov
xchg
aam
jl
outs
xchg
jne
cmps
xor
movs
jno
imul
xor
movs
fistp
aas
or
mov
scas
shr
frstor
mov
cmps
jmp
adc
sub
fcomp
pop
jecxz
mov
mov
frstor
xor
out
jp
cmp
add
or
mov
dec
les
mov
stc
fcomp
push
sub
jecxz
mov
mov
adc
and
in
mov
or
jmp
mov
add
pop
sub
ds
jno
inc
(bad)
call
xchg
cwde
sbb
dec
xor
movs
sbb
in
pop
sub
fisttp
ja
adc
scas
fwait
push
sub
int3
xor
mov
jp
dec
repz
mov
sbb
hlt
pop
mov
jle
sbb
mov
imul
push
repz
(bad)
push
mov
dec
or
scas
(bad)
or
pop
(bad)
cmp
inc
in
scas
je
mov
test
dec
scas
inc
jle
sbb
mov
or
inc
dec
scas
ja
outs
cmp
dec
cmps
sar
sar
pop
es
out
out
ret
icebp
or
sub
cmc
mov
pop
cmp
push
sbb
and
jmp
inc
xor
cmps
pusha
int
hlt
(bad)
lds
dec
xor
loope
xchg
ror
imul
pop
jmp
aaa
lea
dec
lock
sbb
add
imul
fnstenv
mov
mov
repnz
les
cdq
cmp
inc
into
cs
mov
mov
rcr
test
push
inc
test
and
jle
xor
xor
ficomp
dec
xorps
push
fnsave
ja
je
mov
dec
add
test
shr
adc
test
and
outs
jb
ja
and
test
sahf
dec
fldcw
xlat
lock
jb
jg
clc
jle
mov
in
pop
inc
cmp
sbb
das
mov
sub
lock
push
out
repnz
jno
dec
shl
pop
(bad)
pushf
arpl
ins
add
cmp
dec
lds
mov
cli
sub
fldcw
ja
(bad)
lods
mov
je
push
enter
sbb
repz
addr16
loopne
mov
pop
mov
push
cwde
fst
shr
jae
icebp
xchg
fisttp
xchg
cli
adc
and
mov
or
push
cwde
sbb
cwde
push
xchg
cmps
pop
sub
int
adc
inc
inc
push
or
les
or
pop
pop
mov
sbb
xchg
mov
dec
inc
adc
add
imul
inc
mov
daa
mov
sub
sub
jo
scas
push
cmovg
sbb
out
pop
adc
(bad)
clc
jmp
fisubr
call
xor
mov
adc
rol
mov
push
stos
not
dec
sbb
inc
mov
int
push
ret
cmp
ja
aad
xor
mov
jns
test
leave
mov
pop
scas
ret
cmp
mov
in
push
std
fsubrp
repz
ffree
pop
pop
sub
xchg
loopne
or
movs
aas
mov
fbstp
ds
nop
mov
or
mov
add
xor
cmp
adc
inc
add
inc
cmp
cs
sbb
cmp
shl
dec
jmp
xchg
or
dec
mov
call
outs
mov
call
and
enter
shl
sbb
mov
add
xor
ins
dec
jecxz
push
and
pop
or
ret
movs
dec
sub
dec
push
adc
aas
cmc
dec
outs
pusha
aaa
jl
lods
adc
mov
dec
scas
and
xchg
push
ret
adc
push
rcl
test
sti
inc
(bad)
pop
out
inc
mov
test
or
cmp
loop
(bad)
xchg
repz
ja
ins
out
aaa
scas
or
xor
stos
mov
daa
sar
shr
sub
mov
sbb
push
jecxz
sbb
je
adc
(bad)
outs
aaa
inc
sbb
sub
xchg
and
sbb
out
cmp
and
and
imul
jmp
inc
and
pop
jl
add
int3
add
dec
cmp
lds
js
test
aad
and
out
and
add
cmp
lahf
test
shl
jbe
add
pop
jle
pop
push
adc
mov
xchg
jmp
int3
push
pop
push
icebp
mov
push
inc
addr16
sub
mov
test
jns
pop
movs
sub
dec
(bad)
(bad)
arpl
cmc
ins
mov
sbb
mov
int
push
cwde
or
adc
push
repz
jo
in
and
pop
mov
(bad)
(bad)
iret
pushf
retf
or
push
pop
mov
cdq
mov
mov
sub
jb
sbb
lahf
jmp
pop
push
mov
aas
fidivr
sub
imul
test
mov
mov
imul
add
jnp
loope
call
js
retf
pop
adc
mov
mov
xchg
xchg
sar
and
jmp
cmp
or
and
or
shl
lods
shr
iret
cmp
daa
idiv
mov
and
cmp
ret
xchg
fbld
sti
jmp
dec
cmp
cmp
xchg
jae
std
(bad)
jns
adc
jb
push
imul
rcl
fisub
test
cmp
dec
daa
jne
leave
int
ss
or
inc
cmc
inc
sub
fwait
sbb
mov
cmp
push
mov
jg
not
pop
or
dec
dec
dec
in
add
push
and
in
adc
push
test
scas
jl
(bad)
jne
stc
lods
clc
jecxz
and
leave
mov
xchg
jmp
xchg
pop
(bad)
adc
add
leave
xlat
xchg
rcl
mov
dec
add
popa
call
jae
js
jo
push
sub
scas
int
ins
inc
pop
stos
xchg
adc
inc
movs
movs
mov
add
inc
lds
cli
mov
push
int
ret
mov
lods
push
cmp
mov
sar
sbb
addr16
or
mov
into
jmp
cli
iret
mov
mov
out
ins
clc
xchg
or
xor
bound
jns
mov
adc
mov
adc
movs
fsub
or
fld
cs
jo
add
xchg
sub
xchg
mov
inc
outs
adc
xchg
mov
in
(bad)
out
mov
jg
jp
pop
mov
call
xor
lods
sbb
adc
inc
inc
and
cmp
(bad)
cmps
and
sub
sbb
mov
push
xchg
stc
and
aas
add
push
cs
rcl
inc
nop
add
test
mov
xchg
loopne
(bad)
call
aaa
scas
aam
mov
jecxz
pop
pop
repnz
ss
ja
in
sbb
maxps
jmp
lds
pop
pusha
in
inc
mov
icebp
xchg
rcr
push
cli
dec
test
xchg
or
int3
push
sbb
mov
sub
mov
mov
data16
iret
jbe
xlat
jno
and
into
cmc
in
icebp
xor
sub
xchg
and
inc
mov
dec
push
and
aaa
sahf
pop
push
xor
pop
or
movs
mov
ss
fisttp
xor
movs
mov
add
mov
shr
add
ret
xor
call
mov
out
mov
shl
sar
cmps
mov
push
adc
adc
iret
mov
push
rcl
aam
outs
xchg
je
inc
pop
fs
inc
or
imul
(bad)
pop
pop
and
mov
sar
mov
pop
test
int
pop
sbb
out
stos
and
mov
in
mov
scas
push
(bad)
push
clc
test
jne
fadd
stos
pop
lods
daa
cmp
add
jbe
imul
dec
jmp
scas
(bad)
clc
dec
dec
mov
cmp
ds
clc
iret
xchg
jl
loopne
inc
pop
lods
inc
jb
ds
mov
mov
fs
into
out
std
sbb
not
sub
and
inc
adc
stc
push
gs
fsubp
test
sbb
ins
lds
ror
mov
dec
inc
ins
cmp
mov
nop
fldpi
in
out
aas
pop
je
cmp
and
call
jbe
jle
int3
aam
icebp
out
cwde
push
(bad)
(bad)
ds
jne
push
shr
leave
mov
in
in
xchg
out
or
arpl
shr
ins
xor
mov
or
scas
jmp
push
test
(bad)
cmp
inc
pop
aaa
dec
scas
jno
mov
jg
or
mov
cmp
jg
idiv
xor
mov
in
ins
jecxz
fstp
or
fidivr
cmp
aam
int3
mov
mov
in
rcl
gs
pop
cwde
adc
push
scas
aad
call
pushf
jg
or
aam
clc
test
mov
cli
sti
mov
dec
sbb
dec
arpl
jle
das
in
add
xchg
mov
xor
inc
enter
dec
dec
sar
retf
sbb
int3
test
adc
lds
xchg
mov
jb
mov
sub
pop
sbb
stos
jmp
cs
out
inc
shr
jae
pop
push
mov
aam
mov
test
mov
jl
xor
adc
and
mov
xchg
mul
mov
out
jmp
jp
clc
mov
mov
or
ficom
and
mov
(bad)
push
out
sbb
shr
jns
adc
push
pop
or
add
pop
fs
push
xor
shl
fcomp
scas
mov
xchg
test
div
pushf
jg
in
mov
loop
inc
test
add
loopne
mov
dec
pushf
inc
mov
jmp
pop
idiv
push
movs
pusha
push
lea
add
dec
mov
fsubr
xchg
mov
jecxz
imul
out
mov
das
push
ds
mov
icebp
jl
pop
ret
das
mov
pop
pop
ins
shr
fcomp
push
sub
pop
outs
mov
fld
dec
cmp
loope
or
jmp
jecxz
jp
inc
sar
imul
lock
xor
inc
cs
xchg
mov
out
mov
or
dec
push
jbe
pop
sbb
xchg
push
daa
(bad)
int
lods
test
shl
out
in
and
ins
imul
adc
das
mov
stos
xor
dec
inc
jp
pop
and
fstp
out
sub
xchg
or
or
mov
in
inc
cld
and
jae
xchg
mov
inc
leave
sub
ins
push
xchg
push
add
dec
pop
jbe
mov
jno
ss
xchg
daa
outs
(bad)
loope
xor
ret
in
in
add
sbb
cmp
gs
test
push
pop
lods
fucomi
inc
fdiv
ret
lods
push
mov
aas
cmp
(bad)
or
int
push
aam
scas
jns
rcl
cmp
int3
mov
xchg
mov
sub
sti
movs
loop
in
shr
fmul
xor
sub
cld
sub
fsub
or
jmp
jb
(bad)
mov
inc
bound
push
ins
mov
jmp
sub
cmps
cmp
lock
inc
aad
fisubr
mov
sub
jno
mov
jns
jne
fsubr
dec
loope
xlat
fdiv
fst
adc
addr16
jp
adc
icebp
inc
lock
ret
outs
shl
std
push
out
repz
push
scas
jecxz
cmp
pushf
jns
test
mov
fdivr
enter
jge
mov
push
xlat
jge
push
sar
adc
lods
or
out
push
and
loope
ja
mov
(bad)
cmp
sbb
(bad)
mov
(bad)
mov
icebp
or
retf
push
push
rol
clc
loopne
inc
dec
pushf
mov
lahf
outs
cmp
mov
nop
dec
sahf
outs
(bad)
sbb
enter
add
ret
push
adc
adc
and
daa
aad
adc
(bad)
fiadd
(bad)
adc
mov
xchg
pushf
dec
aaa
iret
mov
or
xor
push
retf
push
sahf
xchg
xchg
minps
dec
pop
(bad)
pusha
bound
imul
mov
jg
mov
cmps
punpckldq
xor
popf
imul
cmp
aam
push
das
stc
in
push
adc
inc
sbb
pop
cmp
ins
sub
or
aaa
pusha
push
pusha
xor
(bad)
call
ins
push
aad
call
or
aas
rcl
mov
xchg
mov
mov
cli
je
dec
rcr
pop
in
rcl
cli
fnstenv
dec
cmp
shr
inc
pop
inc
fist
pop
test
fist
jne
clc
rcl
jo
pop
pop
mov
loop
int
sbb
test
jb
in
mov
mov
aas
adc
push
sar
jmp
inc
jecxz
test
pop
xchg
xor
test
iret
sbb
mov
mov
mov
inc
sbb
ret
pusha
push
inc
pop
movs
rcr
push
sti
jns
out
imul
stos
cmc
ficom
out
mov
aaa
cdq
inc
enter
(bad)
jmp
cwde
xor
rcr
push
xchg
das
scas
fwait
mov
out
test
std
add
fucom
aam
adc
xchg
sahf
mov
out
sahf
daa
add
or
clc
push
iret
push
jmp
sbb
cmps
mov
pop
add
or
pop
adc
sbb
and
push
into
sbb
mov
inc
jb
es
pushf
imul
loop
sub
psrlq
push
sub
stc
in
repnz
push
mov
fld
loope
dec
into
fsubr
jae
push
jp
xchg
es
cmp
xor
push
and
cmp
fistp
fild
mov
les
mov
jl
loop
inc
(bad)
inc
addr16
cmp
pop
xchg
cdq
or
or
jmp
outs
iret
es
into
cwde
xlat
pop
sbb
push
mov
mov
xchg
addr16
imul
int3
pushf
push
xchg
loopne
pop
sbb
xor
retf
add
inc
test
pop
(bad)
adc
dec
or
jnp
pop
in
sbb
loopne
ins
pop
push
loopne
lods
jmp
or
cwde
int
(bad)
(bad)
loope
xchg
or
cmp
mov
jl
ja
xlat
or
add
push
xlat
and
into
icebp
xchg
shl
movs
add
fbstp
shl
jg
adc
mov
adc
gs
xor
ret
mov
test
std
in
fidivr
ror
cdq
mov
movaps
lahf
or
mov
pop
cmc
rcl
ins
sbb
scas
lock
fdivp
xchg
stos
push
movs
sbb
sub
mov
inc
inc
add
push
adc
jnp
and
retf
jns
cmp
cdq
ins
pop
mov
data16
cmp
sbb
loope
pop
stos
pop
dec
or
fisubr
or
ret
pop
dec
gs
mov
push
push
in
jmp
shl
scas
outs
and
iret
adc
jnp
push
mov
lods
jecxz
mov
ret
jmp
gs
cli
sub
cmp
xchg
and
test
loop
mov
xchg
jnp
scas
xor
retf
cmp
cmp
dec
loope
fst
xchg
mov
rcr
mov
and
mov
fwait
in
sbb
fdivr
push
enter
sti
dec
imul
mov
and
call
lea
jge
mov
cmp
movs
fsubr
xor
jp
mov
and
sub
jno
lods
mov
cli
sub
inc
xchg
movaps
ficom
add
fnstcw
mov
push
dec
clc
jecxz
push
mov
(bad)
out
bound
push
mov
push
into
push
dec
and
pop
and
jno
inc
in
(bad)
loop
jo
mov
adc
lahf
inc
and
add
xchg
dec
loopne
paddusb
ret
jp
cmps
mov
out
xor
xchg
popf
into
rol
jno
inc
bnd
adc
arpl
xchg
mov
sbb
push
push
pop
or
jnp
cmps
aas
lods
fbld
(bad)
sub
retf
jg
dec
xchg
sub
fs
fcmovbe
in
jp
mov
aad
mov
fs
jle
lahf
jbe
jmp
lahf
sub
xchg
mov
inc
sbb
ret
mov
push
mov
cmps
cdq
push
mov
imul
mov
(bad)
dec
loop
sbb
push
fs
push
jg
neg
lea
dec
push
fisttp
icebp
shr
loop
cmc
adc
loope
sbb
push
pop
adc
movs
idiv
and
mov
xchg
mov
sti
ja
sar
cmp
mov
outs
sbb
cwde
outs
lock
inc
out
repnz
adc
mov
mov
sub
dec
push
mov
hlt
(bad)
loop
fdivr
push
jge
cmp
cmp
xor
or
fistp
mov
mov
mov
or
call
inc
mov
push
call
ret
and
sahf
stos
xchg
push
cmp
cld
fld
mov
cmp
pop
je
xchg
mov
arpl
mov
cmp
cmp
pushf
pop
lahf
jmp
sub
cdq
and
mov
fwait
sub
movs
addr16
mov
xor
and
sbb
(bad)
fisttp
adc
xor
cli
add
das
(bad)
mov
and
fldcw
daa
in
mov
dec
ficomp
inc
dec
aad
iret
dec
xchg
mul
jl
fistp
mov
das
ret
mov
repnz
push
out
sbb
xchg
arpl
jmp
in
mov
mov
xor
mov
fs
or
xchg
jmp
cmp
outs
loope
adc
int
stos
jnp
and
jo
mov
dec
jne
cdq
mov
add
mov
rcr
xchg
jmp
(bad)
bound
lods
or
mov
fadd
adc
add
loopne
cmps
icebp
mov
xchg
test
sub
lea
test
or
shl
jo
jo
add
sahf
xchg
pop
popa
iret
test
or
cs
pushf
xor
push
xchg
icebp
inc
and
mov
jns
cld
shl
mov
retf
(bad)
mov
or
test
ss
cmp
into
pop
call
mov
pop
sub
bnd
sub
adc
in
jmp
loope
cdq
pop
(bad)
into
call
push
lds
add
cmc
enter
xor
xor
(bad)
cld
xchg
mov
sub
xchg
pop
inc
lahf
stos
adc
xor
pop
cli
dec
fcom
inc
mov
cwde
popf
xor
rcl
outs
(bad)
sbb
ins
add
into
fistp
fmul
movs
in
xchg
into
imul
sbb
push
xlat
push
xor
jae
inc
bound
aad
mov
jno
sub
jle
mov
into
mov
cmp
mov
lea
ins
aas
mov
push
pushf
xchg
sub
mov
add
push
dec
xlat
les
fwait
int3
pop
retf
lds
cmc
and
mov
cmp
xor
lock
shr
and
retf
mov
jb
push
jno
cwde
mov
shl
cmp
scas
jmp
popa
test
clc
jne
mov
call
loope
gs
dec
sbb
adc
(bad)
xor
mov
push
lock
stos
dec
out
mov
int3
loop
mov
mov
loop
enter
push
adc
(bad)
fisttp
adc
out
pop
dec
cld
ja
push
leave
mov
stc
lods
xlat
push
inc
out
sahf
jno
jmp
or
adc
fbstp
add
push
add
ret
add
(bad)
popf
aam
push
pop
out
sub
(bad)
rcl
test
test
jnp
stos
jp
stos
mov
dec
or
popa
call
sub
inc
int3
jnp
scas
ins
pop
and
repnz
outs
call
mov
retf
cmc
sahf
push
data16
(bad)
clc
pop
fcom
js
jne
sbb
sbb
loop
retf
(bad)
jg
jae
jle
lods
sub
push
inc
adc
sub
loop
xor
arpl
and
ficomp
or
das
stos
mov
or
cmp
arpl
inc
dec
nop
mov
or
test
push
data16
inc
xchg
imul
mov
ret
rcl
rcr
mov
fmul
or
test
cmp
(bad)
sbb
cmc
loop
bound
inc
repz
pop
ja
pop
inc
push
gs
xor
je
ret
call
mov
sbb
outs
xchg
shl
call
mov
int3
imul
jne
pop
adc
xlat
call
sub
xchg
jmp
or
dec
sbb
(bad)
in
mov
test
movs
push
xor
or
sahf
sbb
push
push
pop
pop
jne
dec
push
jo
cld
ins
aam
(bad)
stc
pop
or
push
aad
in
(bad)
jg
push
(bad)
fs
in
xor
popa
push
jb
ds
pop
mov
dec
sbb
xchg
mov
pushf
in
popf
loopne
inc
gs
inc
xchg
loope
scas
out
pop
dec
popa
dec
dec
mov
cmc
das
mov
adc
nop
sbb
mov
(bad)
aaa
iret
mov
xchg
pop
ins
nop
push
les
push
lods
adc
dec
sbb
cmp
add
ret
sub
enter
daa
nop
std
into
dec
cmps
shl
mov
sub
cmp
rcl
add
pusha
xchg
in
xchg
(bad)
or
and
add
pop
pop
mov
iret
and
cmps
sub
pusha
test
dec
sub
pop
push
add
xchg
pop
or
stc
rol
sub
lods
pop
retf
jmp
hlt
mov
xchg
mov
leave
mov
test
pop
neg
inc
xchg
stos
xchg
jb
pop
xchg
add
and
sub
jle
sbb
add
repz
dec
jmp
jae
inc
loope
(bad)
daa
mov
add
int
(bad)
cwde
aad
lahf
inc
movs
stc
inc
stos
jmp
(bad)
xor
or
mov
jb
ficomp
sti
push
mov
in
in
pop
adc
jecxz
mov
cs
pop
sbb
sub
lock
in
sti
mov
int3
dec
rol
loopne
and
out
dec
xchg
xor
sbb
pop
dec
je
lods
push
sbb
mov
and
imul
(bad)
and
sub
sti
xor
adc
jp
retf
dec
add
ins
and
mov
repnz
jnp
les
sub
jno
pop
jp
mov
adc
(bad)
cmp
mov
ret
jmp
in
loop
jecxz
ficom
inc
popf
data16
mov
ret
sti
hlt
jbe
pop
shl
out
retf
mov
call
mov
jb
test
or
dec
call
sbb
test
mov
arpl
push
iret
inc
out
jge
jge
inc
push
sub
in
mov
mov
mov
rcl
adc
pop
and
jns
dec
rcl
dec
test
cmp
mov
pop
addr16
imul
jmp
je
loop
pusha
push
xchg
ficom
mov
add
nop
ret
jnp
lock
jg
pop
jmp
retf
into
aas
xchg
lds
mov
jno
push
or
call
fcmovb
jecxz
int3
mov
sti
inc
lods
or
call
xor
cdq
xor
push
jmp
sub
xchg
mov
or
and
(bad)
adc
lock
mov
fst
dec
and
mov
stos
add
push
test
cmp
sub
cmc
mov
sar
adc
cmp
pop
adc
add
fiadd
pop
popf
jg
mov
jo
cdq
push
jo
loope
mov
pop
and
push
mov
dec
les
and
add
mov
loop
push
sub
mov
into
retf
push
jle
das
sbb
xor
lods
std
jbe
mov
daa
push
rol
rcl
dec
cld
mov
fimul
(bad)
sbb
in
sub
jmp
or
stos
adc
call
mov
pop
mov
in
adc
cmp
sbb
inc
fstp
xchg
cmp
movs
mov
jb
dec
je
cmp
xchg
idiv
lods
inc
jmp
fs
inc
dec
mov
mov
cmp
hlt
bound
push
push
ret
jmp
aas
mov
jmp
bnd
jmp
jo
mov
(bad)
pusha
mov
jbe
cs
adc
push
cmp
ja
scas
or
xchg
fcom
pop
pop
xchg
sub
inc
sti
mov
ror
and
fcomp
out
mov
stos
fwait
loope
sub
push
scas
out
call
sbb
push
into
mov
enter
fcomp
sub
stos
jne
jle
pop
movs
les
adc
mov
mov
jl
or
test
sub
in
xchg
and
inc
sub
je
leave
sbb
xor
fs
adc
sbb
push
jne
das
lods
outs
jle
xor
arpl
jl
ja
into
mov
adc
cli
enter
push
or
enter
sbb
cmc
adc
sbb
add
push
pop
ret
xor
adc
sub
jg
es
scas
sub
sub
int3
dec
popf
adc
ficom
je
mov
mov
fcomp
jae
xor
sbb
cs
push
jmp
stos
push
mov
pop
dec
xchg
add
jnp
jmp
aad
push
jo
loopne
fild
(bad)
stos
mov
sbb
mov
adc
addr16
cmp
repz
into
adc
ds
mov
pop
enter
je
in
cmp
xchg
dec
stos
cmp
mov
ret
outs
sub
vmread
mov
jecxz
gs
push
dec
xchg
adc
movs
cmp
fidiv
push
mov
inc
and
and
adc
pop
div
rol
add
jecxz
sti
sub
mov
inc
addr16
or
push
mov
iret
nop
(bad)
pop
pop
mov
test
js
sub
neg
inc
loope
xor
in
pop
fsub
icebp
pop
sub
(bad)
mov
sub
xor
fisub
cmp
jns
mov
lods
outs
icebp
iret
loopne
(bad)
adc
stos
sub
test
fnstenv
fdiv
sbb
inc
or
add
imul
pushf
retf
mov
cmp
imul
or
jo
push
cs
pushf
mov
jp
(bad)
stos
sti
jbe
cdq
or
shl
fisub
pop
sbb
adc
jmp
inc
dec
xor
mov
push
push
mov
dec
push
mov
cmps
stos
jmp
push
mov
retf
inc
jmp
cli
xor
iret
add
sbb
fst
jg
fisubr
enter
mov
movlps
xor
popf
aam
or
xchg
loop
dec
mov
jnp
dec
pop
sub
(bad)
(bad)
and
dec
je
add
push
push
movs
in
je
arpl
enter
add
xchg
add
mov
mov
sbb
pop
mov
inc
(bad)
sar
jl
scas
and
leave
cmp
fmul
sub
ret
pop
dec
mov
jo
mov
mov
daa
das
add
sub
mov
add
add
inc
cmp
dec
bound
outs
mov
adc
cmp
push
shl
js
dec
sub
cdq
lea
add
fsubr
mov
mov
jo
dec
loope
xchg
stos
xchg
pop
or
test
add
inc
sub
sub
sub
mov
adc
in
jecxz
jb
cmp
int
dec
stc
icebp
sbb
adc
add
add
adc
cli
jb
ja
and
xchg
cmp
or
jge
js
sbb
ja
xchg
es
inc
cs
push
mov
sub
ret
xchg
fisttp
retf
iret
in
inc
leave
popf
sbb
int
mov
cs
(bad)
ins
pop
jle
dec
int3
sahf
fs
pop
shl
jb
js
mov
xlat
jnp
out
fisub
add
mov
movs
test
sub
adc
jno
das
inc
jge
lahf
xor
or
inc
jo
popa
scas
(bad)
in
push
repnz
ds
aas
mov
mov
cmp
dec
stos
adc
jb
sbb
cs
out
lods
mov
iret
sbb
add
push
inc
mov
pop
test
jle
outs
pop
outs
aam
(bad)
or
mov
inc
mov
call
daa
mov
lods
inc
pop
push
sub
ja
xchg
mov
push
int3
jmp
cmp
inc
cli
imul
mov
cmp
into
dec
inc
cmp
shl
cmp
push
or
dec
jnp
add
push
ret
shl
mov
pop
ror
xlat
mov
add
rcr
mov
sahf
push
mov
lahf
dec
xor
test
test
push
aam
push
frstpm(287
int
mov
push
jl
jg
dec
outs
push
mov
retf
std
sub
mul
xor
inc
lds
push
imul
pushf
cmp
inc
outs
and
jge
test
out
hlt
mov
cwde
or
jp
jne
arpl
cmps
jae
test
jl
sub
lock
pop
retf
fwait
daa
stc
sti
or
cmc
xor
lock
sub
add
xchg
imul
fwait
xor
cwde
pop
sub
mov
std
add
adc
stc
(bad)
cli
mov
ins
xchg
fbld
add
aam
(bad)
(bad)
inc
sahf
fiadd
pop
add
or
stos
nop
outs
not
dec
mov
dec
ins
iret
arpl
push
lods
push
jb
dec
xor
xchg
pop
push
push
or
scas
push
repz
cmps
xor
pop
cs
mov
out
adc
ret
pop
int
pop
cmc
rcr
mov
jg
imul
clc
es
mov
and
stos
arpl
jmp
inc
jno
rcl
out
(bad)
int
push
pop
xor
inc
cmp
fist
mov
adc
loope
mov
test
bound
cmp
pop
mov
fdivr
jb
sbb
dec
shl
jmp
pushf
in
call
push
and
cdq
mov
shl
ds
and
loopne
mov
fcom
(bad)
sbb
ss
stos
add
movs
xchg
fisttp
mov
out
daa
outs
cmp
ret
(bad)
mov
int3
inc
push
pop
push
xadd
retf
xchg
mov
adc
lock
mov
stc
pusha
adc
jge
mov
fmulp
push
and
shl
inc
mov
mov
cld
cmp
sbb
popa
cmp
rol
sub
cmp
xchg
into
ja
stos
fs
lock
xor
aad
mov
mov
pop
and
adc
out
jne
cdq
icebp
jp
stos
call
mov
xchg
cli
dec
push
sbb
mov
ficom
(bad)
dec
push
mov
dec
call
push
popa
mov
cmc
xor
(bad)
jecxz
retf
cmc
sti
not
adc
mov
jecxz
dec
mov
pop
imul
xor
call
ja
mov
(bad)
aad
or
sbb
dec
loop
add
jecxz
mov
inc
shl
mov
inc
jmp
adc
dec
dec
mov
out
ins
pop
mov
push
cmc
bound
frstor
(bad)
xor
ins
add
jbe
jno
stos
jg
inc
cmp
inc
add
out
out
mov
or
les
dec
cmps
pop
mov
dec
mov
sahf
jg
and
out
daa
jp
ret
push
mov
pop
mov
mov
and
scas
sub
rcr
jne
pop
mov
mov
sbb
test
sbb
jp
mov
lods
cmp
pop
movs
cli
stos
pop
jmp
shr
sbb
push
sbb
inc
or
out
out
mov
cld
test
test
jp
and
or
pop
mov
jle
out
in
mov
mov
add
push
(bad)
mov
inc
aaa
imul
push
scas
psubusw
sub
mov
inc
inc
fwait
and
arpl
js
les
mov
add
jg
sub
inc
ror
rol
xlat
or
jo
js
in
add
repz
inc
leave
cmp
cmps
mov
std
dec
inc
pop
mov
outs
setl
jne
retf
retf
inc
push
xchg
mov
jmp
ja
pusha
imul
stos
and
xor
xor
mov
loope
xor
dec
mov
aas
mov
jno
inc
cmp
sbb
or
not
imul
or
pop
(bad)
add
bound
push
mov
and
jecxz
mov
sub
mov
daa
and
das
retfw
fdivr
or
int
popf
jae
mov
xor
nop
icebp
int3
daa
push
xor
popa
int
push
mov
push
call
or
jnp
dec
stos
adc
xchg
(bad)
xchg
xor
outs
imul
pop
std
xor
js
rcr
mov
sbb
mov
pop
test
or
sub
fwait
push
js
shl
sbb
mov
in
inc
jno
mov
cmc
mov
(bad)
xor
cmp
adc
ds
mov
pop
dec
(bad)
aam
cmp
jmp
jmp
and
pop
out
add
jns
mov
mov
iret
push
lods
leave
adc
mov
xor
or
lods
dec
mov
dec
sbb
cs
jae
dec
lock
jo
and
loopne
sub
add
hlt
push
js
inc
(bad)
cwde
xchg
mov
and
clc
xor
out
inc
cmp
jmp
cmp
push
mov
loopne
aas
inc
dec
call
cmps
push
add
leave
aad
push
aaa
push
pop
inc
sahf
sbb
xor
pop
int3
out
in
xchg
push
std
sub
mov
or
or
(bad)
mov
mov
dec
in
sub
(bad)
cmp
sahf
mov
add
xchg
call
xor
out
jno
test
pop
sti
inc
and
sbb
mov
pop
mov
jmp
xor
mov
mov
daa
xor
iret
(bad)
outs
dec
call
and
xor
ins
stos
rcl
push
out
shl
ins
jae
or
int
iret
cmps
cdq
adc
ins
xchg
int3
add
xchg
sbb
fdiv
pop
psllw
scas
shl
push
sbb
repnz
fisubr
jmp
pop
dec
xor
push
stos
push
stos
in
jnp
add
dec
out
movs
mov
pop
mov
stc
push
(bad)
loop
scas
in
aam
imul
jmp
push
lahf
jno
xchg
enter
mov
sbb
sub
icebp
inc
and
into
(bad)
sti
outs
jmp
sbb
push
push
dec
(bad)
adc
mov
mov
xchg
xchg
mov
xchg
nop
outs
sbb
arpl
cmp
dec
imul
jge
in
xchg
std
(bad)
je
cmc
mov
std
sub
rol
xor
xchg
add
sub
mov
in
mov
in
loopne
or
pop
adc
into
rcr
mov
arpl
jmp
push
xor
dec
movs
ds
xor
sahf
pop
enter
pusha
mov
(bad)
sub
fcmovnbe
fwait
mov
xchg
jl
jns
sti
mov
test
int
loope
rol
xchg
add
cmps
sub
and
push
add
scas
leave
sub
dec
lock
xor
sub
sbb
mov
push
movs
dec
retf
sub
push
push
test
xchg
hlt
mov
shl
call
sbb
mov
fbld
pop
add
sub
cmp
push
sbb
fbstp
je
mov
les
mov
bound
fstp
inc
push
pop
cli
(bad)
mov
cmp
lds
sub
(bad)
icebp
fist
and
adc
ret
(bad)
ins
fiadd
jb
es
mov
js
ret
sbb
jle
push
cdq
sbb
test
lock
rep
lahf
push
adc
and
ins
test
out
mov
mov
dec
ins
aad
out
adc
push
pop
mov
and
leave
mov
lods
and
xor
sahf
mov
mov
das
not
adc
retf
mov
mov
ss
or
popf
mov
js
adc
sub
sbb
jmp
jecxz
cdq
inc
jmp
ins
clc
pop
pop
sbb
jp
mov
push
cmp
into
mov
test
push
popf
mov
and
dec
sub
mov
xchg
xchg
fadd
fstp
adc
jae
mov
or
movs
es
or
repz
push
daa
ins
inc
(bad)
clc
dec
cli
daa
push
iret
xchg
and
dec
or
jo
xchg
cs
add
and
adc
pop
pop
mov
outs
cld
fisub
out
cmp
scas
jns
into
adc
push
call
pop
aaa
mov
xchg
inc
add
mov
movs
dec
popf
(bad)
movs
inc
xor
pop
xor
and
jp
inc
jb
stos
push
mov
sub
ss
xchg
push
test
aad
nop
adc
stc
xchg
xor
pop
jno
dec
sub
or
sbb
jns
fnsave
stc
cwde
das
sbb
jo
(bad)
and
or
test
push
add
fs
jbe
(bad)
test
cdq
cmp
lahf
sti
xor
test
push
sbb
pop
das
stc
cmp
jae
adc
lds
jl
push
adc
mov
jne
scas
mov
mov
(bad)
jmp
xchg
std
xchg
jp
test
int3
shr
mov
xchg
xor
bound
dec
mov
ror
rol
call
std
repz
dec
into
stos
xchg
mov
cmp
inc
adc
mov
inc
int3
stos
fisubr
sub
popa
addr16
mov
and
cmps
sahf
mov
dec
mov
mov
into
dec
jns
xor
xchg
and
pop
out
addr16
pop
imul
push
lods
dec
sbb
iret
loopne
ja
dec
lds
mov
fidivr
cmp
aas
fdiv
push
mov
push
sbb
xor
test
bswap
cld
daa
and
call
ds
push
pop
jbe
(bad)
push
dec
inc
repz
jl
into
(bad)
(bad)
inc
fs
dec
in
adc
mov
xor
stc
loope
push
push
add
xchg
sub
cmp
je
fnstenv
lea
adc
push
push
stos
test
lahf
fmul
adc
sub
call
addr16
dec
sbb
jae
loope
mul
ds
popa
test
inc
lahf
sub
or
push
movs
fucomp
rcl
sbb
pusha
test
jmp
sub
imul
mov
or
jge
inc
adc
xor
(bad)
jmp
jmp
div
ds
mov
inc
push
sbb
mov
stos
adc
out
push
call
(bad)
and
jecxz
xchg
push
test
mov
mov
enter
xor
cmc
shl
dec
je
(bad)
mov
sub
cwde
pop
dec
push
icebp
ds
or
stc
outs
sbb
pinsrw
add
cmps
inc
imul
or
ins
adc
jge
xchg
and
xchg
sub
dec
int3
enter
inc
ds
dec
aas
imul
sub
jp
retf
adc
ficomp
iret
(bad)
and
pop
jge
jl
lods
cmps
(bad)
jmp
jnp
add
cmp
imul
in
rcl
jae
and
sub
mov
jae
mov
test
pop
xchg
jb
adc
jle
(bad)
xchg
mov
cmp
test
(bad)
inc
call
aaa
stc
jbe
enter
push
imul
je
push
or
sar
(bad)
ret
loopne
sub
sbb
dec
leave
sbb
clc
sar
inc
ret
data16
cld
jae
mov
out
push
ret
dec
idiv
cmp
retf
xor
push
fidivr
out
xlat
pushf
jae
jne
fist
pusha
std
sub
or
inc
popf
cmps
pop
inc
addr16
push
out
mov
es
(bad)
int3
cmps
xchg
lahf
aam
push
pop
mov
es
in
sub
mov
mov
sub
or
xor
stos
mov
pop
(bad)
ds
mov
lahf
pop
mov
cs
dec
mov
xchg
clc
pop
jge
out
(bad)
mov
mov
fisub
enter
fisubr
ret
cmp
imul
jecxz
push
cmp
rcr
inc
test
ret
retf
ins
jnp
pop
stos
pusha
inc
mov
adc
sub
add
pop
int3
fild
cmp
aad
stos
retf
fiadd
mov
dec
add
or
mov
xchg
loope
lods
mov
add
cli
fimul
inc
xor
push
gs
inc
fsubp
cld
adc
imul
pop
test
sbb
in
push
inc
pusha
enter
les
leave
cmp
push
inc
add
gs
jns
and
inc
mov
cmp
pop
push
mov
sub
gs
push
jbe
repz
add
bound
mov
hlt
jmp
lods
fs
or
cmp
mov
adc
shr
in
pop
dec
fcomp
sbb
cs
push
sar
cmp
push
adc
test
push
jp
int3
mov
push
jbe
repnz
push
inc
cmp
(bad)
mov
mov
ins
sbb
and
xchg
nop
mov
ja
fadd
js
(bad)
cli
enter
popa
mov
jnp
lods
or
(bad)
adc
pop
rcl
ret
mov
fidiv
dec
addr16
out
cwde
cmps
sbb
into
mov
add
lahf
mov
fs
imul
addr16
push
or
leave
jb
sbb
push
dec
push
inc
test
cmp
nop
int3
lds
fiadd
sub
out
inc
ins
mov
sub
adc
mov
ins
sti
gs
mov
mov
addr16
cwde
add
rcl
push
cmp
jno
test
adc
cmps
cmp
jl
test
fist
mov
mov
call
mov
jg
jns
adc
xchg
mov
(bad)
repz
repz
std
ret
in
xor
movs
gs
ins
in
aad
shr
lds
scas
xor
push
xchg
out
push
add
inc
cmp
outs
dec
jecxz
or
les
lahf
or
xchg
adc
xlat
jmp
ficomp
xor
(bad)
sub
xchg
and
jb
cmp
add
jl
data16
cwde
mov
and
or
loop
sahf
icebp
inc
inc
push
add
mov
imul
test
pop
movs
out
hlt
sbb
jmp
jnp
pop
daa
jo
fimul
icebp
frstor
aam
arpl
movs
xchg
cmps
adc
mov
fist
std
adc
adc
test
mov
mov
mov
adc
push
faddp
test
(bad)
shl
adc
and
pop
ret
xchg
pop
scas
stos
out
cs
pop
lahf
mov
mov
retf
fnsave
mov
ret
outs
ret
imul
movs
loope
inc
sbb
xor
xchg
fidiv
and
mov
je
das
sub
int
pop
push
icebp
push
and
gs
xchg
mov
rcr
shr
cmp
jnp
pusha
jp
lods
mov
fiadd
arpl
scas
inc
mov
rcr
mov
dec
xor
lods
jmp
lea
in
and
mov
daa
sbb
cmp
daa
and
in
xor
xor
btc
frstor
les
add
and
cli
jg
adc
arpl
sub
inc
inc
mov
mov
pop
fdiv
mov
sub
scas
xor
lods
cld
lock
fstp
xchg
test
push
lahf
icebp
inc
aad
(bad)
dec
xor
loopne
inc
outs
push
push
imul
sbb
nop
dec
cmps
jg
mov
into
push
iret
pop
pop
ss
cli
sar
sub
push
stc
repz
jae
ins
mov
inc
mov
inc
add
jge
jne
out
shl
mov
scas
pusha
and
and
inc
fbstp
rcr
ror
push
or
int3
lods
mov
pop
push
data16
movs
mov
scas
(bad)
mov
fldcw
push
jb
xor
mov
pop
mov
jge
ds
popa
xchg
repnz
mov
and
enter
bound
jo
inc
push
icebp
imul
or
adc
mov
mov
mov
aas
push
imul
push
dec
enter
jne
shr
cmp
(bad)
retf
pushaw
or
hlt
jne
mov
out
(bad)
fwait
cmps
or
xchg
pop
jb
les
(bad)
xchg
or
bound
test
xchg
mov
push
in
xlat
push
ss
dec
push
sti
sbb
mov
mov
jnp
or
adc
mov
out
faddp
and
sub
push
js
jo
push
push
sbb
aas
push
das
fwait
mov
xchg
out
fild
mov
push
inc
cmp
jo
mov
pop
push
xor
mov
jnp
data16
cwde
mov
xor
xlat
jo
test
or
push
inc
div
and
dec
adc
mov
push
xchg
inc
jns
sar
mov
sub
pop
pop
sti
adc
rol
je
into
push
int
sbb
icebp
jl
test
mov
push
arpl
ins
aad
test
out
jmp
icebp
loop
fadd
outs
popf
leave
lea
mov
cwde
out
or
inc
(bad)
(bad)
repnz
mov
add
popa
mov
dec
lahf
jecxz
or
xchg
aaa
test
outs
dec
fnstenv
push
pop
out
call
adc
adc
or
icebp
inc
ja
fnstsw
call
mov
xor
jmp
imul
sahf
(bad)
mov
sub
loop
fs
test
adc
adc
cmp
mov
stos
push
test
fld
into
jns
mov
stos
sub
mov
inc
push
mov
mov
ins
xor
pop
or
adc
inc
std
lock
test
cmp
leave
sahf
jns
shl
inc
hlt
cwde
mov
or
cmp
push
sbb
jno
daa
ins
and
mov
hlt
(bad)
in
xchg
ss
lods
ror
sbb
test
rol
std
loopne
popa
inc
push
sbb
and
ds
mov
lahf
ins
push
mov
leave
sub
and
xor
mov
rol
push
pushf
(bad)
ins
call
add
pop
dec
pushf
inc
adc
mov
js
adc
sub
or
out
mov
pop
and
fmul
jb
fdiv
adc
cmp
push
adc
jo
sti
or
fsubr
and
pop
or
xor
xor
mov
stos
adc
sbb
je
jmp
add
int
inc
sub
outs
xchg
jb
shl
jo
ds
lahf
outs
mov
dec
call
int
pusha
adc
dec
enter
mov
sub
out
push
cmc
jbe
test
jle
push
loope
sbb
push
sbb
push
data16
repnz
add
in
jmp
(bad)
out
leave
xor
loop
cli
aas
mov
and
pop
push
mov
arpl
mov
xchg
inc
stc
in
sub
mov
jmp
adc
jae
(bad)
mov
add
call
inc
push
in
push
aam
adc
and
in
aam
xchg
adc
std
repz
push
and
push
sti
ins
scas
repz
dec
bnd
sbb
dec
call
lea
mov
dec
loopne
add
ret
inc
mov
ret
push
jg
(bad)
in
pop
mov
pop
imul
clc
aad
cmp
pop
les
xchg
add
les
fld
inc
mov
jg
cli
addr16
imul
or
test
clc
push
or
dec
les
loopne
loope
sbb
mov
inc
paddusw
stos
cmp
add
nop
xchg
pslld
mov
push
cdq
pop
movs
inc
fs
shl
pop
xor
jae
stos
into
jle
shr
xor
aad
xor
popf
mov
shr
pop
stc
sub
add
mov
jp
dec
outs
faddp
loope
mov
shl
xchg
(bad)
aad
cmps
(bad)
(bad)
ins
imul
lods
cmps
fisttp
aaa
add
dec
mov
test
ffree
test
pusha
or
sar
stos
rol
rcr
jns
stos
sub
shl
pop
fldenv
daa
add
sub
sbb
pop
out
fld
mov
ins
push
xor
daa
ins
cmps
fisttp
xchg
sbb
repz
out
pop
outs
test
lods
mov
mov
test
lea
(bad)
sahf
xchg
popf
in
cli
jp
sub
es
icebp
stc
ret
add
cmp
pop
jmp
mov
out
sub
xor
pop
add
mul
or
scas
mov
mov
xor
xchg
xor
adc
pop
data16
cmp
mov
mov
outs
or
mov
sbb
push
adc
push
test
add
mov
pop
std
iret
loop
jmp
ins
pushf
int3
add
test
jne
pop
jne
inc
test
push
imul
push
jbe
stc
cmp
stc
dec
jne
xchg
fistp
movs
ja
ins
adc
sahf
sbb
jg
sub
pushf
call
and
hlt
mov
cmc
dec
std
icebp
pusha
call
xchg
mov
in
xchg
imul
mov
ret
mov
popa
aam
push
mov
sub
shr
jne
xor
sbb
retf
pop
nop
mov
nop
jle
pop
mov
addr16
icebp
mov
dec
movs
adc
and
fisttp
mov
call
pop
outs
inc
sbb
mov
aaa
ret
mov
push
xor
(bad)
cwde
scas
jae
pop
and
out
frstor
pop
int
adc
clc
jp
xor
mov
push
mov
movzx
inc
xchg
out
cmp
repnz
fwait
xchg
add
sub
test
add
addr16
mov
out
mov
cmp
cdq
fisub
cmp
sbb
adc
test
in
rcl
or
jmp
into
sbb
pop
out
inc
sbb
and
and
cmp
ror
ret
dec
or
sub
sub
mov
cmc
cmc
daa
sub
scas
sub
inc
jnp
stos
inc
hlt
dec
jmp
pop
rol
addr16
in
iret
mov
mov
leave
jmp
jnp
add
cmp
sub
xchg
int3
push
(bad)
enter
adc
test
mov
push
add
out
jb
cmp
fst
rcr
pop
inc
dec
xchg
cmp
xor
loop
jae
mov
and
mov
jg
mov
add
cmp
push
inc
mov
push
and
ins
and
xor
cmps
fld
pop
add
ins
cmp
outs
adc
pop
xchg
adc
out
(bad)
pop
add
mov
out
popf
inc
and
add
ins
jns
(bad)
in
shl
sbb
into
movs
mov
push
push
mov
icebp
daa
(bad)
push
adc
shl
fsub
nop
jno
xlat
mov
push
jmp
fdivr
xchg
loopne
imul
push
mov
pop
lods
loopne
gs
mov
mul
(bad)
jns
fwait
or
or
nop
adc
push
test
pop
inc
aaa
sub
inc
pop
mov
mov
in
push
sub
xchg
or
mov
pop
sbb
mov
and
adc
xchg
mov
dec
xor
and
sbb
fldcw
lea
cmp
std
leave
xchg
pop
inc
sub
jo
fwait
cmp
call
mov
inc
and
jmp
neg
dec
adc
push
mov
(bad)
shr
push
xor
es
in
call
je
pop
adc
popf
jb
addr16
mov
cmp
xor
scas
jp
pop
lods
scas
mov
cmp
sar
mov
in
mov
in
cmp
out
inc
call
sbb
shr
scas
xchg
xchg
push
in
mov
clc
jge
push
xchg
imul
push
test
repz
pop
pop
inc
in
dec
mov
fstp
lods
add
fsubr
push
add
push
in
shl
dec
sbb
push
aaa
ret
jmp
add
dec
mov
sbb
adc
and
ja
mov
shl
pop
dec
pop
test
mov
ret
les
fstp
(bad)
bound
call
cmps
call
or
cmp
xor
es
(bad)
mov
dec
movs
mov
(bad)
(bad)
(bad)
mov
les
pop
mov
test
push
aad
aaa
fbld
cmp
xlat
push
imul
(bad)
jp
sbb
adc
icebp
fiadd
dec
icebp
hlt
jae
xchg
lea
mov
push
cmp
or
fistp
stos
pop
lds
pop
in
mov
inc
arpl
jg
aas
xor
icebp
aaa
std
jp
ret
aad
push
inc
arpl
jmp
cmc
add
jg
cwde
dec
jno
dec
(bad)
xchg
imul
outs
call
je
and
out
mov
and
fadd
clc
adc
pop
cmp
loopne
fsubr
test
mov
movs
adc
push
jp
sbb
mov
dec
fcom
movs
xchg
out
push
shl
shl
call
jo
pop
shl
das
imul
or
(bad)
xor
inc
sub
xchg
cwde
inc
in
test
jnp
rol
and
and
sub
jnp
hlt
loope
test
int3
mov
add
mov
xlat
test
jmp
(bad)
mov
cwde
retf
cli
adc
mov
pushf
sahf
repnz
retf
out
nop
xchg
jbe
adc
call
xchg
mov
adc
js
xor
mov
imul
pop
fldcw
inc
cli
hlt
inc
int
xchg
add
ja
jae
xor
nop
(bad)
out
add
rol
data16
or
or
mov
xchg
jecxz
clc
xor
mov
jg
sti
jp
stc
dec
in
jmp
cmp
mov
xchg
shl
icebp
sbb
gs
and
push
pop
fiadd
repz
mov
xor
mov
adc
inc
push
inc
push
in
mov
icebp
je
(bad)
stos
(bad)
icebp
mov
out
int
inc
and
lods
adc
int
pop
xor
and
push
mov
out
mov
dec
xchg
jge
mov
outs
jl
les
add
lods
cmp
adc
pop
sti
lods
test
sbb
inc
push
pop
and
jmp
cmp
(bad)
stos
jbe
push
sub
rol
out
mov
cmp
sahf
loop
and
arpl
hlt
inc
fist
imul
mov
push
les
adc
dec
or
xchg
jle
mov
add
xor
sbb
add
fld
in
pop
(bad)
jp
push
add
pop
xor
js
imul
sbb
cmps
paddsb
mov
push
or
adc
les
and
or
fst
mul
jmp
dec
inc
dec
dec
jecxz
cmp
sub
fmul
xchg
cmp
idiv
imul
dec
cmp
movs
mov
popf
mov
and
mov
sbb
es
(bad)
fisttp
arpl
jae
cmp
mov
xor
cmp
(bad)
imul
jmp
lar
xor
popa
pop
fs
ins
outs
icebp
cmp
dec
or
imul
loope
lahf
lods
call
mov
fucomip
retf
idiv
jp
into
cmp
popf
imul
daa
pop
jne
mov
mov
lods
mov
je
(bad)
sahf
retf
pop
pand
mov
jnp
jmp
jnp
ret
out
jnp
pop
add
pushf
fsubr
push
mov
(bad)
das
xchg
push
sub
inc
dec
dec
aad
ja
iret
sbb
sbb
retf
push
imul
into
imul
(bad)
(bad)
das
and
cmps
fist
mov
inc
scas
inc
cmp
retf
fcomp
cmp
sahf
lods
iret
xor
inc
sub
push
add
mov
push
mov
addr16
imul
ret
call
cmps
arpl
cs
and
ins
ja
mov
out
jae
adc
pop
fdiv
lods
inc
mov
xor
stc
jl
mov
add
mov
inc
fs
out
xchg
xor
xchg
aam
add
pop
adc
xchg
push
loop
lea
and
and
adc
std
cmp
jo
sub
gs
xor
data16
sbb
dec
fist
add
and
add
loop
jb
mov
sub
jae
pushf
ror
mov
adc
push
ficom
fidivr
jl
push
push
dec
or
ret
(bad)
add
nop
fdivr
fsubr
pop
and
push
jecxz
movs
sar
mov
js
out
inc
push
jb
aaa
std
push
mov
hlt
push
les
adc
sbb
pop
xor
inc
push
mov
popa
in
pop
(bad)
call
rcr
std
mov
pop
sbb
mov
mov
(bad)
jae
das
jle
scas
cli
adc
sub
cmc
adc
out
sbb
push
(bad)
nop
push
mov
lock
iret
dec
(bad)
in
aad
int3
imul
xchg
mov
in
mov
pusha
mov
fild
(bad)
mov
add
inc
enter
push
iret
push
aam
dec
push
jnp
scas
xchg
jns
push
xor
movs
pop
mov
addr16
xchg
mov
cmp
aam
leave
pop
xor
aas
ret
test
inc
cmp
and
shl
(bad)
xchg
ds
pop
sub
mov
adc
int3
inc
jmp
dec
jo
jns
mov
pop
and
and
pop
js
push
imul
pop
xchg
and
jno
int
retf
cmp
sahf
and
pop
minps
stos
dec
mov
cmp
jp
jmp
gs
fwait
ror
jl
jecxz
or
test
inc
xor
add
aad
xchg
test
and
push
imul
jno
loopne
rcl
stc
mov
data16
sub
in
push
cdq
mov
mov
es
cmp
lahf
ror
or
(bad)
mov
mov
fs
pushf
out
loopne
xor
movs
and
push
xchg
movs
sbb
cmps
test
mov
adc
mov
mov
in
push
icebp
jmp
jne
inc
add
fimul
mov
jno
sub
mov
rol
pop
call
nop
adc
js
clc
cmp
push
sub
pop
in
mov
inc
addr16
std
jno
mov
pusha
(bad)
jbe
imul
pop
adc
stos
addr16
jg
xchg
pushf
enter
mov
mov
or
jmp
hlt
push
push
push
jae
push
jne
out
daa
movs
push
jg
jmp
mov
mov
fwait
or
pop
in
test
xchg
cmp
cmp
in
mov
stc
sbb
(bad)
ds
jge
cmp
arpl
jo
enter
dec
xor
or
test
xor
(bad)
push
or
hlt
push
jge
scas
sar
or
mov
adc
pushf
lea
cmp
idiv
or
scas
push
xor
cmp
mov
cmp
rcr
xlat
loope
jns
cmps
or
scas
test
mov
fadd
jge
jb
imul
push
jbe
pop
cmps
sub
rcl
sahf
push
xor
add
popa
cwde
fsubrp
xchg
jne
cmp
stos
mov
push
or
fidiv
call
jmp
lahf
sti
mov
rcr
xchg
call
push
jbe
mov
ret
cs
(bad)
xor
sub
pop
lahf
sub
sbb
mov
iret
jp
push
in
xor
lods
push
les
iret
cmp
adc
imul
ins
sbb
lea
(bad)
mov
cdq
jecxz
gs
and
inc
(bad)
push
das
sub
cmp
jle
or
bound
mov
gs
jmp
pop
and
fcmovbe
cmp
cmp
jg
retf
enter
(bad)
dec
aam
mov
push
retf
jnp
mov
mov
and
mov
lock
mov
mov
in
ins
int
movs
sub
dec
mul
fcomi
pop
pop
enter
jnp
stc
out
push
adc
ins
adc
jl
inc
test
call
and
adc
(bad)
cli
mov
jns
mov
and
jge
stc
outs
jns
push
mov
xor
bnd
outs
pusha
push
push
pop
jmp
jbe
outs
or
(bad)
mov
lock
dec
xor
cs
dec
adc
jp
push
scas
push
add
xor
neg
leave
lods
push
out
push
call
arpl
pop
rcr
pop
mov
dec
loope
or
sahf
pop
xchg
int
dec
hlt
push
mov
lock
push
xor
push
(bad)
ror
mov
xor
push
xor
test
cmp
jp
jb
loop
jnp
sub
test
imul
mov
jp
pusha
ficomp
mov
jae
aam
jecxz
cmps
call
hlt
cmp
sub
mov
int
lahf
jg
call
sti
addr16
jne
aad
xlat
mov
mov
daa
cvtdq2ps
aas
push
dec
jnp
pop
call
or
or
std
test
mov
cmp
aas
mov
push
xor
xchg
dec
gs
pop
pop
aad
xchg
inc
repz
xor
inc
cmc
xlat
dec
rep
mov
inc
leave
ins
sbb
add
aas
test
sub
fild
gs
(bad)
into
in
retf
mov
xlat
push
mov
xchg
xchg
loop
les
in
sbb
mov
and
mov
mov
sbb
add
pop
pop
pop
in
push
iret
into
sub
xchg
shl
push
ret
jecxz
push
and
sti
dec
sub
mov
mov
rcl
xchg
adc
movs
inc
sar
pop
xor
inc
fs
cmc
mov
hlt
fdiv
push
daa
je
test
dec
je
add
lea
pop
cmp
fnstenv
pavgw
jns
in
sub
imul
pop
push
cmp
dec
outs
fisttp
dec
(bad)
repnz
and
or
lds
jno
jecxz
add
jne
iret
imul
xchg
cmc
sbb
jnp
jmp
mov
(bad)
mov
cld
mov
je
xchg
mov
sbb
mov
jg
mov
or
ins
ds
xchg
cmp
sub
lea
dec
out
pushf
iret
push
repnz
sub
mov
loope
ja
test
jge
and
and
ins
pop
inc
push
popf
mov
ss
ss
(bad)
into
sub
pop
cmp
fdivr
repz
dec
sbb
imul
cmovno
mov
test
retf
cld
out
lock
jmp
sub
lea
mov
xor
jge
dec
movs
xlat
jg
scas
int3
cs
jno
push
ja
enter
int
xchg
(bad)
bsf
sar
xchg
mov
loop
lods
sar
rcl
xor
stos
xor
mov
fiadd
fcomip
out
test
mov
xor
popa
icebp
je
add
pop
mov
call
jmp
fsub
pop
fld
pop
repnz
cmps
aad
xchg
pushf
add
cmps
mov
jl
xchg
outs
shl
mov
test
and
in
sbb
aam
xchg
inc
outs
pop
iret
call
sar
sbb
sar
sub
call
adc
mov
(bad)
es
xor
fs
xor
cmc
ds
cwde
in
mov
ret
stos
sti
cmps
inc
fs
or
push
pop
or
pop
(bad)
ins
fistp
cmc
dec
mov
ins
mov
movs
xor
outs
(bad)
das
test
add
sar
sbb
jle
icebp
dec
sub
mov
rcl
retf
mov
mov
in
movs
shr
sbb
cdq
scas
dec
dec
push
scas
add
pop
ds
lahf
fisub
jno
xor
push
mov
mov
std
mov
adc
push
lock
std
nop
je
adc
cmp
mov
mov
push
or
aaa
mov
add
addr16
pop
pop
jnp
inc
out
and
shl
adc
mov
fcomp
ins
fadd
stos
in
fld
dec
pop
das
adc
movs
dec
sub
sub
jae
repnz
cli
xor
mov
mov
retf
mov
push
xlat
nop
cmps
add
jae
sub
movs
inc
push
and
ficom
call
mov
cmp
ja
mov
inc
ror
cmp
cmp
dec
cmp
push
stos
jg
add
add
xor
add
mov
test
fmul
push
push
xchg
hlt
cs
cmc
clc
xchg
sub
into
jle
mov
cmp
(bad)
mov
lahf
jno
jo
jl
inc
push
dec
jle
sbb
mov
neg
movs
sub
inc
jle
mov
das
sub
fwait
jmp
mov
(bad)
adc
(bad)
adc
mov
sti
ror
loope
adc
push
inc
mov
les
aam
sub
dec
add
cmp
loop
jecxz
retf
addr16
sbb
jg
mov
das
int3
test
das
(bad)
leave
jg
test
sahf
sub
cmps
cdq
daa
fadd
inc
pop
pop
cmp
test
xchg
xor
dec
bound
jle
rcl
jl
clc
jl
je
pop
pop
test
inc
cmp
xchg
dec
and
inc
enter
ret
inc
cmps
sub
repz
sbb
fnsave
xchg
arpl
addr16
ror
jecxz
mov
arpl
sub
das
dec
inc
loope
mov
jecxz
jle
ret
push
or
mov
push
es
outs
xchg
sub
add
pop
ins
lahf
popa
cmp
and
mov
or
fbstp
lods
dec
mov
add
pop
add
mov
inc
(bad)
retf
cmc
fnstsw
loopne
jmp
ror
jne
inc
xchg
add
xor
jp
loopne
sbb
sbb
lods
sub
ret
ins
cvttps2pi
cmp
lahf
mov
jmp
inc
push
(bad)
sbb
iret
fist
inc
push
inc
xchg
lea
pushf
mov
and
ret
in
rol
sub
dec
inc
push
dec
pop
ja
mov
pop
or
shl
or
out
in
adc
repnz
cld
pop
and
pop
jg
movs
mov
aas
sub
mov
adc
fwait
pop
push
rcl
hlt
adc
outs
sub
popf
(bad)
frstor
sbb
fidiv
add
ja
ret
push
add
and
movzx
das
es
call
jmp
jle
cmps
mov
add
mov
and
push
test
or
push
adc
xor
bnd
daa
pop
fist
mov
adc
adc
xor
push
aam
sub
call
xor
fcom
js
js
or
xchg
jnp
pop
pop
aam
jo
jmp
xor
push
fs
push
mov
ins
scas
mov
xlat
pop
out
sbb
icebp
das
pop
dec
xor
adc
stos
cmp
movs
rcl
ds
add
inc
push
or
sahf
cmp
mov
sub
cdq
jb
imul
test
jne
shl
call
xlat
mov
push
and
cs
adc
jnp
xor
push
in
fst
in
mov
out
ins
lds
lods
mov
xchg
push
fsub
stos
jge
mov
je
mov
or
mov
mov
nop
jb
and
sahf
scas
add
add
or
fld
adc
iret
mov
push
clc
lock
mov
stos
ds
stos
in
inc
icebp
test
scas
inc
mov
rol
test
inc
jo
mov
jmp
sub
inc
sub
xchg
pusha
cdq
push
hlt
scas
jle
mov
push
je
outs
xor
push
dec
cwde
adc
(bad)
jbe
mov
fwait
jbe
rcr
cld
xor
push
das
dec
(bad)
out
xchg
cld
or
daa
test
sbb
pop
or
dec
stos
movs
jge
call
fcomip
jl
jmp
pop
xor
leave
clc
xchg
inc
repnz
stc
inc
dec
out
stos
movs
mov
clc
add
xchg
hlt
fmul
ja
hlt
not
add
popf
cmp
ror
jns
sbb
mov
test
cdq
add
cmp
inc
into
int3
enter
dec
out
or
jp
add
out
mov
xor
fwait
(bad)
das
ret
or
shl
ret
pop
repz
ins
sbb
mov
div
dec
jmp
mov
inc
pop
push
mov
inc
dec
cld
or
jl
dec
icebp
lods
xchg
lea
jle
test
xchg
arpl
icebp
pop
scas
pop
es
xor
frstor
adc
sub
cmp
int
add
sub
out
lds
inc
test
js
aas
and
aas
mov
shr
stos
in
test
dec
and
loop
into
(bad)
icebp
jne
jnp
jle
shl
xchg
int
dec
div
mov
adc
sbb
scas
lea
dec
enter
inc
outs
xchg
out
dec
xor
aaa
mov
pop
ss
mov
sub
xchg
cld
inc
lahf
popa
or
(bad)
scas
in
mov
out
inc
gs
pop
jmp
adc
pusha
into
shl
jle
mov
xchg
dec
and
iret
aas
add
inc
popf
xchg
cmp
and
popf
push
mov
daa
pop
mov
stc
addr16
out
push
cmp
in
cmp
pushf
xchg
int3
outs
push
jns
pop
sbb
sub
fwait
mov
mov
xor
xor
mov
shl
jns
cmp
push
ja
data16
into
or
xchg
mov
jmp
xchg
shr
ss
mov
clc
stos
pop
fbstp
xchg
and
xchg
mov
jp
fmul
push
cmp
jecxz
out
xchg
out
push
fisttp
repz
sub
mov
imul
push
adc
dec
adc
scas
jns
fiadd
(bad)
or
add
je
lea
pop
mov
push
repnz
mov
and
jnp
mov
mov
dec
pop
ret
lock
sub
pop
adc
add
inc
les
jg
into
dec
cmp
loope
cmp
sbb
xor
nop
mov
mov
mov
xor
push
mov
bswap
lock
cmp
jl
jecxz
mov
mov
jbe
loope
pop
inc
cmp
pop
call
push
dec
inc
leave
xchg
pop
inc
push
(bad)
inc
push
daa
cmc
push
jg
xor
mov
xor
pushf
mov
sub
fsubr
inc
leave
mov
ins
fisttp
cwde
bound
in
inc
rcl
inc
lods
inc
mov
rcr
push
ret
or
fnstsw
jle
push
jecxz
sub
ret
push
inc
clc
(bad)
mov
test
mov
dec
ss
push
cld
mov
pop
cmc
mov
mov
call
fnsave
movs
outs
(bad)
int3
pop
or
inc
aad
jge
ins
xchg
lods
dec
push
or
xlat
in
xchg
jmp
mov
test
add
ret
fld
dec
ret
pop
mov
push
ss
dec
mov
xchg
call
mov
adc
out
push
out
inc
imul
push
add
ret
sbb
xchg
xchg
mov
pushf
jmp
out
fld
into
push
in
xchg
cmp
jl
mov
xchg
fst
push
jne
ja
cmp
pushf
stos
jge
add
retf
and
jle
int3
sub
int
ja
fcmove
sbb
or
movs
aam
je
xchg
pop
scas
xchg
inc
aam
jmp
mov
adc
ins
or
(bad)
xor
icebp
cmp
icebp
clc
and
xor
dec
shl
pop
xor
adc
xlat
inc
push
pop
add
sbb
arpl
adc
sbb
mov
aas
adc
mov
(bad)
stc
adc
fld
ins
or
shl
cdq
sbb
lea
popa
inc
out
(bad)
sbb
sbb
imul
mov
ja
les
and
sbb
ret
aas
shl
mov
pop
and
cdq
ficomp
(bad)
ds
inc
fidivr
daa
lods
and
pusha
jp
add
push
sbb
mov
nop
jmp
stc
retf
test
pop
mov
loopne
pop
shl
xchg
fwait
sub
into
push
in
dec
gs
jp
mov
fmul
or
lahf
fsub
lds
arpl
ins
add
cmps
jmp
test
mov
pop
or
ss
add
jmp
test
popf
pop
dec
fdiv
shr
fdiv
enter
cmp
clc
and
cmps
fs
stos
loopne
shl
and
cdq
add
enter
arpl
fld
movs
lock
add
push
sub
int
mov
or
icebp
ins
fs
dec
aam
rol
inc
push
(bad)
addr16
or
or
outs
inc
mov
dec
mov
push
inc
dec
dec
mov
inc
jno
ror
mov
addr16
popa
xchg
jbe
cmp
add
and
cmp
mov
sar
scas
sub
inc
test
cmp
(bad)
mov
xor
cmps
sti
repnz
or
push
adc
mov
ins
lahf
je
sbb
test
jb
int
fstp
mov
push
stos
cmp
and
daa
jne
loop
jge
jl
mov
mov
mov
nop
mov
inc
inc
adc
mov
ss
pop
and
sbb
ss
lds
sub
inc
stos
cmp
cmp
repz
dec
bswap
pop
mov
xor
or
adc
fwait
out
cmp
mov
rcl
fwait
outs
jg
inc
jmp
les
retf
inc
div
shr
xor
mov
mov
lds
fmul
mov
arpl
add
shr
aas
jns
cmp
pop
pusha
popa
cmps
in
sbb
stc
in
call
mov
jb
movs
mov
(bad)
imul
jmp
outs
push
pop
dec
inc
call
arpl
or
jne
(bad)
dec
ja
sub
mov
cmp
push
paddd
cwde
rcr
push
and
test
jmp
adc
fsub
movs
sub
mov
sbb
rol
out
jecxz
rcl
cs
sti
sub
ss
dec
ret
pop
in
and
(bad)
fxch
fwait
in
push
mov
dec
push
add
(bad)
ins
pop
out
(bad)
push
dec
cwde
adc
movs
jno
aam
xor
sub
push
int3
ret
sbb
mov
mov
sahf
popf
inc
adc
xchg
pop
jno
cmps
das
and
jl
shl
gs
mov
fimul
(bad)
lea
xor
out
leave
adc
xor
mov
js
mov
sbb
mov
retf
mov
push
int3
xor
xor
and
jg
lahf
jnp
or
sub
cmp
push
mov
pusha
std
shl
xor
mov
dec
mov
pop
mul
cld
test
rcr
(bad)
imul
test
dec
scas
mov
sub
sub
scas
mov
sti
push
in
inc
push
inc
inc
and
cmc
mov
add
sub
arpl
xchg
loope
sbb
mov
cmp
jae
out
cdq
cmp
test
ja
cmp
gs
mov
in
cwde
call
outs
in
call
aas
mov
push
mov
cmp
push
stc
fadd
(bad)
test
out
(bad)
mov
lahf
je
xlat
or
int3
dec
sahf
icebp
sbb
xor
psraw
or
jae
jmp
lods
mov
int3
fld
pop
pop
mov
mov
push
inc
sub
fidivr
pusha
cmp
dec
push
hlt
push
(bad)
xor
inc
sub
inc
(bad)
adc
adc
ficomp
(bad)
ficomp
mov
repnz
cmp
jmp
inc
adc
mov
sub
(bad)
xor
sbb
inc
dec
test
mov
(bad)
aaa
mov
(bad)
xchg
jecxz
jmp
push
movs
shr
test
xchg
(bad)
(bad)
adc
mov
addr16
adc
mov
pop
je
add
aam
aad
sub
cmc
cmc
jl
push
sbb
inc
lods
pop
mov
scas
pop
xchg
push
fwait
ror
std
in
cmp
and
jg
les
addr16
xor
in
lods
and
mov
das
rol
mov
in
sub
or
imul
test
sbb
sub
iret
je
xchg
push
add
(bad)
xlat
pop
ret
loopne
and
(bad)
sbb
xchg
or
sub
cmp
jle
xchg
mov
and
and
inc
out
xchg
(bad)
aad
cld
cld
jl
jmp
clc
xchg
push
bound
push
pop
add
mov
xchg
test
leave
pop
xor
pop
cwde
into
fucomp
leave
push
jnp
xor
ja
sbb
pop
jmp
pop
jmp
das
jg
loope
addr16
leave
sbb
fdivrp
add
outs
fs
repnz
das
pusha
mov
enter
out
mov
dec
lea
add
jns
popf
out
mov
icebp
loope
outs
cmp
lahf
adc
push
das
mov
fild
lods
iret
cmp
and
(bad)
xchg
or
popf
inc
cmp
je
inc
fcom
test
mov
test
xchg
daa
xchg
out
in
jno
arpl
pop
jno
int3
ret
arpl
dec
rcr
add
push
dec
lods
jecxz
ret
sbb
xor
jecxz
cli
int3
(bad)
shl
pop
jo
es
jnp
mov
imul
leave
outs
push
cld
pop
jnp
cs
daa
fidivr
jo
sbb
dec
imul
gs
movs
in
call
lea
mov
cld
xchg
fnstsw
mov
nop
jl
pop
inc
sbb
fisttp
gs
stc
int3
mov
fst
and
jb
fxch
dec
mov
xor
or
cmps
hlt
das
imul
lock
std
adc
sub
je
dec
mov
jmp
pop
(bad)
(bad)
jl
jno
in
in
or
mov
fistp
hlt
mov
iret
sar
sahf
adc
jae
out
or
lock
sub
pop
jp
cmc
xchg
(bad)
aad
and
add
jecxz
std
xchg
test
in
leave
adc
hlt
push
inc
sbb
enter
bnd
sbb
xchg
mov
repnz
call
xchg
or
scas
mov
std
jecxz
sbb
jnp
pop
arpl
dec
cs
jns
cwde
dec
cs
push
inc
adc
cmp
sub
ds
ja
inc
aad
out
mov
pop
inc
pop
pop
retf
or
adc
inc
sbb
int3
push
cmp
add
lock
iret
adc
call
ins
pusha
(bad)
sbb
aaa
shr
ficomp
xchg
jns
aas
jg
cmp
sub
inc
fld
fs
adc
jg
pop
imul
sub
out
ins
push
xchg
xchg
outs
jb
xor
data16
das
in
pop
call
mov
fs
mov
dec
nop
dec
or
pushf
cmc
push
cs
inc
add
push
push
xor
mov
sbb
je
popa
pop
cld
js
add
(bad)
adc
mov
dec
cmp
jae
xchg
out
inc
neg
and
mov
fisttp
cmp
pop
(bad)
out
lds
cmp
jl
pusha
or
push
xchg
lods
(bad)
in
xchg
sub
es
mov
movs
adc
xchg
and
movs
pop
cmp
adc
xchg
int
sbb
push
loop
mov
cmp
dec
hlt
or
push
daa
loop
jge
xor
jmp
ins
sar
add
movs
inc
leave
cld
dec
stc
add
(bad)
or
cmps
pop
mov
jbe
test
dec
in
shl
pop
test
sub
sub
iret
das
test
cmps
and
adc
cmp
dec
cwde
mov
leave
dec
sti
jbe
mov
mov
inc
xlat
fsubp
mov
sti
call
dec
(bad)
clc
mov
scas
dec
jb
and
cmp
adc
mul
fwait
push
inc
and
pop
inc
shr
jle
test
aas
test
enter
fdivp
lods
movs
mul
add
mov
test
(bad)
outs
sub
lds
js
shl
xchg
popf
inc
int3
test
push
and
sub
lods
repz
lods
lods
repnz
xor
adc
out
add
ja
aam
adc
inc
retf
ret
push
push
into
push
jle
in
inc
dec
and
mov
jo
div
push
mov
pop
imul
movs
mov
mov
cmp
push
cmp
(bad)
fbstp
or
or
push
xor
movs
in
add
push
jb
jle
outs
fwait
pop
or
cli
in
pop
shl
test
movs
pop
dec
mov
jo
mov
add
fisttp
dec
lahf
push
(bad)
fnsave
pop
aam
ret
pop
cmp
sbb
mov
es
xor
mov
fisubr
outs
mov
mov
dec
repnz
xchg
sbb
gs
je
into
outs
inc
clc
loop
and
cmc
outs
retf
mov
mov
jge
mov
jno
pop
sub
arpl
fs
lods
rcr
add
or
adc
mov
in
pop
imul
pop
mov
pop
dec
push
clc
sub
hlt
mov
lahf
ja
xchg
sbb
cmp
sub
stos
icebp
pop
in
or
add
jg
or
xchg
push
mov
xchg
sbb
push
sbb
jg
(bad)
jmp
jne
popa
jmp
data16
cwde
sub
inc
das
mov
icebp
lock
adc
adc
xchg
cs
in
aas
mov
xchg
xchg
jo
imul
xchg
jns
pop
xor
test
lods
and
gs
inc
fmul
push
dec
or
idiv
sbb
xchg
dec
jne
out
outs
stos
ss
icebp
icebp
jge
sbb
pop
dec
add
push
xor
push
cli
enter
mov
outs
mov
cmp
fwait
mov
out
out
xor
lds
xchg
jge
ret
pop
je
sbb
in
mov
fadd
vcvtps2dq
in
push
leave
jp
iret
xchg
in
mov
adc
mov
or
cs
jge
add
lds
js
cmc
jnp
ror
sbb
jmp
out
adc
xchg
test
add
add
mov
pop
fiadd
retf
gs
xchg
int3
dec
push
loope
(bad)
leave
(bad)
cli
dec
mov
mov
push
mov
ret
and
std
jg
repz
pop
push
mov
test
ja
xchg
jmp
enter
ret
cld
mov
(bad)
lds
xchg
jno
add
sub
jl
bound
dec
sbb
cmps
pusha
xor
adc
push
or
stc
(bad)
xor
sub
sbb
fnsave
add
push
lock
stc
xchg
ja
clc
cmp
xor
in
jle
sbb
adc
fild
cmps
pop
cwde
pushf
test
mov
and
repnz
jmp
inc
daa
mov
icebp
xchg
push
adc
dec
clc
fistp
jmp
jl
push
retf
jle
rcl
and
sbb
js
mov
fimul
sub
adc
aaa
dec
aaa
imul
or
add
nop
lahf
cmp
sbb
add
or
xchg
adc
and
xchg
sbb
mov
sbb
xor
jb
imul
and
std
xchg
bound
jb
add
mov
or
mov
or
cmp
mov
in
in
cmp
rcl
xchg
mov
jmp
push
ins
out
xchg
sub
cld
dec
sub
push
rcr
add
xchg
xor
icebp
mov
movs
mov
(bad)
loop
pop
jbe
ret
scas
cmp
sbb
stc
or
add
ret
cmc
gs
inc
in
inc
inc
and
shl
jbe
inc
sbb
vorps
aad
cmp
xchg
ins
xchg
popf
les
and
mov
sub
adc
jl
test
int
jb
arpl
test
nop
cmps
push
mov
jmp
mov
jo
add
sar
jns
gs
xchg
lds
ins
xchg
out
leave
lea
adc
imul
nop
sub
cmps
daa
out
jae
test
xor
test
mov
xchg
imul
xchg
rol
movs
and
mov
inc
enter
xchg
xor
jne
clc
sub
inc
jg
push
(bad)
outs
ds
outs
fsubrp
ja
scas
sahf
add
mov
ja
push
inc
xlat
mov
and
inc
or
xlat
mov
aas
cs
mov
adc
pushf
inc
jo
sub
push
ficomp
test
adc
push
adc
lods
nop
sti
jge
xchg
xor
pop
mov
mov
add
xchg
mul
jne
and
sar
(bad)
push
adc
xor
hlt
jl
xchg
mov
inc
sub
imul
inc
das
add
iret
push
jg
cmp
push
int
adc
mov
and
jmp
pop
(bad)
inc
dec
sub
daa
loope
jno
popf
in
movs
sar
cmp
jno
dec
xor
add
cmp
add
es
bound
dec
movs
xchg
push
fmul
jo
ds
xchg
test
add
inc
jae
scas
mov
dec
inc
ret
lds
jecxz
out
mov
jno
add
mov
push
cmc
fucomi
pop
adc
xchg
jae
fwait
(bad)
in
cmp
sub
inc
and
adc
out
push
call
push
movs
(bad)
and
not
cwde
lods
push
js
fdiv
mov
inc
test
mov
cmp
adc
jns
or
pop
scas
xchg
fdiv
jae
mov
cmp
mov
pusha
jo
ret
(bad)
or
sub
add
pop
cmp
push
dec
sbb
mov
div
pop
jo
stc
imul
mov
cwde
xchg
aas
xchg
mov
call
adc
jg
aam
sbb
fmul
mov
xchg
clc
xor
inc
inc
stos
jbe
and
ficomp
push
jns
sub
cmp
(bad)
jmp
push
call
jmp
(bad)
pusha
sub
inc
push
jmp
adc
push
jl
xchg
mov
sbb
push
push
jmp
leave
jg
mov
mov
hlt
stos
test
mov
inc
in
cmps
shl
icebp
cmps
xor
mov
lock
adc
or
(bad)
pop
out
loopne
(bad)
(bad)
popf
xor
jmp
into
push
sbb
into
jle
or
add
imul
fild
xor
(bad)
lods
jnp
cmp
stc
jno
int
mov
mov
xchg
repnz
xlat
mov
dec
push
pop
xor
in
lock
ret
imul
and
pushf
mov
push
repz
mov
and
mov
cmc
aaa
inc
xor
and
cmp
adc
sbb
adc
xor
or
jmp
mov
jmp
popa
int3
jg
out
imul
sub
jo
add
outs
in
and
push
mov
pushf
clc
xchg
fldl2e
add
inc
add
sub
sbb
jecxz
xchg
loopne
out
test
std
les
retf
popf
add
fs
push
jnp
push
sbb
ds
scas
push
mov
mov
rcr
lods
fist
dec
add
or
inc
stos
mov
mov
(bad)
je
sub
mov
mov
test
xchg
push
ins
daa
jmp
push
fistp
dec
adc
aaa
mov
jbe
jg
enter
adc
sub
mov
and
psubq
push
call
(bad)
xchg
sub
ret
xchg
dec
in
(bad)
adc
shl
aam
add
push
add
mov
xchg
or
fwait
hlt
sahf
push
or
data16
das
xor
mov
out
xor
push
jmp
popa
cmp
xor
and
icebp
pop
mov
shl
cmp
aaa
mov
call
sbb
les
dec
dec
add
mov
mov
ss
outs
ret
nop
ins
(bad)
(bad)
out
test
stos
sbb
and
mov
popa
add
lahf
push
(bad)
push
cs
push
pop
cdq
add
sbb
dec
repnz
mul
jg
mov
sysret
mov
inc
dec
out
hlt
or
pushf
jg
mov
jmp
sub
sbb
dec
mov
outs
cld
push
ins
retf
mov
xchg
out
outs
cdq
mov
fsubr
jmp
push
movs
push
sub
pop
or
loop
leave
jns
(bad)
stos
cmp
mov
mov
sub
push
sbb
test
std
loopne
jp
scas
lea
loope
lods
(bad)
aad
in
les
or
cmp
lods
js
adc
mov
inc
in
inc
cmp
mov
aas
pop
xchg
cmps
mov
addr16
inc
popf
sbb
fld
daa
jno
jmp
xchg
pop
aad
jno
mov
mov
jo
and
push
mov
xor
test
or
ins
rcl
jae
fldenv
xchg
ins
jns
imul
(bad)
stos
repz
or
cmps
outs
repz
pusha
enter
jns
out
lock
xchg
push
push
or
pop
xor
fldcw
and
scas
les
sub
repz
rol
push
adc
mov
mov
gs
ja
fnstcw
mov
int3
xchg
or
fcmovbe
stos
jecxz
cmp
pop
jmp
shl
push
jg
aad
add
adc
bound
(bad)
push
imul
push
shl
iret
or
inc
out
sti
push
pop
fdiv
pop
mov
jbe
sub
and
sti
mov
cmp
addr16
loop
mov
pusha
xor
(bad)
pop
push
repnz
sbb
inc
pop
push
and
lock
stos
mov
push
inc
in
iret
(bad)
dec
xor
sub
std
adc
aad
icebp
scas
push
shl
sub
cmps
cdq
jnp
pop
or
cmp
add
push
jnp
pushf
std
jmp
repnz
push
in
mov
hlt
rcl
push
fs
mov
cmps
sub
aad
mov
dec
scas
fs
fcomp
rcl
out
call
fwait
mov
test
jl
xor
or
cwde
sub
mov
sub
and
xor
mov
xor
imul
add
push
(bad)
call
xchg
mov
into
cwde
push
fistp
in
(bad)
xchg
adc
pop
inc
daa
lahf
adc
nop
retf
leave
fstp
rcl
test
dec
div
icebp
mov
or
(bad)
mov
imul
in
mov
mov
fldl2t
out
sbb
aas
popa
add
dec
lods
push
sub
mov
xor
cmp
(bad)
sahf
adc
repnz
xor
test
aam
rcr
jmp
les
mov
mov
mov
ret
and
loopne
movs
stc
jnp
inc
pop
test
sub
push
fistp
jbe
mov
xlat
push
mov
cmp
pushf
cmp
mov
or
cmc
stos
ja
or
jp
xor
mov
jle
pop
call
jnp
mov
mov
push
pusha
xlat
adc
mov
inc
jmp
in
dec
icebp
test
sar
data16
jmp
out
push
mov
mov
dec
rcr
enter
and
xchg
push
add
inc
jl
xchg
xchg
clc
rcl
call
push
fldcw
imul
repz
xchg
mov
inc
(bad)
cwde
jecxz
shl
xor
mov
jno
sahf
dec
cmpxchg
cdq
xor
loope
xor
add
les
mov
sar
add
push
mov
pop
push
scas
(bad)
mov
(bad)
aad
aaa
jb
iret
push
cmp
adc
mov
jo
out
mov
jl
xchg
mov
in
mov
jns
shl
mov
cmp
(bad)
add
scas
sbb
aaa
jg
int
adc
xor
and
fucomp
xlat
fdiv
out
(bad)
or
shl
dec
fisub
jbe
pop
fild
cdq
lods
test
stos
test
dec
test
mov
mov
cmps
push
popa
push
pop
jge
mov
mov
adc
popa
or
xchg
retf
jp
push
ret
stos
call
xor
mov
sbb
ror
xor
add
call
mov
jl
jmp
fist
mov
jmp
xchg
mov
cli
jmp
popa
mov
cld
add
in
test
loopne
or
xchg
mov
mov
fmul
mov
stos
aaa
cli
(bad)
jmp
and
fcomp
fild
pop
add
xchg
mov
aam
dec
ja
(bad)
and
retf
dec
test
mov
ds
xchg
jno
pop
push
repz
sahf
daa
mov
call
xchg
aas
push
pop
sbb
rcr
loope
in
imul
jle
xchg
jmp
inc
mov
inc
loop
mov
xor
adc
or
push
push
sub
dec
inc
cwde
push
lods
and
movs
in
dec
popf
push
scas
xchg
gs
sbb
ror
mov
xor
adc
push
add
jmp
bound
(bad)
and
jne
lock
sbb
icebp
movs
aas
retf
movs
fsubrp
pop
cmp
test
ret
dec
jo
push
repnz
adc
xor
mov
outs
ror
dec
pop
xchg
repz
mov
add
js
push
(bad)
cmp
xor
cmps
adc
sbb
cmps
jg
and
jle
pop
inc
mov
imul
sbb
inc
or
adc
mov
rcl
mov
or
jge
adc
xchg
dec
cmp
xor
cmp
loope
xor
xchg
ficom
xlat
mov
scas
pop
ret
xchg
dec
mov
sub
js
popf
xor
in
lods
xchg
out
stc
sub
std
inc
scas
cmp
mov
jo
xor
jnp
std
sar
xchg
les
test
xor
mov
sti
dec
cmps
fdiv
push
push
daa
sub
push
xchg
lods
cmp
arpl
or
push
icebp
sub
sub
sar
add
mov
sahf
repnz
sbb
fstp
xchg
(bad)
cmc
push
xor
push
pop
lea
jl
fwait
sub
dec
push
test
enter
dec
pop
out
fchs
stc
lds
das
lods
inc
loope
push
fs
and
into
xor
outs
add
cli
and
mov
repz
dec
ret
nop
mov
pop
fwait
sbb
jbe
xor
xor
adc
or
sbb
out
rcl
gs
push
ins
jo
xor
xchg
stos
or
cld
inc
test
cli
arpl
outs
es
(bad)
add
adc
push
and
adc
imul
cs
cld
xchg
iret
and
outs
test
pop
xchg
jnp
cmps
outs
sar
sub
std
jbe
fidiv
pop
cdq
imul
and
imul
mov
in
sub
cmp
clc
xchg
sbb
xor
mov
jmp
pop
mov
imul
test
push
adc
sar
mov
stos
mov
mov
into
dec
rcr
push
cld
xchg
push
ja
pop
sbb
icebp
es
int
loope
mov
imul
mov
rol
xor
mov
aaa
and
arpl
or
add
scas
aas
stos
adc
add
mov
lods
hlt
jge
pop
pop
loop
scas
das
idiv
push
mov
dec
test
pop
mov
rcl
push
mov
or
xor
mov
mov
inc
add
push
test
aas
xor
popa
push
arpl
mov
clc
xchg
daa
mov
ja
pop
outs
push
add
fld
adc
rol
mov
mov
jmp
ss
out
cs
sub
retf
or
loop
test
inc
mov
packsswb
lock
je
push
jno
sbb
inc
outs
or
add
outs
stos
into
sbb
out
cmp
pop
inc
test
ror
sbb
es
pusha
in
arpl
in
mov
mov
sbb
std
jns
lock
add
dec
jmp
adc
in
jo
in
jae
jp
out
or
cmps
loope
in
data16
xor
scas
pop
fadd
dec
dec
sbb
add
pop
(bad)
mov
mov
icebp
div
jle
pop
pop
fmulp
dec
clc
push
fldl2t
sub
cmc
pusha
pop
aam
fild
xor
xor
pop
and
mov
aas
adc
imul
sbb
pop
outs
ds
push
mov
sub
bnd
inc
movs
js
adc
lock
and
push
xor
jl
sbb
push
adc
mov
jecxz
repnz
mov
adc
and
push
mov
fmul
mov
mov
pop
fwait
push
(bad)
cs
push
xchg
scas
xor
xor
lock
jge
pop
sbb
inc
sbb
dec
inc
sbb
add
add
xchg
(bad)
ficomp
xor
pop
sbb
stc
loop
test
bound
test
mov
call
(bad)
pop
sti
mov
arpl
in
mov
(bad)
out
inc
dec
pop
xor
xor
call
mov
push
data16
movs
mov
xor
sub
fs
in
lock
fild
ja
(bad)
fcom
lds
scas
push
fsubr
add
and
jns
outs
cmp
cmps
(bad)
cli
loop
test
(bad)
popf
xchg
or
scas
mov
sbb
jecxz
loopne
pop
stos
retf
mov
lock
sbb
add
shr
icebp
xor
or
lahf
out
mov
sbb
addr16
call
or
fdiv
jno
xor
test
and
sbb
stc
(bad)
jae
xor
cmc
mov
mov
jne
adc
cmp
xchg
pop
bound
cwde
test
mov
dec
or
cwde
jl
jge
js
add
dec
push
adc
lahf
fild
inc
lods
out
inc
pushf
mov
js
leave
in
call
sbb
adc
icebp
inc
xchg
repnz
xchg
add
add
dec
add
ds
jle
sbb
mov
es
jbe
pop
mov
lock
xor
retf
and
repz
lahf
sbb
in
lods
mov
xor
(bad)
rcr
jp
rol
movs
inc
jp
dec
out
mov
icebp
ins
push
mov
mov
test
sub
movs
push
cdq
es
mov
jns
das
push
fcom
ja
arpl
mov
adc
std
lahf
push
or
aam
sbb
adc
or
scas
out
cmps
and
dec
jge
pop
iret
add
popa
pushf
nop
sti
(bad)
retf
cmp
add
into
mov
clts
ss
jmp
push
ret
adc
push
sub
ret
ins
daa
add
xchg
xlat
inc
sbb
call
outs
add
fs
hlt
and
std
movs
pop
lods
in
mov
movs
pop
inc
push
add
stos
inc
pop
out
sub
mov
sub
aad
mov
aaa
cmps
outs
dec
movs
mov
call
mov
fiadd
test
ins
and
fisttp
mov
cwde
and
aam
sub
dec
std
movs
js
mov
pop
jo
dec
out
pop
das
cmp
add
test
(bad)
jns
stos
retf
xor
icebp
je
jb
mov
enter
mov
push
pop
js
stc
sub
cmps
or
loope
push
dec
cmps
jecxz
pop
call
jo
cli
cmp
test
aam
mov
and
daa
fdiv
xor
dec
inc
inc
add
cwde
push
xor
xchg
sub
adc
aad
jae
pop
jb
inc
enter
les
ret
icebp
mov
pushf
shr
adc
in
bound
jmp
arpl
jae
adc
fs
outs
push
movs
cwde
iret
adc
adc
test
cld
int3
mov
adc
cld
dec
sbb
sbb
sub
(bad)
pop
sbb
movs
add
mov
ror
mov
test
jns
retf
hlt
push
scas
fcomp
push
xlat
mov
(bad)
jno
push
ds
sbb
test
jnp
test
xchg
jmp
dec
adc
push
das
sbb
ins
call
addps
popa
pop
push
(bad)
mov
pop
push
lahf
cmp
mov
pop
std
add
mov
inc
mov
inc
or
cmc
pusha
sbb
test
scas
push
lds
or
cmc
scas
aam
inc
xchg
aas
(bad)
sub
adc
(bad)
pop
cmp
(bad)
pop
push
push
cmp
movs
stos
or
hlt
outs
inc
in
nop
sti
sti
mov
bound
inc
fld
xor
test
je
mov
or
jl
into
jg
sub
pusha
mov
push
sbb
mov
dec
in
fs
test
add
push
shr
fld
jecxz
cmp
popa
test
shl
mov
(bad)
jp
ficomp
mov
jae
(bad)
or
jnp
dec
adc
cwde
jne
push
adc
or
sbb
add
pop
es
sub
mov
(bad)
imul
push
or
push
jl
xor
rcl
lods
xor
ins
in
mov
aad
adc
icebp
aam
xchg
adc
xchg
jb
push
or
jg
fadd
test
cmp
jno
in
pop
and
jg
addr16
xor
pop
popfw
inc
fs
int3
pop
push
sbb
cwde
xchg
inc
sar
jle
pop
ins
adc
inc
loop
pushf
pop
cmp
int
scas
lock
lea
sub
int3
jbe
icebp
cs
(bad)
or
pusha
cli
sub
or
pmulhuw
je
ins
int
ja
sbb
stos
or
sar
in
mov
xchg
adc
stos
rol
or
enter
dec
push
push
jmp
out
and
aad
outs
or
icebp
cmp
mov
mov
push
jo
xchg
push
fsub
jmp
lods
and
push
pop
pop
mov
xchg
mov
cmps
mov
dec
icebp
repnz
mov
sub
enter
int
pushf
push
int3
stos
inc
or
(bad)
xor
in
dec
dec
xchg
pop
(bad)
push
add
adc
push
popa
jle
mov
xor
and
cdq
and
and
sub
lock
mov
(bad)
popa
mov
adc
mov
mov
popf
xchg
adc
xchg
out
jg
push
sar
xor
pop
enter
push
hlt
mov
dec
dec
jae
fidiv
cmp
sahf
push
jbe
shr
cdq
shl
movs
loopne
inc
inc
pop
jae
enter
outs
inc
cmp
stos
and
ret
fwait
jecxz
or
lea
and
lods
cmc
add
mov
test
fdiv
adc
mov
enter
add
xchg
cmp
and
(bad)
(bad)
sbb
mov
mov
ins
repnz
cs
int3
mov
into
sbb
imul
sbb
fs
sbb
sub
and
(bad)
test
cmps
movs
or
inc
fs
in
pop
mov
or
pop
xlat
pop
sbb
push
or
hlt
mov
shl
f2xm1
test
int3
int3
repnz
loop
mov
movs
mov
push
mov
xor
pop
add
ins
call
shl
fstp
or
(bad)
fs
jmp
stc
arpl
xor
es
inc
xor
aam
scas
mov
test
sar
aam
sbb
and
std
popa
xor
add
ins
xchg
retf
sub
(bad)
jnp
xchg
cmp
mov
in
jp
add
repnz
(bad)
adc
mov
gs
xor
lock
pop
bound
jbe
or
jbe
fbld
adc
inc
cmp
movs
cmps
and
repnz
(bad)
icebp
jae
xchg
lds
pusha
dec
(bad)
sbb
pop
aad
adc
jae
test
(bad)
(bad)
bound
sub
fisttp
cmc
mov
adc
mov
cmp
jmp
pusha
adc
test
test
cmp
(bad)
cmp
pop
cmps
pop
ja
(bad)
ja
xor
jl
adc
mov
sub
jne
nop
add
mov
scas
add
dec
adc
and
stos
fidiv
and
mov
cmp
inc
sub
leave
scas
mov
sub
jge
pop
sbb
pop
jmp
fs
mov
mov
sub
neg
popf
outs
ds
shl
test
call
and
sub
xchg
mov
(bad)
mov
(bad)
xlat
cmp
rol
out
mov
int3
sub
mov
xchg
inc
and
ins
dec
xor
dec
dec
cmp
mov
mov
in
jb
xlat
mov
and
ss
jae
pop
outs
mov
loop
dec
dec
mov
pop
pop
(bad)
test
lock
leave
sbb
repnz
aas
aad
dec
mov
sti
xchg
pop
adc
sahf
and
sub
int3
or
push
ror
jg
mov
dec
clc
ror
fidivr
movs
xchg
mov
adc
adc
lahf
lahf
outs
jmp
stos
lahf
(bad)
stc
ins
push
bound
sub
mov
cmp
aas
mov
inc
aaa
jo
shl
aaa
jb
xchg
mov
mov
in
hlt
cmp
dec
popa
bound
cmps
aam
pop
lea
outs
jbe
push
es
xchg
mov
arpl
loopne
cmp
sbb
test
sbb
sub
inc
cmps
rcr
and
mov
shl
mov
stos
jb
adc
add
xor
repz
or
pop
mov
popf
push
adc
mov
arpl
mov
mov
sar
pop
mov
pop
or
and
adc
aam
(bad)
test
ror
xor
int3
cmp
ret
hlt
mov
adc
sbb
pusha
xchg
std
mov
inc
mov
adc
jo
call
imul
cmp
fsub
lds
retf
int
es
call
in
imul
sub
fwait
inc
xchg
jge
mov
pop
in
jae
push
cmp
push
or
inc
jnp
cmp
icebp
push
pop
in
dec
xor
aam
and
xor
mov
lds
adc
iret
jmp
and
pop
ja
cmp
dec
loop
arpl
dec
adc
(bad)
and
sub
icebp
lods
jmp
pop
ret
mov
ret
loopne
scas
sub
jp
mov
hlt
test
nop
mov
pop
inc
pop
jp
scas
leave
idiv
call
sbb
sub
jbe
and
rcl
xchg
rol
inc
aas
mov
fcomp
stc
enter
add
fst
ins
pop
shl
je
and
xor
hlt
add
mov
gs
mov
jbe
daa
in
jbe
stc
ins
jp
mov
mov
push
stos
and
sbb
jge
mov
or
jmp
out
xlat
jno
cmps
inc
mov
push
cmps
dec
xchg
clc
popa
out
mov
(bad)
cmps
sti
ins
lods
out
loopne
jle
lods
mov
xor
pop
cmp
mov
cmp
je
add
inc
stos
leave
mov
js
into
ja
and
pop
ss
push
mov
mov
sub
cmp
daa
int
movs
pop
shr
jle
fdivr
jnp
mov
add
xchg
adc
dec
xchg
sbb
clc
out
adc
mov
mov
adc
jle
addr16
adc
fadd
jl
jle
stos
sbb
lds
sub
rcl
dec
cmps
mov
mov
lock
and
sar
pop
pop
add
lea
aad
mov
and
test
push
lea
sub
dec
movs
mov
jae
adc
mov
pusha
mov
clc
mov
in
(bad)
fldcw
sbb
mov
retf
or
mov
outs
outs
fnstsw
jle
cmc
aas
add
xor
or
mov
xchg
xchg
add
mov
enter
push
into
jl
ja
adc
push
(bad)
sbb
std
push
es
adc
popa
aaa
scas
jl
icebp
jae
gs
and
lods
adc
movs
iret
dec
inc
std
addr16
movs
sbb
mov
and
sub
adc
stc
bound
js
xrelease
xchg
(bad)
xchg
and
jle
mov
xchg
mov
test
aam
sbb
xchg
inc
cmps
pushf
popa
inc
or
dec
adc
dec
gs
xor
pop
dec
add
xchg
cmc
cmc
cwde
test
jmp
xchg
test
aam
inc
addr16
add
or
inc
scas
push
jb
popf
test
clc
push
mov
fidivr
bound
jo
js
push
mov
jecxz
stos
or
out
mov
loope
or
test
jb
sbb
sub
fxtract
imul
cs
pop
pop
outs
idiv
fwait
inc
loop
inc
rol
in
sub
cmp
or
push
add
inc
jmp
pop
jle
mov
jg
ds
mov
push
pop
inc
xchg
jecxz
test
data16
push
jg
aas
xor
leave
xor
cmp
xchg
inc
push
outs
test
cmp
add
popf
xchg
mov
pop
jg
jno
mov
push
cmp
fmul
jae
pop
jecxz
push
std
stos
lods
and
arpl
sub
or
xchg
push
adc
imul
jg
fisubr
pop
xchg
movs
call
cwde
mov
xchg
jl
les
sub
push
sbb
push
dec
js
mov
addr16
je
(bad)
adc
xchg
std
gs
retf
pop
pop
mov
out
call
(bad)
cmp
into
stc
push
mov
cdq
aad
add
jnp
test
xlat
ror
cmp
cli
jnp
pop
pop
mov
fist
mov
rol
aas
int3
mov
and
stc
std
retf
frstor
mov
pop
aad
shl
inc
loop
xor
sbb
retf
fcomp
das
add
lods
retf
ds
inc
mov
pusha
push
and
mov
je
or
sbb
fwait
jmp
daa
and
iret
ret
dec
jae
lods
ja
ss
fidiv
into
jno
fsubr
add
jo
adc
push
outs
pop
aas
outs
cmps
popf
imul
popf
xchg
and
enter
lods
test
fadd
sub
push
adc
jo
shr
and
rol
xchg
pop
sub
xchg
jnp
pushf
mov
push
jne
aad
push
ins
pop
xchg
ficom
mov
xor
mov
push
sbb
stos
lods
lock
mov
lahf
scas
sbb
hlt
iret
mov
aam
(bad)
in
sar
movs
into
outs
(bad)
sahf
add
mov
xchg
xor
outs
dec
mov
test
sub
sub
cmp
mov
int
or
adc
inc
ror
sbb
adc
pop
dec
xchg
adc
data16
jnp
mov
push
push
pop
adc
mov
xchg
pusha
clc
into
xor
cmp
cld
adc
fadd
in
add
jmp
xchg
mov
or
popf
xor
sub
popa
mov
mov
inc
hlt
adc
stos
xchg
mov
mov
test
in
xor
(bad)
sbb
pop
std
mov
ins
mov
mov
in
(bad)
mov
cmps
jnp
call
dec
enter
pop
xchg
scas
xor
ja
dec
jl
jno
out
push
dec
xchg
mov
dec
cli
jno
(bad)
in
and
adc
fs
xor
in
cmps
out
(bad)
dec
cmps
mov
loop
and
aad
mov
test
mov
cmp
cs
lods
pop
outs
mov
rcr
adc
into
dec
mov
fidivr
ds
push
inc
retf
retf
jecxz
cld
fdivr
push
std
sbb
test
sbb
int
dec
(bad)
mov
sub
pop
adc
xor
jae
push
loope
jmp
int
inc
mov
into
daa
add
cmp
out
adc
fadd
cmp
jecxz
pop
fst
ins
jg
ss
xchg
out
repz
int3
dec
fs
cmp
xor
mov
adc
popf
fcomip
adc
cmp
out
retf
inc
adc
hlt
pusha
(bad)
leave
out
iret
imul
xchg
test
fist
xor
outs
movs
sub
ret
mov
push
and
or
add
leave
or
nop
push
pop
inc
aad
push
js
sub
scas
mov
mov
in
mov
jne
xor
hlt
mov
and
cmp
jecxz
pop
ror
mov
and
inc
mov
push
add
rcl
setnp
mov
out
mov
call
aaa
ficom
xor
cmp
jmp
mov
jno
lock
sbb
mov
mov
mov
xchg
shr
clc
sahf
dec
call
and
xchg
mov
inc
not
pop
pop
popf
popa
in
test
and
out
dec
clc
pop
dec
mov
push
push
ror
pop
pop
cld
retf
xchg
fcom
push
in
clc
jp
fmulp
lods
fsubrp
call
pushf
shr
xchg
aad
scas
cmp
stos
mov
mul
or
loopne
sub
std
mov
shl
cdq
push
outs
imul
retf
or
sbb
fprem
pop
mov
sub
repnz
and
les
movs
sub
jae
mov
ror
and
cs
push
or
hlt
out
add
enter
ret
ror
(bad)
mov
cld
mov
movs
sub
in
loopne
sti
movs
sti
pop
jecxz
sub
test
test
push
out
dec
xchg
xchg
rcr
and
or
and
data16
mov
ror
xor
mov
enter
stc
push
ins
mov
jmp
and
xor
outs
loopne
fldenv
sbb
add
mov
nop
outs
fst
jno
dec
xchg
inc
and
push
jecxz
pop
in
adc
inc
or
fistp
and
push
pop
pop
ins
or
pop
or
or
popa
cs
lock
stos
ins
clc
xor
mov
xchg
jnp
leave
leave
fdiv
test
fidiv
dec
jge
xchg
pop
xor
mov
sbb
das
clc
dec
mov
jmp
xchg
retf
cmp
fwait
cs
fs
in
and
pop
(bad)
daa
out
mov
ror
mov
sbb
nop
dec
jae
push
es
nop
jae
adc
fld
xor
mov
fcom
popf
xchg
out
push
or
push
gs
push
push
mov
dec
mov
leave
lahf
fcomp
in
lds
repnz
cmp
ins
jae
push
dec
movs
(bad)
mov
mov
sub
adc
add
xchg
es
push
mov
iret
xchg
mov
(bad)
in
pop
xlat
xchg
pmulhuw
mul
xor
retf
fs
repz
jne
sbb
imul
je
push
fisttp
sbb
cmps
ss
jmp
lds
jo
(bad)
test
pop
popf
sbb
test
xor
adc
sbb
je
dec
mov
(bad)
cmp
xor
ja
jns
pop
sub
and
push
inc
mov
(bad)
mov
aam
add
xor
ins
adc
and
push
movs
leave
adc
pop
frndint
push
jg
mov
jnp
xor
mov
call
xor
dec
or
push
shr
add
cmp
popa
aaa
dec
push
mov
test
fwait
xor
inc
(bad)
and
inc
inc
test
sub
in
scas
out
dec
aaa
sbb
sub
or
ja
xchg
lea
cld
fs
mov
dec
rcr
push
fs
dec
add
jecxz
and
jp
push
push
aas
dec
and
mov
shr
sub
shl
dec
adc
push
add
fcom
xor
leave
aam
ins
pop
fdivr
xchg
jae
outs
data16
xchg
movq
add
sar
xlat
cmps
jnp
mov
push
cmps
pop
mov
ds
cmp
add
or
push
inc
rcl
cmp
mov
mov
adc
pop
and
(bad)
and
enter
adc
out
cmp
fld
sbb
jno
push
in
arpl
test
cmp
daa
mov
dec
out
and
adc
ret
jb
push
data16
pusha
push
imul
mov
dec
in
inc
retf
dec
popa
fsubr
aad
mov
loopne
xlat
in
in
push
sti
push
xchg
adc
or
cmp
in
cmps
ret
mov
pop
xor
pop
in
adc
xor
out
retf
lahf
ret
retf
dec
dec
repz
sub
ds
bound
xor
or
xchg
mov
sub
and
lods
jl
rol
in
das
xor
jp
pushf
clc
xor
retf
loop
cmp
gs
ror
and
enter
lea
out
fs
cmp
or
and
test
push
outs
fistp
dec
xchg
push
in
inc
imul
fiadd
add
add
out
cwde
xchg
mov
retf
mov
or
ins
or
(bad)
shr
mov
pop
pop
push
mov
lahf
scas
lds
push
sbb
cmp
sbb
shl
inc
test
sbb
mov
jmp
sub
xchg
push
cmp
stos
xchg
sbb
rcl
ss
jl
jns
out
xor
imul
mov
and
test
cmp
retf
popf
fs
int
xchg
cwde
and
lods
out
mov
(bad)
sub
xor
xlat
push
aad
dec
jmp
cmp
xchg
(bad)
stc
or
mov
jecxz
mov
js
cmp
int3
fstp
std
jne
xchg
xchg
xchg
js
cwde
sbb
clc
xor
inc
pop
je
jmp
int
cmp
je
pop
test
sub
call
lahf
add
aad
jl
add
jmp
shl
cmp
int
js
fwait
(bad)
(bad)
(bad)
out
in
imul
mov
test
adc
je
mul
loope
mov
add
das
adc
dec
inc
fisttp
xchg
call
adc
dec
jnp
addr16
jns
fnsave
xchg
cmp
(bad)
stos
stos
into
xchg
rol
test
(bad)
rcr
cli
sbb
inc
pop
and
lds
fnsave
scas
mov
sbb
pop
lea
xchg
(bad)
fst
(bad)
mov
or
mov
cwde
(bad)
loopne
add
mov
ds
test
mov
xchg
inc
push
pop
jle
arpl
push
stos
sar
bound
inc
cmp
xor
sbb
(bad)
fmul
popf
fs
xchg
and
call
xchg
dec
movs
outs
push
pop
das
or
fwait
ins
and
call
mul
retf
repnz
jno
jmp
outs
jae
xchg
add
fst
(bad)
test
mov
jb
stc
push
and
add
std
imul
in
aaa
jae
or
sub
in
imul
loopne
sub
sub
mov
pop
and
jo
add
xor
fld
(bad)
in
add
sub
dec
xor
fmul
sub
xor
iret
or
xor
hlt
dec
mov
ret
pop
pop
cmp
ret
xchg
rcl
mov
stos
test
(bad)
xchg
xor
and
inc
fwait
adc
loope
cld
cmps
add
jle
fwait
xchg
loopne
sub
pop
fst
sub
pop
or
retf
fs
adc
push
mov
test
shl
mul
and
mov
or
scas
dec
xchg
sti
out
jmp
sbb
pop
pop
sub
sbb
cdq
mov
mul
push
sbb
bound
mov
xchg
idiv
mov
adc
popa
cwde
pusha
xchg
push
dec
jmp
sbb
add
adc
aas
and
xchg
mov
outs
pushf
repnz
jmp
pop
movaps
xor
leave
loopne
jecxz
inc
cmp
cmp
inc
push
inc
push
push
dec
imul
out
jl
mov
ror
inc
xchg
jp
lds
sbb
mov
ds
sub
xchg
test
(bad)
fldenv
div
in
sar
and
jmp
cmp
add
int3
hlt
mov
js
ins
or
lahf
loopne
sub
js
cwde
cli
je
mov
stos
std
mov
in
ja
sbb
das
dec
inc
jp
dec
ins
aam
mov
retf
or
cwde
outs
or
sub
std
inc
ss
add
dec
adc
ret
sbb
in
out
xor
popa
add
push
xor
mov
inc
das
add
out
fidiv
je
stc
ret
and
sub
and
sub
sub
ins
das
add
mov
std
aad
add
add
mov
cmps
cmp
jbe
icebp
scas
mov
fs
mov
shr
xchg
arpl
xchg
mov
ins
js
pop
or
and
or
cld
push
sbb
scas
retf
add
test
bound
addr16
mov
sbb
sub
push
bound
cmps
mov
mov
repz
in
sub
mov
nop
jbe
out
das
rol
rol
mov
cdq
imul
shl
add
shl
xchg
dec
call
jnp
retf
adc
adc
loop
sbb
and
ds
push
jmp
pushw
adc
add
or
call
lods
cld
or
xor
jnp
cwde
push
in
retf
sub
mov
call
out
repz
je
retf
lds
pop
aad
pop
sti
pop
leave
jp
jno
mov
stos
les
jbe
cmp
push
cmp
les
sbb
aaa
popf
in
das
push
jno
push
mov
sbb
sbb
add
test
loop
rcl
or
jecxz
or
sbb
scas
addr16
movs
adc
cmp
loopne
clc
leave
sub
out
sbb
(bad)
iret
mov
mov
pop
stos
loopne
rcl
push
push
cld
movs
ret
sub
dec
and
jge
cmp
xor
call
iret
cmps
mov
adc
test
stos
mov
(bad)
cmp
dec
cs
add
jle
xchg
mov
jae
nop
dec
in
mov
mov
adc
add
mov
lods
cmp
ja
jns
cs
lahf
cmps
xlat
jbe
inc
jb
stos
xor
icebp
or
mov
inc
sahf
jbe
mov
jg
xlat
cli
imul
popf
mov
or
inc
push
fstp
jbe
leave
mov
jbe
mov
and
pop
int3
dec
popf
rcl
push
mov
xor
enter
loop
jae
movs
xor
sub
arpl
iret
fist
or
mov
sbb
fucomi
lock
mov
cmp
fdivr
popf
inc
pop
inc
pop
fisttp
cld
xchg
pop
mov
pop
push
dec
jge
add
xor
call
int
mov
inc
jmp
push
js
adc
shl
push
sti
cld
rcl
pushf
loopne
push
and
or
pop
mov
into
and
jbe
and
sub
pop
pushf
fnsave
mov
mov
loop
out
out
push
inc
push
jl
pop
adc
and
xchg
shr
adc
ins
loop
or
add
pop
or
dec
pop
pop
cmp
pop
loop
(bad)
xchg
xchg
dec
fisttp
cmc
cwde
and
add
fadd
and
pop
push
xchg
mov
mov
les
test
int
mov
ret
lds
xchg
xor
hlt
cmp
scas
jae
and
ins
ja
cli
test
add
pop
mov
and
cmp
pop
inc
test
ret
pop
jg
pop
mov
sbb
push
and
adc
cmp
pop
cmp
mov
sahf
mov
jmp
mov
fucomip
in
nop
mov
mov
js
pop
rol
and
push
mov
mov
movs
mov
cmp
addr16
in
fdiv
rcr
(bad)
lods
fcomp
dec
and
clc
push
ins
sbb
add
clc
or
pop
xor
(bad)
push
jmp
xchg
xchg
idiv
pushf
adc
pop
adc
repnz
and
add
sbb
cmp
retf
adc
div
test
cld
mov
push
push
xchg
or
icebp
inc
fiadd
jl
rol
add
cmovno
pop
sbb
jb
(bad)
cmps
add
dec
mov
sbb
cwde
dec
mov
mov
fs
sub
das
mov
(bad)
or
mov
dec
pop
push
jne
fs
pushf
dec
loope
jmp
shl
pop
mov
jo
push
aaa
popa
xchg
push
or
and
loope
cmp
push
retf
jmp
out
sti
cmp
inc
sub
sbb
jbe
or
dec
rol
cmc
xchg
(bad)
mov
xor
and
push
cmp
sar
popf
ret
mov
loope
fdivr
fidiv
repz
leave
jnp
ins
test
fcomp
cli
hlt
je
pop
mov
enter
dec
pop
push
and
push
data16
test
aas
jbe
or
sbb
cdq
ficomp
pop
mov
shl
nop
sbb
jmp
in
rcl
stos
in
add
gs
fcomp
fs
sbb
dec
movs
pop
mov
pusha
cmp
mov
pop
xchg
or
ffree
and
loop
retf
adc
jecxz
mov
inc
sbb
fimul
inc
out
mov
(bad)
xchg
data16
adc
(bad)
mov
mov
shl
adc
mov
jmp
addr16
sbb
das
leave
movs
(bad)
fld
mov
into
and
dec
sar
push
popa
sbb
mov
xchg
push
dec
pusha
int3
jo
adc
imul
mov
xor
dec
xchg
js
mov
aad
fidivr
sbb
mov
xchg
mov
mov
daa
cmc
add
(bad)
daa
out
cwde
cmp
xchg
mov
mov
ds
mov
cli
xor
in
scas
jne
pop
pop
repnz
add
xchg
ja
pushf
jo
loope
pop
mov
xchg
jno
in
xor
dec
ja
pushf
jge
xor
add
inc
inc
cmp
outs
cwde
pop
pop
pop
test
rcl
jecxz
dec
xor
es
pop
pop
cld
cmps
ds
and
sbb
(bad)
test
pop
je
sub
jecxz
clc
push
sbb
retf
inc
or
lods
rcl
ja
add
sbb
pop
pop
cwde
(bad)
loope
sub
xchg
jg
inc
jno
lahf
and
mov
sub
ins
fcmovnu
sbb
out
(bad)
pop
jne
mov
and
lock
add
mov
xchg
call
imul
and
mov
js
adc
enter
retf
xor
sbb
sub
add
add
jmp
popf
pop
add
out
xchg
or
xchg
and
sbb
jg
cmps
cmp
scas
xchg
stc
ror
cwde
sub
sbb
sub
cmp
push
push
out
addr16
icebp
pop
pop
xor
call
and
or
inc
lock
dec
jb
cdq
mov
gs
fsubrp
cwde
das
dec
push
adc
loop
cmp
pop
jmp
popf
mov
mov
stos
mov
fdiv
adc
inc
pusha
sub
out
cmc
inc
inc
(bad)
cs
mov
pop
adc
ja
adc
loope
mov
mov
xchg
in
loopne
imul
push
pushf
xor
cmps
xor
call
aam
movs
(bad)
bound
xchg
or
cld
xchg
arpl
test
cmp
or
jmp
pop
push
add
cmp
fdiv
jl
(bad)
repnz
imul
mov
xor
mov
repz
call
call
scas
cmp
push
in
sbb
in
call
push
shr
xchg
pop
aad
jo
inc
mov
call
add
cwde
bound
dec
xor
inc
xchg
in
fld
rcl
div
and
push
daa
mov
int3
sbb
push
(bad)
cmp
int
pop
and
cmp
xor
fwait
xchg
xor
push
rol
jle
fcom
imul
adc
jmp
xchg
dec
xor
out
or
add
add
es
stos
pop
imul
leave
dec
push
ins
mov
push
lods
clc
dec
and
jns
xor
or
iret
and
in
jnp
dec
pop
push
mov
dec
mov
fld
pusha
inc
mov
data16
sub
xlat
ins
sub
dec
loopne
fnstcw
movs
imul
cmp
jp
and
in
adc
mov
cmp
in
int
or
mov
ficomp
push
cwde
mov
out
call
cmp
popa
icebp
test
popf
or
lock
jno
mov
sbb
sub
fwait
mov
dec
sar
and
and
movs
or
imul
lea
(bad)
dec
push
lahf
xlat
aas
jmp
add
xlat
mov
ins
push
pop
mov
push
sti
and
pusha
in
ins
shl
std
inc
mov
xor
adc
lds
and
cwde
inc
inc
inc
xchg
cmc
xor
ins
outs
ret
sub
(bad)
pop
movs
jl
movs
daa
add
fimul
dec
cmp
mov
(bad)
fwait
sahf
(bad)
iret
pop
in
js
and
and
ds
ficomp
push
shr
mov
outs
and
adc
sbb
xchg
mov
out
stos
pop
lahf
push
push
xor
sub
fcomp
lods
stc
mov
movs
out
pop
ret
push
(bad)
data16
bound
xchg
stos
jbe
inc
ins
scas
xor
push
lock
(bad)
stos
add
das
sbb
xchg
nop
gs
push
inc
cmps
push
inc
ins
lea
cwde
xbegin
das
scas
into
test
outs
jmp
jl
pop
out
xor
cdq
xchg
xlat
cli
add
iret
inc
sbb
push
call
stos
es
dec
sub
xchg
adc
fadd
test
(bad)
xor
scas
inc
and
and
pop
cmp
nop
lea
and
std
in
xchg
sbb
mov
add
call
sub
mov
push
out
or
int3
shr
cmp
(bad)
fistp
cmp
jp
or
out
lock
icebp
and
sbb
(bad)
(bad)
pop
pop
cdq
fs
inc
dec
push
(bad)
xchg
xor
pop
push
cmp
and
push
fist
push
test
jg
jbe
icebp
pushf
adc
(bad)
dec
inc
adc
gs
mov
loope
dec
dec
fidivr
adc
xchg
dec
nop
add
push
out
sub
int
dec
lods
add
and
(bad)
cmps
xchg
sub
mov
pop
popa
in
mov
mov
repnz
call
xor
scas
pop
jmp
int
mov
jecxz
(bad)
movs
fisub
fnstenv
sub
inc
dec
adc
mov
leave
test
aas
xlat
ss
sbb
mov
xor
fild
push
dec
xor
adc
jg
mov
clc
xchg
sub
(bad)
xor
pusha
retf
mov
pop
mov
ror
int3
adc
cmps
push
arpl
mov
pop
sbb
mov
xchg
xchg
shl
into
xlat
and
inc
popa
daa
inc
rcl
test
aad
mov
test
add
sub
ss
jo
fidivr
mov
or
sar
lahf
mov
not
lahf
in
mov
lds
mov
cmps
sar
mov
jle
xchg
xchg
popa
ins
(bad)
pop
pop
mov
movs
rcl
mov
fbstp
xlat
or
out
mov
dec
div
lea
mov
call
adc
retf
dec
push
xlat
push
dec
test
jle
movzx
cmp
ret
adc
mov
and
adc
push
cwde
out
and
push
and
pop
retf
push
dec
dec
sbb
cmps
jecxz
enter
sub
and
cmp
ret
or
mov
xchg
arpl
les
imul
mov
clc
jbe
rcl
mov
lahf
jle
test
inc
fnstenv
and
pop
push
adc
loope
add
fisub
and
or
and
sbb
call
xlat
ds
ror
push
in
xchg
mov
ds
cmc
in
dec
bound
(bad)
cli
(bad)
mov
gs
int
stc
mov
mov
bnd
rcl
aad
mov
mov
mov
mov
cmp
sbb
push
pushf
jl
pop
mov
xchg
jge
mov
test
sbb
and
shl
mov
mov
push
into
xor
jnp
ja
cmp
mov
mov
adc
mov
mov
xor
gs
add
adc
cmps
dec
cmp
mov
mov
sub
test
cmp
fsubr
dec
in
cs
in
inc
push
jb
adc
ret
movs
(bad)
out
pop
pop
(bad)
outs
cmp
cld
jb
mov
mov
and
sar
push
int
add
and
adc
xor
daa
jmp
or
push
test
mov
hlt
dec
imul
cwde
ror
xor
loop
jb
std
mov
jb
in
lock
inc
ja
shr
in
movs
test
call
jmp
scas
jmp
dec
cmp
adc
div
inc
or
leave
mov
sahf
mov
nop
int
xchg
or
cmp
call
and
call
inc
mov
push
cmc
adc
inc
ror
call
test
lahf
fwait
in
retf
pop
jnp
xor
shl
and
mov
ret
sub
add
int3
mov
mov
and
aam
dec
dec
test
cdq
cmp
mov
div
xor
adc
ror
iret
ss
ins
icebp
movs
cdq
arpl
sbb
fldenv
lea
out
loope
adc
cwde
fdivr
sahf
pop
mov
jg
jae
mov
pusha
stos
mov
mov
or
outs
xor
leave
adc
xor
lock
mov
cmc
cmp
push
imul
inc
jecxz
fld
(bad)
fcmovbe
repz
adc
iret
and
xor
mov
sub
pop
pop
jg
xlat
push
aam
mov
jne
mov
(bad)
cmp
int3
repnz
mov
retf
inc
mov
sti
and
pop
pop
call
pop
les
add
xor
mov
push
(bad)
retf
dec
(bad)
sub
cmp
dec
mov
mov
mov
push
cwde
fidiv
inc
cmp
(bad)
adc
test
fst
mov
lock
pop
pop
jno
sti
push
mov
(bad)
inc
iret
jle
pop
jbe
mov
je
xchg
mov
ins
sbb
aad
cs
shr
jle
fwait
xchg
fs
fild
jno
push
sbb
xor
mov
loope
or
sbb
pop
retf
push
cmp
shl
jns
mov
call
pop
test
ficomp
and
or
repz
jne
clc
scas
mov
pusha
xchg
jnp
or
(bad)
mov
xchg
into
iret
out
aad
pop
hlt
pop
js
out
xchg
shr
arpl
sbb
push
and
jo
or
pop
retf
fnstenv
clc
xor
aad
jb
inc
(bad)
outs
and
(bad)
or
pop
dec
push
xchg
fadd
and
in
mov
mov
mov
sahf
fld
cmp
mov
dec
mov
cmp
fnsave
fist
push
ror
retf
sbb
push
mov
and
dec
imul
jmp
(bad)
cmc
and
jmp
out
repz
jl
add
jmp
dec
rcr
loopne
pop
jns
in
mov
jmp
jns
jo
mov
pop
mov
pushf
add
add
inc
cmp
sahf
cmc
jle
(bad)
scas
retf
add
adc
ret
cdq
inc
in
jle
and
icebp
pop
(bad)
fild
inc
and
popf
and
xchg
mov
out
shl
add
push
sti
mov
nop
pop
or
xchg
jp
mov
pusha
push
(bad)
add
pop
jae
mov
mov
stc
fcmovb
aas
in
add
int3
push
jp
aad
mov
outs
adc
cmp
dec
or
dec
cmp
push
push
shl
mov
les
aam
lods
int3
mov
cmp
pop
mov
pusha
test
or
dec
clc
jg
js
lahf
xchg
pop
mov
outs
test
jb
adc
popf
mov
mov
and
xor
ins
add
mov
sub
into
inc
ficomp
pop
fidivr
jae
cmp
push
jecxz
add
or
adc
out
jnp
leave
xchg
jne
push
jno
mov
or
mov
or
adc
add
add
pop
dec
jl
push
cdq
lods
or
fimul
inc
xor
mov
xlat
inc
cdq
push
lock
push
mov
stc
loopne
xchg
popf
adc
pop
sbb
add
inc
fld1
or
sub
imul
stos
adc
test
shl
adc
mov
xchg
pop
shr
mov
jmp
push
mov
fadd
(bad)
aad
lock
jne
xor
ds
aaa
inc
mov
sbb
enter
ret
lea
pop
stos
test
and
in
dec
cld
jne
dec
fs
adc
mov
pop
stc
sbb
mov
into
xchg
imul
(bad)
mov
inc
nop
jns
push
inc
sub
lahf
or
add
add
mov
rol
fsubr
xchg
xchg
mov
in
fnsave
add
imul
xchg
lock
aad
movs
loop
push
(bad)
sub
fwait
jae
aam
das
add
xchg
xchg
xchg
or
ds
adc
and
dec
dec
call
cdq
jecxz
inc
jg
and
cli
stc
fisubr
sub
lahf
push
test
cli
mov
pop
sub
mov
bound
sbb
add
test
shl
mov
pushf
cs
rcl
call
fmul
ins
sub
jl
pop
dec
shr
js
das
sub
popa
stos
xor
mov
(bad)
sub
lods
cmps
out
mov
sar
jmp
adc
pop
xor
add
mov
rcl
or
push
(bad)
mul
cmp
sbb
push
push
ds
cmps
cli
xchg
nop
popf
push
jmp
cwde
out
and
dec
outs
adc
mov
outs
xchg
pop
dec
(bad)
gs
jne
test
sbb
out
int
or
mov
add
int3
mov
in
imul
push
jl
jg
sti
iret
shr
adc
pushf
xor
stc
imul
push
pop
add
add
sub
pop
pop
shr
inc
push
mov
jb
dec
int
je
test
test
inc
(bad)
mov
fnstsw
cdq
push
and
add
adc
pop
fcmovnbe
sbb
je
int
das
leave
nop
ret
xchg
mov
lds
fld
ror
ja
frstor
push
ins
mov
mov
je
(bad)
jb
data16
cmps
add
inc
test
dec
push
fld
pop
jmp
addr16
mov
shl
mov
mov
inc
into
push
cdq
cmp
sahf
and
imul
xor
repz
or
std
psrlq
les
fs
out
mov
jmp
push
dec
mov
sbb
lds
push
scas
lahf
cmp
sbb
mov
and
adc
movs
jnp
lock
add
xor
ret
jle
(bad)
or
mov
jmp
popf
shl
add
test
and
xor
(bad)
mov
add
(bad)
cmp
sub
mov
sub
mov
cmp
sub
or
jne
cli
fadd
cwde
dec
mov
sub
dec
push
dec
cmp
out
(bad)
pop
jne
loope
adc
scas
ret
mov
mov
mov
(bad)
jno
fcom
imul
shl
pop
test
adc
test
xchg
int3
hlt
mov
xor
cwde
pop
jns
pop
inc
jmp
test
xchg
int
ja
aaa
sar
inc
push
sub
add
sbb
push
sar
push
outs
sub
imul
gs
ret
lods
ins
aaa
or
test
push
sbb
dec
lods
mov
enter
cmp
int
rcl
pusha
(bad)
dec
call
loope
jnp
sub
cmp
arpl
iret
sar
pushf
mov
mov
push
sar
xor
add
out
pop
movs
sbb
pop
lock
adc
(bad)
pop
or
or
frstor
push
jae
aaa
pop
daa
(bad)
adc
jne
sub
push
repnz
mov
adc
or
sub
shl
sar
fadd
mov
xchg
fwait
js
std
jno
pop
stos
ud2
xchg
test
arpl
mov
icebp
ds
add
mov
int
xor
enter
inc
sub
ins
cmp
push
(bad)
push
sahf
ins
sub
jmp
sub
adc
jmp
rcl
hlt
in
jle
es
push
sub
push
push
mov
cmp
cmp
not
mov
xchg
add
xor
jge
cs
arpl
ss
outs
and
xor
cld
xor
nop
adc
in
add
cmc
lods
aad
xchg
mov
sub
daa
sar
clts
cmp
mov
dec
mov
sbb
icebp
dec
rcl
cwde
jae
push
jecxz
(bad)
jmp
scas
pop
inc
mov
retf
xor
adc
mov
ins
jb
iret
lahf
loope
lea
repz
inc
mov
movs
jmp
out
xchg
mov
out
fld
inc
sbb
xor
jp
mov
cmp
repnz
rol
push
ficom
into
cmp
jecxz
mov
int3
loop
push
mov
pop
in
rcr
in
jb
sbb
add
sub
jns
dec
les
aad
div
lahf
and
xchg
fdivr
dec
cdq
cmp
mov
adc
je
inc
push
pop
add
ja
adc
dec
xchg
outs
test
scas
dec
add
es
mov
ins
lea
test
rol
fsubr
sub
sub
(bad)
nop
je
arpl
into
popa
mov
sbb
aaa
shl
(bad)
fstp
mov
cdq
mov
inc
mov
jecxz
pop
and
enter
das
(bad)
aam
stc
shl
inc
mov
fwait
mov
mov
dec
popa
mov
(bad)
and
fnsave
jle
cmp
jnp
sbb
inc
ret
sbb
cmps
jge
aad
jl
mov
sbb
clc
repz
int3
push
sub
movs
mov
push
add
adc
fs
icebp
or
sar
jns
arpl
inc
xchg
sbb
jge
adc
dec
je
push
ds
xor
cmp
sub
iret
test
mov
paddsw
sahf
inc
call
jge
inc
dec
sub
sbb
leave
jmp
xchg
loop
lea
push
cmp
mov
mov
enter
outs
push
imul
adc
dec
sub
jp
dec
movups
sub
mov
jmp
pop
out
lods
arpl
sub
sahf
test
imul
mov
fisub
movs
mov
sti
cmp
inc
mov
or
jns
js
xchg
xchg
out
add
pop
add
aas
int
stc
aam
sahf
aam
mov
inc
cld
or
ficomp
retf
inc
(bad)
das
cs
xchg
mov
enter
ins
mov
bound
aaa
cmc
push
inc
in
mov
jmp
shl
pop
adc
dec
in
outs
inc
cmp
pop
fstp
out
int3
clc
retf
outs
push
xor
adc
mov
cli
mov
das
pop
or
in
mov
clc
out
cmc
add
into
xor
sahf
rcl
mov
lea
repnz
or
call
and
repz
jbe
ins
dec
iret
(bad)
pop
sbb
jmp
dec
cmps
repz
xor
adc
jl
mov
in
mov
xchg
dec
or
xchg
pop
jne
fisttp
inc
je
push
cmp
in
push
xchg
sbb
and
mov
retf
jle
and
test
inc
cli
or
pop
cmp
out
xlat
push
ret
pop
add
mov
aas
leave
push
cmp
sbb
ins
cs
mov
(bad)
fnstenvw
pop
push
(bad)
and
das
outs
div
call
test
retf
ds
cmp
fild
pusha
test
push
bound
aad
repz
jmp
fidiv
(bad)
cwde
mov
push
in
pusha
imul
lock
sti
fxch
pop
outs
inc
std
add
stos
fbld
shr
fs
test
pop
mov
xlat
cmc
xor
movs
bound
jbe
add
jns
cmp
push
fsub
xlat
sar
cli
cmp
loopne
fimul
mov
inc
dec
cwde
adc
jmp
aad
xchg
int3
cmp
adc
jns
data16
in
or
sbb
dec
adc
jbe
sbb
adc
seta
xchg
cmp
(bad)
dec
sub
inc
stos
stos
push
and
mov
dec
call
sbb
clc
push
sub
mov
mov
(bad)
hlt
dec
jmp
pop
aad
jle
lahf
push
js
mov
cmp
retf
and
cmp
lahf
ins
lea
pop
mov
adc
repnz
(bad)
out
aam
aad
inc
inc
jne
dec
inc
xor
stos
sub
add
test
cli
mov
inc
ss
dec
fisub
outs
mov
pop
dec
loop
inc
push
je
fsubr
(bad)
and
xlat
retf
mov
popa
not
jne
ficomp
sar
jecxz
push
arpl
or
std
jbe
ffree
aad
inc
xchg
enter
jp
(bad)
mov
lods
mov
out
lahf
jne
inc
adc
movs
bound
out
cmp
and
int3
cs
int3
dec
into
in
mov
sbb
lds
out
cdq
push
xor
jb
call
mov
and
mov
dec
movs
and
push
sqrtps
cmp
push
sbb
aas
sub
in
jg
aam
shr
mov
add
add
(bad)
jg
sub
pop
jbe
stc
int
clc
scas
cmp
outs
and
sub
push
pusha
lods
xchg
sahf
mov
and
jle
outs
int3
mov
call
mov
mov
dec
jmp
push
gs
or
sar
stc
xor
xor
mov
inc
call
jge
xchg
cmc
mov
dec
inc
imul
cli
push
pop
ja
enter
rol
add
push
and
or
(bad)
dec
cmc
sub
leave
mov
(bad)
aam
jb
xchg
clc
mov
repz
inc
shr
add
inc
popa
inc
scas
out
in
arpl
inc
cld
mov
jmp
mov
mov
mov
test
jno
js
gs
cmp
push
mov
cmp
pusha
xchg
xchg
inc
sub
jle
cmp
pop
in
mov
movs
repz
scas
and
xor
sbb
jmp
fsubr
mov
push
pop
pop
stos
add
adc
and
and
out
fcmovnu
stos
rol
jo
cmp
or
arpl
les
jns
retf
mov
fisttp
in
std
dec
push
jmp
call
clc
pop
adc
lds
out
scas
aaa
dec
in
mov
sub
repnz
lods
xor
mov
ins
enter
sbb
xor
aam
dec
xor
scas
sbb
push
jns
in
and
mov
pushf
push
popf
xor
mov
mov
jmp
or
shl
call
pop
adc
jbe
mov
cmp
sub
daa
loopne
cmp
pop
adc
bound
mov
sub
xchg
je
push
and
stos
mov
sub
out
ins
xchg
mov
cmp
xor
and
popa
pop
mov
xor
or
sub
inc
add
mov
push
adc
aad
loop
mov
jb
xchg
mov
shl
jmp
fbstp
pop
adc
ds
sub
inc
adc
jecxz
add
mul
imul
(bad)
cli
popf
dec
stos
leave
jl
mov
cdq
xor
dec
jmp
adc
pop
push
(bad)
ror
lea
mov
repz
jns
dec
jp
cmp
test
xchg
xor
(bad)
pop
add
aaa
repnz
sub
mov
adc
jg
mov
retf
cmp
mov
shl
out
loope
mov
test
sub
xchg
rcr
adc
mov
mov
repnz
imul
lds
push
test
jns
push
push
push
fsub
xchg
cwde
clc
add
into
inc
dec
ret
and
inc
or
sub
jg
pop
inc
mov
stos
push
jbe
cmp
clc
and
push
(bad)
fldcw
mov
dec
fidiv
inc
lahf
adc
xchg
scas
rcl
xchg
les
sub
pop
push
push
or
xlat
jne
adc
and
loop
enter
jg
and
sub
adc
dec
mov
xchg
adc
add
jae
mov
ja
dec
dec
das
pop
mov
cmp
test
push
mov
call
pop
mov
inc
inc
(bad)
(bad)
call
int3
aas
rol
or
pop
xchg
sub
jmp
std
into
pop
xchg
addr16
test
in
adc
idiv
mov
call
test
mov
inc
adc
in
out
(bad)
in
xchg
pop
jmp
add
mov
inc
cmp
enter
and
jno
pop
ficom
rcl
clc
repnz
xor
loop
jno
(bad)
(bad)
jmp
dec
xor
or
in
call
jo
pushf
jecxz
jge
mov
retf
fcmovnbe
sub
outs
or
loop
(bad)
sbb
out
jae
xlat
adc
dec
cld
mov
pop
inc
(bad)
mov
ja
jmp
in
pop
test
mov
scas
jns
mov
stc
xchg
pop
out
out
repnz
into
adc
cmc
sbb
clc
cld
test
stc
adc
out
xchg
js
pop
dec
aam
and
ss
adc
inc
jbe
rol
push
pop
scas
(bad)
iret
loope
dec
dec
(bad)
fs
fsubr
sbb
ret
in
fldlg2
adc
xor
jge
(bad)
mov
data16
mov
adc
push
push
xlat
out
addr16
push
in
xor
mov
pop
xor
jo
and
sub
jle
(bad)
or
adc
and
push
dec
cmc
adc
mov
dec
xor
outs
div
jbe
cli
aaa
scas
mov
or
loope
pusha
(bad)
ret
mov
and
xor
in
xchg
(bad)
mov
cdq
and
and
and
cli
xor
sub
pop
xchg
bound
jne
idiv
inc
or
sub
pop
jb
dec
sub
xchg
jp
jne
das
jmp
jae
inc
pop
add
sbb
fdivr
push
fadd
and
jae
in
(bad)
xchg
in
inc
iret
inc
cmp
fdivr
fnstsw
fadd
cmps
push
add
retf
xchg
jnp
inc
enter
or
push
inc
push
add
jno
sahf
ds
fld
xchg
into
aam
inc
ins
dec
or
outs
push
pop
mov
fmulp
dec
pop
and
adc
and
or
jb
jl
adc
sub
jae
(bad)
movs
mov
enter
movs
push
test
sub
in
mov
jecxz
aaa
outs
adc
sbb
and
jle
imul
fs
fsub
xchg
iret
es
out
sub
adc
jno
push
jecxz
mov
adc
test
or
push
(bad)
(bad)
push
das
kunpckbw
cmp
push
dec
imul
dec
daa
sub
fstp
lea
adc
and
inc
inc
xor
loope
lock
push
and
dec
retf
out
xchg
inc
rcl
ss
mov
jp
movs
mov
bound
fdivrp
jmp
pop
push
xchg
and
popf
clc
add
add
pop
adc
jb
and
mov
jl
jmp
push
test
loope
sub
jb
test
pslld
pop
je
dec
jb
cmp
dec
pop
nop
rep
pop
inc
mov
push
mov
sbb
mov
pop
movs
outs
fsubr
cmp
call
movs
or
cmps
bound
loop
pop
out
ret
jns
les
sbb
mov
fistp
ror
aaa
outs
pop
shl
mov
fs
mov
add
data16
(bad)
push
(bad)
test
or
jne
cmp
cs
dec
(bad)
repnz
out
ins
jecxz
into
xor
dec
arpl
jmp
mov
inc
icebp
shl
sar
lahf
fidiv
push
inc
aam
mov
add
movs
fucomip
shl
push
sti
push
inc
nop
std
adc
pushf
bound
xor
add
sub
sbb
inc
(bad)
cs
pop
popa
sti
rcl
dec
sbb
jmp
mov
shr
movs
push
sub
cli
xor
shr
ins
jp
push
out
sub
push
ins
scas
int
mov
cmp
xchg
je
or
sub
addr16
dec
ret
fadd
adc
inc
sbb
lea
inc
mov
test
or
cmp
jge
jmp
(bad)
daa
push
retf
push
jae
push
scas
jbe
push
jae
or
rcr
cld
push
mov
adc
push
retf
shl
pushf
xor
repz
das
scas
fcmovnb
jle
loopne
jae
es
xchg
aas
in
fs
sbb
ja
pop
fcom
pop
xor
pop
xchg
cld
xchg
mov
or
push
inc
cmp
jecxz
jmp
fnstcw
mov
and
add
loop
cli
pop
repnz
lea
pop
mov
push
push
push
stc
loopne
jl
ss
xor
nop
out
mov
mov
imul
out
cli
push
outs
jbe
mov
aaa
jmp
mov
mov
pause
loope
lods
mov
pop
repz
mov
jge
pop
hlt
xchg
in
outs
dec
icebp
mov
mov
mov
jecxz
fldenv
out
aad
or
arpl
test
push
mov
ror
xor
add
or
aad
dec
das
fucomp
cli
push
mov
aaa
xchg
xchg
scas
xchg
xor
mov
clc
inc
ja
push
xchg
jbe
scas
xchg
push
scas
(bad)
sti
mov
jbe
xor
add
retf
test
sbb
dec
cmp
das
jnp
mov
mov
loop
setp
adc
add
(bad)
in
jecxz
dec
mov
jp
jo
or
dec
sbb
mul
mov
fincstp
repnz
sahf
cmp
xchg
cmp
retf
imul
xor
mov
mov
xchg
bswap
aas
lds
inc
mov
(bad)
(bad)
pop
push
scas
add
cld
sbb
mov
mov
or
imul
imul
sub
sahf
inc
mov
aas
jnp
xchg
es
leave
xor
ret
xchg
inc
inc
cmp
xor
mov
sbb
shl
add
jbe
loop
sbb
out
sar
mov
jecxz
dec
xchg
mov
and
jecxz
test
jnp
xor
std
fisttp
rcr
pop
add
jb
fbstp
lock
lahf
ds
ror
repnz
push
sti
mov
test
(bad)
out
sti
inc
ffree
pop
mov
in
xchg
jl
mov
mov
stos
inc
int
fcomp
out
xchg
dec
out
push
ja
leave
xor
dec
inc
mov
mov
inc
bound
jns
xor
xchg
xchg
mov
or
mov
loopne
push
dec
xchg
shl
jns
sbb
pop
repz
dec
pushf
into
dec
std
outs
and
out
popa
retf
nop
or
test
and
aam
dec
jmp
sbb
fimul
sbb
popa
add
into
sbb
xor
inc
imul
xlat
(bad)
mov
call
or
mov
mov
leave
pop
mov
fdivrp
imul
pop
mov
sbb
pop
mov
jb
push
fadd
repz
jl
call
push
cdq
fimul
xchg
push
addr16
xchg
movs
ret
int
xchg
sbb
loopne
pmaxsw
or
xor
movs
xor
push
gs
enter
les
xchg
test
movs
xor
dec
mov
jp
mov
cdq
push
xlat
icebp
cmp
cli
mov
pop
xchg
dec
(bad)
ret
xchg
sbb
pop
sahf
(bad)
sti
dec
pop
mov
dec
xchg
mov
rcr
sahf
in
mov
adc
ret
jne
sbb
test
test
arpl
mov
xchg
fild
pop
and
xchg
lahf
pusha
ins
sub
cmp
adc
out
dec
ins
pop
push
add
dec
adc
adc
mov
out
cmp
xor
scas
aam
push
xchg
lock
xchg
jmp
add
loop
add
iret
retf
jmp
dec
mov
cmps
xchg
jmp
ficom
jle
loope
ja
inc
cs
jbe
and
mov
pcmpeqd
(bad)
out
movs
jno
(bad)
loopne
mov
dec
loop
out
out
lods
dec
int3
push
push
jb
sub
inc
add
or
outs
mov
idiv
and
shr
mov
sub
out
out
arpl
dec
mov
jle
jg
in
mov
in
rol
sbb
not
mov
mov
scas
in
mov
xor
aas
rcr
cmp
loop
mov
add
and
push
repnz
lods
test
cmp
inc
mov
adc
les
das
getsec
adc
mov
out
loopne
sub
ins
pop
mov
movs
pop
std
xchg
push
xor
not
sub
jb
dec
inc
imul
xchg
jae
xchg
push
ds
out
loopne
mov
xchg
icebp
adc
pushf
pop
cli
sub
or
jmp
push
cmp
xchg
jmp
mov
lods
jns
cs
scas
xchg
ret
xor
push
pop
mov
dec
xchg
push
adc
mov
imul
push
inc
imul
and
addr16
call
dec
test
(bad)
and
mov
pop
pop
fidiv
pop
lds
dec
out
cld
imul
pop
not
push
(bad)
mov
push
cmp
xor
cmp
push
add
pop
xchg
push
movs
mov
das
sbb
stos
sbb
jp
arpl
inc
xchg
dec
sahf
test
inc
push
adc
jno
adc
mov
and
push
cmp
bound
jmp
dec
mov
xor
jo
jecxz
in
or
jnp
add
sbb
retf
inc
and
cmp
sub
movs
into
cmp
pop
sbb
movs
movs
or
sbb
mov
pop
xor
push
lods
jp
and
fwait
mov
push
popf
jge
and
das
add
add
jmp
push
int
rcr
sbb
sahf
ins
add
call
push
mov
dec
add
xchg
dec
rol
adc
icebp
icebp
mov
xchg
test
and
lods
xchg
cmp
xor
(bad)
or
inc
mov
mov
bound
(bad)
cmp
stos
int3
sbb
xor
or
icebp
rcr
pop
std
aaa
jge
ja
xchg
sbb
and
or
inc
pop
push
push
push
cmps
ret
pop
jge
stos
xor
fsubr
div
test
mov
shl
or
cmp
test
rcl
cli
(bad)
js
stos
add
add
rcl
jb
xor
std
add
push
push
cmc
ret
add
loope
push
pop
jle
std
(bad)
es
pop
pop
push
cmc
sbb
fs
adc
mov
les
neg
dec
das
ud2
add
mov
mov
inc
repz
or
adc
pushf
lock
clc
sub
fnstsw
and
fild
leave
jmp
addr16
sbb
fisttp
in
mov
mov
repz
(bad)
add
dec
mov
mov
xchg
ffree
mov
jo
call
mov
xchg
xor
fdiv
sbb
sub
and
cmps
das
add
cmp
ins
(bad)
mov
imul
inc
stc
hlt
shl
lods
out
iret
stos
cmps
ja
cmps
fnsave
cmp
int
fndisi(8087
xchg
call
cmp
push
add
sub
dec
jge
cld
(bad)
(bad)
jl
pop
dec
push
xchg
dec
xor
daa
shr
cmp
int3
dec
cli
mov
shl
add
ds
sub
fstp
xchg
popa
outs
push
xchg
in
xlat
ror
je
enter
cmc
mov
fs
imul
retf
stc
jp
xor
and
push
test
pop
cmp
das
jge
mov
xchg
pop
mov
in
mov
pop
xor
adc
add
loopne
xchg
retf
mov
adc
jl
repz
sbb
inc
rol
cmc
pop
les
push
sahf
daa
and
push
test
jg
clc
and
dec
int
add
fs
xlat
add
outs
mov
sub
call
mov
(bad)
sbb
(bad)
call
icebp
jp
inc
or
push
cmovns
mov
adc
repz
xchg
or
retf
or
jmp
or
fcom
rcr
xlat
fstp
fisttp
(bad)
adc
mov
aad
and
add
and
loope
aas
fwait
js
movs
xor
sbb
imul
inc
hlt
push
inc
push
jmp
jg
cmp
mov
sub
add
iret
inc
push
xor
mov
xor
aam
test
ret
imul
mov
int
leave
sub
sub
repnz
or
lods
in
popa
dec
lods
and
push
(bad)
lock
shl
sti
mov
dec
xchg
div
pop
jle
out
mov
pop
fld
pop
pop
dec
dec
jge
into
fwait
out
ret
aaa
ss
icebp
mov
cdq
pop
xchg
xor
push
ins
lods
mov
mov
test
pop
and
xchg
ins
pop
mov
fadd
inc
js
popa
clc
ja
aaa
int3
jno
mov
xor
dec
into
sbb
jp
xchg
stc
sbb
jmp
out
mov
jnp
jmp
sbb
daa
clc
test
xlat
jl
ins
not
sbb
shl
adc
inc
lahf
icebp
shl
push
inc
or
mov
mov
jecxz
pop
xchg
stos
scas
aas
fwait
or
mov
(bad)
mov
sbb
loope
cmp
clc
cmp
scas
mov
pop
int
int
ja
call
out
fdivr
push
push
(bad)
stos
adc
in
outs
imul
mov
ret
mov
mov
in
xchg
xlat
sub
pop
leave
out
fnstsw
xchg
pop
sbb
add
out
add
ins
scas
rcl
mov
clc
or
in
jne
rcr
xlat
xchg
sti
mov
push
sbb
xchg
fisubr
stos
adc
shl
aad
fwait
push
xchg
cmp
mov
icebp
sbb
lods
in
sbb
das
out
or
(bad)
(bad)
imul
scas
mov
mov
into
mov
addr16
(bad)
sbb
inc
icebp
or
mov
inc
mov
loop
cdq
adc
lods
ror
scas
repnz
(bad)
scas
inc
push
mov
imul
fsub
jecxz
push
repz
ret
clc
cmp
sbb
test
add
cwde
fld
xor
push
std
cli
cld
mov
stc
jno
xor
add
cmp
jbe
hlt
add
mov
cmp
jae
ficomp
fist
jne
pop
mov
or
test
je
fistp
stos
popa
dec
test
dec
add
idiv
sub
or
fsub
aas
sbb
mov
xchg
cmp
imul
add
(bad)
stc
push
loope
or
in
mov
xchg
ss
or
mov
stos
or
aaa
cmp
cmp
dec
(bad)
shl
mov
enter
and
outs
adc
pop
jmp
imul
ret
xchg
mov
jl
retf
out
add
div
jno
xchg
and
xor
arpl
push
cld
push
xchg
in
fld
test
and
shr
pusha
adc
inc
imul
pop
mov
(bad)
mov
retf
aaa
mov
leave
adc
cmp
les
xchg
in
lds
imul
inc
add
cmp
adc
lods
lock
(bad)
push
cmp
retf
bound
ins
mov
arpl
bound
enter
push
inc
adc
cmp
and
scas
rol
adc
dec
jb
fnsetpm(287
sub
sbb
and
cmp
push
mov
xlat
retf
push
xchg
xchg
push
and
push
xor
ja
rcr
js
mov
xor
sti
fwait
lds
dec
pop
mov
fidivr
js
rcr
stos
inc
not
enter
and
call
xor
sar
sub
pusha
inc
fnstenv
je
sahf
mov
hlt
adc
mov
rol
js
jp
or
or
mul
sahf
add
dec
lahf
dec
mul
or
mov
lods
stc
retf
aaa
and
add
test
sbb
push
ins
xor
cmp
inc
cwde
cwde
repnz
sti
or
ret
(bad)
ss
add
sbb
xchg
inc
(bad)
(bad)
fsub
daa
call
xlat
popa
push
outs
push
mov
sahf
xor
mov
xchg
adc
lea
mov
movntq
dec
mov
add
mov
push
in
pop
test
sub
sti
dec
(bad)
cmp
movs
(bad)
mov
rcl
test
(bad)
mov
jnp
jo
mov
adc
add
mov
mov
in
mov
add
out
enter
mov
jp
or
(bad)
nop
push
push
imul
fcomp
sahf
cmp
xchg
sar
mov
fst
daa
jnp
xor
sub
or
loopne
dec
push
inc
xchg
mov
mov
and
pop
aam
bound
xchg
test
sbb
dec
idiv
inc
outs
stos
jp
jp
mov
test
and
pop
cmc
(bad)
jno
lahf
out
push
inc
ja
call
inc
test
and
jmp
jb
pop
jmp
out
or
lods
test
aas
push
test
sub
adc
jmp
pop
mov
stos
mov
pop
sbb
cli
adc
das
mov
pop
mov
push
adc
push
dec
test
fistp
outs
jo
fld
mov
adc
sbb
pop
mov
jmp
fsub
adc
mov
mov
push
jnp
and
bnd
dec
jnp
jae
es
or
scas
nop
push
pop
sub
ror
jecxz
mov
ins
xchg
sub
pop
cmp
adc
enter
bound
or
sahf
mov
add
js
jl
arpl
push
loopne
push
fxch
(bad)
jl
push
inc
pop
push
in
dec
jbe
ffree
or
jp
mov
cmp
retf
xchg
add
add
xor
inc
cmps
push
sbb
fsub
cmp
ins
into
imul
cmp
pop
jb
mov
and
xchg
pop
push
rcr
ja
aas
cmc
fild
mov
es
test
adc
ficomp
imul
xchg
sub
jbe
test
ins
add
mov
fnsave
inc
and
inc
ffreep
push
xor
arpl
(bad)
sbb
aaa
out
das
jne
push
cmps
rol
pushf
adc
out
push
dec
add
nop
jge
sbb
pop
(bad)
dec
inc
sti
xchg
ds
js
push
xor
clc
dec
xchg
jle
mov
inc
jmp
xchg
add
pusha
imul
jge
or
adc
adc
fldcw
pop
(bad)
daa
add
cmps
sub
std
sub
(bad)
clc
sahf
and
cmc
or
xlat
add
cmps
movs
xchg
(bad)
jmp
loop
mov
sahf
mov
xchg
inc
adc
fnstenv
xchg
push
mov
test
xchg
and
lods
cmp
rol
(bad)
repnz
enter
into
aam
fld
(bad)
movs
fistp
ret
loopne
clc
shl
mov
popf
js
push
sti
ds
aaa
dec
dec
cmp
jns
cmp
adc
les
cmps
xor
fdiv
movs
imul
adc
push
xchg
js
mov
jnp
inc
scas
sbb
inc
retf
aas
mov
fcmovnbe
test
xor
js
fistp
(bad)
jmp
xchg
add
mov
cmps
mov
or
add
xchg
or
test
lods
cmps
sub
fs
out
xor
pop
imul
sub
jl
imul
or
imul
jo
mov
push
dec
aam
fst
pop
call
les
add
cmp
xor
or
lahf
or
jns
jg
jl
cmp
inc
or
lods
sub
sbb
adc
pop
mov
lock
sub
sub
xor
cmp
mov
lods
aad
fisubr
out
and
xchg
mov
mov
fwait
push
mov
jb
add
sbb
cmps
stos
clc
push
xchg
sti
in
xchg
mov
xchg
push
out
lock
les
ret
stc
arpl
cmps
pop
push
test
pusha
and
adc
sbb
mov
shl
call
push
test
les
push
xchg
push
and
mov
jmp
lods
loope
int
aaa
push
pop
push
push
sbb
push
fnsave
scas
pop
jmp
bound
imul
pushf
mov
fistp
cli
cmps
repnz
out
xor
cmp
mov
rcr
rol
add
data16
pop
xchg
push
lock
sar
cdq
dec
ja
or
fsubr
movs
mov
dec
test
push
addr16
push
and
dec
cld
fild
das
lock
arpl
fstp
push
push
scas
mov
dec
push
cmp
enter
rcl
xor
fucomp
stc
dec
or
mov
jmp
or
xchg
imul
cmp
mov
sub
frstor
lock
xchg
in
ret
repz
mov
push
mov
inc
jae
fwait
jl
xor
or
iret
(bad)
retf
daa
test
test
or
ja
mov
adc
pop
shl
mov
pop
mov
aam
jmp
mov
daa
fidiv
in
mov
pop
xor
cmps
mov
test
mov
xor
mov
(bad)
xor
lfs
(bad)
leave
add
clc
adc
cmp
inc
jb
(bad)
jnp
jmp
and
pop
lods
xchg
cmp
arpl
push
das
sub
mov
mov
or
jmp
daa
stos
cmp
popf
mov
movs
or
cmp
int3
in
mov
dec
push
inc
and
lods
sub
inc
cmp
out
aaa
cwde
mov
inc
jne
cmp
aad
adc
outs
sub
inc
imul
xchg
mov
jb
xchg
les
lahf
out
pop
inc
loop
adc
sbb
leave
pop
sub
(bad)
les
imul
fsub
xor
fs
add
jmp
pop
cmp
fsubr
cmc
xchg
repnz
push
sbb
addr16
cmps
(bad)
sub
fxch
pop
out
iret
sbb
mov
jb
fbstp
mov
xchg
mov
test
jae
pop
scas
aad
adc
adc
lods
cli
rol
cmps
rol
imul
mov
retf
add
xchg
jae
inc
out
in
xchg
mov
xor
enter
jb
push
fucomp
jmp
adc
aas
cmp
fsub
jmp
mov
mov
jbe
or
outs
inc
xor
stc
loope
shl
sub
call
push
dec
cli
jb
les
adc
fcom
inc
pop
fs
or
adc
sbb
mov
inc
mov
cld
jo
iret
ret
rcr
out
adc
and
jle
lock
adc
retf
xchg
and
mov
enter
jno
xor
inc
fcmovne
add
mov
dec
push
pop
xchg
mov
js
jae
push
pop
xlat
jecxz
sub
(bad)
shl
call
aas
sub
shl
xor
cmp
(bad)
(bad)
push
arpl
scas
push
xor
(bad)
and
add
and
mov
sub
or
xor
jmp
cmc
iret
jbe
sar
cmp
inc
mov
xlat
int3
pop
in
sub
jmp
mov
addr16
shr
mov
ss
dec
out
scas
cmp
js
xchg
inc
jmp
sti
fild
inc
pop
add
xor
or
lock
dec
lock
fld
movs
mov
in
in
mov
sbb
jbe
leave
retf
pop
mov
xor
dec
sbb
jbe
into
mov
jae
push
iret
adc
jb
sbb
mov
retf
pop
and
pop
leave
fdiv
xor
inc
(bad)
arpl
xchg
pop
pop
mov
popf
mov
and
ss
xchg
adc
jbe
out
cli
or
js
sub
lea
sahf
or
mov
or
or
movs
jp
enter
jns
push
inc
int
aad
jb
add
(bad)
out
loope
pop
xchg
gs
in
pop
ja
sbb
stc
cmps
inc
fs
dec
cmps
adc
inc
pop
test
dec
into
dec
scas
mov
(bad)
push
mov
ja
jmp
xor
mov
fucomp
pop
jo
ins
sbb
lods
shr
or
shl
dec
sub
mov
ins
or
mov
and
int
lods
mov
jl
ds
xchg
sti
add
outs
mov
and
outs
or
or
mov
btr
lock
sub
ins
aad
sbb
pop
pop
movs
mov
push
inc
pop
lods
inc
sbb
repnz
pop
mov
je
cdq
push
mov
addr16
into
mov
shl
ficom
add
and
push
call
sub
xor
cmp
mov
push
push
repz
jecxz
inc
push
and
dec
sub
call
push
daa
mov
call
hlt
mov
test
pop
cmps
push
test
xlat
inc
clc
cmp
fdivrp
leave
mov
movs
(bad)
ins
cmps
inc
jl
dec
xor
push
sub
and
xor
add
lds
add
mov
fldcw
test
rcl
out
dec
sub
jecxz
fnstsw
(bad)
imul
pop
adc
jg
mov
pushf
add
sub
mov
xchg
and
test
popf
sbb
xchg
lock
jb
pop
mov
mov
adc
push
fisttp
dec
cmp
(bad)
cwde
add
test
mov
mov
dec
cdq
xchg
xor
lods
jns
jp
push
push
or
cmp
mov
lock
mov
lock
dec
add
adc
xchg
lods
fmul
inc
fs
jmp
lea
add
xor
or
sub
push
mov
cmp
pop
sub
mov
mov
jne
daa
adc
int
xchg
push
push
adc
stos
outs
and
mov
imul
loop
dec
push
std
mov
popa
ja
cmp
hlt
xor
dec
mov
cli
dec
in
das
and
ins
mov
push
cli
je
(bad)
fistp
mov
jns
sbb
push
(bad)
add
test
jnp
sbb
mov
cmps
inc
pop
cmp
add
out
and
repnz
mov
and
add
aad
dec
push
xor
mov
pushf
cmp
ret
sbb
push
sub
aas
retf
mov
and
out
or
cdq
ror
xor
(bad)
adc
push
mov
ret
or
in
xchg
adc
fidiv
mov
push
mov
outs
lods
in
xchg
add
adc
sub
pop
shr
int3
jg
and
push
ins
enter
pop
cmp
call
loopne
push
jge
clc
jnp
jmp
push
movs
push
leave
popf
iret
lock
call
cs
cld
jecxz
cdq
jb
aaa
cld
dec
fisttp
jb
or
mov
push
and
mov
out
mov
adc
cmps
inc
jne
movs
out
sbb
jno
rol
sahf
xor
push
xor
js
sbb
add
cmp
inc
ret
dec
adc
pop
sbb
iret
sbb
xor
jmp
xor
jmp
mov
mov
je
jle
sbb
in
in
out
in
popf
in
outs
jl
add
aas
(bad)
(bad)
out
push
test
push
out
xchg
adc
cmc
test
inc
inc
cmp
xchg
mov
adc
aas
test
push
out
in
or
pop
add
mov
enter
push
into
fmul
dec
ret
adc
rcr
ret
loope
ins
and
inc
pop
xchg
imul
idiv
ja
xchg
jbe
fs
movs
sub
cmp
mov
inc
(bad)
push
cmp
shr
lods
(bad)
jge
fsubr
sti
mov
div
adc
xchg
xchg
dec
movs
xor
cmp
sub
(bad)
sub
push
push
fst
enter
xchg
sub
js
mov
jae
iret
icebp
pop
ds
aas
test
cld
int
ins
mov
(bad)
fsubr
sub
imul
(bad)
mov
add
inc
pop
retf
cmc
test
ins
or
hlt
aam
push
adc
jnp
shl
loope
xchg
daa
cmc
mov
popa
pop
lock
mov
jmp
aad
fcmovnu
add
jecxz
sbb
mov
lahf
ins
sub
out
inc
jle
adc
fsub
clc
cmps
movs
cli
inc
dec
(bad)
test
mov
dec
in
aaa
call
icebp
scas
(bad)
mov
cwde
loope
loopne
iret
jp
repnz
mov
pop
cmps
nop
dec
ror
add
mov
sar
jge
add
xchg
stos
jnp
sahf
xchg
(bad)
fcom
fwait
out
cmp
add
movs
sub
sbb
ja
jne
mov
int
mov
xor
and
xchg
sub
sub
sub
mov
mov
jno
xchg
je
xor
icebp
test
xchg
mov
(bad)
loope
sub
adc
pushf
pop
loopne
arpl
cld
mov
cmp
jb
pop
test
mov
lea
out
adc
daa
bound
inc
add
mov
cs
call
icebp
mov
test
inc
jns
sbb
mov
cdq
sahf
push
pop
idiv
ret
add
sub
jne
xchg
lds
imul
or
cmc
pop
cmp
dec
retf
repnz
out
sar
mov
(bad)
ss
xchg
jmp
push
inc
jmp
cmp
mov
mov
jecxz
sub
pop
rol
sub
ror
cmp
xor
mov
sbb
cwde
fs
cmp
cmc
bound
sub
and
lock
mov
mov
mov
das
call
add
mov
pop
jbe
mov
or
xchg
and
jns
retf
ss
mov
test
pushf
mov
sub
pusha
mov
adc
in
mov
push
aam
shr
mov
jle
jo
stos
mov
(bad)
imul
mov
les
pop
push
jge
and
sub
pop
mov
aaa
leave
ds
pand
cmp
xchg
mov
cmps
pop
and
fmul
pop
adc
mov
adc
test
fdivr
in
fiadd
inc
(bad)
aas
add
and
or
shl
leave
shl
jae
xchg
mov
rol
mov
enter
int3
pop
xchg
and
cwde
int
jne
and
sbb
mov
cld
aam
cmp
inc
scas
lahf
sbb
pop
xchg
mov
pop
push
vpsrad
mov
fs
clc
jmp
xchg
test
xor
les
sub
fnstsw
data16
sub
lock
pop
xor
mov
pop
int
adc
xchg
xchg
sbb
mov
jns
nop
and
sub
jge
in
test
mov
xchg
popf
or
hlt
xor
mov
adc
jno
out
fstp
dec
jmp
movq
or
push
mov
dec
add
push
dec
dec
ins
and
mov
mov
pop
fisub
xor
push
rcl
jge
push
pop
mov
add
rcr
cwde
xchg
loope
cmc
xchg
sbb
pop
das
mov
in
cli
or
or
adc
or
push
push
ret
mov
xchg
fistp
dec
jle
aas
adc
jne
out
cmps
jno
cli
ret
inc
das
cmps
loop
pop
or
cli
call
call
jecxz
jmp
sub
ja
dec
(bad)
adc
inc
mov
retf
jns
push
addr16
and
xor
lds
es
mov
jne
push
inc
adc
lds
mov
pop
ins
pop
and
xor
nop
ret
jl
ss
data16
jg
out
pop
push
mov
push
call
jb
daa
fsubp
sbb
pushf
and
imul
fmul
mov
mov
cmp
loop
mov
jns
mov
sti
not
mov
sub
dec
loop
jp
xor
xchg
mov
jbe
je
and
xchg
bound
inc
fstp
fsub
imul
movs
aad
adc
sbb
(bad)
icebp
mov
xor
push
sub
(bad)
out
movs
aaa
ss
jae
out
or
mov
add
jmp
adc
data16
cmp
jmp
jg
mov
xchg
lds
xchg
fs
or
imul
inc
adc
jns
jmp
and
cmp
mov
mov
jns
pop
inc
enter
adc
xchg
dec
inc
into
sub
jbe
(bad)
lods
mov
fld
dec
dec
dec
arpl
sbb
pop
mov
jmp
repnz
jp
mov
add
mov
xor
into
dec
xor
addr16
cmp
lock
call
in
mov
or
fstp
dec
(bad)
dec
outs
call
aam
or
int
test
in
leave
test
mov
sbb
push
aad
cdq
cmps
ins
dec
call
in
call
and
add
and
or
pop
cmc
xchg
fcom
retf
dec
and
dec
or
jno
xor
movs
xor
scas
cmc
cmp
adc
popa
jmp
push
xchg
jns
iret
or
shr
ins
mov
fs
mov
dec
out
cmp
scas
jno
das
sub
xchg
movs
fs
sub
out
adc
adc
mov
cwde
mov
mov
ror
add
mov
jnp
enter
cdq
inc
fiadd
mov
or
xor
(bad)
pop
in
test
or
cmps
pop
(bad)
repnz
mov
adc
(bad)
fcomi
scas
mov
mov
pushf
fcomip
xchg
in
fcmovb
dec
test
mov
sbb
inc
pop
daa
icebp
in
jbe
cld
push
sar
loop
outs
xchg
sub
and
(bad)
int
loop
mov
loope
push
sbb
fwait
rcr
ins
push
mov
das
inc
inc
ret
or
jl
pop
jmp
repnz
idiv
xchg
(bad)
add
mov
fcomp
inc
jmp
xor
icebp
mov
xor
xor
ins
fdivr
mov
push
aaa
str
ins
pop
add
mov
mov
outs
push
xor
test
ja
xchg
(bad)
push
mov
out
xchg
aad
int3
aad
dec
lods
loope
nop
pminsw
imul
or
arpl
sti
xor
fld
mov
push
inc
fstp
fmul
xchg
in
sub
in
xor
sub
mov
enter
jmp
dec
jnp
xchg
mov
push
nop
xlat
inc
(bad)
mov
repz
jnp
dec
je
add
sbb
bound
xor
mov
pop
dec
(bad)
test
mov
push
lea
out
mov
sti
arpl
sub
jno
and
add
repz
mov
adc
cdq
aas
sbb
add
add
loopne
push
and
(bad)
sub
(bad)
lea
(bad)
(bad)
jb
movs
nop
movs
stc
movs
aaa
adc
fisubr
mov
test
ins
shr
jbe
mov
xlat
ret
inc
(bad)
xor
dec
add
(bad)
enter
out
das
jg
pop
aaa
cli
xchg
dec
movs
adc
shr
add
stos
mov
sbb
or
ds
xor
fcmovnb
cmc
cld
cmp
inc
lock
xchg
iret
xchg
jp
or
(bad)
aaa
push
inc
pop
or
mov
sahf
pop
cs
jg
xor
std
jnp
movs
addr16
inc
loopne
aam
push
outs
je
cmps
xlat
adc
inc
or
stos
mov
pop
sbb
cs
jle
das
movs
les
loope
sbb
mov
sub
add
push
xchg
jle
bound
adc
adc
sbb
mov
lods
nop
jo
xlat
aas
fbld
psrlq
add
cdq
dec
sub
mov
xchg
scas
call
arpl
sbb
mov
cmps
push
dec
or
inc
int3
mov
adc
mov
inc
in
adc
mov
mov
jb
je
and
mov
iret
(bad)
ret
cmp
xor
lahf
pushf
shl
inc
imul
push
xchg
mov
imul
push
test
mov
outs
xchg
xlat
in
ds
imul
pop
jg
add
mov
loopne
jecxz
repz
pop
inc
pop
ins
sub
cmp
in
(bad)
pop
fmul
sti
and
test
jge
(bad)
jne
cmp
imul
xchg
xor
in
adc
inc
fiadd
in
fmul
inc
add
sbb
dec
fmul
jle
cli
das
or
inc
fidivr
in
adc
adc
mov
mov
gs
jl
stc
lea
sbb
ja
pop
inc
stc
adc
push
mov
std
and
dec
mov
push
xchg
cmps
mov
adc
inc
cwde
pop
xchg
cld
les
retf
sub
in
and
(bad)
fbld
cmp
ss
repnz
loop
stos
sar
cmp
xlat
bound
adc
push
sti
pop
bswap
xlat
fsubr
fist
add
popa
les
clc
jno
xor
dec
xor
add
dec
pop
dec
vmulss
addr16
mov
adc
in
or
mov
push
frstor
and
std
in
mov
sbb
xchg
fwait
ror
into
adc
mov
inc
lahf
es
cmps
mov
mov
mov
repnz
add
sbb
in
ss
add
stc
push
(bad)
and
or
ins
push
pop
mov
jle
xor
cs
das
icebp
sbb
call
ss
rcr
fcomip
in
addr16
or
rcl
fsub
pop
aas
inc
cmps
and
sub
mov
daa
push
in
adc
iret
sub
sbb
(bad)
arpl
hlt
movs
(bad)
cld
dec
xchg
inc
xchg
xchg
mov
ja
mov
in
sub
xlat
bound
dec
(bad)
test
inc
sub
popf
jae
imul
dec
test
xor
ins
std
cmc
movs
pop
push
adc
punpckhwd
sbb
sub
fldl2e
retf
inc
jmp
mov
bnd
add
dec
inc
mov
xlat
cwde
dec
pop
icebp
adc
pop
mov
ja
lock
out
cmps
pop
neg
mov
lds
out
adc
pop
sbb
pop
das
dec
push
ret
fmul
push
dec
mul
dec
cmp
les
xor
enter
push
in
test
icebp
adc
ror
jmp
es
loope
xchg
pop
sub
sahf
or
mov
je
loopne
xchg
std
sbb
cmp
call
test
inc
jp
adc
jmp
mov
daa
(bad)
loop
sub
ins
pop
and
mov
jno
mov
xor
mov
push
xchg
fcmovnbe
add
sbb
int
fwait
in
jg
push
inc
jge
sbb
pop
inc
xchg
mov
adc
(bad)
jmp
pop
jmp
inc
shl
add
not
cmc
sbb
lods
cli
mov
js
add
iret
pop
jne
push
inc
mov
cmps
sbb
push
ins
lock
sbb
gs
in
dec
mov
push
loop
add
inc
xchg
and
in
or
imul
and
add
cs
adc
jp
xchg
fwait
cmp
sbb
sub
xchg
imul
adc
dec
(bad)
mov
daa
adc
mov
scas
lds
dec
mov
sbb
dec
rcl
div
xchg
or
out
aas
scas
mov
cwde
cmp
sub
mov
push
push
push
pushf
(bad)
mov
in
sbb
ds
sub
retf
fimul
push
movntq
mov
fs
dec
sahf
xchg
mov
inc
jae
rcl
inc
sub
xor
sbb
movs
cmp
ins
and
dec
inc
xchg
dec
sub
or
loope
sbb
fild
and
mov
push
push
cmp
daa
sub
sbb
cmc
popf
cmps
stos
inc
int3
jp
ds
xor
shl
add
in
mov
cdq
popa
fadd
or
out
and
(bad)
outs
shr
imul
adc
hlt
cmp
mov
or
or
pop
pushf
xor
inc
cmp
popa
int
jno
(bad)
fdivr
jnp
(bad)
jmp
jnp
sub
leave
mov
inc
dec
loopne
sbb
out
cdq
or
outs
fs
sub
test
xchg
cmps
inc
or
add
out
xor
std
sbb
jnp
iret
data16
movs
mov
rcr
loopne
stos
ds
and
(bad)
pop
adc
push
addr16
data16
jb
ficom
and
or
mov
add
lea
(bad)
dec
ficom
out
cmps
ds
cdq
in
movs
je
adc
jbe
add
(bad)
out
int3
(bad)
jmp
test
cmps
inc
shl
outs
dec
test
out
or
into
dec
(bad)
out
sti
bndldx
add
jecxz
std
or
xor
mov
adc
les
cli
push
in
(bad)
(bad)
lock
dec
stc
jb
or
mov
jo
pop
mul
xchg
adc
jo
neg
das
mov
xor
jecxz
faddp
push
or
add
(bad)
inc
mov
jp
scas
jmp
test
leave
shl
lods
pop
cmps
test
int3
es
pop
cmp
mov
adc
sub
sub
jmp
push
lahf
and
scas
inc
and
in
and
jns
fs
jo
arpl
inc
dec
fisub
inc
sti
xchg
sub
outs
xlat
pop
iret
neg
js
jg
mov
or
mov
(bad)
cmps
movs
imul
mov
dec
mov
int
icebp
push
xor
dec
pushf
sar
add
arpl
add
cmp
jle
aad
dec
out
mov
sbb
cmp
add
xor
pushf
pop
dec
outs
add
ret
inc
ins
xlat
dec
dec
dec
shr
pop
xchg
xchg
dec
clc
stos
xor
sbb
repz
int3
popa
adc
inc
imul
fisttp
loop
push
scas
lock
push
push
mov
inc
in
enter
shl
push
push
adc
lea
adc
test
push
inc
(bad)
xadd
mov
mov
aam
add
not
stos
push
cwde
je
mov
mov
cs
adc
cmps
leave
cmp
lods
and
call
push
jb
fst
test
(bad)
shl
shl
dec
aaa
xchg
sub
dec
mov
ja
dec
xchg
sub
arpl
jmp
cmp
or
movs
mov
aas
jne
inc
mov
imul
push
enter
out
pop
gs
jp
ins
sub
cwde
jg
add
js
jl
jae
nop
pop
sbb
xor
jae
inc
popa
mov
fwait
push
or
js
push
pop
and
pusha
mov
pushf
out
jecxz
dec
mov
lock
jae
imul
inc
jle
cmps
pop
mov
les
dec
sti
mov
pop
dec
loop
movs
inc
or
sub
mov
mov
cwde
icebp
adc
xchg
sub
mov
push
fst
(bad)
retf
ins
std
lock
(bad)
jmp
not
adc
jbe
sub
mov
iret
and
mov
int
sub
mov
mov
jl
xor
push
repnz
and
dec
push
aam
xor
fist
into
pop
mov
push
sub
loope
jp
call
cmps
imul
and
push
dec
cmp
push
das
sub
repnz
aad
or
mov
and
repz
popa
sahf
push
fs
movs
jmp
test
and
jmp
repnz
clc
dec
js
dec
push
adc
shl
retf
jae
loope
stc
or
outs
mov
jne
sbb
xor
test
cmp
aad
outs
push
enter
(bad)
in
and
movs
adc
or
je
clc
cmp
sub
mov
movs
mov
leave
inc
jb
loopne
scas
inc
popa
mov
fimul
xchg
cmp
xor
lahf
xor
popa
mov
inc
add
in
sub
js
mov
cmp
push
pop
neg
into
jns
hlt
mov
out
adc
pop
mov
mov
xor
stos
mov
sti
cmp
mov
dec
xchg
out
and
mov
test
pop
(bad)
xchg
push
std
or
enter
enter
repnz
or
cmp
and
in
sub
pop
int
push
sbb
rol
loop
inc
lods
sbb
pop
je
lock
loop
scas
push
adc
pop
icebp
outs
sub
dec
ss
dec
jge
pop
shl
pop
sbb
aaa
add
push
push
rcl
cmp
cmps
push
add
or
lea
sbb
arpl
and
ret
sub
inc
adc
cmp
ret
add
movs
sti
add
aam
push
xor
int3
mov
xchg
jne
push
mov
mov
into
fnsave
pop
pushf
cmps
mov
adc
inc
inc
fstp
dec
and
xor
xchg
ds
cdq
add
xchg
sbb
call
cmp
or
add
nop
sub
mov
popf
pop
adc
out
repz
dec
mov
cmp
aaa
pop
pop
(bad)
loopne
pushf
hlt
or
mov
xor
and
jb
mov
dec
fnstcw
jno
mov
jnp
jmp
mov
and
cmp
xchg
or
aaa
mov
push
jge
bound
pop
mov
inc
xchg
addr16
ins
sbb
inc
shr
jle
arpl
jae
or
outs
xchg
inc
push
mov
cmps
pop
inc
push
(bad)
jbe
call
push
fisub
inc
stos
pop
inc
retf
pusha
cmp
or
cmp
jae
out
je
jne
cs
daa
add
jl
pop
inc
dec
test
cmp
push
std
retf
cmc
xchg
imul
mov
jmp
(bad)
popa
xor
add
lods
mov
cmp
ret
fstp
jno
cmp
shl
call
cmp
cld
in
in
and
rol
ss
shl
jmp
rcr
stc
movs
xor
jnp
jae
cmp
cmps
push
jecxz
(bad)
icebp
out
dec
daa
in
aas
cwde
std
add
mov
adc
shr
adc
mov
jmp
dec
sub
(bad)
call
adc
das
in
test
cmp
stc
inc
pop
mov
test
add
mov
mov
gs
sub
movs
js
out
fisttp
mov
sbb
aas
inc
inc
push
jno
cwde
lods
mov
popf
jmp
int
and
in
or
xchg
add
push
mov
in
ss
xor
sub
call
(bad)
inc
inc
dec
add
jp
mov
fadd
stc
push
push
lock
xor
xchg
jo
sbb
dec
jl
dec
dec
mov
inc
fcomip
add
mov
dec
test
push
test
gs
and
jg
pop
jnp
pop
mov
je
popf
into
push
and
cli
rol
outs
fadd
test
loope
stc
mov
stos
popf
xor
adc
fild
mov
lods
scas
nop
jmp
ret
shl
jne
push
sahf
sar
pushf
jge
jo
mov
sub
sar
ja
inc
adc
arpl
inc
mov
ret
nop
and
inc
cwde
imul
inc
and
test
movs
ja
mov
retf
jg
pusha
push
mov
sti
mov
adc
(bad)
(bad)
sub
xchg
outs
cmps
inc
pop
xchg
mov
pop
ins
dec
inc
jle
dec
clc
imul
cmp
int
push
inc
push
out
out
adc
dec
(bad)
aam
pushf
icebp
pop
cmp
out
nop
pop
mov
push
into
push
sub
(bad)
mov
pop
popf
push
lds
mov
(bad)
jp
adc
into
add
mov
sub
test
lods
rol
mov
sbb
sbb
xchg
mov
inc
cli
pop
(bad)
push
cmp
dec
jno
mov
je
sbb
data16
or
xchg
or
xchg
adc
and
aad
outs
enter
cmp
xchg
cdq
inc
jle
retf
ins
fnstcw
xchg
cmp
push
sub
or
test
pop
ror
movs
sub
pop
dec
dec
fsubr
jecxz
pushf
les
mov
sbb
mov
repz
dec
hlt
test
xor
adc
dec
push
mov
test
push
shl
inc
push
div
push
adc
cmp
fdivr
pop
pop
and
ret
bound
out
mov
es
push
and
sbb
lock
push
or
pop
pusha
xchg
add
movs
idiv
mul
(bad)
in
inc
nop
mov
xor
sub
pop
fsubp
fisub
xchg
jmp
aam
mov
pop
(bad)
push
mov
(bad)
jg
test
jbe
push
mov
xchg
je
dec
mov
jnp
add
jge
rcr
sar
xor
icebp
mov
das
sub
adc
adc
push
sahf
mov
sub
shl
call
sbb
(bad)
jle
aaa
aam
and
push
mov
ret
daa
push
sub
repnz
mov
popf
test
xchg
mov
test
adc
xchg
out
cmp
out
ds
and
add
mov
adc
hlt
outs
mov
iret
jg
popf
test
pop
cmc
js
add
call
mov
push
ins
rcr
mov
jne
stos
nop
imul
gs
sub
adc
aas
fadd
and
call
mov
daa
cmps
int3
out
sbb
movs
inc
add
cmp
inc
cs
xchg
xor
or
dec
sbb
icebp
dec
push
jo
push
and
sbb
push
and
pop
xchg
fdiv
rep
(bad)
mov
outs
and
imul
xchg
or
jnp
mov
xchg
lods
ds
out
adc
nop
mov
mov
or
je
mov
pop
fisubr
inc
push
jne
xor
in
rcr
inc
mov
jl
retf
push
add
cmp
das
jmp
add
std
fs
mov
call
outs
out
push
jno
and
cli
push
inc
les
aam
adc
pop
lock
(bad)
ja
pop
sahf
mov
pushf
mov
jbe
jg
lods
sbb
dec
pop
xchg
xchg
imul
pusha
cmp
and
inc
out
mov
out
pop
xor
rcr
lahf
jmp
xchg
mov
into
inc
jl
jbe
mov
repnz
loope
shr
into
dec
push
loopne
push
mov
mov
pop
jmp
cmp
inc
or
stc
pop
out
scas
fnstcw
popf
xor
pop
adc
fldcw
sbb
aas
lods
test
fld
or
or
dec
sub
mov
enter
fdiv
sbb
popa
add
adc
shr
scas
test
push
xchg
pop
lahf
jecxz
movs
push
icebp
dec
lods
icebp
jp
mov
shl
inc
add
mov
popa
pop
cmp
mov
call
fwait
push
and
sub
add
adc
sub
xchg
cmp
(bad)
mov
loope
out
dec
push
sub
cmc
or
popa
imul
outs
test
imul
outs
inc
retf
pusha
mov
xor
sbb
out
cmp
lods
test
add
fisttp
call
cwde
pop
out
jecxz
and
push
dec
fs
sub
xadd
aas
dec
dec
rol
mov
iret
pop
(bad)
neg
mov
push
adc
dec
shl
arpl
sti
cmp
mov
sbb
cmp
rcl
mov
fimul
jae
sbb
mov
shl
xchg
xchg
jbe
mov
leave
mov
mov
inc
cli
jmp
leave
add
jmp
stos
or
cmp
pop
push
call
cmp
mov
sub
mov
add
push
fild
stos
inc
add
jp
and
mov
sbb
arpl
in
pushf
retf
add
push
sbb
xchg
jne
xlat
in
sbb
cmp
jbe
jle
test
fs
sbb
pop
xor
mov
add
xor
push
mov
cmp
sbb
cwde
mov
adc
les
inc
jl
fxtract
jno
xchg
ins
aas
mov
jp
or
dec
addr16
push
mov
imul
shr
mov
cmp
mov
jnp
les
call
mov
lods
push
xchg
sbb
mov
xor
adc
dec
call
add
dec
jp
mov
arpl
loope
cmp
(bad)
mov
mov
push
push
aaa
mov
sti
mov
mov
leave
out
sar
je
pop
in
xor
dec
push
sub
xchg
clc
cli
sub
cdq
adc
loopne
retf
repz
and
repz
jmp
jmp
into
cdq
into
cs
jbe
adc
add
loop
mov
pushf
pushf
xchg
out
dec
clc
mov
xchg
je
fst
sbb
out
cwde
ins
jg
movs
adc
pop
push
push
scas
adc
mov
jp
push
std
cmp
test
pushf
and
sbb
jns
xor
cdq
ds
mov
sti
xchg
dec
pop
xchg
cmp
mov
dec
add
cmp
mov
jb
inc
xor
pop
out
call
push
cmp
imul
rol
pop
pushf
int
cmc
pop
imul
cmps
ds
inc
adc
xchg
in
and
mov
xchg
mov
push
mov
ret
mov
pop
int
loop
xor
fs
inc
pop
dec
sbb
jmp
mov
call
iret
mov
jae
and
dec
cmps
fiadd
or
in
jno
inc
in
fiadd
and
movs
out
icebp
sar
cdq
fld
call
adc
add
repnz
repz
test
fadd
jle
pusha
xor
lea
daa
cmp
sub
(bad)
cvtdq2ps
js
sbb
mov
test
cmp
(bad)
addr16
mov
fst
and
lahf
scas
jl
or
data16
lahf
inc
mov
add
je
xor
data16
mov
mov
popa
push
xor
sti
leave
popa
daa
lahf
add
xor
xor
or
push
xchg
mov
or
inc
and
xor
cmp
mov
inc
fisubr
iret
jg
aam
jno
imul
iret
hlt
aam
push
dec
hlt
cs
pop
sbb
das
dec
ds
int3
mov
repnz
and
sub
imul
inc
stc
or
es
js
into
inc
xchg
and
das
mov
push
mov
cmc
test
iret
sub
jecxz
popf
sbb
mov
aad
popf
stc
push
mov
pop
repnz
loope
call
xlat
stos
xor
sbb
or
sahf
addr16
call
(bad)
mov
xchg
jp
and
(bad)
das
push
jns
out
inc
jmp
cli
fwait
add
int3
dec
sub
out
inc
dec
mov
fstp
mov
jae
mov
aam
test
arpl
mov
pop
ss
push
in
gs
retf
pop
mov
push
sub
call
push
adc
nop
mov
clc
push
mov
pop
jb
iret
je
adc
lahf
ror
fisttp
ja
jecxz
movs
lahf
or
adc
pop
out
mov
xor
stos
pusha
mov
jl
jbe
fisttp
inc
lea
test
aam
sbb
xchg
ja
ror
inc
neg
lock
out
cli
retf
cwde
or
dec
mov
iret
scas
cmp
mov
add
xchg
fld
scas
fisubr
call
retf
aas
dec
cli
inc
or
pop
popa
and
mov
mov
mov
mov
loope
sbb
push
xor
loopne
and
or
adc
scas
retf
adc
fisttp
int3
xor
repnz
sub
cmp
fcom
daa
mov
jno
lods
pop
pop
jp
mov
adc
dec
jmp
xchg
rol
cwde
adc
mov
call
dec
mov
test
add
xchg
aam
int3
pop
adc
aad
stos
sub
outs
int
add
adc
aas
test
pusha
jb
inc
mov
mov
leave
inc
xchg
lods
adc
repnz
imul
add
sahf
dec
pop
fild
cmp
pushf
jp
push
and
mov
inc
hlt
fcomp
cmc
xchg
hlt
inc
jno
push
cli
jp
jge
inc
push
and
push
cwde
xor
sub
push
sub
inc
cmp
retf
test
and
or
xchg
nop
mov
sub
into
mov
inc
pop
sbb
out
sti
int3
xchg
pop
and
cwde
mov
sahf
ss
test
lods
sbb
cmp
cmp
inc
jae
hlt
mov
cwde
cmp
cld
inc
inc
add
out
mov
xchg
mov
sub
mov
test
fcompp
pusha
arpl
test
mov
aad
pop
cli
dec
push
push
out
nop
fs
cmp
cdq
lods
mov
fs
adc
push
jns
outs
cli
popa
mov
pop
les
inc
lods
sbb
xlat
rcl
cmps
es
or
cmp
popf
mov
add
cmc
jbe
ins
pop
add
ins
imul
sub
push
dec
jecxz
test
mov
outs
cli
(bad)
mov
jmp
and
jp
add
mov
dec
gs
gs
jne
dec
push
xchg
dec
scas
mov
add
cdq
xchg
inc
inc
into
mov
sub
pop
xor
jb
mov
repnz
mov
push
movs
dec
inc
loope
and
inc
in
inc
mov
cmc
dec
test
jmp
adc
dec
pop
mov
push
sbb
mov
jl
int
retf
ins
mov
jmp
popa
fmul
(bad)
in
inc
popa
rcr
jg
add
in
xchg
int3
test
stos
sbb
cwde
lock
int3
ret
fbld
test
xchg
push
inc
pop
push
cmp
repnz
retf
cld
pushw
add
ror
nop
mov
and
lock
in
pop
test
and
cmp
xchg
add
mov
and
cld
mov
cs
jmp
rcl
xor
dec
and
jmp
and
sub
cwde
add
jecxz
and
fwait
xor
mov
imul
jae
es
cmp
mov
or
add
mul
sbb
or
push
enter
imul
mov
cmp
mov
(bad)
js
test
mov
jp
in
jne
outs
scas
mov
ret
gs
movs
icebp
adc
leave
hlt
out
xor
fsub
arpl
xor
cmps
pusha
sbb
add
shl
fld
xor
cli
fdivp
jae
jno
mov
mov
cmp
test
xlat
imul
cmp
in
mov
dec
cmps
mov
out
lds
jp
cmp
mov
adc
inc
pop
jmp
das
in
or
xchg
aas
mov
sbb
scas
inc
adc
jae
mov
adc
ds
in
mov
lods
loope
stos
jns
ins
stos
mov
ror
test
mov
and
jecxz
dec
test
mov
int
mov
stos
sti
shr
xchg
mov
or
xor
mov
sbb
arpl
mov
adc
xor
or
cmp
or
xchg
mov
xlat
lock
push
stc
retf
xchg
ret
fdiv
test
inc
pop
shl
mov
fisub
jecxz
sub
push
imul
sbb
bound
inc
out
or
sbb
push
mov
mov
jge
retf
stc
repz
lahf
(bad)
mov
push
mov
xchg
push
xchg
out
or
and
add
setns
fcom
scas
push
call
push
hlt
adc
aad
scas
jl
out
mov
mov
inc
fstp
cmc
idiv
and
sub
rol
mov
test
jmp
ror
ret
dec
sub
cmp
xor
bound
shl
mov
dec
add
xor
and
(bad)
mov
test
lahf
adc
xchg
pop
cmps
dec
aaa
add
jl
jae
ret
enter
pop
jg
enter
add
adc
mov
call
imul
gs
popf
mov
shr
pop
mov
hlt
jg
shl
push
std
sbb
fcom
xchg
cld
cmps
aad
add
loope
iret
js
sub
jmp
adc
dec
sub
pop
js
mov
mov
mov
cmp
or
idiv
and
sbb
xlat
mov
or
test
out
cmps
inc
sbb
xchg
mov
loopne
aam
add
scas
push
mov
inc
push
mov
dec
mov
je
fdiv
ja
pop
jbe
pop
daa
sub
(bad)
scas
cmp
jmp
pop
in
repz
das
dec
xchg
push
adc
aam
std
pushf
cld
sbb
fild
sub
ss
test
hlt
test
pop
and
ja
and
lods
xor
scas
lock
fstp
call
js
test
mov
or
and
sbb
rcr
and
fnstenv
aam
ins
cmp
shl
cwde
inc
and
out
or
repnz
jmp
xchg
xchg
sub
or
loope
(bad)
sti
pop
jb
add
int
lods
adc
fsub
push
int
shr
push
pop
rol
or
mov
jnp
inc
jb
xchg
sub
push
xor
imul
inc
js
out
push
ret
add
int3
add
ins
test
xlat
mov
daa
inc
pop
mov
xor
inc
popf
and
push
int
leave
fidivr
bound
fisttp
fild
adc
pop
je
(bad)
les
(bad)
sub
cld
cmp
add
cld
popf
xor
or
sub
sub
idiv
loope
mov
shl
push
or
sti
or
push
push
sbb
mov
pop
xchg
stc
scas
cli
call
pop
mov
imul
or
outs
and
xchg
hlt
je
sub
cmp
inc
mov
pop
imul
fwait
scas
jmp
or
cmp
and
neg
enter
or
inc
mov
sbb
or
xlat
int3
in
pop
aam
scas
adc
iret
dec
dec
fucom
mov
fistp
out
dec
add
or
lahf
or
mov
sbb
out
sub
jp
mov
mov
xchg
sbb
push
loop
or
xchg
sti
pushf
rcl
add
clc
popf
fdiv
call
jb
inc
xchg
add
pop
push
sahf
mov
dec
adc
mov
sbb
add
sub
sbb
jns
mov
jecxz
(bad)
pop
ret
div
cmp
jns
pop
fdivr
pusha
xchg
pop
loope
pop
add
inc
std
jmp
cdq
dec
icebp
jno
inc
into
sbb
or
xchg
scas
push
ja
das
icebp
lahf
or
cli
movs
push
stos
jg
mov
pop
or
dec
jbe
push
aad
fmul
out
ins
jne
clc
rcl
ss
dec
jl
dec
in
(bad)
sbb
enter
clc
add
ficom
rol
cwde
retf
int
adc
or
jns
adc
mov
inc
jne
jae
bound
jns
cmp
and
jg
mov
push
out
int
add
pushf
(bad)
or
repz
and
jb
xor
sbb
frstor
mov
dec
mov
inc
jno
mov
cmp
cmp
push
mov
repnz
lea
aaa
jg
outs
neg
mov
stos
mov
or
jmp
or
pop
stos
data16
add
das
(bad)
enter
div
inc
ret
dec
mov
and
mov
clc
stc
pop
jno
retf
add
pop
cmp
or
in
clc
push
rcl
add
dec
pop
or
sahf
in
(bad)
jmp
lds
ds
add
jbe
add
cmp
mov
div
pop
popa
ja
xchg
or
lods
xchg
push
mov
in
sbb
sbb
lods
out
sbb
ds
ins
bound
loop
cmp
jmp
or
and
call
pop
jo
das
cdq
lods
xchg
or
xlat
hlt
jmp
push
mov
icebp
jno
retf
cmp
in
or
inc
cwde
xchg
mov
call
add
lahf
and
mov
jle
pop
div
sahf
sbb
lahf
and
mov
dec
adc
and
and
pop
inc
mov
outs
or
dec
jns
add
js
inc
add
(bad)
clc
addr16
into
lahf
imul
dec
loopne
sbb
clc
sub
lock
iret
je
in
mov
dec
cmp
jbe
push
cmc
retf
mov
imul
mov
inc
vpshab
mov
rol
push
sub
inc
ror
inc
pxor
mov
cld
movs
and
jb
mov
and
daa
and
dec
std
push
inc
test
pop
dec
mov
xlat
jnp
rcr
enter
xchg
xchg
cmp
test
call
sub
mov
cmp
repz
out
div
lds
xchg
and
icebp
sbb
retf
fidiv
(bad)
outs
mov
push
test
test
xchg
jo
push
pop
jo
fwait
movs
pop
enter
test
aaa
(bad)
pop
out
or
dec
loope
cmp
push
shr
or
call
jae
push
pop
add
sbb
pop
popf
ins
cdq
aaa
sub
push
orps
sub
xchg
das
stc
imul
cmovnp
int
push
cmps
jmp
sbb
sub
xchg
fxch
loope
cld
fisubr
inc
lds
bound
pop
inc
push
std
pop
es
sbb
mov
push
std
dec
lods
int3
ret
lods
mov
push
sbb
xchg
pusha
mov
inc
cmp
pop
std
push
outs
fist
add
popa
fwait
mov
dec
mov
dec
stc
pop
in
xchg
sub
adc
xchg
inc
cmc
add
cdq
rcl
out
xor
sbb
mov
fistp
pop
(bad)
xor
fisttp
sbb
mov
mov
and
call
cs
jecxz
out
popa
into
popf
stc
lea
cdq
push
push
(bad)
fcom
jecxz
ins
jno
inc
or
mov
scas
jno
mov
out
(bad)
or
cdq
sbb
jmp
xor
fwait
or
inc
and
push
inc
jecxz
sbb
jl
sbb
pop
fstp
sub
add
lds
mov
mov
adc
mov
and
cld
mov
jo
jge
sbb
jne
cmp
addr16
xchg
test
dec
dec
push
cdq
mov
mov
jecxz
push
fisubr
push
or
movs
cmp
sbb
js
push
(bad)
in
je
pusha
icebp
xchg
jp
ret
int
mov
dec
pop
push
mov
xor
int
mov
jno
push
cs
mov
leave
cmp
cmps
jp
xchg
mov
or
mov
not
mov
ds
push
mov
dec
xchg
pop
cmp
aad
mov
jge
mov
or
nop
push
in
or
push
inc
mov
sbb
imul
jle
ins
dec
jbe
(bad)
cmps
in
jge
mov
lds
dec
push
add
test
out
xchg
mov
(bad)
fldenv
ds
lahf
or
mov
mov
repnz
jg
sbb
out
mov
xchg
pop
int3
(bad)
or
popa
mov
cs
(bad)
fwait
dec
loop
or
mov
pop
xor
jnp
mov
jae
aam
adc
fsub
fild
mov
loop
add
cwde
mov
push
aad
hlt
adc
push
lock
ja
mov
pop
lock
pop
mov
cmps
or
shl
pushf
add
mov
cmps
xor
mov
shr
loope
cli
add
add
pop
rcr
int3
iret
cmp
mov
jno
mov
sub
mov
adc
into
jno
xchg
lahf
sahf
cmp
inc
push
jl
ss
push
aaa
fsub
xlat
push
xchg
das
and
mov
cmp
std
push
sub
ds
idiv
jb
fwait
scas
adc
push
xchg
xor
push
sub
(bad)
fisttp
rcr
inc
mov
xor
(bad)
cdq
das
out
dec
push
das
loope
mov
fdivr
mov
sub
movs
sub
fdivr
mov
fidiv
leave
test
imul
or
dec
and
xchg
into
bound
mov
jbe
stos
not
add
xchg
sar
push
or
and
sbb
adc
fcmovnu
repz
inc
jnp
inc
shl
add
(bad)
imul
and
pop
pop
dec
mov
cmp
(bad)
dec
int3
dec
int3
retf
mov
inc
sbb
int3
fcomp
xchg
fiadd
add
add
pusha
xor
neg
popf
xchg
pop
cmp
mov
rcl
mov
and
or
sub
cmp
jle
adc
(bad)
in
xchg
mov
push
dec
out
arpl
popf
(bad)
jge
icebp
cmp
push
lock
pop
xchg
add
sahf
test
in
mov
cmp
loope
lea
into
je
scas
push
(bad)
push
daa
pop
sub
(bad)
hlt
add
cmp
mov
imul
fidivr
mov
jmp
pop
pop
add
push
cmp
xchg
fwait
jge
dec
movs
ins
(bad)
out
mov
mov
jle
jae
adc
jmp
add
mov
fcomp
ins
cwde
int3
mov
pop
jne
xchg
aam
jae
je
stos
cdq
lahf
ret
rol
jmp
shl
(bad)
adc
mul
xor
pop
imul
mov
xchg
pop
out
stos
pop
paddq
or
inc
add
xchg
xor
xor
fnstcw
xor
gs
js
jno
dec
popa
sbb
push
add
and
or
dec
int
outs
sti
mov
(bad)
int
mov
cmps
(bad)
mov
aas
dec
or
sub
inc
jmp
xchg
jge
jae
inc
les
(bad)
mov
inc
jae
jne
cmc
repz
popf
jp
pop
sub
jnp
push
bound
lea
or
mov
sbb
and
mov
iret
addr16
les
icebp
(bad)
out
jp
fcmovb
mov
test
nop
inc
test
mov
(bad)
hlt
inc
fcmovb
in
add
cs
jecxz
hlt
fcomp
loope
mov
xor
ins
fcomi
sti
adc
fld
out
or
fnstenv
and
(bad)
xchg
and
xchg
scas
cmp
cmc
sbb
sub
lahf
and
call
cmp
fcomp
(bad)
ins
stos
stos
(bad)
sbb
fstp
adc
pusha
mov
inc
mov
ins
clc
push
lds
shl
or
shr
mov
sbb
test
in
dec
jp
sbb
aam
aad
repz
iret
mov
test
xchg
repnz
test
push
dec
dec
xor
fmul
inc
addr16
cli
jb
imul
cmp
add
stos
cli
fstp
lods
jbe
sub
mov
mov
fisub
mov
sub
pavgb
adc
push
cmp
and
aam
pusha
xchg
out
retf
jmp
mov
mov
or
adc
xor
int
cld
pop
in
mov
pop
adc
or
add
sbb
mov
test
fwait
xor
mov
and
nop
fst
retf
aas
sti
loopne
lahf
into
adc
rcl
shl
mov
push
cmp
pushf
call
(bad)
and
enter
fiadd
enter
cld
xor
jmp
add
fadd
jnp
outs
xor
push
mov
fnsave
push
dec
adc
or
mov
retf
mov
movs
(bad)
mov
mov
enter
xor
mov
add
stos
loopne
jb
and
in
pop
sti
mov
jmp
ficomp
frstor
in
jno
retf
in
inc
dec
sub
pop
arpl
push
out
sub
xlat
cmp
leave
aas
pop
cs
lea
mov
pop
out
mov
push
jnp
add
jmp
jmp
xchg
and
mov
and
inc
mov
es
ins
(bad)
data16
mov
jne
sub
xchg
mov
mov
mov
add
stos
xor
add
xchg
loop
cld
les
sahf
and
sub
sbb
xchg
int
xor
adc
ja
mov
pop
xchg
fwait
movs
push
xchg
pop
pop
adc
test
add
cmps
stos
addr16
or
xor
xchg
std
imul
cmp
adc
sbb
and
mov
or
xchg
xchg
push
adc
xchg
hlt
inc
and
sar
push
mov
mov
xor
mov
mov
or
add
cmp
xchg
dec
push
inc
rcr
int
dec
jae
sbb
pop
inc
sub
outs
ds
cmp
inc
push
and
push
pop
les
rcl
mov
aas
dec
lea
cmp
sub
movs
or
mov
jo
lods
cmps
or
push
pusha
movs
pop
mov
inc
in
push
or
add
stos
jge
int
push
mov
mov
mov
loop
div
jno
jecxz
je
je
aas
cmp
movs
push
sub
(bad)
fmul
sub
lea
push
jno
in
cmps
ss
xchg
mov
and
shl
mov
add
imul
push
inc
and
sub
or
fnsave
inc
pop
je
icebp
or
outs
inc
daa
add
fadd
mov
mov
jo
cmps
inc
mov
mov
jge
cmp
mov
mov
pop
fwait
scas
pop
mov
or
xchg
inc
mov
call
cmp
mov
cld
(bad)
sub
and
enter
mov
push
mov
pop
rcl
lock
stc
loopne
adc
xor
jae
or
in
mov
jns
dec
jne
push
cli
cld
xchg
pusha
or
push
xor
hlt
not
adc
xor
pop
mov
aaa
jle
inc
fistp
adc
push
lods
inc
ja
mov
bswap
inc
mov
jb
mov
mov
adc
retf
pop
xchg
and
rol
imul
scas
push
jno
lds
inc
inc
out
ins
push
adc
push
dec
into
test
dec
stc
xchg
xchg
aaa
mov
push
xchg
mov
pop
mov
push
test
mov
dec
sbb
int
loope
fwait
lahf
xor
xchg
lock
rcr
repz
repz
lock
out
aad
jae
fsub
jle
jno
sub
sub
call
adc
inc
sti
stos
xor
jno
adc
test
and
dec
(bad)
das
and
(bad)
imul
scas
fmul
call
sub
mov
pop
jp
clc
add
jge
std
sbb
push
retf
test
push
xlat
xchg
mov
jmp
push
cmp
lea
or
or
mov
pop
mov
(bad)
mov
sub
inc
retf
sbb
into
hlt
xchg
mov
or
pop
jnp
pop
ins
mov
fs
neg
cmp
mov
mov
ror
dec
daa
out
stos
cmp
(bad)
iret
push
add
mov
fs
cmp
pop
in
push
xor
inc
mov
in
rcr
cmp
mov
add
xchg
retf
movs
call
sbb
ja
mov
sahf
dec
mov
add
push
in
stos
xchg
mov
les
and
add
mov
mov
sub
sub
retf
mov
(bad)
leave
mov
nop
pop
push
mov
pop
cwde
sbb
cwde
sub
fbld
arpl
mov
daa
sti
xor
mov
(bad)
mov
ins
repnz
ss
cdq
push
int
push
sbb
mov
pop
int3
repnz
pop
enter
mov
jno
mov
(bad)
inc
lods
shl
xor
fstp
int3
pop
cmp
dec
push
jge
aad
sbb
add
pusha
adc
fild
fwait
jecxz
xchg
jg
push
sub
dec
or
ficomp
and
push
push
add
xchg
mov
sbb
dec
fwait
aad
dec
or
jae
pop
adc
jne
cdq
or
arpl
adc
es
bound
dec
mov
push
out
das
and
push
in
xchg
into
hlt
jge
add
fcomp
or
xor
mov
popf
sbb
ficomp
xchg
shl
add
les
adc
ja
mov
into
add
xchg
sbb
test
add
in
jnp
and
pusha
movs
mov
repnz
jb
pusha
xlat
adc
mov
or
pop
mov
mov
xchg
dec
cs
bound
ins
int
dec
dec
in
ja
ret
repnz
mov
sbb
retf
(bad)
mov
leave
mov
add
push
jne
adc
push
shl
sbb
and
jp
xor
icebp
cmp
dec
xor
ret
inc
jmp
imul
popa
call
pop
push
push
mov
sahf
add
fdiv
mov
ss
je
arpl
jne
gs
scas
int3
rcl
shl
call
inc
push
jo
leave
ja
in
pop
int3
xchg
dec
icebp
sbb
pushf
mov
dec
xor
jge
lods
dec
mov
rcl
xchg
xchg
cmp
fsub
es
lods
outs
add
dec
out
jecxz
add
cmp
add
lods
sub
jge
dec
xchg
mov
pushf
jmp
adc
push
shl
adc
xchg
sbb
js
push
push
inc
(bad)
lods
rol
and
or
stos
cmp
nop
ins
sbb
test
sub
or
jb
sub
ud2
inc
push
dec
lds
sub
pop
sar
pop
daa
push
ror
inc
repz
(bad)
stc
xor
adc
or
mov
call
mov
ja
inc
cmp
les
cs
out
add
(bad)
xor
aas
cwde
push
ss
jo
mov
and
push
xor
(bad)
int
mov
sub
sub
xchg
les
push
aam
lods
imul
adc
push
popa
and
cmc
fimul
retf
ins
stos
push
cli
xchg
push
fistp
pop
je
std
sub
gs
mov
out
lahf
stc
add
push
sub
(bad)
xor
sub
dec
jb
mov
dec
mov
xchg
push
cld
xchg
(bad)
out
je
xor
or
mov
mov
aaa
out
sub
pop
cmc
pusha
sbb
mov
mov
or
jno
mov
popf
dec
xchg
je
dec
enter
xor
ds
mov
push
loopne
xor
mov
sbb
nop
nop
(bad)
into
not
call
retf
sub
or
push
pop
mov
nop
sbb
ret
dec
dec
push
jne
into
push
dec
cmc
jecxz
fdivr
sahf
xlat
mov
pop
test
inc
pushf
cwde
mov
dec
loop
idiv
and
xor
in
outs
mov
mov
jl
jae
mov
xchg
and
enter
cmp
xchg
push
mov
scas
mov
mov
xor
repnz
adc
pop
xchg
adc
xchg
adc
pop
sbb
mov
mov
mov
imul
cwde
(bad)
loopne
add
(bad)
inc
mov
xlat
scas
sbb
int
lds
sub
(bad)
in
loop
div
inc
imul
dec
fsubr
push
cmp
das
fnstenv
je
inc
pop
push
pop
(bad)
jmp
adc
loope
js
jp
xor
push
jmp
add
in
out
ins
ror
cmp
add
and
xchg
faddp
fcom
mov
lock
sbb
pop
repnz
xor
mov
xchg
or
fstp
pop
sbb
mov
hlt
add
cmp
adc
push
inc
add
sahf
ret
cmc
bound
ror
mov
and
rcr
ins
test
jnp
or
outs
xlat
repz
and
sbb
test
fwait
mov
retf
jnp
mov
dec
sbb
mul
add
out
or
pop
sub
adc
jbe
and
in
stos
arpl
js
add
xchg
test
lahf
aad
or
sbb
scas
(bad)
popf
jecxz
xor
jb
cmps
int3
dec
add
xchg
arpl
fcmovnu
dec
dec
test
mov
xor
lahf
push
fimul
adc
shr
(bad)
fadd
pushf
push
jp
int
push
imul
(bad)
nop
test
fisttp
sub
jge
inc
call
sub
mov
retf
(bad)
mov
in
xchg
push
outs
mov
dec
hlt
cmc
jecxz
pusha
test
pop
push
pop
mov
mov
or
(bad)
mov
dec
mov
xchg
pop
fs
sbb
xor
pop
lahf
rcl
cld
sub
shr
gs
outs
(bad)
in
call
and
sub
mov
xchg
ror
mov
pop
mov
and
mov
sbb
jo
repz
std
push
cmovnp
cmp
pop
jp
in
add
test
jmp
aaa
adc
cs
push
in
pop
scas
(bad)
mov
jl
stos
mov
loopne
jmp
or
inc
je
(bad)
js
(bad)
sti
clc
pop
stos
adc
xor
mov
pop
mov
jne
xchg
dec
mov
or
sbb
mov
mov
xor
cmp
fsub
idiv
add
fmul
jae
mov
or
push
or
mov
add
and
mov
pop
lds
push
pop
dec
cld
lock
cmc
pop
scas
movs
in
sub
pop
(bad)
cmp
push
enter
or
xor
enter
sbb
add
sub
dec
cdq
fnstsw
repnz
lea
in
dec
nop
dec
dec
adc
iret
jp
pcmpeqw
push
lock
mov
mov
lds
push
ret
cmps
mov
or
fwait
dec
aas
sahf
pop
rcl
cmp
mov
or
jge
pop
call
cmp
rcr
xchg
xchg
enter
(bad)
xor
sbb
div
sbb
je
cmp
adc
jb
jbe
cld
ss
imul
mov
stos
push
pop
mov
xchg
jg
jae
lods
dec
pop
jb
jmp
ror
push
into
lods
mov
lods
pop
cmps
imul
lods
int3
lahf
jle
cmp
repnz
pop
jne
adc
leave
js
jbe
loopne
mov
pop
imul
inc
xchg
(bad)
data16
or
cmp
scas
adc
test
test
or
mov
xchg
dec
adc
ins
cld
adc
out
mov
add
leave
fild
fsubr
xchg
test
pop
aam
test
and
xchg
ja
(bad)
xchg
xor
mov
pop
adc
inc
(bad)
push
test
fisub
call
iret
nop
mov
cmp
outs
adc
out
popa
in
sbb
(bad)
push
push
pop
dec
(bad)
or
mov
dec
nop
out
or
pcmpeqw
push
sub
xor
push
fldenv
data16
into
enter
push
push
sub
and
cmp
and
xchg
jae
out
xor
dec
sub
push
mov
inc
scas
mov
dec
and
push
jmp
or
mov
push
mov
lea
cmps
aam
push
xor
xchg
pusha
aad
dec
les
jns
or
or
pop
xlat
mov
popa
repnz
sub
sahf
or
sub
aad
push
or
stos
cmps
dec
pop
sub
cmc
movs
mov
push
retf
fmulp
sti
push
adc
mov
mov
jp
add
xor
dec
cmp
mov
jmp
(bad)
aad
push
stos
xchg
xchg
pop
xor
pushf
sub
cmps
mov
xor
push
xor
cmp
ja
in
mov
dec
xchg
and
cmp
jbe
pop
syscall
les
gs
mov
neg
inc
push
sub
mov
push
and
fst
cwde
jbe
outs
add
cmc
dec
ds
cmp
fstp
fist
inc
jb
xor
scas
scas
scas
jbe
cmp
cli
mov
sub
ffreep
sti
xor
jp
(bad)
sti
jbe
push
cld
add
adc
or
and
int3
retf
push
pop
popa
dec
lods
xchg
ret
outs
in
pop
rcl
jecxz
mov
push
es
dec
xchg
lds
sar
mov
xchg
and
mov
out
lods
and
mov
inc
aad
inc
pop
sub
cwde
aam
in
cli
xor
es
lods
mov
inc
xchg
or
push
js
xchg
mov
xchg
mov
fist
jae
dec
out
inc
hlt
daa
es
mov
and
(bad)
in
xchg
test
dec
or
leave
les
mov
pop
mov
retf
and
pop
adc
push
sub
ror
fistp
dec
dec
xor
lods
rcr
(bad)
sub
cmp
aas
cmps
cmps
clc
cmp
cli
push
adc
je
push
hlt
call
sahf
cwde
jns
int3
inc
aad
dec
dec
ss
jae
iret
inc
dec
xor
mov
sub
xor
(bad)
mov
sbb
jne
push
inc
xchg
or
es
push
je
sub
pop
xor
test
(bad)
dec
push
jns
mov
fcomp
cld
imul
pop
ret
mov
mov
ret
mov
test
nop
jnp
sar
xchg
out
jg
sub
ret
aam
mov
pop
cmp
jbe
sbb
sbb
push
sbb
mov
mov
jno
outs
dec
pop
in
nop
out
jne
pop
(bad)
jb
aam
and
or
cmc
jbe
add
js
and
in
outs
fcmovnbe
sub
pop
pop
and
mov
fadd
ret
and
mov
je
es
imul
add
ja
out
jo
in
movs
or
aad
mov
jns
iret
stos
cmp
cmp
mov
jno
pop
mov
and
fwait
add
(bad)
cld
push
stos
xchg
cs
ja
in
into
inc
lods
pop
mov
ret
sub
ret
shr
mov
fldcw
nop
mov
jecxz
add
push
xor
test
repz
mov
or
inc
repz
mov
retf
pop
adc
xor
inc
fs
fcmovu
shl
add
mov
lods
push
aaa
test
pop
push
mov
xchg
outs
mov
dec
jge
lock
in
jb
inc
jb
jecxz
cmc
mov
push
sahf
xchg
cmp
(bad)
lock
pop
imul
ja
fst
mov
stos
ret
ja
xlat
stc
add
rol
cmps
push
call
mov
cmp
ins
cmps
div
(bad)
mov
lds
cmp
pop
not
xor
xlat
scas
and
adc
in
adc
test
cs
lea
movs
(bad)
adc
xchg
nop
outs
push
lock
inc
inc
inc
add
test
xor
repz
stos
(bad)
jbe
inc
lds
jmp
jnp
mov
out
mov
call
push
add
je
sub
mov
sbb
inc
mov
jmp
(bad)
retf
inc
jmp
sbb
mov
movs
inc
mov
sbb
dec
adc
adc
jbe
aad
daa
adc
ror
jl
xor
mov
mov
pushf
push
dec
push
jno
add
(bad)
(bad)
out
mov
pop
(bad)
hlt
and
inc
jp
fwait
retf
xor
jno
lahf
and
sbb
pop
xchg
cld
loope
(bad)
push
pop
call
cmc
or
add
sti
dec
lods
imul
sub
jno
xchg
and
movs
or
fadd
mov
sbb
or
rol
sub
push
imul
add
mov
je
lods
sub
add
leave
cmp
adc
pop
cmps
mov
out
pop
nop
ror
pop
xchg
sbb
outs
push
mov
hlt
adc
ret
fistp
leave
add
mov
jns
jae
stos
(bad)
mov
je
or
add
mov
aaa
jp
stos
shl
or
adc
(bad)
jmp
shl
sar
call
movs
push
jl
int3
adc
push
inc
mov
pushf
outs
cwde
(bad)
out
js
dec
xchg
sub
mov
mov
pop
retf
pop
and
pop
(bad)
sub
mov
dec
iret
das
frstor
cmp
mov
adc
adc
sti
in
adc
sbb
scas
arpl
xor
or
jmp
ret
and
ret
mov
js
and
sbb
sub
or
cmps
ins
jmp
add
mov
lahf
daa
fcomp
daa
add
pusha
cdq
sbb
inc
cmp
jne
mov
xchg
cmp
mov
dec
push
push
mov
outs
(bad)
ja
leave
xor
sub
push
cmp
rcr
mov
or
and
aad
mov
inc
and
cld
ror
mov
int
ret
push
int
adc
sub
pop
inc
loopne
test
push
mov
std
pop
mov
loopne
jg
call
js
pop
sbb
stc
sub
mov
dec
out
out
sub
xchg
imul
xchg
mov
jmp
aaa
cmp
or
push
push
ret
(bad)
sub
jmp
xor
rcl
or
mov
adc
mov
inc
retf
mov
or
sahf
fwait
pop
outs
or
mov
adc
cmps
stc
inc
xchg
sub
push
lahf
and
jns
push
cmps
jecxz
adc
ret
push
ss
dec
rol
adc
aad
push
movs
mov
popa
or
push
sub
daa
pop
push
or
pop
das
pusha
dec
sub
and
call
cvtps2pi
jmp
or
mov
xor
jge
xor
sub
into
not
adc
jmp
out
das
sbb
das
cdq
(bad)
cmp
xlat
add
dec
inc
mov
outs
(bad)
jno
in
jg
popf
(bad)
ja
imul
retf
and
jmp
push
cmp
and
test
sub
jbe
and
and
fldenv
jecxz
std
xor
add
retf
mov
pop
dec
push
push
and
(bad)
mov
push
sahf
pop
out
mov
jmp
adc
jmp
lds
stc
mov
pop
rcr
inc
mov
ret
js
aaa
inc
test
xor
outs
push
mov
dec
movs
pop
mov
sub
popf
cmp
lods
cwde
jge
movs
scas
inc
hlt
push
outs
mov
jnp
push
cmp
and
xchg
add
jnp
add
xchg
cmc
into
es
test
pop
(bad)
bound
adc
dec
loop
mov
inc
clc
mov
and
mov
mov
jbe
sub
sub
mov
xor
push
out
xor
call
adc
push
aas
push
cmp
push
mov
jecxz
ss
or
mov
mov
inc
mov
sbb
cmp
cmps
js
sbb
or
cmps
in
into
sbb
xor
stos
ja
adc
clc
(bad)
mov
push
fcom
cmp
icebp
xchg
outs
aad
(bad)
enter
ds
sahf
sbb
push
jbe
push
(bad)
lock
sub
inc
aad
sbb
pop
mov
adc
xchg
rcl
cmp
(bad)
or
fs
loopne
sbb
test
push
data16
xor
cld
loopne
or
or
fmul
into
es
lods
outs
test
pop
jne
test
sub
arpl
mov
ja
in
xchg
cld
mov
stos
scas
mov
ss
jle
add
ins
push
push
leave
inc
out
ins
inc
mov
sbb
nop
jb
lahf
loopne
aas
push
je
xor
and
cmps
sbb
xchg
jno
fild
pop
sbb
addr16
mov
data16
dec
xchg
sbb
sahf
pop
aaa
repnz
sahf
xchg
push
push
les
std
out
loop
dec
aaa
xchg
scas
stos
div
rcr
jp
jmp
cmc
mov
jmp
xchg
pushf
jmp
pop
jg
mov
clc
loop
add
sub
push
mov
cmps
jns
mov
in
adc
cs
inc
jp
int3
(bad)
and
pushf
test
(bad)
push
rcl
test
sar
sbb
outs
lahf
retw
sbb
icebp
jg
mov
xchg
adc
(bad)
mov
sub
out
xchg
xchg
ss
js
retf
jno
pop
jmp
inc
fdiv
jnp
outs
mov
xchg
cmps
jns
mov
or
loop
mov
adc
pop
inc
outs
aaa
nop
push
loop
pushf
add
popf
sub
pop
test
mov
and
xor
inc
(bad)
das
into
repz
sub
mov
jne
call
test
loope
inc
in
icebp
cmps
push
retf
inc
add
ret
inc
dec
scas
mov
mov
xchg
inc
pop
cli
inc
adc
xor
inc
cmp
push
sub
mov
out
shl
scas
jmp
jge
pushf
ins
mov
pop
shl
repnz
or
jl
jnp
fwait
sahf
ins
test
push
pop
cwde
adc
ficom
mov
push
xchg
in
or
outs
and
xchg
sub
push
div
push
outs
push
fisubr
jns
retf
xlat
pop
push
sub
retf
cmp
sahf
add
jo
lds
test
and
outs
push
or
loope
dec
pop
mov
hlt
cdq
pop
xchg
mov
mov
fistp
lods
inc
jp
loopne
cmp
push
xchg
retf
ins
mov
jo
test
sbb
sub
aam
xor
push
popf
pop
inc
aam
pop
adc
xchg
inc
sbb
ins
movs
mov
dec
sub
pop
pop
adc
push
das
loopne
sbb
mov
mov
xchg
nop
(bad)
sbb
adc
fimul
loope
and
push
leave
xchg
sbb
ret
addr16
mov
(bad)
sub
pop
dec
int3
lea
ret
sub
sbb
cmp
aas
addr16
cs
xchg
xchg
jno
shl
not
inc
mov
cli
in
push
nop
pop
mov
mov
test
lea
lahf
xchg
inc
fwait
jg
es
pop
inc
loop
mov
mov
rol
sub
xor
pop
(bad)
pushf
inc
(bad)
(bad)
movs
fidiv
sub
sub
retf
aaa
jecxz
fadd
push
in
adc
movs
loopne
dec
popa
popa
stc
call
aam
js
arpl
mov
pop
pushf
cmc
stc
xor
mov
dec
fist
stc
ficomp
and
imul
(bad)
dec
outs
add
(bad)
xlat
movs
dec
and
iret
xor
leave
xchg
jp
rol
es
mov
movs
xlat
enter
loopne
jae
(bad)
(bad)
clc
cmp
rsm
jmp
in
cmp
adc
jmp
and
add
dec
and
adc
arpl
mov
sbb
dec
(bad)
js
loope
mov
cmp
ins
call
xchg
push
xchg
and
clc
mov
loopne
mov
adc
and
jle
shr
dec
dec
sbb
lds
retf
test
ret
stos
lods
test
mov
sub
inc
ja
pop
jle
pusha
jp
aas
daa
scas
lahf
bound
mov
pop
fnstsw
fbld
xchg
loop
jg
call
or
add
mov
dec
aas
in
sahf
inc
loopne
and
and
jge
fldenv
stos
or
mov
inc
fisttp
dec
mov
(bad)
xor
add
stos
sub
ret
push
pop
jle
mov
inc
xchg
xchg
cwde
jge
cld
pop
or
jno
push
dec
lods
jae
push
imul
out
add
ss
or
jae
lock
mov
xor
sub
sar
and
xor
or
pop
aaa
mov
test
ss
push
outs
das
push
mov
mov
aas
leave
mov
retf
xchg
jp
aaa
pop
popa
ror
lea
hlt
loop
out
pop
leave
loopne
movs
adc
and
lea
mov
es
es
ja
push
pop
jge
ins
data16
push
jecxz
leave
pop
pop
aas
mov
adc
fsub
icebp
cmp
xlat
cmps
cmc
dec
cmp
push
mov
bound
pop
loopne
jge
sbb
(bad)
repz
test
sbb
xchg
aad
dec
jmp
call
test
xchg
jp
(bad)
cmp
mov
repnz
pop
out
ret
shl
in
xor
(bad)
jg
sbb
xchg
neg
scas
adc
mov
ja
jnp
xor
popa
aas
sbb
dec
add
mov
jmp
mov
cmp
jno
xor
cs
daa
add
adc
fwait
repnz
dec
je
pop
cli
mov
mov
pop
into
retf
and
aam
movs
dec
or
xor
jl
(bad)
scas
xor
movs
mov
mov
shr
sub
push
adc
scas
xchg
xchg
adc
rcl
jno
xchg
mov
rcl
into
pop
jmp
leave
lock
jae
and
xchg
jp
adc
pop
jecxz
jl
sar
push
adc
jmp
cmp
lock
or
push
sahf
or
xor
and
inc
sub
xor
add
pop
les
push
cmp
mov
adc
mov
out
(bad)
dec
jnp
xor
fstp
mov
xchg
ds
dec
fstp
mov
shr
out
xchg
(bad)
movs
sub
mov
stos
and
daa
mov
loop
clc
mov
stos
loop
cdq
retf
inc
test
out
pushf
mov
inc
das
sbb
pop
stos
inc
in
or
inc
jo
ja
add
out
mov
out
lock
nop
movs
pusha
jo
outs
call
push
and
popa
push
pop
pop
inc
jmp
sbb
xchg
adc
clc
daa
cmc
sbb
add
jae
lods
cmp
cld
jecxz
cmp
or
icebp
push
(bad)
jge
lds
sbb
and
add
shr
gs
jb
or
lods
popa
out
jbe
sbb
adc
(bad)
loop
mov
jle
shl
div
test
aam
inc
cmps
sbb
mov
repz
inc
add
lds
mov
retf
aas
into
out
pop
lea
int
pop
and
stc
retf
add
add
jns
mov
xor
or
stos
mov
and
clc
div
pop
aas
cmps
cmp
push
jmp
jns
push
fwait
stos
out
add
and
pop
add
int3
popa
ret
sub
dec
lea
je
push
xor
lds
and
jmp
pop
dec
jle
call
adc
push
pop
ficom
inc
push
mov
dec
into
sbb
or
xlat
fs
sbb
mov
scas
pop
adc
or
and
(bad)
pop
fwait
jns
(bad)
and
pop
ror
test
lds
mov
pop
and
adc
sbb
push
push
mov
cwde
mov
jge
jns
adc
mov
fwait
cmp
jecxz
mov
cmp
test
call
rcl
or
ror
popa
cmps
(bad)
sub
stc
cmp
dec
cdq
lods
and
or
and
(bad)
cmc
xor
movs
in
shl
mov
clc
adc
adc
dec
in
adc
jb
mov
mov
jge
xchg
enter
scas
fucom
call
in
les
sub
adc
inc
add
push
and
adc
mov
(bad)
int3
or
jno
sbb
loopne
retf
scas
test
dec
and
xor
pop
or
enter
shl
cmp
or
cmps
xor
sub
pop
mov
test
and
imul
pop
mov
pop
fdivr
pop
lock
pop
je
cld
leave
ins
movs
pushf
xor
xchg
imul
cwde
sub
sbb
retf
mov
push
dec
add
mov
or
call
sbb
pop
push
pop
cmp
dec
dec
dec
pushf
mov
cmp
inc
and
mov
sub
mov
mov
bound
pop
mov
aas
sbb
imul
std
mov
mov
mov
xlat
js
out
xlat
neg
mov
fidiv
rol
cli
and
xor
(bad)
fild
pop
mov
adc
mov
cs
iret
ss
dec
jecxz
je
sub
xor
and
enter
loopne
push
fst
aad
out
push
rol
ds
xchg
inc
inc
loopne
add
push
jne
push
add
dec
and
inc
repz
sbb
lea
in
cs
mov
jne
sbb
push
dec
pushf
jno
mov
inc
sbb
mov
or
and
outs
(bad)
xor
and
dec
or
(bad)
(bad)
shl
sbb
jmp
inc
mov
aam
cmp
add
daa
sbb
ins
xor
sub
sub
outs
xchg
fucomi
ret
adc
(bad)
aam
dec
icebp
dec
push
mov
xchg
(bad)
jo
pop
ins
jmp
repnz
mov
lahf
inc
inc
shl
sahf
mov
js
sti
outs
lds
mov
and
pusha
in
xchg
sub
idiv
leave
movs
and
sbb
not
mov
jno
movs
pop
xchg
mov
xchg
retf
retf
mov
in
cmp
xor
loope
test
aaa
fbstp
mov
cs
sbb
cmp
arpl
push
jo
mov
push
call
movs
lahf
sub
or
jmp
call
scas
pop
aad
xchg
mov
xchg
das
call
pop
push
pusha
xchg
push
adc
push
lds
push
mov
mov
fidiv
imul
je
and
sub
or
dec
mov
or
test
jns
mov
jnp
inc
pop
push
or
add
mov
cmp
test
cmp
addr16
out
xchg
jmp
mov
lods
jg
xchg
xor
jae
cmp
popf
test
mov
ss
test
jns
ins
out
fnsave
mov
arpl
iret
int3
xchg
mov
or
mov
push
out
pop
mov
int3
pushf
aad
lods
jo
push
stos
inc
pop
jmp
mov
pusha
mov
dec
les
adc
cmp
ror
mov
mov
gs
add
fst
aas
inc
rcr
push
hlt
cli
sub
jns
sbb
dec
adc
add
stos
hlt
jmp
dec
sar
test
adc
and
iret
sbb
gs
or
adc
jmp
std
outs
bound
and
cdq
adc
push
(bad)
adc
dec
fwait
xor
retf
mov
sub
pop
or
shr
fadd
pop
adc
ins
xor
mov
test
test
or
inc
jne
cmps
dec
fild
test
sahf
push
jmp
mov
jb
jle
imul
js
dec
push
xchg
std
push
fsub
and
sti
cdq
dec
dec
daa
xchg
lods
clc
cmp
cwde
jg
mov
xor
jmp
and
xchg
daa
(bad)
xor
adc
push
jb
push
mov
push
push
dec
loop
loope
pop
dec
push
sahf
adc
scas
xor
int
xchg
imul
mov
add
movs
jecxz
mov
(bad)
stos
rcr
xchg
das
shl
rol
aas
cmp
push
xlat
xchg
repnz
dec
dec
mov
in
js
dec
mov
adc
pop
xor
pop
in
cli
ss
rcr
test
shl
out
and
push
jb
rol
or
jmp
into
sub
xor
scas
jbe
loope
sti
icebp
xchg
iret
ja
jg
add
mov
imul
pop
lods
push
mov
xchg
add
fcmovu
(bad)
push
xchg
rcl
xchg
adc
jns
fstp
fs
test
scas
and
test
jp
aaa
sub
mov
mov
xchg
jecxz
outs
push
adc
dec
cmc
inc
ds
outs
jne
cmp
lods
fdivr
js
inc
push
inc
cld
lea
mov
cmp
xchg
xor
sbb
sub
mov
mov
pusha
(bad)
cwde
dec
xor
aam
push
pop
xchg
adc
or
fdivr
push
repz
cmps
push
or
fwait
mov
pop
jp
nop
mov
lods
leave
out
scas
packsswb
add
ror
test
enter
mov
inc
loopne
push
sub
sub
movs
xchg
add
mov
adc
movs
movs
hlt
arpl
outs
stc
adc
sti
out
mov
lods
cmp
sub
mov
es
add
inc
outs
jge
sbb
ds
outs
and
pop
xchg
lods
xchg
jb
add
lds
push
adc
test
inc
loope
jge
jp
dec
cs
scas
jbe
dec
pop
mov
scas
push
adc
outs
js
fld
add
fwait
pop
cmps
aaa
adc
fsub
xchg
mov
popa
sbb
sbb
push
add
dec
inc
dec
xchg
pop
mov
(bad)
lds
xchg
cmp
mov
bound
loopne
mov
daa
ret
mov
or
inc
or
in
(bad)
pop
pop
daa
mov
ds
adc
xchg
mov
in
hlt
jo
mov
adc
or
jp
mov
ret
fcomp
or
inc
stos
leave
jbe
jmp
push
(bad)
cs
outs
jle
adc
cmp
movs
iret
sahf
jae
push
enter
inc
shr
or
repnz
cli
(bad)
jmp
mov
sbb
les
mov
adc
dec
out
jne
jecxz
mov
dec
jle
sub
sbb
in
sub
dec
pop
xchg
fdiv
xchg
into
xchg
hlt
xchg
std
push
mov
xchg
sbb
cmp
je
in
fwait
mov
inc
xchg
clc
xlat
ds
clc
repnz
mov
popf
test
xchg
gs
xchg
jo
mov
getsec
xchg
rcl
dec
test
mov
jns
in
sbb
pop
add
mov
jae
or
clc
xchg
pop
and
dec
xor
pop
mov
outs
les
xlat
cmp
addr16
adc
or
inc
out
cwde
shl
adc
fldenv
push
add
add
sbb
mov
push
xor
mov
mov
mov
sub
add
lahf
in
clc
popa
xchg
inc
cwde
mov
fisub
repz
cmp
sahf
inc
or
pushf
push
rol
jmp
dec
jl
fcomp
inc
mov
cmp
repz
and
popa
fimul
mov
pusha
mov
xchg
inc
or
stc
cmp
push
mov
adc
mov
inc
into
adc
aam
neg
stos
cmc
inc
lods
dec
and
jge
icebp
jns
mov
sti
dec
xlat
xchg
jp
fs
call
pop
mov
aam
pop
std
lahf
mov
dec
inc
out
xor
fs
or
repz
xor
cmp
cmp
and
jns
outs
add
xor
pop
or
adc
pop
and
in
popa
add
rcr
mov
in
xchg
dec
pop
inc
lea
mov
repz
fld
vmaskmovdqu
fincstp
adc
and
std
fs
cmps
xchg
(bad)
jne
wrmsr
pop
push
inc
sub
inc
movs
hlt
jnp
dec
xchg
clc
sahf
icebp
daa
out
pop
add
and
out
mov
aam
adc
mov
adc
adc
cmp
lea
mov
ret
push
stc
in
adc
jge
pop
push
test
inc
adc
cmp
xchg
push
mov
int3
outs
mov
(bad)
xlat
sti
sub
pcmpeqd
xor
nop
lods
inc
hlt
(bad)
mov
add
mov
sar
in
cmp
jg
aam
sbb
lea
sub
movs
mov
sbb
mov
add
aad
mov
fcomip
fsubr
and
mov
xchg
int3
or
movs
pop
scas
mov
stc
icebp
and
jle
adc
imul
test
mov
pop
sub
and
cmp
xor
pop
jnp
xchg
loope
mul
adc
push
shr
or
es
cmp
int
xchg
rcr
and
shl
jmp
add
mov
mov
cs
jg
in
shr
mov
pop
arpl
push
mov
pop
push
fsubr
jns
arpl
xchg
call
hlt
aaa
inc
ror
cmps
imul
aas
push
and
jo
(bad)
pop
movs
xchg
sbb
mov
stos
sbb
bound
mov
xor
gs
test
lock
loopne
fucomp
repz
adc
or
std
inc
int
mov
jbe
jns
inc
jae
clc
add
mov
pop
cmc
jp
bound
mov
(bad)
pop
pop
loopne
jmp
mov
in
sub
mov
mov
jb
xchg
loopne
retf
xchg
lock
sbb
sbb
or
mov
das
mov
or
or
int3
or
add
mov
jb
jnp
repz
stos
mov
stos
mov
mov
lods
add
mov
pop
sbb
push
mov
mov
push
push
(bad)
or
xchg
dec
loopne
stos
push
(bad)
sub
mov
or
pop
cmp
mov
mov
sub
pop
mov
sub
test
(bad)
int
dec
jp
out
aas
cmp
and
sti
movs
ds
push
pop
inc
lods
inc
sub
mov
fld
mov
loope
retf
mov
repz
in
pop
ds
cld
(bad)
(bad)
repz
mov
pop
pop
loope
push
aas
push
mov
pmaxub
pop
ret
sub
pop
call
fwait
pop
mov
dec
ror
and
sbb
mov
lods
(bad)
not
adc
in
add
aam
dec
fisttp
pop
rcr
sub
daa
pop
int3
call
iret
add
lea
(bad)
popa
cmc
call
rol
adc
pop
shl
sti
cli
mov
adc
jbe
jmp
cli
js
pop
cld
jle
mov
movs
jno
add
add
pushf
in
ret
arpl
push
mov
clc
or
stc
in
sar
cmp
mov
loopne
cmp
stos
ins
pop
dec
pop
push
ror
add
jp
(bad)
in
mov
inc
mov
clc
pop
inc
ror
icebp
das
inc
in
shl
jnp
call
leave
add
cmp
mul
xor
mov
test
loopne
adc
mov
adc
sbb
dec
lea
fbld
sub
pop
aad
pop
xor
es
hlt
mov
into
xchg
add
out
xlat
call
xor
jg
and
imul
ret
and
adc
bnd
dec
jp
sbb
test
sub
sahf
jbe
sbb
adc
fld
jo
ret
xor
mov
nop
jae
neg
enter
scas
inc
stos
fdiv
xor
cmc
mov
fcom
ins
xchg
push
xchg
out
mov
or
push
pop
add
jge
pushf
cmp
xchg
mov
jmp
mov
popa
jl
(bad)
shl
movs
(bad)
(bad)
aaa
mov
cmc
xchg
icebp
fisub
das
jmp
cmp
dec
add
xchg
mov
xchg
sub
ss
scas
(bad)
pop
out
push
(bad)
sub
fs
in
clc
(bad)
xchg
inc
call
outs
lea
into
push
jmp
bound
sar
(bad)
cli
clc
add
adc
sbb
xchg
jo
div
mov
xchg
add
mov
mov
sub
sbb
sbb
sbb
mov
out
push
mov
(bad)
and
mov
jge
lods
cmp
leave
rcr
jp
fnstsw
ins
sub
popa
pushf
push
jp
and
pop
push
jmp
dec
push
dec
adc
xchg
test
stos
jl
hlt
sti
shl
fcomp
jbe
xchg
hlt
outs
push
pop
mov
adc
in
arpl
sub
ss
jp
sub
hlt
sub
mov
xchg
outs
icebp
xchg
shl
jp
stos
sub
jnp
add
mov
cmc
pop
sub
imul
sbb
daa
xor
push
neg
aaa
add
je
dec
icebp
(bad)
jle
cs
inc
ret
ret
and
push
push
dec
jmp
or
pushf
and
push
xchg
fistp
sbb
add
jmp
jno
mov
sti
jg
fist
push
pop
push
adc
dec
sahf
cmp
movs
or
xchg
lods
mov
cmp
fidiv
mov
les
mov
lock
ss
jecxz
ja
lahf
pusha
fidivr
dec
pop
jp
sbb
shl
mul
out
jno
bound
fscale
cmp
jne
cmps
sub
xor
es
(bad)
lock
sbb
or
push
adc
not
retf
js
mov
add
sbb
test
push
retf
mov
pop
cmp
fisttp
aad
std
push
(bad)
into
stc
push
sub
rcl
xchg
sub
xor
mov
sub
pop
pop
cmp
pusha
sub
mov
cwde
dec
jmp
stc
out
xor
dec
imul
icebp
imul
xchg
mov
ins
sbb
mov
xchg
retf
bound
push
xchg
xchg
jge
aas
mov
push
call
jnp
fwait
pop
call
jmp
jp
mov
les
inc
retw
sbb
inc
scas
jnp
cmp
jmp
popa
and
dec
repz
push
dec
lds
inc
inc
jns
dec
mov
pop
aad
fistp
add
sub
sbb
sbb
lock
iret
ds
arpl
mov
add
dec
sahf
(bad)
jle
lods
xchg
sbb
movs
mov
mov
push
adc
ret
sbb
outs
ds
or
push
adc
and
dec
pop
xchg
imul
pop
sub
sub
ja
sub
inc
cdq
dec
push
(bad)
fwait
and
mov
ins
and
dec
fdivr
and
lahf
ins
or
jbe
and
rcr
cmps
retf
pmullw
ficom
xchg
adc
cs
ret
mov
push
retf
imul
in
out
mov
icebp
shr
jo
inc
dec
mov
dec
fimul
jge
jmp
stos
cmps
or
into
jp
dec
add
sub
mov
lahf
cmovs
fsub
inc
or
bnd
es
cmp
fdivp
sub
loop
pop
out
pop
(bad)
std
test
sbb
pop
xor
retf
dec
inc
push
call
pop
sub
pop
jne
add
stc
adc
mov
loopne
push
test
fst
adc
add
cmp
mov
jmp
jb
rol
dec
aam
das
ret
xchg
jne
push
arpl
push
(bad)
test
in
jne
ja
sub
xchg
mov
imul
fnstsw
retf
mov
and
xlat
daa
jns
pop
push
div
mov
mov
sbb
je
xchg
pusha
rcr
push
enter
rol
aad
jg
xor
and
rcl
ret
mov
pop
fsub
imul
jmp
add
jnp
movs
jb
mov
fild
xlat
jmp
jae
jnp
mov
arpl
es
cmp
fsub
push
pop
pop
jle
xor
ret
sub
rol
cmp
rol
push
xchg
jmp
loop
iret
jle
mov
cmps
aad
cmp
les
and
dec
ret
(bad)
jmp
adc
lahf
or
ins
add
arpl
sub
call
pop
add
push
mov
mov
push
mov
cmps
push
xchg
fwait
cdq
scas
dec
pop
je
pop
out
push
push
push
test
mov
imul
or
das
xchg
ss
(bad)
xlat
xchg
mov
inc
jb
jle
xor
ss
loop
aaa
push
cs
adc
bswap
adc
cdq
rcl
inc
ror
stos
ss
xor
retf
es
in
dec
out
imul
mov
or
mov
je
push
jecxz
aas
pop
sahf
mov
aas
and
and
mov
in
mov
fadd
fistp
popa
push
jo
js
mov
jmp
add
mov
or
in
das
jmp
stos
dec
int
fnstenv
ds
scas
cs
mov
out
pop
imul
pushf
data16
xor
inc
lea
pushf
xchg
jmp
jmp
(bad)
jo
into
stc
push
ss
outs
sub
dec
cmp
inc
shr
adc
and
sbb
shl
and
add
pop
enter
lock
test
inc
stc
mov
sar
jecxz
pop
cmps
sub
add
cs
fwait
(bad)
dec
add
in
mov
xchg
jb
jne
not
xchg
push
sub
test
fcom
xchg
cld
repz
mov
jge
sub
repz
mov
dec
mov
sbb
jge
mov
inc
jmp
adc
cmp
(bad)
aaa
or
add
sbb
mov
(bad)
xchg
xchg
xor
nop
into
dec
xor
lods
retf
stos
pop
cmp
adc
sahf
and
xor
sub
ret
xchg
std
aad
pop
lahf
gs
or
stc
add
push
adc
adc
add
xor
push
scas
sti
cmps
lock
cmps
or
push
xor
ins
sbb
mov
aas
mov
outs
inc
jb
sahf
sub
cmps
adc
and
dec
pop
mov
fadd
stos
push
pop
call
cwde
in
into
jno
enter
add
xor
sahf
ja
mov
adc
mul
adc
in
je
loopne
push
jno
loope
loop
(bad)
sub
xchg
mov
pop
adc
(bad)
jo
fsubr
ins
push
(bad)
cmc
int3
bound
ins
fdivp
jb
adc
es
xor
gs
add
and
sub
dec
mov
ja
jp
jl
mov
cmps
mov
icebp
fs
(bad)
out
ja
sub
aam
sbb
pop
cbw
cli
adc
sbb
scas
and
aad
sub
mov
xchg
add
xor
retf
fisttp
xor
mov
mov
in
inc
not
mov
jb
mov
ds
cmp
cwde
repnz
sub
and
rcl
(bad)
mov
inc
movs
(bad)
cs
sub
sub
dec
inc
cwde
lea
test
push
or
cmps
push
mov
ds
sub
xchg
mov
or
shr
test
jl
mov
ins
xlat
sbb
mov
xchg
repnz
xchg
or
(bad)
push
pop
fdiv
ffreep
jge
adc
repnz
sbb
not
add
sbb
jne
(bad)
push
ds
sub
mov
jns
push
retf
ret
movs
not
sbb
out
and
fiadd
jb
enter
rol
shl
cmp
and
xchg
xor
or
xchg
mov
xor
mov
push
dec
jge
call
test
in
icebp
mov
aad
ins
jmp
xlat
mov
imul
cli
jb
pop
xor
cmp
and
(bad)
add
mov
shl
jmp
inc
pop
push
les
cli
xor
mov
mov
mov
nop
pop
pop
adc
ss
sbb
retf
outs
and
push
and
push
cmp
repz
es
outs
push
cs
dec
mov
out
mov
xlat
aam
xchg
dec
xor
mov
inc
inc
cmp
out
sbb
sub
shr
xchg
(bad)
cmp
cdq
add
jbe
jmp
aas
inc
xchg
inc
call
jno
ins
pop
fidivr
(bad)
mov
cmps
mov
fwait
mov
imul
pop
iret
cmp
outs
mov
push
add
push
imul
jp
enter
pop
test
xchg
sar
repnz
sub
add
jp
push
(bad)
cdq
jae
sbb
scas
pop
xchg
mov
in
sbb
retf
ss
shl
adc
jl
or
pop
jl
bound
and
test
mov
add
scas
test
adc
shr
movs
mov
fldcw
mov
pop
shr
push
cwde
pop
enter
in
ss
pop
jnp
pop
lods
pop
push
cmps
fwait
xor
push
push
and
push
adc
cmps
pop
les
(bad)
loopne
mov
scas
rol
xchg
sbb
dec
jl
sar
inc
mov
jb
inc
rcr
mov
je
mov
xchg
fmul
sub
sbb
pop
in
loopne
div
enter
xor
test
jg
push
xchg
icebp
imul
(bad)
bound
push
mov
cmp
out
int3
retf
lea
loop
mov
mov
adc
jbe
jne
sar
idiv
adc
pop
xchg
mov
movs
stos
ret
sub
mov
and
retf
xor
or
cwde
(bad)
lock
mov
mov
mov
adc
push
push
or
cmps
bound
xchg
(bad)
add
dec
outs
out
sbb
aas
push
mov
daa
and
out
inc
shl
add
mov
xor
loope
pop
jne
pop
fcom
mov
fcom
test
pop
shl
cmps
sbb
adc
les
xor
sub
xor
fcom
or
fwait
pop
and
sbb
xor
(bad)
icebp
cli
xor
rcl
mov
mov
or
sbb
test
sub
xchg
xlat
jecxz
lods
cmp
nop
(bad)
arpl
fimul
(bad)
xor
je
add
(bad)
stc
add
arpl
xchg
icebp
mov
repz
mov
fdiv
push
stc
cmp
push
and
dec
shl
inc
xchg
call
cdq
call
out
popf
in
push
mov
sbb
cmps
sar
xchg
cs
mov
pop
daa
jno
outs
fwait
mov
shl
inc
or
movs
cmc
sbb
xchg
int3
aam
clc
pop
mov
lahf
retf
outs
pop
stc
jp
into
(bad)
push
aam
push
retf
ss
shl
jae
out
enter
jle
pop
pop
call
inc
mov
mov
(bad)
add
mov
pop
pusha
scas
pop
pop
and
arpl
jp
in
bound
imul
or
data16
mov
and
pop
inc
ins
dec
jmp
and
cmp
inc
sbb
pop
mov
out
xor
add
stos
dec
sbb
(bad)
(bad)
test
iret
fwait
mov
fwait
mov
dec
(bad)
scas
jns
(bad)
loope
mov
hlt
push
adc
gs
inc
mov
mov
int3
sbb
and
sbb
outs
(bad)
sub
pop
push
xchg
add
jmp
lahf
add
in
mov
dec
adc
mov
dec
(bad)
fnstcw
lahf
cld
test
sub
and
das
sbb
sbb
jbe
retf
inc
rcr
in
adc
jle
into
jle
cmp
je
in
push
outs
inc
imul
adc
loopne
mov
or
call
mov
clc
mov
jmp
xor
mov
fisub
test
mov
mov
rcl
shl
lahf
and
adc
inc
(bad)
rol
nop
cmp
fstp
test
jle
xor
pop
fcom
in
jae
inc
ror
sti
jmp
(bad)
(bad)
into
mov
je
clc
iret
cmps
jmp
and
add
or
data16
movs
dec
nop
pop
mov
out
fistp
dec
bound
test
dec
mov
xor
popa
and
add
adc
inc
or
jmp
push
pusha
mov
jecxz
out
lahf
rcl
in
adc
(bad)
push
add
sbb
loope
outs
mov
jnp
jnp
or
cmp
cmp
pop
jnp
jg
fldcw
ja
pop
add
adc
sub
sbb
xchg
dec
adc
push
cmps
xor
enter
cmp
cmp
hlt
into
pop
mov
in
test
mov
mov
je
xchg
out
and
mov
mov
lds
xchg
jne
adc
sub
int3
fcmovnu
fistp
and
inc
cmps
mov
dec
dec
mov
ins
inc
dec
add
mov
mov
sbb
aam
nop
movs
fyl2xp1
cmps
jmp
fnstcw
jns
scas
adc
push
or
scas
fldcw
jecxz
add
cs
sub
or
clc
dec
sbb
inc
fs
lea
sbb
fwait
adc
push
push
xchg
gs
push
leave
xor
ja
test
sahf
xchg
nop
push
adc
ror
cmps
xchg
push
pop
(bad)
(bad)
mov
push
dec
test
outs
fs
das
ss
call
add
in
js
dec
sbb
mov
lds
(bad)
push
jle
xor
cdq
pop
push
inc
mov
mov
cmps
cmp
xchg
jno
test
add
xor
or
ds
jge
jmp
cli
jne
std
int
cmp
and
test
pop
rcr
push
int
test
dec
imul
pusha
dec
fadd
jmp
bound
pop
pop
xchg
cs
sbb
adc
scas
xchg
inc
dec
pop
ss
mov
sub
mov
popf
ins
aaa
(bad)
jmp
cdq
clc
and
scas
or
jl
test
movs
fnstsw
xchg
inc
(bad)
pop
xchg
jmp
pushf
jnp
lahf
je
xchg
and
shr
dec
sbb
call
push
repnz
fsubr
mov
hlt
loopne
cmps
aaa
(bad)
ds
ins
call
mov
xchg
rcl
sub
outs
imul
stos
adc
cli
into
pop
dec
arpl
out
push
cli
mov
shr
es
clc
mov
ja
mov
daa
mov
cmp
sbb
add
and
cmps
sar
loopne
or
(bad)
lods
adc
adc
xor
lods
jle
gs
adc
xor
test
xor
cmp
adc
movs
popf
fiadd
cmp
ret
add
sub
inc
cmps
dec
es
push
stos
movs
xchg
int3
jne
fild
lea
test
sahf
les
push
bound
pop
sub
shr
fwait
(bad)
mov
sbb
push
xchg
mov
jae
xor
in
adc
adc
aas
pop
pop
hlt
fadd
mov
jae
xor
sar
sbb
jns
in
inc
mov
mov
jle
xchg
xchg
jb
jo
add
mov
stos
jns
sahf
cmp
ins
(bad)
cmps
clc
sar
pop
mov
lds
xchg
mov
nop
ds
mov
scas
(bad)
add
cdq
lock
ss
out
push
mov
inc
hlt
and
and
cmc
push
xor
sub
cld
push
cmc
push
mov
fs
cmp
mov
fcom
(bad)
sub
leave
xor
dec
nop
outs
xor
pop
adc
cmp
test
and
daa
lahf
inc
inc
loopne
test
lock
ins
repnz
into
inc
xchg
fwait
lock
arpl
(bad)
mov
mov
sbb
cmp
pop
mov
fdivr
cmp
imul
test
jnp
add
scas
leave
cmp
nop
cwde
popa
ret
mov
jecxz
mov
pop
or
enter
loopne
in
lods
adc
cdq
dec
cld
loope
aam
cmp
int3
int
outs
retf
xlat
psrad
fisubr
std
xchg
aaa
mov
imul
and
test
mov
fistp
xchg
add
fstp
and
sbb
and
(bad)
fisttp
fdivr
and
add
daa
test
sbb
and
inc
mov
sbb
sbb
call
push
xchg
test
test
inc
retf
adc
retf
jno
int3
xchg
mov
cdq
pusha
sar
ins
leave
mov
add
imul
or
retf
in
mov
lds
jl
sub
jge
mov
push
sub
cli
mov
lea
jne
jo
in
scas
pop
add
rol
call
stc
iret
sbb
data16
out
lds
jp
and
movs
lds
sub
push
outs
mov
rol
lahf
sbb
lahf
fbld
in
add
into
mov
jmp
jno
inc
or
rcr
dec
or
add
mov
xchg
inc
add
popf
add
movs
mov
adc
cmp
lock
sbb
jg
outs
imul
rcr
xchg
test
ja
sub
into
adc
aad
loopne
cmp
retf
ss
or
inc
pop
loopne
jmp
xchg
add
shl
int3
xor
xchg
sub
(bad)
enter
mov
test
iret
ficomp
into
xor
aaa
in
cmps
mov
pop
xlat
jno
lock
dec
xchg
mov
jge
popa
dec
outs
fst
mov
add
out
cmp
call
jle
adc
fs
pop
sbb
adc
push
stos
dec
jmp
ror
lock
in
jno
sbb
cmp
in
jb
add
xchg
movs
dec
cmp
xchg
sub
dec
test
inc
loop
pcmpgtd
push
xchg
jp
mov
cs
xchg
mov
pop
je
into
jl
in
enter
pop
sar
(bad)
(bad)
mov
xchg
das
or
push
sbb
mov
cmps
or
xchg
arpl
int3
loop
mov
xor
aam
push
fiadd
outs
jmp
mov
arpl
and
out
pop
mov
in
int
inc
jmp
test
and
or
loopne
push
push
test
jnp
ror
ins
and
popf
fcmovb
aad
loope
pop
jae
sub
jnp
mov
es
dec
loop
popa
loopne
xor
mov
xchg
in
loop
inc
aaa
imul
jo
jae
jne
(bad)
not
into
xor
lock
cmp
xor
mov
popa
and
fcomp
fldenv
jge
(bad)
hlt
jecxz
in
in
fidiv
xor
pop
sbb
push
sbb
add
aad
cwde
inc
pop
int3
push
fadd
stos
sub
xchg
add
scas
lods
jae
or
in
jne
dec
(bad)
shl
adc
xor
or
dec
xor
test
daa
push
sub
ins
popa
mov
arpl
pop
jae
pop
movs
cld
frstor
jle
ret
xchg
mov
ss
inc
sub
out
cld
dec
fmul
in
add
stos
push
out
and
test
xchg
cmp
shl
nop
lahf
gs
(bad)
and
(bad)
cli
ins
inc
jmp
add
adc
aad
jnp
cmps
adc
std
adc
or
mov
mov
dec
sahf
pop
cmp
gs
fisubr
jmp
jnp
dec
push
stos
scas
cmp
push
xlat
pslld
push
push
sub
test
fdiv
push
xchg
xchg
cmc
dec
push
adc
loop
test
jno
rcl
jmp
pop
mov
rcr
mov
sbb
addr16
xchg
sub
push
cmp
test
(bad)
mov
test
mov
pusha
loope
or
push
cmp
push
ins
inc
pop
sbb
mov
das
retf
leave
ret
imul
scas
add
sbb
fwait
mov
cmp
popf
clc
retf
aas
and
push
jp
or
clc
imul
pop
xchg
sub
pop
xchg
push
loopne
dec
ds
adc
ds
inc
mov
arpl
cmp
mov
es
rcr
sub
mov
in
movs
mov
and
jmp
lea
lock
and
pop
ret
pop
pushf
pop
mov
mov
aad
dec
mov
ja
int3
test
cli
mov
repz
dec
pop
or
dec
cmp
mov
inc
pop
fs
retf
jbe
ror
add
repz
lock
mov
adc
(bad)
sub
push
rcr
push
scas
dec
inc
out
xchg
call
ins
add
and
mov
loopne
mov
sub
mov
hlt
or
xchg
aam
push
into
je
inc
push
rcl
xor
addr16
pslld
or
xor
popa
rcr
les
in
adc
(bad)
int
dec
pop
dec
mov
mov
shr
xchg
cmp
out
pop
sub
sbb
mov
ins
add
enter
aaa
int
push
push
sbb
push
lds
cmp
xchg
push
mov
repnz
repnz
jmp
mov
int
mov
sbb
mov
out
mov
or
sub
sub
fsubr
pop
jmp
or
cwde
aas
mov
mov
out
cli
pusha
mov
in
into
lea
jecxz
aam
pop
fiadd
ret
out
mov
ins
retf
adc
and
and
popa
out
arpl
stos
xor
enter
mov
bound
push
das
lods
xor
jb
leave
call
push
mov
cs
inc
(bad)
fadd
(bad)
sub
add
test
push
fcmovne
aad
pop
mov
jge
call
inc
in
push
(bad)
jge
sub
or
add
push
shl
retf
jp
sub
fadd
stos
xor
iret
mov
mov
clc
stos
ret
ret
pop
movs
(bad)
ror
adc
pop
mov
mov
push
stos
adc
pop
cmp
xor
lea
mov
addr16
push
push
xchg
in
sub
test
ins
adc
mov
jbe
xor
test
mov
lods
and
push
movsx
push
mov
dec
sar
aaa
push
data16
or
jbe
test
shr
add
add
sbb
xchg
(bad)
pusha
mov
and
in
jnp
add
push
mov
div
pop
mov
retf
jnp
arpl
jmp
cs
lock
cmp
out
jbe
and
cmp
and
js
and
inc
mov
xchg
adc
int3
fidivr
sbb
ja
pop
push
sub
jg
adc
fld
in
outs
dec
cmps
cli
adc
cmc
dec
cdq
xor
js
(bad)
(bad)
mov
in
lahf
lock
arpl
lea
mov
in
mov
xchg
push
xor
clc
sub
and
outs
xor
addr16
sub
fist
xchg
sub
fs
inc
iret
dec
daa
(bad)
(bad)
and
stos
mov
mov
mov
fbld
(bad)
xchg
loopne
xor
or
mov
sahf
in
cmps
xor
jmp
int3
dec
xlat
cdq
add
or
aam
movs
and
shl
dec
mov
push
inc
cli
popa
sbb
add
js
xchg
sub
and
xchg
dec
or
ins
ret
dec
(bad)
sahf
das
lds
and
(bad)
mov
fsubr
rcr
(bad)
sub
mov
inc
popf
mov
cmc
pop
mov
cmp
adc
cwde
loop
mov
jle
sar
lahf
sub
sbb
iret
jp
jno
sub
push
(bad)
ss
inc
popa
dec
and
xor
adc
xchg
pop
sbb
loopne
popa
xor
sar
stos
push
push
jb
idiv
mov
ret
imul
jmp
sub
mov
xchg
popf
clc
pushf
xchg
cli
popa
movs
cmp
cmp
call
in
and
jo
retf
inc
add
pop
push
das
or
dec
cmps
xor
jmp
cwde
fldcw
loop
dec
push
and
(bad)
cmp
sbb
daa
xlat
outs
sti
add
sbb
mov
dec
mov
xchg
cld
jecxz
inc
(bad)
call
dec
imul
mov
mov
and
clc
sub
and
sar
clc
push
lahf
jno
lods
jmp
loop
push
pop
out
sti
in
or
jmp
dec
sbb
xor
iret
mov
nop
test
inc
sbb
add
repz
push
int
dec
push
xor
shr
push
call
jno
mov
fld
cmp
dec
int
dec
jo
lds
xor
jbe
mov
sbb
add
popf
inc
sbb
pop
cmp
cmps
inc
mov
mov
mov
icebp
mov
(bad)
out
(bad)
push
sub
dec
(bad)
sahf
pop
and
punpckhbw
pushf
mov
scas
xor
aaa
dec
add
(bad)
add
aad
pop
xchg
inc
pop
icebp
scas
push
repnz
cli
fs
rcl
xor
cwde
sbb
adc
mov
push
(bad)
aad
inc
fs
dec
(bad)
xor
es
mov
int3
fidiv
inc
cmps
out
ss
pop
shl
in
es
jo
sbb
hlt
clc
or
aaa
(bad)
mul
loopne
fbld
cmp
mov
call
nop
mov
push
popf
(bad)
into
test
push
(bad)
cdq
pushf
std
sub
inc
stos
pusha
out
jbe
neg
add
xor
pop
sbb
sub
push
and
cmp
jbe
clc
fstp
cld
jmp
pop
push
cmp
dec
rcr
adc
ja
cmp
cmp
rcl
fmul
fsincos
jp
out
ins
and
fcmovu
imul
or
push
les
mov
jl
dec
std
clts
out
loopne
retf
dec
sbb
jecxz
xor
ja
sbb
imul
sbb
adc
into
cmps
sub
cwde
and
inc
add
mov
or
add
call
pop
gs
pusha
js
cmp
aaa
in
retf
push
inc
sub
arpl
xchg
enter
fldcw
mov
add
mov
mov
push
(bad)
std
imul
aas
inc
loope
add
push
jb
ss
rcl
sub
aaa
mov
jecxz
iret
sbb
add
out
movs
xor
cmp
sub
pushf
mov
(bad)
push
aad
pusha
fstp
cmp
outs
pop
or
pop
or
in
fld
xor
xchg
push
out
stos
push
lds
nop
xor
jecxz
ret
jmp
stos
lahf
dec
xor
jecxz
aam
shl
jl
add
add
adc
retf
mov
pop
popf
daa
inc
out
push
pop
int3
hlt
ja
dec
dec
sar
and
pop
sbb
adc
scas
rcl
or
addr16
push
cmp
dec
lds
ins
rcl
imul
(bad)
movs
clc
xor
out
mov
mov
loop
inc
xor
push
and
pop
xchg
(bad)
inc
cmp
in
mov
loop
movs
aam
(bad)
mov
mov
or
inc
pop
dec
dec
push
cmp
push
lock
adc
retf
out
movs
fsubr
and
mov
fstp
test
popa
pop
push
inc
pop
sbb
inc
push
push
fdivp
sbb
xchg
pop
pusha
(bad)
or
or
dec
call
adc
xchg
sub
push
adc
pushf
jb
jae
lock
adc
mov
in
bound
gs
or
mov
cli
std
js
das
xchg
or
outs
and
dec
test
or
mov
lock
outs
retf
xchg
ins
add
test
cmp
jmp
adc
adc
cwde
pop
nop
sub
mov
and
fdiv
mov
add
jle
jp
rcl
push
xor
shl
sbb
mov
mov
popf
or
or
mov
mov
jl
push
xchg
or
mul
call
sti
test
xchg
hlt
loop
push
lods
aas
adc
mov
test
add
pop
xchg
xlat
pop
popa
or
lock
sahf
ss
popa
leave
or
test
aad
hlt
mov
ins
xchg
nop
pop
cmc
in
inc
div
xlat
adc
mov
lea
test
mov
mov
cmps
jne
adc
pop
(bad)
mov
ins
sbb
sub
cmps
sbb
push
push
mov
ret
sub
mov
push
or
cmp
xor
xor
mov
push
adc
out
cmc
mov
xchg
lahf
or
sahf
in
mul
pop
xor
xor
pop
mov
mov
push
mov
push
js
enter
sbb
add
jne
xchg
add
jns
repz
mov
retf
bnd
scas
lods
test
jg
ins
stc
fs
rol
mov
imul
mov
jne
dec
and
fistp
inc
jno
es
imul
or
pop
dec
dec
jle
xor
or
add
pop
mov
push
inc
cmp
cdq
cmp
hlt
push
adc
push
add
arpl
mov
cmp
sbb
adc
fst
ins
fild
dec
dec
movs
scas
push
jg
(bad)
outs
gs
pop
cld
adc
adc
out
movs
pushf
mov
jb
mov
in
(bad)
xchg
push
sbb
sbb
xchg
inc
in
inc
stc
scas
mov
mov
call
add
shl
xchg
jns
or
sar
jge
fs
inc
(bad)
dec
scas
inc
xchg
icebp
mov
xlat
ret
neg
fmulp
in
mov
inc
mov
scas
icebp
out
imul
das
jmp
xor
mov
loopne
psllq
icebp
jb
js
shr
xor
popa
mov
add
scas
or
out
cmp
cmps
clts
mov
mov
int
mov
jmp
in
xor
iret
mov
out
dec
or
(bad)
and
stos
ins
gs
ins
cli
ds
add
cld
xor
test
adc
imul
outs
xchg
jbe
retf
push
aaa
cmps
and
loopne
mov
dec
ds
sti
nop
sahf
sub
stc
xchg
push
arpl
mov
mov
cmc
jmp
mov
add
shl
cmc
dec
mov
jno
push
mov
sti
lods
dec
push
rol
setle
repz
pop
xchg
push
adc
dec
inc
rol
mov
js
pop
icebp
lods
mov
data16
fbstp
adc
cmp
cmps
out
pushf
(bad)
cs
push
mov
(bad)
push
and
cld
pop
pop
cwde
out
ficom
dec
inc
icebp
data16
jg
pop
xchg
mov
ja
call
and
xchg
dec
and
ja
movs
shr
call
xor
sub
adc
cmp
int
push
loop
pop
ficomp
mov
call
(bad)
out
mov
call
mov
cmps
imul
aam
xchg
imul
clc
(bad)
rcl
xchg
sahf
adc
mov
cmps
sub
jg
push
pop
fsubr
cwde
stc
adc
daa
call
test
cwde
pop
les
fnstsw
test
ds
test
pop
ret
sbb
inc
in
add
neg
jmp
outs
adc
jb
stc
movs
scas
sub
fbld
mov
mov
out
cmps
ss
sbb
lods
push
or
fs
fcom
jnp
dec
cwde
jno
jle
mov
xor
and
ret
or
cmp
imul
retf
fs
xor
and
lahf
fneni(8087
or
xchg
mov
adc
cs
int
in
test
lods
retf
xor
or
mov
jl
jle
(bad)
fcomp
pusha
iret
jle
push
lea
inc
int
rcr
xchg
mov
fnstenv
lock
pop
rcr
pop
fisubr
inc
icebp
lods
pop
call
mov
hlt
and
retf
cmp
dec
sahf
(bad)
int3
push
mov
sbb
int
retf
mov
enter
inc
ret
add
and
push
int
dec
jecxz
fidiv
cmp
rcl
mov
jl
mov
mov
push
pusha
test
out
scas
iret
stos
mov
loop
adc
(bad)
test
dec
leave
nop
add
cmp
dec
dec
fidiv
popf
sbb
je
into
lods
xor
add
ret
pop
pushf
xchg
stc
add
call
enter
mov
and
test
sbb
pop
jo
dec
loop
push
xchg
xchg
jbe
adc
ds
mov
iret
lds
std
add
inc
repz
mov
jno
test
jl
pop
inc
into
mov
movs
and
and
xchg
loope
sub
mov
pop
fdiv
and
call
test
xor
cmps
sub
or
mov
loop
cmp
mov
jb
stos
loop
inc
fisub
and
push
inc
vpmacssww
cld
cmc
stos
push
dec
dec
lds
ins
mov
xchg
scas
loop
test
cmp
push
sbb
addr16
jbe
sub
ins
adc
pop
call
jge
push
test
pusha
aad
push
icebp
fistp
cmp
push
or
push
enter
or
vpsubw
push
(bad)
mov
mov
out
in
and
and
js
fs
or
sub
jl
or
adc
inc
and
(bad)
push
jnp
rol
mov
fld
mul
xor
mov
int
scas
mov
bsf
ins
xor
or
popa
sbb
jmp
dec
int3
adc
xchg
inc
jnp
popa
or
les
cmp
mov
sar
xchg
loope
or
xchg
sub
mov
cmp
pop
cli
in
ins
xchg
push
lock
xchg
in
bound
shr
mov
push
adc
push
add
cs
xor
add
cwde
ins
outs
push
cli
sub
in
push
adc
jnp
dec
aaa
push
inc
mov
pop
and
xor
add
dec
pushf
mov
sub
dec
sbb
pop
inc
push
into
and
ja
xor
(bad)
cli
dec
stos
and
popa
add
cdq
out
in
xor
stc
push
ins
in
rol
iret
inc
fwait
or
xor
dec
lea
sbb
mov
push
jmp
stc
push
(bad)
mov
ror
loop
ds
mov
gs
stc
xor
or
pop
xor
loop
cmp
sti
fiadd
in
popf
repnz
sbb
outs
and
lahf
xchg
mov
mov
add
out
(bad)
sbb
jg
int3
add
outs
ds
test
(bad)
and
jnp
mov
aaa
out
cmp
add
das
pop
adc
cwde
mov
ja
sbb
fbld
dec
mov
daa
adc
mov
sub
mov
(bad)
and
cld
mov
push
and
pop
xchg
push
adc
jbe
add
sub
fs
jnp
inc
cmp
scas
cdq
pop
adc
push
inc
jne
pop
aad
cmp
hlt
mov
push
xchg
in
ins
push
paddusw
in
mov
mov
adc
fsin
push
aam
adc
or
ror
sbb
dec
jmp
pop
mov
xchg
imul
arpl
(bad)
cmc
sbb
js
das
aas
xchg
out
push
ror
fstp
movs
fs
ins
and
call
sub
or
and
sub
mov
pop
scas
push
xor
icebp
mov
sti
js
push
jbe
sbb
push
push
mov
test
sub
lods
sbb
mov
stos
dec
and
pop
test
jmp
fmul
mov
mov
imul
lods
xchg
iret
add
enter
dec
scas
ret
mov
(bad)
xchg
scas
jmp
out
shl
inc
add
mov
mov
outs
lahf
or
xchg
adc
add
sar
sub
in
sub
rcr
or
jp
add
jmp
sysret
mov
ror
(bad)
js
fdivr
ret
inc
or
push
xor
jb
adc
mov
in
out
add
jle
inc
or
iret
pavgw
fild
adc
push
loopne
push
pop
xchg
pop
sbb
call
fst
add
jg
adc
pop
dec
test
fisub
(bad)
sub
sbb
sub
mov
jle
sub
ret
xor
pop
cmp
add
push
sub
out
fs
add
mov
test
jns
scas
xchg
jae
pop
pop
mov
add
(bad)
outs
gs
or
cmp
setl
and
inc
cwde
(bad)
adc
js
mov
xlat
mov
test
mov
(bad)
lahf
cmp
mov
shr
mov
(bad)
cmps
xor
movs
jbe
(bad)
ins
adc
dec
pop
(bad)
daa
fist
test
stos
mov
jnp
mov
(bad)
sbb
push
data16
stos
jbe
xor
outs
js
push
mov
aas
repz
les
inc
or
jle
rol
rol
inc
sar
call
test
jae
movs
iret
adc
or
aas
cld
inc
imul
xlat
push
or
sbb
aas
cmp
mov
lods
and
mov
and
add
call
jno
outs
iret
cmp
out
icebp
xchg
fld
mov
rcr
shl
jmp
bound
xor
mov
pop
push
cs
ret
xor
call
test
adc
mov
sub
inc
inc
dec
push
mov
int3
ins
cmp
mov
in
sub
and
sub
rol
les
scas
push
push
push
adc
aam
adc
and
and
dec
jno
xchg
jns
push
repz
sub
pop
mov
cmps
sbb
inc
mov
mov
xchg
push
push
(bad)
iret
(bad)
pop
mov
mov
or
pop
xchg
cwde
jge
pop
lock
(bad)
cmps
popf
jle
push
arpl
clc
xor
repnz
inc
push
inc
ret
xchg
mov
jl
dec
sbb
fisub
ret
xchg
pop
adc
jmp
mov
add
stos
test
jge
iret
xchg
scas
cmps
dec
neg
loop
repnz
pop
sub
xchg
xor
jp
and
mov
mov
daa
ds
shr
or
dec
out
stos
adc
(bad)
daa
scas
stos
cmp
mov
dec
addr16
sbb
and
sbb
pop
les
mov
jne
imul
and
mov
pop
leave
xor
aad
pop
jp
sub
mov
dec
ficomp
in
dec
jp
and
outs
sub
xor
fdiv
jbe
adc
adc
sbb
lods
cmp
cmps
mov
jle
adc
ins
pop
mov
les
hlt
data16
xor
adc
mov
(bad)
test
and
fadd
mov
bnd
add
hlt
cli
leave
loopne
add
(bad)
mov
xor
mov
and
in
ss
stc
push
pop
jb
push
aam
daa
mov
bound
scas
or
xchg
pop
push
in
jmp
xor
lahf
xchg
mov
adc
movs
push
sbb
xchg
push
pusha
aam
repnz
mov
out
test
dec
dec
fcomip
fs
jb
jns
test
arpl
prefetch
or
mov
std
cmp
js
push
adc
outs
mov
loop
pop
jg
sub
ret
dec
pushf
xor
int
or
add
stos
add
jg
mov
add
push
(bad)
movs
jmp
aam
std
std
(bad)
push
and
repnz
and
dec
cmps
sahf
cmp
xor
iret
pop
shl
adc
cli
jnp
repz
jp
aaa
in
cld
pop
popf
lock
js
push
jbe
jnp
aas
push
push
fnstenv
mov
in
test
fs
add
add
push
popa
fisttp
imul
adc
mov
pop
dec
and
jb
add
ja
pop
jmpw
test
arpl
or
imul
xor
data16
out
xor
add
push
call
adc
pushf
ror
call
mov
(bad)
(bad)
repz
dec
test
popa
mov
fwait
push
mov
in
mov
les
adc
imul
ss
ins
cli
cmp
ins
cmps
xchg
sbb
and
jle
mov
xor
adc
dec
or
lods
jmp
rdmsr
out
test
(bad)
mov
sti
add
dec
popa
cmp
and
or
mov
int
in
pushf
dec
xor
mov
pop
(bad)
mov
pop
and
iret
or
fisub
(bad)
cmc
pop
test
aas
mov
nop
mov
push
xchg
call
stos
cmps
shr
adc
mov
adc
into
jmp
adc
sbb
nop
dec
adc
mov
in
movs
seta
jg
pop
mov
add
les
ja
addr16
dec
pop
or
cmp
mov
jno
mul
jle
cmp
sub
mov
das
pushf
xor
outs
(bad)
in
(bad)
jl
ss
mov
xor
or
scas
stos
inc
popa
fsubr
shl
cmps
int
pop
lods
xlat
outs
(bad)
es
int
adc
test
push
push
std
ins
adc
aaa
and
jmp
sub
mov
pop
ss
js
es
mov
and
pushf
add
mov
pop
jbe
adc
inc
xchg
pop
jp
add
daa
outs
jae
add
mov
adc
popa
mov
or
addr16
pop
test
(bad)
cmp
movs
imul
lahf
int3
icebp
ror
mov
mov
push
jle
fldenv
xchg
cmp
(bad)
xor
ins
out
cli
mov
aam
inc
aaa
mov
loopne
dec
sti
or
rcl
std
and
dec
shl
aas
pop
mov
or
xchg
jbe
and
repnz
mov
or
sbb
sahf
xor
js
pop
pop
sbb
adc
retf
(bad)
lds
lea
and
mov
push
mov
(bad)
popf
pop
ds
popf
hlt
cmc
pop
(bad)
call
icebp
test
cs
jle
xchg
adc
pop
mov
dec
imul
and
jecxz
neg
inc
lahf
sub
(bad)
sub
pop
dec
loop
sbb
inc
aaa
test
sub
mov
mov
rcl
sub
ins
sahf
ins
js
pop
sub
dec
add
lahf
and
xchg
dec
das
fdivr
stc
outs
push
inc
jecxz
imul
dec
sbb
and
mov
mov
inc
std
and
sbb
mov
aaa
or
scas
mov
jns
mov
cmp
mov
shl
push
clc
pushf
mov
jne
outs
adc
fistp
push
stos
xchg
movs
or
imul
cld
out
leave
outs
and
jno
fdivr
pop
clc
jl
xchg
inc
inc
jnp
sahf
ins
jne
jae
push
xchg
sub
push
sub
mov
sub
or
jno
movs
bound
int3
xor
sbb
cmp
mov
call
and
xor
scas
sahf
push
leave
sbb
or
jae
inc
cmp
xchg
or
mov
lods
pushf
rcl
fist
cmp
lahf
fcmovbe
add
xchg
stos
sub
pop
psrld
pop
adc
xchg
xchg
mov
xchg
(bad)
or
lea
es
out
aaa
cmp
mov
xchg
sub
(bad)
fstp
inc
mov
ss
scas
adc
and
ja
cmp
xlat
xchg
push
imul
loope
mov
push
xor
or
push
cld
inc
or
cmp
xchg
in
cmps
mov
stc
adc
and
in
sub
mov
mov
inc
and
and
into
inc
in
movs
addr16
outs
je
lock
and
stos
mov
or
dec
mov
inc
call
push
pop
mov
push
push
and
repz
jnp
inc
cdq
pushf
mov
shr
mov
jno
btc
fs
sub
adc
jl
mov
ror
repnz
mov
push
mov
pop
jb
jmp
pop
dec
push
loope
retf
mov
mov
mov
adc
xchg
hlt
inc
mov
movs
push
into
mov
in
cdq
lock
cwde
imul
mov
xchg
imul
jp
push
xor
cmp
jnp
add
lahf
or
mov
sub
mov
mov
(bad)
pop
inc
jno
add
fild
js
hlt
neg
adc
adc
push
push
jae
inc
cs
repz
sub
pop
and
xor
jo
ret
cmp
add
push
xchg
jae
jp
dec
push
mov
ins
mov
or
call
sbb
imul
mov
addr16
into
xor
pop
mov
ja
sub
ror
push
int3
sub
retf
xor
sbb
add
fadd
push
and
xor
jns
xor
xor
inc
int
dec
mov
mov
sub
lods
push
pop
or
jp
push
enter
mov
cmc
dec
mov
push
outs
cmp
sub
fnstcw
test
ins
fs
xor
mov
in
in
mov
daa
mov
jg
mov
in
fadd
sub
pop
push
cs
hlt
scas
popa
jge
into
sbb
jae
shr
scas
sbb
xor
aad
and
mov
xchg
jb
fmul
test
ret
popa
stos
imul
adc
pop
xchg
fwait
jge
lods
rol
les
repz
addr16
mov
dec
pop
div
push
(bad)
fbstp
fisub
shl
loopne
pop
aaa
push
call
mov
fcom
ins
test
rcl
jl
mov
out
mov
or
rol
pushf
aam
mov
ja
mov
inc
or
sti
sbb
fwait
mov
sbb
or
jp
test
mov
pop
sbb
push
ret
lods
pop
push
es
pusha
add
frstor
ror
leave
add
sbb
pop
add
sbb
lods
mov
fnsave
push
mov
sub
ins
cmp
(bad)
pop
and
call
cmp
movs
xchg
ins
mov
fdivr
aaa
std
adc
sub
mov
mov
out
xchg
test
jp
xchg
lock
mov
jns
mov
mov
sub
jns
mov
ret
add
mov
fdivr
mov
repnz
push
xchg
pusha
rcl
pop
icebp
sti
jae
xor
imul
and
icebp
mov
aad
push
cmp
nop
add
cmp
or
add
loope
and
idiv
dec
nop
xor
lahf
sub
fldenv
mov
cld
lahf
sub
dec
pop
adc
fcomp
mov
xor
neg
push
bound
pushf
sbb
and
and
push
and
mov
push
enter
jno
adc
add
jmp
sub
js
mov
lods
emms
xor
xor
sub
mov
fs
aad
cmp
and
(bad)
inc
leave
or
lahf
mov
outs
jg
or
jnp
push
int3
nop
(bad)
js
push
out
imul
mov
add
gs
inc
push
jp
xchg
(bad)
mov
nop
or
leave
fwait
test
aaa
leave
pop
sar
adc
and
add
mov
in
sub
lods
jecxz
lods
scas
adc
js
(bad)
mul
(bad)
mov
add
dec
mov
js
sti
jne
ss
and
xchg
inc
or
mov
popf
movs
cmp
and
jg
xchg
mov
repnz
and
test
shl
out
into
inc
nop
loope
js
mov
out
cwde
(bad)
lods
pusha
scas
push
inc
out
push
and
fucomi
and
fsub
mov
adc
pop
ds
fsubr
mov
repz
fisttp
mov
mov
sub
ins
cli
inc
xor
or
repz
test
jge
nop
repz
jmp
xor
or
sub
sbb
movs
mov
sub
mov
push
aaa
scas
pop
rcl
xor
jl
nop
mov
push
pushf
ins
std
bound
xor
push
mov
dec
sar
sub
add
cmp
jns
xchg
xor
xchg
jo
push
inc
pop
inc
cld
setg
cwde
loopne
cdq
test
shl
mov
inc
pop
jae
dec
mov
popf
movs
lock
mov
and
xchg
jnp
add
xchg
sub
push
xor
ret
mov
sahf
pop
mov
repz
sub
loope
push
mov
sub
out
cdq
lods
repz
fcmovnbe
hlt
push
dec
pop
mov
iret
rol
loope
in
dec
and
mov
lods
or
clc
inc
into
jle
inc
jno
inc
xchg
mov
mov
int
xor
mov
in
add
mov
repnz
mov
movs
ins
pop
mov
mov
scas
fcomp
mov
dec
bound
mov
mov
push
mov
imul
xchg
jp
pop
out
dec
xor
dec
mov
jnp
scas
adc
arpl
stos
sub
pusha
mov
cmp
mov
or
mov
mov
jmp
cmp
in
cmp
hlt
loope
xor
sub
mov
das
jle
push
cmp
in
xor
bound
mov
dec
mov
xchg
cdq
and
ins
push
aaa
mov
(bad)
push
data16
dec
pusha
(bad)
gs
fld
lods
repz
cmc
mov
loopne
dec
cmp
icebp
push
scas
inc
inc
hlt
repnz
cld
inc
ds
mov
or
jmp
movzx
mov
out
test
clc
rcl
test
dec
inc
sbb
push
mov
pinsrw
mov
pop
or
bswap
ret
mov
cmps
push
pop
in
(bad)
sti
jb
(bad)
loop
stc
cli
shl
hlt
mov
out
sbb
pop
lahf
pushf
fs
xchg
lods
jmp
xchg
scas
fcomi
sbb
std
or
jecxz
out
ss
in
xchg
xlat
lock
mov
jae
aas
inc
adc
mov
(bad)
mov
daa
jp
xchg
pop
hlt
cmp
cmp
test
imul
push
jle
inc
sbb
sub
cwde
mov
out
enter
jle
mov
add
push
(bad)
std
add
pop
mov
or
sub
cdq
xor
imul
and
pop
sub
fwait
jo
std
sub
jns
cs
cmp
jnp
ror
push
retf
mov
(bad)
fnstenv
bound
retf
jbe
xchg
sahf
add
out
sbb
call
push
enter
sbb
xchg
xor
popa
imul
sub
aad
sbb
repnz
inc
rcr
and
inc
cs
inc
cmp
xor
fs
and
lea
shr
add
outs
adc
fidivr
pop
and
add
into
sbb
inc
mov
sar
cmp
test
xchg
shl
jbe
lock
pop
(bad)
fidivr
ret
leave
xchg
xchg
pop
mov
in
adc
cmp
mov
jge
pop
lods
ins
jae
and
ret
(bad)
jnp
xor
adc
pop
test
sub
xor
sbb
fwait
ins
push
in
pop
retf
jb
cli
cmp
inc
pop
enter
icebp
xor
push
call
jb
and
imul
shl
iret
dec
bound
(bad)
ds
ins
out
(bad)
ss
fcmove
mov
sbb
leave
mov
pop
cld
pop
jbe
mov
adc
or
call
test
add
push
mov
sub
or
sub
adc
stos
mov
jmp
xchg
cmp
das
int3
int3
ja
mov
jmp
mov
inc
popa
and
mov
cmp
cmp
loopne
pop
inc
xor
adc
and
ud2
repz
sbb
jg
jnp
cmp
adc
or
xchg
pop
aam
xchg
int3
aas
push
lahf
(bad)
stc
repnz
fwait
push
or
inc
xchg
or
jmp
call
xchg
retf
setno
icebp
retf
push
push
aas
jle
in
pop
xor
mov
pop
mov
out
cmp
push
or
xor
scas
push
sub
out
test
pop
cwde
je
cmp
sub
sti
test
gs
ins
xchg
xor
imul
mov
mov
xor
push
xchg
outs
inc
cmp
add
faddp
push
or
inc
dec
cmps
inc
pusha
pop
and
mov
aam
add
sti
dec
repz
dec
push
mov
cmc
cmp
mov
movs
test
jg
int3
(bad)
push
and
dec
sbb
cld
xor
jmp
out
pop
lods
lock
sub
xchg
jl
push
or
jb
cmp
push
xor
outs
push
push
jl
mov
fs
xchg
cmp
sub
and
call
mov
into
sbb
(bad)
xchg
das
sbb
mov
lods
xchg
or
sub
sbb
shl
mov
jp
adc
mov
jmp
pop
cmp
(bad)
(bad)
stc
or
popa
mov
adc
mov
adc
pop
xchg
movs
inc
pop
push
sbb
and
retfw
pop
mov
mov
dec
jmp
or
pusha
push
int3
xchg
cdq
xlat
jns
add
mov
xor
fwait
adc
call
and
stos
mov
aaa
leave
push
or
(bad)
je
inc
cmc
aam
ja
push
xchg
imul
dec
inc
inc
mov
(bad)
retf
int
test
out
dec
push
xor
test
dec
cli
movs
inc
pop
fsub
out
fwait
out
mov
dec
add
movs
push
ins
imul
inc
or
xchg
push
mov
cwde
in
stc
xor
mov
gs
retf
sub
add
and
retf
push
jbe
pop
pop
pop
nop
(bad)
jmp
push
cmps
pop
sbb
mov
imul
sbb
xchg
adc
xchg
xchg
fisubr
pop
jg
mov
xlat
call
dec
mov
pop
mul
(bad)
lods
adc
sbb
fsub
cld
push
push
cmp
test
cmp
push
ret
or
xchg
mov
push
jecxz
es
pop
push
sub
and
sub
push
mov
or
ret
mov
outs
rol
sub
cmps
add
retf
loopne
stos
dec
sub
loopne
es
sub
jmp
mov
jl
pop
fadd
leave
in
jge
out
xchg
jo
mov
or
sub
dec
mov
xor
pop
fs
add
pop
sbb
popf
mov
jmp
push
popa
(bad)
sti
lock
sbb
movs
dec
jmp
or
sub
xchg
mov
mov
movs
adc
dec
inc
cmp
es
stos
ret
mov
mov
rcl
xor
in
pop
call
popa
push
fwait
shr
inc
movs
cmp
xor
in
xor
xor
inc
ins
sub
gs
sub
xlat
scas
call
adc
(bad)
scas
mov
and
lahf
cmp
fwait
ss
(bad)
fiadd
or
inc
in
add
mov
cld
sub
mov
cmps
and
inc
dec
ja
stos
call
aas
push
cli
in
mov
mov
mov
(bad)
sbb
inc
inc
call
xor
loopne
js
in
dec
test
es
xor
mov
(bad)
cmc
scas
push
pop
sub
das
dec
aad
or
gs
or
in
cmp
mov
xchg
ins
mov
mov
sub
push
daa
xchg
repnz
xchg
inc
mov
mov
or
jnp
sub
or
cmp
add
sub
addr16
fidiv
in
(bad)
adc
mov
push
bound
lods
mov
xchg
add
ins
imul
xchg
repnz
fnstenv
sub
pop
aaa
lahf
mov
push
inc
adc
imul
xor
dec
div
aaa
jmp
sbb
(bad)
mov
aam
fmul
mov
cmp
ins
scas
xchg
outs
sub
int
sbb
imul
cmps
imul
in
pop
(bad)
xor
and
or
test
push
lods
cli
push
dec
stos
out
jno
mov
fistp
add
adc
aas
pushf
mov
jle
mov
ins
iret
fcmovne
clc
repnz
popa
push
xor
sbb
xchg
adc
sti
fsub
and
test
fnstsw
bound
push
xchg
jnp
jmp
jo
mov
in
mov
test
xor
cmps
ret
and
fcom
sbb
pop
or
pop
jb
jns
not
xlat
pop
pushf
jp
jae
adc
clts
shr
jo
les
fs
enter
push
outs
inc
pop
xchg
xchg
loop
mov
push
nop
call
mov
(bad)
ror
retf
adc
fstp
or
loopne
mov
mov
jmp
push
ins
and
rcr
fs
std
and
stos
cmp
mov
pop
jbe
iret
pop
inc
out
test
push
std
jb
and
loop
int3
out
scas
xor
(bad)
mov
lods
cmp
xchg
jb
mov
lods
repz
adc
or
rol
ret
xor
mov
cdq
stos
icebp
jecxz
fidiv
sub
dec
and
mov
pop
xlat
add
inc
mov
hlt
icebp
adc
jl
xor
enter
xlat
sar
jno
cmp
inc
jg
or
inc
mov
(bad)
cmp
pop
stc
jbe
les
mov
and
scas
mov
ret
out
pop
leave
mov
or
xchg
mov
retf
mov
(bad)
aad
pusha
add
aad
shr
mov
out
pop
movs
nop
mov
mov
push
(bad)
adc
lods
and
xchg
int3
in
sti
ficomp
cmp
pop
retf
mov
rcr
push
and
jge
int
lea
sar
fnsave
adc
dec
ror
pop
mov
dec
cld
or
outs
pop
push
xchg
dec
out
arpl
or
jnp
ror
sar
cmp
pop
pop
jmp
add
mov
popa
(bad)
and
xlat
dec
div
dec
clc
lock
xchg
mov
mov
inc
call
sub
and
inc
dec
bound
push
dec
mov
or
js
aam
pop
push
sub
push
icebp
adc
mov
inc
jecxz
xchg
cwde
adc
xchg
lods
out
(bad)
lds
sub
pop
outs
je
clc
ja
rcr
push
std
mov
ss
mov
ficomp
ret
mov
in
mov
push
mov
outs
mov
outs
add
aas
xchg
xchg
shl
mov
mov
sbb
xchg
push
pushf
add
ret
add
or
aam
mov
xlat
pcmpeqd
test
jnp
or
xchg
mov
mov
xchg
js
out
push
xchg
pop
sbb
jmp
sar
dec
ss
or
and
fcmove
push
in
push
out
add
sbb
dec
ds
mov
inc
jne
std
xchg
mov
inc
mov
mov
mov
test
sbb
clc
scas
cmps
push
call
je
pop
shl
into
aad
jl
and
jne
mov
jne
iret
and
xchg
int3
mov
jae
(bad)
cmp
add
loope
test
aad
sahf
sbb
and
imul
ja
leave
lods
push
add
jb
xchg
add
push
xor
inc
loopne
jno
adc
test
sub
jmp
stc
sub
lds
movzx
lea
aaa
ins
shl
push
mov
jbe
cmp
add
test
fnsave
out
mov
push
imul
jp
xchg
sbb
pushf
xchg
inc
xor
js
cwde
push
ret
inc
stos
into
jp
idiv
xchg
inc
xchg
aaa
aaa
and
outs
or
jns
jmp
test
lea
sbb
adc
dec
int3
jnp
dec
arpl
imul
int
jnp
loope
sbb
pop
and
jg
mov
add
jecxz
ja
push
sahf
add
addr16
pop
add
je
and
mov
lahf
fstp
sub
pop
or
loopne
imul
jne
addr16
daa
jp
mov
cmps
sbb
test
xchg
push
lea
imul
adc
cmp
inc
or
jo
rcr
mov
dec
xchg
jbe
jl
jl
fld
in
push
jg
and
in
xor
push
sbb
cdq
adc
std
ins
push
jae
cmp
dec
sub
pop
movs
fcomp
mov
mov
or
dec
jae
or
fcmove
cwde
test
stos
mov
ret
mov
pop
xor
adc
xor
test
in
shr
loope
cmp
scas
xchg
mov
dec
mov
adc
stc
mov
xchg
ins
retf
fs
mov
jae
repz
push
imul
(bad)
repnz
cmp
push
test
add
lds
pop
movs
mov
dec
jne
inc
adc
adc
mov
std
mov
les
pop
mov
inc
fmul
xor
rol
dec
and
pop
add
pop
sub
adc
inc
add
mov
lock
repz
push
shl
out
add
jo
xor
lea
in
popa
push
jb
sub
cmp
inc
repz
je
mov
ficomp
inc
jnp
fidiv
pop
rcl
jne
in
xlat
lds
jns
dec
fprem1
sbb
aam
lahf
mov
or
sub
out
int3
jp
or
sub
rcl
fld
dec
fnstsw
test
pop
xor
push
push
cmp
or
xchg
add
pusha
mov
and
cwde
and
enter
scas
movs
into
(bad)
xchg
mov
xchg
in
cmp
sub
enter
dec
or
sub
mov
sbb
sar
outs
jle
sub
add
pop
pop
out
adc
pop
push
ins
jbe
into
jmp
cmp
jb
or
lods
cmp
jbe
aas
repz
lahf
jo
and
add
jno
mov
or
out
sbb
mov
shl
push
ret
shl
or
fwait
mov
pushf
mov
into
cmc
inc
cmps
mov
cwde
xor
add
push
cmp
pop
cmp
jae
sbb
xor
cdq
cwde
and
jbe
cmp
sbb
cwde
add
cmps
xchg
out
aas
jg
pusha
pusha
outs
popa
shl
mov
in
gs
pop
or
leave
or
dec
fbld
xchg
mov
xor
add
out
jae
into
pop
jecxz
push
dec
adc
out
movs
ret
adc
and
(bad)
cli
cmps
and
lahf
push
push
(bad)
popa
pop
mov
test
or
mov
adc
xchg
add
add
add
lock
fld
adc
dec
stos
cmps
neg
cmp
mov
xor
fnsave
sbb
cs
xchg
pop
ret
cs
ins
daa
mov
std
add
cmp
or
sbb
pop
imul
xchg
dec
jns
shl
mov
lods
adc
fdivr
pop
daa
lock
sub
jne
mov
stc
mov
out
ror
cs
ror
aaa
jmp
mov
pop
cmp
sbb
popa
xor
lock
push
mov
dec
cli
dec
mov
fnsave
dec
stc
test
nop
jge
cli
cmp
in
mov
inc
fimul
mov
ss
add
sub
loope
adc
xchg
cmp
dec
mov
xor
enter
cmp
cwde
xor
mov
sar
in
in
(bad)
aaa
ins
inc
xchg
stos
out
fadd
js
retf
cmp
or
pop
test
cmp
xchg
gs
mov
test
shl
jns
adc
popa
stos
stos
int3
and
and
push
jmp
imul
adc
add
xchg
lods
cld
xchg
pusha
out
int
push
repz
cmp
ficomp
ret
jns
repz
call
icebp
push
or
ins
outs
mov
cwde
cmc
retf
fistp
clc
and
popf
outs
call
jae
xchg
pop
or
cmps
ret
arpl
and
and
loopne
inc
call
inc
push
add
(bad)
and
imul
push
sbb
ins
jp
(bad)
call
dec
dec
les
pop
arpl
adc
scas
jle
cmp
std
popa
cmps
lds
ins
push
or
cmp
dec
shl
(bad)
aad
pushf
pop
mov
les
in
dec
mov
retf
sub
test
mov
dec
inc
jp
test
popa
(bad)
xor
jmp
pop
cdq
outs
xor
adc
aad
adc
push
stos
aaa
jae
and
adc
hlt
add
mov
dec
ror
test
mov
xor
xchg
adc
mov
pop
js
mov
cmc
(bad)
add
lds
jno
sti
lods
(bad)
fstp
ret
mov
call
and
inc
mov
jns
shr
xor
mov
test
add
(bad)
adc
div
mov
das
fdiv
outs
lock
retf
push
scas
test
xchg
loopne
cli
xor
ja
cdq
jg
cmc
xchg
jmp
cwde
jle
push
and
mov
mov
(bad)
dec
cld
in
push
aas
rol
inc
int3
mov
pop
ror
and
pop
xchg
mov
xchg
sbb
pop
loope
(bad)
gs
dec
(bad)
cs
into
(bad)
xchg
or
pop
add
mov
mov
xchg
jb
stos
xor
nop
scas
cmp
loopne
(bad)
fsubr
fwait
cli
test
xor
push
sub
dec
add
aam
ja
std
out
inc
cli
cwde
in
popa
(bad)
adc
in
cmp
jmp
cmps
xor
add
fsubr
cwde
jg
movs
mov
into
dec
add
pop
pop
or
aad
cmp
push
fdivr
push
fdiv
adc
scas
sti
dec
(bad)
int
jecxz
into
daa
xor
inc
lea
neg
cmp
add
jmp
inc
mov
stc
inc
loope
mov
loope
adc
jo
retf
or
adc
cs
aaa
xor
sahf
scas
cmp
push
in
lock
call
pop
ins
sbb
push
in
loope
dec
xchg
pop
xchg
adc
jl
xor
dec
jp
pop
inc
mov
pop
mov
pushw
sbb
rol
arpl
(bad)
in
in
mov
sbb
inc
rcr
ins
es
out
cli
push
sbb
js
xchg
(bad)
out
dec
(bad)
jg
outs
lds
xchg
mov
(bad)
fstp
test
into
mov
xlat
pop
lock
fcmovnbe
xchg
xchg
mov
mov
push
lahf
cmp
movs
xor
and
in
loopne
std
je
xchg
adc
xchg
adc
add
aad
loope
or
shl
fisttp
inc
imul
icebp
mov
xchg
jle
(bad)
nop
xor
jae
push
pop
sar
icebp
adc
test
lahf
mov
inc
adc
test
sub
push
movs
mov
mov
push
cmc
push
add
test
les
cmp
and
push
inc
push
and
mov
(bad)
jp
or
rol
outs
sbb
or
loope
call
ja
rol
pop
es
xchg
pop
movs
lea
call
enter
mov
add
mov
xor
scas
dec
inc
cmps
out
mov
add
imul
rcl
call
sti
mov
push
mov
jle
jo
jns
push
xchg
mov
pop
add
adc
inc
das
pusha
inc
imul
jge
ror
das
fnsave
fnstsw
push
pop
pop
ins
sub
std
pop
and
fucom
or
call
addr16
lahf
and
int
pop
jae
out
sub
jmp
xchg
pop
add
sub
gs
mov
mov
rol
xchg
sub
(bad)
jno
adc
xor
lea
cmc
sbb
mul
retf
aaa
lods
xor
add
push
in
(bad)
imul
sbb
fisubr
push
test
sbb
xchg
push
jl
jle
adc
mov
enter
mov
mov
dec
sahf
dec
cmc
push
cmps
adc
dec
or
cli
cmps
sub
pop
inc
scas
mov
jne
pop
ficom
mov
test
stos
xor
dec
lods
ds
xchg
push
push
daa
pop
add
dec
dec
cmp
scas
push
mov
adc
lock
mov
jg
dec
pop
push
inc
sti
shl
mov
push
fcom
pop
adc
cld
movs
mov
xchg
and
ins
cmc
pop
cdq
dec
inc
inc
cmps
pop
in
lods
pop
loope
int3
retf
inc
retf
push
mov
inc
push
in
jl
(bad)
and
push
scas
jecxz
xchg
and
cmp
jg
dec
and
sahf
mov
out
xor
js
lods
hlt
imul
jmp
cld
sub
jns
or
shl
int3
pop
mov
int3
inc
xlat
ss
xor
jle
jp
retf
mov
mov
(bad)
ficom
fnstcw
fild
xchg
or
or
mov
(bad)
cmp
cmps
pop
inc
mov
jmp
mov
mov
int3
in
stos
das
sub
xor
pushf
or
ret
or
(bad)
mov
ins
mov
mov
popf
sbb
inc
cmp
pusha
add
dec
outs
cmps
test
fld
dec
xchg
mov
paddsb
pop
call
cdq
or
neg
mov
cmp
mov
pop
sbb
sub
jbe
mov
stos
push
mov
pop
cld
mov
je
sbb
sbb
and
ss
and
adc
jmp
jg
imul
jne
cwde
in
jl
imul
cmp
mov
dec
in
inc
cmp
sub
lods
imul
pop
les
or
xchg
push
in
ret
scas
test
movs
cdq
push
push
cmp
sbb
pop
inc
mov
(bad)
cmp
aam
clc
popa
cmc
add
add
inc
jmp
aam
imul
xchg
and
mov
jmp
jae
jae
sahf
test
lock
sti
retf
xor
adc
mov
es
ss
shl
arpl
mul
pop
dec
loop
adc
mov
inc
sub
inc
jnp
jle
mov
add
cmps
icebp
xchg
pop
pop
cmp
ins
cmc
cmps
ins
mov
sub
(bad)
mov
ret
(bad)
pop
dec
xor
in
fwait
dec
das
in
cs
fisttp
(bad)
stc
mov
imul
xor
mov
fldcw
aam
xlat
movs
push
pushf
mov
les
mov
lds
push
hlt
mov
rcl
lock
dec
xor
push
sub
adc
dec
mov
push
shr
pop
repz
push
das
addr16
pop
and
lods
movs
mov
rcr
inc
inc
dec
push
scas
sbb
pushf
cmp
mov
add
pushf
sub
sbb
add
and
ins
into
sub
pushf
lock
leave
in
dec
cmp
in
fsubr
push
inc
outs
aaa
neg
and
mov
movs
fnsave
fndisi(8087
(bad)
test
pop
popa
sub
xor
js
adc
add
adc
pop
nop
sbb
and
xchg
add
js
adc
into
mov
stc
inc
adc
pop
mov
fidivr
pop
jmp
div
js
xchg
cmc
mov
lea
mov
pusha
addr16
enter
push
jecxz
enter
frstor
hlt
adc
xlat
scas
retf
jb
clc
cmp
push
cmp
rcr
jnp
push
sub
(bad)
sbb
pop
adc
or
pusha
cmps
xor
pop
push
push
sub
jns
(bad)
or
sbb
out
inc
mov
mov
cmp
adc
mov
cmp
sar
sbb
shl
ret
mov
(bad)
xchg
sbb
or
fadd
cmc
stc
dec
cmps
mov
ins
fdiv
inc
add
xchg
(bad)
shl
lock
cmp
in
test
ins
outs
mov
or
jecxz
mov
dec
addr16
dec
mov
adc
adc
fld
in
mov
jl
in
lahf
fwait
ds
jg
inc
daa
and
scas
je
pop
push
push
aas
popa
pop
inc
adc
cmp
in
mov
sbb
push
and
jmp
mov
retf
outs
add
cmp
cli
ficomp
pushf
call
loop
mov
and
pop
sahf
jmp
jae
mov
sub
fldcw
cli
stos
pop
sbb
test
lods
and
mov
push
shl
mov
in
dec
(bad)
retf
cmp
cli
je
and
mov
ret
mov
out
inc
xlat
int
adc
fnsave
xchg
or
push
pop
xor
hlt
(bad)
push
std
icebp
or
cmp
shl
push
cmp
dec
sbb
jge
or
mov
xor
arpl
mov
jb
fwait
inc
cdq
jmp
xchg
inc
inc
sub
cmp
push
jb
fnsave
xor
jae
dec
jl
clc
pop
scas
push
add
jmp
in
mov
dec
and
(bad)
dec
arpl
je
jo
adc
ins
ret
jp
in
popf
jmp
inc
jo
popa
imul
scas
cwde
xchg
retf
pop
xchg
xchg
out
xor
mov
cdq
ds
es
adc
test
lea
stc
retf
pop
gs
fmul
jl
xor
lahf
fiadd
sub
mov
das
and
repz
add
mov
test
in
inc
jno
xor
test
pusha
and
xor
fnstsw
in
jo
hlt
out
ficomp
adc
xchg
pop
dec
adc
rol
cmps
and
push
pop
mov
lock
cdq
jmp
das
repnz
outs
push
jmp
sub
ss
sub
jne
mov
fadd
stos
rcr
shl
and
add
pop
xchg
jns
mov
jp
push
in
xor
mov
mov
call
out
xchg
dec
xor
cmp
(bad)
lea
inc
xor
inc
mov
push
bound
adc
cmps
ja
bound
retf
dec
fisub
dec
das
fs
cmp
dec
sub
cmp
test
clc
popf
ror
xchg
adc
inc
push
div
scas
add
pop
adc
cwde
push
cmps
or
push
js
ficom
shr
mov
loope
push
xor
mov
pop
cld
inc
xor
adc
jl
daa
loop
fnstenv
cdq
add
push
in
dec
pop
pop
cmp
and
and
(bad)
mov
cmp
dec
(bad)
mov
sub
push
jge
test
out
pop
add
out
pop
lds
xor
xchg
pusha
inc
sti
imul
add
sbb
jns
cld
sub
scas
xchg
xchg
xchg
push
mov
sub
xor
mov
adc
mov
and
jne
push
jns
push
dec
push
adc
in
clc
adc
fwait
jl
push
leave
or
mov
or
icebp
add
sbb
cmc
xor
loop
inc
mov
push
xchg
out
test
pushf
xchg
cmp
out
int
iret
jae
inc
or
sub
in
inc
jnp
xchg
(bad)
iret
fs
and
mov
and
mov
jbe
shl
jbe
das
outs
fistp
mov
sbb
es
dec
shr
push
mov
dec
push
jl
dec
cmp
icebp
std
popf
mov
jno
out
adc
popa
jns
retfw
(bad)
xchg
cmp
popa
int3
out
inc
ficomp
mov
jo
out
inc
mov
shl
aam
cmp
bound
xor
or
adc
add
movs
pop
sbb
lods
mov
jl
int
stos
pusha
pop
xchg
ror
xchg
jne
xor
popf
pop
and
mov
stos
out
mov
stos
sub
and
call
push
lea
shl
rcr
push
inc
xchg
fcmovne
mov
movs
jnp
and
jecxz
pop
shl
mov
mov
jp
(bad)
and
repz
lea
inc
(bad)
and
jne
xor
push
sub
mov
scas
dec
mov
xchg
push
push
mov
pop
xchg
push
(bad)
and
add
imul
pop
add
aad
mov
loopne
xchg
fcom
addr16
cmp
pop
sbb
jns
(bad)
mov
fucomi
xor
jl
scas
cmc
scas
pop
xor
aas
xchg
call
xchg
repz
and
xchg
jns
jmp
or
adc
cmp
movs
js
pop
mov
les
cwde
jo
xor
cmp
lea
xchg
jae
xchg
popf
lahf
mov
imul
sub
push
pushf
test
lds
pop
es
ret
sti
cs
xchg
xchg
daa
mov
jnp
jg
mov
je
je
pusha
mov
aad
jp
clc
aaa
jl
xor
cmps
mov
inc
mov
mov
mov
call
and
gs
sub
scas
add
sbb
daa
fs
jmp
sbb
pop
sub
pop
loop
fcmovnb
sub
pushf
sar
xor
retf
pop
jno
push
movs
xor
mov
dec
pop
je
jp
mov
ins
push
jle
and
mov
jmp
out
int
cmc
leave
inc
jbe
nop
sbb
add
imul
mov
xchg
in
pop
movs
mov
sub
xor
pushf
xchg
loopne
dec
mov
mov
and
sar
sti
mov
dec
cmp
rcl
jo
(bad)
jo
outs
aaa
bound
pop
ss
inc
dec
imul
xor
dec
sub
mov
fidivr
xchg
popf
cmp
dec
outs
push
test
lods
add
pop
mov
push
xor
mov
sub
jmp
add
inc
cmps
adc
add
test
mov
movs
push
mov
mov
inc
rcr
icebp
mov
outs
ins
mov
add
mov
fidiv
mov
popf
mov
xchg
cmp
pop
mov
xchg
push
into
shl
mov
mov
jns
xor
(bad)
push
cdq
and
mov
jo
rol
rcl
rcr
or
xchg
mov
(bad)
fnstenv
in
ja
mov
cmp
mov
inc
rol
push
sahf
mov
add
add
hlt
jnp
test
sbb
mov
dec
inc
in
mov
in
outs
mov
mov
leave
pop
shl
dec
outs
xor
mov
and
(bad)
shl
or
xlat
pop
or
adc
push
in
cmps
cmp
pop
mov
xor
inc
pop
sbb
dec
stc
jbe
push
sbb
push
pop
das
or
mov
mov
xchg
fdivr
mov
fwait
sub
outs
dec
movs
sub
cmp
jecxz
das
imul
add
into
int3
jmp
loope
cmps
xchg
not
cmps
js
pop
xor
in
sub
icebp
pop
into
and
mov
mov
push
je
call
mov
mov
or
inc
lahf
dec
adc
loop
pop
in
mov
out
xor
inc
mov
mov
jno
addr16
jecxz
imul
sub
loop
sti
stc
xchg
adc
pop
sti
and
repnz
cs
imul
ins
sar
mov
int
call
(bad)
xor
adc
test
(bad)
mov
lods
cmp
stos
ins
test
mov
push
or
out
push
dec
shl
cli
bound
repz
jbe
rcl
aam
aas
out
(bad)
mov
sbb
icebp
iret
imul
xchg
stos
loope
xchg
push
out
adc
jle
out
call
movs
ds
sub
scas
rol
mov
inc
iret
mov
xchg
sbb
inc
or
ins
sub
js
sub
or
push
out
fnstcw
jo
adc
sti
mov
jmp
in
dec
loopne
or
test
dec
test
in
loopne
dec
add
das
lods
bound
pop
es
mov
iret
or
int3
inc
std
sbb
push
shr
(bad)
rcr
into
cdq
mov
mov
fbld
push
dec
scas
lds
icebp
mov
mov
mov
div
scas
adc
dec
mov
xor
not
fcom
std
cmp
xchg
dec
mov
fidiv
push
bound
push
mov
mov
sbb
cmp
fucomi
xlat
push
xor
nop
mov
jecxz
xchg
dec
and
mov
cmp
xor
pop
repz
pop
ret
pop
inc
mov
cmp
mov
and
sbb
jno
or
mov
repnz
aaa
jmp
rcr
and
sbb
lock
ss
(bad)
pop
push
add
jmp
bound
push
enter
jns
fsub
out
leave
cmps
push
sub
stos
xor
pop
cmp
jae
leave
leave
add
out
mov
push
aad
imul
out
into
add
call
inc
or
push
cmp
add
(bad)
adc
or
cmp
cli
imul
push
and
and
in
pop
jae
and
in
xchg
sbb
arpl
xchg
(bad)
pop
mov
mov
xchg
dec
push
stc
scas
inc
(bad)
sub
mov
xchg
rcl
mov
(bad)
shl
add
xchg
sbb
mov
aas
push
inc
daa
inc
jl
inc
adc
xchg
(bad)
push
add
or
mov
mov
mov
sub
(bad)
mul
pop
inc
mov
pop
fstp
repz
int3
cmc
int3
lea
inc
xchg
hlt
outs
mov
mov
das
jle
mov
and
addr16
dec
cdq
push
inc
fsub
nop
nop
cmp
or
fcmovb
jl
sub
ja
push
jmp
inc
adc
sub
pop
repnz
mov
int
les
stc
and
sub
out
lahf
je
xor
movs
dec
mov
jns
xlat
or
daa
push
sti
out
(bad)
retf
pop
hlt
mov
push
or
jb
pushf
cmp
jae
js
cmp
push
mov
sbb
shl
cmp
clc
loopne
aam
mov
mov
xchg
mov
aaa
fistp
cs
jp
js
icebp
adc
js
xor
lea
push
icebp
sar
inc
jmp
jle
mov
mov
fistp
sbb
aam
cmp
sub
out
lods
mov
jp
xor
test
push
jnp
rol
add
jno
(bad)
dec
sub
adc
mov
pusha
fbld
and
mov
mov
mov
and
cmp
popf
aas
lahf
xor
outs
addr16
lahf
mov
into
jb
retf
rep
loop
stos
jge
sbb
scas
mov
mov
fstp
in
shl
add
push
pusha
or
jnp
cmp
hlt
mov
cmps
mov
ds
scas
cmps
cwde
sahf
les
mov
in
(bad)
push
mov
sti
dec
sub
or
push
adc
fdivp
mov
out
jle
jl
jg
or
inc
movs
jo
adc
mov
push
movs
(bad)
or
jns
mov
cwde
add
aas
cld
or
fisttp
clc
push
cdq
jns
ds
xchg
mov
mov
mov
(bad)
ret
add
cmp
clc
sar
imul
jle
adc
or
push
in
shl
hlt
xor
imul
dec
adc
xchg
sub
cmp
ret
mov
fsubr
pop
std
test
loop
iret
adc
mov
pinsrw
inc
test
(bad)
jp
fidiv
paddsw
and
adc
or
loop
adc
sbb
retf
xchg
dec
cmp
lea
and
mov
jle
shl
lods
xchg
mov
es
adc
mov
fs
sub
test
and
add
ins
push
sub
movs
cld
std
jbe
lock
enter
mov
(bad)
lock
pop
loope
mov
pop
push
(bad)
xchg
cmps
mov
bnd
sub
ins
cmp
xchg
cmc
or
dec
xchg
ror
fadd
outs
pusha
mov
pop
lock
iret
mov
arpl
mov
push
xchg
movs
and
add
jb
imul
cld
(bad)
stos
mov
cmc
mov
cld
ret
rcr
pushf
jge
xchg
mov
neg
jp
xchg
mov
es
add
pusha
loopne
jno
jle
sub
mov
scas
sub
stc
aad
out
out
xor
dec
fwait
mov
fidiv
(bad)
in
mov
xor
iret
dec
sub
ror
xchg
inc
mov
add
mov
xchg
inc
fwait
jbe
or
xchg
sbb
jno
mov
sub
out
push
adc
fcom
push
mov
xor
cmp
sbb
(bad)
mov
dec
dec
cwde
data16
sub
(bad)
ss
jle
cmp
sub
pusha
lods
mov
loopne
pop
hlt
and
movs
and
pop
stos
add
adc
xchg
stc
add
dec
fnstcw
(bad)
call
sbb
call
or
inc
aaa
lock
out
mov
mov
out
inc
int3
stos
sbb
sub
rep
stc
pusha
mov
aad
push
aaa
in
push
dec
out
push
and
into
in
push
test
cld
xor
jnp
aam
hlt
ins
imul
adc
add
mov
cmp
ins
mov
pop
in
(bad)
mov
or
sub
pop
xchg
fucom
push
cmp
dec
pop
add
fcomp
xor
mov
dec
mov
xchg
retf
lahf
and
xor
ret
jbe
xor
push
aas
daa
push
out
xchg
jae
cmp
adc
ins
sar
xchg
ja
jecxz
retf
leave
retf
inc
addr16
xor
cmp
imul
cmp
add
fmul
adc
mov
add
mov
xor
div
lock
out
and
int
xchg
xor
ficomp
dec
loop
mov
lods
mov
add
ins
fisttp
xor
or
xor
pop
pushf
in
mov
mov
fsubr
jecxz
sbb
jo
leave
mov
popa
movs
cmps
push
pop
mov
test
cmps
scas
addr16
sbb
inc
jns
or
and
ds
push
fld
add
movs
add
mov
push
sub
add
movs
popa
xor
ins
pop
clc
xchg
(bad)
dec
sbb
add
mov
xor
xchg
adc
(bad)
(bad)
cmps
in
mov
retf
inc
and
adc
daa
pop
sbb
shr
retf
mov
cli
lods
es
idiv
in
ffree
js
leave
and
fist
daa
xchg
xchg
cmps
cmp
cmp
xor
movs
test
ja
xchg
push
sub
scas
inc
in
mov
test
fldcw
fcomi
lock
push
push
cmc
add
je
jp
cwde
or
fistp
adc
test
test
adc
jb
ficomp
lock
mov
inc
sub
dec
(bad)
stc
not
jns
lods
push
jno
jg
popf
mov
mov
pop
fidivr
dec
push
mov
(bad)
ins
stos
and
icebp
dec
pop
jo
fdiv
xchg
and
sbb
ins
mov
cmp
cwde
inc
cmp
les
mov
push
loopne
pop
dec
movs
ins
loope
jl
xor
outs
int
add
jmp
retf
cmp
stc
mov
dec
or
pop
sub
mov
psubsb
ins
push
lock
mov
push
popf
fdivr
imul
loopne
popa
push
retf
inc
push
jnp
mov
jno
cmps
aad
stos
pop
and
push
pop
cmc
mov
cmps
xchg
pop
enter
pop
mov
mov
inc
into
ins
pop
(bad)
iret
outs
aad
outs
and
xchg
mov
mov
movs
cmp
aaa
pop
push
dec
aad
mov
fisub
dec
lods
adc
rcl
icebp
mov
push
lock
jmp
data16
ss
push
jbe
fstp
neg
and
clc
dec
cs
dec
clc
push
mov
sbb
repz
jp
in
call
sbb
mov
mov
and
cmc
push
shl
cs
ins
das
cmp
int3
add
sub
xchg
push
mov
mov
(bad)
clc
sti
or
pop
push
jbe
mov
inc
add
into
fimul
push
test
cdq
cmp
std
arpl
iret
push
clc
inc
popa
retf
mov
inc
bound
ins
pushf
je
ds
neg
jge
dec
mov
pushf
xlat
cmc
inc
cmp
mov
mov
imul
call
xlat
pop
shl
inc
mov
and
sar
push
adc
cmp
cmp
mov
push
mov
(bad)
xchg
iret
xlat
in
das
adc
add
cmp
jmp
imul
imul
dec
cmp
pop
mov
dec
les
pusha
mov
cmps
add
mov
pop
mov
xlat
pop
add
adc
mov
pop
jno
popf
ins
lods
sbb
fsub
xor
push
mov
loopne
ss
retf
pushf
inc
xchg
js
xor
pushf
jo
jp
ror
mov
and
paddq
cmc
and
cmp
xchg
sub
rol
ss
mov
sub
adc
cs
mov
mov
cmp
jo
test
mov
cmps
daa
adc
mov
push
dec
push
xchg
not
mov
add
int
mov
cmp
movzx
jmp
js
or
cwde
add
addr16
lds
add
popa
out
jle
xchg
fwait
pop
icebp
inc
cmp
dec
ja
(bad)
adc
pop
out
test
xchg
stos
imul
mov
pop
add
js
cmp
fisubr
and
popa
je
push
lea
xor
cmp
push
push
dec
jecxz
pop
jp
jle
dec
jl
mov
aam
mov
pop
(bad)
mov
mov
stmxcsr
or
adc
aas
adc
ret
mov
pop
sub
pop
xor
(bad)
dec
movs
jecxz
jmp
mov
mov
pop
iret
pushf
mov
or
add
sbb
mov
fistp
sbb
shl
jne
dec
popa
pusha
dec
mov
icebp
or
call
scas
fild
dec
and
int
pop
cmc
xchg
cs
and
cdq
nop
icebp
lds
in
fistp
cmp
jg
push
lahf
mov
sahf
cmp
xor
(bad)
mov
adc
arpl
nop
aas
ret
cdq
jnp
xchg
inc
mov
call
nop
xchg
mov
lea
mov
xor
mov
push
pushf
out
in
jbe
dec
cmp
iret
sub
add
add
add
jno
fstp
sub
add
out
sbb
sub
pop
jmp
jmp
test
int3
out
sub
sbb
push
in
into
shr
adc
fsub
out
fs
inc
nop
in
movs
sub
movs
mov
out
fmul
adc
ins
ss
fld
dec
repz
sbb
pop
cwde
scas
test
in
out
sub
pop
int3
inc
add
jbe
aas
xchg
and
inc
pop
stos
jmp
loope
push
xor
or
mov
jne
data16
mov
test
jbe
imul
sub
imul
nop
out
push
hlt
sbb
xlat
fidiv
stc
xor
xchg
je
and
fild
sbb
add
or
sub
add
jmp
or
outs
cdq
repnz
lods
sub
adc
inc
dec
dec
scas
and
jmp
lahf
mov
xor
das
(bad)
cmp
in
repnz
outs
xchg
jno
push
fwait
xchg
pop
inc
mov
cld
mov
outs
cs
popa
in
outs
mov
cmps
pop
adc
neg
imul
sbb
cs
bound
mov
loopne
scas
and
out
sbb
ret
ret
repz
test
cs
int
xchg
xor
mov
pop
mov
mov
cs
xchg
xchg
bnd
mov
out
not
pop
sbb
xchg
and
mov
popa
nop
loopne
popa
pushf
test
jbe
lds
je
xor
pop
sub
dec
inc
sub
mov
cli
or
mov
in
dec
xlat
push
mov
adc
dec
rcl
leave
inc
loopne
add
jns
sti
dec
inc
mov
(bad)
es
dec
in
out
jo
jbe
pop
ret
data16
pop
loop
push
push
or
sub
mov
inc
mov
push
adc
fs
dec
pop
test
mov
jg
repz
addr16
mov
pushf
mov
lods
lds
sub
push
pop
aaa
or
push
addr16
mov
jmp
in
and
dec
rol
shr
and
jl
xchg
fisubr
js
in
es
icebp
pop
push
inc
jns
repz
sub
ret
arpl
mov
loop
or
xchg
int
stos
push
ror
mov
mov
mov
xchg
jecxz
lock
and
lods
ret
arpl
test
xchg
and
sbb
jmp
pop
adc
add
sub
xchg
xor
jb
in
and
xchg
(bad)
mov
hlt
enter
popa
and
mov
jae
stos
dec
mov
push
pop
repz
call
xor
popf
shl
fiadd
add
jno
out
cmp
call
cmc
cmp
pop
loopne
mov
mov
or
mov
pop
pop
mov
(bad)
xor
and
(bad)
cli
ins
xor
or
pop
lea
pop
cmps
pop
push
loop
sub
gs
cmp
jno
push
into
fsub
idiv
or
cli
in
out
fwait
test
cmp
movs
jae
mov
sub
and
mov
inc
sbb
cmovno
inc
adc
addr16
pop
in
push
enter
jno
loope
or
icebp
in
xchg
sub
rcl
or
ficom
sub
push
lahf
inc
push
mov
rcr
test
push
push
aas
test
dec
push
xor
mov
enter
add
scas
ja
aam
loopne
sub
test
stos
repz
adc
xor
cld
js
rcr
dec
cmp
dec
call
shl
jno
ds
popf
into
push
in
fcmovnu
(bad)
fild
sub
sti
sbb
pop
xchg
cmp
jns
inc
rcr
(bad)
movs
aad
lea
int3
test
mov
adc
stc
push
(bad)
xor
les
adc
xchg
gs
jl
sub
inc
(bad)
push
xchg
(bad)
in
jmp
ret
dec
sbb
imul
push
test
test
out
enter
mov
adc
(bad)
jmp
mov
push
aam
push
jmp
lock
jns
(bad)
es
fbstp
imul
jbe
mov
push
mov
(bad)
ss
jne
push
mov
fmul
mov
ror
pop
mov
lds
(bad)
clc
or
arpl
dec
mov
mov
ret
adc
inc
fadd
(bad)
push
imul
clc
mov
aas
jp
cmp
and
ja
adc
out
out
pop
jecxz
push
jp
or
sub
ja
loop
jno
in
std
fld
scas
jmp
xor
pop
cmp
jp
inc
nop
lock
adc
add
cli
pop
mov
adc
mov
push
mov
sub
lock
ins
and
dec
jbe
cmp
jb
aas
and
scas
outs
cdq
xchg
out
add
call
inc
ds
mov
mov
mov
test
jg
pop
fwait
dec
mov
call
je
sbb
retf
dec
js
or
ftst
jno
std
into
lods
inc
push
movs
in
push
push
in
mov
dec
and
mov
leave
push
sbb
shl
gs
sub
and
ja
push
out
ret
cmp
ret
out
repz
add
je
push
imul
ficom
ss
add
int
xchg
imul
stos
mov
cmp
inc
mov
das
(bad)
scas
push
pop
ficomp
jmp
and
sbb
push
dec
les
mov
pop
jp
cwde
stos
es
jnp
shr
in
call
ja
scas
cld
dec
jecxz
popa
adc
cmp
mov
nop
fst
retf
xchg
adc
cmps
mov
jb
repz
jge
stos
inc
mov
imul
sbb
push
sar
mov
mov
cmp
mov
dec
sar
mov
in
cmp
sbb
clc
or
push
das
jmp
enter
popf
and
cmp
and
dec
mov
inc
xor
jmp
loope
cmps
bnd
dec
pop
pop
loopne
aam
es
repz
cmp
push
(bad)
xchg
push
mov
pop
pop
push
int3
push
mov
pop
pop
test
add
push
std
mov
std
push
jg
test
pop
mov
ds
mov
jns
mov
inc
stos
ficomp
pop
push
dec
add
or
jmp
fisttp
scas
adc
jb
adc
inc
mov
cmp
dec
push
data16
dec
dec
mov
retf
(bad)
(bad)
xor
add
bound
mov
push
mov
mov
mov
and
xchg
push
cwde
dec
pop
pop
cdq
movs
hlt
push
addr16
lods
(bad)
and
mov
and
lock
in
out
cmp
add
adc
dec
(bad)
jl
add
mov
mov
rcr
(bad)
mov
push
dec
and
add
jg
pop
jl
lock
inc
xchg
ret
push
xchg
xor
imul
imul
shl
lahf
xchg
sbb
stos
xor
aad
mov
mov
xchg
push
lahf
cwde
push
mov
mov
gs
sub
fdiv
jge
and
aad
ja
repz
and
jmp
aad
push
push
repz
push
pop
in
rcr
bound
neg
das
mov
lock
ins
push
stos
popa
pop
in
stos
les
fpatan
adc
ss
xchg
fistp
push
push
out
cmp
mov
sub
adc
bound
xchg
jg
aad
(bad)
push
pop
gs
xchg
int3
adc
or
push
push
fwait
xor
mov
push
cmp
int3
es
jmp
jne
dec
sbb
mov
push
mov
mov
xor
hlt
in
xchg
xor
mov
jo
sbb
es
int
(bad)
hlt
sbb
push
es
push
inc
loope
cmp
sbb
imul
in
mov
ja
xor
adc
dec
mov
mov
call
stos
adc
loope
dec
stc
(bad)
mov
pop
mov
addr16
push
dec
mov
inc
out
and
fdiv
fwait
fwait
sbb
push
cmps
pop
mov
pop
es
in
pop
dec
xchg
add
call
cmc
add
mov
push
ficom
(bad)
or
stc
adc
adc
or
js
out
push
jbe
inc
sbb
inc
mov
aaa
ror
int
mov
pop
fwait
ret
les
in
mov
pop
mov
in
pusha
jbe
dec
outs
inc
or
dec
fcomi
cmp
xlat
(bad)
jns
mov
xchg
mov
sti
repnz
addr16
(bad)
adc
inc
push
and
inc
lods
ficom
test
cmps
mov
scas
push
mov
jo
bound
xchg
test
sub
inc
mov
or
call
fisttp
mov
xor
aad
in
jno
call
outs
adc
std
imul
cmp
(bad)
jp
js
loop
pop
hlt
retf
jp
fs
imul
sbb
lock
inc
jo
fimul
mov
xor
loope
mov
lea
mov
out
lahf
mov
in
add
sbb
or
addr16
(bad)
cmp
pop
add
dec
adc
cmp
dec
xchg
hlt
cmp
sti
rcr
into
aas
arpl
jp
and
pop
out
jge
pop
mov
loope
cdq
mov
add
xchg
jb
movhps
inc
sbb
dec
pushf
lea
and
jns
and
bound
in
scas
div
jae
pushf
xchg
fmul
sti
ret
and
test
pop
imul
fs
sub
hlt
dec
push
pop
imul
push
in
jecxz
sahf
(bad)
mov
scas
cmp
mov
(bad)
pop
imul
inc
xor
mov
bswap
inc
jno
repz
rcr
dec
cmp
ins
and
daa
push
test
aam
push
ds
fsub
imul
(bad)
pop
xor
xor
sub
test
and
cdq
jbe
or
repnz
xchg
sbb
in
popa
and
or
jp
jae
aad
mov
retf
outs
jmp
sti
cmp
das
(bad)
mov
ret
mov
mov
dec
cmp
bound
test
jmp
hlt
inc
xchg
mov
rol
cli
jbe
(bad)
mov
sahf
movs
pop
outs
xchg
test
jp
adc
cmp
sub
jge
cwde
jecxz
aam
lods
ret
retf
mov
in
je
sub
rol
xchg
cs
push
cmc
ret
fwait
sbb
ret
iret
dec
jmp
adc
push
mov
adc
mov
adc
out
pop
pop
xchg
(bad)
mov
cmps
or
sub
clc
test
inc
sti
in
mov
pop
add
rcl
ds
test
add
cmp
test
adc
xor
or
cmp
cmp
add
in
enter
cdq
test
dec
dec
stos
mov
jg
push
loop
mov
mov
jp
mov
ja
push
sbb
dec
dec
and
mov
cmp
push
inc
jecxz
mov
mov
sub
mov
jmp
push
adc
inc
pop
fsub
sahf
leave
in
mov
int
mov
push
leave
cmps
mov
imul
aad
pop
push
inc
cmp
stc
outs
mov
repnz
sub
cmp
loope
or
stc
add
cmp
cs
add
outs
pop
mov
rcr
mov
sub
mov
push
sub
(bad)
xchg
not
adc
addr16
mov
fcom
mov
ret
xchg
xor
lds
pop
not
mov
pusha
and
repnz
loope
je
dec
call
test
xor
mov
sahf
xor
xchg
pop
mov
cmp
xchg
imul
or
test
adc
dec
sub
pop
mov
imul
push
mov
fwait
add
add
rol
(bad)
sub
shl
pusha
or
ja
xchg
dec
mov
push
pop
mov
mov
xor
repnz
push
push
lods
stc
inc
(bad)
ins
call
shl
scas
xlat
add
sti
jl
cmps
adc
pop
test
lock
mov
add
mov
sub
ret
ficom
push
pushf
(bad)
mov
push
ja
mov
mov
adc
add
fld
in
mov
packssdw
cmps
pop
sbb
les
shl
je
mov
jbe
in
xor
push
test
push
in
mov
pop
mov
mov
leave
mov
or
sbb
daa
(bad)
sahf
sbb
adc
ins
test
inc
push
retf
pushf
call
pushf
pop
jge
adc
pop
adc
inc
mov
pop
mov
mov
(bad)
movs
mov
ficomp
sar
ret
fwait
jbe
pushf
int
or
sub
mov
sbb
mov
xor
mov
pop
sub
sub
push
inc
jno
movs
ins
fld
outs
adc
lds
shl
pop
sub
mov
or
rol
jl
mov
ins
xor
shl
and
mov
stc
push
sub
mov
imul
test
in
scas
ss
pop
out
cmp
bound
adc
shr
mov
sub
mov
lods
xor
mov
mov
cmp
dec
inc
std
cld
aaa
js
dec
xor
fistp
lds
jns
scas
xchg
enter
hlt
fcmovnb
jg
imul
scas
jl
sub
pop
ins
xor
fs
stos
xor
out
pop
cmp
lods
lock
xchg
mov
test
mov
mov
pop
jae
out
lahf
or
mov
popf
jmp
sbb
sbb
sub
cmp
mov
mov
je
jno
aaa
iret
ss
lds
pop
push
sub
push
xchg
pop
iret
or
ret
sahf
(bad)
pop
fwait
fs
mov
push
aad
inc
imul
dec
paddusw
into
mov
xor
mov
mov
push
not
lea
aaa
std
sar
fstp
sub
out
fs
push
or
cmp
inc
jmp
stos
sahf
adc
or
(bad)
shl
arpl
pop
outs
sub
in
adc
aaa
fst
add
and
mov
push
sbb
xchg
jmp
sub
(bad)
mov
dec
call
leave
aam
fs
test
mov
adc
arpl
dec
dec
mov
or
xchg
mov
cmps
dec
or
js
xchg
cdq
mov
sub
add
inc
xchg
mov
jne
mov
je
adc
fs
clc
mov
daa
adc
mov
lahf
outs
push
cmp
ins
xchg
loopne
int
push
pop
mov
jb
sbb
outs
icebp
(bad)
jno
repnz
clc
int3
sub
push
xchg
cwde
pusha
repnz
cwde
nop
(bad)
ins
pop
sbb
mov
mov
jbe
pop
fisubr
and
(bad)
repz
jg
xchg
add
ficomp
inc
inc
sbb
cwde
sbb
ror
and
cmp
jb
xchg
add
and
mov
(bad)
cmp
add
xchg
cdq
outs
add
lods
scas
fdivr
js
mov
dec
daa
sbb
shl
ss
dec
dec
js
addr16
inc
mov
mov
inc
sub
repz
dec
fild
jno
sbb
push
repz
(bad)
xor
fadd
mov
add
xchg
jo
retf
imul
dec
push
add
add
lea
adc
cs
add
mov
pushf
pop
xchg
pop
cli
inc
call
mov
(bad)
sti
test
cmp
pop
mov
pop
jp
mov
(bad)
mov
pop
xchg
pop
jl
mov
fs
loopne
push
sub
cli
mov
imul
mov
add
mov
sub
fld
in
cmp
mov
out
fcomp
xchg
call
std
mov
cmp
mov
int3
mov
cmps
mov
push
pushf
enter
stos
push
pop
in
(bad)
mov
ret
push
imul
mov
xchg
pop
xchg
mov
add
dec
lea
jae
lods
mov
push
add
add
(bad)
out
jae
ins
cdq
nop
adc
iret
jmp
jmp
xor
repnz
lods
cld
fist
(bad)
enter
pop
sbb
jb
rcl
push
(bad)
test
out
cmp
push
std
mov
sbb
xchg
sbb
maskmovq
imul
outs
mov
xor
(bad)
or
jno
les
inc
sbb
test
jmp
mov
cdq
adc
and
jb
xor
cmp
ror
inc
daa
inc
pop
push
push
adc
std
fldenv
(bad)
sub
xchg
or
int3
add
lock
repz
cdq
mov
and
adc
jle
cmp
pop
call
cmc
jb
mov
rcpps
loop
mov
add
fld
jmp
ror
mov
push
cmp
mov
in
mov
mov
stc
test
xchg
adc
nop
xchg
fstp
data16
data16
mov
pushf
push
lds
nop
daa
jnp
outs
int
cmps
xchg
push
lods
in
xor
push
repz
inc
pop
jle
inc
mov
adc
cmps
stc
movs
enter
test
rol
dec
push
in
inc
dec
push
out
clc
shl
push
outs
mov
and
xchg
xchg
shl
iret
jo
not
lea
jecxz
mov
stos
data16
push
jecxz
ds
aas
inc
std
or
mov
mov
sar
add
push
xchg
sbb
in
(bad)
stc
loope
jns
cmp
repnz
shl
jle
jp
in
mov
dec
mov
clc
add
xlat
test
push
sub
jbe
cmps
pusha
add
sub
pop
cmp
scas
retf
xchg
sti
dec
inc
cmps
mov
dec
dec
xor
mov
inc
in
push
je
aam
push
fld
pop
pop
jae
cmp
push
push
jp
imul
xchg
pop
push
adc
test
xchg
movs
hlt
dec
and
jbe
push
jo
loopne
pushf
lea
cmp
icebp
mov
jmp
int
sub
lea
xchg
leave
mov
lods
push
repnz
push
js
xor
gs
xchg
push
xchg
fwait
mov
mov
test
iret
popf
mov
jno
into
cmp
push
sub
mov
xor
fcomp
mov
sub
dec
sbb
sbb
add
shl
das
nop
rcl
add
pushf
mov
test
push
lock
or
iret
fidivr
fild
jle
jns
loopne
daa
add
inc
jl
fsub
dec
iret
int3
sahf
js
pop
mov
adc
dec
(bad)
sti
bound
adc
jb
imul
cmp
ds
fimul
pop
rcr
sub
dec
or
jle
jns
stos
repz
das
sub
jno
mov
repnz
xchg
(bad)
xlat
pusha
in
adc
retf
stc
sti
pop
sub
pop
rol
or
fwait
push
or
in
add
sbb
fcomp
mov
mov
adc
scas
pop
daa
pop
xchg
pusha
popf
and
pop
or
jp
stos
mov
dec
ins
push
sti
cmp
mov
mov
inc
ror
mov
push
cmp
aas
xchg
outs
mov
inc
das
fadd
mov
lea
fisttp
mov
aad
dec
rol
jmp
loopne
dec
xor
adc
xchg
sub
push
mul
inc
in
cli
inc
sbb
add
push
loope
sub
sub
or
mov
inc
mov
nop
fild
rcl
add
jbe
mov
inc
bound
aad
jae
inc
mov
cmp
outs
repnz
call
pop
cmc
sub
ins
pop
adc
xor
xchg
xor
out
mov
imul
popa
shl
js
fist
movs
mov
and
mov
gs
xlat
cmp
mov
or
out
jbe
out
pop
call
aaa
add
movs
(bad)
cmps
adc
mov
jl
lock
mov
cmp
sbb
xlat
jp
les
scas
imul
test
cmp
cvtpi2ps
jae
test
mov
sub
mov
shl
cdq
sbb
fisubr
cmp
ror
nop
popf
aad
mov
div
jp
cmp
cmp
stc
arpl
fs
mov
mov
mov
sar
ja
xchg
imul
jmp
dec
adc
in
stos
cmp
jno
into
adc
in
inc
jl
daa
cmp
and
ds
hlt
(bad)
sbb
dec
imul
mov
stc
pop
inc
add
mov
dec
hlt
hlt
inc
fs
es
jnp
not
(bad)
sub
ins
dec
pop
into
in
inc
test
or
sub
or
jb
jge
test
and
jne
test
cld
outs
cmp
pop
scas
imul
leave
fstp
jnp
(bad)
mov
test
aam
mov
loopne
add
mov
(bad)
cmps
pop
sub
jns
sub
pop
fcomp
imul
call
das
fwait
mov
push
cmps
out
and
outs
cdq
scas
(bad)
lds
out
repnz
or
popf
and
mov
pop
mov
mov
mov
jecxz
(bad)
cli
or
inc
popa
int
out
fidiv
outs
inc
jae
sub
test
xor
adc
je
push
jno
or
mov
jmp
test
jo
cmp
sub
xchg
sbb
xor
ret
inc
cmp
push
mov
sub
mov
aad
mov
xor
adc
mov
cld
rcl
cmp
sub
(bad)
cli
push
cli
and
sub
and
outs
and
pop
jmp
adc
sub
clc
and
retf
adc
mov
sahf
jmp
in
clc
retf
sub
repz
xchg
sti
inc
lods
sub
xor
call
call
test
cmp
and
cmp
mov
mov
fwait
and
or
in
enter
lahf
in
iret
outs
call
push
xchg
or
scas
push
call
cmc
push
outs
xlat
shl
(bad)
stc
jl
stos
mov
push
not
shl
int3
cdq
dec
fld
pmullw
in
adc
ss
in
outs
jmp
xchg
cmp
sbb
jns
dec
stos
stc
and
cmc
push
daa
xor
icebp
xor
push
or
shl
imul
popw
sub
retf
rol
jne
sbb
mov
ins
dec
and
mov
jbe
repnz
test
(bad)
xor
(bad)
(bad)
sub
mov
and
push
dec
sbb
jmp
sbb
jp
mov
jg
stc
pop
and
retf
adc
dec
push
movs
inc
cmp
fidiv
xor
sub
leave
mov
sbb
jno
pop
(bad)
aas
push
cmp
out
or
ret
inc
lods
mov
cmp
mov
jecxz
adc
cmp
jns
imul
neg
xchg
shl
xor
sbb
cwde
(bad)
mov
aaa
jbe
pop
fadd
xor
xor
nop
enter
fs
mov
sub
iret
ret
mov
fwait
dec
repnz
imul
imul
mov
adc
xor
cmp
xor
aam
adc
test
cmp
shr
mov
dec
sub
push
movs
fxch
or
adc
xor
aaa
cmp
jp
dec
xor
imul
sub
mov
jno
sub
jecxz
(bad)
stos
cmp
or
xlat
inc
jp
inc
add
int3
pop
xchg
outs
pop
sbb
arpl
sub
mov
cmp
adc
popf
xchg
inc
enter
xor
add
gs
ror
scas
jnp
pusha
gs
shl
pop
add
movs
(bad)
add
xor
push
mov
mov
sub
jae
inc
ins
cmp
add
mov
push
sbb
stos
push
and
xchg
mov
cmps
aas
pop
xchg
movs
aad
rcl
fst
add
or
jp
sbb
retf
aad
inc
cmp
xor
bound
mov
adc
popa
retf
mov
movs
mov
ds
out
and
enter
jno
aaa
out
dec
out
jns
mov
mov
xchg
mov
fnstcw
enter
pop
imul
mov
rcr
mov
or
call
and
outs
loope
push
dec
cmp
ror
pushf
adc
(bad)
icebp
das
jl
xchg
movs
or
aaa
iret
cwde
icebp
xchg
cs
data16
mov
mov
dec
stc
sub
outs
add
adc
retf
js
xor
and
jecxz
pop
neg
hlt
sbb
hlt
addr16
fidiv
jge
mov
je
fsubr
shl
out
ror
fdivr
push
xchg
jno
push
sahf
jge
add
aaa
into
(bad)
cmc
and
jae
(bad)
dec
scas
sbb
retf
je
jmp
stos
mov
dec
and
pusha
sahf
push
stos
shl
movs
neg
push
(bad)
sub
das
inc
jo
inc
bnd
loop
data16
bound
daa
mov
stos
push
cmp
pusha
sbb
or
mov
scas
(bad)
imul
outs
push
rol
jmp
mov
or
lock
lods
jmp
fidiv
xchg
movaps
(bad)
or
ret
jg
(bad)
fimul
jo
cmps
xor
call
inc
popf
ss
adc
xchg
or
mov
pop
cmp
or
mov
std
push
stc
mov
sahf
push
int
cld
mov
cmp
sbb
in
add
std
clc
mov
(bad)
push
xchg
push
dec
ss
pop
or
sar
fwait
(bad)
repz
cmp
jmp
test
out
pop
ror
mov
enter
xchg
add
inc
push
test
ss
inc
xchg
mov
dec
or
nop
inc
add
jecxz
test
and
fild
xor
jg
sahf
(bad)
bound
sbb
cmp
pop
ficomp
dec
xor
loop
jle
inc
in
jmp
or
mov
mov
mov
and
cmp
jno
pop
sub
jle
add
push
push
cmp
lods
and
or
add
mov
and
jge
in
pop
rcr
or
and
mov
mov
pop
gs
push
dec
push
imul
jae
std
pop
lds
call
dec
adc
inc
pop
adc
idiv
enter
pop
push
sbb
and
ror
sub
and
push
jmp
xor
test
data16
sub
jg
pop
sbb
mov
imul
mov
xchg
std
push
fadd
mov
nop
or
sbb
jmp
stos
es
xor
and
cs
mov
cmps
pop
mov
(bad)
std
add
retf
nop
and
enter
bound
sbb
aaa
scas
push
shl
add
lock
dec
cmp
mov
pop
sbb
rol
or
mov
sbb
add
cmps
pop
lods
or
mov
(bad)
imul
ror
sbb
fist
mov
jno
mov
bound
das
cmps
les
pop
mov
xor
xchg
mov
aaa
and
and
in
push
scas
cmp
fsubp
daa
push
ja
mov
jae
xchg
dec
outs
xchg
jns
sahf
dec
push
xor
mov
pop
popf
xchg
cmps
mov
jl
jnp
loop
shl
in
add
imul
enter
jns
cdq
scas
push
lods
repz
cmc
or
mov
frstor
loopne
add
xor
pop
pop
fcomp
jge
add
fwait
test
xchg
js
pop
pop
sub
arpl
jl
sbb
out
mov
cmp
xchg
dec
jo
mov
lock
mov
test
aas
xor
(bad)
and
mov
loop
cmp
push
jmp
sar
jg
dec
mov
mov
fs
scas
(bad)
sbb
gs
push
ss
pop
push
in
(bad)
jg
cdq
mov
in
pop
sbb
cmp
(bad)
mov
mov
jmp
test
mov
in
inc
inc
call
aaa
xchg
in
dec
(bad)
pop
add
xor
call
aas
sub
adc
mov
xchg
dec
out
rcr
inc
lods
sub
aas
mov
lds
or
fcomip
das
out
sbb
cli
jmp
(bad)
(bad)
cwde
mov
out
jge
adc
das
lahf
dec
cs
rol
adc
(bad)
mov
jo
xor
sbb
mov
cmp
ins
mov
add
(bad)
mov
push
jge
cmc
in
dec
les
adc
mov
frstor
ja
dec
jbe
sub
leave
cmp
xchg
pop
retf
(bad)
lock
cli
add
lods
inc
test
fwait
repnz
mov
call
dec
xor
adc
and
lds
add
or
test
jo
ret
push
mov
es
push
(bad)
inc
or
shr
ds
pop
cmp
fdivr
mov
inc
dec
sbb
rcr
xlat
sbb
xor
push
(bad)
adc
jne
je
adc
(bad)
test
aam
lock
cmp
(bad)
xor
xchg
xor
mov
sub
mov
mov
dec
(bad)
das
jecxz
mov
pop
jle
jg
stc
dec
adc
dec
rcr
dec
xor
mov
dec
xchg
sub
pop
mov
fcom
cmp
push
or
adc
mov
test
add
xchg
add
loopne
adc
ret
sbb
cmp
loope
out
loope
cmp
add
imul
lods
jg
(bad)
xchg
push
mov
push
pop
pusha
call
ins
or
mov
add
cmp
mov
cwde
out
adc
dec
rcr
sbb
popf
aaa
(bad)
jg
pop
adc
in
mov
add
push
add
push
push
call
imul
add
mov
jle
mov
sbb
enter
pop
call
mov
jmp
adc
outs
(bad)
pop
int
ins
mov
stos
jg
ds
inc
es
mov
int3
sar
mov
cmps
ret
add
jmp
pop
pop
pop
inc
push
aaa
add
jecxz
pop
(bad)
ins
cmp
loop
xor
aas
sub
in
push
mov
jns
lods
scas
adc
xor
ret
pop
scas
xchg
or
add
in
push
sbb
adc
(bad)
xor
cld
mov
push
sbb
icebp
mov
hlt
bound
cmp
mov
pop
jle
sar
ss
(bad)
fsubr
nop
pusha
fild
sbb
xchg
inc
pop
mov
adc
adc
xchg
inc
mov
jg
iret
in
mov
cmp
addr16
xchg
xchg
xchg
add
test
sub
pop
and
inc
adc
xor
cmc
mov
jae
fistp
stos
pop
call
sub
shl
push
push
lock
loop
bound
gs
mov
stos
mov
mov
jmp
(bad)
sbb
fadd
inc
les
daa
inc
gs
retf
xor
mov
mov
mov
xor
es
rol
and
and
jecxz
outs
sub
push
cld
add
adc
pop
ja
rcr
(bad)
xchg
cli
xchg
sbb
push
dec
xchg
cmp
arpl
(bad)
call
add
enter
repz
mov
jmp
in
(bad)
inc
xor
xchg
inc
les
bound
imul
in
cmp
xchg
in
mov
pusha
lea
loop
shl
test
mov
cmp
cmp
dec
push
adc
xchg
data16
cdq
push
mov
aam
stc
lar
jle
mov
sub
retf
adc
xor
es
or
shl
(bad)
out
(bad)
xor
fs
lods
movs
(bad)
js
lds
mov
xchg
push
es
out
int
add
lods
push
cld
mov
push
lods
pushf
inc
cmp
cmp
mov
clc
pop
push
pop
or
addr16
push
mov
adc
jecxz
push
xchg
das
loop
fs
sub
fnstenv
xchg
ret
inc
sub
adc
cmp
mov
mov
mov
test
push
jg
mov
repnz
aam
sub
mov
push
jp
jl
sbb
or
dec
cmp
sub
jns
fs
icebp
cmps
mov
and
mov
xor
pop
std
fdivr
sub
jecxz
cmp
in
(bad)
sbb
inc
and
lods
mov
jbe
push
push
push
push
push
pusha
dec
popf
pop
arpl
dec
fwait
(bad)
cmc
out
dec
pop
pop
cmp
fiadd
repnz
dec
mov
retf
jl
add
movsx
rol
(bad)
mov
jl
nop
or
add
sti
or
int
mov
dec
test
mov
push
ret
mov
push
jbe
mov
cmps
mov
inc
cs
push
sub
sub
adc
lock
pop
jl
cmp
push
mov
(bad)
adc
or
loop
fstp
fld
xchg
or
lods
and
repnz
mov
and
scas
push
sub
push
retf
mov
jo
(bad)
sbb
mov
dec
mov
add
test
adc
cld
cmp
fucom
ret
sti
xor
jp
outs
aaa
mov
inc
dec
(bad)
dec
mov
outs
pop
sub
mov
mov
or
cmp
cmps
mov
push
lods
jnp
and
sub
dec
fcmovnb
test
je
mov
out
(bad)
push
in
pop
sub
(bad)
loope
pop
sbb
add
xor
adc
adc
cmc
adc
jge
je
movs
ins
jge
je
call
inc
rol
nop
test
in
add
pop
pop
bound
mov
inc
retf
mov
jmp
loop
mov
add
(bad)
jmp
cmp
jmp
adc
inc
mov
adc
cmps
test
push
std
mov
shr
nop
push
not
jecxz
neg
bound
mov
cmp
adc
sub
xor
mov
push
mov
pop
dec
popa
inc
jge
fiadd
mov
call
dec
push
push
nop
jmp
push
xchg
mov
jp
scas
sub
sahf
sbb
popa
fsubrp
adc
lds
div
ret
js
xor
sbb
in
push
add
aaa
idiv
adc
adc
sbb
mov
or
retf
data16
mov
sbb
cmps
(bad)
push
push
mov
jge
popf
push
mov
out
inc
clc
adc
mov
xor
fs
rcr
test
das
jb
retf
outs
cdq
add
pop
push
rcr
lods
mov
lods
inc
push
cmp
ds
call
(bad)
mov
hlt
sub
dec
push
retf
clc
sub
ror
cmp
xchg
mov
and
adc
(bad)
jns
in
push
xchg
iret
and
xchg
cmps
mov
movs
adc
dec
mov
iret
mov
into
mov
xchg
sub
lock
push
xchg
xchg
test
hlt
lea
aas
popa
(bad)
in
cmp
imul
sar
lods
push
xchg
cmps
into
je
cmp
jg
and
mov
push
jb
gs
inc
jecxz
sub
mov
xchg
jo
mov
sub
xor
adc
add
jae
pop
push
test
jp
(bad)
sbb
jmp
pop
fdiv
mov
loopne
or
push
pop
add
mov
mov
lahf
adc
jg
dec
cmp
in
adc
jae
lea
pushf
pop
jl
add
aad
loop
xor
pop
mov
ins
mov
fld
add
pusha
pop
sbb
push
ins
inc
push
movs
push
test
mov
mov
lock
pop
sti
nop
leave
clc
and
pusha
test
(bad)
test
sbb
bound
bound
mov
fdiv
stc
imul
int3
jp
test
jmp
out
data16
cmp
mov
fwait
and
lock
(bad)
cli
pop
sub
dec
out
sbb
into
lock
dec
bound
and
in
bound
hlt
call
mul
inc
xlat
enter
fwait
and
xor
sbb
add
aaa
(bad)
mov
mov
in
add
xchg
cmp
in
sub
bound
aad
xchg
add
outs
mov
jmp
mov
mov
cwde
mov
outs
inc
dec
mov
or
jecxz
aam
sbb
dec
ja
mov
sahf
inc
pop
dec
sub
ret
mov
ficom
adc
rcr
push
pop
cdq
mov
pop
int3
in
pop
adc
ins
push
sub
js
out
mov
mov
push
sub
in
pop
(bad)
push
sahf
pop
stos
xchg
push
sahf
fstp
lahf
ins
imul
cmp
cmc
cmp
fcom
and
out
sub
dec
(bad)
xchg
rcr
adc
in
and
sti
lods
loop
std
pop
mov
faddp
dec
sub
push
shl
dec
icebp
(bad)
aas
cdq
sar
out
or
dec
jmp
pop
lods
cmps
(bad)
aam
dec
dec
jmp
fmul
into
sbb
stos
ss
push
lock
mov
mov
jge
out
lock
loopne
push
out
dec
mov
dec
push
retf
addr16
cld
cmp
(bad)
daa
sub
fld
jnp
sub
inc
push
sub
push
jno
sbb
push
movs
mov
shl
sahf
xchg
or
hlt
imul
leave
xchg
in
adc
out
mov
cmp
stos
gs
shl
and
and
data16
mov
popa
lods
lods
mov
xor
push
in
or
leave
sub
mov
xchg
test
jmp
lock
(bad)
fiadd
sahf
sbb
xor
imul
dec
mov
mov
pop
jae
fistp
jle
cmp
dec
stos
mov
sub
pop
pop
mov
push
jbe
add
push
dec
jb
scas
adc
xor
jge
cmps
cmp
dec
fldcw
pop
and
adc
mov
or
lods
xor
sub
rol
test
mov
les
jns
mov
jle
cmps
xlat
retf
jne
pop
in
ds
cmps
fidiv
ds
jle
sbb
mov
pop
add
jmp
mov
(bad)
jmp
jg
inc
dec
repnz
sub
bound
aam
es
jb
mov
push
jl
pop
mov
dec
lods
and
les
adc
push
or
add
mov
lahf
fild
icebp
lock
mov
fs
ins
mov
mov
dec
sbb
jns
xor
loopne
and
inc
jl
mov
push
mov
mov
mov
dec
mov
sahf
hlt
retf
mov
push
push
scas
les
jmp
lods
jl
inc
fild
in
in
push
jns
call
mov
cs
cwde
loope
xor
dec
pop
(bad)
ret
test
sub
or
mov
sub
ins
ret
je
lahf
and
imul
test
pop
ror
add
ret
jns
sbb
pop
fidiv
xchg
and
retf
cmps
out
ficomp
mov
(bad)
pop
sti
in
dec
nop
sub
push
or
xchg
xor
jl
mov
dec
add
or
inc
or
test
pop
stos
inc
pop
xchg
pop
jb
les
mov
fidiv
cmp
test
adc
mov
cmps
test
fsub
rcl
scas
xor
int3
push
xchg
mov
fs
push
add
pusha
pop
test
sbb
fsubrp
mov
js
ds
jb
fcomp
bound
pop
sbb
daa
retf
gs
jle
gs
inc
mov
imul
cmps
sbb
int
stc
into
add
in
xchg
and
jbe
mov
jo
(bad)
xlat
daa
xchg
cwde
sbb
lock
imul
and
fdivrp
push
loopne
sub
or
bnd
arpl
cmps
pop
or
aas
adc
sti
cld
add
pop
retf
xchg
push
adc
cmp
out
xlat
cld
xchg
popa
mov
push
pop
aam
lods
mov
aam
je
xchg
fdiv
pop
fwait
lock
repnz
sub
ror
and
pop
(bad)
xor
pop
dec
xor
fidiv
or
mov
jo
ja
mov
rol
in
pop
test
in
stos
(bad)
jmp
shl
mov
lods
sub
lea
or
or
pop
retf
mov
ds
ret
arpl
xchg
fidiv
push
test
pushf
xchg
rol
shl
out
jnp
or
fisubr
mov
enter
aad
fadd
sahf
cmp
xchg
pop
call
mov
fmul
mov
test
and
popf
sub
fisub
sbb
(bad)
sbb
pushf
mov
loop
dec
add
test
push
aam
inc
adc
dec
pusha
add
out
xchg
xchg
jge
cdq
push
popa
jl
lock
mov
sbb
push
jl
cld
jae
sub
push
mov
pop
imul
ins
or
inc
bound
pop
dec
mov
imul
mov
xlat
jp
fidiv
add
dec
cmp
repz
rol
push
mov
push
test
test
and
xchg
cwde
aad
push
cmp
sbb
sete
push
jecxz
xchg
xor
cmc
outs
pop
mov
outs
sub
ds
dec
mov
pop
sub
dec
mov
jmp
sar
mov
adc
loop
xor
pop
and
jge
xchg
xchg
sahf
sbb
dec
lods
jge
test
mov
or
or
and
cmp
loop
and
es
loopne
outs
mov
add
lahf
cdq
mov
sub
mov
mov
sbb
or
xchg
dec
push
push
xor
push
(bad)
in
leave
lds
xchg
icebp
lea
xor
mov
ins
cmp
adc
mov
jge
ja
clc
mov
js
adc
jae
pop
sub
dec
inc
xchg
test
adc
xchg
rcl
pop
cmp
pop
call
push
xor
fwait
mov
lea
cdq
jnp
add
lahf
mov
(bad)
push
ret
scas
scas
jb
in
scas
loope
(bad)
inc
iret
sti
or
inc
call
or
push
pop
aam
mov
bswap
jnp
jl
es
mov
repz
js
sbb
out
jae
sub
pusha
pop
xor
movs
mov
push
sbb
cmp
add
cmp
cwde
in
dec
std
pop
mov
xchg
std
cli
mov
call
popf
dec
sub
pop
div
imul
mov
pop
lahf
std
adc
std
push
fadd
mov
xchg
lahf
sbb
outs
or
xchg
sbb
adc
ror
popf
xchg
pop
imul
test
push
cmp
das
out
out
push
push
inc
pop
adc
cmp
add
or
inc
xchg
icebp
sbb
mov
out
xor
sub
(bad)
dec
icebp
lahf
or
and
repnz
pop
dec
pop
pushf
xlat
inc
sbb
not
sub
xchg
mov
add
sbb
into
sbb
arpl
inc
push
(bad)
fs
jmp
rol
mov
loope
out
div
mov
mov
jg
mov
add
xor
push
add
dec
(bad)
cmp
push
rcl
sub
xor
and
jns
push
aaa
enter
mov
rcl
lods
hlt
cld
idiv
stos
xchg
sub
mov
test
pop
bnd
lea
mov
das
in
inc
lods
pop
inc
movs
mov
shl
sub
push
nop
mov
cdq
sbb
sbb
rcl
and
popf
and
xchg
gs
(bad)
cmp
add
and
jae
xchg
adc
ja
cmc
jp
add
in
sub
adc
adc
(bad)
jae
mul
pop
int
in
ftst
loopne
out
repz
stos
lods
pop
pop
push
movs
icebp
in
fisub
call
ret
in
jns
scas
mov
mov
test
mov
ficomp
scas
push
jnp
mov
xchg
dec
and
push
and
adc
imul
sub
cli
xchg
ja
jns
jmp
ficom
ins
mov
retf
adc
and
cli
sbb
cmp
xchg
in
mov
in
or
icebp
lds
and
inc
pop
and
ror
mov
xor
sti
nop
fsubr
jmp
cmps
mov
lfs
shl
mov
nop
push
(bad)
jge
xchg
clc
pop
and
cmps
jecxz
add
mov
hlt
into
adc
add
add
fidivr
movs
mov
and
xor
sub
sub
or
mov
push
and
movs
in
jge
outs
push
push
mov
lock
in
xchg
ret
sub
dec
pop
jo
push
jg
jo
out
popa
cmp
ss
mov
in
pop
les
mov
rcl
xchg
int
jl
fs
out
outs
ins
mov
mov
push
jne
mov
movs
dec
or
(bad)
mov
loopne
push
test
movs
or
mov
mov
and
cdq
jg
iret
inc
and
outs
mov
fwait
retf
add
and
mov
lods
xor
js
cmp
int
cld
xchg
cmovne
retf
daa
movs
cmp
fisubr
sbb
les
pop
mov
jb
shl
shr
push
scas
cmp
dec
mov
ds
fs
xchg
mov
push
cli
repnz
fisttp
dec
retf
pop
xchg
pop
jns
pop
lahf
and
aad
jae
jo
test
sbb
push
std
lds
adc
sbb
pop
pop
fwait
adc
sub
push
push
cmps
xchg
ret
div
cmp
in
stos
fstp
setp
pop
cmps
mov
ficom
pop
bound
mov
mov
dec
aaa
push
repz
or
push
xchg
lea
mov
dec
sub
xchg
cmp
not
pop
popf
push
pop
push
dec
mov
xlat
pop
add
call
stc
add
pop
(bad)
jae
outs
fist
das
or
mov
iret
popf
fst
xor
sbb
out
jmp
shl
mov
retf
ins
ficom
mov
pop
ss
push
xor
in
fbstp
cmp
movs
lahf
push
movs
fadd
adc
add
push
je
mov
mov
imul
leave
sub
les
cmp
add
inc
push
gs
bound
mov
mov
sbb
jb
(bad)
mov
mov
nop
sahf
out
pop
add
push
ds
or
xchg
dec
push
add
sub
fisttp
stos
call
pop
sbb
add
pop
xor
xor
out
fld
inc
(bad)
mov
out
jbe
and
hlt
push
mov
lods
inc
cmp
or
xor
push
add
add
test
and
push
cwde
cld
cmps
mov
in
jmp
jg
inc
mov
icebp
jp
shl
in
or
mov
stos
enter
xchg
stos
jl
fmul
adc
add
cmp
fistp
outs
xchg
jns
jbe
sahf
pop
loop
mov
adc
loop
mov
mov
mov
movs
mov
mov
das
xlat
sti
adc
sub
adc
add
inc
in
dec
arpl
fidivr
sub
xchg
ret
(bad)
cmp
sub
sti
jmp
jo
sbb
test
shl
out
adc
jp
cmp
repz
inc
cmp
push
jle
fnstenv
mov
aaa
fstp
cwde
and
or
call
dec
daa
and
adc
or
jne
inc
sub
cmc
xchg
xor
add
push
and
ins
iret
fild
cwde
gs
push
test
or
pop
(bad)
test
addr16
jns
bswap
nop
loopne
popf
adc
fld
pop
imul
fsubrp
and
xor
or
inc
sub
cwde
arpl
ds
or
xor
or
xchg
cwde
popf
arpl
jbe
xchg
out
mov
(bad)
sti
jp
stc
arpl
sbb
ins
jecxz
fidivr
xor
or
in
xor
mov
add
push
xor
(bad)
cmp
cmp
enter
jge
dec
dec
in
push
push
adc
(bad)
xor
jns
jne
add
dec
add
or
jbe
cmp
add
jbe
or
mov
in
adc
mov
jns
mov
cmp
jl
mov
dec
add
int
popa
cld
mov
imul
or
jb
ins
loop
cli
xchg
stos
adc
lods
imul
or
jmp
inc
cmp
mov
in
ret
jbe
popa
sbb
retf
fisub
int
xchg
fs
loopne
push
movs
(bad)
jns
xlat
bound
rol
xor
xchg
adc
or
xchg
add
sar
pop
mov
out
call
dec
push
repz
es
pop
mov
dec
jns
repnz
fnstenv
mov
mov
or
out
das
and
(bad)
xor
mov
xchg
sbb
lds
rcl
inc
in
inc
or
push
jo
xchg
sbb
psllq
inc
or
push
pop
mov
ret
aas
(bad)
xchg
and
div
fsubp
xchg
jae
jge
jno
adc
mov
sar
ror
ins
and
sbb
out
shr
fnstenv
and
aas
inc
and
jo
neg
push
nop
in
pop
repnz
pop
mov
push
jle
xor
dec
aas
cmovbe
mov
jnp
xor
adc
ror
jg
cmp
lods
xor
rol
xchg
mov
popa
pop
jl
dec
and
in
pop
test
mov
add
cld
int
push
or
lahf
inc
adc
fadd
mov
mov
leave
adc
lods
lahf
jmp
xor
pushf
scas
pop
adc
pop
rcl
xchg
inc
mov
outs
mov
repz
ins
(bad)
cs
or
mov
movs
xchg
sub
daa
adc
xor
adc
in
push
fisttp
shl
pop
pop
push
(bad)
call
dec
cmps
jnp
xor
lods
add
or
push
sbb
test
test
jecxz
jge
mov
mov
add
and
or
aad
lods
dec
xor
mov
mov
or
in
pop
sahf
jecxz
in
inc
mov
out
pop
pop
ret
call
adc
pop
lods
push
adc
cmp
jle
sbb
cmp
and
aam
push
ds
and
sub
adc
neg
xchg
adc
inc
cmp
popa
jecxz
popf
sub
push
ror
cld
xchg
aam
xor
xchg
adc
icebp
(bad)
jmp
inc
adc
mov
jnp
lea
pop
dec
fst
mov
mov
jecxz
(bad)
rcr
aam
push
ins
ss
scas
xchg
(bad)
sbb
addr16
into
nop
add
push
push
pop
xor
inc
add
xor
sbb
sti
fdivp
lods
hlt
inc
sbb
es
ds
in
jo
dec
iret
movs
sahf
jae
pusha
sbb
mov
and
shl
movs
dec
or
retf
inc
push
daa
sbb
xchg
sbb
push
cmp
ret
rol
enter
out
push
sub
and
(bad)
jbe
icebp
imul
iret
mov
mov
mov
ret
cmp
jg
sbb
or
daa
pop
adc
jbe
mov
or
mov
xor
sbb
scas
and
sub
les
and
popf
nop
push
leave
mov
popf
jo
dec
outs
call
xchg
pop
xchg
xor
stc
mov
stos
fnstcw
and
imul
loopne
shr
retf
mov
out
jmp
add
pop
sahf
jbe
mov
sar
push
sti
xor
add
jae
xchg
xchg
pop
(bad)
clc
mov
dec
in
mov
inc
call
mov
(bad)
sbb
hlt
fld
enter
dec
xor
(bad)
mov
fstp
inc
and
imul
or
and
sub
inc
cld
cmc
pop
jg
pop
div
movs
adc
mov
dec
and
sub
mov
nop
popa
test
aam
xor
ins
push
retf
cmp
push
or
call
pop
inc
out
jb
xor
mov
ret
or
lahf
(bad)
aam
push
adc
adc
stos
and
shl
inc
mov
movs
cmps
call
sbb
into
ins
jmp
add
push
pop
in
inc
pop
rcl
loop
and
pushf
aam
je
cmc
dec
or
cmps
fs
xor
cmp
mov
adc
fld
jae
push
(bad)
jo
sahf
mov
hlt
add
xor
aaa
jmp
test
push
push
sub
out
aam
fcomp
test
sbb
mov
inc
arpl
sub
retf
mov
lods
shl
fcmovne
mov
sub
inc
das
loope
pop
xor
and
adc
adc
mov
popf
or
scas
test
jae
xchg
xor
add
jne
adc
dec
shl
cwde
cmp
mov
ret
xchg
ror
inc
lods
into
cmps
fwait
pop
sub
pop
adc
stos
and
pusha
push
cmps
cmp
into
call
push
pop
inc
scas
pop
pop
sbb
cs
mov
inc
in
cli
mov
mov
outs
int3
sbb
lds
add
inc
pop
mov
cmp
jmp
inc
es
jle
pop
mov
jl
cmps
push
push
adc
jl
mov
inc
pop
or
(bad)
loop
push
sbb
sub
cmp
jmp
hlt
or
or
aaa
xchg
sbb
retf
(bad)
dec
pushf
cmps
fsub
imul
pop
sahf
iret
cli
and
movs
add
lds
mov
jl
adc
daa
fnstcw
aad
retf
inc
push
int
cmp
fdivr
jns
call
fidivr
in
push
xchg
push
mov
mov
lods
imul
addr16
mov
xchg
stos
cmp
lahf
mov
mov
inc
mov
sbb
xchg
(bad)
outs
sub
pop
sub
pop
jno
(bad)
or
(bad)
push
shl
(bad)
push
cld
call
es
sbb
push
mov
adc
mov
and
fcomp
xor
jne
xlat
lds
lahf
es
(bad)
xchg
test
and
neg
sub
das
cdq
xlat
sub
sbb
sar
and
call
inc
rcr
mov
movs
push
mov
retf
in
lds
add
pop
adc
cmp
jle
mov
loopne
sti
(bad)
into
retf
mov
inc
clc
sub
cmps
(bad)
out
push
mov
retf
and
addr16
sbb
lea
outs
(bad)
ins
js
dec
inc
jmp
ins
mov
popa
shr
mov
push
aas
cli
int
pop
aas
leave
ret
jns
inc
adc
xchg
mov
dec
popf
lahf
mov
mov
push
and
pop
mov
mov
(bad)
xchg
dec
pop
cmp
or
fild
mov
pop
in
mov
xchg
and
aad
add
jns
int
dec
mov
jne
jecxz
cmps
ins
jmp
xlat
clc
cmp
clc
test
cdq
mov
retf
jp
push
or
mov
cmp
mov
push
cmp
rcl
mov
pop
nop
mov
andnps
jmp
(bad)
or
push
and
out
xchg
cmp
mov
inc
xor
push
out
enter
icebp
mov
sub
inc
pop
dec
pop
gs
sbb
shl
mov
xor
cmp
mov
mov
aas
cmps
xchg
mov
(bad)
lock
(bad)
push
icebp
repnz
mov
xchg
rcl
push
lods
lahf
mov
scas
mov
hlt
fidivr
add
xor
xchg
add
cmp
hlt
pop
push
fcom
pop
mov
mov
mov
jo
pop
retf
add
repz
and
popf
mov
and
mov
inc
lahf
and
mov
push
cmc
neg
sub
dec
jmp
out
ds
sti
in
push
jno
cmp
inc
mov
sahf
in
cdq
push
sar
call
adc
iret
mov
(bad)
gs
retf
xchg
rcr
add
sbb
shr
aad
mov
mov
jl
mov
ret
jg
test
int
mov
stc
mov
push
fs
ss
or
pop
xor
and
ret
les
xor
sub
mov
hlt
push
push
sub
push
or
mov
cld
sub
and
imul
lea
mov
(bad)
lea
dec
xchg
dec
adc
jmp
out
int
fild
fwait
shl
call
sbb
mov
not
and
mov
call
int
clc
stos
cmp
fild
(bad)
and
cmps
lods
pop
push
adc
pop
cmp
jle
xor
xchg
xor
clc
gs
inc
jg
ror
aam
mov
inc
jae
mov
rol
(bad)
push
dec
mov
mov
icebp
repnz
mov
or
and
mov
pop
pusha
inc
mov
push
fcomp
sbb
scas
scas
(bad)
cs
mov
sub
popa
cmp
lock
in
movs
push
shr
stc
and
xchg
jo
mov
addr16
(bad)
test
mov
xor
dec
mov
jno
int
add
(bad)
dec
repz
test
ja
sub
mov
fdiv
mov
fcom
repnz
or
cmpxchg
jmp
es
pop
cmp
aas
adc
xchg
or
pop
cmp
mov
inc
test
pop
jbe
jo
cmp
add
jg
xor
xor
fnstcw
adc
comiss
fcmovb
out
pop
sbb
mov
jge
dec
pop
loope
sub
fisttp
cmp
jle
(bad)
adc
cmp
mov
in
fist
rcl
popf
push
fwait
mov
repz
jmp
jge
xchg
jne
fstp
mov
sbb
and
ror
js
arpl
mov
cdq
pop
in
test
or
div
inc
push
dec
mov
movs
(bad)
call
dec
xor
cmps
xchg
mov
push
inc
push
inc
xchg
jl
inc
jmp
retf
inc
repnz
test
in
mov
mov
ficom
xor
into
rcl
bound
test
pop
inc
lea
pop
repz
cmp
stc
mov
cmp
sti
adc
jo
in
jecxz
sbb
push
aad
push
mov
add
inc
mov
pop
test
out
fwait
mov
sbb
sets
mov
out
jp
jmp
pop
jo
scas
retf
mov
adc
mov
dec
pop
and
mov
push
jg
add
lods
and
ds
movs
cmp
outs
jg
jmp
pop
and
or
push
clc
mov
and
data16
cmp
pop
sbb
mov
add
inc
add
push
imul
not
scas
jp
dec
xor
cmps
mov
lock
xor
loope
not
es
std
fst
mov
shr
and
cmp
pop
ds
push
stos
xchg
lahf
pop
or
jp
or
cmovg
mov
cli
jecxz
mov
jo
pusha
call
in
mov
xchg
daa
push
ror
(bad)
int
xchg
imul
mov
mov
mov
and
lea
jge
and
inc
mov
sbb
or
xor
dec
rcl
sub
sub
jb
fwait
or
mov
(bad)
pop
(bad)
loopne
adc
jno
jno
xchg
clc
idiv
pusha
test
jg
push
fs
stos
cmps
push
push
mov
jbe
shl
inc
cmp
xchg
outs
inc
add
and
cmp
lock
jne
idiv
jo
and
push
and
mov
popa
sar
pop
xchg
cmp
ds
imul
pop
icebp
stos
out
mov
cmp
ins
xchg
adc
inc
out
sub
xchg
scas
(bad)
sub
pop
adc
jno
repz
stos
lods
stos
cmp
pop
repnz
popf
rcr
mov
fwait
int
fisttp
loopne
fistp
add
push
fwait
dec
cli
pushf
dec
jnp
sbb
mov
mov
sub
mov
xlat
push
mov
movhps
out
loopne
or
add
jo
jmp
fdivr
mov
push
xchg
cwde
mov
repnz
mov
adc
cdq
sub
mov
xlat
dec
std
arpl
fisubr
adc
jae
xlat
aaa
and
add
sbb
mov
xlat
and
push
out
fcomp
mov
xchg
adc
fs
je
pop
outs
sti
aas
pop
adc
sub
mov
(bad)
retf
sub
xor
sti
xchg
stos
add
das
push
jmp
int
adc
leave
mov
push
inc
ins
dec
pushf
ja
scas
sbb
ja
mov
push
xor
aam
push
mov
or
mov
retf
(bad)
stos
add
cmp
dec
adc
mov
dec
pop
push
fdivr
cs
stos
inc
(bad)
call
and
and
retf
jo
mov
or
and
add
int3
and
fsubr
loopne
movs
call
xor
sub
and
jmp
jmp
push
imul
xor
mov
and
and
xor
lock
xchg
std
aas
pop
mov
stc
jnp
pusha
iret
push
jp
fldl2e
sub
ja
sub
aaa
repz
dec
sti
aaa
clc
retf
rcl
aad
(bad)
in
mov
in
or
popf
cmp
cld
dec
es
sbb
mov
mov
nop
or
jno
repnz
fs
inc
cmp
or
aaa
icebp
retf
cmp
hlt
out
cmp
mov
stc
adc
xchg
jo
mov
movs
sbb
and
xchg
ss
loop
mov
cs
mov
ds
lods
xor
inc
push
and
call
mov
pusha
jmp
mov
fs
adc
xchg
adc
sti
popf
mov
adc
pop
xchg
mov
dec
scas
add
mov
pop
js
mov
xchg
nop
jmp
xchg
std
fnstcw
jbe
fwait
inc
inc
repz
test
push
sbb
fcmovne
adc
jae
retf
jl
icebp
jno
dec
xchg
mov
jge
push
mov
jno
jno
or
add
jp
mov
mov
jl
icebp
push
ds
fmul
push
outs
mov
cmps
shr
std
les
pushf
aas
fstp
dec
or
hlt
mov
fmul
xor
cdq
gs
inc
cmp
add
fs
jo
adc
stos
inc
xchg
xchg
xor
and
adc
push
in
ins
je
cdq
mov
or
outs
repz
aad
call
lods
jae
push
ja
sub
xchg
or
addr16
mov
aaa
xlat
clc
xchg
cmp
jp
inc
mov
lods
jl
getsec
jae
iret
mov
test
cmp
mov
mov
sub
xlat
movs
das
loop
(bad)
adc
outs
xchg
(bad)
xor
and
mov
inc
dec
call
sbb
cli
dec
and
pop
ret
loope
adc
ins
xchg
loope
inc
mov
jmp
imul
lds
pop
pop
cmp
stos
push
popa
jbe
sub
xchg
mov
xchg
jbe
pop
jl
mov
ficom
fcomp
lds
jno
aam
and
lock
scas
push
adc
call
push
(bad)
mov
or
xor
es
icebp
add
adc
es
sub
out
dec
cmp
jne
inc
jle
push
xchg
daa
and
mov
daa
add
adc
mov
movd
push
les
mov
pusha
fwait
popa
fidiv
call
jg
rol
xchg
aam
mov
push
jb
out
sti
mov
pop
fisub
fild
or
ficomp
retf
dec
mov
lods
push
adc
enter
das
push
imul
clc
xchg
je
cmp
mov
adc
xchg
xor
out
and
inc
cwde
ds
push
jbe
xchg
mov
add
shl
sbb
out
or
push
inc
inc
lahf
pop
jbe
pop
(bad)
aad
pmullw
mov
test
add
adc
push
pop
and
inc
dec
loop
xchg
add
jecxz
push
mov
adc
out
push
das
nop
scas
mov
push
(bad)
inc
(bad)
cmp
mov
pop
test
mov
arpl
sbb
sub
jo
scas
xor
int3
loop
sub
gs
call
or
and
cmp
ins
stos
sti
loop
in
cmp
push
gs
push
std
mov
iret
xor
mov
jb
outs
xor
dec
or
fsub
fidiv
ret
enter
iret
lods
or
adc
and
fs
cwde
loop
movs
or
setb
adc
xchg
cmp
lock
dec
adc
jae
ret
pop
jbe
mov
adc
outs
popf
mov
test
in
push
mov
add
mov
sti
push
adc
int3
dec
add
push
mov
mov
inc
and
xchg
call
adc
aaa
inc
ja
cmc
lea
imul
pop
xor
jo
mov
lea
mov
mov
inc
rol
jp
push
enter
dec
sbb
mov
push
(bad)
cmp
dec
hlt
pop
repz
out
jle
push
out
int
call
sbb
fcmovnbe
jmp
add
dec
xor
or
fist
xlat
mov
mov
aam
and
test
in
mov
gs
mov
mov
test
pop
dec
mov
cld
xchg
inc
cld
les
mov
add
inc
test
adc
xchg
ds
les
into
mov
jg
sbb
xor
aam
shl
xchg
sbb
add
fwait
pop
jmp
cdq
idiv
mov
sub
xchg
xchg
cmp
inc
stc
and
test
jmp
retf
dec
jns
xchg
sbb
outs
add
xchg
(bad)
mov
fld
xchg
popf
cmp
lea
cdq
(bad)
jmp
push
sub
scas
xchg
adc
xchg
stc
(bad)
push
mov
outs
push
mov
sbb
scas
mov
loopne
sahf
cdq
mul
cmp
cmp
adc
shl
and
rcr
dec
retf
hlt
mov
or
push
add
scas
cmp
or
mov
repz
push
push
jl
into
mov
test
ins
pop
sti
dec
retf
aas
stc
or
dec
inc
inc
dec
pop
and
fcom
mov
sbb
icebp
sbb
add
loopne
sub
xchg
popf
arpl
je
aaa
xchg
and
lods
int3
(bad)
repnz
push
jge
jbe
loop
xor
sbb
repz
xchg
sbb
ss
sbb
mov
test
movs
mov
mov
inc
fld
popa
inc
in
mov
pop
add
out
test
repnz
dec
xor
sub
jmp
aad
std
mov
cmp
arpl
add
cdq
sbb
xor
out
int3
mov
pop
jp
mov
xchg
jae
imul
sub
push
(bad)
add
in
cmp
jns
and
dec
pop
pop
fwait
pop
retf
imul
jp
lea
dec
out
pop
outs
int3
mov
lods
call
stos
sbb
or
push
repz
mov
add
pop
xor
movs
cli
outs
add
cmp
push
bound
dec
mov
gs
jns
push
lods
ror
iret
(bad)
(bad)
adc
sub
loop
lds
imul
pusha
adc
jae
std
not
jge
xchg
(bad)
out
push
mov
push
loope
shl
lods
gs
mov
mov
push
mov
cmp
xchg
and
mov
sbb
pop
(bad)
cli
jne
test
out
pop
pop
test
or
xchg
(bad)
mov
jp
xchg
ins
ss
mov
fsub
mov
adc
aad
popa
and
push
jle
outs
ins
hlt
int
jno
xchg
paddq
xchg
loop
and
adc
mov
xchg
cmp
and
pop
sub
inc
jl
cmp
mov
mov
jne
push
jl
idiv
cmp
cmp
retf
out
add
mov
add
jb
aaa
movs
jnp
jb
xor
pushf
cmp
or
cld
push
and
or
dec
ins
mov
inc
push
dec
jb
call
outs
repnz
outs
js
mov
dec
(bad)
jle
scas
movs
out
js
idiv
mov
mov
mov
fldcw
dec
nop
scas
movs
jae
cmp
jmp
mov
add
push
lods
sub
cmp
leave
push
(bad)
jne
cmp
mov
cmp
push
xlat
pop
cmp
fisttp
xor
mov
ins
sbb
or
nop
adc
sub
mov
rol
ror
mov
sub
jge
mov
lds
cs
xchg
sub
mov
leave
sub
push
push
shl
out
out
xor
xor
adc
lea
pop
push
nop
fisubr
ins
std
pop
stc
not
jl
push
push
sub
iret
pop
xchg
add
sbb
sbb
xchg
cwde
cmp
dec
(bad)
aas
pop
test
mov
ret
add
stos
rcr
mov
xor
daa
pusha
inc
pop
inc
les
adc
adc
xor
add
psllw
pop
and
xchg
mov
std
enter
add
fbstp
hlt
jg
mov
pushf
and
dec
in
or
js
fst
mov
add
dec
pop
mov
dec
adc
hlt
faddp
cmp
mov
push
fwait
out
sbb
out
pop
pop
(bad)
outs
xor
mov
int3
loopne
nop
xchg
outs
(bad)
aam
es
jl
nop
mov
mov
aas
cmp
fmul
push
pop
adc
sbb
into
sbb
adc
loop
aas
cmps
loope
mov
xchg
sbb
jp
loop
jmp
and
sbb
push
mov
xchg
loop
fimul
jns
not
lahf
xchg
jns
aad
xchg
inc
out
popa
xchg
pop
cdq
pop
retf
out
jmp
cmps
imul
adc
xor
hlt
in
push
ins
and
add
jge
pop
call
int3
repz
(bad)
jg
jp
push
lock
and
push
js
inc
out
fdivr
and
jmp
rcr
xlat
add
or
iret
xchg
adc
int3
jecxz
xchg
jle
dec
mov
ret
mov
xchg
inc
dec
push
sahf
jl
pop
add
arpl
fnstenv
push
fistp
push
cmp
lock
push
mov
sti
mov
push
gs
or
or
xor
mov
and
in
sahf
aaa
sbb
sbb
cmp
pop
xor
rcl
dec
pop
popf
in
jge
or
sub
dec
out
rol
int
xor
in
push
loop
pusha
clc
xor
add
pop
repz
sub
dec
jl
loopne
dec
aam
js
int3
(bad)
cmp
mov
inc
mov
fs
aas
mov
outs
add
sahf
mov
inc
into
xor
(bad)
sub
dec
cdq
pusha
lock
jae
jbe
and
pop
repnz
or
adc
pop
(bad)
iret
fstp
inc
xchg
jecxz
xor
jle
inc
add
outs
je
repz
pop
jmp
dec
xor
or
pop
loopne
mov
or
call
les
xor
add
arpl
scas
mov
dec
cmp
dec
test
cmp
psubsw
dec
cmp
(bad)
ficomp
enter
adc
jb
inc
js
jnp
cmc
mov
pop
daa
jnp
jp
xchg
mov
jmp
nop
inc
movs
cwde
pop
mov
jp
xchg
and
mov
cs
mov
loope
jnp
cmps
mul
into
rcr
or
pavgb
jnp
out
popf
pop
mov
sub
xchg
adc
inc
scas
mov
retf
outs
or
bnd
inc
sti
jp
mov
pop
sub
mov
popf
xchg
add
cmps
outs
out
sar
cwde
(bad)
cwde
daa
cmp
mov
adc
nop
call
pop
push
xchg
shl
dec
fs
pop
jl
mov
jns
inc
lods
sbb
xchg
enter
pusha
dec
and
sub
jle
scas
mov
popf
mov
xchg
shr
jae
dec
add
mov
ss
dec
xlat
pop
mov
and
retf
adc
fimul
xchg
xchg
xchg
dec
sbb
xor
add
dec
cld
pop
dec
inc
mov
call
and
fdivp
pop
in
dec
popa
mov
mov
fs
arpl
loop
mov
pop
jle
je
mov
lds
fstp
xor
xor
jns
idiv
rol
cld
ds
jns
scas
or
mov
dec
jno
jmp
pop
cli
je
not
loop
jns
sti
movs
jmp
pop
repz
jbe
sbb
or
and
pop
xchg
xlat
(bad)
(bad)
jp
ds
cmp
jmp
call
rol
in
iret
leave
aaa
loopne
sbb
xchg
lods
outs
outs
push
test
lods
push
inc
sbb
ins
outs
ja
xor
fld
enter
std
pushf
clc
xchg
adc
test
nop
ja
int
sub
mov
scas
jne
ss
(bad)
mov
add
scas
and
dec
cmps
push
cli
movs
sti
xchg
loope
pusha
repnz
stc
cmp
push
pop
daa
je
cmp
cmp
dec
inc
and
test
dec
lods
or
jge
ror
mov
ror
or
sahf
push
in
ret
shr
neg
shr
ror
retf
lahf
mov
mov
cmp
add
data16
fild
xchg
ret
pop
or
or
add
xchg
push
stos
das
or
mov
push
adc
sbb
ins
add
or
icebp
pop
xchg
jns
xchg
test
lahf
icebp
daa
aam
sub
(bad)
shr
ret
sub
scas
mov
retf
idiv
nop
imul
loope
or
ins
xor
xor
mov
pop
and
mov
call
dec
xchg
pop
jnp
sub
je
inc
xchg
lods
ins
ror
sbb
sub
inc
and
repz
icebp
mov
sub
sbb
pushf
ins
xor
cmp
sbb
scas
clc
sbb
stos
es
out
xlat
stc
xchg
xor
out
jp
ins
pop
sub
lds
inc
mov
test
sub
loopne
xchg
or
sbb
dec
pop
dec
lea
movs
xlat
loop
push
nop
push
or
pushf
imul
add
hlt
pop
(bad)
pop
aas
or
jae
and
push
dec
mov
sbb
adc
inc
clc
mov
adc
out
sub
xchg
and
sub
xchg
idiv
fnstenv
mov
mov
fwait
(bad)
cld
loop
jbe
mov
test
sub
cmps
mov
xchg
shr
sbb
nop
and
pop
in
or
jmp
mov
jno
(bad)
push
test
cwde
data16
call
and
add
xchg
xor
push
dec
fisub
and
jns
cmps
cmps
bound
dec
and
pop
pop
push
lods
mov
xchg
inc
cmp
fnsave
pop
imul
or
icebp
mov
test
xchg
nop
sub
mov
cmp
repnz
gs
adc
(bad)
xor
jle
mov
sub
push
jmp
dec
mov
xchg
sub
mov
outs
imul
test
out
(bad)
jns
xchg
xor
sub
inc
sbb
xor
add
stos
sub
jns
jg
push
aaa
ret
xchg
cmp
movs
adc
popf
rcr
out
mov
call
addr16
cmp
sar
ret
xor
jmp
mov
mov
jno
mov
xor
daa
cwde
sti
sbb
dec
sub
out
sbb
mov
cmc
or
ins
ins
pop
mov
fs
inc
aad
mov
push
in
xchg
outs
sbb
es
outs
mov
mov
inc
cld
stc
fwait
jo
fld
jmp
js
sar
idiv
add
pushf
arpl
test
iret
jno
push
dec
xchg
test
(bad)
xor
push
and
je
jecxz
imul
fwait
mov
and
arpl
push
xchg
push
sbb
imul
inc
mov
stc
mov
push
mov
jp
mov
aam
(bad)
sub
jge
inc
lahf
jg
push
cmps
dec
sub
mov
push
arpl
bound
in
ins
xchg
mov
inc
pusha
mov
(bad)
xchg
leave
xchg
mov
or
xchg
jecxz
adc
cdq
cmp
xchg
jge
pop
clc
sub
popa
xor
push
sub
in
cmp
dec
mov
outs
les
xor
dec
std
push
push
mov
sub
add
lock
xor
add
test
xchg
cmp
jae
mov
add
add
shr
je
mov
retf
stc
fimul
rcr
sub
dec
sub
lock
mov
mov
sub
jmp
aaa
jae
xchg
cmps
repnz
icebp
cli
push
nop
retf
pop
je
or
adc
push
and
loope
inc
(bad)
sti
mov
ss
fucom
es
in
loopne
retf
push
push
mov
cmps
loopne
fcomp
dec
sub
int3
mov
push
out
lea
lahf
loop
int
mov
push
mov
mov
inc
sbb
pop
adc
inc
cs
cmps
pop
sub
fwait
jne
dec
or
fwait
mov
jecxz
or
(bad)
shl
and
hlt
mov
shr
retf
pop
inc
repz
ficom
cmc
(bad)
shl
aas
aad
aam
repnz
xchg
stos
inc
test
pop
int3
pop
sub
enter
in
int
mov
push
adc
inc
dec
pop
popf
sbb
cs
jmp
cbw
jnp
lock
mov
(bad)
mov
fnstenv
add
out
or
out
mov
cdq
fldcw
mov
leave
in
repz
in
pop
fld
and
fsubr
push
pop
repz
add
add
loope
fnsave
mov
xlat
icebp
js
and
je
sbb
mov
frstor
mov
adc
mov
push
daa
sar
(bad)
hlt
stos
pusha
and
fnsave
sti
or
mov
lods
out
cmp
mov
sub
inc
pop
jae
aaa
cmps
mov
shr
dec
cmp
mov
ror
test
or
js
(bad)
xor
and
hlt
sar
push
outs
pop
cmps
je
jmp
or
or
fsincos
add
jb
cmp
les
cmp
pop
mov
jecxz
mov
gs
mov
push
movs
jecxz
or
cmc
ror
leave
and
dec
retf
mov
ss
xor
sub
and
stc
lods
cmps
mov
test
std
xor
(bad)
and
loop
push
(bad)
nop
aam
xor
cli
shl
jbe
aam
fild
test
leave
pop
pop
pushf
fld
fist
ja
jg
aam
in
sar
adc
mov
repnz
loopne
push
ins
sub
mov
or
push
cdq
sub
sub
icebp
sub
xchg
jge
retf
lods
daa
push
(bad)
add
not
scas
cmp
rcr
addr16
out
jnp
lds
pop
push
add
ins
mov
push
dec
xchg
div
mov
fwait
mov
mov
push
(bad)
pop
mov
hlt
lea
cmp
cmp
xchg
sbb
cmp
or
cld
(bad)
stos
cdq
retf
xor
call
adc
dec
bound
sub
out
iret
sbb
jle
sbb
cmp
call
mov
stos
inc
or
dec
xor
(bad)
push
pop
sar
sub
jg
imul
in
mov
aam
mov
cli
outs
add
mov
movs
xchg
mov
push
aam
ja
in
push
inc
jge
imul
xor
sub
outs
loop
jg
enter
int
retf
pop
xchg
ret
gs
test
(bad)
inc
mov
jg
sub
js
fnsave
out
adc
add
mov
stc
cdq
sbb
fcomip
sub
sub
dec
sbb
xchg
sub
jo
mov
sti
and
xchg
xchg
imul
jecxz
adc
iret
popa
and
fdiv
and
xor
or
dec
lds
pop
or
cs
mov
ja
xchg
xchg
loopne
fldz
dec
lds
cmp
jo
adc
or
cmp
dec
(bad)
enter
sub
xchg
jp
push
cmp
test
test
mov
push
jb
inc
into
push
mov
es
retf
fucomip
add
test
sahf
cdq
push
xchg
call
or
or
xor
popa
jmp
lsl
xchg
mov
xor
add
xchg
loope
adc
or
xor
lods
ss
xor
ret
stos
or
ret
dec
inc
ret
not
jmp
xchg
inc
cli
jecxz
and
retf
pop
test
push
aaa
inc
dec
fst
or
std
mov
mov
shr
cmp
add
fldcw
add
cmp
sub
cwde
or
jg
(bad)
into
mov
adc
adc
inc
out
inc
mov
loope
inc
test
(bad)
iret
sub
xor
ss
(bad)
adc
pop
xchg
mov
and
sub
test
das
inc
hlt
adc
fistp
pop
ja
retf
ins
jno
movs
(bad)
adc
push
movs
dec
loopne
adc
mov
or
pop
scas
inc
xor
fild
sbb
inc
aaa
jge
sub
in
jnp
push
xor
inc
lds
push
mov
fnstcw
or
jmp
push
cdq
add
hlt
stos
xchg
aam
fisttp
mov
adc
sbb
pop
jg
pop
int
jbe
div
fidiv
(bad)
(bad)
inc
cmp
sbb
lock
mov
aas
dec
cs
pusha
mov
movs
dec
mov
xor
mov
pop
out
inc
and
cmps
test
push
dec
lods
mov
pop
mov
sub
adc
stc
fisttp
adc
dec
pop
add
mov
ja
and
ins
sbb
or
(bad)
inc
cmps
lds
push
xor
in
movs
out
mov
pop
(bad)
(bad)
jl
not
pop
test
imul
daa
pop
cs
mov
fstp
loope
je
add
dec
pop
mov
jnp
mov
mov
sbb
popf
xor
or
add
adc
std
mov
push
std
repnz
idiv
pop
cmp
hlt
jno
mov
pop
xchg
gs
ret
pop
inc
mov
jl
pusha
push
jmp
xchg
mov
sbb
stc
out
pop
ds
mov
pop
sub
pop
push
das
adc
jecxz
movs
fwait
mov
inc
test
pop
mov
loop
pushf
lods
or
inc
int
sahf
cmp
cmp
mov
ror
xchg
add
retf
and
xchg
scas
adc
test
xor
mov
sub
adc
imul
xor
aaa
mov
xchg
ja
cli
std
ss
std
loop
repnz
dec
or
cwde
inc
sti
xor
div
inc
icebp
xchg
xchg
outs
pop
cmps
pusha
add
jnp
rol
jecxz
mov
dec
or
jno
push
add
sti
sub
fmul
aaa
into
dec
push
dec
xor
nop
inc
outs
js
xchg
pop
jbe
mov
or
mov
nop
or
loopne
movs
loop
sub
push
sub
adc
aam
int3
jmp
inc
adc
je
fstp
sar
in
jecxz
(bad)
and
nop
cwde
cld
jge
int
fstp
pop
test
mov
mov
ret
xor
ds
adc
and
call
outs
mov
mov
out
aam
hlt
ror
ss
sub
(bad)
push
neg
and
clc
push
or
adc
sub
sbb
jbe
xor
cdq
rol
dec
in
add
cmp
mov
xchg
cmp
imul
mov
dec
(bad)
std
add
mov
and
sbb
fcom
retf
rcr
not
enter
and
push
psrad
test
sub
(bad)
cmp
jl
je
les
fnstenv
test
dec
or
fadd
push
push
lock
out
adc
sbb
fcom
xor
jg
adc
xchg
fld
std
jno
std
es
in
mov
fidivr
adc
push
xor
push
cmp
je
push
dec
push
xchg
and
mov
scas
and
push
sub
mov
outs
push
cli
ret
pusha
(bad)
push
pop
into
add
rol
jns
sar
sub
dec
inc
dec
dec
fwait
aad
push
xor
cmps
pop
mov
xchg
or
inc
jmp
and
add
jg
mov
dec
div
sub
retf
inc
scas
sub
out
cmp
mov
fdivr
mov
jmp
sub
jle
cld
xor
cmp
sub
mov
ss
or
(bad)
sar
xchg
inc
ret
xchg
clc
xor
pop
mov
xchg
add
mov
adc
ins
(bad)
in
dec
dec
sub
adc
sbb
jnp
in
int3
xchg
sbb
jmp
(bad)
data16
sbb
jmp
and
retf
mov
retf
inc
repz
sar
ret
rol
push
push
xchg
pop
jnp
addr16
lock
xor
nop
aam
dec
test
lods
pop
inc
into
loopne
mov
das
push
cdq
clc
xchg
add
fwait
push
movs
inc
sbb
xor
mov
aam
mov
cmc
mov
neg
mov
dec
add
out
push
fstp
inc
jo
fwait
sti
push
mov
test
xor
mov
call
call
sub
jp
test
(bad)
pop
ret
dec
sbb
out
(bad)
movlps
in
mov
jge
sub
int3
nop
data16
add
sub
pop
cli
shl
pop
or
jmp
mov
fs
mov
xchg
cmp
cmp
mov
rcr
lahf
mov
mov
int3
stos
and
in
sub
dec
je
adc
mov
fwait
xchg
cwde
lea
std
stc
fidiv
sbb
fld
mov
xchg
mov
push
pop
sbb
lea
pop
cmp
mov
inc
inc
(bad)
jmp
into
sbb
in
(bad)
outs
sahf
add
jae
lea
add
fidiv
add
ret
xor
adc
pop
add
or
sbb
sub
jo
push
or
loopne
mov
outs
in
adc
ret
push
stc
int3
clc
or
mov
mov
int3
fucomp
mov
(bad)
pop
xor
mov
dec
aam
arpl
xchg
cmp
push
aam
(bad)
dec
sbb
xchg
xchg
test
xor
or
call
pop
cmps
push
cwde
cs
scas
inc
inc
into
mov
add
sub
enter
aaa
out
adc
xor
movs
outs
imul
sub
test
lods
push
lods
loope
loope
aad
or
mov
pop
sbb
sub
mov
inc
and
inc
mov
mov
and
std
mov
fs
pusha
outs
xchg
mov
ds
xor
enter
push
dec
clc
fs
test
enter
ins
and
add
xor
and
sub
add
cmps
cdq
fcomip
jo
fsub
enter
out
pop
call
(bad)
es
call
pop
pop
mov
into
sbb
ficom
xor
(bad)
dec
mov
jp
cmp
retf
cmp
mov
xchg
loope
mov
add
adc
push
mov
je
cdq
scas
cmp
scas
ds
jmp
cmp
xor
data16
lods
xchg
xchg
push
cmp
dec
(bad)
adc
(bad)
cli
mov
out
dec
cwde
rcr
mov
or
xchg
xor
mov
(bad)
dec
ret
or
lea
or
daa
(bad)
gs
pop
and
xchg
mov
gs
imul
mov
jo
fimul
add
dec
leave
cmps
gs
mov
inc
dec
repz
push
xor
jb
leave
add
dec
jo
xchg
in
adc
js
pop
cmp
push
mov
inc
enter
adc
adc
lods
push
fcomp
dec
adc
or
xor
lds
cs
pop
push
sub
jno
inc
inc
dec
jmp
inc
mov
and
shl
push
jmp
(bad)
sbb
push
sbb
iret
hlt
lds
adc
fnsave
jnp
adc
inc
cwde
jmp
sub
stos
lds
dec
inc
jbe
mov
pop
fwait
repz
push
fdivp
adc
cmp
pop
leave
and
call
jmp
xor
test
cmc
dec
adc
psubw
pop
test
lea
in
test
cmp
inc
and
arpl
xor
pop
pop
jecxz
movs
dec
push
or
popf
sub
sub
dec
movs
daa
sbb
aaa
loop
(bad)
xor
loop
mov
xchg
add
dec
loopne
into
xchg
fdivr
js
cli
(bad)
pop
pop
add
std
jnp
push
cmc
pop
xlat
ror
or
cmp
jmp
gs
aas
xor
lods
call
addr16
punpckhbw
movs
add
jnp
out
push
push
(bad)
sbb
sbb
shl
inc
inc
pop
repnz
jle
ss
retf
(bad)
fwait
(bad)
stc
in
add
jbe
dec
dec
xlat
mov
pop
add
jns
mov
jbe
in
ficomp
adc
(bad)
xchg
jae
mov
sbb
cmp
push
out
adc
inc
imul
xchg
mov
dec
mov
cwde
pop
and
outs
adc
jb
fsubr
mov
xchg
idiv
cmp
jp
add
imul
sub
mov
das
mov
or
rcl
cmp
mov
xchg
nop
fdiv
cmps
push
std
jmp
lods
pop
push
xchg
pop
mov
ja
cmc
mov
mov
mov
xchg
dec
int3
pop
mov
jae
aas
mov
daa
outs
or
push
pop
ins
add
in
lahf
dec
dec
mov
mov
lahf
and
call
sbb
pop
and
scas
mov
out
(bad)
xchg
ss
mov
icebp
popa
push
(bad)
mov
mov
jmp
pop
cmps
js
add
data16
int
bound
rcr
popa
mov
sub
mov
in
ins
push
pushf
(bad)
stos
sub
(bad)
mov
test
ja
push
mov
inc
mov
pop
adc
aad
pop
xor
cmps
sbb
(bad)
cmp
mov
rcr
xchg
loopne
push
xchg
mov
mov
push
and
lods
push
cs
inc
fwait
or
or
stos
ins
mov
in
rcr
pop
leave
inc
in
mov
mov
mov
movs
cmp
xchg
mov
cmp
jecxz
mov
test
push
jbe
add
or
sar
and
scas
in
cmp
ds
push
or
stos
xor
in
or
sbb
int
std
and
movs
not
rol
adc
add
add
imul
or
cs
mov
jg
(bad)
sub
sbb
cmps
sti
add
cdq
aaa
loopne
es
scas
outs
add
into
push
pop
out
sbb
sub
stc
jnp
xchg
sub
pushf
outs
shl
mov
xchg
pusha
sbb
mov
movs
mov
xor
inc
cmp
shl
xchg
cld
call
fisubr
retf
test
test
out
push
push
jbe
lods
and
enter
mov
test
or
jno
out
popf
sbb
or
xchg
ret
ins
shl
and
in
xor
lods
in
cld
add
xchg
sub
lds
sub
cs
cmp
(bad)
xchg
mov
push
adc
out
mov
cmp
adc
mov
push
movs
push
xchg
cmps
fcmovne
mov
xchg
ret
dec
emms
fist
pop
jno
push
out
es
mov
dec
cmp
pusha
in
inc
mov
fnsave
stos
dec
je
pop
arpl
sti
sub
mov
iret
das
fcomp
pop
aaa
aad
adc
mov
imul
adc
inc
in
out
sbb
popa
pop
fiadd
xchg
jmp
imul
cmc
dec
mov
mov
push
(bad)
aaa
(bad)
ret
xchg
movs
sub
in
xor
call
into
retf
pop
jp
sbb
jmp
and
call
add
es
jbe
(bad)
pop
add
jne
pop
in
cmps
fild
stos
pusha
cld
or
out
mov
in
lock
jno
pop
hlt
aam
inc
std
jge
es
call
retf
xor
xor
inc
push
sbb
scas
test
popf
add
in
aad
aam
pop
std
push
scas
mov
jmp
call
adc
push
mov
pop
gs
ror
rol
loope
ret
out
jg
jmp
inc
repz
xor
sbb
ja
jg
mov
stc
fist
dec
dec
pop
pop
inc
dec
mov
in
push
push
cmp
pop
inc
test
bound
mov
cwde
into
stos
les
xor
scas
int
mov
xchg
div
mov
test
cs
stc
mov
jb
sub
add
push
mov
and
mov
add
jmp
sub
jb
mov
(bad)
cmc
fistp
(bad)
adc
fidiv
mov
aam
(bad)
or
push
mov
mov
les
lock
retf
jnp
push
in
out
clc
mov
xchg
test
mov
aam
pop
push
dec
les
xchg
xchg
mov
ja
or
imul
stos
lods
cmps
out
cmp
inc
(bad)
sar
jno
mov
hlt
(bad)
sti
jg
pop
rcl
gs
xchg
stc
cmp
cmc
pusha
das
xchg
inc
call
pop
inc
div
clc
pop
fdivr
adc
xor
pop
mov
push
(bad)
cmps
adc
or
sub
inc
cmp
(bad)
out
push
or
dec
iret
idiv
shl
or
leave
in
cmps
cmp
icebp
addr16
mov
(bad)
jge
pushf
addr16
adc
jecxz
jmp
push
and
mov
pop
pop
retf
jnp
lods
mov
sahf
nop
fild
push
push
imul
jno
pop
jno
sub
ret
push
aam
jnp
adc
mov
loopne
xchg
push
int
fdivr
aas
dec
jnp
pop
cmps
hlt
jecxz
adc
push
(bad)
xchg
loop
test
or
mov
fld
xor
movs
xor
cmp
dec
into
jb
mov
loopne
fwait
xchg
stc
scas
retf
sbb
sbb
mov
xor
mov
in
les
and
add
push
loope
std
addr16
jp
sbb
leave
fdivr
test
jo
call
inc
mov
popf
popf
cmc
out
jnp
xchg
pop
mov
add
inc
test
pop
sub
mov
nop
cmp
rcr
pop
imul
ret
cmps
and
lods
lock
div
mov
scas
es
les
add
enter
inc
(bad)
movs
jmp
cli
pop
add
mov
call
sub
lahf
adc
sub
out
add
sub
push
adc
(bad)
jo
xchg
ja
inc
add
gs
inc
retf
xlat
call
retf
movs
(bad)
scas
aad
adc
in
mov
movs
retf
lods
xchg
sbb
inc
cld
test
shl
outs
dec
pop
dec
daa
es
mov
sbb
aaa
xchg
ret
add
scas
add
enter
bound
mov
shr
dec
stos
push
adc
fistp
jp
and
aaa
sub
mov
ins
xchg
es
clc
dec
retf
or
mov
mov
jp
je
dec
xor
test
xor
mov
ret
push
dec
xchg
pop
mov
pop
jns
cmps
adc
stos
cmps
mov
and
(bad)
in
xor
mov
cmp
je
xchg
mov
mov
push
retf
inc
popf
push
cmc
clc
js
cmp
jnp
sbb
mov
sub
retf
xor
pop
clc
push
jnp
int
(bad)
je
mov
xchg
outs
sahf
ficomp
xchg
stos
je
adc
sbb
pop
cmp
mov
pop
dec
mov
ins
jp
outs
pop
pop
sub
mov
mov
push
pop
dec
test
ds
xor
pusha
sub
mov
retf
inc
dec
shl
(bad)
cmp
xchg
out
push
jnp
dec
adc
jle
pop
data16
cmp
loop
or
(bad)
sbb
add
mov
repnz
sub
and
ja
rol
ret
std
add
out
sbb
xlat
test
cmc
xchg
icebp
xlat
cli
pop
dec
data16
inc
stos
pop
jns
bound
mov
mov
rcr
gs
mov
or
pop
mov
test
sbb
jne
stos
in
ret
or
jo
call
imul
push
xchg
cmp
dec
dec
in
arpl
clc
pop
pop
jmp
xchg
out
sub
adc
mov
xor
inc
cli
jmp
or
jmp
cmps
out
and
std
add
sub
xchg
ss
jno
cmp
leave
add
dec
cmps
in
ins
mov
mul
scas
stos
and
div
and
aaa
pop
cli
mov
scas
mov
js
xlat
or
gs
pop
ret
fwait
xchg
out
sbb
or
mov
sub
xchg
xchg
and
push
pop
(bad)
aam
push
mov
mov
scas
mov
xchg
jg
sahf
mov
pop
dec
in
loope
dec
icebp
popa
dec
inc
scas
aas
or
nop
jge
(bad)
dec
inc
gs
or
xchg
mov
scas
or
xchg
mov
dec
out
push
call
mov
adc
dec
clc
sbb
enter
fcomi
sbb
cmc
cmc
ss
or
fisttp
es
cs
clc
loop
xchg
push
inc
cmc
leave
dec
inc
jae
repnz
and
push
cmp
fsin
or
mov
dec
icebp
xchg
pop
sub
or
gs
loop
and
popa
sub
dec
out
and
or
mov
lds
and
jne
popf
test
mov
mov
fdecstp
push
push
lea
cs
add
(bad)
xor
dec
push
fwait
addr16
push
arpl
aad
call
jp
and
inc
pusha
scas
add
mov
pop
fld
add
mov
std
stos
cmovo
xchg
leave
inc
rcr
pop
xchg
add
aad
adc
pop
popf
jp
adc
mov
xor
dec
dec
xor
fstp
inc
push
test
xchg
sub
sub
mov
fcmovne
mov
mov
movs
adc
and
(bad)
xchg
cwde
pop
xlat
xor
cmps
mov
mov
xchg
imul
sahf
shl
mov
fs
xor
test
fdivr
and
add
scas
dec
pop
loope
mov
adc
stos
(bad)
mov
ficom
xlat
add
inc
repz
ins
movs
mov
xlat
mov
movs
(bad)
cmp
imul
pop
out
out
and
(bad)
and
inc
ror
adc
pusha
pop
pop
dec
mov
or
pop
stos
mov
lock
push
pop
push
into
pop
ds
mov
mov
pop
sbb
add
add
lods
push
inc
imul
inc
pop
test
in
aad
sbb
and
or
cdq
retf
cmp
push
adc
mov
jnp
iret
ins
sti
jnp
fistp
add
mov
push
add
je
mov
sahf
leave
pop
jg
stos
out
pop
aaa
mov
(bad)
dec
repz
lods
jnp
(bad)
je
cmp
divps
aam
jmp
push
fstp
add
or
and
mov
mov
lock
xchg
cmp
nop
js
jb
inc
cmp
dec
fsub
inc
nop
pop
shl
and
inc
jl
test
sub
jl
stos
and
test
mov
out
xchg
xchg
rcr
or
add
or
mov
mov
xor
cmps
mov
pop
ja
xchg
or
add
in
loopne
mov
fldln2
inc
xchg
hlt
jmp
scas
jecxz
cmps
mov
(bad)
pop
(bad)
addr16
pop
pop
pusha
add
or
cmps
push
mov
sub
aam
iret
cmp
mov
rcr
daa
mov
pop
xchg
mov
repz
fist
aas
mov
or
ret
je
and
push
cmps
fs
mov
xlat
and
rcr
jno
sub
(bad)
pop
movs
enter
mov
cli
fild
pop
pop
push
jns
arpl
cmp
xchg
mov
cs
loopne
loopne
cmp
ret
out
test
jb
(bad)
mov
scas
in
scas
push
aam
nop
std
mov
mov
movs
push
js
pop
stc
push
arpl
xor
xor
in
rep
lock
or
cld
pop
mov
scas
mov
add
add
push
add
lahf
add
das
push
and
jmp
dec
scas
sbb
std
push
adc
in
inc
push
mov
test
mov
mov
fsubr
jmp
or
fsubp
jb
inc
lock
scas
adc
mov
xor
dec
call
jnp
xchg
pushf
mov
xchg
adc
mov
jmp
ucomiss
retf
in
call
es
sbb
aam
jp
stos
lea
sbb
aad
sub
dec
fs
nop
sti
stos
add
fdiv
out
fs
pop
les
xchg
jb
fimul
or
cmp
pop
add
sub
rcr
jo
mov
out
mov
inc
push
xor
icebp
push
or
jle
rol
gs
ror
fs
in
sub
xor
movs
std
xchg
movs
out
pop
mov
adc
xchg
or
lea
ja
jne
jmp
fisttp
pusha
dec
or
pop
jp
adc
push
je
in
fwait
rol
in
and
not
sbb
adc
(bad)
xchg
add
cdq
(bad)
mov
js
fwait
mov
aad
inc
push
jbe
or
fwait
movs
jp
call
cmp
daa
ins
push
inc
inc
int3
rcr
ins
jae
mov
mov
int
js
xchg
xlat
mov
and
push
cdq
in
add
ret
loopne
xchg
jmp
xor
and
or
out
loope
adc
xchg
push
xor
push
loop
xor
lock
sbb
mov
(bad)
sub
cmp
sub
cmp
cmp
sub
adc
int3
jnp
cli
lea
aaa
add
jp
icebp
push
adc
in
sbb
pop
fdivr
in
sbb
imul
inc
and
leave
sub
mov
pop
dec
fdivr
push
adc
adc
add
xchg
cdq
xchg
sub
cmps
test
xor
int
enter
inc
(bad)
int3
scas
jl
jl
mov
xor
mov
clc
popf
stc
sbb
mov
or
mov
inc
or
sbb
cli
in
retf
mov
xor
sub
call
jae
scas
bound
ss
or
fs
in
ss
cmp
stos
add
ficomp
out
xchg
jno
ret
mov
data16
pushf
enter
in
jno
xchg
(bad)
into
retf
jle
repnz
mov
cld
xor
in
repz
jno
jmp
leave
popa
sbb
jg
ds
out
mov
pop
add
ret
(bad)
xchg
or
mov
push
sahf
xlat
adc
and
xchg
mov
fist
push
das
inc
int
cdq
or
or
les
fs
jb
movs
or
daa
sbb
cwde
mul
mov
stc
sbb
cmps
fs
neg
fdiv
mov
(bad)
pop
mov
add
push
xor
pop
cmp
or
sub
arpl
xchg
fdivp
test
imul
rcl
hlt
dec
cmp
and
mov
add
repnz
inc
mov
enter
mov
pop
jnp
pusha
mov
jmp
or
neg
lods
xchg
(bad)
xchg
jae
cmp
out
push
fmulp
pop
retf
inc
jmp
lds
jmp
pop
dec
cdq
sub
stc
mov
dec
xor
adc
test
arpl
cmps
aas
mov
aad
daa
and
jae
ja
mov
movs
xchg
or
aaa
clc
icebp
(bad)
and
and
jg
fidivr
sbb
pop
adc
inc
sub
xchg
cmps
inc
clc
das
mov
mov
mov
pop
mov
stos
cld
push
(bad)
xor
add
mov
loope
sbb
inc
xor
cmp
push
and
add
cli
in
inc
fadd
pop
mov
xchg
stos
test
out
push
retf
iret
js
mov
dec
add
mov
xor
sti
ja
out
clc
cld
mov
jle
ffree
int3
iret
(bad)
hlt
call
fwait
aad
loopne
mov
xchg
jg
sub
clc
push
and
aam
jmp
lock
cdq
or
out
mul
cmp
or
mov
add
xor
stc
es
pop
xchg
lods
sahf
dec
push
and
outs
ror
add
mov
ret
imul
jne
imul
sub
pop
out
lea
add
(bad)
mov
inc
imul
stos
loopne
and
test
idiv
sub
jb
sahf
fsubr
sbb
shr
pop
fisttp
add
stos
push
or
repz
sub
gs
loopne
dec
cmp
das
mov
xchg
out
mov
in
fwait
fs
xchg
and
mov
mov
push
ret
xchg
sub
ds
pop
push
sbb
loope
mov
push
imul
ins
cwde
(bad)
cli
ret
xor
sahf
xor
mov
adc
dec
sahf
mov
rcl
clc
push
outs
pop
inc
fcmovnbe
(bad)
cmp
push
ins
mov
pop
mov
dec
ror
icebp
pushf
sti
shr
fimul
into
fild
fs
or
inc
xchg
push
adc
cmps
mov
sbb
sti
mov
push
stos
dec
hlt
jmp
lds
push
inc
out
xchg
add
daa
pop
mov
inc
daa
fdivr
fwait
test
fimul
cwde
jp
les
sbb
addr16
push
mul
pop
or
test
loope
dec
xchg
stc
sbb
cmp
nop
cmps
outs
push
sbb
shr
mov
out
xchg
lods
fwait
jbe
arpl
ja
push
mov
addr16
xlat
(bad)
aaa
or
and
retf
stc
sti
cli
sub
xlat
iret
dec
push
and
mov
xor
icebp
jmp
and
add
test
cwde
scas
mov
enter
mov
test
xchg
test
adc
xlat
jnp
fs
inc
xor
pop
cmp
xor
jecxz
xor
repz
outs
xchg
and
shl
jmp
or
les
inc
call
stos
mov
lods
push
sub
shl
pop
cmp
inc
pop
add
pop
into
(bad)
test
out
stos
leave
jmp
movs
ret
mov
iret
outs
mov
ror
mov
add
jno
adc
xchg
retf
cmp
jmp
(bad)
push
call
jg
cwde
xor
ins
imul
mov
cmp
or
jb
inc
mov
xchg
fs
cmp
shl
inc
or
adc
aam
xchg
mov
mov
lds
ja
xchg
sbb
mov
mov
push
addr16
mov
ss
in
xchg
cmps
sbb
aad
mov
(bad)
pop
mov
ins
lea
lods
mov
xchg
ja
sbb
cmps
sbb
arpl
jecxz
xchg
fistp
mov
pslld
movs
inc
pop
xor
or
(bad)
test
mov
pop
das
(bad)
jne
add
mov
xchg
adc
inc
ss
push
mov
icebp
mov
mov
sub
inc
sti
popf
aad
mov
in
pop
shr
sbb
push
mov
or
test
inc
push
cmps
ss
movs
jmp
mov
push
pop
push
clc
pop
(bad)
out
inc
or
xchg
and
push
ja
mov
pop
adc
xor
pop
pop
xor
fadd
scas
shl
jg
bound
rol
les
add
add
push
cmp
cmp
not
into
js
adc
rol
lock
(bad)
call
out
sbb
xchg
and
ins
dec
pop
push
mov
sti
pop
shl
dec
pop
pushf
test
jge
outs
mov
into
mov
cmc
inc
xchg
xlat
inc
fsub
jmp
pop
mov
mov
std
cli
loope
call
pushf
adc
movs
call
sar
adc
dec
adc
xor
das
(bad)
dec
stos
pop
and
mov
mov
pop
test
mov
adc
jbe
and
sar
lock
mov
adc
sbb
lea
sub
xor
pop
push
sub
arpl
xor
fistp
pop
imul
imul
pop
sbb
dec
ja
mov
push
push
mov
sbb
shr
call
dec
in
xchg
sub
outs
pop
out
push
(bad)
adc
mov
jnp
or
fisub
pop
fisttp
and
add
jecxz
fld
fst
in
inc
sbb
jl
mov
push
int3
aaa
pop
lods
xor
shl
loop
jne
in
pop
cmp
push
ds
loopne
clc
mov
in
jg
push
mov
inc
cmp
mov
push
jge
jecxz
and
hlt
mov
xor
data16
mov
imul
into
bound
std
shl
and
ss
into
cs
adc
je
iret
aas
sbb
bnd
fs
mov
mov
dec
mov
cmp
aas
inc
sub
sbb
sub
test
adc
stos
stos
jne
fidiv
push
push
popf
add
sar
pop
dec
movlhps
inc
pushf
arpl
nop
adc
xlat
fisubr
sbb
hlt
pushf
loopne
sbb
bound
aas
cmp
dec
jmp
mov
jg
in
mov
imul
popa
pop
pushf
pop
jl
sbb
mov
mov
neg
and
sub
xchg
mov
in
sub
push
cmps
cli
push
into
sub
pop
scas
and
nop
movs
daa
inc
mov
xchg
xor
mov
ins
and
shl
popa
outs
icebp
push
adc
arpl
test
test
pop
sub
loope
aad
scas
add
jmp
hlt
inc
and
addr16
pop
dec
sahf
loopne
test
push
loop
in
jbe
xchg
cmp
ins
xor
repz
sub
movs
(bad)
ret
push
push
adc
inc
(bad)
push
int3
lods
mov
pop
and
fcomp
fisubr
pop
inc
mov
out
out
into
rcr
hlt
imul
neg
sub
movs
popa
pop
retf
sbb
and
ficom
movs
inc
sub
sti
mov
mov
das
jbe
lods
adc
xchg
lds
aas
dec
mov
movs
xchg
ss
sub
fst
xor
in
mov
xchg
in
(bad)
in
jns
stos
inc
std
pop
mov
clc
mov
fwait
std
jno
sub
popa
dec
inc
or
out
jmp
das
or
mov
sub
mov
dec
xchg
fld
cmp
repz
sub
ins
dec
and
and
jmp
dec
aam
cmps
clc
pop
test
clc
imul
mov
jecxz
retf
pop
call
inc
loope
mov
hlt
push
test
sbb
or
pop
(bad)
and
arpl
jmp
std
popa
jmp
js
sbb
and
test
ret
je
imul
and
bound
pop
fadd
cmps
mov
pop
sub
xor
xchg
sbb
jns
adc
add
pop
cmp
(bad)
mov
scas
jb
inc
jg
lea
sbb
push
mov
scas
cmp
ins
ins
cdq
repnz
ins
inc
inc
in
gs
jmp
sub
push
pusha
div
icebp
ja
imul
popa
pop
into
imul
add
popa
aam
cld
cwde
ins
jge
sbb
dec
jmp
or
daa
std
pop
ficomp
pop
sti
jno
mov
shr
daa
adc
jb
je
movs
push
(bad)
mov
mov
sub
rcl
mov
jno
jae
cmp
ja
add
fsubr
lods
mov
adc
xchg
adc
pop
inc
sbb
call
push
ffree
and
out
push
pop
jl
jle
in
mov
fldenv
sub
cdq
bnd
ret
xor
mov
cli
es
std
xchg
add
sub
cmps
inc
cmp
sbb
sti
repz
jno
nop
push
dec
jle
in
fwait
push
xchg
inc
pushf
mov
xchg
adc
cmps
lods
data16
enter
add
sub
mov
and
test
(bad)
rcl
jmp
push
pop
or
cmp
js
push
pop
stos
or
pop
cmps
xor
push
inc
sub
xchg
imul
jnp
(bad)
call
mov
adc
dec
pop
movs
repz
mov
jnp
outs
jp
cmp
retf
dec
lods
push
inc
mov
jno
inc
mov
leave
gs
lods
sub
pop
and
cmp
(bad)
data16
sbb
mov
xor
hlt
push
adc
ror
stos
xchg
and
jmp
add
mov
movs
cs
xor
scas
xor
cmc
sub
jmp
sub
jo
dec
mov
das
mov
dec
shl
xor
aaa
aas
adc
mov
pop
hlt
pop
cdq
jecxz
pop
call
gs
int
push
pop
mov
xchg
xor
fcomp
jge
adc
pop
mov
iret
and
js
mov
leave
leave
pushf
retf
idiv
mov
pop
jbe
xchg
mov
add
jecxz
out
push
and
dec
dec
or
repnz
adc
retf
add
hlt
lods
push
fs
lods
daa
add
xchg
jp
xor
mov
mov
retf
das
aas
fs
call
cmp
data16
push
shl
fnstenv
and
jl
lods
or
cli
std
jg
xchg
xchg
cmps
sbb
or
ss
or
mov
or
nop
and
xchg
push
adc
fld
retf
out
adc
push
jecxz
adc
xchg
sub
(bad)
adc
jo
jno
rol
adc
mov
inc
cwde
rcl
jnp
stos
mov
xchg
mov
test
mov
enter
enter
(bad)
cmp
push
scas
or
mov
inc
push
enter
sub
retf
rcl
and
dec
adc
pop
nop
mov
dec
sub
call
mov
(bad)
lds
ds
jae
add
mov
mov
pop
sub
dec
inc
cmps
test
movs
push
fild
ds
jns
cmp
ins
mov
pop
xchg
push
xchg
enter
dec
aaa
cs
mov
add
out
cmps
sub
sbb
mov
fcomp
jle
lds
xchg
xchg
mov
pop
ja
arpl
pop
adc
inc
mov
xchg
xchg
add
retf
inc
add
pop
ss
(bad)
into
ja
push
push
cli
fsubr
das
aad
xchg
mov
in
add
inc
inc
dec
pop
jg
xor
ds
adc
mov
popa
xor
xrelease
bound
mov
jae
icebp
scas
adc
or
inc
stos
sar
ret
std
dec
add
jbe
ret
fistp
fidivr
test
fmul
stc
shr
mov
clc
ja
bound
jb
fdiv
xchg
mov
and
add
add
fidiv
inc
imul
out
dec
das
in
mov
pop
pop
xlat
dec
push
repz
jnp
mov
int
mov
leave
fadd
in
add
fucomi
bound
or
sbb
pop
ret
sar
xchg
inc
add
xchg
and
sar
jae
ror
push
out
retf
lock
out
adc
mov
mov
scas
add
jno
add
pop
xchg
dec
fdivp
dec
fnstenv
pop
cmp
add
scas
and
sub
ficom
adc
in
cs
add
adc
aam
lock
imul
les
mov
sbb
jge
sbb
mov
cmp
mov
ret
test
adc
fdiv
adc
lods
(bad)
repz
xor
mov
mov
and
pop
daa
sub
cmp
mov
inc
pop
cmp
jg
mov
mov
in
dec
dec
(bad)
xor
add
mov
mov
loope
push
add
fbstp
mov
xchg
sbb
enter
push
sub
fdivr
das
dec
icebp
in
sahf
cmps
es
sub
movs
into
jmp
fwait
test
fsub
loop
dec
cld
mov
adc
popf
jbe
push
mov
outs
xchg
sar
sbb
nop
mul
stos
xchg
repnz
sbb
cmp
dec
and
cwde
jnp
loop
xlat
sti
jno
mov
cmps
push
dec
es
imul
retf
push
pusha
jge
gs
int3
mov
mov
popa
push
cwde
mov
cmc
int
and
jle
xchg
cmps
(bad)
or
sahf
(bad)
cmp
ficomp
xor
dec
or
sbb
(bad)
scas
xchg
dec
cmp
gs
es
mov
gs
(bad)
call
into
cmps
jbe
mov
fs
dec
xor
sub
push
xor
retf
stos
pop
dec
retf
mov
mov
pop
repz
push
add
jo
sbb
imul
ss
loopne
mov
pop
sub
or
enter
sbb
xchg
nop
imul
jecxz
gs
xchg
mov
leave
cmp
ds
mov
jle
mov
pop
popf
sbb
sbb
repz
sub
push
in
out
or
pop
leave
mov
sbb
ror
(bad)
ins
cld
lea
xor
test
call
les
loopne
cmps
dec
xchg
bound
xchg
out
jle
lods
(bad)
adc
adc
cmp
retf
xor
lods
jno
cmp
mov
loope
adc
mov
jns
addr16
mov
mov
lods
and
mov
fistp
out
nop
in
xchg
add
xchg
adc
push
mov
ror
adc
inc
lds
in
push
out
mov
int3
xor
cmps
lock
or
js
(bad)
daa
icebp
xor
(bad)
jp
push
test
out
ret
sub
pop
jmp
or
(bad)
or
adc
jmp
mov
sbb
repnz
dec
call
movs
outs
xchg
(bad)
adc
mov
retf
jae
xor
es
mov
sub
and
add
jno
ins
ins
mov
adc
pop
je
(bad)
push
dec
(bad)
adc
mov
imul
and
pop
push
(bad)
outs
imul
ins
push
outs
in
add
jae
and
rol
js
repz
push
retf
outs
jnp
or
fcmovnb
pusha
pop
push
pop
mov
hlt
nop
mov
mov
sbb
mov
sar
cli
push
fs
inc
push
mov
sar
xor
sub
mov
mov
or
aas
xchg
push
ins
mov
pop
cwde
mov
femms
addr16
pop
dec
xchg
push
mov
xor
and
dec
and
bound
push
adc
sbb
dec
and
xor
pop
xor
or
xchg
and
push
xchg
sub
push
sub
push
(bad)
int3
push
jns
xlat
pusha
mov
mov
sub
sub
mov
cmps
push
sbb
jmp
push
pop
pop
ja
fbld
inc
out
xchg
mov
cmp
push
push
xor
pop
in
retf
or
inc
mov
ficom
jle
fwait
xor
call
in
cmp
js
ror
daa
inc
jnp
sbb
leave
jmp
popf
jne
mov
ss
shr
dec
or
and
shl
retf
xchg
xchg
div
inc
inc
loop
imul
mov
pop
jo
and
or
add
jnp
lods
jle
add
pop
bound
jo
add
loope
xchg
adc
push
xchg
cli
pop
cmc
sbb
in
xchg
es
jae
dec
call
clc
adc
xchg
mov
call
aaa
ins
jnp
ins
sbb
sub
add
inc
into
mov
bound
fidiv
stos
mov
add
pop
add
(bad)
sahf
jle
mov
or
cmp
xor
scas
shr
xor
sbb
out
out
sub
cld
dec
neg
add
retf
ret
sbb
sti
not
push
cmc
cmp
out
mov
addr16
arpl
fs
pop
shl
data16
sub
popf
fcomi
in
and
pusha
nop
adc
ror
cld
sbb
cmp
call
push
push
pusha
jg
inc
bound
scas
mov
mov
aam
in
push
cwde
inc
or
or
popa
and
mov
rol
dec
fwait
push
xor
and
das
ja
xchg
cs
sub
sub
in
push
ins
test
sub
dec
mov
sub
jno
push
add
jo
lea
mov
dec
pop
mov
push
inc
xchg
or
jecxz
push
sub
xlat
imul
rol
sti
lods
dec
arpl
cmp
pop
sbb
ins
ret
jmp
mov
jo
pop
rcl
cmp
jne
cmp
mov
inc
inc
sbb
cmp
(bad)
and
xchg
mov
enter
lods
or
xchg
xor
gs
sbb
and
sbb
sub
inc
cmp
or
cdq
jecxz
dec
fistp
ffreep
sbb
pusha
loop
cld
jmp
xor
ja
jno
dec
pop
push
jo
jnp
xchg
cmp
mov
sbb
add
out
jmp
sub
inc
dec
ins
stos
xor
(bad)
jg
xchg
stos
or
or
out
mov
cwde
mov
call
in
mov
scas
sti
pop
arpl
pusha
mov
inc
jae
imul
add
pop
fild
loope
cwde
and
push
add
fcom
cmp
out
xchg
fidivr
push
mov
rdmsr
adc
hlt
mov
test
cmp
sub
mov
ret
adc
in
ins
mov
push
cmp
sar
xor
inc
ja
jb
lock
pop
sar
push
movs
lods
scas
dec
jmp
pop
jnp
xchg
js
and
lods
sub
mov
pop
sysenter
(bad)
test
inc
bound
cli
add
out
mov
(bad)
repz
repnz
sbb
dec
adc
mov
ret
popf
and
in
push
sub
xor
fld
jno
xchg
mov
pop
cmp
ja
push
loopne
mov
loopne
(bad)
cmc
daa
dec
inc
adc
xchg
adc
out
push
sub
imul
neg
inc
mov
leave
pop
pop
push
pop
push
mov
add
clc
clc
sub
sub
shl
adc
cld
adc
inc
mov
fsubr
sbb
js
rcr
int
push
cs
sti
pop
push
test
int3
ret
add
add
cdq
cwde
push
enter
push
hlt
sub
adc
mov
mov
aas
or
(bad)
and
mov
int3
xor
mov
mov
pop
sbb
sbb
mov
mov
mov
cmps
rol
lahf
mul
pop
daa
lock
and
aam
and
ins
out
mov
mov
adc
cmp
sub
or
sbb
(bad)
sbb
ret
retf
inc
sbb
jae
push
repnz
cmp
sbb
enter
cmp
leave
daa
mov
imul
in
std
mov
jne
daa
int
add
(bad)
pop
jb
xchg
cmp
cmp
push
mov
dec
push
icebp
xchg
mov
push
xchg
and
push
fwait
dec
pop
mov
in
(bad)
aas
push
cmp
stos
jmp
xor
inc
bound
aas
fmul
mov
scas
aaa
mov
das
jmp
cdq
sbb
sub
lock
dec
daa
je
dec
shl
mov
in
jbe
cmp
int3
xor
in
sub
cs
das
pop
adc
int
imul
inc
bound
xor
pop
js
pop
or
mov
push
test
jmp
jl
sub
adc
add
mov
call
inc
shl
add
jb
popa
mov
inc
leave
dec
xor
dec
xor
xor
mov
mov
ds
jo
mov
xchg
movs
push
(bad)
cdq
pop
ds
(bad)
repnz
mov
xor
mov
mov
push
dec
pminsw
pop
mov
mov
mov
jg
xor
jmp
add
push
dec
xchg
cmp
cdq
mov
repnz
inc
daa
js
rcr
ret
movs
fs
jmp
inc
mov
test
mov
mov
jp
xchg
std
mov
inc
mov
sbb
test
imul
jnp
inc
mov
xchg
les
rol
test
sti
std
cwde
ret
mov
call
popa
or
(bad)
(bad)
sbb
xor
mov
cwde
dec
pushf
mov
sbb
(bad)
int
(bad)
fnstcw
shr
push
loopne
xchg
fsubrp
fwait
rol
ds
and
enter
fwait
je
cmc
jne
xchg
inc
xchg
rcr
jl
ror
mov
mov
push
mov
movs
xchg
fs
(bad)
xchg
cli
adc
sub
push
test
pushf
dec
inc
lods
fnstsw
scas
pop
push
cmp
xlat
nop
into
and
sub
xor
jg
imul
jmp
sbb
cdq
add
sub
sti
test
dec
pop
dec
dec
or
fild
push
xor
mov
shr
cwde
xchg
ror
push
fidiv
nop
shl
call
imul
adc
mov
loop
(bad)
mov
mov
lfs
jmp
mov
push
fimul
add
cdq
movs
inc
out
inc
inc
cmp
sub
cmp
outs
mov
mov
cmps
lock
mov
std
and
cmc
dec
imul
adc
xchg
adc
xchg
push
imul
jge
jbe
mov
mov
arpl
mov
pop
hlt
xor
ins
aaa
mov
mov
add
imul
aam
xor
inc
int
into
mov
jns
push
mov
dec
mov
outs
(bad)
scas
and
in
xchg
icebp
add
aam
icebp
arpl
cwde
pop
xchg
(bad)
or
pop
mov
daa
scas
push
mov
mov
or
retf
mov
adc
aad
mov
inc
scas
jb
adc
movs
fcomi
or
pushw
(bad)
out
fidivr
into
popf
in
add
sub
cmp
mov
push
pusha
push
scas
pop
adc
seta
mov
loopne
pop
inc
(bad)
shl
aas
int
in
mov
outs
jae
inc
enter
xor
rol
pop
outs
aas
mov
loope
stc
scas
xor
pusha
xlat
addr16
xlat
xchg
mov
cmc
push
jmp
mov
popa
jbe
mov
sahf
xor
aaa
adc
sbb
fwait
mov
stos
xor
hlt
cmp
rcl
push
ret
push
pop
mov
and
sub
cmp
jae
bnd
pop
adc
in
out
mov
and
nop
jmp
ss
iret
and
mov
out
jge
mov
xor
aad
mov
add
mov
outs
es
popa
(bad)
and
add
popa
and
js
cs
pop
jb
mov
ins
xchg
ds
test
sbb
shl
mov
xchg
mov
jae
xor
repz
div
and
(bad)
aam
inc
sbb
sbb
repnz
push
xchg
xor
pop
mov
dec
lahf
test
dec
adc
lods
ins
fsubr
in
jle
ja
neg
adc
ffree
into
fs
or
jmp
xchg
(bad)
mov
sub
mov
inc
xor
add
loope
(bad)
and
and
std
mov
mov
or
and
xor
ja
cmps
adc
or
dec
sbb
xor
xor
or
scas
fwait
mov
sbb
sub
es
fild
inc
cmp
xchg
out
and
xlat
ss
je
ficomp
push
into
mov
adc
inc
inc
fwait
into
(bad)
xor
add
jmp
leave
pop
lock
push
idiv
aam
push
and
jl
xlat
sbb
pusha
mov
sub
xchg
jp
push
ds
pop
cmp
or
shr
add
cmp
push
cwde
add
jmp
mov
or
or
and
mov
pop
adc
aad
aas
inc
inc
sub
xor
push
bound
mov
jns
sbb
sub
xchg
test
lods
inc
mov
jb
(bad)
std
add
pop
mov
ins
loope
inc
fimul
ret
dec
dec
mov
cmp
lahf
pushf
xchg
rcl
cmps
mov
jmp
rol
je
fst
sub
xchg
pop
pop
nop
jb
jb
pop
iret
stos
cld
add
and
aad
mov
cmc
or
test
stos
push
pop
pop
jns
int
enter
pop
pop
sub
pop
call
(bad)
xlat
in
mov
into
arpl
lds
icebp
add
xsha256
cmps
adc
imul
pop
popa
push
adc
cli
(bad)
aas
add
sbb
imul
mov
out
popf
mov
sub
outs
mov
enter
sar
xor
jo
adc
cli
sbb
(bad)
jmp
enter
push
popf
push
outs
aaa
(bad)
or
push
mov
sbb
outs
push
adc
mov
fwait
pop
(bad)
cmp
cmps
mov
call
fistp
test
jl
arpl
test
jge
into
and
push
sub
mov
cmp
cmp
adc
dec
cmps
aaa
cdq
jp
(bad)
outs
pop
lds
shl
cmp
sbb
lds
ds
sub
xchg
movs
adc
mov
xor
adc
push
dec
pop
nop
cmps
pop
pusha
push
(bad)
ss
push
cmove
or
or
adc
iret
int3
mov
inc
sbb
lahf
jae
in
out
and
xchg
(bad)
icebp
pop
out
outs
icebp
arpl
jnp
jae
fsubr
dec
jle
(bad)
imul
sbb
fcom
or
cmp
(bad)
and
jecxz
jmp
scas
scas
xor
pop
xor
and
cmp
xchg
sub
push
shl
data16
popa
push
ins
push
mov
push
jecxz
and
xlat
sar
jb
iret
adc
xor
mov
sub
fs
mov
inc
lods
repz
ret
dec
and
(bad)
sub
aad
cvtpi2ps
xchg
das
imul
or
jge
dec
inc
jmp
sbb
in
pop
jecxz
repnz
out
cmp
jle
cli
cmp
(bad)
fisubr
mov
xchg
or
pop
dec
test
pop
pop
sar
adc
mov
scas
xor
ficomp
mov
adc
xor
push
repz
pop
lods
cmp
adc
jmp
jle
jb
push
mov
bound
les
test
cmc
into
sti
inc
jbe
popf
repnz
xchg
stos
pop
rep
sar
shl
xor
inc
push
jmp
xor
iret
xchg
in
or
out
imul
jnp
in
fcos
fadd
nop
sub
fwait
jae
ja
dec
and
jmp
push
and
int3
jge
dec
jp
std
fild
xchg
mov
cmc
dec
jle
stc
lock
inc
test
enter
pusha
adc
or
lds
lock
cwde
xchg
mov
loop
popa
inc
fsubr
sti
fldcw
cmp
mov
mov
inc
xor
xchg
add
xchg
and
mov
dec
push
or
ja
jg
cwde
cdq
mov
imul
out
add
mov
or
adc
add
adc
push
push
jmp
stc
mov
pop
dec
fwait
sbb
cmps
std
or
jp
push
and
and
(bad)
xlat
inc
je
cmps
dec
push
pop
das
jmp
int3
adc
jmp
add
jno
mov
fcom
xor
add
or
mov
and
rcr
jmp
test
retf
std
pop
sbb
lds
mov
and
outs
aaa
stos
push
aas
and
mov
mov
nop
push
cmp
stc
(bad)
mov
jge
add
test
jge
fnstsw
cmc
mov
fst
sbb
(bad)
mov
cdq
pop
out
dec
bound
sub
jne
sbb
cs
ins
aaa
bound
jl
dec
mov
push
shr
mov
mov
cs
aam
lahf
push
adc
pop
(bad)
mul
sub
movs
es
cmp
jne
or
jo
lods
mov
adc
daa
xor
jbe
pusha
sti
sti
mov
shr
mov
aas
mov
ffree
add
loopne
mov
mov
je
jg
xor
out
ret
mov
pop
xor
jecxz
sbb
jbe
mov
movs
mov
shr
or
popf
xchg
jnp
cld
loopne
xor
(bad)
hlt
ins
and
idiv
inc
fnsave
sub
out
je
stos
mov
(bad)
stc
mov
scas
mov
sbb
cmp
inc
inc
lods
xor
(bad)
in
outs
cld
xchg
fist
test
retf
and
xchg
aaa
xchg
xor
daa
cmp
pop
movs
jmp
sbb
adc
mov
mov
aam
pop
mov
sub
inc
stos
push
bound
daa
xor
retf
dec
inc
ss
sbb
or
xor
sbb
(bad)
(bad)
pop
pop
jns
dec
cmps
in
xchg
add
shl
push
icebp
xchg
mov
sub
cli
in
fnstcw
jno
and
add
push
inc
mov
jmp
sbb
ja
sub
rcr
loope
popf
sub
push
inc
test
adc
into
daa
hlt
ret
lea
movs
cwde
sub
inc
ror
lods
cmp
sar
or
sub
xor
dec
out
sub
mov
jmp
mov
mov
ds
sub
and
ror
cmps
mov
aam
push
push
dec
jb
mov
jbe
aam
jl
in
mov
adc
retf
sbb
xor
jp
nop
xor
es
sub
dec
ja
call
icebp
cli
jb
out
lahf
popa
pop
repz
test
mov
scas
cmp
retf
js
mov
cmp
frstpm(287
xor
jg
dec
jo
jo
add
sub
ins
(bad)
iret
(bad)
sub
mov
jge
lods
pushf
adc
leave
jecxz
arpl
mov
dec
sbb
(bad)
bound
out
sub
mov
dec
xchg
je
fstp
adc
jp
fidivr
iret
fiadd
mul
cmp
jge
fstp
xor
movs
mov
jmp
daa
sub
jmp
(bad)
pop
ret
mov
mov
outs
pop
dec
shl
and
popf
pusha
shr
sub
cmps
into
lds
pop
mov
or
fwait
xchg
xor
adc
into
std
pop
test
xchg
mov
out
mov
jle
pop
xchg
pop
sub
mov
adc
or
ja
jb
stc
mov
cs
test
enter
xor
jbe
cmp
rcl
inc
inc
mov
(bad)
enter
push
mov
les
mov
sbb
push
das
fidiv
call
cmp
jle
cmp
mov
mov
in
mov
out
and
xchg
test
std
sub
sbb
aas
pop
fist
lods
jae
ficom
mov
sbb
rol
aam
imul
xor
loop
jp
(bad)
mov
adc
dec
fidiv
fldcw
popa
xlat
imul
mov
test
ficomp
or
inc
out
inc
ret
adc
daa
imul
fild
out
test
retf
push
adc
xor
mov
adc
and
cmc
push
sbb
mov
push
pop
mov
xor
scas
push
inc
or
popf
mov
xor
mov
loope
push
adc
aam
loop
jle
rcl
ror
cmc
movs
mov
push
call
adc
in
aad
inc
add
mov
gs
ror
test
(bad)
mul
or
adc
dec
sbb
dec
and
or
rol
and
push
or
mov
jns
add
adc
mov
cmps
pop
cli
mov
fnsave
push
pop
sub
push
shl
xor
sbb
scas
adc
pusha
rcl
and
loop
dec
out
lock
clc
jmp
retf
lahf
sti
pop
ret
stos
dec
xlat
jg
pop
jl
jnp
fistp
out
and
bound
xor
cmp
pop
pop
jmp
or
inc
ja
pop
movs
mov
iret
and
xor
dec
dec
sbb
push
jge
enter
loopne
jnp
mov
jae
pop
in
les
out
mov
es
push
je
push
cmp
je
ins
xlat
stos
cmp
and
and
adc
test
inc
push
xchg
push
or
xlat
dec
dec
dec
pop
jp
aam
dec
lods
xor
inc
stc
and
std
mov
mov
push
sub
lods
fsubr
add
and
or
push
jmp
push
cld
or
sbb
or
fmul
cwde
adc
dec
push
jge
mov
(bad)
scas
adc
test
cld
pop
sbb
pop
pop
push
cli
mov
adc
jge
mov
stc
xor
xchg
sar
mov
cmps
jg
adc
inc
xor
push
imul
clc
pop
es
(bad)
repnz
pop
xor
xchg
dec
jl
and
mov
leave
sbb
rcl
push
pop
jecxz
out
xchg
gs
push
gs
popf
adc
bound
or
fmul
xchg
ror
add
xlat
mov
ds
cmp
inc
cli
sbb
adc
shr
jns
in
sbb
add
(bad)
jne
movs
dec
sahf
sub
sbb
push
hlt
add
movs
pop
jge
push
mov
call
fstp
mov
fsubr
aaa
xor
scas
lock
or
sar
sub
cmp
add
addr16
out
xor
adc
inc
push
dec
mov
stos
stos
cmp
adc
cli
xor
jmp
imul
iret
xor
div
adc
fwait
cmps
test
je
sbb
pop
add
adc
shr
mov
cdq
(bad)
out
lock
push
cs
int
sti
mov
scas
xor
arpl
ja
movs
push
enter
ret
cmp
neg
das
push
adc
not
out
stos
out
rol
sti
sti
aam
add
rcr
ins
jo
test
inc
cwde
ins
inc
rol
sbb
(bad)
gs
xchg
and
test
mov
jmp
cmps
fild
jge
adc
mov
imul
addr16
call
cmp
repnz
bsf
inc
or
sti
dec
in
hlt
dec
mov
sbb
stos
call
mov
stc
fild
daa
cli
pop
das
cmp
cli
stos
in
xor
(bad)
loope
ss
(bad)
dec
test
add
or
xchg
jbe
lea
fsubr
retf
call
retf
in
hlt
sub
dec
lods
cdq
add
inc
shl
repnz
mov
push
(bad)
stos
scas
je
add
mov
add
cs
mov
test
dec
cwde
sar
es
sub
add
das
pushf
hlt
int
or
aas
xor
xchg
sub
push
jb
dec
jge
(bad)
cmp
or
xor
movs
xchg
imul
rcr
xor
movs
inc
jbe
push
adc
test
mov
ror
mov
sbb
pop
sub
cmp
(bad)
(bad)
fidiv
imul
movs
in
or
mov
push
pop
or
pop
inc
add
sbb
fiadd
out
imul
mov
mov
nop
add
cmp
(bad)
cld
shl
repnz
pop
pop
idiv
adc
rcl
xor
push
xor
mov
fist
sbb
lock
stos
aas
inc
inc
sub
hlt
rcl
add
test
dec
xchg
mov
repnz
push
mov
add
shr
cld
pop
nop
(bad)
mov
fistp
sbb
jbe
jp
ins
xchg
dec
push
cmp
movs
pop
mov
inc
lahf
jo
daa
jno
ficom
jae
mov
test
add
(bad)
pop
test
inc
jnp
call
inc
inc
lods
jmp
push
test
pop
dec
inc
fsub
inc
sahf
imul
jmp
lock
pop
jae
adc
jg
repnz
test
popa
xchg
lea
sub
mov
cmc
adc
sbb
lahf
outs
push
pop
call
into
pop
inc
outs
jns
adc
iret
pop
lea
jno
mov
rcl
stos
push
js
icebp
add
sbb
push
(bad)
lahf
outs
jecxz
sub
repz
xor
outs
scas
dec
cmp
(bad)
jno
shl
pop
push
imul
stos
mov
jl
repnz
jge
dec
arpl
pop
imul
add
lahf
int
ja
hlt
lds
outs
dec
xchg
mov
test
in
xchg
daa
popa
adc
mov
xchg
sbb
pop
inc
adc
(bad)
shl
jo
lods
rol
in
(bad)
pushf
lea
cmc
xor
scas
sub
adc
outs
mov
ds
jns
pop
rol
push
(bad)
mov
cmp
popf
adc
push
mov
(bad)
xchg
push
fistp
jp
test
sub
xor
cmp
pop
xchg
cmc
fcmovu
aam
das
xchg
pop
push
arpl
test
jne
mov
dec
pop
cmc
xor
out
mov
dec
loopne
inc
jmp
mov
mov
pop
std
fwait
leave
ins
jmp
cmp
mov
push
pop
jle
mov
fmulp
jmp
in
jbe
adc
psubsb
out
dec
test
push
adc
es
jo
inc
fs
jl
imul
sub
lock
xrelease
in
sbb
dec
test
in
xchg
push
mul
sub
sbb
push
out
and
sub
test
adc
aam
stc
enter
and
ins
lods
mov
ins
adc
cmps
push
shl
iret
inc
dec
mov
push
and
mov
repnz
and
scas
fsubr
gs
out
push
add
xchg
adc
shl
xchg
jl
lahf
mov
jb
das
div
fild
adc
mov
nop
js
repnz
in
aas
neg
mov
mov
cmps
pop
js
icebp
or
fsub
fcmovnbe
xor
mov
mov
leave
out
xlat
and
or
dec
mov
jle
dec
mov
popf
pop
jg
dec
mov
add
cmp
and
shl
adc
inc
push
push
mul
in
sbb
(bad)
jmp
mov
and
or
(bad)
mov
mov
mov
cmp
inc
movs
push
inc
retf
rol
jmp
sub
aad
and
dec
sub
imul
inc
test
push
inc
shl
cmp
inc
push
fwait
aaa
jbe
dec
into
sub
sbb
bound
fdivrp
imul
push
push
pop
xchg
sbb
sub
in
cmc
or
pop
sbb
jne
dec
bound
mov
je
mov
adc
jmp
popa
pop
jns
stos
int
shl
sahf
push
sbb
inc
mov
arpl
pop
jmp
not
inc
call
jnp
ret
add
add
jmp
scas
cwde
out
push
jge
xor
and
cmps
outs
shl
jle
cdq
fs
xchg
movs
pop
jnp
pop
arpl
das
add
or
fwait
les
aad
mov
gs
adc
fcomip
and
mov
push
(bad)
xor
idiv
inc
imul
call
ins
mov
push
inc
sbb
sbb
outs
repnz
les
mov
jo
xor
push
adc
cmp
dec
int3
and
mov
sbb
cmps
das
sar
push
jae
sbb
ror
in
jg
jle
jnp
add
cli
mov
sub
add
pop
jae
sub
dec
adc
or
mov
pop
mov
or
dec
add
test
jp
sbb
jns
and
les
inc
ror
outs
int3
cmps
outs
int
pop
mov
xchg
lods
inc
push
repnz
std
popa
mov
ret
dec
pop
sbb
inc
fmul
jecxz
ins
loopne
retf
fidiv
xor
leave
jmp
sub
iret
push
mov
cmp
or
mov
jnp
into
fs
jns
ret
mov
movs
jne
cmp
ret
fldenv
pop
pop
dec
pop
cld
outs
test
mov
mov
in
ins
sahf
out
movs
gs
add
adc
or
cmp
jle
mov
(bad)
sar
push
mov
pop
aas
inc
or
pop
cwde
rol
xchg
and
cmps
into
loop
mov
test
cmps
fmul
daa
ins
jns
sub
xor
push
pop
repz
adc
lods
std
inc
and
mov
push
xlat
in
out
sub
test
mov
loopne
pop
ins
add
or
clc
sbb
out
pop
sbb
pop
dec
pusha
cmp
sar
test
stc
xor
mov
push
cmps
int3
cs
and
jmp
jmp
adc
ins
outs
call
push
jge
sbb
cmp
xor
jp
sbb
das
cmp
cld
lods
cmp
push
ret
mov
mov
push
cmp
jbe
shr
sub
pop
mov
loopne
pop
jne
sbb
ficom
add
jl
fsub
fyl2x
and
in
movs
jne
pop
sbb
lods
int3
push
jmp
mov
mov
mov
in
jecxz
and
jo
or
imul
fdivr
cmps
out
jl
ds
popa
movs
aaa
ins
outs
test
imul
inc
sahf
adc
sar
add
dec
mov
sub
enter
es
and
mov
sub
jmp
jo
push
aas
cmps
jg
pushf
xchg
jbe
data16
ja
sahf
stos
and
xor
cmps
inc
pop
or
arpl
sbb
mov
push
cmp
mov
sbb
(bad)
inc
(bad)
out
mov
test
cmc
dec
outs
js
enter
cmps
pop
out
jle
adc
or
cmps
push
out
imul
(bad)
mov
inc
jmp
push
mov
leave
or
mov
push
ins
mov
and
or
dec
mov
div
dec
add
in
daa
adc
pop
and
xchg
int3
xchg
pop
inc
inc
inc
retf
cld
std
and
and
fsub
mov
sub
add
mov
xchg
loope
ret
push
inc
sub
inc
lahf
(bad)
cwde
cmps
jle
outs
aas
aad
popa
and
(bad)
ds
(bad)
popa
scas
cmp
jb
fcmovnb
push
sub
dec
popf
xor
in
adc
xchg
out
cmc
pop
(bad)
(bad)
mov
fdiv
mov
add
inc
ret
sub
xchg
cli
xchg
bound
rcl
dec
es
call
and
cmc
stc
and
aad
xchg
push
bnd
mov
movs
fwait
sar
mov
add
or
sbb
dec
sub
dec
sub
add
inc
push
or
jmp
retf
clc
loop
sar
sub
aad
fnsave
out
or
cwde
pop
xor
ja
lock
cmp
dec
imul
and
test
fdivp
sbb
mov
loope
jecxz
clc
pop
add
xchg
fs
and
daa
arpl
jb
mov
pop
jb
js
clc
mov
(bad)
int3
sahf
mov
add
cld
ds
inc
mov
test
xlat
dec
xor
cmp
mov
mov
mov
mov
cmps
scas
clc
dec
retf
push
inc
add
sbb
sahf
das
in
cwde
jae
push
outs
stc
test
imul
xchg
cmps
adc
loopne
pop
dec
push
cmps
jmp
pusha
or
jae
sbb
inc
push
test
movs
jg
push
sub
ins
xor
movs
repz
iret
jp
dec
jo
mov
pop
mov
dec
xchg
mov
and
hlt
fldcw
sbb
call
cwde
(bad)
mov
mov
cmp
neg
xor
sub
push
test
in
mov
dec
xlat
mov
(bad)
pop
cdq
pop
xlat
mov
sub
int3
stc
into
ret
fldenv
xchg
fdiv
fdiv
loop
je
bound
shl
sub
or
sbb
push
rcr
mov
aam
mov
xchg
xchg
jmp
xchg
(bad)
inc
pushf
cmps
sbb
jns
mov
fld
cli
cmc
int3
push
out
sbb
push
fild
cmp
inc
cmps
adc
sbb
mov
jbe
xchg
int3
daa
mov
jp
mov
adc
pop
(bad)
xchg
sbb
sub
mov
sub
or
in
push
repnz
outs
cmc
add
addr16
push
jns
stc
or
adc
scas
jbe
inc
test
ret
push
pop
mov
adc
call
cmps
lods
dec
xor
xchg
fidivr
test
mov
jo
cwde
adc
mov
out
mov
popa
pusha
out
add
jae
sbb
lods
push
dec
das
dec
daa
mov
jne
shl
jae
gs
mov
sub
data16
push
add
xchg
repnz
nop
dec
jle
(bad)
rcl
lea
jnp
xchg
or
adc
mov
(bad)
push
out
push
add
(bad)
mov
push
leave
int
stos
in
pusha
cdq
cld
sub
pop
xor
aas
jmp
dec
into
idiv
mov
mov
mov
fnstcw
gs
mov
or
pop
jo
fldcw
das
daa
sub
mov
and
iret
xlat
int3
adc
lahf
push
adc
cs
imul
cmp
push
push
ss
lock
fnstenv
mov
jg
cld
popa
imul
test
xchg
ds
fucom
retf
cwde
ret
in
mov
ret
ss
jecxz
jae
outs
enter
sbb
cmps
enter
mov
(bad)
jb
inc
push
mov
call
and
psrad
xor
mov
stc
pop
jecxz
int3
mov
adc
and
jnp
scas
xlat
out
push
mov
xchg
push
adc
cs
retf
push
movs
fdiv
or
mov
mov
mov
call
in
leave
jnp
push
rol
mov
adc
sbb
bound
(bad)
cli
xchg
adc
mov
test
add
sbb
dec
mov
dec
ret
fsubr
cld
aaa
sbb
int
xchg
popf
fcmovu
ret
rcr
jae
(bad)
cmp
pop
mov
ins
sub
popf
mov
jo
dec
push
sub
pop
imul
dec
dec
stos
xor
mov
scas
add
xchg
and
adc
int3
mov
ins
mov
out
xchg
int3
(bad)
pop
aad
and
pushf
neg
or
jg
and
(bad)
mov
rcl
ja
in
jl
add
adc
les
or
inc
rol
dec
xchg
xlat
push
dec
add
mov
dec
test
inc
sub
dec
outs
ret
jae
call
aam
scas
adc
xchg
pusha
in
inc
jl
mov
xchg
daa
test
lea
(bad)
mov
mov
pop
ds
jno
inc
xor
mov
lods
rcl
xchg
adc
push
cmp
int
(bad)
xor
mov
std
ror
cmp
sub
and
push
pop
call
aas
aad
or
cwde
add
pop
(bad)
jbe
xor
cmp
jns
(bad)
ins
jmp
mov
into
xor
lods
fild
ror
clc
std
into
stos
imul
mov
stos
add
xchg
call
(bad)
and
ins
dec
xchg
adc
xor
xchg
cmp
or
in
int3
mov
imul
xor
mov
sub
popf
push
sbb
int
push
int
jmp
xchg
xchg
setle
mov
fldenv
aas
test
xchg
jp
sbb
das
xchg
hlt
shl
cmps
xchg
or
sbb
loop
xor
xor
bound
mul
sub
adc
sbb
mov
mov
pop
adc
(bad)
xchg
pop
xor
push
std
outs
cli
pop
dec
xor
xor
xor
inc
inc
test
inc
aaa
int
cwde
inc
pop
dec
sub
(bad)
jae
rcr
test
sar
dec
lahf
retf
pusha
fistp
in
adc
inc
add
mov
dec
pop
add
push
xlat
jns
mov
xchg
inc
fistp
call
mov
or
inc
xchg
(bad)
mov
fisub
out
enter
mov
pushf
mov
shr
and
push
add
xor
and
in
int3
fisttp
lods
jo
mov
gs
loopne
adc
hlt
adc
sub
aas
or
sub
dec
iret
mov
and
dec
inc
nop
jns
out
dec
dec
out
fcomp
sub
retf
shl
and
mov
dec
xchg
ficomp
fisttp
aad
adc
ror
inc
mov
mov
push
hlt
mov
pop
cs
inc
cmps
inc
mov
and
inc
ds
pusha
sub
les
int
pop
push
mov
leave
adc
call
adc
mov
and
or
sbb
jb
push
clc
jl
push
lahf
arpl
or
dec
push
xor
int
inc
push
popf
frstor
and
and
xchg
(bad)
cmp
jmp
arpl
push
push
pop
retf
int3
push
aas
inc
xor
push
push
fistp
cmp
mov
fsub
scas
(bad)
xchg
clc
sub
jb
cmps
cmp
sbb
mov
not
push
fsubr
xchg
jmp
dec
test
inc
int
inc
std
jbe
idiv
lods
push
or
mov
cmp
fdiv
inc
iret
arpl
sar
jo
cmp
mov
sbb
(bad)
push
popf
inc
mov
pusha
xor
pushf
addr16
jl
gs
inc
stc
leave
sbb
cmps
mov
jns
(bad)
adc
loop
int
jno
mov
aad
add
sub
xchg
jmp
mov
shl
sti
jg
mov
or
or
std
push
sahf
xlat
mov
ins
xchg
cmps
sbb
mov
in
addr16
pop
add
hlt
xor
dec
cmovg
push
dec
cmps
hlt
imul
call
call
pop
jbe
dec
dec
std
test
lods
mov
out
sbb
xchg
js
test
xor
adc
out
stc
cwde
or
adc
jecxz
pop
sbb
aad
rcr
movs
push
(bad)
xor
fwait
push
in
adc
xchg
mov
iret
jmp
lds
sbb
and
pop
sub
mov
cmp
pavgb
enter
stos
or
or
retf
cwde
(bad)
cmc
xchg
call
in
out
sub
and
mov
nop
adc
dec
(bad)
jmp
dec
add
data16
ins
movs
iret
std
add
mov
dec
adc
jno
sub
push
mov
cmp
popf
je
arpl
lock
push
push
adc
cwde
or
xor
test
bound
imul
sahf
das
shl
pop
lds
mov
add
cmp
adc
or
daa
push
jecxz
nop
pop
fsubr
int3
mov
jl
push
ins
mul
xor
fdiv
mov
pop
jne
shl
cmp
inc
sbb
jae
or
xchg
adc
dec
pop
and
mov
add
pop
push
lods
movs
repnz
or
push
out
in
cwde
movs
mov
loop
jo
jmp
cwde
mov
into
dec
out
pop
fidivr
pop
test
mov
sahf
inc
js
arpl
xchg
scas
retf
out
mov
imul
mov
mov
sub
inc
ds
cwde
add
lahf
iret
cmp
cmp
sahf
out
fimul
xchg
loop
add
sub
sub
fs
in
mov
xchg
jo
sub
out
mov
je
sbb
mov
mov
mov
inc
or
ss
mov
adc
popf
cmp
mov
cmp
clc
jb
scas
in
add
jne
js
jnp
cwde
out
dec
mov
loopne
mov
sbb
fdivr
int3
sbb
iret
add
xchg
aad
jmp
cmp
jmp
and
push
mov
dec
cmp
add
mov
lea
call
and
fmul
cld
mov
in
fisttp
inc
mov
pop
shl
sahf
addr16
sbb
pop
stc
lahf
movs
cmp
mov
ins
xchg
clc
or
add
sub
enter
cwde
mov
mov
cmp
enter
cmp
sbb
jne
and
mov
test
or
(bad)
repnz
data16
inc
test
xor
sbb
out
stos
arpl
mov
sub
mov
jecxz
cld
push
inc
add
sub
cwde
adc
pop
sbb
inc
sbb
xchg
mov
jg
push
mov
mov
mov
repnz
mov
es
jbe
rcl
sar
dec
mov
jmp
sub
ja
das
mov
int3
call
repnz
jne
arpl
bound
xor
scas
not
ins
xor
mov
or
adc
(bad)
cmp
inc
(bad)
sbb
lea
mov
(bad)
cld
pusha
lods
stos
je
pop
or
xor
imul
xchg
push
jno
fcom
in
xchg
cmp
cli
arpl
rcr
movs
jns
popf
cli
sub
jmp
cmp
fld
fsub
mov
sub
mov
dec
add
pop
(bad)
mov
cli
cmp
ret
mov
cmps
dec
arpl
sahf
(bad)
mov
repnz
sub
mov
ret
fldenv
xchg
out
mov
lock
or
and
dec
jae
add
xchg
fsubr
jne
adc
add
js
and
aad
pop
test
mov
imul
or
sub
adc
pop
icebp
int
clc
mov
jae
jmp
aaa
sbb
arpl
push
test
push
int
mov
mov
inc
inc
leave
sti
push
fisub
jae
das
pop
add
inc
leave
and
cwde
cli
std
cmps
cmp
jnp
mov
shl
and
mov
jne
inc
xor
push
pop
shl
or
test
in
call
pushf
lahf
add
mov
data16
cmps
fstp
test
lds
fcomp
jl
mov
ret
mov
out
mov
or
xchg
aad
push
mov
jl
sbb
imul
pop
stos
outs
dec
(bad)
push
retf
adc
addr16
add
in
push
fisttp
adc
in
mov
mov
popf
jmp
inc
je
std
in
mov
jl
push
push
mov
fiadd
xchg
and
cmp
(bad)
sbb
sti
xchg
(bad)
mov
lods
inc
cmps
ja
xchg
fs
push
mov
and
jns
cdq
cmp
int
fiadd
out
fadd
les
loopne
and
sub
icebp
xchg
aad
jnp
cmp
call
mov
xchg
sub
dec
sub
cmps
loop
ret
cmp
pop
loope
cli
sbb
dec
mov
jbe
loop
sub
push
push
mov
cli
inc
test
jns
and
cmps
xchg
dec
imul
sub
test
popf
fwait
out
jmp
mov
idiv
adc
and
jge
call
stc
or
outs
in
pop
fwait
mov
jecxz
jle
test
pusha
or
xchg
pop
mov
sbb
push
xor
mov
jecxz
repz
pop
ror
cld
js
jmp
jg
jecxz
iret
jne
call
(bad)
nop
aaa
(bad)
and
dec
cmps
sahf
add
dec
dec
ins
xor
movs
pop
xchg
cli
jl
(bad)
mov
sbb
and
out
sbb
in
outs
test
stos
jb
inc
loope
je
pop
stc
das
push
ins
xchg
push
jecxz
mov
push
add
pop
mov
mov
ins
jo
sbb
xchg
test
mov
push
popa
sub
mov
cmps
adc
push
in
or
sub
div
mov
stos
mov
inc
mov
mov
std
adc
add
inc
ins
add
in
sub
inc
movs
sub
pop
xchg
fbstp
cmp
loope
xchg
ror
pop
(bad)
cmc
fwait
sub
dec
pusha
popa
add
pop
mov
or
retf
mov
(bad)
jns
shl
xor
(bad)
jecxz
push
add
jge
mov
cld
xchg
out
or
push
push
and
retf
cld
loop
sub
shrd
push
jmp
ins
cwde
jmp
mov
stos
lahf
in
mov
dec
js
or
mov
mov
lods
lock
adc
cmp
lahf
jl
pop
push
jmp
lods
mov
push
test
daa
adc
dec
repnz
lds
enter
push
into
mov
jl
add
or
and
shl
cmp
dec
sahf
mul
mov
xchg
shl
rol
mov
push
int
sub
pop
mov
jecxz
pushf
xchg
scas
add
mov
cmps
lock
scas
ss
cs
mov
inc
ret
mov
push
sbb
jl
stc
aam
fstp
xlat
adc
outs
into
rcl
pop
ss
mov
mov
les
call
adc
shr
add
adc
mov
or
scas
push
lahf
repz
and
push
xchg
arpl
(bad)
enter
or
in
adc
ret
mov
mov
add
inc
xchg
mov
inc
daa
xchg
or
aam
cmps
xchg
aam
xor
loope
out
inc
ret
mov
arpl
and
and
sar
jp
mov
gs
jbe
(bad)
in
test
mov
ja
mov
(bad)
ret
pop
or
cdq
cmp
shl
lods
or
adc
sbb
out
fmulp
ret
pop
hlt
dec
(bad)
xchg
add
lahf
sub
push
(bad)
cmp
cmp
xchg
imul
push
lds
ret
lahf
xchg
sar
shl
lahf
das
push
pop
repz
and
jo
stos
mov
mov
mov
cmc
stos
test
and
cmp
mov
aad
or
cmc
(bad)
jl
data16
int3
inc
xor
ret
inc
cmp
addr16
rol
mov
test
mov
test
(bad)
fwait
push
rol
mov
mov
xlat
xchg
sbb
and
fisub
ret
jp
adc
aad
cmp
pop
mov
sti
enter
xchg
sbb
sbb
mul
mov
js
dec
daa
inc
sbb
call
jmp
arpl
rcl
fist
mov
js
sub
dec
fst
mov
add
pop
leave
gs
movups
inc
test
mov
dec
int
cmp
movs
mov
idiv
inc
movs
ja
imul
clc
xchg
outs
mov
lods
mov
ss
out
sub
xor
mov
arpl
or
pop
les
and
jmp
dec
push
add
lods
or
or
cmp
and
fisubr
cmp
outs
sub
enter
push
push
fcom
inc
(bad)
pusha
jb
mov
lahf
leave
out
pop
pop
shr
pop
hlt
or
jne
data16
xchg
out
clc
jne
bound
push
dec
dec
or
pop
inc
sbb
jne
jb
dec
arpl
sub
or
inc
mov
shl
and
pop
mov
out
cmp
mov
or
icebp
sbb
out
aaa
push
push
xchg
mov
scas
int
test
fdivr
jl
mov
cld
push
div
cli
test
jmp
pushf
fsubr
loope
dec
push
js
fisubr
inc
push
in
in
push
mov
and
mov
mov
mov
mov
sbb
add
cmps
push
rcr
xchg
push
cmp
xor
lds
sbb
sub
xchg
pop
mov
cmps
ror
mov
jbe
lahf
sub
inc
loopne
jge
mov
dec
and
cmp
lds
jecxz
sub
or
mov
aam
loope
jns
popa
mov
or
mov
xchg
enter
pop
mov
cmp
mov
push
or
dec
pushf
bnd
mov
sbb
outs
mov
cmp
or
aas
shr
add
jl
inc
mov
sub
pusha
mov
mov
push
movs
nop
pop
int3
lock
popa
or
sbb
stos
push
sbb
mov
sub
int
mov
outs
into
jg
push
sbb
sub
or
lods
outs
ss
mov
push
div
cmc
mov
xchg
es
adc
gs
xor
cmp
adc
dec
pop
xchg
pop
jne
pop
pop
pop
icebp
(bad)
ds
movs
mov
cmps
dec
lds
inc
scas
adc
adc
cmp
ja
iret
jns
xchg
adc
ror
cmp
cmp
inc
(bad)
sub
in
inc
outs
cmp
sub
xor
pop
adc
xor
popf
cs
hlt
sahf
addr16
adc
or
and
pop
int
enter
lock
pop
ss
popa
sbb
inc
jb
cmp
cs
dec
mov
add
or
pop
data16
into
pop
bound
popa
nop
movs
adc
pop
xor
dec
sbb
push
int3
shl
ss
ins
aad
adc
cmp
ss
push
sub
inc
adc
ss
sub
add
jns
inc
stos
sub
xor
fmul
mov
cmc
xor
add
or
ss
lods
imul
jl
imul
cmc
sbb
jmp
shr
inc
add
fdivr
into
sub
sti
into
mov
movs
dec
push
sbb
sbb
sub
xchg
xchg
or
es
mov
sbb
sub
(bad)
retf
mov
and
adc
inc
out
mov
fld
cmc
add
sub
jae
xchg
cmp
pusha
addr16
in
repnz
arpl
mov
lahf
cwde
push
loope
mov
sbb
(bad)
mov
sub
sub
retf
aad
mov
mov
sub
mov
push
call
imul
cmp
scas
outs
xor
push
out
adc
nop
adc
cli
addr16
shl
xor
mov
pop
mov
or
(bad)
and
rol
popa
add
stos
loope
xchg
ds
mov
movs
cs
imul
inc
in
mov
scas
jle
jle
mov
ja
fldcw
out
mov
mov
lods
arpl
stos
lds
cmp
fs
(bad)
repz
(bad)
es
mov
cmp
les
jne
xchg
movs
in
jecxz
adc
shl
int3
push
push
mov
ret
pop
xchg
in
loope
fsubr
jnp
mov
fimul
mov
push
in
das
ret
pop
out
aas
sbb
in
pop
push
in
sbb
pop
(bad)
jmp
jbe
fnstcw
pop
push
sub
jnp
mul
mov
and
fst
(bad)
or
xchg
xchg
add
xchg
in
dec
adc
or
mov
jne
adc
adc
push
data16
movs
(bad)
cmc
or
dec
sahf
add
mov
lods
test
sub
inc
movs
in
mov
push
mov
lods
xor
out
fwait
jb
cmp
pop
call
adc
popf
out
push
cli
push
ds
xlat
jecxz
jge
xor
pop
lods
xchg
adc
cld
popf
jp
mov
nop
mov
movs
cld
mov
ds
xlat
shr
adc
jnp
xor
dec
addr16
mov
sbb
jl
jmp
aas
jmp
and
jle
push
(bad)
jmp
adc
ds
cmc
shl
mov
jbe
pop
pop
cmc
sbb
jl
ss
inc
aam
cmp
scas
fldenv
and
push
jp
out
cmp
mov
push
push
mov
or
(bad)
shl
daa
cmp
movs
fwait
lock
xor
cdq
jp
push
mov
inc
repnz
inc
or
rcr
in
cli
add
sub
sbb
mov
pop
je
cmps
jmp
jno
inc
mov
in
das
fwait
cmps
xchg
xchg
stc
add
fdivr
in
das
jl
pushf
push
dec
or
add
push
sub
rcr
or
shl
pop
dec
and
jmp
es
xlat
pop
dec
fmul
cmp
aad
out
pushf
mov
adc
iret
mov
icebp
or
adc
jp
dec
jg
cmc
push
mov
dec
mov
ins
xchg
jb
xor
sub
jmp
push
jmp
test
setbe
les
stos
enter
cmps
xchg
sub
mov
retf
and
arpl
sub
sbb
inc
inc
scas
dec
jle
add
jmp
neg
cmc
and
inc
aas
xchg
bound
fs
pop
push
xchg
test
sbb
test
mov
dec
and
sbb
pop
and
cmp
sub
pushf
mov
jp
rcl
add
cli
jecxz
loop
adc
ss
add
pop
dec
outs
out
mov
fdivr
and
or
xsha256
cmps
xchg
ret
fnstcw
iret
pop
(bad)
aas
push
pop
arpl
xor
add
pop
sbb
sbb
iret
xchg
mov
data16
sbb
add
push
fs
jp
mov
sub
xor
movs
dec
inc
fdiv
pop
inc
and
pop
call
mov
fs
ret
loope
mov
ins
fcmovbe
pop
jle
or
push
pushf
and
out
std
push
jno
adc
pop
dec
je
mov
mov
stos
mov
cli
pop
js
movs
mov
mov
mov
mov
and
imul
sub
popf
mov
call
xchg
jns
or
enter
push
jg
add
or
and
jne
mov
jo
(bad)
push
iret
test
loope
and
das
sub
ds
cmps
test
jecxz
daa
push
sbb
jbe
pop
jle
icebp
(bad)
cmp
das
popa
push
(bad)
ds
es
(bad)
mov
cmp
mov
xor
retf
pushf
mov
push
pop
dec
dec
cmp
xor
xchg
pop
mov
and
mov
enter
(bad)
sbb
push
shl
jp
lods
das
fcmovnbe
sbb
xchg
pop
dec
and
popf
xchg
add
jmp
(bad)
les
aas
push
sub
call
cld
cmc
mov
xchg
dec
ss
mov
sub
dec
mov
(bad)
jne
cld
adc
jmp
xchg
xchg
mov
inc
int3
and
repnz
test
sub
adc
js
add
popa
adc
inc
scas
jmp
or
idiv
xor
jmp
or
jo
movs
ds
lds
popa
mov
mov
cmp
call
push
and
xchg
int
retf
xor
les
push
add
test
cli
xor
cmps
call
sahf
jo
hlt
push
out
dec
xchg
mov
sub
into
cmps
pusha
xchg
fwait
lahf
or
xor
test
loop
iret
adc
pop
test
cmp
aaa
inc
add
mov
cmp
cmp
pusha
int
or
outs
xchg
and
scas
mov
push
fstp
(bad)
inc
iret
mov
xor
rol
out
std
inc
sub
cmp
in
cmps
popa
stos
cmc
mov
xor
and
sbb
mov
xchg
ins
loopne
jmp
xor
mov
repz
xor
imul
and
xor
jo
sub
enter
imul
inc
repnz
pop
xor
test
sahf
in
xchg
pop
or
imul
mov
or
xchg
pop
add
jnp
add
push
mov
in
inc
call
jmp
xor
add
and
sar
scas
ss
sbb
mov
dec
hlt
stc
mov
add
dec
xor
cmp
xchg
loopne
call
(bad)
clc
sub
and
sub
mov
in
mov
xlat
mov
ss
mov
leave
mov
dec
les
adc
in
daa
stos
xchg
fs
mov
jp
mov
imul
rol
xchg
jo
xchg
inc
jmp
dec
xor
and
xlat
outs
adc
adc
lea
pop
lods
lock
jno
push
inc
(bad)
out
jge
sbb
in
sbb
icebp
bound
mov
add
ja
pushf
add
das
ja
not
mov
xor
pop
or
sti
pop
bound
les
rol
push
cmc
call
aaa
and
dec
ds
push
ret
fsubr
arpl
add
call
and
sahf
fwait
add
and
sbb
jb
jecxz
dec
pop
mov
mov
dec
push
xchg
rol
cmc
es
enter
or
push
mov
xchg
ss
test
in
inc
(bad)
xor
pop
inc
xchg
sti
add
shl
test
inc
inc
fstp
(bad)
std
adc
(bad)
es
leave
scas
jnp
pop
sti
sub
in
(bad)
mov
jecxz
setno
or
inc
imul
pop
fiadd
loopne
add
jg
pop
push
xchg
pop
imul
mov
test
mov
aad
retf
sub
sub
dec
aad
punpckldq
and
call
test
fisub
sub
push
dec
cmp
enter
pop
cld
(bad)
(bad)
popa
mov
ret
cs
(bad)
out
cwde
pop
loope
gs
mov
and
lds
inc
push
push
aaa
sbb
lods
adc
in
pop
push
ins
scas
sysret
push
shl
xor
push
sbb
ins
add
push
mov
(bad)
cmp
lock
add
popa
adc
inc
arpl
fisttp
idiv
push
xor
cmp
jg
lods
jmp
adc
ds
sbb
xor
xchg
(bad)
adc
iret
inc
and
push
nop
stos
stos
data16
stos
repnz
mov
cs
ror
mov
mov
fwait
xchg
lahf
xchg
pusha
scas
sub
mov
cmps
fistp
fistp
sbb
es
lods
mov
cmc
pop
iret
and
jge
inc
jmp
push
aad
(bad)
jmp
jg
test
lods
dec
xchg
clc
js
mov
push
stos
push
lods
add
mov
or
jns
mov
mov
into
xor
sub
xchg
aad
ret
and
xchg
add
sahf
imul
icebp
sub
mov
call
push
push
push
sti
cmps
jne
sar
pusha
test
mov
inc
dec
inc
xor
dec
movs
lock
mov
jns
mov
jno
mov
lods
pop
in
aam
sbb
cmp
add
push
mov
mov
out
call
cmp
jbe
out
cmp
cmp
das
rcl
dec
ror
fadd
xor
push
(bad)
movs
sbb
mov
mov
retf
sti
jl
cmp
adc
loopne
xchg
daa
test
cmps
add
ror
adc
cwde
jne
fs
push
push
mov
sbb
shl
lods
iret
repnz
or
xchg
dec
or
popa
(bad)
out
leave
and
adc
jl
sub
jo
mov
imul
and
mov
lea
mov
mov
(bad)
mov
std
cmc
ins
jmp
pusha
in
ret
cwde
sub
sbb
mov
cmp
fdivr
scas
sub
icebp
loop
cmp
cwde
xchg
ins
pop
push
mov
inc
jmp
mov
cdq
loop
cmp
jl
ds
push
pop
xchg
jnp
pushf
or
xor
std
pop
lods
or
pop
lds
(bad)
loope
imul
xchg
call
jp
jbe
mov
jae
lock
xchg
xchg
lods
jge
sub
fld
jp
xchg
sbb
dec
mov
pop
outs
sbb
loopne
sub
repz
and
std
sbb
imul
jp
aam
jg
sti
push
dec
cmps
bound
out
pop
ds
adc
loop
sbb
mov
xchg
mov
inc
into
ins
imul
in
clc
sahf
pop
call
ret
dec
mov
shl
xor
pop
dec
sahf
xor
js
pop
std
daa
lods
xchg
(bad)
fxch
mov
pop
test
xor
fnsave
mov
pushf
imul
jno
inc
mov
jle
mov
sub
aaa
jge
xchg
test
ret
pusha
add
pop
add
outs
push
dec
int3
shl
sbb
icebp
cs
adc
jbe
call
pop
loop
popa
outs
mov
ins
adc
or
sbb
ret
mov
popf
movs
sub
call
mov
lahf
and
pop
mov
or
mov
push
lods
fistp
sti
jecxz
fwait
cdq
je
repnz
and
push
xchg
adc
ror
sbb
out
test
mov
push
and
sub
popf
push
dec
sahf
inc
pusha
into
inc
loopne
out
arpl
ins
aad
out
pop
(bad)
inc
jecxz
dec
lea
mov
dec
jge
out
cmp
mov
xlat
add
les
add
or
hlt
jmp
mov
dec
or
ficom
repz
js
sbb
je
std
fcomi
xor
ds
cmps
xor
jae
pop
adc
push
cwde
rcl
test
jno
add
sub
xor
adc
vxorps
push
jne
ja
dec
(bad)
pop
xchg
adc
(bad)
ins
cld
xchg
leave
pop
xchg
mov
pop
inc
cmps
dec
sub
mov
(bad)
sub
out
(bad)
ins
out
sub
ret
dec
(bad)
mov
inc
imul
fwait
dec
mov
inc
bound
adc
push
adc
mov
int3
jo
xchg
call
xchg
ins
push
and
pop
jmp
out
call
in
fnstcw
mov
or
or
inc
call
imul
lods
add
sub
sbb
add
inc
and
popa
add
xchg
iret
sti
in
jno
sahf
outs
add
pushf
xor
in
or
jns
pop
push
jno
iret
scas
sbb
jbe
dec
hlt
shl
xor
xchg
idiv
push
iret
gs
in
out
cdq
aaa
add
cmps
cli
jbe
xor
add
xchg
pop
jne
sbb
out
sbb
xchg
xor
test
js
xchg
xchg
shl
stos
pop
mov
loop
mov
daa
sti
ror
sar
aaa
add
fmul
fisubr
pop
ret
out
jns
cmp
in
movs
push
dec
xchg
cwde
push
cdq
jb
aad
xchg
das
inc
daa
int3
retf
cld
stos
fdiv
or
pop
mov
test
xchg
in
loope
pop
adc
push
xor
jg
bound
adc
sub
mov
aas
sbb
call
xor
adc
sbb
enter
lods
pop
mov
dec
pop
pop
outs
add
mov
sbb
add
std
ins
cld
mov
add
xor
xlat
jnp
cs
clc
mov
mov
leave
outs
mov
xchg
mov
popa
retf
mov
jae
inc
dec
mov
xchg
dec
mov
jno
pop
xor
inc
mov
jo
imul
out
add
nop
xchg
add
rol
scas
es
xchg
jno
popa
dec
pop
sub
inc
jmp
xor
vpcmpgtd
sti
mov
dec
call
pushf
adc
dec
ja
ret
rep
add
mov
or
jg
mov
mov
mov
repnz
pop
push
pop
inc
sbb
and
adc
in
dec
mul
push
and
fnstcw
(bad)
popa
xchg
mov
les
push
xor
ss
rcl
jg
xchg
add
xor
aam
fcmovnu
inc
arpl
retf
test
fldcw
pop
xchg
js
push
cld
dec
xor
out
adc
ins
cmp
jl
and
call
xchg
add
in
sub
fwait
leave
aad
(bad)
or
cmp
dec
jmp
xlat
rol
xchg
sahf
push
arpl
and
fwait
jnp
xor
pushf
mov
dec
call
mov
sbb
ins
std
loopne
pushf
scas
add
mov
lahf
call
jg
mov
push
fadd
idiv
sub
clc
in
shl
cmc
jp
and
dec
adc
imul
mov
push
mov
adc
inc
mov
jg
jne
xchg
jns
mov
cmp
inc
mov
xor
dec
outs
mov
hlt
or
test
jno
pop
ja
pop
popf
dec
add
add
mov
sbb
fwait
dec
adc
push
xchg
jecxz
add
fs
clc
leave
lods
xor
add
clc
and
jge
jl
pop
jecxz
mov
mov
add
mov
(bad)
aam
push
ror
cs
inc
nop
xor
jmp
retf
mov
mov
pop
pop
inc
sbb
mov
nop
mov
inc
dec
outs
dec
push
push
and
(bad)
(bad)
hlt
sbb
retf
aam
mov
push
cmp
mov
enter
pop
add
mov
stos
je
ror
scas
cmps
cld
adc
push
test
inc
and
fwait
push
shl
enter
mov
or
cmc
dec
js
loop
xor
sbb
cmp
test
inc
xlat
popa
lds
stos
push
outs
nop
cmp
sti
loopne
nop
inc
xchg
adc
mov
pop
aas
aam
add
hlt
imul
push
jmp
mov
shr
mov
fcomp
ret
dec
(bad)
pushf
(bad)
push
pop
shl
jnp
(bad)
stc
jmp
lock
movs
iret
mov
js
dec
push
test
mov
add
mov
cli
or
add
int3
sbb
fidiv
lahf
pop
outs
sub
cmp
arpl
dec
jbe
addr16
vandps
mov
cwde
mov
(bad)
test
or
mov
adc
or
loopne
jge
inc
cmps
and
sbb
ins
xchg
jbe
mov
mov
loop
xor
lea
retf
sbb
ror
bnd
popa
or
out
mov
div
adc
adc
icebp
dec
adc
adc
dec
xchg
inc
inc
test
lock
in
add
or
push
mov
aaa
rol
in
adc
test
dec
ins
push
in
ss
(bad)
mov
mov
add
jb
and
cmp
pop
pop
(bad)
sbb
sbb
pop
ret
pusha
pop
xchg
cmp
sar
push
add
mov
enter
pop
xchg
addr16
mov
retf
jmp
arpl
mov
inc
mov
in
clc
lahf
xchg
fist
out
xchg
mov
push
les
(bad)
(bad)
gs
int
es
dec
cmc
test
ret
in
ins
call
rcl
push
push
push
mov
movs
jno
and
arpl
sub
lods
loop
dec
inc
cmp
cmp
nop
pushf
cmps
ds
sti
in
mov
cdq
ror
jmp
mov
scas
inc
jb
push
movs
pusha
jge
pop
pushf
sbb
fwait
das
jo
xor
arpl
jbe
jle
sub
rol
mov
and
sbb
ins
icebp
push
mov
or
pop
mov
sub
jbe
inc
lods
xadd
and
mov
jmp
inc
rcr
cmp
std
push
or
or
bound
inc
stc
dec
test
ss
jle
(bad)
sbb
int3
pop
mov
(bad)
xchg
test
mov
gs
sbb
hlt
div
lea
ins
daa
inc
jae
xor
jecxz
dec
not
cdq
mov
inc
push
(bad)
stos
clc
not
inc
scas
popa
xchg
mov
out
in
pop
in
scas
outs
sub
sbb
xchg
cmp
pop
xor
and
push
sbb
sbb
cmp
xor
loope
aas
lods
scas
lock
fst
repz
out
fldlg2
out
mov
inc
cli
mov
xor
inc
shl
mov
mov
pop
and
dec
mov
push
cmp
into
rol
(bad)
popf
push
pop
lods
sbb
icebp
sbb
lock
push
aas
mov
push
ret
int
xor
shl
out
pop
add
xchg
enter
sub
(bad)
jo
push
icebp
push
inc
xor
mov
je
nop
dec
sub
gs
pop
sbb
sub
jae
pop
out
stc
imul
mov
adc
loope
daa
lds
ret
push
adc
(bad)
jbe
sbb
push
dec
pusha
or
xor
in
push
test
push
cli
adc
movs
dec
xchg
das
xor
ins
pop
test
jns
imul
stos
add
mov
pusha
inc
jmp
adc
or
fsub
stos
cmp
and
movs
pop
xor
push
sbb
nop
dec
pop
repz
cvtpi2ps
test
jmp
jmp
test
mov
push
fwait
adc
sbb
dec
jmp
jl
sub
imul
sbb
push
push
cmp
jmp
inc
sbb
sar
aad
retf
in
xor
jmp
iret
std
cmp
adc
sub
lods
xchg
sub
xor
mov
or
or
sbb
push
int
jl
or
(bad)
jge
(bad)
or
xor
pop
adc
(bad)
inc
test
fs
scas
call
aad
sub
repnz
lods
test
cmp
cmc
int
popf
or
test
fwait
(bad)
or
mov
(bad)
mov
popf
dec
in
jb
jno
xchg
shl
jmp
rol
dec
hlt
lods
pop
push
outs
and
pop
aaa
jl
inc
nop
add
inc
popf
cmps
das
mov
iret
mov
jmp
dec
jp
and
retf
cwde
clc
in
retf
loopne
addr16
sbb
cmp
and
push
fcmovbe
out
inc
add
repz
cwde
or
sub
loop
sbb
add
lods
mov
fdiv
dec
mov
jbe
(bad)
loopne
outs
pop
mov
aaa
xchg
sar
lahf
rcr
imul
jnp
scas
push
popa
xchg
inc
cmps
inc
data16
mov
int
wbinvd
xchg
push
jns
test
fnstenv
xchg
pop
rol
sub
retf
xsha1
cmps
mov
mov
mov
sbb
cmc
cmp
test
jns
cmp
stos
aas
or
xor
push
mov
out
loop
or
hlt
add
add
ins
mov
das
fs
dec
mov
in
sbb
stc
dec
xchg
push
or
xchg
jo
mov
outs
enter
xchg
fld
xchg
cmp
add
ins
call
arpl
and
or
test
arpl
push
rcl
or
es
jne
js
sar
lea
js
push
jno
ds
loop
aaa
ins
push
cmp
arpl
xor
icebp
(bad)
push
dec
mov
and
add
cld
xor
cmp
(bad)
push
pop
mov
test
icebp
(bad)
addr16
loopne
ss
out
cld
ficom
mov
ret
loop
adc
sub
dec
ret
mov
inc
ins
dec
cld
jae
dec
xlat
or
dec
mov
popa
inc
xchg
cmc
not
leave
inc
stos
add
inc
sub
out
xor
xchg
jg
into
(bad)
(bad)
xor
push
ins
fisttp
xchg
mov
push
mov
mov
fnstsw
popa
mov
cmp
jbe
arpl
sbb
not
(bad)
cld
jmp
xor
mov
leave
add
jmp
jmp
in
inc
int3
adc
mov
hlt
iret
sub
sbb
jnp
enter
push
cmp
xchg
inc
(bad)
in
stc
jnp
xor
scas
dec
mov
jne
cmp
int
or
sub
xchg
or
mov
add
push
test
leave
cmp
int3
cmp
push
adc
inc
push
jne
xor
inc
sahf
dec
cmp
aad
mov
mov
dec
or
daa
push
ret
out
xor
mov
pop
mov
xchg
lock
jl
(bad)
xor
loopne
pop
dec
mov
xor
push
mov
or
bswap
sti
sbb
sub
pop
imul
dec
cmp
add
mov
push
aad
fadd
retfw
adc
jnp
jmp
retf
out
pop
ja
stos
outs
(bad)
sar
mov
adc
(bad)
aaa
paddsb
push
jno
push
mov
(bad)
enter
push
rol
xor
aas
adc
add
xchg
ss
or
cld
fist
or
or
jle
mov
xchg
push
jnp
data16
pop
nop
push
or
pusha
clc
mul
mov
dec
push
scas
push
mov
shl
pop
or
sub
ja
pop
js
mov
push
(bad)
aas
and
les
push
mov
nop
jnp
jbe
push
and
scas
mov
mov
js
sub
xor
mov
pop
mov
repnz
leave
out
pusha
scas
mov
sti
fstp
int3
mov
lock
pop
in
add
into
data16
enter
xchg
movs
bnd
push
cmc
gs
retf
cmp
das
loopne
mov
inc
mov
dec
pop
mov
out
sbb
jg
and
(bad)
ss
sub
lds
imul
fdivr
enter
inc
jl
pop
or
push
ins
jecxz
sub
add
dec
cwde
mov
add
dec
dec
pop
mov
jns
push
jecxz
mov
push
add
and
jle
or
mov
inc
jnp
out
mov
bound
inc
push
pop
sub
pop
mov
ins
mov
xor
cmp
push
loop
and
fmul
scas
shl
jne
int
mov
ss
in
mov
(bad)
fdivr
bnd
mov
das
and
mov
call
ja
(bad)
jb
inc
dec
int
push
loop
mov
imul
mov
scas
push
test
or
(bad)
mov
je
in
test
stos
clc
lods
jae
gs
popf
mov
inc
mov
js
into
or
enter
hlt
cmp
hlt
adc
sbb
lods
adc
mov
sti
sub
fild
retf
push
sub
cmp
retf
xchg
stc
dec
mov
ins
adc
inc
push
mov
adc
dec
push
sar
paddb
mov
dec
and
mov
xor
adc
mov
mov
call
mov
adc
xchg
popa
mov
mov
sbb
pop
in
add
in
jge
pop
fstp
jo
sub
and
and
pop
mov
leave
int3
setle
jb
xchg
(bad)
push
leave
iretw
and
or
cld
nop
push
adc
scas
ins
sahf
clc
jbe
ds
xchg
mov
es
sub
sbb
test
dec
out
xchg
mov
mov
bnd
and
(bad)
stc
push
enter
(bad)
icebp
jnp
pop
dec
cld
icebp
fdivr
imul
data16
(bad)
mov
xchg
cmps
pusha
push
cmp
mov
xchg
into
jg
jge
ror
pop
sub
lods
mov
mov
fimul
or
inc
rol
jp
retf
aas
in
mov
dec
sbb
jae
mov
or
push
and
push
mov
aaa
scas
pop
scas
add
mov
clc
retf
and
in
outs
xor
scas
and
imul
xor
mov
fwait
pushf
xchg
rcr
jno
and
cs
das
push
(bad)
pop
jmp
lock
jp
or
dec
and
outs
pop
mov
pushf
in
test
imul
ins
sub
jle
inc
pop
ss
(bad)
push
bsf
mov
inc
push
scas
inc
seta
out
out
inc
(bad)
jmp
pop
mov
fcom
fld
mov
adc
cmp
lss
loopne
fdiv
sub
sub
repnz
repz
jmp
aam
push
fst
dec
or
jo
js
push
test
cmp
push
in
movs
jne
mov
js
pop
cmps
out
mov
pusha
dec
adc
add
add
sbb
pop
or
in
mov
retf
movs
arpl
(bad)
popf
xchg
push
dec
daa
out
js
cmp
xchg
leave
(bad)
mov
adc
mov
sbb
add
lock
aas
out
inc
mov
cmc
xor
outs
adc
div
cmp
fist
add
pusha
mov
or
fiadd
mov
daa
mov
popf
inc
fst
test
mov
mov
sets
fld
cmps
xchg
inc
push
pop
in
ja
dec
outs
std
pop
jmp
sbb
sub
ret
pop
push
repnz
dec
mov
bound
cmp
or
mov
adc
mov
cmp
jg
sahf
push
push
adc
ret
mov
jmp
and
cmp
xor
or
sub
push
je
cwde
and
or
jp
xchg
addr16
mov
mov
dec
mov
jno
popa
mov
mov
pop
pop
aas
(bad)
in
push
leave
and
hlt
jne
les
(bad)
out
cmp
sbb
mov
fist
jg
ins
xchg
aas
shl
push
repnz
hlt
mov
hlt
pushf
aam
adc
and
dec
add
inc
sub
mov
outs
inc
adc
ds
imul
or
test
test
and
cmp
into
mov
sub
lds
sbb
les
call
inc
clc
sub
call
push
mov
jns
cs
aad
outs
test
das
mov
mov
xchg
jp
cmps
mov
das
sub
pop
sbb
or
mov
add
cdq
ins
mov
mov
gs
pop
sub
(bad)
cmp
fidivr
or
push
je
pop
out
add
cwde
sub
pop
mov
outs
in
out
push
cdq
std
dec
inc
sub
add
jb
cld
mov
adc
or
or
mov
js
call
pop
dec
xor
xlat
or
inc
cdq
(bad)
aam
jmp
add
cmp
cmp
dec
add
sbb
jno
ret
(bad)
jecxz
mul
dec
dec
jecxz
adc
jmp
add
xor
sub
rol
inc
xlat
sahf
inc
mov
or
cs
sub
xor
cmp
dec
cmp
jns
push
sub
(bad)
push
cmps
retf
or
aad
pop
inc
(bad)
out
int
lods
xor
cmp
fcom
imul
outs
push
mov
test
push
push
mov
(bad)
ror
test
cmp
int3
sub
into
jb
imul
inc
push
leave
fistp
pop
out
cmp
and
stos
inc
or
inc
mov
push
das
and
mov
jne
pushf
inc
jno
lods
aam
shr
sbb
mov
js
mov
shl
out
scas
fbstp
inc
je
mov
xor
(bad)
jmp
dec
xor
push
add
mov
add
lds
ss
pop
in
inc
jns
xchg
icebp
cmp
cmp
mov
mov
cld
jl
ins
add
or
inc
push
dec
fwait
test
xchg
rcl
or
mov
push
xor
(bad)
icebp
in
sub
aas
xchg
mov
adc
ret
icebp
aam
scas
int3
addr16
shl
push
hlt
lea
mov
or
rol
lds
mov
jno
lea
loopne
pushf
(bad)
mov
mov
retf
push
jle
das
les
jl
aas
jae
lock
pusha
inc
fld
dec
mov
pop
xor
jge
aaa
mov
leave
and
sar
dec
mov
fnstcw
pop
pop
push
dec
(bad)
jge
pop
in
mov
adc
(bad)
pop
jmp
retf
mov
sub
pop
fs
sub
or
xor
sbb
mov
xor
(bad)
(bad)
fcom
loope
fnstcw
scas
aas
fiadd
lock
call
icebp
test
inc
cmp
mov
cmc
aas
dec
ins
fs
jae
lds
sbb
inc
cmp
xchg
pop
xchg
inc
sbb
es
ins
cmp
pop
sub
adc
outs
ret
xchg
sbb
add
lods
das
cmp
arpl
daa
lds
in
jecxz
in
loop
xor
cld
mov
push
inc
pushf
enter
dec
popf
or
test
lahf
(bad)
dec
fidiv
cmp
mov
push
jl
ja
addr16
into
icebp
call
inc
adc
mov
mov
add
ins
ds
ja
jmp
mov
mov
adc
fldenv
jns
sahf
cdq
push
loope
out
cmps
or
fist
add
fcom
add
out
push
popf
and
popa
cmp
xchg
je
lods
fisttp
cdq
int
ss
jno
(bad)
in
mov
mov
int
mov
call
inc
out
xchg
lock
(bad)
adc
imul
dec
pop
clc
out
fidiv
addr16
gs
in
inc
fsubr
mov
imul
xchg
loop
xor
cs
popa
sub
sub
or
pop
cmp
adc
jl
jg
in
dec
inc
add
dec
(bad)
fnstcw
rcr
mov
cmc
xchg
scas
(bad)
pop
test
(bad)
inc
mov
sub
in
inc
aad
dec
cmc
mov
addr16
pop
mov
scas
jmp
(bad)
repnz
std
les
adc
or
fst
push
jo
jg
in
js
xor
stc
popa
pop
xor
sub
loop
pop
cmps
pop
in
jae
jo
sub
jbe
pop
mov
push
push
into
cdq
pop
outs
jmp
mov
adc
mov
shl
mov
cmpxchg8b
push
sbb
js
jmp
jo
push
loope
xchg
jmp
push
mov
push
jp
pop
mov
mov
call
inc
push
xor
inc
jmp
(bad)
push
scas
xchg
std
sahf
mov
xor
enter
push
je
mov
mov
pop
push
(bad)
pop
sbb
std
lds
push
iret
(bad)
je
inc
xchg
dec
movs
das
push
jg
xchg
mov
arpl
js
fisttp
(bad)
mov
push
sub
pop
inc
sub
cmc
movs
in
ds
jmp
dec
inc
sub
lock
aaa
cmp
addr16
sub
pop
add
fmul
inc
ss
shr
(bad)
push
or
addr16
enter
adc
scas
xor
push
iret
jae
mov
loop
fistp
cld
sbb
cmp
or
imul
cwde
or
mov
cwde
shr
lods
dec
sbb
(bad)
mov
mov
or
dec
mov
pop
and
sbb
add
cmp
pop
sbb
fmul
stos
cli
cmps
xor
nop
inc
jmp
mov
pop
mov
jmp
iret
dec
mov
sub
pushf
ret
or
dec
into
arpl
jle
inc
sbb
sub
and
add
retf
xor
dec
or
jge
ja
add
add
mov
sub
cmps
(bad)
adc
sub
loope
inc
stos
aad
aas
add
push
shl
or
cs
loop
ret
lods
popf
retf
mov
dec
stos
js
inc
mov
retf
dec
hlt
les
jo
call
mov
into
lods
pop
push
lods
inc
inc
or
imul
xor
push
and
call
cmp
movs
inc
lods
sbb
retf
pop
out
icebp
push
(bad)
add
cmps
addr16
pop
pop
xor
mov
mov
push
movs
inc
test
shr
into
movs
mov
lahf
dec
mov
pop
(bad)
push
mov
cmp
jecxz
mov
movs
mov
ret
and
xchg
lea
dec
xchg
jne
adc
inc
mov
pop
cmps
pop
test
gs
mov
jae
das
sbb
mov
mov
jns
fdiv
pop
pop
repz
or
inc
sti
or
dec
mov
addr16
loope
mov
aas
pop
pop
inc
jae
push
fidivr
mov
pop
jb
call
div
push
leave
jge
sub
aam
cwde
cld
inc
scas
mov
leave
cld
in
mov
fwait
jns
jecxz
xor
mov
retf
mov
or
jnp
cmps
add
xchg
inc
(bad)
mov
dec
mov
sahf
dec
ss
in
dec
enter
mov
jecxz
xchg
xchg
mov
sahf
lea
(bad)
out
sti
jne
repnz
sub
and
mov
enter
sbb
xchg
das
mov
repnz
or
mov
nop
pop
cs
mov
movs
pop
and
imul
push
jmp
lock
bound
pop
adc
and
out
movs
dec
dec
(bad)
ins
or
into
sub
xor
jb
cmps
mov
cmp
mov
(bad)
stos
in
cmp
fild
fdiv
add
xchg
adc
stc
jg
cmc
add
fiadd
(bad)
out
shl
or
mul
std
jae
popa
stc
clc
pop
out
sbb
jp
pop
subps
loop
xlat
add
inc
sub
out
or
pushf
pop
leave
paddusb
ss
fdivrp
hlt
loopne
mov
in
pop
sbb
pusha
(bad)
in
aas
pushf
or
mov
push
shl
sti
mov
cmc
aas
inc
int3
mov
scas
lock
lahf
lods
add
mov
xchg
sti
dec
xchg
call
cs
mov
cmp
xor
das
pusha
and
push
test
or
pop
js
cwde
stc
clc
cmp
jmp
sbb
jl
xlat
mov
mov
ja
mov
fbstp
hlt
(bad)
push
not
test
sbb
pop
or
lock
push
sub
inc
lea
(bad)
add
push
call
sahf
aaa
push
(bad)
jns
ins
push
push
jl
mov
push
jmp
lahf
outs
mov
gs
jno
pop
push
or
xor
cmps
push
jmp
and
outs
pop
fs
loop
pusha
cmc
dec
in
cmp
(bad)
xchg
and
mov
loopne
jb
mov
mov
imul
push
out
les
enter
sub
xchg
fist
dec
bound
inc
rcr
data16
jg
out
and
jne
bound
lods
add
xor
cs
fdivr
cli
scas
mov
divps
cmc
mov
loop
or
add
mul
cld
lods
mov
retf
ins
jle
aad
sub
jl
dec
adc
push
lods
push
mov
mov
bnd
inc
lods
and
cmovle
rcr
cld
cmps
inc
mov
sbb
das
les
or
adc
xchg
jmp
mul
aad
push
into
sbb
jg
(bad)
add
popa
(bad)
fmul
mov
cmp
jl
out
pop
int
shr
inc
push
loopne
stos
jp
inc
pop
or
sub
push
xor
leave
pop
mov
lods
inc
cwde
test
loope
scas
mov
movs
test
data16
xchg
lods
mov
imul
fisttp
or
cmp
sbb
popf
in
jmp
stc
jecxz
jnp
dec
pop
addr16
aas
mov
bound
(bad)
sbb
and
add
inc
out
into
addr16
test
in
lock
mov
retf
sub
sub
mov
xchg
mov
pushf
cmp
add
call
xor
pop
or
cmp
test
ror
cmps
jmp
sub
xor
xor
cli
sbb
dec
mul
int
cmps
cs
fisttp
imul
dec
mov
xchg
pop
push
mov
adc
into
push
scas
mov
dec
pushf
fcomp
fs
outs
or
lods
loopne
mov
sub
jecxz
rol
fdiv
push
ja
pop
mov
dec
adc
adc
sub
and
push
sub
cmp
jmp
call
std
leave
stos
fcom
mov
mov
shl
pop
xor
pop
enter
loop
jg
pop
dec
push
xchg
dec
or
dec
div
mov
push
scas
or
lahf
lods
mov
mov
scas
(bad)
sub
cmp
ja
inc
daa
jbe
cwde
and
call
jmp
sub
jge
sbb
scas
jmp
mov
ins
jns
fstp
in
xchg
mov
scas
cmps
pushf
and
push
aad
push
add
inc
fldcw
stos
xor
ror
and
ret
or
inc
add
icebp
jle
stos
push
popf
pop
rcl
sar
adc
lea
dec
pop
xchg
mov
clc
sbb
imul
les
rcr
ins
lods
arpl
push
hlt
dec
rol
das
mov
jmp
popa
and
jae
test
cli
cmp
loope
jge
adc
fcomp
lods
in
clc
daa
xlat
out
rol
clc
dec
(bad)
lock
movs
in
sbb
xchg
jg
pop
(bad)
aaa
in
loop
or
pop
dec
(bad)
cmp
in
xor
dec
les
sub
fld
xchg
push
retf
les
popf
push
shr
je
sbb
ja
push
dec
add
movs
bsf
ficom
push
push
fwait
cdq
cli
lods
mov
fdecstp
inc
and
cdq
jl
outs
dec
pop
into
repnz
dec
(bad)
jecxz
pop
lds
lds
test
xchg
in
lea
mov
xor
inc
cmp
inc
shr
inc
push
inc
adc
xor
(bad)
pop
lea
test
lock
xchg
push
scas
out
stc
and
shr
ret
add
mov
shl
dec
dec
popa
fwait
clc
mov
add
(bad)
mov
pop
jmp
(bad)
shl
mov
xchg
out
in
sbb
push
(bad)
repnz
shl
js
pop
retf
and
stos
jae
clc
cmp
fs
sbb
mov
pop
out
jmp
sti
int
inc
jp
pop
stos
adc
xor
aam
dec
or
xlat
leave
dec
mov
in
shl
ds
cmc
jo
mov
cmp
out
clc
cli
xchg
mov
lahf
or
sbb
cs
rol
fild
nop
add
add
adc
aas
mov
popf
sbb
xchg
cmp
arpl
dec
dec
(bad)
mov
mov
mov
ret
sbb
shl
jno
outs
lods
call
sbb
stos
pop
fwait
xchg
add
out
ret
cmc
test
push
fwait
and
xchg
sub
xor
out
and
push
mov
cmp
or
inc
or
movs
jl
inc
adc
adc
cmp
sub
xchg
(bad)
cmp
sub
outs
arpl
leave
inc
mov
xor
jge
addr16
mov
popa
stos
mov
popw
inc
retf
jmp
mov
mov
push
mov
mov
out
lahf
clc
dec
(bad)
enter
sbb
repz
push
test
sub
lock
jl
fs
sbb
mov
push
ss
add
nop
clc
movs
test
jnp
in
out
pop
push
mov
jo
pop
retf
sbb
out
inc
ds
popf
pop
sbb
pushf
xor
ss
jae
sbb
in
adc
dec
mov
sbb
mov
jbe
sbb
mov
adc
ds
add
fwait
adc
stos
(bad)
add
jmp
mov
pop
sbb
ret
inc
fldcw
adc
jmp
mov
inc
xor
lea
adc
pop
test
int3
jne
stos
fwait
jo
or
movs
dec
in
sub
mov
and
push
or
xchg
sub
in
push
mov
dec
mov
stc
push
fidivr
repnz
ret
push
loop
or
cmp
lock
imul
outs
and
lods
cdq
(bad)
mov
xchg
popa
je
aam
fdivr
mov
jecxz
les
call
jne
ret
out
shl
popf
int3
pop
imul
lock
out
(bad)
xchg
add
pop
loopne
test
jbe
fld
fstp
jns
and
pop
jo
test
sbb
fs
jnp
in
push
add
jl
test
jmp
or
inc
mov
icebp
inc
enter
mov
movsx
push
xchg
and
push
cmp
mov
retf
push
dec
or
xor
aas
jmp
cmp
xor
addr16
pop
out
push
mov
data16
jae
in
enter
sbb
xchg
add
call
in
add
das
mov
jno
jle
fist
imul
xor
xchg
pusha
cmps
ins
jl
fdiv
bnd
arpl
ins
retf
fsqrt
sub
jle
mov
cdq
add
(bad)
dec
bound
xor
fist
xor
and
pop
xlat
cmp
push
leave
movs
xor
shl
jns
je
(bad)
test
mov
fs
fcmove
fstp
dec
icebp
(bad)
add
dec
in
fwait
cmps
and
in
sub
xor
test
test
hlt
jb
mov
es
retf
leave
pop
pop
test
lock
push
out
ret
jb
mov
sub
xchg
jne
scas
data16
test
push
add
into
jle
retf
retf
ret
xchg
fs
sahf
mov
enter
ja
jg
scas
sbb
cli
add
mov
sar
jb
cli
jno
repnz
push
jp
and
sti
out
or
push
inc
rol
loopne
or
or
pop
lahf
mov
outs
in
ret
push
out
push
lahf
repz
imul
or
aas
inc
gs
push
mov
mov
dec
sbb
stos
lea
jecxz
cld
or
lods
jmp
pop
xchg
push
mov
sub
dec
lock
jne
shr
das
or
fnsave
imul
imul
mov
dec
sub
retf
adc
xor
stc
gs
outs
hlt
stc
enter
push
xor
sub
fdiv
mov
pop
repnz
mov
daa
icebp
mov
repz
mov
mov
in
xor
retf
aas
aad
jb
sahf
jp
popf
xor
inc
jae
(bad)
inc
scas
ret
ss
sub
sti
movs
sahf
inc
in
fldl2e
sub
sub
sub
ret
dec
xchg
popf
push
jns
push
lahf
fldenv
adc
xchg
stc
ins
xor
stc
fsubp
fist
cmps
jecxz
shl
and
stos
data16
es
bound
lds
dec
es
cmp
dec
jnp
lock
ret
nop
or
rol
mov
and
shl
int3
sbb
mov
gs
(bad)
push
xchg
pop
pusha
sar
jae
bound
cmp
mov
inc
push
sub
pop
jg
fld
pop
jb
loop
adc
push
pop
sti
or
movs
mov
lods
movs
or
arpl
sub
cmp
lods
dec
int3
out
in
jmp
ins
(bad)
rol
maxps
and
jecxz
mov
jae
mov
std
cld
adc
ss
rcl
sub
and
imul
jl
jge
mov
dec
adc
retf
sbb
xor
mov
aas
push
jbe
and
int
add
or
mov
cdq
inc
sbb
cmp
push
or
xchg
xchg
js
cmp
pop
in
je
hlt
adc
sub
dec
pop
xchg
add
jne
jle
sub
push
push
pop
lds
pop
dec
js
push
out
sbb
jno
and
mov
in
add
pop
or
mov
mov
mov
cmps
(bad)
out
addr16
xor
pop
lea
das
(bad)
cmp
sbb
lods
ds
sar
mov
outs
jnp
imul
or
lock
jecxz
mov
les
sub
daa
pushf
mov
xchg
add
sub
pop
(bad)
xchg
sub
xor
jno
lds
push
dec
int
in
sbb
sbb
lahf
in
add
pop
sub
or
in
(bad)
xor
ds
mov
mov
popf
jl
shl
sbb
cmp
jbe
jns
or
imul
scas
jmp
jbe
fsubr
sub
mov
jg
jno
xchg
jmp
adc
out
adc
int3
jl
out
loopne
mov
jo
mov
in
sub
jns
mov
jne
cmp
scas
inc
cmps
test
mov
icebp
mov
imul
out
loopne
repz
xor
push
fdiv
inc
into
hlt
cmp
push
hlt
lods
xor
fs
setbe
cdq
ret
or
nop
(bad)
jb
add
bsr
mov
jg
push
mov
fimul
inc
mov
stc
jns
bound
shl
out
fisttp
std
cmc
in
sbb
inc
mov
ret
push
sahf
ret
add
loopne
pop
mov
pop
mov
loop
imul
xchg
aas
ror
nop
mov
clc
xor
pop
add
mov
xor
push
scas
test
sbb
jl
sbb
sbb
inc
pop
mov
out
js
lea
mov
add
mov
ins
mov
dec
shl
pop
jno
jge
in
pop
ficom
xchg
mov
repz
imul
inc
popa
clc
dec
test
rcl
cmc
mov
and
hlt
gs
xlat
fs
clc
sbb
mov
(bad)
in
mov
repnz
(bad)
lea
inc
pop
hlt
xchg
inc
sti
out
cli
pop
lahf
popa
push
or
jge
mov
jle
std
retf
jmp
xor
xchg
jb
sbb
cmp
imul
(bad)
jmp
or
add
cmp
cmps
xchg
(bad)
mov
das
and
xchg
fldenv
mov
fs
stc
scas
in
and
mov
fsubr
imul
jbe
push
sbb
(bad)
jo
lea
xchg
(bad)
out
mov
fstp
call
test
sbb
mov
les
daa
fistp
and
ret
push
cli
in
shl
cmp
xor
leave
lea
dec
lea
(bad)
int3
inc
inc
xor
adc
fstp
rcl
dec
push
popa
aam
hlt
sti
es
dec
mov
sub
vdivss
je
retf
mov
sbb
shl
aas
pop
pop
push
scas
sub
shl
repz
or
fnsave
xor
jle
es
cmps
add
xchg
adc
aaa
test
fwait
dec
lods
cdq
mov
cld
xchg
cmc
retf
push
cs
std
sbb
popf
(bad)
lock
inc
jns
mov
test
xchg
push
mov
sti
ss
pop
push
imul
ins
xchg
lea
push
pop
(bad)
dec
call
or
clc
shl
iret
(bad)
call
fist
sahf
inc
aam
or
cwde
mov
xchg
inc
movs
out
fcomp
aam
retf
fst
fwait
cmp
data16
pop
push
dec
lea
jo
or
je
pop
xchg
cmp
ret
mov
bsf
inc
xchg
mov
out
sbb
inc
jge
and
xor
lock
add
add
das
inc
rcr
inc
push
mov
out
scas
adc
je
fisttp
test
pop
cmp
push
lock
std
jmp
sub
cmps
rcl
mov
pop
movs
hlt
push
call
cli
in
mov
aam
adc
icebp
cld
(bad)
cmp
push
loope
jno
sub
pop
lock
sbb
and
pop
dec
sub
clc
add
mov
jg
mov
or
dec
sub
shl
or
fsubr
rcr
movs
rcr
jmp
stos
cld
rcl
or
call
xor
retf
retf
cmps
in
hlt
sub
mov
lea
(bad)
push
test
leave
ss
int3
std
pop
xchg
cwde
and
fild
jno
sub
bound
or
cmp
inc
(bad)
call
popa
jne
xlat
pusha
movs
arpl
mov
mov
les
jecxz
xchg
xchg
cwde
ds
mov
jbe
clc
fadd
out
lahf
inc
cmp
(bad)
je
daa
adc
jmp
stc
cwde
mov
(bad)
xlat
or
push
and
outs
fidivr
cmp
adc
repnz
add
je
cld
push
cwde
(bad)
mov
movs
into
adc
sbb
mov
daa
and
jecxz
retf
mov
pusha
pop
mov
mov
lods
shl
dec
jl
and
cmp
xor
xchg
jmp
or
cld
icebp
gs
push
xor
push
fwait
(bad)
xor
dec
pop
push
mov
lds
dec
test
sub
and
sbb
cli
leave
movs
or
pop
(bad)
push
mov
dec
push
popf
inc
int3
leave
cmps
jmp
fcmovbe
ss
and
pause
cmp
sub
popa
jl
sub
jmp
xor
xor
xchg
fst
fist
mov
and
loop
mov
sbb
pusha
sbb
jmp
push
push
sub
lock
and
xchg
es
aas
adc
or
std
xchg
xlat
fwait
mov
mov
dec
xchg
setbe
xchg
sbb
mov
pop
fstp
xor
inc
test
bound
sub
push
leave
xor
iret
pop
repnz
pop
push
push
repnz
sbb
and
cmovnp
and
test
test
or
xor
aam
jl
xchg
fidivr
inc
stos
sub
lods
mov
cwde
lods
test
out
lock
cwde
stos
mov
jmp
in
or
rcr
ds
call
cmp
aas
outs
xchg
(bad)
fwait
cli
mov
and
inc
pop
cdq
sbb
outs
mov
scas
mov
or
mov
push
ss
movq
lds
mov
or
iret
jg
mov
mov
sbb
mov
xor
inc
lea
mov
sbb
dec
mov
fpatan
ja
aam
mov
sar
out
(bad)
jmp
js
mov
jns
inc
mov
sbb
pusha
cwde
jnp
inc
mov
lds
cmp
xchg
jmp
rcl
pop
mov
or
and
(bad)
add
scas
mov
call
lock
pop
sbb
out
inc
dec
jne
mov
pop
in
repnz
lahf
sub
pop
mov
push
outs
icebp
push
push
(bad)
mov
lods
cmp
jecxz
push
pushf
mov
rcr
data16
cs
xchg
cmp
mov
jbe
pop
scas
and
pop
pop
xchg
ins
lods
ja
mov
retf
xor
jne
pushaw
mov
add
loopne
shr
arpl
adc
cmp
jmp
adc
cld
xor
test
into
push
pop
jg
xchg
out
add
push
jne
lahf
bound
xor
ret
cmps
adc
loop
adc
mov
in
jae
and
dec
cmp
call
test
lea
mov
push
xor
inc
movs
pcmpeqb
daa
dec
mov
fild
xchg
clc
dec
xchg
and
out
clc
iret
inc
cmp
(bad)
loopne
jo
repz
and
adc
aaa
xchg
or
mov
pushf
test
cdq
inc
cs
dec
jmp
and
mov
cmp
dec
sub
mov
dec
pop
lods
xchg
mov
jne
scas
cmps
popf
sbb
sbb
movs
mov
sbb
fdivr
(bad)
(bad)
fdivr
xchg
imul
pmulhw
or
mov
pop
sbb
mov
jb
ins
call
fistp
sbb
stos
sbb
push
fs
xchg
cmp
pushf
pop
mov
mov
int3
shr
das
adc
ins
xchg
ror
repz
and
sub
push
pop
in
popf
aad
cmp
push
xchg
mov
xchg
mov
inc
sbb
cld
movs
push
mov
push
mov
stc
popa
pop
mov
ret
repz
sbb
mov
dec
xchg
dec
or
xlat
jo
sbb
jp
je
out
cmp
imul
out
sahf
mov
inc
and
ret
lods
xor
js
out
ret
or
cmps
xlat
imul
or
xor
push
and
adc
je
pop
adc
addr16
mov
test
or
and
popa
enter
(bad)
loope
mov
sbb
jge
es
mov
sbb
sahf
xchg
cdq
iret
test
test
adc
xchg
mov
inc
or
(bad)
retf
scas
sub
test
mov
fmul
dec
sub
fldenv
hlt
inc
call
xlat
iret
push
add
cmps
sub
outs
inc
or
or
sub
(bad)
stc
and
aaa
xor
cld
(bad)
cli
cmp
push
cmps
retf
call
in
lahf
adc
in
jo
mov
push
mov
popa
popf
pop
arpl
in
shr
jb
ds
and
enter
xor
in
data16
jnp
movs
out
clc
mov
push
cs
xchg
cld
scas
pushf
test
leave
sbb
jecxz
add
and
mov
jo
sbb
sub
mul
sbb
push
out
jmp
test
stc
xchg
popa
jae
aam
es
call
and
mov
icebp
and
pop
jecxz
stc
xor
mov
mov
dec
dec
push
or
add
cmps
cmp
rcr
pop
sbb
pop
xchg
sar
push
mov
pop
inc
mov
lds
test
xor
sbb
mov
aam
fwait
jge
mov
cmp
add
(bad)
mov
js
mov
inc
xchg
ja
out
jmp
jnp
test
or
and
adc
xchg
push
mov
(bad)
repz
and
enter
rcr
fs
inc
sbb
sbb
mov
xor
in
inc
mov
stc
mov
cmp
add
adc
jne
mov
mov
ss
xchg
(bad)
test
dec
sub
dec
imul
test
ficomp
mov
fdivr
mov
stos
sbb
loopne
push
adc
stos
cmc
sub
mov
shl
shl
add
out
dec
(bad)
inc
popf
mov
jge
mov
sbb
fwait
(bad)
mov
cmps
div
imul
and
jmp
in
inc
(bad)
data16
ja
int
syscall
jmp
mov
push
push
sbb
lock
out
pop
mov
mov
push
jp
fcomp
aaa
cli
and
je
add
scas
call
adc
loope
lods
(bad)
inc
mov
jmp
shr
mov
push
outs
jno
mov
test
repnz
pop
lods
ret
cmp
or
retf
jns
mov
leave
xlat
dec
cli
xchg
jge
mov
int3
dec
pcmpeqw
jge
dec
loop
call
in
in
jne
in
outs
cdq
retf
jge
fild
ins
mov
test
cmp
jb
sub
ins
pop
mov
jns
xchg
mov
pop
jo
xor
imul
fwait
push
pop
or
xchg
ret
push
push
xchg
pop
xchg
out
sub
ret
and
and
retf
add
or
int
mov
cmp
jb
fst
push
ficomp
cmp
mov
and
out
lods
lahf
xor
dec
add
es
cmp
fiadd
dec
and
mov
sbb
jp
outs
je
jns
push
mov
cmc
enter
call
popa
dec
sar
mov
leave
mov
loop
cwde
sub
aas
popa
bound
add
cmp
sahf
int
or
nop
add
test
add
or
adc
ret
push
inc
mov
loopne
out
or
mov
mov
sub
ror
jmp
fld
out
cs
add
repz
push
sbb
adc
dec
sub
std
imul
arpl
inc
sub
(bad)
cmp
enter
jecxz
and
or
sbb
repz
add
gs
sbb
out
clc
(bad)
call
imul
fstp
jg
cmp
cdq
push
inc
rcr
fild
test
pop
call
push
ficom
ja
(bad)
rcl
lahf
mov
pop
jne
mov
jmp
sar
fwait
loopne
test
mov
cli
jmp
int
xor
mov
and
je
inc
xor
retf
jmp
push
sbb
rcr
mov
mov
imul
jl
mov
aaa
int
pminub
mov
lds
pop
pop
push
pop
out
jl
push
add
fdiv
and
sbb
cmp
xchg
jecxz
adc
dec
imul
retf
mov
add
pop
(bad)
es
or
jle
cmps
jo
int3
mov
mov
std
and
cmc
add
and
mov
inc
xor
xchg
nop
adc
out
(bad)
dec
adc
cmp
sahf
mov
inc
test
cs
(bad)
pop
push
jge
xor
mov
push
mov
push
mov
nop
(bad)
(bad)
mov
push
add
sbb
add
push
dec
pop
add
test
mov
jg
pop
xor
sub
cmp
mov
xor
into
movs
cmps
inc
push
movs
ins
adc
js
inc
in
retf
fidivr
pop
sub
lods
sub
mov
lahf
sahf
mov
xchg
test
adc
mov
jecxz
jecxz
and
push
jmp
jge
test
retf
ss
sar
arpl
rcl
adc
jg
pop
inc
sbb
jmp
mov
dec
movs
popa
out
add
mov
retf
lds
loopne
pop
push
mov
xchg
xchg
mov
mov
sub
loop
pop
fisub
pop
dec
sbb
sub
dec
clc
ret
in
or
mov
dec
jl
sbb
std
into
cld
xchg
sub
test
lds
push
in
jbe
or
ins
popf
adc
retf
xchg
or
mov
cli
xor
ret
test
fst
int
rol
mov
mov
mov
mov
(bad)
sbb
cmp
(bad)
repnz
daa
lods
mov
dec
xor
das
xor
aas
addr16
daa
out
in
(bad)
int3
sbb
fucompp
pop
inc
cmp
outs
inc
test
dec
xchg
popa
jmp
outs
cli
add
xlat
dec
sbb
idiv
mov
fdiv
js
idiv
fimul
in
xor
int3
xor
jl
cmps
out
(bad)
cmp
mov
repz
je
inc
xor
mov
xchg
mov
pop
jae
rcr
setnp
ds
mov
inc
icebp
es
xor
enter
push
xor
pop
mov
les
jo
inc
ins
call
jo
or
lods
xor
(bad)
xlat
fadd
lods
cmp
push
inc
inc
cmps
inc
adc
push
gs
inc
call
movs
icebp
mov
ss
les
scas
dec
fwait
push
pop
jp
sub
push
sub
loope
ret
js
mov
or
xchg
loopne
test
or
mov
movs
push
xor
ret
sub
add
jecxz
and
jno
sub
repnz
cld
int
scas
mov
add
out
arpl
stos
xor
fbld
jmp
mov
and
outs
and
aaa
aam
xchg
ins
(bad)
jge
retf
or
nop
ja
adc
cdq
pop
lahf
das
sub
and
mov
mov
pop
xchg
fdivr
ret
popa
(bad)
xchg
(bad)
nop
inc
mov
das
fbstp
int
sbb
js
cdq
aaa
sbb
daa
push
sti
xor
ret
jmp
repz
jns
jge
sub
jbe
adc
add
mov
fmul
cmp
in
push
repnz
inc
dec
xor
dec
sbb
push
pusha
cmp
es
pop
hlt
add
and
cld
jg
shl
ins
call
ins
aaa
ret
push
jbe
cmp
and
mov
inc
inc
xor
imul
adc
and
xchg
ja
(bad)
in
mov
(bad)
or
adc
in
pop
idiv
scas
dec
stc
adc
cdq
(bad)
retf
push
pop
nop
ret
xchg
pop
ins
in
stos
and
mov
clc
pushf
cwde
nop
xor
mov
jmp
cld
jecxz
sub
xchg
cmp
mov
movs
sbb
cmp
addr16
stc
imul
jnp
adc
and
xor
cmp
xlat
cmp
setne
xor
cmps
cmp
aaa
imul
out
adc
lods
mov
push
retf
push
shl
jno
pop
aas
data16
pop
push
jno
rcl
repnz
dec
call
xor
and
mov
adc
mov
pop
call
and
in
mov
pop
pop
pushf
xchg
lock
push
out
retf
scas
mov
push
push
adc
(bad)
fiadd
aas
pop
inc
mul
mov
push
lock
xchg
popf
push
lea
xchg
pushf
or
lea
mov
ss
dec
xchg
and
pop
pop
cld
fwait
add
popa
pop
inc
(bad)
sub
jge
mov
mov
shr
xchg
pop
pop
mov
push
test
nop
mov
push
mov
ret
(bad)
push
or
repz
mov
push
sub
cwde
cmp
and
push
mov
clc
mov
push
loope
scas
sbb
fwait
rcl
or
and
push
rcl
test
inc
fcom
jecxz
lods
ror
inc
cdq
jae
ds
push
cmps
stos
mov
dec
push
cmc
rol
jns
push
(bad)
ror
sub
jecxz
xor
jp
std
inc
cmp
out
xor
call
dec
rcr
mov
data16
ror
dec
xor
int
cmps
fnstenv
push
mul
add
pop
inc
and
adc
jmp
push
mov
je
inc
cs
pop
xchg
mov
sbb
push
cs
popa
and
ficomp
fadd
push
enter
jae
std
scas
cld
mov
fsubr
fild
or
popa
fs
call
xchg
dec
js
pop
push
clc
push
adc
xchg
xchg
jae
fisttp
ins
repnz
pop
aas
mov
int
pop
jl
repnz
repnz
adc
scas
xchg
xor
dec
cwde
call
dec
(bad)
pop
inc
lds
pop
data16
fsubr
pushf
cwde
fisub
cmc
xor
jo
cmp
je
adc
loopne
jmp
inc
or
fisub
jmp
dec
out
popf
sub
lods
xchg
cmp
leave
pop
pop
dec
pop
mov
je
jno
mov
jl
xor
jno
push
xor
outs
retf
es
test
xor
or
in
mov
cmc
push
xor
sti
fmul
inc
ss
inc
or
outs
nop
mov
jne
mov
aad
outs
(bad)
fsub
lea
sbb
(bad)
jmp
jo
add
out
aam
iret
arpl
dec
mov
(bad)
imul
ret
mov
mov
sub
inc
imul
(bad)
cwde
cmps
xchg
mov
fstp
push
les
dec
xchg
pop
out
pop
aad
dec
adc
push
out
cli
shl
adc
sbb
mov
es
push
iret
cmps
push
mov
cld
push
bound
ret
cmp
test
repnz
pop
adc
jmp
adc
inc
(bad)
fstp
cmp
jmp
test
mov
add
shl
ja
aas
pop
cli
sbb
ret
pop
pushf
js
xchg
adc
xchg
xchg
push
push
mov
cmp
or
out
add
nop
jns
(bad)
push
stos
inc
add
push
call
scas
jge
popa
mov
idiv
mov
call
mov
mov
cdq
arpl
sahf
(bad)
cmp
ins
je
lock
push
es
or
iret
loop
push
inc
sub
and
or
repz
mov
repnz
or
jg
movs
jo
mov
push
sub
xchg
inc
push
ffree
or
es
adc
sub
ins
mov
test
aaa
pop
call
push
push
or
cld
or
int
(bad)
ds
pop
bound
mov
sub
pop
fisub
lahf
(bad)
dec
xor
stos
adc
lock
jecxz
imul
cmp
jp
mov
jmp
inc
cld
in
dec
mov
es
js
ror
sar
test
xchg
loope
jbe
push
cmp
pushf
push
xor
jns
out
les
dec
jecxz
ret
and
stos
mov
clc
or
cmp
loopne
or
xchg
aam
push
jmp
cld
in
std
mov
add
sbb
cmp
push
int3
cmp
inc
push
pop
pop
sbb
xor
cdq
movs
dec
ret
sub
(bad)
shl
or
es
xchg
cmc
call
xor
ret
dec
aam
test
add
out
xor
call
cmp
outs
jns
mov
call
ret
cdq
push
test
in
add
push
cmp
pop
loopne
dec
xor
cwde
data16
sbb
cmps
ins
jno
dec
pop
dec
ror
sahf
cmp
cwde
inc
test
mov
cdq
mov
in
dec
push
sahf
ds
pop
adc
movs
jb
pushf
ficom
adc
je
add
adc
mov
mov
movs
add
mov
xlat
adc
xor
sbb
mov
push
stc
ins
shr
bound
sub
xor
pop
aas
popf
add
lods
pop
and
fistp
jl
(bad)
xchg
mov
shr
imul
or
cmps
xchg
and
adc
adc
sub
push
jbe
inc
imul
lock
mov
mov
and
jle
mov
adc
mov
and
or
sbb
scas
xchg
adc
adc
jmp
pop
mov
call
inc
test
ss
xor
std
int
sub
jmp
and
mov
int
stc
sub
cli
jmp
fistp
out
ja
sub
xor
leave
lods
imul
stc
fdiv
xor
add
push
add
sbb
cmps
imul
or
inc
mov
js
test
pop
jmp
fwait
scas
sub
scas
pushf
xchg
xor
cld
jl
retf
cmps
pop
ret
enter
movs
sbb
jb
aad
(bad)
pop
jb
cmc
xor
lods
cmp
and
(bad)
in
popf
pop
fs
jmp
mov
push
inc
xchg
test
xor
into
inc
pop
push
inc
icebp
jge
mov
mov
inc
outs
dec
and
cmp
xchg
shl
je
lods
imul
push
mov
xor
or
or
mov
icebp
retf
psllq
aaa
cmp
(bad)
mov
mov
cs
pop
adc
xor
loopne
cmp
cmps
clc
add
imul
pop
xor
ds
xchg
int3
add
imul
cmp
(bad)
pop
cmp
mov
inc
sbb
xor
enter
gs
pop
out
out
push
sub
cmp
out
movs
jmp
jmp
test
sbb
inc
cmp
imul
cdq
jns
sub
jle
test
repnz
scas
and
mul
sub
mov
jge
mov
pop
xchg
mov
imul
scas
push
sbb
fadd
(bad)
hlt
pop
pop
jmp
scas
in
sub
jo
pop
pop
fisttp
retf
xchg
push
in
adc
cdq
xchg
ret
pusha
jg
gs
(bad)
aad
in
sbb
mov
mov
stos
mov
test
cmp
addr16
in
xchg
into
lods
pop
clc
(bad)
cmp
dec
js
and
daa
dec
aad
iret
shl
adc
js
push
pop
mov
adc
or
retf
or
and
adc
xchg
xlat
adc
ret
out
push
ja
mov
lods
and
sub
(bad)
mov
adc
loope
js
mov
xchg
cmps
mov
popa
sbb
call
inc
enter
fisttp
lahf
fadd
dec
push
mov
daa
or
inc
push
push
or
mov
fistp
fild
xchg
and
test
adc
pop
push
fdiv
and
mov
pop
pop
pop
mov
call
lods
xchg
dec
dec
(bad)
nop
mov
sbb
fs
mov
enter
rcl
fdiv
adc
mov
xor
pop
dec
push
(bad)
adc
sub
jmp
int
mov
and
stc
pop
(bad)
push
xchg
(bad)
sahf
cmp
mov
std
jg
daa
push
sahf
or
dec
jb
inc
push
and
or
or
mov
push
sar
rcr
cmps
in
pop
add
sub
bnd
mov
dec
aas
lods
lods
sbb
sahf
or
loope
xor
xchg
sub
stc
inc
mov
cli
jle
push
in
mov
cwde
in
fnsave
pop
idiv
push
mov
das
adc
mov
btr
fldenv
pushf
adc
push
mov
lahf
sub
jg
clc
test
leave
popf
les
inc
adc
jbe
cli
mov
and
aaa
inc
sbb
div
jo
hlt
std
mov
mov
lea
hlt
test
mov
aad
popa
jbe
sub
mov
push
push
test
in
mov
xchg
sbb
sahf
in
movs
and
fisubr
or
pusha
cmp
retf
jnp
dec
mov
cwde
mov
sti
popf
movs
jle
mov
push
xor
sti
mov
leave
ret
lds
pop
mov
pop
(bad)
fnstenv
or
sub
and
push
pop
push
rol
dec
push
mov
inc
jl
mov
jne
scas
retw
pop
lea
and
dec
ja
in
(bad)
xchg
daa
xchg
lods
sbb
std
das
jl
cmps
div
pushf
push
jb
stos
add
icebp
ficom
mov
xor
pop
adc
cmp
fadd
cmc
movs
inc
mov
call
hlt
xor
jmp
pop
pop
inc
push
and
daa
arpl
leave
sbb
in
cmp
int
push
enter
jl
mov
(bad)
mov
jmp
into
(bad)
pop
jae
cld
sbb
and
out
lock
mov
cmc
in
mov
push
xor
and
daa
adc
and
push
push
cmps
sbb
fld
xor
add
adc
or
adc
mov
nop
std
ss
mov
lock
push
xchg
js
xor
movs
js
adc
test
pop
pop
add
int3
dec
sbb
adc
or
in
inc
push
ffree
or
bswap
add
dec
nop
push
jno
fstp
inc
das
cmp
fstp
std
mov
jle
scas
sub
in
popa
pop
add
pop
pushf
pop
push
ret
loop
xor
cdq
xor
shl
inc
mov
cmp
mov
sar
dec
frstor
movs
sbb
(bad)
movs
test
cwde
cmc
dec
or
(bad)
xchg
sahf
mov
cmp
imul
repz
bts
iret
mov
inc
repz
cld
jo
push
clc
sti
jbe
dec
xlat
jmp
inc
jns
push
xor
jae
xchg
inc
imul
pop
arpl
int3
or
fsub
push
xchg
loope
out
jmp
(bad)
pop
xor
xchg
mov
sbb
fwait
push
shr
inc
adc
xor
jae
xchg
std
mov
jbe
aad
mov
movs
sub
enter
sub
fs
fidivr
in
mul
movs
outs
cli
fcom
mov
shl
and
cmp
sub
out
adc
or
and
ja
lods
adc
push
xchg
test
pop
shl
addr16
pop
sub
pop
sbb
xor
inc
test
push
test
mov
(bad)
jnp
(bad)
lea
popa
xor
sub
test
out
aaa
sar
mov
inc
and
stc
push
cdq
cmp
fnstcw
cmc
outs
rcl
and
fcomp
clc
cmp
hlt
cmp
and
xchg
imul
jl
dec
int
dec
int
and
sub
sar
cmp
icebp
mov
mov
shl
test
add
push
stos
mov
mov
pop
jmp
addr16
inc
add
mov
out
sbb
jmp
or
lds
in
shr
or
jp
pop
add
jmp
sti
dec
cmp
fdiv
mov
mov
stos
mov
cmp
dec
xchg
shl
icebp
(bad)
adc
rol
sbb
xlat
scas
pop
push
outs
xchg
and
inc
imul
(bad)
push
fwait
call
icebp
fist
mov
mov
mov
jae
inc
xchg
mov
xchg
imul
aaa
push
out
loopne
cmp
pop
pushf
dec
push
lds
shl
aad
xor
jne
ins
pop
jecxz
sub
xchg
mov
mov
cmp
fdiv
xlat
jmp
clc
pushf
push
pushf
and
mov
pop
push
and
in
sbb
jp
pop
cmps
popf
pop
aas
or
push
cmp
and
(bad)
push
pop
and
xlat
call
push
hlt
(bad)
sub
inc
out
add
imul
push
add
sub
popf
adc
fwait
mov
lods
test
(bad)
jecxz
xor
xor
call
jmp
add
and
(bad)
pop
sub
jbe
sbb
xchg
fnstsw
and
cwde
aas
adc
adc
cmp
movs
popa
push
xchg
in
and
test
xlat
jmp
xlat
push
add
mov
fidivr
add
sahf
xchg
pop
imul
cmps
adc
cmp
cmps
mov
or
xchg
ret
cmps
lea
rcr
mov
push
cmp
dec
sub
frstor
push
mov
dec
cli
mov
bound
int3
lahf
ret
lods
xor
stos
mov
xchg
sbb
(bad)
fxch
mov
jb
fisub
ja
jg
pop
xor
jae
dec
and
sbb
or
repz
pop
jmp
and
movs
mov
xor
hlt
xor
sbb
mov
cli
fs
sti
mov
aam
scas
mov
inc
std
jl
or
loop
lahf
mov
test
lahf
jmp
pop
xor
int
enter
outs
mov
mov
xor
pop
imul
xor
loope
mov
loope
bnd
xchg
dec
cs
jle
or
mov
push
imul
jne
or
push
jae
(bad)
xchg
rcl
aam
(bad)
scas
scas
jb
mov
addr16
mov
and
fidiv
fiadd
cs
push
sub
aas
(bad)
out
jno
jmp
sub
sub
and
sub
lds
mov
mov
and
ficomp
(bad)
pop
pop
jle
sbb
aas
or
pop
fs
pop
sub
fdiv
sub
push
(bad)
ret
cdq
cmp
movs
dec
sar
jbe
pusha
enter
mov
adc
jp
sbb
(bad)
lods
(bad)
hlt
iret
fprem1
test
jl
jb
(bad)
repz
jo
into
out
ret
ja
outs
sar
inc
xor
rol
bound
out
sbb
adc
dec
lods
mov
daa
repnz
lahf
inc
imul
push
inc
cmp
sub
xchg
cvttps2pi
mov
test
nop
inc
dec
(bad)
ss
(bad)
icebp
add
int
cmps
ret
cmps
dec
into
sub
movs
out
cmc
dec
aam
ret
mov
mov
mov
mov
jae
ffreep
mov
bound
clc
mov
pop
ss
scas
pop
ret
imul
aaa
mov
popa
xchg
xor
loop
inc
jle
iret
retf
mov
(bad)
xchg
jle
iret
bound
pop
xor
sub
cwde
cmpps
in
mov
mul
jmp
in
mov
loopne
in
lds
cmp
push
and
cmp
mov
sub
rcr
jecxz
scas
or
(bad)
outs
dec
xchg
je
stos
into
test
jecxz
pushf
inc
repnz
test
sahf
jge
dec
cs
movs
jp
xchg
stos
jns
pop
xor
jge
pop
retf
xchg
js
out
xor
cmp
icebp
movs
mov
call
push
out
test
xlat
push
je
cs
inc
fdiv
test
pop
or
call
mov
pop
int
xchg
stos
test
jae
cwde
and
das
adc
shl
push
and
xchg
push
jns
pop
loopne
add
or
and
enter
xlat
lods
sub
fwait
retf
jae
or
push
add
cmc
jb
or
sbb
retf
pop
aas
xchg
fdivrp
jmp
dec
(bad)
imul
push
push
inc
in
sbb
cmc
aam
xor
mov
fs
ja
add
ret
fsubrp
ret
pop
mov
ret
sub
pusha
xchg
je
jl
and
movs
mov
into
fadd
test
jne
push
loop
dec
push
inc
call
stc
jp
es
pop
cli
sbb
xor
mov
add
mov
lahf
mov
push
add
sbb
scas
ins
xchg
das
jl
fst
push
add
push
jae
fidiv
cmp
stos
popa
xor
jg
mov
mov
sub
out
and
movs
test
mov
xchg
xor
xchg
sbb
add
mov
inc
jne
jp
shl
xchg
push
(bad)
mov
cmps
sub
cmp
pop
jge
inc
idiv
cwde
pop
aaa
xor
jmp
mov
mov
dec
mov
mov
sbb
mov
add
jmp
addr16
outs
pop
fadd
jl
repnz
add
mov
stos
mov
add
sbb
fisub
push
mov
push
pop
or
push
cwde
sbb
xchg
xor
ret
lods
cwde
adc
stos
mov
or
cmp
mov
cdq
cmp
sbb
fwait
push
out
mov
pushf
sub
pusha
retf
loope
repnz
pop
jne
sbb
and
enter
add
cmp
pop
sbb
adc
push
fs
ficomp
mov
les
cmp
push
or
in
addr16
mov
cwde
mov
adc
jg
pop
cmp
sbb
pushf
shl
xor
enter
jo
shl
jmp
ss
shr
mov
paddsw
mov
es
push
xlat
xchg
sub
jg
nop
(bad)
dec
mov
ins
ret
cwde
xchg
xchg
icebp
fimul
clc
inc
pop
pop
call
cmps
rcl
lods
and
sub
fistp
fs
jae
repnz
adc
add
push
mov
repnz
gs
add
add
add
pushf
retf
hlt
add
pop
sbb
fld
daa
ins
in
pop
sub
cmc
pusha
push
dec
mov
dec
pop
cmp
inc
cmps
fnstenv
leave
push
xchg
add
push
cld
sub
or
loop
faddp
inc
cmc
aaa
mov
fld
leave
rol
pop
pop
cmp
aas
xchg
jae
xor
mov
(bad)
cmp
mov
jno
or
jnp
mov
or
mov
adc
dec
pusha
or
stos
mov
mov
(bad)
daa
sbb
(bad)
jb
dec
inc
add
stos
movs
stc
ror
mov
push
aam
mov
call
pop
enter
(bad)
pop
and
lock
mov
sar
mov
pop
out
cdq
pop
jb
xchg
jl
pushf
scas
shl
test
fwait
push
sbb
inc
add
add
lods
inc
imul
push
fdivr
push
dec
rcr
inc
pop
add
je
cmps
addr16
jo
push
mov
dec
inc
mov
ja
shr
pop
xchg
cs
xor
je
mov
xchg
push
ins
xor
je
imul
maskmovq
idiv
int
(bad)
cli
fwait
or
icebp
mov
aas
push
dec
popf
pop
(bad)
out
sub
(bad)
jno
dec
loopne
mov
jg
cli
pop
retf
hlt
mov
dec
and
pushf
pop
shl
dec
inc
jns
cli
add
dec
retf
and
or
sbb
pop
jg
ret
es
xor
shr
xor
call
mov
jb
fimul
int3
and
int3
cmc
pop
cld
xlat
xchg
bound
in
out
movs
imul
out
xor
jb
aad
xor
jbe
mov
popf
jl
xlat
mov
movs
arpl
aas
ficom
jecxz
cmps
mov
cld
dec
lods
mov
xor
sub
or
fucomip
push
popa
cmp
sbb
cmp
pop
pusha
shr
sbb
xor
sbb
ins
js
and
daa
js
dec
xor
outs
jmp
adc
inc
dec
loope
jb
pop
movs
(bad)
outs
inc
cmp
push
jnp
lods
sbb
mov
adc
loope
and
call
fs
add
mov
int
out
clc
jg
leave
xor
sbb
(bad)
dec
daa
xchg
stc
pop
cmp
aaa
xlat
retf
xchg
js
jg
xchg
sub
retf
mov
fild
push
popa
outs
fcom
std
mov
xor
dec
add
sub
sub
daa
add
test
push
adc
out
sub
xor
jp
les
dec
retf
leave
iret
adc
rcr
dec
add
iret
lods
pusha
jl
lds
frstor
and
jecxz
or
(bad)
rcl
std
and
test
xlat
aas
adc
cwde
jge
or
ret
and
lea
add
jge
sbb
mov
das
jle
cs
inc
aam
cmp
rcl
imul
test
jge
cmc
movs
mov
bound
pop
fadd
mov
mov
stc
cs
shl
adc
ret
xor
inc
inc
cmp
lock
push
jmp
push
and
dec
into
jne
movs
and
fdiv
mov
outs
mov
sub
data16
add
mov
pop
hlt
mov
out
xlat
iret
fld
sub
and
call
shr
sub
enter
repz
stos
sub
sbb
mov
(bad)
and
ret
sbb
xchg
in
sub
add
jge
lock
xor
pushf
dec
pop
fs
aad
mov
lock
fstp
jae
jg
pusha
sbb
fdiv
dec
out
mov
or
cmp
das
sbb
inc
fnsave
sub
adc
fistp
mov
add
rcr
xor
xchg
cmc
mov
loopne
sbb
ins
pop
repnz
test
jns
dec
cmp
in
dec
mov
mov
movaps
or
ss
loop
jle
push
out
fidivr
mov
push
int
cmps
aaa
nop
sahf
mov
xchg
pushf
sub
test
data16
xor
imul
fild
fwait
pop
jge
in
rcr
jle
cdq
pop
loopne
mov
inc
test
adc
and
lods
mov
cld
push
dec
test
ins
xchg
repnz
mov
leave
pop
mov
dec
js
mov
xor
inc
fs
xchg
xor
xchg
inc
(bad)
mov
popa
cwde
push
push
dec
shl
and
retf
sbb
jle
push
and
mov
xchg
test
sub
enter
sub
fsubr
iret
lahf
and
shl
into
jecxz
mov
ins
ins
mov
jbe
pop
push
mov
fsub
pop
jg
mov
std
sbb
ja
add
les
adc
cld
mov
bound
clc
lahf
outs
xor
adc
cmp
cdq
sahf
data16
jmp
mov
and
adc
xacquire
xchg
cmp
iret
inc
cmps
or
push
aam
sub
mov
fsubr
ss
pmuludq
adc
mov
ins
push
mov
data16
sti
dec
mov
mov
ficomp
data16
jae
and
enter
mov
mov
add
icebp
in
jmp
out
pusha
sbb
ins
adc
sub
dec
inc
rsqrtps
pop
sahf
xor
fbld
lahf
iret
dec
pushf
mov
test
sti
shr
(bad)
idiv
dec
shl
or
and
push
push
mov
jno
out
sbb
cs
mov
das
add
aam
xor
popa
ss
rol
stos
sub
inc
adc
repnz
and
mov
cmps
mov
cmp
push
adc
mov
rol
sbb
mov
xchg
out
sub
outs
(bad)
cmp
dec
cmp
jne
adc
sbb
shr
jns
sti
cmp
adc
fimul
jns
cmps
sub
(bad)
xor
ds
dec
pop
push
push
pop
out
adc
mov
scas
push
pop
sub
bound
sbb
out
pusha
lds
sub
cmp
xor
xchg
adc
and
jmp
adc
ins
hlt
add
imul
pop
repnz
retf
sbb
pop
lahf
dec
cmp
fiadd
leave
jmp
cs
push
push
xor
dec
add
cmp
mov
ins
ins
stc
cli
jecxz
test
into
out
cmp
mov
fsub
adc
pop
cld
(bad)
jne
and
pop
shl
xchg
or
imul
xchg
jo
sub
jne
gs
sub
add
(bad)
and
xor
retf
repnz
rcl
repz
fnsave
cmp
cmp
in
loopne
jecxz
scas
inc
cmc
ds
shr
cli
out
data16
pop
push
mov
pusha
or
nop
mov
mov
stos
mov
addr16
stos
lahf
rol
jecxz
dec
imul
add
sbb
sbb
js
mov
push
jmp
leave
push
mov
jno
xor
mov
lahf
xchg
xor
push
fisttp
mov
push
or
ja
lahf
xor
out
add
scas
inc
pop
aad
cmp
xor
call
xor
(bad)
sbb
dec
jb
retf
cmp
xchg
or
push
xchg
push
rol
sub
inc
in
iret
cmp
dec
mov
pop
adc
repz
jp
mov
jmp
mov
stos
xchg
loope
test
sub
(bad)
jmp
xchg
mov
jne
fwait
sbb
pop
fidivr
push
nop
xor
sub
dec
repnz
jmp
scas
fcmovnu
lods
xchg
xchg
xchg
out
call
arpl
mov
inc
push
pop
pop
and
aad
cs
pop
hlt
test
loope
mov
(bad)
int3
popa
xor
adc
jp
aad
pop
sbb
push
(bad)
arpl
pop
or
cwd
jp
xor
jmp
imul
loope
jno
push
mov
xor
pop
xlat
sub
fild
fistp
pop
sbb
lds
(bad)
sar
mov
out
dec
das
mov
arpl
loop
pop
dec
mov
stc
xor
mov
stos
fistp
cmps
fcmovbe
call
imul
ins
cmp
push
and
ret
inc
enter
xchg
shl
dec
sub
jmp
idiv
ja
dec
mov
cwde
inc
sub
pop
mov
push
or
fisub
std
rol
xchg
cmp
jnp
jne
pop
loopne
(bad)
fidiv
mov
cmp
jnp
sub
xchg
push
in
sbb
pusha
cs
out
pop
xor
mov
inc
into
mov
jmp
mov
or
lods
stc
dec
fwait
jmp
lods
pop
ja
in
push
cmps
mov
sbb
test
xchg
mov
dec
movs
sti
movs
mov
lea
lods
pusha
in
mov
inc
aam
int3
aad
jecxz
in
xor
pop
popf
cmp
das
mov
pop
pop
rcl
mov
iret
ret
loopne
xchg
out
mov
sahf
pop
rcr
mov
repz
lock
or
sbb
add
xchg
mov
mov
xchg
fcmove
mov
push
(bad)
ret
shr
pop
push
loope
test
repnz
call
cld
inc
mov
stos
mov
lods
sub
out
push
cwde
mov
jno
dec
jns
rcl
in
sub
in
ds
pop
shr
or
aaa
mov
dec
ds
mov
aam
or
mov
mov
inc
ror
enter
push
nop
mov
mov
push
jb
xchg
or
cli
aas
loope
jno
and
fild
mov
(bad)
movs
push
gs
adc
cli
mov
jg
jle
cmps
retf
adc
rcr
imul
ret
loope
loope
stos
movs
in
mov
mov
movs
fidiv
mov
imul
mov
mov
jg
cmp
fs
sbb
mov
xchg
sbb
jno
mov
push
js
push
ret
push
(bad)
aam
dec
cmp
sub
pop
jmp
iret
ret
call
mov
and
and
call
mov
addr16
jb
pushf
icebp
push
jnp
or
jmp
fmul
inc
les
(bad)
sbb
mov
pop
out
(bad)
cwde
sbb
dec
movs
lods
cmps
popa
mov
and
sub
add
jbe
rol
push
xor
test
mov
xchg
pop
adc
js
pop
cmp
stos
mov
fs
pop
(bad)
imul
push
fptan
scas
fstp
or
and
xchg
sahf
jae
or
in
mov
dec
sar
stos
hlt
adc
xchg
jnp
sbb
xchg
stos
fsubrp
es
jns
jmp
cwde
mov
mov
and
xchg
das
aam
cwde
fist
fcmovu
retf
sbb
(bad)
fstp
and
ins
cmp
mov
sbb
adc
fwait
mov
fisttp
call
and
enter
dec
bound
fcom
or
adc
mov
pop
mov
lahf
mov
test
fs
adc
inc
lods
mov
stc
pop
mov
pop
xor
jnp
mov
popf
mov
in
popf
xchg
fsub
int
sub
rol
in
psubusb
mov
adc
shr
cmp
cmp
push
js
mov
jne
dec
or
cs
cs
lods
enter
or
sti
cmc
mov
das
call
fiadd
jecxz
cmc
pop
jl
lods
add
jmp
inc
fdivr
cmp
outs
imul
push
push
imul
dec
mov
pop
push
push
add
rol
push
imul
pop
int
mov
outs
push
mov
xlat
fld
add
test
out
lea
ins
mov
mov
mov
pop
add
pushf
add
hlt
movs
pop
mov
cmp
adc
pop
cmp
jle
mov
(bad)
movs
cmp
xor
jge
cmps
cld
inc
add
mov
mov
fst
sub
js
cs
jns
xor
pop
jl
add
jb
dec
gs
dec
xor
adc
cdq
inc
test
add
mov
dec
sbb
mov
stos
fcomp
retf
mov
jmp
hlt
xchg
sbb
mov
pop
fsubr
mov
outs
std
daa
dec
pop
jecxz
adc
int
ss
fadd
cmp
mov
mov
jno
inc
add
popf
mov
subps
cmp
pop
aas
xor
cli
movs
or
(bad)
test
push
sub
fcom
fs
in
int3
fimul
sub
or
xor
jmp
push
sar
repnz
out
jbe
xchg
or
inc
or
ss
or
pop
hlt
cmc
pop
call
(bad)
push
xchg
jg
push
mov
dec
popa
lods
dec
call
nop
and
cli
or
daa
inc
mov
and
loope
mov
jno
dec
test
or
mov
push
xor
repnz
mov
and
sub
mov
icebp
jge
inc
aaa
cmp
leave
pop
repz
jle
inc
xchg
pop
fs
sub
sar
xchg
mov
loope
cmp
inc
scas
retfw
inc
rcl
imul
add
loop
mov
aad
jmp
adc
xchg
fs
shl
aas
sti
jp
test
or
sub
fnsave
pop
jg
arpl
mov
(bad)
mov
xchg
sub
or
das
or
movs
or
cli
into
push
jae
jns
mov
(bad)
mov
inc
lahf
fst
cld
std
fdivr
adc
jge
xor
sbb
cdq
sahf
jmp
rcr
leave
or
push
in
mov
mov
hlt
fs
fwait
outs
and
mov
iret
(bad)
jo
in
cmp
ds
ins
jae
dec
adc
mov
mov
sbb
fldlg2
int3
sub
call
sbb
mov
fist
fisttp
sub
adc
in
jp
js
xchg
and
adc
int
pop
into
push
mov
jmp
call
retf
js
xchg
pop
into
bnd
aas
dec
loopne
les
adc
out
mov
xor
xor
push
in
push
cmps
pusha
dec
into
mov
jo
push
pusha
bound
lahf
cmp
push
ins
popf
cmp
sub
inc
xchg
mov
lea
mov
add
add
call
inc
ret
pop
mov
xor
dec
jno
jmp
push
fistp
push
push
cmp
xor
push
(bad)
xor
xlat
and
xchg
movs
and
mov
push
cmp
ins
push
aad
adc
sub
rcl
push
xlat
xchg
std
xchg
xchg
test
int
adc
js
mov
push
icebp
cmc
pop
dec
jmp
mov
xor
or
jns
in
mov
inc
add
cdq
pop
scas
popf
popf
stos
adc
or
(bad)
mov
loop
iret
out
scas
mov
aaa
jg
add
or
daa
inc
push
add
and
in
inc
and
mov
rcr
clc
pop
pop
fstp
inc
aam
dec
push
mov
dec
scas
and
dec
fadd
loop
or
xor
icebp
loope
mov
ret
push
xor
in
test
mov
or
cmp
cmp
mov
sub
add
fwait
pushf
test
lahf
imul
adc
sbb
push
xlat
inc
in
loope
jl
movs
sub
or
xchg
iret
into
pusha
dec
aaa
retf
xor
add
lds
xchg
push
push
loopne
shl
shl
xor
push
data16
dec
das
mov
push
shl
sub
xor
xchg
out
pop
test
outs
mov
push
daa
outs
popa
jmp
dec
enter
sbb
mov
outs
jmp
adc
movs
jo
pop
call
(bad)
jl
inc
xchg
inc
mov
inc
cmc
imul
jns
dec
cmp
in
lods
cmps
in
es
in
out
and
mov
and
fwait
nop
cld
dec
mov
xchg
test
ret
out
outs
ins
mov
iret
loopne
sub
outs
rol
xor
pop
fisttp
xchg
cmc
and
shl
retf
jno
push
and
bound
inc
mul
call
mov
adc
mov
xchg
popa
mov
add
idiv
xchg
cmp
push
pop
clc
inc
out
pop
adc
xor
test
aam
in
xor
inc
jg
and
cmp
outs
mov
fisub
rcl
std
dec
arpl
ffree
cmp
mov
fisubr
dec
cmp
sub
adc
cmp
dec
rcr
dec
pop
psubusw
pop
and
stos
out
dec
icebp
pop
sub
(bad)
cld
data16
loope
pop
imul
pop
mov
addr16
cld
inc
push
cmp
ja
xor
out
retf
jle
push
fidivr
jmp
xchg
and
mov
xchg
xor
lods
pop
jno
xchg
aas
push
cwde
add
dec
dec
pop
and
sub
or
push
imul
mov
(bad)
retfw
mov
mov
xor
rcl
in
data16
cdq
test
in
add
cmps
push
cmps
rcl
or
imul
sub
in
and
pop
fwait
sub
ret
inc
int3
(bad)
push
and
mov
nop
repnz
js
inc
mov
adc
jbe
cdq
xchg
mov
fyl2xp1
cli
lds
adc
xor
scas
fdiv
or
les
daa
add
sub
pop
cwde
pop
inc
push
js
mov
hlt
jno
push
sbb
ror
cwde
test
xchg
scas
jne
adc
retf
pop
aad
or
mov
cs
lods
xlat
aam
loopne
sbb
inc
push
icebp
jns
sar
ret
xor
enter
dec
jmp
out
out
sbb
mov
das
mov
fisub
addr16
out
nop
in
inc
add
jnp
in
sbb
lods
in
ret
jge
mov
out
mov
mov
popa
pop
(bad)
outs
jnp
lea
pop
dec
in
es
xchg
iret
mov
push
pusha
mov
sub
jl
(bad)
fwait
sbb
stc
inc
mov
cmp
add
sub
out
in
xchg
xor
xchg
cmps
neg
sbb
les
and
ret
pop
and
and
or
arpl
loopne
cmp
test
scas
fadd
stc
shr
cmps
daa
xchg
fdiv
stos
push
and
cmp
mov
mov
fisub
ja
mov
xchg
addr16
loopne
adc
ins
push
mov
ds
rcl
mov
fsub
stos
mov
and
jne
imul
not
jns
cwde
pusha
cmps
mov
out
hlt
sti
pop
push
inc
inc
push
int3
mov
shr
mov
aad
nop
add
mov
mov
add
xor
xchg
repnz
stos
add
or
mov
adc
dec
test
sbb
fld
dec
leave
or
lds
mov
rcl
pop
inc
lea
mov
lods
fadd
lahf
mov
xchg
movs
cmp
cmp
jnp
xchg
cmp
mov
dec
or
sbb
pop
pop
add
sar
data16
xchg
test
inc
cli
push
movs
dec
cmp
mov
loop
add
dec
add
dec
rcr
push
sub
ret
adc
push
push
scas
(bad)
sahf
in
outs
pop
jg
dec
mov
sub
sub
in
icebp
fs
jns
mov
pop
and
cmp
pop
icebp
push
rol
or
jb
cmp
xor
inc
mov
xor
cmp
inc
xchg
sub
mov
xor
inc
inc
inc
fs
mov
dec
adc
retf
(bad)
pop
mov
mov
fidiv
(bad)
scas
stos
retf
push
jle
iret
retf
int
std
mov
mov
push
mov
je
ja
xor
fwait
add
icebp
adc
push
cmp
push
add
(bad)
jb
popa
cmp
sbb
push
dec
xchg
push
fdiv
mov
out
outs
(bad)
retf
mov
es
out
out
(bad)
std
mov
lahf
(bad)
cli
mov
sbb
adc
or
cmp
enter
add
mul
jb
inc
pusha
out
and
sub
ds
and
lods
sbb
repz
rol
mov
out
retf
scas
adc
jge
cmp
iret
lea
dec
(bad)
in
in
aam
pusha
mov
mov
das
ror
mov
cld
arpl
ss
xor
je
cld
lds
add
leave
aaa
mov
cdq
dec
or
test
inc
xlat
ficom
(bad)
repz
or
ss
push
(bad)
sar
les
pop
nop
xor
sbb
addr16
lods
les
sub
add
add
push
ins
sbb
push
cmp
sbb
mov
jb
and
and
icebp
adc
repnz
inc
in
xlat
in
mov
cmp
(bad)
adc
xchg
mov
xchg
in
jo
movs
(bad)
sbb
adc
outs
or
inc
sub
arpl
out
(bad)
jle
outs
fisttp
xchg
shld
add
or
sub
lahf
push
or
hlt
adc
adc
sbb
xor
in
push
push
xlat
sbb
stos
call
mov
sbb
sti
and
pop
in
fwait
sbb
and
xchg
stos
pop
(bad)
int3
cmc
adc
fld
jecxz
pop
call
mov
xchg
xchg
popf
mov
inc
aas
jge
(bad)
out
repnz
xchg
mov
or
stos
inc
rcr
cmp
icebp
fcmovb
adc
iret
pop
sub
aas
inc
sub
mov
mov
mov
xor
movs
shr
ins
jmp
mov
aas
inc
mov
xchg
rcr
and
stc
inc
mov
sti
sahf
out
(bad)
stc
and
mov
adc
inc
clc
retf
pop
mov
and
sbb
jbe
or
stos
inc
pop
repz
fstp
sar
jbe
xchg
dec
cwde
call
jns
xchg
inc
lahf
hlt
adc
aad
cs
push
push
mov
aaa
sbb
cld
loop
lds
jno
cmp
mov
ins
xor
jo
mov
inc
push
imul
mov
repz
sub
and
shr
rol
sti
loope
fwait
dec
gs
and
or
push
inc
mov
mov
int
pushf
ss
push
push
dec
jns
lahf
adc
fisttp
pop
int3
call
inc
or
cmp
and
inc
fimul
fcomp
push
cdq
ja
xor
sbb
out
fisttp
adc
cli
cmp
jp
jle
cmp
xor
sbb
adc
enter
dec
push
mov
ret
or
sub
add
test
loopne
pop
movs
fisttp
cs
sub
push
inc
inc
bnd
push
push
and
pushf
push
xchg
movs
std
ja
test
sub
mov
mov
shr
or
ret
jo
(bad)
repnz
test
lods
sti
pusha
pop
push
push
push
and
ds
lods
cdq
jmp
mov
rol
mov
cmp
fs
sahf
adc
and
cmp
fiadd
ss
mov
imul
mov
ins
cdq
or
ins
bound
or
lods
fst
iret
data16
lods
ins
aas
shr
nop
push
cmp
sbb
xchg
mov
push
inc
pop
mov
push
cmps
xor
lds
dec
and
pop
imul
(bad)
sbb
lock
shr
mov
push
sub
pop
into
(bad)
jle
cwde
test
outs
push
jp
ss
pop
in
add
or
dec
add
les
ins
sub
scas
nop
mov
imul
les
mov
out
sub
out
aas
shl
inc
or
adc
movs
into
ret
sub
imul
cmp
mov
sub
in
scas
push
and
lock
ins
push
test
ret
stc
nop
dec
popa
cli
push
sbb
mov
(bad)
imul
push
retf
int
retf
call
retf
arpl
push
sbb
mov
push
out
cmp
mov
das
push
das
add
fstp
daa
push
lods
push
out
out
mov
mov
in
scas
push
ror
aad
sbb
dec
int
push
mov
lods
js
aaa
mov
pop
mov
scas
push
sub
mov
jne
add
icebp
mov
push
and
dec
rcl
js
inc
jl
jbe
inc
mov
push
inc
push
jns
mov
pop
ret
jl
or
dec
fidivr
mov
pusha
aas
cmp
aaa
adc
enter
lahf
jbe
pop
jns
retf
clc
scas
inc
pop
loope
xor
in
hlt
pop
xor
stos
clc
cmp
les
dec
hlt
sahf
pusha
mov
jecxz
mov
jp
or
loopne
mov
inc
mov
xchg
aad
adc
scas
aas
aad
cmps
adc
mov
cmp
iret
cwde
lahf
jne
and
lahf
adc
ins
lock
into
gs
bound
pop
mov
jb
inc
shr
inc
sbb
enter
adc
hlt
pop
cmps
xchg
fstp
mov
sbb
test
rcl
cmp
test
pop
xlat
loopne
mov
sub
test
jle
cdq
mov
mov
and
and
icebp
jb
sub
out
mov
xor
pushf
in
popa
enter
mov
lds
out
mov
jmp
push
pop
adc
(bad)
ins
add
sbb
mov
jle
jae
xor
mov
fldcw
in
push
arpl
xor
(bad)
rol
out
in
enter
ss
push
jle
adc
push
sub
test
arpl
adc
test
js
jp
mov
jecxz
ins
jbe
jnp
cmps
cli
inc
mov
push
and
test
sbb
fs
add
rcl
outs
sti
fxch
cmp
in
mov
out
daa
jecxz
push
inc
jge
bound
mov
add
rcr
dec
in
jbe
fsubr
fs
stos
add
jp
fstp
mov
inc
mov
xor
adc
mov
test
cld
pushf
adc
pop
and
out
jns
jns
sbb
xchg
push
rcl
inc
fisttp
mov
cmp
add
pop
dec
mov
test
cmp
clc
xlat
mov
inc
retf
xor
lahf
(bad)
mov
je
inc
into
xchg
neg
jne
pop
mov
sbb
ins
xchg
pusha
int
push
movd
jmp
sub
mul
or
mov
mov
mov
in
sbb
stos
(bad)
cmc
sbb
xchg
adc
jb
sbb
jb
and
pop
and
sti
nop
cmp
jno
and
retf
stos
add
out
stos
das
stos
fwait
mov
sbb
lods
and
add
push
sub
nop
call
leave
inc
mov
ror
les
sub
or
loopne
xor
xor
cmp
(bad)
rol
xor
aas
mov
xor
cmp
scas
inc
out
in
(bad)
mov
jns
(bad)
(bad)
sbb
jg
inc
cmps
fsubr
aam
push
xchg
int3
push
fld
into
(bad)
les
xor
sub
add
in
shr
jnp
xchg
cmovns
push
paddb
cmc
mov
loop
clc
adc
rcl
cmovb
jo
test
xor
std
and
test
cdq
pop
loopne
xor
pop
mov
inc
fnstsw
pushf
popa
hlt
test
cmc
mov
mov
lds
sub
xchg
ins
push
adc
mov
jbe
or
icebp
cmc
cmps
leave
cmps
(bad)
aad
dec
loope
(bad)
icebp
dec
retf
enter
scas
pop
sub
push
sbb
mov
shl
test
jno
push
test
xchg
jle
ja
stc
sub
cwde
jae
and
shr
mov
xchg
std
adc
repnz
pop
inc
fldcw
in
daa
imul
scas
aaa
test
pop
and
fild
inc
and
ss
daa
pop
loop
adc
into
mov
shl
push
mov
leave
mov
add
mov
stos
adc
(bad)
jnp
xchg
sti
fiadd
xor
sub
retf
cdq
lds
add
adc
daa
arpl
mov
dec
mov
pop
xlat
cmp
xchg
(bad)
sub
(bad)
(bad)
mov
inc
outs
js
or
dec
mov
jmp
mov
pop
arpl
ins
sbb
cli
bound
inc
fadd
sub
movs
mov
sub
icebp
mov
fnsave
repnz
out
and
push
in
jns
or
and
sbb
mov
jg
popf
js
add
jnp
sub
xor
popa
adc
sahf
xor
push
int
add
mov
fmul
mov
ins
mov
mov
ret
and
nop
mov
sbb
ret
dec
pushf
mov
lock
test
or
popa
lds
dec
into
push
cdq
sahf
ins
cld
fwait
imul
push
dec
inc
aas
push
push
outs
jno
dec
xchg
mov
sub
jmp
mov
sub
icebp
sar
sbb
xchg
retf
pop
jbe
push
mov
mov
sub
mov
adc
int
mov
aad
push
sbb
adc
(bad)
sti
rol
push
sahf
pop
or
fwait
shl
retf
xchg
(bad)
dec
test
mov
icebp
cmp
popa
sahf
xchg
push
xchg
push
loopne
movs
cs
ret
jnp
shl
fild
lods
jno
dec
rcr
arpl
fild
push
sbb
ins
or
pushf
adc
mov
mov
adc
je
adc
push
dec
adc
jmp
mov
xor
(bad)
fstp
dec
rsm
sahf
push
or
out
cmp
daa
cs
and
add
push
call
ds
xchg
sbb
cmc
arpl
cmp
xchg
call
pop
ficom
or
outs
cmp
call
push
push
imul
xor
jno
adc
mov
cwde
lods
dec
xchg
test
push
lds
sub
or
add
mov
call
shl
jo
mov
cld
aad
push
or
movs
lahf
add
jle
cmp
movlps
pop
or
inc
push
xor
and
lock
lods
push
mov
cmp
dec
jae
fs
sbb
sub
inc
lock
cmp
adc
inc
mov
xchg
cmps
call
pop
push
xchg
imul
mov
popf
aam
push
imul
ds
xchg
out
(bad)
fisttp
jmp
stos
js
in
or
dec
lods
js
pop
clc
adc
jle
sbb
es
jbe
push
mov
push
or
pop
(bad)
fld
into
push
push
js
cdq
and
jge
ins
xchg
bound
out
sbb
cmp
or
jg
int
jmp
push
add
pop
imul
test
addr16
mov
mov
aas
outs
test
sbb
sub
xchg
inc
fs
in
xchg
add
fmul
pushf
stos
dec
popf
jl
daa
jg
adc
into
fs
rol
les
aaa
dec
les
sub
xor
mov
leave
sbb
imul
(bad)
sbb
aas
sahf
add
and
pop
out
inc
mov
inc
mov
cmps
jns
add
movs
out
dec
or
test
cli
ins
shl
add
ds
(bad)
in
sbb
aaa
mov
aaa
sub
inc
lods
cmps
push
mov
add
fs
ins
das
adc
pop
xchg
stos
adc
test
cmp
sub
mov
jae
push
sub
loop
in
jecxz
call
or
pop
popa
or
pop
mov
std
out
pop
bound
aaa
lds
mov
jecxz
jp
dec
repnz
inc
mov
jmp
pusha
in
inc
imul
inc
movs
jmp
std
inc
lods
xor
mov
js
je
fstp
test
jnp
fld
xchg
dec
jmp
ss
lock
lahf
xchg
mov
iret
retf
xor
push
enter
cmp
cs
or
mov
ds
xchg
sbb
dec
stos
cmp
and
sbb
out
test
cld
push
lods
mov
out
sub
jmp
std
rcl
xchg
stc
jp
push
jmp
mov
pusha
test
or
push
and
cmps
xor
(bad)
outs
inc
or
sbb
or
fcomp
pop
call
sub
jmp
push
or
ror
push
add
pop
cmp
(bad)
pop
loopne
mov
adc
add
jp
jge
jns
pop
pslld
out
pop
lahf
or
adc
sbb
jmp
sbb
sahf
imul
movs
sbb
out
in
adc
sbb
in
mov
sar
jp
jo
ja
add
lahf
xlat
(bad)
loope
jo
fldln2
cmps
cld
fild
mov
js
dec
lods
mov
adc
mov
pusha
lods
ret
and
xchg
jmp
pop
push
jno
ss
xchg
mov
movs
and
fist
mov
jno
shl
pushf
xchg
rcl
jg
dec
hlt
jl
sub
mov
inc
adc
in
cmp
xchg
inc
icebp
jae
xlat
add
addr16
or
rcl
fisttp
mov
jo
inc
cwde
ins
(bad)
out
xlat
sub
mov
xor
loopne
and
mov
or
mov
iret
and
inc
or
ficomp
test
or
jle
and
and
push
push
cs
mov
out
lds
mov
adc
push
push
push
adc
mov
sbb
lods
fisubr
ficom
or
rcr
retf
mov
sub
xchg
cmp
imul
call
fdivr
test
and
and
add
int
rcl
fadd
pop
pop
dec
sahf
fnstenv
dec
adc
retf
retf
in
inc
dec
dec
xor
movs
mov
push
or
ret
or
xor
out
pop
loopne
hlt
inc
or
movs
inc
fisub
mov
add
arpl
adc
mov
call
in
iret
mov
ins
cmp
call
cmps
std
and
mov
scas
lods
iret
popf
inc
repnz
popf
mov
sub
mov
cdq
push
push
jns
(bad)
fwait
mov
aaa
cdq
xchg
out
mov
repnz
shl
mov
cmp
loop
mov
push
das
vpslld
call
push
mov
cwde
mov
jmp
mov
fistp
jmp
hlt
add
movs
repnz
sbb
sub
or
stc
test
mov
mov
fsubr
not
fsubr
cs
xchg
pop
lods
fwait
or
adc
js
movs
pop
lods
lods
lds
daa
in
xchg
jmp
mov
pop
inc
xor
idiv
jne
data16
lahf
mov
std
jl
or
add
push
cwde
xor
fucomip
cmp
xor
iret
scas
mov
stos
add
std
push
ret
(bad)
jp
dec
cmp
lods
push
(bad)
ds
jns
stos
imul
retf
mov
popa
bound
sub
ret
mov
outs
pop
push
sbb
cli
data16
sbb
rcr
dec
jmp
mov
iret
loop
cdq
mov
jg
cdq
xchg
movs
test
in
inc
cwde
or
sub
dec
or
test
and
dec
sahf
inc
cmps
mov
mov
jo
lahf
aad
outs
or
in
inc
mov
pop
mov
mov
cmps
scas
cmp
ret
add
loopne
fcomp
inc
adc
cmp
adc
xor
ret
xor
lahf
jnp
js
psubw
push
shl
dec
jg
jno
in
call
cmp
dec
test
or
fist
push
push
xor
out
adc
cmp
inc
mov
(bad)
scas
pop
mov
repnz
adc
stos
mov
or
sbb
xchg
ror
add
jb
mov
xor
add
out
jae
sar
or
leave
mov
movs
scas
xchg
mov
imul
jne
sub
xchg
rol
jae
dec
in
pop
dec
dec
mov
ror
xchg
inc
fucomip
sbb
xchg
adc
int
movs
cmps
fs
aam
push
jge
popf
pop
faddp
pop
and
cld
pop
adc
mov
jp
scas
or
jmp
ret
add
add
add
std
fs
inc
push
jg
mov
pop
inc
lea
dec
ins
and
push
in
aas
and
sub
and
xchg
outs
jmp
adc
mov
xchg
or
test
sbb
loope
adc
das
outs
or
push
js
retf
cmp
fidiv
xchg
out
stos
hlt
stos
push
xchg
mov
int
pop
mov
jmp
mov
jbe
ins
in
sub
in
mov
mov
adc
mul
mov
ins
test
mov
cmps
lock
inc
mov
int
fdiv
jl
add
push
dec
bound
lock
mov
out
(bad)
jle
cmp
mov
movs
xor
add
shr
add
xor
icebp
lea
ins
cmp
adc
jg
pop
iret
mov
div
sbb
push
mov
outs
dec
lods
ret
adc
rcr
pop
xor
int
fimul
adc
adc
lods
sbb
and
call
pop
mov
dec
sbb
out
jne
shl
dec
inc
popf
add
cmp
inc
call
je
mov
adc
push
sbb
sbb
shl
mov
(bad)
inc
in
cmp
imul
mov
sahf
sub
mov
test
int
jnp
dec
dec
aas
ficom
mov
jmp
jbe
adc
int3
loop
inc
leave
cwde
sbb
pop
cmps
add
in
cmp
mov
mov
xchg
aas
pop
lock
inc
sbb
idiv
fdivp
inc
sbb
push
(bad)
fild
pop
aas
movs
out
jl
outs
fs
jns
mov
adc
mov
fld
ins
mov
xchg
xor
lea
pop
push
mov
push
mov
pop
fcmovu
test
jo
xchg
imul
loopne
jge
push
sbb
dec
out
es
mov
pusha
fiadd
lahf
dec
call
jmp
push
sbb
out
push
movs
loop
test
je
sub
jns
mov
mov
or
stos
mov
mov
add
mov
jbe
jle
outs
sbb
test
sbb
mov
sbb
imul
push
not
and
xchg
enter
or
adc
push
cmp
outs
inc
nop
cs
inc
jle
mov
lds
adc
jnp
mov
jbe
mov
add
or
dec
push
dec
es
fwait
add
xchg
loop
mov
inc
xor
aam
pop
popa
mov
gs
(bad)
pop
dec
inc
pop
test
jle
(bad)
fistp
mov
sahf
js
rcl
mov
data16
cmp
outs
add
jg
cmp
stos
sbb
mov
cpuid
and
push
das
adc
pop
fiadd
mov
and
sub
jmp
xor
(bad)
pop
xor
test
mov
mov
dec
or
sub
adc
into
js
fist
mov
cmp
mov
(bad)
out
imul
add
mov
fwait
add
push
js
push
fdiv
aam
out
push
push
sub
fsubr
sub
stos
cwde
fldenv
adc
jno
xchg
adc
enter
push
mov
scas
imul
dec
adc
push
xchg
retf
(bad)
jmp
adc
rcr
mov
iret
add
cdq
repnz
sbb
das
xchg
inc
mov
in
sbb
retf
inc
xor
sbb
jge
adc
retf
mov
test
sbb
push
and
icebp
mov
dec
xchg
in
lock
das
jge
mov
push
add
repz
repz
mov
xchg
pop
jne
inc
sub
mov
jge
stos
mov
ds
lock
test
adc
mov
pop
dec
(bad)
mov
and
push
loopne
leave
and
xor
pusha
dec
mov
imul
leave
pop
arpl
cmp
sar
adc
inc
daa
xor
xor
xchg
xor
xchg
jecxz
int
sub
mov
fwait
sbb
stos
push
rcl
xchg
push
and
mov
jmp
cld
test
add
mov
adc
jmp
loopne
dec
inc
or
test
fnstcw
stos
adc
aas
push
loopne
xor
addr16
inc
add
or
test
mov
pop
in
push
inc
ret
gs
neg
add
loopne
sbb
jmp
cld
jo
fmulp
nop
cmp
cmps
sbb
mov
jmp
or
mov
and
leave
loop
pop
pushf
xchg
cmp
mov
jmp
in
mov
in
sbb
dec
data16
pop
jb
cli
sub
push
div
movs
and
adc
xor
xlat
mov
lds
int3
push
cmc
fdiv
mov
pusha
xchg
jbe
xchg
mov
movs
bound
out
stc
mov
push
(bad)
lock
jmp
shl
test
outs
adc
sbb
xchg
or
cwde
out
fs
iret
loope
cli
pusha
call
mov
adc
mov
jecxz
out
cmp
xor
push
scas
sbb
mov
jne
mov
dec
(bad)
clc
idiv
cmp
fisttp
add
(bad)
or
lea
and
in
cmp
add
ret
out
jg
xchg
mov
fwait
jo
pushf
mov
mov
cpuid
or
call
arpl
iret
inc
and
push
stos
(bad)
jmp
mov
dec
iret
pop
or
push
xlat
aaa
call
inc
lds
mov
jle
repz
dec
in
cmps
push
shr
clc
add
(bad)
aas
xor
cmps
scas
cld
xchg
mov
inc
or
rcr
jp
(bad)
jp
adc
sbb
xchg
lock
jno
jae
or
sahf
pop
ret
inc
lahf
pop
sub
mov
mov
bound
mov
out
test
pop
cmc
sbb
pop
out
movs
test
xor
or
mov
lldt
mov
test
jg
je
mov
in
shl
out
xchg
loope
(bad)
aaa
imul
add
cli
inc
fs
cmp
pcmpgtb
xor
das
adc
sbb
sahf
cmp
cmp
pop
mov
out
push
inc
mov
clc
cmp
pop
(bad)
loop
sbb
mov
sbb
cmp
jmp
cmps
jae
push
mov
jnp
inc
mov
(bad)
shl
mov
mov
js
add
mov
repnz
pushf
and
iret
push
xchg
pop
popf
cs
out
inc
cmc
jp
mov
gs
call
pop
jmp
push
mov
cwde
or
popf
adc
ins
push
dec
cmp
pop
cmc
sbb
jl
call
xchg
ret
fwait
cmp
and
adc
gs
icebp
and
cmp
xor
nop
jle
jecxz
ss
fsubrp
and
mul
or
out
inc
sbb
jg
inc
mov
cmp
inc
push
lods
clc
cmp
xchg
cdq
les
dec
in
add
cld
call
stos
gs
sub
dec
xor
inc
push
loop
mov
jg
hlt
pop
cwde
jns
ss
repz
push
popa
sar
shr
std
movs
mov
mov
mov
lds
callw
jne
mov
pop
daa
sub
adc
loope
mov
sahf
ret
ja
shl
loope
sub
mov
int3
sub
movs
ins
adc
gs
call
xlat
test
xlat
popf
test
stos
inc
stc
pop
aas
cmp
popa
lahf
or
add
cmps
push
fcomp
bound
mov
jl
xchg
fidiv
movs
pop
int3
in
jl
adc
rcl
(bad)
fwait
dec
jne
in
cmp
cs
sahf
xchg
fcmovb
test
leave
movs
push
dec
sbb
xchg
pushf
push
fisubr
out
inc
lock
outs
xchg
mov
mov
call
jmp
dec
ret
push
dec
cmc
shl
sbb
push
out
pop
sti
jnp
xchg
(bad)
mov
push
sar
stos
daa
xchg
jmp
sub
shr
ret
xor
xchg
xor
xchg
cli
(bad)
aad
xor
sbb
or
add
jb
fidiv
aam
sbb
cmp
pop
fs
mov
out
aad
jae
mul
mov
add
in
adc
mov
add
xor
fwait
or
daa
imul
out
and
pop
gs
and
stos
xor
not
rol
in
cmps
and
push
sub
mov
pop
lods
push
iret
push
(bad)
ror
iret
retf
jns
neg
hlt
push
repnz
xor
out
pop
add
std
xchg
cmp
retf
sub
jecxz
pop
xor
aas
xchg
jmp
rcl
jo
fninit
cmp
into
or
repnz
retf
aas
cld
xor
dec
mov
sbb
ret
loope
mov
cmp
sti
pop
jo
jns
inc
add
push
outs
adc
stos
adc
loopne
pop
pop
lock
ret
fisttp
sub
rol
mov
adc
daa
arpl
les
pop
pop
dec
loope
sbb
stos
xor
cs
ret
test
imul
sub
js
jno
rol
ffree
das
push
mov
es
adc
repz
fild
push
out
and
popa
mov
imul
das
mov
or
retf
mov
jg
stc
jl
inc
je
repnz
scas
pop
or
inc
pop
in
mov
popa
sub
bnd
mov
cmp
xchg
mov
cld
pop
adc
push
jle
sar
cmp
sub
call
out
sub
dec
(bad)
xor
test
sbb
(bad)
out
sub
rcl
push
cmp
out
push
mov
cmps
fmul
fcom
out
mov
clc
pop
imul
cmp
mov
in
call
in
add
bound
jle
and
jmp
pop
push
stos
out
sub
push
(bad)
cmp
jo
fwait
sub
ss
sbb
leave
mov
rcl
add
mov
popa
xlat
push
mov
lds
(bad)
xor
test
lea
enter
pushf
cmc
adc
cdq
inc
stos
fadd
mov
mov
or
rcl
ja
sti
xlat
int
sub
aaa
jno
push
mov
or
stc
inc
pop
push
xor
add
jnp
popa
push
enter
push
sbb
xor
cld
arpl
clc
dec
xchg
mov
and
or
push
out
mov
xchg
xchg
in
out
pop
cld
addr16
test
push
mov
and
ret
inc
or
xor
jne
jle
and
sub
movs
push
nop
call
fwait
xchg
add
sbb
lds
inc
hlt
mov
xchg
jecxz
mov
mov
dec
fcomp
inc
iret
mov
je
or
mov
mov
adc
pop
inc
jno
push
das
movs
jb
xchg
pop
and
jno
inc
out
test
jnp
movs
xor
cdq
cmc
test
into
pop
adc
jb
mov
mov
mov
add
sub
(bad)
ins
dec
scas
and
sub
sar
mov
push
dec
and
inc
cwde
lock
out
sbb
and
std
jge
fcomp
test
inc
jnp
and
jg
imul
cmp
or
sahf
jmp
jp
bound
and
mov
mov
ror
push
scas
and
sub
fistp
inc
jge
fld
pop
inc
cmp
push
jecxz
cld
arpl
data16
lods
(bad)
mov
shr
std
adc
pop
mov
sub
or
push
test
pop
sbb
xor
test
(bad)
outs
push
mov
ror
adc
out
mov
jg
pusha
jmp
outs
push
retf
jnp
jnp
out
cmp
cmp
adc
cmc
pop
das
js
aaa
pusha
mov
das
mov
or
mov
leave
rcl
inc
pop
adc
sbb
adc
stc
into
imul
movzx
call
out
push
div
xor
add
test
pop
cmp
mov
mov
outs
lds
lds
pop
rol
sub
cmps
jo
inc
fwait
xor
lods
sbb
rcr
jno
call
sbb
int
loope
pop
cmp
dec
xchg
jb
mov
jle
xchg
in
test
pop
dec
hlt
push
outs
mov
aam
jno
outs
out
ja
jns
add
jg
cmp
repz
and
sahf
fs
and
xlat
dec
inc
shr
test
cs
rol
das
mov
pushf
and
mov
mov
mov
cmc
cmps
outs
xor
push
ja
and
mov
xchg
inc
imul
ret
test
stos
cmovl
in
cdq
pop
add
push
outs
out
push
push
jle
mov
(bad)
mov
jae
mov
push
fsubr
std
lock
retf
das
lea
sbb
cmc
pop
mov
mov
and
xchg
jle
xchg
inc
(bad)
cmp
adc
jns
mov
mov
test
imul
jmp
push
pop
movs
sar
stc
movs
jecxz
dec
xchg
sar
pushf
cli
push
or
jb
enter
add
outs
jge
dec
loopne
and
lods
push
mov
aas
or
mov
mov
mov
push
inc
aaa
jo
add
xchg
mov
cmp
inc
cmc
fcmove
test
int
movs
dec
jmp
pop
push
imul
test
into
mov
cld
js
or
xchg
fcmovne
idiv
xchg
std
imul
jg
into
dec
test
cmps
mul
shl
pop
(bad)
mov
popf
jmp
sbb
mov
(bad)
int
mov
or
pop
cmps
dec
ret
jns
loop
cmp
loop
sub
and
push
push
(bad)
(bad)
and
lea
repz
shl
cwde
ins
pop
mov
cmp
es
and
arpl
pop
cmp
fld
rcr
cmp
push
retf
fsubr
stc
dec
or
adc
out
push
cmps
and
adc
push
cdq
(bad)
enter
pop
or
lods
mov
pop
jp
mov
pop
add
xchg
(bad)
fmul
dec
push
repnz
stos
xor
and
or
xchg
idiv
fdiv
jecxz
ins
dec
movs
push
mov
jg
out
push
mov
ret
ds
cmp
lods
sbb
bound
and
xchg
jmp
xchg
push
jle
ror
push
xor
adc
arpl
test
mov
fld
and
inc
idiv
stos
and
jnp
mov
push
in
dec
add
sbb
jae
ja
out
popa
mov
lods
inc
movs
and
pop
stos
aas
jnp
stos
imul
jge
dec
jns
adc
int
inc
cmps
imul
add
dec
xchg
pop
cmc
mov
or
add
or
jge
pop
jno
and
out
out
aaa
or
test
adc
mov
ss
and
fstp
push
nop
out
pushf
inc
push
sti
dec
(bad)
(bad)
pop
sbb
mov
xor
mov
push
out
jns
jmp
sahf
mov
mov
pop
aas
push
cmp
mov
sub
dec
lods
call
mov
outs
je
std
xor
mov
xor
stc
outs
scas
enter
add
ins
cld
andnps
movs
nop
int3
add
sbb
hlt
xor
cmp
mov
mov
pop
sbb
and
fst
cdq
fdiv
or
retf
in
push
std
pop
ins
and
xor
cmp
xchg
mov
push
lods
scas
arpl
int
jl
jg
shl
adc
test
mov
int3
add
or
mov
dec
or
loop
std
mov
cli
xor
mov
dec
xor
test
and
push
mov
fadd
cmp
adc
jmp
out
in
adc
and
xchg
stc
mov
push
jbe
jbe
mov
cmp
mov
and
mov
sub
bound
test
jnp
pop
and
(bad)
(bad)
outs
je
pop
mov
arpl
bound
adc
push
add
or
leave
mov
push
std
bound
lods
push
cwde
cmc
adc
jmp
jecxz
pop
adc
or
pop
jmp
outs
xchg
(bad)
dec
in
and
cmps
pop
add
outs
lods
in
or
xchg
inc
mov
dec
loope
fistp
mov
push
cmp
in
fmul
jecxz
mov
jne
ret
addr16
(bad)
and
arpl
call
push
rol
es
je
adc
sub
sbb
mov
test
outs
call
bound
into
sar
ins
xchg
adc
xor
pop
mov
gs
aaa
mov
mov
pop
ror
into
inc
or
sahf
into
adc
mov
pop
add
sti
add
inc
fisttp
mov
leave
cmc
std
adc
rcl
pop
sub
aas
fisub
sbb
inc
jp
cdq
dec
inc
jp
xor
adc
dec
and
jle
push
scas
pop
xchg
pop
mov
sbb
mov
push
shl
outs
out
scas
sahf
jb
pop
fwait
scas
stos
jg
bound
bound
dec
sub
xchg
mov
sub
(bad)
and
jp
sbb
jg
scas
and
hlt
dec
pop
xor
inc
ins
icebp
mov
pop
push
inc
jb
ds
jmp
cmp
cmp
push
sub
cmps
ret
cmp
(bad)
fnstenv
mov
dec
int3
adc
xchg
jp
dec
test
ret
fld
xor
aad
jbe
cmp
xchg
jl
test
hlt
fisubr
add
ret
mov
in
cmp
cs
adc
mov
mov
retf
out
mov
dec
add
aam
scas
in
rcl
jae
or
push
sub
div
data16
adc
lods
mov
imul
or
jmp
movs
rcl
cmp
fcom
inc
sbb
sbb
mov
out
outs
sti
add
inc
cmp
movs
mov
cdq
js
js
push
inc
mov
cdq
arpl
pop
mov
(bad)
add
jg
call
adc
xchg
jmp
jno
std
daa
(bad)
rcr
adc
sbb
leave
xor
cmp
push
xor
mov
call
jl
movs
or
sbb
cwde
add
mov
mov
jmp
fwait
jmp
jge
xchg
pop
xchg
pop
jae
test
xor
and
adc
xor
xor
mov
lods
jmp
sbb
pop
dec
out
pusha
add
xchg
jb
cmp
out
pop
ror
xor
ret
bound
adc
sub
mov
adc
and
cdq
xchg
jecxz
mov
add
movs
mov
jo
or
out
and
mov
push
lock
test
fimul
leave
adc
push
push
retf
call
push
push
stc
ss
pop
sub
in
leave
das
adc
pop
mov
ja
into
adc
test
mov
and
aad
jg
pop
mov
xor
cli
push
inc
and
in
and
out
das
(bad)
ficom
stos
sub
nop
fwait
(bad)
cmp
ret
daa
jmpw
jne
rcl
ror
out
inc
push
sub
sbb
aad
dec
call
cmp
fst
dec
add
jne
jmp
outs
mov
dec
je
dec
test
dec
dec
or
cs
xchg
dec
addr16
mov
inc
das
mov
xor
aam
ret
mov
retf
sbb
mov
js
and
(bad)
das
test
sbb
rcr
pop
mov
retf
aam
jmp
and
lahf
dec
data16
jo
mov
jnp
mov
inc
mov
je
(bad)
aas
xor
dec
ficomp
xor
loope
ss
add
(bad)
scas
neg
nop
out
pop
xchg
cmp
(bad)
fistp
jnp
adc
mov
(bad)
fimul
adc
or
push
mov
pop
jl
das
in
aam
and
pop
inc
out
push
into
cmc
jne
repnz
mov
enter
mov
and
inc
jb
hlt
fstp
icebp
dec
fisub
jecxz
adc
inc
in
test
retf
fnsave
and
and
jecxz
dec
aas
sbb
(bad)
mov
fisubr
cmc
pushf
jg
lea
mov
mov
dec
not
add
adc
icebp
sti
repnz
out
xor
cmp
mov
cli
mov
mov
adc
mov
mov
ret
nop
or
jl
mov
jns
push
stos
adc
ins
mov
inc
cmps
retf
inc
(bad)
sub
es
jmp
cmc
pop
adc
dec
outs
aad
xor
inc
popa
xor
jns
mov
into
cmp
or
loop
xchg
sub
lods
jb
inc
xor
xchg
cmp
push
hlt
aaa
int3
scas
clc
mov
xchg
js
fisttp
in
sbb
xchg
and
sub
push
xor
cmps
cmp
in
cmp
jbe
add
(bad)
ret
fstp
inc
mov
sbb
ficomp
jg
sbb
dec
sar
addr16
in
push
in
fidiv
shl
data16
inc
mov
aad
push
xor
push
js
push
test
(bad)
loopne
or
cmps
icebp
dec
pop
push
fwait
sbb
loope
aas
dec
clc
adc
test
sub
dec
cmps
cld
add
jns
int
jl
das
(bad)
lock
pop
push
es
aaa
pop
outs
mov
scas
pop
js
movs
(bad)
push
add
inc
clc
or
adc
adc
aam
cmps
mov
push
xchg
ins
loopne
rcr
lods
push
jmp
out
(bad)
dec
jle
mov
cmp
stc
xor
dec
xor
les
test
frstor
jge
and
cmp
jp
fwait
add
cmp
mov
lods
pop
adc
popf
repz
jl
push
mov
inc
xchg
fcmovbe
mov
xor
adc
add
ins
movups
xlat
aaa
xor
stos
mov
loope
inc
mov
and
push
pop
inc
inc
(bad)
(bad)
mov
xchg
bound
sub
dec
push
or
retf
jmp
jb
test
(bad)
and
jno
push
xchg
mov
mov
inc
or
inc
aas
push
dec
loopne
xor
cmc
test
shr
rcr
pop
sbb
cmc
adc
mov
(bad)
jns
aad
idiv
push
inc
int3
sbb
in
or
inc
test
(bad)
pop
jb
shr
mov
test
enter
js
inc
push
pop
fwait
xchg
test
xchg
loopne
packssdw
mov
push
shl
push
lock
mov
ins
lea
fistp
pusha
popa
(bad)
ins
sar
cmp
xchg
sahf
xor
push
ror
arpl
cli
add
arpl
push
inc
bswap
clc
inc
daa
sub
adc
pop
hlt
mov
ja
inc
fs
test
add
les
adc
ficomp
enter
sub
and
jle
daa
mov
sub
or
adc
jo
pop
dec
shl
xor
imul
mov
icebp
test
fbstp
inc
mov
mov
add
je
call
xor
add
(bad)
sahf
es
push
pop
dec
sub
push
dec
xchg
fcmove
addr16
or
add
enter
fwait
xchg
add
scas
ins
adc
dec
mov
(bad)
mov
test
sub
inc
ret
mov
add
mov
sub
xchg
xchg
sbb
rcl
adc
repz
out
xchg
pop
outs
mov
lahf
adc
pop
and
out
bnd
call
mov
fs
and
ret
retf
bound
mov
adc
xchg
add
xchg
adc
out
dec
mov
mov
loopne
sbb
popa
xchg
jae
xor
ja
outs
retf
js
push
cmp
cmc
adc
test
nop
cmp
sub
adc
loope
lea
gs
rcr
xlat
mov
mov
push
xor
nop
and
mov
test
aas
enter
dec
inc
mov
inc
xchg
adc
jl
xchg
sbb
shl
int
aaa
or
xchg
push
ja
jmp
inc
jb
loopne
sub
data16
jnp
cmp
bound
(bad)
jecxz
mov
jle
int3
retf
xchg
scas
or
cmp
fiadd
jp
pusha
pop
dec
sti
xor
fldcw
test
fidivr
dec
loop
jmp
xchg
and
fadd
xchg
cs
jo
jl
mov
push
mov
dec
jmp
aas
sub
ficomp
retf
push
sub
xchg
inc
iret
pop
and
add
jne
pop
mov
loop
add
xchg
les
pushf
push
add
fwait
mov
push
inc
retf
dec
std
push
adc
mov
repnz
xchg
jl
pminub
test
jnp
mov
jae
mov
fidivr
dec
lods
fdiv
repnz
xchg
mov
adc
or
jmp
retf
cmps
cmp
pushf
jo
test
movs
add
(bad)
adc
popf
std
imul
cmp
jmp
jb
pop
rol
fisttp
aaa
xchg
loopne
ins
mov
out
fwait
retf
fisttp
test
sub
aad
push
fs
int
repnz
xchg
jne
mov
or
ins
stc
fisttp
enter
fcomp
mov
mov
stos
(bad)
repz
clc
push
xchg
out
sbb
das
mov
push
sbb
cmp
stos
and
pop
(bad)
push
test
je
ins
adc
dec
fsub
test
(bad)
movs
or
iret
xchg
mov
test
jecxz
ficomp
outs
xchg
jbe
pushf
pop
lea
mov
sbb
mov
hlt
test
mov
fbstp
imul
mul
cmp
scas
add
call
xor
sbb
in
xor
sahf
lahf
dec
xlat
or
mov
stc
in
lods
mov
dec
and
lea
mov
jnp
pop
mov
push
xchg
jb
jge
add
xchg
mov
fisttp
fmul
loope
push
mov
sub
push
not
mov
inc
jae
cdq
test
inc
sub
mov
hlt
xor
push
(bad)
mov
push
out
and
jae
cmps
repz
jno
outs
push
mov
in
jle
hlt
in
xor
cld
pop
and
xor
mov
pop
pop
scas
mov
movups
ins
jge
dec
xchg
fs
mov
out
jae
inc
test
pop
sub
test
pop
push
in
cmp
jne
adc
pushf
and
cdq
lds
xor
mov
cmp
(bad)
sub
cli
es
push
movs
add
sub
into
sub
mov
adc
out
add
ins
fs
jnp
je
dec
pop
scas
push
lods
adc
xor
shr
hlt
add
mov
clc
pop
stos
push
repnz
(bad)
out
mov
mov
ja
fxch
inc
and
xchg
push
push
fstp
in
ret
adc
jb
sub
mov
adc
jae
and
mov
mov
or
jo
ffree
mov
inc
and
lds
out
mov
lds
jb
fsin
adc
mov
lods
lods
and
stos
and
inc
jg
ins
daa
jno
sbb
dec
xchg
popa
cmps
sar
jno
jecxz
stos
sbb
sbb
sti
mov
sub
or
sub
mov
cmp
mov
test
xchg
imul
outs
xchg
inc
and
daa
pop
jl
mov
call
and
loope
fist
jo
stc
rol
shl
jo
add
rcr
fwait
scas
sahf
lahf
add
sar
scas
push
cli
dec
inc
xchg
pop
(bad)
jg
inc
push
jecxz
je
mov
jg
dec
aaa
lods
mov
mov
sub
jno
pop
adc
mov
or
ret
call
inc
cmps
das
stos
mov
inc
xchg
sub
mov
pop
popf
xchg
xlat
jnp
and
clc
xor
mul
sbb
inc
push
sbb
adc
(bad)
out
cdq
xchg
ins
pop
(bad)
out
in
and
mov
jns
ret
les
fistp
dec
pop
mov
iret
jle
jecxz
xor
push
xchg
fwait
sbb
fwait
pop
jl
leave
mov
mov
mov
fld
popa
mov
mov
data16
push
dec
repz
pop
cs
mov
test
ds
clc
cs
push
(bad)
push
(bad)
bound
push
push
fnstsw
lods
pushf
wrmsr
test
pop
popa
jne
nop
and
dec
jecxz
xor
or
movs
test
push
out
mov
pop
aad
ds
mov
xlat
sahf
mov
clc
ficomp
xor
add
sub
xchg
or
ds
push
pop
shl
sub
push
int
pop
mov
inc
mov
mov
inc
popf
dec
mov
int
inc
shl
mul
int
addr16
movs
pop
lahf
sbb
int3
out
mov
outs
add
(bad)
pop
lahf
ins
retf
hlt
call
mov
push
pop
test
push
out
or
mov
sbb
push
push
dec
pop
cmps
mov
xor
inc
sub
aad
das
(bad)
in
inc
inc
mov
fwait
call
inc
nop
(bad)
mov
lods
adc
push
pop
cmp
xchg
push
pop
xor
bound
or
into
cmp
sbb
in
imul
xchg
sar
mov
inc
jmp
jnp
jge
mov
movs
pop
aad
adc
enter
cs
mov
cmp
or
clc
outs
adc
mov
in
push
ror
add
test
jbe
clc
cmp
xlat
mov
adc
push
std
mov
pop
cmp
inc
and
push
mov
pushf
fldcw
push
sub
cmp
xor
and
inc
sub
das
ror
test
call
push
cld
(bad)
test
out
or
in
jb
test
arpl
cdq
sbb
xor
pop
or
add
xchg
out
pop
adc
jmp
sub
pop
xor
mov
cmps
or
je
(bad)
pop
ja
movs
ret
imul
pop
push
adc
shl
nop
mov
arpl
in
mov
sbb
aam
rol
jns
inc
add
sub
sub
sbb
stc
and
push
popa
rol
dec
push
sti
pop
and
sub
shl
in
sbb
lahf
fsub
imul
test
fild
(bad)
and
es
or
or
ss
mov
pop
lea
cmps
aas
movs
xor
push
data16
data16
out
test
cmp
mov
outs
call
jnp
addr16
pusha
mov
add
inc
add
out
das
xchg
call
sti
mov
repnz
pop
mov
push
cmp
pusha
test
test
ret
or
aas
and
call
jecxz
jbe
ror
popf
ret
jae
(bad)
data16
cmp
dec
test
jmp
pop
jg
mov
mov
cmc
push
mov
inc
ss
sahf
test
push
fldenv
sub
call
stos
retf
xor
dec
mov
loopne
fld
out
xchg
mov
jmp
aam
jge
xchg
xor
or
xchg
out
out
jb
daa
xchg
mov
inc
mov
mov
mov
cmp
ficomp
shl
jmp
das
(bad)
fstp
jg
std
mov
or
repz
xor
xchg
inc
mov
sub
ret
inc
aaa
xchg
dec
inc
push
je
int
nop
stc
fmul
stos
mov
adc
std
stos
push
pusha
ficomp
ffreep
pusha
cli
mov
(bad)
lock
fsubr
pop
or
cmp
loop
dec
jno
cmp
mov
inc
xchg
rcl
addr16
in
(bad)
adc
popa
enter
sar
inc
arpl
xor
push
add
pushw
mov
lds
push
xchg
rol
dec
push
ds
ins
ins
pop
lds
push
mov
xchg
imul
xchg
(bad)
enter
mov
xor
jb
mov
pop
call
xchg
mov
or
les
cli
add
sahf
test
mov
xchg
inc
shl
into
pop
movs
leave
jp
mov
xchg
adc
push
xchg
lock
pop
sbb
mov
jp
sbb
shl
gs
or
mov
xchg
xor
jmp
cmp
ds
inc
sub
loope
aaa
adc
mov
retf
fcmovu
lahf
fisttp
sbb
outs
mov
loope
xchg
push
iret
xor
mov
das
cli
and
enter
test
cmp
call
fdiv
and
hlt
pop
mov
into
rcr
mov
loopne
cmp
aad
out
jmp
push
dec
dec
cmp
sbb
repz
lods
stos
retf
mov
js
std
stc
push
loop
leave
into
out
shl
cmc
dec
and
iret
xchg
shr
outs
scas
(bad)
jmp
daa
cmp
fdiv
les
and
(bad)
jle
ss
jo
es
jg
pop
call
push
mov
test
dec
sub
into
or
enter
in
into
mov
adc
out
mov
mov
or
data16
push
cmps
or
xchg
ret
bswap
pop
inc
imul
mov
and
mov
and
cmp
add
repnz
add
lds
push
shl
shl
xchg
test
repz
mov
jecxz
fs
cmp
pop
aam
fsubr
dec
xor
mov
fwait
or
and
es
dec
in
pop
jmp
xor
int3
add
js
(bad)
fistp
xchg
ret
imul
mov
mov
jge
add
inc
xor
mov
sbb
mov
jns
xchg
or
jp
loope
sub
in
call
adc
xor
jge
sbb
sahf
cmp
xchg
push
jp
imul
add
push
out
xor
and
jnp
cld
ins
xchg
dec
addr16
fs
out
(bad)
sar
adc
popa
jnp
jne
dec
ds
std
mov
xchg
push
push
xchg
enter
push
je
stc
push
ret
pop
sub
cmp
movs
pop
jb
mov
xor
jmp
jle
scas
int3
iret
mov
pcmpgtd
mov
pop
mov
ins
test
jmp
ja
inc
jle
or
ror
shl
sbb
retf
mov
and
and
sahf
stc
jecxz
inc
pop
loopne
sbb
adc
cmp
dec
mov
pop
push
push
mov
nop
cli
dec
test
and
icebp
je
dec
pop
jmp
adc
shr
sti
or
cmp
sub
jae
ss
dec
(bad)
adc
xor
aaa
inc
inc
pop
push
ror
jle
xor
xor
dec
pop
loopne
inc
cs
mov
loopne
ret
pushf
xchg
adc
or
and
and
rcl
fidivr
sar
loope
es
jmp
dec
dec
sbb
(bad)
and
imul
sub
in
in
out
test
in
test
bound
enter
mov
cmp
mov
jle
int3
pop
inc
sub
adc
int3
scas
jae
mov
dec
pop
pushf
loopne
jl
mov
pop
inc
push
scas
call
fidivr
cmp
add
cmp
dec
push
cmp
xchg
cmc
shl
int3
inc
jne
repz
out
je
dec
movs
aam
fcomi
(bad)
and
lods
fld
clc
or
cld
add
popa
inc
push
(bad)
int
(bad)
(bad)
popa
jecxz
mov
test
and
jns
test
mov
popa
inc
fisttp
mov
dec
pusha
test
mov
(bad)
(bad)
sub
cmp
daa
aaa
neg
or
es
inc
outs
jns
sub
inc
dec
or
mov
repnz
jo
xor
push
dec
adc
and
jne
inc
inc
out
xor
jno
cmp
scas
cli
dec
retf
push
mov
pop
iret
inc
push
pop
test
xchg
mov
je
dec
pusha
arpl
cdq
stos
and
mov
adc
cmps
aas
loopne
dec
jne
mov
fstp
stos
xchg
repnz
sub
sub
loope
pop
cmovbe
ret
xor
xor
cmc
fistp
in
aad
call
or
fisubr
pop
sub
adc
sahf
enter
mov
in
pusha
add
(bad)
and
inc
adc
cvtpi2ps
out
sahf
pop
mov
mov
arpl
(bad)
xchg
mov
cmp
sbb
cmps
test
jge
stos
mov
stos
jne
bound
cmps
das
sbb
fmul
push
not
dec
mov
(bad)
mov
adc
adc
and
and
imul
enter
mov
movs
int
ds
inc
pop
push
mov
jns
adc
mov
scas
iret
int
jp
fwait
retf
inc
adc
fcompp
mov
jae
or
inc
fs
dec
leave
movs
sbb
in
iret
pop
jb
xchg
aam
stos
in
push
test
loop
loopne
or
cmc
push
loope
fwait
xor
xor
shr
pop
pop
iret
lock
jge
mov
lock
arpl
scas
mov
inc
mov
(bad)
fcomp
sub
imul
mov
add
inc
int3
(bad)
sbb
xor
(bad)
mov
or
xlat
xor
test
sbb
jg
push
xor
jl
das
gs
movs
push
retf
inc
push
repz
(bad)
pop
pop
retf
jo
cmp
jne
inc
or
push
ins
mov
inc
retf
xchg
pop
inc
iret
inc
ins
dec
jmp
call
js
push
scas
sbb
repnz
rol
add
adc
repz
inc
leave
in
add
shr
cmps
call
mov
cmp
push
or
inc
adc
leave
jle
or
xlat
callw
sub
push
xchg
dec
nop
sub
ror
cwde
lahf
mov
scas
or
or
pop
loopne
es
cld
and
fidivr
pop
ins
(bad)
(bad)
scas
std
enter
cmp
ins
fwait
xor
lea
lods
jecxz
les
pop
dec
js
add
pop
push
retf
adc
pop
js
add
or
(bad)
sbb
(bad)
movs
fprem
dec
aaa
(bad)
adc
sub
sub
mov
pop
(bad)
push
xchg
es
not
or
cs
imul
and
xor
push
mov
sti
mov
xchg
stos
mov
out
push
lahf
fisub
or
xchg
bound
jb
loop
adc
mov
inc
(bad)
fistp
mov
mov
adc
out
movs
(bad)
adc
dec
rcpps
push
stos
pop
cmp
gs
lds
or
pop
mov
or
call
(bad)
ret
call
mov
js
scas
ins
mov
in
mov
or
jl
retf
mov
(bad)
mov
je
mov
and
sub
les
div
adc
and
ret
outs
sub
dec
pop
in
mov
xchg
xor
loop
jnp
test
push
mov
mov
jae
inc
jmp
cs
or
rol
std
push
jb
mov
out
push
repnz
mov
outs
dec
enter
mov
inc
xor
fnstsw
aam
fld
xor
pushf
gs
cmp
sbb
mov
in
call
std
add
popf
or
sub
sahf
popf
xchg
push
(bad)
or
adc
sub
jnp
pop
js
inc
mov
and
outs
mov
out
adc
cld
cmc
cmp
and
dec
(bad)
data16
mov
cmp
inc
clc
sub
fwait
add
cld
dec
aam
mov
aam
or
pop
call
(bad)
sbb
xor
movs
scas
pop
and
sti
imul
add
(bad)
xchg
add
into
inc
inc
call
push
sub
push
xchg
add
gs
scas
mov
jbe
push
and
cmp
scas
and
cmps
stc
jg
ins
pop
ficomp
stc
pop
adc
out
cdq
jp
sbb
mov
dec
jo
adc
je
je
rcl
adc
sub
shr
jno
mov
in
mov
shr
cli
in
dec
and
mov
xchg
out
shl
mov
sbb
mov
sbb
mov
daa
popf
idiv
add
push
test
and
gs
loopne
adc
jl
leave
stos
pop
(bad)
popa
cmp
dec
push
es
sub
inc
int
sub
leave
gs
cmp
adc
jb
and
add
mov
test
and
sar
aam
je
ja
jnp
lahf
xor
jns
out
mov
js
ss
(bad)
sar
jl
push
adc
imul
call
ins
jge
fisttp
ins
ret
test
stc
shl
lahf
div
jecxz
xor
push
out
inc
sar
lock
movs
in
mov
sub
push
inc
adc
jg
arpl
push
jg
or
jecxz
fbstp
or
int
xlat
jae
mov
mov
mov
int
mov
mov
inc
in
fisub
xchg
mov
mov
pop
test
es
ss
repz
js
in
lock
inc
pop
shl
nop
cmps
jmp
xchg
outs
lea
test
lods
(bad)
xchg
xor
cmp
mov
dec
sbb
fwait
jb
in
or
scas
mov
test
movs
sub
test
pop
dec
test
int
mov
adc
retf
xchg
push
mov
lods
or
add
es
jo
or
jb
imul
std
scas
and
retf
imul
(bad)
add
add
inc
sub
mov
es
ins
pop
or
cmp
lds
pop
mul
jmp
out
leave
rcr
dec
rcr
stos
cmp
inc
or
sbb
cmp
sbb
mov
jmp
les
sbb
xchg
out
mov
outs
(bad)
fild
sbb
xchg
cwde
call
sub
fidiv
test
mov
dec
sbb
jecxz
cli
jns
pop
popa
out
outs
inc
and
mov
call
mov
stos
rcl
mov
sbb
push
movs
cs
xchg
es
pop
adc
pop
xor
pop
xor
arpl
test
icebp
xor
pop
mov
xchg
fcomp
imul
icebp
pop
add
in
sbb
lahf
mov
mov
in
xor
xchg
fs
add
pop
sub
jecxz
xor
sbb
out
dec
sbb
(bad)
xor
rcl
cmc
add
cwde
popf
stos
ins
fdiv
lods
mov
fld
pop
xchg
repnz
mov
sub
in
pop
inc
scas
cmc
mov
cmc
bound
sahf
or
add
dec
(bad)
adc
jg
ds
adc
call
push
xchg
imul
shl
mov
pcmpgtd
xchg
in
int3
dec
cmc
movs
add
inc
lock
mov
xor
jl
imul
in
ror
mov
mov
sbb
daa
cmp
xchg
mov
sub
loopne
fld
(bad)
pop
stos
js
push
and
imul
cmps
mov
add
(bad)
sti
xchg
dec
inc
push
sbb
outs
leave
and
or
push
call
mov
add
and
rcl
(bad)
mov
adc
sbb
sbb
xchg
(bad)
aam
cmp
in
dec
mov
mov
aad
mov
mov
aaa
out
test
hlt
add
adc
test
mov
fnsave
test
mov
push
add
jns
into
adc
mov
(bad)
mov
mov
jo
adc
add
mov
lock
pop
adc
push
test
(bad)
ja
mov
dec
bound
rcl
daa
iret
dec
jecxz
mov
or
retf
fsub
out
jnp
jo
aad
mov
pop
adc
lea
mov
xor
pop
pop
cdq
(bad)
add
in
mov
add
pop
push
scas
shr
add
test
je
bound
lahf
adc
clc
iret
xchg
push
sbb
out
add
mov
mov
xor
cli
add
inc
inc
or
dec
(bad)
xlat
push
and
dec
fnsave
mov
sbb
pop
inc
ret
ss
jns
push
mov
aad
sbb
xor
pop
std
cmp
xchg
sub
mov
push
cmc
scas
mov
sub
ret
sti
and
add
ret
addr16
mov
xor
pop
inc
cld
xor
sub
call
call
jecxz
arpl
dec
scas
stos
sbb
or
in
cmp
push
aam
or
add
mov
or
stc
out
mov
sbb
mov
mov
push
adc
scas
es
cdq
sub
jecxz
pop
aam
adc
pop
aas
add
test
jle
xchg
in
and
push
test
mov
push
dec
add
ins
push
imul
pop
sbb
not
retf
arpl
inc
mov
out
pusha
leave
add
sbb
mov
sub
popa
push
push
pusha
or
push
fadd
mov
push
jmp
sbb
ret
and
adc
rcl
add
jg
jnp
mov
mov
popf
add
cld
imul
inc
and
mov
xchg
in
pusha
inc
test
push
mov
fldenv
repnz
out
stos
adc
dec
jp
jmp
aas
jmp
xor
xchg
xor
imul
jg
jmp
dec
sbb
push
cmp
and
pushf
pop
in
push
inc
xchg
push
xlat
lds
lfs
xadd
gs
cmc
mov
push
dec
enter
fsub
jno
and
in
jle
cld
mov
adc
push
out
inc
adc
adc
(bad)
mov
sbb
jns
cwde
je
sahf
out
mov
stos
shr
push
or
lea
call
fdivr
cs
fiadd
js
movs
xor
adc
mov
enter
push
ds
add
clc
xchg
push
fadd
jnp
jae
cmp
popf
mov
push
pop
loop
dec
mov
inc
cld
mov
ins
out
(bad)
jmp
cwde
add
push
ins
rcr
(bad)
outs
inc
out
mov
loope
xor
xchg
mov
daa
mov
jl
sti
(bad)
cld
mov
dec
jnp
nop
jae
push
jns
adc
repz
pop
clc
shl
int
adc
mov
cmps
movs
shr
jnp
arpl
call
cmps
pop
sbb
jmp
iret
xchg
cmp
loope
fisttp
shl
repz
mov
or
or
mov
xor
inc
sbb
sbb
sahf
ds
push
dec
xchg
call
lds
ret
mov
and
cwde
and
mov
mov
cmps
dec
ja
dec
adc
mov
arpl
inc
cld
rcl
(bad)
hlt
gs
test
arpl
fcom
mov
cmp
cmp
fcomi
(bad)
mov
call
xor
pand
xchg
or
mov
imul
push
fs
mov
and
fidivr
or
fisttp
mov
jp
inc
std
mov
or
or
mov
les
mov
mov
fwait
gs
gs
enter
lods
js
ins
inc
sub
xchg
adc
jmp
hlt
js
cmp
retf
cs
mov
(bad)
test
dec
mov
test
gs
xor
fs
pop
mov
mov
mov
mov
dec
test
inc
ficomp
and
sbb
dec
xchg
pushf
ficom
mov
xor
cmp
enter
out
xor
neg
(bad)
dec
dec
sbb
pop
mov
mov
dec
icebp
mov
stos
movs
pop
test
das
pop
pop
ffree
pushf
xchg
lods
sar
jb
frstor
mov
or
jmp
cli
cmp
push
outs
clc
inc
loop
push
jg
shl
std
jae
addr16
arpl
es
xchg
sub
xchg
jo
mov
mov
jmp
sbb
sbb
inc
pop
cmp
or
lods
in
adc
lods
fs
test
or
retf
out
pop
and
std
inc
mov
rol
movs
fwait
je
mov
(bad)
fcmove
cmp
pushf
push
movs
jge
int
repnz
(bad)
mov
jmp
outs
sub
mov
add
inc
test
pop
add
ins
std
cmc
imul
sbb
mov
mov
leave
mov
call
sbb
test
xchg
mov
sub
add
inc
mov
dec
push
in
rcl
pop
pop
rcl
sub
js
mov
xchg
das
hlt
jbe
xchg
jl
xchg
push
mov
fwait
cmp
mov
mov
push
mov
mov
cld
aaa
sahf
shr
movs
enter
sub
push
mov
add
xchg
adc
add
push
inc
pop
fisttp
inc
gs
push
fs
pop
pop
mov
stos
mov
loope
in
jmp
xchg
and
cmp
inc
cmp
add
ja
pop
cwde
(bad)
or
cmp
imul
xchg
fimul
pop
in
pop
push
(bad)
cld
inc
jbe
pop
cmp
xchg
xchg
jge
pop
pop
pusha
mov
daa
arpl
test
inc
jmp
push
sub
sbb
add
test
add
xor
xor
push
clc
fadd
sbb
dec
xor
push
cdq
test
mov
cli
ins
loope
inc
(bad)
fst
iret
(bad)
pop
ret
adc
mov
sub
cmp
test
cmp
xor
mov
outs
pop
retf
aad
inc
jne
ret
adc
mov
cmps
add
adc
dec
loopne
test
inc
pop
push
push
mov
xchg
data16
scas
std
inc
jl
adc
aaa
outs
mov
lods
jbe
pop
in
or
repnz
mov
xrelease
iret
lock
inc
inc
adc
sub
les
js
mov
inc
les
jg
dec
cmps
ret
push
fs
mov
cmp
inc
sbb
nop
pusha
jp
cmp
add
xchg
enter
jnp
inc
inc
(bad)
xchg
(bad)
outs
add
or
dec
push
outs
add
mov
enter
stos
(bad)
fsubr
xor
jne
fwait
sub
aas
scas
in
xor
das
jmp
jo
push
mov
neg
dec
mov
sub
mov
pop
imul
out
pop
movs
cli
jle
scas
jne
xchg
adc
push
mov
mov
xchg
aam
mov
sbb
jne
sbb
inc
dec
add
xrelease
sub
stc
jp
leave
sub
ficom
xchg
in
sar
mov
movs
or
adc
sbb
aas
xlat
stos
pop
sub
shl
mov
das
(bad)
sti
dec
add
lods
dec
inc
xchg
(bad)
es
adc
and
in
fstp
aaa
xor
dec
add
aaa
fsubr
lods
cmp
aam
mov
sub
sub
cmp
ficomp
(bad)
lods
pop
push
add
mov
sahf
jns
movs
clc
out
xchg
or
mov
pop
int
int3
and
mov
dec
sbb
jecxz
mov
cmp
inc
mov
ss
push
test
ret
mov
dec
or
mov
and
pop
in
aad
add
adc
enter
icebp
iret
(bad)
or
and
js
xchg
pushf
xchg
int3
sub
in
adc
pop
and
sti
lds
leave
arpl
mov
xchg
xchg
sbb
sub
or
xchg
xor
(bad)
stos
xor
aad
mov
jg
lods
add
lods
out
xchg
dec
out
std
mov
pop
hlt
inc
shl
sub
mov
mov
jb
ins
or
and
sub
rcr
push
and
shr
inc
mov
loop
rcr
div
jno
aaa
dec
xor
in
and
je
pop
in
jbe
dec
shl
loope
call
mov
retf
cmp
pop
ret
sbb
push
ret
or
mov
std
mov
iret
push
aam
dec
imul
mov
lds
sub
stc
pop
(bad)
jmp
out
pop
xchg
daa
push
pop
sub
add
cmp
fimul
scas
cmp
inc
push
das
cwde
or
push
xor
mov
pop
ret
jmp
xchg
dec
fwait
mov
jmp
hlt
inc
aaa
sub
cmps
cmp
in
sub
loope
fldenv
fst
jg
adc
xor
shr
data16
outs
xchg
cmc
xchg
inc
aad
jb
es
mov
sbb
inc
add
inc
int
sti
mov
sbb
in
pop
shr
add
ins
rcr
(bad)
ins
pop
inc
push
cmp
fadd
fdivr
les
std
les
inc
mov
fcom
cwde
jmp
mov
stos
jg
(bad)
(bad)
aam
adc
out
shl
dec
fcom
lahf
xor
imul
push
(bad)
call
sub
sbb
adc
repnz
lock
sub
(bad)
sub
std
or
mov
lods
add
cmp
mov
push
adc
or
adc
push
in
jge
jns
push
cwde
inc
sub
scas
xchg
push
gs
sub
adc
sti
adc
push
clc
xchg
repz
mov
pop
ret
aaa
or
mov
or
shl
mov
out
xchg
ja
sbb
sub
adc
fnstenv
ja
add
movs
mov
data16
int
(bad)
pusha
cmp
(bad)
cld
pop
add
repz
rcr
jne
jno
std
imul
sub
adc
sbb
cli
movs
sahf
test
or
mov
rcl
lock
ja
jns
pop
jg
iret
ror
sbb
fsubp
push
movs
mov
pop
in
test
es
rol
cmc
mov
and
mov
repz
jne
mov
jecxz
xchg
jmp
jbe
(bad)
mov
retf
es
movs
push
dec
sub
js
adc
jbe
call
xor
movs
lahf
sub
stc
or
fwait
mov
pop
jo
sbb
add
test
jno
test
daa
mov
mov
sbb
call
jmp
(bad)
lea
or
mov
inc
xor
jns
pop
lods
retf
test
ins
cmp
in
cmc
fcmovu
mov
mov
xor
aas
mov
jle
dec
push
iret
sub
(bad)
iret
loop
out
enter
xor
into
les
aas
retf
cmp
inc
into
or
out
cmp
fdiv
sub
test
xor
not
repz
stos
mov
aam
adc
add
sub
rcl
das
add
lods
int3
cmp
and
lahf
pop
inc
std
repnz
mov
daa
inc
inc
inc
mov
enter
jg
lea
push
mov
les
mov
iret
fstp
test
aam
dec
test
xor
xchg
out
adc
jl
pop
rol
mov
adc
inc
enter
outs
imul
dec
xor
xchg
sar
add
repz
adc
dec
xor
ret
rcr
lds
scas
xor
cmp
mov
(bad)
bound
sbb
in
or
inc
outs
sub
mov
int
mov
stos
lds
jmp
cmp
jbe
div
mov
or
cmp
cmps
sub
int
and
xor
popa
push
das
jno
xchg
mov
(bad)
sahf
sub
xor
mov
jmp
fcomp
shr
mov
inc
inc
test
mov
sub
fwait
pop
jecxz
fwait
add
ds
into
mov
popf
cmp
jno
inc
ins
add
cld
gs
add
out
mov
and
cld
outs
movs
xor
or
aaa
mov
pop
(bad)
pop
popa
or
jno
test
push
out
lds
or
sub
mov
nop
leave
mov
bound
inc
aam
mov
mov
push
ret
add
int
(bad)
hlt
repnz
push
mov
cmp
xor
dec
sub
cld
inc
enter
jbe
push
ds
leave
jb
sahf
jmp
xchg
mov
and
xchg
shr
inc
in
call
arpl
fidiv
ror
cwde
fwait
fwait
mov
push
xchg
outs
sbb
mov
xor
dec
mov
adc
int
call
movs
inc
dec
mov
bound
aam
adc
sbb
push
fild
dec
push
mov
jb
add
sub
pop
or
aaa
arpl
adc
rol
sbb
jae
pop
out
test
mov
repz
shl
dec
outs
idiv
pop
cdq
test
push
sti
jb
mov
cdq
popa
sbb
cmp
adc
xor
idiv
jae
inc
or
je
xlat
dec
xor
hlt
jmp
add
jl
mov
jmp
ds
rcr
cdq
cmp
nop
aas
fist
std
mov
pop
loope
pmaxub
push
jne
neg
jbe
sahf
shr
jg
loopne
pop
les
cmc
add
sbb
xor
pop
xlat
mov
mov
push
ret
mov
and
sti
(bad)
cmc
mov
scas
ret
sub
stc
xor
je
push
repz
leave
repz
pop
inc
clc
mov
dec
mov
cmp
outs
adc
push
push
popa
push
xchg
jmp
repnz
xor
xor
test
ret
xchg
bnd
sub
jp
sbb
jp
and
sbb
scas
shr
push
jnp
repnz
je
bound
das
out
push
xchg
call
adc
pop
test
jmp
dec
cld
cwde
pusha
push
popf
or
lahf
push
add
xor
lock
cwde
ja
pop
jmp
setns
cwde
sbb
int
sbb
(bad)
data16
test
dec
pop
mov
mov
xchg
in
js
loop
or
sub
rcl
xchg
mov
dec
jge
sub
sub
cmp
sub
push
mov
mov
jg
xor
stos
sub
pop
and
sbb
imul
xchg
lahf
push
inc
shl
or
push
test
pop
je
pop
outs
ret
mov
outs
mov
shr
scas
leave
js
fs
mov
(bad)
shl
clc
push
xor
scas
push
cs
mov
mov
xor
ficomp
jo
clc
jg
adc
sbb
mov
pop
ds
xor
enter
sahf
cdq
ror
mov
(bad)
push
mov
daa
sbb
mov
dec
mov
jbe
outs
sbb
sahf
pop
outs
adc
push
in
jp
icebp
mov
jo
cmp
ficom
out
lods
(bad)
gs
outs
sub
dec
sbb
xchg
pop
push
push
sub
jle
pop
mov
cmp
popa
xor
sti
cmc
adc
outs
scas
inc
repz
sbb
fsub
mov
inc
cmp
call
jp
cmp
fnsave
arpl
sti
dec
cmp
sbb
mov
lods
mov
nop
dec
mov
loopne
fnstsw
jns
fldcw
js
hlt
jo
lock
ficomp
or
outs
out
aad
out
mov
test
mov
and
popf
int3
lods
xchg
clc
or
ds
sub
mov
push
xchg
aad
or
jno
xchg
adc
jo
mov
je
rcr
repnz
int
or
push
lods
lock
xor
dec
daa
jne
repz
ss
arpl
mov
std
popa
fisub
pop
ins
es
out
inc
(bad)
sti
push
pop
mov
ins
add
mov
lahf
mov
scas
sbb
and
and
add
stos
push
outs
and
cld
pop
dec
loope
cwde
movs
test
jne
daa
(bad)
push
mov
ins
push
test
mov
dec
fldenv
sahf
sub
retf
outs
inc
jg
sahf
mov
pop
dec
movs
add
in
imul
clc
mov
test
xchg
pop
and
popf
lock
xor
sbb
mov
cdq
and
stos
daa
jb
push
mov
add
add
and
cmps
pop
inc
mov
rcl
dec
in
stos
pop
xor
loopne
(bad)
lock
mov
mov
ds
test
cmps
lds
sub
pop
std
adc
fwait
add
jmp
test
push
jp
jg
jb
add
mov
add
aad
xor
and
mov
adc
test
push
fsub
ficom
mov
mov
mov
mov
dec
add
mov
push
fnstsw
aam
inc
stos
push
test
sbb
pop
sub
cmp
jnp
mov
ror
jne
hlt
or
sbb
and
mov
dec
(bad)
pop
popf
sub
repz
inc
aad
mov
xor
adc
dec
jae
add
ret
hlt
add
inc
stos
test
pop
das
push
lods
jle
push
call
call
jle
xor
or
pop
or
xor
pop
rcr
ds
enter
fdivr
retf
(bad)
jo
push
int3
stos
and
bound
or
stos
fistp
inc
sbb
push
xor
(bad)
in
dec
cld
mov
mov
mov
xor
fild
sbb
adc
add
add
icebp
outs
daa
sub
ror
loopne
xchg
dec
push
inc
add
mov
popa
dec
push
sbb
pop
add
inc
lods
xor
lahf
add
mul
and
inc
fwait
call
pop
cld
shl
repnz
push
in
repz
and
mov
ds
jo
push
arpl
test
das
imul
jne
jge
loopne
mov
jmp
out
and
xor
cdq
pop
and
pop
pop
out
push
ret
pop
push
jns
inc
jle
stc
(bad)
jle
mov
pop
sbb
or
or
pop
adc
dec
(bad)
jbe
sub
adc
xor
xchg
mov
adc
sbb
ins
stc
push
repnz
mov
(bad)
or
je
call
mov
icebp
fdiv
fiadd
push
xchg
retf
mov
pop
retf
in
or
jne
push
std
and
add
add
and
cmp
movs
sbb
push
mov
adc
push
arpl
cmps
cmps
inc
mov
imul
sbb
out
pop
mov
or
xchg
xchg
cmp
mov
idiv
pop
leave
jnp
out
add
jge
mov
fldcw
xlat
sub
xchg
xchg
cmp
enter
jae
mov
movs
ret
lock
push
lock
jmp
xor
sti
pop
ins
fs
(bad)
pop
add
jge
xor
shl
mov
add
adc
mov
pop
mov
cmps
xchg
pop
jg
adc
je
dec
xor
stc
retf
ss
pop
daa
push
push
lods
jmp
jmp
mov
loop
add
pop
into
sbb
dec
jmp
inc
cmp
mov
in
xor
push
int
and
rol
popf
jg
or
scas
mov
cmp
aad
div
push
cwde
mov
mov
xchg
jnp
adc
test
movs
(bad)
cmp
mov
sbb
add
jae
mov
dec
push
and
pop
in
adc
pop
mov
sti
xchg
mov
jo
add
fisub
movs
xchg
std
inc
out
ror
sbb
and
addr16
mov
dec
fidiv
leave
rcr
sbb
dec
jnp
ja
sub
cmps
xchg
scas
(bad)
int3
push
and
cmp
push
repnz
mov
scas
sub
jp
enter
xchg
push
xor
popa
cmps
cmp
mov
mov
mov
xchg
stos
xchg
shr
mov
cmps
jg
popa
push
mov
mov
add
mov
movs
mov
std
or
add
add
add
push
inc
xchg
in
int3
call
aaa
mov
not
retf
mov
jl
or
arpl
das
xchg
shl
xchg
jecxz
add
dec
call
mov
mov
in
xlat
adc
enter
scas
inc
xchg
cld
mov
push
pop
dec
jb
xchg
xchg
xor
mov
xor
repz
mov
mov
imul
or
add
xor
cmps
in
pop
mov
push
inc
sub
shl
mov
lock
push
xor
ret
hlt
and
retf
gs
sbb
sub
push
into
lods
les
gs
shl
cmc
out
inc
push
stos
scas
shl
push
mov
mov
pop
or
in
popf
push
jbe
jo
inc
jle
push
xchg
out
xchg
xchg
loope
sti
push
sbb
out
xlat
rcl
fcmove
dec
sbb
hlt
vhaddps
fcom
cmp
cmp
ror
into
xchg
fs
scas
ins
inc
(bad)
ret
mov
(bad)
or
shl
adc
cmp
xor
cmp
ja
sahf
das
popf
dec
paddw
fs
fiadd
inc
cli
pop
ret
xor
imul
ins
adc
sub
(bad)
sbb
xor
dec
sbb
mov
fldcw
adc
pop
repnz
jae
iret
mov
and
arpl
mov
cmp
adc
jecxz
(bad)
or
mov
mov
sar
push
jp
mov
fdiv
mov
sub
cli
push
dec
mov
lahf
cs
and
fld
aad
dec
mov
xchg
cmp
repnz
data16
sti
bound
outs
loop
and
(bad)
and
sti
mov
jle
or
fwait
sub
xchg
or
add
mov
dec
ins
mov
test
bound
jmp
out
xlat
sub
jo
outs
fimul
xor
and
jmp
push
jno
es
and
xlat
fmulp
addr16
outs
outs
mov
in
stc
daa
sti
mov
daa
shl
aaa
mov
in
xor
inc
dec
inc
xchg
adc
mov
scas
or
jne
fcmovb
(bad)
lods
xchg
les
jecxz
shl
enter
(bad)
dec
cmc
pop
adc
ins
pop
clc
out
rcr
add
push
int
test
adc
dec
jno
out
pusha
sbb
or
dec
test
fild
repz
jecxz
pop
xchg
mov
xlat
ja
cmp
leave
movs
hlt
push
lock
inc
pop
cmp
sub
adc
cli
inc
mov
xor
mov
jne
aaa
adc
or
sbb
retf
jl
and
jmp
push
out
inc
push
cwde
(bad)
fisubr
stc
mov
out
xchg
add
mov
(bad)
aad
sbb
in
out
push
aad
adc
outs
call
jnp
xor
push
sbb
adc
mov
mov
adc
cwde
mov
add
movs
outs
daa
mov
movs
inc
jg
push
in
mov
out
mov
and
pop
cs
push
sbb
xchg
sub
sahf
push
jae
hlt
mov
ficom
iret
es
sbb
mov
nop
pop
dec
ficomp
jnp
cmps
push
inc
call
or
fdivr
sub
cmps
cmp
sbb
daa
mov
pop
inc
add
mov
or
sbb
push
aam
xor
shl
dec
or
test
outs
and
lea
cmp
sti
mov
cmc
cmp
mov
ret
mov
icebp
push
sar
fdiv
sbb
cmp
jg
xor
jecxz
dec
hlt
(bad)
or
xor
jne
cld
or
pop
mov
mov
imul
pop
aas
xchg
pop
add
mov
jmp
lods
dec
popa
das
movs
enter
int
xor
dec
mov
(bad)
sbb
lea
ss
mov
test
mov
aaa
inc
sub
sbb
inc
xchg
int
xchg
stos
lds
inc
xchg
add
mov
cmp
push
mov
cmc
or
or
and
mov
mov
pop
jl
mov
fstp
test
inc
les
or
out
mov
dec
dec
mov
test
add
pop
mov
fdivr
mov
ins
ins
call
scas
imul
xchg
xchg
pop
outs
pop
stos
jg
mov
mov
cmp
(bad)
das
push
xchg
mov
mov
jo
call
jecxz
mov
or
dec
sub
jecxz
adc
popa
call
cmps
mov
test
outs
movs
and
bound
jp
adc
adc
out
cs
or
(bad)
cmp
lods
in
xchg
jmp
and
fdivr
out
pop
test
jbe
icebp
es
dec
cmp
pop
cmp
je
test
outs
jl
shl
push
mov
lea
call
adc
or
cdq
jle
mov
mov
mov
push
dec
(bad)
aaa
ss
repz
daa
mov
cmp
add
test
daa
mov
mov
iret
int3
vandnps
jge
out
jae
loop
je
add
fidiv
pop
push
pop
mov
loope
in
cmp
xchg
pop
lods
in
mov
cwde
sub
xchg
imul
mov
pop
inc
pop
or
push
and
sbb
jmp
enter
xor
cld
mov
add
adc
ja
cmp
sub
xor
push
outs
jge
(bad)
mov
shl
mov
mov
push
jl
cmc
sbb
ins
add
xor
out
sbb
mov
inc
cmps
push
mov
xor
sub
in
icebp
inc
jmp
inc
out
xor
push
rcl
(bad)
xchg
rol
sbb
fbld
sbb
ins
inc
push
or
xor
mov
enter
dec
in
shr
push
iret
dec
and
aad
xor
movs
jno
mov
ins
int3
push
inc
add
push
inc
sbb
push
mov
xlat
sahf
cmps
popf
sbb
cmp
rcl
test
scas
(bad)
les
shl
xchg
es
(bad)
cmp
dec
into
push
sbb
or
in
mov
push
test
pop
cli
jnp
aam
mov
stos
and
add
clc
or
jno
push
pop
fs
out
sahf
stc
arpl
ds
dec
les
(bad)
xor
mov
mov
sbb
mov
jb
test
repnz
sub
gs
adc
mov
out
sub
les
imul
pusha
ss
jo
retf
mov
dec
xor
inc
(bad)
jp
xor
test
out
pop
jecxz
imul
xchg
cli
xor
cli
movs
call
pushf
xor
adc
stos
inc
repz
xor
retf
mov
loop
jecxz
xchg
push
inc
ja
jb
sbb
dec
je
sub
jno
loop
sub
or
jle
sub
stc
push
mov
jmp
iret
add
dec
ret
retf
cmc
xchg
jne
push
xor
test
pop
push
cwde
or
jge
retf
push
int
mov
in
shl
xchg
jecxz
push
fld
frstor
stos
scas
push
movs
popa
fild
xchg
imul
leave
movs
ins
repz
inc
and
into
cmp
adc
packuswb
mov
xchg
movs
lods
or
mov
or
pop
jecxz
xchg
jae
or
pop
adc
inc
mov
retf
rcl
cmp
scas
stos
jb
dec
(bad)
lods
sti
loopne
xchg
dec
fisttp
ret
push
add
je
call
jbe
mov
mov
xchg
cwde
fbld
push
mov
push
cmp
dec
adc
neg
add
push
fidivr
dec
mov
rcr
cmp
xor
neg
xchg
mov
div
push
or
push
xor
sahf
aaa
fmul
jbe
test
sahf
fld
jmp
sub
mov
arpl
mov
in
std
dec
jg
pop
(bad)
cdq
fiadd
jecxz
dec
push
and
scas
and
test
outs
inc
pop
add
push
add
xlat
(bad)
aam
add
test
fwait
push
lock
adc
xor
retf
dec
jle
fs
fild
inc
push
mov
rcr
clc
add
mov
cmp
dec
(bad)
iret
pop
hlt
mov
push
stos
inc
adc
jo
dec
in
cmp
dec
stos
dec
adc
loop
jecxz
jle
movs
jbe
sub
push
mov
std
repnz
sbb
ins
into
retf
pop
push
pop
push
std
push
pop
pop
imul
jecxz
push
add
and
dec
mov
push
imul
jmp
fdiv
nop
dec
add
mul
cli
cmps
call
sar
addr16
ret
cmp
ret
mov
fsub
femms
xchg
add
stc
mov
jmp
sahf
fs
fwait
cs
mov
cmp
lahf
jns
mov
pop
mov
adc
or
and
imul
sbb
loopne
push
dec
test
pop
add
sbb
and
adc
xchg
pusha
lods
adc
mov
enter
movs
mov
pop
lods
mov
sbb
xchg
ret
inc
lds
(bad)
pusha
mov
(bad)
or
sub
das
nop
pop
inc
xlat
mov
sbb
inc
ja
mov
call
daa
retf
inc
inc
daa
fstp
(bad)
cmp
jnp
xor
push
(bad)
(bad)
sub
mov
xor
stos
pop
ds
test
xor
jbe
pop
(bad)
dec
scas
outs
jecxz
jno
je
imul
call
lods
stc
or
jg
sar
and
not
loopne
fsubp
add
add
jecxz
repnz
mov
adc
inc
movs
in
mov
out
and
out
pop
dec
jns
(bad)
inc
mov
arpl
xor
jg
push
loope
shr
dec
shl
fcomp
add
ret
mov
mov
shl
push
cmp
cmp
mov
arpl
sti
jns
mov
cmp
sub
(bad)
cs
les
sbb
sahf
and
pop
mov
xor
pop
stos
jns
(bad)
jbe
fwait
popa
inc
lock
jno
add
add
test
and
and
test
sti
jnp
jb
fs
inc
cld
xchg
fcomp
shl
cdq
sub
pop
jge
dec
inc
ret
mul
push
cld
adc
mov
test
movs
mov
rcr
mul
cmp
fild
dec
xor
(bad)
outs
shr
bound
jge
lds
mov
fs
test
cmps
jecxz
sub
fisubr
mov
lods
jecxz
imul
call
(bad)
mov
inc
test
lahf
xchg
aaa
inc
enter
mov
pop
imul
mov
movs
sar
pop
pop
fwait
pop
pop
or
add
push
sbb
loopne
and
lods
push
pusha
addr16
and
pushf
retf
ins
(bad)
cwde
ins
enter
jae
ins
add
shl
xor
fist
shr
rcl
out
pop
aaa
mov
repz
and
enter
es
loope
sar
jmp
stos
or
loop
add
sub
cmps
lods
retf
sbb
add
jl
push
add
pop
jecxz
xor
push
cmp
cld
(bad)
mov
adc
cmp
loop
xchg
(bad)
sti
sbb
and
and
call
out
mov
cmps
cmp
xor
cmp
outs
out
mov
loop
retf
maskmovq
jge
adc
or
ret
out
mov
sahf
ret
outs
pop
adc
sub
mov
push
sub
sbb
std
shl
adc
push
add
mov
ret
mov
enter
(bad)
lods
xchg
pop
nop
inc
sar
jae
cli
cmp
nop
pop
sar
pop
and
jno
xchg
cmp
jp
mov
pop
push
add
xlat
fs
adc
inc
or
sub
cmp
pop
iret
inc
lds
nop
adc
push
pop
push
inc
jmp
in
add
mul
push
clc
adc
cli
nop
push
jae
mov
inc
mov
(bad)
mov
repz
push
pop
mov
fisubr
cmp
mov
push
sbb
fidivr
pusha
aad
adc
inc
and
fmul
call
cmc
xchg
push
enter
jb
push
push
sbb
ficomp
ds
(bad)
iret
enter
mov
mov
fistp
xchg
adc
rol
sar
aad
cdq
mov
xchg
enter
xor
je
popa
sub
cmp
ins
lds
cli
(bad)
adc
aas
mov
jo
ins
cmp
adc
xchg
hlt
pop
shl
in
sbb
xor
xchg
sbb
movs
jp
out
pop
stos
or
or
pop
mov
loope
xor
mov
pop
inc
sar
mov
mov
call
aam
shl
sub
mov
mov
ins
popa
pop
xchg
cli
call
pop
sub
xchg
aas
push
aam
adc
inc
mov
mov
or
mov
scas
mov
mov
jae
ins
pop
add
test
cs
loope
dec
push
and
mov
sbb
leave
xor
pop
scas
(bad)
mov
(bad)
call
cmp
pushf
repnz
inc
cmp
xor
movs
jg
pop
mov
xchg
cmp
gs
add
jecxz
push
pop
cmps
inc
in
mov
cmc
and
mov
add
std
mov
fsubr
or
push
add
imul
fs
and
(bad)
js
loop
out
test
stc
push
pop
xchg
test
dec
out
xchg
pop
js
loop
scas
mov
pop
jbe
(bad)
ss
popa
call
sub
pop
add
stos
sbb
inc
in
mov
int3
mov
(bad)
inc
push
sahf
or
xor
mov
shl
jmp
pushf
popa
call
mov
cdq
shr
mov
jnp
out
cmps
loop
lea
(bad)
mov
popf
ret
inc
or
adc
push
outs
xor
nop
ror
cmps
jecxz
adc
mov
fist
not
bound
add
ins
xor
repnz
xchg
jmp
adc
jl
retf
push
je
mov
sub
in
ins
sub
ins
mov
test
sbb
mov
fisub
retf
jnp
or
push
xor
fbld
stos
ficomp
loope
push
xor
pop
je
and
iret
(bad)
in
dec
into
push
mov
adc
add
mov
das
ret
push
pop
xlat
cmps
das
retf
dec
adc
mov
retf
cmps
cmp
xor
mov
cmp
mov
mov
add
call
cdq
pop
jae
push
(bad)
sar
sub
fsubr
repz
cmc
add
push
aad
or
int3
jnp
(bad)
(bad)
jns
jg
clc
pop
sbb
push
out
fwait
out
jne
in
int3
xchg
cmp
fsub
adc
sub
sbb
jb
mov
mov
fstp
mov
mov
cmp
test
inc
mov
sub
pop
inc
xor
aam
addr16
sbb
stc
dec
add
sbb
fisttp
pmaddwd
xchg
mov
dec
pop
mov
(bad)
loopne
xor
sub
jge
push
inc
xchg
push
adc
in
mov
fcom
cmps
sti
or
sbb
nop
xchg
out
movs
fidivr
aad
inc
cmps
cwde
sahf
add
(bad)
in
dec
push
outs
cwde
ds
push
push
shr
arpl
aaa
aas
pop
stos
mov
dec
or
das
sbb
xchg
pop
cmp
xchg
pushf
and
out
xor
pop
push
sbb
pusha
call
mov
dec
mov
in
sub
push
mov
pop
in
pop
repnz
xlat
jmp
xchg
xchg
push
and
mov
push
xchg
retf
adc
dec
mov
push
mov
call
jle
xor
fldcw
outs
call
daa
xlat
inc
add
icebp
(bad)
lock
retf
pop
sar
jl
movs
shl
popa
es
stos
ret
movs
dec
loope
dec
push
push
mov
mov
popf
std
adc
inc
jg
neg
mov
int3
cmp
test
sbb
cmps
or
mov
sti
sbb
cmp
xchg
adc
xchg
call
movs
mov
xor
or
popa
push
jl
jmp
inc
inc
inc
mov
pop
bound
xchg
fnstenv
xor
test
mov
fwait
leave
pop
push
aad
std
pop
(bad)
cmp
ins
inc
lods
popf
scas
xchg
mov
stos
push
cld
cmp
pop
lock
xor
adc
or
loope
int
fmul
push
or
call
cmp
mov
xor
imul
movs
pop
cmp
and
push
ss
imul
xchg
repz
aam
pop
sbb
retf
gs
mov
leave
sar
and
or
jb
inc
retf
push
inc
jp
cmps
test
adc
fisttp
cli
fstp
sub
add
and
mov
sti
sub
cmp
mov
mov
js
and
call
xor
cmps
sub
pop
cmp
xchg
pushf
je
ss
jno
fucomip
add
ss
lea
stos
loope
iret
add
cwde
dec
mov
ja
cdq
fwait
push
es
imul
dec
popf
xchg
psrad
test
xchg
adc
jae
mov
push
cmps
pop
and
fst
repnz
mov
mov
out
icebp
xor
mov
add
in
ja
lods
xchg
add
not
jl
data16
cmc
mov
mov
div
ret
xchg
jae
jl
mov
push
dec
pop
add
popf
out
leave
mov
mov
add
xor
cmps
push
shl
dec
jg
nop
je
into
scas
or
(bad)
retf
aad
imul
push
retf
or
pusha
pop
inc
loop
cmp
jnp
inc
mov
pop
hlt
pushf
in
and
mov
call
inc
sti
adc
or
mov
movs
(bad)
pop
loope
shl
sahf
icebp
data16
(bad)
(bad)
ret
xchg
mov
movs
scas
(bad)
and
adc
das
retf
mov
mov
pop
aad
sub
pop
and
cmp
in
imul
xchg
xor
idiv
cmp
mov
div
jo
bound
out
fs
pop
ror
dec
(bad)
adc
outs
xlat
push
test
das
add
stos
add
stos
in
fldcw
pusha
xor
push
outs
sbb
inc
sbb
mov
mov
lahf
repnz
sub
lods
xchg
cli
mov
mov
sbb
inc
sub
dec
mov
xor
out
dec
cmp
imul
mov
repnz
xchg
pop
pop
fs
fyl2x
and
pushf
push
icebp
jo
sbb
inc
push
cmp
xchg
mov
adc
fmul
ds
sub
or
mov
retf
push
pop
pop
push
dec
sbb
adc
mov
scas
dec
cmp
push
test
rol
xor
test
call
xchg
gs
sub
jnp
xor
bound
ins
push
push
stos
pushf
jb
je
inc
dec
dec
cs
daa
mov
imul
leave
dec
test
cmp
add
stos
ror
mov
shl
sub
lahf
pop
(bad)
jp
sub
xor
sbb
aaa
jl
mov
jae
pop
dec
jg
xor
sub
sbb
pop
hlt
inc
cmc
repnz
jmp
xchg
icebp
test
loope
mov
and
inc
gs
fisub
cmps
sub
lahf
mov
cwde
pop
inc
fmul
dec
dec
mov
or
add
icebp
xor
test
(bad)
shl
leave
daa
mov
pop
or
sbb
push
out
inc
jmp
sbb
in
jmp
movs
dec
cs
dec
icebp
fldz
or
dec
loopne
xchg
icebp
xor
xchg
repz
push
cmovge
mov
mov
es
xchg
cld
icebp
jmp
cmp
ror
jmp
mov
sbb
sti
fwait
jge
inc
mov
sbb
xchg
or
sub
test
mov
jmp
adc
clc
js
or
cmps
inc
packssdw
movs
rcr
pop
ret
or
mov
pop
dec
mov
mov
lea
ja
(bad)
lock
pop
or
and
ret
and
sbb
cmc
aas
ret
jp
mov
test
test
xchg
or
(bad)
mov
stos
xlat
jmp
sub
or
cmps
xchg
jno
add
cmp
cwde
or
mov
mov
pop
pop
dec
sbb
jle
and
cmp
mov
aad
sahf
sub
push
in
into
rol
mov
and
add
imul
add
neg
sbb
push
ror
imul
inc
dec
mov
shl
pop
sub
sbb
cmps
jns
lea
aad
scas
fwait
mov
dec
sar
dec
adc
inc
stc
movs
adc
mov
test
les
sar
lahf
pop
dec
aam
xor
fnstcw
adc
xor
aaa
inc
jb
cmp
test
shl
ds
pop
xlat
jo
(bad)
push
adc
jo
dec
push
lods
lds
and
fs
and
test
mov
retf
adc
mov
dec
stos
sahf
cmps
cmps
add
cmc
test
and
inc
mov
pop
cmp
test
pop
fdivr
dec
sbb
push
pop
or
arpl
mov
daa
and
fdivrp
lahf
push
jnp
mov
mov
cmp
and
outs
mov
or
out
jns
mov
xchg
arpl
lahf
arpl
cmp
sub
push
mov
fsub
pop
mov
jne
cmp
repnz
and
test
dec
xchg
mov
fcom
addr16
(bad)
mov
push
mov
cmp
mov
add
inc
ja
popa
mov
movs
or
sbb
popf
aas
or
fnstcw
jl
ss
(bad)
(bad)
dec
sub
lds
push
ret
cmp
pushf
xchg
adc
sub
shl
or
mov
mov
mov
bnd
mov
leave
pop
mov
imul
cmp
inc
rol
xchg
leave
inc
push
stos
mov
lahf
xchg
jae
inc
pop
xchg
jae
and
scas
cmps
mov
retf
mov
retf
stos
popa
ret
inc
cmp
or
inc
add
fstp
test
adc
mov
dec
and
push
int3
jae
(bad)
sub
rcr
xor
xor
pop
mov
adc
mov
mul
fcmovbe
popa
jmp
js
call
test
inc
lea
mov
or
cmp
dec
sub
jns
or
sahf
jno
gs
adc
int
inc
cwde
mov
sbb
sbb
push
or
xchg
imul
jb
inc
mov
xchg
sub
inc
mov
jmp
gs
pop
repnz
clc
mov
inc
xor
nop
jmp
xor
loopne
fisub
ins
in
and
adc
ins
sub
or
dec
daa
jns
mov
mov
(bad)
fidiv
xchg
(bad)
xchg
jno
int
in
jb
sbb
lods
in
mov
cli
bound
retf
fadd
sub
aas
mov
adc
pop
ret
cmps
fbstp
mov
mov
div
pop
dec
push
test
xor
xchg
pop
mov
int
rol
cmp
dec
mov
(bad)
adc
and
out
pop
sar
and
shl
pop
nop
(bad)
xor
mov
pop
xlat
push
sbb
test
mov
sahf
or
push
and
adc
pop
fwait
inc
mov
out
inc
sbb
add
or
xchg
sbb
jns
add
pop
or
scas
jne
mov
nop
jmp
adc
jge
dec
xor
or
dec
push
mov
fcmovbe
hlt
and
sbb
lods
int
jae
xchg
pop
repz
inc
mov
xor
xchg
adc
cmps
add
in
popa
push
aam
cli
idiv
cdq
xchg
add
pop
ss
xchg
cmp
inc
and
or
pop
and
call
cmp
retf
mov
mov
mov
dec
mov
mov
fld
lods
fnstenv
icebp
call
fs
ds
clc
xchg
sub
push
dec
int
mov
mov
les
test
xchg
xlat
add
fs
fcom
sbb
xlat
mov
(bad)
mov
sahf
sbb
and
dec
stc
test
(bad)
push
stos
inc
jge
jae
scas
or
retf
add
push
popf
out
xlat
aam
aaa
jb
jle
aam
jmp
imul
mov
ret
xchg
ins
adc
imul
inc
enter
and
cmps
loopne
(bad)
fstp
aam
rcl
sub
add
(bad)
enter
push
dec
int3
mov
xor
or
sbb
push
test
shl
dec
adc
push
scas
(bad)
push
cmp
jae
cmc
and
(bad)
movs
sahf
adc
clc
pop
inc
outs
not
jne
retf
cmps
gs
rcr
jo
lea
xlat
jb
ror
in
daa
je
xchg
(bad)
xor
mov
mov
shl
inc
addr16
ins
xor
clc
push
scas
out
mov
leave
(bad)
out
push
push
sbb
mov
rol
stc
dec
push
push
cdq
sub
cmp
sbb
lods
jle
push
ja
xchg
aas
mov
gs
outs
sbb
leave
out
sbb
inc
and
je
ins
fcom
and
add
out
push
mov
into
mov
dec
push
out
test
xlat
pusha
sub
mov
stos
fs
ins
test
rol
(bad)
sbb
pop
mov
push
popa
mov
jb
and
cmp
push
setbe
neg
and
pop
rcr
repz
push
bswap
dec
jle
pop
inc
stos
js
mov
mov
jp
sub
lea
xchg
std
jle
xor
ret
popf
mov
inc
or
or
inc
pusha
jnp
dec
jnp
inc
or
push
add
sbb
mov
retf
int3
push
aam
jle
ins
pop
inc
jecxz
or
lock
inc
mov
cmc
ja
rcr
push
hlt
xor
push
cdq
mov
adc
sub
push
cmp
cwde
xor
jl
ret
push
xchg
pop
stos
sub
into
shl
ss
pop
bnd
sub
popa
fidiv
sbb
cmps
loopne
scas
fstp
ret
dec
ror
adc
cwde
cmp
pusha
loopne
lods
mov
imul
mov
bound
inc
shr
ret
cmp
adc
test
ins
mov
mov
enter
or
dec
lea
mov
int
ja
popf
sbb
movs
lods
mov
mov
dec
out
add
push
loopne
stc
push
cwde
cld
sbb
icebp
js
stos
and
dec
pop
retf
xchg
pop
pop
adc
sbb
pop
or
ins
push
xor
repnz
fwait
add
bound
adc
test
mov
icebp
push
rol
mov
push
shl
jnp
aam
xchg
repz
mov
jle
inc
fisttp
das
xchg
loopne
pop
mov
adc
test
dec
daa
add
fwait
mov
cmps
repnz
in
sub
adc
xchg
cmpps
or
cwde
dec
lea
push
xchg
sbb
idiv
inc
sbb
mov
push
lods
rcl
inc
push
mov
in
mov
lahf
js
test
ffreep
lahf
jg
lods
mov
pop
imul
(bad)
xor
sbb
(bad)
lods
test
inc
gs
adc
ret
in
icebp
xor
lock
adc
add
cdq
popf
fld
fwait
cs
push
movs
and
in
icebp
mov
adc
push
and
sbb
dec
scas
aam
aad
(bad)
sbb
push
adc
stos
pop
test
scas
pop
add
add
enter
xchg
jbe
outs
lahf
jnp
mov
call
jecxz
rcl
add
(bad)
sub
or
in
sbb
call
std
push
sub
in
xchg
mov
pop
test
pop
cmp
shl
sti
mov
ds
mov
xor
pushf
clc
push
sbb
or
cli
sub
dec
mov
test
outs
mov
cli
test
cmp
push
rol
cmp
jmp
and
and
rcl
mov
xchg
xchg
retf
xor
fsubr
cmp
jnp
test
lods
mov
dec
mov
rcr
cmp
lods
psubq
or
int
(bad)
xchg
aam
or
loop
cld
jle
movs
dec
pusha
cmps
in
mov
and
push
fist
pop
push
mov
add
int3
(bad)
jne
xor
outs
cwde
into
cmp
jg
inc
outs
and
shl
stos
repz
mov
mov
xor
add
gs
sbb
outs
call
imul
(bad)
add
jb
xchg
loopne
adc
add
(bad)
scas
push
in
ror
sbb
fistp
cmp
ret
pop
mov
mov
inc
int
fwait
push
pop
xor
add
sbb
leave
sar
xadd
aam
mov
sub
sbb
push
(bad)
xor
push
add
(bad)
jmpw
(bad)
call
pop
pusha
lods
or
shl
jne
or
or
mov
pop
test
dec
fcmovnbe
lock
lods
test
mov
mov
sbb
popf
xor
sbb
stos
repz
ret
jne
and
sub
mov
cmp
(bad)
inc
pop
in
mov
mov
xor
mov
rol
stos
enter
jg
sub
out
jno
sub
mov
sbb
in
cmp
sub
inc
ret
ins
jnp
les
ds
jle
sub
ins
nop
add
inc
retf
lahf
add
inc
pusha
dec
cwde
es
dec
js
sti
and
cmps
(bad)
pop
mov
je
push
xlat
cli
jg
xchg
leave
stos
sbb
xor
cwde
mov
cmp
call
iret
sub
mov
add
pusha
sub
xchg
dec
shl
cmp
or
nop
lahf
into
mov
lea
leave
out
div
adc
sub
cmps
jmp
xor
loopne
hlt
jno
cmp
lods
ss
pop
(bad)
es
jae
mov
adc
(bad)
in
in
outs
or
lahf
adc
push
test
(bad)
jg
push
sub
in
sti
xlat
sar
pop
adc
movaps
mov
lea
into
repz
std
pusha
adc
in
call
inc
dec
push
and
icebp
lds
pop
(bad)
retf
out
das
mov
pushf
push
ins
add
daa
pop
jge
mov
ins
mov
sub
out
imul
cmc
pop
ins
jae
mov
aam
add
cmps
int
pop
adc
call
sbb
adc
lods
sahf
in
mov
std
in
test
test
call
stos
or
scas
jne
shl
in
mov
push
test
cmps
loope
push
xchg
das
mov
enter
jl
lahf
pop
fsubr
push
imul
xor
jmp
les
shl
inc
xor
mov
adc
or
add
(bad)
or
movs
sub
jg
cmp
nop
adc
cld
mov
sar
sub
mov
stos
mov
mov
push
test
call
push
and
inc
push
pop
int3
cmp
sbb
push
cmp
xlat
mov
add
hlt
movs
pop
pop
mov
dec
xchg
lahf
arpl
add
push
sbb
xchg
adc
cwde
iret
ds
test
in
fs
jb
mov
dec
sub
push
gs
and
nop
cmp
ret
jge
repnz
cmps
jp
pop
sub
sub
movs
sub
inc
push
sti
or
cmps
das
jl
push
(bad)
fsubrp
sub
sub
pop
sub
into
arpl
movs
fs
cli
inc
popa
fstp
imul
mov
fs
xchg
pop
shl
push
rol
loopne
mov
iret
dec
adc
dec
pusha
push
push
mov
mov
leave
mov
or
int
add
mov
arpl
in
mov
xchg
aam
sub
pop
and
mov
add
out
lods
add
shl
mov
inc
or
into
mov
mov
in
inc
push
js
and
repnz
test
and
icebp
call
push
scas
cwde
mov
sub
cli
xchg
(bad)
cld
test
or
cmp
push
cdq
dec
jnp
ds
mov
xchg
(bad)
lds
xor
dec
pop
jp
mov
mov
fwait
pop
push
jbe
ss
adc
mov
idiv
test
aaa
dec
test
sar
and
jl
in
push
jnp
ins
in
mov
in
pop
mov
adc
pop
scas
ins
scas
jmp
jno
jge
movs
out
and
hlt
or
test
inc
imul
sub
leave
cdq
add
sub
adc
dec
mov
loope
call
or
arpl
fidivr
div
ins
fcmovnu
je
imul
jne
jns
fwait
ins
inc
or
mov
sbb
push
mov
neg
add
xchg
jmp
dec
or
ins
sub
add
mov
out
adc
aad
scas
jmp
inc
cwde
loope
imul
mov
push
or
(bad)
mov
inc
cmp
or
jg
xlat
aas
sub
add
inc
or
fld
cmc
xor
push
fnstcw
test
test
std
or
mov
popa
mov
adc
sub
popf
outs
call
ror
mov
mov
repnz
adc
mov
jne
jp
es
push
icebp
mov
xchg
call
sub
xor
repnz
sub
dec
pop
fst
in
psubd
add
sbb
adc
or
repnz
icebp
inc
xchg
bound
mov
sti
leave
push
mov
xchg
aam
adc
push
rol
cmp
mov
call
sub
mov
fist
mov
xor
mov
xor
and
(bad)
jecxz
push
mov
jle
mov
das
ins
bnd
stos
push
sub
scas
mov
dec
mov
xor
add
dec
adc
mov
outs
out
xlat
pop
pop
sub
xchg
mov
jmp
inc
rol
outs
movs
rcr
imul
lds
pop
mov
dec
fwait
outs
sub
loop
dec
and
jmp
adc
test
scas
into
push
ss
or
stc
sar
les
sub
test
jge
sub
addr16
fidiv
and
jp
loopne
push
ret
push
gs
mov
cdq
sbb
push
sar
mov
push
dec
xchg
cmps
aam
out
(bad)
in
inc
mov
xor
mov
jmp
jae
mov
bound
popa
leave
dec
xchg
pop
mov
mov
fild
push
test
push
push
xchg
mov
jecxz
enter
shr
jbe
leave
push
sub
mov
jle
lahf
popf
add
fcomp
jno
mov
movs
lds
push
into
adc
sub
mov
mov
out
lods
loope
loopne
mov
or
jns
pop
or
(bad)
maxps
outs
cmps
(bad)
pop
popf
clc
ja
pushw
sbb
in
ds
mov
in
and
jle
jb
pushf
pop
sbb
jl
mul
rol
sbb
cmp
push
dec
and
fiadd
aam
and
(bad)
and
aaa
fdivr
pop
stc
lds
ss
pusha
int3
shl
call
jle
jmp
rol
xor
cmp
cmp
mov
mov
dec
mov
mov
xchg
(bad)
add
xor
jo
repnz
mov
outs
std
mov
neg
test
retf
mov
mov
mov
jg
mov
and
xchg
xor
cmp
jno
inc
adc
sub
(bad)
sti
mov
cmp
mov
push
mov
add
in
pop
js
cdq
or
fs
ss
push
dec
inc
mov
aas
sub
inc
mov
mov
push
mov
dec
mov
out
scas
and
movs
fwait
xchg
mov
push
mov
idiv
ds
jmp
mov
int3
push
cmp
call
jae
xor
dec
inc
or
ror
add
mov
sub
inc
cmp
fmul
push
mov
and
leave
xor
or
jmp
push
add
fst
push
jo
lods
add
fldenv
daa
call
test
push
cmp
(bad)
cwde
dec
cwde
dec
add
sub
retf
(bad)
fcmovne
aaa
enter
xchg
add
mov
leave
pop
(bad)
jge
pop
mov
mov
inc
xor
loope
lods
aaa
lahf
jmp
scas
jge
ds
movs
das
push
fld
mov
mov
mov
test
xchg
xchg
cmp
pop
push
push
shl
inc
push
inc
add
cdq
pop
adc
push
adc
or
fnstcw
fwait
enter
daa
gs
call
xor
js
lods
pop
mov
xor
jl
mov
push
out
xchg
icebp
pop
cmp
(bad)
fidiv
mov
sahf
push
stos
cdq
mov
xchg
add
lahf
jg
jmp
adc
inc
in
mov
inc
ins
pop
and
jo
inc
in
out
ror
xchg
scas
lea
xor
add
xchg
pop
xchg
ret
jg
stc
push
dec
aam
popf
pop
mov
xlat
push
in
mov
aam
dec
loope
adc
mov
adc
not
push
xchg
xchg
loopne
mov
test
xor
xchg
or
test
and
pusha
xchg
cli
int3
sbb
sbb
ss
(bad)
fidivr
sub
in
cld
push
pop
lds
fmul
mov
inc
push
mov
fwait
dec
in
retf
mov
mov
imul
mov
pop
xchg
sbb
arpl
xchg
sub
mov
ja
std
pop
adc
js
or
cld
cli
push
out
or
add
out
in
outs
or
push
push
out
arpl
in
shr
jno
mov
call
or
jo
test
or
xchg
dec
pop
mov
popf
pushf
jno
xchg
add
loopne
loopne
or
xor
std
aaa
jecxz
xor
popa
ins
inc
out
adc
mov
dec
and
pop
and
push
stos
cmp
icebp
out
hlt
cmp
mov
dec
fwait
ins
push
stc
cmp
pushf
daa
xor
(bad)
mov
lods
inc
movs
xchg
mov
pushf
(bad)
pop
ror
jno
stos
mov
mov
push
rcr
fimul
stc
mov
push
push
adc
jp
jge
scas
rcl
call
xor
xor
or
dec
loope
and
nop
lods
inc
js
movs
lods
push
cmps
mov
es
(bad)
jnp
push
pop
mov
out
or
fiadd
add
mov
xor
and
retf
jbe
cli
push
or
test
xchg
mov
scas
stos
test
xor
sub
sbb
mov
jae
mov
ret
lods
les
and
and
pop
push
xchg
dec
push
mov
jno
jne
cmp
sti
pop
outs
xchg
popf
lds
push
mov
int3
stos
or
hlt
cmps
or
jecxz
fwait
and
add
int3
fwait
sub
out
pop
repnz
imul
icebp
mov
idiv
daa
or
repz
(bad)
aad
cmp
mul
loope
lock
push
pop
jo
sub
sub
(bad)
pop
cmp
push
dec
push
or
xchg
dec
call
std
ja
pop
pop
add
les
pop
stc
out
addr16
leave
out
jnp
in
jb
cmp
sub
fistp
imul
pushf
inc
fninit
mov
mov
call
xchg
push
prefetch
mov
push
xchg
data16
enter
jno
jge
pop
jmp
mov
push
push
popa
sahf
adc
mov
add
and
(bad)
adc
fsubrp
ins
ins
pop
std
bound
sbb
sub
adc
imul
out
test
cmp
sar
cld
shr
jmp
xchg
adc
stos
(bad)
fstp
cdq
mov
adc
mov
jbe
push
fs
arpl
xor
add
cld
sub
inc
cmp
or
inc
dec
or
scas
pusha
xor
jo
bound
das
es
jb
jmp
cmp
outs
pop
mov
mov
loopne
add
jb
mov
popa
loope
cmps
xchg
add
int3
push
pop
add
data16
xchg
and
push
mov
dec
mov
stos
ja
xchg
mov
xchg
and
int
in
jno
add
cmp
idiv
push
mov
lods
xchg
nop
clc
int
dec
sar
pop
add
cmc
add
jae
arpl
inc
fisubr
leave
pop
or
rcl
stos
rol
jl
ret
sub
pop
repz
in
bound
sub
sub
mov
xchg
ja
sar
pop
loope
or
push
leave
fwait
push
fistp
lea
ja
cli
mov
add
xchg
mov
push
or
loope
jne
push
aad
test
daa
or
inc
popf
mov
repnz
mov
ja
sar
push
jo
mov
lock
std
ret
push
mov
aas
ins
imul
in
scas
and
imul
jmp
xor
jne
test
push
clc
stos
fcom
add
ffreep
mov
std
fld
mov
inc
xchg
mov
pop
adc
rcr
test
xor
mov
rol
xor
pop
int3
cmps
retf
or
fdiv
data16
xor
rcr
ret
test
xor
iret
(bad)
aaa
dec
xlat
adc
adc
xor
adc
dec
add
movs
jno
sbb
cmp
sar
aad
and
aam
out
stc
mov
scas
or
mov
inc
and
mov
xor
pop
stos
inc
ror
xchg
ror
xlat
inc
retf
loop
hlt
mov
mov
dec
push
xacquire
or
jnp
dec
mov
sub
pop
ret
shl
pop
lods
test
push
lahf
and
inc
push
mov
and
aas
push
and
ret
pop
adc
push
push
push
cmp
cmp
adc
pop
xchg
idiv
adc
dec
cmp
and
fimul
outs
pop
sbb
test
pop
mov
cmp
mov
ss
sti
dec
dec
mov
(bad)
shl
outs
cmp
retf
sbb
sub
jbe
fdiv
lds
repnz
daa
daa
add
adc
aas
add
mov
xor
aad
lea
and
push
dec
icebp
scas
cmp
jg
enter
cmps
add
jb
xor
pop
push
repz
adc
adc
stos
jb
sbb
leave
icebp
cli
sub
es
xchg
loop
sbb
dec
xor
je
mov
mov
aad
push
pop
dec
mov
(bad)
jmp
clc
pushf
lea
xchg
fmul
push
out
shl
mov
scas
jbe
fcmovu
push
in
jnp
mov
inc
scas
js
pushf
jl
push
pusha
mov
adc
nop
push
cmp
lahf
das
mov
lods
jge
cmp
sbb
mov
scas
push
lea
and
xchg
imul
stos
fnsave
dec
lods
ror
rcl
jge
inc
sbb
into
repz
clc
xchg
hlt
cdq
mov
js
in
les
aad
mov
xchg
push
cld
xchg
stos
addr16
loope
fwait
mov
adc
mov
sub
popa
daa
mov
int
mov
push
pop
sub
mov
push
or
jl
je
dec
push
fcomp
pop
pusha
fisub
dec
int
jb
sbb
aaa
loope
addr16
fwait
jo
pop
pop
xor
gs
jns
lahf
jecxz
pop
movs
rcl
shr
(bad)
and
push
inc
hlt
sbb
loop
sub
rcr
mov
add
jno
sub
dec
jnp
jno
jecxz
jecxz
test
mov
lock
fwait
jecxz
and
dec
mov
inc
push
sbb
pop
ds
mov
test
jl
test
mov
aaa
nop
in
stos
sbb
fbld
outs
test
push
sub
jo
jp
and
or
inc
sub
fs
cmp
das
dec
mov
ret
and
sbb
hlt
jg
loopne
(bad)
cmp
or
adc
enter
add
and
retf
cld
xchg
cmc
and
pop
stc
shl
stos
enter
lea
sbb
mov
test
retf
fsub
sub
or
xchg
mov
add
retf
imul
inc
and
(bad)
sub
mov
xchg
cmp
dec
xor
sbb
lods
xor
arpl
mov
fwait
dec
mov
lods
adc
push
call
push
enter
pop
retf
movs
sub
das
aam
les
in
lahf
push
fcomp
mov
xor
loopne
sub
jns
mov
cdq
mov
lea
inc
adc
and
mov
pop
ret
movs
inc
add
jmp
arpl
cmp
stc
inc
scas
gs
rcr
(bad)
(bad)
mov
jge
fadd
adc
cmp
and
mov
arpl
js
sub
je
mov
cmovp
out
push
(bad)
adc
push
inc
pop
pop
jl
jl
fst
push
jl
mov
xchg
pusha
sahf
test
shl
cmp
mov
lea
les
push
ins
frstor
imul
test
ror
dec
addr16
dec
popf
inc
sbb
in
aas
mov
pop
push
repz
clc
aaa
mov
mov
adc
(bad)
push
out
sbb
into
adc
jge
mov
(bad)
add
push
mov
push
sub
cmc
mov
mov
gs
je
push
outs
movs
jmp
neg
pop
mov
popa
(bad)
sub
jmp
sbb
ja
sub
ret
push
nop
pop
push
xor
jne
fild
ficom
cld
fisub
lds
test
add
fcom
dec
push
dec
mov
push
inc
hlt
push
jae
stos
into
rol
mov
dec
mov
jg
mov
push
add
popf
sbb
clc
ret
call
das
jg
scas
sbb
adc
pop
ins
lock
adc
mov
cmps
imul
push
jne
nop
bound
loop
ret
cld
and
into
or
hlt
cmc
pop
sub
push
je
ja
and
inc
cwde
ret
out
aas
outs
popa
dec
pop
mov
xchg
xchg
sub
jmp
jl
jne
xor
in
dec
ja
sbb
(bad)
mov
push
xchg
leave
adc
fwait
ret
jne
ror
sahf
mov
mov
lds
xchg
xor
fistp
sub
push
cmp
xchg
push
mov
jns
js
and
mov
adc
out
mov
shl
jecxz
jge
dec
pushf
and
imul
inc
push
dec
push
pop
loope
xchg
je
icebp
(bad)
das
mov
push
adc
pop
(bad)
pusha
xchg
pushf
enter
push
xchg
pop
add
addr16
sti
xor
imul
mov
inc
addr16
and
pop
jp
adc
push
js
xor
lods
push
mov
(bad)
(bad)
jle
and
push
mov
and
dec
mov
test
pop
cmp
frstor
jmp
(bad)
in
push
dec
or
ret
in
dec
mov
mov
ror
jge
inc
jg
sbb
retf
daa
xlat
push
sbb
inc
(bad)
call
out
sbb
in
or
push
call
or
sti
mov
xor
mov
sbb
sub
jno
add
mov
sahf
cmp
sbb
mov
mov
jle
data16
fdivr
inc
ins
add
or
cmc
jp
jnp
rcl
sbb
xchg
ficom
pop
ret
cmp
(bad)
(bad)
pop
mov
out
test
mov
jne
call
js
cmp
mov
loop
test
fld
in
jg
jle
je
push
push
aas
adc
mov
frstor
enter
and
ds
loopne
jp
lock
shl
clc
sub
imul
inc
push
in
popf
sbb
xor
adc
pop
ret
mov
add
cmps
adc
pop
out
sbb
pushf
adc
dec
pop
sbb
das
stos
imul
adc
or
icebp
and
sub
sbb
stc
sbb
sbb
ds
xchg
(bad)
fcom
mov
xor
scas
mov
and
sbb
jmp
and
fdivr
ror
(bad)
push
mov
das
mov
fstp
jecxz
test
int
or
mov
mov
dec
dec
pop
jo
jg
aam
mov
ins
jbe
mov
leave
adc
sbb
jo
push
xor
push
ins
rol
pop
push
jnp
sar
cs
jb
sub
adc
nop
cli
add
push
out
cmp
mov
ss
enter
cdq
jns
das
jl
sti
imul
(bad)
push
jl
add
inc
pop
dec
call
in
xor
enter
pushf
rcl
cmp
sar
(bad)
sbb
dec
rcl
push
cwde
out
pop
sub
pop
js
pushf
ins
sbb
call
rol
hlt
cmp
shr
mov
add
ret
and
cmp
adc
je
std
(bad)
std
(bad)
xchg
mov
adc
adc
dec
mov
js
fisubr
mov
cmp
jno
pop
clc
aam
out
sub
daa
stos
aad
or
out
mov
out
dec
fndisi(8087
dec
imul
(bad)
test
xchg
outs
push
rcl
ficomp
sbb
xchg
pop
or
(bad)
mov
sub
ins
rol
cmp
fiadd
and
dec
dec
mov
retf
jg
pop
shl
pop
pop
push
test
fmulp
int3
clc
test
cmp
aad
mov
fsubrp
loope
cmps
mov
push
mov
add
outs
mov
scas
loopne
mul
sbb
xchg
fcomp
ds
into
dec
iret
xchg
rcr
out
je
adc
pop
add
std
pop
sbb
inc
(bad)
(bad)
loop
mov
cdq
cld
iret
push
mov
daa
shr
gs
pop
push
rcr
jnp
(bad)
jmp
cld
mov
out
movs
xchg
pusha
xor
add
outs
fbld
(bad)
in
repz
sbb
cmp
adc
pop
fld
jle
mov
stos
add
xor
cmps
mov
xchg
push
add
jmp
aam
leave
xchg
pushf
xlat
mov
cmp
sbb
push
mov
mov
fld
cmp
and
jecxz
int
shl
sti
mov
pop
adc
aam
sub
repz
call
mov
xor
cmp
rcl
rcl
add
add
fwait
pop
imul
xchg
adc
test
dec
movs
xchg
arpl
out
repz
aad
pop
out
lods
ret
pop
cmp
mov
push
(bad)
xlat
nop
imul
ror
cmp
sub
test
test
in
popa
nop
mov
add
popa
call
push
push
stos
jle
jb
in
jl
dec
in
mov
daa
push
(bad)
cs
inc
movs
pop
enter
and
jmp
push
dec
in
mov
loopne
loop
pop
mov
or
nop
js
mov
xchg
in
adc
and
push
mov
popa
mov
xchg
and
repz
sahf
sbb
xchg
xchg
sbb
pop
dec
xchg
sbb
xchg
xor
mov
das
aaa
pop
jnp
(bad)
das
cmp
adc
sub
ret
fstp
in
cmp
mov
out
push
push
call
lods
dec
mov
enter
je
mov
aad
adc
xchg
out
repz
push
dec
push
sub
in
rol
daa
mov
mov
pop
ds
cmc
enter
sub
fwait
xor
mov
aad
sub
cmps
push
pusha
imul
call
mov
push
(bad)
in
and
inc
cmp
push
jmp
adc
stos
ror
sub
mov
fisub
xor
jmp
jecxz
mov
out
out
sbb
es
sbb
div
mov
xchg
aas
bound
and
inc
out
mov
xchg
into
loope
test
mov
mov
cmp
lods
cmp
or
jmp
sbb
shr
ret
stos
stc
pusha
adc
ret
jmp
sbb
push
mov
cmp
mov
mov
push
cvtpi2ps
scas
push
add
es
add
das
mov
mov
(bad)
hlt
into
ja
sub
adc
ins
dec
dec
jae
push
xchg
or
fucomip
cmp
jle
adc
rcr
jnp
push
sbb
push
ds
imul
ja
ret
pop
add
push
cs
or
mov
mov
fwait
dec
ins
fmul
cdq
fadd
cmp
inc
(bad)
mov
mov
dec
inc
(bad)
jge
pop
mov
repnz
mov
pop
add
mov
std
xchg
stos
scas
adc
xchg
neg
cmc
dec
retf
push
or
xor
ret
movs
inc
mov
inc
pand
outs
out
in
mov
xor
es
and
and
cmp
shr
aad
jl
hlt
sti
enter
and
lahf
xor
mov
clc
cli
test
sbb
aad
mov
cwde
mov
aas
jb
xor
adc
mov
cmp
jecxz
adc
xchg
daa
mov
jo
fucom
push
pop
xchg
pop
push
(bad)
leave
outs
mov
movs
imul
cs
inc
out
loop
xlat
fsub
push
inc
mov
aam
dec
cmp
fcmove
movs
aam
fidivr
sub
aad
dec
in
add
out
cmp
or
inc
mov
push
mov
ret
aaa
adc
int3
push
call
pop
mov
out
pop
cmps
cmc
mov
pop
bnd
jnp
or
ins
pop
mov
inc
popf
pop
jns
inc
pushf
cmc
cmp
pop
push
daa
fisubr
bound
mov
ja
icebp
loopne
mov
add
xor
movs
ja
sbb
push
push
jb
push
jle
xchg
jb
jb
imul
xchg
movs
stos
push
sub
sbb
xor
fdivr
mov
pop
sbb
xlat
jno
add
sahf
sub
adc
arpl
aad
lea
dec
jmp
hlt
push
push
push
mov
adc
fst
jb
les
mov
icebp
pop
xchg
(bad)
cmp
xchg
and
retf
mov
retf
pop
cmp
mov
leave
mov
add
cdq
mov
test
mov
mov
inc
dec
inc
jl
(bad)
hlt
inc
clc
dec
int3
xchg
repnz
xlat
dec
mov
push
or
cmc
or
xchg
daa
pop
jg
xchg
jno
sub
dec
jl
cld
inc
pop
cli
add
test
jl
add
aam
jo
cs
psrld
jne
pop
jg
push
push
pop
loop
cmp
test
mov
jmp
mov
cs
in
in
lods
adc
pop
xor
sbb
in
xor
push
push
ja
aad
js
jmp
or
out
mov
push
sub
imul
leave
mov
add
ds
dec
jge
xchg
jbe
jnp
xor
cmp
mov
add
xlat
xlat
gs
xchg
idiv
dec
xor
clc
je
aas
fs
xchg
movs
int3
pop
cmp
shl
scas
jno
or
mov
push
dec
addr16
mov
mov
push
jmp
test
pop
loope
mov
addr16
xor
ins
jae
add
jge
sub
push
enter
jp
scas
jg
adc
sub
leave
adc
nop
mov
mov
or
jae
adc
push
mov
adc
fsub
cmp
retf
inc
retf
out
mov
test
ret
and
xchg
sbb
mov
and
fld
sbb
cmp
jmp
and
neg
cli
repnz
fst
pop
sti
sub
mov
rsm
mov
ds
pop
xchg
loop
inc
in
mov
mov
push
cmp
iret
pop
mov
div
push
shr
sbb
out
imul
cmp
ins
ret
and
mov
div
jno
add
xor
mov
sub
neg
mov
or
adc
pop
jle
or
xchg
xor
retf
ds
cmp
inc
adc
ficomp
bound
adc
add
xor
mov
mov
in
rcl
sub
and
bound
push
(bad)
adc
cmp
mov
cmps
add
jmp
fiadd
lock
xchg
xor
sub
stos
pop
test
jns
xacquire
mov
mov
add
push
dec
xchg
sub
jbe
jge
test
cmps
dec
fisttp
push
in
lds
xchg
inc
mov
adc
fwait
sub
out
sub
mov
dec
(bad)
pop
mov
jl
mov
mov
add
cmovle
je
leave
leave
arpl
sbb
or
jbe
jae
mov
stc
int3
popf
(bad)
cli
pop
push
sbb
call
dec
js
adc
scas
stos
xchg
fsubr
test
jae
xchg
in
xchg
pop
addr16
aaa
pop
sub
ror
jecxz
jecxz
pushf
add
mov
popa
mov
cs
sbb
cmp
retf
adc
fild
adc
or
aaa
iret
das
mov
das
pop
movs
es
std
mov
pop
and
xor
inc
jl
adc
cwde
(bad)
jbe
popa
call
les
pop
repnz
sbb
call
mov
jmp
jmp
and
sbb
push
cdq
sbb
mov
adc
jl
(bad)
cmp
sbb
mov
mov
daa
xchg
outs
add
inc
push
neg
mov
push
mov
xchg
enter
pop
jae
mov
mov
aas
push
cmp
jmp
fwait
cs
stos
mov
ror
inc
and
(bad)
test
or
mov
enter
mov
icebp
sahf
call
clc
xchg
pop
lock
outs
(bad)
lds
xchg
lods
in
bound
rol
add
mov
loopne
sub
gs
pop
aad
and
call
sahf
mov
mov
jl
out
mov
cwde
lods
jle
mov
mov
ins
push
pop
push
pop
cmps
lods
adc
add
(bad)
test
mov
push
das
lock
out
adc
fucomi
movs
js
pop
add
ret
out
es
mov
inc
xor
lea
pop
sub
fs
mov
sub
cmp
test
mov
into
pop
sti
mov
mov
clc
jp
call
movs
or
fwait
add
mov
xchg
hlt
jle
scas
push
imul
test
add
adc
(bad)
xor
loop
rol
adc
add
stc
jle
shl
outs
leave
inc
aas
adc
shr
test
gs
shr
cmp
outs
inc
int3
int
dec
mul
cmc
or
cdq
(bad)
and
sbb
pushf
sar
adc
(bad)
adc
fs
push
and
mov
mov
jmp
mov
xchg
dec
loopne
enter
sub
daa
xchg
cmp
adc
loop
xor
push
or
cmp
retf
ret
sbb
pop
mov
jmp
retf
dec
jne
pop
push
or
lods
fsubr
je
add
xor
push
jo
xchg
imul
pop
cmp
and
push
and
jae
mov
pushf
xor
std
or
loopne
mov
adc
int
lahf
scas
repz
pop
mov
call
jmp
int3
retf
jne
call
loopne
ds
jnp
inc
pop
add
dec
push
xchg
rol
scas
dec
jmp
jns
and
sbb
adc
test
in
test
lds
cmp
and
pop
lea
push
iret
inc
or
inc
ret
push
loope
pop
dec
cdq
fdiv
pop
xor
xchg
add
pusha
add
jp
loope
in
lods
mov
out
or
mov
outs
outs
in
inc
inc
push
xchg
(bad)
mov
mov
sti
push
stos
mov
push
push
jo
std
dec
ja
(bad)
pop
push
bound
dec
push
sbb
scas
mov
xchg
dec
mov
ret
stos
jl
add
inc
ret
test
or
cmp
xor
mov
cmp
ret
inc
sub
stos
pusha
sahf
scas
or
cli
push
jge
cmovo
stos
fistp
sub
pop
xchg
add
cmps
mov
and
js
dec
or
pop
cmp
mov
mov
push
js
fnstsw
lahf
adc
or
mov
adc
std
test
xchg
icebp
mov
and
and
repnz
mov
xchg
mov
push
cld
mov
add
adc
inc
(bad)
sbb
cmp
fild
cmp
push
jle
outs
or
xor
push
mov
aaa
jmp
movs
inc
sub
fld
call
mov
adc
cwde
fisttp
xchg
jecxz
popf
mov
sbb
sbb
mov
rcl
js
lods
movs
fwait
mov
iret
adc
cmp
(bad)
les
lods
stos
cld
xchg
hlt
ins
je
outs
inc
icebp
fsubr
addr16
mov
stos
out
mov
pop
in
loop
in
cmc
xchg
pop
jns
clc
(bad)
xor
lahf
mov
xchg
push
mov
ins
sub
jle
mov
or
fs
arpl
ror
adc
jne
pop
mov
fstp
and
mov
std
or
xor
mov
popf
add
test
les
push
inc
arpl
jno
dec
pop
sbb
rcr
jle
mov
in
mov
mov
jo
je
getsec
popa
mov
test
push
in
jo
pop
je
dec
shr
inc
xor
mov
add
cmove
call
xor
out
cmp
outs
jmp
aaa
jmp
ins
jb
mov
dec
xor
dec
pop
stc
jnp
(bad)
fsub
mov
je
aam
bnd
dec
nop
lea
pandn
or
pop
shl
cmp
sbb
sub
jmp
jbe
jno
fisttp
pop
mov
cmp
lds
out
jmp
jnp
fnstcw
fcmovu
aam
push
cmp
pop
je
dec
mov
aam
scas
add
mov
mov
jb
mov
es
into
jb
in
mov
pop
loop
mov
sar
clc
mov
push
rcl
jbe
imul
jb
cmp
(bad)
loopne
sub
jge
(bad)
(bad)
mov
adc
out
add
(bad)
push
outs
add
div
out
xor
gs
out
dec
mov
out
push
add
stos
dec
movs
xor
inc
dec
pop
fisttp
xchg
hlt
daa
repnz
(bad)
sbb
div
push
mov
aam
in
enter
scas
imul
rcl
(bad)
pop
addr16
test
jo
ret
push
mov
imul
xchg
and
pop
loop
ficomp
pop
adc
push
into
rcl
mov
sub
sub
das
pop
sub
loopne
mov
mov
repz
cld
aad
sbb
pop
push
dec
xor
dec
lock
mov
popa
repnz
cmps
and
aaa
sti
jnp
xor
mov
repz
enter
out
out
pusha
aam
pop
cli
cli
fmul
cdq
arpl
test
adc
mov
mul
inc
and
mov
je
and
adc
xchg
jo
push
pop
xchg
iret
fsubr
icebp
sub
mov
mov
mov
xchg
loope
mov
ds
pop
daa
addr16
ret
xchg
daa
mov
cmps
jge
fidivr
add
fs
mov
xor
leave
popa
and
cdq
or
loopne
jp
es
or
sub
rcr
nop
enter
mov
rcr
popa
mov
pop
jmp
mov
out
jno
(bad)
mov
cwde
sbb
pop
retf
repnz
add
dec
mov
fsubr
jb
or
xor
repz
inc
fst
mov
in
in
jne
push
inc
mov
dec
push
sbb
pop
and
pop
imul
mov
rcr
es
cmps
mov
push
cwde
gs
test
mov
and
xor
cdq
pop
mov
repz
fldenv
adc
adc
or
fwait
pop
lds
mov
in
ret
add
add
repz
pop
(bad)
sub
in
dec
fnstenv
push
dec
scas
dec
sub
test
fwait
lods
jns
push
dec
aam
and
mov
call
jmp
loope
push
out
rcl
cli
cmp
sub
or
js
xchg
xchg
jnp
inc
gs
mov
mov
test
and
mov
cmp
(bad)
pop
add
lods
sahf
scas
(bad)
daa
imul
and
mov
and
xor
and
mov
jp
cmp
cmc
adc
ins
jmp
or
adc
jmp
and
push
mov
mov
jecxz
cld
pop
add
fisttp
xor
ror
test
ror
inc
cmps
mov
jns
rol
lods
push
jge
pop
jmp
in
add
in
dec
ror
ror
pop
sub
(bad)
jmp
mov
(bad)
(bad)
test
mov
into
push
cmps
push
inc
inc
dec
loopne
cmp
sbb
jo
push
push
arpl
jo
jp
fisubr
rol
dec
mov
sbb
and
mov
cmp
xchg
mov
jle
and
cmp
sub
jne
enter
jp
and
inc
adc
pop
pop
mov
cwde
scas
push
mov
mov
xchg
in
mov
sbb
or
dec
test
ins
inc
pop
(bad)
mov
fld
repz
bound
mov
xor
dec
stc
xchg
mov
push
dec
and
fcomp
add
rol
out
xchg
inc
push
dec
shl
movs
retf
jecxz
or
push
and
rcr
pmaddwd
adc
sub
mov
add
div
and
pop
cli
xchg
es
arpl
jge
push
pop
jbe
xchg
mov
jge
jns
std
jno
ss
cmp
push
add
mov
jno
pusha
inc
cmps
repz
in
pop
xor
mov
dec
arpl
repz
cwde
out
dec
mov
int3
(bad)
mov
fstp
inc
sbb
das
jmp
adc
sbb
int
dec
int
xor
test
fmul
aad
frstor
test
adc
or
mov
sar
add
retf
pop
push
jnp
bound
cmc
fs
iret
fdiv
sbb
out
adc
mov
sar
sahf
mov
je
or
sbb
jb
mov
test
in
les
push
mov
mov
cmps
or
adc
jmp
retf
inc
xchg
sub
in
sbb
inc
aam
lods
jns
cli
sub
xlat
ss
leave
adc
adc
in
xor
pop
cs
stos
cmc
loopne
adc
adc
add
repnz
pop
mov
jns
scas
add
adc
clc
ins
cs
enter
xor
sti
mov
push
scas
int
inc
sahf
pop
cmp
(bad)
cld
cwde
cmp
scas
popa
cmp
xchg
sub
(bad)
cmps
jmp
(bad)
fsubrp
and
mov
iret
inc
cmps
out
or
xchg
retf
es
(bad)
cs
and
mov
ins
sub
enter
or
fisubr
mov
adc
jbe
gs
in
jp
pop
rcr
xor
pop
push
lods
aaa
or
fiadd
cmp
ror
int
sahf
pop
mov
mov
imul
sub
arpl
sbb
enter
sub
cmc
popa
jne
inc
sub
lahf
sbb
cli
test
call
xor
nop
pusha
aad
cmc
sbb
xchg
dec
and
movs
cmp
push
outs
ss
aaa
xor
sbb
cli
pop
pop
xchg
int3
sub
and
mov
add
inc
(bad)
je
div
inc
mov
dec
jmp
xchg
mov
out
push
in
adc
repnz
or
push
dec
sti
jnp
popf
loopne
das
push
and
mov
rcr
outs
int3
mov
xchg
adc
push
adc
into
jno
jmp
jg
addr16
lahf
dec
xchg
bound
lds
call
pop
jge
imul
add
icebp
sar
outs
fbstp
sti
or
and
sbb
or
enter
xor
jle
xchg
add
add
inc
adc
outs
std
pop
aas
sti
(bad)
xor
icebp
adc
and
jne
push
xor
fmul
std
fidivr
dec
jno
xor
ret
movs
mov
fs
jb
pushf
xchg
dec
ficomp
stos
inc
push
ss
push
push
movs
and
inc
xor
loop
sub
xor
xchg
push
and
int
pop
(bad)
lods
xor
sbb
iret
and
add
push
adc
add
mov
jle
jp
ret
loopne
cld
or
jp
sbb
ins
shl
out
jmp
mov
xor
add
push
push
aas
js
(bad)
xchg
imul
sub
pusha
add
retf
das
sub
push
push
popa
out
cmp
loop
das
enter
int
mov
mov
cmp
and
cmps
(bad)
hlt
sub
fmul
test
movs
stos
adc
cli
fwait
in
inc
pop
pop
push
lahf
je
cdq
loope
das
xchg
call
or
je
out
cli
adc
(bad)
mov
pop
arpl
fdivr
aam
lock
daa
xchg
sahf
ret
loop
es
sub
mov
mov
or
inc
clc
mov
xor
test
xchg
push
out
fadd
xor
add
out
hlt
jo
sbb
sahf
xchg
sub
std
pop
adc
sahf
xor
xor
imul
cwde
add
dec
dec
mov
(bad)
lahf
pop
cmp
(bad)
or
sub
add
(bad)
sbb
adc
repz
jne
aad
enter
test
adc
pop
test
mov
mov
fdiv
shl
lods
fistp
ss
inc
cli
movs
fwait
mov
fs
es
int3
cld
and
bound
push
stos
sbb
xchg
jmp
mov
sub
pushf
(bad)
jg
dec
mov
dec
sahf
or
xor
cmp
xor
das
adc
mov
cmps
js
pusha
and
iret
in
stos
ror
imul
mov
in
push
add
jno
jo
std
mov
jns
ret
dec
push
lods
mov
shl
cdq
int3
sbb
es
stos
jge
in
xchg
mov
jmp
xor
outs
push
add
inc
inc
test
xchg
xor
jmp
cmp
dec
(bad)
mov
pusha
jl
aad
retf
popf
fistp
mov
and
jno
adc
call
inc
fld
push
sahf
test
aam
xchg
sub
lods
mov
jecxz
sahf
in
add
or
cmp
add
ret
mov
fist
loope
shl
add
stos
enter
mov
mov
xor
retf
push
outs
xchg
xchg
repnz
cdq
rcl
jecxz
ins
bound
sub
fisub
dec
in
imul
dec
and
or
jne
adc
pusha
adc
add
or
cmps
movups
or
clc
es
int
cmovle
or
push
or
push
mov
push
xchg
popf
xchg
mov
xchg
mov
hlt
xor
(bad)
dec
add
ficom
enter
arpl
test
repz
das
or
push
xor
jb
idiv
xor
cmps
(bad)
inc
push
mov
push
pop
ror
inc
push
mov
xor
hlt
xchg
or
sub
pop
(bad)
retf
push
sbb
inc
mov
jb
jne
fs
mov
mov
jge
xlat
xlat
jmp
sti
adc
mov
and
and
movs
ins
xchg
je
or
repnz
jns
inc
mov
scas
mov
data16
add
add
xlat
nop
cld
mov
fistp
dec
out
inc
cwde
sub
jl
sub
cmps
gs
jno
xchg
mov
test
movs
adc
aam
movs
push
and
pop
sub
and
push
or
xchg
pop
fwait
dec
mov
sbb
int3
jmp
mov
mov
test
cmp
arpl
dec
xchg
fimul
sub
int3
adc
cmp
pop
adc
imul
rcr
arpl
mov
mov
pop
xchg
test
pusha
mov
cmps
fld
pushf
ins
mov
xchg
lods
inc
ret
and
rcl
mov
mov
inc
dec
xor
hlt
aas
cmp
test
mov
pop
mov
loopne
xchg
push
neg
push
int3
(bad)
outs
in
clc
cwd
or
mov
or
jns
xor
fiadd
sti
test
sar
push
add
jns
pushf
and
push
jecxz
sub
push
xor
ror
call
loope
pusha
pop
iret
dec
int
fidiv
out
inc
cwde
aas
and
xchg
ja
inc
std
cmp
sbb
and
jo
adc
xchg
test
adc
dec
jecxz
sub
adc
in
inc
and
shr
sub
pop
adc
pop
push
jge
aam
adc
shl
addr16
mov
dec
shr
mov
or
(bad)
stc
mov
push
sahf
inc
push
sti
fidiv
xchg
in
push
daa
fs
mov
jo
lahf
adc
gs
in
lds
pop
in
fsubr
rcl
and
adc
jp
shl
aad
ret
mov
sub
jb
xor
xor
cmp
imul
test
cmp
push
xor
push
inc
in
mov
sub
add
sub
icebp
and
adc
stc
idiv
in
imul
push
mov
and
lods
and
fs
and
add
repnz
push
sbb
fisttp
js
xor
jns
add
cmps
sbb
push
ins
iret
inc
xchg
movs
adc
aaa
loop
push
jnp
rcr
xlat
and
dec
sub
jo
mov
call
xchg
sbb
sbb
inc
lahf
jge
xor
dec
sbb
pushf
xchg
add
popa
push
cmp
xchg
adc
mov
add
add
loopne
(bad)
enter
ror
enter
je
sbb
and
jbe
iret
xchg
dec
retf
or
(bad)
jge
lahf
or
cwde
mov
mov
sbb
ret
push
cwde
inc
pop
jnp
adc
jp
out
shl
mov
js
mov
lds
nop
(bad)
iret
mov
mov
pop
movs
cmp
push
jp
push
sbb
rcr
into
push
pop
mov
dec
sub
or
ins
sbb
imul
fidivr
mov
leave
mov
mov
jno
xor
sub
jb
data16
mov
ins
mov
or
xchg
xchg
mov
inc
test
push
arpl
fstp
mov
out
inc
sbb
(bad)
pop
jne
das
inc
ds
lea
mov
cmp
enter
jge
push
jns
pop
or
xchg
pusha
and
cmp
stc
xchg
sub
mov
scas
movs
adc
mov
xchg
std
add
adc
(bad)
mov
xor
inc
and
mov
cmp
cli
(bad)
leave
lods
or
jge
mov
les
push
jb
lds
arpl
addr16
lahf
popa
dec
call
ficomp
daa
add
scas
aam
ror
sbb
xor
push
pop
push
mov
adc
mov
cmp
loope
je
pop
sbb
enter
inc
aad
loopne
iret
xchg
add
inc
jns
pop
cdq
ins
std
sti
loope
push
or
mov
cmps
in
arpl
or
jns
xor
xor
xor
ja
out
or
push
jmp
push
jbe
stc
pop
iret
mov
repnz
pop
push
cmc
lea
pop
and
test
pop
bound
loope
das
adc
sbb
jmp
push
(bad)
sbb
pop
jmp
das
or
cli
mov
mov
bound
sub
sub
xlat
imul
xchg
dec
ja
push
pop
push
(bad)
cdq
scas
add
into
jae
ins
cld
add
add
scas
aas
lea
test
push
sar
call
mov
gs
aas
and
sub
out
mov
jecxz
xchg
mov
pop
pop
lahf
fwait
pop
stos
pop
leave
test
mov
jl
out
sub
mov
loop
xchg
and
sub
mov
sub
stos
popa
dec
and
imul
mov
xlat
ja
data16
mov
aam
in
into
test
shr
pop
pop
out
dec
into
mov
jmp
aad
cmps
xor
push
sar
pop
xor
jo
pop
cmp
xchg
inc
(bad)
cmps
retf
jg
jmp
scas
imul
mov
(bad)
cmp
jecxz
retf
and
imul
in
cmc
retf
arpl
pushf
imul
mov
int3
mov
jo
js
das
fadd
xor
jmp
fidivr
lds
jp
leave
aam
sub
std
push
jbe
xor
inc
adc
xor
jmp
add
inc
dec
mov
(bad)
mov
sbb
out
mov
std
call
into
rol
cmps
fiadd
push
xchg
push
add
and
rol
jno
leave
sub
jb
dec
adc
enter
pushf
inc
sti
outs
mov
push
xor
push
mov
mov
js
fstp
dec
nop
push
scas
cmp
stc
cmp
(bad)
mov
rol
jae
fs
scas
fild
rcl
ins
or
add
xchg
sar
lds
sub
or
clc
call
dec
das
cmc
add
push
add
mov
sti
cli
or
test
add
mov
and
and
cmp
push
mov
and
pop
pusha
stos
xor
push
ins
out
mov
sti
add
xlat
dec
mov
xchg
dec
inc
sti
xchg
mov
pop
jl
lock
movs
or
xchg
pop
into
jl
mov
push
sbb
pop
imul
push
push
and
sar
add
and
cmp
outs
loope
push
and
xchg
clc
add
or
adc
rol
sti
movs
std
push
loop
push
ins
ins
add
add
stos
cmp
dec
pop
inc
inc
jecxz
and
ret
xor
jmp
nop
shl
in
sbb
pop
leave
pop
xchg
mov
arpl
movs
and
das
clc
and
pop
mov
not
rcl
fstp
jno
out
retf
adc
mov
daa
(bad)
ins
jmp
jmp
retf
jbe
jecxz
xor
mov
rcl
xchg
fs
test
scas
mov
ja
jb
loopne
and
jo
mov
jmp
sar
stc
or
xchg
jnp
sbb
imul
fisttp
push
sub
stos
addr16
cmp
rcl
jo
mov
mov
mov
movs
aaa
push
ret
mov
rol
stos
sub
dec
dec
sbb
mov
add
push
dec
sub
sub
or
jg
aad
sysret
outs
das
repnz
jl
sub
ss
jae
enter
cmp
out
scas
sbb
jecxz
jl
dec
add
outs
mov
add
jbe
es
add
mov
leave
jae
ret
xchg
repz
outs
test
fisub
and
aam
cmp
addr16
in
leave
sbb
xor
jno
leave
ss
or
pop
imul
xchg
call
aas
push
sbb
call
dec
clc
jge
popf
mov
loop
push
jo
inc
jecxz
ret
stc
stc
dec
adc
aam
xor
ror
cs
sbb
or
mov
repz
xchg
xchg
icebp
es
pop
mov
jmp
or
jno
add
loopne
jne
mov
cmp
jo
jg
cmp
sbb
inc
adc
inc
adc
inc
mov
pop
aaa
jne
lock
or
outs
mov
sahf
pop
xchg
outs
or
dec
push
fist
cmp
rcr
enter
cwde
jae
ficom
sar
push
enter
pop
das
mov
mov
arpl
loopne
jle
out
mov
adc
jg
add
push
push
and
jne
mov
mov
mov
jge
ret
xchg
sar
les
sbb
jmp
and
mov
inc
dec
sti
das
cmps
into
cmp
mov
push
inc
nop
or
ja
sbb
sbb
dec
dec
mov
std
sbb
inc
test
in
pop
stos
loope
add
cmp
lods
inc
shr
inc
mov
inc
mov
lea
cmp
and
out
jmp
add
bound
jl
mov
ss
scas
lahf
dec
fs
cs
fdiv
loop
fidiv
(bad)
jne
jae
(bad)
cmp
loop
add
sub
mov
dec
add
shr
mov
test
pop
jg
stc
shl
jns
out
adc
ss
xor
fwait
jmp
mov
sti
dec
dec
mov
pop
icebp
sbb
pop
inc
cmp
inc
xor
mov
lahf
(bad)
cmp
scas
push
and
jno
scas
sbb
cld
inc
stos
xchg
inc
pop
retf
shl
cmp
dec
mov
into
icebp
xor
mov
xchg
inc
xchg
inc
fcom
imul
pop
xor
xchg
and
add
dec
xlat
jno
repnz
push
mov
hlt
and
and
mov
cmp
pop
jo
jg
mov
pop
stos
jmp
(bad)
fldenv
xchg
(bad)
mov
loope
cs
xor
jnp
mov
xor
imul
lea
jle
rol
dec
add
fisub
cmc
push
mov
je
jmp
cmp
or
dec
mov
sub
leave
xchg
inc
mov
dec
or
jmp
ja
bound
mov
cmc
jp
dec
in
dec
jg
out
inc
or
ret
mov
cli
cmps
dec
mov
pop
cli
sub
stc
lods
mov
sbb
push
mov
shr
mov
or
mov
jg
add
inc
xchg
xchg
mov
xchg
jecxz
jge
adc
ror
xlat
fild
call
jp
stc
sbb
in
sbb
and
clc
push
push
ret
sub
or
inc
aad
ret
dec
adc
pop
inc
push
movs
push
adc
mov
cld
popa
sbb
push
aaa
pop
and
stos
push
popf
vphadduwq
movs
leave
test
fcomp
jmp
(bad)
xchg
and
(bad)
add
es
call
int3
jmp
push
lea
jg
ins
push
sbb
inc
jbe
push
dec
gs
mov
inc
daa
ss
bound
mov
sbb
cli
retf
xchg
mov
xchg
mov
add
outs
adc
popf
dec
fs
or
pop
mov
push
sahf
adc
mov
xchg
mov
test
aas
mov
inc
or
jmp
rol
aas
jne
aad
stc
pop
jmp
ficom
and
adc
mov
xchg
repz
ja
push
add
(bad)
out
shl
jg
es
aas
mov
push
add
inc
push
sbb
inc
mov
frstor
(bad)
fldcw
cmp
dec
ficomp
sbb
adc
adc
imul
and
mov
in
fldcw
cmp
fwait
and
(bad)
fwait
out
mov
(bad)
xchg
imul
mov
or
nop
mov
cdq
jmp
mov
inc
cmp
in
push
(bad)
inc
push
popf
sub
rol
cmp
cmp
xchg
pushf
pmullw
jp
sub
mov
and
sbb
les
sbb
or
jae
add
pop
jno
mov
jae
push
dec
loope
xchg
(bad)
pop
mov
push
pop
push
data16
(bad)
mul
jl
je
cmp
(bad)
mov
popf
and
repz
jb
pop
div
das
xchg
or
das
jbe
aam
popf
xchg
push
xchg
cmp
pop
xor
scas
retf
sahf
call
aam
mov
mov
dec
inc
mov
in
fistp
sbb
jo
xor
in
cwde
iret
or
lock
xchg
imul
call
pop
mov
mov
mov
mov
inc
inc
rcr
rcr
jg
inc
dec
add
aam
jns
jl
jmp
or
mov
je
add
movs
pop
or
jo
xchg
rol
rol
add
adc
sbb
addr16
ds
add
sbb
(bad)
icebp
push
jecxz
cmp
ret
dec
jle
jmp
xchg
out
into
xchg
mov
shl
jg
mov
pop
enter
adc
pushf
test
sub
ffreep
pop
xchg
popf
loopne
and
xor
fwait
rcr
(bad)
retf
xor
adc
shr
mov
fmul
cli
jno
movs
jg
mov
cld
outs
or
mov
mov
adc
movs
xchg
fs
adc
xor
sub
repnz
pop
jbe
inc
mov
dec
pop
hlt
xchg
retf
movs
sub
mov
or
call
push
(bad)
shl
push
mov
and
sub
fs
xor
jo
mov
mov
nop
mov
cmps
mov
data16
inc
je
es
call
jmp
mov
rol
rcl
(bad)
das
pop
add
cmps
movs
push
rcr
aam
stos
and
retf
imul
nop
dec
sbb
cmp
mov
sub
fmul
and
outs
loop
bound
add
mov
jge
(bad)
pop
mov
dec
dec
jnp
dec
jno
(bad)
call
mov
cmp
or
lods
adc
sub
xor
mov
and
sbb
dec
(bad)
mov
mov
idiv
jmp
(bad)
stc
icebp
sbb
or
adc
xchg
xor
popa
jg
cmps
dec
pop
aad
cmps
push
or
hlt
sub
(bad)
or
iret
mov
and
retf
lahf
mov
and
icebp
inc
js
dec
outs
mov
mov
pop
test
pop
mov
push
iret
enter
push
jb
popa
cs
cli
retf
hlt
xchg
movs
test
cdq
cmps
inc
adc
xor
cdq
sar
inc
pop
test
or
push
ret
and
add
ret
jne
iret
call
push
fs
or
mov
sbb
mov
inc
mov
mov
inc
mov
outs
jo
inc
inc
aad
pop
imul
call
je
sbb
ret
test
add
inc
sub
mov
push
and
call
lods
pushf
push
scas
xchg
or
lods
sti
(bad)
rcr
dec
push
mov
adc
push
mov
sbb
xchg
xchg
pop
mov
fcmovb
jnp
cmps
ins
add
(bad)
adc
and
stos
mov
cmp
loopne
mov
mov
int
jo
in
push
inc
sub
sub
or
test
pushf
idiv
fcomp
cmps
cdq
scas
js
fnstsw
nop
pop
inc
and
aas
mov
cmp
add
pop
adc
adc
xchg
lahf
mov
mov
shl
add
sar
rcl
mov
mov
sahf
add
ins
push
adc
and
push
out
retf
mov
mov
stos
add
daa
mov
xor
or
or
aam
push
jo
std
push
arpl
das
adc
scas
push
nop
(bad)
jo
les
jne
daa
(bad)
cmps
cmp
mov
push
stc
sub
in
pop
add
jnp
loop
xchg
out
mov
icebp
hlt
arpl
dec
rcr
dec
daa
inc
icebp
xchg
movs
jbe
and
nop
fdivr
pop
push
pop
enter
bound
retf
inc
pop
sbb
ret
les
loop
dec
int
cmp
jno
shl
pop
mov
mov
xchg
lods
daa
test
jmp
sub
sbb
push
test
mov
sub
inc
data16
into
fisttp
xor
retf
(bad)
xor
rcr
push
out
xlat
fld
sbb
lahf
popf
es
dec
cdq
xor
(bad)
(bad)
cli
dec
push
test
or
js
xchg
es
lock
jns
bnd
call
inc
mov
or
rcl
dec
xor
jmp
lock
je
cwde
push
inc
imul
and
and
push
sahf
out
add
int
pop
sub
xor
lods
sar
sub
or
test
mov
leave
in
pop
push
test
inc
lds
(bad)
or
mov
arpl
(bad)
push
ds
xlat
out
popa
outs
(bad)
hlt
sub
outs
hlt
cmp
push
mov
imul
sbb
clc
ins
add
pusha
mov
data16
out
jle
or
jg
fidivr
cmp
mov
sbb
popf
mov
call
lock
int
scas
cmc
xchg
add
push
enter
stc
add
loopne
cmp
test
sub
(bad)
data16
push
(bad)
leave
jns
jle
fcmovnbe
std
or
retf
pop
aas
add
sti
sbb
pop
popf
push
xor
mov
ret
xchg
fnsave
arpl
sub
pop
xor
sar
dec
idiv
lock
xchg
lods
xor
adc
or
mov
call
adc
(bad)
cmp
sbb
fsubr
fnstenv
addr16
lock
ds
and
sub
mov
add
cmp
sub
out
mov
in
push
lds
adc
jp
daa
mov
jmp
nop
xchg
outs
pop
movs
push
dec
mov
pop
xchg
push
(bad)
fcmovbe
cwde
aas
fiadd
sub
sub
nop
inc
add
lods
pushf
mov
ret
cld
sub
(bad)
inc
fsubrp
nop
pop
pop
pop
enter
test
loop
mov
xlat
sbb
mov
adc
nop
iret
pop
jne
iret
push
push
ss
jmp
aaa
stos
lock
fwait
xchg
movs
rcr
adc
dec
xchg
imul
push
pop
inc
pop
sbb
mul
pop
into
shr
into
in
movs
add
sbb
call
xor
cmp
add
aam
mov
inc
sbb
not
cmc
loopne
dec
pop
aam
inc
and
ins
mov
std
xlat
sbb
retf
idiv
and
repz
(bad)
xor
dec
imul
inc
or
jae
js
test
push
and
ins
sbb
mov
lods
out
repz
popf
dec
push
sahf
dec
stos
sub
mov
mov
leave
scas
dec
mov
mov
loopne
hlt
ss
(bad)
mov
and
mov
cwde
out
cmp
push
es
push
mov
adc
call
das
pop
push
repz
pop
xor
inc
dec
outs
cmp
cmp
fcom
shr
out
lods
pop
inc
sti
shl
lahf
xchg
fst
jnp
and
fld
mov
loopne
jnp
jg
fst
lea
mov
push
ds
movs
mov
outs
ror
xchg
mov
sub
call
ret
hlt
mov
int3
in
ret
or
dec
pusha
pop
mov
or
cmp
lock
xor
shl
cmp
push
cmps
clc
in
lock
mov
stos
clc
imul
xchg
out
fidiv
inc
push
mov
push
sub
data16
xchg
ja
mov
mov
jb
les
test
xchg
or
movs
arpl
sti
je
aas
imul
mov
dec
repz
add
xchg
in
fs
push
jle
sub
xor
add
jae
mov
push
jmp
(bad)
aaa
xchg
retf
jnp
ror
lds
mov
sbb
js
add
add
push
jmp
in
jp
xchg
fdiv
xor
cmp
popf
jae
loopne
fcom
mov
ins
push
outs
push
sub
into
test
and
xor
lea
lds
or
movq
xchg
sub
out
dec
push
call
call
jmp
sbb
(bad)
xchg
sub
loopne
mov
ror
in
dec
sbb
shl
mov
sbb
jmp
out
jg
(bad)
jmp
push
mov
je
dec
je
(bad)
adc
(bad)
outs
je
sbb
adc
or
push
or
or
inc
stos
pusha
cmp
sbb
lods
cs
fist
jge
dec
add
pop
stos
jmp
nop
xchg
lods
rcr
sbb
ins
out
fs
cmp
or
mov
or
or
xchg
xchg
xchg
mov
jae
xor
and
lods
sahf
inc
pop
call
(bad)
div
ss
mov
jp
ins
test
retf
and
xchg
jne
loope
sbb
push
bnd
cmp
lods
pushf
js
stc
jge
fs
scas
mov
lods
stc
sti
mov
scas
icebp
inc
adc
cmc
mov
xor
dec
js
jbe
and
adc
jmp
mov
daa
mov
push
fistp
lea
daa
push
lea
(bad)
mov
ret
cli
fcmovnb
outs
sub
or
mov
or
adc
xlat
adc
cmp
and
int
rcl
xor
push
nop
mov
test
adc
mov
aam
outs
std
dec
js
stc
jg
xchg
xchg
adc
daa
je
mov
mov
inc
jg
pop
xchg
inc
mov
or
fs
sub
or
(bad)
mov
mov
jbe
xlat
test
cli
sti
aad
test
push
add
fstp
ins
(bad)
jg
xchg
cmp
iret
adc
xchg
out
mov
mov
xor
nop
push
aaa
es
mov
dec
ret
adc
cmp
jns
fiadd
mov
fsub
xchg
popa
addr16
sbb
and
out
xor
add
xchg
dec
scas
jl
pop
stos
sbb
push
jle
stos
xchg
repz
or
fistp
fisttp
ret
or
inc
pop
mov
ds
sti
stc
cwde
push
mov
sbb
mov
cmps
add
add
retf
mov
les
shl
pop
in
dec
dec
cmps
faddp
push
es
inc
popf
lods
jae
aad
rcl
sbb
xchg
gs
mov
ret
sahf
adc
mov
in
mov
pop
add
inc
adc
ret
pop
fs
inc
add
adc
sbb
add
in
fimul
xor
mov
jmp
imul
mov
xchg
scas
sub
out
adc
mov
lods
mov
mov
adc
mov
adc
xor
adc
inc
mov
sbb
in
push
movs
loope
dec
cld
mov
jge
and
sub
stc
lds
adc
add
dec
rcl
xor
xor
bound
push
bound
and
fwait
sub
sub
cmp
pop
jecxz
cmp
pop
cmps
mov
sbb
les
fistp
mov
add
pop
in
sub
ror
dec
xchg
mov
test
imul
cmps
adc
std
mov
pusha
xchg
mov
lock
xor
or
dec
dec
mov
nop
sub
pop
mov
jl
ins
mov
fidivr
in
mov
(bad)
push
das
leave
ror
mov
mov
test
(bad)
inc
and
push
imul
in
not
or
retf
or
dec
pop
movs
mov
pop
repnz
retf
mov
test
push
and
lods
das
xchg
jl
xchg
sub
pop
mov
sbb
push
mov
int3
(bad)
lahf
mov
gs
clc
std
fstp
cmp
mov
cmp
inc
xchg
xor
xlat
pusha
dec
or
imul
dec
add
out
int
call
fs
mov
sub
test
mov
sub
test
push
ins
jae
fdiv
arpl
and
shl
sti
push
mov
scas
pop
ret
sti
jmp
mov
enter
sub
sub
outs
jbe
cli
inc
fcom
in
cwde
sub
das
push
mov
xor
shr
mov
pop
mov
cmps
es
lock
aaa
ficom
lds
(bad)
push
inc
mov
(bad)
shr
sbb
test
mov
sub
cmp
mov
shl
inc
out
dec
ror
sbb
in
jmp
fld
lahf
pop
add
pop
cmps
movs
(bad)
xor
pusha
xor
sub
imul
(bad)
ss
out
mov
adc
dec
xchg
outs
jle
outs
je
enter
sub
(bad)
(bad)
mov
xchg
retf
movsx
pusha
push
out
xor
jmp
arpl
fild
or
lea
(bad)
xor
test
mov
and
icebp
mov
sbb
xor
in
push
xchg
fbstp
test
xlat
xchg
iret
pop
sub
out
mov
cmp
and
loopne
adc
xor
arpl
adc
xor
push
mov
imul
xchg
jno
mov
rcl
cmp
shl
fstp
mov
xor
mov
js
xchg
xchg
sub
ins
push
daa
lds
cmp
(bad)
imul
mov
sahf
(bad)
ja
cmps
cwde
mov
push
cmps
xchg
xor
call
xlat
mov
dec
xor
mov
mov
inc
fcom
or
popf
dec
sbb
rol
in
sub
test
pushf
lods
push
pusha
outs
jmp
rcr
rol
popa
pop
sub
xor
and
fwait
inc
hlt
mov
push
mov
fldlg2
push
push
adc
sbb
mov
cli
cmp
shl
push
xor
push
pop
mov
xchg
mov
clc
push
retf
dec
ds
xor
dec
imul
xor
hlt
inc
jecxz
inc
push
sub
ins
data16
gs
dec
pop
adc
add
(bad)
mov
mov
dec
xchg
adc
xchg
mov
mov
push
(bad)
(bad)
das
sub
ins
lods
dec
cmp
lock
(bad)
mov
pushf
dec
and
aaa
mov
sub
nop
jge
scas
fidivr
stc
fsubr
or
sub
fsubr
cmp
add
out
(bad)
push
xchg
and
xchg
push
dec
cmp
cmp
mov
sbb
dec
(bad)
pop
outs
inc
aad
(bad)
mov
xchg
mov
and
push
scas
(bad)
arpl
adc
inc
in
mov
inc
sbb
sbb
fsubr
adc
aad
dec
inc
sbb
call
fimul
mov
mov
call
xor
stos
xor
hlt
push
cmp
mov
repz
push
sar
aad
xchg
or
outs
mov
je
sbb
cwde
scas
mov
push
pop
add
push
loop
out
add
pop
arpl
adc
sbb
nop
dec
xor
xor
cdq
dec
es
xor
mov
jl
cs
stc
loope
lea
imul
adc
sub
or
fidiv
jmp
cmc
inc
in
jl
mov
lds
push
xchg
test
sti
mov
pop
sbb
mov
add
xchg
cdq
les
les
sbb
or
adc
rcr
jge
call
rol
mov
mov
inc
fmul
mov
pop
xor
sbb
pop
test
(bad)
neg
aam
adc
xor
add
(bad)
jge
pop
cmp
cld
jl
lea
sbb
cmp
in
ins
pop
push
sbb
pop
sbb
(bad)
push
xchg
mov
jecxz
add
pop
repnz
fistp
jne
aam
mov
mov
dec
cmp
jno
pusha
sbb
lahf
adc
shl
outs
(bad)
icebp
loope
xchg
in
inc
lds
fstp
dec
push
pop
int
inc
cld
mov
in
int
movs
int3
mov
(bad)
sahf
inc
lods
dec
sub
cmc
ins
ret
mov
popf
mov
cmp
fcmovnb
bound
xchg
mov
and
cwde
mov
cmp
jl
out
adc
icebp
daa
xchg
jmp
and
jno
inc
cwde
jle
idiv
sbb
xchg
xor
jbe
jl
imul
push
pop
fdivr
dec
mov
enter
sub
lock
add
jnp
arpl
mov
pop
mov
(bad)
or
inc
clc
mov
(bad)
or
fld
xor
imul
lock
hlt
inc
mov
stc
enter
add
sub
push
xor
pop
iret
push
cwde
adc
je
push
lds
arpl
(bad)
cli
popa
iret
and
popf
mov
mov
dec
in
xlat
push
test
mov
leave
ja
sub
cmps
(bad)
loope
add
add
or
js
imul
xchg
mov
add
sbb
cmc
pop
xchg
stc
enter
popf
outs
ins
dec
mov
test
scas
mov
daa
popf
and
mov
stos
jno
sbb
sbb
aaa
data16
repnz
outs
jp
pop
in
push
mov
mov
scas
movd
add
jge
push
idiv
shl
pop
inc
ja
call
fwait
je
cmp
xor
bound
xchg
cmps
push
icebp
pop
and
mov
rol
inc
dec
inc
div
xor
mov
adc
dec
jg
mov
daa
out
add
sub
mov
fwait
mov
xor
pop
inc
(bad)
mov
loope
rcr
xchg
dec
mov
push
or
popa
(bad)
xchg
aam
ret
aaa
repnz
mov
jle
lods
popa
xor
movsx
mov
das
sub
push
repz
add
int3
mov
enter
and
movs
stos
ins
adc
push
fcomip
in
cmp
data16
cmp
outs
add
jae
adc
mov
adc
adc
xor
jmp
lods
popfw
daa
adc
out
pop
mov
pop
mov
in
push
les
mov
xchg
adc
xor
add
dec
aas
hlt
mov
(bad)
movs
imul
push
xchg
int3
add
cmp
mov
push
mov
sub
jp
ins
sub
ins
imul
sub
sbb
inc
mov
(bad)
sub
int3
popa
shl
inc
fild
mov
and
out
int3
shl
inc
iret
inc
xor
push
mov
inc
push
pushf
sub
jne
popf
jae
dec
dec
pushf
mov
inc
push
pop
mov
test
xchg
sub
scas
push
mov
xchg
cmps
es
inc
aam
jbe
fnsave
cmp
mov
test
popa
mov
xchg
sbb
or
loopne
push
ficom
xchg
aas
xchg
push
les
dec
and
add
arpl
ins
dec
jecxz
mov
inc
dec
mov
push
dec
sbb
xchg
shl
xchg
xchg
push
sub
xor
pop
icebp
icebp
push
nop
ins
fld
or
pop
sub
int
fisub
push
stos
pop
push
retf
jno
fs
ins
and
and
push
jmp
int
xor
dec
(bad)
hlt
mov
icebp
ret
ret
pop
dec
sti
shl
pop
adc
xor
mov
xlat
in
rcr
gs
jne
movs
inc
mov
sub
je
mov
mov
cmp
cmp
or
loope
loope
das
mov
test
and
cmp
cmps
cmp
push
out
jge
loop
mov
push
inc
sbb
inc
or
sar
xchg
int3
push
bnd
cmc
and
sahf
inc
jno
inc
or
pop
jmp
xor
ins
ret
push
bswap
xor
mov
call
movs
ror
test
aaa
and
movs
dec
imul
ret
jo
xor
lods
gs
mov
cmp
dec
add
cli
fidivr
ret
jecxz
inc
neg
ins
cdq
xchg
lock
adc
cmp
out
sar
xor
inc
cmp
loopne
push
mov
or
mov
stc
jle
dec
in
sub
fstp
fwait
(bad)
in
(bad)
aas
test
add
inc
ds
cmp
adc
test
daa
mov
ins
push
mov
test
mov
bound
nop
lahf
push
test
std
xchg
repz
sub
mov
adc
dec
outs
and
hlt
and
dec
mov
out
mov
jb
jbe
sub
test
mov
cmp
pop
fmul
fist
div
xchg
outs
inc
push
popa
repnz
add
lahf
addr16
mov
stos
sbb
push
sub
mov
ror
push
fldcw
popf
es
jno
(bad)
inc
jb
std
dec
xlat
das
repnz
push
add
sbb
adc
call
jns
ja
frstor
push
cmp
sbb
jecxz
and
sbb
jecxz
push
imul
cmps
jno
sbb
xchg
mov
xchg
popf
int
cmp
dec
jecxz
and
dec
and
inc
or
xrelease
out
shl
mov
pusha
cmc
shl
inc
dec
sbb
in
mov
dec
and
aad
dec
cli
cmp
nop
inc
arpl
ds
and
pop
xchg
push
daa
cmp
int3
mov
adc
mov
std
pushf
xlat
jb
loopne
add
into
fcmovb
mov
dec
aad
ror
pop
jle
mov
test
add
clc
loope
dec
sub
hlt
ret
fwait
(bad)
leave
push
fdivr
daa
and
pop
lods
call
loopne
cld
push
or
adc
or
mov
mov
icebp
add
pop
jp
mov
pop
icebp
add
sahf
mov
aam
or
les
in
xchg
fsub
adc
sbb
fdiv
fdivr
or
sub
mov
shl
jmp
jne
jb
add
stc
repz
outs
sbb
mov
pop
out
mov
es
fst
mov
(bad)
mov
arpl
sub
je
shl
sar
fs
add
cs
cld
jnp
retf
rcr
sbb
popa
cmp
mov
sub
xor
enter
test
xor
push
popa
fcom
cmp
ja
int
xchg
int
test
retf
mov
push
inc
or
xor
xor
test
ins
dec
xchg
fsubr
and
shr
into
loop
rcl
mov
cdq
in
mov
shr
sar
mov
and
pop
add
loop
mov
cmc
fbstp
inc
es
xor
fadd
adc
jns
sub
cmp
or
lods
lahf
xor
xchg
jmp
adc
pushf
les
test
jecxz
sbb
xor
data16
mov
cmp
pop
jge
sbb
ds
shl
retf
add
dec
stos
aad
mov
int3
inc
jbe
and
xor
cwde
rol
inc
jnp
or
push
bnd
xchg
jae
push
jno
scas
push
in
add
or
das
data16
dec
cli
dec
mov
xor
inc
push
out
jp
xor
push
push
stc
shr
jae
jge
push
add
nop
popa
(bad)
fcom
pop
cmp
mov
pop
xchg
loopne
retf
jo
and
add
mov
lock
cmp
push
adc
lahf
xor
int3
clc
(bad)
fdivr
mov
pop
adc
sub
fdiv
and
loop
loop
jae
cmp
or
fwait
lods
mov
mov
aas
nop
pop
pop
in
sub
ds
in
and
(bad)
add
not
repnz
jo
ror
push
call
jp
movs
repz
test
or
mov
push
pusha
popf
fsubr
adc
imul
and
push
fsubr
into
retf
ror
lock
xchg
rol
jo
push
dec
sbb
aad
add
push
sbb
cwde
xor
out
dec
dec
ins
sub
shl
fisubr
fbstp
les
into
cld
cbw
dec
push
or
mov
jno
loop
out
push
mov
ror
iret
cwde
sbb
std
jp
adc
adc
xor
or
mov
ret
(bad)
mov
lea
cs
lods
je
adc
dec
xchg
movs
retf
adc
mov
ror
mov
cmp
add
loope
ret
int
cmp
or
sub
repz
dec
aaa
data16
dec
stos
push
jmp
hlt
add
pop
rcr
nop
stos
xchg
fsub
push
das
sbb
mov
push
(bad)
movs
into
jo
loopne
sub
add
or
repz
mov
not
mov
jmp
int3
(bad)
mov
dec
and
pushf
pushf
pop
inc
fisub
and
pop
test
and
not
and
cmp
jb
shl
(bad)
ja
xchg
retf
xlat
inc
leave
pshufw
movs
jecxz
adc
xchg
cmps
dec
add
mov
sub
push
cmp
fs
inc
loopne
test
call
mov
fsub
(bad)
and
or
retf
je
mov
pop
cld
sbb
adc
mov
mov
xor
lahf
and
inc
sbb
fisub
les
outs
mov
in
sbb
loope
clc
mov
jns
fmul
sub
jmp
push
addr16
push
test
xor
movs
cli
xchg
pop
aam
xchg
daa
aas
cmp
fisub
sub
in
cwde
fcomp
loope
jnp
or
out
dec
bswap
sbb
cmp
mov
test
mov
icebp
jae
inc
xor
scas
sub
sbb
xchg
test
test
add
aaa
movs
mov
fst
sbb
add
pop
mov
scas
pop
mov
sub
test
(bad)
data16
adc
and
sub
stos
(bad)
mov
cdq
or
jnp
ja
out
dec
jbe
mov
ret
into
adc
into
add
test
cmps
nop
push
pop
jbe
push
rcl
les
mov
xchg
or
fstp
out
aad
ja
movs
retf
sbb
cmps
imul
adc
mov
cs
sub
cmp
enter
sbb
or
test
es
mov
cdq
fidivr
jmp
jecxz
repz
pusha
imul
mov
fnstsw
sbb
cs
leave
jl
pusha
push
cmp
jmp
push
pop
je
shl
push
adc
sar
mov
cdq
xor
pop
retf
inc
cmp
dec
and
repnz
call
mov
mov
popa
test
or
sbb
xchg
xor
mov
outs
jo
jecxz
push
fcomp
inc
push
xchg
pop
pushf
xchg
cmp
imul
test
jne
push
vminps
push
mov
sub
pop
dec
adc
add
outs
pop
out
xor
(bad)
retf
push
lea
vorpd
cdq
stos
rcr
das
and
inc
es
data16
in
stos
add
dec
mov
push
mov
dec
and
sahf
cmp
and
xchg
push
and
ficomp
dec
pushf
push
jmp
fwait
mov
es
mov
loopne
push
cdq
movs
fstp
std
xor
test
stos
mov
add
lds
and
xchg
test
mov
shr
adc
or
loopne
jge
sbb
retf
out
sub
(bad)
sub
sbb
call
adc
mov
mov
or
ds
dec
pop
call
adc
mov
(bad)
sub
movs
pop
popa
xchg
outs
xchg
ret
jle
pop
pushf
and
mov
dec
dec
xor
ret
shl
dec
inc
fisttp
push
rcl
xchg
xor
sub
push
mov
or
movs
add
jb
lods
fwait
enter
cmp
cmps
iret
and
mov
out
in
cmps
xor
cmp
les
jle
test
push
in
jne
fwait
jp
jae
jmp
loopne
dec
or
jae
loope
(bad)
mov
pop
jo
lock
js
je
rol
dec
test
jo
or
clc
adc
cdq
jge
mov
adc
mov
mov
bound
xchg
and
aaa
sahf
adc
daa
push
scas
jnp
sahf
in
push
frndint
push
pop
add
pop
call
sahf
xor
pop
cmp
add
js
fidivr
outs
push
cmps
hlt
inc
fist
cmp
and
daa
(bad)
mov
test
push
lahf
or
xchg
cdq
jp
out
ins
fild
bound
push
jae
fidiv
mov
push
(bad)
aas
cmps
add
ret
sub
mov
iret
add
and
mov
js
ja
mov
aam
(bad)
and
or
sub
mov
imul
pusha
pop
cld
and
lock
xlat
icebp
cmps
sbb
out
cmp
adc
xor
mov
in
ins
iret
push
adc
pusha
sbb
cmp
mov
nop
jne
mov
mov
in
cmps
xchg
(bad)
adc
pop
pushf
shr
int3
std
jmp
jmp
cmps
push
(bad)
mov
dec
xor
inc
outs
xchg
ins
jmp
dec
ror
sbb
inc
sub
push
jg
popf
cmps
lods
stos
pop
inc
clc
fisub
add
call
pop
dec
pop
aad
hlt
fbld
stc
cmp
clc
and
mov
daa
movs
addr16
jle
call
imul
mov
push
adc
retf
inc
jne
das
sbb
fiadd
fs
mov
pop
into
outs
inc
fst
dec
loop
and
push
cmp
sub
cmps
mov
and
cmp
cmp
sahf
or
xchg
xchg
jle
cmp
jnp
mov
pop
push
aas
lods
shr
scas
dec
into
add
ret
(bad)
nop
(bad)
xor
iret
sbb
jne
lds
dec
inc
cmp
sbb
into
inc
mov
ds
push
add
je
cdq
out
mov
hlt
ss
out
(bad)
lock
mov
fsubrp
sbb
or
test
push
cli
mov
clc
mov
(bad)
mov
scas
pop
arpl
aas
rcl
push
jbe
dec
sahf
fnstenv
mov
fdivr
mov
sub
cli
sbb
inc
ds
daa
adc
sub
jmp
call
fs
popf
call
shr
stos
xchg
into
mov
add
std
jle
rcr
cmp
push
and
icebp
je
test
mov
xchg
aam
movs
xchg
mov
stos
push
movs
mov
push
sub
and
sub
dec
push
sub
inc
inc
das
inc
fptan
test
xor
adc
das
inc
xor
aam
pop
ds
xchg
popa
test
mov
in
mov
dec
retf
outs
xchg
push
mov
mov
mov
pop
push
and
dec
push
ret
mov
xor
xor
mov
imul
add
adc
aas
push
inc
ins
mov
in
repz
jmp
dec
dec
ficom
shl
scas
jg
lds
ror
scas
pop
mov
inc
sub
jmp
inc
dec
ror
addr16
mov
shr
pop
inc
adc
sti
fwait
push
neg
xor
iret
mov
out
scas
inc
enter
mov
test
pushf
lods
push
jbe
lods
and
jge
push
test
xchg
loope
fsubr
pop
ret
movs
add
out
sbb
mov
cli
cmps
jge
(bad)
scas
mov
cmps
or
inc
and
or
hlt
sbb
dec
mov
and
shl
cmc
mov
jbe
stos
call
push
stc
test
aaa
addr16
int3
bound
mul
push
xchg
sahf
dec
cmp
adc
movs
inc
push
pop
sbb
rcl
nop
jmp
or
rcr
fdivr
and
inc
inc
dec
(bad)
or
(bad)
inc
dec
retf
inc
sbb
push
jo
jp
inc
out
add
push
je
mov
jp
adc
fimul
sbb
xchg
xchg
xor
xor
or
int3
jmp
sbb
(bad)
lock
pop
mov
sub
pop
adc
and
add
dec
inc
cs
mov
xchg
dec
js
in
cmc
pop
cmp
sub
mov
outs
mov
(bad)
aad
lahf
mov
inc
add
adc
jge
outs
hlt
dec
outs
jns
not
push
xchg
ror
pop
movs
jnp
sbb
mov
or
inc
and
jle
repz
test
int
xlat
sahf
ret
add
cwde
int
push
ds
sub
scas
jp
cmps
pop
fdiv
in
sahf
add
hlt
jecxz
fsubr
or
out
aas
mov
pop
ja
dec
(bad)
adc
mov
mov
adc
test
ror
and
mul
popf
mov
add
js
and
out
mov
mov
add
(bad)
in
mov
xor
fsubp
sbb
cmps
and
stos
push
jecxz
push
sub
jecxz
dec
mov
xchg
(bad)
inc
shl
repz
and
je
xor
les
test
sub
jo
addr16
ss
clc
adc
popf
inc
hlt
in
cmp
in
aaa
mov
addr16
dec
mov
xlat
cmp
test
or
sbb
stos
out
xchg
mov
dec
mov
inc
cmp
cmps
adc
mov
popf
enter
adc
test
(bad)
mov
nop
out
sub
neg
pop
adc
scas
outs
leave
nop
push
jb
addr16
sti
fstp
jle
jmp
add
push
and
xchg
fst
push
dec
sub
in
or
aas
dec
jb
mov
cmp
push
lds
cmp
sbb
inc
fimul
dec
and
inc
call
dec
fs
in
sbb
int
or
sub
and
jmp
mov
hlt
jmp
push
push
dec
jp
pop
sbb
adc
imul
imul
adc
ret
mov
ud0
mov
mov
inc
(bad)
cmps
hlt
or
mov
mov
retf
jge
inc
xchg
xchg
fst
addr16
push
pushf
in
push
and
in
(bad)
sbb
call
outs
mov
(bad)
inc
cmp
pusha
mov
mov
xor
sub
cmp
in
lods
fcmovb
push
lds
mov
imul
jecxz
and
or
xchg
fdivr
scas
outs
cld
jle
mov
push
(bad)
enter
mov
ficom
mov
mov
or
inc
jg
lods
sub
fbstp
movs
sub
pop
pop
popf
mov
mov
or
jne
call
test
xchg
retf
bound
or
xchg
or
sti
xor
push
sub
das
pop
outs
(bad)
stos
in
mov
out
mov
pusha
jle
leave
mov
jne
or
and
cmp
ss
push
es
adc
into
inc
dec
fld
mov
sti
frstor
test
mov
(bad)
inc
loop
dec
lds
cmp
jbe
arpl
pushf
mov
push
ds
fild
repnz
imul
(bad)
mov
repnz
enter
mov
jne
loop
jmp
loopne
adc
ret
stos
or
sub
inc
out
sar
ins
pop
pop
and
cmp
hlt
iret
add
outs
test
out
push
ret
push
mov
jg
(bad)
into
xchg
push
push
mov
mov
stos
dec
or
lds
fisubr
fsubr
cwde
loop
(bad)
cmp
and
jge
mov
cmp
push
mov
jge
int3
inc
clc
iret
add
out
mov
call
ss
fcomp
mul
inc
pop
sub
xchg
pusha
popa
pop
sbb
(bad)
and
movs
and
in
jp
lods
fwait
jns
aas
repz
xor
clc
(bad)
clc
inc
popf
retf
adc
or
ds
cmps
inc
push
sub
sub
mov
scas
cld
pop
adc
mov
fcom
and
jle
mov
jmp
movs
dec
das
mov
mov
adc
pop
ins
(bad)
lods
mov
int
add
pop
retf
mov
inc
jge
xchg
xor
data16
adc
cdq
dec
push
dec
clc
ins
shr
dec
jmp
hlt
jne
out
or
push
xor
jns
vrsqrtss
sbb
cdq
mov
xchg
mov
mov
dec
adc
iret
iret
inc
mov
sub
push
stos
xchg
nop
add
les
retf
or
jb
ja
dec
cmp
lock
aaa
cwde
mov
mov
xchg
pop
aam
sub
sbb
daa
add
stos
data16
cmp
inc
push
dec
add
in
push
bound
rol
fwait
cli
arpl
pop
push
rol
pop
scas
mov
sahf
or
ja
es
sub
xchg
push
mov
push
lds
pop
ret
pop
push
test
ins
push
lahf
xchg
mov
div
das
push
lea
cdq
hlt
fiadd
jbe
pusha
lea
mov
call
fild
(bad)
loop
jno
push
retf
call
jo
push
jnp
mov
dec
xor
sbb
iret
and
jns
(bad)
fcmove
inc
mov
arpl
jecxz
push
div
out
gs
pushf
mov
jl
leave
pushf
ds
lea
cmp
add
mov
mov
push
jl
pop
es
jg
jbe
cmp
lods
jae
lds
je
(bad)
jg
cmp
shr
inc
mov
je
sbb
jo
out
ret
or
fsubr
outs
out
xchg
pop
push
mov
call
in
cmp
inc
jno
pop
push
or
repnz
xchg
xor
xchg
xor
sub
jg
sbb
dec
fwait
cmp
sbb
fisub
stos
(bad)
sbb
mov
mov
adc
pusha
sub
js
ds
out
xor
or
push
jns
dec
call
jp
jge
and
adc
cmp
mov
fiadd
outs
repnz
ja
(bad)
mov
push
mov
aas
cmp
push
ds
push
jecxz
cmc
std
ret
lods
pop
mul
sbb
leave
inc
push
pop
mov
cmp
jns
push
repz
or
ror
push
sub
cmp
sub
add
data16
pushf
adc
cld
bound
loope
add
dec
dec
or
dec
xchg
popf
clc
xchg
ror
sub
cmp
popf
push
popf
push
out
adc
jle
(bad)
cmps
(bad)
mov
inc
jge
pop
outs
cmps
push
lds
jns
bound
pop
jmp
ds
dec
mov
xchg
sbb
inc
pop
aam
mov
pushf
test
push
cmp
pop
ss
add
mov
cdq
dec
xor
shl
icebp
nop
xor
lea
clc
cmp
(bad)
mov
inc
lds
sar
repnz
push
jne
js
mov
jmp
push
(bad)
hlt
(bad)
outs
sub
fistp
xor
sub
ds
int
push
push
mov
aas
cmps
outs
test
cmc
scas
fs
jg
cwde
ins
std
cmovne
push
cmps
arpl
mov
inc
test
sbb
jecxz
call
inc
sub
mov
xlat
mov
and
push
jbe
and
add
das
mov
jbe
repnz
enter
les
test
(bad)
cmp
(bad)
ja
sbb
inc
addr16
ret
pop
sbb
shl
scas
mov
sub
stos
aas
sbb
xlat
icebp
test
fbld
adc
(bad)
int
clc
outs
xor
jae
test
pop
out
sbb
mov
cld
sahf
xor
xchg
in
mov
xchg
retf
jnp
cmp
sti
or
stc
and
int3
adc
mov
in
js
mov
fnstsw
mov
fcmovbe
hlt
fsubr
movs
sahf
cwde
add
xchg
mov
pop
bound
cmp
lods
add
lods
stc
mov
sbb
mov
stos
scas
jne
mov
jb
cmp
(bad)
fmul
les
push
pop
cmp
je
stc
ss
jmp
test
adc
pop
neg
mov
cmps
rcl
push
dec
sub
xor
leave
ror
mov
loopne
js
sbb
jmp
pop
pop
mov
sbb
pop
movs
popf
retf
cmp
mov
fcomp
mov
enter
out
pop
pop
sti
xor
movs
jmp
hlt
in
mov
js
or
je
jnp
pop
fdivr
pop
call
mov
mov
test
xor
shr
xchg
ins
and
retf
push
in
push
test
cli
adc
arpl
fbstp
imul
or
add
sub
jmp
mov
ins
mov
xchg
les
test
xchg
int
call
sub
cdq
mov
frstor
(bad)
mov
mov
sub
lods
mov
xchg
test
push
(bad)
gs
bound
nop
ds
pop
fmul
stos
gs
jmp
clc
push
mov
xor
idiv
scas
xchg
xchg
scas
pop
ret
pop
mov
je
pop
data16
fld
xchg
ja
(bad)
stc
aaa
jne
inc
loop
or
jp
mov
sub
cwde
inc
dec
xor
add
xchg
hlt
cld
fld
popf
sbb
dec
je
nop
or
adc
xchg
jg
pop
add
pop
mov
mov
imul
loopne
rep
rol
and
(bad)
xchg
adc
cwde
add
cwde
cmp
push
jno
xor
inc
(bad)
push
xor
bound
push
xchg
adc
stos
out
dec
test
add
loope
pop
ins
sar
shl
test
cmp
mov
in
ror
cmp
(bad)
sar
jle
outs
adc
push
mov
cmps
mov
mov
inc
push
hlt
and
sahf
xchg
leave
mov
arpl
add
call
sbb
out
xchg
popa
cwde
arpl
ss
fwait
rol
in
push
dec
rcr
inc
mov
fidivr
call
dec
icebp
mov
pop
adc
xchg
cdq
cmp
pop
imul
iret
and
xchg
xchg
pushf
test
push
stc
std
xchg
(bad)
int
dec
cmps
cli
arpl
sub
lods
scas
push
add
push
inc
sbb
out
push
jae
scas
int
mov
mov
sub
repnz
push
mov
inc
add
fucomip
rcr
adc
enter
cmp
call
adc
aaa
movs
xchg
popa
and
push
iret
inc
aaa
xchg
scas
mov
xor
mov
fld
cmp
(bad)
gs
inc
les
scas
out
stc
movs
rol
sub
hlt
add
mov
arpl
xor
shl
push
jns
in
(bad)
js
mov
mov
cli
test
hlt
mov
stc
clc
add
cmp
or
push
ins
sub
mov
cmp
mov
iret
mov
mov
sahf
rcl
pop
inc
stos
imul
iret
retf
jns
sbb
sahf
mov
pop
mov
jmp
inc
or
data16
mov
jae
addr16
test
test
loopne
sub
sub
mov
rcl
fcmovnbe
pop
pop
iret
(bad)
fsub
cdq
add
or
mov
mov
sbb
out
pop
in
xchg
pop
jecxz
loopne
adc
xchg
movs
(bad)
sti
es
ss
xchg
sbb
xchg
stc
cmovno
out
cmps
in
outs
(bad)
js
call
into
popf
aas
mov
jmp
dec
mov
xchg
mov
jbe
ss
cmp
je
jb
sbb
and
test
xor
cmc
pop
imul
sub
int
shl
les
int
sbb
cmps
in
inc
stos
dec
pmaxub
dec
shl
test
add
jnp
push
das
pusha
call
aam
jnp
inc
lea
inc
and
and
mov
addr16
adc
pusha
cmps
adc
jae
stc
clc
jle
fwait
push
dec
sbb
add
sub
push
aad
jp
ja
dec
sbb
shl
int3
in
scas
inc
dec
inc
sub
test
repz
xchg
(bad)
bound
lods
and
pop
jp
gs
imul
sti
daa
fdiv
daa
mov
movs
aas
test
sub
sbb
xchg
jmp
scas
enter
fwait
mov
aaa
and
pop
les
push
into
dec
ss
cli
pop
jns
sbb
push
xor
fcom
call
jp
dec
xchg
jmp
ds
(bad)
xchg
cmp
cwde
add
test
cs
cmps
shrd
mov
std
xchg
dec
mov
aam
dec
aam
cmpps
pop
mov
xchg
mov
add
out
std
pop
dec
jns
mov
xchg
sub
pop
adc
sub
sar
mov
or
mov
enter
add
sub
jmp
mov
inc
fwait
inc
add
lahf
jae
adc
xor
mov
mov
xchg
jl
in
and
ret
inc
cmp
movs
test
sub
cdq
cld
or
ins
sahf
jmp
ja
or
dec
les
pushf
or
inc
mov
xchg
fldlg2
hlt
ret
jmp
les
retf
adc
(bad)
shl
push
pushf
xchg
and
(bad)
push
in
(bad)
xchg
jmp
lock
mov
in
stos
jae
push
ja
jecxz
jmp
xor
outs
ficom
jbe
sub
and
shl
pop
and
xchg
sbb
sub
or
dec
push
popa
loopne
jae
adc
stos
xor
sbb
pop
in
sbb
rcl
mov
outs
cmc
jg
rcl
xchg
mov
cmp
xchg
outs
or
scas
loope
mov
dec
leave
pop
leave
(bad)
push
dec
lods
jns
cmc
test
sbb
popf
cmp
xchg
retf
shl
xchg
add
fadd
mov
xor
cli
mov
xor
cmp
mov
xor
mov
(bad)
dec
cmp
je
mov
shl
test
dec
adc
mov
adc
aas
stos
sub
je
xchg
jmp
std
aaa
in
pop
jmp
jne
cdq
call
loop
and
int3
jb
cmp
dec
loope
aad
jns
xchg
push
(bad)
add
mov
mov
fwait
sbb
jo
hlt
jle
ret
repnz
inc
pop
in
aas
push
mov
retf
sub
nop
jmp
popa
scas
jp
jns
fldcw
jb
ins
in
sbb
pop
xchg
loop
xor
and
jae
call
jge
mov
shl
mov
and
mov
mov
fcmovb
pop
loopne
xor
test
and
sub
pop
dec
sub
jecxz
jne
dec
lods
pop
add
std
jae
mov
mov
add
jl
das
outs
fwait
sub
es
and
push
push
or
adc
sub
dec
xor
xor
pop
ss
scas
mov
repnz
xchg
mov
fnstsw
test
push
js
mov
mov
cdq
repz
and
icebp
jl
rol
cs
jb
pop
sbb
inc
test
xchg
mov
loopne
in
sbb
adc
(bad)
mov
popf
xchg
pop
cmc
ror
div
pop
xchg
jbe
stos
aas
out
les
out
pop
cmp
test
fdivr
jmp
in
ja
cmp
icebp
out
jle
scas
mov
dec
pop
retf
shl
in
jmp
dec
mov
xor
inc
jnp
test
cmp
jmp
imul
cmps
adc
mov
ss
retf
aaa
xchg
fdivr
inc
in
rol
fs
or
and
cmp
jo
add
scas
arpl
pop
fistp
in
repz
stc
ins
pop
jae
out
in
inc
into
retf
mov
push
std
fsubr
(bad)
xchg
out
repnz
aaa
imul
lods
xchg
pop
mov
mov
fsubp
xchg
(bad)
hlt
mul
movs
mov
sbb
add
jmp
sub
sti
movs
les
jmp
shl
push
je
je
cmp
adc
je
(bad)
push
lods
shr
jne
fadd
mov
nop
sbb
pop
daa
jle
pop
and
out
lea
test
int3
arpl
pop
ins
xor
stos
call
and
jmp
sbb
push
cs
xchg
rol
pop
jge
(bad)
sub
add
(bad)
pushf
mov
push
cld
std
cli
sub
xor
idiv
mov
or
xchg
sti
add
inc
jo
and
mov
inc
jecxz
jge
mov
mov
adc
or
ret
inc
jp
outs
xchg
dec
cli
add
stos
mov
cmp
adc
mov
mov
popa
mov
rcr
mov
pop
xchg
push
out
in
js
push
into
outs
ja
(bad)
sbb
bound
les
lods
pop
pop
ret
adc
data16
lock
pop
sub
sub
pusha
or
int3
jg
mov
(bad)
pusha
popf
mov
sub
sbb
dec
shr
dec
mov
pop
jo
lock
es
mul
rcr
sar
enter
mov
scas
xor
dec
std
add
movs
ins
mov
lahf
das
dec
fld
fild
rcr
xchg
nop
inc
lods
push
add
pop
sbb
gs
lea
cld
mov
adc
loop
popa
cmps
xchg
outs
repz
dec
daa
nop
mov
cs
inc
mov
mov
add
dec
les
inc
mov
xchg
and
iret
inc
call
xor
rol
mov
inc
mov
jne
pop
sbb
in
push
cmc
mov
pop
mov
sar
sub
fist
pop
add
jmp
adc
cmp
popa
daa
stos
jg
(bad)
call
ins
fwait
dec
into
daa
bound
mov
cmp
stc
sub
sbb
pop
push
lock
stos
scas
jbe
cs
stos
ret
xchg
cmp
xor
cli
xor
aad
pop
into
fs
or
mov
int
into
movs
scas
mov
inc
dec
pop
fsubr
and
sub
jbe
cmps
pop
cmp
stc
les
push
inc
neg
push
imul
shl
pop
inc
jo
pop
adc
(bad)
fmulp
ret
and
icebp
sti
dec
out
addr16
mov
std
js
shl
shl
retf
into
lahf
and
mov
jmp
lods
stos
and
pop
(bad)
mov
jno
push
sub
cld
or
push
dec
popa
(bad)
retf
pusha
xchg
in
in
(bad)
jne
or
cmps
fimul
test
test
popa
leave
mov
arpl
pop
xchg
in
inc
and
jl
add
or
imul
gs
daa
xchg
lds
xor
jmp
call
sbb
jmp
jg
pushf
pop
mov
ins
cld
inc
pop
call
mov
repz
neg
sbb
lods
movs
jns
int3
xchg
cdq
call
call
call
add
mov
push
call
inc
push
jge
mov
scas
jecxz
nop
mov
mov
sbb
das
pop
ins
sub
sub
add
sbb
cmp
cmp
mov
sub
(bad)
and
xchg
mov
mov
in
stc
les
enter
movs
jnp
xchg
pop
cmc
sub
aaa
data16
loopne
push
mov
xchg
or
int3
popf
pop
mov
movaps
in
ins
dec
mov
call
fistp
sbb
jmp
dec
dec
dec
xor
cmps
aam
jne
out
jg
mov
lds
mov
dec
pop
cmc
add
mov
es
imul
cmp
mov
xchg
pop
push
popf
test
cmp
xor
jo
cmc
fldcw
scas
sub
fist
loop
mov
int
and
mov
repnz
retf
pusha
push
adc
adc
xlat
mov
pop
sbb
int3
fadd
push
push
dec
add
cmp
push
cmp
cmps
stos
jo
aas
mov
xlat
call
push
jl
push
js
outs
xchg
call
sub
adc
or
xor
jle
imul
dec
dec
sub
jns
push
inc
and
cmp
adc
sti
mov
popa
mov
jmp
jae
out
or
inc
mov
or
(bad)
repnz
out
sar
mov
mov
xor
cmps
outs
cmc
adc
repnz
lods
cmp
cmps
push
test
dec
sub
add
out
loope
inc
or
pop
call
hlt
xor
test
frstor
call
pop
sbb
xchg
fist
(bad)
lods
dec
push
inc
jle
mov
aas
rol
cmp
add
sub
cmp
xlat
(bad)
xlat
mov
daa
jae
nop
aaa
cld
dec
addr16
add
rcr
mov
pop
dec
mov
pop
fadd
add
jp
sbb
push
adc
ret
(bad)
lahf
push
rcr
inc
jae
pop
int3
daa
call
xor
fwait
pop
mov
scas
jbe
(bad)
or
adc
inc
and
arpl
(bad)
sbb
mov
mov
pop
test
shl
ins
lods
les
xchg
mov
sahf
ja
push
pop
cmp
mov
mov
cmp
add
fisttp
inc
cs
mov
retf
sub
sahf
add
push
jb
jle
dec
mov
mov
dec
sub
es
mov
inc
cmp
adc
sar
jecxz
data16
jg
inc
xlat
sar
int
and
jbe
test
(bad)
shl
xor
in
shl
sub
neg
icebp
into
xor
sbb
or
or
out
add
sub
cmp
scas
jle
or
dec
pop
jl
call
jl
fisttp
(bad)
jg
outs
stos
cmc
push
add
scas
push
push
sbb
jl
shl
cmp
dec
and
add
sbb
add
add
and
pop
icebp
cmps
jbe
fbstp
inc
in
imul
push
pop
mov
lods
xor
inc
and
sahf
in
and
cmp
enter
pop
or
push
xor
sub
arpl
ja
cld
jl
lea
mov
sahf
retf
jae
std
retf
pushf
fldenv
mov
jg
(bad)
icebp
pop
inc
jmp
jno
jbe
fist
sub
inc
adc
mov
mov
push
push
cli
mov
or
xchg
or
mov
mov
or
jle
iret
or
mov
test
in
lea
scas
inc
push
xor
mov
inc
mov
xchg
cwde
lahf
mov
jmp
xor
daa
mov
add
loope
dec
sbb
xor
inc
or
or
out
mov
pop
xor
sbb
movs
call
fwait
icebp
adc
xlat
sbb
push
in
xor
xchg
call
xor
pushf
jge
je
out
mov
sbb
lock
jp
cld
lahf
les
stos
in
xor
pop
ins
mov
shl
retf
lods
sub
jne
lahf
aam
dec
vmovlps
ret
lods
ins
mov
ja
xor
retf
sub
sbb
nop
mov
jmp
pop
inc
push
sub
fwait
addr16
xchg
ins
addr16
lds
pusha
in
ins
clc
aas
scas
cmc
out
add
jle
xchg
arpl
in
mov
out
push
lock
cmp
cmps
cmp
xor
outs
das
or
enter
or
xor
dec
and
fsub
push
mov
dec
mov
(bad)
adc
xor
or
sub
push
xor
call
jb
fdivr
js
ss
sub
pop
or
cmc
push
in
mov
push
mov
sahf
add
dec
mov
push
(bad)
pop
test
add
arpl
inc
movs
test
mov
jg
lods
lds
sbb
or
xlat
mov
clc
jle
inc
inc
fld
add
je
mov
dec
or
push
dec
or
ror
dec
call
sub
and
jno
sub
push
inc
pusha
fisubr
shl
ror
push
dec
dec
and
push
cmp
dec
retf
enter
push
daa
xchg
loop
and
aas
bound
jb
sub
jae
repz
sub
push
pop
sar
pop
mov
sbb
das
stos
rcl
mov
je
mov
dec
(bad)
cmc
sti
dec
scas
bound
push
leave
in
mov
or
dec
inc
pop
adc
fld
jmp
sbb
push
jmp
iret
or
fxam
jp
push
bound
sub
call
and
cmp
jp
pop
sub
sbb
mov
add
mov
retf
pop
retf
add
adc
sbb
pushf
and
push
ret
mov
stos
and
jae
pop
jae
pop
xor
push
(bad)
mov
aam
imul
cmp
jne
push
lods
cmp
rcl
xchg
inc
inc
ins
mov
cmp
inc
push
mov
xor
out
(bad)
adc
pop
cmc
xchg
sbb
jl
or
ins
shr
sbb
sub
mov
(bad)
bound
cmp
xor
jge
sar
fdiv
pop
std
out
rcr
xchg
and
lea
add
pusha
dec
sub
fsub
jb
mov
jnp
sub
pavgb
mov
sbb
push
addr16
not
pop
rol
mov
out
je
cld
sbb
dec
(bad)
imul
inc
sbb
mov
mov
ja
dec
jno
xchg
mov
sti
and
sbb
jo
dec
mov
data16
add
sar
sbb
and
xchg
mul
shl
imul
fcmovnb
test
retf
les
xchg
stos
pop
mov
(bad)
iret
jle
or
retf
fisttp
addr16
push
xor
sub
cmp
sbb
inc
dec
out
jg
lea
nop
(bad)
mov
popf
sbb
jmp
fwait
mov
mov
pop
dec
push
stos
fistp
scas
mov
(bad)
xchg
mov
aam
es
sub
mov
add
mov
mov
dec
dec
adc
neg
call
sub
scas
retf
call
popf
aad
push
ret
jo
or
dec
ins
lock
sub
mov
xor
(bad)
or
pop
popf
iret
ss
nop
mov
clc
xchg
clc
mov
out
xchg
xchg
lock
mov
out
hlt
test
mov
cli
push
mov
dec
nop
jg
cmp
add
popa
test
jecxz
mov
(bad)
fisub
retf
in
mov
fistp
or
add
xchg
mov
mov
ror
or
mov
out
aas
or
jbe
and
inc
addr16
pop
daa
(bad)
xchg
loop
adc
popf
addr16
mov
mov
cmp
mov
arpl
shr
inc
sbb
mov
fisttp
sub
int3
bound
lds
jo
jbe
pushf
into
and
pop
adc
pop
cmp
inc
fdiv
mov
in
(bad)
inc
stos
repz
lock
and
inc
pop
jg
jecxz
mov
or
sub
(bad)
adc
or
in
imul
iret
adc
xchg
jbe
mov
aad
pop
retf
dec
push
lods
sbb
loopne
push
push
sbb
retf
jp
shl
or
jns
test
and
cmp
ror
and
rol
aaa
fimul
xchg
js
ret
mov
push
bnd
repnz
stc
cmp
loop
pusha
and
xchg
aam
xor
pop
and
jnp
cwde
int
(bad)
sub
call
hlt
pop
mov
fstp
into
or
nop
inc
xor
sti
xor
fst
jae
nop
or
gs
xor
adc
les
fdiv
cmps
mov
or
(bad)
cmps
or
jmp
pop
or
inc
inc
outs
and
out
int
mov
mov
ret
and
(bad)
out
push
movs
data16
ret
inc
add
mov
outs
cwde
cmc
pop
loop
fiadd
imul
fnstcw
movs
cmps
retf
inc
dec
mov
in
jp
adc
mov
mov
pusha
out
repnz
jo
mov
xchg
sub
in
(bad)
jb
jo
mov
lock
sti
mov
call
sahf
sti
xor
cmp
mov
(bad)
push
lds
or
jno
or
adc
ds
cli
test
inc
xchg
push
push
test
test
xor
pop
retf
or
das
call
sbb
movs
outs
mov
mov
jne
shl
xor
inc
and
fsub
lds
leave
push
popf
or
mov
inc
mov
sub
push
add
cmp
pop
cmc
push
sahf
cmp
dec
gs
xchg
fist
jge
mov
movs
jmp
xchg
xor
pop
jmp
lods
sbb
push
ficomp
fwait
mov
sahf
sub
outs
js
pop
and
into
fwait
cmp
mov
test
mov
retf
jne
add
pop
ins
mov
femms
sbb
sti
int
into
dec
pushf
rcl
xchg
das
mov
and
xchg
xchg
mov
dec
arpl
mov
retf
sbb
fild
dec
ror
pop
stos
and
gs
xchg
scas
jg
sub
aaa
je
sub
(bad)
int3
adc
daa
push
inc
int3
cmp
xor
cdq
popa
and
scas
sbb
mov
movs
pop
addr16
cwde
jmp
push
int
push
inc
jecxz
iret
clc
sar
cli
add
pop
mov
dec
jecxz
mov
mov
xchg
hlt
push
dec
shl
push
shr
iret
mov
xor
cmp
add
repz
bound
jmp
loop
test
fld
loope
cmp
adc
popa
enter
adc
push
jb
xchg
stos
scas
mov
jmp
ds
out
faddp
jns
rol
mov
jb
dec
sbb
pop
or
ja
sbb
adc
pop
in
daa
bound
or
dec
fwait
repnz
fcom
push
dec
ret
(bad)
je
ficomp
sbb
in
mov
aaa
xchg
dec
cmp
popa
lods
cwde
cmps
push
retf
das
(bad)
push
mov
push
iret
aam
in
test
icebp
rcr
push
pop
pop
xchg
inc
and
in
pop
test
xchg
test
inc
cli
mov
adc
mov
in
and
jmp
mov
std
fdivp
retf
push
jb
dec
push
fcmove
ret
inc
jo
jmp
cmp
mov
sbb
pusha
test
jns
mov
out
into
cld
inc
mov
fisttp
test
xchg
jbe
pop
pop
popf
xchg
ror
mov
cmp
popf
ret
mov
cs
cmc
and
jnp
loop
or
mov
cmp
inc
sub
or
popf
sbb
or
inc
push
aam
inc
imul
scas
outs
xchg
es
sbb
test
adc
in
pop
xor
inc
inc
shl
and
jp
stos
add
js
push
dec
and
les
imul
fsubr
cld
cwde
jb
dec
pop
stos
cmps
or
mov
hlt
test
jg
or
pop
es
mov
or
loop
pop
sbb
mov
mov
icebp
or
pop
dec
pop
push
outs
pop
retf
or
or
daa
mov
ror
fisubr
stc
stos
popf
sub
mov
fidiv
imul
mov
imul
mov
adc
push
aam
aaa
xchg
sti
cmp
imul
aas
dec
push
cmp
sbb
ror
movs
mov
cdq
test
sti
add
push
test
jne
retf
push
xchg
xchg
addr16
or
mov
add
mov
push
cmps
sbb
(bad)
ret
adc
cmps
xor
out
mov
pop
dec
outs
and
fmul
fcom
outs
ret
les
mov
pop
push
sub
inc
in
adc
lods
lds
jns
jecxz
adc
icebp
rcl
stc
movd
push
dec
add
adc
or
jns
xchg
fdivr
jg
push
cmps
and
imul
repnz
in
adc
arpl
pop
test
pushf
movs
ins
or
dec
or
sub
and
(bad)
mov
xor
retf
dec
mov
pop
pshufw
lods
cli
sahf
mov
dec
mov
out
es
add
call
jg
xchg
cmp
jp
add
push
out
cmp
aam
adc
and
push
mov
pop
sti
rcr
ins
ret
jo
mov
mov
pushf
je
loop
pop
cmp
add
in
or
aad
pop
sti
add
cmps
sbb
inc
nop
xor
mov
aas
stos
(bad)
xor
(bad)
out
jne
cmp
mov
xchg
jmp
ficomp
mov
push
adc
cdq
mov
cmp
and
lods
loope
leave
bound
inc
mov
push
call
dec
sub
cmps
dec
cmp
test
aaa
fs
sahf
mov
cs
cmp
cmp
test
mov
cmps
jge
shl
jp
mov
mov
inc
or
dec
xlat
or
arpl
add
cwde
and
mov
call
call
std
pop
cld
daa
dec
mov
jb
and
imul
sub
cmp
cld
adc
pop
mov
xchg
sub
mov
fs
add
pop
stos
and
test
sub
aas
pusha
mov
xor
add
mov
outs
rcr
arpl
push
pop
pop
icebp
push
out
cmc
call
stos
xor
stos
dec
mov
repnz
mov
pop
pop
xchg
jp
test
gs
(bad)
mov
push
fisttp
call
and
add
cld
pop
addr16
jge
mov
icebp
in
mov
mov
loop
nop
mov
cwde
pop
mov
jnp
mov
cmp
test
dec
mov
or
aaa
inc
outs
inc
neg
std
jae
(bad)
test
sbb
sub
test
add
daa
imul
ret
stos
mov
das
stos
and
loope
dec
popf
dec
test
inc
gs
or
(bad)
gs
dec
(bad)
jle
cs
loopne
mov
fnsave
int3
jmp
ja
and
inc
lods
lods
add
dec
mov
cmp
out
sbb
enter
(bad)
lahf
dec
adc
ins
push
jbe
gs
push
add
ins
pop
retf
or
shl
sar
mov
enter
call
les
xchg
push
pop
loopne
pop
push
cs
in
sbb
loop
lock
mov
movs
ja
adc
jo
or
lahf
or
cwde
sbb
inc
int
pop
pop
jns
pop
cmp
sbb
ret
ret
out
rol
retf
fidiv
mov
jg
ret
cmp
pusha
(bad)
pop
fisttp
xor
loop
push
push
gs
cmp
dec
out
mov
push
inc
sub
adc
cmp
inc
ins
rcl
test
rcr
dec
cmps
dec
cmp
shr
jne
jno
mov
inc
scas
push
icebp
xchg
in
retf
(bad)
mov
cmp
leave
call
jbe
adc
jecxz
retf
daa
mov
popf
push
add
xchg
cmp
leave
ret
cmc
and
inc
rcl
dec
popf
aaa
and
jbe
daa
xor
(bad)
mov
std
out
cmp
fist
xchg
(bad)
jb
and
out
(bad)
fs
or
and
or
fcom
mov
push
fcom
in
mov
mov
cmps
xor
imul
ins
pop
mov
imul
in
enter
push
aas
mov
(bad)
(bad)
test
cmp
imul
in
jge
scas
mov
lahf
gs
jg
mov
add
stos
fiadd
push
cwde
aad
(bad)
xchg
add
gs
fldcw
and
in
in
inc
jns
mov
add
ret
js
jmp
push
cld
cmp
imul
pop
pushf
mov
mov
icebp
or
daa
daa
je
ret
inc
arpl
and
les
push
push
mov
dec
mov
fidivr
pop
sub
out
in
lods
std
mov
aas
pop
(bad)
shl
mov
inc
cs
jnp
(bad)
cli
(bad)
adc
sbb
sub
sbb
pushf
rcl
gs
and
je
inc
hlt
pop
adc
mov
sub
cmps
cmc
add
sub
mov
inc
sub
sbb
xor
push
(bad)
pop
add
xor
jg
in
push
lods
and
pop
push
jb
xchg
dec
pushf
cmp
and
jo
mov
jbe
fwait
(bad)
movs
addr16
cmp
or
xchg
or
rcl
push
mov
ja
ret
cmp
push
or
xor
loop
mov
cdq
jb
clc
ret
xor
push
retf
ret
pop
inc
add
adc
out
out
fs
(bad)
jl
clc
mov
inc
aad
test
push
sbb
iret
pusha
mov
iret
mov
cmps
shl
inc
das
test
mov
pop
cwde
fidivr
fwait
mov
add
and
arpl
sbb
dec
inc
lods
sbb
mov
aaa
and
jmp
es
mov
int
push
jno
sub
jnp
xchg
outs
in
(bad)
push
inc
mov
rcl
scas
dec
or
jle
fcmovnbe
mov
push
xchg
or
add
sbb
jg
xor
sbb
pop
test
sub
mov
push
retf
fisubr
mov
adc
ss
fmul
jl
sub
test
cmp
sub
push
inc
mov
loopne
(bad)
ficom
ds
inc
cli
(bad)
push
sub
push
enter
mov
retf
fmul
dec
mov
js
mov
push
pop
pusha
jae
sbb
and
jns
xor
rol
jnp
loope
sbb
jno
inc
pop
jo
pop
arpl
push
int3
loopne
ds
sbb
mov
push
popa
or
fisttp
cld
sti
push
jmp
jmp
in
std
mov
outs
sub
xchg
loop
mov
out
loope
sbb
in
int3
dec
dec
jae
stc
sbb
jne
out
bound
mov
add
retf
fnsave
mov
cli
mov
scas
mov
lahf
push
mov
xor
add
dec
cmc
icebp
jmp
mov
fld
std
sub
(bad)
push
dec
test
in
test
gs
adc
(bad)
mov
test
push
pop
inc
call
stos
rcr
mov
cmp
sahf
cli
sbb
cmps
mov
lea
call
lea
sbb
enter
mov
sar
cmp
push
adc
add
fwait
sbb
daa
mov
sub
int3
fmulp
lds
mov
jge
in
and
or
outs
in
sbb
retf
or
push
in
or
pop
dec
aaa
mov
jae
lds
icebp
loope
xchg
test
pop
add
pop
mov
loop
lods
cdq
and
pop
shr
add
or
push
fwait
push
pop
cld
pop
sub
outs
mov
fiadd
inc
jmp
xor
push
cwde
xchg
jnp
sbb
sbb
xchg
repnz
pop
leave
outs
sub
call
and
inc
fsubr
mov
adc
sbb
outs
mov
int3
fld
(bad)
or
(bad)
mov
vfrczps
jle
imul
sub
mov
push
out
imul
lods
add
leave
jmp
in
add
mov
ss
cwde
ret
xor
ret
sbb
jmp
mov
xor
sbb
dec
sahf
outs
fwait
cmps
inc
unpcklps
rcr
cmp
or
and
jae
pushf
ss
sbb
aad
shr
inc
mov
pop
sbb
xor
xor
mov
imul
jle
fld
cmps
mov
lahf
mov
movs
mov
xchg
(bad)
adc
in
sbb
mov
loop
fimul
call
cmps
fcom
mov
mov
sti
test
add
and
ja
and
mov
repz
or
aas
(bad)
data16
clc
xor
pop
in
mov
cmps
out
cmps
mov
scas
mov
aad
adc
jp
adc
or
mov
sti
fisttp
lds
int
jbe
test
test
sbb
mov
adc
mov
push
dec
dec
add
push
test
xchg
pop
fadd
or
lea
inc
xchg
(bad)
(bad)
and
mov
cmps
enter
adc
js
add
jns
xchg
mov
dec
dec
push
pop
ret
call
cmp
ret
push
nop
push
sub
lds
jb
and
mov
mov
pop
xchg
jl
test
push
ror
mov
enter
(bad)
hlt
dec
pop
arpl
xchg
shl
fwait
js
fidiv
sub
pusha
mov
jae
outs
push
shl
inc
push
in
push
cmp
push
outs
loopne
enter
mov
(bad)
fisttp
cmps
scas
das
es
jno
push
mov
mov
ins
aam
outs
fldenv
mov
out
fist
adc
jmp
jle
ret
push
push
icebp
es
lds
pop
inc
cmp
pop
loop
iret
push
mov
ja
cmc
aaa
xor
clc
lock
ret
push
scas
cld
pop
sub
sub
mov
mov
jne
ins
push
mov
and
sbb
pop
stos
ins
pop
pop
inc
sub
xchg
sbb
push
fsubr
scas
cld
cmps
xor
sahf
jmp
mov
pop
scas
jnp
cmp
xchg
jnp
cmp
shl
xchg
(bad)
pop
cmps
popa
stos
shl
mov
xchg
adc
cmp
xchg
fcomp
test
dec
sahf
add
sbb
arpl
pop
repnz
jg
mov
fcmovb
mov
ret
in
and
arpl
fwait
sub
mov
xchg
pop
in
div
std
ja
mov
ret
dec
and
pop
sahf
into
les
jb
xchg
pop
pop
retf
push
mov
mov
pop
cmp
ins
movs
inc
arpl
xchg
mov
add
sub
jge
test
cmp
mov
cwde
jl
xor
outs
pop
dec
test
pop
test
jmp
cmp
mov
jo
leave
push
addr16
popf
mov
jg
adc
sbb
and
xchg
aaa
in
dec
or
repz
out
jle
inc
arpl
mov
jbe
mov
int3
retf
call
and
sbb
ret
(bad)
sbb
jbe
out
pusha
pop
mov
push
repz
fldcw
movs
mul
ror
cdq
fbld
mov
lock
mov
push
movs
xor
jae
sub
push
lods
arpl
int3
and
sahf
xor
sti
push
sbb
daa
inc
push
aam
call
xchg
int
push
push
adc
sbb
adc
stc
xchg
xor
inc
stos
adc
out
daa
in
and
jno
scas
lock
pop
adc
sti
fimul
nop
cs
dec
int3
icebp
sub
jg
pop
jp
pop
jne
mov
in
gs
leave
gs
or
sbb
std
imul
push
addr16
loope
aaa
lea
adc
imul
jg
lods
mov
fnstenv
jmp
ficomp
mov
push
popf
fisttp
(bad)
arpl
lods
pushf
sub
push
pop
loop
mov
xor
cmc
pop
jne
popa
sub
or
pop
and
sub
ins
dec
xchg
out
inc
lock
into
ins
test
nop
scas
push
ss
movs
mov
js
stc
cwde
and
push
push
dec
sub
fidivr
cdq
sub
popa
jmp
clc
nop
mov
test
je
inc
sub
(bad)
rcl
popa
pop
xor
pop
fnstsw
or
xchg
jmp
in
ret
hlt
or
fwait
retf
inc
shr
jp
fucomip
repz
cs
jb
ret
dec
inc
fcom
mov
mov
das
arpl
sbb
and
push
push
sub
add
dec
inc
xchg
std
loopne
jno
pop
push
idiv
pop
mov
imul
call
out
xchg
sub
xor
mov
cs
push
out
dec
out
cmc
jbe
pop
sub
in
ins
out
stc
mov
xor
add
push
pusha
xchg
and
inc
call
mov
nop
push
mov
pop
popa
sub
hlt
scas
lahf
jbe
jnp
arpl
adc
push
push
jmp
stos
rol
pop
mov
jns
and
and
pop
mov
fs
lods
mov
mov
jne
scas
sbb
jg
or
stos
bound
sub
jns
movs
add
sbb
mov
cmp
ja
enter
xor
push
retf
pop
dec
mov
(bad)
pop
jno
mov
lea
daa
mov
xchg
fdivr
push
sub
sub
add
push
push
in
push
jnp
push
jo
or
pop
adc
sub
inc
xchg
xchg
pushf
pushf
mov
jp
adc
and
nop
jg
daa
dec
iret
mov
and
xchg
loopne
repnz
int
or
pushf
adc
call
int3
inc
(bad)
repnz
push
sub
int
in
in
es
inc
xlat
nop
(bad)
cli
xchg
gs
sub
add
jle
fsubr
cmps
push
ror
ret
jmp
cmp
push
sbb
mov
add
push
mov
mov
fsub
jp
xchg
scas
(bad)
movs
imul
fdivr
sbb
push
pop
inc
fidiv
add
mov
sub
cmp
mov
rol
loope
and
cli
clc
sbb
scas
cmp
adc
stos
ins
das
retf
in
add
xor
and
ja
in
loope
cwde
lods
into
jno
ss
out
movs
inc
mov
cmp
js
leave
icebp
stc
dec
pushf
jno
sbb
mov
cs
inc
icebp
lods
jbe
out
in
dec
rol
call
sub
sbb
push
daa
inc
push
loopne
push
test
outs
sbb
cwde
outs
call
loope
cs
sub
sahf
ret
sub
(bad)
jno
shl
adc
add
mov
jae
pop
das
stos
push
lahf
jno
mov
das
dec
pop
cmp
out
sbb
jg
mov
push
jb
cmps
imul
and
lock
mov
jne
mov
inc
icebp
push
xor
add
adc
movs
out
mov
or
mov
xchg
or
push
pop
jns
dec
aas
jg
cld
cmp
and
adc
test
sar
js
dec
out
cmp
inc
clc
dec
pop
jge
push
mov
mov
stc
add
sub
add
jmp
jl
pop
push
(bad)
nop
pop
or
xor
dec
adc
mov
popf
stos
cli
fstp
sbb
mov
pop
lods
sbb
jmp
xor
push
adc
push
jno
dec
test
leave
shr
test
scas
jl
inc
lahf
cmp
cmc
adc
mov
jmp
add
fstp
icebp
into
idiv
fst
jge
in
and
arpl
les
mov
mov
dec
loop
lods
vminpd
jg
test
adc
lds
push
nop
cmp
or
popa
jnp
jno
dec
das
mov
adc
dec
test
test
xlat
xchg
clc
dec
jae
xchg
out
lds
retf
lods
xchg
outs
clc
cli
dec
inc
jecxz
jnp
jmp
test
jg
bound
mov
(bad)
das
sbb
repz
mov
cdq
pop
xor
test
mov
adc
jnp
xor
lock
inc
aam
lahf
lods
push
inc
mov
stos
adc
in
dec
arpl
test
leave
mov
js
jg
add
in
adc
stc
add
push
or
arpl
jmp
int
adc
adc
jo
shl
jmp
inc
pop
cmp
cmps
inc
cmp
jmp
push
(bad)
sbb
test
imul
call
pop
dec
aas
push
xor
add
out
pop
gs
pop
sub
add
and
rcr
jae
or
mov
jae
call
or
shl
retf
pop
int
jp
pop
addr16
jae
mov
xor
xchg
sbb
sbb
inc
inc
lea
mov
xchg
push
jecxz
mov
jle
in
jg
fld
push
out
pushf
repz
test
popa
cmp
adc
jb
and
xchg
and
jnp
cmp
mov
push
xchg
mov
rcr
out
sti
xchg
adc
jg
gs
cmp
cmc
loopne
test
cmp
(bad)
ftst
or
cwde
rcl
push
or
lds
in
pusha
and
mov
push
adc
mov
arpl
cli
push
xchg
arpl
repz
aas
out
rcr
enter
iret
inc
xor
enter
das
sub
fldenv
push
(bad)
jl
and
dec
test
enter
std
pop
std
js
push
std
aas
add
test
cmp
mov
add
push
mov
(bad)
fcomi
jo
fs
cmp
mov
adc
inc
adc
mul
cli
sbb
lods
test
or
call
loopne
push
jnp
mov
or
mov
fiadd
cmps
mov
pop
shr
pop
mov
int
xor
xchg
hlt
cs
dec
dec
adc
mov
sbb
sahf
jae
add
cdq
pop
push
aaa
dec
dec
fadd
arpl
mov
inc
movs
rol
jmp
lock
repz
xchg
test
sub
sahf
mov
pop
push
mov
bound
jns
retf
dec
pop
jmp
(bad)
out
jo
nop
mov
xor
mov
int
out
xchg
mov
mov
dec
xchg
sub
push
xchg
xor
push
mov
sub
loop
pop
pop
xlat
repz
xchg
cmp
dec
dec
std
xchg
jns
popf
inc
cmp
cmps
push
inc
clc
and
jle
push
mov
or
in
cmp
add
and
hlt
daa
icebp
sub
sbb
test
push
ja
inc
push
mov
add
addr16
add
push
cwde
pop
mov
pop
adc
cwde
sub
adc
cmp
aaa
mov
push
mov
jb
je
lods
not
push
mov
(bad)
stos
dec
push
je
jge
xchg
nop
mov
out
pop
dec
dec
add
call
push
repnz
mov
out
push
xor
lods
jecxz
outs
call
gs
jae
mov
test
adc
je
imul
cwde
push
mov
push
lock
jge
and
push
push
dec
mov
dec
pop
arpl
mov
adc
xchg
std
fadd
fmul
xchg
cmp
(bad)
push
jge
or
loop
jno
sbb
iret
and
shl
inc
and
mov
loop
cmc
fcom
(bad)
out
sub
outs
cmc
icebp
test
test
mov
mov
cmp
xchg
mov
int
lds
or
stos
sub
dec
test
es
pop
add
push
mov
jnp
into
sahf
mov
test
cdq
dec
jb
leave
mov
js
fidiv
hlt
sub
add
xor
pop
fcmovnb
add
in
stos
mov
jp
(bad)
icebp
adc
sub
aad
mov
ds
cmp
add
sbb
je
add
das
arpl
xchg
cs
movs
xor
aaa
loop
inc
jge
mov
icebp
outs
push
mov
mov
jecxz
inc
mov
mov
test
push
mov
adc
hlt
push
out
xchg
fidiv
add
xor
mov
daa
cmp
jecxz
daa
jecxz
mov
sub
jnp
jmp
push
jmp
mov
mov
out
iret
mov
xor
pop
and
scas
push
jbe
out
aam
or
mov
scas
mov
(bad)
lds
in
mov
cmps
add
xor
cmp
daa
fcomi
pop
xchg
inc
sub
push
push
retf
push
push
sbb
cmp
mov
hlt
mov
cmp
adc
push
lds
imul
cmc
movs
mov
sbb
cmp
push
cmc
xchg
cmp
mov
dec
mov
push
jne
jno
xchg
jmp
hlt
and
lahf
sbb
pop
cdq
inc
fld
ror
jbe
and
jnp
loopne
scas
div
dec
add
mov
ret
repz
stc
int
jae
pusha
ins
pop
sbb
xor
ja
(bad)
jno
movs
mov
jp
mov
lock
mov
xchg
hlt
mov
jno
out
ja
fs
jae
sbb
out
hlt
mov
pop
mov
repz
pop
pop
sbb
ret
mov
repz
fcom
mov
in
xchg
dec
in
sbb
cmp
pxor
movs
scas
int
fstp
cwde
outs
mov
outs
mov
mov
cmc
xchg
xchg
div
rcr
ins
ins
jge
addr16
push
inc
(bad)
cmc
adc
jge
in
adc
movs
mov
les
mov
cld
ins
scas
fwait
cdq
shl
out
mov
push
sbb
push
adc
popa
dec
(bad)
cmps
data16
(bad)
hlt
jge
int
pop
out
and
iret
mov
outs
add
xchg
pop
enter
dec
pushf
push
test
xchg
mov
jl
jle
add
and
inc
cmps
jnp
cmp
int3
adc
jge
or
jmp
ja
dec
mov
addr16
mov
call
jmp
cli
jbe
mov
into
in
xchg
push
fstp
adc
(bad)
stos
dec
or
xor
es
outs
mov
sar
arpl
adc
mov
adc
sbb
jne
(bad)
mov
xchg
dec
mov
pop
sbb
test
arpl
pop
mov
arpl
or
add
shr
jb
pop
inc
fisub
popf
mov
mov
cmp
push
adc
mov
ss
mov
(bad)
loopne
sti
sbb
in
imul
push
ret
pop
jb
sbb
or
adc
daa
cmp
call
sbb
dec
fild
cmp
or
movs
test
add
and
out
adc
inc
outs
mov
jg
popf
mov
pop
push
pop
and
xchg
push
mov
push
popf
icebp
cmc
cli
paddusb
rol
inc
add
adc
(bad)
mov
stos
mov
add
xor
mov
mov
popa
int3
aaa
pop
add
jecxz
sahf
inc
ins
inc
add
inc
sbb
or
out
pop
adc
daa
adc
pop
cmc
sbb
ins
enter
stos
or
push
adc
jle
mov
(bad)
and
push
into
dec
fstp
push
scas
xor
adc
out
enter
in
bound
cld
adc
cmp
and
rcr
mov
in
shl
(bad)
(bad)
js
aas
jne
jmp
push
sti
sub
pop
bound
repz
ds
cmp
push
cmps
(bad)
outs
push
pop
sub
fwait
sbb
xor
cli
xchg
mov
jb
push
dec
dec
icebp
push
lea
xor
(bad)
rcr
cwde
iret
sar
or
xchg
mov
mov
fcom
mov
in
adc
mov
repnz
and
pop
pusha
jns
popa
shl
pop
nop
stc
dec
inc
cmc
repz
pop
mov
mov
jmp
and
mov
sbb
xor
xchg
mov
or
xor
cld
push
xor
mov
add
sub
rol
inc
sub
into
outs
mov
xlat
mov
xchg
inc
mov
popa
jne
pop
loopne
enter
xor
xchg
repz
out
aam
lods
adc
push
ja
cmp
movs
or
and
jno
pushf
test
cdq
scas
imul
fst
stos
inc
(bad)
and
call
xlat
mov
push
mul
dec
ins
test
sub
mov
jbe
lods
in
mov
mov
inc
push
sub
xor
pop
in
push
sub
push
shl
loope
(bad)
dec
fs
pop
mov
retf
vshufpd
outs
mov
div
mov
fxch
retf
cmp
outs
inc
xor
das
push
sbb
stc
out
shl
add
std
sbb
stc
(bad)
stc
mov
ret
adc
push
inc
mov
mov
jmp
loope
mov
pop
xor
es
inc
rcl
ret
mov
sti
pop
repz
and
in
mov
enter
sbb
mov
fwait
push
call
es
xchg
cmps
fidiv
aas
daa
sti
popf
mov
pop
mul
mov
inc
push
push
out
daa
imul
or
je
(bad)
mov
jno
test
xor
sbb
and
stc
jns
aas
addr16
ds
xchg
xchg
add
jo
je
xchg
cmp
cmp
popf
and
adc
fmulp
test
cmp
mov
xchg
mov
scas
or
mov
lock
xchg
mov
dec
in
push
mov
mov
xor
cld
repnz
adc
aam
dec
out
imul
in
jnp
inc
leave
into
pop
and
mov
mov
into
clc
js
imul
xor
inc
repz
das
mov
jmp
adc
jg
lds
movs
stos
push
rol
ret
out
jns
jo
jp
adc
cmc
cwde
imul
xlat
mov
push
or
xchg
jg
ror
push
loop
xor
push
fld
jmp
(bad)
repnz
jl
pop
fidiv
mov
jmp
fwait
xor
call
icebp
push
push
push
call
xchg
lods
jecxz
push
arpl
adc
call
in
mov
jno
outs
in
pusha
clc
data16
cmp
out
retf
ret
cmp
inc
mov
cmps
mov
push
mov
int
into
dec
fidivr
dec
(bad)
fld
aam
sbb
sub
xchg
mov
imul
outs
pushf
leave
lods
in
xor
and
aaa
jns
sbb
sbb
xor
out
movs
cld
in
mov
pusha
dec
add
jns
data16
sbb
dec
fsub
add
shl
pop
xchg
mov
shr
ja
sub
xor
cdq
test
or
sbb
pushf
pop
sbb
test
leave
mov
pop
int
repnz
outs
arpl
test
sub
mov
call
loop
mov
sbb
push
sub
xor
fisttp
outs
lea
push
cld
push
mov
xchg
pushf
sub
enter
jbe
mov
es
dec
mov
std
call
ins
out
push
xor
xor
fucomip
cmp
fcom
mov
daa
mov
or
dec
dec
push
adc
pop
mov
ins
bound
je
call
aam
xlat
mov
add
idiv
popf
dec
stc
(bad)
(bad)
cs
sbb
sub
cwde
jp
mov
outs
xchg
mov
loop
test
imul
imul
cld
(bad)
imul
imul
outs
ret
stos
or
pop
jmp
cpuid
test
sbb
dec
pop
sub
scas
inc
jmp
arpl
ins
loopne
aad
push
xor
add
xor
sub
push
push
pop
fadd
outs
cli
sbb
loope
iret
jge
rcr
add
cmp
das
pop
jp
sbb
sar
arpl
or
popw
mov
sbb
es
outs
data16
in
xchg
stc
sar
hlt
xchg
movs
mov
sub
sbb
je
sbb
js
test
xor
or
push
ret
lods
xor
jg
jle
dec
in
or
add
sub
sbb
jno
test
retf
mov
cwde
pusha
xchg
adc
aam
and
xor
shl
mov
pop
cmps
xor
mov
pop
test
enter
inc
mov
out
(bad)
jmp
mov
scas
ror
dec
and
in
mov
in
retf
xchg
dec
neg
add
sbb
iret
mov
xchg
sbb
jg
xor
dec
pop
or
leave
pop
xchg
(bad)
xchg
mov
or
bound
inc
mov
frstor
or
dec
adc
lods
cmp
ss
pop
xchg
ret
push
mov
lods
cmps
out
inc
loopne
and
xor
jge
and
cmp
ss
cld
fsubr
aad
out
jmp
mov
out
jae
push
add
div
push
add
in
gs
scas
ds
ret
mov
ins
jecxz
popf
dec
push
inc
jg
aaa
pop
xor
pop
and
cmp
test
sub
push
into
pop
clc
fdiv
lds
fnstsw
add
movs
or
xchg
rcr
clc
imul
ds
xor
inc
mov
jno
out
push
je
icebp
in
cdq
or
retf
or
sti
sar
mov
int
mov
xor
imul
jmp
(bad)
(bad)
ja
pop
pop
outs
movmskps
jg
dec
cli
jae
es
sub
fcmovnbe
pop
test
dec
jp
int3
popa
fisttp
sub
outs
cmp
jl
push
adc
or
(bad)
int3
(bad)
add
pusha
jnp
icebp
(bad)
ss
aam
mov
das
and
cmp
int3
jecxz
xchg
fdivp
aad
jmp
sub
pop
retf
xor
pop
sbb
push
loop
leave
pusha
cli
adc
mov
xchg
stos
out
add
outs
and
add
call
mov
fstp
pop
sub
clc
xor
inc
nop
iret
xlat
add
dec
and
mov
or
push
add
mov
ja
inc
rcpps
xor
jecxz
fst
push
xor
and
and
dec
pop
sub
add
fmul
xchg
jns
ins
fcom
inc
outs
outs
sub
data16
ror
js
inc
sbb
adc
lock
pusha
mov
jp
xchg
add
adc
ret
xchg
and
test
pop
xchg
add
lods
mov
xor
cmp
mov
inc
dec
inc
xchg
inc
cmps
sub
repnz
outs
repnz
pop
pop
jae
jae
push
fsubp
(bad)
shl
xchg
repnz
aam
sbb
iret
fcom
mov
xchg
or
fild
clc
jnp
jg
mov
ret
je
lea
cmps
xchg
nop
cmp
fsub
push
daa
out
mov
dec
or
fst
ficom
fsub
dec
pop
daa
mov
adc
push
xchg
mov
fdivr
sti
ins
pushf
popa
rcl
lea
sbb
cld
mov
pusha
call
fs
jbe
jle
jmp
add
mov
jbe
xchg
sub
mov
mov
jmp
mov
enter
std
movs
cdq
iret
jg
sub
lea
jno
movs
adc
lods
cs
inc
pusha
sub
jecxz
dec
pop
test
test
mov
xchg
cli
scas
call
push
ror
jnp
stc
lods
out
mov
xchg
or
mov
sti
push
push
leave
push
mov
hlt
pushf
push
cld
sahf
fisubr
jns
jg
int3
test
jb
mov
cs
addr16
(bad)
std
lock
mov
add
xor
ins
xchg
cwde
mov
push
mov
or
xchg
and
inc
cli
data16
mov
mov
xchg
jg
mov
mov
sub
ins
mov
push
das
es
stc
push
adc
into
xchg
(bad)
fidiv
and
dec
adc
add
push
daa
or
mov
mov
and
je
or
sbb
rcl
rcl
popf
test
adc
pop
cmps
xchg
vpavgb
dec
fcomi
(bad)
ss
mov
stc
adc
nop
cmp
pop
shl
in
repnz
popf
adc
inc
fcom
fstp
mov
sbb
pop
sbb
add
loopne
and
pop
jge
jae
dec
(bad)
adc
dec
mov
add
mov
les
outs
sbb
cmps
outs
xor
mov
push
xor
xchg
jnp
xor
ret
(bad)
aaa
mov
cmp
cmps
mov
cmp
and
sub
xor
mov
cli
pop
mov
fimul
mov
cdq
cld
idiv
mov
test
in
xchg
scas
xchg
stos
and
aas
hlt
shl
mov
cmp
shr
sahf
adc
iret
add
push
xor
pop
jae
popa
inc
push
popa
pop
inc
or
sub
ja
sbb
jp
call
retf
test
inc
out
cmp
cmps
hlt
mov
cmps
enter
movmskps
add
pushf
cmp
mov
das
fdivrp
push
ds
sub
call
pusha
push
push
inc
pop
mov
and
ins
mov
call
add
jp
ret
mov
add
or
xchg
call
mov
icebp
sub
lods
pop
xor
inc
in
jl
lods
pop
mov
push
ins
clc
xchg
xchg
xor
and
aad
jle
int3
and
(bad)
mov
pop
(bad)
(bad)
std
mov
jne
jno
xor
mov
ins
mov
retf
dec
arpl
cmc
sbb
dec
fbstp
adc
dec
push
repnz
in
pop
ret
dec
adc
inc
sub
test
pop
pop
aaa
dec
xchg
adc
std
mov
mul
fsubr
mov
fidivr
jne
repnz
stos
mov
xchg
inc
sbb
pop
sub
lods
xor
jne
sbb
rcl
xchg
push
pop
(bad)
test
lea
test
pusha
add
add
out
enter
es
pusha
cld
mov
add
jne
xor
retf
retf
sbb
xchg
cli
cs
movs
xor
jae
or
out
sub
mov
mov
sub
pusha
ins
xor
add
out
inc
rcl
sub
div
xor
or
jmp
repnz
rcr
sbb
push
ror
jns
jecxz
popa
dec
cmp
cmovnp
xchg
push
out
loop
fwait
mov
add
test
bound
fwait
mov
jle
add
push
popa
adc
sbb
mov
mov
xchg
pop
jbe
imul
ins
shr
(bad)
das
jmp
jl
lahf
fidiv
adc
out
add
lahf
mov
cmp
mov
js
(bad)
out
xchg
jns
mov
or
repz
and
add
std
imul
lock
pop
cmp
mov
jg
int3
or
mov
test
and
stos
push
(bad)
fmul
cmps
cld
out
and
fmul
cwde
jg
xor
pop
pop
das
iret
or
mov
mov
cmp
push
mov
fist
gs
cmp
inc
movs
repnz
add
pushf
inc
xchg
sbb
in
add
add
push
mov
xchg
(bad)
push
out
les
and
or
sub
dec
mov
lock
adc
jp
push
push
rcl
imul
sub
imul
aaa
pop
jle
jmp
je
inc
sahf
pop
dec
outs
push
sti
pop
mov
dec
inc
ss
cmp
lahf
bound
test
cdq
ins
jmp
jbe
cmp
stc
pop
fldcw
mov
push
xchg
mov
push
not
xchg
jb
sbb
pop
xchg
push
in
add
and
lods
pop
cld
sub
ds
push
mov
ret
adc
push
retf
or
jmp
add
and
xchg
out
jnp
ins
mov
ret
add
xchg
sub
sahf
or
int3
popf
lock
lock
cmc
bound
cwde
mov
imul
xlat
and
mov
xor
lock
(bad)
or
pop
xchg
sahf
mov
push
test
scas
xchg
mov
xlat
(bad)
mov
sub
push
xor
inc
cli
jns
cmps
ss
mov
rcl
imul
sbb
aad
push
add
test
cmp
add
pop
(bad)
sbb
mov
inc
ror
pushf
in
lods
add
mov
inc
outs
push
loopne
jb
add
and
fsubr
stos
or
imul
dec
push
(bad)
push
(bad)
push
rcr
rol
mov
(bad)
fcmovnu
scas
xor
cmp
jne
mov
loop
loop
xchg
js
fwait
addr16
jbe
push
sbb
xchg
push
mov
adc
sbb
emms
jae
and
and
xor
push
cmp
out
jecxz
popf
mov
dec
mul
(bad)
mov
xchg
inc
jne
cwde
push
cmp
aad
call
sub
not
jb
sub
jns
and
sti
xchg
inc
cmp
pushf
rcl
adc
lds
inc
inc
fdivr
movs
dec
jecxz
(bad)
sar
cmp
and
pop
or
adc
add
add
add
mov
add
and
dec
jp
repnz
ror
inc
ds
imul
mov
data16
mov
cs
pop
retf
loopne
aas
cmp
dec
push
sbb
lea
inc
mov
icebp
(bad)
nop
push
mov
jge
icebp
and
lock
and
push
mov
mov
in
neg
movs
cmp
test
and
fistp
ins
jmp
ds
mov
pop
je
sub
add
jnp
ret
loope
mov
cmp
nop
ret
fstp
je
sbb
sbb
shl
jne
mov
ror
test
cmp
shl
jmp
fcomi
rcl
sbb
imul
fadd
jecxz
test
inc
arpl
int3
sbb
jle
je
mov
sub
cwde
dec
outs
in
das
jecxz
enter
arpl
out
scas
add
add
in
mul
xor
iret
push
or
loopne
mov
inc
dec
fcmovbe
mov
loope
fsub
push
in
pop
popa
and
test
sub
xchg
bound
jl
dec
les
dec
into
mov
mov
and
push
mov
clc
and
sub
sub
push
mov
mov
je
data16
(bad)
sbb
inc
repz
add
fistp
lea
stos
sbb
shr
mov
inc
mov
or
adc
adc
in
adc
push
cmc
jbe
int
push
sbb
jmp
inc
dec
out
das
es
pop
cli
dec
jno
scas
push
mov
imul
xor
add
addr16
int3
sub
pop
pop
rcpps
cmp
sub
xchg
inc
addr16
test
sub
lock
jecxz
sbb
gs
jo
cmp
js
cmp
pcmpeqd
mov
fmulp
push
je
mov
push
mov
xor
cmp
cmp
pop
or
sahf
xchg
adc
mov
pop
out
fidivr
and
scas
sbb
pop
sahf
outs
test
cmp
dec
sbb
movs
mov
stos
aas
pop
loop
push
mov
scas
inc
les
add
mov
mov
add
inc
push
aam
xor
lods
mov
cmps
icebp
arpl
sub
repnz
push
nop
lea
xchg
push
push
leave
cmp
jnp
xchg
xchg
not
aad
ret
retf
repz
(bad)
jle
clc
lods
into
jmp
or
retf
arpl
cmp
jmp
add
cmc
push
inc
fldcw
or
out
add
(bad)
mov
jb
sar
icebp
fwait
pushw
cmps
dec
mov
jge
ins
hlt
mov
outs
rcr
in
add
pop
lsl
movs
int
dec
or
mov
dec
add
push
adc
and
loop
int
xor
adc
add
les
sub
sbb
mov
les
movs
ja
cld
or
int3
loopne
sar
ins
adc
jb
into
pop
push
repnz
out
sub
add
out
ins
hlt
jo
adc
call
jmp
cmp
sub
cmp
mov
rcl
inc
sti
iret
gs
pop
mov
pusha
mov
xchg
mov
stos
ret
inc
xor
in
mov
inc
mov
cmc
mov
std
fist
sbb
dec
jbe
push
add
jbe
add
mov
mov
inc
mov
je
sub
and
aas
arpl
fs
xor
or
scas
movs
pop
mov
pop
(bad)
(bad)
mov
pop
aam
cmp
(bad)
jo
rol
xchg
js
js
lods
outs
int
mov
gs
push
jns
inc
test
add
jmp
in
and
cmp
ja
push
std
mov
jmp
sub
or
fstp
xchg
(bad)
dec
loope
and
jmp
clc
loopne
imul
jecxz
cwde
out
ds
xchg
sbb
mov
fiadd
aam
push
dec
in
mov
idiv
int
push
dec
pop
imul
ds
xlat
int3
cmp
dec
loop
inc
mov
mov
mov
inc
cmp
fsub
push
outs
call
data16
imul
data16
mov
jl
or
bound
fwait
pop
mov
hlt
sti
xor
out
gs
jp
stc
addr16
fist
outs
gs
dec
out
neg
jbe
ja
lods
jns
or
sbb
cmp
jmp
pusha
inc
xor
xchg
sbb
aaa
dec
sub
repz
inc
fdiv
(bad)
xor
cmps
aam
retf
mov
inc
mov
xor
imul
jbe
xlat
push
call
dec
push
cmp
mov
outs
imul
pop
cdq
push
mov
call
cmp
fisub
push
outs
into
sahf
test
inc
imul
sub
xor
xor
imul
imul
(bad)
test
rcl
adc
mov
pop
push
sub
sub
push
mov
mov
dec
idiv
jle
icebp
stc
mov
xchg
enter
cs
xor
jne
lods
pusha
sbb
shl
xor
jnp
cmps
loopne
xlat
jmp
mov
mov
xchg
loopne
repnz
jae
xor
cmps
fmul
mov
fdivrp
pop
sub
sub
shl
not
fstp
sub
aam
and
xchg
inc
cwde
add
popa
cwde
adc
add
adc
nop
stc
pop
adc
adc
push
je
iret
in
xor
sbb
ins
cmps
loopne
popf
mov
cmp
lahf
iret
cmp
ins
xchg
mov
fadd
(bad)
lock
icebp
into
and
mov
jne
in
dec
xchg
xchg
and
xchg
sar
and
xchg
xor
mov
xor
jne
enter
pusha
xor
addr16
xchg
hlt
and
jno
in
out
dec
cmp
mov
imul
mov
jmp
out
stos
iret
adc
add
xchg
adc
adc
jmp
popf
and
mov
(bad)
adc
xchg
add
sbb
sbb
mov
adc
push
mov
or
cmps
jmp
sub
adc
loope
push
and
mov
mov
mov
fmul
cmp
je
dec
xchg
xor
sahf
fmul
add
mov
mov
add
pop
and
aad
jb
sub
inc
push
jge
pop
pop
movnti
or
mov
xchg
and
inc
stc
cmp
shr
mov
xchg
cmps
cmp
adc
mov
loope
fcomi
iret
jecxz
cmp
sbb
mov
sbb
lock
jne
add
fisttp
jl
sub
mov
mov
xchg
and
movs
(bad)
lock
cmps
cld
sub
and
ss
mov
enter
jo
add
push
xor
mov
mov
out
comiss
out
xchg
mov
out
out
dec
jle
les
sbb
repz
sbb
clc
mov
data16
mov
das
(bad)
push
cmp
adc
test
adc
jne
retf
pop
fs
adc
mov
sub
jge
and
aaa
jge
std
mov
cwde
mov
jp
pop
je
inc
sbb
inc
dec
jbe
popa
xor
push
mov
and
or
dec
or
inc
imul
xchg
outs
push
sub
cmp
retf
and
sub
inc
jno
sar
inc
adc
rcr
call
cmp
inc
adc
push
popf
or
call
test
mov
jmp
jge
dec
jns
push
xchg
call
push
and
cli
add
xor
fst
stc
jns
test
(bad)
hlt
movs
mov
int
mov
loopne
jnp
addr16
jp
push
xor
xor
or
xchg
add
gs
mov
inc
shl
adc
icebp
sbb
je
push
aam
or
sbb
xchg
jge
cmp
cmp
daa
dec
and
(bad)
movs
cld
aaa
mov
popf
or
outs
pop
nop
sub
and
xrelease
jle
or
jl
enter
cs
cwde
cmp
cmp
sbb
xchg
and
out
jmp
pop
aam
add
cdq
sar
or
cs
pop
add
jmp
dec
(bad)
ja
js
add
leave
popf
jp
mov
push
in
pop
mov
push
in
mov
movsx
loopne
in
dec
icebp
rol
jmp
mov
push
adc
xchg
inc
(bad)
in
outs
mov
dec
fcmove
mov
mov
mov
jno
mov
cmp
dec
sub
inc
inc
out
mov
lods
repnz
sbb
pushf
scas
inc
push
xchg
lods
lock
das
js
cli
jo
test
leave
stos
push
ficomp
mov
or
cwde
sbb
mov
fadd
retf
fdivr
loopne
repnz
mov
lock
xchg
push
push
pop
push
(bad)
(bad)
add
lds
out
and
cmp
xchg
int
clc
icebp
aad
enter
fstp
or
mov
adc
test
cmp
jno
ss
rcr
sub
and
pop
sub
ror
ss
add
push
xor
cmp
adc
xor
ficom
jp
(bad)
xlat
add
imul
mov
in
das
ret
es
mov
test
sti
lahf
add
cmc
or
push
jno
adc
(bad)
mov
jl
jne
adc
xchg
pop
fnstenv
sar
xor
fst
sbb
add
ficomp
dec
mov
sbb
call
xchg
das
xlat
push
repz
inc
xor
test
cmp
aam
push
pop
dec
add
(bad)
mov
retf
out
test
hlt
stos
inc
mov
mov
jno
push
mov
mov
test
push
clc
fucomp
mov
int3
bound
ja
scas
jo
and
mov
push
xchg
pusha
sbb
imul
push
js
outs
pop
hlt
and
cmps
sub
jb
jo
cmp
or
in
dec
or
mov
inc
scas
sub
scas
aas
out
jne
push
cwde
mov
xchg
lea
fsubp
ss
cmp
sahf
mov
xchg
call
xlat
rcr
mul
scas
xor
sbb
mov
sub
sti
and
or
add
test
dec
aaa
cwde
inc
test
call
push
pop
sub
out
movs
sar
mov
dec
call
stos
ret
outs
sbb
in
jnp
out
jl
jnp
or
dec
ss
jns
dec
outs
inc
scas
mov
test
push
jb
add
mov
add
cmp
sub
and
fcomip
inc
mov
push
movs
add
mov
iret
sbb
std
pop
outs
repz
shl
scas
js
add
push
push
cmp
xor
add
cmp
(bad)
loopne
xchg
mov
push
push
inc
add
sub
mov
dec
adc
daa
add
fcomp
push
or
xchg
dec
or
call
sbb
test
cmp
lods
push
test
adc
into
pop
push
mov
or
sub
repnz
dec
mov
lods
fwait
ins
jnp
gs
mov
dec
js
adc
cmc
rcl
xor
cld
or
push
sub
fsin
ja
cmp
mov
in
inc
pop
out
mov
fisubr
dec
in
pop
lahf
out
mov
pusha
pop
vmread
iret
dec
cmps
or
arpl
jnp
mov
inc
pop
push
int3
bswap
jp
cmp
outs
stc
cld
or
pop
int3
push
jo
iret
dec
sub
jbe
loopne
cwde
xchg
jno
scas
out
ret
pop
loope
(bad)
and
or
icebp
xchg
loopne
call
fstp
aad
xchg
mov
jmp
(bad)
(bad)
es
test
adc
mov
push
outs
mov
mov
sbb
cmps
test
sbb
adc
into
mov
call
add
sub
mov
mov
and
push
and
pusha
add
add
or
js
pushf
inc
jle
loop
cld
xor
sti
or
xchg
leave
xchg
test
aam
fst
inc
mov
push
gs
mov
mov
sbb
fcomp
aam
xor
dec
scas
fcom
test
inc
adc
and
inc
sbb
mov
add
and
sub
out
mov
shr
leave
xchg
fld
gs
mov
push
mov
lods
ins
sub
jmp
jle
or
dec
jne
lods
pop
pushf
imul
and
loopne
jb
push
scas
mov
movaps
mov
sbb
dec
pop
mov
xchg
jmp
hlt
int3
mov
mov
pop
sub
mov
pop
(bad)
ins
cmps
or
bound
sbb
push
rcr
mov
xchg
xor
fwait
call
lods
pop
test
xchg
test
and
or
and
test
std
push
adc
fdiv
cmp
mov
pop
popa
or
adc
dec
dec
mov
iret
dec
sbb
shl
outs
shl
xlat
iret
mov
cmps
inc
lods
aad
and
or
sbb
sbb
pop
call
mov
in
sbb
bound
outs
sbb
hlt
jecxz
fmul
push
mov
retf
int
lea
mov
dec
retf
mov
es
retf
popf
(bad)
xchg
ins
in
cmps
adc
dec
data16
xor
mov
jmp
sub
les
add
xor
push
jns
sbb
mov
and
or
xchg
mov
sub
adc
(bad)
bound
jns
mov
mov
push
cmp
push
lea
jo
icebp
out
out
imul
inc
cmps
and
loop
ss
mov
jnp
or
sbb
aam
xchg
daa
jmp
jg
lea
test
xor
xchg
or
dec
retf
repz
dec
push
and
push
in
push
and
mov
lds
pop
adc
retf
sub
mov
(bad)
inc
sbb
lock
fnsave
sar
push
cmp
fidiv
mov
(bad)
aam
ins
mov
jl
xchg
repnz
bound
add
mul
repnz
(bad)
pop
mov
sbb
fnstsw
(bad)
inc
mov
popa
gs
add
rcl
and
enter
mov
fidivr
adc
int
test
pop
cmc
icebp
jp
adc
fwait
sbb
cli
adc
clc
mov
mov
push
cmp
icebp
jg
jg
stc
mov
adc
cdq
cld
int3
je
jmp
inc
clc
ds
(bad)
lds
pop
adc
imul
pushf
cwde
(bad)
mov
stos
mov
imul
jp
jp
push
lahf
pop
movs
ficom
sub
sub
out
xor
addr16
jb
popf
mov
jge
lods
adc
push
sub
mov
dec
push
mov
push
add
and
call
xchg
cli
stos
stc
ins
clc
and
sub
shl
sbb
push
adc
pop
loope
ret
add
(bad)
inc
loope
fwait
or
adc
je
add
inc
xchg
fwait
sbb
and
test
repnz
ret
ficom
mov
jle
adc
sbb
mov
addr16
push
jnp
mov
add
pop
shl
scas
cmp
mov
daa
leave
hlt
dec
jecxz
cmp
(bad)
dec
mov
or
inc
aaa
dec
jb
lock
push
and
cmp
mov
ret
fadd
sub
retf
lods
loop
call
shl
pop
mov
dec
sub
fldcw
or
ret
std
scas
or
xchg
retf
cmp
jb
pop
stos
jo
retf
dec
mov
jle
repz
jg
add
jp
pop
cmp
cmp
sub
xchg
loop
es
std
dec
xbegin
jmp
(bad)
mov
inc
pop
inc
arpl
and
cmp
popf
push
or
ja
cmps
movs
sar
leave
pusha
stos
mov
lock
or
les
dec
loopne
(bad)
ss
dec
(bad)
mov
xchg
or
popa
adc
add
popf
sbb
imul
inc
cdq
pop
sub
(bad)
mov
adc
stos
das
cmp
and
add
test
fwait
lds
cmp
mov
pop
cmps
dec
cmp
outs
(bad)
adc
pop
mov
and
add
inc
jns
int
xor
in
mov
and
es
cmp
gs
add
pop
mov
inc
into
cmp
xor
jae
sub
fiadd
cmps
xorps
out
and
outs
(bad)
fstp
sti
pop
mov
leave
lods
push
adc
leave
ror
(bad)
aad
test
mov
pushw
das
add
mov
movs
inc
dec
fistp
out
ja
cdq
sub
mov
push
out
mov
dec
xlat
repz
ins
pop
sub
cmp
mov
inc
pop
pop
xchg
add
inc
dec
outs
dec
ficom
dec
jp
sahf
outs
ret
pop
in
push
rol
push
xchg
dec
test
shl
sub
lahf
out
mov
in
movs
ins
inc
mov
sbb
xor
fwait
xchg
and
xchg
and
inc
test
test
or
pop
mov
rol
xchg
enter
loope
movs
cmp
xor
sub
adc
inc
repz
mov
pushf
sub
push
stos
push
test
repz
xchg
aad
pop
lea
ret
gs
stos
jns
fist
cmp
mov
dec
jbe
mov
push
and
mov
outs
in
fcom
mov
or
ret
pop
cmc
sbb
sub
clc
jne
imul
mov
pop
inc
repz
fwait
mov
inc
jnp
jmp
and
dec
sbb
test
sbb
xor
test
in
outs
jg
jp
shl
mov
mov
sub
mov
out
in
cmp
or
nop
scas
adc
sti
add
pop
es
hlt
pop
cmp
aam
pop
in
mov
shl
pop
or
push
jae
lahf
sti
les
in
lods
jmp
fsub
sbb
fstp
xchg
xor
sub
frstor
(bad)
lock
pop
iret
inc
sub
clc
rol
mov
dec
out
push
sar
xor
arpl
mov
jge
inc
jb
dec
daa
sub
xchg
inc
push
mov
and
shr
push
inc
jle
fs
dec
int3
call
sub
gs
push
and
jnp
jns
in
xchg
es
or
leave
and
and
dec
jmp
in
cmps
push
xchg
fcomp
sbb
fdivr
inc
jmp
je
ja
inc
pop
mov
in
mov
sub
mov
dec
xchg
xor
call
dec
sbb
xchg
imul
outs
test
push
inc
add
stos
call
in
pop
jmp
sub
inc
jmp
xor
jle
(bad)
mov
in
jno
idiv
iret
(bad)
and
mov
not
loop
xchg
into
leave
loopne
test
jmp
mov
shl
call
cmp
xchg
or
addr16
mov
out
fwait
js
cmp
mov
xchg
pop
popf
(bad)
(bad)
shl
ror
fnstenv
ja
div
dec
mov
loop
outs
sahf
add
adc
and
jo
in
sub
pop
and
push
jo
lods
in
pop
push
jne
inc
call
adc
repnz
jmp
retf
sbb
fmul
rol
movs
push
sbb
(bad)
out
dec
sar
out
sbb
push
out
pop
(bad)
out
xchg
cmp
cmps
pop
mov
add
sti
cmp
pop
sbb
fidivr
add
inc
sbb
adc
push
xchg
inc
or
je
sti
cmp
jbe
int3
scas
cmp
mov
xchg
mov
and
inc
inc
adc
fcomp
adc
xor
mov
repnz
pushf
fdiv
fsub
or
fs
stc
inc
stos
push
cli
out
adc
arpl
fcom
fadd
loopne
sbb
jae
test
test
mov
test
push
add
out
push
inc
xor
dec
push
pop
pop
or
or
sbb
inc
or
sbb
pop
movs
jb
sti
dec
imul
loop
test
imul
xor
ss
and
mov
out
and
jbe
mov
inc
xor
mov
inc
rcr
jbe
mov
cmp
retf
ins
dec
sbb
fnstsw
lods
aaa
(bad)
jle
repnz
add
mov
xor
repz
jno
cmps
push
adc
shl
es
loopne
addr16
imul
push
ins
cmps
inc
(bad)
jl
adc
adc
iret
outs
inc
fstp
mov
push
jmp
sbb
loope
mov
call
push
jo
daa
push
and
mov
arpl
(bad)
push
sbb
stos
pop
sar
aas
addr16
sti
pop
in
cmp
out
or
sbb
sbb
fwait
std
into
cmc
sbb
fdiv
bound
push
loop
cmp
repz
out
loop
dec
sbb
hlt
pop
add
les
mov
dec
inc
data16
or
mov
es
daa
pop
adc
add
cmps
stos
int3
cmp
out
sub
push
adc
es
loopne
cs
cmp
pushf
dec
pop
sub
(bad)
mov
ins
imul
and
jno
jbe
cmp
pop
add
lods
outs
inc
inc
cs
adc
fst
js
dec
inc
hlt
daa
inc
jno
adc
movs
push
(bad)
sbb
jne
add
pop
cmp
int
pop
scas
(bad)
jo
or
lods
or
inc
out
dec
scas
inc
sub
xchg
or
aam
loopne
jnp
das
neg
shl
jecxz
lods
les
or
cmp
test
popa
mov
mov
test
pop
es
adc
scas
xchg
movs
cmp
cmp
sub
or
lock
test
inc
into
repnz
aad
mov
pop
scas
xchg
sbb
sbb
adc
stos
mov
mov
inc
loope
inc
dec
imul
in
or
cmp
mov
cdq
dec
jp
pop
fist
into
jmp
xor
arpl
daa
dec
xchg
add
or
jg
fmul
pop
cmp
lahf
pop
out
push
(bad)
retf
iret
xchg
fs
dec
adc
cmc
sub
ins
dec
cmc
inc
sbb
imul
push
bound
sub
repnz
popa
nop
mov
add
dec
jae
mov
daa
nop
mov
adc
inc
push
push
sub
fsub
pop
jle
and
fdivrp
stos
xchg
or
push
sub
ins
hlt
adc
xchg
adc
pop
mov
leave
fstp
or
cmps
sbb
inc
inc
mov
stc
cmp
int
mov
mov
cwde
jl
pop
sahf
adc
ss
ds
inc
xchg
fisub
jmp
ror
sbb
xchg
lds
pop
popf
xchg
retf
pop
fsubr
jmp
or
cdq
xor
mov
mov
xor
jecxz
inc
jo
inc
(bad)
je
dec
cmp
mov
imul
aam
aam
mov
sub
mov
loop
out
mov
ss
or
jmp
sahf
mov
cmp
iret
out
jmp
outs
jno
cmp
outs
aad
pop
(bad)
mov
push
xor
fistp
inc
cmps
adc
inc
pop
dec
test
push
inc
lds
pop
dec
sbb
in
test
inc
jp
test
mul
rsqrtps
cmps
adc
aas
test
inc
push
lahf
mov
sbb
mov
retf
adc
mov
(bad)
jae
fdiv
into
inc
je
adc
xchg
(bad)
test
imul
xor
enter
push
daa
inc
retf
es
aad
cld
popf
mov
ja
xor
push
retf
add
fcom
inc
pusha
add
cmps
or
movs
loope
mov
movs
mov
out
cld
mov
retf
jno
sahf
push
push
cmp
lods
cld
(bad)
call
iret
std
jae
test
mov
cmps
cmp
loopne
and
test
push
fmul
fucomp
push
cmp
cmp
or
push
sbb
call
adc
dec
imul
or
push
movs
icebp
fadd
(bad)
fcmovb
lock
out
gs
cmp
mov
xchg
sbb
lods
test
mov
push
push
sbb
and
lea
clc
aaa
mov
inc
inc
ins
push
retf
mov
xchg
lods
jecxz
push
inc
int3
aad
ds
pop
aad
mov
in
cmp
dec
sbb
pop
pop
cmp
inc
out
test
(bad)
lods
in
mov
cld
add
lahf
push
mov
inc
dec
cld
add
lahf
icebp
loope
loopne
dec
ret
xchg
in
cmc
imul
loope
mov
cmp
push
rcr
shr
enter
(bad)
cmp
das
or
ror
mov
iret
mov
iret
loopne
inc
inc
push
ja
cmp
pushf
xchg
int
bound
mov
jb
mov
(bad)
call
dec
aas
pop
aaa
add
or
arpl
inc
jg
inc
cmp
retf
push
jle
pusha
call
arpl
loop
clc
inc
mov
add
into
mov
add
dec
(bad)
adc
jns
mov
lods
in
mov
jg
cmp
dec
ss
push
movs
clc
pop
idiv
mov
inc
pop
push
cdq
jo
add
mov
mov
inc
dec
adc
mov
popaw
pusha
mov
jmp
fdiv
lds
xor
mov
into
jg
push
sub
ss
cdq
push
cmps
jle
sub
ror
lods
dec
sub
inc
jmp
or
sub
xor
retf
call
(bad)
adc
inc
and
lods
iret
jp
pop
cwde
sbb
mov
sbb
and
outs
xor
and
in
push
punpckhbw
and
xor
enter
xchg
pop
add
fsubr
je
clc
mov
popf
out
frstor
and
lock
cmp
stos
lahf
(bad)
cs
pop
mov
fcmovnb
add
push
dec
adc
sahf
retf
or
inc
push
nop
mov
xchg
fild
leave
out
pop
addr16
and
dec
pop
cmp
dec
sub
not
sub
jnp
stos
test
xor
lods
clc
jge
adc
mov
xchg
inc
pop
push
int
in
cmp
stos
in
punpcklbw
and
push
and
dec
pop
dec
pop
add
adc
jp
lods
sbb
ins
xchg
fs
cmp
test
cmps
mov
add
mov
jae
pusha
adc
cmp
rol
jns
dec
xor
fmul
push
ja
lods
ret
sbb
mov
test
mov
inc
or
fs
xor
mov
(bad)
push
add
out
pop
jge
inc
pop
add
neg
je
push
(bad)
das
mov
sbb
fiadd
shr
xchg
fidivr
pop
jle
popa
js
xchg
mov
adc
inc
(bad)
fstp
jb
sbb
mov
cmps
pushf
add
outs
movs
sub
(bad)
sbb
cmp
push
xchg
push
sti
mul
int3
or
xchg
popf
pop
ret
inc
mov
sub
lods
(bad)
cmp
std
aas
xchg
mov
cli
jge
push
jmp
xor
mov
xor
xchg
int
xor
ja
dec
(bad)
pop
sbb
cmc
enter
(bad)
leave
retf
or
jo
sub
cmp
scas
and
or
sbb
popf
mov
cmp
(bad)
cld
mov
pusha
call
xor
cs
xchg
(bad)
jno
sbb
mov
cs
cs
sbb
pop
cmp
jae
into
jmp
(bad)
mov
sbb
adc
lods
jo
sub
xchg
rcr
jbe
pushf
sub
add
loope
add
pusha
int3
aaa
or
jns
imul
xchg
push
dec
jmp
cwde
int
les
mov
daa
cwde
jecxz
and
or
(bad)
cmp
shl
std
sub
ins
das
jp
sbb
loope
mov
cmc
inc
std
stos
inc
mov
push
push
jb
out
inc
ja
fwait
or
mov
lea
xchg
cs
(bad)
in
jp
js
repnz
inc
xor
inc
mov
movs
mov
adc
(bad)
shl
dec
loopne
bound
xchg
jp
add
mov
bound
dec
into
jg
scas
lods
faddp
xchg
push
cli
inc
push
in
in
jmp
adc
rcr
xchg
dec
jbe
push
adc
xor
jmp
and
or
outs
jne
in
jne
adc
adc
mov
push
gs
jp
dec
inc
or
push
mov
outs
and
dec
sahf
mov
sub
xor
data16
push
nop
(bad)
imul
jmp
test
and
sbb
ins
loope
daa
cli
sub
mov
dec
loope
push
mov
sub
dec
fbstp
loopne
js
(bad)
push
add
push
xchg
loope
jmp
inc
js
dec
hlt
les
sbb
mov
pop
loop
pushw
mov
pusha
fldcw
movs
and
xchg
xchg
pusha
ds
mov
inc
fcom
mov
ret
pop
cmp
in
shl
(bad)
sbb
outs
mov
enter
xchg
and
inc
sub
call
xor
jg
mov
dec
dec
test
pusha
mov
xchg
mov
aam
ja
outs
jne
or
sub
sti
cmp
dec
call
mov
xlat
push
mov
test
inc
outs
inc
adc
dec
adc
sub
jb
jmp
inc
mov
dec
xor
mov
(bad)
call
pop
mov
or
xchg
mov
jp
mov
in
sahf
sub
dec
dec
xchg
jne
push
ret
xchg
jp
frstor
jno
hlt
mov
pop
jecxz
enter
mov
enter
and
or
sub
mov
imul
sub
jmp
aas
or
mov
xor
repnz
in
lods
fwait
call
cld
cmps
(bad)
mov
dec
push
dec
mov
xchg
hlt
in
sbb
cmps
stos
mov
icebp
test
stc
push
into
xor
jg
pop
jmp
xchg
adc
cmc
mov
fdivrp
push
push
lods
adc
fsubr
cs
test
pop
push
icebp
and
outs
sbb
aas
add
jb
sbb
pop
jns
into
xor
mov
adc
fist
daa
test
outs
rol
jbe
dec
data16
and
xchg
cwde
arpl
pop
adc
out
je
push
retf
popf
xchg
adc
mov
add
sti
cdq
add
(bad)
mov
adc
or
inc
pushf
dec
outs
in
into
rcr
cli
push
div
(bad)
and
addr16
jle
bound
mov
adc
imul
mov
(bad)
arpl
inc
push
inc
iret
mov
mov
jae
dec
or
sbb
sbb
adc
and
sahf
xor
fdiv
stos
dec
cmp
mov
jg
scas
mov
add
xchg
fadd
dec
bound
jl
nop
add
push
mov
jno
mov
cwde
jne
push
push
mov
stos
xor
sbb
(bad)
in
into
jg
sbb
cs
inc
mov
cwde
pop
and
test
shr
ret
xchg
mov
jmp
add
iret
jnp
lds
ds
(bad)
addr16
sub
retf
es
int3
xchg
cmps
adc
jne
mov
and
scas
vpunpckhwd
arpl
movs
les
sbb
jmp
cs
xchg
xor
xor
les
sub
ins
inc
pop
movs
dec
push
jg
jg
outs
lahf
out
push
scas
addr16
cmps
gs
and
repz
popa
pop
int3
test
ror
shl
shr
and
dec
add
sub
pusha
and
aad
shl
imul
sub
nop
cmp
cli
mov
inc
mov
repnz
mov
nop
in
xchg
inc
lods
sbb
sub
sub
inc
add
mov
push
add
xor
jbe
mov
retf
or
add
jns
bound
sub
xor
pop
lock
or
fst
into
dec
mov
add
inc
xor
std
xor
out
jge
aas
inc
popf
aad
push
push
dec
dec
xor
cdq
lods
gs
dec
xchg
pop
dec
xchg
cmp
inc
xor
mov
cmp
mov
cmp
adc
cmps
jae
or
gs
xchg
push
aaa
mov
add
(bad)
pop
or
cwde
jns
dec
imul
mov
mov
inc
leave
(bad)
(bad)
fist
pop
mul
daa
in
and
jmp
cli
jae
sub
out
dec
add
lods
inc
aam
in
and
and
cmp
sbb
int3
sbb
mov
sub
in
aam
and
push
das
es
cmp
popa
rcl
pop
fdivr
sub
xchg
fdiv
push
jecxz
aaa
(bad)
pmullw
(bad)
jle
call
scas
lods
mov
add
pop
enter
pop
test
das
rcr
ins
push
mov
(bad)
push
xchg
inc
into
mov
fidiv
sti
enter
pop
sbb
sub
in
aas
xchg
jb
add
es
jge
xor
push
imul
(bad)
ds
enter
fsub
sub
out
sbb
repnz
pop
ficom
in
cmp
jp
(bad)
out
add
sbb
and
xor
pop
out
push
sbb
sub
icebp
sub
lea
and
nop
add
shr
lahf
cli
mov
retf
addr16
and
(bad)
adc
xor
and
xchg
(bad)
aam
pop
xor
(bad)
cmps
push
(bad)
mov
imul
mov
ins
cdq
xchg
repnz
jmp
xlat
sbb
sub
adc
ins
cmps
and
test
jne
ins
(bad)
popa
into
pop
rcl
jae
or
push
nop
mov
cmp
icebp
push
pop
sub
loop
and
sbb
cmp
sahf
outs
(bad)
mov
push
scas
cmp
cs
test
adc
retf
mov
int
inc
js
mov
xor
mov
imul
sahf
xor
jge
call
jecxz
or
shl
jae
mov
shl
pop
xchg
mov
mov
mov
pop
addr16
mov
fcom
rcl
into
cli
push
inc
or
repnz
jg
and
sub
fdivr
mov
repnz
and
or
leave
loope
cwde
lahf
shl
add
fisubr
idiv
mov
xor
and
das
popf
or
jmp
cmps
xor
inc
pop
cld
iret
xchg
neg
js
call
mov
jge
add
adc
mov
test
xor
xchg
repz
ficom
or
aam
add
xor
add
xchg
cmps
fldenv
and
call
(bad)
push
pop
push
xchg
adc
movs
arpl
inc
and
cmps
cmp
loopne
inc
cld
push
dec
jnp
dec
jne
test
ds
aaa
mov
inc
pop
sub
loope
pop
xchg
xchg
das
pushw
mov
and
add
push
mov
pop
mov
retf
mov
(bad)
pop
popf
xor
ins
mov
cmp
jns
jmp
pop
aam
xor
mov
or
dec
sbb
data16
pop
and
pop
(bad)
push
mov
shl
cmp
in
or
popf
jmp
in
stos
sbb
mov
xor
inc
int3
jae
test
fidiv
jecxz
lock
icebp
add
lods
jo
push
fs
lahf
xor
push
js
pusha
ret
dec
xchg
aas
addps
sahf
jnp
mov
mov
jne
(bad)
icebp
dec
rol
call
inc
sub
inc
call
das
aas
jge
mov
sar
arpl
retf
or
pop
add
jl
fcmovb
ffreep
call
cmp
jbe
into
lahf
retf
mov
jle
gs
shl
xchg
cli
daa
and
xchg
fdivr
stos
sbb
mov
ja
daa
add
xchg
or
lock
iret
sbb
inc
mov
xchg
test
gs
ror
in
iret
mov
mov
and
pop
arpl
inc
bound
aaa
xchg
mov
adc
adc
add
fidiv
or
dec
xor
add
or
ret
mov
sbb
pop
cs
mov
mov
add
ret
sbb
cmp
inc
test
out
mov
out
jmp
mov
and
idiv
outs
mov
out
or
sbb
pop
stc
ds
iret
data16
adc
into
fist
(bad)
leave
call
mov
inc
add
jmp
cmp
popf
fidiv
outs
pusha
cmp
sub
cmp
jae
sahf
(bad)
(bad)
jp
jecxz
xchg
addr16
sub
jl
not
mov
jne
or
pop
mov
jb
iret
and
xchg
dec
sti
mov
add
sar
loopne
in
jmp
mov
adc
es
add
or
(bad)
push
mov
(bad)
int
push
lods
loop
sub
mov
pop
mov
push
mov
and
dec
mov
push
jl
or
test
dec
mov
sub
push
lods
pop
imul
cmp
and
ja
adc
sub
cmps
cmc
inc
(bad)
pop
jle
arpl
push
inc
fsubr
mov
adc
xor
test
gs
xchg
or
imul
and
push
enter
push
sar
ficomp
je
test
outs
jmp
retf
jmp
addr16
retf
cmc
lea
mov
adc
push
xchg
push
popa
cmp
fld
fs
scas
inc
jmp
out
inc
or
cmp
mov
xchg
imul
pop
or
xchg
pop
cmp
xchg
jmp
xchg
(bad)
sbb
pop
test
jmp
call
lea
dec
mov
stc
jo
inc
rcl
mov
xchg
adc
imul
lahf
push
mov
pmaxsw
(bad)
out
xor
mov
mov
pop
mov
inc
or
mov
mov
mov
push
inc
dec
loopne
push
xor
mov
inc
fldlg2
call
mov
pop
xor
pop
arpl
jnp
xchg
xchg
bound
xor
sub
aam
popw
pusha
sbb
std
fiadd
xchg
enter
fisttp
or
les
or
mov
pop
dec
scas
xchg
adc
push
mov
fwait
sbb
cmp
jmp
pop
lods
mov
mov
dec
mov
add
das
mov
mov
cwde
adc
mov
(bad)
popa
loopne
lahf
mov
jmp
push
lods
pushf
mov
out
mov
dec
or
jbe
daa
and
dec
stos
or
lock
movs
mov
cmovb
mov
jns
loopne
sahf
jle
mov
das
inc
push
add
in
jge
das
jg
ds
add
add
test
push
push
out
inc
mov
cmp
nop
fadd
ret
fstp
lods
xchg
shl
(bad)
jmp
xchg
lods
push
or
inc
imul
int
leave
addr16
scas
mov
scas
stos
push
in
cs
push
xor
adc
pop
test
test
sub
sub
xor
sbb
pop
sbb
test
call
inc
sbb
fstp
retf
push
sar
push
xchg
fmulp
add
push
setnp
mul
mov
sub
mov
gs
sub
lock
pop
icebp
retf
dec
pop
aad
ins
jnp
mov
aad
jo
ins
push
or
ret
test
sub
ret
sbb
pop
pop
(bad)
jae
or
mov
adc
adc
cwde
xor
call
arpl
arpl
fsub
and
mov
or
mov
adc
addr16
sar
push
xchg
aas
cmps
dec
out
mov
(bad)
cmc
fild
retf
arpl
dec
adc
ins
push
add
jecxz
dec
gs
and
(bad)
cld
lods
adc
popa
ins
test
sub
cmp
js
xchg
mov
pop
and
cmp
and
retf
dec
xchg
sbb
add
sbb
shl
js
hlt
(bad)
out
and
mov
sbb
cmp
js
or
pushf
xor
mov
cmps
fld
pushf
call
dec
xchg
clc
push
jb
retf
sub
sbb
gs
pop
loop
repz
ins
mov
push
xor
out
popf
jne
(bad)
ja
retf
or
or
mov
fidivr
jp
mov
adc
and
add
ret
jbe
fidivr
enter
push
aaa
mov
mov
mov
pop
mov
pop
jl
mov
cmp
mul
div
xor
stc
adc
xlat
jle
sub
int3
xor
xchg
lods
pop
sub
rcr
sub
mov
stc
pop
clc
retf
retf
mov
imul
jecxz
cmps
add
mov
xor
ins
xor
test
lods
xlat
sub
dec
mov
mov
mov
sbb
pop
idiv
mov
mov
ja
icebp
int
cmp
and
test
es
fs
jb
sbb
hlt
jp
xor
(bad)
mov
push
das
xor
sub
push
mov
addr16
dec
or
rol
fadd
sub
push
sub
stos
es
xor
out
mov
cli
fisub
popa
sub
lock
test
mov
sahf
neg
(bad)
das
jp
lahf
pop
pushf
jno
cmp
imul
mov
mov
push
add
mov
mov
push
ja
fidivr
inc
sbb
ror
and
adc
out
mov
xor
and
and
out
sub
inc
(bad)
cmp
cmp
test
mov
(bad)
cmps
push
cmp
mov
sub
sbb
add
pop
les
push
inc
jbe
push
jo
xlat
in
or
pusha
jns
ss
repz
or
addr16
jbe
clc
not
mov
jp
mov
push
push
pop
sahf
add
test
or
cli
fidivr
mov
not
cld
cmp
inc
aaa
xor
jbe
test
xchg
pushf
inc
pop
fwait
ins
out
imul
sbb
add
and
call
stos
aaa
jae
hlt
pusha
add
jno
mov
leave
pusha
or
(bad)
(bad)
ret
inc
mov
and
test
fdivr
xchg
add
(bad)
cmp
jns
fld
push
jle
lods
add
movs
dec
or
pusha
adc
inc
cmp
inc
stos
fisub
std
or
call
pop
sub
jp
sar
aam
shr
mov
mov
mov
arpl
into
or
popa
cli
cwde
cdq
das
fst
out
push
in
rcl
clc
or
mov
push
pop
enter
add
ficomp
push
sahf
fnstsw
adc
aaa
cmps
jnp
idiv
push
mov
ror
push
stos
push
sub
iret
leave
pop
inc
add
and
adc
dec
xchg
add
pop
xchg
dec
(bad)
lods
push
add
mov
std
sub
in
pop
xchg
pop
sub
pusha
mov
adc
add
mov
call
loope
or
repnz
push
push
call
inc
jno
rol
jmp
jne
jbe
(bad)
iret
push
jecxz
xchg
dec
nop
and
neg
adc
inc
jmp
mov
pop
pop
cmp
pop
add
sub
mov
inc
cmc
and
inc
push
mov
xor
and
in
mov
sbb
xor
xchg
mov
rcl
mov
mov
in
add
or
add
and
xor
fucomip
arpl
(bad)
sbb
gs
scas
clc
mov
pop
std
js
and
mov
or
fwait
mov
fs
sbb
sbb
jg
fxch
sub
add
pop
xor
sbb
mov
push
xor
stos
push
cmp
ja
dec
shl
inc
ins
pop
inc
lds
add
inc
xor
xor
cmp
pop
sbb
sbb
loope
jns
fisubr
mov
pop
std
mov
cli
(bad)
jno
mov
ins
fyl2xp1
push
mov
fwait
stos
and
aaa
jle
(bad)
mov
sti
push
pop
and
xlat
pop
jns
pushf
mov
cmp
add
dec
xchg
jge
ret
adc
bound
(bad)
ja
sbb
sub
std
into
out
cmp
retf
xchg
fldenv
add
jae
cmp
in
push
daa
into
lods
push
imul
retf
loop
inc
aam
cmps
in
or
xchg
dec
ja
jb
add
push
inc
out
mov
inc
sbb
mov
sbb
iret
bound
(bad)
ja
sbb
jb
mov
mov
push
rol
dec
mov
mov
sbb
adc
pop
jne
push
cmp
sbb
cmp
iret
je
out
fdivr
ins
jne
pop
add
add
ficomp
sub
fcom
mov
sub
lds
mov
xchg
das
ss
pcmpgtw
adc
imul
mov
js
popa
add
mov
adc
in
out
push
and
pop
adc
cmp
sub
loope
enter
loop
or
cwde
sahf
rcr
stc
jae
arpl
popf
(bad)
inc
jmp
inc
neg
pop
fist
cmp
and
adc
sub
mov
sbb
cmp
and
outs
js
mov
aas
inc
inc
mov
add
sub
cmp
push
adc
fsubrp
sub
out
retf
aam
sub
pop
cs
pop
xlat
xor
cdq
and
sti
lods
fcmovbe
repz
fst
xchg
cmp
leave
jp
shl
add
mov
icebp
xchg
cmp
pushf
imul
mov
in
into
mov
in
ret
pop
mov
(bad)
xchg
xor
jg
or
push
imul
mov
std
xor
xchg
mov
mov
push
mov
paddusb
repnz
sub
shl
jecxz
stc
fs
adc
cmps
xor
(bad)
jg
xlat
pop
cli
pop
xchg
daa
sbb
dec
sar
and
inc
into
add
clc
jg
stos
cs
cmp
add
and
mov
movs
mov
jmp
sbb
je
daa
and
push
(bad)
fisub
leave
iret
xor
stos
jb
fild
(bad)
cmps
adc
int
or
call
adc
(bad)
iret
mov
jge
int3
dec
dec
xchg
shl
icebp
aas
fsub
sub
test
jg
inc
and
cmps
dec
ror
or
pop
pop
xor
fcom
adc
retf
fidivr
sbb
call
outs
sub
add
aaa
jo
test
sbb
dec
add
leave
jno
xor
test
ds
xchg
loope
loope
and
cmps
popa
mov
in
adc
pushw
je
mov
push
movs
xchg
cmp
test
inc
stos
xor
les
(bad)
jnp
push
pop
jg
stc
(bad)
pusha
fadd
mov
in
inc
add
or
in
sub
lock
mov
or
mov
jle
mov
rcr
fistp
aam
adc
leave
lahf
addr16
out
shl
dec
adc
or
mov
jb
inc
pop
sub
ret
int
mov
div
aad
mov
cmpps
push
data16
fisub
mov
fdivr
leave
stos
fucomip
(bad)
pop
mov
sub
jno
(bad)
in
aas
pop
out
mov
mov
add
cmp
fild
sti
imul
mov
into
imul
jmp
mov
inc
retf
push
aaa
mov
dec
xchg
repnz
test
push
jmp
cmp
or
and
inc
cmps
sub
iret
stos
mov
pop
daa
and
cmp
lock
mov
call
sahf
cmps
(bad)
cs
sub
sub
rcr
fdivr
jecxz
pushf
les
dec
cwde
enter
jns
mov
out
inc
popa
jbe
call
push
pop
das
mov
mov
sbb
call
les
test
inc
mov
xchg
push
jno
push
div
ja
sbb
arpl
add
(bad)
mov
icebp
sbb
jl
adc
cmps
or
mov
dec
or
cmps
xor
mov
dec
push
adc
mov
arpl
xchg
neg
jmp
mov
sbb
lods
in
sub
xchg
outs
cmps
dec
xchg
out
mov
daa
mov
movs
ret
call
not
shl
inc
es
aaa
sbb
sub
adc
jae
jo
or
repz
loopne
adc
cmps
pop
and
int
pusha
scas
lock
and
push
mov
xor
push
aaa
and
in
dec
jl
and
add
inc
fild
ins
cmp
inc
shl
ins
mov
call
(bad)
fsubr
lods
rcl
mov
cmp
or
mov
les
adc
cmp
imul
push
retf
scas
cdq
dec
callw
sbb
retf
das
and
fcmovu
xchg
xchg
add
xchg
imul
mov
addr16
sbb
in
add
xor
pop
jnp
xor
push
cmp
pop
retf
in
mov
jmp
sbb
scas
adc
add
sub
into
jnp
xor
ins
imul
mov
sbb
sbb
mov
mov
sahf
fcomp
pop
test
inc
inc
mov
je
test
or
lock
inc
aaa
dec
outs
aas
and
idiv
popf
imul
xchg
mov
cmp
sbb
shr
adc
int3
(bad)
jns
sub
test
out
push
aaa
stos
popf
imul
test
mov
xor
and
cwd
fidivr
add
jg
div
fdiv
mov
jmp
(bad)
call
fs
xor
in
inc
mov
cmp
gs
or
push
pop
or
mov
xchg
fldcw
xor
pmulhw
push
(bad)
and
jmp
jl
jne
mov
pusha
pop
movs
stc
cmp
push
sbb
or
push
dec
cmps
sbb
fstp
pushf
or
sub
mov
movs
pause
jno
lds
jmp
ret
inc
movs
push
xor
imul
push
sbb
dec
outs
or
icebp
lods
retf
fwait
jnp
retf
sbb
cmps
pop
fndisi(8087
retf
mov
cmp
sbb
add
addr16
repnz
push
push
xor
jle
movs
gs
jmp
push
push
jo
add
jle
push
cld
add
mov
jbe
jl
sti
in
and
(bad)
mov
aaa
cld
rcr
je
test
outs
push
pop
mov
add
imul
add
ja
pop
iret
pop
div
in
and
add
add
repz
push
int3
ins
adc
sar
sub
mov
jb
daa
sbb
dec
cmc
in
mov
mov
add
in
cmp
pop
xor
lods
fcomp
(bad)
sbb
ja
fadd
fwait
ss
jbe
add
test
(bad)
mov
mov
std
mov
outs
(bad)
adc
sbb
out
mov
push
sbb
sub
mov
dec
das
sbb
sub
movs
mov
pop
int
mov
mov
jge
xlat
push
push
mov
pop
stos
je
mov
loope
cmp
cmp
sub
dec
aaa
retf
dec
sbb
imul
pop
ins
gs
jmp
test
mov
add
jle
sbb
arpl
and
mov
cmp
std
dec
push
outs
out
inc
je
pop
jo
cmp
xlat
stos
aam
mov
cwde
out
test
aam
xchg
push
out
xchg
and
repnz
pop
ins
and
les
cmc
cdq
loop
cmp
pslld
push
(bad)
adc
push
icebp
jg
xchg
xor
xchg
or
fsubr
test
loopne
cmps
push
int
je
dec
fsubp
push
adc
test
push
cmp
loop
enter
mov
scas
pop
(bad)
and
adc
sar
or
dec
(bad)
mov
aas
or
punpckldq
fcmove
out
cs
hlt
nop
jecxz
imul
(bad)
frstor
pusha
clc
rcl
imul
cli
lahf
aaa
push
lea
mov
(bad)
int3
mov
popa
push
addr16
dec
push
xchg
mov
jge
popa
push
xlat
cmp
push
inc
rcl
dec
pop
push
push
xlat
push
pop
push
sbb
xchg
xor
push
iret
jle
adc
push
cmp
cmp
push
out
(bad)
xor
add
dec
cmp
ds
sbb
jecxz
push
add
jae
ds
js
xchg
fmul
fadd
aaa
ret
out
push
gs
(bad)
iret
dec
outs
(bad)
cmps
xchg
cs
call
dec
jns
sub
stos
mov
sti
mov
pusha
mov
xchg
dec
jb
scas
ins
add
xchg
push
stos
es
and
mov
repnz
jno
in
push
cs
jbe
lahf
fs
cdq
jp
nop
aad
nop
jae
xchg
inc
cli
hlt
ss
adc
push
push
shr
add
and
int3
pop
call
cdq
or
fstp
ss
mov
add
xor
shl
add
aas
mov
movs
xchg
jl
adc
push
adc
pop
sub
out
jecxz
pushf
and
cmp
lea
pop
jae
out
les
aas
nop
retf
or
dec
sti
jb
mov
popa
fisubr
add
mov
mov
cmc
xchg
xor
mov
or
inc
mov
dec
rcr
push
xchg
hlt
cmp
cdq
jbe
cmp
rcl
adc
mov
dec
lea
cmp
jo
ins
ins
jge
enter
enter
xchg
add
sahf
mov
cmp
in
leave
cs
jmp
pop
retf
dec
and
retf
mov
xor
lahf
es
aad
jbe
push
scas
mov
mov
push
lods
adc
data16
mov
dec
pop
jle
jp
imul
add
ds
call
std
pop
lahf
and
or
cmps
push
aad
in
mov
add
mov
inc
push
mov
xlat
and
call
pop
in
sub
and
pop
fild
sbb
(bad)
xor
jmp
adc
(bad)
pop
sub
push
pop
ds
out
neg
enter
sub
mov
mov
mov
jbe
jmp
jle
cmp
nop
or
movs
sbb
dec
push
jge
dec
and
jg
xor
ja
dec
push
sub
pop
repnz
inc
mov
repz
sbb
ja
and
enter
xor
pop
xlat
(bad)
mov
inc
in
out
std
mov
mov
xchg
and
xor
xchg
lahf
test
mov
push
out
mov
or
in
mov
test
rcl
add
rol
push
push
test
call
xchg
in
pop
(bad)
call
adc
(bad)
pop
mov
lds
xchg
lds
push
(bad)
push
ret
mov
and
cmps
push
push
mov
add
pop
repz
in
std
mov
mov
jnp
xor
shl
push
dec
xchg
nop
repz
and
add
push
mov
adc
mov
not
data16
xchg
jns
imul
push
dec
in
mov
stos
add
ret
aaa
xlat
mov
scas
mov
mov
stc
xor
xor
iret
dec
push
mov
jecxz
push
bnd
je
add
bound
jg
cmp
call
mov
xchg
xchg
cmp
and
movs
and
push
rol
dec
inc
mov
fdiv
(bad)
pop
in
mov
repz
aaa
mov
adc
sub
dec
in
cmp
stc
sbb
mov
xlat
xor
popa
cmp
popa
pop
adc
gs
xchg
loop
inc
xor
lahf
mov
and
push
xlat
jle
xor
sub
xchg
xchg
leave
add
mov
push
call
stos
jmp
and
sub
jge
xor
adc
sub
mov
or
xor
inc
push
test
push
adc
pop
sbb
pop
pop
mov
mov
pop
aad
cmc
push
call
adc
(bad)
inc
popf
push
sahf
and
adc
adc
mov
cmp
sahf
rcl
adc
cmp
pushf
mov
xchg
jo
inc
lock
ds
push
push
jne
fistp
icebp
mov
adc
sub
(bad)
or
imul
test
test
unpckhps
push
clc
pop
aad
or
inc
in
or
adc
dec
mov
cmp
(bad)
clc
aam
fld
iret
push
nop
adc
icebp
mov
sub
fidivr
sbb
add
dec
jae
aaa
lea
sub
in
mov
push
and
mov
in
scas
push
or
jae
mov
mov
dec
add
add
mov
iret
cmps
test
popa
and
test
jns
push
retf
out
pop
ins
sub
inc
lock
pop
pop
pushf
lea
fidiv
aam
call
mov
mov
add
icebp
int
out
rcl
nop
gs
inc
push
mov
test
dec
push
(bad)
push
add
and
das
lock
mov
pop
fmul
and
xchg
xor
(bad)
lods
sahf
push
(bad)
aam
das
cmp
sub
adc
repnz
in
sub
pop
inc
inc
jge
inc
cdq
sbb
mov
jp
repnz
push
mov
loop
mov
cmps
xchg
xor
push
pop
rol
aad
jmp
(bad)
retf
and
lods
(bad)
nop
push
in
ret
ret
lock
cli
mov
or
mov
ja
popa
push
call
sub
inc
mov
push
gs
xor
pop
out
call
adc
jae
adc
jmp
pop
jne
in
xor
pusha
jmp
std
and
call
fwait
aad
inc
nop
sbb
cmp
cli
sahf
jecxz
(bad)
fsubr
mov
add
int3
pop
hlt
int
pop
xlat
or
sbb
push
pusha
jge
push
(bad)
lahf
icebp
jle
xlat
mov
ror
xor
iret
inc
mov
push
in
jbe
scas
mov
dec
into
into
or
mov
push
stos
push
lods
rcl
pop
cld
hlt
pushf
fisub
xchg
scas
pushf
jecxz
adc
mov
repz
or
jmp
xor
xchg
inc
jp
push
outs
mov
pushf
test
push
dec
jae
in
cs
mov
(bad)
and
or
out
cmc
mov
arpl
jecxz
dec
int
mov
mov
mov
leave
jle
jg
icebp
fs
lods
dec
jb
adc
lock
mov
fimul
retf
mov
add
and
push
cdq
ins
xlat
(bad)
mov
movs
shl
mov
pop
cli
and
rcl
push
loopne
leave
push
inc
pop
test
xlat
sbb
sbb
xor
push
jg
aad
xchg
aad
sub
into
fnsave
stos
push
sahf
out
push
mov
in
push
sub
imul
in
js
cmps
pop
pop
push
and
imul
add
shl
push
out
(bad)
stc
add
push
dec
pop
sti
je
and
cmp
jecxz
sbb
pop
add
and
outs
(bad)
ins
xlat
adc
sbb
push
out
cmps
sbb
call
outs
pop
cmp
sbb
mov
mov
sbb
pop
mov
mov
jmp
nop
adc
out
dec
inc
es
inc
jae
sub
fdiv
leave
xor
cmp
adc
idiv
rol
imul
inc
imul
aas
sbb
cmp
inc
inc
pop
sbb
cmps
inc
jle
mov
sub
mov
cli
mov
xchg
mov
push
jns
mov
(bad)
imul
enter
movs
(bad)
cmp
or
cmp
sahf
das
mov
or
push
push
test
dec
dec
lods
inc
push
mov
call
sub
pop
jg
sub
xchg
pop
mov
mov
fst
sbb
jne
cmp
test
and
les
mov
fst
sub
ins
ret
or
add
lock
aam
fwait
enter
sub
mov
sbb
ds
xor
jnp
in
xchg
(bad)
xchg
or
xor
outs
mov
sbb
pop
cmps
pusha
not
out
push
int
outs
sub
bound
mov
mov
addr16
std
pop
jp
xlat
pop
hlt
test
adc
mov
ror
pmulhw
icebp
data16
pusha
mov
sti
test
xor
iret
and
mov
fld1
ss
jb
jp
ret
es
scas
movs
push
or
out
push
lds
ins
mov
out
push
gs
push
xlat
cmp
xchg
(bad)
mov
mov
adc
mov
mov
nop
stc
sub
mov
and
cli
div
in
imul
pop
aaa
lock
pushf
cmp
cmp
stos
adc
cmc
cli
test
pop
scas
scas
sbb
jnp
pop
sbb
mov
aad
pop
dec
and
mov
xchg
call
mov
cmps
inc
pop
mov
pop
imul
das
adc
(bad)
lds
jp
and
sub
mov
ror
and
jnp
mov
in
sbb
cmp
jmp
inc
scas
bound
ret
lock
mov
push
mov
data16
jmp
inc
sbb
xor
mov
mov
fwait
pop
adc
fisttp
mov
or
int3
int3
mov
sub
mov
ficomp
sti
shr
fnstenv
loopne
shl
sbb
inc
sub
sub
xchg
xor
and
inc
or
or
add
xor
iret
sub
adc
pop
scas
adc
xor
pusha
add
adc
test
cmp
sahf
lea
mov
in
mov
outs
or
xor
sbb
sub
lds
aad
mov
lock
out
stos
add
sbb
mov
mov
cmp
shl
fwait
in
push
cli
pop
push
in
shr
fsub
xchg
jl
scas
or
jmp
jno
(bad)
das
shr
mov
(bad)
rdmsr
pop
shl
or
dec
inc
add
push
cmp
ffreep
inc
ret
aam
adc
jnp
ss
mov
and
sub
sbb
aam
cwde
iret
loopne
cmp
and
adc
hlt
repnz
rcr
pop
xor
aas
jno
cmc
push
sbb
and
cmps
stos
jo
nop
shl
mov
sbb
imul
jmp
jmp
enter
mov
repz
iret
cld
out
xchg
xchg
call
mov
and
in
mov
or
sub
loope
sub
cmps
jl
sbb
sub
xor
out
clc
sar
dec
fbld
popa
xchg
(bad)
in
lgs
das
push
cmps
xchg
add
aam
gs
xchg
lods
cld
lahf
and
out
mov
bound
sub
aas
mov
out
loopne
xlat
sub
cmp
sub
fs
ja
fadd
pushf
inc
iret
mov
lock
mov
movs
mov
mov
mov
ret
ficom
cmc
sbb
mov
cli
in
push
pop
(bad)
pop
sbb
dec
dec
shl
je
(bad)
int3
sti
mov
retf
mov
sbb
(bad)
pop
xor
jnp
cmp
xchg
dec
adc
pop
retf
pop
add
xchg
jo
mov
mov
movs
push
xchg
mov
imul
(bad)
xor
fucom
sub
iret
push
fldenv
out
mov
ret
aas
enter
ins
cmp
dec
mov
fst
outs
popf
dec
cmps
test
(bad)
inc
nop
sub
ja
dec
retf
je
xor
mov
xor
sub
pop
push
int3
out
sbb
(bad)
push
jnp
dec
xchg
push
fimul
add
cs
pop
lods
clc
popf
outs
js
stos
push
cmps
sbb
fmul
xchg
and
sbb
and
out
out
xchg
dec
xlat
xchg
gs
adc
cmps
mov
jo
inc
xor
inc
lds
movs
retf
mov
and
fidivr
jbe
inc
cmp
xchg
xlat
loope
adc
cwde
shl
jmp
add
cwde
mov
cdq
inc
cmp
inc
push
(bad)
jnp
dec
xor
aam
push
daa
icebp
lahf
arpl
adc
dec
cdq
int
sbb
out
jle
stc
xchg
inc
xchg
imul
sub
bound
les
jge
push
pop
loope
mov
outs
mov
mov
jne
and
mov
xor
popf
ja
retf
cli
or
mov
xor
fdivr
mov
dec
sbb
mov
or
mov
pop
cmps
test
repz
mov
scas
(bad)
mov
loope
cmp
cs
or
shr
imul
sub
lods
inc
cmp
cmp
int
movs
call
and
push
inc
std
retf
scas
out
cmp
into
(bad)
(bad)
jb
(bad)
in
jno
and
scas
dec
inc
(bad)
lods
rol
pop
jns
cld
ins
hlt
mov
js
es
scas
test
jo
stos
retf
(bad)
fild
ret
mov
jecxz
xor
and
js
jo
fs
jb
jns
inc
jecxz
faddp
inc
ins
mov
inc
mov
test
cld
dec
inc
jle
daa
frstor
mov
daa
bound
std
sbb
or
fisttp
inc
pop
adc
and
into
loop
pop
out
push
sub
xlat
push
or
pop
enter
inc
mov
frstor
sbb
shl
bound
push
mov
mov
xor
push
mov
retf
pop
imul
fidivr
addr16
lods
push
mov
jmp
and
out
adc
mov
sub
out
xchg
xor
cdq
push
ret
retf
push
sti
push
call
pop
or
in
jbe
mov
push
sub
push
fstp
cdq
cmps
sti
popf
addr16
je
cld
and
jb
sub
iret
dec
cs
fidivr
or
adc
add
ss
mov
mov
repz
out
dec
es
shl
in
jo
in
arpl
pop
mov
xor
and
dec
into
sahf
and
mov
adc
jae
xor
adc
bound
mov
mov
mov
pop
sbb
mov
mov
fwait
mov
cmps
enter
aas
(bad)
mov
sti
sbb
mov
jbe
(bad)
mov
xor
test
(bad)
push
(bad)
pop
mov
daa
iret
pop
sbb
or
push
in
ja
clc
cli
mov
or
aad
cmp
test
loopne
sub
sub
out
scas
aas
cmc
dec
cli
xor
ret
repz
jle
int
ss
div
jae
mov
mov
mov
call
adc
pop
mov
test
xor
cdq
test
and
leave
and
iret
pop
cmp
jg
arpl
xlat
out
mov
pop
sbb
jl
push
or
gs
and
fs
arpl
gs
xchg
xchg
mov
aam
pop
inc
ins
sbb
dec
pop
push
int3
pop
(bad)
dec
sbb
das
hlt
test
push
ret
push
xor
xlat
hlt
cmp
mov
retf
mov
add
dec
dec
xchg
mov
or
out
mov
push
or
jle
call
in
dec
shl
xchg
jecxz
or
xor
or
(bad)
xchg
jl
adc
(bad)
mov
xchg
stc
(bad)
je
fwait
iret
mov
std
fdiv
(bad)
cld
dec
inc
data16
es
mov
(bad)
ins
stos
push
jno
dec
add
stos
lahf
mov
jo
scas
das
push
in
scas
lea
pop
movs
dec
mov
lods
dec
iret
xchg
jle
pop
push
fdivrp
fimul
lds
hlt
shr
mov
(bad)
int3
(bad)
xlat
mov
retf
push
adc
push
dec
dec
(bad)
movs
cmp
mov
mov
in
cld
out
cmp
gs
repz
out
jp
das
and
xchg
fcom
bound
stos
clc
js
jo
stos
mov
adc
dec
cmps
popf
xchg
(bad)
into
ror
icebp
retf
jae
mov
shl
movs
(bad)
sti
jl
pop
pushf
out
cs
mov
rcl
(bad)
jge
mov
movs
sub
loopne
or
cdq
sti
inc
cmp
jge
adc
enter
enter
jmp
push
push
sub
sub
hlt
adc
loope
sahf
sti
xchg
jecxz
fstp
and
sti
popa
cmp
mov
add
cli
add
and
push
loopne
(bad)
fs
cmp
rcl
xor
cdq
imul
push
fisubr
xor
mov
movs
xor
std
dec
lods
and
pop
in
lods
jg
xchg
dec
inc
(bad)
sub
add
pop
mov
xor
mov
jle
inc
pop
sub
inc
sbb
and
ins
retf
cmp
das
scas
or
sbb
cmps
sub
lods
mov
ja
call
dec
jnp
dec
push
bound
pop
push
str
sub
adc
xchg
dec
cmp
sbb
jo
mov
loopne
sub
inc
ins
gs
in
scas
jnp
jne
std
ds
test
lahf
repnz
imul
jno
call
jg
fisttp
movs
sbb
fwait
test
mov
ror
add
rcl
mov
gs
in
test
into
cwde
pop
stc
les
xchg
aaa
stos
adc
dec
int
add
int
jge
sub
mov
mov
push
clc
cmps
cs
loopne
inc
cmp
push
push
lods
add
push
and
mov
cmps
fadd
push
and
test
sbb
(bad)
fwait
out
inc
loope
aaa
pop
js
aad
je
loope
test
test
pop
or
pop
sub
mov
sar
into
adc
das
or
movs
xchg
out
jp
mov
mov
fwait
or
fisttp
ret
out
and
pop
stc
push
sbb
scas
lods
imul
pop
leave
leave
gs
sti
dec
xchg
dec
fisttp
dec
imul
scas
jecxz
enterw
loope
xchg
add
call
push
imul
test
cld
mov
xor
ins
or
inc
inc
test
fmulp
or
fiadd
jmp
cmp
xlat
dec
(bad)
es
std
ins
mov
stos
adc
loopne
popa
out
(bad)
int3
xor
dec
daa
inc
les
and
inc
adc
hlt
add
add
frstor
add
xchg
lahf
jno
dec
scas
xchg
cmps
sub
mov
add
retf
into
call
imul
mov
sbb
fwait
lods
cmp
add
hlt
adc
push
inc
ins
lock
push
ins
mov
and
or
mov
retf
fadd
dec
push
pop
sbb
sub
and
add
xchg
adc
popa
in
inc
mov
repnz
jmp
or
push
jmp
sbb
adc
dec
mov
inc
push
mov
xor
sbb
repnz
rcl
je
cmp
cmp
mov
les
das
mov
in
enter
cwde
mov
mov
mov
cmp
dec
retf
push
fwait
jne
fsub
pushf
cmp
lahf
cmp
push
and
stc
xchg
repz
push
xor
or
pushf
jmp
push
mov
lock
xchg
pushf
dec
push
nop
or
xor
js
add
fs
sub
std
sub
das
mov
nop
out
push
push
sbb
movs
in
fwait
or
add
sub
mov
inc
mov
scas
jmp
js
daa
ror
lock
mov
xchg
sbb
fs
sub
adc
neg
aas
push
mov
dec
pop
in
ds
pop
sbb
loope
pop
jle
movs
pop
cmp
mov
movs
ss
sti
aam
dec
enter
pop
sbb
dec
sub
add
pop
cmps
mov
mov
out
mov
cwde
loopne
js
and
dec
lds
pushf
ins
xor
fwait
inc
sub
(bad)
cmps
(bad)
nop
xchg
outs
in
add
mov
repz
in
jmp
out
mov
cmp
inc
jle
inc
sti
ins
pop
cli
jg
or
lds
cmc
sbb
ja
push
sbb
mov
stos
dec
add
nop
mov
jle
(bad)
inc
popa
add
ret
xchg
icebp
ds
call
mov
push
mov
ja
aas
bound
lock
xor
add
aad
mov
mov
ss
ror
js
repz
es
movs
and
dec
adc
dec
fisttp
and
cmp
mul
mov
loop
aad
stos
popa
ror
addr16
fidivr
jns
data16
(bad)
popa
add
dec
in
retf
lahf
xor
rol
cmp
jg
jmp
dec
jecxz
mov
call
sahf
push
xchg
je
imul
xlat
jne
lea
lods
xchg
inc
mov
or
sub
dec
stc
pop
and
and
ret
les
inc
cmps
adc
int3
dec
mov
inc
xor
in
sub
inc
loop
popa
and
xchg
adc
add
outs
add
sti
in
cmps
jae
arpl
mov
mov
mov
lahf
pop
jmp
jle
ror
fadd
mov
or
call
daa
mov
add
pusha
(bad)
and
fiadd
inc
jge
arpl
mov
jmp
aas
dec
dec
or
call
cs
test
dec
pop
hlt
mov
aas
mov
movs
js
std
or
or
outs
bswap
sub
cmp
ret
test
push
shl
mov
xor
in
jp
cld
lds
dec
inc
call
call
xchg
enter
popf
(bad)
sub
(bad)
adc
les
adc
sub
mov
sub
fnstcw
mov
ret
vunpckhps
mov
pop
xor
call
and
xor
sti
xor
enter
daa
sar
fs
jae
or
call
in
xchg
in
mov
mov
and
dec
xor
dec
stc
rcr
push
xchg
xor
xor
mov
mov
jno
pop
ret
cdq
jmp
inc
fsubr
mov
das
test
push
loop
mov
sbb
rcl
dec
xor
out
sbb
out
dec
popa
lods
pop
call
add
push
leave
loope
fistp
mov
sub
inc
add
(bad)
cmp
and
pop
mov
(bad)
fsubr
loopne
pop
sbb
dec
jle
(bad)
pushf
xchg
je
call
cmp
jmp
das
dec
test
xabort
ret
shl
std
mov
sbb
inc
xlat
ins
popf
repz
adc
test
mov
inc
scas
xor
push
(bad)
mov
mov
out
push
cmp
xor
dec
dec
(bad)
cmp
or
idiv
nop
and
and
mov
(bad)
sub
hlt
inc
jp
inc
sub
xchg
enter
jle
dec
pop
cmc
dec
outs
cmc
mov
mov
push
into
push
rol
push
mov
repnz
dec
cmp
adc
jmp
(bad)
fld
push
aaa
sub
retf
xor
pop
dec
add
xchg
pop
sbb
leave
add
push
out
push
movs
xchg
stos
lds
inc
xor
sub
mov
mov
stos
lahf
test
(bad)
mov
mov
adc
mov
nop
add
and
lea
push
or
mov
lahf
inc
std
push
(bad)
sar
shr
dec
xchg
clc
(bad)
lock
adc
out
lea
mov
ret
xlat
test
jmp
jns
dec
mov
leave
sahf
mov
xchg
lea
pop
retf
pop
jb
jb
jge
sahf
clc
push
(bad)
mov
and
outs
add
shl
aas
fisttp
jne
xor
dec
push
jle
xor
xor
pushf
test
mov
add
xor
cmp
or
sbb
push
pop
das
call
adc
out
mov
das
inc
aaa
lods
mov
add
ret
outs
cmp
or
leave
mov
push
mov
sub
retf
movs
stos
into
aam
mov
mov
add
es
jecxz
ins
xor
imul
stc
sahf
xchg
(bad)
adc
sub
xchg
mov
addr16
jno
leave
dec
in
retf
ret
dec
or
pushf
daa
mov
xchg
nop
jo
mov
(bad)
mov
cmp
cmp
not
pop
jle
out
stos
mov
jp
or
(bad)
std
fiadd
xchg
cmc
shl
pop
fsubr
mov
mov
shl
jle
adc
sub
call
pop
stc
rcl
test
push
popf
jnp
shl
mov
scas
cmp
inc
outs
gs
cdq
in
sbb
arpl
stos
cdq
les
sbb
lock
sahf
les
js
pop
retf
xchg
loop
stc
mov
outs
jne
movs
dec
push
repz
mov
out
shl
mov
sbb
inc
jp
mov
xor
inc
pusha
or
mov
popf
xchg
jmp
fild
fwait
xchg
sub
or
loop
test
adc
fdivr
out
or
stc
retf
sub
out
mov
(bad)
jmp
mul
and
out
fcomp
inc
cmp
dec
xchg
or
xor
mov
not
jae
cli
(bad)
js
jle
xchg
ss
sahf
mov
in
stos
sub
mov
push
xor
dec
imul
cmps
jns
aad
and
xchg
sbb
jae
jecxz
clc
jae
cmp
sbb
sti
mov
mov
(bad)
loopne
cwde
test
push
push
bound
pop
mov
jp
cmp
or
cli
shl
jmp
aam
inc
xor
stc
stos
retf
sbb
and
or
adc
(bad)
rep
xchg
jnp
outs
(bad)
repz
imul
and
rol
cdq
cmps
popa
rcr
mov
and
shr
push
dec
adc
imul
or
movs
hlt
shl
js
lock
push
cmp
loope
das
ins
test
mov
sub
add
sub
imul
mov
cmp
movs
sub
sahf
pop
inc
mov
sbb
pop
in
pushf
dec
sub
in
mov
sub
(bad)
fcomp
pop
cld
call
dec
cmp
xor
dec
inc
clc
loopne
je
sar
push
mov
movs
ja
arpl
xchg
bound
(bad)
jl
mov
sbb
dec
mov
jbe
fwait
pop
pop
(bad)
mov
or
push
ret
and
out
mov
stos
lea
std
je
fs
push
ret
push
lea
fisttp
sar
ret
adc
fwait
push
xor
daa
mov
adc
or
jb
mov
mov
jnp
ins
add
cdq
sbb
(bad)
scas
in
pop
test
cmp
loop
aad
hlt
(bad)
repnz
(bad)
push
cs
cmp
arpl
lds
and
mov
outs
das
aaa
xchg
enter
idiv
ja
mov
xchg
push
sar
ror
lods
xor
pop
pop
enter
fucomip
jl
retf
jge
in
out
xchg
sbb
dec
nop
jo
mov
fdiv
ss
pop
pop
cmc
push
sbb
mov
je
inc
dec
and
push
jae
jmp
(bad)
mov
add
pushf
ret
inc
ja
xor
sub
repz
sub
mov
jge
js
dec
cli
jle
and
jnp
loop
clc
add
push
push
mov
repnz
icebp
xor
adc
fistp
jp
pop
pusha
mov
js
int3
rol
inc
pusha
lods
hlt
int3
lods
popa
and
jp
mov
(bad)
and
push
and
sbb
mov
imul
cs
js
lahf
jp
push
cdq
dec
popa
mov
push
jnp
bound
into
jmp
mov
mov
adc
jl
xchg
imul
fidivr
pusha
mov
scas
inc
mov
inc
hlt
jle
push
ds
mov
mov
je
jg
cdq
dec
nop
cmp
xor
mov
sbb
stos
sbb
jp
pop
(bad)
sbb
xchg
or
outs
ja
cmp
out
pop
jg
sub
adc
add
test
cmps
jb
shr
sbb
adc
pop
xchg
xchg
addr16
ss
ret
(bad)
xor
test
add
dec
imul
adc
stos
cmp
aas
or
call
mov
pop
imul
mov
cld
int3
cmp
out
into
push
es
pop
stc
stos
call
adc
pcmpgtd
mov
fisttp
hlt
retf
inc
imul
and
mov
data16
fwait
sbb
bound
lea
mov
scas
or
mov
lea
in
and
daa
or
xor
mov
sahf
test
pop
repnz
mov
or
or
adc
loopne
call
jp
sub
pop
mov
inc
std
jmp
xchg
(bad)
adc
push
sub
popf
push
push
inc
cwde
das
out
pshufw
dec
in
in
icebp
call
sub
ret
push
daa
leave
out
in
pusha
mov
loopne
out
and
dec
frstor
jno
push
cld
sti
in
sub
ins
std
mov
add
xor
dec
inc
in
jge
(bad)
push
or
jp
popa
mov
retf
push
mov
and
sbb
jp
inc
mov
aas
bound
jmp
bound
pusha
sbb
hlt
and
pop
(bad)
call
mov
pop
mov
cli
xchg
(bad)
test
fimul
mov
push
in
fstp
(bad)
fnop
in
inc
daa
int
push
jnp
cmps
pop
adc
sahf
loop
mov
and
outs
inc
popa
inc
mov
xchg
imul
cmp
(bad)
fsubr
(bad)
shl
sti
mov
jge
aas
es
add
lods
jmp
fstp
sbb
jns
cmps
add
mov
push
push
cld
fstp
out
jg
mov
xor
jp
pop
aam
add
retf
je
lods
in
lds
dec
(bad)
xchg
pop
inc
(bad)
dec
mov
pop
outs
dec
int
or
imul
test
cmp
scas
aaa
(bad)
iret
lds
dec
push
cmp
cmp
outs
(bad)
cmps
cmps
lock
and
mov
lods
ins
fcmovne
mov
sub
retf
mov
clc
das
ja
cli
add
xchg
dec
out
test
jne
xchg
and
fisubr
xor
inc
(bad)
add
mov
pop
adc
lds
inc
sub
scas
adc
outs
movs
pop
push
add
cli
mov
pop
push
addr16
mov
test
dec
add
(bad)
xchg
into
ins
out
out
and
inc
sbb
mov
inc
adc
xor
sub
call
jnp
pop
dec
out
addr16
fild
sbb
inc
stos
(bad)
jmp
or
jge
mov
jo
inc
dec
jae
ret
mov
mov
and
shl
add
aas
jle
and
shl
fnstenv
push
pop
mov
out
aas
lahf
xor
xor
jb
daa
xchg
cld
xor
dec
jmp
retf
lea
mov
and
ror
sub
lahf
fnstcw
test
daa
push
inc
loopne
xchg
push
dec
dec
repnz
xor
cld
sar
push
mov
mov
or
mov
icebp
scas
or
add
dec
push
and
sbb
or
test
push
jecxz
and
shl
adc
push
jmp
dec
mov
adc
stc
add
or
dec
mov
push
mov
mov
xchg
jge
rcl
mov
adc
mov
push
xchg
cwde
dec
cmp
jge
(bad)
push
cmps
mov
loope
in
xor
outs
pop
cmp
mov
mov
paddb
pop
jge
inc
sbb
mov
xchg
and
xor
lahf
push
adc
out
push
add
aas
xor
xor
cld
mov
cli
inc
mov
pop
jge
pop
pop
push
xlat
iret
mov
and
mov
sahf
std
lds
pop
xor
add
(bad)
mov
sub
sbb
in
js
mov
mov
hlt
push
(bad)
mov
jno
fwait
cmp
pusha
int3
ret
and
add
sub
or
sub
gs
xlat
sbb
mov
jbe
cmp
mov
add
aad
push
and
hlt
lock
and
in
sbb
mov
cmp
jmp
sub
jns
and
aas
loopne
pop
std
loop
add
cs
cmps
call
sbb
add
mov
addr16
out
adc
ins
mov
inc
(bad)
pop
in
cld
dec
xchg
fidiv
pop
cmp
and
inc
ret
sahf
add
and
out
loopne
xor
js
cs
dec
mov
cwde
push
test
jbe
or
fwait
jl
repnz
(bad)
mov
pusha
sub
inc
xchg
mov
out
jmp
inc
sbb
les
lea
imul
xor
leave
fcom
push
mov
sbb
outs
das
sub
outs
mov
xchg
in
add
pop
jmp
mov
in
and
xor
dec
and
push
xor
add
inc
aas
mov
cmc
js
inc
lods
les
outs
mov
and
mov
ficomp
mov
rcr
cdq
repnz
cdq
(bad)
pop
sub
pop
fwait
mov
xchg
scas
xchg
imul
adc
imul
sbb
(bad)
aas
mov
mov
(bad)
sahf
jne
jns
fist
pop
call
stos
or
push
mov
mov
ss
cdq
mov
ffreep
mov
aad
lahf
mov
pop
aam
stc
sbb
pop
cmp
cs
rcl
xchg
fwait
jo
mov
mov
add
shr
pop
cwde
mov
aam
cmp
sub
popf
sub
(bad)
test
pop
(bad)
cmp
fdivr
dec
cmp
push
mov
lock
push
add
repz
xchg
cmp
je
dec
xlat
es
mov
cmp
inc
inc
fsubr
jne
dec
fnstenv
sbb
sub
ficom
push
adc
mov
scas
xchg
push
pop
cli
lock
enter
lea
stos
adc
cmp
inc
push
jp
pop
xor
stos
jg
xor
mov
movs
cmps
mov
jno
fwait
std
sbb
cmps
jno
(bad)
rcr
fdivr
int3
xchg
push
xor
retf
mov
xor
pop
sub
sbb
push
leave
in
ja
fneni(8087
ss
in
add
xor
push
repz
inc
mov
pop
mov
stc
cmp
push
dec
outs
sub
popa
mov
cmp
test
push
cld
dec
mov
cdq
adc
jl
data16
adc
mul
dec
arpl
or
and
push
xchg
xor
dec
hlt
sahf
les
test
leave
xchg
and
das
jno
and
or
stos
mov
repnz
fiadd
cwde
sub
cmps
mov
fistp
cmp
mov
mov
push
loop
loop
in
add
fs
loopne
test
pop
cld
in
xor
or
fidivr
stos
es
jp
pop
ja
dec
dec
loope
repnz
sti
jp
inc
outs
nop
int3
xor
out
sub
addr16
retf
fwait
jb
je
mov
xor
adc
test
shr
iret
sbb
adc
xlat
xchg
inc
or
adc
and
adc
ins
pushf
jo
loopne
or
xor
stos
sbb
add
frstor
movs
push
mov
retf
adc
pushf
cwde
cld
pop
pop
repnz
(bad)
enter
sub
(bad)
dec
gs
repnz
lea
retf
push
pop
pop
mov
retf
and
lods
mov
xchg
stos
fadd
cmp
and
mov
(bad)
lods
cmp
movs
mov
pop
stos
dec
sub
(bad)
inc
cdq
loope
jb
cmp
mov
inc
push
popa
rep
dec
outs
cs
add
sbb
jge
(bad)
adc
jne
es
mov
js
arpl
jp
dec
xchg
jb
push
(bad)
mov
ss
rcl
mov
mov
mov
(bad)
jmp
in
pop
rcl
xor
mov
mov
into
loopne
call
loop
test
clc
cmp
xor
sub
mov
jnp
sub
loope
mov
cmps
pop
sti
je
push
and
clc
jo
jp
push
push
lods
imul
test
xlat
std
mov
vpmaxsw
pop
mov
(bad)
mov
mov
ins
dec
mov
mov
fwait
fwait
xchg
xor
test
pop
shl
retf
stos
ins
(bad)
sub
enter
(bad)
cld
xor
pop
in
mov
pop
pop
int
hlt
inc
push
mov
loop
add
fldenv
xchg
push
test
push
fsub
or
mov
lea
out
inc
hlt
mov
pop
(bad)
lock
repnz
stc
mov
and
ror
ret
xchg
shr
inc
jnp
xchg
fimul
ss
repz
xchg
xlat
lea
test
push
push
out
test
and
dec
std
xor
inc
inc
movs
out
jne
imul
popa
call
mov
push
jae
(bad)
shl
adc
(bad)
mov
fabs
sub
test
das
shl
pop
dec
sub
(bad)
dec
retf
je
pop
leave
out
inc
cmp
push
movs
xlat
inc
jo
leave
sub
lods
arpl
jnp
int3
mov
mov
in
xor
dec
jecxz
enter
mov
ja
pusha
sbb
push
sbb
sub
dec
(bad)
cmps
mov
inc
sti
and
cmp
loop
jno
mov
loope
jbe
addr16
shr
xchg
xchg
inc
dec
repnz
lahf
stc
lods
int
push
inc
cmps
test
ja
out
jno
sbb
and
out
cdq
jo
imul
loop
mov
jns
mov
push
add
shl
inc
mov
inc
add
clc
bound
call
inc
mov
cmp
sub
push
push
xchg
shl
pop
pop
jno
enter
das
mov
mov
lods
hlt
jne
sbb
(bad)
xchg
ins
int3
sub
mov
jbe
fild
(bad)
mov
in
lea
xchg
xor
or
out
cwde
sbb
test
xchg
movs
or
arpl
clc
(bad)
call
xor
in
mov
adc
xlat
lea
into
leave
xor
mov
and
sbb
mov
in
push
xchg
sub
adc
jp
push
out
clc
lea
ret
cld
stos
pop
fld
rcl
push
xor
clc
stos
loop
in
add
stos
xor
int
nop
retf
xchg
sub
lods
jl
mov
adc
rol
jl
imul
cmps
xor
jns
xor
test
sub
sub
int
push
mov
push
ficom
clc
adc
call
xchg
xchg
inc
push
test
imul
mov
dec
or
xchg
(bad)
push
lods
dec
xor
and
jge
and
pop
xchg
jb
xor
cmp
ret
xchg
shr
mov
and
adc
fcom
icebp
fdiv
xchg
mov
je
(bad)
and
popa
(bad)
xor
pop
icebp
cs
jge
adc
mov
fwait
stos
xchg
sbb
sbb
pop
dec
push
nop
xor
xchg
ror
leave
sub
(bad)
add
mov
push
cmps
pop
pop
jnp
idiv
inc
and
push
es
in
les
jmp
jae
cld
add
cmps
mov
cdq
cmp
shl
or
dec
inc
sbb
pop
clc
out
stos
dec
(bad)
fidivr
or
in
(bad)
jb
push
adc
xor
dec
push
lahf
in
mov
in
rol
pop
push
(bad)
fimul
sar
adc
movs
and
aas
stos
popa
dec
(bad)
sub
sti
fdiv
fmul
daa
sahf
mov
xchg
imul
popf
call
cld
lods
jno
dec
push
sbb
pop
xor
xchg
daa
out
add
pop
or
fwait
mov
jo
cli
pop
je
repnz
jg
bound
push
js
adc
adc
adc
(bad)
adc
push
jae
and
outs
add
(bad)
pop
and
daa
pushf
sbb
outs
adc
pop
jne
arpl
clc
cli
clc
test
mov
push
jne
les
retf
cmc
or
jae
lds
jp
dec
lea
test
dec
loope
sbb
nop
xor
je
out
mov
jae
sub
lods
test
aaa
in
nop
sar
push
adc
cmp
lea
pop
les
push
pop
xchg
cmp
pushf
(bad)
jb
movs
outs
je
repz
mov
jmp
cld
or
bound
inc
jo
call
sbb
mov
jnp
es
sub
out
popa
movs
enter
stos
jo
out
sub
xor
and
pop
enter
mov
shr
xchg
mov
imul
jp
stos
pop
jp
movs
and
loopne
adc
mov
sub
xor
into
out
(bad)
(bad)
jne
push
dec
mov
jle
and
fist
xchg
inc
fst
rcr
pop
xchg
xor
test
cli
out
cmp
cmp
test
push
and
or
push
xor
adc
cmp
sbb
jno
lds
or
lahf
pop
test
dec
(bad)
xlat
movs
pop
and
xor
cld
dec
cld
out
inc
jg
sahf
xor
pop
pusha
and
pop
sub
into
add
mov
iret
push
fild
scas
ret
jg
push
jge
xchg
fwait
hlt
call
out
push
mov
mov
stc
gs
sub
repnz
and
and
repnz
push
xchg
popf
pop
rol
push
push
data16
jmp
xor
stc
iret
push
ins
jmp
cmp
frstor
pop
xor
sub
mov
mov
push
dec
pop
adc
jmp
mov
push
fidivr
pop
cmp
cmp
imul
cmp
mov
adc
mov
dec
jno
push
sar
fucomip
(bad)
ins
iret
jge
shl
sbb
adc
out
dec
add
bound
shr
loopne
cmp
mov
mov
fild
adc
test
pop
out
dec
stc
sub
scas
dec
dec
xor
cmp
mov
add
div
rol
arpl
mov
mov
adc
mov
push
daa
cmc
sub
pop
xchg
iret
pop
jg
add
adc
or
test
cli
cmp
pusha
sub
push
pop
xchg
(bad)
fdivr
jl
aaa
mov
xor
(bad)
pusha
sti
mov
mov
and
jge
outs
pop
xchg
jns
jmp
stos
inc
mov
inc
enter
mov
push
imul
cmp
out
adc
dec
inc
shl
ds
pop
nop
das
adc
pop
es
stos
mov
aas
scas
jg
sub
jmp
fdivr
adc
mov
add
into
xchg
mov
and
call
and
xchg
jb
sbb
not
(bad)
jle
xchg
jg
dec
ret
pop
sub
jb
pop
cmp
and
imul
mov
mov
mov
mov
arpl
ins
enter
pop
cmp
ds
mov
push
mov
push
ins
frstpm(287
push
cwde
sbb
jo
cld
pop
xor
or
repz
cmps
adc
mul
jmp
pop
pop
test
je
inc
jae
xchg
xchg
mov
dec
sub
jp
aam
call
mov
not
call
ret
cmp
jl
js
and
cmp
or
adc
pop
jne
or
inc
inc
inc
inc
adc
aad
les
add
(bad)
sbb
cmps
push
dec
fstp
mov
xchg
fnstenv
inc
es
jnp
sub
jle
rol
sbb
push
mov
xchg
inc
pop
inc
jecxz
jns
adc
stos
aas
call
sub
rol
(bad)
clc
imul
pop
scas
jno
mov
bound
nop
add
sbb
xchg
sub
nop
outs
pop
out
jae
cld
pop
popf
popa
inc
add
arpl
imul
ins
retf
fiadd
pop
shl
std
pop
sbb
sub
hlt
in
(bad)
in
xor
inc
int
add
das
add
adc
retf
pop
jg
pop
adc
dec
xor
push
pop
addr16
imul
test
out
sbb
mov
push
dec
stos
sti
repz
pop
sbb
in
int3
mov
jbe
nop
dec
in
sbb
and
popa
sub
xchg
mov
jno
mov
lea
xchg
data16
pop
mov
and
in
push
imul
popf
add
xor
push
aaa
pop
sbb
hlt
adc
push
ficomp
icebp
xchg
push
scas
pop
cmps
call
repnz
cmp
push
pop
fisub
inc
scas
dec
je
jmp
cli
or
push
push
rol
aam
(bad)
push
scas
cs
xchg
repz
fsub
imul
xchg
jge
mov
imul
xchg
jae
inc
cld
daa
fidivr
out
int3
int
out
jno
mov
push
cmp
lods
lods
lods
cwde
pusha
addr16
pop
push
xor
push
adc
inc
stos
(bad)
shr
xlat
repz
gs
inc
push
outs
push
sbb
mov
or
hlt
into
xchg
lahf
sbb
js
leave
jae
sbb
jecxz
fisub
aaa
pusha
jg
shl
in
rcr
mov
in
push
or
push
sbb
pop
add
jo
loopne
mov
xchg
jae
adc
ja
adc
push
gs
mov
cmps
mov
popf
xchg
(bad)
loope
stos
adc
push
outs
mov
mov
(bad)
aad
pop
repnz
movs
cmc
dec
psadbw
xchg
mov
xchg
nop
fisubr
push
fmulp
adc
dec
xchg
(bad)
mov
ret
mov
xor
inc
outs
sbb
and
inc
in
pop
cli
cld
retf
mov
sbb
sub
add
out
in
or
inc
imul
push
repz
dec
add
outs
jb
scas
push
cdq
xor
jg
inc
inc
inc
mov
cmp
sub
xchg
pusha
rcl
dec
jp
jno
pop
data16
cld
int3
dec
or
js
jl
adc
ja
out
cmp
sub
adc
pop
inc
bound
lods
(bad)
(bad)
push
imul
les
cdq
enter
xlat
sub
pop
mov
or
xchg
push
xchg
mov
dec
mov
cmp
std
xchg
(bad)
jb
es
test
int
add
retf
jae
movs
sub
loopne
adc
mov
test
test
dec
mov
je
sub
mov
hlt
in
jnp
int3
jle
call
mov
in
cwde
sub
dec
cmp
sbb
packssdw
sbb
ins
xor
mov
ror
sub
jae
jo
es
mov
(bad)
fbstp
ins
mov
cmc
ss
mov
xchg
or
push
jno
push
adc
test
sbb
(bad)
pop
out
nop
dec
cdq
popa
sub
ror
jnp
aad
cs
inc
mov
jmp
jecxz
in
mov
add
jae
mov
(bad)
aam
mov
retf
je
lahf
movs
lds
retf
cmp
loopne
popf
(bad)
pop
jns
mov
scas
(bad)
jns
cmp
into
sub
jno
lods
lock
sub
(bad)
xor
outs
js
mov
or
jo
std
je
pop
push
(bad)
fidiv
push
mov
loopne
ret
mov
xchg
jle
xor
sar
inc
mov
(bad)
pop
inc
pop
inc
mov
push
inc
mov
xchg
scas
inc
inc
xor
dec
jg
xchg
inc
jp
jns
mov
or
pop
retf
rcl
cmp
adc
xlat
push
pop
cmp
xor
cmps
in
das
mov
and
jo
in
mov
jbe
imul
or
retf
mov
in
pusha
outs
mov
shl
loop
jnp
call
push
inc
push
ds
in
mov
add
adc
adc
jmp
in
test
call
fs
pushf
popf
push
mov
in
in
aaa
movs
jg
mov
jge
fsubr
hlt
test
cs
and
shl
pop
xchg
pinsrw
sar
clc
es
imul
scas
and
sahf
(bad)
jp
lods
add
sbb
xchg
loope
ret
sub
jo
in
stos
out
imul
outs
push
dec
push
push
aam
cmps
xor
icebp
pop
cld
jl
in
pop
adc
xchg
jnp
inc
(bad)
popa
mov
test
imul
enter
(bad)
stos
aaa
leave
push
shl
pop
pop
popf
or
and
jb
std
push
mov
xchg
shr
icebp
mov
pop
pop
adc
push
dec
in
ret
int
push
retf
bound
dec
mov
jmp
(bad)
data16
iret
inc
(bad)
mov
mov
test
test
adc
sbb
hlt
push
dec
and
jae
das
or
lods
ss
mov
xchg
shl
rcl
and
xchg
xchg
test
dec
shr
bound
mov
fcom
cmp
push
pop
imul
pop
mov
pop
pop
cmps
into
jmp
dec
popa
push
repz
loop
je
cdq
call
or
and
jns
(bad)
xor
addr16
xor
sbb
or
(bad)
pop
cmp
or
(bad)
pop
dec
mov
adc
(bad)
ins
iret
(bad)
sbb
inc
mov
(bad)
call
popf
sub
xchg
push
inc
adc
pop
movs
xor
xor
cs
es
mov
dec
jno
push
or
add
jbe
mov
popf
in
and
outs
sbb
and
push
push
out
dec
pop
inc
push
aas
daa
and
ror
(bad)
stos
inc
pop
scas
retf
js
mov
pop
or
pop
inc
inc
pop
fcom
(bad)
pop
cld
and
add
enter
mov
cmps
gs
jg
dec
sub
dec
outs
rcl
push
or
hlt
cmp
gs
mov
add
xlat
imul
shl
ins
mov
test
mov
sbb
repz
fdiv
fs
enter
mov
mov
loope
movs
xor
inc
mov
dec
repnz
sbb
adc
mov
sti
adc
sbb
nop
add
cmp
dec
sbb
dec
cli
add
push
mov
pushf
pop
(bad)
imul
adc
cmc
out
push
ret
push
jl
cmp
or
mov
adc
not
call
adc
xchg
(bad)
cmp
or
lea
sub
adc
push
in
sbb
fnstsw
sub
fild
xchg
adc
xor
outs
gs
(bad)
ficom
pop
mov
aam
inc
xchg
ss
push
loope
ss
enter
xor
loopne
setbe
jmp
stos
push
fldenv
fdivp
and
es
push
retf
push
inc
jnp
cmp
or
les
mov
in
bound
mov
sar
scas
adc
xor
stc
inc
test
retf
mov
inc
gs
nop
fidiv
sbb
mov
jnp
test
and
sahf
push
bound
inc
cmc
push
push
std
pop
inc
sbb
test
int
das
data16
and
push
adc
and
mov
xchg
jg
addr16
xor
push
test
je
mov
add
nop
mov
ins
dec
sti
pavgw
das
pop
mov
clc
enter
mov
sub
jmp
popa
mov
adc
cwde
jmp
xor
cmp
repz
mov
out
xlat
add
or
dec
and
pop
or
or
adc
pop
push
(bad)
push
mov
adc
cmp
mov
into
jbe
jmp
lods
push
jmp
mov
test
inc
push
test
pop
dec
inc
and
(bad)
pop
loopne
mov
mov
jge
mov
aas
adc
sub
out
or
mov
xchg
cli
dec
mov
push
sbb
aam
xchg
add
dec
sti
or
(bad)
shl
push
push
cwde
scas
mov
pop
rol
xchg
aam
pop
add
mov
jnp
dec
pop
push
mov
fsub
sahf
and
mov
push
sub
adc
jecxz
ror
add
test
inc
sahf
adc
xchg
pop
cmp
mov
and
loope
mov
xchg
push
xchg
add
out
or
rol
or
pop
dec
rcl
add
jmp
xor
(bad)
jp
cmps
adc
rcl
int
xor
pop
xchg
sti
xchg
fwait
push
(bad)
xor
mov
test
push
stc
mov
retf
fild
mov
cwde
push
pop
sub
adc
mov
jmp
cmp
xor
inc
enter
shr
cmps
pop
out
mov
push
pop
or
ins
push
out
sub
push
xor
stos
fistp
iret
mov
int3
pusha
sub
(bad)
cli
push
outs
cli
mov
pop
dec
sub
xchg
rol
out
cli
test
jnp
repnz
sbb
inc
cli
add
ds
xor
fld
push
inc
dec
adc
repnz
repz
push
aas
pop
int
lea
fstp
and
inc
outs
loop
jge
test
shl
sbb
add
imul
inc
shr
repnz
xor
dec
ret
or
push
cs
fisttp
mov
cld
popf
bound
mov
jmp
adc
out
out
mov
sar
cli
into
add
and
adc
fistp
inc
stc
ret
and
mov
out
out
ret
mul
jl
test
out
sub
mov
sub
jo
mov
into
lahf
cmp
sbb
popa
adc
lds
test
ins
and
mov
sbb
les
test
sbb
xor
mov
(bad)
cmp
sbb
loope
inc
jns
dec
push
mov
adc
int
push
sbb
cmc
sbb
(bad)
jge
and
shl
aas
sbb
aaa
xlat
mov
push
push
adc
out
cmps
jbe
not
(bad)
scas
dec
jns
adc
xchg
(bad)
(bad)
jg
fs
test
mov
and
sbb
mov
(bad)
es
fld
ss
push
push
out
sub
fild
pop
mov
sub
mov
jge
dec
scas
and
pop
stos
call
lods
and
pop
ficom
mov
mov
(bad)
mov
stos
pop
lods
add
(bad)
or
aam
aas
jbe
fsub
out
xchg
sub
dec
mov
sbb
push
or
into
out
jae
aaa
cmps
enter
clc
push
ror
lods
lock
xchg
xchg
loope
in
mov
mov
nop
jae
sbb
sub
and
jns
call
dec
mov
mov
pop
test
cmps
enter
mov
xchg
push
pop
mov
rcl
or
push
xchg
mov
sub
ss
dec
not
jae
pop
stc
test
push
xchg
lea
fs
rol
cmp
out
xor
into
cmp
cmp
movs
ja
or
out
aaa
xchg
hlt
jnp
mov
cmp
shr
jnp
lock
xor
adc
mov
imul
test
xor
push
dec
cmp
imul
jmp
and
mov
mov
in
dec
add
stos
cmp
or
jae
in
xor
ss
mov
outs
xchg
mov
push
iret
fistp
imul
out
dec
repnz
adc
inc
mov
inc
jns
int3
lgs
enter
loopne
scas
in
add
leave
data16
(bad)
out
stos
jne
add
push
leave
add
add
in
push
not
fcmovbe
cmc
add
mov
inc
jp
jne
leave
mov
lds
mov
xchg
inc
std
sti
push
mov
pop
or
jae
scas
adc
mov
and
loop
inc
push
jl
or
scas
jl
jo
or
mov
cmp
sbb
aaa
dec
inc
gs
and
adc
out
int
jmp
and
pusha
(bad)
lds
jle
mov
mov
nop
xchg
add
mov
nop
loop
sbb
mov
repnz
fwait
xchg
movs
and
call
jmp
popa
pop
jb
loope
in
cmp
leave
aam
xchg
xor
sub
aam
fimul
popa
nop
push
mov
aad
out
jge
out
cdq
sbb
imul
jge
(bad)
and
xor
sub
cmp
sub
xchg
xor
out
ins
popf
sbb
or
pop
xchg
or
out
fdivr
mov
loope
out
clc
xlat
cmp
lea
(bad)
outs
sbb
rcr
adc
cmp
pop
push
sub
pop
sub
or
nop
xlat
repz
push
xor
sbb
mov
add
out
ror
mul
inc
sub
fldlg2
inc
and
push
push
mov
pop
dec
retf
fyl2x
and
adc
mov
xor
(bad)
fcmovu
jmp
ins
jle
xor
pushf
mov
mov
cmp
jecxz
mov
test
aaa
rep
adc
out
arpl
adc
xor
add
aad
and
daa
(bad)
push
aaa
cmc
test
hlt
in
cmp
repnz
daa
xchg
shl
cmp
push
lahf
retf
jns
push
rcr
mov
std
pop
(bad)
push
cmp
or
mov
das
mov
mov
dec
push
xor
mov
xor
mov
cli
mov
repz
outs
push
pop
adc
pop
add
test
and
xchg
mov
ss
cld
add
jo
pop
cmp
shl
xchg
dec
push
adc
mov
das
jae
dec
popa
sbb
push
outs
lahf
(bad)
push
shl
lahf
inc
imul
retf
add
push
sub
pop
rol
jne
add
sbb
push
(bad)
(bad)
fild
mov
mov
fstp
xor
sti
popf
cmps
lods
jbe
pop
fimul
push
sub
hlt
aaa
cmps
and
add
jp
cmps
inc
sbb
inc
cld
mov
push
(bad)
shr
pop
pop
inc
sar
fld
jp
and
inc
sahf
je
fst
inc
enter
cmp
fimul
jb
inc
inc
daa
sub
in
xor
push
jp
xchg
cmp
and
mov
movs
mov
cmp
(bad)
xchg
cs
inc
aaa
icebp
loopne
mov
dec
push
xor
stc
cmps
dec
rol
pop
mov
out
jb
jno
sub
push
fsub
dec
test
xlat
add
ja
sbb
adc
outs
jno
add
(bad)
call
and
imul
cmp
cli
stos
dec
xor
and
les
mov
int3
sub
jecxz
push
mov
cmp
repz
and
add
xchg
sbb
cs
add
das
pushf
push
das
rcr
mov
enter
outs
in
dec
jo
lods
out
js
mov
rcl
sti
jb
and
into
cmps
jo
jmp
adc
push
mov
test
cld
lods
data16
lahf
xchg
sub
pop
bnd
adc
and
pop
or
mov
rcl
jp
adc
rol
add
pop
ds
int3
sahf
and
ret
xchg
leave
cmp
das
sbb
arpl
movs
xchg
daa
rcr
in
sub
jmp
jo
fadd
pusha
or
jle
sbb
mov
mov
cmp
xchg
add
pushf
xor
test
aad
and
sub
hlt
pop
ror
and
sbb
stc
add
cli
xor
and
adc
jp
mov
pop
es
daa
loope
out
scas
movs
icebp
sahf
cwde
mov
mov
rcl
and
adc
(bad)
nop
lods
pop
mov
add
gs
mov
pusha
outs
lock
dec
sub
mov
adc
jecxz
out
sti
imul
sub
xchg
ss
mov
pushf
add
or
daa
mov
push
jle
stos
test
popf
in
xor
les
cmps
loope
xor
push
test
cmp
xor
int3
sub
ret
or
add
cdq
jbe
and
mov
js
jbe
dec
gs
mov
lahf
scas
sahf
imul
mov
jecxz
mov
les
sub
movs
adc
xchg
cmp
inc
not
or
inc
test
sbb
scas
mov
pop
xchg
(bad)
sbb
addr16
js
sbb
mov
dec
loopne
ja
or
xchg
popf
cmp
lods
mov
hlt
aad
sub
inc
adc
pop
push
mov
sbb
mov
mov
int3
push
ins
jb
stos
mov
sbb
mov
sub
jo
xchg
jae
mov
fcomp
sar
cld
adc
mov
sbb
dec
mov
retf
in
push
cmp
ficom
mov
aad
push
add
xchg
xor
cli
lods
pop
add
jmp
(bad)
(bad)
push
pop
or
das
sub
cmc
mov
xchg
cmp
std
mov
xchg
xlat
repz
mov
adc
(bad)
xchg
xchg
fldcw
pop
lds
out
xor
arpl
shl
push
add
mov
jp
mov
push
cwde
dec
ffreep
xchg
mov
jnp
shl
sbb
push
sbb
les
push
aad
mov
daa
jno
jge
icebp
dec
jns
and
push
aam
or
dec
cld
call
in
shl
push
inc
mov
sar
fidiv
dec
int3
push
stc
add
adc
and
mov
hlt
pop
inc
mov
mov
lock
call
sbb
mov
loope
mov
xchg
sbb
mul
or
adc
xchg
leave
xor
push
fisttp
pop
not
jecxz
test
sar
sbb
cwde
jb
push
fs
cmp
jnp
sahf
mov
in
push
aaa
or
jecxz
sbb
aad
xchg
sbb
lods
enter
cdq
mov
push
and
lds
push
mul
aam
(bad)
inc
mov
xor
retf
mov
jb
push
cmp
and
pop
mov
pop
(bad)
ds
pushf
or
sbb
adc
std
out
mov
jl
cmc
mov
imul
add
mul
or
setle
push
add
xor
bound
mov
movs
rol
shl
movs
dec
call
jb
pushf
int3
(bad)
bound
shl
cmp
inc
jo
out
sbb
cmp
mov
inc
ins
std
push
or
mov
shr
sub
jns
pop
repz
(bad)
fcomip
adc
cmp
lods
pop
sbb
xchg
rcl
(bad)
enter
ins
add
ret
pop
aam
fistp
stos
add
mov
loopne
mov
scas
cwde
push
in
or
adc
cvtps2pd
mov
pop
inc
xchg
loop
jecxz
in
inc
pop
push
xor
dec
aaa
scas
cld
dec
adc
jecxz
fcmovnbe
je
aas
data16
lahf
in
inc
or
fcmovb
mov
and
xor
pop
jp
sbb
(bad)
js
mov
ret
dec
lods
and
test
cmp
pop
cmp
xchg
or
lahf
leave
mov
test
enter
xchg
out
arpl
push
pop
test
pop
neg
mov
pop
test
jg
sbb
icebp
imul
pavgw
add
pop
pop
xor
out
pop
fisttp
cmp
movs
inc
jmp
sbb
je
(bad)
mov
loope
call
xor
xor
je
add
pop
call
jg
je
movs
adc
setno
mov
pop
data16
loopne
sub
mov
mov
imul
lods
inc
xor
repz
mov
push
jae
or
cmp
and
adc
dec
xor
cmp
cmp
(bad)
push
shr
mov
add
xchg
rol
pop
xchg
scas
(bad)
iret
mov
std
cmc
mov
push
or
or
mov
std
mov
ss
pop
mov
xor
and
movs
xchg
push
xchg
xor
hlt
ror
(bad)
sbb
(bad)
ficom
xor
jae
popf
mov
sbb
mov
sbb
lds
inc
mov
jno
imul
imul
outs
jecxz
sub
mov
sub
or
sbb
repnz
xor
std
cmp
fld
popa
aad
sub
add
mov
push
loope
ja
pop
sbb
and
aas
and
xor
imul
cwde
mov
mov
and
mov
fstp
dec
pop
ss
imul
arpl
jo
jecxz
sbb
inc
push
sti
popf
xchg
mov
mov
adc
and
cmp
pop
sbb
cmp
inc
sbb
lea
lods
dec
aas
fild
dec
test
and
mov
inc
mov
fmul
pop
add
pop
data16
mov
js
mov
jg
(bad)
repnz
rol
mov
and
cdq
fidivr
pop
iret
push
daa
scas
push
ffreep
dec
cdq
mov
popa
inc
push
mov
cmc
add
loopne
aam
lahf
jae
xchg
enter
outs
fst
cmp
add
inc
sti
mov
test
jecxz
push
sbb
add
dec
jle
xor
ins
fcom
repz
push
push
cmps
cmp
mov
fcom
sbb
or
or
and
sub
pusha
push
in
aas
sub
sub
arpl
(bad)
cmp
lahf
xchg
and
in
(bad)
push
push
fiadd
enter
or
adc
xchg
sub
(bad)
stos
(bad)
mov
leave
hlt
dec
xor
jge
cmps
and
stc
popa
mov
xchg
dec
push
adc
(bad)
outs
sub
outs
out
pop
inc
adc
inc
fs
hlt
popf
mov
inc
inc
or
fadd
pop
popa
xor
inc
add
jmp
dec
dec
imul
enter
(bad)
pop
jp
pop
jmp
inc
lods
push
cmp
dec
mov
mov
loopne
xchg
xchg
or
sbb
jge
pop
push
dec
sub
push
dec
inc
cmp
ret
adc
das
cld
push
dec
retf
(bad)
call
fisttp
xor
jae
inc
mov
cli
jb
data16
and
ins
addr16
pushf
mov
psubd
(bad)
mov
cs
jno
cmp
(bad)
jae
hlt
ret
push
adc
inc
adc
and
jno
pop
retf
push
jno
and
mov
mov
jo
lahf
or
jg
cli
pop
stos
(bad)
mov
in
ins
inc
inc
add
pusha
movs
adc
lods
ins
je
dec
mov
jge
sub
pop
mov
fwait
mov
lds
xchg
push
jnp
fs
repz
xor
pop
cdq
loope
inc
inc
retf
or
je
cmc
or
shr
and
repz
mov
cmc
mov
pop
aam
and
test
mov
xchg
push
lock
lock
cmps
pop
mov
lods
shl
test
stc
enter
mov
js
sub
push
sar
lds
ds
lods
dec
dec
jg
in
sub
les
mov
inc
std
aad
stos
xchg
add
and
push
test
mov
jl
cmp
test
push
dec
in
or
and
aas
sub
jnp
loopne
pop
and
sbb
fstp
mov
cmp
lods
pusha
fistp
fcom
mov
leave
push
xor
pop
popa
scas
stos
add
(bad)
in
and
rcl
and
in
pusha
lock
es
rcr
shl
js
dec
jecxz
movs
or
adc
call
scas
adc
and
inc
(bad)
imul
pop
rcpps
push
pusha
mov
cdq
in
ds
test
push
xchg
sbb
leave
pusha
movs
mov
push
arpl
mov
mov
and
push
cmp
mov
call
sbb
cdq
(bad)
push
and
xlat
dec
cmc
stos
add
and
xchg
jnp
call
xor
sbb
je
mov
and
and
or
add
push
sub
out
mov
loopne
(bad)
mov
mov
fwait
add
outs
xchg
out
add
fsubr
pop
shr
adc
dec
mov
mov
sub
dec
ror
sub
jae
and
push
push
pop
fwait
sbb
test
add
fsub
fld
mov
popw
ja
xchg
inc
xor
jne
mov
aam
bound
dec
xchg
mov
mov
outs
xchg
loope
push
ds
fcom
xchg
xchg
pop
mov
retf
add
or
aaa
fs
inc
sub
ror
jno
xchg
xchg
add
mov
push
outs
(bad)
xchg
sahf
or
in
out
push
std
mov
jo
leave
retf
out
mov
pop
jo
and
call
mov
retf
push
push
inc
fdivr
(bad)
jns
add
lahf
add
fucom
rcl
adc
mov
inc
cwde
lods
xor
pop
cmc
jae
pusha
adc
jle
fcomip
jl
jne
inc
call
shl
imul
fld
rcl
cwde
jmp
test
jle
cwde
mov
push
push
fisubr
std
and
outs
mov
push
clc
fild
push
imul
mov
aas
add
dec
fmul
int
fstp
aam
paddsw
test
ins
test
jmp
loop
cmp
mov
and
loopne
js
inc
clc
dec
adc
xlat
movs
sbb
push
cs
repz
mov
stc
pushf
mov
mov
leave
mov
mul
jl
movs
fcmovb
shrd
mov
cmp
sub
fnstsw
(bad)
mov
test
lea
lds
(bad)
mov
aam
mov
push
out
cmp
dec
iret
mov
retf
jae
pop
xchg
popa
and
fst
out
xor
into
inc
add
mov
jg
retf
iret
cli
add
mov
leave
fidiv
fisttp
jo
mov
inc
xchg
pop
ds
inc
cmp
add
ins
fstp
iret
(bad)
mov
dec
shr
cmp
loope
sub
out
add
mov
sub
xchg
jne
push
xor
inc
nop
js
scas
pusha
jp
jmp
sbb
stos
jmp
inc
out
inc
dec
scas
xchg
push
ret
cmp
mov
fwait
cmp
mul
mov
push
sub
mov
out
mov
arpl
mov
adc
lahf
lds
fdivr
outs
push
sbb
adc
push
lahf
sbb
jl
mov
stc
jae
push
pop
sub
push
ret
sbb
dec
adc
cmc
daa
or
ds
aad
xlat
push
inc
push
and
xchg
push
mov
addr16
lea
ret
mov
ss
sbb
mov
jno
ins
jno
add
clc
int
inc
mov
pushf
(bad)
imul
add
and
scas
repz
not
(bad)
into
shr
aaa
cmp
push
or
cmp
sbb
mov
dec
inc
(bad)
je
scas
mov
je
jmp
sar
dec
mov
fidivr
sahf
sub
fsubr
loope
ins
mov
scas
nop
dec
repz
sub
cli
sub
sbb
mov
dec
cmp
aas
push
sub
sub
(bad)
mov
mov
arpl
test
pop
or
push
neg
add
mov
xchg
and
pop
cmp
in
daa
mov
sbb
add
inc
out
fild
mov
pop
shl
sahf
mov
mov
scas
sbb
fst
add
sub
add
or
out
lods
mov
in
scas
adc
push
(bad)
data16
mov
fwait
enter
out
(bad)
bound
shl
sbb
stos
ds
in
pushf
xor
popf
inc
push
pop
dec
cwde
sar
cli
dec
fs
repz
dec
in
shr
inc
icebp
cmp
(bad)
cmp
enter
nop
out
or
cmc
out
add
adc
fidivr
mov
and
pxor
clc
inc
iret
dec
cmp
imul
and
mov
jo
nop
stos
inc
push
inc
mov
lds
retf
jmp
neg
mov
test
sar
mov
arpl
pushf
jnp
mov
inc
test
call
push
adc
mov
in
inc
adc
pop
add
aas
dec
hlt
pop
xchg
sub
inc
sahf
sbb
mov
mov
ror
or
test
sub
cmc
clc
imul
or
or
pushf
in
imul
inc
loopne
push
jecxz
shl
mov
and
sbb
sbb
loope
ins
test
ret
mov
rcl
sub
mov
das
pop
and
pop
and
push
ss
frstor
retf
xchg
and
add
adc
sub
sub
aas
mov
and
mov
dec
mov
sbb
rcl
xchg
or
jbe
mov
ds
mov
pop
(bad)
cmc
and
and
enter
adc
inc
mov
fdiv
adc
inc
sub
out
aaa
into
pop
cmp
jo
(bad)
jnp
shl
hlt
add
clc
cmp
addr16
push
mov
lods
cmps
or
inc
dec
(bad)
(bad)
mov
fiadd
jmp
dec
push
xchg
or
clc
pop
test
out
inc
in
mov
jge
sub
sbb
xor
repz
test
loope
jnp
pop
in
sub
addr16
xchg
icebp
sub
or
ja
shl
in
in
pop
inc
adc
ds
rcr
or
and
jbe
lea
cmp
jmp
cdq
jno
mov
shr
test
inc
outs
cmc
add
sbb
rol
sub
push
iret
arpl
enter
or
and
aas
imul
sahf
cmp
mov
add
mov
mov
xor
add
stos
push
mov
jg
mov
pop
add
dec
pop
out
cs
adc
pop
inc
and
xchg
cmp
mov
xchg
pop
sbb
shl
inc
mov
jmp
jmp
jge
retf
adc
adc
push
and
jae
add
pop
rcl
lea
clc
ficom
out
out
jae
ror
pop
dec
pop
mov
jmp
test
stos
or
and
inc
jmp
fs
clc
pop
or
dec
into
sbb
mov
mov
ss
mov
jb
int
adc
add
in
hlt
cmps
and
dec
ret
mov
test
popa
pop
mov
aad
adc
imul
into
sub
(bad)
or
call
dec
icebp
fcomi
clc
nop
jg
jle
loope
mov
xchg
call
out
fwait
push
lds
hlt
retf
jo
cmp
imul
cdq
xchg
and
push
push
cli
cdq
test
sub
daa
adc
pop
das
(bad)
cld
mov
lods
pop
xor
mov
mov
loopne
push
cmps
ins
ss
les
les
enter
dec
inc
and
ss
ds
test
aad
and
push
pop
push
adc
lods
loopne
push
dec
call
mov
adc
pop
xlat
fistp
mov
xor
mov
inc
repnz
pop
adc
xchg
call
lods
adc
je
cmp
jns
into
iret
repnz
rcl
retf
sbb
pop
je
(bad)
out
sub
mov
arpl
mov
mov
jne
mov
inc
mov
in
add
inc
add
fisttp
ror
fdivr
imul
stos
cmc
mov
and
or
popa
mov
cmps
xor
dec
test
dec
or
xlat
jmp
(bad)
mov
fadd
and
sub
arpl
fadd
out
je
push
sbb
inc
lods
shr
mov
mov
adc
pop
inc
(bad)
lahf
sub
jnp
ficomp
mov
cmc
push
mov
mov
jg
imul
mov
inc
xchg
dec
test
fild
or
jo
scas
push
sub
lods
icebp
mov
pop
sti
sti
pop
dec
dec
push
call
add
ficom
pop
add
pop
mov
mov
sbb
fadd
jo
mov
jbe
retf
ss
sub
push
add
ret
cmc
sar
adc
mov
adc
and
sub
(bad)
ror
adc
cmp
sub
es
xor
jns
adc
inc
xchg
into
mov
aas
fcomi
or
pop
ins
pusha
mov
add
adc
jmp
ret
mov
xchg
sub
push
shl
and
pop
stos
cdq
in
hlt
inc
dec
in
xchg
sub
movs
xchg
add
clc
ins
fbstp
stos
sbb
jmp
gs
not
xor
(bad)
dec
div
lods
xchg
aaa
lock
test
fwait
movs
sub
icebp
and
cwde
sub
lods
inc
and
sbb
mov
stc
mov
mov
into
xchg
push
dec
nop
or
mov
addr16
or
pop
mov
fwait
xor
mov
cld
call
jbe
clc
call
dec
jmp
jmp
movs
xchg
xchg
int
inc
(bad)
sbb
add
pushf
push
fidivr
icebp
nop
and
mov
mov
or
jmp
add
call
ret
push
nop
in
cmp
je
mov
outs
mov
stos
stos
cs
fild
jge
mov
xor
fwait
jnp
cmp
(bad)
dec
pop
add
mov
xchg
sbb
leave
stos
dec
loope
rcl
pop
sub
push
sbb
sbb
xor
shl
xchg
inc
lock
adc
retf
out
ret
repz
fld
out
addr16
jle
jbe
js
iret
in
mov
dec
push
sbb
sbb
and
jg
movs
jmp
imul
imul
push
sbb
adc
ror
or
sar
sahf
pushf
or
aas
fistp
mov
or
lods
or
mov
cs
stos
rcr
cmp
xor
push
movs
dec
mov
fisttp
jmp
into
xchg
test
pop
add
jno
cmc
mov
out
push
mov
pop
ret
lea
ja
sub
call
sub
sbb
mov
shr
ja
inc
mov
(bad)
gs
mov
push
idiv
scas
and
fs
fucomip
xor
xchg
fs
jle
int
push
xor
xor
xchg
aad
bnd
xor
mov
sbb
mov
(bad)
out
mov
out
cmp
jae
rcl
push
icebp
outs
shl
and
popa
icebp
adc
xor
jmp
(bad)
mov
cmp
inc
xchg
xchg
(bad)
adc
mov
pop
fnstcw
pop
pop
sub
xor
mov
pop
push
aad
ds
cdq
mov
loopne
ins
shl
mov
xor
sbb
jmp
pop
int
inc
ss
cmp
cmps
iret
dec
mov
cld
dec
mov
adc
retf
or
mov
and
nop
jmp
add
cmps
jo
dec
lea
jecxz
inc
jge
inc
shr
stos
pop
mov
push
add
add
adc
leave
jl
rol
imul
sbb
fs
xor
jl
movs
retf
aas
or
fadd
addr16
jnp
ror
imul
mov
add
stos
not
pop
xchg
rol
or
jp
inc
in
hlt
mov
loope
and
pop
imul
stos
loope
(bad)
adc
dec
xchg
mov
mov
ret
repnz
dec
xchg
sub
stos
inc
push
add
mov
cmp
(bad)
ds
int3
jo
aam
sbb
jmp
loop
or
pushf
leave
xchg
mov
cmovnp
mov
jp
adc
push
mov
cmc
jecxz
and
call
push
jns
push
scas
mov
dec
and
test
mov
jno
stos
mov
cmp
mov
enter
test
cmc
ror
je
loop
and
in
fmul
or
and
iret
push
mov
outs
inc
(bad)
js
shl
arpl
addr16
inc
call
sti
mov
js
imul
and
fisub
idiv
retf
jo
xor
push
cmp
ret
fsubr
ret
mov
int
fwait
mov
shr
out
ja
add
inc
sbb
xor
cmps
in
aam
jb
jmp
aam
jmp
(bad)
xor
pop
out
sub
repz
jb
pop
cmp
sbb
add
jmp
sbb
mov
outs
fstp
pop
or
std
ror
xor
mov
cmp
ins
ds
xchg
push
in
mov
or
push
xor
xchg
xchg
mov
cmp
aaa
mov
cmp
scas
and
xor
fs
ja
and
sub
daa
and
aad
inc
add
inc
inc
cmp
fidiv
pusha
push
out
jo
jmp
jmp
ins
mov
push
cmps
jmp
sbb
add
jno
retf
ins
pop
sbb
call
addr16
mov
mov
movs
add
(bad)
lock
mov
repnz
sbb
push
inc
jns
fmul
ins
or
xlat
and
xchg
pop
loope
test
mov
outs
jmp
test
mov
mov
popf
add
outs
out
fmul
mov
push
jne
lea
inc
mov
mov
ins
ret
sahf
add
pop
pop
cmps
iret
outs
adc
cmp
ins
jb
dec
xchg
mov
mov
add
push
xchg
and
fcmovne
cmps
dec
int
pushf
pop
cmps
(bad)
cmp
cmps
int3
pop
or
add
cmp
repnz
add
jmp
add
lock
out
cmps
les
push
push
aam
jmp
jne
sti
movs
mov
jne
loop
nop
(bad)
repnz
pop
and
sub
pushf
inc
popa
sub
loopne
ss
ret
jns
adc
xor
mov
push
fsubr
loop
jmp
mov
mov
adc
out
test
loop
xchg
int
cmovp
out
ret
or
cs
jge
scas
add
leave
xchg
(bad)
adc
inc
dec
xchg
pusha
inc
call
jo
pop
pushf
dec
adc
jg
call
fcomp
mov
xor
pop
lea
sub
push
bound
adc
rcr
xchg
vpsadbw
cmp
inc
xchg
lahf
xlat
inc
aad
mov
xchg
pop
xchg
nop
add
imul
popa
mov
ss
cmp
stc
mov
retf
mov
rcr
(bad)
in
mov
pop
das
pushf
sub
std
sub
jmp
inc
or
and
adc
test
rcl
mov
hlt
push
mov
and
shl
sub
mov
retf
xor
add
sbb
sbb
or
icebp
jmp
popf
and
xchg
xchg
pop
ss
sbb
sbb
daa
jg
fisttp
jp
xor
(bad)
sub
pop
sub
jbe
push
cmc
stos
push
enter
call
pop
adc
pop
or
xchg
mov
ret
jmp
sub
push
aad
cwde
push
pop
xor
stos
clc
(bad)
xchg
cs
push
std
xchg
ss
jne
mov
imul
sbb
into
sti
sub
popa
jae
dec
inc
mov
loop
push
xchg
cmps
jge
fs
(bad)
push
add
sbb
lock
pop
ret
scas
and
ror
lods
xchg
pop
jne
inc
test
mov
arpl
dec
mov
imul
mov
and
jae
out
xchg
nop
movs
mov
jnp
xor
or
add
dec
xor
bound
out
stc
ror
mov
dec
push
add
je
popa
scas
pop
push
fwait
dec
push
jp
loope
mov
mov
stc
iret
psadbw
jnp
or
mov
enter
bound
retf
cld
mov
xlat
popa
in
pushf
stos
mov
call
cmp
call
outs
popa
jo
xchg
jb
cmps
sub
mov
icebp
jp
mov
dec
test
xchg
iret
sub
movs
and
fs
ss
ja
jno
cmp
cmps
push
(bad)
jmp
pushf
cmps
add
push
test
aas
rcl
pop
leave
inc
imul
mov
adc
xchg
pushf
cmp
retf
call
jecxz
xchg
xchg
jge
popf
mov
ja
jnp
inc
shl
cs
ror
and
or
mul
push
jecxz
fdiv
fadd
cwde
rcr
jle
cwde
lahf
push
daa
and
add
(bad)
into
adc
xlat
call
xor
retf
push
(bad)
das
push
out
inc
test
inc
movs
jno
es
dec
lea
into
sbb
jmp
jmp
mov
xchg
and
xchg
and
fwait
mov
xlat
sbb
and
push
and
iret
xchg
or
sub
push
jnp
inc
mov
repz
out
cmp
test
mov
push
mov
mov
out
(bad)
or
shl
stos
jmp
js
xor
lods
sbb
int3
and
out
sbb
cli
sub
or
jp
clc
cli
jl
inc
(bad)
scas
sahf
mov
fwait
jnp
iret
js
scas
pop
mov
inc
push
mov
inc
dec
cdq
push
pop
fadd
sub
mov
sbb
mov
sbb
lahf
icebp
mov
adc
jnp
call
sti
int
sub
jne
inc
cmc
add
scas
adc
fmul
cmps
push
jmp
fsubr
fnstenv
mov
into
inc
inc
es
sub
ins
inc
stc
xor
mov
push
pop
fld
dec
cmp
hlt
xor
or
jno
cmp
out
mov
test
(bad)
xor
fnsave
inc
sar
imul
mov
inc
inc
das
cmp
or
hlt
loop
mov
or
(bad)
push
outs
and
test
shl
mov
cmp
sub
in
in
xor
mov
xchg
xor
mov
or
sar
mov
gs
and
cld
retf
outs
mov
cmp
aaa
shr
(bad)
imul
xlat
pusha
xor
lds
retf
(bad)
ja
xchg
addr16
call
mov
test
pop
frstor
aam
sub
jmp
jns
std
dec
mov
repnz
mov
(bad)
push
cmp
outs
or
mov
inc
add
jae
push
out
cld
or
sub
or
push
add
mov
(bad)
sbb
sahf
ror
call
movs
pushf
dec
sbb
cmp
inc
push
rcr
ss
retf
add
fcomp
sub
cmp
bound
inc
dec
and
das
pushf
cmp
sti
nop
dec
test
cmp
or
imul
daa
bound
push
adc
mov
inc
or
mov
(bad)
xor
xor
out
and
push
cdq
pop
test
xchg
div
adc
cld
in
jbe
mov
cmp
sub
vpunpcklwd
adc
inc
xor
pop
xchg
pop
jmp
sbb
xor
mov
aaa
popa
(bad)
cmp
inc
dec
scas
cli
dec
arpl
pop
push
ror
bound
js
xor
(bad)
aam
es
push
test
pop
je
mov
ja
inc
cmp
xor
xchg
les
jno
cmp
push
and
ret
int3
data16
hlt
lods
cmc
das
jbe
sbb
jo
xor
loope
(bad)
push
in
pop
dec
mov
in
retf
mov
push
fwait
mov
and
lods
jg
mov
fnsave
movs
inc
stos
cmp
lods
(bad)
sar
adc
jb
pop
lods
xchg
clc
sbb
mov
sub
xor
rol
sar
aas
jo
fs
repz
or
cmc
adc
jno
and
xchg
mov
dec
(bad)
push
jp
ds
cdq
es
mov
and
mov
jl
xor
loope
mov
or
lahf
mov
leave
addr16
fcom
dec
loop
rol
fidivr
int
popa
aaa
cmp
ds
inc
add
xor
gs
sub
stos
jge
in
shl
in
aas
fistp
xchg
into
hlt
in
ins
hlt
add
(bad)
clc
test
fwait
(bad)
jg
jno
popf
pop
push
mov
mov
nop
imul
fistp
inc
lds
hlt
mov
jecxz
cwd
push
out
je
sub
lods
sbb
xlat
or
push
jb
movs
daa
inc
call
stos
ret
and
or
fcomi
xchg
sbb
outs
push
xchg
in
or
retf
sbb
mov
cmp
pop
outs
or
mov
xor
imul
sbb
and
inc
ret
pusha
push
pop
xor
stos
ficom
lds
into
(bad)
clc
dec
nop
ds
shl
icebp
in
sbb
enter
cmp
cmp
mov
jb
mov
pop
adc
add
sub
fst
adc
mov
adc
xor
sbb
push
inc
retf
sub
mov
dec
ja
mov
pop
or
cwde
add
in
xor
mov
int3
mov
cmp
std
mov
mov
retf
out
shr
repnz
sbb
ss
cmp
and
cmovo
and
and
nop
fisub
int3
cmp
iret
cmp
iret
jecxz
out
imul
push
mov
ror
cmp
dec
pop
test
repnz
mov
popf
imul
cli
cdq
ret
xor
fbld
cmps
push
enter
out
shl
and
je
or
pop
or
enter
mov
jo
lock
cmps
scas
sub
je
out
movs
or
bound
jno
movs
addr16
and
sbb
mov
dec
hlt
xchg
jnp
mov
mov
push
idiv
or
jmp
add
aam
and
in
sbb
add
aaa
sub
mov
lods
mov
stos
mov
push
out
leave
sar
(bad)
out
jne
dec
sub
popa
les
sub
pop
cli
les
dec
rcr
xor
mov
pushf
mov
xchg
test
bound
mov
dec
gs
std
sub
jns
jle
lea
icebp
(bad)
mov
sbb
sbb
repz
ret
outs
fnstsw
les
(bad)
popf
and
mov
dec
sti
mov
ret
test
adc
icebp
inc
fdiv
mov
lahf
imul
nop
adc
or
scas
xchg
dec
xchg
mov
cmp
nop
nop
mov
pop
sti
mov
ins
mov
(bad)
mov
jne
push
dec
div
dec
push
hlt
sahf
xchg
scas
add
(bad)
jo
push
ret
int
xchg
repnz
das
pop
xor
and
(bad)
sbb
adc
cs
int
mov
pop
add
sub
or
int
and
in
cmps
cdq
outs
aam
lds
(bad)
mov
pop
icebp
mov
sbb
(bad)
mov
and
pop
ret
aas
mov
sbb
outs
loopne
test
sti
sbb
scas
dec
mov
daa
jbe
daa
adc
mov
mov
out
pop
ins
or
mov
lds
dec
mov
xchg
jge
dec
pop
jecxz
inc
mov
fcmovne
dec
movs
jne
in
sub
movs
pop
imul
stos
inc
mov
popa
lock
push
mov
dec
mov
sub
push
pop
pop
sub
(bad)
jmp
jecxz
add
movs
dec
and
out
daa
mov
and
push
sub
jmp
pusha
sbb
dec
xchg
xchg
jnp
xor
xor
cs
std
fisubr
jl
jp
imul
lea
mov
ja
push
rcr
ds
push
(bad)
popa
es
nop
push
into
adc
jae
xchg
test
inc
call
repnz
ss
pop
inc
jae
push
and
jae
sbb
push
out
pop
movs
xchg
pusha
add
inc
call
pop
call
retf
mov
mov
mov
retf
rcl
call
or
push
push
mov
cmp
repnz
and
inc
dec
mov
add
sahf
or
xor
pushf
js
pop
cmc
sub
outs
xor
rcr
or
mov
jecxz
aas
ror
ja
ss
jecxz
pusha
fisttp
int3
pop
inc
pop
jmp
push
lds
div
push
xor
inc
fnstenv
adc
xchg
sub
int3
dec
cmp
pop
(bad)
fcmovu
mov
shl
js
or
gs
retf
jmp
push
bound
cmp
pop
aad
mov
cmp
(bad)
mov
sbb
cld
outs
push
cs
lods
sub
cmp
data16
mov
xchg
ins
xor
shl
add
xchg
cmc
in
fs
sub
push
pop
(bad)
lea
in
cli
mov
sbb
jg
fucomp
pop
add
mov
inc
daa
sbb
pusha
push
aam
add
pop
hlt
sbb
xchg
fisub
sub
xchg
xchg
test
fld
mov
fild
mov
pusha
push
(bad)
out
dec
push
aaa
and
jne
push
add
sub
shl
stos
rcr
and
ins
or
call
inc
xor
cmp
in
nop
into
pop
pop
push
jl
pop
adc
std
retf
adc
adc
xchg
shl
pushf
or
xor
cwde
stc
lock
and
xchg
mov
sbb
rcl
shl
dec
add
sti
lock
mov
mov
xor
add
ins
mov
inc
add
lahf
sar
fdivr
adc
stos
add
(bad)
fldcw
push
clc
xor
xor
push
mov
mul
inc
clc
iret
mov
xchg
adc
lahf
ins
int3
stc
dec
pop
repz
inc
push
adc
jno
test
scas
mov
out
xor
jle
push
sub
out
xchg
ficomp
test
inc
imul
pop
iret
jl
mov
cmp
iret
fwait
xchg
mov
pcmpeqw
push
fwait
inc
and
ins
xchg
rol
mov
add
test
stc
ds
jp
sub
push
adc
das
mov
inc
dec
dec
lods
pop
std
iret
std
dec
sbb
add
and
mov
pop
(bad)
and
imul
cdq
dec
lods
adc
lahf
addr16
aam
dec
xchg
xchg
movs
sub
push
jno
sbb
ja
mov
xchg
dec
adc
add
jo
call
xchg
xor
push
push
cmp
inc
jmp
dec
xchg
jg
mov
ins
fcomi
js
(bad)
push
fld
std
out
stc
xchg
fs
popf
in
pop
outs
xchg
mov
push
lods
cmps
in
sbb
xlat
sbb
and
xchg
xchg
fldcw
in
rol
inc
add
pop
add
in
mov
mov
pop
scas
not
pop
unpckhps
aam
mul
rol
imul
pushf
push
dec
pop
sbb
add
cmc
xchg
fstp
jp
xchg
arpl
cmp
push
mov
sub
das
inc
sti
test
jmp
dec
loopne
and
push
cmps
imul
or
pop
pusha
or
mov
add
jl
push
xchg
sbb
aam
lods
mov
inc
push
push
rcl
mov
sub
js
pushf
pop
mov
sub
mov
popa
dec
xor
jmp
ins
repz
test
(bad)
sti
jp
cmps
sbb
mov
mov
into
or
dec
ret
in
inc
lods
add
seta
xchg
rol
mov
movs
rcl
(bad)
jle
adc
push
adc
add
xchg
stos
enter
test
sub
pop
xchg
mul
dec
out
mov
xlat
outs
jns
lea
fdiv
loopne
loope
(bad)
jns
or
movs
pshufw
push
dec
pop
retf
push
sub
mov
cmp
mov
(bad)
mov
stos
mov
cli
xor
push
mov
call
pop
push
pop
fwait
cmp
xor
xchg
add
inc
jae
repnz
xor
scas
jle
ret
inc
vunpcklps
idiv
hlt
push
push
into
jno
test
mov
pop
mov
pop
cmp
ins
movs
fistp
or
outs
jl
clc
int
das
inc
shl
mov
js
ffree
mov
xor
hlt
xchg
dec
sub
xchg
fnstsw
sbb
imul
jg
push
inc
imul
pop
sub
fidivr
ret
shr
xchg
sbb
and
sbb
repz
cmps
inc
mov
call
push
test
or
mov
fistp
pop
aam
mov
scas
xor
fwait
scas
and
mov
mov
std
movs
mov
mov
push
mov
sub
mov
dec
jg
add
scas
in
sbb
adc
sbb
out
dec
fcomp
(bad)
loope
imul
mov
or
jmp
lods
shr
cmp
mov
mov
xchg
jg
scas
push
jmp
mov
push
mov
inc
jbe
mov
(bad)
mov
adc
hlt
or
shl
hlt
cmp
test
cmp
xchg
inc
sub
adc
inc
sahf
pop
loopne
test
sub
add
or
xor
je
jbe
pop
push
movs
xor
jg
ficom
pop
push
adc
pop
mov
mov
xchg
push
xchg
shr
and
and
add
cmp
mov
fimul
jg
xchg
std
mov
or
jne
out
push
dec
rol
adc
mov
in
scas
(bad)
ffree
pop
les
arpl
push
fwait
inc
aad
add
iret
jecxz
imul
pop
mov
pop
inc
mov
or
or
jg
and
pop
add
test
pop
pop
scas
(bad)
retf
sbb
mov
test
fcomp
xor
xor
cli
sub
(bad)
cmp
cmps
xor
arpl
daa
inc
cmc
retf
repz
xor
dec
sub
or
adc
sub
jp
adc
cmp
inc
cmp
push
out
jp
mov
iret
jmp
outs
and
je
out
test
push
fidiv
cs
xor
out
cmps
xchg
adc
or
popa
data16
inc
add
dec
push
cdq
pop
call
adc
mov
ins
stc
and
out
dec
inc
mov
inc
sbb
jmp
xor
in
rol
jo
sbb
inc
and
test
xchg
mov
ret
dec
stos
out
add
mov
cli
xchg
xor
mov
add
dec
jno
mov
in
jne
repnz
aaa
lods
aam
mov
xor
pop
mov
cmp
sbb
js
rcr
jno
out
(bad)
sar
dec
adc
inc
xor
shr
addr16
or
enter
mov
mov
scas
imul
(bad)
pop
and
sub
add
inc
adc
dec
push
xchg
add
inc
mov
sahf
call
mov
pop
ins
jp
je
sub
xchg
fs
dec
je
xor
xor
sbb
arpl
mov
mov
cmps
cmp
dec
mov
sti
sub
fcomi
mov
jo
push
inc
in
xor
xor
add
mov
fdecstp
cmp
sar
shr
ds
cdq
loop
xchg
mov
out
jecxz
dec
je
mov
xchg
iret
cmps
dec
hlt
pop
mov
les
pop
mov
mov
std
mul
fld
mov
bswap
dec
sub
cmps
hlt
in
sub
jmp
mov
push
pop
adc
cmp
lea
repnz
test
sbb
lds
and
or
in
leave
jbe
in
repnz
aaa
or
sub
test
mov
sahf
test
cdq
mov
cwde
out
sbb
push
clc
ret
in
lods
or
jge
jl
mov
pop
push
jle
paddsb
je
call
bound
cmp
jae
les
inc
cld
sahf
fdiv
push
xor
ds
adc
xor
loop
bnd
xchg
(bad)
lods
sbb
fild
int3
cdq
jbe
xchg
aad
retf
add
ds
shl
retf
ret
mov
jmp
jmp
addr16
out
test
adc
je
cmp
popf
jbe
bound
cmp
mov
cmp
pop
sbb
das
cmps
ficomp
js
scas
push
movs
nop
cmps
sbb
jne
lods
fs
mov
jno
push
mov
shr
dec
push
or
ins
adc
pop
sbb
inc
jbe
mov
mov
leave
sti
div
call
adc
xlat
sub
mov
repnz
dec
nop
aas
stc
das
fistp
pop
adc
mov
xor
bound
push
adc
ret
add
retf
mov
daa
push
stos
mov
add
or
cmp
push
(bad)
shl
push
lahf
pop
push
cmp
xchg
xchg
pop
test
mov
push
fmul
cmps
out
repnz
out
inc
aaa
(bad)
or
test
ins
test
aam
sbb
inc
loopne
xchg
cs
xchg
lds
xchg
loopne
in
scas
dec
sbb
cmp
sahf
out
dec
cli
xchg
mov
test
pop
aam
ins
mov
movs
sbb
fnstcw
jl
movs
mov
loop
movs
loop
mov
or
inc
xlat
stos
adc
pop
cmps
bound
push
test
xor
call
adc
push
outs
loopne
jnp
jns
in
pop
sub
mov
mov
(bad)
mov
mov
or
imul
shr
cmps
aam
rcl
push
outs
aam
adc
cli
xchg
sar
inc
shl
jmp
push
je
sbb
in
inc
into
imul
adc
mov
lea
pop
xchg
inc
mov
shr
ss
into
fbstp
jl
and
pop
jb
aaa
mov
mov
push
xchg
mov
pop
and
cmp
dec
and
inc
cmp
mov
pushf
sub
push
lds
iret
out
inc
lods
test
aas
pop
out
xor
push
xor
std
xchg
sbb
xchg
push
cmp
and
xchg
jne
movs
add
(bad)
data16
pop
dec
(bad)
push
sbb
outs
icebp
inc
iret
sub
adc
out
stc
stos
mov
loope
shl
xchg
mov
xchg
inc
ds
hlt
jge
arpl
(bad)
in
test
push
mov
mov
mov
jne
and
loopne
ja
fwait
cmp
lds
loopne
xchg
push
(bad)
mov
mov
sub
mov
cmp
xchg
movs
lahf
sub
pop
mov
aad
cmp
xor
aas
mov
imul
fstp
enter
rol
dec
xchg
out
cwde
mov
mov
and
call
pop
mov
ds
out
loope
ror
iret
adc
jl
es
fisttp
and
cmp
push
sbb
loope
lahf
(bad)
loopne
add
loope
or
xchg
hlt
add
and
jg
dec
ret
in
sub
mov
retf
add
stos
xchg
nop
xchg
inc
mov
mov
and
push
pop
loope
xor
jge
inc
lahf
and
and
jl
call
cmps
pop
pop
jmp
dec
and
jmp
test
test
in
(bad)
mov
jne
hlt
and
dec
inc
xor
sbb
xchg
push
cmps
imul
out
and
mov
mov
(bad)
out
inc
aaa
lods
pop
das
add
add
sub
addr16
arpl
retf
xor
inc
daa
mov
call
loope
add
jns
retf
lea
jbe
dec
test
pop
out
xchg
in
in
cmp
daa
jbe
ja
popf
stc
jno
adc
push
adc
ds
adc
leave
and
std
mov
movs
mov
adc
add
or
jnp
pushf
les
int
add
xchg
retf
dec
repnz
mov
or
xor
jmp
sub
out
xchg
mov
pop
(bad)
pushf
rcr
adc
dec
mov
ss
hlt
(bad)
mov
jl
mov
pop
xor
rol
clc
xchg
(bad)
jbe
cmp
fucomi
mov
(bad)
dec
je
mov
pop
inc
dec
gs
dec
out
imul
or
icebp
fist
repnz
stc
adc
and
cmps
cmp
test
mov
ds
inc
jne
inc
aad
mov
retf
cmp
sar
popa
push
mov
data16
jne
inc
retf
mov
aas
mov
movs
(bad)
jg
cmp
push
cmp
push
xchg
lds
mov
mov
sar
ror
mov
cli
mov
sub
clc
retf
dec
pop
dec
aaa
cmp
out
outs
add
mov
mov
fs
sub
test
stc
cdq
pop
mov
repnz
ror
dec
(bad)
inc
not
cmp
(bad)
ss
mov
outs
leave
add
inc
pop
inc
mov
test
cmc
mov
mov
xor
inc
(bad)
int
leave
out
mov
push
aaa
ins
mov
or
push
pop
(bad)
jp
mov
(bad)
pop
adc
mov
mov
xor
jns
push
jge
jmp
mul
mov
sar
div
stc
jb
inc
fcomp
mov
push
out
mov
jmp
sbb
stos
sahf
das
outs
cmc
pop
shl
xor
dec
sbb
icebp
imul
xor
into
popf
xchg
push
xchg
call
and
pop
cmp
push
outs
jno
loop
cmp
das
mov
add
cmp
ins
ins
pushf
ds
mov
retf
dec
pop
int3
mov
inc
dec
pop
sbb
scas
(bad)
sbb
mov
or
ror
dec
sbb
mov
nop
mov
dec
adc
(bad)
aam
or
add
xor
inc
test
xlat
dec
xchg
aam
and
cmps
ficom
aaa
rcl
xor
je
aaa
xchg
jne
data16
mov
and
xchg
cmp
cmp
stc
aad
int
push
das
test
out
mov
dec
popf
rcl
(bad)
loope
icebp
mov
stos
pop
es
xor
pop
icebp
pop
jnp
cld
dec
movs
stos
cmp
loopne
popa
sub
mov
cs
cmp
les
pop
and
and
sub
sbb
(bad)
cmp
push
daa
repz
mov
js
and
out
mov
cwde
jne
xchg
fs
add
pop
jecxz
outs
pop
(bad)
fs
test
repnz
mov
scas
cmp
(bad)
out
adc
cs
lods
inc
sbb
int
adc
(bad)
adc
arpl
xlat
out
rcl
movs
lods
mov
popf
sbb
call
adc
out
adc
test
sbb
movs
sub
mov
inc
jae
push
aas
sahf
jnp
xchg
call
(bad)
ret
or
xchg
hlt
cmp
jp
mov
scas
scas
je
call
in
cbw
jae
lods
jne
loop
jae
cmc
stos
lea
pop
and
out
retf
test
fs
and
addr16
pop
pop
mov
add
(bad)
adc
js
adc
enter
mov
fidiv
xor
sti
stos
push
push
repnz
out
mul
imul
inc
fild
or
bound
std
je
fidiv
out
and
scas
aad
lods
and
cli
jnp
xchg
sub
jmp
jg
iret
xchg
inc
mov
int
je
fs
push
push
retf
mov
fnstsw
es
in
xchg
push
shl
fwait
add
jb
mov
in
mov
lock
or
imul
nop
dec
addr16
out
cmp
in
add
sbb
lahf
pop
out
mov
mov
jg
js
mov
add
clc
fcomi
repnz
mov
push
add
jae
(bad)
jns
rcr
data16
retf
pop
dec
sub
aad
je
inc
pop
mov
ss
ret
lock
mov
loop
mov
dec
xchg
mov
int3
inc
add
scas
pusha
rol
aas
imul
fld
push
and
fstp
cld
mov
mov
push
push
mul
cli
pop
fwait
hlt
in
adc
push
mov
and
sub
add
inc
movs
leave
lock
loope
push
xor
fistp
sub
jne
mov
push
sbb
int
fcmove
xchg
push
xchg
test
jp
xchg
lods
adc
cdq
inc
jge
outs
repz
outs
iret
sbb
into
ss
das
jg
and
ret
ins
pusha
pop
mov
push
fist
xor
adc
jge
pop
and
or
add
aam
add
cmp
imul
xchg
loope
(bad)
in
adc
lahf
into
(bad)
repnz
scas
jge
push
fidiv
into
adc
ja
int
xchg
mov
nop
retf
das
pop
sub
mov
cmp
mov
jmp
aas
lods
or
cmps
daa
or
cmp
fdivr
push
xchg
push
aam
test
add
loope
jns
test
mov
retf
and
mov
ins
inc
jge
xor
pop
outs
sub
mov
mov
arpl
sub
(bad)
out
cmp
dec
pop
push
jp
dec
in
fisttp
int
push
xor
adc
add
push
and
fwait
ins
pushf
and
call
xchg
pop
adc
mov
and
push
out
sub
test
inc
mov
mov
pop
pop
stos
call
push
mov
pop
add
loopne
jnp
dec
inc
idiv
sub
push
push
aas
bound
dec
mov
imul
lock
retf
xchg
cwde
rol
rcr
(bad)
jmp
out
(bad)
mov
in
jl
fistp
cdq
xor
sbb
test
fild
sbb
sub
cmp
or
inc
push
adc
pop
jb
ja
xor
aas
mov
mov
lea
std
cmp
call
test
adc
mov
not
pop
ja
xor
retf
in
stos
int
mov
stos
jns
aam
jmp
pop
std
dec
out
push
sti
lea
lock
add
test
or
call
push
fmulp
sub
inc
aad
or
jne
xor
jno
shl
enter
push
pop
sub
stos
inc
sbb
scas
push
sbb
sub
mov
dec
clc
add
cmp
cmp
lods
icebp
cmps
push
pop
ja
xlat
gs
aad
sti
jb
mov
xchg
out
pop
popf
pop
addr16
cmps
push
fucomi
jns
push
and
xchg
jno
popa
or
dec
mov
icebp
mov
push
je
dec
jae
rol
data16
mov
cmp
mov
push
fdivr
inc
mov
xor
mov
pop
daa
adc
int3
pushw
fs
lds
inc
adc
add
aam
xchg
ret
and
ret
test
xchg
sub
lahf
icebp
pop
push
out
retf
jge
gs
popf
cli
jns
push
dec
movs
imul
out
scas
dec
ror
outs
dec
mov
pusha
push
xchg
adc
cmps
dec
xchg
cmp
dec
ds
sbb
aas
out
sar
jns
xor
pushf
sbb
xchg
cmc
bnd
popa
fidiv
in
mov
cmps
and
aas
mov
jmp
fucomp
mov
pop
or
inc
pusha
xchg
inc
pop
int3
(bad)
push
jne
mov
addr16
call
add
cdq
xchg
and
dec
into
mov
daa
adc
loope
inc
in
repnz
cmp
jp
push
test
pop
fdiv
outs
sar
leave
add
add
es
mov
test
inc
jecxz
add
out
adc
pusha
clc
shr
fmul
mov
dec
bts
sti
and
inc
imul
or
mov
ins
mov
push
mov
and
xchg
icebp
repz
jp
inc
sub
xchg
retf
pop
push
mov
jno
(bad)
mov
(bad)
push
fs
cdq
movs
fwait
sbb
mov
stos
dec
fldcw
adc
mov
(bad)
sub
dec
addr16
dec
test
mov
jge
push
pop
test
mov
or
mov
cmps
add
loop
shl
mul
je
sub
test
mov
retf
mov
cdq
or
mov
(bad)
sbb
(bad)
xchg
pop
test
hlt
sbb
dec
fisttp
jg
test
ja
inc
mov
cmps
add
rol
jns
stos
in
das
inc
loope
lock
sbb
outs
dec
jbe
loope
addr16
cmp
pop
int
add
in
jl
sbb
mov
(bad)
inc
jge
in
ss
dec
daa
mov
in
lods
adc
mov
sub
jns
adc
sbb
lods
sbb
imul
jbe
pop
cmp
push
(bad)
sub
into
jo
jp
jp
cmp
mov
jbe
push
pop
stc
rol
sti
sub
xor
mov
push
jecxz
mov
es
push
pop
jbe
ror
jbe
icebp
pop
sar
clc
dec
(bad)
push
dec
jle
(bad)
xchg
std
inc
(bad)
mov
(bad)
test
cmps
cmps
and
into
iret
xor
jbe
arpl
fwait
outs
jae
cmp
mov
sub
and
mov
mov
(bad)
sbb
hlt
shl
cmp
mov
je
push
inc
movs
mov
clc
pop
xor
lea
xchg
in
adc
or
ds
sbb
ss
cs
shl
icebp
fs
mov
ins
lock
mov
push
jns
push
shr
gs
(bad)
xor
xchg
stc
jno
mov
repz
dec
add
ja
sti
out
scas
dec
or
bound
mov
adc
push
cmp
jno
push
ss
or
sbb
clc
aaa
xor
pop
jnp
(bad)
cli
inc
pusha
fst
repnz
scas
push
or
mov
not
adc
ins
sbb
aas
jmp
xor
(bad)
aam
xchg
xchg
into
inc
dec
es
leave
fadd
ror
sub
pushf
inc
pop
mov
sbb
push
fwait
lods
iret
and
lds
sbb
dec
push
cdq
dec
inc
dec
arpl
mov
(bad)
rol
nop
inc
test
fmul
fs
pop
ret
fsub
cmp
retf
iret
add
out
js
or
in
sub
popf
xor
call
and
fmul
mov
shl
xor
inc
fistp
out
cwde
or
popf
inc
mov
xchg
in
add
das
xchg
mov
outs
cmps
or
dec
xchg
and
push
or
inc
jg
jbe
xchg
add
inc
hlt
sub
and
int
iret
test
test
adc
xchg
push
add
clc
mov
fdiv
push
sub
push
loop
cmc
jecxz
retf
jbe
push
dec
adc
adc
xchg
imul
imul
mov
xor
leave
paddusb
xchg
aaa
movs
jg
push
(bad)
mov
or
push
sub
sub
mov
pop
push
bnd
cs
add
mov
(bad)
cmp
add
rcr
je
repz
leave
call
outs
aaa
lock
lahf
sbb
int
mov
repz
jl
pop
rcl
inc
pushf
push
test
scas
aaa
xchg
or
push
cmp
sahf
fwait
mov
lahf
rcr
(bad)
adc
jae
daa
and
jmp
cmps
push
xor
pop
push
xchg
push
(bad)
mov
pop
xor
pop
in
cld
(bad)
aas
rol
inc
stos
sbb
int3
add
div
or
add
pushf
in
jns
leave
outs
sti
and
jge
ret
rcr
movs
push
cmp
clc
push
push
out
dec
hlt
jecxz
xor
push
and
mov
xor
inc
or
in
imul
lock
fnsave
push
je
jl
add
pop
lods
inc
mov
imul
rcl
jge
cmps
mov
pushf
mov
or
call
push
fild
in
int3
pusha
stc
loope
test
repz
or
push
push
daa
pop
inc
pop
ins
addr16
jge
push
pop
jo
sbb
int3
adc
sub
loopne
push
shr
arpl
(bad)
mov
xchg
pcmpgtw
cmp
inc
out
push
mov
mov
push
sbb
sbb
jne
mov
mov
xor
push
pushf
loopne
sub
sti
xchg
cmp
stos
std
(bad)
jecxz
xor
(bad)
mov
rol
jl
adc
cmp
xchg
out
or
test
pop
dec
sub
jb
jmp
ret
test
push
adc
mov
sbb
dec
pop
(bad)
mov
loope
out
test
inc
mov
lods
enter
sbb
mov
data16
push
daa
stc
or
add
mov
inc
popf
xchg
add
and
jle
sbb
or
push
push
es
cmp
xchg
ds
push
loope
xchg
scas
pop
imul
inc
mov
int3
xchg
xor
cli
retfw
jb
mov
out
xchg
(bad)
int
sub
xchg
gs
mov
cmp
imul
outs
cmps
test
leave
xchg
pop
mov
popf
jne
loope
cdq
aam
lods
inc
movs
cwde
test
mov
mov
mov
shl
mul
add
jmp
fbstp
push
shr
ror
das
pop
repz
stos
pop
mov
inc
mul
and
push
xchg
pop
jns
test
leave
into
sbb
pop
std
adc
adc
call
add
das
jnp
sbb
inc
jno
push
sete
call
cli
add
mov
xchg
add
jmp
pusha
dec
adc
daa
xchg
sub
lds
arpl
fucom
dec
neg
mov
xor
jmp
aam
xchg
(bad)
repz
cmps
sbb
pop
std
mov
mov
inc
ja
or
inc
enter
inc
les
pushf
adc
je
push
int3
not
inc
mov
mov
cmp
or
add
es
cmp
ret
rcl
call
push
cmp
ficom
adc
xchg
push
jmp
add
(bad)
out
inc
push
in
das
jo
(bad)
cmp
not
push
or
dec
mov
inc
shr
in
retf
stc
retf
pop
jmp
imul
jge
fdivr
in
out
jmp
retf
les
adc
enter
pop
(bad)
push
xchg
ins
int3
dec
das
push
in
outs
inc
dec
mov
cmp
iret
gs
dec
jns
into
jae
mov
test
mov
jp
or
imul
mov
push
imul
add
mov
xor
sti
pop
jecxz
pop
push
dec
jmp
xchg
mov
sbb
sbb
repz
mov
pushf
cdq
cmps
xchg
js
das
retf
shl
shr
ja
retf
dec
fadd
shl
add
iret
ins
cmp
cmp
and
jns
sub
int
repz
sbb
sub
clc
cmp
outs
imul
and
(bad)
xchg
in
push
xchg
mov
stc
ja
xchg
aam
outs
bound
mov
jb
adc
cmp
scas
mov
(bad)
jb
and
add
ror
mov
mov
dec
scas
mov
in
dec
test
ret
jb
cmp
in
pop
jp
sti
adc
inc
ja
push
loop
sbb
repnz
lea
dec
nop
ret
(bad)
adc
daa
pushf
test
cmp
sbb
jns
jp
test
test
loop
inc
ins
pusha
in
push
pop
sub
mov
sldt
cmc
pop
or
mov
mov
cmc
jo
jno
dec
jae
xor
jmp
cmp
add
mov
xor
dec
mov
sub
stc
pop
mov
mov
push
das
and
outs
sbb
call
cs
retf
stos
arpl
popa
and
cmp
test
dec
js
cmp
or
mov
cld
xchg
sub
jbe
data16
jmp
cmps
jmp
sub
hlt
xor
leave
xchg
out
mov
sbb
add
test
ret
push
bound
cld
dec
push
(bad)
clc
call
adc
(bad)
xchg
xchg
cmps
and
cmp
add
jle
add
mov
cmp
cmp
icebp
std
xchg
and
icebp
dec
mov
adc
(bad)
cwde
jo
xor
pop
out
push
add
out
call
jge
sub
dec
ins
push
xchg
mov
cmp
sbb
jb
mov
xchg
and
adc
and
inc
int
not
and
pop
xor
lahf
jae
outs
rcr
std
ret
bound
sub
adc
lea
iret
mov
xor
jnp
leave
test
sbb
out
ss
pop
sub
push
inc
aad
dec
sbb
cld
and
dec
mov
in
adc
rcr
dec
mov
lods
dec
cmps
jl
mov
arpl
faddp
push
inc
xchg
push
in
mul
fdivr
stos
mov
outs
pop
fistp
jmp
(bad)
mov
loopne
mov
les
inc
repnz
xor
shl
stc
adc
jb
cmp
loopne
inc
cmp
pop
or
(bad)
cli
in
je
popf
pop
sub
cmp
dec
retfw
leave
sar
cwde
scas
jb
cmp
mov
add
xchg
cmp
(bad)
sbb
xor
sbb
(bad)
in
les
cmp
mov
dec
aas
xchg
mov
xchg
dec
or
ins
stc
popa
cdq
jle
or
mov
fsubr
adc
jecxz
scas
mov
cwde
dec
push
not
xor
shr
xor
mov
mov
xor
outs
push
daa
pop
iret
(bad)
scas
push
push
push
jle
dec
jmp
inc
ja
push
mov
push
jmp
cmps
sbb
mov
sbb
stos
adc
pop
ds
daa
fwait
repz
popa
and
sub
push
jbe
and
ja
popf
push
push
push
or
aas
aaa
jbe
mov
scas
push
sbb
daa
jmp
mov
cmp
cs
mov
lds
movs
jns
pop
in
retf
push
adc
(bad)
add
mov
mov
jecxz
mov
cdq
jge
movd
icebp
or
pop
mov
imul
js
push
es
mov
aad
(bad)
dec
mov
pop
rol
enter
mov
enter
adc
outs
in
popa
arpl
rcr
fild
(bad)
in
lds
adc
in
hlt
test
scas
jae
add
inc
ins
dec
sbb
adc
test
push
inc
idiv
push
mov
enter
mov
stc
shr
adc
cld
mov
and
mov
fcom
aad
enter
push
mov
sbb
jns
inc
push
je
push
sbb
repnz
enter
dec
mov
cli
push
cmp
jmp
mov
mov
sbb
loop
frstor
dec
sti
push
cmp
call
(bad)
pushf
mov
daa
inc
push
mov
stos
outs
fnsave
lea
(bad)
fsubrp
inc
and
inc
sbb
mov
pushf
xchg
mov
mov
(bad)
data16
mov
push
mul
pop
xlat
test
mov
das
shr
mov
add
leave
inc
fucomp
mov
data16
stos
aad
call
ds
mov
pushf
mov
fiadd
je
jmp
push
mov
cmp
xor
push
mov
inc
sub
(bad)
push
fldl2e
xor
pop
sahf
clc
test
repz
mov
and
mov
push
clc
aaa
push
clc
mov
fistp
jns
loopne
sahf
sub
mov
mov
cmps
dec
dec
out
jae
stc
mov
fwait
pop
(bad)
inc
mov
lock
mov
push
pop
push
popa
push
inc
(bad)
and
call
das
adc
add
xchg
icebp
and
inc
hlt
dec
icebp
mov
sbb
hlt
or
test
mov
or
inc
mov
movs
aad
and
(bad)
mov
and
inc
jge
leave
in
cmp
mov
nop
inc
mov
mov
mov
cmp
sub
scas
pop
std
mov
inc
sub
lods
mov
fcomp
dec
test
je
sub
xor
or
jmp
out
mov
jmp
popf
adc
add
cmc
adc
test
or
popf
dec
mov
ret
neg
xchg
jno
cmp
retf
pop
or
sub
pop
gs
push
sub
in
or
inc
jp
mov
add
sbb
mov
jl
jg
sbb
popf
xchg
add
sub
mov
rcl
jecxz
mul
retf
add
push
sahf
popa
ja
pop
dec
push
mov
adc
(bad)
mov
retf
push
ret
div
enter
fwait
dec
movs
xor
inc
or
rcl
shr
retf
cmp
aas
inc
dec
dec
push
pop
ret
jge
in
arpl
jne
add
mov
and
pop
fidivr
out
cmp
fild
mov
loopne
inc
cmp
dec
cwde
je
pop
iret
jb
inc
or
mov
lea
push
aas
and
enter
mov
iret
jle
jmp
mov
ret
retf
gs
jle
aas
inc
cmp
or
popf
xchg
push
das
clc
lahf
lea
jmp
mov
iretw
inc
or
addr16
xor
xor
mov
shl
popa
add
inc
test
push
cmp
push
or
mov
push
fwait
xchg
mov
pop
push
or
xor
mov
dec
push
mov
adc
out
inc
adc
sub
fidivr
adc
sub
and
call
out
js
jae
inc
lahf
and
jmp
hlt
mov
pop
inc
(bad)
in
adc
das
call
inc
mov
mov
xor
and
(bad)
imul
push
std
add
in
cmp
iret
cmp
jecxz
sti
jbe
jno
pusha
cmp
out
mov
pop
mov
mov
ret
adc
hlt
popf
sub
inc
pop
xor
call
xchg
mov
and
adc
je
mov
jg
fld
xchg
xchg
adc
jno
mov
sub
test
mov
fidiv
movs
test
mov
(bad)
test
adc
pop
xchg
sub
into
cmp
dec
rol
sbb
icebp
mov
loope
xchg
push
or
(bad)
sub
fiadd
lods
push
into
push
ret
push
rol
pop
jne
adc
cmp
(bad)
test
xchg
pop
lea
adc
xlat
iret
xor
xor
ins
sti
arpl
into
jae
mov
lock
mov
and
ins
rcr
shr
nop
cmp
shr
pop
add
mov
push
call
and
jmp
lods
sti
hlt
add
cwde
push
cs
push
lock
shl
inc
sub
rcr
xlat
xchg
dec
mov
xchg
cmc
sbb
arpl
xchg
ficom
dec
lahf
loopne
xchg
adc
mov
cld
sub
imul
pop
in
sbb
fimul
ins
sti
mov
daa
hlt
(bad)
movs
mov
ss
adc
jg
jo
loop
bound
push
sahf
cmp
pop
dec
in
and
call
aaa
adc
movs
inc
ins
mov
daa
(bad)
rcl
popf
stos
dec
mov
jp
pushf
fdivr
push
sbb
lds
scas
ins
sbb
mov
mov
push
(bad)
xchg
mov
pop
enter
mov
stc
jae
adc
sbb
loop
and
mov
push
ret
rol
repz
jo
les
adc
pop
mov
cs
xchg
mov
mov
xor
cmp
test
dec
ror
pop
mov
pop
in
movs
mov
jp
and
jo
push
pop
clc
inc
mov
and
inc
mov
jl
mov
fwait
mov
fcmovb
and
outs
push
mov
cmp
cdq
(bad)
cmp
popf
mov
pop
xor
rcr
shl
fwait
mov
test
pop
jl
sub
iret
mov
pop
arpl
int3
bound
sbb
xchg
mov
inc
ja
movs
hlt
sbb
ror
dec
or
mov
rol
cld
cwde
inc
call
xor
mov
fs
fstp
data16
js
dec
ins
outs
std
xor
daa
push
mov
or
xchg
sbb
jecxz
xchg
fwait
cmc
out
popa
popa
jge
mov
dec
dec
jmp
jmp
mov
push
in
push
push
push
adc
pusha
cmp
sbb
push
scas
sub
or
jo
pop
pop
add
cmp
jae
sar
movs
mov
rol
test
aam
dec
hlt
dec
sti
sbb
jno
shl
mov
jo
adc
mov
xchg
addr16
mov
add
push
jno
leave
add
stos
push
aas
stos
movs
fwait
jecxz
lods
xchg
cmp
xchg
cmp
test
sbb
dec
mov
ret
imul
ror
cmp
and
sbb
outs
cmp
jno
cmps
outs
mov
ds
out
xor
rol
sbb
lahf
fiadd
mov
lods
ret
cdq
idiv
cmp
sub
shl
cmps
cwde
push
mov
sbb
adc
dec
pop
lea
aaa
cli
dec
jbe
jnp
es
xor
and
(bad)
push
(bad)
xlat
xchg
scas
mov
inc
outs
mov
fwait
imul
in
fdivr
ret
imul
jns
add
add
mov
or
test
or
sub
cmp
in
mov
iret
cmc
fst
daa
test
pusha
sbb
push
cmp
fistp
(bad)
mov
imul
dec
adc
adc
or
pusha
jge
loopne
cmp
adc
push
retf
cs
or
mov
xor
mov
jo
std
stos
shr
(bad)
xchg
sub
fsub
push
stos
sub
loopne
ret
pop
jp
xchg
stos
out
in
out
xchg
cmc
lods
add
cld
lea
fmul
and
mov
lahf
lods
daa
shl
int3
push
in
dec
imul
dec
adc
shl
ror
fsub
int
xchg
mov
xchg
cdq
pop
std
into
inc
dec
inc
adc
dec
sbb
pop
ffree
mov
sub
in
push
inc
mov
popf
or
adc
arpl
adc
aas
pusha
push
int3
dec
inc
mov
or
leave
mov
pop
lock
stc
fistp
lahf
lea
sub
fild
pop
test
mov
fs
ja
aam
mov
es
push
jmp
clc
jecxz
push
int3
shr
add
sar
xor
(bad)
aaa
fimul
aas
lahf
push
je
sub
stc
iret
es
push
jo
cmps
cwde
inc
sbb
mov
shl
ins
or
mov
jmp
jmp
add
inc
push
adc
lock
inc
cmps
pop
imul
mov
cmps
call
jbe
mov
cmp
mov
cwde
jb
scas
sub
nop
inc
mov
push
xor
xchg
inc
fnstsw
mov
fs
rcl
loope
popf
add
push
push
lahf
aaa
fidiv
pop
and
(bad)
jae
add
add
jbe
mov
mov
adc
and
xor
jo
pop
out
dec
es
in
ret
mov
dec
outs
ss
dec
pusha
xor
jmp
ret
cmp
movs
sbb
or
inc
mov
arpl
push
sar
jle
or
test
sub
xchg
add
repz
push
scas
leave
add
in
or
cmp
enter
out
(bad)
xor
jmp
mov
and
leave
and
pop
mov
cwde
adc
pop
jl
scas
sbb
cli
xchg
lock
adc
or
jmp
xchg
or
fld
in
fs
jbe
jp
adc
test
stos
and
pshufw
sbb
dec
mov
inc
and
retf
mov
push
ins
push
dec
stos
inc
cmp
(bad)
push
mov
dec
jmp
xchg
and
loop
fs
and
cwde
mov
mov
mov
sub
fsub
fild
ja
stos
scas
inc
inc
leave
add
stc
and
ins
xor
sub
xlat
push
repnz
add
data16
stos
out
push
pop
mov
mul
les
lock
mov
bound
and
out
jge
push
and
and
push
sti
mov
rcr
inc
lahf
pushf
rcl
punpcklwd
ret
fwait
loope
add
or
lods
mov
xor
(bad)
ror
dec
fwait
adc
stc
jp
sub
cmps
fwait
add
in
scas
sub
inc
sti
arpl
pop
push
test
sahf
and
sub
in
retf
movs
les
out
sahf
cwde
or
mov
jg
dec
or
push
bound
test
mov
loop
jmp
mov
cmps
ins
retf
pop
cld
daa
pop
jecxz
lahf
repnz
neg
shl
cmp
pop
repnz
xchg
add
pop
in
out
sbb
or
imul
mov
and
push
jae
cmp
ja
jg
movs
or
enter
mov
jae
mov
and
addr16
retf
xchg
cmp
pushf
hlt
scas
mov
jno
add
sub
inc
(bad)
mov
loopne
lea
cdq
add
inc
xor
imul
(bad)
js
(bad)
imul
fisttp
mov
cmp
inc
ss
sar
pop
mov
jl
push
sub
fsubr
cdq
bound
add
adc
in
cmp
sbb
cvtps2pd
or
add
push
mov
mov
push
int3
or
movs
in
push
and
sub
and
xchg
push
mov
data16
mov
push
lahf
fmul
dec
cwde
ret
fld
jmp
add
jnp
dec
xor
popa
xor
mov
in
or
popf
movs
sub
and
xor
sbb
jg
pop
xor
dec
das
data16
push
inc
dec
mov
imul
cs
leave
fldenv
leave
leave
cmp
xor
adc
or
rol
fdiv
jl
iret
mov
pushf
cmps
xor
into
sub
(bad)
inc
ja
aas
loop
mov
popa
cmps
sahf
call
inc
and
(bad)
clc
cmps
xor
call
mov
ret
in
ja
daa
scas
icebp
repz
ret
mov
mov
add
xchg
xchg
ret
mov
push
adc
ss
sub
push
adc
jae
jecxz
je
inc
or
pop
adc
pop
xchg
cmp
xchg
call
inc
call
and
xchg
add
(bad)
and
movs
pop
in
push
in
jecxz
lea
cmp
dec
retf
fnstsw
push
mov
add
adc
fnsave
sbb
inc
test
xchg
or
jmp
pop
xchg
stos
jnp
ret
sbb
out
ds
fwait
sbb
inc
jmp
adc
sbb
push
xor
adc
es
mov
jmp
fs
imul
pop
xchg
imul
repnz
or
je
jo
loop
call
sbb
push
les
dec
les
icebp
sbb
sbb
out
test
iret
jle
push
mov
jge
xor
mov
push
stos
shl
mul
cmp
mov
sub
xchg
inc
(bad)
jle
cmp
xor
into
and
xchg
out
xchg
mov
pop
push
pushf
dec
aas
pop
adc
fild
inc
cmps
push
stc
ret
ds
dec
das
jns
ds
mov
sub
sub
and
jp
adc
sub
adc
push
xchg
mov
ja
push
cmp
jp
std
dec
mov
mov
(bad)
cmp
dec
out
cmp
dec
jne
scas
ins
push
jge
jp
lock
mov
retf
mov
push
scas
in
sbb
cmc
stc
add
sub
inc
push
ins
ins
sar
dec
adc
sbb
cmp
jecxz
lods
and
cs
push
mov
cmps
dec
push
movs
pop
daa
icebp
inc
mov
popa
add
mov
sub
int3
das
fwait
mov
enter
stos
cwde
pop
icebp
lods
into
sbb
das
add
stos
fsubr
dec
jl
pop
jbe
daa
dec
push
mov
pop
fadd
or
pop
movs
mov
jns
mov
mov
adc
ror
movs
scas
in
imul
aam
or
mov
mov
rcl
arpl
push
xchg
outs
test
xlat
push
in
out
(bad)
retf
push
sbb
sbb
mov
lods
xor
out
add
std
test
xchg
inc
sbb
mov
xor
in
mov
pop
pop
test
shr
das
mov
sub
jp
jge
push
push
pop
add
(bad)
jecxz
shl
out
je
in
inc
mov
out
dec
or
xchg
xchg
push
bnd
xchg
ins
sub
cmp
push
jbe
push
loop
jp
pop
out
fiadd
mov
daa
add
je
mov
xor
adc
push
cmp
jge
lahf
fs
xlat
movs
shl
or
cmps
ds
and
fstp
rcr
sub
lahf
mov
es
outs
or
adc
imul
mov
jmp
sub
repnz
arpl
jecxz
adc
jmp
mov
xor
xchg
pop
outs
xchg
test
jg
mov
dec
mov
fwait
pusha
adc
and
xchg
mov
iret
test
ins
lods
xor
pop
push
sub
mov
sar
pushf
jnp
mov
jae
dec
mov
retf
faddp
mov
cmp
fistp
mov
xchg
loopne
shl
jl
and
add
adc
or
jecxz
jae
xor
mov
or
imul
(bad)
mov
adc
add
loopne
or
inc
bound
sbb
mov
aam
xchg
(bad)
imul
jl
inc
mov
jbe
and
dec
cmp
(bad)
pusha
fiadd
xchg
xor
mov
aas
jbe
sbb
mov
xchg
sub
inc
pop
xor
mov
jg
outs
jp
fist
call
sub
in
inc
rcr
dec
mov
inc
or
mov
xor
shl
sub
lahf
pop
pop
jmp
pop
mov
adc
lds
pushf
pop
sbb
cmp
lods
push
div
int3
fcomp
retf
jno
stos
hlt
pusha
js
mov
mov
les
js
pop
shl
repz
clc
aad
xor
lahf
sbb
js
daa
popa
test
data16
sbb
pmulhuw
xor
cmp
sbb
movs
cmp
popa
dec
mov
(bad)
nop
ret
mov
add
clc
pop
pop
aaa
test
cmc
cli
sbb
mov
dec
fisub
ficomp
xchg
stos
sbb
addr16
mov
ds
cmp
sbb
and
icebp
repz
pop
icebp
jnp
movs
icebp
fidiv
adc
std
ss
inc
jmp
inc
push
pop
cmp
iret
fild
mov
aam
mov
shl
mov
add
adc
mov
sub
mov
(bad)
mov
stos
xchg
dec
inc
test
outs
sub
sub
fld
ficomp
mov
fsubr
xor
ret
popf
adc
and
mov
mov
ficomp
aaa
and
cmp
cmc
cli
sbb
mov
xor
xor
imul
push
mov
pop
jmp
sub
cs
or
cli
cmp
add
add
cmp
cld
data16
add
pushf
push
adc
xor
test
fsub
and
xchg
dec
mov
mov
(bad)
jb
loopne
jbe
pop
and
loopne
(bad)
aam
jge
xlat
mov
fidivr
int3
jo
and
jmp
shr
cmp
mov
popa
jge
cmp
sub
ret
xlat
sub
icebp
dec
js
jbe
test
push
push
and
fs
mov
(bad)
mov
adc
mov
push
fdivr
cli
div
(bad)
lods
pop
mov
cdq
xchg
cmp
ror
mov
in
jecxz
adc
sub
fstp
xor
adc
push
or
xor
gs
bswap
mov
std
gs
push
pop
pop
fidivr
in
add
mov
sbb
mov
in
fst
lea
or
lahf
xor
sbb
ins
lahf
pop
hlt
sub
xor
loopne
not
out
add
xchg
aam
push
aaa
and
ins
ins
stos
sub
dec
mov
jno
(bad)
fild
sub
mov
xor
fsubr
nop
jl
mov
retf
ja
push
shl
push
dec
es
arpl
stc
pop
div
cwde
ret
inc
cwde
xchg
out
cmp
inc
fiadd
cdq
push
pusha
iret
test
test
or
or
sahf
sub
ds
adc
and
cs
mov
xacquire
mov
js
adc
stos
pop
xchg
daa
lahf
dec
icebp
cdq
mov
adc
xor
retf
ja
adc
mov
fadd
lahf
push
xchg
pop
ja
ja
adc
pop
xor
add
mov
mov
lea
mov
in
outs
push
xor
in
dec
in
dec
scas
stos
stos
test
ss
ja
mov
std
sbb
xchg
out
add
and
pop
popa
adc
and
xchg
shl
int
push
pop
rol
arpl
shl
lods
sbb
rcl
(bad)
cld
sub
dec
sbb
add
adc
cmp
inc
mov
sub
push
pop
(bad)
clc
retf
xchg
fnstcw
cmps
sub
xor
in
push
ret
lods
cmp
and
jle
(bad)
cdq
sti
daa
imul
gs
repz
out
test
inc
mov
jg
jmp
or
cld
cmp
outs
lods
cmp
test
(bad)
aam
retf
sub
scas
sbb
dec
add
adc
xor
cmp
fabs
sbb
mov
dec
pop
and
scas
sbb
xor
int3
in
int
mov
jg
dec
scas
ins
mov
mov
lds
aas
dec
mov
mov
call
sub
and
call
sub
mov
stc
movs
push
cmp
mov
and
sub
pop
mov
pop
call
sar
movs
pop
scas
ds
mov
mov
(bad)
rcr
jbe
test
inc
imul
lahf
call
adc
(bad)
dec
sar
je
ds
lds
jae
ja
test
and
sbb
mov
pusha
jne
dec
add
stc
push
popf
sysenter
psraw
mov
jo
ins
pop
xchg
sbb
(bad)
scas
test
jecxz
movs
and
add
outs
push
mov
iret
imul
das
retf
lods
pop
pop
loopne
paddusb
stos
mov
stos
rcl
push
or
sbb
cld
xor
or
fstp
mov
adc
ret
mov
and
hlt
lahf
jp
cmp
in
pop
test
ficom
outs
sbb
mov
bound
scas
mov
call
xchg
inc
cvtps2pi
xchg
inc
dec
stos
data16
xor
pop
call
add
mov
cmps
jle
mov
sbb
mov
mov
lods
add
aas
loopne
cs
pop
mov
jbe
mov
pop
test
(bad)
jno
clc
or
inc
adc
out
int3
ss
pop
fs
leave
and
pop
mov
dec
iret
mov
sbb
jno
lds
jbe
mov
scas
sbb
(bad)
mov
aas
jl
jnp
cmps
in
inc
mov
jl
push
retf
mov
pusha
jmp
jg
sub
(bad)
iret
sub
sub
fs
scas
jp
jbe
je
mov
call
dec
(bad)
(bad)
push
fidiv
pusha
mov
sar
push
jno
lahf
add
fadd
in
loope
inc
fcomp
pusha
fnsave
inc
xchg
push
dec
gs
fidivr
sub
cmp
into
mov
loope
es
cmps
out
mov
push
inc
and
ja
cmp
mov
mov
mov
cmp
and
cwde
and
and
or
jmp
daa
sahf
iret
add
fidiv
cdq
das
inc
cs
rcr
xchg
test
inc
xor
arpl
rol
es
push
shl
xchg
loope
dec
adc
or
and
inc
stc
sub
scas
adc
mov
inc
jns
push
pop
(bad)
daa
cmp
out
sub
jno
or
sbb
mov
xor
mov
add
mov
mov
cdq
dec
push
inc
jbe
js
xchg
daa
pop
ret
xor
test
call
mov
loop
in
jl
jmp
push
loope
dec
cmps
xor
(bad)
sbb
cmp
js
push
addr16
xchg
cmp
movs
ja
rcl
inc
adc
push
dec
dec
mov
mov
mov
cmp
xchg
or
cmp
fsubrp
lods
aad
mov
rol
jle
jo
pusha
call
lods
out
jns
in
add
cld
jno
mov
jmp
mov
int
or
adc
inc
call
xor
retf
pop
mov
jg
push
jns
jbe
xchg
jmp
fs
xor
and
repz
popa
ins
stc
and
fimul
cmp
sbb
adc
fst
(bad)
arpl
jp
or
push
sbb
inc
fbstp
shl
sbb
fsub
arpl
(bad)
es
je
movs
nop
add
lock
sub
mov
mov
sahf
arpl
jmp
mov
es
shl
add
and
cld
or
popf
retf
mov
shl
or
pop
mov
xchg
sbb
jecxz
out
(bad)
sbb
dec
mov
adc
jae
sbb
cli
jmp
loope
jge
je
lods
push
sti
mov
xchg
pushf
inc
sub
sbb
sbb
or
icebp
inc
sbb
icebp
rol
xchg
and
pop
cmp
data16
ficom
sub
addr16
mov
lahf
pop
inc
fcom
repz
in
rcl
popa
inc
and
call
ja
xor
pusha
cmc
cmc
sbb
scas
fistp
cmp
jge
add
les
es
adc
popf
faddp
fs
pop
inc
mov
fisub
mov
outs
mov
xor
call
xchg
adc
prefetch
or
sar
pop
inc
cdq
xor
or
jmp
adc
pop
mov
test
imul
into
out
mov
push
ss
cmps
(bad)
repnz
pop
shl
aaa
add
dec
ret
movs
cmp
(bad)
scas
xlat
loopne
and
xchg
test
sbb
(bad)
out
gs
jno
xchg
shl
lods
add
xchg
scas
pop
data16
sub
fsubr
call
jno
mov
repnz
dec
(bad)
jns
mov
movups
lds
pop
clc
push
test
cmp
popf
(bad)
mov
pop
aad
test
dec
(bad)
jns
push
stc
sbb
push
sub
xchg
jb
ror
cs
cld
test
xchg
push
or
mov
sbb
scas
inc
jmp
jp
in
mov
retf
ror
push
ds
fmul
push
repz
inc
dec
jmp
fidiv
loop
aas
adc
jb
and
or
hlt
push
inc
sbb
sbb
mov
jl
shl
in
cli
inc
retf
mov
push
pop
mov
mov
push
test
jbe
push
int3
in
xchg
retf
push
inc
jmp
aad
cli
addr16
int
xchg
cmps
add
pop
dec
inc
adc
outs
les
sbb
in
std
and
adc
movs
xchg
jne
xor
jmp
xchg
clc
mov
test
fs
jae
std
push
ja
cli
mov
jae
pushf
jg
pop
pop
aaa
jae
add
and
dec
nop
iret
movs
nop
outs
push
xchg
fs
lods
hlt
jb
add
xchg
pop
mov
mov
repnz
push
push
mov
ja
xchg
stos
imul
in
dec
or
push
xchg
and
jno
arpl
push
adc
dec
mov
cli
popf
inc
jp
mov
pop
cdq
add
arpl
cmps
sbb
mov
inc
mov
mov
dec
mov
(bad)
jno
and
mov
mov
sbb
dec
mov
fnstenv
push
mov
mov
mov
cld
(bad)
add
mov
fnstenv
pop
stos
cmp
lea
dec
jle
push
(bad)
aaa
fidivr
push
bound
and
cmp
or
call
cmp
cmps
mov
sbb
out
or
push
xchg
int
nop
scas
sbb
repz
retf
jbe
push
out
cmc
cli
xor
xchg
fs
lods
pop
and
mov
(bad)
and
or
or
add
imul
movs
jb
mov
jbe
push
adc
jb
jne
cmps
imul
test
ret
push
mov
sub
ror
(bad)
jb
fist
aas
faddp
jo
cmps
jmp
push
push
push
push
movs
mov
dec
imul
ret
xor
cmp
in
xor
int3
sbb
out
or
xor
(bad)
sub
rcr
daa
inc
cmc
outs
pop
cmp
push
push
xlat
add
mov
cmp
jb
cwde
xor
pop
inc
mov
push
push
das
fisub
popa
into
mov
popa
xor
adc
pop
pop
dec
and
mov
or
fadd
dec
(bad)
push
call
xchg
xor
fstp
stos
xor
aas
adc
test
js
sub
mov
sub
mov
mov
push
iret
xchg
gs
call
movs
push
pop
pushf
les
pop
or
xor
jle
inc
cmp
lahf
adc
test
pop
movs
inc
dec
nop
push
xchg
sbb
aas
daa
pop
jnp
mov
ins
je
jbe
fnstcw
imul
in
les
rcr
inc
outs
ins
sbb
ins
inc
jnp
js
imul
push
pop
adc
jns
in
dec
adc
pop
aam
loopne
sbb
mov
outs
fdivr
ret
imul
xor
mov
push
stc
jl
mov
add
test
sub
(bad)
icebp
xor
mov
mov
mov
movs
sbb
retf
ds
gs
jmp
stos
jo
hlt
cdq
adc
add
push
xchg
loopne
loope
test
imul
daa
adc
retf
retf
or
mov
fnstenv
retf
mov
fsub
jae
inc
adc
cdq
or
popa
arpl
xchg
cmp
fs
cmc
(bad)
sbb
lds
imul
add
jmp
(bad)
frstor
sub
mov
xor
nop
sub
push
fisttp
add
aad
aas
rcr
movs
fcom
push
sub
mov
adc
add
iret
fld
pop
inc
xor
rol
aam
mov
lahf
lods
lea
daa
dec
jns
push
xchg
imul
movs
pop
aaa
push
or
cld
data16
sub
push
push
fucomp
in
or
mov
inc
jg
clc
cmp
sbb
in
je
cmps
pop
inc
lahf
test
enter
aaa
sbb
fimul
retf
and
les
stos
pop
hlt
jbe
mov
ret
mov
aaa
push
sub
inc
cld
test
mov
push
(bad)
popa
cmps
mov
cmp
push
jae
xchg
jns
mov
fldenv
add
push
pusha
xchg
jg
xor
cmp
mov
pushf
mov
lods
adc
sub
daa
inc
mov
imul
pop
fnstenv
hlt
and
sbb
and
popf
rep
fwait
add
iret
js
add
shl
mov
in
xchg
ja
jmp
xchg
sub
or
mov
add
pushf
mov
xor
(bad)
push
add
inc
aam
and
test
fistp
mov
or
push
fimul
mov
mov
pop
outs
daa
mov
add
push
push
inc
in
xchg
loopne
rcl
ror
xor
rcl
repz
jl
xchg
adc
jecxz
xor
xor
(bad)
jbe
or
mov
pop
jb
sahf
lods
nop
and
call
jle
test
jo
into
dec
out
add
mov
or
les
icebp
adc
push
and
mov
cmps
add
retf
arpl
ret
add
arpl
jge
jno
pop
mov
je
xor
int
lds
xor
cmp
push
pop
sti
mov
cmp
dec
mov
or
test
adc
iret
xchg
daa
int3
cli
(bad)
aad
mov
jns
sbb
rcl
pop
sbb
cmp
sub
es
xchg
es
sbb
enter
pop
fiadd
call
add
movs
pop
int
nop
js
xchg
jbe
mov
jo
or
arpl
jbe
adc
and
rol
aaa
test
arpl
aaa
icebp
xlat
outs
pusha
mov
xor
sub
(bad)
inc
cmp
addr16
mov
jg
pushf
cmp
adc
push
xor
shl
xchg
xchg
scas
fwait
scas
ja
inc
xor
leave
enter
cmp
add
mov
outs
fisubr
mov
cmp
xor
pop
fmul
mov
movs
jp
mov
mov
jae
ds
fstp
push
push
rcr
mov
jbe
call
push
cmps
and
and
mov
mov
jns
popa
jecxz
mov
sti
cmps
pop
pop
dec
js
gs
in
icebp
pop
adc
in
sar
mov
push
jle
jle
cmps
arpl
sbb
ror
lods
ins
shl
push
pop
mov
imul
call
stos
hlt
fmulp
into
mov
mov
adc
test
dec
call
mov
push
cmp
adc
lea
mov
popa
shl
fs
cmps
sub
fdivr
and
mov
xchg
xchg
rcl
adc
mov
cmc
cld
jmp
in
sbb
shr
xchg
fisubr
jmp
xchg
sti
cmp
pusha
mov
fucomi
sub
cmc
fs
clc
scas
outs
mov
xor
in
jmp
out
out
test
push
mov
(bad)
scas
(bad)
xlat
std
and
xchg
ss
ret
xchg
sahf
sub
add
lods
mov
push
sbb
jb
and
inc
sub
and
(bad)
out
mov
popa
cwde
or
and
int
push
push
mov
clc
mov
jo
(bad)
out
push
fstp
pop
mov
rcr
and
mov
add
add
mov
imul
or
push
push
xchg
cmp
dec
mov
dec
call
daa
push
bound
mov
pusha
ins
dec
pusha
ins
and
inc
out
out
int
or
jmp
mov
jg
or
jno
or
fcomp
js
fsub
cmp
lahf
push
je
sbb
mov
push
clc
xchg
mov
push
mov
fucomip
mov
imul
sahf
adc
mov
rcl
ins
sub
and
or
xchg
push
dec
pop
mov
lods
adc
jbe
ret
call
arpl
mov
and
imul
ins
dec
xchg
stc
sahf
jbe
ins
xchg
mov
mov
cmc
and
jbe
sbb
mov
dec
in
push
adc
xchg
or
fnsave
ins
mov
xchg
(bad)
sbb
push
mov
dec
into
mov
dec
push
(bad)
mov
fwait
jle
mov
dec
das
push
push
stos
xchg
js
xchg
scas
scas
jbe
push
mov
mov
je
xor
fwait
mov
add
mov
sahf
sti
mov
sbb
in
scas
call
jg
add
les
rcl
call
sub
ja
lock
mov
ds
retf
cmp
sub
shl
cwde
sbb
push
inc
les
and
cmp
daa
shr
jle
jbe
mov
iret
cld
repnz
push
ds
pop
mov
mov
or
pop
in
repnz
inc
push
(bad)
popf
dec
ror
and
pop
and
xor
push
aam
add
js
mov
inc
xchg
ret
push
push
push
dec
fmul
outs
mov
pop
mov
pop
mov
dec
gs
(bad)
aaa
push
loope
popa
shl
push
idiv
ror
pop
fisubr
or
and
jge
cmp
mov
xchg
xor
arpl
in
arpl
lea
add
push
mov
lods
lds
fsubr
pop
jmp
repz
or
in
mov
movs
outs
call
push
pop
jl
test
std
or
out
imul
inc
out
mov
fs
(bad)
repz
xchg
pop
in
das
popf
retf
mov
icebp
jg
inc
sahf
fcomp
xchg
daa
inc
loop
mov
adc
ret
rcl
mov
push
pop
lock
aad
push
jnp
add
and
inc
inc
jae
jp
jl
retf
ror
pop
in
jl
adc
je
mov
cmps
jo
push
sbb
adc
dec
leave
sti
inc
cmp
repz
xor
jle
ror
pop
leave
hlt
mov
xor
call
push
xchg
xchg
sbb
mov
sbb
xor
sbb
movs
add
xor
aaa
mov
into
jno
rcr
test
sbb
mov
sbb
adc
paddd
cmp
adc
shl
gs
imul
cmpxchg
push
scas
cmps
cmp
or
jmp
inc
mov
hlt
dec
jg
repz
inc
push
fcomp
cld
sahf
aaa
retf
sbb
jge
mov
inc
xor
add
daa
or
outs
rcl
jg
mov
ficom
cmp
rcl
cdq
ins
es
fld
stos
aas
inc
ret
femms
ja
in
xor
iret
(bad)
test
xor
cs
in
stc
dec
xchg
hlt
sub
test
shr
or
push
pop
ret
leave
dec
mov
add
jb
out
jno
and
fmul
jns
adc
push
pushf
lea
outs
sub
mov
add
stc
int3
sub
pop
xchg
pop
lods
call
sub
lock
out
in
ins
(bad)
clc
xchg
jmp
and
(bad)
push
mov
clc
jle
pop
jbe
cwde
enter
sub
fst
push
div
mov
test
iret
sbb
mov
push
shl
sbb
outs
fisttp
sbb
pop
movs
cld
or
cmovae
es
es
dec
and
sbb
and
hlt
mov
xchg
imul
adc
mov
call
lahf
pop
dec
(bad)
in
pop
addr16
cmp
add
leave
push
dec
lods
pop
mov
add
mov
push
push
out
mov
mov
js
cli
adc
les
iret
pusha
es
mul
xor
sub
aaa
sub
rcr
dec
adc
xor
push
out
mov
fnstcw
push
rol
push
sahf
stc
adc
push
les
dec
jae
jo
pop
gs
int3
add
sti
(bad)
ret
enter
outs
(bad)
orps
xor
xor
into
push
(bad)
js
nop
imul
mov
fild
rcr
xchg
int
and
movs
mov
and
jmp
out
daa
mov
sub
xchg
ja
test
and
stc
call
retf
pop
dec
out
xchg
mov
imul
xor
enter
cld
ins
mov
mov
inc
inc
cmps
cmp
retf
or
clc
bound
sbb
shl
mov
pop
call
mov
cmp
push
inc
in
mov
add
mov
add
sub
and
fs
sbb
or
sub
popa
xchg
or
pop
jmp
(bad)
sub
pop
push
and
add
das
adc
cdq
fcomp
pop
inc
adc
jmp
pop
clc
push
movs
test
push
movs
jge
loope
push
int
pop
add
jg
test
jp
or
loopne
fsub
mov
cwde
repnz
ror
leave
add
cli
call
fs
lock
je
inc
mov
daa
mov
cmp
dec
inc
fs
or
sahf
cmp
mov
xor
mov
ds
push
mov
inc
retf
inc
jmp
push
cdq
xchg
jno
out
aas
in
aam
xchg
test
xor
cmp
inc
cmp
mov
sub
cmp
pop
jmp
inc
lds
hlt
es
rcl
sbb
mov
adc
ds
pop
out
cli
mov
cmps
xchg
add
xchg
in
mov
mov
jo
je
sbb
out
xchg
scas
xor
jmp
jecxz
mov
enter
stos
pop
push
sbb
loopne
sbb
stc
adc
and
jno
pop
push
sub
sar
mov
inc
test
ret
cdq
sub
jg
inc
mov
and
adc
mov
int
leave
mov
and
mov
mov
out
jge
movs
popa
popf
mov
push
or
cs
outs
pop
jg
add
loop
sbb
mov
push
leave
pop
sbb
inc
jp
or
xchg
loope
or
pushf
arpl
jecxz
lock
nop
inc
or
outs
loopne
movs
pop
jmp
stos
call
pop
xchg
mov
inc
add
jnp
jecxz
cmp
int
cmps
cld
xchg
xchg
mov
xlat
push
popa
pop
mov
retf
pop
cwde
xor
mov
adc
xor
cmps
xlat
vpaddd
xchg
retf
ret
jae
lods
sub
(bad)
ror
pop
(bad)
iret
fwait
cdq
in
adc
lods
pop
jecxz
rcl
dec
out
retf
add
or
out
(bad)
cli
lahf
aam
call
ja
movs
pop
loope
lods
sub
jns
jae
push
mov
sahf
pop
xor
dec
and
mov
sub
aad
jno
test
cwde
jns
mov
retf
mov
int3
and
mov
ret
xor
mov
sahf
and
stc
mov
jle
inc
inc
shr
jne
xchg
lahf
add
jno
mov
mov
(bad)
mov
js
jns
mov
jae
mov
sbb
repz
push
cmps
push
or
pop
jecxz
shl
mov
mov
jp
out
(bad)
idiv
arpl
shl
push
push
call
adc
push
or
hlt
test
sub
ret
mov
push
push
adc
arpl
cs
cs
in
xchg
in
iret
cmc
call
sub
leave
scas
lock
push
or
push
in
push
pop
int3
push
sub
dec
rol
sub
es
push
shl
cmps
mov
push
mov
lods
call
aaa
std
xlat
in
mov
bound
cmp
sub
xchg
pop
jg
leave
out
push
ret
lea
sub
push
and
das
add
mov
jae
test
xchg
rcl
outs
push
push
js
add
sub
and
gs
xor
out
adc
aam
pop
pop
cmc
dec
rol
and
enter
ins
or
and
or
and
into
cmovne
sub
mov
adc
ds
addr16
cmps
(bad)
sahf
adc
sub
add
jae
movs
lea
jle
sub
(bad)
cmp
and
jmp
bound
inc
jge
cs
(bad)
imul
and
and
cdq
rcl
sub
hlt
mov
or
jl
dec
cmp
lods
bound
add
imul
mov
clc
dec
neg
cmps
jbe
pop
push
shr
jmp
adc
mov
xchg
jae
retf
mov
or
or
js
aam
in
add
jae
stos
jns
js
sub
cmp
add
push
dec
bound
jo
cmc
adc
cmps
popf
cmp
rol
inc
xchg
popf
jmp
pop
pop
shr
inc
retf
xchg
daa
bound
xchg
xchg
push
lock
gs
sub
stos
jae
cmp
mov
jne
xlat
icebp
push
fwait
mul
cmc
jmp
les
aam
mov
adc
hlt
dec
mov
mov
sub
pop
inc
pop
neg
cmc
sbb
push
cdq
jno
in
adc
mov
jecxz
push
mov
das
(bad)
out
mov
jae
add
in
xlat
sahf
jg
xchg
xchg
jnp
je
dec
xor
or
dec
retf
ins
dec
scas
add
mov
cmps
push
adc
mov
jae
std
fcomp
lds
mov
adc
loop
in
mov
fstp
push
mul
fiadd
inc
dec
leave
sbb
movs
scas
xor
in
mov
mov
inc
inc
daa
ret
jmp
and
test
pop
fwait
call
pop
mov
mov
pop
and
lahf
icebp
out
retf
inc
mov
adc
mov
sbb
or
pop
pop
sub
es
push
or
cs
scas
mov
fimul
sar
jle
inc
xchg
dec
or
fbstp
push
add
ds
mov
jne
aaa
js
push
xor
xchg
data16
jno
dec
xchg
sub
out
push
dec
cmp
mov
dec
sbb
sahf
mov
xchg
add
(bad)
fstp
imul
neg
pop
retf
pop
aas
add
fsub
in
loop
add
fistp
jecxz
jmp
test
mov
cwde
test
mov
push
(bad)
scas
or
ja
mov
add
sbb
jo
fnstcw
ins
and
mov
bound
inc
dec
dec
lods
xor
or
add
xchg
xchg
es
add
iret
in
adc
adc
cmp
imul
cdq
lods
pop
mov
pusha
xor
mov
ds
in
sar
push
cmp
test
dec
test
das
lds
sub
mov
xor
add
ret
inc
or
push
shr
loop
stos
stc
cli
movs
xchg
aas
dec
out
idiv
sbb
dec
data16
movs
adc
ins
lds
les
sete
mov
mov
sub
in
lock
fsub
clc
mov
fstp
sub
sbb
or
cmp
test
inc
jp
xchg
arpl
pop
cdq
and
add
mov
mov
aas
dec
ror
mov
add
imul
push
jmp
fiadd
(bad)
cli
or
mov
adc
push
adc
dec
(bad)
(bad)
pop
mov
jmp
mov
add
cmp
sub
(bad)
int3
movs
sub
jb
pop
test
mov
ins
mov
or
xor
mov
pop
std
outs
je
js
imul
mov
or
loopne
scas
jp
in
xchg
pusha
cs
push
cdq
not
out
out
jle
sbb
pop
fistp
sub
jns
xchg
ins
pop
add
sub
jg
cs
inc
sar
es
mov
cmps
pop
outs
cli
sub
and
retf
inc
jl
jo
mov
mov
iret
aaa
nop
lahf
lock
jmp
cmp
xchg
jmp
test
and
pop
dec
push
or
stc
jno
adc
xlat
enter
and
mov
retf
in
cwde
mov
push
sub
in
lods
lds
adc
aas
pop
imul
les
daa
inc
push
adc
or
sbb
dec
push
push
push
in
pop
sub
adc
dec
aam
ins
mov
ds
jne
and
dec
(bad)
je
aad
cmp
jo
and
and
in
dec
pop
sbb
shl
inc
sub
xor
retf
mov
js
ins
xchg
inc
push
sbb
cmp
jnp
or
in
and
adc
fucom
(bad)
fstp
aas
in
fs
dec
add
pop
push
sbb
cmps
jp
mov
mov
jne
add
fisubr
mov
test
sub
and
shl
or
mov
xchg
push
mov
mov
jb
mov
lods
adc
xchg
sbb
repnz
or
sub
das
xchg
add
rcl
xchg
inc
stos
into
ror
aad
lahf
jge
xchg
xor
inc
and
mov
xor
mov
lds
clc
jns
les
lods
add
aas
in
jmp
cmp
sub
sub
adc
retf
push
mov
aad
ss
xor
ins
mov
outs
adc
dec
xchg
pop
mov
ds
add
arpl
ja
push
ja
repz
add
mov
inc
sbb
jmp
les
xor
aas
jo
rcr
and
ja
xchg
(bad)
scas
stos
jae
repz
xchg
jne
popw
fs
inc
add
fcmovbe
(bad)
in
adc
sbb
sbb
(bad)
call
pushf
jmp
cmps
int3
add
scas
ins
sub
loopne
add
gs
dec
pop
jecxz
jge
inc
addr16
mov
pushfw
push
in
aas
shl
jle
xor
push
stos
push
and
ds
arpl
xor
mov
xchg
cmp
clc
push
cmp
jmp
add
jmp
push
jmp
and
inc
xlat
scas
cmp
lods
sub
inc
movs
ficom
ret
pop
mov
movs
int3
inc
(bad)
inc
sub
mov
mov
out
push
fdiv
stos
adc
xor
fnsave
daa
xchg
ret
inc
js
sbb
add
xchg
mov
retf
jbe
mov
jns
pop
std
cmp
cli
xchg
mov
cli
mov
dec
xchg
daa
popa
les
aaa
test
hlt
cwde
lods
pop
ins
lea
xchg
sbb
aas
stos
xchg
cmps
shl
outs
jg
loope
sti
mov
scas
mov
pop
or
mov
int3
ret
push
mov
fld
sbb
inc
push
ins
cmps
call
and
mov
fwait
data16
and
js
mov
mov
or
adc
jmp
je
call
mov
movs
fldenv
mov
and
dec
and
cmc
in
clc
nop
aad
retf
loop
jb
stos
lds
ror
mov
mov
adc
into
sti
lds
inc
scas
jecxz
test
add
lods
xchg
int3
sbb
cmp
jmp
xchg
sbb
xor
daa
dec
ss
repz
xor
mov
iret
push
xchg
push
cmp
sbb
call
fs
mov
adc
or
or
add
fs
pop
xor
pop
data16
clc
inc
xor
pusha
sbb
ror
push
push
and
gs
and
in
cmp
mov
aam
dec
xchg
adc
xor
ja
test
loopne
jmp
in
(bad)
and
les
xchg
xchg
mov
in
in
aad
xchg
cld
ja
sbb
imul
aas
adc
pop
mov
sub
mov
inc
das
push
(bad)
mov
add
das
jb
clc
fild
sub
xchg
dec
xchg
dec
xchg
sbb
pop
pusha
stos
popf
xchg
in
mov
dec
stos
pop
dec
mov
pushf
mov
adc
and
stc
mov
(bad)
fidiv
stc
les
cld
adc
push
cmp
mov
inc
mov
and
pushf
mov
push
or
into
cmp
push
jns
pop
sbb
ins
pop
out
movs
sbb
cs
add
enter
nop
mov
mov
fstp
ret
(bad)
dec
dec
rcr
fisttp
frstor
outs
push
cdq
cmp
lock
add
push
jmp
and
inc
retf
xor
adc
(bad)
jge
sbb
mov
ret
push
repz
loopne
sbb
(bad)
mov
mov
hlt
adc
adc
ret
and
jge
and
ret
push
adc
xchg
and
xchg
in
ficom
mov
addr16
pop
inc
xchg
in
and
loopne
sub
inc
cld
cli
mov
lods
xor
pop
lahf
scas
push
jne
cmp
sbb
mov
into
mov
fnstsw
retf
mov
mov
cmp
push
add
jo
pop
js
dec
mov
jp
pop
pushf
jo
cmp
dec
imul
pop
stc
out
fst
xchg
jmp
into
mov
sub
in
loope
loope
sahf
mov
sbb
popf
lods
xchg
cmp
fcmovnu
or
jmp
xchg
inc
(bad)
sbb
ds
xor
daa
fbld
out
mov
fistp
jns
sbb
(bad)
aaa
mov
jo
imul
cmps
in
daa
rcl
movs
js
mov
and
in
lods
into
lds
dec
xchg
mov
shr
sbb
lods
fs
pusha
lahf
xor
outs
(bad)
pop
data16
mov
and
push
mov
sub
cmps
in
ss
shr
out
sahf
or
loop
and
mov
cli
dec
and
xor
lock
out
adc
ins
clc
xor
push
pop
cmps
ja
(bad)
dec
cmp
fcomp
cs
and
or
pop
arpl
sbb
add
push
sar
call
inc
iret
fadd
mov
pop
xchg
xor
sub
dec
shl
movs
push
pop
jmp
pop
ins
jecxz
(bad)
xor
push
sti
dec
(bad)
sti
mov
in
push
aas
and
mov
jb
lahf
jno
mov
fld
(bad)
in
pop
xchg
xor
mov
push
stc
adc
ret
data16
xchg
pop
push
nop
inc
cmp
adc
pop
and
or
shl
sar
xor
imul
stos
repz
push
pushf
ja
and
imul
stos
(bad)
mov
xchg
popf
sbb
in
add
ins
jg
ds
mov
mov
call
repnz
(bad)
scas
mov
fdiv
in
popf
xor
mov
sbb
sti
je
in
ds
(bad)
rcl
mov
push
mov
add
or
lahf
das
hlt
sub
repz
xor
mov
and
retf
push
xor
inc
xchg
cdq
dec
and
sbb
fdiv
xor
mov
daa
add
cwde
and
mov
test
stc
out
outs
mov
mov
cmp
pop
aaa
loopne
test
inc
dec
adc
xor
add
or
cdq
pop
mov
push
mov
inc
sti
outs
jmp
clc
jae
mov
or
and
outs
mov
cdq
imul
ds
jne
mov
push
xchg
fstp
mov
and
daa
add
xor
and
push
pop
xchg
mov
mov
mov
pop
push
pop
in
jae
test
cmc
or
out
sub
adc
inc
adc
dec
neg
inc
adc
mov
loop
push
jnp
and
stos
xor
aaa
popa
mov
int
and
es
mov
jp
sub
sub
cmovg
pop
xchg
sub
movs
dec
or
jo
imul
fcomp
(bad)
inc
jnp
out
add
xor
xor
add
inc
loop
push
repz
adc
sbb
mov
retf
sbb
nop
cmp
lds
jl
cmp
hlt
stc
mov
cmp
(bad)
(bad)
ins
dec
iret
cld
xchg
cmp
ins
and
sub
jp
ss
add
or
scas
sbb
movs
dec
pusha
pop
xchg
jl
enter
jmp
shl
dec
push
sub
add
in
and
push
mov
cmp
push
sbb
add
test
imul
aas
jl
(bad)
pop
lock
arpl
nop
add
push
inc
cmp
addr16
sbb
adc
int
xor
jle
shl
pop
pop
push
lock
sti
mov
rcr
mov
cmps
(bad)
test
es
sbb
jno
dec
(bad)
mov
sub
dec
pop
leave
jle
push
inc
inc
out
aam
mov
std
mov
mov
dec
push
adc
test
adc
and
nop
lock
fcom
xor
cmps
mov
add
jnp
mov
xchg
aaa
xchg
mov
out
pop
pop
je
hlt
ds
lock
sti
std
mov
xor
aaa
push
into
and
call
mov
xchg
push
sbb
dec
mov
addr16
xchg
mov
imul
cli
inc
mov
sbb
arpl
pusha
adc
sub
aaa
adc
jg
cmp
xchg
mov
rcl
jb
mov
cmp
fcomip
and
fs
xor
mov
mov
sahf
loopne
mov
es
adc
aad
mov
into
mov
cmps
out
push
and
enter
and
and
(bad)
xchg
mov
retf
xor
lods
jb
addr16
or
iret
sbb
pop
dec
mov
sahf
xchg
push
movs
stos
gs
stos
mov
ins
or
leave
mov
pop
and
cwde
xor
inc
xchg
push
sar
and
(bad)
ror
loopne
mov
ds
sub
lahf
add
(bad)
jl
pop
enter
mov
ror
adc
fadd
adc
jl
and
xor
fild
out
pop
xor
cmp
and
dec
mov
jns
xchg
jmp
dec
outs
cmps
sbb
repz
jnp
add
movs
pop
sar
xchg
sti
cmp
push
icebp
movs
outs
and
add
add
retf
xor
aam
pop
or
add
hlt
je
and
cmp
xchg
sbb
loopne
pop
sahf
and
xchg
sbb
inc
xchg
sub
shr
mov
int3
sbb
jae
loop
cld
ins
in
or
xor
aas
and
mov
sbb
push
xchg
cmps
cmc
mov
retf
push
sub
cmps
jl
sub
sub
mov
xchg
paddq
call
add
dec
inc
imul
stos
rcl
div
inc
je
inc
loop
or
int3
inc
xor
add
jecxz
(bad)
jecxz
cmp
add
jmp
cwde
nop
push
loope
pop
sub
js
out
sub
clc
daa
inc
xlat
sahf
jbe
xor
lds
dec
stos
repnz
popf
xor
pop
(bad)
mov
inc
cmp
fadd
xor
xchg
mov
xchg
mov
iret
pop
les
mov
sbb
retf
dec
daa
dec
mov
sbb
mov
xchg
imul
lahf
repz
cmp
inc
xchg
push
mov
int
or
push
pushf
and
gs
sbb
push
aaa
mov
push
mov
push
bound
push
ins
pop
popa
test
enter
cdq
pusha
jae
imul
retf
mov
push
mov
gs
mov
popf
push
sub
xchg
in
ins
mov
gs
lods
jnp
sahf
cmps
mov
jmp
ins
mov
(bad)
xor
rcl
push
or
and
icebp
jmp
cdq
sti
inc
sbb
imul
or
jo
or
and
sbb
sub
and
add
and
jp
lock
sub
dec
enter
rcr
stos
xchg
loopne
aaa
push
outs
ret
call
sbb
ror
test
movs
iret
sub
inc
jns
mov
retf
(bad)
movs
push
stos
inc
push
adc
loope
jp
xchg
jb
adc
cmps
sbb
pop
jge
or
aaa
aam
jnp
adc
shr
inc
sub
rcr
and
clc
or
retf
jbe
and
jns
inc
data16
and
pushf
inc
add
inc
mov
outs
jnp
cmp
push
jecxz
in
dec
mov
pop
mov
enter
jno
jge
retf
push
and
test
lea
mov
or
add
dec
test
out
push
push
mov
mov
pop
cmp
shl
dec
popa
inc
outs
out
movs
ret
call
push
test
sbb
fisubr
loopne
shl
jecxz
push
xchg
stos
add
mov
mov
mov
mov
mov
jmp
shr
neg
fistp
sbb
or
dec
push
rcl
jb
fiadd
jb
sahf
popf
mov
les
enter
dec
(bad)
sub
gs
adc
outs
(bad)
repnz
es
rcr
mov
aas
ins
and
movs
cmp
icebp
wrmsr
outs
pusha
test
sub
inc
sbb
adc
sub
dec
pop
jae
mov
sub
inc
sti
fisub
and
dec
cmps
adc
mov
sub
repnz
dec
stc
mov
cmp
sub
jp
ror
adc
fs
add
cmovbe
or
pop
mov
in
shl
push
retf
(bad)
jg
(bad)
jecxz
and
mov
jb
stos
pusha
push
mov
and
sbb
or
lods
mov
int
ds
shl
cli
or
fdivr
pop
cld
jae
xchg
pop
in
push
push
or
inc
fcom
push
iret
add
jb
std
jne
pop
clc
jo
or
in
mov
dec
jge
cmp
or
jg
out
push
add
mov
jmp
mov
inc
adc
inc
ins
adc
sti
out
xor
push
test
test
jp
xor
push
xor
in
pusha
cmc
pop
(bad)
jae
fidivr
mov
jge
sub
dec
jmp
fimul
mov
(bad)
in
and
xchg
pop
fs
push
jmp
iret
lods
sbb
lods
jge
(bad)
xchg
fbld
pop
outs
das
(bad)
mov
mov
push
xchg
sub
cdq
in
sbb
inc
add
sti
adc
sub
leave
push
push
or
adc
frstor
ds
imul
fild
add
dec
aam
jp
adc
lds
dec
lahf
js
lods
jle
pop
mov
out
(bad)
repz
mov
inc
call
jle
jb
in
scas
stos
std
or
idiv
adc
lock
jle
xor
pop
out
jbe
add
std
push
xchg
popf
sub
scas
pop
jae
mov
mov
ror
mov
call
or
or
test
xchg
cmp
rcl
adc
(bad)
aad
scas
pop
jb
test
xchg
mov
mov
dec
fdiv
and
fs
popf
dec
pop
sub
sbb
mov
pop
imul
test
and
add
cwde
fnstsw
pop
f2xm1
je
sbb
push
test
imul
sti
fdecstp
retf
in
jbe
shl
pop
cmps
dec
mov
lock
jg
lods
xchg
add
sub
sub
xchg
dec
sub
pop
pop
jo
aad
push
addr16
xor
dec
in
or
mov
std
in
adc
xor
nop
cmp
or
xchg
repnz
lock
out
add
(bad)
div
push
ret
dec
sub
fwait
out
in
ror
outs
cli
loop
add
popa
loopne
cmc
test
ds
jmp
mov
pop
push
fdivr
inc
(bad)
adc
aad
movs
jne
cmps
leave
sbb
cmp
pop
fstp
adc
xchg
jg
out
mov
outs
inc
mov
loope
jmp
jo
jns
scas
dec
int
sub
sbb
je
xor
xsaves
stos
dec
push
dec
pop
pusha
adc
clc
ins
jo
add
cmp
shl
aas
and
dec
xchg
sbb
retf
mov
rcl
cmp
jp
call
fs
inc
xor
jne
push
rol
pop
cmp
push
retf
mov
xor
aaa
cs
jle
daa
add
sbb
cmp
std
ja
or
ins
jnp
mov
inc
sub
cmps
add
sti
out
inc
xlat
cmp
test
mov
jge
and
pop
xor
dec
ins
adc
jmp
aas
and
and
adc
push
jecxz
jg
cmp
cmpps
cwde
mov
mov
movs
shl
fsub
pop
into
std
push
test
adc
data16
mov
mov
stos
mov
cmps
sub
daa
mov
ja
retf
jl
sub
jno
add
retf
dec
mov
xor
xchg
hlt
and
outs
jnp
(bad)
outs
cmps
in
add
dec
adc
jecxz
leave
stos
add
jl
adc
xor
jmp
add
mov
lds
ret
add
imul
clc
scas
adc
rcr
imul
aaa
rcl
add
push
mov
(bad)
mov
loop
inc
lea
ret
cdq
cs
mov
mov
dec
add
cli
pusha
cli
jbe
inc
test
xchg
adc
imul
push
mov
add
xchg
cmp
inc
cmp
or
pop
and
test
xchg
or
daa
in
sahf
pop
nop
imul
xchg
inc
jo
xchg
das
mov
retf
bound
jl
outs
(bad)
gs
(bad)
hlt
jecxz
pop
call
add
inc
icebp
sub
jp
in
ret
pusha
outs
jmp
gs
xchg
outs
mov
rcl
jno
jge
out
fsubr
dec
adc
inc
call
cld
fisttp
push
sahf
mov
xor
leave
cmps
outs
in
xchg
xchg
lods
dec
aam
movs
mov
ins
pop
shr
adc
push
xchg
mov
cmp
inc
jmp
inc
sub
mov
mov
cs
pop
pop
into
pop
cmp
jae
mov
pop
mov
cmp
dec
add
and
ins
inc
in
inc
mov
push
or
mov
jmp
loope
outs
nop
jae
push
rcl
pop
add
push
xchg
jne
outs
(bad)
pop
sub
idiv
fisttp
push
sti
xor
mov
iret
mov
mov
movs
mul
rol
push
sub
add
xor
mov
adc
xchg
fistp
jo
daa
sahf
ins
les
or
mov
dec
xor
jmp
sbb
mov
push
cli
lods
test
or
cmps
stos
jmp
jae
scas
pop
movs
xchg
adc
xor
fild
pop
ds
int
(bad)
xor
dec
xor
push
pop
fst
idiv
je
rcl
in
dec
cmp
and
sbb
mov
in
add
push
pop
sub
jmp
xor
fistp
fscale
sub
pop
xchg
repnz
push
sti
das
aad
pop
cmp
xchg
gs
movups
xchg
mov
push
in
adc
rol
fwait
imul
shl
ret
add
mov
loop
fwait
sti
in
jle
repnz
cld
jle
sbb
push
fs
arpl
cwde
cwde
addr16
into
mov
int
jle
fimul
xlat
lods
push
mov
aaa
ja
sub
cld
pop
ins
ret
jmp
test
stc
mov
rol
pop
cmp
pop
hlt
aam
add
xchg
movs
push
pop
push
jns
int
or
mov
push
sub
int3
xchg
es
in
cmp
mov
cmp
icebp
lea
sti
call
push
add
dec
cmp
clc
pop
adc
retf
adc
hlt
add
xor
jecxz
pop
jbe
repz
add
arpl
mov
inc
pop
aam
cwde
in
test
bnd
adc
mov
aaa
xlat
fcmovnb
mov
push
outs
jo
sub
pop
es
je
xchg
cdq
mov
mov
push
inc
in
ins
pop
loope
ja
outs
mov
mov
repz
out
adc
dec
arpl
jg
xor
add
test
aaa
inc
adc
(bad)
icebp
arpl
inc
cli
frndint
sbb
movs
ficom
mov
mov
add
sub
sbb
out
adc
dec
add
ret
and
dec
push
sar
dec
popa
cwde
jmp
jmp
add
pop
fidivr
pop
sub
push
adc
mov
scas
jno
sub
push
add
mov
pop
jo
pop
stc
mov
data16
outs
and
imul
aad
test
retf
cld
ds
lods
leave
xchg
pop
push
call
les
inc
bound
jg
mov
test
mov
movs
int
xor
(bad)
mov
pop
jecxz
mov
pop
jo
xor
in
add
popf
or
popa
imul
retf
aad
dec
mov
ss
jnp
jp
jge
pop
pop
mov
cmps
(bad)
xchg
adc
mov
xchg
(bad)
mov
test
adc
jl
mov
mov
daa
pop
mov
mov
ret
push
div
sub
test
sbb
and
cmps
mov
inc
aaa
dec
cmp
sbb
xlat
dec
enter
nop
lahf
mov
xor
iret
mov
xchg
sub
repnz
push
fwait
ds
add
inc
xor
xchg
les
pop
xchg
(bad)
out
push
lock
adc
test
lds
cli
dec
adc
sbb
and
pushf
test
leave
fld
cmps
add
sbb
lock
adc
xor
jge
xchg
iret
push
fs
aad
daa
(bad)
shl
call
scas
retf
inc
inc
fistp
jle
(bad)
xor
and
mov
xchg
popa
retf
sti
arpl
pop
pop
push
push
fadd
and
cmp
push
push
das
sahf
lahf
pop
movs
loop
sbb
adc
fisttp
jo
or
sub
sahf
or
and
stc
vcmppd
push
xchg
mov
xchg
xchg
pushf
mov
in
ins
pop
or
ins
mov
pop
or
idiv
jge
mov
mov
jno
mov
jne
les
cmc
push
xchg
push
pop
dec
inc
repnz
int
push
xchg
push
nop
or
fstp
cli
outs
(bad)
xor
movs
xchg
ret
xchg
xchg
lods
addr16
ret
dec
les
sbb
dec
and
iret
mov
cmp
jb
cs
std
out
pop
push
dec
xor
push
pop
pop
in
push
mov
rol
sbb
or
inc
lds
mov
ds
stc
or
jae
xchg
and
pop
fld
pop
mov
cmp
call
sub
shl
aam
pop
sub
cs
xchg
aad
in
lock
mov
in
inc
push
in
rcl
push
jns
out
(bad)
(bad)
repz
xchg
mov
pop
adc
inc
xor
jae
out
fadd
push
fcom
movs
(bad)
adc
mov
inc
jnp
outs
in
fcom
bt
shl
cmp
sbb
adc
mov
jmp
leave
mov
xor
jae
enter
mov
rcl
adc
jne
inc
pop
lods
fst
dec
nop
mov
pop
pop
add
scas
imul
and
cli
mov
add
call
and
les
pushf
push
inc
xchg
sbb
cmps
(bad)
push
rcl
pop
sti
repz
and
shr
dec
test
mov
inc
mov
jnp
jecxz
pop
inc
rcl
xor
pop
jo
or
and
mov
scas
scas
imul
jne
hlt
out
cmp
pop
in
movs
scas
movs
mov
adc
fistp
or
jmp
add
les
gs
stos
xchg
adc
push
and
cmp
bound
push
or
sub
dec
(bad)
mov
aam
in
jg
dec
or
xchg
pop
les
int3
outs
xchg
out
(bad)
fwait
cs
out
popa
stos
mov
add
fsub
movs
shl
rcl
mov
data16
lahf
push
mov
pop
fistp
iret
out
xor
add
cwde
in
dec
or
mov
ins
xor
test
aaa
addr16
push
ins
clc
jnp
jp
pop
jns
pusha
div
inc
gs
out
jne
pop
cmps
cwde
inc
mov
imul
adc
cmp
sbb
sub
mov
xchg
cmp
mov
inc
or
jb
adc
dec
out
push
mov
pop
and
jg
(bad)
frstor
pop
popa
test
pop
movs
cmp
cwde
ss
repz
xchg
into
out
add
pop
mov
adc
mov
add
or
mov
icebp
inc
shl
inc
fisttp
and
sbb
je
cmps
mov
mov
sti
repnz
inc
js
cs
adc
sub
mov
xchg
sub
(bad)
xchg
push
mov
call
fidivr
scas
jl
neg
sbb
icebp
xchg
pop
mov
add
mul
jbe
test
xor
fwait
pop
sbb
add
ret
jmp
cdq
add
mov
gs
pop
or
xor
es
addr16
aaa
jno
or
std
js
mov
nop
and
ins
nop
(bad)
out
(bad)
lock
push
dec
mov
xchg
je
enter
cmp
cwde
and
mov
or
pop
or
fwait
xchg
inc
aaa
pop
(bad)
jae
adc
(bad)
pop
mov
mov
aam
test
jo
in
imul
sbb
jl
fistp
cmp
inc
(bad)
or
call
lods
fld
fstp
and
je
iret
jns
cli
sub
xor
mov
mov
xchg
fisub
out
in
inc
jle
ret
inc
(bad)
jecxz
mov
fist
xlat
pop
test
popf
ret
adc
(bad)
pop
push
mul
mov
fdiv
aam
das
test
dec
sub
add
mov
push
inc
ds
aam
sar
inc
js
jmp
fild
xchg
push
gs
test
mov
sub
mov
pop
xchg
in
fld
sub
cmp
pop
inc
shr
pop
sub
mov
sub
dec
add
and
cld
dec
push
dec
pop
adc
in
out
adc
or
sub
fcomp
sahf
xchg
ret
jo
or
lods
mov
xchg
loop
scas
movs
dec
fdivp
mov
lods
mov
jbe
mov
out
mov
mov
mov
mov
cmp
repz
shl
mov
push
add
sbb
sbb
jl
out
adc
push
xor
xchg
mov
(bad)
jmp
cmp
std
sbb
leave
xor
mov
xor
lds
sbb
and
or
out
loope
test
es
pop
out
cwde
fcom
push
out
jmp
jmp
or
retf
scas
loopne
sub
xor
add
sub
adc
cwde
popaw
push
push
cld
push
pop
(bad)
lea
aad
scas
inc
ins
inc
inc
xchg
mov
mov
(bad)
out
loop
or
loope
das
int3
pop
xlat
sbb
iret
leave
lods
xor
mov
push
scas
ret
fistp
xchg
mov
in
cli
scas
pop
dec
(bad)
jge
cmp
loop
xor
mov
sub
sbb
adc
ins
inc
xor
movs
cmps
loope
mov
stos
loopne
test
mov
cmp
shl
push
fdiv
in
or
xor
sar
js
xchg
jno
leave
mov
sar
test
dec
sti
xchg
add
in
pushf
loope
jp
shl
je
sub
(bad)
out
rol
adc
cmps
add
fild
push
push
pop
(bad)
sbb
loop
stos
out
sub
push
lds
mov
dec
push
jns
lea
cmp
mov
test
in
imul
pusha
xchg
mov
sub
dec
mov
xor
mov
pop
repz
popa
xchg
sub
pop
jo
mov
call
inc
fist
sbb
mov
mov
and
pop
aas
and
adc
mov
xor
xor
sbb
and
in
sub
(bad)
jmp
fs
dec
ja
out
mov
dec
cmp
and
test
lock
pop
jge
sbb
cmp
mov
and
pop
mov
daa
and
cmp
imul
mov
scas
xchg
sbb
jno
jmp
inc
sub
push
loop
sbb
jle
push
mov
mov
mov
push
loop
sbb
mov
(bad)
movs
jmp
(bad)
add
sub
push
ror
cmp
or
rcl
inc
mov
mov
cmp
inc
jns
fstp
xlat
jle
cld
mov
pusha
fs
and
add
out
rcl
(bad)
mov
and
ins
xlat
gs
sbb
mov
sahf
and
popa
add
fild
xchg
ins
push
popf
xchg
popa
push
fisubr
loop
int3
sbb
sbb
jno
jb
in
inc
xor
xchg
leave
pop
cdq
add
pop
dec
and
cmp
mov
mov
mov
shr
push
ja
rol
sub
mov
jg
shr
int
mov
dec
fmul
mov
dec
cs
test
in
nop
in
cmp
xchg
cmp
in
push
xchg
xlat
push
and
movs
iret
scas
bswap
cmp
mov
pop
fwait
adc
out
sbb
aas
enter
in
cs
loop
add
(bad)
sbb
gs
inc
sbb
sub
inc
lods
je
cmp
repz
cmp
outs
mov
xchg
inc
xchg
mov
mov
mov
xor
test
sbb
les
(bad)
xlat
sub
arpl
int3
retf
vprotb
cmp
pop
in
sub
or
ds
pop
std
add
mov
add
push
xchg
scas
jle
xor
fisttp
push
mov
es
iret
es
mov
ret
jle
mov
icebp
test
clc
or
jnp
loop
gs
dec
mov
imul
movs
ja
xchg
test
mov
out
jbe
mov
mov
lds
into
in
fs
xchg
push
scas
jl
xchg
nop
cmp
cwde
pop
js
sub
sub
or
je
stc
movs
cmp
in
jns
cmc
xor
mov
add
sub
ds
pop
scas
shl
cwde
icebp
js
addr16
lock
push
inc
xor
cmp
jg
pop
xchg
push
pusha
int
loope
mov
inc
daa
push
daa
iret
inc
mov
or
ins
in
mov
xchg
cmps
sub
add
mov
cs
movs
mov
and
mov
mov
xor
sub
inc
frstor
retf
les
arpl
fstp
mov
cdq
mov
scas
jb
cmp
into
cmc
addr16
cmc
mov
mov
mov
das
ficom
inc
loope
scas
sbb
aad
popf
sbb
pop
mov
out
jge
push
cmp
adc
mov
jp
xor
cdq
movs
arpl
jno
fidiv
sub
mov
jbe
scas
das
(bad)
div
test
ds
enter
and
call
xlat
dec
and
mov
pop
sub
sub
int3
jp
or
and
in
aas
jle
lea
jle
cmps
cmp
fwait
add
retf
xchg
je
sti
fucomi
xor
std
movs
test
(bad)
mov
rcl
ss
lock
or
jl
ret
pop
xor
int
out
lods
pop
cwde
xchg
fiadd
or
push
or
lock
xor
std
pop
mov
sub
jb
jno
jl
mov
sbb
xor
call
cmp
dec
push
jnp
mov
mov
cs
sub
mov
imul
outs
add
mov
jnp
std
or
fdivr
adc
es
push
xor
sbb
mov
rol
(bad)
in
lock
les
sbb
pusha
jnp
sbb
lds
vorps
jle
cmp
pop
call
(bad)
mov
clc
retf
cmps
jp
outs
ror
es
in
out
jns
retf
addr16
push
add
(bad)
jo
cmp
jno
hlt
add
mov
add
mov
into
dec
and
loopne
jp
loopne
ror
and
lock
test
fnsave
(bad)
xor
(bad)
xor
enter
xor
das
jne
or
mov
shl
shr
jb
or
and
fsubr
pop
adc
arpl
test
ret
test
adc
dec
fdivr
fdivr
loop
sbb
mov
add
in
xor
mov
xchg
pop
push
dec
dec
pop
sub
mov
in
scas
mov
repz
or
xchg
ret
push
(bad)
div
int
aam
movs
in
jns
jbe
or
cli
pop
aam
jmp
pop
lahf
pop
rcr
push
int
mov
test
sub
aad
adc
rcpps
pop
dec
cmp
lahf
popf
ds
fiadd
add
imul
das
pop
push
(bad)
pop
mov
add
fsub
sar
dec
jne
xor
test
xchg
stos
scas
stos
arpl
push
or
mov
out
mov
cmp
mov
sti
dec
xchg
out
inc
xchg
sub
pop
inc
mov
xchg
jno
adc
stc
adc
lock
sar
mov
xchg
out
(bad)
pushf
dec
call
in
mov
stos
xor
movs
xchg
inc
xchg
mov
cmp
lock
stc
mov
stos
push
jmp
or
xor
sub
ror
cwde
out
sbb
and
and
aas
aam
push
lea
les
test
xor
aas
jne
lods
mov
aam
mov
add
xor
test
sar
sbb
inc
hlt
mov
pop
jmp
jmp
xor
cld
cwde
ins
in
and
mov
and
mov
std
push
xchg
inc
enter
aad
lea
aam
pop
in
xor
shl
pop
sub
imul
jg
jb
arpl
ror
and
je
and
cld
sbb
ror
push
cld
or
cli
xchg
arpl
pop
pop
repnz
jns
shl
inc
pusha
loopne
mov
cvtpi2ps
sub
mov
and
pop
add
sar
hlt
push
mov
jmp
jmp
jecxz
pop
mov
repnz
jle
add
cs
icebp
sub
jno
mov
adc
aas
pop
xchg
fidivr
cs
sub
inc
mov
jne
(bad)
shr
jg
dec
adc
retf
jmp
jmp
inc
mov
test
into
mov
and
add
outs
add
adc
adc
les
es
xchg
ja
popf
pop
and
push
fsubr
xchg
adc
ins
(bad)
and
jg
mov
cmp
add
fs
ds
icebp
xchg
xor
and
(bad)
and
jecxz
mov
sahf
sbb
xchg
out
dec
mov
adc
pop
ret
cmp
push
cmp
sbb
(bad)
sub
or
mov
push
in
(bad)
jecxz
in
outs
xor
fisttp
mov
cmc
mov
jnp
std
retf
mov
jae
(bad)
mov
sub
sub
push
mov
adc
jge
aas
ss
xor
cdq
in
mov
xchg
mov
mov
popa
(bad)
jno
xchg
mov
xor
movs
inc
jle
jne
es
or
add
sbb
inc
pop
add
sub
mov
dec
fdivr
lea
cmp
jns
add
enter
data16
enter
scas
xchg
mov
ret
mov
jns
mov
out
leave
int
call
iret
aam
sbb
mov
and
adc
js
jbe
dec
mov
loop
retf
fadd
or
jmp
(bad)
jle
mov
and
aad
and
mov
jmp
or
jno
dec
lahf
ins
xchg
scas
xor
xor
aad
add
icebp
test
mov
inc
loopne
dec
hlt
ret
fninit
push
jecxz
adc
cmp
pushf
fst
xor
push
mov
dec
cmps
cs
add
mov
fstp
jg
hlt
imul
mov
jno
enter
ds
cmps
or
xor
stc
movs
mov
clc
nop
and
movs
mov
test
push
addr16
(bad)
push
std
mov
fwait
inc
loop
lods
mov
outs
or
sub
mov
push
xor
int
xor
mov
stc
push
retf
xchg
or
and
imul
ins
xchg
inc
jp
popf
sub
je
stc
push
lock
stc
outs
jecxz
ret
mov
jecxz
cwde
pop
push
dec
jge
dec
icebp
test
dec
rol
sahf
jmp
mov
inc
pop
loopne
pop
dec
dec
jmp
das
fidiv
dec
in
add
add
adc
jmp
sbb
mov
jno
push
pop
cld
sbb
mov
mov
es
lods
mov
repnz
dec
xor
lahf
js
mov
or
lahf
pop
enter
dec
push
add
lods
aad
inc
and
sti
push
cmp
push
pop
xor
imul
enter
cdq
push
xor
shl
jmp
adc
fisub
arpl
mov
pusha
cmc
(bad)
hlt
jp
jmp
or
push
fdivp
in
cmp
repz
push
int3
or
call
sub
add
fsubr
sbb
out
in
(bad)
lahf
es
inc
aaa
call
adc
jg
dec
push
leave
and
and
adc
xchg
loopne
sbb
pop
xor
mov
daa
ins
aam
dec
clc
push
add
mov
leave
and
inc
inc
es
adc
cmp
je
push
inc
cmps
test
ret
cmps
test
mov
mov
jl
cs
xor
pop
loopne
jmp
ins
mov
into
ror
add
ret
push
mov
call
sar
scas
adc
mov
dec
push
ret
jecxz
out
mov
loopne
or
or
mov
movs
mov
fcom
xchg
sbb
or
jne
fwait
mov
int
aad
mov
fidiv
cmp
mov
sar
xchg
sti
adc
xor
stos
mov
add
push
mov
lock
outs
add
xor
push
popf
das
rol
jle
mov
jge
pop
loopne
cmp
adc
sub
cwde
aas
aaa
and
es
adc
and
adc
aaa
and
outs
add
add
xor
je
pop
ja
mov
mov
out
and
jle
je
arpl
out
scas
push
std
add
sub
int
cmp
push
mov
lock
loope
cmp
hlt
dec
jns
ins
push
not
mov
or
leave
aad
sub
mov
lods
add
ss
and
mov
iret
add
outs
xchg
sbb
shr
or
aas
call
cmc
dec
clc
fstp
pop
push
push
gs
stos
(bad)
retf
aad
mov
adc
adc
cmp
xor
es
(bad)
xor
xor
dec
jge
popf
fdivr
pop
call
pop
xlat
or
dec
jg
pusha
js
xlat
repz
inc
mov
data16
dec
xor
and
sahf
sub
ins
xor
cmps
lea
pop
sbb
scas
xchg
lds
jg
pop
or
fwait
iret
push
inc
mov
xchg
and
cld
pop
mov
push
jl
stc
fwait
mov
jns
out
lahf
dec
shl
push
aam
ror
mov
ror
outs
int3
cmc
dec
inc
xchg
stos
push
add
popf
push
(bad)
xchg
leave
mov
or
(bad)
scas
adc
jl
enter
retf
jl
or
jbe
mov
sub
dec
mov
neg
cmps
add
(bad)
ds
and
cmp
adc
cmps
es
add
retf
and
iret
inc
mov
js
iret
cmp
sub
les
cmp
pop
popf
test
(bad)
jp
cdq
ja
pushw
fadd
cmp
ds
and
push
ret
into
jge
retf
ret
dec
mov
fs
(bad)
push
mov
xchg
ror
cmp
sti
dec
push
retf
and
or
cli
scas
test
daa
inc
cmp
mov
push
xlat
(bad)
cmps
jmp
dec
xor
mov
jle
dec
push
dec
pop
cwde
stc
cli
cmp
out
jg
sbb
cmps
add
shr
mov
sbb
loop
or
jns
xor
inc
adc
mov
jne
jle
daa
gs
imul
dec
pop
loopne
pop
jae
dec
imul
cli
jns
sub
pop
or
retf
icebp
pop
cmp
aam
push
fmulp
push
mov
mov
cmp
pop
mov
sti
retf
sbb
pusha
in
rcl
push
fs
(bad)
scas
xlat
cmp
movs
pop
or
mov
push
cmp
inc
add
out
sbb
xor
jae
sar
push
cmp
cmp
sub
popf
sbb
add
dec
in
adc
pop
mov
rcl
outs
mov
repz
mov
adc
xor
cld
les
fwait
jp
push
xchg
push
push
cli
mov
orps
and
pop
xor
or
ds
test
arpl
(bad)
sub
(bad)
sub
mov
loop
iret
pop
dec
jne
ja
outs
mov
sbb
mov
das
inc
movs
fwait
pop
iret
dec
bound
(bad)
(bad)
imul
popa
pop
dec
or
(bad)
mov
mov
inc
mov
ret
(bad)
xchg
jmp
in
in
adc
mov
sbb
das
adc
aad
rcl
sbb
pop
sbb
mov
mov
cmp
fld
cmps
loopne
pusha
jmp
cmp
das
popa
lock
cmp
retf
icebp
aas
push
pushf
fcom
aas
mov
sar
sti
dec
dec
mov
in
out
int
and
sub
loope
loop
and
int3
shl
fisub
jmp
(bad)
jns
jb
pop
repnz
pop
fisubr
mov
sbb
fprem1
push
sar
inc
cld
adc
xor
push
sahf
outs
or
rcl
lods
fsubr
stc
mov
lahf
(bad)
sahf
mov
jg
loopne
pop
(bad)
jne
ins
xchg
fdiv
addr16
in
jp
ja
hlt
lock
stc
stc
sub
bound
das
nop
aas
imul
pop
dec
add
mov
jb
and
cdq
pop
inc
dec
sti
mov
mov
cli
sbb
pop
ret
out
or
jp
mov
pusha
mov
in
sbb
add
or
loopne
movs
xor
cmp
fdiv
ins
stos
pop
fwait
imul
js
pushf
or
and
mov
inc
mov
sub
call
stos
push
retf
repz
xor
jmp
mov
push
test
adc
(bad)
xchg
(bad)
retf
fidivr
stos
scas
(bad)
in
xor
test
mov
mov
into
ds
scas
ss
call
or
adc
pop
xor
inc
mov
outs
aam
or
fwait
push
test
jle
xchg
movs
hlt
aad
xchg
add
jo
add
cmp
ss
xor
xor
(bad)
int3
(bad)
mov
js
sbb
ja
push
jecxz
pop
sub
pop
jge
or
mov
fidivr
cmp
sub
fldenv
dec
sbb
push
xchg
jne
push
mov
fdiv
xchg
ror
dec
out
clc
sub
movs
sub
and
or
xchg
cmc
aad
adc
imul
cli
or
and
jmp
xor
xlat
retf
fwait
inc
inc
push
and
jecxz
cmps
push
xor
das
neg
adc
icebp
call
enter
inc
push
pop
mov
mov
jno
cmp
call
jge
mov
fstp
gs
dec
dec
jae
pop
imul
pop
xchg
hlt
test
mov
and
xchg
mov
pop
jo
bound
push
xchg
div
ja
add
mov
aad
adc
sub
imul
in
jae
pusha
movs
jmp
push
pushf
mov
aam
leave
in
enter
mov
cmp
dec
jl
cmp
inc
add
sbb
pop
xor
push
(bad)
out
pop
jle
inc
sbb
mov
outs
call
push
retf
outs
add
shl
or
out
(bad)
test
add
sub
outs
pop
in
aaa
shr
(bad)
in
sbb
mov
lods
sbb
push
lds
aas
popa
push
rcl
out
aaa
mov
xchg
repnz
repnz
and
push
jp
adc
call
mov
loop
cmp
xor
and
inc
mov
fnsave
add
xor
inc
sub
popf
cmp
jmp
ret
xchg
les
sub
in
and
sub
xchg
push
sbb
push
shl
fidivr
push
fcmovnbe
jns
loope
mov
add
sbb
call
int3
int3
fndisi(8087
jmp
push
test
and
aas
retf
pop
jo
or
in
xor
dec
xor
aam
cli
push
mov
sub
iret
stos
dec
je
sub
dec
in
aaa
mov
stc
jecxz
mov
enter
or
mov
fcmovnb
adc
mov
push
call
jecxz
imul
repz
and
xor
sbb
sbb
and
(bad)
stc
popf
shl
(bad)
mov
call
ss
mul
push
sub
cmps
movs
rcl
repz
sub
add
xchg
inc
cmc
in
imul
inc
inc
pop
xor
aam
or
cmps
mov
cmp
mov
mov
retf
mov
stc
dec
xor
inc
ret
out
stos
(bad)
mov
add
xchg
into
adc
pusha
pop
mov
(bad)
ret
xor
sti
mov
rcr
pop
pop
push
arpl
sub
mov
mov
mov
mov
lahf
mov
or
jmp
push
inc
inc
push
ret
sbb
xor
cmp
sbb
ds
mov
pop
add
sbb
pusha
retf
adc
cmps
push
mov
adc
outs
cmps
rcr
mov
out
adc
push
dec
jecxz
mov
push
jns
jno
xchg
vminss
aas
mov
dec
aad
retf
xchg
adc
mov
mov
xor
cmc
ins
leave
cwde
jo
push
xchg
bound
cs
mov
mov
das
js
mov
ret
push
pop
push
push
xchg
push
loope
mov
aam
jne
jp
test
cmp
sub
adc
stc
push
ins
fst
outs
xchg
jo
mov
jg
repnz
mov
mov
add
and
and
push
out
mov
fdiv
pushf
mov
mov
and
cmp
push
mov
daa
dec
psadbw
cdq
popa
or
inc
push
ds
cli
dec
xor
and
ret
movs
or
add
rol
mov
out
cmc
loopne
addr16
out
jp
fnstenv
ror
inc
aam
mov
cmp
mov
adc
ret
cmc
sub
add
mov
cmp
jmp
push
lods
aaa
xor
cmp
xchg
enter
sbb
ret
(bad)
push
nop
shr
sbb
imul
adc
lods
rol
sahf
aaa
xor
call
sub
and
mov
pop
pop
ins
push
mov
addr16
ins
xor
dec
jge
cdq
fisttp
test
pushf
push
cld
mov
cmp
jnp
mov
test
cld
push
dec
sbb
or
pop
or
aas
push
aaa
fs
or
adc
repnz
dec
jl
push
fld
jecxz
fisttp
sub
fimul
rcl
or
(bad)
stos
mul
or
jmp
cmp
outs
xchg
aad
daa
push
mov
and
inc
aaa
add
scas
xor
jno
dec
inc
jo
dec
pop
push
push
inc
fwait
xchg
sbb
enter
fldcw
call
les
jae
enter
or
(bad)
icebp
jmp
mov
mov
adc
jmp
ret
fsub
inc
push
xor
xchg
inc
lds
cmp
cli
pop
xchg
mov
stos
and
pop
das
jmp
fimul
fld
push
adc
dec
es
cld
cmp
jnp
fnsave
xor
stc
popf
jnp
stc
aad
out
ds
retf
repnz
jne
ror
sub
stos
(bad)
int3
mov
and
sti
add
call
dec
jmp
test
lods
add
fadd
mov
in
adc
or
(bad)
ins
inc
push
push
pop
sub
or
sub
or
jae
xor
mov
sub
adc
lods
jg
in
sub
call
into
in
jmp
js
cmp
into
dec
mov
out
lods
cld
adc
fisub
(bad)
scas
mov
iret
call
cli
addr16
sub
pop
xor
sar
repnz
push
je
dec
adc
test
stos
cmp
jno
jg
adc
lea
mov
mov
inc
fnstsw
and
nop
cmp
imul
aam
or
mov
pop
jae
inc
fst
fdiv
push
adc
mov
aad
ja
sti
mov
push
add
xor
stos
jp
inc
and
mov
and
xchg
aam
sti
pop
sub
fcom
dec
lods
push
(bad)
lock
xor
dec
mov
rol
lea
nop
int3
xlat
sub
push
inc
arpl
fisub
pop
int
jp
sar
(bad)
out
jns
movs
ret
cmp
jnp
cli
or
push
aaa
inc
(bad)
outs
sub
push
js
cmp
jb
ins
push
scas
jge
sbb
and
push
js
mov
jno
xor
fcomp
push
imul
dec
pop
jmp
icebp
test
fiadd
mov
in
adc
or
outs
jg
adc
loope
mov
bound
push
xchg
fdivr
inc
arpl
xor
pop
inc
sub
imul
cs
ja
inc
mov
in
and
xor
hlt
cmps
push
jns
jle
pop
cmp
xchg
cmps
mov
pop
and
movhps
das
sbb
lea
pop
inc
rcl
inc
test
push
adc
sbb
add
jno
into
and
push
add
mov
jg
imul
jl
add
jle
in
into
push
test
test
test
outs
adc
retf
dec
cmp
aas
(bad)
dec
xor
test
dec
jmp
shl
and
jnp
lock
ins
nop
jle
push
test
popa
test
rcl
push
cld
pop
and
xchg
cs
add
xchg
sub
inc
ja
dec
xchg
pop
or
jno
cmp
out
jp
mov
adc
lahf
ins
ins
inc
mov
lds
sub
pop
adc
sub
xchg
mov
hlt
mov
arpl
ror
and
fs
fcom
sar
repz
sub
shl
retf
(bad)
jmp
les
mov
out
shl
jae
in
and
ret
cmp
in
pop
sbb
(bad)
push
scas
jp
cs
das
and
outs
sub
js
mov
push
jb
add
push
scas
sahf
jmp
push
ret
push
mov
pop
xor
push
cmp
daa
iret
cli
or
and
xchg
ficomp
mov
fisub
fwait
push
stc
cld
pushf
jno
sbb
push
(bad)
pop
inc
mov
adc
sahf
nop
jmp
pop
ret
out
pop
xor
rol
mov
fbld
in
xor
or
ins
xor
leave
cmps
sub
ror
xlat
pusha
test
inc
icebp
out
mov
fnstenv
repnz
out
hlt
hlt
rcl
sti
jnp
or
push
jmp
pop
mov
ret
xchg
pop
adc
mov
mov
or
adc
or
mov
xchg
test
push
retf
sbb
sbb
bound
les
dec
or
aas
add
clc
cmp
jbe
mov
jmp
jp
sub
cmc
add
add
jnp
test
(bad)
dec
mov
mov
out
pop
sahf
movs
xor
test
dec
xchg
mov
(bad)
cli
push
and
jae
push
pop
or
in
adc
mov
dec
mov
rcr
call
rcl
sbb
aam
adc
ds
push
or
push
retf
and
pop
mov
daa
pop
iret
std
add
shl
push
sbb
inc
sbb
bound
shl
scas
mov
neg
jb
dec
(bad)
retf
sbb
fld
lds
push
cmp
push
ins
push
add
fsubr
in
jg
test
pop
hlt
push
mov
enter
je
lahf
ins
inc
retf
push
xor
rcr
iret
jnp
in
pop
out
sub
pop
mov
push
pop
std
in
jns
mov
aad
(bad)
inc
sbb
jns
lods
cmp
xchg
imul
sub
shr
push
pop
(bad)
lds
xchg
call
fnstenv
shl
sbb
(bad)
dec
inc
fcomp
fmul
xchg
cdq
xor
retf
adc
scas
test
xchg
shr
(bad)
(bad)
repnz
stos
sar
jb
and
cmp
pop
or
xchg
and
mov
inc
mov
adc
outs
aaa
fadd
aad
or
cli
inc
fstp
xchg
test
ds
jne
daa
out
xchg
push
pop
and
adc
(bad)
add
rcr
pop
adc
and
xchg
ror
cmps
xchg
push
xchg
aas
(bad)
stos
les
dec
mov
rcl
pop
push
pushf
cmp
popa
sti
cmp
leave
or
add
(bad)
mov
ins
movs
neg
inc
int3
mov
out
cmp
xor
sar
inc
nop
and
jbe
xor
in
lods
push
loopne
iret
jbe
xchg
adc
stos
xchg
retf
sub
cld
leave
sbb
retf
add
add
rol
aam
(bad)
and
adc
sub
push
inc
jae
or
cmp
lods
mov
ror
pop
and
adc
les
inc
sub
popa
jb
outs
lods
xor
sub
and
(bad)
imul
nop
jne
sbb
rcl
mov
inc
bound
int3
mov
ror
rol
clc
sub
cmc
mov
jae
fsubr
add
xor
mov
rcr
pushf
mov
les
jle
das
(bad)
jmp
push
push
pop
inc
inc
mov
mov
fdiv
aam
lods
test
mov
mov
sbb
fdivr
clc
pop
mov
mov
mov
dec
push
adc
retf
jge
inc
outs
repz
stc
lods
icebp
inc
dec
scas
(bad)
mov
mov
push
jne
jns
das
popa
push
and
xchg
rep
or
jecxz
js
nop
cmp
shl
movs
(bad)
lds
das
mov
addr16
into
movs
fisttp
mov
mov
or
mov
xchg
int
inc
iret
rol
and
mov
das
adc
xchg
bnd
sbb
adc
fcmove
neg
add
dec
ret
stc
test
out
and
fsub
adc
stos
push
mov
test
pop
(bad)
ins
ins
xchg
sub
sbb
pop
dec
mov
cmp
xchg
sub
jg
les
call
mov
push
jmp
call
adc
loop
jo
sti
dec
adc
shl
jle
lock
in
jne
arpl
int3
sbb
in
cmp
pop
je
jae
ds
neg
ss
push
(bad)
push
sbb
stos
mov
loop
and
jmp
adc
jg
push
push
sbb
scas
int3
xchg
cmc
enter
cs
xchg
loopne
scas
pop
outs
sub
mov
adc
mov
sub
in
xor
xor
and
ins
jmp
out
pop
inc
rcl
out
xor
cmp
jge
js
inc
xchg
push
mov
push
mov
adc
lahf
pop
lds
inc
sub
ins
mov
cmps
aad
imul
retf
xchg
or
(bad)
ja
fistp
je
pop
cmp
dec
xchg
shl
lds
mov
call
add
out
ret
nop
fdiv
add
inc
mov
push
lods
fldcw
jno
shl
gs
xchg
or
mov
repnz
ss
mov
pop
and
test
xchg
inc
cmps
clc
inc
fidiv
mov
sub
cmp
jp
mov
sub
xchg
aaa
cmp
shl
idiv
stos
fist
or
add
jae
dec
inc
add
xchg
inc
jmp
ror
jecxz
and
lock
sbb
mov
sbb
xor
sbb
pop
stc
in
push
outs
mov
bound
mov
loopne
int
jl
push
sbb
inc
je
arpl
adc
ret
sub
idiv
cmp
xchg
es
inc
push
xchg
ja
aas
mov
mov
cmps
mov
xor
idiv
inc
xlat
jg
push
xchg
shr
test
jbe
divps
lock
movs
ds
sbb
movs
scas
ret
mov
sbb
and
and
sbb
fsubr
sub
wrmsr
neg
imul
pop
or
das
jb
pop
call
xchg
aas
jb
pop
pop
test
fdiv
mov
loopne
add
(bad)
pop
mov
xchg
cmps
lea
call
sub
dec
push
aam
adc
push
xchg
jo
mov
(bad)
sub
(bad)
mov
jp
out
shl
mov
lods
add
ss
mov
pop
call
lahf
mov
aam
call
add
push
cmps
xlat
sub
dec
ret
cmp
mov
pushf
pop
and
and
push
and
jbe
outs
fcom
inc
inc
dec
push
or
fdiv
or
mov
aad
mov
loope
psubw
fisttp
xchg
mov
xor
mov
bound
pop
jg
pop
test
sub
popf
ret
dec
push
sbb
(bad)
and
test
pop
repnz
pusha
add
inc
sbb
imul
daa
adc
paddusb
lds
aad
jae
mov
(bad)
cmp
jb
outs
xor
fmul
or
out
mov
inc
mov
jb
fmul
in
in
jg
test
cmc
mov
jb
retf
shld
cmp
call
xchg
(bad)
pop
bound
inc
lea
out
cmps
push
xchg
inc
shl
cmp
xlat
dec
cs
xchg
pop
iret
sti
cmp
icebp
out
lods
clc
in
add
idiv
inc
(bad)
mov
and
pop
fld
mov
cmps
popf
icebp
movs
jge
call
ja
jg
pusha
lock
les
pop
stos
xor
sbb
jo
icebp
shl
mov
xor
lods
pop
xchg
out
arpl
ins
repnz
loop
data16
das
jmp
inc
dec
xor
div
or
add
inc
push
in
ltr
jge
or
sub
je
nop
mov
and
mov
or
into
je
popf
shl
xchg
cwde
sub
jge
adc
retf
cmc
sub
pop
test
pop
xor
mov
push
icebp
int3
pusha
cwde
mov
fidivr
retf
or
dec
and
mov
xor
add
icebp
in
rcl
xchg
movs
aaa
(bad)
fisubr
ficomp
sub
add
xor
add
jbe
imul
xor
push
add
test
inc
mov
jbe
adc
push
mov
cmp
movs
adc
or
mov
out
inc
pop
sub
imul
inc
(bad)
call
dec
fsubr
mov
ss
neg
adc
jg
aaa
js
shl
not
sbb
retf
sbb
push
les
inc
xor
push
push
push
cmp
cmc
iret
fisttp
push
call
xchg
jno
xchg
and
mov
clc
mov
arpl
je
lock
jns
mov
hlt
adc
aad
or
lahf
mov
or
ja
push
stos
into
push
je
in
inc
push
scas
cmp
call
mov
fs
xchg
mov
cmc
cmps
sbb
inc
imul
mov
sub
outs
xor
clc
or
clc
pop
jns
adc
adc
xchg
jns
and
(bad)
pop
enter
sahf
and
xchg
lea
rcl
dec
int
out
mov
fld
xor
data16
int3
aad
bound
cmp
fwait
xlat
out
adc
dec
(bad)
mov
sar
leave
hlt
aas
adc
inc
sbb
cmp
in
cmp
mov
int3
push
xchg
pushf
adc
stos
(bad)
adc
push
cmp
sbb
pop
xor
push
(bad)
pop
mov
(bad)
pop
sti
mov
xor
jp
loop
(bad)
es
dec
sbb
mov
test
shl
push
std
jp
sbb
mov
ficom
je
popf
shl
sar
test
es
push
jmp
loopne
out
pusha
xor
shl
aaa
loop
lds
mov
mov
mov
push
xchg
test
jl
mov
cmp
xlat
mov
adc
outs
repnz
push
arpl
pusha
mov
rcr
movs
xchg
(bad)
movs
mov
stos
nop
adc
call
add
push
repnz
addr16
pop
popa
in
xchg
lods
rol
shl
fiadd
xchg
mov
int3
aaa
inc
jb
xchg
dec
cmp
or
idiv
cmc
sti
dec
retf
into
inc
sti
movs
dec
rcl
in
and
inc
fsub
pop
inc
pop
stos
inc
xchg
pop
mov
cmp
push
leave
mov
lahf
rcr
inc
leave
cdq
pop
and
xchg
pop
stos
push
jg
cs
xchg
or
push
rcr
sbb
mov
mov
jb
fldenv
out
xchg
sub
jne
and
cld
push
aam
mov
outs
push
mov
cmp
jmp
pop
jl
cmp
cmc
adc
jb
push
dec
out
xchg
test
add
push
inc
jmp
imul
sub
pop
push
(bad)
jo
xor
push
or
xchg
pop
ror
mov
ja
push
repnz
sub
xchg
mov
mov
stos
lea
rol
icebp
leave
jbe
adc
inc
stos
inc
jmp
and
mov
test
ss
(bad)
pusha
test
dec
into
mov
xchg
xchg
shr
jbe
loopne
movs
xchg
test
ret
cli
into
test
adc
xor
addr16
mov
bound
gs
fwait
mov
repnz
out
xor
mov
out
hlt
mov
mov
out
ficomp
outs
sub
mov
add
adc
(bad)
and
movs
adc
cmp
cli
pop
adc
jae
test
xchg
push
lods
xor
or
cmps
fst
shl
cwde
inc
fild
sar
xor
popf
jnp
cdq
clc
jge
scas
leave
add
mov
cli
pop
dec
call
jne
gs
jle
imul
push
movs
cmp
std
out
and
or
inc
mov
push
add
ds
arpl
push
xchg
jge
popf
shl
stc
test
fld
in
dec
cmps
mov
jne
jnp
inc
adc
popa
lods
popf
int
dec
jmp
xchg
mov
add
in
pop
push
dec
scas
popf
ins
jb
lea
bound
adc
xchg
movs
dec
jae
mov
jg
pop
cli
jns
add
jmp
jecxz
lahf
(bad)
fwait
sti
dec
xchg
nop
adc
jae
mov
push
push
xor
retf
or
cmp
scas
cmps
mov
dec
fsub
inc
push
sar
daa
outs
shl
add
fidiv
cdq
addr16
mov
mov
out
sbb
fsubr
inc
ja
or
or
pop
mov
xor
ins
pop
mov
movs
mov
ficomp
out
ds
movs
jno
dec
inc
ss
inc
das
pop
add
pop
pop
call
rcl
stos
mov
dec
pop
mov
fild
inc
mov
pop
fcom
jnp
dec
lahf
jb
sbb
xor
(bad)
idiv
push
addr16
(bad)
adc
inc
and
push
xor
lahf
xor
scas
push
mov
or
cmp
lods
pop
dec
adc
les
jae
xor
loope
adc
add
loope
cmp
jbe
neg
xchg
idiv
clc
int
jae
in
rcl
jecxz
pop
mov
dec
clc
mov
mov
ins
pop
nop
cmp
or
repz
jl
xchg
add
movs
das
enter
xchg
out
popf
ret
push
mov
(bad)
push
ja
push
fistp
jge
jnp
in
mov
pushf
retf
adc
add
push
icebp
shr
pop
into
cmp
je
inc
sub
or
mov
push
aam
loop
test
jae
cmp
hlt
add
arpl
movs
(bad)
mov
xor
sbb
add
jns
xchg
ds
lds
xor
hlt
dec
outs
jns
mov
or
dec
or
fdivr
nop
xchg
sub
hlt
loop
call
push
jb
xchg
ins
imul
cmp
jns
push
lock
(bad)
pop
mov
mov
add
xchg
mov
xor
ror
sbb
(bad)
mov
add
lock
and
sti
push
inc
sahf
mov
push
in
dec
and
cmp
push
sbb
mov
fadd
jecxz
jo
xchg
fwait
xchg
xchg
bound
mov
push
cmp
cs
das
and
inc
push
test
or
inc
stc
jl
mov
and
(bad)
mov
inc
out
jecxz
in
ror
int3
sub
and
pop
dec
inc
or
outs
cmps
test
add
pop
or
xchg
arpl
fadd
and
lock
es
add
mov
push
out
push
shl
xlat
sbb
es
inc
inc
jb
sahf
movs
or
mov
call
push
clc
outs
fnstenv
rcr
stc
fwait
not
adc
add
cdq
xchg
cmp
mov
sbb
xchg
mov
cli
jno
imul
sbb
mov
push
push
int3
xor
(bad)
cmp
mov
push
popa
dec
adc
mov
into
test
mov
mul
cmp
shr
retf
or
or
xor
addr16
mov
mov
add
jb
cwde
cmps
popf
test
fdivp
pop
jle
arpl
mov
add
or
push
inc
push
leave
rol
cdq
sbb
add
dec
das
inc
retf
push
jmp
test
fistp
data16
lock
inc
dec
inc
into
cmp
js
or
inc
sub
jmp
dec
daa
jmp
xchg
push
pop
retf
xchg
cmp
cmp
jp
call
inc
pop
sub
(bad)
push
iret
cmc
dec
sbb
pop
(bad)
fstp
jg
daa
(bad)
sbb
jmp
jecxz
or
ss
std
lds
aaa
cmp
lock
jmp
adc
mov
sahf
enter
sub
lea
push
jl
leave
fs
ret
ins
push
jmp
ds
outs
shl
or
outs
sub
mov
inc
ds
fmul
scas
dec
cwde
imul
push
xchg
adc
inc
pop
sbb
xchg
mov
and
mov
jae
add
(bad)
fbstp
adc
xor
push
or
xchg
push
push
mov
mov
pop
add
inc
loope
mov
and
test
(bad)
fidiv
mov
fadd
and
cdq
test
pop
shl
mov
shr
ins
sar
jbe
adc
enter
out
cld
je
inc
xchg
ror
es
push
push
repnz
mov
mov
arpl
jl
pop
sub
cmps
bound
(bad)
mov
movs
xchg
add
cld
or
xor
nop
in
(bad)
mov
jmp
stc
fisttp
loop
and
push
and
repz
cmps
inc
in
setge
inc
add
push
cmp
mov
pop
sub
out
movs
out
adc
sbb
mov
dec
sbb
jecxz
ror
in
popw
xlat
call
fstp
(bad)
jecxz
shr
add
jmp
shl
mov
(bad)
dec
hlt
mov
push
pop
jl
scas
jmp
sbb
hlt
cmp
jnp
mov
into
fwait
mov
outs
mov
push
aas
jmp
ins
in
sbb
mov
dec
pop
retf
and
or
mov
mov
icebp
dec
stos
jp
aaa
mov
fnstsw
dec
(bad)
pop
loop
mov
push
mov
cmp
jb
add
scas
imul
mov
jne
mov
xchg
pop
sbb
lea
pop
fild
dec
push
shr
int3
in
or
xchg
int3
fst
mov
mov
addr16
pop
shl
xchg
push
cmp
sub
lock
fwait
add
add
loopne
add
aam
retf
ja
leave
pop
clc
inc
pop
mov
mov
adc
sub
lds
das
out
push
push
mov
in
mov
ins
xchg
aam
fidiv
mov
cmps
scas
cwde
(bad)
std
imul
jmp
ins
push
or
cmp
retf
jmp
or
mov
sbb
bound
push
add
push
mov
mov
(bad)
mov
ins
inc
fucomip
loope
fld
pop
shr
outs
cmp
pop
and
int
fistp
inc
cwde
push
imul
hlt
xor
stc
mov
mov
retf
and
xchg
out
(bad)
mov
cmp
jmp
wrmsr
out
cli
jne
inc
jmp
gs
inc
push
cmp
sub
or
lahf
or
shr
out
jge
mov
ror
outs
pop
div
pop
xchg
fwait
sbb
rol
outs
mov
leave
loop
adc
adc
pop
xchg
addr16
inc
or
mov
sahf
das
pop
(bad)
rcr
das
out
repz
pop
mov
fadd
pop
push
cmps
scas
test
int
jb
(bad)
dec
dec
add
retf
cli
xor
and
lods
push
adc
movs
or
fs
xchg
inc
pop
jbe
push
adc
pop
iret
shr
push
pusha
push
mov
xor
xor
leave
mov
ftst
cmp
mov
xchg
xchg
pop
stos
jmp
add
add
ret
psubsb
inc
sub
jmp
pop
js
mov
and
out
mov
cmps
das
and
cmp
jno
xor
popa
lods
in
xchg
jbe
fbld
test
(bad)
iret
imul
mov
stos
pop
sub
in
cmps
pop
in
mov
adc
icebp
je
das
clc
push
mov
shl
or
push
stos
retf
ret
(bad)
stos
push
sbb
cdq
jmp
and
mov
pusha
daa
inc
std
cmp
jecxz
scas
xor
test
pop
mov
lock
stos
push
out
(bad)
ins
test
push
out
mov
pop
push
in
add
int3
xchg
fidivr
test
push
imul
or
fsub
mov
test
mov
nop
push
iret
inc
pop
jmp
fdiv
mov
outs
(bad)
pop
mov
(bad)
out
mov
mov
je
xchg
(bad)
mov
xchg
and
stc
jo
es
ret
out
stc
fisubr
sahf
mov
pop
(bad)
(bad)
shl
ficomp
aaa
mov
adc
dec
add
jp
loopne
jle
fcmovnb
mov
xchg
imul
std
sub
sbb
test
jmp
push
mov
dec
jnp
cmc
or
aam
aas
mov
nop
scas
call
jno
aaa
jge
mov
lods
iret
in
push
sub
sbb
rcr
(bad)
loop
retf
jns
pop
mov
xchg
leave
xchg
aas
nop
inc
aam
sti
mov
inc
cmp
rol
ins
fsubr
push
frstor
dec
mov
dec
repnz
mov
adc
out
std
nop
inc
mov
sub
push
call
ss
into
repz
lds
(bad)
jecxz
mov
sbb
das
mov
and
cmp
cmps
mov
mov
pop
fs
fdivr
mov
stc
pop
jne
stos
shl
sub
cmp
dec
pusha
mov
fidivr
leave
movs
pop
ret
(bad)
aas
je
in
mov
dec
dec
mov
mov
sub
pop
int
mov
fwait
inc
xor
pop
adc
push
mov
fucomi
or
aas
push
fsub
fadd
inc
jle
(bad)
fld
icebp
lds
add
push
icebp
cmp
or
or
out
(bad)
outs
dec
imul
xor
in
cli
(bad)
out
jmp
movs
jo
push
fistp
mov
pop
icebp
(bad)
enter
add
inc
xor
inc
test
stc
scas
mov
test
fistp
fdivr
sbb
cmc
stos
repnz
push
das
xchg
jg
dec
(bad)
or
or
sahf
mov
je
stc
leave
imul
ret
sub
aas
test
cwde
in
adc
cmp
cmp
sub
movs
dec
loopne
aaa
sbb
pop
xlat
fadd
jge
pop
mov
mov
fwait
mov
mov
adc
inc
int
(bad)
(bad)
call
and
cmc
sbb
shl
mov
hlt
cld
xchg
loopne
int3
fcmovnu
push
push
cmps
repz
and
or
and
add
bound
fwait
lods
ins
lock
(bad)
cmp
cmps
and
push
push
and
jle
or
jb
push
xor
int3
in
pop
sbb
ins
ds
mov
into
mov
push
xchg
add
sbb
jl
int3
ret
fld
ja
daa
sub
jmp
xor
sbb
popf
or
leave
rcl
push
add
gs
or
in
xor
retf
loopne
inc
xor
xor
mov
pop
imul
pop
or
test
xchg
jnp
retf
and
push
xchg
fwait
jae
adc
lock
push
js
call
jbe
sbb
imul
dec
in
div
or
call
xor
jb
aam
push
mov
inc
push
int
add
and
not
adc
or
jl
adc
les
dec
push
retf
iret
xchg
shl
inc
adc
mov
dec
int
and
mov
xchg
sahf
stos
loope
pop
mov
adc
out
out
adc
cmp
in
jg
leave
enter
leave
mov
arpl
nop
pop
jge
outs
int3
push
add
cli
or
or
inc
mov
or
(bad)
push
ins
mov
sub
imul
out
mov
ins
xor
sbb
add
push
sbb
pop
test
shr
mov
fisttp
out
in
mov
mov
in
in
in
jnp
inc
lock
push
inc
loope
mov
inc
add
xor
call
imul
xchg
mov
paddb
test
or
mov
mov
jb
das
int3
je
push
loop
out
outs
cmc
fisub
stc
in
mov
test
sbb
mov
jge
xor
test
shl
shr
fadd
mov
(bad)
xlat
dec
mov
xchg
dec
xchg
push
sbb
mov
pop
xchg
loope
xchg
push
into
jns
inc
cmc
loopne
push
or
dec
adc
jg
js
rcr
rep
call
mov
dec
ins
sbb
jmp
xchg
aad
and
hlt
sub
xchg
mov
repz
fdivr
and
xchg
cmp
shl
mov
fs
stos
out
mov
icebp
jge
or
push
ror
adc
std
hlt
test
pusha
stos
addr16
ret
retf
sahf
pusha
test
rol
aas
lea
dec
call
cmovbe
into
push
pop
adc
repnz
mov
mov
rol
add
ins
bound
sub
pop
adc
ja
cli
sub
std
js
push
cmps
mov
(bad)
aad
jb
dec
call
inc
in
(bad)
ds
pop
enter
inc
aaa
div
and
fbld
jle
or
pop
psraw
dec
enter
mov
dec
lds
(bad)
test
rol
inc
rcr
xchg
mov
lock
xchg
stc
gs
cmps
pop
test
ja
repz
(bad)
neg
or
or
pop
fisub
add
jbe
js
js
xchg
shl
retf
push
pop
fnstsw
jno
bsr
dec
gs
or
into
add
cmp
push
stos
mov
xor
pusha
hlt
fs
neg
cld
xor
sti
jecxz
icebp
sbb
jbe
adc
test
lds
iret
and
pop
pushf
stc
cmp
pop
sub
mov
xlat
cdq
cmps
inc
mov
lss
repz
or
dec
or
push
sahf
and
(bad)
push
or
mov
dec
(bad)
add
jb
xor
mov
cmc
stos
loopne
and
sub
xor
xor
inc
mov
push
movs
fcom
pop
jbe
std
mov
push
dec
xor
fistp
retf
add
push
cmp
ror
xor
adc
loopne
mov
inc
mov
stos
xchg
mov
push
scas
mov
pop
out
fcmovne
jns
repz
jnp
stos
daa
or
data16
mov
push
in
std
dec
cmp
pop
inc
lea
imul
lahf
dec
mov
adc
test
(bad)
mov
xchg
or
mov
test
adc
sbb
sbb
mov
out
aam
(bad)
xlat
inc
xchg
adc
and
adc
test
xchg
addr16
jmp
fisub
inc
mov
sub
call
mov
shl
xchg
addr16
xor
(bad)
clc
fs
jle
fs
shr
cwde
loopne
mov
cmp
mov
sbb
mov
xlat
movs
imul
daa
xchg
mov
xchg
push
xsavec
icebp
pop
jb
mov
dec
mov
sub
sub
out
or
ins
outs
push
stc
lds
push
jge
mov
retf
adc
cmp
pop
cli
cmps
lds
xor
add
leavew
sub
(bad)
push
enter
push
rcl
clc
fld
adc
(bad)
lods
lds
or
mov
aas
sar
ins
dec
mov
fcmovnb
mov
stos
adc
sub
jmp
jmp
fadd
push
sbb
sahf
cmp
(bad)
jp
jle
mov
fisub
cmp
add
dec
xlat
in
adc
nop
inc
pop
pop
retf
repnz
in
dec
aad
cmps
xor
rcr
and
movs
jnp
add
sbb
push
pop
test
neg
dec
jecxz
mov
mov
stos
stos
aaa
push
push
int3
dec
xchg
popfw
pop
sub
dec
cmp
sbb
mov
xchg
mov
lock
sub
xchg
in
push
add
jmp
retf
mov
push
out
out
rcr
mov
imul
add
repz
mov
int
hlt
jmp
jecxz
mov
dec
shr
jb
pop
and
ret
push
je
or
pop
mov
test
mov
sub
jns
loopne
aaa
jge
pop
pop
or
sub
shl
(bad)
ret
jne
sub
gs
jp
pushf
dec
jg
add
mov
mov
jmp
mov
jg
pop
jmp
(bad)
push
mov
dec
sti
dec
xchg
xor
and
and
stos
hlt
and
dec
gs
jne
dec
rol
int3
add
fs
sub
mov
shl
and
adc
in
pusha
xchg
dec
test
push
mov
inc
retf
sahf
out
in
dec
rcr
hlt
(bad)
inc
cwde
add
xchg
xchg
bound
aaa
popa
pop
push
mov
dec
pop
jmp
xor
call
test
cmp
xchg
xor
push
mov
mov
div
push
dec
in
push
cmp
inc
xchg
push
xchg
mov
push
lds
cmp
ja
xchg
mov
pop
pop
out
pop
int3
movs
hlt
or
cmp
xchg
fs
scas
mov
fild
aad
push
outs
loope
aam
rol
(bad)
mov
jl
jnp
push
adc
stos
outs
inc
add
add
sbb
push
mov
mov
out
in
ja
icebp
fisttp
int
(bad)
aas
mov
mov
hlt
inc
pop
cmps
dec
add
outs
push
pop
pop
dec
sbb
xchg
leave
push
sar
movs
sahf
pop
add
mov
push
dec
fsub
lea
(bad)
lds
aad
in
out
mov
movs
ret
pop
cmp
aad
pop
adc
pop
push
dec
or
or
cmp
push
mov
movs
add
or
ja
inc
mov
xor
mov
ficom
push
retf
jne
addr16
jae
push
nop
xchg
push
fcmovbe
add
dec
xor
adc
(bad)
lea
push
ficom
jb
jb
in
aam
adc
mov
sub
ret
aam
fs
inc
out
outs
adc
call
imul
pushf
retf
sbb
push
clc
inc
pop
ins
push
mov
(bad)
test
xor
jne
add
pop
mov
inc
adc
ror
mov
pushf
or
fnsave
out
mov
push
les
in
out
aam
cld
xchg
jecxz
loopne
(bad)
test
push
pop
mov
cs
push
mov
xor
rol
adc
adc
sbb
jb
mov
pop
sub
psrlw
inc
push
or
and
add
mov
inc
std
mov
stos
rol
mov
push
jnp
mov
lock
popf
jb
mov
xor
test
cmp
sub
push
mov
cmp
jp
jge
cmps
cmp
sub
pop
mov
iret
xor
outs
cmp
inc
arpl
jns
push
scas
sbb
jg
adc
scas
lock
fsubp
jge
mov
bound
gs
push
jle
cld
movs
cmps
gs
cmps
mov
add
addr16
ss
(bad)
jnp
push
xchg
mov
aam
jbe
stos
out
les
inc
call
cmp
jg
push
jle
xchg
mov
add
jne
adc
arpl
xchg
int3
fsub
out
aaa
ror
cmp
ins
sbb
add
mov
sub
call
dec
out
adc
or
fisubr
pop
add
xchg
mov
cmp
cmp
xor
and
dec
hlt
push
sar
cmps
sub
adc
pop
xchg
xacquire
scas
fmul
mov
mov
push
mov
xor
and
adc
cmp
mov
in
movs
lock
mov
out
std
cmps
scas
shl
mov
in
outs
inc
(bad)
ficom
ficom
div
movs
fwait
push
mov
jae
ror
sbb
jne
retf
and
inc
sti
cmp
cmp
movs
xchg
inc
mov
dec
ss
dec
dec
(bad)
cwde
and
sbb
in
jp
xor
test
mov
out
mov
and
test
lahf
jecxz
ss
rol
cmp
cmp
leave
fwait
adc
xor
(bad)
clc
dec
cmc
mov
xor
and
rcr
dec
push
jmp
and
sub
mov
fwait
pop
xor
pop
js
add
ja
bnd
xchg
push
push
pop
sub
or
xchg
add
pop
loopne
sbb
test
loope
add
push
adc
inc
mov
(bad)
mov
js
inc
mov
in
into
outs
dec
rcr
jb
xor
js
push
sub
mov
aas
xchg
cmp
das
mov
loopne
in
sbb
xor
mov
and
mov
fist
call
sub
add
in
popf
mov
pop
dec
xchg
and
leave
mov
lock
test
call
cmps
call
retf
dec
test
test
enter
xchg
fbld
pop
fisubr
pusha
retf
loope
cmps
loopne
dec
mov
repnz
xchg
sub
cmc
jmp
mov
mov
xlat
ror
xchg
push
add
jne
aas
jle
loop
mov
popf
adc
(bad)
inc
sti
aad
imul
cmp
mov
and
add
mov
inc
add
dec
xor
fwait
mov
sub
adc
mov
ins
xor
add
fucomp
cmp
and
mov
nop
loope
xchg
pusha
in
std
mov
imul
stos
test
push
sbb
cmp
fimul
jnp
cmc
imul
js
mov
clc
ret
(bad)
and
mov
cmp
add
fld
sti
scas
inc
(bad)
and
mov
or
xor
pop
sub
jle
sub
int
jp
aas
scas
ret
stc
cmp
fcomp
push
scas
ins
outs
stos
sar
jp
or
sbb
jmp
add
push
mov
cmp
mov
dec
jmp
jnp
jmp
jo
sbb
or
sub
gs
icebp
shl
inc
lods
call
stos
aam
sub
jmp
sbb
loopne
lods
outs
mov
mov
mov
jo
gs
popf
lds
mov
mov
push
leave
jae
mov
popf
mov
pop
inc
xchg
retf
mov
inc
fwait
out
(bad)
int
outs
fnstcw
sbb
in
out
xor
mov
popf
xor
imul
fs
retf
cmp
ret
sbb
xchg
jnp
imul
(bad)
call
popa
xchg
cmp
xor
stos
neg
arpl
imul
and
shl
sbb
sbb
cmp
mov
mov
test
lds
js
rcr
pop
ja
cmp
push
mov
sbb
addr16
call
jle
movs
or
mov
pop
int3
pop
add
mov
jl
xor
out
push
stc
add
mov
mov
outs
icebp
or
int3
mov
js
hlt
scas
lods
mov
jmp
ins
ret
sysenter
pusha
fcom
and
in
test
out
ins
repz
mov
loopne
retf
lock
daa
fnstenv
or
retf
mov
cmps
xchg
mov
mov
fwait
cmp
bound
mov
sar
push
jne
jle
and
js
push
push
mov
add
dec
es
xlat
pop
adc
pop
loope
and
imul
push
fst
adc
sub
jae
push
push
sub
cmps
rol
jno
mov
loopne
sbb
repnz
popa
cmps
push
mov
lahf
pop
sub
jns
inc
arpl
fimul
jg
xor
xchg
in
stc
das
(bad)
xor
imul
pop
call
xlat
pop
or
mov
adc
repnz
movs
ret
std
imul
xchg
test
mov
repz
and
les
mov
push
adc
fidiv
cli
lahf
adc
aad
test
imul
arpl
pop
loop
scas
mov
adc
out
ins
jl
xchg
xor
loope
into
mov
xor
(bad)
xchg
sbb
inc
and
xor
in
mov
push
jb
(bad)
cwde
xor
sub
xchg
push
popf
call
into
test
movs
ret
or
pop
dec
cmp
sub
rcl
arpl
inc
dec
pop
xchg
sbb
inc
mov
cmp
loopne
stc
jmp
inc
daa
cld
fs
test
mov
and
cwde
dec
aas
pop
mov
cmp
mov
mov
sbb
jae
and
xor
lds
ror
out
test
mov
cmp
scas
dec
scas
sti
jae
mov
sahf
mov
jns
pop
mov
push
loop
lods
sub
stos
lods
sbb
movs
jp
pop
in
xlat
and
push
ror
pop
imul
or
nop
xchg
data16
mov
int
xor
outs
adc
bound
int3
mov
repnz
mov
mov
push
inc
inc
sub
ins
inc
out
ret
push
cli
lds
mov
nop
ds
ficomp
and
dec
rcl
enter
les
leave
lock
pop
mov
xchg
data16
ins
mov
adc
pop
mov
xchg
aad
or
fdivr
mov
repnz
xor
fs
loope
test
jnp
enter
imul
push
std
iret
push
xor
xchg
fs
mov
push
mov
adc
imul
retf
adc
dec
daa
daa
jae
daa
icebp
loop
inc
mov
iret
push
pusha
sub
and
pop
cli
int
cmp
xor
pop
test
or
inc
nop
inc
test
outs
mov
sbb
test
dec
mov
mov
inc
mov
movs
add
out
shl
movs
mov
cwde
mov
or
cs
inc
shr
or
jbe
or
jae
xor
or
mov
icebp
mov
add
rol
xor
sahf
test
mov
sbb
ja
fisttp
les
push
fs
cmp
cmp
xchg
and
jne
push
xchg
and
push
dec
xchg
jns
or
shl
jno
sti
iret
or
lds
vpcmpgtd
scas
lods
sbb
push
dec
add
or
dec
dec
call
mov
jecxz
test
adc
in
ret
ffree
aas
les
push
stc
or
mov
xchg
mov
mov
xchg
cmc
sti
cmps
mov
out
repnz
xor
js
scas
jge
test
sti
lahf
bound
sahf
imul
loopne
jno
inc
sub
stc
or
cmp
inc
and
std
(bad)
sti
lea
ret
mov
lods
push
push
fcomp
daa
dec
cmc
fstp
sub
adc
mov
add
repz
xchg
mov
pushf
ja
ins
xor
push
and
mov
xchg
(bad)
bswap
xor
mov
add
jle
leave
push
inc
add
std
in
or
sahf
mov
aas
add
dec
test
mov
jbe
jl
ret
loopne
xchg
scas
stc
cmp
(bad)
and
inc
retf
xor
fstp
test
rcr
push
push
repz
or
std
lock
adc
adc
adc
xchg
dec
in
ds
mov
dec
push
jp
fwait
dec
push
(bad)
mov
shl
sub
lds
sahf
cmp
cdq
sub
ss
ror
or
cmp
inc
mov
dec
sub
es
retf
sbb
clc
lods
mov
jp
jp
(bad)
into
or
add
xchg
outs
cmp
or
push
mov
mov
sbb
xchg
pop
dec
out
in
and
shl
mov
stc
(bad)
and
pop
mov
fstp
mov
pop
xchg
in
out
pop
jge
cli
inc
inc
xchg
sahf
aam
adc
(bad)
ror
and
sahf
scas
stc
std
iret
call
popa
push
cli
repz
or
rcr
movs
gs
jle
int3
imul
iret
fcmovne
setno
pop
pop
sub
arpl
sub
pop
mov
jo
mov
cdq
fwait
cmps
call
enter
(bad)
jge
rcl
adc
adc
dec
ret
sar
shl
ja
(bad)
in
sbb
xor
mov
arpl
xor
leave
mov
outs
call
mov
imul
or
bound
ins
adc
addr16
shl
pop
jo
add
in
pop
(bad)
in
push
mov
jns
adc
jbe
lock
mov
cmc
push
gs
inc
push
loop
stos
mov
mov
xchg
nop
mov
xlat
or
xor
test
cli
popf
in
cmp
bound
popf
inc
and
les
sub
pop
fwait
into
retf
cdq
les
pop
mov
mov
xor
fiadd
retf
pop
aam
or
xor
xchg
(bad)
repnz
sbb
int3
inc
leave
sub
or
inc
mov
jne
(bad)
jmp
ja
sbb
call
in
adc
(bad)
add
in
in
xchg
arpl
xchg
nop
(bad)
and
(bad)
xor
movs
or
mov
leave
jmp
and
xchg
sub
jae
mov
dec
mov
test
mov
mov
push
cld
das
jmp
mov
push
inc
sbb
call
adc
xor
and
adc
imul
xor
or
aad
push
cmps
data16
mov
mov
test
jmp
jecxz
mov
sbb
push
cmps
jle
pushf
fistp
or
and
mov
(bad)
rcl
push
sub
jmp
fcmovne
ins
xchg
xchg
icebp
pop
lods
mov
(bad)
mov
inc
test
test
js
lahf
jbe
lea
dec
pop
adc
inc
lock
out
adc
out
mov
xor
push
ja
lods
ins
inc
in
sub
addr16
mov
or
(bad)
test
and
mov
dec
mov
and
sbb
add
sub
add
lea
inc
adc
ret
inc
out
jmp
push
fcomi
std
pusha
jge
(bad)
je
cmp
test
enter
pop
push
mov
out
popf
out
xchg
inc
scas
(bad)
jmp
aaa
fnop
mov
mov
push
fwait
iret
je
fwait
lahf
mov
mov
xchg
ss
shr
out
push
xchg
mov
lods
sbb
cmp
mov
cld
int
jo
and
into
cld
lds
out
clc
cld
xor
jbe
jo
and
pop
cmp
dec
mov
and
gs
mov
lahf
xor
push
xor
xchg
rol
sti
fs
ret
sub
pushf
retf
ret
daa
push
mov
adc
inc
(bad)
adc
pushf
hlt
adc
ss
or
lds
das
(bad)
arpl
mov
fistp
pop
sbb
sti
inc
(bad)
sub
mov
add
xor
(bad)
mov
mov
sub
repz
sub
push
and
xor
jmp
pop
ins
mov
out
xchg
lock
ret
add
mov
pusha
cmc
aaa
ins
jecxz
xchg
add
mov
dec
sub
gs
mov
(bad)
in
xor
rcl
idiv
mov
dec
aad
movs
test
pop
sbb
and
adc
iret
cmp
inc
rcr
push
cmc
cmp
imul
adc
mov
js
das
aad
mov
retf
jmp
push
xor
jmp
mov
sub
jbe
pop
xchg
retf
xlat
rcl
xchg
in
repnz
lods
mov
xor
imul
mov
and
jo
adc
sbb
std
push
imul
cli
shl
enter
fsubr
lods
in
cmps
enter
shr
pushf
cmp
hlt
and
mov
ret
xchg
push
add
xor
xor
aad
outs
stos
mov
fisttp
pop
cmp
mov
push
jmp
or
fild
mov
xor
js
mov
scas
shr
dec
cmps
arpl
mov
dec
out
xchg
mov
adc
ss
outs
jnp
cmp
movs
inc
inc
int
mov
nop
mov
into
mov
dec
or
imul
inc
jg
xor
sahf
xchg
xchg
xor
popf
int
(bad)
xchg
cmps
popf
pop
dec
pop
fidiv
dec
sbb
pop
jmp
lods
mov
adc
fnstcw
pop
std
mov
sbb
outs
int3
add
pop
mov
sub
cld
xchg
scas
jbe
sub
out
mov
ret
jnp
jl
popa
pop
mov
xor
stc
aad
sti
sbb
out
add
xchg
push
push
xor
(bad)
ins
fnsave
mov
inc
mov
mov
(bad)
clc
fidivr
jno
mov
loopne
dec
pop
adc
fmul
xor
mov
xor
add
pop
push
retf
cmc
xchg
push
popa
xchg
push
repnz
xchg
and
and
sub
call
jae
imul
out
xor
pop
and
cmc
dec
adc
mov
pop
mov
pop
sbb
inc
push
dec
sub
out
loop
dec
pop
(bad)
in
xlat
addr16
adc
sub
popf
retf
or
jns
pop
jno
es
dec
sbb
inc
movs
lods
mov
out
mov
clc
jmp
push
jbe
jno
cmp
push
cmps
dec
mov
scas
jae
sbb
jmp
cli
inc
xchg
pop
pop
mov
sbb
jmp
sti
test
out
loop
and
or
and
bound
(bad)
pop
mov
push
mov
cmc
lahf
cmp
xchg
aaa
sbb
xchg
nop
shr
arpl
movs
jg
sbb
stos
idiv
pop
jl
out
fsub
fstp
cmp
adc
test
das
sbb
icebp
fimul
dec
mov
add
sbb
mov
cs
popa
jmp
push
(bad)
fsubrp
in
sub
and
xor
xchg
bnd
push
std
daa
ins
adc
push
mov
jp
dec
ins
mov
aaa
adc
mov
or
and
push
test
and
cmp
pop
adc
sub
in
inc
call
icebp
sub
adc
add
push
(bad)
xor
addr16
mov
add
xor
push
and
mov
aad
pop
mov
and
mov
cmp
mov
mov
sub
les
adc
lds
mov
shl
sbb
sbb
mov
add
out
int
sub
xchg
cld
mov
lahf
dec
mov
xor
mov
mov
sbb
mov
test
outs
ins
leave
ds
sbb
xchg
and
cli
aaa
outs
mov
data16
ficom
pop
dec
test
popf
cmp
jp
or
test
mov
xchg
xchg
mov
mov
test
jmp
shl
jg
xor
lock
jp
ret
adc
jo
xchg
cmp
add
mov
aas
add
or
mov
sahf
pushf
push
xor
call
add
aaa
adc
jg
data16
xchg
es
stc
jge
(bad)
xchg
mov
jge
dec
mov
fadd
ret
pop
or
nop
sar
movs
sbb
scas
mov
ins
test
in
xchg
cmp
std
mov
and
ins
pusha
mov
and
mov
xlat
jo
cmps
dec
out
and
imul
pop
mov
(bad)
inc
sbb
cmp
sbb
jmp
int3
push
popa
xor
cwde
pop
outs
pop
mov
and
dec
xchg
pop
inc
cmps
imul
and
cmps
mov
int
sar
push
dec
repnz
imul
mov
mov
aad
xor
pop
addr16
adc
xchg
test
outs
sub
push
xchg
inc
cmp
pop
jno
out
das
cld
(bad)
jecxz
sub
add
js
clc
xchg
icebp
pop
lods
es
sub
hlt
mov
jecxz
inc
pop
jge
js
lds
sbb
jne
in
push
mov
xchg
push
jb
sub
mov
cmp
(bad)
jnp
ret
fabs
clc
add
lods
retf
or
push
pop
retf
inc
cdq
add
mov
push
inc
push
adc
add
lahf
cli
sbb
dec
popa
sbb
dec
jnp
pop
xchg
enter
inc
sub
mov
dec
or
mov
mov
mov
cli
fbstp
dec
cli
cmc
loop
outs
xchg
aaa
mov
jle
xor
scas
ror
int
rcr
and
dec
sbb
dec
push
xchg
cld
push
xor
sub
dec
loop
ds
les
outs
dec
mov
sub
rcl
jo
mov
fwait
out
sbb
cmp
lods
or
mov
xchg
ficom
cmp
ror
int3
fwait
movs
popa
inc
lods
sar
mov
pop
outs
push
push
data16
stos
jle
push
int3
retf
sti
(bad)
and
scas
push
inc
or
push
mov
pop
cwde
jae
xchg
sub
ss
and
jb
mov
popa
pop
push
test
and
inc
inc
mov
add
(bad)
cdq
cld
jecxz
mov
xchg
aaa
mov
cmp
jp
push
jns
pop
mov
cmp
movs
ret
xor
push
xor
(bad)
cmp
mov
adc
cmps
inc
(bad)
xchg
push
test
aad
xchg
sbb
std
xlat
xor
cs
ret
xlat
mov
psrlw
dec
daa
xor
cmps
test
pop
lock
cmps
inc
or
cmc
mov
add
(bad)
jp
pop
pop
or
rcl
sbb
gs
pminub
xchg
arpl
sar
icebp
cld
stc
fist
out
data16
pusha
fcmovu
mov
mov
mov
cmc
bound
add
dec
in
fwait
ins
dec
(bad)
cwde
test
jns
mov
fld
xchg
lock
push
push
jbe
push
and
cmp
mov
adc
mov
cwde
aas
fldz
mov
fwait
dec
in
ins
pushf
(bad)
inc
xchg
adc
mov
dec
in
cli
push
jb
jg
aas
test
ja
dec
fdiv
cmp
add
push
fst
pop
in
or
or
xchg
sbb
add
imul
data16
xor
inc
add
imul
mov
test
dec
movs
add
xor
arpl
repz
out
aaa
mov
rcl
aas
xor
test
in
push
or
mov
das
jle
sbb
mov
cwde
pop
mov
pushf
or
sti
add
add
xor
xlat
mov
xchg
lods
aaa
pop
add
xchg
pop
in
sbb
daa
adc
xchg
pop
fs
and
pushf
stos
rcr
mov
fwait
push
dec
push
cmp
loopne
mov
ret
cmp
scas
inc
cld
pop
ja
lods
dec
dec
lea
inc
mov
pusha
mov
mov
(bad)
sahf
mov
fld
mov
ss
xor
push
add
sub
fcmovu
push
int
pop
cmp
test
xchg
jmp
pop
mov
push
push
inc
(bad)
mov
fild
call
data16
jo
into
push
jp
scas
fcmovnbe
mov
scas
fs
ja
jbe
cmps
in
mov
xchg
mov
js
sub
out
lea
pushf
sub
pop
iret
push
mov
fwait
cs
xor
out
cmp
ss
(bad)
(bad)
adc
ins
adc
adc
sbb
sbb
(bad)
in
lods
call
jnp
sahf
sub
lods
retf
fidiv
mov
push
pop
adc
cmp
cmp
or
in
stc
int
iret
int
pushf
push
jl
(bad)
es
sbb
push
xor
in
cmp
xor
inc
mov
xor
sub
mov
scas
pop
mov
jp
inc
ins
and
into
mov
and
adc
jecxz
xchg
rcr
jae
add
sub
inc
or
jecxz
and
cmp
out
inc
ins
scas
xchg
clc
aaa
std
(bad)
daa
js
cmp
int
xchg
inc
pop
pushf
cmc
push
fild
inc
gs
imul
and
jle
lahf
pop
adc
cmp
sub
movs
gs
pop
iret
and
add
jb
or
and
mov
xchg
imul
scas
mov
xor
aad
mov
xchg
retf
push
pushf
stos
jg
int3
fsubr
(bad)
stos
and
jo
push
movs
sti
jmp
arpl
imul
movs
jl
xlat
push
dec
ret
mov
dec
mov
int
sbb
inc
jae
or
dec
push
sub
mov
jge
lods
inc
or
inc
mov
hlt
xor
and
leave
(bad)
xlat
mov
out
sbb
inc
ret
into
mov
cmp
sbb
pop
mov
adc
and
scas
mov
imul
das
in
add
cmp
pop
aam
jo
mov
gs
inc
test
mov
or
push
and
jl
icebp
repz
pop
sbb
mov
into
xor
add
sub
shr
call
fimul
and
or
rcr
stos
popf
mov
xchg
pop
sub
xchg
xchg
sbb
test
cli
imul
or
fistp
and
aaa
xchg
mov
xchg
xchg
xor
repz
adc
arpl
mov
icebp
adc
adc
in
inc
das
data16
movs
icebp
jge
mov
ins
mov
dec
mov
xor
adc
jecxz
int3
mov
daa
or
jb
push
sti
pop
shr
sbb
jmp
fst
xchg
mov
adc
xchg
xor
adc
mov
inc
sbb
addr16
sub
xchg
mov
jbe
jecxz
popa
out
lahf
jno
outs
enter
ret
cmp
sqrtps
dec
in
mov
cld
xchg
sbb
mov
cmp
fbld
inc
cdq
jbe
sub
jg
jne
fist
add
adc
add
aam
mov
in
jmp
neg
outs
or
dec
jns
imul
cmp
jmp
sub
pop
loope
das
out
mov
in
push
xchg
jp
mov
xor
cwde
push
sub
or
jmp
or
mov
sbb
mov
xchg
mov
enter
pop
fldcw
ins
mov
aaa
mov
xchg
mov
loop
push
daa
lods
cmp
ffree
push
sub
lds
test
fs
inc
movs
push
pushf
push
push
hlt
pop
sub
xchg
dec
les
xchg
lea
mov
push
xchg
fld
xor
fmul
jno
rcl
and
push
aam
mov
test
fcmovnbe
(bad)
cmp
sub
daa
pop
arpl
xchg
add
dec
movs
push
gs
dec
outs
movs
movups
arpl
ret
mov
jg
sub
clc
mov
fist
ins
cs
hlt
push
and
pop
sbb
xor
cs
push
xor
sub
jg
repz
popa
ss
push
call
xor
sub
push
xor
in
mov
mov
rcl
test
out
mov
js
gs
inc
mov
movs
dec
ins
ret
dec
loope
mov
pop
push
fistp
pop
lock
add
jmp
adc
xor
jp
inc
add
enter
sbb
xor
sub
stc
mov
and
mov
sahf
es
imul
outs
dec
sbb
test
inc
mov
jle
shl
mov
jge
pop
fcomp
stos
imul
xchg
xchg
mov
retf
into
daa
push
loope
push
and
cmp
add
cmp
jbe
neg
xor
fmul
pop
imul
test
addr16
dec
in
aaa
adc
mov
sub
lods
jmp
push
pop
mov
out
pop
and
(bad)
fsub
xor
test
pop
mov
fidiv
movs
mul
hlt
inc
sahf
xchg
std
sbb
jo
jge
sbb
enter
call
stc
jmp
push
mov
stc
nop
out
data16
mov
sub
into
scas
aaa
inc
mov
mov
ja
jl
lock
fst
adc
push
push
xor
push
add
jmp
sub
sahf
or
inc
(bad)
pop
adc
mov
rcr
mov
test
ss
data16
call
jmp
pop
jmp
lods
stc
pmulhuw
jne
pusha
stos
rcl
ds
dec
lods
xlat
cmp
(bad)
pusha
inc
pop
dec
sbb
mov
mov
aam
cmp
pop
pop
xchg
pusha
out
adc
pusha
push
xchg
fistp
xchg
rcr
inc
xchg
dec
xor
in
es
pop
sub
arpl
and
ret
cmps
push
push
enter
in
test
js
xchg
lock
fsub
jge
pusha
sub
jmp
inc
pop
sahf
(bad)
pop
inc
data16
mov
mov
test
popf
call
outs
lahf
push
or
fidiv
adc
mov
lahf
cmps
inc
mov
rcl
add
push
cwd
test
es
not
shr
push
(bad)
call
add
in
push
mov
cdq
jno
pop
loopne
call
js
test
and
cs
rcr
les
fstp
mov
mov
jg
dec
jae
sbb
jmp
inc
(bad)
das
enter
lock
mov
sub
sub
jg
jbe
xchg
jg
shl
push
mov
out
lods
jo
lahf
lahf
sbb
xchg
nop
popa
stc
and
test
aas
mov
fidivr
loope
or
inc
mov
test
test
lods
mov
mov
inc
dec
xor
lahf
mov
in
adc
aam
add
test
xchg
out
imul
jae
sbb
test
xchg
dec
mov
adc
cmc
setns
or
cmp
sti
cmc
mov
call
dec
inc
cmp
jb
or
jb
imul
fs
movs
mov
into
inc
or
add
and
das
ins
cmp
sbb
jns
out
lods
mov
dec
dec
mov
es
mov
or
mov
cmps
scas
jle
mov
pushf
sub
and
jl
cli
mov
stos
xor
fistp
mov
stos
jl
repnz
lock
mov
int
lahf
add
(bad)
and
xchg
cdq
cmc
in
push
(bad)
jecxz
stc
imul
icebp
mov
cld
in
or
and
out
add
and
pop
xchg
cmps
sub
push
inc
push
rol
dec
movs
sbb
call
pop
sbb
jne
pop
sbb
inc
fsub
sub
sbb
sub
mov
push
out
aam
f2xm1
int
jnp
bnd
inc
loope
loopne
pop
push
xchg
push
xor
push
std
inc
cmp
mov
xor
cld
cmps
outs
test
test
jg
adc
fldenv
fdivr
inc
cld
shl
xchg
add
pop
shl
call
retf
sti
ret
rcl
out
ror
clc
cmp
dec
addr16
imul
imul
adc
sbb
(bad)
push
inc
mov
in
xor
out
aam
add
sub
into
jbe
sub
jecxz
or
cmps
addr16
ret
xchg
(bad)
xchg
sub
pop
jb
pop
in
test
cld
xchg
shl
enter
rol
mov
xor
cmp
int
out
shl
jmp
stos
cmp
xor
jg
lds
sub
xor
add
sti
or
cmps
sbb
mov
es
or
adc
xlat
ss
and
call
dec
addr16
(bad)
jmp
jle
inc
outs
sbb
fs
je
adc
dec
es
jnp
repz
lods
lods
sub
pusha
dec
aas
pop
sub
xchg
iret
and
sbb
ins
loop
sub
popf
retf
repnz
movs
mov
test
xor
mov
or
pop
sbb
test
pop
enter
lods
lea
inc
sub
pusha
xor
pop
add
sar
loop
jg
sahf
pop
sar
in
adc
sbb
jg
test
xor
ret
nop
pusha
inc
call
rcl
loop
sbb
jg
aad
or
pop
sbb
enter
call
cmps
inc
sti
sahf
leave
inc
sub
fwait
jge
xor
into
cwde
loop
sbb
sti
dec
and
stos
imul
pop
jge
adc
jmp
fldpi
push
push
xchg
xchg
or
rcr
ret
sub
aas
or
jae
fidiv
into
stc
aas
ror
pop
hlt
sub
ror
sbb
mov
in
add
outs
inc
pop
pop
outs
mov
gs
cdq
push
mov
sbb
push
(bad)
mov
xchg
cmp
adc
xchg
std
mov
mov
cmc
(bad)
push
(bad)
in
sbb
pushf
in
and
xchg
adc
mov
add
in
mov
cmp
cli
stc
mov
xchg
push
and
popf
mov
mov
xor
xchg
sub
jne
push
adc
jl
inc
lds
mov
or
mov
ret
popa
shl
jge
cmp
adc
add
jmp
cld
add
aas
mov
push
xor
int
scas
iret
call
adc
stc
and
push
lds
sub
retf
stos
jo
add
das
cmps
pop
inc
jbe
mov
dec
mov
int3
mov
mov
cmps
out
fs
sbb
cwde
push
jo
(bad)
scas
xor
jl
and
push
or
mov
or
mul
cmc
sub
mov
(bad)
jp
and
push
daa
(bad)
mov
in
jmp
imul
or
mov
fmulp
neg
jge
cmps
fistp
and
pusha
pop
adc
inc
jmp
mov
repnz
jmp
idiv
mov
or
mov
aaa
push
retf
mov
xor
fs
das
ins
pop
fwait
aas
in
mov
mov
mov
mov
pop
pop
rcr
fmul
xchg
out
or
mov
xor
push
sbb
jl
test
in
es
mov
out
fadd
and
pop
ret
and
and
dec
cmp
rcl
in
scas
adc
mov
pop
lds
and
add
in
ror
out
fidivr
out
push
dec
inc
ja
dec
xchg
clc
enter
xchg
sbb
add
ds
mov
mov
pushf
mov
push
iret
push
cs
jl
fdivp
inc
adc
mov
mov
into
cmp
mov
out
jp
hlt
dec
push
stos
imul
lds
jle
mov
test
loopne
xor
mov
not
push
xchg
push
mov
out
sub
fcmovb
inc
sub
adc
push
sub
lods
dec
lock
push
fsubr
(bad)
pusha
in
jg
mov
xchg
data16
sub
xchg
call
imul
sahf
and
(bad)
adc
and
cmc
xlat
jnp
sbb
mov
sbb
retw
jo
lods
mov
xchg
dec
call
fld
neg
xchg
and
lods
and
pop
mov
sbb
lods
(bad)
sar
mov
cld
sti
cmp
xchg
sbb
pop
pop
adc
cli
dec
sbb
cwde
xchg
cmps
sar
fidiv
call
pop
ins
ins
mov
(bad)
out
ss
sti
inc
mov
and
mov
jae
adc
or
jmp
stos
adc
sub
sub
loop
jmp
sub
sbb
iret
or
sub
in
cmp
mov
ror
dec
inc
pop
jl
ins
sbb
jb
adc
mov
add
mov
pop
les
pop
out
sub
arpl
std
sub
fwait
mov
cmps
aaa
mov
dec
or
mov
mov
inc
fmul
mov
xchg
inc
les
ja
mov
mov
aam
pop
sub
sbb
fisttp
pop
xor
mov
dec
out
dec
scas
test
sub
daa
stos
stc
cmp
push
bound
jno
add
jno
mov
inc
aam
jg
add
and
scas
mov
loop
cmp
mov
lods
stos
mov
dec
ins
jl
sub
xchg
data16
adc
movs
push
xchg
xchg
arpl
shl
add
mov
xchg
dec
and
sahf
adc
es
jecxz
adc
mov
or
pop
mov
int3
jmp
out
sub
mov
or
mov
fist
stc
pop
or
fisubr
mov
icebp
in
in
jmp
xor
mov
int
das
inc
jmp
sub
xchg
cli
sbb
(bad)
lahf
mov
xchg
dec
test
fisubr
inc
fstp
add
(bad)
pop
push
mov
mov
adc
push
dec
lods
jb
sub
pop
lock
mov
loopne
push
sub
jg
mov
add
movntq
out
sbb
jae
mov
ins
fsubr
popa
xor
je
push
mov
cmps
jecxz
fmul
mov
dec
sahf
add
cmp
pop
dec
push
rol
dec
pop
push
cmp
pop
xchg
leave
xchg
or
push
and
popf
dec
pop
mov
mov
call
cmps
pop
sbb
adc
and
inc
fisttp
push
jno
imul
inc
in
jmp
or
mov
aad
leave
repz
xchg
loop
int
jnp
cmp
sbb
push
fiadd
pop
push
movs
xor
mov
dec
cli
mov
je
dec
sbb
xor
mov
push
je
sub
inc
pop
clc
enter
xor
test
mov
ja
mov
sti
jo
inc
mov
int
scas
(bad)
nop
in
ds
sbb
cwde
inc
outs
retf
shl
repz
scas
or
pop
cdq
mov
mov
jnp
icebp
sub
aad
push
push
pop
shl
add
add
aad
rol
cmc
rol
jle
cmp
fmul
or
mov
scas
cmp
mov
call
ins
mov
pop
fs
dec
(bad)
scas
and
mov
push
inc
push
adc
ret
loopne
inc
call
lods
call
aam
mov
adc
pop
retf
jg
mov
add
mov
(bad)
mov
retf
mov
out
and
ret
movs
push
cmp
daa
push
(bad)
sbb
imul
nop
push
shr
dec
div
cmp
and
stos
int3
push
pop
inc
fisub
lahf
out
sub
jle
or
lahf
fstp
and
stc
stc
aas
cmp
push
imul
addr16
imul
sbb
mov
test
mov
xchg
out
fiadd
mov
inc
imul
pusha
sqrtps
mov
ficom
nop
shl
psubusw
cs
pop
pop
adc
repnz
in
adc
in
outs
icebp
paddsb
fstp
outs
clc
dec
cmp
ja
fs
push
pushf
ds
lahf
inc
and
pop
push
pop
fsubrp
push
push
rcr
jb
add
push
not
or
outs
inc
les
imul
int3
sbb
cmp
push
test
mov
mov
dec
test
aaa
das
rcl
sub
pusha
movs
ins
aad
sbb
add
and
adc
stc
fsubrp
push
and
(bad)
jle
or
mov
mov
retf
push
push
aad
cli
or
xchg
or
lahf
sub
pop
cs
inc
dec
sub
mov
scas
mov
mov
fwait
cld
dec
jae
sbb
push
les
sbb
stos
(bad)
inc
sub
inc
clc
cmp
dec
or
pop
inc
dec
cmp
pushf
cmps
outs
jbe
div
shr
dec
dec
ss
pop
ins
cmps
sahf
cmp
cmp
add
fwait
sbb
ficomp
jnp
inc
sub
jno
std
mov
popf
mov
fld
push
push
imul
jecxz
add
jmp
xchg
push
mov
pop
mov
hlt
pop
jbe
rcr
aas
(bad)
(bad)
fdiv
mov
stos
push
hlt
push
test
push
outs
rol
push
aad
in
loop
add
enter
pusha
push
xor
popa
push
hlt
out
cmp
sub
mov
jmp
in
inc
pop
mov
jg
data16
sbb
jo
sub
mov
out
(bad)
call
jne
adc
jle
pop
inc
das
push
jmp
inc
stos
push
movs
adc
dec
cmps
scas
jb
out
pop
rol
pop
and
add
cdq
into
cmp
js
or
adc
inc
dec
fstp
stc
cli
cs
mov
or
cli
iret
cmp
adc
pusha
std
jae
adc
cmp
push
(bad)
add
dec
mov
mov
sub
xchg
cmp
mov
mov
push
jmp
and
and
xor
mov
pop
out
xchg
stos
popf
sbb
inc
jge
pop
in
dec
into
std
cmp
jle
sbb
mov
xor
and
imul
stos
jnp
cmp
pop
mov
inc
rol
retf
xchg
jecxz
inc
aas
jmp
xchg
inc
sar
mov
mov
cmp
aad
out
les
ret
pop
out
sbb
sub
and
pcmpgtw
sti
pop
mov
inc
add
mov
sub
into
jmp
clc
push
es
fwait
mov
ja
pushf
das
sbb
mov
jmp
ins
add
adc
or
add
jl
xchg
clc
adc
mov
and
dec
mov
test
imul
lock
sub
scas
push
xor
jge
jge
inc
(bad)
loope
bound
dec
out
jge
and
scas
dec
inc
jmp
xor
sbb
mov
mov
rcr
leave
add
sub
js
neg
scas
xlat
mov
xchg
fcomp
pmaxub
xchg
xor
cmps
int
xor
mov
mov
mov
jmp
dec
fucomi
cld
popa
jmp
outs
cld
ss
call
in
outs
sub
out
stos
cli
out
dec
push
mov
hlt
call
(bad)
scas
xor
imul
adc
pop
mov
xor
movs
icebp
mov
je
pop
pop
jle
test
test
jns
das
jle
pop
popf
call
clc
inc
adc
dec
mov
push
sbb
das
xor
pop
xchg
lea
idiv
gs
loope
inc
stos
lahf
aaa
pop
push
in
xchg
ds
stos
cmp
jmp
and
xor
loopne
cmp
ret
pushf
repnz
pop
test
std
and
sbb
lea
outs
adc
adc
mov
repz
or
retf
mov
sar
mov
test
pop
sti
jnp
inc
add
ror
or
or
mov
xor
xchg
fwait
pop
loopne
ss
cmp
sahf
inc
lds
in
mov
lods
or
push
leave
lahf
int3
push
or
sub
xor
retf
cdq
imul
jl
bound
outs
dec
fnsave
stc
sbb
in
dec
out
xor
dec
jb
idiv
cli
adc
and
adc
cmps
out
mov
dec
mov
dec
call
out
mov
pop
mov
lock
and
lds
or
addps
mov
mov
scas
dec
and
mov
inc
movntps
and
(bad)
dec
sub
mov
xor
and
(bad)
cli
mov
xchg
inc
pop
std
jae
iret
fs
push
pop
out
xor
mov
add
mul
mov
je
ldmxcsr
cwde
and
fsubr
test
es
mov
sbb
pop
mov
mov
fbstp
mov
(bad)
adc
aam
shl
retf
xchg
jae
movs
icebp
sbb
mov
lock
xchg
repnz
ret
adc
xchg
ror
cmps
mov
ss
sub
mov
inc
stos
fst
int3
aas
ds
jge
add
je
or
mov
mov
xor
push
stos
sbb
cmps
add
dec
out
mov
imul
sahf
into
shr
mov
fsubrp
mov
push
out
inc
lods
in
sbb
xor
jmp
push
lods
out
mov
shl
xchg
fdiv
js
jge
fadd
aaa
mov
cwde
jp
lea
jle
add
div
ret
xchg
mov
mov
xchg
xor
push
xchg
scas
cmps
cmps
mov
mov
shl
nop
or
jl
pushf
daa
sbb
in
and
aam
or
and
mov
jle
xchg
or
pop
(bad)
test
sub
test
sub
pop
clc
addr16
retf
inc
je
aam
sub
std
cmc
push
sbb
push
pop
retf
int
arpl
pusha
sub
retf
xor
dec
or
mul
sub
cmp
jl
ins
sub
and
add
mov
out
pop
push
jne
test
mov
(bad)
aaa
retf
test
sbb
(bad)
add
sub
dec
cmp
pop
add
jmp
(bad)
out
xchg
ss
cmp
push
pusha
adc
cmp
xor
shl
(bad)
imul
pop
(bad)
jl
mov
xor
(bad)
adc
arpl
xchg
mov
dec
sahf
ds
(bad)
and
mov
cld
or
es
lods
ret
imul
loop
pushf
xor
push
jmp
mov
xchg
loopne
into
scas
mov
and
lea
test
std
jbe
mov
ds
loop
dec
cli
xor
loop
pop
jae
jae
test
mov
sub
outs
popf
es
mov
cmp
mov
outs
inc
leave
xchg
test
inc
and
jg
cld
xor
je
xchg
push
xchg
psllw
test
mov
outs
mov
aad
xchg
ds
mov
push
lock
adc
call
adc
pushf
dec
sub
mov
push
push
cdq
xchg
ins
sub
xchg
js
daa
(bad)
cdq
xchg
push
sti
dec
sub
jle
(bad)
(bad)
xor
push
pop
and
or
cld
(bad)
add
cli
jbe
push
mov
add
fisttp
or
adc
retf
sbb
fstp
int3
inc
rol
inc
xor
imul
adc
sub
test
popf
push
xchg
bound
mov
div
loope
out
pop
ror
lea
scas
popa
cld
retf
sbb
mov
xchg
adc
adc
or
sbb
push
ret
loopne
call
mov
lock
imul
loop
sbb
rcr
into
sbb
inc
sub
je
mov
add
jae
inc
shl
icebp
pop
shl
jg
mov
ins
dec
jne
mov
call
(bad)
xor
rcr
jmp
sbb
fwait
jp
test
jg
movs
das
pop
jno
adc
mov
pop
stos
inc
pop
jne
lods
or
pop
xchg
jge
in
fst
mov
dec
ss
out
movs
add
sub
sub
dec
push
rcl
les
clc
pop
ss
fiadd
in
int3
fisttp
sub
iret
lahf
push
or
ret
push
xchg
loop
inc
aas
push
adc
add
fs
hlt
shr
or
ficom
lods
fisub
stc
cdq
jge
push
ss
stc
xchg
sbb
(bad)
scas
pop
push
ss
mov
ins
outs
xchg
sbb
jp
push
(bad)
(bad)
dec
mov
imul
pop
inc
sar
mov
xchg
or
or
dec
cmp
sub
sub
pusha
test
cmp
mov
rol
or
and
xchg
xchg
and
loop
daa
ret
addr16
outs
jle
ds
fs
sub
inc
(bad)
out
jp
cdq
daa
cmp
sahf
stos
pop
loop
sbb
test
pop
fsubrp
mov
push
inc
or
or
shl
neg
mov
mov
(bad)
iret
or
pop
lock
cmp
in
mov
aam
push
xor
mov
scas
std
or
mov
mov
xlat
and
xor
jmp
mov
xchg
lods
cwde
test
popf
xchg
sub
pop
dec
pop
stos
xchg
arpl
jns
outs
dec
pop
jb
sahf
clc
mov
nop
scas
inc
rol
and
pop
scas
xchg
mov
loopne
xlat
(bad)
loopne
mov
push
mov
dec
jle
std
add
(bad)
fistp
in
xor
jno
dec
cld
sbb
lahf
pop
fld
stos
xchg
sub
mov
xchg
inc
movs
call
xor
outs
pushf
xchg
cdq
cli
cmp
jg
bound
loop
(bad)
push
cwde
jg
pop
cmp
stos
jns
xchg
mov
out
fwait
out
in
inc
retf
mov
(bad)
clc
(bad)
sub
adc
pop
add
jns
(bad)
sub
pop
aas
sub
sbb
icebp
test
sub
push
mov
and
mov
push
mov
loop
out
sti
ss
sub
add
push
xor
ret
xor
(bad)
div
fisub
dec
retf
pusha
ds
(bad)
shl
add
out
jb
mov
gs
push
mov
por
mov
cmp
sar
dec
loope
add
mov
mov
cmp
lds
das
aam
bound
cmp
add
aad
adc
movs
sbb
sub
dec
subps
cwde
xor
jno
xchg
xor
mov
xor
xor
mov
push
fnstcw
jmp
cmp
xchg
fadd
test
pop
inc
or
(bad)
icebp
pop
mov
sub
dec
jmp
inc
jnp
jb
je
sub
sbb
aam
push
push
inc
dec
(bad)
or
fimul
pop
xor
hlt
adc
push
sbb
push
xchg
daa
pop
pop
in
mov
xchg
or
ret
rol
pushf
xchg
jle
cld
shl
cmp
adc
ret
cmp
mov
add
into
inc
and
add
outs
xchg
cmp
push
mov
shl
cmp
inc
mov
daa
loope
and
fstp
(bad)
out
test
ror
mov
dec
cli
aaa
loopne
push
xchg
inc
pushf
adc
ins
lds
test
adc
sbb
je
sbb
dec
(bad)
cmp
in
ja
pop
push
sbb
and
dec
stos
es
out
out
scas
push
int
mov
cwde
mov
push
mov
cmp
jecxz
inc
idiv
repz
cmp
dec
sbb
jge
imul
jle
xchg
xchg
fmulp
int3
sub
lods
mov
push
adc
jnp
pop
(bad)
ss
or
loope
pop
xchg
imul
mov
mov
add
stc
nop
(bad)
nop
popf
rol
and
(bad)
retf
sbb
dec
dec
fisubr
jmp
sub
out
aad
inc
dec
out
addr16
icebp
mov
loope
adc
sar
pop
cmp
xor
xor
dec
xchg
adc
les
add
cld
jle
inc
setbe
mov
jmp
loopne
sub
ret
mov
adc
cmc
loop
aaa
cmps
cmp
push
mov
mov
retf
or
movs
mov
mov
imul
outs
and
outs
sbb
(bad)
jns
outs
ins
(bad)
cmc
aad
push
std
sar
(bad)
sar
pop
fldenv
aas
pop
call
pop
js
push
mov
xor
sbb
dec
add
mov
jae
cmps
mov
les
jb
add
mov
adc
lds
jecxz
js
adc
cdq
jl
ja
push
xchg
xchg
xlat
retf
iret
mov
std
mov
dec
pop
clc
pop
cmp
lock
in
iret
(bad)
(bad)
cwde
dec
mov
mov
ja
icebp
movq
aaa
stc
push
dec
ret
mov
xchg
movs
dec
inc
xor
pop
sti
dec
jb
fdivr
stc
sub
es
je
test
push
std
std
sar
mov
or
jge
std
push
lods
test
fnstsw
xchg
jp
adc
div
jo
pop
cdq
repnz
aas
or
sbb
ja
in
jmp
mov
sbb
mov
add
pop
add
push
xchg
fs
add
pop
jne
push
jbe
(bad)
push
adc
push
stc
loope
test
xor
and
aas
fwait
xchg
retf
push
lock
leave
dec
xor
push
push
push
adc
in
(bad)
jecxz
cmps
jle
popa
shr
cwde
or
sbb
or
and
mov
data16
es
dec
cmp
and
fs
cmp
into
arpl
pop
or
inc
aas
or
idiv
mov
je
or
pop
inc
into
retf
add
das
ins
mov
out
mov
mov
pop
fisubr
xchg
ins
(bad)
addr16
shl
sbb
sub
or
jmp
jle
jb
jns
out
or
daa
fldz
ret
xor
arpl
lods
pop
cdq
(bad)
xchg
pop
fs
inc
in
jl
dec
mov
lds
jne
mov
adc
lds
xchg
cmp
test
das
es
xchg
sub
imul
xchg
icebp
xchg
adc
xor
test
mov
push
loop
daa
sahf
enter
sub
jg
out
push
sub
shl
dec
(bad)
mov
jge
mov
dec
dec
repz
cmps
(bad)
push
popf
gs
jb
dec
enter
retf
loope
adc
jae
imul
mov
pusha
jae
test
(bad)
dec
sbb
inc
aas
mov
adc
xor
mov
movs
data16
outs
lock
mov
xchg
js
(bad)
pcmpeqw
and
mov
add
jl
xlat
in
mov
popf
or
(bad)
out
rcl
lahf
jecxz
add
outs
jp
pop
pop
(bad)
(bad)
hlt
aam
in
(bad)
fmul
test
dec
xor
repnz
stos
and
dec
push
inc
adc
fild
xchg
pop
jb
mov
mov
movs
xchg
mov
cmp
pop
or
cmp
fidiv
dec
(bad)
mov
fild
mov
dec
cld
adc
das
int
test
xchg
dec
dec
mov
inc
adc
mov
mov
call
jbe
and
clc
cmp
inc
jg
pushf
scas
(bad)
xor
xchg
pop
dec
dec
xor
adc
dec
inc
cld
in
scas
outs
xor
push
inc
(bad)
in
sbb
cs
aad
sub
mov
mov
push
scas
imul
mov
pop
ret
test
push
std
mov
mov
mov
cli
pop
mov
in
add
and
in
or
add
fmul
push
and
leave
sbb
pop
std
cmps
or
(bad)
sar
fst
nop
inc
jl
push
pop
ret
jb
outs
or
clc
outs
les
ds
sub
sub
outs
sbb
jne
push
fs
lea
xchg
mov
jno
je
gs
fld
imul
mov
mov
push
pop
scas
mov
pusha
outs
out
sbb
fist
out
mov
xor
xlat
cmp
es
cmp
add
test
add
cmp
loopne
jl
adc
mov
stos
ja
inc
push
dec
call
cdq
(bad)
out
and
push
fsub
mov
xchg
sub
mov
cmps
or
adc
aad
pop
mov
shl
mov
and
pusha
and
xchg
shl
jmp
mov
mov
sbb
neg
pop
dec
inc
sbb
cld
ret
repz
(bad)
adc
pop
xchg
out
dec
mov
lds
sub
dec
add
xchg
(bad)
jp
ss
or
add
jb
sahf
xchg
shl
mov
mov
push
cwde
lods
and
dec
dec
iret
xchg
fisubr
lahf
xchg
and
sahf
xchg
or
out
cmp
push
adc
pushf
push
dec
mov
push
dec
dec
adc
stc
(bad)
rcr
movs
mov
mov
dec
scas
xchg
jg
xchg
inc
das
xor
call
dec
(bad)
pusha
push
cwde
sub
jecxz
adc
bound
mov
mov
out
(bad)
mov
test
and
(bad)
dec
popf
repnz
xor
jo
shl
sar
add
cmps
fyl2x
jp
out
ret
mov
cmp
push
add
test
dec
mov
mov
sbb
sbb
sbb
loopne
lea
test
retf
js
mov
add
dec
inc
js
frstor
inc
mov
fnsave
xchg
cmc
add
jo
push
clc
or
jmp
div
sub
fst
int3
(bad)
aas
ret
xchg
dec
daa
int
les
push
jae
dec
pusha
cmp
in
jmp
sbb
shr
add
cld
mul
rol
bound
adc
(bad)
jmp
push
xor
call
lods
js
mov
pop
sbb
pop
cmp
mov
cmp
sbb
rol
dec
shl
xchg
and
inc
jne
adc
jo
xchg
xchg
fcomp
inc
popa
xor
retf
arpl
outs
cmp
jmp
call
ja
mov
sub
xchg
pop
mov
add
arpl
mov
sti
mov
sbb
xchg
in
repz
dec
(bad)
js
xor
cs
iret
or
(bad)
cmc
(bad)
cwde
iret
xchg
(bad)
mov
fld
sbb
stos
inc
clc
fwait
add
aas
cmp
and
div
aas
xor
add
not
inc
enter
fist
xchg
out
popa
mov
(bad)
sub
mov
or
jle
jnp
pop
mov
daa
shl
outs
or
mov
inc
sbb
mov
xor
stos
pop
imul
call
push
inc
aam
movs
xchg
(bad)
das
repz
xor
into
cmp
data16
arpl
push
push
rcr
cmps
imul
fstp
adc
fistp
or
jmp
jl
mov
pop
call
push
mov
aaa
mov
fnsave
jno
loopne
pop
ror
leave
cmp
cmp
push
mov
xor
and
xor
add
repnz
(bad)
out
gs
cwde
cwde
cmp
das
adc
adc
mov
or
cld
cmp
lds
js
idiv
mov
xchg
sub
arpl
sbb
jg
cmp
jo
jge
call
hlt
jp
int
xor
in
xor
dec
adc
xor
push
xchg
aam
popf
mov
popa
scas
or
cmps
xor
jmp
pop
add
pushf
dec
stos
xor
int3
movs
data16
cli
or
imul
cmps
ins
arpl
xor
ins
ins
or
xchg
sahf
jne
dec
cmc
sbb
cdq
sub
test
mov
fsubr
pop
ret
loop
pusha
sub
xlat
gs
jnp
mov
sub
push
call
jle
aaa
or
jnp
out
or
jl
scas
lea
mov
push
adc
mov
fdivr
push
clc
in
pop
sub
xor
mov
call
push
imul
lods
jecxz
cmps
mov
(bad)
fld
(bad)
mov
lahf
or
inc
push
xchg
mov
mov
sbb
xchg
sbb
xchg
pop
lods
cwde
push
shl
leave
and
xor
ficomp
add
pop
push
ja
sbb
frstor
push
mov
pop
adc
pop
and
push
pusha
mov
imul
(bad)
fistp
std
pushf
sub
mov
mov
and
adc
adc
cmps
arpl
pop
mov
ds
mov
sbb
jecxz
(bad)
loope
sub
popa
adc
int
jnp
int3
mov
rcl
(bad)
mov
in
jbe
ret
pusha
pusha
dec
enter
mov
mov
xor
pop
mov
sub
das
push
call
sub
inc
xchg
daa
add
test
sbb
dec
inc
mov
int
dec
in
movs
xor
xchg
dec
cmp
mov
mov
aas
pop
jno
push
sbb
repnz
js
mov
cmp
fnsave
mov
mov
ret
call
or
pop
pop
js
fnstenv
xor
fs
pop
mov
adc
dec
push
(bad)
je
int
ror
mov
pop
jb
in
test
rol
pop
dec
adc
(bad)
push
iret
stos
nop
or
adc
mov
aad
fistp
popf
or
xchg
cmp
stc
mov
or
shl
mov
sar
mov
test
inc
fnsave
les
movaps
sar
(bad)
dec
sub
lds
mov
xor
push
jecxz
mov
mov
sub
test
mov
jo
iret
add
sub
leave
inc
fcmovu
fdiv
call
push
inc
pushf
cs
xchg
push
or
dec
push
pop
idiv
vpaddq
xchg
push
rol
add
repz
pusha
jns
call
dec
xor
jle
jl
adc
ret
bswap
pushf
cld
sbb
cmc
sahf
ja
add
mov
mov
dec
and
(bad)
scas
cdq
mov
test
ret
mov
and
jle
pop
cwde
les
scas
ss
int3
cmps
push
cdq
lods
lock
rol
sti
loop
lods
movs
mov
movs
sub
pop
daa
jne
and
aas
call
push
loopne
das
xchg
xor
fcmovbe
mov
mov
leave
ret
add
aad
fild
pop
mov
sub
shl
inc
sbb
jno
(bad)
or
in
or
add
div
les
je
inc
(bad)
arpl
push
and
out
or
call
inc
xchg
stc
and
jbe
out
test
push
xchg
arpl
push
dec
pop
add
push
add
loope
icebp
xchg
mov
daa
(bad)
nop
push
and
daa
mov
call
jp
push
pop
mov
stc
inc
pop
inc
pop
pop
stos
jne
jbe
div
test
sbb
or
stos
fs
xlat
cmp
dec
jecxz
ja
cmp
cs
xor
inc
sbb
lea
scas
inc
in
(bad)
xor
aad
push
push
inc
movs
ret
jo
push
out
xor
imul
loop
sub
push
int
pop
push
retf
adc
dec
mov
pop
fmul
bound
dec
fisub
cdq
hlt
in
adc
cld
sahf
jne
out
int3
std
mov
gs
popf
push
jg
inc
and
stos
mov
jmp
fdivr
fisubr
test
fcomi
push
cmp
(bad)
(bad)
jae
iret
outs
stc
nop
adc
dec
out
out
jmp
outs
fstp
jbe
aaa
outs
cmp
mov
ss
in
neg
cmp
inc
(bad)
aas
mov
sub
je
xlat
inc
loop
sbb
pmovmskb
pop
mov
ss
push
or
mov
mov
push
jns
ja
inc
mov
mov
imul
clc
push
xchg
mov
jp
mov
das
dec
mov
ret
xor
or
mov
jo
add
add
aam
call
stos
inc
mov
out
daa
clc
jbe
cli
inc
and
sub
mov
popf
add
cmp
imul
(bad)
xchg
mov
add
loop
int
sbb
fs
jae
adc
xor
jae
mov
cs
push
sbb
(bad)
push
inc
(bad)
inc
gs
xlat
xchg
jmp
mov
inc
stc
cmps
jmp
xlat
jns
pop
aad
lea
fcomp
push
pushf
nop
cdq
and
mov
arpl
into
call
push
inc
fs
stos
xchg
jmp
popf
daa
sbb
pop
add
call
int
mov
or
or
pop
inc
test
jge
or
(bad)
xchg
push
adc
ss
or
jp
test
sbb
push
add
inc
lds
nop
sub
adc
xor
scas
sbb
fcmovnu
fld
test
xor
xchg
daa
add
iret
test
push
push
or
push
mov
fwait
and
or
stos
pop
shl
push
dec
arpl
es
mov
or
mov
adc
sub
test
das
xor
lods
daa
mov
addr16
mov
xchg
jl
into
xor
fdivr
push
pop
xchg
into
push
popa
add
jecxz
sub
sbb
pop
aam
sub
ret
ins
mov
bound
lea
sub
fiadd
pop
and
push
cmp
bound
je
movs
les
and
mov
mov
mov
push
mov
aas
sbb
adc
xchg
pop
adc
test
xlat
cld
push
or
test
or
ds
and
test
add
cmps
push
sbb
js
push
in
jnp
cs
push
cmp
mov
lds
lahf
enter
or
sbb
fld
sub
and
call
mov
pop
(bad)
in
out
loop
scas
adc
or
mov
test
jbe
jb
and
mov
dec
cmp
ret
jmp
dec
loope
xchg
in
push
(bad)
ror
push
sbb
pop
dec
xchg
cmp
in
or
or
mov
mov
mov
scas
or
test
lods
retf
xchg
xchg
add
mov
inc
pop
addr16
lods
je
pop
cmp
in
movs
inc
mov
test
mov
cwde
scas
aad
jno
jnp
jb
push
or
outs
jbe
add
xchg
in
icebp
pusha
inc
inc
leave
add
enter
call
out
es
and
imul
xchg
stos
adc
inc
movs
fst
xchg
wbinvd
and
ds
adc
dec
test
gs
cmp
pop
xchg
cwde
aad
(bad)
loope
imul
jmp
cmp
or
fmulp
aad
enter
pop
or
sbb
cmp
retf
test
in
xchg
aam
inc
xor
sbb
mov
adc
and
and
pop
pop
jmp
mov
jp
xchg
retf
add
or
push
pop
enter
int
xor
xchg
sub
shr
jle
push
add
cmc
jecxz
lock
loopne
mov
mov
xor
test
sbb
xchg
ds
pop
xchg
pop
mov
pop
dec
int3
sbb
sub
aad
mov
xchg
sub
mov
iret
push
pushf
sub
nop
xchg
dec
cmp
(bad)
sub
out
push
outs
(bad)
and
or
pop
iret
inc
cmp
mov
pusha
and
mov
mov
sub
and
pop
cs
movs
ret
jns
add
mov
and
sub
je
push
out
push
xor
fnstsw
jecxz
push
xchg
sub
mov
push
ret
js
retf
cmp
fcomp
sbb
adc
in
fcomp
jno
xor
sbb
adc
pop
xor
mov
shl
retf
popa
mov
ds
dec
ficom
icebp
mov
(bad)
or
cmp
addr16
int
outs
mov
jge
jae
jmp
call
pusha
pop
xchg
sub
inc
push
repz
ret
mov
loope
sbb
int
enter
leave
pop
fimul
sub
mov
adc
dec
bswap
dec
daa
push
fdivp
jmp
inc
out
movs
fidivr
jge
xchg
xor
xchg
fnsave
add
push
pusha
fimul
cmp
fimul
in
adc
push
(bad)
mov
mov
lock
xlat
mov
mov
lahf
rcl
ss
jge
mov
not
dec
es
cmp
sub
inc
dec
mov
cmps
addr16
(bad)
dec
aad
pop
addr16
repz
push
mov
jo
call
add
push
stc
pop
pop
xchg
aas
fisub
adc
push
sbb
cmp
fistp
movs
into
inc
mov
push
sub
mov
xor
push
es
int
shr
push
pop
call
out
mov
jbe
mov
xor
fwait
push
test
daa
out
(bad)
and
outs
maxpd
jno
shr
in
fld
jbe
xchg
dec
inc
or
lahf
in
jmp
push
push
loope
out
adc
iret
mov
gs
fist
xor
mov
xor
test
mov
gs
movs
push
mov
and
xor
(bad)
xchg
adc
inc
adc
adc
clc
xor
lea
(bad)
out
cmp
mov
loop
mov
sub
xor
ja
xchg
xor
sub
shr
jmp
lahf
mov
xchg
sub
cwde
jns
mov
outs
sub
mov
test
and
push
xchg
push
adc
das
cwde
mov
jmp
add
cli
pop
mov
add
or
js
hlt
rol
pop
fcom
retf
xchg
mov
and
mov
or
aas
int
and
mov
fstp
je
push
inc
xlat
in
lahf
xor
push
mul
mov
xchg
icebp
mov
inc
inc
adc
xchg
pop
jae
ret
fsubr
mov
inc
xor
cwde
fyl2x
repnz
aam
pop
xor
cmp
cmp
lea
pop
inc
pop
and
dec
pop
inc
(bad)
sub
dec
lahf
shl
test
fdiv
call
outs
jmp
inc
jbe
cmp
mov
test
pop
dec
cs
jle
or
lea
dec
imul
loopne
xchg
inc
or
adc
call
sahf
xchg
lods
ficomp
sti
and
sub
lods
push
push
repz
mov
mov
jp
ss
dec
push
xchg
cwde
mov
fdiv
mov
mov
repz
inc
fcom
or
neg
rcr
inc
test
std
pusha
add
cmovs
dec
sub
call
(bad)
icebp
mov
sbb
clc
sahf
mov
jle
or
ret
(bad)
outs
dec
dec
int
sti
or
or
ret
sub
cmc
nop
sub
ins
and
sub
je
xchg
es
sub
adc
out
and
fsubr
pop
mov
por
and
out
or
lock
popf
(bad)
adc
jbe
pusha
mov
cld
out
pop
repz
pop
mov
stos
jb
pop
inc
popw
es
mov
inc
mov
out
scas
jno
adc
or
pop
adc
repnz
add
push
call
mov
es
dec
xchg
neg
jmp
sub
arpl
into
sub
cmp
femms
sub
adc
push
stc
add
out
addr16
mov
xchg
lahf
inc
adc
movs
fidivr
mov
fnstsw
jge
adc
je
sub
cli
pop
mov
push
or
cmps
pushf
and
mov
out
(bad)
xchg
outs
repnz
cmps
sub
cmps
mov
sub
sbb
adc
jmp
(bad)
lea
dec
xor
hlt
cmp
jno
shl
push
sbb
mov
pop
fistp
imul
pop
sub
iret
or
jle
fadd
jnp
inc
(bad)
pop
movs
dec
mov
imul
cmp
daa
adc
mov
lds
mov
adc
popa
sbb
xchg
lock
pop
hlt
mov
add
mov
mov
add
sbb
jmp
in
xchg
cmc
sbb
in
outs
mov
scas
test
cdq
sub
or
neg
bound
iret
push
cmp
icebp
xchg
js
mov
(bad)
mov
mov
je
xchg
scas
jge
enter
push
mov
outs
push
fs
sub
lahf
out
xchg
add
jmp
push
cwde
test
stos
cmps
and
out
mov
ret
inc
adc
and
xor
aam
fs
mov
xchg
and
cld
mov
push
frstor
leave
jmp
(bad)
ins
adc
sbb
xchg
add
shl
test
cmp
fwait
addr16
mov
mul
int
jae
add
jae
xor
sar
jmp
mov
sbb
repnz
adc
mov
pop
push
leave
outs
xchg
scas
in
imul
aaa
ds
dec
retf
push
inc
pop
cmp
je
lahf
mul
out
ins
xor
cmp
inc
gs
(bad)
push
inc
call
adc
dec
mov
sub
je
ror
sbb
(bad)
repz
add
arpl
sub
xlat
mov
xchg
imul
sub
out
fwait
aad
xor
jmp
rol
daa
and
push
mov
and
dec
mov
mov
and
cmc
sbb
add
lea
ret
xor
inc
xchg
or
sub
gs
mov
pop
cmps
mov
mov
sub
lds
gs
sahf
jbe
test
test
push
push
repz
fld
pop
(bad)
ret
cmp
nop
jne
mov
add
(bad)
xchg
test
in
adc
inc
xchg
mov
add
lods
jmp
dec
cmp
fnstsw
sub
int
lock
lock
fs
imul
adc
dec
popf
inc
out
imul
pop
mov
in
adc
stos
push
or
sbb
pop
adc
cmc
out
aad
sbb
stos
lds
xchg
push
add
fdiv
cmp
adc
imul
xlat
push
jmp
ret
xchg
mov
push
inc
jmp
push
imul
scas
dec
add
push
pshufw
scas
adc
jmp
cmc
repz
cmp
mov
cmp
movs
push
jne
push
dec
and
dec
rcr
ins
lock
gs
std
lds
mov
lds
adc
mov
or
mov
gs
jnp
dec
jnp
aad
push
pop
test
sbb
jge
jmp
bound
dec
dec
(bad)
jecxz
push
div
ret
std
mov
popa
inc
sbb
ror
xor
shr
repnz
sbb
jp
mov
pop
push
jmp
mov
cmp
fild
iret
mov
pop
ror
loop
pop
or
lds
mov
cdq
and
add
dec
adc
shl
xor
cmps
inc
dec
add
loopne
das
(bad)
adc
or
adc
jo
(bad)
adc
push
(bad)
cdq
pop
lea
rcr
push
sbb
mov
push
mov
aas
cs
inc
pop
jl
in
push
imul
ficom
add
cdq
test
mov
stos
inc
jbe
dec
std
push
push
add
xlat
pop
mov
mov
in
pushf
add
inc
movs
xor
inc
jae
mov
inc
cs
xchg
pop
out
pop
mov
cmp
mov
outs
fisubr
call
inc
and
push
arpl
dec
fidivr
xchg
in
push
jle
mov
xor
sub
sbb
or
and
mov
jno
(bad)
pusha
rcl
enter
ja
jae
mul
idiv
xchg
inc
xor
xor
pusha
push
test
inc
pop
push
xlat
das
and
sub
xor
aam
(bad)
push
shl
(bad)
retf
mov
push
fldcw
pop
xchg
dec
es
in
in
pop
sbb
cmp
jb
imul
jmp
stos
(bad)
jecxz
ss
mov
stos
xor
outs
xchg
inc
inc
pop
scas
pop
or
adc
movs
xor
jb
lea
mov
sbb
jae
fistp
xor
xchg
pop
stos
jg
jp
les
push
fld
xchg
sub
bound
out
outs
mov
gs
cmp
add
ja
mov
ss
inc
imul
fdivr
jg
icebp
call
in
jbe
(bad)
loopne
and
shl
jae
aad
aaa
push
in
bound
hlt
xchg
pusha
inc
lds
aad
pop
inc
scas
and
(bad)
js
and
sbb
push
addr16
push
adc
imul
and
jae
or
mov
xor
mov
call
xchg
aaa
das
stos
pop
ss
cmp
jmp
pop
ror
shl
lods
scas
push
clc
cmp
mov
in
cmp
aaa
popa
jne
jno
cmps
test
stos
inc
test
add
push
mov
sub
mov
dec
cld
cmp
and
push
imul
sar
pop
or
xchg
push
(bad)
push
movs
in
dec
int
lods
loop
add
mov
add
test
ret
jmp
or
in
cwde
nop
pop
lds
sub
mov
xor
jae
sub
jecxz
cmp
loope
in
dec
int3
dec
push
push
and
hlt
(bad)
push
shl
(bad)
scas
aas
and
cld
sub
sbb
push
jo
inc
push
jbe
(bad)
neg
xor
ret
into
pop
fadd
ror
stos
ins
in
cmps
repz
fstp
cmp
mov
or
leave
mov
ror
lods
push
push
xchg
cmp
jae
jl
pushf
add
push
pop
ja
out
stos
js
or
mov
inc
jle
inc
sbb
sahf
inc
nop
cmp
icebp
xchg
adc
jmp
sub
hlt
repnz
sbb
popa
outs
xchg
hlt
sub
pop
cld
cs
(bad)
(bad)
aam
mov
lea
inc
ss
test
mov
push
fistp
cmp
mov
jg
int
cs
js
jmp
mov
enter
scas
retf
mov
movs
pop
jg
cmp
scas
mov
xchg
dec
sub
push
add
xlat
out
ds
push
mov
mov
jnp
xchg
mov
dec
push
add
xor
inc
dec
call
cmp
jmp
iret
mov
rol
(bad)
retf
int3
xchg
xchg
adc
xlat
push
pop
clc
cmp
loopne
call
lods
dec
add
ret
rol
ins
sahf
adc
pop
ds
mov
mov
mov
sbb
neg
cmp
scas
fcom
push
mov
cmps
loop
xor
call
cmp
mov
nop
inc
and
and
iret
(bad)
paddw
in
push
adc
imul
push
jae
cmp
inc
mov
loopne
sbb
cmp
(bad)
gs
lea
xchg
mov
and
mov
mov
xchg
jge
mov
mov
(bad)
jno
dec
push
dec
push
jbe
stos
in
add
in
sbb
mov
cmp
sti
fdiv
aad
push
popf
scas
and
push
add
mov
jmp
and
jne
not
mov
iret
fstp
inc
pusha
jg
stc
test
or
xor
repnz
jp
je
adc
cmp
neg
test
cmp
push
repz
fstp
dec
imul
lods
movs
movs
mov
cmp
mov
movs
xchg
out
sbb
jg
sbb
icebp
ss
mov
mov
adc
add
ret
adc
aaa
ja
shl
fisub
inc
jp
addr16
or
lds
inc
rcr
sub
adc
mov
aad
jmp
jmp
jp
adc
mov
and
add
mov
fnstsw
push
mov
scas
dec
call
add
int
rcr
in
lock
out
push
add
test
inc
pop
add
scas
dec
leave
fwait
movs
pop
in
and
push
leave
fisttp
lea
jnp
repz
rcr
pop
rol
out
pop
loop
ret
fistp
jmp
sbb
nop
add
cmp
cwde
mov
aas
je
ss
rcl
mov
push
test
ret
shl
adc
mov
pop
leave
adc
stos
outs
or
test
adc
fmul
scas
imul
mov
adc
mov
je
jb
enter
push
push
cmp
cmp
xor
int
out
sbb
pop
pop
shr
(bad)
sbb
shl
pusha
jo
pop
push
sub
fstp
outs
and
and
nop
in
or
mov
push
add
dec
mov
and
call
ficomp
push
xchg
inc
push
pop
scas
(bad)
fadd
sub
arpl
jge
in
ret
shl
mov
mov
push
push
jmp
icebp
xchg
fidivr
mov
mov
aas
arpl
les
stos
in
stc
je
mov
inc
ret
jecxz
ins
adc
xor
out
push
push
inc
sub
bound
inc
les
inc
adc
xchg
jno
nop
fwait
stos
mov
stos
xlat
aad
js
outs
sub
jo
mov
xor
inc
test
retf
movs
xor
push
aaa
cmp
pop
fcom
or
fiadd
imul
fisub
jnp
mov
iret
xchg
sbb
add
fcomi
scas
sbb
xor
pushf
lea
nop
mov
aad
sub
test
push
(bad)
std
mov
mov
dec
xchg
in
std
idiv
xchg
add
push
int3
or
fldcw
jmp
jmp
add
or
push
pop
bound
(bad)
addr16
mov
sbb
or
dec
(bad)
mov
push
jbe
popa
imul
dec
sbb
add
js
push
cmp
ds
gs
add
in
cmc
cmc
cmp
inc
int
jmp
xchg
fadd
ss
lods
jbe
(bad)
xor
dec
repnz
and
xchg
stos
xchg
cmp
call
lea
pop
and
es
mov
std
movs
out
cmc
gs
inc
mov
popa
sbb
rcl
repz
cld
xor
std
mov
adc
mov
pop
sub
jmp
mov
cdq
popf
mov
cmp
jno
and
add
ins
outs
and
pop
aaa
mov
(bad)
and
cmp
(bad)
in
aaa
jbe
mov
mov
into
mov
scas
jle
jb
into
mov
icebp
test
inc
mov
jb
fwait
ret
jmp
push
mov
dec
add
jg
cmp
xor
rol
(bad)
mov
scas
sub
jo
push
inc
mov
iret
movs
out
je
dec
mov
sub
mov
fadd
(bad)
and
sbb
xor
dec
repz
(bad)
stos
sbb
adc
call
mov
clc
push
fstp
sbb
pop
inc
cmps
test
test
inc
movs
clc
fwait
addr16
mov
fild
jae
call
sub
(bad)
xlat
add
scas
mov
nop
aas
clc
and
and
leave
push
mov
int3
and
jbe
adc
inc
(bad)
push
inc
mov
stc
imul
call
cmc
call
lahf
stos
mov
out
test
dec
add
jno
or
ins
bound
fsub
lea
inc
xor
jo
mov
loopne
pop
cli
fisub
inc
sub
push
arpl
dec
jns
repnz
jo
mov
sub
jg
mov
in
mov
mov
jge
jne
sbb
jl
addr16
ins
cmp
mov
mov
jb
dec
lds
call
popa
mov
xchg
mov
sbb
int3
push
push
push
int
xlat
sbb
mov
mov
ss
push
mov
inc
in
in
cmp
inc
sbb
cmp
jmp
fcmovnu
lahf
test
ins
sbb
dec
shr
sbb
mov
cdq
push
mov
int
repz
add
sub
inc
jo
cmps
mov
aam
(bad)
sar
cmps
(bad)
sbb
inc
jne
fidivr
mov
scas
mov
adc
mov
sti
jp
clc
cmp
push
sub
xor
imul
loop
jle
push
scas
test
rcr
xchg
and
fisub
inc
stc
addr16
clc
imul
movs
inc
or
push
inc
pop
add
ja
es
sbb
mov
jl
fdivr
sub
xchg
jns
mov
lods
xchg
call
jnp
adc
inc
or
push
aam
dec
inc
push
cmps
sahf
fwait
movs
cmp
dec
lock
jp
push
xchg
imul
mov
gs
cmp
adc
inc
inc
stos
mov
mov
mov
outs
aad
ficomp
jo
nop
ret
or
mov
ins
out
nop
movs
inc
aad
or
dec
and
int3
jl
stos
pop
jp
pusha
(bad)
in
addr16
sub
sub
dec
call
aam
addr16
push
movs
or
pop
ins
jmp
dec
popf
xchg
add
cmp
jecxz
inc
mov
or
mov
aam
stc
push
push
rcl
jnp
sbb
hlt
outs
push
sbb
add
cmp
and
test
mov
and
mov
loop
(bad)
and
les
jno
xor
mov
int
lea
(bad)
shr
sub
sub
cli
push
jg
inc
add
cmp
or
cmp
add
jne
push
(bad)
loopne
xorps
inc
and
sbb
(bad)
cmc
mov
mov
jo
and
loop
(bad)
pop
lahf
sbb
sbb
(bad)
repnz
xor
cmc
int
ror
mov
sti
clc
ss
xchg
adc
xchg
das
loope
scas
pop
inc
pop
xor
jae
xlat
enter
int
idiv
mov
iret
or
enter
sub
jne
xor
aaa
cmpxchg
sti
(bad)
mov
jg
or
lods
mov
mov
dec
mov
and
sbb
add
imul
or
push
and
cmp
ins
movs
jnp
cmp
xchg
scas
fwait
nop
pop
pop
add
mul
jb
xchg
(bad)
std
lods
lods
in
sub
je
xchg
adc
push
icebp
movs
adc
xor
jae
adc
xor
and
loope
(bad)
push
add
xchg
push
scas
rcl
imul
and
es
aas
push
rcl
stos
dec
stos
movs
or
jbe
ins
loopne
mov
test
mov
cli
loop
inc
dec
pop
adc
adc
xor
ins
mov
and
pop
outs
retf
retf
into
mov
jp
cs
cmp
test
pminub
and
xchg
inc
fwait
xlat
repnz
ds
(bad)
imul
into
or
(bad)
sub
mov
(bad)
and
fmul
xchg
fnstcw
jecxz
add
in
mov
in
jnp
inc
cmp
repnz
out
ror
or
outs
sub
pop
cmps
jmp
cmp
mov
cmp
test
scas
call
mov
stc
sar
clc
jno
mov
mov
xor
(bad)
mov
adc
stos
sub
or
stos
mov
out
dec
loop
rcl
pop
inc
inc
mov
push
xor
lods
lahf
and
dec
add
dec
mov
div
shl
pop
popa
xlat
push
lods
in
or
push
pop
cmp
and
push
mov
push
sub
xchg
sahf
stos
nop
adc
call
in
cs
sub
in
or
inc
out
pop
push
or
xchg
outs
cmp
cmovae
jg
dec
arpl
dec
xchg
adc
inc
mov
adc
or
push
mov
or
pop
dec
xchg
call
xcrypt-ofb
cmps
imul
mov
mov
ror
popa
test
call
rcr
popf
aad
addr16
cdq
xchg
and
cmp
mov
xchg
in
out
push
sbb
jbe
inc
inc
jle
dec
xchg
cdq
mov
enter
in
mov
rcr
inc
sbb
push
sub
and
test
jmp
data16
cmp
imul
mov
sar
addr16
aaa
leave
sub
(bad)
outs
popa
out
scas
pop
and
or
fs
xor
jne
pop
jle
and
add
out
into
sub
retf
pop
jno
stc
cmps
pop
iret
cmp
mov
jno
popa
push
imul
out
stos
ins
xchg
add
jecxz
cmc
loopne
jle
jp
test
mov
cmp
or
test
fwait
add
jp
xor
mov
scas
ja
fwait
test
shl
push
adc
xchg
push
cmp
lods
test
sub
mov
jne
mov
aas
lods
dec
mov
add
js
mov
adc
fild
add
pushf
outs
in
pushf
fnop
mov
xor
add
shl
lods
stos
xchg
push
in
push
xchg
jne
nop
ss
rcl
pop
or
movs
jle
adc
cmp
leave
sbb
dec
clc
or
cmps
inc
(bad)
mov
data16
rcl
into
call
sub
sbb
test
xchg
cmc
sub
adc
jo
push
addr16
xor
pop
jge
bound
adc
imul
jns
shl
sar
or
mov
ret
lods
mov
loop
cmp
dec
xchg
sti
cmps
sub
inc
nop
sti
(bad)
(bad)
adc
pop
jae
popa
mov
in
sub
add
mov
jle
sub
mov
ret
mul
push
loope
ficomp
or
(bad)
pop
cwde
xor
call
fs
jle
lds
push
popf
loope
mov
movsx
jmp
cmp
inc
fcom
sub
sub
pop
into
icebp
jmp
mov
mov
mov
pop
retf
or
push
xchg
or
popf
pop
int
fs
dec
aas
mov
push
mov
lock
pop
(bad)
push
in
sbb
nop
call
or
pop
out
fldenv
add
out
stos
xor
pop
push
iret
pop
sbb
cmp
hlt
aaa
cmp
imul
loopne
repnz
(bad)
(bad)
mov
sti
push
adc
add
and
push
ret
retf
mov
repz
lds
std
jns
mov
out
hlt
loop
sub
lods
(bad)
bound
lea
adc
adc
call
jl
cmc
mov
xchg
or
mov
(bad)
push
icebp
push
or
sbb
outs
cmp
mov
loope
retf
push
inc
test
sub
xchg
pop
dec
bswap
push
push
xchg
les
push
dec
int3
imul
mov
repnz
pop
ins
add
out
cdq
mov
inc
mov
and
xchg
mov
mov
push
inc
xchg
jp
and
enter
sub
(bad)
popa
pop
jge
enter
adc
je
xor
test
je
cmp
jg
and
outs
arpl
or
xchg
push
lods
jo
in
test
dec
push
pop
sub
jmp
pop
adc
jno
lahf
cli
cwde
fdivrp
popa
mov
mov
xchg
bound
pop
push
dec
gs
mov
mov
lods
jb
out
push
test
imul
sbb
test
test
xchg
mov
inc
sub
ins
xor
and
jae
dec
jo
fs
(bad)
xchg
fsub
and
test
xchg
xchg
inc
shr
add
mov
fistp
xchg
cmp
les
mov
shl
loopne
jg
push
xchg
adc
inc
or
pminsw
retf
ffreep
jnp
and
imul
mov
mov
call
shl
stc
int3
aas
cmc
push
and
cdq
jle
(bad)
cld
xchg
stos
sbb
aad
mov
out
mov
xor
cdq
fcomp
adc
movs
int3
cmp
das
dec
aad
nop
scas
cmp
cs
adc
inc
les
sbb
retf
nop
in
es
sti
jle
xor
fsubr
pop
daa
push
lahf
or
div
sti
mov
add
xchg
xor
xor
je
cmp
cdq
fdiv
mov
pop
jle
pop
ror
outs
mov
xchg
test
ret
stos
sbb
push
xor
cmps
adc
hlt
mov
xor
adc
int3
iret
retf
push
sbb
call
cli
push
stc
cmps
dec
mov
sub
test
fdiv
mov
cdq
stos
into
jmp
ret
(bad)
dec
hlt
iret
out
sub
mov
jo
popf
dec
xchg
xchg
rcl
outs
(bad)
ror
test
call
cdq
out
maskmovq
inc
and
mov
inc
inc
cmp
clc
js
shr
gs
fcomp
mov
jnp
adc
test
and
mov
je
arpl
jp
fadd
cmp
retf
mov
lods
mov
xchg
jg
dec
repnz
ror
arpl
jnp
retf
mov
leave
cli
arpl
and
mov
shl
(bad)
mov
call
sub
dec
out
pop
mov
out
pop
aas
jmp
pushf
cmp
shl
mov
mov
pop
mov
mov
and
xchg
push
aaa
or
adc
push
xchg
jns
sbb
das
ins
adc
call
mov
mov
fwait
aaa
jnp
ins
and
add
xchg
mov
pop
jge
mov
and
pop
sub
test
lods
icebp
xor
mov
out
out
lods
pop
jge
and
repz
or
(bad)
das
sub
jmp
fs
(bad)
cld
lock
in
stc
adc
cdq
enter
(bad)
movs
inc
leave
js
sub
dec
or
pop
ret
mov
fs
cmp
mov
shl
rcr
inc
int
ror
gs
pop
shl
xor
mov
push
dec
retf
jecxz
outs
pop
jmp
pop
sbb
adc
jae
pusha
mov
xor
fcom
adc
mov
push
xor
jb
ret
cmp
mov
add
mov
movups
ffree
cmc
(bad)
cmp
push
mov
(bad)
lahf
shl
push
leave
adc
dec
mov
mov
dec
cmp
add
mov
cmc
std
or
jnp
outs
sub
fsubr
ds
inc
mov
cmps
mov
push
add
imul
push
mov
mov
in
dec
daa
sub
jmp
sub
sbb
sbb
stc
cdq
(bad)
je
xchg
addr16
adc
mov
aaa
push
mov
sub
scas
mov
cld
jg
cdq
popa
xor
ins
mov
int
mov
push
test
add
add
ffreep
mov
pop
dec
dec
rol
or
cmp
into
(bad)
rol
jmp
xor
ja
outs
or
mov
push
jmp
sti
and
inc
jg
aaa
cmp
inc
xchg
fwait
aad
or
(bad)
sbb
pop
out
loopne
imul
mov
test
inc
pop
cmps
nop
cld
cli
jmp
mov
mov
fwait
vphaddwq
xor
lods
mov
fld
popa
test
les
add
loop
pop
mov
mov
mov
imul
js
push
dec
xchg
inc
jle
aam
dec
and
pop
cs
ins
scas
or
mov
jo
ret
inc
out
inc
mov
adc
inc
sbb
jb
mov
mov
mov
outs
xchg
call
and
push
jecxz
xchg
push
mov
add
jns
inc
stos
fist
pop
add
sub
dec
add
es
(bad)
test
sub
arpl
movs
xlat
and
xor
mov
mov
addr16
jmp
and
and
aaa
outs
pop
xor
mov
jns
popa
mov
repnz
aaa
adc
inc
mov
addr16
lods
and
enter
ja
jo
scas
jle
int
les
loopne
dec
frstor
shl
add
adc
std
mov
jns
loopne
lock
cmp
xor
add
xchg
mov
jns
repnz
call
stos
bound
xchg
adc
jnp
xchg
xchg
cmps
pusha
jbe
dec
add
adc
pop
pop
or
ret
ss
aas
pop
vandnps
cs
mov
push
fsubrp
sub
dec
jmp
dec
inc
mov
ret
push
mov
push
mov
rcr
jnp
out
adc
inc
sub
idiv
mov
adc
cmp
mov
push
nop
rol
loopne
xchg
dec
fstp
inc
or
dec
mov
(bad)
push
xchg
lds
jmp
shl
pop
pop
push
sbb
jle
aaa
bound
sub
lock
xchg
mov
inc
mov
inc
and
aaa
fstp
xchg
push
inc
loopne
jl
xor
dec
or
dec
or
jmpw
add
lea
xlat
cmc
or
add
(bad)
in
neg
xchg
jne
cmc
dec
test
xor
pop
push
popa
bound
fld1
loope
xchg
add
nop
retf
loopne
mov
sbb
test
icebp
push
and
not
xchg
fld
mov
push
mov
outs
fucomi
dec
ds
loopne
ja
into
ja
pop
leave
lock
add
sahf
les
iret
pop
clc
adc
int
mov
cdq
jo
shl
ret
sub
and
jnp
adc
lods
xchg
inc
cdq
and
pop
and
dec
mov
cdq
(bad)
mov
or
leave
ins
adc
outs
xchg
dec
jno
loop
sub
sti
retf
mov
or
sub
sbb
lea
cmp
mov
or
add
mov
dec
mov
(bad)
dec
arpl
int3
mov
repz
mov
call
dec
mov
outs
mov
mov
mov
jns
xchg
(bad)
dec
enter
mov
lahf
jp
cmps
into
adc
test
pop
mov
inc
xchg
imul
sub
dec
mov
xchg
cmp
mov
or
and
rol
movs
adc
pop
pop
and
arpl
arpl
out
(bad)
in
push
xlat
jns
xchg
cmps
sbb
mov
adc
push
es
fcom
jae
xlat
dec
mov
and
vmwrite
cs
les
push
add
rcr
mov
jbe
(bad)
sub
pop
mov
(bad)
fdiv
xchg
(bad)
xchg
jae
push
cmps
adc
fadd
sub
sub
test
and
xchg
aaa
std
xchg
jnp
addr16
out
dec
inc
mov
inc
fisttp
cmp
jmp
mov
loope
jle
fdiv
lock
les
ss
icebp
rol
adc
icebp
outs
fs
mov
movs
imul
mov
mov
stc
(bad)
cmps
adc
xor
scas
icebp
pop
cmp
sub
cmp
dec
xor
(bad)
cld
dec
sbb
das
mov
mov
or
cmp
push
int3
cs
rcr
sbb
movs
mov
xor
pushf
lods
push
mov
or
test
mov
cmp
mov
and
xor
lds
cwde
in
or
in
arpl
popf
jecxz
jge
adc
mov
or
cwde
xchg
loop
jecxz
jg
int
movs
adc
gs
xchg
and
mov
adc
mov
mov
dec
and
mov
arpl
int3
(bad)
push
fadd
sbb
mov
into
sar
addr16
sbb
imul
xchg
xchg
lock
shl
or
mov
stos
mov
adc
mov
sti
adc
es
dec
push
sub
xor
enter
rcr
mov
or
or
push
stos
imul
inc
or
ins
xchg
sub
cmp
clc
repnz
call
test
pop
arpl
mov
retf
fild
das
xor
pop
cli
inc
mov
call
mov
(bad)
dec
or
bound
ins
lea
jae
fcomp
jl
es
test
out
in
mov
clc
iret
popa
or
sub
test
nop
push
sbb
cli
scas
sti
mov
inc
popf
mov
aam
cli
int3
and
mov
icebp
mov
dec
mov
loopne
mov
mov
xchg
mov
cli
jl
adc
push
jmp
sub
movs
int3
mov
popa
push
test
gs
or
in
addr16
and
mov
push
jmp
add
lods
xchg
mov
std
xchg
cmps
shl
fmul
outs
movs
jmp
sbb
sub
(bad)
adc
scas
loopne
fwait
pop
data16
jno
enter
sbb
push
pop
in
lock
cmps
fsubr
jmp
ins
mov
scas
std
inc
or
je
lds
or
shl
xor
xor
or
mov
fsub
and
shr
mov
lds
cmp
imul
push
stc
mov
int3
dec
jge
inc
(bad)
pop
into
dec
adc
cld
inc
out
les
mov
add
or
(bad)
mul
mov
retf
jge
sbb
into
cmc
xlat
xchg
dec
push
ins
inc
and
test
mov
(bad)
shr
adc
ret
dec
aam
cmc
jns
cli
mov
adc
dec
mov
jne
fbstp
inc
inc
jne
mov
push
mov
sbb
gs
std
xchg
in
pop
dec
sub
hlt
or
popf
add
sar
sub
pop
lock
ds
rol
mov
ja
ficomp
clc
jl
push
mov
pop
mov
call
arpl
fbld
pop
jmp
into
or
retf
jns
mov
pusha
jecxz
xor
lock
jmp
sahf
cmp
stos
dec
retf
aas
hlt
or
movs
sub
int
xor
and
or
cmp
je
retf
cmp
or
mov
add
adc
call
push
out
push
sahf
jmp
inc
cmova
xor
cmp
push
adc
or
aam
(bad)
(bad)
sub
cmp
push
jnp
std
mov
inc
sub
push
push
push
lea
cli
adc
fwait
dec
xchg
xor
push
xor
cld
adc
loop
jmp
in
cmp
cmc
ret
mov
retf
aad
lock
cmp
pop
ja
cmp
pop
jmp
xchg
sub
lods
cdq
fsubr
iret
push
adc
inc
jnp
das
mov
out
add
ds
ja
mov
arpl
aas
leave
add
call
hlt
cmc
pop
jp
sbb
mov
lds
mov
sub
(bad)
std
add
rcl
daa
cwde
push
jle
mov
jcxz
out
jns
call
hlt
sub
fpatan
inc
fld
xchg
popa
leave
shl
loopne
dec
data16
popa
in
jle
push
retf
xchg
cmps
fsub
daa
shl
adc
add
push
(bad)
pop
mov
pop
sbb
in
xor
or
sar
inc
adc
std
xor
enter
ret
hlt
ret
gs
xchg
mov
add
test
inc
inc
ficomp
(bad)
pushf
xor
(bad)
cmp
mov
mov
cmps
add
(bad)
out
leave
data16
movs
cmps
add
xor
jae
pushf
xchg
scas
clc
mov
jne
retf
les
xor
loop
jmp
das
sbb
and
or
jmp
jmp
ins
add
repz
pop
inc
jnp
es
adc
push
adc
jne
lods
push
ss
xor
int3
out
and
adc
mov
fcmovnbe
cdq
(bad)
cmp
inc
ret
push
ss
in
dec
cmp
jne
call
test
scas
enter
pusha
leave
mov
xchg
dec
xchg
push
dec
hlt
in
pop
fldcw
and
loopne
mov
dec
bound
cmp
mov
ja
mov
loop
out
jp
or
mov
fdivrp
fs
fdivr
aas
sbb
mov
mov
pop
push
ret
xcrypt-cbc
adc
pushf
aad
into
outs
push
int
cmc
ins
jmp
or
push
jae
dec
int3
cmp
jecxz
xchg
mul
mov
jb
cmp
or
cdq
cmp
adc
xchg
not
movs
xchg
mov
cmp
pop
and
cmp
sbb
dec
add
pop
adc
scas
xor
sbb
mov
add
inc
les
jg
sbb
fcom
inc
add
sar
or
or
pop
inc
jo
mov
mov
jnp
cmp
ins
mov
fwait
out
sti
cli
int
xor
xor
aam
test
in
xchg
cmp
ror
ret
and
push
mov
(bad)
das
mov
mov
test
je
cmps
pop
pop
sbb
mov
dec
jge
retf
ror
dec
fstp
mov
test
push
adc
les
popa
(bad)
sub
or
js
cmp
push
movs
ins
xlat
cmp
adc
fild
or
dec
xchg
bound
pop
jecxz
xchg
cmps
jae
xchg
or
mov
aad
mov
pop
popf
mov
cmc
cli
add
and
out
out
cmp
push
pop
sub
mov
lea
ins
repnz
sbb
rol
daa
pop
jmp
or
test
adc
mov
sti
mov
push
jns
mov
stos
sbb
push
or
std
ins
ins
rcr
xchg
sbb
and
and
cmp
or
pusha
pop
inc
mov
pop
daa
shl
aam
inc
popf
ss
stos
mov
sub
xchg
out
fwait
sbb
outs
mov
xchg
jp
std
mov
scas
data16
xchg
in
imul
jne
push
sub
pop
fsub
bound
mov
xchg
mov
repz
pop
push
add
retf
outs
loopne
fcom
lock
adc
aaa
out
xor
mov
outs
pop
mov
and
les
sar
adc
repnz
fdivp
js
fidiv
stos
aad
xchg
stos
shr
or
or
or
int
inc
(bad)
and
nop
int3
or
call
ficomp
push
imul
lods
push
inc
cli
pop
in
adc
push
mov
jns
mov
mov
and
inc
cmp
mov
push
or
dec
pop
mov
xchg
lods
pop
sub
sahf
outs
cmps
xchg
rol
ret
mov
pop
rcr
aaa
and
pop
mov
xor
push
xor
mov
or
sbb
xchg
jae
or
push
imul
lock
test
fcom
test
jmp
sub
jge
(bad)
cmp
mov
inc
fadd
imul
ins
in
mov
(bad)
sub
and
and
fwait
adc
jno
jmp
stc
and
mov
pop
stos
pusha
ins
test
sar
test
sub
inc
call
add
sub
inc
push
(bad)
pop
outs
pop
xchg
out
leave
call
dec
(bad)
sahf
fnstenv
push
push
adc
lea
sub
mov
cli
or
pop
(bad)
mov
mov
clc
pusha
lods
sbb
out
mov
outs
cs
aad
dec
es
repnz
jns
mov
aaa
pop
mov
xchg
lods
add
and
clc
jo
mov
out
fsub
mov
(bad)
mov
mov
retf
sub
cdq
dec
cli
stos
sbb
cmp
retf
dec
push
nop
jl
les
pushf
(bad)
and
dec
iret
dec
icebp
and
outs
xchg
mov
pop
sbb
and
jle
in
out
dec
xchg
icebp
fist
ss
jg
stos
in
js
mov
dec
shr
mov
push
lock
loopne
xchg
push
inc
cmp
(bad)
aad
ja
push
jp
jg
bound
inc
cmp
sar
add
ins
in
add
and
movs
pop
pop
mov
ffreep
push
not
inc
fld
xlat
enter
adc
jg
rcr
adc
jae
jge
sub
ror
pop
jbe
mov
daa
xor
fchs
test
fsubr
lds
repnz
in
dec
push
jl
xor
dec
loop
sub
dec
sub
stc
test
and
xchg
or
shr
dec
loop
jecxz
int
push
pop
loope
adc
sbb
sub
loope
sub
xor
add
dec
test
div
in
fnclex
adc
add
cli
sub
dec
dec
packuswb
(bad)
jge
mov
out
not
aam
sbb
test
fistp
data16
test
sbb
hlt
xchg
inc
jge
cmp
adc
outs
rol
mov
cmps
pop
inc
stos
test
dec
mov
xor
test
movs
and
push
jb
mov
jno
jle
aad
out
sbb
mov
loop
clc
pop
scas
cmp
mov
(bad)
retf
loope
cmp
fcomp
std
clc
or
add
xchg
data16
(bad)
std
daa
or
daa
movs
inc
jg
jne
aaa
and
fstp
mov
pop
mov
mov
sub
dec
jg
sar
leave
sub
jle
sub
xchg
adc
mov
leave
retf
jo
scas
out
inc
xchg
and
push
xor
adc
sar
jle
fld
adc
jle
and
pop
jno
jns
add
in
jae
das
stc
adc
jecxz
(bad)
std
pop
mov
movs
(bad)
xchg
(bad)
fisttp
repz
test
cmps
sbb
cli
out
dec
mov
hlt
mov
repz
and
pop
fimul
in
ret
push
inc
jb
and
xchg
mov
dec
cmps
fistp
push
out
xchg
mov
retf
repz
adc
xor
pop
and
fbstp
lds
rcr
push
pop
fcom
clc
or
push
adc
jmp
adc
jecxz
push
std
(bad)
fisttp
xchg
and
test
loope
imul
cmps
aas
data16
xchg
scas
inc
shl
jns
push
xchg
loope
mov
xchg
fadd
cld
in
push
leave
mov
movs
sbb
xor
and
loopne
stc
jns
(bad)
cmp
xchg
jecxz
adc
mov
out
dec
xchg
push
push
mov
xor
mov
daa
push
ret
fdiv
mov
ja
sub
setbe
xchg
out
pop
jmp
pop
xchg
mov
outs
das
cmp
je
lods
cdq
ja
sub
push
xchg
int3
into
fiadd
rcr
push
inc
jl
fst
sti
dec
pop
dec
(bad)
aam
fnsave
or
inc
and
iret
repz
push
and
sbb
clc
mov
jg
out
inc
push
xor
loope
pop
inc
popa
pop
cmp
(bad)
movs
xlat
push
adc
jb
cli
mov
adc
add
add
pop
sar
mov
stc
xor
push
jno
xchg
pop
sahf
nop
adc
push
cdq
xor
jne
fwait
shr
and
std
dec
mov
mov
movs
push
imul
xchg
call
imul
mov
mov
push
fwait
bound
inc
pop
imul
mov
mov
icebp
lods
push
repz
gs
movs
sbb
das
sbb
cmps
or
outs
push
dec
leave
push
mov
pop
aaa
out
mov
xchg
out
xchg
cli
fimul
fs
dec
ret
ins
fdecstp
repz
inc
out
and
fisub
push
jae
and
gs
cld
jbe
sbb
and
pop
test
add
dec
mov
das
rcl
mov
dec
push
pushf
or
nop
fwait
cmp
push
pop
pushf
outs
xchg
cs
push
push
xchg
jmp
(bad)
sbb
xchg
or
jge
jle
(bad)
pusha
cmp
xor
or
stos
les
out
das
enter
add
cmp
xchg
cmp
sub
mov
xchg
retf
push
jnp
sbb
retf
arpl
pop
or
test
aaa
imul
ja
adc
cmp
je
out
mov
adc
mov
add
ficomp
xchg
int3
ret
lods
inc
mov
retf
hlt
das
adc
dec
jns
pop
dec
inc
ret
enter
into
mov
mov
cli
jecxz
js
out
mov
add
or
pop
retf
enter
mov
pop
dec
xor
shl
push
mov
or
adc
add
and
dec
movs
into
adc
sti
sub
ret
int3
outs
sub
es
mov
pop
push
movs
scas
fdiv
in
idiv
mov
push
adc
mov
arpl
add
cmp
out
inc
jmp
or
stc
jp
fcom
daa
dec
ins
stc
inc
ret
jp
pop
xor
jmp
mov
bound
icebp
xlat
hlt
push
and
push
dec
addr16
lea
inc
cmps
fdivr
out
shl
popf
push
xchg
xchg
sahf
(bad)
jbe
pop
xor
lea
jle
jg
and
sub
push
jne
js
cmp
call
(bad)
std
js
out
iret
push
xor
and
lea
rcr
ficomp
sub
outs
xor
xchg
adc
lock
ret
fdivr
and
div
fsubr
fwait
jno
mov
cmc
fs
sbb
mov
jecxz
push
adc
cmps
std
and
push
imul
lea
scas
test
push
adc
mov
test
ret
mov
and
jl
aaa
mov
sub
add
adc
in
mov
into
aad
adc
test
stc
test
xchg
andps
add
or
inc
test
push
dec
mov
sub
jle
inc
rol
sub
lock
push
mov
gs
jo
or
cs
iret
push
xor
jl
inc
lahf
push
pop
imul
pusha
xor
arpl
pop
hlt
jle
ret
pop
and
pushf
ret
stc
lods
dec
unpcklps
jl
xchg
fwait
iret
iret
jb
mov
js
stos
daa
or
pop
in
outs
or
fild
mul
stc
ss
daa
push
repz
shr
jmp
in
jnp
data16
sub
ss
mov
dec
xchg
jno
sbb
sub
(bad)
dec
(bad)
aas
ins
movs
stc
cmps
cmp
cmp
imul
movs
sbb
aam
out
adc
or
sbb
(bad)
dec
fidivr
pop
sbb
fs
jg
mov
in
into
xchg
into
add
pop
jge
dec
mov
and
or
jmp
out
jb
mov
jmp
div
inc
xchg
push
out
sub
movs
lods
ds
mov
outs
test
js
int
aam
cmp
repz
push
out
pop
loopne
and
xchg
mov
jl
inc
jp
mov
adc
push
push
(bad)
jno
push
fistp
pop
(bad)
ja
pop
call
repz
clc
es
rol
out
jg
stos
xchg
add
jmp
dec
call
jmp
ror
fwait
cmp
or
and
aad
repnz
mov
fldln2
xchg
mov
xchg
add
mov
jp
sbb
or
mov
mov
add
adc
lods
xchg
pop
xchg
xor
cmp
rcl
jmp
aas
jb
adc
jmp
or
jmp
fimul
int3
jmp
mov
add
dec
or
scas
gs
dec
or
pop
lahf
mov
jmp
and
cmp
fmul
cdq
cmovge
adc
lods
pop
popf
fs
push
sbb
sahf
mov
out
cwde
mov
addr16
sub
sub
jle
idiv
add
dec
into
xchg
xchg
pop
jae
cmp
ret
(bad)
sbb
pop
or
out
cli
loop
cmps
dec
mov
mov
stos
xchg
scas
sbb
fist
(bad)
cld
retf
add
test
test
push
push
mov
int
ja
cmp
(bad)
out
pop
sub
mov
cmp
repz
call
jns
jmp
arpl
fwait
adc
sbb
adc
sbb
repz
out
outs
xchg
hlt
and
and
imul
or
add
lds
pusha
jnp
cld
dec
jl
inc
inc
cdq
pop
test
add
inc
lods
stos
xor
lock
push
frstpm(287
xor
jg
scas
fist
add
fstp
dec
out
outs
xor
adc
(bad)
mov
xchg
xchg
lahf
mov
cmp
ins
repz
add
dec
push
les
cld
cmp
out
outs
mov
fld
mov
daa
mov
adc
inc
mov
shl
mov
or
add
pop
xlat
xchg
imul
cli
aad
scas
repnz
(bad)
in
xchg
inc
std
sbb
xchg
div
fist
lds
test
and
aaa
cmps
dec
and
or
adc
hlt
mov
cwde
in
cmp
push
mov
call
ffree
ret
imul
out
jae
hlt
pop
adc
jge
nop
in
fs
ins
(bad)
cmp
ficomp
mov
adc
inc
shr
push
cli
sbb
test
ds
ins
xchg
mov
and
jbe
or
inc
inc
cmps
and
adc
xor
js
fdivp
jg
in
dec
cmc
aas
cmc
outs
fsub
inc
jecxz
jmp
jecxz
rcr
shl
xor
(bad)
pushf
mov
repz
imul
pop
cld
leave
ror
add
int
in
and
adc
sub
ins
mov
jb
or
aad
in
pop
mov
xchg
pop
pop
in
sub
movs
das
pop
mov
mov
cmps
js
dec
call
dec
inc
mov
or
mov
sbb
ret
cdq
xchg
mov
iret
mov
adc
inc
cmp
bound
push
stos
push
xor
retf
dec
cmc
fiadd
scas
pop
ret
shl
dec
into
mov
dec
repz
sbb
cmps
adc
mov
or
repnz
enter
fnsave
push
lods
push
adc
fcom
mov
add
clc
setno
dec
dec
add
aas
add
addr16
dec
bound
scas
pop
mov
or
cmp
movs
pop
push
dec
fs
xlat
mov
push
pop
jge
jmp
dec
jo
ss
inc
cmp
xchg
cmp
sti
mov
or
inc
xchg
pop
sar
dec
retf
xchg
push
adc
fisub
cmp
hlt
shr
aad
pop
xchg
mov
jb
xchg
cwde
ficom
inc
and
clc
pop
mov
(bad)
retf
or
call
test
arpl
clc
jns
xchg
xchg
sbb
cmc
mov
pop
(bad)
dec
cld
pushf
mov
jle
stos
call
loopne
mov
mov
mov
mov
adc
mov
jecxz
sbb
lea
xlat
pop
jp
sub
dec
push
dec
movs
ds
ins
or
in
pop
dec
pop
pop
jge
imul
test
jg
add
jae
enter
test
mov
(bad)
cmps
or
sbb
std
jbe
or
leave
mov
pop
and
inc
mov
jb
int3
xor
fnstsw
inc
iret
xor
and
pop
mov
cdq
fs
sbb
mov
(bad)
pop
cs
call
ror
idiv
jae
mov
or
lods
dec
aad
shr
pop
dec
and
imul
cmp
xchg
dec
pop
cmps
and
sbb
add
cmps
mov
repnz
icebp
jne
push
or
cmp
jge
fmul
mov
repnz
and
jecxz
inc
idiv
jb
mov
push
or
jg
add
mov
xchg
je
and
cli
aam
mov
or
sbb
retf
mov
or
in
int3
sbb
in
pop
mov
fisub
ja
push
push
cdq
ds
adc
adc
xor
cmps
leave
hlt
sbb
out
cmc
xchg
loope
lods
push
jmp
xchg
or
dec
call
add
movs
into
push
push
add
test
mov
xchg
into
sub
mov
mov
and
loop
push
push
ss
cmp
push
sahf
pop
jo
or
mov
inc
or
push
pop
pop
inc
push
mov
(bad)
es
dec
scas
xor
inc
mov
add
iret
mov
sar
and
lds
jb
or
jns
push
jecxz
adc
popa
sub
inc
sub
ja
adc
or
repz
inc
es
int
xor
jmp
mov
pop
loope
into
cmp
adc
repnz
inc
pop
daa
push
int3
jmp
adc
fwait
sub
add
clc
sbb
jae
movs
test
mov
(bad)
sbb
outs
cwde
bound
jne
pusha
and
and
fwait
inc
adc
out
jns
xchg
stos
push
mov
sbb
pop
xor
shl
into
aaa
(bad)
pop
and
(bad)
xchg
mov
aaa
push
inc
mov
pushf
adc
mov
je
data16
cmp
xor
scas
mov
out
xchg
repz
add
aas
data16
adc
hlt
nop
fst
sub
jmp
out
and
movs
out
test
movs
(bad)
sbb
xchg
push
xchg
sub
ror
xchg
dec
jb
js
jno
jo
sub
ss
inc
sub
repnz
and
and
stc
pusha
rcl
mov
js
push
int
aaa
retf
jb
add
fcomip
add
int3
in
in
or
xlat
mov
sub
dec
push
pop
xchg
and
push
in
mov
or
test
in
repz
lea
jno
test
loopne
pop
mov
cld
repz
mov
movs
add
add
or
fdiv
add
mov
push
rcl
cld
pop
add
cmc
je
pop
pop
movs
push
cmps
mov
arpl
in
aam
dec
cs
jne
sub
jmp
inc
div
std
jge
jo
call
mov
hlt
sbb
(bad)
dec
jo
and
adc
fidivr
or
mov
lock
js
jl
es
push
cs
sub
test
xor
repnz
cmps
mov
dec
ret
rcl
or
jbe
mov
push
add
mov
pop
jmp
pusha
ds
adc
push
aas
jo
jmp
mov
xchg
test
mov
(bad)
outs
xchg
dec
imul
cmp
les
scas
lods
push
daa
scas
cdq
mov
cwde
inc
push
es
loope
lods
lahf
test
add
xchg
mov
sub
adc
ror
mov
arpl
in
ss
sbb
sbb
sub
mov
(bad)
xchg
shr
sahf
sub
or
ins
xor
not
sub
or
add
or
(bad)
repz
stos
std
adc
mov
push
retf
push
fild
inc
fadd
push
and
sbb
int3
add
fstp
adc
sbb
dec
add
mov
fs
push
retf
inc
fidivr
cmp
cmp
scas
stos
test
cmc
or
test
xchg
push
or
and
rcl
jecxz
test
mov
xor
mov
cmps
dec
hlt
xor
pop
dec
sahf
sbb
out
test
cmp
aad
push
jno
mov
daa
mov
push
and
pop
shl
pushf
addr16
xchg
cmp
daa
adc
jl
scas
clc
push
inc
dec
test
add
jl
leave
aaa
mov
fdiv
and
cmp
mov
sar
movs
adc
out
mov
repz
xlat
lock
or
mov
dec
jle
jns
mov
ins
cmp
sar
sti
(bad)
in
jbe
dec
jl
hlt
(bad)
hlt
xchg
frstor
iret
call
fs
sbb
test
xor
stos
enter
cmp
xchg
jns
movs
cmp
enter
jle
cdq
mov
(bad)
sub
or
and
out
stc
fadd
push
cmc
ror
cmp
xor
lock
and
mov
sub
xchg
pushf
retf
dec
push
cmp
mov
outs
nop
add
xchg
gs
inc
xlat
mov
mov
push
xor
ret
ficom
xor
loop
and
shl
movs
imul
add
jmp
sar
push
push
cmps
xor
or
stos
lahf
pop
fnstcw
loope
loope
sub
sbb
loopne
jbe
repnz
sbb
sbb
jns
mov
cmp
pop
inc
sub
cmp
shl
sub
imul
ds
scas
or
adc
push
fwait
cld
pop
neg
stc
and
(bad)
jmp
mov
mov
(bad)
shl
adc
fwait
ret
outs
leave
inc
xor
not
pushf
leave
out
idiv
loope
fidiv
sub
lods
lahf
movs
add
or
and
and
sub
loopne
inc
pop
xor
jmp
int3
dec
inc
sbb
test
mov
ffree
adc
xor
ins
lods
neg
xor
and
popa
push
jmp
jmp
daa
jae
ficomp
add
add
in
pushf
push
out
cmp
outs
mov
shl
fs
dec
lahf
mov
add
fnstenv
(bad)
fsub
sub
retf
add
in
(bad)
dec
in
push
(bad)
pop
jmp
cwde
dec
movs
iret
push
fsubr
fistp
fdivp
mov
push
or
dec
js
bsr
into
xor
movs
stc
mov
aad
xor
cdq
jne
dec
loopne
and
ins
cli
push
popf
jo
mov
call
ret
popa
adc
or
ficomp
jo
rcl
dec
adc
mov
std
jmp
mov
movs
or
add
cvtps2pi
call
push
test
fstp
ss
ret
jo
mov
or
mov
aaa
inc
mov
xor
cs
pop
adc
and
pop
xchg
or
cld
dec
pusha
mov
imul
lea
pop
add
dec
xchg
pop
mov
mov
inc
push
mov
push
push
ins
mov
xchg
dec
mov
add
int3
dec
or
pop
lea
leave
aad
mov
ficom
pop
test
ret
inc
test
pop
daa
test
ficomp
push
jg
and
push
cmps
or
fstenv
cmp
loop
sti
ret
mov
pushf
add
outs
push
js
dec
arpl
sbb
(bad)
sahf
add
adc
out
jns
dec
mov
inc
add
xlat
pop
add
add
loop
lahf
jb
jl
and
jns
das
pop
fstp
cmp
push
movs
sbb
sti
addr16
mov
or
add
or
clc
inc
mov
pop
dec
fcmovne
jmp
adc
push
test
mov
jbe
ja
addr16
stos
push
mov
int
rcl
loop
add
push
adc
sub
into
std
int3
ins
jle
mov
pop
adc
xlat
dec
pop
lea
dec
(bad)
push
sub
pop
mov
cmc
inc
test
stc
arpl
loope
(bad)
lock
bound
ds
(bad)
aam
mov
sbb
lods
outs
push
mov
inc
adc
sbb
addr16
jge
and
outs
mov
pop
rcl
xchg
xor
dec
imul
fisttp
aas
out
push
lock
in
imul
ds
jecxz
jge
xchg
ja
push
outs
add
scas
stos
(bad)
aam
shr
cmp
fcmovu
cmp
fistp
sub
xchg
and
push
scas
jecxz
cmp
es
loop
sub
inc
push
mov
sub
data16
into
sbb
fcmovnbe
pop
ret
inc
adc
fcmovnbe
cmp
cmp
loop
lahf
ins
mov
lods
adc
sbb
pop
pop
jg
retf
cmp
outs
inc
dec
hlt
add
or
sbb
push
sbb
sar
mov
jmp
inc
mov
in
pop
sbb
sbb
ins
mov
and
cld
pop
jg
xchg
fld
push
icebp
cmp
rol
shl
in
cmp
xor
inc
test
mov
dec
xchg
mov
cmp
cmp
les
es
mov
jmp
mov
dec
push
mov
rcr
push
xchg
iret
and
retf
jmp
test
enter
ret
outs
pop
stc
addr16
mov
add
sbb
out
pop
jne
push
mov
adc
lahf
jmp
mov
jl
daa
and
in
arpl
aas
not
mov
(bad)
sbb
inc
xchg
aas
icebp
inc
sti
out
not
pop
ins
ins
test
mov
(bad)
pop
in
mov
jo
test
push
ja
mov
add
sub
cmps
mov
mov
jle
out
repz
pop
pushf
loop
mov
movs
in
xor
jmp
or
mov
inc
dec
gs
fadd
in
into
in
add
xchg
fcom
push
sar
cs
xchg
pop
popf
pop
lahf
loop
das
lahf
push
outs
(bad)
movs
int
dec
push
(bad)
fmul
mov
cli
cmp
sub
xchg
fcmovbe
or
sbb
fwait
cmp
std
inc
mov
jge
xor
xchg
ret
addr16
repz
fldenv
mov
xor
fisubr
cmp
ja
bound
push
sbb
xor
(bad)
ret
mov
leave
mov
jne
in
inc
shl
and
jno
cmp
adc
hlt
in
dec
mov
xor
jb
pusha
movs
les
pop
mov
ja
fld
xor
lds
mov
mov
loopne
or
push
repz
in
hlt
xor
repnz
and
push
ret
and
jns
movs
fldcw
and
add
retf
push
ficomp
push
fs
arpl
mov
adc
mov
mov
mov
adc
outs
bound
cmp
pop
inc
mov
daa
cmp
mov
cmc
(bad)
xchg
cwde
or
push
cmp
sub
fldenv
stos
fidiv
or
int3
sub
adc
push
inc
aaa
ss
in
fimul
pop
fsubr
setge
aaa
repz
stos
arpl
adc
mov
or
pop
leave
movs
dec
pop
ins
enter
aas
test
pop
jb
out
sahf
mov
mov
and
mov
xchg
or
cwde
mov
xor
int3
test
movs
fiadd
inc
mov
mov
mov
add
repnz
push
dec
push
cmc
adc
loop
and
lods
in
cmp
cdq
aad
ins
call
aad
sub
push
jg
shr
imul
jbe
out
out
xor
mov
adc
push
fwait
add
lods
mov
mov
lds
repnz
xchg
dec
in
adc
adc
sub
add
jnp
pop
nop
adc
cmps
and
into
sub
sar
mov
(bad)
jp
or
fidivr
mov
ss
xlat
imul
cmps
add
or
push
or
cs
sbb
in
xor
loope
ds
(bad)
test
adc
les
inc
sbb
dec
fs
jmp
rcl
cmp
pop
ja
hlt
call
ja
out
push
pop
inc
mov
mov
fucomi
adc
xor
lods
mov
push
and
sti
cwde
rcr
mov
retf
pop
sub
(bad)
out
cmps
mov
push
stc
rol
mov
out
mov
stc
iret
ins
js
xor
fldcw
hlt
jnp
dec
sub
repnz
int3
add
jb
jle
imul
push
call
mov
adc
push
mov
dec
hlt
imul
push
clc
outs
ret
scas
and
jno
push
nop
cmp
push
cmp
lock
pop
xor
cvtdq2ps
je
mov
in
pop
repz
stos
and
jecxz
stc
imul
iret
mov
(bad)
push
jns
cdq
sub
mov
add
mov
dec
movs
push
xchg
mov
pop
pop
xchg
(bad)
xchg
call
or
inc
inc
movs
dec
mov
push
push
hlt
fwait
dec
ret
sub
cmps
into
dec
bound
jmp
mov
mov
sub
mov
mov
addr16
push
cmp
sub
int3
test
out
popa
movs
add
jecxz
push
xor
rol
jmp
shl
cmp
jno
es
fimul
dec
sar
mov
lds
pop
cmp
ret
xor
push
retf
inc
jg
pop
ret
xchg
mov
movs
add
mov
jmp
sar
push
mov
rol
sub
inc
fcom
bnd
fcmovnu
int3
push
mov
dec
dec
out
out
std
sub
rol
jbe
sbb
mov
sahf
sbb
adc
inc
mov
movs
mov
or
add
loop
mov
lahf
pop
push
inc
or
fwait
mov
mov
icebp
mov
push
mov
icebp
rol
push
ror
xor
pop
xor
dec
std
mov
out
imul
mov
cmc
push
outs
ins
or
adc
and
test
fst
push
jmp
sbb
inc
jmp
jo
cwde
cmps
repnz
dec
daa
add
test
or
dec
cmp
enter
loope
mov
or
daa
sti
mov
add
sub
retf
and
push
and
sahf
cmp
push
hlt
xchg
and
jecxz
fisubr
pop
(bad)
stos
(bad)
inc
pop
add
(bad)
xchg
inc
call
and
aaa
jmp
es
mov
daa
ins
jle
std
mov
(bad)
in
dec
push
inc
out
mov
mov
sub
repz
ins
fisttp
sbb
js
and
sbb
dec
mov
(bad)
mov
dec
lods
inc
xchg
push
inc
data16
cmps
jg
and
pop
lahf
jmp
add
test
and
xchg
mov
test
(bad)
stc
pusha
jg
movs
je
das
add
cmp
int
shl
inc
add
inc
cmp
and
mov
add
in
and
ins
dec
sub
inc
cli
push
loop
jne
cmp
aaa
in
js
mov
mov
mov
cmp
icebp
or
pusha
cwde
int3
sbb
xchg
addr16
inc
loopne
into
jne
push
addr16
push
or
test
xchg
fiadd
lods
je
les
sub
shr
arpl
pop
adc
mov
lea
inc
dec
sub
lea
cmp
mov
and
test
and
push
icebp
jbe
sbb
test
mov
repz
push
inc
pop
mov
mov
ja
sub
push
xchg
nop
and
pop
mov
repz
sub
popf
sub
out
nop
and
ret
or
xor
(bad)
aas
cld
(bad)
mov
stc
cdq
push
and
pop
xor
pop
mov
xor
mov
xchg
cli
lahf
sbb
push
mov
icebp
push
pop
cmc
jg
xchg
inc
(bad)
lahf
nop
int3
mov
push
xchg
xlat
mov
cmp
add
cmp
xchg
cmps
push
and
mov
ja
stc
mov
xchg
push
(bad)
clc
sbb
xchg
jo
cmp
push
and
cmp
adc
addr16
(bad)
icebp
push
ret
je
push
mov
(bad)
xchg
inc
mov
cmps
out
cmp
scas
mov
jp
clc
and
xor
fiadd
or
or
xchg
xor
dec
pop
xchg
clc
loopne
ja
shl
stos
das
and
mov
mov
jae
mov
js
push
jae
fisub
mov
popf
popa
mov
int
cmp
mov
ins
jo
push
pusha
push
outs
pop
pop
mov
mov
inc
and
sbb
aam
sub
mov
cmp
test
xor
icebp
test
mov
mov
pop
push
ret
sar
xchg
push
xchg
cld
jnp
imul
imul
add
mov
sti
adc
jns
fldl2e
bound
push
out
das
mov
or
jnp
loope
icebp
inc
cwde
gs
xchg
cmp
push
push
ds
sub
and
mov
xchg
xor
popa
cwde
fimul
add
sbb
push
pusha
scas
lock
out
dec
jbe
xchg
dec
popf
inc
lods
icebp
jle
dec
stos
jl
(bad)
loopne
mov
mov
data16
xor
mov
rcr
mov
iret
sar
sbb
loope
jo
std
jl
arpl
and
sbb
mov
sub
in
(bad)
mov
push
adc
mov
push
sub
out
and
sub
mov
pop
int
push
idiv
push
adc
sub
in
push
test
jp
pushf
sahf
mov
or
and
lock
(bad)
push
sbb
mov
mov
adc
es
adc
imul
lods
fcmove
stos
dec
cmps
test
ins
ja
pop
pop
je
ins
push
adc
cmp
cld
sbb
cmp
lds
inc
rol
xchg
mov
pop
jae
cmc
(bad)
shl
xor
loopne
dec
add
es
push
sub
push
in
fnstcw
int
in
jl
xor
add
cld
inc
fimul
fiadd
xchg
inc
std
cmp
xor
mov
or
or
dec
into
sbb
shl
out
adc
aam
push
rcr
mov
add
rol
jmp
inc
pop
add
mov
xchg
retf
rcl
cmp
lods
xor
xor
sti
neg
in
test
jle
gs
mov
in
fsubr
retf
ins
adc
retf
sti
add
jb
fsub
mov
dec
fwait
push
or
imul
mov
sbb
out
icebp
aam
pusha
rcr
push
mov
loop
push
adc
cdq
cld
je
dec
(bad)
nop
les
lock
push
sbb
dec
xor
rcl
mov
fwait
ror
rcr
inc
push
sti
fdivr
ffreep
mov
sbb
and
mov
and
cmps
loopne
or
mov
add
cmc
daa
push
mov
shl
nop
popf
div
sbb
mov
daa
pop
jmp
mov
out
out
aad
stos
arpl
dec
call
pushf
test
cmp
xor
retf
add
fwait
dec
lea
sbb
inc
(bad)
jb
mov
in
xchg
add
std
xchg
ins
stos
sub
(bad)
pop
xor
rcr
mov
fisubr
popf
mov
mov
fstp
or
adc
cmps
jmp
in
add
jo
dec
cmc
mov
jecxz
mov
jne
pop
mul
movs
mov
jns
test
jne
setge
pop
xchg
mov
ins
es
push
push
or
ficom
sbb
or
movs
push
out
sub
pop
pop
(bad)
repz
jle
push
dec
adc
pop
test
mov
repnz
pop
outs
mov
sbb
jnp
daa
test
jo
mov
and
js
gs
xrelease
icebp
stos
sti
loope
push
sbb
or
div
and
in
es
jl
xor
in
mov
xchg
inc
imul
movs
pop
jecxz
mov
pusha
xchg
or
mov
pop
xlat
mov
adc
jl
inc
sub
cmps
dec
mov
push
out
mov
inc
xor
ret
shr
xlat
dec
test
out
ret
push
or
mov
scas
mov
add
push
mov
cmp
out
xchg
aas
les
fsubr
cmps
mov
popa
inc
js
ss
pop
mov
arpl
imul
dec
lods
mov
sbb
stc
dec
mov
dec
lea
jne
cmps
ds
pop
push
mov
scas
mov
xchg
jmp
push
xchg
in
fwait
(bad)
push
sbb
gs
in
out
mov
cmp
and
xchg
test
pusha
fwait
sbb
mov
stos
scas
iret
loope
fwait
std
call
cmp
repnz
stos
add
mov
or
xor
sbb
xor
(bad)
mov
enter
xchg
ja
inc
outs
ret
inc
ins
push
sti
fbld
je
and
sbb
(bad)
sahf
jl
ds
xor
pop
cmp
rol
or
sbb
call
ss
shl
xchg
mov
(bad)
mov
cli
inc
(bad)
fdivr
push
mov
pop
loop
or
loop
push
stc
mov
lds
push
lahf
leave
popa
mov
xor
aam
bound
mov
or
add
rol
cmp
mov
data16
imul
mov
in
imul
outs
sti
clc
sbb
push
ror
adc
sub
cld
dec
pusha
pusha
gs
inc
xchg
xor
out
(bad)
gs
test
adc
cmps
stos
sbb
fsubr
out
jg
clc
sub
aad
push
(bad)
mov
mov
jae
test
into
std
loope
add
inc
call
sbb
std
ins
dec
mov
lahf
loopne
mov
cmps
xor
ret
add
clc
pop
addr16
fdivr
inc
jmp
mov
sub
dec
or
into
mul
aaa
fucomp
fwait
xor
xchg
stc
repnz
mov
mov
inc
push
mov
cld
or
fs
test
jae
stos
arpl
adc
imul
or
retf
stos
mov
addr16
sbb
or
push
(bad)
js
mov
imul
xchg
cwde
mov
cmps
jp
xchg
sub
outs
rol
mov
daa
xchg
push
mov
arpl
enter
add
pop
lea
mov
hlt
mov
dec
mov
mov
(bad)
pop
sbb
cmps
jg
out
mov
jmp
fisubr
lea
jne
xor
cmps
mov
ss
outs
lods
data16
inc
mov
add
or
adc
lds
pop
inc
sub
jmp
adc
push
imul
or
mov
xor
mov
xchg
dec
pop
and
test
scas
xchg
dec
xchg
jmp
add
xchg
push
push
psllw
or
fnstsw
mov
inc
or
jl
xchg
add
jae
mov
outs
out
push
mov
push
stos
jne
repz
push
xor
inc
jecxz
push
sbb
int
jnp
add
add
cmp
scas
inc
leave
dec
dec
je
pusha
lock
sub
jnp
leave
pop
jle
lods
loope
ins
jle
sub
aas
xor
sub
push
call
imul
sti
scas
inc
out
pop
mov
pop
fld
cmp
fistp
dec
adc
pop
gs
test
inc
dec
hlt
jmp
fs
xor
and
(bad)
mov
out
adc
test
(bad)
aaa
pop
js
push
in
xor
inc
xchg
sbb
mov
or
loopne
jne
mov
inc
adc
xchg
cmp
rol
and
out
xchg
mov
sub
ret
test
ds
cmc
xlat
xor
inc
or
push
fst
clc
clc
mov
shr
or
jecxz
xchg
lods
das
mov
push
and
inc
jecxz
cmps
inc
cli
jnp
mov
jne
push
mov
mov
retf
or
sahf
aaa
lock
repnz
loopne
aaa
not
pop
(bad)
inc
add
imul
mov
push
lock
xor
nop
ret
jecxz
jecxz
pop
and
int3
mov
push
jnp
aaa
inc
je
mov
shl
adc
inc
add
loop
ret
or
stc
fcomi
repz
lods
mov
outs
cmp
shl
push
mov
xor
mov
mov
cmp
and
dec
inc
aad
pop
in
jle
(bad)
xchg
mov
sub
shr
fist
sar
xor
inc
jle
ja
movs
xchg
stc
pop
imul
iret
cli
adc
ret
aaa
jg
adc
xor
xchg
jmp
sub
mov
sub
adc
leave
adc
mov
push
icebp
rcr
add
pop
dec
sub
xor
popf
mov
rcr
ret
lods
and
push
inc
dec
or
inc
and
aaa
cmp
sub
mov
mov
aas
inc
xchg
out
mov
fidiv
dec
gs
mov
loopne
sbb
dec
or
mov
addr16
ret
mov
inc
add
mov
lds
sbb
(bad)
leave
outs
cli
les
ja
add
rcl
jbe
test
aad
in
sti
adc
imul
inc
mov
sbb
(bad)
lods
cmovne
cmp
fsubp
push
out
add
addr16
aam
je
mov
repnz
out
dec
jae
sbb
into
mov
jecxz
lahf
cs
sbb
add
jns
movs
dec
movs
lods
inc
das
cmp
sbb
mov
(bad)
rcr
jl
popa
icebp
pop
inc
cmp
push
push
jbe
outs
adc
stos
cld
ds
push
mov
sub
ret
pusha
leave
sub
mov
and
stos
test
add
ret
push
and
and
fld
fld
dec
or
std
mov
std
and
popa
pop
test
sub
mov
pop
in
or
mov
or
stos
mov
imul
test
ja
fsubr
(bad)
jl
(bad)
push
sti
aas
scas
shr
pop
mov
pop
fwait
imul
cs
mov
aas
sbb
jbe
retf
inc
ja
imul
push
or
clc
add
stos
movs
or
pop
ss
inc
add
jecxz
pop
cld
int
stos
pop
and
cmp
mov
mov
cmps
lds
stc
js
mul
ds
shl
(bad)
not
cdq
ins
mov
jns
ror
pop
jmp
sbb
dec
adc
repz
les
or
sub
sbb
fstp
mov
adc
mov
nop
lahf
sahf
cmp
pop
or
outs
pop
(bad)
fld
test
into
cwde
pop
push
jge
cmp
jge
fdiv
ds
std
add
mov
add
push
jl
das
jg
jb
(bad)
sti
or
sbb
sub
inc
jnp
das
sbb
lahf
call
inc
inc
lea
loopne
into
daa
ror
outs
pop
repnz
in
loop
mov
stos
jb
push
pop
loop
mov
and
ret
dec
sub
loopne
shr
add
call
dec
cs
sbb
(bad)
movs
sub
jmp
and
or
je
dec
push
push
sar
dec
and
outs
nop
mov
push
jmp
aam
outs
ror
clc
mov
add
and
xor
or
int3
lahf
cli
add
aad
inc
fcmovnbe
pop
(bad)
sti
es
mov
add
jo
or
ror
outs
dec
xchg
not
dec
js
fmul
loopne
mov
push
scas
int
retfw
inc
inc
loope
cmp
in
repnz
mov
outs
sub
movs
int
sub
test
imul
lods
jmp
pop
or
call
hlt
icebp
or
jns
loope
xchg
inc
adc
repnz
int
movs
or
mov
stos
sub
dec
mov
fidiv
test
addr16
pusha
bound
push
jle
test
cmp
push
stos
cmp
cmc
stos
imul
shr
stos
pop
add
cmp
sub
push
lods
cmps
into
or
outs
mov
mov
rcl
fild
mov
xor
outs
jle
mov
or
mov
and
adc
inc
les
(bad)
sub
dec
pop
call
dec
mov
fstp
cmps
dec
mov
sti
ins
out
mov
cmp
push
pop
pop
jge
popf
hlt
adc
dec
mov
call
and
shl
inc
cli
das
push
mov
add
cmp
adc
xor
adc
sbb
les
cli
or
aaa
loop
test
mov
jmp
rcl
add
retf
and
inc
pop
pop
mov
into
addr16
or
mov
mov
sbb
cmps
es
mov
adc
sbb
push
add
jbe
mov
icebp
xor
icebp
jns
mov
(bad)
ins
fucompp
sub
std
and
adc
retf
push
xchg
mov
inc
xchg
jne
fstp
xor
loope
idiv
push
loop
aam
in
je
jmp
jg
cmps
movs
xchg
call
outs
cvtps2pd
xor
mov
dec
call
inc
mov
jno
es
(bad)
sbb
mov
test
inc
movs
adc
arpl
sbb
cld
inc
jo
ins
mov
adc
inc
dec
xchg
mov
inc
pop
psrlw
sti
test
xchg
adc
jno
stc
mov
test
outs
call
xchg
loopne
or
jle
leave
pop
and
popa
mov
dec
fcmove
and
cli
outs
jecxz
push
dec
sub
out
jg
or
gs
push
xlat
dec
pusha
adc
mov
movs
outs
xchg
icebp
push
lods
mov
nop
icebp
inc
(bad)
or
std
pop
bound
jno
std
test
jmp
xor
or
push
fcomp
jb
mov
or
inc
psadbw
pop
push
mov
mov
pop
(bad)
out
cmps
adc
shl
cld
pusha
imul
cwde
aad
in
popa
je
pushf
outs
jae
mov
push
dec
pop
mov
jae
mov
mov
clc
mov
cmp
add
ja
arpl
dec
dec
rol
inc
repz
(bad)
fneni(8087
jne
test
fdivr
icebp
test
hlt
scas
sar
or
aad
rcr
fidivr
in
cmp
cld
into
or
ins
xchg
xor
dec
jmp
fcmove
xor
in
jmp
fmul
stos
popa
add
cmps
and
out
adc
xor
dec
mov
retf
mov
pop
jp
mov
sub
jmp
cli
mov
call
push
adc
and
xchg
mov
mov
cmp
and
loop
jbe
pop
dec
pop
dec
adc
cmp
jl
xor
clc
jbe
sub
fdivp
sub
lock
mov
ror
xor
inc
icebp
sub
mul
repnz
xchg
sub
xchg
inc
sti
inc
or
aaa
pop
xor
fs
std
shl
or
pop
mov
xor
inc
or
int3
aaa
mov
fwait
sub
test
sub
fwait
ret
jl
mov
inc
mov
aaa
jnp
sub
push
call
scas
mov
push
outs
jp
scas
sar
push
lahf
fs
xor
ins
int
push
and
jge
xchg
pop
add
dec
dec
retf
mov
nop
push
lods
cmp
loope
test
xor
inc
scas
call
or
retf
scas
cs
inc
rcl
mov
repz
rcl
add
cs
mov
in
dec
inc
jo
jnp
xchg
inc
cmp
cmp
aad
fwait
sbb
nop
jg
jne
(bad)
mov
jbe
sbb
xor
jp
add
addr16
stos
cmp
or
fimul
add
fdiv
mov
iret
cmp
sub
mov
sbb
pusha
sbb
mov
pop
ins
or
stos
pop
hlt
fmul
pop
jecxz
mov
add
xchg
mov
mov
leave
mov
js
(bad)
sbb
loope
(bad)
call
inc
sbb
pop
das
pop
and
add
imul
dec
(bad)
sub
inc
sbb
out
mov
mov
rcl
inc
xchg
fucomp
movs
cld
das
loopne
loop
sub
not
mov
mov
jmp
aaa
stos
mov
leave
popa
dec
xchg
push
sbb
mov
and
push
push
sbb
icebp
cmp
jg
pop
out
(bad)
scas
mov
cwde
icebp
js
pop
sub
mov
aad
mov
out
fcos
push
pop
adc
in
(bad)
fs
(bad)
ss
mov
push
mov
mov
sbb
mov
push
in
fisttp
stc
std
lea
lahf
repz
stos
mov
movs
sbb
loope
sbb
inc
push
scas
in
mov
xchg
js
fs
lds
mov
pop
loope
cmps
lods
lock
div
ret
cli
add
jbe
push
dec
retf
adc
cld
test
xor
sar
ja
test
add
jge
(bad)
or
out
movs
jo
sbb
jb
jbe
inc
inc
sbb
jo
dec
sbb
je
ins
xor
mov
xor
arpl
push
inc
add
add
cdq
out
push
pop
fcmovbe
mov
sub
jmp
ror
fst
arpl
ret
mov
xchg
stos
inc
xor
and
in
es
leave
addr16
push
mov
add
inc
leave
cmc
and
fstp
mov
iret
loope
jae
jge
dec
jmp
push
pusha
jge
add
sahf
cmp
out
mov
mov
pop
lock
mov
xor
sar
lds
and
push
inc
mov
add
jmp
xlat
adc
clc
push
sbb
mov
js
adc
xchg
cmp
jno
jmp
lods
cli
and
mov
cmp
mov
stc
stos
popa
push
test
ret
test
dec
jp
iret
pop
mov
xchg
jle
stc
jle
pop
sub
pop
pop
sub
push
in
or
jae
test
mov
cli
jbe
and
repz
mov
pop
or
xchg
adc
push
dec
loopne
mov
cmps
popa
int
sub
push
std
push
imul
cs
mov
jp
push
jae
cmc
mov
pop
sub
mov
dec
pop
push
imul
add
gs
popa
shl
adc
int
mov
(bad)
dec
ror
cmp
inc
cwde
or
ins
out
pop
retf
mov
push
jno
inc
rol
leave
add
pop
daa
mov
and
inc
lea
cwde
sahf
jno
or
mov
mov
dec
mov
jmp
cmc
mov
mov
mov
data16
mov
mov
jns
fcomp
pop
or
mov
sbb
lds
loop
jmp
pop
push
sbb
pop
ror
xchg
push
xchg
mov
leave
add
xchg
adc
pop
add
sbb
sub
movs
pop
sti
loope
call
lock
mov
mov
cwde
add
cli
ins
cli
add
pop
neg
add
pop
ja
sub
cwde
nop
mov
loopne
cmp
or
pop
sub
sahf
push
lahf
sub
jno
pop
add
mov
cmp
inc
arpl
push
adc
ds
or
adc
or
not
dec
jge
es
jb
loope
mov
push
cmp
inc
or
push
cmc
sbb
sub
in
cmps
popf
inc
clc
stos
jmp
xchg
mov
out
gs
lock
inc
cli
movs
daa
xchg
repz
push
jo
mov
call
test
fcmove
fwait
xor
xor
inc
jnp
xor
and
jp
xor
push
cld
sbb
dec
popf
mov
stos
inc
pop
mov
leave
ss
pop
add
mov
pop
or
and
pop
pop
in
loop
pop
or
dec
fmul
popf
push
ret
xchg
hlt
movs
mov
push
add
loop
jne
aad
nop
icebp
mov
mov
and
cwde
xchg
dec
jno
out
cs
out
mov
cs
aaa
loope
push
sar
into
pop
outs
mov
cwde
call
out
adc
sub
ror
popf
push
ins
and
and
das
jmp
fcom
pop
inc
imul
adc
mov
idiv
in
push
xchg
sub
outs
outs
std
out
and
not
jne
stc
iret
aas
jns
jg
sbb
test
loopne
jg
pop
jb
data16
pop
std
loop
pop
mov
in
out
xor
int
sbb
pop
xor
add
add
(bad)
les
dec
outs
call
lds
cmps
mov
add
inc
movs
(bad)
not
sti
(bad)
movs
jp
dec
add
pushf
sub
sub
sbb
fs
push
dec
inc
pop
fsubr
sbb
push
xchg
mov
shl
xchg
jp
nop
add
test
(bad)
xor
mov
popf
cmps
and
xchg
test
adc
ss
out
add
lods
sbb
(bad)
not
mov
imul
add
inc
pop
add
mov
lods
inc
aad
adc
clc
add
stos
pop
arpl
inc
mov
ins
dec
pop
shl
bound
cmp
mov
imul
mov
cmp
jl
push
jl
adc
rol
xchg
aaa
and
pop
iret
dec
inc
arpl
xor
aad
and
lahf
mov
lea
ret
(bad)
stos
das
(bad)
xchg
pushf
sub
xchg
adc
mov
cwde
xor
or
jmp
inc
pop
xor
movs
pop
in
sbb
dec
xor
mov
sbb
push
cmp
jp
hlt
out
cmc
sub
pushf
fld
mov
mov
sar
(bad)
mov
std
mov
push
mov
lods
cmp
xor
aas
xor
iret
arpl
in
(bad)
cmp
loopne
jae
movs
pop
or
and
jmp
jbe
dec
sbb
fdiv
jae
out
es
or
xor
cmp
loope
jge
mov
jge
scas
or
dec
jns
pusha
mov
fadd
scas
xor
xchg
addr16
stos
mov
js
lods
pop
sbb
(bad)
lds
daa
xor
cmps
mov
jne
js
xor
sub
cmp
jno
mov
iret
jbe
xchg
xor
jnp
xlat
xor
lods
add
ins
pop
push
movs
mov
mov
ret
mov
mov
jbe
fnstcw
bound
call
fisttp
mov
cmps
push
(bad)
nop
inc
cli
fnstcw
inc
xor
xor
jp
add
pop
dec
push
or
jb
dec
test
sub
jb
leave
push
or
fwait
fs
jns
aas
mov
dec
inc
jp
jp
xchg
repnz
lea
inc
and
clc
stos
sub
(bad)
xchg
mov
popf
aaa
push
sbb
arpl
icebp
add
(bad)
push
(bad)
jg
xor
jg
int3
(bad)
mov
push
and
in
push
sub
pop
jg
xchg
xchg
pushf
addr16
hlt
pusha
scas
pop
cmps
xor
and
cmps
or
xchg
das
add
cmp
push
pop
push
dec
push
daa
and
mov
sbb
push
jno
(bad)
mov
sbb
pop
sub
test
pop
dec
xchg
scas
pop
inc
push
and
fcomp
jl
mov
dec
cmp
daa
adc
(bad)
push
es
xor
mov
cmp
sbb
mov
cli
aas
outs
shr
inc
push
mov
aad
aam
ret
xchg
cmp
jo
sbb
test
mov
lahf
sti
mov
(bad)
sub
loop
push
jg
inc
fwait
sbb
in
test
data16
inc
arpl
xor
jmp
mov
cwde
mov
add
mov
pop
fucomip
sbb
iret
and
inc
push
mov
enter
scas
or
test
mov
(bad)
mov
adc
push
mov
mov
outs
cwde
outs
fs
bound
fadd
inc
retf
leave
mov
jecxz
push
xor
adc
loop
mov
stc
jl
nop
idiv
xchg
jmp
lods
jl
xchg
rcr
(bad)
sbb
cmp
add
jmp
mov
(bad)
ja
js
push
psubsb
ja
mov
fcomi
popf
movs
aaa
dec
xchg
cmp
mov
les
ret
pusha
inc
in
xor
and
sub
xchg
pop
xchg
cld
inc
adc
inc
jae
push
inc
jbe
cmp
add
adc
xor
and
aas
sbb
rol
shl
inc
xchg
ror
mov
test
push
lods
pop
div
ja
xchg
sbb
std
jmp
fs
add
je
xchg
add
movs
mov
movs
pop
out
nop
mov
xor
sbb
repnz
push
mov
das
mov
jmp
movs
cmp
push
and
pop
pushf
mov
retf
push
pop
pop
and
js
push
int
je
adc
cwde
pop
lea
outs
mov
adc
jl
test
not
rol
ficomp
inc
ja
mul
mov
cmc
jp
scas
adc
adc
daa
push
ret
int3
loopne
das
mov
push
cmp
mov
data16
(bad)
sar
outs
lods
mov
std
int3
imul
xor
sub
push
mov
cmp
in
dec
fcmovu
lods
clc
push
jmp
xor
cdq
out
inc
dec
aad
in
test
push
sub
pop
(bad)
hlt
dec
xchg
dec
in
push
jl
ss
push
cmp
mov
add
pop
jnp
adc
int
loope
(bad)
xchg
jmp
retf
mov
mov
shl
stos
rcr
inc
(bad)
jnp
ss
and
mov
mov
add
cmps
(bad)
rcr
sbb
mov
mov
dec
leave
or
xchg
pop
add
xchg
out
xchg
adc
cli
loopne
add
dec
xchg
iret
scas
xlat
mov
test
rol
push
cmp
pop
stos
repz
push
push
or
and
(bad)
shl
jbe
jno
rcr
popa
mov
jmp
mov
mov
and
call
dec
ss
push
mov
into
mov
test
add
into
jae
mov
je
pushf
aam
test
or
out
outs
add
mov
pop
repz
retf
and
xchg
jecxz
xor
xor
jge
out
(bad)
ja
pop
jae
xchg
push
data16
pop
jmp
mov
sbb
aas
(bad)
jns
cs
fnstcw
lahf
mov
adc
aad
or
sbb
mov
cmp
jo
loop
pop
inc
adc
inc
xor
ja
loopne
(bad)
mov
into
data16
fadd
adc
xlat
pop
nop
in
(bad)
ror
test
mov
retf
ret
outs
mov
dec
test
mov
mov
mov
(bad)
ds
pop
jecxz
call
fwait
sbb
jae
fs
mov
inc
mov
ret
xchg
xchg
mov
sti
dec
retf
fdivr
mov
das
in
stos
xchg
sub
pop
push
and
adc
mov
iret
and
mov
pop
les
sbb
cmp
cmc
sahf
mov
jl
mov
mov
adc
stos
push
add
dec
xchg
(bad)
call
in
cld
dec
daa
data16
bound
mov
sub
ret
test
cmp
sti
add
cwde
sub
and
movs
sti
or
sbb
push
out
sub
mov
out
pop
jmp
(bad)
xchg
stos
les
daa
mov
sbb
imul
add
or
mov
jecxz
and
or
xchg
pop
jl
bound
pop
mov
mov
mov
mov
push
call
ins
ret
repnz
add
adc
jecxz
adc
add
mov
leave
or
daa
add
pusha
pop
xchg
add
(bad)
loope
mov
into
outs
stc
in
xor
sub
daa
xor
add
sbb
mov
push
sub
mov
add
call
push
mov
xchg
iret
pop
xor
push
shr
int3
and
cmp
cmp
mov
xchg
sti
nop
xor
fimul
jne
test
ret
(bad)
push
in
sub
push
cmp
rcr
xchg
dec
or
es
loop
ret
(bad)
mov
sub
xlat
fnstenv
ins
sbb
inc
paddusb
test
fdivr
xor
push
stc
test
pusha
(bad)
dec
sub
(bad)
pushf
out
sub
pop
xchg
xor
stos
(bad)
push
jbe
mov
shl
xchg
cs
jge
ret
jae
out
cmp
mov
sbb
mov
sar
mov
mov
int3
sbb
stc
sub
fdiv
das
mov
cli
cld
ins
mov
cmc
mov
shl
fistp
inc
pusha
jmp
xor
xlat
sbb
mov
(bad)
nop
iret
shl
clc
push
stos
out
in
adc
imul
popf
sub
lods
mov
in
fistp
movs
mov
loopne
xchg
mov
xchg
icebp
pop
(bad)
sar
add
or
ret
mov
or
movs
ins
adc
hlt
stc
imul
pop
and
pusha
lods
dec
cwde
xchg
mov
mov
es
gs
sar
loop
aas
and
pop
or
and
dec
mov
not
ror
call
cmps
in
or
jmp
int3
dec
lock
pusha
icebp
pushf
es
in
outs
push
dec
dec
cdq
cmp
mov
bound
in
push
mov
shr
push
dec
dec
popa
sub
scas
sub
sar
fs
mov
mov
mov
mov
js
in
pop
mov
add
push
retf
cmp
add
(bad)
icebp
jecxz
mov
mov
jo
por
movs
aad
and
pop
daa
(bad)
pop
inc
call
jmp
sub
push
arpl
mov
and
nop
pop
jecxz
xchg
and
test
sbb
ins
sar
sub
cdq
ja
lea
cld
cmc
in
call
test
push
int3
mov
mov
or
jmp
mov
adc
jmp
add
(bad)
outs
jg
lock
xchg
mov
inc
nop
ss
xor
jmp
inc
dec
cwde
push
mov
cmps
inc
xchg
push
jg
ror
cmc
dec
cmp
sbb
add
jle
cld
push
stos
or
ja
adc
mul
imul
lds
inc
pop
push
cmp
into
ret
retf
cmp
jge
and
cwde
inc
arpl
fisttp
xor
cmp
int3
inc
and
(bad)
xchg
jns
jo
stos
call
jb
dec
daa
push
jae
jmp
shl
xchg
pop
inc
cdq
inc
repnz
(bad)
(bad)
in
daa
mov
or
mov
sub
shl
push
sbb
inc
(bad)
in
or
imul
das
mov
dec
psrlq
fnstcw
outs
scas
mov
xchg
imul
retf
stos
sahf
pusha
es
and
data16
sub
or
clc
inc
es
fistp
xor
call
in
stc
push
es
cmp
hlt
into
mov
(bad)
mov
pushf
call
pop
scas
inc
mov
lock
add
dec
movs
cdq
mov
cmp
jmp
call
lahf
enter
mov
fwait
in
leave
sub
int3
push
sbb
aas
xor
es
retf
mov
sub
dec
sbb
inc
lods
pop
xor
mov
add
inc
pop
push
cdq
int
and
adc
sbb
lahf
ds
lods
dec
fldenv
sub
fcmovbe
xchg
clc
call
out
mov
idiv
adc
aas
sahf
add
mov
lock
fidivr
jns
sub
(bad)
adc
xor
icebp
xchg
sbb
sub
mov
mov
mov
scas
js
mov
test
icebp
mov
xchg
in
imul
cld
fild
jns
je
js
or
stos
jmp
add
in
ficom
push
dec
aas
mov
(bad)
nop
inc
mov
push
cmp
or
rcr
sbb
push
mov
pop
repz
imul
out
inc
hlt
sub
mov
fdivr
je
out
dec
scas
xor
cmp
and
add
pop
cwde
fst
fst
pop
mov
push
cwde
jae
inc
inc
call
dec
mov
or
sbb
xor
pop
push
ds
mov
jg
cwde
and
or
and
test
fwait
cmp
cmp
lods
mov
sbb
mov
repnz
scas
adc
pusha
xchg
pop
xchg
fisubr
int3
inc
out
daa
cli
dec
mov
jge
sbb
xchg
push
xchg
adc
cmps
aas
pop
rcr
jmp
inc
sbb
retf
cmp
xor
(bad)
fcomp
dec
mov
adc
pop
push
inc
dec
adc
ins
sbb
cmps
cmps
js
sahf
loopne
test
inc
in
mov
cmps
repz
pop
push
dec
push
mov
addr16
add
dec
mov
(bad)
cmp
add
pushf
mov
mov
pop
pop
jb
sub
shl
inc
scas
pop
std
movs
or
and
mov
pop
out
adc
push
shl
pop
xor
jae
xchg
xor
fcomi
xchg
pop
or
ficom
mov
nop
push
push
mov
dec
pop
sub
cdq
outs
cmps
inc
mov
arpl
mov
add
addr16
add
enter
xchg
rcr
and
and
shl
stos
movs
ss
push
xchg
and
popa
div
mov
or
in
mov
clc
fs
in
mov
(bad)
les
test
sbb
ins
test
clc
cmp
push
ror
sbb
sti
loop
and
shl
and
cmps
cmp
int3
clc
aas
sbb
sbb
adc
nop
cmp
lds
movs
jmp
lock
mov
push
les
jae
test
retf
mov
das
dec
xor
outs
sub
jmp
sar
mov
xchg
inc
pushf
jmp
mov
test
sub
div
loop
or
fnstsw
clc
enter
or
call
mov
fnstcw
cmp
adc
stos
adc
ins
mov
and
jns
sbb
arpl
pop
adc
in
jmp
lods
sbb
(bad)
(bad)
into
mov
stc
inc
js
inc
fdivr
mov
jge
or
xchg
cmps
retf
mov
push
fmul
adc
xchg
fmul
inc
mov
sub
inc
outs
add
push
jg
mov
and
jl
jmp
cwde
lahf
enter
int3
cld
aad
inc
outs
cmp
dec
popa
fwait
ins
xor
jp
xchg
mov
shl
cmps
je
push
inc
mov
xor
inc
sub
adc
pop
xchg
dec
or
arpl
mov
stc
addr16
fadd
or
mov
pop
or
fild
and
pushf
jmp
movs
push
jmp
out
out
inc
(bad)
mov
cdq
mov
sti
and
nop
cwde
bound
add
jge
les
dec
fdiv
and
or
xor
push
push
mov
or
aas
setl
(bad)
inc
mov
jp
call
pop
loopne
outs
int
or
into
or
out
repnz
cmp
cs
jmp
inc
call
aad
add
xor
popf
mov
fs
nop
and
aaa
fist
jae
bound
xchg
mov
dec
daa
bound
push
add
stc
cmps
inc
popf
jnp
in
sahf
movs
pushf
xchg
mov
inc
push
sbb
dec
xor
and
int
mov
adc
xor
jge
inc
adc
scas
or
cli
or
fsubrp
push
std
mov
sub
pop
xor
inc
movs
adc
cmp
inc
mov
xor
mov
mov
cli
cmp
in
int3
inc
es
mov
jae
pop
inc
push
mov
lea
fucomp
pop
inc
enter
aam
imul
xchg
aam
shr
xor
stos
call
sti
push
shl
imul
mov
loopne
js
mov
cmp
jno
repz
cmp
cmp
rcl
push
je
int3
popa
cmc
ins
loopne
fdivr
xor
lods
lahf
rcr
outs
xor
mov
and
(bad)
aad
mov
xor
or
into
out
gs
jge
js
add
cmp
sbb
stos
mov
stc
sbb
call
mov
jmp
stos
(bad)
loope
ins
imul
in
cmp
or
stc
push
leave
lds
jnp
scas
push
dec
cmp
data16
ror
pop
inc
cmp
jnp
fistp
fcomp
mov
out
xchg
jg
cdq
adc
ficom
dec
nop
pusha
pop
dec
pop
and
js
sbb
push
in
int3
lea
and
js
mov
add
mov
lods
inc
in
mov
mov
rcl
sbb
dec
sub
imul
aaa
aaa
pushf
xchg
das
repz
(bad)
mov
pushf
cmp
jg
into
push
das
cs
sbb
mov
pop
push
inc
dec
cld
xor
mov
shr
daa
xor
rol
mov
adc
and
and
push
xchg
xadd
jp
inc
or
ins
repnz
push
xchg
(bad)
ins
xor
pop
mov
fld
shl
xchg
cmp
jp
xlat
in
mov
jb
sti
jne
scas
add
mov
mov
test
not
shl
jg
hlt
push
es
clc
or
in
cmp
fcom
push
pop
in
in
dec
jnp
fnclex
sete
sti
pushf
mov
add
lds
mov
dec
mov
into
test
xchg
test
sbb
loop
sub
inc
pop
gs
mov
push
cmc
out
cmps
dec
xchg
push
jge
sbb
cmp
je
xchg
mov
sar
cmp
out
cdq
add
mov
popa
stos
fidivr
and
lea
enter
pop
fs
out
dec
aaa
mov
in
mov
lds
cwde
xchg
jmp
inc
push
lock
dec
sbb
cmp
mov
out
pop
ds
xor
ret
ret
inc
xchg
cdq
popa
sub
loopne
imul
(bad)
fisttp
cld
and
pop
xor
mov
ffree
mov
push
and
das
push
ss
xchg
mov
shl
inc
cmc
test
cmp
seto
sub
cli
(bad)
mov
int3
jl
pushf
aas
mov
and
or
repz
(bad)
mov
mov
jmp
cmp
in
clc
inc
shr
mov
and
and
sar
xchg
out
clc
data16
mov
fcmovnu
and
mov
push
outs
adc
es
pop
sbb
sub
fabs
movs
and
jle
xchg
mov
fidivr
mov
xor
aas
in
fcomp
jp
and
mov
sbb
pop
daa
cmp
push
rcl
mul
xchg
out
fnstsw
dec
shr
cmp
pop
pop
jg
jbe
es
(bad)
pop
dec
fcmovbe
cwde
jecxz
lds
stos
mov
imul
mov
jge
outs
(bad)
xchg
cmp
mov
ret
push
in
jmp
xchg
test
(bad)
(bad)
and
iret
dec
mov
scas
mov
jmp
xor
xchg
xlat
mov
cmp
mov
fcomp
(bad)
mov
out
cmp
dec
mov
inc
add
into
loopne
sub
sbb
jns
or
aam
jns
inc
mov
jo
mov
in
lock
mov
leave
inc
aam
sbb
inc
sub
mov
ds
and
xchg
sub
inc
inc
sub
and
push
es
mov
xor
leave
pop
jmp
fsubr
or
imul
call
rcr
jmp
adc
stc
imul
mov
fwait
retf
xor
and
add
cmp
cmp
cmps
iret
sub
addr16
shr
sbb
jmp
xchg
sub
je
adc
inc
and
lds
popf
sub
test
out
pop
fbstp
outs
cmp
cmp
sti
ja
dec
xchg
push
and
fidiv
mov
dec
adc
mov
fdivr
fmul
movs
rcl
repz
or
(bad)
ins
cld
and
cmp
loope
cmp
mov
into
add
jl
inc
mov
test
sti
inc
mov
and
shr
dec
fadd
jge
jbe
lods
(bad)
and
popa
mov
fs
(bad)
xchg
pushf
(bad)
xor
dec
in
push
inc
stos
pop
jge
and
fwait
leave
mov
xchg
mov
sbb
sbb
xchg
cmp
pop
lea
fsubrp
inc
mov
ins
inc
add
mov
jnp
addr16
dec
sub
iret
pop
pop
clc
cmc
push
aaa
fucomi
dec
mov
jle
lods
jl
in
enter
pop
mov
int3
xor
add
mov
xor
mov
stc
aas
dec
push
adc
push
in
mov
pop
lds
push
fwait
inc
pop
cwde
jb
fcmovb
add
sar
stc
sbb
lods
fisubr
(bad)
out
cld
fstp
dec
sar
or
adc
pop
test
lea
xor
adc
push
pop
jge
loope
test
std
in
jl
and
cmp
pop
adc
push
and
aam
xchg
adc
jno
and
daa
mov
mov
movs
cmp
or
jl
cmp
sbb
xor
and
xor
stc
lahf
mov
push
dec
daa
dec
xchg
jmp
(bad)
out
adc
mov
pushf
sbb
imul
xchg
adc
movs
cli
mov
std
imul
and
mov
aad
sbb
xchg
push
xor
cmc
les
ins
(bad)
outs
je
xor
lods
outs
fnstsw
and
add
adc
call
mov
mov
jns
aaa
(bad)
out
or
ret
out
test
pop
xchg
seta
leave
sti
mov
xchg
pushw
jl
mov
inc
out
imul
xchg
ret
mov
ja
cmps
movs
cmp
outs
mov
rcr
sub
outs
cli
mov
sbb
cmps
push
push
mov
jp
mov
out
loopne
mov
cli
mov
mov
pop
jae
push
dec
cmp
mov
pop
out
mov
pop
out
push
stc
jno
ret
clc
imul
ja
(bad)
cwde
lahf
cmp
or
xlat
mov
jnp
sbb
adc
push
jecxz
popf
inc
out
adc
ret
call
clc
pushf
pop
mov
fist
add
inc
or
movs
aas
popa
cmp
cdq
xchg
jmp
imul
cli
push
loop
lods
pop
fld
pop
push
mov
or
sti
sti
hlt
xchg
or
cmp
jmp
xor
push
hlt
dec
and
push
pop
xchg
out
ja
push
inc
xlat
sub
(bad)
fisub
cmps
test
je
les
imul
test
lahf
movs
shl
push
cmp
retf
mov
int3
and
jp
gs
xchg
dec
pop
mov
push
data16
test
fsubrp
jp
jmp
ret
sbb
ret
and
pop
push
mov
imul
test
push
adc
ss
jp
shr
test
sbb
mov
jnp
in
pop
mov
popa
pop
repz
pop
xor
jno
repz
add
fsubr
movs
and
adc
and
pushf
ficomp
sub
mov
stos
xchg
push
inc
clc
cli
imul
mov
mov
pop
sti
jbe
addr16
outs
push
ins
jb
test
in
fnsave
mov
xchg
in
shl
mov
push
enter
das
out
lea
stos
jl
dec
icebp
pop
(bad)
fiadd
adc
fs
mov
(bad)
ja
popf
inc
mov
pop
in
and
jg
dec
popf
movs
push
jnp
push
cwde
in
dec
mov
and
inc
daa
mov
in
add
test
push
dec
mov
or
fld
jmp
pop
xlat
cmp
add
or
cmp
in
mov
call
scas
outs
push
cmp
js
xchg
dec
pop
mov
cmp
fmul
pop
add
jns
add
test
push
xor
sub
imul
adc
push
loopne
cmps
cmp
popa
repnz
bound
iret
or
mov
ror
add
pop
dec
push
cwde
dec
pusha
out
(bad)
ret
out
aaa
ficomp
add
je
mov
cwde
ja
out
sbb
inc
adc
mov
sub
and
mov
xor
stc
push
sbb
pop
out
cdq
cdq
or
aam
xor
test
dec
out
cmps
lock
jae
cli
xchg
loopne
mov
fisubr
and
pop
fst
xchg
sub
cmps
add
inc
cmc
test
adc
imul
mov
cmp
ins
adc
fcompp
aaa
push
ret
mov
(bad)
xor
div
(bad)
adc
fisub
es
cwde
xor
mov
mov
mov
xchg
ss
jne
(bad)
sti
sbb
(bad)
and
dec
jnp
add
cmp
loope
push
inc
sub
iret
push
movs
ds
daa
jae
loopne
enter
mov
rol
test
ficom
cmps
jmp
repnz
(bad)
sbb
test
inc
push
xor
int3
mov
push
and
in
and
or
retf
add
inc
lods
push
in
pusha
xchg
lock
and
dec
fisub
mov
fist
xchg
pusha
mov
xchg
jp
push
pop
les
dec
mov
adc
pushf
arpl
pop
cmps
sub
loopne
inc
shl
out
leave
push
pop
jmp
int
pop
call
push
sub
mov
xchg
or
or
push
fwait
dec
xor
lahf
ror
stos
inc
pusha
push
(bad)
jmp
sbb
add
mov
mov
pop
stos
xor
sbb
sub
bnd
sub
retf
dec
mov
dec
fdiv
xor
rol
mov
sbb
jmp
imul
push
push
push
cmp
aad
out
cmc
scas
inc
pop
bound
mov
loop
mov
std
push
hlt
mov
push
mov
ja
jo
mov
or
jl
pusha
es
(bad)
xlat
loop
je
pop
push
imul
push
loop
test
lods
and
pop
push
ins
sbb
pop
aad
pop
fmul
add
cmc
loopne
stos
mov
or
add
push
std
clc
inc
sub
data16
call
mov
dec
push
lods
mov
push
pop
fnstenv
sar
addr16
hlt
fnstenv
(bad)
out
adc
jbe
adc
push
inc
ret
movs
shl
jmp
adc
call
add
clc
pop
mov
cmp
rcr
add
or
dec
cmp
xchg
out
fs
mov
cmp
adc
cmp
mov
mov
adc
or
fldpi
jbe
pop
push
adc
pop
ret
mov
push
fstp
add
dec
jmp
xor
cdq
dec
mov
xchg
sbb
jno
dec
cmps
jmp
popf
mov
fldenv
loopne
cli
sub
jecxz
jg
adc
mov
in
repz
xchg
data16
xlat
iret
or
ss
(bad)
neg
fist
outs
add
sub
or
mul
mov
push
outs
imul
(bad)
adc
dec
jae
jmp
mov
xchg
xor
lahf
add
jp
sbb
xchg
retf
out
push
jmp
test
dec
jecxz
xchg
leave
enter
jl
xor
ds
xchg
ins
pop
ins
fld
retf
fbstp
sub
fidivr
rol
sbb
into
cmp
xchg
lods
adc
repnz
hlt
cmp
loopne
add
jno
outs
jnp
fcomip
cmp
(bad)
cli
mov
and
add
in
repz
xchg
popa
aas
pop
imul
mov
pop
fnstenv
and
cmps
idiv
fcomp
jl
push
pop
call
and
pop
sbb
hlt
icebp
pop
mov
lock
push
arpl
test
sub
sbb
sbb
shl
push
jnp
mov
mov
repnz
inc
push
or
fbld
ret
mov
test
and
rol
or
dec
mov
xchg
ss
gs
dec
inc
outs
gs
aad
lods
dec
mov
jp
lods
push
mov
add
aam
push
sbb
mov
repz
xchg
push
sub
shl
test
sbb
test
fcom
outs
bound
stos
adc
cmove
ficom
outs
cdq
icebp
jae
fldenv
outs
mov
jbe
ins
lods
nop
outs
(bad)
out
xchg
xor
pop
pop
imul
ud1
and
mov
pop
dec
xchg
ret
adc
pop
sti
xchg
repnz
shl
sbb
sbb
sahf
jmp
icebp
je
ins
(bad)
out
pop
out
mov
lahf
xor
stc
mov
adc
lds
in
pop
xor
sbb
xor
cli
pop
push
fidivr
xchg
enter
and
add
pop
stos
fcmovnu
xchg
push
fistp
xor
or
call
pushf
dec
mov
jmp
dec
pushf
mov
push
jmp
mov
cmp
cmp
daa
aam
xchg
mov
jne
test
push
cld
pop
in
push
(bad)
cmp
add
leave
cmp
push
push
push
push
adc
cmp
cwde
add
add
outs
jae
aaa
cmp
scas
hlt
arpl
ficomp
out
cmp
imul
lds
ror
adc
sti
fwait
xor
scas
or
cmp
ins
stc
int
in
inc
aam
jl
movs
retf
push
or
push
or
cwde
sub
xlat
xor
xchg
loopne
jne
lods
cld
pop
stc
sub
pop
cmp
mov
nop
sub
fistp
inc
sub
retf
xor
repnz
daa
jge
shl
inc
xor
mov
jg
cdq
or
(bad)
push
pusha
and
iret
mov
cdq
out
or
out
jno
or
std
jge
dec
fidivr
or
pop
sbb
add
pavgw
jae
loope
and
lods
push
lods
pop
dec
mov
aas
jnp
mov
adc
(bad)
mov
jg
jns
inc
push
adc
inc
mov
js
mov
rcl
fisttp
shl
mov
dec
neg
(bad)
mov
xor
nop
out
test
dec
pop
push
call
inc
mov
test
clc
es
mov
ins
push
jns
jns
ja
add
ins
bound
inc
push
mov
lahf
iret
cs
add
mov
ja
jge
jno
aaa
loope
(bad)
rcr
jmp
xchg
rol
popa
inc
pop
movs
stc
call
sbb
pushf
das
in
bound
nop
daa
pop
mov
mov
jb
pop
fld
fld
cmp
push
dec
xor
pusha
inc
cmp
cld
nop
mov
inc
loop
or
sbb
push
loopne
add
imul
mov
push
sti
sbb
shr
push
(bad)
mov
mov
popa
mov
mov
xor
mov
push
jb
xlat
jge
sbb
mov
daa
aad
shr
or
ret
and
nop
and
das
push
xchg
cld
pop
and
fs
hlt
mov
mov
xchg
xor
in
retf
dec
jns
mov
test
inc
xabort
adc
pusha
pusha
mov
lods
push
sub
je
sub
xchg
psubusw
or
push
adc
mov
scas
in
js
cmp
mov
out
jb
and
jns
adc
xchg
ins
repnz
cmp
addr16
lods
sub
out
jns
cmps
das
mov
(bad)
jnp
inc
or
push
add
bound
aad
push
push
mov
xor
das
adc
pop
adc
mov
add
mov
mov
outs
into
aad
or
pop
add
dec
in
fcomp
jl
mov
inc
loope
xchg
stos
lods
xor
inc
in
inc
sbb
aaa
data16
push
xchg
cmp
rcr
lods
and
and
sub
retf
ror
shl
aaa
in
ins
xchg
xor
test
shr
jmp
mov
int
fs
test
jmp
cmp
jmp
sub
enter
xor
pusha
xor
rcr
push
int3
cdq
clc
push
or
adc
stc
enter
or
ror
xchg
sub
inc
retf
push
xchg
stc
jle
inc
jge
add
inc
inc
ds
sbb
popf
dec
cmp
fbstp
jbe
cmc
and
aas
repz
xchg
and
pop
mov
sub
jae
cli
cmps
or
out
inc
mov
inc
mov
pushf
(bad)
fldenv
xchg
or
jmp
cmps
aas
or
xchg
adc
stos
pop
pop
jle
pop
call
inc
fld
push
pop
jp
inc
mov
jo
dec
xor
repz
mov
pop
arpl
frstor
jmp
fldl2e
das
jmp
mov
push
cdq
fdiv
mov
sbb
ds
mov
test
push
push
inc
(bad)
stc
sahf
ins
mov
sbb
div
imul
push
adc
sub
popf
push
outs
es
jg
mov
sub
dec
mov
push
jno
jmp
sub
push
int3
add
mov
repnz
lds
mov
adc
outs
inc
daa
or
fimul
lds
jmp
std
mov
or
repz
(bad)
cwde
dec
adc
dec
inc
cmp
jbe
cwde
jb
div
add
sub
arpl
xchg
jnp
dec
push
bound
add
clc
pusha
mov
shr
xor
sti
inc
xor
push
sub
lea
sbb
dec
push
and
jl
out
inc
das
loop
dec
leave
dec
fs
mov
jns
call
jp
jne
jae
inc
scas
in
mov
fwait
(bad)
movs
sub
into
pusha
and
aad
mov
push
nop
sbb
out
mov
(bad)
and
sbb
mov
add
mov
retf
push
es
mov
mov
hlt
mov
adc
inc
cmc
pop
sbb
sbb
mov
or
ds
hlt
xor
mov
push
dec
jne
pop
jmp
xchg
hlt
ret
sar
call
leave
aas
daa
mov
call
stc
push
xlat
fcmovbe
cmp
jmp
nop
jp
push
mov
sbb
pop
adc
or
dec
test
iret
sub
addr16
xor
(bad)
cli
(bad)
(bad)
movs
ror
jb
jle
ja
inc
out
not
scas
dec
sbb
cdq
nop
adc
or
test
or
test
aad
push
and
or
test
adc
in
or
mov
mov
pop
inc
(bad)
pop
push
add
or
cmc
das
cld
arpl
scas
das
int
or
in
ret
icebp
repnz
imul
or
test
cmp
pop
arpl
mov
inc
and
jecxz
lods
stc
pop
mov
in
fiadd
enter
icebp
fidivr
adc
lock
or
es
sbb
retf
cmp
xor
fsubr
dec
pop
inc
cdq
je
dec
bound
jo
movs
shl
mov
frstor
mov
xor
(bad)
(bad)
cdq
add
xor
arpl
bound
ret
cmps
repnz
and
pop
xor
std
pop
inc
add
mov
shl
std
add
div
fldcw
xchg
and
and
inc
cmp
xor
adc
cwde
outs
mov
test
test
push
in
and
xor
push
mov
clc
retf
sub
and
add
push
xor
(bad)
mov
shr
fst
xchg
out
cdq
push
add
sbb
xchg
pop
fs
iret
jns
push
pop
jle
inc
or
dec
ins
cwde
mov
icebp
adc
sub
mov
mov
(bad)
mov
xchg
jnp
mov
cmps
add
adc
xor
xchg
data16
jle
mov
dec
mul
jecxz
stc
push
push
xchg
fwait
add
cmps
add
adc
push
push
inc
das
cmp
push
add
fs
mov
ins
std
iret
cmc
data16
xor
inc
pop
mov
dec
mov
repz
popf
lea
in
and
dec
repz
out
jno
wbinvd
cmp
jne
shl
shr
daa
dec
cmp
xor
cmp
test
js
push
mov
mov
pop
mov
sbb
mov
lods
jl
stos
(bad)
cmp
and
pop
fidivr
cld
mov
inc
clc
jl
xor
cmps
dec
xor
movs
sti
xor
pop
scas
xchg
pop
jno
inc
and
mov
adc
sahf
pop
adc
stos
sbb
mov
add
retf
fwait
gs
mov
mov
cmp
xchg
rcr
jmp
push
cmps
cmp
sahf
jo
mov
jb
adc
mov
rcr
xchg
mov
cmc
fnsave
sub
dec
dec
adc
lock
fcomip
jmp
jo
pop
push
dec
inc
adc
aaa
xchg
pop
mov
sbb
ja
cmps
pop
fidiv
inc
inc
fdiv
call
pop
hlt
jne
pop
xor
add
ret
repnz
push
int
and
es
mov
jmp
jno
lahf
call
fisubr
jns
and
out
and
mov
cmps
sub
xor
inc
mov
mov
mov
pop
call
addr16
repz
sub
xor
sbb
(bad)
aam
pop
jne
ins
pop
jbe
dec
call
pop
sahf
or
fdiv
daa
int
push
loopne
xchg
sbb
cmps
fimul
push
push
jg
je
push
pop
jle
push
pop
inc
mov
pop
xor
pop
leave
xor
adc
aam
jae
rcl
icebp
hlt
inc
fadd
cdq
add
sub
sbb
and
xchg
pop
scas
jno
xor
cli
push
mov
xchg
xor
hlt
push
sub
fidiv
or
mov
adc
loop
sbb
pop
pop
test
mov
sbb
xchg
mov
pop
ret
or
mov
adc
(bad)
mov
inc
and
frstor
push
sbb
scas
pop
arpl
packuswb
retf
ret
pop
lds
push
push
retf
stos
jae
(bad)
push
sub
in
ret
cmp
mov
imul
or
dec
and
and
xchg
(bad)
cmps
add
xchg
mov
jge
mov
sar
imul
retf
stos
mov
sahf
mov
mov
jmp
push
mov
mov
dec
ins
mov
push
fld
and
pop
shl
stos
mov
addr16
cdq
test
shr
fcmove
mov
cdq
inc
pop
and
stos
mov
sbb
idiv
push
and
pop
mov
mov
xchg
movaps
test
bound
scas
outs
jo
ret
ret
stos
or
add
push
jne
cmp
mov
or
jo
xchg
pop
test
jg
mov
sbb
xor
fcmovnu
jp
push
or
jecxz
push
adc
fcomp
(bad)
xchg
jb
xchg
sbb
jg
lock
or
sub
mov
sbb
pop
adc
pop
mov
dec
fstp
adc
dec
(bad)
pop
fwait
jmp
add
hlt
cwde
mov
mov
sti
clc
out
dec
mov
mov
fild
cmps
mov
xor
fist
in
cmp
(bad)
pop
sti
popa
or
jae
das
(bad)
div
rol
lods
jae
test
rcr
div
jg
sub
in
retf
adc
jns
stc
xchg
adc
data16
loopne
sar
jmp
dec
sbb
jmp
pop
and
mov
xchg
adc
ret
test
or
add
cs
adc
pusha
jns
inc
ss
xchg
ins
pop
ds
test
inc
xchg
or
outs
cmp
nop
sub
mov
arpl
imul
jp
les
in
cmp
leave
lods
je
dec
bound
dec
adc
inc
fisub
xor
jmp
dec
ins
mov
inc
adc
(bad)
in
lds
(bad)
cmps
pop
sahf
inc
mov
hlt
ficom
adc
inc
(bad)
jmp
sbb
dec
or
sbb
and
sub
mov
leave
jl
inc
jl
jge
and
popf
xchg
in
sub
jno
or
(bad)
sbb
mov
imul
cdq
jmp
add
push
pop
outs
push
or
test
sub
data16
jg
jge
sti
pop
xchg
inc
repnz
pusha
imul
ins
mov
mov
div
dec
xchg
mov
imul
sti
mov
xchg
int
jno
add
cdq
je
push
cmp
mov
out
pop
pop
sub
dec
add
sub
cmps
rcl
out
clc
sbb
xchg
daa
add
fistp
ficom
and
out
mov
(bad)
leave
add
or
aas
mov
cmps
dec
rcl
cld
push
mov
loope
push
xor
push
scas
mov
retf
push
pop
mov
ficomp
mov
lods
jb
idiv
adc
xchg
inc
mov
adc
cmps
pop
cmp
frndint
iret
hlt
inc
mov
sub
es
and
pop
into
int3
js
imul
neg
jno
sbb
cmp
cmp
js
cmps
mov
pusha
cs
adc
xchg
xor
pop
mov
jmp
adc
out
not
fsubp
pop
int3
rcr
les
loop
ins
and
cmp
stc
das
sti
arpl
jbe
mov
xchg
adc
cdq
ins
xchg
mov
js
mov
sub
fdivr
fwait
dec
cmps
outs
sub
(bad)
mov
pop
mov
xchg
loopne
out
icebp
or
and
loopne
push
push
mov
xor
mov
sbb
lahf
jns
fbstp
lahf
dec
rcl
popf
mov
mov
dec
and
stc
xchg
outs
mov
mov
mov
into
bswap
mov
sub
jmp
lds
jns
out
sub
add
lea
cmp
div
push
ret
or
bound
test
pushf
(bad)
std
gs
ss
jle
into
(bad)
out
sbb
mov
(bad)
mov
rcl
adc
dec
inc
lods
scas
xchg
xchg
call
inc
xor
int
pop
pop
pop
jae
mov
inc
fnstcw
jge
in
test
and
mov
xor
and
(bad)
data16
jns
(bad)
pop
mov
xbegin
sbb
cmp
cmp
mov
mov
es
int
pop
push
inc
mov
xchg
nop
int
stos
sub
xor
(bad)
repnz
pop
addr16
lahf
dec
movs
dec
push
in
mov
out
cmc
lock
sbb
cs
(bad)
fcom
xchg
(bad)
imul
(bad)
idiv
adc
adc
(bad)
retf
repnz
(bad)
test
clc
sub
add
std
inc
pop
sub
test
and
ret
sub
popf
jle
imul
or
lock
jmp
ss
xchg
xchg
sysenter
cld
fidivr
sub
push
jnp
jo
push
stos
cmc
leave
push
pop
ins
mov
pop
or
dec
popa
xor
arpl
(bad)
test
les
repz
imul
or
mov
aaa
or
sbb
jns
stos
mul
ja
jnp
sub
cmps
pusha
pushf
sar
aam
retf
mov
sbb
mov
cmps
fwait
div
ja
in
jb
mov
xor
ss
cmp
fyl2x
push
xchg
call
mov
sahf
mov
push
mov
and
or
stos
and
and
pop
pop
push
in
jmp
sub
mov
sbb
fsubr
mov
retf
dec
mov
fsubr
shl
adc
movs
std
aam
imul
js
push
xor
fwait
mov
scas
mov
lds
inc
pushf
fcom
xor
call
ss
pop
mov
neg
cmc
call
dec
in
ss
movs
mov
aad
mov
cli
xchg
adc
jl
fcmovnu
clc
loopne
clc
push
add
in
add
dec
aad
scas
cs
sub
popa
sbb
jne
les
test
int
jae
fbstp
retf
mov
out
jnp
cmp
ss
mov
xchg
cmp
or
inc
pop
aad
or
pop
cmps
es
pop
sbb
push
inc
call
shl
ror
mov
pusha
and
stc
out
cmp
sub
ror
jg
aam
ret
adc
xor
cmp
mov
push
sar
imul
pop
pop
imul
mov
aad
cmp
pop
mov
mov
mov
loop
arpl
iret
dec
pop
jo
sbb
adc
outs
jae
cvtps2pi
add
xlat
and
es
loop
mov
les
arpl
mov
rcl
lods
jmp
push
dec
jno
jle
push
xchg
test
dec
pop
sub
dec
into
icebp
movs
jbe
js
fadd
mov
arpl
fld
fidivr
mov
stos
adc
jp
or
aaa
cmp
enter
jno
push
aam
add
sbb
gs
cs
push
mov
inc
pop
xor
shr
cmps
and
mov
mov
inc
loopne
sbb
pop
pop
push
push
mov
sbb
imul
dec
cmp
dec
arpl
adc
fcmovnu
jl
pop
pop
gs
mov
xchg
das
gs
fadd
xchg
jecxz
test
add
adc
retf
sub
outs
cdq
push
out
mov
and
(bad)
push
loope
push
out
inc
and
hlt
(bad)
jbe
mov
and
sbb
enter
xor
mov
and
pop
add
in
into
xchg
push
bound
popa
(bad)
leave
inc
out
mov
ins
pop
xchg
loopne
push
add
ret
gs
sbb
mov
adc
adc
lods
or
cmps
mov
repnz
sbb
aam
xor
sbb
test
inc
in
dec
pop
leave
xchg
ja
in
and
cmc
loope
pop
adc
adc
xlat
into
cmp
jg
adc
jno
dec
cmp
stos
mov
push
leave
aas
movs
test
(bad)
daa
dec
pusha
out
daa
cmp
(bad)
int
jo
mov
xchg
jp
pop
pop
jecxz
sbb
mov
jl
sti
mov
dec
cmp
xchg
outs
dec
adc
imul
jle
scas
stos
out
xchg
jo
adc
inc
imul
pop
cmps
fmul
mov
fwait
sbb
mov
pusha
imul
jno
ss
cmp
pop
rcl
data16
push
std
fcmovnu
out
inc
int
cmps
fsub
stos
movs
prefetch
or
popa
loopne
cmp
jle
arpl
pop
fincstp
sar
in
aaa
adc
in
(bad)
jle
sub
xor
jecxz
push
pop
sbb
repnz
in
cmp
xchg
pop
and
inc
push
nop
sbb
(bad)
xchg
call
idiv
xor
scas
cmp
xchg
xor
adc
push
jmp
test
ds
sbb
and
add
int
cli
and
pushf
out
mov
sbb
mov
adc
xchg
shl
fst
fisubr
ret
enter
fimul
push
adc
cmp
xchg
sub
test
lea
lea
xchg
push
adc
lods
jo
mov
mov
inc
or
(bad)
in
and
adc
mov
jne
mov
mov
fs
jmp
pop
div
adc
into
out
push
cs
fstp
jmp
and
das
inc
push
mov
mov
icebp
sbb
or
push
clc
ds
dec
ret
push
push
xchg
dec
bound
aas
and
scas
cld
(bad)
jmp
(bad)
loopne
mov
xchg
push
push
or
int
mov
add
mov
mov
jecxz
jl
movs
repnz
pop
std
jb
(bad)
cs
das
mov
mov
icebp
xor
jmp
jae
mov
sbb
and
test
jbe
xchg
dec
ror
repz
xor
inc
mov
pop
imul
jbe
cmp
and
retf
xchg
lds
dec
(bad)
mov
xor
aad
daa
xchg
xor
xchg
mov
daa
dec
mov
push
xchg
inc
jmp
add
pusha
mov
rcr
stos
scas
sbb
add
je
xor
lods
jnp
cli
imul
(bad)
shr
mov
xchg
out
ins
adc
dec
cmovl
mov
mov
adc
arpl
(bad)
xor
inc
fisubr
fndisi(8087
cmp
shl
jo
test
or
inc
mov
lock
add
sub
jae
sub
scas
iret
pop
(bad)
pop
lahf
xor
daa
hlt
sub
stos
inc
out
pop
out
cmps
aad
add
(bad)
pusha
rol
sbb
sbb
dec
mov
cmp
ja
js
adc
out
(bad)
pushf
xor
sub
call
mov
and
xchg
jp
jb
imul
movs
xor
inc
sbb
mov
in
adc
shl
jo
jnp
repz
dec
cs
sub
gs
cmp
loope
sbb
sbb
cmp
sub
sbb
test
into
and
cmp
xchg
xor
fbld
call
aam
aam
push
retf
ss
pop
shl
or
ficom
call
push
sbb
and
mov
xchg
mov
mov
jle
and
xor
std
mov
or
lods
sbb
inc
out
mov
sub
sub
stos
mov
inc
imul
xchg
add
or
cli
xor
dec
xchg
cli
xor
add
mov
ret
ror
adc
fmulp
pusha
mov
(bad)
lds
inc
sub
add
jle
popf
inc
mov
stos
xchg
stc
ja
xor
pop
sub
jnp
sub
hlt
into
adc
js
(bad)
in
fsub
in
or
retf
xlat
inc
push
push
mov
or
in
xor
ret
fstp
je
jg
es
and
lods
sar
leave
daa
cmp
cli
iretw
stc
cmp
dec
dec
ret
arpl
push
repnz
pop
xlat
aam
dec
add
iret
test
stos
xor
fistp
pop
rol
in
dec
push
(bad)
fwait
in
xchg
pop
lahf
int
mov
aad
icebp
push
xlat
test
test
shl
add
mov
push
xlat
fistp
fild
inc
mov
lahf
sub
and
shl
push
push
push
aad
sbb
mov
xor
imul
idiv
nop
mov
(bad)
int3
sbb
adc
inc
out
add
shl
xchg
add
retf
ja
ret
cmp
cld
movs
jp
outs
movs
retf
add
xor
and
push
push
push
cmp
dec
rcr
add
or
mov
daa
sbb
add
ret
retf
and
mov
test
repnz
push
js
retf
loop
shl
mov
daa
jns
popf
xchg
call
in
sbb
add
iret
push
xchg
in
push
and
out
sub
hlt
daa
xchg
mov
cwde
jle
sub
xor
cmp
(bad)
adc
push
mov
sub
jns
sbb
push
in
xor
mov
pop
jns
mov
mov
jge
push
dec
cmp
or
push
cmp
jecxz
repnz
and
xchg
fwait
addr16
xor
cmp
rol
mov
jge
xchg
js
sub
push
cmp
jmp
add
inc
push
retf
repz
jb
mov
ficomp
inc
or
adc
nop
extrq
in
fs
pop
(bad)
test
or
ret
adc
add
sti
(bad)
mov
fidiv
mov
or
pop
dec
sbb
and
and
and
add
adc
popf
call
(bad)
or
lea
sbb
rol
jnp
xchg
add
or
test
fsub
iret
and
dec
(bad)
fnstcw
fsubp
lds
cs
fwait
xor
and
cli
push
fwait
pop
pop
jne
shl
dec
std
imul
mov
int
int3
jb
pop
push
mov
daa
pop
test
xor
sub
inc
fidiv
gs
retf
inc
sbb
(bad)
outs
inc
push
pop
fnstsw
sub
jne
jb
xchg
and
jmp
sbb
dec
or
popf
mov
xor
inc
add
(bad)
(bad)
jmp
outs
pushf
inc
push
imul
mov
fiadd
iret
mov
jge
inc
mov
mov
int
cmc
mov
aam
lock
adc
cmc
icebp
sbb
ja
mov
in
int
mov
sbb
in
cmp
aam
sub
dec
fcomp
xor
cmp
dec
or
and
jno
(bad)
mov
sub
mov
dec
fyl2x
rcr
jne
dec
lock
mov
sub
sub
xchg
and
test
and
jp
mov
icebp
mov
xchg
mov
fisubr
shl
xchg
int3
dec
loop
pop
repz
sub
add
in
in
jae
cwde
cwde
lahf
lea
add
jmp
mov
dec
or
int
in
scas
sub
dec
pop
icebp
pop
or
fs
inc
call
sbb
sbb
add
cli
sbb
cmp
mov
dec
fs
inc
mov
in
mov
or
dec
adc
mov
pop
out
jae
sbb
test
push
(bad)
fnstenv
(bad)
cld
pop
cmp
xor
outs
into
call
loopne
call
add
inc
in
mov
fs
outs
mov
nop
jp
mov
loope
jnp
pop
rep
mov
aam
les
enter
cdq
lock
mov
int3
test
icebp
xchg
jl
sub
jno
adc
mov
das
sbb
mov
imul
jmp
das
push
out
scas
scas
or
inc
cmp
clc
retf
cli
xor
cmp
sbb
sar
outs
bnd
and
jmp
js
in
leave
in
fmul
cmc
jle
loop
gs
pop
and
dec
or
or
push
dec
and
test
mov
or
jae
push
inc
popa
dec
sub
es
imul
(bad)
sub
aaa
or
dec
inc
push
mov
pop
test
mov
add
pushf
dec
sbb
div
and
fstp
fsubr
ja
sar
jnp
add
cmps
test
pop
mov
add
fwait
xchg
dec
iret
and
mov
ss
aad
inc
test
(bad)
fidiv
in
mov
push
push
ja
js
imul
mov
fistp
fidiv
jg
or
(bad)
cmc
pop
in
pushf
cmp
fidivr
mov
pop
bound
and
xor
inc
int3
xor
hlt
ror
sub
outs
fadd
push
std
xchg
(bad)
sub
cmp
mov
fwait
or
push
(bad)
xor
push
xchg
push
cmp
retf
sbb
(bad)
test
outs
jle
int3
adc
inc
test
or
not
cld
daa
outs
pop
mov
loop
cmp
sbb
mov
or
popa
sti
jo
stc
aad
jg
sub
inc
call
adc
inc
call
adc
pop
je
xchg
pop
shrd
gs
mov
in
xor
or
les
ds
gs
adc
retf
dec
pop
mov
cmps
cdq
push
gs
or
mov
(bad)
cld
dec
mov
add
jle
test
mov
add
in
adc
ficomp
dec
xchg
arpl
loopne
xchg
pop
jo
shl
bound
movs
(bad)
sub
das
inc
add
mov
mov
or
cmp
lods
sub
push
retf
or
(bad)
jle
stos
sub
popa
iret
xchg
out
adc
gs
jg
lods
clc
loope
fwait
daa
outs
sub
ret
or
and
lds
sub
call
dec
sbb
sar
aad
dec
call
dec
scas
sub
jbe
les
(bad)
jle
and
jb
retf
lahf
push
fmulp
rol
stc
pop
and
xor
pop
dec
rcr
not
aad
xchg
js
pushf
push
push
cmps
mov
pop
aam
(bad)
jl
mov
push
lds
mov
xchg
fcomp
xor
arpl
push
and
fisttp
pop
movs
lahf
dec
xor
push
mov
clc
inc
test
xlat
inc
jmp
ss
data16
jp
sbb
mov
or
inc
ins
sahf
in
mov
cmps
ret
or
sub
hlt
and
pop
add
fistp
ja
arpl
adc
lock
cmp
retf
call
call
call
adc
arpl
sub
cld
xor
into
bndstx
ret
test
out
xor
popf
jns
test
cdq
push
repnz
and
pop
pop
das
hlt
mul
inc
adc
(bad)
and
aas
pop
bound
addr16
cli
jo
sub
jae
sub
adc
pop
scas
retf
out
pop
inc
lds
into
dec
mov
fwait
and
xchg
in
xor
cmp
jp
push
xchg
xchg
jle
jle
ret
mov
mov
cmp
ret
push
mov
cli
imul
or
mov
fsub
into
(bad)
xchg
sub
ja
repnz
jg
sbb
shl
rol
hlt
sbb
cmp
aam
js
push
sbb
xchg
cmp
mov
adc
sbb
(bad)
test
aas
cmp
add
in
cmp
(bad)
mov
imul
sahf
sub
movs
ins
cmp
repnz
popf
push
push
mov
jl
test
ins
clc
leave
(bad)
mov
shl
rol
lods
push
push
add
or
mov
call
mov
pop
movs
dec
cld
pop
and
xchg
cmp
call
(bad)
sahf
das
fisttp
out
loop
push
dec
xchg
push
dec
jbe
aas
ror
adc
dec
mov
mov
pushf
mov
sub
addr16
jnp
iret
fidivr
push
test
pop
sub
push
addr16
inc
lods
dec
ror
and
jb
in
ret
sti
push
xchg
and
mov
jmp
xchg
mov
movs
jle
in
call
into
cmp
push
and
call
lods
xchg
jnp
test
sti
mov
test
(bad)
ficom
sbb
cmp
jne
mov
and
gs
fimul
or
enter
jne
mov
sti
ja
jo
cmp
stc
jns
sub
es
lock
pop
inc
out
leave
cmp
fmulp
shl
stos
push
sbb
mov
xchg
out
out
sub
aam
xchg
lea
or
ja
ja
push
mov
hlt
aaa
mov
adc
sbb
xor
pop
push
sbb
pop
cli
lods
push
mov
xchg
rcl
push
fnsave
dec
shr
mov
stos
push
movs
push
mov
jnp
inc
mov
jg
pop
adc
cli
das
jbe
test
adc
adc
rcr
push
retf
out
add
out
sar
imul
repz
fs
xchg
inc
ds
ja
and
out
push
adc
jmp
mov
hlt
jns
dec
add
pushf
adc
jne
aam
add
cwde
inc
mov
out
loope
adc
jmp
dec
leave
iretw
or
into
int3
adc
cmp
aas
fstp
popa
cmp
xchg
fadd
dec
fmul
ret
unpckhps
in
inc
jns
xor
mov
mov
ret
add
mov
packuswb
inc
jmp
inc
sbb
pop
adc
xor
adc
push
jmp
mov
jmp
out
jg
lds
out
or
jge
pop
cmp
int3
sub
outs
fidivr
lea
push
dec
jo
fild
or
mov
out
mov
and
inc
and
pushf
call
sbb
dec
jmp
fbstp
cmps
cmp
mov
cmc
nop
dec
cmps
mov
jbe
jmp
xchg
fstp
sbb
pop
jmp
pop
ret
inc
mov
stos
popa
jne
mov
and
jecxz
movntps
xchg
push
cmps
push
mov
add
or
and
(bad)
jmp
aad
dec
fldenv
add
and
lds
adc
add
scas
cs
cmp
sahf
push
xchg
pop
repnz
push
or
adc
add
stc
ret
jae
or
das
jle
sub
stos
pop
pusha
lods
mov
fst
and
ret
sti
call
movs
push
mov
push
fstp
xor
outs
xor
fmul
mov
sub
rcl
sub
pop
xor
mov
xor
mov
shr
jae
ss
and
or
mov
clc
out
or
or
bound
call
mov
in
outs
dec
cmp
fucomp
(bad)
jmp
and
add
popa
pusha
test
cmp
sub
or
fcomp
mov
hlt
loope
push
mov
out
and
cmc
cmc
pushf
push
dec
mov
mov
aas
fimul
xlat
dec
add
and
jno
jne
inc
mov
fs
adc
mov
ja
push
scas
push
push
leave
mov
lods
jae
out
neg
and
daa
jno
mov
cs
stos
cmp
data16
jns
fbstp
and
(bad)
repz
mov
sbb
mov
sbb
push
test
jmp
and
and
mov
lods
frstor
mov
pop
sub
mov
test
inc
dec
or
call
fidiv
or
pushf
cmp
sahf
push
enter
inc
jb
sbb
test
addr16
and
cmp
push
stos
or
pop
std
sub
ins
pop
mov
mov
and
popa
cmp
popa
push
mov
adc
cmp
jge
das
daa
inc
icebp
mov
ins
xchg
popf
mov
lods
fdivr
retf
inc
sub
adc
cli
(bad)
cs
and
stc
mov
mov
sbb
xor
inc
sbb
push
lahf
xor
or
into
loope
adc
sti
add
or
or
outs
shl
das
pusha
cmp
dec
aas
dec
sub
pop
enter
inc
stos
mov
aaa
imul
mov
sub
cs
cli
(bad)
out
mov
xchg
stc
cmp
repz
rol
xchg
ret
xor
cmp
popa
cmp
(bad)
sub
aam
push
dec
adc
jae
fbld
xor
fsub
push
xor
mov
lea
xor
test
mov
cmps
stc
inc
push
cmp
jl
loopne
jle
lahf
movs
cld
pop
idiv
add
sti
movs
push
inc
jl
ror
cli
jno
sbb
scas
mov
or
pushf
or
push
scas
pop
pop
loopne
mov
sub
std
imul
xchg
and
mov
cmps
les
sbb
sub
adc
fisttp
inc
push
and
dec
sbb
mov
mov
pop
fcmove
xchg
nop
dec
cmps
in
adc
mov
ficomp
xor
xlat
push
pop
mov
pop
mov
lock
shl
sbb
out
dec
dec
bound
mov
adc
pop
inc
adc
retf
mov
dec
sar
adc
xchg
loope
adc
test
xor
scas
cs
inc
lods
js
cld
xchg
pop
pop
int3
push
nop
mov
sub
ud2
fisub
inc
(bad)
mov
sbb
push
xor
push
ss
loop
stos
sub
inc
mov
fadd
loop
xor
test
outs
cdq
fmul
shl
int
sbb
jmp
inc
inc
frstor
repz
mov
scas
sar
mov
stos
test
sar
daa
pusha
mov
pop
jne
out
scas
mov
outs
outs
jnp
sub
cmp
jnp
push
js
shl
test
sbb
sbb
jae
fs
dec
outs
dec
jp
ficomp
dec
div
gs
sar
mov
stc
test
push
cmp
push
sub
inc
cmp
push
pop
adc
loopne
(bad)
lods
js
ret
scas
test
sbb
xchg
ss
scas
mov
push
pop
jmp
pop
mov
aad
xlat
xor
out
cmps
xchg
sub
sub
xor
(bad)
jbe
inc
sahf
or
mov
cmps
sub
push
addr16
jbe
popa
ins
xchg
aas
cmps
(bad)
xor
xchg
or
mov
xor
data16
mov
or
jns
mov
aas
jae
push
mov
enter
out
std
shr
ret
pop
sub
hlt
pop
cmp
or
repnz
int3
mov
sbb
push
test
inc
push
popf
enter
sbb
test
sti
cmp
sbb
push
or
enter
jbe
std
retf
push
xlat
jb
inc
xor
hlt
push
imul
adc
cmps
aaa
cs
xchg
xchg
popf
not
xlat
mov
out
popa
(bad)
or
push
pop
nop
lods
dec
xchg
mov
aad
mov
mov
adc
sub
in
loope
mul
dec
mov
jmp
dec
pop
pop
pop
cwde
xor
xchg
imul
sub
movs
out
rcl
jmp
test
ins
fwait
push
cmp
in
rcl
minps
mov
jle
test
imul
pop
popa
nop
adc
fbstp
jne
cmc
mov
or
shl
adc
xchg
cmps
and
fcmove
push
cdq
mov
mov
and
jne
jb
stos
inc
fmul
mov
pop
mov
pop
aam
jg
xor
aaa
test
out
mov
aas
ds
aam
jo
aam
jge
loopne
sbb
mov
or
xchg
aaa
cwde
cmp
fwait
mov
into
movs
mov
test
inc
imul
cmp
inc
ins
sahf
gs
mov
dec
test
loop
mov
aaa
jle
mov
ins
or
enter
lock
into
and
dec
test
jmp
jg
out
data16
inc
neg
mov
push
ret
sub
fistp
ja
ret
dec
dec
dec
std
xchg
pop
sbb
sbb
jae
leave
mov
xchg
repnz
xchg
dec
dec
cmps
ins
pop
adc
ins
clc
out
cld
jns
push
call
xor
test
(bad)
sar
(bad)
int3
inc
lods
sahf
dec
clc
dec
push
and
cmp
dec
push
popa
js
sbb
movs
xchg
pop
jbe
pop
adc
mov
mov
shl
les
jp
(bad)
mov
mov
sub
mov
pop
das
add
imul
(bad)
out
sub
mov
mov
das
cmp
xchg
mov
(bad)
xchg
scas
jo
out
nop
in
lods
dec
js
pop
(bad)
imul
push
inc
inc
pop
dec
cmp
or
daa
outs
pop
pop
cli
sub
mov
ja
loopne
cmp
cmp
out
in
jbe
jmp
int
ja
jg
inc
ja
imul
scas
push
out
stos
das
pop
dec
cwde
and
cdq
cmp
int
sbb
cmp
fst
sahf
(bad)
xchg
jno
pop
xor
xchg
inc
or
push
mov
mov
mov
sbb
sub
or
xchg
fdiv
jg
outs
pop
lea
mov
sbb
fdivr
pushf
mov
sbb
adc
jle
and
xor
and
mov
imul
vmovapd
fcmovu
out
cmp
mov
mov
iret
imul
xchg
call
ret
sub
or
pop
(bad)
ss
repnz
les
sbb
push
aad
ja
cmp
outs
bound
add
inc
dec
push
pop
aam
push
dec
push
in
in
in
pop
rol
test
ret
call
sbb
enter
dec
sub
call
dec
mov
fiadd
sbb
addr16
leave
jo
push
fwait
retf
test
retf
ret
mov
imul
lea
xchg
out
push
ss
push
loope
and
repz
ins
(bad)
enter
popf
fwait
mov
outs
lds
daa
out
sahf
dec
repz
sub
jb
cli
push
push
cmps
cli
call
iret
mov
ins
es
cmp
jno
mov
add
dec
(bad)
jle
stc
or
pop
pop
in
adc
out
lods
add
and
jae
inc
sti
repz
int
mov
push
out
xor
push
jp
and
mov
outs
sbb
sub
gs
xchg
mov
adc
addr16
pop
popa
mov
ins
lahf
imul
call
js
popf
das
hlt
mov
adc
mov
idiv
dec
repnz
xor
neg
mov
fdivrp
sbb
mov
xchg
push
cmp
shl
mov
test
cmp
xchg
or
hlt
add
in
daa
mov
(bad)
cmp
fsub
add
add
inc
fistp
adc
pop
jmp
cld
fisubr
aam
je
sub
sub
outs
shr
call
inc
push
cld
or
add
mov
add
sub
push
aas
xchg
jp
(bad)
fucomip
stc
fwait
or
call
repnz
inc
xchg
sbb
inc
repnz
or
push
dec
cmps
and
fisttp
adc
rcr
inc
das
shr
fisttp
jnp
or
and
add
pop
dec
les
jl
jbe
pop
(bad)
mov
scas
pop
sub
fcomp
fs
jmp
lahf
hlt
mov
lea
jle
push
sub
xor
ret
inc
in
sahf
add
aaa
xor
or
(bad)
daa
stos
ins
mov
mov
sti
jmp
fisttp
cwde
adc
or
scas
aas
scas
or
fild
rcl
push
pop
jne
ret
pop
dec
push
xor
add
or
dec
jne
xchg
stos
jmp
cs
ret
les
outs
std
or
and
aam
std
or
das
mov
sub
jns
fld1
jecxz
push
jns
sti
pop
inc
outs
mov
cmp
pop
(bad)
mov
jge
pop
or
add
fidivr
xchg
cs
pop
scas
stos
sub
clc
xor
mov
sar
inc
(bad)
loope
adc
test
sti
inc
mov
scas
daa
mov
cmp
iret
dec
and
sub
neg
inc
retf
stos
inc
pop
dec
xlat
sahf
cwde
pop
test
mov
xchg
pop
cdq
fmul
jo
jb
cmps
icebp
xchg
outs
aas
pop
push
scas
push
jo
mov
loop
xchg
xchg
jbe
cli
(bad)
jle
inc
test
inc
add
push
add
xor
mov
sbb
lods
(bad)
out
ret
cmp
mov
shr
adc
ja
ss
add
mov
cmp
push
mov
pop
mov
mov
sub
cwde
les
ins
dec
stos
aad
sub
dec
or
and
and
inc
mov
and
push
lods
cs
lea
mov
scas
adc
pop
jne
test
adc
ins
les
mov
cwde
jo
jb
out
scas
aad
hlt
or
std
cmc
adc
xchg
aam
stc
movs
dec
fmul
in
int3
cs
and
mov
mov
inc
add
loopne
arpl
into
or
adc
jae
and
repz
inc
xchg
leave
seto
stos
or
push
cmp
adc
cmp
std
dec
ds
push
stc
scas
inc
mov
loopne
sbb
jle
xor
hlt
cld
daa
jnp
dec
add
cli
ror
cli
mov
loopne
in
popa
and
scas
push
movnti
xlat
je
hlt
das
cdq
call
sbb
aaa
inc
jno
lahf
gs
in
lock
xchg
iret
shl
fisub
mov
mov
(bad)
in
adc
mov
call
sbb
or
sub
inc
adc
and
stc
stos
hlt
xchg
dec
test
aam
add
idiv
stos
xchg
push
pop
lods
add
aam
nop
fiadd
mov
(bad)
xor
mov
xor
inc
inc
jg
test
jmp
push
jnp
xchg
fidivr
cli
pusha
sbb
(bad)
jbe
fld
scas
js
retf
ins
(bad)
mov
clc
repz
test
or
daa
dec
fild
or
jns
adc
int3
adc
or
out
dec
cs
enter
enter
inc
repnz
dec
pop
fwait
repz
loopne
popf
aas
stos
repz
std
and
push
jmp
xchg
xchg
mov
mov
sbb
popf
pop
div
mov
xor
xchg
les
data16
clc
inc
cmp
or
pop
call
lock
xlat
inc
xchg
mov
jmp
pop
xor
lock
inc
test
popf
cwde
mov
push
push
xchg
inc
fisttp
cld
push
xor
jo
mov
fistp
retf
int3
out
mov
adc
lahf
xchg
inc
dec
adc
push
pusha
ret
mov
test
jg
icebp
loope
dec
add
imul
or
outs
call
outs
fincstp
inc
adc
lods
xchg
fbld
xor
(bad)
aam
fst
lods
out
bound
test
jp
and
(bad)
dec
xor
test
fsubr
inc
leave
pop
adc
ss
or
jecxz
out
and
ins
clc
jg
scas
retf
daa
mov
test
add
lods
pop
lods
out
retf
sbb
pop
fild
cwde
aam
xchg
mov
xchg
movs
pop
sahf
mov
xchg
dec
xor
mov
jo
cs
stos
test
jnp
je
push
pop
pop
and
imul
or
xor
dec
retf
and
call
dec
cmp
neg
repnz
mov
cmps
sbb
ror
sbb
in
adc
push
fs
jg
jo
loopne
mov
fdiv
aaa
cmps
mov
mov
pop
sbb
xchg
lahf
inc
mov
and
cld
loope
mov
inc
adc
jmp
movs
in
xchg
xchg
xor
retf
sbb
loope
shl
jae
popa
push
fcomp
mov
lea
and
dec
xor
jp
int3
cmp
loope
adc
ins
addr16
pop
inc
call
or
retf
and
dec
leave
shr
inc
nop
mul
in
push
in
out
jge
fcmove
clc
subps
(bad)
pop
dec
daa
xor
fs
jle
jecxz
imul
mov
jbe
or
les
sbb
ins
fstp
mov
sbb
loop
inc
out
push
push
arpl
icebp
fwait
xor
(bad)
out
je
xor
test
cmps
loope
(bad)
retf
aas
js
repnz
daa
into
cmps
ins
cli
sub
fsub
js
sub
aam
es
ss
xchg
es
imul
xchg
cld
inc
adc
sbb
mov
mov
outs
mov
sbb
sti
push
jbe
fst
pop
push
and
jb
stc
sub
dec
sub
sbb
xor
or
dec
jno
cmp
mov
jmp
pusha
daa
pop
fdiv
aad
xchg
fnsave
imul
xchg
test
scas
fcmovne
call
dec
int3
or
out
pop
ret
aam
out
mov
inc
out
mov
ins
enter
jo
push
xchg
ror
lods
and
scas
add
ss
leave
or
into
rep
cs
or
mov
or
cmc
test
jae
(bad)
nop
dec
call
int
(bad)
pushf
dec
mov
cmp
dec
dec
push
fisttp
and
lods
retf
adc
mov
mov
mov
inc
or
lods
dec
sbb
jne
clc
inc
mov
xor
test
pop
inc
outs
fnstcw
cmps
loope
iret
jmp
adc
stc
xor
cmp
loopne
rcr
jnp
fnsave
mov
add
sub
aam
cdq
sbb
rol
cmp
and
imul
or
stos
(bad)
jp
mov
fcomi
add
std
loope
aam
arpl
adc
test
stos
ret
push
test
sub
inc
inc
ret
neg
push
imul
sbb
jmp
(bad)
(bad)
iret
data16
js
imul
scas
pusha
cli
or
mov
xchg
out
in
sub
(bad)
jbe
fcom
inc
fsubr
cmovg
mov
jl
or
sbb
sub
sti
cmp
loope
std
or
xor
push
sub
out
sbb
mov
mov
test
jg
xor
jnp
imul
in
cdq
sub
ds
ror
and
sbb
sbb
xchg
adc
jmp
loop
xchg
fisub
jnp
je
ins
(bad)
je
or
daa
or
lahf
cmc
subps
xchg
std
leave
leave
aas
dec
lods
mov
rcl
pop
cdq
jp
aam
or
and
call
mov
(bad)
pop
ficom
retf
retf
cmps
inc
adc
scas
mov
mov
(bad)
movs
imul
push
dec
cdq
ror
push
add
shl
cmps
outs
push
std
iret
sti
dec
popa
cs
hlt
fldenv
js
pop
mov
cmp
push
pop
dec
sbb
je
and
inc
imul
fistp
mov
stc
or
xor
or
sub
aaa
js
out
ret
in
mov
sub
dec
pop
or
in
push
cmps
mov
jecxz
je
mov
data16
sub
sub
hlt
inc
mov
push
inc
adc
adc
xor
push
ss
push
mov
jp
cmp
mov
mov
pop
sub
das
daa
push
sub
sbb
(bad)
jmp
mov
cmc
sbb
stos
dec
ret
aad
scas
push
sbb
push
mov
repz
iret
cwde
mov
fnsave
mov
xor
movs
mov
ftst
lock
mov
adc
cmc
pop
push
push
dec
cmp
jle
lahf
mov
jne
(bad)
push
out
add
or
push
inc
mov
or
icebp
outs
jne
stc
div
in
into
push
sbb
aas
jmp
enter
jmp
sub
adc
mov
mov
fidiv
jb
sbb
mov
jg
mov
das
mov
sub
sub
jl
cmp
xchg
add
popa
es
push
js
pop
adc
lahf
je
adc
cmp
data16
jno
leave
repnz
movsx
mov
xor
int3
(bad)
mov
cmp
inc
pop
push
shl
xchg
xchg
sub
imul
and
pop
or
popa
add
cs
push
cmp
xor
out
inc
push
push
mov
loop
dec
pop
and
or
sub
stos
ins
shl
dec
add
stc
and
inc
sub
mov
pop
add
jns
aas
sbb
mov
pop
std
clc
lahf
pop
(bad)
(bad)
fdivr
mov
dec
cld
or
dec
fwait
jae
jae
int
and
inc
int
lds
adc
mov
nop
(bad)
test
push
jo
ror
ja
pop
loop
cmp
sub
adc
pop
jmp
jmp
ja
push
mov
cmp
dec
repz
loop
outs
sub
lods
push
pop
dec
leave
lahf
xor
retf
mov
int
push
lods
stos
jle
aam
fldcw
not
sahf
loope
mov
add
add
mov
hlt
popa
adc
gs
xchg
mov
jmp
mov
dec
fsubp
push
adc
loopne
lock
jmp
out
xor
xlat
dec
cmps
addr16
stc
div
cmps
push
hlt
push
mov
push
icebp
clc
push
movs
fwait
jb
loope
pusha
fmul
or
add
imul
inc
out
sbb
sbb
pop
mov
stos
mov
js
jb
and
jns
repnz
(bad)
sbb
mov
pop
add
mov
in
jne
add
mov
xor
pop
push
sahf
sub
ins
xor
scas
xor
mov
(bad)
dec
lods
and
popf
scas
out
aaa
mov
fs
shl
dec
push
(bad)
xor
ret
jmp
mov
pop
inc
jge
(bad)
adc
aaa
jno
mov
iret
mov
sub
jmp
pop
sub
nop
adc
lea
cmps
mov
push
dec
push
enter
out
lods
jle
daa
aam
jns
inc
xor
rcl
sub
stos
dec
outs
cdq
sar
out
xchg
mov
(bad)
adc
cmc
add
in
lea
push
loope
pushw
inc
pop
xor
jl
cmc
inc
arpl
mov
pushf
or
(bad)
push
std
pop
in
shl
add
sub
xor
adc
mov
shl
cmp
push
pushf
out
sbb
mov
retf
mov
xor
mov
xor
xor
dec
shl
and
ins
mov
cmp
mov
xchg
inc
aas
pop
movs
rcr
push
lea
sbb
sbb
ss
mov
sti
xchg
pusha
jmp
add
mov
fldenv
adc
and
cs
popf
dec
and
data16
loop
or
pop
jne
call
mov
gs
cmp
ds
std
shl
xor
dec
push
adc
pop
pop
mov
mov
xor
sahf
fninit
loopne
cld
mov
mov
cmp
pop
mov
fisub
mov
lock
repz
push
jmp
aas
clc
and
(bad)
lock
and
hlt
mov
jle
pusha
sbb
xchg
inc
mov
add
mov
adc
(bad)
push
pop
or
dec
shl
inc
cmc
cli
movntq
gs
pop
adc
(bad)
int
cmp
(bad)
fdiv
adc
bound
icebp
dec
leave
ret
add
fidivr
mov
and
sub
test
xchg
xor
out
push
mov
inc
out
pop
dec
jbe
jl
movs
xchg
jb
xchg
mov
daa
push
cmps
jmp
mov
out
mov
enter
loope
iret
fisttp
sbb
ret
(bad)
cli
push
sbb
gs
pop
cmp
jne
(bad)
dec
xor
js
dec
cld
aas
popf
js
dec
xchg
sbb
mov
push
mov
sub
(bad)
fstp
push
adc
fidiv
sub
aad
inc
mov
and
push
arpl
mov
popf
xchg
mov
mov
sub
pop
sbb
scas
ficom
adc
or
xor
mov
add
clc
lods
push
push
loope
and
movs
sbb
stc
in
pop
rcr
repnz
ret
jno
lods
cmp
mov
inc
xor
jp
ss
add
cmp
sahf
test
out
hlt
rcr
stc
add
lea
cmp
arpl
inc
rcl
loop
mov
and
add
mov
pop
(bad)
outs
sbb
xchg
xchg
xor
push
retf
dec
or
push
imul
scas
mov
fstp
xor
mov
repz
shl
call
xor
sbb
xchg
in
das
in
std
mov
xchg
repz
sti
fcomp
inc
and
imul
inc
push
push
or
(bad)
test
jns
lahf
xchg
cmp
push
push
jecxz
mov
mov
lahf
push
movs
ins
inc
xor
std
lods
repz
xor
sti
sbb
sub
popf
nop
scas
xor
les
fdivrp
cmc
loop
lock
inc
bnd
iret
shl
dec
mov
in
test
paddusb
push
je
cmp
iret
push
sub
dec
sbb
fcmovnb
cmp
mov
mov
cmps
add
(bad)
ins
mov
int3
xchg
lahf
mov
nop
pop
test
pop
and
das
stc
sub
push
pcmpeqb
das
popa
mov
out
out
mov
push
xlat
in
dec
mov
sahf
data16
lods
inc
loopne
jg
xlat
mov
imul
inc
xchg
out
pop
lea
pop
add
sub
push
sub
adc
push
gs
xchg
mov
cmp
mov
pop
pop
mov
call
or
xor
fs
nop
cwde
inc
pop
lahf
jbe
sbb
sub
jle
movs
stos
add
in
lods
into
xchg
jmp
add
stos
xchg
and
lods
sbb
sub
pop
pusha
lds
add
ret
mov
mov
test
fidivr
rol
mov
repz
cmps
push
mov
test
sar
cmp
xchg
(bad)
adc
out
movs
dec
aad
mov
jmp
arpl
add
xor
xor
dec
jmp
mov
pop
fistp
sub
popf
fstp
es
inc
dec
jae
push
sub
mov
out
xchg
mov
or
sar
cmc
test
add
xor
pop
sub
hlt
inc
xor
mov
call
sbb
(bad)
(bad)
mov
mov
pop
adc
fidiv
dec
xchg
out
or
or
mul
arpl
sbb
out
jmp
jmp
lods
jmp
hlt
sub
ss
addr16
jle
mov
mov
ins
xor
(bad)
xchg
jge
sti
lods
sub
lds
out
mov
cmp
loop
in
and
and
xor
xchg
dec
pusha
ret
fs
cmps
jge
out
leave
pusha
jecxz
shl
add
addr16
adc
xchg
adc
mov
and
in
clc
add
ffreep
(bad)
dec
jle
xor
aaa
xlat
mov
jb
lea
push
shrd
jmp
rcl
mov
pusha
inc
imul
call
sub
mov
mov
push
sahf
and
push
sub
fucomip
jle
fimul
ror
retf
ja
mov
iret
and
add
cmp
or
(bad)
jmp
test
or
shl
mov
ficom
and
repz
sbb
mov
push
xchg
nop
ja
lea
lock
popa
rol
das
adc
cmps
mov
xchg
call
ss
sbb
(bad)
aas
add
cli
or
xor
add
push
scas
add
push
jne
je
shl
jge
mov
cmp
shr
cmp
loop
lds
frstor
jp
xor
jmp
sub
inc
xor
cmp
fnsave
and
cmc
mov
pop
dec
jbe
outs
loop
repz
jne
pop
movs
in
mov
js
clc
sbb
pop
jbe
mov
add
loop
xor
pop
mov
push
cmp
mov
sti
std
ret
sub
js
jno
xchg
(bad)
mov
cli
push
push
in
cmp
jo
pop
mov
cmp
in
int
sbb
pop
jae
cwde
mov
ret
dec
pop
jb
mov
inc
adc
mov
and
sub
dec
inc
fwait
add
fucomi
(bad)
stos
pop
(bad)
lods
and
cmp
test
sub
jo
dec
and
sti
xchg
mov
into
inc
loope
mov
in
outs
out
cdq
mov
xchg
add
mov
xchg
mov
fnstenv
add
add
mov
mov
xor
jp
out
bnd
cmp
sub
jge
jae
cdq
pop
(bad)
and
jae
and
cmps
sbb
ret
ins
mov
je
xor
add
ins
sbb
pop
push
mov
int
add
fs
jno
scas
daa
(bad)
mov
sub
xlat
in
mov
arpl
cmp
inc
movs
leave
pop
jmp
movs
push
repnz
scas
inc
fwait
xchg
adc
pop
or
push
out
inc
mov
mov
es
xchg
cld
outs
adc
push
cld
xchg
dec
aas
cmp
jae
movs
popa
pop
scas
iret
in
ja
retf
retf
stos
xchg
les
hlt
repnz
dec
icebp
push
and
aas
outs
loopne
neg
retf
fld
adc
popa
cmc
push
add
pop
push
dec
cmps
push
loopne
xor
fchs
or
outs
(bad)
inc
in
adc
repnz
(bad)
push
popa
or
rcr
jle
mov
push
mov
cmp
mov
in
aad
push
pop
jle
adc
cs
fwait
add
ret
cmp
xchg
sbb
mov
inc
mov
(bad)
xor
clc
push
sbb
in
pop
cld
inc
bound
push
popf
rol
rol
xlat
fst
sbb
movs
inc
jb
in
out
push
stc
nop
not
jle
push
je
add
cmp
(bad)
cmc
cmp
inc
mov
shr
sbb
jmp
jecxz
push
pop
(bad)
jns
xor
mov
jne
arpl
push
push
ror
pop
xchg
dec
test
or
jecxz
pop
enter
adc
shl
aaa
cmp
dec
or
add
(bad)
push
outs
adc
ins
or
adc
shr
(bad)
(bad)
fcomip
mov
aaa
aam
out
sbb
inc
pop
sub
repz
ret
cmp
adc
cli
or
or
stos
imul
outs
repz
lods
ret
out
rol
adc
jp
adc
(bad)
outs
xor
arpl
lods
inc
add
pop
test
jns
add
repz
sub
add
addr16
or
push
mov
icebp
test
cmp
push
cmc
cmp
(bad)
sub
movs
ja
xor
mov
test
lods
mov
in
pop
mov
fild
cdq
rcl
sub
push
mov
shr
inc
add
aas
adc
jns
and
repnz
sub
imul
in
adc
fsubr
mov
sti
mov
sti
pop
cli
mov
xlat
inc
sbb
pop
pop
pop
in
popf
mov
xor
push
mov
inc
jp
cmps
gs
loopne
sar
xchg
lea
cwde
xor
add
movs
aad
movs
pop
out
push
mov
jnp
mov
sub
pop
adc
push
pop
mov
int
dec
inc
cmp
call
lods
es
mov
inc
nop
call
or
fst
xchg
sti
cmp
jl
add
ret
lahf
sbb
enter
neg
jnp
std
or
xchg
xchg
inc
mov
adc
add
ins
add
cmp
gs
repz
stc
dec
scas
push
sbb
xchg
jo
cmps
clc
sub
xchg
and
push
rcr
lods
(bad)
js
mov
stos
xor
cmps
pop
and
outs
mov
aas
int3
stos
mov
rcr
cmps
dec
ja
les
lods
dec
test
(bad)
outs
out
pop
xor
stc
arpl
push
mov
ins
imul
sbb
or
bound
jno
jb
scas
push
cmps
xor
pop
test
in
xor
mov
imul
test
pushf
std
(bad)
shl
fwait
js
out
clc
shl
inc
cdq
mov
dec
je
js
inc
clc
adc
enter
jecxz
push
push
cmp
add
ds
sub
sub
mov
je
xchg
loop
clc
and
int3
sub
std
out
xchg
or
ror
lods
dec
inc
dec
xchg
mov
inc
scas
add
cmp
jne
icebp
rcl
lods
mov
fnstenv
test
cwde
daa
movs
xchg
sub
scas
mov
mov
lock
push
gs
scas
out
stos
imul
fxch
inc
ss
sub
mov
xchg
test
mov
scas
shr
inc
test
rol
mov
int
push
test
arpl
mov
sub
mov
daa
aad
hlt
mov
xor
cli
inc
js
inc
pop
pop
lds
pusha
cmp
arpl
adc
mov
and
mov
mov
mov
inc
out
jge
ins
movs
inc
inc
nop
pushf
aad
jb
dec
xor
inc
xor
sub
lods
fnstsw
push
aas
test
inc
je
add
push
jmp
into
or
stos
jmp
imul
push
loop
inc
ds
mov
mov
xchg
imul
or
je
call
xchg
cmp
sub
aaa
lods
jecxz
mov
mov
out
(bad)
mov
loopne
xchg
cmps
fs
loop
sbb
sbb
cld
dec
adc
jge
dec
xlat
mov
mov
sbb
and
cs
call
xor
loope
mov
(bad)
lods
push
inc
pop
not
jge
lds
dec
outs
ins
aad
push
add
cmp
fist
daa
or
mov
push
and
icebp
adc
sbb
outs
dec
(bad)
cmp
and
cmps
(bad)
inc
stos
jmp
push
and
nop
xchg
xchg
sub
mov
cmp
xor
loope
xor
fadd
jg
jle
(bad)
std
sub
es
cmp
ins
pop
jge
popa
ja
mov
mov
push
adc
mov
jp
sbb
mov
jb
test
test
iret
xor
xadd
pop
mov
sbb
adc
fidiv
loopne
cs
mov
lods
sub
mov
(bad)
add
push
and
pop
xlat
popf
add
sub
movs
pop
mov
movzx
inc
fidivr
js
push
call
into
add
ins
ret
ins
mov
and
dec
adc
add
imul
loopne
dec
xchg
xor
enter
add
cmp
fidiv
(bad)
neg
sbb
fisub
in
mov
movs
pop
aaa
ins
pop
jae
jmp
lock
lods
test
(bad)
into
sub
mov
test
sub
mov
sbb
dec
lea
mov
rol
sbb
xor
mov
pop
mov
cwde
aas
test
into
icebp
adc
bound
out
jl
jl
mov
mov
movntps
test
cmp
cmps
cdq
iret
inc
sub
push
pmaxsw
xor
dec
cmp
fbstp
sub
or
stos
mov
cli
je
hlt
imul
pop
repnz
out
sbb
cmp
mov
cmp
cli
jg
adc
fist
push
(bad)
enter
adc
mov
aad
pop
sub
or
retf
pop
jns
ret
xchg
mov
popf
outs
leave
push
jg
cs
int
mov
ins
int
jo
push
xchg
aad
sub
cmps
into
xor
push
iret
cwde
add
and
ds
leave
shr
popf
pop
mov
xchg
inc
imul
cs
push
call
mov
cdq
dec
xor
jae
movs
jle
xchg
fsub
and
sar
call
jmp
pop
add
or
jl
dec
stos
xchg
cmp
ja
xchg
adc
mov
fisttp
jns
je
stos
ins
paddusw
or
xchg
cmp
mov
je
mov
bound
loop
outs
cmp
or
std
jecxz
lods
add
or
xchg
lahf
pop
arpl
jge
shl
push
cld
movs
test
cli
cmp
ss
add
iret
aad
xor
xchg
fs
mov
jp
int
and
add
push
mov
mov
test
or
sbb
daa
repz
out
push
inc
jg
and
push
fist
movs
push
mov
jb
add
sbb
xchg
cmp
xchg
xchg
mov
xor
push
outs
sub
sub
sbb
clc
fwait
push
push
jae
or
call
(bad)
ficom
jp
inc
stos
aaa
mov
push
test
lods
adc
pushf
je
test
mov
dec
lods
mov
imul
adc
or
inc
ret
sbb
xchg
mov
push
inc
loop
retf
xchg
cmp
inc
add
fucomp
js
mov
test
jp
pop
mov
inc
add
and
imul
leave
sub
sbb
retf
mov
mov
pop
xor
fdivr
in
and
and
ret
pop
outs
or
jmp
call
inc
pop
hlt
popf
xchg
cmp
add
retf
xor
fs
push
jg
cs
mov
dec
pusha
aam
(bad)
mov
ins
jg
xlat
xchg
aas
jae
mov
jb
pop
xchg
(bad)
daa
dec
call
jecxz
out
fmul
scas
movs
mov
mov
xchg
xchg
jecxz
sar
mov
addr16
ror
pop
call
lds
repz
and
pop
out
adc
scas
scas
dec
in
pop
dec
dec
xchg
lock
add
mov
sbb
xlat
aas
call
shl
test
adc
retf
mov
sti
or
mov
in
xchg
stos
push
scas
shl
mov
repnz
jae
call
dec
mov
push
dec
sti
sbb
stc
es
add
ret
int3
das
mov
cmp
ret
addr16
dec
xchg
adc
dec
adc
pop
(bad)
into
ja
nop
dec
add
inc
cmp
pop
ins
pusha
icebp
jmp
into
mov
add
iret
and
(bad)
(bad)
mov
rol
or
paddusb
je
pop
dec
cmp
lods
mov
test
popa
les
ins
inc
jns
cmp
daa
outs
and
mov
adc
rol
sbb
popf
sub
jae
ins
adc
shl
fstp
inc
fsubr
pop
bound
fwait
sub
sbb
sub
fsub
imul
in
bound
rol
stc
lods
pop
idiv
push
js
mov
cld
mov
cmp
xor
xchg
ins
xor
jo
pop
push
pop
xchg
xchg
arpl
cli
push
jge
addr16
push
or
mov
jge
call
inc
sbb
xor
fnsave
es
and
xor
or
pop
xchg
pop
sbb
stc
add
dec
and
(bad)
iret
in
mov
iret
nop
inc
jae
test
inc
sbb
fimul
pusha
xchg
jp
stc
shl
mov
ss
not
jnp
push
or
lock
mov
and
rcr
call
test
jb
cmp
fdiv
sahf
mov
not
pop
mov
arpl
add
lds
fisub
cmp
popa
cmp
sahf
out
xchg
fsub
jno
lods
fdivr
leave
arpl
mov
xor
ins
loopne
or
mov
pop
jmp
aam
call
inc
ins
mov
sub
cld
xor
sub
out
jmp
and
mov
mov
imul
retf
mov
cmp
jge
(bad)
pop
in
cmp
dec
fdiv
sub
scas
lea
mov
sbb
push
arpl
scas
imul
in
arpl
cmp
cs
inc
ficomp
jns
or
sbb
out
inc
jnp
mov
ret
adc
dec
push
or
add
cmps
cmc
push
adc
int
mov
mov
sti
fdivrp
jl
loopne
inc
imul
adc
fdiv
push
and
inc
cmp
or
loope
mov
pusha
xlat
into
popa
push
jg
mov
adc
retf
pushf
fild
cmp
or
mov
repz
jp
or
in
fcomp
xor
xor
cli
stos
push
dec
fld
push
fnstsw
scas
or
or
ja
call
daa
cmp
(bad)
outs
pop
cdq
sub
mov
dec
mov
xor
push
xchg
mov
or
scas
ret
pusha
(bad)
mov
aam
cmp
btc
adc
jb
sbb
xor
aam
ret
pop
add
pushf
imul
jbe
pop
dec
(bad)
not
fimul
jp
sub
add
(bad)
sub
sub
movs
mov
cmp
mov
pop
out
jbe
and
mov
sub
stos
sahf
fsubrp
shufps
push
popf
cmp
push
mov
arpl
jmp
sahf
out
xchg
mov
retf
das
adc
sub
mov
adc
in
sahf
call
jnp
pop
stc
add
push
ds
inc
mov
stc
cld
sbb
rdpmc
cmp
nop
mov
mov
mov
xchg
leave
xchg
pop
(bad)
mov
add
das
imul
push
les
cmp
dec
mov
(bad)
xor
movs
mov
adc
rcl
fistp
shl
push
bound
ins
sub
fistp
mov
xchg
loopne
neg
jo
mov
add
sbb
mov
sub
push
std
push
cwde
jge
imul
sti
sbb
je
(bad)
in
ss
mov
adc
inc
mov
std
and
push
push
test
sti
not
or
jmp
add
aad
mov
pop
outs
(bad)
cmovs
fist
and
es
add
std
cmp
and
gs
mov
idiv
xchg
jnp
and
add
pop
push
mov
mov
imul
pop
lock
lock
or
inc
mov
mov
sar
jno
jno
in
stos
mov
fimul
add
lea
jae
into
mov
lds
icebp
xor
fst
test
shr
fidiv
mov
cmp
fsub
xor
xchg
int
and
push
sub
xor
push
call
jecxz
jb
and
ret
pop
ja
out
cmps
into
addr16
or
xor
cmp
mov
pop
add
adc
test
xchg
fwait
or
or
cli
and
pop
stc
or
push
and
sbb
repnz
arpl
and
popf
stos
or
sub
lock
push
add
imul
and
rcl
(bad)
fld
mov
fwait
push
jno
pop
pop
sub
jnp
mov
ret
fcomp
repnz
mov
cs
lahf
jecxz
xchg
rcr
lock
ins
imul
cmp
jge
ins
loopne
pusha
lock
out
enter
mov
test
jg
aas
dec
mov
cmp
inc
movs
jg
pop
aam
adc
test
pop
(bad)
pop
adc
inc
(bad)
icebp
mov
push
sub
sub
push
fdiv
xchg
mov
cs
push
cmps
mov
and
cmp
pop
and
cmc
sub
in
retf
iret
mov
xchg
in
pop
cs
inc
aad
ja
int
inc
ja
adc
(bad)
stos
dec
sbb
inc
xchg
or
push
imul
push
fs
and
pop
adc
jecxz
ret
sbb
and
push
jge
or
neg
cdq
sub
inc
into
push
mov
pop
pop
hlt
jmp
jg
push
fisubr
mov
add
xchg
cli
ror
jbe
movs
add
addr16
cmp
inc
daa
gs
push
jbe
sbb
jle
inc
cdq
xchg
lods
mov
inc
sub
je
sub
add
sbb
jecxz
fwait
test
out
mov
cld
or
(bad)
push
bound
dec
pop
dec
xor
cmps
push
mov
addr16
mov
mov
mov
jge
out
pop
mov
aad
movs
fiadd
test
(bad)
add
push
test
es
pop
push
mov
fistp
std
sbb
dec
push
call
xchg
fdivrp
dec
and
sbb
sub
push
pop
daa
rcl
mov
aaa
fisttp
fst
ins
sub
sbb
mov
inc
icebp
add
(bad)
pop
jnp
xor
xchg
cmp
pop
ficomp
pop
js
sub
dec
or
adc
xchg
adc
mov
pop
push
mov
adc
cmp
hlt
xor
fstp
ins
add
mov
and
lods
out
and
out
imul
bnd
stos
inc
outs
pop
mov
xchg
or
inc
in
ins
and
jmp
dec
mov
rcl
(bad)
cdq
mov
add
call
jae
test
repnz
neg
ficom
call
call
out
movs
lds
leave
adc
iret
das
add
cwde
add
jmp
inc
xchg
add
call
fstp
and
push
dec
jmp
iret
(bad)
lods
sbb
xchg
sub
pop
outs
stc
mov
mov
mov
aam
xor
adc
sbb
pop
mov
xor
lea
sbb
fcomp
pop
lahf
idiv
mov
test
jns
dec
aaa
push
xchg
jnp
inc
pop
mov
push
cmps
cs
mov
into
jae
movs
mov
cs
test
add
or
imul
xchg
repz
jle
jmp
dec
(bad)
mov
fild
dec
mov
sub
(bad)
jb
cmp
jne
dec
sbb
xor
mov
sub
call
push
jecxz
pop
inc
retf
jle
out
je
arpl
xchg
int
pop
push
mov
nop
cmps
dec
cdq
gs
push
std
jmp
ficom
mov
sub
add
mov
inc
cmps
test
cmp
outs
cmc
mov
cld
mov
arpl
jbe
cs
bound
daa
sbb
dec
mov
fwait
mov
shr
lahf
push
xlat
cmp
jne
pop
mov
stc
lock
mov
xchg
jns
jle
call
addr16
sbb
outs
fimul
mov
fistp
addr16
call
movs
mov
or
jp
retf
xlat
cmc
jle
sbb
sbb
aad
and
xchg
xchg
fucom
retf
iret
push
and
mov
pop
cmp
jns
sbb
mov
xor
jno
(bad)
loopne
pop
pop
jle
push
mov
xchg
ror
mov
mov
adc
push
inc
mov
repnz
movs
or
push
jne
cli
cmp
mov
sbb
ficomp
(bad)
imul
pop
lods
and
mov
xor
or
mov
xlat
fcomi
jg
ficomp
test
ins
pop
scas
retf
fcom
cmc
sub
jg
jecxz
(bad)
mov
push
sbb
shl
out
test
cmp
xchg
ds
jmp
and
dec
cwde
jbe
inc
cmps
loope
dec
push
mov
push
fisttp
mov
cmp
jo
arpl
push
fwait
mov
add
sbb
int
jnp
cdq
or
pop
bound
xor
mov
add
das
pop
lods
jle
(bad)
arpl
lods
mov
dec
outs
les
stos
inc
dec
ficom
rcr
pusha
xor
dec
test
or
push
and
xlat
sar
sub
shl
xchg
inc
outs
dec
stos
sub
adc
cdq
enter
loop
aaa
faddp
push
call
xor
rcr
mov
sub
mov
sub
cwde
cli
out
dec
mov
sub
pop
movs
and
retf
push
mov
arpl
pop
jmp
icebp
mov
movs
fdivr
test
test
out
sub
test
push
jo
ret
mov
dec
rol
icebp
retf
neg
loope
mov
clc
cmp
add
sbb
call
cwde
jmp
imul
jl
fsubrp
push
push
dec
jmp
movs
sahf
movs
mov
or
push
outs
pop
in
call
in
jae
push
bswap
rcl
or
inc
into
jo
jmp
dec
(bad)
rol
ds
dec
out
int
or
in
cmp
cld
aad
mov
fild
cs
mov
jmp
cmp
fbstp
add
enter
jecxz
cmps
sbb
adc
aad
mov
push
dec
pop
dec
outs
js
adc
jb
inc
push
dec
cmp
xor
push
repnz
cld
(bad)
mov
ret
push
jge
mov
scas
out
xor
mov
jne
pushf
in
dec
retf
mov
rcr
adc
lds
xor
adc
mov
and
sbb
scas
fmul
mov
in
push
push
adc
scas
call
scas
mov
int3
lahf
call
mov
lods
sbb
test
aaa
xchg
test
or
and
mov
and
cmps
idiv
lods
pop
arpl
cmc
shr
cbw
divps
cmp
add
adc
jmp
push
mov
mov
cmp
gs
iret
test
pop
dec
(bad)
sub
inc
add
mov
ror
fs
mov
arpl
push
mov
cmps
repnz
push
outs
jge
sti
push
adc
mov
cmp
shl
outs
loopne
cmp
jmp
jbe
cmp
and
fst
push
stos
add
inc
cwde
add
xchg
imul
mov
jmp
adc
sub
dec
repnz
mov
xchg
push
mov
or
pop
jg
sub
cld
adc
lahf
sub
push
push
lds
push
scas
add
push
add
fucom
pusha
inc
jge
jns
pop
or
xchg
(bad)
xchg
pop
mov
fcomip
sub
inc
or
loop
out
mov
inc
mov
aas
and
(bad)
fwait
pop
push
xor
jl
lock
jg
and
sbb
retf
sub
ret
jo
xlat
rol
mov
pop
adc
in
jmp
add
out
pop
cmp
mov
fild
pop
jmp
and
cli
pop
fucomp
out
popa
fsubr
dec
cli
adc
and
mov
mov
imul
sti
push
mov
stos
xlat
in
icebp
mov
(bad)
adc
sub
sbb
sub
jno
mov
loopne
rcr
out
out
int3
mov
jae
in
in
inc
mul
repnz
xor
dec
daa
ja
popa
jmp
ficomp
push
jbe
addr16
pop
cld
(bad)
push
in
push
es
js
push
cmp
(bad)
(bad)
pop
or
ds
lods
daa
mov
mov
mov
mov
xchg
xchg
outs
or
test
inc
jmp
fisttp
fild
(bad)
adc
ret
dec
jmp
cmp
fistp
lods
pusha
xchg
dec
stc
push
cmc
out
ins
or
pop
out
popf
mov
ret
out
sbb
push
pusha
cwde
sub
cld
retf
push
cmp
push
xor
nop
stos
or
cmps
in
data16
call
mov
mov
loope
mov
mov
inc
test
or
or
outs
jecxz
pop
mov
pop
dec
sbb
sbb
fidivr
pop
enter
jge
imul
xchg
loope
xor
cmc
call
mov
dec
int3
(bad)
iret
xchg
jne
into
shl
stc
movs
mov
je
retf
inc
push
add
iret
sbb
mov
std
pop
mov
adc
or
pop
fadd
lea
jmp
push
add
aaa
out
jl
test
fsub
sub
dec
sahf
jle
or
jo
not
xor
inc
pop
aad
std
test
mov
int
push
ins
pop
mov
add
mov
push
fdivr
scas
mov
hlt
push
leave
xor
stos
int
sahf
data16
and
jecxz
out
repz
xor
repnz
pusha
mov
dec
sbb
adc
stos
std
inc
cmp
xchg
clc
aad
arpl
push
mov
loop
stos
and
sar
retf
test
mov
stos
inc
xor
fld
les
aam
or
out
shl
xchg
dec
jae
or
std
out
add
jno
xor
inc
mov
(bad)
dec
sub
enter
mov
loope
and
pop
xchg
and
pop
(bad)
fs
ds
in
in
mov
out
fist
aaa
int
cmp
out
in
ins
sahf
cs
push
jmp
adc
mov
outs
mov
mov
and
iret
(bad)
gs
ss
cmps
push
dec
outs
inc
rcr
leave
dec
(bad)
sti
adc
je
sub
int3
mov
push
cmps
out
imul
jle
adc
enter
adc
pop
mov
sub
sbb
pop
scas
inc
shr
rcr
sub
leave
and
in
add
mov
jge
mov
lock
(bad)
imul
sbb
sar
imul
iret
aas
mov
add
out
shr
aad
lods
jo
outs
scas
(bad)
ficomp
(bad)
test
cmp
lods
sti
xchg
and
popa
(bad)
hlt
mov
and
das
pop
xchg
jmp
inc
cmovge
(bad)
fwait
ror
pop
push
sub
jns
sub
pop
sub
sbb
rol
sar
ret
mov
mov
jne
fs
ss
loop
pop
leave
sahf
clc
mov
xchg
pop
repnz
outs
inc
aad
loop
adc
das
lahf
lods
sub
xchg
dec
sub
imul
or
icebp
cmp
pop
mov
push
mov
repnz
pop
jge
test
jns
push
enter
es
scas
outs
popa
int
xchg
loope
(bad)
(bad)
data16
adc
xor
sub
mov
repz
fld
cmp
ins
nop
push
jge
add
in
sbb
xor
cmp
stos
mov
loop
sub
pop
dec
jmp
adc
xchg
and
enter
pop
fld
cdq
call
fcom
dec
js
xchg
pushf
mov
dec
iret
or
fild
lock
pop
sub
push
pop
xor
inc
mov
rcr
xchg
pop
mov
push
mov
and
push
mov
mov
cdq
inc
mov
outs
adc
retf
inc
sbb
dec
ds
fcmovnu
dec
iret
imul
fist
std
adc
cmc
or
jne
ror
cmp
xor
inc
add
pop
cmp
pop
stc
mov
mov
sti
cmps
daa
push
sub
iret
(bad)
sub
cmp
ins
mov
shl
pop
pop
inc
loope
adc
mov
jmp
jnp
(bad)
push
call
or
add
mov
into
xchg
jg
popf
adc
jge
pop
jnp
jne
push
sahf
sub
add
mov
(bad)
and
sbb
mov
out
aam
mov
cmp
mov
push
mov
or
inc
std
dec
cmps
daa
jp
push
xor
xchg
mov
(bad)
mov
jl
dec
inc
cs
jns
xchg
pop
jbe
ins
or
xor
jl
sbb
or
pop
in
dec
ror
pop
ins
loop
push
ficomp
add
fadd
mov
stos
fwait
scas
or
mov
push
(bad)
push
inc
jb
dec
or
xlat
out
gs
dec
ins
pop
sub
xchg
cmp
adc
or
xor
push
imul
and
add
adc
push
mov
stos
lds
test
mov
jno
push
in
pop
inc
(bad)
(bad)
ror
push
daa
nop
xchg
push
jae
mov
mov
jmp
xchg
ss
ins
push
mov
lahf
dec
test
cmps
sahf
pop
cmps
add
push
data16
fild
cli
cmp
(bad)
sbb
xchg
sub
mov
push
push
pusha
iret
cmps
jnp
ja
imul
xor
dec
test
and
in
mov
sbb
cmp
int3
scas
adc
push
or
pop
push
or
data16
lds
(bad)
(bad)
pop
js
das
push
sbb
jbe
push
outs
sbb
test
(bad)
dec
add
push
sub
or
xchg
adc
(bad)
test
adc
push
jecxz
xor
xchg
sbb
xchg
ret
mov
xor
cli
scas
cmp
inc
ficomp
je
aad
ror
out
jecxz
js
or
xchg
out
mov
mov
sbb
inc
(bad)
sar
xor
jecxz
mov
mov
pop
push
ins
aaa
jle
xchg
mov
add
iret
mov
adc
cli
stc
jle
xchg
adc
aad
fcomp
inc
in
pushf
stos
jle
xor
inc
sub
in
pop
cwde
jg
jne
push
inc
push
ds
mov
enter
repz
mov
pushf
(bad)
stos
add
out
cmps
pop
loop
xchg
or
out
neg
fld
sbb
popa
mov
cmp
daa
(bad)
xchg
int3
or
mov
out
ins
test
test
retf
imul
fmul
cmc
sar
repz
pop
or
hlt
sbb
stos
inc
into
test
scas
ja
sti
sbb
push
dec
adc
pop
ficomp
inc
or
sub
lods
jge
pusha
in
fst
in
int3
fwait
sub
mov
pop
or
cmp
retf
in
gs
or
or
test
add
sbb
fnstenv
add
dec
cli
jmp
pop
repnz
push
inc
jnp
adc
xchg
inc
(bad)
push
jne
loopne
movs
inc
call
ror
dec
push
jae
add
pusha
jnp
stos
sub
(bad)
scas
fsub
daa
jmp
arpl
sub
out
add
jg
ror
xor
fcmovb
movs
mov
pop
push
sbb
inc
mov
mov
dec
scas
cmps
pop
xchg
xchg
sti
mov
je
xchg
addr16
push
dec
dec
xor
sub
xor
test
shl
movs
ss
ret
int3
sub
xchg
rol
jle
ins
repz
ss
pop
ficomp
outs
pop
icebp
jl
cmp
push
imul
push
cmps
movs
xor
mov
cmps
jbe
jne
ja
aad
ins
(bad)
in
fsub
aad
imul
xchg
mov
adc
dec
cmp
dec
mov
jle
xor
out
mov
shl
ss
call
je
mov
pop
jns
retf
mov
(bad)
arpl
add
pop
sbb
add
push
push
xor
cmps
inc
dec
cmp
push
sahf
xor
(bad)
(bad)
jmp
retf
inc
nop
dec
stos
xor
fwait
inc
(bad)
pusha
test
add
test
pop
cmc
mov
mov
sbb
call
inc
dec
jecxz
pop
mov
cmp
daa
and
retf
bound
nop
mov
cmps
add
scas
pop
fdivr
xchg
outs
cdq
loop
jbe
sahf
add
outs
aam
jmp
sub
sub
test
dec
or
xor
inc
or
arpl
add
aam
pusha
cmp
mov
jo
sbb
dec
pop
push
movs
dec
jne
hlt
in
lea
mov
adc
outs
jnp
rcl
ds
push
pop
xor
cdq
cld
nop
and
cs
stos
cwde
or
jno
inc
push
lods
jmp
adc
pop
xchg
adc
int3
add
iret
mov
stos
push
xchg
dec
sbb
xor
add
mov
inc
(bad)
mov
repz
sbb
into
test
xor
cmp
xor
test
mov
mov
outs
xor
pop
leave
idiv
sbb
pop
jmp
call
mov
in
push
fcom
in
out
mov
ss
cmp
lods
leave
adc
inc
adc
push
pop
push
jmp
cld
xlat
and
adc
out
dec
xor
imul
cmp
out
call
and
sub
jmp
pop
shl
adc
ret
or
mul
push
pop
add
mov
mov
shr
and
int
fistp
repz
cld
push
icebp
std
shl
add
shr
push
in
mov
and
aas
cli
rcr
outs
push
stc
dec
hlt
cmp
fcom
jae
clc
(bad)
jmp
and
push
pop
xor
inc
mov
retf
mov
rcr
lods
jb
and
in
add
sub
rol
in
in
fsub
dec
xchg
in
xchg
xlat
cmc
mov
push
pop
sub
fild
dec
dec
addr16
mov
mov
imul
mov
xchg
inc
stos
fwait
rol
cmp
clc
jno
leave
mov
or
jecxz
test
pop
adc
mov
mov
add
cdq
jge
sub
lea
inc
pcmpgtw
rol
(bad)
out
das
dec
lods
fs
repz
(bad)
pop
std
clc
push
enter
pop
cmp
adc
or
sbb
push
ja
lods
cmps
and
pop
shr
pop
push
fprem
fnstcw
mov
xor
ficomp
xor
ins
inc
loopne
xchg
imul
xchg
daa
inc
pusha
push
push
lods
dec
fcmovne
and
sti
ins
cmp
repz
and
loop
imul
push
std
xlat
test
mov
jmp
mov
dec
push
jnp
jbe
(bad)
and
std
push
scas
cmp
pavgb
inc
jp
xor
lods
adc
icebp
sti
adc
cmps
dec
lds
cmp
cdq
xchg
inc
mov
xor
mov
rcl
and
cwde
scas
scas
push
xor
and
dec
mov
push
jl
sti
cli
out
scas
pushf
cwde
and
jbe
setge
pop
sbb
xor
sub
mov
ret
mov
push
jge
stos
mov
cld
xor
aas
mov
mov
shl
mov
mov
add
das
jne
ins
(bad)
mov
cmc
in
es
mov
adc
xchg
loope
imul
leave
cs
mov
push
in
fcomi
mov
jns
int3
cmp
imul
fnstenv
add
scas
jle
aas
sbb
aad
push
aam
sbb
ds
aas
xor
jle
ss
adc
repnz
jo
push
or
ins
daa
in
xor
fsub
or
data16
push
nop
push
std
fld
inc
scas
jg
in
mov
nop
and
mov
mov
fist
mov
idiv
rcl
cli
mov
sbb
adc
add
popa
mov
lds
in
movs
pop
shl
pop
ja
dec
cmps
sbb
add
into
add
(bad)
ins
ficomp
cmps
or
inc
mov
lahf
add
shl
mov
fnsave
repnz
ss
cmp
mov
mov
jg
sbb
in
xchg
or
inc
pop
or
(bad)
xchg
aad
push
or
sbb
int3
pop
ins
fs
fcmovbe
adc
stos
mov
fsub
jno
mov
push
jns
inc
inc
jnp
xor
fcom
rcr
stos
addr16
dec
jb
pop
addr16
mov
out
aas
push
mov
xchg
mov
call
cmps
add
push
(bad)
mov
pop
outs
or
nop
dec
jo
shl
sub
add
xlat
or
mov
push
adc
ret
xchg
outs
hlt
adc
repz
lds
(bad)
push
iret
ficom
sbb
or
dec
pushf
gs
in
jmp
ret
mov
or
adc
cmp
adc
idiv
ins
test
aam
cmp
pop
repz
ficom
jo
in
sub
dec
test
add
mov
out
sub
push
jle
dec
int
mul
call
or
les
outs
push
push
fistp
or
imul
ror
arpl
out
enter
cmp
add
dec
inc
push
and
(bad)
stos
std
pushf
adc
or
(bad)
xor
mov
je
mov
jnp
dec
adc
dec
or
retf
pop
cdq
out
add
bound
sub
adc
push
cmc
and
jmp
lea
ret
dec
adc
push
pop
test
push
fcomp
mov
sbb
adc
mov
jb
les
shl
xchg
cld
leave
call
out
jmp
pop
pop
aaa
cs
jnp
xchg
jnp
out
or
mov
cmp
in
ins
popf
cwde
imul
aam
stos
jnp
scas
pop
pop
loope
div
inc
xchg
inc
mov
cld
out
test
xchg
pusha
mov
sbb
xor
jge
mov
out
fs
bnd
adc
push
(bad)
into
pop
sub
retf
push
pop
add
das
xor
xchg
push
xchg
and
mov
stos
das
xor
cmp
mov
cmps
cmps
jg
push
retf
jns
stos
jb
jmp
sti
mov
sbb
and
dec
push
loope
(bad)
adc
test
xor
sti
push
in
std
and
mov
shl
into
sti
les
xor
popa
push
imul
pop
and
loope
xor
sbb
jno
add
cmps
out
jno
iret
cwde
xor
sti
or
movs
outs
mov
call
mov
sbb
lahf
cmp
ins
xchg
push
dec
dec
(bad)
pop
push
push
adc
imul
dec
sbb
jle
mov
sbb
fwait
xchg
sbb
scas
and
push
mov
xor
or
pop
enter
xor
scas
retf
push
mov
or
cmp
mov
pop
mov
and
adc
mov
lds
stos
test
jge
and
fwait
inc
sbb
cld
xchg
imul
dec
popa
mov
or
test
xchg
iret
call
(bad)
mov
sahf
pop
mov
retf
fdivp
mov
stos
mov
push
mov
push
fistp
push
(bad)
dec
dec
or
leave
mov
outs
add
out
int3
xor
mov
fld
retf
pop
inc
cwde
or
xchg
jmp
xlat
in
shl
sub
xor
push
cmps
or
adc
adc
test
inc
(bad)
cwde
(bad)
nop
and
mov
xchg
fwait
out
sbb
lods
xor
bound
xchg
adc
in
pop
or
push
fmul
jg
dec
repz
pop
(bad)
push
jle
jecxz
jg
push
retf
mov
arpl
test
and
out
jmp
(bad)
retf
jns
out
and
mov
mov
jle
mov
dec
add
mov
push
loopne
(bad)
xchg
or
lods
out
(bad)
stos
mov
or
sbb
cmc
fisubr
sbb
add
mov
mov
daa
fnstenv
inc
frstor
xchg
movs
lahf
mov
in
push
inc
pop
mov
inc
push
pop
mov
loope
sti
ret
inc
lods
pop
dec
(bad)
push
test
mov
out
adc
cmp
push
inc
pop
push
out
pusha
iret
in
into
cmc
popa
outs
inc
adc
pop
or
sbb
cs
sbb
jle
pop
xchg
mov
outs
shr
or
mov
mov
jmp
pop
cs
push
push
leave
rol
inc
inc
ret
imul
clc
pop
je
xor
jle
sti
cmps
les
scas
mov
mov
ret
or
push
sbb
sti
icebp
jmp
gs
aad
sub
inc
movs
ret
lock
hlt
jmp
pop
cdq
cdq
loopne
mov
push
add
loopne
adc
mov
mov
xchg
hlt
add
or
xchg
inc
sbb
mov
jecxz
and
pushf
or
ret
repnz
dec
cmp
neg
fisubr
(bad)
pop
cld
cmp
jg
sub
cmps
fdiv
dec
sub
xchg
movs
clc
add
(bad)
xlat
lods
jbe
(bad)
add
xchg
fidiv
bound
pop
sar
leave
push
add
mov
dec
shr
jge
sub
mov
nop
mul
dec
inc
or
cli
bound
ret
fild
push
retf
sub
jns
push
and
inc
jg
and
xor
sbb
(bad)
mov
popa
mov
and
pushf
jg
call
inc
fs
add
(bad)
jge
fist
sub
movs
sbb
mov
test
cmps
les
cmps
hlt
cli
cmp
dec
loope
aaa
ins
bound
cli
mov
sbb
lea
fnstsw
ret
lds
les
(bad)
js
push
repz
dec
adc
ret
inc
int3
adc
daa
mov
jg
inc
fwait
arpl
adc
stos
cmp
pop
dec
jecxz
fcos
cmp
push
sub
loope
mov
fdivrp
ds
adc
mov
sahf
mov
test
mov
xchg
jmp
sbb
data16
and
hlt
cmp
cmps
(bad)
(bad)
and
dec
popa
xchg
sbb
cmp
retf
movs
mov
mov
dec
dec
push
sahf
in
push
or
and
aaa
cmp
or
loop
stc
or
xchg
push
ds
jbe
lods
xor
pop
stos
es
xor
fcomi
ins
pop
sub
xor
daa
lock
push
and
imul
mov
push
(bad)
call
adc
std
test
loop
dec
addr16
cmc
(bad)
jmp
es
leave
sbb
xchg
loopne
(bad)
in
enter
js
adc
retf
rcl
std
popf
jo
nop
leave
sub
xchg
mov
push
pushf
and
(bad)
push
push
sar
adc
dec
push
ror
sub
aaa
test
repz
and
xor
lahf
mov
mov
jae
stos
imul
jecxz
mov
jp
sub
add
sahf
jbe
sahf
lea
call
push
jmp
gs
jl
xchg
int3
dec
stc
xchg
adc
lods
lahf
cli
fisubr
xor
call
addr16
pop
mov
scas
dec
mov
test
mov
(bad)
clc
jmp
jne
mov
stos
push
call
movs
ror
add
lds
xor
mov
pop
jo
pop
xchg
cwde
mov
sub
(bad)
pop
imul
mov
push
out
and
jmp
adc
cli
push
popf
inc
stos
test
cs
out
push
popf
aaa
into
mov
push
movs
js
mov
jnp
(bad)
or
cmp
mov
ins
in
jns
inc
fisub
in
mov
ds
sbb
sub
shr
pop
in
fimul
push
pop
push
(bad)
adc
int3
xchg
push
cwde
sahf
loope
or
mov
int3
cmps
dec
and
frstor
sub
mov
popf
ds
mov
jg
ins
sub
mov
pop
sahf
not
nop
lahf
aaa
inc
jecxz
push
pop
sbb
mov
(bad)
icebp
push
aas
xor
pxor
stos
and
mov
popa
adc
add
mov
mov
sub
add
push
(bad)
cmp
sub
in
jge
mov
loop
je
leave
mov
(bad)
stc
sub
or
jecxz
push
sbb
pop
sbb
pop
cs
cmp
pop
jno
(bad)
push
and
jmp
cmp
mov
cmps
frstor
mov
fs
pop
cmp
push
or
movs
inc
sahf
sbb
xchg
dec
add
push
push
mov
out
jae
aaa
mov
pop
add
add
sbb
retf
jg
mov
push
sub
hlt
mov
in
mov
dec
push
push
loope
je
pop
mov
aad
jns
mov
loop
pop
inc
inc
xchg
and
inc
lea
jp
jno
mov
sub
sub
and
mov
loop
into
xor
adc
sub
repnz
mov
shl
xchg
add
arpl
sub
jle
fisttp
cmps
ins
xchg
arpl
dec
mov
push
sti
fcomp
cli
mov
push
push
or
stc
mov
arpl
sub
mov
fst
xchg
aas
push
ins
jbe
call
rcl
in
push
js
push
jne
jne
mov
lahf
retf
cmp
dec
jp
xor
inc
call
adc
push
mov
or
add
les
mov
test
sahf
nop
dec
push
adc
mov
clc
shl
lahf
lock
or
std
push
ret
jbe
(bad)
(bad)
jl
dec
jmp
mov
mov
repnz
fcmovnu
sbb
out
adc
cmp
dec
xor
clc
(bad)
sbb
mov
push
mov
repz
ss
push
dec
pop
mov
pop
pop
jg
jo
xchg
in
inc
fcmovnbe
lahf
scas
add
stc
repnz
mov
shr
dec
jbe
pop
test
sbb
jbe
mov
xchg
xchg
and
in
in
in
jno
in
int
neg
xchg
sbb
imul
ficom
or
in
mov
mov
loopne
cmps
push
add
jnp
xchg
out
icebp
in
cs
adc
mov
je
scas
inc
add
sbb
js
pushf
dec
jecxz
sbb
sub
into
xchg
mov
addr16
movs
jnp
or
sub
jmp
test
pop
mov
xchg
pop
xor
or
in
fs
stos
popa
pop
loop
gs
add
xor
cdq
test
mov
out
in
test
pop
xchg
xor
xor
and
jbe
dec
popa
adc
lock
adc
cmc
call
loop
xchg
sub
pop
jb
ret
add
rcl
add
cmp
aad
fdivr
push
cld
add
retf
xlat
pop
adc
pop
(bad)
fisttp
mov
jge
test
push
pop
std
adc
and
in
retf
mov
ror
aaa
mov
cmp
addr16
ss
mov
inc
test
ins
addr16
shr
sahf
sbb
ret
mov
add
fistp
mov
sub
inc
push
mov
push
les
inc
xor
addr16
pop
jns
ss
int3
adc
shl
scas
test
mov
jmp
push
xor
out
mov
push
sub
xchg
jmp
xor
push
xchg
mov
mov
call
push
arpl
in
push
cmp
in
pusha
push
fistp
or
and
ffreep
gs
(bad)
mov
cmps
mov
int
loope
add
mov
cmp
call
inc
mov
int3
std
test
aas
hlt
retf
pop
xor
into
adc
dec
sub
push
sub
popf
xchg
loop
sub
fwait
and
mov
push
xor
imul
mov
ror
push
or
mov
out
or
bound
pop
cmp
daa
pusha
dec
inc
cld
dec
movs
sub
out
out
mov
outs
fxch
add
mov
repnz
addr16
jnp
out
jo
push
out
lds
call
add
pop
into
repz
mov
pop
and
fimul
jge
push
jge
ja
add
push
movs
cld
les
jecxz
es
sti
leave
(bad)
xor
add
ret
dec
cli
mov
out
aam
fcomp
cmps
xor
cmp
xchg
and
(bad)
out
inc
mov
mov
mov
into
push
push
mov
leave
adc
iret
out
les
mov
xchg
push
inc
xor
mov
mov
and
enter
and
test
mov
mov
xchg
mov
mov
jns
mov
adc
js
mov
ret
push
jg
or
sub
(bad)
jnp
mov
fcmove
iret
(bad)
jecxz
jle
adc
icebp
scas
retf
cmp
push
adc
data16
sub
pusha
mov
mov
rol
test
(bad)
and
nop
movs
and
xchg
inc
hlt
cmc
mov
add
ja
mov
lods
or
and
mov
shl
dec
add
pop
sti
iret
(bad)
xor
sub
ror
leave
sbb
sbb
shl
(bad)
(bad)
sbb
mov
fwait
(bad)
in
ins
mov
jmp
cwde
dec
popf
out
addr16
add
rep
jo
jge
(bad)
mov
adc
test
into
xchg
inc
push
push
xor
addr16
add
out
push
loop
mov
jg
(bad)
aaa
addr16
(bad)
pop
pop
inc
pop
or
clc
jl
and
mov
mov
adc
cmp
mov
push
out
inc
repnz
or
mov
sbb
stos
mov
retf
inc
xor
retf
test
stos
ins
(bad)
aam
mov
repz
stos
or
dec
stc
jl
lds
(bad)
lahf
imul
in
sbb
jp
jbe
jecxz
sahf
cwde
movs
mov
sub
daa
fsub
cmp
ror
jp
test
mov
sbb
xchg
in
iret
xchg
call
xchg
adc
mov
call
push
pop
addr16
mov
sahf
std
sub
push
ss
fisttp
(bad)
iret
inc
stos
xchg
mul
push
jnp
es
in
push
mov
jb
fsub
stos
ins
cmp
adc
cli
pop
xchg
test
icebp
sahf
sbb
lods
mov
pop
fisub
pop
cwde
lock
sub
jecxz
data16
cmps
inc
mov
and
lea
or
dec
pusha
push
inc
shr
into
lea
enter
fs
jmp
ss
nop
jae
sub
pop
leave
mov
into
lds
fisttp
inc
pop
inc
add
xchg
jns
outs
arpl
jmp
popf
add
enter
and
ret
scas
into
das
sbb
add
data16
dec
adc
sbb
icebp
cmps
ss
mov
adc
test
enter
popf
in
adc
stc
mov
lea
cmps
std
sub
xchg
call
jp
push
mov
jnp
(bad)
fsub
cmp
pop
push
adc
fisub
mov
out
call
mov
mov
ds
xchg
add
sbb
xchg
jecxz
cli
(bad)
jp
xor
pop
out
pushf
psllw
(bad)
push
pop
push
pop
cli
and
lods
jg
inc
lds
movs
sbb
adc
cdq
sub
sbb
push
jae
and
outs
das
push
popa
jl
dec
inc
and
fwait
xchg
ror
adc
push
and
in
adc
mov
loope
jns
pop
xchg
pop
les
(bad)
pop
jnp
test
dec
ja
cmp
mov
push
jmp
sti
xor
aaa
mov
inc
add
sbb
xchg
add
lahf
stos
and
imul
mov
test
outs
movs
lods
fisubr
aad
rol
push
out
cmp
jmp
mov
loopne
push
mov
ds
cmp
pop
shl
jp
jo
ins
inc
(bad)
mov
(bad)
outs
aaa
mov
stos
inc
in
pop
or
repnz
ds
xor
stc
sbb
push
sbb
push
arpl
jns
arpl
popf
outs
inc
sbb
push
scas
and
mov
jge
xchg
xor
inc
jb
sub
and
popf
jge
xor
hlt
nop
mov
int
stc
adc
push
(bad)
fcomp
mov
lock
mov
rol
mov
xor
push
lahf
mov
sbb
and
push
mov
add
gs
ret
dec
sbb
shl
sub
adc
jg
adc
jge
mov
xor
sub
movs
movs
aaa
adc
jg
sti
int3
mov
cmp
mov
ucomiss
mov
jne
dec
sbb
outs
mov
jge
push
cdq
jg
pop
rcr
into
in
push
scas
mov
cdq
call
(bad)
test
mov
hlt
sti
inc
mov
dec
outs
test
cmp
inc
pusha
push
(bad)
in
cmp
lock
jl
pop
dec
out
sbb
sbb
(bad)
and
clc
pop
push
and
popa
or
xchg
shl
pop
cmps
sub
nop
and
jl
fidiv
into
clc
pushf
je
addr16
out
in
or
or
xor
frstor
mov
stos
in
stos
xor
mov
aad
pop
push
cs
add
sub
mov
dec
ror
pop
or
addr16
mov
and
ins
mov
arpl
mov
push
hlt
pop
ins
inc
cs
bound
mov
mov
cs
xor
or
cs
sbb
(bad)
push
dec
das
je
cmp
mov
fadd
ins
mov
cmp
sub
pusha
lea
jl
adc
cmps
imul
mov
es
imul
std
dec
mov
fwait
pop
pop
mov
mov
hlt
add
inc
call
ins
ret
retf
xchg
pop
mov
add
or
push
rol
cmp
fist
call
pop
xor
sar
mov
mov
loope
push
das
xor
ret
xor
sbb
push
and
(bad)
sub
adc
aam
(bad)
out
add
(bad)
gs
mov
test
ss
loop
into
cmp
popf
push
movs
imul
sub
repz
out
and
ret
(bad)
and
dec
lods
outs
dec
push
(bad)
in
push
xchg
jns
dec
pop
jo
imul
arpl
push
cdq
fwait
adc
loopne
cmp
call
mov
shl
lahf
test
scas
cwde
ss
pop
shl
pop
dec
out
ret
dec
or
call
shr
mov
sar
jecxz
cld
aad
mov
jmp
mov
pop
ins
push
mov
mov
jae
xor
jbe
cdq
jae
jp
sahf
bound
jp
retf
in
pop
ss
lahf
(bad)
imul
lds
aas
and
pushf
and
mov
dec
push
out
test
mov
int3
push
sbb
fcmovbe
stos
fwait
or
aaa
shl
fwait
leave
mov
adc
dec
add
mov
out
bound
mov
mov
test
std
inc
mov
retf
adc
fsub
imul
jne
sbb
or
push
mov
fucomip
push
pop
xor
xlat
and
cs
fstp
out
sub
dec
int3
xchg
movs
sti
loope
mov
xor
mov
add
xor
jle
inc
loopne
call
or
mov
xchg
aad
repz
pop
push
imul
cs
or
xor
mov
inc
dec
mov
push
ss
inc
xor
test
xor
or
mov
lock
mov
movs
shl
xchg
in
repz
push
ins
adc
xor
mov
jnp
in
or
movs
sbb
js
sbb
ja
ins
push
js
into
popa
div
mov
dec
loopne
fs
jmp
add
call
add
xchg
dec
mov
stc
iret
fwait
imul
add
jg
ins
dec
sar
retf
jle
stos
xor
pop
lods
or
jno
pop
xchg
test
jge
std
mov
ss
loop
rcl
add
xor
dec
inc
and
aad
cmp
mov
outs
sbb
xchg
jle
mov
mov
mov
pop
mov
shl
retf
xchg
mov
stos
cs
cdq
pop
mov
cmps
arpl
mov
sub
adc
rcr
dec
ins
into
outs
(bad)
fld
mov
push
push
add
push
bound
shr
clc
aam
mov
xor
cmps
loopne
int
add
jecxz
or
das
sbb
icebp
sub
in
(bad)
arpl
mov
jecxz
hlt
pop
inc
pushf
mov
mov
jno
int
xchg
cmp
mov
rcr
pop
repz
dec
mov
ins
pop
cmp
mov
add
pop
adc
adc
or
mov
cmc
out
rol
std
add
jge
jbe
lds
sar
push
shl
ficomp
push
push
xchg
mov
neg
fild
push
fild
je
mov
repz
mov
adc
xchg
mov
test
sti
mov
xor
stos
fdiv
fwait
imul
mov
or
lock
xchg
xchg
in
lea
push
pop
adc
push
addr16
lods
fadd
cld
jl
inc
shl
adc
mov
dec
jl
adc
jle
pop
arpl
sbb
out
std
mov
cmp
sub
imul
xchg
aas
pop
push
adc
mov
push
imul
cdq
mov
ins
pop
jg
inc
mov
ja
pop
add
or
lahf
jno
mov
arpl
pop
pop
(bad)
push
jmp
mov
pusha
lods
sub
ret
mov
and
repnz
xor
cmp
les
das
push
cmp
ja
push
jmp
nop
add
test
in
add
loop
dec
sbb
xchg
lods
xor
stc
out
fdiv
pop
shl
cmps
jo
popa
inc
or
pop
push
int3
push
mov
sbb
inc
ins
(bad)
mov
and
dec
xchg
jecxz
mov
sbb
in
jb
jge
dec
or
jno
xor
inc
das
ds
mov
push
xchg
fidiv
and
xchg
push
mov
test
cmp
mov
push
add
mov
mov
mov
stos
aam
inc
push
cmp
push
sub
cmp
aad
cld
daa
int
jmp
frstor
stos
retf
stc
idiv
lea
popa
in
mov
mov
or
or
cmp
mov
cmp
push
sub
or
cs
out
ins
retf
lds
jmp
add
cmps
jmp
sahf
mov
sub
xor
(bad)
jecxz
mov
add
bound
cwde
cmp
(bad)
jno
pop
pop
push
or
sub
jmp
add
inc
sbb
mov
push
add
mov
cmp
aas
mov
stos
les
xchg
push
(bad)
sbb
xor
hlt
mov
cld
bound
lods
cli
popf
pop
or
bound
popf
jnp
push
movs
outs
arpl
stc
loope
push
sub
xchg
jo
ret
shl
xor
mov
retf
popa
ror
into
add
in
xor
inc
clc
fdiv
push
into
and
jbe
in
(bad)
mov
sbb
add
cmp
jnp
mov
add
shl
dec
jge
mov
jge
sbb
out
pop
scas
call
data16
ret
adc
mov
and
and
push
lahf
imul
xchg
jecxz
pop
fcom
pop
inc
jecxz
or
jno
pop
loop
dec
add
push
sbb
mov
cmc
dec
in
and
retf
jne
out
dec
mov
jle
cmps
daa
xor
shl
fimul
gs
jge
dec
dec
inc
mov
call
dec
add
es
fisttp
test
mov
pop
neg
cmc
(bad)
pop
mov
sbb
std
xor
sub
cmps
stc
out
sub
mov
sbb
shl
adc
mov
cmp
out
lock
mov
sbb
or
(bad)
into
add
pop
fucomip
sub
es
dec
mov
outs
and
retf
sub
xlat
mov
ror
cmp
adc
fld
adc
iret
retf
pop
jb
jp
sbb
mov
movs
std
mov
and
call
pop
pusha
pop
fs
sbb
add
repz
push
xchg
mov
ret
mov
xchg
aam
mov
or
sahf
daa
cmp
or
jecxz
jb
mov
cmp
scas
add
mov
xor
push
adc
lahf
div
mov
sub
jbe
pop
jbe
pop
sub
sub
div
mov
and
ds
pusha
adc
cld
pop
ret
add
ja
iret
and
div
sahf
xor
cli
fstp
ds
(bad)
and
jns
mov
xor
dec
sub
adc
sub
jb
popa
push
ins
sbb
hlt
pop
push
add
cmps
mov
xchg
and
or
sbb
outs
pop
sbb
jmp
jnp
push
cld
sub
(bad)
data16
cmp
stos
push
(bad)
outs
mov
adc
ficomp
pop
cmp
shl
sub
xchg
shl
sbb
cmps
cmp
fld
sub
xchg
mov
jmp
add
lds
fcmovnu
outs
jo
push
or
adc
rol
das
loopne
fidivr
mov
icebp
adc
mov
add
push
out
xchg
movlps
repz
daa
dec
jge
fwait
add
inc
adc
adc
mov
in
fwait
pop
mov
xchg
xchg
arpl
sbb
scas
std
imul
fistp
inc
pop
outs
mov
loopne
(bad)
pop
mov
fstp
hlt
push
sub
adc
jb
test
or
popf
add
clc
cdq
lock
pop
js
dec
jp
into
dec
adc
in
mov
and
pop
rcr
mov
push
pop
or
cwde
mul
dec
in
fdivr
mov
pusha
loop
adc
jo
jo
in
aas
in
repz
sub
sub
loope
inc
sti
and
xor
mov
pop
aas
cmp
mov
mov
cdq
aas
es
sub
xor
daa
repz
mov
push
pop
xchg
sti
xchg
imul
(bad)
jl
mov
jae
sbb
rcr
inc
out
not
jmp
and
in
cwde
loopne
ret
add
sti
inc
jl
push
jo
mov
lds
data16
jne
mov
daa
cmc
adc
int
xor
jle
test
push
cmp
mov
mov
jns
out
add
xchg
repz
xchg
addr16
adc
cld
nop
imul
fdiv
inc
into
and
(bad)
dec
mov
mov
jmp
fdivrp
test
xsaves
xchg
aam
inc
jecxz
mov
out
ss
repnz
ds
dec
(bad)
dec
ins
daa
pop
lods
rcl
ss
lods
mov
jo
xchg
std
push
mov
pop
nop
jae
add
emms
test
mov
ja
jg
add
jnp
aad
mov
stos
div
mov
add
data16
repz
xor
jne
pop
dec
imul
inc
cmovnp
jp
mov
jmp
call
ficomp
mov
idiv
or
sbb
xchg
mov
mov
iret
push
out
sar
push
shr
rol
in
cli
mov
mov
adc
(bad)
sbb
aad
mov
lock
lahf
outs
test
and
loop
repz
std
(bad)
mov
int
out
inc
mov
int
mov
ds
adc
sbb
push
jnp
push
inc
mov
dec
mov
iret
sbb
push
and
lock
or
loop
pop
push
mov
jg
xor
pop
in
imul
pop
mov
cmp
dec
sub
pusha
lea
xchg
shl
push
lock
adc
loopne
imul
jle
emms
fs
fisttp
call
or
dec
in
jmp
xor
into
clc
rcr
inc
add
mov
push
mov
mov
mov
(bad)
pop
sbb
cmps
ds
sub
test
sbb
jb
icebp
add
xchg
inc
cwde
sub
leave
mov
in
idiv
popa
mov
xor
lods
add
cli
cld
je
adc
pop
inc
imul
inc
pop
js
ins
(bad)
cdq
call
or
jne
dec
and
push
push
and
inc
pop
mov
ret
mul
add
mov
test
sbb
lahf
xchg
iret
inc
mov
and
dec
imul
ins
inc
fld
ss
mov
gs
(bad)
cmp
push
xor
mov
mov
add
nop
sub
jl
je
scas
rcr
mov
pop
das
xor
fisubr
ins
in
jp
adc
or
pop
sub
sar
fcomp
retf
cmp
and
ins
dec
fnstenv
cld
jo
sbb
inc
scas
ficom
and
or
ret
xchg
xchg
cmp
dec
xchg
mov
es
movs
mov
jge
mov
rol
lock
mov
lea
inc
sub
or
(bad)
xor
mov
rep
inc
loope
aam
shl
call
dec
or
mov
int
cdq
xor
leave
ins
pop
xchg
loope
aad
(bad)
push
push
int3
fucomp
cmp
xchg
mov
iret
and
out
hlt
adc
lods
in
xor
ins
in
sub
ss
outs
loopne
jl
xor
(bad)
jno
pushf
mov
(bad)
fsubr
jno
std
pop
cmp
dec
cmp
mov
out
fild
scas
retf
test
push
push
sub
into
shr
data16
mov
lock
add
outs
push
test
(bad)
dec
fwait
test
retf
add
mov
mov
dec
fwait
xchg
mov
or
jmp
int3
xlat
in
loope
mov
imul
adc
push
into
and
sbb
cmp
or
jae
push
xchg
adc
fsubr
fcom
in
or
hlt
rcl
add
xchg
dec
fsubr
test
xor
adc
jns
push
and
ds
popa
scas
les
(bad)
shl
push
mov
adc
dec
mov
ror
test
dec
add
mov
pop
(bad)
(bad)
or
imul
mov
lods
pop
push
shr
dec
add
mov
dec
aam
pop
imul
jp
sbb
mov
push
push
pushf
pop
loopne
dec
and
mov
push
mov
xchg
mov
push
mov
sbb
lock
push
jmp
cmps
xchg
mov
imul
imul
std
xchg
scas
fistp
mov
hlt
into
inc
jmp
aad
test
dec
ss
sub
popf
pop
aaa
inc
out
dec
mov
inc
push
mov
nop
mov
add
xor
repz
push
dec
sbb
sbb
mov
push
ins
mov
sbb
in
ja
movs
jno
ret
ss
test
cmp
cmp
in
and
add
jecxz
jae
add
mov
xchg
mov
pusha
xchg
push
jns
lea
ds
ret
mov
(bad)
jmp
out
xlat
sbb
mov
xor
rcr
daa
out
mov
cmc
call
ss
test
add
push
stos
stos
xor
js
inc
sub
sub
test
imul
icebp
sub
xor
in
mov
sbb
mov
mov
in
loopne
into
push
or
sbb
mov
cdq
enter
arpl
sbb
adc
stc
dec
or
aaa
and
loope
sbb
jge
leave
or
rcl
ffree
sub
adc
fldenv
xchg
jne
fmul
push
pop
push
jmp
or
push
pop
fwait
inc
fst
mov
popa
mov
in
fild
repz
fbld
inc
xchg
loop
test
(bad)
stc
(bad)
adc
mov
(bad)
push
xchg
sbb
mov
inc
mov
movs
push
ror
test
cmps
gs
pop
dec
dec
xor
cmp
retf
pusha
int
imul
stos
adc
or
pop
retf
pushf
sti
mov
cli
inc
adc
das
cmp
push
cmc
mov
scas
cld
jb
sti
cdq
fld
and
or
rcr
cli
jle
xchg
pop
movhlps
test
popf
pop
cmp
outs
jae
dec
push
xlat
cmp
mov
pop
daa
je
and
rcr
stos
push
push
(bad)
addr16
fiadd
adc
mov
nop
gs
xchg
mov
sbb
loop
xor
adc
or
mov
pop
add
mov
cmp
xchg
cwde
xor
shl
jmp
add
in
mov
sub
cmp
(bad)
cmp
std
adc
cli
mov
lahf
arpl
xchg
xchg
add
sbb
pop
ret
and
test
pop
ret
xor
aad
test
loop
xlat
xor
mov
cmc
jns
jbe
call
pop
stos
iret
mov
xor
nop
mov
pushf
xchg
push
xor
jle
mov
cld
je
xlat
fucom
push
cmp
sti
aaa
inc
pop
in
jb
outs
or
ficom
(bad)
fmul
and
jmp
mov
test
into
mov
imul
mov
adc
sbb
popf
or
mov
sbb
or
data16
imul
cmc
jnp
mov
mov
nop
not
or
cmp
push
clc
cmp
mov
sub
push
jns
inc
xor
call
dec
mov
stos
inc
xchg
xor
sbb
or
cli
xor
pop
cwde
xor
jp
mov
test
pop
rol
xchg
retf
xor
or
xor
sub
outs
jnp
inc
(bad)
outs
xchg
hlt
xchg
icebp
push
aaa
inc
test
mov
and
or
pop
daa
mov
dec
sbb
data16
dec
call
pop
sbb
mov
mov
mov
and
(bad)
sbb
call
dec
leave
sub
mov
leave
cmp
mov
call
stos
cmp
dec
sbb
sbb
das
jmp
in
add
inc
xchg
jg
shl
ffreep
shr
xor
pop
xor
push
out
lods
and
ja
and
add
adc
or
movs
cld
dec
mov
les
jo
mov
jne
pcmpgtb
out
mov
cs
and
rol
cmc
mov
icebp
mov
out
out
repnz
push
add
and
sub
retf
(bad)
ins
push
dec
dec
ss
js
loopne
mov
sub
pop
(bad)
retf
es
cmp
test
fs
(bad)
pop
adc
mov
cmp
dec
std
int3
cmp
mov
lds
inc
pop
scas
enter
repnz
retf
mov
sub
and
ins
cmc
pushf
test
pop
add
das
add
sub
adc
loop
inc
std
adc
dec
adc
rcr
add
out
aam
not
rol
jae
fisub
in
adc
sub
cmp
lock
add
sar
cwde
ror
dec
dec
mov
je
add
xchg
jne
xor
jge
cmps
pop
es
in
and
punpcklwd
loop
(bad)
(bad)
pop
and
je
or
push
mov
inc
pushf
movs
inc
(bad)
pushf
fcomi
sub
jp
jb
out
outs
inc
sub
cld
mov
add
in
inc
jmp
out
in
adc
xor
xor
and
push
lock
xchg
int
dec
or
imul
aad
out
pop
mov
jbe
sub
lods
bnd
adc
movs
add
jp
into
xchg
adc
ins
xor
rol
xchg
dec
mov
or
xchg
add
push
int3
(bad)
test
mov
scas
inc
sbb
pminsw
push
(bad)
in
enter
mov
jecxz
int
sub
(bad)
mov
push
dec
xchg
cmp
in
adc
fwait
test
and
mov
ja
push
ret
xor
shr
pop
mov
rol
xchg
push
push
leave
sub
call
sub
xor
push
sbb
and
(bad)
mov
sbb
xchg
cmc
dec
sub
push
scas
js
clc
out
mov
or
pop
sbb
cmp
ficomp
jae
pop
jecxz
push
cmp
jge
mov
lock
repz
jecxz
pop
mov
mov
into
mov
pop
pop
stos
shl
sahf
xor
dec
and
es
sbb
cmp
sub
call
neg
inc
jmp
inc
cwde
sahf
ss
and
adc
jge
pop
ja
das
inc
call
push
mov
ds
push
in
movs
test
adc
test
jp
arpl
(bad)
int3
and
mov
loopne
inc
cmps
pop
in
mov
pop
mov
or
fwait
xchg
mov
pop
int
jb
jg
push
mov
pop
dec
(bad)
xchg
mov
adc
ret
xlat
mov
lock
cs
mov
push
jle
add
nop
push
in
inc
outs
mov
adc
sar
jb
test
adc
mov
push
inc
add
mov
out
mov
fwait
movs
(bad)
mov
or
cmp
xor
xchg
push
or
stos
xchg
mov
pop
sub
aad
(bad)
ja
das
dec
mov
retf
fdivr
pop
sbb
or
dec
mov
or
inc
stc
ss
cwde
push
sahf
fild
clc
mov
and
(bad)
mov
cdq
ret
jmp
inc
imul
xor
adc
jg
jl
enter
adc
pop
fisttp
xchg
not
push
mov
out
dec
push
xchg
jbe
jb
clc
sti
loope
cmps
out
and
push
cmp
and
rol
push
cmp
ds
pop
xor
stc
int3
imul
push
jle
pop
push
xchg
add
xor
mov
fbstp
jecxz
retf
mov
xor
mov
cli
fild
and
and
push
pusha
inc
add
aaa
ror
daa
std
push
clc
daa
(bad)
fadd
mov
adc
mov
loopne
leave
or
sahf
pop
jns
(bad)
fisttp
in
out
lahf
jbe
pop
inc
loope
add
not
pop
in
inc
loope
sbb
push
repnz
cld
pop
fiadd
mov
test
sahf
fwait
stc
dec
out
ror
lahf
mov
lods
loope
pop
inc
fisub
out
xchg
scas
ffreep
mov
mov
fcom
leave
mov
jnp
retf
cwde
je
ret
iret
aam
mov
ret
fwait
sar
jbe
pop
aaa
imul
paddsb
push
loop
mov
pusha
mov
push
cmp
cwde
sbb
jg
mov
add
push
retf
mov
mov
outs
movs
mov
adc
or
gs
mov
data16
fwait
jb
dec
xlat
test
(bad)
push
stc
dec
pusha
mov
mov
test
pop
popf
add
imul
xor
fisub
sub
cmp
cdq
xor
xchg
jnp
ficom
movs
sbb
adc
cdq
popf
pop
stc
rcr
xor
cmp
and
add
fisttp
and
jns
push
mov
dec
adc
int
mov
push
clc
enter
loopne
cmp
js
stc
add
(bad)
das
shl
cld
mov
inc
popf
sub
test
jno
imul
pusha
in
or
and
fwait
dec
push
lahf
call
stos
(bad)
(bad)
xor
sub
cmp
rcr
fidiv
in
and
retf
ss
adc
and
dec
inc
mov
repz
sbb
inc
and
push
push
sub
xchg
jae
mov
fsub
sbb
inc
mov
out
dec
imul
and
dec
je
pop
int3
xor
pop
push
hlt
inc
or
xchg
sbb
and
adc
or
les
lods
gs
aam
dec
inc
movs
iret
or
mov
push
scas
xor
adc
popf
sahf
pop
xchg
mov
pop
int3
(bad)
mov
jo
cmp
lahf
inc
xor
cmc
aas
jnp
mov
xlat
ret
push
or
or
push
and
sahf
sub
inc
mov
jg
in
mov
pop
pop
push
addr16
cmp
call
scas
movs
fstp
in
xor
dec
cdq
and
imul
mov
add
mov
mov
inc
int
mov
into
xchg
inc
retf
bound
jl
lahf
stos
(bad)
rcr
rol
dec
(bad)
push
lods
adc
scas
ja
cld
cmp
or
inc
xor
cs
sub
(bad)
stos
push
sbb
retf
dec
loope
aam
mov
mov
das
sbb
out
or
inc
lock
(bad)
ins
mov
(bad)
push
(bad)
arpl
ins
pop
add
sbb
in
scas
sar
sub
in
ror
mov
inc
rcl
repnz
sahf
push
mov
cmp
dec
ins
fsub
cs
push
xor
pop
fstp
inc
gs
mov
mov
inc
jbe
inc
jmp
ret
mov
dec
xor
sbb
pop
mov
outs
inc
out
sbb
mov
mov
fldcw
outs
jb
ret
mov
clc
push
mov
cli
out
fstp
out
(bad)
fstp
hlt
pop
ins
inc
sub
aad
add
mov
cmp
add
test
push
jg
je
xchg
cli
arpl
pop
add
sbb
lahf
shr
or
dec
call
xor
popa
jo
mov
int3
inc
dec
pop
mov
and
out
mov
test
fwait
aam
ficomp
xor
mov
stos
push
jp
loopne
xor
inc
xchg
jle
sbb
in
fdivr
and
aaa
jp
or
xor
or
ret
cmps
(bad)
popa
clc
xchg
popa
cmp
js
sbb
adc
or
jmp
cmc
icebp
into
movs
mov
mov
sti
enter
xor
cmps
xchg
dec
sub
dec
cmps
pusha
mov
psubsw
loopne
daa
sub
jl
ficomp
mov
fstp
sub
push
js
cs
jns
mov
mov
clc
pop
aad
ins
mov
xchg
and
or
aas
push
and
test
jbe
psraw
sti
imul
jbe
pop
pop
iret
jbe
repnz
hlt
imul
cmps
push
shr
imul
mov
mov
cmp
rcr
inc
in
cmp
mov
push
or
add
ds
push
mov
mov
daa
mov
mov
fld
adc
leave
mov
loopne
(bad)
xor
in
inc
sahf
jo
cdq
loopne
jae
lock
mov
arpl
and
pop
pop
xlat
jecxz
fcomp
test
xchg
xchg
and
cmp
es
fs
cwde
cld
lea
xchg
jno
pop
call
scas
sti
addr16
leave
int
pop
out
retf
xor
mov
aad
iret
les
mov
dec
mov
jg
cmp
dec
pop
jmp
xor
mov
add
inc
lahf
loopne
int
push
dec
inc
ror
cmp
inc
scas
addr16
rcr
(bad)
dec
shl
es
das
mov
fs
xchg
mov
adc
nop
xchg
mov
cmp
adc
add
test
dec
jne
xchg
push
cli
or
cwde
and
test
mov
or
jl
(bad)
cld
jmp
or
jg
xchg
stc
fidivr
jmp
add
jecxz
loope
adc
sbb
or
mov
mov
stos
inc
and
push
jns
std
in
test
push
jmp
(bad)
movs
pop
mov
xor
cmp
xchg
daa
inc
pop
cdq
add
jbe
dec
mov
imul
imul
jnp
mov
xchg
movs
pop
push
xchg
or
int3
pop
loope
mov
shl
in
or
and
mov
mov
imul
neg
mov
sub
(bad)
test
mov
pop
das
gs
or
jbe
test
xor
sahf
jge
fisubr
sub
pushf
int3
test
pop
mov
sbb
jl
stos
out
bound
dec
dec
or
out
xlat
pop
nop
dec
das
cmp
pop
repz
sahf
js
out
lds
or
scas
cmp
int3
inc
sub
xchg
pop
test
mov
push
in
sub
cwde
movs
setl
cmp
stos
imul
sub
std
or
jb
and
sbb
xchg
test
jnp
jmp
jecxz
mov
addr16
sbb
or
cmovno
mov
cmp
mov
arpl
mul
sbb
mov
mov
adc
ret
add
aaa
clc
mov
xor
addr16
push
(bad)
push
aaa
(bad)
push
push
xchg
pop
mov
or
jecxz
and
push
dec
mov
fs
jmp
out
retf
and
cmp
and
push
out
jmp
push
int3
movs
in
add
add
arpl
xlat
sbb
xor
fbstp
addr16
call
mov
fs
in
inc
push
out
rcl
jmp
cmp
aaa
(bad)
xchg
push
retf
add
inc
(bad)
jl
cmps
jle
loope
gs
xor
es
imul
or
call
mov
nop
fadd
sbb
pop
push
inc
in
rol
cmp
dec
add
rol
pop
inc
mov
jnp
jae
sbb
cdq
xchg
into
out
inc
dec
(bad)
jle
loop
out
xlat
xor
or
adc
xchg
pop
rcr
jne
dec
repz
rcr
push
mov
cwde
lods
mov
and
mov
pop
shr
lods
pop
fsubr
nop
or
not
push
in
mov
mov
movs
in
dec
mov
push
hlt
or
pop
pop
sbb
cmp
push
pop
fst
xchg
xchg
hlt
mov
mov
push
les
cmps
jno
jno
movs
mov
jb
push
(bad)
mov
mov
es
shl
mov
iret
sbb
call
mov
imul
scas
cdq
mov
jge
outs
ins
mov
rcr
shr
pusha
or
jmp
dec
xor
inc
test
cs
xchg
ins
ficom
adc
les
adc
xchg
mov
inc
mov
iret
inc
xor
push
lea
out
sub
cmp
adc
sbb
popa
fdivr
fdivr
push
sahf
dec
pop
fstp
ins
xor
out
pop
mov
add
adc
mov
jp
jle
add
mov
mov
or
test
lds
and
jns
loopne
jmp
shr
jge
push
cmp
ins
jns
ror
mov
inc
icebp
mov
add
rcl
push
add
pushf
ficom
adc
push
test
push
or
sub
fdiv
and
cmp
pop
leave
shl
test
neg
sti
(bad)
jmp
int
jecxz
xchg
test
movs
pop
jl
mov
push
iret
jb
xchg
cdq
test
out
jmp
mov
inc
and
mov
jl
jns
jmp
sbb
xor
icebp
(bad)
cmp
sub
jp
ret
dec
(bad)
mov
inc
adc
sub
cmp
mov
cli
loope
pop
sbb
lock
xchg
xchg
jmp
inc
jmp
test
mov
xor
or
dec
je
enter
sti
add
pop
or
dec
rcl
inc
inc
push
add
mov
jp
leave
fucomip
mov
pop
bound
outs
push
mov
movs
sub
outs
xchg
das
mov
cmps
test
add
cmp
xchg
jle
or
popa
or
sub
loopne
jb
sbb
in
lea
jns
ins
addr16
out
pop
js
in
sbb
mov
fcomp
push
retf
rep
xor
mov
and
retf
out
fist
sahf
mov
pop
test
popa
push
mov
mov
outs
and
or
aam
pop
mov
or
(bad)
aas
std
cli
jge
stc
punpckhdq
xchg
jecxz
addr16
outs
xchg
xor
and
xor
lock
mov
icebp
sub
push
sar
push
sub
push
fst
test
scas
mov
fucomip
fiadd
std
jb
test
in
hlt
cld
adc
mov
cmp
fwait
mov
adc
cmp
arpl
(bad)
jnp
pop
stc
aas
bnd
fdivr
imul
sbb
xor
je
sbb
mov
xchg
mov
xchg
jmp
mov
enter
jmp
cwde
sti
mov
ins
js
pop
dec
sbb
jmp
ror
ja
mov
(bad)
pop
mov
retf
scas
push
fldenv
mov
cdq
xor
sub
sub
cmp
mov
rcr
fcomp
bound
mov
repz
mov
cmp
push
xchg
pop
push
xor
inc
mov
adc
sub
jmp
cmp
imul
pop
icebp
xchg
stc
repnz
sbb
adc
cmps
xchg
pop
loopne
mov
push
pop
das
sub
mov
push
push
xchg
xor
fstp
leave
pop
cmp
and
stc
push
adc
jecxz
xchg
imul
or
popf
(bad)
icebp
shl
sub
jl
mov
fnstcw
push
movs
je
xlat
cmp
jmp
arpl
fwait
retf
sub
push
push
arpl
mov
fsubr
sbb
std
adc
mov
pusha
mov
shl
fsub
xchg
cs
(bad)
push
fcmovnu
nop
dec
loope
sub
call
add
std
popf
adc
loope
ss
lods
mov
nop
add
mov
add
sub
and
psubusb
xchg
scas
pop
mov
xchg
mov
pushf
sahf
or
(bad)
leave
or
sub
mov
out
ins
movs
sbb
pop
inc
dec
in
push
(bad)
(bad)
adc
idiv
sbb
test
movs
mov
jl
or
or
xchg
js
pushf
aad
fwait
addr16
jg
mov
jg
popf
nop
imul
sub
sub
pop
out
inc
jg
and
adc
or
imul
adc
jg
jnp
sub
addr16
test
mov
mov
jbe
shl
aam
cld
inc
xor
rcl
sub
mov
add
rcr
je
inc
sub
ins
mov
mov
jno
jne
pushf
xchg
mov
mov
xor
call
pop
inc
inc
jg
in
jnp
movs
xchg
cs
ror
ds
pop
jge
mov
stos
ins
clc
out
lods
mov
test
out
add
js
push
jl
xchg
inc
ret
cmp
pop
mov
or
xchg
mov
dec
test
cs
add
rcl
out
xor
scas
jns
jbe
pushw
xchg
jo
mov
cmps
sahf
xor
in
bound
mov
mov
jp
inc
scas
ss
fmul
dec
cmp
mov
push
push
fcom
pop
fidiv
stos
ficom
xchg
pop
fadd
adc
pop
movs
push
push
mov
aas
adc
and
sti
jno
fisttp
mov
jge
sar
and
test
xchg
xor
jno
mov
sub
sbb
push
push
out
add
inc
dec
shl
pop
mov
stos
fcom
in
or
not
shl
pop
sub
movs
xlat
arpl
mov
xchg
dec
cli
sti
nop
out
iret
imul
sub
cld
adc
xor
dec
xchg
out
xor
and
or
inc
retf
mov
jbe
jp
out
into
push
mov
hlt
mov
xor
pop
or
bound
sbb
dec
lock
sub
fbstp
ins
fwait
jmp
push
adc
pop
ds
mov
addr16
mov
adc
das
sub
cmovbe
xlat
adc
xor
adc
sbb
mov
std
push
mov
sub
(bad)
mov
mov
xor
mov
xchg
sub
xchg
ficomp
aam
imul
adc
cmps
jns
sbb
idiv
fisub
dec
pop
out
mov
pop
loop
sbb
dec
cmp
pop
mov
(bad)
jmp
stos
mov
add
or
sub
int3
mov
mov
mov
hlt
(bad)
ficomp
add
dec
pop
mov
in
or
leave
cmp
lea
aam
xchg
inc
jns
int
and
inc
dec
sub
inc
or
movs
pop
lea
push
mov
mov
fwait
int
jp
cmp
daa
pop
jmp
stos
add
cmp
icebp
sub
test
add
inc
jecxz
mov
mov
adc
popa
push
bound
xchg
xor
shl
mov
push
fnstcw
out
retf
out
mov
je
ja
enter
imul
add
cmp
cld
xchg
cmp
pop
cmp
stos
push
pop
cmps
jno
shr
pop
xor
cmc
add
sbb
movs
dec
in
xor
fdiv
repz
daa
or
dec
stos
add
or
add
repz
dec
or
inc
test
mov
mul
rcl
xchg
mov
inc
inc
ret
jl
jo
ret
fcmovnu
stos
adc
js
push
fadd
adc
xchg
pop
daa
sbb
cmp
outs
out
imul
pop
pushf
xor
add
add
stc
lods
mov
mov
aam
pop
in
mov
mov
xor
repz
push
enter
mov
add
mov
js
sub
fs
jl
lods
mov
popf
push
mov
mov
lahf
sub
adc
mov
push
sbb
jmp
or
pushf
mov
shl
es
cdq
jno
addps
(bad)
test
popf
iret
and
or
push
ss
push
and
cmps
dec
jge
sbb
xor
sub
adc
inc
mov
push
fidiv
not
vmovddup
mov
mov
jns
push
or
rol
fisubr
adc
adc
sbb
mov
in
leave
mov
outs
in
mov
fld
fist
push
in
test
enter
lahf
js
lea
jmp
push
mov
mov
inc
sub
popf
in
inc
push
mov
js
movs
cdq
mov
jmp
push
mov
mov
stc
(bad)
test
mov
add
push
enter
xchg
in
xchg
or
lods
pusha
or
les
stos
loop
dec
repnz
jns
jecxz
loope
push
es
add
retf
jnp
xchg
cwde
jno
push
and
pop
mov
xor
fist
adc
push
xor
adc
dec
stos
jl
rol
sub
imul
mov
sbb
lods
lods
jecxz
aaa
inc
jae
(bad)
mov
and
sbb
int
dec
jnp
mov
mov
movs
push
rcr
outs
nop
(bad)
es
push
je
and
call
xor
push
add
pmuludq
cmp
in
call
imul
inc
pop
test
dec
fs
cmp
btc
fnstcw
inc
into
xor
xlat
mov
div
sub
retf
je
pop
cli
add
dec
xchg
fidiv
xor
xchg
mov
inc
loopne
inc
in
cmp
adc
in
mov
push
addr16
ds
mov
and
fidivr
inc
stos
jecxz
and
inc
pusha
bound
lock
ja
xchg
inc
pusha
push
aam
mov
jmp
push
cmp
or
mov
and
cmp
mov
pop
mov
sbb
push
mov
pop
call
adc
inc
rcr
pop
je
popa
dec
scas
cmp
idiv
mov
adc
add
jp
mov
ffree
pop
sub
out
cli
aad
in
add
pop
daa
dec
lock
scas
sbb
ret
(bad)
jle
fisub
nop
jns
ins
in
mov
pop
fadd
cli
xor
pop
mov
cmps
jl
dec
xor
add
xchg
aas
pop
in
pushf
lock
mov
dec
and
je
inc
mov
inc
mov
ja
int
fnop
sar
jmp
sub
inc
shl
mov
mov
shl
or
sub
jno
sbb
idiv
push
adc
lock
aam
sahf
mov
int
sbb
adc
add
jge
cmp
inc
mov
dec
mov
mov
lods
aad
test
sti
xchg
cmp
frstpm(287
nop
mov
xchg
popa
add
dec
mov
scas
dec
jl
add
jae
inc
in
ds
je
inc
sti
xor
test
pop
hlt
aam
push
fst
retf
sar
pusha
jmp
rcr
test
aas
in
xchg
push
(bad)
mov
fld
sub
pop
sub
xlat
xbegin
dec
cmp
jmp
mov
cmps
sub
pop
test
inc
outs
push
mov
bound
cmp
push
mov
pop
xchg
test
sbb
ss
jo
out
fnstcw
cmp
jne
mov
sahf
loope
jno
push
mul
pop
mov
imul
in
or
mov
stos
fisub
pmulhw
(bad)
cmps
pop
pushf
or
jno
mov
add
test
lods
add
lods
dec
es
dec
test
mov
inc
pop
sbb
mov
jmp
jecxz
jge
(bad)
xor
mov
pop
mov
xchg
leave
mov
cdq
xor
mov
stos
sub
sbb
mov
jle
mov
push
push
inc
fwait
div
mov
and
lods
jmp
jp
mov
dec
rcl
inc
jecxz
sbb
jo
aam
stc
pop
iret
mov
aaa
xor
lea
mov
jo
fisttp
rcl
cmp
cmp
jns
les
movs
push
aad
cmps
out
push
shl
rol
push
or
aam
ret
dec
cmp
fwait
(bad)
jl
fcom
sub
mov
ret
pop
dec
inc
inc
sub
test
pop
pop
rol
(bad)
sbb
lods
repnz
cs
in
jmp
call
jnp
jns
repz
les
mov
cmps
jb
add
repnz
jge
xchg
icebp
daa
jge
sbb
inc
add
out
retf
or
sub
inc
cmp
jg
popa
jmp
and
cmp
pop
xor
lds
gs
out
inc
dec
inc
push
cmp
pop
in
or
mov
sbb
aam
loope
dec
mov
jg
add
outs
pop
push
and
sbb
lea
sub
sbb
sbb
(bad)
cmc
out
sbb
push
push
or
xchg
adc
push
mov
sbb
cmps
and
pop
scas
iret
bound
into
cs
sub
cs
cmp
jnp
call
mov
sub
in
repz
out
cwde
or
int
in
push
les
xchg
cmp
and
adc
out
sub
lods
mov
cmc
fmul
ss
mov
leave
dec
rcl
jmp
dec
ret
test
retf
jp
aad
jmp
out
cwde
mov
dec
adc
fwait
nop
pop
sub
sbb
rcl
push
lods
sbb
adc
jno
ins
mov
dec
cmc
lea
cld
dec
bound
aam
mov
adc
in
sub
in
pop
fstp
stos
pop
inc
pop
cmp
fild
add
test
cmp
xor
xchg
fs
push
jecxz
leave
retf
scas
jo
dec
mov
in
jg
pop
pop
jg
dec
lock
xchg
sbb
mov
mov
retf
inc
jmp
clc
sub
repz
ja
jo
(bad)
cli
stc
icebp
push
repnz
mov
adc
ins
ror
rcl
push
pop
mov
mov
cmp
out
xor
jg
xchg
dec
mov
xchg
inc
adc
es
fs
mov
pop
sub
cmp
xchg
aas
test
lods
xchg
or
retf
cwde
cmps
xor
test
cmp
lahf
test
loopne
fimul
and
or
jl
lock
sar
rcl
cmc
push
ja
and
in
mov
xor
jmp
jae
sti
stos
gs
pop
not
pushf
cmc
adc
jnp
push
mov
cmps
or
sub
test
(bad)
(bad)
sub
pop
dec
add
add
shl
or
mov
xor
cmc
sbb
stos
icebp
xchg
out
mov
sbb
mov
mov
repz
sti
loopne
pusha
ds
cs
push
into
inc
mov
(bad)
or
lds
sbb
xchg
push
mov
cwde
out
scas
aas
out
repz
cmps
sbb
mov
cmps
inc
les
ret
xor
cmp
popf
fstp
sbb
push
js
jge
movs
stos
pop
mov
fs
retf
lds
stc
pop
ror
pop
cmp
popf
popa
out
aaa
leave
pop
idiv
mov
jge
retf
sub
jb
cmps
inc
(bad)
sti
jle
popf
in
push
sbb
jae
push
adc
daa
in
test
hlt
movs
lock
and
retf
and
call
cmc
cmp
aad
jnp
data16
cmps
bound
fistp
mul
ds
cli
fsubr
adc
push
dec
push
push
imul
in
mov
sbb
and
and
je
cmps
mov
mov
imul
pop
lods
dec
or
mov
outs
xchg
pop
xor
adc
in
sar
enter
xchg
jecxz
mov
(bad)
lock
lock
push
push
mov
ss
clc
loope
fmul
inc
ror
mov
cdq
cwde
in
fldcw
inc
xchg
lea
jp
add
rol
gs
aad
cmp
mov
xor
loope
je
jb
mov
mov
mov
int3
xchg
ret
sbb
pop
xchg
lods
lahf
or
and
push
xor
or
fs
pop
add
sub
nop
shl
mov
call
cmc
test
cwde
jnp
adc
repnz
imul
cld
mov
in
test
pop
in
fist
loop
mov
stos
sbb
pop
out
xchg
adc
xor
cwde
push
test
pop
mov
sbb
push
fsubr
cmps
inc
inc
mov
mov
sub
stos
(bad)
aam
or
or
inc
mov
xor
loope
inc
je
jo
retf
push
sbb
cwde
sub
jmp
lock
add
imul
imul
leave
inc
movs
fcom
mov
push
xchg
(bad)
cs
mov
jge
inc
sti
int
adc
xchg
cmp
push
shl
mov
data16
xor
push
pop
xchg
sub
jg
mov
retf
fst
inc
mov
js
jno
mov
jmp
mov
(bad)
mov
sbb
aas
(bad)
inc
jmp
cld
in
jbe
(bad)
std
or
int
pop
aam
inc
(bad)
jno
mov
icebp
inc
mov
out
stos
cmps
jbe
pushw
mov
adc
xor
pop
mov
adc
lods
inc
aaa
xchg
imul
push
adc
cmp
test
dec
add
mov
sub
lds
mov
mov
dec
std
push
dec
adc
jge
out
mov
xchg
inc
mov
adc
adc
jmp
xchg
sbb
jecxz
and
xlat
(bad)
loopne
sub
nop
retf
cmps
daa
aad
jg
es
je
aam
and
iret
ret
inc
jmp
cmp
js
add
rcl
push
fdivr
repz
pop
adc
mov
and
out
mov
shl
sub
cmp
dec
adc
or
test
and
xchg
mov
sbb
fbstp
outs
ret
pop
test
inc
dec
jno
jo
sbb
cmp
cwde
(bad)
repz
stc
pop
mov
loope
outs
or
dec
fs
repnz
je
jmp
push
fsubr
cmp
ds
add
int
hlt
adc
or
icebp
add
out
xlat
addr16
dec
push
sub
pop
mov
cli
into
xor
jne
test
ret
sbb
inc
fs
imul
xor
cmc
out
mov
nop
aaa
dec
jge
loopne
sbb
movs
sar
push
mul
sbb
pop
movs
or
popa
add
xchg
adc
(bad)
imul
into
mov
stc
xchg
iret
mov
inc
stos
nop
inc
lods
cmc
nop
and
cmps
xchg
jmp
add
scas
aad
test
data16
adc
pop
retf
and
inc
ds
dec
and
aaa
sub
inc
xchg
push
inc
inc
xchg
mul
or
rcl
cwde
pop
xchg
mov
arpl
inc
dec
imul
test
and
fild
adc
fsubrp
call
out
mov
ss
adc
fadd
sub
enter
sbb
mov
out
xacquire
mov
es
sbb
stos
sbb
jno
pusha
push
jmp
jle
loop
retf
(bad)
mov
or
in
repz
rol
repnz
mov
pcmpeqd
ss
hlt
mov
shl
scas
int
sub
dec
dec
push
pop
sub
fidiv
mov
stos
in
lock
ror
lds
in
inc
in
lea
rol
(bad)
pop
mov
sub
daa
je
push
add
(bad)
push
jmp
cmp
cmp
xor
jmp
mov
push
jbe
or
data16
out
and
push
out
fwait
push
xor
jle
mov
adc
push
test
add
in
shr
jmp
movs
out
pop
(bad)
adc
inc
cs
aas
cwde
je
(bad)
std
mov
mov
cld
mov
push
mov
out
sti
jb
xor
lods
mov
inc
fbld
mov
inc
mov
jge
aam
test
out
or
mov
sar
or
fs
adc
inc
call
mov
xchg
sar
retf
push
les
ins
pop
adc
xor
(bad)
and
or
sub
shl
idiv
cwde
rcl
inc
add
stos
loopne
xchg
stos
lods
add
cmp
outs
loop
ds
fmul
mov
mov
add
rcr
loopne
xor
sti
jbe
ja
xor
fneni(8087
push
mov
cmp
pop
aas
add
or
push
call
xlat
ss
push
(bad)
sub
outs
pop
xchg
fnstcw
inc
sbb
dec
jne
xor
xor
inc
lods
jno
and
sbb
test
sub
popf
data16
pusha
cmc
inc
pop
cwde
adc
xchg
or
repz
jns
add
bound
ins
sahf
fstp
das
push
dec
cli
mov
les
pop
(bad)
out
test
xlat
das
pop
mov
xchg
daa
lea
xor
mov
mov
out
fadd
adc
enter
(bad)
xor
jae
fs
les
enter
aas
sti
and
(bad)
mov
(bad)
fldcw
sti
xchg
leave
jno
mov
ds
in
into
pop
neg
or
leave
or
(bad)
mov
adc
dec
mov
popa
mov
mov
cmp
loopne
push
sbb
fs
std
rcl
sbb
cmp
xor
and
mov
cli
call
xchg
pop
lock
and
ss
sub
sar
sti
xlat
jns
dec
cmp
test
mov
mov
aas
push
adc
mov
xchg
sahf
jp
fs
mov
in
jl
push
dec
retf
int
xor
or
jmp
aaa
ficomp
movs
cli
push
adc
pop
fst
cli
push
mov
loopne
(bad)
int3
daa
(bad)
leave
dec
push
and
lahf
(bad)
rol
or
add
jg
imul
cld
imul
cmc
jmp
xchg
dec
inc
in
jo
call
pop
js
jns
mov
jp
mov
push
test
out
mov
adc
or
add
jno
cmp
popf
add
ds
or
pop
mov
outs
pop
sub
aam
adc
das
js
scas
jp
add
pop
or
add
mov
xor
push
push
pop
or
jb
xchg
sub
add
mov
mov
pop
mov
lahf
rol
repz
int3
push
ins
mov
je
pop
fmul
mov
ror
and
popf
icebp
cli
ins
xor
xchg
outs
mov
xor
and
movs
pop
push
pop
cmp
or
pusha
inc
xchg
inc
loop
ret
(bad)
out
and
out
movs
add
imul
cmp
xchg
jno
iret
aam
cs
ins
repz
fbstp
addr16
ins
push
pop
sbb
inc
iret
sub
inc
and
push
mov
ss
cmps
push
mov
dec
adc
daa
xor
cmp
rcl
stos
pop
inc
jnp
in
dec
scas
sbb
dec
mov
fld
and
cmp
in
retf
sub
fmul
jb
xchg
pop
inc
scas
sbb
aas
(bad)
cmc
xor
(bad)
int3
xchg
cmp
loop
shr
add
out
or
retf
inc
fisttp
out
cmp
add
test
(bad)
in
pop
out
scas
popa
cmp
sbb
jmp
jp
push
pextrw
mov
bound
jmp
iret
add
add
cdq
mov
in
mov
mov
pop
or
call
adc
dec
faddp
rcl
and
aam
jp
mov
cmp
ror
and
cli
adc
or
mov
not
sbb
jmp
enter
dec
jb
out
(bad)
frstor
mov
call
xor
nop
cmp
sbb
adc
mov
cmp
xchg
repz
sub
sub
sub
mov
mov
mov
mov
mov
gs
jno
inc
pop
fmul
fcom
and
dec
js
adc
push
les
xchg
(bad)
cmps
adc
cld
ret
loope
xchg
div
mov
push
(bad)
push
mov
push
inc
outs
outs
dec
mov
xor
push
dec
enter
mov
cmps
mov
sbb
or
xlat
push
or
add
mov
mov
test
aad
xchg
add
(bad)
mov
in
icebp
dec
daa
sub
mov
jge
imul
cmc
cmc
add
inc
push
js
cmc
dec
mov
enter
test
fistp
mov
scas
loope
aas
cdq
mov
add
cwde
out
pusha
mov
mov
or
push
inc
xchg
push
or
mov
test
mov
enter
jecxz
lahf
jge
jmp
jo
lds
fisub
bound
adc
mov
push
jecxz
sub
sbb
cmp
or
ret
xor
sbb
bound
movs
mov
sbb
push
stos
in
fsub
adc
dec
aam
mov
lods
xor
retf
popf
jp
and
mov
xchg
add
into
iret
ficomp
aas
cmp
jle
scas
imul
mov
push
push
repnz
mov
les
(bad)
shl
sub
and
sub
add
(bad)
imul
mov
jbe
in
test
xchg
jmp
ret
push
cld
jmp
pop
js
xor
(bad)
or
push
mov
shl
add
js
shl
mov
popf
or
mov
test
jnp
(bad)
imul
inc
nop
dec
mov
shl
pop
rcl
sahf
push
icebp
mov
xchg
mov
push
jmp
gs
xchg
pushf
add
dec
dec
push
stc
mov
jnp
inc
jns
nop
or
popa
cmp
fxam
sar
or
int
xchg
dec
push
pop
sti
xor
(bad)
pop
xchg
fimul
jns
and
mov
mov
lds
test
dec
das
xor
in
loop
and
gs
jne
imul
gs
jmp
mul
mov
ins
xor
les
(bad)
xchg
pop
fs
mov
mov
adc
aaa
scas
adc
stc
pop
pop
fmul
out
mov
dec
xor
les
(bad)
leave
jne
iret
inc
daa
sub
push
adc
jno
jmp
sub
nop
sbb
popa
in
sub
jne
ror
sbb
(bad)
sbb
scas
loop
inc
sub
mov
fs
loop
pushf
push
inc
sub
mov
rol
ror
inc
sbb
push
in
rcl
bound
scas
imul
icebp
call
and
enter
push
or
mov
inc
das
sbb
addr16
ins
(bad)
cli
xchg
popf
(bad)
push
push
lods
mov
and
mov
xchg
daa
jl
test
add
jb
ins
inc
dec
adc
xor
ss
inc
xchg
dec
enter
test
outs
imul
adc
mov
addr16
or
jb
repnz
lds
or
pop
or
mov
dec
int3
add
mov
mov
inc
xor
xor
pop
push
pusha
mov
jg
sub
add
call
int
mov
lods
ins
adc
loopne
or
call
mov
fisttp
lods
rol
cld
ss
mov
pop
dec
icebp
sar
jp
and
imul
movs
xor
out
call
xchg
test
cli
sbb
mov
mov
mov
xor
sbb
dec
mov
lds
mov
loopne
test
data16
dec
push
xor
pop
mov
jmp
(bad)
pop
(bad)
mov
mov
push
mov
loopne
pop
sbb
xlat
push
dec
add
imul
pmaxub
fadd
pop
popf
push
mov
in
inc
aam
stc
repnz
sub
lods
dec
jle
cwde
xor
xchg
mov
iret
jne
dec
jmp
je
pop
loop
mov
jl
aam
add
repnz
mov
ds
inc
xor
mov
mov
jo
or
icebp
xchg
outs
pop
xlat
fs
ss
ins
ins
ins
inc
fsub
int
pop
outs
cmps
std
dec
pop
push
das
leave
(bad)
sub
sbb
mov
mov
fdivrp
std
adc
mov
or
dec
dec
dec
sti
sbb
imul
outs
movs
mov
enter
dec
push
sub
dec
call
xor
dec
and
adc
fisttp
jg
add
push
inc
pop
popa
xchg
out
pop
push
les
mov
mov
repz
push
push
popf
fimul
popf
and
push
or
inc
inc
mov
mov
cmps
mov
and
cmp
gs
xchg
(bad)
stc
mov
push
clc
adc
and
imul
into
and
fild
out
sub
dec
mov
movs
dec
and
test
cmp
hlt
ja
push
add
sbb
mov
cmps
cmp
mov
and
mov
sub
cmp
push
or
mov
fst
test
pop
call
sub
push
push
sub
leave
mov
mov
fmul
mov
fcmovne
loopne
shl
mul
push
pop
jg
shl
out
rcr
ds
mov
sbb
movs
inc
cli
xlat
dec
jne
mov
add
push
xchg
imul
jle
mul
jecxz
jmp
repz
nop
fsubr
push
in
cld
cmc
sub
sbb
lea
push
mov
cdq
mov
nop
jp
shl
jae
adc
pop
pop
scas
push
adc
std
xchg
test
shl
sub
mov
rcl
jnp
in
jecxz
lds
push
ror
jmp
jno
cwde
add
add
loope
inc
adc
adc
push
int3
imul
pop
mov
call
and
jle
push
punpckhdq
inc
cdq
(bad)
xchg
pop
mov
loope
cmp
lar
sub
pop
and
popa
pop
dec
cs
mov
xlat
jb
or
cmps
popf
repnz
cmc
push
xor
inc
mov
pushf
lds
in
imul
sbb
sbb
cmp
iret
inc
(bad)
call
or
sub
mov
cmp
xor
mov
aas
cdq
or
inc
xchg
mov
les
dec
cld
push
loope
jmp
push
xchg
or
jo
repz
inc
clc
xchg
jbe
xchg
(bad)
out
ins
inc
xor
mov
adc
pusha
lods
loopne
lds
into
inc
int3
jno
jbe
push
xchg
mov
es
jmp
repz
call
aam
aaa
cmp
pushf
popa
xlat
pusha
(bad)
bound
aas
inc
inc
test
popa
mov
cmps
push
shl
mov
adc
in
push
pushf
lea
mov
fwait
cmp
xchg
jecxz
imul
scas
call
jmp
sahf
fsubrp
loop
xor
(bad)
sbb
push
cmp
int
mov
sub
mov
push
adc
js
shl
imul
or
xlat
lea
repz
sti
repz
xchg
jge
or
pop
jo
cmp
jp
enter
shl
mov
mov
mov
inc
neg
xchg
sub
loopne
hlt
adc
push
cmps
dec
and
mov
popf
lock
dec
cmps
retf
cmp
int
sbb
in
cmc
stos
xlat
lahf
add
fs
mov
pop
loop
out
popf
mov
push
sahf
mov
ss
push
loopne
mul
mov
jg
out
je
fcomp
movs
xchg
cmp
call
push
imul
mov
fwait
stc
xchg
int3
les
mov
dec
inc
(bad)
adc
sbb
or
shl
repnz
sbb
popf
pop
mov
(bad)
push
mov
pop
mov
imul
mov
push
mov
and
mov
or
jge
sbb
jns
mov
or
lock
push
cld
repz
repnz
jle
jbe
adc
popf
or
add
jmp
pop
mov
sbb
sub
(bad)
push
cmp
cmp
xor
dec
outs
sub
pop
cdq
xor
adc
push
shl
push
dec
and
and
sub
xchg
pop
lock
(bad)
test
bound
adc
aad
jb
pop
jmp
or
(bad)
sub
(bad)
imul
loopne
(bad)
pop
lahf
pop
ins
retf
daa
fs
mov
mov
out
rcl
xor
lock
jno
xchg
cmp
out
ss
(bad)
arpl
or
push
test
jb
shr
add
cdq
fs
xchg
fimul
inc
push
inc
push
pop
or
stc
jne
xlat
fmul
adc
jg
inc
mov
mov
fcomi
jp
push
jecxz
adc
ret
fsubr
lea
adc
pop
call
pop
ret
(bad)
cmp
add
int3
int3
pop
dec
push
fbld
mov
add
in
dec
sbb
xchg
adc
xchg
mov
or
movs
call
add
ret
inc
rcl
ss
push
movs
sub
popa
in
call
push
aas
dec
mov
ss
rdpmc
or
mov
inc
mov
adc
pop
stc
rol
sbb
sbb
pop
xchg
and
popf
mov
ins
(bad)
ficomp
jmp
adc
cmps
mov
mov
call
call
lock
mov
add
cdq
pop
jg
mov
inc
cmps
rol
(bad)
call
jo
ins
add
icebp
addr16
inc
nop
nop
mov
cmp
bound
or
retf
push
cmps
fcomi
es
dec
sbb
sub
add
std
xchg
cmc
cmp
cmps
loopne
scas
sub
out
mov
ror
and
sahf
add
sub
jecxz
push
xlat
cmc
cli
inc
dec
rep
xor
in
jnp
mov
sbb
push
mov
jg
popf
xor
pushf
je
add
cmp
xchg
lods
pop
dec
sbb
sub
lods
clc
or
cmc
xchg
push
fcmovnb
lods
pop
addr16
jo
jecxz
imul
mov
pop
repz
sub
push
mov
out
jae
test
aas
adc
in
hlt
and
enter
adc
mov
inc
(bad)
mov
xor
bound
adc
cs
div
push
in
xchg
daa
in
mov
dec
push
sti
cmp
sti
into
jl
xchg
fcmovnbe
test
pop
push
ret
in
or
mov
repz
pop
mov
loope
jp
jecxz
and
cmp
pmulhuw
jae
and
inc
aad
nop
mov
cmps
jmp
in
xor
inc
neg
pop
dec
scas
ffreep
pushf
ja
ja
aad
arpl
test
in
sub
or
mov
cdq
and
mov
pop
xlat
inc
xor
push
add
pop
jmp
ror
cwde
imul
cmc
sub
inc
in
icebp
outs
(bad)
dec
lds
daa
sub
xchg
xor
enter
mov
dec
jg
bound
pusha
mov
cwde
dec
jp
sub
mov
push
xlat
(bad)
daa
pop
aam
or
mov
gs
js
and
lds
xchg
mov
jp
inc
mov
adc
push
dec
xchg
cld
stc
mov
out
lahf
and
outs
add
xchg
sub
mov
xchg
sar
adc
push
push
scas
imul
lock
or
xchg
sbb
push
pop
gs
aaa
retf
mov
test
rol
lods
scas
stos
pushf
in
leave
sahf
nop
ror
mov
xor
iret
cmp
gs
mov
cmc
rcl
adc
or
jae
call
outs
sub
movs
adc
ja
sub
dec
and
push
ror
cmp
enter
stos
enter
sbb
push
and
adc
or
(bad)
jle
pushf
or
ret
out
adc
jno
sbb
mov
inc
jae
sub
cmp
cli
cmp
jns
jmp
out
push
stos
dec
call
jecxz
sbb
scas
leave
cmp
xchg
mov
jmp
pop
xchg
ret
inc
data16
popa
cmp
mov
jmp
push
jae
cmps
int
push
popa
hlt
pop
mov
or
or
jae
cwde
xor
jb
fisubr
pop
cld
pusha
out
fcmovnb
mov
sbb
sbb
xchg
in
pmuludq
push
jb
pop
xor
mov
ss
nop
shr
aaa
fdiv
ss
jbe
icebp
repnz
mov
pop
icebp
sbb
ret
sub
ret
movs
pop
mov
or
ja
and
cld
inc
jg
push
mov
jp
add
cmp
xchg
inc
scas
jbe
xor
adc
inc
loope
inc
outs
jmp
adc
xchg
jne
sahf
out
stos
ss
(bad)
jge
dec
sar
jp
push
popf
test
out
push
jns
mov
cld
mov
inc
stc
adc
jecxz
jg
test
daa
in
iret
nop
(bad)
int3
imul
stos
inc
mov
dec
ins
out
int
cmp
or
test
std
fidiv
jmp
sub
hlt
jno
mov
sub
sti
imul
test
push
jne
leave
sub
les
out
jl
stos
mov
pushf
pop
lahf
fcomp
jmp
sbb
push
mov
stos
mov
xor
movs
scas
fdivr
push
xor
enter
cmc
adc
mov
pop
out
hlt
mov
jmp
leave
push
neg
hlt
int
sbb
xchg
and
mov
or
(bad)
scas
fisttp
push
push
nop
mov
pop
jne
jne
enter
xchg
mov
xchg
data16
add
mov
imul
pop
inc
mov
ficomp
fldcw
fwait
jle
imul
xor
dec
inc
into
hlt
cld
push
mov
sar
scas
addr16
scas
mov
cmps
movs
or
mov
pop
in
push
enter
popa
ss
mov
int
mov
sub
fdiv
mov
rcr
mov
xor
movs
fs
mov
xor
stos
stos
pop
pop
push
mov
stos
sbb
lods
xlat
hlt
ins
push
aaa
idiv
adc
dec
(bad)
cmp
and
or
inc
(bad)
out
push
test
scas
rcl
xor
mov
mov
gs
jb
retf
aas
loop
or
sbb
mov
dec
fbstp
push
xlat
shr
push
mov
and
mov
and
add
hlt
pop
arpl
or
rol
add
stos
imul
and
fmul
xchg
pusha
mov
cmp
cmp
stos
mov
sub
add
ds
xchg
mov
push
mov
pop
and
jp
cmp
dec
mov
fwait
in
inc
jb
std
(bad)
aam
xor
push
inc
outs
cli
add
cwde
in
(bad)
add
std
inc
add
fst
push
jb
or
mov
dec
repnz
xchg
retf
jmp
and
mov
sub
js
je
mov
loop
mov
and
cmp
pop
xchg
cld
cdq
mov
dec
(bad)
cmc
shl
sub
jge
popa
fscale
ror
int3
out
test
and
fild
mov
sti
push
sub
loop
push
ins
dec
sbb
add
loopne
into
and
popf
pop
push
push
loop
and
push
dec
fisub
push
push
shl
idiv
jp
add
jns
and
and
loop
jg
xchg
jl
lock
sbb
cdq
fnsave
sub
and
fld
(bad)
mov
mov
and
loopne
fild
int3
xchg
repnz
push
mov
call
(bad)
xchg
nop
xor
clc
inc
aaa
mov
or
pop
test
and
adc
ja
movs
mov
scas
fldenv
lods
jg
push
xchg
dec
ret
jge
(bad)
mov
add
xor
nop
push
ret
jecxz
inc
sbb
lea
mov
les
rcr
loopne
fadd
(bad)
int3
rsm
test
xor
dec
push
push
dec
mov
mov
movs
pop
hlt
movs
rcr
aas
fidiv
dec
or
jb
add
cmps
jp
push
inc
jb
add
sbb
pop
mov
inc
pusha
stos
mov
gs
pop
ins
movs
push
loop
sub
cs
into
or
and
aam
sbb
ja
or
add
mov
sar
aas
(bad)
in
int3
dec
mov
retf
sbb
loope
jo
dec
sub
inc
adc
sbb
mov
mov
imul
inc
xchg
aaa
push
loopne
popa
mov
ss
xor
fadd
in
enter
icebp
lahf
xchg
xchg
stc
fild
push
mov
cmp
and
jne
(bad)
xchg
lds
push
jno
dec
add
dec
mov
iret
call
lods
xchg
xor
or
or
jp
or
aaa
mov
out
fstp
jl
call
fisubr
pop
jno
and
pushf
pushf
inc
loope
sub
int
mov
jnp
arpl
and
sbb
xchg
in
jmp
push
sbb
mov
stc
test
retf
xchg
in
in
mov
enter
ds
pusha
movs
jnp
xor
xor
mov
stos
mov
ret
xchg
daa
lea
cld
push
jns
add
idiv
arpl
sub
dec
cmp
cmp
jmp
add
adc
or
loopne
mov
div
mov
in
and
inc
dec
cmp
adc
outs
aaa
mov
dec
aam
cmp
push
inc
fist
jbe
scas
loopne
shl
push
or
inc
mov
cmps
xchg
inc
scas
xor
add
out
das
and
mov
sbb
outs
stos
jge
vpshufhw
xchg
mov
dec
or
mov
pusha
sub
(bad)
retf
loop
jns
xchg
(bad)
gs
icebp
mov
xchg
pop
scas
shl
mov
mov
xchg
sbb
in
dec
mov
(bad)
mov
hlt
dec
mov
xor
sbb
adc
test
jae
jge
loope
push
retf
pop
fs
jbe
outs
xor
pop
push
fdivp
mov
(bad)
mov
pushf
inc
scas
pop
push
mov
add
mov
dec
or
mov
movs
adc
lods
lds
adc
mov
jmp
mov
push
jno
jmp
inc
fsubr
adc
mov
addr16
sbb
or
mov
movs
out
fcom
cld
test
sub
xlat
mov
les
push
fcomi
arpl
dec
mov
imul
xchg
enter
loope
lods
xor
fs
and
mov
add
out
inc
ret
pop
(bad)
push
out
mov
dec
addr16
cmp
ja
js
dec
xor
cdq
push
or
mov
and
sub
sub
ins
dec
sti
cmps
push
adc
cmp
outs
pushf
aaa
popf
cs
cmp
mov
adc
ror
fst
arpl
xor
sbb
pop
addr16
test
jne
xchg
jne
xchg
iret
enter
xor
fdiv
hlt
std
dec
push
fcmovnu
mov
push
cmp
mov
fadd
dec
mov
pop
fisttp
mov
mov
xchg
popa
loopne
inc
dec
ss
jbe
inc
sub
(bad)
adc
mov
adc
jg
lods
xor
mov
call
nop
sub
stos
sub
mov
movs
in
adc
lds
cmp
(bad)
mov
imul
pop
movs
mov
sub
inc
dec
mov
js
jmp
iret
jb
xchg
out
cwde
mov
loopne
cmps
sahf
jns
dec
rcr
es
mov
jg
xor
inc
ins
std
test
ja
mov
imul
adc
dec
mov
push
dec
mov
push
ins
lahf
adc
(bad)
push
call
inc
sub
mov
sbb
stc
jmp
jno
out
nop
lods
push
sub
out
shl
bswap
aam
inc
scas
ins
sub
nop
fisttp
int3
stc
mov
das
movs
sub
dec
imul
dec
xor
cmp
fstp
cmps
xor
sub
jae
je
add
mov
iret
bnd
cmc
stos
adc
add
int3
and
into
stos
add
(bad)
call
loop
push
push
pop
pop
ss
dec
and
pop
jbe
aas
mov
jle
sub
(bad)
loope
jne
jae
push
repnz
(bad)
in
add
mov
rcr
int3
int3
inc
jmp
xor
(bad)
les
jg
es
(bad)
inc
div
je
repz
cmp
and
jg
sti
sbb
cmp
(bad)
out
ds
xchg
mov
sub
mov
je
jb
jne
jmp
iret
or
dec
dec
leave
mov
mov
xor
fcom
jle
retf
out
xchg
pop
cli
es
xchg
mov
daa
hlt
scas
or
push
test
movs
jmp
lods
mov
(bad)
or
retf
xor
add
out
es
sub
and
inc
or
lock
enter
shr
mov
fcomp
cmp
pushf
or
je
jmp
call
cwde
jle
fwait
clc
pop
cli
sbb
out
retf
cli
mov
in
shr
xchg
hlt
out
lods
push
add
xor
push
outs
shl
out
dec
stos
sets
and
jb
and
lods
xlat
lea
int
popa
mov
aam
jecxz
xchg
mov
out
lock
mov
cmp
dec
pop
mov
fstp
xlat
fisttp
push
sbb
mov
daa
addr16
or
xor
add
xchg
arpl
and
dec
dec
pop
sbb
fs
xor
mov
adc
lahf
sbb
in
jl
lods
add
cmp
add
outs
test
xchg
fmul
dec
sar
dec
addr16
jg
xchg
shl
mov
shr
mov
ror
and
jge
imul
mov
inc
loopne
or
div
mov
add
lahf
mov
fwait
jno
ret
pop
or
mov
mov
cmp
mov
or
dec
int
mov
outs
push
iret
pop
mov
sub
cli
into
retf
push
mov
push
jp
xor
mov
out
push
xor
xor
bound
in
rcl
hlt
rol
xchg
jo
out
out
pushf
in
xchg
fwait
sub
out
les
jno
retf
enter
nop
and
and
sub
jns
pop
ficomp
lods
pop
loopne
pop
push
sbb
clc
pushf
jecxz
inc
and
dec
push
push
dec
ja
aam
(bad)
or
jb
sub
push
inc
pop
and
in
add
cmp
leave
rcr
cli
adc
mov
mov
adc
mov
in
mov
xlat
jmp
mov
and
stc
mov
jne
fstp
test
neg
push
neg
je
in
push
push
pop
sub
sub
mov
ins
repz
fsubp
mov
test
dec
sbb
out
ins
pop
or
lods
sbb
pop
inc
sub
mov
fsubp
and
push
or
rol
pusha
mov
jmp
mov
test
jbe
jns
cmp
mul
pop
xlat
stos
sub
pusha
sbb
add
sub
jl
mov
push
leave
callw
jmp
lds
jle
pop
xor
addr16
push
or
pop
xchg
add
xchg
dec
out
in
dec
sar
jecxz
fiadd
in
pop
jmp
and
test
fstp
and
(bad)
les
out
call
pop
or
and
pop
mov
retf
mov
lea
pop
jo
outs
rcl
lahf
mov
std
shl
stc
mov
mov
jne
cmp
dec
add
cld
stos
(bad)
push
(bad)
rol
hlt
mov
(bad)
push
jg
sahf
lock
imul
xchg
xor
or
push
or
jmp
jge
clc
movs
fwait
adc
imul
jne
dec
ror
(bad)
cld
je
and
in
clc
mov
push
aam
jle
mov
push
hlt
inc
inc
jbe
(bad)
jno
stos
aam
bound
outs
push
mov
mov
jne
ffreep
fiadd
mov
stc
pusha
das
jmp
pop
sbb
gs
adc
sub
and
push
pop
mov
fs
sub
call
movs
add
aam
ja
inc
in
cmp
add
mov
cmp
das
in
xchg
and
icebp
out
daa
ret
adc
jg
xchg
inc
imul
mov
add
add
sub
je
push
icebp
sti
ins
shr
dec
out
push
call
in
std
iret
cdq
pop
or
sbb
(bad)
rcr
xor
and
or
push
xchg
ss
adc
jecxz
idiv
not
and
pop
outs
dec
mov
test
es
scas
(bad)
adc
shl
aaa
mov
adc
loop
test
xor
(bad)
in
xor
ror
(bad)
popf
adc
mov
pop
add
adc
or
sub
int3
je
push
data16
add
cmps
hlt
xor
and
inc
getsec
inc
enter
inc
mov
loopne
scas
into
out
pop
cmp
call
xlat
loope
inc
and
push
mov
and
jbe
add
cmp
lds
jno
add
pop
pushf
mov
mov
add
es
mov
pusha
mov
fdivr
mov
add
stos
push
ret
sar
ins
mov
pop
sbb
or
mov
xor
retf
daa
push
je
xor
mov
inc
push
push
push
fistp
mov
movs
leave
mov
fwait
into
ins
mul
inc
inc
es
jmp
pop
jmp
dec
push
or
cmp
fmul
push
shr
pop
jmp
les
das
cmp
popf
das
and
jb
inc
(bad)
ret
mov
inc
adc
sbb
and
int
scas
jg
xlat
aaa
mov
jns
sbb
sub
adc
out
les
cmp
dec
mov
out
shr
pop
(bad)
mov
arpl
cwde
and
iret
inc
in
cmp
ror
mov
popa
shl
in
or
stos
std
icebp
shl
add
and
(bad)
(bad)
pushf
push
xchg
or
pop
sahf
pop
dec
add
mov
adc
out
pusha
bound
test
and
push
cli
cmp
in
rcl
cmp
add
and
icebp
ds
movs
js
add
bound
lock
cmps
hlt
hlt
fst
scas
xor
retf
pop
or
pop
dec
js
gs
or
adc
pop
sub
outs
outs
(bad)
pop
sub
jecxz
pusha
test
bound
imul
arpl
outs
retf
cs
xchg
sub
lea
ins
adc
push
gs
xchg
add
cmps
cmp
fistp
(bad)
loopne
sbb
push
out
or
cs
inc
push
mov
loope
dec
dec
cmp
xchg
sbb
sub
loopne
and
jb
inc
std
xlat
outs
daa
jecxz
xor
ficom
xor
stos
jns
and
into
aam
jo
popa
fdiv
xchg
ja
int
pop
je
fwait
nop
jg
test
mov
loop
push
inc
mov
stc
jmp
and
shl
test
mov
aas
inc
cli
mov
outs
out
mov
sbb
minps
cmp
add
cs
dec
dec
(bad)
and
jbe
nop
and
add
lahf
fidiv
inc
sbb
sbb
outs
in
and
scas
xor
jno
and
icebp
ret
ins
fstp
dec
xlat
test
add
shl
scas
inc
pop
in
mov
ret
sbb
stc
jmp
xchg
stos
or
mov
dec
ret
pop
imul
sub
icebp
pop
std
adc
cdq
cmps
add
scas
jecxz
mov
push
into
icebp
es
movs
enter
fmul
cs
lea
lock
lods
enter
dec
out
dec
jle
or
jno
jecxz
lahf
stos
xor
xchg
push
(bad)
dec
sti
adc
jmp
sbb
call
jmp
in
es
sub
in
mov
ja
stos
or
cld
rcr
fcomp
mov
adc
(bad)
mov
pop
cmc
ds
(bad)
sbb
pushf
jecxz
scas
sti
(bad)
mov
mov
and
nop
(bad)
mov
jb
dec
sti
xchg
daa
jl
out
in
inc
(bad)
scas
das
dec
xchg
mov
frstor
imul
lds
das
cmp
jb
sub
jecxz
sub
es
sub
mov
xchg
aad
xor
repnz
mov
jge
adc
xor
jmp
leave
xor
call
data16
push
mov
jb
ss
or
js
push
adc
icebp
jns
clc
retf
lahf
call
inc
ret
clc
das
pop
push
jb
mov
(bad)
aam
test
push
xor
in
add
push
into
stos
inc
cmc
out
out
loop
mov
push
in
push
dec
xlat
leave
push
mov
aaa
xchg
dec
mov
in
sbb
dec
jmp
or
shl
or
outs
mov
and
pop
adc
or
push
stos
cmps
jnp
or
mov
fsubrp
pop
mov
or
gs
lahf
loopne
enter
xchg
std
mov
cmp
add
out
les
inc
add
mov
xor
js
cmp
xchg
data16
cld
push
out
je
add
shl
stos
or
and
cvttps2pi
inc
xchg
repz
jg
jle
addr16
mov
and
dec
data16
pop
cwde
mov
dec
dec
lds
cmp
imul
xchg
inc
sub
and
dec
cmp
push
ret
es
push
dec
int
cmps
and
inc
(bad)
jnp
pop
inc
mov
jns
ins
pop
lea
add
push
add
ins
xor
mov
in
mov
pusha
ficomp
pop
sbb
mov
dec
inc
inc
push
xor
mov
lahf
ficomp
cld
mov
ret
dec
xchg
addr16
cs
cmp
mov
sbb
imul
mov
dec
push
mov
fs
adc
movs
imul
cli
fst
and
adc
int3
aaa
lock
hlt
test
scas
imul
shl
mov
aas
(bad)
enter
push
pop
jb
leave
mov
xor
jae
jmp
aad
mov
add
pop
xchg
or
mov
dec
test
mov
ins
mov
xor
sbb
dec
jmp
out
paddw
rol
sbb
ins
mov
cmp
lds
enter
lea
sti
ds
and
mov
inc
sub
or
and
add
adc
(bad)
lahf
ins
out
cs
div
inc
fsub
lods
fucompp
push
pop
sbb
sbb
or
nop
jno
int3
out
xchg
xchg
imul
call
push
sbb
and
pop
jbe
hlt
das
lock
call
clc
pop
in
out
cmc
test
imul
lahf
into
cs
cmp
xchg
and
sub
mov
les
jmp
hlt
inc
scas
popa
adc
(bad)
loopne
xor
push
mov
push
push
xor
dec
bound
nop
xor
inc
cmp
xlat
push
fdivrp
sbb
push
and
xchg
xchg
adc
out
mov
sub
dec
sub
jmp
fidiv
lock
lahf
push
sub
in
(bad)
mov
adc
add
sti
mov
(bad)
mov
jne
ds
std
inc
mov
gs
add
adc
cmp
push
ja
jae
sar
mov
outs
cs
lods
test
jb
push
imul
shl
dec
mov
cdq
(bad)
outs
test
iret
dec
xor
aam
inc
ret
lock
xchg
cwde
popf
sar
fidivr
dec
arpl
inc
inc
or
adc
pop
pop
call
scas
stos
jno
test
push
push
sahf
imul
bound
or
ins
stos
dec
dec
pop
or
and
fbstp
sub
xchg
adc
mov
or
loop
inc
clc
push
ss
js
xchg
cmp
in
js
sub
ins
mov
fdivr
dec
ret
cld
pop
mov
hlt
cwde
in
rcr
pop
push
mov
mov
fidivr
iret
jbe
jmp
fld1
idiv
sub
push
sbb
stos
mov
xor
stc
dec
lock
cmp
sar
pop
fcom
cld
int3
call
pop
sar
fisubr
test
jno
pusha
sti
jno
shr
and
or
xchg
push
dec
xlat
fcomi
in
mov
jmp
and
bound
fisttp
push
call
cmps
push
mov
adc
add
adc
and
mov
or
das
jmp
test
cdq
cmp
and
out
push
test
push
sub
sbb
(bad)
sbb
add
lds
push
lock
sub
ret
cmps
inc
(bad)
mov
iret
test
stos
jecxz
push
cmp
mov
or
(bad)
cdq
(bad)
clc
popa
lods
imul
and
xchg
scas
(bad)
sub
(bad)
jp
mov
jb
stos
mov
aaa
sub
leave
mov
push
mov
in
dec
popf
mov
pop
mov
es
cmp
lods
add
push
push
jnp
aad
or
jge
hlt
push
call
sbb
(bad)
std
sti
push
xchg
test
pop
ror
inc
scas
mov
icebp
ja
cmp
mov
mov
test
xor
fadd
sub
dec
iret
push
dec
in
xchg
lahf
dec
aad
popf
ins
rcr
mov
lea
aaa
inc
int
out
popf
add
lods
aam
sub
inc
movs
jmp
pop
or
push
mov
(bad)
dec
stos
mov
fnstsw
scas
fs
call
repz
cmps
pusha
xchg
mov
dec
leave
pop
sbb
mov
pushf
out
fldpi
cld
mov
dec
add
mov
test
rcl
xor
and
fst
(bad)
jb
and
xor
(bad)
adc
push
mov
(bad)
imul
inc
push
mov
movs
sahf
inc
jb
inc
xchg
enter
aas
leave
test
xbegin
out
nop
push
push
cmp
jge
aaa
cdq
imul
jbe
pop
push
sbb
add
xor
ins
mov
sub
out
jo
in
push
movs
jmp
push
mov
push
mov
push
adc
retf
sbb
sahf
and
mov
repz
sbb
ror
push
pop
mov
js
data16
scas
test
dec
pushf
adc
mov
and
in
mov
(bad)
and
jle
sbb
add
lock
or
nop
scas
inc
jmp
clc
ds
shl
xor
and
aam
aam
mov
sub
jmp
shr
retf
les
inc
xlat
fiadd
xor
fild
pop
gs
bound
nop
fwait
add
outs
inc
dec
nop
fmul
sbb
sub
xchg
xchg
mov
mov
jg
ins
test
scas
jge
scas
loop
mov
mov
mov
push
xchg
cmp
cmp
jo
repz
out
mov
xor
repz
cmp
das
(bad)
sbb
(bad)
loopne
outs
adc
jne
xchg
cli
sbb
lods
pop
sbb
(bad)
dec
iret
fild
push
cmc
mov
xchg
push
fisttp
ror
xlat
or
call
sub
lods
dec
mov
mul
inc
daa
and
xchg
sub
mov
add
out
cli
xchg
das
enter
push
mov
les
xor
adc
cmp
out
mov
pop
mov
xchg
fidiv
jae
adc
ror
mov
jp
sub
sbb
rcr
push
dec
xchg
aaa
das
or
xchg
test
(bad)
mov
mov
jge
adc
mov
inc
cmp
leave
push
add
hlt
es
xchg
push
test
out
cmp
push
and
and
cwde
jno
pop
mov
sar
mov
movs
enter
mov
out
sub
cmp
(bad)
mov
or
jb
pusha
dec
rcl
adc
out
pop
pop
cmps
(bad)
or
ss
int
sbb
cmp
jno
dec
out
sahf
je
mov
jle
out
lock
push
push
ror
inc
or
adc
add
mov
xchg
mov
jb
inc
test
movs
icebp
dec
inc
or
or
mov
cwde
das
adc
outs
shl
adc
dec
cmps
mov
add
gs
cmp
cdq
test
cmps
fidiv
dec
pushf
add
out
call
inc
dec
adc
push
sub
or
and
sub
and
adc
xor
sbb
mov
jp
xor
sbb
mov
mov
and
pop
push
sub
(bad)
cmps
iret
rcl
xor
adc
(bad)
arpl
retf
ins
sbb
and
jl
ins
dec
cwde
(bad)
pushf
cmp
jb
jmp
push
xchg
jg
jb
mov
push
icebp
rol
jle
(bad)
add
ficomp
retf
sub
sbb
cmp
inc
ss
dec
mov
lds
push
push
test
cmps
fs
test
fwait
mov
mov
test
push
push
mov
mov
cmps
mov
lahf
ror
xchg
shl
ffree
outs
ja
retf
push
lahf
shr
and
int
sub
out
nop
out
aaa
xchg
cs
xchg
sbb
xchg
call
pop
ins
scas
mov
push
xor
and
jge
test
cmps
sub
add
fdiv
es
adc
xchg
push
mov
pop
jo
inc
sub
xchg
shl
xchg
pop
or
xchg
sbb
loop
jns
js
cmps
cwde
jg
test
push
mov
icebp
pop
imul
or
inc
sbb
or
or
bound
xchg
dec
jbe
loop
rol
inc
jmp
sbb
jne
adc
outs
rcl
pop
push
dec
stc
loopne
and
mov
clc
xor
jns
rcl
je
mov
and
sti
movs
xchg
mov
xchg
fst
pushf
add
test
fisttp
pusha
enter
jne
nop
add
fild
pop
and
jns
in
or
xchg
ret
add
popa
sbb
scas
mov
loope
js
and
ds
adc
push
xchg
(bad)
adc
cmps
out
ja
pop
push
data16
into
mov
push
dec
cwde
movs
pop
cmp
or
mov
out
xor
and
aaa
stc
rol
and
or
mov
cmp
outs
mov
enter
sahf
dec
imul
mov
mov
xor
mov
or
inc
scas
jmp
fstp
sti
sti
loopne
adc
ins
movs
jge
cmp
in
add
jge
fldenv
fwait
fs
xchg
js
ins
fcom
and
cdq
repnz
nop
dec
sub
xor
jge
loop
pop
push
adc
enter
test
sti
or
sub
xchg
sbb
aam
adc
je
sbb
pop
pop
mov
xor
jmp
pop
cdq
mov
jo
xor
lds
test
xor
jl
xchg
out
frstor
(bad)
mov
mov
in
pop
sub
dec
clc
mov
push
addr16
jp
add
in
and
push
or
ret
cmp
mov
mov
inc
mov
enter
sub
fcmovu
cmp
out
aad
jp
(bad)
dec
inc
sar
scas
bound
mov
jl
adc
fwait
scas
mov
cli
aaa
ficomp
test
ja
rcr
aas
sub
in
mov
pop
fbld
lds
test
hlt
fwait
pop
mov
adc
cmp
pop
rcl
scas
call
sbb
inc
in
leave
jno
test
push
outs
stc
(bad)
pop
lahf
ja
aad
aas
movs
out
jmp
fcomp
cmc
mov
js
add
ins
mov
les
add
inc
dec
rol
mov
xor
sub
jmp
fistp
and
enter
imul
clc
adc
mov
paddsw
mov
popf
pop
push
sbb
ja
mov
cmp
ss
dec
push
fadd
pushf
sub
stc
mov
das
enter
xor
add
adc
mov
xchg
movs
mov
adc
push
jle
and
je
out
shl
dec
js
fst
shl
jno
ins
inc
repnz
stc
sub
shl
test
call
movs
adc
and
sar
adc
push
dec
sub
pop
sub
jp
mov
daa
xor
rcr
jp
cmps
push
out
sbb
dec
scas
jp
call
mov
test
icebp
add
adc
push
sub
scas
div
jae
hlt
push
iret
jb
sbb
or
into
ja
cmp
mov
popa
add
in
mov
je
das
sub
ss
daa
add
stos
enter
stos
push
aas
pusha
mul
je
mov
sub
faddp
mov
and
cld
push
or
push
daa
or
sbb
jae
frstor
adc
int3
int
pop
adc
sbb
int
imul
test
stc
adc
or
imul
icebp
inc
push
push
sub
pop
rol
sub
out
lock
adc
lahf
mov
rcr
retf
mov
xlat
xchg
dec
shl
pop
repz
add
rcr
movs
and
in
mul
pushf
xor
mov
inc
sahf
pop
add
adc
mov
inc
xor
sub
and
add
xor
pop
adc
cmps
sbb
add
cmp
clc
jg
adc
aad
pushf
inc
(bad)
ins
movs
out
loop
fwait
dec
into
dec
push
dec
stc
inc
xchg
mov
jbe
adc
xor
fld
xor
data16
add
add
cld
rol
pop
xchg
and
mov
aas
jge
adc
lds
arpl
jne
out
aas
icebp
adc
dec
cdq
mov
or
inc
xchg
jno
gs
xor
aam
add
rdtsc
push
cdq
push
ja
lods
pop
(bad)
jns
inc
scas
inc
in
rcr
sbb
push
mov
pop
pop
add
push
add
sbb
out
sbb
xchg
iret
in
push
pop
(bad)
in
sbb
adc
sub
cmp
(bad)
jmp
xor
std
and
fist
sahf
ret
cli
movs
pop
xor
pop
aam
rcl
and
xor
push
xor
cmps
fild
outs
or
inc
mov
(bad)
mov
and
xchg
xchg
xchg
dec
nop
xchg
mov
int3
xor
cmp
test
push
sar
or
cmp
cwde
inc
and
lods
push
xor
rol
out
pop
mov
fs
and
cmp
loopne
add
out
mov
jmp
cmc
mov
cdq
cli
out
pop
pop
pop
mov
sbb
fisubr
cmps
mov
lds
mov
inc
cmp
enter
dec
mov
xor
cld
(bad)
repz
xlat
ret
pop
pop
xchg
add
test
xor
fs
dec
xchg
lock
add
(bad)
push
push
gs
inc
jle
rcl
mul
xchg
ins
xchg
push
fistp
inc
bound
popf
cdq
sbb
dec
xor
cs
jns
retf
adc
sub
mov
out
mov
retf
scas
cmp
loope
(bad)
(bad)
or
jb
jp
fstp
call
shl
fdiv
mov
xchg
jns
jle
inc
ret
sti
and
and
dec
retf
pop
adc
rol
jb
or
push
push
shr
cmps
sub
cmp
mov
xor
(bad)
loop
mov
call
call
fwait
in
xor
movs
gs
pop
inc
fist
data16
sbb
xchg
mov
mov
xor
out
loope
inc
add
test
inc
lods
or
mov
or
pop
pop
lock
and
aas
pop
cwde
add
in
lahf
jbe
jae
and
dec
sub
test
sub
jge
out
jp
push
ss
or
movs
shl
jecxz
push
xlat
cdq
xor
xchg
rol
sar
sbb
pop
imul
fiadd
sbb
and
mov
xor
pusha
outs
mov
nop
mov
mov
jg
pop
pusha
and
bnd
(bad)
push
js
jns
push
sbb
and
test
jmp
ss
imul
jo
lods
clc
jp
repz
xchg
ror
imul
test
inc
push
jl
adc
rcl
xor
ins
ins
jecxz
jno
push
sub
aam
xor
dec
inc
jp
jno
mov
bound
cmp
test
cdq
or
sub
stos
arpl
sbb
xor
jl
int
sbb
bt
(bad)
test
dec
or
and
in
cli
lock
js
iret
in
lahf
in
or
or
shl
lock
test
add
call
mov
imul
or
adc
inc
inc
xor
jmp
shr
adc
lea
data16
jns
mov
pop
retf
mov
loope
add
fist
xchg
fisttp
jp
dec
loop
dec
push
dec
call
cmp
pop
cs
mov
pop
fstp
jp
test
sahf
xchg
repnz
(bad)
add
hlt
into
std
cmps
int
enter
addr16
lea
clc
and
fs
pop
or
retf
div
int
aaa
(bad)
jmp
outs
mov
and
das
push
jg
mov
add
imul
ins
aas
gs
fbld
leave
jae
mov
sub
mov
dec
and
sub
out
icebp
pop
jno
repnz
xchg
xor
add
shr
addr16
fild
loop
int3
add
push
adc
lock
xchg
push
jle
int
clc
mov
and
les
pop
stos
dec
mov
dec
jg
test
jno
sbb
mov
sub
rol
outs
sub
faddp
fwait
popa
leave
mov
add
loop
out
pop
movs
push
lahf
lds
adc
mov
push
push
mov
cmp
sbb
aam
lds
pop
in
mov
pop
addr16
mov
push
inc
mov
ins
cmp
mov
mov
bound
sbb
mov
xor
jmp
movs
and
sbb
ja
fdivr
mov
mov
or
(bad)
mov
call
sti
adc
popf
(bad)
jle
inc
into
out
loop
add
mov
call
mov
and
sbb
ss
push
xchg
lods
add
jl
stos
xchg
int3
stos
sub
mov
jmp
jne
mov
sahf
scas
stc
and
pusha
pop
fscale
xchg
add
js
les
cdq
cli
pop
sub
ins
(bad)
aad
mov
lds
repz
cmp
rol
and
hlt
in
and
jns
and
cmps
vcvtps2dq
mov
mov
jae
adc
cmp
stos
mov
add
mov
arpl
push
retf
xor
inc
push
sub
push
xchg
lods
dec
int3
(bad)
mov
jb
dec
adc
cwde
enter
pop
ins
ss
push
inc
adc
lea
add
mov
mov
sub
dec
or
mov
mov
cdq
dec
mov
pop
sbb
and
inc
add
repz
jmp
mov
data16
push
int
(bad)
add
loop
inc
fadd
inc
and
mov
popf
data16
push
test
add
sbb
jl
push
fsubr
test
(bad)
ficomp
stos
inc
fimul
outs
clc
pushf
jbe
fwait
hlt
push
pushf
retf
inc
in
xchg
in
adc
or
ds
push
outs
push
and
hlt
loope
stc
stos
popa
and
out
pop
sbb
pop
movs
outs
inc
in
fwait
addr16
mov
xchg
adc
cwde
xchg
xchg
mov
cmps
outs
pop
jnp
or
gs
jmp
jnp
jge
pop
push
xchg
pop
and
cmp
repz
call
inc
call
ret
xor
xlat
je
retf
adc
stos
jmp
mov
and
jmp
add
push
call
aaa
aad
jecxz
mov
pop
test
(bad)
cmp
sbb
leave
dec
sub
je
cmp
and
imul
jp
dec
pop
mov
mov
dec
jl
out
mov
jae
mov
mov
jl
repz
dec
sub
pusha
mov
push
xor
push
push
cmp
or
or
gs
call
shr
enter
shl
aam
inc
sbb
add
in
loop
jmp
rol
lds
push
mov
pop
and
lahf
retf
mov
fsubr
jp
dec
fwait
xlat
and
jo
sbb
dec
ss
adc
or
stos
shl
(bad)
ins
xchg
enter
ror
out
shl
jns
sub
wbinvd
dec
imul
sbb
std
pusha
lock
stos
pop
push
mov
pop
out
call
adc
icebp
xor
inc
inc
rol
pop
pop
sub
jbe
imul
lea
pop
clc
sti
and
lods
push
mov
push
or
sub
sbb
mov
jo
sbb
lds
inc
in
cmp
adc
add
push
mov
mov
call
and
dec
dec
mov
(bad)
dec
adc
dec
sbb
and
stos
mov
sub
add
mov
adc
sahf
xlat
xor
int
fild
cmp
inc
dec
ss
jg
mov
cmps
fwait
das
(bad)
mov
in
mov
xlat
mov
fcomp
dec
mov
call
rcl
dec
or
int3
jbe
xlat
sahf
dec
dec
or
fisttp
fwait
out
lods
pop
jl
or
lds
push
retf
imul
or
ds
scas
outs
add
xor
mov
and
pop
test
xor
mov
dec
adc
mov
mov
mov
(bad)
cmp
iret
jno
(bad)
arpl
retf
sub
push
in
xor
adc
jno
(bad)
ficom
imul
xchg
ret
popf
inc
sbb
jge
ins
xlat
fwait
push
nop
jl
mov
cld
or
xor
dec
xor
je
dec
pop
test
and
retf
xchg
xor
mov
pop
mov
push
sbb
jle
outs
xor
adc
jno
aaa
inc
push
in
imul
mov
jg
popa
mov
cmp
mov
scas
aam
mov
xchg
mov
inc
(bad)
sub
sbb
retf
iret
mov
pop
div
aas
mov
fcom
fistp
es
stos
aad
nop
pop
ins
in
mov
push
mov
sahf
fcos
pop
ret
mov
mov
sbb
mov
shl
xchg
cmp
or
ret
or
cmp
sub
jnp
ror
sbb
pushf
and
jno
sti
leave
mul
sub
xchg
movs
mov
cmp
in
leave
jle
sti
fsubr
jb
test
retf
ret
lods
or
out
inc
adc
pop
jo
xchg
xor
test
inc
and
enter
call
or
popa
cmps
inc
cmp
scas
sbb
dec
stc
je
retf
and
(bad)
mov
jg
xor
pop
movs
xor
push
mov
pusha
xor
pop
mov
lock
movs
aam
movs
adc
into
jns
iret
sub
rcr
push
adc
loop
push
adc
jmp
movs
lock
ja
inc
cmp
movs
enter
in
xor
inc
dec
ret
scas
cli
cdq
scas
das
lock
or
cmp
inc
adc
scas
xchg
jae
jmp
daa
mov
mov
jo
jae
dec
or
jp
enter
in
ret
repz
in
daa
xor
ret
outs
xchg
setle
push
xor
cmps
xchg
fild
xor
push
cmp
and
mov
icebp
jbe
pop
push
or
jnp
jne
dec
mov
mov
das
or
mov
cmc
cmp
aas
jmp
push
mov
sahf
aad
jne
icebp
mov
sbb
xchg
loope
sti
xlat
and
cmp
and
iret
lahf
dec
or
std
cld
loopne
sar
mov
jo
jecxz
push
int3
pop
dec
data16
imul
xor
fucomi
mov
aas
(bad)
ds
jae
(bad)
sub
and
sub
dec
cli
pushf
cmp
xor
stos
iret
and
or
sahf
mov
sub
xchg
stc
into
arpl
in
jl
jmp
dec
push
mov
xor
ja
mov
cmp
sub
jmp
cmp
sahf
pusha
adc
mov
sti
push
stos
in
adc
hlt
adc
clc
pop
inc
xor
shr
lahf
loopne
inc
ins
add
mov
jb
xchg
in
pop
push
add
ins
mov
xor
cmp
jl
pop
popa
arpl
and
pop
ret
retf
jmp
sbb
xor
xchg
stos
arpl
adc
sbb
sub
ror
pop
push
mov
retf
in
pop
xchg
add
(bad)
push
cld
xor
mov
out
(bad)
and
imul
fsub
push
mov
xchg
inc
cmp
push
mov
mov
lock
pop
sub
cld
movs
popf
push
pushf
cld
and
and
mov
je
int
jns
sub
leave
and
adc
pop
retf
dec
int
xchg
inc
mov
aad
push
jecxz
stc
cmps
push
xor
mov
lods
in
nop
psubb
out
or
cmp
shl
jmp
(bad)
cs
icebp
or
call
and
add
cs
xchg
xchg
mov
add
pop
push
out
or
js
jp
pop
repz
mov
xlat
mov
push
jge
sub
test
int3
cmp
or
pop
adc
call
into
retf
inc
addr16
ins
icebp
sbb
xlat
push
jnp
nop
mov
mov
test
xchg
lahf
push
or
cwde
test
int3
push
div
add
sbb
mov
push
inc
add
lea
cmp
pop
(bad)
ins
push
sbb
ror
push
aam
aam
push
add
mov
and
push
dec
fiadd
jns
inc
jno
enter
xor
mov
leave
ror
(bad)
jb
repz
or
push
xor
mov
mov
xor
fcomp
shl
test
inc
jnp
mov
int3
fmul
out
std
mul
jp
sub
daa
cli
icebp
fwait
out
cld
push
mov
sbb
adc
pusha
ins
sahf
or
ror
popf
mov
jg
into
mov
aam
add
pop
aad
cmp
nop
xchg
and
mov
jge
cmps
inc
nop
data16
push
dec
xchg
cmps
aad
mov
dec
jmp
fidiv
aas
cld
pop
cmp
movs
nop
push
mov
inc
jbe
dec
or
stos
test
repz
outs
xchg
mov
lods
verr
repz
jmp
mov
sub
sbb
out
mov
lock
mov
adc
sbb
test
xchg
cwde
fwait
cs
and
or
xchg
out
and
repnz
xchg
cmp
push
cli
xchg
push
(bad)
pop
pop
inc
lock
xchg
dec
cmp
mov
inc
ja
loopne
jg
push
lea
or
mov
jb
(bad)
xor
push
int3
outs
popf
imul
mov
out
xchg
add
adc
cmp
xor
add
(bad)
jo
shr
pop
sub
adc
mov
sub
into
div
jle
aaa
jns
mov
xchg
cwde
pop
cmps
scas
sub
jg
hlt
out
inc
rcl
dec
sbb
or
jae
inc
aam
jle
fld
sub
inc
sbb
in
call
and
in
(bad)
in
rcl
dec
movs
addr16
dec
cmp
xor
xor
cli
inc
das
mov
in
add
cmps
push
sbb
mov
pop
in
xlat
fistp
(bad)
in
jb
cmp
inc
push
out
push
retf
push
rol
loopne
and
cdq
cmps
int3
add
daa
adc
or
psubsb
not
push
es
repz
test
mov
(bad)
repz
xor
dec
xlat
fmul
sbb
pop
rcr
imul
dec
push
movs
lahf
popf
sbb
mov
shl
je
lds
rcr
sar
adc
popf
popa
jl
(bad)
retf
hlt
out
test
sub
jne
loope
rol
and
jecxz
and
test
sahf
out
push
push
loopne
xor
sbb
dec
lods
dec
cmps
nop
ficomp
sub
sar
or
mov
mov
adc
dec
mov
inc
sub
sahf
mov
rol
mov
mov
adc
mov
pop
pop
mov
jle
push
ins
test
mov
inc
fild
in
jge
xchg
mov
jmp
jb
outs
gs
aam
mov
or
pop
ins
inc
pop
lods
out
push
xchg
into
test
mov
retf
pushf
ficom
test
push
cmc
jmp
mov
scas
scas
adc
aam
neg
mov
push
fbstp
mov
fnstsw
std
(bad)
sub
jecxz
sbb
(bad)
idiv
es
pop
mov
retf
je
xchg
mov
scas
aaa
push
mov
mov
cwde
xor
jno
mov
mov
mov
mov
rol
dec
sbb
pusha
or
adc
and
scas
adc
sbb
nop
shl
add
pop
dec
std
cmc
loopne
jbe
aad
cmc
push
lds
loopne
push
ja
mov
adc
sub
lahf
retf
imul
pop
or
push
jo
mov
push
push
jae
xlat
stc
fldpi
push
in
push
or
icebp
test
jp
pop
adc
mov
ret
rcr
push
in
push
or
mov
cmp
std
popa
pop
cmp
cmp
nop
or
jmp
out
ret
mov
movs
in
push
inc
dec
jns
sbb
in
leave
xchg
sar
out
ret
movs
mov
xchg
xlat
jmp
out
sub
jecxz
aas
daa
cdq
jo
jae
xor
pop
dec
aam
xor
jmp
and
aas
cli
(bad)
gs
call
add
add
push
mov
push
stos
jbe
or
sahf
add
xchg
ret
or
cli
sar
(bad)
or
mov
jbe
or
cld
lods
ret
jne
pop
xor
jp
push
in
jb
mov
std
mov
fwait
leave
jle
int
ja
cwde
push
and
mov
pusha
inc
iret
movs
xor
or
jle
jne
sbb
clc
pushf
xor
das
jae
push
or
lea
jne
icebp
sahf
fst
mov
push
idiv
sub
jge
cli
test
push
pushf
loope
or
and
mov
(bad)
rcl
ins
shl
xchg
(bad)
pop
(bad)
rcr
or
dec
xchg
sbb
shr
cmp
jne
mov
mov
push
adc
out
cmp
retf
into
(bad)
paddusb
cld
(bad)
xlat
call
pop
rol
call
or
mov
xor
jae
pop
add
xchg
mov
add
popf
adc
jo
xor
jne
(bad)
out
xor
xchg
mov
push
dec
dec
cwde
xchg
mov
repz
mov
cmp
test
adc
dec
xor
push
test
xor
push
jb
jp
out
mov
sub
jge
test
les
(bad)
test
adc
and
(bad)
in
and
sti
repnz
retf
mov
outs
inc
adc
(bad)
sahf
mov
fwait
push
xor
nop
mov
out
lea
cwde
daa
sub
(bad)
mov
lea
cmps
inc
jl
xor
mov
imul
outs
push
inc
cmp
outs
jl
aas
loop
stos
icebp
lahf
pop
jle
stc
sub
repnz
push
adc
mov
sub
inc
and
or
popa
pop
bound
or
jno
aas
es
or
push
sbb
mov
jnp
out
fisttp
add
and
sbb
out
dec
push
and
cmp
mov
cmp
into
mov
jo
jl
xchg
pop
in
add
aaa
add
pushf
jae
fadd
jp
imul
inc
add
mov
jl
jp
rcl
hlt
mov
bnd
daa
cmps
pop
adc
and
and
(bad)
dec
and
xor
or
mov
cld
cmps
aaa
mov
iret
mov
jbe
pushf
imul
xor
inc
sar
pop
mov
pop
cmp
push
pusha
pop
ins
lds
cmp
jns
addr16
test
je
(bad)
inc
sbb
sub
push
fmul
sbb
sti
dec
enter
in
jg
dec
out
push
in
clc
scas
pop
aaa
mov
add
pop
call
das
or
or
bound
cli
xchg
mov
(bad)
lds
add
ret
jnp
ficomp
pop
or
sbb
loope
repnz
dec
inc
jb
icebp
jne
or
and
pop
out
not
stos
add
outs
xchg
push
mov
imul
mov
sahf
rcr
or
lods
jge
pusha
inc
sbb
jnp
nop
xchg
dec
ret
xlat
mov
ror
pop
mov
mov
imul
jecxz
jp
retf
rol
pop
imul
cmp
sub
mov
es
push
ins
ins
push
mov
or
addr16
repnz
xor
fld
mov
cmp
jge
leave
mov
out
pushf
jp
lock
inc
mov
cmp
in
lock
cmp
mov
jg
loop
dec
inc
dec
cmp
sub
retf
(bad)
fidivr
inc
sbb
mov
in
adc
retf
out
inc
or
jg
xbegin
pop
std
xor
jecxz
jl
xor
mov
jbe
scas
retf
scas
aad
add
sbb
lock
dec
adc
fnstcw
or
mov
mov
or
test
adc
adc
mov
in
jo
add
inc
movs
call
daa
sub
cli
js
add
into
js
mov
fimul
push
(bad)
in
mov
sub
inc
fwait
jge
leave
dec
mov
mov
outs
mov
push
mov
mov
add
push
(bad)
aaa
pop
shl
pop
push
mov
mov
(bad)
loopne
mov
shl
inc
pushf
je
cli
outs
push
cmp
add
dec
xor
mov
call
ror
xor
or
stos
xor
clc
out
sub
ds
jle
push
adc
or
mov
xor
add
ss
and
icebp
pushf
inc
mov
out
fnsavew
mov
adc
das
mov
out
and
push
fst
xchg
pop
pushf
sub
in
leave
mov
mov
pop
mov
shl
out
dec
xor
clc
sbb
sbb
inc
ds
or
push
sbb
xchg
pop
clc
cmps
jp
adc
add
jno
out
jle
dec
in
scas
fiadd
repnz
push
adc
cmp
mov
ret
std
mov
daa
mov
mov
inc
cmp
xor
push
repnz
and
and
xor
mov
jmp
xor
dec
add
fadd
and
sub
mov
adc
retf
out
repz
mov
pop
mov
hlt
xor
sbb
inc
and
inc
fcomp
leave
stos
push
in
xchg
cmps
jmp
aas
repz
lea
sub
mov
mov
sti
sub
stc
mov
dec
movs
ret
stos
cmp
adc
adc
jmp
mov
inc
pop
pop
js
outs
repz
fild
inc
push
xor
pop
sbb
test
jecxz
repnz
xchg
sar
(bad)
jl
cmp
outs
stos
ret
sbb
mov
or
pop
sub
add
sbb
pop
mov
cmp
mov
adc
sub
lods
call
mov
dec
lods
ss
in
adc
cmc
push
test
jle
pop
xor
xlat
cld
les
pusha
ins
mov
test
cmp
adc
mov
aaa
nop
lods
sbb
pop
mov
xchg
cld
push
inc
and
enter
in
or
push
retf
xor
movs
loope
inc
fld
je
add
cmp
add
push
(bad)
ja
and
xchg
sbb
inc
push
leave
mov
out
repnz
mov
call
add
jecxz
repnz
push
repnz
push
loopne
or
shr
and
sub
cwde
(bad)
(bad)
data16
jne
test
in
nop
scas
pusha
test
adc
scas
mov
retf
and
in
xchg
dec
mov
mov
scas
das
stos
dec
mov
bnd
outs
add
jmp
add
adc
(bad)
shl
in
lods
pop
inc
sbb
jmp
xchg
jl
cmp
ins
mov
in
dec
and
mov
adc
push
inc
mov
retf
ja
cmp
lods
cs
xchg
and
mov
call
jnp
popaw
adc
cld
dec
inc
push
pop
ins
mov
xor
retf
fcomp
loopne
stos
call
mov
add
xchg
or
loopne
lods
lods
add
(bad)
and
or
in
imul
call
mov
ins
add
pop
pop
xchg
and
stos
sahf
dec
pop
pop
pop
push
adc
adc
(bad)
aaa
mov
mov
scas
xor
(bad)
(bad)
sbb
aas
cld
jmp
cdq
dec
mov
cmc
jge
or
push
test
and
push
xor
adc
ja
sub
test
(bad)
lock
pop
je
xchg
sbb
fisttp
inc
dec
push
adc
and
jge
sbb
shl
push
ret
dec
loopne
inc
not
mov
popf
not
mov
xchg
mov
push
std
or
sub
pop
shr
sbb
ja
or
cmovb
xchg
adc
push
push
and
out
add
adc
push
pop
lock
add
lahf
jp
movs
imul
push
jl
and
and
lds
mov
in
jg
(bad)
stc
jmp
dec
retf
rcl
scas
dec
out
retf
outs
mov
push
cmp
loop
pop
cmp
mov
out
imul
cld
pop
push
inc
not
aaa
aaa
cmp
xor
adc
dec
mov
inc
pusha
jnp
xlat
pop
sbb
xor
into
stos
fsubrp
sbb
mov
or
hlt
push
jne
fs
dec
add
cmp
push
ds
jge
inc
in
mov
mov
(bad)
mov
add
push
ficomp
inc
sub
fisttp
cmc
jp
ja
mov
bound
mov
jo
adc
mov
cld
push
lock
fdiv
cmps
ret
mov
inc
outs
push
sbb
rcl
inc
mov
cmp
adc
(bad)
sbb
push
mov
jnp
ds
inc
stos
mov
xchg
js
pushf
xor
sbb
mov
mov
xchg
mov
mov
push
fisubr
fwait
mov
pusha
mov
je
dec
cmp
lods
mov
imul
xlat
dec
jp
inc
jb
aam
push
and
add
jl
(bad)
fstp
rcr
or
fs
dec
(bad)
jecxz
out
xchg
dec
shl
fnstcw
xor
mov
mov
xchg
inc
outs
fld
mov
inc
inc
fnsave
push
push
mov
push
mov
rcl
xchg
mov
mov
push
in
adc
leave
cmp
out
xor
and
jnp
ror
mov
ret
int
or
sbb
jnp
bound
cmps
xlat
jb
xor
retf
test
idiv
sub
jge
and
jg
mov
add
icebp
lea
fiadd
ss
add
mov
add
xor
cmp
movs
sbb
sbb
ins
sub
push
fisub
cmp
add
push
loop
sar
and
lea
or
adc
cmp
aas
fisubr
push
xchg
and
imul
push
jle
xchg
xor
inc
mov
pop
in
enter
jo
inc
mov
push
push
nop
in
retf
into
nop
popf
add
jmp
jnp
push
dec
(bad)
push
mov
xor
sbb
sub
(bad)
fld
neg
sub
jmp
into
adc
jp
inc
clc
xchg
lock
cmps
out
cmps
push
sbb
pop
jl
xchg
xchg
or
iret
mov
mov
dec
ins
ror
packsswb
push
adc
fxam
pop
inc
arpl
jge
es
scas
dec
cmc
pop
inc
ret
gs
xchg
push
retf
aad
call
pop
ror
sub
mov
cmp
sbb
je
inc
arpl
addr16
cmp
mov
fs
and
leave
aas
ins
and
mov
and
loop
out
mov
scas
sbb
test
mov
(bad)
aad
movs
adc
(bad)
xchg
(bad)
push
or
pop
sahf
add
into
fdiv
cs
mov
xchg
sub
retf
xor
sbb
or
ss
(bad)
call
push
pop
lods
outs
xchg
dec
inc
daa
jmp
leave
loope
les
xor
mov
push
pop
cmovs
icebp
mov
dec
std
movs
mov
imul
inc
pop
outs
sbb
test
fisttp
xor
cmps
rol
jns
sbb
and
xor
dec
adc
push
mov
xchg
(bad)
int
idiv
int
lds
mov
test
jp
xor
jnp
sub
mov
shl
in
jp
mov
ins
ret
pop
mov
add
ins
mov
cwde
mov
ins
mov
sar
inc
adc
add
daa
push
xor
mov
bound
icebp
xor
ins
jmp
in
mov
shr
sub
push
rcl
mov
and
and
into
sbb
pop
leave
cmp
pushf
xchg
fsubr
xlat
js
xchg
xor
xchg
and
mov
bound
movs
xchg
out
int3
stc
push
stos
cmps
imul
or
or
pop
clc
sar
mov
mov
push
push
jbe
push
mov
dec
inc
in
addr16
jg
shl
push
les
(bad)
pop
popa
sbb
lods
sub
rol
movs
mov
daa
ficomp
dec
pop
js
ins
mov
cmc
jecxz
push
inc
jbe
add
retf
adc
cs
sar
dec
push
loope
shl
mov
cmp
(bad)
iret
jge
(bad)
icebp
push
ds
sub
pop
mov
call
scas
dec
jns
in
dec
loop
adc
xchg
test
out
call
outs
retf
add
or
and
pop
adc
fstp
lock
pusha
xchg
leave
sub
jp
movs
imul
add
mov
mov
mov
into
jno
pop
retf
or
sbb
cs
aad
mov
lock
idiv
ror
push
repz
das
lods
loopne
(bad)
dec
xor
jp
cli
dec
cmp
adc
lock
dec
in
xor
or
fst
and
out
into
sub
mov
cmp
xlat
inc
add
test
and
and
div
dec
lea
cdq
dec
push
cmp
jae
pop
mov
(bad)
js
xchg
in
xor
add
sub
mov
hlt
cmps
add
mov
mov
mov
dec
xchg
cmp
mov
loopne
inc
mov
stos
push
iret
aad
enter
test
dec
lods
shl
fcom
pop
outs
mov
cld
in
fidivr
cli
add
xchg
aaa
or
dec
adc
(bad)
shl
mov
(bad)
mov
jne
lods
dec
and
ins
jo
dec
cmc
or
pop
jb
mov
fisub
mov
xor
test
mov
shr
mov
cmc
mov
cmp
push
(bad)
jp
(bad)
ret
dec
xchg
add
in
inc
mov
ja
fild
push
scas
call
outs
les
ror
(bad)
and
sub
jmp
push
ror
sahf
sub
in
lahf
stos
and
jle
in
dec
bound
rcl
(bad)
and
aad
inc
inc
ror
call
xor
mov
sub
xor
sbb
stos
and
int3
sub
rcl
push
cdq
or
cmp
lock
dec
inc
aad
sub
jmp
jp
dec
ins
(bad)
movsx
ins
mov
mov
push
aam
mov
scas
push
mov
jp
cld
(bad)
or
ret
ds
sahf
hlt
mov
cmp
(bad)
jno
inc
xchg
loopne
cmps
inc
adc
loop
fsub
mov
xor
add
std
sbb
cmp
inc
addr16
arpl
pop
in
scas
xchg
mov
jns
mov
shl
mov
aaa
movs
jnp
mov
loope
inc
imul
mov
cmp
popf
das
sbb
ret
int
xor
lods
mov
lods
bound
popa
dec
dec
mov
bound
mov
pop
sub
stos
inc
ss
clc
(bad)
mov
ror
cmp
xchg
repz
dec
out
fdiv
jle
jb
jne
push
dec
lea
sbb
adc
pop
cmp
mov
jge
xchg
retf
lea
in
(bad)
mov
out
mov
or
mov
repz
loopne
test
ror
xchg
inc
sub
mov
xor
add
mov
mov
mov
lea
and
in
shr
fwait
stos
ret
fisttp
jns
int3
push
sti
cmp
je
stos
fidiv
jmp
jb
scas
add
mov
mov
push
cs
hlt
outs
leave
cdq
pop
int
adc
fwait
ins
(bad)
sbb
ja
and
pop
shr
cdq
xchg
push
mov
inc
in
cmps
mov
and
das
push
pop
out
cmps
push
out
cmp
cmc
inc
mov
and
push
les
arpl
dec
mov
mov
shl
mov
ins
jmp
sub
push
jmp
je
cdq
hlt
mov
aam
dec
pushf
jl
nop
mov
xor
cmp
imul
dec
enter
pop
ins
mov
inc
neg
aas
push
jp
sbb
(bad)
scas
xor
outs
out
inc
retf
mov
lea
iret
sub
mov
mov
add
loope
jmp
mov
sbb
in
ss
scas
imul
stos
fs
(bad)
loope
into
pusha
xchg
pop
xor
jl
push
fcom
jnp
and
mov
(bad)
mov
adc
leave
jbe
add
sbb
xor
lock
dec
mov
dec
(bad)
adc
add
mov
inc
sti
dec
or
xor
sub
pop
fsubrp
sbb
mov
imul
fisub
push
adc
sub
loopne
fiadd
(bad)
adc
jno
xlat
jmp
adc
outs
idiv
outs
inc
dec
add
mov
arpl
lods
out
into
fcmovb
jo
test
push
push
in
cli
pop
push
imul
inc
je
cs
mov
mov
push
sbb
nop
int3
pop
(bad)
sbb
hlt
dec
adc
and
stc
adc
xor
cld
call
jno
jno
movs
(bad)
cld
adc
xchg
inc
sbb
movs
test
pusha
push
cmp
packuswb
mov
xchg
or
push
bound
movzx
push
mov
shl
pop
mov
shl
sbb
das
xchg
lds
pop
adc
aam
shr
xor
out
scas
(bad)
cdq
enter
outs
psubd
xchg
les
and
pop
jge
dec
or
mov
jo
(bad)
daa
inc
dec
movs
dec
div
outs
dec
sti
add
and
pop
mov
shl
inc
jecxz
xchg
or
out
mov
jle
int
fiadd
and
mov
ss
cmps
dec
pop
xchg
sub
loopne
jno
pop
ror
and
and
cmp
sub
jbe
stos
mov
push
inc
dec
or
std
dec
cmp
cmp
les
test
sbb
daa
sbb
call
add
not
mov
dec
scas
dec
cdq
inc
mov
and
stc
xor
xchg
sbb
or
dec
in
mov
enter
mov
or
aas
jmp
stos
hlt
adc
pop
test
call
and
xchg
xchg
cmp
les
ss
jae
dec
inc
fwait
test
adc
icebp
fisttp
es
pop
or
xor
(bad)
adc
cmp
or
xor
cmp
pop
mov
lar
fild
dec
xchg
sub
shr
cmp
mov
ss
add
pop
mov
cmp
hlt
adc
sahf
lock
mov
adc
mov
call
jbe
rcr
push
nop
and
cmp
or
mov
xchg
sub
lock
ds
cmc
mov
add
jge
xchg
inc
cmp
pop
cmc
scas
je
pop
aas
fst
es
sbb
add
cmp
adc
in
jmp
mov
mov
nop
je
and
clc
add
sbb
pop
fst
sbb
pop
or
aam
out
daa
dec
popa
sbb
pusha
retf
call
sti
cwde
in
push
mov
mov
jns
mov
sti
scas
das
fild
pop
xchg
lods
or
scas
or
xchg
push
data16
fadd
mov
pop
faddp
mov
fs
jle
cmps
cmps
inc
test
pop
and
xor
in
inc
jg
fdiv
out
test
cmp
push
cmc
jb
jae
fdiv
push
iret
jp
mov
lods
cld
in
mov
xor
(bad)
dec
adc
fwait
ss
lahf
test
aas
cmc
sbb
push
movs
imul
inc
mov
mov
ja
scas
lea
shl
(bad)
cmp
div
or
fidivr
inc
retf
shl
cmp
repnz
shl
inc
jle
cmp
sahf
push
pop
test
pop
(bad)
shl
and
movs
push
ror
dec
mov
ja
cmps
loopne
cld
retf
jns
inc
fcomp
ins
sbb
dec
mov
aaa
inc
xor
rcr
jmp
cli
pop
or
int
js
ror
out
enter
add
pushf
stc
inc
in
fdivp
ins
mov
cdq
lds
stos
into
adc
movs
inc
inc
or
fwait
adc
cmp
push
es
mov
and
mov
fincstp
stos
shl
stos
push
jo
sbb
mov
fldenv
call
cmp
call
adc
xchg
outs
ret
cmp
sbb
repz
cld
test
fs
mov
adc
jmp
pop
test
mov
mov
les
daa
or
mov
xchg
ins
shl
loopne
xor
xor
adc
fcomip
aad
ret
cmp
dec
popf
push
int3
fadd
arpl
inc
sbb
and
inc
repz
mov
jo
test
mov
mov
add
shr
push
xchg
scas
mov
pushf
sub
sbb
imul
mov
jge
lock
mov
jecxz
dec
mov
sub
lock
mov
sub
int3
test
xor
dec
sbb
sahf
leave
mov
fld
cli
in
xchg
push
inc
clc
scas
ins
ins
call
push
out
lock
arpl
ds
push
pop
adc
sbb
ss
pop
pop
not
and
mov
pop
cmp
pop
and
adc
lds
lods
dec
mov
lods
inc
mov
xchg
pusha
cmp
mov
mov
add
adc
mov
stos
rol
mov
push
cld
or
shl
popa
arpl
push
arpl
dec
rcr
xor
aad
push
mov
mov
push
jno
in
pop
fst
sti
ret
or
push
out
fwait
arpl
dec
les
jne
mov
push
xor
retf
clc
aad
xor
add
jecxz
hlt
imul
in
fdivr
pop
and
neg
lock
sti
push
shr
pop
xchg
push
in
ja
call
fdivr
mov
pop
jg
bnd
pop
push
sbb
xchg
nop
stos
retf
pop
xor
imul
les
neg
jmp
out
outs
mov
outs
cld
pop
mov
daa
cli
xor
out
test
or
add
cmps
cli
xchg
xchg
bound
imul
sub
loop
mov
rcr
pop
dec
lea
lahf
test
jno
test
retf
cmp
call
ds
add
mov
add
adc
loope
hlt
movs
xor
pop
adc
sub
retf
not
ins
and
das
xchg
adc
adc
dec
cmp
sub
out
test
mov
and
cmp
jb
test
sahf
enter
cmp
popa
push
mov
pop
test
pop
mov
xor
pop
sub
xor
dec
test
iret
push
or
(bad)
or
aad
sub
jnp
xchg
data16
addr16
lods
rcr
jle
loop
or
test
jecxz
sub
pop
and
retf
leave
or
mov
xlat
gs
fs
xor
fwait
mov
ja
dec
add
cmps
mov
dec
pop
dec
fs
sbb
ror
or
cmp
(bad)
jns
sub
call
enter
cmp
cmc
stos
push
mov
neg
(bad)
push
(bad)
in
and
(bad)
adc
bound
scas
outs
iret
(bad)
popa
ins
push
adc
popf
fs
mov
xor
pop
inc
xor
inc
arpl
(bad)
and
scas
sub
movs
(bad)
pop
cmp
jb
push
sti
and
push
dec
sub
sti
jae
inc
fcom
cli
and
mov
jo
fidivr
add
mov
es
cdq
movs
and
xor
repz
add
aas
pop
pop
pusha
or
movs
pop
fnstcw
into
sub
ja
xlat
neg
into
sub
xchg
lea
mov
fcmove
stc
fcomip
jne
cmp
out
jbe
xlat
dec
pop
and
mov
sbb
xchg
pop
movs
iret
ret
push
cmp
ffreep
retf
imul
xor
or
aaa
and
sbb
fcmovb
inc
ja
ds
xchg
cmp
fdivr
or
cmc
adc
out
outs
push
jle
enter
pop
mov
add
repz
in
inc
add
fst
mov
cmps
mov
push
in
stos
inc
call
out
shl
mov
mov
push
and
cmp
adc
(bad)
mov
push
dec
out
sbb
lock
sub
or
movs
hlt
mov
dec
dec
mov
pop
mov
fsubr
jg
mov
gs
icebp
sti
aas
cmps
jp
sbb
sub
mov
sbb
cmp
rcr
pop
out
mov
mov
ds
jnp
(bad)
scas
xor
das
pop
stc
(bad)
int
xor
cld
sbb
mov
add
mov
jmp
xor
and
jnp
or
and
push
xchg
repz
neg
add
or
mov
add
dec
add
iret
mov
xchg
push
mov
pop
not
lods
sbb
rol
cmp
lods
sbb
imul
jmp
pop
cmp
outs
iret
xlat
cmp
or
adc
int
rcl
test
out
lds
jno
pop
jmp
xchg
fist
rcl
popa
add
ins
cli
pop
push
add
arpl
icebp
repnz
xchg
clc
sbb
adc
cmps
fwait
mov
cmp
test
xchg
and
jae
and
adc
enter
mov
sbb
test
sbb
mov
je
(bad)
outs
not
cmps
xor
stc
nop
into
scas
cmp
(bad)
ror
mov
lds
(bad)
ret
pop
or
sbb
imul
or
cmps
and
stc
inc
cli
loop
sub
repz
adc
in
ret
inc
jb
jnp
imul
je
pop
cwde
add
out
stos
and
adc
adc
dec
and
or
pop
mov
xor
fst
pop
xlat
sbb
xchg
mov
jg
or
ja
into
xchg
mov
xlat
push
and
xor
push
or
out
xor
pop
jo
xor
rcl
mov
call
mov
imul
xchg
mov
cmp
cmp
dec
cmp
sbb
sbb
lods
dec
push
mov
mov
adc
je
scas
aas
dec
ret
inc
push
fwait
jne
or
repz
sbb
and
dec
sub
test
lea
xor
into
push
inc
scas
pop
xor
gs
rcr
and
test
inc
push
dec
movs
add
sbb
pop
aas
in
push
test
call
in
les
sbb
setae
ins
je
push
xchg
in
xchg
jp
mov
scas
pop
dec
(bad)
add
int
adc
pop
loope
mov
sbb
fmul
xor
xor
ficom
ror
adc
mov
ror
pop
stos
ins
and
test
inc
iret
fidiv
leave
cmc
mov
imul
bound
rcl
inc
fisttp
lea
mov
and
push
cmp
fs
add
mov
lock
rol
mov
mov
cmp
mov
add
mov
or
adc
in
mov
dec
mov
sbb
gs
mov
or
mov
and
mov
mov
push
mov
popa
jno
mov
or
rcr
(bad)
jo
inc
test
ficomp
push
cmp
jl
sub
fsub
sbb
fdiv
shl
jo
mov
or
ldmxcsr
add
push
sub
xchg
inc
cld
sub
xor
(bad)
repnz
lahf
inc
inc
mov
mov
(bad)
push
pop
lods
xchg
jo
popa
jg
sar
add
bound
rcl
mov
hlt
push
test
lea
and
outs
push
cmps
xor
dec
not
inc
jmp
(bad)
fsub
adc
ins
cmp
movs
cmp
repz
mov
cwde
add
fstp
call
in
pushf
push
sahf
pop
and
push
aad
in
push
pop
fidivr
into
xlat
imul
pop
or
add
jg
ror
rcl
nop
jecxz
popa
sbb
add
scas
mov
mov
or
fs
and
retf
xor
sbb
cli
mov
mov
cmps
in
cmps
cmp
jns
stos
cld
sub
pop
iret
inc
cmps
shr
iret
and
mov
outs
in
cdq
jns
retf
adc
sub
frstor
push
das
mov
xor
pop
pop
mov
pop
(bad)
push
mov
test
mov
adc
hlt
stos
push
movs
pop
dec
test
push
aam
fwait
push
in
je
(bad)
push
leave
ret
dec
sub
jp
test
icebp
pusha
add
lds
mov
and
push
in
(bad)
into
clc
jns
loopne
jnp
sub
xor
mov
xlat
inc
cwde
or
imul
fdiv
add
pop
sbb
sub
mov
fcomp
cmc
pushf
imul
jmp
cwde
xchg
jns
xchg
mov
or
in
xchg
add
popa
mov
sti
dec
(bad)
sbb
out
(bad)
sti
sub
shr
sub
in
mov
jle
xchg
test
push
iret
test
mov
add
in
adc
xchg
stos
adc
aas
mov
fst
push
pusha
pusha
and
jne
push
(bad)
aad
fiadd
fsubr
adc
mov
int3
and
mov
mov
loope
jp
dec
and
cwde
rcr
and
std
pop
jae
jae
sbb
sysexit
add
mov
or
adc
and
dec
or
movs
or
loopne
daa
push
mov
fild
sbb
xchg
gs
fwait
or
inc
addr16
xlat
and
cld
inc
xchg
push
fs
cs
jb
call
cdq
jl
cdq
call
push
cmp
add
and
and
mov
and
faddp
sti
fwait
call
jmp
arpl
in
pop
aas
shr
jle
scas
mov
scas
push
daa
aaa
jle
dec
daa
xlat
cmovp
push
xchg
mov
push
test
cmp
xchg
xchg
add
pop
pop
mov
mov
cdq
mov
pushf
(bad)
xchg
inc
test
popa
push
mov
xor
and
jecxz
sub
inc
aaa
(bad)
pop
inc
loop
pop
or
sub
das
and
mov
fwait
mov
mov
pop
aas
mul
sub
not
jmp
sbb
into
lea
sub
inc
pop
xor
mov
xlat
rcl
jmp
inc
sub
jbe
int
scas
push
ds
clc
sub
ret
mov
mov
loopne
(bad)
adc
je
fistp
aas
pop
jnp
pusha
in
dec
mov
dec
cmp
dec
sbb
adc
scas
dec
sub
jp
fwait
popf
ss
call
call
stc
movzx
cmp
adc
cli
call
pop
retf
pop
push
push
pop
dec
mov
popa
(bad)
mov
dec
sbb
jecxz
push
popf
dec
xchg
pop
push
push
clc
pop
inc
mov
add
stos
cwde
lahf
sub
sar
pop
dec
add
adc
mov
jle
inc
and
rcr
and
fsub
jb
mov
jmp
cmp
dec
int
or
pop
gs
and
push
cmp
sub
dec
(bad)
stos
ja
mov
jg
mov
scas
or
adc
sub
pop
or
stos
xchg
retf
test
int
dec
mov
das
mov
iret
(bad)
pop
add
cmp
lahf
and
inc
mov
sbb
push
push
dec
lahf
in
int3
jecxz
rcr
lds
lds
fs
jnp
or
bound
aam
imul
fnclex
sbb
dec
push
popf
add
hlt
daa
inc
(bad)
mov
sub
mov
dec
dec
lahf
jge
cmp
gs
jge
sbb
mov
mov
xchg
loop
mov
or
ins
and
rcl
lea
add
add
jo
mov
jge
lock
call
jmp
sbb
fldcw
xor
outs
pop
inc
push
xchg
cdq
mov
sub
addr16
xchg
jnp
mov
out
rol
and
gs
in
std
add
and
mov
js
dec
popf
out
enter
test
jae
ret
mov
jp
stos
imul
jb
lahf
shl
mov
fldcw
test
sub
push
(bad)
js
mov
xor
jecxz
test
mov
xor
cmp
std
aad
mov
cmps
add
or
test
push
sbb
jo
cld
fnstcw
aaa
mov
ins
jl
or
and
gs
arpl
jo
(bad)
fnstsw
cs
sbb
mov
dec
pop
xor
inc
inc
jbe
mov
xchg
sub
push
in
ss
lods
ins
sbb
jecxz
pop
ss
or
pop
pop
in
mov
or
movs
leave
cmp
sub
hlt
mov
jb
push
mov
mov
loope
sbb
or
lods
mov
jmp
mov
or
call
jge
mov
push
leave
cmp
mov
outs
inc
es
int
pop
shr
dec
lods
ret
push
push
xor
das
jl
lahf
sbb
pop
outs
movs
(bad)
mov
out
(bad)
sub
pop
(bad)
ins
repnz
test
clc
out
retf
in
sub
add
ja
mov
outs
sub
mov
push
retf
push
jns
ficom
retf
add
mov
daa
dec
jo
mov
or
xor
mov
jp
mov
aaa
jecxz
cld
pushf
mov
lea
sahf
lods
bnd
popf
movs
adc
adc
mov
push
or
add
repnz
pop
movs
std
les
jmp
xor
mov
cmp
js
mov
jl
and
mov
inc
mov
push
hlt
adc
out
dec
sbb
aad
cwde
cmp
ss
mov
pop
mov
in
es
push
mov
imul
sub
rcl
push
adc
add
cmc
fcomp
jb
dec
out
movups
or
das
pop
adc
scas
scas
dec
push
adc
push
enter
adc
add
popa
pop
mov
pusha
adc
aad
stos
fdivr
or
jmp
jg
aam
mov
add
inc
aas
repnz
mov
movs
push
jge
and
xor
mov
mov
mov
ds
mov
push
jne
pop
out
lea
cli
adc
jmp
sbb
dec
sbb
imul
cmp
es
mov
aaa
outs
mov
je
jl
fwait
sub
or
mov
mov
jmp
push
jmp
dec
mov
mov
mov
or
fistp
clc
pop
stc
sbb
mov
jb
sbb
add
lods
sahf
or
sub
push
call
push
int
jmp
test
ret
cmc
and
jecxz
fild
idiv
mov
fs
pop
mov
adc
sahf
dec
sub
pop
scas
lods
je
xor
push
inc
mov
sahf
jmp
xor
jns
and
mov
shl
add
sar
fsubr
jmp
mov
push
xor
mov
dec
ins
std
sub
retf
sbb
cmp
cmps
xchg
adc
repnz
in
aam
fimul
enter
xchg
fs
mov
push
daa
pusha
mov
push
add
stos
cwde
in
push
je
popa
cwde
sub
inc
movs
add
in
repz
sub
mov
push
or
inc
inc
xlat
xchg
push
mov
daa
xor
jl
add
das
push
jle
jns
(bad)
xor
icebp
or
jmp
pop
out
xchg
pop
cli
dec
mov
and
shl
outs
mov
mov
jne
mov
jo
xor
scas
jmp
add
loopne
jp
sub
ins
(bad)
into
cs
and
out
jne
dec
rdpmc
pop
outs
inc
aaa
mov
pop
push
push
mov
sub
xchg
cld
setp
pop
inc
neg
into
dec
sub
pop
cmp
push
fstp
fisub
into
rol
bound
mov
mov
or
inc
call
fild
lods
ret
mov
cdq
sbb
arpl
add
mov
or
imul
jnp
push
stos
nop
inc
push
push
mov
cmps
jo
pop
adc
or
leave
sub
adc
inc
adc
pop
sahf
lds
icebp
xchg
pop
xchg
cmp
xchg
push
push
aad
xchg
sbb
pop
clc
and
fcmovne
ins
sbb
and
xchg
sub
mov
jnp
adc
jns
daa
cmp
(bad)
jg
scas
into
outs
cmp
in
not
lods
hlt
dec
movs
mov
xchg
lock
sbb
pop
mov
or
inc
push
not
outs
fild
or
rcl
or
ss
in
mov
sub
push
cmps
addr16
(bad)
and
xor
adc
mov
push
dec
fbld
movs
sbb
mov
pop
into
and
sbb
xlat
cld
sahf
xchg
mov
lea
mov
push
and
(bad)
das
mov
ins
push
stos
push
xchg
scas
test
mov
popf
and
js
push
rcl
or
mov
sbb
jp
mov
leave
pop
sbb
sbb
rol
push
mov
cmp
dec
sub
cdq
cli
inc
dec
and
xchg
or
sub
push
dec
jnp
xor
or
test
pop
xacquire
div
repnz
dec
sbb
daa
sub
lea
call
cs
fsub
and
scas
jecxz
pushf
das
push
repnz
or
jmp
xchg
jnp
and
out
stos
mov
and
(bad)
inc
cmp
sub
aas
(bad)
or
icebp
hlt
and
ret
inc
lods
xchg
jb
lahf
sub
and
sub
jnp
rol
in
push
push
stos
in
cmp
push
sub
add
xor
xchg
in
xor
add
repz
inc
push
jl
sub
leave
arpl
adc
xor
push
call
dec
jmp
cs
shl
xchg
(bad)
push
fbld
jle
cmp
and
sbb
mov
add
retf
leave
out
mov
aad
out
cmp
add
xor
jecxz
sbb
lds
fadd
test
dec
popa
cmps
arpl
retf
lock
shr
dec
xchg
pop
movs
leave
ret
push
sar
(bad)
jmp
aaa
inc
in
fcomi
pop
fistp
icebp
push
inc
cs
(bad)
dec
mov
cmp
xlat
jmp
int3
or
push
jo
imul
sbb
mov
stos
or
or
fsubr
sub
mov
cmp
add
pop
gs
mov
leave
shl
or
loope
repz
repz
mov
or
cmc
mov
pop
pop
xlat
into
iret
inc
clc
jg
inc
scas
xchg
aas
mov
add
cs
fs
pop
push
jge
xchg
mov
jns
dec
inc
in
push
or
sub
or
rol
dec
dec
stos
int3
cmp
hlt
clc
cmp
dec
fist
ds
push
inc
js
aam
in
push
mov
push
sub
outs
or
mov
gs
sbb
icebp
pcmpeqd
out
sahf
jo
je
ror
mov
add
int3
xor
mov
leave
nop
pop
mov
dec
xchg
test
mov
aas
mov
dec
in
push
or
test
mov
out
movs
div
cmp
cmp
dec
mov
(bad)
add
aam
aas
mov
enter
push
(bad)
jbe
pop
sbb
push
test
and
into
(bad)
sub
mov
addr16
jmp
fisubr
xor
push
jnp
xchg
(bad)
repnz
and
sub
adc
mov
or
bound
sahf
xlat
iret
in
addr16
inc
mov
pushf
leave
adc
mov
imul
cmp
mov
add
sbb
stc
inc
mov
jle
add
out
dec
pusha
xor
rcl
pop
sub
cmps
sub
out
pop
in
out
xchg
jg
mov
into
aad
dec
pop
inc
cmp
dec
sub
mov
xchg
push
mov
or
add
xor
dec
icebp
jg
mov
shl
xor
mov
pop
jo
shr
enter
add
ins
adc
inc
leave
sub
push
mov
sti
call
cmc
out
sub
jnp
ss
call
xchg
push
mov
xor
and
add
xor
cmp
cmp
clc
and
cmp
(bad)
push
int3
pop
das
sbb
call
or
gs
ins
dec
inc
cmps
fisubr
iret
and
in
imul
stos
in
movs
(bad)
enter
shr
aad
jp
dec
mov
jecxz
xchg
mov
xchg
loope
pop
sahf
aam
scas
arpl
mov
nop
mov
shl
lds
pop
xor
ret
cmp
pop
daa
mov
into
out
test
test
sub
mov
xlat
addr16
sbb
inc
(bad)
daa
mov
rol
sub
aam
stos
scas
pop
mov
jge
retf
dec
cmc
push
mov
scas
mov
repnz
cmc
out
add
fwait
add
xor
fwait
stos
(bad)
(bad)
inc
fstp
xchg
(bad)
adc
loopne
cli
fidivr
mov
adc
push
out
sub
mov
mov
repz
inc
dec
pop
lds
(bad)
ins
adc
sub
addr16
mov
inc
fbld
daa
mov
mov
dec
fbld
inc
cdq
sub
data16
sbb
dec
xchg
dec
mov
jbe
sub
aad
aas
dec
sahf
jmp
dec
jmp
sbb
clc
jge
lock
popa
pusha
push
and
push
jo
lock
mov
leave
bswap
adc
xchg
mov
push
rol
sbb
add
leave
dec
(bad)
and
idiv
jle
cwde
pop
add
or
adc
jo
mov
mov
sub
out
cmp
stos
pop
inc
div
jmp
jp
test
mov
loope
aaa
jecxz
mov
inc
loopne
ins
push
sbb
ins
adc
or
(bad)
xchg
scas
stos
pushf
movs
adc
cmp
pop
pop
fadd
std
xor
or
test
xor
sub
or
inc
out
jo
push
sub
cmp
cld
or
xchg
imul
mov
or
push
xchg
(bad)
mov
jg
enter
pop
clc
add
xor
imul
out
pop
sbb
lea
mov
clc
enter
aaa
jb
call
lds
es
mov
adc
add
cdq
into
cmp
(bad)
fisttp
dec
or
cmp
(bad)
pushf
push
rcl
(bad)
push
aam
inc
call
out
mov
mov
jo
push
xor
or
int3
cmps
aas
lea
jnp
outs
dec
jns
adc
pop
add
push
push
mov
jl
stos
out
inc
dec
cmps
call
pop
inc
xor
dec
pop
push
fadd
or
mov
mov
(bad)
xchg
pop
dec
popf
movs
test
push
mov
jae
(bad)
std
fistp
sub
outs
push
cmp
cmp
pop
in
add
mov
mov
pop
pusha
ss
or
or
pop
loope
mov
and
iret
jge
jae
imul
push
mov
popf
stos
xor
cmp
mov
fidiv
rcr
pop
mov
sub
mov
sub
pop
cmp
mov
jmp
mov
les
and
ja
popa
sub
scas
fs
xchg
dec
push
cs
sbb
pop
cmc
sub
arpl
dec
mov
cmp
cmp
push
pop
sbb
xchg
push
or
out
sar
jbe
ret
inc
fmul
lods
fsubr
dec
inc
pop
xor
sub
sbb
mov
xchg
fsqrt
xchg
cmp
mov
popf
nop
pop
mov
pop
rol
ficom
scas
fisttp
cld
xor
mov
aam
dec
jne
inc
sub
xor
sub
inc
ins
lahf
test
ret
pop
jbe
xchg
into
adc
test
dec
mov
mov
pushf
cdq
sti
or
cmp
jl
push
mov
imul
pop
fisub
lods
loope
sub
imul
rcr
cmp
fisttp
lds
adc
sub
out
mov
jne
(bad)
jnp
clc
fisubr
(bad)
imul
pop
sub
jg
sub
push
stos
addr16
pop
xchg
pusha
cli
jb
mov
dec
inc
xchg
push
test
pop
mov
shr
stos
lds
inc
clc
outs
mov
out
sbb
sub
jle
cmps
mov
leave
sub
ins
imul
out
pop
xchg
mov
ret
retf
jae
rol
push
xor
sub
aad
in
push
hlt
xor
mov
not
adc
fdiv
scas
jmp
dec
push
cdq
sub
clc
and
ror
out
retf
mov
push
cmp
add
dec
movs
push
add
imul
enter
or
jb
movs
js
xchg
sbb
js
sub
jp
pop
cmp
call
imul
jmp
xor
call
imul
arpl
mov
enter
or
imul
and
inc
das
push
dec
pop
or
loope
sbb
loop
ss
pop
lods
jmp
mov
(bad)
mov
mov
sub
pop
or
xchg
jmp
xchg
mov
rcr
(bad)
ror
cmps
xor
xor
cmps
add
push
xor
push
inc
fwait
sub
jl
push
dec
push
dec
out
mov
sbb
sub
jecxz
shl
xchg
sbb
xor
and
pop
and
xor
cmp
jo
mov
stc
lods
inc
sahf
xor
ret
das
mov
or
aaa
xchg
hlt
push
out
in
ds
call
shr
and
sbb
cdq
push
mov
add
jp
or
dec
xchg
sub
nop
and
(bad)
mov
aad
push
fistp
scas
jecxz
inc
test
scas
inc
(bad)
sub
shr
xchg
mov
or
in
fsubr
(bad)
xor
mov
xchg
jge
cmp
dec
mov
cmps
push
in
mov
cmp
daa
push
addr16
xor
outs
and
repz
add
push
jmp
pop
inc
ret
jl
cmp
icebp
cmp
ins
xor
shl
sub
xchg
jp
int3
pop
out
imul
je
add
xchg
lahf
xor
mov
mov
movs
and
add
bound
xchg
adc
shl
out
xchg
dec
pop
jo
das
pusha
fs
and
adc
dec
lods
shr
dec
sbb
neg
popf
test
movs
(bad)
test
fiadd
les
dec
pop
mov
pop
arpl
imul
mov
pop
push
sbb
fsubr
aaa
ficomp
and
outs
scas
mov
adc
mov
and
mov
movs
add
dec
cmp
enter
mov
cmp
cmp
jp
gs
push
xchg
ret
mov
dec
nop
movs
pusha
addr16
add
cmps
call
add
pop
dec
data16
(bad)
mov
lods
jp
in
les
popf
lods
ret
out
mov
or
add
cmp
rcr
mov
mov
test
push
das
push
(bad)
cli
hlt
sub
fst
mov
dec
xchg
sbb
and
dec
adc
dec
out
pushf
aam
push
jmp
loop
mov
or
mov
aad
icebp
sub
in
cmp
mov
and
(bad)
and
add
jns
or
inc
pop
dec
inc
xor
xor
sti
fcomip
mov
inc
sbb
lods
push
sbb
call
jae
xchg
(bad)
imul
xchg
movs
mov
addr16
jo
pop
cmp
inc
lds
neg
jnp
dec
xor
mov
fstp
clc
push
pop
push
cmp
jecxz
(bad)
movs
xlat
jl
ret
fstp
pushf
aas
mov
shr
int
in
popa
stos
xchg
adc
ss
imul
jno
(bad)
mov
outs
loope
jns
mov
dec
dec
in
rcl
ja
stc
popa
mov
mov
mov
mov
imul
inc
shl
xchg
jp
or
sbb
xchg
adc
std
or
sbb
aas
repnz
test
cmp
push
cmc
mov
jbe
and
or
addr16
mov
test
mov
inc
add
pop
pop
push
xor
fnstsw
shr
or
mov
add
xchg
addr16
test
out
cli
xchg
adc
lods
fdivp
inc
outs
mov
pop
xchg
lahf
cmp
xchg
sub
push
mov
out
mov
clc
fwait
ret
inc
add
out
xchg
mov
sbb
cdq
xor
outs
jmp
mov
xor
iret
xor
es
ds
ret
mov
mov
cs
ror
call
test
xor
retf
inc
aaa
js
dec
or
sub
jl
xchg
ds
jle
mov
ds
pop
ja
sub
push
in
inc
cmps
je
enter
adc
sti
cld
into
lods
pop
dec
pusha
jb
mov
fidivr
popf
sti
(bad)
(bad)
pop
mov
and
fwait
mov
das
push
in
push
outs
loopne
mov
bnd
lock
fisttp
or
enter
adc
aad
xchg
dec
movs
in
mov
fmul
jecxz
pusha
lahf
mov
ret
mov
stos
out
cmps
mov
test
(bad)
popa
loope
mov
scas
add
inc
arpl
add
popf
fiadd
or
adc
xchg
icebp
lock
popf
cli
mov
(bad)
outs
shl
mov
ds
push
xor
cld
dec
sub
lods
scas
mov
fwait
add
(bad)
sbb
xor
(bad)
daa
pushf
je
sbb
or
sub
add
xor
gs
sbb
xchg
rcr
ror
xor
out
aaa
jmp
inc
push
fnstsw
movs
xchg
xor
push
test
xor
loope
test
mov
xchg
mov
add
js
stos
ret
jl
into
iret
mov
dec
fs
jl
neg
sub
je
cs
mov
push
mov
adc
push
mov
pusha
sub
inc
inc
clc
js
add
ins
cdq
mov
leave
push
je
sar
das
in
cmp
jne
stos
stc
test
pop
mov
and
stos
mov
rcr
rcr
sbb
int3
xchg
scas
pop
aaa
nop
shr
and
les
in
sbb
scas
pop
push
push
scas
and
xor
push
xor
scas
jmp
sub
test
adc
dec
pop
ret
or
push
and
stos
sahf
in
cmp
pop
lods
std
clc
sti
fs
mov
jl
pop
add
push
cmp
inc
cmp
(bad)
sub
mov
jmp
pushf
not
mov
jb
(bad)
and
outs
jo
jecxz
cmp
add
in
mov
or
or
in
mov
sbb
clc
jge
mov
shr
sub
mov
out
adc
jo
retf
icebp
mov
jl
xor
inc
xchg
ret
xchg
cwde
push
mov
outs
jns
dec
and
loope
repnz
mov
dec
push
rol
xor
imul
test
inc
movs
dec
sub
adc
ds
pop
xor
push
pop
cmp
inc
call
stos
clc
fcmove
jnp
jge
ret
(bad)
cmp
imul
pop
daa
xchg
jae
iret
aad
mov
mov
test
mov
gs
or
mov
shr
int
xchg
mov
popf
cmp
pop
push
test
inc
hlt
sbb
jns
rol
adc
icebp
fmul
inc
fmul
loope
push
scas
nop
cmp
cmps
movs
mov
or
sbb
daa
xchg
into
in
mov
jmp
jne
aam
and
mulps
jae
dec
pop
inc
sub
add
mov
mov
int
push
(bad)
div
push
xor
icebp
mov
xchg
call
stos
xchg
stos
loop
or
push
mov
push
pushf
dec
xor
xchg
or
jo
adc
dec
xor
sbb
push
or
push
xchg
repnz
retf
xchg
pop
out
into
pop
fnstsw
jo
mov
pop
ins
iret
push
inc
movs
loope
pusha
arpl
ss
fidivr
clc
jnp
add
call
and
pusha
add
jae
ret
xor
inc
mov
(bad)
jae
in
mov
adc
jno
std
jl
mov
outs
xchg
cmp
dec
add
and
stc
pop
retf
jmp
ds
jl
pop
push
popf
fwait
sub
xchg
cmp
adc
outs
sahf
cs
scas
adc
sar
push
cmp
xchg
jle
fadd
or
outs
rcr
push
out
xchg
sbb
cdq
jge
and
repz
out
jg
inc
fist
xor
mov
outs
and
aaa
ficom
mov
sub
std
push
fcomp
popf
movs
mov
std
mov
into
xchg
inc
in
lea
scas
cmp
call
mov
bound
inc
loope
cmp
ret
jae
rcr
pusha
out
or
fstp
or
sti
xor
hlt
cmps
and
adc
xlat
sub
lea
ss
pop
out
(bad)
xchg
inc
xor
dec
out
push
and
sbb
cmc
fstp
mov
(bad)
pop
adc
mov
or
push
jns
enter
loope
cmp
push
aas
sub
dec
cwde
sbb
inc
mov
mov
rcl
adc
jno
xor
adc
dec
dec
push
or
imul
mov
addr16
(bad)
cmp
scas
add
adc
mov
popa
in
mov
adc
mov
mov
mul
push
jecxz
and
lds
and
loopne
sub
xchg
out
pop
push
jl
clc
mov
sahf
mov
jmp
dec
pusha
movs
stos
imul
stos
sub
aaa
push
xor
pop
gs
xor
int
aam
sub
leave
inc
adc
not
fwait
pop
push
loope
jae
jne
and
inc
repnz
pop
mov
cmp
(bad)
push
sub
dec
call
aas
jae
out
es
push
fiadd
inc
aam
push
mov
lods
xchg
fnstcw
jle
ins
adc
call
jbe
push
inc
das
cmps
stos
or
fdiv
mov
stos
or
fstp
jae
cmps
bound
cmp
stos
mov
push
sbb
jp
call
dec
in
cwde
popa
mov
outs
pop
and
or
int
call
aad
call
mov
mov
inc
jp
and
pop
call
dec
int3
repz
add
add
imul
xchg
dec
xor
pop
dec
mov
sub
jp
push
ret
pop
dec
jns
stos
mov
leave
popa
cdq
inc
xor
xchg
cmps
mov
in
add
out
jmp
mov
ds
shr
lock
cmp
cld
pop
sbb
sbb
ja
imul
push
mov
or
retf
in
jmp
and
cwde
xchg
nop
and
aad
push
call
or
icebp
inc
mov
cmp
ja
sub
push
xor
mov
add
repz
into
inc
adc
adc
fisttp
push
xor
ins
bswap
jg
add
fadd
vunpckhps
cmp
cmps
add
fisubr
adc
rol
push
mov
rcl
cmp
cmp
cwde
mov
add
adc
xchg
mov
aam
jg
in
inc
xchg
push
push
sub
xchg
mov
mov
sbb
fcom
scas
jmp
push
xor
jnp
sti
scas
fwait
leave
inc
push
(bad)
movs
in
push
(bad)
shl
cmp
and
pop
cdq
sbb
movs
ror
ficomp
in
es
cmp
mov
daa
mov
mov
inc
int
mov
lods
into
sbb
pop
xchg
(bad)
call
faddp
inc
stos
or
xchg
jg
(bad)
push
adc
mov
sub
mov
sub
(bad)
in
cmp
jmp
(bad)
fsub
mov
(bad)
(bad)
aam
mov
clc
shr
cmc
xchg
add
inc
mov
sub
popf
and
pop
(bad)
inc
inc
xchg
adc
out
shl
rcr
das
mov
je
sar
ror
jnp
loope
pop
pop
sar
xor
(bad)
dec
int
xchg
repnz
popf
das
inc
iret
push
retf
popf
jo
jle
ins
xchg
lods
xchg
add
pop
mov
into
dec
add
add
out
pop
mov
mov
ficomp
xor
mov
sbb
repnz
mov
mov
imul
pop
or
dec
fldpi
push
lock
cmp
test
xchg
pop
(bad)
call
je
outs
mov
mov
mov
(bad)
rcl
mov
sub
push
mov
pop
cmps
scas
mov
sar
bound
inc
xchg
arpl
(bad)
xor
pop
sbb
sbb
mov
lods
test
mov
rol
mov
(bad)
mov
(bad)
mul
out
mov
call
mov
sub
addr16
dec
add
ret
and
xor
sar
ror
cmp
mov
fstp
es
aad
bound
fld
push
xchg
les
loope
test
jnp
push
and
scas
mov
jl
xchg
fs
in
popa
ins
mov
(bad)
shl
jecxz
push
pop
or
inc
ins
test
sahf
push
dec
lea
aas
enter
xchg
enter
and
es
push
clc
cmp
js
sub
scas
add
inc
mov
loopne
popa
sub
in
in
push
outs
push
pop
ins
aas
or
push
(bad)
jecxz
cmp
mov
adc
xor
xor
sub
mov
inc
mov
xor
rcl
loopne
jns
xchg
xchg
loop
outs
or
push
sub
cmp
data16
imul
xor
sar
loopne
jb
shl
jge
(bad)
mov
and
(bad)
jle
inc
pushf
aad
xchg
mov
or
in
xchg
mov
xor
xchg
repnz
jle
and
mov
lahf
sahf
or
mov
daa
dec
out
cmps
and
clc
pop
mov
dec
pop
cmp
pushf
imul
pop
nop
cmp
adc
aad
push
sbb
repz
inc
mov
jb
aam
jge
dec
xchg
cmc
js
stos
xchg
adc
aam
test
pop
inc
test
mov
xchg
shr
adc
data16
add
cmp
xchg
inc
jg
sti
mov
test
cmp
dec
xlat
call
sub
pop
out
jo
xchg
xchg
push
cmps
stos
mov
cmp
jb
or
push
(bad)
aam
inc
push
std
inc
push
icebp
jb
adc
dec
xor
fs
int3
xchg
mov
xor
mov
fimul
(bad)
cs
sub
outs
push
test
xor
movs
push
inc
popf
(bad)
std
jne
or
shl
enter
jne
mov
fisttp
xor
inc
gs
mov
mov
adc
pop
adc
daa
xchg
push
daa
rol
sbb
xchg
mov
in
push
and
movs
bound
and
cdq
in
retf
xor
pop
or
jg
mov
cs
les
jp
rol
popf
cwde
or
cmps
popa
cmps
movs
movs
cmps
pushf
or
add
or
mov
into
push
scas
add
dec
adc
pop
push
lock
test
sbb
dec
repnz
mov
retf
push
push
out
jns
scas
into
adc
sbb
jbe
pop
loope
(bad)
mov
lea
adc
dec
sub
inc
cld
in
out
mul
fld
pop
mov
loope
lds
and
shl
in
xor
cmc
cwde
test
loop
inc
retf
ror
inc
sub
sbb
ret
popf
ins
adc
test
jnp
int3
ins
mov
inc
inc
cld
mov
mov
pop
icebp
dec
je
movs
shl
leave
adc
aaa
stc
dec
out
or
addr16
cmps
scas
lds
push
jmp
mov
fisttp
push
adc
inc
and
mov
mov
cmp
repz
xlat
cwde
dec
ja
sub
in
stos
shl
retf
mov
mov
mov
xchg
sub
repnz
add
cmps
mov
and
ror
call
sbb
das
rcl
dec
push
jecxz
jbe
hlt
inc
(bad)
pop
dec
je
int3
mov
jae
push
dec
rcl
mov
add
ja
cli
ins
pop
(bad)
jl
or
(bad)
out
test
jecxz
mov
lods
mov
loop
mov
iret
mov
loopne
aas
ins
cdq
add
out
push
popf
sub
outs
adc
dec
out
arpl
jbe
push
push
hlt
scas
inc
movs
lahf
call
mov
ins
push
outs
ret
push
mov
ss
mov
pushf
adc
dec
push
add
xor
push
aas
xchg
mov
loop
sub
jnp
test
adc
and
lock
dec
mov
into
call
je
popa
add
push
push
imul
pop
mov
and
sbb
fist
out
jle
fbstp
fnstcw
sbb
movs
cli
inc
push
pop
gs
pcmpeqw
or
fsubr
in
cmps
xchg
inc
xchg
fistp
(bad)
dec
fnstcw
sub
fcomp
fdivr
fld
xchg
xchg
push
pop
push
jnp
sub
mov
ret
xor
in
inc
cmc
push
jns
push
sti
jl
push
shr
inc
ins
xchg
push
les
popf
fadd
adc
(bad)
imul
(bad)
and
addr16
inc
xor
aam
mov
dec
inc
push
cmp
daa
cdq
in
jne
mov
mov
jae
(bad)
(bad)
push
sar
or
stos
and
mov
jecxz
sbb
pushf
fnstsw
aaa
mov
dec
mov
retf
inc
mov
sbb
adc
inc
shl
adc
mov
les
cmps
adc
into
clc
xchg
jecxz
rol
xchg
or
mov
dec
outs
xchg
test
pop
pushf
dec
jl
mov
push
sbb
inc
mov
pushf
adc
push
cli
dec
mov
xor
frstor
inc
leave
mov
sbb
sahf
outs
push
cmps
or
adc
aas
jp
hlt
or
fidiv
out
es
cmp
aaa
iret
xor
lock
nop
inc
test
retf
(bad)
arpl
mov
enter
pop
xchg
popf
ss
mov
and
pop
push
movs
jno
and
fs
in
mov
mov
xor
std
xchg
mov
adc
xchg
lods
pop
loopne
daa
aas
mov
xor
cld
sbb
jae
jo
mov
ret
push
inc
popa
pushf
pop
jg
xchg
mov
das
xchg
fidiv
out
popf
ror
or
ret
adc
pop
movs
mov
jg
or
push
je
inc
(bad)
fcom
repz
jmp
scas
xor
xor
aad
dec
push
xor
outs
mov
push
ja
mov
push
test
cmc
dec
and
pushf
xchg
loope
sbb
mov
dec
push
das
xchg
cmps
cmp
cmp
mov
add
test
or
pop
test
cmp
idiv
mov
sahf
int
sti
stc
bound
rcl
iret
sahf
dec
dec
adc
dec
std
ins
shl
inc
ficomp
mov
pop
xor
std
jecxz
add
or
pop
and
mov
mov
jmp
scas
popa
fiadd
dec
inc
sahf
jno
sahf
mul
enter
sub
pop
loopne
and
jmp
fstp
in
cmps
repnz
cmp
arpl
cwde
mov
dec
icebp
sbb
push
dec
jge
or
imul
cmps
not
xchg
and
jecxz
(bad)
jg
ins
xchg
adc
pop
int
int3
dec
pushf
cdq
mov
dec
js
xor
lods
xchg
fld
mov
fild
fwait
inc
pop
sar
aas
icebp
mov
xor
push
inc
bound
jo
dec
or
stos
adc
loope
adc
pop
fwait
jmp
fiadd
cmp
jmp
fbstp
sub
pop
xor
xor
sub
(bad)
sub
or
sub
std
std
sbb
repnz
leave
xchg
mov
test
gs
gs
dec
call
mov
iret
cmc
test
mov
in
enter
jl
sub
daa
scas
xchg
xor
mov
das
stos
ror
popf
inc
aad
pop
push
out
or
sbb
push
dec
into
mov
xor
imul
gs
push
rcl
sbb
jb
cmp
out
pop
sti
and
les
out
mov
xchg
sub
imul
mov
ds
pop
popa
imul
xor
xor
out
add
push
sub
addr16
mov
ret
xor
imul
or
jmp
mov
stos
lods
sub
sub
call
dec
sub
imul
scas
in
pop
xchg
mov
iret
xor
add
xchg
mov
and
test
mov
leave
jno
out
or
call
and
pop
pop
movs
push
pop
daa
out
or
sbb
lahf
test
cmp
movs
xchg
pushf
(bad)
adc
adc
xchg
pop
inc
rol
(bad)
xchg
fiadd
push
ss
int3
stc
push
jns
lods
cwde
dec
sub
and
mul
shr
cmp
jecxz
and
pop
int3
fsub
rcl
cwde
pop
lods
mov
outs
lea
int
enter
(bad)
dec
outs
outs
push
adc
pushf
inc
mov
mov
hlt
inc
outs
or
mov
inc
movs
arpl
xchg
xor
pop
pop
sahf
dec
mov
add
dec
mov
test
popa
std
pop
(bad)
fild
jne
(bad)
xor
jbe
jp
call
push
sbb
inc
dec
jmp
shr
das
in
pop
loope
int3
int
mov
or
imul
mov
scas
adc
lahf
mov
test
stos
(bad)
repz
sub
mov
popf
pusha
sub
cwde
enter
inc
push
mov
or
or
xchg
test
ins
mov
in
out
push
sub
inc
mov
pop
or
lds
popf
fcom
popa
xchg
mov
(bad)
pop
stos
jge
jecxz
dec
call
mov
xchg
adc
cmp
loopne
dec
popf
xor
cmp
hlt
mov
adc
dec
add
imul
es
mov
(bad)
mul
movs
xor
pop
fisubr
lods
pop
xor
in
jecxz
ss
adc
fbstp
and
test
mov
int
les
and
pop
adc
or
xor
test
das
jae
pop
cmps
imul
and
sub
idiv
sahf
add
dec
icebp
xchg
cdq
aaa
xor
ja
push
xlat
lds
arpl
cs
pop
frstor
out
xchg
outs
cmc
push
adc
jne
cdq
daa
ds
loope
fdiv
fstp
fidivr
mov
xor
fbstp
enter
pop
push
mov
outs
lds
push
add
mov
jns
cmp
xchg
jl
xchg
mov
mov
stos
rcl
xchg
fld
fld
mov
jne
out
sub
xor
pop
jge
rcl
out
mov
enter
cli
mov
inc
stos
jnp
mov
mov
pusha
xlat
test
xchg
and
dec
push
addr16
rcl
add
mov
pop
out
sbb
pusha
loop
mov
sbb
in
or
int
je
sub
jl
test
ds
jle
mov
pop
scas
mov
xlat
or
xchg
stc
mov
cmp
shl
and
arpl
xchg
adc
or
mov
mov
bound
call
fdiv
adc
sub
sub
sbb
loopne
iret
jmp
mov
shr
in
enter
add
inc
cmp
push
xchg
jl
in
pop
sbb
leave
pusha
sbb
movs
fwait
pop
xchg
(bad)
aad
daa
push
sub
pop
out
and
fild
call
(bad)
mov
shl
int
push
pop
or
mov
xchg
mov
sbb
std
setb
fidiv
fiadd
test
fsubr
and
imul
pop
add
cmc
pop
inc
ds
loop
sar
inc
lods
ror
push
dec
sub
push
call
popa
add
xor
les
xchg
sti
loop
pop
jecxz
and
jo
iret
addr16
shl
mov
mov
inc
mov
imul
je
cmp
sub
loope
repz
sub
push
adc
mov
sub
retf
cmps
jno
mov
add
adc
sbb
aam
sub
loopne
mov
xor
gs
lahf
mov
xor
cmc
ret
or
add
in
shr
arpl
cmps
(bad)
out
pushw
out
gs
sub
pop
pop
push
add
aad
xchg
movs
pushf
xor
stos
mov
jae
or
push
test
dec
pop
pop
adc
mov
out
push
ins
ss
stc
and
lock
inc
add
xlat
call
xchg
sbb
push
push
ins
retf
nop
ds
cmp
aam
and
es
add
inc
mov
push
xor
jp
jne
mov
test
stc
test
test
std
xchg
data16
lock
aaa
adc
or
inc
inc
sbb
and
push
mov
jb
adc
push
nop
or
iret
imul
adc
cmp
xor
cmp
xor
retf
xchg
inc
aas
ins
xchg
imul
rcl
dec
jmp
xor
jl
pop
or
push
inc
sbb
cs
push
xchg
popa
and
mov
cmp
pop
mov
out
jge
in
test
aas
mov
lods
push
cmp
sbb
imul
and
jb
dec
xor
push
push
jno
push
xchg
sbb
sbb
pop
push
jl
out
call
mov
xchg
pop
sbb
mov
ja
mov
mov
sbb
test
or
jne
out
repz
fsubr
and
call
test
xchg
or
(bad)
mov
ret
cdq
add
pop
lods
inc
mov
cmp
sbb
sbb
icebp
fxch
call
add
mov
and
popa
pop
pop
jecxz
xor
pop
and
dec
int3
and
mov
or
mov
clc
jmp
mov
in
test
mov
inc
cmps
lds
scas
in
loopne
jbe
(bad)
rol
mov
jg
pop
test
call
push
adc
(bad)
sub
push
cmc
inc
jmp
xchg
jb
cmc
mov
test
cmp
dec
jae
cmps
inc
dec
das
jle
xchg
lock
inc
cmp
push
sub
mov
je
cs
aam
sbb
or
cdq
add
fwait
mov
xchg
out
fwait
scas
ins
pop
jne
out
jg
or
xor
pop
jge
pusha
dec
mov
dec
mov
neg
cwde
dec
and
xchg
ins
cmp
xchg
cmp
(bad)
fst
sbb
mov
retf
sbb
mov
fcomp
jge
stc
int
dec
pop
mov
lods
clc
xor
test
in
inc
mov
ins
dec
inc
pop
dec
cmps
add
nop
imul
cmp
ror
div
aam
jge
dec
sub
jo
cmps
inc
mov
xchg
jmp
into
(bad)
xchg
dec
(bad)
leave
mov
dec
ins
mov
xchg
mov
dec
cmp
icebp
inc
dec
adc
push
xor
aas
push
inc
mov
test
adc
std
xchg
mov
mov
sbb
fs
out
adc
sar
and
cdq
retf
pop
mov
(bad)
out
jecxz
fidiv
out
jb
push
jo
dec
out
cmp
data16
out
jmp
fs
mov
stos
mov
out
call
loop
mov
sub
sub
daa
imul
xchg
shl
pop
cmps
jle
das
enter
out
sbb
(bad)
add
jge
xchg
add
loop
sub
mov
sub
xchg
leave
lock
dec
clc
(bad)
ds
ret
cli
inc
(bad)
leave
sti
stos
dec
cli
in
into
fisttp
sbb
and
cmp
jecxz
and
shl
mov
das
push
jecxz
ins
xchg
popa
stc
mov
ror
outs
es
jno
or
xchg
jbe
inc
sub
stos
sbb
jns
je
jge
pop
xchg
mov
mov
hlt
addr16
in
inc
popa
push
fs
pop
shl
sub
out
mov
mov
int3
xor
out
pop
cmps
popf
imul
add
imul
mov
pop
dec
xchg
data16
sbb
bound
hlt
leave
shl
adc
aaa
and
cmc
ror
adc
sbb
fs
push
test
das
mov
cdq
out
pcmpgtw
aad
and
je
es
aaa
and
movs
push
or
mov
leave
bound
in
xchg
mov
ins
ins
push
sub
sbb
mov
movs
repnz
add
mov
pop
adc
(bad)
xchg
jbe
fs
gs
dec
cmp
sub
cmp
mov
mov
test
lock
in
outs
fs
sbb
nop
sbb
int
pop
cmp
cmp
daa
cmps
in
push
mov
inc
jecxz
jecxz
xchg
in
jno
adc
cs
outs
lds
cmp
xchg
test
push
mov
add
imul
data16
push
and
and
or
jmp
lock
adc
aad
pop
shr
test
(bad)
xor
retf
sub
adc
rsqrtps
rol
daa
call
mov
rol
and
mov
sub
push
or
jbe
leave
test
ja
aad
call
dec
and
mov
mov
ror
in
xor
outs
mov
sub
push
daa
sahf
mov
in
add
(bad)
cmp
aaa
iret
lods
pop
popa
mov
sub
mov
and
dec
push
mov
add
jle
add
jle
sub
jge
inc
sub
cmpxchg
push
out
add
and
pop
adc
shl
jmp
int
pop
scas
xchg
mov
push
nop
fwait
pop
loope
(bad)
stos
into
inc
test
pop
test
xor
cld
movs
jecxz
pop
xchg
jno
jae
ins
mov
jbe
es
jmp
adc
jg
cld
jae
adc
adc
(bad)
in
stc
adc
and
jb
jecxz
sbb
iret
mov
push
(bad)
push
or
bound
shl
jo
sub
test
dec
mov
push
mov
call
push
jmp
push
retf
and
pusha
dec
imul
out
mov
mov
and
jmp
sbb
ficomp
leave
loop
inc
inc
mov
lods
movs
mov
sbb
out
les
adc
xor
and
xchg
hlt
test
pop
push
fisttp
jle
push
aam
pop
cmp
outs
xor
jecxz
push
cmp
pop
stc
(bad)
lods
bound
mov
add
sbb
pop
fstp
scas
js
add
push
mov
ja
jmp
and
arpl
sub
cmp
sbb
data16
mov
repz
lds
mov
dec
rcl
add
(bad)
add
mov
fisttp
das
xchg
adc
sbb
cmp
ret
jp
xor
sbb
mov
movs
fidivr
mov
push
pop
dec
test
xchg
inc
cmp
imul
cmp
mov
dec
sbb
sub
lock
lahf
mov
mov
mov
push
adc
add
jg
or
lods
popa
lock
dec
into
cld
je
and
jne
out
push
dec
xchg
pusha
inc
sub
mov
xchg
jle
sahf
mov
and
mov
cmps
mov
mov
mov
retf
mov
popf
xchg
and
cld
xor
popf
fwait
push
stos
cmp
mov
scas
stos
or
add
test
inc
cmp
mov
pop
lods
or
mov
xchg
push
sub
push
lock
add
loope
jp
lods
xor
dec
push
rol
sahf
inc
movs
inc
add
xchg
and
scas
jmp
scas
js
fstp
fnstcw
sbb
sbb
push
mov
int3
jp
cmps
in
movs
push
mov
pop
cmp
xchg
aad
inc
aad
push
std
or
into
jno
and
mov
lahf
push
sbb
(bad)
add
lods
rol
adc
int
out
push
inc
adc
mov
dec
movs
dec
xchg
pusha
(bad)
je
test
sub
ss
(bad)
nop
cmps
xor
retf
xchg
or
mov
or
loop
push
mov
jl
jmp
push
add
ja
mov
add
leave
cdq
(bad)
xchg
jae
adc
iret
mov
mov
inc
sar
ins
fdivr
and
stos
loop
dec
aas
sbb
or
xchg
xchg
sahf
push
sub
retf
jne
or
push
push
arpl
mov
mov
push
adc
push
adc
(bad)
cmp
int
pop
cmp
test
arpl
mov
inc
fimul
mov
or
jp
bound
cmp
shr
mov
(bad)
add
push
cwde
out
imul
xchg
ret
(bad)
fcom
xor
add
enter
cld
cmps
packssdw
or
sbb
ror
jno
fwait
sbb
push
xchg
fnstenv
cmp
sahf
push
mov
sbb
stos
adc
mov
je
mov
push
out
(bad)
ffreep
shr
test
and
cmp
std
cwde
fbstp
adc
xor
xchg
xor
push
cmc
sahf
das
sbb
add
out
iret
inc
jmp
or
leave
cmps
cmp
loop
outs
pushf
jl
lea
push
std
cmp
and
out
xor
popf
push
inc
mov
xor
pop
popa
add
push
or
mov
fwait
arpl
ror
mov
(bad)
das
sahf
add
or
clc
iret
loope
lahf
add
shl
xlat
lds
mov
lds
jae
sub
dec
ret
xor
div
rol
js
jl
xchg
jae
pop
mov
imul
cdq
jle
jo
sub
sbb
sbb
jmp
push
pop
(bad)
imul
pushf
mov
xchg
cmp
in
jle
or
push
(bad)
adc
push
hlt
mov
test
fistp
mov
aam
cmp
pushf
sbb
cmp
dec
jl
jp
xchg
nop
sub
cmp
mov
mov
jmp
fwait
xchg
bnd
(bad)
mov
iret
(bad)
fdivp
mov
iret
sub
xchg
xchg
sar
dec
jp
stc
sub
in
or
ins
jbe
and
aaa
mov
movs
pop
inc
cmp
pop
arpl
fimul
xor
shl
ficom
js
cmp
repz
adc
xor
dec
retf
int3
(bad)
popa
jnp
sbb
das
aas
push
daa
sub
cwde
xor
outs
cmp
test
cli
dec
pop
ins
pop
pop
loope
cmp
and
in
daa
fcomp
daa
push
mov
or
jmp
aad
mov
adc
dec
fwait
nop
sub
stc
cmps
je
leave
push
sub
repnz
aaa
and
sub
jl
cmp
ins
bound
and
out
add
adc
xor
jp
test
dec
jmp
fwait
lds
pop
jmp
loop
push
sub
mov
push
mov
lahf
pop
xchg
sbb
scas
dec
arpl
(bad)
inc
je
xchg
(bad)
outs
sub
ins
adc
lahf
imul
sar
xor
cmp
and
out
xor
je
mov
adc
pop
leave
mov
cmps
push
ja
aam
sub
push
dec
lahf
push
int3
push
cdq
pop
push
in
lock
jno
mov
fiadd
sbb
adc
or
test
(bad)
mov
and
movs
int
les
data16
sub
jp
shl
mov
jne
cmp
dec
fwait
add
xor
push
pop
mov
cmp
and
xor
xchg
lods
and
xor
jb
inc
imul
test
or
cmc
push
or
jae
fdiv
push
es
test
pop
(bad)
adc
jbe
mov
push
rcr
pop
or
neg
mov
in
call
out
dec
push
dec
cld
inc
and
inc
popa
mov
mov
push
push
dec
xchg
das
sbb
add
push
hlt
mov
mov
mov
jns
xor
jle
inc
mov
and
fist
mov
cmp
jle
jae
push
rcr
inc
xbegin
rcl
inc
jg
jbe
in
cli
loope
stos
fist
aas
add
jp
stos
wrmsr
or
shr
pop
jecxz
cwde
dec
dec
cdq
adc
cmp
xor
add
or
adc
mov
or
cmp
clc
test
sub
pop
cmps
mov
mov
inc
clc
fsubr
and
popf
mov
addr16
or
rcl
cmps
cmc
pop
inc
add
pop
test
xchg
pop
pop
jns
dec
mov
lea
mov
cmp
jp
pop
mov
sbb
xchg
arpl
addr16
jne
sbb
pop
not
lods
pushf
ret
mov
add
push
loope
sbb
mov
or
xor
cwde
cmp
frstor
fsubr
retf
push
arpl
jns
pop
jl
inc
sbb
scas
fcom
fstp
mov
cld
xchg
lods
sub
inc
mov
rcr
mov
cmp
loop
repz
and
push
ins
hlt
sar
scas
cmp
dec
pop
ds
jle
sbb
pop
mov
cmp
sbb
xor
loop
pusha
sti
div
sbb
es
lea
xchg
and
pop
push
and
cli
mov
mov
adc
ret
sub
imul
pop
cmps
ja
or
mov
enter
xor
inc
test
cld
cmp
ins
clc
sub
dec
out
mov
das
sbb
and
retf
cwde
inc
jno
out
shl
cs
push
add
pop
sbb
pop
cdq
stos
cmp
adc
cli
arpl
jle
push
cmp
sbb
repnz
mov
ret
push
mov
stos
xchg
out
cmp
loope
add
iret
sbb
out
sbb
ins
inc
stos
mov
fist
mov
ins
sahf
je
mov
xchg
jge
xor
leave
iret
fild
pop
movs
loop
adc
cmp
mov
retf
adc
maxps
push
nop
dec
or
inc
scas
rcl
movs
jo
inc
fs
add
stc
int
arpl
call
xchg
jnp
push
int
fistp
les
sbb
mov
xor
std
xor
ficomp
ds
jo
pop
push
(bad)
out
mov
or
jp
out
xor
adc
pusha
(bad)
cmp
aas
jo
inc
cmp
jae
sti
sbb
cwde
shl
ret
sbb
std
jmp
adc
loopne
mov
inc
clc
outs
icebp
imul
imul
jle
jbe
neg
not
mov
inc
pop
packsswb
fwait
dec
nop
jmp
fldlg2
ret
mov
dec
mov
add
jne
cdq
fist
sub
jns
out
mov
and
sub
mov
ja
mov
fcom
xor
mov
loopne
outs
nop
jle
out
hlt
fsubr
mov
sub
push
rcr
aam
or
push
aad
inc
movs
or
aad
xchg
aaa
sbb
mov
push
call
loope
pop
xor
push
inc
fidivr
sbb
imul
cmp
cmp
adc
popf
cmps
cmp
xor
pop
dec
iret
in
or
ds
icebp
mov
cmc
aas
cmp
jno
xchg
mov
jle
dec
sti
icebp
(bad)
std
hlt
mov
rcr
mov
pop
int3
lahf
sub
cmp
inc
jne
test
ret
push
sahf
push
dec
test
outs
push
bound
push
pop
add
adc
popa
clc
jg
pop
sbb
mov
and
mov
or
es
stos
popf
cli
neg
movs
repz
mov
stc
inc
mov
cmps
xchg
adc
retf
sbb
ss
xor
pop
sbb
or
sub
mov
(bad)
out
(bad)
sar
cmps
pushf
sbb
cmp
mov
movs
jge
sahf
inc
inc
mov
dec
test
mov
mov
loopne
inc
scas
pop
mov
sbb
leave
or
pop
push
sbb
cwde
push
mov
mov
int
and
dec
sahf
imul
push
push
push
xchg
jno
pop
int
cli
jp
mov
clc
daa
ins
pop
out
push
loope
out
jbe
cmp
sahf
push
mov
fst
inc
pop
push
cmp
leave
or
fsubr
shl
imul
pop
mov
mov
add
xchg
cvtps2pd
push
jae
js
mov
jnp
cmp
fistp
cmp
rol
popa
call
sub
adc
daa
mov
fld
sbb
jg
and
adc
call
jmp
mov
daa
ss
add
aaa
or
sbb
out
or
cmp
test
retf
mov
cdq
aam
ret
jp
pop
mov
xor
xchg
inc
or
iret
repz
aam
retf
int
popa
rcl
jl
aam
ret
sbb
ja
push
cdq
sub
pushf
imul
stc
cmp
push
pop
pop
aas
add
nop
sbb
ins
xor
stos
push
out
loope
ins
pop
push
scas
enter
xor
mov
retf
xor
lods
push
xchg
daa
mov
cmp
cld
je
push
f2xm1
in
ret
loope
js
jecxz
cmps
je
push
pop
fs
or
shl
xchg
lods
mov
lock
mov
sbb
div
dec
mov
adc
cmp
out
add
mov
fisttp
push
data16
fldenv
nop
out
inc
pop
cmp
xchg
ret
dec
imul
jge
jg
(bad)
and
cmp
and
pop
loope
xor
mov
nop
adc
add
mov
sahf
call
in
push
push
push
sbb
bound
push
push
out
xchg
shl
fstp
retf
(bad)
mov
adc
mov
inc
shl
lds
xchg
ins
arpl
and
cmp
or
sub
xor
fidivr
adc
xor
or
mov
in
mov
or
pop
stos
sbb
adc
movs
shld
xlat
pushf
cmps
lahf
or
ss
loop
out
jne
lods
jmp
cs
and
int3
mov
xlat
movs
pop
jo
sar
mov
inc
dec
cmc
jg
mov
mov
cli
add
xor
movs
cdq
and
out
fst
xor
imul
(bad)
loop
lea
icebp
inc
fstp
repz
cmps
sbb
add
push
repnz
(bad)
adc
test
clc
and
xchg
mov
mov
lds
mov
adc
jns
mov
ficomp
inc
ds
and
iret
jle
dec
ss
or
ins
mov
sub
call
sar
dec
inc
les
ja
dec
xor
mov
push
jae
arpl
cli
bound
retf
mov
and
les
cmc
xchg
inc
test
test
adc
sahf
jg
jbe
call
stc
cmc
mov
sbb
push
aad
mov
ins
jecxz
in
stos
push
sahf
pop
jecxz
dec
pusha
push
push
clc
in
dec
mov
mov
sub
pop
int3
dec
fwait
and
(bad)
pop
mov
push
lods
inc
ffreep
sub
xchg
jb
das
scas
cwde
and
gs
stos
imul
ja
cmps
call
adc
add
adc
enter
imul
pop
les
(bad)
cdq
mov
popf
cmp
push
inc
pop
in
cmp
arpl
cmp
aaa
shl
or
bswap
or
push
mov
push
aad
mov
daa
push
cmc
nop
push
adc
aaa
mov
pop
xchg
adc
fs
cwde
ds
test
cwde
jns
out
add
ins
ins
imul
jb
jmp
mov
push
jmp
popa
imul
mov
aad
clc
jae
mov
hlt
loopne
pop
sub
sbb
mov
cmps
xor
mov
movs
push
xchg
(bad)
inc
daa
adc
jmp
push
mov
in
retf
test
mov
sub
inc
mov
jmp
jge
sub
mov
movs
pushf
stc
fbstp
cli
inc
pop
les
pop
in
in
shl
rol
mov
je
pop
xchg
fnstcw
cmp
shl
mov
inc
or
(bad)
repnz
int
repnz
pop
int
stos
adc
xor
add
xor
mov
bound
mov
xor
xchg
push
es
ja
xor
mov
xor
stos
or
dec
mul
pop
sbb
jmp
or
sbb
icebp
aas
and
mov
sub
loop
pop
out
mov
push
inc
stc
inc
sub
jl
push
test
push
addr16
or
cmp
mov
outs
mov
fidivr
inc
imul
(bad)
popf
ja
loop
adc
femms
das
pop
inc
test
push
push
ja
outs
dec
arpl
sbb
in
mov
sbb
lahf
inc
loop
inc
xchg
stc
and
inc
mov
ja
mov
push
inc
stos
cmps
jns
idiv
test
jge
in
sti
push
sub
and
and
or
test
mov
jge
mov
loope
mov
outs
cmc
sbb
mov
push
bound
aaa
retf
test
sbb
pop
stos
scas
mov
ds
leave
repnz
xor
add
mov
cmp
fwait
loope
and
leave
dec
sub
add
loop
cwde
arpl
mov
push
and
clc
xor
jmp
mov
xchg
adc
lods
cwde
hlt
add
icebp
in
movs
imul
out
ret
cdq
cmp
mov
cmps
sub
pusha
inc
enter
xchg
hlt
xchg
into
add
(bad)
lods
enter
clc
mov
repz
pop
inc
call
jge
fdiv
aam
aam
xchg
cli
mov
dec
pop
mov
(bad)
jne
nop
outs
cmp
or
xchg
sbb
loope
xchg
fild
mov
rol
leave
jmp
loopne
cmp
fadd
push
or
pop
(bad)
jmp
ins
(bad)
jmp
xchg
imul
fucom
push
jle
int
push
push
iret
hlt
fild
das
inc
and
inc
stos
aad
jecxz
pop
mov
push
sbb
stc
xchg
dec
cs
jno
xchg
mov
xchg
adc
xchg
jmp
retf
(bad)
lods
push
enter
retf
mov
push
push
pop
dec
xchg
sbb
jmp
lods
add
sub
inc
fiadd
pop
inc
ror
adc
nop
dec
jnp
popa
inc
jb
xchg
push
(bad)
sub
xchg
std
mov
mov
adc
xchg
sub
mov
mov
dec
mov
push
and
mov
hlt
call
jge
inc
push
and
lods
call
cmp
stos
nop
mov
mov
retf
clc
repz
jae
repz
push
cmp
lods
loope
xor
inc
lahf
daa
push
hlt
lods
push
mov
jns
aam
repz
retf
sbb
fild
cli
aad
mov
loope
jno
jne
addr16
in
in
cmp
push
ror
xchg
into
jo
jmp
repnz
movs
fucomp
retf
mov
xor
retf
xor
ins
in
js
aad
mov
aad
sbb
xlat
push
pop
lods
leave
ret
call
dec
fsubrp
sbb
xchg
inc
das
cmp
cmp
adc
and
mov
and
fild
fwait
jmp
or
jmp
cwde
xor
cmp
inc
loop
mov
jge
frstor
rcr
sbb
cmp
fistp
xchg
xchg
push
call
cdq
rol
dec
pop
and
and
and
xor
in
xchg
jns
in
xor
add
mov
mov
ror
inc
push
cs
push
sbb
daa
or
(bad)
js
jp
xchg
dec
xor
push
(bad)
push
cmp
das
adc
test
add
mov
jmp
pop
mov
call
cmp
ror
xchg
push
pop
add
xor
gs
push
dec
adc
push
or
inc
out
sub
int
xor
pushf
or
int
mov
jle
jbe
lods
inc
xor
push
push
xchg
ins
call
rcr
sbb
shr
int
outs
cmp
or
fisubr
push
mov
lahf
pusha
sub
xchg
mov
cmp
outs
in
iret
inc
arpl
jg
adc
loop
xor
shr
push
adc
cmp
jnp
sbb
daa
xor
shl
les
ror
push
movs
inc
cmc
or
scas
inc
or
cmp
xor
adc
(bad)
fcmovbe
sti
sbb
jg
mov
mov
inc
push
mov
in
clc
mov
(bad)
retf
adc
or
mov
dec
loope
aas
ja
mov
xor
xchg
xchg
mov
icebp
imul
ins
(bad)
xor
sub
ss
jnp
rcr
add
cmps
retf
sbb
inc
jg
dec
daa
cmp
loope
dec
pusha
jecxz
push
jno
inc
in
jb
fcmovu
pop
or
pop
pop
jne
lds
push
scas
xchg
call
pop
mov
(bad)
dec
cdq
lods
pop
xor
test
xor
dec
lods
push
and
xchg
das
loopne
outs
mov
sub
lods
push
sahf
mov
cmp
push
mov
add
inc
(bad)
xor
mov
or
mov
sbb
and
xchg
jg
(bad)
cmp
push
lds
imul
inc
stos
xchg
outs
je
cmp
pop
scas
imul
inc
dec
dec
pop
rol
xchg
mov
adc
fnstsw
pushf
popf
sysenter
in
das
gs
or
or
cmc
jbe
and
cs
mov
sub
sub
mov
stos
aaa
sbb
out
shr
sub
adc
fild
lahf
inc
ins
loopne
fmul
daa
lods
jb
int3
xor
ret
je
ret
movs
cmp
jmp
xor
push
mov
fstp
icebp
les
inc
push
femms
push
call
adc
cdq
inc
aaa
jl
sub
cmp
call
xchg
hlt
xchg
and
lods
add
mov
mov
jnp
hlt
adc
fbld
xor
dec
add
add
jge
and
add
jmp
es
xchg
js
push
push
js
rol
jle
cld
push
loope
ins
pop
sbb
xor
pop
jge
mov
push
lods
xchg
jnp
lea
repz
dec
das
push
sahf
cwde
fs
xchg
cmp
repz
dec
pop
lock
pop
fld
sbb
adc
inc
pop
cmc
jecxz
xchg
hlt
sbb
cmc
xor
pop
push
outs
jmp
js
je
push
int
mov
lds
or
mov
ror
popf
repz
ss
das
neg
fisub
jns
sar
les
test
mov
or
mov
mov
arpl
mov
pop
scas
repz
rcl
enter
add
cmp
cmps
cmp
push
pop
pop
add
dec
fisubr
sub
cld
stc
cmp
out
xchg
and
jmp
stc
sub
xlat
fcomp
dec
dec
aad
ss
and
adc
cmc
cmp
leave
push
mov
into
hlt
jo
sub
cmps
sbb
push
add
inc
sub
arpl
sar
pop
ja
fidivr
bound
xchg
xor
cmp
fsub
pop
push
pop
popf
push
in
push
push
jg
mov
pushf
jne
xor
lea
lods
inc
fst
jmp
stos
loop
xchg
call
out
mov
enter
or
addr16
jb
hlt
mov
mov
clc
sub
pop
aam
pop
(bad)
push
mov
cdq
out
mov
scas
movs
mov
mov
ins
cmp
add
movs
mov
push
jno
nop
lahf
pop
rol
jge
jbe
(bad)
pop
sub
cmp
cmp
(bad)
shl
sub
dec
sub
jg
into
mov
push
mov
dec
loopne
mov
or
add
jbe
into
mov
inc
xlat
sbb
mov
fwait
imul
aas
loopne
add
test
dec
jno
ja
popa
jl
sub
daa
xchg
repnz
or
loop
test
(bad)
in
int3
xchg
inc
add
xchg
mov
loope
cmc
jg
xchg
push
retf
add
lahf
lods
call
scas
mov
aad
inc
push
push
sahf
mov
pop
inc
in
test
out
out
addr16
push
mov
in
jmp
pop
ss
(bad)
xor
in
sti
cdq
add
jle
(bad)
repnz
shr
push
push
sar
mov
pop
aaa
ds
mul
push
(bad)
punpcklbw
ss
jl
pusha
mov
das
add
imul
hlt
push
add
cmp
adc
popf
test
mov
sub
add
jae
cmp
pushf
and
or
push
add
mov
jl
sub
pop
or
hlt
stc
(bad)
jl
mov
mov
adc
or
fstp
sbb
jmp
lods
pop
fwait
lods
sub
cwde
js
push
pop
lods
aam
(bad)
(bad)
mov
test
dec
int
mov
push
xor
fisubr
xor
mov
cmc
ins
fdivr
je
jnp
enter
in
adc
add
jg
add
add
cmps
xor
leave
push
jge
lods
sub
cmps
or
(bad)
int
cmp
repz
into
sub
jb
push
mov
dec
pop
cmp
pop
mov
jmp
inc
sub
or
jg
rcl
mov
sub
sub
scas
in
push
mov
mov
adc
push
xchg
adc
mov
cli
pop
add
sbb
jg
mov
pop
rcr
arpl
(bad)
in
ds
mov
pop
mov
sbb
mov
mov
adc
xchg
fcomp
aaa
pop
mov
in
jb
pop
mov
dec
scas
and
and
clc
dec
lods
push
jnp
add
jge
adc
(bad)
hlt
mov
mov
jo
dec
inc
or
mov
es
jmp
imul
shl
mov
int
xor
jle
retf
jae
(bad)
cmc
inc
mov
je
xor
jmp
sbb
lods
fdivr
add
out
outs
sbb
push
(bad)
int
adc
sub
sar
loopne
int3
xchg
arpl
push
jg
(bad)
lea
dec
sbb
inc
sub
cmp
mov
ss
sbb
retf
loopne
popa
(bad)
dec
mov
pop
inc
shl
jns
int
xlat
aad
mov
jbe
cmp
mov
sbb
push
stos
jo
leave
lock
dec
sub
jmp
int3
(bad)
jns
mov
jle
and
jmp
call
mov
cmp
mov
add
push
pop
or
mov
cwde
jns
inc
ins
fwait
dec
add
mov
(bad)
leave
cdq
mov
xlat
inc
lds
sbb
movs
test
lods
ja
popf
mov
or
add
push
xlat
or
dec
test
(bad)
inc
fadd
ins
jecxz
mov
inc
aaa
(bad)
push
test
mov
popf
adc
aaa
xor
and
add
cmps
mov
cmp
xchg
mov
ret
ficom
call
mov
cmps
fxtract
mov
pop
ins
call
jb
pop
adc
test
shl
mov
loop
mov
jp
mov
sub
cmc
jbe
sbb
inc
and
mov
loope
add
cli
inc
pop
dec
pop
xor
ja
xchg
mov
xlat
cwde
add
cmp
ret
nop
fcomp
std
xchg
and
clc
lods
cmc
or
lds
ja
pop
aam
int
or
xlat
xchg
inc
leave
icebp
clc
adc
outs
std
(bad)
popa
cli
inc
loop
ficom
push
icebp
dec
adc
imul
(bad)
fcmovnbe
sbb
adc
shr
push
dec
add
push
retf
aad
push
enter
dec
xor
shl
fwait
cli
push
and
dec
std
mov
mov
sbb
jne
sar
xchg
aas
adc
sbb
sbb
jbe
xchg
pop
or
repnz
or
mov
ret
sbb
xchg
push
lods
adc
cmps
call
lods
jnp
add
sbb
inc
inc
pop
imul
int3
jmp
ret
popf
adc
inc
dec
bound
add
imul
and
xchg
test
xchg
fisub
or
and
mov
aam
gs
js
sbb
dec
push
aaa
adc
enter
mov
mov
inc
lds
jno
add
mov
mov
push
fist
jnp
fld
jnp
and
mov
xor
adc
or
sbb
retf
sbb
pop
cmp
cmp
adc
in
cdq
xor
dec
cdq
je
mov
ja
jns
lds
das
leave
popa
pop
cmp
popa
ins
sub
mov
in
icebp
or
cld
dec
cmp
pop
fld
in
sub
jp
add
jecxz
and
or
mov
enter
sbb
arpl
lahf
jp
mov
push
test
cli
adc
xor
(bad)
pop
inc
ins
ja
in
jno
mov
jbe
and
movs
js
jbe
not
or
add
fscale
imul
sti
mov
movs
ret
cmp
add
dec
leave
xor
mov
pop
jp
cdq
ret
out
pop
sbb
lods
loope
jb
lock
push
pop
cmps
int3
pop
pusha
dec
nop
shr
inc
test
mov
xor
mov
sar
adc
inc
rcr
lods
movs
xor
pop
in
inc
movs
or
pop
push
in
cvtps2pd
cli
dec
sbb
inc
jno
inc
mov
sub
xchg
imul
mov
test
add
adc
dec
jnp
inc
(bad)
into
mov
les
stos
stos
and
fcomp
adc
call
push
mov
call
and
mov
sub
(bad)
popa
repnz
sar
inc
in
addr16
and
daa
imul
jns
mov
sub
lea
fmulp
lods
xchg
cmc
jle
fidivr
mov
mov
dec
ins
or
cmp
ins
stos
push
xor
lds
xchg
pop
test
xchg
rep
xlat
mov
pushf
in
mov
lods
js
fwait
or
sub
pop
pop
adc
mov
jo
xor
dec
or
adc
(bad)
enter
inc
retf
xor
sti
xor
stos
dec
pop
inc
xchg
adc
adc
fist
mul
call
jo
shr
test
inc
mov
add
repz
test
mov
mov
arpl
inc
(bad)
dec
sbb
xchg
jmp
ror
xchg
stc
jns
adc
pop
call
out
or
inc
nop
fs
mov
adc
sbb
outs
and
sbb
xchg
pop
add
adc
cmps
xchg
lods
or
fidiv
xlat
cmps
sbb
push
xchg
arpl
pop
test
jcxz
lahf
adc
cmps
movs
and
std
push
lds
dec
sub
aam
sbb
mov
loopne
sub
jns
ins
sbb
gs
dec
(bad)
cmps
ret
lods
(bad)
xchg
add
mov
xchg
lods
and
add
mov
mov
jge
test
in
gs
movs
aaa
scas
aad
lods
loope
scas
or
xchg
aad
mov
inc
xchg
data16
jmp
scas
pop
jp
shl
push
outs
icebp
out
mov
xchg
jo
or
mov
inc
xchg
sub
stc
and
jmp
mov
loop
fmul
dec
loope
inc
mov
xchg
inc
mov
enter
call
pop
xchg
loopne
add
int3
call
jecxz
fist
sub
sub
inc
mov
stos
(bad)
mov
adc
lea
adc
jb
adc
out
adc
fbld
retf
mov
arpl
(bad)
lahf
xor
xlat
pavgb
mov
sub
cld
jns
dec
push
xor
in
or
xchg
add
cs
push
std
jno
pop
adc
out
les
fnstenv
add
pop
(bad)
sbb
fsubrp
mov
repz
mov
jg
or
retf
inc
fiadd
or
js
fwait
icebp
and
int
rol
inc
adc
(bad)
cmc
(bad)
mov
hlt
in
sub
aaa
fistp
sti
and
mov
mov
int
gs
outs
jmp
pop
stos
inc
call
mov
push
inc
mov
jns
inc
jns
addr16
daa
mov
pop
mov
mov
jne
mov
pop
pop
fisub
jnp
(bad)
add
cli
jns
cwde
mov
scas
push
xchg
movs
or
mov
(bad)
leave
addr16
sub
imul
cmps
push
push
test
jmp
sbb
ins
pusha
daa
out
arpl
add
cli
ins
jmp
mov
mov
push
push
cmps
jns
add
cdq
inc
stos
pop
xchg
pushf
pop
add
or
sbb
mov
add
popf
jle
cmp
lea
xchg
sbb
in
das
call
je
shl
sub
test
adc
out
add
add
inc
xor
jmp
and
sub
pop
stc
pop
loopne
xor
pop
lds
inc
adc
outs
cli
and
clc
ins
pop
push
xor
mov
dec
out
sbb
sub
sbb
out
xchg
push
adc
lea
dec
enter
fild
sbb
sub
je
add
repz
ds
repz
jae
addr16
imul
push
sub
xchg
test
loopne
int
mov
jnp
sub
xor
mov
out
xchg
loopne
test
mov
pop
ror
cmps
lods
xor
and
ror
xchg
xchg
mov
ja
sbb
adc
popa
pop
test
out
cdq
iret
imul
jmp
xor
sub
mov
or
jl
ins
push
inc
(bad)
mov
xor
sbb
pushf
popf
les
repnz
popa
cmp
or
int
jecxz
adc
mov
jbe
in
out
sbb
movs
sub
iret
cdq
cmp
lods
jp
fld
sub
aaa
and
cld
test
pop
mov
pop
mov
xchg
daa
nop
test
cmps
js
cmp
push
jmp
aad
ds
cmp
retf
popf
adc
cli
jb
mov
ret
jnp
cmp
in
pop
rcr
push
sub
cmps
dec
mul
xlat
pop
sub
aas
jmp
or
cmc
xchg
mov
nop
int3
sbb
aad
and
sbb
jbe
je
retf
xor
xor
cmp
pop
fist
ret
inc
xacquire
xor
cmp
mov
arpl
scas
pop
mov
mov
jge
sbb
retf
or
pop
cmp
jno
nop
leave
dec
sar
pop
push
push
call
cmp
sub
mov
aad
mov
xor
je
add
or
mov
(bad)
jmp
dec
push
dec
mov
cmp
sub
pushf
inc
mov
ja
push
cmp
rcr
into
(bad)
(bad)
scas
sub
jg
(bad)
and
sub
nop
or
push
mov
mov
call
add
mov
pushf
xchg
sahf
xchg
in
inc
or
dec
fdivr
adc
mov
inc
or
rol
and
mov
movs
cmc
out
arpl
add
imul
outs
sbb
ins
jmp
out
adc
or
dec
or
xor
jmp
ficomp
fisub
push
sub
(bad)
fild
shr
jg
and
jae
sub
cmps
aam
inc
aas
adc
inc
bnd
mov
imul
push
mul
jp
push
or
pop
sub
adc
jo
jp
leave
aaa
gs
inc
cmp
add
std
fldenv
sbb
in
pop
xchg
enter
xlat
cmp
dec
sbb
jl
inc
jl
or
or
cmps
cdq
jns
mov
iret
sub
adc
jge
adc
sahf
int
inc
loope
mov
lods
or
fidiv
jnp
scas
movs
stos
in
xlat
jae
push
and
and
call
inc
jle
movs
inc
xchg
mov
and
jmp
mov
jb
imul
mov
movs
aad
fcomp
mov
(bad)
retf
fnstcw
pop
mov
mov
in
dec
loopne
test
fwait
mov
rol
mov
cmp
ja
sbb
jae
xchg
adc
je
jl
retf
mov
test
std
or
(bad)
jg
jp
jmp
cdq
test
xchg
pop
call
iret
call
sar
sbb
mov
cdq
jle
ins
outs
jg
bound
push
jp
ja
les
add
cdq
in
mov
cdq
or
lods
(bad)
lock
and
mov
aam
(bad)
xchg
sbb
jbe
cmc
xor
xchg
mov
popa
clc
inc
sbb
push
aam
fild
sti
sbb
out
xchg
enter
lods
int3
push
add
or
aad
lar
in
test
dec
fsubr
inc
inc
pop
ja
int
enter
or
movs
fimul
lods
xor
mov
loopne
sub
scas
xchg
jb
movs
dec
add
mov
sub
scas
or
in
shl
mov
xor
push
inc
mov
or
aad
imul
and
add
je
xor
retf
mov
in
jmp
cdq
pmovmskb
(bad)
les
movs
ins
inc
call
mov
aad
xor
xlat
cld
push
xchg
ss
mov
sub
jge
mov
jge
loop
sub
stos
push
outs
mov
pop
(bad)
int
or
movs
jle
(bad)
and
shl
fsub
pop
aaa
sbb
sysexit
cmp
adc
xchg
movs
xor
dec
scas
aas
mov
mov
popf
cmp
imul
mov
adc
inc
sahf
mov
jno
push
scas
jecxz
cdq
call
pop
(bad)
stc
out
stos
iret
inc
mov
scas
push
pop
test
(bad)
ins
mov
pop
mov
in
jne
lods
shr
imul
mov
mov
popf
push
xlat
(bad)
repz
fldcw
cmps
inc
mov
mov
mov
aam
inc
add
repnz
push
cmp
pop
mov
fadd
jnp
add
frstor
push
sbb
loop
in
push
jge
mov
or
cmp
sbb
push
imul
cmp
int
shl
sub
push
repnz
mov
mov
mov
loop
rcl
mov
push
pop
ss
test
and
sahf
(bad)
cld
std
xchg
xchg
mov
pop
lds
sub
lods
ins
mov
add
push
nop
test
ins
cmp
icebp
jae
inc
hlt
inc
adc
call
retf
mov
test
sub
inc
jmp
sbb
test
(bad)
sti
rol
jle
ret
dec
stos
retf
jb
xor
mov
cmp
outs
and
aad
dec
repnz
cld
and
aas
inc
cs
mov
fst
pop
mov
sahf
icebp
or
retf
aaa
cmp
mov
pushf
test
jo
dec
nop
in
pmuludq
scas
mov
xchg
fsub
jp
in
add
cmps
fisttp
je
das
sbb
fidiv
push
xchg
pop
mov
add
inc
imul
or
pop
mov
int3
scas
test
push
mov
aas
mov
dec
mov
pop
add
call
mov
ins
mov
in
rcr
jmp
mov
call
jb
cwde
(bad)
cmps
jb
inc
xchg
cwde
repnz
dec
dec
push
iret
stos
sub
rcl
mov
xor
scas
xchg
loop
lods
jmp
push
mov
out
test
std
xlat
jno
or
sub
pop
aaa
out
inc
inc
and
mov
xor
test
scas
dec
addr16
cmp
call
inc
inc
push
inc
ds
call
pop
or
dec
shr
add
scas
in
cdq
popa
and
adc
mov
pop
cmp
out
inc
out
adc
dec
and
inc
add
xor
cld
sahf
push
jecxz
xchg
xlat
popa
push
or
cmp
cmp
add
test
jmp
mov
mov
jbe
aad
out
or
shl
cli
xchg
dec
or
xchg
neg
or
retf
ja
cmp
in
fwait
xchg
sbb
inc
int3
or
add
inc
add
cdq
sbb
jecxz
jns
repnz
jp
inc
and
fisubr
dec
les
or
rcr
xor
pop
scas
repz
adc
test
in
mov
nop
leave
pop
sub
scas
dec
push
scas
sbb
in
sbb
mov
aam
inc
inc
mov
jbe
inc
inc
stos
lods
add
jl
int
and
xor
call
test
mov
(bad)
(bad)
sub
mov
in
xor
sub
stos
jno
push
in
jne
add
and
xor
add
cli
jnp
repnz
mov
test
call
xchg
cmp
shl
xchg
sbb
sub
hlt
mov
xchg
fld
retf
push
cmp
icebp
pop
or
sbb
xchg
inc
shr
mov
mov
popf
rcl
rcr
jbe
lock
push
xchg
popa
les
(bad)
cmc
jns
and
test
sti
js
sbb
sbb
xor
fimul
dec
scas
pop
fs
imul
mov
fldcw
adc
popf
fistp
les
xchg
pop
les
dec
sub
icebp
mov
ds
jae
xor
imul
call
dec
add
jno
mov
mov
(bad)
dec
retf
mov
into
push
test
(bad)
cdq
or
jmp
mov
cmp
lods
nop
mov
ss
aad
test
in
jne
jecxz
data16
inc
cmp
rcr
adc
or
mov
push
daa
repz
jle
xchg
adc
mov
arpl
jge
stos
pop
cmps
adc
arpl
iret
dec
sbb
test
fist
xchg
pop
cmp
add
aaa
push
lea
mov
or
call
addr16
push
jbe
dec
xabort
das
push
xor
es
cmps
ins
std
stos
and
adc
ror
sub
in
xchg
mov
cmp
fld
movs
mov
push
mov
or
outs
push
inc
dec
inc
sbb
push
inc
mov
cmp
and
adc
aas
pop
pop
mov
aas
repz
mov
mov
ficom
fnstenv
add
or
lock
call
adc
and
jb
cs
inc
ficom
retf
ret
into
cmp
push
pop
cmp
cmp
(bad)
xchg
cmp
test
add
sbb
push
cmps
adc
shr
or
clc
retf
pushf
je
jne
idiv
pop
inc
add
and
sbb
pop
aas
dec
ss
xchg
cmps
adc
push
pop
xor
ret
in
ins
mov
mov
mul
or
cwde
ret
jmp
ret
fstp
sahf
popa
(bad)
ja
in
lods
sbb
dec
inc
out
inc
jmp
es
(bad)
xor
ror
cmp
out
cli
outs
jmp
cwde
jp
sub
cmc
pop
or
in
or
cmc
jbe
lock
popf
pop
lea
xchg
aam
clc
stos
rcr
dec
jl
jmp
inc
js
push
(bad)
and
hlt
mov
jp
(bad)
inc
ror
inc
dec
pop
out
sbb
and
test
in
xor
add
push
xchg
or
(bad)
out
scas
xor
in
ins
sub
call
(bad)
arpl
addr16
mov
int3
cli
sbb
sub
aam
rcl
int3
mov
or
pop
lds
jbe
hlt
test
repz
sub
mov
stos
mov
(bad)
jnp
pop
pop
push
mov
out
sahf
mov
in
ja
xchg
stc
shl
test
xchg
xor
pop
mov
sub
lock
or
lea
(bad)
mov
test
jns
and
add
mov
mov
sbb
pop
lock
aaa
xchg
les
lock
xchg
sar
bound
adc
rol
outs
xchg
mov
xor
ins
pop
pop
pop
add
jl
push
sbb
cld
aad
sbb
movs
dec
sub
les
mov
cs
sbb
mov
call
mov
dec
enter
push
mov
cmp
inc
loopne
dec
adc
outs
fs
scas
(bad)
dec
sbb
cld
xchg
mov
mov
mov
xor
inc
clc
mov
call
dec
dec
pop
or
icebp
jl
jo
aad
add
cmp
mov
adc
mov
mov
and
stos
push
aad
xchg
out
pop
xchg
dec
sbb
outs
jb
push
in
paddusw
outs
pop
ret
scas
jmp
in
xor
and
bound
mov
xchg
fwait
rcl
jg
pop
adc
or
leave
mov
scas
sbb
push
cmc
lds
ret
xchg
jne
push
scas
push
sub
sub
dec
pushf
mov
test
iret
cmc
xchg
push
sti
cwde
and
pop
dec
call
clc
stos
adc
sbb
call
pop
dec
xchg
iret
imul
or
jle
pop
sbb
xlat
ins
das
jp
xchg
mov
mov
iret
scas
fnstcw
lahf
cmps
test
adc
das
adc
addr16
lock
inc
aas
rcl
test
dec
seta
out
pop
mov
(bad)
jge
std
adc
pop
imul
jmp
fmul
add
movs
cmp
hlt
cmp
xchg
mov
add
rcl
sbb
mov
jp
or
(bad)
push
rep
hlt
inc
adc
lahf
jmp
pop
mov
cld
push
fbstp
(bad)
jns
test
ss
mov
shl
xchg
cld
call
and
sar
jecxz
cmps
ins
mov
cs
mov
jge
add
lea
js
scas
cmps
cli
inc
imul
repz
loope
mov
xchg
test
rcl
fs
cmp
sbb
jle
fcom
popa
jnp
pop
add
sti
mov
cmp
lods
out
cli
scas
pop
hlt
rol
push
lock
mov
(bad)
stos
ja
aas
and
inc
jb
mov
cmp
lods
mov
cmps
popfw
push
adc
scas
inc
popf
xchg
scas
xchg
mov
jge
xchg
call
test
mov
lds
(bad)
aas
shl
std
test
mov
sub
ja
pushf
cwde
push
popa
mov
repnz
xchg
loope
and
imul
int3
push
xchg
fsub
aam
movs
inc
mov
icebp
iret
inc
and
nop
inc
mov
mov
jns
adc
pop
(bad)
mov
(bad)
mov
sbb
pop
lock
icebp
icebp
out
not
jecxz
call
sbb
scas
pop
hlt
sbb
out
mov
cmp
cmc
int3
jbe
mov
in
clc
mov
push
add
ins
dec
or
push
xlat
inc
mov
imul
push
jmp
fbstp
retf
popa
(bad)
xor
jo
jecxz
jo
pop
sbb
mov
adc
(bad)
xabort
xchg
int
lea
inc
into
cli
cmps
add
test
jmp
xor
fucomip
call
loope
xchg
shl
(bad)
gs
aam
mov
and
or
inc
xchg
aas
sub
pop
out
fist
push
test
mov
mov
mov
mov
xor
jecxz
mov
rcl
leave
pop
cmp
ret
cmps
and
lock
pcmpeqw
stc
shr
ins
lahf
ret
xor
nop
addr16
lds
xor
push
mov
movs
or
sti
or
ret
adc
sbb
arpl
sahf
xchg
cdq
jmp
inc
enter
scas
into
ret
mov
xchg
test
fcomp
pop
fisub
and
sahf
movs
or
push
cmp
sub
dec
sbb
push
inc
pop
aaa
xchg
mov
jno
xor
and
or
inc
sahf
mov
sub
or
pop
push
(bad)
data16
or
pop
or
dec
sub
outs
or
setns
iret
sti
mov
push
cmp
stos
mov
push
sbb
mov
xor
and
xor
sbb
arpl
push
push
sub
mov
adc
or
ins
add
xchg
and
int
daa
out
mov
popa
test
sbb
out
dec
ror
movs
lahf
dec
sahf
pop
inc
or
scas
and
push
sub
shl
sub
cmp
sbb
outs
pmovmskb
lods
shl
mov
ds
cmp
int
enter
inc
mov
call
sbb
js
or
lahf
add
outs
mov
xchg
mov
fiadd
sub
sar
adc
stos
mov
sbb
cmps
in
ret
or
cmp
dec
or
lods
mov
inc
push
sub
mov
mov
inc
lds
xor
arpl
push
mov
mov
push
push
dec
push
loope
std
sbb
xchg
push
cli
mov
js
dec
gs
jns
and
pop
pop
test
loope
xchg
fdivr
aas
dec
in
push
mov
int
ja
retf
inc
pop
test
push
ss
and
addr16
sub
stc
inc
aam
nop
mov
dec
jp
or
(bad)
clc
setge
ja
jecxz
sub
push
sti
stos
jg
movs
cld
aad
shr
dec
dec
mov
cs
cli
adc
outs
sti
jae
fmul
int
enter
jo
add
cwde
dec
or
in
stos
aam
add
jge
hlt
xchg
xor
sbb
stos
sbb
retf
inc
or
pop
sub
add
push
js
daa
(bad)
dec
outs
nop
xchg
mov
pop
(bad)
jnp
test
pop
xor
cmps
dec
pop
push
cmp
into
dec
adc
icebp
cmp
inc
into
(bad)
sar
mov
pop
inc
push
dec
popf
jno
sub
adc
mov
adc
mov
scas
(bad)
enter
in
push
cli
(bad)
(bad)
(bad)
push
pusha
retf
inc
es
mov
fwait
sbb
inc
ror
mov
cwde
cmps
mov
retf
cmp
jmp
fs
adc
imul
add
les
mov
ror
mov
adc
sbb
sbb
jae
fcmovb
mov
leave
enter
call
enter
idiv
xchg
jb
(bad)
imul
sbb
cmp
push
or
lds
std
lds
inc
lea
cmp
push
sbb
pop
daa
fs
sbb
adc
inc
or
mov
and
or
in
xlat
add
push
push
pop
les
and
dec
sbb
repz
jnp
push
inc
test
mov
ss
popa
pop
jnp
ds
ds
out
push
movs
sbb
pop
fs
and
push
pop
inc
fmulp
sub
fldenv
pop
cmp
adc
jge
aas
cmps
test
sbb
fs
pop
add
call
pop
dec
xchg
loopne
adc
sub
cmp
ret
pop
ja
inc
push
jno
fmul
mov
pop
aas
gs
push
movs
pop
mov
cld
mov
fcomp
(bad)
(bad)
xor
mov
push
mov
pop
mov
aaa
xor
imul
add
and
cmps
cmp
jmp
sub
lods
mov
push
cld
xchg
(bad)
cld
cld
popf
pop
sub
int
ins
jmp
jb
and
retf
mov
les
xor
je
dec
pop
adc
dec
and
inc
xchg
xchg
cmps
in
xchg
push
out
mov
mov
mov
rol
shl
rcl
in
and
mov
(bad)
pusha
repz
fld
pop
sbb
retf
xchg
fwait
mov
stos
push
jmp
or
daa
push
inc
jp
mov
xchg
loope
adc
cmp
(bad)
push
xchg
jo
sub
rcl
inc
pop
out
sti
js
bnd
daa
sub
mov
add
jp
imul
mov
mov
gs
jns
inc
jmp
pop
adc
xchg
gs
push
or
imul
aaa
mov
test
push
int3
adc
outs
mov
in
loop
pop
enter
push
in
sub
inc
jge
dec
mov
add
int
(bad)
mov
fxch
sbb
add
xor
ret
sbb
out
mov
adc
sub
sbb
ror
jnp
mov
dec
mov
or
ret
xchg
sbb
or
not
or
or
pop
mov
push
jb
sub
popf
scas
adc
jo
xor
call
(bad)
iret
mov
xchg
mov
mov
cmp
adc
test
repz
or
sub
jbe
in
mov
fisubr
fisttp
push
mov
rcr
popf
adc
adc
add
mov
js
cmp
sub
loop
ror
in
test
test
xor
inc
in
dec
pavgb
sbb
add
je
lods
test
and
and
(bad)
mov
call
add
and
nop
ins
add
stos
ja
mov
lods
in
xchg
sti
test
lods
enter
adc
ins
xchg
push
sahf
stos
fldl2e
mov
je
test
pop
and
adc
cmp
jb
mov
sar
loope
(bad)
mov
inc
fist
add
add
pop
mov
dec
jb
aad
pop
push
icebp
mov
fs
pop
retf
dec
scas
aad
test
aaa
push
scas
mov
(bad)
push
adc
adc
sbb
jge
xchg
push
(bad)
lods
sbb
movs
push
jb
pop
inc
inc
cwde
push
aad
cmps
xchg
cs
sbb
xlat
sti
sub
bound
daa
gs
xchg
cmp
ret
and
jg
mov
sbb
sub
mov
push
cmp
ins
jae
cmp
xlat
repz
push
mov
xor
mov
(bad)
sbb
inc
ret
push
adc
mov
mov
(bad)
fistp
std
jno
mov
mov
xchg
gs
mov
fld
ret
fwait
jp
cmps
xchg
stos
mov
cli
in
cdq
inc
push
shr
ret
shl
jecxz
(bad)
(bad)
and
mov
pop
and
cmp
adc
cdq
pop
pop
or
test
pop
popa
(bad)
mov
or
imul
pop
mov
in
test
jno
and
mov
pop
rcl
and
in
jge
xchg
pop
js
cmp
and
add
pop
std
sub
call
(bad)
pop
call
rcl
movaps
cmp
hlt
rdmsr
and
xchg
mov
data16
sub
clc
adc
xlat
movs
add
mov
cld
sbb
add
loopne
mov
adc
call
imul
loopne
add
mov
pop
mov
xchg
fwait
cmp
cmp
jg
sbb
sbb
xchg
mov
mov
jle
(bad)
hlt
xchg
and
lods
hlt
xor
js
cmps
mov
call
loopne
or
xchg
mov
add
out
jno
stos
retf
in
ret
hlt
or
repz
mov
inc
sbb
div
inc
fcomip
mov
(bad)
out
adc
xlat
pop
jbe
dec
sub
mov
or
and
out
sub
iret
cmp
push
(bad)
out
(bad)
and
iret
jmp
cmps
mov
fisub
test
inc
inc
or
add
aas
cs
add
mov
scas
xchg
push
ins
mov
shl
xlat
and
cli
pop
xor
into
cmp
jo
out
aas
lock
les
jp
push
pop
iret
xor
popf
lea
sbb
cdq
cli
fdivr
adc
pop
push
and
(bad)
hlt
movs
test
enter
xchg
nop
neg
movs
mov
outs
mov
xchg
pop
mov
in
push
push
sub
jecxz
sub
pusha
add
mov
jae
je
leave
push
xor
orps
mov
sbb
push
jae
or
jne
xchg
push
dec
push
jmp
pop
mov
add
dec
lds
mov
cmp
(bad)
xor
inc
mov
rol
cmp
dec
mov
lds
aas
ret
mov
popf
push
push
and
aam
outs
mov
push
add
and
inc
mov
pop
aam
or
or
shr
rcr
adc
loopne
push
mov
loope
xchg
ss
ss
shl
add
rcl
stc
xchg
add
push
daa
out
test
fwait
pop
pusha
mov
nop
ss
and
adc
stc
test
mov
mov
ins
(bad)
xor
cmps
fistp
dec
sub
test
inc
push
dec
jmp
pop
rcr
sub
xor
xchg
dec
bound
mov
into
or
and
dec
adc
je
cmp
push
mov
sar
pop
adc
adc
pusha
sahf
cmp
dec
rcl
or
shl
xchg
jge
cs
es
daa
dec
mov
call
cmc
outs
adc
sub
sub
call
dec
push
sbb
mov
cs
fnstcw
loop
in
popa
add
cmp
adc
bound
data16
add
fisubr
unpcklps
mov
addr16
adc
or
xchg
jne
and
lods
pusha
jae
adc
lods
pop
mov
cli
dec
bound
inc
rcr
sbb
retf
in
add
pop
clc
xor
out
mov
xor
movs
and
push
retf
lea
pop
jns
xchg
or
rol
jp
pop
jno
pop
aas
mov
in
mov
mov
mov
shl
and
stos
cmc
xor
mov
add
cmp
mov
jo
sub
mov
push
push
out
mov
push
mov
es
(bad)
sub
fbld
sub
mov
cmp
test
add
inc
aaa
clc
and
btr
and
xchg
push
hlt
cwde
pop
jnp
scas
outs
cwde
(bad)
cld
scas
push
out
scas
sti
cdq
xor
test
das
jp
pop
and
jecxz
push
ins
dec
fmulp
pop
retf
int3
mov
mov
or
dec
lods
push
add
fnstenv
popf
xor
and
push
jge
jno
cmp
adc
mov
mov
repnz
adc
cld
push
mov
call
(bad)
pop
add
jbe
mov
and
stos
adc
sub
pop
xchg
mov
in
xor
jle
cwde
sub
cmp
add
add
dec
cmps
add
rol
arpl
les
out
xor
mov
xor
dec
adc
out
into
fistp
xchg
pop
mov
sbb
fimul
add
ret
mov
jbe
(bad)
jns
mov
(bad)
dec
retf
jl
jmp
xor
dec
test
mov
jmp
lods
or
push
js
scas
pushf
les
ss
and
xchg
xor
lahf
jmp
inc
inc
outs
test
push
neg
pop
inc
xor
loope
dec
lods
adc
dec
nop
fld
xchg
push
pop
int3
test
jno
ins
push
xor
in
pop
pop
push
repnz
addr16
adc
daa
dec
js
jl
push
(bad)
cli
mov
pop
ret
jae
pop
hlt
or
les
cmp
sub
retf
test
push
lods
cmc
xchg
in
or
pop
stc
shl
aas
daa
dec
add
lea
loope
(bad)
xor
inc
fs
cmp
mov
fisubr
add
into
fldenv
mov
ss
add
push
push
jns
pop
inc
xlat
dec
push
push
iret
ins
test
out
xchg
je
aaa
mov
retf
dec
jo
xor
test
std
pop
mov
test
jle
jg
out
popa
sub
pop
rol
mov
nop
cmps
mov
adc
pop
ins
ds
icebp
and
add
imul
nop
cmp
cwde
(bad)
in
outs
les
push
pusha
dec
jo
xchg
jp
popf
dec
retf
scas
adc
repz
jmp
adc
imul
fldenv
jmp
imul
loopne
test
cmc
sbb
mov
call
push
call
stos
xchg
mov
or
sub
pop
test
xchg
adc
sub
cmp
pusha
xchg
fsub
jnp
jmp
icebp
cld
lock
sbb
test
mov
js
lock
sbb
add
retf
pop
dec
imul
in
fnstcw
push
or
xchg
cmps
retf
mov
aaa
mov
ins
jnp
mov
out
push
jo
lods
mov
stos
and
push
(bad)
and
(bad)
repz
adc
loop
add
inc
gs
jmp
fnstsw
xor
xchg
sbb
jno
jl
rcr
int3
jge
jp
dec
inc
and
out
push
sub
mov
xchg
jmp
jbe
stos
fidivr
sub
push
pusha
movs
inc
cmps
fs
cld
cmp
pop
movs
and
fisubr
jns
inc
push
or
adc
inc
hlt
(bad)
xchg
pop
(bad)
pop
jno
push
stos
pop
int3
inc
test
cmc
repz
(bad)
test
getsec
jno
das
pop
xor
dec
adc
mov
xchg
adc
mov
xchg
mov
inc
ror
sahf
call
sub
jmp
pop
jecxz
xlat
imul
jp
dec
xchg
icebp
bound
movs
jmp
gs
push
pusha
pop
out
inc
retf
push
arpl
push
mov
bound
shl
retf
adc
movs
xchg
jl
ins
mov
mov
jns
or
(bad)
std
mov
addr16
shl
cs
ficom
cmp
(bad)
fsub
test
push
mov
sub
jns
mov
inc
pop
retf
xor
(bad)
dec
lahf
leave
js
mov
cmp
ds
call
push
cmps
leave
in
mov
jb
pushf
lods
push
pop
mov
dec
pushf
aas
dec
adc
jne
daa
sbb
dec
nop
mov
and
mov
mov
fwait
mov
push
sub
adc
mov
movs
pop
push
jmp
shr
je
mov
push
or
movs
les
add
cmp
mov
test
push
add
(bad)
stc
iret
push
das
cmps
or
popa
inc
cmp
dec
(bad)
bound
sub
in
jmp
out
fstp
js
mov
and
lods
mov
dec
jecxz
xchg
mov
push
repnz
sbb
inc
das
out
jbe
gs
(bad)
fwait
and
popa
fsub
scas
mov
cmp
dec
cmps
ret
lods
mov
dec
inc
adc
gs
add
push
and
cs
adc
adc
mov
iret
test
and
push
mov
popf
jecxz
xchg
mov
or
das
cmp
mul
push
imul
(bad)
fimul
aam
pop
mov
fdiv
jg
repz
cmp
pop
dec
push
mov
mov
mov
add
mov
or
add
sub
sbb
jge
push
loopne
test
(bad)
jb
and
stc
and
icebp
(bad)
mov
stc
mov
mov
(bad)
jne
js
jecxz
les
xchg
xchg
add
fdivr
push
cmp
xor
arpl
push
int3
and
pop
pop
jecxz
add
xchg
ret
sbb
inc
out
add
gs
popa
jp
push
rcl
mov
in
and
jmp
jecxz
mov
ja
inc
pop
lods
mov
push
cmp
test
idiv
data16
mov
and
pusha
xchg
cli
and
or
xor
imul
xchg
jge
dec
dec
repnz
sub
stos
pop
mov
or
push
jae
sub
pop
mov
xchg
fimul
bound
inc
ins
dec
sbb
inc
xchg
cdq
pop
sbb
xor
popa
mov
ins
leave
inc
in
add
mov
xchg
pusha
sbb
dec
stc
rol
mov
sub
sahf
push
dec
xor
cld
js
ffreep
sub
imul
inc
add
cdq
ret
sbb
sub
in
(bad)
into
pop
mov
and
cli
lods
retf
ds
push
mov
inc
mov
push
xchg
dec
ss
pop
pop
(bad)
ds
jmp
inc
or
jb
mov
ror
popf
jnp
cmps
hlt
lahf
xchg
sbb
xor
sub
sbb
cmp
cwde
inc
cmps
cs
jae
and
mov
jo
jle
(bad)
into
inc
cs
call
outs
inc
push
mov
pop
sub
mul
aas
es
jbe
push
(bad)
mov
adc
push
inc
scas
repnz
aas
push
test
ja
loop
xlat
push
push
repz
jno
mov
adc
mov
sub
or
mov
(bad)
jnp
dec
xor
int
jae
jb
cmps
mov
mov
and
pusha
xlat
xchg
stos
pop
loop
mov
add
je
(bad)
stc
xchg
das
in
adc
jcxz
xor
das
shr
sbb
lock
fwait
ja
and
xchg
fcom
xchg
jno
lods
rcr
int
leave
scas
xor
jmp
xchg
lods
mov
arpl
(bad)
jo
jb
jnp
mov
xor
cmp
(bad)
ss
lds
rcl
dec
ja
fisub
push
jge
xchg
pop
mov
add
inc
push
rcr
add
pushf
add
jg
jmp
jg
shr
ins
clc
adc
movs
mov
das
out
or
imul
mov
ja
sar
sub
add
push
cdq
daa
mov
push
in
dec
call
lock
cmps
and
rcl
sub
sahf
shl
add
data16
sbb
hlt
(bad)
call
int3
icebp
std
sub
ret
mov
cmp
movs
and
test
jg
lea
mov
cmp
call
mov
pop
push
fsubr
pop
jae
xchg
aaa
repnz
cmps
adc
jle
pusha
mov
movs
shr
push
xchg
clc
sbb
ror
fmul
cmp
add
pop
cmp
xor
push
add
test
inc
push
sub
pop
jbe
add
jl
sbb
mov
add
ja
xchg
test
cmp
shl
outs
int
push
imul
dec
jg
mov
pop
sbb
cmp
cmp
div
mov
mov
fs
inc
adc
adc
xor
in
das
mov
mov
jb
mov
push
sbb
cmps
sub
adc
pop
jg
loopne
mov
sahf
setl
cmp
and
mov
iret
dec
ja
mov
cld
inc
movs
fcmovnu
jmp
popf
xchg
xchg
and
mov
push
xor
add
retf
das
add
out
dec
es
rcl
sub
call
(bad)
popf
pop
sbb
nop
adc
adc
jae
jo
cmc
add
adc
fcom
jge
in
rcl
mov
mov
stos
scas
lods
rcl
test
xchg
mov
inc
push
sub
imul
sbb
ret
out
jo
idiv
adc
lahf
out
dec
dec
sub
in
add
out
movs
ret
repnz
mov
mov
repz
iret
leave
sbb
mov
push
(bad)
ds
sbb
ret
cmp
imul
cmp
add
popf
sub
shr
cmc
mov
add
inc
movs
stos
out
inc
adc
test
inc
mov
test
jnp
aas
xchg
(bad)
loop
xor
shl
out
hlt
cmp
sub
inc
inc
mov
cmp
mov
adc
adc
repnz
ins
jp
das
jbe
es
test
sub
pusha
xor
fadd
in
xchg
adc
jge
cld
mov
cdq
(bad)
jne
sub
sbb
or
inc
jecxz
xchg
sbb
jno
xchg
or
cmp
sbb
fadd
and
(bad)
or
dec
ja
adc
mov
ret
test
(bad)
fst
sub
scas
shr
jge
mov
xor
dec
sbb
pminub
cwde
dec
outs
pushf
push
test
rcr
(bad)
cwde
test
xchg
addr16
adc
mov
shl
fdiv
mov
jge
cld
fadd
sub
repnz
fild
retf
out
lock
test
pusha
int3
cli
iret
mov
jb
loope
(bad)
mov
push
outs
lock
mov
xor
sbb
inc
cmps
inc
pop
mov
mov
scas
xrelease
sub
out
mov
ret
jbe
push
pop
mov
mov
loopne
xchg
rcl
(bad)
cmp
inc
imul
(bad)
pop
sub
daa
sub
xchg
ins
jno
sbb
movs
retf
mov
adc
nop
and
inc
fld
les
jne
jne
sahf
ret
out
stc
call
fistp
push
adc
arpl
inc
test
and
pop
dec
dec
mov
in
sbb
cwde
jns
fdivr
mov
or
inc
xchg
sub
xlat
rol
lea
mov
inc
cmp
jmp
ds
sub
push
or
repnz
imul
sbb
inc
mov
imul
pop
fidivr
pop
icebp
push
and
into
push
and
jmp
push
cmc
push
jmp
cmp
hlt
sbb
daa
adc
fidiv
dec
cwde
pop
daa
aas
retf
fsubr
inc
das
pusha
sbb
mov
popf
das
jne
or
xor
popf
pop
dec
lods
loope
ins
lahf
mov
dec
imul
shr
ret
jmp
and
imul
fild
inc
pushf
push
or
pushf
push
mov
rcr
jnp
das
xlat
loopne
jmp
sbb
add
inc
ret
bound
ror
jmp
add
lods
arpl
cmp
add
pop
(bad)
pop
std
std
adc
stos
std
(bad)
jne
shl
mov
inc
dec
add
fidivr
mov
shl
std
aam
enter
mov
and
stc
pop
xchg
repz
cmps
cmp
push
jb
inc
hlt
pop
mov
xchg
leave
ss
in
lods
scas
push
fs
int3
or
shl
outs
jecxz
push
(bad)
jp
fxam
add
sub
inc
int3
ficom
jns
sub
mov
xchg
mov
mov
push
cmp
inc
ret
push
movnti
mov
ds
cmp
(bad)
(bad)
jp
out
mov
in
mov
test
mov
popa
movs
and
xchg
xor
ss
push
ss
ret
add
mov
test
mov
outs
adc
sbb
bound
sbb
and
stos
arpl
xchg
cmps
adc
or
out
push
sub
ds
add
inc
mov
ret
rcl
leave
pop
(bad)
cmps
nop
pop
pop
pop
and
mov
ret
mov
test
jge
imul
adc
in
sub
rcl
loopne
fsubr
cwde
and
enter
shl
dec
cmp
cmc
xor
xchg
sub
and
and
pushf
das
(bad)
cmc
jg
or
nop
mov
push
retf
or
fs
popf
bound
rcr
pop
sti
(bad)
cli
fistp
test
push
out
xor
mov
sbb
adc
shl
inc
fimul
sub
or
xchg
xor
int
(bad)
xchg
and
lock
adc
(bad)
in
call
xchg
and
sub
mov
in
jns
push
xlat
out
xor
and
fwait
adc
inc
mov
mov
cwde
xchg
sti
and
cmp
lock
mov
xchg
lock
and
xchg
clc
cs
fidiv
iret
iret
jmp
mov
or
mov
push
sub
mov
jbe
or
shl
aaa
xor
js
imul
(bad)
pop
sbb
movs
mov
xor
inc
cmp
adc
(bad)
test
add
js
mov
cmp
sub
ret
jno
mov
daa
pop
mov
loope
and
xchg
inc
ds
sub
sub
je
sbb
je
jmp
or
dec
jge
mov
sub
jg
dec
inc
xor
test
icebp
cmps
jbe
sbb
(bad)
lahf
nop
push
add
or
cmps
xchg
mov
mov
jecxz
mov
xor
pusha
dec
dec
ss
je
inc
sahf
scas
cmp
aam
xchg
test
sbb
sub
adc
push
push
addr16
pop
pop
xor
pop
por
adc
push
ret
dec
add
out
sbb
ins
xor
or
test
xor
mov
xchg
sbb
shl
jg
xor
retf
or
cld
arpl
add
sub
daa
not
aam
int3
cmc
or
sub
ficom
hlt
mov
mov
aaa
adc
(bad)
jg
jbe
cmps
shr
mov
adc
push
xchg
pop
xchg
fwait
cmp
outs
dec
adc
jb
adc
jb
and
mov
push
nop
jmp
shl
pop
enter
je
xchg
ret
or
inc
ret
xchg
sbb
cli
jg
lea
dec
jmp
nop
pop
jp
jne
out
mov
in
je
dec
int3
fcomip
dec
popa
pop
and
mov
int3
add
mov
and
ins
cmps
retf
lds
push
fcmovne
pop
jnp
add
jecxz
xor
frstor
cmp
fs
xlat
xlat
adc
add
in
arpl
pop
adc
retf
mov
jno
in
inc
dec
stos
arpl
das
xchg
mov
and
(bad)
jns
pop
imul
jecxz
int3
(bad)
pop
xchg
mov
cli
dec
outs
cmp
sar
int3
lea
inc
cld
add
push
rcr
dec
mov
les
and
add
jecxz
ficom
sbb
mov
movs
daa
add
jns
addr16
sar
gs
stc
jl
or
push
inc
mov
fxch
mov
mov
jecxz
dec
shl
xchg
push
aam
mov
push
add
mov
mov
or
mov
fwait
xlat
outs
out
ins
xor
xchg
add
scas
shl
sbb
jne
jl
xor
nop
sbb
pop
inc
sbb
aaa
mov
fsub
adc
rol
dec
push
mov
adc
add
and
add
dec
lods
or
xchg
inc
in
das
jl
nop
adc
adc
inc
lods
mov
sub
inc
mov
add
sub
test
or
adc
xchg
and
ret
or
cmp
sub
push
out
xchg
or
or
call
pushf
mov
inc
test
sbb
cwde
pop
adc
aas
or
scas
(bad)
cmp
pop
add
xor
pop
dec
push
pusha
mov
sub
test
xor
retf
jecxz
loopne
mov
jecxz
retf
inc
and
aad
and
or
push
mov
imul
pusha
xor
stos
imul
push
pop
in
jmp
pop
ja
loope
nop
jbe
rcr
movs
into
imul
jb
cmps
(bad)
(bad)
cdq
inc
jnp
outs
mov
inc
and
stos
sub
ret
mov
dec
push
sbb
(bad)
cmps
ficomp
jl
fdivrp
jno
movs
dec
sti
mov
xlat
(bad)
push
(bad)
sub
jl
inc
xlat
data16
xor
jmp
add
xchg
pop
lods
call
in
test
jmp
sub
sub
sbb
test
iret
dec
stc
push
out
jne
pop
xchg
cli
mov
dec
test
jbe
push
push
enter
data16
gs
fs
add
jmp
mov
sbb
xchg
aam
jmp
ss
mov
fcomp
xor
sbb
xchg
xchg
xchg
jp
jl
loopne
inc
test
(bad)
mov
fild
jnp
loop
or
rcr
adc
nop
xor
rcl
loop
fwait
int3
imul
ins
xchg
punpckldq
rcr
ret
stc
imul
sub
retf
sub
cs
push
xor
push
cmp
repz
and
xchg
cmp
sahf
lock
lea
jecxz
jo
jl
or
cmp
addr16
(bad)
add
and
mov
xchg
adc
or
int
enter
and
fsub
out
push
hlt
jb
xor
jp
aad
pushf
cli
adc
pushf
xchg
fnstenv
dec
add
(bad)
jnp
lods
adc
dec
pop
fild
jl
xchg
rcl
sub
pushf
xchg
imul
xor
cmc
pusha
push
sbb
shr
adc
daa
push
call
lahf
mov
clc
daa
add
pop
jmp
cld
stos
pop
push
jle
mov
cmp
add
mov
push
test
fwait
and
mul
jge
retf
and
jne
or
pop
dec
sbb
mov
in
push
add
daa
adc
mov
xchg
jl
out
inc
movs
xchg
(bad)
sbb
xor
ror
sbb
sub
mov
aad
mov
adc
jle
pop
adc
out
push
pop
pop
mov
jmp
pmulhuw
xchg
ins
adc
dec
pop
data16
cmps
push
(bad)
rcl
call
arpl
mov
xchg
loop
cmps
std
and
sbb
mov
jecxz
sub
lahf
not
push
or
ret
mov
arpl
jne
je
adc
inc
pushf
scas
pop
pop
mov
mov
pop
sub
add
and
cmp
out
je
fisub
test
cs
inc
dec
into
cmps
aas
inc
add
ficomp
shr
cli
push
neg
adc
sbb
adc
push
jecxz
sbb
xchg
and
out
push
mov
test
sahf
shr
fld
loop
(bad)
jae
push
retf
mov
outs
sbb
cmp
adc
aad
loopne
inc
jp
out
movs
aaa
push
sub
adc
or
inc
push
mov
div
clc
div
adc
ror
cmp
addr16
xchg
inc
and
cdq
int3
xchg
in
mov
(bad)
jo
or
mov
lods
shl
cwde
jns
mov
lahf
iret
mov
xor
repnz
xor
or
and
mov
icebp
(bad)
sub
mov
cmc
add
jp
ror
les
and
push
retf
rcr
pop
sub
out
mov
adc
mov
mov
or
cmp
lods
leave
jmp
rcr
ficomp
ja
jge
gs
jbe
add
shl
popa
aas
xlat
mov
jecxz
arpl
loope
movhlps
mov
ficom
xor
dec
rcr
dec
outs
inc
bound
call
or
not
jmp
add
sbb
pushf
outs
test
scas
jl
and
sbb
mov
or
pop
mov
icebp
in
retf
ins
enter
in
cmps
dec
aad
(bad)
and
xor
sti
stos
call
scas
adc
daa
push
push
jbe
idiv
jnp
and
test
out
dec
jg
pop
lock
xchg
push
add
outs
leave
and
sub
int3
call
mov
inc
jb
jnp
sbb
cli
xor
cld
inc
adc
push
jecxz
(bad)
in
popf
test
push
push
hlt
sub
out
or
arpl
sbb
xchg
sbb
lds
gs
outs
outs
xchg
test
mov
fs
xor
leave
sahf
shl
cmp
mov
fcom
adc
(bad)
cmps
xchg
icebp
(bad)
sbb
cwde
sar
pop
push
cmp
dec
jmp
xor
xchg
dec
or
cmp
and
sbb
daa
cs
inc
pop
lods
cmps
mov
fadd
mov
xchg
push
imul
lds
xor
popf
push
or
mov
push
sub
and
in
jno
jmp
mov
inc
loop
pop
data16
pop
xchg
je
pop
dec
mov
mov
scas
mov
or
std
jnp
in
stos
inc
mov
xlat
adc
jo
int
mov
rcr
(bad)
xor
jge
cli
xor
mov
arpl
sahf
push
jbe
mov
xor
sub
sub
cdq
std
add
je
pop
xchg
inc
mov
inc
xor
fidiv
cmp
in
or
ins
addr16
jae
pop
loopne
movs
mov
imul
icebp
dec
xchg
js
das
add
and
push
test
stc
retf
xchg
push
stc
arpl
push
pop
adc
and
mov
fucomip
mov
repz
mov
jmp
push
stc
div
inc
mov
push
enter
mov
dec
pop
clc
jmp
test
sahf
in
cmp
xlat
retf
cmp
add
in
push
imul
xchg
mov
shl
imul
mov
cmp
xor
dec
mov
imul
ja
jmp
pushf
imul
push
or
out
sbb
nop
fwait
xchg
stc
imul
sub
xlat
jmp
mov
call
xchg
repz
stos
fs
xor
jmp
jnp
mov
push
jbe
(bad)
div
mov
test
iret
and
lds
pop
pop
pushf
mov
lock
lods
dec
aam
inc
mov
mov
xor
fcmovb
test
add
xchg
test
inc
aas
adc
sbb
test
jne
lods
shl
xor
add
xor
dec
mov
fmul
jo
sbb
scas
repz
push
or
cli
mov
xchg
mov
jne
xchg
arpl
cmps
xor
xchg
icebp
shr
shl
jg
pushf
sbb
push
push
mov
cmps
jl
ret
dec
mov
jecxz
test
data16
sub
and
into
lea
sti
push
lds
adc
pop
push
(bad)
mov
lds
movs
xchg
scas
add
pop
cmc
mov
hlt
push
cmp
nop
xor
xor
jo
adc
ds
add
xor
sbb
mov
cwde
push
dec
push
push
cmps
repz
sbb
jo
sar
das
fst
iret
dec
xchg
mov
fld
dec
sub
pop
test
repnz
mov
popa
adc
sahf
push
cmps
and
push
(bad)
fidivr
js
or
jmp
mov
add
xchg
enter
jno
stos
lods
icebp
add
cmp
out
fistp
mov
leave
cmp
addr16
sbb
push
mov
mov
cmps
pusha
cmp
fdivr
arpl
jp
sahf
jecxz
imul
xchg
sahf
cmp
push
xchg
mov
lods
test
jo
dec
mov
leave
dec
jae
push
push
iret
fst
dec
ja
pop
fadd
test
ficom
imul
shl
dec
leave
loopne
dec
or
push
or
cmp
cmp
or
sub
add
aad
and
mov
dec
adc
mov
iret
hlt
adc
fstp
and
pop
cmp
adc
repz
sbb
retf
int
add
mov
out
push
pusha
pusha
jb
jbe
mov
pop
mov
out
in
inc
or
mov
lock
pop
in
and
fcomp
cmp
dec
adc
ins
loop
les
dec
xor
into
ins
mov
mov
inc
xchg
sar
mov
imul
jns
mov
in
jo
and
shr
out
and
fdivr
ror
dec
jns
inc
jmp
fild
cdq
mov
pushf
rcr
int3
call
sbb
adc
or
ss
push
in
mov
push
pop
int3
xchg
mov
retf
adc
lods
sahf
xchg
xchg
sub
cmc
addr16
push
sbb
cdq
push
shl
(bad)
inc
ss
scas
fild
mov
or
pop
pop
test
popa
outs
mov
add
lock
sbb
xor
or
xchg
jmp
jne
sar
in
or
pushf
pop
or
push
mov
aad
inc
iret
retf
nop
in
fild
stos
xor
lods
pop
and
mov
add
(bad)
ja
xor
popa
push
jno
out
push
push
movs
or
xor
jmp
jnp
in
dec
in
(bad)
fcomp
xor
jge
sar
mov
mov
mov
je
ins
test
or
fwait
dec
outs
cmp
imul
xor
in
or
sahf
jl
jo
sub
cld
xchg
lds
add
mov
shl
mov
sub
and
dec
rcr
push
mov
sub
xchg
call
xchg
pop
retf
jg
xchg
mov
out
mov
xor
mov
aas
cmp
aam
shr
daa
ja
push
push
xlat
aam
test
mov
daa
pop
jbe
xor
out
popa
(bad)
hlt
les
sbb
push
push
sbb
cmps
out
in
popf
push
push
sahf
cmp
inc
xlat
dec
sub
cmps
das
xchg
test
pop
test
mov
rol
test
push
std
popf
scas
cmp
lds
scas
adc
jecxz
bound
mov
out
cdq
outs
loopne
jmp
dec
test
retf
push
or
out
sbb
mul
pop
popa
jae
jno
data16
pusha
cmp
stc
or
dec
int
and
mov
mov
scas
movs
popf
or
outs
movs
push
aas
xchg
popa
test
imul
push
jne
sbb
jmp
test
into
(bad)
leave
mov
push
sub
aaa
mov
fadd
sbb
adc
xchg
push
adc
add
sbb
or
jno
ss
loope
fadd
imul
sar
mov
add
jle
addr16
pusha
adc
push
imul
xchg
inc
sbb
dec
into
icebp
mov
outs
push
inc
mov
sti
fld
ficom
scas
scas
or
push
out
jo
test
mov
(bad)
fucomp
jne
sahf
or
and
leave
pusha
or
mov
inc
cli
aaa
ror
xchg
lods
es
das
pushf
adc
mov
mov
clc
push
and
lds
repnz
aaa
scas
mov
and
jb
imul
sbb
stc
lock
nop
les
imul
dec
je
mov
pop
sub
call
leave
dec
pushf
ja
pop
mov
adc
mov
adc
push
leave
sub
jbe
jg
imul
mov
les
shl
into
xchg
add
in
outs
add
cmps
xor
ds
push
jmp
outs
test
jp
xlat
(bad)
sahf
call
(bad)
cdq
bound
sbb
mov
mov
movs
cmp
pop
retf
cld
(bad)
fscale
arpl
push
rcl
push
add
inc
xchg
aam
into
and
xchg
inc
ror
push
jg
nop
jns
test
mov
push
lock
push
push
shufps
sub
sub
pop
imul
cli
(bad)
or
ret
pop
pop
mov
ds
rcr
cwde
and
push
mov
inc
dec
sub
inc
shl
mov
fs
enter
dec
stos
mov
sti
nop
dec
rcl
sub
shl
pop
ins
mov
(bad)
dec
repnz
xor
add
xchg
call
sub
mov
imul
fs
and
outs
cmps
jno
add
cmp
xchg
xchg
inc
lock
push
scas
adc
fimul
pop
sbb
pop
ins
movs
push
retf
cdq
int3
les
and
cmps
retf
jo
jo
push
mov
pop
(bad)
mov
xchg
sbb
dec
out
mov
add
cmp
test
pop
and
fisttp
das
mov
mov
and
sbb
popa
and
(bad)
bnd
bound
jne
out
retf
and
cmp
fcom
and
push
inc
jmp
xchg
fdiv
test
push
std
fs
dec
loope
cmp
mov
mov
add
sbb
enter
dec
mov
mov
pop
(bad)
jp
xor
and
sub
xchg
mov
inc
in
xor
gs
cmp
cmps
xor
retf
scas
mov
rcl
out
inc
and
gs
ins
pop
xor
test
pop
repnz
iret
sar
add
adc
mov
aam
shl
call
mov
call
add
pop
add
dec
lods
call
leave
dec
stos
adc
aam
aad
rol
out
mov
into
add
enter
mov
cmp
add
shr
in
mov
out
in
mov
fisubr
adc
lds
push
sub
shl
inc
stos
out
mov
xor
out
mov
sub
mov
daa
sbb
(bad)
pop
or
mov
cwde
xor
stos
je
fs
cli
aaa
ror
mov
or
mov
test
pushf
movs
leave
push
in
sub
push
push
fcom
push
fcomp
adc
js
adc
pop
jnp
pop
or
call
xchg
loope
push
bound
fld
xor
xchg
dec
or
sbb
mov
mov
in
and
int
mov
lods
fidivr
push
ja
repnz
test
jbe
gs
mov
xchg
int3
dec
in
mov
dec
or
out
mov
mov
add
not
ins
mov
popa
and
fimul
xchg
push
xchg
das
jl
adc
pusha
icebp
ja
test
jne
call
ins
pop
ins
jmp
jge
movs
add
cwde
into
sahf
loop
(bad)
lds
inc
lods
xor
jmp
clc
xor
out
pop
mov
or
inc
(bad)
aas
outs
movs
(bad)
mov
retf
test
test
cmp
push
popf
xor
cld
and
xor
cmp
in
js
cli
cmp
adc
cli
sub
(bad)
sub
fs
loope
mov
mov
call
int3
cmp
dec
aas
out
nop
jb
pop
ror
jl
sti
(bad)
fadd
pop
std
mov
imul
mov
aam
xchg
out
cmps
dec
lods
cmps
push
mov
int
mov
cmp
ins
mov
shl
pop
loope
dec
jp
icebp
mov
pusha
ja
retf
push
inc
mov
inc
pushf
fmul
jg
mov
ret
fist
xor
pushf
bound
fidiv
inc
movs
pop
es
cwde
scas
sub
jmp
sub
mov
call
inc
hlt
add
shl
mov
inc
outs
sbb
test
popf
mov
into
(bad)
outs
int3
repz
cmp
and
xchg
pop
popa
add
scas
not
fisubr
inc
and
pop
inc
push
dec
ins
xchg
ror
int3
jb
adc
xor
inc
ins
ror
inc
cmp
jg
adc
sub
rcr
dec
inc
pop
mov
dec
clc
sbb
jge
add
inc
pop
dec
inc
pop
out
test
lods
push
test
movs
jo
lea
iret
xchg
test
call
jecxz
sub
je
in
repnz
sti
int
icebp
xor
into
xchg
or
es
push
loopne
rcl
aam
aad
xchg
push
repz
shl
(bad)
mov
mov
xor
dec
xor
xchg
stos
inc
inc
test
das
inc
into
inc
mov
jae
push
out
cmp
cmp
adc
in
sub
mov
cmp
call
sar
aad
fdiv
cld
xchg
mov
retf
test
test
out
jl
adc
cli
jae
mov
cmp
pushf
pop
dec
movs
sbb
mov
add
(bad)
cmp
or
fistp
push
jnp
lods
cmps
jg
jmp
adc
dec
dec
and
inc
mov
cdq
fnstsw
daa
push
or
mov
sub
(bad)
cmp
jle
jle
cmc
je
cs
sub
daa
in
lahf
gs
jbe
and
bound
and
fcomp
mov
jnp
leave
int
test
xchg
cmp
xlat
fimul
xor
call
lea
adc
in
push
dec
shl
fs
outs
and
xchg
outs
xlat
scas
(bad)
gs
jmp
mov
je
mov
mov
stc
cmps
adc
in
mov
mov
xchg
movs
pop
retf
in
lods
mov
fwait
or
mov
inc
test
iret
imul
adc
add
fisub
ja
repz
out
adc
add
adc
call
jge
int3
mul
mov
dec
mov
nop
push
cmp
xchg
out
lahf
sbb
cmp
cmc
nop
jmp
nop
je
fnstsw
rcl
out
pop
(bad)
xor
imul
rcl
mov
js
jne
sbb
dec
mov
arpl
repnz
xor
inc
jmp
push
adc
xchg
inc
mov
scas
aas
pusha
adc
outs
mov
jo
and
shl
daa
mov
mov
adc
jp
adc
out
inc
popa
mov
sbb
xor
leave
lods
das
cmp
sub
mov
jnp
not
mov
jno
xor
jb
mov
mov
es
jmp
icebp
jg
jno
xor
mov
push
push
out
test
fucom
ja
xor
pop
(bad)
jne
test
jo
scas
jno
mov
rcl
mov
xchg
pop
xchg
stos
sar
mov
adc
into
cdq
ret
loope
add
popf
and
xchg
mov
imul
pop
outs
test
sbb
add
mov
xor
xchg
sbb
mul
pop
nop
inc
retf
pop
outs
mov
int
mov
cmp
adc
xchg
jb
idiv
gs
or
cwde
jecxz
jp
shl
aas
mov
dec
jge
inc
data16
pop
aam
or
fidiv
leave
sub
cmps
add
sbb
stos
xchg
mov
pop
xlat
and
sbb
push
mov
push
ja
xor
fst
retf
or
xchg
push
inc
out
mov
stos
gs
cld
jl
stos
test
cmp
pop
repz
ja
sbb
and
lods
jae
cmp
xor
xchg
cli
lds
rcr
mov
addr16
test
mov
clc
js
sub
outs
out
(bad)
lds
dec
icebp
(bad)
out
cmp
out
xchg
jle
pop
pop
icebp
and
icebp
add
adc
sub
aam
xor
ja
mov
call
div
mov
xchg
retf
int3
cwde
jns
adc
rcr
retf
sub
lods
inc
xchg
cmps
loop
push
(bad)
dec
or
pop
mul
cmp
in
push
cld
call
ret
push
adc
out
fs
xchg
sub
mov
sbb
cmp
mov
sbb
cmp
push
ds
ds
test
scas
ds
es
push
call
cmps
dec
xchg
or
jge
test
psrld
jmp
rcl
aad
jmp
pop
mov
aaa
jo
int3
dec
sub
jne
out
sub
popf
jp
loope
fiadd
jl
sbb
hlt
mov
dec
lock
xor
xor
mov
out
jecxz
stos
add
loope
or
add
cmp
mov
pop
mov
or
test
dec
test
xor
add
and
outs
inc
js
les
mov
cmp
sbb
sar
int3
int
repnz
pop
cld
mov
imul
push
lea
mov
test
ins
cmp
sbb
out
mov
loop
aam
dec
inc
and
iret
fcmovnb
push
scas
pop
xor
es
xchg
cmps
(bad)
mov
xchg
cmps
push
jg
sub
xchg
mov
repz
mov
push
aaa
inc
cmp
lods
pop
sahf
inc
rol
pop
fwait
mov
imul
icebp
push
push
add
mov
mov
adc
int
mov
aaa
popa
(bad)
repnz
out
data16
mov
jae
cmp
mov
ja
sbb
call
adc
sbb
retf
dec
cmp
hlt
mov
sub
cmc
mov
(bad)
aam
pop
cmp
repz
adc
mov
mov
inc
mov
xchg
or
push
pushf
mov
inc
bound
loope
inc
mov
xchg
out
mov
mov
cmps
call
adc
jl
cmp
or
jnp
inc
mov
jbe
cmp
mul
pop
add
pop
inc
das
inc
call
iret
push
and
cs
cmp
test
push
outs
fs
jo
add
sahf
cwde
push
dec
mov
pop
arpl
ds
js
aas
push
pushf
dec
arpl
push
fiadd
mov
xchg
or
into
test
cld
xchg
push
ds
cmp
jp
std
mov
mov
jne
test
pop
push
(bad)
sti
and
cmp
xchg
shl
ss
dec
std
aas
pop
fidiv
scas
xor
mov
inc
data16
cdq
fiadd
and
fbld
adc
push
sti
jecxz
(bad)
test
mov
ins
pop
das
or
dec
das
imul
pusha
movs
nop
lods
sub
mov
or
mov
nop
outs
mov
add
jg
pop
scas
fstp
push
and
jge
lods
inc
mov
(bad)
xchg
aam
dec
les
sub
sub
mov
cmps
or
clc
lahf
iret
pop
pop
sbb
jno
mov
stos
pushf
out
out
add
push
pshufw
out
stos
mov
jae
outs
cmc
movs
fadd
ror
pop
pop
loope
dec
sbb
dec
gs
jg
dec
mov
mov
jbe
pop
je
rcr
pop
ins
mov
(bad)
sub
retf
ss
fisttp
shr
adc
(bad)
mov
hlt
lock
pop
dec
pop
jecxz
movs
leave
adc
mov
jno
arpl
retf
shl
scas
lods
jns
pop
bound
mov
pop
shr
dec
pop
add
mov
sub
call
xchg
stc
jbe
scas
mov
cs
mov
(bad)
shl
jae
adc
dec
mov
xlat
sbb
fsubr
loope
cmps
popf
push
imul
add
and
lods
pusha
cmp
dec
mov
loop
or
retf
dec
or
rcl
not
add
or
sahf
(bad)
xchg
dec
inc
ficom
push
repnz
add
call
and
(bad)
in
or
cmp
pop
clc
cmp
icebp
add
(bad)
xchg
scas
cmp
add
xor
push
add
outs
scas
adc
(bad)
iret
fsubr
pushf
loopne
cmp
hlt
mov
icebp
xor
xchg
xor
pcmpeqw
jnp
push
test
imul
ds
xchg
push
std
js
imul
retf
jb
nop
scas
sbb
cmp
mov
add
call
mov
fcomp
sbb
xchg
sub
cmp
push
adc
sbb
mov
xor
nop
rcr
pop
ficom
(bad)
cdq
inc
fisttp
mov
xchg
mov
int
xchg
fwait
or
or
loope
add
sub
sub
fmulp
dec
mov
ins
dec
jnp
hlt
cli
mov
or
loopne
or
sub
test
xlat
push
push
sbb
xchg
aad
sub
cmc
add
imul
stc
les
nop
jg
cmp
aam
add
in
test
sbb
sbb
mov
or
xor
cmc
mov
dec
div
cmp
xchg
add
out
cmc
push
inc
into
mov
loope
popf
sbb
popf
sbb
dec
sub
mov
xor
mov
stos
or
or
les
xlat
gs
data16
jae
jmp
mov
push
push
ret
xchg
or
jl
mov
push
inc
aam
ins
(bad)
aam
push
shl
pusha
or
gs
nop
cwde
mov
cmp
pop
jo
into
or
xchg
adc
aas
in
jb
mov
adc
dec
jno
data16
mov
inc
sub
xor
std
pop
cs
jl
xchg
xchg
in
icebp
cs
test
aad
xchg
pop
and
enter
cmps
inc
mov
retf
fsub
rcl
adc
inc
out
call
xchg
xchg
adc
ins
or
jno
jg
jmp
(bad)
add
xchg
outs
mov
imul
push
shr
add
(bad)
and
xlat
jno
mov
sub
jge
xchg
pop
cmp
in
clc
jns
cld
inc
mov
js
inc
dec
xor
ja
popf
int3
dec
data16
sub
iret
inc
mov
(bad)
js
mov
(bad)
stos
aaa
add
add
bound
dec
and
mov
aam
cmp
pop
or
xchg
or
or
aas
dec
mov
aas
mov
dec
movs
pop
jae
pushf
out
(bad)
imul
out
cdq
mov
in
sub
in
mov
das
mov
mov
mov
add
movs
sub
loope
daa
mov
adc
popf
sub
cmp
xchg
in
lods
cli
fiadd
jge
mov
jmp
js
mov
jle
sub
add
sbb
pop
mov
loop
sub
ret
dec
std
push
mov
pop
mov
add
icebp
lea
cmc
dec
cmps
adc
int
test
movs
adc
jp
lea
xor
int
lods
iret
int3
repnz
push
xchg
test
jge
dec
and
imul
not
(bad)
aaa
dec
dec
hlt
add
mov
shl
inc
cs
stos
push
mov
pop
cmps
jl
out
mov
or
ja
sub
es
frstor
rcr
cmp
iret
lods
push
shr
dec
push
jg
xchg
cli
xchg
add
or
mov
int
(bad)
hlt
fs
cs
xchg
sbb
mov
jl
cld
imul
pop
ins
cwde
mov
pop
jecxz
xor
lds
jne
pushf
outs
jae
ror
into
inc
bound
pop
push
add
pop
jge
pop
ins
push
loop
test
sbb
loope
in
pop
pop
mov
mov
mov
mov
cs
inc
(bad)
adc
hlt
cdq
test
dec
push
sbb
mov
pop
dec
enter
add
xchg
loope
out
push
jmp
dec
push
dec
xchg
xchg
push
lahf
and
cli
retf
sbb
cmps
push
and
jnp
mov
xchg
test
mov
rcr
test
sar
mov
int3
loopne
jnp
in
repz
push
(bad)
jl
sbb
popw
and
lods
enter
and
xchg
(bad)
fst
sub
int
jns
dec
out
fld
in
test
imul
jle
loop
jnp
cmp
shr
mov
jmp
das
adc
xlat
mov
aad
mov
js
imul
je
jg
mov
mov
lods
xchg
rol
push
lock
in
fmul
jbe
sub
mov
aas
fcmovne
shl
dec
stos
or
or
add
daa
dec
aam
push
std
(bad)
or
lea
push
xor
sub
cmps
dec
xchg
shr
xchg
stos
inc
jb
xchg
adc
jp
(bad)
aad
in
popa
sbb
aas
xchg
jl
mov
push
in
xchg
outs
mov
aas
repnz
gs
lds
dec
and
pop
mov
cli
sub
not
stc
ins
into
test
sub
add
pop
ret
dec
fmulp
fild
js
mov
jle
push
call
xchg
(bad)
mov
dec
sbb
and
cmc
mov
add
aam
inc
jmp
and
adc
dec
add
repz
add
(bad)
aaa
sar
push
ds
aad
jl
rcl
mov
je
lahf
jecxz
mov
pop
add
nop
mov
stos
push
sub
push
mov
xor
xlat
aam
sbb
aaa
mov
jmp
inc
inc
cmp
retf
push
sbb
lea
inc
stos
fcmovbe
mov
jecxz
mov
hlt
mov
mov
lahf
add
jo
dec
or
repnz
pushf
cli
mov
add
xor
adc
stos
test
fadd
retf
lea
cmp
xor
rcr
pop
sbb
push
jb
(bad)
ja
push
and
dec
dec
or
jae
(bad)
mov
mov
call
mov
push
adc
or
xor
lea
cmp
shr
jl
push
sub
and
outs
mov
or
je
mov
adc
stc
stos
das
cld
or
jns
inc
push
aaa
xchg
mov
mov
cdq
push
call
inc
xchg
rol
cmp
das
jmp
call
dec
fidivr
add
lea
add
sbb
int3
pusha
imul
pop
ret
push
in
adc
xchg
and
cwde
nop
pop
adc
lods
enter
gs
adc
dec
cli
stos
add
cmc
pusha
cli
xchg
call
push
push
xlat
ret
data16
iret
xor
pop
mov
fiadd
sub
mov
mov
arpl
fcom
mov
test
bts
mov
push
pop
mov
arpl
xchg
mov
cld
out
imul
dec
call
push
inc
(bad)
sub
inc
iret
push
mov
add
push
in
les
into
sbb
clc
push
rol
movs
cmc
mov
stc
sbb
sbb
(bad)
jnp
fsubrp
out
jb
xor
and
cli
fwait
dec
sbb
stos
mov
jmp
(bad)
inc
mov
mov
ja
and
bound
xchg
fs
push
outs
inc
xor
retf
scas
mov
jmp
or
and
inc
stos
sbb
xchg
mov
mov
xlat
push
(bad)
adc
adc
cmp
jo
fstp
lods
out
xlat
ret
mov
inc
std
xlat
cmp
sub
enter
stc
das
jbe
adc
sub
aaa
inc
pop
jns
and
dec
cmp
icebp
or
cmp
jns
mov
fs
and
cwde
cmp
pop
and
inc
xchg
sub
inc
or
ins
mov
sub
mov
xor
leave
mov
jle
adc
push
inc
aad
sti
repnz
je
push
call
lods
loope
mov
cmp
mov
sub
lods
in
xor
retf
inc
icebp
sub
call
repz
dec
and
sahf
fisttp
cmc
mov
imul
ret
mov
sub
pop
adc
push
shl
mov
mov
mov
cmps
and
and
repz
and
adc
fsub
sbb
(bad)
or
idiv
test
stos
and
pop
push
bound
ds
sbb
sub
xchg
ins
scas
out
xor
mov
push
jle
enter
mov
xlat
push
mov
jo
or
sbb
jb
mov
scas
add
sbb
pop
enter
adc
ins
leave
xchg
call
popf
shr
cmp
inc
aaa
ds
jle
push
cmps
cmps
and
daa
ins
scas
mov
enter
jnp
add
push
ja
les
jb
ret
shl
rcr
dec
inc
xchg
daa
idiv
pop
retf
das
outs
adc
jno
and
mov
inc
pusha
(bad)
jns
sub
xchg
jb
xor
call
(bad)
cmp
mov
cwde
adc
xor
cs
jo
clc
jl
jmp
cli
stc
sub
movs
int3
mov
or
jb
outs
loope
push
test
push
sbb
iret
in
jle
int
ror
jb
repnz
gs
cli
rol
cmp
jo
and
adc
sub
mov
pop
mov
scas
imul
adc
fcomp
div
xchg
icebp
popaw
sub
movs
mov
push
cmp
popa
cdq
lock
aas
ss
nop
pop
sbb
je
leave
sub
or
adc
(bad)
not
dec
xchg
xchg
jns
jge
addr16
xchg
jnp
(bad)
mov
retf
adc
push
popf
inc
mov
mov
add
rol
popa
fisttp
dec
and
mov
out
mov
(bad)
out
dec
or
dec
xchg
loope
push
inc
mov
mov
inc
(bad)
mov
mov
dec
(bad)
movs
inc
mov
aam
scas
outs
into
dec
inc
psubusw
je
sbb
mov
sub
xchg
cmp
rol
rcr
pop
mov
mov
cmc
out
add
mov
in
jge
mov
mov
sbb
xchg
test
ror
or
lods
pop
pop
gs
jnp
jg
sub
cmc
les
xchg
loopne
or
push
test
mov
mov
cmp
or
push
inc
movs
jns
sbb
xor
rcl
js
sbb
sub
adc
push
xchg
mov
cli
push
in
jne
scas
or
mov
mov
mov
fwait
or
pop
mov
xlat
retf
jnp
je
xchg
pop
js
and
and
loop
mov
jns
xchg
pop
dec
in
stc
push
lahf
jge
push
imul
add
xchg
test
push
or
(bad)
data16
and
popf
mov
cld
shl
jo
add
call
cwde
test
xlat
in
inc
retf
cld
repnz
call
and
inc
data16
lods
call
jge
or
xlat
movs
cmp
sti
imul
mov
mov
arpl
js
and
out
and
retf
pop
push
adc
mov
pop
push
mov
sub
add
test
jg
icebp
sub
mov
das
cmp
lahf
into
ins
add
ins
dec
mov
pop
mov
jecxz
mov
shl
add
and
ret
add
aas
jnp
fldcw
into
mov
sbb
push
or
out
dec
lods
pop
pop
fistp
mov
sub
and
fmul
mov
push
mov
dec
mov
movs
mov
(bad)
push
adc
scas
jbe
mov
mov
imul
pop
lods
sbb
out
cmps
jns
arpl
dec
sub
adc
cs
loope
es
popf
and
xchg
and
lds
pop
fsubp
shl
add
sti
movs
repnz
std
xor
cmc
(bad)
inc
mov
inc
or
out
adc
or
xchg
add
mov
fsub
add
xchg
aaa
or
outs
jl
test
call
rcl
mov
cmp
repz
out
xor
adc
jmp
add
mov
pop
inc
and
adc
cmp
push
call
ret
call
pop
or
mov
pop
lods
push
arpl
xor
pop
test
xchg
xor
(bad)
fistp
scas
sbb
mov
pop
inc
cld
jnp
and
push
and
enter
test
cmps
dec
jg
sbb
fldcw
test
sub
repz
inc
and
retf
jecxz
inc
rol
inc
ds
cmc
adc
mov
loope
pop
cdq
mov
push
sbb
pop
lahf
test
lock
dec
dec
jne
adc
adc
xor
int
xchg
inc
sbb
mov
cli
shl
and
pop
sbb
cs
sti
das
jae
add
pop
jmp
pop
imul
add
icebp
jmp
dec
mov
les
dec
es
lods
mov
mov
xchg
pop
sub
fwait
mov
inc
into
jmp
ins
sub
jne
xchg
and
mov
xchg
jnp
in
xlat
outs
mov
jg
(bad)
push
push
or
test
xor
mov
add
fst
in
add
jg
mov
and
and
popf
ret
(bad)
cli
imul
or
xlat
jo
lock
inc
and
add
jae
jbe
lods
aaa
mov
mov
xor
lods
mov
mov
and
mov
je
pop
mov
ror
jg
mov
pusha
cmc
clc
xor
ins
pop
nop
aad
rcl
inc
adc
call
in
or
xor
jge
add
sub
pop
fist
pop
mov
fstp
sbb
add
cwde
cmps
xor
iret
mov
int3
jmp
mov
push
dec
jno
or
sahf
jmp
in
cwde
inc
loopne
cmp
inc
ret
scas
push
setp
clc
or
or
cld
xchg
xor
aaa
add
mov
fadd
bound
jns
and
jmp
(bad)
lods
mov
inc
das
inc
jns
jmp
scas
xor
and
sbb
xlat
test
arpl
push
push
sahf
cmps
es
test
add
shr
es
fistp
and
jns
outs
xor
movs
call
jl
pop
inc
cmps
pop
daa
fstp
jae
call
imul
jnp
scas
bound
pop
mov
mov
rcl
dec
mov
shr
push
leave
xor
inc
cmp
inc
clc
xchg
cdq
jle
fcom
pop
sbb
fdivr
xchg
mov
inc
adc
pop
test
cmps
out
dec
cmp
mov
mov
adc
mov
dec
les
or
outs
cs
add
sbb
cmp
xor
daa
push
out
out
test
adc
add
out
in
push
cmp
(bad)
cld
iret
das
cmps
mov
jns
lods
adc
cmp
or
retf
mov
cmps
mov
shl
ret
mov
aam
inc
mov
shr
cmp
pop
pop
in
sbb
jecxz
out
sub
sbb
fdiv
jmp
(bad)
(bad)
xchg
int3
push
cmc
popf
or
mov
mov
ds
mov
mov
call
cmp
hlt
sbb
mov
ss
jge
cs
mov
mov
aam
fs
retf
sub
and
cwde
jmp
out
add
sbb
mov
pop
mov
retf
adc
cdq
sub
dec
adc
push
mov
fwait
pop
add
outs
ss
pop
sbb
(bad)
cmp
mov
fisttp
pop
and
imul
or
fimul
cmp
mov
aas
inc
jb
and
movs
xchg
cdq
aas
aas
xchg
cmp
cmp
std
rol
mov
popa
sbb
dec
idiv
jo
add
jl
pop
shl
mov
jno
or
sbb
pop
jge
push
test
iret
fwait
div
push
jmp
add
jo
(bad)
adc
jnp
jb
mov
push
mov
push
add
adc
int
aam
je
popf
popf
test
mov
je
out
mov
push
addr16
cdq
dec
adc
jge
mov
les
push
mov
daa
mov
add
int3
xor
les
daa
sbb
repnz
jge
popf
push
dec
jl
and
xchg
sahf
fcmovnu
add
into
pop
test
xchg
sub
rcl
mov
sti
sub
or
mov
push
or
mov
fwait
pop
dec
out
sub
add
stos
mov
pop
xor
outs
pop
int
and
mov
les
jmp
mov
mov
enter
push
retf
mov
jle
mov
ss
rcr
(bad)
push
outs
add
sbb
jb
xchg
mov
mov
cmp
inc
mov
mov
push
shl
jecxz
mov
or
(bad)
mov
dec
jo
inc
mov
jge
mov
dec
jns
shr
arpl
cmp
xor
xor
xchg
jno
pop
or
adc
cmp
xchg
push
pop
jae
pop
outs
cmps
arpl
mov
mov
ja
adc
sub
test
sbb
mov
mov
sbb
push
cmc
push
pop
inc
je
adc
mov
adc
arpl
xchg
or
in
or
xor
adc
add
mov
pop
add
hlt
dec
mov
push
xchg
pushf
fs
clc
mov
loope
inc
aas
add
dec
and
cli
pop
ret
movs
and
push
push
or
cmps
pop
fdiv
jp
cmp
pushf
mov
loopne
ja
das
jg
inc
fnstsw
arpl
and
bound
mov
xchg
mov
es
cmp
jmp
into
add
mov
inc
repz
xchg
rcl
mov
and
adc
or
scas
pop
xchg
add
or
dec
cmc
div
jne
rol
sbb
test
cmps
xchg
jnp
cdq
vpcmpgtd
xor
push
jne
movs
leave
outs
aaa
iret
test
fisttp
push
mov
jb
sbb
aam
sbb
push
in
retf
sub
pusha
xlat
pop
cmp
sub
jnp
sbb
jle
sub
or
pop
inc
call
je
enter
adc
xor
(bad)
scas
dec
dec
inc
xchg
pop
push
(bad)
sub
ss
xor
mov
test
inc
ja
in
dec
in
mov
repz
and
mov
mov
xchg
mov
mov
or
enter
imul
jns
sub
cmc
ret
or
rcr
pop
inc
shl
dec
sbb
cdq
pop
pushf
xchg
sub
lock
pusha
dec
xor
ret
jbe
pusha
daa
sub
pop
int
sbb
shl
mov
ror
cmp
popa
add
div
dec
xor
mov
or
xchg
pop
imul
repz
pop
and
xchg
(bad)
jmp
es
sti
sbb
pop
int
sub
scas
dec
cld
pop
adc
sti
xchg
stc
sub
inc
mov
sbb
ret
fdiv
or
mov
divps
test
mov
pop
and
mov
rcl
push
jbe
js
idiv
test
adc
inc
in
dec
sub
es
adc
dec
add
mov
cmp
xor
push
call
add
sbb
cmps
dec
jae
int3
ror
gs
and
adc
push
jbe
pushf
add
cmp
inc
sti
aas
scas
push
inc
sar
dec
sub
adc
leave
xor
or
add
fisttp
xchg
shr
sbb
inc
jp
add
js
test
mov
push
std
(bad)
test
xchg
ds
add
cli
pop
mov
mov
inc
add
iret
xor
mov
mov
std
retf
jmp
test
ins
ds
xchg
stos
adc
test
rol
xchg
mov
lea
sar
pop
icebp
scas
and
pop
stc
ins
sub
ret
test
add
fnstenv
mov
iret
pop
mov
mov
fdiv
pop
xchg
or
in
ds
xor
pushf
xchg
sub
rcr
fdivr
or
ror
ret
or
in
sub
rcl
fdivr
and
adc
pop
ds
adc
(bad)
pop
pop
ins
jge
mov
sahf
sti
lock
push
popa
cmp
jp
cmp
push
pop
sahf
in
and
aas
es
outs
or
cmps
push
ficomp
imul
movs
and
gs
add
fcomp
imul
test
lahf
pop
mov
ret
cmc
call
xchg
xchg
sub
sbb
mov
icebp
adc
bound
(bad)
cwde
lock
ds
jle
pop
hlt
or
retf
adc
out
jg
mov
sbb
mov
dec
rcl
xor
jo
lods
retf
bound
ret
mov
lds
jae
pop
(bad)
addr16
lods
adc
cli
sbb
mov
adc
sbb
cli
xor
fnstcw
xlat
sbb
clc
mov
adc
xor
add
std
mov
xchg
adc
stos
ror
mov
mov
das
ins
scas
and
fistp
or
adc
(bad)
fsub
push
pop
jmp
and
mov
mov
or
sub
mov
aam
mov
ins
fstp
cmc
ret
dec
mov
ror
aas
pop
dec
add
pop
loope
adc
retf
shl
inc
fwait
adc
(bad)
mov
inc
push
xor
gs
fild
nop
aad
mov
or
inc
sbb
mov
adc
lahf
push
or
imul
dec
daa
in
jg
lahf
and
pop
lock
fsubr
cmovbe
jecxz
ja
and
cmp
(bad)
jl
or
in
mov
sub
pop
and
dec
retf
xchg
inc
jle
pop
dec
inc
and
cmps
or
adc
popf
sbb
fsubr
addr16
in
dec
aaa
int3
xor
or
fwait
inc
mov
movs
test
dec
xor
rol
aad
fs
aam
dec
fiadd
sub
gs
mov
push
in
test
jns
jo
jne
or
cld
cwde
dec
pop
sar
inc
hlt
iret
cmps
cmp
mov
xchg
push
inc
out
sbb
out
fistp
sub
rcr
stos
arpl
int
jmp
cld
mov
sbb
cmp
sub
fsub
and
fsqrt
cmp
stos
icebp
das
les
sub
add
pop
adc
and
push
and
and
or
ins
or
mov
cmp
arpl
out
leave
pop
rcl
ins
cdq
les
repz
gs
mov
inc
cmp
mov
popa
cdq
inc
mov
(bad)
loope
out
jl
(bad)
in
arpl
sbb
dec
pop
push
cmc
xchg
das
sub
retf
retf
adc
mov
push
test
fadd
and
call
test
mov
cli
lods
add
repnz
enter
jg
add
or
mov
pop
cmp
je
unpcklps
mov
rcr
pop
cwde
je
and
mov
adc
retf
test
test
rep
jmp
mov
mov
cmovg
push
mov
cmp
js
pop
xor
(bad)
call
lea
adc
lods
sub
pop
pop
inc
pop
adc
shl
push
iret
dec
shl
mov
scas
jb
fistp
not
bound
mov
cmps
(bad)
mov
(bad)
dec
gs
ds
push
movs
jnp
in
es
movs
cmp
imul
inc
int
mov
dec
and
jnp
imul
xchg
jl
ja
dec
lahf
dec
call
out
retf
and
push
and
push
int
(bad)
imul
xchg
add
and
sbb
imul
sub
pop
(bad)
fwait
adc
iret
inc
rcl
jge
inc
imul
xchg
(bad)
ret
xchg
mov
aad
mov
jns
and
xchg
loopne
movs
add
cli
pop
jecxz
sub
mov
xlat
lods
mov
(bad)
sbb
ds
imul
imul
push
arpl
fs
out
mov
rol
cmp
fimul
movs
or
pop
cmp
and
mov
out
pop
mov
jns
jp
or
call
scas
and
jmp
retf
mov
jmp
hlt
cli
sbb
js
retf
mov
push
jecxz
fild
and
sub
dec
sar
sar
mov
add
xor
ss
xchg
shr
xchg
push
mov
mov
mov
mov
fs
mov
stc
cld
in
mov
adc
xlat
xchg
cmps
add
inc
mov
xchg
push
mov
hlt
sub
repnz
cmp
cmp
pop
arpl
arpl
test
or
xchg
dec
stos
outs
fistp
xchg
sub
ret
ror
out
sahf
bound
jmp
add
sbb
pop
add
xchg
mov
xchg
ror
lea
dec
mov
xchg
int3
mov
aaa
xchg
xchg
inc
sub
inc
jo
and
mov
aad
lgs
cpuid
push
or
out
ds
xor
inc
aad
push
sahf
ins
cmp
or
test
arpl
xchg
jae
sub
adc
repz
xor
sti
cmps
retf
inc
fmul
fs
hlt
cmp
cmps
dec
and
out
mov
imul
lods
enter
xchg
sub
repz
out
dec
push
mov
jmp
sbb
hlt
and
cmps
bound
xchg
imul
sub
inc
mov
xchg
pop
test
xchg
mov
loop
loopne
mov
or
add
pusha
les
sar
and
loope
cmp
inc
int
ins
pop
push
cdq
fimul
clc
cld
out
loopne
xor
adc
push
(bad)
pop
xlat
push
mov
gs
shl
jno
xchg
cld
into
es
xor
adc
(bad)
mov
jno
mov
repz
lahf
or
jmp
les
push
xor
pop
pusha
pop
aaa
adc
adc
cmp
sub
lea
test
aad
sbb
ja
dec
xchg
in
mov
sti
test
(bad)
push
adc
xchg
cmp
clc
mov
pusha
nop
call
in
aaa
pop
cmc
das
jge
loop
inc
adc
sbb
or
sub
div
les
dec
stos
cmp
fs
ror
imul
loop
lahf
mov
out
pop
push
xor
xor
es
dec
loope
std
cmp
push
fs
std
pop
dec
and
xchg
bound
ds
mov
sti
xor
bound
test
ins
mov
add
or
sbb
mov
idiv
repnz
cmp
mov
call
retf
pop
push
xor
cmps
cwde
fnstenv
mov
mov
mov
xor
shr
jp
fcomp
or
enter
or
pop
and
adc
fmul
jp
add
aam
je
add
or
sub
and
arpl
(bad)
jge
inc
mov
cmp
aaa
sub
scas
adc
jmp
mov
mov
stos
inc
iret
shr
sbb
dec
bound
imul
addr16
jecxz
fucomp
mov
mov
ds
mov
fs
mov
pop
dec
push
dec
jmp
pusha
ins
pop
icebp
shl
ret
nop
stos
sbb
aas
mov
es
je
push
push
push
mov
and
push
outs
or
test
mov
jge
cmp
sub
test
repnz
or
out
add
mov
mov
fimul
jbe
cmc
clc
mov
sbb
mov
(bad)
jnp
pop
ins
das
sahf
jmp
fistp
lods
inc
add
enter
fist
mov
pop
aad
inc
fidivr
jne
jnp
mov
push
pushf
mov
push
and
jg
mov
pop
(bad)
ins
xchg
test
das
ins
lea
out
or
dec
jnp
fistp
retf
inc
out
fmul
ds
mov
in
xchg
mov
repz
aam
sbb
push
pushf
mov
jbe
inc
and
pop
mov
ror
dec
rol
mov
fstp
icebp
repnz
int
test
inc
(bad)
sbb
or
leave
shl
mov
repnz
cmc
mov
pusha
jmp
xor
fwait
js
pop
int3
nop
cs
outs
ins
subps
cwde
sbb
ret
stc
mov
mov
call
je
adc
xlat
dec
or
cmp
dec
xchg
les
adc
sbb
adc
fisttp
xchg
aaa
pop
out
ret
adc
sahf
sub
jae
dec
adc
daa
mov
jae
test
mov
pop
imul
lahf
es
xchg
aaa
ja
and
icebp
push
loopne
push
sbb
retf
jecxz
xor
sahf
aas
mov
cmp
cwde
or
push
popa
add
jnp
or
div
jmp
dec
icebp
inc
enter
push
sbb
repz
aas
mov
rcr
psrlw
mov
sbb
pop
and
cmc
out
repz
xchg
xchg
loopne
out
add
(bad)
retf
mov
lods
xor
sub
fs
hlt
sub
sbb
cmp
sbb
aad
repnz
adc
sar
outs
ja
shl
ins
add
loope
mov
vpmaxsw
jae
add
mov
jmp
add
arpl
sbb
mov
or
imul
aad
mov
or
bound
mov
bound
and
and
imul
int3
xor
fwait
xor
fsub
inc
cld
and
cmp
data16
add
neg
stos
pop
es
sub
mov
cmp
ins
inc
adc
test
sub
mov
inc
shl
pop
lods
iret
adc
cmps
popa
fisttp
sbb
push
xchg
jge
cmp
xor
cmp
jo
fnstenv
das
dec
cmp
push
fstp
dec
inc
cwde
lods
xor
cmp
lods
xchg
aas
adc
mov
(bad)
lock
nop
push
lock
sbb
sbb
hlt
mov
mov
test
push
add
outs
pop
xor
pop
aad
cld
mov
adc
mov
addr16
inc
repnz
xor
xchg
call
bound
loop
ss
mov
in
gs
xor
adc
out
dec
test
sub
xchg
dec
sbb
lock
ror
cmp
mov
xor
mov
inc
inc
shr
mov
dec
push
loope
pop
dec
dec
ins
dec
jmp
or
or
movs
mov
ret
jno
push
sub
pop
mov
in
or
fbstp
imul
aaa
hlt
adc
pop
mov
add
imul
xlat
lea
sbb
scas
jbe
push
in
push
loopne
aad
mov
and
movs
cmp
ss
repz
dec
cwde
pop
push
xchg
sbb
sub
mov
jl
jb
sub
clc
jmp
loope
sbb
js
lds
mov
push
retf
sbb
mov
push
in
xchg
xchg
pop
nop
fisubr
jg
add
push
mov
mov
mov
inc
inc
mov
mov
dec
cmp
out
sub
mov
enter
dec
xor
(bad)
mov
push
loope
jge
xchg
fucomp
enter
lock
(bad)
jmp
jmp
push
jmp
xchg
pop
ss
cli
in
jnp
xchg
and
popa
mov
into
push
je
jne
or
xchg
shl
mov
jo
arpl
mov
cmp
int3
aad
fnstcw
jnp
mov
and
retf
sbb
mov
nop
jae
leave
mov
ins
ja
fwait
push
jmp
sub
rcl
ins
pop
or
pop
sbb
iret
pop
cmp
out
sub
aam
mov
pushf
enter
and
mov
mov
xchg
xor
loopne
jge
inc
stc
xchg
push
inc
xchg
xor
jg
sbb
loop
shl
mov
xchg
lahf
inc
jb
retf
sar
leave
jecxz
sub
add
pop
cmp
jo
add
sbb
xor
fcmovnb
push
mov
rcr
xor
add
adc
jns
jl
jno
push
add
push
pop
rcr
jl
addr16
mov
or
xchg
jmp
lds
push
(bad)
bnd
cmp
outs
jmp
out
mov
shl
jno
and
pop
bound
inc
scas
pop
jns
stos
imul
push
xchg
mov
mov
xor
mov
rcr
jnp
pop
sub
mov
push
out
jbe
inc
push
iret
dec
in
push
sahf
(bad)
inc
ins
jae
mov
xor
inc
test
xchg
cwde
jae
cwde
icebp
inc
mov
pop
sbb
pop
inc
mov
jbe
push
mov
mov
pop
and
xchg
mov
imul
jl
dec
in
cmovns
jmp
and
pusha
or
push
test
adc
mov
mov
jg
and
push
in
jmp
out
jmp
ror
sub
add
test
adc
push
fadd
add
das
mov
aaa
jmp
ret
in
mov
xchg
mov
jnp
inc
mov
std
leave
pop
dec
outs
(bad)
in
arpl
(bad)
jno
in
nop
jns
jnp
stos
or
push
push
push
mov
call
xor
adc
add
bound
out
cli
call
mov
xchg
popa
push
leave
dec
or
or
fwait
int3
ds
xor
mov
push
(bad)
adc
push
pop
push
adc
dec
ins
jmp
je
jl
mov
mov
(bad)
adc
mov
(bad)
xor
and
sub
sub
xor
or
arpl
push
arpl
stos
push
stos
test
pop
add
out
fwait
lea
jae
pushf
jmp
or
aam
(bad)
movs
add
imul
(bad)
not
mov
out
push
jp
add
sbb
dec
les
push
inc
cmp
out
jb
retf
mov
xor
sub
inc
out
call
adc
cwde
cmps
push
mov
shl
adc
and
retf
je
and
fnop
cmps
movs
in
mov
cmp
(bad)
jmp
mov
imul
push
and
aad
mov
(bad)
rcl
sub
add
xor
jno
test
jmp
mov
fcom
push
pop
stc
test
sahf
out
idiv
cld
lock
push
(bad)
cmp
and
pop
sub
scas
leave
add
push
cli
add
fisubr
cld
dec
stos
icebp
sub
dec
dec
adc
loopne
rcl
leave
pop
cdq
add
scas
adc
leave
out
xor
outs
sbb
jle
mov
mov
aas
fidiv
mov
sbb
pop
cmps
das
inc
jle
fcomp
jl
mov
outs
sub
test
arpl
sbb
stos
push
mov
sbb
int3
cmps
pop
lods
out
xchg
jns
loopne
int3
mov
outs
sub
cmp
gs
and
mov
fstp
test
push
inc
addr16
pop
fstp
stos
inc
adc
xchg
xchg
leave
or
out
push
cmp
push
rol
test
and
or
fwait
ds
leave
sub
aad
(bad)
xchg
out
pop
sub
add
es
xchg
je
outs
dec
addr16
pushf
das
popa
adc
xlat
out
retf
rol
cmps
jne
lock
add
test
xchg
retf
mov
loop
push
out
adc
das
mov
fsub
pop
cmc
in
pushf
jmp
push
cwde
push
mov
inc
pushf
imul
retf
ds
shr
or
sbb
adc
test
jecxz
xor
out
cld
in
inc
mov
cmc
pop
mov
xchg
rcl
inc
ret
mov
bnd
mov
mov
pop
or
hlt
mov
call
cmp
gs
scas
inc
inc
mov
and
loop
adc
mov
repnz
movs
popa
or
mov
shl
imul
int
pop
add
aas
mov
adc
ss
xor
adc
cli
or
jecxz
inc
sti
cmp
retf
mov
aad
mov
pop
fistp
sti
mov
(bad)
rcl
sub
jl
dec
cs
daa
ret
dec
inc
jle
enter
sar
push
fsubr
mov
inc
(bad)
push
inc
dec
sbb
dec
mov
iret
xchg
ins
push
daa
sbb
pop
ss
nop
sub
sti
ds
test
in
and
inc
sbb
pop
pop
ret
lods
shl
or
pusha
(bad)
neg
pop
jg
shl
retf
or
js
shl
xor
fwait
les
dec
xor
pop
sbb
xor
inc
mov
cld
push
neg
rcr
std
cmp
nop
mov
outs
jnp
shl
nop
bound
or
lds
pop
jne
in
ins
enter
jp
xor
or
es
popa
add
pop
mov
push
add
fbstp
test
sbb
repnz
mov
call
leave
out
sub
fcomp
jno
dec
and
inc
adc
sbb
and
out
jo
lea
scas
cmp
mov
lahf
sbb
sbb
in
iret
xchg
pop
pop
cmp
sbb
jmp
inc
repz
lock
inc
int
dec
popa
movs
mov
or
loop
jg
into
loopne
or
and
xchg
je
xor
in
xchg
loopne
mov
sub
sub
in
les
(bad)
test
ds
ins
stos
aas
(bad)
cdq
lahf
pop
repz
jp
xchg
std
fistp
int
mov
sub
ret
sti
in
pop
ja
mov
popa
loopne
mov
outs
das
add
or
ret
rcl
fist
sub
pusha
mov
(bad)
push
mov
jecxz
sbb
add
aad
ror
add
sbb
mul
cmp
jecxz
jl
test
ja
pop
test
dec
cmc
or
push
loop
pop
dec
add
xor
(bad)
cmp
mov
cmp
mov
pushf
test
sbb
xor
push
outs
fadd
lea
xchg
sub
call
fbstp
ss
and
mov
and
mov
icebp
mov
mov
or
bnd
pop
pop
mov
jne
jecxz
in
call
shl
pop
mul
and
inc
dec
icebp
retf
icebp
xlat
add
push
mov
jno
xchg
adc
and
mov
sub
std
inc
or
dec
jmp
scas
(bad)
stos
shl
adc
jne
and
and
inc
mov
fimul
sub
mov
jne
int
mov
push
sbb
and
sub
cmp
push
inc
dec
pop
sub
adc
add
mov
ins
pop
jl
in
mov
retf
push
popa
push
mov
mov
retf
mov
jge
jae
fnsave
ret
out
cmp
add
fdivr
jmp
fdiv
rcl
mov
or
xchg
mov
cmp
sub
xchg
inc
xor
gs
dec
fimul
gs
sub
push
inc
push
bound
mov
js
and
mov
fild
es
sbb
mov
jo
push
fwait
dec
pop
stc
add
outs
sahf
sbb
jnp
cmp
arpl
inc
in
imul
lahf
je
and
xor
jae
push
jbe
or
push
adc
jb
int
or
cwde
fdiv
(bad)
or
inc
sti
push
ret
ins
push
adc
mov
push
xor
mov
adc
popf
rcr
pop
das
inc
mov
mov
mov
icebp
int
sbb
and
ss
dec
imul
movs
test
cs
out
in
cmp
or
xchg
test
and
pop
popa
sub
sbb
mov
scas
and
scas
sahf
int
ss
out
cmp
test
pop
inc
stc
pop
inc
repnz
jecxz
mov
in
push
sub
lock
fiadd
push
hlt
or
xor
xlat
pushf
ins
pop
mov
inc
cmp
xor
repz
cmp
ror
jno
mov
or
mov
stos
inc
lods
add
mov
adc
xchg
cdq
pusha
or
mov
arpl
into
in
xor
jbe
stos
dec
(bad)
jge
dec
cmp
test
and
xlat
add
fucom
ret
rol
mov
pop
jo
lods
jne
dec
int
es
cmp
mov
lahf
dec
cmp
xor
out
test
mov
add
mov
out
stos
mov
pop
scas
int
in
lea
bound
test
repnz
adc
mov
int3
push
cli
jge
adc
fld
mov
xor
shl
jbe
adc
and
repz
inc
jae
dec
int3
push
dec
inc
cmp
lds
add
adc
mov
inc
fcomp
cli
xchg
outs
mov
addr16
int
or
je
pop
mov
retf
sbb
sbb
mov
mov
jge
xchg
add
aaa
data16
jne
test
movs
sbb
shl
fild
fwait
xchg
jnp
pushf
sbb
or
gs
pusha
std
sbb
cmps
addr16
xchg
pop
stos
(bad)
cmp
popf
push
imul
and
dec
enter
sbb
inc
bound
ins
clc
adc
repnz
in
sbb
cli
int
adc
(bad)
mov
xchg
mov
inc
or
retf
or
retf
jmp
sub
enter
sar
push
rcr
fabs
jle
leave
ret
shl
xchg
mov
pop
mov
mov
inc
and
or
add
mov
cmc
lods
(bad)
in
imul
fsubr
mov
xchg
clc
sar
cld
js
pop
or
rcr
sahf
push
mov
mov
cli
(bad)
cld
push
push
pop
xchg
xor
jo
sbb
push
and
mov
push
sbb
inc
jnp
data16
pop
mov
icebp
cmp
cmp
pushf
jo
shl
repz
aas
test
pushf
push
inc
pusha
(bad)
fwait
xchg
in
stos
and
push
stos
push
xor
and
test
pop
pop
and
aam
les
sub
ror
(bad)
inc
or
jb
cmps
xor
pop
into
push
movs
cmp
rol
test
shl
fiadd
dec
add
dec
popfw
cmp
enter
(bad)
and
mov
jae
imul
ins
xchg
xchg
jmp
out
ins
cwde
fdivr
jo
(bad)
clc
jb
sub
sub
sub
iret
push
xchg
fst
and
fsubr
push
hlt
dec
loop
adc
ss
aad
and
inc
fcmovnb
cld
mov
sti
xlat
mov
stos
mov
aam
push
xchg
ins
xor
mov
movs
sahf
jmp
int3
mov
(bad)
mov
push
rol
mov
pop
dec
(bad)
sbb
daa
ret
mov
cmp
jnp
xchg
push
mov
push
outs
ins
sub
pop
(bad)
adc
in
cmp
dec
push
dec
test
xchg
push
push
(bad)
push
das
lods
inc
ins
pop
pop
rcr
pop
push
add
sub
adc
addr16
push
xchg
lds
mov
sahf
lods
rol
outs
(bad)
fwait
inc
int3
and
ret
mov
sbb
mov
fwait
lods
cmps
cmp
jnp
inc
test
scas
hlt
pop
int
sub
das
add
imul
jmp
out
in
xor
pop
adc
push
lods
addr16
cmp
ror
ret
fucomi
call
pop
jae
cmp
and
mov
jg
mov
retf
or
push
xlat
xchg
scas
mov
add
dec
mov
fsub
jle
xchg
dec
jbe
pop
cmp
std
loop
dec
and
mov
ficomp
cmp
and
and
and
sub
pop
nop
mov
(bad)
pop
pop
iret
dec
pop
sub
test
stos
gs
or
and
test
lods
jmp
inc
push
cmp
jmp
daa
adc
cmp
mov
cmp
mov
adc
pop
in
pop
ins
mov
mov
or
or
dec
push
scas
pop
loope
ret
inc
cmps
mov
xlat
lea
or
repz
fs
and
outs
(bad)
xor
mov
fild
cdq
cdq
xchg
cld
pop
stos
ss
cld
mov
adc
stc
sub
push
cdq
sbb
sbb
inc
in
dec
jnp
ins
cmp
es
xchg
add
ja
dec
out
ror
rcl
loopne
popa
js
(bad)
in
jae
ficom
jno
lods
(bad)
dec
scas
cld
and
ror
xlat
ud0
mov
sub
sbb
fwait
mov
stos
cmps
lea
add
jmp
push
jl
xchg
mov
adc
aam
pop
push
inc
les
aad
les
sar
pop
and
out
stos
inc
cmp
dec
int3
dec
lds
cmc
clc
jmp
les
adc
xor
xchg
cmps
in
or
mov
ret
addr16
les
das
xchg
adc
mov
push
dec
in
jmp
pop
aam
out
in
in
pop
push
adc
pop
and
lods
mov
sbb
inc
dec
mov
jp
xchg
inc
sbb
sub
es
mov
mov
mov
into
jbe
movs
(bad)
ret
arpl
mov
and
aam
jbe
pusha
mov
cmps
dec
pop
aaa
pop
adc
retf
push
xchg
and
sahf
sti
and
xchg
pop
dec
bound
fisttp
ins
ss
jnp
repz
mov
js
adc
repnz
push
dec
mov
aam
mov
ret
xchg
mov
mov
fisubr
jmp
add
dec
pushf
ins
push
pusha
sahf
xchg
repnz
or
jbe
xor
push
loope
inc
sbb
and
std
movs
test
gs
xor
jb
push
dec
lahf
mov
push
fisub
call
adc
mov
aaa
gs
and
cmp
pop
je
cmp
fcmovbe
dec
mov
fs
sbb
js
lods
ficom
xor
jo
call
sbb
xor
xor
hlt
pusha
jmp
mov
add
gs
adc
dec
in
sbb
xor
adc
mov
add
xchg
push
imul
out
xor
popf
push
loopne
jo
fld
xlat
fild
shrd
xchg
mov
imul
cmp
repnz
inc
ins
repz
xor
xchg
mov
push
ror
sbb
dec
and
and
add
mov
pop
repz
loop
fnstsw
fbld
or
das
xchg
fsubr
aam
popf
push
mov
lahf
nop
mov
cmps
add
pop
mov
sbb
inc
or
mov
retf
mov
sbb
jge
mov
in
sub
and
push
leave
ja
popa
sub
xchg
cli
pop
outs
sbb
or
lds
mov
mov
and
mov
pop
xchg
mov
jl
leave
mov
jbe
xor
sbb
push
sub
and
in
std
aam
out
jecxz
xchg
mov
loop
retf
jmp
jmp
fidiv
push
sbb
sbb
iret
(bad)
icebp
ja
add
pop
sub
in
aas
cmp
fs
push
or
ja
and
cmp
mov
or
loope
or
stc
inc
push
ret
mov
dec
and
mov
std
inc
and
rcl
sub
push
push
outs
push
adc
cmp
lea
xchg
jp
stc
jg
sbb
mov
dec
push
sti
div
repnz
dec
loopne
ret
cmp
add
jno
adc
xchg
cld
outs
mov
add
jae
ins
and
adc
xor
out
xchg
push
pusha
jmp
xchg
stos
mov
mov
aam
popa
in
pusha
and
dec
push
dec
or
sub
pop
stc
xor
xchg
cmp
dec
mov
mov
push
mov
mov
xor
das
std
pop
outs
cmp
nop
bound
mov
in
cli
mov
(bad)
mov
aaa
sub
jg
pushf
(bad)
call
and
or
sbb
push
out
fs
(bad)
hlt
mov
test
push
dec
scas
adc
mov
sub
jg
leave
fmul
daa
loope
repnz
or
stos
adc
push
pop
and
jae
or
mov
push
xor
or
dec
cwde
push
push
repz
inc
mov
xchg
mov
out
cld
pcmpeqw
and
xor
imul
repz
(bad)
mov
js
lds
hlt
sbb
sbb
push
xor
or
lea
jp
jno
leave
xlat
jne
loope
in
dec
cld
mov
test
repnz
cmp
mov
mov
adc
ins
pop
pop
or
jno
jl
rcl
loopne
(bad)
loopne
lahf
fsub
xor
and
xchg
mov
pop
nop
add
mov
sbb
bound
ror
xchg
jg
dec
lahf
dec
icebp
cwde
in
outs
outs
mov
mov
jb
sbb
(bad)
inc
(bad)
ss
sbb
jb
iret
mov
xlat
(bad)
push
icebp
fidivr
push
aaa
cwde
mov
in
xlat
mov
sbb
jle
mov
bound
sbb
mov
push
xor
sub
fucom
aam
in
mov
jae
int
movs
pop
push
shr
mov
pop
mov
and
xchg
xor
daa
imul
pop
ins
stos
sub
test
cmp
repz
adc
movs
shl
and
fdiv
or
jp
in
mov
pop
(bad)
fadd
fcmovnb
ins
jge
lock
(bad)
fst
mov
loopne
test
pop
or
mov
int3
mov
sbb
mov
mov
and
pop
push
jmp
xor
push
sbb
(bad)
jmp
push
rcl
mov
into
xchg
jmp
push
xor
(bad)
loopne
sub
outs
(bad)
mov
sbb
popa
cdq
or
fldenv
out
xor
(bad)
mov
scas
mov
mov
js
pop
adc
inc
into
pop
push
sti
lock
lds
mov
cli
jmp
loopne
loope
jl
xchg
(bad)
mov
retf
cwde
test
and
(bad)
imul
movs
lahf
dec
or
sub
jp
cmp
mov
ficom
in
lds
lods
inc
mov
dec
push
push
jecxz
into
pop
jno
fsub
push
das
push
shr
push
mov
push
inc
push
and
jge
movs
add
push
push
xor
push
xor
popa
xchg
fnstsw
cmps
or
lock
add
mov
and
(bad)
xchg
mov
lods
cmp
pop
jbe
gs
push
repnz
sbb
fcom
movs
jmp
rcl
nop
retf
frstor
js
mov
pop
aad
enter
lods
dec
jmp
adc
adc
or
sar
sbb
into
into
stos
(bad)
mov
add
or
mov
cdq
outs
mov
call
adc
xor
out
and
ins
or
je
sbb
dec
jmp
push
ret
scas
push
mov
sub
mov
add
sub
movs
or
es
call
shl
movs
sbb
sub
adc
inc
movs
inc
aaa
cmp
sbb
loop
mov
mov
std
int3
adc
adc
je
mov
int3
jmp
xor
add
scas
cld
add
addr16
adc
mov
inc
retf
pop
(bad)
mov
je
pop
iret
jmp
out
fdivr
out
aam
inc
movs
mov
jl
test
sub
pop
cmp
mov
or
dec
shl
sbb
mov
das
pusha
jmp
ret
inc
das
das
xchg
jmp
or
in
out
ins
hlt
lahf
hlt
pop
loope
xchg
loop
xchg
sub
popa
push
mov
push
pusha
sbb
jle
ins
into
or
or
xchg
retf
xor
and
jmp
cmp
not
and
or
mov
add
add
je
sbb
test
(bad)
das
pop
mov
cmp
inc
mov
out
pop
add
cmp
adc
sub
iret
arpl
dec
adc
adc
dec
add
push
push
scas
or
sar
(bad)
call
test
xchg
and
mov
pop
aam
shr
pop
and
push
rcl
in
scas
fucomip
jmp
cmc
shl
outs
or
and
pop
je
inc
cmps
mov
mov
jge
mov
sbb
inc
or
outs
adc
dec
jne
add
or
iret
mov
inc
sbb
int
sbb
adc
mov
aam
xor
pop
ja
cmp
or
add
jbe
dec
or
xor
xor
xchg
xchg
xchg
mov
(bad)
pop
xchg
fild
scas
mul
shl
push
loopne
sub
jae
rcr
adc
jnp
xor
jmp
sbb
in
loope
sub
jae
push
add
mov
cmc
mov
ss
fbstp
pop
adc
imul
xlat
mov
aam
out
push
xchg
aas
outs
and
mov
in
cwde
dec
dec
sbb
div
pop
xor
fist
jne
ins
ins
adc
xor
cmps
pop
cmps
cmp
nop
sbb
mov
xchg
mov
pop
fsub
sbb
jmp
mov
sub
adc
std
aaa
pusha
jle
inc
jp
fidivr
pop
arpl
add
lahf
xchg
jbe
mov
mov
cmps
(bad)
xor
cmp
cmp
ja
jl
sbb
sbb
xor
mov
fstp
mov
xor
jl
test
add
loopne
cs
cmc
test
xchg
push
rol
mov
mov
mov
fcmove
sbb
aam
fisttp
test
int
(bad)
xchg
aam
movs
clc
lea
outs
mov
xor
sub
jmp
cmp
jle
mov
pop
int3
in
mov
ret
lods
lahf
jo
cmp
mov
imul
pusha
push
inc
mov
and
cmc
pusha
(bad)
jo
mov
jmp
mov
inc
pop
push
inc
adc
(bad)
stos
push
call
sgdtd
(bad)
mov
xor
push
mov
and
imul
sti
pop
mov
xlat
xchg
test
aas
lods
repz
push
sub
sbb
sbb
adc
out
sbb
push
fcomp
aam
pop
movs
mov
lods
into
jp
inc
xchg
xor
mov
add
mov
or
out
push
hlt
dec
push
jae
idiv
push
dec
xchg
xor
out
pop
cwde
out
inc
je
mov
xchg
mov
add
sbb
ins
xchg
lods
fild
cmp
sbb
icebp
push
repnz
ins
jne
addr16
cld
rcr
(bad)
mov
ins
inc
adc
fcomp
fld
jmp
jl
mov
xchg
cmp
fiadd
std
push
mov
ror
test
sub
cmp
push
(bad)
pop
cld
add
pop
and
ins
mov
fs
pushf
sub
pop
xor
adc
call
mov
mov
das
adc
inc
push
mov
call
pop
jne
cmp
scas
sub
dec
xor
ret
mov
sbb
or
inc
push
xor
sub
xchg
xchg
mov
jecxz
pusha
cmp
jmp
jne
(bad)
pop
adc
(bad)
xchg
cli
ret
push
int
adc
ss
mov
sub
add
pusha
les
ins
mov
movs
loopne
jo
cwde
repz
xchg
add
sub
jp
jmp
in
call
mov
push
inc
jbe
(bad)
cmp
lock
push
and
loop
rol
add
dec
movs
push
push
not
out
push
add
push
cmp
inc
shl
push
push
mov
ret
(bad)
shl
or
into
xor
sbb
sub
retf
retf
and
jg
jecxz
cwde
sub
mov
daa
add
push
jge
sbb
and
xchg
fisttp
or
xor
dec
inc
lds
sub
xor
sbb
xor
jp
das
fimul
gs
and
ret
in
ja
pop
aaa
jnp
lods
(bad)
lock
adc
fstp
cmp
sub
pop
xor
into
sub
jae
mov
cmp
add
push
sti
lods
xchg
xchg
out
mov
and
push
add
test
movs
repz
out
push
push
adc
add
pop
jg
pusha
push
pop
mov
pop
loope
(bad)
(bad)
or
mov
(bad)
loop
sbb
or
sbb
and
add
sbb
pop
dec
mov
mov
xor
xor
pop
shl
mov
je
sub
ss
mov
push
mov
lea
jp
pusha
mov
jmp
jmp
imul
cdq
inc
leave
fild
pop
jmp
pop
add
add
xor
cmp
mov
push
imul
fcom
jecxz
ret
mov
dec
(bad)
xchg
lahf
fisubr
loop
loopne
jae
adc
ss
mov
sub
add
sub
jo
test
mov
cmp
xor
loope
fdiv
jo
lock
jmp
sar
jl
or
jl
mov
push
ror
mov
jno
xchg
clc
sub
shr
es
jo
fs
sub
iret
mov
jno
push
hlt
mov
hlt
or
push
pop
sbb
cmps
and
sbb
loop
loop
sti
movs
jmp
and
xchg
pop
cld
mov
pop
mul
fwait
add
pop
xchg
and
(bad)
sbb
imul
loop
aam
cmp
loope
dec
fsubrp
add
scas
gs
arpl
and
and
xor
outs
std
fs
cmp
push
pop
arpl
dec
in
push
scas
jg
add
mov
ret
xchg
push
out
inc
out
shl
add
cmp
and
or
xor
das
mov
jae
mov
ds
retf
inc
mov
xlat
mov
sub
mov
iret
mov
mov
lahf
aaa
pop
stc
fnsave
xchg
add
mov
(bad)
mov
xlat
pop
dec
shl
test
jo
xchg
popf
pop
dec
jae
adc
(bad)
ficomp
xchg
and
mov
int3
add
sbb
fdivr
lahf
push
mov
inc
mov
movs
sub
jle
adc
sbb
das
imul
out
stos
cmp
sub
cli
inc
in
out
or
jl
retf
fcom
cs
dec
in
iret
adc
mov
pop
in
sub
xchg
jb
xchg
nop
not
inc
out
mov
dec
movs
adc
push
call
or
push
adc
push
lods
or
mov
ins
ins
add
add
stc
push
out
cmp
shl
jnp
jmp
call
sub
into
pop
ja
in
dec
nop
fistp
dec
fnstcw
pop
mov
int
std
iret
lahf
(bad)
nop
pop
jmp
cmc
mov
outs
popa
hlt
imul
pusha
shr
pop
push
xchg
or
jns
(bad)
pop
dec
sbb
mov
sub
jecxz
jge
(bad)
in
push
stc
jp
ficomp
sub
jg
and
retf
inc
imul
cmp
inc
(bad)
repz
push
out
or
das
add
cmp
jmp
mov
and
out
cmp
add
push
ja
repnz
outs
shl
sbb
sub
cmc
lods
inc
imul
call
and
fmul
test
imul
mov
rol
or
fs
retf
pusha
xor
pop
sub
push
nop
pop
mov
stos
cmp
aad
pop
loope
mov
fisttp
sub
loope
cli
(bad)
lock
xchg
add
and
dec
sub
jae
in
loope
(bad)
sbb
sub
pusha
call
cmp
(bad)
sahf
push
lock
pop
push
je
nop
pop
and
cmc
inc
in
push
adc
jo
jno
add
int
jecxz
mov
push
dec
mov
pop
cmp
out
xor
mov
mov
push
pushf
adc
xor
dec
in
das
and
ret
out
movs
out
call
and
mov
push
inc
mov
xchg
add
inc
push
jmp
leave
adc
and
mov
mov
rcr
xor
sub
and
loopne
push
int
out
push
mov
lds
inc
and
hlt
dec
test
xlat
stc
popa
xor
or
xchg
push
push
or
pop
mov
mov
mov
push
jo
iret
push
mov
sar
mov
push
add
jge
sbb
cmp
in
mov
sbb
jnp
call
out
loopne
adc
cmp
arpl
or
shl
or
fild
xor
call
mov
mov
fistp
ja
sbb
pop
jl
mov
and
aad
popf
addr16
(bad)
mov
ret
xor
sar
or
pop
xchg
add
mov
shl
(bad)
dec
sub
mov
xchg
mov
push
out
retf
xor
outs
cmps
inc
out
call
int3
daa
jp
lods
mov
ror
jmp
stos
cmp
rcr
(bad)
cmp
fnstenv
push
or
push
loope
sbb
dec
add
cmp
ret
adc
and
fcom
cdq
mov
jecxz
fdivr
inc
inc
outs
test
sub
(bad)
sbb
adc
jle
popa
dec
in
movs
mov
test
adc
in
mov
add
lock
inc
or
and
clc
mov
dec
rcr
data16
imul
push
stc
cwde
cmps
sub
(bad)
iret
mov
lds
xor
pop
test
jo
push
jg
mov
jg
into
adc
xchg
push
add
adc
lahf
dec
out
ss
xchg
hlt
ret
js
scas
mov
test
imul
enter
mov
mov
dec
pop
pushf
div
mov
push
mov
dec
adc
pusha
in
mov
stos
in
shl
retf
fwait
into
in
pusha
inc
sub
mov
cmp
xor
dec
loopne
or
popa
jl
push
rcr
cmp
lock
fcom
inc
mov
and
sub
mov
shr
out
mov
outs
div
scas
mov
sti
add
xchg
lahf
push
ret
js
pop
jb
mov
jle
addr16
mov
imul
jmp
pop
and
xor
jns
or
inc
xor
loopne
mov
rcl
and
pop
loope
daa
pop
mov
movs
icebp
push
shl
loop
mov
cmp
add
push
mov
shl
jb
dec
dec
(bad)
aas
sbb
ins
mov
xor
int
xchg
adc
sbb
addr16
addr16
cli
loopne
iret
xchg
imul
mov
fild
cmp
shr
loope
popf
loopne
into
pushf
stos
inc
push
pop
aas
movs
shl
out
pop
pop
push
out
stc
dec
fadd
imul
test
xor
jmp
and
jle
xor
and
ds
popa
mov
push
jp
nop
call
ds
jae
mov
pop
add
jle
push
cs
mov
lds
adc
and
push
arpl
sbb
and
ret
dec
or
int
inc
mov
and
and
outs
sub
in
xchg
push
sti
call
add
sbb
jecxz
cmp
cmp
loope
pop
mov
jbe
pushf
sbb
push
mov
push
inc
daa
jne
rcl
push
clc
adc
cmp
mov
(bad)
ror
push
pushf
scas
(bad)
push
aaa
pop
xor
and
sbb
shl
dec
xchg
fld
cwde
pop
sbb
and
mov
jg
jle
xlat
mov
imul
add
pusha
adc
add
mov
pop
sub
mov
fild
pop
or
inc
inc
fistp
adc
pop
fnstsw
scas
ds
xor
mov
cmc
sbb
inc
add
test
loop
adc
lea
push
nop
or
adc
(bad)
ins
jae
cmc
inc
push
mov
test
adc
mov
ret
push
data16
enter
jmp
ret
mov
inc
dec
xchg
cmps
adc
scas
shl
lea
jo
dec
cmp
jmp
xchg
sar
inc
add
inc
mov
sahf
xchg
loop
test
jno
mov
cwde
jl
xor
mov
push
and
jecxz
and
and
sbb
and
lods
outs
inc
sbb
xor
repnz
lock
dec
xor
or
xchg
dec
jg
jmp
outs
adc
ret
sbb
icebp
pop
xchg
inc
sbb
sbb
stos
loopne
mov
fcomp
jge
push
daa
cmp
and
jo
js
xor
or
ret
out
sub
mov
push
(bad)
div
jb
mov
jne
clc
jp
frstor
or
xchg
or
(bad)
and
add
in
lds
xor
sbb
lods
fistp
fxch
sbb
pushf
lahf
push
loopne
inc
int3
movs
xlat
inc
mov
mov
in
cmp
dec
inc
adc
fwait
or
std
mov
inc
mov
dec
loopne
lods
and
imul
gs
es
jmp
jno
fst
call
jecxz
pop
cmps
mov
mov
not
jmp
add
mov
mov
mov
int
mov
mov
lods
ins
sub
jle
scas
or
xchg
dec
ds
fsubr
jle
ja
repz
fwait
inc
cs
lods
fcomip
sbb
inc
ja
mov
mov
mov
dec
adc
sti
xchg
push
ins
sti
sbb
rcr
dec
retf
mov
or
popa
arpl
add
push
aam
mov
dec
aad
mov
sbb
add
ins
(bad)
jl
clc
adc
xchg
movs
mov
xchg
fwait
mov
(bad)
inc
loope
fimul
out
clc
stc
ficomp
adc
cs
rcr
pop
and
sbb
pushf
dec
mov
cmp
retf
cs
cmp
cmps
cmp
mov
hlt
std
and
cmps
mov
or
mov
gs
adc
(bad)
fcom
xchg
sub
shr
retf
mov
repnz
fs
adc
ficom
xchg
shl
dec
fldenv
(bad)
(bad)
lods
cmc
or
icebp
cmps
jae
mul
xchg
sbb
cwde
data16
adc
lock
jg
aad
inc
xor
fdiv
mov
dec
call
sahf
jg
std
loop
(bad)
xor
sbb
lods
adc
aaa
addr16
push
adc
les
mov
inc
sbb
pop
sub
fdivr
dec
test
data16
inc
scas
dec
(bad)
inc
test
inc
cmp
inc
loope
or
inc
mov
ds
mov
dec
jge
idiv
jbe
(bad)
mov
xor
aam
jae
ss
out
in
push
or
mov
inc
add
std
lahf
stc
jo
push
dec
std
add
(bad)
cmps
sbb
push
shl
jo
bound
das
aad
add
inc
(bad)
int3
push
jmp
xor
(bad)
dec
enter
xor
push
in
repnz
clc
mov
cwde
jg
mov
mov
push
adc
sub
(bad)
leave
shl
adc
sbb
mov
cli
or
sbb
ins
ret
popa
icebp
test
rcr
push
rcl
mov
adc
inc
out
push
mov
cmps
jae
scas
(bad)
es
popf
and
loopne
popa
cmp
xor
jb
mov
inc
call
lds
mov
inc
add
fisttp
arpl
cmp
sub
mov
cmp
stos
dec
mov
and
fmul
(bad)
sub
pop
pop
pop
dec
cmovge
mov
pop
cmp
sbb
loope
jnp
jmp
add
push
add
aam
ss
jmp
popfw
sub
fadd
adc
adc
rcl
add
or
mov
jmp
mov
push
daa
cwde
popa
adc
inc
jno
and
push
push
stos
mov
add
add
stc
xor
xor
sbb
add
sbb
add
ja
mov
fstp
call
xchg
(bad)
sbb
mov
mov
loopne
mov
leave
adc
nop
int
fsubrp
fst
test
cmp
pop
loop
sbb
rcl
(bad)
outs
jo
rol
sbb
sbb
gs
push
and
data16
xor
mov
clc
mov
in
lods
es
jg
add
or
imul
jns
adc
jp
jg
mov
adc
sbb
scas
sub
and
mov
cmp
pusha
mov
and
popa
(bad)
mov
out
xor
pop
jns
mov
fsub
sbb
imul
cmc
inc
ret
add
fldln2
fwait
sub
loopne
(bad)
loope
mov
jl
and
push
test
sub
add
bound
mov
fdivr
call
sbb
mov
retf
jne
mov
in
movs
scas
js
jae
daa
repnz
popa
sub
js
jecxz
call
jmp
out
in
cmp
adc
outs
push
dec
inc
(bad)
xor
adc
mov
mov
mov
xchg
pop
lahf
mov
lods
inc
push
inc
mov
outs
shld
sub
lock
adc
mov
jmp
mov
hlt
iret
push
inc
xor
cmps
int
adc
popa
mov
test
repz
dec
jmp
outs
jp
mov
ins
or
xchg
fistp
xchg
lods
aad
cmp
xchg
adc
je
cmp
xchg
and
adc
add
ja
xchg
sub
icebp
ins
retf
ret
pop
clc
and
ret
movs
shl
movs
push
ja
xor
mov
sub
jbe
xor
stos
or
pop
sti
cmc
aaa
gs
ret
or
enter
mov
into
call
add
xchg
mov
or
and
mov
inc
arpl
aaa
retf
push
mov
cvtpi2ps
fistp
mov
adc
or
cmc
jbe
shl
xchg
cmp
push
jl
sbb
xchg
call
mov
mov
(bad)
sub
(bad)
(bad)
mov
(bad)
push
enter
retf
fs
pop
push
rol
push
dec
sub
mov
mov
(bad)
sub
jnp
test
movs
push
xchg
loopne
jns
nop
(bad)
in
loope
jge
push
call
or
or
movs
cmc
mov
into
pop
ss
sub
ss
cwde
mov
sbb
jnp
setp
pop
in
sub
inc
push
jae
(bad)
enter
mov
cmp
dec
shl
inc
mov
xor
xlat
test
(bad)
loope
pop
xchg
mov
clc
scas
add
sub
inc
cmp
jle
out
fimul
imul
push
mov
inc
xchg
addr16
in
pop
movs
pop
outs
test
out
cmova
(bad)
and
je
outs
shl
daa
or
pop
mov
(bad)
adc
fild
mov
sahf
dec
xchg
mov
and
iret
jmp
inc
or
movs
xchg
iret
popf
sub
inc
(bad)
nop
push
cmps
mov
push
xchg
cmp
out
test
inc
pop
outs
sahf
out
inc
bnd
cdq
or
dec
(bad)
dec
xor
adc
enter
jb
ja
leave
ror
mov
push
iret
sbb
scas
mov
mov
cmp
ds
dec
mov
loop
in
sbb
push
cmps
sub
jg
xor
popf
loope
std
test
(bad)
and
lahf
aas
lahf
push
aas
xchg
add
fwait
int3
sub
or
adc
data16
mov
retf
aam
cmc
push
or
cdq
ds
pop
sar
ffree
movs
sub
sbb
and
xlat
(bad)
mov
movs
xchg
jecxz
mov
dec
xor
inc
pop
ja
pop
movs
pop
out
push
pop
(bad)
cli
and
fist
push
push
outs
jbe
nop
sub
xchg
rep
fnsave
jns
fstp
jp
push
pop
arpl
push
test
fadd
enter
call
mov
shl
in
adc
lock
(bad)
addr16
jmp
mov
and
jnp
mov
daa
cmp
fldcw
cli
cmp
xor
icebp
sbb
mov
aad
fcom
arpl
out
stos
push
xchg
call
inc
(bad)
cwde
and
aam
cdq
mov
mov
(bad)
int3
jo
sar
fldenv
sti
test
test
arpl
in
add
mov
xchg
stos
out
jmp
mov
cmps
push
xor
test
xchg
sub
jbe
aad
xor
cs
arpl
and
stc
leave
sub
repnz
ror
xor
add
pushf
jno
into
(bad)
and
ja
jae
mov
dec
adc
(bad)
into
pop
stos
mov
mov
aam
xor
idiv
adc
rcl
cmps
cmp
aad
inc
dec
dec
pop
push
retf
js
loope
shl
outs
ret
mov
or
xor
in
push
add
sbb
inc
xor
dec
lea
pop
cmps
test
mov
out
sti
jnp
in
iret
jge
push
pop
add
add
mov
gs
int3
adc
mov
daa
stc
out
mov
inc
ins
jecxz
in
test
mov
stos
nop
pop
popf
std
inc
pusha
dec
inc
jmp
pop
mov
outs
lea
in
pop
(bad)
call
pop
add
mov
jg
jo
out
mov
dec
sar
push
pop
pop
mov
in
sbb
jcxz
sbb
inc
call
mov
fadd
inc
pop
outs
rol
aam
cmps
inc
inc
dec
scas
out
mov
cld
mov
add
in
push
xchg
les
not
dec
push
(bad)
sbb
mov
and
idiv
mov
neg
fwait
sub
jmp
and
(bad)
jge
sub
push
rcr
cmps
xchg
mov
adc
(bad)
(bad)
stos
ss
test
cmp
inc
ins
mov
or
ins
inc
test
test
iret
xlat
mov
cmps
addr16
mov
sub
jg
repnz
aam
mov
jne
outs
lods
das
imul
pop
cmps
inc
jp
icebp
sti
repnz
int3
pop
out
mov
push
mov
jmp
rcr
out
movs
mov
sbb
and
popf
sbb
std
mov
sub
ror
in
push
and
imul
shl
adc
cmps
mov
inc
int
xor
fnstcw
push
mov
pop
dec
inc
in
rcr
xchg
gs
js
call
(bad)
xor
pop
xchg
and
or
int
mov
jmp
xlat
sub
adc
adc
fdiv
fist
cs
jnp
jbe
pop
shl
in
dec
mov
cs
stos
nop
jno
out
es
adc
jb
lahf
dec
mov
mov
jl
rcr
out
fs
retf
xchg
movs
jb
les
push
mov
jnp
hlt
or
imul
inc
jb
xor
adc
and
push
sub
jl
retf
mov
and
repnz
push
and
std
push
dec
jb
stos
cmp
enter
sub
xchg
fldcw
jmp
adc
dec
gs
and
mov
jge
aad
leave
sahf
ror
aad
test
inc
pop
jge
test
jmp
pop
aad
mov
popf
movs
in
ret
call
in
inc
imul
push
test
ins
adc
sub
mov
xchg
pop
dec
sbb
xchg
jmp
sbb
mov
mov
cdq
inc
out
lods
jbe
ins
jmp
or
cli
dec
jbe
stos
sahf
push
and
sbb
push
ficom
pop
inc
dec
test
(bad)
jmp
call
or
or
push
les
std
ins
aad
inc
aas
leave
adc
dec
ins
xchg
les
jmp
pop
in
ds
sub
repnz
popf
rol
cmp
(bad)
dec
pusha
and
fistp
push
mov
xchg
pop
sbb
fwait
out
pop
cmps
sti
cmp
sub
mov
dec
xor
fst
ja
rcr
mov
dec
imul
jne
sbb
scas
pop
and
pusha
movs
pop
stc
aam
jno
xchg
dec
lock
cmp
mov
and
sbb
mov
mov
retf
xor
add
adc
jmp
jecxz
shl
xchg
loopne
sub
push
test
sahf
sub
nop
leave
loope
mov
inc
xchg
or
or
loopne
test
or
(bad)
mov
dec
adc
gs
leave
pop
in
pop
sub
repz
cmp
mov
out
or
sahf
pop
in
aas
stos
cmps
outs
dec
sub
and
dec
call
call
pop
inc
aas
inc
leave
pop
sub
shl
fisttp
clc
neg
push
inc
shr
mov
pop
dec
mov
shl
push
mov
or
cld
jnp
fidivr
and
mov
pop
(bad)
jg
sbb
push
icebp
mov
scas
push
div
xor
rol
add
cwde
sar
or
cmp
cwde
mov
dec
inc
xchg
(bad)
leave
addr16
and
or
xor
and
loope
fldcw
cmp
sbb
daa
stc
sub
ins
sahf
mov
clc
xchg
mov
fdiv
add
retf
mov
pop
mov
call
pop
imul
(bad)
div
sbb
cmps
sti
and
fs
cmp
nop
neg
icebp
dec
and
mov
push
jno
mov
inc
jno
sbb
ror
std
leave
xor
pop
sbb
push
dec
cmp
dec
popa
addr16
in
jnp
stos
je
fdiv
xor
loopne
fdiv
xor
inc
xor
in
sbb
icebp
movs
je
(bad)
repz
repz
jae
adc
push
sti
xchg
gs
retf
out
mov
lahf
fstp
push
jb
sbb
stc
mov
cmp
out
pop
out
xchg
call
clc
(bad)
ficom
jp
pop
sub
iret
xor
sub
stc
and
sbb
cmp
dec
or
push
std
xor
bnd
add
or
xchg
jg
repz
jg
in
push
cmp
in
ins
push
scas
in
div
mov
xor
fidivr
mov
into
lods
lods
mov
(bad)
cmp
pop
je
outs
sbb
daa
xchg
mov
lods
sub
adc
test
mov
push
cmp
shl
outs
adc
xchg
sti
fistp
pop
stos
jmp
add
sahf
aam
mov
loop
jmp
inc
jno
mov
pop
sahf
(bad)
jno
scas
mov
cli
fs
pushf
ret
dec
sbb
out
mov
pop
(bad)
ficom
loop
inc
or
je
outs
push
lds
ret
popf
or
fs
pop
lock
div
pop
out
adc
pop
repnz
and
jo
dec
add
inc
mov
mov
scas
aad
sub
sahf
ds
jmp
mov
sub
data16
pushf
mov
mov
fs
arpl
inc
test
jne
(bad)
sbb
and
ds
inc
dec
dec
scas
xor
lahf
lods
xlat
inc
sub
das
add
mov
cmp
adc
push
xchg
dec
jmp
jecxz
mov
call
(bad)
jnp
out
aaa
fsub
mov
sbb
out
test
(bad)
in
movs
ja
mov
mov
ror
jne
mov
shr
int3
sar
aam
and
mov
and
test
pop
mov
in
xor
jmp
sbb
inc
fldenv
mov
aad
xor
clc
and
or
mov
cmp
adc
(bad)
xchg
out
ret
loope
pop
inc
jb
(bad)
adc
add
jmp
mov
sub
dec
push
push
(bad)
cli
xchg
pop
fsubp
sbb
clc
adc
arpl
jb
mov
mov
rol
mov
mul
and
push
jmp
xchg
dec
call
cmp
jge
add
jnp
imul
sbb
imul
adc
shr
cwde
out
dec
xchg
inc
int
call
dec
mov
or
in
(bad)
cdq
mov
mov
lock
xor
mov
int3
call
pop
fwait
sub
sbb
outs
and
pop
mov
jp
inc
xor
or
shl
inc
mov
mov
enter
push
push
int3
test
push
das
data16
cmps
ja
sbb
repz
das
push
sbb
add
ficom
mov
and
push
ret
(bad)
or
ins
in
and
xor
push
mov
ins
mov
xor
push
xor
push
or
pusha
mov
adc
inc
push
test
xor
sub
xor
adc
xchg
adc
jmp
dec
popf
fisttp
mov
cmp
and
gs
or
dec
push
jge
xor
lea
sbb
mov
dec
cmp
aad
outs
addr16
jo
mov
sub
fucom
lahf
in
mov
mov
push
test
jbe
jnp
mov
cmp
neg
inc
xchg
test
inc
ret
ins
or
cs
sbb
jae
mov
clc
add
mov
pop
out
popa
sar
in
retf
out
pop
aaa
mov
xor
jb
stos
ret
xchg
repnz
imul
mov
retf
stos
sbb
daa
shl
fstp
call
call
dec
dec
jns
pusha
or
cmp
add
inc
push
cmps
adc
repnz
pop
enter
xor
cli
(bad)
inc
adc
mov
cmc
ss
adc
jle
adc
mov
add
leave
xor
mov
in
(bad)
jp
mov
xchg
fld
fisttp
xchg
ins
std
invd
dec
cmp
mov
cmps
fs
popf
xchg
les
bound
(bad)
ds
push
pop
pop
adc
add
in
pop
ret
ret
sahf
in
xlat
movs
loopne
sbb
test
cmp
or
inc
adc
ins
lea
mov
mov
add
mov
pop
mov
out
mov
mov
jl
jl
sbb
jae
pushf
push
js
imul
adc
(bad)
repz
adc
jae
fild
dec
repnz
out
cmp
mov
mov
add
dec
and
aam
push
fwait
and
ins
sub
cmp
mov
sar
sub
and
arpl
(bad)
xor
fwait
loopne
mov
jp
ret
sbb
pushf
or
mov
jno
cmps
adc
sbb
xor
xlat
mov
sbb
sub
inc
lahf
add
aad
idiv
(bad)
(bad)
push
mov
nop
xchg
out
mov
mov
pop
(bad)
ret
int3
xchg
or
lds
and
and
push
and
or
xor
mov
pop
(bad)
mov
dec
rol
xchg
push
dec
xchg
sub
mov
cli
ret
mov
sbb
test
fild
sar
xchg
movq
das
mov
jle
fistp
mov
in
mov
jmp
sub
cmp
retf
jb
adc
sbb
fadd
test
lds
adc
jmp
dec
sub
ja
adc
fild
pop
mov
inc
sar
mov
or
fstp
rol
xor
inc
cmp
and
punpcklbw
and
adc
and
xor
push
repnz
int3
pop
add
loop
push
in
out
outs
mov
fnstcw
sti
inc
xchg
push
inc
jns
sbb
cdq
ins
sub
pop
scas
mov
mov
frstor
sub
dec
sub
and
cmp
add
mov
call
mov
mov
xor
xor
xor
dec
lahf
outs
icebp
sbb
push
shl
add
inc
xchg
or
cmp
adc
mov
stos
fs
dec
test
ins
cli
push
jns
mov
repz
fisttp
sti
test
ret
jb
push
mov
gs
dec
(bad)
mov
jge
mov
adc
cmp
aad
fwait
mov
or
out
fstp
pushf
mov
enter
scas
mov
dec
outs
outs
pop
jns
cwde
sti
pcmpgtd
sub
rcr
cmp
neg
(bad)
pop
dec
jg
xchg
jno
popf
dec
clc
movs
imul
not
cdq
fistp
sub
outs
popa
rol
fs
int
pop
sahf
dec
cmp
fsubr
repz
add
jg
popa
js
jecxz
rcr
getsec
jle
xor
push
mov
stc
ins
outs
es
lahf
test
mov
ss
pop
mov
sbb
rol
sub
les
mov
sub
pop
mov
add
jo
out
jne
jl
mov
and
inc
mov
adc
jle
arpl
mov
(bad)
call
lds
xchg
mov
fucomp
ins
sbb
loop
sbb
ds
ja
mov
cmp
inc
mov
cmp
out
das
fistp
movs
test
add
movs
jp
sub
cmp
xor
xchg
and
xchg
inc
pop
je
mov
push
ins
addr16
and
xchg
in
jns
pop
jbe
xor
xor
inc
in
mov
mov
xchg
xor
les
add
mov
xchg
xor
xchg
add
loop
jmp
jecxz
push
mov
aas
iret
mov
cmp
cdq
iret
ins
pop
cmp
push
xchg
(bad)
sbb
push
ret
xor
daa
sbb
hlt
sti
mov
xchg
retf
sti
inc
mov
es
aad
rol
pop
pop
push
jb
sub
pushf
aad
lods
sahf
cmps
scas
cdq
and
movs
push
loop
daa
xchg
dec
ins
cs
jge
out
fistp
arpl
mov
push
rcl
inc
sub
xchg
push
pop
or
sbb
sbb
aas
inc
ss
push
sar
pop
xchg
je
lock
fld
inc
inc
mov
adc
xchg
push
test
xchg
jo
and
lods
imul
pop
inc
add
sbb
jle
test
call
and
adc
mov
cld
ror
or
lods
shl
iret
push
push
or
push
jae
clc
daa
lods
imul
adc
retf
xchg
inc
in
lods
loop
cmp
not
ins
or
push
ror
stc
mov
cmps
iret
push
mov
rol
mov
mov
push
cmp
xchg
pop
or
cdq
cdq
out
sti
test
out
cmp
(bad)
push
adc
xchg
xchg
jle
adc
stos
xchg
xlat
xchg
xchg
push
inc
inc
in
add
mov
cli
loope
mov
push
xor
adc
clc
dec
adc
mov
sub
aam
mov
js
mov
push
sub
inc
push
add
and
es
(bad)
popf
pop
inc
adc
pop
cmc
hlt
pushf
test
sub
and
int
and
into
push
imul
lods
pop
cmps
int3
retf
inc
sar
repnz
repz
add
pop
(bad)
or
dec
dec
or
mov
or
retf
stc
fstp
out
pusha
scas
pop
or
ret
pop
mov
jb
mov
sbb
loop
xchg
pop
mov
cmp
or
mov
jmp
popf
mov
fwait
(bad)
mov
fcom
mov
stos
shl
mov
lahf
(bad)
and
sbb
jle
(bad)
in
xchg
gs
push
or
push
add
jmp
mov
push
push
mov
cli
pop
cmp
jecxz
push
push
in
shr
ficom
inc
xor
pusha
push
frstor
stos
mov
sub
add
fs
(bad)
stos
popf
jno
inc
gs
loope
and
xchg
addr16
lds
jp
xchg
jnp
stos
rcl
mov
add
ret
out
lahf
add
push
repz
inc
ins
pop
mov
and
stos
xor
test
hlt
daa
mov
inc
mov
jl
out
inc
jno
adc
xchg
adc
jmp
shl
test
adc
test
dec
das
cmp
mov
adc
sub
imul
sbb
dec
lahf
pop
ins
imul
ror
in
add
stos
cwde
nop
or
icebp
sar
xchg
imul
xor
repz
pusha
in
js
in
outs
mov
mov
dec
stos
sub
mov
or
(bad)
mov
hlt
daa
nop
test
ss
fcmovnu
dec
sub
es
cmp
pop
pop
pop
xchg
pop
pop
loope
dec
xchg
add
aad
test
mov
mov
dec
mov
ins
outs
in
(bad)
xchg
repnz
mov
cs
js
jb
stc
in
and
xchg
aas
ss
lods
mov
ss
adc
mov
sbb
mov
inc
inc
aam
loop
jo
inc
out
cmp
out
xchg
stos
sbb
or
xor
xchg
test
popf
mov
int
jns
pop
or
mov
xchg
ss
ja
pop
mov
cmp
or
cs
jne
stc
pop
and
cmp
icebp
inc
out
out
and
jge
jbe
jmp
xchg
je
cmp
movs
push
sbb
popa
test
jb
mov
xchg
hlt
sbb
out
and
add
mov
imul
pop
mov
xchg
mov
push
mov
or
xlat
and
inc
int
seto
jo
add
data16
dec
ds
mov
and
push
inc
loope
sub
lsl
js
add
dec
(bad)
cdq
fisttp
mov
jecxz
or
jne
sbb
inc
stc
mul
adc
test
mov
inc
mov
pop
add
rol
pop
xchg
test
jmp
jg
lds
and
lods
ror
xor
inc
and
rcl
add
add
scas
jge
mov
dec
shl
imul
or
push
outs
cwde
add
jg
into
xor
jge
int3
xchg
jge
inc
jmp
dec
sar
jnp
jns
fild
stc
lods
cmp
arpl
mov
cdq
or
fist
pop
cmp
fs
rol
loop
es
dec
fcmovnb
jb
jecxz
sbb
jnp
push
in
(bad)
shr
int3
ins
fdivr
movs
(bad)
jnp
push
mov
loopne
pushf
pop
add
add
(bad)
or
sbb
inc
or
or
pop
(bad)
out
(bad)
sbb
pusha
dec
ficomp
jne
mov
lea
or
lods
xor
mov
push
sub
lds
or
mov
fistp
push
dec
inc
iret
adc
push
mov
outs
mov
aam
repnz
inc
shl
mov
pop
add
cmps
or
push
push
cmp
sahf
add
push
cmps
inc
cld
getsec
ror
jl
push
xlat
icebp
sbb
inc
push
ds
jne
add
add
dec
mov
in
xor
jnp
add
mov
mov
les
out
xchg
xchg
stos
adc
adc
mov
jo
inc
jge
mov
push
test
cli
leave
ins
test
jnp
into
push
mov
add
cmp
xor
out
es
in
rol
adc
jno
xor
call
retf
ror
out
out
into
(bad)
and
repz
jge
xchg
add
rcr
add
dec
jns
leave
adc
adc
jp
pop
add
xchg
mov
popf
clc
sub
repz
js
mov
aas
xor
adc
xor
lea
fild
lock
mov
ret
std
or
scas
inc
icebp
jp
add
sbb
sar
out
xor
dec
pop
xchg
pop
sahf
sub
clc
mov
and
rol
imul
das
fadd
in
movs
and
jmp
xor
mov
ja
add
and
fnstsw
jge
loop
jno
aaa
stc
xor
dec
push
fwait
outs
fcom
bound
xchg
xor
lahf
push
cmp
call
je
int
mov
jmp
scas
xchg
jo
call
mov
adc
out
mov
add
mov
test
and
sahf
ret
scas
in
fcomp
sub
jbe
push
scas
jg
sti
inc
hlt
sub
xchg
push
and
je
mov
scas
mov
xchg
pop
and
scas
jns
outs
mov
add
cmps
or
pushf
icebp
mov
xor
mov
shl
jmp
push
fstp
arpl
xor
xor
cmp
out
fmul
gs
xor
cmc
mov
ins
test
adc
xor
(bad)
cmc
clc
cmp
(bad)
out
xor
in
mov
xchg
ret
ins
mov
call
xchg
movs
and
mov
mov
inc
xchg
mov
mov
or
mov
push
or
xchg
xchg
mov
push
and
xor
jle
pop
jmp
mov
fisttp
cmps
fdiv
sub
lahf
mov
cld
fisttp
call
push
adc
hlt
fcomp
adc
sub
adc
sub
cdq
add
cs
pop
jmp
fld
jno
or
cs
out
gs
mov
adc
pop
imul
cmps
adc
dec
adc
cmps
mov
cmps
les
sbb
mov
xor
mov
adc
aam
and
movs
push
mov
shr
pop
and
or
push
sbb
stos
pushf
ret
pop
sbb
push
repz
sub
xor
out
cdq
sub
(bad)
aaa
push
fcmovne
(bad)
push
lahf
pusha
mov
jecxz
pushf
je
sub
add
aad
int
std
push
xchg
imul
jge
and
xor
mov
mov
xor
(bad)
inc
neg
in
adc
bound
jle
(bad)
jae
pop
lock
popa
pushf
stc
subps
lods
pop
out
test
cmps
shl
es
sbb
outs
sahf
pop
(bad)
popa
pop
mov
outs
gs
push
test
cmp
jle
xor
pushf
movs
fs
cwde
aam
movs
push
xor
out
pop
stos
fsubp
add
test
ins
cmp
leave
or
not
in
jge
cs
shl
(bad)
repnz
and
clc
popf
in
xchg
outs
shl
popa
mov
(bad)
movs
sbb
out
pop
cmp
imul
sahf
cmp
movs
mov
sub
mov
push
test
and
jmp
lahf
mov
repz
push
inc
cmp
mov
xchg
fldenv
scas
hlt
xchg
inc
sbb
(bad)
bound
in
mov
xor
pop
push
icebp
mov
adc
mov
and
fs
add
mov
mov
aaa
and
lods
xchg
push
stc
mov
call
mov
test
add
repnz
jb
in
lock
out
shr
mov
stc
sbb
scas
mov
pushf
xor
cmps
mov
ins
data16
data16
or
daa
pop
out
mov
fild
pop
cmp
scas
inc
adc
cli
push
push
mov
lds
adc
pop
pop
push
push
lods
dec
cmp
inc
cmp
xlat
pop
mov
addr16
jle
ret
out
rep
inc
mov
jge
mov
jne
cmp
add
js
(bad)
repz
sbb
test
push
in
loopne
adc
(bad)
not
adc
ret
pusha
push
xor
std
xor
into
sub
sub
stos
pop
jecxz
sar
mov
mov
fdivr
dec
cwde
in
mov
call
icebp
push
and
pushf
int
xor
push
mov
and
and
add
push
loope
call
pop
pop
(bad)
retf
ins
jae
cwde
dec
les
shl
das
shr
sub
inc
cwde
pop
retf
or
sbb
lock
test
jge
push
stos
rcr
cmc
jne
xor
hlt
push
sub
daa
ret
push
or
ins
fstp
imul
cmp
fadd
(bad)
push
pop
rcl
and
(bad)
pop
adc
sub
jmp
fadd
ja
les
(bad)
jo
sbb
cmp
enter
and
mov
pop
lods
cld
pop
imul
add
sub
ds
jns
mov
xchg
hlt
sub
mov
mov
ror
inc
mov
sbb
inc
sub
pop
fst
(bad)
and
test
push
dec
push
pushf
xchg
mov
sub
sbb
xor
sbb
cmp
(bad)
xchg
pop
inc
loope
in
jmp
into
push
jae
(bad)
sub
jmp
inc
jp
stc
cmc
sbb
aas
in
and
ror
and
rcl
mov
and
sbb
sbb
jmp
(bad)
mov
arpl
and
inc
or
outs
xchg
xchg
js
aas
mov
loope
mov
cmp
dec
out
cmp
pop
inc
out
aad
dec
pop
clc
dec
mov
lock
(bad)
xchg
xor
clc
icebp
popa
cmp
inc
sbb
lds
fnstsw
in
add
pop
enter
mov
pop
test
cmc
pop
hlt
gs
and
jbe
or
fst
loop
std
leave
retf
cmp
test
cmp
xchg
ins
sar
jge
sub
push
mov
or
jecxz
(bad)
cdq
rcr
jns
lods
jb
xor
push
out
stc
lea
in
xchg
stos
jp
iret
push
xchg
pop
jmp
mov
xchg
ss
jl
mov
sbb
out
pop
cli
test
and
xchg
add
ret
pop
adc
mov
xlat
(bad)
ffreep
imul
inc
adc
push
push
adc
inc
mov
pop
(bad)
repz
imul
xchg
push
imul
stc
out
fdivr
jae
push
shr
adc
inc
js
jmp
test
jg
xchg
fisubr
jnp
ja
jmp
stc
aaa
ret
shl
leave
shl
xor
xchg
iret
int3
in
dec
(bad)
outs
xchg
or
mov
cmps
inc
xchg
cld
ja
(bad)
test
fnstenv
mov
mov
and
xor
jnp
outs
(bad)
dec
push
retf
or
dec
push
sbb
mov
and
adc
and
pop
dec
push
push
push
dec
cmp
or
inc
test
and
int
dec
xchg
cmp
xor
dec
pop
push
or
movs
adc
ja
pop
lods
mov
xchg
jo
pop
dec
dec
repnz
test
aam
jle
mov
mov
xchg
out
jle
mov
jmp
add
or
or
push
dec
cdq
pop
xchg
push
push
mov
into
nop
inc
popa
aad
adc
shl
push
and
lock
sbb
dec
inc
jle
test
fnstcw
or
ins
add
stc
adc
test
div
icebp
inc
jmp
cwde
out
pop
das
mov
mov
cmp
xchg
cmp
js
or
jge
adc
cmp
mov
stos
dec
or
or
neg
mov
ds
jo
stos
sbb
adc
or
in
bound
mov
or
cli
and
cmps
out
and
movs
loopne
mov
cdq
cmp
lea
pop
jmp
test
(bad)
les
ret
inc
imul
loope
pop
jecxz
cmc
add
cmp
sti
lahf
pop
add
repz
(bad)
and
jmp
xor
nop
jge
mov
aad
in
sbb
xlat
pop
cmp
inc
je
mov
push
and
bound
jno
or
test
pop
push
or
pop
add
dec
in
ja
xchg
dec
into
rcr
out
jne
jge
sar
in
je
fdivp
xor
sub
inc
mov
mov
push
rcr
(bad)
jl
xor
pop
outs
imul
push
sub
(bad)
mov
add
inc
inc
cld
or
fucomp
cmp
cli
dec
neg
pop
das
xor
adc
loope
ins
pop
(bad)
or
data16
(bad)
mov
adc
movs
jne
adc
popa
jmp
hlt
push
push
xchg
and
cmp
xchg
repz
and
xor
sti
jmp
add
push
and
icebp
sub
test
xor
rcr
leave
ja
dec
retf
int
xor
jmp
fmul
sub
sti
fs
out
add
xor
push
sub
mov
in
(bad)
mov
sub
dec
mov
dec
jne
jge
mov
adc
mov
repnz
sub
(bad)
jmp
dec
fwait
and
pop
movs
mov
dec
into
xor
push
add
mov
push
sbb
popa
rol
sub
push
mov
movs
add
cs
(bad)
enter
sub
shr
xor
repnz
lea
pop
int
ins
lods
mov
sbb
fstp
and
cs
xchg
jno
pop
cmp
mov
mov
loop
cwde
mov
(bad)
aam
bound
out
push
sahf
aas
lea
in
ins
movs
fiadd
xchg
xlat
inc
adc
fdivr
mov
adc
jne
scas
mov
sub
dec
cmp
mov
shl
das
stos
outs
adc
add
enter
add
std
mov
cli
xchg
sar
adc
fst
cli
jp
add
mov
pop
popa
push
push
fadd
(bad)
ror
arpl
push
mov
jae
cmp
adc
lods
mov
cdq
out
je
jecxz
lods
mov
test
shr
jle
stos
or
(bad)
mov
stos
sti
out
push
add
jo
loope
and
jmp
es
jno
dec
daa
mov
out
loopne
dec
mov
shl
sbb
movs
pop
or
in
or
test
adc
gs
popf
dec
je
xchg
jmp
imul
mov
add
es
add
int3
ins
aas
stos
sbb
cli
jae
inc
sar
dec
adc
dec
xchg
mov
mov
sub
fldenv
push
lea
jnp
mov
add
sbb
xor
daa
outs
jp
std
lock
add
movs
(bad)
ret
out
and
fwait
jl
lahf
push
mov
in
(bad)
lods
sub
xor
pushf
and
pop
icebp
or
lea
lea
jmp
div
push
add
test
out
data16
mov
repnz
imul
movs
retf
sub
sti
cmp
push
rcl
repz
std
sub
xlat
fnstsw
jmp
loopne
fistp
jns
cwde
loope
push
mov
jmp
jmp
loope
rol
fsub
retf
inc
mov
adc
sbb
add
jge
(bad)
cld
pop
mov
loop
or
push
jb
mov
or
jp
dec
sbb
or
out
(bad)
repnz
mov
xchg
inc
(bad)
mov
popf
popw
push
push
in
xor
aam
das
out
nop
psubsb
push
jmp
or
cli
ds
in
xchg
cwde
cmc
adc
rcl
dec
pop
out
sbb
jp
mov
nop
retf
mov
icebp
xor
popf
lods
pop
neg
add
xchg
icebp
jae
add
pop
addr16
popa
dec
jne
cmp
or
not
es
data16
sbb
add
hlt
imul
call
sbb
hlt
fsub
imul
(bad)
dec
dec
inc
xlat
mov
scas
sub
xchg
shr
mov
dec
jnp
in
or
inc
push
movs
xchg
shl
(bad)
imul
push
sbb
adc
adc
mov
scas
dec
repnz
push
not
or
test
jno
and
mov
leave
and
pop
stos
imul
or
sub
int3
fadd
fdivr
dec
adc
xor
out
add
test
test
xchg
cs
xchg
mov
cmps
pop
cwde
cld
adc
pusha
(bad)
jbe
ja
clc
(bad)
pop
mov
(bad)
and
loopne
jnp
(bad)
imul
pop
adc
aaa
popf
xor
sub
jb
jge
xchg
sbb
pop
sbb
arpl
pusha
add
adc
or
out
add
push
sub
addr16
mov
imul
fcom
test
lods
dec
jbe
dec
inc
lods
test
fcomip
stos
(bad)
push
dec
ret
mov
push
mov
(bad)
mov
cmc
or
movs
fdivr
test
sysenter
loope
mov
inc
ror
(bad)
pop
stos
les
mulps
jnp
inc
retf
jbe
fchs
mov
push
dec
adc
dec
ja
es
cli
mov
(bad)
cmps
fneni(8087
xor
nop
les
inc
scas
mov
sbb
jno
push
mov
mov
call
movs
mov
jp
ret
outs
loopne
xchg
cmp
not
cmp
iret
push
jmp
ins
lea
or
mov
push
cmps
xchg
sti
cwde
jl
ds
and
sub
mov
jae
and
and
repnz
dec
imul
mov
call
pop
ins
and
icebp
or
sbb
mov
mov
add
adc
outs
cmp
ins
sbb
xchg
jne
neg
enter
cdq
lds
(bad)
mov
ins
movs
dec
jp
inc
xor
daa
sub
(bad)
mov
daa
pop
push
aas
push
xor
xchg
xchg
xchg
jmp
stc
push
and
shl
jp
xchg
push
retf
mov
jne
ja
aas
jmp
scas
mov
outs
(bad)
loop
imul
or
cmp
or
mov
xor
bnd
mov
shl
xor
mov
stos
icebp
jge
sbb
neg
jnp
fimul
int
retf
adc
popa
mov
sbb
js
add
xchg
push
in
call
lds
xchg
adc
inc
stos
and
cmp
fsub
fstp
jp
jmp
adc
mov
pop
jo
push
push
xor
ffree
add
mov
fiadd
not
lods
xor
ss
fstp
or
mov
sbb
push
xchg
ret
add
rol
cmc
push
mov
xchg
data16
int
sub
test
ror
add
imul
lods
mov
cli
push
mov
ins
fmul
mov
pop
icebp
inc
adc
test
(bad)
jmp
dec
int3
jne
inc
dec
in
push
mov
push
imul
js
sbb
inc
rol
repnz
inc
lock
dec
mov
pop
add
jb
sbb
(bad)
and
xor
xor
inc
push
add
pop
cmc
in
shl
xchg
cmp
add
stos
jo
pop
aaa
call
pop
div
adc
dec
cs
pop
aad
test
lock
mov
dec
jno
mov
pop
test
jmp
es
out
shl
jge
add
inc
mov
test
mov
test
sub
mov
imul
mov
push
fsubrp
out
movs
loop
and
sar
pop
fisub
hlt
mov
adc
or
or
xchg
add
fs
mov
cli
jmp
xor
mov
jbe
push
fxch
sbb
push
lods
arpl
mov
sub
retf
lods
(bad)
fnstsw
cmp
(bad)
push
xchg
stos
cmp
popf
dec
fadd
aad
dec
into
shl
push
xchg
mov
mov
ret
sub
sub
jecxz
scas
cmps
jb
inc
in
inc
hlt
hlt
cs
pop
int
cmp
pop
enter
loop
mov
xchg
jno
cli
lods
iret
gs
add
adc
pop
mov
cmp
and
jp
sbb
mov
fldpi
dec
out
mov
inc
out
inc
inc
nop
cmp
aam
lods
pop
je
jge
mov
popf
pop
pop
and
loop
lea
mov
mov
mov
das
out
jae
add
pop
or
sub
hlt
cmp
and
out
mov
int3
iret
aad
aaa
retf
push
loope
adc
xchg
dec
sahf
ja
fmul
(bad)
adc
inc
out
rcr
push
call
hlt
pop
and
dec
test
jae
inc
jno
and
push
push
sub
in
or
fild
fcomp
and
scas
and
mov
lods
and
stos
fidiv
push
xchg
xor
cdq
cmps
leave
jnp
and
pop
pop
and
lock
aaa
dec
cmp
adc
shl
mov
push
popa
mov
int3
adc
icebp
shl
imul
jne
std
mul
jmp
leave
mov
push
sbb
xor
xchg
outs
in
xor
adc
push
mov
test
cmp
dec
fist
ins
add
xchg
sbb
jmp
and
pop
sbb
adc
or
fs
xchg
shr
outs
dec
inc
fstp
sti
mov
jb
inc
adc
jge
pop
cmp
mov
pop
xchg
fcomi
dec
xor
das
push
add
rcl
sbb
int3
shr
clc
fnstsw
jne
cmc
mov
stos
or
leave
addr16
data16
repnz
inc
sbb
adc
ja
loope
jl
add
or
test
sahf
mov
xchg
fadd
xor
ss
add
inc
and
and
pop
ror
outs
imul
fsub
xor
ins
push
fs
jo
mov
call
pop
fucomip
(bad)
std
sbb
adc
mov
or
out
inc
fcom
inc
adc
sbb
call
clc
mov
sub
mov
pushf
dec
mov
mov
mov
cmp
mov
cwde
jecxz
inc
push
ds
jge
inc
popa
pop
xlat
sbb
cmp
mov
test
cwde
(bad)
ds
les
retf
pop
fdiv
xchg
inc
xchg
bound
(bad)
pop
push
stos
mov
test
mov
popf
fsincos
iret
loope
ja
xor
test
lea
adc
xchg
mov
or
sbb
loop
mov
mov
popa
ret
pop
mov
int3
cmp
repz
cmp
xor
mov
retf
jne
stc
retf
fnstcw
div
cmp
mov
sub
in
test
push
and
aad
ja
std
out
jle
jp
iret
pop
outs
inc
(bad)
jnp
jbe
inc
sbb
adc
jne
xchg
pop
imul
and
shl
(bad)
jno
(bad)
sub
sbb
fstp
daa
jb
and
mov
cmps
out
out
add
mov
and
icebp
mov
ins
pop
mov
add
leave
inc
dec
jmp
jno
push
push
push
xor
gs
test
in
jo
cmp
push
sub
push
stos
adc
mov
jge
(bad)
pushf
pop
mov
xchg
xor
push
in
jle
dec
popa
lahf
and
pop
loopne
enter
mov
push
(bad)
in
jecxz
cmp
inc
inc
add
rol
sbb
cmp
inc
imul
(bad)
sbb
xchg
inc
push
inc
cmp
arpl
cld
imul
xchg
jmp
sub
dec
es
sub
adc
mov
sub
push
pushf
cwde
jecxz
in
add
out
xor
cs
push
stos
pushf
test
jge
push
fcom
icebp
repz
call
mov
test
lock
out
clc
add
sub
(bad)
dec
lock
out
rcr
daa
scas
mov
fiadd
int
jmp
lock
retf
or
push
shl
mov
xchg
fsub
push
jns
xchg
jno
sbb
mov
mov
lahf
ret
movs
retf
(bad)
in
lahf
sub
adc
sar
out
inc
mov
or
add
lods
adc
push
sbb
call
sbb
fs
sub
push
and
jnp
repnz
fimul
fidiv
jge
sub
mov
arpl
cmps
test
and
pop
mov
je
and
push
sub
sbb
int
push
push
movs
jmp
push
jb
mov
lock
stos
lods
sub
gs
fistp
lods
mov
xor
dec
pusha
mov
cmp
sub
nop
or
aad
cmp
push
sbb
aad
xor
mov
les
ins
js
outs
xor
add
jmp
add
cwde
jb
jae
pop
push
jg
xchg
and
pop
jae
enter
int
mov
cmp
cmp
icebp
add
fnstsw
sbb
inc
cwde
cmp
xor
movs
mov
(bad)
dec
rcl
popa
xchg
xchg
mov
pop
mov
xor
outs
cdq
dec
stc
dec
add
fidiv
movs
jge
mov
mov
fld
or
lods
add
movs
inc
arpl
add
leave
xchg
push
cmps
lock
jecxz
push
or
mov
adc
cld
mov
cmp
mov
sub
retf
jo
fisub
sbb
out
arpl
pop
out
aaa
jo
sbb
outs
add
shl
xchg
(bad)
jb
div
pop
jns
xchg
outs
dec
sbb
adc
jle
out
xchg
fwait
jne
rol
mov
(bad)
out
hlt
sbb
cdq
stc
jg
loopne
pop
and
jae
scas
stc
stos
sbb
pop
shl
ret
cld
xchg
(bad)
jl
test
mov
dec
add
mov
xchg
add
cli
mov
xor
mov
sub
frstor
fld
push
mov
rcl
fistp
test
mov
popf
or
inc
mov
jmp
int3
pop
(bad)
mov
in
stos
loope
cmps
pop
sbb
push
sti
adc
or
ror
ret
mov
rol
aad
in
xor
shl
jmp
jns
mov
adc
loope
mov
push
into
xlat
call
dec
lds
jge
pop
xlat
rol
fs
jmp
retf
ins
cmp
fnstenv
arpl
or
mov
xlat
adc
pop
stos
retf
pop
sub
push
lods
data16
std
test
fwait
ins
jecxz
jle
or
push
push
inc
aad
lds
sti
jmp
jmp
sub
fdiv
mov
outs
sbb
ror
stc
int
into
inc
jo
arpl
out
in
dec
inc
fild
mov
xchg
shl
jnp
fmul
jbe
inc
in
enter
xchg
test
inc
add
mov
inc
bound
imul
lock
(bad)
outs
xor
les
push
jno
mov
imul
outs
cmp
fs
xor
ret
fwait
dec
mov
adc
mov
mov
push
inc
xchg
dec
(bad)
stc
inc
and
ret
jge
hlt
loop
(bad)
xchg
jno
mov
gs
pop
adc
mov
sub
cli
xchg
test
pop
cmp
adc
retf
jmp
pop
iret
pop
adc
loop
inc
test
inc
pop
(bad)
dec
fld
loop
jmp
in
inc
mov
jg
sub
pop
loop
mov
mov
jae
sahf
fwait
adc
div
add
icebp
jge
stos
ret
xchg
lds
jno
clc
cmp
push
xchg
scas
lods
xor
xchg
xchg
cmps
scas
dec
call
mov
and
test
rcr
adc
or
or
in
push
scas
call
sti
das
add
arpl
dec
int3
jl
imul
outs
(bad)
cmp
mov
lea
inc
or
inc
(bad)
out
into
aas
cmp
stos
dec
xlat
jmp
rcr
xor
sub
out
and
nop
push
test
cmps
les
mov
mov
mov
repnz
cmp
or
lods
ds
cli
dec
mov
mov
stos
stos
sbb
sti
ja
cmp
sbb
rol
sbb
sbb
(bad)
and
loop
mov
jecxz
inc
lock
enter
out
aad
js
mov
shr
adc
sbb
sub
adc
push
(bad)
aaa
lods
inc
(bad)
or
add
icebp
jp
fild
loope
inc
hlt
sub
push
inc
fldenv
cmp
mov
imul
(bad)
cli
xchg
xchg
xor
jno
outs
push
mov
fdiv
(bad)
jnp
arpl
hlt
sub
jg
jge
push
push
sub
arpl
ja
mov
or
stos
mov
rcl
rol
pop
inc
(bad)
adc
nop
or
shl
stos
dec
cmp
mov
xchg
in
mov
dec
jp
imul
stc
cmp
cmp
cmp
jp
sub
imul
in
test
loop
push
or
push
and
add
fisttp
test
sub
xor
push
sbb
or
test
mov
arpl
movs
mov
shl
sti
sbb
push
mov
scas
or
test
pop
push
adc
mov
repz
out
mov
sub
fwait
inc
mov
mov
cmp
loop
cmp
into
mov
in
cdq
int3
jmp
(bad)
xchg
test
add
jp
sbb
fidivr
push
mov
pop
mov
sar
scas
sub
push
sub
add
mov
push
into
adc
ins
adc
adc
mov
pop
jo
sbb
pusha
ret
test
sar
into
mov
mov
or
jno
pop
pop
sub
popf
xchg
pop
mov
mov
push
mov
xchg
push
dec
test
std
imul
fs
dec
push
fnsave
repz
push
ror
jle
mov
sub
cmp
sbb
xor
scas
xor
test
or
mov
psrlw
cmp
adc
ret
xchg
and
hlt
pop
dec
dec
test
aaa
mov
xchg
ins
mov
nop
cld
inc
retf
mov
fisttp
pop
mov
xchg
(bad)
(bad)
popf
js
mov
pushf
div
mov
fwait
mov
sub
mov
dec
cmp
retf
loop
add
jmp
stos
inc
mov
jmp
mov
jmp
lea
stc
mov
(bad)
adc
mov
mov
repnz
ja
mov
mov
fbld
add
push
add
add
ss
xchg
enter
and
ja
or
sbb
mov
jge
mov
sub
mov
pop
or
push
lock
inc
push
je
inc
loope
mov
pop
aaa
(bad)
iret
inc
in
pop
jae
arpl
lods
sub
mov
leave
in
add
fbld
push
jg
mov
jmp
dec
pop
jle
test
sbb
inc
mov
mov
in
jmp
inc
outs
leave
movs
dec
sti
sbb
cmp
sub
jecxz
imul
add
and
ins
adc
adc
mov
cmp
mov
inc
pusha
xchg
cmp
daa
xchg
icebp
adc
sbb
rcl
xor
mov
aaa
jmp
pushf
out
gs
iret
add
loopne
mov
fdivr
mov
inc
jb
xchg
ds
repnz
push
out
test
cld
add
lds
stc
mov
mov
push
inc
movs
push
in
fadd
cmp
test
push
jg
outs
ficomp
add
stos
or
test
dec
mov
xchg
jg
stos
js
stos
inc
jnp
jl
lea
aam
test
push
xchg
repnz
fwait
xor
mov
cmps
mov
test
int
pushf
or
xor
dec
and
and
sbb
cmps
pusha
cli
push
fwait
rcr
mov
aam
push
push
jecxz
loope
mov
push
cmp
jnp
ins
in
push
sar
jns
enter
data16
inc
out
jle
jle
(bad)
xlat
mov
mov
pusha
inc
xchg
pop
dec
push
mov
push
retf
add
sahf
mov
add
stc
dec
shr
xlat
(bad)
pop
cmp
pop
cmp
call
xor
mov
push
mov
adc
sar
cmp
inc
push
mov
imul
xor
mov
mov
xchg
jb
jno
sbb
push
cli
mov
fcmovbe
fild
aas
xchg
in
leave
test
cmp
push
adc
std
shr
inc
std
gs
jl
bound
adc
jae
scas
mov
jecxz
rol
jne
mov
or
or
sbb
in
cmp
loopne
call
mov
icebp
mov
fmul
add
dec
mov
pop
ret
mov
ret
adc
fcom
jle
adc
mov
push
sbb
xor
call
adc
jno
xchg
sub
sahf
ror
xchg
scas
pop
shl
cmp
fwait
or
movs
pop
mov
pushf
inc
sbb
int3
jge
xor
outs
jno
adc
jmp
and
mov
cmp
shr
inc
ret
pop
pslld
out
jecxz
push
imul
dec
iret
les
jg
inc
scas
ins
adc
movs
dec
sbb
into
(bad)
cwde
fmul
fld
xor
stos
shl
bnd
jbe
xchg
ja
scas
cmc
into
xor
lods
inc
pushf
inc
or
(bad)
lock
icebp
lahf
fnstenv
rcr
mov
push
add
or
test
inc
push
(bad)
jns
push
sub
push
mov
into
fcom
cmp
dec
inc
pop
int
cmp
xchg
pop
sbb
rcl
push
hlt
cs
out
or
nop
jo
push
push
scas
icebp
(bad)
ds
xor
mov
push
jbe
adc
ja
add
and
and
ds
mov
hlt
mov
add
cmp
sbb
mov
dec
cmp
shl
xor
inc
xor
jnp
dec
inc
and
ret
cmps
pop
rcl
out
ret
aas
or
adc
push
xchg
fsubr
loope
inc
outs
movs
xlat
pop
popa
sub
cmps
popa
mov
cmp
retf
in
add
cmp
jmp
cdq
mov
sbb
sar
inc
fs
scas
or
je
repz
shl
push
xchg
mov
je
repz
pop
xchg
gs
outs
mov
sub
cmp
cmps
xchg
jle
pop
mov
dec
dec
aad
sbb
cmp
call
xchg
jp
test
lds
push
test
adc
aam
(bad)
cmp
cmp
and
mov
call
mov
iret
xor
add
sbb
outs
les
xchg
icebp
dec
test
sbb
call
repnz
jge
xor
(bad)
mov
lods
pop
or
fisub
jmp
jge
test
sti
(bad)
test
aaa
xchg
xchg
push
dec
cs
jnp
loope
fsub
pop
push
push
push
mulps
imul
hlt
mov
mov
jecxz
adc
loope
retf
fistp
loope
(bad)
mov
dec
loop
jmp
sti
add
mov
(bad)
call
cmc
mov
sub
rcl
sbb
push
repz
rcr
and
cdq
sub
mov
dec
pop
je
xchg
call
add
mov
mov
push
lods
jecxz
ficom
mov
push
sbb
jle
hlt
sbb
xchg
call
ins
jl
pop
in
out
mov
inc
mov
add
and
(bad)
mov
fs
jmp
inc
fisubr
xchg
arpl
and
or
into
cli
test
and
mov
mov
pop
mov
push
and
mov
aam
cmc
or
jae
pop
jnp
popf
jnp
outs
jp
repnz
jae
lods
lahf
pop
push
add
inc
sub
fild
bound
sbb
aaa
mov
ss
mov
sbb
xchg
mov
sub
outs
xor
cmc
cdq
les
sub
ins
fild
pusha
(bad)
addr16
nop
or
and
jbe
pop
add
mov
pop
in
sub
shl
inc
ins
pop
movs
sub
dec
dec
scas
or
fldcw
cld
leave
pop
ficomp
jle
inc
repz
ja
and
das
test
cmp
mov
jbe
lahf
sbb
adc
push
mov
and
sub
retf
inc
loopne
inc
inc
movs
jo
pop
scas
cs
fsubr
arpl
nop
inc
xor
in
sti
inc
shr
push
scas
inc
outs
mov
dec
fdivr
push
out
inc
inc
cmps
out
or
jmp
xchg
sub
call
das
repz
pop
iret
xor
xor
arpl
mov
add
push
loopne
outs
imul
xchg
mov
cld
retf
xchg
pop
mov
dec
fstp
arpl
or
and
in
jne
movs
scas
xor
mov
dec
dec
jg
ds
cmp
cmps
cs
clc
xlat
cmc
iret
sub
ret
loope
fst
movs
and
stc
retf
push
in
outs
loop
aad
repnz
push
jb
es
sbb
es
daa
call
cmps
imul
cmps
xor
shl
mov
iret
add
xor
dec
jbe
movs
repnz
fcom
dec
and
xor
pop
add
inc
mov
inc
xchg
aas
sub
push
bound
adc
inc
fnstsw
(bad)
xlat
neg
xor
cld
lea
push
in
sub
(bad)
push
call
adc
cdq
aam
and
sbb
or
inc
arpl
pop
mov
jecxz
popa
dec
inc
add
pop
ror
add
add
sar
or
shr
inc
daa
dec
mov
in
int3
loopne
xchg
jg
sub
mov
xchg
jae
and
adc
xchg
cmc
fild
mov
or
xor
aam
mov
jl
movs
cmp
jmp
das
jnp
sbb
jecxz
pop
pop
(bad)
fldcw
idiv
mov
in
sub
xchg
dec
scas
shr
fs
into
mov
nop
dec
sbb
out
(bad)
popa
push
mov
sub
ret
in
sbb
jp
inc
pop
enter
sbb
sub
xchg
daa
sub
arpl
mov
add
sbb
fmul
vmaxsd
sar
aaa
cmps
or
mov
jo
mov
nop
inc
adc
loop
push
arpl
repnz
add
mov
imul
xchg
mul
hlt
xchg
mov
sahf
outs
dec
xor
mov
ret
push
inc
mov
mov
mov
nop
xor
sar
mov
loope
mov
js
mov
imul
cwde
jne
lahf
push
pop
sbb
xchg
nop
scas
ins
or
cmp
std
ins
cmp
scas
hlt
nop
adc
cmp
dec
sbb
in
div
jmp
fdivrp
push
jle
mov
cmc
xchg
push
push
(bad)
add
lock
cdq
xor
push
sar
add
lds
sub
dec
adc
scas
sti
sbb
jl
fs
sbb
cmp
sbb
outs
pop
cmp
les
pop
jne
(bad)
xchg
pop
pop
rol
push
mov
mov
push
sbb
ror
xor
daa
push
or
dec
mov
clc
retf
mov
inc
repz
xchg
in
js
cwde
mov
fld
ja
sbb
popf
mov
sbb
shl
cmp
jle
pop
cdq
fld
cmp
cwde
mov
aas
neg
mov
ret
into
mov
cmp
or
sbb
mov
aas
add
test
inc
jne
out
div
mov
adc
repnz
and
and
pop
jae
into
lock
xchg
xor
(bad)
retf
sub
sbb
cs
js
cmp
retf
(bad)
int3
pop
xchg
daa
cld
aad
(bad)
xlat
and
arpl
fnsave
mov
cli
cmp
xor
(bad)
nop
daa
jne
cmps
sub
ret
mov
aaa
clc
and
sbb
xor
cmp
xchg
movs
push
aas
repnz
pop
or
inc
cmp
mov
jb
xchg
pop
popf
dec
ins
pop
cmps
call
or
mov
and
shl
out
sbb
shr
pop
sub
inc
dec
xor
pop
cdq
jae
je
cmp
in
jmp
dec
retf
adc
xchg
jae
cmp
call
mov
or
pop
stos
sbb
xor
jmp
sub
shl
dec
sahf
lahf
aaa
dec
into
jmp
into
repz
sub
js
in
(bad)
mov
test
popf
and
mov
test
mov
(bad)
shl
aad
xor
movs
retf
leave
jo
in
mov
movs
sbb
daa
pop
rol
mul
inc
add
cmp
cmps
or
fnstsw
out
pop
pop
pop
push
mov
mov
fs
mov
pop
in
shl
sub
shr
xor
inc
cmps
add
cli
rcr
pusha
and
dec
aas
syscall
mov
cmps
lods
and
push
(bad)
movs
mov
arpl
(bad)
jne
gs
cmp
xor
ds
(bad)
mov
cmp
out
add
or
dec
ins
inc
(bad)
imul
loop
not
sbb
xor
and
in
sub
std
in
push
and
mov
js
scas
pop
inc
mov
add
ror
lds
(bad)
setno
rol
into
test
in
sar
mov
pop
or
lock
lods
sub
push
cmps
adc
add
adc
xchg
xchg
jg
fld
mov
adc
jo
xor
(bad)
mov
sbb
sti
test
and
sbb
sahf
sar
xor
mov
jle
xchg
ror
sub
fnstenv
repnz
mov
sbb
or
and
push
jmp
fmul
push
xor
sub
ss
jmp
xor
add
hlt
(bad)
lods
xchg
popf
xchg
hlt
ds
pop
enter
popf
ins
mov
pop
xlat
xor
add
mov
jmp
ja
stos
push
(bad)
add
shr
push
cs
in
scas
push
ja
dec
cli
sub
enter
or
sbb
or
popf
adc
mov
sub
cwde
retf
iret
xor
mov
dec
out
outs
into
ficomp
push
push
inc
enter
add
ror
cld
dec
and
xor
sub
retf
lds
data16
pop
push
(bad)
jecxz
test
add
lods
movs
ror
cmp
and
mov
adc
jo
fdiv
rol
fucom
xchg
jae
push
mov
xchg
ins
sti
(bad)
fild
ficom
enter
pusha
cs
lock
adc
shl
out
jecxz
ds
pop
fidiv
bound
hlt
or
mov
pop
xlat
xchg
xor
loope
call
xchg
or
data16
pop
jge
xchg
std
retf
int
(bad)
and
lea
jbe
mov
mov
lods
leave
repnz
jo
mov
(bad)
mov
xor
cmc
mov
push
fsubr
sti
stos
xor
xchg
mov
repnz
loop
mov
pop
add
sbb
out
hlt
xchg
je
or
sbb
jo
xor
lahf
xchg
not
lds
inc
or
stc
hlt
and
xchg
adc
sti
jle
sub
sbb
rsm
push
fstp
jae
push
shr
mov
adc
push
mov
test
sqrtps
pop
or
xchg
data16
inc
or
lods
jp
les
or
cs
dec
pop
mov
sbb
loop
in
cmc
in
pusha
push
adc
and
mov
cmp
and
jecxz
ja
sub
pop
daa
arpl
test
dec
das
sub
lahf
sub
mov
xchg
jmp
adc
sahf
cdq
xor
retf
data16
xlat
dec
int
push
cmp
hlt
pop
jmp
call
inc
lds
xchg
call
adc
xor
adc
pop
lods
data16
inc
pop
push
test
adc
pusha
mov
lds
sbb
dec
add
mov
mov
sbb
cmps
cmp
retf
ror
test
add
jnp
mov
jns
jmp
or
call
icebp
dec
mov
add
cmp
sub
xor
sti
pushf
call
ds
mov
scas
(bad)
cmp
cmc
dec
adc
dec
jnp
pop
and
mov
cmp
in
shl
mov
and
hlt
jno
pop
mov
(bad)
jae
ss
add
stos
xor
push
pop
mov
movs
mov
push
pop
(bad)
cmovo
bound
inc
pop
and
in
movs
xor
dec
rcr
cmp
call
mov
add
cli
(bad)
retf
xor
adc
pop
mov
pop
loope
repz
xchg
mov
push
out
mov
sar
or
jne
and
mov
mov
inc
xchg
mov
mov
push
xchg
dec
repz
jb
add
out
lods
mov
push
rcl
cmp
fld
es
adc
retf
sar
das
imul
outs
push
xor
pop
mov
add
jmp
push
fimul
daa
xchg
and
mov
inc
ret
(bad)
cli
pop
and
pop
cdq
add
sub
rol
jp
sub
sbb
push
adc
jecxz
xchg
sub
and
push
into
or
popa
std
imul
mov
cmp
push
hlt
call
lea
push
je
fsubr
jmp
pop
push
push
out
bound
sbb
inc
jle
mov
ds
mov
(bad)
xchg
inc
xchg
pusha
jecxz
xor
stos
aaa
pop
test
sub
in
jp
pop
xchg
pop
jmp
fnstsw
sbb
leave
and
xlat
jns
mov
dec
cmp
imul
pop
pop
call
adc
dec
nop
popf
into
sbb
push
pop
stos
pop
mov
sub
hlt
pop
lock
enter
pushf
outs
push
add
dec
in
call
enter
sbb
mov
xchg
pop
or
push
mov
jg
cmp
in
aad
ds
fld
pop
mov
std
std
sbb
or
(bad)
fadd
cmp
hlt
je
loope
popf
arpl
mov
or
scas
fsubr
push
outs
jbe
lahf
add
xchg
xchg
jge
pusha
aam
jg
in
push
cmp
add
fcmovbe
cmp
je
mov
ret
add
call
aaa
dec
sub
lahf
idiv
sbb
mov
lds
cmp
ficomp
out
push
inc
pop
add
or
(bad)
xor
inc
lods
or
push
sub
mov
arpl
mov
sbb
adc
jo
mov
inc
mov
xchg
xlat
int
shl
jl
xor
sbb
pushf
pop
pop
ins
daa
jmp
or
repnz
add
cmp
inc
mov
sbb
int
fiadd
cmp
nop
cmp
dec
add
mov
cmp
imul
inc
xchg
push
sub
cmc
out
mov
sub
cmp
arpl
push
fsubr
lea
adc
mov
stos
iret
jl
sbb
xchg
ffreep
and
xor
neg
(bad)
clc
jns
inc
retf
cmps
xchg
jns
sub
push
push
arpl
in
xchg
test
(bad)
fiadd
popa
lahf
sub
and
or
inc
mov
xchg
jo
or
dec
adc
sub
test
cli
stc
rcl
scas
sub
jb
sub
dec
(bad)
int
cmp
push
lahf
xlat
pop
enter
jmp
or
icebp
fwait
(bad)
call
xor
mov
aaa
jns
xchg
(bad)
in
mov
push
into
jmp
in
pop
cmp
mov
cmc
adc
aaa
fwait
pop
xlat
retf
sbb
int
outs
std
stc
lds
jmp
cmovs
sub
retf
test
jmp
cld
xchg
ins
rcl
inc
pusha
dec
mov
clc
lea
xlat
std
xor
and
cmps
div
push
jl
adc
lods
push
aaa
ret
bound
xchg
mov
mov
popf
loop
ins
xchg
in
sysenter
xor
mov
xor
mov
aam
sar
div
mov
(bad)
jmp
loop
or
xchg
dec
icebp
add
scas
cmp
mov
push
cmp
mov
mov
lock
fs
hlt
inc
cs
push
rcr
loopne
pop
cmp
xchg
test
sub
les
add
(bad)
and
stc
adc
mov
push
dec
push
pop
sbb
mov
dec
xchg
xlat
arpl
movs
ja
pop
xchg
stc
add
mov
lea
lea
setp
pop
stos
or
push
aaa
xchg
cwde
dec
mov
lods
xchg
(bad)
and
loop
inc
mov
aaa
int
push
cmp
daa
aad
retf
scas
jg
mov
pop
or
pop
(bad)
mov
ror
ds
stos
and
loop
fild
rcr
push
jg
sub
hlt
scas
adc
push
and
ja
pop
jnp
mov
adc
ins
stos
lahf
in
pop
mov
xor
ficomp
scas
stc
dec
repnz
sbb
dec
cmp
sbb
sbb
pop
arpl
xchg
sub
adc
adc
jo
and
and
lock
fimul
fnstsw
adc
pop
sub
inc
mov
in
ret
sub
sbb
sub
shl
adc
add
sub
and
mov
cwde
daa
mov
ss
jmp
call
or
pushf
pcmpeqw
sahf
or
repz
sbb
jecxz
and
or
adc
(bad)
stc
xlat
fcomp
sahf
stos
out
fsubr
add
pusha
or
xchg
inc
sub
xchg
out
jb
cs
out
(bad)
hlt
aam
cmps
enter
aam
xchg
pop
and
push
push
call
mov
or
addr16
rol
push
xchg
sbb
and
sti
inc
xor
mov
(bad)
sub
movs
or
pop
sub
pop
jo
mov
inc
mov
mov
sbb
mov
dec
and
sub
xchg
xor
push
shl
sub
dec
xchg
ss
mov
cmp
and
add
xchg
inc
jbe
cwde
shl
mov
loop
cmp
sbb
aas
mov
xchg
ds
fistp
out
mov
inc
popf
out
icebp
jne
jg
les
cmc
pop
xchg
mov
or
fimul
aad
into
push
jl
push
push
pop
jle
imul
pop
dec
pusha
out
popa
xor
mov
xchg
sub
shl
inc
test
push
mov
aam
stc
xor
vpshufd
fisttp
into
sti
mov
ficom
xor
sar
nop
shl
out
int3
xor
fidiv
pop
cmp
sti
clc
call
outs
and
pop
mov
cld
loop
or
adc
mov
stos
stos
fbld
lea
call
in
nop
adc
jb
xchg
jle
sbb
fisubr
out
xchg
jge
mov
mov
jns
js
and
cli
or
bound
shr
dec
lahf
js
mov
stos
movs
dec
pop
dec
das
cmc
shr
sub
dec
pop
shr
cmps
js
pusha
data16
jmp
leave
mov
les
stc
mov
xchg
in
sbb
ss
js
in
xor
jo
cmp
mov
into
and
jb
lea
pop
icebp
mov
js
jle
sub
imul
rcl
and
jecxz
in
dec
dec
fst
fwait
aaa
(bad)
cld
repz
xchg
pop
xor
icebp
popf
jmp
xor
aad
sub
push
ins
scas
dec
hlt
cmp
add
inc
ret
lds
cmc
push
cli
mov
jmp
loopne
scas
adc
mov
cdq
jb
addr16
fsubr
sub
pop
jmp
adc
aas
imul
(bad)
mov
outs
mov
mov
nop
push
sub
xchg
inc
sbb
xor
sar
add
in
mov
test
mov
mov
dec
fs
in
imul
dec
fisub
movs
add
aam
in
div
jns
int3
or
mov
dec
add
dec
and
or
xchg
shl
push
movs
lods
or
or
les
inc
push
and
ret
call
push
stos
xchg
mov
sbb
fisttp
stc
(bad)
adc
mov
mov
popf
and
mov
sbb
retf
loop
xchg
inc
jmp
repz
out
stc
clc
cmps
(bad)
bnd
retf
push
ins
and
mov
scas
mov
pop
cs
fwait
mov
dec
out
(bad)
mov
mov
lahf
push
sbb
sbb
rep
push
cmc
lds
fisubr
ss
or
jo
movs
cld
inc
lods
xchg
add
and
adc
inc
pushf
int
inc
fwait
pop
push
mov
adc
mov
pop
cmps
jmp
push
loopne
pslld
cmc
popa
push
or
xchg
cmc
mov
cdq
mov
retf
rcl
sbb
add
mov
(bad)
pop
loope
lods
push
fstp
cdq
or
ffreep
xchg
idiv
xor
enter
movs
or
jne
mov
mov
dec
mov
out
pop
lea
test
fld
mov
xor
outs
fimul
jg
xchg
jl
sbb
cwde
mov
sbb
outs
scas
inc
stc
dec
cli
call
ret
xchg
ins
dec
sub
push
jmp
mov
frstor
jno
and
mov
sub
xchg
das
(bad)
hlt
stc
add
stc
xchg
in
loope
in
movs
cli
pop
dec
pop
mov
rcl
test
or
pop
lds
add
shl
iret
inc
xor
fs
cmp
adc
call
mov
ins
cmp
js
cs
cli
jmp
stc
xchg
or
push
xlat
pop
or
dec
xchg
xchg
test
mov
mov
in
xor
pop
mov
add
push
sub
xchg
and
ss
jnp
jbe
sub
call
out
mov
(bad)
xor
jo
icebp
inc
mov
mov
das
add
and
sub
shl
or
adc
in
and
jp
adc
int3
push
xchg
cmp
idiv
retf
pushf
daa
cmc
or
iret
into
adc
addr16
mov
fstp
ins
aas
imul
dec
mov
xchg
or
fcmovne
sbb
rcr
outs
add
arpl
pusha
test
push
outs
iret
into
jle
pop
jle
cld
mov
push
call
aad
inc
dec
sub
gs
cmps
jmp
push
cmp
in
sbb
sbb
sub
or
out
jl
scas
mov
movs
push
repz
push
in
int
mov
xchg
mov
(bad)
js
arpl
adc
pop
or
jne
xchg
aam
jnp
and
sub
inc
jmp
data16
div
cmp
sti
and
sbb
xchg
daa
jl
(bad)
cmp
fdiv
ja
jnp
mov
adc
cmp
lods
in
test
sub
mov
add
dec
aad
or
fadd
cmc
and
mov
scas
or
into
or
mov
iret
ret
sub
push
push
int
cmp
adc
xchg
push
dec
rcr
mov
jle
call
pushf
sub
call
cmps
push
(bad)
clc
fs
push
push
popa
jne
pop
xor
enter
push
xor
fcmovnbe
scas
test
jns
mov
fs
scas
pop
add
mul
mov
mov
add
dec
ds
sbb
push
dec
lods
lods
xor
mov
(bad)
loopne
cli
cmp
fidivr
sbb
jae
mov
mov
(bad)
cmps
push
push
(bad)
jecxz
mov
jb
jge
in
sbb
push
int
(bad)
cdq
sbb
adc
fstp
ficom
sub
push
jo
or
sub
fstp
test
ins
dec
repz
sub
mov
test
jp
cmp
fld
fmul
cmp
push
push
aaa
das
scas
push
pop
pop
xlat
sbb
mov
sbb
xor
loopne
bsr
sbb
pop
cmps
(bad)
jl
and
shr
stos
in
jne
push
hlt
mov
and
jns
push
push
sub
inc
loopne
fsub
jp
inc
add
inc
pop
(bad)
je
(bad)
repz
ins
cmp
retf
nop
push
movs
mov
push
push
adc
ret
int
and
dec
adc
jns
pusha
xchg
stos
lahf
ret
cmp
mov
pop
push
xchg
and
lahf
lea
mov
adc
xchg
sub
retf
pop
mov
push
jne
inc
icebp
nop
dec
cmp
push
fistp
arpl
pop
jp
jnp
scas
cmc
in
imul
jp
push
imul
adc
call
jecxz
cdq
mov
adc
pop
nop
fiadd
jbe
lods
ins
jg
stos
pop
daa
sbb
sub
outs
setnp
stc
adc
mov
mov
retf
pop
call
retf
rcl
mov
fld
mov
and
dec
jnp
enter
xor
mov
nop
in
and
in
dec
ret
mov
enter
xchg
cmp
popf
and
outs
adc
dec
push
mov
xor
hlt
mov
pop
jns
push
lods
push
add
sub
popa
inc
sar
jne
push
xchg
mov
(bad)
push
mov
enter
stos
or
adc
sbb
cmc
and
dec
push
push
repnz
aas
adc
sbb
sar
les
mov
rcl
mov
mov
jns
xchg
(bad)
mov
pop
pop
adc
xchg
xchg
push
sbb
adc
movs
fadd
add
lea
(bad)
cmps
jae
or
fcom
mov
dec
mov
or
jl
in
pop
mov
sbb
outs
cmps
fnstcw
xchg
jnp
pop
jmp
dec
cwde
jb
or
inc
jle
mov
dec
mov
mov
mov
out
mov
cmp
cmps
jnp
pop
fucomi
out
pop
outs
enter
cmp
sbb
mov
sub
pop
repz
adc
push
mov
inc
rol
int3
lds
add
dec
sbb
ins
sub
push
xor
inc
jo
xor
mov
mov
lea
leave
adc
stc
loop
jl
das
pop
ja
movs
stos
jmp
pop
cmp
out
out
jnp
pop
xor
sahf
imul
push
loopne
add
int
dec
inc
dec
(bad)
hlt
outs
and
cld
xor
dec
mov
xchg
cli
push
leave
call
inc
popf
jbe
dec
fadd
stc
dec
(bad)
movs
inc
xor
mov
mov
jge
pop
(bad)
aaa
cmp
stos
(bad)
out
and
pop
push
push
push
mov
cli
movs
loope
xor
xlat
pop
out
jecxz
jo
scas
adc
shl
jns
sbb
std
fsubp
pop
(bad)
sbb
jle
xchg
inc
xchg
jnp
not
xor
add
sub
and
fyl2xp1
popa
dec
lods
xor
ret
aas
mov
xlat
cld
call
sub
dec
xor
jbe
mov
or
in
xchg
out
push
mov
mov
into
imul
xchg
inc
mov
test
jns
imul
push
mov
xchg
cmp
xor
pop
fidiv
les
inc
adc
and
add
aad
retf
sub
daa
cmp
retf
std
pop
pop
mov
cld
ret
into
in
pop
hlt
sti
adc
das
cmps
sbb
lods
dec
cmp
push
xchg
push
pushf
jmp
outs
arpl
or
sbb
rol
sbb
(bad)
outs
not
push
mov
aaa
xchg
les
add
ja
pop
fndisi(8087
mov
fadd
movs
fistp
cli
inc
mov
ds
movs
pop
pop
cmp
shr
jmp
push
cmp
mov
out
dec
push
xor
xlat
pop
sbb
retf
dec
aas
outs
inc
ficomp
jg
push
pushf
js
sahf
sbb
cmp
aad
(bad)
mov
add
movs
(bad)
jge
push
and
pop
fisttp
mov
adc
cmp
mov
ret
pop
int3
or
mov
adc
repz
fmul
popa
sti
dec
movs
stos
sbb
mov
xchg
mov
and
aas
mov
jmp
popf
ret
dec
icebp
std
jne
inc
jecxz
stc
jbe
xchg
add
pop
push
data16
loop
adc
jp
pop
inc
scas
fs
push
push
aam
jns
out
and
adc
cmp
iret
loope
adc
ret
fs
std
xor
push
lock
xor
(bad)
mov
and
aam
(bad)
fst
xchg
addr16
test
fdiv
(bad)
test
out
mov
loop
fst
stos
sub
stos
mov
dec
jbe
test
aaa
fistp
aaa
cmp
rcl
cmp
xchg
ret
mov
aas
pop
bound
and
ds
clc
mov
shl
pop
or
mov
pusha
mov
shl
fcomp
cmp
adc
out
dec
mov
js
mov
jno
mov
repnz
repnz
int3
mov
ja
xchg
out
jnp
sti
fild
dec
and
push
push
scas
mov
loope
lds
cmc
fsubr
dec
add
cdq
imul
retf
ror
xchg
imul
fwait
lods
add
and
js
outs
cdq
loope
scas
cmp
xor
out
push
xchg
int3
mov
lods
jp
outs
cld
mov
loopne
sbb
pcmpeqb
or
std
jge
jno
data16
jmp
adc
bound
xchg
ins
stos
xor
fadd
ds
das
hlt
loop
(bad)
jg
pop
icebp
repz
mov
test
movs
jmp
enter
(bad)
mov
cli
dec
test
mov
or
xor
xchg
dec
(bad)
pop
jnp
push
push
call
fist
ins
jb
push
in
in
xor
ret
scas
mov
dec
loopne
mov
cdq
inc
cdq
jns
pop
jle
pop
or
ret
ja
test
rcr
out
and
push
mov
mov
mov
les
and
popa
mov
xchg
dec
add
mov
pop
inc
push
cs
mov
fmul
mov
push
mov
pop
add
xchg
mov
shr
(bad)
retf
aas
cld
jge
inc
mov
movs
jnp
jb
inc
sahf
sub
jp
std
js
clc
cwde
sub
pop
add
sbb
mov
retf
mov
imul
mov
push
repnz
and
jp
jnp
lahf
or
push
aas
inc
popf
pop
dec
ins
je
mov
es
in
sti
sbb
dec
cmp
lds
cld
push
pop
jp
clc
mov
jns
push
jl
xchg
cmps
fwait
mov
loope
xchg
inc
std
pop
mov
stos
mov
mov
fisttp
mov
jp
pop
and
xchg
pop
and
cwde
xchg
aad
cmp
xor
test
xchg
push
das
adc
mov
sub
xchg
push
fsub
xchg
fcom
jecxz
push
int3
lea
in
ins
add
mov
mov
jnp
mov
pop
sbb
or
pop
test
(bad)
in
and
and
out
lahf
aas
test
leave
pop
cdq
fdivr
cmp
inc
loopne
push
(bad)
es
sbb
movs
push
pop
mov
dec
imul
adc
(bad)
jbe
es
mov
bound
jb
mov
rol
jmp
lods
icebp
push
enter
jmp
xchg
adc
or
sub
loop
jecxz
inc
ins
add
sbb
and
sbb
fucomp
fdivr
shl
outs
cmp
jecxz
ficom
and
dec
inc
pop
addr16
ss
jnp
pop
xor
adc
inc
arpl
loopne
cmp
jno
mov
cmp
inc
inc
cmps
ret
rcl
jno
cs
pop
(bad)
adc
fdiv
or
repnz
and
and
rcr
loop
sbb
push
xchg
(bad)
sub
and
mov
inc
push
bound
dec
sar
fiadd
bound
(bad)
xchg
loopne
fcmovbe
fwait
ret
test
jae
dec
dec
cmp
sub
(bad)
leave
movd
pop
popf
aaa
cwde
jge
mov
data16
std
mov
and
xlat
(bad)
pop
stos
jl
dec
and
push
pop
gs
fsubr
and
fs
loope
push
(bad)
es
jo
mov
pusha
dec
fistp
mov
stc
cwde
xchg
sbb
jge
inc
add
bound
mov
das
mov
sbb
jne
mov
xchg
cmps
es
mov
nop
push
sbb
adc
xchg
in
add
or
mov
mov
push
rcl
shl
mov
and
cmp
cs
addr16
sbb
cmp
mov
pop
xchg
push
sbb
mov
sub
test
pop
jnp
cdq
pop
movs
jg
mov
jge
push
cmp
sar
cmp
test
add
fdiv
cli
xlat
push
cli
adc
jle
pop
fiadd
mov
jmp
pop
js
mov
aad
(bad)
fidivr
push
mov
in
xor
xor
call
push
adc
adc
lods
imul
sub
pop
rol
pop
into
fild
add
mov
mov
mov
dec
jnp
xchg
push
repz
jmp
sub
ret
or
ins
mov
mov
pop
mov
cmc
xchg
shr
(bad)
pop
or
add
sub
pop
es
sub
pop
and
push
addr16
lods
fucomip
add
fdiv
and
push
push
sbb
push
push
or
xchg
sub
fiadd
lock
add
rcr
es
retf
pop
inc
push
push
cmps
sub
mov
clc
mov
aaa
cmp
aad
dec
add
pop
xchg
dec
push
jge
fsubr
push
sti
ror
xchg
dec
cmp
adc
inc
ins
adc
adc
jno
fwait
xchg
cmp
xor
cmp
jg
pop
mov
inc
stc
das
sbb
jo
fwait
adc
je
outs
lds
jnp
sub
cmp
repz
ret
push
mov
aas
hlt
dec
scas
xchg
cmp
pop
add
or
ins
test
mov
in
bound
push
jnp
cmps
or
not
fs
inc
out
fldenv
pop
cmp
or
cdq
and
mov
test
mov
jecxz
pusha
test
(bad)
xchg
js
sbb
fdivr
pop
popf
push
rcl
add
sbb
fdivr
inc
add
je
out
mov
push
lds
and
ins
data16
adc
xchg
daa
jmp
and
inc
jo
dec
jo
out
jl
int
inc
jne
or
xor
mov
sub
add
sbb
xlat
(bad)
jg
inc
xchg
adc
sbb
(bad)
hlt
xchg
dec
xor
mov
xchg
shr
push
mov
mov
push
gs
jne
jl
(bad)
das
push
out
sub
fucomi
hlt
inc
popf
ja
mov
or
jae
sbb
pop
inc
popa
cmc
loopne
dec
or
daa
dec
dec
dec
call
daa
and
mov
jns
dec
stc
sub
mov
in
imul
mov
or
cmp
mov
loope
movs
fistp
and
in
ja
xchg
sbb
dec
sub
push
movs
adc
js
cmp
xchg
xor
nop
push
pop
test
movs
in
pop
cmc
mov
sbb
ins
cld
cvtps2pi
out
jmp
push
push
inc
adc
movs
pmuludq
cmp
cmp
(bad)
in
movs
imul
pop
jecxz
sub
jl
dec
mov
out
cmps
dec
movs
inc
mov
sti
test
(bad)
jg
loope
mov
mov
or
ret
or
scas
fcom
rcr
add
sbb
scas
mov
jae
ins
push
jmp
cmp
mov
retf
pusha
add
pop
or
int3
add
dec
ror
(bad)
pushf
jg
dec
test
adc
popf
aad
mov
push
add
mov
push
mov
lds
and
xlat
jecxz
call
fbld
mov
gs
fisubr
(bad)
fbld
pop
jo
or
push
pop
add
scas
xor
test
pushf
jecxz
xor
mov
dec
cmp
mov
pop
shr
cmps
mov
and
mov
mov
adc
inc
bound
mov
sub
push
test
aas
outs
lock
sbb
sbb
mov
pop
cld
mov
shl
push
inc
sbb
push
push
mov
pop
ss
dec
lds
xor
xchg
push
stc
jns
sbb
xor
adc
mov
dec
jns
pop
and
ret
or
pop
ror
jne
arpl
dec
jo
mov
and
mov
inc
fsubp
xchg
das
or
inc
mov
inc
adc
sbb
dec
sbb
or
cmps
mov
test
inc
xchg
mov
pop
(bad)
xchg
push
push
cmp
jmp
push
dec
repz
arpl
gs
add
cmp
sbb
movs
clc
cmp
sbb
push
je
jns
or
imul
mov
mov
outs
xchg
(bad)
cdq
sub
xor
repnz
jg
xlat
in
inc
std
daa
or
(bad)
lock
add
xchg
iret
imul
and
fsubr
out
pop
sbb
gs
bound
hlt
pop
sti
(bad)
adc
fwait
out
int
icebp
(bad)
(bad)
push
imul
in
jmp
push
pushf
jg
pop
or
xor
pushf
xor
xor
mov
cld
pop
mov
nop
enter
pop
jmp
add
and
dec
or
jo
jno
sar
fild
mov
dec
outs
jns
fisttp
retf
je
inc
scas
es
mov
xchg
je
push
lods
sub
xor
mov
jbe
mov
cmp
sub
cdq
xchg
scas
xchg
pop
fnstenv
not
iret
repz
xor
lods
scas
cmp
(bad)
inc
cmp
popf
or
arpl
lea
inc
add
popa
xor
sub
imul
jl
xor
push
lock
jp
fimul
inc
jbe
sbb
movs
(bad)
jp
scas
sbb
and
sub
sub
test
test
(bad)
fldcw
das
pop
test
idiv
hlt
cmp
scas
rol
inc
sbb
mov
cmps
hlt
sahf
pop
add
daa
lods
repnz
jo
div
push
mov
xchg
sbb
cli
pop
fld
adc
mov
push
mov
idiv
xor
iret
sbb
fadd
sub
iret
(bad)
sub
jmp
mov
xor
or
call
lods
push
out
ins
xor
repnz
xchg
out
mov
leave
push
ja
retf
mov
fidiv
add
leave
xor
sub
les
iret
test
dec
(bad)
adc
sub
jno
mov
out
mov
sti
repnz
in
fdivr
cwde
cmps
inc
dec
dec
pushf
test
sbb
call
xchg
sbb
ror
jb
ss
das
movs
mov
mov
push
test
std
xchg
cli
sbb
cli
mov
mov
xor
cwde
out
fs
pop
sahf
or
xchg
xchg
mov
cmps
js
popf
sbb
imul
cli
js
adc
call
cli
cmp
(bad)
jo
mov
repz
aam
test
mov
pop
xchg
mov
sbb
je
imul
or
push
mov
and
(bad)
jg
rol
push
jnp
adc
or
ins
adc
inc
lods
dec
shl
mov
scas
popa
and
cmps
mov
icebp
shr
popf
mov
in
cmp
fwait
dec
cmc
xchg
pusha
pop
pop
(bad)
sti
mov
bound
pop
jbe
pop
lods
sti
dec
fldenv
and
cli
mov
loopne
ret
rol
sbb
mov
mov
(bad)
dec
and
fpatan
es
hlt
fadd
loopne
pop
jae
les
lea
das
inc
xor
jmp
jmp
cmp
cs
ds
je
jnp
cli
mov
repz
or
jno
ja
(bad)
fistp
inc
hlt
shl
pop
pop
nop
xchg
jp
sub
push
in
pop
fadd
int3
popf
scas
ins
jnp
loopne
fwait
jnp
add
fdivr
fcom
dec
jl
xchg
in
ret
daa
and
pop
stos
add
inc
nop
aam
sbb
int
call
cmp
xchg
data16
add
repnz
jbe
pop
cmc
xor
xchg
mov
ins
or
jo
push
jb
add
sub
into
add
inc
test
daa
pop
inc
jo
je
add
das
or
mov
cld
stos
mov
cwde
add
out
xchg
scas
xchg
xor
ins
(bad)
in
imul
mov
in
jae
inc
stos
inc
push
fcom
aas
pop
adc
push
repnz
inc
pop
fsubp
es
jbe
xor
enter
int3
sub
sbb
int3
adc
jmp
push
jo
into
adc
adc
mov
xchg
cmp
ja
mov
and
mul
xchg
gs
stos
(bad)
xchg
add
or
(bad)
(bad)
xchg
in
fldenv
jge
pop
test
dec
adc
xor
repnz
and
cdq
sub
jne
sub
jmp
xor
cmps
or
(bad)
(bad)
pop
mov
push
or
sub
xlat
pop
dec
mov
adc
neg
pop
sbb
popf
daa
mov
add
add
in
jnp
pop
cld
jmp
push
lods
fcom
pop
icebp
push
call
test
and
ins
pop
jne
lods
dec
cdq
sbb
lds
inc
(bad)
cli
xchg
dec
inc
jl
test
fwait
xor
cmp
loope
je
scas
aad
cmp
pop
mov
push
jmp
dec
loop
stos
xchg
sahf
xor
or
cli
jmp
or
mov
mov
scas
add
aad
sbb
cwde
ins
mov
pop
jle
fadd
sbb
rcl
xchg
mov
cmp
in
call
aaa
leave
cdq
jg
stc
mov
add
dec
jmp
loope
pop
push
fnsave
stos
movs
int
sub
hlt
(bad)
inc
icebp
sub
pop
cmc
int3
xchg
mov
pop
stos
stos
cwde
pop
push
shr
jae
mov
into
test
push
mov
call
stos
inc
pop
pusha
mov
push
ror
cmp
and
bound
(bad)
push
iret
sub
push
push
popa
cdq
add
loope
sub
into
dec
adc
test
cmc
mov
push
stos
ret
mov
sub
push
gs
mov
addr16
stc
aad
test
(bad)
cmc
sub
repnz
dec
stos
sbb
adc
lods
(bad)
ds
jp
xchg
xchg
dec
or
sub
call
mov
cs
adc
fst
mov
sahf
dec
mov
stos
or
xor
jecxz
call
into
ss
dec
imul
bound
arpl
scas
xchg
mov
loopne
stos
loope
rcl
lods
sti
cmp
mul
aam
pop
pop
fisub
es
movs
dec
cmp
cmp
je
cmp
jno
xchg
jnp
test
in
xchg
aad
cmp
mov
push
inc
pop
push
scas
or
cmps
les
cmc
sbb
jge
jns
jle
add
push
popf
movs
fsubr
lods
test
test
arpl
lock
movs
jo
cdq
lods
mov
fldcw
pushf
dec
test
cmc
fdiv
in
push
sahf
mov
std
outs
mov
movs
mov
mov
iret
movs
shr
jb
test
addr16
pop
in
inc
or
add
mov
pusha
xor
repz
mov
mov
lds
sbb
lods
pushf
xlat
and
push
repnz
shr
in
mov
popa
pop
repz
or
pop
jecxz
movs
xor
jb
(bad)
mov
push
loope
and
das
jmp
stos
mov
sub
mov
jne
push
imul
xor
or
out
out
stc
pop
sub
xor
out
ret
ret
or
popf
or
pop
pop
or
fcom
shl
push
ds
es
std
cli
xlat
(bad)
sub
mov
and
ins
ret
xor
enter
mov
mov
inc
fs
daa
mov
add
jns
loopne
in
in
mov
mov
xchg
sar
das
in
cdq
sbb
imul
add
pop
and
and
mov
scas
adc
pop
scas
(bad)
mov
mov
loopne
fild
xor
fisubr
(bad)
dec
retf
dec
sub
xchg
fisubr
jb
push
in
or
mov
mov
add
leave
mov
nop
out
clc
sbb
and
or
fwait
les
shr
les
int3
aam
popf
out
push
and
or
mov
add
int
xchg
cli
inc
imul
and
call
mov
mov
push
add
jg
stos
mov
(bad)
mov
fdiv
(bad)
cmp
jbe
ja
imul
xchg
inc
retf
sub
cmp
push
dec
sti
xchg
add
fnstenv
sub
mov
imul
in
add
ror
jnp
fisubr
cld
in
mov
fst
xchg
pop
cmp
xchg
scas
int
movs
or
iret
sbb
add
js
ds
jg
jo
mov
xchg
xor
jae
mov
icebp
popf
adc
lea
(bad)
dec
rol
pop
mov
inc
cmp
sbb
pushf
and
push
push
xchg
and
jecxz
fnsave
jno
cwde
xchg
lods
stos
cmp
fistp
aam
pop
jecxz
xor
cmp
cmp
cmp
xchg
icebp
adc
mov
xor
mov
cmp
retf
jp
test
and
xor
cmp
xchg
inc
stos
or
mov
sbb
mov
push
or
jge
mov
dec
jnp
into
(bad)
retf
loopne
mov
adc
iret
sti
adc
stos
mov
clc
cmp
mov
jle
into
fisttp
in
scas
xor
das
xchg
out
pop
ret
mov
push
cmps
ds
mov
outs
mov
out
xor
int3
cwde
cmc
dec
mov
sbb
pop
scas
mov
jbe
inc
push
push
xchg
repz
pop
fild
mov
jmp
push
repnz
loop
cmp
loope
ds
leave
lea
shr
sub
outs
and
pop
(bad)
push
test
out
dec
jno
cmp
lods
aad
xchg
dec
test
pop
mov
mov
xor
(bad)
out
mov
stos
ss
and
or
test
cwde
js
xchg
mov
push
pop
xchg
pop
fbstp
push
cmp
jmp
(bad)
in
xchg
movs
ins
jecxz
jmp
mov
addr16
ja
jmp
lods
pop
jmp
fild
xor
adc
mov
adc
sbb
pop
cmp
dec
sbb
mov
(bad)
push
jno
or
jne
je
in
shl
adc
mov
inc
loopne
adc
mov
ret
sbb
test
jns
fnstsw
xchg
and
sub
inc
lds
std
dec
out
out
push
popa
inc
inc
movs
cdq
pop
add
and
push
push
push
pusha
xchg
arpl
cld
dec
mov
ds
stos
pushf
lods
inc
jmp
and
into
push
jl
or
sub
dec
pushf
mov
fs
sub
test
pop
cmp
and
add
xor
xchg
mov
test
(bad)
in
ss
sbb
mov
adc
xchg
enter
xchg
and
ins
div
cmp
pop
sub
mov
pusha
mov
jo
jb
mov
adc
jno
mov
add
in
jle
mov
add
xlat
dec
adc
retf
dec
sub
dec
add
push
mov
jne
das
inc
dec
pop
pop
sub
or
or
dec
in
mov
mov
push
add
rcl
(bad)
pushf
inc
mov
sbb
repnz
sbb
xor
and
dec
push
int
enter
mov
inc
aas
jmp
jb
das
adc
test
retf
add
inc
stos
mov
(bad)
ficomp
outs
sbb
pop
pop
jbe
and
sahf
rcr
scas
adc
mov
mov
(bad)
in
arpl
loopne
jnp
push
sbb
stos
test
dec
fcmovnb
push
push
push
rol
test
adc
xchg
add
das
cld
(bad)
imul
ja
imul
es
rcr
ffreep
push
repnz
outs
sbb
nop
sahf
les
fdiv
mov
pop
xor
(bad)
pop
xor
out
iret
mov
push
push
(bad)
jle
ja
jo
cmps
lahf
xor
scas
push
test
pop
out
movs
jge
push
std
sbb
call
lods
or
mov
mov
add
cmc
jge
xchg
dec
mov
aam
shr
cld
push
sbb
add
loope
and
mov
xlat
adc
mov
loop
and
mov
and
js
adc
jecxz
sub
cmp
fdiv
lds
(bad)
fs
dec
jmp
cs
out
shr
das
xor
mov
pop
retf
outs
int
fist
mov
ss
sbb
sbb
mov
xor
sbb
(bad)
sbb
cmc
imul
cmc
js
call
(bad)
pusha
fwait
sbb
inc
inc
cmp
test
cmp
xchg
or
js
cdq
and
int
sar
sub
aas
pop
cmp
(bad)
or
ret
out
sbb
call
repnz
test
dec
push
mov
dec
test
dec
sbb
cmp
ret
mov
jo
sub
imul
iret
movs
rcl
fcomp
pop
mov
and
(bad)
xchg
aas
ja
sbb
mov
or
inc
sbb
retf
push
outs
mov
(bad)
push
aas
ds
movs
sbb
push
(bad)
jns
or
mov
in
mov
dec
push
cs
loop
pop
fucomi
pop
cmp
add
sbb
sar
loop
cwde
fwait
mov
outs
test
ret
xor
cld
clc
movs
jle
push
jge
fbld
rcl
cwde
jecxz
lds
call
aam
out
adc
or
dec
xchg
fisub
jmp
cmc
daa
(bad)
in
pop
and
stc
mov
sti
mov
jl
arpl
mov
push
pop
xchg
mov
cmp
inc
mov
dec
psubusw
xor
out
add
movs
call
sbb
cmp
push
cmc
pop
or
aad
ret
inc
mov
sbb
xchg
mov
cmc
pop
aas
stos
cmp
push
out
enter
mov
mov
int3
outs
cmps
enter
dec
add
inc
mov
push
mov
mov
pushf
loopne
pop
fisttp
data16
sbb
add
or
js
clc
mov
mov
xor
xchg
fdiv
and
shr
cmp
inc
popa
shl
dec
(bad)
std
es
pop
xchg
sbb
ja
fstp
aas
movs
or
inc
jbe
daa
arpl
ins
sbb
gs
ins
ror
call
jnp
jbe
cwde
in
and
nop
mov
mov
xchg
xor
in
aam
xor
dec
cmp
or
sub
imul
mov
add
dec
push
iret
sbb
jl
sub
mov
outs
jno
shl
pushf
xor
push
mov
xchg
mov
mov
mov
out
inc
adc
aad
fistp
mov
cmps
cmp
setae
ror
mov
imul
sahf
dec
inc
push
(bad)
pop
jo
add
inc
adc
mov
dec
cmps
sahf
jb
js
and
and
inc
je
jb
jno
(bad)
arpl
in
pop
sahf
xlat
shr
dec
adc
(bad)
movs
mov
mov
dec
mov
xor
(bad)
pop
pop
jecxz
jb
or
test
inc
and
pushf
xchg
fmul
icebp
icebp
arpl
and
pop
sub
arpl
in
or
push
iret
dec
pop
cmp
dec
(bad)
inc
xlat
mov
add
sbb
leave
cwde
mov
cmp
std
hlt
sbb
jne
jmp
hlt
shr
in
xchg
imul
mov
daa
inc
jno
pop
pop
enter
mov
or
jecxz
add
mov
sbb
adc
jl
std
xor
push
(bad)
push
jbe
nop
push
les
ret
cmps
ins
out
pop
xchg
push
cmp
add
iret
icebp
fcomp
cs
cld
sbb
pop
mov
retf
fdivp
dec
inc
xor
xchg
inc
div
mov
mov
imul
xchg
fld
bound
cmp
out
dec
pop
cs
fidivr
dec
xlat
arpl
and
add
push
dec
jae
test
dec
mov
push
or
inc
rol
cmp
(bad)
aam
mov
or
jno
adc
sbb
iret
jb
or
fldenv
inc
mov
test
in
ja
sbb
ficomp
push
loop
jmp
inc
pop
xor
xor
mov
mov
dec
push
pop
jecxz
(bad)
cmp
and
add
inc
sub
rol
in
fwait
in
cmp
fs
and
iret
mov
repz
push
jge
into
inc
outs
mov
jns
push
cs
imul
(bad)
or
jmp
repz
inc
popa
out
mov
jo
in
inc
inc
sub
aas
pop
pop
out
(bad)
(bad)
push
cmps
push
addr16
in
and
cmp
lock
or
sbb
imul
into
push
mov
(bad)
sbb
out
idiv
push
pop
mov
test
rcl
outs
inc
pushf
xchg
cmp
dec
sbb
sub
shr
jbe
addr16
cwde
(bad)
mov
test
push
rcl
lock
xchg
not
xor
out
scas
pop
dec
mov
push
lock
out
sbb
xor
or
adc
sbb
shl
int
mov
jl
pop
sub
stc
cmp
call
icebp
out
fadd
jle
mov
push
enter
ins
pop
xor
cmc
cmovs
pushf
retf
xchg
movs
test
call
adc
fiadd
push
sub
mov
xchg
lea
(bad)
stos
(bad)
push
xchg
mov
ins
mov
cmps
outs
movs
sub
jnp
or
sbb
push
sub
or
sbb
test
ins
xor
arpl
jg
lahf
(bad)
idiv
mov
js
sbb
stc
pop
movd
xchg
xchg
fwait
icebp
call
sbb
push
or
sbb
scas
js
dec
stos
jmp
push
test
stc
dec
(bad)
mov
push
shl
mov
inc
fdivr
adc
(bad)
rol
pop
xchg
sbb
bnd
loopne
out
test
mov
or
mov
pop
out
mov
shr
cmc
aad
adc
scas
nop
adc
xchg
lods
int
fwait
add
jle
mov
inc
imul
add
sub
outs
push
or
adc
fwait
out
les
dec
ins
leave
iret
cmp
(bad)
mov
call
cmp
imul
test
cmps
call
push
repz
imul
xchg
mov
ins
inc
loop
lock
mov
mov
push
sub
sub
cld
ret
pushf
cmpxchg
lds
es
stos
movs
xchg
nop
cli
(bad)
push
jno
test
add
cmp
stos
push
mov
sahf
adc
jae
add
gs
push
mov
movs
scas
mov
aaa
sub
imul
test
imul
mov
pop
xchg
fcom
push
outs
mov
test
cli
pop
jno
das
push
inc
imul
retf
test
xlat
mov
sahf
push
push
test
int
xchg
mov
loopne
or
pop
and
in
daa
adc
sub
sbb
push
movs
ins
ret
inc
cs
adc
dec
xchg
xchg
jg
leave
or
jecxz
push
popf
cmps
pop
into
popf
(bad)
pop
cmps
iret
jb
aad
pusha
push
push
aaa
ins
(bad)
cmc
dec
and
dec
inc
sub
xor
mov
rcl
test
mov
push
mov
pushf
sub
xchg
xor
mov
mov
mov
mov
movs
or
xlat
(bad)
in
pop
dec
add
mov
inc
sar
das
cwde
mov
inc
in
mov
stos
out
push
jne
xchg
inc
jb
fdivr
es
lds
and
ficom
and
jb
and
pop
fwait
inc
in
push
outs
adc
and
repz
xchg
xchg
cmps
dec
ss
xchg
shr
out
or
sub
inc
ins
fdiv
cmp
sub
stc
or
ds
cmps
jb
cmps
mov
shl
mov
xchg
shl
out
or
call
in
jge
cwde
test
pop
xor
ja
out
ins
pop
and
sub
lea
xor
xlat
mov
push
inc
and
or
shl
test
ds
xor
ins
xor
out
loop
outs
movs
sub
cmp
adc
adc
(bad)
fild
cmp
add
or
out
das
pop
and
pop
sbb
dec
xchg
stc
icebp
mov
ficom
xor
loop
cwde
mov
rcl
fisub
push
mov
jbe
xchg
mov
movs
adc
jp
clc
iret
outs
mov
sahf
inc
xchg
mov
sub
add
cs
scas
xchg
push
pop
ror
inc
(bad)
out
jae
lds
pop
in
(bad)
push
inc
push
(bad)
push
adc
iret
movs
sub
sub
retf
popa
movs
fdivr
js
cmp
in
addr16
sbb
(bad)
call
xor
iret
dec
jo
mov
mov
lahf
push
loope
shl
add
pushf
sbb
ss
nop
xchg
ins
(bad)
sub
xchg
add
cli
clc
mov
ret
cwde
mov
xor
leave
mov
loop
gs
add
xchg
and
xchg
iret
or
cdq
aad
aaa
hlt
clc
sbb
bound
jge
mov
imul
xchg
popf
fcomp
pop
mov
loope
or
adc
xchg
loope
cmc
sar
or
mov
in
test
mov
jb
ins
pop
mov
push
mov
sbb
inc
mov
mov
add
lahf
sub
jb
fist
gs
in
mov
mov
enter
xchg
or
or
test
or
(bad)
dec
xchg
mov
(bad)
in
(bad)
jmp
test
xchg
push
fisubr
loop
pop
rcr
inc
push
not
sub
and
jnp
aas
out
out
adc
pop
sahf
sahf
fdivrp
pop
not
dec
or
adc
jnp
jns
pop
leave
clc
sub
repz
jmp
(bad)
in
mov
sbb
xchg
mov
sub
pop
ins
out
dec
cmp
dec
fidivr
into
jmp
movs
add
inc
add
pop
gs
dec
sub
jp
pop
push
inc
jmp
mov
ret
sbb
adc
out
adc
daa
cld
lods
cmc
pop
add
test
jno
loop
test
(bad)
ins
pop
dec
inc
call
sub
dec
and
out
cmps
ins
push
mov
sub
ss
jmp
push
xor
movs
push
push
jle
ja
lock
loop
adc
mov
mov
xor
pop
add
ret
and
jae
adc
push
mov
in
sub
mov
sub
dec
jge
dec
mov
xchg
sbb
pop
daa
mov
mov
mov
cmps
in
cmps
in
mov
pop
cmps
cli
test
jge
jae
lds
arpl
and
mov
nop
js
mov
push
neg
adc
add
mov
and
pop
inc
ds
jmp
cmp
(bad)
push
test
into
mov
push
enter
(bad)
push
fwait
lock
xchg
pusha
pop
jp
or
sub
in
add
ret
popf
test
pushf
jmp
dec
push
shr
push
sbb
add
shl
mov
mov
addr16
xchg
mov
mov
pop
add
ret
lahf
dec
xor
bound
mov
sbb
in
addr16
in
adc
aaa
in
pop
inc
ds
adc
cmc
inc
pop
and
mov
(bad)
call
cs
popf
xchg
jmp
xchg
idiv
xchg
inc
xor
mov
mov
fisttp
(bad)
clc
push
sub
lods
daa
push
xor
inc
mov
mov
jmp
xor
(bad)
mov
scas
scas
lock
mov
test
pop
lahf
lock
arpl
add
(bad)
hlt
xchg
dec
fistp
dec
bound
mov
add
adc
sbb
icebp
scas
out
scas
inc
cmps
sub
ins
in
xor
addr16
stos
adc
push
mov
sbb
jns
daa
retf
call
mov
mov
in
pop
pusha
adc
(bad)
cli
test
jecxz
cmp
pop
pushf
mov
inc
scas
sub
cmp
mov
adc
xor
xor
sub
int
(bad)
pop
lods
iret
jo
loopne
adc
push
sub
shr
fstp
cmps
cmp
loopne
outs
out
xchg
xor
retf
out
and
stos
and
pusha
scas
into
in
lock
fisub
pop
push
lahf
mov
lods
adc
inc
sar
icebp
pop
bound
fild
adc
dec
call
mov
cmp
sbb
je
xchg
mov
pop
pop
xchg
movs
dec
pop
push
adc
sub
mov
ins
fnsave
popa
mov
out
mov
mov
mov
test
fs
jae
sub
shl
xchg
fist
add
mov
sbb
retf
pop
add
push
sub
jns
and
cli
xor
inc
mov
mov
adc
mov
ds
js
mov
loop
stos
test
daa
gs
not
push
retf
adc
pusha
pusha
add
not
ja
je
mov
aaa
and
xchg
cmp
neg
mov
mov
repnz
fldcw
mov
add
sbb
cmp
sub
in
mov
sub
mov
sub
add
mov
xchg
das
fstp
(bad)
jnp
push
pop
mov
ja
pop
sbb
enter
adc
retf
adc
add
out
cmc
and
lahf
jge
push
dec
idiv
sub
mov
fnstenv
or
ds
sub
and
add
inc
mov
icebp
sub
and
out
mov
add
ins
cdq
aas
mov
nop
xlat
dec
aam
dec
cli
lahf
or
and
lea
imul
cmp
jbe
fadd
je
rcl
add
mov
clc
cli
outs
pop
sub
mov
aad
and
or
clc
retf
adc
mov
cmp
cmp
and
dec
sbb
ffree
mov
or
test
das
or
sub
in
jbe
adc
adc
or
sub
mov
int3
out
not
out
or
stc
stos
adc
mov
int3
psrlw
jg
outs
sub
aam
lea
mov
lock
sbb
fs
sbb
mul
add
es
cmp
loop
jge
mul
fwait
int3
push
push
xor
push
dec
in
addr16
scas
push
ret
cmps
retf
mov
movs
push
adc
leave
leave
and
add
bound
icebp
jno
mov
dec
dec
mov
or
sub
push
fdiv
adc
mov
adc
mov
aam
mov
and
fist
jmp
movs
push
cmp
mov
push
(bad)
dec
cmp
popa
int
cmp
imul
adc
mov
push
cmp
sahf
popa
xchg
fisttp
js
sub
dec
xchg
push
jge
addr16
jns
mov
aad
(bad)
mov
ficomp
mov
and
movs
push
movs
pop
pop
sub
jbe
or
add
repnz
dec
repz
jne
std
fistp
xor
jo
fidiv
xor
inc
mov
in
int
out
(bad)
icebp
hlt
xchg
loope
mov
mov
mov
jbe
pop
push
mov
movs
cmp
pop
scas
cld
inc
into
out
movs
cmp
xor
ins
xor
xchg
xchg
cmp
pusha
jle
daa
icebp
pop
sbb
dec
mov
mov
or
pop
jns
leave
daa
std
pop
(bad)
sahf
mov
push
es
pop
shr
data16
mov
popa
(bad)
ds
fidiv
push
and
rol
addr16
mov
(bad)
repnz
and
scas
popa
inc
mov
nop
jp
xor
ja
push
inc
jnp
into
mov
outs
sub
sbb
imul
cmps
mov
shl
(bad)
sbb
xor
dec
jecxz
mov
test
fmul
mov
iret
push
pop
and
cmp
nop
or
mul
mov
in
imul
imul
scas
push
xchg
nop
push
movs
jne
and
and
cdq
outs
dec
call
lea
stos
hlt
dec
clc
loope
add
add
pop
xchg
jl
rol
jecxz
shl
loopne
fistp
ret
push
push
(bad)
jb
pusha
cmp
inc
cmp
inc
repz
dec
int
sbb
ret
xor
loop
adc
fnstenv
arpl
call
dec
xchg
std
mov
lods
push
sub
es
mov
sbb
sub
ja
dec
ds
mov
fstp
or
ins
sub
jmp
cmc
into
adc
mov
jb
xor
outs
mov
sub
mov
arpl
jns
sbb
hlt
sti
xchg
retf
cmp
out
aad
(bad)
sbb
mov
loope
xlat
cmps
cmc
sbb
movs
mov
inc
push
div
scas
ror
push
push
cmc
jmp
ret
fsubp
xor
xchg
xchg
sub
xchg
jmp
sbb
adc
jmp
mov
out
aaa
xor
push
sub
and
push
lock
jle
mov
adc
mov
inc
xor
std
sar
jmp
lods
xor
fld
and
test
ins
lea
sbb
add
in
outs
aas
cli
mov
dec
sbb
pop
add
(bad)
mov
or
nop
popf
int3
push
imul
inc
in
es
aas
arpl
fisttp
retf
pop
scas
es
add
mov
mov
xchg
jne
jl
leave
jg
sub
mov
jbe
sub
xchg
das
mov
xchg
fnsave
mov
mov
xor
and
cmp
push
mov
ins
sbb
jmp
cld
mov
in
popf
dec
(bad)
xor
cmps
add
push
retf
fwait
dec
scas
test
aad
xchg
inc
test
dec
imul
add
mov
out
and
stos
mov
popa
pop
adc
cmc
sub
or
jge
push
(bad)
mov
or
cmp
dec
jp
test
xor
loop
mov
and
call
ja
inc
sub
and
push
rol
in
leave
jno
(bad)
push
mov
aad
jns
call
xchg
stc
push
je
mov
std
mov
pop
shl
cmp
xchg
inc
retf
cmc
adc
mov
sbb
(bad)
jmp
push
lahf
or
or
xlat
mov
fist
xchg
add
mov
ret
adc
xlat
xchg
mov
aaa
jns
xchg
mov
outs
jno
inc
mov
lods
inc
sub
cmp
ud2
mov
add
push
ds
pop
mov
jge
inc
mov
cmp
pop
shl
(bad)
mov
xchg
push
cmps
pop
enter
sub
sbb
fwait
mov
adc
imul
das
movs
cmps
hlt
ins
adc
rcl
int
jl
test
fcom
pop
sub
inc
lds
shl
xchg
mov
sub
call
cmps
jne
mov
lds
mov
cdq
jno
jecxz
mov
xchg
lods
inc
fdivr
cmps
outs
push
jp
pop
mov
aad
jle
retf
push
push
(bad)
ja
loope
dec
outs
cmc
int
(bad)
ret
addr16
mov
adc
jae
sub
popf
xchg
test
cdq
mov
pop
sbb
and
scas
(bad)
std
shr
test
fwait
sahf
add
mov
jb
pop
out
cmp
or
push
cmp
ins
enter
lahf
push
sahf
push
push
sub
scas
cmp
inc
jb
pop
adc
nop
mov
mov
xor
mov
stc
xchg
sub
xchg
mov
pusha
shl
mov
shl
(bad)
les
ret
(bad)
mov
mov
call
xchg
jl
mov
xor
xor
adc
ins
fnstsw
xchg
out
add
sub
lods
mov
shr
js
pop
and
xor
push
int3
rcr
sub
rcl
mov
lahf
mov
(bad)
push
cmp
aaa
scas
das
mov
mov
jge
loopne
xchg
icebp
dec
sbb
jge
cmp
add
sub
(bad)
aad
or
pop
push
sub
sbb
hlt
xchg
(bad)
movs
js
out
(bad)
daa
(bad)
sub
pop
dec
pop
inc
clc
gs
mov
cmp
mul
ffree
push
(bad)
inc
sbb
sahf
inc
push
test
out
movs
in
aam
lods
hlt
xchg
jae
xchg
xchg
jo
mov
add
neg
cwde
aas
out
int
loop
push
inc
ret
cmp
pop
cmps
pusha
push
nop
xchg
sbb
add
sub
mov
sbb
and
push
and
test
push
(bad)
bound
test
mov
dec
popa
inc
das
ret
fisubr
jecxz
cmp
pop
jmp
push
mov
addr16
inc
popf
in
or
or
inc
out
movs
mov
ds
xchg
dec
push
retf
dec
adc
mov
and
push
fs
loop
lea
xchg
add
icebp
(bad)
mov
shl
sbb
fdivr
test
fs
push
fwait
mov
mov
pop
das
xchg
add
add
fbld
lahf
es
int3
pop
rol
or
mov
jmp
stos
push
mov
inc
pushf
imul
push
outs
cmps
mov
mov
into
fistp
sbb
jbe
cmp
setbe
mov
sbb
sbb
mov
inc
pop
(bad)
jp
jb
mov
je
or
and
dec
xchg
rep
xor
call
fisubr
dec
aad
sbb
sub
das
mov
push
jae
pusha
lock
dec
mov
sub
ror
mov
or
push
std
cmp
sbb
inc
pop
add
data16
jne
mov
cmp
std
push
adc
arpl
mov
(bad)
dec
lds
push
mov
clc
retf
mov
stos
cmps
shl
jae
dec
sub
daa
mov
jl
retf
fisub
mov
outs
daa
in
push
popa
sbb
xchg
dec
rcl
or
sub
jbe
out
outs
mov
stos
cdq
or
and
rcr
(bad)
cmp
and
std
mov
ret
movs
lods
call
xor
xor
(bad)
cmp
jb
pop
icebp
popa
adc
pop
jbe
bound
aas
sub
pushf
push
push
ss
jmp
loope
sub
enter
ss
movs
rcl
paddusb
sahf
pop
mov
jp
xor
hlt
or
cmp
icebp
mov
cmp
frstor
xor
int
(bad)
fst
xchg
push
movlps
je
inc
sti
into
popf
pushf
xchg
sub
scas
(bad)
jns
in
cmc
daa
call
shl
movs
dec
fnstenv
test
sbb
lds
adc
imul
adc
sub
sbb
ins
je
ror
xlat
ror
fwait
lock
cmp
dec
mov
xor
pop
rcl
(bad)
dec
xor
(bad)
fwait
or
in
dec
push
in
data16
lahf
pop
sar
mov
mov
shr
loope
cmp
inc
push
je
bound
pop
mov
add
push
dec
sub
jmp
add
cmp
cmps
or
and
pop
ror
ins
ins
add
push
mov
outs
(bad)
jecxz
pop
pop
push
(bad)
jp
mov
jns
scas
and
mov
add
xor
(bad)
pop
pop
add
popa
sbb
(bad)
into
punpckhdq
jge
jmpw
dec
push
xor
inc
ret
xchg
jns
in
rcr
add
add
iret
push
xchg
jg
test
nop
xchg
adc
shl
cmp
sti
push
adc
cmp
mov
jl
(bad)
addr16
mov
push
adc
mov
push
pop
pop
je
jns
mov
adc
xor
mov
rcl
or
inc
loope
(bad)
sbb
cmp
ror
es
cmp
loopne
not
mov
mov
cmps
das
sbb
loop
xor
pop
rcl
pop
jne
mov
(bad)
sbb
mov
ficom
nop
push
mov
dec
dec
jecxz
inc
stos
(bad)
test
lods
mov
js
or
mov
cmp
cmp
mov
xchg
lock
mov
xchg
call
enter
xor
test
jge
or
ficom
xchg
scas
ja
ja
sbb
int3
in
dec
and
mov
into
jg
mov
mov
mov
jge
sbb
sbb
cmps
xor
sahf
mov
mov
sub
mov
stos
repnz
jns
push
adc
cmp
outs
ins
sbb
push
repz
add
mov
jge
sar
scas
pop
or
rcr
push
cmp
xchg
(bad)
pop
loope
mov
mov
xor
out
rcl
scas
adc
and
jge
or
and
into
xchg
xchg
sbb
jp
mov
mov
xor
mov
mov
mov
sbb
cvtdq2ps
sub
mov
bsf
mov
popf
dec
push
or
jmp
out
test
rol
pop
mov
retf
sbb
and
mov
cmp
sbb
sti
cwde
push
and
stos
push
push
es
icebp
push
mov
cmc
sbb
lea
pop
fcomip
xor
mov
jo
pop
ficomp
test
jle
cli
icebp
xchg
xadd
ss
test
ds
sbb
pusha
es
mov
cmp
in
pop
push
adc
cmp
pusha
pop
repnz
or
xchg
dec
bnd
or
out
enter
addr16
mov
xchg
test
fld
push
imul
cmp
lds
mov
sbb
dec
or
sub
hlt
inc
and
push
movs
and
popa
push
xchg
or
push
stos
clc
mov
cmp
sbb
or
clc
xchg
mov
xchg
outs
stos
jl
cmp
mov
mov
cmp
push
cld
xchg
adc
fistp
mov
xor
mov
cmp
or
stos
push
jne
ror
push
dec
jmp
js
and
mov
xlat
in
pop
push
dec
stos
sbb
div
inc
(bad)
loopne
shl
arpl
push
sbb
pop
mov
clc
push
retf
or
lods
mov
ficom
jnp
bound
popa
and
xor
(bad)
jb
inc
inc
cld
loopne
lock
jge
push
sar
loop
push
push
int
dec
or
mov
je
repz
pop
adc
test
outs
bound
ficom
(bad)
faddp
cwde
push
pop
inc
mov
mov
adc
lahf
mov
mov
adc
mov
mov
inc
push
movs
(bad)
jmp
xlat
das
jmp
mov
sbb
rol
sub
add
mov
(bad)
call
ret
ror
xor
sar
or
mov
mov
sbb
aam
iret
mov
xor
mov
and
pop
jmp
faddp
ins
scas
sbb
fsubr
es
xchg
xchg
je
jecxz
sub
xor
mov
icebp
mov
ins
int
jbe
mov
mov
xor
int
shr
pushf
mov
out
sti
mov
xchg
cmp
adc
sub
retf
test
fidiv
ret
mov
mov
das
xor
imul
mov
add
jmp
add
(bad)
(bad)
add
mov
xchg
xchg
pop
xor
dec
je
call
movs
adc
sbb
mov
add
inc
push
nop
mov
push
shl
mov
out
push
icebp
mov
xor
hlt
(bad)
sbb
gs
shl
cli
sbb
sbb
sti
cld
cmps
pop
(bad)
iret
movs
or
xchg
mov
push
test
mov
mov
sar
xchg
cmp
push
cmps
sar
jae
arpl
inc
xchg
pop
in
(bad)
out
add
scas
cmps
movs
inc
and
or
mov
pop
ins
pop
xchg
mov
cdq
neg
and
jne
sub
retf
xchg
in
jle
fmul
mov
and
hlt
sar
dec
sbb
xor
xchg
sub
jne
mov
sbb
and
cmps
adc
or
mov
jmp
and
xlat
clc
fcomp
loop
(bad)
dec
pop
leave
aad
ins
and
inc
loop
mov
xor
sub
fs
fldenv
cmp
sbb
mov
sub
pusha
aad
imul
cmps
xlat
adc
cli
jg
into
cmps
mov
scas
imul
xchg
stc
lods
fucom
popa
adc
push
fstp
mov
xor
rcr
adc
ds
out
push
dec
int3
loopne
xchg
push
xor
or
ins
popa
push
outs
mov
clc
std
(bad)
push
nop
loopne
mov
mov
adc
lock
jnp
clc
adc
ss
jl
sahf
xchg
cmps
(bad)
push
sub
push
xchg
pushf
xchg
push
nop
or
cwde
adc
addr16
adc
in
mov
xor
stc
inc
int3
dec
sbb
pop
js
sub
mov
inc
ror
mov
das
mov
sahf
adc
les
mov
lods
fsub
ja
jo
jno
das
sti
cmp
and
push
mov
add
into
xchg
inc
and
sbb
icebp
mov
dec
mov
jmp
mov
cmp
jno
or
adc
retf
mul
xlat
sbb
loope
push
sbb
ret
pop
dec
je
in
arpl
lock
pushf
xchg
fild
stos
sub
xchg
arpl
jmp
jp
int3
mov
sbb
into
push
js
popa
xchg
and
adc
out
sbb
sti
mov
ret
mov
fmul
jae
push
jge
cld
add
in
xor
sub
mov
add
mov
cmp
stos
sbb
das
inc
pop
sar
mov
fcomp
repnz
das
je
sbb
(bad)
dec
movs
push
or
jp
mov
retw
dec
push
inc
scas
lock
mov
jns
hlt
xor
(bad)
adc
out
jns
rcr
jne
popa
push
and
push
mov
dec
jp
fadd
lock
arpl
xchg
cs
cmp
lock
leave
in
inc
or
fsub
pop
mov
xchg
or
jo
lahf
jb
lods
sbb
(bad)
shl
xor
in
in
dec
sbb
(bad)
sahf
call
push
adc
adc
movs
es
hlt
push
int
add
push
shl
xchg
jmp
mov
popa
stos
pusha
cmp
mov
jecxz
rep
jb
mov
scas
inc
adc
aam
xor
sub
ins
call
scas
mov
jb
pop
shr
popa
test
mov
in
test
push
xor
xor
test
jl
lock
xchg
pushf
aad
sub
and
xor
fwait
and
movs
push
pop
push
lods
adc
mov
adc
hlt
aad
pop
seto
leave
call
mov
mov
daa
jne
imul
cmp
ficom
mov
sar
js
and
data16
mov
mov
mov
push
pushf
inc
mov
push
inc
fstp
repnz
int
stos
push
mov
ror
js
mov
sub
in
mov
pop
je
sub
add
(bad)
lods
aam
adc
push
and
cmp
fsub
mov
pop
enter
and
xchg
and
push
ret
or
pop
mov
repnz
cmp
lds
imul
mov
sbb
ins
retf
jo
gs
cmp
mov
jo
daa
mov
(bad)
stc
mov
test
(bad)
mov
or
fsubp
push
in
cmp
mov
pop
or
and
lods
sub
mov
mov
adc
(bad)
sahf
es
pop
(bad)
xor
js
test
cwde
nop
(bad)
inc
fs
adc
pop
and
xchg
fld
div
test
fdiv
outs
iret
mov
mov
push
lea
es
cmc
out
lahf
mul
pop
inc
sar
sub
hlt
sub
dec
ja
cmp
mov
pop
adc
sbb
dec
xchg
inc
rcr
js
cmp
adc
icebp
cli
test
xor
inc
adc
and
test
repz
movs
daa
and
popf
addr16
loop
push
inc
add
movs
and
push
call
xchg
add
xchg
das
adc
out
clc
sub
inc
mov
(bad)
(bad)
jge
mov
dec
jg
loop
lods
xchg
add
mov
and
adc
call
ficom
or
add
xlat
inc
xchg
iret
mov
inc
xchg
scas
pop
sbb
sub
inc
add
add
cli
mov
jmp
add
mov
in
out
pop
das
scas
jnp
retf
push
in
mov
das
push
cmp
mul
call
bound
sub
sub
pop
cwde
repnz
ds
xchg
cmp
cmp
sub
jnp
ret
xor
dec
ins
arpl
sub
int3
movs
sbb
jnp
ds
leave
push
mov
cmp
out
pusha
sub
stc
out
xchg
ret
and
fwait
pop
cmp
xor
cmc
jp
out
loopne
out
sbb
jne
pop
sub
and
outs
cld
jp
adc
cmp
scas
sbb
xlat
push
movs
dec
loop
mov
push
pop
ror
add
popf
mov
xor
rol
sbb
xchg
cli
lods
(bad)
sub
and
jmp
mulps
(bad)
sbb
xlat
push
fucomp
push
adc
(bad)
fbld
clc
xor
je
add
nop
push
push
int
inc
out
mov
sahf
fwait
mov
ins
rol
mov
mov
jecxz
xchg
icebp
enter
xor
fst
jb
pop
enter
test
lods
call
test
call
mov
(bad)
cmp
xchg
das
dec
adc
dec
into
lahf
adc
jmp
push
push
retf
cmp
inc
imul
jno
or
mov
je
add
int3
hlt
pop
xchg
xor
sub
shr
push
jne
sub
cmp
pop
idiv
stos
jo
jbe
fisub
jmp
adc
mov
lahf
sbb
dec
(bad)
or
sbb
pop
aas
lahf
xor
test
pop
jle
adc
add
push
cmp
ins
mov
aam
push
sub
ss
sub
adc
xor
mov
(bad)
cmp
je
adc
mov
adc
stos
xor
dec
pop
or
test
loope
sbb
ret
inc
jp
loopne
mov
mov
pushf
out
push
into
icebp
and
clc
test
cwde
inc
call
fistp
sbb
bound
dec
and
je
retf
or
or
bound
mov
(bad)
or
repz
and
cwde
add
mov
inc
or
xor
xchg
imul
mov
loope
bound
gs
cdq
xlat
dec
pop
lds
out
scas
pop
loop
mov
sub
(bad)
push
xor
or
data16
call
pop
pop
push
push
les
push
pop
add
adc
stos
pop
lods
and
jne
pop
mov
cmp
sub
stos
pop
xor
cmps
ds
push
popf
cld
xor
stos
shr
cmp
and
mov
adc
repnz
fmul
inc
pop
adc
fxch
push
int3
cmps
cmps
out
div
test
out
push
inc
pop
scas
fnstcw
sub
pop
dec
pop
pusha
xchg
mov
mov
mov
mov
dec
sub
repz
mov
sar
pop
jne
xchg
sbb
stc
pop
aas
xchg
call
std
push
out
jns
dec
xchg
fld
xchg
xor
xchg
push
mov
sbb
xor
test
or
cmp
not
adc
xchg
jg
in
and
sar
popf
ds
xor
lea
inc
xchg
cs
cmp
pop
push
xchg
inc
and
idiv
lea
xchg
push
test
inc
clc
and
mov
xchg
pop
std
mov
cmc
mov
mov
(bad)
sar
ror
dec
and
mov
push
loopne
mov
in
adc
je
fld
sahf
adc
dec
bound
stos
(bad)
fisub
xor
inc
push
dec
adc
push
xor
repz
test
test
xchg
and
call
shl
std
adc
inc
mov
stos
or
xchg
push
rol
pop
mov
mov
imul
movs
jns
pop
es
jge
leave
ret
clc
and
dec
ins
add
in
hlt
popa
std
mov
hlt
jne
test
xor
sub
push
push
push
inc
(bad)
jne
sahf
dec
mov
mov
jns
adc
inc
add
push
push
mov
pop
addr16
inc
adc
xchg
inc
clc
adc
pusha
mov
jo
inc
xor
and
mov
fsub
std
xor
jne
push
test
xchg
sbb
mov
int
shl
test
xchg
aas
adc
ja
(bad)
sti
repz
outs
push
ret
test
into
stc
repnz
jle
shl
sub
in
mov
jl
mov
adc
clc
xchg
popf
sub
sub
pop
mov
(bad)
inc
mov
into
xchg
push
jne
adc
fwait
jo
cmp
push
and
and
test
je
not
(bad)
xor
add
adc
xor
sub
jle
repz
inc
adc
out
push
mov
sar
add
rcr
lock
mov
ins
pop
inc
sbb
vfrczps
popa
nop
mov
mov
dec
into
inc
jecxz
rcl
mov
movs
int3
inc
in
inc
test
fstp
out
jns
sar
ss
jecxz
repz
retf
inc
dec
sbb
mov
mov
mov
cmp
or
pop
push
jno
push
pop
sbb
xor
out
mov
jmp
(bad)
std
jns
sub
imul
pop
xchg
inc
inc
add
fs
pop
repnz
xor
mov
push
xor
fnstenv
aad
std
aam
mov
adc
and
dec
xor
(bad)
mov
into
mov
cmp
out
xor
sub
mov
adc
mov
cli
cli
jbe
push
repnz
fdiv
xchg
adc
push
mov
es
fwait
cwde
push
out
lods
jbe
lods
cmp
xchg
and
sbb
mov
lods
ret
lods
sub
inc
ds
movs
loope
adc
aaa
sub
(bad)
push
pop
pusha
mov
ins
xchg
dec
push
push
and
js
lahf
fiadd
inc
adc
dec
sbb
lods
push
xor
jbe
aaa
stos
sti
addr16
xor
aas
pop
cli
push
push
test
xor
cmp
out
xchg
sbb
sub
(bad)
jmp
dec
xchg
mov
lods
call
movs
std
ret
adc
dec
or
sbb
inc
test
mov
sti
lods
and
sub
retf
rcr
leave
in
jne
xchg
or
sbb
ret
mov
inc
pop
sahf
jg
pop
dec
xchg
call
jnp
mov
loop
pop
inc
notrack
icebp
and
cmc
(bad)
movs
nop
or
xchg
push
fnsave
sub
repnz
gs
cmps
aaa
xor
sbb
jne
rol
push
push
popf
loopne
leave
out
add
mov
jns
fstp
pop
jmp
(bad)
lods
rol
mov
loop
imul
pushf
imul
iret
cdq
aam
(bad)
pop
mov
lds
adc
fnsave
sbb
jae
shl
mov
jmp
mov
enter
push
inc
cli
mov
mov
movs
fwait
enter
inc
push
lea
pop
mov
mov
xchg
into
lahf
xchg
loop
sbb
mov
aas
into
lahf
scas
nop
dec
mov
lods
in
xchg
in
sbb
jbe
cs
and
gs
stos
pushf
icebp
imul
inc
xchg
mov
mov
cmc
pop
adc
stc
test
push
(bad)
xor
data16
aam
mov
mov
sahf
adc
add
sahf
lahf
inc
add
into
dec
xchg
dec
fidivr
cmp
hlt
pop
and
inc
cmps
jle
mul
das
movs
mov
push
dec
mov
aas
fs
js
ins
(bad)
sbb
rcl
jmp
and
fsubr
jp
bound
out
dec
pusha
pop
cmp
add
xor
dec
imul
mov
loop
arpl
mov
sub
push
or
mov
int
hlt
mov
test
xor
mov
je
aas
mov
arpl
outs
mov
popf
pop
or
lock
(bad)
xchg
fisub
add
in
push
mov
and
pop
pusha
dec
jecxz
xlat
sub
cld
mov
pop
push
add
fistp
data16
sub
lahf
sub
sbb
cmp
mov
leave
push
adc
inc
push
add
movs
xor
pushf
adc
or
cld
jbe
outs
imul
sbb
idiv
mov
cmp
cmpxchg
mov
loopne
test
inc
popa
jmp
sbb
iret
mov
inc
xchg
sahf
pop
movs
pop
loopne
and
stc
lods
mov
outs
cmps
call
pushf
dec
adc
jo
mov
enter
jle
js
jmp
dec
lods
mov
adc
push
shl
xchg
ja
lea
mov
cmp
retf
or
inc
jae
add
xor
inc
add
or
jge
mov
pop
inc
xchg
sbb
cmp
dec
jmp
jp
(bad)
neg
test
jl
cs
call
push
xchg
mov
fs
leave
cli
mov
std
push
mov
pusha
cmps
gs
into
xor
aad
lahf
adc
cs
adc
push
ins
outs
cmp
test
sbb
xchg
out
mov
add
fwait
int
psubusb
push
inc
imul
adc
je
sub
push
push
cmp
ja
mov
sbb
push
xlat
jmp
fdiv
add
pop
push
inc
loopne
mov
mov
xchg
and
aas
or
stos
cs
or
jnp
iret
mov
inc
jno
mov
xchg
adc
push
mov
(bad)
push
or
ret
or
out
hlt
sti
mov
arpl
jbe
cmp
sub
push
stc
(bad)
jnp
dec
mov
xchg
aaa
add
pop
add
mov
ror
xchg
cmp
mov
movs
icebp
idiv
dec
retf
lea
ins
pusha
mov
shl
and
dec
fistp
imul
sbb
jb
sbb
stos
xor
pop
cmps
pop
pop
push
(bad)
fcmovne
jae
adc
mov
std
enter
jmp
pop
jno
scas
sub
xlat
loopne
outs
jmp
push
pop
(bad)
pusha
or
push
sbb
mov
das
cmps
fimul
dec
dec
add
mov
jb
xor
add
call
ficomp
jb
nop
sbb
test
fist
sub
mov
aad
shr
sub
sbb
(bad)
mov
in
sub
cmp
jne
cld
pop
arpl
shl
lahf
mov
sub
xchg
mov
push
not
xor
xchg
rcl
xor
cmps
iret
aaa
(bad)
pop
(bad)
xor
in
fistp
xchg
mov
xlat
inc
inc
mov
xchg
pop
push
xor
cld
push
lea
fisttp
add
ret
lock
jp
mov
test
dec
cs
enter
jp
sti
fadd
mov
mov
sar
ror
popf
stos
icebp
sbb
jg
mov
jnp
dec
sbb
rcr
and
or
(bad)
xchg
out
outs
ss
mov
enter
retf
push
xchg
inc
es
jmp
ins
imul
push
pusha
addr16
mov
in
mov
outs
bound
pop
cmp
mov
xchg
dec
into
aad
sub
les
imul
xchg
out
imul
cmp
push
sbb
das
rcr
and
cmp
mov
jne
push
mov
xor
push
(bad)
das
xor
sbb
mov
sub
push
push
cli
fwait
inc
scas
das
add
rcl
repnz
and
addr16
mov
xchg
inc
enter
and
pop
arpl
adc
push
push
add
inc
pop
rcl
push
ja
lods
popa
faddp
xchg
dec
xor
mov
mov
sub
mov
mov
in
adc
rcl
mov
int
pop
and
and
add
push
xchg
mov
add
outs
(bad)
ficom
sub
and
rcl
cwde
sti
add
mov
out
fidiv
inc
xor
in
lods
bound
das
sub
sub
out
pop
inc
icebp
enter
jg
sbb
ins
aaa
jg
stc
sbb
and
jmp
pop
push
pushf
dec
mov
shl
rol
push
es
test
mov
mov
cmp
(bad)
dec
aas
or
movs
ins
out
mov
mov
bound
clc
iret
and
scas
jmp
adc
cmp
les
gs
div
xor
or
pop
sub
(bad)
push
ins
add
mov
cmp
xchg
and
add
xchg
push
mov
jecxz
add
not
jle
outs
or
mov
adc
mov
sbb
arpl
pop
inc
or
xor
(bad)
pusha
outs
repz
xchg
sbb
pop
shl
enter
retf
movs
xchg
mov
imul
les
dec
xchg
call
test
jmp
cld
aas
je
mov
push
add
in
mov
jbe
push
jle
push
hlt
fstp
push
ja
adc
lahf
call
jbe
js
test
loope
adc
imul
mov
mov
rol
in
and
out
xchg
shl
pop
dec
cmp
mov
or
shr
mov
inc
mov
cmp
shl
pop
jp
popf
inc
rol
cmp
cwde
pushf
xor
dec
cmp
in
outs
and
push
dec
(bad)
adc
fimul
imul
sbb
lods
lds
fnstenv
sub
lods
(bad)
aas
xchg
gs
sbb
and
dec
ret
add
push
cmp
xchg
cmps
mov
imul
push
imul
iret
pushf
test
pop
mov
adc
(bad)
int
xchg
mov
movntps
pop
imul
dec
push
push
push
mov
aaa
dec
movs
arpl
icebp
icebp
or
mov
and
nop
in
icebp
mov
cli
loope
mov
enter
ds
fcomp
inc
leave
or
xor
mov
mov
stos
out
cmp
test
data16
xor
sub
or
pusha
imul
jne
fwait
cwde
cmps
rcr
jl
(bad)
ds
add
or
fcomp
xchg
pop
outs
jmp
mov
jns
fcom
fisub
pop
test
loope
xor
pop
enter
in
jnp
adc
pmulhw
ror
pop
fs
adc
lahf
sbb
push
push
xor
stos
andnps
sar
inc
pushf
test
adc
xchg
sub
mov
add
xor
sub
int3
xlat
mov
sub
lds
sub
xor
fisub
and
xor
jae
(bad)
xchg
int3
and
mov
cmp
push
xlat
shl
add
lock
fnstsw
sub
jmp
inc
dec
in
loop
aad
mov
sub
je
push
aaa
ins
(bad)
fld
push
rol
dec
pop
cmp
shl
jecxz
sbb
jo
das
lods
jnp
movs
jae
add
sub
loopne
xor
rcl
out
aad
pop
push
xor
sub
int
jg
lods
mov
clc
sbb
pop
lods
popa
jl
push
mov
xor
dec
aas
fisttp
mov
cmp
les
sbb
sbb
(bad)
sbb
ret
out
cdq
out
cmp
xchg
fyl2x
(bad)
das
pop
in
cli
cli
test
jg
leave
out
inc
dec
pop
adc
leave
push
dec
sub
cmp
js
repnz
mov
cld
(bad)
in
das
ret
icebp
clc
ins
xchg
dec
sbb
pop
stc
(bad)
mov
dec
inc
push
loope
mov
mov
mov
xchg
sbb
(bad)
sar
adc
cs
movs
cmp
dec
cmp
popf
(bad)
ins
fidivr
sahf
and
or
and
jb
cmp
mov
pop
push
ss
fcomp
ss
xor
pop
mov
push
(bad)
mov
loope
ret
into
popa
jp
ds
xchg
mov
cmp
jmp
adc
cli
jmp
mov
sub
lock
(bad)
or
adc
popa
mov
mov
mov
mov
inc
pop
sbb
xchg
into
cwde
ins
in
jnp
daa
in
(bad)
or
mov
sahf
daa
dec
pushfw
movs
and
rol
out
(bad)
jl
adc
push
jae
mov
jnp
xchg
test
pop
add
mov
adc
pop
hlt
sub
pop
lahf
and
dec
dec
fcom
jecxz
sbb
jg
add
cmp
scas
imul
inc
dec
and
mov
int3
lea
repz
inc
(bad)
jne
jmp
adc
je
(bad)
mov
lea
sbb
fcom
out
ins
pop
pop
sub
xchg
or
lods
cmp
shr
loope
clc
(bad)
xchg
mov
aas
xchg
adc
movs
push
call
mov
jo
mov
pop
rol
add
and
gs
std
inc
and
cmps
jne
mov
cmps
aad
(bad)
rcl
mov
adc
mov
adc
test
jle
ins
sub
arpl
dec
pop
test
or
movs
jl
push
das
mov
or
dec
out
cwde
push
add
popf
fldenv
cli
in
test
fnstenv
and
aaa
hlt
sub
adc
loop
jg
dec
pusha
mov
je
xchg
lahf
mov
or
add
lock
mov
pop
add
xchg
mov
xor
pslld
mov
cmps
ins
add
dec
fld
loop
icebp
mov
xor
jecxz
mov
aad
mov
mov
xchg
mov
adc
sbb
cmc
add
jmp
int
jmp
cmps
lock
in
imul
pop
push
mov
mov
and
shl
add
imul
mul
add
pop
iret
aam
sti
inc
into
push
pusha
sar
pop
repnz
xchg
mov
shr
sub
pop
hlt
pop
or
mov
fs
or
push
jl
inc
call
arpl
aad
mov
cmp
and
mov
mov
out
icebp
cmp
stos
lods
mov
ror
std
xchg
(bad)
nop
aas
sbb
xlat
xchg
inc
es
ret
mov
dec
dec
(bad)
outs
test
aad
loopne
add
rcl
mov
shl
sbb
jno
cmp
cmps
mov
jecxz
xor
jnp
cmp
mov
std
cmp
scas
and
into
(bad)
xchg
mov
js
dec
cmp
xchg
dec
push
xor
inc
jbe
mov
in
jns
mov
xchg
in
out
mov
ficomp
ret
cmp
add
ret
and
add
mov
sbb
fistp
dec
push
ret
cmps
xchg
jnp
je
sbb
pop
adc
rol
mov
js
jnp
pop
mov
and
or
in
jmp
mov
enter
dec
jle
push
jle
ja
adc
cs
loopne
cmp
cmp
fidiv
mov
aas
in
iret
mov
mov
test
and
mov
jle
jmp
dec
into
ds
icebp
imul
cmps
sub
xor
dec
dec
es
test
(bad)
scas
fldenv
push
aad
jns
imul
xchg
adc
inc
cmps
push
imul
mov
stos
cmp
jl
leave
retf
out
push
fcomip
rcl
cli
sub
pusha
add
sar
pop
lahf
test
pushf
xchg
push
jmp
outs
inc
and
inc
xlat
imul
aam
push
icebp
inc
sub
out
ret
iret
outs
scas
xchg
into
mov
mov
(bad)
and
mov
mov
cmp
addr16
jnp
xlat
aaa
sti
mov
jecxz
mov
jns
or
loope
mov
push
dec
clc
mov
mov
or
mov
pop
ficom
shr
xchg
jp
sub
gs
popa
or
in
lahf
sti
stos
add
call
jno
(bad)
ror
bound
ja
loopne
mov
cwde
lock
sbb
xor
inc
xchg
out
(bad)
jge
shl
mov
hlt
out
sbb
dec
mov
imul
out
sbb
cdq
add
js
retf
lds
call
cwde
fsubr
repnz
add
ins
inc
xchg
ins
jb
ins
cmp
addr16
fisttp
imul
inc
fdivp
fwait
loope
inc
and
iret
stos
repz
dec
xor
imul
mov
pushf
test
xchg
out
mov
jp
fcomp
sbb
pop
lock
aam
mov
js
outs
cdq
add
pop
in
(bad)
out
or
mov
add
sbb
test
and
jb
aad
fsave
js
mov
mov
ror
test
pop
not
xchg
adc
std
ficom
not
test
cmps
push
xchg
dec
cmp
inc
(bad)
push
pop
mov
pushf
mov
bound
(bad)
in
sbb
out
and
rcr
dec
jle
daa
push
and
imul
into
and
sub
pop
cmps
and
sub
add
ins
mov
pop
jns
jb
push
scas
lahf
jle
xchg
mov
cs
lods
dec
dec
and
aad
repz
(bad)
lods
dec
mov
jl
xor
ss
mov
adc
fldenv
xchg
pop
in
jmp
int3
mov
and
es
cdq
jne
push
fnstsw
scas
mov
aad
ins
mov
call
test
add
push
xlat
mov
cmp
outs
push
dec
push
dec
mov
dec
adc
cmp
je
push
jmp
nop
xchg
xchg
jmp
sti
dec
xchg
push
and
dec
push
adc
push
mov
pushf
sbb
into
mov
rcr
sbb
gs
and
pop
cmp
or
adc
(bad)
inc
(bad)
mov
mov
clc
cmc
push
adc
mov
push
retf
fisubr
out
pop
cmp
mov
adc
loope
jl
dec
hlt
sub
dec
aam
and
test
test
cli
add
mov
mov
sbb
cmp
xlat
xchg
push
jnp
in
add
mov
xor
std
test
scas
adc
pop
jmp
xor
cmps
cmp
hlt
push
aad
mov
push
in
push
adc
loop
ins
inc
jb
retf
out
add
test
push
aas
xchg
mov
sahf
inc
push
mov
mov
pop
jne
jns
cdq
sub
ja
and
sbb
sub
sbb
adc
pop
sub
cmps
and
clc
test
lds
push
pushf
jl
lea
add
fcom
add
lods
push
retf
rcl
push
ja
sub
cli
xchg
pop
add
data16
ins
repnz
out
mov
or
jmp
loop
jmp
push
xchg
(bad)
js
mov
ins
rol
in
aaa
cmp
imul
push
sbb
cmp
fdiv
imul
arpl
add
sbb
push
aas
add
xlat
pop
pop
lods
dec
sbb
xchg
js
pop
retf
cmp
push
mov
dec
mov
push
pop
outs
je
adc
sbb
mov
inc
dec
add
cmp
and
inc
cmp
std
jne
nop
add
fcom
aad
out
gs
(bad)
mov
lds
jmp
and
jle
push
shl
mov
cmps
test
rcr
or
scas
lea
lock
sbb
mov
out
pusha
jb
stc
and
inc
inc
pop
int3
je
out
xor
cmp
push
sbb
fs
sub
mov
loopne
into
push
scas
aad
push
xor
arpl
stc
ins
push
outs
mov
xchg
clc
and
xchg
pop
dec
fld
je
sub
rcl
jle
rcl
iret
dec
jmp
jecxz
shl
and
cmp
mov
int
cmp
mov
cmc
xchg
pop
jb
cmp
inc
push
jno
pop
mov
dec
call
mov
test
sub
and
cmc
jno
inc
jmp
jno
fnsave
leave
test
add
hlt
jns
inc
mov
mov
cmp
inc
sub
daa
adc
fist
or
fwait
and
jl
out
sub
cld
pop
inc
jno
aam
fimul
scas
fwait
jg
retf
rep
pop
lods
sbb
xor
jne
imul
pop
dec
or
xor
jno
mov
sbb
push
jg
call
js
jmp
call
scas
fcom
ss
add
shl
xchg
clc
mov
pop
out
out
push
mov
add
or
push
icebp
scas
xchg
daa
push
xor
or
xchg
cwde
xchg
xor
push
pmulhuw
pop
fwait
sbb
or
out
test
fst
pop
stos
jp
lods
xchg
mov
rol
in
xor
leave
jo
iret
cmps
cli
je
xchg
inc
mov
or
aad
dec
mov
cwde
pop
jecxz
adc
sbb
aaa
push
jne
test
inc
xchg
fcmovnb
ds
dec
cmp
leave
xlat
adc
mov
adc
ja
lock
imul
mov
lods
dec
mov
pop
aas
ror
dec
sub
jge
(bad)
movs
and
aaa
push
adc
int
mov
xorps
push
cs
test
aas
add
add
jns
and
imul
ror
mov
pop
adc
fnstcw
jns
ror
jg
xor
(bad)
fs
aaa
movs
or
dec
jmp
push
add
outs
cmc
mov
mov
lods
out
lahf
dec
movs
push
and
cld
cmc
in
out
adc
popa
add
out
mov
xchg
xor
jp
sbb
(bad)
mov
sub
ret
lock
iret
imul
push
push
aam
clc
push
or
scas
mov
xchg
addr16
pop
or
or
jns
in
pop
stc
inc
cs
stos
jne
add
inc
dec
out
xor
mov
mov
pop
inc
dec
or
jg
fs
cs
jge
cmps
dec
dec
mov
(bad)
sar
mov
jae
mov
fdiv
ret
pop
dec
push
adc
inc
cmp
out
cmps
cmp
(bad)
mov
jmp
ds
push
and
mov
out
ins
aam
movs
mov
jmp
dec
cmc
jb
pop
jp
jns
fidiv
inc
cwde
fwait
xor
pop
bound
push
xchg
test
jg
ret
and
mov
and
scas
dec
test
and
xchg
scas
jb
scas
cdq
fdiv
arpl
sbb
dec
loop
js
pushf
cdq
mov
mov
jmp
inc
aaa
not
ret
test
(bad)
in
std
jno
mov
push
(bad)
scas
sub
movs
dec
pop
sahf
ja
xor
hlt
aam
xchg
jmp
loop
sbb
in
adc
scas
shl
pop
jo
jg
aaa
in
leave
aaa
adc
movs
push
cwde
cmps
rcr
mov
das
pop
mov
mov
clc
int
fwait
stos
rcl
mov
mov
jle
jge
(bad)
fbstp
pop
add
mov
call
std
int3
aad
scas
xchg
test
push
jbe
daa
test
(bad)
xor
jge
fidiv
stos
enter
or
sar
imul
mov
mov
ja
int3
es
std
hlt
and
aad
(bad)
sbb
sahf
pop
xchg
inc
stos
xchg
test
sbb
lock
xor
(bad)
mov
cli
jo
in
xchg
jg
xor
pop
fwait
call
xor
adc
sbb
dec
mov
aaa
push
shr
fsubr
cmp
xor
or
ss
xor
ins
lds
rol
imul
movs
sub
shl
sar
in
dec
sbb
into
test
pop
sbb
in
xchg
ret
push
adc
adc
sub
xchg
cmp
ret
mov
cmp
aas
imul
ror
retf
pop
add
out
mov
(bad)
mov
cdq
jecxz
int
or
xor
sti
pop
lods
ins
push
scas
cs
xor
and
jg
sub
and
jle
jmp
xor
and
test
dec
sub
xor
jno
cmps
push
cdq
popf
adc
stos
xchg
push
scas
ret
push
adc
test
and
mov
pop
push
and
rcl
jle
push
cmp
adc
in
and
jg
xor
cwde
jle
adc
jl
xchg
retf
add
push
loop
adc
imul
mov
mov
xchg
stos
mov
cli
xor
mov
add
popa
xchg
inc
fdiv
fs
xchg
sub
lahf
lds
sub
pop
mov
rol
cmps
outs
xchg
jae
add
inc
aas
add
dec
cdq
xchg
ss
add
cmp
inc
and
int
inc
adc
mov
mov
push
test
mov
sub
inc
and
mov
pop
pop
sbb
push
jbe
mov
dec
je
imul
pop
imul
push
pusha
adc
in
fwait
jb
out
inc
jne
mov
pop
sbb
sub
jno
shl
inc
pop
jnp
popa
repz
jle
xor
hlt
mov
xchg
leave
sbb
test
sub
mov
inc
rcl
int
add
popf
cli
cmp
adc
mov
or
icebp
push
imul
or
nop
xchg
scas
mov
lahf
mov
xor
pop
jno
pop
call
rcr
out
sbb
cmp
jno
fisttp
xchg
push
test
add
fwait
ds
cmp
ret
inc
and
push
cmp
and
mov
add
retf
in
mov
dec
stos
push
(bad)
loop
in
shl
(bad)
or
cmp
xchg
sbb
cli
adc
movs
xchg
push
jbe
out
mov
shl
out
cli
jmp
int3
lods
out
lsl
lahf
int
cmp
dec
repz
add
jb
ja
xchg
push
xchg
sub
jp
xchg
aam
sbb
and
jmp
and
mov
mov
std
into
cmp
stos
mov
xchg
scas
bound
inc
test
jle
in
push
cmp
stos
and
shl
xchg
mov
cmp
jo
in
cwde
(bad)
mov
out
inc
les
aaa
mov
mov
cmp
in
push
pop
jnp
add
cmps
mov
mov
dec
ret
je
sar
mov
dec
jmp
rcl
or
mov
push
sahf
push
sbb
and
jg
(bad)
pop
xchg
(bad)
imul
add
outs
les
daa
repz
lods
mov
xchg
dec
(bad)
and
icebp
cmp
mov
lahf
movs
bound
daa
div
jb
call
sub
jo
jle
leave
(bad)
add
adc
shl
xchg
xchg
inc
jecxz
dec
mov
mov
aas
jle
pop
jle
add
repz
mov
mov
sti
into
xchg
ja
add
mov
movs
jno
sub
int3
ja
dec
(bad)
xchg
inc
rcr
mov
and
ja
jp
mov
cmc
mov
adc
popf
out
in
dec
sub
or
stos
in
cmp
sub
push
jge
add
pop
xchg
(bad)
xchg
cdq
loope
cld
or
jmp
jmp
add
shr
cmp
mov
inc
push
ret
movs
dec
ja
jno
jne
adc
cs
idiv
into
loope
lahf
nop
add
mov
ficom
dec
mov
ja
std
popf
pop
xlat
call
pop
stc
outs
inc
mov
sub
fst
fstp
enter
add
dec
lods
int
and
and
mov
xlat
clc
pop
and
adc
jge
jg
mov
jle
call
inc
bound
cmp
int3
adc
add
test
xor
xchg
and
(bad)
cwde
xor
and
xor
inc
(bad)
retf
test
(bad)
mov
jae
push
jo
cmp
hlt
or
into
sbb
lea
(bad)
mov
cmp
xchg
jmp
inc
mov
mov
xor
je
mov
sub
mov
gs
sbb
sub
iret
aam
mov
mov
mov
ret
mov
add
or
xor
cmc
lahf
push
dec
pop
stc
lea
dec
pushf
mov
lods
add
inc
inc
arpl
dec
mov
out
dec
test
sbb
test
mov
push
cmp
and
hlt
xor
(bad)
rol
cmp
sahf
(bad)
dec
mov
mov
mov
inc
shr
mov
int
xchg
dec
les
nop
(bad)
out
call
ja
daa
push
mov
ins
inc
stos
add
jmp
mov
mov
pusha
or
in
push
push
sub
adc
ds
(bad)
addr16
stc
ins
mov
add
into
out
hlt
xchg
cmps
adc
std
lahf
ret
pop
ja
sub
jns
xchg
in
add
add
loopne
ret
mov
ds
mov
sub
lea
in
retf
mov
stos
das
and
xchg
adc
ss
jg
sub
sti
and
mov
sbb
mov
fldenv
cmp
(bad)
std
inc
std
test
push
mov
mov
retf
enter
add
jge
shl
int3
xor
push
mov
or
test
sbb
sub
iret
sub
mov
jp
inc
xchg
sbb
lahf
stc
xor
test
mov
push
ret
adc
dec
fistp
test
shl
sub
dec
mov
jmp
sbb
jp
xor
in
dec
mov
ror
stos
cli
mov
je
add
imul
and
sub
lds
fs
fmul
pop
ror
push
push
in
mov
popa
pushf
xchg
pop
nop
jbe
int
xchg
and
stos
leave
xchg
shl
loopne
push
pop
sbb
dec
(bad)
repz
je
sub
or
or
xchg
xchg
xor
jmp
mov
outs
jmp
add
dec
inc
mov
or
mov
stos
pop
dec
rcl
mov
sub
pushf
ds
pop
mov
xchg
(bad)
jmp
push
bound
arpl
add
sahf
dec
adc
xor
call
push
adc
data16
push
pusha
or
enterw
adc
mov
mov
repnz
sub
add
mul
stc
dec
in
lea
sbb
add
push
in
in
lahf
div
jmp
jae
(bad)
jno
pop
retf
movs
cs
call
dec
cmp
sub
push
mov
vaddss
cld
push
stos
js
cmp
sub
adc
mov
jle
mov
inc
push
(bad)
lods
(bad)
(bad)
ins
or
jo
(bad)
jl
pop
mov
mov
add
add
jmp
mov
sub
jb
mov
(bad)
hlt
sbb
fcompp
jbe
les
jmp
int
lods
push
scas
push
pop
inc
mov
adc
hlt
push
cs
mov
inc
test
ror
sub
xor
xchg
cwde
jns
pusha
retf
shr
(bad)
or
xor
jmp
gs
inc
aad
sbb
(bad)
out
cdq
adc
sub
xor
out
rcl
js
xor
loope
sahf
movs
(bad)
inc
jg
clc
inc
mov
(bad)
enter
not
push
imul
or
hlt
adc
(bad)
(bad)
enter
test
dec
imul
(bad)
fstp
push
sbb
push
cmps
adc
aaa
std
push
cmps
dec
or
dec
lods
add
clc
shl
jne
pop
lods
pop
sbb
pop
aaa
loop
neg
xor
fdiv
xchg
inc
dec
inc
out
int
loope
cmps
xor
push
mov
sbb
pop
sar
bound
xor
clc
enter
in
sbb
mov
push
push
je
lea
xchg
mov
nop
xor
fnstenv
out
sahf
lods
retf
add
pop
shr
popf
js
(bad)
jnp
lahf
sub
imul
icebp
mov
ss
imul
push
sub
outs
sub
cmp
imul
xchg
shr
adc
lahf
cmps
std
bound
nop
add
test
or
cmp
mov
outs
pop
pop
fimul
jbe
(bad)
into
jae
xchg
(bad)
rep
scas
inc
pop
adc
cli
mov
fst
in
retf
loope
push
mov
(bad)
sbb
adc
xchg
and
jmp
test
iret
lock
mov
pop
xor
test
dec
mov
into
add
jl
pop
in
jmp
pop
adc
dec
ins
and
sub
push
cmp
ror
sub
(bad)
ds
dec
lods
jno
cmps
pop
jbe
movs
mov
call
leave
ficomp
dec
dec
cmps
(bad)
pop
aam
cmp
popa
jns
cmp
stos
sub
mov
pop
add
jmp
dec
les
cmp
xchg
popf
jmp
xchg
dec
scas
push
and
mov
fnstcw
xor
daa
shl
scas
movs
adc
inc
lods
jle
daa
sbb
pop
jp
fcom
aam
(bad)
push
pop
daa
lahf
stos
sbb
shl
mov
cld
push
or
jecxz
test
xor
dec
jmp
int3
cdq
jle
and
pop
push
push
scas
mov
adc
pop
sahf
sahf
and
xor
jl
and
(bad)
jp
adc
xchg
int
fidiv
sbb
call
jp
sub
mov
lock
jo
pop
mov
inc
test
sbb
punpcklwd
inc
out
leave
jmp
mov
mov
jb
in
mov
pop
iret
sbb
inc
or
std
xchg
inc
sbb
sub
dec
sbb
movs
scas
iret
and
inc
or
xchg
rcl
call
add
ja
cmc
adc
ins
inc
dec
xor
leave
dec
pop
xlat
mov
and
sbb
idiv
ror
lock
js
js
addr16
outs
call
jl
pop
inc
das
cmp
mov
cmp
sub
pop
jae
jnp
stos
std
dec
lods
inc
jle
pop
(bad)
out
repz
xchg
mov
gs
xor
inc
mov
xor
xor
xchg
mov
aaa
or
add
pop
push
and
dec
add
scas
(bad)
div
inc
dec
shr
das
xor
jae
xor
ss
push
ins
jge
ret
shl
ror
or
xor
jge
ror
cmp
jns
js
dec
imul
push
mov
xchg
(bad)
(bad)
in
jle
push
cdq
cmp
push
stos
mov
sub
or
mul
mov
mov
and
scas
mov
or
pushf
scas
data16
adc
mov
std
adc
xor
adc
daa
je
adc
jp
or
mov
out
jns
push
add
fidivr
ficomp
lahf
aas
outs
add
pushf
pop
pop
arpl
sbb
add
rcl
fwait
dec
(bad)
into
out
(bad)
xchg
mov
mov
pop
shl
adc
mov
mov
sub
enter
jle
jmp
mov
int3
rcl
jge
mov
push
sbb
mov
ror
inc
aaa
push
out
push
sbb
xchg
mov
mov
fcomi
cwde
rcr
iret
(bad)
cs
mov
mov
jbe
dec
outs
xor
sbb
xchg
mov
popf
out
jne
retf
shl
icebp
mov
xchg
retf
sbb
hlt
mov
and
mov
nop
sti
test
dec
retf
aas
mov
loopne
dec
scas
imul
xor
stos
xchg
jg
ins
push
retf
pop
mov
out
inc
dec
pop
pop
cmp
jae
dec
pushf
sub
sbb
fsub
jge
nop
in
ins
xor
(bad)
ficomp
js
sub
jmp
pop
lods
adc
cmp
cdq
in
and
and
mov
pop
and
fwait
push
fs
outs
cmp
jmp
push
pop
cmp
pop
dec
stos
inc
jo
sar
lahf
mov
ret
(bad)
dec
sub
lods
add
scas
(bad)
jnp
es
enter
arpl
xchg
xchg
push
cld
cmc
xchg
cmp
sbb
add
dec
mov
xchg
mov
lods
cld
arpl
(bad)
rcl
dec
push
mov
clc
fmul
sub
mov
fsub
adc
xor
jmp
cmps
inc
je
out
pop
ins
cmp
jno
(bad)
popf
xchg
(bad)
pop
pop
push
sub
bound
(bad)
xor
fiadd
or
adc
mul
push
cmp
cld
jmp
shl
ins
adc
repnz
inc
xchg
out
fld
sbb
pop
xor
push
inc
fsub
dec
cld
jle
shl
push
or
sub
fldcw
mov
mov
in
jb
xchg
sub
vmwrite
test
push
add
int
push
mov
fxch
sahf
pop
sub
loope
jne
cmp
or
sbb
dec
inc
mov
out
cmp
outs
out
popa
in
loop
call
outs
xchg
inc
stos
cmp
dec
out
cmps
pushf
(bad)
and
add
mov
inc
retf
in
mov
lds
adc
jl
cli
mov
xchg
fmul
pop
repz
jae
push
xchg
jge
fld
aad
pop
mov
xchg
push
nop
sub
pop
lea
dec
mov
test
adc
adc
stos
inc
jnp
cmp
add
icebp
lahf
mov
push
mov
adc
nop
in
(bad)
ficom
inc
imul
mov
call
push
mov
fistp
add
stc
pop
mov
push
xor
mov
lods
jl
jmp
scas
test
pop
mov
pop
in
jmp
mov
add
ficom
pushf
jae
pop
jecxz
dec
es
xor
adc
fcmovnu
adc
dec
xor
(bad)
xor
in
sub
cmp
test
push
jno
xor
dec
inc
repnz
enter
repnz
nop
adc
test
das
ins
sti
jno
inc
cmp
inc
push
cmps
repnz
arpl
inc
sub
mov
mov
mov
(bad)
shl
jg
fisubr
and
xor
inc
pop
sub
adc
xor
mov
xchg
mov
mov
sbb
inc
mov
cli
jbe
push
xchg
xchg
not
mov
pop
daa
add
sub
bswap
shrd
outs
scas
div
or
mov
pop
out
gs
fs
aas
add
(bad)
out
add
jne
mov
push
xchg
cmp
and
stc
add
fstp
shr
and
pop
mov
cwde
mov
xchg
fwait
cmp
pop
inc
xchg
sub
add
push
mov
jae
gs
cmp
cmp
fucompp
or
jmp
test
lods
popa
dec
jmp
dec
add
gs
pushf
or
jmp
in
stos
pop
inc
or
hlt
xlat
cmc
loopne
pop
sub
rcr
mov
xor
mov
pop
dec
leave
or
sub
dec
sub
mov
outs
sub
push
daa
dec
or
scas
sub
xor
cmp
and
out
iret
pop
sub
jecxz
pusha
push
push
imul
rcl
les
movs
and
sbb
test
adc
ror
push
push
mov
shr
cmp
mov
shl
adc
mov
or
inc
jno
pop
mov
push
sahf
jmp
add
fnstenv
scas
mov
xor
jae
fnstenv
sub
and
add
sub
cmp
(bad)
ja
aas
push
test
cmp
or
test
ins
test
stos
jmp
outs
sbb
daa
sub
push
dec
sbb
inc
xor
xor
bound
(bad)
xor
aas
jp
(bad)
ror
adc
add
(bad)
jecxz
pusha
mov
test
xchg
sbb
das
add
adc
sbb
adc
mov
jg
aam
xor
rcl
or
vpminub
movs
test
cdq
retf
dec
jnp
pop
lods
mov
push
mov
mov
outs
movs
mov
popf
inc
mov
loopne
cmc
sub
ins
sub
js
mov
popf
das
mov
cli
fdiv
push
add
dec
jecxz
inc
cmps
clc
dec
mov
push
push
in
inc
nop
pop
pop
(bad)
div
enter
mov
(bad)
and
xchg
or
(bad)
jle
add
pop
adc
jns
mov
cmps
ds
sbb
adc
fstp
mov
xchg
fst
dec
mov
jns
jp
imul
enter
xchg
cdq
sbb
push
sub
div
jbe
pusha
xor
mov
out
pextrw
sahf
int
mov
add
mov
xchg
call
pop
mov
shl
retf
(bad)
add
(bad)
jae
call
xchg
mov
xchg
das
add
push
jae
mov
dec
ret
jge
mov
(bad)
mov
retf
pop
lods
lea
in
sar
adc
add
(bad)
jb
xchg
sbb
xor
jp
enter
lods
out
sahf
cmps
ret
js
cmps
and
or
in
jp
or
mov
test
push
mov
push
or
arpl
gs
jl
jo
mov
rcl
inc
and
mov
loop
popf
rcl
dec
mov
aas
inc
inc
sbb
or
out
sbb
fiadd
sbb
hlt
pop
iret
cmp
inc
lods
mov
fcom
imul
pushf
pop
mov
xchg
nop
(bad)
push
jp
retf
push
sar
jae
fnsave
xchg
into
fcmovbe
loop
pop
ret
out
popf
outs
jge
adc
imul
std
push
mov
aaa
ret
(bad)
sub
pop
and
inc
add
and
pop
mov
jmp
or
test
pop
pop
mov
push
lds
xor
fnstenv
cli
fs
xchg
mov
js
and
inc
popa
aaa
and
data16
mov
fdiv
in
lods
add
or
pop
adc
jecxz
(bad)
xchg
jmp
inc
push
push
gs
inc
xchg
or
xchg
add
mov
jbe
lock
jmp
jl
sbb
dec
dec
jmp
xchg
jmp
or
ja
fsub
pop
sbb
and
pop
sbb
mov
cmc
ss
xor
retf
mov
(bad)
cld
mov
addr16
and
test
or
scas
dec
(bad)
test
loopne
in
cmp
pop
inc
(bad)
in
pop
loope
add
mov
fsub
sub
out
push
xchg
pop
cmps
or
test
clc
shl
mov
and
fld
pop
icebp
mov
lods
jnp
jge
les
shrd
mov
dec
aaa
fdivr
mov
nop
jecxz
fld
cwde
je
add
add
mov
pushf
mov
aam
push
mov
in
push
stos
ds
push
sbb
pop
cmp
fs
xchg
cmp
pop
aam
push
in
cmc
and
jne
mov
mov
jb
loopne
mov
(bad)
cmp
rcr
mov
mov
movs
adc
mov
add
xchg
mov
mov
xchg
outs
fs
mov
loop
adc
call
fst
push
jge
cli
pop
lods
or
out
sbb
rcr
fdivr
cmp
dec
xor
ret
mov
in
add
repnz
mov
pop
push
sbb
push
leave
sub
push
push
div
jmp
pop
mov
std
or
jns
fisub
hlt
adc
call
mov
sub
cwde
in
xchg
fs
mov
mov
sub
aaa
shl
inc
inc
xor
inc
lock
lods
out
dec
dec
xchg
das
push
and
fs
hlt
and
fdivr
ja
scas
dec
push
sahf
mov
into
jbe
sub
lods
fidiv
pop
int3
aad
xor
jmpw
popa
pop
(bad)
fiadd
cdq
movs
sub
jno
dec
and
std
jbe
repnz
jne
int
pop
les
jnp
call
and
fcom
daa
xchg
aaa
pop
lds
loope
mov
sbb
jge
movs
inc
mov
cmp
inc
addr16
adc
cmps
mov
in
pop
aam
jnp
pop
and
enter
ss
dec
add
xlat
scas
int
leave
cmp
clc
ins
nop
(bad)
stos
jae
les
imul
aas
and
or
push
or
test
mov
sar
mov
push
jb
add
and
stos
cmps
popf
mov
int
jne
mov
jno
jle
lods
rcl
test
loop
shl
into
mov
push
push
cmp
fs
push
mov
xchg
dec
ror
xchg
pop
(bad)
movs
inc
jp
fldcw
pop
mov
pop
add
(bad)
leave
iret
movs
cmps
jo
sub
add
push
imul
cmp
xor
ret
out
(bad)
jbe
dec
and
xchg
in
je
sysexit
rol
stos
sub
fstp
xchg
jmp
sbb
dec
mov
or
xchg
sbb
jno
cdq
dec
in
mov
inc
inc
dec
jne
pop
mov
ret
or
ror
sbb
push
out
icebp
cmp
sub
sub
push
xor
xlat
and
fidiv
out
adc
fwait
mov
test
cmp
call
jmp
in
mov
loopne
cmp
jnp
cmp
inc
jge
xchg
ret
dec
sub
push
aas
int
arpl
sub
iret
out
sbb
test
stos
add
ret
jno
xchg
icebp
xchg
or
je
mov
aaa
xchg
add
inc
movs
lds
push
nop
out
jmp
mov
xchg
xor
pop
cld
xchg
ins
mov
lahf
lock
mov
mov
xchg
mov
arpl
dec
rol
push
xchg
mov
cmp
and
jb
inc
push
mov
jge
jge
jle
cmp
fwait
mov
pushf
mov
cmp
scas
ds
or
adc
pop
adc
into
sub
adc
leave
in
pop
das
std
cwde
outs
push
pop
push
test
sbb
aas
or
cmp
xor
outs
push
push
nop
gs
lods
(bad)
mov
add
push
jge
cmps
mov
sub
fdiv
fwait
hlt
jnp
(bad)
push
push
mov
arpl
test
ins
jg
mov
jnp
and
iret
push
aas
push
add
inc
sbb
and
jg
outs
sub
xor
fs
cwde
push
jp
loop
pop
adc
mov
mov
mov
and
hlt
jbe
imul
and
cli
mov
shr
adc
das
in
sahf
repz
mov
inc
push
jae
jno
dec
lahf
or
mov
push
shl
xor
cmps
movs
ins
les
in
aaa
lods
mov
add
arpl
retf
pop
xchg
(bad)
(bad)
sbb
dec
jmp
jns
jl
pop
mov
sbb
sbb
push
sub
mov
out
hlt
iret
adc
push
or
ins
dec
or
retf
mov
cwde
xchg
cmp
inc
sub
retf
std
js
jecxz
mov
dec
(bad)
mov
movs
xor
in
dec
xchg
jnp
bound
pop
std
in
shl
sbb
fisttp
js
fiadd
jp
fdivr
bound
add
popw
cmc
lock
jle
add
sub
adc
inc
mov
cmc
test
call
xchg
xchg
sub
repnz
gs
cld
in
movs
xlat
inc
mov
xchg
mov
pusha
clc
cmc
and
jbe
jecxz
mov
push
cmc
mov
retf
adc
xor
dec
(bad)
mov
pop
mov
rcl
and
in
rcr
lea
fldcw
adc
imul
xchg
inc
mov
out
mov
push
outs
push
stc
pop
repz
dec
enter
jge
jp
xchg
push
or
scas
cld
push
and
pop
push
push
lea
jno
inc
jge
push
push
stos
mov
add
xor
pop
aam
outs
daa
lock
movs
adc
ds
or
rol
dec
jmp
adc
out
popa
add
clc
bswap
cs
jle
in
add
cwde
xchg
xor
outs
in
inc
cmp
mov
pop
shr
iret
arpl
add
enter
or
xor
clc
and
lods
xchg
and
xchg
lds
aaa
mov
retf
shl
cdq
imul
not
pop
leave
mov
sub
ja
imul
stos
mov
aaa
push
mov
imul
jae
jne
cmps
mov
xor
les
push
or
xchg
pop
movs
in
jle
adc
sbb
mov
ret
and
add
outs
jb
adc
or
ret
jb
(bad)
sahf
test
or
mov
lock
stc
mov
adc
sub
xrelease
push
adc
pop
dec
xor
in
retf
pop
mov
loop
sub
out
push
adc
fiadd
les
mov
jnp
xchg
cdq
movs
sahf
mov
adc
xchg
outs
xlat
scas
pop
sti
or
aad
xor
fistp
mov
neg
adc
sub
mov
xor
aam
call
push
loopne
adc
stos
mov
(bad)
cmc
push
aaa
mul
(bad)
shr
dec
jp
call
rcl
mov
mov
fimul
sbb
lahf
inc
and
mov
jo
(bad)
jmp
push
loop
ficomp
lock
daa
jg
pop
imul
push
(bad)
std
xlat
in
sbb
cmp
sbb
test
outs
aas
pop
push
mov
sub
dec
or
mov
std
inc
xor
dec
fisubr
inc
adc
cwde
fisttp
test
jnp
cld
jmp
ins
cmp
mov
aas
cmp
jp
test
loop
inc
cmp
add
loopne
jo
and
xor
ror
sysret
xor
mov
cmc
in
adc
xor
js
mov
mov
sub
aam
loop
xchg
shl
push
push
cs
jo
push
test
cmp
pop
inc
jb
bound
mov
popf
in
adc
pop
xchg
(bad)
(bad)
jno
dec
pop
and
sub
lock
inc
(bad)
in
adc
movs
or
(bad)
iret
retf
repnz
mov
inc
stc
and
inc
and
(bad)
fsub
enter
cmp
sub
jb
xchg
out
aad
aad
outs
int
shl
inc
leave
bound
dec
inc
enter
mov
sbb
jle
adc
push
mov
jnp
mov
stos
cmp
sub
mov
and
jae
xor
jle
jnp
xchg
(bad)
fsubr
xor
ret
lahf
push
sbb
mov
jo
repz
add
adc
imul
pop
sbb
enter
shr
int
adc
mov
leave
xor
sub
lea
jmp
inc
inc
int
or
ja
pop
mov
adc
ins
adc
loop
dec
inc
js
cmp
cmp
cmp
pop
loope
outs
pop
call
jmp
mov
sti
cmc
iret
mov
and
es
ror
icebp
stos
jne
stos
hlt
data16
ret
pusha
dec
dec
mov
pop
int
inc
inc
or
call
inc
sub
mov
add
and
pop
jmp
imul
ins
fcom
sub
into
cmp
pop
int
cmp
cs
mov
test
or
ss
and
cmp
xor
lock
dec
pop
xchg
adc
lods
and
out
jl
xor
add
mov
outs
jno
fild
mul
out
inc
mov
dec
add
test
add
hlt
fnstcw
sub
outs
mov
inc
mov
push
add
pop
inc
xchg
gs
mov
call
loop
mov
and
sti
push
outs
mov
ins
outs
pushf
imul
arpl
cmp
xchg
mov
clc
xchg
movs
ret
cwde
xlat
dec
lea
fwait
sbb
outs
mov
bound
stos
jbe
adc
ficomp
xchg
and
shr
icebp
stos
mov
inc
mov
sub
movs
in
cs
bound
cmps
test
ja
jmp
pop
push
mov
int3
xor
jbe
pop
or
(bad)
int3
push
jmp
cmp
push
jmp
push
mov
aas
cmc
mov
rcr
out
push
mov
aaa
jecxz
push
in
jbe
adc
mov
mov
test
in
inc
hlt
jo
adc
in
shl
add
mov
stos
mov
xchg
cmp
sub
mov
cdq
adc
popf
aaa
in
jne
lods
dec
sar
imul
mov
imul
fwait
xor
gs
pop
mov
push
sbb
sar
ror
clc
adc
cmp
xor
add
or
adc
xchg
mov
bt
test
jmp
jmp
adc
fwait
ins
in
pop
mov
mov
and
shr
or
dec
inc
fcom
pushf
fcomp
lock
jnp
jl
daa
adc
int
jp
cmp
and
pop
cs
out
mov
popa
jns
jnp
les
adc
sbb
xchg
mov
xor
mov
dec
pop
aas
cmp
dec
add
or
arpl
mov
push
bound
das
pop
movs
push
loope
push
cmps
jns
jl
in
sub
mov
mov
mov
mov
out
fst
cmp
clc
inc
sub
inc
movs
fstp
call
dec
(bad)
aad
cmc
sbb
and
neg
sbb
(bad)
sbb
or
xchg
ret
cmps
jno
mov
adc
or
cmc
aas
push
in
xchg
cmp
ss
inc
loope
push
add
sub
out
and
addr16
cmc
xchg
push
std
dec
adc
push
adc
neg
gs
push
pop
or
movs
push
adc
mov
jo
pop
push
cmc
retf
aaa
adc
sub
lea
imul
es
pop
into
xchg
mov
xchg
repz
dec
sub
clc
test
push
bound
sub
jne
cmp
ins
aaa
in
or
jbe
ins
jno
out
mov
xchg
sahf
adc
push
cmp
lahf
add
lahf
call
sbb
pushf
inc
pop
or
push
xchg
and
inc
sub
cs
in
js
jbe
pushf
scas
add
scas
call
icebp
into
mul
gs
xor
push
out
movs
jns
adc
mov
jmp
data16
ss
imul
push
sahf
std
in
ss
inc
pop
popf
fmul
shr
test
jmp
cmp
dec
imul
sbb
pop
movs
cmp
test
in
add
imul
inc
push
ds
jle
mov
push
inc
mov
xchg
neg
pop
push
rol
xchg
shl
stos
dec
ror
push
fdivr
sub
dec
inc
mov
aas
dec
gs
push
mov
sub
jmp
jmp
ret
test
ds
xor
lock
mov
cmc
pop
loopne
inc
adc
cmc
cmp
jle
dec
or
into
push
mov
lods
fdivr
div
fidiv
xor
inc
pop
sbb
arpl
ja
retf
mov
ja
xlat
pop
and
dec
in
xchg
pop
iret
pop
test
pop
xchg
cld
sbb
push
mov
sub
cmp
out
in
pop
shl
jle
or
int
pop
or
and
iret
test
mov
add
xor
shl
jl
int
and
mov
mov
dec
add
nop
fs
das
fwait
or
jne
xor
add
dec
mov
mov
out
out
mov
lea
push
ss
in
inc
mov
shl
and
punpcklbw
leave
addr16
sbb
shufps
popa
cli
inc
mov
shr
outs
je
mov
xor
(bad)
cmp
test
push
mov
sbb
faddp
scas
sbb
(bad)
into
cmp
dec
lods
sbb
mov
push
sub
push
out
pusha
mov
fsubr
retf
cmp
push
mov
or
mov
loop
mov
push
ss
(bad)
loopne
aam
lods
jae
cmps
push
inc
pop
lea
pop
in
or
fbstp
in
push
dec
vmovsldup
ficomp
ins
bound
ins
gs
mov
jmp
fcmovnbe
ja
cmp
jle
(bad)
jo
inc
push
fbstp
push
sub
mov
fild
add
push
loope
push
into
push
mov
cmp
lea
dec
adc
sbb
stos
movs
lods
cmps
mov
mov
fimul
sar
clc
call
sub
mov
rcl
push
stos
mov
mov
or
sbb
sub
das
std
ins
adc
lahf
je
fwait
jno
addps
aad
fucomi
aaa
cmp
(bad)
pop
fild
xlat
jp
or
xor
fwait
inc
fidivr
shl
test
shl
xchg
xor
sbb
fwait
jae
loopne
sbb
out
push
leave
jne
push
mov
push
imul
pop
inc
mov
rol
or
test
dec
std
mov
lods
pop
std
in
add
mov
dec
(bad)
ins
add
(bad)
jo
scas
mov
gs
inc
jg
outs
icebp
dec
jle
dec
mov
mov
rcr
push
cmp
add
push
cs
lods
jne
sub
cmp
jmp
imul
icebp
xor
imul
xlat
in
(bad)
jmp
nop
xor
mov
jns
in
push
inc
adc
std
in
cmp
add
jno
loop
pop
mov
sub
pop
xchg
popa
out
stos
test
mov
aaa
xor
cdq
das
add
icebp
sub
jno
mov
aas
sub
les
push
or
fidivr
cdq
(bad)
outs
dec
dec
(bad)
push
(bad)
js
sbb
int3
repnz
mov
xor
push
xchg
clc
lods
fcom
ins
and
adc
pop
mov
jle
test
pop
cmps
sar
daa
ret
push
inc
popa
pushf
push
mov
push
sub
push
cmc
or
xor
and
push
xlat
sub
fwait
mov
adc
adc
sub
pop
pop
das
or
cmps
cmc
jg
add
jmp
cmp
or
(bad)
xchg
inc
pop
es
xor
mov
iret
jp
sti
pop
sub
add
pop
adc
loop
sub
bnd
out
lea
or
mov
cmc
dec
sbb
jmp
inc
cmc
dec
push
(bad)
dec
fistp
int3
fcomp
mov
mov
pop
lods
sbb
sub
in
and
jecxz
push
stos
pop
in
adc
aad
into
pop
rcr
mov
mov
push
jge
imul
es
(bad)
out
xor
jnp
shl
test
and
push
mov
push
mov
xchg
add
(bad)
cmp
adc
xchg
jns
out
adc
rol
pop
mov
add
cmc
xor
mov
dec
aas
adc
cmp
ror
pushf
adc
outs
dec
pop
ins
push
pushf
pop
mov
push
jns
lds
dec
lods
mov
nop
cs
push
aam
push
mov
je
popf
cmps
xor
push
les
add
mov
rcl
psubb
lods
nop
inc
loopne
or
cld
imul
inc
pop
jbe
(bad)
push
pop
cli
xor
add
xor
fistp
imul
inc
jp
mov
outs
int3
in
sub
jns
sub
sbb
mov
(bad)
addr16
inc
fcom
jl
sar
xchg
mov
mov
push
push
jmp
adc
push
fbstp
clc
lods
in
lahf
(bad)
push
cs
bnd
ret
fs
push
pop
cld
fsub
and
int3
mov
js
test
and
pop
mov
int3
mov
push
xlat
idiv
cli
mov
mov
inc
mov
inc
xchg
sbb
jno
aas
xchg
pusha
and
jns
mov
and
sbb
scas
xchg
loope
cmp
leave
scas
xchg
xor
imul
mov
cld
retf
rol
push
cwde
imul
sub
or
jg
mov
sahf
js
imul
xor
stos
jl
pop
icebp
pop
outs
adc
shl
cld
call
mov
dec
push
mov
stos
test
and
xlat
ins
ret
out
add
add
mov
neg
fldcw
jbe
es
inc
push
adc
cld
sti
mov
test
jmp
push
out
rcr
xchg
les
lds
dec
xchg
pop
inc
sbb
bound
mov
rol
gs
sbb
sti
add
lds
xor
inc
sub
cs
mov
add
xsave
mov
fs
mov
xchg
inc
into
mov
jle
es
sbb
jp
mov
cmp
hlt
(bad)
mov
jl
pop
shl
es
mov
pop
dec
inc
xor
pushf
ror
cmps
and
jmp
xchg
jno
xor
add
inc
push
das
aaa
xor
push
out
push
xor
scas
(bad)
mov
sub
dec
mov
lahf
je
xor
stc
mov
ds
fistp
inc
call
retf
stc
mov
sahf
fs
add
iret
mov
fs
fs
dec
push
out
ja
dec
(bad)
aad
push
outs
push
dec
xchg
mov
cmp
les
icebp
mov
mov
xor
das
pop
xor
fcmovbe
aam
rcl
rcr
mov
inc
xor
push
ins
out
mov
and
cmc
leave
mov
out
or
movs
pop
(bad)
mov
cmp
into
dec
jl
cmp
cmps
clc
(bad)
add
out
call
xchg
sbb
and
movs
dec
jno
dec
in
xchg
push
cmp
pushf
test
mov
mul
jmp
cmp
add
push
mov
bound
fcomp
ror
pop
xor
mov
dec
inc
cli
mov
(bad)
pushf
sbb
js
imul
loope
fldcw
mov
add
mov
clc
out
outs
in
out
test
int3
jbe
outs
cmp
add
icebp
icebp
cld
icebp
ins
adc
pop
xchg
test
test
aam
jmp
or
sbb
dec
xor
pop
retf
pop
jl
das
mov
jne
sub
fdiv
frstor
cmps
sbb
lods
add
dec
push
loopne
jp
std
jmp
loope
dec
js
xor
in
mov
adc
add
test
test
pop
inc
(bad)
shl
push
mov
pop
ror
das
ja
sbb
cmps
sub
or
mov
dec
test
xlat
loope
cs
xor
int
mov
mov
inc
arpl
and
xlat
mov
mov
pop
or
sbb
popf
dec
adc
sbb
push
jl
div
cmp
inc
ss
nop
js
aaa
(bad)
repnz
mov
and
jge
push
jg
int3
movs
(bad)
pop
sti
stc
pusha
call
lahf
outs
xlat
sub
ss
xor
or
mov
call
pop
or
test
pushf
xchg
scas
pusha
pop
ret
or
movs
aam
pop
vpaddw
xchg
into
test
cwde
xchg
mov
mov
add
mov
in
ds
xor
mov
dec
adc
mov
in
adc
xlat
push
cmp
arpl
icebp
or
ror
inc
ins
sbb
adc
fidivr
sahf
lahf
sti
sti
mov
aam
loope
and
js
xchg
sbb
cli
pop
pop
(bad)
cld
aam
xor
or
inc
lds
add
ins
pop
pop
xchg
sbb
mov
bound
xchg
inc
mov
retf
mov
shl
mov
shr
push
jge
pop
mov
daa
mov
arpl
in
(bad)
lods
out
xor
repz
movs
fadd
enter
jmp
and
push
cli
sbb
lock
add
push
aam
push
dec
sbb
bound
push
pop
jnp
movs
test
sbb
jmp
mov
enter
adc
out
push
test
ins
retf
fisttp
outs
cs
(bad)
jnp
fcmovne
(bad)
pop
push
in
xor
dec
mov
adc
mov
lea
xchg
cmc
pop
in
aam
xchg
add
push
clc
fdiv
adc
fiadd
out
push
jnp
inc
clc
or
inc
icebp
aam
retf
mov
jo
(bad)
rep
scas
lahf
sub
push
push
ret
test
(bad)
cdq
push
sbb
(bad)
cmps
add
pop
sbb
enter
imul
jl
sub
call
in
add
nop
and
or
fld
inc
jne
and
jne
sbb
ficomp
sbb
into
retfw
pop
sub
and
(bad)
jge
adc
outs
pop
or
fild
push
loope
adc
mov
popf
scas
mov
ret
adc
inc
mov
push
sbb
jo
mov
or
sbb
jle
aas
popa
into
jns
dec
push
imul
setge
iret
stos
mov
mov
cmp
push
jle
sar
lea
in
cmps
jecxz
mov
inc
xchg
sbb
cmp
cld
xor
jb
mov
dec
inc
mov
(bad)
nop
aas
fwait
jne
dec
into
in
les
jbe
into
repz
add
inc
mov
push
xchg
dec
xchg
sub
and
loop
addr16
add
cmp
or
gs
ss
aad
pop
fidivr
mov
or
leave
xor
sti
in
lock
mov
adc
retf
nop
cmp
je
push
nop
test
gs
adc
(bad)
add
ret
xchg
mov
fmul
mov
jg
cmp
sbb
ds
mov
pop
mov
pusha
jb
sub
pushf
mov
jge
outs
cmp
xor
lfs
movs
push
xchg
push
adc
(bad)
adc
xlat
push
jo
mov
es
xchg
lods
push
test
sbb
in
xchg
cmp
das
shl
pop
inc
push
pusha
and
push
(bad)
fmul
in
call
fsub
shl
inc
mov
jbe
mov
add
xchg
imul
pop
imul
sub
sar
add
push
xchg
js
test
sub
xchg
fmul
push
aad
nop
mov
sbb
shl
test
jns
adc
sub
sbb
enter
or
(bad)
fisub
cdq
ja
sahf
cmp
xchg
std
xor
outs
clc
stc
sub
pop
xchg
(bad)
jnp
adc
xchg
pop
rcr
ds
mov
mov
lds
adc
cmps
mov
jno
sub
(bad)
icebp
push
xchg
addr16
out
sbb
inc
dec
(bad)
mov
mov
addr16
add
push
in
test
cmp
jecxz
rol
cmp
loopne
dec
retf
stos
das
iret
push
or
je
xchg
icebp
loope
push
xchg
ins
push
xchg
push
ret
(bad)
jge
xlat
loope
test
sti
in
int
ins
idiv
(bad)
js
dec
(bad)
test
adc
(bad)
or
xchg
rcl
and
inc
jg
aas
cld
and
adc
push
lods
pop
sub
lock
(bad)
mov
mov
fisub
pop
scas
dec
std
or
mov
scas
cld
cdq
fnstsw
(bad)
sbb
cmp
in
loope
pop
adc
inc
out
add
imul
mov
push
push
lds
cs
xchg
adc
enter
call
mov
(bad)
je
test
mov
and
fist
dec
fdiv
rdtsc
pop
sub
movs
cdq
push
outs
stos
push
fistp
mov
mov
mov
in
sbb
out
lds
pop
(bad)
ficom
shl
fisub
jecxz
fiadd
add
dec
popf
ret
outs
pop
jne
movs
push
xor
cmp
idiv
inc
xchg
call
js
out
cdq
cmp
fnstenv
stos
cmp
xor
jmp
and
fwait
mov
ds
xchg
lock
in
fincstp
jl
out
cmp
pusha
out
jmp
pop
and
xor
mov
cmps
sub
enter
fadd
(bad)
(bad)
(bad)
bound
fmul
lea
leave
jmp
mov
mov
pop
in
call
sbb
xchg
adc
sub
js
inc
ja
jo
enter
cmp
cdq
mov
ficom
ja
push
xchg
out
mov
pop
outs
bound
les
dec
aad
mov
inc
hlt
(bad)
inc
lods
push
fdivr
mov
adc
dec
stos
div
ror
or
repnz
repnz
lea
pop
test
mov
and
sbb
fcmovnbe
push
mov
sbb
dec
xchg
lea
aam
mov
mov
sbb
push
aam
out
in
(bad)
pusha
outs
jbe
scas
jge
js
sbb
out
pushf
push
out
xor
ror
push
shr
push
cmp
inc
icebp
adc
(bad)
fmul
jmp
or
retf
out
mov
adc
dec
int3
dec
dec
call
outs
mov
add
and
push
mov
inc
mov
ss
cld
in
addr16
das
int3
adc
xor
mov
mov
call
ss
push
repz
ins
mov
fimul
cli
in
pop
and
jg
adc
mov
call
das
out
retf
jnp
lock
xor
add
das
push
and
retf
iret
push
adc
adc
push
lods
scas
popf
mov
add
js
inc
movs
add
jbe
xor
jg
fcom
repz
dec
ins
push
outs
ficomp
das
pop
jge
jo
xor
adc
add
push
mov
sub
shl
xor
jl
xor
iret
jmp
cmc
in
ja
or
sbb
jp
out
xchg
xor
arpl
jmp
push
call
imul
cmp
rcr
mov
and
jbe
mov
call
mov
cmp
or
aam
leave
mov
mov
adc
jecxz
sub
fwait
and
ins
jecxz
mov
sbb
js
cwde
push
lods
mov
xor
imul
xor
pop
(bad)
sbb
or
sbb
ja
jns
pop
repz
dec
(bad)
jmp
lock
xchg
mov
dec
fldl2e
jmp
fs
fistp
mov
inc
lods
mov
and
cmp
dec
das
popf
repnz
scas
mov
xchg
push
movs
push
mov
(bad)
outs
shl
or
dec
pop
in
mov
add
add
xor
push
rcr
test
cmp
cmp
and
lods
mov
mov
inc
add
xchg
(bad)
mov
adc
stc
mov
and
pop
jp
int3
icebp
lods
into
or
add
repnz
add
cli
dec
push
dec
lods
xchg
sub
xchg
mov
pop
mov
stos
cmp
stc
sbb
mov
imul
out
test
adc
ja
(bad)
retf
ds
lds
test
mov
aad
mov
ins
xchg
in
sar
mov
xor
daa
fwait
js
xchg
jmp
jno
inc
ret
sbb
mov
mov
sbb
sub
sbb
cmc
xor
std
jmp
mov
scas
test
dec
sbb
adc
or
sub
fwait
aam
rol
xchg
(bad)
cwde
popf
or
sub
push
push
pop
call
out
je
mov
cdq
or
mov
test
or
inc
add
pop
push
fnsave
imul
mov
fldcw
not
ds
mov
icebp
mov
sbb
mov
call
shl
lea
pop
into
cmp
js
call
mov
aad
sbb
out
(bad)
cmp
push
pop
lock
push
or
jb
cdq
sahf
mov
push
stos
mov
dec
mov
push
mov
inc
cmps
cs
shr
loopne
adc
lods
mov
in
outs
push
shl
(bad)
loop
cmp
mov
jp
mov
sub
jbe
mov
jne
scas
push
mov
fcomp
xor
adc
clc
jmp
imul
sbb
jmp
jmp
imul
not
mov
xor
jbe
rcr
std
(bad)
adc
icebp
push
movs
inc
sbb
add
nop
(bad)
les
sub
pop
test
adc
pop
(bad)
adc
ror
add
(bad)
pop
add
dec
aam
lods
inc
dec
aad
enter
fst
adc
popa
sub
mov
dec
add
leave
shl
cli
push
sbb
stc
pop
mov
xchg
push
cld
fcmovnb
sub
xchg
xchg
dec
xor
fcmovnb
lods
sahf
nop
add
sbb
or
mov
jbe
lods
add
je
mov
inc
(bad)
outs
cmp
mov
sub
xchg
pop
mov
xchg
dec
or
pop
out
enter
pop
imul
loope
cmps
and
mov
ins
movs
or
pop
je
pop
jnp
fs
mov
sub
les
jno
test
test
or
sub
sbb
cmp
push
xchg
es
das
cmps
jbe
mov
push
mov
mov
xor
cli
push
rol
sbb
xor
test
dec
jge
lods
mov
fnsave
aaa
add
inc
xchg
iret
and
xchg
lds
and
sbb
sbb
or
jge
inc
pop
inc
dec
(bad)
ja
xchg
clc
scas
mov
push
pop
and
pop
inc
aaa
pop
pusha
ret
leave
pop
(bad)
in
fisubr
xchg
mov
test
pop
movs
fild
mov
jecxz
pop
(bad)
mov
add
xchg
call
out
pop
mov
mov
rcl
sbb
mov
sar
fwait
mov
jmp
cmp
loop
cmp
out
sub
mov
ror
shl
ds
xor
sti
pop
in
ds
rcl
clc
or
push
cdq
cmps
(bad)
pop
adc
pop
scas
test
sub
outs
pop
test
neg
dec
cmp
xchg
lock
dec
cli
cmp
out
rcr
add
mov
pushf
cmp
and
inc
lahf
add
xchg
daa
xor
cmovs
repz
push
in
mov
inc
pop
push
ror
mov
adc
jae
not
cmc
mov
mov
bound
lea
retf
daa
pop
(bad)
mov
sbb
pop
into
pop
mul
push
into
into
lods
and
in
inc
cwde
xchg
mov
ret
sbb
sub
cmc
pusha
test
xor
and
or
daa
cwde
cmc
(bad)
jl
fadd
cdq
ja
sti
cmp
push
leave
enter
sub
mov
ficom
in
push
push
xchg
pop
lods
jne
xor
sbb
mov
(bad)
jae
mov
sti
xchg
sti
nop
shl
stos
sub
mov
aam
popa
add
test
dec
out
xor
(bad)
dec
dec
xor
push
push
fwait
popf
sbb
mov
dec
sbb
jb
mov
test
and
sub
outs
mov
pop
loopne
xchg
idiv
mov
popf
cmp
dec
test
pop
pop
or
call
out
dec
cmp
std
dec
sub
xchg
xor
lods
ins
bnd
and
mov
add
aam
in
pushf
sub
lds
xchg
fsubrp
xor
popa
sbb
das
push
ins
inc
and
push
inc
jnp
and
cld
(bad)
jne
retf
icebp
and
cmp
xor
mov
out
mov
dec
add
and
pop
sahf
jge
stos
add
scas
shl
or
addr16
enter
fs
push
xor
adc
push
iret
sbb
sbb
push
pop
lock
adc
mov
cmp
leave
xor
jne
adc
pop
mov
add
and
popa
movs
outs
fmul
xchg
inc
nop
ds
enter
jmp
arpl
ret
mov
sbb
push
les
jl
cmps
sbb
test
and
push
inc
cmp
or
xchg
xor
and
or
int3
pop
mov
out
(bad)
jno
fist
ror
into
arpl
stos
mov
or
xchg
mov
push
or
sar
daa
out
stos
cmp
push
dec
adc
jbe
call
jne
in
dec
dec
add
test
daa
fwait
cmp
test
and
lods
sti
movs
jne
cmps
inc
xor
cmp
cmp
loop
vmwrite
sub
hlt
movs
sbb
mov
je
dec
dec
push
jmp
test
mov
dec
retf
(bad)
lock
or
pushf
out
mov
aad
ss
out
sub
xchg
es
sub
and
push
pop
add
sbb
dec
add
int
pop
scas
mov
loope
shr
or
push
lods
adc
pushf
je
out
cmp
lds
push
sub
cli
daa
xchg
mov
xor
cli
sub
dec
sbb
jae
push
add
ins
movs
inc
out
ja
imul
mov
sti
mov
sub
adc
cmp
loope
aaa
jns
fild
hlt
fisubr
mov
push
or
fild
ror
mov
mov
xor
add
test
push
bound
test
mov
push
mov
repz
mov
xor
and
xchg
mov
not
jp
rcl
mov
jge
ret
mov
iret
xor
xlat
jmp
aad
mov
sbb
ins
rcl
sar
push
stos
and
sub
mov
mov
scas
punpckhwd
sbb
pop
add
or
(bad)
call
adc
aad
cmc
stos
fnstsw
mov
cmp
add
mov
inc
mov
loopne
out
push
fnsave
(bad)
cmp
adc
sbb
bnd
sbb
lds
adc
sbb
loopne
inc
sub
xchg
lea
add
dec
(bad)
out
inc
inc
(bad)
adc
cld
mov
cmp
mov
xchg
and
nop
inc
es
mov
out
dec
mov
fld
dec
je
jge
in
jnp
retf
mov
lock
adc
xchg
call
shr
in
repz
nop
movq
mul
gs
popf
rcr
iret
xchg
mov
dec
lahf
ins
popa
dec
mov
ss
inc
cli
jle
stos
inc
shl
hlt
jmp
adc
push
add
jnp
inc
arpl
xchg
arpl
xor
push
stos
scas
mov
stos
and
sub
push
loop
jne
mov
mov
mov
adc
pusha
jae
pusha
xchg
xor
ss
adc
ja
push
dec
inc
push
mov
xchg
inc
sub
ret
add
bound
stos
mov
mov
jbe
aaa
pop
popf
cld
dec
arpl
sub
imul
mov
and
sub
mov
jge
addr16
mov
sbb
(bad)
out
push
mov
loop
add
call
pop
loop
push
jge
cdq
packuswb
div
loop
mov
add
mov
pushf
adc
jno
call
les
sub
nop
xchg
mov
(bad)
mov
in
je
pop
pop
adc
lea
pop
test
sti
sbb
sbb
inc
mov
jae
shl
hlt
not
wbinvd
imul
lock
inc
push
punpcklwd
dec
loope
in
cmp
push
fcmovnu
iret
inc
jecxz
cmps
adc
or
pop
or
imul
sbb
inc
push
inc
xchg
sbb
xchg
daa
xlat
into
push
hlt
pusha
dec
mov
adc
daa
into
add
movs
imul
sub
fcomp
fisttp
and
mul
dec
fs
ficomp
cdq
sub
mov
int3
adc
shl
adc
fsub
(bad)
ins
test
ret
ret
ficom
mov
jecxz
xchg
movs
jno
sub
dec
xor
in
ja
(bad)
(bad)
inc
je
loop
adc
movs
scas
scas
adc
pop
in
mov
test
mov
aam
fnsave
inc
inc
stos
push
and
xchg
popa
sar
fisubr
les
push
fnstcw
test
or
mov
or
sahf
cmps
mov
pop
jmp
adc
sti
daa
std
(bad)
sbb
repnz
pop
jle
mov
int
div
and
pop
xor
push
cmp
jbe
mov
rcl
aam
push
adc
push
popf
dec
fcmovu
inc
add
in
test
in
pop
xchg
add
int3
shr
out
ins
mov
pop
jne
sub
test
dec
imul
or
push
fldenv
pop
dec
sbb
daa
push
mov
pand
dec
mov
dec
xor
add
cs
jo
mov
inc
cmp
add
sub
sbb
loope
cli
mov
cwde
adc
or
popa
das
pop
mov
mul
push
fwait
adc
call
mov
fs
fist
int3
loopne
repz
shl
xor
sbb
loop
pop
mov
cmp
aam
push
fnstenv
gs
(bad)
out
cwde
icebp
inc
loopne
adc
and
push
adc
and
cmps
out
cmp
inc
(bad)
inc
imul
cmps
mov
(bad)
push
jmp
cmc
gs
icebp
loop
loop
or
push
addr16
inc
push
xchg
xchg
or
add
cmp
push
inc
sub
inc
aam
call
into
arpl
jle
sub
mov
mov
cmps
(bad)
mov
sub
add
push
sti
add
cmp
pop
mov
shl
sub
adc
pop
fbld
cmp
mov
test
xor
(bad)
shl
je
mov
sbb
jecxz
mov
pop
mov
inc
mov
cli
push
mov
xor
jp
rcr
leave
push
mov
scas
lds
and
in
(bad)
fs
leave
xchg
cmps
fild
and
std
int
cli
mov
push
dec
xor
(bad)
mov
retf
pop
or
pop
dec
xor
xor
xchg
or
inc
fadd
sub
out
std
sti
sub
add
mov
movs
mov
pop
(bad)
(bad)
ins
jns
jne
or
sub
mov
fidiv
cmc
lods
fadd
ret
out
sbb
fidiv
push
or
repnz
rcr
fmul
daa
mov
sbb
cwde
push
inc
push
xchg
adc
fadd
ret
ror
(bad)
dec
fisubr
lds
pop
sub
add
xchg
mov
mov
sti
int3
imul
dec
mov
or
rcr
jecxz
imul
dec
xor
cmp
jns
ins
xchg
call
lock
inc
pop
stc
dec
or
inc
jecxz
cmp
mov
shl
cli
xchg
xor
test
test
pushf
loope
sub
loope
lahf
push
xchg
js
retf
shl
mov
push
in
dec
push
mov
and
repz
jo
popf
test
mov
pop
mov
cmp
into
xor
mov
mov
mov
(bad)
aad
xor
xor
ins
dec
les
int
cmc
jbe
ins
xor
rcl
jnp
arpl
jns
nop
mov
sub
adc
jp
enter
call
in
xchg
adc
cmp
shl
pinsrw
rcl
es
jo
imul
bound
sub
mov
pop
or
mov
jb
(bad)
stc
mov
leave
dec
leave
sbb
sub
popa
(bad)
out
(bad)
shl
sub
mov
xor
into
pop
sbb
adc
jge
icebp
dec
mov
repz
out
cmps
cmc
aas
lods
xor
cmp
repnz
push
in
in
adc
fisttp
add
xchg
mov
test
cmp
cmp
int
in
cmp
gs
dec
repnz
xchg
push
sub
add
or
sub
jae
imul
ins
sub
outs
cmp
push
push
cwde
inc
popf
pop
mov
xor
mov
cli
xor
mov
xor
fld
jge
dec
fcmovnu
das
je
mov
and
pop
dec
adc
xor
mov
dec
push
xchg
test
shl
(bad)
xor
adc
gs
or
(bad)
mov
movs
mul
xor
jae
push
mov
mov
xor
in
mov
xchg
xchg
movs
or
sub
inc
std
mov
sub
std
or
pusha
and
ror
movq
lods
outs
xchg
test
pop
cmp
mov
cmp
mov
out
mov
aaa
jb
sbb
sub
retf
shl
rcl
leave
je
int
push
test
data16
jg
xor
lahf
(bad)
xor
mov
cmp
stos
cli
retf
jno
std
add
push
jle
dec
rcl
mov
stos
mov
jecxz
iret
mov
repnz
dec
in
lods
sbb
sbb
test
mov
cs
adc
mov
xor
mov
bound
clc
fdivp
repz
pop
fsubr
mov
loop
inc
xchg
xchg
popa
repz
loop
aad
add
sub
jmp
pop
sbb
std
add
inc
cmp
inc
fsub
aas
mov
aad
pop
add
xchg
adc
shl
inc
inc
dec
inc
sbb
cmc
ror
xchg
add
dec
adc
fisubr
and
mov
pop
out
xor
mov
movs
xchg
leave
icebp
icebp
sub
bnd
hlt
clc
loop
dec
xchg
push
inc
leave
ins
jo
sub
or
pop
shl
sbb
movs
mov
jae
add
lods
xchg
jae
jle
js
mov
mov
aam
jp
fild
int
lds
std
sub
push
jle
xchg
call
movs
sub
push
sub
mov
cdq
fs
mov
rcr
out
mov
into
sub
jae
fisubr
push
int
or
adc
inc
inc
pop
jge
add
jp
mov
dec
fld
mov
aaa
pop
test
icebp
repnz
icebp
dec
xchg
xchg
cmp
dec
cmp
mov
or
sbb
cld
call
pop
(bad)
ins
xchg
cwde
pop
test
aas
mov
jg
jecxz
rcr
pop
test
idiv
sub
pop
ins
mov
xchg
rcr
inc
aaa
mov
cmc
gs
js
sub
das
stc
in
ds
jns
mov
fcomi
pusha
shr
das
je
sbb
aad
and
adc
shr
in
mov
shr
pop
add
lds
inc
xchg
in
and
and
xchg
lea
inc
rol
mov
push
out
sub
sub
popa
sbb
mov
pop
fsubr
and
sub
sub
push
imul
xor
retf
pop
(bad)
add
sbb
out
jne
mov
mov
icebp
loopne
jns
or
mov
(bad)
jecxz
out
xchg
inc
dec
ffreep
icebp
jb
or
fmul
or
imul
add
fsub
adc
push
push
mov
inc
shr
dec
popa
inc
popa
cmp
pop
jbe
int
shl
mov
mov
pop
lahf
push
cmps
cmp
jo
mov
movs
in
fdivr
push
or
sub
repz
mov
sub
retf
aad
stos
mov
push
sahf
mov
push
dec
sub
outs
popf
add
cmp
inc
lods
mov
leave
fwait
mov
dec
icebp
out
jg
mov
pop
xor
cmp
lds
mov
(bad)
movs
xchg
jbe
inc
dec
icebp
xchg
or
stos
cwde
dec
xchg
sub
cdq
mov
dec
push
xchg
scas
or
jmp
cmp
pop
sub
scas
aam
inc
and
inc
fistp
inc
call
xchg
enter
push
xchg
push
sbb
push
int3
(bad)
fidivr
push
mov
inc
pop
popf
sbb
and
ret
aad
push
in
aas
sub
xor
pop
jo
or
jb
retf
add
cwde
push
dec
enter
xchg
daa
push
in
retf
scas
outs
call
sbb
dec
movs
popf
jno
xchg
adc
repz
dec
jns
xor
mov
or
xor
aas
mov
outs
jle
push
xlat
mov
(bad)
dec
cmp
push
retf
aaa
inc
mov
ret
push
add
fcom
fcomp
pop
cmp
pop
ins
pop
adc
aas
lea
jae
lds
mov
sbb
xor
cmp
or
jbe
fwait
sbb
xchg
lahf
xor
lock
shl
test
cmp
mov
push
or
push
cs
dec
dec
sub
je
loope
(bad)
call
adc
nop
ds
pusha
mov
sbb
dec
or
fldcw
iret
inc
aad
loopne
xor
cmp
scas
test
mov
push
push
xchg
jl
sbb
mov
das
cmp
sbb
sub
cdq
in
out
pop
add
retf
mov
or
scas
inc
je
fnstsw
scas
sbb
loop
or
xor
adc
adc
dec
jle
je
data16
xchg
mov
cmp
sbb
das
push
xchg
jge
inc
(bad)
dec
jns
pop
fsub
push
mov
xchg
cwde
pop
add
ds
mov
fld
adc
fs
stos
dec
(bad)
fsub
loopne
adc
xchg
std
push
adc
das
pop
push
fldcw
sbb
std
ss
push
hlt
xor
xchg
int
push
dec
fdivr
fadd
jmp
int
cli
xor
jo
xchg
mov
inc
movs
mov
mov
fstp
and
pushf
sbb
cli
bound
jg
les
or
jecxz
cwde
movs
cmps
neg
mov
pushf
icebp
mov
jmp
outs
and
fwait
std
push
aaa
or
inc
push
psllq
repnz
shl
out
aad
push
leave
(bad)
sbb
adc
fadd
mov
sbb
and
jecxz
pop
push
movs
hlt
push
stc
add
int
and
lods
mov
add
dec
cmp
scas
ja
push
lock
push
mov
retf
or
bound
push
rol
aaa
das
movs
leave
test
adc
cdq
es
mov
dec
mov
(bad)
jns
sub
pop
fisubr
push
leave
(bad)
aam
stos
(bad)
fld
add
push
inc
addr16
mov
dec
pop
sti
fsub
cdq
mov
mov
rcr
cld
add
jo
sbb
and
pop
rol
daa
fsub
or
and
aad
xchg
xchg
add
into
(bad)
cmp
js
or
(bad)
loopne
jmp
arpl
aad
call
and
popf
jle
mov
push
daa
pop
imul
dec
xchg
or
xor
add
je
ins
pop
(bad)
fxch
cmps
pusha
add
pusha
sbb
int3
xchg
ror
xchg
xlat
mov
push
jo
ins
enter
repz
call
inc
into
add
lock
add
sahf
popf
and
mov
push
dec
stos
sbb
shl
popa
push
arpl
cwde
in
cmp
imul
out
sub
loop
and
pop
mov
push
cs
mov
push
add
rcl
add
xor
dec
mov
xchg
cmp
ret
gs
pop
and
stos
shr
inc
iret
repz
push
sbb
lods
rcr
fst
mov
lock
mov
cmps
jb
adc
mov
add
leave
cmp
aas
outs
push
adc
push
pusha
addr16
mov
add
mov
loopne
call
ins
shr
std
dec
inc
or
inc
(bad)
retf
xchg
jmp
mov
push
sub
cwde
in
jge
jecxz
add
sbb
mov
mov
fistp
adc
es
cmp
stos
jl
mov
or
ret
mov
out
pop
push
retf
or
cmp
mov
(bad)
jae
xor
cli
cmp
pop
pop
sbb
pop
mov
cs
(bad)
ret
dec
and
out
dec
pop
sub
adc
adc
mov
xchg
in
dec
ss
xor
add
cmp
rol
pop
adc
sub
push
movs
lds
test
inc
ret
jmp
mov
add
push
add
jecxz
iret
jl
fcom
mov
or
add
sbb
test
pop
imul
dec
cmp
scas
js
mov
cs
les
lds
mov
push
movs
add
in
mov
jecxz
push
loopne
data16
mov
cmp
in
lock
cli
pop
mov
leave
cwde
push
dec
mov
sub
cmp
hlt
dec
fdivr
ret
or
dec
xor
popa
pop
pop
fs
or
inc
inc
into
mov
dec
cmps
cmp
arpl
jno
dec
mov
pop
sti
ins
jl
adc
adc
fdivr
test
dec
and
mov
inc
fsubr
les
adc
dec
test
ja
mov
mov
lahf
sub
or
adc
out
xor
pop
test
retf
sbb
aad
adc
aas
dec
or
push
add
sub
arpl
sub
pop
(bad)
push
cs
add
xchg
ret
ins
(bad)
es
test
movs
in
ds
in
push
inc
push
test
ja
loopne
or
dec
repnz
add
inc
mov
cmp
cmp
movs
lods
add
scas
test
pop
or
sbb
out
adc
neg
xchg
add
jge
push
jmp
rcr
sub
pop
add
in
pusha
stc
jg
icebp
push
in
test
stc
fld
sbb
stos
lea
std
(bad)
and
add
fs
mov
or
xchg
cmp
inc
mov
addr16
lds
sub
cmp
pop
sbb
scas
in
scas
xor
mov
aas
movs
rol
pop
add
mov
cmps
dec
lods
test
outs
test
mov
xchg
inc
jo
push
xchg
xchg
lods
xchg
popa
dec
sbb
mov
lock
xor
fstp
inc
push
mov
jle
shl
int
or
stos
je
popf
adc
loopne
in
pop
sbb
mov
xor
mov
add
in
xor
in
and
retf
mov
ror
dec
enter
sub
xlat
rol
add
push
popa
xchg
sbb
cmp
pop
inc
sahf
aaa
mov
cmps
(bad)
push
jecxz
push
adc
sbb
push
dec
adc
icebp
xchg
inc
sysexit
syscall
adc
dec
neg
xchg
popf
dec
sbb
rcl
adc
aam
mov
jp
jne
add
outs
(bad)
xchg
mov
cmp
dec
retf
fs
push
rol
adc
push
adc
movs
adc
inc
scas
or
ja
(bad)
ret
inc
gs
mov
pop
sub
cdq
mov
out
or
jmp
mov
adc
(bad)
(bad)
jmp
shr
addr16
rcl
outs
sar
inc
adc
lahf
xchg
sbb
ja
mov
mov
dec
push
retf
mov
stc
cwde
pusha
lods
sahf
loopne
out
cmp
mov
js
jg
lods
mov
in
es
mov
mov
jge
pop
xchg
loop
int3
fsubr
jbe
fwait
adc
imul
rcl
je
mov
xchg
cmps
ret
and
pop
je
test
xor
ins
lahf
fucom
pop
pop
sub
push
xchg
ret
jno
jb
and
mov
xlat
cmps
and
mov
fwait
sub
fisubr
push
mov
sub
and
loop
into
ins
outs
loope
retf
and
jnp
les
bound
(bad)
sar
and
push
cli
or
les
jae
(bad)
retf
jmp
mov
xchg
sti
lahf
out
or
cmp
xor
jbe
fcmovbe
xor
test
repz
dec
xchg
pop
pop
sbb
mov
sbb
and
push
lea
mov
ds
cld
dec
pop
int
stc
cs
xchg
rcl
jge
sub
setge
lods
xlat
movs
jg
fcmovnbe
cdq
aam
mov
sub
loopne
jae
sti
dec
je
or
mov
jb
add
cdq
rcr
xchg
sbb
movs
movs
xchg
cmp
sub
fs
cmp
bswap
movs
das
aad
mov
lock
mov
int
enter
stc
dec
add
jmp
mov
xor
ror
dec
mov
retf
test
jbe
pop
mov
(bad)
push
fist
mov
and
scas
sub
test
cmp
cs
nop
cdq
fisub
shl
pusha
pushf
mov
aad
push
mov
int3
shl
data16
xchg
cmp
pop
push
jno
ret
jno
add
inc
imul
arpl
cmp
clc
pop
ds
sub
pop
test
icebp
add
fcomi
in
outs
jbe
pop
stc
stos
adc
adc
push
jns
add
dec
fcomp
jge
cs
sub
mov
sbb
pop
test
mov
stc
mov
js
or
outs
or
xor
jge
sub
pusha
and
clc
std
(bad)
mov
lods
mov
stc
sub
fild
xor
jb
push
cmp
hlt
add
adc
(bad)
mov
xor
sbb
cmp
ds
sti
cmp
adc
aam
jecxz
inc
and
in
push
pusha
cmp
(bad)
loope
lahf
dec
and
xor
xlat
sbb
nop
sbb
mov
popa
adc
lahf
or
outs
jmp
or
xchg
imul
mov
fs
push
repnz
jbe
jle
mov
scas
aad
das
in
cmps
or
mov
clc
xor
aaa
rol
pop
inc
(bad)
les
fwait
(bad)
cmc
sub
mov
push
cs
mov
or
cmp
test
sbb
aaa
mov
int
sub
(bad)
lds
mov
(bad)
out
les
push
jb
adc
pop
scas
hlt
push
xchg
xchg
sbb
cmp
cli
push
push
out
scas
scas
cmp
push
mov
dec
(bad)
sbb
scas
cmp
iret
call
pmaddwd
mov
xchg
dec
mov
adc
cmc
mov
cld
fdiv
mov
jmp
sbb
cmps
(bad)
retf
test
je
inc
out
ret
mov
stos
int3
push
cmc
rcr
add
push
sub
ins
mov
in
cmp
nop
lock
and
adc
fisttp
stos
gs
mov
push
movs
das
push
into
mov
mov
and
mov
sub
mov
fst
shr
jns
pop
imul
push
clc
int
sbb
fidiv
test
mov
pusha
dec
lahf
xchg
loope
pop
leave
xchg
mov
push
dec
shl
pushf
push
xchg
cli
inc
dec
(bad)
cli
mov
mov
xchg
or
imul
cmp
in
mov
xor
jmp
shl
in
lock
hlt
inc
jmp
rcr
test
xchg
sbb
cmps
push
sbb
mov
fwait
out
ins
jl
out
mov
pusha
sub
fs
sbb
mov
and
xlat
movs
mov
add
mov
xor
aad
mov
xor
dec
inc
adc
(bad)
mov
ffreep
loop
and
jmp
lods
adc
stos
das
shr
dec
(bad)
test
ds
arpl
repz
mov
mov
jmp
jg
lds
retf
dec
sbb
into
mov
sub
dec
in
sbb
sub
jns
jp
or
adc
mov
push
retf
jmp
mov
js
test
and
mov
pop
xlat
iret
or
imul
or
repnz
inc
pop
jb
mov
pop
xchg
xor
cmp
sub
shl
bound
arpl
shl
xchg
mov
(bad)
call
cmps
pop
sub
int3
adc
push
push
adc
mov
scas
test
in
in
or
inc
or
retf
push
dec
cmp
fnsave
shl
pop
ror
iret
adc
pop
inc
(bad)
int3
arpl
lds
push
loope
(bad)
fisttp
repz
mov
das
add
repz
mov
and
loop
mov
fild
hlt
mov
sbb
pop
adc
call
push
cmp
mov
lds
xchg
imul
(bad)
test
js
inc
pop
sbb
add
cld
push
loop
sbb
push
mov
and
cmc
(bad)
rol
retf
mov
xchg
retf
mov
in
test
and
rcl
and
js
push
mov
test
pop
rol
sti
(bad)
sahf
mov
cmp
ret
cmc
(bad)
fisubr
out
mov
imul
hlt
enter
pusha
cmp
mov
popf
inc
test
sub
mov
cmps
outs
dec
mov
and
adc
aaa
mov
and
arpl
int
popa
pop
mov
push
xchg
inc
je
int3
jmp
sbb
mov
push
xchg
out
sub
cs
aam
jge
call
ja
lods
sbb
jbe
mov
fcom
(bad)
ror
jne
call
push
sub
mov
out
outs
inc
nop
mul
and
xor
jg
push
add
push
xchg
jae
lods
popa
mov
adc
xchg
aad
pop
inc
ins
adc
cmps
or
repnz
mov
jnp
lods
mov
ins
aaa
mov
push
cdq
jmp
mov
in
sti
je
sub
lods
loope
xchg
add
fcomp
aam
jl
mov
or
rol
out
in
pop
add
dec
es
and
mov
outs
leave
inc
cmp
aas
and
sbb
cmps
push
mov
adc
data16
scas
mov
xchg
xchg
cmp
es
inc
jg
or
cmp
and
mov
xor
dec
jge
xchg
test
in
pop
dec
lods
dec
lock
mov
xchg
xlat
pop
mov
jl
scas
dec
arpl
pushf
dec
std
lahf
dec
retf
pop
or
dec
not
and
ins
and
mov
ror
pop
push
mov
cs
dec
ds
jns
pop
int3
ds
aas
jg
and
xchg
mov
movs
(bad)
push
aaa
leave
js
imul
cld
nop
(bad)
xor
movs
mov
push
pop
into
call
mov
leave
ret
cdq
leave
adc
fld
cmp
sti
icebp
(bad)
loope
enter
sub
dec
dec
inc
scas
pusha
(bad)
xchg
mov
retf
push
or
xchg
retf
lahf
stos
nop
daa
cli
push
mov
mov
rcr
or
jo
mov
movs
mov
call
aam
gs
inc
mov
pop
xor
jl
inc
adc
shl
outs
xor
mov
loope
inc
mov
ds
out
push
push
inc
ficomp
aas
sbb
pop
cs
jmp
fldcw
push
mov
das
mov
idiv
xchg
aad
or
cs
cmp
stos
adc
repz
pushf
mov
lahf
retf
inc
arpl
loope
repnz
idiv
ror
or
xchg
imul
gs
adc
pop
rcl
ja
mov
inc
sti
mov
xchg
clc
lods
cs
shr
or
jmp
les
inc
retf
sbb
xlat
pop
push
inc
adc
sub
sbb
retf
jecxz
mov
pop
fadd
xchg
dec
adc
push
xor
gs
sub
outs
lahf
mov
adc
int
sbb
and
or
mov
pop
jnp
inc
into
pop
aaa
loope
mov
mov
push
ins
and
mov
adc
push
(bad)
into
fild
pop
inc
cmp
add
cmps
push
ins
adc
(bad)
cs
addr16
dec
retf
xor
jne
popf
jmp
dec
jbe
xor
int3
imul
dec
xchg
ror
jg
mov
js
xor
or
and
lods
frstor
mov
je
mov
ja
das
enter
add
aas
enter
fcomip
push
pop
push
rol
dec
xchg
mov
or
and
ins
xor
mov
stc
push
daa
dec
scas
xor
daa
jmp
shl
jmp
imul
cmp
cmp
inc
cld
cdq
sti
pop
daa
or
lea
sbb
mov
jns
dec
fdivr
mov
repz
or
pop
mov
ja
popa
jbe
sub
or
mov
push
jne
pop
xor
xchg
gs
sbb
call
sbb
test
jno
ins
ja
mul
sahf
push
icebp
mov
pop
popf
adc
xchg
pop
cli
xchg
xor
jno
es
scas
js
retf
jp
xor
sbb
test
mov
(bad)
ja
std
push
repz
fwait
dec
icebp
pusha
mov
and
cmp
cmp
mov
jecxz
pop
inc
outs
ja
popa
or
in
icebp
inc
fnstsw
lods
sbb
jl
popf
je
push
sti
repz
mov
fs
shr
mov
je
mov
sbb
loope
(bad)
adc
push
les
mov
and
retf
add
retw
cmc
ret
rcl
dec
pop
sub
sti
out
lods
in
(bad)
and
movs
cmps
out
pop
jecxz
mov
sbb
lods
mov
push
adc
adc
mov
push
lock
mov
inc
cmp
arpl
movs
mov
mov
ins
xchg
mov
sub
add
add
jbe
enter
loop
idiv
(bad)
js
out
ss
rol
repz
pop
(bad)
push
xor
in
xor
pop
pop
ja
or
push
inc
pop
daa
fsub
mov
loope
mov
cmps
or
sbb
fwait
push
sub
push
mov
xchg
inc
dec
pop
adc
and
idiv
mov
cwde
(bad)
cmp
out
hlt
jbe
(bad)
stc
mov
iret
ja
clc
daa
retf
pop
sub
ds
ins
xor
popf
test
leave
and
fisub
fs
pushf
xchg
inc
aad
fcom
pop
cmps
stos
outs
xor
xchg
jle
and
and
cmps
adc
jecxz
sbb
xchg
adc
cmp
std
push
jnp
xchg
jbe
in
inc
(bad)
in
nop
fs
cmp
jo
inc
fisttp
mov
xchg
jnp
or
or
fs
cmp
cld
inc
add
or
aaa
ror
or
mov
sub
call
cmp
fld
rcr
test
retf
fwait
pop
push
dec
add
jp
xchg
cmp
push
retf
data16
aaa
fs
das
mov
sub
scas
sub
add
ins
push
stc
ret
or
xchg
bound
fistp
lea
adc
cmp
or
sbb
and
into
cdq
mul
addr16
mov
(bad)
sti
cld
fnstcw
outs
lods
je
mov
cmps
add
adc
mov
jbe
leave
cmovs
mov
rol
test
fdiv
dec
and
cmps
repnz
data16
dec
and
ins
adc
cmps
imul
leave
in
cld
adc
and
xchg
lods
xor
jne
push
mov
push
sub
(bad)
inc
(bad)
jo
sbb
rol
ss
or
shl
xor
xor
jnp
and
pop
dec
nop
popa
out
adc
ss
test
push
pusha
push
jns
stc
sbb
call
xor
ret
xchg
std
jle
inc
jg
push
fs
push
push
adc
fsubr
sbb
or
and
mov
bound
pusha
cmp
jno
or
jg
int3
adc
cmp
push
xchg
cmp
stos
xor
xor
(bad)
mov
fsub
adc
mov
stos
adc
enter
scas
clc
jmp
rcl
push
xchg
stos
sbb
rol
jae
daa
sbb
dec
and
jnp
xor
pop
pop
into
fistp
fstp
adc
mov
fldcw
inc
in
scas
gs
and
xor
adc
in
push
mov
stos
adc
pop
xchg
stc
cmp
ins
test
adc
pop
cmp
retf
retf
aaa
sahf
rcl
nop
mov
dec
cwde
xor
out
popf
pop
fsub
adc
mov
cmc
mov
cmp
ds
(bad)
scas
xor
fisub
repz
scas
jge
loopne
cmps
sbb
sub
and
cli
sub
sbb
jnp
ins
fst
inc
fstp
(bad)
test
mov
or
sbb
movs
dec
ja
push
or
dec
pop
jle
push
mov
xor
add
inc
or
mov
or
shl
cmps
mov
add
lods
mov
xchg
mov
jo
xor
call
push
imul
iret
ss
jp
mov
out
in
jecxz
cmp
outs
dec
idiv
outs
lods
(bad)
jno
dec
adc
sbb
(bad)
nop
sbb
sar
adc
in
adc
test
push
test
pop
fwait
stc
pop
mov
pop
imul
loop
fisubr
jne
mov
popf
inc
push
push
sti
or
stos
jae
push
div
sahf
mov
lds
mov
xchg
mov
sub
cmc
mov
adc
jns
or
fwait
dec
arpl
test
xchg
push
out
loopne
mov
add
cmp
mov
aaa
mov
pusha
adc
inc
sub
jne
aaa
adc
pop
into
pop
lods
dec
push
das
inc
es
jnp
or
(bad)
jmp
lock
mov
sub
xor
add
out
pop
jmp
xor
loop
jno
retf
push
inc
push
icebp
movs
jnp
mov
stc
repz
pop
inc
sub
or
or
mov
sub
ud0
jns
fstp
(bad)
test
ret
fsub
dec
jne
push
fisub
mov
arpl
sub
and
dec
outs
jo
aas
mov
cmps
cmp
cmp
lea
jecxz
xchg
pop
mov
cs
xlat
mov
sub
or
jo
xchg
push
or
inc
xchg
dec
(bad)
dec
push
add
sub
in
les
jle
shl
test
mov
dec
and
call
inc
int
addr16
and
lds
fstp
cmp
add
dec
retf
mov
fwait
loop
call
add
dec
lea
mov
add
pusha
scas
jle
lods
push
adc
popa
enter
push
or
and
mov
xor
xchg
xor
mov
mov
pop
int
add
bound
mov
xchg
lahf
scas
pusha
test
jmp
fxch
std
lahf
or
sbb
in
xor
pop
add
stos
ret
adc
xor
xchg
movs
mov
dec
lock
xor
xlat
adc
(bad)
jno
jbe
dec
test
std
dec
cmp
in
add
retf
je
inc
inc
jae
jp
jmp
and
int3
sbb
mov
out
es
xor
fstp
jb
mov
std
daa
paddusw
jno
inc
pop
clc
iret
dec
es
mov
call
in
dec
mov
shl
(bad)
xchg
or
push
cmp
idiv
or
mov
adc
cwde
dec
adc
rol
jns
stos
sub
not
and
movs
add
out
sbb
mov
shl
add
push
mov
pop
repz
xchg
xchg
pop
out
lds
loop
mov
int
push
ret
and
and
movs
hlt
push
repz
or
mov
jle
pop
jecxz
call
and
and
pop
ins
(bad)
sbb
lock
outs
inc
mov
rcl
sub
std
fs
enter
data16
cmc
xchg
cmp
pusha
mov
lea
mov
retf
lds
test
or
jecxz
mov
ins
(bad)
mov
cmps
xchg
push
outs
movs
scas
cmp
xchg
or
cmc
mov
inc
push
mov
call
fbld
test
xor
push
mov
arpl
push
imul
shl
outs
add
lahf
push
out
add
pop
pop
icebp
jae
push
pop
and
jle
stc
mov
aaa
pop
sti
push
cmp
inc
mov
inc
xchg
aad
sti
retf
sub
cs
dec
mov
mov
cmps
popf
ins
movs
push
sbb
leave
pop
xchg
loope
sub
pusha
scas
rcr
xor
retf
jnp
add
adc
push
scas
stos
jne
addr16
scas
cld
or
fimul
and
cwde
inc
adc
cmpxchg
stos
cmp
mov
mov
stos
push
push
and
mov
jno
mov
jbe
dec
dec
jno
jecxz
inc
dec
sbb
xor
test
xor
dec
mov
(bad)
or
cmp
pop
cmp
(bad)
adc
lds
es
lea
int
bound
ret
sub
jl
fwait
ror
or
add
popf
xor
xchg
ja
inc
mov
in
jp
stos
rcr
mov
sti
jge
inc
ins
push
cmc
data16
adc
scas
mov
mov
cmp
sar
adc
xor
pop
(bad)
std
xchg
lea
aaa
jg
sbb
jmp
fisub
shr
leave
dec
loope
ret
inc
and
cli
rcl
scas
call
addr16
cdq
cmp
cmps
fbld
lahf
dec
cmp
cmp
xchg
ins
iret
push
fisub
call
arpl
(bad)
in
adc
lods
cmp
pop
imul
push
pop
pusha
mov
leave
fimul
push
mov
stos
cmp
and
pop
pop
pop
sbb
es
imul
fs
pop
(bad)
in
sub
sbb
pop
mov
cmp
inc
gs
pop
scas
pop
push
push
scas
cmp
cmp
push
aas
sbb
out
xchg
mov
stc
ins
jae
and
sub
jb
jne
fwait
int3
outs
mov
jne
gs
inc
fwait
push
cmp
jne
fstp
adc
mov
retf
inc
std
fs
inc
(bad)
fstp
movs
ret
mov
inc
push
stos
dec
int3
adc
mov
add
push
nop
aaa
popaw
les
xchg
sub
loope
inc
dec
(bad)
pop
jp
mov
push
test
ret
sti
int3
push
cmp
adc
or
sar
lock
aad
(bad)
or
aaa
pusha
sub
sbb
push
jg
jle
or
jmp
xor
mov
mov
retf
repnz
fcom
xchg
cdq
cmps
sbb
cs
stos
and
and
sub
inc
mov
pushf
jbe
add
xor
xchg
inc
sub
test
cmps
stos
dec
push
scas
mov
lock
pusha
ja
fwait
rcl
push
xchg
xlat
add
lahf
xchg
popa
xchg
lods
loope
xchg
clc
pop
call
lock
loope
xor
in
out
in
ins
adc
pop
repz
jecxz
fucomp
jmp
lods
fsub
xor
(bad)
mov
cmp
add
push
jb
push
xor
jp
mov
sbb
pop
push
xor
retf
add
cmp
mov
mov
jne
das
mov
mov
fs
test
aaa
mov
fwait
test
jnp
cmps
fdiv
push
(bad)
push
or
les
jg
dec
in
js
outs
rcl
call
xor
in
and
mov
loope
cld
ins
add
or
out
cmps
dec
test
inc
sbb
pop
scas
les
addr16
xchg
hlt
into
cmc
cmp
sahf
out
mov
arpl
(bad)
push
rol
mov
cmps
(bad)
call
adc
scas
xchg
or
fadd
dec
mov
(bad)
jg
imul
aad
xchg
movs
fild
loop
pop
or
cld
jb
int
mov
loope
sub
xor
and
inc
pushf
jg
mov
pop
cld
mov
pop
add
stos
pop
pop
ror
mov
pcmpeqb
xor
jbe
fnstcw
push
mov
movs
jecxz
sbb
ret
cmps
xchg
pop
fldenv
adc
fwait
or
stos
mov
fstp
fidivr
shr
push
leave
in
jae
call
push
arpl
pop
ret
test
or
out
inc
push
xchg
shl
or
ins
arpl
pop
sbb
pop
adc
enter
jns
add
imul
addr16
repz
jno
xchg
jge
loop
mov
xchg
sub
mov
fucomi
sub
or
inc
and
xchg
in
mov
aad
mov
shr
lock
lahf
aaa
or
push
jp
jmp
jp
xlat
fdivp
repnz
adc
mov
xor
adc
ss
or
cmc
arpl
ret
js
aas
adc
mov
scas
cmp
icebp
inc
jbe
cwde
add
scas
iret
pusha
or
push
mov
jp
pop
fistp
cli
dec
ss
mov
xchg
jbe
sub
fadd
jmp
mov
outs
(bad)
or
repz
les
fwait
cmc
xor
scas
fimul
mov
push
push
test
jo
and
sbb
and
pop
sub
aad
mov
sbb
add
sub
cmps
xor
shl
add
repz
pop
(bad)
mov
jle
clc
mul
dec
jb
in
xor
cmp
jge
fist
sahf
add
lods
xchg
jae
or
or
call
jns
mov
jae
int
loope
mov
dec
jne
sbb
jno
xor
xchg
jmp
pop
bound
fs
dec
adc
mov
xor
sub
jecxz
cdq
jp
push
xchg
not
fistp
popa
or
mov
sbb
dec
sar
pop
add
ret
mov
xchg
les
imul
mov
mov
cmp
xchg
pop
pop
out
aam
aaa
jmp
jb
mov
push
test
fdiv
iret
add
jns
push
(bad)
mov
add
adc
aaa
adc
out
xchg
(bad)
mov
and
adc
xor
sub
jnp
sub
pop
ret
dec
push
es
mov
fbstp
mov
cmc
lods
cmp
hlt
jmp
or
and
add
fdivr
mov
dec
xchg
scas
test
or
push
xor
in
jae
push
inc
adc
das
mov
inc
out
inc
std
ss
add
xchg
imul
mov
xchg
jp
jl
call
jnp
fldcw
pop
pop
pop
in
pop
sbb
jecxz
jae
ja
mov
int3
or
xor
pop
test
mov
cmpxchg
out
jb
mov
xor
arpl
xchg
cmp
dec
in
add
(bad)
jmp
mov
jnp
cmp
pop
dec
mov
(bad)
jae
cs
jno
(bad)
addr16
cmp
jne
add
sahf
sub
jmp
movs
inc
ja
(bad)
push
test
sbb
push
sar
sbb
shr
sbb
mov
push
retf
rcl
jno
or
xchg
retf
mov
sub
cdq
and
jmp
sub
xchg
sub
or
cmp
dec
mov
jnp
mov
dec
inc
movs
pop
stos
cmp
lds
(bad)
mov
pushf
ret
pop
mov
pop
es
cmps
inc
jmp
popf
push
mov
add
ss
sub
into
stos
pop
mov
or
pop
dec
jge
dec
push
add
mov
jmp
add
test
mov
test
dec
xchg
in
loope
sbb
sbb
pushw
pop
sub
mov
lods
jmp
aaa
xor
je
cmp
dec
inc
jb
repnz
fs
jmp
icebp
scas
fwait
pushf
es
les
lds
cmp
out
add
loopne
inc
arpl
jnp
fidivr
jmp
fstp
and
mov
cmp
enter
jno
fnstcw
jp
cmp
sub
and
add
hlt
mov
lds
xor
pop
stos
cmp
ss
pop
dec
pop
mov
mov
mov
enter
(bad)
fdiv
pop
sbb
inc
mov
pop
jmp
xor
xchg
in
retf
loop
lea
jae
out
jmp
pop
dec
and
sbb
pop
fistp
aam
mov
in
enter
in
cdq
test
fdivr
dec
mov
or
aad
test
lahf
xor
cmps
ins
mov
dec
in
mov
push
sbb
xchg
sti
fnsave
jo
dec
mov
scas
or
cs
imul
push
sbb
push
lock
(bad)
int
add
cli
(bad)
imul
test
int3
jmp
sub
test
mov
push
pop
add
in
push
scas
cmp
sub
clc
lods
jnp
jnp
xor
in
fisttp
mov
(bad)
lock
mov
ret
aas
sbb
inc
lahf
and
pop
mov
push
jp
lahf
cmp
dec
xor
in
lods
push
ret
out
imul
sbb
clc
push
out
movs
inc
jmp
test
rcr
call
xor
xchg
(bad)
int
sub
mov
jg
xchg
mov
add
inc
hlt
shl
and
fild
pusha
fstp
mov
call
adc
mov
jo
iret
and
push
jo
das
fistp
out
jmp
xchg
add
dec
scas
mov
pop
fbld
mov
outs
xor
jnp
add
xchg
inc
xor
iret
push
repz
dec
sbb
jbe
push
dec
jnp
cmp
xor
out
mov
out
add
cli
mov
adc
pop
xchg
or
xor
ret
xor
das
stos
inc
xchg
mov
loopne
mov
or
stos
mov
jge
cwde
push
test
shr
popa
shr
xchg
add
push
sub
add
shl
xor
in
mov
lods
sub
push
mov
bound
fstp
stc
add
mov
adc
aas
out
cdq
push
out
cmp
jecxz
or
adc
mov
ja
sti
jecxz
in
sbb
mov
outs
les
adc
xor
(bad)
out
inc
mov
sub
pop
xor
lahf
pop
into
adc
dec
pop
mov
xchg
inc
and
movs
popa
mov
fiadd
dec
les
repnz
ja
nop
pushf
pop
xor
aad
or
xchg
ja
cmp
inc
xchg
not
dec
fisub
addr16
in
mov
rcl
mov
imul
dec
sbb
mov
or
(bad)
addr16
pusha
cmps
mov
mov
mov
mov
mov
push
movs
pop
xor
cli
(bad)
sub
fldlg2
call
adc
cdq
inc
aaa
and
loop
push
mov
aas
ins
jle
sub
add
push
jnp
shl
sub
cmps
cmps
xlat
adc
fiadd
aam
leave
and
jbe
cmp
xchg
jmp
mov
push
seto
mov
mov
adc
ins
pop
mov
mov
pushf
retf
cmp
pop
loope
fsubr
out
(bad)
push
push
rol
xor
sub
adc
cwde
ins
ret
test
in
popf
cld
rol
push
inc
cmp
mov
cdq
push
fstp
pop
ret
aad
call
outs
repz
mov
add
and
rcr
pop
mov
js
fldenv
mov
add
(bad)
loop
out
adc
test
fwait
rcl
loopne
imul
nop
fsub
mul
lahf
add
xor
(bad)
pop
mov
and
sbb
scas
push
mov
fisub
xor
add
dec
adc
xor
cmps
sahf
mov
les
push
outs
in
icebp
fucom
sub
cdq
push
dec
imul
adc
scas
cdq
jg
les
add
mov
in
dec
push
imul
mov
xor
neg
sbb
sbb
jmp
adc
daa
inc
cdq
and
je
(bad)
mov
lods
ss
(bad)
sahf
jno
mov
push
dec
jecxz
jae
cmp
test
jge
popa
ret
(bad)
out
std
les
xchg
push
cs
mov
xchg
jp
cmp
jl
ret
pop
sub
sub
push
movups
enter
std
xchg
mov
mov
push
mov
sub
outs
add
mov
inc
fld
add
sti
stos
loop
cmp
enter
xchg
and
mov
fwait
ds
in
loopne
sti
mov
xor
leave
cmp
cld
pop
jmp
cmc
pushf
push
cmps
sub
inc
loop
xor
nop
in
retf
fisub
retf
xchg
shr
xchg
sub
inc
cwde
push
and
std
sbb
cmp
adc
xchg
mul
mov
sub
fld
shl
add
sar
ins
jl
fmul
jge
inc
cdq
jge
aaa
clc
dec
pop
ret
dec
cmps
movs
(bad)
js
lahf
dec
and
dec
ficom
mov
popa
sbb
pop
cdq
pusha
sahf
mov
adc
mov
mov
push
and
ror
test
jge
movs
rcr
pop
pop
stos
jae
outs
cmp
pop
xor
dec
mov
pop
mov
and
adc
sbb
sub
mov
addr16
stc
mov
jecxz
mov
out
cmp
mov
test
pusha
pop
xchg
loop
dec
leave
lea
clc
stc
or
jle
mov
jmp
call
fnstcw
xchg
mov
xchg
fld
dec
int3
scas
adc
call
in
jp
xor
inc
stc
xchg
mov
stos
and
rcl
mov
scas
lea
iret
mov
push
fidivr
(bad)
mov
xor
sar
mov
dec
mov
pusha
icebp
pop
or
dec
pop
std
lea
fsubr
aas
push
pop
add
out
rol
adc
xor
ret
or
movs
ins
jg
mov
or
retf
shl
or
mov
cmp
mov
js
cwde
(bad)
pushf
adc
sbb
mov
mov
sbb
aaa
adc
lock
cli
pop
cmc
inc
cmc
clc
in
loope
mov
scas
mov
inc
xor
pop
daa
leave
inc
pop
mov
jno
stc
iret
fnsave
stc
jns
adc
cmc
jne
xor
test
pusha
mov
outs
adc
loop
cmp
adc
in
mov
adc
dec
mov
popa
ins
ins
cmp
ss
mov
cwde
int
xor
rcl
mov
lock
fdiv
ror
daa
add
inc
aaa
aaa
push
pop
cmp
mov
cmp
sub
jmp
imul
(bad)
jmp
aam
mov
jmp
dec
add
jl
aas
cdq
pop
adc
cmp
pop
(bad)
cmp
jg
dec
stos
aad
jg
pop
retf
scas
(bad)
shr
popa
adc
in
and
imul
cld
(bad)
or
(bad)
dec
fst
cmps
jp
(bad)
bound
push
cmp
loop
les
lock
jmp
ja
pop
pop
shl
xchg
ds
xor
retf
inc
mov
xor
pop
xchg
push
pop
test
scas
out
fld
pop
jg
and
sahf
outs
ins
iret
add
popa
xchg
and
(bad)
ja
or
cmp
add
jecxz
push
(bad)
sbb
pop
fisttp
mov
adc
or
fstp
test
fsub
icebp
cmp
addr16
cmp
sub
mov
ret
xchg
xchg
mov
add
xchg
sbb
mov
and
or
test
mov
pop
xchg
push
xor
mov
cmp
xor
into
mov
das
sub
mov
mov
adc
imul
and
inc
add
addr16
loopne
repz
(bad)
mov
test
dec
mov
push
add
mov
js
sti
and
dec
jnp
jns
fsub
je
and
cld
bound
in
or
cmc
(bad)
cmp
test
add
mov
cmps
xchg
jnp
into
repnz
pop
xchg
mov
cmp
in
add
mov
repnz
mov
in
pusha
fisub
mov
arpl
fisttp
es
jecxz
xor
jmp
xor
xlat
adc
call
mov
and
ins
dec
outs
sub
or
fimul
mov
push
or
inc
cmp
rol
fsubr
cmp
fwait
xchg
mov
ds
push
adc
(bad)
leave
inc
data16
or
pop
dec
mov
out
(bad)
imul
out
mov
mov
aaa
and
out
mov
mov
jne
push
pop
mov
pop
pop
dec
and
cmc
mov
jmp
lods
adc
iret
sub
fild
xor
jge
es
mov
adc
push
sbb
and
or
movs
fnsave
jne
mov
data16
test
cmc
(bad)
fsubr
xchg
jmp
push
into
cmp
jmp
in
mov
push
ret
jge
jecxz
enter
rcl
xchg
mov
add
bound
fld
inc
inc
fidivr
push
je
int3
xchg
(bad)
je
inc
in
pop
ss
iret
rol
sub
jmp
sub
cmp
bound
aad
sub
jbe
jmp
jae
xchg
loop
sbb
lods
aam
sbb
sbb
xchg
push
xchg
cld
in
xchg
addr16
icebp
lods
pop
arpl
sbb
jmp
pusha
sub
or
dec
fisub
xor
dec
lea
pop
xlat
out
and
jecxz
add
xor
out
(bad)
mov
mov
stos
adc
ins
push
xlat
xor
adc
out
lods
(bad)
test
pusha
xchg
sar
push
sbb
out
leave
and
pop
xlat
scas
out
int
loopne
or
push
inc
mov
(bad)
pop
scas
retf
dec
pushf
cwde
sub
bswap
aaa
scas
data16
femms
iret
fidivr
or
sbb
cmp
or
xchg
frstor
fstp
ja
leave
adc
xchg
hlt
ins
pop
sub
pop
data16
xchg
jbe
adc
ss
adc
xor
push
out
mov
sub
mov
call
imul
scas
(bad)
stc
sbb
ret
push
bound
cdq
xor
add
int3
cmp
push
cmps
call
inc
fdivr
dec
mov
push
pop
add
sar
push
pop
xchg
add
push
mov
cld
fidiv
rcl
ins
or
push
rol
mov
pop
or
sbb
cmp
cmp
pop
movs
ds
jbe
cmps
addr16
pop
xor
je
fimul
sub
jecxz
repnz
add
test
bound
outs
cmps
lea
pop
jle
adc
out
out
int3
mov
mov
fs
lods
add
jmp
mov
psubusw
or
cli
pop
mov
das
(bad)
popf
or
nop
add
mov
mov
hlt
(bad)
mov
(bad)
adc
mov
retf
jp
cmp
out
mov
jp
mov
mov
data16
or
int3
pop
mov
les
mov
add
pop
push
mov
das
call
fwait
mov
scas
out
mov
pop
outs
or
mov
lock
mov
test
add
mov
loope
fiadd
pop
mov
xchg
(bad)
sub
jb
dec
(bad)
push
adc
in
movs
dec
mov
xor
pop
dec
sub
mov
fwait
jae
mov
lahf
sub
cld
cwde
leave
adc
sub
sahf
or
lods
out
jg
xlat
xchg
pushf
or
add
pop
jb
movs
repnz
inc
(bad)
mov
cmp
call
sub
push
xchg
fidivr
sub
ret
jnp
sbb
or
or
dec
inc
fadd
repnz
or
mov
sar
xchg
push
or
mov
push
jle
push
sub
test
add
ss
outs
dec
dec
aaa
call
pop
mov
loop
iret
lods
sbb
cmp
xchg
stc
inc
add
ret
dec
jge
test
ret
sbb
push
fsub
shl
mov
sub
xor
hlt
std
inc
imul
push
js
lods
push
movs
test
jge
or
cmp
in
sub
sub
pop
dec
repz
pop
iret
fstp
and
dec
cmp
push
adc
sub
and
nop
fnstenv
and
mov
jp
push
xor
xchg
cs
rol
das
sar
icebp
repz
push
xor
mov
jp
sub
out
adc
mov
lock
les
retf
xchg
int
cmps
pop
sub
idiv
push
in
sbb
outs
ficomp
or
cs
shl
cld
div
pop
call
or
scas
lock
fld
retf
sub
(bad)
aas
cmp
xchg
add
and
loop
jb
push
fstp
sub
sahf
pop
jle
fs
jno
(bad)
mov
in
or
call
les
xlat
loop
inc
pop
clc
sub
add
mov
scas
stos
inc
retfw
xchg
mov
movs
xor
push
jmp
mov
mov
repz
and
stos
retf
push
in
mov
sub
or
pop
mov
add
ins
data16
sbb
inc
in
(bad)
inc
aad
aad
fidiv
push
gs
sub
packssdw
gs
sub
xor
push
(bad)
push
cwde
es
aas
fcom
sbb
imul
es
mov
pop
push
pop
pop
fbstp
xor
adc
dec
mov
cmps
dec
in
add
fdiv
push
outs
fldcw
push
add
iret
loop
test
(bad)
mov
popa
push
(bad)
cli
mov
outs
ss
cmp
retf
cmp
and
(bad)
mov
pop
fimul
data16
adc
pop
push
add
pushf
mov
ins
inc
xchg
jge
aaa
lea
mov
daa
movs
xor
cwde
pop
push
pusha
or
xor
mov
pop
arpl
clc
mov
div
xchg
or
lods
stc
push
jge
cmc
pushf
jecxz
mov
sbb
ret
pop
in
mov
xor
(bad)
enter
(bad)
cmp
dec
sbb
imul
fild
sahf
jp
sti
rcr
test
push
test
jb
pushf
shl
test
call
shl
cmp
xor
cmps
pop
(bad)
out
es
test
ror
mov
notrack
mov
jge
mov
xchg
cmp
xchg
aad
pop
scas
jl
and
inc
rol
xchg
cli
pushf
in
mov
sub
jo
adc
cmp
cmp
les
mov
pop
cmp
ret
mov
out
retf
mov
or
sbb
sbb
hlt
loope
sbb
sti
cld
xchg
push
jno
outs
sub
adc
push
mov
add
adc
movs
push
cli
(bad)
(bad)
ds
movs
add
push
push
jl
and
dec
mov
int
xor
sbb
adc
test
xor
and
fidiv
mov
mov
xchg
push
or
dec
push
inc
inc
push
mov
sbb
and
mov
sets
mov
cmp
or
into
hlt
xchg
mov
adc
pop
mov
loop
test
std
or
inc
add
pop
or
or
mov
div
inc
(bad)
in
ja
ins
ins
jg
or
loopne
cmp
mov
fmul
xor
mov
test
rcr
into
popf
inc
rol
lds
push
dec
loop
mov
ficom
in
jmp
xor
sbb
xchg
or
sub
mov
in
inc
imul
and
mov
fstp
in
fst
sub
out
cmp
xchg
dec
les
nop
out
xchg
push
shr
add
call
jg
mov
push
dec
add
xor
std
mov
mov
pop
mov
nop
ficom
enter
mov
sub
inc
mov
(bad)
aaa
ret
adc
inc
dec
cmp
mov
xchg
(bad)
pop
pop
dec
fs
lods
sbb
add
xchg
cdq
sbb
fcom
shl
cwde
ins
dec
mov
fsubr
cmp
pop
mov
stc
cmp
or
clc
and
mov
mov
rol
jmp
jmp
mov
clc
mov
mov
imul
ins
pushf
fcom
mov
mov
mov
adc
inc
outs
scas
aas
movs
add
mov
jo
aad
xchg
fbstp
aad
mov
(bad)
aam
call
(bad)
popa
jo
push
mov
jl
pop
das
repz
mov
in
cmp
fsub
adc
dec
loop
sbb
fdivr
ret
dec
add
into
or
fs
out
lea
push
inc
fadd
inc
lahf
cmp
mov
push
adc
cld
dec
or
inc
(bad)
pusha
dec
sbb
sbb
rcr
cmp
sbb
(bad)
fwait
and
scas
and
cmps
int
addr16
repz
ror
mov
inc
not
popa
lods
jmp
sbb
icebp
es
out
(bad)
bound
add
and
and
adc
push
fistp
ret
dec
sub
and
cmps
cmp
jmp
add
xchg
cli
xlat
mul
cmp
idiv
retf
mov
adc
fwait
aas
and
cwde
shl
sbb
jb
(bad)
and
data16
inc
in
mov
mov
and
(bad)
push
mov
call
dec
sbb
pmovmskb
movs
(bad)
lds
and
test
icebp
mov
rcl
daa
jge
mov
jp
popf
sub
sbb
shl
je
ss
jns
or
out
sub
icebp
sub
mov
test
enter
dec
enter
sub
out
jg
sar
inc
stos
add
cmp
popa
push
xor
fnstsw
cmp
test
dec
dec
adc
dec
mov
js
cmc
dec
(bad)
ins
dec
inc
mov
or
stos
inc
sar
adc
cld
xchg
(bad)
in
mov
cs
mov
cmp
imul
neg
push
dec
outs
aam
in
jb
stos
out
loop
xor
iret
fnstsw
imul
or
lods
adc
push
repz
int
mov
jns
pushf
or
sub
in
mov
mov
push
mov
(bad)
dec
mov
mov
mov
or
jns
sub
dec
mov
jnp
mov
lds
sar
adc
aam
mov
add
push
int
dec
pop
pop
(bad)
loopne
mov
retf
movs
(bad)
jbe
aad
pop
xor
psraw
push
and
in
or
fstp
(bad)
cmc
cmp
es
shl
cmp
test
mov
cmp
dec
lods
mov
lock
test
pop
lds
jbe
jno
and
or
scas
aad
jge
xchg
scas
stc
test
mov
pop
fbld
cld
popf
xadd
sbb
neg
lds
scas
jmp
inc
pop
sbb
mov
leave
cmp
xor
ret
mov
xchg
jp
inc
or
inc
pop
popf
movs
jmp
pop
retf
push
adc
test
test
rcl
movs
xchg
retf
icebp
inc
icebp
popa
mov
inc
retf
bound
(bad)
xchg
outs
sbb
enter
popf
mov
popa
xor
loope
pop
inc
xchg
mov
sti
xor
cdq
xor
arpl
aam
std
and
mov
arpl
jno
xchg
inc
cwde
mov
inc
pop
sti
mov
xchg
fdiv
xchg
stc
scas
adc
xor
inc
jns
das
or
movs
push
mov
scas
cwde
inc
aaa
sti
xchg
or
sbb
das
cmp
push
adc
jmp
sub
lods
xor
push
push
push
sbb
jno
test
cmp
inc
fucom
add
jnp
mov
in
outs
leave
add
fstp
pop
(bad)
test
cld
push
and
out
(bad)
push
cmp
rol
clc
push
mov
loop
mov
ror
in
xor
push
movs
cwde
repnz
scas
lea
xor
jg
clc
jne
add
sar
mov
pop
adc
(bad)
pusha
jl
and
cs
in
jb
sti
call
aam
in
xchg
call
inc
neg
jmp
cmp
pop
mov
pop
xchg
xchg
push
sbb
cs
in
popa
ss
aaa
or
mov
rcl
out
or
mov
ret
rcl
fwait
shl
sbb
div
mov
and
dec
shl
xor
loop
data16
je
cdq
xor
cmp
xor
jnp
mov
and
out
xchg
not
push
push
inc
out
mov
dec
cmc
jl
or
xlat
mov
mov
dec
pop
std
les
rcl
mov
cmp
fst
sbb
imul
imul
mov
sub
adc
mov
ror
lods
jecxz
psubusw
or
or
add
dec
cmp
stos
repnz
daa
xor
in
shl
test
adc
pop
push
dec
in
(bad)
cmps
xor
dec
gs
retf
clc
inc
cmp
fiadd
xor
xor
xchg
test
dec
rol
mov
std
push
out
xor
jns
mov
push
fs
fistp
mov
pop
adc
jmp
scas
call
cmc
add
stos
sbb
shl
pop
push
shl
push
dec
cmp
add
outs
arpl
inc
jnp
sub
into
in
push
test
mov
xchg
jmp
or
mov
xchg
xor
in
mov
popf
pop
cld
(bad)
mov
imul
nop
sahf
cmp
test
mov
cmc
(bad)
adc
aam
sbb
rcr
ss
or
inc
cmp
jmp
inc
fimul
hlt
imul
cmp
mov
xchg
jle
mov
in
dec
loope
les
inc
push
cmp
mov
mov
fnsave
jecxz
sub
jae
mov
xchg
ffreep
inc
mov
xchg
xchg
(bad)
cli
mov
addr16
out
imul
mov
fiadd
das
out
retf
test
push
sub
jns
pop
retf
jns
in
es
cwde
loope
scas
mov
cmp
pushf
xchg
hlt
in
das
fidivr
pop
push
arpl
and
add
pushf
and
lea
dec
or
pop
int3
cld
push
mov
adc
test
dec
sbb
and
or
inc
mov
xchg
out
fdiv
fwait
or
jnp
outs
cld
paddw
stos
add
out
mov
repz
fld
int3
aam
mov
ja
dec
xchg
push
mov
fisttp
in
fwait
imul
xchg
mov
push
sti
sbb
daa
fld
pop
fisubr
maskmovq
xor
into
test
scas
mov
(bad)
in
movs
dec
loopne
sub
mov
push
add
sbb
or
add
pushf
ja
cmc
and
push
loope
and
fdivr
push
stos
test
mov
int3
pop
mov
repz
and
int3
xlat
push
and
or
(bad)
mov
fcmovu
mov
aaa
push
frstor
jbe
mov
or
add
cmc
jae
ror
fisttp
sub
(bad)
stc
ins
ret
push
enter
push
nop
aad
mov
cld
sub
sar
mov
call
ds
push
mov
aam
inc
add
add
push
(bad)
movs
dec
push
gs
mov
cmps
pop
mov
rcr
and
les
xchg
cmp
inc
jo
loop
fwait
jo
repnz
xchg
in
lods
push
repnz
xchg
inc
push
aam
push
loopne
pushf
std
dec
scas
xchg
cmp
or
inc
fld
lods
inc
mov
cmp
call
xor
mov
in
mov
and
mov
xchg
adc
xchg
stc
mov
add
jbe
xchg
call
dec
imul
mov
pop
mov
mov
test
(bad)
loope
shr
mov
and
fwait
dec
enter
sub
retf
push
sub
mov
popf
(bad)
stos
inc
dec
in
loope
addr16
mov
retf
or
sbb
das
or
leave
outs
dec
scas
dec
or
dec
mov
xchg
lods
xor
loopne
sub
pop
or
mov
push
mov
add
mov
mov
dec
mov
in
dec
(bad)
ins
stos
xchg
pop
pop
leave
mov
jmp
or
popf
push
push
push
fild
dec
mov
hlt
in
mov
xor
dec
push
aaa
push
popf
jae
aad
nop
sub
ss
xchg
popa
rol
xlat
mov
pusha
push
and
fstp
mov
ss
mov
je
pop
sbb
inc
ror
pop
es
mov
jae
sahf
sbb
push
imul
adc
jg
inc
mov
or
mov
sub
jmp
enter
push
sub
pop
or
rcl
ret
daa
dec
dec
push
int
sub
and
test
cdq
inc
dec
sbb
add
pop
and
fist
sbb
and
(bad)
popf
dec
or
mov
or
adc
inc
sub
ds
(bad)
dec
imul
ds
cmp
cmp
imul
pushf
out
(bad)
sbb
aad
xor
cli
push
push
pop
push
mov
push
fstp
or
cld
pusha
int3
ja
int
ja
push
xchg
bound
daa
fscale
xor
jecxz
or
outs
mov
dec
bound
movs
jl
or
std
push
sub
dec
call
or
nop
retf
loopne
and
sub
imul
push
mov
arpl
add
jl
push
dec
and
inc
jl
daa
xor
pusha
sub
inc
outs
mov
jmp
dec
fcomp
clc
jno
cmps
xchg
in
jle
repnz
outs
xor
add
inc
push
or
adc
cmps
sti
mov
test
add
mov
pop
mov
mov
sbb
jecxz
mov
cmp
ja
jmp
mov
jge
inc
icebp
iret
int3
pop
mov
test
stc
xchg
ret
adc
ret
mov
jmp
jl
dec
(bad)
mov
call
mov
push
add
(bad)
int
scas
add
scas
mov
stos
xor
push
mov
cmp
push
mov
mov
in
or
mov
into
int
push
add
xchg
pop
cmp
xor
les
into
or
(bad)
cmp
loopne
sub
aam
fldcw
hlt
pusha
test
call
push
sahf
(bad)
or
(bad)
sbb
fucomp
(bad)
cmps
jo
or
or
dec
dec
cmp
xor
outs
imul
inc
xchg
les
test
out
cmp
dec
aaa
movs
jp
lds
jmp
fcom
shl
cdq
xchg
xor
or
jae
test
sbb
gs
cmps
pop
dec
inc
dec
shr
dec
cmc
xor
mov
inc
fs
aas
aaa
lock
(bad)
jg
imul
movs
(bad)
and
test
push
pushf
pop
push
fwait
sub
mov
push
xchg
cmp
(bad)
fcom
(bad)
lods
fadd
cmp
xor
xlat
and
sbb
add
mov
push
sub
jge
xchg
jns
pop
cmp
sub
jmp
and
mov
scas
jnp
dec
xchg
xchg
push
cdq
scas
lods
in
adc
ins
or
out
jge
and
fld
mov
inc
aam
push
add
add
xor
jno
stc
fisub
inc
call
push
mov
es
mov
js
jae
test
jb
xchg
xchg
pop
mov
dec
inc
in
sbb
sub
sbb
xor
stos
cmps
mov
cmps
retf
fisub
(bad)
out
sub
xchg
and
sub
inc
cmp
into
aas
cmps
call
and
sbb
mov
pop
or
mov
jnp
or
adc
xchg
sub
jo
shl
es
loope
mov
or
sti
movs
std
and
aad
inc
sub
or
sub
dec
sbb
sub
xchg
bound
xchg
fist
inc
aam
push
add
stc
out
sbb
leave
sbb
sbb
lods
aas
bnd
cli
fld
(bad)
fwait
mov
(bad)
imul
or
pop
add
add
arpl
jge
push
mov
mov
pop
mov
movs
mov
dec
jg
cwde
scas
mov
(bad)
xor
adc
xchg
dec
pop
cmp
adc
xor
repz
pop
test
lods
cs
cmp
pop
pop
jl
add
out
fidiv
(bad)
lods
out
mov
sub
mov
int
pop
xor
push
arpl
jne
(bad)
rcr
cmp
xchg
dec
out
test
fldenv
mov
sub
and
aam
pop
popa
jp
into
mov
sub
sub
inc
mov
pop
adc
dec
fstp
mov
mov
out
out
mov
hlt
jo
push
inc
sub
push
fidivr
in
(bad)
int
sub
sbb
add
sub
fldcw
jecxz
lods
scas
pop
in
jmp
ds
jmp
jbe
ins
add
mov
dec
mov
aas
setns
sub
and
push
add
sub
push
push
(bad)
fisub
jae
inc
test
stos
ja
adc
(bad)
fwait
push
mov
loope
adc
and
popf
mov
mov
imul
int3
inc
daa
test
jecxz
jo
popf
test
(bad)
in
inc
mov
hlt
movs
sbb
mov
dec
(bad)
cmp
push
lods
movs
pop
pusha
fistp
lods
idiv
(bad)
jnp
aad
add
or
push
(bad)
push
jmp
lahf
push
cmp
mov
xchg
lods
mov
loop
cmp
int3
outs
movs
adc
repz
sti
mov
ja
pop
jne
push
adc
pushf
rol
cs
jb
popf
nop
or
sub
mov
(bad)
and
ins
and
jl
js
cmps
test
cwde
jb
xchg
inc
lea
imul
mov
inc
pusha
out
cli
inc
bound
cmp
mov
test
aam
cmp
xchg
mov
adc
and
js
inc
xor
mov
push
add
mov
aam
adc
fiadd
pop
sub
inc
adc
loop
cld
pusha
jns
jl
addr16
dec
lods
pop
mov
and
in
mov
sub
(bad)
outs
or
cmp
(bad)
mov
jo
cmps
stos
sti
jmp
dec
or
fadd
les
call
mov
mov
cld
push
shl
inc
fstp
ins
cmps
mov
ins
rcl
fdiv
inc
inc
pop
jns
sar
add
cmp
inc
addr16
lahf
inc
xchg
sub
hlt
and
lds
hlt
xor
in
movs
outs
adc
adc
mov
ret
push
pop
pop
es
inc
pop
test
add
and
cmp
shl
shl
fcom
cdq
ja
jo
not
fstp
loope
mov
rcl
stos
mov
cmp
cs
xor
ror
jle
jb
pop
xchg
pop
fsubp
push
test
enter
push
pushf
dec
or
ret
aad
jmp
not
pop
imul
nop
jo
mov
shr
fcom
mov
imul
mov
or
(bad)
popf
retf
pop
push
fucomip
mov
test
stos
in
aam
mov
movs
xor
call
adc
mov
imul
dec
jne
mov
lock
and
mov
mov
push
and
xor
inc
pop
add
in
icebp
push
scas
sub
jmp
sar
popf
sbb
std
cwde
cli
cmp
in
jno
movnti
or
xor
pop
pop
cmps
test
shl
push
and
xchg
aaa
fisubr
stos
or
loopne
sbb
scas
mov
push
fild
in
movs
shl
adc
pushf
pop
ror
(bad)
inc
cmp
push
pop
mov
jl
jne
popf
test
inc
outs
enter
pop
mov
mov
addr16
cwde
push
scas
push
retf
fsub
mov
or
sub
int
mov
mov
cmps
mov
cmp
out
clc
sub
jbe
mov
stos
sar
xchg
jl
test
dec
xor
cmp
jb
cli
dec
xor
cmp
repnz
pand
test
cmps
sub
mov
mov
pop
jg
push
adc
mov
xor
push
mov
adc
retf
mov
lods
fsubr
and
fcmovu
test
fbstp
mov
in
push
add
retf
mov
loop
jp
sub
bound
(bad)
mov
push
aam
push
retf
dec
mov
mov
cmps
dec
out
dec
fstp
inc
fimul
push
inc
std
leave
mov
mov
fiadd
mov
dec
add
mov
push
jle
mov
dec
aaa
xchg
test
add
les
dec
cmp
fmul
adc
cdq
push
mov
cwde
repnz
arpl
inc
push
jmp
and
fstp
mov
dec
gs
stc
pop
xchg
(bad)
mov
in
mov
push
xchg
leave
pop
pop
repnz
fnstenv
scas
pop
adc
std
adc
mov
mov
xchg
sub
aad
ins
xor
cmp
imul
pop
(bad)
ss
lea
adc
pop
push
push
ds
in
jnp
or
jecxz
imul
in
cmp
adc
retf
in
(bad)
add
dec
repz
mov
add
cwde
push
and
xor
push
(bad)
hlt
xor
repnz
movs
das
shl
add
test
add
mov
in
cmps
std
lods
mov
ret
inc
icebp
dec
push
xchg
pop
xlat
rol
jle
or
pop
jne
pusha
add
mov
shr
lds
rcr
lahf
lods
push
cmp
cmp
arpl
aam
dec
shr
nop
dec
jle
xchg
fadd
jne
cmp
fist
jmp
cmp
call
icebp
mov
mov
dec
xor
add
leave
retf
movs
jg
xor
pop
and
dec
test
xchg
jmp
dec
jo
(bad)
fcomi
jbe
push
inc
lock
aas
popa
add
fwait
xchg
sar
sbb
(bad)
loope
pushf
mov
jle
mov
push
push
push
cli
aad
addr16
ret
xchg
jmp
lock
fcmovu
xchg
movs
test
dec
pop
dec
push
nop
(bad)
adc
bound
lahf
mov
int
(bad)
push
add
mov
ins
test
leave
mov
div
add
int3
call
add
xlat
movs
in
aaa
push
ins
add
adc
mov
mov
xchg
mov
fsub
adc
shr
mov
std
ret
jmp
cmc
pop
sbb
pop
repnz
cmp
dec
mov
mov
pop
rol
mov
data16
mov
(bad)
add
test
sbb
xor
or
jg
adc
outs
jecxz
lea
adc
clc
scas
test
push
push
cwde
ins
cld
rcr
or
sbb
test
push
mov
or
fmulp
imul
xor
or
pusha
ror
lahf
add
cmp
(bad)
mov
mov
inc
mov
call
test
jne
jle
mov
aad
inc
cld
outs
push
pop
or
not
cwde
scas
jae
xor
out
fidivr
out
add
cwde
mov
mov
imul
sub
inc
jne
or
mov
enter
sbb
jmp
mov
frstor
(bad)
fmul
xchg
lsl
arpl
mov
cmp
sti
push
jb
pop
shl
add
push
jns
cmp
mov
fdivr
enter
daa
stos
add
stos
dec
pop
aad
iret
and
pop
jnp
pop
cdq
mov
pop
mov
sub
int3
les
sub
sub
icebp
pop
or
ds
clc
dec
ret
lds
mov
mov
sti
cmp
add
jg
push
sbb
lock
enter
int3
pop
scas
outs
cmp
mov
pop
movs
shr
mov
jmp
addr16
lea
rol
int3
and
jmp
adc
cdq
xchg
int3
test
sbb
sub
scas
xor
sub
xor
mov
shr
cmp
push
adc
fist
mov
jmp
leave
mov
lods
add
mov
xchg
int
mov
push
test
in
or
ins
mov
jg
dec
add
cmps
mov
and
dec
cli
inc
in
loope
(bad)
call
inc
sub
and
push
enter
mov
pushf
mov
iret
push
rcl
(bad)
xor
xor
mov
movs
int3
aad
sar
test
mov
imul
mov
faddp
out
arpl
sub
or
mov
cmp
pop
jl
cdq
sar
test
movs
pop
or
push
in
xor
or
cld
rcl
jge
aas
sub
push
iret
mov
stos
and
loop
(bad)
(bad)
in
push
xor
xchg
std
mov
xchg
cmp
popf
push
push
sti
in
std
jmp
sbb
in
(bad)
mov
leave
mov
sub
rcr
mov
stos
xchg
and
lahf
mov
sar
test
dec
fimul
jmp
into
mov
sti
lds
add
jg
ja
mov
or
mov
icebp
xchg
idiv
movs
dec
addr16
pop
(bad)
loopne
arpl
jmp
adc
or
(bad)
das
mov
mov
popa
mov
stos
or
push
mov
inc
mov
jmp
movs
push
(bad)
or
aas
daa
xor
jne
fiadd
mov
movs
push
sar
mov
cmp
cwde
push
sub
adc
mov
arpl
pop
xchg
push
jae
int
loop
add
and
xchg
pop
lods
mov
call
sbb
add
cmp
mov
adc
add
lods
jmp
and
push
add
in
pushf
(bad)
movs
push
and
cld
hlt
cmp
pop
cmps
mov
xchg
mov
(bad)
cs
nop
pop
rcr
dec
mov
std
xchg
pusha
or
cld
shr
pop
adc
in
jecxz
adc
push
lods
xchg
es
mov
and
aaa
dec
hlt
xchg
cwde
ss
mov
test
xchg
in
daa
ret
popa
push
in
xor
lods
jae
div
les
ss
push
jno
cmp
je
and
sbb
or
xor
lds
cmp
ret
call
ret
data16
pop
mov
fistp
sub
cmp
dec
aad
jb
push
mov
icebp
or
imul
push
fmul
sub
add
push
ja
je
xchg
test
push
and
call
dec
(bad)
push
adc
aad
sub
arpl
or
mov
imul
out
inc
int
fucomp
icebp
std
les
out
mov
aaa
rcr
jmp
cmp
mov
and
jae
icebp
mov
fwait
sub
mov
adc
sub
cli
xor
mov
mov
test
add
push
pop
call
xchg
ret
das
mov
pop
rcr
xor
mov
mov
inc
test
add
(bad)
add
jle
imul
sbb
add
into
jne
cmp
fincstp
pop
xor
movs
rcl
ret
sub
mov
jbe
imul
sub
dec
jg
in
xchg
ss
push
inc
cmps
jmp
cmp
and
sbb
jecxz
xor
push
jg
jne
mov
pop
dec
xlat
jo
aaa
sub
lea
inc
mov
xlat
jmp
imul
xor
jne
inc
add
cmp
mov
adc
test
dec
inc
pop
xchg
sub
sbb
sub
and
pop
loope
leave
pop
jecxz
pop
call
daa
scas
pop
outs
mov
sub
gs
or
retf
xchg
inc
jns
sti
ins
jecxz
mov
cwde
outs
popf
sahf
pop
ds
dec
aaa
push
mov
add
jns
jno
test
repz
scas
pop
outs
mov
mov
xchg
sub
jo
xchg
int
stos
pop
test
mov
test
mov
xlat
rcr
dec
ds
sti
mov
daa
nop
sub
dec
inc
sbb
push
sub
data16
mov
dec
adc
retf
push
add
cs
test
out
aaa
ins
pop
mov
pop
jns
scas
xchg
jecxz
jb
push
pop
out
mov
jl
mov
cli
leave
push
nop
jo
mov
push
mov
xchg
xchg
xchg
xlat
int3
ret
popf
inc
push
das
cmove
pop
stc
mov
test
jp
icebp
loope
test
jo
cwde
inc
int3
push
cli
cli
jno
(bad)
and
xor
sub
ins
or
lods
div
inc
mov
inc
push
imul
in
in
xchg
xchg
inc
out
rcr
fwait
mov
xor
or
dec
lahf
test
mov
pop
scas
add
xor
cli
push
cmp
cmp
fdiv
repz
in
cmps
mov
pop
push
adc
int
sub
jp
mov
scas
mov
in
sti
jb
rcl
retf
xchg
mov
xor
xchg
out
pop
jno
mov
push
dec
jge
dec
and
jp
inc
and
jae
cmps
pusha
(bad)
push
repz
loope
push
inc
mov
jnp
es
mov
push
in
aas
and
out
pop
jmp
popf
sahf
cmp
cmp
push
js
xchg
inc
in
push
aam
lahf
push
imul
mov
je
jmp
nop
add
mov
(bad)
pop
outs
popa
jne
add
jmp
jae
out
movs
mov
call
add
repnz
sti
int
jg
or
mov
or
mov
cmp
ds
inc
mov
xor
mov
stc
out
popf
push
jmp
fwait
adc
shr
mov
and
inc
fnsave
mov
mov
pop
or
fcomp
mul
xchg
movs
(bad)
scas
(bad)
jg
stos
xchg
and
mov
out
push
jg
fwait
(bad)
mov
sub
xor
xchg
pop
(bad)
sub
add
mov
add
mov
test
inc
aas
test
std
repnz
add
retf
pop
inc
dec
dec
cwde
clc
cmp
les
outs
add
push
(bad)
daa
mov
push
test
nop
es
xchg
xchg
xchg
aam
call
jb
mov
push
inc
add
or
imul
ss
ficomp
sahf
outs
jecxz
lahf
ret
inc
nop
sti
fisub
xlat
mov
js
(bad)
mov
mov
dec
mov
aas
test
stos
inc
mov
bound
xor
js
js
in
xor
pop
loope
in
sub
pop
lock
inc
sbb
and
inc
repnz
movs
sar
inc
mov
or
shr
jns
pop
pop
mov
inc
pop
dec
out
push
jmp
jne
inc
inc
pop
dec
cmps
ds
fnsave
dec
dec
test
jae
jmp
cld
or
sub
sub
jg
fcmovnb
ins
mov
sub
jne
stos
icebp
jnp
jg
test
dec
icebp
rcl
jmp
lds
push
retf
and
sub
jno
icebp
shr
mov
mov
cld
sbb
loope
and
cmc
ror
cmps
stc
ins
retf
mov
std
or
xor
and
xor
inc
mov
repz
add
sbb
sbb
cmps
call
ins
inc
push
mov
lgs
adc
call
pusha
sbb
lods
loope
xor
add
fiadd
add
fadd
adc
sub
ror
add
les
ja
mov
jnp
rol
cmps
je
xor
fwait
adc
pop
xor
stos
fstp
rol
fild
inc
fistp
inc
inc
js
mov
inc
sbb
(bad)
leave
xor
and
inc
push
movs
enter
outs
leave
(bad)
fcomp
ror
fidiv
xchg
push
cwde
jl
dec
mov
rcl
xchg
and
cmp
into
rol
and
xchg
jae
xor
pop
xor
push
or
enter
inc
cmps
adc
dec
pop
jle
fidiv
pop
cs
in
and
fld
add
jmp
jle
inc
push
(bad)
jmp
xlat
inc
test
xor
inc
scas
inc
call
cmp
jmp
outs
sub
lea
pop
mov
add
aam
(bad)
std
cwde
fsub
or
cmps
pop
mov
jmp
mul
retf
call
mov
xor
jg
pusha
and
test
and
test
aam
int
sub
sbb
cld
ss
scas
push
inc
ins
dec
ficom
jecxz
arpl
add
xor
lahf
mov
xor
mov
push
xor
mov
outs
xchg
mov
adc
cli
push
xor
cmp
xchg
loopne
jmp
loope
dec
sub
lods
ss
jge
ins
jmp
popa
mov
jno
mov
outs
aad
cmp
test
lods
xchg
aam
mov
ins
pushf
loopne
cdq
cmp
xchg
imul
inc
sub
lock
ret
jmp
inc
jo
dec
rcl
mov
in
ret
fidivr
ja
sbb
sbb
loop
lods
mov
push
jae
jg
aam
sub
icebp
test
cmps
popf
or
and
mov
cmp
mov
jbe
sub
pop
fcmovu
sbb
pop
popf
push
pop
xchg
sub
xlat
mov
add
js
xchg
ret
mov
and
out
test
loope
cmp
ins
mov
rol
(bad)
cmp
call
jge
mov
push
pop
or
(bad)
cs
sbb
inc
jmp
aam
pop
sub
popf
xchg
into
push
pop
stos
inc
lahf
pop
clc
inc
out
inc
adc
pop
out
ret
sub
jno
xchg
cmp
retf
fld
dec
dec
stos
fld
mov
fsub
idiv
cwde
mov
cli
adc
cdq
ds
push
sti
inc
mov
test
adc
push
push
in
movs
sbb
push
(bad)
movs
sub
sub
or
stos
ret
inc
cmp
test
adc
bound
loopne
gs
or
scas
imul
cli
lahf
jg
(bad)
jnp
push
jb
cmp
pop
imul
dec
add
jnp
and
pusha
xchg
sbb
out
fisttp
leave
cmp
imul
fiadd
mov
inc
xor
movs
shr
xchg
fcomp
mov
or
adc
xchg
aam
jnp
inc
or
cmc
int
fcmovu
xchg
lods
cmc
jg
ficomp
jmp
aam
push
sahf
pop
ins
test
loope
mov
add
das
(bad)
push
push
loope
loope
or
icebp
dec
mov
xchg
pop
stos
pop
sti
int3
dec
int3
push
je
fnstenv
cmc
xchg
popf
scas
push
dec
es
jmp
mov
and
cmps
xchg
jo
rcr
movs
jb
das
mov
mov
mov
xor
mov
or
xor
xchg
jmp
sbb
mov
scas
jecxz
mov
and
(bad)
jbe
add
mov
ret
(bad)
jo
or
stc
dec
jmp
ss
sbb
aad
bnd
into
rol
sub
out
mov
in
cmps
retf
mov
ror
std
fnsave
fst
cdq
cmp
add
stc
(bad)
push
dec
add
scas
sub
pop
jo
push
mov
fiadd
cs
loop
or
mov
xor
pop
(bad)
je
mov
mov
cdq
inc
jg
sbb
paddw
mov
daa
fxtract
call
xchg
sbb
inc
test
mov
popa
test
jge
ret
inc
outs
retf
xchg
sti
push
fild
add
mov
xchg
xor
and
repz
sub
pop
mul
jp
add
shl
dec
ins
inc
inc
int3
call
stos
ret
addr16
lods
aaa
call
ins
ret
out
les
nop
aas
ret
inc
(bad)
or
jp
inc
or
add
fucomip
mov
(bad)
mov
leave
aam
fimul
push
std
addr16
push
hlt
cld
jge
push
popa
mov
mov
jmp
movs
ret
xchg
pop
mov
sbb
jne
loope
clc
xchg
or
iret
sahf
add
jae
and
(bad)
movs
outs
cmp
pop
pop
xchg
mov
push
xchg
mov
fdivr
psllw
sub
sub
adc
add
int3
xor
lds
lea
cli
ficomp
pop
int
jns
ja
loop
out
shl
jg
and
test
int3
dec
ror
ins
xor
cmc
(bad)
mov
lods
cmp
daa
and
push
scas
sub
stc
push
mov
scas
shl
or
mov
and
inc
xchg
sahf
hlt
lds
push
loopne
(bad)
fmul
adc
(bad)
jle
mov
pop
jns
xor
mov
and
mov
outs
clc
dec
bound
cmp
inc
mov
jnp
scas
std
mov
ss
fidiv
and
aad
test
mov
outs
sub
test
stos
stos
cld
or
in
dec
mov
mov
jecxz
inc
mov
push
mov
jp
mov
mov
lock
mov
in
test
mov
out
cld
iret
std
popf
lods
add
(bad)
and
(bad)
sbb
mov
pop
jmp
inc
sub
push
dec
pop
call
sub
sbb
xchg
dec
adc
cmps
ret
push
into
push
jb
jp
sar
std
ins
and
lods
clc
mov
pop
imul
stos
inc
int3
or
shr
out
stos
jl
enter
adc
lea
mov
call
inc
push
pop
push
adc
adc
lods
cmps
pop
sbb
pop
int
sbb
xor
(bad)
jns
xor
into
je
cmc
bound
leave
pusha
adc
inc
movs
pop
mov
sbb
frstor
push
mov
jmp
xchg
cmp
stos
adc
xchg
aaa
pop
das
test
lock
das
sub
mov
xlat
pop
retf
push
and
loope
fbstp
bound
neg
out
sar
xchg
sbb
add
add
mov
mov
popa
loop
test
fcomp
or
test
inc
std
or
cmp
mov
sbb
mov
mov
dec
pop
mov
sub
and
jp
sbb
add
push
mov
add
adc
and
in
outs
lods
mov
in
or
dec
mov
loop
mov
mov
xlat
out
mov
xor
addr16
cmp
xchg
sbb
mov
int3
cmps
movs
rol
aad
or
loopne
imul
test
and
mov
loop
fcom
xchg
sub
xor
cmp
repnz
xchg
push
popf
jge
mov
add
adc
pop
inc
add
outs
add
inc
push
(bad)
jns
ins
(bad)
adc
es
repz
xor
popf
inc
pop
(bad)
clc
push
jae
jbe
ss
sub
outs
mov
ror
pop
adc
leave
push
sahf
mov
pop
jl
mov
mov
dec
fwait
std
mov
push
lds
cwde
mov
cmp
(bad)
mov
cmc
ret
push
and
xor
rcl
sar
dec
shl
jbe
int
mov
mov
repnz
movs
lock
push
hlt
loop
jns
(bad)
leave
pop
frstor
adc
aad
call
push
push
aaa
mov
cmc
adc
idiv
in
sub
dec
cmp
sub
add
fs
dec
jno
aad
enter
add
mov
inc
jae
sbb
ins
fmul
sub
inc
mov
mov
popf
sbb
out
mov
mov
inc
movs
sbb
mov
xor
adc
sti
pop
aaa
daa
mov
sbb
sbb
cs
add
cmc
mov
push
(bad)
shl
call
sti
dec
fidivr
pop
cmps
rcr
imul
sub
mov
cdq
test
sbb
hlt
mov
xchg
fs
jo
ins
inc
ret
cmps
outs
mov
sub
mov
inc
call
inc
lds
inc
mov
bound
pop
jae
xor
stos
mov
in
test
mov
stos
js
fadd
mov
popf
push
mov
xchg
lds
cs
adc
inc
stos
push
or
jl
xchg
jns
or
cmp
and
pop
ins
test
jl
inc
add
retf
xor
hlt
mov
loopne
fcom
push
dec
jnp
stos
jno
or
sub
add
push
xor
dec
sahf
cld
fdiv
fist
add
xor
pop
pop
dec
jno
mov
push
rcl
data16
nop
sbb
xor
sub
jp
ja
sub
jmp
adc
je
add
ret
test
pop
fst
cmp
push
cmp
inc
fadd
inc
push
pop
(bad)
and
push
pop
push
int3
test
lods
sub
pushf
ja
in
push
and
(bad)
hlt
ins
inc
outs
dec
cmp
inc
repz
jb
and
mov
jl
enter
int3
ins
popf
fild
sbb
inc
dec
mov
push
fsub
or
ror
adc
pushf
push
div
jmp
mov
mov
(bad)
lock
dec
mov
push
(bad)
call
out
push
mov
imul
pop
(bad)
mov
(bad)
dec
call
mov
ret
in
add
ds
shr
mov
sub
scas
les
sbb
out
mov
mul
sar
cmp
jecxz
aas
cmp
les
je
sbb
jmp
ja
fdiv
xor
mov
push
jmp
lods
sbb
add
sub
mov
xchg
xlat
sbb
xchg
add
dec
and
scas
mov
nop
push
imul
mul
cmps
stc
pop
hlt
in
jns
jmp
or
xor
jecxz
imul
xlat
das
inc
pop
je
jmp
mov
out
out
dec
pop
cmp
cli
or
test
xor
sbb
mov
scas
add
inc
in
fcomp
dec
push
xchg
cli
pop
mov
push
mov
and
dec
scas
mov
mov
ja
mov
jmp
dec
and
inc
pop
mov
js
mov
dec
or
pop
cwde
rol
mov
xor
les
sbb
movs
iret
outs
or
add
adc
xchg
aaa
cmc
fisttp
xlat
aaa
gs
rcr
stos
int3
add
fs
movs
pop
fmul
mov
jecxz
test
or
fsub
push
(bad)
jmp
push
jmp
dec
jns
nop
unpcklps
sbb
mov
fimul
mov
fldcw
xchg
test
xor
ret
sub
outs
shl
rcr
call
inc
push
cld
shr
add
jmp
js
jne
ret
lea
out
sti
mov
and
mov
ins
je
sbb
jmp
add
jbe
mov
xor
loope
xor
mov
jb
movs
xchg
pop
loop
jle
rcr
pop
inc
repz
std
icebp
call
pop
mov
mov
and
retf
pop
test
mov
push
ror
xchg
xor
call
icebp
addps
mov
sbb
jle
xlat
mov
popf
add
mov
xor
push
stc
ret
fwait
dec
(bad)
in
adc
pusha
loope
rol
mov
stos
ror
outs
mov
and
and
clc
dec
bound
push
daa
or
cs
mov
inc
mov
sub
movs
sti
out
cmps
sti
add
sbb
in
fstp
xchg
sbb
test
(bad)
jno
jp
mov
sbb
sub
lea
jecxz
mov
inc
std
stc
xor
fdivr
mov
int
push
jb
push
outs
jbe
fist
jae
bound
jbe
push
mov
sbb
je
jmp
mov
inc
aaa
xchg
push
gs
loop
movs
sbb
add
rol
or
jne
es
mov
into
pushf
push
ror
(bad)
mov
cwde
xor
and
dec
push
out
cmp
scas
cmp
(bad)
push
idiv
jl
scas
mov
push
adc
cdq
add
sub
mov
outs
xchg
popf
je
retf
jbe
jmp
xchg
inc
jne
or
xor
and
dec
dec
mov
jle
and
mov
jb
push
cwde
add
in
adc
jns
sbb
pop
out
iret
mov
popa
shl
aad
hlt
xor
cmp
je
add
test
jb
out
pop
cmps
mov
shl
jg
push
rcl
ins
cs
xor
mov
icebp
pop
(bad)
mov
in
das
popa
shr
jle
popf
test
jl
and
test
mov
aaa
in
popf
xchg
out
and
pop
dec
loope
out
fs
and
in
cmp
pop
cdq
and
add
jmp
cmp
div
inc
pop
rol
jno
test
sub
nop
pop
xchg
mov
ja
ficomp
jb
cli
mov
pop
out
fisub
sti
xchg
fwait
loope
push
push
lahf
mov
gs
dec
popa
ds
icebp
xor
jl
cld
ins
sar
push
imul
pushf
pop
retf
test
sub
mov
pop
test
outs
lock
dec
shr
loop
push
pop
pop
sub
pop
xchg
dec
scas
aam
aas
jns
fsub
xchg
cmp
clc
leave
or
adc
pop
add
inc
fistp
cmp
ins
jge
and
movs
jae
mov
cld
fld
xor
push
xchg
movs
mov
or
inc
dec
jge
ja
clc
inc
push
sub
pop
push
into
mov
and
fwait
or
sub
mov
outs
leave
mov
push
popa
gs
xchg
test
inc
popa
aaa
pop
xchg
das
xchg
push
and
sbb
ror
addr16
popa
fdivr
pop
mov
sub
sbb
(bad)
clc
mov
adc
in
pusha
inc
imul
daa
mov
inc
pop
and
lds
xchg
lock
push
mov
sub
pop
in
leave
adc
jb
adc
fsubr
leave
or
inc
test
or
aad
test
fdiv
cmp
mov
push
push
or
test
aas
mov
sbb
dec
sbb
fistp
jmp
ret
xchg
retf
rcr
ds
cmc
lea
loopne
repnz
or
icebp
or
push
lods
cmp
ror
xchg
out
jne
cmps
xchg
push
or
sti
adc
loope
test
jl
pusha
ss
push
pop
xor
xchg
dec
fidiv
mov
pop
push
sbb
fisub
ds
in
mov
lods
push
ins
push
push
test
movs
mov
daa
pushf
iret
push
ret
popa
inc
dec
repz
dec
cs
pushf
lods
gs
js
lods
mov
ins
fdiv
adc
jmp
popf
mov
icebp
or
pop
dec
or
(bad)
cvtps2pd
bound
mov
test
inc
push
adc
xor
push
mov
push
clc
dec
cli
dec
(bad)
mov
mov
mov
mov
cmps
scas
inc
cmps
pop
aad
xchg
xchg
add
in
mov
push
nop
pop
xchg
push
and
test
(bad)
fisttp
adc
gs
push
sbb
sub
add
or
inc
jo
jp
or
xchg
imul
push
inc
mov
cmp
mov
inc
cmp
xchg
mov
movs
fsub
dec
push
or
jnp
out
cdq
cmc
pop
xor
mov
ret
inc
xchg
je
xchg
je
jo
sub
retf
test
dec
sbb
jnp
scas
and
in
pushf
xchg
sub
sub
ror
sub
adc
stos
repnz
stc
in
adc
les
not
fsub
test
fwait
xchg
mov
push
(bad)
pop
mov
jmp
jmp
aas
sub
pop
xchg
loop
or
bound
add
xor
int
pop
iret
test
nop
sub
(bad)
fistp
mov
xchg
xchg
push
mov
(bad)
adc
dec
sbb
jmp
mov
add
aam
test
dec
inc
rcr
jmp
pop
push
adc
inc
lea
pop
sub
pop
imul
mov
test
ja
adc
stos
mov
lahf
or
popf
pop
xor
push
xor
dec
loopne
fsub
push
cdq
jns
into
inc
in
test
(bad)
lods
outs
xchg
push
test
jmp
and
or
jo
(bad)
aam
loop
ins
cmp
sub
or
dec
cmp
out
rcr
jmp
repnz
cmp
dec
data16
ins
or
or
aam
out
add
popa
(bad)
dec
jae
fmul
dec
outs
mov
cmp
jae
xor
add
push
cs
sbb
push
pop
mov
shl
or
or
daa
mov
xchg
add
in
jp
sbb
pop
and
fs
movs
push
in
test
jbe
cmp
xchg
cmp
cli
loope
pop
xor
jo
sbb
pop
cwde
or
pop
int
push
fcmovb
sbb
aad
(bad)
test
xchg
imul
pushf
push
hlt
jle
push
and
mov
push
push
jnp
cmp
mov
sbb
add
jmp
jae
cs
(bad)
push
hlt
push
lock
mov
sar
pop
fwait
push
lods
jge
cwde
sbb
jae
(bad)
int
pop
stos
fldenv
dec
retf
dec
loopne
sub
adc
aam
fst
imul
push
cmps
mov
test
adc
gs
lods
xchg
mov
mov
loop
xchg
pop
push
and
sub
nop
ficomp
or
scas
mov
push
jno
and
sti
push
add
jno
xchg
and
int
loopne
inc
(bad)
mov
(bad)
js
cdq
mov
mov
enter
ins
mov
test
fcmovbe
jae
dec
cmp
mov
ret
fcomip
and
jne
inc
enter
mov
mov
jo
xor
lahf
mov
xor
hlt
jp
sub
das
(bad)
lea
std
or
pusha
call
cmps
and
ds
or
or
inc
icebp
fst
push
dec
xor
or
(bad)
fbstp
loopne
sub
jne
lar
xchg
jp
mov
adc
(bad)
xchg
xchg
inc
aas
loopne
cmp
push
jnp
lds
or
pop
leave
adc
lods
arpl
jo
cld
xchg
jns
xchg
push
jecxz
icebp
xchg
jo
(bad)
push
ins
push
neg
iret
and
jb
pop
inc
iret
push
mov
stc
cld
push
retf
(bad)
out
je
inc
sbb
jno
je
or
add
and
test
jg
ficomp
and
stos
data16
mov
mov
jo
fidiv
es
jno
sub
push
add
and
(bad)
inc
dec
add
mov
faddp
and
dec
mov
sub
push
push
into
mov
xor
mov
or
mov
stos
retf
mov
imul
inc
ins
jns
loop
pop
daa
adc
scas
push
aaa
aaa
mov
mov
(bad)
push
pop
push
(bad)
out
sub
and
cwde
xor
xor
ror
enter
ror
jo
sub
cmp
mov
jmp
(bad)
stc
or
or
inc
sbb
sub
mov
pop
cmc
or
in
icebp
add
pop
pop
mov
movs
pop
hlt
jno
dec
outs
cld
push
sbb
repz
lea
int
fwait
xchg
popa
xor
jl
lock
dec
xlat
xchg
pop
pop
bound
ja
std
gs
scas
popa
pusha
test
int3
mov
test
into
sub
pop
or
xchg
mov
movs
cmp
cmp
fucomip
mov
sub
in
jge
aad
loop
xor
sub
aaa
mov
jg
lods
pop
adc
adc
sbb
sub
cmps
jge
sub
jnp
fmulp
fcmovnb
stos
into
mov
sub
or
pop
test
push
rcl
out
sbb
aad
dec
(bad)
leave
xchg
mov
fiadd
xchg
inc
repnz
and
or
pop
mov
cmp
jmp
js
adc
call
adc
jecxz
div
ja
mov
push
dec
lods
retf
push
std
mov
add
adc
or
sub
inc
jmp
push
sub
test
ins
int3
xor
adc
push
pop
lock
pop
pop
imul
sbb
mov
sub
add
dec
cmps
ffreep
mov
cli
fisttp
pop
push
xor
icebp
jmp
cmp
imul
and
aaa
jnp
sbb
mov
push
xchg
push
add
mov
ins
outs
sub
repz
cmp
and
push
cmp
jne
enter
pushf
add
mov
aad
cmc
and
pop
pop
std
movs
push
mov
mov
test
jmp
out
dec
and
mov
cmp
jecxz
push
shr
mov
les
in
xor
adc
test
sbb
and
add
cmps
mov
(bad)
xlat
ins
add
xchg
fisubr
inc
adc
popa
leave
add
into
fistp
sahf
xchg
mov
cmps
xor
scas
or
movs
dec
aam
retf
add
outs
push
fiadd
inc
cmp
outs
fs
inc
jno
les
mov
sub
jnp
cs
test
dec
repnz
xor
sbb
(bad)
test
(bad)
inc
and
xor
mov
and
jle
imul
jge
sbb
add
pop
cmps
test
bound
cwde
ror
dec
ror
sti
pop
and
sbb
jne
adc
aaa
sub
mov
popf
push
inc
cmp
push
pop
mov
mov
cld
sbb
xor
or
mov
iret
ds
xchg
jg
pop
add
push
xchg
or
scas
mov
fisttp
push
movs
dec
inc
mov
popa
adc
add
pusha
aam
push
call
ins
cmc
mov
push
or
scas
or
sbb
and
push
rcr
xchg
jp
mov
(bad)
mov
mov
mov
test
fsub
mov
pop
xor
pushf
out
xchg
push
lods
cmp
stc
xlat
mov
lds
les
call
dec
fwait
mov
ror
pop
retf
(bad)
jecxz
aam
fsub
ret
fs
lds
popf
mov
inc
aam
mov
sbb
cmp
xchg
xor
lea
xor
pop
dec
inc
mov
and
bound
scas
loopne
fisttp
out
add
sub
sbb
jl
mov
lock
lahf
and
pop
imul
jge
xor
lahf
sbb
data16
mov
xchg
fsub
aad
int
or
and
mov
rcl
aas
ret
fld
and
aas
jmp
mov
iret
cmps
adc
mov
xor
sbb
lds
loop
jns
movs
scas
jno
ror
or
fmul
fmul
and
adc
mov
fs
mov
mov
pop
mov
cli
cmps
xchg
jns
sub
stc
arpl
sti
mov
push
int3
in
aas
cmp
adc
dec
dec
fld
mov
xor
push
fcmovb
sbb
fcomp
(bad)
adc
cmovp
lock
fs
push
mov
xchg
pusha
inc
mov
add
ss
in
cdq
aas
(bad)
hlt
mov
or
ror
xchg
cmp
loop
inc
mov
push
mov
fldz
std
mov
sub
into
(bad)
jecxz
xchg
mov
jnp
add
pop
adc
xchg
(bad)
cmp
sub
ret
into
mov
and
adc
sub
test
adc
into
xor
dec
pop
int3
push
fsubr
xlat
addr16
(bad)
mov
jmp
push
mov
js
retf
jo
fidivr
fxch
mov
cdq
(bad)
or
call
cwde
sub
add
enter
ins
in
adc
test
mov
nop
sub
xor
rcr
pop
push
mov
and
ds
xchg
cmp
lahf
xor
imul
or
xchg
lahf
sbb
xchg
ss
cmp
retf
leave
movs
mov
dec
and
(bad)
mov
sar
push
loopne
mov
cmp
rol
fidiv
dec
loopne
dec
inc
loope
hlt
cmc
aam
jae
inc
push
xor
mov
xchg
xchg
jbe
pop
mov
sub
mov
imul
fmul
sbb
test
xchg
push
and
dec
jmp
mov
sub
mov
shl
div
data16
adc
xor
(bad)
jne
in
scas
test
rcl
inc
dec
adc
sub
cld
or
xchg
std
mov
or
repz
sub
fcom
mov
pop
(bad)
pop
sbb
cmp
cmc
push
pop
mov
aam
add
or
fisub
enter
push
dec
aad
int3
je
sti
lock
dec
jmp
jge
sub
inc
push
arpl
xor
cmps
pop
iret
xlat
add
retf
dec
adc
inc
jns
sbb
fstp
dec
mov
test
xchg
mov
loop
xchg
sub
jmp
fidiv
cmp
loop
sti
mov
add
jb
mov
mov
and
xchg
jb
cmc
pop
lods
cmps
ucomiss
push
inc
arpl
mov
(bad)
mov
movs
mov
adc
xchg
(bad)
adc
dec
mov
iret
sub
push
add
mov
iret
mov
mov
bswap
sbb
scas
stc
dec
movs
pop
sar
(bad)
repz
pop
sub
push
lahf
js
mov
mov
xchg
in
movs
sbb
mov
stos
or
leave
xchg
xor
sbb
mov
ret
jae
mov
sub
cmp
cmps
mov
aaa
test
fsub
lods
das
fnsave
rcr
xor
ins
movs
push
adc
jne
int3
mov
mov
and
adc
jno
jmp
sbb
std
inc
adc
shr
add
dec
push
xchg
adc
xchg
icebp
out
mov
jmp
or
(bad)
jne
pushf
es
scas
in
mov
leave
movs
add
sub
mov
or
push
mov
pop
inc
cmp
jne
inc
movs
push
sbb
fwait
push
and
retf
pop
mov
or
int
fs
xchg
cmp
sub
xchg
dec
fwait
test
aad
jecxz
ret
sar
outs
iret
in
mov
and
shr
jo
addr16
in
mov
or
out
add
xchg
and
out
sub
es
outs
xchg
test
mov
dec
mov
dec
xor
jecxz
div
les
sahf
or
call
and
rcr
into
or
leave
test
rcl
mov
les
dec
fild
jae
jno
mov
cmps
aaa
fld
mov
push
jb
(bad)
rcl
add
add
(bad)
int3
add
dec
xchg
lods
sbb
addr16
dec
dec
mov
sbb
(bad)
cmp
sbb
mov
xchg
push
xor
xchg
icebp
call
sahf
fild
arpl
retf
mov
pop
lods
sub
lock
out
dec
mov
call
addr16
xchg
pusha
cmp
or
pop
js
jmp
add
xchg
xor
stc
pop
(bad)
loop
sub
out
add
sar
icebp
xor
mov
pop
sub
jno
xor
hlt
retf
icebp
cmc
fst
retf
push
or
sbb
(bad)
jge
inc
mov
adc
sbb
ja
cwde
aad
(bad)
dec
dec
call
std
add
rcl
lds
push
push
mov
hlt
sbb
test
jge
cmp
cmp
je
jmp
sbb
pop
bound
dec
mov
(bad)
jno
test
dec
mov
jo
(bad)
cmp
add
xlat
push
mov
add
jbe
add
ficom
sti
arpl
ss
jmp
xor
je
mov
pop
cld
xor
jle
mov
mov
push
mov
cmp
or
push
push
mov
out
mov
push
add
pop
push
lods
lods
sar
in
push
adc
call
scas
sub
out
sbb
repz
add
and
aas
into
test
loope
xchg
push
inc
and
in
mov
outs
xchg
and
fs
int3
and
sbb
jp
mov
loop
push
(bad)
std
pop
xchg
adc
dec
sbb
dec
xchg
sbb
push
int3
inc
or
push
cld
or
dec
mov
(bad)
pop
sub
mov
scas
mov
(bad)
popa
mov
scas
outs
jge
xchg
outs
xor
cs
sub
jle
cmp
cmp
push
repnz
cmps
sub
xchg
cmc
inc
mov
and
stc
mov
xchg
stos
popf
sbb
(bad)
mov
(bad)
adc
ds
popf
pop
not
mov
int3
daa
les
scas
xor
sub
call
sbb
stc
cmc
call
mov
push
or
cmp
sbb
ds
test
sub
outs
mov
mov
dec
xchg
stos
enter
adc
sbb
imul
aas
sbb
data16
out
retf
xor
mov
(bad)
es
inc
repz
data16
jae
xchg
or
pop
mov
int
leave
mov
xchg
iret
pop
ins
sub
retf
(bad)
jo
push
lods
push
jne
cmc
(bad)
into
sahf
dec
mov
pop
push
jno
push
test
push
cmp
outs
push
cmps
inc
in
fistp
sahf
jne
js
into
lds
mov
mov
lods
xchg
push
dec
jle
push
cwde
adc
popa
idiv
mov
pop
or
cmps
and
outs
inc
xchg
cdq
(bad)
xchg
cmp
add
sub
fwait
jmp
movs
fidivr
icebp
cli
pop
cmp
and
sub
cmp
push
popa
mov
movs
daa
inc
adc
mov
ss
jne
xchg
mov
or
in
lock
retf
lds
inc
xor
nop
shl
mov
cmp
jmp
mov
int
sbb
addr16
cmp
lods
mov
mov
out
sbb
push
les
repz
data16
inc
jp
cdq
xchg
cmp
sbb
xor
test
lods
pop
call
inc
xchg
mov
in
aas
scas
mov
sub
push
mov
inc
fisub
inc
xor
mov
std
test
sbb
pop
aas
adc
add
aas
fsubp
in
(bad)
jo
not
inc
neg
fidiv
dec
iret
mov
ja
dec
push
inc
jb
sahf
adc
jns
(bad)
sub
cli
ret
psubsw
(bad)
fisub
or
int3
push
int
inc
loop
iret
fstp
data16
jmp
pusha
sbb
rol
mov
jbe
pop
out
int
ficom
and
xchg
fnstenv
jno
in
push
inc
adc
not
push
sub
sbb
fadd
mov
or
(bad)
cli
les
mov
jbe
jp
adc
ds
xchg
cld
jno
loope
icebp
pop
cdq
repnz
aam
mov
(bad)
sbb
stc
jno
pop
inc
sti
mov
xchg
add
or
mov
cmp
pop
mov
xlat
push
sub
outs
data16
sub
aam
aam
(bad)
mov
or
or
cmc
rcl
je
out
(bad)
loope
imul
mov
mov
xor
into
mov
cmp
cmp
pusha
mov
popa
aaa
addr16
xlat
dec
dec
jae
dec
sbb
sbb
std
inc
inc
cmc
outs
mov
mov
dec
sub
shl
inc
xchg
mov
xchg
dec
bound
jne
or
ins
rcl
mov
mov
(bad)
clc
cld
pop
mov
(bad)
aaa
xchg
shl
nop
ss
(bad)
cmc
push
jge
daa
clc
sub
iret
lds
push
fistp
sti
fdivr
sar
out
adc
aas
and
test
add
or
idiv
test
mov
dec
xchg
mov
ss
(bad)
clc
adc
js
xchg
in
cmp
xor
(bad)
imul
pop
jo
adc
ror
call
scas
ja
test
int3
pop
jns
jg
pusha
repnz
(bad)
jnp
and
js
push
jecxz
fmul
(bad)
push
inc
dec
sbb
pop
std
cli
sar
stos
popf
gs
and
pop
pop
imul
pop
aaa
add
xor
or
cmp
retf
or
inc
setae
inc
inc
inc
adc
(bad)
fdivr
pop
add
rcl
add
fisub
push
mov
pop
popf
mov
xlat
bound
stos
mov
popa
cmc
mov
fscale
mov
dec
jecxz
xor
xchg
adc
mov
push
(bad)
test
icebp
mov
xchg
movs
stos
pop
push
popf
or
push
jae
jbe
mov
rcl
fmul
ins
not
popa
shl
pop
add
add
ins
sub
hlt
ror
sbb
add
(bad)
sar
movs
ror
jl
jle
mov
mov
xchg
mov
cli
sti
je
push
cwde
ins
jno
jb
pop
sub
das
ss
mov
jmp
xor
mov
sub
(bad)
loopne
dec
or
mov
imul
into
sub
test
jno
lahf
inc
lahf
xchg
jnp
(bad)
add
(bad)
hlt
or
les
mov
sar
and
jo
int3
sub
pop
movs
imul
repnz
scas
mov
repnz
int3
cmp
pslld
add
ficom
daa
inc
jb
shl
(bad)
in
sub
imul
xor
push
push
mov
dec
cmps
mov
jae
neg
mov
clc
sub
fs
aas
inc
inc
and
xchg
cwde
xchg
lea
pop
les
and
fwait
cld
sbb
scas
cli
outs
sub
cmps
mov
sub
xchg
rol
ss
test
fistp
fiadd
test
aad
sti
stc
add
mov
sub
xchg
sti
scas
lods
jnp
sub
or
(bad)
aas
shl
lea
cdq
bound
jp
mov
aam
adc
cwde
sbb
jl
repz
pop
jb
call
inc
xor
mov
xlat
std
xchg
mov
and
std
je
pop
add
inc
fisttp
daa
sar
sub
ja
jle
push
cmp
pop
jb
sbb
hlt
call
xor
push
xchg
mov
call
scas
push
mov
sub
test
rcl
cs
into
push
push
xchg
loopne
xor
rol
lock
pop
pushf
aaa
inc
cdq
push
fwait
mov
pop
fwait
inc
mov
dec
xor
fst
mov
ud0
mov
outs
push
dec
adc
cmp
mov
arpl
xchg
xchg
daa
jecxz
test
jno
xchg
repz
lds
rcl
jno
cwde
je
bound
mov
mov
cmp
movs
bound
stc
rol
(bad)
xchg
scas
push
mov
std
sbb
clc
cmp
add
jns
ror
sub
or
sar
imul
xor
iret
shl
cmp
pop
push
sub
add
xchg
xchg
ja
enter
or
ret
ret
(bad)
daa
pop
dec
shr
pop
jecxz
inc
sbb
xchg
sbb
out
out
mov
jmp
jmp
mov
push
cmps
pushf
(bad)
ficomp
in
fsub
nop
call
push
ret
push
and
xchg
sub
cs
pop
push
jmp
xchg
xor
jb
ror
int3
das
inc
push
int
out
es
or
mov
rcl
sub
aaa
sbb
shl
lahf
mov
fistp
inc
movs
imul
sti
pushw
fwait
adc
test
das
and
fmulp
mov
cmp
test
ins
outs
fstp
test
xor
fisttp
jg
push
lods
xchg
jg
mov
or
xor
cmp
push
mov
mov
add
xor
jnp
xor
mov
mov
jns
pop
jmp
dec
pushf
fcmovbe
push
push
repnz
jmp
mov
mov
cwde
ins
fidivr
and
rcl
stos
dec
inc
in
clc
inc
pop
mov
(bad)
pop
jnp
cmp
hlt
and
call
jecxz
sbb
push
pop
inc
repnz
add
js
ret
jle
dec
das
adc
inc
sbb
test
push
test
leave
sbb
pop
jecxz
jae
out
ds
outs
in
xchg
outs
nop
mov
inc
loop
js
xchg
push
enter
jae
and
cmp
stos
pop
jecxz
lods
sbb
fidivr
xor
and
xor
jle
rcr
inc
xchg
test
push
or
or
call
nop
and
outs
repz
sub
dec
cmp
daa
int
(bad)
adc
(bad)
cmp
cmp
xchg
lahf
sub
int
lds
mov
inc
cmps
cmps
gs
mov
dec
popf
fmul
sub
imul
cmps
inc
mov
jbe
mov
retf
scas
fbld
mov
and
add
outs
out
mov
stos
neg
punpcklwd
paddusw
ret
popa
jmp
test
push
xor
stc
jle
xchg
mov
push
and
mov
mov
icebp
pop
ins
cld
sub
add
mov
push
mov
xchg
ficomp
in
imul
sub
push
fld
scas
pop
out
mov
repz
cmp
mov
adc
mov
outs
xor
add
mov
inc
or
mov
push
and
pop
add
mov
mov
fwait
jmp
loope
aas
dec
xchg
fstp
dec
cli
or
xchg
xor
mov
or
inc
fcmovbe
or
or
xor
mov
aas
sub
cmp
rcr
inc
mov
and
jne
jns
mov
(bad)
mov
sbb
push
addr16
aaa
and
sub
retf
mov
xchg
or
pushf
dec
push
xor
mov
test
dec
std
daa
adc
push
lahf
mov
pop
add
xchg
adc
cmp
int3
mov
addr16
cmp
cmp
jge
cmp
scas
mov
mov
push
jecxz
sbb
sahf
call
and
dec
xchg
mov
in
or
dec
push
outs
inc
lock
pop
out
test
pop
xchg
or
mov
mov
xor
das
mov
mov
or
pop
in
mov
scas
lods
and
push
xchg
(bad)
mov
jp
inc
adc
sub
inc
sti
add
jle
ja
mov
test
xor
mov
fs
dec
shl
or
and
ins
inc
movs
add
adc
xchg
jmp
jo
sbb
aad
test
add
push
xlat
adc
pop
push
jne
cmp
xchg
add
mov
popf
mov
mov
retf
mov
fnop
jmp
cmp
xor
mov
rcl
and
mov
cwde
jp
mov
mov
cwde
nop
aad
jg
add
xor
stos
call
mov
and
mov
aam
movs
add
ret
jecxz
retf
lahf
mov
jb
sub
stc
add
add
in
mov
pop
mov
loopne
inc
aam
adc
outs
push
daa
cli
fisubr
xlat
lods
add
(bad)
mov
and
lods
mov
push
scas
dec
push
jne
cmp
dec
lahf
xor
daa
push
das
mov
mov
sbb
ss
test
xchg
and
aad
outs
inc
retf
stc
push
or
jmp
add
lahf
fwait
lahf
mov
ret
cmps
jmp
mov
xchg
pop
lock
dec
nop
nop
(bad)
jns
xchg
lahf
inc
in
lahf
and
push
and
loope
add
les
pop
or
scas
fidiv
and
xchg
aaa
stos
out
jge
xchg
push
push
jno
mov
xchg
cvtps2pd
aad
in
dec
sub
imul
mov
sub
push
(bad)
xchg
sub
out
and
mov
dec
and
mov
pop
xchg
(bad)
xor
arpl
dec
mov
fst
sbb
inc
jmp
jae
js
fbld
or
retf
mov
push
pusha
cmp
and
add
scas
or
jp
shl
loopne
xchg
clc
pop
push
adc
ins
nop
ja
add
test
and
pop
push
push
xor
push
in
lahf
push
movs
lods
xlat
mov
push
push
xor
fistp
iret
movs
cs
mov
cmp
sub
lock
(bad)
bound
mov
inc
sbb
mov
das
fsubr
adc
call
inc
mov
push
repz
(bad)
test
movs
jmp
and
xor
jecxz
push
or
stos
ja
adc
or
shl
cmc
xchg
add
test
rcr
adc
push
(bad)
push
xchg
jge
xor
neg
cmp
jno
mov
repz
sar
pop
icebp
int
sti
sub
lds
neg
arpl
xchg
aad
aam
jae
jle
(bad)
dec
js
jl
push
movs
pop
stos
jno
mov
inc
(bad)
and
repnz
add
cmp
mov
mov
arpl
out
call
lock
pop
mov
pop
(bad)
cmps
cmp
sub
add
xor
daa
outs
nop
das
cmp
fisubr
push
jmp
pop
in
in
movs
and
pop
rcr
test
popf
add
push
into
fisttp
aad
mov
jmp
ret
sti
cs
push
aad
inc
jb
adc
xchg
ins
push
dec
gs
out
push
push
aaa
push
mov
jne
je
xchg
push
in
shl
xor
add
(bad)
loopne
cli
adc
add
push
and
loopne
inc
test
pop
jns
ds
push
inc
jecxz
push
jge
test
cmp
inc
fstp
dec
mov
in
xor
dec
dec
jecxz
in
movs
bound
fimul
scas
xchg
(bad)
pop
mov
fsubr
sub
or
mov
sub
addr16
ja
les
rol
jmp
mov
aad
fstp
(bad)
aaa
les
jae
sbb
leave
mov
mov
bound
push
mov
pop
retf
pop
pop
mov
inc
mov
and
js
sbb
pop
ds
loope
out
fstp
(bad)
mov
xor
mov
sub
jo
fmul
popf
push
push
shl
ret
lea
and
mov
in
xor
xchg
and
ficomp
mov
fldlg2
(bad)
popf
loopne
out
inc
aad
lock
aad
sub
cmps
out
or
pop
not
inc
inc
push
retf
xchg
mov
stc
cdq
ror
adc
xor
push
jmp
mov
ja
lea
ret
(bad)
fadd
idiv
cmp
hlt
es
or
xor
mov
sbb
sub
xchg
sti
sub
gs
imul
les
jae
loope
nop
sub
sub
push
scas
daa
jnp
div
aas
push
(bad)
addr16
lods
clc
jmp
jae
call
jnp
std
nop
xchg
int3
lahf
mov
or
je
jl
cmp
pop
fs
aas
sbb
out
inc
mov
popf
daa
push
sbb
mov
cmps
push
fcom
pop
dec
(bad)
(bad)
pushf
sub
fs
sub
mov
inc
in
fcom
fld
xor
aam
jbe
jns
loope
pop
mov
fwait
xor
call
add
movs
clc
jecxz
xchg
test
adc
shl
pop
stc
pop
arpl
aam
loopne
fdivr
jb
pop
cmp
push
sbb
push
xchg
nop
out
dec
jmp
fsubrp
jmp
mov
push
inc
retf
dec
push
sti
mov
nop
cwde
adc
div
outs
test
xor
xchg
(bad)
xchg
jmp
add
push
push
jbe
call
imul
movs
cmps
imul
mov
lahf
add
daa
jnp
or
inc
mov
iret
xchg
mov
cmp
sub
popf
jecxz
(bad)
enter
retf
fstp
mov
push
xor
retf
jmp
lds
mov
jecxz
ss
mov
test
js
pop
mov
jo
ret
inc
stos
push
(bad)
jl
(bad)
jmp
hlt
or
jns
shl
jl
and
or
dec
mov
imul
xchg
icebp
enter
pop
push
mov
add
nop
sub
mov
sbb
into
rep
sbb
pop
and
sti
add
inc
ja
xor
cli
test
xor
xchg
mov
rcr
stos
sbb
outs
(bad)
mov
xchg
ss
popf
add
inc
pusha
push
not
in
imul
inc
data16
aad
mov
xchg
mov
add
cmps
fwait
mov
jmp
mov
jp
xchg
loope
das
stc
sbb
imul
arpl
xchg
sub
je
das
gs
and
xchg
stos
lea
mov
fwait
(bad)
pop
in
aas
or
mov
loopne
cmp
in
dec
mov
push
in
pop
or
daa
pop
mov
or
xor
and
pop
jnp
fs
fsubr
test
mov
inc
dec
add
leave
sbb
pop
addr16
(bad)
std
gs
or
mov
sub
popf
sti
cmp
sub
dec
fldcw
xchg
in
outs
xchg
cmps
pop
outs
jo
pop
out
ss
mov
mov
loope
bound
ins
jne
out
gs
lea
mov
and
sti
xchg
cmp
add
lods
test
psubb
mov
sahf
jmp
mov
pop
test
xchg
ds
xlat
fs
jg
das
mov
ret
lods
jae
mov
test
push
xor
outs
push
push
add
xor
cdq
sbb
pop
pop
jo
push
xchg
adc
sbb
cs
mov
(bad)
mov
in
jecxz
mov
mov
sbb
inc
adc
adc
cmp
mov
jmp
out
outs
or
add
jb
out
lds
mov
pop
movs
loopne
xchg
rol
xchg
int
mov
inc
aaa
je
test
push
mov
push
stos
ins
cmps
inc
mov
mov
pushf
lods
sar
enter
out
xchg
and
sbb
out
mov
shl
jbe
mov
mov
or
or
aaa
stc
cmp
gs
or
jge
fs
or
sub
sbb
sub
cwde
xor
iret
or
jp
inc
in
xor
mov
test
pop
inc
retf
cmp
adc
xchg
jnp
and
mov
ds
je
mov
jg
dec
sub
(bad)
pop
outs
push
mov
xor
jmp
loope
or
adc
mov
fwait
cmp
icebp
ss
dec
pushf
lods
(bad)
outs
mov
xchg
sbb
adc
push
loopne
push
clc
in
xchg
and
cmp
fs
mov
fs
xchg
jae
inc
leave
xchg
mov
xor
xchg
ficom
ret
push
push
div
mov
adc
or
cs
push
jmp
int3
jl
imul
jnp
leave
cld
mov
and
mov
add
mov
inc
outs
or
out
loopne
jge
mov
sbb
fistp
cmps
loop
fwait
shl
push
jno
test
mov
pop
sbb
mov
fistp
std
add
add
sub
inc
leave
add
sbb
mov
mov
push
pusha
sar
pushf
push
aam
rcr
mov
jno
push
and
pop
adc
xchg
(bad)
dec
lods
ret
push
out
pop
imul
mov
sbb
cli
adc
test
pop
jo
cmp
inc
jp
arpl
push
(bad)
and
fadd
pop
in
xchg
(bad)
jl
das
or
xchg
(bad)
mov
jmp
dec
sub
push
mov
sub
sbb
or
jbe
pushf
in
add
adc
cld
loopne
arpl
mov
call
rcl
push
cmc
jmp
loope
xor
jo
push
js
in
cdq
push
pop
pusha
inc
ret
xchg
ret
mov
scas
adc
jl
pop
xor
xchg
clc
adc
ds
test
das
dec
mov
ret
cs
repz
inc
addr16
sbb
cmc
mov
outs
into
cmp
xchg
lods
cs
cld
add
pop
add
stos
mov
mov
jp
lahf
mov
or
adc
fs
xchg
adc
pop
or
adc
push
jno
into
ins
pop
(bad)
add
pop
imul
sbb
mov
xor
jo
mov
pushf
push
(bad)
adc
les
stos
xlat
mov
bound
ins
jb
sub
mov
sbb
add
cmp
mov
test
dec
mov
aad
cmps
bound
mov
leave
mov
inc
pop
in
sub
dec
mov
mov
push
lods
push
into
and
sub
sub
inc
sub
sbb
or
loop
repnz
out
inc
pushf
gs
sub
cmp
stos
dec
data16
mov
ret
dec
push
inc
test
and
aaa
mov
xor
ins
ret
imul
cmp
cmp
push
imul
bound
test
push
sub
dec
stos
push
dec
fild
fcomp
retf
out
leave
pop
inc
inc
lods
adc
int
sub
fsubr
(bad)
push
push
or
xchg
fwait
(bad)
in
and
push
push
or
sub
push
lods
retf
cli
in
popa
aad
lock
mov
mov
jge
jae
lahf
sbb
in
cli
and
jge
jle
(bad)
jle
add
out
imul
adc
movs
cmp
jmp
jecxz
(bad)
push
xlat
mov
lds
cdq
loope
push
mov
cmps
mov
mov
test
inc
xor
xchg
pusha
repz
gs
sbb
xor
jb
jge
inc
pop
cmp
es
mov
sahf
retf
mov
or
xchg
and
xor
loopne
sbb
daa
test
loopne
xchg
loopne
mov
inc
shl
inc
lock
add
adc
mov
fdiv
xchg
cs
jp
popa
into
add
retf
ret
sbb
outs
mov
and
xchg
div
and
sbb
push
xchg
or
jne
jns
adc
icebp
not
mov
cmps
sbb
cmps
aaa
push
inc
(bad)
div
out
pop
popf
ins
or
loopne
(bad)
icebp
lock
mov
sbb
or
popf
sub
add
test
popf
pushf
adc
cdq
fist
popf
and
jnp
sti
jle
ret
pusha
(bad)
out
into
aaa
xchg
add
fwait
bound
daa
fimul
cmp
rol
retf
dec
xlat
cli
sub
pop
shl
adc
jge
fdiv
adc
loope
popf
mov
cld
ror
pusha
add
neg
in
xchg
pop
out
pushf
cmc
cmp
add
jmp
jbe
mov
mov
mov
std
jmp
in
ret
xchg
cmp
test
pusha
cmp
jg
loopne
push
leave
retf
syscall
jmp
pusha
enter
pop
and
xor
mov
sub
mov
mov
into
retf
inc
sub
retf
movs
lock
push
inc
sbb
push
mov
nop
(bad)
jno
dec
jbe
dec
jbe
enter
xchg
loopne
xchg
scas
rcl
ret
test
mov
pop
imul
jb
or
cld
sbb
xor
fwait
sbb
inc
std
sahf
push
dec
cmp
movs
cmps
arpl
(bad)
jo
sbb
jmp
aad
mov
fmul
retf
pop
popa
es
mov
mov
push
cmp
iret
jo
dec
inc
push
and
nop
inc
bswap
pop
fsubr
shl
outs
xor
jmp
cld
push
xchg
aad
mov
or
addr16
stc
fist
in
jo
cs
test
sub
scas
scas
in
popa
(bad)
out
ins
jne
das
and
fistp
stc
daa
call
sub
out
test
add
mov
aas
iret
hlt
maskmovq
test
cdq
sar
xchg
sub
mov
fisub
lods
jns
add
mov
scas
dec
popf
retf
iret
mov
xlat
add
call
es
shl
cdq
dec
ins
dec
and
cmp
outs
and
dec
movs
xor
mov
add
cmps
(bad)
mov
adc
cwde
sub
lods
ins
cmp
jns
cwde
or
sahf
push
inc
xor
jb
dec
test
ret
or
mov
mov
sub
jmp
loopne
(bad)
jecxz
sbb
and
mov
cld
nop
push
xor
adc
sbb
sti
add
or
iret
std
inc
xchg
pop
fisub
in
loop
retf
or
cmp
call
xor
outs
enter
int
xchg
lahf
(bad)
mov
xor
ins
shl
adc
test
mov
and
jno
cmps
aas
cld
jg
(bad)
fdivr
fbstp
lods
jbe
out
(bad)
scas
adc
outs
jle
jno
jne
ror
lds
int
mov
movs
cmp
lods
das
push
mov
loop
aas
lods
or
std
mov
and
fmulp
xchg
xor
(bad)
daa
stos
or
dec
mov
cmp
mov
(bad)
sahf
test
mov
pop
sar
and
xchg
popa
rol
and
adc
pop
and
ret
iret
mov
push
add
add
and
in
outs
out
arpl
jecxz
pop
pop
pop
or
fimul
and
cmp
and
cmps
push
dec
mov
cwde
scas
cmps
sub
inc
dec
(bad)
cmp
lock
push
int
cmp
cmps
(bad)
cmc
pop
adc
bound
dec
push
inc
clc
das
cmp
dec
sbb
test
dec
sub
push
xchg
mov
int3
xchg
sub
shr
je
shr
mov
pop
pop
dec
loope
enter
shl
push
(bad)
jle
pop
push
cwde
pop
sbb
mov
add
out
int
aad
jle
arpl
and
xchg
jle
xchg
stos
adc
and
adc
cmp
pop
les
into
scas
mov
dec
pop
mov
xor
mov
sub
jae
jecxz
in
mov
ret
loopne
xchg
xlat
inc
pop
cmp
inc
add
and
mov
lods
mov
sub
and
add
hlt
icebp
push
add
sbb
xor
pop
je
cmp
stos
or
inc
add
and
and
sbb
sub
inc
dec
ds
sub
popa
stos
jno
movs
out
aaa
jg
addr16
mov
(bad)
fistp
rol
jecxz
lds
icebp
sbb
mov
movs
not
add
bound
dec
push
ds
jecxz
or
sub
int3
scas
adc
mov
xor
ret
sub
mov
cmp
std
(bad)
icebp
jmp
pop
dec
popf
sbb
icebp
jl
mov
mov
push
add
pxor
and
test
dec
sbb
mov
enter
dec
sub
test
or
jle
fistp
(bad)
jmp
sahf
push
movs
sahf
test
icebp
mov
mov
push
(bad)
imul
ins
jl
mov
outs
cdq
fcmovbe
jnp
dec
xchg
pop
lods
mov
push
mov
icebp
adc
inc
add
mov
(bad)
jne
(bad)
idiv
scas
push
jmp
je
lds
sub
loope
hlt
jp
test
sub
cdq
push
test
sub
sahf
dec
cmps
mov
or
repz
or
mov
cwde
jnp
sbb
in
jbe
jg
(bad)
mov
cmps
gs
sub
leave
jae
nop
push
dec
and
jmp
push
mov
(bad)
fwait
mov
add
mov
loop
inc
inc
pop
or
sub
enter
and
jbe
js
pop
jno
rcl
push
cwde
mov
jbe
call
mov
mov
in
outs
sbb
repnz
sahf
pop
test
pusha
out
mov
dec
cmp
mov
(bad)
fsubr
inc
ret
mov
push
jns
xor
cli
dec
les
lea
cwde
repz
adc
xor
add
xchg
mov
int3
xor
dec
mov
sub
push
push
out
out
jl
pop
mov
mov
xchg
add
pop
nop
and
jge
jmp
mov
int
push
jecxz
scas
xor
fild
xchg
dec
loop
jnp
jne
xchg
call
or
lods
call
in
cwde
jo
push
shl
xchg
xchg
xor
mov
out
inc
inc
test
dec
mov
xchg
outs
pop
jl
icebp
inc
push
nop
mov
shr
add
pop
cmc
jo
pop
call
inc
push
aad
stos
scas
iret
sub
(bad)
add
xor
fucomp
je
aaa
adc
scas
scas
mov
std
out
es
and
mov
(bad)
or
xchg
push
pop
cmp
mov
cli
sbb
cmp
mov
retf
sbb
jns
(bad)
in
mul
sbb
push
in
or
out
pop
ret
cmp
scas
adc
pop
cmp
in
cmps
xchg
xchg
and
out
popa
pop
daa
push
mov
or
movs
out
and
mov
loopne
inc
mov
(bad)
das
cmp
mov
icebp
in
enter
inc
sub
nop
fst
xchg
popf
mov
push
ss
mov
movs
movs
ret
fadd
in
mov
pop
icebp
sti
or
sbb
pop
mov
nop
inc
sti
loope
mov
call
cmps
adc
push
fdivr
mov
jno
popa
mov
out
sbb
test
leave
mov
xor
mov
lea
dec
mov
xor
int3
cli
mov
(bad)
xor
rcl
out
and
bound
fcom
fdivr
push
addr16
inc
cmp
pop
xchg
mov
adc
mov
daa
jb
pusha
out
push
shl
(bad)
(bad)
or
ins
xchg
and
fnstcw
mov
mov
jae
fwait
sahf
push
arpl
inc
jbe
clc
sub
in
shl
aam
pop
inc
lods
outs
sub
je
test
icebp
adc
mov
aaa
mov
ds
repnz
mov
pushf
mov
pop
cmp
sub
aas
jno
cwde
sbb
jecxz
retf
xchg
aam
mov
stos
jnp
and
pop
and
out
push
push
iret
xor
fld
in
jl
out
inc
mov
addr16
mov
in
jbe
xchg
cwde
stos
xchg
movs
or
jle
sahf
cmp
xor
popa
inc
popw
retf
sub
adc
test
shr
adc
into
test
cmp
hlt
mov
jae
loopne
push
pop
pop
xor
or
mov
fcmovnb
cdq
out
dec
sbb
loopne
pop
pop
mov
push
(bad)
in
outs
xchg
imul
test
add
mov
jmp
xor
jo
jae
mov
push
stos
add
scas
outs
cmp
or
add
scas
mov
xlat
(bad)
jg
out
add
cli
js
jae
lock
lahf
inc
pop
out
sub
push
in
add
jecxz
outs
or
pop
(bad)
adc
icebp
test
inc
ret
fdivrp
sbb
mov
xor
sbb
cli
mov
dec
cmp
sbb
pop
gs
repz
and
ins
std
adc
jno
enter
mov
adc
cld
addr16
add
gs
sub
pop
or
inc
jl
repz
sti
(bad)
neg
repz
mov
inc
jnp
sbb
adc
push
push
loope
push
jmp
pop
test
fstp
mov
pop
scas
ja
sub
ja
adc
mov
jmp
and
pop
or
and
xchg
xchg
or
xlat
call
cld
push
sbb
xchg
loop
mov
out
scas
stc
pop
call
das
cmps
out
lahf
mov
push
add
std
into
sbb
cmps
mov
out
sbb
(bad)
push
dec
in
int3
in
fdiv
inc
push
ins
and
imul
call
aad
(bad)
cmp
xor
push
and
mov
mov
xchg
push
scas
nop
leave
imul
or
retf
dec
fld
stc
(bad)
and
xor
fisttp
push
push
sahf
clc
mov
jbe
xchg
inc
inc
imul
lock
pusha
cmp
xchg
xor
iret
cld
cmp
cwde
gs
test
fcmove
xor
dec
ins
das
and
push
fistp
mov
loope
xor
vpsubd
lahf
cmps
jns
sbb
inc
add
leave
and
mov
pop
push
or
fsin
mov
inc
dec
mov
imul
mov
cmp
cdq
fstp
xchg
cdq
pop
fcom
lds
jno
xor
jns
mov
add
retf
inc
call
jnp
clc
mov
cmp
data16
popa
mov
aam
xchg
add
mov
pop
and
mov
test
and
and
fimul
inc
imul
scas
repnz
fldpi
adc
mov
cmp
xlat
call
mov
mov
sbb
pop
sbb
imul
popa
mov
push
into
pop
push
push
pop
popf
push
clc
mov
push
and
popa
push
movs
cmp
mov
int
jge
xor
fnstenv
fwait
mov
jle
(bad)
jl
icebp
add
inc
sbb
int3
loopne
adc
lahf
mov
(bad)
sbb
jmp
lods
jne
mov
aam
mov
lds
mov
adc
dec
out
push
sub
loopne
std
mov
leave
push
and
xchg
aaa
sbb
out
or
daa
fistp
add
sbb
xor
push
addr16
movs
jl
pop
cmp
dec
cmp
pushf
gs
cmp
inc
in
mov
movs
or
mov
popf
and
(bad)
loop
mov
outs
inc
mov
pop
jp
daa
lds
dec
or
int3
pushf
mov
and
adc
test
ror
lea
rcl
bound
jo
es
mov
dec
mov
adc
mov
pushf
dec
mov
(bad)
cli
mov
out
and
lods
test
out
inc
mov
adc
push
jb
clc
inc
jecxz
xchg
xor
movs
push
ins
dec
mov
stc
in
or
cld
inc
cdq
bswap
fwait
mov
cs
mov
xor
adc
pop
xor
popa
sub
jno
loopne
imul
xchg
aam
inc
es
ins
mov
xor
add
test
test
inc
fdivr
sbb
aas
retf
retf
mov
jge
or
popf
cmps
jmp
(bad)
pop
mov
stc
push
sbb
pop
jg
sti
cmps
mov
mov
ret
sbb
pop
pushf
ds
push
outs
push
and
out
mov
mov
(bad)
xchg
out
in
pusha
mov
push
inc
mov
mov
pop
ror
test
pop
jo
xor
adc
push
pop
jl
dec
jl
call
and
xchg
movs
mov
add
aad
ret
lea
mov
jo
mov
xchg
mov
pop
movs
pop
je
dec
stos
shl
add
jmp
dec
sub
xchg
mov
fstp
shr
rcr
mov
repz
retf
mov
xor
mov
out
sbb
in
jae
inc
jo
sbb
cmc
push
inc
jecxz
push
iret
dec
call
nop
mov
pushf
jmp
loopne
fwait
pop
jne
rep
sbb
inc
add
cmp
dec
mov
or
loopne
cmp
inc
out
aas
sbb
push
or
push
loopne
out
mov
jl
fdiv
mov
adc
sbb
pop
stc
cmps
cmp
mov
mov
adc
pop
push
pusha
inc
fwait
jno
and
fbld
adc
jae
xchg
jle
adc
inc
scas
icebp
out
arpl
inc
fwait
iret
dec
fisttp
mov
cwde
xor
mov
and
mov
push
shl
cmp
and
pop
xor
sbb
jbe
mov
mov
lods
sahf
int3
inc
das
int3
xor
and
pop
xchg
es
and
mov
dec
rcl
inc
test
pop
adc
xor
mov
daa
pop
push
in
sub
aaa
aas
stos
pop
mov
xor
in
ins
add
cmp
pop
jl
fldenv
(bad)
test
in
js
sbb
leave
inc
dec
call
xchg
jae
xor
lods
mov
ret
icebp
test
pushf
add
xchg
sbb
shl
ret
and
sbb
stc
fld
add
lds
pop
inc
into
bnd
xchg
push
xchg
(bad)
hlt
in
jg
and
add
pop
ja
jge
sbb
jmp
push
inc
movs
push
cmp
adc
sahf
mov
sti
(bad)
mov
jg
movs
dec
xor
imul
or
nop
imul
scas
inc
imul
inc
fst
jl
jecxz
xchg
xchg
iret
push
lock
ror
adc
mov
push
les
jmp
les
fbld
cmp
ins
lahf
xor
push
inc
push
popf
hlt
mov
rol
add
(bad)
pop
bound
push
(bad)
cmp
(bad)
xor
imul
xor
(bad)
push
push
stos
mov
or
(bad)
cmps
cmps
cmp
push
mov
sar
loope
jg
mov
jmp
sbb
mov
dec
fld
jmp
mov
outs
(bad)
ins
gs
sbb
shr
jp
fistp
sbb
daa
pop
repz
stc
hlt
mov
mov
inc
jmp
int3
xor
shl
pop
stc
mov
jge
jge
sbb
pop
(bad)
cld
inc
lds
pop
sub
dec
and
(bad)
adc
loope
ror
sub
pop
adc
mov
mov
mov
rcr
and
outs
movs
enter
cmp
add
jg
int3
jmp
ins
mov
hlt
int3
aaa
inc
sbb
fucomi
in
cmp
push
push
jbe
mov
jmp
pop
mov
sub
push
sar
mov
xor
adc
call
xor
mov
mov
adc
xor
pushf
enter
jecxz
and
cmps
and
jnp
lods
(bad)
js
mov
add
pop
les
xor
push
jl
cmps
mov
mov
cs
shr
adc
add
inc
fwait
push
jns
movs
push
loopne
jne
dec
adc
push
int
clc
xor
push
sbb
mov
iret
jmp
gs
in
xor
in
cmc
adc
mov
retf
clc
dec
and
and
sbb
vpsadbw
sti
cmps
push
pop
call
fst
sub
jo
outs
jmp
popa
sbb
push
jno
das
sahf
loop
stos
push
movs
and
mov
mov
jge
scas
inc
outs
mov
push
mov
push
cs
mov
inc
mov
call
jp
mov
ins
pop
hlt
xchg
inc
ins
cmps
xchg
pop
adc
sub
mov
mov
sar
pushf
fisubr
cmp
outs
sbb
and
bound
mov
and
or
retf
or
mov
popa
or
shl
fist
leave
mov
daa
mov
xchg
icebp
sbb
addr16
xor
lods
push
mov
fs
inc
pop
and
lods
dec
aas
clc
retf
fwait
inc
sbb
shl
rcl
pop
les
push
fxch
in
mov
xchg
movs
xchg
loope
test
xor
out
(bad)
nop
push
xor
cmps
push
push
or
js
fsubr
cmp
lea
and
bound
(bad)
mov
sar
pop
lods
mov
aas
sub
into
sahf
dec
adc
push
aad
stos
xor
adc
xor
mov
outs
mov
fadd
enter
pop
ins
mov
mov
pop
mov
jl
fwait
dec
pop
dec
neg
sub
sbb
xlat
inc
or
inc
test
mov
cs
or
adc
dec
sbb
fs
sbb
add
sar
aas
rol
push
dec
mov
xchg
les
pushf
(bad)
mov
xor
adc
movs
mov
push
xchg
push
ins
outs
loope
scas
movs
dec
cld
arpl
push
fnsetpm(287
jecxz
mov
sahf
push
pusha
dec
iret
call
ficom
pop
cmp
cmps
pushf
ss
je
mov
xchg
pop
ins
jae
jbe
lods
push
inc
sti
sbb
mov
rol
inc
cmps
inc
cmp
xchg
enter
sub
jecxz
mov
int3
jb
call
aas
push
add
dec
xchg
outs
rol
out
std
or
cs
mov
(bad)
sub
cmps
cmps
arpl
inc
xor
mov
sub
cmp
lea
cli
push
fstp
aam
std
ds
sub
cdq
sbb
mov
ret
or
xchg
dec
inc
js
mov
rcl
xor
int3
xor
rcr
aaa
push
lods
gs
loope
bound
dec
push
movs
icebp
xchg
dec
mov
mov
ja
mov
mov
mov
sub
(bad)
cmps
push
and
sbb
sub
js
stos
js
int
shl
sub
(bad)
scas
loopne
jmp
loop
ja
cmps
xchg
push
sub
aam
in
push
xor
and
lock
mov
jge
aas
mov
push
xchg
out
inc
and
das
mov
js
lods
rcl
(bad)
mov
outs
fdivrp
mov
fnstsw
pop
and
out
inc
jl
scas
or
lods
inc
in
dec
imul
enter
pop
pop
mov
fs
ss
pop
lods
adc
rcr
cmp
fs
or
stc
mov
ds
jmp
xchg
xchg
adc
cld
je
jge
jne
inc
scas
fiadd
mov
sub
ja
mov
mov
xlat
rol
fst
mov
mov
add
enterw
ret
ins
stc
mov
add
(bad)
xchg
cmps
jbe
cwde
dec
pop
(bad)
sahf
xor
mov
jp
and
imul
push
pop
cmp
not
rcl
rcl
and
push
out
push
fs
push
add
into
aad
inc
ja
and
jmp
int
push
push
sar
xor
xor
jge
mov
or
(bad)
pop
jmp
ds
cmp
jmp
xchg
in
mov
sbb
lahf
movs
(bad)
inc
xor
pushfw
push
sbb
je
mov
add
cmp
lods
aam
adc
push
repnz
lock
push
(bad)
sahf
inc
or
xchg
adc
xor
pusha
imul
pop
pop
fidiv
sub
cmp
mov
lods
stos
lds
int3
xor
adc
mov
out
ds
into
inc
data16
xor
(bad)
fwait
inc
lods
inc
clc
mov
ror
test
pop
sbb
xor
adc
or
mov
sahf
aaa
jnp
jl
xchg
jne
lock
(bad)
bound
inc
dec
jns
das
sbb
rol
inc
xor
inc
sub
mov
cmp
stos
jmp
movs
das
mov
outs
jno
dec
retf
jmp
push
pop
mov
pop
icebp
fisub
bound
adc
bswap
mov
retf
aad
enter
sahf
mov
mov
adc
mov
fidiv
mov
lahf
mov
sbb
sbb
jae
add
in
es
pop
cli
pop
adc
arpl
mov
fimul
push
dec
push
adc
sbb
not
mov
dec
pusha
scas
jg
xor
je
(bad)
out
sbb
inc
scas
mov
push
adc
std
adc
aas
sbb
int
dec
retf
cmp
mov
cmp
retf
mov
push
(bad)
xchg
push
dec
fsubr
mov
cmp
stos
jecxz
sbb
cmp
inc
sbb
sbb
dec
stos
xchg
xchg
and
sahf
loope
push
cmc
push
sti
js
inc
jno
jge
mov
or
lahf
cld
adc
push
mov
outs
inc
add
xor
jns
stc
jl
test
xor
pop
xchg
mov
xor
add
mul
enter
mov
mov
shl
cmp
sahf
push
xor
and
xchg
or
or
mov
in
in
add
mov
lock
push
cs
call
movs
sti
cdq
sar
adc
inc
fincstp
mov
xor
mov
dec
xchg
(bad)
loop
out
stos
fmul
push
cs
aad
xchg
es
mov
in
pop
and
cmovg
adc
ins
lods
and
adc
imul
outs
push
retf
fcomp
cmp
cmps
pusha
lahf
jle
test
mov
pop
fs
pusha
add
adc
mov
std
lds
test
(bad)
or
retf
stos
xor
push
xlat
addr16
stos
pop
test
test
pop
inc
clc
add
int
pop
shl
out
mov
sbb
inc
mov
dec
popa
push
adc
cmp
cmps
cli
add
cli
std
mov
enter
arpl
loop
dec
sbb
dec
lock
and
and
fbld
imul
loop
dec
and
(bad)
and
repz
lahf
call
scas
push
fucom
push
inc
jmp
call
fsub
out
mov
xor
adc
sbb
jno
mov
push
aas
or
xor
dec
push
fld
je
sub
test
js
rcr
cmps
out
mov
data16
fild
inc
pop
mov
mov
sbb
and
cmps
pop
cmp
mov
inc
add
aam
cmp
popf
cmc
mov
xchg
test
frstor
jns
pop
inc
addr16
or
cmp
and
test
inc
xor
sbb
inc
dec
loopne
mov
jl
xor
cld
sub
add
loopne
mov
add
and
imul
cmp
loope
aaa
loopne
je
push
movs
dec
dec
ja
inc
xchg
xor
jne
xor
or
mov
clc
xor
xchg
ins
sbb
pop
sar
inc
mov
leave
les
dec
repz
dec
cmps
outs
test
sub
movs
add
sub
mov
push
outs
mov
sbb
and
xor
jae
ja
int3
add
inc
jmp
or
call
dec
lahf
jecxz
stos
dec
fmul
(bad)
fdiv
dec
sbb
sub
or
fnstsw
sub
sahf
(bad)
je
cli
fisub
sbb
fimul
sub
mov
mov
dec
fisttp
inc
pop
pop
or
push
mov
in
mov
arpl
add
(bad)
popa
inc
popf
add
jns
pop
jecxz
aam
cmp
xchg
imul
sbb
or
sub
pop
fld
aad
test
mov
lods
cmp
jmp
inc
popf
push
imul
dec
pushf
jb
push
int
les
and
xchg
fmul
jmp
xor
(bad)
cmp
adc
in
mov
sub
movs
into
les
xor
leave
call
mov
aas
dec
add
sub
dec
mov
pop
icebp
or
cwde
sahf
mov
pop
adc
inc
jle
push
fiadd
cmp
arpl
mov
push
sbb
xor
jb
push
retf
out
inc
mov
sbb
or
jmp
cmps
xor
push
dec
jbe
mov
lea
dec
mov
sahf
aas
sub
mov
jmp
dec
stos
mov
arpl
scas
hlt
jne
lea
xor
dec
cmps
nop
fbld
rol
in
fldcw
xchg
mov
jnp
jbe
sbb
or
leave
aas
jb
or
pop
mov
(bad)
sbb
or
sbb
and
add
clc
pop
jmp
jp
jecxz
fwait
out
out
xchg
fisub
sti
outs
mov
mov
cmps
pop
dec
out
ret
add
cmc
xor
packuswb
ret
ja
pop
mov
les
inc
cmp
mov
cld
jb
inc
pop
div
xor
mov
pop
sbb
fs
icebp
pop
(bad)
xchg
xchg
xor
mov
mov
xchg
int
iret
push
inc
jne
pop
sti
mov
adc
pop
xchg
scas
popf
shl
es
mov
mov
or
les
les
pop
push
and
cmp
sub
push
fsub
jl
cld
xor
adc
ret
dec
enter
fisubr
or
jge
mov
cmp
adc
pop
xor
cwde
sub
sbb
sub
rcl
pop
mov
add
(bad)
mov
sub
sub
pop
out
vucomiss
mov
into
fnstsw
adc
rcl
or
icebp
and
jnp
xchg
sub
mov
mov
std
mov
xchg
and
inc
out
shr
out
adc
xchg
pusha
scas
jnp
xchg
sub
fimul
and
lods
imul
ins
shl
push
sbb
push
sub
sbb
(bad)
jmp
adc
movs
lds
inc
cs
cmp
jbe
fwait
sub
(bad)
(bad)
in
test
jg
in
add
stos
add
dec
mov
fwait
call
push
or
inc
lds
out
sbb
inc
push
xor
aam
pop
fsubrp
loop
loopne
jmp
in
add
mov
pop
test
shl
sar
adc
cmp
pop
xlat
sub
xchg
cld
pop
inc
aas
and
sub
nop
imul
xor
lock
xchg
repnz
leave
cpuid
xchg
retf
data16
outs
scas
jle
jns
lahf
xchg
dec
jle
push
pop
fistp
test
push
stc
sar
jne
sub
add
(bad)
xor
sub
(bad)
cmps
ja
sbb
lea
jnp
mov
cmp
xlat
in
inc
or
(bad)
retf
jmp
jle
or
nop
jne
xor
dec
scas
adc
hlt
or
rep
xor
adc
outs
lods
into
ror
add
cmp
add
or
sub
rcl
sub
loopne
lods
inc
pushf
inc
or
cmc
push
adc
lds
int
mov
call
pop
xchg
aad
and
sub
add
cmps
stc
adc
and
mov
fdivr
cmp
jnp
lods
jns
fsub
(bad)
add
or
adc
sbb
push
in
jle
push
dec
addr16
sub
sub
mov
inc
addr16
jp
enter
movs
pop
adc
mov
into
and
mov
xor
xchg
sbb
push
jbe
sbb
cmp
or
xchg
das
dec
daa
inc
dec
stc
xor
or
ja
mov
pusha
pop
sub
(bad)
fcomp
out
into
retf
out
popa
jl
or
sub
mov
jl
xchg
test
ja
inc
(bad)
add
dec
pop
jmp
iret
sbb
out
mov
in
mov
adc
pop
dec
and
movs
stos
addr16
push
xchg
sub
lds
pop
and
mov
add
add
(bad)
(bad)
jg
(bad)
fs
xchg
pop
(bad)
movs
pop
xchg
xchg
pop
cmp
or
in
mov
sub
xchg
pop
mov
push
sti
iret
popf
hlt
pop
xchg
cmp
mov
xor
mov
pushf
mov
sub
cwde
xlat
sar
nop
cld
mov
popa
dec
movs
mov
shr
int3
push
fisttp
sub
call
mov
ja
or
call
mov
iret
popf
mov
push
(bad)
jg
stos
gs
inc
test
out
aad
pop
lahf
and
xchg
mov
imul
add
mov
inc
inc
push
pop
sbb
retf
and
leave
mov
retf
out
into
sbb
dec
xchg
clc
cmc
data16
mov
repz
or
inc
call
std
int
fwait
(bad)
scas
popf
sub
mov
sbb
loope
pop
sbb
mov
out
jne
pop
loopne
add
pop
push
xor
and
xchg
jo
or
jg
and
mov
add
rcr
mov
mov
xor
jnp
mov
pop
jbe
adc
shr
shl
(bad)
xor
shl
out
test
xchg
in
xchg
pop
imul
sbb
and
inc
fcomp
xchg
mov
rcr
ds
or
pop
jmp
and
in
and
inc
in
repnz
pushf
push
clc
(bad)
sar
je
iret
xchg
mov
cmp
fld
sbb
or
mov
inc
push
and
jnp
test
add
aaa
retf
pushf
jmp
pop
repnz
xchg
jbe
adc
xchg
jle
adc
push
jmp
mov
repz
fidiv
ret
push
jno
jno
or
xor
push
push
test
into
pop
nop
mov
sbb
in
sbb
sub
fisttp
and
mov
sub
pop
js
outs
int3
icebp
jl
std
inc
mov
rcr
lea
xor
mov
je
sbb
jg
dec
mov
out
xchg
sbb
stos
jbe
ss
xor
dec
cmp
mov
xchg
dec
sbb
or
adc
int
dec
xchg
aas
mov
js
push
dec
in
out
mov
outs
in
fdiv
push
mov
add
rol
(bad)
call
js
adc
push
jno
jnp
adc
shr
fstp
inc
jmp
push
push
dec
nop
je
mov
mov
lock
cmp
push
and
adc
push
pop
dec
ins
scas
in
int
in
cli
mov
adc
mov
mov
clc
sbb
mov
cmp
pop
movs
xchg
inc
and
(bad)
mov
or
push
xor
push
leave
jbe
or
sbb
mov
adc
xchg
loope
daa
mov
cmp
(bad)
stos
push
jb
in
xchg
dec
mov
or
or
adc
nop
imul
sbb
xor
nop
jl
cdq
mov
test
stc
push
fld
out
cmp
mov
inc
retf
arpl
bound
pop
adc
xchg
ficomp
into
xor
in
pop
sub
jl
sub
or
and
sar
mov
addr16
outs
or
mov
xchg
xchg
jmp
adc
retf
out
sbb
push
mov
cmp
adc
call
aam
outs
xchg
call
popf
pop
fwait
(bad)
out
mov
scas
daa
lods
sbb
daa
or
cld
ss
(bad)
fild
or
adc
int
call
daa
pop
repnz
mov
inc
add
mov
inc
dec
inc
out
ficom
neg
in
imul
loope
ret
dec
lock
cli
jp
dec
or
mov
repnz
mov
repnz
jg
mov
test
in
add
cmp
mov
test
pop
jle
popa
dec
dec
or
xchg
sub
and
cmp
xchg
pop
inc
xchg
dec
out
push
data16
dec
test
aam
mov
movs
and
inc
mov
mov
mov
jge
test
(bad)
(bad)
xchg
in
ins
pop
pushf
imul
push
scas
(bad)
adc
mov
jno
jmp
repnz
movs
scas
ds
leave
daa
repnz
pop
cmps
sbb
push
ficom
adc
mov
adc
aaa
ja
sbb
sti
mov
pop
xor
mov
dec
dec
jg
(bad)
imul
fsub
sub
call
and
cdq
mov
push
shr
cwde
xlat
or
retf
adc
jmp
mov
jmp
(bad)
mov
cs
les
dec
ss
dec
ds
mov
push
ds
jo
cmp
lahf
push
sub
out
shl
mov
ret
cld
add
xor
iret
jb
les
mov
arpl
mov
mov
mov
jle
in
push
xchg
daa
jmp
rol
ficom
dec
rcl
push
mov
div
sbb
shl
(bad)
mov
test
dec
iret
or
or
(bad)
push
jge
adc
dec
test
and
mov
pop
mov
push
jne
pop
sub
jnp
xchg
mov
aad
and
sub
(bad)
cs
push
call
xchg
jge
mov
xlat
lods
cdq
inc
stos
pop
cmc
test
and
shl
mov
int
cmps
push
rol
sub
mov
cmp
mov
pop
and
retf
adc
push
push
add
xchg
fs
imul
fcomp
xor
out
ja
mov
popf
fwait
sbb
adc
add
xor
and
jmp
cmp
cld
jno
pop
mov
mov
mov
pop
ret
push
inc
mov
call
dec
cmp
inc
dec
cmp
fsub
(bad)
jns
sbb
jmp
pusha
inc
mul
arpl
adc
jmp
pop
scas
bound
mov
push
xor
add
inc
xchg
and
xor
(bad)
int3
dec
and
test
cmp
mov
xchg
jbe
in
movs
add
sub
test
cmp
mov
fsubr
sti
dec
sub
test
cmp
xor
xor
pop
lods
data16
pop
xchg
cmp
out
add
push
jbe
dec
outs
mov
shl
cmps
and
mov
bound
mov
and
cmp
js
xchg
sbb
cs
add
xor
mov
(bad)
jns
sub
adc
jno
es
into
arpl
add
mov
int
xor
call
mov
(bad)
fisttp
in
in
repz
enter
ret
fdiv
adc
pusha
nop
iret
xor
pop
jmp
nop
jbe
mov
pop
mov
lea
lods
mov
jle
js
cli
movs
or
and
leave
pop
add
mov
outs
and
jno
(bad)
pop
mov
push
jmp
adc
mov
jae
(bad)
ficom
int
aad
(bad)
bound
add
sbb
jle
outs
jl
mov
fisttp
push
and
test
dec
gs
mov
jmp
scas
cmp
je
mov
or
(bad)
fdiv
ret
sub
movq
sub
aaa
jp
arpl
mov
pop
jnp
mov
mov
mov
xchg
aas
shl
in
sub
sub
inc
inc
xor
cmp
popf
movs
pop
inc
pop
(bad)
pop
div
fld
vmulsd
cmp
cld
pop
lods
cmps
(bad)
xchg
sbb
call
sub
in
mov
outs
shl
pop
mov
sar
iret
ret
cmp
sub
into
call
mov
in
or
iret
mov
cmc
dec
jo
jbe
data16
or
cmc
pop
and
pop
jae
jo
sub
inc
sbb
bound
pop
sbb
test
dec
test
or
adc
fidivr
ficomp
mov
(bad)
cli
test
adc
fistp
cmp
hlt
mov
jne
adc
pop
imul
enter
clc
pop
(bad)
sbb
add
sub
xchg
xchg
sbb
jecxz
test
push
mov
mov
mov
mov
in
adc
aam
sbb
sub
cmps
xchg
fisttp
loope
scas
cwde
je
(bad)
pop
xchg
fidivr
push
(bad)
popf
retf
jle
push
add
cmp
xor
cs
push
ficomp
and
mov
mov
pop
mov
lock
(bad)
out
repnz
jl
sub
mov
enter
mov
push
lods
jbe
rcr
ss
jg
loope
pop
ret
pop
(bad)
sub
test
ds
sub
push
mov
fiadd
cli
dec
div
gs
(bad)
js
es
dec
cmp
jns
idiv
cld
xchg
and
pusha
or
mov
movs
loope
and
mov
dec
push
mov
mov
test
sar
enter
xchg
out
ss
mov
mov
sahf
mov
jmp
fadd
add
pop
mov
jo
add
adc
cmps
jmp
aam
jp
leave
(bad)
dec
mov
int
xchg
mov
pop
lods
retf
test
cmc
retf
shl
xchg
or
dec
not
add
mov
jmp
subps
and
mov
inc
mov
dec
popa
lods
test
sbb
inc
mov
fwait
xor
add
mov
aam
inc
or
enter
fxch
scas
ja
jecxz
or
xchg
out
sub
gs
(bad)
inc
mov
mov
inc
scas
sbb
dec
sub
jo
lahf
add
retf
aam
ret
fwait
dec
cmps
mov
fiadd
push
hlt
mov
cmps
xor
lock
sub
xor
lock
jmp
(bad)
cmp
js
movs
lahf
xlat
cmp
fcomip
adc
out
jo
in
test
movs
jl
pop
mov
jp
pop
push
adc
cmp
push
xor
pop
in
adc
(bad)
mov
mov
loopne
(bad)
adc
sbb
das
cmp
nop
das
adc
out
div
cmps
sti
xchg
or
mov
or
jl
mov
mov
cmp
nop
adc
xor
sbb
mov
outs
jmp
stos
scas
pop
jnp
dec
mov
jmp
jae
lock
out
add
and
lahf
or
sbb
les
stc
aam
pop
retf
ror
out
push
test
clc
cmp
movs
push
mov
mov
(bad)
(bad)
shl
fistp
test
xchg
fdivr
mov
pop
call
or
std
push
cmp
(bad)
test
mov
add
mov
mov
retf
in
into
inc
not
fwait
in
adc
mov
inc
push
push
rol
not
mov
xor
and
sbb
inc
adc
add
std
jbe
call
or
stos
es
mov
mov
mov
sub
stos
xchg
mov
aam
and
pop
dec
push
cmp
mov
mov
adc
xor
mov
xchg
stos
ss
out
push
(bad)
mov
cdq
adc
sbb
in
aas
fcmovbe
movs
and
push
and
cmp
stos
sub
xchg
imul
gs
setb
dec
mov
jbe
rcr
cwde
sbb
mov
cs
clc
adc
stc
and
call
pop
(bad)
ins
dec
loopne
mov
pop
sbb
jne
(bad)
scas
(bad)
imul
shl
maxps
cli
mov
iret
or
gs
and
fld
jb
xor
jne
mov
pop
out
pop
jle
mov
pushf
bound
pop
ret
xor
loope
jns
cmc
jecxz
mov
mov
jmp
jb
pop
retf
jae
mov
jl
xchg
shl
inc
xchg
adc
addr16
jecxz
jns
pop
xchg
mov
mov
lahf
repnz
xor
out
pop
retf
mov
sbb
or
jns
ja
add
int
cmp
fcom
cli
mov
mov
sub
pop
cli
in
test
xor
je
adc
ds
or
mov
cmp
fistp
mov
movs
hlt
pop
cmp
in
sbb
setne
sbb
sbb
jo
imul
jnp
push
mov
dec
test
leave
in
sbb
ret
nop
sbb
dec
jmp
adc
mov
push
adc
add
rol
pop
es
fstp
sub
ja
push
jb
jge
push
or
lahf
mov
mov
shl
aaa
push
pop
jmp
sub
ret
test
xchg
repz
jnp
dec
rcr
mov
adc
in
mov
(bad)
adc
sbb
sbb
not
and
out
push
pop
cmc
mov
mov
loop
dec
sub
fidiv
cli
clc
pop
or
push
cmc
xlat
gs
cmp
pushf
jb
jne
mov
push
enter
bound
aas
mov
dec
shr
jmp
sar
jbe
or
cs
outs
lock
repz
mov
call
dec
out
ds
int
in
mov
cdq
test
test
add
adc
in
xor
fisttp
ss
pop
mov
cmp
das
push
adc
shl
retf
sbb
jge
jg
jecxz
retf
sbb
push
fs
repnz
cmp
adc
mov
cmp
jmp
and
in
pop
icebp
leave
into
jg
adc
iret
in
add
ss
fiadd
sbb
xchg
sub
call
pop
arpl
and
xor
loope
shl
or
in
cwde
mov
adc
xor
in
pop
pop
sub
call
das
shl
lock
test
ins
cwde
inc
push
cmps
dec
push
push
iret
rcr
adc
xor
xchg
xchg
mov
out
push
(bad)
cwde
cmp
(bad)
adc
mov
and
pop
push
pop
sbb
or
pop
jl
or
and
repnz
and
pusha
out
out
mov
xchg
pop
stc
fdivr
inc
ror
outs
xchg
int3
inc
(bad)
ret
add
xchg
imul
xchg
xor
adc
jae
call
jb
enter
push
add
mov
(bad)
std
push
gs
das
sub
and
and
jle
xchg
adc
mov
add
ror
mov
mov
outs
or
pop
lea
int3
outs
je
pop
add
cwde
dec
jne
ins
aaa
loop
pop
mov
cs
pusha
mov
in
xor
mov
xchg
add
movs
repnz
out
jnp
xchg
loopne
int
pop
adc
cmp
leave
stc
popa
enter
mov
out
sbb
xlat
inc
or
add
pop
xchg
push
add
cld
fstp
push
mov
pop
ss
popa
leave
xchg
xchg
in
mov
data16
outs
pop
push
mov
and
dec
call
stos
lock
and
jne
fild
mov
inc
loop
sub
xchg
ret
adc
xchg
icebp
outs
movs
pop
fcom
mov
mov
loope
dec
or
ss
imul
sbb
sub
out
pop
out
retf
out
sbb
int
retf
mov
mov
xchg
adc
dec
jno
inc
sub
mov
outs
pop
(bad)
sub
mov
sub
imul
loopne
mov
test
xchg
jg
out
fs
lds
pop
iret
add
les
iret
(bad)
repnz
daa
fnstcw
inc
fistp
fcomi
dec
sahf
push
repnz
call
adc
enter
aam
sti
shl
lahf
mov
push
fld
dec
fimul
in
shl
in
shl
xchg
retf
add
outs
mov
fild
cmc
adc
outs
outs
arpl
xor
inc
adc
test
fld
push
fld
int3
in
outs
pop
retf
push
mov
mov
outs
lahf
into
repz
outs
(bad)
stos
sub
out
mov
dec
xor
mov
mov
jmp
leave
xlat
mov
fwait
sub
cmp
sti
(bad)
dec
bound
lock
adc
sub
xchg
dec
adc
xor
lods
mov
sub
cmps
test
inc
ret
mov
out
jl
xchg
ins
shl
sbb
ja
rdmsr
ja
cmc
dec
ins
add
or
jo
fnstsw
mov
mov
arpl
stos
ret
inc
nop
adc
jbe
into
lods
mov
mov
xchg
mov
lds
sub
sbb
cmps
je
outs
mov
pop
(bad)
pop
jbe
sbb
jge
loopne
loop
xchg
mov
or
adc
nop
add
adc
xchg
fist
pop
inc
xchg
leave
mov
inc
scas
mov
adc
dec
xchg
(bad)
pop
mov
mov
adc
xor
mov
loope
jo
dec
lods
push
ret
inc
cmp
mov
sti
stc
icebp
data16
jp
cmps
mov
shl
mov
pop
fst
aam
sbb
jno
add
int
aas
jnp
iret
pop
int3
jo
inc
xlat
or
call
sti
jmp
imul
(bad)
xchg
mov
addr16
aam
dec
add
inc
sbb
or
stc
fcomi
mov
dec
ins
fisub
iret
repz
dec
jp
cld
push
cs
push
fcomp
retf
scas
sub
es
retf
cmp
xchg
test
aam
sub
scas
sbb
pop
inc
iret
pop
xor
sti
popa
ficomp
test
pop
and
bound
aaa
(bad)
sub
jmp
mov
mov
inc
add
adc
stc
pop
cmp
mov
cdq
popf
mov
inc
mov
xchg
std
adc
xor
sahf
data16
mov
mov
sbb
rcl
jmp
ins
imul
mov
mov
fwait
js
mov
popw
ret
ja
xor
sub
mov
mov
push
cwde
sbb
(bad)
sbb
push
scas
test
or
fdivr
jae
xchg
aaa
dec
sbb
dec
xchg
mov
in
loope
adc
mov
aad
sahf
(bad)
cmp
xchg
mov
cmp
or
push
cmp
lods
fnsave
xchg
add
pop
sti
sbb
ins
xlat
cld
out
jg
push
mov
fiadd
pop
and
inc
cmp
nop
popf
sub
aam
and
add
xchg
sub
adc
dec
mov
cmp
jle
pop
out
int
js
adc
ins
jae
mov
ficomp
adc
mov
icebp
push
xchg
retf
aas
outs
icebp
cmp
push
sti
loopne
or
jne
or
jg
sbb
push
push
ret
loope
cli
test
and
fwait
sub
mov
mov
xor
xchg
xor
test
jo
dec
out
jl
push
push
push
fistp
in
jg
ds
outs
in
rcl
or
outs
aad
addr16
imul
les
xor
sub
dec
imul
aad
pop
add
fistp
xchg
or
add
mov
test
add
mov
aas
iret
pop
dec
jp
pop
(bad)
pop
in
nop
push
das
and
sub
mov
mov
sub
ins
dec
daa
and
jecxz
(bad)
mov
pop
mov
cmps
rol
cld
jecxz
add
int3
or
rsqrtps
sbb
push
int
dec
push
stc
mov
jns
adc
call
(bad)
stos
add
inc
xchg
sub
jns
mov
retf
out
test
arpl
mov
sti
clc
pop
adc
idiv
add
jg
or
push
rol
loopne
mov
jns
or
fstp
and
and
je
mov
mov
stos
sbb
ror
push
jmp
repnz
mov
mov
pop
mov
pop
jbe
retf
in
mov
and
mov
call
sbb
test
pop
cmps
retf
scas
fwait
inc
test
xor
xchg
and
movs
ret
push
push
xor
adc
xor
iret
adc
mov
popa
mov
loope
cs
inc
out
and
ja
xchg
and
hlt
add
pushf
pop
ins
sahf
push
or
or
inc
mov
pop
jns
arpl
mov
cmp
dec
adc
ficom
add
mov
push
outs
mov
out
sbb
mov
add
xchg
hlt
gs
dec
jbe
and
sub
mov
and
jl
iret
or
(bad)
in
add
mov
sub
shl
mov
mov
sti
or
lods
jo
scas
jge
jns
sbb
cmp
cmp
jbe
jge
repnz
mov
arpl
enter
mov
dec
into
out
ds
or
cs
mov
outs
shl
stos
das
fcom
or
inc
enter
jae
pop
fwait
push
jne
inc
and
mov
in
sub
cmp
or
pop
fwait
and
daa
jae
inc
pop
rcl
cli
push
test
cmp
je
int
push
sbb
retf
mov
sub
scas
sbb
out
mov
aad
std
ret
inc
mov
add
test
iret
es
test
retf
(bad)
out
and
sbb
shl
mov
std
mov
cli
cmp
dec
mov
inc
sub
loopne
sbb
dec
push
and
idiv
pusha
imul
pop
jmp
popf
fdivr
fbstp
cwde
cdq
xor
jmp
leave
(bad)
xor
rcl
nop
push
aam
xchg
xchg
mov
dec
mov
jns
loop
mov
xor
pop
sti
adc
sub
push
adc
js
sub
mov
dec
popf
stc
je
std
sub
ins
retf
sbb
jmp
sti
mov
mov
int
aam
call
jo
mov
mov
push
int3
js
push
gs
xchg
ror
iret
mov
or
in
jb
mov
and
mov
icebp
out
imul
adc
call
rcl
push
adc
ret
lea
xchg
inc
aam
sub
sbb
retf
dec
add
mov
add
test
(bad)
pop
xor
aas
stos
jle
fldenv
cmps
xor
stc
lds
fxch
daa
mov
es
das
fimul
out
or
rol
jp
call
or
scas
sub
mov
ret
cmp
push
push
mov
mov
add
sar
scas
not
pop
retf
or
xchg
pop
ficomp
pop
shr
adc
in
test
daa
and
cmp
cmp
sbb
xlat
xchg
cwde
cmp
inc
mov
(bad)
mov
adc
les
fs
dec
(bad)
mov
xlat
cdq
jmp
stos
ins
cmc
sbb
adc
addr16
adc
mov
pop
adc
ins
cwde
je
ins
and
out
fucomip
loop
xchg
adc
call
(bad)
leave
xchg
inc
pushf
ss
mov
nop
sbb
nop
cwde
call
sub
mov
out
addr16
dec
js
mov
pop
stos
mov
test
(bad)
in
push
js
nop
leave
inc
les
loope
loope
xor
dec
out
sahf
mov
sub
cmp
push
pushf
clc
fcomp
(bad)
into
stos
adc
jge
mov
mov
fwait
pop
inc
and
fistp
jl
(bad)
adc
test
cld
fxch
jnp
push
outs
sbb
pop
or
or
mov
loope
mov
dec
cdq
dec
xor
xchg
icebp
test
test
mov
outs
dec
pop
cmp
popa
xchg
mov
add
ret
inc
add
mov
or
test
sbb
adc
cdq
or
add
fsubrp
in
dec
call
xor
pop
jp
xor
arpl
jbe
cdq
shl
sar
in
pop
cmps
jmp
lds
xchg
inc
arpl
sbb
scas
push
xchg
movs
pop
ins
xor
pop
clc
out
dec
add
icebp
ficomp
mov
or
pop
leave
das
(bad)
movs
cmc
push
(bad)
loop
pop
push
loop
pop
pop
cmp
xchg
in
adc
aaa
test
movs
les
shr
rcr
mov
loope
imul
in
mov
and
iret
dec
and
mov
sbb
pushf
loope
imul
pop
clc
cmp
add
xchg
jno
loope
pop
icebp
out
jno
jns
dec
fwait
ds
loopne
xchg
fist
dec
dec
out
cwde
ret
(bad)
int3
dec
mov
mov
xor
shl
xor
mov
ss
pop
xchg
adc
icebp
aam
or
idiv
cmps
jo
(bad)
lea
push
pop
loope
cmp
mov
aaa
test
mov
ror
and
inc
nop
aas
je
pop
pop
cli
xor
ficom
int
xchg
jmp
jne
dec
jge
scas
or
fsubr
out
cmp
adc
in
cmc
sub
js
mov
and
mov
or
mov
push
movs
cli
fldcw
sub
jmp
repz
xchg
inc
mov
add
xor
cwde
clc
out
add
imul
add
stos
sahf
inc
stos
lds
shl
mov
dec
mov
cwde
lea
mov
stos
enter
cwde
es
jge
xchg
out
xlat
inc
jbe
inc
daa
mov
shl
outs
test
mov
xchg
cwde
pop
stos
xor
xchg
pop
and
inc
loopne
bound
and
enter
and
add
mov
aam
mov
inc
or
fsubr
je
push
rcr
mov
pop
mov
sub
ret
sub
outs
shl
xor
pop
or
and
sub
dec
jo
dec
mov
imul
sub
out
or
cli
or
pusha
inc
adc
sbb
(bad)
fsubr
xchg
dec
mov
xchg
dec
mov
cwde
cmp
pop
mov
test
cmp
sar
stc
adc
fisubr
ss
dec
shr
outs
popf
add
sub
xchg
pusha
sbb
inc
mov
cwde
fimul
and
ins
fimul
jmp
outs
out
test
sub
or
in
(bad)
push
std
fcmove
popa
mov
and
repz
dec
cmp
inc
fcomp
lods
push
sub
imul
pop
mov
sbb
xor
push
push
jo
retf
pop
das
push
ins
sbb
in
fcomp
js
push
push
nop
add
push
or
(bad)
cmp
or
push
cld
ror
xchg
loopne
loope
push
mov
loop
test
xchg
inc
and
inc
dec
mov
gs
(bad)
cs
sbb
rcl
and
xchg
mov
nop
lahf
sar
mov
lods
(bad)
cmp
cmc
int3
pop
movs
idiv
jl
xchg
xor
and
xchg
arpl
pop
xchg
push
push
scas
rcr
lahf
lds
adc
push
mov
jo
pop
test
jmp
imul
inc
and
call
pop
or
mov
add
retf
adc
inc
cmp
sbb
dec
ss
mov
xchg
pushf
das
or
pusha
call
xchg
pop
iret
inc
push
push
in
test
add
mov
nop
xchg
pop
(bad)
scas
dec
xchg
push
add
push
outs
push
ret
push
stos
mov
out
ds
push
xchg
ret
pop
jge
in
lods
addr16
and
adc
mov
pop
and
push
push
dec
(bad)
sub
cs
mov
jno
in
xchg
mov
outs
push
mov
xor
xor
ffree
cmp
or
ficomp
iret
stc
call
imul
fld
add
out
xor
adc
cwde
daa
in
sbb
mov
ficom
cmp
daa
and
in
pop
push
xor
fld
cmp
fild
(bad)
add
lock
fcom
stos
push
fistp
mov
repnz
in
jno
and
lds
mov
stc
push
jmp
or
push
mov
xlat
push
mov
sub
dec
mov
pushf
inc
push
sbb
aas
or
cmc
adc
cmc
mov
inc
jmp
push
ss
jmp
xor
sub
xor
push
push
jmp
mov
jmp
je
in
jle
mov
(bad)
and
cmp
add
retf
lock
pop
xchg
cdq
ja
sub
lahf
pop
shl
js
sbb
jnp
scas
sbb
scas
mov
sbb
mov
loop
lds
dec
test
ja
sahf
jmp
(bad)
ds
mov
pushf
sbb
pop
das
ror
shr
pop
pop
mov
add
jecxz
add
inc
lds
xchg
out
loop
sti
loop
div
retf
(bad)
pop
bound
stos
mov
dec
xor
sub
scas
mov
pop
outs
(bad)
imul
and
push
or
sub
lods
push
cwde
push
cmps
stos
adc
sti
sbb
in
scas
mov
adc
fst
lods
jg
push
xchg
pop
xlat
aad
lock
inc
inc
call
or
mov
test
sbb
inc
or
imul
sub
jmp
imul
gs
fcomp
call
je
adc
sahf
mov
mov
sbb
iret
xchg
fwait
xor
in
ins
dec
call
pushf
xlat
pop
add
inc
into
(bad)
xchg
dec
mov
outs
pop
(bad)
and
sub
pop
int
add
push
aas
aam
push
xor
stos
je
dec
sub
fwait
dec
dec
mov
sub
nop
inc
pop
jmp
ret
pop
rcl
in
out
pop
dec
xor
rcl
xchg
dec
rcr
push
pop
movs
cmp
pop
shr
idiv
mov
arpl
(bad)
sbb
jmp
or
mov
imul
xchg
dec
mov
dec
push
sub
xchg
fisttp
and
cmp
movs
fidiv
hlt
cmp
and
movs
fs
stc
push
int
mov
cmps
repnz
dec
nop
push
adc
and
mov
adc
inc
mov
pop
push
fs
movs
cwde
add
cli
pop
enter
jo
or
inc
in
popa
push
inc
and
ficom
jg
out
sahf
pop
sar
jns
mov
add
scas
ret
repz
repz
repz
sbb
in
popf
push
call
pop
sub
sub
add
add
mov
cmovno
in
aam
sub
adc
rcr
inc
mov
or
cli
mov
stc
pop
mov
add
xchg
and
test
icebp
push
push
(bad)
cmps
cmps
inc
inc
pop
out
retf
dec
pushf
cmp
leave
pusha
push
loope
scas
out
sub
lods
cmps
popf
sbb
in
outs
clc
push
sub
or
popf
mov
dec
xor
cwde
cmp
int3
jb
mov
in
inc
sbb
mov
idiv
loope
pop
clc
jg
mov
std
add
ror
push
mov
mov
sub
adc
xchg
fst
fild
(bad)
mov
inc
xlat
addr16
imul
call
data16
mov
lods
out
bound
arpl
push
sub
pop
ins
jle
pop
inc
in
xor
sbb
mov
(bad)
repz
shr
out
pop
mov
hlt
adc
pop
addr16
push
push
push
add
cmp
xor
jecxz
arpl
sbb
fs
xlat
je
gs
cld
mov
cmps
lods
adc
push
sub
mov
jo
sar
push
mov
loopne
(bad)
ret
popf
in
out
mov
lock
mov
repnz
push
jne
add
sbb
inc
hlt
ror
push
leave
xchg
cmp
dec
pop
mov
jbe
(bad)
mov
out
mov
push
dec
icebp
push
stos
movs
std
sub
push
cli
inc
mov
in
push
jno
dec
push
lahf
ins
pop
and
mov
out
mov
scas
sbb
add
fsub
mov
lea
adc
sub
cmp
addr16
test
repnz
and
and
mov
ror
xor
rol
popf
int
cdq
daa
cmp
sbb
inc
push
outs
(bad)
shl
fistp
cmp
(bad)
in
xor
pop
pop
cmp
data16
sub
dec
or
mov
and
push
out
retf
ins
mov
sbb
outs
adc
sub
sbb
std
js
fild
jle
push
pop
cmc
xchg
les
inc
mov
popf
lock
addr16
cmp
push
mov
add
or
pop
cmp
ds
mov
xor
sub
jno
adc
mov
test
cvtdq2ps
jno
pop
inc
ss
push
mov
dec
cld
ficom
ins
bound
push
jno
test
add
push
mov
adc
sub
inc
(bad)
std
pop
int3
push
out
mov
icebp
pop
xchg
cmc
in
lahf
sub
pop
inc
movs
aad
ja
add
mov
(bad)
jbe
cmp
jns
or
cmp
dec
outs
dec
hlt
dec
leave
xchg
out
(bad)
dec
dec
test
adc
mov
and
add
call
test
fbstp
inc
sub
retf
push
add
add
cs
in
inc
xor
xchg
jno
sub
adc
arpl
xchg
xchg
jb
adc
mov
lea
(bad)
(bad)
cmp
in
into
aaa
retf
dec
es
ret
lds
daa
mov
xchg
popf
aaa
cmp
mov
mov
mul
clc
push
out
stos
cmps
cwde
rcr
shr
inc
imul
sbb
sbb
inc
jmp
call
into
xor
repnz
test
and
in
es
jle
rcl
loopne
mov
jno
mov
sub
cmps
repnz
test
lods
xchg
into
ret
xchg
test
xor
mov
mov
int
dec
or
loope
sbb
push
sub
fisttp
mov
or
pop
in
and
or
dec
cs
mov
dec
jo
jmp
scas
inc
adc
out
test
sbb
cmps
and
or
cmp
jne
ret
vandpd
mov
sti
out
imul
jecxz
test
cmc
fistp
sbb
push
arpl
test
push
mov
hlt
neg
lea
mov
scas
outs
loopne
loop
call
fucomi
push
clc
add
xlat
(bad)
fbld
mov
xchg
div
mov
add
(bad)
(bad)
mov
cmp
inc
imul
paddq
stc
cmp
fimul
stos
push
cmp
out
or
adc
or
xchg
scas
out
sbb
fmul
(bad)
retf
mov
mov
pop
out
retf
dec
js
pop
sbb
addr16
(bad)
pop
pusha
and
push
mov
cmp
in
cmp
es
outs
and
icebp
shr
mov
stos
mov
daa
cld
std
movs
loope
xor
xor
inc
cmp
pop
ss
retf
sub
add
jge
push
pop
add
out
hlt
ds
mov
ret
repnz
fisubr
mov
inc
(bad)
sbb
or
mov
stos
mov
push
dec
cmp
jo
adc
in
cmp
mov
push
push
pushf
(bad)
cmps
int3
mov
stos
lds
pop
int3
or
jg
or
mov
hlt
jl
gs
ins
or
dec
enter
ins
cmp
out
and
mov
mov
out
jg
out
and
enter
test
nop
xchg
mov
imul
movs
jne
int
fist
mov
sbb
add
jae
pop
ja
dec
xor
cmp
cmp
or
push
out
xor
outs
and
xchg
add
ror
xor
loope
xchg
add
rol
in
sti
pop
jmp
gs
jg
out
cmp
dec
test
test
pop
dec
jae
ins
pop
rcl
mov
mov
ds
adc
pop
xchg
push
mov
mov
xchg
das
lock
stc
cdq
sbb
ret
sahf
stos
sub
inc
and
pause
je
cmp
in
mov
mov
add
xor
iret
shl
(bad)
pop
mov
(bad)
pushf
jecxz
mov
mov
push
inc
mov
test
push
(bad)
out
ret
xchg
enter
out
sbb
dec
jbe
inc
lods
js
jmp
adc
out
mov
adc
sbb
(bad)
sub
aaa
jno
(bad)
mov
jmp
loope
fbld
aaa
cmps
lock
sub
inc
addr16
mov
jae
dec
jbe
inc
rcr
dec
fdivr
cmp
add
xor
loop
add
add
xchg
pusha
lahf
mov
fwait
icebp
and
dec
lds
xchg
dec
and
add
fs
or
js
adc
pop
mov
sbb
xchg
arpl
out
hlt
test
and
out
outs
lds
xlat
push
test
xchg
loopne
inc
jg
pop
sahf
mov
pop
dec
icebp
es
adc
lahf
and
ret
out
fidivr
sub
mov
cmp
(bad)
mov
jecxz
pop
stc
add
push
jmp
jle
(bad)
pop
(bad)
cmp
enter
ss
ss
mov
ins
in
rcl
mov
inc
sbb
mov
mov
sbb
sbb
pop
xchg
xchg
or
and
cmp
adc
fidivr
arpl
dec
dec
push
inc
hlt
mov
mov
xor
sub
call
es
and
xchg
add
movs
mov
imul
inc
and
sar
test
xor
mov
lods
call
(bad)
xor
(bad)
pop
repz
ret
outs
xor
jmp
lock
mov
hlt
ds
repz
mov
dec
mov
and
pop
or
and
jne
aas
mov
jmp
cmps
add
mov
clc
xchg
mov
xor
or
xchg
push
outs
mov
push
xchg
sar
dec
mov
test
aad
int
sti
movs
mov
mov
fst
mov
inc
cmovs
xchg
sub
rcl
int
(bad)
test
sub
out
pop
retf
pop
cmps
or
add
jl
(bad)
adc
out
lods
hlt
rcl
ror
xchg
xchg
lock
xor
in
jnp
(bad)
push
sbb
cmp
xchg
aaa
xchg
ins
test
nop
cmp
mov
sbb
sub
jle
and
or
popa
call
imul
fwait
pop
xlat
das
sub
add
mov
mov
jb
ror
and
cdq
out
clc
fadd
adc
sub
add
mov
xor
jno
inc
mov
stos
cmp
mov
gs
pop
cld
dec
jl
and
daa
adc
dec
neg
sbb
xchg
nop
imul
enter
subps
mov
popf
or
icebp
ja
and
sbb
data16
push
outs
sahf
mov
push
movs
mov
addr16
xor
sbb
and
inc
or
cld
mov
sub
and
hlt
or
pop
retf
popa
out
jecxz
loop
outs
and
dec
dec
(bad)
adc
mov
add
inc
mov
mov
xor
adc
out
scas
shl
icebp
push
push
pop
stos
sbb
xchg
jbe
dec
ret
js
dec
icebp
xchg
clc
in
and
fisttp
shl
icebp
xor
sub
push
ins
in
dec
daa
xchg
cmps
lea
cmps
sbb
jp
mov
lods
int3
sbb
mov
or
mov
data16
pop
and
push
push
add
jb
std
popf
push
push
add
sbb
inc
mov
jae
cdq
mov
inc
cmp
iret
push
fld
xlat
xchg
adc
rol
ret
jae
je
sbb
stos
jae
sbb
mov
jbe
rcr
push
hlt
mov
mov
push
push
push
add
cli
test
shl
nop
repz
mov
inc
neg
pusha
jp
sbb
int
(bad)
mov
xchg
jmp
adc
mov
sbb
popa
(bad)
scas
dec
mov
or
adc
sbb
fnsave
out
mov
nop
mov
das
mov
jecxz
in
ins
xor
sub
and
into
mov
inc
daa
out
or
aad
in
sub
pop
lahf
pop
jmp
retf
xchg
mov
(bad)
cmps
push
lds
mov
mov
out
loope
jae
jo
and
mov
pop
jno
aad
call
or
and
xchg
jmp
lds
pop
pop
jg
outs
inc
hlt
retf
nop
cs
arpl
mov
out
push
jbe
test
fisub
retf
lahf
push
les
and
loop
and
enter
dec
inc
ret
mov
mov
or
and
icebp
or
scas
xor
repz
es
lods
sbb
mov
inc
call
mov
fistp
dec
(bad)
jne
mov
lahf
dec
jmp
and
ja
clc
mov
or
icebp
rol
nop
dec
inc
mov
mov
pop
jns
popa
xlat
scas
xor
push
(bad)
rcl
xchg
dec
and
mov
pop
jg
xor
int3
xchg
mov
push
xor
xor
mov
dec
fild
mov
ins
lahf
lods
scas
js
mov
mov
jno
cmps
loope
addr16
setns
mov
mov
mov
xchg
pusha
push
adc
xor
and
cmp
repz
or
cmp
std
cmp
fld
(bad)
cli
xchg
push
ins
hlt
mov
inc
xchg
retf
lahf
iret
add
mov
inc
jmp
push
push
mov
or
ret
mov
gs
dec
or
and
shl
sub
add
adc
je
jo
movs
mov
add
lock
mov
jnp
stos
sar
pushf
scas
pop
adc
xor
dec
aam
and
sti
mov
clc
mov
push
test
cmc
(bad)
clc
cmp
push
int
(bad)
adc
mov
mov
daa
mov
and
les
jnp
in
xlat
sbb
add
mov
dec
xor
inc
lods
(bad)
mov
and
jbe
fistp
mov
dec
clc
lods
repz
sbb
add
add
ja
sub
mov
and
or
jmp
jo
inc
fst
rcl
pop
dec
cmp
fisubr
aaa
fsubr
imul
push
adc
scas
dec
hlt
push
sbb
mov
xor
movs
inc
aaa
outs
mov
mov
pop
and
inc
add
arpl
xchg
in
or
out
hlt
bound
push
loopne
js
outs
jne
imul
push
fwait
or
mov
loope
call
rcr
mov
(bad)
pop
std
xchg
or
fs
pushf
fs
push
loopne
dec
and
ins
loopne
xchg
xchg
and
daa
ret
mov
imul
mov
jmp
jmp
adc
sub
jns
cmp
arpl
or
mov
push
adc
call
xchg
inc
xchg
xchg
xor
mov
sahf
push
jnp
adc
out
in
mov
pushf
jno
or
push
popf
mov
or
xor
cmps
xchg
xchg
xor
push
aas
xchg
pop
(bad)
outs
fdivr
repz
push
cmp
sbb
lock
lahf
xchg
cmp
inc
mov
add
pop
shl
imul
xor
aad
dec
out
and
adc
cmp
cmp
push
adc
add
inc
rol
adc
test
add
xchg
jp
lahf
sbb
not
loope
mov
jecxz
pop
imul
loopne
into
cmc
int
sbb
or
nop
or
mov
pop
xchg
lea
or
sub
pop
and
mov
and
or
stos
push
popa
aam
xor
aad
sub
mov
and
and
sar
adc
push
into
pop
dec
dec
out
es
(bad)
shl
xor
loop
inc
pushf
adc
imul
mov
mov
hlt
outs
pop
(bad)
sahf
mov
jge
fadd
iret
xor
inc
aam
sub
mov
and
or
or
ret
xchg
pushf
inc
punpckhwd
popf
jl
ret
add
mov
not
mov
or
std
fstp
popa
cmp
jl
mov
and
lods
mov
mov
pop
repnz
add
test
ds
push
mov
mov
movs
mov
loopne
mov
inc
jne
adc
mov
dec
add
gs
pop
mov
ret
xor
mov
pop
dec
fs
push
shl
(bad)
in
outs
add
(bad)
mov
push
test
ins
mov
fbstp
and
out
test
mov
or
movs
in
outs
xchg
pushf
push
and
jle
mov
icebp
das
or
addr16
cli
ins
enter
push
cld
call
xchg
lods
pop
sub
test
pop
xchg
push
dec
adc
rcr
in
push
mov
jge
jle
adc
jb
in
sbb
(bad)
loope
add
in
sub
xor
nop
mov
xor
into
(bad)
sub
xor
push
or
ins
in
sub
popa
mov
mov
cmc
clc
jmp
call
(bad)
out
lods
aaa
or
scas
push
fiadd
inc
aas
and
scas
shl
lock
xchg
pop
fstp
jb
bound
xor
push
pop
ins
inc
push
sbb
icebp
call
sub
mov
and
xor
(bad)
movs
cmp
pop
out
cld
adc
mov
adc
inc
adc
dec
shl
xor
mov
pop
outs
mov
loopne
xchg
pop
or
arpl
mov
lds
pop
and
scas
jecxz
js
mov
ss
test
div
clc
lahf
paddw
rcl
stos
or
xchg
adc
or
cmp
stos
ja
les
jl
mov
inc
mov
or
jno
shl
sbb
adc
adc
inc
inc
jnp
data16
jb
jbe
xor
jecxz
ds
jmp
int
(bad)
mov
shl
daa
or
and
jp
call
mov
(bad)
leave
add
mov
lahf
bound
cs
call
xor
jb
or
mov
retw
daa
xor
mov
mov
push
cmova
pop
jecxz
iret
mov
ja
lock
or
ds
cli
sbb
sub
xchg
sub
dec
sub
jg
adc
aaa
fimul
inc
inc
and
aas
es
out
je
popf
mov
push
out
dec
cmp
mov
inc
add
sub
shr
test
call
add
in
inc
cmp
cmp
sahf
in
fist
jns
fld
mov
add
popa
outs
add
aad
outs
movs
and
aam
push
mov
mov
call
push
addr16
push
out
cs
fadd
or
xchg
repnz
mov
ss
(bad)
dec
arpl
mov
add
lea
sbb
adc
ret
push
push
dec
pushw
sbb
jb
leave
jne
stos
test
jae
push
iret
fmul
es
pop
inc
or
jl
inc
fist
mov
mov
icebp
inc
pusha
popa
mov
shl
sbb
mov
test
dec
xor
imul
mov
ins
lods
out
das
xor
int
test
mov
adc
or
mov
jns
popa
lods
mov
fldcw
das
(bad)
add
sub
dec
sbb
stos
pop
stos
dec
aam
imul
aad
xchg
adc
and
push
sar
mov
xor
inc
push
(bad)
sbb
ja
repz
adc
push
(bad)
stos
lock
fldcw
in
push
jmp
xchg
add
mov
ror
jg
adc
fldenv
jge
or
dec
mov
inc
add
add
inc
dec
mov
outs
push
and
push
call
inc
or
add
fcomi
pushf
call
adc
(bad)
int3
(bad)
xor
mov
pusha
jnp
push
xlat
mov
sbb
lods
jecxz
mov
ret
aad
pop
or
fdivr
jns
jnp
sub
xchg
jnp
xlat
mov
mov
movs
pop
cmp
mov
xchg
xor
adc
(bad)
mov
test
retf
shr
pusha
stos
mov
mov
dec
mov
pop
cmp
sbb
clc
jl
in
sar
ss
push
add
push
mov
pop
and
push
cmps
jno
shl
and
pop
lock
in
gs
pop
and
xor
(bad)
dec
or
addr16
pop
out
out
xor
mov
mov
sbb
adc
adc
imul
xchg
xlat
dec
mov
fbld
stc
mov
aam
jb
xchg
inc
int
push
cmp
jg
fsubrp
test
aad
xchg
shl
xor
pop
fisubr
fldenv
push
xor
mov
out
pop
push
aam
out
adc
cmps
popa
sbb
jbe
scas
dec
call
cmp
retf
scas
popf
jo
jmp
hlt
clc
and
cld
xchg
pop
dec
mov
das
adc
hlt
dec
mov
movs
mov
jne
std
out
mov
aad
cmp
dec
cmp
lods
mov
(bad)
dec
mov
xchg
fbld
lahf
sub
sub
rcr
and
shr
iret
sbb
shl
push
sbb
mov
data16
es
into
inc
mov
push
fucomi
xchg
ins
pop
cdq
das
mov
out
sti
cli
ds
sub
pop
cld
shr
retf
jmp
repnz
jmp
cwde
or
pop
dec
lds
mov
and
mov
addr16
pop
push
lds
retf
imul
(bad)
jp
inc
pop
jmp
(bad)
retf
pop
jg
xchg
rcr
test
and
adc
and
jbe
pop
adc
pop
fist
(bad)
int3
btc
in
mov
adc
pop
mov
pushf
pop
popa
or
lock
neg
jb
sahf
pop
popa
out
xor
or
enter
iret
cwde
add
jb
mov
lods
mov
call
pusha
mov
cwde
pushf
idiv
adc
leave
pop
mov
inc
test
push
xor
std
retf
stos
inc
mov
sub
add
mov
fdivr
dec
and
cmp
idiv
aad
cmp
sbb
xor
in
stos
jo
pop
jnp
cs
cmp
or
mov
stos
daa
jle
stc
cmp
mov
into
or
lea
loopne
imul
sub
inc
inc
sar
xchg
pop
dec
sub
dec
add
dec
mov
loopne
mov
inc
jl
mov
push
lea
sbb
fmul
jnp
dec
sub
and
mov
push
fbstp
dec
sub
jecxz
es
jo
daa
add
xor
push
inc
fst
push
int
int
fimul
cmp
ins
loopne
jmp
gs
add
popa
lock
push
inc
jne
cmp
dec
les
ret
xchg
imul
fadd
xor
in
cdq
in
xchg
clc
jl
dec
jecxz
xor
(bad)
fsub
outs
mov
xor
sahf
imul
pop
jns
ins
out
sub
jns
inc
mov
cli
xchg
enter
lods
push
shl
jl
xchg
cmp
pminsw
dec
in
jl
add
adc
repz
loope
xlat
fild
pxor
jae
jmp
mov
sub
imul
stos
shl
call
ds
sahf
dec
cs
inc
lock
jmp
push
mov
cmc
inc
push
jp
loope
loopne
rcr
cli
push
dec
mov
adc
popa
retf
fist
dec
jecxz
pop
daa
pushf
or
fwait
scas
jle
ds
and
cmc
fidivr
xor
and
mov
mov
push
adc
sub
loopne
sbb
aam
sar
pushf
jb
and
daa
rcr
imul
or
pushf
(bad)
shl
xor
in
stc
mov
mov
rcl
dec
sbb
cmp
popf
pop
xchg
fwait
sub
gs
pop
inc
jle
rcl
xchg
and
mov
rcr
int
ss
rcl
and
lods
cwde
shl
mov
cmps
mov
sub
mov
shl
xor
ficomp
inc
shr
scas
pushf
ret
test
or
sbb
jecxz
mov
faddp
rcr
or
ja
push
cmp
jecxz
add
lahf
push
cmp
sar
int3
movs
xchg
bound
loope
repz
in
lods
push
pop
dec
dec
sub
lea
xlat
pushf
sbb
pusha
adc
retf
add
inc
mov
mov
sub
add
int
adc
getsec
imul
pop
stc
pop
pop
aas
lods
imul
cmp
dec
aaa
push
loopne
pop
pop
rcr
fbstp
mov
(bad)
mov
dec
mov
sub
fcomi
xchg
cld
and
rcl
mov
movs
push
enter
sbb
and
outs
clc
out
mov
mov
add
mov
rcl
dec
cdq
adc
mov
mov
add
mov
push
fucomip
mov
jg
retf
aad
sub
xor
sub
movs
inc
mov
mov
ficom
mov
outs
mov
loopne
aaa
pushf
cmp
out
inc
mov
cmp
lock
push
popf
std
cld
xor
cmp
scas
sub
mov
enter
dec
out
mov
xchg
push
rcl
(bad)
xchg
pop
jae
aad
mov
pusha
mov
mov
adc
xor
inc
inc
mov
sbb
or
dec
xchg
adc
jl
aas
ds
adc
bound
js
popa
(bad)
pop
mov
mov
fcmovnu
cmp
xor
mov
dec
mov
fs
(bad)
jge
push
sbb
add
into
push
and
and
scas
sbb
mov
pop
pop
jb
inc
jge
es
push
bound
and
mov
push
sbb
or
add
or
push
jg
loope
push
(bad)
xor
sbb
fild
call
test
cmp
mov
add
cmps
aas
out
or
aas
ja
xchg
inc
cmp
xor
jae
sub
inc
push
and
(bad)
(bad)
jg
dec
and
sbb
(bad)
cli
jae
or
mov
cs
int3
fnsave
pop
mov
out
mov
repz
mov
or
mov
add
jns
icebp
mov
mov
cmp
test
je
in
movs
xchg
mov
jl
scas
adc
cdq
inc
es
je
test
shr
add
movs
out
sbb
in
dec
stos
xchg
jmp
movs
jmp
xor
jge
and
push
add
pop
adc
sub
retf
jge
push
sub
in
dec
push
push
push
jnp
iret
sahf
(bad)
mov
(bad)
mov
sahf
mov
movs
dec
sub
jmp
sbb
repnz
ret
cmps
add
push
push
cmp
pop
inc
inc
mov
fdiv
loopne
jg
(bad)
pop
add
popa
leave
jmp
sub
icebp
jle
shr
xchg
mov
out
out
cmp
pusha
int3
out
jle
push
mov
add
movs
scas
xor
jmp
mov
aaa
outs
in
adc
scas
fmul
fcom
dec
ret
xor
dec
(bad)
into
loope
in
push
loop
ret
in
iret
pop
scas
retf
or
jp
or
sbb
push
fs
sbb
push
mov
or
cmp
inc
xchg
jecxz
push
jae
sbb
fsubrp
mov
enter
xchg
cmc
shl
fdivrp
into
outs
(bad)
imul
out
mov
test
cdq
mov
or
mov
push
aas
and
jg
xchg
push
lods
mov
sbb
movs
sti
nop
sbb
repz
(bad)
popf
xor
jg
mov
add
or
sub
mov
call
(bad)
out
jb
inc
in
xchg
int
popa
imul
addr16
retf
neg
add
dec
lods
(bad)
fwait
jge
jecxz
xor
enter
mov
cmpxchg
mov
jl
mov
lds
xchg
inc
xchg
dec
xchg
and
and
adc
les
call
int3
std
inc
ret
loop
call
mov
sub
imul
or
lds
rol
and
std
adc
or
or
lods
adc
jmp
mov
shr
push
call
cld
stc
stc
pop
cli
or
mov
push
fs
(bad)
lods
dec
and
inc
push
aad
movs
push
mov
cmps
rol
mov
jno
adc
repnz
std
inc
cs
pop
(bad)
hlt
pop
cmp
out
dec
jns
and
movs
stos
ror
mov
test
mov
repz
mov
in
aam
xor
push
retf
or
pop
inc
daa
mov
nop
out
add
lahf
test
xchg
mov
into
cmps
add
mov
data16
push
lock
and
jno
xchg
sub
scas
xor
shl
push
push
in
jns
dec
jns
std
and
ret
(bad)
dec
adc
mov
sahf
add
test
test
or
add
push
shl
or
(bad)
adc
add
das
xor
movs
int3
mov
cmp
loop
stos
popa
mov
sbb
push
out
pop
add
gs
push
jbe
aas
mov
pop
mov
push
es
cmp
inc
xor
fwait
int
sub
aas
outs
stc
ja
in
mov
shl
or
cmp
out
outs
je
push
mov
cmps
adc
popa
scas
jmp
outs
push
dec
xor
lds
pop
pusha
pop
or
jbe
cwde
test
leave
bound
mov
cdq
js
ja
mov
test
ins
lods
dec
loope
and
jl
stos
popa
dec
pop
jecxz
cvttps2pi
dec
cmp
cmp
cli
mov
cld
pusha
sub
or
push
cwde
cdq
in
push
sbb
call
adc
push
stc
mov
cdq
sbb
cwde
pop
aaa
fistp
gs
xlat
and
sbb
cli
retf
add
fld
ja
xlat
push
mov
dec
fst
push
add
call
mov
mov
rcr
int
add
push
mov
scas
push
repnz
mov
(bad)
sbb
outs
mov
mov
pop
retf
test
ret
ss
test
cli
jns
lahf
jl
sbb
add
sahf
es
loop
mov
lahf
xchg
mov
ds
fbld
or
mov
push
jnp
sti
in
scas
imul
test
scas
clc
sub
std
xor
cli
cs
sbb
add
sub
adc
call
gs
js
lods
das
das
pop
xor
adc
scas
mov
xor
or
leave
mov
pop
or
dec
xchg
sub
push
add
or
adc
add
mov
adc
dec
pop
fnstenv
inc
xor
or
fisttp
cmps
les
ret
push
adc
or
popf
je
or
adc
pop
jbe
js
sbb
or
cmps
unpcklps
push
data16
or
cmp
pop
cld
out
dec
xchg
popa
cmc
mov
mov
sub
lds
dec
dec
xchg
pop
push
xchg
push
shl
cmp
pop
mov
jnp
nop
xor
mov
dec
mov
or
jnp
mov
sub
mov
pop
ret
push
jp
retf
dec
jp
push
or
mov
sub
xchg
xor
sub
jmp
in
stc
xchg
(bad)
inc
sbb
ja
jo
pop
pop
ins
movs
cmps
aad
xchg
rol
jbe
stos
push
(bad)
imul
jge
out
shr
push
xchg
mov
dec
repnz
and
mov
pop
mov
sti
dec
pop
repz
and
push
pop
cmp
scas
(bad)
enter
(bad)
test
cmp
jnp
fist
jge
add
dec
jae
retf
mov
cwde
inc
loop
mov
push
cmp
mov
cwde
ror
repz
mov
xchg
shl
ret
cmp
cmc
(bad)
aas
stos
jae
add
mov
lds
imul
push
pop
movs
test
iret
loop
pusha
inc
retf
(bad)
adc
adc
sbb
shr
mov
lahf
movs
push
mov
dec
sti
(bad)
ss
and
mov
loope
add
retf
movs
aam
add
addr16
shl
std
or
fucom
test
fsubr
enter
cld
jmp
xor
inc
mov
cmp
les
pop
mov
(bad)
ins
ds
and
js
aam
les
arpl
pop
mov
test
clc
rcr
hlt
push
gs
mov
sbb
ds
retf
pop
dec
and
and
ret
lahf
stos
fnstcw
ds
ins
loope
adc
test
sbb
lods
popa
jne
sub
retf
mov
dec
or
jb
repnz
test
and
pushf
jmp
nop
mov
push
ss
adc
cmps
cmp
popa
std
js
mov
jae
push
jge
(bad)
js
movs
inc
int
rcr
inc
xor
cdq
fcmove
push
test
inc
jbe
sub
stos
inc
mov
adc
(bad)
fisttp
or
lock
cmp
sub
cmp
push
sbb
jbe
dec
popf
cmc
out
out
lock
sub
mov
dec
or
dec
and
push
mov
(bad)
jnp
fst
sub
sub
add
cmps
push
and
mov
lock
out
jp
cmps
ror
cmp
aad
int
dec
stc
mov
xchg
pusha
sbb
mov
call
push
inc
(bad)
rcr
(bad)
div
popf
adc
add
xor
xchg
std
mov
not
jg
mov
or
stc
shr
xchg
ret
pop
or
out
inc
dec
mov
shr
ds
mov
jno
cmc
and
xor
and
nop
outs
mov
xchg
xor
jge
enter
pop
pop
es
mov
mov
icebp
push
loope
jp
cmp
test
dec
scas
arpl
push
imul
sbb
comiss
test
das
ror
dec
sub
arpl
add
loope
imul
mov
mov
hlt
fsub
mov
or
loop
mov
fwait
out
mov
push
sbb
push
fwait
ins
fld
int
(bad)
je
loop
cmc
xchg
pop
sbb
mov
jbe
test
or
jne
pop
jl
xchg
jo
or
scas
jp
or
hlt
rol
push
mov
fs
addr16
neg
rol
push
cmp
fild
das
int3
sti
jns
enter
out
sbb
inc
add
(bad)
sbb
iret
jb
xchg
mov
inc
cmp
pop
test
jae
std
enter
mov
mov
cmp
fxrstor
pop
sar
mov
loop
xchg
mov
scas
xchg
mov
push
adc
pushf
jecxz
dec
jmp
popf
aaa
and
push
pop
add
push
xchg
leave
bound
jmp
push
aam
adc
mov
mov
(bad)
sub
int
ror
nop
or
pop
das
mov
call
rcl
adc
ds
and
out
les
es
jnp
xor
shr
dec
pop
push
xor
out
sahf
mov
and
sbb
fistp
leave
retf
pop
cli
xchg
xchg
sbb
and
sub
and
cli
mov
and
cmp
rcl
xchg
mov
stc
shr
lods
xchg
test
jge
leave
retf
nop
rcr
fldenv
mov
pop
enter
push
inc
(bad)
adc
and
dec
lods
stos
push
call
dec
mov
cdq
repz
fbstp
mov
add
cmp
mov
aad
dec
(bad)
fsubr
pop
lahf
aam
push
inc
mov
xchg
out
addr16
mov
f2xm1
nop
dec
xchg
popa
inc
cmp
arpl
inc
pop
push
sbb
adc
(bad)
arpl
hlt
push
shr
push
xchg
add
ret
push
pop
push
pop
aad
mov
jl
js
data16
cmp
ret
xor
mov
std
push
int
sub
pop
nop
sub
je
and
sub
sub
adc
in
inc
bound
cmp
bound
mov
adc
mul
ja
push
in
pop
cld
mov
xchg
push
xor
aam
dec
loopne
xchg
imul
cmp
mov
(bad)
xchg
mov
cli
jecxz
dec
push
mov
ins
sbb
fs
xor
aas
inc
and
ret
call
retf
test
outs
push
xor
fs
inc
and
sbb
les
adc
inc
loop
adc
push
fisubr
adc
call
out
mov
add
xchg
xor
dec
ret
aam
xchg
dec
(bad)
jge
inc
xor
loope
sub
mov
nop
mov
jge
mov
add
push
mov
retf
mov
sbb
popf
jmp
and
mov
sbb
mov
into
jmp
mov
inc
popf
stos
movntq
(bad)
cmp
xor
xchg
loope
adc
xor
pop
pop
sar
mov
movs
rcl
cmps
rcl
addr16
enter
sti
pop
daa
bound
test
in
das
adc
sub
cmp
mov
nop
call
lea
cmps
mov
and
mov
shr
jmp
or
mov
cmps
ds
stc
adc
mov
pop
retf
or
aam
push
sbb
ficomp
arpl
mov
lds
out
xchg
inc
adc
pushf
xchg
test
dec
outs
pushf
mov
cmp
push
in
add
imul
cmp
jecxz
dec
shl
es
lds
jnp
fwait
pop
test
cmps
dec
dec
sete
(bad)
mov
mov
out
repnz
push
ja
das
fucomi
ror
in
xchg
in
int3
into
imul
adc
mov
jb
xor
sbb
sub
hlt
inc
pop
cs
sbb
xor
out
push
lea
clc
pushf
push
iret
push
test
cld
cmps
xchg
scas
test
sub
sbb
dec
pop
hlt
sub
or
retf
pop
and
dec
inc
xchg
cmps
test
aas
sbb
and
pushf
popf
or
push
ror
mov
jecxz
test
iret
cmc
cmc
inc
nop
xor
fwait
xchg
pop
pop
movs
pop
repnz
sub
bnd
and
pop
add
pusha
cmp
or
dec
xchg
mov
out
inc
dec
shl
inc
popf
pop
mov
imul
mov
psrad
and
dec
fmul
stos
fsubr
mov
std
jp
ins
adc
mov
and
aaa
jne
pop
inc
cwde
push
and
cmp
jae
imul
sbb
cwde
pop
stos
fcom
test
add
pop
and
dec
cmp
and
out
add
cdq
xor
add
call
pop
xchg
js
xor
pusha
nop
in
or
xor
push
dec
xchg
jmp
xchg
inc
add
mov
(bad)
rcl
jg
push
cmc
push
mov
push
and
out
dec
xchg
and
adc
test
(bad)
push
fisttp
(bad)
data16
icebp
xor
pusha
icebp
inc
mov
push
mov
addr16
mov
call
popf
leave
bnd
fstp
loopne
xchg
push
or
aam
inc
lahf
push
dec
into
repnz
popf
clc
mov
js
aas
ja
repz
adc
cmc
inc
dec
dec
mov
pop
pop
mov
loop
adc
jmp
fisub
int
mov
or
mov
or
aam
cmp
int
add
sub
ret
pusha
ss
xor
xor
arpl
jb
mov
rol
shr
or
adc
rol
and
jecxz
jge
retf
push
stos
xchg
inc
loop
test
lock
or
dec
xchg
stc
sbb
lods
fcom
lods
in
call
fdivr
sub
bound
cli
jne
or
push
push
mul
ror
or
repnz
stc
inc
int
(bad)
cwde
xor
pop
(bad)
aam
js
aam
into
outs
in
sub
icebp
push
add
out
out
and
js
xchg
push
mov
test
lods
in
sub
inc
sub
retf
into
icebp
loop
jne
push
push
imul
mov
xor
xchg
scas
scas
adc
sbb
sbb
je
jmp
stos
stos
bnd
daa
jbe
cmp
(bad)
mov
mov
xor
ffreep
mov
out
pop
(bad)
push
mov
pop
mov
(bad)
mov
dec
enter
test
cdq
pop
pop
lods
mov
bound
xor
xchg
mov
ret
sbb
aas
movs
sub
data16
xor
bound
aas
sub
pop
jle
sub
addr16
scas
xchg
mov
pop
ficom
(bad)
pop
xor
dec
aam
sbb
das
push
cmp
inc
and
mov
push
sbb
(bad)
aad
cmp
sub
pop
mov
xchg
movs
into
and
lock
jmp
fstp
bound
mov
adc
mov
fisttp
mov
jnp
ds
in
mov
scas
cmp
clc
cmps
push
cld
inc
cmc
sub
mov
cmps
test
fist
push
mov
adc
mov
cmc
cmp
test
addr16
sahf
cdq
jbe
dec
shl
ficom
mov
and
sbb
pop
adc
xor
dec
cmc
call
pusha
cmp
aam
xor
jns
inc
sub
sub
stos
xor
ret
push
xor
pop
mov
lea
std
push
(bad)
cld
test
add
mov
das
xchg
xor
repnz
dec
sbb
popa
jne
cmps
ins
cli
mov
sub
xchg
sbb
imul
jp
xchg
mov
pop
mov
sub
ins
mov
es
in
les
mov
in
add
jmp
sub
dec
in
or
fisubr
pop
leave
inc
xor
or
dec
mov
or
ja
retf
or
das
cmp
xchg
adc
jbe
in
fiadd
mov
sbb
add
jo
add
pop
fild
inc
or
cmp
xchg
mov
dec
dec
mov
xchg
dec
mov
cmp
lsl
out
int3
stos
pop
(bad)
cli
push
xor
ss
jae
and
dec
add
(bad)
cmp
jmp
(bad)
jp
inc
test
inc
xor
inc
xor
push
mov
scas
out
ret
call
ins
xor
inc
pop
push
add
cmp
push
aad
adc
bound
sbb
out
push
ins
mov
out
jmp
push
mov
cld
jmp
adc
fcomip
add
popf
loope
daa
movzx
or
pop
fld
jp
push
fimul
out
or
je
sub
or
and
inc
rcr
jae
sahf
shl
iret
cmp
mov
xchg
or
frstor
cdq
sbb
mov
in
shl
out
aam
lods
jo
push
xchg
sbb
pop
dec
xchg
cmp
test
cmc
arpl
in
xchg
out
push
test
adc
mov
mov
and
jmp
sub
fnstenv
nop
pop
ss
xchg
sub
cmp
push
cmp
and
dec
sbb
lods
jmp
adc
add
inc
daa
outs
in
cmc
mov
int
pminsw
fdiv
fnstcw
in
sbb
test
cmps
leave
pop
cmp
lods
jl
(bad)
dec
xchg
dec
mov
aad
fmulp
xor
pop
out
jns
push
jle
outs
aaa
fidivr
fstp
cmp
mov
or
iret
lods
aad
mov
stc
popf
add
mov
mov
test
inc
inc
dec
inc
and
or
adc
mov
push
xchg
repz
inc
push
dec
retf
mov
test
xchg
(bad)
fcom
xchg
inc
sub
fcom
xor
scas
xor
loop
stos
jmp
adc
out
test
sar
pop
mov
(bad)
lods
dec
jmp
clc
push
jl
shr
jl
and
dec
test
rol
mov
sub
and
pop
lea
push
push
push
out
fld
call
mov
loope
xchg
xor
loop
mov
adc
test
adc
dec
cmps
test
pop
lahf
test
dec
into
add
popa
push
popa
out
aaa
imul
jns
jae
dec
lods
test
test
icebp
hlt
mov
add
push
fwait
push
jbe
xor
jno
iret
les
addr16
jo
enter
mov
test
pop
lods
jge
lods
ficom
and
lods
push
iret
ja
test
sbb
mov
jns
fisttp
add
dec
icebp
jnp
shl
jb
jmp
adc
mov
cmp
stos
jmp
adc
and
inc
fld
fs
jecxz
and
cmps
imul
test
push
fsub
imul
ficomp
test
test
popa
jmp
jno
mov
adc
cmp
add
or
xchg
sub
es
into
pusha
fs
in
es
fld
rcr
add
lds
scas
xchg
push
add
cmc
call
out
add
adc
mov
dec
in
leave
mov
xchg
mov
dec
ror
push
inc
or
stc
mov
outs
mov
aas
cmp
xor
mov
push
daa
push
popf
inc
mov
test
das
or
test
mov
pop
test
pop
retf
mov
cmp
enter
dec
enter
arpl
stc
xchg
dec
sahf
outs
sub
xchg
xlat
arpl
mov
cmps
lods
sub
int
cmp
xor
hlt
mov
data16
inc
mov
inc
dec
loopne
loop
add
lock
repz
mov
mov
int
xchg
fimul
jmp
aam
out
mov
ins
xlat
cmp
push
mov
adc
dec
dec
and
xchg
pop
imul
call
mov
sub
movs
add
mov
dec
test
mov
dec
outs
test
adc
push
or
cmp
lods
(bad)
jecxz
ret
mov
bnd
add
push
or
jbe
das
int
mov
mov
(bad)
mov
lods
(bad)
mov
pop
pushf
sahf
mov
lods
inc
or
xchg
pop
call
jae
cmp
ret
pop
loop
jle
inc
sub
fcomp
mov
pop
xor
(bad)
imul
add
es
outs
sbb
xchg
inc
out
xchg
xor
mov
mov
xchg
popf
dec
push
xchg
xchg
mov
dec
mov
enter
aam
mov
sbb
pop
or
into
xchg
mov
lock
cmp
jnp
mov
stos
into
mov
nop
sar
or
popf
mov
pop
mov
aaa
arpl
jae
pushf
jno
jnp
sub
call
imul
or
xor
loopne
sbb
call
clc
fdiv
and
pop
imul
pop
mov
mov
mov
aad
mov
adc
dec
adc
xor
add
jle
fs
sbb
xchg
jb
jb
adc
dec
dec
or
or
sbb
in
addr16
push
je
dec
jne
mov
mov
pop
dec
lock
cmps
add
cwde
sbb
jb
sahf
xchg
inc
mov
cwde
push
fnstenv
xor
jmp
(bad)
mov
jl
pop
and
mov
cmp
mul
push
sar
scas
bnd
jbe
add
in
arpl
repnz
push
aaa
nop
aam
cmps
and
stos
and
push
mov
lahf
jle
sbb
lock
mov
or
jnp
hlt
call
fadd
jmp
out
cmp
jmp
js
rcl
outs
sub
lea
pop
clc
aam
inc
push
in
clc
mov
xchg
add
mov
jmp
push
pop
sub
stos
sub
mov
inc
ret
je
movs
mov
outs
dec
push
rol
sub
(bad)
inc
mov
inc
add
or
rol
cmc
(bad)
add
mov
jns
(bad)
mov
shl
push
leave
jne
addr16
jge
retf
cmp
retf
int
(bad)
push
daa
sub
int3
push
mov
push
sbb
mov
into
sbb
inc
or
aad
pop
xchg
adc
call
sahf
inc
jno
fistp
cdq
inc
ret
and
cmp
in
sub
cmps
in
test
jnp
jmp
test
inc
outs
mov
jne
xchg
sar
add
imul
inc
sahf
repz
gs
outs
(bad)
mov
and
fucomip
enter
into
ja
lahf
leave
scas
pop
mov
xchg
mov
sbb
fwait
and
and
mov
adc
pusha
ror
(bad)
mov
jmp
pop
clc
or
push
(bad)
jp
js
sbb
adc
jno
xchg
ja
mov
rcr
je
mov
inc
fdiv
repnz
shl
cmps
and
retf
jge
test
bound
ficomp
dec
imul
adc
shl
mov
cwde
mov
cmps
cmp
xor
pop
aad
jne
sub
mov
push
cmp
and
iret
dec
push
in
sbb
mov
int3
push
push
in
int
iret
lods
adc
ins
ins
push
jmp
stc
in
mov
mov
repnz
sub
fild
jge
(bad)
sbb
aas
cmc
or
or
gs
or
dec
cmp
cs
dec
add
lea
mov
aam
add
mov
into
inc
push
cld
pusha
outs
pop
and
fbstp
jae
cld
sub
arpl
cmc
or
rcl
outs
mov
xor
pop
adc
cmp
sub
xchg
leave
icebp
sub
dec
adc
loopne
cmp
hlt
mov
dec
mov
fisttp
pop
jns
repnz
arpl
inc
les
iret
mov
shr
adc
dec
inc
pop
cwde
add
mov
dec
xchg
rol
loopne
sub
fmul
(bad)
fisttp
jno
cmp
sub
inc
jl
imul
mov
sbb
aaa
test
out
mov
sub
popa
cmc
imul
iret
cmp
lock
mov
jae
jo
repz
mov
push
xlat
les
mov
add
imul
pop
test
sbb
mov
std
add
ret
mov
and
add
or
(bad)
lea
add
push
popa
mov
xor
xor
sub
mov
bound
aas
sub
dec
mov
or
push
enter
movs
aaa
cmp
test
cli
adc
xor
ret
push
jge
xchg
sub
loope
pop
and
xor
mov
ins
add
fs
inc
mov
mov
mov
cmp
dec
popa
push
cmps
mov
dec
dec
mov
mov
or
cli
out
fdivr
jae
gs
cmp
mov
mov
add
idiv
xchg
out
or
sbb
ss
mov
xchg
add
xchg
or
sbb
and
es
adc
lods
cs
mov
mov
(bad)
jmp
adc
cld
jle
xlat
mov
inc
sahf
inc
inc
ret
cld
dec
clc
jmp
cmp
retf
or
lds
cmp
inc
mov
xchg
inc
cmp
sub
fbld
nop
enter
rcl
std
(bad)
cmp
and
xor
cmp
dec
(bad)
in
repz
and
jg
mov
jl
inc
jg
pop
xchg
imul
mov
repnz
mov
mov
clc
pushf
ds
aam
adc
push
add
scas
dec
addr16
(bad)
cs
shl
xchg
pop
std
scas
lea
cwde
jo
pushf
sbb
add
push
push
mov
fld
lahf
xchg
mov
pop
mov
div
clc
aad
dec
xchg
cdq
mov
popa
mov
push
push
scas
sbb
aam
pop
inc
push
inc
jl
inc
inc
out
sahf
add
adc
sti
and
call
cmp
xchg
sbb
mov
lods
pop
ficom
out
daa
cmc
sub
push
lods
inc
out
push
inc
adc
cmps
cmc
pop
or
pop
or
adc
repnz
pop
idiv
sub
fimul
xchg
(bad)
not
or
ins
xchg
sbb
and
mov
ins
xchg
adc
push
add
jne
lods
push
fstp
push
xor
popf
retf
jmp
dec
ins
int3
lods
jmp
es
xchg
and
cmp
int
cmp
hlt
retf
push
(bad)
cwde
aaa
mov
pushf
sub
xor
hlt
dec
lahf
pop
inc
pop
sub
movs
jno
es
jmp
jg
inc
cmp
mov
push
lods
xchg
cmps
sbb
dec
xchg
or
mov
ror
add
xchg
xor
fnstsw
mov
outs
fiadd
pop
dec
stos
es
pushf
dec
or
int
icebp
ins
outs
addr16
inc
jae
jae
aaa
outs
jns
movs
(bad)
test
aad
jno
inc
(bad)
cmp
pop
daa
les
out
les
dec
pusha
xor
jmp
mov
shr
sbb
loopne
push
stc
jbe
movs
push
add
inc
pop
call
and
fcomi
call
xlat
jae
das
nop
inc
sbb
out
push
test
inc
ret
adc
mov
xchg
pop
sti
ror
outs
jmp
scas
fsubr
scas
add
lea
ja
movs
cld
xor
jo
inc
std
mul
ins
add
cmps
xor
cwde
sbb
fwait
jle
movs
or
jp
out
add
das
add
addr16
mov
inc
sbb
adc
mov
pop
test
mov
adc
mov
sub
sub
sub
mov
pop
rcr
ins
add
outs
push
jne
xchg
popa
cmp
fsubr
test
shr
cmp
outs
push
imul
je
adc
shr
and
jge
jge
shl
(bad)
xchg
faddp
shl
(bad)
pop
jmp
sbb
push
add
adc
adc
inc
ficomp
dec
mov
ja
mov
sub
imul
dec
xor
cdq
mov
pushf
xor
push
mul
mov
enter
test
jno
xor
lock
sub
shl
xlat
(bad)
xlat
add
cmp
fidivr
lea
xchg
mov
jne
aad
(bad)
mov
arpl
aas
std
aad
xchg
push
sbb
(bad)
pop
inc
dec
sub
aas
jb
cmps
jmp
call
pop
adc
cmp
pop
mov
adc
sbb
sbb
loopne
loopne
lea
jb
cmps
xchg
sub
imul
stos
xor
sub
into
mov
in
jns
clc
mov
imul
mov
test
das
aaa
mov
cmovnp
jmp
mov
movs
arpl
sub
outs
stos
mov
cs
call
mov
mov
fdivr
jmp
cwde
pusha
xchg
loopne
out
add
outs
xor
cmp
dec
sub
push
mov
sbb
nop
bound
mov
mov
mov
dec
push
pop
dec
rcl
imul
mov
loop
lock
stos
pop
mov
adc
gs
cmp
jge
mov
mov
inc
rcr
(bad)
les
in
xlat
xor
mov
pop
cli
out
adc
mov
jo
cmp
push
rcl
sahf
xchg
add
aaa
push
pop
stos
movs
aam
inc
mov
adc
into
repnz
cmps
scas
and
js
cmp
das
xor
stc
push
movs
clc
in
(bad)
in
icebp
adc
pop
mov
inc
fmul
rol
loopne
popa
xor
movs
cli
jne
out
jmp
and
data16
mov
cmp
or
jmp
cmp
cmps
xchg
je
or
inc
cmc
mov
lea
out
pop
aad
mov
mov
stc
mov
pop
xchg
add
dec
cmp
push
int3
retf
mov
es
das
and
inc
mov
pop
cmp
fdivr
dec
aas
fsub
add
adc
cwde
mov
mov
pusha
pop
pop
pusha
loope
pop
cs
lea
dec
retf
mov
push
mov
movs
xlat
adc
lods
mov
add
jbe
std
push
adc
cmp
xchg
inc
add
xor
cmp
leave
mov
xchg
clc
cld
mov
push
cmp
xchg
add
jns
add
mov
leave
and
ret
adc
mov
fstp
and
in
xchg
add
ja
stos
dec
inc
dec
push
lods
pusha
mov
inc
jb
xor
cwde
(bad)
iret
sub
mov
idiv
fmul
pop
push
push
or
out
sbb
aas
ins
into
jnp
stos
cld
xor
jae
add
(bad)
sbb
or
jb
sub
fild
sbb
imul
fsub
fldcw
dec
hlt
inc
inc
sbb
jnp
inc
call
sbb
enter
mov
clc
or
or
jae
mov
stos
mov
(bad)
sar
jmp
lea
sub
mov
aad
mov
xor
ror
sub
or
jmp
xor
lock
dec
das
push
call
push
iret
mov
daa
add
popa
and
clc
sub
cmp
push
in
inc
xchg
test
xor
bound
fadd
xchg
fsub
out
cmc
in
imul
cmps
or
sti
in
xchg
ss
mov
adc
fistp
inc
mov
test
xchg
xchg
xchg
cld
test
sub
sub
sub
mov
xlat
add
std
or
popa
cmp
mov
or
ret
bound
xchg
sbb
add
sbb
bound
aam
inc
xor
add
iret
test
mov
pop
test
into
xor
dec
push
and
(bad)
loop
fstp
jg
or
xchg
fdiv
mov
mul
mov
movs
or
jl
cwde
lea
mov
xor
push
xlat
push
pop
out
outs
adc
retf
or
loop
aad
(bad)
pop
jmp
push
enter
out
std
mov
int
test
lea
mov
and
inc
xchg
test
test
adc
cmps
and
out
push
inc
mov
popa
daa
pushf
scas
xor
jmp
mov
adc
mov
mov
loope
es
in
sub
dec
popa
add
jb
jo
fimul
retf
dec
sbb
(bad)
in
sbb
dec
lock
push
daa
call
sar
dec
push
jmp
in
and
cs
push
or
pop
xchg
jbe
adc
sub
fimul
push
stos
gs
jg
jmp
cmp
fmulp
mov
jbe
xchg
adc
das
jb
shl
jmp
fdiv
and
inc
mov
lock
jg
and
cwde
imul
ins
jmp
loop
pop
dec
add
and
popa
inc
jbe
sbb
pop
pop
adc
pop
repnz
lods
inc
stos
sub
leave
mov
fs
mov
repz
(bad)
cwde
jmp
and
or
popf
xchg
xor
dec
mov
ins
dec
pop
adc
lock
fistp
dec
jmp
xor
icebp
stos
repnz
cmp
dec
repz
rcr
outs
ins
or
xchg
neg
and
or
push
adc
adc
push
mov
mov
pop
shl
mov
out
call
cmp
cmp
ins
and
retf
cs
adc
in
xor
stos
and
lea
jp
sub
xor
or
arpl
push
push
mov
(bad)
lods
lahf
cmp
mov
adc
pop
dec
add
push
out
xor
and
mov
pushfw
lahf
mov
call
lods
dec
cwde
xor
jb
or
(bad)
push
sbb
in
rol
loope
es
in
sti
jmp
cmp
(bad)
add
ret
test
stc
sub
xor
xchg
js
mov
enter
(bad)
stos
leave
sub
xchg
gs
jo
pop
inc
stos
inc
loope
mov
int3
test
jns
xchg
cdq
pusha
cmp
outs
xchg
push
mov
out
add
imul
hlt
sbb
pop
shl
movs
ret
push
jp
fwait
inc
cmc
mov
cwde
sbb
cdq
cmp
ret
jle
push
hlt
mov
adc
sbb
inc
push
mov
(bad)
adc
sbb
in
and
push
pusha
xor
add
popw
outs
mov
bswap
(bad)
xor
mov
fs
in
(bad)
fs
mov
adc
neg
sub
push
xchg
addr16
call
ss
sub
fild
and
inc
scas
daa
and
mov
xchg
xlat
xor
sbb
dec
push
outs
adc
repnz
aad
push
jl
outs
mov
bound
push
mov
bnd
cdq
pop
mov
push
xor
push
daa
out
xor
add
sbb
(bad)
xor
fisub
sbb
scas
mov
add
xor
push
ins
jl
push
dec
or
lea
push
and
jmp
push
lods
push
ss
and
mov
ds
jns
jae
fwait
out
ja
mov
xor
out
xchg
fidiv
add
adc
pop
sbb
mov
mov
mov
inc
inc
jle
out
xor
mov
or
adc
cmp
icebp
push
loop
ds
gs
mov
dec
(bad)
dec
pusha
sahf
xchg
jecxz
xor
mov
fisttp
stos
dec
ret
xchg
mov
hlt
popf
mov
and
ret
xor
sub
and
inc
push
adc
pop
fucomp
cs
mov
or
push
repnz
mov
jo
in
dec
ss
push
adc
jle
add
icebp
sti
mov
or
rol
cmp
push
out
outs
in
fstp
int
sub
push
cdq
fsub
stos
hlt
shr
and
leave
and
inc
push
push
push
xchg
aaa
and
jbe
or
hlt
mov
sbb
shl
jl
scas
pop
jnp
cmp
mov
pop
sbb
out
iret
pop
mul
and
xchg
movs
mov
movs
stc
aaa
out
add
mov
ins
sbb
ss
popa
es
mov
aas
adc
fidivr
and
sar
push
add
outs
sub
cmps
cmp
ins
scas
lahf
dec
cmp
mov
add
mov
jle
stos
adc
stos
lahf
pop
pop
dec
or
mov
mov
popf
add
mov
adc
aaa
sub
mov
cmps
lock
mov
loop
nop
xor
pop
sti
dec
jo
xchg
xchg
cdq
mov
mov
js
pop
inc
outs
pop
out
push
mov
push
jns
addr16
add
inc
in
ret
addr16
fild
push
call
sub
lods
cmc
fst
(bad)
and
retf
xchg
mul
sbb
adc
or
adc
in
pop
repnz
(bad)
mul
xchg
or
dec
mov
repz
test
xor
jb
or
inc
in
outs
sub
push
loopne
outs
imul
mov
and
adc
and
lds
add
mov
adc
jns
repnz
pop
aam
dec
sbb
mov
loopne
mov
push
mov
xchg
xor
test
jne
jmp
mov
dec
out
jno
xor
stos
xchg
imul
xor
lahf
pushf
or
es
jl
(bad)
ss
sahf
outs
sahf
sbb
adc
enter
pop
mov
xor
repz
sub
cmp
cmps
hlt
or
jecxz
aam
cmp
outs
adc
shl
jns
sub
aaa
test
mov
inc
sbb
in
in
xchg
or
push
cli
adc
xchg
jbe
jecxz
add
sar
pop
call
(bad)
outs
nop
jmp
popf
in
fiadd
adc
pushf
jb
push
es
mov
cs
dec
push
and
test
pop
xor
retf
fs
or
fdivr
leave
or
icebp
adc
repz
sbb
push
pushf
inc
pop
adc
std
inc
pushf
jb
fdiv
xor
dec
cmp
push
xchg
das
pop
pop
mov
sbb
and
mov
in
cmp
pop
inc
sti
pusha
jl
ror
adc
push
pusha
sbb
mov
rcr
mov
pop
call
js
or
aad
into
in
sub
cmp
ror
push
loope
scas
jle
mov
dec
push
inc
or
xchg
and
or
(bad)
add
jmp
neg
mov
jle
sbb
mov
jns
mov
shl
daa
dec
mov
loopne
(bad)
add
add
pop
sub
or
pop
(bad)
shl
fs
sti
int3
pop
adc
cmps
sub
stos
xor
lahf
add
imul
jl
dec
mov
lods
mov
retfw
xchg
add
mov
adc
std
jb
fild
outs
jae
(bad)
xor
jl
xor
neg
out
dec
arpl
and
dec
inc
cmp
mov
imul
and
mov
fdivp
rcr
in
adc
lock
push
mov
(bad)
retf
push
stos
addr16
adc
call
pusha
das
dec
pop
sbb
xchg
test
leave
in
inc
test
add
inc
xlat
jmp
(bad)
das
and
push
pop
test
pop
stos
pop
jo
outs
je
push
popa
shr
sbb
in
mov
mov
push
scas
iret
ficom
add
mov
fs
cmps
adc
lea
shl
mov
mov
movs
mov
not
mov
test
xchg
cmp
out
addr16
xchg
dec
rcr
ret
cmps
sar
dec
mov
xchg
mov
xchg
mov
pop
in
(bad)
std
xchg
xchg
clc
pop
sbb
push
pop
add
mov
cmp
xor
mov
ret
push
add
ret
cld
xor
lahf
ret
sub
xchg
lea
mov
adc
(bad)
stos
std
pop
xchg
jbe
jbe
mov
adc
xchg
add
pop
lods
sub
test
cmc
cs
dec
add
jb
retf
sbb
cmp
je
inc
fsubr
arpl
mov
sub
test
fidivr
(bad)
lods
or
sub
adc
jecxz
sahf
pop
jns
mov
pop
fstp
ret
retf
adc
and
je
(bad)
int
(bad)
sbb
xchg
shl
rcr
popa
and
sar
inc
cmps
push
pop
inc
xchg
jne
pop
jmp
push
retf
test
repz
test
push
rcr
or
sub
push
xchg
sahf
xor
jp
pop
stos
adc
aaa
fstp
pop
or
mov
lds
mov
and
pusha
ja
ficomp
in
cmp
jbe
loop
fwait
hlt
mov
sbb
xchg
mov
mov
in
cmp
in
pop
loopne
retf
stos
push
and
xlat
aas
loopne
call
out
(bad)
gs
clc
(bad)
fistp
push
xchg
div
or
inc
cmp
add
pcmpeqd
loope
and
xor
dec
fwait
(bad)
mov
inc
push
daa
mov
mov
imul
cwde
movs
cs
out
add
mov
or
inc
xor
std
mov
sub
adc
or
aad
dec
inc
mov
xchg
aad
mov
sub
std
lods
stos
repz
mov
xor
and
xlat
xchg
(bad)
cmp
mov
sti
dec
cmps
inc
mov
cmp
adc
xor
(bad)
adc
xchg
add
pop
pop
xchg
adc
or
mov
pushw
xor
mov
and
push
mov
or
aas
mov
push
gs
int3
clc
add
add
adc
xor
in
push
sbb
cmps
mov
xor
out
aaa
xor
sub
retf
movs
inc
stos
xchg
fisttp
fdivr
xor
jge
xlat
mov
and
and
inc
ins
dec
xchg
add
xor
fstp
dec
addr16
jne
mov
and
jmp
mov
mov
rol
pop
ins
retf
push
int3
in
popa
jb
dec
ins
dec
mov
or
push
add
mov
adc
push
xor
in
jae
scas
dec
mov
cmp
add
cdq
cmc
pop
mov
mov
maskmovq
neg
jns
adc
push
call
das
adc
aam
inc
push
pop
les
mov
jae
pushf
lods
sbb
lock
push
xchg
aad
fdivrp
jbe
out
pop
xchg
push
and
mov
add
retf
mov
bound
fwait
je
jns
nop
lods
xchg
adc
jb
mov
pop
repnz
add
rol
xor
fcmovne
sbb
cmp
loopne
pop
les
xchg
int3
cmp
dec
repnz
mov
loopne
stos
gs
popf
fldenv
psrlw
mov
ret
ds
and
xor
test
es
add
ja
stos
sub
(bad)
repz
icebp
ja
ficomp
pop
in
xchg
js
xor
stos
lods
add
sub
xlat
in
ret
mov
sar
and
xor
xchg
clc
movs
int
mov
les
(bad)
inc
mov
(bad)
pop
repz
ror
mov
add
pop
xchg
dec
daa
aam
iret
aad
adc
(bad)
cdq
movs
xchg
and
and
test
fldcw
xlat
cmp
inc
les
cs
je
test
mov
mov
push
jg
jle
cmp
aaa
sbb
hlt
cld
push
imul
retf
addr16
mov
in
popf
or
pop
add
inc
or
das
aas
ret
xor
or
xchg
jmp
(bad)
xchg
daa
paddusb
fdivrp
sbb
(bad)
mov
push
pop
jo
mov
push
retf
hlt
xchg
fistp
adc
mov
pop
les
enter
stos
ins
push
jne
lods
in
xchg
lock
int
out
in
mov
cwde
or
scas
and
pop
stos
dec
jne
xchg
mov
sub
bound
shl
(bad)
shl
mov
cmc
stos
add
xchg
pop
jae
ss
gs
xchg
fwait
mov
adc
xchg
or
test
pop
jmp
enter
ins
xchg
stos
mov
pop
adc
mov
das
push
sbb
push
mov
fxch
mov
sub
ins
sub
bound
test
sar
rol
lods
pop
stos
fisub
test
jb
xchg
and
sahf
mov
sti
mov
xchg
xor
jge
inc
retf
sbb
xchg
cmp
pop
inc
lock
or
fldenv
xchg
(bad)
or
push
shr
pop
int
gs
enter
cmc
in
fld
data16
mov
cmp
inc
jmp
xor
mov
sub
ss
mov
mov
xor
jmp
mov
retf
outs
push
dec
cmp
mov
and
mov
dec
int3
xor
mov
fimul
push
(bad)
add
jae
mov
loopne
adc
outs
jl
pop
mov
aas
enter
push
(bad)
hlt
dec
xor
fisttp
fwait
sbb
mov
sti
iret
nop
cmp
fnsave
add
push
mov
mov
les
jp
sbb
xor
ret
inc
stos
ins
and
data16
xor
sub
push
cmp
pop
cld
add
clc
shr
pop
imul
scas
pop
pop
daa
loop
hlt
jmp
pop
ds
dec
je
and
mov
xchg
fs
(bad)
and
test
sbb
cli
(bad)
xchg
jb
jp
mov
xlat
mov
fs
push
push
ret
mov
cli
aad
xor
push
ss
mov
jne
stos
inc
adc
sbb
and
(bad)
sahf
es
mov
mov
fs
dec
jb
mov
aaa
push
sub
xchg
std
mov
push
sub
enter
ins
lock
sbb
mov
cmps
add
lods
(bad)
std
mov
out
data16
add
lods
cmp
out
add
inc
mov
mov
sbb
test
cdq
jl
jae
adc
mov
mov
cdq
call
mov
or
xor
mov
scas
lea
xchg
add
test
stc
(bad)
push
sahf
movs
or
gs
xor
xchg
jns
mov
jl
int
cmc
lods
and
add
daa
cli
loop
nop
fnstsw
push
sub
into
imul
stos
xchg
push
adc
(bad)
icebp
mov
(bad)
or
push
scas
imul
cli
sbb
ror
and
inc
fsub
sbb
xchg
jge
mov
adc
fwait
or
inc
pop
(bad)
xor
jmp
mov
out
retf
sub
shl
push
or
retf
test
(bad)
add
mov
or
adc
mov
inc
(bad)
cmc
mov
add
gs
repz
aam
inc
popa
or
movs
or
repz
jbe
mov
jp
test
add
ja
aam
dec
mov
push
rcl
cld
out
jae
push
mov
pop
lea
jp
sbb
jge
xchg
xchg
xchg
fld
xor
neg
cmp
call
(bad)
fwait
and
dec
idiv
sbb
neg
popa
cli
jg
pop
les
pop
(bad)
dec
pop
mov
aad
scas
sbb
mul
mov
shl
xor
sbb
dec
xor
adc
jp
and
into
(bad)
cmps
sbb
test
jo
xchg
push
push
fldcw
and
mov
into
dec
imul
jge
fisttp
and
xchg
dec
pop
lods
lock
mov
stc
jecxz
nop
and
mov
add
xchg
inc
jno
xlat
mov
mov
jmp
mov
mov
scas
mov
xor
mov
gs
dec
pop
dec
fsubr
or
sub
xchg
imul
das
movs
in
fild
std
jmp
pop
mov
in
push
sbb
into
or
push
push
jmp
data16
xchg
xchg
mov
ficomp
adc
jns
ficomp
aaa
dec
pop
sub
adc
jl
inc
or
pop
and
sub
adc
or
das
int3
clc
(bad)
push
psubd
out
fwait
test
sub
xor
pop
das
test
jns
xchg
mov
jnp
ja
push
repz
in
jmp
mov
stos
and
pop
push
push
add
adc
push
jno
adc
mov
fcmovnu
mov
mov
adc
ret
jecxz
xchg
pushf
(bad)
push
loope
cmp
sahf
mov
pop
sub
jmp
adc
cmc
mov
cmps
mov
xor
or
mov
fidiv
adc
pusha
in
movs
sbb
ins
jbe
call
xchg
cwde
add
push
push
xor
sub
sbb
fiadd
mov
mov
fld
mov
pop
sbb
cdq
xchg
fst
mov
push
add
jmp
xor
xchg
and
and
jmp
push
scas
psllw
jg
(bad)
jns
pop
dec
jae
fs
xor
cmp
pop
or
imul
shl
fs
mov
jns
(bad)
or
adc
imul
iret
rep
mov
cmp
add
js
(bad)
jle
stos
aas
jae
inc
out
add
movs
pop
push
jns
ret
adc
pop
ja
inc
lahf
scas
lods
shr
sti
fcomp
xor
fistp
pushf
inc
aas
mov
mov
mov
in
popf
cmp
mov
pop
fcmovnbe
sbb
pop
mov
pusha
cwde
mov
test
or
clc
jmp
add
icebp
mov
adc
xchg
movs
mov
pop
pop
loop
or
jge
add
ds
and
push
sub
je
and
mov
push
push
jb
sub
and
lods
jae
mov
dec
mov
(bad)
test
dec
fwait
or
mov
jp
cwde
in
movs
nop
push
jp
pop
add
push
push
mov
out
imul
imul
xor
pop
inc
cmp
mov
frstor
sahf
iret
in
sbb
in
retf
loope
sbb
mov
movs
fbstp
lods
imul
jb
stc
pop
hlt
mov
lea
ret
push
xlat
popf
dec
mov
enter
int3
sub
iret
xchg
imul
cmp
and
fwait
hlt
push
fyl2xp1
mov
pusha
jmp
push
fwait
pop
ja
cmc
push
or
fwait
sub
jp
xchg
bnd
(bad)
aad
adc
inc
mov
mov
pusha
push
(bad)
outs
mov
inc
jnp
cmc
inc
inc
dec
call
adc
mov
add
gs
pop
ja
stc
jl
push
push
(bad)
push
mov
jns
ficomp
jmp
iret
add
stos
ins
icebp
in
add
je
mov
xlat
mov
sub
xchg
or
jmp
mov
pop
scas
sub
(bad)
ss
lds
push
mov
out
cmp
inc
push
mov
idiv
pop
jmp
pop
(bad)
pop
call
inc
mul
mov
cmp
mov
ds
shl
adc
(bad)
bound
daa
and
mov
test
mov
inc
std
out
mul
clc
xlat
(bad)
fidivr
stc
and
or
dec
leave
dec
mov
pop
mov
das
pop
or
lods
xor
ror
scas
pop
(bad)
fistp
int3
in
xchg
cld
call
xchg
aaa
or
inc
pop
jmp
lea
mov
cs
iret
inc
mov
sbb
icebp
or
lea
dec
sub
pop
dec
jmp
or
mov
adc
dec
fwait
dec
das
fwait
jge
cmp
movs
sbb
and
jo
data16
out
aas
rcr
in
mov
shr
xchg
es
jbe
out
ror
dec
push
sbb
cmp
xor
sbb
mov
int3
push
mov
sub
jno
fwait
push
imul
jle
rol
jnp
adc
mov
cmp
fmul
sub
sbb
inc
sub
xor
outs
or
ror
xchg
mov
inc
cmp
cmc
stos
aad
xor
mov
aas
sar
xor
fdiv
rcr
outs
mov
(bad)
pop
(bad)
fs
mov
fwait
dec
int3
sbb
movs
in
adc
xchg
movs
push
sub
test
(bad)
cld
sbb
(bad)
inc
arpl
int
retf
fnstcw
and
mov
aam
sbb
into
outs
(bad)
imul
jo
pop
data16
js
sahf
mov
xchg
xchg
push
popf
xchg
test
fld
sbb
pop
inc
in
pop
mov
adc
cmp
sub
ja
aas
inc
inc
es
pop
push
push
add
xchg
mov
sbb
in
daa
push
out
xchg
adc
aad
add
in
or
div
pop
cmps
aad
push
mov
nop
mov
push
or
retf
sbb
test
sbb
outs
ret
xchg
clc
inc
lods
call
imul
jl
jl
imul
adc
scas
xchg
xchg
xor
cmps
mov
push
pop
ins
unpcklps
movs
and
jae
fisttp
dec
dec
add
imul
dec
mov
int
jmp
test
mov
or
mov
in
sub
or
out
pop
jmp
adc
dec
add
lea
jp
push
dec
call
loope
movs
shl
out
mov
fcom
out
and
pop
xchg
xor
mov
adc
xor
mov
cmp
sub
or
mov
(bad)
mov
imul
ins
cmp
gs
ds
enter
jo
xchg
or
jp
fisub
jno
add
stc
dec
pop
data16
xchg
cmp
xor
into
(bad)
and
clc
ins
cmps
or
test
xor
sar
sub
js
mov
xlat
add
(bad)
jns
aam
xor
lea
xchg
lea
test
cmp
das
sti
int3
test
lods
sti
adc
in
fst
sbb
aad
int
in
dec
or
mov
pushf
xchg
int3
mov
ins
xchg
pop
aas
adc
shl
imul
out
sub
add
daa
cwde
xchg
cmp
sahf
mov
call
pop
in
mov
cmc
xchg
jecxz
or
(bad)
and
lea
or
jle
cdq
pop
jp
push
add
int3
cmps
js
js
mov
sbb
sbb
retf
mov
adc
jae
adc
nop
or
xor
clc
sahf
into
(bad)
sti
retf
mov
leave
leave
outs
stos
adc
loope
out
pop
cs
ins
jne
rcr
sbb
into
xchg
inc
cli
jbe
pop
adc
imul
movs
fisub
sub
out
dec
sbb
outs
xor
inc
pop
(bad)
mov
cli
push
and
scas
rcl
lds
dec
es
mov
pop
popa
xor
mov
cmp
sbb
(bad)
push
or
ins
mov
or
xchg
mov
dec
mov
daa
aam
aas
lahf
mov
gs
jo
cmp
dec
jmp
cs
mov
daa
shl
cli
sbb
in
push
push
mov
adc
add
outs
adc
and
lea
jne
adc
mov
mov
data16
mov
jge
movs
adc
dec
shl
or
arpl
sahf
mov
xchg
in
mov
pusha
pop
aaa
mov
clc
pushf
ds
(bad)
push
(bad)
fisubr
pop
push
jg
enter
mov
jmp
call
retf
out
into
lods
or
push
cs
fnstcw
test
out
xchg
mov
js
jne
mov
jmp
in
adc
inc
cmps
lahf
dec
jb
lods
mov
and
arpl
repnz
out
jae
outs
mov
push
mov
int
mov
lods
test
in
sbb
sbb
and
aas
jne
xor
add
dec
jle
and
push
or
ds
jecxz
ins
ins
popf
push
push
loope
push
mov
mov
adc
out
push
xchg
jns
inc
pop
arpl
mov
jg
movs
or
shl
mov
jnp
repz
add
pop
ins
loopne
mov
xchg
inc
add
dec
mov
fist
jno
push
adc
adc
ret
sbb
and
retf
xor
popf
js
stos
(bad)
sub
bound
retf
ret
mov
clc
inc
inc
dec
or
lods
test
mov
inc
inc
sub
mov
ss
lahf
push
mov
ins
jle
in
pop
or
mov
xchg
push
mov
repnz
fwait
outs
inc
sub
add
pop
cmc
(bad)
int3
stos
mov
les
lods
aam
iret
mov
and
das
sub
pop
into
push
ins
repz
push
sbb
pop
push
jecxz
lods
sub
xor
lods
in
nop
push
call
push
imul
popa
xchg
jmp
out
cmp
data16
cmp
stos
jge
movs
lods
mov
mov
pop
dec
outs
scas
lods
mov
mov
das
pop
adc
rcr
inc
mov
(bad)
div
jl
cwde
(bad)
stc
and
arpl
xor
mov
jnp
pop
dec
retf
int
sbb
xor
popa
cmp
loopne
xor
or
sbb
aas
adc
mov
and
xchg
mov
mov
fwait
xchg
andps
mov
pop
mov
ins
sahf
outs
dec
call
mov
hlt
call
fs
aad
les
rcl
or
cwde
push
mov
mov
adc
call
fnstsw
or
fnsave
mov
idiv
cwde
and
xchg
push
mov
test
scas
das
data16
sub
pop
dec
and
sub
sbb
add
add
inc
cmp
sub
jb
retf
and
test
cmp
or
dec
cmp
out
(bad)
jno
aas
cmp
inc
dec
cmp
mov
mov
xchg
mov
sar
(bad)
pop
sub
jmp
xchg
test
lock
or
call
hlt
add
es
xchg
fsubp
inc
pop
(bad)
movs
or
aad
inc
add
shl
or
sti
retf
push
movs
aaa
pusha
cmp
clc
jle
xlat
mov
mov
jmp
std
cmp
push
cmp
sbb
or
movs
push
loop
xor
add
mov
jbe
push
mov
data16
les
add
cli
pop
rcr
xchg
std
aad
sbb
rcl
test
push
lods
cmp
scas
lods
cmps
adc
jmp
pop
or
cmp
pop
mov
pop
push
pop
gs
push
mov
out
pop
lds
popa
mov
outs
add
mov
cmp
push
gs
test
xor
xor
push
and
imul
cli
or
(bad)
sar
sti
xchg
outs
pop
dec
xchg
push
jmp
xchg
inc
push
mov
inc
cmp
in
mov
jae
jno
fdivr
sar
sahf
enter
scas
mov
mov
push
sub
jns
in
jne
or
mov
iret
shl
aam
mov
jb
enter
fbstp
jbe
or
cmp
sbb
arpl
cld
retf
jle
pop
mov
loopne
scas
es
out
mul
pop
sar
fisubr
sub
stos
sub
fsubr
in
in
pusha
push
out
push
and
add
push
or
repnz
lea
pop
lahf
push
lods
xor
push
pop
pop
vmovss
push
(bad)
cmps
das
sbb
or
cmp
jae
sahf
std
sbb
sti
mov
add
das
(bad)
mov
xchg
and
icebp
mov
push
xlat
pop
cmps
out
sub
dec
or
or
adc
inc
sbb
pop
call
push
mov
setl
or
lods
test
aas
rcl
xchg
and
pop
inc
sar
clc
gs
push
jmp
mov
inc
cmp
push
cmps
xor
gs
aad
iret
aaa
xor
pop
sar
outs
sbb
and
mov
sub
fcom
mov
pop
scas
xor
push
ss
imul
mov
es
sub
mov
leave
cmp
dec
adc
inc
mov
sbb
mov
lds
and
(bad)
out
cmp
stos
ja
loopne
lea
arpl
inc
pop
mov
dec
call
cmps
sbb
dec
inc
scas
shl
movs
push
fwait
mov
cmp
cmp
xlat
inc
cmc
adc
mov
repnz
mov
call
shl
retf
jae
fucom
scas
aam
and
mov
je
adc
or
or
pop
or
add
mov
std
sub
out
add
xor
in
xchg
cs
into
add
sbb
dec
pushf
jp
mov
(bad)
popf
lods
push
(bad)
clc
lods
shr
pop
jmp
sub
std
jecxz
fidiv
cmps
add
lahf
inc
div
clc
jg
lods
push
rol
xchg
neg
pop
lea
mov
cs
lock
in
mov
out
xchg
pop
pop
xor
mov
jle
and
mov
cmp
scas
fsub
mov
jo
sbb
and
xchg
push
fstp
cld
add
jl
enter
movzx
int3
lea
pusha
iret
fisubr
inc
jg
shl
ret
sub
adc
xlat
push
cmps
mov
ja
rcr
clc
ret
cmps
fmul
in
int3
cmp
jne
fucomi
not
in
std
stos
add
outs
mov
clc
jnp
stos
add
or
sti
imul
mov
push
sbb
mov
fistp
mov
dec
mov
push
add
push
pop
xor
and
retf
cmp
outs
scas
push
cvttps2pi
mov
jecxz
ret
jb
scas
mov
call
jo
jns
jle
out
lods
sar
mov
fwait
push
loope
repnz
push
bound
movs
lods
pop
icebp
int
jge
in
or
push
shl
sbb
xchg
fldcw
xchg
je
xor
int3
cmp
inc
or
movs
test
std
xchg
ret
jo
sbb
sti
pop
lahf
pop
test
inc
lahf
int3
jmp
mov
mov
xchg
jl
push
jbe
fsub
pop
or
mov
cld
mov
sbb
pop
stc
dec
jl
xchg
lahf
or
jno
fistp
jne
or
(bad)
dec
(bad)
rcl
sahf
stos
stos
fstp
cmp
sar
imul
mov
mov
dec
mov
in
xchg
aad
clc
or
ins
fld
imul
mov
into
clc
iret
ins
(bad)
daa
push
cmps
xor
cmp
mov
cdq
dec
cld
test
imul
fadd
mov
cmp
shr
mov
rol
or
stc
cmp
les
xlat
jns
and
cmc
cmc
cdq
fs
ss
fst
stos
sub
out
adc
pusha
jbe
call
add
cld
call
jl
bswap
movs
or
jmp
or
lods
fild
xor
mov
jecxz
out
clc
dec
or
mov
arpl
ret
push
mov
cmp
in
dec
cmp
and
mov
push
dec
xchg
sahf
loopne
mov
add
scas
sbb
shl
adc
sub
stos
(bad)
leave
hlt
or
js
mov
pop
cwde
(bad)
xor
in
ins
xor
mov
and
xor
(bad)
fsub
in
dec
addps
pushf
in
aaa
dec
cs
gs
cmps
or
daa
jno
cli
and
mov
adc
mov
sar
xor
jmp
sbb
std
jp
shr
mov
rol
ds
bnd
call
std
dec
mov
das
xchg
add
mov
mov
movs
dec
sub
adc
mov
pop
(bad)
add
xchg
cmp
cmps
xor
mov
mov
data16
idiv
push
add
add
push
aad
adc
jmp
sbb
adc
test
pop
push
std
pop
and
test
js
mov
fwait
repnz
adc
(bad)
jno
mov
add
xor
out
dec
mov
gs
(bad)
sti
nop
sub
(bad)
out
adc
push
mov
dec
sub
dec
mov
imul
adc
adc
loop
(bad)
push
pusha
xchg
jmp
out
test
(bad)
repnz
jae
sub
pushf
xchg
stos
and
int3
call
cmp
lea
mov
ror
dec
cmp
inc
jg
pop
inc
xor
clc
push
in
stos
push
outs
inc
movs
inc
pop
sub
xchg
cmp
int3
cmp
sbb
push
popf
mov
sub
xchg
mov
retf
push
(bad)
in
xor
mov
or
jg
sbb
xchg
push
jae
je
xchg
enter
(bad)
mov
xor
cmps
mov
inc
sub
inc
dec
mov
lahf
loopne
std
test
jmp
mov
fsincos
mov
ficomp
adc
mov
dec
in
imul
mov
add
shr
(bad)
push
inc
xchg
gs
sbb
arpl
(bad)
mov
or
int
dec
stos
call
cmp
popf
or
xchg
pop
dec
movs
xor
arpl
jo
icebp
stos
ret
rol
arpl
cli
int3
ins
cwde
rcr
les
test
retf
test
test
std
sbb
lods
xor
data16
mul
cmps
mov
adc
xchg
pop
push
fisub
inc
add
xchg
out
test
aad
lods
shl
out
mov
or
neg
je
jmp
(bad)
sbb
sbb
lea
push
popa
mov
retf
mov
es
jb
xchg
cdq
adc
and
add
mov
in
mov
cmp
add
add
stos
fwait
les
stc
xchg
jmp
aad
scas
xchg
rcr
lock
pop
inc
ret
or
mov
mov
xchg
jno
call
mov
test
xchg
movs
paddusw
pop
mov
cmps
retw
mov
and
mov
cld
ds
ficom
sbb
sbb
fmul
mov
sub
nop
jp
out
cmovg
int
into
loopne
push
loop
push
mov
shl
push
sbb
cli
inc
(bad)
cld
sub
mov
jp
jl
hlt
push
fidiv
dec
popf
mov
fbstp
jp
cmp
sub
add
shl
pop
movs
add
xor
jno
jb
jl
js
mov
adc
cmp
in
lea
outs
rol
jae
sbb
retf
mov
or
(bad)
cs
add
xchg
retf
lahf
sahf
sub
stos
inc
adc
repz
add
outs
and
push
repz
fbstp
inc
icebp
push
into
and
movups
enter
test
aaa
popa
icebp
push
retf
data16
sti
pop
aam
dec
sahf
sahf
lock
loopne
inc
leave
and
add
adc
sti
mov
(bad)
aaa
aaa
in
aam
out
push
retf
scas
in
ficomp
repnz
sbb
dec
sbb
scas
les
cmovl
fcom
pop
arpl
jge
lods
retf
(bad)
cmp
push
push
popf
shl
mov
(bad)
daa
mov
lahf
cs
jg
pop
push
lahf
out
stos
in
add
rol
iret
scas
in
outs
arpl
jmp
adc
adc
mov
mov
xor
inc
repz
xor
adc
pop
add
out
fild
enter
dec
test
stc
loope
jmp
das
cwde
xor
fwait
push
movs
push
mov
or
cdq
fisubr
fcom
inc
inc
jge
lea
ret
dec
inc
lea
fcom
or
iret
jmp
rol
inc
(bad)
sbb
aaa
cwde
or
shr
add
pop
mov
mov
pop
push
push
int
xchg
aaa
sub
hlt
xor
mov
es
jl
(bad)
repz
sahf
mov
rol
inc
(bad)
dec
jl
pop
xchg
pop
lahf
push
jo
dec
lds
jmp
cmp
dec
cmc
pop
cmc
enter
pop
push
add
jecxz
sbb
loop
pop
div
sbb
add
in
(bad)
lds
mov
pop
jecxz
ret
inc
pmulhuw
mov
in
xor
jmp
mov
pushf
sar
dec
adc
jo
pop
cmp
mov
and
es
pop
addr16
ins
mov
cmp
pop
pop
scas
cld
rol
sbb
xchg
xchg
out
out
jl
das
dec
jle
cmp
or
sub
cmps
jmp
inc
cli
inc
movs
test
push
dec
and
(bad)
mov
fdiv
fidiv
xchg
fist
(bad)
ficom
stc
mov
test
shr
out
das
adc
xor
jmp
or
sub
sub
inc
push
fdivr
jg
or
pushf
sahf
test
call
lods
aaa
xchg
stos
aas
push
push
shr
and
adc
nop
sbb
push
outs
loopne
adc
or
mov
xor
mov
in
in
movs
retf
mov
add
inc
dec
dec
daa
adc
pop
adc
aad
push
sbb
or
mov
into
pop
call
xchg
jmp
pfmul
inc
je
in
sub
mov
push
mov
rcl
and
and
sar
or
not
dec
lock
fbld
les
pop
in
dec
das
pop
(bad)
mov
add
adc
or
bound
push
test
adc
dec
outs
push
dec
in
jge
cmp
and
pop
cmps
das
(bad)
mov
ret
xchg
into
sbb
sub
or
sahf
pop
pop
mov
xchg
add
xchg
cs
outs
ins
aas
adc
push
jne
jp
pusha
mov
mov
(bad)
cwde
cmp
aaa
and
push
fld
mov
dec
push
pop
jl
test
jne
aam
mov
mov
cmps
in
mov
leave
adc
ds
pop
movs
adc
sbb
sbb
push
xor
jge
adc
ins
retf
inc
dec
push
lea
nop
xlat
sub
cmp
push
pop
idiv
sbb
loope
pushf
sbb
movs
lods
sub
mov
inc
push
ficom
cli
lock
and
mov
cmps
inc
mov
scas
aaa
pop
popf
popa
dec
leave
ds
ds
mov
sub
xchg
out
xchg
stos
popf
and
es
sbb
cmps
add
xchg
stos
xchg
or
js
inc
gs
jmp
std
pop
sub
or
pop
jge
out
pop
cmp
popa
push
rcr
popa
cs
shr
fstp
push
icebp
retf
addr16
push
imul
pop
push
adc
iret
add
mov
adc
mov
fisubr
mov
mov
xor
or
iret
fisubr
pop
xchg
xchg
lods
repz
pushf
scas
jg
inc
test
loopne
sbb
lods
jno
(bad)
in
pop
mov
mov
outs
sbb
inc
inc
icebp
(bad)
xchg
stc
adc
pop
in
jge
push
mov
ret
rol
inc
mov
and
mov
ins
pop
sahf
arpl
and
mov
adc
int3
imul
mov
add
hlt
std
mov
ret
pusha
jae
pop
push
adc
jmp
das
sub
xor
ror
inc
jo
mov
pop
and
out
pusha
shl
stc
(bad)
sbb
icebp
scas
retf
test
jl
in
test
pop
adc
mov
into
sbb
or
frstor
rcr
aad
lock
mov
inc
mov
jmp
sub
mov
lahf
mov
push
fwait
or
cmps
idiv
xchg
div
jmp
sub
sbb
mov
cmp
inc
mov
jp
add
(bad)
rol
jl
xchg
mov
mov
pop
adc
sub
mov
(bad)
call
ds
push
mov
cld
adc
add
pushf
clc
movs
pusha
inc
sub
ret
aam
jge
jl
mov
sti
mov
xchg
adc
nop
push
pop
aaa
push
sbb
test
cmps
enter
(bad)
jno
xor
add
jo
popa
icebp
and
ror
into
push
cli
mov
and
ds
xor
xchg
in
imul
jmp
outs
lock
xor
mov
pop
push
test
jmp
push
mov
lahf
cmp
sub
in
outs
mov
xchg
imul
jp
gs
outs
outs
push
push
in
popa
mov
mov
xchg
adc
fwait
shl
mov
mov
enter
dec
lock
mov
enter
stos
push
fisubr
sti
stos
fiadd
in
xchg
ins
popf
in
nop
jb
mov
pop
lds
mov
add
scas
ins
xchg
sub
iret
adc
fimul
inc
pop
add
xchg
adc
cmps
in
loop
repz
xchg
test
sub
aas
mov
into
dec
jge
sti
adc
cmp
dec
xor
pop
das
inc
rcl
call
dec
and
outs
sbb
popf
xchg
xchg
pop
pop
cmp
mov
pop
mov
in
jo
repnz
jbe
dec
push
loopne
mov
xor
push
adc
(bad)
call
pop
call
scas
jl
(bad)
out
adc
xlat
mov
sbb
add
jecxz
(bad)
nop
xor
jmp
mov
mov
outs
fcmovnb
jo
cs
push
je
jbe
test
jp
mov
and
daa
hlt
or
pop
cmp
sbb
jmp
pusha
cmc
sub
fs
sub
les
or
imul
dec
mov
loope
xchg
repz
fcmove
or
std
mov
dec
into
in
mov
add
jle
aas
test
mov
fild
push
sub
jl
bound
pop
mov
jo
repz
xor
bound
fst
and
popf
(bad)
mov
popa
sbb
sub
loop
xchg
mov
lahf
mov
push
pop
enter
or
dec
je
inc
or
in
cmp
xchg
sub
das
and
adc
icebp
sbb
cdq
out
dec
pop
jno
(bad)
mov
jle
iret
and
pop
(bad)
ds
push
fucomip
adc
lock
loope
xchg
sub
ds
stos
or
call
in
adc
out
stc
imul
ins
sbb
mov
outs
jmp
or
ja
outs
mov
callw
stos
mov
fwait
inc
(bad)
push
loope
shl
jle
fmul
add
push
loope
and
js
push
(bad)
push
sar
outs
test
ret
cmps
add
aaa
loop
pusha
adc
pop
in
mov
xor
pop
or
pop
stos
dec
pop
aas
and
out
repnz
data16
sub
cmp
inc
mov
icebp
pop
ja
fstp
mov
(bad)
hlt
retf
cmp
xor
pop
aas
or
lahf
xchg
sub
daa
in
jecxz
aam
test
mov
xor
jmp
(bad)
cmp
xor
ds
jbe
nop
push
push
mov
mov
lock
jno
mov
cmp
inc
(bad)
xchg
cli
xchg
(bad)
mov
adc
call
dec
inc
adc
pop
xlat
call
adc
in
fdiv
jns
loope
cwde
repnz
pop
outs
xchg
lahf
rcl
inc
ins
(bad)
icebp
and
adc
mov
jmp
mov
push
mov
push
ror
or
jle
xlat
fsubr
jno
mov
sahf
outs
jo
lahf
jae
stc
inc
mov
fist
xor
sbb
iret
inc
dec
xchg
push
push
sbb
push
movs
sub
rcl
mov
sbb
pop
push
fild
fsubr
loopne
cmp
add
or
popa
push
shl
adc
push
mov
mov
push
cwde
cmp
mov
cmp
sub
ficomp
mov
call
push
sub
fild
jmp
mov
mov
test
push
add
(bad)
shl
mov
test
xchg
ror
aad
call
xlat
sbb
cmp
jne
sub
loop
in
out
add
jmp
lock
add
mov
ins
imul
sbb
clc
sar
xchg
xor
add
add
xor
int
ds
add
jns
xor
mov
mov
retf
push
shr
dec
pop
data16
mov
ret
mov
push
fbstp
out
mov
sub
in
push
mov
and
retf
leave
mov
mov
retf
retf
cs
scas
dec
femms
sbb
and
(bad)
stos
jbe
or
sub
mov
and
(bad)
imul
push
push
cmc
retf
ins
sub
xor
adc
in
mov
lods
cmp
pop
inc
inc
movs
xor
ror
dec
sbb
xchg
and
mov
fwait
lock
int
leave
call
sbb
jae
aaa
lods
into
mov
movs
enter
jnp
dec
pop
xchg
repnz
xor
sub
imul
sub
xchg
cs
sbb
cmps
loope
and
aam
jno
cmp
and
popa
iret
(bad)
cld
xchg
add
pop
mov
test
or
test
scas
pop
cmps
fisub
inc
cwde
pusha
xor
sti
or
jns
adc
cmc
xor
push
sub
mov
ficom
pop
pop
or
iret
jae
jbe
dec
in
ins
data16
adc
inc
jnp
sbb
retf
xchg
and
test
xchg
in
fcom
fwait
mov
loope
ja
fucomp
nop
inc
ja
inc
mov
jb
rol
fcmovnbe
mov
sub
into
jo
outs
cs
dec
mov
popa
xlat
fldcw
push
mov
and
pop
and
outs
movs
jl
jle
fistp
dec
shl
jb
sbb
xchg
and
push
mov
ret
lock
mov
addr16
inc
cmp
sbb
stc
sar
fist
jle
test
mov
call
jp
ja
inc
int
jp
cmp
dec
cmp
xchg
pop
in
jle
lock
out
inc
xchg
das
cmp
clc
jl
xor
dec
aas
popf
add
add
sti
push
out
push
daa
stos
sbb
dec
sub
dec
mov
clc
daa
lock
nop
adc
and
iret
adc
push
mov
dec
cmps
je
inc
out
adc
cld
imul
and
sbb
jnp
push
imul
jle
pop
in
je
add
pop
aad
mov
inc
jp
pop
or
inc
sub
popa
cmc
cmps
xchg
das
ret
cmp
sbb
bound
or
pushf
push
rol
pop
jb
pop
add
xchg
pop
(bad)
(bad)
inc
xchg
stc
mov
gs
pusha
cmp
iret
push
xchg
dec
lock
loop
pop
mov
push
adc
mov
test
mov
mov
test
imul
cmp
sbb
sti
push
xor
jg
(bad)
mov
mov
adc
data16
popf
push
and
out
stos
jbe
loop
nop
or
addr16
outs
pusha
and
inc
push
rol
cs
xchg
dec
lds
fcom
int
jge
inc
mov
inc
add
imul
bswap
test
pop
(bad)
out
jae
cdq
daa
sbb
shl
scas
or
call
scas
pop
sbb
fsubrp
adc
inc
sub
fcomp
repz
push
add
mov
add
aad
sub
inc
loope
sub
pop
push
repz
int3
out
sbb
es
and
mov
xchg
outs
jno
loope
(bad)
pop
mov
jmp
jb
push
or
sbb
adc
div
push
rcr
cwde
push
mov
and
ret
inc
test
test
mov
dec
int3
push
add
xor
sub
cmp
xchg
sub
add
inc
adc
(bad)
fidiv
push
call
add
and
mov
mov
ja
sahf
jbe
pop
jbe
scas
or
add
cli
sub
fisttp
das
xchg
mov
repnz
sub
mov
add
sar
or
rol
aam
aaa
adc
rcl
pop
int
xor
xor
jg
jbe
mov
mov
xchg
dec
adc
mov
cmc
cwde
aad
xchg
pop
shr
pusha
in
dec
out
inc
iret
int3
adc
rcr
xor
jge
mov
lea
or
in
je
or
or
fucom
cmc
stos
cmp
mov
cmp
sbb
mov
jb
call
nop
jecxz
arpl
retf
xor
adc
das
cmp
pop
mov
cld
xor
mov
test
das
mov
push
jmp
inc
in
out
mov
aas
fwait
dec
cmc
repz
in
in
js
aad
or
out
es
pop
mov
dec
stos
in
stos
nop
mov
call
push
call
mov
inc
in
jno
repnz
inc
mov
test
add
dec
sbb
dec
cmp
leave
cmp
dec
jae
or
paddsw
sbb
imul
jmp
xchg
push
sub
pop
mov
imul
lods
(bad)
std
pop
push
movs
sti
mov
movs
out
outs
popa
jb
sub
jbe
jnp
ja
popf
pusha
or
jo
and
add
es
ss
mov
in
in
xor
dec
lods
in
imul
dec
out
mov
jb
xchg
jae
movs
lods
mov
jo
push
mov
adc
jae
adc
jle
(bad)
das
sub
mov
sbb
jnp
mov
rol
and
loopne
mov
call
sbb
das
mov
movs
ret
xor
or
jne
mov
call
cdq
pushf
pop
dec
or
jg
jmp
dec
inc
mov
sbb
jns
sbb
call
fdiv
sub
mov
inc
cmp
repnz
mov
inc
mov
lea
rol
call
xor
shr
popa
xchg
push
mov
leave
mov
xor
inc
inc
jp
adc
jmp
dec
cmps
mov
clc
popw
movs
scas
push
mov
iret
xchg
cmp
sub
xor
mov
repnz
sbb
mov
jmp
addr16
jmp
jmp
lods
sar
cmp
mov
test
(bad)
inc
mov
jecxz
repz
inc
or
push
push
add
jmp
das
std
(bad)
wbinvd
push
mov
push
rol
or
jne
sbb
jl
iret
xchg
icebp
cmc
jmp
add
jle
out
lds
sbb
dec
mov
xchg
cmp
and
xlat
or
pushf
jge
leave
out
lods
pop
scas
pop
pop
in
repnz
sub
sbb
xchg
pop
inc
lahf
aam
sbb
sbb
and
mov
xlat
xor
pop
jle
pop
lods
adc
push
pop
push
fs
fs
mov
xlat
repnz
cmp
push
jnp
add
and
mov
cli
jo
and
icebp
aaa
test
push
push
aas
test
dec
mov
mov
dec
popf
cmc
push
mov
retf
cmp
jmp
mov
in
fnstenv
stc
scas
in
jle
dec
call
xor
add
xor
dec
test
sbb
ficomp
mov
xchg
jmp
mov
mov
test
lea
add
nop
sub
ror
xchg
adc
adc
cdq
sbb
in
popf
arpl
xchg
add
xchg
(bad)
repz
mov
add
outs
add
add
mov
popa
sbb
ins
jp
(bad)
xor
lahf
cmp
pop
mov
add
mov
xchg
adc
or
push
psubd
sbb
sub
sub
stc
call
mov
inc
sub
fist
add
mov
nop
std
push
push
outs
push
sub
test
or
add
jne
mov
es
cmp
push
gs
ss
xchg
sub
adc
sub
repnz
pop
mov
pop
mov
mov
mov
mov
les
ret
adc
xchg
mov
out
mov
mov
lock
fadd
pop
mov
adc
aad
mov
sti
adc
fcmovnb
ds
imul
dec
dec
pop
push
aas
push
jmp
pusha
mov
push
je
inc
retf
dec
push
std
popf
retf
push
jecxz
xchg
cmp
push
xor
cli
clc
push
jmp
adc
fucomip
sbb
adc
jno
data16
popa
stos
mov
fld
cmp
ret
aad
or
outs
push
xor
loop
mov
pushf
stos
lods
in
(bad)
int3
adc
enter
push
adc
adc
mov
mov
les
push
imul
xor
and
rep
into
addr16
cmc
inc
sar
stos
clc
cmp
xor
push
or
jmp
xor
pop
add
or
imul
popf
push
adc
(bad)
scas
adc
jl
pop
xchg
cmp
and
sbb
mov
fsub
ror
push
and
pop
add
sti
adc
push
adc
call
jl
loope
repz
xchg
shl
(bad)
jo
cmp
and
addr16
cld
aam
(bad)
cmp
cmp
mov
imul
fistp
jp
xchg
dec
and
lea
ins
aad
ror
call
mov
ins
popf
fcom
int
jo
or
and
dec
push
push
lahf
fld
mov
xor
mov
loop
test
or
mov
cmp
std
mov
or
int3
push
sub
dec
imul
in
es
retf
imul
cmp
mov
dec
fstp
jb
add
jg
push
dec
sahf
mov
mov
movs
lods
int3
leave
jmp
shl
mov
push
repnz
pop
int3
and
es
jmp
xchg
popa
arpl
hlt
sub
mov
sub
scas
adc
hlt
outs
mov
es
xor
sbb
mov
jne
addr16
scas
mov
xor
jae
enter
jecxz
and
xchg
stos
sbb
fild
sub
test
inc
add
bound
test
popa
cmp
fistp
ret
(bad)
cmp
push
adc
outs
leave
mov
ret
mov
ret
cmp
js
sbb
jp
movs
or
cmps
test
sub
xchg
pop
xchg
test
ins
pop
push
mov
js
lea
pop
push
mov
cmp
inc
xchg
mov
fs
ins
arpl
xlat
mov
pop
xchg
add
mov
popa
iret
loopne
mov
sbb
add
inc
(bad)
imul
sbb
repz
inc
pop
stos
push
sub
aaa
sub
out
ss
sbb
lods
mov
pop
test
dec
cmp
div
xor
and
popa
ret
xor
dec
inc
lods
pop
mov
dec
(bad)
loope
add
fstp
cmp
xor
fwait
idiv
gs
loope
adc
cmp
mov
jp
fs
push
out
loop
rol
imul
fcomp
jo
(bad)
dec
push
inc
jp
in
dec
ret
xor
call
mov
imul
adc
and
ins
stc
fmulp
in
loope
dec
retf
outs
cs
sub
rcr
(bad)
(bad)
adc
dec
xchg
adc
aas
mov
ficom
inc
mov
push
cmps
inc
cli
dec
adc
jbe
(bad)
ja
movs
adc
fdivrp
mov
outs
jbe
stc
jb
sub
shr
mov
sub
(bad)
cmp
xor
in
jne
mov
xchg
add
popf
dec
xchg
xlat
sub
fstp
add
lea
xor
(bad)
mov
inc
das
ins
add
sub
mov
add
adc
sub
jecxz
push
out
xlat
faddp
es
jg
fucomp
push
ds
cwde
mov
xor
dec
iret
repz
popf
idiv
inc
inc
xchg
imul
jle
xor
dec
test
pop
dec
adc
pop
ret
adc
loope
stos
jno
or
dec
and
das
inc
pusha
jne
jns
cs
rol
inc
in
fistp
pop
aam
pop
xor
mov
pushf
pop
dec
adc
pusha
repz
xor
test
popa
addr16
test
stos
inc
call
adc
jp
data16
sub
(bad)
ins
push
ss
leave
pop
push
xor
popa
imul
out
loopne
jecxz
cmc
sar
fcmovbe
fdivr
(bad)
aam
aas
(bad)
pop
add
sub
push
test
dec
jl
cmc
and
or
popa
ins
enter
add
pop
dec
mov
fdiv
pop
sbb
jg
cmp
popa
or
mov
stc
xor
inc
cmp
cdq
sbb
or
jge
cli
or
arpl
sbb
jp
test
cmps
jb
cli
ret
into
(bad)
in
popf
push
pop
leave
lock
xchg
out
and
mov
xlat
movs
cmps
stc
loop
fmul
mov
(bad)
bound
in
push
sysenter
ins
inc
sbb
clc
iret
test
push
movs
and
imul
das
call
ffreep
call
and
inc
or
data16
psubsb
sahf
inc
jle
and
lods
jb
test
fstp
mov
cmp
push
xchg
jb
sbb
les
add
mov
popf
or
fbstp
cmp
jl
fwait
xchg
and
mov
scas
cmc
fdivr
sbb
ss
enter
fwait
cmc
xor
xchg
fisubr
mov
(bad)
xor
(bad)
adc
adc
dec
and
ins
mov
sar
ds
inc
pop
mov
xchg
fprem1
cmp
addr16
mov
cmp
aad
sub
pop
shl
xchg
arpl
adc
sbb
and
sahf
cdq
push
mov
and
test
cwde
push
push
push
or
or
outs
add
aas
dec
sub
ret
fiadd
out
in
aad
push
pop
les
fdiv
jle
cmp
stos
lahf
add
call
test
mov
xlat
mov
movs
jno
std
push
cwde
pop
or
mov
(bad)
pop
std
loope
call
js
pop
mov
mov
shr
pop
out
xchg
in
imul
cmp
call
sar
push
mov
dec
cmc
frstor
and
jecxz
mov
imul
fwait
ja
sub
sar
aam
clc
rcl
inc
mov
sahf
outs
inc
sti
repnz
sub
xchg
inc
dec
stc
cli
push
pushf
inc
dec
jmp
jno
call
pop
loope
cli
in
cld
nop
cmp
loopne
xchg
mov
scas
pop
sbb
cmp
cmp
test
jmp
ins
add
mov
jmp
clc
and
mov
add
ret
jne
mov
mov
test
popa
xchg
sti
pop
pusha
mov
je
in
xchg
dec
shl
aad
mov
(bad)
fld
jecxz
imul
or
es
xchg
sub
(bad)
fidivr
test
movs
in
mov
xchg
cwde
xchg
mov
loope
mov
adc
mov
shl
repz
and
jmp
(bad)
sti
das
aaa
cmc
sub
test
outs
mov
xchg
popa
sub
adc
aas
sub
enter
adc
fdiv
sub
cmp
pop
test
lock
dec
jle
out
or
jo
in
cwde
loopne
repnz
ins
clc
ja
jl
add
inc
jecxz
and
xchg
push
push
jmp
mov
repz
mov
mov
jae
movs
pop
stos
test
cmp
lods
repz
fld
push
mov
sbb
ret
mov
mov
std
sbb
xchg
div
(bad)
and
std
xchg
pop
inc
adc
mov
stos
mov
push
mov
mov
or
in
add
jno
dec
cli
fsubr
push
add
sbb
mov
pop
mov
add
fsubr
push
out
ss
pop
push
lods
xor
cdq
and
sti
cmp
mov
xor
add
out
xor
xchg
cmp
mov
and
mov
shr
xor
into
pop
scas
outs
push
(bad)
sar
pusha
jge
inc
inc
inc
sub
mov
cmps
xchg
or
je
in
je
mov
sahf
sub
sub
gs
add
ficom
xchg
jnp
mov
push
es
cmps
movs
mov
not
sub
jb
fdivrp
clc
out
das
shl
out
ror
imul
and
pop
(bad)
adc
mov
mov
add
xlat
cmc
ret
pop
dec
add
es
add
jb
(bad)
jp
dec
in
test
or
mov
test
into
ror
out
mov
rcl
dec
sbb
fidivr
cmp
mov
dec
inc
popf
stos
inc
fdiv
jp
mov
popa
loopne
xchg
pop
test
sub
out
fcom
sbb
xchg
pop
ds
sbb
jnp
stos
push
inc
inc
pop
and
pushf
xchg
jp
push
aam
push
inc
nop
sbb
cmp
(bad)
push
test
sbb
inc
ror
adc
icebp
and
mov
add
sti
dec
jg
jnp
mov
mov
and
sub
out
ror
jp
xchg
pop
and
inc
shl
mov
stos
(bad)
retf
push
rcl
jbe
mov
das
mov
sbb
call
xchg
cmp
or
cld
jmp
cmps
movs
loope
std
sbb
jne
or
jl
popw
push
adc
add
sbb
adc
jle
aad
and
test
adc
in
xchg
pusha
mov
test
icebp
cwde
push
fadd
outs
loopne
and
or
retf
std
push
in
or
dec
clc
xor
fsubr
dec
sahf
cld
div
int
out
loope
adc
inc
or
xchg
cmps
adc
mov
popaw
ds
mov
mov
dec
pop
lock
popf
jmp
inc
retf
xor
dec
mul
cmp
cmc
sub
lods
pop
mov
pusha
cmp
mov
cld
xchg
cdq
test
inc
inc
leave
ds
sub
xor
int3
movs
lods
lea
push
adc
test
cmp
mov
sub
imul
inc
mov
xor
xchg
jecxz
adc
and
xor
inc
aad
das
popf
and
loop
sbb
add
sub
ss
mov
mov
sbb
arpl
jbe
les
add
push
pop
xlat
in
gs
std
sbb
cs
int3
and
bound
mov
cld
and
mov
frstor
aas
mov
pusha
dec
lock
(bad)
add
js
clc
arpl
and
cli
xchg
es
and
fsubr
into
xor
lea
push
sar
cmp
repnz
push
mov
jmp
call
test
mov
(bad)
or
les
jmp
cmp
xchg
sbb
in
leave
das
loope
stc
outs
pop
dec
adc
pop
mov
add
fwait
loop
inc
sahf
sub
loopne
or
pop
pusha
jge
lock
in
sub
in
jecxz
adc
sbb
dec
repnz
mov
cmp
test
and
cmps
imul
jmp
stos
shr
lods
repz
and
jmp
movs
aam
jnp
lods
jmp
push
jns
mov
imul
or
dec
iret
lock
dec
int
jecxz
rcl
ficomp
dec
mov
pop
arpl
jecxz
adc
jo
stos
imul
int
xor
sub
fwait
dec
xchg
sub
adc
pop
ins
mov
mov
push
cmp
inc
jne
(bad)
jl
test
xchg
hlt
mov
mov
sti
push
leave
adc
push
cmps
fs
mov
sete
push
inc
jecxz
push
mov
test
ret
push
mov
(bad)
adc
into
and
or
mov
inc
mov
pop
or
stc
fcom
lds
icebp
(bad)
bswap
je
cld
pushaw
mov
les
jge
pop
and
sub
xor
je
xor
les
imul
mov
(bad)
jecxz
and
mov
push
mov
pop
cdq
push
jp
xchg
mov
pop
and
aas
(bad)
jmp
(bad)
test
add
scas
cmp
jg
cmp
sbb
in
(bad)
je
cmp
sbb
cld
jne
add
outs
shl
dec
jns
push
scas
add
pop
add
in
mov
mov
add
xchg
sahf
mov
mov
out
add
sub
retf
in
test
hlt
jbe
enter
inc
sub
xor
cmp
or
mov
mov
inc
pop
stos
cmp
sub
fs
mov
cdq
push
je
int
sbb
call
sbb
cmc
out
test
test
shr
jmp
sub
out
adc
xchg
pusha
sbb
pop
xlat
clc
xchg
push
data16
repz
pop
adc
mov
test
mov
je
leave
xchg
sbb
(bad)
loopne
sbb
mov
in
movd
sti
jmp
clc
jmp
ds
add
xlat
adc
clc
push
jbe
pop
imul
ret
mov
xchg
push
fst
outs
fwait
xor
xchg
mov
push
sahf
test
adc
test
cwde
test
lahf
jmp
jecxz
push
scas
aas
jnp
mov
jne
inc
lds
mov
xor
in
dec
pushf
and
xchg
mov
out
push
scas
dec
dec
sub
push
int
dec
repnz
outs
out
adc
(bad)
jns
(bad)
bound
inc
dec
iret
pop
(bad)
ins
xchg
jns
aam
pop
sub
enter
ins
das
(bad)
leave
aas
add
in
push
mov
shl
pop
imul
js
xchg
dec
push
es
daa
les
and
rol
out
inc
call
xchg
adc
sub
cmp
hlt
pushf
popa
fsub
arpl
jb
mov
fiadd
xchg
add
mov
or
or
popa
mov
stos
pop
cmps
sbb
and
inc
and
sub
mov
sub
push
inc
add
add
mov
push
sahf
and
sti
mov
scas
sub
cmp
mov
add
sub
xchg
stos
push
jae
push
out
jge
shr
and
mov
or
data16
adc
and
sub
jnp
dec
add
je
xchg
mov
sub
fbld
pop
std
loope
push
mov
cld
dec
sub
pop
hlt
(bad)
fidiv
lock
test
les
ds
out
or
xchg
(bad)
mov
arpl
or
imul
xor
cmp
dec
test
add
sub
rcr
mov
cdq
jp
lods
or
movs
jo
and
in
fmul
lea
jmp
ins
xchg
mov
mov
cmp
out
adc
push
shr
sbb
mov
shr
sub
jmp
jecxz
inc
mov
hlt
mov
mov
mov
aaa
(bad)
pop
push
jecxz
dec
jo
pop
imul
data16
mov
or
mov
fild
pop
adc
xor
jmp
mov
mov
sbb
jge
add
shr
add
sub
ss
call
stos
add
in
cwde
jne
mov
call
push
loop
les
cmp
stos
or
mov
sbb
ins
dec
lahf
pop
cmp
sbb
pop
aaa
test
stc
lahf
adc
and
mov
and
adc
cmps
cli
inc
sbb
jnp
mov
mov
sub
dec
pop
jno
add
push
pop
pop
mov
imul
mov
icebp
mov
xlat
xchg
(bad)
das
lock
sbb
inc
faddp
jl
sbb
push
stos
(bad)
hlt
loopne
sbb
hlt
pop
push
mov
sbb
jecxz
xchg
(bad)
nop
xor
mov
mov
inc
and
std
pop
push
call
and
sti
lods
sbb
arpl
pop
dec
jle
jp
jg
cmp
test
gs
and
sub
jns
jns
pop
mov
sub
mov
inc
in
pop
add
jmp
data16
ins
retf
inc
sbb
jb
xchg
sbb
(bad)
mov
mov
adc
enter
test
xchg
stos
(bad)
pop
fisubr
xor
pop
out
call
loop
repnz
inc
stos
mov
in
xchg
paddd
jg
faddp
lods
outs
xor
push
enter
in
aas
stos
imul
fwait
rcl
aad
lods
stos
xchg
inc
sub
mov
and
stc
scas
mov
xor
push
retf
jecxz
lock
adc
enter
sbb
pop
hlt
push
add
inc
or
rcl
retf
outs
je
dec
int
adc
test
pop
and
pop
xchg
xor
cli
xchg
aaa
add
sub
and
jmp
int
repz
jnp
push
aaa
repnz
(bad)
or
or
cmps
cld
sahf
xor
sar
out
push
fwait
gs
ficom
dec
pusha
and
push
in
sub
test
jge
shl
push
xor
xchg
test
scas
gs
and
cli
jno
jns
les
test
(bad)
pop
pushf
xchg
int3
mov
test
in
popa
sub
jge
or
xor
mov
inc
mov
test
inc
mov
lea
call
mov
jg
and
push
outs
imul
push
in
inc
xchg
test
outs
lods
or
ss
dec
pop
sub
pop
in
push
or
int3
dec
dec
xchg
lea
iret
leave
mov
fiadd
adc
jb
xor
push
and
cs
std
es
push
popa
xchg
jne
rol
push
ja
mov
rol
repz
or
cmps
shl
push
dec
add
popf
mov
pop
sbb
mov
mov
movs
jg
stc
sbb
cmp
jl
xor
xchg
sar
sub
rcl
rcl
and
push
ret
gs
fcmovbe
jmp
in
popf
les
cmp
push
retf
int3
movs
xor
mov
dec
std
push
pushf
in
(bad)
fdivr
hlt
cdq
cmp
int
inc
test
jno
ins
inc
adc
cmp
inc
aas
adc
sbb
push
mov
data16
cvtps2pd
(bad)
push
dec
enter
popa
mov
pusha
push
out
ins
mov
inc
pop
imul
mov
sbb
pop
cmps
addr16
pop
std
pop
pop
shl
push
mov
xor
stc
gs
push
jge
scas
pusha
inc
test
xchg
mov
ret
loopne
movs
ret
sub
inc
mov
push
xchg
jns
mul
iret
jns
mov
push
cmp
popa
dec
in
movs
cmp
push
pop
mov
in
dec
jge
(bad)
mov
add
pop
sub
xchg
add
jns
lods
adc
xor
and
push
xlat
lea
jno
jns
(bad)
xor
test
ins
inc
(bad)
cmp
ja
sub
fdivr
cmp
add
fst
scas
add
add
ja
pop
dec
jg
das
and
xchg
lock
cmp
xor
sub
adc
push
call
pop
push
jb
sbb
cmp
inc
dec
js
repz
inc
rol
dec
push
adc
adc
push
sbb
mov
jne
xchg
or
xchg
jns
xor
push
cmp
lods
or
xor
cmp
mov
jae
add
jmp
std
call
fsubr
mov
sub
fisubr
jo
dec
je
es
(bad)
mov
jno
push
pop
xor
dec
(bad)
lock
pop
js
shr
std
in
sahf
out
mov
outs
imul
scas
setl
jp
cmps
nop
fst
mov
inc
rep
mov
and
lods
iret
in
dec
inc
xor
mov
sbb
cmp
jns
sub
xchg
mov
out
xchg
dec
cmp
addr16
add
int3
jnp
clc
ret
jne
hlt
sub
xlat
cmps
xor
lods
test
pop
sub
adc
jl
adc
in
daa
lods
dec
imul
lahf
(bad)
outs
add
mov
and
pop
jbe
lea
and
(bad)
out
shr
push
ror
xor
retf
fwait
pop
xor
stos
cli
out
rol
push
icebp
mov
xor
inc
inc
push
lods
test
sar
lods
or
stc
xchg
jno
jmp
push
xchg
jo
cmp
gs
xlat
fist
loop
jmp
loope
out
fstp
mov
(bad)
lock
stos
sub
ret
inc
push
cwde
retf
shl
push
mov
and
jge
pop
dec
not
xchg
cmp
call
das
dec
xchg
push
mov
adc
fsubr
xor
mov
rol
dec
cld
mov
bound
mov
xchg
lds
retf
sub
retf
js
sbb
sbb
adc
rcl
lahf
add
shl
aam
dec
inc
sahf
pop
lahf
shl
call
xor
dec
es
cmc
lahf
es
push
and
mov
push
xchg
inc
jnp
pusha
cli
movs
or
and
sub
not
rcr
or
mov
shr
loop
xor
mov
pop
sbb
sti
int
stos
lods
inc
push
lods
sub
outs
inc
(bad)
pop
scas
and
movs
pop
scas
imul
push
cmp
push
loop
cmp
lods
scas
cmps
mov
repz
dec
pop
sbb
mov
scas
adc
scas
cmp
pmulhuw
xor
push
inc
push
outs
mov
ja
popa
inc
xor
aas
sahf
xor
push
cmp
xor
xor
loop
push
dec
sub
push
arpl
mov
adc
add
jecxz
cmps
scas
arpl
aaa
mov
bound
mov
dec
pop
mov
pop
inc
dec
mov
adc
clc
push
es
pop
xor
jo
push
(bad)
mov
xchg
loope
(bad)
ficomp
data16
test
xor
mov
je
sahf
sub
mov
in
sbb
pop
stos
push
dec
push
mov
dec
push
out
ins
lahf
sbb
push
das
repnz
xor
inc
xchg
mov
test
test
sbb
loop
sbb
sub
push
into
test
pop
pop
inc
mov
pop
jno
jg
addr16
mov
nop
inc
out
inc
lods
not
push
xchg
and
out
cld
ss
lock
aam
lea
mov
and
push
out
pop
adc
add
jecxz
dec
imul
jecxz
cdq
aad
out
xor
lds
mov
div
(bad)
movs
push
and
xchg
outs
or
popf
data16
cmps
inc
repz
sbb
xchg
in
adc
push
push
fild
popa
sar
cmp
jmp
icebp
arpl
outs
aam
push
ja
test
dec
sbb
or
and
and
push
int3
fbstp
sub
pop
rcr
in
cmp
test
cwde
pop
mov
sub
pusha
sub
xor
jle
sbb
int3
dec
pop
xor
popf
adc
int
arpl
push
loope
vmwrite
mov
out
test
bound
mov
dec
push
push
dec
xor
mov
jns
les
aaa
sub
cwde
(bad)
pop
inc
cli
jmp
(bad)
stc
cwde
pop
dec
retf
cmps
add
dec
dec
test
jne
xor
(bad)
adc
and
(bad)
jno
data16
mov
push
or
or
ja
stc
mov
and
xlat
xor
dec
pop
push
inc
sub
xchg
add
hlt
int3
mov
cmp
les
(bad)
repz
xor
(bad)
fild
mov
and
push
(bad)
in
xor
adc
mov
sub
sub
test
push
dec
pop
add
call
mov
iret
mov
or
(bad)
xchg
mov
sbb
(bad)
and
leave
addr16
xlat
cli
test
sbb
movs
fisub
fld
sbb
add
or
mov
ja
and
pop
jno
pop
ins
push
add
test
jae
jo
adc
cmps
sub
fcomp
(bad)
cmp
mov
call
xor
lea
inc
ror
call
out
mov
mov
pop
pop
das
pop
inc
lahf
xor
xchg
int
sbb
xor
imul
shl
cmp
mov
add
sub
int3
shl
sub
add
jge
fbstp
jb
out
or
inc
sub
cmp
push
fnstsw
jno
cmp
jle
pop
enter
mov
test
and
and
scas
add
xchg
call
cmp
adc
fisub
adc
or
sub
pop
(bad)
push
fcomp
enter
sub
aad
adc
rcr
mov
inc
int
fxch
jmp
jae
cmp
fnstenv
test
retf
call
fsub
push
dec
adc
ins
adc
icebp
inc
(bad)
stos
fs
mov
xchg
cmp
dec
test
(bad)
xchg
hlt
jmp
or
pusha
inc
pop
push
cmp
stos
mov
retf
int
mov
pop
aad
or
lods
(bad)
mov
imul
xor
xor
and
(bad)
sbb
sub
pop
dec
mov
cmp
cs
inc
cmps
push
sahf
mov
add
in
inc
jp
cmp
pop
add
mov
aad
sar
scas
xchg
inc
xchg
sbb
pop
ret
into
in
pop
(bad)
or
ds
cwde
lock
jae
fadd
jmp
push
pop
push
int
lods
(bad)
pop
pop
sub
cmps
or
adc
out
in
fldcw
inc
mov
jb
je
test
xchg
inc
xchg
imul
repz
out
ss
sub
js
iret
jae
out
cwde
sub
rcl
loopne
xchg
adc
sbb
pop
test
sub
cli
out
mov
push
test
inc
xchg
das
inc
push
sar
and
sub
xor
jmp
fdiv
mov
or
fst
(bad)
dec
pop
add
add
sahf
popf
loop
cmp
rcl
leave
push
lods
mov
aaa
addr16
scas
imul
pop
vhaddpd
inc
jbe
sbb
std
mov
sti
in
jo
push
ins
leave
or
movs
ret
add
inc
pop
and
(bad)
ds
arpl
mov
hlt
mov
and
pop
cmc
aaa
aas
xchg
mov
pop
inc
xor
sahf
icebp
cmps
les
inc
retf
mov
jmp
punpcklbw
lea
cmp
add
ins
jge
jecxz
stos
sti
repnz
js
fist
sub
xchg
jle
lahf
sub
ret
scas
push
fimul
int
js
scas
scas
jmp
and
jp
jno
mov
adc
nop
fild
arpl
xchg
dec
jne
xchg
push
aam
pushf
enter
stos
xchg
sar
aaa
gs
cmp
cli
mov
outs
(bad)
call
shl
aad
mov
add
movs
add
adc
aad
jmp
cmps
push
icebp
sbb
jns
dec
movd
jbe
cmp
push
pop
test
lahf
pop
dec
mov
inc
xor
(bad)
fcmove
cmc
aaa
adc
add
sti
mov
in
jmp
xchg
inc
dec
push
cmps
jp
aas
retf
fcomi
es
adc
mov
jne
cs
push
and
jmp
int
nop
push
cdq
ror
pop
in
and
not
mov
shl
bound
sub
rcl
(bad)
fadd
jo
clc
inc
daa
add
pop
sub
add
outs
pop
push
mov
dec
dec
xchg
ret
outs
add
mov
xchg
cmp
xor
repz
push
outs
int3
in
leave
cmp
(bad)
pop
ret
retf
fnstsw
call
xchg
sub
sar
les
xor
cdq
fidiv
sub
js
mov
pop
cmp
sar
das
arpl
mov
pop
xchg
out
mov
sbb
scas
std
pop
jmp
das
jb
fild
and
jg
ss
cld
scas
jne
nop
fwait
cvtdq2ps
xchg
jmp
call
mov
ja
jmp
mov
outs
or
jbe
daa
jb
cmp
stos
les
jmp
pop
mov
fist
hlt
stos
pop
push
sub
push
dec
adc
in
in
mov
loope
aam
mov
stc
inc
sar
shl
(bad)
ror
add
sub
sbb
xchg
(bad)
(bad)
cmp
add
pop
(bad)
jnp
cmp
pop
in
pop
or
pop
retf
add
sbb
xchg
fidivr
(bad)
clc
ja
push
jp
retf
cmp
ret
xor
mov
aas
cld
es
sub
or
nop
fs
mov
push
push
gs
add
mov
push
cdq
jl
in
shl
jnp
dec
sbb
inc
fcomp
adc
out
cmc
dec
xor
movs
mov
mov
xchg
sar
pop
ins
ror
(bad)
jmp
dec
mov
sub
lds
iret
cld
mov
in
gs
inc
mov
movs
xor
sti
(bad)
jg
(bad)
fcmove
jmp
pop
mov
pop
test
ins
dec
hlt
daa
or
sbb
mov
add
or
pop
adc
icebp
leave
pop
mov
ret
mov
ret
sahf
pushf
and
shl
add
or
ficom
arpl
outs
hlt
push
mov
retf
dec
jne
sub
sub
aas
jmp
out
push
popa
mov
and
icebp
outs
inc
xchg
fimul
mov
daa
push
xor
cli
jmp
out
stos
fbstp
jl
mov
mov
mov
imul
and
fcmovnb
inc
jno
xchg
add
fadd
hlt
mov
sbb
push
jecxz
sbb
ds
pop
inc
sub
adc
lods
loopne
arpl
cmp
cmp
or
jle
sbb
call
ds
push
(bad)
cmp
popa
or
dec
xor
fmul
cmp
dec
cmp
mov
fcom
or
mov
push
inc
cld
(bad)
sti
jb
jbe
and
loope
call
xchg
mov
std
arpl
je
std
xabort
push
test
daa
loope
leave
scas
fnstcw
mov
and
xlat
jmp
adc
mov
sahf
jns
stos
sub
mov
adc
in
and
inc
pop
retf
movs
jbe
mov
cmp
pushf
out
pop
xchg
divps
lods
xchg
pop
push
or
push
data16
aaa
shr
xchg
lods
shr
jmp
test
adc
loopne
jg
push
lods
xchg
pop
scas
jae
jmp
xor
les
movs
lock
xor
ret
mov
sbb
xor
in
pop
int
cmp
gs
push
pop
loop
xor
adc
push
loop
mov
mov
popa
lods
test
mov
xchg
loope
sbb
cmps
icebp
add
sub
mul
xchg
mov
xor
sub
push
fbld
dec
ds
cdq
xlat
call
test
les
scas
jns
xor
stc
dec
ret
or
push
fst
bound
retf
mov
fdiv
mov
out
mov
fwait
out
or
push
cli
push
dec
pusha
mov
cld
(bad)
push
mov
jmp
popf
adc
push
cs
(bad)
pusha
pop
cmps
popa
dec
xor
or
inc
lea
xlat
test
test
mov
mov
xchg
push
mov
dec
retf
sub
(bad)
dec
pop
in
(bad)
sbb
adc
dec
lahf
jae
fsubr
fbstp
js
outs
pusha
dec
cmp
aam
push
adc
ja
jp
ds
cmp
dec
in
and
ds
mov
pop
jp
(bad)
cdq
punpcklwd
fmul
mov
cmovne
mov
jp
pop
add
dec
add
jns
leave
sbb
aaa
inc
sub
rol
fld
les
retf
sbb
popa
ror
loopne
sahf
xor
push
cmp
popa
mov
sub
jmp
repnz
mov
jmp
pop
mov
mov
pop
mov
add
xchg
push
pop
rcl
movs
mov
push
xchg
push
scas
mov
inc
push
and
(bad)
jp
xchg
inc
aad
jmp
neg
loop
push
imul
adc
inc
lea
lea
gs
in
mov
adc
pusha
add
jmp
movs
sub
sahf
jns
and
sbb
xor
jle
and
cmp
push
mov
xchg
icebp
add
cmps
inc
or
jo
cmps
repz
xchg
xor
mov
sti
mov
xor
imul
jmp
and
jns
daa
add
fwait
cmp
retf
and
inc
outs
fimul
fisub
fstp
pop
cmc
ss
pop
add
xchg
mov
lahf
cmp
add
xchg
sub
loop
int
push
imul
shr
push
mov
clc
pop
jmp
test
sbb
aas
fsub
fcomp
fs
aaa
mov
jbe
imul
test
or
and
sbb
ret
pop
and
mov
js
dec
xor
xor
and
(bad)
out
dec
das
pusha
xor
js
xchg
jge
data16
cwde
stos
mov
or
cmp
pop
xchg
in
fadd
out
sub
and
push
mov
sbb
mov
movs
aam
or
cmp
sub
enter
mov
loopne
push
mov
and
imul
out
es
jns
stc
push
mov
sbb
shl
clc
xchg
rol
cld
add
dec
fs
js
loop
sbb
sub
cmp
dec
adc
xor
mov
adc
add
call
dec
mov
(bad)
cld
mov
inc
jae
add
push
xchg
jecxz
or
inc
or
das
sub
add
popa
clc
push
sahf
in
sbb
fstp
mov
test
neg
mov
and
push
and
pop
(bad)
movs
cmp
cld
and
xor
sahf
ror
lea
mov
pusha
das
push
lods
lock
pop
hlt
arpl
stos
ds
addr16
jp
push
enter
sahf
ss
lahf
add
rol
jnp
or
push
cmp
out
fbstp
dec
sbb
icebp
push
jno
test
cmp
loop
out
js
cmp
xchg
add
adc
retf
or
or
sub
mov
loope
add
daa
ds
pop
jmp
sub
fwait
pop
mov
hlt
pop
xor
in
cwde
push
popa
push
sar
cmps
cmp
pop
movs
retf
xor
jb
push
les
bound
or
mov
add
test
adc
pop
aas
add
xor
push
sub
xchg
adc
mov
push
xchg
mov
or
mov
lods
sbb
sub
ins
push
xor
pop
mov
sti
lock
cli
in
loopne
sahf
sbb
iret
mov
push
lods
out
pushf
out
pop
xor
pop
mov
cmp
pop
jmp
retf
movs
popf
jmp
cmp
imul
outs
pushf
pusha
call
stc
fwait
xchg
inc
dec
mov
mov
pop
pop
test
mov
mov
pop
in
mov
mov
test
jnp
add
leave
cmp
dec
adc
push
mov
xor
mov
lahf
or
or
sub
mov
sub
outs
test
rol
jb
cs
mov
xchg
cmp
sbb
test
push
jg
shl
adc
inc
ds
aad
lds
xchg
clc
(bad)
retf
jo
xor
jle
sbb
cli
xchg
add
adc
jmp
in
hlt
jb
pop
cmps
cli
or
cmp
adc
movs
std
stos
cwde
enter
push
or
mov
push
imul
das
dec
or
xchg
pop
sub
sub
imul
sbb
adc
mov
mov
or
xchg
lea
jns
repnz
hlt
out
and
sbb
xor
add
mov
retf
jbe
fdivrp
mov
stos
mov
clc
out
cmps
rcr
jg
(bad)
(bad)
rcr
repnz
ret
dec
ss
not
lsl
sbb
sub
mov
cmps
inc
sub
ror
mov
adc
popf
jg
xchg
mov
gs
pusha
lea
cmp
jl
add
rcl
ja
loopne
cmp
or
test
push
inc
arpl
mov
cmp
sbb
(bad)
(bad)
daa
nop
xor
and
loopne
sub
add
loope
repnz
mov
mov
sbb
sub
adc
push
inc
jnp
je
ret
js
mov
sti
rcl
xor
adc
mov
icebp
dec
pmulhw
nop
aas
push
das
push
push
mov
int3
lock
int3
cdq
jnp
imul
fisttp
bound
jns
movs
mov
jp
inc
inc
xor
ret
or
clc
in
pandn
lock
shl
movs
xchg
sbb
push
cmp
int3
mov
sti
into
ret
mov
or
gs
jle
dec
lea
jmp
push
mov
repz
ss
or
ins
or
sti
nop
sub
sub
cld
or
cmc
jmp
cmp
out
ret
js
gs
icebp
xchg
dec
hlt
or
aad
icebp
adc
imul
scas
add
pop
cmp
jg
add
jecxz
jo
cwde
push
sub
(bad)
pop
or
into
(bad)
cld
xor
dec
dec
pop
sar
int3
dec
cmp
xor
pop
test
(bad)
push
mov
jge
add
jecxz
test
lahf
lock
loopne
xchg
pop
sub
imul
jnp
loope
out
mov
push
es
sbb
pop
mov
lahf
push
xchg
imul
test
jnp
jmp
or
fs
jns
add
dec
sti
xchg
pop
sbb
xchg
popf
cli
imul
mov
sub
and
dec
and
addr16
imul
or
cmp
clc
addr16
repnz
inc
lea
ret
dec
sbb
mov
push
pop
fldl2e
js
retf
jmp
sub
adc
std
fadd
push
loop
xchg
jge
cld
push
loop
fidivr
xor
cmc
mov
add
lods
je
in
dec
icebp
xchg
iret
fld
jnp
repnz
mov
enter
adc
mov
dec
dec
leave
xchg
xchg
mov
ja
add
outs
repz
stos
rcr
test
retf
inc
inc
push
ss
call
mov
xchg
fadd
cmp
push
push
mov
pop
movs
das
test
mov
push
into
and
cld
into
dec
rcr
mov
fmul
popf
stos
pusha
pop
adc
xor
(bad)
jmp
int
fcmovb
in
xor
lods
push
mov
or
mov
in
arpl
xor
jecxz
jge
inc
xlat
mov
dec
mov
aaa
stos
cmp
lahf
or
pop
jo
cwde
sub
frstor
rol
dec
push
iret
or
xchg
jl
mov
loopne
int
jmp
push
mov
imul
mov
add
stos
dec
lods
call
xchg
into
or
cmps
push
test
jbe
sbb
sti
sub
lea
cmps
cmc
mov
in
movs
and
call
inc
loop
int
fwait
retf
cwde
jb
dec
in
cmp
jae
stc
sub
daa
ret
in
mov
test
jmp
add
fdivp
(bad)
xchg
push
push
(bad)
cmp
adc
xor
cld
xchg
and
aas
dec
(bad)
call
add
push
mov
out
popa
addr16
js
out
test
pop
push
cli
out
mov
dec
dec
fmul
cmc
nop
inc
sub
mov
jge
mov
pop
push
outs
sar
fsubr
shl
xchg
xchg
dec
pop
sbb
mov
lahf
cmp
cmps
and
add
jmp
mov
sub
ror
xor
and
push
dec
and
push
outs
je
sbb
xor
mov
sub
retf
(bad)
adc
and
cs
fwait
and
retf
(bad)
cmp
cmp
add
idiv
jmp
dec
cwde
jecxz
int3
inc
test
fistp
lods
out
inc
fsub
comiss
fwait
sbb
xchg
push
outs
pop
idiv
add
inc
inc
jne
jne
pop
inc
jns
cld
outs
in
jne
mov
mov
ret
das
aam
adc
enter
stos
jl
pop
mov
and
aas
jne
mov
mov
fs
sbb
arpl
push
or
pusha
push
push
cmp
in
retf
and
jl
xchg
ja
call
sub
stos
int
outs
mov
sub
pop
xchg
frstor
movs
pushf
popf
sub
pop
pushf
(bad)
sbb
shl
mov
mov
inc
push
sbb
fs
test
aaa
mov
jg
adc
fidiv
adc
xlat
add
jmp
(bad)
movs
fnstcw
xlat
add
cmp
lods
mov
(bad)
push
retf
sub
in
jle
add
fcmovne
test
mov
add
cmp
fist
repnz
and
jns
rsqrtps
inc
jae
imul
movs
xchg
push
mov
add
pop
pop
ret
push
sub
fmul
aad
sub
and
aam
scas
sbb
or
adc
stc
adc
pop
movs
push
icebp
pop
xor
sub
or
repz
or
in
ins
lea
out
stos
jmp
aam
inc
aas
mov
mov
sub
sub
imul
jl
sbb
(bad)
out
ret
sbb
sub
imul
stos
mov
xor
mov
sbb
out
(bad)
inc
cmp
adc
mov
iret
in
and
and
push
ret
neg
fs
push
jge
xor
jg
xchg
and
or
stos
sub
hlt
jmp
leave
cld
cmp
and
cmps
shl
pop
lods
(bad)
pop
mov
movs
jo
stc
adc
push
mov
push
pop
ins
cmps
mov
cwde
jp
addr16
or
imul
mov
icebp
shr
lods
sub
std
sub
lock
push
add
mov
xchg
cmp
fsubrp
xor
jno
add
les
mov
inc
mov
and
aam
mov
dec
jo
mov
div
mov
retf
daa
xor
into
mov
(bad)
ds
cmp
loop
in
mov
addr16
stc
xchg
data16
and
ret
pop
in
xchg
call
cmp
lahf
mov
mov
sti
pop
jle
lock
xor
mov
xor
int
xlat
loopne
fcom
fimul
add
test
jmp
test
jmp
and
sbb
push
dec
test
pop
and
sbb
(bad)
jge
xor
and
cmp
mov
fsub
aad
and
in
outs
xchg
add
push
sub
fisubr
add
ror
daa
jg
inc
int3
add
xchg
fisubr
aad
sub
(bad)
or
leave
stos
sub
dec
adc
sbb
inc
or
pop
pop
addr16
int
sub
cmp
xor
add
gs
ret
xor
popa
data16
cmc
or
jbe
mov
xor
(bad)
mov
jnp
jb
call
icebp
jl
(bad)
jmp
mov
sbb
adc
pop
hlt
inc
mov
enter
xor
jns
call
mov
push
in
shl
or
jnp
les
ins
add
cmp
les
jg
cwde
mov
cdq
and
inc
ret
xlat
push
clc
push
add
not
(bad)
dec
jmp
mov
imul
mov
retf
dec
mov
(bad)
xchg
push
cli
or
movs
sbb
test
shl
xchg
shl
sub
nop
inc
outs
fiadd
cmp
mov
jno
mov
(bad)
not
inc
data16
xor
xchg
inc
int
not
inc
nop
out
or
stos
popa
or
ficom
xor
cmp
pop
stc
push
fwait
les
sar
inc
dec
jmp
aad
push
je
test
out
stc
repnz
fimul
sbb
jg
les
mov
sub
jae
outs
cmps
inc
dec
imul
enter
jmp
je
pop
retf
push
nop
out
dec
sbb
add
fimul
sub
sub
inc
loope
mul
jmp
sub
mov
stos
arpl
icebp
mov
dec
ret
pop
inc
push
xor
pop
mov
iret
jo
pop
test
ja
inc
dec
cmp
test
rcl
mov
xor
loope
scas
sbb
aaa
inc
jle
sbb
pop
movs
and
inc
sbb
fild
xor
sub
mov
lahf
add
adc
sbb
out
out
pop
ja
outs
int
in
test
xchg
loope
dec
jmp
test
lahf
out
daa
fucomi
cmp
sub
and
hlt
lods
in
pushf
xchg
mov
mov
js
mov
and
cli
xor
idiv
or
rcr
lods
push
stos
std
es
dec
mov
jns
jno
push
sub
fistp
jno
sbb
cs
adc
dec
and
xchg
in
stos
xchg
test
and
mov
xor
dec
push
and
mov
pop
inc
fs
mov
push
(bad)
hlt
je
push
daa
xchg
shl
mov
fld
std
out
mov
loop
push
nop
mov
(bad)
mov
js
shl
push
ficomp
out
hlt
out
outs
in
dec
repz
add
fs
mov
ss
das
adc
lahf
cmp
pop
xchg
push
test
xor
cwde
lods
inc
sbb
mov
sahf
adc
mov
xor
fs
das
push
pop
cld
cmp
and
icebp
jnp
cs
scas
scas
std
jmp
mov
inc
adc
jno
(bad)
push
jmp
pop
test
(bad)
pop
mov
loope
test
clc
pop
fdiv
mov
xor
xor
push
and
mov
pop
xchg
call
cmps
xor
fst
jne
cdq
loop
push
jg
and
cli
daa
aam
aam
inc
mov
stos
xchg
aad
adc
push
sub
push
sbb
adc
data16
stos
ret
cmp
push
adc
call
adc
rcr
pop
and
or
xchg
inc
ins
pop
fwait
pop
sbb
jmp
ror
jl
aaa
xor
inc
addr16
or
xchg
in
inc
mov
mov
mov
pop
push
jns
adc
add
xor
pop
test
addr16
popf
js
xchg
aas
mov
ret
rcr
inc
fstp
push
and
sahf
adc
push
push
xor
shr
pop
cmp
jle
and
mov
ins
pop
push
test
je
mov
hlt
cmp
cli
fs
(bad)
jmp
cmps
cwde
enter
mov
xor
inc
in
test
outs
inc
jmp
jmp
or
scas
fucom
mov
jo
mov
loopne
pusha
xchg
xor
jmp
lock
cmps
loop
push
repz
add
xchg
mov
lods
(bad)
ds
push
shr
inc
pop
pusha
(bad)
cmp
cmp
(bad)
clc
or
int3
pop
mov
aaa
push
mov
inc
jecxz
mov
daa
mov
sub
ror
or
sbb
push
dec
mov
add
daa
push
sahf
mov
pop
mov
retf
daa
fiadd
add
dec
jo
pop
adc
pop
inc
inc
and
cwde
xchg
dec
inc
sti
call
dec
repz
loopne
sub
imul
ja
mov
repz
mov
mov
lahf
imul
in
or
(bad)
(bad)
jmp
adc
test
dec
fwait
retf
inc
or
jp
inc
or
mov
lods
loope
adc
lock
jmp
mov
cmp
lods
sub
ins
shl
imul
cmp
cdq
xor
popf
popa
pusha
shr
lea
xor
outs
int
dec
cdq
pop
rcl
ret
retf
call
mov
loop
(bad)
sbb
in
and
ret
stos
test
(bad)
out
push
dec
nop
dec
pop
popa
sbb
mov
lods
or
push
gs
sub
out
sbb
ins
xor
sub
ret
out
pop
out
es
aas
lahf
pop
mov
inc
je
ss
mov
pop
inc
mov
xchg
fadd
xchg
inc
imul
sub
push
int
or
movs
inc
add
push
cmp
(bad)
add
aas
adc
in
fnstenv
push
lds
and
xor
jmp
inc
sub
lds
(bad)
out
(bad)
xchg
fbld
pop
js
xor
xor
or
jo
imul
aam
fs
push
gs
lods
mov
jo
pop
nop
adc
xchg
xor
fcmovnbe
stos
or
rcl
add
jb
sub
mov
and
iret
aad
repz
in
jmp
pop
xchg
int
mov
mov
mov
add
(bad)
mov
clc
(bad)
fwait
div
dec
sahf
jne
popf
jno
push
jne
psubb
dec
ins
out
xor
xchg
sub
fwait
fwait
pop
sbb
mov
adc
mov
pop
cmp
aas
arpl
pop
cmps
cmp
dec
push
add
mov
test
cmps
dec
jnp
addr16
dec
rol
and
ins
outs
xchg
add
sahf
push
dec
push
lock
cli
inc
aad
dec
jl
sbb
cmp
xor
sar
adc
and
inc
rcl
cmps
jge
add
cmp
adc
aam
rcl
dec
je
sbb
fucom
add
or
push
aaa
call
leave
xchg
jae
int
sti
or
popa
out
or
cmp
jb
(bad)
fs
mov
push
jmp
das
ret
out
inc
mov
in
call
pop
imul
out
push
loop
aam
iret
pop
jmp
popa
and
jecxz
test
ss
inc
aas
repz
cmp
xchg
in
add
cmp
inc
sub
(bad)
pop
push
mov
xor
aas
adc
shr
hlt
cld
shl
xchg
pop
call
stos
pop
mov
jl
out
inc
mov
icebp
mov
js
outs
repnz
in
adc
push
arpl
shl
(bad)
dec
lahf
xchg
cmp
inc
push
or
shld
lock
jge
jle
adc
push
xlat
dec
fcomp
jge
jno
out
jbe
adc
jb
push
inc
jns
cmps
push
cmp
jmp
(bad)
pop
adc
icebp
out
pop
into
xchg
ins
cmp
movs
cs
imul
cmp
das
sti
ins
ror
xchg
jmp
push
jae
add
mov
jmp
lods
xor
pop
icebp
xchg
imul
cmc
inc
(bad)
lock
mov
movs
ins
in
inc
mov
pop
mov
outs
mov
test
into
mov
dec
stos
js
fistp
xchg
inc
test
out
lea
cmp
cdq
pop
or
jmp
mov
pop
cld
and
inc
adc
icebp
lods
push
jmp
hlt
rcr
dec
les
lahf
mov
loopne
aad
jg
stos
out
mov
lods
(bad)
inc
xor
lock
and
hlt
jae
mov
dec
repnz
ror
int3
or
and
adc
cmp
cmp
(bad)
sbb
inc
xchg
adc
sub
jmp
dec
jo
push
mov
(bad)
push
jno
jecxz
inc
xchg
sub
(bad)
mov
adc
(bad)
pop
sub
mov
sbb
and
add
cmp
sub
mov
sbb
xor
pop
scas
repz
(bad)
adc
popa
mov
cmc
popa
and
int3
inc
mov
stc
mov
inc
inc
retf
outs
rol
std
dec
into
push
sahf
imul
aaa
mov
jne
imul
nop
lds
push
pop
mov
hlt
je
test
dec
cmps
or
push
ins
shl
adc
jmp
mov
shl
imul
push
loopne
add
(bad)
mov
mov
mov
(bad)
out
adc
adc
adc
cmp
in
pop
aad
sbb
imul
jne
add
mov
dec
repz
into
lods
mov
sbb
imul
mov
mov
cmp
xlat
fimul
fdiv
nop
mov
mov
mov
mov
push
out
mov
imul
stos
bound
fnsave
daa
imul
dec
or
ficomp
adc
arpl
dec
xor
add
dec
rol
(bad)
sahf
inc
xor
jecxz
hlt
jp
mov
and
sub
shl
je
outs
xchg
mov
int
inc
popf
outs
jno
cmp
push
or
jno
jmp
sti
(bad)
fidiv
mov
nop
xchg
(bad)
jmp
movs
mov
jl
pop
sbb
into
jmp
jmp
xchg
dec
sub
(bad)
or
xor
jmp
pop
or
test
cmc
js
adc
test
cmp
pop
imul
mov
push
xchg
adc
mov
aas
cmp
dec
test
fcmovne
frstor
ror
outs
cs
data16
in
jmp
adc
inc
lods
cmp
loop
scas
dec
jne
iret
mov
stc
in
(bad)
sar
int3
in
ret
test
pop
add
or
push
cmp
inc
movs
imul
lock
sbb
xor
mov
or
jns
lea
push
xchg
mov
scas
jecxz
push
clc
or
and
imul
scas
lods
adc
sahf
daa
sbb
sbb
mov
retf
mov
dec
mov
sbb
dec
mov
jl
call
icebp
push
enter
das
sbb
es
pop
pop
and
mov
movs
fcmovnbe
pop
imul
mov
pop
lea
aad
les
repnz
call
sub
mov
(bad)
in
and
stc
jecxz
mov
lds
sub
sar
scas
dec
mov
out
cmp
adc
pushf
in
push
imul
ret
jne
lock
inc
xchg
inc
daa
fwait
pop
jns
push
out
or
mov
(bad)
push
xchg
sbb
xchg
retf
mov
repnz
shl
mov
out
cs
adc
lea
jo
fild
mov
nop
stos
or
fs
movs
cmps
xor
rsqrtps
sbb
pop
sahf
mov
rol
pop
mov
loop
loope
(bad)
add
fdivr
outs
cwde
int
dec
xchg
ret
pop
gs
pop
or
pop
out
adc
pop
mov
mov
pop
rcl
lods
jbe
je
adc
jle
jecxz
ss
sub
pop
ins
faddp
push
rcl
add
stos
pop
pop
dec
dec
or
addr16
sahf
call
ret
(bad)
adc
sub
int
shl
dec
test
or
mov
mov
sub
jl
leave
clc
xor
xchg
push
cld
jecxz
add
jl
fcomip
mov
jge
pop
mov
ffreep
leave
out
ins
xchg
or
lahf
ror
add
adc
bound
fs
int
mov
call
mov
xor
mov
lock
xchg
xor
sub
mov
mov
jp
adc
cmovp
sub
cmp
shl
jo
inc
cmp
mov
ins
and
jno
leave
daa
cmp
leave
cdq
stos
mov
jns
movs
inc
clc
sti
adc
cld
pop
push
pop
cmp
and
fwait
adc
sbb
jp
xchg
mov
pop
xchg
jl
inc
jl
ror
jg
fistp
daa
sbb
sub
mov
pop
pop
imul
xor
dec
in
xchg
aad
cmp
and
out
cmp
lea
jno
loope
mov
loop
push
mov
jns
and
cmp
fwait
retf
sub
adc
pop
frstor
call
leave
push
nop
test
movs
out
xchg
pop
adc
cmps
mov
jae
int
adc
sahf
jmp
xchg
sub
or
or
enter
push
jo
fdivp
(bad)
sbb
xchg
cmps
into
dec
sub
jnp
aad
lods
mov
and
or
mov
rcl
cmp
or
movs
jae
gs
fisttp
mov
mov
and
mov
cmp
push
clc
hlt
mov
pop
inc
push
outs
call
fmul
pop
mov
pop
xor
sbb
inc
mov
and
test
sbb
sbb
es
adc
xor
and
in
out
in
aaa
push
in
jbe
mov
iret
icebp
dec
aaa
jae
inc
imul
xor
fdiv
ret
(bad)
mov
(bad)
inc
add
retf
push
pop
test
mov
push
and
idiv
stos
stc
mov
cmps
int
scas
mov
cmp
outs
lea
mov
test
mov
xchg
int3
pop
test
aam
push
lods
mov
pminub
sbb
lahf
imul
dec
repz
jl
iret
jmp
mov
fistp
dec
sbb
call
adc
add
xlat
gs
xor
repnz
xor
ret
jmp
dec
mov
lods
mov
mov
cld
jnp
fsubr
enter
adc
cmc
popa
leave
xchg
mov
inc
pop
push
dec
push
sub
rcr
mov
ret
xchg
aad
xor
dec
mov
stos
ret
movs
cs
(bad)
jl
sbb
push
mov
cmp
out
push
div
in
mov
cdq
pop
cwde
repz
cmp
sbb
ins
and
mov
adc
jbe
push
mov
dec
daa
cmp
bound
or
push
or
pop
in
sub
and
pop
sub
loop
or
cwde
or
or
inc
or
data16
test
fdiv
mov
stos
mov
add
push
xchg
idiv
data16
mov
out
imul
ss
inc
add
mov
or
mov
dec
popf
test
fadd
call
mov
test
add
cli
arpl
mov
push
pop
fidivr
popa
lods
inc
sub
add
into
and
gs
arpl
or
and
jne
xor
jns
jge
std
shl
xchg
les
std
fidiv
dec
test
hlt
outs
cmc
mov
movs
mov
push
xchg
adc
pop
sub
retf
xlat
mov
pop
sbb
xchg
sub
adc
pop
daa
(bad)
movs
xor
popa
xchg
jmp
lock
add
faddp
arpl
mov
in
(bad)
add
retf
pop
in
or
xchg
dec
pop
sub
shl
cmp
aaa
int
mov
movs
(bad)
test
jp
lea
scas
or
imul
push
aad
jns
ss
icebp
es
cmp
dec
adc
xchg
and
dec
clc
pop
retf
and
mov
repz
arpl
push
ins
nop
imul
fcom
dec
dec
jnp
pop
data16
sbb
mov
dec
pop
sbb
iret
das
cdq
mov
test
loopne
cmp
ja
inc
in
loop
push
retf
fdivp
inc
mov
cmp
stc
mov
pop
sub
ret
mov
lods
scas
das
test
fcomp
arpl
push
mov
cmp
cmp
repz
push
push
push
xchg
and
push
push
jmp
sahf
call
adc
xchg
mov
mov
xor
or
fwait
outs
movs
mov
inc
push
retf
pop
pusha
add
jnp
pop
pushf
adc
jge
sbb
and
fild
sahf
adc
(bad)
stos
call
push
popa
(bad)
fucomi
xchg
arpl
cs
and
pop
movs
cmp
mov
enter
mov
test
fdiv
xchg
mov
inc
xchg
movups
in
adc
xchg
dec
push
lock
and
push
icebp
fsub
pop
xor
xor
sub
test
mov
mov
leave
or
cmp
ret
dec
lods
(bad)
cdq
jae
xchg
cmps
hlt
xchg
xchg
adc
mov
popa
aam
das
movs
dec
sbb
mov
and
push
out
fdivp
imul
sbb
mov
pop
adc
mov
stos
xchg
pop
mov
mov
cdq
shl
push
imul
push
mov
push
mov
gs
popf
jecxz
cmps
fild
xchg
cmp
mov
dec
add
pop
push
sub
in
test
or
test
inc
xor
idiv
out
ret
pushf
jecxz
xor
inc
test
nop
call
in
std
test
nop
fiadd
cmp
xchg
pushf
pop
push
jo
jge
xchg
or
fcmovnb
pushf
out
pop
xchg
aad
pop
push
add
test
cs
pop
sbb
fild
cmps
push
in
cmps
cmps
cmp
das
mov
in
mov
jecxz
sub
jae
cmp
rcl
out
push
loope
add
popa
cmp
sbb
adc
jne
jno
ret
cmp
or
inc
out
(bad)
fdiv
xor
sub
(bad)
(bad)
cmp
popa
inc
xor
rcr
jp
rcr
inc
pop
je
jmp
lods
and
loop
xchg
out
ins
push
and
xor
xchg
xor
or
mov
sub
dec
call
mov
dec
pop
sbb
hlt
retf
adc
nop
fidiv
aaa
sub
dec
inc
fld
xor
sbb
out
retf
movs
js
jge
adc
lds
dec
mov
xchg
pop
adc
ficomp
movs
sbb
jmp
in
lds
or
pushf
or
mov
sbb
push
sub
dec
and
leave
jo
lgs
xchg
xor
xor
add
jbe
jmp
aad
lods
fiadd
dec
push
dec
out
popf
add
push
dec
dec
lock
mov
pop
ins
aaa
pop
mov
es
sbb
retf
scas
add
mov
or
in
jbe
push
(bad)
std
push
fsubrp
shr
and
push
add
ss
and
outs
adc
mov
lahf
nop
popf
inc
repnz
xor
cld
inc
dec
push
jns
addr16
mov
lea
push
retf
jmp
imul
stos
lods
and
scas
inc
pop
nop
arpl
mov
sbb
mov
sbb
adc
cmp
dec
pusha
jns
out
push
aas
adc
jp
mov
pushf
call
mov
ja
xor
mov
data16
dec
icebp
leave
mov
dec
aad
scas
lds
fadd
pop
inc
lods
out
jae
shr
jnp
(bad)
aam
outs
mov
in
adc
adc
cli
pop
(bad)
and
jmp
or
dec
dec
cmp
jl
pop
adc
leave
mov
mov
jnp
(bad)
pop
push
and
inc
jecxz
popf
dec
mov
or
cs
inc
push
stos
daa
mov
out
sbb
addr16
call
inc
jecxz
and
cmps
xchg
sbb
sbb
(bad)
out
leave
or
xor
out
and
shr
shl
push
stos
dec
imul
push
sub
xchg
fmul
mov
stos
es
jmp
call
pop
jnp
rcr
ret
stc
pop
sub
hlt
cmc
sbb
or
outs
mov
stos
cwde
aas
push
in
dec
xor
popf
xor
sbb
cmc
inc
std
mov
cmc
jmp
and
jb
push
sti
(bad)
mov
sub
sub
mov
lds
fiadd
mov
cmc
lds
les
cs
mov
xlat
jno
sub
(bad)
dec
scas
pusha
enter
lods
outs
or
test
(bad)
dec
jg
hlt
mov
or
or
retf
jo
je
sbb
(bad)
test
cmc
fisubr
fwait
in
adc
dec
add
scas
jle
and
leave
fisub
jl
shr
repz
push
xor
es
repnz
rcl
fidivr
in
aam
cmc
es
jg
xor
in
adc
dec
dec
mov
mov
dec
jmp
movs
scas
(bad)
in
dec
jle
sbb
add
sub
push
xchg
sbb
sub
xor
in
addr16
add
dec
outs
ins
call
lock
fadd
jnp
and
and
and
lds
jns
xor
stc
adc
sub
loop
jno
dec
sbb
loopne
xchg
clc
pop
mov
and
movs
jmp
daa
ds
xchg
mov
data16
sbb
push
je
fild
add
pop
int3
mov
pop
popf
dec
cmp
and
jp
xor
retf
pushf
cli
jp
push
mov
shr
push
mov
fist
mov
mov
mov
outs
mov
movs
and
pop
mov
inc
ins
inc
cmps
inc
dec
sbb
shl
fnstsw
mov
add
cli
dec
sub
fs
int
popf
sar
xchg
cwde
sbb
mov
aaa
pop
dec
vpmullw
sub
shr
lea
retf
lods
mov
jg
dec
adc
das
mov
neg
stc
or
iret
ss
enter
inc
and
enter
repz
push
xlat
push
inc
jge
pop
arpl
les
dec
cdq
movs
ins
mov
and
mov
sbb
loopne
retf
imul
mov
xchg
imul
xlat
or
xchg
inc
adc
fld
dec
add
loope
aas
sub
or
pop
in
mov
jbe
add
or
cmp
xchg
(bad)
sub
push
(bad)
repnz
inc
mov
adc
(bad)
jmp
int
lahf
int3
sbb
jmp
lods
cmc
add
mov
or
pop
sahf
out
pusha
mov
cmc
jecxz
push
xchg
mov
scas
loopne
and
loope
pop
mov
and
les
jbe
or
repz
push
in
push
xor
outs
mov
mov
jmp
(bad)
mov
mov
mov
xchg
dec
pop
repnz
movs
int
(bad)
sbb
xchg
ss
sti
fwait
pop
ds
(bad)
adc
mov
pusha
adc
scas
fld
adc
xlat
cdq
jp
das
or
push
pop
xchg
inc
inc
cmp
sbb
arpl
fs
popf
test
cdq
xor
dec
inc
mov
sub
cdq
inc
push
sub
and
mov
test
push
cmp
test
ja
cmp
into
sbb
(bad)
xchg
cld
repnz
jae
daa
push
aam
sqrtps
mov
les
adc
xchg
jae
inc
imul
inc
cwde
cmp
cmp
mul
xor
jmp
mov
and
sahf
sub
call
rcr
int
mov
lods
ss
xchg
addr16
inc
(bad)
dec
push
stos
jmp
loope
push
cmp
aaa
retf
inc
imul
inc
add
push
stos
dec
movs
push
cmp
hlt
pandn
cwde
sbb
ret
jns
inc
sbb
push
sbb
dec
cdq
sub
rcr
mov
arpl
rcr
and
into
mov
mov
adc
mov
inc
xchg
pop
adc
aam
loopne
inc
jmp
pop
scas
rcl
neg
jbe
repnz
iret
push
push
sub
aad
push
aas
test
xor
pushf
sbb
cmp
add
or
mov
add
bnd
scas
fwait
mov
(bad)
ret
gs
and
leave
sub
jnp
pop
jnp
pop
xor
mov
cmp
push
dec
push
stos
dec
pop
out
xchg
movs
imul
sahf
xor
or
fsubp
fdiv
clc
loope
xor
sbb
mov
add
addr16
cli
arpl
dec
push
xchg
std
scas
sub
adc
ret
(bad)
ss
jmp
cmp
popf
dec
fwait
inc
ds
ret
sti
sub
pop
in
mov
sbb
cmp
xchg
jecxz
cwde
cwde
popf
stos
inc
jne
ja
ret
retf
add
mov
inc
mov
iret
push
xchg
adc
ss
(bad)
icebp
movs
or
mov
cld
fisttp
mov
es
and
(bad)
outs
mov
je
cmp
out
xor
xchg
jmp
mov
mov
inc
pop
outs
scas
jle
inc
fwait
mov
sbb
cs
fs
mov
pop
or
xor
dec
in
dec
mov
mov
aaa
push
imul
pop
repnz
div
loopne
mov
and
adc
sti
enter
mov
into
cmp
xor
(bad)
loopne
fdivrp
sahf
sar
movs
mov
enter
inc
(bad)
shl
jne
(bad)
nop
gs
imul
add
pop
mov
stos
jo
jmp
ficomp
xor
inc
add
mov
xor
xor
push
(bad)
cwde
sar
les
je
fld
push
dec
inc
ins
xor
sub
sub
jmp
ror
xchg
dec
sub
stos
enter
loope
out
add
inc
jmp
cs
push
or
adc
lds
xor
mov
or
jne
stos
sahf
into
mov
leave
mov
push
loope
adc
out
(bad)
add
js
pop
dec
ins
loop
dec
jb
dec
jl
repnz
pop
enter
mov
movs
les
or
clc
xor
adc
enter
xor
rcl
lds
lea
add
pop
fisub
call
mov
cmp
mov
les
aad
and
cli
outs
sub
push
jno
dec
and
sub
push
popf
loop
cmp
or
out
sbb
or
jp
mov
add
jecxz
cmp
cs
jb
push
es
cmc
pop
in
xor
push
jmp
mov
das
inc
aas
fwait
das
leave
enter
imul
(bad)
lahf
add
xor
dec
xor
pop
das
sar
mov
sub
pop
mov
in
scas
std
adc
test
dec
das
push
stos
mov
retf
in
jns
push
adc
sub
pop
pop
or
stc
(bad)
sub
out
mov
cmps
pop
arpl
mov
test
neg
pushf
test
test
in
xchg
std
push
sbb
pop
sbb
xchg
add
test
and
sbb
xchg
jo
sub
xchg
test
fiadd
imul
leave
ins
dec
pop
mov
hlt
test
mov
std
adc
jnp
lock
int
mov
rol
imul
mov
sbb
mov
mov
lea
cmp
jnp
aaa
imul
push
push
mov
xchg
mov
sub
inc
xchg
mov
fmul
bound
lds
sub
and
adc
call
lahf
sub
loopne
push
sar
enter
xchg
lods
cmp
xor
adc
std
xchg
(bad)
enter
mov
sar
mov
fs
imul
retf
mov
in
es
lahf
sar
and
mov
jae
xchg
(bad)
bound
adc
repnz
icebp
xchg
adc
cwde
ss
xchg
rcl
inc
sbb
dec
cli
add
(bad)
lods
push
cmps
mov
xchg
in
jnp
inc
cld
pop
inc
sub
mov
out
mov
dec
stos
scas
mov
jb
sahf
clc
mov
jae
jmp
repz
cmps
lea
dec
scas
punpckhbw
add
or
or
lods
or
unpckhps
dec
mov
cmp
lea
push
sub
cwde
arpl
into
jmp
fld
mov
into
cld
lock
pop
jge
xchg
dec
popf
mov
ja
push
ret
scas
adc
jnp
(bad)
pop
dec
icebp
sbb
add
std
inc
stos
les
stos
aas
push
shl
in
in
pushf
jmp
mov
int
fs
pop
jle
mov
int
xchg
push
lds
dec
sti
mov
cld
cs
fist
(bad)
xchg
dec
ins
mov
jo
push
or
mov
adc
cmp
jmp
jl
or
rol
cmp
cld
xchg
pop
add
pushf
test
int
adc
add
or
(bad)
movs
(bad)
icebp
jge
or
inc
in
mov
sub
(bad)
and
ja
or
adc
out
mov
add
inc
adc
mov
iret
mov
mov
es
mov
in
js
xor
(bad)
push
movs
sbb
movs
xchg
xchg
cmc
xchg
jmp
sub
and
inc
push
pop
xchg
cmc
dec
and
mov
out
push
icebp
(bad)
fidiv
repnz
call
mov
and
mov
or
mov
push
aaa
cld
or
and
xchg
jns
or
daa
pop
mov
pushf
cmc
sahf
mov
in
stos
push
stc
mov
sbb
js
inc
mov
adc
and
jg
mov
ss
xor
cmps
das
lahf
ss
push
outs
pop
fnstcw
fild
movs
sub
cs
pop
faddp
rcl
xchg
mov
enter
xor
jecxz
xor
jae
popa
cmp
sbb
pop
cmps
std
test
retf
mov
pop
lods
fisubr
mov
iret
jmp
mov
dec
aaa
jmp
mov
and
or
mov
mov
mov
dec
push
xchg
and
sahf
adc
mov
retf
(bad)
jmp
or
cmc
jmp
movs
pop
les
lahf
xchg
adc
xlat
mov
(bad)
mov
mov
mov
cmp
test
hlt
cmp
outs
test
jl
aas
loopne
popa
add
pushf
scas
pop
jns
fistp
sbb
xor
lock
mov
push
test
xchg
les
push
dec
dec
jo
mov
repz
fisubr
pop
xchg
nop
cmps
cli
and
jo
adc
aaa
inc
pop
scas
lods
dec
dec
ret
and
pop
inc
inc
ret
mov
inc
jnp
push
out
cmp
bound
cmp
ror
inc
loope
lock
dec
sbb
push
jmp
addr16
ins
fcmovb
ja
lods
xchg
inc
xchg
in
cli
dec
mov
pop
ins
and
addr16
sub
movs
dec
lahf
pop
aad
out
popa
mov
call
mov
or
inc
fstp
ret
sub
push
pusha
sub
ins
or
push
(bad)
loop
inc
dec
dec
cmps
mov
retf
and
ins
sub
sahf
imul
(bad)
or
das
jecxz
dec
xchg
push
inc
iret
idiv
ins
nop
add
mov
and
idiv
stos
je
add
inc
xor
lds
push
cdq
inc
aad
lahf
int
mov
icebp
fs
push
add
push
mov
imul
out
mov
xchg
aaa
push
imul
ror
add
xchg
inc
test
aam
or
add
mov
and
int3
fld
iret
push
clc
sbb
add
mov
or
fwait
leavew
sub
out
xchg
mov
mov
mov
jb
mov
stc
push
enter
push
mov
fisubr
mov
xlat
call
add
jne
out
stc
das
mov
pusha
call
adc
in
dec
dec
mov
push
aas
retf
xchg
cmp
fdivr
inc
cdq
pop
out
fcom
push
mov
(bad)
jno
and
out
imul
retf
mov
fbld
jno
and
lods
test
or
cmp
pop
out
cli
std
xor
mov
xor
int
in
inc
sub
cmps
pop
mov
xor
test
cmp
push
lahf
ins
jge
cmp
outs
mov
jne
push
lds
xchg
aam
sub
movs
and
xlat
ja
cwde
cmp
adc
(bad)
push
push
ins
xchg
repnz
and
int3
xor
aad
inc
in
pop
or
jo
retf
lahf
and
adc
div
loop
pop
or
pushf
or
sbb
xchg
and
outs
paddw
pop
and
repnz
dec
out
push
test
sbb
jo
add
in
mov
xchg
dec
mov
clc
cmp
or
or
or
mov
pop
push
xchg
dec
adc
lea
js
mov
mov
or
pop
xor
inc
ins
cmp
sti
je
mov
aas
push
sbb
movs
in
shl
popa
lahf
int3
iret
push
(bad)
adc
sub
or
imul
loopne
imul
jecxz
ret
fcomp
sbb
jp
popf
cdq
imul
mov
inc
retf
xchg
in
cwde
test
xor
call
mov
test
mov
call
sbb
inc
in
adc
(bad)
cmp
push
xchg
jns
inc
daa
sbb
xchg
mov
sbb
and
fidivr
jp
jmp
dec
or
pop
in
movs
je
cwde
dec
or
psubusw
movs
mov
cmc
retf
dec
xor
pop
add
inc
int3
jo
aad
ret
mov
int3
dec
cwde
adc
jo
push
imul
sahf
sub
add
inc
mov
jne
add
scas
popa
ds
mov
pushf
addr16
jbe
movs
inc
inc
adc
cmp
dec
iret
adc
stos
mov
ret
adc
outs
loope
jbe
je
mov
leave
jne
pop
into
inc
outs
dec
retf
xor
stos
jmp
aas
test
ror
(bad)
mov
lods
out
fild
ret
arpl
push
xor
loop
(bad)
xchg
movs
add
mov
mov
std
call
sub
and
xchg
dec
sub
xor
inc
xor
test
lods
sbb
push
mov
xor
inc
movs
or
aad
xchg
shrd
fld
cmp
inc
xor
adc
cmp
retf
pop
popa
arpl
push
xchg
mov
cmp
push
and
rep
iret
iret
(bad)
int
mov
sahf
adc
aad
addr16
je
mov
mov
call
loopne
aas
inc
inc
push
jnp
nop
mov
sub
stc
push
push
or
push
sub
enter
aaa
js
xor
pop
push
mov
or
ror
loopne
js
mov
mov
and
retf
cmp
dec
bound
jb
in
movsx
mov
das
inc
mov
seto
stos
add
jae
ins
cmp
mov
jg
das
aad
inc
sti
sti
inc
sub
xchg
out
or
push
(bad)
mov
mov
jbe
xchg
repz
out
push
jmp
mov
addr16
sbb
inc
cld
lods
pop
push
and
mov
xor
mov
arpl
add
mov
and
jo
jmp
sub
stos
mov
aad
ret
jo
mov
push
loope
add
and
lods
add
loope
imul
mov
call
out
fdivr
fstp
lods
ror
repz
imul
jb
dec
lods
jmp
pop
int
ja
jne
inc
ficom
add
jg
repz
movs
xchg
mov
add
jg
or
pusha
(bad)
push
adc
je
hlt
pop
ins
dec
push
cmps
cmp
lock
jle
mov
movs
cmp
fbstp
inc
pop
push
mov
sbb
into
sub
jnp
(bad)
add
fnstenv
mov
mul
shr
pop
adc
sahf
mov
test
lea
mov
lods
inc
test
bound
jl
add
iret
ror
cwde
dec
dec
jno
xor
jecxz
push
fistp
dec
fcom
mov
mov
mov
pop
push
mov
test
push
pop
mov
inc
dec
scas
out
sub
cli
aas
mov
inc
xchg
mov
cld
jmp
push
iret
add
fsub
xchg
gs
mov
jae
adc
popa
cmp
aam
test
jae
jnp
call
sti
dec
cmp
and
mov
mov
push
cld
inc
int
jl
or
adc
icebp
retf
sub
addr16
xchg
out
bound
mov
sahf
ins
movs
pop
mov
inc
fptan
std
daa
xchg
ds
out
xor
(bad)
dec
arpl
jg
xchg
inc
lods
(bad)
jg
sub
xchg
and
pop
jl
test
sub
cmps
mov
rcl
jb
mov
cmc
jle
clc
shl
ret
and
int
xchg
push
push
imul
mov
mov
lahf
cld
xchg
sbb
imul
test
xchg
ins
rol
loope
loop
int
push
sub
shl
scas
test
loop
das
repnz
loopne
mov
ins
inc
(bad)
jecxz
je
sahf
ins
repz
dec
xlat
sub
or
ret
pop
lds
or
mov
iret
dec
dec
shl
adc
pop
mov
rcl
enter
mov
push
xchg
cmc
js
jp
adc
in
dec
xor
pop
ds
xlat
cwde
adc
outs
mov
inc
std
lahf
mov
adc
or
xlat
mov
movs
scas
cmc
(bad)
imul
outs
cdq
sub
leave
pop
jg
imul
mov
daa
ins
fs
xor
lahf
cmp
xor
xchg
dec
and
or
mov
icebp
ds
dec
in
sub
add
dec
mov
fiadd
popf
add
xchg
jp
fstp
adc
adc
cmc
add
mov
sbb
inc
ss
adc
not
rcr
xor
jbe
dec
lods
(bad)
dec
mov
sub
cs
int3
mov
inc
rcl
(bad)
in
popa
xchg
and
mov
fdiv
not
sahf
adc
arpl
aas
fimul
rcl
mov
push
cmp
inc
mov
test
push
xor
xchg
ret
push
stc
in
lea
(bad)
inc
sbb
test
les
test
cld
shl
rol
cmp
test
push
stos
sbb
(bad)
mov
push
loopne
outs
aad
xor
fwait
push
pop
pop
das
jge
push
fistp
mov
push
push
in
fstp
and
retf
xchg
cmp
push
or
or
arpl
idiv
pop
ficomp
and
imul
movs
retf
daa
repz
cmp
clc
push
and
dec
cdq
lock
and
cdq
pusha
cld
adc
mov
sub
adc
mov
loopne
pop
call
inc
test
push
ins
cmp
pop
dec
ins
(bad)
stc
stc
xchg
fidiv
test
jo
mov
(bad)
jne
es
or
frstor
cmp
mov
rcl
xor
ins
cmp
test
loope
cmp
inc
inc
pop
ins
into
nop
xchg
lea
xlat
cmp
sahf
or
pop
mov
add
push
pop
leave
add
sub
dec
add
sbb
pop
(bad)
sbb
rdtsc
ret
inc
jg
dec
imul
xor
adc
jmp
pop
rcl
fimul
les
inc
fistp
cmp
xor
cdq
adc
ins
int3
fisttp
inc
inc
fwait
(bad)
sahf
sub
pop
cmp
pop
int
inc
(bad)
sar
or
inc
mov
imul
pop
sbb
push
and
test
push
push
jle
and
js
adc
sub
or
inc
xchg
and
inc
(bad)
push
retf
and
jnp
mov
or
dec
and
and
shl
out
call
fnstenv
cmp
movs
cwde
test
(bad)
sbb
fcomi
into
mov
mov
jne
xor
loop
in
cs
aaa
and
cmp
cmp
icebp
mov
in
inc
call
or
mov
(bad)
int3
cmp
retf
mov
out
outs
int3
mov
jbe
cmp
ret
cmp
out
imul
push
mul
pop
mov
and
add
jle
std
into
ret
xor
mov
sub
push
mov
or
pushf
mov
mov
les
cs
sbb
dec
jb
retf
jmp
outs
cwde
imul
mov
ja
fld
sbb
mov
int3
mov
shl
jmp
hlt
adc
in
loopne
pop
and
or
xchg
(bad)
pushf
pop
inc
daa
loope
mov
mov
pop
clc
jecxz
call
fcmovnb
mov
jecxz
mov
cld
adc
mov
mov
jbe
mov
cmps
sbb
(bad)
jl
and
mov
aad
mov
add
mov
hlt
in
daa
adc
adc
push
ret
jg
out
mov
sub
fild
ins
movs
cmp
cmp
or
scas
pop
xor
add
ins
mov
mov
pop
and
jmp
cmps
and
dec
js
push
cdq
ss
loope
or
push
push
(bad)
pop
xchg
cmp
cdq
mov
jns
leave
push
adc
repz
div
add
mov
and
xchg
push
add
jb
jae
jecxz
jmp
(bad)
xlat
retf
and
int3
or
adc
lds
out
push
out
jns
fdiv
xor
pop
sbb
fild
and
push
repnz
lahf
div
mov
sti
cmc
mov
jnp
mov
scas
test
movs
sahf
cld
jle
cwde
mov
inc
je
jecxz
xor
or
and
mov
push
xor
sbb
jp
pushf
adc
mov
and
add
sub
dec
and
or
or
mov
retf
(bad)
leave
leave
aam
add
push
ja
push
enter
sbb
dec
ret
mov
icebp
xor
push
mov
(bad)
lock
pop
dec
mov
push
add
adc
sbb
in
dec
pop
xor
jbe
and
ja
adc
mov
ret
xor
pop
dec
loop
inc
push
(bad)
cld
mov
loope
shl
int
mul
mov
scas
adc
cmp
cmc
push
(bad)
mov
fmul
xchg
mov
xchg
jecxz
inc
scas
pop
(bad)
das
out
mov
pop
inc
loopne
xchg
nop
pop
or
lds
adc
addr16
cld
adc
sbb
test
mov
or
sar
(bad)
fs
in
jnp
add
mov
cmp
adc
adc
and
mov
xchg
mov
(bad)
(bad)
js
dec
mov
or
push
cmps
pop
mov
rcr
dec
mov
and
xor
fs
and
or
pop
ds
(bad)
out
jg
ficomp
test
into
loop
and
ins
add
mov
jae
pop
adc
mov
adc
stos
cmc
or
sub
retf
add
sub
mov
jge
sub
cmp
loopne
mov
je
jae
fsub
retf
cmc
outs
dec
add
nop
repz
(bad)
sbb
dec
xchg
jg
push
fisubr
push
hlt
mov
pop
cld
(bad)
cmp
adc
mov
sub
repz
not
pop
xchg
xchg
icebp
js
mov
test
pop
dec
jp
(bad)
dec
pop
push
ja
push
ret
into
push
es
shr
data16
data16
out
jb
pop
mov
jecxz
and
add
rcl
test
rol
xor
js
movs
in
(bad)
push
cmp
sub
add
pop
nop
push
jmp
fiadd
dec
push
or
rcl
dec
add
(bad)
test
adc
push
scas
ins
ret
test
sub
pop
pop
push
hlt
push
jbe
cs
(bad)
push
ds
pop
push
push
jmp
cmp
cs
mov
add
fwait
test
test
aas
js
inc
jno
inc
icebp
sbb
jnp
or
lea
sbb
add
pop
shl
jmp
mov
xor
aad
xchg
(bad)
cld
leave
pop
fstp
or
dec
push
call
mov
rcl
and
sub
sub
retf
(bad)
mov
add
sbb
cmp
adc
mov
cmp
mov
and
xor
dec
int
push
in
sbb
sar
xor
pop
outs
mov
push
xchg
mov
xchg
cmp
add
es
fadd
call
fisubr
mov
jg
ds
js
and
push
loope
mov
cmp
dec
addr16
repnz
xchg
dec
sbb
js
mov
mov
(bad)
imul
mov
das
icebp
(bad)
jae
call
adc
outs
test
xchg
les
mov
(bad)
aas
fs
test
mov
push
pusha
mov
sbb
mov
push
xor
adc
cmp
and
out
sbb
jg
inc
mov
sbb
pop
shr
cmps
jp
int
cmp
jle
add
mov
sbb
stos
retf
aas
icebp
jge
adc
fimul
cmp
fadd
aas
cmp
sbb
xchg
(bad)
and
push
jo
stc
sbb
dec
push
inc
mov
inc
mov
inc
mov
cmp
push
cld
loopne
mov
jae
dec
push
mov
aas
cmps
push
xor
ja
dec
push
mov
adc
or
mov
mov
xchg
inc
push
scas
mov
sub
rol
or
mov
sub
mov
mov
pop
push
jne
mov
sub
or
imul
xor
in
scas
ins
dec
(bad)
mov
ja
jb
cmp
pusha
pop
mov
pop
repz
cmp
shl
out
adc
xor
sub
into
dec
mov
cdq
mov
xchg
xchg
push
mov
popa
mov
push
(bad)
mov
xchg
in
fwait
mov
inc
jge
sub
pop
loopne
lea
add
add
add
jnp
adc
sahf
(bad)
out
addr16
aaa
push
pop
jl
sub
xchg
lahf
pop
pop
rol
leave
jb
ffree
scas
dec
xchg
retf
fsub
push
xor
adc
mov
(bad)
sbb
mov
dec
or
mov
outs
dec
ss
ins
enter
jno
push
mov
icebp
bound
repz
cmp
mov
cwde
movs
pusha
cwde
jp
sbb
daa
das
aaa
push
(bad)
jmp
shl
xlat
cmc
mov
call
mov
test
mov
rcl
xchg
fadd
xlat
cmp
mov
jo
pop
mov
out
mov
mov
jae
out
push
xor
mov
pop
out
rcl
sahf
pop
retf
shl
cmp
jnp
aaa
call
xor
cdq
xchg
pusha
adc
add
sbb
and
test
xlat
(bad)
loop
jns
(bad)
icebp
fisttp
popf
push
cmp
add
push
jns
popf
aad
xor
aaa
arpl
jbe
lock
jl
cmp
es
jb
pop
pop
lods
setbe
jmp
(bad)
push
pop
fs
arpl
clc
fcomp
jnp
cwde
jne
mov
aas
or
mov
ret
test
mov
addr16
dec
rcr
scas
popf
int3
bound
or
nop
outs
cdq
dec
test
cmp
sahf
dec
xlat
mov
pop
inc
je
and
mov
sbb
in
mov
cdq
dec
mov
add
leave
push
aam
loopne
stos
sbb
out
loopne
nop
dec
xor
xchg
add
jl
mov
jae
mov
inc
pop
stos
dec
ss
adc
add
mov
shr
sub
mov
ret
shl
rcl
cwde
sub
xchg
daa
or
sub
hlt
jns
repz
(bad)
sar
and
je
test
cmp
ins
or
pop
aam
in
cdq
loop
adc
and
jmp
adc
mov
cli
fwait
inc
sub
outs
push
mov
in
test
nop
dec
pop
cld
test
(bad)
ret
pop
push
inc
dec
loop
ss
test
(bad)
cwde
mov
mov
push
cmps
mov
and
lahf
jae
imul
call
cdq
ins
leave
mov
addr16
dec
aad
pop
push
inc
data16
mov
and
push
push
mov
ret
sbb
icebp
adc
sbb
add
ficom
sar
jp
cmp
ins
cmp
je
clc
mov
pop
or
jbe
adc
cmp
push
pop
out
jle
jmp
popf
mov
dec
dec
jo
mov
inc
jg
loop
mov
out
mov
hlt
xor
mov
lods
call
fwait
aad
mov
sbb
leave
adc
jbe
or
cli
aas
in
pusha
cmc
add
or
or
fist
inc
jecxz
dec
mov
(bad)
pop
popa
add
or
loopne
mov
jb
jp
mov
mov
je
and
es
mov
dec
push
xchg
test
inc
xchg
addr16
mov
stc
movs
lea
jl
inc
pop
mov
and
aad
cdq
ror
dec
xor
int3
in
or
or
pop
movs
jbe
or
daa
mov
dec
cmp
pusha
movs
dec
(bad)
shr
adc
and
inc
jl
das
xchg
movs
vdivss
shr
mov
cmp
mov
cmps
shr
push
add
or
lea
(bad)
mov
sub
and
or
jnp
push
push
outs
pop
mov
test
add
sub
data16
daa
mov
sbb
or
in
pushf
rcl
stc
jle
and
jmp
cmp
test
pop
mov
in
sti
repnz
repnz
add
dec
mov
mov
mov
lods
stc
adc
push
jae
mov
sub
pop
xlat
inc
xor
cmp
retf
jecxz
cdq
jmp
in
daa
ja
rcl
enter
loope
push
lods
inc
arpl
jmp
pop
retf
fs
push
ret
mov
fs
movs
pop
shl
xchg
xor
sbb
push
(bad)
loopne
xchg
jg
(bad)
sub
cdq
mov
out
xchg
pop
mov
fdivr
nop
stos
push
fsub
dec
aam
push
shl
sbb
adc
push
mov
nop
sbb
add
lea
or
arpl
and
cmp
ds
sti
sub
mov
jg
inc
fmul
push
cmp
popf
in
les
aam
or
ins
xchg
inc
xor
out
sbb
inc
test
aas
xchg
pusha
cmc
mov
and
jmp
pushf
fimul
mov
jbe
add
retf
shl
std
pop
lea
in
ret
les
clc
mov
ins
jbe
scas
dec
call
jo
xchg
mov
rol
mov
ins
icebp
and
shr
push
loope
pusha
fbld
sar
mov
dec
(bad)
inc
stos
cdq
imul
pop
pop
xor
add
xor
rol
or
dec
dec
push
test
shr
dec
in
push
cmp
mov
test
jno
add
inc
or
fwait
mov
jns
out
in
or
iret
mov
std
fisubr
je
jecxz
cld
in
cmp
jle
jle
lahf
das
leave
arpl
dec
cmc
sbb
sti
sbb
ror
ds
sbb
mov
fsub
cwde
sar
sbb
push
fcomi
adc
pop
call
jbe
test
lock
(bad)
lods
xchg
cwde
and
jle
mov
sub
aaa
push
(bad)
sahf
sub
inc
cld
pop
add
push
or
and
mov
xor
es
mov
adc
and
inc
call
adc
lds
dec
or
push
xor
cld
in
push
mov
adc
into
xor
ss
push
cmps
fld
popf
icebp
or
sahf
lock
push
fbld
jno
das
push
add
or
pop
jae
xor
adc
push
lock
mov
fidivr
xchg
stos
or
aas
repz
pextrw
xor
mov
test
dec
dec
imul
sub
sbb
cdq
aaa
or
xchg
ret
adc
repnz
int
mov
imul
cmp
mov
sbb
pop
test
mov
inc
xor
test
fcomp
fs
push
xchg
iret
icebp
lea
dec
push
es
cld
add
mov
sahf
push
xchg
jo
push
ja
lock
xchg
mov
dec
hlt
mov
lea
mov
adc
push
mov
or
repz
(bad)
push
push
cmp
icebp
push
and
aam
sbb
mov
imul
ret
jmp
mov
test
movs
xchg
loopne
loop
or
sbb
fdivrp
push
shl
xchg
clc
add
test
push
mov
sub
mov
jns
sbb
push
scas
and
stos
sbb
mov
into
popa
movs
mov
shr
es
add
cmp
int
dec
cli
fsubr
repnz
js
inc
ins
stos
mov
cmps
mov
dec
pop
mov
or
xchg
cmp
push
(bad)
mov
mov
clc
(bad)
cli
xor
mov
mov
ds
int
out
mov
pop
test
xchg
inc
movhps
mov
pop
movs
xor
data16
test
ds
sbb
je
clc
push
stc
pop
dec
push
dec
aam
mov
fldenv
and
jmp
in
sti
test
mov
test
lahf
or
popa
aaa
jg
lock
retf
leave
adc
cdq
call
pusha
xchg
aas
jmp
push
test
jno
cld
pop
or
call
gs
sub
mov
inc
push
adc
fidiv
mov
into
jp
pop
ficomp
(bad)
dec
inc
stc
outs
lahf
inc
cld
mov
pop
test
and
xchg
nop
inc
mov
bound
pushf
test
outs
in
fild
mov
das
rol
aaa
xchg
test
int
pop
std
cwde
xor
fdivp
push
sbb
push
and
fs
mov
mov
std
mov
xor
pop
push
cmps
and
mov
and
out
imul
inc
loopne
movs
cmps
scas
mov
sbb
fmul
lea
mov
aad
xchg
and
dec
cmps
mov
jecxz
daa
adc
pop
les
xchg
in
xchg
(bad)
pop
imul
(bad)
cli
hlt
gs
pop
mov
xchg
shl
dec
js
cwde
aam
jnp
adc
cli
adc
mov
loope
in
les
jnp
jno
xor
pop
sub
xor
hlt
jne
movs
es
daa
jmp
mov
sub
sar
(bad)
push
out
xchg
(bad)
rcr
ins
dec
iret
add
out
cmp
inc
ret
mov
test
mov
pop
aas
xchg
das
cli
not
jo
sbb
lea
leave
xchg
(bad)
and
cmp
test
test
ds
cli
sub
inc
mov
sbb
lods
out
movs
dec
out
xor
in
pop
out
cmp
push
or
add
cdq
or
(bad)
rcr
cmp
rol
in
mov
inc
cdq
aad
ds
and
jb
arpl
cmp
call
add
call
pushf
jmp
(bad)
jae
jmp
retf
loopne
(bad)
cmp
pop
test
add
cmp
cmc
lods
add
lahf
ja
imul
mov
lea
jns
sub
sub
mov
arpl
jo
ins
and
adc
bt
cmp
scas
cld
loop
ret
(bad)
bound
(bad)
aas
lds
pusha
mov
cmps
xor
push
cmp
inc
je
xor
test
pop
aam
push
cwde
cli
xor
lods
rcr
retf
adc
jg
loopne
loope
pushf
(bad)
aam
xchg
mov
pop
dec
out
sub
cmp
push
iret
xor
fsub
xor
jmp
ret
mov
sub
push
cmp
lahf
inc
sbb
shl
mov
stos
sti
repnz
clc
mov
push
fistp
in
bound
fild
or
inc
mov
lods
dec
cmp
fild
pop
push
xor
jns
cmp
jge
pop
enter
xchg
int
mov
mov
push
lds
icebp
mov
sbb
mov
bound
push
out
cmp
cmp
inc
inc
mov
cmps
mov
iret
mov
sbb
gs
fsub
xor
jb
sub
add
xchg
dec
adc
iret
sbb
sub
and
xor
jo
ja
push
xor
fidiv
mov
cmp
call
sti
push
mov
sbb
mov
fdiv
add
sti
add
int3
or
xlat
xor
mov
dec
dec
pop
mov
cmps
pop
cwde
mov
or
call
push
pop
cmc
or
(bad)
xchg
pop
div
mov
mov
popa
cmc
push
dec
add
sti
sbb
sbb
jmp
hlt
(bad)
(bad)
repnz
mov
ja
push
popa
xor
(bad)
jmp
rcl
mov
es
xchg
push
or
cmps
push
mov
xor
jns
sbb
sbb
jno
jnp
frstor
retf
fxam
xchg
jp
xchg
ret
sbb
xor
fistp
pop
add
sbb
ja
es
fstp
js
and
jmp
out
jno
outs
mov
lahf
dec
jne
cwde
inc
jo
fstp
inc
test
jb
xchg
pop
add
xchg
or
or
lods
(bad)
fdiv
xor
push
pusha
sbb
or
inc
out
mov
add
call
cmps
lods
push
fisttp
leave
mov
push
mov
push
test
xchg
dec
pop
mov
daa
adc
jo
psubd
mov
mov
inc
outs
push
pop
js
mov
adc
fs
cld
cmp
jbe
cmp
push
dec
add
loopne
das
mov
test
xchg
add
inc
push
adc
cmp
sbb
mov
cmp
xor
inc
pop
and
es
push
pop
or
mov
outs
push
std
mov
or
arpl
repz
in
inc
fmul
cld
inc
repz
inc
jmp
outs
or
xor
adc
jg
outs
or
rol
aam
xchg
mov
dec
je
push
cdq
clc
pop
inc
in
cmps
(bad)
mov
jecxz
iret
and
ins
mov
sbb
addr16
sti
jae
iret
inc
out
jae
inc
ds
jbe
xor
add
xor
jecxz
xlat
add
iret
mov
into
rcl
and
rol
imul
hlt
inc
dec
xlat
mov
sbb
in
scas
sub
pop
cmp
jecxz
movs
xor
stos
push
mov
jns
(bad)
scas
ret
sbb
or
xchg
imul
jmp
add
mov
xchg
cdq
dec
addr16
mov
sub
das
and
dec
cld
and
(bad)
adc
out
loopne
call
xchg
or
jae
mov
aad
cwde
jmp
pop
lock
xor
sbb
call
fdiv
ffreep
(bad)
inc
or
repz
mov
mov
mov
sbb
call
movs
enter
add
pop
jno
add
repnz
xchg
int
cmp
outs
cmp
cld
jo
cmp
sti
jbe
scas
out
adc
xor
(bad)
sbb
pop
dec
and
je
and
xchg
test
dec
pop
inc
adc
xor
xor
and
loop
add
in
pusha
rcl
and
or
call
sub
jb
dec
push
loope
or
div
or
cwde
push
sbb
jecxz
ror
jb
push
stc
dec
shr
and
sbb
cmps
xor
dec
adc
mov
mov
shr
sub
popf
xor
or
sti
ret
xchg
or
xor
scas
mov
add
push
cmp
imul
lock
shr
adc
mov
xchg
xchg
enter
outs
or
out
sar
pop
in
repz
xchg
mov
ret
sub
push
and
adc
push
out
mov
jno
sbb
stc
aas
adc
xchg
jne
out
and
loop
(bad)
fs
adc
xchg
dec
cmc
ret
call
jb
mov
and
out
sahf
push
ins
and
xchg
adc
sbb
mov
add
(bad)
call
ret
daa
xor
push
jecxz
call
cli
cmp
sbb
jb
pop
je
out
xchg
movs
and
sbb
nop
sub
in
test
leave
ja
ds
sub
xor
jno
jle
adc
inc
jo
nop
or
cwde
push
nop
in
iret
push
mov
stos
xchg
dec
mov
cmp
push
adc
mov
pop
xchg
lods
dec
jne
push
into
jmp
sbb
jae
mov
lods
movs
int
inc
dec
lock
mov
add
fsub
xchg
out
mov
sub
movs
push
dec
(bad)
sub
jns
fcom
(bad)
jge
or
jg
mov
fcmovbe
sbb
aam
and
vxorps
mov
xlat
pushf
push
cmovp
(bad)
mov
stc
pop
and
jns
pop
jne
lods
or
mov
stos
stos
cmp
aam
inc
mov
dec
add
jnp
jecxz
lods
lock
ds
mov
stc
add
(bad)
fs
addr16
xchg
int3
rol
adc
pop
xchg
sbb
adc
dec
add
neg
out
popa
scas
or
and
fdivr
mov
xchg
int
adc
jmp
(bad)
mov
push
dec
sahf
gs
and
dec
pop
std
test
jno
cmp
stos
dec
cwde
call
add
leave
sub
xchg
or
rcr
mov
xchg
pop
addr16
out
push
popa
and
sub
mov
mov
inc
inc
and
out
jmp
adc
in
xor
sub
mov
and
xor
fcomp
jmp
(bad)
sub
pop
adc
cmp
adc
retf
out
rol
outs
outs
sub
scas
adc
push
adc
xchg
sbb
stos
imul
pop
sbb
xor
cld
jle
cmps
or
fs
out
sbb
and
sbb
and
cwde
xor
push
jno
int3
es
cmp
mov
sub
and
dec
bound
jmp
jne
dec
lahf
repz
sbb
mov
xor
or
push
hlt
call
xchg
jns
dec
adc
add
std
xor
dec
dec
mov
mov
and
push
call
aam
(bad)
movs
pop
popa
mov
jae
lods
(bad)
in
mov
add
(bad)
lods
sub
cld
mov
aaa
jae
fimul
enter
pop
jge
in
js
cmps
mov
cs
jmp
inc
xor
lahf
xor
shl
jle
mov
push
inc
cmps
movs
bound
push
or
ss
cmp
push
mov
paddq
clc
fsubr
mov
pusha
push
inc
inc
ins
push
push
jnp
in
cdq
push
push
cld
(bad)
int
xor
add
sub
push
das
jecxz
cli
mov
stos
fcom
adc
jns
cmps
(bad)
(bad)
mov
ficom
sti
test
push
push
and
inc
idiv
jbe
cmp
sub
push
add
xor
push
cmp
and
inc
(bad)
jp
sub
test
outs
mov
jb
mov
dec
or
outs
xor
and
xor
lds
mov
rol
jecxz
icebp
iret
inc
sbb
xchg
test
and
fist
ss
daa
addr16
ins
shl
repnz
xor
in
and
or
add
fabs
xlat
push
mov
(bad)
out
clc
ffree
mov
adc
lds
push
int3
cmp
nop
xchg
stc
lea
and
cmp
out
pop
test
xor
leave
mov
inc
mov
mov
popf
sub
inc
jo
mov
xchg
sbb
lds
add
and
movs
frstor
es
jnp
out
push
dec
jmp
push
mov
push
repz
mov
cmc
mov
and
jp
(bad)
or
les
cli
dec
mov
fxch
cld
push
scas
out
mov
sub
cli
jmp
loop
pop
cmp
xor
fstp
cmp
int
test
ins
fdivr
mov
adc
jg
fist
or
jbe
repz
push
xchg
cmp
xor
lods
faddp
adc
sahf
dec
inc
retf
pop
jl
call
outs
out
je
xor
retf
xor
xor
gs
xor
jb
xchg
push
int
vpshufd
add
neg
pop
mov
inc
jp
and
outs
dec
xchg
adc
or
inc
ss
or
gs
mov
mov
aaa
push
adc
imul
mov
frstor
test
call
shl
add
sbb
in
aad
mov
movs
out
out
rcl
adc
les
pop
js
inc
retf
ret
popa
repz
jl
mov
mov
leave
inc
or
bound
int
test
cmps
fsubr
sbb
jb
enter
mov
leave
stc
pop
and
scas
mov
fld
pop
test
into
cmp
test
lds
jle
jl
mov
je
push
call
xor
(bad)
mov
xchg
popa
mov
jle
jb
mov
lods
std
sub
outs
mov
xor
xlat
xchg
lea
cmp
xor
fimul
mov
(bad)
int3
jno
cs
movs
ins
and
pop
aad
mov
and
not
and
scas
ror
stos
mov
xchg
xor
mov
mov
imul
add
push
iret
xor
adc
aad
jle
(bad)
cmp
and
(bad)
sub
and
jae
jl
call
sbb
cmps
ret
dec
je
fwait
sub
dec
jns
cmp
rcr
add
sbb
pop
dec
dec
inc
in
cmp
fadd
std
imul
fistp
pop
and
dec
and
pop
das
sub
movs
loop
test
jnp
popf
xor
(bad)
lods
es
stos
dec
rcl
sbb
mov
pop
or
fldenv
add
push
xchg
dec
dec
fimul
ss
jg
das
movs
sbb
sub
push
mov
inc
cmps
lods
cmps
mov
mov
(bad)
std
in
or
mov
in
imul
and
dec
cld
lods
outs
das
cmp
not
jg
adc
jle
dec
pop
daa
popf
lods
call
fistp
xchg
je
lods
mov
adc
out
jmp
jnp
inc
cdq
fadd
ins
rcr
xchg
enter
cs
jecxz
jmp
cmps
das
pop
xor
sbb
cmp
cmp
dec
inc
aas
enter
pop
dec
sahf
je
and
sbb
or
sbb
mov
pushf
(bad)
pop
jae
dec
test
jne
mov
mov
popa
or
jb
fdivp
iret
aad
dec
shl
gs
loop
mov
clc
xor
popf
lods
mov
popa
pushf
or
push
rcr
jmp
mov
mov
sub
ins
int3
pop
mov
dec
lods
aad
iret
push
mov
pop
cmc
fstp
pop
xchg
add
nop
stos
ins
mov
lods
mov
inc
or
xor
push
retf
jp
shr
and
mov
aas
cmc
jmp
lea
popa
rcr
neg
in
xor
xchg
dec
adc
stos
cmp
fst
retf
(bad)
sub
loope
out
popa
cld
js
js
inc
mov
clc
loope
xchg
sub
lds
scas
mov
popf
lds
xchg
leave
mov
hlt
lds
push
aam
push
sub
and
push
or
dec
or
push
scas
push
shl
or
xchg
xchg
stos
ret
jle
dec
mov
cmp
sar
stc
cmps
mov
jne
test
cmc
mov
add
jp
ret
bound
jmp
jb
shl
mov
sti
fadd
adc
inc
lods
inc
cmp
dec
rcr
pushf
cmps
xchg
iret
xor
cmp
inc
and
repnz
add
sub
fwait
jno
ins
gs
sub
fnstsw
jns
mov
retf
into
sub
sbb
leave
or
and
mov
push
int
sbb
inc
pusha
setg
cmp
sbb
aam
pop
(bad)
or
ins
adc
mov
lea
jb
cdq
push
stos
ret
and
inc
jnp
mov
cs
mov
mov
sahf
jnp
push
xchg
add
loope
stc
ja
cmps
fld
and
xor
push
inc
mov
pop
loope
test
dec
rol
loopne
repz
inc
outs
cs
adc
jae
imul
add
xchg
mov
fiadd
mov
lods
pop
mov
or
pop
in
cmp
test
pop
jg
pop
dec
(bad)
out
add
out
cmps
aam
test
iret
xchg
sbb
mov
push
pop
adc
pop
and
cli
or
xchg
jle
in
push
div
adc
imul
out
lock
and
mov
mov
mov
or
mov
arpl
cmp
out
mov
sahf
mov
cs
(bad)
(bad)
aas
adc
cmps
gs
dec
fdiv
push
adc
xor
pop
scas
ss
fisttp
ret
sbb
adc
adc
nop
jb
push
cmp
inc
mov
jmp
dec
jge
mov
clc
fldenv
adc
repz
mov
jecxz
lds
cmp
pusha
(bad)
sbb
out
pop
jno
(bad)
jle
fcom
stc
fst
and
cmp
les
dec
ds
out
seto
icebp
pop
inc
(bad)
fsub
adc
in
push
jb
neg
call
xchg
lea
xchg
inc
sub
sar
lock
lods
jg
pop
adc
cwde
add
and
pop
mov
sbb
test
mov
xchg
mov
popa
add
and
mov
lds
int3
xchg
(bad)
pusha
sbb
inc
xchg
push
mov
xlat
cmp
dec
stos
int3
mov
mov
enter
xchg
push
call
enter
jg
inc
cmc
mov
adc
sub
mov
addr16
in
inc
push
inc
inc
cmps
jp
or
lods
xchg
pop
(bad)
dec
in
cdq
sti
pop
shl
or
pop
mov
adc
ds
test
add
mov
and
xchg
retf
push
cmc
xchg
inc
aad
imul
lods
(bad)
dec
cwde
adc
daa
add
not
and
iret
lahf
out
neg
stos
xchg
sahf
push
cmps
mov
xbegin
mov
loopne
sbb
fldenv
push
adc
test
popa
fwait
hlt
lock
shl
inc
push
shr
leave
push
into
pop
cdq
call
add
rcr
jne
push
and
cmp
jecxz
or
mov
aas
add
ror
push
test
inc
add
iret
(bad)
inc
call
jne
lods
fld
dec
jg
pop
call
loopne
jno
adc
(bad)
leave
jl
loopne
(bad)
fldcw
out
imul
jo
fadd
sbb
or
and
sub
ret
retf
(bad)
mov
pop
xor
lods
in
sub
js
adc
or
or
mov
movs
sbb
outs
lea
inc
sub
(bad)
(bad)
lock
adc
pop
aad
scas
mov
outs
mov
or
cmp
mov
fnsave
pop
test
loope
xchg
int3
hlt
mov
gs
es
push
mov
out
int3
mov
inc
mov
fcmove
(bad)
and
pop
jecxz
push
scas
inc
mul
pop
mov
pop
out
les
add
add
jae
loop
add
repz
pop
dec
jns
xchg
xchg
sub
jecxz
or
xor
mov
inc
hlt
(bad)
cmp
iret
jg
xchg
(bad)
mov
mov
jmp
rcl
out
mov
fmul
add
dec
add
clc
(bad)
cmp
jecxz
mov
mov
std
xor
test
mov
add
push
fidiv
loop
inc
(bad)
rcr
push
fdivrp
imul
push
xchg
icebp
jmp
sub
xor
xchg
rol
xchg
jmp
push
loop
xor
adc
add
pop
and
adc
test
loop
enter
inc
and
or
ja
inc
ja
fadd
outs
fldenv
jns
sub
xor
mov
mov
iret
loop
cmp
push
adc
test
or
dec
push
pop
je
xor
jae
push
sbb
(bad)
mov
xchg
jbe
mov
add
xchg
mov
test
ds
xchg
pop
pop
jl
sar
icebp
mov
mov
push
sbb
ficomp
push
pusha
cld
or
lods
cmc
and
jmp
outs
repnz
or
xor
adc
push
mov
popa
add
add
pop
dec
sbb
jbe
(bad)
hlt
cmp
enter
lea
inc
jecxz
pop
inc
movs
movs
shl
xor
cwde
jge
and
aas
jo
hlt
sbb
shr
call
test
aaa
sbb
mov
icebp
inc
ret
pop
pushf
dec
or
pop
cmp
retf
dec
mov
sbb
and
mov
mov
movs
sbb
inc
pop
push
xchg
(bad)
scas
jae
mul
jne
or
outs
mov
inc
ins
fisubr
mov
movs
xchg
movs
(bad)
scas
and
in
adc
sub
inc
(bad)
sti
mov
jne
aam
js
int3
nop
inc
movs
and
jp
inc
pop
mov
jb
test
mov
jnp
pop
adc
sbb
jnp
mov
xchg
cmc
and
and
(bad)
cmp
fwait
movs
xor
xchg
or
inc
popf
inc
leave
imul
xlat
or
outs
xchg
sbb
sub
xchg
out
adc
cli
push
mov
mov
outs
fnstsw
out
out
jnp
mov
adc
pop
rcl
leave
ins
retf
icebp
cmp
dec
iret
mov
imul
and
jecxz
in
adc
fwait
mov
jle
push
clc
cdq
inc
repnz
popa
jmp
push
mov
loopne
sbb
and
xor
mov
mov
dec
sar
fst
jne
xchg
or
scas
xchg
mov
hlt
push
repnz
jne
ins
int3
test
xor
push
xchg
or
mov
xor
add
jno
mov
repz
and
les
(bad)
xchg
ret
neg
ret
call
sbb
jge
adc
or
xor
sub
(bad)
mov
das
inc
jno
sbb
aam
cwde
addr16
pop
xchg
fs
cmps
test
pop
mov
mov
inc
je
add
ss
fimul
lods
sbb
mov
and
rcr
scas
fild
sbb
es
dec
imul
jle
mov
out
adc
push
sub
sahf
cmp
push
je
sub
inc
mov
lock
(bad)
sub
test
sub
(bad)
imul
jae
and
hlt
cmp
mov
dec
xor
mov
fucomi
out
loope
jo
jne
frstor
pop
ss
adc
dec
jecxz
push
mov
clc
add
xor
xchg
add
pop
sub
mov
and
jbe
call
add
sbb
js
loop
push
cmovo
sub
mov
js
jp
gs
ins
sub
mov
cmps
mov
push
pop
push
mov
js
push
out
sub
popf
ja
cmp
(bad)
inc
std
and
daa
test
cmp
xlat
sti
sub
repnz
add
jle
and
inc
pop
pop
repnz
fucomp
das
inc
mov
mov
xchg
cmps
fmul
fwait
mov
or
hlt
sub
mov
or
scas
out
cmp
pusha
jge
mov
jmp
or
or
sub
std
mov
jno
jp
sub
xor
mov
mov
sbb
xor
push
lahf
loopne
retf
adc
jmp
adc
sub
in
and
fisttp
pushf
pop
fcmovne
popf
push
loope
jbe
dec
or
jl
cmp
test
test
jb
loope
push
cmp
cmp
aam
adc
push
pop
inc
mov
(bad)
adc
shl
dec
mov
or
in
repz
mov
inc
inc
jp
in
cmp
jno
and
out
cmc
and
adc
push
rcl
(bad)
jbe
mov
jns
fsub
(bad)
fucompp
cmps
test
mov
imul
cmps
cmps
and
ins
repz
arpl
xchg
aaa
dec
add
xchg
daa
inc
retf
pop
sub
add
sub
stos
sbb
fild
into
jae
push
mov
(bad)
jb
cmc
jmp
mov
xor
cmp
adc
or
in
mov
popa
in
jmp
pop
sub
inc
call
ins
rcr
xchg
retf
and
lds
mov
(bad)
fstp
test
ror
loop
(bad)
imul
inc
lahf
in
pop
imul
add
add
test
call
push
add
xor
push
test
dec
in
test
jmp
push
adc
inc
hlt
arpl
aad
and
out
jo
fst
enter
popf
xor
fdivp
adc
inc
call
(bad)
(bad)
jmp
lahf
sub
mov
int
dec
jmp
popf
out
call
popf
fistp
(bad)
push
ficom
adc
imul
jle
sub
pushf
mov
xchg
mov
addr16
(bad)
sbb
jbe
pop
stos
xchg
inc
push
inc
popf
jo
push
test
jmp
pop
and
xor
sbb
and
call
mov
jne
in
push
mov
and
fisubr
retf
ret
ins
jo
mov
data16
sub
imul
push
ja
test
imul
mov
adc
jo
and
cli
mov
pushf
cwde
push
add
adc
cs
fidivr
mov
push
es
or
lock
hlt
jg
and
jle
pop
mov
jo
mov
daa
aam
push
xchg
test
and
dec
xor
add
mov
fdivr
scas
es
mov
movs
sub
jg
push
mul
sti
rcr
sbb
or
dec
mov
das
jnp
mov
xchg
sub
shl
arpl
xchg
outs
xor
mov
(bad)
in
jnp
stc
cmps
cmp
add
pop
push
adc
inc
iret
in
popf
push
and
jmp
pop
jbe
jb
push
adc
fisubr
iret
xor
pop
aad
rcr
inc
jnp
jle
ret
sub
jb
jecxz
sub
mov
call
pop
mov
ds
pop
dec
scas
iret
into
dec
cmp
loope
aad
xor
ja
add
dec
xchg
push
mov
mov
aas
pop
fsub
retf
xor
mov
pushf
jle
xor
clc
pop
or
mov
mov
cli
cmp
dec
or
jle
out
jle
or
xor
push
mov
cmps
mov
jne
into
sbb
inc
jp
cdq
mov
iret
in
push
xchg
ret
rcl
jne
xor
repnz
push
xlat
cwde
fstp
push
lods
mov
je
cwde
fstp
push
out
xchg
pushf
data16
ds
fcmove
pop
dec
jb
pop
xor
mov
jl
dec
sti
inc
and
jns
adc
aad
jb
xlat
jp
sub
sub
inc
sbb
jg
ins
mov
out
sub
sub
jg
mov
mov
jno
mov
out
fild
cmc
mov
xchg
push
faddp
jbe
pop
shl
rcl
xor
and
mov
(bad)
mov
cmps
or
push
lea
mov
or
cdq
xchg
mov
jge
pop
not
mov
fadd
jnp
fild
mov
and
xor
mov
cdq
lods
mov
xor
in
adc
xor
ficomp
shl
pushf
pop
in
adc
jg
dec
aaa
shl
call
stc
fisubr
in
pop
mov
jo
sahf
jae
add
fisub
repz
aad
mov
fild
add
outs
imul
mov
xchg
or
out
pop
or
xchg
or
and
les
push
stos
mov
dec
xchg
stos
ret
and
push
sbb
inc
push
retf
or
mov
movs
fs
push
sub
dec
or
and
xor
aas
test
xlat
aam
push
dec
popf
call
cli
push
mov
js
mov
jge
jo
mov
and
sti
ficomp
xchg
pop
cmp
repz
jo
pop
add
mov
dec
push
mov
jbe
aam
mov
xchg
imul
clc
call
(bad)
pop
push
xchg
sbb
int3
je
repnz
xchg
cli
xor
ret
add
jmp
retf
sub
iret
mov
jbe
and
push
movs
fidiv
out
cmp
fbld
ret
mov
jnp
mov
dec
adc
jg
inc
xchg
scas
test
int3
sbb
cld
lods
stos
(bad)
and
dec
jnp
add
inc
stos
ins
mov
and
repz
mov
(bad)
cli
inc
jmp
sub
jge
gs
in
pop
xor
mov
and
jmp
xor
arpl
rcl
popa
ja
fstp
inc
mov
repnz
fwait
int
pop
gs
or
clc
jmp
(bad)
or
or
pop
cmps
jge
sub
and
lea
(bad)
push
sub
cmp
(bad)
aad
pop
popf
mov
inc
pusha
enter
sbb
mov
into
lds
clc
jmp
nop
mov
sub
and
push
mul
fcomp
loope
js
arpl
xchg
fcmovbe
jp
dec
bound
cmp
outs
fiadd
xchg
xchg
or
jge
adc
xchg
and
or
pop
xchg
add
inc
cmp
add
xor
inc
test
and
dec
adc
outs
add
dec
jns
out
xor
movs
mov
loop
(bad)
dec
mov
adc
push
fstp
inc
(bad)
nop
push
cmc
dec
push
cdq
test
and
aad
inc
cmp
push
add
loopne
mov
sbb
imul
push
jae
sub
mov
call
mov
and
out
pop
(bad)
dec
jns
mov
push
inc
xlat
icebp
xlat
ds
inc
mov
shr
stc
push
xchg
aas
arpl
clc
pop
lea
pushf
loop
sbb
stos
push
fwait
dec
scas
ja
lods
push
sbb
jae
movs
ret
fisttp
add
repz
loope
(bad)
callw
adc
add
fistp
sbb
and
lahf
mov
test
sbb
sub
xchg
xchg
imul
outs
repz
xchg
adc
push
div
jle
addr16
pop
ret
mov
fwait
cmp
inc
mov
lods
cdq
repz
inc
nop
mov
dec
sbb
dec
mov
mov
test
push
jmp
and
stc
inc
sub
push
je
sub
mov
iret
jmp
rcr
lods
cs
mov
mov
repnz
cmp
cdq
push
mov
dec
ds
fisubr
das
and
push
js
cli
add
sbb
mov
xor
pusha
loope
push
bound
or
cmp
xchg
aam
pop
dec
dec
mov
enter
inc
ror
mov
mov
ds
mov
movs
dec
iret
out
mov
aad
js
cmp
mov
hlt
jle
pop
xor
cmp
mov
dec
aaa
ins
pop
outs
call
or
sub
mov
pop
ja
leave
pop
mov
add
jmp
adc
mov
push
jb
(bad)
xchg
(bad)
div
push
fwait
mul
test
clc
mov
jmp
lods
lods
adc
sbb
inc
sar
sbb
sahf
mov
ins
jo
xchg
sbb
cli
pop
test
int3
mov
rol
adc
daa
fiadd
add
adc
pop
xor
xor
jb
adc
add
(bad)
ret
retf
pop
add
sub
mov
cmp
adc
jo
rcl
push
sub
outs
xor
ror
fidiv
(bad)
retf
inc
or
mov
test
xor
adc
imul
mov
aas
das
clc
mov
rol
jmp
or
and
mov
xchg
scas
enter
fist
xor
outs
xchg
jae
mov
out
out
mov
push
fistp
mov
push
sub
cmp
cdq
daa
pop
or
cmp
adc
ins
xchg
pop
dec
je
iret
cmc
or
jl
ss
test
call
aam
int3
mov
call
or
mov
call
mov
into
cwde
or
enter
and
(bad)
cld
jp
rol
mov
add
mov
push
cmp
xchg
call
out
jb
cmps
jnp
and
out
jp
mov
adc
xchg
xor
es
leave
dec
cmp
pop
test
sti
xlat
inc
or
xchg
hlt
mov
hlt
dec
(bad)
sti
adc
into
cmp
jmp
push
mov
jmp
call
pop
ja
pop
data16
aaa
imul
mov
or
mov
test
add
gs
nop
and
test
jp
fnstcw
add
neg
sub
cmp
test
jno
div
mov
je
cmp
test
adc
jne
dec
xchg
ins
mov
fild
xlat
adc
std
das
cli
clc
cmp
mov
inc
push
mov
int3
xor
pop
push
sahf
xchg
xor
mov
clc
cwde
hlt
mov
(bad)
addr16
jb
mov
push
sahf
repz
rcl
jecxz
loope
fistp
cmp
sbb
push
and
pop
push
lea
adc
es
ror
aad
mov
mov
push
gs
inc
sub
cwde
sub
xor
and
call
xchg
lds
mov
fstp
outs
(bad)
pop
int3
aam
fidiv
dec
inc
add
rcl
sbb
inc
jg
sar
xor
paddsb
jnp
pushf
ret
iret
sub
js
cdq
and
iret
xor
lods
push
cmp
(bad)
pop
ins
scas
repnz
je
push
and
inc
out
mov
mov
mov
mov
int3
pusha
jns
inc
aaa
js
sub
mov
and
add
daa
(bad)
jecxz
ss
je
ja
movs
or
mov
mov
or
jmp
repnz
jno
add
sbb
lods
cld
add
mov
inc
mov
out
lods
out
xor
sahf
add
pop
test
cmp
cmp
fpatan
push
clc
out
cld
mov
ret
in
dec
sbb
xor
sbb
cmp
add
add
dec
cmps
fcmove
movs
lods
add
push
in
pop
(bad)
jbe
sub
enter
vxorpd
js
and
out
sub
movs
js
dec
jle
add
mov
push
inc
gs
mov
xor
xor
mov
out
cmps
cmp
mov
pop
(bad)
scas
fwait
jge
mov
sub
fnstsw
nop
sbb
pop
and
jecxz
ja
cwde
ins
add
inc
cmp
mov
pop
(bad)
push
cmps
aas
xchg
adc
not
cmc
loope
add
loopne
mov
adc
sub
bound
xchg
cmp
xor
jne
dec
pop
fdivr
pushf
sti
push
pop
stos
add
and
xchg
or
mov
inc
sbb
inc
sbb
pop
cld
ja
aaa
pop
addr16
sub
addr16
iret
fisubr
fcom
dec
pop
ret
(bad)
(bad)
sub
inc
cmp
xor
pop
mov
mov
add
lods
jp
test
xor
jmp
cmps
jns
jmp
sub
std
fsubr
pop
xchg
inc
(bad)
jne
arpl
call
mov
sub
mov
call
mov
mov
cli
push
or
push
cwde
repnz
xor
add
pop
out
mov
xlat
jne
cld
or
sbb
and
dec
cmp
dec
hlt
call
inc
inc
fwait
clc
(bad)
jl
cmp
ds
addr16
in
jnp
or
imul
mov
je
adc
dec
pop
mov
push
in
jmp
xchg
pop
xor
fld
mov
sbb
int
test
pop
inc
in
mov
xchg
cld
jae
(bad)
jmp
aad
xor
mov
test
out
cli
aam
(bad)
into
xchg
loopne
xlat
pop
leave
movs
repz
jb
(bad)
push
sbb
mov
icebp
gs
push
dec
dec
mov
push
imul
mov
mov
movs
dec
inc
hlt
push
test
test
push
jg
push
xchg
inc
lods
cmp
jmp
cmps
movs
mov
pop
xor
jb
in
pop
jge
mov
imul
hlt
xchg
aas
sub
scas
lea
loope
out
xchg
(bad)
sbb
lock
jno
cmc
pop
je
fild
dec
or
and
add
rol
sbb
pop
in
sub
std
xor
add
mov
imul
in
and
jae
scas
out
js
jmp
add
pusha
push
sbb
shl
mov
adc
rcr
and
xchg
cmp
out
dec
jne
xchg
and
cli
movs
adc
inc
shl
leave
ror
test
cmc
mov
out
stos
loope
add
cmp
push
mov
sub
cdq
stos
push
jne
xor
pop
jle
pop
(bad)
push
xor
push
sub
movs
add
(bad)
dec
xor
test
xchg
dec
sahf
ds
add
pusha
mov
xor
add
out
int
mov
jmp
or
(bad)
sub
mov
jne
mov
mov
cwde
(bad)
int3
jbe
dec
sub
pushf
ja
test
pop
and
push
sub
call
ss
sub
out
loope
or
cmp
call
sub
add
or
cmp
loope
ud2
sub
pop
sub
sub
scas
add
adc
push
mov
dec
outs
push
and
leave
push
add
pop
div
cmp
fsub
and
pop
mov
aaa
dec
(bad)
sub
adc
daa
in
adc
xchg
call
call
ucomiss
ins
cmps
add
lea
aam
jb
pop
jne
xchg
xor
scas
les
cli
movs
add
mov
cld
sub
push
dec
fbld
fsub
jbe
mov
in
adc
dec
sbb
mov
xchg
push
adc
mov
cmp
dec
push
push
fwait
pop
std
ja
mul
outs
out
sbb
and
scas
push
xchg
es
jo
mov
movs
popf
mov
or
xor
test
lds
cli
xchg
mov
xchg
loope
cmp
cli
int
dec
pop
cs
nop
lods
cs
dec
hlt
or
in
sub
mov
fwait
mov
test
push
pop
adc
xor
sbb
pop
call
jg
push
mov
cmp
xor
add
aam
mov
(bad)
mov
dec
cmps
inc
je
das
mov
or
jecxz
lea
ja
lods
and
scas
push
mov
sti
movs
xor
xor
mov
pop
sti
ret
rol
jle
pop
mov
inc
rcr
sbb
fisttp
dec
dec
sub
adc
adc
pop
mov
sbb
and
in
push
pop
fyl2x
(bad)
xlat
push
movs
inc
and
jp
gs
jecxz
mov
pop
inc
sahf
sbb
xor
mov
rcl
out
sbb
and
div
adc
gs
xor
mov
out
cmc
scas
test
add
dec
std
rcr
adc
push
enter
ja
sti
(bad)
popa
je
cld
xchg
push
loopne
mov
inc
xor
fst
(bad)
dec
xor
dec
jns
call
shr
fcomi
and
mov
outs
add
out
mov
fisttp
daa
jp
xor
ret
and
fmul
js
outs
pop
push
lds
dec
pop
jbe
cmp
arpl
sub
fcmovnb
das
cmp
dec
jmp
adc
cmc
in
std
inc
and
dec
movs
jno
pop
pop
ret
out
cmp
mov
test
hlt
jne
cmp
into
mov
call
imul
scas
scas
iret
jl
mov
sub
xchg
(bad)
out
mov
cmp
aas
pusha
loopne
pop
cli
jmp
jbe
mov
mov
push
xor
push
xchg
enter
outs
mov
adc
pop
pop
out
push
jl
sub
mov
xchg
mov
std
jo
dec
inc
outs
dec
sub
ds
ja
movs
inc
dec
sbb
add
xor
aad
mov
fdiv
sub
pop
add
and
cmc
or
pop
sbb
jb
popa
ret
stos
repnz
rcr
jb
js
stos
hlt
(bad)
shl
dec
add
int3
fld
xchg
shl
sbb
nop
scas
add
adc
jo
fild
es
pop
jg
in
push
test
push
repnz
(bad)
xor
cdq
outs
or
xchg
test
jmp
or
idiv
jns
xchg
inc
(bad)
sbb
movs
cmp
push
xchg
sbb
or
lock
test
pop
push
fiadd
or
(bad)
ja
lea
call
fstp
(bad)
in
test
xor
jmp
dec
fisttp
inc
fwait
pop
mov
pop
mov
loopne
aad
pop
pusha
aas
inc
mov
or
mov
je
in
sar
mov
xor
(bad)
xlat
mov
jae
aas
jbe
das
push
dec
xor
out
xchg
fwait
mov
not
js
add
adc
aas
pop
pop
and
add
push
pop
retf
rcl
pop
fidiv
or
aad
cmps
rol
lods
cmps
cwde
add
sbb
cmps
popa
push
or
mov
cwde
pop
(bad)
xchg
inc
mov
ffree
outs
xchg
mov
add
jg
sahf
dec
inc
iret
push
test
cmp
dec
aas
sub
lea
xor
add
cmp
aaa
shl
ror
dec
mov
cmp
(bad)
mov
(bad)
js
jbe
retf
sub
gs
cli
leave
cmp
mov
cmp
rol
jg
daa
std
dec
adc
mov
jbe
popf
xor
dec
ret
cs
sub
cdq
test
aam
mov
pushf
jle
mov
push
ret
shl
sub
mov
mov
ds
bound
adc
mov
pop
mov
pop
rcl
lds
aad
fisttp
mov
push
les
cmp
fstp
mov
pop
dec
idiv
neg
cs
adc
dec
pop
cwde
and
mov
in
sbb
mov
in
cmp
sbb
sub
ret
je
out
or
out
and
and
xor
push
leave
lods
inc
(bad)
xchg
fimul
lods
cld
pop
sub
sbb
mov
fst
retf
jmp
jb
ret
or
xor
cwde
and
xchg
add
fbstp
enter
and
out
ins
rcl
or
rcr
ss
inc
xchg
fwait
dec
sbb
ds
jb
popa
je
add
das
push
cmp
adc
mov
lods
cmp
cs
push
arpl
jb
fadd
jne
xchg
cli
(bad)
adc
pop
stos
pop
sbb
imul
in
jbe
js
fistp
xor
inc
inc
mov
out
inc
sbb
push
ss
aam
xor
mov
and
repnz
xchg
mov
sbb
mov
mov
jns
mov
int
add
lods
jecxz
movs
leave
or
pop
cs
mov
mov
pop
movs
in
inc
rcl
add
(bad)
out
shl
scas
lds
pop
mov
sub
xor
ret
sbb
sbb
mov
imul
ja
mov
mov
sbb
mov
mov
stos
in
outs
stos
and
(bad)
and
add
pop
xchg
scas
and
sti
adc
jnp
leave
cs
adc
imul
pushf
xchg
and
mov
mov
or
das
in
pop
push
hlt
(bad)
fldenv
ror
cmps
inc
ins
imul
(bad)
cmp
cmp
ret
xor
jmp
mov
pop
icebp
xchg
and
(bad)
dec
inc
mov
scas
fidivr
xchg
push
popa
fistp
add
inc
inc
cld
shl
xchg
stos
test
jle
int
sbb
mov
pop
lods
cmp
cmp
pop
int3
fdivr
gs
dec
mov
retf
mov
or
mov
in
mov
rcl
rcr
test
bound
mov
mov
loop
out
mov
aaa
test
sbb
retf
repz
pop
fadd
loop
xchg
add
aas
mov
push
and
jge
sub
mul
dec
icebp
mov
dec
aas
mov
lods
popf
jno
xchg
out
pop
hlt
das
imul
cld
les
(bad)
rcr
adc
dec
sbb
mov
imul
sti
call
or
into
cmp
pop
test
cmp
aad
call
or
pop
adc
lods
pop
repz
xor
call
mov
es
lods
in
mov
push
or
aad
sahf
scas
mul
lods
imul
pop
jo
cmp
xor
inc
sbb
xor
jb
(bad)
rcr
and
jnp
(bad)
ins
mov
xor
aam
(bad)
sti
gs
hlt
test
jp
movs
cmps
mov
cmp
pop
push
stos
loop
sub
into
jmp
mov
inc
pop
push
fwait
mov
adc
sahf
xor
inc
push
mov
sbb
mov
cdq
cmc
or
mov
xchg
adc
or
in
or
imul
lock
or
aaa
and
enter
cdq
cs
dec
jmp
fiadd
hlt
mov
mov
inc
mov
cli
mov
dec
bound
push
mov
out
jmp
popa
inc
loopne
or
inc
jns
or
pop
push
push
test
xchg
fistp
xlat
ret
pop
fwait
xor
and
ins
mov
push
hlt
inc
sar
sahf
adc
sahf
sub
xor
add
and
cmp
pop
sub
add
or
xor
shr
out
inc
push
ret
imul
mov
daa
push
std
xchg
mov
jl
xchg
pop
test
retf
fld
cmps
mov
clc
jae
addr16
cmp
mov
inc
pop
lahf
inc
sbb
mov
clc
sbb
es
inc
or
cmp
adc
stc
int3
fwait
jmp
hlt
loope
mov
fbld
lods
jp
nop
and
aas
push
push
call
loope
fistp
adc
sbb
mov
jle
div
push
jl
sbb
aam
sub
test
fstp
dec
fisub
mov
xchg
push
push
pop
pop
mov
es
sbb
dec
push
cld
jno
scas
ins
inc
bound
shl
sbb
mov
aas
or
inc
xchg
xor
popf
and
stc
leave
ds
clc
inc
rol
sub
mov
in
jo
lahf
jmp
jae
int
mov
cmp
and
jno
fwait
inc
push
dec
enter
push
(bad)
pop
jb
inc
das
dec
loopne
arpl
mov
out
cmps
ret
mov
jg
es
dec
fs
enter
jnp
sub
into
ja
dec
clc
cmp
mov
mov
test
jno
mov
retf
sti
add
out
mov
jmp
add
mov
push
mov
push
xchg
sub
xlat
xor
mov
pusha
(bad)
test
pop
push
inc
popf
mov
xrelease
jo
add
mov
sbb
add
jmp
hlt
push
in
call
jl
add
mov
cdq
cmps
mov
fist
iret
in
std
fcmovu
ins
adc
stos
mov
punpckhbw
mov
(bad)
push
add
jg
add
js
mov
out
adc
pop
out
push
cs
call
rol
sahf
mov
inc
mov
jge
sub
sub
gs
pop
test
push
inc
loope
cmc
(bad)
adc
pop
mov
retf
bound
mov
add
jnp
loope
addr16
sbb
and
or
lods
test
xor
push
aaa
lea
and
add
mov
add
fwait
push
adc
(bad)
int
push
in
fstp
ins
sub
push
aas
or
call
pushf
in
adc
push
in
inc
loopne
test
xchg
mov
icebp
mov
std
fiadd
sar
test
jge
es
fwait
ret
sbb
or
out
stos
mov
ror
cmp
call
sub
enter
es
mov
je
test
push
xchg
xor
ss
popa
mov
vpacksswb
dec
test
adc
and
popf
xlat
popa
(bad)
cs
xchg
jno
out
hlt
inc
data16
pushf
not
mov
into
retf
mov
xor
ret
daa
sub
add
lock
lock
and
das
cmp
and
add
inc
out
or
mov
and
fistp
or
ret
dec
in
sbb
xchg
xor
or
out
jb
jmp
shl
xor
xchg
mov
fild
cwde
xor
mov
outs
fst
in
inc
add
test
mov
mov
fs
sar
sub
rcr
push
call
test
repnz
stos
icebp
or
daa
and
pop
lods
cmp
aam
dec
hlt
add
or
lock
out
or
fs
jb
sti
add
lods
xor
sub
cmp
adc
stc
inc
test
push
push
or
fdivrp
movs
mov
sub
sub
loope
mov
pushf
mov
popf
mov
cwde
addr16
in
cmp
sbb
pop
xchg
ja
out
fsub
push
(bad)
fistp
and
sub
xchg
popa
arpl
xchg
mov
dec
fist
dec
push
dec
loop
rcr
or
sub
in
jnp
aad
xchg
mov
dec
fld
xchg
xchg
mov
push
push
pop
rcl
or
inc
jle
mov
push
push
sbb
sub
mov
mov
sub
jae
lea
dec
dec
aam
js
sbb
addr16
fwait
add
push
inc
fucomi
(bad)
popf
adc
push
es
lahf
imul
jnp
in
imul
xchg
es
pop
mov
xor
inc
ja
xadd
mov
cmc
push
ins
mov
dec
out
imul
pop
push
lds
xor
adc
les
retf
popf
and
repnz
dec
nop
adc
pop
test
stos
xchg
xor
jo
xchg
(bad)
call
xor
lods
sub
dec
xor
fldenv
scas
repnz
aam
cld
inc
xlat
inc
jge
cmc
out
dec
clc
or
clc
shl
mov
adc
les
in
xchg
sahf
clc
mov
pop
pop
(bad)
jmp
cmps
popa
add
or
sbb
iret
mov
dec
gs
jmp
inc
fwait
mov
fs
in
fdivp
mov
pop
cmp
cwde
sbb
mov
pop
mov
pop
out
pop
pop
ds
cmp
ror
fsubr
dec
aam
js
pusha
sbb
adc
add
inc
iret
movs
dec
jns
mov
mov
leave
add
push
or
ins
cmp
sub
and
inc
pop
adc
or
icebp
push
or
mov
jg
mov
xor
cdq
aaa
sbb
push
mov
ret
in
ds
jo
mov
and
mov
push
jbe
cmps
ret
pop
das
daa
xor
sbb
sub
dec
stc
lods
dec
ficom
or
xor
outs
outs
bound
retf
sbb
mov
xchg
cwde
mov
sbb
mov
jns
cld
shl
retf
scas
ins
xor
pop
xlat
popa
xlat
dec
mov
push
pop
call
sub
jae
fisub
push
push
ins
push
out
sub
call
movntps
push
fld
push
push
jne
bound
jge
(bad)
pop
mov
cmp
cmp
shl
dec
pop
xor
arpl
sbb
(bad)
test
mov
dec
in
out
cmp
xor
fld
mov
adc
dec
pop
jmp
xlat
sbb
jge
sbb
sbb
cmps
fnstsw
dec
shl
std
mov
dec
hlt
jle
cmps
sti
jne
mov
push
cld
outs
nop
sbb
repz
cli
ss
pop
pusha
fadd
scas
inc
icebp
dec
jmp
aad
out
fxch
mov
sbb
jns
(bad)
jmp
inc
sub
jp
mov
push
sahf
sub
jmp
daa
add
add
imul
mov
xor
mov
ror
xor
lahf
dec
mov
pop
or
(bad)
out
repz
jl
sbb
jecxz
dec
fbstp
test
sbb
in
inc
push
mov
pushf
test
xor
in
pushf
inc
xchg
mov
or
mov
mov
(bad)
(bad)
push
and
jno
repnz
lods
sub
xor
mov
cmp
or
inc
repz
dec
into
xchg
cmp
push
rcr
mov
cwde
sti
(bad)
leave
aam
xor
out
add
(bad)
ds
or
stos
out
and
mov
hlt
out
stc
jno
sub
mov
push
cmps
jbe
jnp
das
inc
mov
test
jno
xchg
je
mov
ja
stos
and
mov
sbb
in
dec
cld
imul
ss
dec
cli
inc
cdq
xchg
mov
sub
popf
sub
inc
stos
popf
aas
jmp
mov
dec
pop
rol
loope
jmp
cmp
pop
aaa
inc
xchg
jmp
fs
push
movs
dec
mov
sub
fcmovbe
cmp
or
sar
jmp
shr
mov
mov
cmps
mov
pushaw
jo
ret
cdq
out
gs
and
int
add
mov
or
jl
sub
nop
rcr
xor
fidivr
es
push
ror
xlat
push
xor
add
xor
push
retf
hlt
lods
xchg
test
adc
and
movs
push
pusha
dec
sub
jno
pop
fs
pop
sar
sbb
imul
mov
repz
mov
nop
sub
inc
in
add
mov
jne
pop
mov
jmp
pop
sbb
add
ret
dec
jns
ret
cmp
fiadd
(bad)
mov
add
pop
cmp
ss
(bad)
pop
mov
xchg
mov
mov
cdq
aas
repz
mov
adc
in
jae
mov
ja
ins
ins
sbb
push
pop
popa
lock
cdq
xchg
add
loopne
jp
xchg
xchg
adc
sub
in
inc
repz
movs
pop
hlt
jmp
or
adc
outs
push
jle
xchg
and
push
shr
push
jp
or
loope
es
jle
loopne
jmp
outs
ror
mov
adc
sti
jmp
xor
(bad)
pop
jae
int
scas
inc
and
stc
mov
movlps
xor
adc
xchg
sbb
push
jnp
and
pop
dec
daa
cmp
jno
jmp
into
dec
dec
out
test
daa
fdiv
dec
cmp
and
std
leave
jp
jecxz
pop
shl
daa
mov
add
fstp
retf
pop
or
inc
push
mov
xchg
(bad)
adc
dec
retf
xor
inc
test
mov
and
add
and
and
int3
cli
sbb
xchg
xchg
(bad)
test
stc
(bad)
into
and
movs
or
js
int3
mov
ja
fwait
inc
xchg
dec
cmp
and
jg
repnz
fs
pop
nop
shl
(bad)
push
mov
mov
and
lahf
cmp
jne
js
and
mov
xor
sbb
cmp
scas
bnd
js
jne
out
add
retf
dec
inc
(bad)
or
stc
call
push
sbb
dec
cmp
(bad)
cmp
xor
popf
(bad)
aam
gs
vmptrst
sbb
pop
adc
mov
stc
aam
push
cmps
mov
hlt
iret
adc
in
outs
rol
shl
jbe
test
and
mov
data16
inc
cmp
(bad)
test
sub
sbb
or
call
stos
fst
fstp
lds
outs
shl
jne
dec
cmps
ret
inc
jmp
sar
enter
push
mov
push
push
fidivr
or
and
push
jnp
pop
fsubr
xchg
sub
xchg
fnsave
int
mov
jae
out
add
or
xor
adc
and
adc
jle
pop
iret
leave
xchg
or
jp
inc
nop
cwde
inc
sar
push
test
xchg
jmp
retf
in
push
dec
imul
push
add
push
in
inc
sub
gs
fucom
repnz
xor
pop
(bad)
cmp
mov
cmp
das
stos
push
mov
jge
sahf
jb
push
pop
jg
lahf
push
(bad)
stos
repnz
mov
pop
fwait
add
adc
dec
es
adc
ins
push
xchg
cmp
loopne
push
jnp
mov
mov
(bad)
ror
mov
adc
popf
into
mov
les
jmp
(bad)
in
jb
sahf
(bad)
xchg
lods
(bad)
aaa
jl
std
retf
dec
outs
inc
loope
xor
pop
cli
out
icebp
xor
test
cdq
popa
aam
popa
in
repnz
mov
cmp
cmp
xchg
jno
sub
or
fwait
xchg
cmps
add
jl
lds
mov
adc
out
dec
mov
sub
cdq
aam
mov
movs
lahf
pop
cmp
cwde
push
sub
out
rol
cli
jne
popa
xor
ret
int3
inc
cli
xchg
movs
push
lods
inc
push
out
mov
mov
pop
push
xchg
aad
dec
xchg
and
ja
dec
int
jecxz
cmp
cmp
adc
cmps
hlt
dec
dec
jbe
je
jl
es
add
inc
mov
jmp
scas
loop
shr
cmps
aad
aas
aam
bound
int
cmpps
inc
inc
dec
outs
add
outs
xor
add
or
lea
mov
adc
ret
test
lea
cmp
sahf
adc
fld
rcl
call
push
or
xor
push
inc
shr
ins
mov
xchg
mov
lock
and
hlt
sbb
dec
push
dec
test
cmp
dec
mov
jecxz
pop
xchg
test
adc
dec
(bad)
icebp
icebp
cs
jb
xchg
jb
jge
lea
imul
pushf
sub
cmp
mov
cmps
mov
fstp
retf
sub
je
sbb
push
mov
xchg
add
cmps
fldcw
jecxz
loopne
or
data16
repz
mov
mov
mov
int
mov
mov
inc
fs
std
dec
sbb
jle
lahf
(bad)
mov
ja
clc
sbb
aaa
push
cld
out
iret
call
sbb
cmps
or
ror
fldcw
adc
jno
ret
dec
stos
mov
add
int3
push
adc
pop
pop
jl
pop
ins
loopne
pop
mov
dec
out
push
lods
test
sbb
mov
cdq
and
and
(bad)
add
mov
(bad)
add
pop
or
int3
add
aad
inc
test
ins
retf
mov
inc
ret
cli
sbb
mov
mov
pop
bound
aaa
imul
pop
mov
sub
push
enter
inc
dec
jne
neg
js
int3
mov
push
xor
test
mov
(bad)
cmp
mov
in
mov
inc
xor
test
stc
arpl
inc
push
imul
jg
imul
jno
cmp
lods
push
sub
push
repz
cmp
mov
fdiv
push
dec
int3
imul
stc
jb
cmp
ret
xor
mov
ret
pusha
or
push
pop
push
mov
mov
fsubrp
pop
daa
sub
ret
mov
cmp
scas
sbb
sti
dec
or
inc
mov
push
and
jg
or
pop
dec
mov
inc
shl
loop
fs
and
xchg
jg
xchg
in
hlt
push
cmp
adc
inc
and
nop
nop
lods
sbb
cli
movs
sbb
push
retf
fld
leave
jge
and
pop
jno
out
into
push
push
(bad)
push
loop
loop
sub
iret
xchg
lods
retf
imul
mov
pop
cmp
ins
lds
jmp
enter
scas
xlat
mul
push
push
adc
stos
neg
fsubp
or
jmp
xor
stc
mov
rcr
cmp
shl
test
cmp
aad
xchg
pop
aaa
push
cmp
push
aaa
jle
out
sub
xor
and
dec
fsubr
jns
sub
xchg
add
cmps
pop
stos
mov
jbe
lods
mov
leave
xor
loop
and
test
(bad)
push
push
outs
bound
jbe
call
adc
dec
lock
dec
mov
sub
or
xor
pop
mov
xchg
test
mov
jbe
pop
jnp
in
xchg
and
test
jmp
add
sahf
ret
cmps
add
push
(bad)
out
std
sub
xor
loopne
cmp
and
sbb
mov
in
imul
rcr
xor
pop
mov
(bad)
fwait
inc
pusha
(bad)
ror
add
xchg
jns
xlat
push
call
push
add
dec
xchg
inc
xor
ds
(bad)
fs
arpl
in
pop
fisub
dec
add
out
mov
clc
scas
adc
add
ins
out
xchg
and
mov
adc
jecxz
fistp
hlt
adc
aas
enter
cdq
xchg
mov
lock
fadd
adc
xchg
fisttp
add
out
or
mov
add
popa
xor
aas
ds
jecxz
fcomp
xor
test
mov
fwait
or
daa
xchg
xor
adc
bound
mov
sbb
sbb
mov
aaa
cmp
ins
call
aas
cmps
adc
push
cmps
inc
jge
adc
xor
ror
add
(bad)
int3
out
and
repnz
test
sub
jmp
gs
inc
ret
clc
repnz
sahf
ret
inc
and
sub
outs
ds
mov
mov
sub
inc
xor
in
loopne
mov
jne
jo
out
jg
xor
cmp
imul
adc
pop
into
dec
jbe
ss
int
pop
ds
mov
mov
pop
xchg
nop
enter
xchg
and
push
test
cmp
bound
pusha
inc
in
sub
push
jmp
adc
hlt
push
mov
les
ins
std
iret
leave
pop
test
jg
ins
leave
pusha
sbb
xchg
mov
aas
dec
in
icebp
iret
fs
mov
aad
ret
aaa
cmps
and
mov
daa
test
addr16
aad
xchg
pusha
out
mov
inc
retf
push
push
fwait
(bad)
xor
ins
mov
into
pop
test
in
or
and
outs
jg
icebp
mov
cmc
cmp
and
xchg
out
sub
cmp
adc
pop
jge
jae
push
mov
adc
fcomp
inc
test
mov
mov
add
cmp
dec
adc
sti
mov
clc
and
push
cmp
pop
inc
das
inc
icebp
lods
adc
push
dec
iret
mov
fucomp
sti
dec
(bad)
jne
mov
in
ss
ret
mov
daa
sbb
xchg
inc
push
fcom
jp
adc
or
sub
sub
add
mov
call
shl
idiv
mov
push
cmp
sub
stos
int3
sub
out
shl
(bad)
fsubr
jbe
or
les
add
pop
ds
sar
xchg
jl
pusha
vdivps
sub
in
repz
xchg
xchg
xor
mov
out
or
or
lea
psubsb
aam
lds
or
dec
pusha
pop
fs
xor
cmp
scas
sbb
xor
popf
mov
pop
inc
pop
sbb
adc
daa
test
jns
mov
add
fs
out
sub
push
aam
addr16
lea
adc
out
jo
mov
fidiv
dec
cli
jno
mov
cmps
sbb
enter
into
jp
mov
cmp
add
inc
(bad)
test
and
cmps
imul
enter
push
fistp
jno
mov
push
pop
mov
retf
mov
hlt
stos
(bad)
in
in
repz
popf
cli
xor
(bad)
dec
mov
push
out
fadd
sahf
add
sbb
scas
dec
je
cmp
arpl
loop
test
jbe
dec
lea
push
cmp
test
(bad)
cdq
xchg
cmp
xchg
xchg
or
mov
adc
cs
rol
lds
cmp
cdq
add
cld
loope
arpl
push
sub
rdpmc
ins
out
inc
pop
lahf
clc
push
out
sbb
ret
mov
and
(bad)
test
int
fdiv
aad
xor
in
mov
mov
sub
push
mov
mov
jnp
std
mov
xchg
aad
stos
shl
in
push
retf
loope
test
xchg
lods
addr16
neg
xchg
rcr
ret
dec
fisubr
sbb
mov
push
jge
mov
test
ins
gs
jo
test
adc
xor
cld
mov
jmp
in
or
push
outs
icebp
push
cmp
(bad)
(bad)
sti
jns
jmp
mov
add
jne
mov
(bad)
push
jmp
test
sbb
cmp
pop
pop
test
adc
or
sbb
add
push
xchg
je
int3
mov
lea
mov
addr16
mov
out
and
int3
push
ins
inc
cmp
lea
mov
xchg
dec
addr16
(bad)
sbb
jbe
mov
and
hlt
bound
hlt
pop
push
dec
cdq
and
adc
jmp
xor
lds
mov
add
mov
or
push
jg
les
sbb
fsubrp
test
sub
ret
xchg
add
int
pop
call
int3
fsub
xor
cmc
nop
xor
stc
dec
inc
clc
inc
cld
ins
mov
loopne
in
jnp
pusha
push
xchg
pusha
dec
adc
and
sub
jbe
shl
mov
ror
inc
loop
pop
jecxz
aad
cli
or
jnp
inc
js
mov
out
mov
mul
mov
stos
jl
mov
daa
dec
ficomp
or
or
fnstenv
push
mov
sbb
mov
inc
inc
mov
rol
cwde
xchg
push
addr16
cmp
pop
imul
pop
repz
shl
push
aam
leave
pop
dec
or
bsf
fldenv
mov
or
and
cld
inc
aaa
jb
shl
test
push
out
dec
pop
mov
sub
pusha
loope
sub
sbb
push
in
outs
arpl
cmps
idiv
repz
push
push
rol
(bad)
dec
leave
push
jb
adc
dec
mov
add
shl
sar
xor
add
jg
or
ret
aaa
lea
push
mov
push
in
lea
mov
int
rol
loopne
sub
mov
test
jmp
repnz
mov
(bad)
data16
js
mov
cmps
mov
inc
mov
add
push
push
mov
arpl
int
stos
js
inc
mov
pop
jno
xor
(bad)
fstp
inc
sub
dec
clc
in
fnstenv
(bad)
jle
int3
cwde
sub
and
and
or
gs
inc
or
push
fs
(bad)
xchg
cmp
rcl
repz
lock
mov
loope
push
jne
xchg
sbb
test
mov
adc
(bad)
popf
fiadd
sub
loop
out
es
xchg
mov
les
cmps
jnp
mov
iret
pusha
add
push
sar
out
sbb
and
out
pop
adc
xor
and
ja
fadd
scas
dec
lods
jno
pop
push
int3
or
jmp
data16
(bad)
xlat
inc
fldcw
add
sub
push
add
mov
jnp
push
xor
xchg
dec
mov
outs
(bad)
imul
adc
or
gs
push
dec
scas
dec
push
mov
retf
sti
(bad)
push
xchg
push
jo
mov
pop
cdq
aad
push
pop
and
mov
cmp
rol
icebp
(bad)
jno
test
sbb
sub
cmp
ret
xor
out
shr
(bad)
mov
or
rol
jbe
xor
std
or
xor
cdq
mov
fdiv
cmp
jmp
push
pop
mov
loop
aaa
pop
rcl
cmp
sbb
dec
outs
lock
sbb
cmp
imul
bextr
dec
lds
xchg
push
(bad)
push
push
xchg
xlat
fild
fistp
mov
jbe
cmp
hlt
ss
out
mov
sub
adc
cmp
dec
xor
shl
clc
mov
sbb
jmp
dec
mov
fs
dec
jo
pop
or
sbb
jge
fmul
push
sti
popf
daa
mov
xchg
and
pop
pop
sub
ins
xor
aas
sar
je
dec
das
adc
addr16
mov
mov
push
mov
leave
and
mov
stos
sbb
(bad)
or
dec
jmp
ja
inc
arpl
pop
div
xchg
dec
cmp
cmps
pop
dec
pop
adc
or
hlt
out
mov
fild
sbb
cli
and
rcr
mov
js
cld
add
into
push
push
and
movs
cmp
pop
adc
xchg
jno
inc
inc
fisttp
mov
mov
(bad)
mov
clc
xchg
out
inc
mov
sub
cmp
test
mov
loope
adc
jb
rcl
ret
std
jle
rol
jne
test
pop
sub
ins
sub
cmp
pusha
jle
loopne
adc
inc
mov
jbe
inc
inc
jbe
movs
popf
addr16
or
push
and
and
add
mov
test
inc
xor
sbb
retf
je
mov
sub
inc
ret
jmp
(bad)
retf
test
enter
into
hlt
pop
ins
pop
push
pop
mov
movs
pop
addr16
jmp
iret
rcl
iret
pop
mov
shl
add
xchg
rcr
add
adc
push
mov
repnz
in
push
adc
xchg
push
pop
gs
push
inc
inc
retf
add
stos
or
push
xor
pop
adc
sbb
fsubp
push
inc
popa
es
aaa
inc
and
mov
shl
jns
call
xlat
add
push
jo
sti
cmps
add
in
in
mov
mov
test
sbb
mov
jg
mov
xor
sahf
icebp
aaa
imul
xor
imul
adc
fnstcw
hlt
loope
push
ficom
cmp
mov
iret
mov
(bad)
lea
and
mov
pop
stos
leave
push
mov
jo
inc
dec
cmp
pop
pushf
loope
push
mov
je
sbb
shl
(bad)
retf
test
jns
push
xchg
sub
shr
ds
pop
or
(bad)
dec
push
dec
jne
movs
pusha
popa
fiadd
dec
xchg
or
rcl
mov
(bad)
mul
or
inc
jle
sbb
pushf
sub
mov
je
jge
jecxz
dec
inc
push
int
iret
cmp
call
fcom
sub
push
pop
rcr
popa
xchg
sbb
cmp
rol
clc
bound
push
mov
and
out
iret
xor
or
out
pop
addr16
jp
sbb
xchg
dec
cdq
stos
adc
call
cs
push
repz
lock
ror
ins
inc
stos
mov
add
mov
sub
jmp
xor
xor
jns
iret
mov
mov
int3
rol
ds
and
out
ret
adc
jmp
adc
jl
push
out
scas
lods
and
dec
push
add
(bad)
add
(bad)
or
pop
and
mov
sti
call
xor
mov
and
jmp
dec
mov
mov
push
loopne
fwait
mov
int3
sbb
cbw
push
pop
ret
xchg
push
aad
add
ja
pop
retf
stos
outs
fisttp
jge
mov
sbb
call
idiv
push
mov
sahf
or
add
aad
lds
sbb
out
push
cmp
outs
inc
pop
ret
dec
xor
inc
lods
add
dec
cmp
push
add
sbb
xor
lds
xlat
xchg
in
mov
push
clc
and
push
pop
stc
add
(bad)
stos
or
dec
mov
imul
dec
cmp
cld
scas
retf
cmp
pop
push
iret
out
mov
ror
push
sub
scas
jnp
cmp
and
mov
pop
lods
add
sbb
(bad)
pop
pop
pop
mov
push
cld
mov
mov
jns
fsubp
inc
mov
xchg
jl
mov
out
dec
xchg
adc
nop
aaa
sub
repnz
mov
pop
jno
mov
cmp
mov
pop
nop
push
jns
cmp
mov
into
cmp
adc
or
xchg
push
call
add
inc
faddp
cmc
cli
call
retf
xchg
and
in
sub
push
je
or
pushf
lods
fsubr
xchg
popa
mov
sbb
stos
sub
mov
mov
jmp
loope
mov
mov
sbb
ins
xchg
and
es
lsl
shr
pop
sti
inc
ins
loop
mov
jnp
aas
je
pop
out
mov
xchg
fisttp
xor
(bad)
cmp
jo
enter
or
daa
(bad)
xchg
imul
fdivr
push
push
ret
cld
daa
je
(bad)
pop
mov
dec
call
(bad)
in
pop
or
sbb
repnz
jnp
cmps
fs
fs
cli
(bad)
setae
idiv
clc
sahf
adc
pushw
push
int3
fidivr
in
stos
xchg
sub
addr16
adc
mov
mov
js
xor
out
inc
xchg
adc
mov
and
rcl
xor
lock
jno
stos
mov
add
repz
and
fs
cmp
aad
dec
aam
bnd
lods
push
cmc
stos
pop
retf
pop
and
xor
xchg
(bad)
xchg
and
sub
dec
cmp
mov
push
push
sti
xor
xchg
push
sbb
cld
pusha
dec
or
mov
pcmpgtw
repz
out
ret
sub
mov
(bad)
pop
push
psubusb
pop
int3
inc
neg
pop
std
sbb
sub
inc
xchg
push
sub
jmp
mov
cmc
stos
cld
retf
retf
ret
(bad)
inc
cmp
loopne
pop
push
neg
std
bound
loop
sub
popa
mov
cmp
pop
inc
and
dec
push
aam
sbb
mov
int
das
(bad)
loopne
and
adc
pop
sahf
sbb
cli
adc
arpl
inc
(bad)
lea
xor
pusha
inc
add
mov
pop
js
aam
(bad)
push
push
mov
dec
xchg
lea
xlat
fs
xchg
push
(bad)
shl
sub
cmp
jp
mov
nop
lea
hlt
xchg
push
mov
fsubr
mov
cli
sahf
rcl
pop
clc
push
or
pop
imul
retf
and
(bad)
cli
push
mov
call
data16
(bad)
iret
bound
sub
and
cmp
outs
sbb
neg
push
xchg
in
sub
jno
clc
movs
in
xchg
mul
sbb
adc
sbb
(bad)
int3
rol
and
fnstsw
bswap
sub
inc
cmp
sbb
(bad)
iret
(bad)
loop
dec
jnp
dec
popa
stos
mov
shr
imul
aaa
dec
xor
push
inc
xchg
push
std
(bad)
into
loopne
inc
retf
fild
ins
cwde
push
(bad)
or
dec
in
lods
mov
cmp
addr16
(bad)
ficom
iret
push
out
jo
mov
jb
and
dec
lock
nop
adc
add
push
xchg
jg
push
ffreep
stos
push
mov
and
(bad)
mov
ins
mov
rcr
shr
in
jae
push
push
pop
fidiv
mov
mov
fcom
leave
xchg
out
mov
ins
mov
pop
fisttp
mov
pop
iret
outs
inc
inc
fdivr
test
imul
shl
cli
xchg
mov
add
loope
out
pushf
(bad)
aam
and
xchg
stos
mov
xor
lods
jmp
mov
lods
cmp
sub
xchg
or
imul
cmp
jle
sbb
xor
mov
cmc
imul
fild
xor
stos
push
add
test
aaa
mov
add
sar
mov
enter
add
mov
mov
ret
shl
adc
mov
inc
daa
mov
das
jbe
cmp
movs
popa
in
fs
fisttp
jmp
out
xchg
push
test
shl
ror
or
call
xor
lea
or
cmps
fwait
aas
inc
sub
jge
aas
scas
sub
sar
sti
jmp
pop
jo
enter
inc
lea
sub
aas
cmp
into
adc
add
or
ror
fstp
sbb
cwde
mov
cmp
push
pop
adc
inc
push
imul
cmp
and
inc
mov
ds
pop
adc
enter
xchg
jno
pop
fst
mov
(bad)
ja
xlat
mov
and
movs
in
inc
ins
stc
rcr
sbb
out
mov
stos
dec
push
into
or
add
mov
mov
push
pop
nop
and
shl
movs
pop
call
in
mov
aaa
test
aad
clc
cmp
dec
sbb
movd
loopne
fdivr
xchg
leave
mov
ins
(bad)
xor
scas
xchg
sbb
push
jp
daa
inc
push
mov
daa
std
cmps
push
jmp
hlt
adc
dec
xchg
dec
xlat
retf
out
push
aaa
or
aam
(bad)
lods
test
pop
ja
jg
jmp
es
mov
adc
shl
aad
mov
xchg
ds
push
(bad)
mov
pop
popa
(bad)
mov
cmp
or
hlt
cdq
sbb
dec
dec
adc
je
mov
(bad)
mov
or
cmc
js
mov
(bad)
pop
imul
xchg
cmp
push
pop
jmp
sub
xlat
add
out
sub
shr
imul
dec
leave
je
out
call
sbb
sbb
xchg
or
pop
test
cmp
sbb
push
inc
imul
adc
push
and
push
pop
cwde
repnz
rcr
pop
adc
in
push
jmp
add
jmp
lods
mov
setbe
pop
cmp
stos
rcl
gs
ret
lds
mov
pop
cli
pop
loopne
xchg
ins
push
std
rcr
mov
nop
push
lods
sub
push
(bad)
adc
fsub
add
mov
inc
fdiv
hlt
mov
add
xchg
(bad)
push
cmp
mov
inc
and
(bad)
stc
(bad)
jo
pop
inc
psubusw
ret
fwait
les
inc
out
(bad)
stos
push
stos
jle
mov
test
movs
inc
xor
test
fldenv
out
sahf
stos
cdq
and
fadd
cld
aaa
jmp
jp
push
(bad)
in
mul
cmp
adc
in
push
sub
nop
lahf
mov
xchg
mov
jl
lds
scas
out
mov
pop
mov
ret
cmp
dec
adc
imul
popa
cmp
int3
inc
mov
mov
inc
neg
ja
fcom
add
je
into
push
inc
add
dec
mov
imul
lahf
mov
xlat
in
js
adc
dec
imul
dec
dec
xor
sti
les
pop
int
outs
fwait
mov
push
fisttp
add
push
mov
mov
dec
and
adc
cld
cmp
mov
push
fcom
mov
out
imul
mov
adc
pushf
lahf
(bad)
mov
sub
inc
push
retw
cwde
dec
cmps
loop
lock
imul
into
and
xor
jle
shl
(bad)
mov
cld
(bad)
mov
fld
gs
loope
and
xchg
or
push
ret
dec
dec
icebp
jl
cmps
adc
push
fdivr
xor
cmpxchg
loopne
test
cmp
fidiv
sar
mov
dec
mov
xor
jns
pop
jae
jl
pop
pmaxub
xor
ja
popa
xchg
push
cmp
out
or
xchg
dec
rol
mov
loope
retf
inc
inc
cmps
cwde
jb
dec
sub
lahf
mov
call
push
pushf
and
add
xchg
pusha
mov
je
jmp
test
ror
not
sub
addr16
mov
imul
cmps
inc
sub
lock
lock
mov
popf
test
xchg
ret
mov
push
loop
sbb
or
sti
pop
arpl
add
push
js
call
pop
mov
movs
repnz
nop
sbb
sbb
test
cli
sbb
xchg
adc
xor
cmp
in
pop
jl
cdq
inc
inc
(bad)
add
loope
sub
daa
jno
jmp
lds
sti
or
loope
xor
push
jbe
cmp
out
loop
icebp
mov
xor
adc
outs
xor
je
aam
repz
mov
lods
push
ds
jbe
cmps
push
sub
les
push
add
out
jb
scas
sub
shl
xchg
in
dec
inc
mov
mov
outs
jb
and
and
in
(bad)
mov
jp
out
xlat
(bad)
pop
loopne
xor
psubq
and
add
in
shr
fstp
inc
dec
ja
cmp
mov
jbe
mov
and
jns
test
pop
stos
hlt
mov
int
push
mov
cmp
jo
dec
adc
xor
xlat
repz
dec
cmp
push
adc
and
adc
and
inc
call
xor
xor
test
or
mov
sub
sahf
dec
jo
stos
inc
sub
pop
pop
jle
pop
mov
outs
in
mov
cld
mov
popf
call
sbb
jb
add
push
out
cdq
pop
movs
pop
add
xor
imul
loopne
mov
or
in
call
sbb
xchg
mov
jo
ret
rol
pop
pop
mov
mov
dec
aaa
jne
pop
int
or
ins
test
inc
adc
inc
dec
mov
dec
imul
stos
add
cmp
fimul
nop
adc
test
test
shr
push
leave
xlat
push
out
mov
jecxz
sbb
iret
sbb
cmp
fwait
pop
mov
dec
xchg
push
inc
movs
and
jmp
cmps
mov
(bad)
not
push
ror
dec
mov
xor
dec
pop
mov
ja
pminub
add
cmp
and
sbb
std
mov
rcr
sbb
mov
xchg
in
mov
cmp
in
mov
sbb
in
xchg
cwde
xchg
dec
nop
clc
retf
leave
scas
adc
cmc
neg
es
sbb
adc
push
aam
ins
shl
ret
mov
jp
push
lea
cmp
fucomip
dec
cld
loop
fwait
sub
add
push
rol
mov
mov
jp
pop
lods
popa
out
mov
push
nop
lds
sbb
test
pop
xor
sub
push
ret
mov
cmp
aas
push
loop
out
cwde
adc
dec
sub
pop
and
(bad)
cli
sub
scas
xchg
mov
push
fwait
mov
mov
or
iret
ins
inc
push
jl
jno
(bad)
mov
outs
adc
jecxz
lea
cmp
in
cdq
(bad)
imul
sbb
push
mov
mov
ins
push
rcl
cmp
popa
jbe
xor
inc
dec
mov
in
mov
hlt
pop
ficom
mov
xor
(bad)
lds
popa
mov
shl
(bad)
cmp
jne
or
cmp
call
adc
bt
pop
ss
push
push
mov
jl
or
cmc
jno
retf
rol
sbb
daa
xchg
aam
or
hlt
bound
dec
call
ret
(bad)
mov
ss
in
cmp
ret
and
shl
mov
pop
(bad)
or
fisttp
add
xchg
push
outs
ror
loope
push
add
cmovno
test
inc
pop
in
pusha
adc
mov
push
stos
sbb
xchg
pop
push
mov
stc
pop
int
loop
xchg
push
pusha
lds
pop
dec
and
iret
fsubr
pop
inc
and
xchg
adc
mov
dec
stos
aaa
cmps
xchg
call
retf
sar
and
mov
jne
adc
pop
shl
(bad)
and
movs
and
inc
ret
out
dec
inc
fdivr
scas
jecxz
jae
(bad)
movs
mov
mov
or
mov
pop
out
iret
pop
add
mov
(bad)
mov
mov
xor
sub
and
or
ret
pop
xor
mov
test
xchg
stos
cmp
and
or
mov
std
push
adc
ficomp
pusha
dec
mov
jmp
sbb
add
ss
push
inc
int
lea
dec
or
cmp
add
mov
lahf
(bad)
dec
(bad)
cmp
pop
jne
push
inc
std
leave
into
xor
or
lods
jbe
mov
movs
in
cmp
mov
mov
int
in
sbb
and
mov
int
mov
mov
xchg
adc
lods
xchg
(bad)
rcl
call
aad
int
mov
add
xchg
mov
mov
and
xor
push
pop
test
sub
sub
daa
inc
call
push
mov
les
sub
into
xchg
add
mov
aad
into
sbb
repnz
(bad)
ds
mov
sar
inc
xchg
pushf
sub
mov
out
enter
sti
popa
retf
mov
popa
jecxz
aaa
loopne
cmp
or
maskmovq
test
out
in
fisttp
fwait
jns
ret
aaa
jnp
inc
fidiv
retf
fdivr
call
adc
pop
fistp
sbb
jbe
loope
pop
xor
fst
cmc
addr16
cld
sbb
dec
cwde
(bad)
fild
not
test
popa
shl
lods
icebp
xor
push
cmp
pop
inc
mov
jo
or
jb
fbstp
repz
or
inc
pop
mov
inc
ror
or
or
icebp
add
lock
xchg
pop
push
test
dec
wrmsr
and
call
sbb
xlat
jae
cmp
mov
mov
jg
push
scas
jmp
movs
and
sbb
push
xchg
dec
pop
in
mov
clc
push
mov
(bad)
cmp
sub
xchg
or
ficomp
jl
push
inc
in
out
fist
pop
loope
sub
(bad)
jmp
xchg
mov
mov
xchg
mov
and
cmp
shr
aaa
stc
fisubr
inc
sub
out
xlat
fwait
or
call
cld
push
xor
push
sub
cmps
jbe
xor
or
scas
add
and
(bad)
xchg
scas
pop
fwait
add
dec
fwait
clc
sbb
and
nop
or
pop
scas
loope
lahf
dec
inc
cmp
int3
xchg
js
jmp
test
fld
call
push
cmp
push
cmc
jns
int3
sub
cmp
inc
fsubr
jnp
sub
adc
hlt
push
cli
jecxz
pop
test
outs
test
rcr
ds
sbb
jge
adc
dec
sbb
push
ss
stos
inc
gs
sub
in
push
push
dec
cmp
cld
scas
in
sub
fist
push
cmp
loop
mov
push
jne
sbb
adc
xor
test
jecxz
xor
mov
int
jo
xchg
inc
test
jp
imul
add
push
cmp
add
test
and
daa
loop
jle
jo
(bad)
mov
mov
cld
mov
push
inc
dec
pop
jecxz
test
xor
fst
lds
mov
retf
repz
mov
add
sub
push
stos
or
push
fistp
clc
icebp
inc
inc
xchg
repz
outs
pop
lahf
fnsave
push
ds
mov
or
ror
bound
pop
adc
pop
add
mov
push
mov
jb
or
fidiv
stc
test
mov
dec
jmp
imul
xchg
ror
fwait
pop
enter
sti
(bad)
jecxz
clc
mov
mov
imul
in
or
ja
imul
retf
int
sti
(bad)
(bad)
cmp
xchg
(bad)
xchg
xor
out
sub
dec
cmp
nop
cmc
cdq
mov
pop
mov
sub
bnd
dec
cwde
add
inc
stos
adc
jp
jl
pop
fmul
cmp
int
unpckhps
mov
pop
jno
pop
jl
addr16
into
mov
jle
shl
xchg
cmp
adc
imul
sbb
jg
sbb
popf
cli
push
fsubr
bound
arpl
add
and
push
mov
cmp
pop
xchg
xchg
sbb
xchg
int3
clc
pop
mov
mov
fisub
xchg
fstp
adc
outs
lods
je
daa
int3
adc
pop
movs
and
sbb
mov
jb
loope
jno
leave
test
sbb
xchg
mov
mov
daa
cmc
in
xchg
(bad)
dec
jnp
fsub
push
mov
adc
xchg
jo
jmp
mov
sbb
pop
push
scas
cs
push
data16
ds
ds
mov
push
mov
adc
jns
jne
mov
xchg
std
retf
and
mov
push
mov
push
js
mov
stc
jle
out
fmul
fwait
stc
pop
xchg
xor
xchg
cld
fidiv
pop
sahf
mov
sub
mov
sub
iret
repnz
in
sub
js
pop
jbe
fwait
mov
sub
stc
xchg
rcr
call
popf
out
rcr
cmp
test
lea
pop
mov
cld
call
mov
aaa
leave
daa
adc
dec
lods
clc
nop
in
icebp
and
scas
je
jmp
retf
xchg
imul
xchg
adc
sahf
mov
xor
dec
push
jmp
jecxz
adc
fsubrp
pusha
int3
xor
(bad)
fcmovb
xchg
sub
cmp
hlt
and
jns
fisub
lea
mov
lahf
add
add
(bad)
nop
dec
or
fild
jmp
ss
movs
jle
push
cmp
lea
fdivr
inc
adc
or
sbb
loop
inc
sub
xor
call
fstp
mov
mov
rdpmc
scas
sbb
cld
test
in
mov
cmp
mov
xor
and
push
and
fs
mov
shr
jecxz
in
sahf
clc
imul
(bad)
in
jmp
das
sbb
fwait
or
test
mov
in
sbb
stc
dec
gs
loopne
cdq
jmp
mov
dec
int
into
mul
inc
dec
out
jge
je
jmp
stos
mov
loopne
leave
scas
jns
jnp
sub
nop
fisubr
addr16
xchg
out
xor
into
push
jg
push
inc
and
icebp
imul
add
pop
push
rol
pop
je
jle
sbb
nop
or
xchg
imul
add
jno
icebp
fdiv
or
pop
in
std
mov
mov
test
(bad)
popa
cli
test
mov
out
rsqrtps
adc
test
mov
xchg
loop
inc
sub
cmp
test
cmps
ret
mov
dec
out
imul
cmps
fs
xchg
cmp
xor
cs
data16
aad
jmp
mov
div
ins
(bad)
js
xchg
push
std
aas
movs
out
cmp
test
push
dec
dec
or
inc
mov
push
sbb
mov
pushf
pop
je
mov
test
test
aam
pushf
push
pop
sti
stos
repz
loopne
sbb
idiv
retf
mov
and
out
adc
scas
mov
xor
cdq
stc
mov
rol
and
jp
leave
or
add
sub
adc
int
adc
push
mov
cwde
sub
pop
stos
mov
gs
jmp
xor
pop
in
jl
jge
ficomp
imul
jecxz
cwde
mov
repnz
pop
sahf
inc
hlt
ret
imul
pop
es
pusha
ins
cmps
push
gs
mov
push
(bad)
arpl
inc
bound
push
adc
daa
jno
mov
xchg
xchg
add
loope
ds
xchg
dec
mov
aas
or
pop
dec
or
jbe
and
nop
out
adc
mov
lods
fistp
es
sbb
mov
jnp
icebp
mov
(bad)
fiadd
mov
cmp
cmp
shr
inc
stc
int
pop
inc
das
push
jge
(bad)
mov
xchg
ror
loope
leave
add
rcl
stos
dec
mov
hlt
fisub
sub
mov
pop
mov
das
test
das
stc
aam
or
(bad)
jmp
scas
stos
push
and
fist
xchg
cwde
in
cmp
pop
inc
xchg
jo
jbe
xor
add
adc
lea
aam
mov
pushf
out
push
pop
daa
ss
or
gs
das
fistp
std
or
out
fsubr
jmp
lea
cmp
xor
(bad)
xlat
sub
jb
call
bound
jmp
jle
lods
add
add
mov
rol
push
jmp
out
dec
mov
in
adc
xlat
sub
adc
sub
(bad)
and
inc
shl
mov
cmp
sbb
push
cdq
sbb
xor
popf
outs
pop
mov
cdq
inc
jno
pop
inc
jmp
jo
adc
mov
jg
(bad)
(bad)
enter
sub
scas
and
loope
in
jb
test
pusha
retf
ret
mov
ret
sbb
mov
add
ja
cmp
out
aas
and
scas
jge
push
sub
adc
and
cmps
cmp
movs
leave
jge
jbe
cld
adc
mov
add
lods
and
and
pop
push
sbb
mov
orps
call
add
std
jl
sub
rol
mov
push
sub
gs
sbb
dec
jmp
sbb
rcr
rep
fcmovnu
jns
out
loop
sub
jmp
sar
dec
in
std
jne
sub
in
into
dec
jg
push
jbe
or
fild
jecxz
inc
fcmovb
dec
jae
loop
sub
push
mov
push
cmp
push
and
or
pusha
and
aam
sub
or
ins
iret
pop
ins
xor
add
push
ror
sub
aas
sbb
push
and
stos
(bad)
rcr
mov
jg
jg
mov
inc
gs
icebp
shr
rcl
call
sbb
adc
popf
stc
push
mov
and
add
sbb
sbb
and
push
imul
adc
je
push
lahf
call
xchg
dec
pop
pop
or
mov
inc
cwde
sub
shr
in
cld
ja
lods
push
inc
inc
lds
ret
enter
call
push
push
mov
cmc
xor
das
pop
popf
shl
cmp
pusha
jae
lock
pop
pop
test
ins
xor
push
jl
mov
jp
dec
mov
dec
and
jmp
lock
pop
xchg
pop
call
mov
lock
nop
cmps
outs
pop
or
mov
cwde
push
fiadd
dec
mov
repz
push
std
(bad)
in
arpl
inc
aad
push
add
mov
add
or
push
push
call
mov
adc
sbb
loope
adc
js
push
lahf
jp
mov
dec
call
rcr
push
inc
mov
jmp
xchg
pop
ins
loope
dec
cmp
cdq
jmp
lods
cs
test
xchg
repnz
fisttp
scas
pop
cli
mov
adc
je
and
mov
lahf
out
fiadd
cmp
jae
mov
sar
sti
adc
cmp
popa
das
jg
fwait
repz
pop
pop
pop
rcr
shr
jnp
mov
xchg
fist
stos
outs
mov
lods
fnsave
movs
jbe
aad
sub
push
xchg
out
in
or
repz
sti
and
in
je
cmp
lods
pop
out
jns
rcl
enter
mov
mov
inc
(bad)
cmp
mov
xor
cmp
jmp
je
popa
cld
repz
scas
mov
cmps
(bad)
mov
(bad)
cdq
int
xlat
cld
into
movs
popa
sbb
mov
mov
mov
out
jl
and
lods
loopne
pop
aaa
cmp
ror
cmc
repz
out
out
xor
lahf
add
lahf
ss
sbb
jne
(bad)
adc
mov
ds
jl
push
lods
dec
inc
out
mov
int3
jae
imul
ror
lahf
jecxz
pop
mov
and
(bad)
retf
or
and
inc
xor
movs
xor
shl
fs
jge
into
int3
(bad)
idiv
inc
jp
dec
mov
and
icebp
es
daa
dec
mov
stos
(bad)
sub
outs
xlat
cmp
mov
cmp
outs
loope
sbb
xchg
xor
es
dec
or
cmp
dec
push
inc
enter
mov
daa
test
call
and
sbb
mov
mov
lods
and
sub
outs
jae
cli
mov
mov
movs
sbb
test
lock
ret
es
xor
adc
xor
pop
shl
mov
or
sub
ins
push
cwde
jmp
mov
and
out
sbb
ins
(bad)
out
jnp
mov
push
mov
cmp
int3
test
sar
mov
push
fldcw
and
mov
pop
mov
movs
dec
jle
cmp
jo
xchg
ja
xchg
add
retf
xchg
cmp
(bad)
int
inc
ja
xchg
add
out
jge
mov
pop
paddusb
ss
and
push
mov
stos
(bad)
and
sbb
xlat
inc
mov
or
add
xor
in
and
(bad)
and
inc
mov
jbe
(bad)
mov
xchg
push
lods
mov
mov
lock
inc
and
das
mov
arpl
out
cmp
popf
dec
int3
sbb
xor
inc
mov
and
icebp
out
mov
mov
xor
inc
jne
xor
mov
push
sbb
push
mov
lods
push
mov
xchg
addr16
sbb
xchg
push
xlat
inc
cmp
(bad)
int3
dec
movs
enter
call
outs
mov
loopne
xor
(bad)
xor
push
and
sub
or
scas
push
into
popf
add
sub
loopne
dec
fbld
xchg
out
repnz
gs
xchg
sub
ret
sub
loopne
lods
and
and
xchg
adc
pop
jmp
imul
mov
fbstp
popf
pop
xchg
jp
pusha
xchg
mov
ficomp
push
mov
into
push
add
mov
cmp
mov
or
aad
inc
or
cld
lds
movs
and
fisub
jmp
or
sbb
jl
xchg
popf
jbe
add
cmc
or
loopne
loopne
jae
rol
mov
sbb
dec
add
or
loop
scas
adc
sub
clc
mov
and
mov
out
cmps
mov
lods
rcl
sub
hlt
nop
xchg
fsub
cmp
fs
mov
fnstenv
mov
std
sub
pop
fcmove
mov
fwait
fwait
call
inc
pop
retf
dec
dec
push
int3
mov
ret
pop
dec
out
lahf
test
mov
add
pop
add
mov
mov
arpl
push
call
cli
add
sub
pop
dec
mov
adc
dec
cmp
addr16
les
mov
scas
scas
push
and
xchg
arpl
dec
out
adc
shl
push
popf
cmps
dec
push
out
adc
fs
push
in
cmps
or
mov
in
ret
push
addr16
push
push
stos
xchg
jo
pop
cld
pop
push
sbb
ins
pop
call
loop
pushf
cdq
rol
mov
sub
out
add
in
push
jmp
inc
xor
call
ret
dec
xor
push
sub
aad
scas
hlt
movs
out
out
imul
pop
test
fnsave
jmp
mov
mov
stos
les
cmp
sar
jne
ss
dec
add
mov
cmp
cmp
jno
or
in
push
inc
mov
inc
fdivr
fisubr
cmp
push
pop
mov
lock
xor
ror
lock
jmp
retf
mov
push
jmp
clc
cs
clc
or
push
icebp
xor
cmp
sbb
dec
sbb
add
mov
mov
out
stc
mov
iret
test
adc
retf
adc
push
sub
xchg
or
push
popf
jnp
aam
sbb
add
pop
mov
es
xchg
jg
push
ja
push
cmp
outs
movs
cmp
cmp
inc
into
push
lods
pushf
rcr
outs
ror
push
push
imul
push
ds
inc
popf
push
push
pop
dec
xchg
out
outs
fs
inc
in
cmc
or
pop
xchg
add
adc
or
jmp
imul
out
ss
sub
inc
xchg
cmp
mov
inc
retf
mov
mov
xor
mov
mov
popf
jae
xchg
div
pop
aam
xchg
sahf
sub
gs
(bad)
icebp
js
aaa
jne
adc
mov
mov
xor
aaa
sub
dec
sahf
lock
xchg
rol
ss
into
jns
div
or
repz
cld
add
call
fidivr
pop
jl
sub
and
cld
call
out
or
inc
cmp
xchg
xchg
out
jmp
jb
je
jae
sahf
outs
dec
dec
fidivr
into
xor
aas
xchg
mov
sub
loope
sub
xchg
ja
sub
mov
adc
pop
xchg
sub
adc
add
imul
dec
fst
mov
cmp
jge
push
sub
aaa
(bad)
dec
xchg
push
push
cmp
sbb
pop
mov
loope
loope
and
jl
ja
les
xor
mov
push
sub
add
rcl
out
imul
nop
and
sti
inc
lahf
xchg
rcl
xchg
aad
push
jnp
data16
jecxz
mov
fwait
or
lock
std
xor
imul
pop
(bad)
jno
ror
scas
dec
sahf
sahf
sub
sbb
cmp
scas
jmp
xchg
stos
je
loopne
mov
and
sbb
ror
idiv
cmp
or
mov
jb
adc
lods
repz
aad
jnp
fs
jmp
jb
fndisi(8087
repz
jae
mov
stos
xchg
pusha
imul
ret
aaa
mov
dec
and
and
out
cmps
cld
(bad)
jp
or
mov
and
xchg
bsr
mov
aaa
sbb
or
mov
in
dec
jp
push
add
ja
js
lahf
(bad)
clc
mov
fstp
out
add
or
cmc
iret
mov
or
mov
sub
es
scas
xchg
fdivr
dec
into
aaa
xlat
rcr
sub
or
iret
mov
sub
lods
shr
pop
sbb
stos
add
cmp
jecxz
inc
mov
jno
jl
sbb
cmp
push
pop
xchg
lea
iret
movups
out
int3
jg
iret
xchg
stos
rcr
mov
sbb
in
sbb
mov
jecxz
es
jns
ins
call
repz
cli
mov
inc
jae
cdq
in
mov
repnz
daa
dec
retf
adc
mov
xor
loope
cwde
adc
in
inc
push
mov
mov
push
rsqrtps
sbb
call
je
adc
xchg
push
pop
sbb
xor
sub
stos
ret
or
jns
adc
in
dec
neg
out
push
out
sub
addr16
scas
(bad)
scas
xor
(bad)
call
hlt
(bad)
retf
cmp
into
xchg
movs
ret
aas
hlt
dec
into
sbb
rol
btr
sbb
dec
scas
and
push
pop
(bad)
imul
cmp
in
aaa
loop
add
cmp
sti
adc
xor
ins
addr16
adc
add
mov
and
push
bound
xor
imul
ficom
arpl
fistp
jecxz
je
fimul
pusha
cmp
mov
xchg
jl
out
movs
outs
mov
push
aas
outs
jnp
test
jmp
shr
push
jo
jecxz
lahf
mov
add
aas
movs
mov
and
cld
inc
pop
in
add
aaa
jl
gs
call
and
retf
pop
fst
pop
jae
fwait
jp
pop
adc
and
pop
pop
xchg
cmp
out
stc
or
ins
push
sbb
or
sub
cmp
push
ja
std
lods
mov
mov
mov
pop
call
pushf
in
jo
test
popf
lahf
sbb
aam
enter
call
test
call
outs
dec
out
jl
ror
push
fisttp
movs
bound
xchg
sbb
cmovno
sahf
push
jnp
push
mov
jae
xor
xchg
pusha
movs
gs
iret
inc
mov
shr
mov
inc
cmp
xchg
(bad)
pop
scas
xor
and
xchg
mov
ja
mov
or
call
mov
test
mul
mov
into
add
scas
jmp
in
jle
cmps
mov
test
pop
jae
xchg
in
lods
loopne
(bad)
jb
icebp
or
shr
pop
push
pmaxub
jle
out
std
xor
mov
enter
lods
int
or
aam
icebp
jb
das
int3
sub
pop
shl
xchg
bnd
sub
jmp
sub
push
pusha
inc
mov
jl
in
cli
sbb
sub
pop
cmp
clc
sar
dec
(bad)
mov
(bad)
jno
cdq
fs
nop
mov
cmp
scas
mov
xor
mov
pop
inc
mov
aas
mov
fdivr
loope
jecxz
dec
inc
sub
sub
sbb
or
addr16
fldcw
mov
or
push
adc
scas
mov
ret
adc
repz
jl
xor
cmovns
or
jmp
(bad)
pop
popa
mov
mov
and
mov
xchg
inc
call
push
or
fcmovu
inc
xchg
int
imul
in
and
movntq
dec
inc
mov
push
adc
add
stos
fwait
pop
imul
cmps
call
inc
dec
test
xchg
and
bnd
cdq
movs
pop
dec
or
lds
dec
cld
mov
xor
shl
jnp
cmc
cld
xchg
dec
dec
push
mov
rol
jg
pop
xchg
sbb
pop
jecxz
stc
mov
pop
inc
mov
mov
out
fucomp
enter
leave
dec
inc
outs
je
push
frstor
add
into
sub
jp
add
sub
aam
mov
bound
outs
jb
xchg
in
jmp
repnz
jmp
xchg
cmp
data16
inc
or
cmp
add
mov
je
out
ret
sti
jg
mov
ret
jg
test
dec
dec
clc
sahf
retf
xchg
mov
inc
aad
jge
cmp
int
iret
xor
mov
nop
aaa
dec
fucomp
rcl
(bad)
and
xchg
data16
fmul
xor
adc
jns
sub
into
or
cmp
dec
dec
shl
call
push
je
ins
mov
pop
mov
shl
cmps
icebp
(bad)
dec
xlat
daa
xor
ins
out
mov
jp
mov
js
add
loopne
sbb
sub
cmp
repz
mov
mov
push
and
jmp
(bad)
enter
xchg
mov
sahf
mov
inc
clc
cmps
sub
es
cwde
mov
popf
fwait
out
jo
ror
loopne
into
jp
sti
call
lock
inc
retf
push
pop
push
xchg
repz
dec
push
xor
cdq
sti
repnz
dec
mov
mov
hlt
sbb
pop
mov
retf
jg
call
pop
cmp
jmp
add
std
push
in
mov
xchg
add
push
jp
adc
cdq
ja
mov
les
mov
mov
xor
cdq
in
mov
xchg
and
sti
xor
cld
xchg
popf
stc
push
popf
pop
inc
call
pop
std
dec
movs
mov
outs
jmp
cli
addr16
mov
retf
aam
enter
mov
xor
mov
sar
pop
jmp
call
cmp
mov
jmp
jb
push
jne
xor
stc
loopne
ficom
clc
mov
leave
into
jo
or
imul
daa
(bad)
xchg
gs
ret
add
pop
jae
retf
iret
movs
es
jmp
(bad)
in
les
push
ds
jmp
sbb
sbb
cmp
add
xchg
sub
mov
inc
push
lahf
inc
sub
fisttp
outs
mov
mov
push
in
inc
test
scas
jmp
jp
xchg
dec
clc
scas
xchg
jo
pop
cmp
sbb
icebp
sub
mov
pusha
pop
mov
into
xor
fiadd
nop
(bad)
xchg
pop
movs
lock
mov
call
xchg
add
adc
cmps
fsubr
(bad)
mov
fsub
xor
mov
sub
scas
jge
cwde
leave
stos
test
gs
inc
test
sbb
fst
stc
pop
adc
ret
and
cmp
mov
or
mov
add
stos
push
jle
mov
push
xor
lods
mov
push
in
push
or
addr16
imul
mov
not
lods
mov
xchg
enter
in
hlt
stos
repnz
pusha
scas
push
cmp
ins
pop
add
xor
mov
popf
and
cmps
test
iret
adc
adc
(bad)
iret
shr
fwait
xlat
push
push
shl
xor
mov
mov
add
mov
xor
add
mov
fmul
mov
lods
in
or
pusha
test
call
push
add
lods
fisttp
xchg
popa
ins
cmp
mov
clc
retf
movs
ret
jnp
lods
cmp
mov
js
sub
es
dec
or
or
cmc
mov
jmp
pop
mov
mov
iret
out
lea
sbb
mov
mov
or
into
jb
cmp
jns
push
shl
std
(bad)
ss
(bad)
add
(bad)
mov
jae
mov
cli
xlat
pop
jbe
or
loope
fdivr
imul
mov
xchg
dec
inc
xchg
rcl
ret
out
cmp
push
adc
and
jp
mov
leave
and
add
mul
and
scas
pop
jp
xor
and
and
jecxz
div
xor
add
sub
shr
jge
pop
in
cmp
pushf
jb
pop
loopne
cmp
movs
cmp
aas
fidivr
aaa
sbb
or
xchg
cmp
push
daa
rcl
mov
inc
fldcw
push
xchg
inc
xor
jns
les
inc
cdq
jno
iret
xor
jge
test
jb
test
shl
mov
cmp
into
and
adc
adc
shr
cdq
jmp
push
in
f2xm1
pop
mov
cmp
call
sbb
push
dec
shl
stos
arpl
cmp
mov
push
lods
ds
sbb
scas
and
inc
jmp
lods
mov
hlt
cmp
repnz
cmp
(bad)
cmp
xor
jmp
xchg
in
inc
out
xor
outs
sub
xor
sbb
dec
pop
(bad)
in
mov
mov
lahf
fisub
in
clc
aad
jle
pop
ins
outs
popf
and
aad
xchg
sar
mov
xchg
mov
outs
lods
je
jge
mov
sub
call
loopne
aad
pop
imul
push
jl
xchg
in
call
xor
in
push
cmp
jmp
test
loope
add
outs
out
add
aam
add
pushf
xor
call
movs
cmp
cmp
dec
out
add
stos
sbb
lock
xchg
pop
leave
dec
cmp
add
pop
jns
lods
add
cmp
mov
sti
hlt
js
sar
xchg
leave
std
popf
dec
jecxz
loopne
mov
inc
mov
mov
pop
rcl
nop
sbb
(bad)
popf
loope
jmp
lahf
fst
shr
sbb
mov
ins
cdq
(bad)
icebp
cmp
into
jecxz
push
cmps
push
xchg
scas
jge
xchg
adc
aas
cdq
dec
lea
rcr
clc
data16
cmps
(bad)
push
jmp
jmp
xor
mov
aam
call
sbb
arpl
dec
push
adc
leave
and
aaa
fidivr
push
sbb
or
rcl
loop
sub
sahf
rcr
(bad)
inc
sub
sti
fisub
pop
out
int
(bad)
loopne
sbb
ret
sbb
ss
movs
mov
fwait
mov
jg
scas
sbb
push
aas
jae
add
shl
or
loope
mov
pushf
std
xabort
push
movs
inc
cmc
je
ja
dec
pusha
push
sbb
sahf
fsubr
leave
and
dec
sar
cmps
scas
iret
out
in
test
xchg
mov
adc
lds
jns
sub
mov
ja
inc
fcmovnb
adc
div
in
push
or
clc
les
mov
fistp
repz
inc
and
mov
sbb
jne
cli
leave
pop
inc
out
xchg
rol
std
dec
sbb
xor
inc
push
mov
xchg
int
lods
cmps
mov
push
mov
cmp
xchg
retf
add
cmp
mov
call
xor
xor
fcmovne
movs
lods
iret
cmp
(bad)
repnz
jmp
cmps
and
hlt
ret
pop
ror
(bad)
(bad)
(bad)
sub
les
sbb
call
call
pop
xchg
add
fsubr
and
jp
(bad)
imul
dec
pop
pop
lahf
xor
sbb
cmp
test
pop
sbb
call
jne
out
cs
in
xor
cli
add
(bad)
mov
test
sub
retf
les
jmp
inc
fist
inc
xor
mov
sbb
add
and
jg
(bad)
rcl
(bad)
shl
add
gs
pop
fwait
clc
mov
sbb
test
(bad)
sub
jg
(bad)
stc
add
es
mov
xlat
cmp
push
out
aas
stc
xchg
data16
or
lea
loope
jl
dec
sbb
mul
cs
pop
call
dec
in
push
push
jbe
aaa
je
mov
sar
je
lahf
ror
pop
loopne
fs
mov
add
pop
int
into
(bad)
push
stos
jg
and
jns
bnd
fistp
adc
dec
push
push
jmp
add
int3
mov
test
adc
iret
sub
mov
aas
(bad)
and
mov
imul
xchg
sub
ins
cwde
or
outs
repnz
jbe
call
mov
mov
or
adc
mov
mov
sub
add
xchg
dec
add
mov
add
sbb
fld
loope
cmp
mov
mov
mov
mov
push
push
mov
sub
pusha
ret
stos
mov
mov
aas
jmp
and
or
out
not
cld
mov
pusha
xor
jecxz
clc
xlat
sub
cmp
adc
ret
sub
in
sbb
inc
add
pop
std
add
or
adc
lock
push
scas
or
nop
pusha
inc
sbb
rdmsr
(bad)
enter
jns
stc
jbe
shr
enter
add
rcr
enter
and
jg
movs
daa
jp
stc
movs
jmp
push
data16
das
adc
jecxz
mov
push
mov
fistp
(bad)
pop
dec
jne
mov
pop
loopne
and
jno
icebp
pop
inc
push
mov
add
cmp
cmps
xor
loop
sbb
dec
jmp
lods
enter
xchg
retf
js
into
push
inc
lock
sti
xchg
test
lahf
xchg
or
mov
sub
loop
(bad)
adc
mov
xchg
xchg
inc
fnstenv
sub
mov
lock
and
or
sar
imul
lods
in
xor
hlt
xor
add
pushf
dec
and
into
jno
ins
sti
hlt
in
lock
ret
xlat
shl
arpl
add
dec
push
leave
push
fadd
or
add
or
xchg
cmp
jmp
(bad)
gs
outs
in
adc
nop
cmps
xchg
ss
hlt
xchg
mov
dec
int3
or
mov
in
push
ins
pop
cmps
in
jge
or
fldenv
mov
pop
lods
mov
adc
jmp
jg
hlt
and
aam
inc
test
shl
test
call
pop
scas
cmp
fbstp
push
xchg
ins
mov
sub
sub
(bad)
imul
inc
or
retf
sub
dec
arpl
fiadd
dec
cmps
fwait
mov
bound
xlat
lds
iret
arpl
jb
es
pop
or
xchg
cli
dec
cs
fld
adc
cwde
aas
shl
popa
pusha
adc
cdq
test
sbb
scas
es
out
mov
outs
push
jbe
test
push
(bad)
mov
adc
dec
lea
cmp
sbb
pusha
xor
mov
inc
adc
cmp
mov
adc
jecxz
sub
cld
dec
mov
(bad)
cld
inc
je
data16
add
jmp
pusha
jmp
into
dec
fxtract
rcl
jne
test
and
movs
push
cmp
or
mov
cmps
and
leave
in
xlat
adc
xor
stos
sbb
aad
mov
out
ror
loope
nop
scas
pop
or
adc
es
out
lahf
inc
outs
sar
stc
ss
cmps
and
xchg
jmp
jns
(bad)
adc
fcomip
test
je
call
xchg
out
mov
xor
sub
mov
mov
idiv
add
je
inc
or
xor
and
repnz
jg
push
test
shl
xchg
int3
popf
out
mov
pop
(bad)
fwait
cmp
add
lea
test
jle
shl
mov
push
arpl
and
mov
clc
inc
retf
xor
gs
push
mov
or
loop
push
mov
jp
mov
imul
lods
push
and
daa
and
pop
push
mov
mov
jae
xchg
mov
and
dec
pop
xor
leave
or
xchg
hlt
test
(bad)
and
cmp
adc
leave
push
aad
dec
mov
cwde
(bad)
lahf
pop
in
scas
push
das
push
pusha
les
in
scas
in
cmp
nop
rcr
cli
fild
fwait
jbe
jns
jae
rcl
pop
mov
mov
cmp
test
pop
pop
call
inc
in
and
cmp
xchg
(bad)
rcl
cmps
cmp
mov
mov
aam
and
sub
adc
sbb
daa
les
push
cs
cmp
jns
mov
pushf
sub
cmp
pop
(bad)
leave
repnz
fucomp
out
out
cmp
cwde
pop
bound
pop
pop
xor
outs
iretw
mov
popf
sbb
gs
mov
faddp
pop
in
mov
or
int
mov
and
adc
push
mov
jnp
(bad)
sbb
ret
xchg
mov
retf
ins
ins
jns
cwde
fsubrp
or
xchg
mov
mov
call
mov
div
fwait
mov
imul
out
sbb
ss
mov
sub
loopne
popf
into
mov
mov
jl
mov
jno
retf
or
pop
rcl
inc
hlt
jne
push
out
int3
push
cwde
sbb
inc
out
lods
inc
cmc
sbb
std
shr
stos
sti
xchg
aam
push
jns
pop
push
cmp
cwde
in
cs
scas
dec
push
pushf
aaa
cmp
xor
xchg
fadd
or
fstp
cdq
jmp
retf
cli
leave
into
enter
lods
stc
sub
lock
ds
xor
mov
adc
adc
xchg
cdq
sbb
sahf
inc
out
add
mov
fstp
ret
(bad)
pop
fbstp
bswap
out
push
cmp
jne
scas
jl
lods
adc
ret
dec
call
or
sbb
mov
arpl
stos
and
dec
xchg
push
ret
rep
std
mov
pushf
pushf
xchg
jns
rcl
and
and
sub
xor
popf
scas
cmp
push
(bad)
cmps
inc
fs
mov
add
sub
sahf
inc
and
in
mov
add
retf
xchg
fisttp
add
in
jmp
jbe
lods
(bad)
popf
scas
inc
cs
cmp
or
cmc
or
mov
lods
ds
mov
int
rol
mov
or
cdq
pop
or
and
mov
push
pop
stos
call
sub
mov
push
dec
sub
fcmovnbe
je
jo
add
pop
jle
sbb
pop
adc
retf
mov
jo
jo
cli
adc
cld
xchg
outs
scas
ret
mov
or
cmp
fisub
loop
dec
xchg
setg
sbb
fs
or
mov
ja
rol
in
or
mov
dec
das
mov
(bad)
inc
pop
cld
and
mov
test
jg
dec
out
cli
cs
mov
mov
xchg
cdq
sbb
shl
repz
or
xor
icebp
ret
int
retf
into
js
mov
jecxz
dec
imul
xor
icebp
mov
adc
add
mov
sub
stos
inc
fwait
sbb
inc
xor
in
adc
inc
xor
(bad)
loope
xchg
hlt
mov
mov
push
push
dec
pop
jnp
movs
mov
pop
icebp
sub
jnp
push
pop
push
xchg
or
call
mov
add
bswap
add
sbb
retf
mov
mul
pop
dec
jb
or
mov
in
movs
sub
in
sbb
movs
xor
mov
lds
sbb
iret
loope
sti
pusha
adc
(bad)
not
dec
adc
or
das
sbb
adc
test
pop
sbb
cmc
xchg
mov
loop
sub
fistp
test
mov
in
stos
loopne
cmp
dec
xchg
inc
stc
test
mov
fisttp
xlat
into
jp
(bad)
pop
adc
inc
cmp
shl
or
das
frstor
std
and
jmp
rcr
mov
dec
ja
dec
dec
ins
adc
loope
pop
out
sbb
mov
and
fs
stc
cld
inc
mov
cmc
clc
in
mov
mov
cdq
mov
(bad)
movs
or
adc
aam
ds
out
or
ds
das
jp
pop
adc
iret
xor
xchg
or
loope
fcom
add
enter
jb
xchg
repnz
sub
xchg
mov
retf
pop
push
sub
xchg
repz
loopne
jae
pop
jne
pop
adc
jns
and
push
test
mov
aas
xor
dec
xchg
(bad)
enter
and
jmp
or
aam
fs
jmp
lock
cmps
cmp
out
test
dec
fidivr
mov
mov
clc
sub
movs
push
leave
dec
ins
xor
pop
icebp
aas
lock
mov
cdq
xor
mov
test
mov
fdiv
jmp
pop
and
std
in
lods
(bad)
fdiv
dec
add
cmp
jecxz
pop
mov
inc
jbe
mov
leave
lods
sub
sbb
(bad)
jmp
and
sub
test
cmp
sar
jg
dec
shl
clc
and
int3
test
pop
mov
cmc
or
adc
sub
jle
mov
xchg
lods
stc
pop
jecxz
push
je
xchg
cld
mov
and
dec
int
clc
mov
jmp
cdq
mov
push
xor
into
jbe
fcom
push
xor
xor
lea
sahf
adc
(bad)
mov
loopne
les
int
retf
(bad)
arpl
retf
cmp
ror
daa
jbe
fs
mov
rep
bound
lds
mov
jge
push
xor
ins
addr16
icebp
imul
jae
cld
sbb
cmp
jno
lods
sbb
js
pop
stc
pusha
cmps
mov
sub
and
xor
jmp
addr16
fsubr
xor
pusha
(bad)
and
mov
or
xchg
cmp
mov
retf
dec
sub
inc
and
daa
pop
movs
cs
fldenv
sub
jp
in
sbb
test
mov
adc
cmp
pop
sahf
xchg
and
pop
arpl
mov
lods
sbb
gs
popa
scas
mov
jno
pop
xor
jg
mov
retf
or
ja
movs
jnp
loopne
cmc
sbb
daa
or
add
xor
aas
pop
inc
and
pop
mov
lock
(bad)
mov
out
pop
ffree
jae
les
cmps
lock
not
ins
cmp
jmp
int3
fldcw
dec
ret
out
fild
push
mov
ins
jmp
push
or
mov
sbb
push
fist
mov
cdq
rcr
mov
xchg
inc
cmp
in
sbb
iret
daa
loope
xlat
cmp
addr16
clc
test
(bad)
in
and
add
(bad)
mov
xchg
xor
das
aam
push
imul
loope
dec
xor
xor
pop
out
xchg
lahf
add
pop
pop
imul
jo
rcr
lahf
push
aas
xchg
dec
fs
xlat
out
sti
cwde
js
push
mov
xchg
push
hlt
xchg
inc
or
mov
das
adc
mov
xchg
cmc
add
aas
and
cmp
xchg
mov
aad
repz
sbb
xor
pop
leave
adc
or
rcl
and
pusha
lods
sar
mov
inc
cmps
mov
mov
arpl
or
mov
jg
stos
pop
cmp
lods
inc
ret
enter
mov
dec
mov
dec
(bad)
jbe
xor
dec
icebp
cli
std
jl
sahf
jmp
mov
cli
add
add
fld
lea
fmul
dec
pop
inc
call
fdivr
ja
xor
inc
gs
push
in
jecxz
sub
out
enter
jmp
add
leave
daa
pop
sti
cmp
push
scas
inc
lds
cs
push
cmc
sbb
inc
cmp
push
pop
mov
inc
bnd
mov
or
dec
stos
and
in
neg
lock
cdq
push
jae
fidivr
mov
sbb
repnz
and
push
les
jo
cli
(bad)
jb
inc
xchg
(bad)
push
aad
xor
push
sahf
push
xlat
psrld
sti
push
mov
int3
sbb
outs
and
addr16
cmp
mov
pusha
push
xchg
aam
in
stos
(bad)
lock
(bad)
ss
jbe
mov
cs
out
shl
mov
hlt
sbb
stos
fcmovnbe
lods
or
lods
nop
icebp
mov
mov
sub
nop
xchg
cld
jb
push
add
scas
js
sbb
scas
adc
int
mov
push
sbb
push
outs
ins
sub
int
mov
inc
lods
sti
and
cmp
push
mov
aas
stos
fistp
adc
in
rcl
fdivr
iret
cs
xor
leave
xchg
mov
jns
cmp
fnstsw
in
ss
push
pop
jae
in
dec
addr16
push
cmp
sahf
loop
sbb
dec
dec
aad
or
dec
loop
cwde
lahf
std
sbb
in
mov
retf
dec
fild
push
adc
hlt
push
fisttp
fs
ret
push
repnz
adc
jno
push
fwait
xor
adc
adc
inc
push
mov
lods
(bad)
adc
sbb
dec
xor
or
sbb
add
jnp
(bad)
mov
ret
lea
jecxz
in
dec
push
mov
adc
mov
pmuludq
aam
outs
push
jecxz
mov
pop
inc
ret
fistp
bound
stos
and
clc
(bad)
cs
in
or
loope
icebp
ret
push
lahf
lods
mov
push
scas
sub
pop
jg
cmps
xchg
xchg
xor
clc
push
mov
add
icebp
stc
add
xchg
dec
inc
addr16
xchg
push
mov
imul
push
sub
push
ss
jno
add
xchg
dec
push
sbb
arpl
adc
retf
movs
fs
mov
sub
mov
mov
sbb
xchg
and
adc
push
sub
and
fst
pop
ins
add
sbb
movs
sub
push
scas
in
mov
mov
xor
dec
sar
dec
pop
int
and
call
ret
adc
mov
dec
movs
push
ins
add
jmp
xlat
xor
inc
cmps
lock
sysexit
xchg
cvtdq2ps
pop
loop
stos
out
imul
jne
cmp
jmp
nop
leave
adc
or
fstp
mov
and
cli
adc
adc
ins
in
jecxz
xchg
mov
jge
test
pop
pop
shl
jg
call
dec
pop
and
mov
(bad)
push
mov
lods
xchg
aaa
cmp
ins
or
adc
and
mov
adc
add
call
or
nop
dec
xor
pop
pop
inc
and
popf
push
shl
xor
int
les
push
cdq
lock
(bad)
or
mov
into
mov
(bad)
out
scas
mul
pop
in
sub
repnz
mov
sar
push
pusha
inc
pop
pop
(bad)
data16
sub
pop
mov
js
scas
mov
push
dec
dec
mov
gs
sbb
aas
mov
or
push
test
and
iret
cmp
add
sub
aas
cmp
mov
rcl
pop
cmp
fild
aaa
sbb
int3
loop
adc
mov
fxch
int3
in
pushf
xchg
mov
sti
fwait
fs
add
cwde
mov
sub
xchg
out
mov
push
mov
push
sbb
sub
jnp
jb
nop
shl
and
jno
scas
in
mov
add
lock
mov
mov
dec
jae
push
dec
mov
nop
sub
adc
jp
fs
and
xchg
mov
xlat
sbb
cmp
xchg
in
lea
lods
cmp
lea
lods
mov
xor
in
mov
out
push
sub
push
pop
mov
ss
jb
sar
repz
sub
retf
fldenv
push
or
push
jns
mov
imul
test
aad
mov
jnp
push
in
xor
mov
pop
fcomp
jae
mov
cmp
jo
in
pop
mov
pop
inc
in
and
xor
fbld
into
sbb
test
xlat
adc
mov
push
scas
cmc
repnz
(bad)
ds
or
cmp
push
cmp
cmp
fadd
lea
mov
sbb
and
fadd
cdq
add
scas
sbb
add
cmp
stc
stos
ds
sti
add
push
movs
push
mov
inc
mov
adc
sub
mov
(bad)
and
sbb
aas
jno
inc
push
inc
adc
jmp
lahf
fisttp
push
jg
es
push
sahf
cmp
inc
into
xor
div
inc
jnp
gs
xchg
mov
xchg
ja
mov
iret
cmp
ss
hlt
adc
repz
pop
mov
stos
pop
inc
(bad)
(bad)
scas
mov
push
jmp
cmp
cmp
or
xor
jmp
test
(bad)
ins
pushf
add
mov
or
retf
add
xchg
ror
popa
arpl
pop
adc
and
in
loopne
loopne
mov
aam
das
outs
pushf
pop
sbb
or
gs
dec
stos
pop
ja
mov
push
lock
clc
je
pop
cmps
pop
fld
stc
jp
xor
(bad)
pop
push
push
pop
pop
int
(bad)
lods
pushf
jo
dec
mov
add
jnp
arpl
test
popa
jns
test
out
jbe
mov
push
enter
out
(bad)
in
or
xchg
clc
mov
ror
xchg
std
dec
sbb
pop
pop
adc
loop
fistp
fld
lea
stos
lahf
xlat
cdq
jo
sub
dec
jbe
mov
xor
imul
mov
mov
pusha
out
dec
jo
cld
cmp
aam
repz
(bad)
jnp
popa
repnz
pop
sub
mov
bound
adc
pop
inc
cwde
add
mov
pusha
mov
sbb
int
shr
sti
xor
into
sub
shr
aam
push
mov
scas
push
shr
sub
mov
mov
cmps
sub
or
mov
sbb
jne
cmp
pop
cmps
lahf
cld
imul
test
jo
jnp
test
pop
into
ret
push
les
test
mov
jnp
outs
fnstenv
xchg
sbb
sbb
or
stos
stos
mov
sti
cmp
loop
dec
pop
mov
sbb
lds
cmp
in
dec
lods
sbb
sub
std
add
in
aam
(bad)
cmp
jecxz
cmp
jecxz
sub
ror
ficom
sbb
cld
das
pop
sub
(bad)
(bad)
loope
pop
cmp
imul
mov
shr
loop
xchg
and
or
lods
xor
(bad)
jp
mov
push
pop
into
add
out
dec
push
jo
loope
jmp
out
icebp
sar
cwde
push
add
push
xor
inc
sub
pop
sar
mov
popa
mov
xchg
jp
enter
adc
pop
cli
pop
lea
nop
xor
aaa
pop
pop
inc
int
mov
aad
or
cwde
mov
leave
and
jb
mov
inc
bound
pop
pop
aam
and
call
xor
fsub
xchg
add
test
add
stc
mov
in
cmp
pop
xchg
pop
mov
seto
test
add
sbb
xchg
dec
aad
loopne
push
xchg
pop
or
aas
lock
enter
or
adc
fadd
pop
pop
loopne
xlat
into
loopne
fstp
(bad)
inc
mov
jb
add
inc
cmp
pop
dec
xchg
add
call
push
mov
xchg
sub
sbb
mov
clc
pop
or
cmp
popa
add
stos
js
dec
jp
test
jbe
pop
mov
or
call
adc
and
out
pop
nop
push
int
popf
add
inc
daa
out
xchg
int3
repz
xchg
jp
push
jnp
call
jbe
sahf
and
js
cdq
neg
jmp
adc
sbb
in
adc
ss
in
mov
push
pushf
retf
sub
pushf
xchg
(bad)
addr16
adc
sub
dec
arpl
int
jo
dec
or
pop
out
lgs
or
sbb
loop
xchg
push
xchg
mov
sbb
xor
inc
pop
pop
fimul
adc
or
loop
mov
cmp
pop
or
neg
mov
jns
setae
mov
pusha
xor
cmp
cmp
cld
movs
mov
and
mov
clc
and
out
jl
and
sub
ja
mov
xchg
stos
int
add
cdq
push
out
jecxz
add
in
inc
addr16
mov
shr
push
pop
test
mov
mov
inc
es
popf
imul
repz
(bad)
mov
inc
sub
jecxz
pusha
adc
or
pop
cmp
mov
call
shr
dec
mov
xor
pop
shl
dec
iret
pop
inc
inc
mov
adc
adc
add
loopne
jg
mov
mov
add
ins
inc
adc
dec
inc
cmc
fcomi
mov
repnz
xlat
add
jmp
sub
xlat
mov
jno
mov
adc
lahf
outs
inc
stos
xor
in
ret
mov
neg
or
ja
add
or
int3
ja
shr
cmp
clc
fwait
jecxz
push
jle
push
fist
lds
inc
call
in
inc
(bad)
cmp
adc
outs
sub
retf
sti
popf
add
movs
data16
imul
lods
push
cmps
xchg
inc
xchg
and
out
mov
scas
nop
mov
mov
aam
jmp
push
xor
cmps
cwde
ss
add
jle
sub
and
or
dec
and
aaa
jp
ins
lods
sub
rol
call
or
imul
shl
push
enter
jmp
pop
mov
scas
inc
or
jl
xlat
shr
xchg
sbb
fmul
add
adc
sbb
outs
push
mov
iret
pop
lock
test
adc
je
cmp
push
pop
call
fs
aad
jno
or
pop
pushf
pusha
frstor
push
fdivr
push
inc
pop
xor
adc
fdivrp
sbb
aas
test
retf
mov
mov
jp
sub
shr
test
rol
popf
in
mov
cmovge
out
adc
jle
mov
scas
out
dec
mov
sbb
inc
sbb
data16
fbld
movs
pop
sub
push
aam
lods
and
jg
dec
(bad)
nop
lock
das
inc
test
jo
test
stos
cld
dec
xchg
fild
dec
daa
xchg
pushf
ret
sub
or
lahf
ins
lea
test
jne
jnp
sbb
aas
and
retf
pusha
ffree
lock
ret
stos
inc
push
imul
add
movs
sub
arpl
inc
fsubp
pop
(bad)
arpl
mov
add
ret
icebp
rcr
retf
add
not
or
rcl
(bad)
dec
push
adc
or
sub
(bad)
bound
pop
psubsw
fnstsw
mov
push
dec
xlat
shl
hlt
mov
inc
in
mov
shr
outs
ret
in
(bad)
test
mov
cmp
js
scas
jbe
dec
cmps
aas
add
sub
mov
mov
(bad)
xor
int
push
daa
pop
in
sbb
dec
pop
call
mov
add
inc
(bad)
inc
fs
add
push
pop
cld
or
cmp
jb
sub
(bad)
jno
ins
(bad)
jmp
xchg
in
in
xchg
icebp
xchg
jns
adc
ins
aaa
outs
xchg
pop
pop
and
sbb
push
mov
arpl
sub
mov
out
fistp
loopne
mov
lahf
dec
or
rol
rcr
es
mov
cwde
push
dec
mov
sar
inc
imul
clc
or
icebp
add
es
mov
imul
jg
add
cwde
add
jmp
dec
inc
adc
pusha
loop
lods
ss
dec
jnp
sbb
dec
stos
lods
cld
cmp
pop
cs
loope
ins
xchg
inc
mov
adc
push
(bad)
or
and
mov
arpl
aas
daa
dec
adc
inc
adc
outs
imul
xchg
cmp
jae
cmp
jo
jnp
pop
mov
adc
js
adc
jno
mov
adc
imul
lea
push
into
test
push
jmp
push
inc
xor
push
and
lods
inc
(bad)
int
je
xor
bound
sbb
ss
pusha
add
shl
mov
inc
in
int3
dec
and
out
repnz
shr
retf
ja
mov
mov
sbb
jp
(bad)
cmp
pop
jo
adc
pusha
xchg
xchg
or
dec
sbb
sub
dec
push
pusha
pop
in
jbe
xchg
cmp
cmps
stc
jae
pop
outs
test
aaa
ficom
dec
xchg
(bad)
ds
mov
sar
in
mov
neg
add
xor
add
dec
(bad)
call
ds
and
mov
cmps
mov
stc
adc
stos
arpl
sbb
ds
and
and
sub
in
push
dec
cmp
push
add
ret
test
mov
sub
sub
mov
xchg
xchg
mov
jg
imul
sbb
xchg
in
pop
and
or
cli
(bad)
cmp
lock
inc
or
xchg
cmc
out
xor
pop
pusha
js
mov
stc
pop
imul
into
cmp
jp
jae
jle
movs
test
popa
mov
xlat
addr16
in
jp
iret
adc
stc
mov
(bad)
rcr
mov
(bad)
mov
loope
daa
and
mov
jmp
jmp
lock
sub
lock
sbb
sub
(bad)
cmps
inc
stc
mov
xor
js
and
cdq
fimul
loop
mov
xor
sahf
push
scas
ffree
mov
rol
mov
jp
test
jo
ins
mov
mov
sahf
ja
cmp
pop
rcl
mov
dec
mov
call
daa
sti
fs
gs
mov
mov
dec
cmp
add
out
test
int3
movs
inc
xchg
jg
mov
shr
lds
aaa
retf
leave
fild
mov
sub
adc
add
enter
cwde
and
pop
fst
sahf
jno
ja
mov
or
mov
loop
stc
loope
push
mov
cmp
loop
loop
xchg
xchg
jg
nop
push
stos
or
push
pop
mov
jbe
icebp
cmp
xor
ror
dec
scas
shl
je
sbb
xor
xchg
dec
(bad)
fsubr
sti
shl
repnz
call
js
cmc
xchg
cmp
aad
(bad)
ss
mov
(bad)
jle
ins
(bad)
cmp
ins
mov
test
adc
inc
adc
push
rol
call
aaa
add
push
pop
stos
stos
mov
(bad)
xor
mov
adc
aas
and
pop
jbe
cs
and
cmp
mov
mov
aam
and
ret
push
cmc
sbb
pusha
sub
repnz
out
sbb
pop
xchg
pop
ret
pushf
push
jo
jg
arpl
int3
(bad)
daa
cdq
xor
arpl
je
dec
js
sbb
outs
or
frstor
pop
pop
outs
stos
jbe
aas
pop
ret
(bad)
mov
scas
sub
xchg
fs
fcmovnu
push
cld
sbb
aad
pusha
pop
push
push
outs
call
push
xor
pop
arpl
iret
mov
emms
movs
in
(bad)
stos
gs
sub
xchg
mov
stc
jb
xor
gs
je
mov
clc
and
mov
jae
mov
xchg
jne
fnstenv
pop
movs
loope
sub
cmc
mov
clc
mov
or
push
in
push
mov
pop
(bad)
js
dec
jnp
xchg
push
inc
loopne
sbb
jo
sbb
out
sub
ins
daa
jl
mov
or
stc
mov
loop
xor
sbb
in
and
xor
(bad)
(bad)
loop
dec
(bad)
push
loopne
into
or
cmp
adc
stos
mov
imul
daa
je
fadd
je
xor
push
data16
rcr
adc
add
arpl
push
sub
scas
sub
call
and
in
mov
mov
push
push
loop
dec
mov
shl
repnz
and
mov
rcr
inc
fst
ins
and
pusha
jge
mov
add
pop
pop
add
cmc
xor
sti
out
adc
adc
sbb
push
mov
cmp
inc
lods
cmp
mov
or
dec
outs
aad
jo
enter
xor
sbb
lds
fnstcw
push
and
mov
sub
imul
cld
or
cmps
jno
btc
(bad)
inc
mov
or
sub
jb
fcmovu
cmps
and
stos
stos
(bad)
stos
jae
pop
rol
int3
push
xor
cmp
sub
jl
mov
test
sbb
mov
jle
push
(bad)
dec
xchg
adc
(bad)
ds
fcmovu
xor
dec
jne
pusha
adc
cmps
js
mov
or
test
xchg
ins
das
inc
and
add
jbe
ret
cli
lods
cmp
ret
cs
stos
mov
cs
pusha
dec
cmc
sahf
loop
loop
xchg
lods
pop
mov
push
aam
fstp
ret
sbb
jne
mov
test
xchg
sbb
mov
ss
sbb
cmp
dec
std
inc
xchg
xor
not
pop
xor
xchg
and
cli
je
cld
xor
and
jg
rol
scas
lods
ds
popa
enter
js
jo
xchg
aaa
iret
jae
in
cmp
mov
mov
ins
xchg
jge
xlat
xchg
ja
mov
out
cmps
fnstcw
push
add
jmp
xchg
std
pop
fcmovu
fild
jae
mov
inc
cmps
mov
and
sbb
pop
mov
xor
shr
adc
inc
mov
cmp
push
fsubrp
(bad)
ror
call
ret
mov
and
imul
in
jns
xchg
jb
mov
xor
imul
sub
test
sub
cmps
fisttp
sbb
and
(bad)
xchg
cli
ins
je
add
jb
mov
dec
mov
jmp
pop
popf
repz
stc
neg
cmps
mov
sbb
mul
adc
jg
xchg
lds
gs
mov
mov
(bad)
les
(bad)
hlt
nop
ret
scas
add
add
movs
pop
seta
(bad)
rcl
add
loop
arpl
xchg
aam
dec
xor
push
jne
scas
dec
das
idiv
popa
inc
or
xchg
pop
push
in
adc
iret
xchg
jb
mov
adc
xor
(bad)
retf
adc
outs
scas
sub
repnz
cmps
push
sub
jns
add
pop
mov
addr16
mov
push
mov
sub
sbb
mov
xchg
sbb
or
(bad)
loopne
aad
inc
adc
sbb
shld
in
popf
aam
dec
xchg
imul
fistp
movs
in
test
in
sbb
in
sbb
ss
cmp
and
neg
sbb
ja
sar
fld
adc
mov
dec
lahf
push
call
cmp
ror
xor
sub
pop
inc
mov
add
or
ret
push
jl
mov
ja
fld
jno
and
push
jnp
adc
xchg
push
sub
adc
jno
sbb
mov
mov
sbb
jecxz
out
sbb
cli
xor
pop
stc
repnz
add
cmp
jge
adc
in
jecxz
mov
fidiv
push
pusha
out
ret
bnd
(bad)
pop
lds
and
stc
mov
mov
mov
xor
icebp
(bad)
call
std
hlt
or
xor
sbb
imul
cmp
repnz
icebp
addr16
jns
jno
call
es
outs
jnp
scas
and
and
stc
dec
ror
xchg
aas
in
add
shl
xlat
pop
ins
icebp
lods
cmp
push
sub
mov
cli
adc
(bad)
enter
(bad)
movs
and
push
mov
xchg
sbb
jnp
mov
lock
xchg
out
movs
inc
mov
cmp
pop
leave
std
jmp
les
and
enter
int
fcomip
int3
dec
rol
dec
cmc
pop
in
(bad)
(bad)
or
sbb
std
pop
js
movs
xchg
ds
xchg
mov
add
fldcw
push
and
popa
cmp
ror
add
mov
retf
xor
xor
adc
push
gs
out
inc
loope
adc
mov
ds
clc
out
add
xchg
pop
dec
pop
jecxz
rcr
pop
sub
add
pusha
dec
hlt
call
(bad)
fwait
xchg
mov
data16
cmp
scas
pusha
sub
sbb
data16
mov
jp
mov
retf
vpunpcklwd
loop
repnz
pop
(bad)
arpl
push
ss
fisub
movsx
mov
sub
shr
mov
popf
movs
retf
call
inc
scas
fwait
in
sti
cmp
jmp
popf
mov
sbb
movs
mov
add
sti
lods
cld
sub
adc
xchg
xchg
jge
and
mov
sub
test
popa
sbb
mov
aam
mov
ror
add
mov
mov
push
pop
xor
shr
mov
aad
xor
and
mov
fistp
enter
loope
unpckhps
stos
push
popf
(bad)
dec
push
cmp
xor
and
sub
shr
jne
jp
mov
fld
and
or
call
mov
dec
movs
mov
stos
xor
fs
loope
push
xchg
push
loopne
pop
mov
int
cmp
jmp
ror
sub
(bad)
jmp
ror
idiv
inc
bound
imul
cs
sub
popa
cmp
xchg
cmp
mov
xchg
sbb
ret
jns
mov
adc
ins
cld
inc
retf
and
mov
cmp
loope
inc
icebp
int3
fsub
add
mov
shl
mov
push
(bad)
lods
sub
dec
push
pop
mov
add
in
adc
jbe
aad
jle
push
not
fs
mov
js
ja
inc
inc
cmp
mov
fild
and
stos
mov
lock
ins
pop
fcmovbe
jge
daa
add
push
div
cli
out
lods
push
(bad)
mov
dec
(bad)
loopne
mov
jle
and
xor
aam
xor
aaa
add
jbe
push
call
mov
or
mov
pop
fdiv
cmps
cmp
push
add
mov
aam
std
inc
sbb
and
or
ret
(bad)
xor
jle
add
aam
and
pand
sub
mov
sti
push
inc
ret
loopne
mov
repnz
push
xor
cmp
in
in
xchg
daa
sub
dec
gs
mov
pop
outs
aas
(bad)
sbb
loopne
inc
sub
jno
jmp
add
and
mov
arpl
cmp
dec
mov
sbb
jbe
or
inc
mov
out
cmc
sbb
sbb
psadbw
nop
(bad)
xchg
or
or
or
cs
out
(bad)
or
lods
nop
sbb
outs
pusha
(bad)
mov
dec
jl
aad
jmp
(bad)
lea
rol
mov
jle
stc
into
adc
push
mov
sub
iret
mov
jl
xchg
jle
mov
add
call
and
fiadd
push
lock
loope
push
neg
leave
loope
inc
cmp
inc
inc
out
inc
call
daa
sbb
dec
fwait
das
call
fsubr
and
xchg
ds
inc
push
aad
mov
mov
and
pusha
aam
les
hlt
mov
retf
and
mov
into
and
and
and
(bad)
sar
inc
mov
push
(bad)
push
xlat
out
fidivr
enter
je
sbb
pop
sbb
fsub
and
mov
jp
pop
je
out
cdq
or
cmps
mov
stos
lods
mov
int
xchg
scas
js
push
jnp
outs
dec
sub
and
repnz
jno
inc
cmc
push
pop
stos
mov
push
sbb
add
or
mov
ret
adc
dec
ins
pusha
adc
stc
xchg
pop
xlat
xchg
pop
jl
mov
push
out
inc
jo
push
cmp
sub
je
clc
arpl
loop
fldcw
dec
sub
cdq
adc
(bad)
repz
mov
jmp
fist
pop
fnstsw
xchg
push
jmp
adc
xor
adc
pop
xchg
cmp
test
test
stc
dec
inc
mov
lods
add
dec
mov
scas
retf
call
repz
sub
fs
mov
jle
in
movs
xor
jne
and
dec
mov
mov
xor
adc
popf
shr
adc
xor
test
sub
fs
dec
inc
les
adc
xchg
sub
or
push
or
inc
mov
push
hlt
inc
lods
sub
iret
je
popf
or
(bad)
cli
cli
push
xchg
add
out
rol
inc
std
stos
pop
xchg
dec
pop
xchg
aad
adc
loop
(bad)
ss
mov
and
jb
xor
mov
cmc
mov
int
and
and
(bad)
loop
sbb
js
xor
mov
(bad)
js
retf
mov
repz
or
sbb
adc
push
sahf
mov
rcr
ret
add
xchg
popf
cld
std
pop
add
adc
test
push
outs
out
and
add
xchg
pop
(bad)
jmp
sbb
mov
mov
scas
aas
cmp
push
test
punpcklwd
leave
push
(bad)
out
sub
(bad)
inc
ret
outs
loope
lods
movs
dec
pop
cmp
fld
jg
das
adc
scas
retf
jle
push
(bad)
jl
jecxz
gs
inc
nop
test
ret
cmp
or
repz
daa
psrad
sbb
cmp
jo
lahf
cmps
dec
hlt
add
arpl
mov
and
or
jns
adc
stc
jae
xchg
psrlw
dec
(bad)
adc
mov
cmp
xchg
push
jecxz
mov
daa
(bad)
sti
mov
clc
lods
push
gs
mov
js
add
scas
sahf
pop
sbb
jne
imul
cmp
test
jmp
loop
cld
aas
arpl
push
or
ins
jne
cmp
jmp
int
gs
jns
adc
lahf
scas
jnp
aas
stc
xchg
jno
add
fild
fisub
dec
fld
fstp
mov
pop
mov
dec
stos
xchg
outs
cli
jne
mov
ret
and
pop
push
dec
aam
aad
push
jge
popf
mov
ror
adc
(bad)
lahf
jne
jge
loope
retf
sub
push
mov
jge
jmp
dec
mov
xchg
repnz
lds
repz
fwait
jbe
adc
sar
outs
iret
loop
nop
lods
aad
imul
sbb
and
or
or
es
scas
push
pop
mov
cmp
push
adc
arpl
sub
pop
loope
inc
mov
daa
popa
mov
aad
push
iret
jge
jo
je
push
push
jns
sbb
scas
pop
push
psadbw
mov
repz
or
loopne
mov
push
or
sets
pop
mov
add
mov
push
jp
cli
movs
ror
aad
xchg
in
stc
pop
sub
cmp
push
(bad)
scas
pop
shl
inc
lea
test
ss
push
adc
mov
(bad)
xchg
jno
xchg
xchg
pop
push
stos
sbb
sbb
xor
or
repnz
inc
fcomp
xchg
mov
cmp
xor
dec
(bad)
cmp
or
xchg
scas
xchg
dec
ins
hlt
add
inc
ret
dec
xor
int3
and
or
mov
cmps
movs
sbb
fild
sti
outs
stc
pop
aam
fcmovne
cmps
adc
data16
or
ja
jp
ret
lods
and
fucomi
jmp
or
js
adc
push
fs
idiv
ror
aas
popa
lea
xchg
cmp
(bad)
mov
jp
inc
add
jns
cwde
popa
add
popf
xor
jl
shl
fimul
add
(bad)
shl
addr16
xor
and
popa
push
mov
mov
sub
pop
push
dec
out
hlt
xor
xchg
mov
pop
fst
lods
scas
adc
or
lock
mul
ud0
repnz
xchg
pop
outs
jns
jg
shr
stc
cld
mov
mov
fs
xor
or
clc
cmp
dec
lock
jp
loop
mov
push
xchg
sar
adc
mov
jnp
push
(bad)
xor
cmp
push
inc
xor
test
ja
(bad)
fist
(bad)
fwait
sbb
ficom
pop
cli
jbe
inc
ret
pop
jb
repz
ins
aad
das
sar
adc
cs
out
leave
fstsw
in
aam
xchg
js
aam
adc
xor
stos
imul
stc
dec
mov
cmc
ret
data16
rcl
cdq
shl
cli
pop
daa
pop
sbb
(bad)
jns
push
xchg
iret
ds
dec
jle
push
inc
xchg
lahf
and
dec
movs
push
xor
fisttp
data16
mov
xchg
outs
xchg
dec
loope
fsubr
xchg
out
mov
push
cmc
ss
les
je
xchg
mov
add
lods
pop
jge
jno
les
xchg
sub
enter
mov
or
cmp
movs
mov
xlat
or
leave
int3
adc
xchg
push
stos
(bad)
leave
repz
push
lods
leave
jne
stos
mov
(bad)
xchg
push
mov
jns
cmp
lock
push
or
les
scas
xor
int3
cmovns
mov
pushf
popa
enter
push
iret
inc
popa
iret
fdiv
pusha
jb
das
(bad)
hlt
popf
adc
mov
mov
xor
dec
aas
dec
add
pop
sub
sbb
shl
adc
mov
pusha
into
push
push
stc
dec
icebp
mov
adc
loop
or
js
sub
push
cmp
mov
addr16
retf
or
cwde
sub
sahf
iret
popa
mov
mov
pop
(bad)
jbe
(bad)
xchg
jge
pop
(bad)
movs
or
inc
mov
data16
push
dec
stc
sub
jecxz
xor
hlt
in
in
inc
or
or
xor
push
out
imul
pop
pop
mov
mov
push
lods
sahf
push
and
add
jne
pop
cmp
mov
inc
cmp
xor
mov
xchg
pop
fist
popf
ins
xor
lds
scas
in
retf
push
xlat
and
mov
inc
push
popf
xor
inc
(bad)
out
jne
fadd
mov
cmp
and
adc
cld
in
out
push
dec
out
mov
sbb
xchg
pop
mov
hlt
pop
sti
sbb
dec
cmp
jge
out
adc
sub
and
and
inc
iret
je
mov
xlat
js
movs
sub
lahf
les
mov
dec
scas
jg
outs
or
out
cmc
js
fild
out
fs
sub
lock
out
shl
jecxz
or
repz
jge
and
std
mov
pop
retf
adc
sbb
repnz
push
and
outs
inc
pop
pop
aad
int3
ja
dec
and
pop
xchg
or
push
xlat
outs
retf
inc
add
jbe
mov
mov
call
fisub
int
in
cmp
cwde
dec
mov
mov
test
or
arpl
pop
and
jle
pop
xchg
sar
mov
in
stos
out
mov
ret
sar
xor
mov
cmp
push
das
imul
push
out
jb
xor
sub
bts
gs
nop
and
retf
mov
jp
jmp
je
push
cmp
push
sar
mov
jno
fwait
push
jl
stc
mov
dec
and
pop
jnp
xor
xchg
sub
push
shr
int
cdq
loopne
inc
or
xor
sub
adc
xor
lods
mov
sub
bswap
cmp
mov
cwde
sub
stos
jmp
sti
adc
mov
dec
jle
jne
outs
inc
call
mov
sbb
jns
repnz
and
adc
imul
pusha
cmps
dec
ret
je
fdiv
out
sbb
aam
je
dec
int
sub
in
ficomp
cmp
lea
sbb
lods
dec
loope
push
test
fnsave
jl
mov
arpl
and
or
or
and
(bad)
adc
cld
mul
xchg
(bad)
fdivp
cmp
(bad)
jmp
push
or
setg
inc
or
and
(bad)
adc
jb
cmc
outs
icebp
or
or
cmp
mov
dec
push
outs
inc
jnp
mov
pop
pop
mov
inc
and
jge
push
fmul
pusha
ins
xchg
jo
xor
(bad)
jmp
mov
adc
sbb
xchg
in
aas
inc
mov
pop
pop
ss
jae
and
loopne
jo
jl
cmc
outs
push
(bad)
sti
dec
rol
daa
retf
push
cs
repz
mov
repnz
dec
xchg
xchg
hlt
inc
sbb
fimul
mov
fidivr
jo
out
lds
mov
cmp
cmp
jmp
cmp
xchg
popa
pop
or
(bad)
add
js
jbe
mov
rcl
jbe
dec
stc
(bad)
and
daa
scas
sub
cmp
out
(bad)
stc
stc
fdivr
fld
pop
les
cmp
cmp
pop
shl
dec
in
inc
push
push
pop
mov
and
mov
mov
pop
ins
mov
xor
or
test
ret
cli
pop
push
xchg
ret
xor
test
aam
fwait
addr16
je
punpckhbw
out
xlat
xchg
mov
jmp
bound
xor
es
pop
mov
adc
mov
je
or
or
mov
lods
jp
xor
mov
mov
add
scas
int
xor
sbb
stc
xor
arpl
leave
pushf
cli
outs
adc
push
mov
xor
push
mov
mov
cli
mov
fldcw
push
addr16
fdiv
in
and
jecxz
outs
loop
fcom
(bad)
fstp
jo
cmp
sub
imul
adc
js
jp
push
or
gs
pop
lahf
adc
push
popf
jle
mov
loopne
xchg
rcr
retf
sbb
mov
xchg
out
xlat
xor
jne
imul
and
push
mov
gs
sbb
add
jle
popf
out
pushf
(bad)
enter
push
fistp
cmp
add
xor
dec
cwde
lods
inc
or
mov
dec
push
xor
push
adc
cmp
ret
mov
mov
inc
out
jne
sti
idiv
retf
sub
cmp
pop
mov
lds
ror
cmp
clc
fldenv
scas
loope
pop
(bad)
push
xor
out
and
add
push
cmp
xor
pop
or
and
push
mov
adc
add
xor
pop
pop
inc
test
inc
out
or
dec
cmp
pop
adc
jno
retf
lods
js
push
rcl
jo
hlt
push
mov
dec
fcom
xor
adc
sti
ja
jnp
mov
das
jmp
popa
or
call
cld
gs
orps
lods
test
hlt
xchg
js
mov
cmps
dec
hlt
ret
jecxz
sti
pop
leave
ret
lock
rcr
cmp
out
std
jg
lds
push
int3
inc
push
in
popf
pop
sub
movs
leave
push
pop
ja
xchg
xor
mov
pop
ss
adc
jge
inc
cwde
sub
cmp
mov
cmp
pop
outs
movs
fist
and
push
mov
mov
sti
not
ins
lods
cmps
(bad)
js
addr16
sub
dec
ret
cmp
jge
pop
(bad)
dec
mov
and
je
(bad)
or
xchg
mov
mov
xchg
and
pop
ret
std
fld
push
inc
test
sti
adc
out
rol
mov
push
pop
adc
je
fstp
out
or
jns
sbb
pop
pop
jmp
(bad)
lahf
aaa
test
pop
jo
mov
push
imul
and
movs
xchg
sbb
int
mov
ds
and
icebp
sub
cmp
inc
clc
inc
outs
xor
test
jo
cmp
add
ins
and
retf
mov
inc
stos
push
rol
jne
adc
lock
iret
dec
jle
(bad)
push
fisubr
cmp
jb
pop
leave
xor
in
lea
ja
stos
aaa
pop
(bad)
adc
popa
jmp
and
dec
pcmpgtb
lock
adc
pop
and
add
jmp
push
add
xchg
aas
or
pop
loopne
imul
fadd
dec
(bad)
mov
dec
jno
(bad)
jge
(bad)
cmp
shr
(bad)
xchg
push
test
rol
aad
sub
sub
jmp
sub
jno
fstp
or
fdivr
sbb
sbb
jb
xchg
xchg
stos
xchg
inc
aas
inc
cli
xchg
push
pop
xlat
sar
scas
push
ss
push
inc
sub
lds
addr16
out
cmp
mov
addr16
(bad)
(bad)
jmp
push
fdiv
lock
push
mov
ret
inc
in
adc
test
inc
cmp
(bad)
rcr
iret
mov
mov
sar
push
(bad)
push
in
daa
jmp
xchg
cld
pop
loopne
mov
cmp
faddp
cld
aaa
and
sbb
fs
sbb
out
and
add
and
cmp
test
and
fidivr
rcl
or
ds
sub
(bad)
push
call
mov
loope
mov
cs
xchg
jno
jp
loope
out
sar
movs
test
fs
sub
ins
xchg
or
or
in
imul
sbb
ds
mov
jns
mov
inc
and
ins
aas
jb
and
pop
scas
lahf
ret
lods
cdq
jp
rcr
dec
jl
push
push
xlat
or
test
frstor
(bad)
lahf
aas
test
sbb
mov
or
inc
jne
clc
push
inc
hlt
or
add
and
xchg
push
(bad)
mov
rcr
jmp
mov
leave
jns
rcl
adc
dec
pop
arpl
or
(bad)
out
movs
fstp
repz
je
add
mov
(bad)
out
ja
sbb
sbb
push
adc
shr
xor
mov
lods
pop
xor
xchg
and
in
nop
cmp
std
and
inc
dec
js
arpl
mov
dec
mov
mov
and
pusha
addr16
imul
cmp
out
or
fimul
mov
mov
(bad)
xchg
jnp
adc
test
outs
pop
in
adc
dec
enter
xchg
mov
pop
add
or
pop
pop
pop
ins
sbb
push
xor
cmps
mov
sbb
mov
rol
and
js
retf
or
cli
adc
and
das
pusha
jae
mov
pop
shl
sub
jl
mov
pop
push
loop
mov
and
pusha
stc
or
xor
pop
fsubp
fisub
push
fnstsw
(bad)
mov
xor
push
pop
mov
mov
rol
adc
pop
stos
sbb
shld
in
fcom
scas
push
shl
sbb
pop
loope
xor
add
ret
pop
and
add
sub
inc
nop
mov
pop
xor
mov
test
cmp
fld
xchg
push
jne
add
test
lock
outs
lahf
jecxz
sbb
test
scas
xchg
test
mov
mov
sar
aas
cmp
pop
out
xor
sar
mov
dec
ret
imul
repz
jle
outs
lds
or
inc
dec
mov
loopne
pop
inc
sub
dec
aas
ds
movs
ins
fwait
iret
sbb
or
mov
imul
rcr
push
movs
cs
test
or
push
fst
xchg
repz
dec
mov
xor
sub
cld
or
mov
adc
jo
xor
push
ss
or
es
rcl
out
xchg
adc
stos
inc
xor
mov
mov
shr
mov
add
cmp
xchg
test
or
(bad)
(bad)
mov
adc
fisub
arpl
cmc
mov
mov
outs
xchg
mov
push
js
neg
push
into
cmp
mov
leave
mov
test
lods
fdiv
ins
adc
outs
xchg
icebp
gs
add
fld
int3
movs
push
push
mov
fimul
and
mov
cwde
cmps
fndisi(8087
ins
(bad)
in
shl
xchg
jbe
xor
pop
imul
scas
xchg
xchg
pop
in
scas
into
leave
(bad)
rol
sbb
out
push
sbb
jno
pop
xor
hlt
aaa
dec
inc
arpl
je
retf
add
leave
dec
push
xchg
daa
retf
mov
cmps
sub
mov
jge
rcr
xchg
hlt
push
push
mov
ins
jl
and
sbb
arpl
mov
adc
jno
rcl
xchg
scas
cmp
repz
gs
dec
or
imul
lea
xchg
div
jl
sub
sub
mov
mov
jg
ret
(bad)
jnp
xchg
in
lock
(bad)
adc
push
pop
fs
in
push
xchg
dec
push
jg
xchg
jg
stc
pop
lods
fistp
dec
aas
rol
rcl
mov
fwait
clc
push
adc
in
cmps
in
rcl
test
pusha
aas
in
and
mov
xchg
sbb
cmp
jmp
mov
stos
rol
xor
scas
xchg
push
loopne
adc
cld
fnsave
cmc
(bad)
popa
lock
cmps
sbb
inc
or
dec
outs
mov
cdq
call
dec
sbb
mov
jmp
std
or
or
data16
xchg
or
sub
rol
mov
loope
adc
jge
and
mov
into
xor
fwait
xchg
mov
bound
mov
test
in
pop
ds
mov
cmps
adc
mov
lods
or
xor
xchg
sub
sbb
mov
jge
push
push
scas
hlt
scas
jecxz
into
sahf
dec
sub
outs
and
(bad)
jmp
pushf
mov
retf
cmc
lock
js
push
push
sbb
rcl
mov
push
xor
pop
fiadd
sbb
lock
into
inc
mov
ja
push
loop
arpl
or
or
lock
mov
mov
inc
arpl
xchg
push
test
pop
(bad)
daa
jecxz
out
(bad)
into
cmp
dec
push
sbb
xchg
or
mov
add
and
xor
dec
mov
xor
out
sbb
dec
in
add
push
xor
lods
pushw
mov
out
mov
pop
fist
push
and
(bad)
push
leave
clc
ret
rcl
or
mov
push
ins
inc
jo
xchg
int
adc
adc
pushf
ss
xor
add
out
mov
and
mov
xor
scas
fidivr
ds
pop
mov
mov
f2xm1
jb
outs
cmp
dec
mov
cs
jno
adc
cwde
push
shl
mov
(bad)
xchg
jmp
leave
push
cmp
addr16
and
push
push
mov
pop
das
mov
or
jl
pop
jp
cmp
jmp
je
cmps
das
xor
mov
aas
sub
or
scas
cmps
cmc
mov
dec
nop
(bad)
outs
int
mov
loopne
outs
cmp
mov
dec
inc
jge
nop
cmp
mov
ds
cmp
adc
or
out
pushf
retf
pusha
mov
mov
adc
push
imul
cmp
xor
sar
jmp
xchg
push
pop
adc
es
inc
xor
xor
inc
inc
cmps
push
sbb
sbb
xchg
jle
test
fcomp
sar
je
and
jecxz
mov
push
inc
dec
sbb
fwait
rol
sub
jb
inc
test
hlt
arpl
push
movs
enter
xor
push
and
mov
mov
mov
(bad)
fdivr
mov
xor
jne
dec
push
loope
push
sub
mov
fnsave
iret
xlat
or
cmps
(bad)
(bad)
mov
sub
fs
ins
sub
jae
and
imul
push
mov
mov
loop
xor
stos
jmp
sub
retf
lahf
mov
jo
jl
cmp
push
or
stc
cmps
cmps
push
repnz
jae
push
push
jne
mov
pop
call
retf
inc
mov
inc
(bad)
jecxz
inc
pop
or
xchg
jno
xchg
call
mov
push
ja
ret
pop
pop
cmp
cmps
loop
cld
push
push
jnp
out
and
xor
cmp
cli
fsub
pop
jmp
mov
pop
jae
gs
xchg
dec
xchg
in
int
and
push
or
stc
sti
xor
and
arpl
mov
dec
mov
daa
mov
lea
or
cmp
mov
xchg
jp
imul
dec
mov
lahf
push
pop
or
das
fstp
aad
dec
jmp
mov
loop
fnstcw
sti
inc
jge
test
sub
sar
leave
cld
stos
mov
cmp
push
jno
fisttp
ja
mov
inc
cmp
arpl
xor
jo
ret
shr
push
shl
popf
iret
jns
ret
sbb
(bad)
adc
imul
repz
shl
sbb
adc
cli
sbb
adc
popa
pop
or
cmp
sahf
jmp
pop
and
mov
js
ficomp
jecxz
jne
push
or
xlat
inc
inc
mov
add
or
(bad)
ds
mov
arpl
lds
sub
into
cli
mov
sbb
push
sub
shl
fmul
jnp
jne
and
jmp
sahf
add
pop
or
add
das
popf
jl
aas
xchg
rcl
pop
pop
sub
xchg
xchg
aad
fwait
(bad)
mov
imul
sti
jmp
and
sbb
ret
shr
and
xchg
sbb
stos
jge
sbb
fbstp
ins
pop
xor
scas
fnstsw
push
ins
arpl
mov
inc
mov
in
loop
cmp
xchg
xor
pop
fs
(bad)
and
repz
retf
rcr
jl
aad
popf
ins
sar
movs
dec
nop
ins
sar
or
sbb
outs
pop
jne
xor
es
dec
jo
mov
aaa
and
loope
mov
pop
inc
repnz
lods
sbb
mov
fisttp
pusha
js
(bad)
fldenv
in
(bad)
sub
(bad)
pop
adc
pop
scas
inc
(bad)
icebp
dec
lods
arpl
movs
ins
push
bound
outs
mov
ret
pop
adc
aas
jg
add
test
test
cmps
jp
popf
xlat
adc
(bad)
hlt
call
or
jge
in
out
mov
inc
xor
(bad)
pop
mov
cmps
in
fadd
pop
and
and
sub
lock
std
inc
fnsave
dec
mov
fisttp
jnp
retf
aaa
adc
mov
mov
shl
stos
push
xlat
xor
push
movs
mov
jne
xchg
xchg
(bad)
pusha
pop
movs
xor
sub
sub
outs
xchg
jle
add
cmps
in
(bad)
out
mov
movs
push
pop
sbb
mov
sub
push
iret
imul
xchg
adc
jns
cmc
inc
pop
mov
loope
call
and
adc
mov
inc
pusha
fcmovb
dec
xor
into
mov
dec
jmp
dec
sbb
test
xor
or
out
pop
xchg
sub
jne
fst
or
jnp
push
xlat
adc
lds
xlat
clc
mov
add
jg
call
push
jg
push
sbb
out
hlt
push
jnp
(bad)
rep
cwde
xchg
inc
push
out
cmp
aaa
xor
inc
sbb
mov
and
out
and
push
cwde
sub
sub
xchg
cmp
arpl
js
mov
fidivr
xor
cli
cmp
push
dec
jns
dec
adc
jle
mov
shl
mov
sbb
aad
das
jle
out
adc
outs
mov
mov
sbb
mov
inc
push
mov
rcl
inc
push
add
jmp
and
jmp
or
mov
fisubr
pop
add
(bad)
leave
jns
les
stos
popa
sub
aad
sub
ror
dec
out
sub
sbb
shl
cmps
inc
jl
dec
jge
xchg
mov
fiadd
scas
ins
cmp
ficom
mov
mov
stc
ss
loope
xor
outs
fcom
add
aam
cli
mov
xor
or
movs
pop
jae
imul
movups
jae
rcl
push
daa
cdq
inc
xor
push
shr
sbb
icebp
aaa
sub
ja
inc
call
jmp
addr16
push
imul
aad
loope
jp
mov
mov
cmps
and
jl
es
cwde
mov
out
test
js
push
push
pop
xlat
test
aam
push
pop
push
into
xor
ss
xchg
daa
fincstp
jnp
and
inc
push
jecxz
jae
inc
out
mov
jp
mov
dec
and
add
fcmovnu
pop
pop
mov
mov
das
call
mov
mov
rcr
jmp
mov
mov
push
xor
xchg
xchg
pushf
sbb
or
das
mov
inc
mov
mov
das
out
add
(bad)
mov
in
mov
fild
push
pop
pop
push
jbe
xor
and
dec
call
test
adc
push
cmp
loopne
mov
pop
stc
sbb
inc
mov
jmp
addr16
sub
call
mov
mov
mov
addr16
(bad)
sbb
out
adc
xor
sub
cmp
addr16
repnz
test
cmp
lods
lods
iret
mov
push
jno
and
pop
ss
xchg
xchg
pop
lods
inc
pop
jns
adc
fwait
out
out
mov
ret
in
xchg
xchg
aam
adc
pop
pushf
es
aas
inc
nop
les
loope
jb
(bad)
cld
shr
dec
and
lea
sub
adc
std
repnz
jecxz
or
out
dec
mov
in
dec
ins
or
les
mov
or
hlt
xor
rcl
loop
test
or
mov
frstor
shl
das
shl
adc
push
hlt
pop
adc
sbb
pop
movs
enter
mov
aas
inc
mov
sub
mov
mov
(bad)
mov
inc
mov
std
and
mov
mov
sub
outs
jg
arpl
adc
cmp
popf
into
in
(bad)
cmp
popf
xor
fstp
mov
push
(bad)
cli
icebp
lock
(bad)
stos
inc
shl
xor
jae
popa
pusha
cmps
jecxz
in
jne
es
lods
or
imul
pop
and
in
and
cmc
or
pop
xlat
sbb
inc
mov
fs
jecxz
cmps
int3
mov
mov
call
mov
adc
test
mov
movs
sbb
inc
(bad)
inc
cmp
mov
inc
loop
jp
lea
ret
jb
les
pop
(bad)
in
pop
push
mov
fsub
push
retf
mov
lahf
mov
sub
sbb
loop
loop
stos
push
xor
mov
dec
scas
int
jno
scas
mov
aaa
fistp
jg
jp
(bad)
int3
jmp
stc
xchg
xchg
xor
les
repnz
xor
jne
movs
dec
add
pop
dec
fwait
pusha
mov
xchg
mov
mov
sar
mov
push
stos
jmp
mov
sub
bound
or
sbb
sti
ds
pusha
mov
rcl
push
or
sar
xor
pop
jmp
fmul
mov
out
adc
lods
data16
imul
nop
std
cmp
mov
and
jmp
jno
push
icebp
je
bound
xchg
inc
aaa
mov
ja
sbb
ins
ds
iret
and
mov
icebp
mov
dec
jns
or
adc
retf
loop
push
arpl
jbe
dec
push
ror
pop
popf
inc
std
xchg
mov
rol
out
hlt
retf
in
mov
repz
mov
mov
xor
push
push
and
xchg
pop
dec
mov
popf
(bad)
or
mov
cmp
sub
sub
sbb
fcom
push
popa
(bad)
imul
leave
ror
add
test
out
fwait
sbb
or
stos
test
adc
cmp
jb
popa
mov
aad
pop
shl
and
pop
xor
add
test
ret
push
stc
aad
lods
cs
neg
cli
lods
and
mov
add
inc
jnp
sbb
push
lahf
and
leave
xor
jbe
xor
cmp
leave
inc
pop
jle
call
push
dec
cmc
adc
retf
and
dec
aaa
js
pop
push
lea
add
ja
jmp
inc
mov
sub
cli
sub
inc
push
lods
xor
mov
mov
in
add
ins
adc
pushf
push
stc
sbb
nop
push
imul
adc
sub
inc
scas
out
push
mov
shl
push
cmp
dec
cmp
mov
int
lahf
shl
sti
(bad)
aad
mov
push
(bad)
nop
sub
popf
push
cmp
addr16
es
cmp
(bad)
and
cmps
jae
add
cmp
lds
mov
jns
call
sub
inc
jecxz
add
adc
cs
(bad)
push
sub
add
lock
mov
xor
adc
lods
sbb
dec
xchg
dec
mov
xor
adc
lfs
jg
mov
dec
dec
mov
cdq
dec
stos
dec
hlt
sub
mov
shr
in
test
popf
push
or
jp
imul
push
hlt
jmp
add
imul
outs
sub
(bad)
fnstenv
stos
pop
je
push
(bad)
call
es
cmp
sub
xchg
pop
out
leave
xor
cmp
xchg
pop
loopne
(bad)
adc
pop
pop
out
repz
xchg
inc
adc
mov
shl
push
mov
mov
pop
popa
cmc
cld
or
pop
shl
(bad)
out
(bad)
mov
in
mov
and
loopne
lock
(bad)
push
mov
pushf
sub
xchg
loop
out
(bad)
call
sub
mov
push
xor
pop
daa
pop
xor
adc
std
mov
xchg
cmps
adc
xor
mov
inc
mov
sub
outs
dec
data16
dec
adc
cdq
jecxz
or
aas
sub
pop
loop
cmp
lods
pop
movs
fld
into
cmc
inc
lods
mov
mov
movs
out
fwait
mov
leave
pop
sub
sbb
je
jecxz
pushf
mov
xchg
dec
jmp
out
fisubr
push
out
mov
je
out
cmp
jle
in
call
int
rol
push
mov
sub
pop
outs
out
sub
mov
cmps
add
cs
mov
sahf
mov
sbb
push
mov
xchg
push
mov
inc
stos
mov
addr16
cmp
inc
lods
stc
mov
jbe
jb
and
ret
add
pop
sbb
xchg
call
inc
pslld
mov
lock
loopne
mov
rol
add
jmp
pop
xchg
loopne
or
enter
fidivr
pop
(bad)
sti
cmp
xchg
lods
data16
sub
paddd
add
imul
and
or
dec
movs
das
pop
repnz
div
sbb
movs
mov
lds
inc
inc
push
cmc
mov
pop
push
and
pop
xchg
fst
cli
repz
cmp
xchg
popa
mov
xor
add
jno
loope
(bad)
mov
sbb
jp
push
lock
xor
(bad)
clc
std
fstp
add
(bad)
cmp
mov
sbb
hlt
into
shl
out
jge
add
scas
retf
fisttp
test
mov
jbe
stos
cs
ins
or
pop
icebp
lea
shl
adc
cmps
or
cwde
fisttp
lods
imul
stos
push
repnz
repz
mov
and
jne
ficomp
push
pop
mov
dec
popa
adc
mov
test
mov
jns
cdq
push
retf
jb
dec
inc
xchg
xchg
or
mov
pop
(bad)
mov
lock
les
xor
je
and
push
test
rcr
test
jge
(bad)
lock
pop
pop
sub
rcl
pushf
and
xchg
(bad)
or
es
mov
lds
or
stc
popa
aad
outs
data16
push
or
fst
imul
sub
test
comiss
push
aad
(bad)
fisttp
cmps
sbb
(bad)
scas
enter
sahf
inc
push
pushf
repz
pop
xor
aam
stc
ret
push
rcr
gs
and
gs
cmp
jne
jl
fs
adc
test
jo
push
pop
iret
mov
sbb
stc
inc
mov
sub
xchg
sub
ss
neg
add
inc
outs
loopne
ins
int
adc
stc
jge
fld
test
mov
push
jle
dec
adc
inc
movs
shr
in
add
push
fadd
pop
add
dec
in
dec
mov
jo
add
mov
adc
(bad)
sbb
jl
add
cmps
sbb
popf
outs
lea
or
pop
test
fdivr
test
push
dec
and
push
jnp
mov
mov
fwait
add
push
mov
imul
ins
push
arpl
jge
cmp
mov
repz
sbb
rcr
leave
cmp
cli
jl
or
into
inc
lods
repz
nop
retf
leave
push
pop
sahf
cdq
(bad)
fstp
mov
ror
dec
jnp
cmps
mov
paddsb
lds
pop
jbe
mov
cmp
dec
xchg
loop
push
push
popa
lahf
outs
mov
add
sub
sahf
add
icebp
aam
jne
xchg
xor
add
mov
popf
jnp
lds
xor
or
dec
ins
cmp
or
addr16
xchg
repz
gs
and
stc
or
pop
add
mov
sbb
cmp
addr16
ins
(bad)
jne
and
and
cmp
push
nop
in
cmp
mov
xor
mov
add
or
and
mov
rcr
ins
js
pop
jge
add
xor
sbb
mov
push
sbb
jno
xchg
loope
pop
outs
adc
jle
lods
mov
arpl
in
test
or
push
xor
sahf
out
jb
shl
bswap
xchg
(bad)
ins
mov
int
dec
pop
repz
or
push
icebp
dec
mov
adc
imul
mov
outs
mov
jmp
cmps
call
jmp
add
dec
jo
add
dec
adc
fsub
dec
dec
pusha
cdq
xor
push
add
xchg
dec
inc
pop
rcl
or
mov
loop
mov
push
xor
je
retf
mov
sbb
adc
js
xchg
inc
cmp
mov
out
or
jl
ins
out
popa
push
iret
lock
inc
mov
fwait
out
xchg
lock
and
aaa
pushf
pushf
mov
cmp
imul
sbb
mov
das
pop
jnp
mov
inc
mov
imul
mov
jecxz
or
ins
jecxz
scas
mov
mov
add
outs
push
push
dec
sub
sar
test
jle
retf
push
stos
call
and
or
loop
or
imul
mov
and
and
loop
xor
popf
je
into
or
adc
js
sbb
test
adc
mov
daa
mov
add
add
mov
in
mov
mov
gs
jo
leave
iret
fcomp
dec
mov
cld
add
xor
push
xchg
clc
push
rol
fwait
cli
push
mov
fcmovbe
shl
mov
push
push
push
push
xor
outs
push
je
int
fs
sbb
xor
jl
xchg
sub
addr16
data16
out
adc
xor
dec
sbb
cmp
sbb
aam
iret
xor
hlt
sub
shl
xchg
lahf
push
mov
out
movs
jp
or
clc
ins
push
xchg
jmp
push
and
hlt
sub
pop
pop
xor
mov
dec
sub
test
adc
or
pop
in
rcr
call
pop
pushf
loope
mov
mov
and
mov
loopne
cmp
leave
pusha
cdq
xchg
(bad)
hlt
cmc
and
mov
lods
stos
push
imul
imul
mov
int
ficom
inc
mov
mov
(bad)
push
pop
addr16
or
iret
(bad)
aaa
mov
dec
add
add
mov
xor
test
fiadd
adc
push
mov
xchg
imul
lods
leave
xchg
sbb
add
(bad)
xlat
(bad)
in
mov
mov
jp
cli
imul
jo
jb
jo
cdq
add
xor
addr16
add
dec
pop
(bad)
stos
add
and
jge
mov
mov
adc
sub
dec
sub
and
xchg
add
inc
mov
sbb
out
movs
ror
add
nop
outs
xor
adc
push
pop
call
js
jno
dec
loopne
ja
stos
jae
cmp
add
fisub
adc
lods
jmp
pop
or
sub
outs
pop
mov
mov
test
pushf
push
dec
cmp
ret
mov
cmps
ror
cmp
add
sub
in
sub
jmp
inc
mov
test
cs
outs
or
cmps
xchg
inc
jle
nop
mov
std
call
mov
mov
sub
xor
cmp
(bad)
add
mov
das
push
out
pop
retf
fild
push
lahf
call
lahf
xchg
popa
sub
or
inc
jns
out
sbb
add
mov
inc
inc
lods
iret
push
cmp
mov
push
gs
or
push
out
daa
pop
rcl
jmp
xchg
push
ret
das
pop
loop
ret
xor
out
add
pop
mov
cmp
imul
outs
call
jle
xor
pop
cmp
rcr
xor
xlat
or
ror
xchg
int
add
pop
or
add
adc
fimul
test
pusha
(bad)
outs
sub
inc
loope
call
push
or
out
jp
addr16
dec
xchg
inc
push
fs
xor
daa
push
or
jno
or
(bad)
or
mov
sub
add
retf
sbb
cmp
mov
dec
repnz
add
push
inc
int3
inc
iret
and
lea
xor
jl
repnz
or
aas
inc
and
aam
jg
shl
pop
fld
mov
scas
xchg
or
sbb
ret
fidiv
cmc
(bad)
jle
mov
test
mov
jl
call
je
mov
add
mov
ja
mov
mov
mov
mov
add
jp
(bad)
test
push
dec
mov
es
fistp
ret
pop
icebp
xor
lods
xchg
je
sbb
mov
xchg
in
lods
dec
shl
sub
jae
xor
sbb
jo
std
push
cmp
ss
repz
ror
jge
jp
adc
push
inc
xchg
test
adc
mov
mov
icebp
lods
or
xchg
popa
fimul
jecxz
sub
call
imul
cwde
cmp
pop
fldcw
xchg
mov
xchg
xchg
mov
add
clc
jl
clc
out
cmp
fs
(bad)
xchg
mov
aad
jmp
data16
pop
mov
das
out
inc
scas
cmp
aad
xchg
cmp
inc
mov
(bad)
ja
daa
add
das
or
loopne
mov
jnp
push
or
mov
xchg
jne
push
leave
(bad)
sti
pushf
jmp
addr16
mov
dec
xchg
push
add
push
stos
cmp
ss
push
sub
scas
mov
pop
std
xchg
push
xchg
inc
ins
out
aam
stos
lahf
xchg
frstor
xchg
and
mov
pop
push
or
sub
pop
ret
dec
mov
out
jmp
clc
pop
cli
push
xchg
adc
scas
aad
(bad)
or
ret
dec
shl
stos
mov
dec
xor
cmps
mov
inc
lea
add
sub
out
push
daa
cmp
jl
bound
int
xchg
pop
cmps
inc
js
shl
or
data16
in
or
fcmovnbe
mov
mov
jb
jp
pushf
xor
cmp
fisttp
inc
(bad)
js
adc
std
lods
push
mov
adc
sub
mov
xchg
jge
scas
inc
shl
lea
and
cwde
mov
cmp
popf
mov
cmp
push
data16
movs
add
push
push
aaa
jne
aaa
pop
cmp
mov
jae
in
dec
add
push
jle
mov
ret
and
pop
es
inc
out
pop
push
icebp
push
ficomp
cmp
push
std
aam
inc
adc
enter
out
div
push
mov
mov
mov
jmp
sbb
jl
dec
popf
call
stos
cmp
mov
or
in
jnp
sbb
repnz
(bad)
mov
add
inc
daa
jns
xor
jns
ins
jp
hlt
lock
iret
aas
cmp
stc
push
pop
cwde
les
dec
clc
sub
mov
gs
imul
out
jl
xor
sbb
mov
sub
imul
pop
ins
cmps
adc
or
loope
jnp
xlat
cli
inc
ins
mov
lock
loope
shl
mov
bound
mov
(bad)
sub
arpl
pusha
xchg
add
jmp
call
fidivr
rcl
cs
dec
cmp
pop
jb
hlt
pop
dec
jae
cmp
mov
aad
mov
or
imul
inc
retf
xor
push
dec
xchg
outs
sub
push
pop
mov
mov
in
stc
ja
xor
inc
test
xchg
sub
mov
idiv
loop
shl
mov
fdivr
mov
ds
stos
imul
jp
mov
xchg
sub
xchg
sbb
sub
dec
icebp
mov
jb
adc
add
xchg
dec
sub
movs
mov
jo
mov
aam
xor
test
test
sahf
retf
mov
jne
inc
cld
sti
jo
dec
fld
into
ret
pop
stos
sub
adc
cmp
mov
scas
lods
js
mov
push
std
test
pop
test
sbb
xlat
xor
pop
ja
xor
cmp
dec
sbb
jmp
stc
mov
stc
fcmovnb
xor
loop
loop
jne
ficomp
pop
gs
xor
fbstp
fs
cmp
and
push
dec
sbb
iret
mov
mov
mov
jno
cmp
cmp
add
test
test
std
mov
sbb
dec
ss
mov
jp
pmovmskb
adc
cmc
aas
lea
shl
xor
leave
call
retf
bound
test
inc
ss
mov
js
and
mov
sbb
mov
xor
lahf
mov
xchg
scas
add
cli
out
inc
pushf
sub
add
clc
pop
int3
push
xchg
cmp
push
cli
add
sbb
xchg
and
call
mov
out
jo
xor
push
push
sbb
out
es
gs
xor
ins
and
test
movs
inc
mov
mov
inc
add
pop
ds
pusha
retf
inc
or
mov
test
lea
jl
inc
repnz
ficom
mov
call
inc
mov
lds
imul
xchg
(bad)
push
gs
mov
cmp
(bad)
jo
aad
sbb
(bad)
or
xlat
mov
lock
ja
push
fdivr
fs
pop
mov
mov
mov
mov
jnp
nop
mov
ss
jns
jns
push
lods
into
and
push
aaa
xor
mov
mov
fptan
out
pop
(bad)
xlat
pop
sbb
and
test
fadd
inc
int3
mov
repnz
or
pop
addr16
div
not
out
outs
push
gs
push
outs
sgdtd
push
pop
cmp
daa
jle
outs
aaa
aad
inc
in
mov
xchg
bound
mov
push
dec
fisub
data16
cli
out
jg
sbb
rcl
sbb
mov
ret
out
cmp
rcl
mov
mov
xchg
sub
add
add
or
mov
shr
retf
and
mov
ficomp
pop
mov
js
push
inc
popf
div
popa
sar
out
jmp
test
shl
adc
jp
gs
jg
jnp
mov
(bad)
adc
pop
ja
js
lods
sub
jbe
adc
cmp
retf
or
and
xlat
fs
jne
aad
icebp
cmp
rcpps
mov
cs
nop
aas
in
rcl
fwait
xchg
adc
gs
rol
cmp
cdq
pop
and
call
cmps
lds
cwde
jnp
fwait
ja
movs
fist
cmp
push
mov
or
addr16
jnp
mov
test
mov
jl
inc
repz
pop
xchg
(bad)
ss
pmaxub
xchg
das
and
jmp
xchg
ja
ss
inc
pop
push
adc
mov
add
sub
rcr
cmp
shl
popa
gs
movq
test
add
jbe
adc
in
inc
mov
sar
lea
inc
push
into
xchg
stos
push
inc
push
iret
test
add
and
popf
fimul
cld
iret
ror
cmp
test
fstp
mov
lods
js
out
and
push
jns
outs
dec
hlt
xor
add
movs
mov
xchg
dec
sub
cmp
int
cs
jbe
cli
outs
add
imul
cmp
sub
or
mov
sti
jnp
push
imul
mov
mov
test
dec
fimul
push
pusha
add
daa
xor
fiadd
xor
and
(bad)
int3
scas
in
adc
movs
or
sub
inc
fcomp
mov
mov
jp
jmp
push
cld
dec
mov
cmp
push
into
push
inc
sub
rol
leave
cwde
or
sbb
imul
cwde
mov
or
add
xor
imul
mov
out
test
jg
add
fist
les
(bad)
in
cmp
push
call
inc
pop
sbb
ret
jmp
rcr
js
cmps
popa
mov
and
jp
add
mov
xor
xor
repnz
ficom
lds
mov
(bad)
mov
add
xor
or
xchg
call
(bad)
mov
cld
cld
in
or
enter
les
xchg
cmp
imul
mov
sbb
iret
in
test
movs
add
sub
hlt
jno
stc
push
cli
and
ret
inc
out
fnstenv
fcomp
cdq
dec
mov
call
xchg
cld
test
dec
movs
and
test
xor
icebp
js
adc
ret
push
sub
pop
cmp
iret
mov
jnp
and
retf
cld
(bad)
mov
or
adc
adc
inc
mov
push
mov
outs
(bad)
(bad)
push
stos
ret
pop
sar
and
loope
jne
mov
loope
mov
repnz
push
sub
adc
bound
dec
out
mov
pushf
leave
mov
(bad)
test
inc
(bad)
(bad)
stc
loope
add
and
push
movs
ret
push
imul
daa
xchg
and
cmps
ja
in
mov
and
and
cli
adc
call
(bad)
fild
movs
mov
cmp
arpl
pop
mov
adc
mov
sti
out
mov
mov
ins
or
mov
pusha
push
xlat
sahf
idiv
inc
fsub
jp
push
push
pop
inc
add
adc
add
ins
mov
sti
xor
cdq
xor
rcl
dec
mov
aad
sbb
cdq
mov
movs
jecxz
je
push
out
sbb
inc
sub
cmc
out
loopne
mov
cmp
inc
pop
lods
mov
push
jmp
add
sbb
dec
dec
ins
push
inc
jo
sbb
mov
dec
sub
call
jno
out
loop
rol
and
shr
jg
mov
out
cmp
mov
mov
int
out
out
icebp
ret
jnp
movs
and
mov
push
loopne
xor
call
dec
sbb
xchg
aaa
mov
xchg
add
je
and
push
jle
ins
pop
ror
fwait
jno
hlt
mov
dec
shl
mov
sti
xchg
mov
mov
mov
movs
mov
adc
test
xor
out
cmp
scas
or
cmps
sbb
inc
icebp
retf
dec
push
mov
int3
dec
pop
dec
jmp
inc
pop
mov
dec
sub
fadd
cwde
int3
bound
out
xlat
cmovnp
adc
(bad)
dec
not
adc
push
and
call
int3
sbb
jb
xor
sbb
sbb
and
cmp
ds
dec
cwde
sahf
js
(bad)
dec
sub
lock
pushf
neg
adc
fcomip
add
add
scas
mov
push
pop
push
jb
or
mov
cmp
sub
mov
call
push
or
sbb
cdq
add
dec
bound
and
(bad)
mov
test
cmp
xchg
cs
test
dec
or
xchg
in
repz
inc
jbe
jb
adc
test
ror
adc
jnp
arpl
and
repz
arpl
inc
add
mov
mov
test
shl
jb
outs
jmp
sub
and
mov
retf
cwde
out
loop
(bad)
xor
dec
test
mov
mov
sub
imul
add
mul
xor
jge
xchg
aad
scas
and
adc
jecxz
cmc
shl
imul
movs
adc
cli
fnstenv
jecxz
cli
push
out
daa
fmul
cmp
into
ret
lahf
int3
int3
je
xor
fadd
mov
add
and
dec
ror
(bad)
lahf
out
dec
ins
cmp
std
jge
dec
fwait
dec
xchg
inc
jecxz
push
add
pop
xor
cli
pop
dec
arpl
cli
cli
in
dec
sbb
xchg
inc
mov
push
lods
aas
sahf
dec
jge
pop
add
or
xor
mov
mov
out
xchg
mov
xchg
and
ror
and
fcom
push
mov
mov
xchg
loop
or
shl
pop
sub
scas
xor
(bad)
pop
lea
scas
push
xchg
push
mov
push
enter
push
mov
int3
retf
retf
xchg
out
xor
jne
mov
add
outs
push
outs
test
xchg
inc
pop
scas
cli
mov
pop
jbe
inc
mov
mov
ret
jmp
or
or
jmp
mov
movs
gs
loop
ins
jnp
jns
add
dec
ror
repnz
xor
xchg
and
hlt
dec
cmp
adc
mov
aas
imul
ret
sahf
pop
xchg
inc
push
sar
xchg
pop
cdq
call
sbb
add
mov
mov
dec
ret
mov
or
add
cs
adc
in
lods
cmp
or
cmp
test
jmp
inc
mov
add
push
fs
mov
jns
fisttp
adc
je
scas
call
loop
lock
cmps
jno
fimul
and
xor
inc
arpl
add
mov
pop
les
jle
fsubr
mov
jbe
xor
es
mov
cmp
adc
mov
pusha
dec
out
adc
cmc
sbb
fwait
retf
and
je
sub
pop
mov
fidivr
(bad)
sub
icebp
sub
pop
bound
in
leave
jge
cmp
daa
adc
fnstenv
jbe
test
hlt
rcr
add
jge
jle
xor
push
add
aaa
imul
xor
xchg
push
repz
jecxz
add
in
or
(bad)
ins
inc
add
rcl
sbb
sub
cmp
fld
gs
ficom
push
mov
push
mov
addr16
mov
push
stos
(bad)
out
push
sbb
nop
or
nop
dec
lods
mov
mov
loopne
(bad)
jno
scas
xchg
mov
cs
lea
lods
outs
sbb
or
mov
add
pusha
jbe
scas
lods
inc
and
dec
cld
test
jnp
push
lds
inc
xchg
pop
dec
nop
cwde
xlat
push
loop
inc
dec
call
xor
stc
repnz
lea
jo
cmps
int
push
cmp
mov
xchg
cmps
sbb
mov
inc
popf
icebp
push
xchg
inc
mov
adc
aam
xor
lods
lods
jmp
add
(bad)
test
pop
in
push
dec
jbe
mov
cmc
xchg
leave
loopne
mov
idiv
or
cli
jno
jge
in
sbb
aas
ja
cmovae
sar
stc
pop
fdiv
rol
fwait
nop
jno
call
push
fild
ret
cld
adc
jge
lods
xor
cs
xchg
or
jmp
gs
aad
daa
mov
xchg
inc
(bad)
out
push
inc
std
push
push
(bad)
and
xor
jne
cdq
fucomi
cmc
lea
pop
inc
inc
sbb
mov
sub
test
pop
push
mov
sub
xor
xchg
sbb
int3
mov
dec
in
sub
xchg
arpl
stos
cs
add
add
popf
xor
add
mov
or
adc
movs
push
hlt
sub
cs
imul
out
mov
(bad)
sbb
(bad)
hlt
inc
ss
pop
sub
mov
ret
cs
out
mov
int
cdq
xor
ins
loop
sar
(bad)
clc
xchg
retf
pop
pop
xchg
std
(bad)
out
mov
jp
out
imul
xchg
push
cmc
stos
jecxz
mov
gs
xor
sbb
pop
mov
or
mov
and
dec
or
and
iret
jbe
mov
lds
push
cwde
mov
or
push
out
mov
fbld
ret
dec
pop
jbe
loopne
mov
and
xor
xchg
sbb
xor
xor
jp
xor
addr16
jle
not
movs
fisttp
and
imul
push
les
xor
aad
lahf
into
xchg
jp
add
cmp
or
jae
mov
test
into
dec
leave
sbb
into
inc
(bad)
(bad)
xchg
out
dec
pop
fdivr
fdecstp
sub
pop
imul
xchg
call
jo
fsub
dec
cmp
sbb
jnp
jge
popa
xchg
xchg
push
cmp
loop
call
retf
mov
pop
inc
inc
clc
and
xor
cmp
adc
cmp
dec
sti
fstp
ficom
xchg
mov
ss
aaa
adc
data16
xor
rcl
loope
in
call
outs
loope
jl
(bad)
leave
loope
cmp
sbb
dec
ins
pop
pop
aaa
add
sub
retf
mov
mov
mov
out
cmp
mov
xor
push
rcl
and
arpl
(bad)
jns
ret
sbb
jg
gs
jp
hlt
xor
ret
add
imul
stos
loop
aad
loope
mov
fisubr
xor
aas
bound
repnz
lea
add
aas
in
xchg
cmps
(bad)
xchg
fisub
dec
mov
add
das
push
pop
pop
lock
cmp
(bad)
imul
faddp
and
mov
jp
adc
vmread
fcomp
dec
outs
mov
aaa
shr
(bad)
mov
pop
or
dec
ret
dec
in
fimul
inc
add
or
mov
outs
mov
mov
pop
pop
imul
mov
sbb
sti
ja
xchg
mov
mov
jne
outs
fist
mov
push
adc
aad
sti
das
push
or
jae
inc
(bad)
lods
xlat
js
call
xor
imul
mov
sbb
je
arpl
(bad)
inc
push
mov
pop
inc
bound
xchg
loope
pop
shl
std
sbb
xor
pushf
lods
imul
add
sbb
push
xlat
pop
mov
int
push
in
bound
mov
mov
mov
movs
xchg
push
addr16
call
xchg
push
mov
jo
outs
lds
stc
outs
inc
daa
enter
loope
outs
mov
jnp
sbb
adc
or
cwde
movs
out
pop
inc
les
daa
inc
cmp
xchg
sub
push
(bad)
mov
fs
es
fistp
popf
xor
sahf
or
push
mov
mov
(bad)
xchg
pushf
popf
call
or
dec
rcr
pop
sbb
jmp
test
and
in
adc
jge
mov
mov
mov
add
sub
mov
(bad)
ror
or
lahf
stos
sbb
arpl
jbe
jecxz
movs
jmp
(bad)
jb
add
mov
stc
ds
pop
mov
mov
adc
rol
push
mov
cmp
push
jns
movs
(bad)
dec
push
cmp
iret
xchg
shl
push
fs
xchg
jmp
rep
push
jbe
cwde
lods
arpl
mov
out
xlat
jo
es
test
pop
int
adc
pop
popa
loope
dec
imul
fimul
mov
stc
xor
addr16
retf
cli
shl
lods
add
mov
push
pop
pusha
cli
xor
imul
jne
mov
add
jo
pop
xor
xor
hlt
addr16
popf
outs
leave
fwait
scas
lock
icebp
pop
xor
ss
repnz
sub
jno
jne
or
cmp
push
sub
mov
pop
dec
in
lods
sbb
jns
ds
not
push
jnp
stos
cmp
icebp
jb
cmp
cld
push
jmp
shl
xor
dec
inc
xchg
add
call
cmp
push
pop
out
cli
outs
mov
loope
movs
xor
jg
fs
sbb
imul
jns
adc
fs
cs
ret
inc
pop
lock
dec
rcl
mov
jl
lds
mov
mov
push
ss
ins
fbstp
mov
sub
push
pop
fsin
ins
mov
mov
mov
ror
mov
push
test
shl
rcl
je
push
add
cmps
rcl
rcl
data16
out
outs
popa
and
int3
push
aam
out
sbb
test
pop
dec
(bad)
push
or
pop
push
fstp
inc
shl
data16
mov
jg
and
nop
jg
lock
or
dec
inc
and
mov
in
sbb
dec
inc
(bad)
aas
ret
enter
aas
aam
repnz
data16
add
sub
push
xor
push
adc
nop
xchg
dec
dec
cmp
or
jle
clc
ficomp
cmp
into
jo
test
inc
sbb
jecxz
mov
jnp
jp
jae
inc
mov
mov
push
call
cld
xchg
lahf
js
pusha
movs
scas
loope
add
cmp
mov
stos
jl
out
dec
out
mov
enter
xor
lock
lds
or
mov
arpl
sbb
pushf
fsub
into
cmp
ss
jae
clc
mov
fwait
mov
or
inc
push
out
push
int3
iret
cmp
js
mov
xchg
sbb
xchg
and
lods
cmp
push
lea
ins
jns
jmp
dec
arpl
sti
sbb
dec
cmc
sahf
mov
and
jg
cmp
xchg
rcr
shl
inc
test
in
cmc
lods
data16
out
push
mov
lahf
and
push
xchg
dec
lahf
loope
jg
movs
in
mov
sbb
(bad)
stc
iret
jb
popa
ret
xchg
push
pusha
pop
push
and
in
push
int3
stc
mov
push
push
sub
in
pop
pop
jmp
and
adc
adc
jmp
add
mov
icebp
cmp
loopne
xchg
inc
idiv
sub
les
aas
test
sub
fidivr
adc
mov
pop
cmp
ss
in
dec
xor
jno
cli
dec
cli
cmp
rcl
inc
inc
xor
fwait
enter
daa
xchg
call
loop
pop
data16
out
out
movs
(bad)
sbb
outs
xchg
rol
push
inc
dec
hlt
icebp
jp
xchg
cmp
test
out
push
sti
inc
push
xchg
sub
(bad)
fnsave
inc
iret
in
in
sub
cwde
add
and
cmp
cmp
loope
jecxz
xchg
pop
pop
stc
cs
mov
lock
mov
sbb
xchg
mov
pop
aaa
add
push
push
ret
loope
xchg
mov
mov
leave
imul
jno
cmp
xor
pop
repnz
inc
cmps
sbb
pop
push
sub
and
fdivr
aad
jns
jmp
fidiv
sbb
movs
lea
jns
mov
jns
loopne
adc
or
pop
add
xor
fisttp
mov
jno
mov
and
lods
ja
or
jg
test
sbb
fsubr
jo
retf
and
mov
mov
jle
idiv
adc
in
pop
aas
dec
mov
pop
cmp
inc
in
mov
mov
mov
lds
cmp
mov
shr
fimul
adc
pop
stos
mov
sbb
dec
add
pusha
jle
jecxz
cli
ss
mov
pop
jae
push
bound
fmul
xor
and
adc
xor
or
inc
fisttp
dec
xchg
dec
cld
dec
inc
push
into
xor
or
clc
adc
dec
pusha
(bad)
fsubr
in
(bad)
cmp
mov
les
push
stos
xor
pop
stc
popa
fwait
js
and
mov
cmp
sub
icebp
mov
xchg
sar
sbb
jmp
sbb
jae
clc
test
dec
xlat
ret
gs
lods
sbb
pop
or
add
fst
xchg
repz
xor
and
mov
rol
out
mov
lahf
fstp
push
shr
pushf
add
jmp
cld
cmps
xor
jb
or
imul
mov
mov
lock
jno
retf
mov
mov
int
dec
xor
dec
sbb
rcl
inc
mov
sub
vmread
add
sbb
xlat
mov
ds
test
repnz
push
adc
or
ins
cmp
xchg
lea
aad
mov
repnz
sbb
mov
mov
jbe
cli
je
inc
and
sbb
xchg
cmps
push
add
in
cmp
ds
sub
in
pop
xor
sbb
sub
out
iret
jmp
mov
dec
xchg
mov
mov
mov
jae
mov
mov
bound
adc
aam
push
(bad)
(bad)
cmp
adc
mov
imul
inc
pop
test
popa
into
stos
jp
movs
xchg
imul
cdq
sar
retf
sti
fild
sti
les
sbb
and
push
jp
aad
cmps
xchg
sbb
mov
jp
leave
rcr
out
cmp
and
(bad)
call
rcl
mov
fcom
mov
pop
cmps
pop
xchg
push
into
sbb
out
jmp
pop
les
add
sbb
push
add
fnsave
les
in
ss
retf
adc
loopne
inc
xchg
jmp
in
push
sbb
add
and
rcl
loope
popf
jbe
aaa
jmp
test
(bad)
mov
in
test
scas
jno
cmp
out
clc
data16
imul
call
xchg
js
call
add
les
(bad)
push
jno
jo
loope
in
and
cmps
mov
inc
movs
pop
mov
dec
out
xchg
imul
mov
push
cmp
adc
adc
inc
dec
and
mov
or
ins
pop
int
pusha
add
leave
rol
outs
stc
std
icebp
mov
retf
or
xor
jo
add
jle
and
test
sbb
ret
fs
lds
cmp
pop
add
inc
jl
jl
dec
fnstsw
dec
mov
or
jne
fnsave
mov
jbe
and
pop
fcom
mov
movs
gs
aam
pop
adc
fnstsw
js
out
or
pop
or
pop
dec
je
aas
sti
enter
add
lds
rcr
add
nop
jecxz
call
jmp
rol
fnstsw
shl
int
add
mov
sbb
aaa
outs
dec
pop
cwde
and
loop
xor
dec
lds
sbb
mov
in
arpl
push
push
inc
jmp
jns
push
pop
mov
xlat
leave
retf
movs
push
fwait
and
scas
mov
xor
mov
jo
or
lods
in
fisttp
inc
cmp
sbb
loop
sub
inc
(bad)
mov
fcmovb
push
push
add
dec
hlt
je
std
aad
pop
bound
push
xor
fs
icebp
les
scas
jmp
out
(bad)
ds
sahf
dec
jecxz
inc
jo
in
or
sbb
aam
(bad)
sbb
add
sahf
push
cmp
fidivr
pusha
sbb
aaa
(bad)
and
test
out
fsubr
fs
xchg
xor
dec
jmp
pop
lods
xor
retf
jle
mov
mov
or
ret
mov
and
loopne
xchg
enter
test
add
mov
or
mov
lea
sbb
hlt
xor
arpl
jl
xchg
test
xor
cmp
jno
add
mov
pop
xchg
das
stos
mov
push
retf
dec
mov
sti
push
dec
push
ja
lds
jnp
lods
(bad)
cli
dec
add
shr
rcl
ror
add
(bad)
pop
xchg
jl
push
sti
jmp
pop
std
jp
ja
xchg
retf
sub
push
cmp
add
xor
retf
loope
mov
pop
mul
push
das
sbb
mov
stos
cmp
xchg
inc
out
es
mov
sbb
mov
ret
mov
fdivp
xchg
mov
int
xchg
test
stos
fstp
xor
inc
push
xor
inc
mov
push
push
ret
cmps
jmp
sahf
mul
stos
and
jl
gs
and
mov
mov
mov
pop
pop
fld
sahf
jg
cs
dec
scas
push
xchg
fcom
in
(bad)
das
push
push
jno
shl
neg
ret
scas
mov
clc
repnz
seta
cdq
clc
mov
adc
out
in
scas
jne
shl
int3
aam
add
inc
and
pop
sub
test
and
adc
cmps
xchg
sub
xchg
imul
or
pop
ret
mov
xchg
add
and
pop
ret
lods
fld
push
and
psubsw
and
into
or
mov
jge
out
loop
or
and
fidivr
inc
adc
sbb
fwait
shr
jns
icebp
inc
push
push
inc
sbb
mov
call
xor
fwait
dec
cmps
push
ins
and
int3
das
cdq
aaa
pop
jno
lods
adc
inc
popf
test
push
ret
repz
stos
mov
sbb
sar
xor
lods
xor
in
pushf
pushf
cmp
ss
sbb
sbb
div
inc
and
(bad)
rcl
cmp
gs
xor
xchg
pop
add
and
cmp
fs
movs
loope
call
jo
xlat
xchg
pop
mov
stos
out
push
xchg
stc
shr
and
add
pop
(bad)
fcmovnu
fld
in
dec
dec
(bad)
out
fwait
add
push
cmp
fisttp
mov
jecxz
push
ficom
enter
push
pop
add
call
sub
xor
mov
rcr
popa
shl
dec
aas
adc
jecxz
sbb
cwde
push
mov
mov
pop
and
ret
in
push
push
sti
idiv
adc
in
cdq
outs
ins
dec
pop
dec
daa
fld
icebp
pop
aaa
ss
add
pop
ret
(bad)
jmp
cmp
mov
push
mov
bound
pop
pop
xchg
and
fsincos
cmp
ins
xor
push
pop
inc
mov
mov
ficomp
cmp
mov
dec
bound
fxch
or
into
mov
mov
add
xor
ss
ror
pop
icebp
inc
mov
mov
aas
inc
int
popf
dec
mov
retf
stos
ja
or
mov
lock
jbe
es
add
xor
out
sub
mov
sbb
loop
imul
jae
popa
jns
push
jns
loope
repnz
xchg
popa
sahf
pop
xchg
mov
lahf
loope
repnz
leave
lods
test
sub
nop
inc
xchg
jb
out
cmp
xor
test
rol
xor
jle
fidivr
lock
fwait
sub
pop
stos
cmp
sti
push
or
xchg
pop
inc
leave
and
ror
daa
cmp
push
jl
pop
xchg
jae
cmp
sub
out
and
in
xchg
pusha
pushf
dec
sbb
in
movs
cmp
cmp
int3
xor
arpl
(bad)
loopne
loop
call
sbb
lock
ret
dec
xor
sbb
lock
xor
fcomp
or
imul
pop
jo
gs
push
out
mov
mov
out
adc
into
out
add
sbb
repz
fdiv
aaa
in
imul
sub
xor
aas
outs
enter
popa
xchg
stos
in
div
push
cdq
sbb
add
loop
dec
jmp
cli
mov
push
loopne
xor
or
(bad)
push
data16
jge
and
in
xchg
pop
inc
xor
jecxz
retf
xor
pop
ja
mov
or
jnp
cmp
mov
xchg
jg
sbb
out
add
lods
ror
data16
pop
and
aaa
inc
retf
fmul
rol
lods
ins
push
cli
loop
jb
xchg
push
sahf
cmp
(bad)
rcr
test
xor
cmp
jg
pop
xor
leave
pop
ret
rcl
cmps
or
out
sbb
dec
dec
push
sub
daa
or
retf
jb
mov
mov
cmp
or
lds
jg
cdq
push
xchg
daa
pop
ins
add
mov
dec
cmps
sbb
jge
cmps
(bad)
mov
fwait
jle
sahf
mov
add
xor
jle
push
add
sub
cmps
jmp
and
push
aam
arpl
add
pop
or
aas
lock
inc
call
bound
sub
sub
mov
call
adc
dec
mov
sbb
xchg
addr16
jbe
and
jg
dec
cmp
push
cwde
mov
imul
mov
sbb
jecxz
xor
xchg
test
fs
aad
mov
cmps
mov
pusha
cwde
mov
cld
add
mov
es
dec
add
test
inc
add
and
into
mov
sub
xchg
js
aaa
fdivr
stos
pushf
rcr
(bad)
jmp
or
cmp
ins
outs
call
gs
add
ds
add
sbb
push
sub
ins
sub
xchg
in
retf
mov
and
je
or
cmp
int
retf
into
adc
ffree
jbe
sbb
and
inc
mov
push
jns
dec
jmp
or
movs
sub
shl
xchg
fwait
scas
daa
shl
addr16
scas
mov
je
pop
inc
cdq
aas
das
dec
pusha
(bad)
aaa
sub
lods
inc
dec
pop
in
mov
loopne
aad
pop
cmps
cwde
test
xchg
jp
stos
jg
js
js
and
mov
loope
xchg
lahf
pop
test
bound
(bad)
shl
test
xchg
cmc
mov
cmp
pop
bound
iret
lock
and
sbb
cmp
aad
shl
inc
mov
mov
stc
mov
sub
nop
scas
pop
jno
cmp
dec
push
inc
cmp
out
pop
in
aam
jmp
add
pcmpeqd
stos
mov
xlat
jnp
das
sub
cmc
cmps
cmp
repnz
in
inc
mov
repz
cld
mov
dec
or
or
iret
xchg
out
jbe
cdq
inc
mov
pop
int
inc
out
push
cmp
adc
bswap
and
cmp
int
popa
repz
pop
inc
xchg
xlat
addr16
jmp
push
scas
imul
pop
frstpm(287
xor
gs
add
mov
inc
popf
fisttp
jne
leave
adc
bound
jbe
jle
inc
pusha
mov
shl
into
xchg
hlt
sbb
pop
push
mov
lods
inc
add
out
out
mov
rol
aas
xchg
test
lods
sub
and
jl
loop
jecxz
xchg
imul
sub
or
test
pop
imul
div
dec
ja
add
add
mov
movs
loope
loop
or
cmps
xchg
sub
fimul
enter
push
jle
lahf
add
add
fnstcw
hlt
mov
cmp
pusha
mov
push
in
cmp
sub
out
hlt
popa
or
(bad)
(bad)
pop
sbb
aam
sub
lods
xlat
fwait
scas
in
retf
adc
dec
test
mov
mov
es
aaa
dec
jge
jnp
fiadd
adc
xchg
jmp
pop
jge
fbstp
inc
push
popf
pop
imul
mov
scas
fidiv
loop
xchg
shl
cs
into
test
mov
lds
rol
pusha
mov
sbb
movs
shr
sbb
fs
(bad)
shl
pop
cmp
ja
cwde
and
sub
lods
test
push
rcr
push
dec
adc
div
push
jle
mov
jno
and
lods
mov
(bad)
ins
push
gs
aas
inc
add
xor
rcr
and
mov
cmc
fsub
outs
adc
pop
jecxz
mov
jp
ds
sbb
movs
fnstenv
mov
jge
ror
sbb
cmp
lods
int3
pop
mov
mov
inc
not
repnz
movs
stos
mov
pop
adc
and
in
sub
aad
imul
mov
mov
xchg
push
mov
fwait
push
icebp
mov
push
pop
std
shl
inc
data16
cmp
int3
(bad)
aas
pop
cmps
stos
mov
(bad)
addr16
fldcw
repz
pop
cmp
stos
xchg
adc
mov
in
stos
push
sub
ins
lods
push
and
jl
out
hlt
push
or
mov
push
shl
push
enter
dec
and
cmp
xor
mov
jmp
movs
mov
xor
sbb
mov
outs
mov
push
imul
push
adc
mul
fs
aam
movs
(bad)
aad
dec
push
and
adc
in
dec
cmp
loop
jnp
(bad)
arpl
enter
fdivrp
and
daa
cmc
mov
ret
in
ret
das
ret
fsub
iret
ja
out
stc
mov
and
call
rcl
loope
je
pusha
movs
jno
fwait
jno
push
sbb
sar
in
or
pop
in
adc
cmp
cmp
push
xchg
jbe
out
cmp
mov
js
xchg
pop
mov
imul
jp
or
fcom
or
mov
push
in
hlt
mov
jbe
sub
inc
mov
mov
adc
adc
xor
rol
pop
fstp
popa
sub
mov
cdq
test
jmp
dec
setle
scas
mov
push
(bad)
pop
jae
cmp
mov
pop
xor
jne
enter
mov
movs
mov
inc
pop
and
(bad)
mov
pop
sub
js
push
int
pop
cld
test
(bad)
repnz
sbb
mov
push
inc
xchg
jne
cmp
cmp
fld
push
test
lahf
shl
test
icebp
imul
jne
fild
push
fwait
test
rcl
test
fnstenv
loope
inc
sbb
mov
lea
fsubr
ja
repnz
into
jo
inc
inc
daa
sub
icebp
test
(bad)
xor
arpl
retf
xor
push
fs
das
pop
push
pop
mov
lods
sbb
ret
fadd
mov
mov
jge
push
add
lods
clc
add
mov
sbb
inc
pop
jg
lds
ds
dec
movs
out
sub
ja
xor
sbb
into
cli
loope
(bad)
stos
xchg
aad
aam
xchg
push
mov
pop
pop
loope
ss
retf
mov
mov
fstp
retf
xchg
fimul
inc
(bad)
mov
leave
xchg
push
add
jg
cmc
outs
repz
push
inc
and
or
adc
adc
shr
cmp
xchg
das
inc
or
aas
pop
je
in
mov
dec
inc
cdq
out
push
fwait
push
xchg
xor
xor
dec
jle
ins
test
push
xchg
cmp
push
(bad)
inc
inc
adc
ret
ds
jae
outs
loop
xchg
aam
adc
fidivr
mov
jbe
jl
sub
mov
cmps
xchg
xchg
inc
test
add
dec
jne
int
(bad)
pop
movs
call
sub
sbb
push
and
add
cmps
mov
mov
mov
mov
cwde
jge
push
push
push
push
xor
test
xchg
shl
dec
scas
fsub
jns
pop
xor
cmp
xor
jge
or
mov
imul
jecxz
loopne
js
loopne
and
pop
dec
shl
jl
into
sub
jbe
imul
or
push
clc
(bad)
shr
dec
mov
das
bound
mov
push
cmp
ret
leave
(bad)
data16
mov
inc
into
(bad)
jmp
push
push
stc
pop
sti
cmps
or
xchg
leave
cmp
and
mov
cmps
adc
pop
sbb
push
pusha
mov
mov
sar
(bad)
out
out
add
mov
(bad)
push
test
test
push
dec
lahf
mov
lods
sub
test
mov
enter
push
dec
stos
icebp
mov
lods
or
rcl
adc
push
inc
cld
std
sub
jmp
popa
xchg
(bad)
pop
cmp
sub
and
lock
cmp
iret
xor
adc
push
push
mov
movs
ins
test
xor
adc
inc
(bad)
fst
pop
js
data16
sub
add
fs
fucomp
les
pop
les
pop
sub
in
jmp
mov
xchg
addr16
in
mov
je
je
mov
sar
dec
add
out
dec
jge
or
sub
jmp
xlat
fcmovnbe
movs
jle
add
ret
cli
add
mov
je
in
sbb
push
into
clc
nop
sub
test
mov
add
sahf
imul
shr
in
sub
arpl
pop
sub
mov
int3
inc
aas
mov
aas
push
push
sub
inc
jle
jge
rol
or
sub
js
or
call
push
lods
pop
es
leave
dec
push
ja
sbb
add
jns
pushf
ror
or
mov
repnz
inc
xchg
je
inc
enter
dec
stos
lds
mov
cmp
dec
outs
sbb
mov
xor
pop
ins
dec
imul
xchg
xchg
mov
xor
xchg
fisubr
out
sbb
push
lods
add
dec
or
fnstcw
push
xor
jle
popf
fimul
mov
in
int
or
fadd
xor
mov
cmp
jecxz
shl
cmp
sti
and
fdiv
pop
add
adc
fmulp
xor
mov
and
lahf
add
in
mov
(bad)
cli
add
bnd
mov
mov
push
outs
(bad)
ss
(bad)
cmp
arpl
fistp
push
sahf
ja
mov
mov
pushf
inc
push
mov
mov
test
cmp
pusha
jmp
cdq
int
clc
js
xor
jo
and
jl
add
daa
inc
dec
ins
ins
stos
outs
and
fmul
jmp
cmp
stos
adc
fld
fisub
push
out
out
test
test
call
and
mov
movs
retf
pop
mov
sub
and
push
and
popf
pop
cmp
das
push
lock
fiadd
addr16
jg
xor
pop
mov
push
jp
mov
mov
xor
stos
sub
jmp
push
add
add
mov
inc
inc
dec
fld
add
call
mov
adc
sbb
mov
mov
add
test
add
test
cmps
add
call
adc
ins
shl
in
call
out
enter
push
sub
xor
push
xchg
or
xor
nop
fsubp
loopne
js
dec
sbb
lea
test
and
cwde
lahf
clc
mov
inc
in
sub
div
inc
in
retf
jae
clc
cmps
add
fwait
sub
out
cmp
pop
fucom
icebp
inc
(bad)
stc
pop
mov
popa
jle
and
popf
shl
jle
std
js
outs
mov
sahf
sti
sbb
jns
inc
cmp
inc
aaa
add
add
xchg
inc
lock
lods
popa
push
add
xchg
add
cmp
and
aas
inc
loop
cmps
mov
repnz
push
dec
data16
sub
and
cmp
inc
inc
arpl
ss
mov
je
cs
addr16
xchg
xchg
dec
add
push
cld
push
sahf
sub
cmp
push
mov
lahf
inc
loope
dec
div
inc
leave
loopne
add
push
pop
nop
ret
xor
lds
mov
(bad)
sar
jnp
int
pop
mov
lahf
xchg
imul
lods
ins
sub
stc
and
mov
add
aas
inc
loopne
adc
xor
add
mov
sbb
xor
mov
test
ins
xor
dec
xchg
mov
or
cmp
test
push
clc
jl
push
iret
dec
sahf
dec
jo
scas
ja
fcmovnu
mov
cmp
xchg
cmc
out
lods
pop
xor
jl
and
fcom
push
inc
pusha
stos
fsubr
sbb
cli
fwait
(bad)
not
jecxz
test
cdq
xlat
jns
inc
sub
pop
pop
xchg
sub
mov
push
retf
(bad)
mov
mov
scas
js
dec
not
inc
add
xlat
xchg
xlat
test
mov
jno
pop
dec
into
out
mov
adc
std
push
test
pop
jl
pop
mov
shr
pop
jmp
arpl
repnz
cmp
aam
stc
jp
xor
movs
cdq
arpl
xor
(bad)
and
in
iret
jmp
mov
and
pusha
out
pop
adc
mov
mov
sub
sbb
inc
mov
sar
ja
add
mov
ins
ss
add
push
jns
clc
pop
mov
jne
xlat
test
push
out
lods
jae
pusha
aam
jp
xor
bound
stc
mov
adc
jg
dec
aam
loop
(bad)
(bad)
mov
sub
je
dec
addr16
fld
xchg
jl
loope
rcl
jb
in
aam
xchg
(bad)
xchg
sbb
xchg
loopne
es
xor
mov
test
(bad)
xor
pop
les
sahf
fsub
and
shl
fimul
push
xchg
mov
(bad)
mov
lahf
in
fdiv
call
inc
push
std
fwait
jo
xchg
xor
retf
cmp
xor
dec
dec
pmaxsw
sbb
cmp
shr
(bad)
mov
das
call
push
mov
pop
movs
jns
dec
pop
mov
data16
xchg
cdq
inc
jno
aaa
mov
rcr
test
in
mov
jnp
sub
adc
pusha
(bad)
(bad)
fwait
sbb
fld
cmp
test
sub
mov
adc
xchg
sbb
jbe
movs
mul
dec
fwait
inc
xchg
pusha
loopne
js
(bad)
retf
mov
fisttp
mov
or
jno
cs
stos
mov
clc
adc
dec
loope
xor
cmp
and
movs
push
out
adc
jle
mov
mov
arpl
and
dec
dec
iret
stc
push
ins
xchg
push
push
nop
pop
sub
(bad)
jne
cmp
or
not
or
adc
pop
inc
mov
stos
or
jns
jmp
jmp
dec
push
ret
stc
xchg
std
fimul
jp
inc
sbb
add
jle
pop
(bad)
jg
push
sbb
int3
test
cmp
and
xchg
dec
ss
jle
mov
xchg
jp
xchg
iret
sub
mov
push
fld
xchg
retf
scas
into
dec
loope
inc
sub
int3
repnz
push
les
xor
sahf
mov
and
fs
popf
add
and
aam
add
mov
inc
mov
inc
jmp
aam
das
aam
shr
add
cmp
add
arpl
rcl
fstp
repnz
fbld
jo
call
mov
add
dec
lock
sbb
and
mov
test
stos
pop
mov
pushf
(bad)
jbe
push
xor
stos
mov
fs
lods
pop
es
out
ret
xchg
movs
dec
mov
ss
xlat
enter
fs
jo
xor
fiadd
xor
and
mov
push
aam
nop
cmp
inc
stc
or
jl
fwait
arpl
xchg
fdiv
shr
stos
ins
aas
loopne
push
aas
xor
imul
push
mov
add
ror
mov
inc
test
or
pushf
add
idiv
gs
ja
imul
test
lods
(bad)
or
dec
bound
add
sbb
shl
xor
sbb
jmp
icebp
push
ror
scas
ins
jne
data16
xchg
(bad)
mov
aad
outs
dec
shr
push
jb
jl
xor
addps
scas
add
cli
popf
mov
aam
sbb
fwait
retf
or
addr16
jo
xor
in
pusha
sub
dec
(bad)
ds
cmp
test
test
(bad)
pop
mov
inc
sub
in
adc
movs
dec
mov
cmps
jns
xlat
push
ins
pop
cmp
xchg
call
inc
jge
test
(bad)
inc
test
push
inc
fistp
das
xchg
dec
sbb
xchg
jmp
test
rol
pop
inc
fwait
popa
ja
loopne
movs
dec
pusha
mov
or
ret
cmp
jmp
sbb
mov
adc
dec
jmp
mov
sub
sbb
int
mov
push
pushf
adc
icebp
clc
dec
sbb
jno
addr16
push
jl
icebp
je
jbe
test
cmps
loope
in
data16
inc
push
pushf
fisubr
xlat
sub
push
mov
mov
test
std
inc
push
xchg
ret
test
rol
push
sub
xchg
mov
mov
pop
dec
rcl
and
jnp
test
add
and
je
sti
scas
loop
lds
scas
xchg
jg
jbe
nop
in
cmp
add
xor
mov
cmps
outs
stos
and
ret
lds
pop
nop
mov
mov
loope
ret
push
inc
std
call
imul
icebp
in
mov
cmp
xchg
daa
mov
ds
pusha
test
jno
out
fisub
sbb
mov
fs
loopne
inc
das
mov
es
nop
rcr
dec
ret
mov
or
gs
cli
cmps
daa
je
cmc
test
push
iret
fisttp
lea
mov
cmp
dec
or
and
or
and
fild
xchg
fs
sbb
(bad)
in
gs
rol
daa
ds
and
std
daa
rol
ror
inc
scas
xchg
sub
shl
mov
pop
inc
lods
mov
(bad)
fcomp
add
sub
push
into
(bad)
repnz
mov
ja
push
mov
out
fld
repz
xor
imul
out
mov
xchg
(bad)
pop
scas
mov
ror
jp
cwde
mov
bound
fucomi
pushf
out
mov
add
in
test
pop
xor
lahf
sar
fwait
inc
cli
pop
je
lock
xor
ficom
jbe
cmp
xchg
ret
mov
enter
in
(bad)
data16
in
jbe
xchg
jnp
push
xchg
inc
mov
stc
imul
pop
inc
xor
in
js
fs
nop
js
mov
cmp
mov
push
test
jo
nop
mov
sub
jp
jmp
repnz
jne
xchg
sub
push
mov
and
cwde
cmp
jo
push
add
addr16
dec
xchg
pop
mov
imul
fnsave
loopne
mov
adc
aad
sbb
imul
and
stc
xlat
and
rol
xchg
pushf
aas
xchg
iret
jmp
and
arpl
pop
cmps
or
lds
mov
outs
movs
outs
xchg
sbb
test
psubusw
outs
pop
ja
repz
frstor
test
cmp
in
movs
xchg
out
and
xor
xor
jno
push
mov
mov
and
and
in
stos
xchg
pop
push
fidivr
inc
mov
mov
iret
idiv
mov
std
or
mov
dec
pop
jp
gs
scas
xor
sub
sti
mov
adc
cmp
movs
xor
adc
movs
cmp
adc
call
fidiv
mov
lods
cmps
xchg
sbb
jo
sahf
cmp
push
in
(bad)
stc
outs
cmc
add
and
push
(bad)
mov
cmp
loopne
sub
mul
add
dec
loop
jge
and
shr
xor
movs
and
scas
add
rcl
cld
outs
dec
(bad)
cmp
and
jno
out
cdq
and
and
stos
pusha
outs
mov
inc
scas
mov
or
or
sub
jnp
popf
clc
xchg
cmc
jbe
xor
xchg
sti
pop
cmp
push
cwde
sub
gs
ret
stos
jne
pop
int
and
inc
cld
xchg
int
sub
adc
add
xchg
(bad)
jne
pop
aas
mov
mov
xor
cld
cmp
push
fwait
xchg
sbb
sub
inc
xchg
cwde
cli
sbb
mov
imul
push
fsubr
mov
jmp
inc
(bad)
xchg
retf
jmp
mov
std
inc
cmps
pop
push
mov
xchg
jmp
daa
loopne
(bad)
(bad)
or
sbb
cmp
sub
mov
xor
dec
ja
retf
inc
mov
ins
xchg
cmp
popa
js
in
jmp
ds
(bad)
sti
inc
xlat
adc
inc
fwait
add
call
fild
push
mov
jb
jmp
jecxz
push
das
cdq
shl
push
out
mov
or
adc
dec
xor
outs
jmp
retf
in
out
push
push
cwde
push
dec
push
jge
cmp
sbb
cld
dec
sbb
(bad)
fcomp
pop
jecxz
add
repz
cli
shr
pop
adc
pop
mov
and
mov
or
fninit
cmp
das
fdivr
mov
and
mov
into
fwait
xchg
js
jno
mov
movs
lods
pop
test
adc
std
sbb
sahf
mov
retf
lds
ror
jp
fistp
sub
and
inc
mov
shl
push
mov
dec
mov
scas
dec
dec
push
pop
jle
cld
mov
cmps
mov
mov
rol
push
(bad)
popf
inc
loopne
dec
mov
iret
jg
or
dec
jmp
mov
ins
ds
mov
rol
cli
sahf
fcmovnbe
stos
enter
jge
jge
pop
repz
fbstp
mov
(bad)
jmp
jle
dec
adc
sbb
repz
jns
scas
(bad)
pop
ja
fcom
inc
out
mov
mov
xchg
repz
ret
lahf
push
adc
fstp
cs
cmp
push
pop
push
iret
jb
jno
jbe
mov
stos
xor
pop
dec
cdq
fwait
cmp
shr
lods
add
mov
jmp
jo
adc
loopne
div
and
mov
movs
mov
mov
jo
int3
dec
js
sbb
mov
adc
mov
(bad)
ret
adc
sub
adc
inc
dec
sbb
(bad)
pop
mov
mov
adc
push
mov
sub
mov
cmps
imul
addr16
xor
push
dec
cmps
adc
jecxz
movs
mov
lods
mov
or
mov
dec
mov
stc
in
mov
and
push
rcr
movs
adc
mov
add
cmps
daa
(bad)
mov
(bad)
jo
xchg
ror
jb
fs
jbe
(bad)
loopne
leave
mov
fsub
hlt
int
and
call
stc
fcomp
sar
cmp
mov
stos
jge
pop
mov
dec
xor
adc
inc
aaa
jns
in
cmp
test
mov
shl
dec
xor
dec
hlt
lds
mov
jnp
xchg
dec
adc
dec
fsubr
int3
loopne
mov
inc
dec
jl
mov
push
mov
cmp
test
imul
rol
and
retf
in
push
mov
add
adc
daa
mov
popa
dec
out
push
arpl
mov
sbb
adc
scas
repnz
je
sub
jmp
retf
enter
scas
jmp
sbb
mov
mov
rol
pop
pushf
xor
push
and
test
push
mov
and
adc
daa
rcr
sbb
sbb
xchg
movs
mov
loopne
outs
jecxz
in
xor
jmp
push
xlat
imul
into
mov
sub
adc
cli
inc
sub
and
sub
adc
out
fsubr
or
outs
retf
dec
adc
aad
inc
pop
stos
push
mov
and
or
mov
dec
scas
in
lods
les
outs
or
sub
arpl
jecxz
xlat
js
daa
mov
retf
das
dec
jnp
sahf
imul
and
int3
xchg
push
xchg
les
xchg
add
pop
vmovss
(bad)
fld
xlat
xor
mov
cmps
jl
loope
xor
fldcw
cmp
ja
cmp
(bad)
fisub
mov
xchg
and
pop
mov
stos
jp
in
add
add
pop
and
(bad)
mov
enter
xlat
xlat
cmp
jmp
test
aaa
xor
pusha
ja
xchg
out
outs
xor
out
and
fwait
lahf
shl
push
sbb
xchg
xor
clc
jge
jp
cli
scas
cmc
cmp
jb
gs
lock
shl
scas
and
clc
push
cmp
push
pop
js
mov
inc
sti
movs
add
rcl
xor
clc
adc
mov
sti
pop
inc
fwait
sub
cmps
push
push
lock
popf
pop
jbe
test
test
or
mov
sbb
add
(bad)
gs
out
jmp
xchg
fs
dec
mov
inc
into
int3
jge
mov
sub
out
ret
cmp
dec
xchg
inc
adc
push
cmp
push
stos
cld
fs
mov
clc
outs
stos
int3
outs
call
adc
in
mov
std
sub
xor
cmps
xchg
mov
das
adc
xchg
xor
mov
stos
bound
or
das
mov
pop
pushf
xor
or
inc
cwde
test
inc
stos
or
pop
leave
mov
pop
shl
test
rcr
lahf
inc
shl
dec
inc
outs
fadd
push
pop
fbld
xor
imul
dec
call
loop
(bad)
in
cmp
ins
add
(bad)
stc
call
nop
push
push
push
jge
sub
lods
jnp
sub
inc
add
push
or
inc
(bad)
loopne
popa
lock
dec
loopne
and
dec
idiv
pop
cmp
dec
(bad)
pop
cmps
mov
cdq
xchg
rcl
lds
push
cmp
and
add
(bad)
jo
ror
or
adc
xor
pop
daa
rol
in
add
stc
push
das
cmc
cmps
aas
test
ret
ins
mov
jg
or
sbb
sahf
sbb
cmp
(bad)
ret
call
pop
(bad)
adc
mov
jg
loope
jge
xchg
cvtps2pd
inc
sub
pop
xchg
mov
test
dec
daa
mov
loop
je
or
cmp
xor
adc
mov
or
test
xchg
fcomp
call
jmp
into
fisttp
sbb
sub
out
push
mov
jl
add
faddp
or
dec
push
ror
outs
or
mov
ss
loop
mov
scas
dec
mov
in
jmp
iret
pop
or
push
outs
mov
pop
inc
loopne
and
push
(bad)
aad
jp
pushf
mov
dec
mov
pop
sbb
cmp
cmp
dec
cmp
jne
push
or
or
ror
xchg
adc
add
mov
or
test
and
jne
outs
dec
dec
loop
pop
(bad)
push
rcl
cmp
inc
xchg
push
in
sbb
popa
fld
aas
cmp
leave
pop
sti
mov
(bad)
sti
add
jle
std
mov
jbe
dec
fwait
sub
push
ss
ins
mov
xor
or
dec
jmp
into
add
add
adc
pop
xor
shl
and
pop
inc
push
inc
and
and
inc
(bad)
shr
rcl
loop
popf
int
mov
jg
sbb
int
mov
arpl
jo
mov
ret
scas
pop
leave
push
(bad)
fisttp
mov
xor
cmp
rcr
or
adc
mov
out
cmps
sysret
sbb
sub
mov
pop
xor
pusha
into
lds
jb
pop
retf
loope
bound
inc
(bad)
or
rol
mov
mov
mov
ins
pop
shl
popf
loop
loope
mov
es
mov
fcomip
sub
dec
xchg
mov
ret
and
mov
neg
out
fistp
xchg
or
pusha
call
add
in
loopne
xchg
xor
mov
mov
add
add
mov
dec
jp
cmp
inc
add
hlt
fisubr
dec
fidiv
rcr
xchg
icebp
push
out
sbb
push
call
xchg
and
(bad)
std
enter
jle
std
push
arpl
clc
cwde
pushf
popa
lods
nop
icebp
iret
popf
sahf
loop
dec
add
xor
es
add
push
pop
mov
add
ret
jbe
(bad)
mov
mov
rol
ror
movs
sub
shr
sbb
jno
sbb
and
adc
mov
xchg
ret
pop
les
or
ret
sub
mov
mov
inc
inc
dec
pop
mov
in
jns
sub
stos
adc
jg
mov
fwait
scas
jmp
pop
sbb
dec
push
lea
pusha
les
jle
mov
mov
ret
xchg
(bad)
sar
mov
out
pop
loope
sbb
dec
shl
xchg
sub
pop
iret
ins
and
cmp
out
cmp
mov
xchg
pop
push
jl
ror
daa
fsubr
out
or
cmc
cmovs
push
pop
mov
or
push
xchg
pop
arpl
ins
push
loope
inc
daa
idiv
mov
into
and
dec
pushf
cmp
mov
(bad)
scas
inc
mov
ins
cli
xor
aaa
call
loope
icebp
or
and
cmp
mov
(bad)
shl
mov
das
call
mov
xchg
dec
push
mov
mov
xchg
data16
cmp
div
push
push
or
sub
fwait
inc
out
out
les
sub
sbb
retf
jbe
out
jnp
repz
mov
jo
jo
imul
addr16
mov
sbb
pop
push
inc
add
and
(bad)
pop
dec
cmp
sbb
sub
inc
(bad)
sti
add
cmc
(bad)
cmp
popf
fdivr
dec
loope
ret
ins
push
aas
into
cwde
xor
jns
loop
in
xor
dec
out
xchg
pushf
les
test
clc
fcomp
and
ret
cmps
stc
repz
fcmovb
mov
pop
test
mov
xor
outs
pop
loopne
sub
sar
add
inc
xlat
push
stos
arpl
fs
ja
push
aas
fwait
shl
cwde
fidiv
call
add
adc
out
imul
push
inc
out
jo
inc
das
dec
mov
(bad)
iret
cmps
xor
push
ficomp
xchg
mov
jbe
xchg
sar
mov
call
mov
mov
scas
js
loopne
add
mov
lods
arpl
xor
cs
sar
inc
fs
pop
pop
cmp
std
mov
push
ret
std
fbld
ror
enter
retf
retf
dec
or
and
fnstsw
or
xchg
shr
popf
ror
loopne
mov
mov
cli
call
fld
shl
loop
pop
jecxz
mov
sahf
dec
fistp
jne
ret
cs
das
mov
xlat
push
imul
test
xchg
xchg
jmp
jo
cmp
imul
repnz
repz
mov
mov
dec
js
adc
mov
inc
mov
js
xchg
fs
hlt
xchg
mov
scas
pop
repnz
jbe
mov
movs
fnsave
ja
cmc
xchg
push
push
fucomp
add
xchg
push
xor
mov
xchg
daa
cmp
jne
out
ins
ss
mov
popa
inc
in
mov
ror
rol
(bad)
and
inc
sbb
fldcw
call
movs
jmp
iret
dec
or
mov
cmps
shr
bnd
sub
fisub
mov
fldcw
xor
fst
lea
loop
clc
add
mov
(bad)
xchg
or
retf
xchg
pop
jo
aaa
xchg
mov
adc
mov
push
dec
repz
adc
mov
xor
adc
mov
dec
ins
sar
sub
call
aas
call
pop
lods
lahf
sub
sti
jmp
pop
shl
dec
and
stos
mov
movs
mov
mov
sbb
mov
push
push
jge
ret
dec
add
pushf
rcr
popa
test
ret
fldcw
xchg
mov
stos
shr
push
sbb
movs
lods
or
movs
(bad)
pop
test
jecxz
add
popf
js
(bad)
push
std
jno
pop
jbe
dec
xchg
xchg
sub
add
xchg
cs
out
pop
test
test
scas
jnp
jmp
sub
sar
daa
pop
aam
loopne
pop
sub
sub
mov
adc
jns
fsub
cmp
mov
or
jle
out
pop
pop
fwait
mov
rol
(bad)
aaa
or
mov
into
inc
fisttp
fidivr
or
arpl
les
sub
call
lahf
push
les
(bad)
cld
lea
pusha
fs
les
mov
shr
loopne
shl
div
add
xlat
ins
xchg
dec
dec
inc
dec
addr16
push
adc
push
bound
pop
mov
retf
js
cmps
push
fcmovnbe
push
and
or
test
jmp
inc
adc
(bad)
push
and
or
dec
in
dec
or
popa
xor
mov
cmova
clc
sbb
xor
jns
cmps
mov
lods
repnz
or
fidiv
jb
mov
rcl
out
inc
test
fs
pop
push
or
mov
icebp
add
sbb
mov
sub
neg
mov
cmp
in
jb
rol
jo
scas
(bad)
xchg
push
mov
(bad)
and
sbb
mov
dec
in
push
sub
adc
nop
aad
test
movs
inc
and
mov
cmps
stos
push
cmp
jnp
and
outs
xchg
and
nop
adc
dec
adc
inc
adc
ret
pop
mov
mov
sar
jmp
cmp
jg
xor
enter
sahf
pop
(bad)
stos
stos
fisttp
(bad)
push
aam
outs
test
out
sahf
js
sub
pop
retf
js
mov
nop
or
pop
push
and
aad
(bad)
cmc
jne
(bad)
movs
test
pop
and
push
arpl
fwait
imul
jge
scas
pop
sbb
shr
rcr
movs
and
rcr
test
push
sub
iret
jecxz
mov
pusha
mov
gs
lahf
jp
scas
cmc
in
cmps
inc
dec
push
mov
sbb
cld
hlt
stc
into
push
mov
ins
jg
ret
mov
retf
jmp
inc
int
pop
jmp
pop
ret
push
daa
(bad)
int
cld
jne
cmc
add
cwde
dec
or
add
jns
cmps
(bad)
or
sub
outs
mov
and
popa
scas
inc
fdivr
sbb
inc
pop
nop
out
pop
sar
sbb
gs
sar
and
push
add
outs
push
in
addr16
(bad)
xchg
ds
pop
cmc
rcr
int3
sbb
jecxz
nop
inc
int3
ficom
push
push
add
dec
jle
das
dec
mov
sar
ss
sbb
xchg
jne
bound
(bad)
and
je
mov
cmp
sub
and
rcr
loope
dec
icebp
cwde
ja
popa
sbb
jo
rcl
sar
or
movs
push
popf
inc
dec
jle
fwait
aaa
dec
out
sub
or
cmps
jb
icebp
mov
inc
test
sub
mov
out
pop
dec
retf
fistp
repz
out
scas
pop
push
ins
mov
or
sub
mov
mov
cld
xchg
je
mov
sub
aaa
fs
jl
pop
jmp
pop
pusha
ret
mov
inc
cmp
fisubr
jg
in
movs
pop
test
repz
dec
sub
mov
sub
jns
sub
sub
pop
adc
push
xor
or
jbe
jl
rcr
xchg
outs
outs
mov
shl
lods
sub
loop
jecxz
dec
fucomi
sub
repz
mov
push
out
repz
dec
jle
scas
movs
enter
sahf
dec
xor
mov
mov
test
mov
loope
xor
jecxz
es
fbld
push
adc
jecxz
push
shl
mov
jnp
(bad)
fisub
pop
jae
cmps
gs
loop
jno
das
sar
fs
xchg
dec
mov
ins
push
das
xchg
sbb
cmps
movs
cmp
sbb
push
or
xor
adc
push
repnz
add
or
add
pop
cmp
mov
fs
hlt
adc
aad
cmp
pop
pop
inc
data16
inc
bound
pop
cmp
pop
jns
push
repz
fnstsw
enter
fadd
xlat
pop
ins
pop
push
jmp
leave
div
stc
mov
or
push
or
std
push
jnp
cmc
repnz
mov
jl
adc
neg
dec
lds
sub
adc
mov
mov
test
or
out
nop
mov
(bad)
lds
fisub
cli
cld
and
stc
loop
sbb
sbb
mov
pop
xlat
(bad)
mov
push
xchg
lock
ss
xchg
mov
arpl
rcr
movs
addr16
cwde
cmps
mov
loope
outs
out
mov
ins
mov
jle
adc
jne
dec
mov
daa
(bad)
mov
add
jbe
fdivr
xor
adc
movs
(bad)
(bad)
xlat
jg
mov
(bad)
xchg
aad
imul
jb
xor
loope
les
cmp
sbb
std
pushf
(bad)
xchg
arpl
dec
adc
inc
bound
sub
ins
je
xchg
pushf
dec
fwait
sub
je
jmp
or
pop
mul
xchg
adc
cmp
aad
mov
fimul
mov
jmp
mov
and
mov
(bad)
stc
push
xor
xor
xchg
aas
lods
int
and
stc
jle
adc
test
mov
rol
or
ins
push
jp
dec
sub
fucomp
or
aas
(bad)
out
add
xor
adc
stos
xor
push
xlat
stc
push
lods
mov
test
push
cmp
ja
(bad)
in
test
scas
pop
ds
push
jecxz
xchg
cmp
inc
push
and
aas
fwait
add
and
inc
and
ds
jmp
iret
cmp
jmp
loop
inc
call
xchg
xlat
call
out
push
pop
xchg
push
sbb
call
cmp
cli
mov
xor
dec
and
out
jb
hlt
mov
cld
xchg
dec
out
mov
loop
mov
fucomp
rcr
push
inc
add
push
popa
js
adc
or
mov
(bad)
sbb
fmul
cwde
xor
xchg
fbld
clc
outs
ja
(bad)
xchg
or
popa
fld
js
cs
addr16
cmp
mov
and
xchg
and
mov
add
movs
test
add
add
cli
jbe
and
pop
mov
ins
add
push
movs
adc
inc
arpl
scas
dec
jge
(bad)
adc
inc
push
rol
sbb
jl
sbb
ss
enter
dec
addr16
ds
and
popa
cmp
push
fst
dec
push
test
jmp
adc
mov
outs
bound
leave
(bad)
push
dec
bound
pop
loope
(bad)
into
shl
push
xor
pop
stos
mov
inc
dec
add
cdq
xor
call
test
(bad)
stos
xchg
inc
test
jg
sbb
pop
pop
cmp
pop
retf
jo
mov
imul
movs
jg
nop
jmp
xchg
and
mov
add
and
outs
or
lds
outs
xchg
push
faddp
cmps
sub
jecxz
mov
pusha
lds
adc
pop
inc
jbe
iret
leave
jmp
fistp
ret
xchg
and
shl
test
sub
sbb
xor
enter
fiadd
mov
ins
inc
push
push
shl
xor
ficom
xor
mov
int
sbb
(bad)
and
and
dec
mov
dec
cmovo
mov
aad
push
adc
xor
inc
mov
mov
cld
stos
(bad)
loopne
es
dec
out
in
mov
mov
neg
sbb
inc
cmp
pop
sbb
scas
xor
xchg
mov
adc
loopne
stc
sahf
lock
jae
push
aad
dec
mov
push
sbb
in
dec
cmp
lds
pop
out
sbb
jmp
mov
iret
rcr
xchg
pop
mov
add
push
enter
(bad)
pushf
mov
mov
push
mov
mov
out
sub
mov
sbb
mov
sbb
mov
dec
stos
mov
push
dec
scas
inc
jle
jmp
retf
clc
adc
fldcw
cmp
fstp
pop
rol
pop
in
mov
imul
xchg
pop
retf
in
push
movs
rcr
aas
mov
outs
fs
or
push
hlt
fist
jmp
pop
or
xchg
or
fld
mov
stos
shr
xchg
shr
push
test
fbstp
add
cmp
idiv
shl
sbb
leave
sub
or
jmp
outs
inc
dec
dec
call
cmc
fdivr
outs
xor
pop
std
icebp
sub
paddusb
push
loopne
sti
retf
gs
rcl
mov
inc
test
cli
dec
cdq
outs
fsubr
jns
mov
call
out
test
pop
xchg
aas
call
fs
mov
inc
imul
or
and
iret
fidivr
mov
or
xchg
daa
stos
mov
or
mov
push
jno
shl
add
clc
mov
cdq
or
adc
out
mov
stos
jno
cmps
test
push
sbb
std
imul
rcr
pop
xlat
mov
fwait
stos
mov
mov
out
inc
xor
popa
aas
cwde
xchg
pop
fild
fild
push
mov
stc
or
mov
pop
stos
mov
xor
ror
pop
je
mov
pop
xor
mov
(bad)
cs
pop
mov
jge
movs
inc
sbb
repz
sub
or
scas
int3
sub
cmp
pop
push
fsub
cwde
push
in
adc
fisttp
and
js
rcr
jp
shl
mov
int
test
das
cmp
xchg
in
xchg
mov
xor
mov
cli
jecxz
int
pop
pop
jl
mov
or
lea
xlat
sar
cmp
xchg
push
xchg
cmps
cmp
adc
pop
add
repnz
lock
add
and
in
mov
add
inc
dec
mov
add
shl
pushf
adc
push
int
xchg
cmp
mov
mov
ficom
cs
adc
int3
push
sbb
push
pusha
mov
adc
inc
lea
ss
jmp
jle
push
pextrw
sub
mov
(bad)
mov
loopne
xchg
repnz
inc
add
outs
retf
(bad)
xchg
jecxz
ins
push
adc
xchg
aaa
cdq
ficom
dec
jo
sub
loop
imul
mov
xchg
sub
push
(bad)
adc
push
cmps
and
fisttp
push
iret
mov
mov
adc
pop
push
sub
push
cs
jnp
inc
rcl
jle
iret
mov
fist
or
cmps
retf
fld
pop
inc
scas
xor
mov
adc
jbe
call
push
cld
inc
xlat
xor
fcmovnu
mov
jne
or
mov
mov
sbb
shl
jno
dec
leave
sbb
mov
pop
pop
iret
ja
cmp
add
daa
sbb
test
cmp
into
push
inc
jmp
xchg
(bad)
mov
mov
daa
fs
int3
idiv
xacquire
repnz
leave
aaa
jns
lock
loope
(bad)
out
movs
add
inc
dec
push
mov
pop
je
out
dec
xor
dec
cmp
dec
push
jbe
sub
ret
pop
mov
push
xor
push
dec
cwde
js
sub
lods
(bad)
in
inc
mov
stc
mov
loopne
xchg
sub
and
stos
je
pop
retf
mov
xlat
or
mov
inc
jecxz
add
test
sbb
imul
push
jle
mov
jl
cdq
pop
push
lods
fcmovnb
dec
(bad)
dec
jae
sub
jmp
bound
(bad)
ja
sahf
mov
icebp
in
popf
ds
nop
mov
cmp
sub
cmp
cs
frstor
pushf
repz
or
mov
outs
xchg
mov
dec
cmp
repz
into
pop
push
out
test
sub
sahf
jnp
xchg
jns
jg
ror
xlat
jno
sub
dec
pop
sbb
in
imul
call
sbb
jg
aam
cmps
popf
aad
ret
push
clc
rcl
mov
mov
loopne
stc
scas
push
dec
xchg
dec
cwde
lock
adc
and
lods
arpl
pop
sub
inc
dec
out
sar
in
pop
cmps
popw
std
or
enter
or
or
mov
push
lgs
pop
cmps
mov
inc
clc
dec
pushf
xchg
add
std
test
dec
leave
fdiv
pop
iret
lock
loop
rol
int
in
add
mov
hlt
cmp
(bad)
pop
cmp
sbb
mov
xlat
inc
xor
mov
mov
sub
mov
mov
ins
lea
cwde
jl
retf
or
mov
aam
pop
shr
idiv
clc
aad
xor
adc
mov
in
dec
xor
jmp
jae
push
aaa
lock
fsub
or
pop
and
cmps
(bad)
in
add
sahf
adc
cmps
inc
imul
test
inc
movs
aaa
inc
aaa
int3
les
jge
loope
xchg
inc
lods
pop
ror
das
mov
jg
iret
out
cmc
adc
sbb
ret
(bad)
and
fcmovnb
(bad)
cmp
push
cmp
js
mov
xchg
xchg
xor
xor
and
sahf
mov
add
sub
jl
pop
in
jae
push
adc
(bad)
rcr
sbb
mov
pop
dec
cld
cs
es
xlat
ds
aad
xchg
add
push
and
(bad)
pop
aad
shl
shl
mov
in
repnz
xor
xchg
adc
jmp
pop
sub
xchg
add
out
push
cs
stc
and
(bad)
mov
in
and
jae
sbb
mov
call
adc
ins
lods
mov
sub
(bad)
scas
pushf
enter
test
in
jbe
test
loop
cmp
std
dec
mov
mov
(bad)
mov
pusha
mov
push
rol
inc
mov
loope
lds
push
push
es
das
jbe
lods
sti
jbe
mov
inc
fisttp
add
iret
scas
repnz
mov
lods
adc
ss
das
std
dec
push
and
jne
std
cmp
rol
mov
sub
lahf
daa
add
ror
scas
leave
adc
push
fwait
dec
mov
popf
xchg
in
ror
shr
sti
pop
shl
leave
je
xchg
jmp
out
mov
push
nop
sar
das
retf
mov
out
call
push
addr16
sub
pusha
pusha
or
jo
push
xor
xchg
(bad)
dec
mov
lahf
aam
aaa
cmps
pushf
cmp
jle
xlat
jne
cmp
dec
dec
fs
sbb
fstp
fucomi
sub
stc
mov
sub
(bad)
dec
mov
jne
(bad)
sbb
xchg
push
das
mov
fisttp
pop
mov
inc
ins
stos
pop
mov
xor
imul
push
mov
adc
and
xor
dec
scas
pop
xlat
push
pop
push
loope
dec
icebp
add
push
mov
bound
jmp
adc
lods
xchg
icebp
mov
pop
outs
(bad)
fs
mov
cmp
or
mov
fs
cmp
mov
xor
stos
leave
lods
outs
cmps
and
(bad)
mov
mov
daa
fiadd
push
popf
mov
lahf
test
fsubr
cwde
push
sbb
adc
(bad)
sbb
mov
(bad)
mov
fsubr
loope
and
push
cmp
call
jae
inc
and
dec
shl
cmp
je
inc
mov
lahf
mov
dec
mov
adc
mov
dec
push
(bad)
pushf
cmp
push
les
mov
leave
xor
lds
ds
js
cmp
or
movs
imul
xchg
mov
pop
jae
jge
inc
and
ja
loope
and
add
pop
cmc
(bad)
je
push
cwde
cmps
test
push
pop
int3
js
pop
ret
cld
aas
push
repnz
jmp
cmp
cmp
xlat
add
popf
mov
repz
ds
sbb
rol
fsub
sub
cld
or
lods
cmp
(bad)
in
scas
add
or
enter
pop
cs
dec
cs
pop
mov
leave
out
mov
stos
dec
std
std
mov
push
mov
lods
jl
pop
add
cmp
jg
mov
pop
xchg
iret
and
iret
mov
sub
scas
push
loop
inc
stos
push
cmp
and
dec
sbb
push
shrd
ds
inc
aam
ja
add
pop
jecxz
fstp
or
adc
mov
out
adc
(bad)
out
add
aas
xchg
call
xor
cmp
inc
jnp
mov
fmul
ss
rol
push
scas
int3
mov
loop
add
sub
fisttp
mov
cmps
mov
clc
loope
sti
rol
pop
inc
jg
pop
mov
sub
(bad)
mov
mov
std
mov
stos
in
repz
push
fs
sub
ja
stos
les
pop
add
jbe
dec
(bad)
cli
and
sti
xchg
cmp
in
mov
or
fdiv
cmp
adc
fidivr
mul
sbb
retf
mov
inc
pop
xchg
fcomp
add
mov
fidivr
pop
xchg
loopne
adc
or
jp
push
scas
push
in
or
xor
fisttp
cmps
and
call
mov
(bad)
xchg
pop
js
xor
pop
dec
aas
adc
jl
sub
test
lahf
imul
movs
push
aad
mov
scas
xor
push
stc
xchg
fild
mov
fnstenv
popf
popf
or
mov
nop
cwde
dec
mov
aas
cmp
shl
and
mov
inc
mul
mov
mov
and
cli
dec
mov
repz
push
sbb
jb
movs
stos
gs
movs
ror
jno
mov
lahf
dec
mov
inc
es
dec
push
xor
and
xchg
jne
imul
xchg
ss
mov
mov
outs
test
push
icebp
cmp
cmps
retf
loope
pop
adc
xchg
adc
sahf
and
rol
pop
jnp
push
in
dec
push
and
fdiv
fs
adc
add
or
daa
jmp
dec
ja
addr16
mov
add
ins
repnz
ds
sub
icebp
xor
inc
sub
sbb
out
mov
adc
and
mov
xor
sbb
push
inc
sub
(bad)
mov
xlat
gs
inc
cmp
fnsave
add
and
out
push
pop
jmp
ins
jns
add
mov
jg
adc
stos
adc
mov
in
js
js
push
lea
sbb
xchg
in
xchg
js
dec
inc
cmp
cs
sbb
push
mov
cs
inc
out
cs
adc
mov
pop
(bad)
in
mov
inc
mov
jl
js
ins
popa
mov
push
sbb
add
inc
lea
(bad)
pop
aas
mov
ja
hlt
push
mov
add
fld
xchg
test
cs
inc
or
popa
sbb
inc
dec
inc
out
int3
jmp
je
cld
(bad)
dec
imul
pop
loopne
pop
fwait
retf
mov
mov
and
mov
rol
daa
icebp
pop
dec
test
mov
neg
test
fcomp
clc
inc
xchg
inc
pop
fdivr
lods
jg
xor
pop
in
cwde
mov
stos
pop
mov
adc
test
dec
pushf
pop
sbb
les
or
push
fcompp
inc
cmps
das
sub
nop
stc
pop
pop
pslld
mov
lods
xlat
aaa
mov
pop
xchg
in
jp
ret
add
(bad)
pop
jmp
mov
(bad)
out
dec
sub
mov
mov
outs
fwait
xor
stc
aas
repz
hlt
shl
es
and
mov
cmps
jo
sbb
mov
rcl
and
jmp
push
(bad)
movs
sub
(bad)
pop
loop
in
push
mov
test
xchg
pushf
push
outs
das
xchg
call
in
(bad)
ficom
push
lahf
les
out
mov
fisub
scas
mov
or
das
in
outs
sub
mov
cli
and
nop
mov
es
xor
inc
jb
rcl
push
lods
loopne
adc
sti
push
or
in
jge
dec
inc
mov
and
retf
aas
jmp
imul
dec
xchg
ret
xchg
mov
or
ret
cli
jp
cmc
mov
push
js
in
pop
push
jnp
popa
push
pop
add
cmp
scas
jbe
push
sbb
out
cmp
fnsave
or
or
mov
dec
jl
sbb
push
cmp
sub
imul
sti
jnp
ins
test
bound
and
stc
xchg
mov
repnz
inc
mov
ss
mov
fwait
mov
inc
xor
adc
out
std
cwde
popf
pushf
cmc
xchg
cwde
call
cmp
lahf
pop
inc
or
outs
mov
shr
popa
into
xchg
or
popa
repnz
imul
push
(bad)
loope
push
sar
sbb
jne
xlat
xlat
pop
cmps
pop
add
xlat
fisttp
push
scas
xchg
mov
adc
ret
xor
pushf
cmps
cld
mov
neg
popf
ret
push
pushf
imul
daa
xchg
shl
cmp
je
popf
pop
adc
mov
xchg
cmp
xchg
lods
pop
movhps
aam
fmul
push
xchg
jmp
ins
mov
cwde
cdq
in
daa
add
jno
mov
les
dec
fcomp
imul
adc
test
jge
aam
dec
outs
pop
push
and
push
add
adc
aaa
cmp
adc
sbb
mov
add
mov
aas
pusha
and
mov
loope
fcom
jecxz
mov
bound
jo
sub
sbb
icebp
aas
xchg
jl
xor
or
ss
pop
lock
push
and
xchg
sbb
xchg
pop
movs
add
popa
inc
mov
pop
push
cmp
add
and
and
or
lods
mov
stc
push
enter
cmp
popa
mov
sub
movs
cdq
or
pop
xchg
lock
jecxz
push
and
and
or
pop
lock
mov
(bad)
int3
mov
outs
sub
add
dec
push
jecxz
ins
dec
jg
push
mov
mov
loop
xlat
cwde
adc
inc
pop
retf
jb
add
jl
jno
sub
push
movs
xchg
addr16
push
inc
or
mov
jecxz
xor
imul
and
int
data16
sub
pop
imul
pop
cwde
loopne
test
jge
sbb
sti
pop
mov
(bad)
dec
sbb
les
mov
dec
pop
(bad)
int
xor
outs
fcmovnb
jle
xchg
(bad)
retf
xchg
inc
xor
push
jae
jmp
(bad)
mov
and
mov
jno
xchg
sbb
pop
cmpxchg
push
dec
dec
push
adc
push
or
xchg
pop
dec
out
in
dec
sbb
jp
cmp
push
mov
aaa
aad
(bad)
cmp
or
mov
ins
mov
xchg
cmp
xor
pop
jo
push
xchg
ficomp
mov
xchg
cmp
mov
aas
jge
gs
mov
(bad)
(bad)
(bad)
retf
push
dec
js
test
or
popa
jne
pop
push
mov
sbb
movs
xchg
cwde
ss
mov
fdiv
push
pop
jne
out
js
movs
cmp
push
jecxz
out
xchg
sub
data16
ds
mov
dec
popf
inc
fild
cmps
gs
pusha
pop
adc
movs
jmp
test
not
pusha
and
dec
out
xchg
retf
dec
lahf
sub
mov
mov
ficomp
clc
mov
loop
cmp
inc
adc
adc
jle
xlat
lods
jns
xor
xchg
loopne
cld
push
lods
in
add
inc
jne
mov
imul
std
test
sahf
xchg
call
or
adc
jnp
sbb
mov
dec
push
push
leave
cmp
lahf
cmp
push
mov
cmp
daa
lds
ins
ret
scas
adc
xchg
(bad)
push
dec
xor
popf
(bad)
fwait
jns
ds
aad
outs
or
test
dec
(bad)
mov
sbb
or
and
mov
mov
push
gs
es
gs
sbb
(bad)
cld
inc
mov
xchg
(bad)
data16
pop
and
in
ficomp
arpl
sahf
popf
jp
leave
popa
fwait
add
mov
push
fucom
push
aas
dec
inc
push
mov
sbb
and
sbb
and
nop
(bad)
lods
pop
out
hlt
push
jge
mov
xchg
aam
mov
popf
(bad)
ror
dec
mov
mov
and
fisub
outs
dec
sbb
push
push
dec
xchg
mov
pop
jl
mov
stc
sub
fsub
ins
fidiv
arpl
daa
mov
adc
push
xor
dec
call
sub
and
dec
push
or
dec
xchg
jne
xor
or
adc
mov
popa
aaa
add
mov
jmp
out
and
push
add
push
push
and
pusha
mov
ror
push
rcl
mov
and
push
repz
add
(bad)
jne
aam
out
pop
lock
cli
popf
mov
xchg
or
(bad)
shl
mov
jo
mov
sub
in
jl
scas
xor
xor
imul
cli
imul
adc
mov
xchg
int3
pop
cmps
dec
fsub
mov
pop
dec
pop
aas
mov
(bad)
mul
sub
je
fwait
enter
cdq
push
mov
adc
pusha
push
pop
jo
imul
push
stos
(bad)
sbb
data16
push
ror
mov
sti
mov
dec
sub
sbb
call
lods
enter
pushf
adc
and
aad
sub
sbb
or
test
out
adc
mov
mov
adc
nop
pop
loope
or
or
out
and
sbb
out
int
add
(bad)
(bad)
fild
pop
cmp
cmp
inc
call
xchg
inc
(bad)
iret
mov
in
pop
cmp
dec
xchg
loopne
mov
pop
xlat
imul
xlat
adc
jns
adc
jecxz
jge
sbb
mov
mov
setbe
add
test
jg
push
test
mov
and
push
jge
pop
push
fist
adc
pop
add
push
das
push
imul
lds
out
push
fld
dec
nop
cmp
jb
jge
sbb
adc
lods
sti
jno
aaa
inc
iret
psubusw
fld
out
dec
fbstp
push
mov
lds
ds
mov
pop
retf
xchg
lahf
mov
jbe
jns
xor
cld
fcom
data16
jmp
jb
lahf
pop
lea
rcl
imul
sbb
cs
sbb
ds
or
add
fdivr
je
call
sti
int3
inc
fidivr
fnsetpm(287
fiadd
lods
sub
jl
scas
(bad)
test
cdq
fwait
jge
mov
jge
in
adc
sbb
inc
cmp
mov
pop
jo
mov
sub
adc
mov
out
jmp
pop
sbb
ss
and
mov
mov
data16
jg
dec
inc
add
sbb
icebp
sbb
or
cmps
gs
lahf
sub
je
fwait
or
xchg
pushf
imul
popa
imul
mov
inc
inc
xor
popf
hlt
xchg
in
popf
inc
adc
je
dec
jb
dec
xor
out
sub
push
les
fcmovb
movs
jne
sub
leave
out
les
mov
dec
xlat
shl
pop
sub
xor
push
cmp
ds
rol
dec
adc
jnp
cmc
push
ficom
xlat
ins
push
loop
push
mov
mov
mov
inc
xor
jmp
xor
pusha
or
mov
mov
adc
pop
rcl
pop
aas
sbb
or
rep
ss
scas
mov
loopne
retf
adc
inc
std
cmp
repz
or
es
adc
cmp
icebp
shl
adc
dec
xor
dec
jmp
outs
fs
lods
ficomp
inc
repnz
sar
sub
xchg
mov
loopne
mov
pop
stc
(bad)
adc
ins
sbb
cmp
jnp
sub
iret
out
mov
xchg
pop
sbb
je
or
and
push
jbe
mov
push
push
inc
add
imul
out
loope
cmp
dec
dec
pushf
xchg
outs
jmp
iret
sti
iret
sbb
sub
and
push
xor
outs
dec
call
push
ja
hlt
xor
add
cmp
mov
sbb
hlt
fdivr
xchg
fs
daa
cmp
push
mov
stos
movs
dec
inc
push
dec
jge
loopne
pusha
inc
mov
in
sbb
sub
xchg
daa
rol
pop
ficomp
je
in
mov
inc
cmps
lahf
sbb
aad
dec
mov
mov
jmp
not
cdq
repz
pop
(bad)
sub
jmp
out
xor
sub
push
fmul
aam
clc
mov
test
and
mov
add
loop
sahf
and
lea
int3
(bad)
cmp
add
(bad)
retf
(bad)
xor
mov
js
mov
(bad)
hlt
shl
repnz
stc
div
(bad)
fnstcw
mov
adc
sub
add
mov
aas
mov
adc
push
or
xchg
xchg
sbb
mov
adc
hlt
or
sub
push
ret
lahf
add
xlat
xchg
jmp
mov
(bad)
jecxz
ret
pop
pop
lahf
xchg
sbb
daa
mov
bound
and
dec
daa
test
adc
stos
scas
adc
cld
inc
pop
repnz
xor
inc
inc
push
stc
add
xor
xor
inc
ins
pop
fdiv
scas
in
jae
aam
fimul
repz
cmp
xchg
arpl
and
add
loope
mov
pop
fstp
or
pop
mov
jbe
push
cwde
sti
cmps
or
in
xor
(bad)
xlat
jno
into
test
pop
popf
fmul
mov
or
inc
jmp
test
xor
shl
(bad)
jnp
(bad)
push
arpl
retf
jo
into
and
mov
cmp
xchg
jbe
cwde
cmp
pop
mov
loopne
push
sub
mov
and
pop
sti
cmps
mov
pop
cmp
dec
shr
sub
pop
adc
mov
mov
adc
mov
(bad)
xchg
xchg
int3
test
dec
add
lock
add
add
jo
out
xor
sbb
add
inc
adc
mov
xor
pushf
div
stos
repz
(bad)
sti
xchg
jo
push
adc
adc
mov
sbb
lahf
push
mov
add
faddp
push
shl
les
imul
ror
xchg
push
dec
pop
xor
pop
xchg
stc
sbb
jmp
fadd
sub
cmp
in
jp
pop
rol
mov
push
pop
out
mov
jmp
mov
add
hlt
clc
pop
mov
lods
enter
dec
mov
popf
dec
xchg
push
mov
push
and
push
push
add
outs
xchg
inc
pop
js
mov
cmps
movs
or
sub
xchg
fisubr
cmp
cmp
xor
movs
or
and
mov
cmp
loop
dec
das
and
and
and
pop
adc
push
int
(bad)
or
test
cwde
sbb
dec
mov
in
adc
mov
nop
and
enter
jmp
jae
push
cmp
pusha
sbb
aad
imul
xor
inc
sbb
inc
das
imul
mov
out
sub
add
stos
in
in
inc
or
addr16
jae
pop
xor
jnp
mov
cli
ror
or
retf
xlat
ucomiss
call
shl
sub
in
pop
out
jl
inc
pop
repz
rol
sub
sbb
and
movs
ja
xchg
push
fadd
int3
out
add
loop
jmp
mov
jo
test
add
(bad)
mov
imul
mov
addr16
lea
mov
pop
mov
les
lahf
xor
lea
dec
push
lahf
mov
ds
xchg
ret
int
mov
xchg
(bad)
frstor
daa
sbb
xchg
cmc
dec
add
shr
sbb
jns
mov
fsubr
or
xor
out
pop
je
push
xchg
int
or
mov
sub
push
stc
xchg
jne
add
xor
mov
ret
cmps
mov
add
dec
pop
std
addr16
mov
inc
mov
and
lahf
icebp
call
jnp
pop
mov
mov
imul
mov
xor
out
retf
push
lea
ja
xor
mov
inc
int
mov
(bad)
adc
dec
sub
ja
cwde
scas
das
neg
mov
xlat
fimul
mov
dec
inc
loope
ret
rcl
mov
xchg
neg
shl
hlt
mov
dec
pop
sub
mov
aaa
cmp
aas
out
add
mov
dec
inc
add
inc
inc
fcomip
pop
dec
mov
test
dec
push
repz
ins
cld
call
jmp
das
cmc
add
jae
mov
jo
mov
sub
test
jle
ret
(bad)
out
xor
int
push
ror
jge
popa
mov
fcmovnbe
out
or
pusha
sar
shl
sbb
test
add
jbe
mov
jae
pop
fwait
dec
sub
sub
jo
sbb
dec
jle
cmp
aaa
rol
mov
xlat
cmps
popf
dec
aam
addr16
retf
xchg
pop
arpl
cmc
fbld
es
stc
cmps
ins
inc
shr
cmp
jp
fisub
inc
mov
shr
cmp
xchg
out
cmp
cmp
ret
and
cmc
mov
out
jbe
repnz
movs
jbe
xchg
in
das
sub
pop
pop
shr
popa
sub
adc
loop
pop
std
push
sub
or
imul
mov
ret
mov
xlat
or
jmp
pop
add
movs
pop
xor
aam
lds
sbb
shl
dec
xchg
js
add
inc
ins
gs
xor
jb
jecxz
scas
xchg
(bad)
cli
pop
xchg
xor
outs
icebp
push
(bad)
in
pop
or
int
xor
pop
mov
and
mov
imul
fs
jecxz
out
mov
cmp
ss
div
mov
mov
test
add
xchg
and
aas
mov
fild
sub
(bad)
jae
aaa
imul
dec
test
aad
push
imul
sub
int3
arpl
scas
cmps
push
add
jmp
and
aam
or
ins
jge
into
in
jo
aad
cmp
cmp
ja
out
add
or
mov
adc
out
aas
dec
je
mov
jge
push
mov
test
stos
xchg
and
cmp
mov
loope
ja
mov
inc
cs
(bad)
out
mul
xor
and
out
js
xor
arpl
into
and
cmps
xlat
das
or
jbe
sbb
add
cmps
sub
ror
in
mov
mov
loop
pop
push
lea
lods
jmp
sti
sub
sub
cmc
les
sub
aaa
leave
jmp
inc
mov
repz
or
ja
sbb
cmp
repnz
fcomip
in
xchg
cdq
and
push
nop
cmps
aad
rol
pop
push
sbb
cs
cld
sar
loope
pop
and
add
push
cmp
out
mov
in
push
retf
sbb
test
jne
xchg
loop
ss
and
adc
dec
fxch
or
add
inc
and
adc
cmp
pop
aam
call
outs
inc
mov
dec
push
jmp
in
push
not
jo
in
sbb
add
and
add
or
push
and
pop
xor
shr
fwait
mov
das
in
and
cli
pop
(bad)
sbb
xor
xlat
jae
out
mov
mov
cld
in
lods
leave
jle
adc
dec
jo
push
dec
xchg
xor
(bad)
cli
dec
xor
into
mov
gs
fdivrp
stos
fist
jle
or
std
outs
shl
adc
arpl
cld
cmp
push
and
popa
jno
jp
sub
adc
arpl
mov
sbb
jmp
push
daa
nop
xchg
mov
inc
aam
push
mov
jae
sbb
sti
shl
xchg
fwait
adc
cwde
test
add
xor
lods
jl
imul
jns
jp
push
ja
ret
fs
ja
outs
hlt
jp
cdq
xor
xlat
dec
or
pand
popa
in
scas
add
jne
call
push
mov
push
cdq
addr16
cmp
in
(bad)
push
mov
std
(bad)
es
mov
pop
sub
(bad)
(bad)
xor
or
enter
fiadd
push
fist
leave
cmps
or
mov
add
or
add
js
cmp
stos
(bad)
out
cli
test
ins
cmc
in
arpl
adc
dec
jnp
inc
add
xor
push
and
mov
ret
xchg
shl
retf
in
pop
(bad)
daa
outs
repnz
push
jae
pop
and
dec
jg
and
in
push
popf
sub
ins
nop
add
mov
add
inc
pop
pop
stc
aas
and
test
or
int3
jns
jae
jmp
xor
push
fs
test
mov
dec
pop
xchg
dec
push
fisub
cmp
sbb
cmps
repnz
rol
jp
imul
mov
pop
jno
or
arpl
jp
mov
push
pop
jmp
add
aas
lock
out
add
pop
jmp
rcl
stc
push
ret
push
in
int
xor
mov
call
outs
mov
dec
dec
xchg
lods
sub
shl
xchg
outs
shl
sbb
add
pop
fstp
lea
int
jo
daa
aaa
lods
push
setbe
data16
inc
pusha
cmps
mov
or
daa
shr
test
cmp
jns
xor
sti
sub
dec
and
add
jl
add
adc
outs
dec
or
pop
adc
adc
dec
in
add
inc
enterw
mov
push
popf
cmp
sahf
pop
inc
lock
cli
das
jnp
daa
in
data16
or
jmp
icebp
bound
or
push
inc
(bad)
push
mov
push
into
lahf
mov
push
push
stc
sar
dec
cmp
dec
fcomi
or
mov
pop
sahf
stos
test
ins
sbb
stos
std
(bad)
mov
push
xor
mov
out
shl
lds
into
mov
pop
std
mov
push
cmp
ret
retf
(bad)
mov
mov
sbb
nop
adc
lahf
mov
jp
add
js
call
mov
int3
xchg
add
add
lock
mov
jge
mov
std
fwait
call
retf
ins
nop
pop
xchg
mov
les
pop
dec
inc
ins
push
enter
mov
fild
mov
jp
out
es
push
sub
cmp
mov
mov
sbb
mov
xor
popa
cmp
cmp
out
cmps
inc
aad
mov
in
inc
mov
xor
cmp
xchg
xchg
ret
xor
cli
in
pop
push
(bad)
lahf
stos
jnp
adc
mov
cmp
push
and
int3
daa
repz
pop
push
jl
add
xchg
pop
into
retf
lods
enter
dec
rcl
push
(bad)
fisttp
inc
out
(bad)
movs
mov
daa
dec
and
jnp
mov
add
push
push
push
std
outs
jmp
mov
mov
ins
xor
gs
std
ror
and
leave
or
fidivr
cmps
dec
xchg
aad
jb
es
mov
or
dec
dec
or
xor
scas
or
movs
add
cld
sbb
cmp
dec
shl
shl
mov
adc
rcr
pop
pop
cli
add
cli
xchg
fidivr
mov
fdivr
mov
push
inc
(bad)
and
jl
xchg
les
(bad)
aad
outs
fwait
cdq
scas
pop
mov
aaa
add
and
xchg
fdiv
or
inc
shld
dec
(bad)
sub
fld1
cdq
mov
pop
cli
jnp
pop
inc
mov
jg
xchg
xor
seta
das
mov
pop
pop
pop
mov
and
pop
ds
jle
push
out
inc
and
scas
inc
repz
ss
int
out
xchg
push
xchg
push
pop
cmps
pop
jg
cmp
or
pop
jo
sar
retf
div
jl
test
cmp
movs
sub
adc
sub
aas
dec
nop
mov
aad
mov
lahf
rol
sub
mov
clc
mov
xchg
mov
outs
dec
shl
or
sub
xor
cmp
inc
mov
fmul
inc
movs
sub
fs
inc
xor
(bad)
(bad)
(bad)
imul
sbb
xchg
xlat
pop
std
cmp
fcomp
retf
jmp
cmp
xor
mov
jmp
(bad)
retf
sbb
mov
or
xor
pop
cld
or
add
imul
iret
neg
add
mov
pop
pop
shr
pop
fdivr
ret
out
inc
xlat
lahf
int
fldenv
jg
iret
push
iret
add
inc
jmp
cdq
push
int3
sub
cli
inc
mov
lds
dec
icebp
pusha
sahf
lahf
inc
repz
push
nop
and
cmp
lods
cmp
adc
xor
or
movs
fnstsw
sbb
(bad)
push
call
xor
loop
mov
gs
push
mov
retf
jae
jg
or
pop
dec
(bad)
and
call
sti
mov
test
mov
adc
(bad)
or
shr
jp
jecxz
imul
jno
inc
ror
mov
fld
dec
dec
js
aam
outs
inc
sbb
dec
or
add
xor
out
movs
sbb
fcom
popa
mov
and
bound
repz
cmps
lods
mov
add
test
inc
fmulp
gs
scas
frstor
and
icebp
mov
sbb
pop
adc
jl
js
push
push
dec
int3
or
rcr
mov
ret
push
pop
sbb
(bad)
scas
je
fwait
sbb
fucomp
lods
dec
mov
rcr
fidivr
jns
push
push
jmp
xor
adc
mov
call
pop
aas
and
mov
addr16
mov
dec
push
sub
mov
popa
adc
pop
jns
cwde
retf
out
pop
mov
or
sbb
bound
ins
add
inc
adc
xor
inc
daa
xchg
gs
int
dec
cmp
and
inc
pop
mov
jle
out
pop
dec
cli
cmp
xor
add
aaa
(bad)
retf
popf
rcr
xchg
mov
jns
and
sub
mov
mov
and
daa
test
pushf
fldcw
addr16
(bad)
std
dec
xor
xchg
cmps
push
(bad)
inc
jmp
or
retf
cmp
hlt
iret
mov
jno
mov
lahf
sub
pusha
cmp
sbb
sar
xchg
pushf
mov
dec
rol
cmp
lods
jbe
mov
cmps
retf
jp
fild
push
in
pop
outs
cmp
xor
popf
je
(bad)
js
ss
out
add
and
(bad)
fcmove
inc
out
(bad)
(bad)
cmp
dec
sbb
jp
test
jae
int3
mov
mov
xchg
(bad)
inc
hlt
or
pop
dec
movs
inc
mov
push
inc
hlt
repnz
hlt
fwait
mov
shl
leave
js
inc
add
mov
pop
data16
stc
and
in
rol
adc
cli
pop
fist
add
pop
add
out
inc
js
mov
ja
jmp
ret
push
jns
rol
mov
sub
leave
mov
into
inc
xchg
dec
cmps
jne
hlt
xchg
imul
mov
pop
test
aam
sub
pop
pop
div
arpl
and
or
xchg
pop
in
bound
shl
pop
test
push
jo
add
add
fcom
rcl
inc
inc
jbe
xlat
enter
pop
xor
popa
mov
les
push
xlat
data16
ffreep
and
ins
mov
xchg
mov
aad
das
repz
aam
mov
ss
and
cmp
clc
or
(bad)
imul
mov
(bad)
popf
add
inc
pop
jno
jae
shr
fist
jbe
or
mov
mov
pusha
dec
rdpmc
pop
jbe
dec
sbb
adc
int3
jle
sub
inc
iret
mov
sti
movs
push
ds
into
or
lds
mov
jae
mov
push
stc
cld
aad
mov
xchg
sub
loope
jmp
test
push
scas
push
mov
test
iret
mov
call
jge
sbb
inc
fadd
fild
in
pop
lahf
mov
push
(bad)
xor
cmps
sub
jae
xchg
mov
out
cdq
iret
idiv
xor
bound
push
cmc
add
out
stos
mov
loope
dec
push
lods
xchg
test
(bad)
push
mov
xor
xchg
int3
jg
ret
js
bound
shl
cmp
jp
or
popa
adc
sub
ret
fwait
push
aas
xlat
test
lods
std
cmp
test
pusha
sub
cmp
dec
mov
test
sahf
cmps
adc
outs
mov
push
mov
mov
mov
in
fiadd
add
leave
jo
ss
pop
xor
cld
in
aam
mov
sbb
call
repnz
adc
sbb
outs
(bad)
shr
dec
aaa
nop
jge
mov
clc
stos
and
inc
jp
or
inc
ret
neg
xchg
inc
pop
pop
call
fnstsw
cmps
test
xor
mov
pop
fsub
iret
mov
das
ficom
pop
push
mov
shl
lock
mov
jno
dec
mov
push
call
arpl
mov
into
(bad)
jg
ds
jno
cmp
cdq
arpl
push
ret
pop
outs
daa
or
xchg
imul
add
es
and
sub
scas
jae
dec
pop
loop
mov
jae
xchg
arpl
cmp
jmp
out
loopne
xor
dec
mov
push
adc
scas
shl
dec
inc
bound
adc
add
loope
cli
bound
les
pop
sub
pop
(bad)
jmp
and
ficomp
je
dec
cmc
xchg
adc
in
mov
shl
icebp
xchg
outs
push
xchg
cs
(bad)
adc
push
cmp
fiadd
sub
pop
mov
loopne
jmp
or
aaa
mov
adc
jo
out
dec
into
lahf
mov
jae
aas
js
or
jbe
fisttp
jmp
pop
call
add
in
push
cdq
xchg
sub
leave
repnz
pslld
ss
xchg
enter
sti
xor
add
aad
js
test
xchg
pop
sub
neg
movs
pop
not
xchg
imul
cmp
aaa
and
fnstcw
mov
movs
dec
jmp
add
pop
cmp
xor
push
dec
push
or
jle
cmc
push
push
xchg
cmp
cwde
dec
mov
cmps
(bad)
neg
and
push
lods
or
shr
dec
movs
ja
jmp
or
pushf
sub
inc
rcr
ins
xchg
retf
(bad)
xchg
jns
lahf
mov
hlt
test
jnp
addr16
je
not
mov
and
int3
push
retf
call
mov
call
cli
cli
rol
test
jl
sar
stc
dec
movs
xchg
sbb
je
leave
mov
jg
lock
js
cld
push
or
out
enter
cdq
loopne
fist
lds
stos
sbb
lea
jge
idiv
and
arpl
sar
push
(bad)
adc
pop
loop
movups
cdq
mov
push
or
enter
ds
ins
inc
dec
test
jp
or
test
cmp
(bad)
pop
xor
jae
sar
arpl
sbb
add
call
lods
xchg
fadd
stos
mov
test
mov
jbe
pop
mov
inc
pop
xchg
jb
xchg
jmp
(bad)
add
repnz
aas
cmc
sbb
add
ret
and
ret
mov
mov
mov
ins
movs
(bad)
sbb
cdq
pop
adc
cmp
jns
jne
push
mov
or
call
ja
pop
mov
push
jmp
enter
(bad)
(bad)
adc
inc
xchg
or
pop
xchg
sbb
and
push
mov
jg
xor
jge
mov
and
xor
sub
sub
mulps
movs
cmps
sbb
sub
jmp
xor
ret
out
jno
inc
mov
and
xor
push
mov
adc
fadd
jge
shl
clc
(bad)
adc
mov
stos
xor
mov
iret
mov
add
xor
lea
movs
jnp
das
loopne
mov
jg
lock
(bad)
cmp
dec
sub
cmps
lahf
aas
dec
scas
test
ja
sub
jmp
and
pop
dec
int3
jne
inc
dec
sti
push
or
cmp
call
out
dec
sysenter
jbe
leave
fcomp
hlt
mov
pop
fild
out
dec
inc
icebp
inc
inc
retf
lea
dec
aad
addr16
mov
rol
cs
adc
pushf
lock
fdiv
lds
dec
imul
pop
adc
sbb
stc
pop
inc
icebp
fcmove
aaa
mov
dec
add
rcr
loope
call
cmps
lahf
or
ret
es
inc
dec
sub
or
movs
push
lock
cmp
(bad)
jp
cwde
enter
mov
xchg
leave
cwde
sub
push
push
lds
les
cmps
jmp
push
repz
mov
adc
cmps
out
scas
pop
lock
cs
pop
sub
fwait
test
cmc
ret
idiv
les
pusha
inc
mov
jmp
push
dec
in
mov
xlat
lods
shld
mov
lods
inc
cli
jge
(bad)
ds
mov
xchg
popf
into
adc
xchg
fild
cmps
xchg
scas
out
lea
int3
or
aad
jnp
and
iret
ret
ins
aas
jmp
jno
ss
xchg
inc
fs
add
jns
add
enter
icebp
mov
mov
cmp
adc
aaa
das
ds
cmps
aas
jp
push
xor
pop
nop
int3
loop
ficom
dec
cwde
out
hlt
(bad)
shr
add
jge
push
test
cmp
cld
adc
mov
imul
mov
xchg
or
xor
(bad)
xchg
sbb
jmp
sahf
xor
scas
retf
sub
mov
push
xor
nop
in
cwde
push
dec
add
(bad)
addr16
imul
push
ror
mov
aam
or
mov
bound
cmp
out
(bad)
jne
ret
xchg
inc
mov
and
xchg
dec
pop
imul
dec
mov
push
inc
jl
popf
aas
add
sbb
cs
fistp
mov
(bad)
aad
jns
arpl
arpl
mov
pop
fsub
das
addr16
sbb
inc
cld
mov
and
sbb
test
jmp
sti
lea
rsqrtps
mov
retf
mov
push
(bad)
push
mov
sbb
or
cmp
or
dec
dec
mov
adc
xor
mov
(bad)
mov
shr
rol
sbb
xor
mov
in
div
xchg
xor
in
xchg
retf
or
or
mov
push
and
out
mov
lea
push
mov
inc
fbstp
mov
arpl
fnstsw
xlat
or
pop
test
rcr
mov
pop
push
inc
ins
jg
mov
retf
pop
aam
or
jae
xchg
jmp
test
stc
pop
stc
in
(bad)
xor
jns
popa
xor
add
cmps
mov
push
mov
push
movs
(bad)
jo
ins
sahf
mov
js
dec
sahf
(bad)
mov
rcl
stos
test
push
scas
cwde
(bad)
les
shl
mov
mov
jae
pop
pushf
pop
pop
pop
pandn
mov
ds
popf
xchg
fwait
mov
cmp
fwait
inc
(bad)
or
pushaw
ins
ds
leave
lods
and
xor
je
bound
xlat
mov
mov
jb
dec
xchg
mov
mov
mov
xchg
jmp
push
push
(bad)
or
das
loope
pushf
ds
dec
adc
and
jbe
mov
sbb
push
push
xor
imul
or
ja
ins
adc
lea
mov
in
movs
hlt
popa
es
inc
cli
enter
sub
pop
rol
xor
xchg
mov
jp
outs
dec
nop
and
xchg
pushf
cmp
in
call
idiv
daa
xor
ds
test
add
ja
repnz
pusha
adc
lods
sub
test
clc
movs
dec
les
inc
xchg
dec
xchg
xlat
nop
dec
xor
pop
pop
in
aam
(bad)
dec
shl
mov
out
sub
cmp
sub
rcl
mov
mov
mov
dec
in
out
call
out
jg
xchg
push
mov
in
dec
scas
out
pop
add
inc
xor
rol
or
adc
push
out
push
jmp
bound
push
mov
js
rcr
sahf
daa
sub
cli
mov
jmp
or
test
mov
fmul
test
add
imul
xchg
hlt
push
pushf
aam
or
mov
popf
nop
ss
(bad)
mov
test
xor
movs
leave
mov
xor
pop
mov
mov
ficom
retf
mov
gs
adc
adc
cmp
mov
mov
addr16
and
in
ret
aad
pop
push
cmp
pop
jmp
jb
or
or
mov
jno
mov
out
loopne
test
or
lods
push
nop
sbb
inc
(bad)
mov
mov
mov
fbld
test
clc
sbb
dec
ins
jp
icebp
cs
cmp
mov
dec
pop
cmp
inc
imul
and
xchg
in
jmp
sub
add
adc
out
push
leave
xchg
leave
cs
lahf
shr
xchg
(bad)
sub
repnz
sub
ja
(bad)
pop
retf
(bad)
mov
stos
fild
xchg
mov
push
test
scas
lahf
jne
test
add
aad
(bad)
frstor
mov
test
cmc
push
adc
xlat
(bad)
aad
int3
mov
loopne
mov
enter
push
ja
neg
fst
shl
mov
xor
aam
pop
shl
out
or
and
cwde
out
dec
xor
lahf
add
ins
jno
imul
dec
stos
cmps
neg
mov
pop
enter
in
pop
in
mov
xchg
xor
cmp
std
xchg
adc
retf
std
int3
ror
push
pop
xchg
(bad)
adc
sub
cmp
xchg
lods
and
ret
int
dec
xor
xchg
pop
inc
clc
sbb
fwait
retf
xor
rcr
adc
sbb
sub
push
movs
mov
mov
adc
fadd
cmps
adc
std
xchg
jb
bound
fdivr
scas
mov
add
fadd
sar
sbb
test
loopne
fcomip
sbb
arpl
lods
inc
push
xor
(bad)
ins
je
cmp
dec
dec
leave
fisttp
dec
pop
add
add
jecxz
fst
xor
dec
push
inc
xor
movs
pop
ror
push
sbb
popa
fidivr
fs
bound
ins
shl
mov
or
int3
lock
inc
add
mov
mov
jmp
sub
mov
ret
leave
rcl
sbb
(bad)
int3
int
inc
inc
sbb
ret
das
into
scas
pop
cwde
sbb
mov
dec
jle
bound
push
add
inc
mov
jmp
jle
(bad)
push
cmps
xor
jge
cs
mov
ret
mov
addr16
xor
and
jle
fstp
sbb
(bad)
aaa
jns
xor
test
jg
add
icebp
and
dec
std
mov
retf
rcl
std
mov
pop
repnz
(bad)
clc
mov
sar
sub
cmp
cmp
loopne
jle
sub
sub
popa
bound
mov
jle
mov
add
leave
and
inc
jg
test
sub
push
test
or
ins
inc
cs
push
and
addr16
imul
jmp
push
aam
sbb
outs
push
jbe
hlt
rcl
daa
dec
movs
stc
push
jmp
aad
xchg
add
mov
out
sbb
pop
in
cmps
adc
inc
aas
stos
sub
stos
dec
hlt
imul
mov
xchg
into
inc
dec
test
pushw
cmp
ins
out
push
dec
cmc
mov
jns
movs
pushf
fiadd
cwde
or
shl
xor
mov
mul
mov
cmps
int3
mov
mov
retf
fs
cmp
mov
dec
mov
ret
xchg
mov
(bad)
dec
cld
dec
fmul
fcom
sub
les
popf
push
bound
push
jl
adc
xor
nop
lds
bound
push
jbe
sbb
and
ins
sbb
mov
mov
les
jno
sub
and
ret
into
clc
mov
push
inc
jecxz
mov
int3
xor
push
sbb
pop
stos
ret
dec
add
(bad)
pop
lock
clc
outs
pop
cmp
test
push
adc
add
mov
or
mov
push
mov
mov
mov
cdq
aam
scas
sbb
loop
nop
adc
pop
mov
mov
sar
pusha
das
pop
pop
retf
aaa
call
rdtsc
sub
std
xor
cmp
retf
or
jbe
lods
cdq
cmp
pop
ds
xor
lock
movs
xchg
sbb
icebp
(bad)
and
mov
iret
scas
jo
and
enter
popf
daa
pop
mov
div
iret
xlat
mov
outs
sbb
sar
lahf
ins
int
mov
mov
enter
imul
xor
cmp
(bad)
imul
pop
clc
mov
inc
outs
dec
add
cli
stos
int3
hlt
jl
mov
mov
repz
ret
nop
nop
mov
ja
jb
jle
pop
mov
rcr
cli
mov
pop
idiv
(bad)
jge
std
cmps
push
jmp
jecxz
and
mov
shl
inc
cdq
cmp
or
mov
mov
xor
xchg
xor
cmp
imul
push
mov
cmpxchg
lock
pop
movs
ficom
xor
or
mov
cmp
pop
(bad)
cwde
pushf
leave
cmc
sub
int3
xor
dec
sbb
pop
push
lods
jg
and
jg
stos
pop
jle
ret
loopne
frstor
stos
fcom
and
mov
stc
fcom
inc
jb
xor
paddusw
out
dec
ret
fwait
jl
ds
out
jge
dec
cdq
mov
push
xchg
sti
push
cmps
mov
aad
movs
pop
jbe
pop
cmp
cld
mov
sub
xchg
(bad)
sbb
in
movs
mov
cmp
mov
adc
pop
push
and
mov
inc
sub
rol
aaa
fwait
sti
inc
fdivr
pop
push
cmc
mov
sub
es
stc
pusha
adc
jmp
xchg
mov
inc
retf
mov
sbb
addr16
adc
(bad)
out
out
mov
es
push
jle
or
or
in
not
pop
push
cmp
sub
and
and
xchg
sub
mov
out
retf
xchg
sbb
fsub
push
sbb
add
cmp
lea
out
jmp
out
pop
mov
add
sbb
ror
pop
inc
in
jb
movs
adc
pop
and
arpl
jmp
ja
call
cmove
aad
cs
sub
punpckldq
lahf
jnp
fistp
jb
nop
xor
js
rol
xchg
cdq
sti
pop
xchg
cmp
call
xchg
ins
repnz
jb
hlt
jmp
ins
aas
mov
(bad)
pop
inc
xchg
jle
adc
shr
and
adc
xor
div
push
in
nop
(bad)
mov
push
xchg
lods
loop
pop
loope
cmp
arpl
and
test
mov
iret
xor
sahf
pop
sbb
add
inc
sbb
popf
repz
or
xlat
cmp
test
popa
jnp
xor
inc
mov
push
pop
pusha
jo
adc
and
mov
ja
inc
fs
mov
xor
jns
fs
loopne
jae
mov
rcl
and
push
jmp
and
into
xchg
lods
cmp
in
add
or
or
stc
cmp
xchg
mov
std
aam
and
mov
pop
je
(bad)
sub
xchg
xchg
bound
test
imul
jl
sar
jecxz
mov
or
loop
cmp
sub
inc
add
mov
sub
push
cmp
xor
fcom
cwde
and
mov
mov
test
pop
dec
adc
jecxz
not
pop
mov
ficom
sti
dec
mov
jecxz
scas
mov
sub
pop
xchg
sbb
(bad)
out
loop
pop
(bad)
fst
loope
jns
daa
mov
mov
dec
inc
adc
outs
inc
icebp
xor
inc
movs
(bad)
imul
sti
setnp
jg
call
icebp
xor
jge
test
adc
lea
inc
jmp
scas
adc
push
mov
adc
mov
ret
addps
loope
div
mov
pushf
inc
mov
ror
ret
xchg
sbb
sbb
stos
into
inc
popf
fwait
dec
in
(bad)
clc
push
ret
sti
shl
push
or
arpl
nop
je
jo
hlt
clc
add
push
das
jne
sub
out
cmps
mov
icebp
pop
jecxz
in
mov
mov
arpl
mov
popa
repz
sub
ja
push
xchg
add
or
jl
and
mov
jnp
dec
scas
in
jb
sub
mov
inc
add
ds
es
dec
into
(bad)
xor
dec
and
inc
push
pushf
sbb
jo
sbb
fidivr
cs
cmp
test
and
xchg
call
rcl
inc
retf
dec
pop
ret
dec
aam
push
adc
rcl
push
adc
cmp
(bad)
push
xlat
iret
loopne
lods
mov
jmp
push
sbb
fwait
mov
mov
adc
je
in
mov
jno
sbb
add
outs
inc
bound
lods
jp
dec
lods
xor
push
mov
jl
mov
add
test
dec
icebp
and
test
cdq
int3
inc
leave
je
int
adc
mov
adc
pop
sub
test
mov
pcmpgtb
inc
jae
cmp
cmp
ja
out
pusha
mov
or
stos
dec
sbb
lods
xor
(bad)
xchg
sti
mov
cmp
sbb
add
lods
cs
xchg
dec
leave
push
mov
mov
jno
xchg
pusha
mov
ja
inc
jne
ja
imul
fs
call
repnz
add
dec
xchg
fistp
mov
stos
pop
retf
nop
inc
mov
add
inc
sar
out
cli
sbb
in
add
jne
scas
mov
retf
dec
das
test
cmps
inc
adc
xchg
das
xlat
in
cmp
shl
jbe
add
push
shr
jmp
xor
or
cdq
xor
pop
ds
mov
(bad)
fs
sub
rcr
pop
call
fwait
sbb
and
test
mov
push
fadd
mov
sub
pop
outs
cmp
test
sub
jmp
inc
mov
mov
enter
cli
add
add
pop
xor
cmp
mov
loop
adc
xor
sbb
(bad)
xor
mov
aas
movs
mov
inc
imul
adc
and
mov
sbb
arpl
xrelease
pop
cmps
mov
fistp
add
inc
jg
call
and
push
aam
dec
retf
mov
mov
inc
sub
movs
push
cmp
add
push
das
xchg
lods
jle
mov
xchg
pop
inc
mov
push
imul
inc
sar
xor
jae
jge
fdiv
xor
fwait
jp
addr16
mov
or
sbb
or
jo
mov
jnp
iret
rcl
adc
sar
mov
xchg
mov
push
sar
sub
stos
fdiv
or
sub
mov
and
dec
sub
fidiv
jmp
ds
fcomp
das
pop
movs
dec
leave
cmp
movs
daa
sbb
sar
imul
in
inc
sahf
cmps
pop
lock
in
sub
or
or
dec
sar
mov
jbe
add
xchg
adc
pusha
int3
sahf
mov
lahf
and
fs
push
mov
test
lea
add
xchg
or
jg
aam
sahf
jg
add
dec
add
and
inc
cmp
inc
ltr
and
push
pop
mov
(bad)
in
loopne
push
add
and
cli
add
loope
inc
lea
test
int
ffree
pop
lea
xor
stos
or
ficomp
ins
mov
fisttp
jmp
popf
stos
push
imul
sar
rcr
das
sub
in
repnz
pop
mov
push
dec
popf
cmp
cmp
mov
pop
in
xor
sbb
in
inc
aam
mov
fcomp
cmc
sub
ret
ins
fcomp
arpl
mov
pusha
scas
ja
and
cmp
cli
sub
sub
xor
out
push
or
test
pop
jp
jmp
ror
test
pop
dec
cmp
das
(bad)
push
xor
in
(bad)
in
mov
aam
jno
and
shr
inc
push
jno
addr16
(bad)
aaa
push
mov
pop
xchg
sbb
mov
push
mov
nop
mov
lea
cmp
jmp
xchg
int
adc
cli
bound
or
es
pop
sub
out
mov
jns
jb
sub
mov
rol
jge
push
jmp
pop
test
movs
aad
inc
cmp
sub
or
(bad)
jmp
mov
pop
outs
add
mov
mov
loope
out
jle
movs
stc
xor
inc
in
mov
js
hlt
cmp
or
pop
xor
adc
mov
loope
ins
int3
fstp
inc
jp
sti
add
add
sar
or
push
mov
imul
xchg
fwait
lock
jmp
mov
lods
cli
jle
or
mov
cwde
xchg
jb
(bad)
(bad)
jl
dec
sti
sub
xor
int
xchg
mov
lds
cmps
lods
fimul
clc
push
push
scas
stos
aaa
hlt
mov
mov
push
xlat
mov
fld
test
or
mov
jle
mov
ds
ds
push
in
adc
xchg
popf
shl
sub
cmp
xchg
xchg
cmp
cdq
ret
and
jmp
jmp
dec
inc
mov
fld
cmp
das
mov
jae
in
cmp
test
adc
inc
lea
lock
cmp
mov
and
mov
or
dec
xchg
push
stos
xchg
sub
ds
fcomp
dec
scas
scas
je
jae
scas
xor
inc
cmp
jp
push
jmp
hlt
out
pushf
inc
mov
add
push
shr
rcr
sub
sub
push
pop
sbb
push
retf
mov
push
inc
push
and
rcl
push
in
sbb
and
addr16
shr
sbb
cdq
(bad)
addr16
ret
movs
and
pop
in
clc
add
dec
scas
movs
inc
ss
pop
fwait
pop
movs
into
fld
movs
aas
jne
mov
sbb
jle
pop
xchg
cwde
sti
clc
cdq
or
movs
cmps
rcr
and
fisub
jl
jb
cmp
sub
xor
jo
and
lods
mov
cmp
adc
inc
ficomp
in
and
lahf
xchg
jmp
jmp
pop
out
mov
add
push
cmp
xchg
aaa
retf
xchg
cmp
inc
retf
jge
(bad)
and
loop
fidiv
and
pop
jns
xor
push
xor
daa
in
ins
repnz
dec
cmp
mov
jo
xor
cwde
stos
dec
test
mov
mov
dec
xor
pop
jb
pop
gs
movs
outs
sub
or
sbb
cmp
xor
pop
cmp
sbb
inc
in
pop
fisubr
sub
mov
inc
in
adc
dec
dec
pop
aaa
cmp
pop
cmc
pop
daa
les
popf
popf
fnstcw
and
inc
push
hlt
popf
imul
sbb
push
test
pop
in
int3
and
movs
sbb
jno
fld
and
pop
scas
ret
cmp
ins
xlat
outs
dec
int
stos
addr16
sub
cmp
cmc
sub
xor
jbe
pop
jmp
(bad)
mov
fyl2xp1
int3
fsub
adc
arpl
jae
outs
mov
mul
inc
fdivr
xor
pusha
mov
(bad)
fdiv
cmp
cld
mov
ins
and
cs
jle
xchg
outs
popa
inc
xor
jp
stos
jnp
hlt
inc
adc
xlat
cmp
and
aam
adc
inc
jno
int3
pop
xchg
mov
shl
push
ins
std
jns
aas
pop
jle
pop
push
ss
mov
mov
mov
pop
mov
shr
mov
mov
cs
stos
jno
(bad)
xchg
addr16
jmp
mov
out
lahf
scas
pop
inc
aad
test
repz
imul
rcr
cwde
mov
loop
sub
aas
imul
ss
inc
cmps
push
scas
cs
sahf
popf
aaa
lds
mov
push
xor
retf
pop
ret
fmul
or
jecxz
cli
pop
nop
stos
xchg
adc
push
push
mov
inc
sub
mov
pop
jns
call
xor
and
nop
inc
in
int
pop
pop
ins
inc
(bad)
or
test
or
mov
ss
shl
nop
scas
arpl
mov
push
mov
push
and
sti
stos
push
test
mov
into
mov
ins
icebp
retf
dec
push
sbb
cmp
int3
sahf
mov
(bad)
sbb
aad
js
xor
inc
xor
stos
daa
xchg
jo
shl
mov
xor
xchg
test
ja
outs
mov
cmp
int
xchg
inc
pop
jge
jae
and
in
ficom
push
loopne
stc
inc
push
div
jmp
ins
not
ss
in
add
xchg
dec
aad
aaa
out
adc
pop
mov
jae
pop
adc
fldcw
jne
retf
mov
(bad)
dec
pop
mov
push
pop
inc
pop
fld
mov
leave
into
mov
and
jo
pop
push
sub
dec
aam
xor
not
out
and
dec
push
add
inc
jbe
jmp
daa
retf
movs
and
cwde
test
jecxz
or
ins
arpl
into
loop
mov
sbb
fidivr
arpl
out
mov
and
dec
shl
ja
fcmovbe
lahf
stc
pop
sbb
push
sbb
xchg
add
ffree
arpl
xchg
or
das
fdiv
imul
out
daa
inc
jge
ret
jl
xchg
xchg
dec
aaa
push
cmp
in
or
scas
les
adc
xlat
bound
xchg
mov
cmp
inc
lock
push
(bad)
icebp
arpl
and
xchg
sbb
pop
xchg
fnstsw
or
mov
pop
add
sbb
outs
mov
inc
(bad)
pushf
dec
les
push
test
push
or
sbb
xor
sub
xchg
cmp
jno
aad
cli
loopne
fcom
fsubp
add
popf
xchg
xor
jmp
inc
push
xor
pop
sub
popa
in
jg
xchg
xlat
jmp
pop
mov
out
jne
mov
adc
inc
xor
jno
xchg
cmp
and
inc
xor
fsubp
data16
pop
aas
(bad)
stc
or
rol
(bad)
stc
int3
ins
(bad)
sbb
mov
jg
(bad)
leave
mov
and
xchg
lods
or
push
dec
add
(bad)
shl
nop
stc
mov
or
cwde
mov
outs
push
xchg
xor
xor
div
mov
in
rcr
add
cmp
scas
test
enter
xchg
mov
lock
int3
fdiv
or
dec
aas
xor
call
push
lods
cmc
mov
leave
fs
jno
add
dec
dec
imul
out
pusha
ins
test
imul
popa
lds
jo
push
push
dec
inc
cmp
enter
xor
rcl
scas
sub
jb
adc
ds
cmps
mov
cmp
pop
xor
jge
jmp
test
xchg
retf
and
fisub
lock
inc
clc
scas
cmc
cmp
push
scas
pop
and
push
push
inc
push
mov
dec
xlat
ja
sbb
pop
sub
cmc
fs
sub
mov
dec
icebp
cwde
push
dec
jecxz
lock
mov
sub
sbb
and
retf
inc
jp
mov
cmps
lea
(bad)
push
nop
test
dec
or
imul
test
or
cs
mov
cwde
call
xor
xchg
or
call
cli
xor
lahf
das
test
aas
dec
aam
xchg
jno
das
inc
push
aaa
int
jge
(bad)
out
fidiv
xchg
push
dec
adc
xor
fsub
mov
test
imul
scas
loop
ret
rcr
mov
and
outs
(bad)
push
bound
test
pop
xor
sbb
and
stc
push
jmp
test
(bad)
and
fcom
scas
movs
push
lock
xchg
lods
push
or
cmps
cmp
pop
cmc
adc
mov
and
mov
movs
je
xchg
jns
sub
cld
and
test
pusha
inc
sbb
pop
cli
stc
cwde
shl
xchg
inc
sbb
mov
jg
push
dec
clc
mov
fsubr
cmps
fwait
in
inc
push
aaa
stos
in
jae
push
cwde
jnp
sub
fidivr
test
mov
fcmove
cmc
ins
mov
retf
pop
out
pop
mov
dec
pop
pop
rol
cmp
dec
lods
mov
xchg
dec
sbb
lods
dec
sub
xchg
arpl
stos
sbb
push
pop
fdivr
mov
add
scas
cld
and
das
inc
push
xchg
dec
cmp
adc
lods
cmp
stc
jae
ficom
fld
sub
retf
jnp
in
jecxz
mov
jl
mov
cmps
inc
out
cdq
sub
shr
das
div
ret
je
mov
push
sbb
imul
jp
push
out
int3
pop
push
fsubr
pop
xchg
dec
or
or
dec
cmp
push
lods
push
jmp
rol
cmps
mov
mov
mov
arpl
xchg
repnz
cld
cmp
out
test
pop
mov
push
dec
cmp
mov
mov
cs
movs
fstp
enter
jnp
push
or
call
pop
cmp
xchg
nop
std
stos
stos
adc
hlt
dec
(bad)
sti
jg
ror
ins
out
cmp
add
push
cmp
push
mov
cmp
aam
mov
add
cmc
inc
pop
push
cmc
inc
mov
fld
div
push
jns
scas
or
dec
and
mov
imul
push
pop
inc
jns
icebp
scas
out
call
jmp
jne
and
pop
xchg
sbb
mov
jb
adc
call
cwde
adc
xchg
pushf
jmp
lds
jns
cmp
movs
inc
test
cmp
cs
jbe
pusha
mov
ret
xchg
shl
jo
xor
adc
mov
jmp
stos
xor
out
test
adc
or
mov
lahf
in
jp
and
das
mov
(bad)
clc
cmp
cdq
cld
(bad)
xor
ror
outs
test
mov
jmp
jecxz
adc
pop
cmp
or
mov
ss
add
cmp
movs
add
xchg
inc
cli
aad
dec
fwait
mov
pop
in
leave
arpl
nop
icebp
jmp
sub
ret
jae
mov
int
ret
push
ins
or
push
adc
sbb
push
outs
aaa
inc
dec
ins
scas
dec
(bad)
addr16
enter
pushf
inc
js
cmp
jb
data16
imul
fcomp
sar
call
add
ret
mov
in
(bad)
fld
inc
lea
inc
or
adc
pop
aas
or
sub
mov
loop
add
and
cmps
jge
in
mov
xor
cmp
ds
aaa
cld
mov
sahf
stos
cmp
jl
mov
aam
fadd
js
jbe
in
stos
sub
loope
cmp
sub
(bad)
iret
sbb
add
inc
add
pop
leave
imul
fisubr
sti
popa
add
lahf
loope
enter
jl
sbb
xor
inc
sub
aaa
inc
bound
mov
or
or
inc
mov
sbb
(bad)
or
jbe
mov
call
adc
jne
iret
inc
and
push
sub
adc
jg
push
pusha
mov
and
push
add
(bad)
mov
xor
stos
xor
in
test
sti
dec
lods
std
ins
jnp
imul
fstp
out
fstp
je
push
scas
sub
sbb
cld
cdq
das
js
rol
cmp
loope
sub
mov
mov
shr
pop
pop
fs
mov
imul
mov
xor
fwait
mov
mov
imul
(bad)
jg
les
or
xchg
mov
ins
mov
shl
idiv
iret
mov
(bad)
jb
jg
mov
cmp
ss
inc
add
sub
pop
mov
add
and
mov
adc
inc
loopne
daa
repz
adc
nop
sbb
xchg
sahf
sub
(bad)
cmp
and
fcomp
dec
out
(bad)
push
or
adc
stos
xor
mov
fcomp
js
in
clc
sti
sbb
sbb
lods
(bad)
and
iret
test
xchg
movs
adc
arpl
imul
pop
pop
je
test
dec
(bad)
jmp
inc
and
rcr
add
nop
pop
mov
mov
dec
movs
push
push
jns
cmp
pop
dec
aas
push
cmp
jo
inc
popf
mov
bound
out
jae
sahf
pop
stc
retf
mov
inc
in
inc
and
int3
push
push
ror
sti
inc
push
popf
call
(bad)
pop
out
jne
ins
add
mov
cmps
fs
pop
mov
pop
out
(bad)
icebp
fucomi
adc
lds
inc
xchg
test
add
inc
and
xchg
ss
pop
dec
jae
retf
call
sub
rcl
mov
stos
outs
inc
xor
fs
not
pop
ror
or
stc
sub
int
outs
shl
sub
ror
mov
mov
jae
retf
test
jmp
imul
jle
mov
xchg
aas
push
adc
sub
dec
popf
aas
dec
xchg
fs
mov
stos
xor
loop
call
mov
loope
imul
lahf
(bad)
mov
clc
(bad)
cdq
in
sbb
test
push
jmp
ds
dec
sbb
outs
jmp
xchg
shl
call
cmps
cmp
xor
jne
jecxz
cli
xlat
xor
hlt
inc
sub
cmp
mov
push
cmp
out
inc
push
sahf
push
faddp
add
enter
cmp
cmp
mov
sar
fnstenv
add
cmp
sbb
jmp
in
mov
or
pop
outs
cmp
jecxz
fimul
pushf
aam
out
xor
(bad)
scas
sub
adc
(bad)
lahf
or
jmp
push
xchg
add
push
xlat
iret
mov
xchg
std
(bad)
jle
cmp
xor
loopne
(bad)
repnz
ret
inc
fld
dec
pop
push
add
es
mov
pop
mov
daa
retf
adc
(bad)
xor
sub
and
add
push
pop
pop
movs
(bad)
in
mov
mov
jne
adc
mov
cmps
retf
xor
or
and
addr16
pusha
xchg
cdq
fdiv
fstp
aam
(bad)
mov
jle
push
stos
push
xchg
mov
mov
into
mov
out
jno
mov
mov
fwait
loop
xor
jg
push
cmp
out
ss
push
(bad)
call
xchg
add
push
retf
in
outs
cwde
dec
int
or
push
push
repnz
out
fnsave
mov
cmps
pop
jmp
sti
xchg
mov
mul
test
cmp
ds
cmp
ficom
xchg
lods
(bad)
cwde
inc
lock
jle
push
mov
dec
pop
dec
xchg
aaa
sub
lds
push
mov
std
add
and
cmp
dec
ret
mov
xchg
ret
lds
out
inc
jb
cmp
stos
and
retf
ds
ss
add
test
loopne
jmp
punpckhbw
fsubr
cmp
jns
xchg
dec
xchg
sub
idiv
xchg
mov
jbe
and
ss
test
dec
jb
sar
xchg
jecxz
mov
sub
mov
inc
fnstsw
dec
outs
mov
inc
mov
jne
sbb
scas
retf
mov
xchg
pop
aam
aad
imul
test
mov
popa
mov
mov
and
jl
ja
mov
in
in
hlt
scas
jnp
mov
jnp
mov
fistp
pop
sub
push
je
xor
and
cmp
cwde
pusha
loope
shl
out
push
out
cs
push
ret
sub
stc
sub
fcom
hlt
imul
inc
adc
jp
inc
pop
xor
mov
popf
pop
cli
fstp
out
sub
int3
add
lods
lds
ja
xor
aad
cwde
xor
dec
mov
add
mov
movs
int
loopne
dec
jle
in
cmp
adc
inc
(bad)
push
test
lahf
(bad)
stc
jge
sub
out
push
add
fld
adc
mov
add
dec
inc
sbb
add
adc
out
cld
retf
mov
adc
and
jl
fcom
xchg
ins
xchg
add
add
into
aad
adc
mov
push
mov
cmc
clc
rcr
xchg
popf
push
and
cmp
or
add
shl
jo
add
cmp
mov
es
jns
fs
dec
retf
add
out
test
pop
hlt
sbb
mov
jg
cli
jl
aaa
cmp
push
lahf
or
jp
pop
pop
push
mov
repz
mov
ja
dec
jno
inc
inc
or
fcom
std
out
mov
inc
mov
jmp
into
sbb
sbb
xor
sysexit
or
aas
inc
cmc
(bad)
sbb
sub
push
fs
pop
loope
add
dec
les
cli
and
dec
mov
icebp
cmp
xchg
cli
ss
add
ret
out
rcl
inc
adc
cdq
inc
div
cld
mov
imul
pop
or
and
or
and
push
lock
std
cmps
mov
sbb
push
pop
into
sbb
call
enter
mov
fiadd
fwait
sub
xchg
push
jg
pop
mov
aad
add
sti
daa
sbb
adc
xchg
fisttp
movs
leave
pop
and
outs
fs
fnstsw
cs
jns
pop
icebp
xchg
or
mov
cwde
jne
push
sbb
pop
pop
(bad)
mov
mov
inc
out
in
cmps
add
cwde
es
mov
add
jae
xchg
xor
or
pop
dec
aad
es
mov
int3
and
ins
fst
outs
xor
cs
xchg
or
cmps
jmp
mov
jle
push
or
jecxz
add
ret
mov
ins
mov
test
cwde
sbb
in
pop
fisubr
adc
xor
retf
push
icebp
nop
movs
rol
lods
pusha
jo
mov
imul
jb
xor
mov
mov
or
push
aas
fild
push
fcomip
lods
jl
das
loopne
jmp
xlat
ja
pop
dec
leave
data16
cmp
jl
adc
mov
stos
push
and
(bad)
int
dec
sub
sub
ret
and
and
xchg
out
mov
cmps
imul
lahf
sub
dec
aam
and
xor
adc
inc
sub
(bad)
aad
lahf
inc
aad
mov
and
idiv
sti
cwde
or
sti
jmp
daa
(bad)
cmp
pop
hlt
stos
xor
call
lock
push
push
cmp
icebp
outs
mov
jns
fcom
fst
pop
and
jg
in
and
popa
mov
cmp
cli
xchg
in
fsubp
jnp
in
pushf
inc
push
pop
cmps
pop
add
js
cld
xchg
adc
lds
sub
add
int
mov
xchg
jbe
xchg
pop
push
and
dec
imul
dec
movs
lock
pop
out
jae
sub
adc
dec
jbe
cmp
cmp
data16
cmp
jmp
sub
mov
in
js
scas
leave
inc
stc
mov
mov
nop
shl
jmp
cmp
inc
adc
push
sbb
add
sahf
lods
nop
out
adc
jle
call
sbb
xchg
fcmovu
jns
push
mov
dec
dec
xchg
imul
fld
or
mov
ds
sub
lock
fdivr
sbb
mov
inc
idiv
jl
mov
push
outs
xchg
in
inc
cmp
mov
jp
xchg
mov
or
fst
popf
add
mov
or
push
adc
jnp
add
ds
or
xor
cwde
imul
je
movs
sti
push
or
push
in
int
das
or
add
pusha
jae
jne
mov
push
mov
jbe
xchg
mul
hlt
loopne
xchg
xchg
loop
inc
dec
loopne
xor
inc
(bad)
loope
scas
jbe
in
push
inc
mov
clc
lahf
mov
test
test
push
inc
mov
repnz
mov
sbb
fs
test
jbe
(bad)
(bad)
jecxz
mov
push
(bad)
and
cmps
lods
jne
loope
div
or
and
mov
mov
shl
cli
(bad)
fmul
add
adc
jno
xor
xchg
gs
inc
inc
lods
aam
jns
dec
mov
lods
stc
scas
out
or
scas
or
mov
jo
mov
imul
call
xchg
mov
fbld
mov
cwde
pop
call
add
xchg
pop
popf
add
loopne
push
cmp
(bad)
push
in
dec
pop
jbe
imul
int
repnz
(bad)
call
scas
fcmovnbe
sub
inc
xor
cli
add
repz
or
aad
aaa
cmps
repz
mov
test
ss
retf
add
push
popf
in
and
sub
sbb
and
jno
data16
pop
mov
out
mov
pop
(bad)
shl
fidivr
mov
loop
(bad)
bound
sub
adc
xlat
xor
(bad)
scas
add
es
jne
jg
adc
ret
out
sbb
loopne
mov
or
lock
mov
in
mov
mov
test
out
in
and
std
neg
inc
jb
repz
mov
scas
mov
pop
(bad)
adc
mov
mov
imul
aaa
or
lods
repnz
sbb
(bad)
sub
mov
rol
subps
ret
lahf
xchg
sub
fxch
xor
ror
(bad)
lods
xchg
fs
dec
retf
mov
into
jp
sahf
mov
jns
js
jg
add
or
mov
xor
call
int
pop
(bad)
dec
out
sbb
and
push
mov
mov
sbb
fsubr
pop
arpl
jns
mov
or
mov
les
inc
test
(bad)
iret
or
inc
push
jo
aas
push
push
out
js
fcomp
lahf
loope
adc
ins
repnz
dec
or
xor
mov
inc
mov
cmp
mov
js
fxch
repz
(bad)
sbb
(bad)
push
ja
mov
in
xor
sub
into
jbe
cdq
inc
cmp
push
push
lods
mov
test
ja
cmp
cmp
jns
jle
clc
rcl
jbe
and
cmp
dec
cmp
jo
jno
or
sti
fsubp
push
scas
xor
ret
xor
adc
vmwrite
jo
mov
(bad)
xlat
out
xchg
stos
scas
stc
xor
test
dec
std
bnd
xchg
mov
add
inc
std
add
or
(bad)
adc
xor
and
(bad)
(bad)
in
push
lea
mov
inc
push
js
imul
sub
sahf
jns
popa
add
ror
mov
test
out
mov
ss
arpl
imul
mov
mov
pop
mov
imul
adc
and
mov
pop
dec
popa
mov
std
mov
popf
cmp
xor
xchg
cli
dec
add
add
rcr
data16
ins
fmul
scas
dec
add
pushf
jb
hlt
in
call
xchg
cmp
aam
dec
sbb
mov
mov
addr16
leave
cmp
cdq
dec
ins
sti
inc
stc
or
stos
add
mov
(bad)
call
test
inc
mov
in
or
jecxz
enter
add
and
stos
es
cwde
or
popa
adc
ror
aaa
retf
mov
enter
push
enter
cmps
and
mov
pop
test
jb
popf
addr16
sub
(bad)
gs
in
push
sahf
xor
leave
iret
(bad)
(bad)
clc
fcom
mov
mov
mov
pop
inc
and
stos
cmp
(bad)
adc
push
mov
les
ins
mov
dec
sub
jbe
push
and
rcr
iret
dec
ins
xor
aam
mov
mov
sbb
and
xor
leave
push
cdq
jae
adc
imul
adc
(bad)
or
in
push
bnd
mov
sar
aad
or
fs
loopne
repz
sub
xor
mov
mov
(bad)
rcr
adc
ds
mov
(bad)
mul
mov
sahf
cmp
je
test
add
dec
adc
in
lods
aaa
cmp
movs
dec
mov
aas
mov
stos
push
and
stos
add
scas
sbb
enter
loope
sub
test
xor
pushf
mov
stc
fstp
(bad)
fdivr
ret
ss
adc
sahf
int
mov
cmp
call
enter
enter
pop
xchg
fcom
retf
pop
jmp
pop
or
jo
pop
mov
jae
sar
jmp
xlat
push
lods
cmc
push
xchg
sbb
inc
sub
enter
push
xor
xor
fs
and
sub
ins
inc
cdq
sbb
mov
adc
hlt
fmul
and
and
dec
popa
xor
lock
shl
bound
sbb
mov
aad
jae
movs
ret
rcl
mov
imul
dec
out
pop
jae
push
and
cmc
das
sbb
adc
popf
js
sub
ss
dec
or
push
cmp
mov
lock
pop
push
out
cmp
dec
mov
sbb
ret
xchg
push
fwait
cmp
jge
(bad)
push
into
jle
mov
cmc
mov
sub
mov
pop
leave
fadd
dec
cwde
cld
or
mov
mov
in
sbb
mov
sbb
push
sbb
adc
das
in
jmp
pop
daa
adc
inc
add
fstp
(bad)
xor
jb
xor
ficom
push
jae
adc
xchg
das
dec
jp
cld
popa
movs
(bad)
inc
inc
pushf
addr16
or
jge
push
jmp
inc
outs
push
mov
xchg
xchg
in
outs
bound
or
gs
sbb
enter
(bad)
sti
ins
repnz
int3
pop
repnz
ins
fs
test
test
cld
call
cmp
pushf
std
cmp
enter
(bad)
cmc
outs
(bad)
mov
cs
int3
out
adc
pop
vpavgb
test
cwde
adc
mov
cwde
mov
or
mov
dec
call
lea
scas
fistp
retf
stos
jns
pop
dec
dec
sbb
dec
push
lea
pop
mov
jns
test
icebp
into
out
rol
push
imul
and
xor
loopne
ror
retf
pop
mov
dec
jo
outs
sbb
test
mov
aad
pop
(bad)
ficomp
movs
mov
jge
inc
in
clc
pop
retf
adc
movs
cdq
push
fist
mov
lea
sbb
enter
pop
xchg
and
push
pop
fnsave
and
or
enter
test
imul
inc
jmp
movs
es
and
push
out
fidivr
stos
cld
push
popa
div
adc
data16
pushf
and
sbb
les
inc
cdq
sub
sti
aam
sub
jmp
push
sub
xchg
and
sbb
add
cs
mov
(bad)
lea
mov
add
movs
xchg
cmp
mov
loop
aad
dec
xchg
push
mov
call
inc
shr
add
repnz
mov
fist
add
scas
pop
aam
mov
sbb
or
lods
lods
or
fmul
iret
dec
stc
lods
(bad)
sub
adc
adc
into
xchg
add
(bad)
aad
mov
bound
fs
xchg
mov
in
clc
popf
jno
jne
xchg
and
pop
fs
ja
and
scas
dec
push
into
or
inc
sar
sbb
jmp
sbb
xchg
push
pop
sub
mov
dec
push
mov
xchg
div
mov
mov
add
rcr
cld
popf
js
push
jp
mov
or
xlat
sbb
push
push
push
int
jb
dec
or
(bad)
cmp
xor
in
ret
je
xor
rcl
(bad)
push
das
test
js
scas
shl
(bad)
fwait
rcl
into
fadd
pop
out
rcl
fbld
cmps
inc
dec
xchg
add
pop
inc
ret
in
in
xor
hlt
ret
push
inc
cmp
adc
mov
cmp
cdq
ror
inc
sbb
cmc
hlt
jp
arpl
dec
lock
jle
jbe
jns
sub
xor
arpl
mov
rcl
xchg
aaa
popa
mov
in
aad
(bad)
push
push
sar
call
xor
jbe
fs
adc
jp
cmp
fidivr
cmp
neg
inc
jge
cmc
sbb
inc
or
cmps
shl
lods
fidiv
mov
ret
lea
jmp
idiv
pop
lahf
jbe
push
sahf
jmp
aas
out
call
xor
push
outs
mov
jae
jecxz
test
cwde
and
mov
xlat
or
xor
(bad)
cmc
jb
sbb
sbb
or
jle
pop
pop
lahf
scas
push
repnz
sub
lods
sbb
add
or
mul
lea
pop
pop
adc
cs
out
popf
mov
xor
sub
jp
push
rol
jmp
fiadd
cmp
mov
cmp
sub
cmp
ret
out
dec
xor
imul
cmp
loope
hlt
or
dec
xchg
rol
inc
adc
int3
cmp
dec
push
inc
xor
cmp
sub
sub
popf
sbb
cli
lods
pushf
sbb
xchg
jo
cmps
sub
addr16
mov
mov
inc
cs
mov
adc
cmp
pusha
mov
adc
jne
popf
inc
loop
addr16
nop
add
outs
stos
int3
add
push
stos
nop
jmp
and
pop
jmp
out
stos
push
cmp
ds
pop
cmps
sti
add
sbb
int3
mov
jle
pop
xlat
pop
popa
mov
aad
loopne
pop
or
aam
(bad)
sti
pusha
int
ins
jl
popf
(bad)
in
add
add
test
loopne
and
push
dec
aaa
fist
push
jge
xor
arpl
aam
mov
dec
ss
dec
add
scas
clc
push
cmpxchg
xchg
cmps
(bad)
mov
cmc
in
sub
pop
movs
in
out
stc
inc
cmp
pop
or
dec
cmps
push
add
test
dec
and
pop
shr
mov
pop
jp
imul
bound
js
movs
pop
outs
rcr
clc
ret
inc
ja
out
call
inc
bound
call
add
shl
push
enter
xor
sub
xchg
xor
ja
sub
das
sbb
imul
rol
dec
lds
stos
test
popa
xchg
lods
mov
dec
cmps
inc
sar
fst
mov
test
rol
movs
scas
dec
jmp
ja
sub
ret
pop
cmp
sub
mov
out
pop
dec
xchg
inc
aaa
cmp
sahf
dec
frstor
xchg
pop
jmp
dec
js
pop
aad
add
stc
pop
xchg
add
adc
not
retf
mov
repnz
dec
stc
cmp
pop
lods
add
cmp
adc
xor
adc
sub
add
shl
ja
outs
sbb
pusha
adc
sbb
xchg
aam
repz
add
fwait
xchg
jmp
dec
dec
stc
hlt
daa
aaa
inc
add
push
daa
and
int
sbb
fist
sbb
add
jno
mov
and
std
mov
hlt
pop
fist
leave
jp
mov
in
add
add
xchg
inc
mov
push
jp
fbld
xor
mov
jae
adc
jmp
shl
arpl
imul
mov
(bad)
or
cmps
dec
jbe
pavgb
mov
xor
in
loope
pushf
test
xchg
loop
lods
inc
rcl
push
push
push
sub
js
jbe
add
fisttp
fnsave
add
push
dec
mov
das
mov
and
add
ret
xor
int
mov
clc
in
push
in
mov
pop
mov
pop
pop
bound
std
popa
mov
or
jle
in
cmp
sbb
mov
sbb
cmp
push
and
inc
mov
dec
enter
and
pop
sbb
xchg
shr
hlt
jns
inc
ss
dec
pop
das
ss
leave
dec
es
(bad)
out
cmp
in
lods
mov
mov
int
add
sub
mov
sub
in
mov
sub
or
cmp
push
aaa
jmp
popa
out
lea
data16
pop
xor
stos
out
sub
or
add
mov
outs
cmps
jnp
jecxz
jnp
inc
ret
dec
xor
mov
das
jb
inc
nop
test
nop
adc
mov
pushf
mov
dec
ins
dec
pop
mov
gs
outs
cmc
imul
sbb
pop
inc
pop
sti
imul
mov
loop
mov
mov
jmp
ins
ror
call
push
aad
ss
bnd
push
jge
pop
mov
jne
rol
mov
(bad)
cld
jge
cmc
add
loope
not
adc
cmp
clc
xor
scas
or
push
call
daa
jge
sbb
jmp
adc
int3
ficomp
scas
ret
scas
fistp
out
mov
int
sub
fsub
inc
fmul
into
dec
test
stos
ficom
and
out
cwde
imul
dec
or
jmp
add
popa
gs
sbb
imul
inc
std
ins
sbb
out
pop
xchg
bound
stc
inc
pop
(bad)
out
rol
loop
mov
aas
add
mov
sbb
je
addr16
dec
fild
adc
mov
add
and
add
push
fst
cmp
xor
leave
add
push
aam
movs
adc
xchg
inc
adc
je
push
aam
pop
sub
aam
hlt
inc
jne
cdq
pop
sbb
xchg
das
push
dec
inc
push
das
rcl
gs
push
stos
push
shr
sbb
xchg
or
fsubr
es
repz
inc
push
or
jecxz
push
pop
adc
xchg
mov
add
call
jg
clc
aam
mov
ret
fxch
mov
and
(bad)
xor
movs
ins
adc
jp
in
out
mov
pop
imul
cmps
scas
cdq
imul
int
sbb
stos
push
fadd
jns
mov
push
clc
cmp
inc
dec
and
mov
outs
mov
jbe
out
cmp
inc
cdq
inc
nop
cmp
dec
cmp
pop
cmp
cmps
repz
out
xchg
xor
jne
cmp
jmp
mov
sub
jl
arpl
pop
clc
mov
repz
scas
or
and
mov
iret
dec
inc
and
jecxz
arpl
cmp
arpl
sub
(bad)
das
mov
imul
int3
adc
es
mov
sbb
pop
mov
nop
lock
dec
call
and
dec
fisttp
imul
sti
pop
sti
cmp
and
psrld
jl
arpl
mov
pusha
ffree
mov
pop
arpl
sub
sbb
or
or
push
int
fwait
pop
mov
inc
out
jne
mov
add
rdpmc
sbb
into
mov
imul
gs
push
iret
sub
cmp
xlat
dec
shl
adc
not
mov
mov
xchg
sbb
daa
mov
or
and
and
(bad)
stos
movs
repz
outs
stos
nop
xor
outs
sbb
rcr
add
cli
push
cs
stos
push
je
cmp
jp
xchg
and
iret
arpl
popf
cli
repz
les
das
ret
jno
xor
fst
jb
idiv
lods
cmp
push
out
jne
mov
push
std
std
mov
(bad)
mov
pusha
jbe
push
push
push
pop
push
loop
bound
cmp
fwait
(bad)
ins
dec
xchg
jmp
mov
outs
jns
sbb
push
xchg
push
jp
cmp
(bad)
jnp
push
aam
shl
(bad)
and
jle
int
cwde
cmps
cwde
push
cdq
repnz
xchg
and
dec
mov
lock
test
ja
push
ins
mov
movs
and
cs
in
jge
jb
outs
sub
jge
shl
adc
xchg
push
add
rcl
or
pusha
jmp
je
outs
pop
outs
jmp
jp
jp
dec
jne
fs
aad
loopne
pop
mov
enter
pop
mov
or
stc
mov
sub
test
arpl
not
jle
ins
movs
mov
sbb
int3
lock
pop
ins
xlat
jg
(bad)
mov
pop
inc
outs
push
retf
enter
ror
or
sub
fwait
test
cmp
outs
in
push
lods
push
dec
xor
out
cwde
call
inc
sbb
(bad)
adc
cmps
das
out
xchg
sub
mov
jnp
cli
cli
sti
pop
xlat
(bad)
rcr
inc
inc
mov
in
mov
mov
bound
dec
test
loope
dec
mov
popf
cmp
mov
push
and
jae
loopne
dec
add
jbe
js
dec
cld
jmp
push
mov
mov
lea
mov
pop
cmp
pop
mov
fst
neg
dec
sar
xor
repz
mov
cmps
mov
sbb
lock
call
xor
mov
push
xor
pop
mov
xchg
adc
lods
inc
lock
dec
mov
(bad)
mov
xchg
js
xor
mov
arpl
sbb
adc
loope
dec
pop
jmp
pop
jae
push
push
push
retf
lds
push
shl
add
dec
mov
push
das
inc
mov
sub
push
fld
stos
pop
push
fsubr
add
inc
cmps
lahf
and
jo
das
dec
add
movs
jg
fsubr
call
lahf
pusha
jle
jmp
aad
hlt
ja
jmp
inc
cmc
out
sbb
imul
add
repnz
shl
inc
jo
movs
mov
stos
loope
push
cmps
mov
jae
mov
dec
fild
(bad)
lahf
ss
cmp
mov
in
dec
xchg
adc
push
and
pop
xchg
jo
add
jae
add
pushf
mov
retf
mov
adc
test
inc
add
dec
retf
outs
popf
inc
test
inc
mov
mov
sub
or
fwait
out
loop
cwde
jl
push
rcl
push
pushf
ins
inc
cmp
ins
or
add
jmp
xor
sub
out
pop
push
ret
add
aaa
inc
ins
stc
ds
sar
shr
ror
idiv
call
and
adc
sti
sub
mov
pushf
dec
and
outs
(bad)
cld
mov
hlt
jmp
sub
ret
icebp
in
jae
(bad)
outs
cmp
aam
mov
lds
cwde
and
push
das
scas
iret
or
adc
inc
or
div
retf
inc
jns
add
call
shl
popf
aam
pushf
shl
movs
test
call
int3
bound
jl
and
loopne
adc
mov
mov
pushf
jp
pop
mov
movs
call
push
or
cld
retf
dec
push
fs
inc
mov
jmp
mov
and
sbb
and
mov
mov
mov
pop
cmps
mov
outs
std
mov
sub
jmp
push
fwait
dec
and
ds
rcl
jp
aaa
mov
out
and
jb
lock
mov
(bad)
mov
jecxz
add
shr
test
cli
ja
out
jecxz
or
xchg
fisub
les
out
dec
movs
sbb
mov
mov
pusha
push
sub
adc
out
jmp
jge
xor
xor
loop
pop
lds
(bad)
jmp
sahf
cmp
pop
dec
sub
pop
cmp
pop
add
lock
out
inc
(bad)
shl
out
adc
inc
popa
jb
imul
int3
mov
in
or
les
retf
clc
test
repz
mov
gs
cmc
test
adc
xor
into
mov
cmps
push
out
nop
cmp
push
push
(bad)
xor
es
stos
cwde
outs
xchg
sbb
call
cmp
push
jmp
inc
mov
fs
rcr
xchg
jno
mov
push
movs
pop
push
add
cmp
cmp
cld
fwait
stc
call
aas
pusha
or
xor
mov
mov
push
push
mov
xchg
cmp
cdq
std
xchg
nop
pop
test
shl
shl
pop
popa
adc
in
mov
(bad)
push
lds
rcl
(bad)
push
cmps
adc
inc
fcmove
test
push
adc
push
add
jp
mov
inc
in
ficom
cmp
sar
dec
push
ins
adc
pusha
imul
mov
call
xchg
popf
stc
out
cli
ja
(bad)
inc
pop
push
pop
mov
rcl
mov
ins
outs
mov
es
xchg
sbb
loop
enter
sub
(bad)
xchg
add
or
push
cwde
push
aad
cmc
xor
movs
ja
or
xor
ret
inc
jne
sub
xchg
cmp
cmp
jno
add
inc
sbb
(bad)
ss
jecxz
sti
popf
mov
push
and
(bad)
loope
adc
fdiv
(bad)
pusha
inc
cmp
xor
or
push
hlt
sub
add
cmp
inc
add
add
repz
add
jp
and
clc
inc
test
xor
inc
popf
popf
idiv
(bad)
jae
loop
jmp
adc
ror
xchg
into
push
sub
(bad)
sub
ret
repz
int3
(bad)
xlat
and
test
fdiv
dec
(bad)
bound
out
out
cmps
mov
in
or
daa
mov
(bad)
or
jl
jbe
sti
scas
xchg
ins
cmp
mov
fmul
fsubr
sbb
adc
push
inc
(bad)
cmp
mov
jecxz
dec
shr
es
xor
retf
adc
mov
mov
adc
and
ds
enter
xor
push
pop
mov
call
jo
movs
or
push
push
jo
dec
mov
sub
sar
sub
mov
xchg
or
je
push
dec
(bad)
inc
repnz
cmp
repnz
arpl
mov
xchg
pop
push
nop
xchg
or
add
pop
fwait
clc
adc
dec
mov
adc
sbb
xchg
sub
das
(bad)
aam
mov
bound
ret
xchg
cmps
mul
sub
sub
iret
xchg
retf
inc
pop
sti
loope
addr16
push
push
bound
out
hlt
add
xchg
loop
cmp
adc
add
ins
jns
and
imul
retf
enter
test
add
repz
push
loope
call
idiv
cld
addr16
lods
xor
sub
add
shl
add
shr
out
push
(bad)
sub
fs
dec
inc
inc
cmp
jo
cld
dec
rol
sub
cmp
xchg
dec
shl
scas
adc
mov
xchg
cmp
fsub
test
test
hlt
data16
mov
mov
mov
or
mov
daa
loopne
xchg
mov
mov
out
fcom
out
retf
mov
inc
dec
pop
into
cdq
iret
imul
add
in
loopne
sub
shl
imul
hlt
xchg
das
test
movs
outs
hlt
xor
push
aas
xchg
xor
outs
(bad)
arpl
cmc
and
dec
in
addr16
loop
aaa
add
push
xor
fsubr
push
push
mov
cmp
xchg
add
and
dec
test
sar
adc
outs
sti
adc
das
sub
push
jno
cs
and
stos
add
xor
mov
jae
fninit
aaa
and
or
addr16
adc
push
leave
daa
inc
pop
fimul
mov
jl
mov
test
mov
jnp
fiadd
sub
xchg
jae
test
arpl
lods
mov
int3
jmp
ins
test
xor
cmps
(bad)
fs
leave
lar
leave
div
sti
xchg
cli
mov
pop
sub
movs
push
stos
xchg
or
imul
adc
(bad)
push
aam
bswap
frstor
and
ins
jne
les
adc
sbb
pushf
mov
not
retf
or
jecxz
inc
push
fisub
inc
pusha
xchg
(bad)
pop
bnd
mov
das
fadd
in
add
mov
mov
pop
rcl
test
(bad)
inc
jns
xchg
jmp
jb
adc
retf
ins
std
sub
push
mov
je
sbb
and
dec
adc
into
xchg
xchg
aas
adc
nop
xchg
dec
adc
jo
push
das
ror
adc
ins
ss
cmp
fcos
cmps
or
xchg
sbb
lahf
mov
in
(bad)
mov
out
cs
in
dec
xor
iret
inc
mov
push
mov
adc
popa
(bad)
or
hlt
nop
xor
(bad)
ss
mov
or
push
sbb
inc
pushf
retf
xchg
loop
adc
ins
dec
dec
sbb
fnsave
or
cwde
nop
push
lahf
iret
xchg
ret
dec
js
iret
dec
xor
push
in
push
mov
cwde
inc
aaa
push
or
xlat
push
sbb
repz
jmp
mov
test
sbb
xchg
loopne
jns
out
test
fisubr
shl
sbb
jns
fld
into
pop
test
sbb
ins
push
xor
jmp
add
mov
imul
cmps
ds
push
ja
setns
dec
jmp
mov
push
scas
sbb
movs
xchg
mov
and
mov
or
and
gs
push
rcl
hlt
leave
or
lock
lock
rcr
dec
xor
xor
or
lahf
add
iret
outs
sub
and
adc
inc
xchg
out
or
(bad)
push
scas
lds
mov
or
mov
pop
outs
mov
aam
xchg
shld
es
repz
and
pop
sbb
in
and
add
cdq
mov
xchg
scas
mov
and
jl
or
out
inc
ret
mov
mov
aad
nop
mov
out
cmp
fs
ret
pop
shl
dec
pop
out
xor
imul
fsubp
jmp
xchg
xor
push
es
adc
xor
pop
push
jl
xor
pop
arpl
xor
jp
mov
jge
cmps
pop
or
(bad)
push
xor
rcl
cdq
sar
(bad)
int3
div
sbb
daa
xor
fwait
sub
mov
jbe
shr
add
imul
out
xor
jp
ret
and
test
frstor
(bad)
dec
lahf
push
movs
mov
out
xor
push
jg
mov
(bad)
fnstsw
jmp
mov
rol
jns
aaa
cli
mov
stc
movs
xchg
push
test
adc
aad
mov
add
test
dec
fiadd
pusha
repnz
ss
stos
xchg
imul
out
jo
int
and
rcl
xchg
mov
test
lods
jle
cdq
scas
or
retf
sub
(bad)
add
and
pop
iret
dec
jl
inc
mov
fidivr
adc
cmp
shl
jecxz
call
dec
mov
inc
int3
in
sbb
xor
xchg
fisub
pushf
rcr
sbb
adc
movs
xchg
retf
fstp
inc
jnp
sahf
and
ret
fadd
scas
cmp
mov
loopne
jno
fcom
jmp
sbb
sub
push
jl
xchg
dec
and
and
mov
mov
jno
loopne
(bad)
adc
xor
repnz
pop
pop
inc
invd
loope
inc
in
jle
xchg
addr16
jge
cmp
and
pop
cdq
push
and
mov
jo
or
mov
int3
imul
or
or
and
mov
(bad)
in
cmp
mov
add
adc
xchg
xchg
mov
lahf
push
daa
mov
mov
mov
dec
mov
xor
fstp
fnstsw
es
push
in
adc
outs
xchg
scas
inc
dec
sbb
xchg
and
inc
mov
bound
repz
push
sub
add
and
sbb
dec
lock
cmps
jno
mov
je
neg
shl
and
pop
stos
fst
mov
cmp
aam
mov
pop
pop
call
xchg
cwde
rol
push
push
int
enter
jns
pop
movs
into
sbb
jle
jp
je
out
adc
movs
jmp
dec
ret
scas
pop
mov
push
scas
(bad)
out
shr
in
aad
cdq
int
sbb
sbb
pop
je
enter
lahf
xlat
push
pop
in
mov
stos
inc
loope
(bad)
pusha
fcmovnu
mov
adc
cmps
fwait
and
lea
xchg
(bad)
mov
pop
pop
pop
mov
mov
mov
stc
sbb
movs
add
sbb
adc
inc
pop
arpl
dec
cmp
sti
cld
jae
les
add
add
mov
cmp
int
add
jae
mov
mov
and
fistp
lahf
mov
mov
shl
out
ret
mov
pop
mov
mov
sbb
fwait
mov
loop
and
popa
add
ins
sahf
arpl
stos
(bad)
popa
xchg
(bad)
imul
aad
cld
push
add
fcom
retf
mov
(bad)
in
dec
mov
ja
(bad)
lods
in
jmp
adc
inc
jmp
sti
test
sub
shl
in
xor
shr
out
pop
cmps
mov
sub
je
movs
cmp
xor
inc
js
fsub
ins
adc
adc
rcl
fidivr
mov
div
jl
lods
pop
dec
pusha
push
inc
jns
std
ror
add
lahf
adc
imul
lea
ror
dec
(bad)
shr
loope
scas
pop
in
sbb
lods
cmp
ja
imul
pop
xchg
sub
icebp
out
clc
fs
xor
fimul
pop
mov
ror
fsubr
adc
sbb
rcl
push
or
sahf
arpl
mov
inc
dec
adc
sub
stos
mov
sahf
outs
adc
daa
mov
ins
jg
test
push
mov
push
pushf
pop
sbb
mov
jmp
xchg
dec
ror
mov
push
xor
xchg
pop
and
pminsw
pop
sbb
xor
ins
test
lock
mov
inc
adc
shl
test
pop
cmp
adc
in
and
xchg
xchg
cmp
rol
xchg
cmps
lock
xlat
cdq
dec
pop
dec
scas
mov
and
sbb
push
mov
aam
loope
jno
inc
and
jo
in
sbb
test
dec
(bad)
jmp
(bad)
test
cmp
movs
cmp
mov
jmp
(bad)
xchg
cmps
das
sbb
mov
dec
pop
jb
inc
pop
or
pop
stos
sub
int
fdiv
cmp
mov
(bad)
mov
add
icebp
push
sub
fiadd
mov
sub
popf
xchg
mov
std
adc
push
add
fbld
inc
and
cmp
mov
(bad)
mov
popf
inc
push
mov
aad
loope
mov
mov
and
in
scas
and
ss
call
cmps
mov
xchg
stc
sbb
mov
pusha
sbb
push
retf
sti
pop
dec
out
(bad)
fisub
add
(bad)
and
out
repnz
inc
cmp
sub
inc
xchg
lahf
sbb
mov
adc
stc
mov
aaa
test
leave
xchg
loopne
hlt
fild
fsubr
stc
mov
imul
mov
inc
ja
daa
int
and
lock
ins
icebp
mov
js
sbb
push
sub
mov
jb
ret
or
ins
and
xchg
xor
ins
push
jno
pop
push
push
mov
mov
stos
sub
mov
ret
and
fcmovne
pusha
(bad)
bound
xchg
sub
les
mov
add
arpl
mov
gs
pop
push
sbb
cmp
dec
aam
test
ret
fwait
enter
push
ss
mov
into
std
fld
or
dec
(bad)
lea
push
inc
mov
ins
mov
mov
ins
mov
jae
scas
mov
loopne
mov
adc
push
or
mov
fdiv
mov
mov
dec
imul
scas
loop
xchg
adc
fistp
rol
lahf
push
mov
retf
call
(bad)
out
mov
lods
jnp
mov
mov
adc
test
or
jbe
std
xor
je
jg
js
pop
xchg
movs
call
push
add
mov
bound
ja
cmc
cmps
in
ss
(bad)
shl
jp
dec
pop
out
or
mov
or
das
repnz
lahf
aaa
dec
mov
mov
loope
push
mov
lods
nop
cmp
or
sub
mov
lods
fild
sub
iret
jg
daa
les
xchg
and
sub
or
xchg
mov
fdivr
pop
lock
fwait
div
inc
pop
xchg
xchg
push
mov
or
clc
ror
aad
cmps
inc
cs
adc
or
and
lock
and
and
pop
mov
test
push
movs
mov
push
test
and
push
dec
cmp
out
cwde
xchg
popa
ret
ins
fimul
mov
popf
stos
cmp
and
ret
jg
popf
inc
mov
loope
into
xor
test
inc
and
(bad)
lods
jne
lds
mov
scas
repz
xchg
ffreep
mul
inc
cmps
jg
nop
adc
addr16
daa
sahf
cwde
cmps
out
js
push
jne
mov
(bad)
sub
cld
(bad)
dec
and
icebp
leave
adc
cmps
daa
pmullw
imul
(bad)
mov
popa
jmp
cmp
fs
sub
and
dec
push
sbb
pusha
pop
inc
push
sub
mov
std
sub
sub
cmp
ss
xchg
scas
nop
mov
or
lods
jmp
lidtd
loopne
(bad)
int
ror
push
(bad)
mov
adc
int
push
xor
outs
pop
cmp
dec
pop
aas
pop
stos
or
pop
fnstcw
cld
test
mov
sti
pop
das
push
fimul
inc
loope
outs
mov
push
fwait
jnp
enter
les
sti
dec
adc
and
or
icebp
jmp
dec
xchg
fsub
and
mov
in
inc
and
xchg
loope
push
dec
out
out
adc
mov
mov
sub
cld
jmp
xchg
add
mov
repz
mov
push
out
or
mov
fldcw
jl
cmps
test
fisttp
mov
pop
in
add
push
jb
and
sbb
or
mov
jp
cld
ds
jnp
div
in
and
inc
adc
fist
sub
mov
cmps
mov
aaa
dec
popa
mov
cmp
je
(bad)
pop
bound
addr16
popa
je
(bad)
pop
jle
mov
enter
pop
pop
inc
sahf
adc
xchg
xchg
(bad)
push
je
call
pop
cld
fdivr
popa
enter
mov
cli
mov
sub
mov
loop
mov
pop
or
add
dec
loopne
ss
add
jno
loopne
ret
gs
les
je
mov
cld
and
nop
aam
jne
xchg
inc
inc
shl
mov
outs
fnstsw
cmps
sahf
in
inc
cmc
fisubr
rcl
(bad)
cmp
mov
shl
ja
(bad)
in
cmc
test
push
jo
int3
bound
nop
or
xor
imul
and
gs
out
xor
cmp
ds
jnp
scas
add
mov
push
clc
(bad)
pusha
fist
retf
out
xor
imul
push
or
call
mov
xchg
aad
sub
xchg
push
ins
xchg
stos
scas
clc
stos
jb
jmp
xlat
imul
in
cmp
xor
jae
mov
mov
shl
inc
mov
or
and
and
leave
mov
out
dec
add
add
jae
adc
lds
dec
in
dec
into
jl
push
std
into
or
pop
cwde
jl
loop
push
push
sub
adc
mov
das
(bad)
aam
cmp
and
or
rdmsr
mov
mov
adc
mov
jp
or
cmp
xor
leave
scas
and
mov
div
xor
adc
retf
sub
mov
jno
mov
call
and
lock
xchg
call
jne
inc
shr
and
imul
int3
in
inc
xchg
clc
xchg
push
neg
fild
mov
lea
sub
repnz
ret
cdq
arpl
retf
cmps
inc
movs
sbb
pop
pusha
and
sbb
test
adc
mov
aas
aas
sub
mov
sbb
arpl
pop
ret
je
repnz
ja
pop
sub
stos
pop
out
test
xchg
sub
jecxz
xor
fidiv
call
fwait
sbb
push
push
add
stc
push
inc
bnd
xchg
mov
mov
out
mov
fcmovu
xchg
hlt
adc
inc
test
dec
out
mov
fmul
mov
les
or
cmc
and
xor
cdq
jmp
sub
shr
loopne
ds
inc
ins
gs
test
cmp
mov
push
push
ret
jl
aaa
out
ja
mov
inc
movs
ja
push
stos
in
inc
xchg
xor
and
out
(bad)
sti
pop
push
and
pop
jne
cld
gs
mov
loopne
mov
enter
lods
rol
sar
(bad)
add
jg
imul
mov
push
das
adc
mov
(bad)
das
push
and
les
loop
jns
fmul
cli
and
cmp
ins
xor
idiv
push
call
cmp
sbb
cdq
aaa
push
fs
and
lea
xchg
mov
mov
scas
mov
mov
ret
sbb
add
and
xor
retf
push
sbb
(bad)
lods
fs
mov
test
scas
inc
lds
sar
push
xchg
leave
ret
retf
pop
sub
or
std
sub
mov
aas
scas
addr16
loope
loop
cmp
cwde
cmp
adc
sbb
xor
enter
sub
xor
daa
pushf
xor
mov
pop
or
aad
and
and
hlt
or
adc
dec
or
mov
mov
fs
cs
dec
mov
sbb
lock
aam
fmul
lds
enter
and
(bad)
js
ret
mov
push
jl
pop
(bad)
in
in
and
imul
jmp
mov
xchg
loope
xchg
(bad)
imul
(bad)
enter
ret
xor
xchg
out
jl
addr16
sar
push
dec
jne
push
popa
hlt
fucomi
fld
test
jae
lea
or
(bad)
mov
mov
xchg
fwait
movs
sar
(bad)
pop
sar
movs
add
and
and
push
jmp
scas
(bad)
pop
and
push
jbe
ss
out
int3
fstp
fist
adc
adc
jecxz
mov
xchg
ficom
dec
inc
frstor
mov
xor
xor
sar
jge
jbe
in
xchg
icebp
ror
in
js
sbb
movs
(bad)
pop
je
or
cmp
or
(bad)
aad
dec
adc
jnp
outs
lea
dec
gs
ja
xchg
push
jl
xchg
cli
pop
loope
cld
std
imul
jmp
mov
inc
ds
dec
mov
jl
xchg
sbb
(bad)
xlat
(bad)
jge
imul
sbb
xchg
sbb
pop
repnz
pop
sti
cmc
icebp
push
aam
ins
mov
xor
es
push
adc
stc
or
jbe
ins
gs
iret
mov
(bad)
out
in
aaa
jmp
pop
(bad)
push
int
pop
dec
mov
cmps
fwait
sbb
rcr
mov
xchg
test
and
pop
mov
add
pushf
hlt
xor
or
or
inc
ins
arpl
jmp
mov
jecxz
mov
mov
fadd
push
adc
sahf
enter
or
pop
add
jne
les
and
cmp
mov
ja
mov
call
add
adc
adc
jecxz
mov
adc
mov
int3
sub
sahf
rcr
cmps
je
xchg
js
jecxz
fs
aam
add
int
adc
push
push
mov
das
inc
jg
ins
push
mov
cmc
xchg
and
out
mov
fstp
out
bound
pop
inc
xor
xchg
jo
sbb
or
nop
int
mov
push
sub
jle
hlt
out
lds
xor
mov
fidiv
cmc
ret
push
dec
stos
cmps
out
jnp
retf
jle
cmp
lods
jecxz
bound
adc
pop
(bad)
push
xchg
jmp
das
ret
jnp
mov
outs
pop
adc
(bad)
dec
dec
outs
test
out
aas
push
fwait
cli
aaa
xchg
cmp
or
mov
sahf
ins
scas
retf
retf
mov
push
es
sti
leave
pop
rol
cmps
mov
xor
sub
jl
cmc
inc
adc
jns
lea
in
add
sbb
int3
adc
aaa
xlat
pop
push
cdq
sub
lods
mov
inc
dec
js
dec
mov
sbb
jmp
stc
jbe
out
mov
stos
sbb
lods
cmp
scas
jnp
pop
fwait
dec
pop
test
lods
sbb
push
stos
aad
xchg
jno
adc
loope
cmp
adc
pop
and
aad
mov
push
mov
shl
dec
or
sub
daa
push
push
push
mov
test
xor
shl
adc
stos
ins
fcomip
adc
leave
jp
push
mov
lea
dec
sbb
push
inc
mov
loop
sbb
xor
stc
jb
cwde
shl
cwde
(bad)
push
lds
les
xchg
mov
leave
in
popa
push
sub
movmskps
dec
loop
mov
ds
cmps
mov
ror
fnop
fstp
mov
xor
xlat
sub
mov
mov
cmp
fisttp
adc
cmp
sub
inc
cmps
cdq
scas
xchg
test
fldcw
pop
push
movs
cmp
or
not
fdivr
movs
pop
pop
mov
rcr
mov
inc
push
and
(bad)
stc
ss
jmp
hlt
pusha
and
mov
call
sub
sub
arpl
push
lods
mov
mov
push
in
sbb
idiv
aam
dec
xchg
ins
pop
and
xor
nop
outs
add
mov
sub
mov
repz
adc
jmp
or
push
sub
xor
(bad)
and
gs
add
(bad)
fisttp
cmp
or
cmp
jg
dec
cmp
and
xor
cmp
pop
jmp
push
test
outs
data16
push
(bad)
and
aas
mov
cmc
dec
or
or
aad
dec
inc
sti
ja
loopne
or
and
daa
rdpmc
loope
cmc
pop
cmps
loope
retf
pop
es
jbe
mov
fsub
mov
add
ror
mov
out
call
pop
adc
in
inc
sbb
data16
add
ror
(bad)
mov
repz
std
push
mov
push
fsubr
jmp
gs
shr
adc
outs
mov
dec
test
cmp
sub
retf
dec
xor
jmp
mov
fnsave
pop
ss
xchg
push
cmp
bound
enter
nop
pop
ins
je
pop
ror
jno
fadd
xor
fwait
mov
xor
pop
mov
ins
pop
xor
ret
out
rcr
nop
pop
(bad)
cmps
popf
mov
xchg
in
fsub
pop
das
push
scas
out
in
out
cmp
inc
xor
sub
cli
mov
ret
es
cs
mov
pusha
psubusb
jp
outs
stos
adc
mov
push
aaa
jno
repnz
push
xor
retfw
int
or
or
jmp
fs
popf
push
popa
dec
cmp
jle
rol
sbb
stc
in
shl
xor
xchg
div
sbb
dec
ret
(bad)
pop
mov
(bad)
mov
stos
gs
iret
call
xor
jmp
jbe
rcr
call
pop
gs
adc
(bad)
sub
in
mov
add
mov
jecxz
out
sub
repz
in
mov
scas
jb
push
call
push
push
aas
(bad)
addr16
test
sub
xor
cli
xchg
cli
xor
cmp
shl
dec
dec
mov
and
mov
sar
inc
mov
inc
dec
inc
xor
aad
cdq
sahf
outs
ret
xchg
hlt
xor
push
outs
dec
push
int3
and
pushf
xor
pop
sbb
or
in
sub
xor
sub
sub
inc
xchg
dec
dec
mov
adc
sub
out
push
mov
jp
adc
inc
xchg
lods
cmp
rcr
mov
xor
sub
retf
mov
add
jae
out
fwait
call
inc
loopne
dec
or
sub
pop
out
clc
addr16
push
sbb
and
push
mov
push
call
jnp
cmp
mov
pop
push
aam
imul
call
xor
mov
cld
(bad)
ins
ja
shr
fcomp
pop
in
adc
mov
sahf
fwait
and
pusha
and
xor
mov
mov
cmp
sub
repnz
ins
jl
les
gs
jnp
imul
xor
addr16
sbb
xor
cmc
jno
cmp
inc
js
and
xlat
jbe
inc
pop
mov
and
sub
cmp
outs
and
call
jmp
ret
test
call
lds
outs
xor
clc
push
add
cmp
xchg
jae
pop
lock
(bad)
out
push
pusha
addr16
clc
jne
jmp
sbb
inc
pop
imul
xor
inc
mov
pop
clc
scas
fdivr
jbe
pop
push
sub
(bad)
fcom
dec
repnz
repnz
stos
outs
push
out
adc
stc
inc
lds
mov
sbb
lahf
sbb
jo
sbb
and
test
aad
mul
les
adc
fadd
loope
xchg
mov
mov
sbb
sbb
aaa
dec
pop
fs
rol
push
push
xchg
lea
imul
fld
fwait
out
test
lods
push
inc
add
push
in
neg
pushf
inc
lods
aad
movs
xchg
lds
add
repz
nop
imul
mov
adc
lea
neg
sub
sbb
out
xchg
and
repnz
lock
loope
mov
ficom
stos
or
enter
sar
pop
xor
test
sbb
mov
push
inc
daa
stos
aas
mov
out
pop
int3
cmp
or
inc
ror
cli
icebp
xchg
jns
push
clc
movs
daa
repz
xchg
push
clc
fsubrp
das
rcr
and
pop
adc
sub
lods
aas
mov
mov
scas
in
jb
not
jo
jmp
cs
pop
mov
sbb
repz
ret
push
inc
ins
stos
pop
sbb
std
loope
mov
jnp
and
sbb
sbb
jl
sub
sbb
add
ins
push
pop
sti
mov
xlat
lea
ins
int
inc
cmp
add
fdivr
frstor
or
stc
sti
jl
adc
(bad)
jnp
adc
cli
hlt
jmp
inc
or
push
rcl
je
jl
push
mov
fdiv
clc
jb
ds
mov
test
ds
cmp
inc
push
ss
ret
(bad)
cmp
xchg
xchg
mov
stos
or
stos
fimul
stc
push
test
mov
cmp
lods
jbe
add
jp
(bad)
in
xchg
popa
into
clc
pop
(bad)
cdq
test
pop
data16
mov
jno
rcr
jecxz
imul
movs
jle
clc
jns
mov
mov
adc
std
xchg
loopne
out
enter
sbb
sub
das
mov
xor
into
sti
cdq
jg
add
je
bound
cmp
das
jecxz
cli
lds
test
mov
ds
inc
nop
cmp
jnp
jns
cwde
dec
jmp
repz
and
add
in
pushf
xchg
pop
xor
gs
pop
xor
or
jae
test
lods
xor
pop
or
xchg
in
jecxz
jge
into
mov
fld
or
loop
pop
cmovb
cdq
ja
mov
pop
adc
ja
lds
pop
std
jno
int
fdivp
in
mov
lods
in
imul
aaa
sub
test
stc
push
lods
mov
not
enter
das
fld
mov
xor
int3
stos
or
cwde
mov
rol
push
jmp
or
not
sbb
xor
mov
or
pop
gs
jp
cmp
push
int
fld
in
xchg
movs
movs
pushf
in
dec
aam
push
pushf
push
cdq
stos
not
das
out
push
xchg
aad
div
movs
sti
cmps
imul
mov
pop
cmp
shl
xchg
cld
aad
mov
and
fsubr
sti
fbld
and
ds
cmc
fstp
imul
xor
fldcw
xor
sahf
hlt
(bad)
sbb
dec
in
add
mov
or
mov
sbb
and
push
addr16
ror
shr
mov
jno
and
je
dec
rcr
mov
stos
add
jl
test
lock
dec
mov
dec
in
not
jg
dec
ins
or
ds
or
dec
leave
mov
clc
mov
mov
fucomp
adc
push
xchg
cmp
in
fnstsw
cmp
xchg
data16
push
ret
int
imul
repnz
mov
daa
mov
pop
das
cmc
out
sbb
and
cmp
ss
inc
(bad)
mov
imul
jb
mov
jmp
xor
je
call
push
cmp
rcl
xchg
jge
ins
repz
loop
jnp
movs
pop
(bad)
sub
aam
lods
cld
movs
mov
or
lods
cmp
add
enter
push
sbb
shr
xchg
adc
push
inc
and
and
addr16
mov
aaa
ss
(bad)
stos
sub
nop
cmps
cmp
dec
pop
dec
cli
cdq
push
or
aaa
jne
clc
adc
jl
test
pop
xchg
aaa
inc
push
mov
mov
dec
mov
mov
rol
pop
sub
ins
push
ret
sbb
retf
ror
aam
(bad)
retf
ja
add
ret
mov
mov
dec
inc
mov
lahf
sbb
xchg
call
loop
inc
call
push
dec
mov
lds
mov
mov
test
adc
or
cld
bound
adc
jns
jb
pop
dec
es
repnz
pop
dec
cmp
sbb
mov
cli
push
sbb
sub
dec
not
test
mov
in
xor
cmp
repz
in
fwait
stos
out
cmp
xor
xor
aam
ins
jo
mov
loope
mov
call
ret
mov
sub
nop
sub
jp
push
push
aaa
rol
sar
jns
bound
mov
in
jmp
out
sti
pop
and
sar
iret
dec
aaa
lds
mov
xor
outs
pop
cmp
sti
int3
mov
pop
and
push
and
(bad)
sti
mov
dec
sbb
jnp
dec
dec
pop
je
retf
imul
dec
push
mov
sub
inc
and
sub
shr
sub
and
xor
ja
ret
shr
push
xor
fild
mov
sbb
ja
sub
lahf
out
adc
daa
cmp
ss
add
sbb
pushf
mov
cs
daa
push
jecxz
jb
mov
inc
xchg
fwait
pusha
std
neg
por
xor
(bad)
fdiv
les
(bad)
fist
or
stos
xchg
dec
and
fstp
pop
cmp
aad
push
pop
packsswb
ja
es
mov
dec
out
push
imul
aaa
cmp
or
mov
jae
mov
rol
cmp
push
sub
jbe
sahf
jg
pusha
mov
xor
jl
pusha
mov
test
xchg
push
popa
sub
out
and
repnz
call
fdivr
ds
cs
dec
mov
retf
add
fisubr
jne
sub
dec
dec
outs
(bad)
nop
stc
jns
fnstenv
or
xchg
xchg
(bad)
sub
push
mov
inc
lds
cmp
dec
jne
into
js
xchg
test
inc
pushf
mov
popa
fidiv
mov
and
dec
xor
jmp
daa
icebp
xchg
jg
xor
(bad)
sub
test
or
pop
mov
ret
push
jne
xchg
icebp
inc
in
dec
pop
and
out
cmp
cmc
push
xor
stos
stos
sbb
push
dec
ins
rcr
dec
loop
and
das
or
jg
cmp
lods
pop
mov
and
lock
dec
push
cmp
iret
call
retf
retf
ds
ror
fs
scas
scas
je
mov
xchg
les
scas
mul
loope
dec
push
test
jp
mov
push
mov
cmc
push
fstp
test
add
cmp
test
lahf
addr16
sti
pop
sbb
or
fisubr
xchg
add
push
pop
loope
mov
test
outs
sub
inc
mov
mov
mov
sub
dec
dec
icebp
js
retf
aam
mov
add
dec
mov
clc
add
sub
push
stc
lods
std
addr16
test
xchg
nop
mov
repz
(bad)
(bad)
jbe
fistp
(bad)
jg
push
cmp
leave
inc
popa
sti
mov
mov
sbb
ror
scas
(bad)
stos
xor
and
sbb
ss
mov
jnp
sub
or
inc
inc
jo
jns
mov
push
sub
ja
push
ret
mov
enter
push
jle
adc
pop
mov
pop
dec
scas
push
mov
mov
pop
inc
out
adc
cmp
fdivr
lock
cmp
je
movs
loop
pop
mov
ror
mov
cmp
pop
mov
cs
push
xor
fcmove
fstp
daa
sar
xlat
jmp
cld
add
pop
xchg
mov
mov
jo
pop
push
sahf
sub
pop
add
pop
imul
test
adc
stc
lods
test
out
or
cld
lods
psadbw
or
fadd
cmp
cmp
adc
mov
xchg
add
cmp
mov
mov
jle
sub
sub
xchg
sub
cmp
sahf
adc
sbb
outs
mov
stc
mov
pop
and
cli
xor
popf
daa
mov
outs
xchg
xchg
in
pop
mov
bound
jne
(bad)
imul
je
nop
jg
mov
imul
fldlg2
sbb
jp
je
(bad)
rcr
cdq
aam
scas
jge
pop
push
ffree
cs
sub
add
mov
cmp
imul
jp
mov
sub
fiadd
test
aam
mov
cdq
(bad)
cmp
mov
in
jno
ss
xor
xor
or
push
or
int3
outs
lods
pop
cli
pop
lahf
clc
xor
lods
jb
sbb
xchg
jmp
sbb
and
dec
cmp
loop
repz
inc
push
jmp
arpl
xchg
fwait
std
movs
xor
mov
retf
dec
push
adc
sar
shl
and
mov
scas
dec
out
mov
hlt
fimul
push
inc
inc
pop
mov
scas
leave
inc
push
xchg
jne
mov
loopne
(bad)
jl
ja
xchg
int3
mov
jae
loope
mov
scas
(bad)
fidiv
addr16
xor
jb
pop
repz
xchg
mov
cwde
jge
pop
sub
push
push
mov
ins
cmp
retf
movs
xchg
mov
add
push
sub
sti
sbb
xor
loope
aam
call
sbb
xlat
fs
and
out
mov
(bad)
stc
cli
mov
ja
loop
push
js
pop
mov
lds
jmp
lahf
or
jbe
les
jb
cwde
inc
mov
test
push
cmp
inc
enter
xchg
xchg
hlt
dec
std
push
popf
fwait
loope
push
les
add
pop
lahf
push
std
jp
test
cs
out
aam
mov
push
ffreep
adc
jle
not
adc
xchg
and
push
lea
call
fs
jae
dec
enter
cli
into
rcl
jns
jbe
push
inc
aas
push
fsubr
mov
pop
pop
mov
scas
mov
sub
jb
cmps
leave
mov
pmovmskb
jmp
inc
int
mov
(bad)
sub
jb
xchg
data16
fild
inc
scas
or
dec
fwait
sub
aaa
push
xlat
and
add
loopne
mov
adc
bound
ins
push
lea
test
cwde
mov
inc
cdq
ds
retf
hlt
mov
sub
adc
sbb
mov
xor
dec
loope
jne
add
nop
imul
fist
inc
xor
dec
xchg
rol
imul
test
fadd
nop
enter
cmp
mov
ret
sbb
jl
clc
mov
add
sahf
sar
sub
mov
mov
test
mov
xchg
xor
sbb
or
rol
(bad)
ds
aam
loop
add
iret
ins
scas
sbb
rol
fdiv
loop
or
lock
mov
sahf
sti
sbb
loopne
arpl
imul
fwait
adc
aaa
push
dec
mov
pop
mov
imul
cmp
dec
iret
inc
push
and
std
mov
dec
push
mov
shl
pop
cmp
push
dec
bound
ins
in
and
push
fwait
cmps
rcl
sbb
mov
call
mov
cwde
inc
js
mov
rcl
dec
and
aaa
and
enter
mov
retf
cmps
aam
jbe
movs
push
xchg
or
jge
sbb
sub
adc
sub
scas
les
shl
add
push
icebp
push
jg
call
data16
mov
mov
add
(bad)
sar
or
dec
jb
pop
dec
inc
cdq
sub
dec
jmp
dec
mov
pmuludq
mov
adc
sub
std
imul
and
aaa
xchg
xchg
xor
dec
aaa
push
sub
inc
lds
test
xchg
stos
push
dec
pop
stc
mov
mov
mov
push
in
and
push
hlt
push
push
fwait
cmp
dec
pop
stos
sti
out
mov
mov
sub
aam
push
ret
xchg
fdiv
xor
pusha
das
dec
mov
jbe
pop
pop
ins
cmp
cmp
push
loope
cmp
dec
jp
push
pop
cmc
dec
jb
add
mov
movs
dec
inc
add
pop
push
out
ret
ret
sub
push
and
fidiv
scas
popf
jb
ins
sub
lods
js
and
jge
fsubr
mov
mov
in
xor
jmp
int3
mov
popa
cmps
aaa
xchg
lds
(bad)
sub
test
jb
dec
call
mov
mov
sbb
stc
or
mov
test
jecxz
ficom
into
idiv
dec
adc
addr16
pop
lahf
mov
sbb
jle
or
jmp
daa
loope
(bad)
scas
sbb
mov
int3
xor
lock
cmp
imul
cld
(bad)
retf
mov
adc
outs
xchg
mov
inc
add
or
movhps
push
mov
iret
sub
pop
popa
jge
and
dec
stc
das
ret
inc
(bad)
jne
xor
push
xchg
leave
(bad)
ret
repz
stos
sti
pushf
jmp
add
jp
rcl
mov
leave
pop
dec
in
jmp
dec
adc
icebp
cmc
neg
sub
sub
enter
popf
jmp
js
xchg
mov
push
xor
mov
rcr
xchg
retf
daa
je
mov
stc
inc
push
popf
mov
retf
fcom
sub
pop
mov
retf
dec
mov
and
loopne
repz
pop
add
sub
shr
ret
pop
int
cs
push
fcmove
cmp
fwait
ja
rol
stc
je
cmp
popf
test
pushw
shl
es
push
push
xor
jecxz
in
sub
pop
add
pop
adc
leave
cmc
xchg
(bad)
adc
js
pushf
aas
mov
cmps
cmp
pusha
adc
daa
cmps
aam
in
ficom
inc
sbb
sbb
mov
jmp
mov
call
mov
cld
arpl
pop
cli
repnz
int
dec
mov
mov
das
outs
ins
xchg
push
in
push
push
xor
cmps
adc
jmp
bound
dec
mov
fs
and
into
sub
mov
and
int
adc
sbb
pop
fwait
add
mov
call
push
pop
inc
shr
add
pop
fcomp
sub
or
sub
or
cmc
loope
cld
movs
jne
out
rcl
sbb
push
dec
cmp
xor
fsub
or
pop
leave
adc
aam
and
inc
inc
adc
jne
gs
fwait
jbe
out
jge
push
nop
cs
ffreep
inc
mov
(bad)
or
mov
and
adc
push
(bad)
or
stos
in
inc
imul
fyl2xp1
xor
xor
and
test
aaa
dec
jae
and
pusha
(bad)
xlat
fwait
into
mov
add
sub
repnz
dec
cli
ds
cmp
fs
in
add
pop
xor
(bad)
in
jno
xchg
enter
add
push
mov
or
scas
jb
cs
mov
dec
and
jge
int3
sahf
aad
(bad)
pop
dec
and
addr16
xchg
push
cmp
sub
inc
fisubr
shl
mov
mov
and
mov
out
xchg
mov
imul
int
push
push
xlat
sar
cmp
mov
ja
mov
call
xlat
fadd
adc
dec
or
or
(bad)
ins
imul
add
lock
clc
scas
cmp
call
lea
ret
mov
arpl
xor
mov
lods
mov
aad
out
push
xchg
imul
add
mov
(bad)
mov
hlt
xchg
in
ror
jae
push
stos
inc
pushf
inc
iret
jb
lods
lds
push
inc
aad
sbb
xchg
sbb
add
jmp
mov
xlat
xchg
popa
sbb
mov
pmaddwd
fucomp
in
imul
in
int3
push
xor
xchg
rcl
and
mov
mov
push
fsubp
bound
fisub
sbb
movs
and
popf
popf
inc
jnp
pop
cmp
xchg
or
push
jne
(bad)
mov
ja
and
movs
push
cli
jmp
adc
sahf
cwde
aaa
stc
repz
loopne
ss
adc
xchg
pushf
out
dec
sti
xchg
xchg
pop
mov
in
cwde
dec
adc
cmp
mov
add
push
shl
push
test
adc
lods
(bad)
add
jnp
retf
popf
fcomp
dec
fbld
jl
aaa
dec
mov
mov
call
js
add
hlt
stc
adc
movs
pop
mov
xchg
fst
pop
mov
xor
jl
dec
mov
add
push
sbb
ss
jg
or
not
mov
and
push
ins
mov
je
(bad)
dec
xchg
xchg
push
mov
in
les
ins
and
stos
inc
mul
cli
or
stos
cmc
fdivr
jmp
or
push
neg
ror
fnsave
fsub
and
shr
cdq
sub
imul
cmps
mov
jae
inc
rdtsc
leave
pop
sub
pop
out
cmc
clc
sub
push
fisub
test
and
jo
sti
leave
jl
cwde
add
test
jne
xchg
adc
adc
test
inc
cwde
hlt
das
pop
out
fst
(bad)
sahf
inc
ins
or
dec
xchg
push
rcl
test
fwait
xor
jne
pop
add
shl
fwait
jnp
inc
sbb
fadd
mov
adc
sub
repnz
pop
jae
retf
sub
js
jb
test
into
arpl
add
adc
cli
mov
adc
sub
sti
movs
jle
hlt
lea
push
(bad)
lea
add
xor
adc
sar
data16
int
lock
fadd
fdivr
shl
dec
(bad)
ds
or
adc
xchg
add
xchg
dec
add
lea
retf
imul
lods
fwait
add
xchg
push
mov
mov
dec
dec
mov
ret
arpl
sbb
(bad)
fnstcw
clc
xor
idiv
aaa
test
cmps
adc
dec
in
mov
jbe
inc
mov
leave
pop
jg
out
push
test
jns
xor
dec
fst
mov
test
repnz
mov
xlat
aaa
push
cmps
loope
jmp
push
enter
in
adc
loop
mov
rcr
gs
jno
test
sbb
(bad)
call
dec
cmc
mov
leavew
pop
xlat
pop
dec
mov
mov
pop
cmps
jo
push
add
loop
push
in
mov
push
scas
mov
iret
imul
and
inc
cmps
mov
call
stos
fcmovb
jge
pusha
div
pop
pop
and
mov
add
cwde
sub
push
js
out
jle
push
mov
daa
push
lods
fnsave
mov
scas
push
out
or
dec
icebp
sbb
sbb
adc
adc
jl
aaa
jecxz
mov
dec
pop
nop
loope
popf
sbb
cmp
jae
pop
mov
imul
sub
pusha
repnz
int3
push
stc
std
aaa
cwde
outs
mov
dec
test
push
(bad)
outs
sbb
jl
sbb
mov
jmp
add
mov
(bad)
cdq
lea
stc
pop
jg
inc
mov
in
sub
dec
mov
mov
outs
mov
(bad)
mov
sub
or
xor
jp
sub
and
repnz
mov
mov
cld
lahf
enter
add
push
mov
pusha
cmc
sti
jmp
ret
in
push
jb
fcom
or
mov
cmp
(bad)
retf
out
cdq
clc
add
adc
and
adc
pop
jecxz
jo
retf
jo
ror
(bad)
in
mov
and
fnstcw
std
out
enter
lods
iret
inc
ret
xor
inc
(bad)
jmp
cwde
mov
fmul
(bad)
xor
mov
enter
pop
inc
xchg
(bad)
fst
mov
lds
je
push
mov
lods
stc
cmp
and
in
mov
add
sbb
pop
call
push
push
jbe
mov
xchg
xor
push
sbb
fist
cmc
jbe
(bad)
fcomip
xor
mov
xor
mov
mov
jmp
pusha
arpl
jnp
jno
add
add
sub
mov
xor
ins
(bad)
pop
add
push
jo
inc
das
add
loop
test
fist
adc
fisttp
nop
dec
jg
int
sub
icebp
in
and
inc
(bad)
mov
jmp
dec
ror
loope
sub
push
cmp
and
cdq
add
repz
jp
jnp
repnz
sub
xor
mov
lods
outs
add
jbe
jns
pop
ficomp
adc
scas
xlat
xchg
aas
mov
sbb
dec
mov
xor
mov
loopne
mov
sbb
jb
cmp
xchg
or
imul
mov
jp
or
xchg
test
rcr
jge
or
push
push
arpl
xchg
push
or
mov
and
inc
aad
sub
pop
arpl
cs
lahf
mov
dec
jmp
jno
(bad)
out
(bad)
fistp
pusha
jge
adc
adc
pop
jmp
inc
into
cmp
pusha
mov
outs
add
inc
stos
push
leave
and
xchg
mov
sbb
push
dec
xchg
fidiv
adc
(bad)
rol
test
out
mov
xchg
jns
sub
adc
xchg
xchg
xchg
sub
xor
(bad)
inc
enter
jb
adc
inc
or
cwde
or
mov
adc
push
enter
test
aam
fcomp
add
xchg
mov
adc
inc
or
retf
iret
dec
fisttp
sar
add
and
sub
sub
cmps
les
mov
inc
mov
mov
mov
arpl
mov
pushf
dec
fisubr
cmp
xor
push
aam
xor
je
dec
mov
sub
pop
adc
retf
mov
movs
mov
mov
cs
outs
pop
pop
ins
(bad)
ja
dec
arpl
lahf
jae
mov
cmps
mov
arpl
mov
rol
jo
jne
addr16
or
movs
xchg
sub
mov
loopne
fwait
(bad)
cli
icebp
out
fsubr
out
mov
mov
lahf
in
aas
lods
inc
out
icebp
aad
xor
xchg
cmp
popf
sub
sub
cmp
cmp
adc
cwde
out
xor
mov
pop
dec
cmpps
test
mov
loope
inc
xor
out
(bad)
das
push
jecxz
lock
ss
mov
mov
pop
push
xlat
xor
fistp
dec
pop
jno
add
js
mov
outs
xchg
pushf
push
push
and
lock
test
cmp
jnp
adc
sub
cmp
scas
or
sar
cmp
jnp
cld
push
mov
je
sub
(bad)
in
outs
ja
jl
push
dec
cmps
mov
xchg
sbb
dec
fild
push
cli
ret
sbb
das
mov
sub
in
fsincos
and
out
add
les
jb
aaa
adc
sub
and
(bad)
sub
xchg
imul
jg
cs
clc
cmp
or
add
cmp
out
pop
jb
adc
loopne
push
add
push
fild
leave
and
lds
dec
add
test
sbb
dec
mov
(bad)
cmps
pop
and
int
mov
(bad)
push
(bad)
push
fstp
adc
xchg
int3
fpatan
mov
imul
retf
movs
mov
cmp
lds
loope
sub
sub
out
and
adc
lahf
dec
repnz
and
retf
mov
dec
xchg
cmc
add
mov
jno
fs
or
mov
mov
add
cdq
cmps
mov
bnd
lock
imul
push
leave
xor
out
lahf
cwde
xchg
mov
jg
pop
fcomp
addr16
xchg
stos
imul
call
addr16
fadd
(bad)
mov
adc
add
add
xlat
cmp
sbb
mov
inc
sbb
popa
xchg
inc
rcl
not
and
daa
jb
xor
xchg
les
aaa
pop
mov
retf
mov
or
jmp
adc
dec
rol
daa
outs
xchg
mov
xlat
(bad)
mov
fsubr
or
loopne
in
adc
and
jae
xchg
adc
pop
pop
retf
jp
inc
and
movs
and
xchg
jbe
inc
and
(bad)
or
test
pushf
outs
movs
scas
sub
cmp
aas
bound
shr
push
adc
scas
adc
sub
push
nop
add
imul
lahf
inc
pop
jmp
dec
iret
add
push
das
out
daa
and
stos
ins
lods
sbb
or
in
aam
lods
cld
shr
or
mov
icebp
stos
adc
ins
lods
sti
loop
lahf
test
fucom
leave
les
dec
pop
inc
cmps
fwait
jno
cmp
pop
ins
(bad)
sti
iret
cmp
mov
scas
out
or
mov
adc
fwait
mov
push
dec
adc
cmp
sub
inc
inc
ja
xor
mov
jl
rcr
addr16
ret
int
int3
add
push
movs
push
stos
fimul
mov
mov
aas
cdq
adc
shl
push
mov
ins
sbb
stos
xlat
pop
sub
and
jns
mov
pop
pop
(bad)
sub
add
loope
inc
jg
xchg
jb
or
das
and
mov
dec
pop
sub
shl
in
xchg
add
dec
cmc
ins
rcl
cmp
imul
cmp
fucomi
mov
mov
mov
xchg
lahf
cmp
push
sub
fiadd
adc
pop
ins
sar
mov
pop
loopne
sbb
mov
jecxz
add
jbe
sahf
in
push
nop
inc
in
fstp
je
data16
dec
xchg
rcr
outs
or
mov
fidiv
sbb
es
cwde
mov
cmps
xor
clc
jnp
add
sar
int3
test
add
adc
cmp
mov
jmp
or
enter
sbb
cmc
cmp
cs
mov
adc
loope
pop
movs
cmp
loopne
pop
fisttp
mov
mov
mov
sub
dec
cmp
add
xchg
jb
mov
cmc
mov
ret
sbb
(bad)
xchg
jl
cmp
mov
ret
ds
xor
xor
pusha
es
(bad)
jmp
repz
(bad)
mov
push
xor
data16
movs
jns
sub
jb
jg
test
(bad)
sub
inc
cmp
mov
mov
cmp
mov
sub
dec
mov
or
adc
retf
clc
leave
mov
fwait
repz
rcl
fadd
dec
in
fisub
imul
stos
bound
adc
mov
mov
aaa
test
fcomp
or
add
sbb
pop
ds
xor
test
daa
mov
xor
add
ret
mov
mov
adc
mov
stc
push
xor
js
mov
aaa
xor
cld
aas
and
add
cld
push
ret
sahf
push
or
fs
(bad)
scas
inc
inc
popf
sub
test
retf
mov
test
inc
std
mov
das
xchg
(bad)
clc
call
fimul
mov
ins
jmp
lea
xor
aaa
addr16
xor
ret
shl
ins
repz
sbb
enter
lock
aaa
out
adc
push
sbb
add
mov
shr
shr
inc
xchg
ins
push
mov
mov
mov
mov
pop
jnp
mov
rcl
jge
fidivr
push
ins
movs
retf
dec
mov
xor
sub
inc
nop
nop
sub
adc
add
and
push
sub
pop
in
int3
aam
push
or
mov
xchg
sbb
fadd
dec
or
dec
(bad)
sahf
icebp
inc
push
mov
fstp
pop
adc
mov
adc
push
fldcw
cmp
push
inc
adc
imul
add
(bad)
mov
test
adc
test
ins
cld
cli
gs
pop
stos
mov
or
leave
ins
xchg
dec
int
pop
and
xchg
stc
dec
or
out
jg
inc
push
sahf
fsub
push
add
fcmovnu
cmp
popa
xchg
pop
jno
ror
and
loope
fisttp
shl
pop
add
add
stc
mov
punpckhbw
rcr
inc
fdivr
mov
(bad)
push
adc
clc
je
out
popf
or
(bad)
fild
push
ds
jae
xchg
nop
add
rol
jb
out
mov
sbb
shr
je
std
(bad)
mov
xchg
loopne
mov
clc
jae
add
inc
mov
sar
push
fisttp
and
das
and
cwde
clc
mov
cmp
test
div
stc
mov
sbb
xchg
cmp
xor
jmp
pop
cmp
adc
jge
hlt
call
or
ss
(bad)
(bad)
push
sbb
add
retf
cwde
pop
mov
xchg
fld
jg
sbb
mov
pop
sbb
test
xchg
mov
mov
out
pop
jmp
pop
adc
mov
xor
iret
xor
stos
fdivr
psrlq
clc
ins
inc
sub
dec
jns
aaa
popa
or
add
mov
icebp
test
mov
mov
sahf
aad
push
xor
shl
aam
lea
cmp
and
int
test
jmp
sub
fnstcw
xchg
fisub
jns
call
in
shl
in
sub
out
mov
push
mov
xchg
in
dec
adc
retf
cmp
movs
jbe
loopne
or
test
scas
bound
popa
and
rcl
das
mov
aad
cmp
in
jbe
mov
call
ret
jb
mov
int
lahf
daa
(bad)
xor
pop
fistp
mov
pushf
les
sub
dec
movs
xchg
loope
sbb
xor
jb
fidiv
or
cmp
inc
scas
xchg
push
mov
dec
mov
shr
out
arpl
inc
mov
lods
and
xchg
add
inc
mov
add
call
repz
push
loop
fadd
sbb
xchg
dec
jl
outs
adc
lods
mov
pop
iret
pop
in
xchg
or
inc
punpckhdq
mov
test
push
inc
mov
inc
sti
mov
into
pop
leave
cmc
cld
ja
stos
adc
hlt
xchg
scas
icebp
dec
sbb
cmps
imul
(bad)
nop
sahf
je
push
xchg
cld
pusha
shl
mov
mov
(bad)
xor
dec
int3
out
pop
sub
or
push
ror
xchg
mov
jo
fisttp
jmp
xlat
sbb
mov
daa
adc
mov
stc
mov
icebp
repnz
sub
dec
out
mov
add
ret
inc
je
popf
jae
into
repnz
gs
sbb
sub
push
rol
xor
outs
pop
out
jmp
and
mov
mov
dec
or
xlat
(bad)
xchg
pop
imul
loopne
ror
jae
mov
sbb
cmp
repnz
ret
cmp
mov
inc
sti
lods
int3
mov
mov
fist
out
mov
sbb
(bad)
outs
imul
or
dec
push
imul
mov
stos
in
jnp
loop
push
ds
mov
(bad)
xchg
push
fcomp
inc
adc
push
in
sub
popa
arpl
add
(bad)
stos
arpl
and
xlat
jnp
iret
loope
inc
adc
inc
call
mov
and
pop
push
inc
xchg
cs
inc
jecxz
out
imul
sub
std
shl
xchg
lea
jle
fistp
add
sub
pop
pop
ret
or
adc
scas
cmp
clc
cmp
inc
hlt
mov
jle
sbb
(bad)
jb
mov
sbb
and
cld
js
test
pop
and
jae
and
outs
mov
dec
jl
arpl
les
pop
arpl
adc
adc
xor
dec
sub
call
or
shl
sbb
movs
and
dec
xchg
xor
ret
or
xchg
fs
fwait
fs
call
adc
mov
pop
out
mov
rcr
jecxz
fstp
imul
mov
cmp
movs
pushf
iret
sbb
push
pop
je
shl
xchg
ins
pop
mov
out
dec
in
dec
sbb
xchg
pop
rcr
in
fmul
or
mov
and
cmp
clc
and
or
ins
(bad)
push
(bad)
loope
cmps
inc
cmps
mov
add
xor
xor
pusha
stos
xor
into
fdiv
shr
sub
ret
call
cmps
jae
mov
clc
xchg
xor
shl
aas
mov
cs
or
inc
mov
in
add
test
sbb
jmp
ret
(bad)
sbb
push
cmp
pop
xchg
(bad)
stos
fucom
nop
pop
pop
dec
cmp
jns
mov
jl
popa
jbe
daa
pop
stos
lock
push
out
ja
xchg
inc
sbb
sahf
mov
push
and
pusha
inc
lods
pop
gs
xchg
sub
ror
adc
jmp
das
aam
add
adc
call
push
mov
jle
mov
dec
ins
jmp
enter
imul
mov
push
fist
imul
ret
and
xchg
out
dec
ss
ret
jno
stos
enter
into
vpmacsswd
and
mov
mov
imul
mov
(bad)
shl
jmp
mov
dec
sub
stos
pop
sub
or
or
xchg
imul
add
xlat
push
aas
(bad)
fiadd
pop
pushf
lods
sbb
inc
lds
and
mov
fwait
jl
leave
xchg
(bad)
jle
push
xchg
sub
inc
loop
ret
cmp
mov
mov
mov
jno
(bad)
std
jae
sbb
jge
or
fnsave
aam
aam
sti
inc
push
(bad)
stos
adc
repz
pusha
inc
cmp
in
mov
aaa
and
xchg
(bad)
clc
adc
sub
xchg
aas
cmps
jmp
or
aaa
push
mov
outs
dec
xor
cmp
loop
xchg
fld
mul
adc
mov
xchg
xchg
aas
rcr
repz
out
fsub
jmp
push
sbb
add
in
lock
neg
arpl
int3
imul
imul
add
lods
stos
movs
xchg
and
addr16
aad
adc
jp
adc
fwait
sbb
and
(bad)
fsubr
sbb
and
push
cwde
call
mov
in
sbb
cdq
xor
and
movs
cmp
cs
test
mov
scas
repz
adc
inc
mov
mov
aad
mov
lds
or
jo
sub
adc
fsub
mov
lock
sub
cli
int
dec
in
mov
jle
iret
sub
(bad)
movs
add
daa
and
jo
test
and
sub
loop
push
(bad)
xor
iret
push
clc
mov
pop
pushf
lock
sbb
loope
std
add
mov
push
fcom
cmp
outs
mov
dec
mov
out
adc
dec
mov
js
mov
xchg
jmp
push
jae
test
call
ds
and
dec
mov
add
push
xchg
(bad)
repz
movs
xor
cmp
in
mov
jmp
mov
out
sti
(bad)
fcomp
out
push
sar
mov
adc
clc
test
sti
pop
jmp
dec
dec
js
dec
imul
push
or
pop
es
jmp
outs
div
push
movs
xchg
ja
mov
fnstenv
rcr
ins
shl
clc
adc
inc
daa
stc
cmp
sbb
ds
ins
shl
int3
neg
fdiv
add
adc
ror
in
int
test
(bad)
push
push
into
jmp
(bad)
fstp
data16
adc
sbb
shr
dec
lds
js
sub
(bad)
fucomp
mov
test
cmp
aaa
sar
paddsb
xor
xchg
inc
js
jg
xor
jae
aad
add
and
and
mov
jbe
pop
bound
pop
imul
push
mov
jb
(bad)
pop
gs
xchg
mov
cwde
(bad)
mov
cmp
pop
dec
sub
nop
xchg
cdq
lahf
in
pop
dec
movs
fmul
jae
jns
lock
jmp
ins
stos
fisttp
add
cmp
and
jl
ins
dec
and
jno
in
popf
xchg
or
pop
(bad)
lods
retf
lahf
or
rcl
fwait
xchg
(bad)
shl
mov
cmp
pop
shl
jae
lahf
fsub
scas
test
sar
cmps
mov
push
jge
aas
pop
push
add
lahf
out
aas
mov
xchg
pop
or
rcr
data16
(bad)
fidivr
sub
movs
or
add
lock
mov
and
or
fs
add
cwde
imul
xor
push
jl
sub
enter
mov
mov
cs
bnd
shl
mov
mov
movs
mov
mov
push
mov
or
xor
js
retf
push
test
cld
lock
in
fucomip
push
jb
xor
shl
jb
stc
xchg
push
adc
loope
shl
or
test
inc
mov
sbb
dec
inc
ins
ds
push
enter
mov
iret
inc
(bad)
pop
inc
mov
add
sub
(bad)
mov
cmp
inc
test
push
xchg
int3
mov
sbb
inc
fisubr
jecxz
into
and
test
mov
xor
sbb
or
sbb
ins
xor
loope
imul
imul
xor
dec
imul
inc
add
cmp
mov
retf
push
dec
fbstp
stos
fisubr
mov
out
fidivr
pop
mov
mov
dec
jno
or
aad
push
pop
cmova
test
push
(bad)
out
jl
xor
scas
xor
and
mov
fcomp
and
clc
xor
push
lahf
mov
push
and
and
mov
cmp
retf
push
push
push
dec
ret
sbb
aaa
movs
dec
test
fild
fmulp
push
(bad)
adc
jmp
sub
lea
and
js
lea
iret
xor
dec
dec
leave
scas
and
arpl
and
hlt
cmc
add
lahf
out
sbb
fs
ret
(bad)
out
push
pop
jp
cmp
fucomp
out
push
mov
xlat
lahf
test
(bad)
sbb
mov
or
lahf
sub
repz
pop
repz
movs
daa
jo
jne
and
mov
or
lods
shr
mov
lods
cmp
data16
fwait
xor
jno
mov
out
rcr
cdq
adc
test
adc
mov
dec
(bad)
shl
ffreep
add
pop
jns
sub
inc
sub
lahf
pop
dec
mov
out
not
add
or
stos
cwde
xor
shl
xchg
imul
dec
adc
dec
out
fs
inc
ret
outs
dec
add
and
scas
ss
out
stos
or
adc
inc
or
inc
sub
(bad)
xchg
ret
push
sub
loop
(bad)
out
movaps
imul
or
cli
mov
shr
mov
call
in
mov
aad
jae
mov
push
imul
sbb
fistp
lods
lahf
cmc
stos
mov
pop
enter
xor
adc
out
retf
fild
rol
retf
mov
shl
pop
and
sub
aas
bound
hlt
test
sbb
mov
repz
adc
dec
dec
clc
ja
inc
xchg
jecxz
push
call
mov
push
mov
mov
test
out
repnz
adc
jbe
sbb
cld
xlat
mov
push
add
call
sub
sbb
add
xchg
jmp
jno
pop
sub
cld
jbe
sahf
call
stos
mov
and
mov
push
outs
lock
push
sbb
mov
cmc
sub
jbe
inc
in
out
cmps
inc
xchg
sbb
jecxz
dec
mov
test
push
pop
loopne
or
sub
mov
scas
outs
jb
adc
jb
inc
fstp
(bad)
fdiv
xchg
inc
push
movs
add
adc
push
ret
xchg
push
in
mov
ds
repz
xor
or
pushf
or
movs
push
jo
add
and
adc
dec
pop
sbb
and
mov
sub
ds
jmp
fwait
cmp
mov
xor
xor
lock
pop
call
xchg
aam
mov
cmp
in
pop
add
popf
outs
aam
mov
(bad)
dec
les
mov
cmp
xchg
call
mov
jle
adc
popf
clc
popf
cmps
xor
(bad)
arpl
ja
popf
rol
mov
pop
dec
dec
out
cmps
pop
ficom
fldenv
push
push
push
jno
out
(bad)
xor
sbb
shl
scas
adc
cdq
ficom
or
jg
or
xor
pop
clc
or
mov
jnp
or
mov
or
pop
int
inc
pop
jns
sbb
call
mov
neg
call
cmp
pop
movs
ret
jecxz
pop
mov
lods
hlt
dec
mov
in
pusha
xor
push
call
or
mov
nop
jae
fisubr
enter
and
push
aad
test
je
popf
mov
popa
add
lahf
jg
add
push
call
test
xchg
sub
mov
addr16
cli
daa
xlat
inc
and
pop
jge
mov
xchg
or
jg
xchg
repz
shl
dec
dec
pop
jo
pop
xchg
daa
mov
cmp
scas
sub
xchg
or
mov
lds
add
pop
mov
xor
sub
add
pop
test
mov
jle
ja
scas
mov
out
dec
call
hlt
shl
jge
push
in
push
idiv
jl
popf
inc
xchg
or
push
mov
mov
fisttp
xchg
pop
pusha
jp
setnp
lods
(bad)
cld
dec
cmp
aam
xchg
sti
sbb
add
in
aas
hlt
lods
jmp
shl
jb
aas
mov
adc
stos
xchg
xor
lds
or
fmul
sub
and
jns
test
sub
add
dec
sub
cmps
mov
imul
call
int3
iret
in
xor
sbb
jg
mov
loop
mov
(bad)
adc
sbb
sub
jge
inc
pop
xlat
(bad)
icebp
sbb
test
mov
cmp
bound
arpl
movs
enter
xchg
rcr
xrelease
mov
add
ret
out
rcl
and
mov
icebp
xlat
push
xchg
mov
es
arpl
das
sbb
clc
addr16
out
enter
mov
mov
mov
add
mov
push
bound
pop
aas
ss
ins
and
(bad)
retf
dec
rcr
pop
sar
inc
mov
ror
jns
cmc
pusha
test
repz
mov
aas
fisttp
movs
jmp
verr
(bad)
(bad)
sbb
mov
nop
pop
mov
test
fsub
mov
xchg
fistp
arpl
xchg
jl
push
shl
hlt
push
arpl
or
ret
arpl
pop
or
test
in
add
or
bound
lea
aaa
scas
or
fst
push
cmp
push
or
lds
add
push
sbb
not
mov
xor
ins
push
push
or
test
mov
inc
xor
pop
pop
and
test
mov
dec
and
jle
test
(bad)
popf
xchg
popa
pop
dec
mov
or
or
jnp
retf
addr16
pop
jg
test
push
jns
inc
repz
mov
aam
int
fimul
aaa
dec
(bad)
loopne
mov
out
iret
je
jbe
xchg
jge
push
outs
and
mov
xor
pop
push
add
imul
mov
scas
scas
xor
jle
push
movs
cmp
and
add
cmps
loopne
cmp
hlt
mov
adc
arpl
cmc
pushf
je
add
mov
adc
or
stos
or
adc
adc
stos
stos
cs
adc
cdq
inc
in
mov
test
cmp
mov
inc
test
mov
or
adc
aam
movs
outs
popf
lea
xor
pop
inc
cdq
(bad)
loop
xlat
pop
inc
and
jnp
retf
ss
xchg
pop
mov
iret
jno
jae
xor
pop
cmp
mov
mov
jmp
enter
mov
add
mov
movs
add
pop
loopne
inc
loop
or
mov
std
or
les
pop
inc
in
push
jecxz
ins
pop
ins
imul
outs
xor
xor
dec
hlt
imul
dec
in
dec
mov
adc
mov
sbb
ret
mov
mov
mov
add
cdq
adc
scas
and
inc
mov
jmp
xchg
mov
ret
(bad)
sbb
inc
popa
jns
xor
addr16
lds
fwait
test
sbb
popf
ja
ja
xchg
cwde
dec
push
sbb
inc
adc
cdq
scas
sub
jnp
addr16
push
and
dec
xor
sub
aaa
movs
rcr
test
and
xor
jecxz
stc
scas
push
outs
dec
sub
movs
mov
std
pop
mov
mov
lea
dec
out
xchg
out
les
adc
es
les
out
inc
inc
daa
arpl
movs
movs
hlt
es
sbb
aas
aaa
pop
or
jge
add
adc
cmp
dec
mov
test
xchg
lahf
xor
cmp
pop
dec
(bad)
pop
mov
aas
fldenv
fild
mov
ds
or
aam
rcl
add
fdiv
push
(bad)
jmp
repnz
push
imul
fild
sar
into
pusha
mov
mov
(bad)
aaa
mov
pop
sar
(bad)
push
xchg
or
mov
int
bound
jmp
xor
call
scas
(bad)
push
test
cmp
mov
inc
mov
sti
jge
jg
test
push
mov
fist
fs
lods
outs
sub
pop
add
adc
mov
jg
sbb
int3
sub
iret
fldenv
loope
inc
mov
pop
xchg
(bad)
ins
xor
or
mov
inc
cmps
mov
xor
inc
inc
cmp
push
push
call
es
dec
mov
adc
and
xchg
adc
cmp
dec
jmp
mov
clc
xor
call
ror
mov
int3
cdq
pop
push
sbb
jmp
out
dec
sub
and
loopne
add
bnd
shl
inc
mov
sahf
or
cdq
(bad)
mov
test
mov
aad
ins
mov
test
or
sub
iret
xor
leave
rcl
sub
cmp
mov
cdq
loopne
ss
idiv
xchg
out
sub
loop
jg
lds
and
out
(bad)
aaa
fst
add
and
dec
in
or
xor
cmps
idiv
dec
stos
cmp
lods
xchg
lea
inc
ds
hlt
inc
nop
pmulhw
fiadd
or
sub
jp
mov
mov
outs
test
or
out
mov
test
lea
je
retf
icebp
sbb
shl
add
dec
icebp
pop
arpl
sub
or
fild
idiv
sub
mov
dec
lock
push
add
aam
dec
addr16
mov
test
ins
mov
jg
js
das
ins
int
mov
pop
mov
xlat
lds
pinsrw
outs
retf
cmp
fstp
movs
daa
leave
add
(bad)
popf
sub
or
outs
outs
or
cmp
add
jnp
ret
shl
lods
sub
stos
ret
xchg
fistp
xor
hlt
jp
adc
leave
dec
xchg
es
jmp
sbb
mov
cmp
sub
sbb
fmul
mov
jbe
jmp
add
sti
dec
jne
test
out
mov
sbb
add
(bad)
mov
inc
xchg
enter
imul
sub
ja
enter
jbe
cld
dec
mov
push
retf
pop
jle
pop
mov
xchg
sbb
xor
jb
pop
add
and
repz
push
into
lahf
dec
fsub
or
in
xchg
or
inc
(bad)
(bad)
pop
ins
pop
add
xchg
shl
imul
mov
pop
pop
mov
movs
cwde
jnp
int
stc
cmp
mov
adc
stc
mov
inc
ins
mov
jbe
addr16
xchg
mov
daa
push
sub
scas
cmp
sti
fmul
aam
popf
sub
repz
repz
iret
fidiv
xchg
int
mov
daa
adc
add
jbe
mov
pushf
jb
inc
cmps
jg
in
mov
movs
aad
(bad)
and
adc
ret
int3
ds
iret
(bad)
cld
sbb
stos
add
call
mov
mov
dec
arpl
jge
sbb
dec
inc
xor
leave
jle
cmp
cmp
fadd
mov
or
mov
sbb
out
inc
in
rol
cmp
sbb
mov
jmp
ins
aaa
pop
test
xor
jmp
repz
cmp
jae
cwde
sar
mov
dec
jmp
mov
cmps
das
dec
cmp
sub
xchg
lods
ret
mov
jle
dec
mov
aaa
fisubr
cdq
ins
xchg
push
pop
ins
movs
jns
out
add
mov
nop
cdq
push
test
repz
mov
ins
jmp
fild
sub
pop
xor
and
div
(bad)
mov
xchg
popa
jmp
dec
hlt
je
cmp
test
outs
and
outs
xchg
vpsrld
dec
add
(bad)
and
mov
add
mov
loope
addr16
sbb
ror
popf
mov
dec
int3
jno
pop
(bad)
mov
sub
pop
mov
stos
popf
jb
inc
jle
out
cmp
mov
aam
jmp
jmp
into
mov
inc
mov
and
cmps
call
cmc
pop
test
cmp
sub
or
repnz
ins
lods
sub
and
sar
leave
mov
mov
jp
push
lods
ss
pop
jmp
ror
out
outs
xor
add
arpl
jnp
inc
mov
inc
mov
pop
in
mov
scas
or
sbb
ret
loopne
pop
mov
arpl
add
or
and
or
inc
fistp
hlt
xor
bound
jne
es
adc
adc
jb
test
dec
sti
mov
ficomp
test
cmp
icebp
(bad)
adc
dec
loop
in
pop
shl
pushf
mov
cli
or
xchg
sub
sbb
pop
xlat
loope
ss
fwait
out
into
push
arpl
and
outs
sbb
call
adc
xchg
leave
pop
cmp
fsubr
pop
pop
and
sub
jle
mov
sbb
ror
addr16
add
mov
jb
sbb
inc
xchg
hlt
mov
lods
or
cmc
push
ins
dec
jno
pop
mov
out
cmp
dec
inc
mov
pop
xor
retf
cdq
imul
dec
sahf
shl
dec
cli
je
imul
cmc
aas
dec
sub
lea
xor
and
das
add
fiadd
out
push
out
adc
sub
and
mov
in
int3
sahf
test
adc
mov
xchg
push
mov
(bad)
(bad)
xchg
pusha
test
mov
(bad)
(bad)
jmp
pop
imul
test
outs
cmp
mov
shr
pusha
(bad)
or
shl
loopne
adc
loopne
dec
push
or
and
scas
fwait
mov
cdq
nop
mov
pop
mov
cmps
mov
jp
sub
jge
fldcw
cdq
push
push
js
aaa
push
push
cld
(bad)
cmp
mov
sti
(bad)
jmp
retfw
push
in
push
sub
add
pop
movs
or
sub
push
addr16
jbe
or
(bad)
out
inc
dec
mov
jnp
xchg
out
push
push
shl
inc
push
(bad)
hlt
ror
sbb
das
pop
jg
imul
je
adc
push
mov
out
fwait
add
call
xchg
loop
arpl
pusha
mov
je
push
add
les
fisub
sub
repnz
jecxz
out
aad
xor
xor
call
push
es
rcl
sbb
cmp
pop
xchg
sbb
push
inc
int
std
fist
mov
pop
dec
inc
cld
lods
sub
jle
ds
cmc
iret
or
push
movs
rcr
cdq
iret
mov
pop
jne
das
(bad)
div
hlt
lock
xor
stos
dec
sub
or
aad
aas
or
scas
add
and
in
mov
add
pop
out
cdq
xor
sub
add
mov
dec
xor
xor
cs
inc
adc
retf
inc
out
push
xchg
pop
ds
je
arpl
nop
push
mov
fadd
cmp
lahf
retf
repnz
frstor
or
inc
lods
pop
bound
cdq
adc
jl
xchg
jle
mov
inc
push
(bad)
lods
mov
fwait
sub
out
inc
popf
mov
and
(bad)
or
rol
pop
cmp
shl
pushf
pop
mov
ja
pop
movs
fwait
ret
idiv
scas
mov
cmp
outs
mov
leave
outs
ret
push
push
and
fwait
or
adc
or
xor
xor
jae
and
add
mov
jecxz
inc
call
test
xchg
lds
bound
mov
outs
add
pusha
scas
xchg
mov
call
inc
in
adc
(bad)
mov
jnp
push
pop
jcxz
mov
xchg
mov
mov
and
jecxz
xor
fild
xor
jbe
aas
jb
out
xchg
mov
push
add
jp
mov
test
ficomp
dec
sar
out
pop
jbe
adc
and
mov
das
lds
pop
xchg
cmp
sbb
cmp
jp
sbb
lods
test
xchg
sub
mov
iret
jl
xor
inc
cli
jp
pop
jb
jnp
(bad)
sbb
mov
mov
add
aam
and
cmp
sub
dec
push
mov
loope
xchg
outs
mov
jl
sbb
add
data16
xchg
xor
cmp
mov
addr16
in
and
test
mov
out
push
(bad)
movs
sub
in
cmp
adc
dec
ss
sub
cwde
shl
sbb
(bad)
jne
mov
fisttp
or
gs
push
xor
fs
fst
jmp
outs
scas
sbb
dec
add
mov
inc
js
push
dec
sti
sbb
inc
ss
popf
cmps
and
movs
je
jecxz
ss
dec
ins
int3
ins
(bad)
cld
jmp
mov
rcl
int
dec
pop
cmp
pop
shl
icebp
xor
stos
outs
inc
jge
sbb
dec
hlt
in
push
jp
aas
pop
inc
pop
mov
loope
fld
sub
loope
xor
jae
ror
cmp
push
pop
xor
mov
mov
clc
enter
mov
jmp
lods
xchg
imul
jle
dec
out
ret
sbb
bound
dec
sar
jb
rcl
or
add
push
sub
and
je
or
mov
mov
mov
dec
lock
lahf
xor
pop
mov
sub
test
sub
or
shl
mov
in
mov
mov
jno
jo
not
xor
jge
call
sbb
jns
and
sbb
adc
lods
out
jno
cld
adc
jl
mov
cmp
push
cli
xor
dec
sbb
jle
daa
mov
ds
pop
out
fldcw
mov
cmps
popf
dec
shl
aas
and
push
xor
mov
inc
sti
push
in
fmul
ja
cmp
call
push
mov
xchg
mov
xchg
sbb
arpl
fidivr
add
jecxz
cmp
inc
(bad)
xchg
popf
add
in
jmp
jno
cwde
loop
shl
dec
sbb
add
or
leave
xor
rcr
mov
or
ja
es
mov
cmp
lahf
fst
imul
adc
scas
out
pusha
shr
sub
and
pop
jo
push
sbb
dec
dec
push
out
sub
cmps
loope
sbb
test
dec
sub
enter
(bad)
das
pushw
mul
fiadd
pop
mov
ins
push
mov
(bad)
popf
outs
or
pushf
aad
aas
(bad)
mov
jns
lahf
cld
ins
stos
loop
test
adc
fdiv
scas
and
jge
sti
sub
test
mov
pop
jp
ja
push
jae
outs
jb
jle
das
cmp
loopne
stos
xor
mov
scas
fisttp
popf
sub
sti
dec
pushf
out
push
cmps
adc
in
or
fadd
and
or
(bad)
hlt
add
mov
pop
mov
cmps
movs
shl
mov
stc
xchg
dec
mov
sbb
or
add
xchg
jecxz
cmp
leave
fdivr
push
dec
xchg
jg
sub
push
cdq
jns
adc
jge
addr16
push
nop
xchg
sbb
xor
fidivr
push
scas
fcmovne
mov
add
cwde
cmp
test
pop
into
loopne
cmps
dec
inc
out
in
mov
int3
dec
call
cmps
outs
sub
add
pop
ins
clc
shl
je
aam
test
jo
loop
cmps
and
xor
pop
inc
jo
push
in
sub
mov
mov
mov
popf
in
popf
xchg
addr16
inc
jmp
xor
shl
scas
adc
and
pop
dec
ins
ss
cld
shr
cmp
push
mov
std
(bad)
ins
sti
lods
mov
add
f2xm1
or
fisubr
call
cs
dec
and
mov
gs
test
jle
fisttp
stos
jo
nop
mov
fild
push
fdiv
dec
pop
stc
dec
cmp
aam
cmc
in
cmp
sub
(bad)
or
fisttp
icebp
inc
mov
mov
not
dec
cmp
dec
push
(bad)
mov
adc
aas
lods
cmp
xchg
push
sahf
leave
push
xchg
jae
push
or
xchg
fld
scas
pushf
mov
jmp
shr
in
mov
push
push
inc
push
in
sub
lgs
mov
aam
push
out
and
mov
fmul
jb
pushf
mov
or
pop
iret
in
pushf
movs
icebp
cdq
ret
ja
mov
loop
movs
adc
sbb
xlat
enter
xor
add
inc
sahf
imul
inc
out
in
in
add
retf
jmp
mov
lods
das
xchg
hlt
dec
sub
sub
add
mov
add
int
cmp
mov
arpl
dec
pop
push
sbb
gs
(bad)
stc
fcom
push
pop
es
xor
pop
and
cli
fsub
pushf
retf
sbb
or
inc
jo
(bad)
movs
scas
mov
mov
repz
fstp
bound
jno
clc
add
mov
mov
outs
mov
test
dec
int3
aad
fisubr
cmp
sbb
mov
jbe
test
sub
xlat
mov
test
jo
cmp
sub
adc
mov
or
push
mov
dec
sub
in
aam
call
fcomp
add
stc
mov
popa
mov
in
push
cld
push
and
in
sbb
pop
nop
sbb
call
fucomi
jmp
aaa
(bad)
cmps
push
(bad)
sbb
int3
shl
sar
or
repz
mov
stos
mov
cmp
ins
jnp
sti
mov
es
retf
cwde
adc
sbb
popa
outs
pop
xor
(bad)
xchg
inc
push
adc
adc
add
outs
and
jne
scas
popa
shr
pop
lock
xchg
sub
and
pushf
in
jb
sbb
shl
fsubr
xor
bound
(bad)
xchg
mov
(bad)
std
and
daa
call
sbb
fisubr
cmp
ror
or
and
adc
enter
aas
jle
mov
ins
popa
and
(bad)
lahf
bnd
aad
inc
xchg
cmp
xchg
inc
das
xchg
xor
mov
inc
push
sbb
into
or
inc
dec
jbe
cmp
adc
inc
sbb
enter
out
pop
inc
mov
jmp
retf
pop
inc
jl
cmps
repnz
test
mov
push
neg
sbb
xchg
retf
inc
fstp
dec
add
ror
pop
push
inc
stos
jbe
xchg
xchg
(bad)
retf
mov
(bad)
fldlg2
je
in
mov
mov
(bad)
and
cld
popf
mov
pop
(bad)
popa
repz
imul
or
loopne
test
mov
mov
push
cdq
xchg
inc
daa
jnp
retf
ins
inc
xchg
hlt
daa
std
inc
sbb
mov
les
inc
ins
ss
movs
pushf
cmp
imul
mul
outs
lods
sbb
mov
enter
sti
je
pop
xchg
sub
inc
sbb
test
sbb
ja
xor
sub
jns
sub
jg
rcr
jle
fisttp
dec
adc
popf
xchg
jmp
gs
shl
xor
pop
int
cmps
or
test
not
sub
and
sub
movs
movs
xlat
jle
cmp
inc
in
sar
daa
stc
aaa
sub
xchg
movs
pop
mov
es
cmp
gs
sub
in
jne
push
cmp
ret
adc
push
jp
rcr
push
sub
retf
bound
cmps
jo
mov
push
lea
inc
bound
sub
xchg
cmp
imul
add
movs
lods
sub
sbb
push
int
mov
dec
sti
mov
mov
mov
or
sbb
xlat
xchg
gs
nop
dec
push
xor
mov
lods
js
inc
les
dec
jg
retf
out
adc
jmp
sub
es
call
fstp
xor
ins
add
pop
and
mov
mov
mov
fistp
out
and
xchg
repz
into
xchg
mov
jge
int3
xlat
enter
pop
fstp
mov
call
xchg
or
test
leave
lods
arpl
sub
cmps
sahf
jae
aad
sub
mov
mov
es
xchg
out
add
mov
jmp
neg
rol
cmc
cmp
enter
sar
lds
adc
imul
lahf
outs
mov
mov
push
jb
aaa
inc
lea
xchg
cmp
call
call
push
cld
pop
popf
or
rcr
sbb
packssdw
xchg
xchg
in
push
lds
call
pop
mov
and
and
push
arpl
sbb
mov
mov
jbe
loopne
or
mov
stos
cdq
push
clc
xchg
mov
jmp
jg
ja
sbb
fs
push
mov
call
cmps
jae
inc
stos
es
xor
dec
imul
dec
test
mov
mov
ins
sbb
xchg
cmps
and
xchg
push
call
pop
sub
data16
mov
ret
outs
call
mov
les
push
fst
dec
cmc
into
paddw
mov
fs
sub
pop
adc
mov
mov
fnstenv
enter
lahf
mov
dec
rcl
into
sub
rcl
pop
fisub
or
xor
mov
xor
imul
mov
sbb
stos
cmp
add
jge
mov
pop
jnp
mov
push
mov
mov
test
xchg
adc
sbb
ret
rcl
in
mov
push
sbb
mov
xchg
dec
adc
cmp
sbb
adc
mov
push
and
inc
imul
sub
xlat
and
das
adc
or
nop
dec
mov
mov
mov
push
test
pop
shr
test
mov
jp
ja
push
mov
into
cmps
cmp
and
cli
es
xchg
xor
test
imul
inc
addr16
in
xor
jns
pop
jbe
movs
sbb
movs
icebp
enter
cmp
push
dec
and
jge
js
mov
add
mov
pushf
sub
pusha
repz
sub
repnz
cld
jmp
std
sti
ins
sub
xor
iret
inc
and
mov
repnz
mov
mov
dec
outs
ds
push
and
in
jg
push
mov
jbe
lea
nop
push
mov
mov
sbb
cmp
cdq
stos
repnz
loope
jmp
or
mov
mov
pop
push
mov
push
push
xor
jge
inc
cmps
jo
sub
fcmove
mov
cdq
cs
mov
mov
fld
adc
pop
mov
sbb
imul
(bad)
and
inc
mov
sub
stos
or
push
push
leave
cmps
mov
out
rcl
and
mov
int3
shl
push
cmp
(bad)
inc
(bad)
rcr
outs
cmps
lea
sub
je
ins
call
mov
leave
sub
xchg
call
icebp
aaa
std
xor
sub
rol
pop
mov
mov
cmp
sub
cld
sbb
mov
mov
jl
nop
push
or
outs
and
imul
in
inc
push
cmp
loope
movs
xor
ins
jge
scas
xchg
mov
cld
das
js
jae
mov
sub
cmp
cli
fist
movs
shl
aad
adc
or
add
iret
test
and
jnp
lods
dec
pop
dec
repz
fsubr
loope
es
xlat
mov
std
test
or
add
or
sbb
adc
test
cmp
jge
stos
sub
scas
cmp
fucomip
test
mov
jl
dec
inc
sbb
sahf
push
lock
retf
ins
icebp
mov
rol
xor
mov
mov
mov
inc
mov
pop
daa
mov
sub
icebp
xchg
add
mov
nop
adc
xchg
mov
pop
out
aam
ins
into
ret
pop
and
mov
adc
adc
and
out
adc
jo
js
xor
inc
arpl
and
fdiv
cwde
pop
jge
jmp
add
or
fisttp
test
push
push
shl
inc
pop
jmp
shr
sti
adc
imul
push
arpl
cmp
jl
add
popf
aas
in
cli
jae
ror
aam
(bad)
out
sub
dec
int
jp
push
fst
adc
pop
mov
sbb
and
jmp
pop
shr
or
or
cli
icebp
pop
push
js
in
jbe
fcom
out
add
jnp
adc
push
push
frndint
rol
add
mov
mov
aaa
pop
sub
(bad)
mov
sbb
call
jge
push
pusha
xchg
cmp
js
mov
sub
dec
adc
int3
nop
ret
inc
test
jo
pop
cmps
mov
and
sub
int3
dec
push
cmps
adc
xchg
xor
xchg
mov
mov
or
mov
ror
lock
push
stc
or
ss
outs
retf
shl
and
pop
dec
cmps
or
wbinvd
adc
aad
sbb
in
js
out
mov
or
push
int
std
lds
pop
ret
cli
push
cs
and
sub
xor
das
and
cmc
sbb
js
jmp
ror
sbb
in
loop
ins
lods
ret
sar
addr16
out
js
mov
or
xchg
pop
fisttp
mov
jle
xor
ja
or
mov
jns
add
cmps
mov
xchg
je
dec
inc
arpl
add
cs
stc
in
and
gs
loopne
cmps
movhps
mov
pop
xchg
xor
fld
xor
xchg
or
mov
xor
out
mov
ja
int
mov
sbb
call
mov
sti
mov
or
ds
fst
ret
cmc
out
into
sbb
cmp
sub
inc
cmp
bnd
push
xor
sbb
cs
aad
sub
and
cmp
nop
lods
test
dec
shr
hlt
adc
or
mov
loop
shl
add
mov
mov
fcom
ret
lahf
push
call
pop
jns
mov
out
jp
adc
push
shr
dec
ret
pop
sbb
ja
push
jl
mov
and
js
mov
sub
jb
or
test
push
retf
add
cmps
lea
and
mov
adc
and
add
cdq
adc
stos
sbb
fldlg2
add
daa
mov
jge
ins
pop
imul
es
add
loopne
or
jbe
fnstcw
add
add
sub
cmc
or
es
daa
loopne
add
in
in
mov
sti
inc
and
ret
in
fnsave
push
jnp
out
mov
loope
jne
cmp
outs
loope
xchg
xlat
jmp
push
data16
stos
lock
pop
call
cmp
jne
sbb
mov
aaa
cli
cdq
fadd
jmp
mov
xchg
pop
and
clc
push
xchg
xor
dec
bound
xchg
sbb
ja
dec
sbb
xchg
cmps
mov
dec
or
mov
push
and
mov
in
dec
imul
mov
out
inc
push
dec
ret
call
ss
outs
hlt
in
inc
and
pop
call
dec
(bad)
add
dec
popf
daa
jo
out
mov
cld
out
iret
retf
and
fisttp
cmp
imul
pop
jae
outs
retf
shr
inc
pop
cmps
lods
dec
and
fwait
cmps
(bad)
cmp
test
or
imul
sub
add
ja
push
dec
push
scas
rcl
sbb
stos
aam
sub
add
imul
inc
mov
xchg
shl
lods
test
sar
icebp
pop
gs
mov
pop
daa
sbb
jmp
pushf
int3
test
jne
icebp
jne
xor
mov
sbb
push
jl
cwde
les
xor
pop
xor
mov
adc
mov
ficom
xchg
or
pop
idiv
inc
mov
lahf
enter
out
mov
dec
mov
and
pop
jns
mov
add
aas
mov
xor
add
jb
sahf
rcr
(bad)
int
sahf
mov
sti
enter
es
sub
adc
dec
lods
and
and
xor
dec
dec
fistp
ss
(bad)
sbb
dec
aaa
mov
es
pop
fimul
int
dec
xor
dec
inc
xchg
and
loop
and
adc
and
cli
rcl
fadd
inc
aam
xchg
sbb
xlat
sti
or
addr16
addr16
jge
retf
inc
mov
rcl
stos
inc
movs
and
mov
mov
jae
mov
aam
xchg
lds
and
sbb
sbb
out
xchg
xchg
(bad)
data16
sub
mov
push
jecxz
mov
or
jne
mov
add
adc
ror
adc
(bad)
mov
mov
jbe
cdq
or
and
xor
hlt
enter
cmp
sar
jae
dec
cli
xchg
aad
les
push
adc
inc
sbb
test
retf
mov
std
les
int
jno
xchg
jmp
fyl2xp1
adc
sbb
inc
call
fsqrt
aam
popf
xchg
xchg
and
mov
xchg
or
sbb
and
xchg
add
aas
je
add
ja
sti
mov
dec
push
xchg
fisubr
in
cmp
jne
adc
xchg
mov
lahf
dec
push
fsubr
mov
and
or
ja
adc
push
in
dec
imul
cmp
inc
call
and
or
dec
arpl
int3
cwde
outs
cs
lock
mov
mov
repnz
mov
loope
test
pop
jl
adc
xchg
das
bound
(bad)
cmc
cmp
jge
cmp
test
sti
add
fadd
sub
sub
retf
inc
dec
adc
dec
inc
mov
mov
retf
xchg
fst
aad
pushf
adc
mov
lds
int3
fidivr
repnz
jge
es
add
mov
pop
leave
mov
inc
inc
push
mov
stos
(bad)
(bad)
push
mov
sub
js
jns
(bad)
out
xchg
pop
inc
or
ficom
cmp
in
inc
fsub
stos
push
pop
data16
mov
mov
add
ss
push
pop
or
xor
inc
cmp
in
(bad)
cmp
aas
(bad)
aaa
cmps
loope
fwait
dec
cmp
std
mov
cmps
xor
test
and
lods
jb
or
xchg
pop
pop
cmova
pop
movs
movs
scas
dec
cdq
xchg
xchg
setnp
test
(bad)
mov
jb
jecxz
cmc
or
loop
iret
xchg
sub
setbe
and
mov
add
xchg
jp
(bad)
arpl
sbb
jmp
pop
aas
mov
fmul
add
push
cmps
das
jl
push
adc
push
(bad)
xchg
add
iret
sub
xor
inc
mov
push
push
fcomp
das
ret
hlt
mov
and
or
jns
scas
int
mov
movs
arpl
mov
es
add
sbb
xchg
mov
hlt
ret
pop
mov
cmp
sbb
or
popa
mov
leave
arpl
dec
and
scas
stos
call
jb
nop
push
outs
sub
not
pop
mov
test
pop
pop
cs
push
and
pop
js
int
fwait
dec
lahf
dec
xchg
call
test
pop
or
fdiv
cmp
pop
inc
pop
adc
xchg
sbb
ds
push
lods
adc
xor
sti
js
xor
push
imul
xchg
icebp
and
call
ins
dec
fwait
jle
(bad)
dec
push
rol
lods
and
(bad)
cmp
out
imul
rcl
jmp
aaa
dec
fwait
xor
mov
retf
push
test
mov
and
pop
mov
aad
cmc
jmp
mov
ror
fcom
add
out
xor
xchg
mul
clc
test
jo
sar
sub
cmp
jg
sub
loop
adc
jmp
push
add
mov
or
leave
adc
mov
mov
jmp
jg
jmp
add
repz
test
mov
stc
fild
dec
dec
sbb
ss
loop
retf
aam
xchg
mov
or
iret
push
pop
loope
pop
stos
cmp
retf
sub
fcomp
dec
mov
mov
ja
scas
or
outs
loope
pop
jns
xchg
add
xor
pop
cmps
in
fimul
inc
scas
fmul
dec
jl
call
dec
mov
je
inc
xor
jl
std
cmp
dec
add
pop
mul
jb
inc
mov
out
mov
aam
cwde
cmp
repnz
les
xor
jb
sbb
xor
outs
fdiv
add
das
xchg
inc
pop
in
jecxz
pop
push
mov
iret
sub
cs
in
inc
cmp
not
pushf
loopne
cmp
ret
sub
dec
(bad)
mov
call
clc
push
data16
cmp
gs
mov
imul
jecxz
mov
mov
cmps
rcr
enter
scas
nop
sub
gs
hlt
xchg
leave
popa
xlat
scas
sub
xchg
pop
aam
div
mov
mov
mov
cmp
sub
add
push
leave
or
xchg
or
and
xchg
out
jecxz
pop
call
out
and
out
push
or
repnz
shl
loope
inc
cmp
into
fstp
mov
mov
xor
or
push
jle
sti
dec
cwde
dec
xchg
pushf
xor
fistp
xchg
sbb
shl
pop
xor
sub
xor
cmps
push
fist
rcr
out
jno
push
sbb
cmp
aad
int
imul
sbb
sbb
aas
(bad)
pop
pushf
inc
shl
pop
cmc
mov
push
dec
dec
imul
dec
cmc
test
or
dec
or
lods
imul
movs
test
dec
lds
mov
icebp
xor
cmps
pop
leave
loope
push
mov
out
imul
jle
out
repz
dec
jmp
hlt
enter
enter
and
add
dec
retf
push
push
dec
test
push
cwde
int
loop
jne
shl
push
(bad)
and
movs
sbb
pushf
dec
out
frstor
and
sbb
lds
movs
mov
int3
mov
mov
push
fstp
mov
mov
mov
arpl
adc
mov
outs
xor
push
mov
and
mov
sbb
inc
icebp
mov
mov
je
dec
xor
popa
inc
(bad)
xchg
gs
(bad)
ins
mov
sar
cmp
and
xchg
ins
popa
adc
pop
jmp
outs
movs
adc
push
rcl
test
cld
stos
and
sub
lahf
inc
push
loope
push
psubq
jb
adc
outs
adc
jnp
lahf
psubb
pop
pop
xlat
xchg
into
sbb
and
aam
pop
mov
adc
cmp
sbb
sbb
mov
xor
call
pop
push
jno
sar
mov
loop
dec
sub
mov
cwde
fcom
mov
(bad)
cli
xor
push
sar
jle
iret
ja
das
call
push
dec
or
in
neg
bound
inc
jle
sbb
xchg
or
(bad)
into
add
les
xor
xor
dec
add
cmp
mov
jp
add
fdiv
pop
aam
shl
adc
pop
ret
jmp
fldcw
aam
mov
movs
mov
push
mov
rol
out
mov
dec
imul
mov
imul
xchg
add
lods
out
(bad)
jno
nop
scas
push
nop
js
test
jge
add
int3
xor
mov
push
call
movs
lock
and
pop
and
ja
es
mov
cmps
jg
add
fidiv
push
std
nop
adc
stos
or
ret
sti
lock
loope
mov
and
jne
imul
leave
or
movs
int
sub
cmp
jbe
adc
pop
cmp
mov
cmps
(bad)
fcom
popa
mov
inc
push
cmps
stos
jg
mov
adc
mov
add
fidiv
jmp
add
push
imul
fwait
and
(bad)
pushf
scas
fld
idiv
mov
loope
cmp
(bad)
inc
jno
and
dec
xlat
aaa
jge
mov
mov
test
adc
jl
xchg
sbb
xchg
mov
sbb
sbb
jb
fild
test
shl
or
or
xor
(bad)
in
ja
mov
rcr
add
out
jl
leave
push
inc
pop
pop
(bad)
pusha
ret
idiv
xor
ror
popf
mov
cmp
and
cmp
xchg
add
out
lods
jecxz
test
out
dec
iret
pop
mov
inc
(bad)
cmp
xor
inc
adc
stc
ret
mov
imul
add
push
js
daa
push
xchg
mov
mov
out
dec
inc
xor
int3
hlt
add
pop
cmp
sub
lahf
nop
mov
pop
cdq
add
in
fst
pop
pop
mov
cmp
arpl
cmc
sub
test
pop
mov
sub
mov
jp
xchg
inc
dec
sahf
imul
icebp
sub
mov
fisttp
or
lods
pop
adc
aam
inc
xlat
test
mov
shr
call
ins
add
daa
or
cli
jle
pop
movs
fwait
cmps
dec
(bad)
dec
std
repnz
shl
rcr
adc
aaa
lods
mov
je
scas
dec
ror
push
lods
xchg
mov
mov
out
imul
mov
cmp
shl
mov
dec
shl
and
ins
add
xchg
cmp
jnp
jb
aam
or
add
push
iret
stos
mov
add
xor
call
jmp
mov
test
adc
jno
loope
std
fs
std
movs
jl
inc
popf
nop
xchg
or
hlt
sar
xchg
dec
xchg
gs
popf
mul
in
mov
rcl
into
cmps
pop
mov
pop
jg
sub
adc
call
xchg
jl
and
sub
sti
loop
or
retf
in
push
imul
cmp
push
pop
inc
sub
xchg
mov
fs
xor
in
sahf
std
adc
inc
push
loopne
shr
fcomp
fisubr
ss
(bad)
cwde
dec
jle
adc
test
daa
mov
retf
test
and
fcom
or
pop
xchg
xchg
or
rcl
or
mov
fwait
jmp
adc
push
mov
pop
aam
push
dec
push
fs
retf
jmp
or
sub
(bad)
dec
mov
lea
jmp
nop
push
xchg
xlat
mov
js
cmp
sbb
loope
sub
pop
inc
inc
sbb
shl
and
push
test
add
push
or
mov
iret
mul
fdivrp
test
dec
pop
xchg
rol
sbb
cdq
sbb
cwde
and
or
pop
xchg
sub
push
in
sbb
dec
add
mov
aas
adc
push
and
xchg
or
hlt
fsubr
ret
(bad)
jns
lods
jbe
mov
cdq
push
push
ja
adc
jmp
mov
push
aad
sbb
and
(bad)
xor
popf
inc
inc
fild
mov
add
or
scas
fnstenv
mov
(bad)
mov
mov
sub
jmp
out
inc
daa
push
fwait
sti
xchg
mov
pop
xchg
dec
inc
xchg
js
scas
gs
push
adc
fcom
mov
and
pop
mov
(bad)
dec
add
jmp
jae
add
cli
mov
push
push
(bad)
xor
cmp
fild
sub
retf
sub
sar
popf
ins
idiv
jbe
mov
fldenv
pop
mov
out
scas
sub
aas
jnp
and
inc
mov
xchg
sbb
jns
sub
cwde
push
add
cmp
dec
push
fst
sbb
dec
sbb
stos
sbb
inc
sub
jmp
add
jbe
repnz
imul
aas
or
push
js
rcr
call
sub
dec
mov
add
aas
xor
pushf
mov
add
loope
push
adc
test
arpl
xchg
retf
pushf
push
leave
jno
idiv
jae
jb
mov
test
aad
test
xor
mov
mov
jb
adc
bound
dec
and
pop
mov
sub
dec
les
cs
push
pop
fwait
imul
mov
jp
sub
inc
mov
cmps
mov
mov
or
pop
ja
cld
inc
or
adc
test
mov
jae
push
mov
cmps
jmp
inc
shr
js
jb
adc
mov
adc
xchg
sub
push
or
jg
dec
popf
sbb
icebp
xor
stos
jne
or
stos
cmps
es
mov
(bad)
jae
and
hlt
push
cmc
adc
aaa
pop
test
inc
jmp
mov
icebp
shr
push
mov
rol
cmp
push
aas
dec
mov
push
mov
adc
cmps
xchg
ficom
mov
test
or
or
scas
ss
jmp
test
and
cdq
push
dec
inc
jb
inc
sbb
push
cld
sbb
cmp
sub
mov
js
jge
fs
call
inc
ret
lock
adc
pop
or
push
dec
gs
mov
fldenv
sub
lahf
mov
jg
in
cmp
or
push
push
retf
inc
imul
aad
jne
stos
push
fisttp
das
rol
ja
ds
inc
and
push
jle
sbb
pop
mov
and
lea
sbb
xchg
sub
test
mov
loope
div
sub
aam
mov
sbb
sub
movs
dec
lahf
pusha
sub
out
mov
and
inc
cmp
mov
jbe
enter
sub
rcr
xchg
clc
inc
movs
and
and
hlt
mov
out
pop
or
sbb
cld
mov
xchg
test
jnp
jl
pusha
in
push
ret
or
loop
xor
mov
or
mov
rol
cmps
sahf
adc
fist
xchg
fldcw
pop
les
inc
or
push
or
or
inc
aas
popa
mov
push
cwde
aad
sbb
or
je
or
or
mov
stc
cld
test
pop
xor
fidiv
retf
dec
mov
pop
jbe
jmp
test
les
and
pop
inc
adc
dec
scas
std
test
add
sub
sub
out
jmp
or
arpl
dec
adc
es
jo
xor
jge
push
xor
popa
push
sub
cmp
addr16
xchg
daa
inc
cmp
add
xor
or
cmp
sub
add
mov
loope
sub
add
push
fadd
jbe
call
sbb
stos
repnz
and
(bad)
cmc
icebp
xchg
jno
push
mov
or
push
(bad)
sub
xor
inc
test
cld
mov
mov
mov
pop
jmp
inc
pop
push
jg
pop
aad
mov
dec
(bad)
dec
mov
into
ins
inc
clc
adc
ret
std
iret
test
hlt
js
lods
inc
in
rol
push
dec
mov
mov
cmp
inc
in
cmp
mov
add
fwait
xor
or
mov
imul
mov
cmp
inc
adc
das
push
or
cmp
xor
popf
mov
das
lds
add
adc
mov
loopne
out
inc
std
and
in
sub
ins
mov
sbb
inc
add
outs
or
pop
xor
and
mov
mov
ja
fwait
adc
test
dec
enter
cmp
call
scas
(bad)
mov
rcr
mov
and
sbb
movs
dec
int
xchg
scas
rcr
ficom
retf
sbb
bound
jge
aaa
cli
jp
shl
ins
gs
lds
int
sub
or
push
movs
push
dec
inc
pop
daa
imul
jmp
xchg
mov
ds
xor
pop
loope
mov
dec
sar
add
cmp
and
push
push
stos
lea
xchg
inc
push
repz
sub
dec
scas
mov
inc
fstp
pop
addr16
mov
(bad)
out
jle
ret
dec
fcomp
jmp
lods
xor
stc
fdivr
add
jo
sub
xchg
fldcw
arpl
or
sub
sub
and
js
mov
ja
or
cmps
fist
lods
mov
imul
mov
push
int3
mov
les
xchg
sar
xchg
pop
mov
icebp
loopne
ds
mov
sti
push
add
call
ror
inc
retf
icebp
mov
scas
jl
in
mov
mov
adc
std
mov
mov
shl
cmp
xor
add
inc
mov
cmp
or
mov
and
and
mov
call
(bad)
jmp
push
call
adc
dec
lock
ret
or
(bad)
cs
shr
cmp
jnp
jecxz
mov
(bad)
jp
push
mov
adc
jg
push
enter
push
or
adc
(bad)
div
pop
icebp
test
xor
pop
gs
das
inc
test
hlt
cdq
push
xchg
sbb
push
pop
mov
rcr
(bad)
scas
std
xor
jae
cmps
ds
dec
fidiv
mov
and
fiadd
(bad)
or
mov
or
xchg
and
mov
fcom
add
aas
retf
pop
sub
xor
push
aas
cld
lahf
sub
sar
cmp
inc
add
daa
sub
lock
(bad)
pop
push
das
loope
into
stos
push
fs
dec
lea
mov
add
push
add
in
mov
mov
xchg
sbb
(bad)
push
rol
push
push
jmp
push
repz
(bad)
add
add
lods
js
add
outs
jp
push
sbb
dec
in
popf
adc
inc
mov
shl
in
mov
mov
hlt
cmps
ror
cmp
(bad)
addr16
inc
leave
sub
adc
adc
add
fcomp
push
sbb
icebp
adc
cmp
ins
movs
sbb
ror
movs
cld
stc
dec
or
sahf
inc
scas
dec
mov
add
shr
cmps
jno
fwait
xchg
ja
movs
(bad)
mov
scas
push
ret
mov
adc
ret
fistp
mov
ret
dec
dec
sub
ja
into
adc
add
mov
pop
mov
fcom
xor
jo
mov
loope
enter
adc
(bad)
ficom
scas
mov
enter
or
stc
test
sbb
or
sub
int3
(bad)
pop
jmp
aad
test
dec
dec
jg
mov
mov
push
cli
pop
add
out
sahf
dec
stos
push
jae
rcl
(bad)
mov
pop
jae
jne
in
das
mov
jmp
xchg
or
sub
mov
enter
add
mov
xchg
ins
sub
in
cmp
push
mov
nop
(bad)
and
ins
sbb
scas
sub
rcl
push
(bad)
mov
or
imul
ss
dec
jae
mov
repnz
mov
cmp
pop
stos
lods
jbe
les
adc
jne
xor
out
mov
clc
fisttp
fs
push
push
inc
mov
addr16
pop
mov
mov
das
mov
dec
push
mov
adc
pop
lock
loop
dec
cmps
and
push
(bad)
test
sbb
cmp
fst
aam
mov
movs
mov
in
call
lar
adc
adc
sbb
fidivr
js
pop
mov
aam
hlt
mov
in
push
dec
cmp
pop
sar
dec
and
shl
outs
lea
and
sar
xchg
cmp
sbb
or
inc
jecxz
cmp
in
lds
loope
mov
iret
shl
mov
push
mov
cmp
push
xlat
sub
jb
rcl
push
call
fsubr
jno
adc
(bad)
pop
pusha
adc
inc
push
add
dec
ins
inc
ss
sbb
cmp
sub
adc
cmp
push
cmp
and
out
popf
dec
dec
cld
dec
mov
loopne
xchg
sar
idiv
jbe
push
jecxz
stc
push
scas
or
inc
dec
das
fsubr
cli
les
aam
aaa
xchg
xchg
and
push
inc
lock
fadd
add
adc
sbb
or
sub
sbb
sub
gs
jnp
in
dec
addr16
adc
or
jae
movs
mov
nop
push
push
inc
popf
lds
aam
mov
ins
dec
js
test
or
or
cli
lea
pushf
mov
bound
rcl
dec
jge
push
ret
lods
fucomip
adc
inc
in
jg
dec
sub
pop
xchg
out
lods
lds
push
sub
adc
lahf
dec
jns
pusha
popf
out
retf
addr16
fld
push
fdivp
push
inc
fnstenv
sub
call
lds
mov
mov
(bad)
jns
mov
ffreep
pop
outs
xchg
daa
lds
or
lahf
test
rep
pop
mov
nop
or
add
push
aaa
fwait
ss
in
and
sub
xor
scas
dec
imul
push
out
mov
push
shl
hlt
stc
pop
mov
jp
add
jle
xchg
mov
aaa
loope
or
stos
sub
jmp
ror
ret
pop
shr
inc
test
out
bound
test
adc
data16
cmp
inc
retf
bound
xor
sub
movs
pusha
ror
xor
ficomp
jle
out
out
or
push
pop
loopne
fs
retf
push
xchg
out
mov
adc
xchg
cdq
mov
das
call
mov
sbb
xor
ficomp
and
aad
mov
push
jmp
pop
pushw
or
sbb
xchg
xchg
jne
movs
cmc
adc
mov
cmp
mov
js
mov
movs
inc
sub
dec
add
ja
add
mov
daa
mov
call
adc
je
pop
mov
icebp
imul
xchg
popa
retf
add
add
(bad)
jge
mov
jno
mov
mov
stc
stos
inc
push
pop
add
iret
jno
(bad)
stc
fistp
mov
ss
arpl
xor
pop
jl
adc
mov
(bad)
jmp
ja
sbb
inc
sar
add
xor
add
xchg
(bad)
aas
loopne
xchg
inc
js
pop
hlt
push
xlat
dec
push
jge
push
xor
clc
dec
lock
aad
dec
aaa
lods
stc
and
hlt
inc
cmp
adc
test
ret
mov
inc
xor
cs
repnz
lods
inc
fldcw
lock
sub
imul
adc
rcl
jbe
shr
add
xor
out
pushf
stos
add
cmp
outs
js
push
or
xor
jmp
add
test
cmc
lds
loopne
push
outs
(bad)
scas
jmp
cmps
mov
inc
inc
ret
mov
cmp
dec
out
sbb
inc
mov
add
loope
jnp
inc
jne
mov
(bad)
movs
dec
sub
call
call
fdiv
loope
mov
ja
(bad)
pushf
push
pop
xchg
jne
(bad)
in
cli
push
test
xchg
retf
xchg
jne
mov
add
xchg
sub
scas
pop
pop
stos
mov
pushf
mov
leave
int
into
xchg
push
xchg
sbb
dec
les
add
std
xchg
or
es
jge
adc
adc
add
mov
pushf
or
fnstenv
xchg
mov
call
cmp
adc
pusha
(bad)
cmp
jns
out
pop
and
mov
out
jle
ins
mov
ins
xchg
movs
sub
push
adc
jg
xor
scas
cmp
movs
push
stos
leave
inc
in
call
xor
leave
(bad)
push
cwde
fucom
sub
jge
jno
into
add
popa
outs
cmp
inc
bound
dec
jp
ins
mov
sbb
movs
data16
inc
xchg
jecxz
mov
aam
popf
lea
xchg
pop
fdivrp
pop
push
rcl
sbb
xor
add
pop
xor
xor
int3
jae
jle
xor
loop
in
sub
and
jl
jne
in
add
sub
mov
sbb
mov
push
xor
in
or
pop
daa
repz
jmp
cmps
call
add
jns
out
sahf
dec
sbb
inc
xchg
pop
jno
mov
mov
ins
pushf
add
mov
mov
push
je
(bad)
lock
mov
loop
xor
inc
retf
and
pop
stos
cmps
xchg
lods
es
test
test
jbe
dec
inc
or
je
inc
loopne
mov
sub
out
scas
sub
clc
inc
neg
push
fwait
push
mov
jge
adc
fidiv
dec
js
jle
jp
sti
jl
les
in
mov
mov
adc
popa
(bad)
mov
pop
cmp
mov
inc
xor
fisubr
fucomip
and
dec
xchg
push
xchg
jbe
push
retf
sub
(bad)
jmp
and
dec
jl
sbb
(bad)
xor
jmp
dec
inc
outs
mov
add
inc
jg
xchg
dec
mov
mov
or
je
inc
icebp
cld
inc
sub
scas
xor
imul
icebp
fnstenv
push
xchg
sbb
xchg
pushf
and
(bad)
call
sbb
jg
xchg
mov
sub
fisttp
movs
jns
jge
(bad)
sub
xchg
pop
xchg
push
dec
or
adc
mov
adc
mov
push
(bad)
jns
cmp
or
imul
inc
(bad)
sbb
or
adc
stos
hlt
pushf
inc
xchg
xchg
push
dec
adc
adc
es
sub
sub
loop
ror
lock
cmp
adc
fidiv
sub
or
aas
add
aas
sbb
xor
jbe
xor
hlt
cmp
shl
jbe
(bad)
rcr
cmps
ret
push
mov
out
loope
mov
das
lods
and
xor
jp
stos
mov
dec
xchg
sub
sub
cmp
out
jmp
out
lea
mov
lahf
in
dec
aam
repz
retf
addr16
add
cmp
out
retf
mov
jle
aas
shr
sub
out
pop
dec
pop
and
push
gs
jge
ret
fimul
add
sbb
das
push
std
popa
sbb
fistp
inc
push
clc
fisttp
scas
sub
ja
sbb
jmp
sbb
adc
adc
jbe
jo
sbb
sbb
aam
push
mov
mov
jae
std
adc
shr
jns
xor
shl
jle
jbe
adc
fwait
cmp
rcr
data16
(bad)
xor
test
cmp
sti
loope
retf
mov
xor
mov
fcomp
or
mov
cmps
pop
nop
sub
cdq
sbb
dec
fdiv
test
mov
jo
mov
mov
adc
js
push
cmps
dec
ret
mov
cmps
daa
inc
bound
add
xor
lock
jb
ins
fidivr
sti
sahf
xchg
pop
scas
jle
jne
jo
sub
jne
add
add
(bad)
data16
es
pop
jne
jl
xor
clc
bound
and
or
sub
pop
pushf
cmps
xor
enter
mov
cmps
push
push
scas
push
jo
cli
popf
in
mov
iret
pop
dec
cmp
shrd
jb
mov
movs
(bad)
xchg
jmp
adc
xchg
aam
dec
int
xchg
arpl
test
push
mov
push
push
sbb
cld
idiv
sub
jae
cmp
ret
xor
mov
in
mov
mov
cmp
mov
outs
and
and
push
add
ds
into
dec
dec
cmp
in
call
aad
xor
imul
in
loope
or
xchg
retf
mov
xchg
mov
adc
mov
pop
inc
xor
sbb
adc
adc
out
in
xchg
add
out
and
push
cmp
mov
sahf
xor
(bad)
iret
scas
(bad)
fisttp
push
mov
jl
sub
push
icebp
jno
push
in
loop
sbb
inc
sub
mov
mov
push
mov
test
sahf
pop
outs
inc
adc
pop
xlat
inc
inc
out
sbb
dec
ss
arpl
mov
xor
(bad)
adc
inc
cmp
mov
mov
or
xchg
push
pop
push
shl
inc
fs
mov
int
sub
popf
fbstp
mov
(bad)
mov
dec
xchg
rcl
jne
push
pop
push
jbe
out
dec
fld
push
stc
imul
dec
cmp
cmp
bound
add
xchg
xchg
pop
sub
xor
or
push
inc
mov
test
aad
and
and
into
lds
mov
xor
and
jp
pop
jmp
and
popa
jae
xchg
xchg
dec
jbe
addr16
and
leave
movs
dec
daa
push
push
or
repnz
mov
ret
das
xor
aam
ret
mov
pop
(bad)
xchg
movs
mov
add
leave
pop
outs
lods
xchg
clc
mov
sub
push
movs
repz
cli
stos
xlat
aas
test
cdq
loope
addr16
or
jmp
(bad)
sahf
mov
stc
dec
sub
pop
jmp
jne
mov
mov
dec
sahf
ret
data16
sbb
xchg
sbb
sub
call
push
add
jmp
(bad)
sti
mov
add
cmp
xor
or
mov
dec
mov
int3
cs
and
jg
jmp
psubw
leave
pop
cdq
sahf
ins
rol
stos
jl
lods
test
cdq
adc
clc
cdq
xchg
leave
pop
dec
js
add
ror
es
inc
pop
outs
cs
mov
imul
pushf
outs
scas
xchg
out
lds
mov
jp
leave
in
pop
pop
xchg
int
pop
loopne
lods
popf
pushf
dec
push
in
out
ret
ins
lods
nop
sub
add
das
push
jecxz
adc
inc
punpckhwd
rol
cmp
fld
std
sub
sub
lock
jmp
cmp
push
out
int3
add
icebp
mov
dec
add
adc
fdivr
push
push
sub
icebp
(bad)
shl
adc
int
popf
outs
jnp
sub
lds
(bad)
pop
pop
jg
icebp
test
ret
scas
fsubr
movs
sub
sub
out
clc
enter
mov
or
push
add
dec
arpl
jb
iret
ror
in
add
aam
sbb
push
mov
das
iret
stc
fcom
loopne
pop
xchg
cwde
call
sub
imul
or
shl
push
pop
rcl
dec
xlat
xchg
push
jle
mov
mov
pop
xor
sahf
stc
into
sbb
add
jg
mov
sbb
push
pop
sbb
jb
icebp
ja
sbb
sub
and
test
pop
push
cmps
test
adc
jge
xchg
or
sahf
lods
push
or
inc
(bad)
into
outs
jno
pop
imul
and
xchg
pop
jl
adc
xchg
jl
data16
daa
leave
movs
mov
push
jns
mov
jge
cs
icebp
xor
dec
jb
ins
cmps
les
enter
xchg
xchg
jns
sub
xor
call
jnp
popf
xchg
pop
add
adc
sbb
jle
fldcw
cdq
clc
cmp
add
push
js
mul
test
hlt
dec
stos
cs
enter
fsub
cmps
dec
push
lods
fcomp
inc
mov
mov
imul
xchg
add
das
add
or
inc
sbb
cli
sub
dec
outs
or
movs
dec
mov
sub
idiv
stos
mov
mov
popf
call
mov
ins
stc
and
and
adc
wrmsr
and
add
imul
cdq
jg
int3
pop
adc
cmps
pusha
int
outs
cmpxchg
and
sub
cwde
pop
loop
dec
imul
test
fdiv
idiv
add
leave
adc
ins
or
mov
pop
add
adc
cmp
pop
mov
gs
out
retf
daa
cmp
sub
outs
ss
pop
dec
sub
ret
pop
push
les
mov
xchg
and
popf
repz
out
(bad)
sub
add
pop
cmp
aas
and
jmp
pushf
pushf
retf
pop
push
lods
lods
adc
rcr
shl
iret
add
pop
test
dec
adc
mov
ror
das
fwait
sub
shl
mov
retf
add
ja
pop
(bad)
mov
jmp
jnp
aas
jo
inc
imul
xor
jno
call
xchg
loopne
sub
cli
out
sub
inc
add
xchg
cmp
ins
data16
popa
inc
mov
dec
or
xor
xchg
cdq
ins
cmp
sbb
lahf
outs
pushf
test
xor
clc
mov
shl
aam
jmp
sbb
(bad)
mov
sub
in
push
pop
(bad)
mov
pop
push
scas
ror
cmps
aam
popf
xor
xor
jge
iret
scas
enter
aas
out
push
jae
je
lock
cmps
sahf
adc
jmp
rcr
dec
or
xchg
fcmovnb
mov
jmp
int3
and
(bad)
push
ficom
shl
icebp
jnp
push
jp
mov
leave
stc
(bad)
jo
data16
dec
add
adc
or
xor
fmulp
into
stos
test
in
pop
add
ret
and
jno
test
mov
sbb
ret
lahf
jg
xchg
mov
leave
fisttp
push
pop
sbb
or
add
mov
sub
data16
fdivr
enter
jp
mov
sbb
mov
jmp
stc
enter
adc
xchg
mov
xchg
cli
scas
mov
xchg
ja
push
adc
mov
cmp
jns
and
fmul
jbe
inc
sar
mov
clc
xor
cdq
xchg
outs
fstp
xchg
popf
push
mov
inc
adc
cmps
cmp
and
hlt
iret
cdq
pushf
cmp
xchg
xor
mov
adc
ss
xchg
add
movs
fbstp
dec
xchg
mov
in
cli
add
mov
cld
sbb
xor
repnz
mov
xchg
sub
mov
sub
jmp
bound
xchg
xchg
sahf
data16
inc
pop
retf
sar
inc
sbb
pop
adc
xor
dec
into
lds
mov
(bad)
bound
push
sub
push
mov
iret
ss
pop
jo
or
pusha
loopne
aas
adc
mov
push
lahf
push
stos
adc
pop
xchg
jbe
adc
out
push
loopne
aaa
pop
push
(bad)
clc
rcr
das
(bad)
mov
inc
jmp
adc
int3
in
and
push
lea
data16
xor
push
mov
xchg
cmps
dec
inc
test
jns
jno
jl
xor
sbb
fnclex
or
ja
cs
test
pusha
int3
or
retf
ins
mov
in
cmc
pop
repz
inc
inc
fild
sbb
mov
mov
hlt
inc
fs
sub
aas
sbb
jns
jl
ss
scas
test
je
jmp
jmp
out
aaa
cmps
sub
inc
push
(bad)
jl
ds
fistp
std
ret
push
dec
ja
add
leave
add
xchg
(bad)
dec
in
test
cmp
(bad)
fcmove
sub
xchg
ja
sbb
push
sahf
xor
mov
and
mov
pusha
test
push
and
out
pcmpeqw
imul
or
mov
lock
mov
ds
imul
stc
repz
cmps
outs
xor
pop
(bad)
sbb
out
mov
leave
xchg
das
cs
pop
lods
fwait
stos
add
sbb
fistp
add
sub
je
inc
enter
jg
mov
sub
mov
sar
jmp
pop
push
test
stos
jp
and
(bad)
stos
lods
and
pop
outs
sbb
sbb
out
mov
mov
test
mov
mov
out
inc
loope
ret
es
mov
or
jmp
scas
mov
(bad)
loope
test
nop
cdq
fdivr
daa
xor
add
mov
jge
cdq
fbld
jecxz
xor
loop
fst
scas
scas
adc
ins
imul
cld
cmp
nop
mov
call
pop
jp
in
pop
nop
mov
arpl
sbb
in
dec
mov
lea
add
xchg
cmp
inc
ins
mov
div
in
loope
xor
(bad)
imul
cmps
shl
ins
xlat
xchg
scas
addr16
popf
cmps
mov
xor
mov
push
les
cmp
add
repnz
mov
test
stos
popf
add
push
in
push
(bad)
loopne
lock
in
xor
sub
jmp
loopne
fstp
shl
xlat
and
outs
mov
sbb
scas
xchg
xor
(bad)
je
mov
je
pop
dec
or
xor
(bad)
rol
xchg
lds
push
retf
sub
popa
lods
(bad)
rcr
and
or
dec
or
retf
cmp
cwde
push
sub
xor
nop
and
stos
out
push
repz
outs
std
jmp
push
mov
mov
push
xor
clc
in
in
hlt
ins
fwait
push
inc
inc
jo
xchg
push
cmp
je
jmp
(bad)
and
pusha
xlat
(bad)
in
pop
fcomi
jbe
sbb
aaa
sbb
lahf
sbb
add
cmps
gs
add
jns
ror
jne
sub
rol
outs
mul
mov
lods
cmc
and
pusha
das
mov
mov
or
clc
cmp
shl
bound
out
sbb
xchg
push
rcl
hlt
das
ins
xor
test
push
gs
sub
pop
lods
repnz
popa
pop
mov
jnp
sub
jno
mov
ja
dec
retf
call
ds
xchg
jge
xor
and
sti
loop
pusha
xchg
loopne
or
lock
add
mov
pop
pusha
xor
out
out
sti
dec
es
dec
xor
mul
stos
or
iret
les
(bad)
jp
ja
mov
into
jp
pop
movs
inc
push
push
in
idiv
mul
outs
or
cmp
pop
aaa
dec
lods
rcr
or
mov
mov
or
pop
mov
cmp
pop
cld
sbb
push
add
or
or
jmp
mov
jo
out
std
in
mov
pop
outs
and
add
and
repnz
lods
out
pop
cdq
cli
pop
enter
or
push
popf
sar
inc
adc
and
bound
in
mov
xor
fisubr
retf
mov
jno
cli
xor
in
sub
mov
add
bound
or
sbb
popa
fmulp
pop
pop
xor
sbb
retf
adc
enter
lock
stos
mov
in
(bad)
xor
ror
fist
xchg
pop
(bad)
sbb
leave
icebp
xor
(bad)
add
and
and
sbb
push
ss
pop
mov
scas
mov
cmp
mov
inc
mov
inc
push
mov
mov
shr
push
add
aam
and
mov
movs
outs
repnz
ret
jge
data16
sub
jmp
aaa
and
neg
adc
mov
ror
sbb
sub
iret
inc
jne
pop
push
in
je
jb
inc
push
test
leave
add
imul
add
jbe
fst
inc
je
stc
cmps
jmp
pop
jmp
mov
arpl
cmps
jns
cmp
mov
cmps
sub
cmp
(bad)
push
mov
mov
pop
ds
mov
cmps
pop
inc
nop
enter
mov
jb
pop
cli
inc
inc
inc
push
dec
test
(bad)
inc
loopne
jg
xchg
jo
cdq
ins
sub
test
dec
xchg
jge
adc
ror
int3
dec
push
or
mov
test
push
mov
popa
aad
jl
fisubr
fistp
movs
ins
sub
pop
cmp
jmp
mov
xchg
into
push
mov
pop
cmp
jne
xchg
ja
int
xor
push
mov
jmp
or
xchg
pop
nop
push
inc
(bad)
iret
xor
or
sbb
jns
add
fmulp
mov
test
out
call
fdivp
(bad)
push
nop
add
adc
cld
lds
inc
cwde
pop
push
jmp
inc
push
adc
lea
ret
bsf
mov
aas
into
in
xchg
imul
out
retf
jl
in
xlat
lds
or
ret
bound
sub
push
inc
mov
aaa
push
inc
test
aam
inc
jbe
ja
int
add
lea
lods
mov
in
addr16
pop
cld
popf
pop
mov
rol
cwde
fstp
xchg
adc
je
inc
jmp
adc
sti
movs
ud2
cmp
xor
sub
push
scas
in
add
arpl
out
push
out
(bad)
or
xchg
retf
cmp
pop
mov
xchg
lahf
add
pop
movs
mov
mov
dec
mov
cmp
mov
les
mov
and
outs
ss
or
xor
nop
iret
add
sbb
cmps
mov
inc
pop
add
xor
aaa
das
jbe
jb
cmp
pop
mov
fwait
pop
cmps
ds
icebp
pop
sahf
das
data16
xor
and
push
dec
inc
add
cmp
and
icebp
sub
bound
jmp
rcl
lock
add
push
mov
or
cmp
xor
(bad)
jl
and
cmp
je
rcl
push
or
adc
pop
loop
enter
(bad)
xor
and
sahf
push
sbb
sbb
outs
mov
push
sbb
lea
test
dec
inc
leave
(bad)
pop
movs
inc
iret
call
pop
adc
sub
pushf
retf
mov
jno
cdq
loopne
mov
pushf
jmp
dec
add
out
sub
mov
add
sar
fstp
into
mov
in
int3
cmps
shl
mov
pop
and
dec
enter
fsubr
out
nop
movs
mov
gs
iret
pusha
jle
mov
jno
pushf
mov
scas
outs
retf
aad
mov
xor
leave
pop
iret
cmps
int
mov
pop
gs
sbb
icebp
cmp
daa
(bad)
fiadd
sahf
xor
cwde
cmps
cvtpi2ps
cmp
pop
mov
test
add
(bad)
lods
adc
dec
sti
int3
add
push
mov
mov
cwde
dec
in
xor
lods
adc
(bad)
(bad)
bound
jns
push
into
push
sub
test
scas
adc
push
loop
in
cmp
inc
aam
loopne
sub
cld
mov
add
xchg
je
ins
jmp
ret
inc
jo
xchg
push
loop
mov
and
rcl
aaa
add
push
in
lods
rcl
rol
(bad)
sbb
arpl
inc
mov
imul
dec
jne
cwde
retf
adc
adc
rol
cdq
popa
sub
cmp
out
arpl
loopne
or
(bad)
retf
xlat
pop
cmp
sub
and
dec
adc
adc
mov
js
outs
fucomi
and
or
call
add
loopne
retf
jae
int3
aad
inc
sub
and
int
sbb
or
or
rcl
fadd
pop
mov
hlt
call
add
and
jne
cs
inc
sahf
les
ficomp
mov
call
xchg
jp
(bad)
pop
xchg
loopne
fld
xor
mov
rcr
jmp
mov
dec
ds
sub
xlat
cs
call
call
outs
push
call
sbb
xchg
jmp
mov
cwde
sbb
lea
pop
call
xor
jno
inc
ret
cld
add
adc
dec
pop
pushf
hlt
(bad)
jb
xchg
pop
es
pop
fwait
js
mov
pop
iret
sub
pushf
jo
cs
xchg
xor
and
mov
jns
dec
xor
mov
jge
aaa
jp
or
mov
jecxz
je
add
xchg
push
lds
mov
adc
dec
mov
mov
aad
hlt
push
int
jp
cmp
or
out
cli
adc
mov
or
xchg
mov
pop
in
into
jmp
dec
clc
cmc
lea
cmc
les
jo
add
das
jae
cmp
cmp
jb
icebp
dec
mov
int3
mov
clc
mov
icebp
sbb
pop
movs
loop
(bad)
je
pop
jns
jbe
jecxz
xor
nop
pop
rcl
cmp
pushf
rcr
mov
cli
pop
xor
sbb
rdtsc
pop
sbb
cs
xor
pop
xor
sub
fbstp
sti
pop
push
int3
icebp
mov
xchg
lds
hlt
or
movs
cmp
mov
xchg
jle
sar
retf
or
js
pop
inc
adc
jno
ins
addr16
ret
sbb
aam
les
mov
pop
mov
cmp
or
mov
mov
mov
inc
xchg
cdq
mov
mov
repz
add
int
stos
movs
call
push
mov
xlat
sbb
inc
inc
je
cmp
popf
xchg
inc
stos
jmp
cmp
inc
pop
nop
xchg
pop
and
add
mov
out
std
cmp
mov
(bad)
rol
adc
in
jle
ins
and
rcl
jmp
shl
add
call
jle
(bad)
fistp
adc
mov
add
mov
inc
(bad)
loopne
je
jno
fiadd
fist
aad
lock
test
test
xchg
mov
mov
ret
sbb
aad
rol
dec
(bad)
(bad)
(bad)
out
mov
adc
jp
(bad)
bound
fbld
pop
mov
movs
cmp
push
adc
push
sbb
retf
frstor
jne
add
pushw
stos
cmp
lock
stc
jns
xchg
mov
jmp
jo
lods
or
jo
in
and
(bad)
xor
inc
jg
cwde
imul
fist
movs
shl
adc
and
mov
gs
sbb
pop
jecxz
out
stos
clc
push
xor
mov
or
ja
xor
popa
adc
test
xor
add
pusha
adc
pushf
sub
popa
and
jbe
arpl
push
shr
mov
sbb
jbe
es
dec
inc
mov
mov
rol
mov
sar
mov
imul
test
fdivr
or
jle
pop
jge
call
mov
pop
retf
and
in
adc
fidivr
call
adc
adc
xchg
mov
out
cmps
cmp
popf
cli
pop
adc
mov
push
mov
inc
or
cs
aas
xor
arpl
push
push
loope
cmp
out
les
fmul
rol
das
and
mov
xor
pop
ins
fst
icebp
fnsave
test
inc
pop
jp
or
mov
add
pushw
cmp
dec
enter
jmp
add
jg
(bad)
aaa
cdq
push
pop
inc
ret
cmps
and
ds
mov
das
xlat
(bad)
fist
(bad)
push
jns
lods
add
cmp
fnstcw
or
xor
pop
mov
mov
or
or
push
inc
mov
fldcw
ud2
mov
xchg
stos
jp
out
sub
push
aam
ret
adc
in
and
pop
push
xor
lods
sbb
inc
lea
xor
bound
hlt
mov
inc
enter
lock
mov
bndldx
xchg
cmp
pushf
ss
and
xor
sub
sub
in
and
mov
loope
mov
xchg
fwait
mov
pushf
xchg
mov
sbb
(bad)
out
cmps
pop
fucomi
int
adc
fisubr
xor
cld
shl
push
push
sub
out
and
dec
sbb
stc
cmp
lahf
scas
cld
es
add
dec
addr16
add
sbb
jbe
cld
shl
mov
mov
push
xchg
mov
cmp
push
daa
mov
test
adc
ins
mov
fild
add
push
pop
into
sbb
(bad)
aad
cmp
popf
sub
cwde
addr16
fcomp
add
mov
pop
xor
mov
add
call
push
push
push
out
push
and
jbe
or
in
adc
cs
popf
repz
push
jl
add
out
pop
int3
arpl
dec
test
(bad)
hlt
sbb
cmp
dec
add
push
mov
(bad)
sti
int
outs
fwait
and
xor
inc
dec
ss
dec
imul
adc
adc
clc
mov
xor
movs
xchg
xchg
cli
mov
rol
cs
in
cs
addr16
sbb
jg
pusha
mov
dec
(bad)
push
xchg
pop
cs
mov
ror
inc
cmps
jmp
div
inc
or
repnz
push
jae
jle
jbe
shl
movs
add
xchg
mov
inc
in
pop
adc
adc
iret
fdivp
pop
pop
and
cmp
xchg
push
loopne
xor
cs
imul
cld
fnsave
inc
dec
stc
sti
test
cmps
out
xchg
and
fisttp
inc
mov
fs
ret
dec
or
xchg
mov
shl
outs
cwde
dec
ret
jne
dec
mov
dec
and
shr
(bad)
enter
ror
xchg
push
xor
jae
dec
push
push
cmp
or
mov
push
adc
(bad)
jmp
push
pusha
jns
dec
hlt
outs
movs
repnz
and
cmp
xchg
in
mov
dec
jne
sub
push
les
sub
sti
push
xor
lahf
popa
jle
xchg
xchg
lods
mov
loop
fld
in
aad
mov
xor
iret
cmp
lock
dec
cmc
mov
out
std
jle
xchg
jbe
xchg
adc
adc
call
mov
bound
inc
ins
out
or
or
lea
mov
daa
pop
int3
push
aaa
cmp
pop
mov
fidivr
repz
pop
and
sbb
inc
sar
imul
pop
stos
pop
sbb
enter
mov
push
jmp
(bad)
into
daa
cwde
and
and
mov
rcl
push
push
push
std
(bad)
push
hlt
js
pop
jp
in
xor
and
sbb
pop
push
call
xchg
adc
fadd
pusha
rcl
add
pop
inc
and
and
sar
fisttp
xor
pop
test
fild
stos
push
sbb
(bad)
jo
mov
mov
fsubr
or
cmp
scas
and
pop
cmp
jmp
xchg
xor
or
je
or
cli
jmp
sbb
ret
cli
cmps
test
mov
xor
ins
mov
fs
dec
repnz
mov
lods
xor
push
fcomp
outs
mov
cmp
xor
call
pop
out
std
mov
xchg
push
or
mov
jecxz
push
xlat
mov
aas
imul
sbb
xor
jmp
inc
xchg
rcr
loope
outs
pop
sub
mov
mov
inc
push
mov
push
pop
xchg
mov
jno
(bad)
xchg
jp
into
inc
daa
xchg
mov
inc
inc
pop
movs
pop
sbb
pop
sub
aad
xchg
cs
cwde
dec
gs
movs
cmp
pop
sbb
out
sbb
mov
mov
and
aad
jp
adc
lea
lea
xor
cmp
mov
xor
call
cwde
and
les
inc
inc
pop
test
and
jae
and
cmp
pop
iret
or
test
inc
pop
int
dec
sbb
dec
push
and
lods
cld
sti
fwait
lea
icebp
pop
mov
ins
cmp
jmp
clc
adc
inc
sti
data16
enter
icebp
push
cmp
add
pop
pop
adc
pop
in
and
repz
retf
test
xlat
inc
mov
adc
jmp
cmp
push
stos
xchg
or
scas
faddp
sahf
jge
das
lods
das
rdpmc
inc
js
sbb
pusha
push
dec
dec
pop
xor
lea
xor
sbb
pop
cmp
inc
push
daa
nop
ficom
fwait
gs
dec
mov
dec
cmp
pop
mov
shl
mov
dec
push
outs
push
in
pop
js
push
test
and
into
inc
js
outs
jnp
cli
cmps
add
repz
inc
mov
add
icebp
call
aaa
pop
pop
push
pop
stc
xchg
jecxz
xor
mov
(bad)
(bad)
and
adc
nop
idiv
lods
fidivr
xor
jbe
cmp
push
jge
retf
hlt
xor
or
jge
jns
aas
mov
xor
dec
scas
fsubrp
call
mov
in
cli
xchg
or
stc
shl
movs
mov
cmps
popa
sar
loopne
sub
xor
and
fs
mov
pop
shr
and
daa
mov
xor
in
test
mov
mov
neg
cmp
in
jno
fidiv
and
je
or
mov
xchg
mov
(bad)
push
ret
mov
pop
cmps
scas
cmp
xchg
push
(bad)
(bad)
mov
pop
sbb
retf
mov
daa
jmp
fst
enter
mov
movs
xchg
or
retf
scas
xchg
xor
neg
sbb
cmc
push
imul
lds
sbb
loop
(bad)
inc
lahf
outs
push
add
jne
xchg
xchg
loop
xor
setno
xchg
pop
mov
test
mov
das
add
dec
fst
ret
ins
pop
hlt
nop
jns
mov
inc
mov
adc
out
add
test
ffreep
or
repz
push
inc
fwait
imul
(bad)
jecxz
inc
xchg
or
scas
xor
jle
loop
aad
imul
dec
fwait
xchg
mov
stos
out
sbb
stos
aad
ja
popa
jge
cmp
lods
retf
(bad)
popf
dec
enter
pop
fs
lea
shl
call
jp
pop
(bad)
mov
xchg
stos
push
call
mov
xchg
cld
adc
xchg
mov
sub
push
mov
loope
pop
stos
cmps
push
sub
dec
pop
and
xchg
pop
mov
jnp
fiadd
mov
cmp
jae
int
outs
mov
imul
out
or
push
call
mov
inc
cld
hlt
(bad)
ds
into
int3
and
jmp
mov
jno
xor
enter
sar
lods
(bad)
push
sbb
inc
and
cwde
clc
mov
jno
clc
call
xlat
jecxz
xchg
clc
push
sub
lahf
cmc
je
fld
es
ins
and
xchg
mov
cmp
pushf
fild
retf
fwait
out
inc
jne
ins
cmp
mov
std
movs
or
int3
ds
in
inc
dec
or
and
xchg
dec
or
aas
sub
sbb
and
jmp
xchg
popf
push
test
mov
dec
ror
jg
repnz
or
dec
or
dec
sar
xor
out
lea
arpl
push
lods
lods
fnstsw
popa
mov
(bad)
pop
in
add
sub
lods
mul
push
hlt
inc
sar
lock
adc
imul
je
mov
sub
mov
sbb
movs
es
mov
fldcw
inc
or
sub
sub
push
jmp
stos
loop
sub
mov
dec
jge
sbb
inc
ja
adc
rol
jae
ins
into
xchg
add
cmps
addr16
sub
inc
jmp
fwait
retf
pop
out
shl
pop
loop
cmp
into
jmp
test
lock
lea
xlat
ds
cld
dec
out
aad
jnp
push
outs
sti
xor
xor
inc
push
fcomp
ss
xor
inc
leave
pop
jns
loopne
inc
xchg
mov
xor
push
lods
ins
jg
jp
outs
jg
xor
aad
cmps
repz
loope
or
push
(bad)
jmp
scas
inc
aad
loope
in
and
ja
leave
jl
unpckhps
enter
jge
inc
add
sub
inc
jae
pop
cmps
xor
cmp
btr
or
inc
adc
daa
ror
shl
add
jg
add
fadd
mov
loopne
inc
je
mov
xchg
push
leave
shl
out
sbb
fimul
sbb
cmp
inc
enter
fisub
mov
test
ins
(bad)
in
in
and
add
pushf
hlt
mov
shl
adc
shr
jnp
imul
jbe
mov
cmp
bound
arpl
push
adc
fdiv
cli
movs
in
mov
or
mov
pop
sbb
xor
ror
sbb
pop
div
retf
(bad)
cmc
adc
pop
loope
xchg
xor
ins
add
jecxz
xor
in
cmps
je
gs
add
clc
pcmpeqd
lods
hlt
mov
or
imul
jecxz
(bad)
rcl
fsub
or
and
push
inc
xchg
cmps
jl
in
adc
dec
push
test
push
add
push
and
push
adc
mov
lods
mov
fisub
ror
push
bound
dec
imul
mov
cmp
scas
mov
cmps
call
mov
dec
int3
or
js
dec
jge
jg
aam
fwait
xchg
stc
inc
sbb
xlat
call
into
repnz
cmp
pop
and
rcr
pusha
cmp
sub
xor
lea
inc
dec
pop
add
xor
inc
mov
pushf
cmc
push
(bad)
or
xchg
ficomp
sub
jecxz
inc
fst
jmp
nop
sbb
push
(bad)
sbb
les
(bad)
arpl
sub
jmp
lahf
pop
loopne
aam
or
gs
sbb
cmp
dec
or
popf
aam
mov
stos
lods
mov
or
or
xchg
ja
jns
adc
outs
dec
mov
push
pop
loope
int
call
mov
adc
test
push
sub
scas
cmps
pusha
or
jae
jnp
lea
inc
cli
jo
push
inc
push
out
mov
cmps
push
and
xlat
and
aad
test
gs
shl
dec
cmc
pop
ja
mov
pushf
stos
cmp
mov
mov
inc
xchg
and
inc
jl
sbb
cmp
arpl
and
pop
(bad)
(bad)
jb
(bad)
out
cmc
je
data16
mov
test
ret
sahf
and
ins
ins
ins
mov
adc
xor
adc
pusha
repz
pushf
jns
mov
js
in
mov
movs
xchg
addr16
mov
stc
vmread
pop
iret
dec
repnz
xor
mov
mov
pop
adc
mov
jecxz
dec
xchg
cmps
movs
xor
inc
xor
repnz
xor
mov
jmp
test
addr16
daa
xor
pop
mov
add
cmp
jbe
xor
aas
loopne
retf
mov
lea
dec
and
jno
das
adc
mov
arpl
popa
inc
jnp
add
cdq
add
cmp
das
movs
test
mov
cmps
sub
fwait
into
bound
xor
cmp
bound
ja
out
pop
sub
pop
ss
and
xchg
xchg
(bad)
repz
leave
aaa
xlat
popf
cmp
jge
cmp
das
(bad)
jge
imul
repnz
and
data16
or
nop
or
fstp
call
sub
sub
inc
test
jl
dec
cdq
jbe
pop
sbb
les
stc
stos
cmp
out
push
in
pop
xchg
sub
adc
dec
test
ret
or
fcom
ins
lods
ficom
dec
rcl
mov
mov
jp
lea
push
cmp
fidiv
mov
gs
icebp
dec
xchg
mov
push
not
push
(bad)
xor
pop
fyl2xp1
cmp
xor
add
sbb
lock
mov
push
xor
jecxz
pushf
sbb
mov
retf
push
outs
inc
pusha
rol
loope
mov
aas
call
stos
fistp
sub
(bad)
and
outs
movs
test
dec
sub
(bad)
sub
push
iret
dec
xor
sbb
bound
inc
jle
retf
jl
or
cmps
test
pop
mov
push
scas
idiv
mov
cmps
sub
push
jl
in
cmps
mov
mov
or
mov
cmp
pop
out
mov
dec
mov
movs
push
xchg
pop
mov
inc
mov
mov
jecxz
push
sti
out
retf
mov
rcl
sbb
lock
xlat
xchg
aaa
movs
pop
cwde
or
push
les
inc
pop
mov
lahf
pop
or
jnp
adc
inc
(bad)
in
(bad)
clc
push
mov
mov
pop
sbb
add
dec
sub
mov
adc
adc
sbb
mov
int3
and
lods
push
mov
mov
cmp
test
nop
sub
inc
test
lods
dec
lods
into
cmp
push
ret
pop
cdq
lds
lahf
dec
mov
push
lea
cmp
fsub
xor
cli
xor
aaa
out
mov
cdq
std
(bad)
loope
push
out
dec
adc
(bad)
aam
retf
xchg
clc
arpl
mov
loopne
and
aam
icebp
cld
test
repnz
cmp
pop
in
jle
repnz
jno
xor
jo
pop
sbb
xor
inc
add
movs
clc
sti
(bad)
loopne
add
dec
inc
push
xor
cli
stos
pop
mov
into
push
add
fs
sbb
push
jbe
jae
dec
xchg
xchg
push
fsub
iret
xchg
jmp
sbb
dec
inc
scas
dec
call
push
jns
sbb
mov
scas
xlat
fucomi
jbe
pop
ret
pop
pop
push
xor
outs
and
mov
in
(bad)
sub
sub
cmp
test
mov
add
inc
daa
jo
mov
sar
inc
push
xor
cmovno
mov
sub
hlt
call
dec
fucomi
lds
jge
mov
lock
jge
shr
fadd
dec
jmp
(bad)
in
cmp
mov
and
fnstsw
cmp
mov
mov
sub
sbb
jo
movs
pop
movs
jns
outs
adc
jmp
out
mov
leave
fwait
pusha
and
nop
daa
aad
imul
dec
dec
jnp
or
das
int
sub
cmp
or
and
pop
lods
call
adc
ds
jmp
pusha
out
in
jns
stos
sub
sub
sbb
lods
seta
loope
cmp
jg
push
xor
stc
and
std
inc
(bad)
dec
adc
jno
js
mov
lods
pop
in
data16
aaa
and
mov
pop
bound
ins
dec
pop
je
push
test
pop
push
mov
pop
(bad)
shr
and
mov
mov
dec
lods
outs
ins
inc
or
cmp
pop
jl
in
movs
inc
aam
daa
jae
mov
iret
add
sub
in
push
jmp
das
jp
sub
hlt
xchg
dec
and
or
out
xor
fs
sti
aam
pusha
test
int
retf
jb
add
adc
aam
cmp
ins
and
icebp
jns
cwde
push
loope
adc
cmp
stos
lds
dec
fsqrt
stos
jmp
jb
push
leave
mov
push
test
gs
(bad)
inc
mov
mov
jb
into
pop
dec
mov
mov
js
js
mov
push
push
sbb
cwde
call
lods
mov
int
add
xchg
stc
adc
mov
pop
mov
(bad)
and
cld
mov
xchg
addr16
push
xchg
enter
jmp
out
stos
test
dec
shl
add
js
clc
ror
popa
jo
jecxz
cmp
sbb
sbb
ds
jge
stc
mov
cmp
pushf
or
cmp
push
lods
je
cmp
jb
sub
mov
call
inc
pop
test
stc
popf
sbb
mov
in
and
mov
jmp
mov
fidiv
mov
fadd
icebp
aad
sbb
mov
and
fdivr
dec
cld
and
loop
cmc
lods
adc
ret
shl
pop
xlat
test
cmp
pop
fs
push
sub
push
(bad)
shl
dec
inc
sbb
mov
xchg
jae
stos
scas
xchg
pop
cmp
inc
pop
sbb
scas
ja
jecxz
jnp
cdq
cdq
xchg
or
add
je
xchg
stos
out
jle
cmps
test
adc
adc
cmp
ret
and
pop
and
nop
jb
imul
hlt
int3
mov
rol
aam
popa
jno
lods
pop
iret
push
push
je
add
cmp
xchg
shl
(bad)
in
les
mov
mov
mov
xchg
dec
push
ins
push
cdq
dec
sub
pop
pop
sti
sub
jmp
out
mov
std
xor
xchg
arpl
and
bound
and
and
sub
and
push
push
lock
mov
call
xor
adc
enter
xor
cmp
mov
jbe
repz
cli
push
inc
enter
and
ficom
cdq
pop
dec
fmul
dec
loop
dec
xchg
adc
pusha
mov
outs
in
xchg
push
test
mov
xor
(bad)
mov
xchg
mov
xor
mov
in
inc
scas
sub
xlat
or
cld
xor
out
inc
in
repz
jae
loope
fild
hlt
out
and
mov
jae
enter
mov
push
push
test
dec
rol
push
cmps
mov
repz
into
dec
cmp
js
pop
jnp
jle
std
(bad)
jno
push
fisttp
and
xor
adc
xor
dec
pop
mov
test
xor
jbe
das
das
lods
mov
pushf
fldcw
punpckhbw
adc
cdq
in
outs
popf
repz
dec
fwait
inc
jne
or
and
xor
and
xor
push
out
sbb
jge
sub
jmp
je
dec
mov
push
movs
jp
dec
fdivr
or
xor
sahf
mov
mov
push
xchg
mov
inc
xor
in
cld
add
fldenv
push
or
jecxz
scas
test
outs
pop
fisttp
sbb
or
mov
jbe
scas
sub
add
clc
stc
dec
sub
int3
push
fiadd
sub
mov
adc
jns
mov
es
std
ror
jnp
lock
inc
sub
sub
xchg
(bad)
cld
nop
(bad)
scas
cmps
je
adc
xor
mov
push
mov
fs
loope
jb
lods
mov
fdivrp
aaa
fiadd
jbe
push
jbe
mov
cmp
inc
and
(bad)
mov
mov
mov
rcr
iret
add
popf
cmp
retf
push
add
mov
ss
xchg
mov
push
cdq
pop
jns
sub
or
pusha
pop
adc
dec
push
ss
cmp
xchg
adc
add
movs
push
jb
mov
pop
fistp
bound
es
sub
ret
ucomiss
js
movs
gs
mov
inc
lods
xor
in
xor
js
and
dec
or
jno
fcmovnbe
arpl
push
dec
pop
stc
stos
push
sbb
dec
mov
test
scas
jnp
cmps
popf
pop
iret
mov
js
hlt
adc
mov
jb
rcr
add
lds
push
popf
sub
int3
dec
or
xchg
push
and
xchg
fsub
push
dec
mov
inc
push
or
iret
neg
xchg
fsub
lods
addr16
rcr
lea
push
mov
jbe
movs
nop
mov
mov
enter
int
add
mov
stos
or
mov
pushf
pusha
jae
pusha
aad
cs
add
push
movs
rol
sbb
mov
ins
or
sbb
and
int3
pop
(bad)
adc
mov
push
mov
lock
rcr
adc
pop
push
cmp
rol
mov
dec
shl
mov
mov
cmps
retf
push
mov
xchg
xchg
push
push
jle
sbb
ds
mov
mov
pop
xchg
push
xchg
loopne
xchg
pop
hlt
mov
inc
sub
adc
pop
pop
and
mov
fst
pop
mov
ds
mov
pop
std
daa
call
jae
dec
jmp
ret
inc
outs
pop
stos
int3
sub
fidiv
push
and
cmp
jns
enter
call
cld
push
jae
jge
(bad)
push
pop
add
outs
loope
jnp
out
jl
add
shr
xchg
retf
sub
mov
pop
sbb
push
xlat
loopne
xor
(bad)
inc
mov
xchg
adc
fist
jb
push
cs
xchg
rcr
(bad)
pop
(bad)
out
mov
cmp
ds
or
push
jle
movs
lods
test
sbb
pusha
push
fidivr
cmp
dec
cmc
rcr
movs
(bad)
stc
scas
and
add
mov
loope
icebp
mov
push
int3
inc
lock
cmc
test
out
iret
adc
into
pop
into
inc
mov
sbb
das
ins
mov
adc
hlt
retf
int
inc
or
mov
pop
cmp
std
ret
cwde
bound
test
push
cmps
retf
pop
(bad)
jecxz
cmps
nop
rcl
shr
movs
fild
xor
cmps
es
fldcw
das
sar
add
retf
add
addr16
cld
ss
and
jmp
or
fst
push
repnz
xor
fdiv
or
and
inc
loopne
sub
cld
xchg
pop
inc
lock
les
inc
cmp
js
fisttp
in
in
xor
test
or
push
sub
cmp
ficomp
in
test
cmp
arpl
das
adc
push
icebp
in
mov
sub
(bad)
popa
popa
sub
hlt
lea
pop
pop
sbb
aaa
and
mov
cmc
mov
imul
ret
(bad)
ins
mov
je
gs
in
hlt
mov
test
push
mov
ja
fnsave
dec
daa
jbe
dec
out
sub
sub
pop
xchg
pop
mov
pop
cli
pop
out
and
into
mov
cmps
jnp
or
xor
xor
cmps
inc
mov
xchg
xlat
xchg
loopne
dec
mov
mov
pop
movs
clc
aad
xor
sahf
xchg
xor
jmp
ss
fiadd
(bad)
xor
or
mov
bound
movs
loope
fbstp
mov
sbb
pop
loopne
ret
dec
push
mov
cmp
push
fild
mov
xor
mov
mov
scas
mov
push
out
out
and
adc
ficom
ja
pusha
pop
(bad)
mov
loopne
adc
add
mov
stos
ror
test
and
jecxz
fdiv
js
pop
xor
test
scas
(bad)
sub
mov
sbb
dec
ss
xchg
retf
xchg
retf
pop
outs
sub
adc
test
ins
cld
ror
sbb
sbb
add
or
mov
mov
(bad)
adc
mov
fbld
loopne
dec
movs
inc
xlat
ficomp
sbb
lds
pop
sub
jp
int3
lahf
and
test
jne
sub
out
hlt
ror
scas
xor
fsubr
stos
jbe
or
jge
ret
and
sbb
add
jl
mov
fldcw
stos
retf
inc
daa
sub
dec
dec
out
mov
inc
xor
(bad)
jmp
inc
in
pop
fbstp
ds
inc
ret
out
xchg
addr16
cli
mov
or
dec
mov
pusha
push
gs
js
jno
sub
xor
fstp
sbb
inc
js
in
stos
in
xchg
or
push
adc
xor
loopne
mov
push
cdq
fimul
cmp
sahf
pop
jg
pusha
cmps
pop
pop
xchg
rcr
add
retf
mov
or
adc
or
sub
cmp
loop
sbb
imul
rcr
fsub
dec
xchg
movs
cld
or
mov
repz
sub
data16
and
cs
mov
stos
call
mov
mov
add
mov
ja
jbe
loopne
cld
hlt
test
jmp
ss
mov
or
and
in
sbb
retf
inc
inc
mov
into
invlpg
lds
ret
jae
stos
stos
fdiv
repz
or
mov
out
push
icebp
lods
adc
pusha
daa
cdq
mov
cmp
test
sbb
mov
sub
in
enter
jno
repnz
movs
imul
lea
pushf
movs
mov
or
adc
push
ins
lods
(bad)
mov
mov
cmps
jns
inc
(bad)
bound
inc
cmpps
fucom
and
dec
ins
ja
(bad)
ret
sbb
lods
stos
inc
shr
sub
push
xchg
outs
jo
loope
mov
push
sbb
sub
aaa
xchg
adc
fimul
pop
or
cmp
pop
or
pop
add
pop
sub
jmp
hlt
mov
xor
pop
pushf
push
add
xchg
inc
add
xor
lods
jmp
and
cwde
mov
in
movs
sar
ror
pop
mov
dec
lods
adc
pop
and
stos
sbb
sbb
stos
jns
xchg
sahf
shl
daa
jg
test
mov
aad
in
pusha
sub
jns
mov
mov
lods
shl
mov
mov
jae
adc
out
and
icebp
mov
(bad)
and
mov
icebp
stc
in
cdq
push
dec
je
pop
sbb
mov
cwde
pop
lds
add
sbb
sar
lods
pop
push
bnd
lock
xor
std
lahf
icebp
pushf
or
xor
mov
xchg
sbb
lds
icebp
popf
pop
inc
inc
in
sub
mov
dec
pop
lahf
mov
dec
adc
inc
pop
push
es
sub
stos
mov
fst
sbb
cmps
xchg
mov
inc
aaa
int3
mov
push
cwde
retf
or
mov
je
icebp
std
test
scas
(bad)
add
cmps
into
push
addr16
dec
(bad)
rcl
xchg
add
sbb
leave
sbb
repnz
call
and
and
jnp
ja
pop
aam
inc
lds
mov
pop
push
ins
in
mov
lods
mov
cmp
jae
ja
and
ficom
push
imul
mov
jmp
ret
inc
jns
push
test
adc
push
mov
fiadd
jg
cmp
ins
loopne
push
fdiv
movs
xor
add
jmp
pop
mov
inc
mov
stos
adc
mov
cmp
cmc
sbb
and
mov
adc
cmps
(bad)
daa
(bad)
mov
jb
cwde
aas
hlt
mov
(bad)
pushf
test
adc
(bad)
loope
mov
jg
xchg
scas
addr16
(bad)
or
call
sbb
test
dec
xlat
adc
push
cli
and
call
pusha
mov
and
mov
lahf
aas
sti
xor
xchg
adc
sub
and
int
mov
repnz
dec
mov
push
xor
xor
pop
lea
mov
mov
pop
mov
lahf
push
jb
(bad)
mov
sub
clc
mov
adc
mov
and
inc
cmps
push
xchg
stos
cmp
fist
jmp
mov
in
pop
retf
adc
xor
xor
cs
inc
in
pusha
add
pop
pop
jb
cmp
test
inc
leave
and
scas
aad
sar
lock
jae
nop
mov
(bad)
shrd
(bad)
ins
push
xchg
ins
clc
call
mov
add
imul
dec
mov
mov
mov
xchg
retf
jnp
jo
leave
imul
mov
ds
int3
cmp
adc
xlat
out
ret
jb
cld
mov
cmps
mov
pop
pusha
cmp
mov
xor
sbb
inc
sar
mov
call
lock
xchg
xchg
inc
cli
push
jg
xlat
pusha
outs
sub
mov
mov
int
pop
add
fdivr
das
push
mov
cld
mov
jmp
push
and
jns
aad
retf
jp
ret
fdivrp
test
test
jno
arpl
and
xor
repnz
(bad)
imul
fcmovb
jg
lock
movs
jo
fdiv
stos
clts
fld
push
jge
fs
call
(bad)
out
or
call
ja
jmp
push
test
xor
loope
loope
mov
pop
hlt
stc
or
and
mov
popa
inc
fist
sbb
and
in
add
retf
(bad)
push
ins
inc
mov
add
dec
std
cs
push
add
and
xor
push
sub
cmp
add
xchg
jge
lea
push
mov
and
inc
stos
inc
nop
icebp
and
sub
lods
or
dec
xchg
aad
loop
cmp
call
js
pop
daa
sti
or
out
dec
sbb
stos
cmp
nop
and
mov
loope
inc
scas
mov
add
xchg
xchg
jne
push
leave
in
and
adc
out
push
jmp
push
jge
or
cmp
ret
out
scas
dec
jle
scas
addr16
das
xchg
(bad)
fnclex
fwait
pop
sub
fnstsw
sbb
lods
test
mov
cmp
call
out
add
inc
dec
lahf
daa
fcomp
jnp
mov
out
inc
rcr
and
mov
xor
jecxz
lods
jb
add
dec
xor
cmc
ror
pop
(bad)
mov
aam
fstp
inc
sar
pop
movs
ret
imul
retf
adc
popa
dec
out
pop
(bad)
mov
mov
sub
pushf
out
xor
lock
out
fs
adc
xor
sbb
cmps
pop
jmp
inc
gs
retf
int3
sar
xchg
cmp
xor
sti
nop
pop
xchg
in
xor
ds
nop
inc
in
daa
jbe
movnti
fst
jo
jge
int3
aaa
sbb
mov
hlt
rcl
cmp
mov
mov
leave
iret
dec
icebp
mov
in
push
add
mov
mov
test
or
mov
inc
call
cmp
xlat
enter
xchg
jle
cmc
mov
xor
xchg
xor
mov
std
or
retf
sti
push
int
inc
xchg
cmp
push
pop
into
hlt
push
jmp
push
or
or
(bad)
mov
cmp
std
mov
and
cmp
fld
imul
dec
leave
sbb
mov
push
xchg
sub
jno
cli
push
push
cld
mov
cmps
bound
mov
aad
enter
mov
inc
out
push
retf
push
loope
push
cli
xor
cmp
or
cmp
in
push
mov
push
cmp
jmp
sub
dec
or
mov
jle
imul
sub
mov
inc
pop
in
mov
pop
mov
fisub
test
shl
icebp
nop
sbb
outs
xchg
sahf
(bad)
lock
popa
rol
jmp
sbb
pop
mov
retf
xchg
pusha
(bad)
or
dec
sbb
mov
jnp
ror
sbb
xchg
enter
cmp
daa
jl
and
test
in
outs
sub
inc
rcl
add
rol
test
es
outs
lock
fdiv
sbb
arpl
or
mov
data16
inc
test
(bad)
retf
dec
(bad)
push
pop
adc
gs
fstp
mov
sti
or
sub
adc
into
stos
cmp
xor
xor
xchg
and
les
popa
fnstenv
add
lock
and
loopne
(bad)
jno
call
je
add
jle
dec
mov
in
jne
sbb
ins
sar
adc
sbb
imul
push
mov
jo
call
js
retf
push
and
(bad)
mov
push
repnz
push
rcl
adc
into
or
ret
sbb
add
pop
pusha
pusha
pop
pop
sub
mov
mov
out
mov
cmp
add
add
dec
fmul
xchg
dec
and
call
int3
mov
pop
add
popa
and
pop
nop
(bad)
xor
push
ret
push
test
in
jne
push
in
pop
jae
ins
arpl
jp
inc
mov
rcl
dec
lock
sbb
enter
aad
mov
mov
imul
and
push
ins
sub
dec
jl
lds
fcmovnb
mov
cmp
add
pusha
xchg
inc
into
lock
sub
lds
addr16
sbb
sbb
(bad)
jl
cmp
das
sti
bound
sahf
int
pop
inc
add
xlat
cmp
mov
cmps
xchg
sbb
jmp
fcmovbe
fldcw
fadd
pop
mov
mov
sti
scas
movs
and
mov
cs
and
sub
scas
enter
les
add
fnstenv
add
fsubr
iret
in
mov
lea
sub
xchg
dec
pop
add
pushf
mov
ins
dec
or
sub
adc
and
push
data16
xor
jl
mov
aad
popf
push
mov
(bad)
sub
js
mov
inc
cwde
mov
in
dec
push
test
mov
imul
out
mov
loopne
call
ret
cmc
in
aad
pop
sub
push
les
cmp
cdq
ss
in
jo
retf
fsubr
cmp
(bad)
and
jbe
nop
sbb
jbe
pop
and
int
xchg
add
test
es
arpl
xlat
pop
adc
pop
fbld
cld
rcr
cdq
add
addr16
xor
push
imul
dec
pop
outs
retf
or
leave
adc
bound
adc
add
push
and
psubusw
imul
pop
mov
stc
mov
cs
cmp
shr
popf
fisub
inc
outs
mov
shl
add
jl
test
jae
sti
xchg
mov
push
adc
xchg
push
pop
xchg
sbb
out
outs
push
lods
lods
fistp
mov
inc
es
push
stos
dec
sahf
push
movs
pusha
mov
inc
cdq
scas
mov
aad
ins
aaa
jns
mov
cwde
lods
sbb
push
and
push
pop
jp
jmp
mov
xor
loopne
or
dec
jg
fsubr
inc
mov
loop
out
loop
mov
out
cmp
pop
sbb
push
mov
sbb
iret
cmp
inc
iret
jnp
das
cmps
shr
or
rcr
retf
mov
or
ins
inc
jge
or
dec
pop
rcr
xchg
dec
scas
hlt
mov
pushf
mov
(bad)
dec
mov
(bad)
out
adc
xchg
cmp
clc
(bad)
sahf
dec
popa
or
icebp
adc
fisttp
(bad)
rol
inc
popf
ret
jecxz
pop
fisub
cld
fist
mov
mov
mov
mov
adc
fcom
add
jle
arpl
sub
stc
cmps
aaa
loopne
or
inc
std
dec
jne
(bad)
dec
leave
dec
inc
mov
je
movs
jbe
sbb
adc
xor
push
mul
xor
retf
mov
jle
pop
(bad)
cmps
dec
xchg
push
pusha
and
jge
and
dec
out
frstor
xchg
cmps
leave
or
push
add
inc
mov
lds
(bad)
sub
push
mov
repz
xor
or
add
int3
dec
fucomip
jns
out
mov
hlt
jle
jl
cmp
pushf
ins
sar
xor
mov
mov
push
lds
fld
fsubr
and
jmp
call
iret
lods
sub
cmp
adc
cld
aam
dec
loopne
jl
mov
shr
in
push
push
lds
repnz
push
add
(bad)
ins
cmc
sbb
outs
bound
jle
cmp
mov
cmc
sub
xchg
loop
idiv
mov
lock
pop
or
adc
pop
mov
jmp
bswap
pop
fimul
inc
std
mov
cmps
mov
mov
inc
call
test
inc
push
icebp
out
sbb
movs
xor
popa
sub
int3
dec
pop
in
inc
int
dec
inc
push
xlat
div
popf
fistp
jle
imul
add
in
xchg
fcmovbe
nop
fcomp
mov
shl
xchg
mov
mov
and
loopne
(bad)
cld
jle
mov
fiadd
mov
mov
xor
leave
jecxz
jo
fisubr
loopne
aam
cmc
xchg
mov
push
push
inc
jns
inc
push
movs
ror
popf
retf
inc
sub
in
mov
dec
dec
in
fcomp
xor
enter
dec
jmp
cmp
lods
jb
sti
fst
jnp
in
mov
adc
or
(bad)
(bad)
cmp
and
nop
adc
(bad)
sti
jb
in
jl
int
int3
aam
or
push
jg
add
fcom
out
ss
push
daa
(bad)
aaa
add
adc
lahf
icebp
loope
gs
sbb
stos
mov
xchg
cld
sub
stc
sti
fwait
int
test
dec
ja
clc
cmp
inc
jae
or
adc
xchg
lds
xor
js
pop
jp
sub
pop
out
aas
or
mov
daa
inc
mov
test
loopne
lods
aaa
sbb
in
push
lods
pop
aam
xchg
addr16
std
mov
or
xchg
jmp
jecxz
xchg
dec
and
ror
in
outs
sbb
mov
mov
stc
bound
hlt
(bad)
jmp
mov
mov
jno
cmc
lods
mov
cmp
ins
aam
stos
std
addr16
rol
in
mov
mov
loop
xchg
into
jmp
mov
out
jle
mov
int3
les
xor
add
and
mov
push
and
mov
shl
mov
jo
inc
push
jae
in
pop
iret
cmp
lahf
lock
js
fldcw
pop
rcl
call
sub
(bad)
rcl
cmp
pop
adc
movs
scas
mov
mov
not
sub
mov
dec
fwait
mov
cli
xor
sahf
cmps
mov
mov
loope
addr16
lea
or
(bad)
adc
adc
sbb
pop
cli
push
xchg
sbb
repz
jnp
fadd
add
jp
jb
(bad)
sbb
mov
adc
add
inc
sub
(bad)
cld
sbb
leave
sbb
inc
cld
in
mov
push
sbb
push
lods
and
das
fmul
inc
cmp
call
cwde
jns
and
test
movs
mov
mov
jmp
or
arpl
sub
fmul
adc
pop
add
repnz
add
cmps
or
mov
rcr
add
cwde
rcr
in
ss
into
scas
cmps
cmps
stos
idiv
addr16
push
pop
hlt
(bad)
jmp
in
inc
sub
popf
dec
inc
(bad)
xchg
sbb
loop
push
stos
int3
add
mov
jo
gs
sbb
mov
rcr
jne
mov
out
pop
xor
jae
in
sub
pop
out
push
sbb
inc
imul
xor
ss
xor
add
jg
ret
or
(bad)
in
cdq
inc
xor
(bad)
shl
xchg
or
loopne
in
sbb
test
add
scas
enter
adc
adc
xchg
mov
popf
xchg
call
push
gs
ror
pop
cmp
sub
xor
mov
test
das
aas
int3
push
jns
jl
ret
jle
pop
rcl
into
(bad)
cmp
jmp
mov
inc
pop
sub
mov
mov
adc
aad
adc
aas
mov
inc
sub
jg
fcomi
in
dec
add
call
enter
jl
xchg
pop
dec
int3
(bad)
lock
xor
pop
test
std
jecxz
mov
xlat
mov
or
mov
iret
sbb
sbb
in
sub
repz
ins
(bad)
popa
cmp
or
mov
jmp
mov
out
add
sti
lods
mov
(bad)
cmps
retf
out
iret
int3
jmp
xor
and
jg
cwde
repnz
das
push
pop
and
dec
jae
ret
inc
sub
je
outs
xchg
dec
jmp
test
loope
aam
or
add
in
add
push
(bad)
sub
mov
test
mov
and
scas
fadd
xchg
(bad)
xor
mov
retf
mov
jns
pop
ret
jp
aaa
pusha
ror
xor
jmp
rcr
iret
fisub
icebp
push
std
imul
fwait
and
jne
int3
(bad)
movs
popf
movs
xchg
mov
(bad)
outs
and
xchg
mov
enter
prefetcht1
push
jae
call
push
xchg
xchg
add
adc
aam
xchg
pop
push
jl
gs
xor
cdq
ins
jl
inc
sbb
pop
mov
cs
and
das
push
sbb
cli
(bad)
xlat
in
jecxz
cmp
pusha
lds
out
(bad)
popf
ins
jb
ins
xor
ret
pop
xchg
div
out
cmp
enter
sub
jo
loopne
add
jae
mov
xchg
xor
dec
inc
jns
adc
test
sti
cmp
add
dec
inc
inc
and
out
les
lds
jns
jbe
or
test
push
pop
out
test
push
or
lods
dec
pop
ret
sub
mov
shr
xchg
adc
jbe
dec
out
push
pop
cmp
cwde
scas
(bad)
dec
dec
fstp
jo
inc
mov
je
push
inc
ror
lahf
lahf
mov
sti
ins
adc
fldcw
dec
popa
mov
jno
out
inc
ins
mov
out
fisub
outs
loopne
push
push
outs
inc
mov
(bad)
dec
shl
adc
mov
popf
pop
add
test
add
cmp
dec
pop
mov
jg
enter
pop
sbb
mov
es
push
pop
pop
out
daa
out
out
sub
test
pop
neg
jl
xor
scas
cld
sbb
gs
ds
mov
jnp
out
push
cmps
test
fucomip
xchg
pop
sti
xchg
arpl
lds
fs
jno
ret
add
jbe
jmp
nop
bound
and
adc
adc
movs
push
add
pushf
bound
jbe
aas
push
test
fmul
dec
(bad)
cmp
sti
fild
aam
ja
and
sbb
mov
gs
and
push
(bad)
enter
and
ss
jp
lods
xchg
jno
mov
ficom
xor
or
mov
mov
xor
fld
stos
push
jecxz
xor
and
imul
cli
aas
jmp
cmp
jmp
mov
adc
pop
push
xor
mov
(bad)
jecxz
mov
xchg
loopne
push
fwait
push
test
(bad)
fmul
loop
jge
lods
daa
test
out
xchg
sti
jge
outs
adc
pop
sar
adc
lock
push
adc
jmp
add
in
mov
mov
xchg
jb
lock
out
lea
mov
sub
mov
inc
sbb
push
push
mov
daa
sbb
test
fcmovne
cdq
add
jb
dec
int
add
xor
rcr
push
stos
icebp
xor
neg
push
or
push
popa
mov
repz
leave
lock
xor
bound
neg
bound
shr
stc
stos
in
sbb
pop
push
iret
mov
pusha
mov
mov
lods
add
cli
movs
ja
(bad)
inc
scas
fmulp
repnz
push
stos
jge
jecxz
maxps
stos
push
inc
in
mov
adc
pop
jecxz
ret
sub
pop
test
jl
cmp
les
aam
inc
popf
(bad)
fstp
sbb
xchg
(bad)
cmp
adc
xlat
cmp
(bad)
loopne
retf
add
and
sub
outs
sbb
cmps
stos
push
das
aam
sbb
in
shl
(bad)
in
ins
jb
cmps
out
cmp
mov
push
sub
inc
mov
out
or
fwait
pusha
rol
mov
fsub
mov
lock
add
jmp
add
jmp
inc
int3
hlt
sub
or
popf
cmp
adc
push
pop
jp
fldcw
aaa
pop
xchg
xchg
mov
add
inc
jle
jae
clc
retf
pop
jnp
out
mov
stos
xchg
neg
mov
xor
ins
cmp
cmc
test
cs
dec
mov
psubb
jg
shr
cmp
jp
gs
adc
sub
pop
movs
jmp
sar
jbe
xchg
jp
das
ins
mul
mov
mov
mov
push
mov
test
inc
mov
sbb
outs
push
arpl
sti
daa
fsubr
jae
stos
test
(bad)
retf
sub
jns
clc
xchg
sar
cmp
sti
jmp
(bad)
popa
fmul
jae
test
mov
xor
js
popf
out
mov
pop
or
imul
mov
fsubr
mov
pop
into
pop
mov
inc
or
out
or
pop
neg
sbb
xchg
loopne
xchg
push
in
in
push
mov
mov
mov
call
cdq
cmp
or
outs
or
mov
pop
aaa
leave
xor
push
cld
mov
sub
mov
inc
jb
push
fstp
jmp
mov
fidiv
jns
(bad)
lods
cmp
mov
sub
ins
add
add
sub
pop
sbb
and
stc
sti
mov
cmps
dec
shl
mov
add
out
outs
pop
inc
into
adc
cmp
sbb
daa
pusha
mov
(bad)
js
push
lea
jmp
xchg
xor
pusha
or
inc
inc
addr16
push
and
inc
ds
loope
loope
movs
mov
cmps
es
sub
outs
or
mov
cmp
das
add
retf
pop
xor
in
retf
add
sbb
pusha
push
fidiv
jmp
repz
rol
adc
repnz
pushf
xor
push
dec
fwait
gs
xor
(bad)
sbb
movs
leave
inc
jl
adc
xor
sub
xchg
add
shl
jl
mov
idiv
ins
loopne
movs
es
and
cmps
movs
cdq
sub
movs
jne
jl
xchg
pop
xchg
mov
(bad)
pop
mov
cmps
push
mov
addr16
in
add
(bad)
cmp
call
popa
daa
xchg
mov
inc
push
xchg
stos
test
jbe
push
add
xor
mov
dec
(bad)
adc
mov
sbb
jg
ffree
movlps
xor
stc
mov
std
repz
clc
lods
test
add
dec
fdivr
scas
mov
scas
xor
sub
bnd
aaa
jge
dec
jmp
repz
xor
push
mov
int3
cmps
retf
mov
and
sub
pop
or
jno
ss
and
repnz
int
pop
stos
outs
(bad)
jno
jmp
mov
fldenv
mov
mov
not
xor
jg
nop
jmp
dec
cld
mov
sub
imul
jle
mov
in
shl
sti
sbb
mov
dec
ret
add
iret
jnp
cmp
ds
mov
pop
(bad)
cdq
arpl
iret
inc
mov
out
pop
sahf
std
pushf
add
mov
mov
adc
ficomp
jo
or
stos
xchg
pop
repnz
loop
pushf
shl
push
stc
ss
add
int3
shl
shl
aas
pusha
aad
mov
lods
ins
aam
inc
add
add
and
jb
push
pop
cmp
jbe
imul
xor
and
in
gs
call
outs
xchg
mov
xor
je
ins
push
je
stos
sar
imul
int3
cmp
js
test
xchg
xchg
xor
movs
aam
mov
or
mov
push
and
dec
fwait
add
inc
fisubr
sub
inc
inc
repz
ret
int3
jne
mov
mov
ror
or
(bad)
(bad)
mov
mov
cmp
inc
inc
sub
and
mov
sub
loopne
aaa
js
fadd
mov
lea
out
mov
xchg
pushf
sbb
xchg
xchg
test
xchg
out
mov
(bad)
xor
mov
cmp
repz
sbb
sub
jnp
add
jge
xchg
aas
pop
enter
push
and
lock
pop
mov
arpl
push
dec
xchg
fild
or
and
fwait
loop
or
push
fiadd
xor
test
adc
mov
adc
sbb
cmp
aaa
mov
mov
in
sbb
fadd
sub
imul
dec
mov
sub
stc
xor
pusha
imul
data16
cmp
add
inc
cmp
and
inc
mov
jne
xlat
adc
das
repnz
or
sub
aas
dec
loop
js
scas
mov
sbb
push
adc
rcr
shl
sub
stos
(bad)
xchg
lods
outs
hlt
arpl
push
mov
mov
mov
mov
and
addr16
jmp
cmp
pop
out
xchg
loope
push
mov
adc
mov
inc
cmp
cli
test
xor
dec
stos
dec
repz
bound
js
das
aaa
mov
adc
inc
jb
es
nop
shr
fadd
xor
fld
arpl
cmp
outs
int
inc
nop
push
imul
jnp
add
dec
movs
retf
adc
sahf
cmp
cmp
(bad)
xor
mov
(bad)
ret
xlat
in
inc
ud0
shl
daa
mov
or
mov
mov
shl
sub
pop
scas
scas
retf
push
add
(bad)
mov
call
sbb
nop
adc
or
cmps
es
mov
jns
dec
jbe
mov
int3
or
rol
test
push
xor
xor
loope
mov
mov
fwait
add
and
std
adc
cmc
mov
cli
adc
and
bound
pop
cmc
cwde
int3
sub
inc
(bad)
jge
(bad)
mov
jne
je
addr16
mov
mov
call
addr16
movs
dec
mov
mov
jmp
jae
or
ret
mov
jbe
cmp
xchg
lea
imul
mov
jmp
icebp
mov
xchg
mov
xchg
xor
xor
cmp
pop
js
ds
mov
xchg
or
jo
repz
jae
popa
dec
mov
jmp
mov
cmp
scas
mov
cmp
mov
in
mov
je
and
cmps
mov
in
(bad)
pushf
cmp
nop
dec
or
push
in
(bad)
retf
cli
pop
test
call
mov
retf
int3
xchg
in
dec
xlat
in
and
or
pop
or
push
jmp
aaa
xor
inc
hlt
jns
repnz
mov
sub
shl
stc
gs
jge
imul
pop
push
fisubr
mov
inc
and
xor
dec
xor
pusha
in
mov
jae
sub
sub
mov
push
xor
push
dec
and
fadd
stos
push
cmps
sub
jmp
fstp
in
bound
sub
cli
(bad)
mov
mov
xchg
sti
ins
pop
jmp
dec
dec
mov
cmp
push
inc
fdiv
ret
int
xor
dec
(bad)
adc
or
xlat
add
stos
jbe
cmp
jae
push
push
stos
nop
sahf
mov
outs
xlat
ja
outs
ja
leave
and
das
pusha
mov
jo
aas
rcr
test
mov
icebp
adc
add
sbb
es
adc
inc
leave
daa
les
mov
shl
xor
dec
fwait
out
imul
or
cmp
mov
jae
call
inc
test
mov
aaa
jae
out
sub
icebp
shr
movs
mov
jmp
inc
mov
and
dec
or
fdivr
pop
or
cmp
ret
add
rol
mov
loope
xor
adc
adc
and
jge
fstp
xor
mov
in
adc
add
push
addr16
xchg
mov
mov
(bad)
es
imul
fcmovne
mov
gs
ins
loop
push
fidiv
test
adc
pop
or
cli
push
dec
push
mov
shl
(bad)
cmp
or
sbb
shr
add
jno
dec
(bad)
mov
imul
pop
push
jno
xor
cmp
je
bound
(bad)
pop
adc
cmp
cmp
mov
repz
sub
adc
aad
stos
pop
cld
push
or
out
mov
jecxz
xchg
clc
ds
push
test
jle
fs
jp
dec
push
sbb
or
arpl
fsub
sbb
outs
mov
addr16
(bad)
mov
in
leave
xor
and
sub
fistp
test
xor
or
(bad)
popa
lock
pop
aad
stc
jnp
pop
pop
lds
imul
out
dec
xor
lea
mov
jge
xor
mov
jns
and
mov
aad
mov
sub
push
add
adc
dec
mov
popa
mov
pusha
or
ins
xchg
xor
add
iret
xor
neg
sbb
sub
or
sbb
mov
daa
jb
xor
icebp
outs
cld
mov
sbb
add
push
out
addr16
(bad)
sub
test
add
xor
xor
(bad)
mov
adc
mov
dec
or
push
dec
(bad)
sti
jne
add
mov
jl
jo
jns
xchg
dec
in
imul
mov
outs
aam
not
repz
inc
int
rcl
fstp
(bad)
fsub
sub
bound
xor
stc
cmps
adc
mov
inc
aam
scas
pop
sahf
aad
mov
dec
lahf
idiv
push
sub
or
ins
push
sbb
inc
sbb
sbb
jo
fnsave
pop
retf
add
sub
sbb
mov
push
ret
in
cmps
out
mov
mov
adc
xchg
dec
jns
mov
add
aam
jge
fisttp
adc
into
(bad)
fiadd
es
pop
outs
and
or
rcl
sbb
pop
adc
push
clc
and
jae
pop
adc
xor
repz
out
xchg
movs
inc
xor
(bad)
into
mov
cwde
pusha
sub
xchg
int3
sbb
sub
arpl
shl
xor
lea
cmps
push
fucom
xor
mov
mov
(bad)
inc
sbb
inc
js
jbe
sub
mov
popf
ins
jno
int3
pop
or
and
addr16
pop
fnsave
int3
lahf
movs
sub
jb
hlt
add
inc
mov
dec
fs
cdq
jmp
into
cmps
(bad)
(bad)
scas
fisubr
push
adc
(bad)
xchg
daa
inc
test
test
pop
jns
test
js
adc
inc
lods
aaa
fidiv
push
inc
in
sub
dec
mov
mov
add
pop
cmps
push
pop
mov
push
and
aam
mov
sub
cmc
mov
push
sbb
pop
das
cmp
jbe
jnp
jl
push
fisttp
(bad)
jmp
xor
outs
loop
leave
lahf
dec
mov
ins
test
pop
mov
mov
jecxz
and
push
dec
pop
loop
sub
jmp
sbb
aaa
mov
dec
imul
fnstsw
call
punpcklwd
push
fdivr
jge
xchg
jecxz
push
jecxz
inc
jge
cmp
jae
push
fcmove
mov
rcl
daa
leave
inc
jle
pop
fmul
test
sub
dec
mov
and
dec
jecxz
sbb
imul
hlt
pop
dec
stos
or
jb
repz
into
and
inc
stos
inc
mov
pop
das
hlt
xchg
lock
cli
nop
add
mov
add
or
leave
mov
mov
or
jmp
mov
inc
xchg
in
fwait
add
sub
scas
add
pushf
sub
imul
call
loopne
cmps
cwde
mov
jmp
adc
int
out
(bad)
stos
push
pop
cmps
jo
pop
sub
out
jg
sub
mov
pop
mov
pop
ret
lods
pop
mov
jno
adc
pop
push
xchg
add
and
outs
out
mov
addr16
mov
imul
jns
fcmovu
stos
fwait
sub
lock
jp
mov
sub
and
les
(bad)
xor
xor
cs
pop
sub
retf
test
scas
loop
dec
xchg
and
sahf
mov
mov
test
sahf
push
lock
push
test
pop
ror
inc
(bad)
xor
pop
dec
jmp
mov
ror
cmp
xor
retf
push
push
adc
mov
mov
test
sti
test
xchg
inc
mov
in
outs
ret
test
jge
fistp
add
xor
add
and
inc
xor
mov
xlat
cs
xor
sub
pop
mov
out
mov
shl
loope
loop
pop
mov
mov
leave
aas
mov
icebp
sub
mov
push
pop
in
call
test
mov
sbb
jg
mov
ficomp
imul
aaa
mov
mov
push
(bad)
push
rcr
jbe
pop
mov
enter
mov
mov
mov
dec
lock
jecxz
(bad)
jno
push
in
sub
xchg
loopne
jne
jl
jmp
ins
adc
dec
sub
or
mov
mov
adc
cmps
mov
shld
pop
fs
dec
lahf
push
movs
lods
pop
or
dec
sbb
addr16
enter
mov
mov
inc
jmp
and
ss
pop
mov
sbb
mov
ins
out
or
dec
invd
inc
jge
and
out
outs
rcl
sub
repnz
aad
sbb
mov
mov
dec
popf
(bad)
adc
and
stc
dec
fist
mov
fdiv
push
mov
push
sub
das
sub
adc
iret
ret
adc
test
gs
jge
mov
pop
jb
shr
sub
emms
rcr
jne
dec
jb
stc
jo
jg
repz
mov
fcomp
xor
std
mov
mov
out
imul
xchg
mov
ds
pop
mov
and
je
mov
mov
mov
mov
or
and
aaa
repnz
not
bound
jle
lds
lods
retf
(bad)
div
or
add
or
mov
sti
movs
rsm
ins
imul
movs
mov
aas
adc
fnstcw
jb
dec
out
lods
pop
cmp
in
mov
xor
push
mov
jle
ja
(bad)
in
imul
and
lock
cmc
mov
pop
repnz
fidiv
jecxz
xor
mov
pop
cdq
pop
es
ds
(bad)
mov
pop
xor
or
mov
sub
test
dec
mov
or
mov
or
dec
mov
mov
fisttp
add
mov
add
add
fucom
add
or
popf
fbld
in
in
in
dec
stc
jns
xchg
and
inc
add
repz
aam
push
(bad)
(bad)
mov
leave
xchg
pop
movs
push
dec
popf
sub
push
adc
ficom
jg
sbb
int
arpl
(bad)
dec
mov
je
cs
xor
sub
lea
sbb
(bad)
sbb
inc
pop
int3
test
add
fidiv
imul
call
sbb
inc
jecxz
sbb
iret
adc
sbb
sbb
addr16
sbb
fstp
mov
mov
or
cdq
jg
ins
dec
scas
xor
push
cld
rcl
jmp
cmp
mov
rcr
pushf
dec
and
fistp
pop
mov
cmp
mov
xor
and
(bad)
adc
sti
jmp
mov
sbb
adc
mov
mov
into
scas
imul
dec
jl
movs
mov
jne
push
push
fcomp
sub
sbb
jno
push
mov
sbb
int3
mov
(bad)
hlt
ss
(bad)
test
mov
aas
outs
add
xchg
iret
jno
out
mov
xor
inc
std
lock
jmp
push
int3
cmp
mov
lahf
sbb
or
adc
jecxz
sub
push
push
mov
rcl
jl
out
data16
lds
inc
jnp
mov
in
in
push
mov
xchg
mov
nop
out
cmc
into
adc
std
fs
in
neg
fbstp
loopne
mov
sub
mov
jb
push
pushf
stc
aas
sbb
xor
js
xor
in
mov
popf
pop
shl
fidivr
or
jle
imul
mov
pop
push
bound
dec
jmp
clc
clc
inc
mov
adc
mov
xchg
or
into
fwait
cmp
or
xor
popa
loope
dec
outs
or
fwait
sub
push
and
mov
ja
fcmovu
arpl
rcl
sub
je
cs
xchg
cwde
out
cmc
shr
lock
dec
push
dec
retf
jmp
enter
mov
cmps
dec
xchg
mov
mov
sbb
pop
sub
cmp
dec
test
(bad)
cmp
call
sub
and
aas
push
lods
mov
sti
sbb
aam
test
jp
fwait
or
dec
sbb
xchg
xor
mov
daa
imul
push
(bad)
add
and
xchg
repz
loopne
push
aam
push
aaa
jno
sbb
cs
(bad)
je
mov
mov
arpl
mov
inc
sbb
mov
pop
xor
inc
mov
inc
or
and
inc
cmp
leave
push
(bad)
in
jle
int3
in
repnz
popf
add
and
cwde
xchg
shl
ss
mov
inc
(bad)
dec
or
sbb
sub
leave
pop
dec
mov
cmp
fimul
loopne
call
imul
or
std
mov
sbb
jecxz
fwait
nop
dec
aam
out
cmp
inc
ss
in
dec
das
pop
ret
retf
sbb
mov
jb
mov
test
mov
je
lods
adc
adc
jns
inc
dec
out
enter
and
and
mov
mov
push
loope
or
pop
test
outs
push
xchg
adc
enter
loop
outs
arpl
rcr
cwde
mov
popa
stc
xchg
sbb
cs
dec
push
addr16
(bad)
std
pop
mov
xor
repnz
cmc
fadd
xor
add
in
xchg
(bad)
jae
js
xlat
out
call
xor
(bad)
pop
pop
mov
xchg
lds
or
nop
mov
jo
arpl
pushf
jle
mov
mov
mov
mov
add
dec
cwde
das
xor
push
and
xor
repz
cmp
pop
in
inc
pxor
sahf
sub
pop
add
in
leave
(bad)
outs
pop
push
xor
cmp
test
xchg
cmp
call
(bad)
les
dec
pop
jno
pop
scas
mov
adc
sbb
outs
out
mov
adc
sbb
mov
push
stos
les
or
xor
jp
fldenv
test
cs
pop
out
sbb
test
push
ss
cmp
cmp
xchg
add
fmulp
(bad)
popa
(bad)
dec
ins
mov
cmc
dec
add
inc
ins
add
je
inc
xchg
cld
out
xor
xor
loop
cmp
pop
mov
dec
shl
add
jmp
mov
jmp
xor
fdivrp
pushf
sar
or
mov
pop
or
es
push
pop
rol
sub
and
es
mov
test
xchg
xchg
mov
mul
(bad)
adc
mov
(bad)
fsub
jnp
rol
jp
push
lock
call
stc
ds
adc
aaa
cmp
cld
and
add
mov
pushf
push
out
xor
mov
gs
mov
call
ins
inc
in
data16
dec
mov
adc
dec
sub
fnsave
and
jbe
ds
lods
retf
mov
pop
in
xchg
ins
test
xor
mov
and
add
jg
scas
and
cld
cdq
dec
out
in
jle
sete
cwde
in
push
push
ror
ins
scas
cmp
mov
imul
sbb
dec
jne
sub
(bad)
mov
loope
and
cmps
in
push
stos
daa
mov
mov
mov
or
outs
or
push
push
xor
jmp
call
xchg
sub
cmps
jle
mov
sub
popf
in
je
das
(bad)
retf
scas
scas
add
cmp
xchg
or
push
pushf
in
out
imul
fbld
std
jb
fcmove
aaa
xor
retf
mov
movs
cmp
adc
jns
xchg
fmulp
push
inc
push
push
icebp
mov
push
test
cmp
xlat
and
and
ret
lahf
idiv
fs
sbb
loopne
loope
fdivr
push
clc
repz
fmul
test
and
pop
and
pop
add
iret
or
test
cmp
fbld
cli
push
dec
cmp
retf
push
test
sub
push
out
sbb
xchg
repnz
addr16
pop
xor
test
adc
sbb
bound
sti
mov
pop
js
ds
stos
dec
gs
jmp
bound
cmp
add
call
mov
(bad)
enter
ror
xor
pop
ins
das
add
in
lea
mov
stos
and
nop
into
mov
ins
jno
shl
inc
movs
lahf
cs
sbb
ror
pop
fucomip
sub
or
mov
cwde
pop
retf
leave
ret
icebp
sub
jae
pop
or
inc
pusha
ins
mov
jg
dec
loop
xchg
retf
cmp
xchg
push
pop
cmp
test
popa
add
xchg
mov
cdq
inc
aad
test
xchg
pop
inc
jmp
ror
mov
gs
sahf
push
xchg
pop
sbb
push
mov
icebp
mov
(bad)
loop
(bad)
lods
daa
stos
mov
dec
popf
adc
(bad)
jbe
xor
and
mov
loope
pop
clc
xor
mov
adc
shl
cdq
out
dec
xor
pop
call
fstp
push
pop
xor
jnp
jne
cld
push
push
xor
cmc
jne
dec
adc
inc
sar
cmp
ret
push
std
xor
push
imul
cmp
push
push
mov
into
repnz
ret
rol
xchg
sub
stos
mov
inc
xor
(bad)
pop
mov
or
cmp
inc
jg
nop
xor
scas
add
(bad)
sbb
retf
cmp
or
inc
add
inc
daa
daa
mov
(bad)
fcomp
movs
pop
pop
(bad)
cmps
cmp
dec
rcl
js
test
(bad)
je
pop
and
mov
popa
lock
jno
shl
push
mov
out
pop
push
ret
mov
jmp
or
dec
enter
pop
push
push
lods
mov
xchg
ja
mov
cdq
mov
and
push
stos
cmp
xchg
retf
outs
aad
push
fdivr
cmp
hlt
dec
xor
adc
sbb
fbld
in
jae
loopne
mov
out
call
fdiv
xor
into
xchg
aas
mov
xor
mov
int
adc
push
xor
icebp
popa
jmp
xor
xor
(bad)
in
out
scas
inc
outs
mov
sub
pop
(bad)
in
dec
mov
mov
mov
xor
(bad)
pop
shl
mov
push
jo
cwde
js
dec
out
or
and
fld
daa
jo
jne
xor
ins
adc
popf
imul
shl
mov
xchg
in
mov
pushf
and
mov
inc
lds
(bad)
fmul
sbb
stos
fmul
cmc
mov
or
repz
mov
mov
adc
cdq
jmp
cwde
retf
jle
loopne
stos
mov
xchg
jecxz
lods
sbb
out
xchg
shl
stos
inc
lock
mov
jle
lods
jbe
ret
ins
fstp
mov
add
loope
cmps
out
in
add
sbb
fisubr
out
lock
push
pop
and
sub
or
dec
sar
js
xor
jge
push
enter
jle
sbb
sti
nop
or
hlt
dec
mov
xor
push
mov
cmp
out
mov
test
sbb
xor
mov
jecxz
cli
dec
push
or
mov
mov
cmp
ins
jnp
dec
push
in
cwde
mov
dec
(bad)
aad
adc
div
test
lods
out
js
or
jae
fdivr
pop
pusha
jmp
aaa
daa
jae
repnz
sub
fld
fsub
ja
loop
adc
xor
imul
aaa
sub
mov
mov
std
push
dec
lock
retf
pop
jns
sub
pop
shl
dec
fmul
jno
dec
mov
dec
out
xchg
jmp
or
lea
or
in
icebp
mov
mov
inc
adc
add
sbb
iret
xchg
add
and
jl
scas
fstp
test
jno
jge
xchg
fmul
mov
inc
xlat
inc
dec
dec
minps
out
dec
imul
xchg
xchg
push
test
popf
sbb
mov
fst
xchg
ret
(bad)
lds
add
int3
pop
push
push
stos
and
jp
fstp
mov
mov
gs
push
mov
mov
sub
and
cmps
enter
out
pop
ja
loope
and
mov
test
xor
dec
adc
sbb
aas
push
pop
(bad)
bound
xchg
movs
adc
out
jne
cmc
jmp
movs
lods
push
(bad)
pushf
repnz
sbb
rol
fldz
inc
fs
adc
sub
fcomp
push
pop
jmp
jbe
dec
mov
stos
jl
fwait
adc
jmp
es
fidiv
push
push
pop
mov
and
retf
fstp
add
mov
fadd
inc
ins
nop
ret
jg
loopne
and
and
retf
push
cmp
mov
jg
loopne
and
jb
xor
push
inc
cwde
mov
lds
ret
and
pop
mov
call
or
dec
jb
bound
(bad)
cdq
xchg
mov
adc
rol
repnz
pop
sbb
jp
scas
pop
in
arpl
adc
inc
jg
in
or
neg
scas
jb
jbe
shl
test
sub
call
imul
pop
ins
dec
inc
jecxz
push
push
pop
cmps
ret
cli
xchg
adc
mov
mov
stos
jmp
mov
cmps
inc
es
push
push
dec
sbb
xor
retf
mov
mov
pop
mov
(bad)
ins
fs
jmp
mov
push
aad
jg
lds
ins
jnp
ins
ret
add
add
add
cmc
neg
sub
ret
push
cdq
pop
nop
(bad)
dec
cmc
xchg
jge
cmp
in
clc
dec
stos
cmp
out
mov
ins
fcomip
sbb
loopne
mov
mov
pop
mov
cmc
or
xor
mov
mov
push
(bad)
scas
mov
dec
call
sahf
push
leave
xor
inc
xor
inc
mov
shl
sub
in
int3
retf
push
ror
xchg
bound
xor
push
xlat
xor
pop
push
test
sahf
add
cdq
outs
xor
call
lahf
or
and
pop
or
sar
sub
movs
adc
pop
push
and
stc
shl
scas
sub
ins
push
adc
add
mov
add
(bad)
xchg
hlt
pop
xchg
outs
(bad)
or
push
inc
bound
fisubr
mov
xchg
cmp
loopne
xor
add
ins
dec
cmp
pop
addr16
in
mov
sbb
dec
xlat
inc
dec
dec
retf
les
(bad)
bound
js
xchg
xor
xchg
fnstenv
mov
cmps
ficom
cmp
mov
xor
mov
mov
retf
dec
mov
fucom
retf
adc
scas
xchg
cli
ins
push
jl
enter
icebp
int
rcr
xchg
ins
std
jecxz
mov
loope
adc
jecxz
ins
sar
arpl
inc
ja
inc
push
cmp
std
cli
mov
out
jno
dec
fild
cmps
fcmovb
js
jno
out
adc
xlat
pushf
test
xor
dec
ret
push
in
call
add
xor
jne
sub
jmp
add
fwait
loop
jl
js
out
inc
xor
pop
mov
or
out
data16
outs
popa
addr16
cmp
lods
inc
push
idiv
out
in
xchg
mov
mov
mov
inc
(bad)
mov
add
in
push
push
mov
cmps
push
dec
out
adc
cmps
xchg
cs
jo
into
hlt
push
outs
or
outs
mov
outs
adc
ret
pushf
(bad)
mov
fcomp
jmp
jne
mov
jp
adc
repnz
mov
data16
loopne
inc
jb
pop
mov
cmovb
push
xchg
loop
push
int3
push
dec
xlat
test
aad
cmp
and
add
pop
ja
dec
fstp
mul
shr
sub
cmps
pop
and
inc
das
push
sahf
xchg
xor
or
repnz
pop
fwait
dec
mov
movs
aaa
inc
call
mov
mov
xor
mov
sbb
mov
movs
mov
jo
and
mov
jmp
sub
mov
xchg
out
(bad)
clc
and
xchg
sti
xchg
cmp
in
jmp
sub
ret
leave
rep
ja
xor
rcl
rcr
test
xor
ins
inc
push
ret
sbb
hlt
and
pop
jge
pop
sbb
mov
lds
mov
lock
(bad)
mov
adc
and
retf
daa
lods
ret
add
or
dec
or
sbb
(bad)
inc
lahf
in
push
inc
jl
movs
push
sbb
and
push
sar
jg
or
daa
aas
pop
cmp
mov
sbb
pop
adc
inc
sub
and
outs
cdq
inc
sub
movd
fnsave
out
ror
shl
in
adc
xchg
enter
adc
mov
ins
mov
xor
(bad)
cwde
or
xor
pushf
cmp
in
push
addr16
sub
cmp
push
fsubr
cmps
mov
mov
ss
push
push
rdpmc
dec
dec
pusha
add
fisub
pmulhuw
mov
mov
inc
jne
in
rol
fimul
popf
rcl
pop
mov
(bad)
retf
fucom
in
cmps
dec
cs
popf
(bad)
(bad)
dec
dec
rol
mov
movs
sar
ficom
jmp
cmp
mov
mov
(bad)
dec
mov
cli
cmp
mov
sub
and
and
(bad)
cmp
and
popa
inc
leave
mov
data16
xor
mov
xor
fwait
mov
rcr
ret
jecxz
(bad)
out
repz
xchg
inc
inc
out
cld
lock
xor
leave
or
out
fild
div
or
ficomp
leave
add
ficom
arpl
xchg
sbb
mov
sahf
das
jl
mov
fisubr
das
mov
jo
mov
and
out
stos
cdq
in
sbb
jge
pop
cli
aas
sbb
aad
rol
jae
lods
das
adc
shr
xchg
jne
inc
test
adc
lahf
iret
lods
and
mov
dec
adc
xchg
xchg
or
pop
push
rcl
or
mov
gs
inc
bnd
mov
or
outs
inc
add
retf
and
pop
je
xor
outs
sbb
pop
fs
shl
jmp
mov
xor
mov
jecxz
add
xchg
ins
popf
lods
and
repnz
pop
pusha
adc
push
sub
int3
cmp
stc
or
dec
rcl
jl
bound
cmp
sbb
(bad)
aam
daa
lods
add
iret
fs
mov
mov
addr16
xchg
movs
sti
ret
cmp
cmps
mov
out
pop
cmp
adc
inc
(bad)
addr16
xchg
sbb
and
inc
or
push
cmp
enter
xor
fst
pop
repz
fldenv
and
cs
cmp
arpl
dec
(bad)
sar
les
das
in
add
mov
cwde
mov
add
push
cmc
mov
adc
jge
mov
(bad)
jnp
pusha
adc
mov
call
movs
repnz
pop
(bad)
cmp
mov
fld
pop
test
js
xchg
call
jb
frstor
sbb
xchg
clc
inc
mov
out
ja
jo
xchg
fisubr
cmps
inc
push
fisttp
push
add
cmp
ss
cld
and
or
ja
sbb
xor
jne
adc
outs
nop
jno
push
add
pop
retf
lods
xchg
add
aad
fwait
inc
jge
aad
int
popf
fdivr
mov
push
outs
outs
mov
clc
jl
sub
iret
out
gs
mov
cmp
jecxz
in
push
xor
jns
jnp
out
div
into
pop
leave
adc
loop
cmp
push
and
movs
ret
movs
jecxz
sub
lea
bound
pusha
les
dec
movs
dec
(bad)
mov
lock
iret
dec
pop
xchg
mov
dec
loopne
mov
mov
add
inc
fbstp
xchg
jmp
and
xchg
pop
dec
(bad)
es
leave
mov
mov
push
dec
sti
loop
pop
into
xchg
pop
dec
mov
mov
aad
cwde
leave
push
and
mov
out
rol
dec
dec
add
sahf
adc
cwde
add
addr16
mov
jl
xchg
mov
popf
in
jo
int3
rcl
in
inc
adc
pop
push
sbb
mov
inc
retf
test
mov
es
push
mov
jg
aad
imul
mov
es
cmps
mov
add
fidivr
pop
dec
mov
rcl
aas
stc
cmp
dec
sub
in
inc
das
pop
pop
fild
out
jecxz
test
cwde
jp
out
push
xlat
clc
or
adc
or
popa
shl
mov
jo
inc
(bad)
movs
cwde
push
lods
push
aad
aas
loop
xor
add
push
fcomp
pop
mov
bound
dec
out
arpl
push
jl
jg
fdivr
adc
je
les
pop
mov
fwait
and
stc
jo
mov
sti
inc
cmp
add
xchg
lahf
cli
push
adc
je
push
cmp
ret
mov
xor
aad
stos
in
mov
pop
sub
cmp
inc
ficom
push
pop
dec
iret
(bad)
xchg
out
(bad)
leave
into
push
sbb
mov
sbb
sub
cmp
sbb
fwait
cmp
or
retf
fsubr
mov
pop
xchg
xlat
and
mov
sbb
mov
sub
and
mov
push
xor
push
fiadd
mov
out
in
add
push
lds
cli
lea
sti
out
xchg
push
pop
stos
inc
fwait
inc
mov
sub
pop
inc
icebp
cs
ss
fwait
and
xchg
out
lock
arpl
dec
mov
scas
cmp
push
xchg
aad
xchg
inc
(bad)
fiadd
sbb
jmp
lock
adc
push
dec
xor
sahf
hlt
scas
jnp
(bad)
fdiv
pop
fld
cmp
(bad)
mov
push
jne
mov
test
fs
in
retf
mov
gs
inc
pop
xlat
push
mov
sbb
shl
ret
add
mov
jbe
cmp
(bad)
in
sbb
jge
or
cli
sub
iret
mov
shl
sbb
pop
mov
push
and
lock
jns
frstor
js
cmc
fldcw
shl
push
mov
les
mov
xor
adc
mov
adc
mov
dec
es
mov
sub
and
sbb
int3
mov
xchg
test
pop
dec
cmp
and
add
retf
xchg
rcl
mov
movs
mov
jmp
(bad)
lock
shl
icebp
sbb
aaa
adc
pusha
addr16
popa
cmp
loope
adc
stos
iret
bound
fdivrp
in
pop
cli
inc
pusha
sbb
push
mov
jmp
sub
jle
and
sbb
movs
mov
std
mov
dec
aaa
leave
fs
sbb
ret
xchg
and
shr
jecxz
mov
xchg
ret
mov
jecxz
jge
jp
mov
sub
fidivr
nop
loope
repnz
cmp
push
dec
xlat
push
inc
mov
stos
pop
fs
mov
mov
enter
popa
cwde
scas
nop
dec
mov
lea
jmp
out
xchg
cmp
jb
mov
and
js
fidiv
xchg
or
sub
or
popf
loope
sbb
inc
mov
mov
dec
mov
test
pop
js
ja
inc
jnp
cmp
xchg
jns
inc
adc
nop
popa
cmp
xor
dec
int
and
sti
in
jae
in
or
test
rcl
mov
cwde
call
popa
out
pushf
mov
pop
pop
bound
inc
jmp
call
retf
cli
mov
add
jle
cld
adc
ret
retf
mov
cwde
cmps
ret
adc
cmp
cli
and
bound
pop
fdiv
mov
add
hlt
sar
aas
xchg
add
sbb
int3
div
pop
int
in
dec
repnz
movs
(bad)
(bad)
test
xchg
cli
call
sbb
test
fist
and
dec
fldenv
mov
clc
sar
fimul
rcl
rcr
push
and
sub
fisttp
std
test
stos
xchg
push
adc
mov
retf
mov
scas
dec
clc
std
sub
jns
dec
cmc
or
dec
mov
retf
mov
xchg
inc
adc
mov
xchg
stos
(bad)
pop
pop
lock
(bad)
or
sub
mov
mov
pop
cmp
out
jmp
and
xchg
xor
pushf
and
add
and
mov
or
repnz
test
fwait
ret
pop
sahf
lea
int3
lock
fnstenv
mov
add
xor
add
out
xor
cmps
pop
shl
add
imul
push
jmp
sbb
jo
call
mov
pop
fsub
mov
out
jge
cmp
adc
and
sahf
push
xor
stc
ss
cmp
or
mov
(bad)
pinsrw
daa
out
jg
sub
adc
int3
in
mov
into
push
jo
xor
cli
jmp
lds
rcr
dec
in
push
ret
xlat
jmp
jnp
aas
imul
inc
cwde
outs
mov
icebp
fld
jne
mov
sbb
add
mov
cdq
sbb
push
lods
mov
sub
aas
in
fild
icebp
pop
add
pop
popf
int
pop
sar
data16
(bad)
push
pop
iret
jge
movs
sub
lock
inc
push
fstp
add
stos
(bad)
push
inc
dec
ret
retf
sbb
loopne
mov
adc
out
js
in
xchg
jne
and
xchg
sbb
add
dec
sbb
fdivr
mov
add
cpuid
sti
in
test
(bad)
mov
arpl
stos
mov
mov
xor
in
in
adc
mov
mov
or
add
xchg
mov
gs
es
jo
stc
mov
push
repz
pop
push
movnti
xchg
(bad)
cmc
or
push
adc
hlt
and
push
dec
mov
mov
and
(bad)
(bad)
sub
shr
shr
sbb
jl
sub
mov
ins
int3
loopne
add
sbb
test
inc
mov
jl
inc
cs
pop
mov
dec
gs
add
pop
and
js
xchg
int
jb
sbb
aam
stc
xchg
pop
pop
xor
push
pop
push
add
mov
jle
test
jge
push
pushf
pusha
xchg
add
repz
cs
push
cwde
clc
in
push
aaa
pushf
adc
inc
aam
and
mov
cmc
sahf
mov
dec
push
shr
in
mov
ins
pushf
loope
jle
push
fwait
int
fwait
in
mov
add
xor
cli
repz
pop
mov
and
sbb
inc
and
sub
gs
sub
mov
test
push
xchg
pop
leave
mov
in
je
or
(bad)
call
inc
test
sub
cmp
push
loop
rcr
and
sar
ret
jl
dec
pop
and
xchg
push
xchg
add
add
mov
iret
std
cmp
dec
cwde
rol
shr
mov
jg
(bad)
mov
dec
mov
xor
add
add
in
pop
mov
mov
(bad)
jp
test
mov
jmp
xchg
shl
ja
(bad)
sub
mov
cli
nop
rcr
add
xor
fwait
in
mov
imul
jae
scas
enter
xor
and
lea
cmp
std
xor
out
add
xchg
das
pop
dec
push
push
jnp
add
dec
mov
out
cld
lahf
xchg
jno
mov
sar
and
ins
mov
xor
jg
aaa
mov
jp
leave
jo
sub
nop
fucom
clc
retf
stc
and
popa
add
imul
pop
xchg
sbb
and
(bad)
push
or
inc
and
pop
or
pop
test
clc
cwde
push
lods
dec
fsubr
test
and
iret
les
cwde
fwait
cs
cmps
inc
xchg
pop
enter
inc
daa
ins
cmp
outs
or
pushaw
add
sti
and
sub
xor
jbe
(bad)
fidiv
imul
das
mov
xor
rol
enter
cmp
sub
std
mov
pop
adc
ss
mov
fsub
dec
cli
fwait
jl
mov
mov
inc
jle
in
js
cmp
push
xchg
enter
cmp
out
call
js
je
fisttp
nop
mov
jecxz
xchg
outs
cs
sub
mov
jmp
in
retf
in
mov
jo
mov
mov
fs
fiadd
dec
(bad)
sahf
jge
ins
test
stos
ds
ret
xchg
ror
or
cld
jns
aad
loop
sar
pop
into
ret
ins
sbb
mov
(bad)
mov
add
and
fist
adc
retf
pop
xlat
xchg
cdq
jmp
jbe
and
(bad)
inc
imul
or
adc
pop
push
sub
in
fadd
cmp
fs
or
lahf
outs
test
mov
test
add
mov
repnz
xchg
sbb
cwde
icebp
ret
sbb
fist
and
test
cmp
mov
mov
inc
in
push
pop
sub
pop
dec
jp
inc
xor
sub
xor
mov
lock
test
cdq
jp
retf
push
ret
xlat
pop
adc
cwde
call
or
inc
bound
sti
mov
shl
sbb
scas
xchg
cld
sbb
lods
jge
fistp
enter
and
fbld
push
mov
pop
(bad)
hlt
ins
loope
dec
jmp
xchg
in
inc
add
call
in
push
or
comiss
ds
nop
ja
jno
sub
fucom
pop
fdivr
in
cdq
int
lea
(bad)
jl
daa
(bad)
sub
push
and
(bad)
mul
cmc
inc
and
je
mov
out
aam
pop
adc
push
and
push
xchg
mov
fwait
dec
cmps
es
adc
ret
cmps
xor
adc
mov
sbb
xor
stos
jmp
inc
sbb
jecxz
mov
jmp
imul
push
sub
addr16
out
ret
jmp
lods
push
in
cwde
mov
test
sti
(bad)
mov
cs
jmp
dec
jp
scas
fwait
and
sbb
inc
shrd
mov
cmps
enter
pop
sbb
pop
in
stos
scas
das
sti
aad
ret
enter
sbb
(bad)
and
add
outs
jp
test
push
jns
and
dec
into
int3
mov
pop
mov
arpl
ds
test
inc
and
xor
jb
push
loope
inc
and
inc
cmp
pop
outs
dec
pop
fs
clc
popf
inc
mov
jno
das
neg
cmp
mov
addr16
dec
sub
adc
fstp
pop
bnd
in
inc
fdiv
adc
cld
jbe
add
cmp
ret
call
(bad)
(bad)
and
xchg
int
or
enter
pop
mov
add
mov
mov
popa
call
xchg
mov
mov
sbb
hlt
pop
out
push
sbb
push
retf
and
movs
push
(bad)
xchg
scas
cmp
test
ffree
inc
dec
or
nop
mov
aas
repnz
pop
movs
fistp
add
mov
pop
add
xchg
lea
and
dec
repnz
fadd
xor
repnz
lahf
ficom
outs
sbb
push
xchg
rcr
dec
adc
mov
xor
jo
js
sahf
les
add
xchg
in
call
sub
call
sbb
cmp
pop
dec
dec
pop
or
sbb
lahf
ss
cmp
sub
mov
stos
sahf
int
stos
jmp
jbe
inc
and
iret
mov
mov
mov
stos
out
sbb
jecxz
dec
fistp
neg
sub
clc
jle
inc
add
xor
fimul
push
inc
xchg
dec
data16
aaa
stos
cs
cwde
lahf
and
ret
daa
fldenv
test
cmp
cmp
pop
xor
ds
mov
and
aam
xor
inc
xchg
push
pop
cmc
xchg
fidivr
jp
cmp
push
mov
movs
and
es
dec
jnp
nop
icebp
adc
out
fidivr
mov
cmp
dec
ds
sbb
lea
add
inc
cmps
clc
packsswb
cmp
push
xor
xor
and
mov
fdiv
xchg
dec
push
scas
ds
mov
gs
push
xchg
push
mov
fwait
mul
imul
xor
aam
jb
rcr
dec
stos
cli
imul
mov
cmc
jno
xor
imul
mov
push
pop
mov
fisttp
sbb
retf
mov
xchg
lea
cwde
sti
jmp
push
and
mov
push
add
imul
je
sub
push
pop
ret
mov
and
mov
movs
lahf
pusha
arpl
mov
call
xor
lahf
adc
call
mov
mov
xor
push
fwait
pusha
gs
rol
sub
hlt
cmp
inc
pop
in
push
sbb
clc
push
xchg
rcr
xor
outs
imul
inc
jb
mov
xchg
jnp
mov
or
sbb
aas
xor
sbb
sbb
retf
data16
xchg
mov
lods
add
adc
es
add
xor
ds
loopne
imul
cmp
push
or
push
jmp
pop
retf
int3
cmp
jge
repnz
lea
bound
call
ins
sbb
jns
and
pop
jns
sahf
into
or
fwait
cmp
fsub
pop
adc
sbb
movs
scas
inc
inc
mov
arpl
push
xor
dec
lea
loopne
retf
add
xchg
test
push
mov
mov
icebp
dec
stos
aam
aas
xchg
enter
add
cwde
add
sti
inc
nop
adc
fld
iret
or
add
xor
outs
mov
mov
les
popf
xor
aad
test
cmps
test
(bad)
cs
cmp
and
inc
xchg
xor
mov
rcl
jo
xchg
jmp
ss
and
scas
stc
or
mov
cld
mov
scas
xchg
cmp
jbe
pop
lahf
mov
int
xor
or
fisubr
fwait
test
(bad)
fwait
push
gs
inc
jg
fsub
mov
call
rcr
aaa
aaa
repnz
adc
test
sub
imul
xchg
je
sti
psrlw
mov
bound
dec
push
and
and
outs
(bad)
adc
dec
in
cdq
bound
hlt
bound
xlat
jl
icebp
push
adc
call
scas
xchg
int3
fdivr
stos
popa
mov
xor
test
dec
cmp
xchg
and
sbb
in
add
or
and
push
or
mov
fcom
lea
hlt
ret
jmp
dec
pop
arpl
int3
mov
cmp
cmp
push
ins
fadd
(bad)
int
nop
jb
fdiv
jmp
ins
or
sbb
mov
or
and
mov
lods
in
sub
adc
add
out
xchg
or
scas
or
outs
clc
gs
add
mov
push
mov
popf
push
in
(bad)
in
jne
xchg
sbb
mov
dec
jnp
mov
mov
mov
call
int
mov
idiv
jb
or
dec
mov
mov
mov
cmp
adc
jg
or
xlat
mov
xchg
mov
nop
test
sbb
pop
leave
js
jge
gs
mov
inc
push
(bad)
ins
cmp
xchg
jge
sbb
cmps
bnd
xor
jge
je
push
pop
clc
or
mov
add
popa
fpatan
pop
adc
stos
jecxz
out
outs
movs
cmps
cli
clc
outs
stos
jp
xchg
ds
jmp
sbb
clc
test
jns
add
mov
sbb
sub
xchg
clc
mov
mov
push
pop
(bad)
mov
add
neg
sbb
adc
mov
rol
dec
sub
add
mov
cli
retf
jo
std
enter
(bad)
test
repnz
aaa
xchg
add
xchg
jg
mov
cmp
ret
mov
cmp
push
cli
retf
mov
mov
sub
jmp
das
sub
movs
int
out
xor
mov
mov
ss
out
push
pop
mov
fild
pop
bound
push
push
mov
(bad)
push
dec
repz
fidivr
cwde
add
std
jnp
sub
push
sbb
fcom
fst
out
mov
add
cmp
mov
(bad)
sti
outs
cmc
ret
push
push
adc
sbb
daa
add
nop
shl
dec
pusha
ins
sub
mov
movs
(bad)
movs
shr
clc
pop
neg
popa
inc
pop
(bad)
mov
sub
aam
and
cmp
lods
aas
aas
mov
sbb
not
aaa
mov
das
clc
sbb
xchg
adc
ror
adc
mov
fwait
push
sub
push
jle
and
pusha
(bad)
adc
loop
sub
arpl
dec
fsubp
(bad)
call
inc
xlat
fwait
lds
cs
inc
pop
(bad)
arpl
xor
pushf
mov
inc
retf
arpl
push
xor
shl
jecxz
or
xor
in
sub
cmp
aas
sbb
out
in
pop
out
xchg
loope
nop
and
add
sub
mov
mov
movs
xor
loopne
mov
adc
add
xor
sub
call
cld
adc
sbb
loopne
imul
xor
dec
inc
pop
add
(bad)
test
inc
nop
mov
in
mov
xor
and
push
out
xlat
or
xchg
inc
adc
xchg
or
mov
dec
sub
mov
pop
ins
icebp
jmp
cmp
je
ins
(bad)
cs
and
pusha
xor
xchg
cmps
sub
inc
inc
lods
lock
test
inc
and
jo
or
xor
ror
out
xor
xlat
xlat
mov
mov
sbb
or
out
adc
inc
xchg
inc
aaa
sub
mov
push
(bad)
rol
arpl
jmp
jns
icebp
or
or
mov
xchg
into
cmp
jge
movs
pop
push
adc
mov
mov
sub
cmp
xor
jnp
int
shl
aas
scas
and
cdq
and
das
xor
pop
imul
sbb
add
cmp
outs
jmp
mov
cmps
ret
inc
adc
into
or
sub
push
sahf
cmp
outs
clc
and
fnstenv
mov
sub
pushfw
jp
inc
jecxz
add
clc
jmp
ficom
fld
mov
jae
mov
ret
hlt
push
mov
fist
ds
sbb
addr16
or
add
push
jne
mov
repz
pushaw
jbe
mov
mov
fdivr
push
hlt
cmps
enter
inc
adc
sub
mov
call
in
out
mov
enter
fnstsw
rcr
fild
ret
les
add
or
dec
jmp
cmp
aam
cdq
mov
adc
push
aaa
shl
out
mov
xchg
mov
adc
jmp
xchg
or
(bad)
stc
lea
xor
dec
push
das
sti
cmp
inc
popa
aam
add
sub
mov
fwait
std
jle
sahf
fcmove
adc
mov
xor
test
mov
(bad)
fadd
mov
jge
adc
test
sub
sbb
mov
push
adc
imul
ret
and
in
xchg
ret
nop
adc
ins
mov
adc
xchg
aaa
add
(bad)
cmp
ja
dec
mov
lahf
dec
adc
pop
push
movs
xchg
or
int3
sub
lea
pop
mov
jp
inc
popf
outs
movs
adc
xor
jns
aaa
push
inc
xor
hlt
adc
and
cmp
mov
mov
sbb
xchg
clc
cmp
mov
ret
rcl
int3
(bad)
adc
nop
adc
push
sub
mov
jp
es
inc
xchg
mov
mov
dec
jge
aad
bound
cmp
mov
inc
lock
sub
scas
scas
mov
js
cld
mov
lock
jp
xchg
scas
movs
cmp
cmps
scas
push
push
dec
cmp
loop
aas
jno
mov
xor
lea
push
add
sub
and
add
dec
xor
popa
fcomp
into
and
retf
add
jecxz
sub
mov
loope
adc
jne
add
cmp
sub
push
add
mov
pop
rcr
and
mov
and
inc
jne
jmp
or
add
mov
into
push
ret
fsubr
mov
jmp
imul
call
popa
stc
dec
iret
(bad)
ins
neg
lods
sub
mov
mov
mov
jge
mov
ins
or
mov
sti
add
call
in
sub
cmps
push
mov
mov
jbe
(bad)
and
mov
adc
inc
int3
xchg
jae
mov
inc
xchg
adc
mov
push
mov
push
adc
sub
push
sub
retf
or
clc
pop
das
add
jle
das
xor
ret
and
cld
inc
leave
scas
ret
inc
xor
mov
cmp
inc
sbb
cld
xchg
sub
lea
stos
sub
lds
mov
mov
dec
mov
mov
loope
and
mov
xchg
push
outs
jns
mov
daa
mov
xlat
xor
(bad)
loope
retf
retf
js
mov
xor
imul
loop
sub
popa
mov
retf
pop
aaa
add
sbb
xchg
or
outs
aas
lahf
(bad)
mov
jae
div
(bad)
push
outs
lock
sbb
push
push
sub
std
ret
push
mov
jae
push
cli
mov
and
dec
add
test
jmp
push
out
xchg
popa
dec
int3
sbb
pop
lea
push
or
sbb
shl
jmp
mov
cs
cmp
sbb
mov
xchg
jae
das
stos
cmc
outs
dec
xor
popa
daa
pop
cmp
mov
push
fstp
icebp
and
pop
pop
arpl
pushf
iret
pusha
retf
(bad)
or
aam
add
or
pop
xchg
jge
pusha
test
mov
pop
mov
or
mov
push
inc
retf
movs
(bad)
inc
(bad)
or
inc
mov
dec
imul
mov
ret
or
xor
addr16
sub
xor
adc
xchg
inc
mov
in
ret
mov
mov
jecxz
sub
cdq
dec
xchg
fidiv
arpl
fiadd
fdivp
test
rol
adc
xchg
pop
dec
sbb
jle
les
push
sub
ror
mov
in
and
adc
mov
rol
pop
repnz
dec
gs
cld
push
xor
jo
cmc
jmp
inc
mov
test
add
loope
xchg
jns
dec
in
icebp
jbe
cmp
mov
inc
pop
push
jecxz
or
mov
pand
(bad)
popa
jmp
adc
jns
lods
jne
sub
xchg
cdq
mov
pop
jae
in
out
pop
hlt
xor
std
popf
cmp
in
sub
in
jae
rol
data16
dec
repz
(bad)
jns
push
push
add
ja
sbb
aad
sub
ins
pop
or
jb
neg
in
xor
out
leave
sahf
fisub
adc
xor
movs
je
leave
ins
int3
fadd
test
xchg
pop
lods
cli
outs
xor
adc
xchg
add
cmc
mul
xor
inc
or
sbb
lods
sbb
xchg
jne
jmp
rcr
movs
stos
lods
cmp
push
sbb
xchg
and
lods
ror
jmp
data16
aaa
pop
addr16
pushf
push
jmp
clc
out
ret
cmp
pop
in
dec
mov
dec
loop
xlat
invd
sub
and
sbb
inc
cld
das
ins
inc
nop
or
sub
adc
jge
sbb
pop
inc
inc
retf
adc
cmp
inc
ret
mov
mov
cdq
and
dec
push
dec
js
adc
dec
jne
ficom
pop
xor
pop
sub
nop
add
popf
cmp
pushf
sbb
loopne
push
cld
jge
cdq
and
out
out
pop
cmps
out
xor
xor
push
retf
adc
dec
idiv
std
into
sub
or
sub
jl
in
pop
lods
daa
mov
push
inc
scas
xor
jbe
bnd
scas
dec
push
lods
scas
xor
mov
push
adc
cld
into
arpl
push
dec
xchg
push
scas
scas
mov
(bad)
or
imul
lea
sub
bound
push
(bad)
gs
fsub
push
mov
jo
adc
push
lods
mov
jmp
and
and
sub
and
inc
push
movs
test
(bad)
out
es
fs
add
mov
mov
sub
push
mov
push
jnp
fisubr
mov
ror
pop
mov
fadd
xchg
pop
adc
mov
adc
lods
mov
push
mov
adc
dec
out
or
test
or
rdpmc
out
(bad)
je
or
(bad)
cmp
mov
bound
into
imul
fld
add
push
arpl
sbb
in
and
pop
and
jnp
shr
mov
adc
inc
ret
sub
ins
cmp
call
and
(bad)
shr
and
inc
in
push
shr
(bad)
sub
js
xchg
push
imul
xchg
sahf
jecxz
and
cwde
jg
mov
push
sbb
(bad)
mov
jge
lahf
jmp
(bad)
jno
inc
jge
rcl
sub
push
ja
mov
xchg
cdq
int3
push
sar
jo
xor
dec
xlat
scas
lods
sub
icebp
(bad)
in
ins
mov
out
cmp
daa
lods
lahf
inc
je
ja
push
xor
sub
and
repnz
and
(bad)
jmp
or
pop
adc
arpl
les
test
jne
(bad)
data16
in
pop
es
fidiv
cli
mov
mov
pushf
push
int3
test
xchg
jl
mov
test
leave
dec
sub
aaa
sahf
pop
iret
cwde
inc
or
inc
shl
arpl
outs
mov
test
cs
adc
push
cmps
add
pop
sub
dec
ret
(bad)
jb
xchg
fmul
movs
pop
(bad)
pop
inc
addr16
sub
mov
mov
pop
and
pop
push
lods
retf
adc
dec
inc
lods
mov
dec
mov
xchg
enter
pop
orps
push
dec
lock
xor
call
imul
mul
(bad)
cwde
push
(bad)
mov
cmc
cmp
jns
test
imul
jnp
mov
mov
xchg
jg
mov
xchg
nop
cdq
push
arpl
dec
mov
or
xor
inc
fcomip
jl
leave
add
clc
loop
fcom
inc
xchg
jmp
dec
cmp
stc
in
movs
iret
mov
push
gs
pop
lods
(bad)
cmps
adc
adc
sbb
cmp
es
xchg
xchg
(bad)
sbb
inc
fs
repz
leave
fwait
ins
out
int
test
jo
ds
sbb
sub
xchg
dec
or
lock
test
jg
movs
hlt
add
es
arpl
push
sub
pop
fs
pop
stc
hlt
push
xchg
js
lods
and
outs
xchg
or
xchg
call
dec
mov
xchg
inc
jbe
hlt
cdq
ins
jp
push
jno
stos
push
cli
sahf
sti
add
inc
sbb
mov
mov
(bad)
pop
dec
clc
inc
mov
mov
std
xchg
pop
mov
dec
js
jl
xchg
sbb
mov
add
sbb
gs
jne
sti
sbb
inc
jge
dec
idiv
mov
std
mov
inc
cmps
fdiv
jmp
stc
int
mov
adc
adc
daa
and
xchg
pop
hlt
mov
xor
sar
leave
sbb
add
inc
push
mov
cli
in
mov
in
and
dec
inc
xor
mov
cmp
das
repnz
mov
arpl
mov
sbb
xchg
inc
jo
mov
inc
inc
sub
loop
and
ss
(bad)
xor
out
cs
ins
sub
call
dec
pop
loop
repnz
test
add
xor
cwde
icebp
push
xor
sbb
outs
and
popa
jns
imul
xor
ins
jle
ds
xchg
sbb
retf
mov
sbb
jb
adc
inc
cmp
fisub
dec
adc
or
jle
xor
xor
xchg
mov
outs
and
mov
sbb
push
sbb
mov
jb
fwait
adc
leave
push
jp
gs
jmp
cmp
jecxz
fs
mov
lods
or
cmp
and
xchg
cmc
jecxz
in
cmp
aad
dec
retf
(bad)
push
adc
pop
scas
(bad)
std
jmp
iret
scas
daa
test
jae
sar
cmp
sar
push
fnstenv
cs
retf
hlt
scas
push
xchg
loope
push
fsub
mov
push
ret
inc
inc
adc
in
scas
ror
mov
jnp
jno
cmc
adc
mov
les
or
sub
cmps
sbb
push
fbld
push
bound
rol
jno
out
data16
std
hlt
xor
je
or
outs
rcl
xor
test
push
mov
sbb
xor
test
cld
pusha
inc
scas
mov
mov
movs
dec
in
mov
adc
jg
adc
fwait
out
push
les
or
xchg
loop
(bad)
(bad)
xor
jo
ds
mov
adc
fcmovnu
cdq
push
sub
out
popa
scas
jp
sub
fsubr
inc
(bad)
stc
lods
(bad)
dec
or
jbe
cmp
jge
nop
retf
out
enter
mov
(bad)
pushf
sub
lods
sbb
jge
mov
and
iret
jne
mov
push
iret
jmp
retf
cmp
push
and
iret
mov
push
inc
ss
test
jb
jno
xor
ja
lea
sub
shr
sahf
mov
rol
(bad)
add
inc
xor
sbb
mov
add
cmc
xor
in
xlat
fmulp
into
push
sar
mov
stc
xlat
sar
repnz
xchg
mov
repnz
pusha
push
lods
in
mov
sub
jnp
adc
cmc
outs
jae
ins
scas
les
mov
movs
int
test
xchg
clc
or
ja
ins
inc
or
js
gs
inc
(bad)
xchg
push
mov
mov
jnp
adc
add
adc
in
jnp
pop
jecxz
xchg
cmp
dec
inc
imul
gs
inc
call
xor
in
lods
ja
sbb
inc
arpl
in
adc
xchg
in
je
jg
retf
scas
push
rcr
mov
(bad)
(bad)
push
adc
jmp
cmps
stos
ffree
cdq
mov
gs
xchg
(bad)
imul
add
xor
rcl
add
sub
jmp
pop
xor
mov
mov
stos
cmps
jg
cmps
push
sbb
pop
jne
cmps
inc
or
jns
dec
dec
in
and
cmp
cld
push
pop
fcom
mov
push
test
and
xor
dec
stos
xchg
pop
push
xchg
arpl
xchg
mov
jl
in
call
jecxz
push
loope
push
push
loope
out
inc
mov
dec
and
inc
and
jno
inc
(bad)
in
cmps
les
or
test
fnsave
bswap
adc
pop
in
dec
sub
std
ins
cwde
cmp
sub
push
and
cmp
lock
lea
add
cmps
movs
mov
repz
inc
inc
retf
je
arpl
xor
mov
test
arpl
rol
enter
cmp
pop
(bad)
xlat
leave
xor
and
loope
jne
popf
xor
hlt
adc
xor
sbb
repnz
lahf
fld
(bad)
test
not
mov
ds
push
cmp
xchg
xchg
dec
xchg
xchg
adc
or
cmp
in
push
sbb
inc
shl
push
or
fbstp
lock
rcl
push
push
popa
push
mov
stc
ds
sahf
repz
or
ret
and
stos
es
push
xlat
add
mov
dec
test
adc
adc
push
mov
loope
cmp
push
pop
das
add
adc
ja
(bad)
sub
adc
rol
hlt
mov
mov
aam
lahf
je
inc
out
(bad)
nop
xchg
mov
mov
mov
popf
inc
das
fisub
or
clc
daa
int3
jne
ja
rcr
xor
sub
ret
push
sbb
shl
pop
inc
jg
test
xchg
fs
sub
push
pop
int3
jne
sbb
call
jnp
ror
mov
push
push
(bad)
or
shr
movs
jmp
xor
repnz
adc
add
addr16
xchg
in
cmp
(bad)
hlt
cmp
mov
rcl
inc
mov
sbb
popa
loopne
jmp
pop
push
clc
sbb
sti
xor
cmps
inc
daa
leave
inc
inc
cli
adc
xlat
pop
sbb
mov
push
shl
and
lock
std
or
sub
cwde
or
std
jns
mov
aas
and
adc
jno
(bad)
(bad)
aad
mov
jne
test
push
cmp
jp
icebp
ds
mov
mov
(bad)
test
mov
fmul
mov
sbb
inc
push
mov
cmp
or
jmp
mov
cmps
xor
dec
dec
enter
iret
pop
fmul
and
dec
je
fs
xchg
int
push
int3
or
mov
mov
stos
cmp
test
jne
dec
pop
sub
inc
sbb
loop
adc
cmp
fcmovbe
enter
test
ret
mov
jo
and
push
adc
push
int3
addr16
mov
in
inc
xor
mov
dec
mov
push
mov
pminub
into
lds
and
repz
add
retf
sub
rcl
or
lahf
adc
jl
test
out
into
cld
mov
sub
cmps
inc
sub
icebp
mov
repz
xchg
int
outs
push
je
test
sti
out
enter
into
mov
cmp
pop
inc
jmp
cmp
add
sub
test
jb
les
(bad)
xor
ret
into
jb
aad
popa
pop
cmps
inc
mov
xchg
mov
lahf
and
scas
into
xor
push
jnp
test
ins
dec
xor
mov
jl
in
push
lahf
adc
jae
test
iret
in
std
inc
mov
mov
xor
mov
lods
dec
shl
mov
out
lahf
out
lea
ds
cs
imul
jmp
sub
sub
push
leave
mov
pop
add
pop
mov
aaa
mov
cmps
movs
adc
hlt
cmp
retf
or
inc
out
sub
aas
adc
or
inc
adc
and
aas
aaa
clc
mov
loopne
mov
ss
jnp
shl
and
out
pop
add
push
push
xchg
shr
add
and
cmc
int3
jl
cmp
dec
xlat
mov
rcl
inc
inc
xchg
mov
lods
xor
xchg
scas
shl
adc
or
fnstenv
xchg
lds
mov
xchg
or
xor
adc
dec
call
std
rol
popa
(bad)
loope
jbe
iret
lods
and
pop
and
lods
sub
mov
enter
xchg
out
pusha
push
and
add
mov
sbb
cwde
inc
mov
or
vunpcklps
and
clc
adc
retf
dec
sar
(bad)
sub
dec
dec
(bad)
xchg
mov
cmp
in
mov
sbb
test
scas
sbb
mov
push
pusha
outs
cdq
test
pushf
jecxz
repnz
sub
xchg
neg
popa
push
jae
sahf
cs
ret
jno
pop
sub
jg
xchg
outs
xor
cmp
adc
inc
push
lds
push
jae
adc
push
outs
or
bound
fmul
mov
enter
pop
jbe
cmp
or
inc
push
mov
add
test
sub
jp
cdq
push
movs
sbb
cmp
adc
stos
imul
cdq
lock
js
mov
add
lahf
jnp
lahf
xor
mov
mov
jae
out
add
into
cld
test
pushf
push
dec
jmp
cmp
mov
movs
lea
xchg
in
xor
cmps
iret
fdivr
repz
sti
dec
cmps
mov
sbb
test
addr16
stos
out
sti
test
icebp
iret
pop
add
sub
and
loop
mov
fwait
cmp
ror
dec
xlat
in
adc
rcl
mov
xor
nop
mov
movs
mov
xlat
fisubr
inc
dec
cmp
call
pop
and
fadd
or
es
xchg
div
dec
mov
inc
scas
enter
ins
lods
xchg
sbb
inc
lods
in
arpl
rcr
lds
test
loope
mov
jp
xchg
scas
test
mov
repnz
std
xchg
(bad)
cld
jns
xchg
(bad)
icebp
inc
cmc
cmp
fst
cmp
rep
in
imul
xchg
jle
popf
pop
mov
adc
xor
je
or
xlat
mov
fist
dec
push
pop
pop
adc
in
and
jmp
mov
adc
push
mov
icebp
addr16
mov
push
push
push
and
or
or
dec
mov
sub
imul
push
bound
add
aad
fistp
out
sbb
movs
pop
loop
(bad)
xchg
ja
mov
(bad)
fwait
pop
xchg
pop
inc
xor
cmps
arpl
jb
push
mov
leave
push
loopne
daa
push
std
loope
jmp
dec
mov
retf
jle
aam
fimul
movs
outs
or
mov
mov
jle
jno
bound
(bad)
retf
mov
sbb
xor
jmp
gs
xor
sub
cwde
push
sub
call
scas
in
mov
(bad)
cli
mov
aaa
xchg
mov
xchg
cmp
loope
je
xor
mov
dec
es
shl
xchg
sub
out
add
repnz
clc
adc
mov
loope
sar
std
and
pop
xchg
sbb
nop
pop
jns
cs
mov
sbb
out
fisub
mov
xor
out
or
mov
ds
push
mov
addr16
or
call
push
(bad)
adc
shl
mov
mov
xor
out
add
add
or
fisttp
stos
pusha
mov
iret
jecxz
or
ror
out
sbb
out
les
jae
mul
pop
lahf
jmp
add
fisttp
test
loope
xor
hlt
lock
and
lods
xchg
mul
in
sub
jp
mov
push
mov
jnp
jp
and
idiv
pop
add
push
jecxz
xor
test
jle
mov
fisub
mov
inc
jle
mov
fcmovb
sbb
in
popf
int3
push
(bad)
xor
fwait
(bad)
xchg
cld
add
mov
jp
xchg
sub
pop
mov
test
cmp
js
pop
mov
scas
xor
mov
not
dec
in
mov
inc
mov
jmp
dec
and
ins
cli
sbb
jb
push
test
fcomp
inc
jge
mov
jecxz
mov
push
hlt
or
fisttp
data16
mov
dec
cmp
sub
mov
pusha
pop
inc
pop
mov
repz
sbb
lock
imul
ja
push
cmp
cmp
jne
push
retf
cmp
cs
mov
adc
sub
add
mov
retf
xchg
call
mov
bound
stc
jle
xchg
inc
pop
pop
sub
es
lahf
mov
jl
push
mov
xchg
aam
in
rcl
sahf
sub
sub
jmp
pop
mov
retf
test
inc
xchg
outs
xor
sub
sbb
ret
dec
arpl
js
es
cld
jmp
add
shl
mov
pop
xchg
leave
mov
inc
push
sub
pop
and
adc
loop
int
push
pop
cmp
inc
fst
mov
xchg
dec
or
sbb
lods
sbb
lods
je
cmp
mov
sbb
jno
sub
mov
in
bound
xchg
mov
sub
in
jmp
push
cdq
cwde
and
mov
test
(bad)
sub
inc
mov
sbb
xchg
pop
sub
dec
mov
or
stos
adc
stos
sub
pusha
call
push
jbe
pop
stc
xchg
retf
or
adc
pop
leave
add
dec
push
mov
xor
inc
dec
push
lds
hlt
sub
jns
repnz
sub
mov
mov
xchg
xchg
push
xchg
and
cdq
inc
inc
outs
(bad)
shl
add
out
dec
rcr
jmp
dec
cli
push
pop
(bad)
xor
div
xor
mov
pop
out
fist
outs
or
jb
dec
pop
xchg
popa
mov
movs
pop
test
clc
and
sbb
stc
(bad)
pop
and
xor
push
fcomp
pop
scas
mov
push
xchg
sahf
lea
push
test
add
outs
sub
clc
adc
jmp
popa
jecxz
xchg
dec
(bad)
in
adc
add
or
xchg
test
loopne
fwait
push
cmp
add
sbb
aaa
push
xor
pop
dec
mov
and
xor
mov
mov
xchg
outs
(bad)
pop
fwait
inc
jmp
jbe
cmp
xor
xlat
sahf
je
cs
jle
sbb
test
pusha
jmp
stos
data16
or
not
jg
xchg
xor
ret
enter
add
call
dec
xor
call
pop
retf
pop
fldcw
push
add
pop
js
pop
push
inc
pop
dec
and
and
pop
int3
aam
xchg
push
push
jmp
sub
lods
je
in
mov
loop
jecxz
aam
iret
fisubr
stc
les
cmp
mov
pop
xchg
push
add
jne
int
mov
ins
into
cdq
adc
sbb
(bad)
push
cmp
xlat
rol
push
or
dec
fnstenv
nop
xchg
pop
lods
in
and
sahf
sub
xor
sbb
outs
add
mov
inc
mov
(bad)
cmps
imul
dec
stc
ss
sub
mov
or
jecxz
mov
or
icebp
fwait
push
nop
movs
inc
adc
add
stos
movs
mov
inc
sub
ds
ins
sub
xor
sahf
add
clc
add
xchg
dec
dec
mov
scas
mov
test
add
fisub
add
fsub
xchg
sbb
dec
xor
jmp
xadd
jge
cmp
shl
sub
out
(bad)
sti
dec
cmc
xchg
mov
mov
pop
adc
xchg
mov
pop
jg
mov
loopne
push
xor
outs
push
loop
xchg
add
push
mov
xchg
js
(bad)
adc
pop
adc
aas
adc
add
outs
mov
out
cwde
repnz
jp
jo
dec
cdq
fadd
aaa
dec
add
xor
pop
mov
jbe
sbb
pop
mov
push
jno
pop
sbb
xor
mov
or
mov
test
ficomp
mov
(bad)
mov
sbb
adc
imul
push
mov
mov
loop
mov
cmc
xor
pop
sub
dec
stc
jle
add
aad
in
push
ins
rcl
xor
xchg
pop
pop
daa
out
push
mov
adc
sbb
xor
sbb
push
shl
stos
mov
pop
lahf
mov
les
xor
daa
(bad)
outs
jg
cwde
arpl
cmp
ror
call
xor
sbb
(bad)
cmc
outs
lahf
sub
mov
pop
je
imul
and
enter
push
sbb
dec
int
push
jb
gs
push
pop
jne
jmp
movs
fstp
lods
cli
shr
pusha
int3
test
pop
push
add
inc
xchg
das
mov
das
(bad)
push
ficomp
int
pusha
(bad)
loopne
xchg
pcmpgtw
jmp
mov
or
(bad)
jae
push
nop
sub
mov
pop
or
mov
push
ins
mov
cmp
fdivp
dec
jg
lds
mov
(bad)
mov
ds
or
lods
into
ret
mov
xchg
scas
mov
out
jp
test
call
gs
push
in
xchg
xor
adc
loop
imul
jbe
(bad)
xchg
pop
(bad)
push
add
mov
lock
call
fbstp
cmp
jne
xor
cmc
xor
or
inc
iret
retf
inc
rol
xor
scas
popf
mov
fdiv
dec
push
mov
cmp
mov
cmp
push
es
bound
dec
and
sbb
jae
ffreep
xchg
fcomp
add
or
mov
jb
and
push
dec
pop
ds
jecxz
outs
call
test
in
pop
or
sub
(bad)
test
test
sar
scas
pop
neg
ret
dec
jns
xchg
lods
mov
inc
dec
pop
nop
add
mov
push
push
xchg
mov
xchg
dec
scas
inc
lods
call
sbb
mov
xchg
getsec
push
repnz
xchg
push
or
out
push
outs
aas
mov
cmps
aad
imul
sub
xchg
pop
xor
popa
xor
dec
mov
enter
xchg
mov
jne
ror
or
sahf
ins
cmp
jae
(bad)
and
dec
stc
inc
mov
sbb
dec
dec
fdivrp
add
or
dec
pusha
(bad)
mov
test
jae
inc
inc
push
loope
jae
inc
jmp
cwde
and
inc
inc
imul
les
inc
mov
push
fucomp
mov
add
xlat
je
je
popf
and
int3
(bad)
fdivr
pop
add
cdq
adc
mov
mov
jg
push
sub
xchg
hlt
push
test
push
jae
sub
mov
mov
out
and
mov
and
retf
pop
test
adc
dec
outs
mov
cmp
push
and
jo
outs
movs
mov
fldcw
mov
push
loope
(bad)
inc
jno
inc
cmps
inc
mov
shr
mov
cld
add
arpl
ja
fstp
inc
pop
push
fwait
adc
mov
fcom
(bad)
xchg
push
sahf
and
daa
sub
jmp
cmp
in
xchg
enter
bound
enter
sbb
ds
neg
mov
out
test
push
sub
jne
lods
dec
ins
pop
mov
js
aam
ins
xchg
inc
out
and
cmps
xchg
fwait
push
mov
add
es
or
das
cwde
sbb
outs
pop
test
add
sbb
lods
jo
fnstenv
jmp
xchg
rol
cdq
or
cwde
adc
aad
out
push
in
movs
xchg
push
fwait
out
in
fild
stos
in
push
sbb
(bad)
leave
mov
ret
inc
js
lea
pop
inc
test
push
stos
je
lea
or
loopne
adc
inc
icebp
hlt
dec
jmp
loopne
cmp
or
out
lea
or
add
mov
pop
ret
es
fwait
mov
cwde
shl
dec
test
mov
xchg
imul
ror
out
pusha
dec
loope
out
push
test
jecxz
shr
and
loop
fs
sbb
call
sbb
xor
xchg
xor
cmc
idiv
fistp
out
mov
pop
icebp
test
(bad)
out
push
(bad)
ins
ss
pop
stos
xor
sub
inc
mov
rcr
cs
lock
adc
push
xor
fwait
dec
mov
aaa
pop
fimul
sub
out
jbe
pop
addr16
or
lahf
mov
je
jne
sub
out
fcomp
add
sbb
les
xchg
xor
int3
push
std
out
hlt
test
les
nop
inc
xor
and
cwde
xchg
stos
xor
xchg
mov
sahf
mov
and
retf
lea
call
das
xor
sahf
int3
das
fild
pop
push
jp
cmp
push
aam
sub
jmp
jge
out
or
sub
push
ss
es
ja
cmp
inc
dec
dec
fist
mov
or
jle
mov
std
or
xlat
in
sahf
fsub
popa
stc
and
out
sahf
and
retf
dec
and
mov
mov
pop
cwde
adc
repnz
into
add
xor
adc
dec
jns
and
push
(bad)
scas
jp
mov
jge
pop
push
jge
fild
xchg
in
out
call
cli
mov
lods
iret
jns
jo
popa
dec
sti
mov
sub
inc
mov
fistp
mov
loop
jae
pop
jle
inc
(bad)
xchg
in
fdiv
ins
xor
shr
jge
rcr
movs
inc
jo
scas
add
arpl
in
ret
sbb
xchg
and
and
jnp
daa
sub
add
fs
adc
xchg
imul
jecxz
test
icebp
(bad)
or
mov
xrelease
pop
jge
shl
popf
in
push
ins
sbb
and
aam
cmp
pop
xchg
aad
sti
xchg
or
ins
cdq
and
xchg
sub
push
frstor
sbb
mov
rcl
in
adc
adc
mov
jno
sub
push
and
loope
inc
cmps
fild
jp
sub
xor
push
cmp
mov
retf
call
aas
shl
jb
pop
retf
push
inc
out
pop
inc
hlt
adc
stos
repnz
cmps
out
push
fistp
jb
outs
xchg
adc
pop
mov
cmp
(bad)
mov
mov
ins
adc
cmp
hlt
jo
xchg
fiadd
cmp
test
clc
pop
dec
inc
sahf
or
mov
movs
mov
ja
sahf
stos
and
inc
fdivr
out
out
repz
cli
std
cmps
mov
mov
pop
sub
mov
pop
aad
mov
mov
fmul
jns
add
imul
sub
repz
sub
outs
push
not
call
das
icebp
cmp
cmps
add
jecxz
sbb
adc
adc
ror
jp
jb
sbb
outs
mov
pop
hlt
test
sbb
xor
iret
sub
stc
outs
test
fsin
mov
sti
jmp
adc
(bad)
and
iret
jmp
mov
inc
out
test
mov
jmp
(bad)
xchg
xor
loopne
cmp
icebp
iret
sti
mov
and
push
jl
sub
add
xor
xor
lahf
cld
add
or
pop
lds
add
and
cmps
jo
call
inc
pop
shr
cmp
add
sbb
mov
out
mov
popf
sbb
stc
push
adc
jnp
outs
retf
push
mov
push
inc
sbb
mov
enter
lds
pop
ret
jmp
xor
xchg
adc
push
cmps
adc
adc
(bad)
mov
lds
xor
cmp
push
lea
inc
push
dec
xor
sbb
nop
add
pop
add
jae
(bad)
mov
sbb
in
scas
dec
and
retf
inc
xor
xchg
aas
mov
fadd
js
or
pop
clc
or
xor
add
mov
(bad)
cmp
pusha
pop
ja
jns
push
dec
cli
movs
cmp
fild
psubsw
je
aas
gs
mov
jnp
adc
add
xchg
jg
cmp
mov
xchg
popf
jg
mov
or
or
fild
xchg
and
not
das
cmp
rcr
lds
or
ins
imul
dec
faddp
fs
addr16
add
pushf
add
in
xor
dec
in
in
jne
xchg
scas
fadd
pushf
jecxz
repnz
enter
mov
cmp
test
test
call
pushf
cvtdq2ps
test
popa
aas
sub
dec
fisttp
jp
xor
sti
cmp
fistp
xchg
cmp
jne
sbb
ins
xor
out
push
call
adc
cmp
lods
retf
inc
jecxz
cmp
sub
(bad)
aam
push
cmps
movs
cmp
mov
mov
je
pop
mov
jge
dec
mov
mov
leave
xchg
xchg
or
stos
xlat
or
xchg
mov
int3
jp
cmp
jp
mov
aam
inc
(bad)
jmp
jecxz
clc
xchg
xchg
add
fcomp
pop
mul
je
mov
jb
mov
enter
bound
jno
(bad)
jmp
and
addr16
adc
dec
sub
repz
mov
jl
out
mov
jb
ins
add
fbld
imul
into
sub
add
mov
shr
loop
jmp
(bad)
push
jns
dec
pushf
rol
push
push
or
and
jne
pusha
jae
dec
scas
cmovo
ret
cld
pop
cmps
mul
mov
int3
jns
ja
push
cld
nop
or
rcl
fld
jno
lock
inc
xor
xchg
pushf
push
jp
popf
sub
push
push
xchg
and
sub
jecxz
xchg
cld
jo
sub
call
daa
rcr
pop
lahf
dec
aad
addr16
mov
dec
lea
fnstsw
jbe
xchg
push
fwait
movs
sbb
and
mov
pop
inc
cli
or
or
retf
sbb
sar
cmp
inc
mov
jo
sub
std
inc
add
xchg
lds
and
jg
dec
mov
ins
cmp
fcmovbe
mov
mov
add
dec
pop
pop
cli
scas
sbb
loop
imul
ja
sub
test
mov
jb
rol
xchg
sbb
jno
push
sar
fisttp
mov
xchg
test
in
push
and
lea
in
pushf
movs
outs
mov
or
shl
xchg
test
fwait
rol
jae
cmps
dec
mov
push
dec
add
push
and
call
inc
lock
push
imul
mov
pop
jg
cmp
push
cmp
retf
adc
lea
(bad)
clc
mov
add
xor
mov
movs
xorps
mov
ins
add
bound
cld
jle
adc
addr16
out
fsubrp
cmp
bound
pop
aaa
dec
push
cmp
out
(bad)
push
retf
lea
stos
inc
cs
push
cmc
movs
movs
cmp
jp
test
fwait
(bad)
out
popa
jecxz
repnz
fmul
jnp
sub
dec
mov
mov
inc
cmp
(bad)
sub
(bad)
and
or
jo
mov
inc
mov
(bad)
jo
jno
into
cmp
dec
sub
push
xor
and
out
jo
jno
fstp
mov
iret
xor
scas
test
inc
sub
std
jmp
push
cmp
sti
mov
push
mov
cdq
push
repnz
pop
shl
sbb
and
out
jle
out
imul
adc
into
adc
int3
rol
pop
sar
fsub
and
xchg
imul
dec
jmp
sub
adc
pusha
mov
jle
fld
movups
and
inc
or
pop
rol
and
xor
mov
push
aaa
jne
or
fcomp
pusha
mov
int3
scas
fst
sbb
pop
add
pop
outs
fist
or
cmp
test
lds
sbb
pop
dec
stos
mov
daa
xor
mov
cli
mov
jl
mov
adc
ret
jnp
iret
movs
xor
pop
adc
pop
in
sub
not
jecxz
ins
jo
or
cmps
clc
loop
es
out
pop
js
jae
lock
mov
bound
and
push
jo
mul
cs
dec
adc
pop
fidiv
jnp
pop
push
mov
add
cmp
loopne
(bad)
push
mul
lahf
fwait
mov
inc
sbb
adc
xchg
nop
adc
xor
imul
pop
mov
or
jle
xchg
pop
in
in
in
push
hlt
imul
in
dec
imul
mov
ffreep
jg
lds
sub
nop
jecxz
jnp
mov
jns
cmp
enter
test
jns
push
imul
dec
mov
jbe
inc
out
ret
scas
push
in
mov
lock
mov
push
sar
jno
xor
and
jo
and
out
arpl
mov
dec
ja
lods
sbb
ret
pop
add
mov
cli
aad
pop
test
out
test
sar
out
repnz
add
pop
dec
sub
inc
int
dec
ja
mov
mov
lods
inc
shr
ror
fadd
or
jnp
(bad)
hlt
ffree
xor
jg
mov
inc
push
mov
pop
jbe
cmc
mov
cmp
mov
cmp
stc
and
addr16
ins
aad
out
and
(bad)
cmp
pop
test
retf
ret
push
int3
dec
call
in
ret
test
dec
(bad)
inc
or
aas
xor
int3
sti
mov
loop
add
lahf
jg
test
add
ss
pop
mov
cld
jecxz
fst
push
inc
xor
in
mov
(bad)
call
push
repz
xchg
jo
out
add
dec
and
lds
cmp
cmp
lods
ret
pushf
stos
jle
loope
jp
inc
fldcw
xchg
dec
add
sub
pop
and
fisttp
call
sbb
sbb
popa
jge
in
shl
jecxz
cmp
sbb
mov
add
pop
outs
sbb
in
adc
fdivr
xor
add
mov
pusha
sahf
jp
pop
sub
sbb
add
icebp
and
mov
push
xor
pusha
test
dec
test
pop
xor
push
sub
outs
fdivr
je
and
mov
dec
mov
out
fmul
iret
jmp
xor
inc
inc
fidivr
jb
pusha
and
jb
out
pause
dec
stc
idiv
jge
leave
clc
outs
adc
xchg
ret
sub
lds
inc
jecxz
imul
adc
pop
and
dec
push
jo
cdq
sbb
jg
into
lods
neg
test
inc
cli
or
sbb
fsubp
loop
mov
inc
ret
arpl
ja
shl
cmc
mov
push
fwait
cmc
xchg
xor
out
jno
loopne
shl
mov
int
xor
(bad)
(bad)
fwait
aaa
(bad)
(bad)
mov
push
shl
fnstcw
xor
div
movs
cld
pop
dec
mov
add
movs
jno
(bad)
das
cwde
push
popa
loope
and
pop
mov
in
mov
int3
fnstenv
xor
dec
cli
out
(bad)
retf
cmp
ja
mov
test
lods
(bad)
inc
out
sar
adc
ja
sub
mov
inc
pop
fwait
mov
rcr
pop
xchg
call
retf
dec
push
outs
das
adc
mov
stc
pop
repz
jnp
pop
fincstp
out
shl
shl
and
fs
scas
out
call
sbb
cld
ret
lods
jb
daa
aad
jge
mov
jo
inc
xchg
mov
add
add
sar
sti
mov
imul
and
jns
add
cdq
mov
sub
push
arpl
or
daa
cmp
ret
addr16
mov
in
ja
mov
cwde
sbb
aam
ins
dec
clc
sbb
ret
jmp
ins
push
imul
fwait
rcr
int
imul
xor
aaa
sub
mov
ret
adc
mov
repnz
sbb
cmp
sar
(bad)
(bad)
jp
adc
scas
imul
scas
mov
test
and
xor
stc
push
es
adc
adc
mov
push
jmp
pop
mov
fmul
add
movs
dec
xchg
nop
ror
mov
push
and
ds
xor
lahf
sbb
jbe
lods
sub
aad
enter
int
mov
dec
cmc
sbb
cmp
outs
sub
loope
adc
xor
mov
push
inc
push
push
xor
and
mov
ret
push
cmc
inc
enter
xchg
mov
jbe
les
std
xchg
aad
je
xchg
mov
outs
(bad)
xchg
inc
mov
xor
adc
xor
fdivp
dec
adc
fwait
jb
mov
push
sbb
mov
mov
fild
sub
imul
push
add
int3
and
test
dec
in
mov
popa
push
pusha
sub
fsubr
and
jl
ret
mov
out
sub
push
mov
pop
cmp
mov
repz
retf
sbb
add
int3
jmp
sub
xor
pop
inc
sar
retf
xchg
call
ds
xchg
into
in
inc
imul
mov
mov
sahf
ret
sub
mov
cmp
loop
sub
(bad)
push
out
push
cmp
xchg
fbld
dec
outs
add
jl
xor
mov
mov
sbb
addr16
jbe
jge
pop
and
scas
movs
sub
xchg
cmc
dec
ins
repnz
push
cmp
inc
xchg
fsubrp
frstpm(287
inc
in
mov
cld
inc
cmp
retf
jmp
pop
add
popa
mov
(bad)
data16
imul
ret
test
rcl
push
xor
ins
add
repnz
je
jmp
adc
mov
pop
cwde
icebp
fcmovb
les
mov
xchg
shl
jnp
imul
sbb
int
adc
enter
fbld
jp
call
add
add
or
sbb
adc
mov
mov
inc
jp
push
setp
inc
sbb
inc
fcmovbe
hlt
ja
adc
loop
test
mov
imul
aaa
aam
ins
push
cmp
movs
outs
or
cmp
movs
loope
fcmovu
sbb
sub
cmpxchg
inc
imul
dec
sub
stos
pusha
fistp
sti
mov
lods
fistp
push
mov
shr
mov
mov
inc
and
test
cwde
jbe
aam
adc
inc
sub
mov
ss
rol
(bad)
iret
push
dec
jge
clc
mov
movs
push
dec
sub
cs
push
dec
pop
movs
shr
and
xor
sbb
mov
jno
or
jbe
(bad)
sub
mov
mov
(bad)
mov
popa
adc
ret
fdiv
(bad)
leave
xchg
dec
xor
test
cli
and
jo
ins
or
imul
adc
push
lods
mov
pop
adc
xchg
mov
adc
xor
or
push
adc
sti
out
sub
fdiv
or
dec
leave
mov
inc
pop
(bad)
jmp
pusha
inc
and
adc
inc
push
clc
std
jne
clc
repnz
ins
or
outs
cmp
mov
sbb
es
xchg
mov
xor
jp
adc
or
mov
xchg
sbb
jae
push
push
(bad)
sbb
mov
push
mov
call
xor
push
std
sbb
lods
and
adc
push
push
sub
inc
inc
jg
jmp
sub
push
mov
or
mov
arpl
and
or
sahf
leave
out
scas
inc
mov
xchg
rol
aaa
adc
sub
mov
fiadd
test
adc
jno
out
fadd
cmps
mov
push
mov
sbb
push
(bad)
iret
fwait
xchg
(bad)
jno
mov
adc
pusha
xchg
in
cmps
in
push
dec
jp
jne
rcr
mov
add
iret
sub
movs
xchg
jno
retf
arpl
adc
pop
iret
xchg
push
jbe
sbb
xor
cmc
sbb
aaa
and
push
xor
jle
(bad)
je
mov
ret
cmp
mov
xor
xchg
or
mov
aas
int3
xchg
loopne
sbb
clc
push
movq
or
and
aam
lea
xor
dec
js
or
sub
mul
in
bound
xchg
jbe
daa
shl
ret
mov
outs
je
in
inc
xor
enter
cmp
push
xor
or
out
ds
or
pop
sti
mov
mov
aas
or
sti
mov
mov
lods
stc
push
mov
call
pop
mov
pop
push
call
scas
fstp
sub
lds
mov
mov
cld
std
and
jecxz
or
cmps
rcl
cwde
inc
jp
xchg
addr16
(bad)
jnp
xor
(bad)
cmp
fadd
aaa
xor
cmp
(bad)
jmp
sub
lds
psubsb
fdivp
cmp
int
fisttp
ins
fisubr
movs
mov
mov
cwde
pop
cdq
clc
mov
and
clc
lods
and
sub
or
jmp
or
xchg
in
movs
mov
fadd
adc
add
xor
sbb
jno
pop
or
mov
jg
adc
fstp
mov
es
push
pop
movs
pop
in
mov
and
test
jmp
jb
(bad)
(bad)
out
mov
and
retf
cmp
sub
mov
bnd
into
or
mov
inc
inc
push
popa
out
xchg
xchg
mov
out
mov
int3
jge
add
jle
sbb
ds
xor
xor
xchg
jecxz
adc
out
cdq
push
adc
gs
xor
je
xor
xor
push
push
jo
(bad)
call
inc
cmp
sbb
je
sbb
mov
sbb
test
mov
or
mov
in
mov
sbb
cmp
sbb
pop
mov
in
cmc
pop
cli
xor
cwde
push
gs
or
out
sub
mov
adc
adc
or
cmp
outs
test
sbb
and
cmp
push
iret
push
das
stos
push
shr
test
bound
fist
xchg
adc
inc
pop
div
je
add
or
ins
aad
add
add
std
outs
mov
cmp
pop
call
icebp
in
pop
sub
icebp
sub
pop
sbb
push
aam
or
fidivr
push
mov
pusha
dec
cmp
adc
sub
pop
cmp
mov
ins
dec
test
(bad)
je
dec
mov
sbb
mov
retf
dec
mov
addr16
imul
mov
bound
(bad)
mov
sar
das
cli
dec
mov
cmp
add
test
cs
push
and
iret
xor
(bad)
data16
out
outs
add
or
cmp
lahf
xchg
enter
mov
sti
rol
jg
add
xor
ficom
inc
or
ffreep
cmps
sub
int
inc
mov
nop
ret
sbb
jnp
shr
cld
movs
xchg
pop
xchg
inc
fcomp
arpl
or
sbb
pop
sbb
jmp
es
push
jne
mov
ja
sub
clc
xchg
cmps
sbb
sub
sbb
iret
pop
jno
adc
movs
pop
mov
stc
int3
clc
(bad)
pop
jg
popf
jae
adc
(bad)
das
ficomp
push
ret
and
ror
sub
cmps
and
cmp
int
dec
mov
jnp
adc
sbb
jo
mov
pop
pushaw
pop
in
lods
shl
xor
mov
jnp
xlat
mov
xchg
les
leave
aam
out
stos
vmptrld
xor
and
xchg
in
mov
fisubr
shl
cmps
push
imul
mov
pop
cld
or
jmp
imul
sbb
out
push
rcr
movs
in
jno
and
inc
xchg
dec
fisttp
dec
into
(bad)
add
loope
inc
icebp
push
data16
(bad)
sub
fisubr
out
and
arpl
adc
in
mov
ror
pop
mov
sbb
int3
(bad)
or
(bad)
pop
ins
dec
pop
jns
hlt
mov
mov
xor
xor
mov
sar
pop
push
adc
xor
push
mov
loop
dec
aas
dec
popf
test
mov
fld
jo
mov
pop
(bad)
or
pop
sti
ins
push
cli
jne
xchg
jge
inc
cmp
jecxz
in
adc
rcr
cmc
add
sysret
ds
xchg
sahf
or
lods
cmp
dec
mov
jge
mov
pop
pop
xor
(bad)
popf
push
into
fwait
clc
enter
mov
shr
or
imul
and
scas
mov
dec
xor
in
push
jne
cmc
dec
cld
ret
cs
fs
add
mov
mov
mov
gs
cmp
dec
xor
test
retf
lock
mov
push
ror
icebp
adc
inc
test
sbb
ja
mov
sbb
(bad)
loop
jno
adc
cwde
aaa
or
div
outs
and
sbb
dec
pop
mov
popf
repz
and
cmp
sbb
loope
(bad)
jp
into
fadd
pushf
inc
leave
(bad)
mov
scas
je
xlat
sbb
pop
pop
mov
or
pop
ret
cld
(bad)
mov
pop
pop
test
fwait
popa
mov
dec
loop
sub
clc
jne
or
cmc
int3
sbb
popa
scas
jns
lock
outs
(bad)
cmp
jl
or
js
cmc
mov
add
xor
(bad)
ja
push
mov
mov
outs
add
or
xor
es
cmps
cmc
pop
cld
add
ds
adc
cmp
mov
mov
jp
mov
jmp
aad
mov
push
ret
call
je
sub
nop
cmps
sub
aad
(bad)
jne
outs
pop
mov
mov
pop
mov
mov
mov
gs
out
pop
cmp
xchg
outs
mov
or
xchg
cmp
jecxz
cmp
jg
ret
call
inc
pop
or
out
call
rcl
jle
es
int
xchg
loop
add
stos
cld
inc
sahf
pop
jg
arpl
hlt
ds
fsubr
sbb
repz
cs
sub
and
inc
ror
mov
fdivr
jmp
cmp
out
jg
call
iret
fdivr
inc
jb
mov
inc
sub
mov
cmp
(bad)
aas
out
lods
and
xor
out
push
shl
mov
das
inc
popa
xor
daa
js
push
movs
mov
mov
adc
push
aaa
jecxz
fidivr
inc
inc
pop
into
pop
mov
in
mov
xlat
jne
xor
inc
loopne
jg
(bad)
sub
jmp
jg
call
ins
scas
mov
push
sub
mov
mov
or
mov
stc
pop
mov
jne
mov
arpl
adc
aaa
or
out
or
inc
mov
js
and
hlt
xchg
or
mov
call
fisttp
add
xchg
xor
mov
ja
out
pop
iret
aas
mov
int
inc
in
add
push
mov
int
push
sbb
mov
lods
stc
das
ja
cmp
fidivr
call
pop
push
je
(bad)
pop
or
cmp
ror
mov
cli
add
gs
les
mov
push
out
pushf
and
ins
xchg
xor
or
(bad)
xchg
rol
or
dec
aad
and
add
add
fs
xor
pop
repnz
mov
popf
(bad)
and
adc
mov
bnd
and
cs
sub
dec
stos
loop
fisttp
push
fucomp
push
cmp
or
jb
dec
mov
pop
xor
and
inc
pop
pop
aas
and
sub
gs
(bad)
push
ins
dec
jmp
lods
ret
mov
hlt
aas
leave
fmul
into
jecxz
daa
xchg
(bad)
pop
arpl
pop
lods
push
mov
jb
lahf
dec
lea
sub
aam
rol
outs
hlt
jp
pop
mov
fidivr
popa
mov
and
imul
lods
jmp
fwait
add
push
mov
int
jmp
cmps
(bad)
je
dec
push
addr16
mov
cs
dec
inc
paddsw
mov
dec
mov
clc
ja
and
call
jmp
scas
mov
jmp
in
(bad)
test
inc
div
(bad)
in
test
push
mov
repz
(bad)
adc
cli
or
sub
fwait
aas
daa
xchg
fwait
cld
scas
icebp
jno
jecxz
pop
add
cmp
and
mov
movs
test
fwait
dec
lock
cmp
cli
leave
(bad)
sbb
jno
es
into
mov
pop
inc
sub
dec
icebp
mov
mov
arpl
(bad)
dec
or
enter
rcl
icebp
or
aad
int
and
mov
retf
and
mov
(bad)
xchg
xchg
je
test
pop
and
test
xchg
sar
cdq
mov
push
xor
sub
sub
adc
cmp
lods
sbb
in
inc
push
inc
sbb
loope
xchg
jl
imul
xchg
in
xchg
dec
test
imul
add
(bad)
enter
sbb
lods
xchg
or
mov
test
nop
push
jne
and
jp
dec
cs
inc
push
iret
aam
repnz
push
xor
(bad)
adc
or
ins
inc
adc
xchg
push
gs
mov
mov
and
jo
(bad)
mov
lock
mov
add
xchg
cmps
sub
add
aad
ret
mov
adc
cdq
inc
nop
dec
push
inc
mov
inc
js
dec
jmp
xlat
jae
rcr
pop
ja
xor
dec
cwde
mov
(bad)
jecxz
fwait
clc
ins
mov
mov
fs
into
xchg
inc
cmps
fisttp
cmp
add
pop
xor
fidivr
enter
inc
clc
hlt
fidiv
add
repnz
pop
mov
jnp
(bad)
aaa
retf
mov
mov
mov
(bad)
jmp
and
pop
int3
sub
inc
cmps
pop
rcr
adc
shl
mov
(bad)
les
in
out
push
mov
fdiv
mov
mov
push
int
mov
xlat
sbb
sbb
hlt
mov
pop
dec
cwde
jl
scas
mov
in
in
fist
mov
in
addr16
mov
or
dec
sbb
pop
pusha
neg
jge
pop
adc
hlt
cmp
dec
or
mov
xor
mov
stos
call
in
rcl
pop
sub
arpl
sub
jmp
dec
pop
in
out
imul
sbb
push
mov
outs
cdq
sub
xchg
xchg
imul
add
jge
ins
cs
in
imul
xchg
popa
cmp
cwde
mov
test
fmul
int3
adc
ret
outs
or
push
sub
scas
sbb
test
add
pop
mov
cmc
mov
push
dec
jmp
add
sahf
mov
push
fwait
inc
mov
cld
aaa
jne
cmp
hlt
inc
retf
jno
jge
ficom
out
fwait
movs
xor
dec
mov
mov
js
aaa
dec
popf
push
fwait
movs
jb
cdq
push
loopne
xchg
mov
push
sub
cmp
nop
adc
mov
das
push
movs
xlat
inc
xchg
xchg
mov
xor
mov
jo
stc
loopne
loop
inc
inc
push
push
test
test
pop
jmp
adc
icebp
ins
ret
mov
cmp
outs
clc
mov
mov
arpl
fild
cld
xchg
push
(bad)
mov
mov
pop
sar
inc
add
popa
in
fidivr
test
scas
out
movs
or
jecxz
lods
and
or
daa
in
xlat
hlt
add
sub
xor
rol
push
inc
inc
pop
ja
dec
pop
jmp
inc
xor
mov
and
pop
movs
dec
hlt
clc
adc
mov
inc
pop
aam
test
jle
ret
rol
mov
cmc
pushf
xchg
fnstsw
inc
pop
pop
jecxz
mov
push
pop
adc
mov
push
pushf
pop
mov
or
mov
lods
outs
outs
push
xchg
test
clc
adc
adc
jmp
and
paddsb
sbb
loop
fisub
pop
mov
aas
out
(bad)
(bad)
scas
add
push
fst
jl
dec
push
or
jb
int
jecxz
sti
repz
(bad)
inc
test
lock
push
adc
adc
adc
gs
sbb
je
(bad)
dec
ficom
enter
pop
aad
outs
out
out
dec
xchg
sub
in
or
daa
and
enter
inc
cmps
sub
push
mov
iret
xchg
or
adc
ja
mov
fisttp
data16
mov
lea
and
sbb
cdq
xchg
cmp
or
test
sub
and
xchg
test
xor
sahf
mov
dec
fist
xchg
rol
mov
add
or
mov
in
nop
popf
pop
sahf
mov
(bad)
or
cmp
dec
cmp
push
jns
push
in
ffree
cld
cwde
into
push
jns
or
ret
shl
fdiv
cmps
inc
inc
push
inc
sub
arpl
pop
stc
ins
xchg
mov
sub
xchg
dec
jo
push
packuswb
xor
cmp
jb
fsub
les
mov
sbb
cmp
mov
inc
or
int
xchg
pop
pop
mov
dec
add
fwait
xor
xchg
ds
jg
(bad)
push
push
inc
add
lahf
cli
and
(bad)
cs
jecxz
adc
jp
dec
stos
mov
(bad)
outs
(bad)
outs
dec
add
int
lods
xor
cmps
ficom
loop
pop
cld
xchg
ins
loopne
dec
sbb
sub
dec
in
test
cmps
fldcw
cmp
in
adc
push
jbe
dec
bound
int3
rol
clc
add
mov
xchg
jb
and
lea
jl
mov
nop
add
sub
xor
nop
sub
cmp
loope
sti
fldcw
mov
jmp
stos
and
std
retf
(bad)
vpshaw
push
adc
stos
call
cdq
mov
imul
das
shl
mov
sbb
retf
cli
daa
test
add
jno
push
dec
test
inc
rcl
mov
test
sbb
pop
ret
les
add
jmp
and
lock
mov
pop
jae
sub
sbb
mov
jno
rcr
adc
sub
cmp
xchg
cdq
ret
inc
sti
rcl
jp
add
in
push
dec
das
mov
jns
shr
clc
jge
das
add
jns
vmaxss
dec
mov
(bad)
(bad)
pop
inc
retf
mov
ret
jae
jecxz
add
(bad)
push
repnz
imul
rcl
inc
aam
add
movs
mov
mov
fidivr
leave
in
cli
or
fistp
jl
or
hlt
mov
mov
dec
xor
fcmovnb
sub
mul
xchg
test
sahf
rcr
jp
mov
cld
inc
jle
xlat
in
scas
lock
ja
xchg
out
adc
cmc
pop
aaa
jae
push
pop
mov
shr
cmp
mov
push
mov
fld
mov
cmc
aas
dec
movs
jnp
test
xor
rcr
cld
xor
(bad)
mov
mov
aam
fs
sbb
in
push
add
aaa
xor
dec
stos
xchg
mov
ror
addr16
icebp
or
icebp
(bad)
call
sub
cmp
jg
push
adc
sahf
cmp
or
aam
mov
int
les
inc
xchg
ror
mov
jno
inc
dec
jg
sub
cmps
cmc
mov
cmp
js
mov
jg
inc
pop
loope
loope
std
mov
stos
pop
pop
cli
mov
and
cmp
xor
adc
rcr
test
cmp
shl
xor
rcl
dec
xlat
xchg
push
imul
popf
jle
adc
xchg
pushf
inc
idiv
sbb
call
je
imul
dec
xor
outs
jg
dec
jns
out
icebp
xor
std
jne
mov
test
jo
iret
aad
push
jp
mov
pop
push
test
pop
xchg
aam
jle
adc
dec
push
and
clc
clc
ror
mov
add
out
inc
mov
jns
loope
out
ds
cmps
test
fiadd
mov
cld
push
ror
pop
out
and
push
arpl
dec
movs
sub
jo
xor
scas
or
mov
icebp
push
sub
add
push
adc
inc
sub
mov
cvtps2pi
inc
scas
fld
xchg
in
(bad)
call
int3
dec
mov
adc
ins
pop
push
xchg
jbe
or
mov
pop
inc
and
aaa
jae
jo
stc
and
in
mov
xchg
mov
jmp
jno
icebp
cdq
push
ss
xchg
movs
mov
adc
and
jecxz
aam
pushf
ja
in
outs
fnsave
mov
and
mov
scas
stos
jne
cmp
test
(bad)
cmp
nop
cmp
loop
int3
movs
nop
pushf
loop
jge
push
fwait
mov
push
fild
add
sbb
sub
repz
mov
sbb
dec
(bad)
in
and
jns
or
push
iret
sub
adc
in
sbb
push
mov
mov
jmp
(bad)
scas
sbb
js
push
cmp
(bad)
xchg
or
popf
inc
daa
outs
rcr
sub
sar
push
movs
mov
pop
dec
cdq
imul
xor
sbb
mov
pop
cmp
dec
scas
cs
cmp
mov
movs
ror
fst
jl
mov
push
or
and
adc
test
mov
aas
aaa
aaa
or
push
adc
iret
sbb
xchg
xor
sub
inc
(bad)
je
mov
imul
rcl
sti
ds
xchg
dec
dec
sub
retf
mov
repz
test
nop
iret
cmps
aas
jbe
inc
adc
stos
das
(bad)
inc
test
fmul
ins
sbb
xchg
aad
jmp
pop
enter
cmp
sbb
lahf
mov
push
sbb
dec
inc
xchg
mov
hlt
xchg
inc
test
push
xchg
sub
pop
xchg
dec
addr16
and
loopne
inc
ror
outs
ins
retf
stc
push
les
and
test
push
outs
js
mov
cs
(bad)
out
mov
lods
add
out
xchg
or
pop
loope
icebp
fisub
imul
sub
(bad)
fdiv
xchg
cld
fist
adc
sbb
cmp
xchg
jmp
jp
aaa
cmc
xor
dec
mov
out
loope
dec
scas
mov
or
or
sub
sbb
pop
add
int3
xchg
mov
mov
outs
movs
jns
jecxz
cmp
cwde
jg
gs
ficom
adc
mov
out
adc
inc
mov
rcr
inc
xchg
loop
mov
lods
stc
arpl
punpckhbw
xchg
nop
cmp
out
and
or
xchg
fpatan
popa
addr16
stc
cmp
jg
sub
xlat
xor
push
and
xor
mov
loope
ds
add
push
fist
cs
arpl
stos
lds
test
scas
and
sub
int3
xor
sub
pop
push
(bad)
fiadd
mov
mov
sub
jnp
repz
and
rcl
dec
jg
mov
aam
shr
xchg
inc
lods
arpl
cmp
or
push
jae
inc
into
ins
(bad)
fsub
int3
push
pop
mov
lods
aas
mov
nop
enter
and
push
cmps
dec
movs
(bad)
loope
rcr
mov
inc
jp
out
call
mov
dec
adc
std
jns
fst
gs
into
out
test
aas
push
add
sbb
fs
pop
(bad)
sbb
lds
inc
inc
mov
mov
hlt
jge
dec
sbb
or
add
hlt
pop
adc
mov
addr16
mov
jl
cmp
pop
mov
enter
scas
test
pop
inc
mov
push
cdq
inc
iret
jnp
cmps
ins
or
sbb
inc
ficom
lahf
lahf
adc
test
cs
dec
and
scas
push
sub
push
shl
push
mov
sub
jo
rep
mov
(bad)
add
inc
and
or
scas
sub
arpl
jle
sbb
mov
outs
xchg
xchg
loopne
jmp
int
or
mov
retw
mov
xchg
movs
dec
inc
add
into
jbe
(bad)
pop
dec
loopne
ins
dec
adc
add
xchg
dec
enter
or
out
int
xchg
mov
push
inc
icebp
movs
inc
xchg
xchg
loope
jmp
mov
addr16
sbb
fucomip
xchg
nop
das
xor
sti
sub
dec
pop
sbb
xchg
call
jae
lods
lods
push
rcr
enter
mov
loope
push
sbb
dec
mov
jb
pop
out
cmp
mov
push
mov
jo
jno
or
sbb
xchg
fst
loopne
fistp
push
pop
add
pop
push
and
push
movs
fidiv
call
cmp
cmps
jmp
out
cmp
pop
outs
js
push
or
push
ror
jle
repz
loop
(bad)
repnz
retf
test
hlt
loop
cmp
inc
in
cmp
shl
pop
das
lds
cld
jo
std
mov
(bad)
ins
fs
ret
fldenv
sti
aad
fwait
daa
sub
fwait
rol
outs
shr
push
out
mov
scas
or
xchg
or
cmp
outs
xchg
ds
and
xchg
std
xchg
jg
dec
dec
mov
and
stc
or
repz
mov
fwait
sbb
scas
test
jmp
xchg
jl
jl
and
inc
enter
dec
mov
jnp
(bad)
fmulp
sub
(bad)
add
dec
inc
shl
cld
scas
mov
call
(bad)
movs
daa
sub
xchg
mov
cmps
pop
or
sbb
imul
xlat
(bad)
imul
test
(bad)
push
call
daa
pop
pop
push
int
in
xor
sub
adc
mov
add
loopne
push
stos
into
mov
fdivr
pop
cs
and
fs
or
cmp
add
cmps
jmp
add
call
fwait
add
(bad)
into
retf
data16
or
ret
jg
rol
cli
(bad)
jp
pop
test
jge
mov
stc
daa
sbb
or
mov
fild
sbb
mov
adc
jmp
xchg
adc
xchg
jmp
jg
shr
mov
in
daa
add
jmp
sbb
test
xor
sbb
xor
pop
test
loope
dec
xlat
(bad)
std
outs
or
adc
std
adc
hlt
je
int
adc
test
jp
adc
push
ja
mov
pushf
sub
leave
inc
adc
mov
pop
push
xchg
dec
push
out
stos
loopne
mov
or
adc
sub
and
push
push
dec
and
ret
mov
retf
sub
test
push
test
push
fdiv
popf
div
leave
clc
repnz
adc
cmc
dec
cmp
fs
outs
xor
test
cmp
mov
push
je
mov
outs
aas
push
nop
jmp
ins
mov
cmp
pusha
mov
and
fdivrp
cld
and
dec
aad
fsub
mov
outs
std
loope
pop
pop
enter
and
xchg
movs
sub
mov
nop
sbb
mov
adc
mov
ds
fld
cwde
(bad)
mov
push
das
jno
xchg
add
jns
sub
sub
pop
scas
pop
out
outs
mov
arpl
cli
adc
xor
cmp
shr
out
outs
xchg
popf
pop
std
pop
inc
fist
inc
adc
mov
jge
add
lahf
ficom
jmp
and
scas
dec
stos
cmp
push
jne
jge
pop
and
movq
rcr
loopne
add
fdiv
or
lea
loopne
adc
mov
cmp
push
repnz
adc
add
scas
stos
jge
jo
lock
ror
bound
inc
(bad)
stc
popa
inc
popf
add
stc
jno
aam
pop
jp
adc
data16
jno
push
jb
dec
sbb
int3
jo
lds
push
sahf
mulps
les
jbe
push
jno
rcl
push
mov
fld
mov
xchg
clc
and
test
mov
shl
pop
mov
ins
adc
pop
outs
(bad)
cmp
loop
shr
xchg
push
adc
mov
loop
inc
push
or
cdq
int3
pushf
movs
fmul
push
stc
add
cld
push
das
in
shr
(bad)
pop
cmp
cld
leave
mov
(bad)
add
cmp
outs
mov
jge
lea
mov
mov
or
mov
or
nop
outs
sbb
mov
repnz
pop
hlt
mov
retf
rcl
cdq
inc
cld
xor
and
out
mov
fucom
cli
sub
psraw
jbe
sbb
retf
adc
mov
pop
stos
call
popa
mov
imul
rcr
mov
push
sbb
or
jae
sti
mov
xchg
fadd
hlt
loopne
adc
mov
inc
or
les
and
and
cmps
xchg
cmp
xor
pop
daa
mov
cmp
jecxz
mov
adc
iret
scas
clc
push
jo
out
sar
xchg
aaa
nop
push
inc
and
int3
ret
mov
aaa
adc
test
or
aad
xchg
add
cmps
mov
sbb
xrelease
mov
mov
inc
and
prefetch
lea
xchg
(bad)
push
cmp
mov
adc
adc
(bad)
je
pop
adc
pop
es
xor
mov
ja
retf
jmp
mov
mov
daa
sub
rcl
ds
movs
mov
mov
add
(bad)
jp
add
or
pop
dec
jno
or
mov
mov
cmp
aam
hlt
push
dec
lea
sub
jns
mov
div
adc
jne
enter
ins
call
shr
jmp
icebp
je
pop
mul
imul
call
inc
call
add
(bad)
leave
inc
pop
or
adc
aad
jl
(bad)
xor
mul
rcr
movs
div
or
adc
iret
je
inc
jns
aad
mov
aam
push
mov
push
das
and
inc
aad
in
push
(bad)
jg
sbb
repnz
inc
dec
or
lods
pcmpgtd
xchg
enter
lods
movs
add
jg
xchg
int
inc
imul
push
addr16
and
and
test
cmp
xchg
imul
dec
dec
ja
out
dec
inc
inc
sub
add
int
mov
fisttp
je
fmul
adc
push
repz
into
std
ins
lods
icebp
xor
xlat
ficom
mov
cli
scas
(bad)
icebp
enter
push
adc
mov
ret
jne
sbb
and
(bad)
outs
pop
xor
in
xor
lds
fbstp
lock
or
and
lds
ficomp
cmps
inc
cmp
push
mov
mov
je
sub
lods
call
mov
and
sub
daa
gs
and
imul
xchg
in
jnp
lds
mov
sbb
bound
jl
imul
inc
call
sbb
xchg
stos
sub
pop
cs
pop
dec
dec
sub
push
jecxz
jb
add
inc
into
ror
loop
cli
add
daa
std
xor
scas
call
mov
inc
cld
imul
dec
sub
scas
ret
out
jbe
(bad)
jmp
jecxz
dec
push
dec
inc
inc
mov
je
retf
das
repnz
xlat
pop
push
xor
daa
xchg
cmps
adc
or
aam
ds
add
aas
aas
cwde
ror
add
jmp
inc
mov
shl
jmp
mov
mov
pop
mov
pop
xchg
into
jle
mov
sahf
jae
fmul
stos
shl
icebp
das
gs
pop
mov
sbb
add
push
imul
mov
jno
mov
sbb
stc
lock
pop
rol
clc
pushf
xchg
(bad)
push
push
sub
cs
imul
js
sub
lahf
or
xor
or
pop
and
jb
push
sub
adc
loope
inc
push
repnz
xor
leave
adc
fdivr
cmp
cdq
das
ret
jp
dec
(bad)
jae
mov
cmp
inc
ja
jle
out
cmc
addr16
push
xor
aaa
cmp
ins
push
es
pop
or
scas
icebp
fisttp
mov
or
call
mov
mov
push
dec
ret
fs
jbe
mov
add
aaa
or
fild
xchg
test
jns
out
(bad)
xlat
xor
in
mov
mov
ret
cli
cmc
or
bound
and
pusha
cmps
push
and
fs
bound
test
mov
mov
(bad)
sbb
mov
sahf
mov
sbb
xchg
retf
pop
or
fisub
data16
sub
test
push
sti
outs
fisttp
push
and
fldcw
mov
add
adc
or
iret
and
fwait
repz
adc
push
cmp
pop
fistp
hlt
js
lock
loope
sahf
out
jbe
mov
mov
jge
lahf
mov
leave
cmps
(bad)
push
mov
mov
jbe
mov
hlt
mov
xchg
ror
into
and
mov
in
daa
int3
mov
cli
mov
jmp
loop
inc
lods
leave
push
pop
cdq
gs
jmp
mov
xor
jl
fbstp
inc
stos
test
gs
outs
fild
cmp
xor
dec
inc
hlt
loop
ins
les
(bad)
lds
rcr
sar
clc
les
fcmovne
adc
cdq
das
movs
sub
repnz
xor
out
enter
dec
fdivr
ins
and
jle
jecxz
or
jo
jl
xchg
cmp
shl
clc
jg
adc
and
xlat
dec
jecxz
cmp
sti
fisubr
into
ins
inc
xchg
jmp
call
jmp
jle
dec
mov
push
pushf
movs
pusha
mov
adc
add
xchg
ret
cmp
scas
xchg
scas
mov
fistp
cld
or
or
shl
dec
aaa
jo
mov
sub
jno
and
cdq
call
sbb
mov
mov
mov
lods
push
or
leave
xor
outs
popf
push
gs
mov
arpl
cwde
push
push
cmp
cmp
cmp
sahf
js
loope
outs
mov
sbb
xchg
movs
mul
xchg
mov
arpl
lahf
dec
test
push
pushf
(bad)
cmp
inc
xchg
int
in
push
jmp
bound
cmp
(bad)
hlt
jo
sbb
add
mov
jo
push
cmp
in
add
add
imul
cli
ins
sbb
add
xchg
xchg
push
aam
lods
daa
xlat
sub
jl
int3
leave
mul
je
pop
mov
pop
xlat
neg
popa
in
(bad)
mov
imul
mov
dec
cmp
loopne
(bad)
xlat
mov
adc
jns
dec
jp
jecxz
mov
add
or
sub
(bad)
(bad)
jbe
les
out
jmp
and
sub
inc
loop
inc
dec
xlat
jns
(bad)
nop
mov
psubsw
cwde
jb
inc
xor
mov
lds
lds
iret
imul
inc
pop
gs
out
std
outs
dec
xchg
pop
nop
hlt
std
out
cmps
add
or
and
and
test
pushf
add
jnp
fwait
cmp
out
mov
frstor
inc
sbb
movs
js
retf
fadd
pcmpeqb
jno
xor
stos
nop
ins
mov
jnp
test
pop
lods
enter
sahf
adc
(bad)
(bad)
iret
cdq
js
stc
bound
jmp
(bad)
in
mov
int3
leave
in
xchg
push
sbb
sar
or
push
ins
mov
mov
sub
lock
jne
data16
les
lock
sbb
add
sbb
fs
jbe
push
mov
fwait
mov
stc
(bad)
cmp
mov
sub
push
js
inc
push
dec
popf
jge
or
cmp
std
adc
les
das
jmp
enter
cdq
retf
cmps
scas
scas
std
shl
sub
jg
sbb
and
cmp
push
retf
jl
movs
loop
pushf
(bad)
js
cmp
sub
fwait
adc
mov
sar
push
mov
add
jmp
rol
shr
adc
pop
int
mov
outs
jmp
jo
jmp
jle
sbb
mov
es
cmc
cmps
mov
inc
jae
sub
fdivr
push
(bad)
arpl
ret
adc
stos
inc
ins
and
out
push
stc
xor
adc
adc
cmp
adc
cmp
scas
in
loopne
push
sub
mov
xor
mov
pop
and
or
ret
jge
or
dec
scas
ror
sbb
call
(bad)
mov
mov
leave
stc
std
leave
call
scas
dec
ins
add
dec
pop
mov
(bad)
xchg
inc
mov
jne
out
cmps
repnz
dec
mov
push
iret
jmp
sbb
in
mov
mov
push
call
(bad)
popf
je
mov
sti
ja
in
rol
mov
sbb
cmp
imul
sbb
and
fst
sub
inc
mov
xor
std
mov
xchg
push
out
push
dec
cmp
sbb
cmp
test
jno
xor
repz
test
jl
stc
ret
sar
xchg
test
mov
out
iret
fldenv
xchg
mov
loopne
addr16
daa
xor
dec
jp
in
pushf
jno
push
out
addr16
xchg
sar
mov
and
dec
pop
push
stos
outs
call
pushf
add
push
leave
not
cdq
adc
jnp
fisttp
imul
cmc
stos
hlt
sub
iret
cmp
daa
or
into
(bad)
out
xchg
mov
mov
rcr
dec
push
mov
loop
mov
add
mov
and
imul
(bad)
jp
push
mov
mov
es
into
retf
adc
test
pop
or
inc
popa
pop
cdq
xor
push
pop
push
lods
pop
push
sub
into
dec
cmp
ins
sub
mov
gs
in
fdivp
sub
xchg
dec
sub
pop
ds
out
ret
adc
add
adc
adc
mov
sti
out
out
and
cmp
adc
push
xchg
adc
pop
stos
push
mov
xchg
add
scas
fdivr
jb
xor
mov
xor
pop
push
test
or
in
dec
push
rcr
or
ja
xchg
lds
jp
repz
sti
outs
les
sbb
out
sub
mov
xchg
push
mov
test
or
jne
int3
popf
jns
jno
add
mov
shl
daa
sub
mov
lods
bound
aas
jnp
pusha
pop
movs
mov
retf
cmps
push
xor
add
js
(bad)
lods
pusha
aaa
mov
pop
mov
push
daa
(bad)
push
call
add
sbb
mov
icebp
add
(bad)
sub
mov
les
arpl
(bad)
sbb
or
cmp
cmovnp
data16
nop
mov
call
retf
adc
adc
shl
xor
loope
loop
push
retf
movs
daa
and
push
nop
cmps
retf
push
inc
movs
inc
adc
stos
cmp
mov
or
and
push
adc
jb
xor
lods
dec
and
jge
nop
mov
xchg
cmp
and
xor
dec
enter
test
sbb
or
neg
cmps
out
js
fs
das
cmp
mov
js
xor
mov
lea
rcl
repnz
jno
inc
pop
out
inc
push
sbb
jecxz
jp
std
and
popf
and
jmp
xchg
mov
cmp
jl
movs
adc
or
into
xor
sbb
jmp
xor
out
lods
lahf
je
(bad)
pop
xchg
int3
xchg
fst
xor
mov
xor
jns
mov
inc
inc
mov
pop
pusha
xchg
pop
(bad)
fisubr
(bad)
outs
dec
jns
pusha
aaa
mov
xor
cmp
loop
into
bound
xchg
pop
dec
push
or
pop
mov
xor
mov
inc
push
(bad)
jmp
pop
jge
adc
cmp
jns
pop
in
stos
leave
cld
or
cmp
mov
out
push
adc
cs
mov
pop
aas
jmp
mov
push
test
mov
inc
dec
sub
dec
in
(bad)
aam
ds
into
(bad)
sbb
dec
push
out
mov
loop
mov
leave
ja
sbb
gs
and
(bad)
xchg
(bad)
jle
ins
out
sbb
mov
(bad)
(bad)
xor
dec
jmp
mov
test
mov
call
inc
test
jmp
sti
xchg
pop
fnstenv
rcl
mov
pushf
pop
nop
popa
retf
xlat
inc
ret
xor
fwait
add
cdq
repz
xchg
xchg
bswap
pusha
cvttps2pi
lods
das
cmp
dec
xchg
out
pop
pop
imul
cmps
lods
and
ret
xchg
jnp
inc
rcr
mov
inc
mov
lods
pop
or
sbb
scas
xor
pop
and
aas
adc
jbe
sbb
sbb
fcmovu
dec
fnsave
ss
push
mov
mov
sub
fld
sbb
lds
inc
dec
movs
stos
ds
mov
lods
inc
mov
cs
or
push
test
outs
jno
mov
sar
xchg
adc
jg
add
jecxz
loopne
icebp
add
pop
retf
call
inc
fsubr
js
imul
stos
ins
inc
dec
pop
sub
jge
jg
test
mov
mov
sar
jp
or
call
inc
jp
fs
and
adc
ins
lods
xchg
inc
out
push
cmps
bound
xchg
scas
push
stos
enter
adc
xlat
aas
jbe
mov
cdq
arpl
jge
inc
cdq
add
xor
inc
rcr
mov
in
out
or
or
dec
enter
push
mov
(bad)
hlt
sub
xchg
and
lds
mov
loopne
inc
cmps
or
test
into
in
inc
or
dec
adc
inc
fcmovbe
in
pop
out
out
sbb
cmp
add
sub
cdq
mov
jns
fild
inc
or
add
repnz
add
sbb
pop
iretw
ds
inc
mov
sar
pop
call
fadd
int3
mov
rcr
push
jae
push
and
or
jb
mov
xor
in
leave
dec
dec
push
push
sbb
inc
xchg
(bad)
mov
pop
test
js
outs
fimul
and
ret
repnz
shr
pop
stos
sbb
dec
xor
out
bound
inc
movs
xchg
pop
sbb
iret
mov
fst
fidiv
(bad)
out
mov
(bad)
add
xchg
int
pop
dec
sbb
xor
sub
push
jno
and
out
inc
aaa
rcl
push
lods
mov
int
ss
adc
jg
test
(bad)
pop
(bad)
inc
(bad)
ror
in
xor
dec
pop
mov
sub
cmp
int3
mov
dec
arpl
fdivr
pop
xor
lahf
ja
push
cli
sub
out
rcr
inc
and
js
xor
cmc
cmp
retf
in
mov
dec
xchg
jle
rcl
xor
add
je
scas
or
out
aad
fnstcw
and
inc
jge
es
retf
fst
or
pusha
and
test
sbb
mov
pop
in
or
xor
loopne
xchg
xlat
imul
sar
push
call
jg
dec
out
test
lahf
pop
xchg
jge
cmp
xchg
aaa
sub
add
sbb
aam
jg
retf
hlt
imul
(bad)
pushf
movs
cmp
call
cmp
pop
pop
(bad)
lahf
je
fmul
out
daa
push
xchg
fidivr
inc
out
xor
pusha
sub
dec
test
or
loop
stos
jb
mov
mov
inc
adc
adc
push
test
sbb
ret
aad
jl
mov
stos
es
or
imul
imul
popa
aam
xchg
jg
jo
stc
imul
adc
jp
mov
sbb
mov
jbe
cmp
retf
or
or
enter
jmp
clc
inc
sar
aas
sub
dec
mov
cmps
sar
test
dec
push
ds
or
inc
cmps
and
mov
dec
rol
add
and
push
dec
ins
int3
jmp
sbb
repnz
dec
push
mov
lea
and
in
xor
add
xor
imul
and
rcpps
cmp
dec
adc
dec
shl
jg
add
stc
push
loope
pop
push
movs
cdq
add
shr
push
pop
add
mov
and
in
xor
mov
push
les
jae
mov
std
xrelease
fnsave
xor
fstp
push
les
cmps
pop
aad
dec
mov
or
fucomip
test
or
jecxz
iret
xchg
dec
loop
add
mov
adc
popf
sub
inc
inc
retf
sub
mov
jge
leave
lods
aam
gs
int
jmp
mov
xchg
jecxz
dec
in
dec
hlt
mov
bound
mov
into
inc
pop
daa
inc
mov
(bad)
sbb
mov
push
jo
les
cmps
fist
push
mov
(bad)
test
fdiv
and
mov
xchg
pop
lock
ds
fs
cli
xor
inc
pop
or
jge
mov
outs
call
xor
sbb
dec
pop
and
neg
cmps
test
js
ss
jle
or
inc
push
daa
mov
pop
hlt
cwde
mov
leave
or
add
mov
cs
pop
pop
fiadd
pop
fild
xchg
inc
mov
loopne
gs
into
clc
sbb
pusha
rep
(bad)
cmp
aad
movs
xor
push
out
xchg
clc
xor
xchg
adc
lds
inc
test
jnp
daa
in
push
mov
sbb
mov
ret
iret
or
ins
sub
sbb
dec
nop
push
pop
les
in
fistp
push
adc
mov
and
adc
bnd
xchg
in
fwait
xlat
or
test
xchg
dec
adc
push
ret
fwait
add
sub
mov
jns
xor
loopne
xor
cmp
push
push
cmps
enter
jmp
aas
lds
aad
shr
dec
mov
(bad)
pop
dec
dec
xchg
adc
mov
mov
cmovo
jno
dec
adc
inc
adc
jb
ret
xchg
ds
movs
(bad)
sbb
or
loop
mov
cmp
int
lods
mov
cmp
add
cld
sbb
and
ror
cmp
mov
ret
adc
push
sub
stos
add
mov
jb
neg
pop
xor
or
and
and
(bad)
or
cmp
add
xor
mov
jmp
jecxz
outs
jne
leave
jmp
mov
xor
xor
cmps
sbb
ds
ins
repz
inc
mul
mov
xor
adc
lds
imul
in
test
add
retf
sbb
gs
ret
inc
inc
jp
in
aas
xor
sub
sub
push
inc
add
fcmovb
movs
mov
addr16
addr16
xor
cli
lahf
or
pop
mov
adc
sub
push
inc
(bad)
cdq
mov
jnp
mov
or
mov
test
adc
imul
pop
ins
dec
(bad)
imul
add
repnz
mov
jecxz
lds
push
pop
push
adc
add
neg
daa
dec
cmps
cld
mov
ja
sbb
popa
dec
add
pop
leave
adc
sbb
outs
sti
xchg
imul
gs
cmp
jmp
add
out
pop
push
mov
shl
push
out
shr
inc
or
call
adc
mov
mov
test
iret
int3
inc
jge
stos
nop/reserved
adc
shl
idiv
loop
jne
shl
lods
sar
clc
pushf
mov
rol
sahf
js
lods
push
ja
inc
or
mov
fwait
adc
jnp
inc
call
xor
push
ins
dec
or
jg
gs
stos
idiv
fcom
xchg
dec
dec
(bad)
mov
mov
xor
not
inc
fcom
mov
cld
and
(bad)
mov
cmp
adc
lods
sbb
jo
rcr
scas
cmc
push
not
retf
dec
adc
xor
mov
call
movs
jmp
mov
cmp
jno
jp
pop
jl
call
ret
adc
add
xor
push
hlt
or
adc
xlat
mov
dec
cmp
sub
or
sub
bound
dec
mov
je
jle
dec
and
iret
neg
xchg
jmp
mov
mov
outs
outs
lods
in
and
inc
int3
mov
sahf
or
loop
rcl
add
enter
in
add
test
jne
out
push
call
scas
xchg
pop
jbe
test
pop
out
test
(bad)
xchg
adc
daa
cld
scas
mov
out
sbb
test
ficom
xchg
call
rol
sub
loope
inc
mov
gs
int
rcl
and
xor
adc
jno
jge
or
setns
jbe
loop
xor
or
pusha
cmps
ins
inc
dec
sub
sbb
and
lods
jg
dec
cli
and
or
les
jno
sub
and
aaa
xchg
outs
cmps
dec
cwde
dec
sbb
inc
ins
popa
xchg
pop
(bad)
nop
xor
loopne
hlt
ret
and
fistp
sbb
xor
and
cdq
das
jge
test
mov
inc
jo
cmp
jo
inc
pop
ss
test
aaa
cs
ror
sbb
cmp
sub
rcr
pop
xchg
push
outs
mov
scas
mov
dec
jae
cmps
mov
jae
mov
shr
cmp
xor
movhps
jmp
sbb
pop
cmp
sub
mov
imul
mov
jb
add
xchg
shl
(bad)
add
test
push
leave
dec
xor
jmp
fsubr
das
xchg
jno
stc
add
(bad)
and
test
in
lea
and
or
fcomp
cmps
fcom
add
dec
sub
cli
pop
stos
icebp
push
sub
and
fidivr
jl
sub
push
push
add
and
add
das
loopne
arpl
div
inc
push
fcmovu
push
mov
mov
mov
sbb
mov
inc
mov
ss
adc
(bad)
ja
(bad)
gs
loopne
ja
jmp
mov
outs
fdiv
fbld
int3
sub
pop
push
nop
stc
popa
test
push
movs
push
inc
dec
into
or
xchg
dec
bound
jne
nop
adc
lea
sub
mov
cmps
adc
adc
cwde
aam
(bad)
cli
fwait
icebp
adc
xchg
pop
jmp
sub
inc
xchg
mov
movs
adc
test
retf
mov
mov
xchg
hlt
mov
(bad)
std
sub
sub
mov
sbb
cmp
sub
pop
scas
xor
(bad)
jae
mov
sub
inc
mov
loop
and
push
xor
js
mov
push
jns
xor
mov
jge
cmp
icebp
(bad)
lock
scas
jbe
mov
and
xor
push
mov
jg
sbb
int3
stc
das
jb
sti
inc
out
add
push
leave
or
repz
xor
les
jp
jnp
repnz
sub
dec
pop
hlt
ins
adc
in
dec
xor
bound
sbb
mov
push
jno
inc
xlat
mov
xor
shl
fcmovu
cmps
push
mov
pushf
jge
dec
inc
out
call
or
es
movs
pop
jnp
add
and
outs
sub
iret
push
test
iret
movs
mov
cmp
shl
jnp
clc
mov
or
dec
scas
xchg
test
xchg
test
movs
imul
push
pop
pop
dec
mul
dec
add
lock
std
xor
sub
push
or
mov
fwait
dec
sub
daa
fbld
imul
test
aad
inc
jle
sbb
add
ins
leave
pushf
mov
lods
(bad)
push
pop
outs
or
fnstcw
lods
cmps
outs
add
sbb
in
ss
and
inc
test
stc
aas
mov
jmp
jo
in
pop
cpuid
xor
mov
enter
inc
mov
push
hlt
bound
cdq
popf
or
mov
mov
popa
inc
sbb
dec
sbb
inc
int3
bound
arpl
(bad)
mov
mov
pop
adc
jecxz
inc
xor
and
dec
(bad)
xchg
mov
push
push
mov
inc
add
jne
(bad)
mov
mov
or
out
and
enter
imul
mov
lds
inc
imul
fsub
popf
add
movs
sub
push
icebp
jne
and
fs
adc
push
outs
adc
fistp
add
pop
xchg
push
sbb
popf
iret
pop
ins
mov
nop
push
pop
jl
sub
xchg
mov
outs
sub
push
lock
ins
add
push
xchg
or
mov
sub
ret
push
pminsw
inc
int
mov
inc
jle
bound
pop
in
cmp
clc
pop
in
sub
push
sar
push
mov
mov
mov
movs
cmp
test
retf
push
inc
pushf
push
mov
jp
mov
cmp
sub
ror
mov
xchg
in
mov
(bad)
sbb
stc
mov
xchg
push
dec
mov
shr
jl
push
xor
popf
pop
or
mov
dec
cmp
in
imul
js
cmps
shl
jnp
scas
fidiv
nop
sub
dec
pop
in
aam
jmp
stc
rcr
cmp
sbb
aad
mov
in
inc
imul
and
jmp
add
adc
or
popa
push
adc
or
scas
lds
xchg
adc
inc
out
cmp
mov
in
push
xchg
xchg
inc
push
popf
xchg
mov
test
js
inc
mov
rol
sub
xor
mov
adc
cmp
out
xor
les
xor
sar
pop
(bad)
add
shl
jbe
(bad)
aam
cmp
xchg
call
add
push
int3
push
pop
jbe
hlt
and
ret
jns
movs
aas
sbb
and
add
mov
pop
jae
cmp
pop
xor
pusha
in
sbb
cld
nop
iret
pop
sbb
inc
adc
imul
jp
sbb
out
xchg
(bad)
cmp
aas
stos
sub
shl
jl
pop
ins
aam
pusha
pop
dec
push
adc
fcomp
sub
in
jmp
inc
cmp
movs
xchg
enter
jo
mov
lahf
adc
or
push
mov
inc
imul
mov
jns
xor
jns
mov
popf
mov
aam
or
xchg
out
fld
mov
or
loope
push
mov
push
mov
in
mov
or
xchg
addr16
push
shl
mov
mov
call
retf
loopne
dec
pop
mov
out
lock
adc
ins
sbb
aaa
addr16
out
mov
xor
(bad)
daa
popf
sub
stc
sub
nop
and
push
cmp
repz
es
fbld
retf
pop
mov
(bad)
in
cmp
jl
or
les
loopne
push
ret
(bad)
mov
ss
mov
and
mov
scas
sbb
ds
sbb
push
dec
push
mov
mov
mov
int
(bad)
mov
lock
inc
call
(bad)
mov
bound
xchg
in
sub
js
movs
mov
adc
retf
mov
jl
imul
outs
mov
push
jle
int
pop
mov
cmps
sbb
adc
adc
std
add
enter
aaa
out
movs
mov
fnop
cmp
pop
movs
jno
ret
add
mov
repz
cmc
mov
push
xor
popf
aas
popf
ror
jns
bound
dec
int3
mov
sti
fcomp
retf
cmp
clc
and
add
movs
inc
pop
jl
xor
mov
push
xchg
mov
push
les
enter
fcomp
xchg
jnp
jecxz
fincstp
lods
js
out
fstp
jp
hlt
add
sbb
sub
mov
aam
loopne
rcl
daa
or
fxch
sbb
retf
repz
or
pop
jo
or
jle
call
inc
dec
xor
nop
mov
popa
inc
sub
iret
add
or
jmp
stos
bound
fsubr
aaa
add
mov
cmps
fwait
jecxz
retf
inc
sbb
mov
nop
push
out
mov
push
adc
xor
mov
cmps
test
sbb
mov
sbb
and
(bad)
sub
inc
ins
loope
ret
jge
dec
lods
or
or
sub
inc
sahf
xor
out
dec
add
and
jb
int3
mul
daa
retf
repnz
inc
inc
mov
std
stos
jne
in
out
iret
(bad)
xchg
into
mov
adc
sub
dec
lods
je
scas
jne
(bad)
rcl
inc
js
mov
xchg
pop
inc
pop
add
or
push
cmp
call
sub
pushf
jmp
inc
test
dec
sbb
pop
sub
stc
ss
adc
imul
xchg
clc
in
sbb
cli
cmps
lock
pusha
(bad)
ret
outs
cmps
jp
inc
in
iret
sti
lods
jmp
loop
jne
(bad)
mov
ins
xchg
sar
cs
inc
mov
xor
out
and
mov
aad
cli
fdivr
lds
fisubr
stos
shr
and
jecxz
es
mov
icebp
cmps
dec
inc
fsub
xchg
and
inc
mov
adc
ret
push
push
rol
adc
adc
gs
int
mov
ins
int
jmp
int
in
rdmsr
(bad)
in
add
inc
hlt
and
cli
sbb
aad
mov
or
mov
mov
mov
xchg
cli
mov
(bad)
pop
fisubr
jle
pop
aam
dec
inc
mov
(bad)
sar
pop
add
mov
mov
(bad)
mov
mov
inc
cmp
mov
mov
mov
sbb
adc
push
test
outs
cmp
les
cli
inc
dec
popf
cmp
mov
jns
mov
or
test
imul
and
push
add
clc
pop
shl
(bad)
or
fiadd
mov
fsub
fisttp
add
push
mov
aaa
inc
(bad)
push
mov
and
mov
loopne
mov
retf
sbb
cmps
retf
xchg
jmp
repnz
or
in
pop
inc
sbb
xchg
jbe
test
or
inc
and
jg
inc
push
mov
ja
arpl
adc
or
mov
dec
retf
push
sti
sbb
pusha
jae
loopne
xchg
(bad)
dec
or
in
add
jne
mov
retf
mov
cmp
repnz
push
push
pop
int
loopne
and
xor
adc
adc
in
mov
mov
je
(bad)
int3
xor
mov
cs
mov
std
fwait
mov
fcomp
test
in
mov
int
bound
addr16
xor
cmp
cmp
add
out
push
xchg
pop
lds
push
dec
jno
push
xchg
rcl
mov
and
jle
ds
and
stos
in
fdiv
repnz
test
push
and
repz
xchg
sahf
stos
or
adc
pop
retf
rcl
lahf
lods
not
inc
mov
dec
sbb
xor
(bad)
mov
xor
fmul
pop
idiv
push
repz
lahf
mov
xchg
mov
jb
(bad)
sbb
sub
mov
cmp
test
ss
clc
mov
push
into
(bad)
pop
int
xor
(bad)
hlt
jbe
jmp
mov
sub
push
mov
in
push
sub
fprem
or
fs
adc
pop
cdq
jge
push
aam
inc
sar
xchg
add
stc
cmp
xchg
(bad)
addr16
mov
test
js
pop
add
popa
test
xchg
mov
pop
lahf
push
neg
xor
daa
mov
inc
lods
cmp
cmc
mov
xchg
test
cdq
es
mov
or
daa
sbb
add
fld
inc
repnz
push
push
fbld
pop
push
cli
stc
ins
jno
popa
xchg
mov
lock
cmove
cwde
(bad)
push
adc
or
pop
push
(bad)
aas
(bad)
repz
(bad)
push
push
sbb
mov
push
nop
mov
mov
cdq
arpl
test
or
ins
dec
jo
(bad)
pop
daa
scas
stc
or
stos
jns
loopne
das
call
jae
sahf
mov
sub
gs
daa
popf
arpl
stos
lods
or
mov
test
gs
inc
push
mov
out
dec
pop
xor
stos
lods
pop
mov
scas
push
add
std
or
out
jno
push
pop
jnp
cmp
xchg
out
je
in
jbe
xchg
in
pop
test
cmc
pop
and
mov
retf
mov
sbb
ins
aaa
cs
out
xchg
mov
scas
inc
fwait
add
jmp
xor
loopne
mov
fcomp
pop
push
test
stos
add
push
leave
pop
fcom
jbe
cli
sub
sbb
inc
imul
xor
lods
icebp
shr
mov
out
cmp
ss
vpaddusb
es
out
and
aad
lods
xor
sub
sub
fnstsw
sub
jno
mov
or
enter
lods
mov
or
jno
rol
mov
retf
mov
ficomp
mov
das
sbb
dec
cmps
loop
(bad)
inc
movs
cmp
and
ins
aaa
fild
mov
cwde
dec
xchg
mov
push
scas
out
and
es
cmp
fwait
mov
mov
jns
adc
jecxz
sbb
nop
jns
dec
xor
pop
scas
mov
add
mov
pop
mov
mov
cmp
xchg
or
mov
xor
jb
ss
mov
or
xor
pop
mov
(bad)
cli
aam
inc
hlt
aaa
into
fld
ss
scas
test
and
inc
mov
push
movs
dec
pop
jns
test
jle
fdivr
bound
cmp
into
push
shl
fs
test
adc
sbb
icebp
cs
leave
scas
cmps
or
hlt
leave
fidiv
push
mov
mov
pop
dec
cmp
ja
sbb
je
fst
jb
nop
dec
or
out
mov
pop
push
push
shr
mov
test
loop
mov
add
lea
pop
into
mov
test
and
push
rcl
(bad)
rcl
scas
aam
xchg
fisttp
and
stos
add
mov
or
je
shr
ror
shl
and
mov
inc
add
inc
jo
mov
cmp
(bad)
cmp
enter
lds
cs
movs
xor
pop
inc
or
lock
mov
test
ror
inc
add
addr16
outs
out
dec
imul
sbb
pusha
or
xchg
(bad)
loope
out
pop
sub
fst
xchg
fist
sbb
mov
and
jns
fwait
adc
inc
(bad)
popa
mov
or
push
xchg
fild
jnp
ficom
cs
xlat
(bad)
test
pop
xchg
xor
jno
mov
mov
push
or
retf
int
faddp
push
pop
aas
cmp
pop
(bad)
les
sub
shr
mov
sub
addr16
loope
out
cmc
push
xor
push
mov
sbb
test
data16
push
inc
sbb
mov
(bad)
xchg
fstp
pushf
xchg
mov
or
inc
push
(bad)
ja
in
and
in
es
xchg
inc
repnz
cld
mov
lahf
popf
pusha
into
aas
inc
jg
test
test
mov
mov
stos
in
cs
in
pop
inc
xchg
shr
int3
clc
addr16
inc
inc
lahf
leave
mov
mov
inc
adc
sbb
ret
mov
xchg
aad
lods
jb
jo
cdq
loop
and
pusha
call
mov
or
dec
frstor
xlat
frstor
and
out
jno
(bad)
in
ins
or
gs
lea
dec
mov
dec
pop
pop
sti
mov
das
mov
imul
xchg
lahf
hlt
jmp
movs
mov
iret
clc
add
mov
test
dec
dec
sbb
ret
imul
or
mov
pop
aas
or
sub
shr
cmp
out
or
in
out
xlat
push
push
cmp
cmp
sbb
hlt
fadd
stc
neg
pop
xor
xor
add
cmp
out
scas
ds
push
adc
aaa
adc
inc
or
test
jmp
jae
js
pop
in
cmc
pop
pop
ret
test
scas
mov
js
cmps
pop
jbe
vmread
or
sub
and
fld
mov
movs
lahf
jo
pop
popf
push
test
jmp
sbb
mov
sbb
into
sahf
std
rcr
hlt
mov
stc
cmp
out
scas
daa
mov
jmp
and
nop
fsubr
gs
repz
bound
cmc
daa
int
push
int3
int
sbb
sbb
mov
bound
sbb
push
arpl
xchg
aas
mov
cwde
out
cmp
sbb
mov
sub
scas
cli
ss
xor
push
leave
arpl
shl
xchg
lahf
pop
dec
sub
pop
xor
ja
xchg
bound
out
xchg
adc
pop
sub
sar
std
add
pusha
mov
xor
call
aas
mov
push
jg
pop
jne
movs
dec
mov
mov
movs
es
push
push
xor
pusha
mov
add
mov
cmp
stc
cmps
mov
and
push
fdivr
iret
ins
test
jmp
movs
les
xchg
cmp
xor
popf
sbb
out
mov
xor
jp
movs
shr
int3
adc
leave
imul
cmp
hlt
push
add
cmp
add
test
aam
push
pop
mov
jne
sbb
outs
adc
sub
ret
mov
dec
std
(bad)
in
dec
or
sub
lea
jmp
lods
and
mov
outs
scas
inc
lahf
cmp
mov
or
jb
std
xor
dec
rcl
inc
into
(bad)
pop
mov
jl
(bad)
(bad)
in
(bad)
cmp
les
pop
fcom
adc
pop
cmp
scas
adc
(bad)
jmp
(bad)
stc
cs
stos
cwde
sub
outs
add
clc
and
sbb
pop
inc
jbe
rcl
push
mov
push
xchg
ja
or
dec
cmp
ins
addr16
jne
call
lds
es
imul
xor
lods
adc
in
adc
adc
loope
adc
cs
jbe
aaa
xlat
inc
ds
inc
pop
sbb
fisttp
or
inc
pop
out
outs
mov
dec
push
jae
mov
gs
sub
sbb
mov
loopne
xchg
mov
push
lock
mov
add
mov
les
icebp
mov
retf
aaa
push
cmp
stos
dec
jb
push
inc
xor
das
pop
push
inc
cmp
jge
(bad)
lahf
into
enter
das
dec
push
shr
lahf
loope
nop
dec
fdiv
retf
or
mov
add
xor
data16
out
xlat
xchg
adc
js
dec
push
data16
xchg
and
adc
fsubrp
fs
xchg
retf
pop
jecxz
pop
fld
or
dec
sbb
repnz
mov
call
imul
dec
jno
jbe
pop
mov
bound
and
sbb
mov
ja
sbb
jmp
retf
pop
jne
mov
dec
inc
pop
shl
xor
popa
mov
lods
xchg
sahf
imul
jmp
scas
outs
(bad)
imul
retf
pop
cmc
or
xchg
ss
(bad)
adc
jle
psubsw
mov
ret
inc
mov
scas
adc
das
out
(bad)
cli
cld
ret
adc
xor
sahf
cs
jl
inc
sub
movs
or
fcom
inc
(bad)
test
ja
or
fild
mov
outs
test
cmps
outs
popa
xchg
popf
pop
xor
cmp
mov
or
pminub
les
imul
les
test
jnp
in
or
fnstcw
rcl
test
aas
push
mov
ja
jae
sbb
mov
lods
lahf
fsubr
push
xchg
popa
dec
cmc
push
sar
les
(bad)
icebp
into
not
(bad)
push
test
rol
adc
add
and
jo
push
popa
movs
call
mov
xchg
sbb
sahf
call
mov
sahf
int
sbb
and
sti
xchg
movs
pushf
sub
aam
pop
jne
test
mov
clc
pop
mov
rcl
int
jl
inc
xchg
mov
push
pop
pop
mov
fild
je
xchg
mov
loope
push
cmps
pop
add
xchg
push
mov
les
jg
fdiv
push
and
out
clc
xlat
adc
or
push
mov
lea
lods
scas
out
in
ins
ret
jmp
sub
fs
pop
jge
sbb
jmp
addr16
imul
pop
dec
pop
add
pop
idiv
xor
mov
push
cwde
jne
add
inc
and
add
xor
mov
and
pop
mov
push
out
popf
pop
push
xchg
jne
(bad)
out
out
xor
dec
sbb
out
cmp
cmp
pop
dec
ss
lea
lods
jns
inc
mul
mov
out
jle
outs
lds
inc
std
clc
lahf
gs
inc
add
imul
xchg
sbb
push
dec
xchg
xor
cdq
xor
sti
loope
add
adc
sar
xlat
cdq
push
ror
sar
inc
es
dec
xor
xor
out
mov
loop
add
(bad)
sbb
js
push
mov
ret
add
mov
inc
jnp
fdivr
scas
cmp
adc
pusha
add
jo
scas
in
repz
aam
icebp
or
add
adc
and
jg
rol
xchg
jecxz
push
loopne
mov
dec
out
jno
jecxz
dec
addr16
les
sbb
ds
xchg
div
sbb
xor
xchg
imul
cmp
and
pop
jmp
jg
retf
xor
les
jo
test
lods
cwde
jmp
jne
enter
cmp
js
mov
outs
fadd
adc
imul
(bad)
repz
fwait
ins
and
mov
pop
cmps
pop
dec
sti
jecxz
les
sub
neg
popf
mov
xchg
pusha
(bad)
ins
mov
retf
inc
xchg
arpl
inc
scas
jecxz
or
daa
out
stc
ret
inc
mov
cmps
inc
push
mov
stc
jno
mov
call
imul
mov
mov
dec
add
hlt
adc
xor
dec
sbb
jne
repz
scas
mov
lods
mov
mov
aad
jbe
dec
std
scas
fist
daa
xor
mov
int
jp
jecxz
movs
push
xchg
sbb
pop
pushf
sbb
push
out
dec
mov
xor
jl
fimul
xor
retf
and
repnz
sar
cmp
dec
push
jns
loopne
pushaw
dec
mov
mov
out
cmps
sar
daa
push
jl
sar
add
mov
or
(bad)
in
loope
cs
mov
std
loop
or
and
mov
mov
sbb
je
pop
hlt
sbb
mov
xchg
test
addr16
push
(bad)
adc
cmps
sar
scas
ds
sbb
imul
cli
div
cld
jg
push
sbb
ds
xchg
push
cmp
and
jns
push
sbb
cmp
mov
mov
sub
test
or
pop
jno
mov
jp
mov
mov
clc
and
mov
cmc
iret
outs
pop
sti
push
and
imul
fbstp
enter
std
daa
cmp
clc
in
mov
xchg
mov
or
std
aad
rol
(bad)
retf
in
sahf
cmp
sbb
daa
dec
mov
mov
mov
cmp
aam
das
sbb
rcl
call
mov
retf
sbb
mov
fwait
(bad)
pop
retf
ins
jo
cmp
daa
dec
xchg
cmp
mov
out
jl
shl
dec
jmp
(bad)
out
inc
ds
push
shl
popa
cmp
mov
cmp
mov
mov
and
ret
iret
shl
jp
retf
mov
push
pop
leave
dec
xor
jmp
cld
aam
fidiv
xchg
push
(bad)
lods
push
mov
inc
sbb
(bad)
(bad)
test
movs
push
dec
repz
push
mov
inc
lds
leave
pop
test
sbb
push
jmp
adc
inc
sbb
adc
xor
xchg
xor
fisttp
sbb
ret
add
cmp
mov
in
xchg
retf
push
push
and
mov
lods
test
aad
jecxz
sbb
jecxz
xchg
rol
ret
out
push
leave
test
ss
nop
dec
push
xchg
in
(bad)
(bad)
rcl
shl
dec
call
sti
sahf
xor
cmp
inc
mov
and
mov
xchg
test
sub
xor
cli
and
pop
outs
fcom
or
js
ficom
mov
hlt
mov
scas
stos
mov
call
mov
and
int3
adc
xchg
sub
push
cmps
sbb
or
or
sub
mov
fdiv
cmps
mov
imul
xlat
mov
jne
call
sar
mov
dec
pop
xor
dec
je
icebp
sub
popa
xchg
out
fist
xchg
adc
gs
cmp
retf
ins
cmp
dec
and
je
adc
dec
lods
pop
and
and
outs
shl
imul
arpl
in
retf
int3
cmp
xchg
nop
cli
mov
mov
push
xchg
mov
sub
push
sub
inc
sbb
movs
and
mov
and
jnp
iret
loop
mov
cmp
sub
lock
mov
xor
leave
ss
jmp
test
sbb
and
mov
pusha
scas
shr
inc
push
jl
repnz
xor
push
out
push
jb
jmp
sbb
xor
pusha
jb
imul
mov
push
cwde
(bad)
test
or
mov
cmc
aas
rcr
xchg
pop
mov
cmp
gs
ret
fild
(bad)
cmp
mov
(bad)
call
out
jmp
mov
cmp
scas
adc
push
popf
jne
dec
dec
xchg
jnp
mov
test
stos
dec
mov
mov
push
aam
mov
inc
fwait
jle
cmp
fidivr
pop
cld
xchg
dec
mov
add
sbb
in
cmp
in
retf
mov
mov
outs
sbb
pop
lods
mov
out
lahf
inc
or
adc
in
inc
(bad)
inc
(bad)
icebp
jl
div
call
lods
pusha
xchg
add
jge
mov
push
xchg
jl
sbb
inc
pop
xchg
aas
mov
pop
test
push
nop
pop
sub
mov
xlat
or
inc
scas
pop
add
jmp
sbb
ins
jbe
stos
aas
out
add
xchg
stc
cmc
mov
repnz
pop
les
mov
sub
push
push
cmp
adc
xor
mov
inc
mov
xchg
inc
cmp
mov
bound
push
xor
ds
ror
pop
sti
dec
cmp
sbb
push
push
not
push
pop
pop
(bad)
xchg
int3
ret
pop
sub
rcl
add
inc
mov
aad
jne
mov
sbb
push
inc
jle
sub
sbb
push
js
push
dec
push
sar
cmp
pop
popf
mov
inc
scas
jno
fldenv
clc
xchg
sbb
xor
xor
std
(bad)
mov
ss
inc
sahf
jne
out
jmp
in
mov
ret
mov
mov
mov
pop
or
(bad)
mov
dec
scas
mov
xchg
scas
shl
dec
mov
out
out
sbb
cmp
in
cmp
and
cdq
cmp
push
pop
aaa
call
std
mov
adc
fdiv
inc
popf
out
cmps
sbb
inc
and
add
jmp
mov
rcr
lods
inc
mov
and
lahf
xchg
cmc
dec
xor
and
cmp
ins
push
or
xchg
add
sub
pusha
lahf
stos
add
cmc
cmp
jb
(bad)
mov
out
popf
xor
push
jmp
push
xchg
xor
mov
enter
xor
xchg
cli
loop
push
shl
pop
daa
mov
jmp
test
jb
bound
dec
pop
in
arpl
mov
leave
xchg
test
cli
sbb
out
mov
test
and
dec
call
adc
jb
pop
cmp
xchg
imul
mov
aas
lds
sbb
rcl
cmp
push
add
daa
(bad)
ins
mov
loop
xlat
je
add
or
shl
addr16
jg
cmp
cli
pop
cwde
shr
push
and
sbb
aaa
(bad)
pop
pop
shr
cmp
loope
push
jmp
fdivr
mov
mov
sub
pop
adc
sub
dec
cwde
dec
cld
and
push
fbld
add
outs
ror
dec
nop
push
mov
mov
adc
out
in
pop
push
push
xchg
int
dec
mov
dec
test
sbb
or
jg
(bad)
lock
lock
dec
inc
aam
lods
mov
inc
and
mov
test
(bad)
sub
ins
rcr
xchg
cdq
int
das
sub
fmul
pop
fdivr
xchg
add
push
ss
lds
add
dec
xchg
adc
mov
test
lods
fisub
loope
sbb
icebp
cmc
push
and
es
sub
rol
int
lods
mov
daa
push
lods
test
adc
leave
(bad)
outs
cs
int
in
aas
xchg
xchg
fisttp
dec
jmp
int3
(bad)
pushf
jp
mov
inc
add
inc
jbe
pop
gs
jg
dec
mov
cmp
mov
pop
xchg
sub
enter
sub
inc
xor
or
mov
(bad)
xor
sub
popa
dec
ret
mov
jae
cmp
cmps
sbb
dec
xchg
dec
push
pop
mov
and
sub
or
push
mov
push
lds
jns
adc
lds
loopne
sub
(bad)
xlat
(bad)
push
mov
out
(bad)
ja
mov
mov
push
dec
enter
push
mov
adc
add
add
mov
and
(bad)
in
pop
xchg
xchg
mov
and
adc
(bad)
adc
cmp
movs
inc
xor
jp
jecxz
dec
xor
daa
movs
add
rcl
(bad)
mov
push
jmp
sub
cmp
outs
push
loope
xor
jnp
stos
xor
ror
call
nop
dec
jb
aad
(bad)
fisubr
in
add
push
mov
in
lods
or
pop
test
xor
mov
and
daa
and
and
addr16
fwait
hlt
loope
cmp
cmp
(bad)
inc
aaa
in
xor
fmul
popf
sub
mov
pop
xchg
inc
xor
int
das
sbb
loop
dec
mov
bound
scas
daa
popf
repz
ins
out
fcomi
gs
mov
ror
sar
ins
fucomi
cmp
mov
and
jnp
push
(bad)
div
adc
cmc
xchg
mov
jnp
cmp
popf
sbb
push
cdq
sub
pop
or
inc
pop
shr
add
pop
repz
jp
mov
mov
push
(bad)
mov
push
inc
fst
dec
ds
fcmovne
mov
sub
mov
cmps
adc
call
mov
sahf
add
jns
je
movs
pop
sbb
mov
lahf
mov
inc
and
popf
jo
shl
(bad)
sub
cld
in
jnp
repnz
sub
js
sbb
pop
ss
pop
out
sbb
lea
ss
xchg
ins
cmp
push
add
icebp
jne
aas
ror
gs
pop
mov
inc
lahf
cmp
icebp
cmps
mov
sti
or
into
cld
xor
mov
add
mov
cmp
les
mov
pop
xor
mov
sub
and
in
jae
push
rcl
in
xor
pusha
punpcklwd
ror
push
test
inc
(bad)
mov
push
inc
test
movs
les
adc
fild
ret
mov
mov
adc
fiadd
inc
cmp
or
clc
in
ins
aad
mov
adc
inc
gs
mov
mov
jl
sbb
or
cmp
inc
push
mov
xchg
sub
ret
cmp
fld
mov
dec
jl
and
push
pop
push
jl
add
xchg
scas
xor
(bad)
stc
or
pop
ins
lahf
pop
inc
pop
dec
add
nop
dec
mov
or
adc
shl
jo
push
mov
sub
dec
adc
or
and
mov
sub
test
gs
push
adc
call
sub
dec
les
cli
pop
jns
dec
mov
shr
add
out
in
scas
sbb
adc
cmp
(bad)
(bad)
outs
jnp
mov
cmp
pop
lods
mov
cmp
jno
push
ins
not
movs
cs
xchg
ja
xor
int3
cmps
sbb
sub
jb
xor
(bad)
loopne
test
sbb
and
cmc
loope
xlat
jbe
(bad)
lds
jp
das
mov
adc
mov
retf
or
loopne
mov
fild
(bad)
inc
out
daa
or
xor
movs
fstp
or
sub
xchg
cmp
mov
pop
inc
and
(bad)
mov
call
adc
aas
xchg
ins
xor
stc
shr
dec
mov
push
fidivr
mov
add
mov
add
out
xor
sbb
jmp
add
and
or
dec
xor
movs
(bad)
loopne
popa
and
push
inc
fnstcw
sub
dec
mov
popa
sbb
xor
aas
xor
repz
movs
lods
out
aas
mov
add
outs
or
sub
xor
cmps
inc
sbb
in
ret
scas
call
pop
aas
jns
popa
inc
mov
cmps
in
outs
sub
mov
pop
stc
mov
fnsave
adc
pop
rol
stos
mov
push
popa
sbb
das
add
add
shr
cmp
inc
(bad)
fstp
mov
call
std
pusha
ret
xchg
xor
aam
jo
out
mov
dec
dec
sub
jne
loope
inc
repz
mov
dec
push
in
nop
cld
pop
arpl
mov
add
xor
lock
xor
mov
sub
shl
pop
mov
mov
sub
inc
add
fisubr
cmp
retf
xor
loopne
loop
(bad)
inc
or
add
or
xchg
aas
push
sub
pop
lahf
xlat
inc
sbb
sbb
shl
dec
stc
ret
nop
add
shl
int3
ds
and
sub
int3
and
in
add
xor
rcl
and
call
and
in
and
adc
cs
ins
mov
mov
pop
loop
mov
xchg
lock
(bad)
or
je
cdq
sbb
fldcw
fdivr
(bad)
jl
(bad)
jae
aas
sub
mov
test
pop
retf
and
bound
add
mov
in
adc
jo
cmp
mov
mov
arpl
scas
cld
fsubr
ds
xchg
rcr
dec
mov
xchg
mov
jne
mov
mov
ins
add
imul
xchg
add
jno
jno
fisttp
mov
(bad)
mov
jmp
mov
or
pop
mov
cmp
popf
test
lods
inc
jno
retf
popa
push
arpl
sub
sbb
sbb
clc
xchg
ja
sub
sbb
add
push
push
enter
test
push
and
retf
jmp
xchg
and
dec
push
test
scas
inc
lea
in
sub
pop
inc
pop
in
test
sbb
inc
inc
pop
mov
(bad)
mov
sbb
xor
inc
rol
add
(bad)
out
mov
imul
pop
or
in
dec
pop
jecxz
jmp
mov
jb
scas
mov
repz
int3
scas
pop
inc
push
xor
clc
or
mov
idiv
jg
xor
cwde
popf
xlat
xchg
(bad)
icebp
xor
sub
(bad)
les
mov
pop
push
push
popf
dec
push
pop
into
push
pushf
jg
gs
sbb
out
jae
mov
cmps
rcr
pop
mov
lds
ds
jbe
mov
daa
add
mov
inc
pop
ja
cmp
push
loopne
rcr
fs
dec
adc
push
pusha
add
jmp
inc
mov
fwait
ss
push
in
xchg
popf
cmp
jmp
xor
pop
aas
jno
outs
jae
out
into
sub
popf
and
pop
in
fadd
mov
dec
mov
mov
mov
sub
cmp
adc
jne
or
test
sub
push
cmc
in
ds
dec
mov
(bad)
dec
sub
out
mov
push
call
mov
sub
xchg
mov
jmp
out
jno
dec
movs
jmp
sbb
pop
mov
dec
mov
lahf
adc
std
sahf
cmps
add
mov
jge
inc
movs
and
push
ss
dec
jle
jno
in
fwait
or
sub
mov
rcr
sar
jmp
or
inc
dec
or
fiadd
mov
aam
sub
push
jns
sbb
mov
xor
pop
add
xchg
inc
add
xor
cmc
daa
movs
fadd
(bad)
lahf
pop
fst
dec
mov
call
iret
cmp
xlat
mov
movs
out
xchg
push
inc
push
(bad)
jne
sbb
xor
lds
add
outs
aad
icebp
push
outs
push
fsubp
pushw
adc
pop
cs
lods
sub
xchg
dec
loop
(bad)
sti
sub
inc
int3
hlt
pop
(bad)
ret
rol
(bad)
mov
xchg
inc
pusha
push
fistp
ja
stos
or
add
mov
or
xor
pop
jmp
and
in
das
jmp
inc
mov
movs
xor
or
enter
cmp
pop
das
hlt
lock
bound
sub
pushf
pop
or
fstp
ss
(bad)
jp
pop
sub
movs
in
dec
out
push
ins
mov
icebp
pop
lds
inc
or
xchg
popf
mov
ins
out
add
(bad)
into
add
out
mov
sub
nop
aaa
push
xchg
ins
and
arpl
loopne
call
scas
inc
sbb
cli
cli
push
call
dec
mov
push
add
or
fldcw
mov
mov
cs
int3
cmps
cmps
popf
lahf
cmp
xchg
xor
int3
inc
push
repz
stc
(bad)
(bad)
pusha
mov
sbb
gs
sbb
int
add
and
pop
cmp
pop
repz
stos
(bad)
mov
pop
and
pop
(bad)
scas
rcl
mov
jnp
cdq
pop
cmp
imul
sahf
sbb
adc
sbb
inc
rol
aam
inc
lds
out
sbb
pop
sub
fld
(bad)
ror
lahf
add
repz
cmp
(bad)
fmul
jne
jge
ins
adc
pop
enter
pop
call
fisub
mov
in
inc
push
pop
enter
or
sbb
enter
test
pop
inc
add
and
fist
pusha
jge
test
icebp
cmp
or
lods
mov
mov
lods
cwde
loopne
pop
retf
add
xchg
mov
mov
addr16
pop
mov
sahf
inc
add
mov
mov
ss
push
pop
jae
or
xchg
add
mov
bound
mul
jmp
cmp
ret
icebp
out
lods
mov
pop
mov
jmp
add
dec
xchg
xor
or
out
lods
mov
rcr
not
fsubr
mov
add
and
dec
sbb
aam
xor
and
arpl
lds
ret
cld
dec
test
pusha
pop
loopne
aaa
lods
push
mov
cmp
cmpxchg8b
xor
cmp
mov
adc
out
add
icebp
call
sbb
into
push
jmp
(bad)
retf
jmp
(bad)
sti
mov
add
xor
into
mov
cmp
push
out
mov
jmp
mov
(bad)
push
mov
or
pop
in
sbb
dec
cdq
out
arpl
pop
in
jne
xchg
jo
jb
imul
adc
adc
mov
pushf
out
rcl
mov
mov
mov
fcom
sahf
or
enter
lock
cld
out
fsubr
pushf
test
pop
xchg
lods
icebp
sub
or
pop
mov
cmc
sub
xor
inc
jmp
repnz
(bad)
mov
xor
mov
xor
jae
outs
cmps
call
hlt
movs
outs
and
movs
mov
hlt
ret
xor
(bad)
jmp
lock
jle
call
dec
adc
inc
inc
dec
mov
jnp
mov
lock
arpl
or
or
jmp
stos
mov
xlat
shl
loopne
es
jp
mov
mov
xlat
or
ror
cmp
sti
dec
mov
mov
dec
call
outs
jae
pop
jne
xchg
enter
je
movs
dec
je
rcl
fisub
cmp
inc
das
or
mov
xchg
fsub
xor
sub
cmp
fiadd
cmp
imul
in
mov
xchg
test
cmp
sub
inc
mov
(bad)
adc
mov
jmp
jnp
sub
imul
sar
dec
mov
stos
sub
and
push
ins
neg
idiv
lahf
pushf
mov
jb
addr16
into
dec
adc
xor
jne
jge
pop
pop
popf
mov
and
mov
ds
cmp
aad
or
ins
dec
or
movs
sbb
(bad)
push
jge
sbb
sbb
mov
ror
mov
inc
pop
iret
sub
xor
nop
xor
cld
push
mov
xchg
daa
or
into
mov
add
dec
dec
and
cmp
mov
jle
jmp
outs
retf
adc
aaa
in
pop
mov
adc
cli
jbe
mov
xor
push
mov
pop
dec
push
loop
sti
add
adc
cmp
push
inc
and
push
es
aas
xchg
push
adc
(bad)
imul
out
mov
sbb
sub
pop
adc
test
lock
fwait
jae
mov
cmp
or
call
push
mov
mov
sbb
xchg
pusha
sbb
test
aas
xchg
cmp
xchg
loope
ins
sbb
cmc
and
cmp
and
call
xor
jno
pusha
cs
and
cmp
(bad)
inc
loop
jg
outs
pop
jle
mov
es
xor
mov
lock
cli
repz
cwde
dec
push
popf
pop
pop
dec
movs
xor
test
into
pop
cmp
sbb
sub
movs
adc
test
xchg
sbb
test
adc
pop
mov
inc
dec
cs
xchg
gs
sub
add
xor
jle
xchg
or
jecxz
cmp
retf
cdq
imul
fild
js
cmps
sar
sahf
movs
aas
into
mov
jl
lods
dec
adc
les
lds
test
mov
ficom
cmp
sbb
inc
xor
enter
jecxz
jb
cmp
sbb
mov
jmp
mov
push
xchg
lods
neg
mov
dec
and
dec
ficomp
ret
inc
xor
cmp
out
(bad)
fidivr
retf
rcr
int
rcl
rcr
jnp
in
add
movs
retf
add
and
mov
bound
pop
push
fcomp
lea
and
cmp
pop
mov
jmp
xor
and
cmp
sbb
pop
pushf
xor
add
jl
shr
sti
scas
xor
mov
stc
test
or
fs
out
cwde
outs
sbb
std
add
jb
dec
sub
mov
inc
leave
(bad)
retf
xor
xor
sub
sti
adc
nop
mov
xor
and
aaa
lods
or
scas
mov
(bad)
fwait
out
xor
fwait
mov
jae
jmp
les
mov
or
or
es
jp
mov
xchg
mov
sub
loop
mov
sub
xor
push
dec
rcl
sbb
neg
and
mov
mov
mov
inc
dec
push
scas
nop
aad
sbb
ja
fldenv
mov
cli
shl
pop
cmc
push
(bad)
xlat
xor
loopne
jmp
jbe
sbb
mov
add
lahf
adc
pop
pop
push
fiadd
xchg
or
sub
add
mov
push
and
je
fmul
xchg
hlt
mov
sbb
int
push
sti
mov
outs
mov
fwait
xor
mov
js
fsubrp
inc
and
sti
inc
out
jae
in
pop
inc
push
pop
xchg
in
shl
and
sub
push
or
pop
inc
ds
fsubr
outs
test
jmp
aas
cmp
aaa
jne
(bad)
lock
fstp
push
push
fidivr
pop
imul
pop
fld
fwait
scas
jmp
scas
add
mov
dec
cmp
sti
inc
or
shl
jge
int3
loopne
cmc
imul
lods
xchg
movs
(bad)
ja
(bad)
shl
jae
in
(bad)
adc
push
inc
and
xor
data16
or
or
pushf
mov
sub
sub
cmp
imul
fbstp
mov
dec
push
in
xor
test
pop
nop
jb
cs
xchg
and
push
movs
push
add
push
dec
xor
imul
scas
ins
and
out
and
dec
mov
ss
out
leave
mov
xchg
inc
jns
repz
push
mov
call
pop
movs
scas
mov
jle
jg
push
std
fcomp
dec
xchg
fdivr
call
inc
pusha
imul
jp
pusha
js
add
loopne
bound
xlat
mov
movs
adc
mov
sub
adc
jmp
ja
xchg
mov
pop
fst
cmp
outs
sub
dec
fucomip
aad
enter
outs
pop
out
iret
pop
mov
icebp
in
in
in
repz
cmps
inc
jp
pop
sbb
cs
dec
inc
outs
push
std
scas
jge
pop
outs
push
add
sbb
lods
iret
out
movs
adc
dec
dec
and
mov
mov
cmp
popa
jbe
out
and
mov
xor
jbe
imul
popa
mov
push
mov
fwait
stos
bound
or
sti
cdq
gs
sbb
das
(bad)
popf
and
test
and
pop
or
jo
repnz
dec
jmp
xor
or
ss
xchg
xor
inc
inc
bound
inc
outs
(bad)
mov
(bad)
mov
js
bound
dec
leave
inc
or
jno
add
and
popf
fild
les
or
dec
push
push
test
fld
cdq
sbb
lahf
cmp
xor
fadd
push
ds
enter
push
retf
std
les
fidiv
dec
push
rcl
dec
lea
sub
cmp
stos
shr
scas
add
mov
je
and
adc
lea
and
mov
(bad)
sub
pop
lahf
push
push
int
mov
xor
fcmovu
and
(bad)
stc
jmp
push
popf
mov
out
push
push
fmul
out
mov
mov
in
fidiv
fidivr
in
scas
push
rcl
call
push
sti
fsub
dec
mov
inc
shl
push
jne
dec
mov
idiv
in
jno
scas
out
mov
daa
sbb
sbb
(bad)
nop
cdq
cmovle
sub
cwde
mov
mov
cmp
dec
cmc
sub
pop
mov
pusha
cld
inc
lock
pusha
mov
push
mov
jp
mov
and
inc
add
adc
sub
retf
sahf
jecxz
inc
clc
push
pop
adc
inc
test
or
pop
sub
in
fcom
repnz
xchg
push
int3
in
out
popf
mov
xor
push
clc
jle
or
inc
xor
jmp
pop
push
gs
out
imul
test
mov
ret
ret
mov
or
pop
jecxz
dec
psubq
mov
je
add
ficomp
jge
je
dec
jno
dec
sub
int
ins
daa
push
ret
frstor
popa
mov
mov
mov
jae
daa
or
mov
ins
jmp
push
pop
xchg
imul
pause
add
jae
movs
xchg
push
mov
sbb
sbb
pop
rcl
and
inc
inc
repz
xchg
xchg
push
enter
xor
sub
cld
fs
imul
aaa
xor
add
clc
enter
sub
push
xchg
outs
imul
adc
cs
das
nop
into
loop
repz
retf
inc
cld
icebp
jge
idiv
push
push
sar
cdq
pop
aam
hlt
leave
pop
fisub
push
fst
(bad)
mov
jp
adc
or
sbb
in
push
mov
out
in
sub
into
pop
inc
pop
jl
addr16
into
dec
push
push
or
add
mov
sti
pop
cmp
sub
mov
mov
shl
sub
sbb
push
mov
int
mov
cmp
leave
in
adc
mov
frstor
dec
jnp
and
jmp
jl
pusha
jns
loop
mov
adc
sbb
imul
add
lods
call
mov
xchg
jbe
out
fisub
imul
xor
inc
aad
mov
add
loop
push
outs
mov
sub
in
adc
rcl
xchg
push
pop
test
es
test
pop
nop
aas
vmread
jo
sub
lahf
ficom
or
push
mov
sbb
iret
cdq
pop
(bad)
aad
or
retf
(bad)
clts
(bad)
lods
test
dec
sahf
(bad)
xchg
or
ins
out
pop
imul
std
sub
push
lods
shr
fcomp
jl
xchg
jo
sbb
inc
or
jb
xlat
neg
sub
add
mov
cmp
loope
fbld
pop
inc
mov
leave
popf
sub
and
rol
xchg
jle
sar
push
repnz
not
jl
xor
dec
into
das
push
mov
adc
in
lea
je
out
pusha
fs
adc
cmps
sub
fimul
cs
mov
cs
repnz
movs
ror
popf
mov
cmp
icebp
clc
dec
pop
or
push
inc
cmp
repnz
daa
ss
mov
jmp
out
mov
dec
movs
add
and
aas
dec
(bad)
je
mov
dec
movs
dec
mov
or
and
mov
pop
stc
xor
mov
or
sub
nop
or
sar
sahf
adc
cmc
mov
sbb
sbb
sub
sti
(bad)
into
sbb
adc
inc
push
adc
iret
jnp
pop
(bad)
push
or
pushf
pusha
in
out
popa
xchg
(bad)
clc
test
xor
sub
data16
mov
js
dec
test
(bad)
add
aas
sbb
pop
out
lock
sbb
inc
xchg
jbe
push
pop
rol
lods
icebp
adc
movs
inc
lea
dec
push
lods
arpl
cmp
cmps
lods
in
shl
dec
push
div
cmps
mov
jge
mov
jge
pop
(bad)
jle
xchg
cmp
cmp
ret
gs
data16
mov
push
mov
jne
mov
dec
in
mov
leave
daa
dec
sub
sbb
call
std
jl
(bad)
rcl
fld
scas
cmp
iret
ins
pop
shl
inc
lods
ins
addr16
cmp
(bad)
test
sbb
adc
je
popa
add
pop
pop
or
test
cmps
adc
push
not
cmc
dec
imul
cmp
push
jne
cmp
loopne
fld
push
(bad)
push
std
dec
mov
xchg
clc
push
sbb
jnp
call
xor
rcl
js
ror
push
jnp
mov
push
jne
imul
sub
ret
sti
clc
mov
ja
fdiv
mov
cmp
add
pop
ds
movs
dec
pop
maxps
call
hlt
xor
lods
jle
cmp
aas
clc
xlat
sbb
pop
sbb
or
sti
imul
loop
loopne
sahf
in
retf
scas
adc
cdq
repnz
outs
aad
sbb
sbb
push
icebp
pop
test
in
retf
shl
sbb
pop
fwait
mul
sbb
sbb
mov
push
into
jbe
js
pop
push
leave
addr16
add
sar
jg
adc
push
pop
clc
nop
ret
push
cmp
stos
mov
dec
dec
dec
adc
int3
xor
add
out
icebp
je
mov
jae
popf
adc
sbb
xchg
or
inc
ins
xchg
shl
mov
in
je
cmps
add
movs
inc
dec
ins
pop
xchg
fidivr
out
cmps
hlt
in
push
sub
int
inc
fst
fidivr
gs
test
imul
(bad)
mov
pop
adc
inc
inc
sbb
inc
out
movs
pop
pop
icebp
jo
stos
push
dec
pop
fcomp
stos
push
mov
rol
adc
sbb
mov
adc
test
sbb
movs
inc
fidiv
cmp
gs
shl
push
imul
pop
retf
fstp
inc
loop
es
sub
sub
retf
and
out
sub
popf
jns
push
jecxz
sub
dec
in
push
inc
adc
xchg
xchg
xlat
inc
mul
mov
aad
es
pop
out
es
xchg
cmp
stos
rcl
sbb
and
out
and
push
into
jnp
jp
cwde
hlt
cmps
jmp
aam
cdq
lods
cmp
mov
sub
jae
sti
jg
xchg
or
nop
mov
stc
xchg
sub
hlt
scas
xchg
hlt
js
mul
jb
jmp
xchg
xlat
mov
and
or
(bad)
mov
fstp
pop
push
imul
aad
and
push
sbb
push
cmp
xchg
or
mov
mov
and
shl
fwait
bts
jmp
sti
ss
add
mov
in
or
add
pop
cmp
das
adc
ror
pop
or
nop
lds
ret
int
je
jmp
or
adc
repz
test
adc
loopne
dec
push
fist
les
jae
sbb
adc
loope
xor
stos
xor
aas
mov
ror
cmp
add
sti
pop
cmp
out
and
dec
gs
add
xchg
aad
daa
xchg
push
test
mov
icebp
ins
repz
cmp
cli
ficomp
movs
pusha
sbb
dec
mov
mov
lea
xlat
pop
div
or
shl
jmp
int
(bad)
push
mov
in
mov
ror
fsubr
shl
out
cmps
jecxz
sbb
mov
cs
shl
sti
rol
test
arpl
rcl
stos
adc
dec
rcl
mov
xchg
fld
sub
jb
call
cmps
mul
pop
and
ret
mov
repz
aaa
sbb
jg
daa
lahf
jmp
ins
mov
sub
pop
mov
sbb
xor
inc
test
mov
sbb
lea
nop
pop
test
ins
jmp
je
lea
rol
call
lss
es
daa
(bad)
test
dec
(bad)
xor
(bad)
push
aam
mov
cli
retf
(bad)
loope
retf
outs
add
add
pop
movs
pop
ins
mov
popa
xchg
pushf
mov
sbb
imul
cwde
xchg
cmc
pop
in
mov
mov
xchg
repnz
test
fld
daa
pop
xor
pop
inc
inc
inc
inc
dec
xchg
int
(bad)
cdq
lock
ret
ss
push
stos
cmc
pop
test
sbb
pop
imul
retf
ret
dec
scas
cmp
ret
pop
push
pop
(bad)
cmps
pop
int3
or
pop
rol
and
xor
jge
jne
test
jle
xchg
sub
addr16
enter
(bad)
retf
fbld
cmp
cdq
mov
leave
add
arpl
cld
adc
daa
imul
jg
(bad)
in
cmps
push
mov
rcr
inc
lea
xchg
daa
popf
dec
jae
sbb
into
inc
jmp
aas
or
xor
and
fdivr
mov
sub
dec
sbb
out
test
dec
ficom
addr16
mov
push
adc
fs
push
ret
jne
inc
xor
call
push
cmps
push
outs
adc
ds
adc
adc
aaa
push
lods
shl
fld
push
mov
(bad)
cs
mov
cmp
sar
adc
jecxz
test
and
xchg
inc
add
sub
push
sub
push
aad
fnstcw
xor
and
shr
sbb
jle
pop
cld
jno
cmp
mov
xchg
aad
xchg
aad
dec
loope
sbb
dec
mov
and
mov
fistp
lods
iret
pop
dec
push
adc
repnz
or
xchg
sbb
out
(bad)
cmp
out
dec
(bad)
neg
aas
div
and
shr
loop
mov
icebp
xchg
mov
rcl
loopne
push
stc
push
fmul
or
add
sub
pop
xchg
sub
icebp
mov
hlt
jp
js
and
mov
mov
add
mov
fldlg2
push
xor
pop
mov
dec
mov
ds
push
neg
or
inc
dec
stos
ins
or
push
fistp
sub
mov
cmps
fs
adc
out
scas
(bad)
jle
xchg
xchg
push
jno
cmps
jp
inc
push
push
mov
mov
