add
mov
pop
xor
adc
sbb
btc
sbb
dec
mov
xchg
jbe
test
pop
and
mov
pop
xor
xchg
pop
dec
mov
cmp
ret
loope
mov
mov
aas
or
sub
lods
mov
add
pop
inc
lahf
inc
dec
add
pop
xor
pushf
test
mov
xchg
xlat
sbb
dec
and
and
(bad)
dec
inc
push
mov
in
ins
adc
rep
mov
mov
sbb
dec
addr16
in
mov
clc
sti
pop
mov
dec
dec
pop
ss
mov
mov
ja
xor
sar
xchg
fmul
pop
xor
cld
out
or
inc
inc
xor
inc
loopne
int3
adc
xor
adc
nop
ss
int
fs
cld
repz
js
pop
xor
in
repz
or
daa
or
dec
sbb
or
dec
mov
pop
xor
mov
or
in
xchg
lds
(bad)
or
adc
inc
int
sbb
xor
inc
jns
sbb
lea
mov
loopne
mov
dec
fimul
jge
mov
(bad)
xor
in
nop
cmp
ret
inc
iret
xchg
push
(bad)
push
jge
mov
repnz
test
mov
mov
pushf
test
dec
test
pop
xor
adc
sbb
pop
xor
jge
cmp
jle
and
sti
pop
cmp
pop
pop
inc
push
es
dec
mov
fild
add
xor
hlt
adc
(bad)
jmp
pop
xor
cmp
cmp
mov
pop
mov
mov
pop
outs
pop
out
mov
jne
scas
jo
mov
pop
xor
not
and
push
xor
hlt
in
sbb
xor
dec
mov
push
or
and
(bad)
dec
jmp
pop
xor
repz
out
dec
mov
je
jns
inc
popf
pop
xor
mov
ja
clc
sti
pop
pop
ins
or
and
or
mov
pop
xor
mov
pop
xor
pushf
or
ds
cs
shl
bound
jo
push
jmp
pop
xor
pop
rcr
add
pop
fidiv
iret
pop
xor
out
dec
(bad)
(bad)
mov
rol
sar
and
jne
and
aas
mov
aas
mov
in
cmp
xlat
xchg
retf
xchg
mov
or
int
jle
xor
cmp
xor
cmp
xor
jmp
mov
sbb
lds
loopne
mov
cmp
ds
loopne
dec
int
add
xchg
das
xor
clc
mov
mov
fdiv
mov
jp
repnz
out
sti
mov
xchg
xlat
retf
push
adc
xor
retf
xchg
cmc
(bad)
(bad)
(bad)
bound
mov
pop
pop
dec
rcr
pop
dec
inc
push
mov
pop
fcmovbe
rcr
sar
or
pop
xor
imul
jns
jae
int3
pop
int
lods
loopne
push
rcr
int
test
mov
hlt
mov
jecxz
aas
rcr
inc
dec
imul
jns
sub
(bad)
out
cmp
mov
out
scas
xor
sar
or
inc
sti
mov
xchg
xlat
sbb
dec
lea
retf
xchg
and
push
jle
or
mov
loopne
inc
inc
push
mov
xor
cmp
push
sub
cmp
inc
push
and
push
mov
xor
int
inc
div
xor
sbb
mov
add
inc
cs
inc
ins
cmp
and
out
dec
mov
jo
push
mov
mov
inc
cld
sti
pop
mov
dec
pop
mov
inc
pop
fldenv
cmp
dec
xor
sbb
int
jo
mov
(bad)
xor
dec
inc
xchg
addr16
mov
ss
mov
es
iret
inc
dec
inc
pop
into
ror
mov
lahf
push
dec
mov
jecxz
pop
inc
pop
mov
ud2
or
cld
out
jle
mov
sar
mov
cmp
xor
out
(bad)
retf
mov
or
xor
mov
inc
pop
mov
mov
pop
retf
cmps
int
mov
(bad)
icebp
sbb
mov
imul
jmp
adc
inc
loope
daa
mov
jecxz
mov
xchg
lock
jnp
cmps
mov
loope
mov
imul
xor
mov
inc
pop
mov
mov
fld
call
(bad)
xchg
lds
dec
xchg
addr16
xor
or
sub
loopne
jno
arpl
ret
cmp
int
inc
xchg
lock
jnp
cmps
mov
loope
shl
mov
loopne
lds
xor
jo
rcr
push
out
xchg
outs
inc
pop
xchg
cmp
stos
xchg
ret
xchg
ja
xor
add
rcr
ret
les
mov
xor
lds
inc
add
xor
imul
pushf
lock
or
sahf
xor
mov
inc
sti
mov
xchg
xlat
sbb
dec
fs
xor
(bad)
cld
jecxz
push
das
mov
pop
xor
inc
xchg
ja
mov
fldcw
out
inc
dec
mov
int3
jg
test
cmc
repz
fmulp
push
nop
aad
cwde
loopne
lock
jnp
mov
xchg
(bad)
dec
int
jo
xor
mov
jecxz
mov
inc
ins
adc
rcr
push
out
xchg
inc
pop
xor
(bad)
cld
jecxz
sub
mov
inc
pop
sbb
loopne
cmp
pop
xor
dec
hlt
cs
cld
pop
cmp
mov
in
mov
pop
test
loop
mov
push
jne
data16
ret
cld
jecxz
mov
cs
out
sti
mov
xchg
xlat
sbb
dec
mov
dec
or
mov
out
pop
inc
cld
sti
pop
int
mov
ins
test
cmp
int
xor
ret
les
jne
rol
or
loopne
sbb
(bad)
into
pmaxsw
pop
inc
loopne
retf
jge
ins
push
jo
rcr
pop
xor
idiv
cmp
adc
out
mov
fmul
cmp
mov
pop
pop
dec
shl
sub
mov
pop
pop
dec
rcr
ficom
pop
xor
inc
push
retf
fnstenv
jnp
xchg
ret
inc
outs
mov
xchg
xlat
sbb
dec
fs
xor
imul
sub
mov
dec
mov
jecxz
(bad)
cmp
scas
jmp
pop
xor
mov
(bad)
mov
pop
ss
sbb
lock
xor
clc
mov
ret
mov
loopne
inc
push
push
inc
dec
mov
fsub
pop
pushf
fisubr
dec
gs
int3
pop
(bad)
sar
jnp
mov
jns
dec
rcr
ficom
cld
out
bound
test
fiadd
mov
pop
xor
clc
mov
jns
push
jmp
or
out
dec
pop
clc
pop
pop
xor
mov
out
bound
xor
add
jns
ja
mov
inc
jnp
out
mov
mov
pop
xor
mov
loopne
pop
mov
fdiv
dec
mov
cmp
cld
(bad)
cmp
stc
hlt
cmp
mov
inc
mov
lds
xor
fild
loop
icebp
sbb
mov
outs
xor
dec
gs
adc
addr16
xor
lds
xor
sbb
dec
mov
pop
or
mov
adc
shl
sar
mov
xchg
icebp
retf
test
inc
push
sbb
mov
shl
sar
aam
pop
xor
loopne
dec
mov
loope
sbb
mov
rcr
pop
mov
cmp
int
inc
dec
fisub
inc
loopne
retf
jge
movzx
xor
sbb
dec
push
dec
xor
xchg
jmp
loope
dec
mov
xchg
ja
xor
sbb
daa
int
movs
xchg
ja
cmp
dec
mov
sbb
pop
mov
inc
pop
cmp
dec
cmp
dec
cmp
dec
cld
sti
pop
int
mov
fsub
mov
stos
jo
xor
jno
arpl
retf
pushf
arpl
xor
pop
xor
cld
out
nop
nop
(bad)
mov
addr16
xor
xor
sbb
cld
push
dec
xor
sar
xchg
xor
pop
xor
cld
out
(bad)
(bad)
mov
test
pop
xor
mov
dec
dec
out
xchg
or
or
xchg
pop
xor
push
and
(bad)
or
xchg
or
mov
push
repnz
retf
lds
int
inc
dec
xchg
aam
pop
xor
xor
int
sub
pop
into
inc
jns
daa
(bad)
mov
loopne
dec
mov
call
add
and
mov
retf
int
inc
xchg
icebp
retf
test
inc
inc
sbb
mov
mov
out
or
mov
sbb
inc
loopne
ins
and
xchg
jmp
loope
sar
adc
rcr
inc
jmp
outs
xor
xor
xor
mov
(bad)
cmp
dec
xor
enter
inc
cmp
xor
push
jmp
mov
pop
xor
in
mov
(bad)
push
push
mov
inc
cmova
xor
ret
xor
cmp
ss
fsub
xor
cld
pop
mov
and
mov
inc
dec
mov
call
hlt
dec
sbb
jmp
adc
mov
(bad)
cmp
dec
int
xchg
sbb
pop
xor
(bad)
mov
or
fsub
xor
hlt
cs
bound
jno
push
mov
xor
add
ss
bound
retf
fsub
xor
inc
cs
pop
mov
js
adc
retf
fsub
xor
(bad)
mov
inc
inc
shr
stos
or
pop
fnstcw
out
mov
fcomp
rcr
pop
dec
rcr
pop
dec
rcr
xor
ja
(bad)
clc
pop
ficom
(bad)
pop
xor
cld
out
dec
rcr
pop
dec
jmp
pop
mov
retf
jno
jb
test
xor
mov
dec
int
mov
inc
mov
cmps
pop
dec
mov
jmp
and
pop
int
inc
not
cmps
mov
push
mov
out
imul
mov
pop
popa
push
out
movs
ins
jno
push
mov
ins
jnp
dec
xor
xor
inc
loopne
mov
ja
test
pop
(bad)
aad
xor
cmp
int
inc
xchg
mov
inc
loope
sbb
leave
mov
inc
cmp
mov
(bad)
mov
aas
enter
pshufw
xor
mov
mov
(bad)
mov
loopne
int
loopne
mov
div
mov
loopne
mov
pop
xor
aad
mov
xor
shl
and
xchg
or
inc
push
repnz
mov
xor
cmp
int
inc
dec
pop
sub
xor
cmp
int
inc
dec
mov
dec
mov
jecxz
mov
pop
mov
mov
repnz
loopne
jmp
jmp
addr16
inc
cmp
cmp
ja
call
jns
int3
mov
add
mov
pushf
test
jne
add
int
inc
xchg
mov
inc
loope
jmp
mov
stos
cmp
loopne
mov
mov
(bad)
and
into
inc
jns
mov
mov
mov
xor
mov
dec
mov
loope
dec
mov
nop
dec
mov
inc
ror
mov
loope
sbb
lds
xor
push
rol
and
call
mov
mov
inc
loope
jne
loopne
dec
mov
add
mov
lods
int
inc
pop
(bad)
lds
int
inc
dec
pop
sbb
pop
xor
cmp
ds
push
call
mov
pop
mov
or
pushf
(bad)
or
call
mov
push
pop
popf
pop
pop
xor
jmp
pop
mov
pushf
test
dec
mov
ja
test
pop
mov
mov
test
mov
int
mov
call
mov
(bad)
or
pop
fiadd
dec
loopne
retf
jge
movzx
xor
jne
and
push
xor
iret
mov
loopne
mov
cmp
ds
loopne
dec
int
cmc
int
loopne
mov
pop
xor
push
pop
in
pop
xor
jmp
adc
mov
pushf
test
dec
mov
ja
test
pop
mov
mov
neg
mov
mov
int
mov
call
mov
mov
(bad)
call
dec
loopne
retf
jge
movzx
xor
jne
and
push
xor
iret
mov
loopne
mov
cmp
ds
loopne
dec
int
cmc
int
loopne
mov
pop
xor
push
pop
fcomp
xor
jmp
xchg
(bad)
mov
pushf
test
dec
mov
stos
int
inc
push
xor
cmps
cmps
sub
call
rcr
pop
retf
pop
pop
xor
jmp
dec
(bad)
mov
pushf
test
dec
mov
stos
int
inc
push
xor
jne
and
push
ror
or
loopne
mov
pop
inc
or
push
pop
icebp
pop
pop
xor
add
int
inc
dec
ficomp
loopne
retf
jge
movzx
xor
leave
push
xor
iret
mov
loopne
mov
cmp
ds
loopne
dec
int
cmc
int
loopne
mov
pop
xor
mov
xor
or
call
jg
int
loopne
and
mov
pop
xor
(bad)
mov
pop
hlt
int
loopne
mov
imul
dec
mov
cld
mov
mov
fdivr
mov
xchg
mov
inc
loope
sbb
daa
int
in
ja
mov
cmp
dec
xor
mov
cmp
int
inc
dec
mov
sar
mov
mov
(bad)
into
dec
mov
mov
mov
ins
loopne
mov
xchg
jmp
iret
int
inc
pop
mov
add
int3
mov
adc
push
aaa
ds
mov
loopne
mov
pop
cmc
int
loopne
mov
pop
xor
call
cmp
int
inc
dec
mov
mov
xchg
add
ins
inc
xor
call
sub
jo
xor
(bad)
and
xor
pop
into
inc
jns
mov
mov
iret
int
inc
dec
mov
mov
xchg
or
mov
fcom
mov
call
push
loopne
mov
xchg
mov
inc
loope
sbb
daa
int
adc
xor
xchg
mov
inc
loope
sbb
call
and
into
shl
sar
mov
adc
leave
dec
in
and
xchg
mov
inc
loope
sbb
call
and
into
inc
jns
mov
mov
pop
aas
dec
mov
loope
dec
inc
stos
retf
loopne
sbb
pop
xor
cmp
int
inc
dec
fcmovu
aad
xor
jge
mov
push
loopne
mov
mul
dec
mov
dec
pop
dec
mov
pop
lds
inc
loopne
mov
fidiv
inc
loopne
mov
ja
test
pop
mov
mov
imul
mov
loopne
mov
pop
mov
mov
call
sbb
xchg
xchg
inc
loope
retf
push
btc
mov
(bad)
int
inc
pushf
ficomp
clc
mov
xor
inc
loope
pop
xor
int
xchg
xchg
ja
xor
sbb
inc
pop
cmp
dec
cmp
xor
cmp
int
inc
dec
pop
enter
ret
cmp
int
inc
dec
mov
dec
mov
jecxz
mov
fistp
dec
xor
call
mov
mov
dec
mov
sar
mov
mov
(bad)
into
dec
mov
int
mov
loopne
mov
not
dec
mov
dec
pop
dec
mov
js
dec
(bad)
mov
inc
loope
dec
mov
loope
sar
mov
xchg
mov
inc
loope
sbb
inc
mov
loopne
movs
test
pop
xor
mov
int3
mov
repz
pop
cmps
ss
mov
mov
gs
xchg
gs
pop
into
shl
sar
mov
adc
retf
sbb
int
inc
pop
mov
mov
ja
test
cmp
xchg
or
mov
push
repnz
cmp
xor
pushf
pop
inc
loope
dec
mov
cmp
int
loopne
mov
jne
mov
jmp
mov
xchg
mov
inc
loope
sbb
daa
int
cdq
xchg
ja
xor
add
inc
pop
cmp
dec
fistp
inc
mov
loope
mov
loopne
mov
adc
lds
int
inc
dec
int
shl
int3
mov
mov
mov
pushf
test
jne
add
int
inc
xchg
jmp
loop
sar
sub
int
mov
mov
int
loopne
mov
pop
xor
sbb
std
or
int3
mov
call
in
jo
xor
iret
mov
loopne
mov
cmp
shl
sar
mov
loope
retf
jno
jb
test
xor
inc
loope
mov
inc
int
inc
xchg
mov
inc
loop
sbb
call
mov
dec
fidiv
jge
pop
dec
xor
iret
mov
loopne
and
push
xor
iret
mov
loopne
mov
cmp
and
popa
cs
loope
dec
int
mov
pop
xor
inc
loope
sar
int3
inc
loope
sbb
das
int
mov
mov
inc
loope
ret
cmp
int
inc
es
inc
loope
inc
cmp
int3
mov
xchg
mov
inc
loope
sbb
das
int
mov
mov
inc
loope
sbb
das
int
mov
rcr
repz
inc
xchg
mov
inc
loope
jno
repz
inc
adc
retf
add
int
inc
pop
inc
dec
jg
iret
mov
loopne
ret
cmp
int
inc
dec
mov
retf
add
int
inc
pop
inc
inc
xor
(bad)
mov
fs
add
rol
cmp
int
inc
xchg
icebp
retf
add
int
inc
pop
inc
inc
xor
(bad)
mov
fs
xor
(bad)
mov
fs
xor
(bad)
mov
fs
cmp
bound
mov
mov
xchg
add
dec
loopne
pop
out
sti
mov
xchg
xlat
and
mov
sti
pop
pop
shr
pop
xor
dec
push
rcr
pop
jmp
or
rcl
xor
(bad)
cld
jecxz
dec
mov
pop
xor
cmp
ss
and
dec
dec
jp
sar
mov
lods
push
les
bswap
or
retf
fldenv
pop
into
mov
loopne
mov
mov
pop
ror
cld
ret
aad
call
push
fs
mov
jecxz
mov
loopne
push
loop
mov
dec
mov
fnsave
dec
out
mov
mov
(bad)
rcr
xor
mov
pop
pop
dec
rcr
(bad)
fcomp
xor
jle
fidivr
pop
xor
jp
mov
sbb
xchg
outs
inc
add
retf
pop
lds
js
aaa
cmp
pop
xor
addr16
pop
dec
sub
dec
cmp
es
mov
xor
pushf
pop
jo
pop
xor
cmp
fdivr
pop
xor
mov
xchg
cli
dec
jno
repz
mov
sbb
dec
mov
pop
nop
or
pop
xor
sbb
clc
pop
cmp
mov
pop
xor
ins
xor
loopne
int
stos
jo
cmp
sub
clc
pop
jb
fstp
inc
cld
sti
pop
add
sub
jp
pop
sbb
cld
jmp
dec
add
aas
push
es
xor
dec
sbb
inc
cmp
xor
jmp
xor
adc
dec
mov
hlt
xor
mov
xchg
cli
popa
jno
repz
inc
sbb
xlat
clc
pop
(bad)
mov
jmp
xor
sbb
mov
xor
sahf
fstp
pop
xor
mov
lods
or
pop
xor
test
sub
mov
jmp
xor
add
mov
pop
lds
js
aas
push
es
xor
int
inc
jmp
xor
sbb
mov
xor
sahf
repz
(bad)
pop
xor
mov
lods
or
pop
xor
stc
mov
int3
mov
jmp
xor
sbb
mov
xor
xchg
cli
popa
jno
repz
or
xor
pop
xor
stos
int3
mov
jmp
xor
sbb
mov
xor
sahf
ret
sbb
pop
xor
mov
lods
or
xchg
mov
xchg
int3
mov
loopne
cmp
pop
xor
mov
pop
xor
mov
lods
or
pop
xor
push
xor
sbb
xlat
clc
pop
mov
mov
adc
xlat
clc
pop
jb
pop
pop
xor
repz
or
sbb
xlat
clc
pop
fistp
std
xchg
mov
pop
fisttp
push
xor
sbb
xlat
clc
pop
(bad)
mov
imul
es
xor
xor
mov
xchg
repz
mov
sbb
lds
imul
dec
mov
xor
sahf
ret
mov
dec
pop
mov
or
mov
dec
sbb
out
aaa
mov
cmps
jo
test
jae
jbe
xor
and
test
mov
pop
xor
push
and
jo
push
sub
xor
daa
lods
or
daa
lods
or
pop
xor
mov
lods
or
(bad)
pop
mov
call
mov
cld
sti
pop
les
xor
adc
ror
dec
sbb
or
xchg
repz
bndldx
sti
pop
pop
mov
call
xchg
or
pop
les
pop
lds
pop
xor
fwait
mov
mov
pop
inc
dec
inc
sbb
fdivr
pop
mov
or
cvtps2pd
jne
pop
xor
adc
or
pop
xor
pop
mov
or
pop
xor
or
add
(bad)
les
pop
mov
mov
jb
mov
jmp
aas
push
es
xor
xor
sbb
call
jae
mov
aaa
lods
and
xor
pop
sbb
mov
(bad)
call
aaa
inc
sub
dec
cmp
ds
pop
xor
xor
ds
pop
mov
jo
pop
xor
mov
pop
or
(bad)
jb
retf
les
dec
cmp
ds
pop
xor
xor
ds
pop
mov
loopne
pop
xor
mov
pop
or
(bad)
jb
retf
(bad)
int
int
jo
xor
sbb
mov
adc
mov
xor
ins
adc
rcr
pop
push
inc
cmp
mov
lds
pop
xor
mov
pop
(bad)
out
xor
jg
and
sti
pop
mov
sbb
or
xchg
ja
xor
pop
pusha
add
push
push
mov
dec
mov
pop
pop
jne
pop
xor
push
xchg
mov
pop
pop
add
pop
xor
push
xchg
ins
dec
mov
pop
pop
push
add
push
push
ins
dec
mov
pop
mov
(bad)
out
sti
mov
xchg
xlat
retf
push
ja
push
out
movs
(bad)
jnp
sbb
dec
inc
sbb
sti
pop
pop
int3
add
(bad)
bound
mov
pop
xor
(bad)
sbb
push
pop
mov
mov
mov
out
leave
push
outs
xor
pushf
push
mov
loopne
cmp
pop
xor
fmul
xor
push
(bad)
dec
mov
fdiv
mov
pop
out
dec
mov
imul
inc
sbb
sti
pop
cmc
or
mov
xchg
icebp
(bad)
cld
stos
xor
pop
mov
add
mov
cwde
add
xor
in
xchg
(bad)
bound
mov
pop
(bad)
sbb
(bad)
aad
pop
mov
mov
scas
sbb
pop
mov
dec
rcr
pop
dec
rcr
int
pop
neg
sub
dec
int
sbb
jne
mov
inc
sbb
sti
pop
pop
dec
inc
push
and
jne
mov
sti
fiadd
push
xor
mov
pop
ins
dec
mov
pop
xor
cld
mul
int3
scas
mov
pop
dec
xor
pop
(bad)
mov
mov
pop
stos
sar
adc
rcr
push
jle
into
popa
popf
dec
sub
cld
jecxz
mov
xchg
ja
xor
ret
hlt
btc
mov
repz
and
out
(bad)
bound
xor
(bad)
sbb
loopne
cmp
es
xor
cld
jmp
inc
xor
sar
shr
sti
mov
xchg
xlat
pop
push
add
mov
retf
xchg
cmc
mov
imul
shl
int
test
inc
icebp
sbb
mov
fs
xor
ret
in
int
int
jo
mov
cmp
mov
pop
xor
mov
movzx
adc
mov
adc
mov
adc
mov
adc
ja
xor
xor
or
lods
daa
hlt
or
cld
loopne
(bad)
mov
pop
cmp
mov
pop
mov
pop
scas
es
cmp
xor
xchg
enter
cmp
mov
fs
inc
ud2
and
jnp
pop
rol
dec
mov
ss
test
xor
push
inc
cvtps2pd
and
mov
or
pop
xor
dec
int
imul
pop
lods
int
or
inc
xor
pop
retf
loopne
sbb
mov
sbb
cwde
mov
sbb
pop
xor
xor
out
mov
xor
aaa
dec
mov
adc
cmp
aaa
call
mov
inc
push
fstp
loopne
mov
imul
mov
push
mov
mov
out
mov
mov
pushf
fimul
and
int3
sub
inc
bndstx
shr
jne
pop
xor
adc
mov
div
enter
cmp
cld
movsx
sbb
dec
xor
daa
dec
mov
and
cmp
cmp
xor
int3
inc
mov
enter
cmp
push
sbb
je
sbb
mov
mov
and
dec
mov
div
dec
mov
loopne
sbb
mov
sbb
cwde
mov
xchg
ja
xor
(bad)
aaa
dec
inc
pushf
fimul
retf
sbb
dec
mov
push
inc
sbb
out
enter
cmp
push
sbb
inc
jbe
out
mov
mov
pushf
fimul
ss
test
inc
inc
test
xor
imul
int3
pop
fiadd
pop
xor
in
movsx
sbb
mov
cmc
sar
jne
inc
pop
ss
mov
loopne
pop
out
sti
mov
xchg
xlat
retf
push
adc
out
loopne
cmp
pop
xor
int3
pop
fst
(bad)
and
int3
push
jne
inc
div
dec
mov
div
dec
mov
pop
ds
sbb
dec
sbb
nop
push
div
dec
mov
sbb
sti
pop
cmp
stos
mov
mov
mov
mov
mov
loopne
aaa
cmp
pop
xor
sbb
dec
int
pop
mov
pushf
push
mov
hlt
cmp
popa
sbb
mov
or
or
stc
pop
or
sahf
xchg
ss
xor
sub
std
add
ret
mov
in
xor
mov
pop
mov
add
ret
in
jmp
pop
mov
pop
mov
mov
loopne
mov
xor
xor
mov
sbb
mov
xor
shr
xor
jno
sbb
mov
xchg
ja
jg
fcmovnb
mov
pop
popa
push
mov
addr16
js
xor
sti
pop
fidivr
adc
loop
icebp
sbb
pushf
pop
xor
jmp
mov
call
mov
pop
xor
ins
xor
mov
push
hlt
int
lock
mov
pop
xor
mov
xor
dec
lock
cmp
aaa
sub
add
int
mov
call
mov
sbb
cmp
mov
xchg
cmps
loopne
loopne
and
mov
or
pop
xor
sub
in
mov
xchg
ss
xchg
mov
cmps
mov
jae
mov
or
xchg
cmps
in
addr16
mov
or
clc
pop
fimul
loopne
xor
sub
in
mov
xchg
ss
cdq
mov
cmp
xor
call
cmps
lahf
push
dec
movs
jo
mov
loopne
mov
fnsave
sub
fnsave
cmp
daa
push
mov
test
mov
in
fnsave
xor
daa
sbb
pop
xor
sub
in
mov
loopne
cmp
pop
xor
add
in
mov
pop
cmp
dec
push
jl
mov
xchg
mov
data16
mov
imul
data16
shr
pop
js
and
popa
sbb
dec
stc
pop
mov
mov
loopne
imul
dec
fiadd
pop
xor
jg
les
stc
xor
or
loopne
leave
jp
and
and
mov
outs
xchg
mov
addr16
sbb
push
mov
pop
xor
sbb
fnsave
mov
loopne
dec
inc
stos
fisub
popa
ror
push
ds
test
inc
jns
push
retf
sbb
in
mov
pop
mov
mov
pop
add
mov
dec
into
ret
lea
xchg
inc
lock
int3
push
jne
inc
pop
ss
mov
loopne
dec
mov
sbb
pop
mov
ror
push
push
mov
mov
in
mov
inc
push
mov
loopne
mov
push
loopne
dec
mov
xchg
in
mov
xor
mov
pop
or
push
lock
mov
outs
mov
loopne
dec
int
jo
inc
stos
jmp
pop
xor
mov
cmps
mov
pop
sbb
mov
mov
sbb
fnsave
dec
lock
js
xor
pusha
(bad)
dec
js
xor
jecxz
inc
test
mov
mov
mov
cmps
inc
loopne
stos
mov
sbb
jg
mov
loopne
mov
add
fnsave
mov
imul
data16
dec
int3
inc
pop
push
add
xor
xor
mov
je
pop
xor
sub
in
mov
pushf
lock
ror
xor
mov
mov
(bad)
dec
mov
loopne
ret
cmp
in
mov
xchg
cmps
fsub
int
mov
loopne
sar
mov
xchg
mov
data16
sar
mov
jne
lds
in
mov
dec
int
gs
push
fisub
mov
loopne
jno
mov
jno
cmp
in
mov
xchg
mov
data16
dec
cmp
in
mov
lahf
(bad)
stos
data16
dec
int3
fcomp
mov
xchg
cmps
cld
data16
mov
pusha
ret
sub
in
mov
(bad)
inc
jmp
aas
dec
mov
ror
push
test
dec
int
jo
mov
cmps
mov
pop
sbb
int
xchg
xchg
out
inc
loopne
inc
lods
das
cmps
or
lock
js
xor
lods
or
fyl2xp1
pop
mov
mov
pop
and
dec
fcmovbe
out
pop
xor
cmp
in
mov
push
repnz
cmp
xor
lahf
dec
inc
mov
pop
xor
cmp
fnsave
test
xor
imul
cmp
imul
dec
mov
lock
xor
aaa
dec
mov
loopne
or
sbb
mov
call
adc
in
mov
sbb
mov
out
jp
sbb
mov
mov
add
enter
pop
xor
mov
mov
adc
aaa
enter
inc
div
push
mov
ror
js
xor
or
loopne
int
ror
mov
div
dec
mov
sub
dec
mov
xchg
jbe
mov
loopne
mov
mov
mov
push
loopne
dec
inc
ss
xchg
and
and
mov
inc
loopne
inc
jp
rep
mov
(bad)
jg
xor
test
xor
pop
xor
mov
push
enter
dec
mov
lahf
push
jne
pop
xor
push
enter
dec
mov
pop
fld
addr16
inc
jns
xchg
enter
cmp
adc
jmp
loopne
mov
retf
in
mov
test
lahf
(bad)
stos
data16
dec
int
mov
dec
lock
mov
loopne
mov
mov
mov
xor
push
ror
xor
and
inc
sahf
(bad)
mov
mov
loopne
cmp
pop
xor
cmp
xor
call
cmps
lahf
push
dec
movs
jo
mov
loopne
pop
out
sti
mov
xchg
xlat
retf
push
daa
popa
push
out
xchg
outs
inc
jle
retf
iret
adc
jb
pop
hlt
or
pop
xchg
pop
cmp
pop
xor
test
xor
mov
sbb
xchg
dec
popf
xor
mov
sti
pop
mov
pop
xor
xor
cmps
cmc
sti
pop
mov
pop
xor
int3
adc
cld
out
and
push
hlt
or
xor
or
sti
inc
dec
cmp
dec
push
adc
mov
dec
push
inc
lods
add
sub
call
cli
sar
hlt
or
mov
adc
ins
adc
enter
inc
subps
jne
pop
xor
jae
or
jnp
addr16
test
xor
pushf
retf
sbb
(bad)
cli
push
mov
retf
inc
sbb
cmp
aaa
cmp
les
mov
inc
push
cmp
or
push
dec
cmp
dec
mov
jno
pushf
fbstp
dec
mov
pop
inc
dec
cmp
dec
xor
sar
shr
cmp
dec
mov
pop
xor
sbb
or
dec
adc
mov
pop
(bad)
dec
push
or
mov
int3
sbb
inc
cmp
dec
cmp
dec
retf
sti
mov
dec
jnp
addr16
test
xor
sbb
(bad)
cld
loopne
push
loop
icebp
sbb
jmp
xchg
out
sbb
jmp
cld
mov
and
xor
jne
mov
xor
mov
inc
pop
mov
mov
fcomp
inc
cmp
or
int3
sbb
or
push
xor
mov
call
mov
cmp
adc
test
push
jp
hlt
mov
pop
xor
nop
inc
xor
clc
mov
mov
fdivr
cmp
pop
loopne
sbb
fs
mov
loopne
sbb
xor
pushf
neg
jmp
mov
mov
xchg
xlat
pop
push
in
inc
cmp
pop
xor
mov
pop
pop
dec
push
out
popa
dec
mov
xchg
xlat
retf
push
punpcklwd
out
mov
mov
fcom
dec
rcr
pop
enter
and
ja
dec
mov
test
cmp
int
mov
imul
adc
mov
pop
xchg
ja
xor
pop
dec
out
imul
mov
fbld
sbb
pop
ficomp
pop
xor
cld
jecxz
mov
pop
xchg
ja
xor
pop
dec
cmp
dec
int
mov
mov
inc
xchg
ja
inc
push
sbb
into
push
push
or
mov
pop
xor
cld
jecxz
dec
cmp
std
and
(bad)
icebp
sbb
mov
fs
push
sahf
pop
sar
xchg
retf
xchg
cmc
and
pop
pop
dec
rcr
pop
dec
rcr
xor
loopne
inc
push
fisub
mov
loopne
dec
mov
fldcw
add
dec
mov
out
(bad)
rcr
mov
xor
sar
mov
lahf
push
dec
mov
jne
(bad)
pusha
sbb
ds
push
push
pusha
dec
mov
jecxz
and
pop
mov
out
imul
mov
clc
mov
mov
mov
inc
sti
mov
xchg
xlat
sbb
dec
test
out
mov
fcomp
rcr
and
pop
xor
lahf
dec
xor
fnstenv
jns
hlt
or
inc
call
mov
dec
rcr
mov
rcr
mov
cmp
out
div
mov
mov
jb
mov
xchg
cmc
pop
out
icebp
sbb
out
dec
mov
mov
jl
bound
pop
into
cmc
mov
xchg
in
mov
xchg
icebp
jb
xchg
ja
xor
xor
inc
push
and
push
push
stos
popa
dec
mov
pop
(bad)
jmp
xchg
push
or
(bad)
mov
push
push
mov
mov
and
inc
(bad)
mov
adc
je
pop
inc
dec
jg
or
(bad)
and
inc
(bad)
or
jnp
addr16
ja
test
pop
fisubr
jmp
push
loop
icebp
sbb
out
dec
mov
inc
jle
into
mov
cld
jecxz
push
mov
pop
xor
loopne
int
stos
adc
pop
pop
xor
cmp
cmp
sub
mov
mov
pop
imul
jecxz
mov
inc
ins
adc
rcr
ins
jmp
pop
xor
sbb
cld
std
xor
jp
dec
cmp
dec
cmp
dec
xor
rol
test
dec
mov
mov
xor
(bad)
ja
mov
adc
mov
xor
mov
xor
cmp
(bad)
std
sbb
retf
jns
xor
mov
repz
dec
pop
sbb
lahf
pop
mov
lahf
dec
mov
push
ret
cld
adc
or
jp
xor
or
mov
push
ja
cmp
dec
int3
sbb
and
inc
pop
inc
lahf
xor
xor
mov
test
dec
cmp
or
pop
dec
mov
std
cmp
lods
xor
shl
movs
mov
jg
dec
(bad)
mov
lods
xor
inc
push
pop
xor
in
pop
cmp
cwde
mov
stos
mov
lock
cld
sti
mov
xor
xor
pop
ds
push
pop
cmp
in
pop
cmp
cwde
mov
sti
ins
push
loop
icebp
sub
(bad)
mov
pop
stc
pop
mov
dec
sub
mov
fsubr
imul
(bad)
mov
fsubr
pop
mov
or
(bad)
mov
fsubr
(bad)
mov
fsubr
es
(bad)
mov
clc
sti
pop
mov
dec
sub
mov
fsubr
imul
sub
mov
dec
sub
mov
fsubr
(bad)
mov
fsubr
js
shr
mov
mov
loope
mov
mov
pop
xor
xchg
or
push
sub
fsubr
(bad)
mov
fmul
(bad)
mov
mov
aam
fsubr
(bad)
dec
movs
sub
fsubr
(bad)
mov
mov
xlat
mov
fsubr
(bad)
mov
pop
inc
loopne
pop
stc
pop
data16
stc
pop
cmp
pop
loop
sti
pop
fcomp
sub
sub
(bad)
mov
pop
stc
pop
mov
fsubr
inc
mov
retf
inc
pop
mov
fsubr
(bad)
mov
dec
sub
mov
fsubr
cs
sub
mov
fsubr
(bad)
mov
fsubr
mov
adc
(bad)
mov
cmp
pusha
mov
fsubr
push
retf
(bad)
mov
fsubr
cmps
xor
sti
pop
mov
fsubr
imul
(bad)
mov
dec
sub
mov
fsubr
cs
sub
mov
fsubr
(bad)
mov
fsubr
mov
adc
(bad)
mov
pop
or
mov
fsubr
push
retf
(bad)
mov
fsubr
jle
fsubr
(bad)
mov
mov
fdiv
sbb
lea
xor
ret
cld
adc
adc
or
out
ja
xor
sar
lds
xor
jns
xchg
ja
xor
mov
popa
xchg
ja
(bad)
ja
mov
pop
xor
push
dec
xor
jp
sar
mov
dec
dec
dec
fisub
dec
loopne
adc
fnstsw
mov
push
mov
in
mov
mov
cmps
int
mov
pop
xor
dec
leave
rol
ror
mov
ror
mov
ret
push
cmp
or
aaa
into
btc
(bad)
(bad)
(bad)
hlt
in
xor
cmp
stos
mov
xchg
jmp
adc
test
fld
mov
dec
into
and
pop
mov
scas
neg
xor
pop
leave
sbb
(bad)
xor
mov
addr16
iret
bound
rcr
mov
nop
mov
push
xor
fist
lock
xor
jp
sar
mov
dec
fnstsw
ja
mov
ja
icebp
es
inc
cmp
int
inc
inc
ins
adc
rcr
js
dec
test
jp
xor
add
neg
xor
mov
xor
push
push
clc
mov
repz
ss
shr
mov
dec
(bad)
test
(bad)
inc
dec
mov
fstp
pop
xor
cld
jmp
int3
pop
fcmovbe
inc
loopne
retf
jge
mov
int3
movs
sbb
dec
cmps
js
xor
lods
and
pop
test
in
xor
pop
mov
dec
cmps
js
xor
sti
pop
mov
cmc
sti
pop
mov
rcl
pop
dec
xor
xor
mov
ficomp
push
idiv
mov
xlat
(bad)
ja
push
or
dec
xor
xor
add
xor
pushf
ja
mov
pop
xor
mov
into
cmp
out
sti
pop
mov
shl
mov
or
cmc
sti
pop
add
pop
retf
retf
(bad)
aaa
nop
add
xor
out
xchg
push
mov
dec
mov
mov
dec
xchg
mov
int
jnp
test
outs
xchg
sets
xor
pop
jmp
(bad)
jmp
test
mov
cmp
sti
pop
mov
add
pop
lock
xor
popa
sbb
mov
jg
mov
xlat
(bad)
ja
push
or
dec
xor
xor
add
xor
pushf
ja
mov
pop
xor
mov
(bad)
cmp
out
sti
pop
mov
ror
sar
dec
cld
out
mov
dec
mov
mov
dec
sbb
dec
mov
es
retf
(bad)
mov
cmc
sti
pop
cmp
stos
xor
cmps
test
pop
xor
mov
(bad)
ds
shl
jge
jo
mov
cmps
push
sti
(bad)
aas
xchg
add
xor
mov
mov
push
push
inc
dec
cmp
push
xor
lds
jg
test
mov
pop
bound
cmp
cmp
mov
jne
and
pop
int
mov
push
add
jne
(bad)
bound
int3
sti
(bad)
lock
xor
dec
call
mov
mov
jmp
mov
inc
ins
adc
rcr
push
mov
dec
mov
fst
aam
cmp
iret
mov
xchg
hlt
leave
mov
mov
dec
mov
pop
xor
adc
xor
stc
mov
mov
(bad)
mov
push
push
pop
call
fmulp
dec
js
sub
adc
fdiv
shr
mov
sahf
les
pop
xor
xchg
div
add
loopne
fwait
hlt
jge
sbb
faddp
mov
inc
add
xor
imul
pushf
lock
mov
mov
loopne
enter
ret
push
inc
iret
aam
int
loopne
mov
idiv
mov
xor
inc
loopne
jnp
call
cmp
int3
mov
dec
pop
fcomp
pop
xor
dec
shl
call
xlat
push
xor
out
sbb
rcr
pop
dec
rcr
pop
dec
rcr
xor
xchg
mov
inc
loopne
sbb
jp
mov
loopne
ror
sar
inc
add
fidivr
pop
xor
mov
loopne
sbb
push
sub
ja
cmc
sti
pop
int
dec
loop
mov
inc
jp
mov
loopne
mov
inc
sbb
sti
pop
popa
and
dec
xor
int
inc
loopne
mov
cmp
fiadd
pop
mov
mov
ja
xchg
sti
pop
mov
mov
ja
dec
mov
pop
xor
mov
pop
pop
test
xor
cmp
int3
mov
dec
pop
dec
mov
pop
xor
ja
xchg
sti
pop
pop
xor
mov
pop
xor
pushf
neg
inc
imul
out
xchg
inc
pop
push
cmp
mov
xchg
cmc
mov
imul
loopne
xor
fsub
xor
cld
out
(bad)
bound
mov
pop
pop
dec
rcr
pop
dec
inc
push
mov
pop
fisubr
lock
xor
dec
pushf
cli
mov
lahf
push
dec
mov
out
mov
out
pop
retf
push
pop
dec
inc
push
mov
jecxz
daa
lock
xor
lock
xor
out
sti
mov
xchg
xlat
pop
push
sub
dec
inc
xchg
cmc
mov
or
sbb
pop
xor
mov
loopne
pop
inc
push
mov
pop
fidivr
pop
xor
jge
ins
adc
out
mov
mov
(bad)
rcr
pop
dec
xor
sbb
and
mov
xor
mov
inc
outs
mov
xchg
xlat
sbb
dec
lea
jle
cmp
mov
xchg
ja
jmp
pop
xor
pop
pop
dec
rcr
int
mov
inc
inc
push
mov
repnz
repnz
inc
push
mov
add
inc
push
mov
jecxz
push
pop
xor
imul
int3
jecxz
iret
icebp
pop
xor
hlt
and
push
lahf
jg
mov
push
dec
mov
(bad)
icebp
sbb
lods
dec
gs
int3
or
or
ret
jg
(bad)
mov
sbb
dec
mov
out
mov
(bad)
bound
mov
pop
int
mov
inc
inc
push
es
mov
repnz
jmp
pop
int
test
ss
mov
loopne
mov
sbb
mov
cmps
pop
or
pop
faddp
jle
inc
mov
bnd
mov
inc
ins
cmp
fs
push
mov
retf
xchg
cmc
retf
test
out
mov
push
jbe
mov
pop
xor
cld
out
mov
pop
xor
out
addr16
xor
stc
hlt
or
mov
pop
pop
dec
rcr
pop
dec
sar
or
pop
xchg
mov
pop
xor
push
jns
hlt
rol
sar
mov
pop
xor
xor
pop
out
icebp
icebp
xlat
pop
stc
push
xor
add
popf
sbb
dec
xor
mov
xchg
xlat
sbb
dec
fs
xor
ret
in
cmc
or
xchg
xchg
ja
xor
sbb
data16
pop
enter
cmp
popa
dec
mov
mov
pminub
(bad)
pop
xor
jge
mov
sbb
mov
push
xor
out
mov
and
int3
fidivr
xchg
int
mov
xchg
inc
push
out
enter
cmp
jg
xor
ja
xor
jp
sar
mov
or
mov
mov
xor
mov
inc
push
and
cmp
xchg
ret
dec
int
test
pop
mov
jns
xchg
addr16
(bad)
xor
push
sbb
dec
mov
fsub
pop
pushf
ficomp
dec
gs
in
mov
dec
cs
dec
fcmovu
std
pop
xor
cld
out
(bad)
(bad)
mov
pop
or
jno
mov
icebp
inc
sbb
or
mov
mov
test
ret
sbb
push
sub
pop
jns
or
icebp
adc
je
xchg
retf
pop
xor
call
hlt
sub
xchg
retf
pop
xor
push
fimul
sbb
sbb
jle
gs
(bad)
jmp
and
shl
test
or
inc
and
mov
mov
or
jo
rcr
dec
mov
pop
xor
out
dec
mov
shr
dec
mov
loope
dec
cmp
xor
dec
ss
xchg
mov
inc
loope
sbb
mov
cmp
cmp
jp
jmp
mov
cmp
xor
sti
pop
xor
not
cmp
mov
loopne
mov
push
xor
call
int
cmp
int
inc
xchg
(bad)
nop
inc
loop
and
int
inc
sub
iret
mov
mov
xor
rcr
(bad)
pop
xor
cmp
int
inc
cmps
push
add
xor
mov
and
bnd
mov
xchg
hlt
ret
cld
pop
mov
mov
fidiv
je
pop
inc
mov
fcomp
xor
xor
inc
loopne
mov
pop
int
mov
test
ja
xchg
sti
pop
int
inc
loopne
mov
xchg
ja
mov
jb
dec
mov
pop
stos
mov
les
mov
or
int
inc
idiv
mov
pop
mov
pop
xor
dec
out
mov
bound
mov
add
mov
xchg
(bad)
mov
loope
pop
shl
in
or
pop
xor
jge
mov
pop
xor
inc
loop
sar
or
mov
out
mov
bound
and
jo
inc
stos
into
mov
loopne
imul
xor
jge
pop
jg
pop
xor
inc
mul
or
mov
dec
pop
mov
pop
xor
dec
out
mov
bound
and
jo
inc
stos
into
mov
loopne
mov
jge
mov
int
loopne
mov
(bad)
sar
pop
xor
mov
xor
call
dec
imul
dec
mov
pop
stos
mov
inc
loopne
mov
ja
xchg
sti
pop
mov
cmp
and
pop
xor
cmp
int
inc
dec
pop
imul
jbe
mov
push
jbe
mov
pop
stos
mov
les
mov
or
int
inc
neg
mov
ja
xchg
sti
pop
int
inc
loopne
mov
dec
jbe
mov
out
sbb
std
pop
xor
mov
xor
call
dec
pop
shr
ror
mov
loope
mov
cmp
cmp
mov
stos
into
mov
loopne
pop
std
pop
xor
jge
ficomp
mov
xor
call
dec
imul
dec
mov
pop
stos
mov
inc
loopne
mov
ja
xchg
sti
pop
mov
cmp
and
dec
add
mov
pop
mov
dec
out
and
dec
xor
in
mov
loopne
mov
xor
in
mov
loopne
mov
ud1
inc
loopne
mov
ja
xchg
sti
pop
bound
cmp
adc
add
lds
call
sub
out
ret
add
int
inc
dec
pop
jbe
pop
xor
push
pop
jno
mov
cmp
mov
pop
stos
mov
les
mov
or
int
inc
div
mov
sahf
les
inc
pop
xor
adc
lds
stos
ja
xchg
sti
pop
int
inc
loopne
mov
push
jno
mov
retf
mov
pop
stos
mov
les
mov
or
int
inc
test
mov
pop
int
lods
xchg
mov
inc
loope
sbb
test
or
pop
xor
jge
fcmovu
sti
pop
xor
mov
xor
call
dec
pop
rcl
in
or
loope
mov
cmp
cmp
sbb
dec
dec
stc
mov
mov
(bad)
pop
sti
pop
xor
mov
xor
call
dec
pop
shr
ror
mov
loope
mov
cmp
cmp
add
lds
call
sub
out
ret
add
int
inc
dec
pop
jbe
pop
xor
push
cmp
mov
bound
dec
mov
inc
dec
mov
loopne
mov
div
pop
hlt
int
pop
int
mov
pop
xor
sbb
int
inc
pop
fnstcw
xor
xor
add
iret
mov
call
xor
xor
add
iret
mov
test
mov
pop
xor
dec
out
mov
dec
mov
dec
mov
push
lds
sub
int
inc
xchg
in
jle
lds
xor
pop
xor
add
xor
clc
pop
xor
jge
mov
mov
mov
add
iret
mov
pop
xor
popf
dec
mov
loopne
std
dec
loopne
mov
push
lds
xor
inc
loopne
mov
ja
xchg
sti
pop
bound
cmp
sub
add
lds
stos
ja
xchg
sti
pop
int
inc
loopne
mov
push
jae
mov
out
sbb
clc
pop
xor
mov
xor
call
dec
pop
rcl
in
or
loope
mov
cmp
cmp
add
lds
stos
ja
test
pop
int
inc
loopne
mov
loop
dec
mov
call
mov
loopne
mov
call
add
popf
call
loopne
mov
out
xor
mov
add
mov
inc
xor
lahf
(bad)
int
mov
jns
mov
out
mov
dec
mov
call
in
push
xor
call
push
loopne
mov
push
and
shl
call
neg
dec
cmp
lds
int
inc
pushf
cli
mov
lahf
push
dec
mov
jns
cmc
pop
loopne
mov
fnstcw
mov
pop
int
jmp
loopne
mov
fwait
aaa
mov
push
inc
or
xchg
mov
inc
loop
sbb
retf
pushf
test
mov
loopne
std
dec
loopne
mov
push
mov
out
int
inc
xchg
mov
inc
loope
sbb
jnp
or
pop
xor
jge
mov
xchg
mov
inc
loop
ret
cmp
int
inc
xchg
hlt
mov
add
lds
stos
ja
xchg
sti
pop
int
inc
loopne
mov
fimul
inc
push
sahf
or
dec
mov
pushf
enter
pop
and
mov
jecxz
mov
not
mov
pop
mov
pop
xor
dec
out
mov
bound
and
jo
inc
stos
into
mov
loopne
xor
pop
int
dec
loopne
mov
test
mov
pop
xor
inc
xchg
mov
mov
stos
retf
loopne
mov
cmp
sar
mov
push
repnz
cmp
int3
mov
ja
xchg
sti
pop
int
inc
loopne
mov
xor
inc
push
test
cmps
cmp
pop
stos
mov
les
adc
or
int
inc
idiv
ja
pop
mov
mov
div
pop
mov
pop
xor
dec
out
mov
bound
and
jo
inc
stos
into
mov
loopne
stos
xchg
xor
jge
mov
mov
or
mov
pop
stos
mov
les
mov
or
int
inc
test
xchg
sti
pop
int
inc
loopne
mov
mov
test
or
mov
pop
stos
mov
les
pop
xchg
xor
ficomp
xor
call
into
mov
loopne
and
idiv
mov
neg
jbe
pop
mov
pop
xor
dec
out
mov
bound
and
shl
stos
into
mov
loopne
add
pop
mov
fnstsw
dec
push
push
or
mov
pop
stos
mov
les
and
mov
jecxz
mov
not
jbe
pop
mov
mov
out
jne
pop
mov
pop
xor
dec
out
mov
bound
and
jo
inc
stos
into
mov
loopne
mov
pop
xor
jge
(bad)
test
xor
mov
xor
call
dec
imul
dec
mov
pop
stos
mov
inc
loopne
mov
ja
xchg
sti
pop
mov
cmp
and
nop
shl
stos
into
mov
loopne
sti
test
xor
jge
mov
int
loopne
mov
(bad)
sub
xor
call
dec
pop
shr
ror
mov
loope
mov
cmp
cmp
movs
shl
stos
into
mov
loopne
daa
test
xor
jge
fisub
pop
xor
mov
xor
call
dec
pop
shr
ror
mov
loope
mov
cmp
cmp
mov
stos
into
mov
loopne
jg
pop
xor
jge
mov
mov
push
dec
mov
pop
stos
mov
les
mov
or
int
inc
idiv
jne
pop
mov
mov
mov
inc
loop
sbb
call
mov
idiv
je
pop
mov
test
pop
mov
pop
xor
dec
out
mov
bound
and
jo
inc
stos
into
mov
loopne
add
mov
mov
pop
in
or
loope
mov
cmp
cmp
add
lds
stos
ja
test
pop
int
inc
loopne
mov
xchg
push
dec
mov
push
push
dec
mov
pop
stos
mov
jle
adc
cmc
inc
loopne
mov
ja
xchg
sti
pop
mov
cmp
and
add
lds
stos
ja
test
pop
int
inc
loopne
mov
and
dec
mov
shr
mov
loope
mov
cmp
cmp
dec
ss
not
jae
pop
mov
pop
xor
dec
out
mov
bound
and
jo
inc
stos
into
mov
loopne
mov
pop
xor
jge
(bad)
sbb
icebp
mov
xor
call
dec
imul
dec
mov
pop
stos
mov
inc
loopne
mov
ja
xchg
sti
pop
mov
cmp
and
imul
into
mov
loopne
inc
pop
pop
dec
rcr
pop
dec
rcr
pop
dec
rcr
xor
loopne
inc
push
or
xchg
mov
inc
loop
leave
jg
xor
loopne
mov
loope
mov
rcr
mov
mov
dec
int
inc
loopne
mov
stos
fidiv
sbb
int
inc
neg
jg
pop
int
inc
loopne
mov
into
add
mov
inc
loop
sar
test
inc
ins
adc
rcr
dec
mov
inc
sbb
rcl
cmc
mov
loopne
mov
rcr
inc
cvtps2pd
sbb
xchg
out
or
loopne
sbb
or
jne
and
ret
xor
int
inc
loopne
and
inc
mov
pushf
not
int
xor
je
ins
mov
mov
pop
pop
add
and
mov
in
sti
pop
pop
xchg
gs
xor
push
ret
jo
rcr
dec
cmp
inc
mov
cdq
xchg
retf
xchg
cmc
pop
jo
rcr
aam
pop
xor
out
dec
(bad)
leave
test
push
xor
clc
mov
mov
fdiv
mov
xchg
ja
cmp
xor
fbstp
fadd
ret
cld
pop
mov
dec
mov
loopne
rol
sar
ret
cld
pop
mov
push
push
outs
add
inc
xor
xor
xchg
cmps
call
push
inc
add
xor
mov
mov
jle
mov
xchg
mov
vunpckhpd
(bad)
xor
xor
mov
(bad)
out
neg
jg
pop
mov
mov
stos
xchg
mov
loopne
pop
mov
xor
cmp
iret
mov
loopne
rol
mov
xor
ret
xor
iret
mov
xchg
inc
mov
loopne
vunpckhpd
(bad)
xor
xor
pop
dec
outs
pop
xor
xor
pop
pop
rcr
mov
mov
test
mov
out
(bad)
push
sahf
pop
dec
mov
pop
xor
mov
call
push
ret
jo
shr
xor
lahf
fidiv
jge
cmp
imul
dec
mov
(bad)
mov
loope
mov
sbb
dec
mov
loopne
sbb
xchg
aaa
sub
dec
inc
stos
cmps
mov
loopne
std
sub
int
inc
stos
mov
std
xor
int
inc
stos
stos
mov
loopne
std
sbb
int
out
xchg
mov
inc
loopne
sbb
shl
call
int3
adc
sub
dec
mov
fisttp
pop
xor
sbb
jo
xor
into
mov
loopne
mov
xor
add
or
xchg
mov
inc
loopne
sbb
or
mul
cmps
inc
loopne
int
loop
mov
fdiv
das
mov
pop
mov
mov
test
mov
loopne
or
pop
xor
(bad)
dec
xor
clc
mov
mov
fdiv
int
loope
mov
pop
xor
fdiv
dec
mov
loopne
dec
int
push
(bad)
cmp
int3
mov
push
xor
push
and
mov
loopne
sbb
fnsave
sbb
xchg
mov
inc
loopne
sbb
pop
pop
dec
sar
pop
dec
rcr
pop
dec
xor
into
mov
loopne
and
pop
cmp
mov
loop
mov
retf
mov
pop
xor
inc
ja
xchg
sti
pop
pop
xor
cmp
int3
mov
dec
fimul
jge
hlt
int
loop
mov
hlt
sbb
inc
ss
xchg
mov
inc
loopne
sbb
push
or
pop
mov
push
shl
xor
idiv
int
loop
mov
xchg
mov
inc
loopne
je
ins
cli
inc
bound
and
jbe
dec
mov
loopne
dec
int
pop
dec
dec
pop
xor
add
outs
dec
mov
jnp
mov
xchg
cmc
and
call
push
fiadd
dec
mov
ret
jo
xor
into
mov
loopne
mov
cmp
ds
loopne
dec
int3
cmp
mov
xchg
retf
xchg
cmc
mov
inc
loopne
dec
cmp
ins
mov
dec
cmp
xor
cmp
iret
mov
dec
fisub
lea
xor
push
jg
dec
mov
pop
xor
mov
loopne
mov
inc
stos
xchg
mov
loopne
repz
xor
cmp
iret
mov
hlt
xor
inc
cs
inc
ins
adc
ss
in
xchg
xlat
retf
push
or
out
xchg
outs
pop
push
ds
mov
xchg
ja
xor
add
mov
fidivr
pop
mov
mov
push
mov
xor
push
shr
int
test
pop
mov
mov
mov
xchg
addr16
mov
loope
(bad)
in
jecxz
cwde
mov
addr16
in
jmp
or
aaa
bound
mov
pop
mov
xor
jns
ja
xor
mov
(bad)
rcr
mov
mov
mov
xor
jge
int
mov
ret
sbb
jmp
xor
push
inc
push
pop
int3
(bad)
aaa
or
div
mov
adc
dec
mov
xchg
jbe
mov
pop
xor
inc
push
retf
dec
cmp
or
sbb
cwde
mov
addr16
jmp
pop
mov
dec
out
ja
sbb
pop
pop
dec
rcr
ficomp
pop
xor
jg
retf
xchg
cmc
and
(bad)
mov
xor
cld
out
push
push
push
add
dec
fidivr
mov
xor
cld
out
push
loop
icebp
sbb
cmps
pop
xor
jmp
movs
mov
add
inc
push
retf
fdiv
or
mov
xchg
mov
pop
loopne
sbb
repnz
loopne
and
ret
jo
push
cli
sbb
inc
jns
mov
mov
cs
dec
int
jge
int
push
scas
push
dec
mov
fild
inc
stos
cli
test
loopne
cmp
mov
pop
xor
pop
loopne
sar
or
cmc
int
dec
mov
add
dec
xor
mov
cmp
shl
aaa
xor
dec
mov
inc
jb
call
popa
mov
fcmovnbe
mov
mul
mov
push
repnz
pop
loopne
mov
adc
mov
inc
call
shl
jns
(bad)
add
jp
mov
dec
mov
pop
popa
push
out
xchg
outs
inc
pop
pop
adc
lahf
cmps
lock
pop
lds
inc
loopne
mov
ja
dec
mov
pop
xor
pusha
pushf
cli
mov
lahf
push
dec
mov
jne
shl
sbb
mov
ror
or
pop
xor
jge
mov
fstp
xor
data16
ret
cmp
in
mov
xchg
hlt
ror
sar
xchg
sti
pop
mov
mov
div
jl
pop
mov
mov
(bad)
jnp
pop
mov
pop
xor
dec
out
mov
bound
and
jo
xor
xor
mov
fstp
leave
jg
dec
dec
mov
pop
mov
pop
xor
dec
out
mov
bound
mov
add
mov
xchg
(bad)
int
rol
or
loopne
pop
push
add
mov
bound
dec
mov
pop
stos
mov
les
pop
mov
cmp
shl
mov
xor
jge
pop
jg
pop
xor
cmp
shl
mov
xor
jge
mov
int
ror
xor
fidivr
pop
xor
mov
xor
call
dec
pop
shr
ror
mov
loopne
sbb
add
pushf
test
add
cmps
cmp
pop
stos
mov
les
fidiv
ficomp
xor
call
xor
loope
jo
xor
xor
dec
sub
and
pop
xor
cmp
shl
pop
xor
cmp
shl
mov
xor
jge
(bad)
mov
xor
mov
xor
call
dec
pop
shr
ror
mov
loopne
sbb
add
pushf
test
in
or
loopne
sbb
add
pushf
test
xor
mov
pop
xor
mov
xor
call
dec
pop
shr
ror
mov
loopne
sbb
add
pushf
test
in
or
loopne
sbb
add
pushf
test
add
cmps
cmp
pop
stos
mov
les
fisubr
pop
xor
ficomp
xor
call
xor
loope
jo
xor
xor
cmps
sub
and
nop
shl
call
xchg
sub
cmp
add
lds
lods
ja
test
pop
mov
mov
idiv
jp
pop
mov
mov
ret
xchg
hlt
and
ret
jo
xor
xor
push
xor
fstp
mov
add
lds
lods
ja
test
pop
mov
mov
idiv
jns
pop
mov
mov
sub
mov
test
jns
pop
mov
pop
xor
dec
out
mov
bound
and
jo
xor
xor
aaa
xor
fstp
leave
push
xor
dec
mov
call
xchg
ret
jo
xor
xor
jmp
xor
(bad)
mov
add
lds
lods
ja
test
pop
mov
mov
div
mov
ja
xchg
sti
pop
mov
mov
test
mov
pop
lds
inc
loopne
mov
add
cmps
cmp
pop
stos
mov
les
pop
mov
cmp
shl
mov
xor
jge
(bad)
mov
xor
push
sbb
dec
and
retf
shr
pop
sahf
pop
xor
xor
xor
scas
ret
jo
xor
xor
pop
das
xor
(bad)
mov
add
lds
lods
ja
test
pop
mov
mov
not
mov
pop
mov
mov
mul
mov
pop
xor
add
lds
lods
ja
test
pop
mov
mov
not
mov
not
js
pop
mov
pop
xor
dec
out
mov
bound
mov
add
mov
xchg
(bad)
int
rol
or
loopne
pop
push
sbb
dec
mov
iret
out
or
loopne
sbb
add
pushf
test
pop
dec
rcr
pop
dec
mov
mov
dec
mov
loopne
leave
jg
dec
dec
mov
loopne
sbb
pop
dec
mov
out
mov
dec
(bad)
lds
shl
inc
ror
push
repnz
dec
mov
loopne
mov
mov
jb
mov
ret
xchg
mov
data16
sar
adc
rcr
les
dec
lea
out
cmp
inc
ss
pushf
xchg
aam
loopne
dec
mov
mov
and
inc
cmp
push
mov
dec
mov
dec
xor
mov
adc
pop
xor
inc
loopne
sar
arpl
xor
dec
push
or
mov
ja
sahf
sti
pop
fcmove
xchg
pop
xor
cmp
iret
mov
jne
and
loopne
sbb
sbb
mov
pop
mov
mov
ja
xchg
sti
pop
pop
cld
gs
xor
mov
mov
imul
cmp
dec
rcr
xor
xchg
mov
inc
loopne
sbb
xchg
push
pusha
dec
mov
lahf
leave
mov
xchg
cmc
mov
mov
mov
mov
mul
mov
loopne
mov
xor
ja
xchg
sti
pop
mov
mov
neg
int
loop
mov
xchg
mov
inc
loopne
sbb
sbb
mov
loopne
int
loop
mov
out
mov
fcomp
rcr
mov
mov
imul
mov
mov
xchg
cmc
(bad)
cmp
int3
mov
pop
xor
fdiv
dec
mov
xchg
mov
pop
inc
push
(bad)
mov
inc
loopne
dec
mov
xchg
cmc
lds
int3
mov
dec
ficomp
xor
xchg
mov
loopne
lds
int3
mov
dec
pop
dec
rcr
pop
push
rcr
mov
mov
jne
mov
mov
cmp
dec
inc
stos
call
pop
xor
shl
xor
clc
mov
mov
fmul
std
sbb
int
ror
dec
xchg
sti
pop
mov
mov
neg
mov
loopne
dec
push
xor
dec
xor
into
mov
loopne
and
ret
jo
push
cmp
dec
mov
push
and
xor
jb
dec
mov
loopne
dec
xor
push
dec
retf
xlat
cmp
mov
pop
xor
rcr
xor
xchg
mov
inc
loopne
sbb
idiv
bound
out
(bad)
rcr
pop
and
xor
cmp
into
mov
dec
fisubr
or
int
jge
movzx
xor
shl
dec
mov
loopne
sbb
mul
mov
stos
xor
jne
mov
mov
mov
xchg
mov
inc
loopne
sbb
sbb
xchg
mov
inc
loopne
sbb
cmps
mov
loopne
mov
loopne
sar
icebp
xchg
pop
xor
inc
div
mov
pop
xor
jmp
pop
mov
cmp
es
jns
sbb
mov
jo
push
out
dec
mov
loopne
retf
push
and
rcr
stos
cmps
mov
loopne
mov
jge
fldcw
call
mov
mov
mov
mov
mul
lahf
inc
loopne
mov
xchg
mov
inc
loopne
sar
mov
pop
xor
inc
push
xor
xchg
mov
inc
loopne
sbb
sbb
jne
mov
mov
or
pop
mov
pop
xchg
mov
loopne
pop
xchg
pop
xor
cmp
iret
mov
inc
ins
adc
ss
in
xchg
xlat
retf
push
punpcklwd
out
xchg
outs
inc
push
cmp
nop
adc
mov
fsub
div
xor
pop
(bad)
mov
adc
or
jmp
sbb
punpcklbw
stc
test
jmp
lock
xor
clc
mov
sbb
sbb
loopne
inc
xor
xor
jmp
xor
pop
popa
mov
xor
into
sbb
pop
fs
inc
jb
rcr
pop
dec
push
push
sbb
xchg
hlt
rol
sar
push
push
scas
sbb
xchg
ja
jmp
pop
xor
push
jbe
dec
mov
sbb
(bad)
out
imul
mov
pop
fs
push
jmp
movs
dec
mov
call
rcr
int
mov
fisub
pop
mov
mov
fdivr
mov
push
pop
pop
mov
pop
xor
cmp
ret
dec
mov
rcr
int
mov
mov
dec
loopne
sbb
xor
loopne
dec
mov
hlt
and
jle
ins
dec
mov
xchg
dec
mov
inc
ins
cmp
ds
push
sbb
ds
sahf
lds
jle
int3
dec
mov
push
retf
adc
dec
gs
xor
cld
jmp
mov
xor
(bad)
sbb
pop
pop
or
lahf
xchg
or
pop
cmp
mov
pop
xor
cld
jmp
mov
cmp
sub
cld
jmp
and
pop
int
xchg
xor
cli
sbb
sahf
cmc
push
mov
xor
inc
pop
int3
inc
push
pop
int3
retf
inc
adc
out
icebp
push
out
mov
mov
(bad)
rcr
pop
dec
rcr
pop
dec
rcr
pop
dec
rcr
pop
dec
rcr
pop
fdivr
jne
and
xor
fstp
out
jne
mov
fwait
xchg
or
pop
mov
sub
dec
rcr
and
pop
xor
rcr
and
pop
xor
rcr
and
pop
xor
rcr
and
pop
xor
xor
add
out
jne
mov
aaa
lods
or
pop
pop
dec
out
jne
mov
aas
lods
or
pop
pop
dec
out
jne
mov
(bad)
xchg
or
pop
pop
dec
out
jne
mov
imul
mov
out
(bad)
rcr
and
pop
xor
rcr
and
pop
xor
rcr
and
pop
xor
rcr
and
pop
xor
xor
xor
jp
mov
scas
loopne
rol
sar
mov
jge
xor
and
(bad)
pop
pop
xchg
aas
pop
xor
inc
loopne
mov
mov
xor
jecxz
jge
mov
adc
xlat
clc
pop
pop
xchg
aas
pop
xor
inc
loopne
enter
mov
xor
add
inc
sub
xlat
clc
pop
fisub
popf
xor
shl
xor
outs
mov
sub
(bad)
pop
fiadd
mov
shl
add
outs
mov
sub
xlat
clc
pop
(bad)
lahf
pop
xor
sar
or
aaa
lods
or
pop
pop
mov
sub
xlat
clc
pop
fcmove
lahf
pop
xor
xchg
xchg
rol
mov
mov
aas
lods
or
pop
mov
(bad)
shl
int
cmp
inc
adc
mov
pop
pop
xchg
aas
pop
xor
inc
loopne
int3
sbb
mov
out
icebp
sbb
lods
dec
not
mov
pop
mov
pop
xor
inc
loopne
sar
xchg
sti
pop
mov
cmp
and
mov
jae
cmp
jbe
mov
neg
mov
dec
mov
xor
sbb
inc
sub
xlat
clc
pop
pop
dec
out
xchg
ja
xchg
pop
(bad)
sbb
pop
retf
out
bound
mov
pop
mov
rol
in
or
pop
pop
dec
mov
cmp
dec
sbb
or
sub
sbb
and
mov
ror
pop
pop
rcr
xor
jmp
pop
pop
xchg
bound
and
pop
xchg
dec
es
xor
mov
pop
xor
mov
pop
xor
sub
xor
pop
retf
out
mov
fisttp
sbb
or
mov
shl
(bad)
mov
cmp
dec
sbb
or
jne
and
jne
and
sbb
pop
dec
rcl
pop
pop
push
loop
dec
mov
aad
dec
mov
das
int
mov
dec
pop
dec
mov
sub
mov
pop
xchg
or
sbb
pop
pusha
rcr
xor
ja
xchg
sti
pop
pop
xchg
bound
and
pop
xchg
xor
pop
xor
mov
pop
xor
mov
pop
xor
test
pop
pop
xor
aaa
pop
dec
mov
les
rol
jmp
mov
sbb
xor
mov
pop
xchg
or
push
xor
mov
sbb
mov
shr
or
pop
pop
dec
push
(bad)
push
dec
mov
pop
mov
mov
xor
pop
int
lea
int
std
mov
pop
xor
pop
xor
aaa
pop
dec
mov
lds
rol
jmp
mov
sbb
lods
or
sub
mov
jg
or
ja
dec
mov
sbb
enter
xchg
sti
pop
pop
int
pop
xor
mov
pop
xchg
mov
ret
lds
rcr
pop
or
ss
dec
mov
pop
pop
dec
rcr
mov
pop
xor
rcr
int
lea
int
fnstcw
xor
jne
and
pop
xor
gs
dec
mov
shl
call
mov
lahf
xchg
or
xchg
cmc
and
pop
xor
mov
pop
xor
xchg
push
xor
and
mov
pop
xor
sbb
enter
xchg
sti
pop
pop
int
pop
xor
mov
pop
xchg
fs
xor
rcr
int
lea
int
std
mov
pop
jae
stc
xor
ja
dec
mov
pop
bound
rol
jo
rol
jmp
mov
sbb
lds
mov
pop
xor
mov
pop
xor
test
pop
pop
mov
pop
xor
lods
push
xor
pop
xor
ja
xchg
sti
pop
pop
xchg
bound
and
pop
xchg
cmp
pop
xor
mov
pop
xor
mov
pop
xor
test
push
xor
fdiv
dec
mov
dec
pop
or
xor
arpl
jo
rcr
fimul
pop
xor
mov
int
lea
int
std
mov
pop
mov
pop
xor
mov
xor
jnp
dec
mov
lds
rol
jmp
mov
sbb
scas
or
xchg
cmc
and
pop
xor
mov
pop
xor
test
push
xor
mov
xor
dec
pop
dec
arpl
and
jo
rcr
fcmovb
fwait
pop
xor
sub
pop
int
lea
int
fnstcw
pop
fs
pop
xor
or
mov
shl
push
call
dec
mov
pop
xor
cmp
pop
int
lea
int
fnstcw
pop
retf
xor
jp
xor
or
mov
mov
call
dec
mov
pop
xor
movs
mov
xor
sbb
inc
sub
xlat
clc
pop
pop
dec
inc
sub
sti
pop
pop
push
shl
pop
xchg
mov
ja
dec
cmp
xchg
pop
xor
mov
pop
xor
imul
imul
loopne
jl
pop
xor
mov
pop
xor
mov
pop
xor
or
mov
shl
push
call
dec
mov
pop
xor
cdq
xor
pop
int
lea
int
std
mov
pop
sar
push
xor
add
mov
(bad)
jo
shl
jmp
mov
xor
xchg
mov
loopne
int
pop
xor
xor
fidivr
inc
loopne
pop
out
icebp
sbb
test
mul
mov
pop
xor
dec
loopne
sar
xchg
sti
pop
mov
cmp
and
mov
jae
xor
sbb
inc
sub
xlat
clc
pop
fidivr
cld
out
bound
push
repnz
cdq
jmp
loopne
jl
pop
xor
mov
xor
mov
xchg
pop
ret
pop
pop
dec
rcr
xor
jmp
pop
pop
test
mov
cmps
adc
mov
pop
dec
inc
sub
xlat
clc
pop
pop
dec
jmp
out
or
jmp
ja
dec
cmp
and
jo
rcr
fcmove
cdq
pop
xor
mov
call
pop
dec
inc
sub
xlat
clc
pop
pop
dec
inc
sub
clc
pop
pop
fs
out
or
jmp
ja
dec
cmp
xchg
pop
xor
arpl
jo
rcr
fidiv
pop
xor
fnstcw
pop
dec
rcr
pop
dec
rcr
pop
dec
rcr
pop
dec
rcr
pop
hlt
mov
jne
and
aas
xor
fstp
out
jne
mov
sbb
push
mov
sub
xlat
clc
pop
pop
dec
inc
sub
sti
pop
pop
sub
jnp
pop
ror
pop
dec
mov
shl
call
outs
add
dec
sbb
scas
or
xchg
cmc
and
lds
rcr
pop
or
imul
push
mov
pop
xor
mov
pop
int
push
xor
sub
lahf
psubusb
pop
xor
pop
dec
rcr
pop
push
mov
imul
push
mov
pop
pop
dec
rcl
dec
mov
pop
xor
rcr
int
lea
int
fnstcw
xor
jne
and
pop
mov
rol
in
or
pop
pop
dec
push
es
jmp
scas
ins
xor
pop
int
lea
int
fnstcw
xor
jne
and
pop
pop
dec
mov
shl
call
inc
add
dec
sbb
lods
or
loopne
dec
inc
sub
xlat
clc
pop
pop
dec
inc
sub
clc
pop
pop
pop
rcr
pop
and
pop
xor
ja
xchg
sti
pop
pop
xchg
bound
and
pop
xchg
cmp
pop
xor
inc
cs
jne
mov
sub
mov
pop
xchg
or
ja
dec
mov
pop
xor
mov
pop
call
xchg
sti
pop
pop
dec
push
bound
mov
pop
pop
dec
inc
sub
xlat
clc
pop
pop
dec
inc
sub
clc
pop
pop
pop
shl
xor
ja
dec
mov
pop
xor
ja
xchg
sti
pop
pop
xchg
bound
and
pop
xchg
mov
mov
pop
xor
mov
pop
xor
test
pop
xor
mov
xor
dec
pop
dec
arpl
and
jo
rcr
fiadd
pop
xor
sub
pop
int
lea
int
std
mov
pop
lods
mov
pop
xor
add
mov
(bad)
jo
rol
jmp
mov
sbb
or
sub
mov
pop
xchg
or
pop
xor
loopne
dec
mov
pop
xor
ror
or
pop
pop
dec
push
xchg
dec
mov
pop
pop
dec
inc
sub
xlat
clc
pop
pop
dec
inc
sub
sti
pop
pop
push
rcr
pop
and
dec
pop
fcomp
pop
xor
mov
pop
xor
not
mov
pop
xor
jle
es
mov
sub
mov
jg
or
jne
and
dec
pop
xchg
pop
xor
mov
pop
xor
not
push
mov
pop
xor
mov
pop
xor
mov
pop
xor
mov
jne
and
ret
in
or
pop
pop
dec
mov
add
dec
sbb
lods
or
sub
mov
pop
xchg
or
pop
xor
pop
xor
jne
and
cld
jmp
mov
pop
pop
dec
push
stos
cs
mov
pop
(bad)
dec
loopne
rol
sar
mov
jo
rcr
pop
jmp
sub
fadd
inc
mov
lahf
xor
jne
and
pop
xor
inc
push
mov
xor
mov
inc
adc
and
pop
xor
jp
retf
xchg
cmc
push
push
mov
push
mov
fdiv
mov
pop
ret
pop
(bad)
sbb
into
sbb
and
test
xor
not
inc
loopne
mov
push
pop
dec
inc
push
and
(bad)
jo
ror
or
push
mov
cmp
sub
cld
out
mov
ss
dec
rcr
mov
cmp
sti
pop
pop
dec
mov
mov
sub
cmp
dec
dec
clc
mov
pop
out
sti
mov
xchg
xlat
leave
push
pop
xor
dec
div
call
pop
xor
cmp
int
inc
dec
ficomp
mov
push
ret
neg
push
mov
pop
xor
dec
out
fwait
xor
enter
cmp
sti
pop
mov
mov
not
push
mov
sbb
or
xchg
mov
inc
loopne
sbb
sub
lahf
dec
mov
push
and
dec
xor
xor
dec
or
dec
cmp
jns
mov
sbb
ror
or
xchg
mov
inc
loopne
sbb
and
mov
push
and
call
jnp
xor
(bad)
int
int3
push
pop
add
pop
xor
cmp
int
inc
dec
(bad)
scas
pop
xor
(bad)
loopne
cmp
sti
pop
mov
mov
mul
mov
inc
loope
mov
fnstenv
pop
rcr
dec
inc
loopne
sbb
and
mov
push
and
scas
jo
xor
xor
jecxz
xor
(bad)
int
int3
push
pop
xchg
or
lds
int
inc
dec
fimul
scas
pop
xor
(bad)
loopne
cmp
sti
pop
mov
mov
neg
pop
mov
out
mov
inc
int3
push
pop
imul
pop
int
inc
dec
fiadd
pop
xor
(bad)
loopne
cmp
sti
pop
mov
mov
test
xor
ror
or
loopne
sbb
and
mov
ja
xchg
sti
pop
pop
add
xor
cmp
int
inc
dec
pop
dec
daa
pop
xor
shl
or
pop
pop
or
pop
xor
rcr
adc
push
mov
xchg
ret
xchg
mov
inc
loopne
sar
mov
loopne
adc
ss
in
xchg
xlat
sbb
dec
mov
sbb
push
mov
(bad)
xor
mov
xor
xor
out
dec
fimul
loopne
retf
jge
cmp
out
idiv
mov
inc
lock
mov
repz
inc
mov
mov
mov
mov
mov
aam
cmp
lds
retf
lods
jo
xor
fistp
scas
or
dec
push
scas
sub
cmps
cmp
mov
inc
loopne
enter
mov
push
inc
pop
shl
mov
dec
loopne
sbb
daa
dec
mov
loopne
dec
int3
push
pop
mov
pop
xor
cmp
lds
lods
pop
xor
dec
ss
lahf
(bad)
mov
int3
push
pop
scas
or
lds
lds
lods
pop
xor
add
retf
sbb
rcr
or
dec
loopne
sbb
daa
dec
mov
loopne
dec
int3
push
pop
push
or
lds
lds
lods
pop
xor
push
jnp
dec
mov
loopne
dec
int3
push
pop
jl
pop
xor
cmp
lds
lods
pop
xor
add
retf
sbb
rcl
or
loopne
sbb
daa
dec
mov
loopne
inc
int3
push
pop
and
pop
xor
cmp
lds
lods
pop
xor
dec
push
ret
lahf
(bad)
mov
int3
push
pop
ret
or
lds
lds
lods
pop
xor
add
retf
adc
or
dec
loopne
sbb
es
mov
loopne
inc
int3
push
pop
or
repnz
lods
pop
xor
dec
call
lds
add
retf
adc
shl
or
dec
loopne
sbb
es
mov
loopne
inc
int3
push
pop
dec
or
repnz
lods
pop
xor
add
retf
adc
sar
xchg
mov
loopne
sbb
es
mov
pop
mov
mov
div
dec
stc
mov
mov
fstp
sbb
and
lods
jo
push
hlt
fidiv
xor
mov
dec
out
mov
imul
add
lds
lea
dec
xor
add
fadd
xor
les
shr
or
loopne
mov
loopne
inc
jns
mov
mov
sbb
dec
cmp
xor
shl
dec
mov
loopne
jb
call
inc
jecxz
mov
adc
mov
into
mov
pop
mov
mov
ja
xchg
sti
pop
mov
mov
idiv
mov
pop
lds
inc
loopne
mov
mov
xor
test
mov
add
sbb
faddp
mov
inc
add
xor
imul
pop
or
inc
out
mov
cwde
jge
mov
xor
push
and
mov
jmp
mov
loopne
sbb
sub
sahf
fdivr
mov
xor
sub
jmp
mov
loopne
sbb
and
push
push
push
pop
dec
mov
jecxz
mov
dec
ficom
pop
xor
dec
call
lds
cmp
retf
dec
pop
pop
pusha
pop
xor
cmp
int3
mov
dec
(bad)
scas
pop
xor
mov
call
jae
xor
(bad)
lds
int3
mov
dec
fiadd
pop
xor
cmp
into
mov
pushf
repnz
jmp
loopne
sbb
in
or
loopne
sbb
and
pop
rcr
mov
mov
not
dec
shr
jmp
loopne
sbb
scas
mov
pushf
test
int
push
xor
call
mov
pop
xor
xor
mov
stos
pop
xor
dec
loopne
sar
mov
loopne
inc
mov
add
std
inc
out
mov
(bad)
xchg
or
pop
mov
mov
test
mov
pop
mov
mov
neg
pop
mov
loope
mov
neg
pop
mov
call
mov
mov
mov
int
int3
ud1
popa
call
aaa
mov
loopne
dec
push
adc
lds
int
cmp
xor
push
pop
xor
inc
xchg
mov
inc
loopne
sbb
leave
jmp
loopne
sbb
and
mov
call
jnp
xor
call
inc
loope
mov
test
mov
arpl
mov
xor
mov
sbb
mov
dec
loopne
sar
mov
loopne
sbb
(bad)
mov
loopne
and
jecxz
mov
dec
fisub
stos
pop
xor
add
int3
mov
dec
mov
mov
arpl
pop
mov
out
mov
jne
mov
jmp
mov
ja
cmp
pop
pop
dec
rcr
fiadd
stos
pop
xor
push
(bad)
and
xchg
mov
inc
loopne
sbb
loopne
movs
inc
loopne
mov
cmp
sar
inc
cmp
iret
mov
loopne
movs
inc
loopne
mov
cmp
push
sbb
pop
pop
or
add
mov
loopne
pushf
mov
loopne
push
loop
lock
mov
jg
dec
mov
pop
popa
push
out
movs
add
mov
mov
mov
and
or
dec
mov
loopne
inc
jns
sbb
and
jne
mov
loopne
jmp
pop
xchg
jl
pop
xor
mov
sahf
shl
xor
inc
and
ja
dec
mov
pop
xor
push
and
dec
ficom
pop
xor
popa
cs
pop
mov
mov
loopne
inc
push
(bad)
and
jne
and
mov
and
test
mov
(bad)
jne
loopne
dec
mov
sub
mov
stos
jo
mov
pop
cmp
pop
xor
mov
pop
xor
add
jg
test
cmc
repz
fmulp
push
nop
aad
cwde
loopne
cmc
retf
jle
mov
movs
inc
loopne
int
repnz
mov
or
dec
mov
(bad)
call
repnz
push
pop
call
fmulp
dec
js
sub
adc
fnstenv
shr
mov
push
repnz
mov
loopne
je
imul
dec
mov
loopne
dec
push
ds
mov
push
inc
inc
jg
lahf
movs
inc
loopne
mov
fbstp
push
repnz
jmp
pop
pop
test
xor
cmp
fidiv
lods
pop
xor
mov
loopne
sbb
and
rdmsr
dec
xor
xchg
movs
inc
loopne
mov
cmp
stos
pop
mov
repnz
jmp
loopne
mov
mov
fidiv
popa
push
jmp
adc
dec
shl
mov
mov
xor
stc
xor
and
mov
xchg
icebp
lds
pop
dec
outs
pop
xor
cwde
pop
xor
jns
and
(bad)
xchg
or
pop
pop
cmp
pop
xor
xor
sbb
dec
jo
add
xor
in
push
in
shl
jmp
popa
pop
xor
cdq
(bad)
jb
push
and
dec
mov
xchg
icebp
lds
pop
enter
icebp
call
and
(bad)
jo
ror
hlt
nop
sti
pop
pop
dec
daa
pop
xor
cmp
jb
add
fbstp
outs
pop
xor
mov
xor
mov
mov
dec
rcr
pop
dec
rcr
pop
dec
mov
xor
mov
sbb
bound
jle
mov
cld
cmps
(bad)
lds
fnsave
mov
xor
xor
fnsave
stc
lahf
push
dec
mov
xchg
inc
lock
dec
mov
mov
loopne
cld
push
into
cmp
(bad)
bound
mov
pop
int
or
pop
cmc
or
mov
xchg
mov
push
loopne
sbb
and
xchg
mov
retf
jno
jb
test
xor
int3
cmps
sbb
xchg
int3
stos
fidiv
mov
xor
mov
jne
and
jo
inc
push
mov
add
pop
dec
mov
stos
fbstp
push
loopne
sar
cld
push
out
aas
dec
mov
pop
xor
cld
(bad)
mov
mov
sub
test
ret
xor
jns
xor
mov
scas
cmp
pushf
xor
sbb
(bad)
pop
xor
mov
pop
mov
xchg
mov
pop
fcmove
test
(bad)
mov
lea
xor
push
loopne
ret
cmp
fbstp
cld
mov
cmc
or
mov
pop
xor
(bad)
xor
add
pop
xor
mov
pop
xor
mov
jne
and
pop
clc
dec
sar
jmp
xchg
sti
pop
pop
dec
push
cli
cmp
xlat
clc
pop
mov
sub
xor
mov
and
pop
pop
dec
push
add
test
dec
mov
lahf
inc
ror
mov
pop
pop
ss
pop
xor
push
push
aas
dec
mov
loopne
leave
jp
inc
dec
mov
pop
pop
dec
jmp
loopne
(bad)
cmp
fdiv
mov
xchg
icebp
lds
fbstp
adc
ja
cld
sti
pop
pop
xor
xor
jmp
push
xor
idiv
mov
pushf
pop
and
pop
xor
sbb
sti
pop
xor
pop
fisubr
loopne
leave
dec
pop
push
loopne
loopne
sbb
pop
pop
dec
rcl
inc
or
neg
inc
mov
adc
dec
xor
call
jne
and
jb
rcr
pop
dec
push
(bad)
aas
dec
mov
pop
xor
mov
pop
pop
dec
inc
sub
xlat
clc
pop
fidivr
pop
xor
jmp
pop
mov
mov
(bad)
sbb
cmp
mov
jne
(bad)
bound
mov
inc
popf
out
imul
test
idiv
jecxz
add
dec
mov
jecxz
(bad)
xor
retf
inc
(bad)
int3
sub
xor
adc
and
pop
xor
push
xor
adc
jne
push
xor
add
pop
mov
pusha
cmp
and
dec
mov
push
xor
jo
dec
mov
pop
xor
fwait
out
mov
pop
xor
mov
loopne
int
loop
mov
out
mov
fcomp
bound
mov
test
lods
inc
loopne
mov
loopne
lds
iret
mov
dec
int
pop
loop
mov
cli
ds
mov
call
inc
loopne
sbb
jbe
clc
pop
fiadd
jns
pop
ret
cmp
iret
mov
xor
pushf
inc
loopne
retf
push
sbb
mov
mov
mov
loopne
cwde
int3
add
mov
call
mov
loopne
arpl
iret
mov
es
mov
ret
cmp
iret
mov
xor
nop
inc
loopne
sbb
call
ins
loop
mov
jne
and
pop
xor
xor
sbb
(bad)
mov
mov
stos
jo
sbb
or
xchg
cmc
retf
pushf
jnp
or
stos
jo
mov
ja
or
loopne
enter
or
sbb
dec
inc
sub
sti
pop
ficom
pop
loopne
adc
xor
popa
inc
xchg
cmc
jmp
sbb
cmp
xor
mov
push
aaa
xor
xlat
clc
pop
or
int3
pop
fisubr
inc
call
iret
mov
xchg
cmc
mov
xor
sar
mov
sahf
cmc
or
mov
imul
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
imul
mov
adc
and
stos
ds
mov
loopne
jae
arpl
jae
mov
cmp
sub
and
mov
inc
push
mov
shl
int
mov
outs
ds
mov
pop
xor
sbb
iret
mov
pop
mov
gs
mov
xchg
mov
inc
loopne
sbb
ds
mov
loopne
mov
xor
add
mov
loop
mov
dec
int
push
xor
sar
dec
mov
loopne
dec
int3
aas
pop
dec
rcr
pop
sbb
xor
mov
pop
int
push
xor
cli
cmp
imul
dec
mov
loope
mov
call
dec
loop
mov
lahf
(bad)
pop
xor
call
mov
loop
mov
dec
int
cmp
jb
dec
mov
loopne
retf
jno
jb
test
xor
retf
add
rol
or
loopne
sbb
mov
inc
test
int
mov
jne
and
pop
(bad)
mov
xor
mov
pop
fistp
ret
dec
dec
clc
mov
mov
fdivr
mov
xchg
mov
inc
loopne
sbb
xor
or
loopne
sbb
ds
mov
loopne
dec
mov
loopne
sbb
cs
pop
ficomp
add
int3
mov
pop
inc
push
rcl
jmp
adc
cs
pop
fisub
pop
sbb
dec
xor
iret
mov
loopne
add
je
pop
inc
mov
out
cmp
jne
and
pop
pop
dec
push
push
cmp
loopne
push
sub
xor
push
mov
dec
mov
loopne
dec
push
and
mov
xchg
mov
inc
loope
mov
das
dec
dec
test
dec
push
sar
in
mov
push
xor
sub
(bad)
pop
fidivr
mov
xor
cmp
xor
cmp
int3
mov
and
cmp
sahf
lds
mov
loop
mov
dec
mov
mov
ja
nop
sti
pop
mov
mov
test
test
pop
mov
mov
loopne
enter
mov
cmp
xor
mov
pop
pop
dec
push
dec
cmp
loopne
enter
mov
push
call
mov
inc
loopne
sbb
ret
mov
loopne
and
ret
mov
loopne
mov
cmp
and
inc
pop
xor
call
mov
lods
or
pop
mov
inc
loope
mov
push
and
enter
pop
fisub
mov
lods
or
pop
fcmovnu
mov
fst
dec
mov
loopne
sbb
ret
mov
loopne
and
enter
call
or
and
inc
pop
xor
call
mov
lods
or
pop
mov
inc
loope
mov
push
and
enter
pop
fcmove
mov
xor
mov
pop
(bad)
pop
xor
xor
int3
mov
pushf
cli
mov
lahf
push
dec
mov
sbb
push
shl
in
mov
pop
xor
sub
xlat
clc
pop
fidiv
inc
sbb
leave
mov
loopne
mov
inc
loope
mov
fwait
aaa
mov
loopne
je
arpl
je
popa
adc
mov
enter
pop
ficomp
pop
xor
mov
pop
fcomi
mov
in
mov
push
mov
mov
sbb
icebp
cmp
retf
mov
int
loope
mov
xchg
mov
inc
loopne
sbb
xor
or
loopne
sbb
cmp
pushf
neg
loopne
dec
mov
loopne
sbb
adc
clc
pop
fisub
pop
xor
add
int3
mov
pop
inc
push
ror
in
mov
sbb
dec
inc
sub
xlat
clc
pop
fimul
mov
sbb
enter
xor
inc
loope
mov
fwait
aaa
mov
loopne
je
arpl
je
popa
adc
mov
leave
jo
rcr
ficom
mov
aas
lods
or
pop
fisttp
pop
xor
cmp
int3
mov
push
mov
mov
xlat
int
cmp
xor
out
(bad)
sub
int3
mov
lock
sahf
fnstsw
test
xor
cmp
int3
mov
dec
mov
mov
ja
nop
sti
pop
mov
mov
test
mov
pop
lds
inc
loopne
int
loop
mov
fcomp
rcr
pop
dec
rcr
pop
dec
rcr
xor
ja
xlat
clc
pop
fcmove
mov
out
int3
mov
jne
and
out
int3
mov
mul
jne
stos
jo
mov
das
stos
or
lahf
push
dec
mov
jne
lds
iret
mov
dec
popa
and
stos
ret
loopne
(bad)
mov
xchg
mov
inc
loopne
sbb
sbb
xor
inc
neg
lds
int
cmp
int
cmp
xor
out
dec
xor
fidiv
xor
ret
mov
loopne
mov
out
int3
mov
div
dec
xor
fidiv
mov
pop
int
dec
loope
mov
jp
dec
mov
loopne
mov
inc
sub
clc
pop
(bad)
mov
jne
and
ja
dec
mov
pop
xor
xor
mov
(bad)
rcr
int
dec
loope
mov
mov
dec
mov
pop
xor
jno
jb
test
xor
mov
loopne
sbb
ja
jmp
int
push
repnz
mov
repz
mov
dec
pop
dec
shl
in
mov
loopne
mov
xor
add
dec
loope
mov
jp
dec
mov
pop
xor
pop
xor
mov
stos
jo
shl
or
pop
pop
dec
mov
xchg
int
cmp
sub
mov
pop
xor
xor
add
inc
push
mov
bswap
cmp
push
cli
aaa
dec
mov
frstor
dec
in
xchg
xlat
retf
push
adc
out
xchg
inc
inc
push
fistp
jmp
retf
xchg
cmc
ret
cld
adc
dec
mov
into
xor
pushf
dec
pop
mov
mov
mov
fwait
xchg
or
imul
dec
mov
pop
xor
sub
aad
pop
inc
inc
inc
sub
iret
mov
lahf
xchg
or
xor
dec
mov
xor
adc
jge
mov
push
jle
dec
mov
pop
xor
es
xor
xor
lds
jle
pop
pusha
es
xor
es
xor
sub
xlat
clc
pop
inc
pop
cmp
inc
cld
sti
pop
xor
and
xor
sub
xlat
clc
pop
inc
push
and
sti
pop
xor
sbb
mov
push
adc
mov
xor
add
clc
pop
inc
dec
xor
adc
stc
pop
or
mov
mov
dec
xor
sbb
xchg
xor
sbb
dec
sub
(bad)
pop
inc
dec
xor
xor
stc
pop
or
xor
sbb
dec
sub
xlat
clc
pop
inc
dec
xor
push
sar
pop
or
mov
mov
dec
mov
inc
pop
inc
push
mov
bswap
cmp
iret
sbb
dec
push
sbb
(bad)
out
imul
mov
jo
sub
int
mov
jo
sub
int
test
(bad)
xor
pop
int
lods
in
jo
sub
int
cdq
in
jo
sub
int
xchg
in
jo
sub
int
mov
jo
sub
int
(bad)
in
jo
sub
rcr
mov
xor
mov
fwait
push
and
mul
mov
xchg
ja
mov
inc
popa
xor
jne
mov
imul
movs
pop
cmp
cmp
pushf
retf
in
(bad)
adc
cmp
adc
jne
mov
rcr
and
loopne
pop
jo
imul
pop
and
xor
pop
mov
and
pop
mov
(bad)
dec
mov
pop
add
inc
cwde
enter
jmp
lock
or
pop
movs
ret
lds
ss
xor
dec
jnp
xor
pop
int
stc
in
jo
sub
int
std
in
jo
sub
int
icebp
in
jo
sub
int
cmc
in
jo
sub
int
jmp
(bad)
xor
pop
int
in
in
jo
sub
int
loope
jo
sub
int
in
jo
sub
int
fldlg2
jo
sub
int
fucomp
jo
sub
int
shr
jo
sub
int
aad
jo
sub
int
leave
in
jo
sub
int
int
jo
sub
int
shr
dec
sub
int
(bad)
dec
sub
int
cmp
jo
sub
int
cmp
(bad)
xor
pop
int
xor
jo
sub
int
xor
(bad)
xor
pop
int
sub
jo
sub
int
sub
(bad)
xor
pop
int
and
jo
sub
int
and
(bad)
xor
pop
int
sbb
jo
sub
int
sbb
(bad)
xor
pop
int
adc
jo
sub
int
adc
(bad)
xor
pop
int
or
jo
sub
int
or
(bad)
xor
pop
int
add
jo
sub
int
add
(bad)
xor
pop
int
jns
jo
sub
int
jge
jo
sub
int
jno
jo
sub
int
jne
jo
sub
int
imul
xor
pop
int
ins
in
jo
sub
int
popa
in
jo
sub
int
gs
jo
sub
int
pop
in
jo
sub
int
pop
in
jo
sub
int
push
in
jo
sub
int
push
in
jo
sub
int
inc
in
jo
sub
int
inc
in
jo
sub
int
mov
(bad)
xor
pop
int
mov
(bad)
xor
pop
int
mov
jo
sub
int
mov
jo
sub
int
test
(bad)
xor
pop
int
lods
jmp
dec
sub
int
mov
(bad)
xor
pop
int
movs
jmp
dec
sub
int
cdq
jmp
dec
sub
int
popf
jmp
dec
sub
int
xchg
jmp
dec
sub
int
xchg
jmp
dec
sub
int
mov
jo
sub
int
(bad)
jmp
dec
sub
int
sub
xor
pop
int
test
jo
sub
int
stc
jmp
dec
sub
int
std
jmp
dec
sub
int
icebp
jmp
dec
sub
int
cmc
jmp
dec
sub
int
jmp
(bad)
xor
pop
int
in
jmp
dec
sub
int
loope
jo
sub
int
in
jo
sub
int
fldpi
jo
sub
int
fucomp
jo
sub
int
leave
jmp
dec
sub
int
int
jo
sub
int
shr
dec
sub
int
vpshuflw
xor
pop
int
cmp
jo
sub
int
xor
(bad)
xor
pop
int
sub
jo
sub
int
sub
(bad)
xor
pop
int
and
jo
sub
int
and
(bad)
xor
pop
int
sbb
jo
sub
int
sbb
(bad)
xor
pop
int
adc
jo
sub
int
adc
(bad)
xor
pop
int
add
jo
sub
int
add
(bad)
xor
pop
int
jns
jo
sub
int
jge
jo
sub
int
jno
jo
sub
int
jne
jo
sub
int
imul
xor
pop
int
ins
jmp
dec
sub
int
popa
jmp
dec
sub
int
gs
dec
sub
int
pop
jmp
dec
sub
int
pop
jmp
dec
sub
int
push
jmp
dec
sub
int
push
jmp
dec
sub
int
dec
jmp
dec
sub
int
dec
jmp
dec
sub
int
inc
jmp
dec
sub
int
inc
jmp
dec
sub
