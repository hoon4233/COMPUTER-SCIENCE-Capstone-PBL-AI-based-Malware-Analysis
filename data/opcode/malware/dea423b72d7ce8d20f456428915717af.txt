rcl
mov
push
call
xadd
mov
shld
mov
not
push
call
call
mov
ret
nop
nop
push
mov
sub
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
btr
mov
mov
ror
mov
test
jns
neg
mov
xadd
test
jbe
mov
call
push
call
test
jge
mov
mov
mov
neg
mov
push
call
ret
nop
nop
nop
nop
nop
nop
nop
call
push
push
push
push
call
call
call
bsr
sar
mov
imul
push
push
push
call
ror
add
mov
neg
mov
not
rol
movzx
mov
lea
movzx
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
call
and
call
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
call
push
push
push
call
push
call
push
call
ret
nop
nop
push
mov
add
push
push
call
push
push
push
push
call
call
mov
xadd
mov
not
mov
push
call
mov
shl
mov
mul
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
xor
mov
cmp
jbe
push
call
movzx
mov
mov
mov
call
call
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
push
push
call
mov
mov
mov
test
jo
mov
movsx
call
call
ret
nop
nop
nop
nop
nop
nop
and
call
ret
nop
nop
nop
mov
call
push
push
call
push
call
push
push
call
call
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
call
shrd
mov
shr
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
call
xor
mov
shl
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
call
shrd
mov
cmp
jl
mov
shl
data16
call
mov
mov
mov
bsf
mov
push
call
call
shld
or
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
neg
mov
call
push
push
call
push
push
push
push
call
btr
shl
not
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
mov
or
lea
shl
bsf
mov
sar
rcl
mov
mov
test
leave
ret
nop
call
push
push
push
push
call
mov
bt
mov
push
push
push
push
call
push
push
push
call
test
jp
push
call
mov
call
ret
nop
nop
push
push
push
push
call
or
mov
add
bswap
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
cmp
js
push
call
call
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
call
push
push
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
call
call
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
ror
cmp
jo
xchg
call
mov
push
call
movsx
mov
push
push
push
call
call
cmp
jle
lea
mov
mov
call
push
call
call
ret
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
push
push
call
test
jns
shl
call
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
call
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
ret
nop
nop
nop
nop
nop
mov
or
mov
push
push
push
push
call
push
push
push
push
call
ror
mov
call
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
call
push
push
push
push
call
push
call
call
call
push
push
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
push
call
lea
call
push
call
mov
xor
bswap
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
call
bswap
add
mov
cmp
rcl
mov
mov
call
shr
shld
mov
sub
bt
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
rol
mov
push
push
push
call
push
push
push
push
call
rcr
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
xor
bsf
push
push
push
call
and
inc
rcl
mov
not
rcr
push
call
push
call
mov
neg
mov
bswap
mov
bsf
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
call
call
push
call
push
push
push
push
call
call
call
push
call
push
call
call
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
ror
shl
mov
test
mov
mov
ror
mov
call
push
call
push
push
push
call
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
call
push
call
push
call
mov
bswap
mov
ret
nop
nop
nop
nop
nop
push
mov
add
push
call
push
call
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
dec
mov
cmp
jge
call
btr
mov
push
call
mov
mov
mov
cmp
jl
call
push
push
call
call
shl
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
call
push
call
cmp
jp
mov
call
inc
test
jns
bswap
call
ret
nop
nop
nop
nop
nop
call
call
push
call
call
call
push
call
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcr
shrd
mov
mov
mov
sub
call
mov
mov
mov
call
call
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
not
mov
movsx
mov
not
rcl
mov
call
xadd
push
call
push
push
push
push
call
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jle
rcl
neg
push
push
push
call
push
push
push
push
call
call
mov
mov
call
mov
shrd
mov
push
push
call
call
ret
nop
nop
nop
nop
call
mov
test
jbe
push
call
cmp
je
shl
push
call
push
call
mov
inc
mov
mov
neg
push
push
push
call
ret
nop
push
mov
add
call
push
push
push
call
push
call
mov
btr
test
jle
rcl
push
call
mov
push
push
push
push
call
call
mov
imul
xadd
not
leave
ret
nop
nop
nop
nop
nop
nop
push
call
mov
mov
mov
shl
dec
ret
nop
nop
nop
nop
nop
nop
push
mov
add
call
test
jbe
mov
ror
push
push
call
mov
mov
pop
ret
nop
nop
shl
not
push
call
mov
mov
mov
push
push
call
push
call
movzx
mov
sub
mov
push
call
call
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
push
call
push
call
call
sub
rcl
mov
not
mov
shl
mov
xchg
rcl
ret
nop
call
mov
sub
mov
call
push
push
call
call
push
call
push
push
push
push
call
call
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
call
call
call
test
je
push
call
push
push
push
push
call
push
call
rcr
add
movzx
call
call
leave
ret
nop
nop
call
call
call
call
mov
rcl
mov
dec
call
call
call
mov
lea
ret
call
push
push
call
call
mov
xadd
push
call
push
call
ret
nop
nop
nop
nop
cmp
jo
mov
mov
mov
shr
call
mov
xadd
mov
test
shl
ror
call
push
push
call
push
push
call
ret
nop
nop
nop
push
mov
sub
call
push
call
mov
leave
ret
nop
nop
nop
nop
call
call
bswap
mov
shld
not
push
push
push
call
call
call
ret
push
mov
sub
call
mov
mov
mov
shl
mov
mov
or
call
push
call
mov
call
push
push
call
push
push
push
call
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
neg
shl
mov
mov
mov
bsf
mov
shr
mov
xchg
push
push
call
push
call
ret
nop
push
mov
add
mov
test
je
mov
shl
mov
ror
add
movzx
shl
mov
mov
mov
call
call
call
add
movzx
mov
mov
pop
ret
nop
ror
mov
neg
cmp
jl
mov
push
call
push
push
call
movzx
cmp
jo
shld
bt
bsr
mov
push
call
ret
nop
nop
nop
push
mov
add
push
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
push
call
test
jo
push
call
push
call
push
call
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
call
mov
pop
ret
nop
nop
nop
call
xadd
test
jae
call
mov
shr
btc
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
call
leave
ret
nop
nop
nop
push
mov
sub
push
call
imul
call
mov
cmp
jae
add
push
call
call
call
leave
ret
nop
nop
nop
call
call
btr
shl
call
push
push
push
call
call
mov
add
push
call
ret
nop
nop
nop
nop
nop
nop
push
push
call
call
call
call
call
push
push
push
push
call
push
push
push
push
call
call
bsf
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
neg
and
call
call
call
call
push
call
mov
push
call
xchg
ret
call
push
push
call
cmp
jne
mov
mov
mov
mov
push
call
call
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
ror
rol
mov
bswap
sub
mov
call
push
call
call
push
call
ret
push
mov
add
push
push
push
call
test
jae
shl
push
push
push
call
mov
push
push
push
call
call
neg
mov
call
leave
ret
nop
push
mov
add
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
shld
imul
mov
bsr
mov
test
ja
mov
call
bswap
ror
test
jg
push
call
mov
push
call
call
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
call
push
call
cmp
jle
mov
cmp
jg
call
ror
call
xadd
mov
bt
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
mov
btr
mov
sar
call
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
push
call
push
call
cmp
jp
push
call
mov
mov
sub
mov
mov
lea
add
call
call
push
call
push
push
push
push
call
leave
ret
nop
nop
nop
push
call
mov
shr
shr
cmp
ja
mov
bsf
mov
call
push
call
push
push
push
call
sub
mov
xchg
mov
sar
ret
nop
mov
bsr
mov
ror
cmp
jno
call
call
call
call
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movzx
mov
push
call
shl
mov
cmp
jle
call
mov
call
and
mov
mov
cmp
jne
bswap
and
mov
push
push
push
call
shl
movzx
or
call
leave
ret
nop
nop
nop
nop
shrd
movsx
mov
push
push
push
push
call
push
call
call
call
call
push
push
push
call
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
mov
movsx
mov
xchg
bswap
push
call
bsf
shrd
mov
shl
mov
call
push
push
call
push
push
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
shld
add
mov
call
push
call
call
call
test
jp
sar
mov
test
jle
push
call
mov
test
jg
push
push
push
call
mov
test
jge
call
call
inc
xchg
test
jg
and
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
add
test
jg
call
call
push
push
push
call
call
mov
pop
ret
nop
nop
nop
nop
push
mov
add
call
add
mov
call
push
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
call
call
test
jl
inc
mov
mov
pop
ret
push
call
imul
mov
call
push
push
push
call
xor
mov
call
push
push
call
ret
nop
nop
nop
nop
push
push
push
call
ret
nop
nop
push
mov
sub
push
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
call
neg
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
add
call
leave
ret
nop
call
call
mov
xadd
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
call
push
call
push
call
call
call
leave
ret
nop
nop
push
mov
add
push
call
call
push
call
call
call
leave
ret
nop
nop
nop
nop
nop
push
mov
add
push
call
mov
mov
mov
call
push
call
call
and
test
jp
mov
mov
mov
shr
add
mov
pop
ret
push
mov
add
push
push
push
push
call
push
push
push
call
call
push
push
push
call
push
call
push
call
push
push
call
test
ja
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
call
shld
xor
call
mov
not
rcr
mov
xchg
push
push
push
push
call
shr
call
mov
pop
ret
nop
nop
nop
call
call
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
call
push
call
add
mov
mov
sub
add
call
call
call
call
inc
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
add
call
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
push
call
shr
mov
mov
mov
shl
push
call
call
call
call
call
lea
xor
test
jno
call
call
mov
ret
nop
push
mov
add
call
sar
leave
ret
push
mov
sub
shld
mov
movsx
sub
push
push
push
push
call
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pusha
shrd
mov
push
push
push
call
sar
popa
mov
pusha
push
call
cmp
jle
neg
push
call
push
push
push
call
call
xadd
call
push
call
popa
pusha
call
mov
cmp
js
push
call
call
xchg
mov
shr
mov
cmp
jb
push
call
bsr
mov
call
test
jp
push
call
ror
mov
mov
mov
mov
popa
push
pusha
xor
push
call
call
popa
xor
pusha
ror
mov
ror
cmp
jne
mov
push
call
push
call
xchg
cmp
je
not
popa
pop
pusha
push
call
dec
shr
push
push
push
call
mov
mov
mov
add
call
call
mov
and
shr
mov
add
mov
cmp
jno
bswap
mov
xadd
mov
inc
popa
add
pusha
or
mov
cmp
jo
shld
shrd
call
mov
sar
add
mov
push
call
test
jo
call
shl
xchg
mov
xchg
mov
and
mov
mov
push
call
popa
cmp
jl
pusha
call
xadd
mov
popa
ret
call
sub
leave
and
push
mov
and
shld
cmp
js
push
call
mov
shr
shl
shl
mov
not
mov
or
cmp
jo
bt
xor
xadd
push
push
mov
mov
mov
mov
bts
xor
push
push
rol
inc
cmp
jp
shrd
mov
pop
push
call
call
xchg
mov
mov
push
rep
movsx
pop
pusha
mov
ror
mov
shrd
mov
btr
sar
popa
pusha
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
call
call
mov
or
mov
call
call
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
call
call
call
push
push
push
push
call
test
xchg
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
call
cmp
neg
mov
push
call
call
call
xchg
mov
mov
test
jb
shl
call
call
call
mov
pop
ret
push
mov
sub
push
call
shld
shrd
mov
call
push
call
push
call
xor
rol
push
push
call
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
add
call
mov
pop
ret
nop
call
call
call
call
push
call
call
push
call
push
call
ret
nop
nop
nop
nop
nop
nop
call
call
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
neg
mov
mov
sar
shl
imul
mov
lea
shld
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sar
mov
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
test
call
push
push
push
push
call
push
push
push
push
call
mov
push
push
push
call
call
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
bswap
push
call
ret
nop
push
mov
add
push
call
push
call
push
push
push
push
call
mov
bswap
mov
call
call
shl
push
push
push
push
call
leave
ret
nop
nop
nop
push
mov
sub
call
call
push
push
push
push
call
call
push
call
mov
shl
shld
push
call
push
push
push
call
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
mov
xor
mov
call
inc
mov
push
call
call
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
xadd
mov
bts
mov
mov
mov
cmp
push
call
push
call
movsx
mov
call
call
mov
shrd
mov
bsf
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
call
push
call
bsf
mov
rcr
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
test
jle
call
shl
mov
rcr
imul
push
call
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ror
not
movsx
mov
call
mov
xadd
call
push
push
call
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
call
push
push
call
push
call
mov
test
jne
ror
mov
push
call
mov
and
bsr
mov
call
push
call
or
mov
not
bswap
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
jbe
push
call
mov
call
neg
mov
mov
mov
dec
mov
mov
cmp
jae
not
call
push
push
push
call
call
mov
movsx
mov
ror
shr
mov
bsf
ror
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
push
push
push
push
call
call
ret
nop
nop
nop
call
push
call
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
call
cmp
jl
call
rcl
mul
inc
shl
mov
push
push
call
call
push
call
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
bsr
push
push
push
call
call
push
call
push
call
mov
ror
mov
mov
call
push
call
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
call
imul
mov
imul
mov
call
push
push
push
call
call
push
call
push
call
call
bswap
test
ja
mov
push
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
call
call
push
push
call
lea
mov
call
ror
ret
mov
push
push
push
call
ror
cmp
jno
push
call
push
call
mov
dec
mov
call
rol
call
test
jns
call
call
call
ret
nop
nop
nop
push
push
call
push
push
call
mov
test
jbe
mov
test
jo
mov
push
push
push
call
mov
inc
test
js
mov
add
push
call
call
shl
mov
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
shl
not
mov
push
push
push
push
call
call
call
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
test
jbe
lea
call
test
jns
mov
call
mov
not
xadd
push
push
push
call
push
call
push
call
call
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
call
mov
mov
cmp
je
push
call
call
call
mov
xadd
mov
push
push
call
push
call
add
mov
test
jp
call
mov
bsr
call
push
call
mov
pop
ret
nop
nop
nop
nop
push
mov
add
call
call
push
push
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
call
push
push
push
call
ret
nop
nop
nop
push
call
call
call
mov
dec
neg
push
call
call
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
rcr
mov
mov
rcr
mov
mov
bsf
mov
or
push
push
push
call
call
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
push
mov
add
mov
push
call
push
push
push
call
call
test
jle
mov
mov
push
push
call
mov
rol
mov
cmp
jno
push
push
push
call
call
call
leave
ret
nop
nop
nop
nop
nop
nop
sar
mov
mov
shrd
push
call
push
push
call
call
mov
cmp
jne
lea
and
rol
ror
bsf
mov
push
call
ret
nop
nop
nop
push
call
lea
shl
test
jns
mov
call
push
call
call
cmp
jbe
xchg
mov
or
movsx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
call
mov
or
mov
mov
shl
call
push
call
push
push
push
push
call
xchg
mov
mov
test
js
call
push
call
call
leave
ret
push
mov
add
call
call
push
call
push
call
test
jnp
call
call
shld
mov
pop
ret
nop
nop
nop
nop
nop
push
push
push
call
push
push
push
call
call
call
call
cmp
jl
push
call
mov
test
shld
rcr
mov
call
call
call
ret
nop
nop
nop
nop
nop
nop
nop
push
push
call
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
rcr
mov
push
call
push
push
push
call
mov
add
mov
cmp
cmp
js
call
mov
xchg
mov
push
push
push
call
push
call
mov
pop
ret
nop
nop
nop
nop
push
push
call
call
shl
mov
cmp
jnp
mov
cmp
jne
shrd
mov
push
call
push
call
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
bsf
mov
test
jl
shr
push
call
and
btc
leave
ret
nop
push
call
ret
nop
nop
nop
push
mov
sub
call
push
call
mov
bswap
mov
mov
or
mov
call
push
push
push
call
lea
test
jp
push
push
push
call
mov
add
mov
shl
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
mov
mov
push
call
push
push
push
call
push
call
mov
pop
ret
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
push
call
call
leave
ret
nop
nop
nop
nop
nop
nop
btc
mov
bswap
shr
shrd
call
call
call
call
call
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
call
push
push
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
call
call
push
call
push
call
call
ret
nop
nop
nop
push
mov
add
cmp
jl
call
mov
mov
shl
cmp
jge
dec
btr
mov
sar
push
call
btr
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
call
ret
nop
nop
nop
nop
nop
call
and
mov
test
jle
call
shr
mov
mov
lea
rcr
push
call
push
call
call
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
je
call
sar
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
mov
mov
bsf
movsx
mov
call
push
call
push
call
dec
bt
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
call
call
call
push
call
call
call
call
call
call
push
push
push
call
leave
ret
nop
nop
nop
nop
push
mov
add
push
push
push
push
call
call
push
call
mov
push
call
push
call
push
push
call
call
leave
ret
nop
nop
nop
nop
bswap
mov
mov
call
cmp
jge
call
rcr
mov
and
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
call
push
push
call
xadd
mov
push
push
call
push
push
call
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
push
call
call
push
call
lea
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
shrd
mov
call
push
call
push
push
call
bswap
ret
nop
nop
nop
nop
nop
push
push
push
push
call
call
push
call
call
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
call
push
call
call
call
push
call
call
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
call
call
push
push
push
call
call
push
call
call
push
call
call
mov
pop
ret
nop
nop
nop
push
mov
add
mov
mov
mov
shl
mov
call
call
push
push
push
push
call
call
test
jns
push
call
test
jno
bswap
mov
bswap
bsr
mov
push
call
push
push
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
call
push
call
mov
mov
leave
ret
nop
nop
mov
bswap
shrd
mov
push
call
call
rcl
mov
call
push
push
push
push
call
call
push
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
call
push
call
call
push
push
push
call
push
push
push
call
call
call
push
call
call
call
mov
pop
ret
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
bswap
mov
call
call
mov
mov
xor
call
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
call
ret
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
call
leave
ret
nop
nop
nop
push
mov
sub
call
xadd
add
sub
btc
mov
call
push
call
call
call
leave
ret
nop
nop
nop
nop
call
push
push
push
call
push
push
push
call
push
push
push
call
push
call
call
push
call
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
movzx
shl
test
jl
mov
shl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
je
call
shl
lea
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
sar
mov
sar
add
test
jle
mov
push
push
push
push
call
push
call
push
call
leave
ret
nop
nop
push
mov
sub
call
call
push
call
mov
push
push
push
push
call
call
mov
push
call
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
call
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
movzx
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
call
push
call
push
call
mov
mov
mov
call
call
call
neg
call
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
movzx
mov
movzx
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
test
jns
call
test
jno
neg
call
call
call
call
push
call
call
ret
nop
nop
push
mov
sub
push
push
push
push
call
call
push
call
call
bt
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
push
push
push
call
bsf
rcl
mov
mov
push
push
push
push
call
rcr
movzx
mov
test
js
push
push
push
call
call
rcl
neg
call
call
rol
call
mov
pop
ret
push
mov
sub
not
mov
rcr
mov
push
call
push
push
push
call
push
push
push
call
mov
neg
call
call
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
test
js
push
call
rcl
cmp
js
mov
ror
mov
cmp
jb
rcr
call
push
push
push
push
call
call
call
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
mul
mov
test
jns
call
push
call
call
push
call
push
call
mov
pop
ret
push
call
push
call
call
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
push
call
ret
push
mov
add
cmp
jae
push
mov
pop
shr
add
push
ret
push
call
mov
add
mov
push
mov
pop
shr
lea
push
ret
push
push
push
call
rcl
mov
push
call
mov
add
mov
push
mov
shr
add
pop
jmp
push
push
push
push
call
and
mov
mov
mov
mov
mov
add
mov
push
mov
pop
shr
lea
push
ret
push
push
call
lea
mov
mov
add
mov
push
mov
shr
add
pop
jmp
call
rol
neg
push
call
mov
add
mov
push
mov
pop
shr
lea
push
ret
call
mov
test
jne
or
xor
push
push
push
call
mov
add
mov
push
mov
pop
shr
lea
push
ret
push
push
call
rcr
mov
bswap
push
call
mov
add
mov
push
mov
pop
shr
lea
jmp
call
mov
btr
mov
mov
add
mov
push
mov
pop
shr
add
jmp
call
shl
shl
not
call
mov
add
mov
push
mov
pop
shr
add
jmp
push
push
push
push
call
rcl
ror
call
mov
add
mov
push
mov
shr
add
ret
call
sub
mov
mov
call
mov
add
mov
push
mov
pop
shr
lea
jmp
call
test
je
mov
mov
push
mov
shr
add
pop
jmp
push
push
push
push
call
rol
bsr
and
mov
push
call
push
mov
shr
add
ret
call
mov
mov
btr
sub
push
call
push
mov
shr
add
pop
jmp
push
push
push
call
xchg
xor
mov
rcr
call
push
mov
shr
add
ret
push
push
call
inc
test
jb
mov
shr
rcr
mov
push
call
push
mov
pop
shr
add
jmp
push
push
push
push
call
mov
mov
mov
call
push
mov
shr
add
ret
push
call
mov
sub
push
mov
pop
shr
lea
push
ret
push
push
push
call
rcl
movzx
or
call
push
mov
pop
shr
lea
push
ret
push
push
push
push
call
mov
xchg
mov
mov
xchg
push
mov
pop
shr
add
jmp
push
push
push
call
lea
mov
lea
mov
push
mov
pop
shr
add
jmp
push
call
cmp
jl
push
call
xor
shld
mov
push
call
push
mov
pop
shr
lea
push
ret
push
push
push
push
call
mov
test
jo
bswap
mov
cmp
ja
movzx
inc
push
mov
shr
add
ret
push
call
neg
mov
push
call
push
mov
shr
add
ret
call
btr
shrd
rcr
xor
push
mov
pop
shr
add
push
ret
call
mov
movzx
push
mov
pop
shr
add
push
ret
push
push
call
not
shrd
push
mov
pop
shr
lea
push
ret
push
call
mov
push
call
push
mov
pop
shr
lea
jmp
push
push
call
shr
rcl
push
mov
shr
add
pop
jmp
call
movzx
push
mov
pop
shr
lea
jmp
push
push
push
push
call
bswap
bsr
shld
mov
push
mov
pop
shr
add
jmp
call
mov
or
bsf
lea
call
push
mov
pop
shr
lea
push
ret
push
call
xchg
mov
push
mov
pop
shr
lea
jmp
call
movsx
sar
push
call
push
mov
shr
add
pop
jmp
call
shld
call
push
mov
shr
add
ret
call
mov
bsf
push
call
push
mov
pop
shr
lea
push
ret
push
call
mov
shr
mov
push
call
push
mov
pop
shr
lea
jmp
push
push
push
push
call
shld
push
mov
pop
shr
add
push
ret
call
mov
rcr
test
jae
xadd
mov
push
mov
pop
shr
lea
jmp
call
neg
mov
rol
push
mov
shr
add
pop
jmp
push
push
push
call
neg
xchg
mov
shl
call
push
mov
pop
shr
add
jmp
push
call
movsx
mov
bsr
mov
push
mov
pop
shr
lea
jmp
push
call
neg
push
mov
shr
add
pop
jmp
push
push
call
mov
mov
shl
mov
bswap
not
push
push
push
call
push
mov
shr
add
pop
jmp
call
mov
xchg
cmp
jb
push
call
mov
shl
call
push
mov
shr
add
ret
push
call
rcl
mov
call
push
mov
pop
shr
add
push
ret
call
or
shr
mov
call
push
mov
pop
shr
add
jmp
call
mov
not
shl
mov
rcl
push
mov
pop
shr
lea
push
ret
call
mov
push
mov
shr
add
pop
jmp
push
push
call
lea
sar
cmp
jae
mov
sar
call
push
mov
shr
add
pop
jmp
call
shld
test
je
mov
push
push
push
call
lea
call
push
mov
shr
add
ret
push
push
call
mov
rol
mov
add
test
ja
call
push
mov
pop
shr
lea
jmp
call
mov
test
je
shl
mov
push
mov
pop
shr
add
push
ret
call
bsr
bt
call
push
mov
pop
shr
lea
jmp
call
mov
push
call
push
mov
pop
shr
lea
push
ret
call
mov
mov
cmp
js
call
shrd
push
mov
shr
add
ret
call
mov
call
push
mov
pop
shr
add
jmp
call
not
xor
mov
push
call
push
mov
shr
add
pop
jmp
push
push
push
call
movzx
push
push
push
call
push
mov
shr
add
ret
call
bswap
mov
mov
push
mov
pop
shr
add
jmp
call
cmp
jb
xor
test
jle
push
push
push
call
call
push
mov
shr
add
ret
push
push
push
call
not
mov
rcr
test
je
push
call
push
call
push
mov
pop
shr
lea
push
ret
push
call
mov
bswap
not
mov
push
mov
shr
add
ret
push
push
push
call
mov
call
push
mov
shr
add
pop
jmp
push
push
push
push
call
imul
mov
call
push
mov
pop
shr
add
jmp
call
movsx
mov
btc
mov
push
mov
pop
shr
add
jmp
push
push
push
call
neg
mov
push
call
push
mov
shr
add
pop
jmp
call
bsf
and
mov
not
mov
btc
push
mov
shr
add
pop
jmp
push
call
mov
mov
mov
push
mov
shr
add
ret
call
mov
mov
bsr
cmp
jo
mov
call
push
mov
pop
shr
lea
jmp
call
bsr
rcl
not
mov
call
push
mov
pop
shr
add
push
ret
call
shl
mov
mov
call
push
mov
pop
shr
add
jmp
call
mov
rcl
test
jne
mov
ror
mov
mov
bswap
push
call
push
mov
pop
shr
lea
push
ret
push
call
mov
mov
push
mov
shr
add
ret
call
bsr
mov
push
call
push
mov
pop
shr
add
jmp
call
mul
mov
push
call
push
mov
shr
add
pop
jmp
call
bts
mov
shrd
mov
call
push
mov
shr
add
pop
jmp
push
push
push
push
call
mov
shl
mov
push
mov
pop
shr
lea
jmp
push
push
call
mov
mov
call
push
mov
shr
add
pop
jmp
push
call
rcr
or
mov
bswap
btc
mov
push
call
push
mov
pop
shr
lea
push
ret
call
mov
add
rol
call
push
mov
shr
add
pop
jmp
push
push
push
call
mov
lea
mov
push
mov
shr
add
ret
call
movzx
dec
push
call
push
mov
pop
shr
lea
jmp
push
push
push
call
mov
call
push
mov
pop
shr
add
jmp
call
dec
mov
push
mov
pop
shr
lea
jmp
call
shld
shl
push
mov
pop
shr
lea
jmp
push
push
push
call
neg
mov
mov
mov
push
call
push
mov
pop
shr
lea
jmp
push
push
push
call
push
mov
pop
shr
lea
jmp
call
xchg
mov
mov
push
mov
pop
shr
add
push
ret
call
xor
rol
not
push
mov
pop
shr
add
push
ret
call
mov
mov
push
mov
pop
shr
lea
jmp
push
call
mov
push
mov
shr
add
ret
call
shl
movzx
push
call
push
mov
shr
add
ret
push
call
shld
mov
push
call
push
mov
pop
shr
lea
jmp
call
imul
mov
cmp
jg
push
call
push
mov
pop
shr
lea
push
ret
call
movzx
not
bt
sar
mov
push
call
push
mov
shr
add
ret
call
sub
push
mov
shr
add
ret
push
call
mov
xchg
ror
mov
call
push
mov
pop
shr
lea
push
ret
push
call
mov
push
call
push
mov
pop
shr
lea
jmp
push
call
mov
push
call
push
mov
pop
shr
add
jmp
call
or
mov
mov
call
push
mov
shr
add
ret
call
mov
imul
add
push
mov
shr
add
pop
jmp
call
shl
test
je
mov
mov
push
mov
pop
shr
lea
push
ret
call
neg
ror
shrd
xor
push
mov
shr
add
ret
jmp
push
push
push
call
btr
push
mov
shr
add
pop
jmp
call
xor
mov
push
call
push
mov
shr
add
pop
jmp
call
add
shrd
xor
cmp
jp
neg
bsr
mov
push
mov
shr
add
pop
jmp
push
push
call
xchg
push
call
push
mov
shr
add
pop
jmp
call
shr
mov
not
mov
mov
not
push
mov
shr
add
ret
call
shl
mov
push
mov
pop
shr
add
push
ret
call
add
mov
movzx
push
mov
shr
add
pop
jmp
push
push
push
call
mov
cmp
jle
and
push
mov
shr
add
pop
jmp
push
push
push
push
call
mov
mov
push
mov
shr
add
pop
jmp
push
push
push
push
call
mov
rcr
mov
movsx
call
push
mov
shr
add
pop
jmp
push
push
push
call
test
je
mov
sub
push
mov
shr
add
ret
call
mov
mov
push
mov
shr
add
ret
push
push
push
call
mov
btr
push
mov
pop
shr
lea
jmp
call
mov
bt
cmp
jge
mov
call
call
push
mov
pop
shr
add
push
ret
call
push
call
push
mov
shr
add
pop
jmp
call
shld
push
mov
shr
add
ret
push
push
push
call
mov
movzx
mov
call
push
mov
shr
add
pop
jmp
push
push
push
push
call
mov
sub
movzx
cmp
jo
dec
mov
push
mov
shr
add
ret
call
shr
bswap
sar
call
push
mov
pop
shr
lea
jmp
call
mov
cmp
jb
lea
bswap
movsx
cmp
jnp
and
push
mov
pop
shr
lea
jmp
push
call
sar
cmp
jno
shl
mov
test
jl
push
call
call
push
mov
shr
add
pop
jmp
push
push
push
call
neg
movzx
bsr
mov
mov
call
push
mov
pop
shr
lea
jmp
call
cmp
jg
xchg
mov
call
push
mov
pop
shr
add
jmp
push
call
push
call
push
mov
shr
add
pop
jmp
push
push
push
call
test
mov
mov
push
mov
pop
shr
lea
jmp
push
push
push
call
add
cmp
jbe
call
call
test
ja
mov
mov
mov
push
call
push
mov
pop
shr
add
jmp
push
push
call
call
push
mov
pop
shr
add
jmp
push
push
push
push
call
xchg
mov
sar
call
push
mov
shr
add
pop
jmp
push
push
call
mov
push
mov
shr
add
pop
jmp
call
cmp
je
btr
push
push
push
call
shld
mov
bt
test
jp
mov
mov
push
mov
pop
shr
add
jmp
push
push
push
push
call
mov
mov
push
mov
pop
shr
lea
jmp
push
push
call
cmp
jbe
push
call
mov
bswap
push
push
push
call
push
mov
shr
add
pop
jmp
call
mov
ror
xchg
add
push
mov
shr
add
pop
jmp
call
mov
rcl
mov
call
push
mov
pop
shr
add
push
ret
push
push
push
call
not
push
mov
pop
shr
add
push
ret
call
mov
ror
movsx
xor
push
call
push
mov
pop
shr
add
jmp
call
mov
imul
mov
mov
cmp
jno
xchg
push
call
xor
call
push
mov
shr
add
ret
call
cmp
jno
push
call
cmp
jb
call
mov
bswap
call
push
mov
pop
shr
add
push
ret
push
call
shrd
bsr
push
mov
shr
add
pop
jmp
call
mov
movsx
mov
mov
push
mov
pop
shr
lea
push
ret
call
shl
push
mov
pop
shr
lea
push
ret
push
push
call
mov
ror
mov
call
push
mov
shr
add
ret
call
push
mov
pop
shr
lea
jmp
call
push
mov
pop
shr
add
jmp
push
push
push
push
call
call
push
mov
pop
shr
add
push
ret
push
push
push
push
call
neg
push
mov
pop
shr
lea
push
ret
call
rcl
or
rol
call
push
mov
pop
shr
add
push
ret
push
call
mov
xor
mov
xchg
mov
sub
push
mov
pop
shr
add
jmp
push
call
mov
ror
mov
push
mov
pop
shr
lea
push
ret
push
push
push
call
or
mov
push
mov
shr
add
pop
jmp
call
cmp
jns
mov
sar
ror
call
push
mov
pop
shr
add
push
ret
push
push
push
push
call
mov
not
mov
push
call
push
mov
pop
shr
lea
push
ret
push
push
push
push
call
bsf
movzx
push
mov
pop
shr
add
jmp
call
cmp
jl
call
mov
test
jno
push
push
push
call
call
push
mov
pop
shr
lea
jmp
call
rol
mov
movsx
cmp
jg
mov
call
push
mov
pop
shr
lea
jmp
push
call
mov
xadd
bsr
call
push
mov
pop
shr
add
push
ret
call
sub
test
jp
mov
mov
push
mov
shr
add
ret
push
push
push
call
mov
and
mov
mov
mov
push
mov
pop
shr
add
push
ret
call
shrd
mov
mov
push
mov
pop
shr
add
jmp
call
shl
test
jo
call
mov
not
push
mov
shr
add
pop
jmp
call
lea
shl
push
mov
shr
add
ret
call
mov
not
mov
lea
push
mov
shr
add
ret
call
mov
cmp
jp
push
push
push
call
test
push
mov
pop
shr
add
push
ret
call
or
test
jle
mov
push
call
push
mov
pop
shr
add
jmp
call
mov
push
mov
shr
add
ret
push
push
call
shr
imul
mov
push
mov
pop
shr
lea
jmp
push
push
push
push
call
test
jno
bsf
shld
rcr
call
push
mov
pop
shr
lea
jmp
call
shl
mov
shl
xadd
mov
mov
push
mov
shr
add
pop
jmp
call
mov
sar
mov
mov
movsx
call
push
mov
pop
shr
lea
push
ret
push
push
push
call
mov
push
call
push
mov
pop
shr
add
push
ret
push
call
mov
mov
mov
call
push
mov
shr
add
pop
jmp
call
mov
and
movsx
mov
push
call
push
mov
shr
add
ret
call
shr
shr
push
call
push
mov
shr
add
pop
jmp
push
call
test
jae
xor
mov
bswap
xchg
shl
xor
push
call
push
mov
shr
add
pop
jmp
push
push
push
call
mov
neg
or
mov
push
mov
shr
add
ret
call
mov
and
push
push
push
call
push
mov
shr
add
pop
jmp
push
push
push
call
mov
rol
mov
imul
push
mov
shr
add
pop
jmp
call
test
jns
mov
rcl
call
push
mov
pop
shr
add
push
ret
push
push
call
mov
inc
bswap
cmp
jae
mov
test
jge
lea
call
push
mov
shr
add
pop
jmp
call
bsr
mov
call
push
mov
shr
add
pop
jmp
call
mov
mov
sar
mov
push
call
push
mov
shr
add
pop
jmp
push
push
push
push
call
test
mov
rcl
test
jno
mov
inc
call
push
mov
pop
shr
add
jmp
call
btc
shrd
mov
push
mov
pop
shr
add
jmp
call
bswap
mov
push
mov
shr
add
ret
call
push
mov
shr
add
ret
push
push
push
push
call
movsx
mov
call
push
mov
pop
shr
lea
push
ret
push
push
push
call
neg
rcl
rcl
push
mov
shr
add
pop
jmp
call
test
jp
call
mov
call
push
mov
shr
add
ret
push
push
push
push
call
mov
cmp
jp
shrd
push
mov
shr
add
pop
jmp
push
push
call
mov
xadd
data16
mov
test
call
push
mov
pop
shr
add
push
ret
push
push
push
push
call
movsx
xor
call
push
mov
pop
shr
add
push
ret
push
push
push
push
call
mov
cmp
je
mov
mov
lea
call
push
mov
shr
add
pop
jmp
push
call
cmp
je
ror
mov
neg
push
mov
pop
shr
add
push
ret
call
mov
call
push
mov
shr
add
ret
call
lea
mov
push
mov
pop
shr
lea
jmp
call
imul
push
call
push
mov
pop
shr
lea
push
ret
push
push
push
push
call
test
ja
shl
btc
mov
push
mov
shr
add
pop
jmp
push
call
cmp
jg
add
push
mov
shr
add
ret
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
add
add
add
int
add
add
add
add
add
add
add
add
mov
(bad)
mov
mov
mov
fdiv
inc
xchg
sub
xchg
(bad)
fsub
jbe
xor
fdivr
or
jbe
ss
sbb
add
add
add
sbb
scas
sar
push
dec
dec
call
dec
call
dec
ds
je
cmp
dec
ds
mov
dec
ds
cld
dec
add
sub
dec
mov
dec
call
dec
sahf
push
dec
dec
ds
push
dec
pushf
push
dec
dec
ds
xor
dec
repz
sub
je
add
pusha
enter
arpl
pusha
jo
daa
enter
add
cmp
add
and
add
add
add
xor
add
add
add
add
add
add
add
xlat
add
add
add
add
sub
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
mov
add
cdq
add
fdiv
add
sub
add
mov
jbe
mov
test
add
add
add
add
add
fadd
add
mov
lods
add
add
add
add
add
test
add
fidivr
add
add
add
add
add
add
add
jne
xor
movaps
add
mov
add
mov
enter
add
add
ja
add
add
not
xchg
add
cmp
lea
stos
xchg
sub
cld
imul
(bad)
jb
jne
daa
and
jmp
xlat
and
popa
and
push
js
mov
(bad)
xchg
(bad)
nop
adc
retf
(bad)
int
(bad)
and
xor
jmp
and
imul
dec
and
popa
and
jmp
popa
and
(bad)
aaa
sub
gs
sbb
fcmovne
add
mov
fiadd
inc
sbb
enter
(bad)
xchg
cmp
or
mov
call
lea
ds
div
int
int
mov
add
jg
fdiv
or
add
xchg
mov
cmp
inc
sbb
enter
xchg
mov
cmp
inc
sbb
enter
mov
cli
int
int
pop
mov
sub
enter
xchg
sbb
sbb
xchg
mov
fs
or
add
ss
mov
add
fwait
nop
sub
popf
inc
jno
add
and
pusha
sbb
div
push
sub
sbb
pop
add
int
call
jg
es
add
add
popf
add
add
ds
cmps
enter
pop
add
scas
sub
push
jmp
add
add
xchg
mov
xchg
xchg
rcl
add
cmp
enter
scas
lds
cmp
scas
push
mov
sbb
call
cmps
int
sbb
mov
jg
scas
je
mov
cld
ret
push
je
int
sbb
int
add
mov
scas
je
cmps
enter
jg
fdiv
cld
int
sbb
int
add
mov
ds
scas
je
jne
cld
ret
xchg
je
int
sbb
int
add
sbb
enter
aaa
cwde
push
mov
cmp
into
push
jle
add
add
sbb
add
xchg
int
xchg
gs
popf
mov
xlat
cmp
xchg
add
int
nop
cmp
cdq
add
popf
int
add
cmp
ret
add
in
push
lock
rcr
cmp
pop
cmp
je
fwait
imul
sub
js
ror
push
xlat
add
add
jae
outs
add
add
add
add
cmp
imul
jecxz
mov
dec
es
jl
sbb
add
cmp
mov
or
add
and
idiv
ror
int
in
stos
add
add
cmp
cmp
push
push
cmp
jne
nop
pop
lods
cmp
add
in
fwait
cmps
sub
add
add
repnz
xchg
and
add
nop
cmp
daa
add
in
into
nop
add
and
mov
mov
add
in
cmp
daa
add
in
push
mov
daa
add
in
sub
mov
(bad)
dec
ret
pop
xchg
in
je
popf
add
add
ss
int
xor
mov
call
call
push
dec
cmp
xchg
mov
(bad)
sahf
je
cmp
in
xchg
jbe
xchg
xor
jecxz
iret
add
call
call
push
and
int
xchg
xor
jne
lock
jbe
pop
xor
int
int
add
cmp
cmp
pop
add
lea
and
int
int
xchg
gs
gs
add
repnz
mov
add
fwait
mov
add
push
mov
add
cmp
addr16
inc
fdiv
inc
mov
add
inc
push
mov
add
inc
xlat
xchg
mov
add
inc
cli
shl
cmp
add
push
xlat
imul
push
mov
add
mov
add
xor
add
and
pop
xlat
(bad)
mov
enter
mov
add
push
mov
mov
add
call
mov
add
add
cmp
mov
fiadd
push
int
int
lds
mov
cmp
pop
add
in
add
fld
inc
add
fwait
aam
add
addr16
add
mov
clc
pop
add
in
mov
add
fwait
sbb
fsubr
xchg
int
xchg
gs
xor
jae
mov
sub
ret
mov
addr16
(bad)
in
mov
(bad)
in
mov
(bad)
in
mov
out
mov
add
push
jne
jle
add
int
fld
lock
int
xchg
gs
sbb
cld
int
nop
sub
nop
int
adc
cmp
add
inc
int
push
add
or
and
push
lock
int
xchg
gs
call
nop
cmp
daa
add
int
scas
fiadd
add
popf
int
add
int
jecxz
scas
push
lock
int
xchg
gs
je
add
fwait
adc
mov
add
int
jae
add
jne
xlat
int
nop
int
push
lock
int
xchg
gs
nop
cmp
int
int
int
nop
int
outs
sub
nop
cmp
add
in
pop
nop
cmp
add
in
xchg
int
xchg
gs
xchg
loop
and
daa
int
jecxz
call
loop
push
lock
int
xchg
gs
xchg
mov
aas
and
mov
int
jecxz
call
gs
push
lock
int
xchg
gs
loop
add
mov
add
icebp
int3
add
in
jne
xchg
int
nop
int
loop
add
cmp
int3
add
popf
fadd
add
cmp
in
jne
ja
sbb
add
add
call
call
add
sub
int
jecxz
arpl
add
in
lods
popf
arpl
add
cmp
add
in
jne
scas
pop
add
pop
add
fwait
arpl
add
jne
lock
cmps
popf
aam
add
adc
add
cmp
add
in
jbe
add
das
push
push
rol
add
add
push
rol
push
jecxz
scas
add
and
int
cmp
add
repnz
add
in
sbb
js
and
cmp
add
add
in
loop
mov
cmp
cmp
cld
cmp
add
push
cdq
mov
movs
int
cmp
sbb
cmp
add
cmp
cmp
add
shr
cmp
add
add
jecxz
scas
push
js
mov
mov
cmp
cmp
mov
dec
clc
popf
aam
add
sbb
add
sub
int
in
lds
add
fild
add
stos
and
int
pop
xor
int
data16
add
js
add
rol
rol
add
in
mov
int
push
dec
das
jecxz
add
mov
add
in
cmp
xchg
int
xchg
gs
add
int
nop
cmp
and
int
mov
popa
xchg
gs
add
int
nop
cmp
scas
push
lock
enter
add
fbld
int
jecxz
scas
lock
enter
add
cs
int
mov
cmp
and
add
test
(bad)
cmp
add
(bad)
cmp
fwait
add
(bad)
cmp
cmp
lods
add
(bad)
cmp
in
add
(bad)
cmp
enter
cmp
xor
add
cmp
xchg
add
jecxz
sbb
scas
fiadd
int
xchg
gs
or
cld
push
pop
push
int
js
mov
jb
fiadd
cmp
jecxz
sub
test
int
aas
jecxz
enter
ret
cmp
data16
in
sbb
aas
inc
adc
add
pop
ret
cmp
add
and
addr16
add
aas
inc
lods
enter
test
add
aas
inc
mov
cmps
add
add
add
or
add
cmp
in
add
mov
mov
add
add
mov
popf
call
icebp
rol
push
xlat
into
sbb
es
mov
add
test
add
(bad)
cmp
mov
push
jne
je
je
cmp
add
jecxz
add
cmp
in
sbb
jae
cmp
push
add
test
ret
push
pop
ret
inc
sahf
jns
add
fs
div
push
add
mov
and
pop
mov
int
add
jecxz
add
push
pop
popf
loop
add
cld
cmp
mov
mov
dec
xor
add
mov
xchg
xor
add
add
cld
cmp
add
jecxz
scas
and
mov
xor
add
mov
popf
es
add
cld
cmp
add
jecxz
scas
dec
rcr
int
jg
add
(bad)
test
mov
xor
jb
fiadd
xor
je
mov
int
sub
jl
pop
ret
cmp
jecxz
enter
ret
cmp
in
add
and
addr16
add
mov
add
cmp
and
int
int
add
cmp
int
in
lock
int
xchg
gs
(bad)
cmp
loop
pop
aas
inc
mov
add
xchg
(bad)
xchg
mov
fiadd
nop
xchg
in
or
xchg
(bad)
scas
jecxz
scas
ret
add
dec
jne
ret
jle
(bad)
mov
xchg
xor
push
jne
jne
xchg
xchg
rcl
dec
mov
test
add
jecxz
xlat
mov
add
or
test
aas
inc
pop
add
add
sbb
mov
pop
nop
aas
and
xchg
ss
fiadd
fiadd
pop
mov
js
dec
jl
xchg
mov
jecxz
push
nop
add
add
add
jge
xor
xchg
push
push
xchg
add
add
jne
mov
mov
jecxz
add
dec
aaa
fadd
add
mov
mov
inc
add
add
addr16
add
jne
mov
mov
inc
add
add
inc
add
mov
mov
and
mov
add
jne
mov
mov
and
add
dec
in
push
add
jne
mov
mov
add
add
addr16
add
xchg
pop
mov
retf
add
dec
test
in
mov
dec
xchg
jecxz
nop
add
int
xchg
xor
mov
sub
jl
xchg
int
cld
push
int
add
xlat
cmp
add
xchg
cmp
add
xlat
hlt
add
add
cdq
outs
fmul
nop
inc
jne
mov
int
sbb
mov
int
xchg
xor
je
xchg
add
and
mov
and
or
jne
sub
xchg
push
aaa
lock
add
cmp
xchg
cmp
push
int
pop
mov
(bad)
fiadd
add
outs
addr16
lods
add
in
mov
inc
jne
push
pop
call
sbb
add
addr16
xchg
add
sahf
int3
add
xchg
fldcw
sub
stc
pop
enter
sbb
add
in
xchg
and
or
add
jecxz
scas
and
jne
je
je
cmp
mov
jecxz
call
add
mov
mov
mov
jecxz
add
jo
add
add
add
in
sub
lock
call
add
jecxz
call
int
iret
xchg
int
xchg
not
jne
cmp
scas
pop
enter
add
xor
push
nop
jecxz
nop
call
push
sub
push
jne
xor
xchg
jne
cmp
xchg
and
cdq
imul
cmp
retf
or
je
cmp
test
in
jne
xor
xchg
jecxz
scas
add
retf
xor
xchg
popa
scas
xchg
(bad)
es
dec
mov
add
mov
mov
call
jecxz
push
add
lea
add
retf
fdivr
cdq
mov
ins
ror
bound
aas
inc
ret
add
js
add
jecxz
nop
call
push
dec
das
push
jl
daa
mov
sub
sub
pop
xor
mov
add
sub
xchg
loop
ss
jne
dec
push
xor
cmp
jl
push
std
and
daa
xchg
ja
xchg
and
popa
scas
retf
jne
popa
jecxz
push
add
lahf
outs
mov
movs
and
hlt
jne
and
xchg
lods
add
in
jne
ss
(bad)
scas
int
scas
imul
int
xchg
(bad)
scas
retf
xor
cmp
lods
add
in
jne
ret
mov
xchg
int
xchg
popa
scas
mov
(bad)
int
int
jmp
xchg
push
daa
add
popa
scas
int
xchg
(bad)
lea
xor
jne
ret
jecxz
add
enter
int
xchg
gs
scas
or
push
push
add
clc
mov
enter
jo
add
or
add
fwait
es
add
rol
xchg
cmp
ret
cmp
ds
ds
cmp
xor
addr16
int
mov
int
ja
sbb
aad
ds
mov
cmp
loop
mov
xchg
popa
push
ds
cld
(bad)
ds
cmp
int
xor
pop
repnz
cmp
jne
ret
jecxz
int
aaa
cwde
jl
xchg
int
xchg
gs
adc
add
gs
or
sub
dec
push
int
lock
sbb
xlat
cmp
add
add
add
int
shr
sub
repnz
add
mov
adc
add
sbb
aas
and
mov
sbb
jne
in
add
add
mov
push
cmps
mov
push
cmps
mov
sub
or
sbb
cmp
xor
sti
je
nop
mov
xor
mov
sbb
arpl
or
jne
scas
int
push
cmp
fadd
add
cmp
xchg
push
push
cld
int
je
add
lock
xchg
jecxz
daa
mov
and
fwait
pusha
sub
mov
xor
int
jae
mov
mov
mov
je
xor
add
xchg
sbb
mov
pop
sub
int
int
mov
sub
scas
(bad)
int
pop
sub
sub
cwde
jl
pop
cmp
pop
inc
add
push
int
js
ds
imul
push
and
int
pop
sbb
(bad)
cmp
in
pop
aas
inc
add
add
bnd
add
cmp
or
add
imul
add
dec
lds
sub
jecxz
int
adc
cmp
nop
push
sbb
push
cmp
push
cmp
adc
jecxz
adc
inc
xor
nop
add
mov
xor
aas
inc
xchg
enter
xor
inc
int
add
xchg
jae
shr
ds
hlt
add
push
daa
xchg
and
jo
add
add
pop
sbb
jb
add
in
and
(bad)
jo
scas
ds
add
enter
or
add
fadd
nop
add
dec
jmp
jecxz
int
adc
jecxz
nop
add
cmp
push
cmp
adc
jecxz
adc
xor
int
jo
(bad)
add
fisttp
xchg
(bad)
add
jbe
add
xor
pop
int
(bad)
jecxz
and
enter
nop
mov
test
jne
outs
xchg
mov
sbb
jecxz
xor
cdq
ret
adc
xchg
xor
cdq
retf
mov
popf
fidivr
add
ds
je
mov
in
jne
inc
jl
add
int
nop
int
jo
jecxz
iret
call
call
xchg
ins
xor
cdq
ret
cmp
add
cdq
jecxz
int
and
sbb
mov
sub
call
xlat
pop
pop
ror
xchg
lock
mov
jne
je
fwait
jg
add
sbb
int
mov
pop
cld
int
test
jne
adc
(bad)
cli
int
add
jecxz
daa
mov
or
sbb
mov
nop
popf
fidivr
add
ds
je
fcomp
add
in
jne
xchg
int
nop
dec
xchg
sub
cdq
and
int
das
jecxz
ret
aas
inc
cmp
cmp
or
add
fwait
mov
jne
pop
push
jne
lock
jbe
pop
xor
int
(bad)
int
mov
xchg
int
shl
jno
add
loop
add
xchg
sbb
xchg
and
ret
call
sub
lock
int
rcr
jno
add
sbb
add
xchg
sbb
xchg
and
ret
call
sub
lock
int
xchg
gs
int
div
jnp
add
les
cmps
mov
add
sbb
mov
div
int
and
sub
dec
inc
hlt
xor
add
int
adc
mov
adc
int
and
mov
int
jae
add
jne
nop
int
nop
int
cmp
aaa
push
lock
add
cmps
int
int
lock
int
xchg
gs
int
div
jnp
add
les
cmps
mov
add
sbb
mov
div
int
and
sub
dec
inc
hlt
xor
add
int
adc
mov
adc
int
and
fldenv
fwait
jae
add
jne
nop
int
nop
int
cmp
aaa
push
lock
mov
add
call
int
div
jnp
add
loop
pop
mov
adc
add
jbe
int
in
loop
int
div
mov
push
aaa
lock
mov
add
sbb
mov
sbb
add
mov
int
in
ret
cmps
mov
add
mov
mov
add
sbb
mov
sub
div
retf
add
popf
popf
inc
add
hlt
xor
add
int
adc
mov
loop
int
cmp
pop
mov
lds
movs
cmp
sbb
je
push
sub
cmp
popf
fldenv
iret
int
cmp
cmp
add
add
push
sbb
mov
jo
add
cmp
add
in
jbe
add
dec
popf
int
push
sub
push
and
int
cmp
add
pop
scas
cmp
add
in
js
xchg
xor
and
cmp
add
mov
int
jnp
addr16
in
xor
int
fwait
add
add
pop
ret
add
lock
int
xchg
mov
xlat
xchg
add
in
pop
scas
cmp
add
in
xchg
int
cld
int
shr
cmps
mov
add
int
int
xchg
loop
pop
mov
add
pop
enter
add
xchg
loop
in
pop
mov
cmps
mov
add
cmp
add
cmp
int
int
and
add
cmp
int
in
int
inc
sub
call
mov
cmp
int3
add
in
pop
cld
int
sub
xchg
push
aaa
lock
int
cmp
loop
pop
mov
xchg
jp
int
xchg
push
aaa
lock
nop
popf
fdivr
add
icebp
daa
add
xchg
mov
inc
sbb
add
xchg
mov
and
cmp
xchg
mov
and
cmp
int3
add
in
mov
and
cmp
int3
add
in
mov
and
cmp
add
in
mov
and
cmp
xchg
mov
and
cmp
in
add
in
mov
and
cmp
add
in
mov
lds
mov
in
add
in
cmp
cdq
add
in
jbe
add
mov
imul
aas
inc
int
repnz
xchg
cld
cmp
pop
xor
int
cld
add
add
cmp
cdq
add
in
xor
add
mov
fadd
add
mov
fld
int
fld
pop
add
in
add
pop
xor
int
in
add
(bad)
cmp
in
add
in
in
add
jle
add
cmp
lock
mov
mov
add
in
xchg
int
cld
hlt
xor
add
int
adc
mov
or
in
sbb
enter
cmp
add
nop
imul
push
cmps
add
repnz
add
les
cld
repnz
add
les
cld
repnz
add
(bad)
adc
add
xchg
cmp
sbb
add
adc
add
mov
adc
add
mov
sbb
repnz
add
sub
gs
add
sbb
adc
add
sbb
add
fwait
mov
add
div
int
inc
mov
add
int
loop
add
int
and
add
add
(bad)
loop
int
cmp
add
xor
adc
add
gs
add
ret
test
int
cmp
add
loop
add
ins
loope
int
cmp
adc
add
arpl
add
push
loope
int
mov
repnz
add
push
ret
add
and
int
add
cmp
add
addr16
int
int
repnz
mov
add
sbb
mov
add
pop
enter
add
xchg
loop
in
pop
mov
cmps
mov
add
cmp
add
xchg
test
int
int
and
add
cmp
test
int
in
fwait
inc
sub
call
jne
dec
xchg
cmp
int
push
jne
aaa
lock
int
xchg
gs
jne
xor
xchg
jne
add
add
je
fwait
inc
sub
adc
add
lock
jne
repnz
or
add
mov
test
add
xchg
jg
cmp
es
es
(bad)
cld
mov
fiadd
push
push
je
jbe
int
sbb
push
and
int
cmp
test
add
xchg
(bad)
loop
cmp
add
add
in
sub
cwde
xchg
into
push
div
mov
mov
int
xchg
gs
cmps
or
xchg
mov
add
xchg
cdq
push
xor
arpl
add
add
pop
es
and
ret
out
push
scas
jae
out
int
xchg
shr
push
scas
jae
cmp
int
xchg
xor
cmp
and
xchg
(bad)
es
cmp
or
cmp
jecxz
and
ds
add
jg
cmp
xor
add
add
push
xor
push
add
(bad)
sbb
mov
add
sbb
mov
ret
out
push
scas
jae
pop
cmp
int
shr
push
scas
mov
cdq
cmp
int
xor
xchg
into
push
lock
xor
add
xchg
(bad)
nop
inc
push
sub
jecxz
ret
add
mov
add
and
call
xchg
popa
nop
pop
enter
ret
add
mov
sbb
add
xchg
xor
mov
add
xchg
and
add
xchg
xor
cmp
scas
xchg
cdq
jecxz
and
ret
out
push
scas
jae
jecxz
int
xchg
shr
push
scas
mov
mov
int
xchg
xor
xchg
sbb
xchg
add
scas
and
int
push
or
int
int
call
xchg
xchg
and
test
int
int
xchg
gs
es
fiadd
add
jbe
add
sbb
add
int
mov
ss
ret
fiadd
ds
call
push
mov
sub
int
inc
sub
int
test
ds
mov
xor
push
loop
mov
rol
mov
jo
and
cmp
call
les
cmp
sub
mov
add
lock
nop
popf
sar
add
cmp
int
adc
sub
jne
pop
jecxz
push
add
ret
push
jne
lock
jbe
pop
xor
int
push
aam
add
xor
add
inc
mov
add
add
xchg
int
cld
push
pop
sbb
jecxz
sub
mov
add
mov
aam
add
jae
fidivr
add
int
jecxz
cmps
cmp
add
in
jne
scas
mov
and
push
jmp
jne
sub
lock
sub
mov
add
push
jne
adc
popf
sub
aam
add
xchg
bound
mov
enter
int
cld
cmp
add
add
mov
nop
inc
and
push
hlt
aam
add
xchg
cdq
and
mov
enter
int
jecxz
nop
inc
and
push
aaa
cwde
lock
int
xchg
gs
xor
aam
add
fwait
add
add
lock
scas
popf
fcos
add
sub
int
int
cmp
push
dec
push
push
adc
add
int
pop
in
xchg
int
int
add
cmp
(bad)
int
in
xchg
mov
aam
add
in
call
pop
cmps
cmp
add
in
sbb
outs
daa
add
pop
add
jne
neg
cmp
add
add
cmp
push
in
fistp
cld
cmp
xchg
add
in
and
cmp
add
in
cdq
daa
add
pop
add
push
iret
dec
and
bound
cld
cmp
add
in
xor
int
mov
add
xchg
xor
int
lock
xchg
cmp
int
int
lock
int
xchg
gs
xor
push
aam
add
bound
mov
int
int
and
pop
cmp
cmp
int
int
int
mov
push
lock
int
xchg
gs
xor
add
lock
int
xchg
gs
gs
add
mov
fiadd
xor
push
int
add
sahf
push
int
pop
add
inc
add
ds
cmp
ds
jecxz
scas
cmp
cmp
cmp
sahf
jb
int
leave
fnstenv
int
fisttp
int
cmp
jb
int
out
jb
int
inc
leave
sbb
int
inc
ds
int
inc
ffreep
jb
int
inc
and
cmp
jb
int
inc
mov
jb
int
push
and
xchg
xor
pop
and
enter
cmp
cmp
arpl
int
std
push
cmp
iret
jb
int
and
sub
add
and
enter
cmp
int
lds
xchg
fxch
fld
aam
int
je
fwait
aam
add
jne
scas
and
daa
cmp
push
int
in
sub
add
fwait
sbb
fsubr
push
push
or
int
lock
int
xchg
gs
shr
add
jge
int
in
jne
ret
push
int
pop
daa
cmp
push
int
in
lea
int
xchg
int
xchg
gs
xor
call
add
jmp
pop
pop
or
lock
call
add
xlat
jg
int
pop
mov
jne
xor
jne
push
lock
int
and
sbb
add
jecxz
nop
lock
int
xchg
test
cmp
cmp
add
js
cmp
int
loop
in
mov
add
xchg
pop
fs
das
call
or
cmp
mov
ds
call
pop
rol
nop
add
mov
mov
xchg
pop
ret
pop
mov
aas
je
mov
add
in
and
movs
mov
xor
cmp
pop
add
in
and
test
je
adc
int
repnz
add
mov
int
cmp
cmp
ins
int
in
iret
add
in
daa
push
jne
aaa
cwde
jl
xchg
int
pop
call
pop
add
xchg
loop
cmp
int
mov
add
iret
add
xlat
pop
cmps
shl
lock
add
aaa
lock
scas
popf
sbb
add
ret
int
adc
int
jecxz
push
add
mov
int
in
xor
and
int
cmp
xor
int
lock
int
lock
int
xchg
gs
nop
cmp
int
int
fldcw
push
lock
int
cld
push
int
add
repnz
mov
add
int
jecxz
call
int
xor
sub
lock
mov
xchg
int
xchg
gs
(bad)
nop
ror
push
enter
jne
lock
mov
jae
xor
push
jmp
and
add
cmp
pop
cmps
aas
xchg
jle
jle
lock
mov
int
xchg
gs
xor
ret
(bad)
aas
add
add
push
jmp
ds
cmps
and
js
xchg
pop
scas
mov
xchg
rcl
xor
mov
xor
push
jne
aaa
cwde
push
lock
mov
xchg
int
xchg
gs
and
popf
je
add
mov
add
add
nop
or
fiadd
push
push
je
xor
add
add
jbe
pop
xor
add
cmp
int
int
mov
and
xor
add
popf
add
add
je
int
jecxz
nop
and
sbb
cmp
ret
enter
and
int
xchg
(bad)
loop
cmp
add
add
in
aaa
cwde
xchg
into
push
lock
xor
enter
xlat
add
jne
xchg
jle
jle
xchg
jbe
pop
xor
int
jne
(bad)
loop
cmp
add
add
in
aaa
cwde
xchg
into
push
lock
int
xchg
gs
xor
add
mov
test
popf
outs
add
lock
int
xchg
gs
xor
fiadd
call
dec
pop
scas
ret
mov
mov
xor
jl
ret
(bad)
nop
aaa
mov
mov
push
je
mov
lock
test
xchg
adc
int
lock
fcomp
cmp
int
js
cmp
xchg
push
nop
jecxz
and
lock
daa
in
xor
nop
xor
jg
sub
int
sbb
js
and
(bad)
int
inc
enter
xchg
outs
add
xchg
outs
add
mov
and
push
int
int
loop
push
nop
xchg
cdq
dec
adc
aas
mov
mov
cmp
push
int
pop
add
add
push
jne
je
je
cmp
test
int
mov
dec
mov
add
dec
pop
hlt
mov
mov
xchg
hlt
popf
outs
add
popf
outs
add
xor
add
loop
int
xor
jecxz
jo
aas
inc
fld
add
push
xor
ret
cmp
iret
int
push
xor
cmp
push
jne
xor
mov
mov
mov
cmp
jecxz
nop
mov
cmp
inc
add
add
test
(bad)
fiadd
xchg
ss
add
fwait
(bad)
fiadd
(bad)
sahf
js
xchg
(bad)
sahf
dec
jl
xchg
cld
xchg
cmp
nop
int
sahf
dec
dec
cmp
loop
int
cdq
pop
xor
int
fwait
add
add
test
test
in
in
xchg
push
nop
xchg
js
jecxz
iret
add
xor
int
in
or
jecxz
nop
mov
mov
mov
cmp
mov
cmp
das
sub
int
xchg
int
xchg
gs
xor
add
lock
int
xchg
gs
xor
add
lock
int
xchg
gs
xor
add
lock
es
rcl
arpl
int
jbe
add
mov
int
(bad)
sub
iret
dec
sti
xchg
xor
add
xor
sub
add
xchg
xor
cmp
jo
add
jne
nop
pop
nop
int
sub
jbe
add
push
and
int
xchg
xor
int
lock
int
xchg
gs
xor
add
lock
int
xchg
gs
inc
outs
add
and
jne
aas
int
nop
int
in
jne
xlat
push
jne
push
lock
jne
lock
int
xchg
gs
add
test
int
jbe
add
imul
add
add
add
int
sbb
and
enter
cmp
add
jnp
add
int
and
enter
cmp
int
pop
call
add
repnz
int
je
daa
test
int
call
add
repnz
outs
add
les
or
pop
call
add
repnz
add
les
or
in
mov
jne
add
cld
int
je
jne
int
in
xchg
outs
add
xchg
outs
add
lock
outs
add
movs
je
in
int
int
mov
loop
pop
test
int
in
sbb
int
aam
les
(bad)
sbb
pop
scas
ds
neg
je
sbb
xor
inc
(bad)
add
fadd
dec
push
mov
outs
add
lock
or
in
jne
cli
int
cmp
div
mov
mov
or
in
jne
nop
int
push
int
cmp
outs
add
out
int
in
jne
es
es
scas
int
nop
int
push
int
dec
daa
push
jne
aaa
cwde
jl
xchg
int
xchg
gs
xor
(bad)
cld
mov
mov
mov
int
pop
pop
aaa
cmp
or
cmp
sbb
int
mov
xchg
push
dec
outs
xchg
mov
call
xchg
ret
mov
sbb
mov
mov
ins
mov
jno
int
pop
(bad)
in
nop
xchg
adc
push
jne
aaa
cwde
push
lock
int
xchg
gs
push
dec
cld
push
push
add
es
push
scas
mov
aaa
cwde
push
lock
xchg
js
mov
int
pop
pop
aaa
cmp
or
cmp
int
jecxz
add
push
add
in
xchg
popa
mov
mov
add
js
int
push
mov
nop
xor
mov
dec
in
retf
nop
xor
mov
int
add
mov
test
int
aas
xchg
xor
xchg
cdq
int
lea
int
int
in
les
in
nop
xchg
adc
mov
mov
pusha
sbb
mov
add
xor
inc
jne
sar
mov
add
ds
call
enter
and
int
jle
xor
fld
enter
cmp
mov
sbb
add
int
mov
add
mov
mov
call
mov
call
mov
call
mov
call
int
xchg
gs
(bad)
nop
or
mov
scas
mov
int
pop
pop
aaa
cmp
or
cmp
pop
int
jecxz
add
mov
call
xchg
add
cdq
imul
mov
lock
mov
jge
int
pop
(bad)
in
nop
xchg
adc
push
jne
aaa
cwde
push
lock
int
xchg
gs
(bad)
nop
(bad)
push
pop
mov
push
in
pop
daa
mov
jecxz
ret
mov
add
aam
popf
mov
popf
mov
cmp
pop
int
mov
add
add
cmp
pop
int
jecxz
add
(bad)
int
push
lock
int
xchg
gs
xor
push
mov
add
pop
or
cmp
cmp
shr
mov
add
push
xchg
ss
add
pop
mov
xchg
cmp
add
cmp
xlat
nop
add
add
xchg
ss
add
pop
mov
nop
cmp
daa
add
cmp
pop
xor
mov
push
mov
enter
nop
cmp
mov
xchg
push
aaa
push
jle
add
jecxz
es
nop
ds
loop
cmp
int
aas
or
scas
xchg
(bad)
arpl
popa
add
enter
jecxz
add
xchg
cmp
add
add
add
mov
daa
push
jne
jne
ret
push
jne
sub
xchg
xchg
(bad)
sbb
inc
mov
jl
xchg
int
xchg
gs
call
nop
pop
add
dec
int
int
mov
push
lock
jecxz
call
ss
push
jne
shr
call
push
call
call
rcr
add
lock
int
cld
xchg
loop
enter
push
int
mov
cld
je
in
lods
add
push
jne
add
xchg
xor
mov
cmp
xor
and
ds
imul
add
mov
retf
sbb
retf
imul
stos
mov
enter
add
add
retf
imul
sar
int
xchg
gs
gs
add
mov
fiadd
xor
and
je
dec
call
add
add
add
and
add
add
imul
and
int
mov
arpl
and
push
and
fadd
mov
loope
int
or
aas
or
mov
or
xor
push
and
int
fdiv
cmp
mov
inc
jne
fstp
int
scas
ds
int
call
push
and
int
pop
enter
push
mov
or
and
cld
je
ds
je
int
scas
or
add
mov
int
call
int
cld
je
ds
je
add
add
int
scas
or
add
mov
push
jne
add
loope
int
xor
mov
push
retf
push
jb
int
pop
pop
xor
mov
push
retf
push
push
int
imul
add
dec
nop
push
inc
cdq
push
add
add
dec
(bad)
sub
add
iret
loope
int
int
int
jl
and
xchg
leave
iret
loope
int
inc
mov
ret
ret
fsub
test
or
es
jle
dec
aas
jecxz
in
or
fmul
add
dec
ret
push
add
mov
xchg
(bad)
push
sub
cwde
cmp
lock
scas
popf
sub
or
cmp
sbb
and
jecxz
jnp
mov
and
fdivr
pushf
dec
int
in
push
cmp
or
lock
ss
adc
int
jecxz
push
add
iret
mov
nop
add
add
int3
(bad)
int
imul
aas
inc
and
add
xchg
(bad)
cmp
add
in
nop
add
add
movs
popf
xchg
cmp
mov
push
sub
push
and
int
cmp
add
add
xchg
mov
in
int
in
xchg
int
xchg
gs
es
(bad)
loop
lds
int
push
outs
add
and
mov
outs
add
add
add
fwait
jne
add
push
push
mov
jecxz
mov
dec
outs
jecxz
jb
push
pop
xlat
test
add
add
add
fwait
xor
add
dec
jecxz
push
mov
xchg
sub
xlat
test
add
add
add
jae
push
mov
jecxz
mov
xchg
push
cwde
jl
xchg
int
xchg
gs
fdiv
push
push
cmp
scas
(bad)
xchg
mov
int
int
sbb
cmp
mov
mov
add
int
jne
(bad)
add
cmp
shl
add
add
inc
pushf
add
add
xor
addr16
add
xor
inc
int
jb
add
inc
mov
add
inc
int
jb
add
inc
test
add
int
mov
aas
inc
repz
xor
fwait
shr
aas
inc
push
enter
enter
ds
test
cmp
add
push
jmp
jecxz
scas
cmp
cmp
aas
sbb
add
sub
inc
out
add
add
mov
jl
inc
jle
add
aas
or
int
or
lea
add
add
ds
test
cmp
add
xchg
(bad)
iret
jecxz
scas
dec
jl
cmp
add
add
mov
mov
inc
jne
aam
or
aas
or
dec
push
xchg
xor
add
add
or
enter
dec
push
xchg
js
mov
sub
xchg
mov
jecxz
nop
jecxz
jo
cmp
pop
cmp
pop
das
nop
enter
cmp
cdq
cmp
scas
ds
es
add
add
cmp
lds
ins
xchg
ins
cmp
test
int
add
int
sub
or
sub
and
ds
in
and
add
sub
mov
cmp
int
cmp
scas
cmp
mov
(bad)
xchg
xor
icebp
and
ds
imul
test
add
and
jecxz
int
(bad)
push
sub
push
or
int
lock
add
cmp
push
int
jecxz
jo
cmp
aad
int
sbb
js
cmp
sub
mov
xor
aas
inc
cld
enter
fsub
add
cmp
xchg
fldenv
enter
imul
add
ins
adc
mov
nop
cmp
jb
int
in
xor
and
xchg
mov
int
imul
pop
xchg
mov
addr16
add
xchg
je
aam
add
in
aaa
popf
or
add
sbb
mov
daa
aas
and
pop
xlat
add
add
aas
and
pop
cmp
jecxz
push
add
outs
add
das
nop
repnz
add
outs
add
jne
xor
js
cmp
cmp
add
cmp
add
js
retf
imul
add
add
dec
lea
cmp
add
js
retf
push
add
imul
add
dec
ror
nop
add
add
fwait
imul
xor
addr16
add
xchg
je
sldt
add
cmp
add
add
push
and
int
cmp
add
add
pop
cmp
lock
cli
jecxz
int
fadd
jo
add
xchg
or
add
cmp
add
add
dec
call
xchg
xor
int
lock
add
pop
jb
(bad)
and
int
pop
xlat
add
add
lock
scas
popf
rcl
cmp
int
mov
mov
add
mov
scas
gs
in
jbe
add
cmp
add
cmp
mov
je
push
xchg
add
in
pop
xor
int
and
add
jecxz
iret
add
dec
xchg
pop
call
int
lock
pop
add
cmp
add
fwait
xchg
sub
mov
int
xchg
loop
fwait
shr
cmp
in
mov
xchg
int
xchg
gs
cld
push
pop
int
nop
cmp
sbb
and
xlat
shr
add
(bad)
int
nop
sub
cmp
add
mov
shr
add
jecxz
int
loop
sbb
mov
aaa
push
lock
int
xchg
gs
cld
push
pop
pop
add
mov
cmp
test
xchg
sbb
mov
push
xlat
shr
add
(bad)
int
nop
sub
cmp
add
mov
shr
add
jecxz
int
loop
sbb
mov
aaa
push
lock
int
xchg
gs
cld
push
pop
int
scas
int
nop
cmp
add
xchg
sbb
in
int
fild
xor
xlat
shr
add
(bad)
int
nop
sub
cmp
add
mov
shr
add
jecxz
int
loop
sbb
mov
aaa
push
lock
xchg
gs
(bad)
xchg
mov
xchg
js
xchg
xor
and
mov
aas
and
enter
pop
add
add
xor
sbb
add
mov
aad
jecxz
aas
mov
aaa
sub
lea
pop
ret
add
add
jecxz
ret
jecxz
nop
xor
ins
adc
sbb
jg
add
xchg
pop
scas
ret
add
add
(bad)
call
ret
ret
(bad)
int
and
int
ds
add
int
fnstenv
add
popf
ja
add
ja
add
xchg
retf
imul
lea
imul
pop
ret
jecxz
nop
xor
leave
jg
add
std
add
xchg
retf
xor
jecxz
daa
jecxz
daa
jecxz
nop
xor
ins
adc
sbb
jg
add
mov
xchg
jecxz
enter
jecxz
enter
xor
adc
sbb
jg
add
std
add
das
add
das
add
das
add
das
add
das
add
das
add
ja
add
jg
iret
xchg
jg
cmp
jg
cmp
jg
gs
jg
loop
jg
loop
jg
arpl
jg
arpl
jg
sbb
jg
push
ds
add
loop
sbb
sbb
jg
add
int
das
add
das
add
das
add
das
add
xor
lock
cdq
imul
jl
fmul
cdq
imul
enter
aaa
sub
std
add
cdq
imul
enter
imul
sub
ds
push
push
mov
add
jecxz
ret
jecxz
nop
xor
jb
adc
sbb
jo
add
int
dec
int
fdivr
add
std
add
add
jecxz
call
ret
fs
int
and
int
ds
add
arpl
add
jg
add
mov
mov
jecxz
enter
jecxz
enter
xor
ins
adc
sbb
jo
add
std
add
mov
mov
retf
xor
jecxz
daa
jecxz
daa
jecxz
nop
xor
ins
adc
sbb
jo
add
retf
mov
retf
imul
lea
imul
jp
jecxz
nop
aas
and
int
int
ins
adc
sbb
jo
add
std
add
jg
add
jg
add
jg
add
add
jg
add
jg
add
jg
not
jg
cmps
xchg
jg
add
jg
add
jg
es
jg
scas
cmp
scas
xchg
jg
nop
cmp
nop
xchg
jg
call
ds
add
loop
sbb
sbb
jo
add
int
jg
add
jg
add
xor
nop
aaa
sub
retf
imul
sub
std
add
mov
imul
movs
daa
xchg
xor
lock
mov
imul
movs
daa
retf
imul
sub
int
xchg
gs
xchg
xor
add
cld
mov
mov
add
popf
xchg
sbb
add
mov
mov
adc
add
mov
mov
xor
loope
int
or
add
add
pushf
data16
in
xchg
adc
add
mov
mov
xor
loope
int
or
add
add
data16
in
int
sbb
add
cmp
int
int
xor
add
cmp
loope
int
in
xor
add
cmps
mov
add
add
and
add
je
cmp
int
xchg
or
add
add
cmp
int
xchg
add
add
fs
je
popf
loope
int
or
add
add
push
loope
int
mov
ds
dec
add
add
add
sub
mov
mov
push
add
xchg
cmp
in
mov
pop
xor
add
sbb
pop
xchg
xchg
mov
mov
xchg
je
pop
loope
int
push
sub
push
xchg
movs
call
push
cmps
mov
pop
int
in
pop
es
nop
mov
pop
int
in
aaa
cwde
push
lock
int
xchg
gs
sub
js
cld
int
xchg
cmps
sbb
add
and
int
xchg
cmps
rol
add
and
int
xchg
cmps
(bad)
add
add
int
xchg
cmps
jne
add
and
int
sub
nop
cdq
add
add
sbb
mov
ret
and
int
jecxz
push
add
and
int
jecxz
es
nop
mov
add
add
(bad)
add
add
sub
cwde
push
lock
int
xchg
gs
xchg
js
and
add
add
sub
les
add
int
xchg
cmps
rol
add
and
int
xchg
cmps
(bad)
add
add
int
xchg
cmps
jne
add
and
int
sub
nop
cdq
add
add
sbb
mov
ret
and
int
jecxz
push
add
and
int
jecxz
es
nop
mov
add
add
(bad)
add
add
aaa
cwde
xchg
pop
sub
and
jne
push
(bad)
xchg
lds
cmp
xor
int
in
pop
mov
int
int
bound
in
aas
inc
and
fld
cmp
jb
int
xchg
pop
aaa
lock
jne
pop
scas
popf
fst
jo
int
loop
int
xchg
loop
add
add
mov
mov
add
int
xchg
mov
and
fdivr
ror
int
xchg
push
cmp
icebp
int
lock
scas
cmp
int
in
jbe
add
mov
xchg
addr16
add
inc
int
int
xor
and
int
cmp
add
add
pop
scas
cmp
int
in
mov
popa
xchg
gs
ss
or
add
dec
jl
ret
(bad)
dec
pop
xchg
popa
nop
fs
inc
loope
add
add
mov
jne
mov
xor
jne
lock
int
xchg
gs
es
(bad)
nop
xchg
mov
scas
cld
xchg
and
jecxz
push
xor
xchg
out
inc
jl
daa
add
ds
enter
add
(bad)
loop
mov
pop
xor
aas
and
or
xor
popa
arpl
sbb
scas
pop
jle
mov
movs
jecxz
pop
dec
ret
pop
pop
adc
lahf
nop
mov
add
in
xchg
in
and
pusha
daa
call
sar
mov
mov
in
dec
idiv
movs
jo
dec
ds
daa
call
ror
mov
cdq
xchg
(bad)
nop
mov
scas
xchg
or
xchg
(bad)
push
ret
(bad)
arpl
adc
xchg
adc
cmp
xchg
add
loope
movs
jecxz
pop
dec
ret
pop
pop
adc
push
enter
aas
and
fs
xor
scas
lahf
aaa
mov
daa
xchg
pop
ret
(bad)
sbb
movs
cmp
daa
xchg
les
(bad)
scas
xchg
inc
call
mov
add
add
sub
xchg
test
les
pusha
ret
call
nop
mov
lahf
jo
test
les
add
and
call
nop
mov
scas
xchg
inc
nop
xchg
std
call
(bad)
scas
xchg
inc
call
rcl
xchg
push
nop
jecxz
arpl
mov
inc
sub
(bad)
loop
scas
add
nop
cmp
call
shr
inc
nop
xchg
shr
rcl
call
xor
daa
call
cli
sub
mov
add
sub
nop
mov
fiadd
add
sub
ds
jg
cmps
dec
adc
es
jo
add
add
nop
mov
call
add
add
ror
es
xor
jg
push
xchg
xor
and
mov
outs
add
jne
inc
fld
add
xchg
ss
or
add
add
xor
aas
ret
pop
scas
fiadd
sub
int
xchg
ss
or
add
scas
add
add
nop
mov
outs
add
and
ss
or
add
call
mov
outs
add
and
pop
das
mov
outs
add
pop
es
mov
mov
outs
add
sub
pop
add
mov
int
mov
outs
add
mov
pop
add
cmp
add
fwait
xchg
sub
(bad)
or
add
dec
jl
xchg
fwait
ror
add
pusha
pop
idiv
pop
add
je
popa
lods
add
xchg
xor
int
(bad)
or
add
add
jecxz
nop
add
bnd
add
xor
add
addr16
or
add
mov
or
add
xchg
cmp
or
add
push
int
loop
adc
jne
dec
jne
je
cmp
or
add
int
push
adc
add
fwait
ret
add
jne
sub
xlat
mov
add
xchg
cmp
or
add
ror
add
add
cmp
or
add
pop
nop
int
push
adc
add
fwait
(bad)
sub
mov
pop
pop
call
add
cld
int
mov
scas
mov
push
int
es
int
push
adc
add
fwait
xchg
sub
jecxz
nop
int
bound
mov
int
(bad)
or
add
int
push
sub
lock
int
xchg
gs
xchg
(bad)
nop
xchg
mov
inc
es
push
dec
dec
ret
ret
jne
and
lock
jne
daa
add
ds
lds
add
pop
pop
cmp
nop
cmp
movs
mov
test
xor
aas
ret
or
add
int
mov
mov
(bad)
fild
add
ds
add
push
mov
or
xchg
in
fs
xor
mov
jecxz
gs
add
int
fcom
add
cmp
fcom
int
pop
adc
add
cmp
sub
loop
add
xlat
add
add
std
mov
xchg
xor
add
ds
scas
cmp
call
movs
scas
cmp
nop
cmp
jg
push
int
cmp
mov
add
retf
retf
xor
xchg
xor
mov
scas
add
add
mov
xchg
lock
cwde
jl
xchg
int
xchg
gs
scas
xchg
(bad)
nop
xchg
mov
mov
scas
xchg
sbb
jecxz
sub
push
aas
xchg
in
inc
jl
daa
add
ds
enter
add
(bad)
arpl
loop
mov
ds
push
push
xchg
data16
aas
cs
enter
lock
enter
dec
mov
mov
add
xchg
(bad)
push
xor
cmp
dec
cdq
pop
pop
in
(bad)
sbb
nop
mov
add
int3
and
(bad)
sbb
pusha
enter
mov
mov
mov
in
dec
data16
jo
dec
xchg
(bad)
sbb
pusha
enter
mov
add
and
nop
mov
nop
xchg
sub
cmp
call
adc
enter
js
add
adc
add
xchg
js
xchg
(bad)
scas
xor
call
push
jecxz
pop
dec
ret
pop
pop
sub
test
push
es
cwde
call
push
es
nop
cmp
cmp
mov
nop
mov
call
xor
xchg
call
imul
mov
add
sub
nop
mov
ds
jg
out
dec
fsubr
es
jo
add
add
nop
mov
call
add
add
stos
jo
add
add
xchg
popa
scas
xchg
(bad)
push
ds
push
cmp
dec
ret
xchg
popa
scas
ds
cmp
cmp
sbb
push
jne
jae
add
aas
ds
enter
push
scas
adc
cmp
push
xchg
mov
sar
scas
cmp
dec
ret
pop
pop
aaa
pop
xor
sub
mov
shl
pop
dec
ret
pop
pop
aaa
xchg
stos
call
ja
add
add
in
xchg
retf
and
mov
mov
mov
nop
mov
shl
ds
cdq
call
fmul
mov
cdq
xchg
(bad)
nop
mov
scas
xchg
stos
nop
xchg
or
cmp
xchg
or
inc
nop
xchg
mov
cmp
shl
pop
dec
ret
pop
pop
aaa
xchg
(bad)
arpl
scas
adc
nop
cmp
cmp
call
in
xchg
lahf
call
cld
retf
call
xor
cdq
call
imul
mov
add
sub
nop
mov
ds
jg
retf
dec
fsubr
es
add
sub
nop
mov
call
add
add
shl
add
sub
xchg
xor
jg
push
push
jne
sub
cwde
jl
xchg
int
xchg
gs
add
xchg
(bad)
nop
dec
jne
ret
xlat
ror
add
xor
icebp
loop
(bad)
loop
pop
call
fadd
cld
js
jecxz
int
test
(bad)
sbb
dec
ss
jo
in
int
pop
and
cmp
xchg
ss
add
dec
dec
pop
xchg
or
popa
sbb
xchg
jecxz
add
push
nop
mov
xor
mov
mov
or
add
xchg
or
popa
sbb
xchg
jecxz
add
push
nop
mov
cmp
scas
jecxz
nop
add
cmp
mov
xor
mov
mov
or
add
jecxz
nop
add
cmp
mov
loop
dec
mov
int
xchg
fnstcw
push
nop
and
jne
mov
add
or
int
xchg
lahf
es
xchg
das
es
int
into
cmp
or
add
cmp
jecxz
int
add
add
xchg
push
fdivr
(bad)
sbb
adc
jbe
add
add
pop
jg
push
mov
and
mov
xchg
pushf
inc
add
add
xor
dec
aad
popa
push
xchg
in
inc
jl
daa
add
ds
enter
add
(bad)
arpl
int
retf
mov
mov
add
mov
sub
ret
jl
and
(bad)
arpl
xchg
fs
loop
adc
and
shl
pop
cmp
pop
aaa
mov
add
xchg
movs
call
xchg
jecxz
(bad)
add
add
and
(bad)
push
ds
jae
mov
mov
xchg
imul
mov
xchg
push
nop
mov
stos
jo
dec
xchg
(bad)
push
ds
imul
jae
mov
aas
cmp
mov
xchg
(bad)
mov
xchg
push
nop
jecxz
sbb
xchg
movs
nop
xchg
cmc
call
movs
call
or
add
xchg
(bad)
arpl
scas
adc
nop
cmp
call
movs
call
movs
call
aaa
retf
call
xor
and
imul
js
sub
and
xchg
retf
and
mov
add
push
mov
imul
sub
ss
add
sub
call
xor
mov
add
shl
add
sub
xchg
(bad)
sbb
xchg
cmp
push
dec
ret
xchg
(bad)
sbb
ds
xchg
cmp
push
xchg
mov
or
cmp
jl
int3
mov
outs
add
push
xchg
(bad)
push
mov
(bad)
or
add
outs
add
xchg
(bad)
push
cmp
aaa
cwde
jl
mov
cmp
es
jg
add
repz
neg
test
add
mov
fiadd
jg
nop
test
add
xchg
jg
lds
sbb
push
in
xchg
mov
jecxz
and
adc
loope
mov
mov
adc
xchg
adc
xchg
and
pop
scas
jecxz
call
enter
xchg
das
nop
cmp
sub
add
add
add
sub
add
test
add
jecxz
cmps
sub
cwde
lock
pusha
sbb
mov
add
ror
add
add
nop
xchg
pop
nop
push
(bad)
cmp
hlt
int
popa
xchg
popf
cmps
int
scas
int
es
add
(bad)
int
int
mov
nop
xchg
cmp
cmp
rol
add
add
popa
xchg
pusha
sbb
test
cmps
int
aam
fwait
int
int
mov
popa
(bad)
cld
or
push
dec
push
jmp
pop
push
int
add
xchg
push
xchg
adc
xchg
sub
add
push
dec
push
jl
jmp
int
shl
or
pop
add
idiv
sbb
add
aaa
cwde
push
lock
xchg
jnp
nop
repz
(bad)
and
int
mov
xchg
int
xchg
gs
gs
add
mov
fiadd
xor
fld
nop
pop
xchg
cmp
lock
in
dec
int
and
pop
cmp
or
int
pop
xlat
sbb
add
aas
inc
in
add
add
and
cmp
sahf
jb
int
leave
fnstenv
int
fisttp
int
cmp
jb
int
out
jb
int
inc
leave
sbb
int
inc
ds
int
inc
ffreep
jb
int
inc
and
cmp
jb
int
inc
mov
jb
int
push
and
xchg
mov
cmp
pop
and
enter
cmp
jb
int
adc
cmp
ds
pop
add
add
add
and
jecxz
scas
cmp
ds
pop
add
fst
int
add
cmp
iret
push
int
cmp
int
fld
aam
int
je
fwait
aam
add
ret
cmp
int
mov
mov
pusha
sbb
and
jne
jg
nop
inc
jne
pop
inc
loope
enter
mov
add
mov
add
cld
xchg
pop
jecxz
call
jecxz
ret
mov
xchg
jecxz
enter
mov
jo
ret
xor
ret
xor
xor
imul
jecxz
enter
jg
nop
sub
xchg
jg
call
sbb
jmp
int
jne
push
nop
push
int
jge
leave
jne
pop
mov
int
pop
add
add
cld
cld
cld
cld
cld
cmp
fxch
int
mov
jecxz
int
or
add
mov
add
int
cmp
or
int
cmp
and
mov
mov
mov
and
int
cmp
add
add
js
mov
cmp
add
fldcw
xchg
push
cmp
push
int
push
nop
xchg
mov
fisubr
int
lock
daa
cmp
hlt
int
in
xchg
int
xchg
gs
xor
push
jecxz
nop
inc
jae
or
add
(bad)
int
in
lock
int
xchg
gs
add
push
push
cmp
dec
cld
xchg
adc
push
outs
add
jae
or
popf
nop
cmp
add
or
add
jne
nop
cmp
outs
add
fwait
int
shr
sub
outs
add
add
add
push
add
xchg
xor
mov
mov
xchg
xor
mov
cmp
add
sbb
aas
inc
mov
lock
inc
call
aas
and
cmp
push
push
fdivr
sub
xor
sub
push
push
sbb
aas
leave
jne
mov
enter
je
mov
sbb
enter
das
pop
jo
jmp
mov
xor
addr16
add
or
cmp
fwait
add
xchg
mov
add
pop
je
inc
xlat
add
in
lock
or
add
jne
cmp
push
arpl
push
arpl
inc
(bad)
enter
int
arpl
mov
pop
enter
int
and
add
add
add
arpl
mov
int
xchg
(bad)
cmp
inc
jle
add
mov
add
mov
aas
inc
sbb
add
mov
add
add
mov
cld
int
arpl
mov
int
(bad)
fadd
add
mov
push
jmp
mov
xor
ds
nop
addr16
add
or
inc
add
add
pop
pop
cdq
mov
nop
dec
int3
je
jbe
add
in
lock
or
add
jne
xchg
loop
daa
push
pop
mov
int
sbb
cld
int
arpl
mov
int
cmp
mov
push
idiv
cdq
int
test
cmps
int
sbb
or
fwait
cmp
add
xor
jb
int
int
arpl
shl
int
xor
enter
push
arpl
push
loop
push
nop
mov
add
xor
mov
sub
xor
cmp
add
in
xor
mov
mov
xor
add
add
test
mov
add
jecxz
cmps
cmp
dec
xchg
cmp
add
or
int
scas
int
nop
int
cmp
xchg
push
pop
lea
add
add
or
jne
addr16
add
or
cwde
xor
add
or
mov
nop
dec
int3
je
stos
ret
add
in
lock
or
add
jne
xchg
sbb
push
int
test
or
int
jecxz
scas
int
sbb
int
add
mov
int
nop
int
cmp
call
int
idiv
xor
je
int
fmul
mov
add
xchg
loop
mov
mov
mov
push
int
in
int3
int
test
cmps
int
add
mov
int
nop
int
jo
add
loop
push
arpl
cmp
ror
in
xor
scas
push
xor
cmp
int
in
push
ds
sub
cwde
xchg
(bad)
push
push
or
fld
int
jl
xchg
int
xchg
gs
es
nop
ds
loop
add
int
mov
int
sbb
mov
int
cmps
int
add
mov
cmp
push
int
jecxz
fsubr
xchg
xchg
(bad)
sbb
inc
mov
jl
xchg
int
xchg
gs
mov
fiadd
xor
add
(bad)
push
dec
cld
xchg
pop
mov
mov
je
pop
mov
popf
nop
cmp
loop
add
jne
nop
cmp
cmp
add
int
shr
sub
repnz
add
mov
outs
add
sbb
aas
inc
out
add
add
add
add
sbb
aas
and
cmp
push
push
cmps
mov
sub
xor
sub
push
push
fmul
aas
leave
jne
mov
enter
je
mov
sbb
add
add
int
or
nop
addr16
add
or
cmp
mov
add
pop
je
dec
enter
mov
mov
or
add
jne
xchg
fldenv
call
or
int
mov
es
scas
pop
enter
int
and
mov
mov
sub
sbb
int
xor
push
pop
push
push
idiv
add
xor
mov
sub
xor
cmp
jecxz
int
call
mov
or
int
scas
je
mov
add
xchg
loop
mov
cmp
int
es
scas
int
nop
int
test
gs
mov
(bad)
cmp
push
int
in
pop
ds
sub
cwde
xchg
(bad)
push
push
or
out
outs
int
jl
xchg
int
xchg
gs
es
nop
ds
loop
enter
int
sbb
(bad)
loop
mov
int
cmps
int
add
mov
cmp
int
jecxz
imul
xchg
xchg
(bad)
sbb
inc
mov
jl
pop
scas
popf
cmps
leave
add
sbb
iret
add
xor
add
(bad)
pop
call
int
jecxz
push
add
cmp
int
cmp
and
int
cmp
xor
int
lock
call
int
lock
int
xchg
gs
xchg
mov
aas
cmps
mov
add
or
sub
push
adc
add
mov
int
pop
in
mov
int
popf
int
add
cmp
ror
int
in
dec
or
add
sbb
mov
call
push
jne
je
mul
sbb
mov
int
int
and
pop
mov
aas
jecxz
loop
pop
add
cmp
add
sbb
mov
scas
aaa
push
xlat
loop
add
fwait
int
nop
cmp
and
mov
int
cmp
add
int
lds
xchg
add
int
lds
xchg
lock
dec
add
cmp
int
in
pop
add
int
add
jne
push
lock
scas
popf
jae
add
and
nop
push
int
out
dec
mov
jo
push
jmp
adc
cmp
int
add
cld
cld
cld
cld
cmp
mov
push
jne
ins
add
add
ror
mov
ret
push
pop
mov
dec
cmp
jecxz
jo
inc
jecxz
dec
or
add
mov
jecxz
loop
mov
mov
xor
add
xchg
pop
call
int
cmp
int
nop
cmp
adc
int
cmp
and
int
cmp
add
add
mov
cld
or
int
mov
(bad)
pop
nop
int
push
adc
add
fwait
(bad)
sub
mov
pusha
push
addr16
add
push
(bad)
cmp
int
in
jne
and
xchg
xor
inc
je
int
pop
add
xor
int
mov
cs
int
lock
ss
xor
cdq
pop
add
lock
in
int
lock
es
ror
add
cmp
push
nop
and
mov
int
in
mov
add
xchg
mov
scas
or
int
lea
enter
addr16
or
add
aas
and
push
int
js
jecxz
jo
cmps
retf
add
cmp
cmp
or
int
cmp
inc
dec
add
add
add
std
(bad)
or
int
jecxz
scas
and
push
iret
dec
cmp
cmp
loop
int
cmp
inc
xchg
das
push
pop
mov
xor
xchg
push
je
int
iret
cmp
int
or
int
xor
or
int
jecxz
cmps
push
js
mov
cdq
push
pop
mov
mov
jecxz
loop
mov
cmp
add
fwait
(bad)
sub
iret
mov
fcom
push
xor
xchg
push
je
int
iret
cmp
int
or
fdivr
int
jecxz
add
push
and
int
cmp
js
add
enter
aas
jecxz
loop
mov
add
cmp
add
fwait
ret
add
mov
pop
call
int
lock
js
and
add
add
addr16
add
fcmovnb
cmp
dec
int
in
jne
and
cmp
int
push
js
mov
fwait
shr
(bad)
retf
int
in
cdq
dec
sub
add
add
or
int
js
mov
add
add
and
(bad)
or
push
adc
add
fwait
ret
add
mov
add
and
int
and
and
or
cmp
int
in
mov
int
pop
add
jne
pusha
(bad)
int
lock
int
lea
int
int
int
pop
cmp
retf
int
xchg
loop
fwait
shr
jl
int
cmp
jmp
xchg
gs
nop
cmp
cmp
xchg
js
xchg
(bad)
xor
lods
add
add
cmp
setns
aas
xadd
cmp
(bad)
fdivr
aas
getsec
lds
aas
adc
cld
fdivr
aas
sub
cmp
je
aas
cmovle
mov
aas
cmp
or
xor
sub
mov
xchg
js
xchg
into
push
lock
xchg
gs
idiv
js
cmp
xchg
push
scas
xchg
lock
(bad)
xchg
xor
in
jecxz
aas
push
in
fs
out
sbb
fs
aad
push
loope
loope
add
sbb
xchg
retf
jecxz
cmp
mov
or
int
jecxz
scas
xchg
xor
and
push
es
popa
scas
ret
and
popa
gs
fldenv
push
loop
mov
xchg
(bad)
cmp
xor
out
mov
xor
cmp
xchg
js
xchg
(bad)
iret
ins
call
xchg
popa
scas
ret
popa
iret
xchg
xor
je
idiv
pusha
int
int
mov
int3
xchg
mov
xchg
(bad)
es
add
lea
ins
adc
ins
call
xchg
mov
xchg
into
push
lock
scas
popf
sub
add
popf
push
int
jecxz
push
add
aas
aam
pop
xor
add
xchg
xor
add
add
jne
xchg
addr16
add
ret
push
jne
push
jne
lock
jbe
jecxz
iret
add
push
and
int
xchg
xor
int
lock
int
xchg
gs
cmps
push
jne
cmp
cmp
xchg
(bad)
cmp
add
add
adc
neg
push
jne
push
push
cmp
popa
cmp
add
aas
push
xor
push
add
add
mov
int
and
jne
dec
daa
push
jne
jl
cmp
int
int
sbb
add
lock
int
xchg
gs
xchg
mov
inc
inc
enter
dec
call
int
dec
nop
cmp
or
int
dec
scas
cmp
or
int
dec
cmp
add
ins
sahf
int
int
cmps
cmp
int
int
cmp
sahf
int
int
fdivr
sahf
sahf
int
int
sbb
dec
sahf
int
int
aam
mov
fstp
mov
lds
xor
int
int
adc
(bad)
sahf
int
int
idiv
mov
dec
jae
call
cmp
mov
pushf
sahf
int
int
jg
cmp
pop
cmp
int
int
pusha
cmp
sahf
int
int
je
inc
sahf
int
int
cmp
inc
sahf
int
int
sar
inc
sahf
int
int
xchg
cmp
sahf
int
int
mov
int
dec
test
int
dec
popf
cmp
dec
jnp
push
sahf
int
int
mov
stc
sahf
int
int
mov
int
dec
sub
mov
dec
push
cmp
sahf
int
jecxz
or
sub
and
inc
add
add
add
imul
add
sub
int
or
add
add
push
dec
int
int
fadd
add
cmp
int
int
xchg
add
add
dec
dec
int
int
mov
jl
int
int
test
add
cmp
dec
int
int
fiadd
add
cmp
int
int
call
int
int
add
add
cmp
dec
int
jecxz
(bad)
push
lock
int
xchg
gs
xchg
mov
cmp
out
add
xchg
je
cmc
dec
int
in
mov
mov
dec
out
add
xchg
je
popf
dec
int
in
dec
nop
mov
fldz
add
xchg
(bad)
cmp
dec
int
in
push
lock
int
xchg
gs
xchg
mov
mov
mov
mov
sahf
out
add
xchg
je
adc
int
xchg
mov
mov
jo
add
xchg
je
dec
int
xchg
mov
mov
iret
out
add
xchg
je
es
int
in
mov
mov
cmp
add
xchg
je
and
mov
mov
gs
add
xchg
je
gs
mov
mov
loop
add
xchg
je
add
xchg
dec
sbb
add
add
push
lock
gs
push
jne
je
je
je
je
popa
scas
ds
add
daa
xchg
jne
mov
jle
aas
imul
mov
ds
add
xor
retf
jne
mov
push
enter
sbb
mov
aaa
jl
mov
mov
sbb
xchg
pusha
sbb
add
mov
enter
jne
mov
cli
xchg
iret
mov
mov
jne
pop
mov
mov
jecxz
call
xchg
int
jne
fsubr
enter
enter
mov
jle
mov
mov
xchg
jne
sahf
mov
add
jecxz
daa
mov
mov
push
mov
mov
out
xor
dec
imul
mov
push
jne
je
je
je
je
popa
scas
ds
add
daa
xchg
jne
mov
jle
aas
imul
mov
cdq
xchg
jne
scas
jecxz
enter
sbb
jecxz
fdiv
jl
popa
xchg
gs
(bad)
xchg
mov
xchg
js
xchg
xor
and
mov
aas
and
enter
pop
add
add
xor
sbb
add
mov
aad
jecxz
aas
mov
aaa
sub
lea
loope
int
pop
ret
add
add
jecxz
ret
jecxz
nop
xor
ins
adc
sbb
adc
pop
scas
ret
add
add
(bad)
call
ret
ret
(bad)
int
and
int
ds
add
int
ds
cmp
cmp
add
cmp
retf
xchg
retf
imul
lea
imul
pop
ret
jecxz
nop
xor
leave
adc
add
xchg
retf
xor
jecxz
daa
jecxz
daa
jecxz
nop
xor
ins
adc
sbb
adc
add
cdq
imul
daa
jecxz
enter
xor
adc
sbb
adc
add
add
popf
add
popf
add
popf
add
cmp
add
cmp
cs
cmp
iret
xchg
jg
cmp
jg
cmp
jg
gs
jg
loop
jg
loop
jg
arpl
jg
arpl
jg
sbb
jg
push
ds
add
loop
sbb
sbb
adc
jg
add
popf
add
popf
add
popf
add
xor
lock
cdq
imul
jl
fmul
cdq
imul
enter
aaa
sub
std
add
cdq
imul
enter
imul
sub
ds
push
push
mov
add
jecxz
ret
jecxz
nop
xor
jb
adc
sbb
ret
add
sbb
sub
std
add
add
jecxz
call
ret
fs
int
and
int
ds
add
iret
popf
add
inc
add
inc
add
mov
mov
jecxz
enter
jecxz
enter
xor
ins
adc
sbb
ret
add
std
add
mov
mov
retf
xor
jecxz
daa
jecxz
daa
jecxz
nop
xor
ins
adc
sbb
ret
add
retf
mov
retf
imul
lea
imul
jp
jecxz
nop
aas
and
int
int
ins
adc
sbb
ret
add
std
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
idiv
jg
not
jg
cmps
xchg
jg
add
jg
add
jg
es
jg
scas
cmp
scas
xchg
jg
nop
cmp
nop
xchg
jg
call
ds
add
loop
sbb
sbb
ret
add
add
inc
add
inc
add
pop
add
xor
lock
mov
imul
sub
std
add
mov
imul
movs
daa
xchg
xor
lock
mov
imul
movs
daa
retf
imul
sub
mov
(bad)
cld
popa
pop
add
popf
sbb
int
nop
cmp
sub
cwde
xchg
into
push
lock
pusha
sbb
mov
add
ror
add
add
add
cmp
xchg
popf
es
je
repz
je
repz
add
add
mov
nop
xchg
cmp
cmp
rol
add
add
or
sbb
popa
je
and
test
add
mov
fiadd
ds
call
add
xchg
jg
aam
rcl
and
mov
fcmovne
mov
fisttp
adc
scas
adc
pusha
sbb
push
adc
add
add
xchg
jg
nop
cmp
add
add
sub
add
dec
add
cmp
add
add
jecxz
cmps
sub
cwde
lock
jne
xchg
add
add
inc
or
pop
pop
add
es
imul
not
add
add
or
add
and
add
pusha
sbb
das
call
div
push
in
jle
add
ret
xchg
gs
call
js
xchg
(bad)
scas
xor
jne
nop
ds
cmp
adc
movs
fdivr
aas
and
and
and
mov
xchg
into
push
lock
xchg
gs
cmp
xchg
xor
push
loope
loope
aad
push
loope
loope
int
outs
xchg
(bad)
es
add
stos
cmp
mov
je
mov
int
jecxz
nop
xchg
xor
and
xor
xor
js
xchg
(bad)
arpl
xor
jge
pop
cmp
push
jne
js
xchg
(bad)
loop
out
xchg
xor
xchg
popa
es
(bad)
fs
add
cmp
mov
js
xchg
into
push
lock
int
xchg
gs
cmps
or
(bad)
cmp
cmp
nop
ds
enter
add
or
xchg
xor
add
add
add
ror
cmp
xor
nop
ds
nop
cli
int
add
je
lods
daa
add
in
and
xor
xor
push
xor
xchg
push
jl
push
sbb
xor
xor
mov
int
call
idiv
xor
cmp
je
imul
and
xor
xor
jb
jne
add
add
sub
xchg
xchg
(bad)
loop
inc
mov
cwde
jl
mov
sbb
aas
ret
xor
pop
daa
add
idiv
pusha
sbb
xchg
ret
xor
cmp
add
xchg
int
xchg
gs
scas
mov
fiadd
xor
xor
add
int
nop
push
xor
sahf
sub
mov
dec
xchg
ds
enter
xchg
(bad)
push
push
or
rcr
xchg
int
xchg
gs
adc
push
push
cmp
xchg
(bad)
cmps
cmp
or
add
cmp
cld
push
int
(bad)
jo
js
mov
enter
cmp
sub
cmp
je
les
add
js
enter
xor
scas
int
and
js
enter
mov
enter
jecxz
int
scas
int
fnstcw
cmp
int
xchg
loop
mov
mov
loop
int
or
addr16
add
or
cmp
and
int
mov
add
jmp
mov
mov
loop
mov
lea
add
add
test
int
mov
mov
add
or
add
jne
cmp
js
push
js
mov
je
int
iret
cmp
aad
int
mov
int
sahf
int
fstp
int
nop
int
and
push
mov
cld
int
test
int
scas
int
cmp
add
jne
mov
cwde
xchg
push
sub
dec
mov
cld
(bad)
int
iret
cld
int
scas
int
xchg
loop
mov
enter
int
in
cmp
fs
cld
(bad)
je
int
iret
cld
int
scas
int
mov
mov
inc
add
int
cmp
dec
and
js
int
xlat
xchg
pop
cmp
int
iret
cmp
aad
int
xchg
xor
sub
cwde
xchg
(bad)
push
push
or
test
int
lock
int
xchg
gs
es
scas
ds
loop
repz
int
or
nop
xchg
(bad)
loop
cmp
add
add
add
mov
add
xchg
xchg
(bad)
sbb
inc
mov
jl
xchg
int
xchg
gs
xchg
pop
add
mov
add
jecxz
scas
push
lock
mov
sbb
fs
lods
jne
ret
xchg
mov
add
int
mov
xor
xchg
add
call
add
and
int
xchg
gs
add
cld
int
nop
ds
gs
(bad)
int
xchg
xor
push
int
pop
mov
mov
sbb
cld
cld
cld
pop
add
add
cmp
hlt
int
jecxz
add
xchg
xchg
xor
jb
jne
fxch
add
push
js
mov
daa
push
jl
js
sbb
or
push
ds
jecxz
mov
mov
ds
lock
nop
je
push
push
int
xchg
(bad)
gs
scas
dec
es
pushf
mov
add
or
aas
add
ja
jo
and
movs
dec
pop
sub
jecxz
cmps
daa
dec
xlat
sub
.byte
