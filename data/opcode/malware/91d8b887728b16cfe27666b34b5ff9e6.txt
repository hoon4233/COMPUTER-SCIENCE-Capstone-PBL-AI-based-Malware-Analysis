push
adc
dec
add
iret
cld
(bad)
push
inc
or
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
xor
cmp
mov
jbe
push
lea
mov
mov
test
mov
je
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
mov
add
cmp
mov
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
xor
mov
lea
mov
push
mov
mov
push
mov
mov
push
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
mov
call
test
je
push
call
add
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
lea
mov
push
lea
call
add
push
lea
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
push
mov
push
lea
push
mov
mov
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
call
mov
lea
mov
call
mov
mov
lea
mov
mov
call
xor
mov
lea
mov
mov
call
or
mov
mov
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
call
mov
mov
xor
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
mov
mov
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
lea
call
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
lea
push
mov
call
mov
push
mov
call
mov
mov
add
or
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
mov
call
mov
push
call
mov
call
test
je
push
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
sub
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
pop
test
jmp
push
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
cmp
je
lea
call
test
je
lea
call
test
jne
lea
call
test
je
lea
call
test
jne
lea
call
test
jne
lea
push
lea
call
mov
mov
mov
call
test
je
mov
jmp
xor
mov
test
je
and
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
pop
je
call
mov
mov
mov
push
mov
call
jmp
call
mov
mov
mov
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
mov
push
mov
mov
mov
lea
mov
add
test
jne
sub
push
push
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
push
mov
cmp
je
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
cmp
mov
jne
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
push
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
lea
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
mov
and
xor
inc
cli
adc
dec
mov
mov
xchg
arpl
pop
push
jge
lock
mov
sar
mov
push
xor
sti
dec
jae
inc
sbb
mov
push
xchg
fidivr
jl
ror
or
addr16
sub
or
mov
adc
cli
(bad)
daa
nop
hlt
add
dec
xchg
rcr
cli
dec
mov
ror
jmp
push
imul
inc
inc
jle
rol
outs
xor
(bad)
mov
jmp
out
mov
push
cmp
sbb
pop
and
xor
mov
fwait
adc
mov
rcr
stc
xchg
out
sub
js
inc
jnp
fcmovbe
ss
adc
push
jb
pushf
push
leave
test
shr
jp
ins
rcl
and
xor
and
or
pop
pusha
pop
mov
(bad)
mov
rcr
fdiv
das
add
push
dec
push
or
loop
xor
pop
fst
lds
popa
int
cmps
pop
call
cmps
pop
out
mov
rcr
shl
out
ret
maxps
adc
add
jg
(bad)
imul
outs
inc
(bad)
cmp
cmp
icebp
call
pop
dec
in
mov
dec
pop
jle
or
adc
xor
sahf
shr
cmc
mov
push
push
sub
pop
adc
adc
cdq
int3
mov
ins
inc
fdivrp
pop
movs
and
xchg
pop
addr16
adc
or
loopne
inc
sahf
addr16
xchg
call
cmp
in
mov
mov
movs
xchg
mov
lock
adc
repnz
push
inc
hlt
inc
xor
xor
mov
pop
sar
xlat
into
call
out
cmp
cmc
push
xor
push
jle
pushf
mov
mov
mov
(bad)
dec
mov
cld
(bad)
and
mov
push
sub
movs
or
xchg
sar
imul
push
adc
mov
pop
sub
in
ss
sub
mov
(bad)
jl
test
ret
fisub
inc
ins
jnp
out
lods
test
mov
fcomp
lock
lock
xor
movs
jl
outs
push
xor
pop
test
push
add
mov
mov
dec
es
fwait
push
rcr
xchg
popw
cs
dec
push
push
mov
pusha
dec
lods
icebp
outs
jecxz
pop
cmp
pop
sub
push
pop
cmp
pop
add
mov
mov
outs
push
push
adc
xchg
sbb
hlt
dec
pop
lds
rcr
fnstcw
push
jo
xchg
inc
mov
jmp
retf
scas
cdq
xor
rcr
cmp
test
mov
push
lds
sub
aas
mov
sahf
lock
out
icebp
pop
jle
adc
mov
inc
jmp
jo
sti
xchg
cmp
aad
out
sub
mov
cmp
sahf
mov
scas
dec
xchg
push
out
aas
lods
(bad)
cmps
xchg
inc
cmp
adc
dec
add
push
pop
mov
mov
xchg
mov
mov
xchg
(bad)
pushf
jae
push
bound
and
lds
xchg
mov
xchg
mov
enter
and
scas
cmps
jb
mov
lea
mov
pop
and
mov
retf
pop
sbb
(bad)
xchg
ins
add
xchg
adc
pop
and
jb
ins
outs
push
sub
add
out
inc
(bad)
jmp
in
mov
xchg
scas
xchg
pop
add
push
and
adc
mov
fld
xor
push
cs
sbb
sub
ins
in
and
jb
inc
dec
push
mov
rcr
into
imul
lods
add
pop
pusha
inc
adc
push
cs
ds
fidiv
inc
mov
(bad)
(bad)
sub
add
jle
push
sbb
ds
out
cs
xor
lds
push
and
mov
adc
jecxz
and
inc
cmp
pop
js
movs
pop
rol
lgs
mov
or
lahf
(bad)
push
mov
mov
pop
cmp
xlat
mov
clc
aad
pop
js
pop
cli
idiv
xor
mov
imul
jle
inc
pusha
push
movs
inc
int
in
ja
or
mul
mul
out
inc
push
aaa
inc
rol
inc
aad
outs
daa
cli
or
pusha
and
into
repnz
inc
out
sub
stos
inc
test
and
loope
(bad)
outs
mov
mov
sti
retf
add
jmp
add
arpl
or
dec
clc
scas
int
fdivr
xchg
inc
(bad)
nop
lock
mov
aad
add
push
in
pop
ss
pop
jl
adc
scas
sub
jmp
data16
mov
dec
push
sbb
outs
addr16
(bad)
test
push
xor
sbb
(bad)
in
sti
shr
aam
and
pop
mov
sahf
arpl
cmp
jb
data16
mov
fdivr
mov
test
call
shl
(bad)
cmp
lahf
cmp
sbb
mov
push
cmp
xor
mov
iret
cmp
rcl
fmul
push
cmp
sub
push
mov
lods
or
sahf
mov
xchg
cmp
add
sub
pop
jmp
mov
push
clc
sahf
add
mov
popa
fnsave
jnp
(bad)
clc
or
mov
cdq
call
mov
idiv
jp
jle
scas
popa
mov
daa
sbb
mov
stos
or
or
mov
fistp
iret
sbb
(bad)
sub
lods
imul
scas
lds
shl
xor
int
out
push
adc
mov
lods
mov
sbb
or
loopne
dec
pop
xchg
mov
popf
in
xor
in
push
dec
xlat
mov
mov
ret
in
mov
inc
sub
cmp
test
push
repnz
cdq
cmp
ja
into
cmp
test
cmp
pop
test
push
fdiv
div
test
jo
inc
add
jns
into
cli
or
xchg
pop
adc
pusha
push
jne
dec
xchg
ror
and
jnp
or
push
jns
pop
add
mov
imul
push
adc
pop
cwde
and
adc
(bad)
sub
pop
mov
fadd
das
loop
div
clc
loop
or
pop
mov
sbb
adc
pop
shl
das
inc
push
je
jmp
stc
sub
sahf
das
and
sbb
sar
scas
div
dec
sbb
test
inc
mov
xor
sub
sbb
(bad)
(bad)
adc
xchg
mov
xchg
(bad)
into
or
sbb
in
scas
repz
xchg
inc
push
shr
outs
push
cdq
or
fucomip
(bad)
into
jno
arpl
adc
ror
cs
or
push
loopne
jle
into
(bad)
loop
cmp
inc
cmps
push
jl
jecxz
fdiv
ins
pusha
cmp
and
pop
dec
das
jb
frndint
adc
mov
(bad)
clc
vpunpckhbw
mov
jle
pop
fmul
jnp
dec
add
sbb
pop
mov
xor
jmp
icebp
(bad)
sub
js
push
mov
mov
pop
outs
aas
js
loop
pushf
push
add
push
pop
es
push
inc
add
inc
adc
(bad)
inc
repz
cmp
bound
not
in
mov
xor
out
call
ficom
sbb
push
inc
cmc
inc
xor
jb
fs
scas
pushf
(bad)
mov
cli
iret
mov
sub
sbb
jno
out
fcomp
ins
fistp
push
das
jno
xor
ins
aam
mov
mov
(bad)
xchg
jle
cdq
and
jle
(bad)
mov
in
mov
xchg
retf
sub
or
push
fist
and
jl
xlat
das
dec
mov
xchg
fsubr
fnstcw
xor
rol
push
pop
dec
xchg
outs
sub
dec
push
mov
shr
dec
mov
cs
pop
add
mov
dec
xchg
mov
pop
xor
xchg
sub
jb
sbb
cmp
loopne
nop
jg
cmps
mov
cdq
and
or
mov
data16
inc
ds
and
ins
mov
shr
outs
ss
data16
mov
leave
jp
add
outs
cli
mov
dec
adc
pop
cmp
pop
pop
xchg
dec
sub
ror
out
hlt
mov
stc
pop
popf
push
pop
loope
(bad)
pop
or
jecxz
outs
(bad)
not
hlt
jnp
je
or
aam
mov
out
xor
mov
enter
adc
and
leave
and
or
sbb
or
cmp
pop
mov
imul
push
scas
xchg
out
sub
ret
cmp
and
(bad)
lahf
(bad)
in
int3
les
sub
loope
adc
mov
outs
dec
jmp
int3
pop
push
test
fdiv
add
nop
mov
out
std
sub
movs
out
(bad)
in
fistp
clc
push
adc
sbb
pop
les
cmps
push
cmps
mov
nop
fstp
fisub
pop
adc
jno
jl
adc
sub
push
push
in
mov
repz
mov
pop
call
mov
pop
repz
fwait
pusha
imul
fiadd
mov
bound
push
and
pop
dec
or
push
xchg
inc
hlt
pop
sar
div
xor
call
dec
pushf
(bad)
and
mov
pop
add
mov
sub
and
gs
imul
add
cmps
mov
icebp
jl
push
ret
sahf
icebp
jnp
outs
or
ss
dec
dec
data16
stos
arpl
movs
mov
mov
test
pop
dec
add
ins
loop
and
xchg
mov
nop
mov
popf
int3
out
add
cmp
sti
and
xchg
push
mov
nop
aam
mov
and
fld
or
aam
adc
sbb
adc
fdiv
repnz
rcl
dec
popa
int
xchg
enter
repz
mov
pop
xchg
jbe
call
rol
popa
sahf
mov
nop
loope
jno
mov
mov
xor
jg
mov
outs
sar
les
outs
adc
retf
mov
retf
jmp
retf
mov
je
inc
sar
mov
sub
push
dec
pop
in
jg
and
aaa
idiv
jne
push
ds
push
push
inc
arpl
ja
js
sbb
fist
mov
call
lea
and
pop
cs
ja
adc
push
iret
adc
clc
add
mov
jmp
stos
cmp
int3
push
and
push
clc
push
in
pusha
lock
mov
add
add
aaa
xor
pop
shl
cmp
adc
call
jmp
adc
and
adc
mov
xor
pushf
ret
push
mov
sub
jbe
jp
mov
retf
retf
xchg
and
lods
scas
sahf
ret
mov
shr
add
push
jl
test
rcl
mov
mov
std
sub
cmp
cmps
out
loop
cmp
pop
pop
add
dec
pop
push
arpl
pop
or
sar
xchg
(bad)
mov
(bad)
enter
jnp
dec
in
pop
jne
clc
or
int3
inc
lahf
addr16
ds
or
popa
mov
jecxz
mov
mov
js
repz
popa
test
pop
mov
stos
fmul
repz
js
mov
xor
or
js
push
ins
lock
add
adc
aam
fwait
lea
adc
ror
cwde
adc
or
inc
dec
push
mov
sbb
mov
push
pushf
add
fstp
into
repz
repz
push
sahf
stc
jns
mov
and
outs
cwde
outs
icebp
ret
inc
mov
and
push
gs
xor
ret
icebp
test
sbb
daa
jbe
sub
cmp
add
mov
movs
sahf
call
sub
das
push
inc
test
dec
popa
fsub
sub
cdq
and
and
not
clc
adc
and
fsubr
push
mov
shl
mov
jo
cdq
out
xchg
out
into
xor
sbb
pop
repnz
stc
nop
ss
pop
test
(bad)
sar
cld
(bad)
mov
push
xchg
sbb
and
push
pusha
jae
outs
popf
(bad)
cwde
mov
and
and
enter
sub
inc
dec
jno
lds
nop
fwait
mov
fidiv
in
loopne
nop
imul
pop
ds
bound
jae
fldcw
inc
push
mov
(bad)
retf
in
jmp
mov
fdivr
push
and
sahf
scas
retf
cmc
div
add
imul
xchg
cmp
push
xor
xacquire
or
repz
mov
mov
loop
xor
inc
adc
push
dec
mov
dec
dec
mov
clc
jmp
movs
int
sub
inc
jl
shl
dec
ins
pop
add
cmp
arpl
addr16
mov
jbe
out
ins
movs
adc
push
movhps
mov
add
in
lea
jae
scas
and
push
or
inc
mov
xor
popf
mov
mov
in
jno
sub
jmp
inc
mov
sbb
in
adc
lock
(bad)
mov
mov
sahf
mov
sbb
push
enter
dec
pop
lods
mov
or
mov
stos
mov
pop
bound
pop
loop
push
sub
xor
or
ja
pop
push
xchg
nop
mov
loope
das
mov
dec
xchg
popa
mov
fstp
cwde
aam
aas
xor
imul
repnz
pusha
shr
mov
in
fstp
bnd
(bad)
sub
in
pusha
jge
nop
neg
sub
and
push
shl
mov
sbb
movs
jb
inc
mov
mov
dec
pop
(bad)
cli
and
mov
movs
shl
dec
pop
gs
sbb
adc
cmp
inc
(bad)
fidiv
inc
and
mov
leave
nop
dec
add
add
out
in
(bad)
cli
les
arpl
or
or
inc
lods
mov
mov
mov
pushf
inc
mov
fdiv
mov
out
gs
aad
jp
loop
in
out
repz
mov
xchg
cmps
xchg
pop
call
(bad)
cld
sub
mov
or
or
fistp
and
sahf
jg
rol
push
not
es
fsubr
jo
jmp
pop
int3
mov
mov
into
test
jno
rcl
mov
jg
mov
lock
inc
xchg
ror
rol
lea
and
repz
cmp
jg
add
mov
add
mov
mov
adc
xor
xor
scas
fld
mov
pop
push
mov
jmp
loope
mov
add
inc
jmp
cmp
push
shl
sub
jbe
es
shr
mov
adc
sar
cmp
jg
outs
adc
sbb
cmp
movs
or
out
push
(bad)
jmp
mov
es
dec
shl
xchg
fwait
mov
not
dec
retf
fmul
fcomp
cmp
sbb
rol
in
aam
jno
bnd
cmp
xor
sbb
dec
popa
push
mov
fstp
sub
pop
shr
cmp
aam
pop
loope
je
std
mov
shr
pop
rol
pop
pop
dec
dec
arpl
mov
rcr
jnp
popa
ds
jno
stos
loop
pop
iret
int
nop
cli
add
std
pop
jno
jns
lds
aas
push
sub
mov
jns
(bad)
mov
out
mov
xor
jp
fidiv
sub
sbb
cdq
cmp
mov
jo
add
rcl
mov
cli
addr16
retf
sahf
sub
cmp
sbb
add
jmp
mov
(bad)
ds
push
loopne
stos
sbb
pop
pusha
std
xor
gs
lods
jno
add
mov
sub
stos
inc
ret
call
xor
pop
xchg
fmul
sbb
push
ins
sub
in
pop
faddp
sub
xlat
js
call
inc
jbe
cmp
jo
sub
push
stc
into
out
sub
into
mov
data16
(bad)
in
jge
mov
jg
sahf
in
fist
sub
dec
jle
xchg
sub
mov
adc
inc
pop
pop
push
not
jb
in
ret
sbb
add
dec
jmp
jl
or
or
jg
stos
les
sub
outs
aaa
adc
leave
cmp
jb
loope
outs
cwde
and
call
es
fcom
les
fistp
add
loopne
fisttp
mov
sahf
loopne
pusha
xchg
xchg
stos
(bad)
pushf
sbb
jbe
mov
xchg
and
push
shl
xchg
add
loope
push
(bad)
cmp
cmc
in
bound
jecxz
push
push
pop
out
loopne
jo
nop
ins
add
xchg
push
repz
add
mov
clc
hlt
scas
xor
dec
jnp
xchg
lock
je
es
ret
aas
add
icebp
in
jmp
cmp
mov
cwd
jmp
in
mov
imul
(bad)
push
jae
ss
mov
pop
out
rcl
cdq
mov
mov
(bad)
cmps
dec
mov
sub
push
mov
cmp
int3
sar
loope
xor
arpl
push
sub
cwde
shr
or
pop
pusha
mov
or
and
imul
and
cld
mov
cmps
dec
(bad)
ror
mov
ins
pop
cmps
in
bound
push
hlt
outs
push
(bad)
ss
jecxz
cli
sbb
enter
sahf
jp
movd
mov
pusha
mov
dec
fcom
(bad)
scas
inc
test
pop
sbb
add
mov
(bad)
jmp
mov
neg
lea
(bad)
mov
add
mov
push
stc
and
in
push
(bad)
mov
rcl
inc
ja
and
scas
fdivr
arpl
inc
(bad)
enter
or
data16
mov
sbb
adc
in
pushf
dec
push
jle
rcr
cli
push
pop
inc
das
jb
add
jle
jo
shr
jg
das
nop
inc
sub
push
test
icebp
add
jge
ins
push
fs
push
loope
sub
rcr
icebp
call
ds
loop
sub
mov
or
adc
outs
in
lods
jb
dec
sub
mov
into
xor
in
dec
in
and
loopne
loopne
cmp
(bad)
lds
push
loop
das
ins
test
mov
jmp
sar
xchg
fwait
in
sbb
pushf
inc
jnp
fisubr
rcr
push
aam
gs
xchg
iret
xchg
adc
mov
loope
dec
dec
sub
outs
mov
push
jecxz
imul
aad
das
fwait
retf
cmc
test
std
loopne
adc
ds
jg
pop
jae
pop
ds
pop
nop
(bad)
dec
add
(bad)
js
int3
rcl
jge
cs
imul
cs
(bad)
out
add
inc
and
xchg
test
push
(bad)
icebp
(bad)
bound
and
lods
jmp
test
out
test
lods
xchg
cmp
dec
inc
pusha
popa
adc
jg
outs
push
in
clc
mov
(bad)
sub
sbb
dec
stc
xor
pushaw
mov
scas
ja
repnz
jle
dec
rcr
mov
outs
ret
mov
or
pop
cdq
xchg
retf
(bad)
popa
pop
ret
mov
loope
sbb
neg
inc
shl
adc
fnstcw
movs
imul
jl
push
fucomip
push
mov
xchg
mov
xchg
(bad)
icebp
pop
xchg
mov
push
jns
loope
inc
aas
(bad)
pop
mov
lds
pusha
dec
xor
rdtsc
pop
adc
xor
cwde
lea
push
dec
push
jae
fiadd
je
aad
ret
popa
add
and
data16
push
fbstp
mov
mov
mov
xchg
cmc
pop
out
mov
inc
add
sbb
lods
push
and
cmp
vmovntpd
(bad)
fnclex
ins
retf
jmp
dec
es
inc
sbb
cld
jno
movs
xchg
mov
shr
add
adc
jo
add
mul
add
dec
push
arpl
fistp
jmp
mov
push
test
pop
data16
clc
sub
outs
bound
jo
mov
mov
jae
fstp
mov
jg
enter
cmp
or
jl
pop
sar
lea
push
inc
je
lock
stc
sbb
cmp
adc
sub
jg
jae
xchg
sub
jno
jo
lods
fidiv
cmp
dec
inc
test
idiv
inc
outs
ret
sbb
mov
mov
in
jbe
xor
xor
in
add
or
outs
push
arpl
dec
mov
mov
frstor
popa
fild
and
mov
pop
inc
test
fild
pop
xchg
dec
lods
sub
in
and
icebp
sbb
jno
js
jns
inc
mov
mov
xchg
cld
ret
mov
dec
ja
repz
xor
pop
inc
mov
js
push
push
push
mov
jno
xchg
xchg
lea
or
cs
int
retf
adc
das
sbb
pop
stc
fs
sti
aad
pop
xchg
sbb
push
mov
add
adc
test
mov
cdq
mov
and
xor
std
xchg
int3
mov
aaa
push
xor
sub
cwde
mov
call
mov
mov
jnp
push
daa
lods
popa
xchg
adc
fistp
cmp
cmp
inc
shl
dec
mov
push
(bad)
into
push
stos
out
aas
sar
or
push
test
pushf
loop
mov
pop
loopne
jns
or
xchg
mov
inc
cmps
and
xor
aad
popa
xchg
in
mov
test
gs
mov
dec
cmps
pop
cmp
or
pop
gs
add
test
sar
sub
dec
fwait
loop
mov
loope
icebp
mov
mov
(bad)
enter
dec
cmp
sbb
xchg
dec
mov
and
inc
push
hlt
mov
adc
push
push
sub
aaa
and
mov
cmp
retf
ins
sub
or
mov
mov
retf
push
nop
cmp
pop
inc
(bad)
outs
loopne
mov
push
jo
adc
add
sub
inc
mov
push
lock
scas
aas
pop
int
lock
mov
leave
sbb
inc
popa
(bad)
cmps
rol
test
push
in
dec
enter
loopne
inc
fist
cmc
mov
sahf
pusha
pop
imul
loopne
std
cmp
lods
or
add
ins
leave
les
fsub
fcom
mov
nop
shl
mov
sti
call
test
and
test
jnp
in
push
sub
into
pop
(bad)
or
adc
sub
lock
std
je
or
retf
repnz
or
mov
je
cmp
sbb
gs
pop
pop
sar
push
lahf
add
adc
fisub
push
je
cmps
jns
(bad)
call
cli
stc
or
mul
ins
push
rol
rcl
jg
add
add
aad
mov
sub
aad
xor
mov
lods
shl
push
popf
or
shl
ins
(bad)
fcmovb
sbb
fsubr
lock
xor
ins
jle
add
rcr
dec
and
sahf
daa
push
dec
xor
sti
cmp
out
inc
jecxz
or
push
dec
mov
xor
in
push
popa
and
xchg
div
mov
in
imul
dec
add
jo
xor
or
mov
aam
cld
jmp
call
cmp
fsin
retf
add
fiadd
out
loop
lods
and
xchg
adc
stos
and
adc
mov
pop
inc
shl
cmp
lds
dec
or
(bad)
pop
je
sbb
pop
adc
cmp
mov
test
mov
aas
(bad)
jo
and
dec
(bad)
jbe
sub
sub
and
(bad)
adc
xor
xchg
jno
mov
dec
popa
femms
inc
movs
pop
(bad)
shl
data16
mov
push
mov
movs
or
mov
dec
and
mov
adc
mov
(bad)
lods
je
lahf
test
inc
xor
pop
jno
lock
ror
push
jbe
and
(bad)
pop
je
(bad)
sbb
mov
adc
je
xchg
into
or
inc
mov
add
pop
dec
cld
inc
adc
shr
outs
jo
inc
fldenv
or
add
lea
cli
lea
add
ins
stos
loop
rcr
sub
test
cmc
lock
test
and
mov
aam
fst
out
xor
xchg
fisub
xor
push
xor
int
cmp
inc
inc
call
mov
dec
gs
sub
sbb
out
push
es
inc
pusha
scas
int3
clc
cdq
jg
pop
sbb
sub
ror
xor
adc
xchg
cmp
adc
mov
jno
sti
test
sub
and
inc
neg
dec
outs
scas
fild
cld
mov
js
in
je
and
scas
lock
xchg
mov
and
dec
lods
mov
xor
int
pop
aaa
add
push
jno
into
test
not
cmp
aad
test
adc
adc
jmp
pop
xchg
and
jp
add
aam
popa
jecxz
xor
inc
push
mov
xchg
ds
jmp
repz
jmp
sub
fiadd
push
xchg
xchg
mov
and
fst
sbb
dec
add
xchg
adc
jl
xor
sahf
cwde
and
inc
xlat
cwde
retf
ins
shl
jmp
add
and
and
test
and
adc
mov
or
add
es
imul
sub
sahf
mov
add
outs
repnz
ret
and
xor
inc
je
das
retf
adc
jbe
stos
mov
mov
test
out
mov
idiv
push
test
mov
mov
in
cwde
jnp
rcl
xor
lock
jge
cs
inc
and
sahf
sub
sar
mov
push
pop
ins
rcl
fld
push
jno
push
mov
and
test
cmps
pop
punpckhbw
push
enter
pop
fs
adc
les
jle
inc
das
fcom
xchg
cs
push
xchg
in
inc
push
out
add
or
mov
mov
fisttp
mov
or
nop
into
repnz
fdiv
inc
int3
pop
sub
scas
jg
xchg
dec
in
mov
imul
fdiv
push
fimul
mov
xchg
rcr
leave
add
pusha
pop
sar
and
mov
jp
test
aas
and
sbb
mov
dec
shl
ret
loope
sub
xchg
in
ds
push
push
add
jb
jmp
cmp
jmp
into
sub
adc
jne
xor
add
scas
xor
mov
inc
push
loop
mov
out
xchg
cwde
ror
push
inc
outs
js
jle
jb
dec
jae
(bad)
mov
cmp
jmp
popf
(bad)
xor
push
sub
pushf
inc
add
adc
cld
sar
mov
int3
sahf
out
push
jo
xor
adc
rol
xchg
ss
lods
out
inc
adc
or
adc
add
cmp
pop
cmp
iret
xchg
pop
movs
add
movs
dec
into
cli
mov
mov
adc
or
mov
cmp
mov
adc
scas
popa
ins
pop
ror
call
jbe
sub
xchg
into
cmp
inc
ds
loope
(bad)
jl
mov
pusha
mov
and
jb
push
out
lock
add
inc
dec
aam
imul
and
sbb
add
sub
(bad)
and
icebp
out
sbb
jl
xchg
psubb
out
in
push
xor
push
(bad)
mov
ret
mov
push
mov
ret
ds
jecxz
pop
in
dec
and
ror
retf
push
in
lds
or
add
loop
xchg
popa
fwait
hlt
mov
inc
fldln2
mov
mov
not
nop
imul
xchg
pop
bound
inc
dec
jbe
cli
scas
fidiv
loope
xchg
int3
pop
mov
mov
mov
mov
faddp
int
imul
xor
or
mov
sahf
mov
(bad)
jmp
push
push
outs
(bad)
int3
adc
test
in
xor
adc
xchg
add
mov
jle
enter
(bad)
mov
lock
outs
andn
stc
cmp
lods
lock
add
fistp
and
repnz
xor
scas
into
xor
loopne
mov
fdiv
push
iret
loopne
inc
mov
mov
jo
push
or
sahf
xor
sahf
pop
loopne
les
popaw
test
mov
or
mov
out
shl
mov
out
xor
inc
ret
(bad)
mov
clc
dec
jmp
outs
fidivr
mov
push
nop
stos
sahf
push
lods
jmp
aas
pop
and
test
fild
add
jo
loop
call
pushf
push
jp
inc
retf
rcr
into
sub
nop
push
iret
mov
and
js
xlat
fdiv
pop
mov
push
ins
dec
jmp
sti
and
enter
call
call
and
mov
sub
jns
lea
push
or
add
out
push
retf
mov
outs
xchg
or
arpl
cmp
in
jb
retf
or
sub
stos
xchg
push
cwde
lock
push
pushf
test
jmp
sbb
mov
dec
or
push
jae
xchg
pop
xchg
mov
das
(bad)
mov
movs
or
lods
ja
and
out
faddp
into
lock
scas
xor
fs
pop
mov
sbb
cmp
jo
jnp
add
in
inc
push
hlt
push
push
sub
loope
xor
and
scas
and
in
jle
daa
pop
test
sub
mov
movs
in
xchg
sti
inc
call
pop
mulps
xchg
ds
popa
je
icebp
scas
xchg
dec
aas
fmul
out
pop
dec
add
jae
data16
inc
jle
pushf
pop
mov
inc
inc
aad
xor
jle
(bad)
sbb
cmp
push
mov
(bad)
push
leave
and
cmc
sahf
nop
repz
mov
stc
jmp
jg
pop
call
add
in
push
adc
sub
scas
pushf
sbb
jmp
pop
lock
sets
dec
ins
inc
push
dec
mov
xchg
mov
jmp
push
inc
retf
je
jp
or
xchg
data16
push
xchg
cld
inc
sbb
mov
stos
xor
ret
addr16
ds
xor
jno
arpl
lock
cld
ja
mov
mov
mov
xlat
sbb
cmp
sbb
and
into
shl
jecxz
mov
jmp
in
sahf
mul
sub
jl
pusha
cdq
push
inc
ret
pusha
sahf
xchg
test
mov
adc
xor
mov
sbb
outs
add
ja
jle
dec
mov
stos
rol
adc
loope
js
popa
pop
popa
sbb
(bad)
mov
sub
cmps
into
(bad)
push
arpl
and
leave
ins
and
push
or
cmp
ds
test
sahf
into
and
ins
inc
pop
and
ffreep
adc
pushf
push
rcr
push
sahf
add
add
xchg
fild
xchg
xchg
xor
shl
int3
leave
cs
pop
fwait
sbb
mov
sbb
mov
nop
lahf
test
jecxz
int3
push
mov
les
shr
sahf
xchg
ficom
(bad)
mov
imul
cmp
(bad)
or
inc
push
lds
and
scas
cli
mov
imul
popa
es
and
jne
dec
pop
or
test
jmp
mov
push
xor
adc
adc
outs
dec
jo
inc
sub
jb
dec
iret
xchg
ficom
outs
mov
bound
hlt
ds
test
mov
mov
push
sbb
(bad)
int3
push
(bad)
xchg
xor
pop
in
inc
lods
inc
sahf
push
hlt
xor
sbb
aad
dec
xor
sbb
pop
sbb
repz
push
adc
dec
(bad)
loope
test
in
mov
and
out
cmp
cmp
dec
sub
cs
das
push
stos
xchg
stos
jne
retf
pusha
pushf
push
sub
cdq
shl
jle
call
or
xchg
pusha
inc
sbb
jle
mov
cmp
add
dec
jae
outs
popa
loopne
fistp
add
jp
pop
add
adc
lds
scas
push
inc
test
or
cmp
mov
inc
push
add
sub
loope
icebp
in
lahf
and
lahf
fstp
mov
std
jmp
es
pop
jl
push
cs
ins
jo
xchg
and
addr16
mov
mov
into
cmp
pop
jnp
js
jae
push
pop
sar
adc
loop
inc
or
cs
lods
mov
mov
mov
dec
push
inc
clc
ret
and
dec
mov
lods
sbb
idiv
push
clc
xchg
inc
aad
add
dec
std
shl
lock
inc
mov
fwait
mov
adc
aad
dec
je
inc
add
xchg
(bad)
and
mov
and
fdiv
in
arpl
mov
ins
popa
scas
int
(bad)
mov
pop
sbb
ins
push
popf
cmp
sub
jmp
mov
jo
cmps
add
mov
mov
fild
cmps
aaa
jne
jnp
push
adc
ins
in
loop
aad
jmp
jo
icebp
scas
movs
jg
pop
sbb
mov
push
mov
mov
mov
icebp
mov
jne
xchg
push
push
mov
scas
pushf
aas
test
xchg
retf
xchg
cwde
je
or
pop
adc
push
fwait
bound
add
iret
ret
fs
or
hlt
and
and
retf
movs
cmc
pop
rcl
call
mov
sbb
popa
cld
adc
adc
xor
nop
mov
push
sbb
fild
in
loop
repz
rcr
shl
je
jb
jbe
adc
mov
mov
cs
jb
sub
sub
daa
adc
outs
int
mov
das
xor
pop
nop
loopne
int
jecxz
es
mov
sbb
inc
jb
mov
call
ss
add
outs
es
popa
mov
sbb
jae
push
sbb
sbb
mov
mov
lods
push
add
lock
push
shl
pop
movs
xchg
dec
shr
add
call
cs
gs
add
neg
imul
mov
outs
repz
dec
pop
iret
xchg
adc
pushf
enter
arpl
jmp
dec
les
add
inc
fnop
jle
loope
imul
retf
or
add
adc
adc
cmc
cli
shl
fs
fadd
pop
cli
out
mov
and
and
jae
(bad)
in
mov
stos
sahf
dec
shr
aas
lods
fiadd
mov
popa
fidiv
(bad)
xor
popa
cmp
sbb
add
ss
test
fimul
sbb
mov
shl
loop
aas
xchg
dec
dec
leave
fcomi
push
outs
sbb
ins
or
arpl
mov
push
or
sar
pop
pop
add
xor
cmp
shr
xchg
aas
rol
scas
pop
cmp
scas
mov
jp
out
xchg
adc
shl
xor
mov
dec
jge
push
mov
pop
pop
cmc
sub
lods
push
xchg
jle
sahf
mov
pop
or
cld
loopne
fcom
add
(bad)
jmp
jg
loopne
inc
popa
pushf
jne
jae
push
mov
aad
xor
(bad)
jmp
sbb
outs
sub
ds
out
ja
sbb
ret
scas
and
rcr
movs
jo
outs
fcmovnu
mov
jp
repnz
je
movs
ficom
fbstp
cld
sub
adc
(bad)
loop
adc
dec
cli
add
sar
scas
das
fadd
dec
jne
fs
dec
loope
sbb
xlat
mov
pop
(bad)
mov
dec
add
inc
jle
outs
es
test
xor
inc
or
(bad)
jmp
mov
int
jb
ins
iret
sbb
and
mov
movs
shl
or
movs
ins
jnp
push
xchg
aaa
out
nop
repnz
sbb
daa
fld
push
int3
sub
and
adc
out
dec
xchg
fwait
mov
int
push
test
push
cmps
jecxz
add
push
push
dec
pop
dec
jo
push
or
ror
pop
dec
push
hlt
repnz
cmc
test
ins
xchg
pusha
jecxz
mov
sbb
push
rcr
js
call
and
cmp
out
bound
mov
sahf
sub
call
sub
ins
nop
call
mov
xor
push
test
rcr
psrld
push
and
xchg
sbb
add
jo
sub
cmps
fild
mov
enter
xchg
jno
and
mov
test
mov
test
jo
arpl
push
lods
sahf
(bad)
cmc
sbb
or
int
pop
dec
push
and
or
dec
sub
push
push
loopne
mov
adc
fiadd
dec
mov
cmp
inc
out
aam
imul
repnz
data16
iret
les
cmp
mov
adc
pop
(bad)
jmp
add
ds
imul
loop
jmp
jae
xchg
test
push
cwde
sar
xor
jno
sub
or
dec
loop
iret
sbb
ds
add
mov
mov
stos
ror
popa
push
push
movs
or
inc
rol
add
dec
aam
movs
adc
fwait
xchg
test
xchg
cmp
(bad)
adc
push
shr
pop
cs
aad
retf
push
and
pop
push
adc
addr16
ret
cmp
jae
cmps
ficomp
sbb
outs
xchg
dec
jnp
jo
push
popf
adc
inc
pop
je
mov
rcr
ss
and
jg
and
add
jno
pushf
in
pop
lods
loop
sbb
xor
mov
(bad)
jne
pushf
sti
scas
popa
mov
sar
cli
push
loopne
mov
shl
xor
push
and
jle
jmp
mov
out
pop
xchg
xchg
mov
popf
clc
dec
loopne
xchg
pop
and
sub
clc
in
test
popa
popf
cmps
call
dec
rcl
rcr
icebp
dec
movs
repz
inc
inc
scas
arpl
sar
mov
fwait
aaa
and
ins
test
pusha
jp
cmp
nop
out
pop
leave
mov
loope
fcmove
add
enter
aaa
pop
mov
rcr
data16
push
nop
scas
inc
dec
jmp
(bad)
fdiv
(bad)
icebp
xor
xlat
mov
data16
fild
jae
xor
fldz
xor
gs
in
push
jb
popa
sub
pop
mov
fnstsw
test
fbld
dec
and
mov
mov
mov
mov
mov
es
mov
(bad)
icebp
and
dec
jbe
jge
dec
sbb
(bad)
out
mov
shr
inc
add
and
jl
sub
icebp
mov
add
retf
mov
pop
pop
scas
adc
(bad)
xor
retf
dec
call
xor
inc
add
ds
sahf
and
js
jp
out
icebp
stc
jo
mov
xor
leave
dec
out
mov
loop
test
mov
pand
sub
mov
mov
loop
mov
sbb
jb
fwait
sti
fwait
inc
inc
and
stos
dec
push
loopne
xchg
cmp
out
scas
call
inc
call
ja
sub
out
in
ins
in
lods
push
pop
xchg
cmp
popf
dec
paddd
fldl2t
dec
push
sub
pop
push
pop
sub
stos
fcmovnu
push
inc
push
pusha
jmp
adc
ret
cld
dec
ins
sub
outs
std
sahf
xchg
mov
xchg
cs
mov
in
mov
add
or
xchg
jne
cmp
retf
and
repnz
push
inc
rol
out
outs
and
mov
test
pop
jo
inc
lahf
jmp
add
mov
push
xor
inc
add
dec
pop
sbb
repz
add
dec
sahf
jge
jae
adc
xor
jb
adc
cmp
(bad)
lahf
fadd
and
jae
or
pop
sub
add
jmp
ds
in
xchg
nop
jmp
sub
inc
push
ror
jo
das
test
mov
pop
shl
and
dec
jle
and
out
les
sbb
cwde
(bad)
pushf
pop
cmc
inc
sub
stos
xor
cmp
fisttp
add
xor
ds
js
push
cmp
call
xor
icebp
push
jmp
push
xchg
jb
or
or
cld
cs
das
repz
sti
hlt
cmp
shl
push
popf
je
and
or
(bad)
cld
xor
dec
loop
pop
sbb
shr
jb
push
rcr
mov
dec
cwde
call
mov
fs
push
test
mov
push
call
cmp
xor
fistp
fdivr
lock
out
xor
add
scas
add
call
sub
lahf
xlat
mov
mov
shr
call
adc
and
inc
inc
xor
push
inc
jb
jg
add
mov
sub
mov
push
bound
shld
mov
(bad)
jno
jb
push
mov
out
ds
stc
dec
je
out
in
push
imul
cli
xor
jns
cdq
push
mov
iret
ror
mov
cmp
xor
test
popa
(bad)
int3
outs
xor
mov
cli
icebp
pop
xor
pop
mov
scas
dec
adc
or
mov
dec
jecxz
mov
ror
xor
es
nop
mov
pop
pop
lock
add
movs
xchg
mov
ror
into
lods
jl
xor
dec
repz
cs
dec
dec
sbb
sub
ins
jl
mov
sub
clc
push
in
in
inc
nop
mov
jne
idiv
jnp
adc
cmp
adc
lock
out
or
xor
push
je
ret
xchg
sbb
fs
fst
ret
shl
push
xor
je
mov
push
dec
push
pop
jb
mov
and
in
mov
xchg
pop
mov
inc
test
or
add
cmps
call
or
ficom
pusha
js
ret
add
(bad)
jmp
or
cli
outs
nop
jne
mov
mov
inc
xchg
in
fldcw
call
push
push
adc
lds
retf
addr16
ret
pop
sub
inc
xlat
push
jb
fisttp
xor
lods
int3
cmp
jmp
sub
(bad)
nop
pop
xor
fwait
(bad)
div
mov
loopne
rol
sbb
outs
jno
inc
bound
in
inc
icebp
cmp
xchg
xchg
shl
jmp
mov
xor
or
popa
in
outs
test
mov
repz
neg
pop
jbe
sbb
ins
(bad)
hlt
lahf
test
shl
or
aam
sbb
(bad)
xor
es
mov
outs
sahf
xor
mov
adc
mov
fs
pop
shr
rol
jl
ret
ins
call
xchg
stos
mov
ret
sbb
repnz
(bad)
dec
shr
adc
mov
sahf
dec
sysret
ds
cmp
mov
es
(bad)
popf
jne
jo
dec
pusha
mov
and
cmp
sbb
inc
adc
inc
mov
cmp
movs
push
sti
shr
sahf
xchg
int3
adc
push
out
xor
add
mov
(bad)
sub
xchg
mov
std
push
hlt
(bad)
lahf
std
rcr
and
or
xor
test
push
mov
mov
mov
pop
xor
(bad)
in
mov
or
lock
mov
adc
vpmaxsw
dec
sub
adc
xor
movs
imul
mov
or
mov
mov
ds
rcr
pop
pop
and
fxch
mov
inc
mov
adc
test
sub
mov
add
cmp
shl
rol
and
fidiv
jle
popf
jle
jmp
repz
out
sub
xchg
ss
mov
mov
out
out
jecxz
shl
(bad)
mov
jge
jbe
sub
nop
repnz
xor
xchg
sub
jo
out
sub
dec
adc
dec
popf
idiv
inc
ret
and
test
pop
mov
pop
sub
icebp
cmps
shl
movs
dec
fcomp
cmp
push
jge
popa
jno
inc
sub
xlat
ret
cmc
and
retf
mov
fdiv
data16
jno
mov
loop
popa
popf
fisub
dec
aad
shl
mov
jnp
and
mov
push
outs
sbb
test
dec
movs
popf
cmp
xlat
pop
ja
fs
mov
mov
aas
push
mov
sar
data16
test
mov
pop
les
ss
ins
lds
neg
in
int3
popf
ss
jmp
sbb
movs
es
sbb
shl
adc
movs
xor
xor
(bad)
leave
sub
cmp
mov
iret
add
sub
sub
pop
jl
push
popa
xor
not
adc
sub
add
call
push
cmp
out
sahf
movs
add
xchg
jmp
retf
jecxz
(bad)
out
push
sub
adc
mov
push
or
xor
int
pop
js
(bad)
test
arpl
mov
jp
shl
cli
mov
ins
xchg
and
mov
xchg
sbb
jo
bound
rcl
lods
loope
or
not
popa
or
inc
in
xor
pop
cmp
jmp
js
xor
int3
push
mov
pop
add
push
test
mov
les
add
xchg
add
inc
jg
stos
jns
(bad)
jp
out
pushw
shl
int
nop
shl
jno
xlat
retf
jmp
dec
aas
and
lods
xchg
pop
xchg
pop
mov
(bad)
into
mov
jae
dec
das
test
addr16
pop
movs
push
pop
(bad)
int
or
add
xor
sbb
cmc
arpl
or
xor
jae
add
dec
cmp
hlt
pop
inc
inc
jnp
test
mov
mov
or
dec
sub
fidiv
rcr
iret
mul
cmp
test
push
lods
inc
int3
fsqrt
and
sar
mov
and
jo
sub
aam
mov
mov
mov
out
fimul
or
dec
jg
(bad)
push
das
inc
push
enter
retf
jl
enter
or
shr
jo
data16
jg
test
sbb
add
nop
mov
idiv
imul
das
jp
stc
xor
mov
adc
jno
gs
je
retf
sub
mov
jg
lds
xchg
rcr
test
icebp
std
sti
int
fsub
scas
out
dec
leave
loop
adc
or
push
stc
into
in
push
or
push
mov
ret
les
push
dec
add
fwait
rcl
neg
aad
jge
or
shr
adc
imul
inc
xor
in
mov
pop
(bad)
fcomp
fs
push
push
shl
jnp
les
adc
add
ss
or
jle
movs
sub
mov
popa
int
fild
sbb
or
jg
dec
cmp
pextrw
pop
pop
imul
fld
gs
add
and
cmps
outs
push
jg
mov
in
movs
fucomi
test
fmulp
mov
mov
mov
sbb
or
mov
sbb
dec
cdq
push
test
mov
ss
lahf
call
ins
push
cmc
push
mov
jge
rol
cmp
shl
pcmpeqd
add
dec
adc
ins
loop
clc
xchg
and
je
cli
bound
lds
mov
cdq
je
mov
push
scas
dec
adc
es
xor
sbb
pop
ror
mov
std
(bad)
add
jge
rcr
out
and
jnp
sbb
movs
and
je
ja
xchg
or
int
add
lods
std
mov
mov
push
fs
pusha
pop
add
popa
jle
pushf
inc
mov
push
sahf
out
cdq
fcmovu
mov
push
jnp
adc
sub
fcom
int
add
scas
xchg
clc
in
pop
mov
push
imul
or
adc
(bad)
mov
das
pop
fs
ins
cdq
sbb
cmp
je
ins
and
jbe
and
sub
adc
cmp
pop
pop
sub
mov
loop
fstp
cmp
xor
add
loope
pusha
nop
neg
or
inc
push
daa
inc
cmp
in
cs
int3
mov
and
sbb
push
dec
mov
jns
in
mov
cli
jno
jmp
bound
sub
bound
scas
pop
xor
pushf
lods
jae
shr
cld
fcom
mov
mov
mov
sar
sub
add
push
ror
xor
dec
mov
push
repnz
push
cli
rcl
jmp
imul
sbb
sub
js
xchg
pop
xor
mov
xor
push
xchg
outs
and
loope
pop
and
or
(bad)
pop
ss
call
sar
mov
iret
mov
jmp
or
fnstsw
std
in
xor
das
and
xchg
out
test
mov
mov
and
adc
mov
aam
mov
dec
aas
pop
stos
or
xor
(bad)
les
xchg
cmps
cmc
ins
push
mov
mov
in
push
cmp
jbe
and
xor
(bad)
dec
enter
clc
je
sar
and
int
enter
es
retf
add
scas
js
out
adc
scas
int3
rcl
fcmove
dec
mov
add
sbb
mov
loope
cli
les
hlt
adc
jo
int3
loop
lock
add
cmp
retf
inc
iret
push
ins
loopne
xor
in
push
cmps
mov
fild
xchg
imul
outs
rcr
std
inc
add
ret
xchg
sub
call
addr16
push
cmp
lock
add
pop
shl
add
inc
out
aad
xor
add
xchg
or
jle
jp
dec
shr
fild
xor
bound
or
retf
push
and
cmp
scas
lods
punpcklwd
stc
add
and
sub
call
mov
test
cmp
(bad)
in
sub
inc
call
or
cwde
outs
pop
cmp
jle
jge
pop
inc
xor
repnz
jnp
dec
and
mov
imul
push
add
jae
cdq
pop
imul
call
dec
ins
fiadd
xor
xor
shr
outs
jp
shr
mov
daa
inc
into
mov
lock
repz
lahf
adc
rol
mov
jns
test
fnsave
xor
inc
push
add
or
out
es
daa
adc
test
fild
xchg
jnp
cmp
mov
push
cmc
movs
call
dec
sti
jecxz
push
add
add
add
or
jg
cs
mov
mov
je
movs
out
sub
dec
mov
or
shl
ja
and
xchg
(bad)
sbb
cli
shr
pop
ins
addr16
jg
mov
cmps
jmp
mov
sub
retf
or
jl
pop
and
adc
mov
pop
mov
stos
(bad)
loop
jbe
xchg
ficom
js
add
cmp
or
push
cmps
lods
leave
aaa
jmp
sbb
loopne
mov
mov
or
or
and
call
iret
xchg
ds
xchg
fsubr
test
xor
ret
lds
push
dec
mov
push
dec
jnp
fptan
jmp
add
adc
sti
cmp
out
mov
pop
mov
jmp
aas
ror
jp
xchg
shl
dec
or
std
addr16
(bad)
and
xor
mov
xchg
rol
mov
imul
jo
xchg
fwait
lods
(bad)
je
mov
push
jae
add
and
(bad)
in
fucom
rol
jo
or
retf
fistp
pusha
xchg
stos
xchg
mov
loope
cmp
fidiv
into
dec
sbb
mov
dec
popf
das
(bad)
cmp
int
mov
inc
dec
div
or
jb
pop
outs
or
inc
mov
cli
rol
mov
fidiv
popf
and
retf
inc
out
sub
pop
fdiv
sbb
lahf
push
xchg
icebp
je
inc
lahf
lea
ins
adc
inc
inc
add
das
retf
or
ficom
lds
xchg
aam
stc
xor
lea
pop
in
pop
push
or
outs
push
cdq
gs
pop
sub
push
pop
loop
add
(bad)
fwait
adc
adc
sub
imul
push
in
mov
push
sbb
and
dec
je
cmp
or
clc
pop
jns
push
mov
mov
sar
jb
dec
adc
dec
fbstp
sub
iret
mov
push
xor
dec
xlat
rcl
fs
sbb
mov
xchg
xor
aaa
in
inc
jg
fdivrp
inc
(bad)
mov
dec
ret
jmp
sbb
loop
es
fild
cmp
repz
cmp
imul
jle
jge
fiadd
(bad)
xlat
pushf
jnp
mov
(bad)
jb
push
fiadd
outs
adc
lock
xchg
xor
fnstsw
fcomp
jp
cs
push
lock
or
mov
xor
jbe
sub
retf
push
dec
cmc
mov
pop
mov
retf
sbb
fs
inc
ins
popf
pop
and
inc
pop
push
dec
pop
jbe
xor
shl
rcr
mov
out
loopne
pop
std
jo
jmp
cmp
(bad)
cmps
out
movs
mov
fsub
fwait
push
clc
rcr
xor
lahf
xor
scas
sbb
mov
jecxz
and
xchg
mov
aam
dec
sar
std
push
cmp
jo
mov
inc
jb
or
and
fs
imul
mov
nop
int
cmp
dec
sbb
mov
push
movs
scas
les
loopne
push
pop
daa
int
popf
jb
test
shl
inc
movs
mov
scas
lods
mov
push
inc
fsub
psubb
stos
and
mov
fadd
jmp
xchg
scas
push
dec
inc
rcr
sbb
mov
sub
cmp
jge
xchg
mov
add
add
mov
adc
scas
ins
mov
sbb
inc
stc
sbb
sbb
mov
stos
icebp
jge
loopne
mov
daa
add
inc
mov
call
repz
pop
or
mov
mov
xor
loopne
lahf
mov
mov
data16
sti
mov
or
jb
(bad)
mov
or
ins
aaa
(bad)
retf
dec
xchg
test
popf
xchg
pushf
xchg
cmps
aam
loop
xchg
mov
(bad)
mov
gs
xor
push
retf
mov
push
je
lods
mov
xchg
push
xor
mov
sbb
int3
or
xchg
es
scas
cmp
(bad)
movaps
pop
dec
or
and
mov
shl
jbe
idiv
add
add
xor
mov
(bad)
mov
test
stos
fcomp
jmp
pop
jmp
call
repz
xchg
pushf
fwait
sbb
adc
push
mov
inc
dec
sbb
(bad)
push
sahf
ins
into
or
xor
adc
or
neg
cld
shr
rep
(bad)
adc
push
sbb
out
push
scas
mov
mov
sahf
adc
sti
mov
xlat
and
adc
push
mov
data16
cmps
mov
je
mov
in
push
test
add
mov
ret
cmp
into
int3
pop
dec
push
and
jp
push
mov
push
(bad)
into
ins
or
push
cdq
loope
xchg
xor
mov
hlt
sbb
push
dec
push
inc
popa
push
sbb
inc
jae
dec
aam
xor
test
ds
xchg
sbb
fidiv
call
xchg
mov
inc
outs
jno
and
lahf
mov
shl
arpl
call
xchg
xchg
jle
push
mov
mov
rol
mov
shr
scas
rcl
pusha
push
jo
lea
push
adc
jl
xchg
dec
sbb
push
ficomp
sbb
push
sbb
rcr
mov
and
retf
inc
cmp
mov
mov
push
mov
lods
nop
xchg
hlt
sti
gs
adc
pop
jg
ror
mov
inc
or
and
(bad)
lea
mov
dec
xchg
adc
(bad)
push
fsub
cmp
enter
sahf
jl
mov
dec
in
cmp
fidivr
cmps
adc
pop
lea
ins
jnp
or
aas
jae
push
dec
pusha
pop
cmps
sub
push
pop
pop
mov
nop
scas
jno
push
lea
out
cdq
jns
mov
xchg
in
mov
sahf
and
push
shl
mov
push
cmp
dec
imul
nop
cmp
adc
mov
pop
fld
add
sub
sbb
cmp
xlat
add
push
in
scas
aaa
repnz
add
push
mov
scas
and
fwait
mov
mov
pop
jecxz
push
in
and
adc
mov
and
or
dec
inc
ficom
data16
ja
jmp
xor
arpl
shr
fld
fnsave
sbb
mov
jmp
pop
or
data16
cmp
call
lods
push
add
or
icebp
ja
rcl
loope
loopne
lods
call
adc
loop
(bad)
bound
bswap
xchg
loop
cs
push
sub
mov
je
outs
rcr
sub
popa
call
push
in
mov
xor
sub
dec
dec
push
jno
sahf
test
add
fidiv
cli
or
ror
push
mov
out
das
cmp
inc
inc
movs
mov
nop
lods
mov
shl
xchg
lods
ds
sahf
loopne
jb
icebp
test
cmp
push
push
or
inc
mov
or
pop
test
fsub
sub
outs
loopne
jle
jb
sub
pop
mov
out
mov
lea
adc
and
inc
jecxz
fstp
inc
movs
mov
icebp
retf
xchg
call
xchg
or
or
int
push
inc
fucomp
jl
adc
pop
dec
sbb
(bad)
push
mov
pop
icebp
adc
mov
stos
call
mov
mov
add
jbe
mov
addr16
mov
dec
cmp
loopne
(bad)
(bad)
dec
mov
add
cwde
push
outs
jg
cmps
inc
or
mov
and
sub
loop
loope
or
repz
push
push
(bad)
inc
inc
mov
scas
mov
add
pop
iret
jle
push
xor
inc
(bad)
out
mov
and
fistp
xchg
lea
jle
pop
fisttp
adc
mov
pop
jle
std
data16
xchg
mov
bnd
test
dec
push
(bad)
push
inc
outs
jecxz
cmc
dec
jo
outs
arpl
push
lods
movs
cmc
movs
mov
push
test
pop
push
pop
push
movs
xor
ins
out
xor
xor
inc
call
mov
push
mov
into
popf
retf
call
aad
(bad)
sbb
sbb
jae
dec
pop
pushf
mov
push
pop
pop
and
aas
push
pop
ss
jno
pop
push
inc
fisubr
sbb
pop
js
add
sbb
mov
xor
dec
test
lods
adc
jnp
into
ret
lods
jecxz
mov
pusha
rcr
jne
out
retf
fmul
cli
int3
inc
xchg
dec
fsubp
int
test
mov
mov
mov
xor
or
sub
and
imul
dec
mov
aad
aad
pop
(bad)
or
dec
test
cli
icebp
nop
imul
xchg
cmps
jle
jne
jo
pusha
retf
and
adc
xlat
or
cmp
push
sbb
push
push
push
sub
mov
xchg
repz
adc
cmc
loopne
rcr
mov
iret
bound
icebp
aam
pop
pusha
ds
and
ret
test
push
push
sub
out
or
dec
jne
jle
add
sub
ins
test
and
(bad)
dec
sub
and
xchg
add
dec
repz
lock
jae
cmc
xor
xor
sbb
dec
outs
adc
and
add
pusha
and
mov
xchg
out
push
and
pusha
xchg
inc
sbb
jl
cdq
mov
mov
inc
xchg
jno
lock
aad
jb
add
pop
pop
scas
push
sar
outs
mov
retf
pushf
adc
lods
ret
xor
arpl
mov
and
or
xchg
pop
fisubr
outs
(bad)
into
clc
inc
xadd
lock
out
jl
push
mov
arpl
sbb
or
mov
neg
pushf
xchg
jp
cwde
push
stc
jl
jne
pusha
out
adc
std
and
loope
pop
rol
xchg
cmp
xor
aam
rcr
sti
scas
xchg
sbb
jp
je
pop
xor
jno
xor
(bad)
mov
neg
mov
jo
pop
call
cmps
shr
adc
pusha
mov
mov
in
iret
out
test
or
jp
jo
dec
jno
mov
(bad)
pusha
xor
cwde
and
push
and
stos
lods
xor
out
fnstcw
push
xor
std
ror
pop
jns
mov
push
(bad)
mov
ds
push
cmps
jae
pop
mov
(bad)
mov
repz
jae
mov
pop
push
test
or
out
push
push
xchg
sahf
shl
push
pop
jmp
lds
js
push
xchg
iret
xor
inc
and
dec
in
xchg
adc
push
loopne
sub
mov
fstenv
loope
mov
push
dec
pop
mov
cs
out
adc
ins
dec
js
sar
test
das
cmp
pop
or
ret
dec
cs
pusha
scas
or
cmp
fimul
or
pop
xor
or
mov
jmp
loopne
dec
(bad)
inc
mov
fdivrp
mov
rol
je
out
mov
lahf
jb
std
test
das
scas
stos
pop
fisub
addr16
inc
sub
sub
adc
jp
retf
inc
push
outs
mov
clc
sbb
dec
mov
loop
rcl
push
clc
pop
push
mov
or
jl
arpl
aaa
mov
sar
mov
bound
neg
push
jbe
rcl
(bad)
ins
push
mov
push
(bad)
cld
clc
add
lock
adc
sbb
xor
add
xchg
dec
popa
inc
sti
scas
mov
ss
int3
repz
push
in
add
jg
inc
sbb
sub
shl
fcom
fisub
fxch
call
lahf
lock
loopne
jno
add
loop
cmc
push
loope
or
pop
mov
sar
aam
add
lds
jo
cmp
add
adc
or
xchg
mov
bnd
mov
add
push
sbb
mov
push
inc
arpl
cmp
and
push
rol
and
jge
xchg
neg
mov
loopne
or
ins
ret
(bad)
cli
ins
lods
pop
mov
pop
or
and
add
xor
js
fwait
xchg
and
(bad)
sbb
sysenter
cmp
add
pop
cmp
dec
scas
xor
in
lds
adc
pop
out
sar
shl
push
adc
xor
(bad)
jle
pusha
jo
mov
out
mov
in
std
shl
sub
pop
icebp
add
pop
pop
inc
mov
dec
push
pop
pop
pop
mov
into
call
inc
rcr
out
mov
sbb
xor
pop
sub
clc
add
gs
ror
clc
icebp
(bad)
cld
push
sbb
pop
out
das
jp
and
add
or
call
jno
in
addr16
js
jle
les
sub
cmp
push
add
push
cmp
sbb
rcr
aam
and
popf
push
fbld
ja
jp
mov
xor
mov
ja
daa
push
xchg
(bad)
pusha
inc
xor
je
jecxz
xor
test
popa
jl
push
lods
mov
lods
mov
fisttp
and
cmp
ss
xor
inc
out
pushf
pushf
jbe
mov
retf
mov
jae
iret
(bad)
div
leave
imul
out
mov
add
dec
inc
jl
mov
cmps
pop
xor
xchg
cwde
push
scas
sub
xchg
inc
ins
dec
ja
push
lea
enter
dec
adc
aad
pop
adc
outs
aas
adc
inc
jo
cs
movs
xchg
mov
movs
mov
mov
in
aam
xor
push
cmp
dec
das
cmps
jl
dec
jb
loop
mov
mov
xchg
lds
fdivr
dec
fidivr
cmp
inc
mov
out
xlat
pop
in
pushf
or
sar
repnz
leave
mov
push
and
aas
and
sub
fstp
cmps
aaa
scas
cmp
inc
fst
mov
(bad)
popa
inc
lock
pop
jo
push
push
jnp
add
enter
(bad)
dec
pop
add
test
push
or
and
mov
inc
pop
jo
sub
call
mov
push
sub
inc
fwait
mov
push
ror
and
xchg
dec
ins
push
add
mov
or
xchg
(bad)
pop
xchg
push
xor
pop
xchg
fdivr
lock
call
nop
mov
and
adc
js
dec
push
jle
mov
lods
mov
loope
dec
jecxz
sub
dec
fdivr
imul
dec
jne
pop
mov
stc
repz
enter
cmp
inc
jae
mov
push
add
mov
push
xchg
je
inc
lea
sbb
(bad)
and
shl
inc
mov
je
mov
push
test
pop
push
push
inc
cld
mov
pusha
outs
mov
lahf
mov
pop
shr
loope
pusha
cmp
dec
les
mov
mov
add
push
(bad)
jno
stc
jns
lods
push
push
jl
pusha
js
add
je
pop
dec
mov
inc
mov
cwde
lds
pop
xor
cmp
icebp
push
adc
sbb
push
je
mov
sbb
or
in
(bad)
jnp
sub
adc
xchg
inc
call
(bad)
mov
dec
add
mov
popa
push
aad
cli
mov
fcos
sub
rcr
jl
jb
fstp
mov
lahf
pop
mov
push
lahf
aam
pop
or
cli
pop
jge
inc
ror
cs
sub
fistp
mov
lods
push
jge
sub
or
repnz
pop
ss
rol
lods
lods
push
iret
mov
jl
(bad)
pop
mov
out
test
imul
push
mov
pop
xor
mov
mov
(bad)
(bad)
lods
push
and
inc
js
jns
mov
add
mov
idiv
lods
fild
mov
movs
sub
scas
enter
sub
in
gs
push
out
(bad)
lahf
sub
lock
jns
out
in
inc
retf
push
fldenv
xchg
das
inc
xlat
mov
lock
rcr
jg
adc
pushf
xchg
add
scas
dec
stc
fisubr
dec
pop
sub
outs
or
push
mov
stc
mov
ins
icebp
popf
dec
jo
mov
mov
pop
cmp
aaa
push
aaa
bound
dec
lods
or
xchg
test
(bad)
fucomp
mov
xor
adc
adc
add
(bad)
sti
xchg
inc
shl
xor
repnz
adc
and
add
nop
jne
jns
xchg
repz
nop
ss
aam
inc
push
add
ins
cmp
das
je
call
mov
inc
mov
jnp
dec
data16
jecxz
pop
inc
mov
test
test
outs
push
pop
xchg
fdiv
inc
push
stos
push
cs
fldenv
add
mov
or
cs
pusha
sbb
or
gs
test
add
xchg
rcl
dec
and
fwait
movs
fisub
cmp
inc
das
xor
xchg
repnz
movs
inc
add
dec
cld
stos
iret
dec
(bad)
add
mov
out
aad
dec
outs
outs
push
pop
sub
jl
dec
pop
jge
aas
sbb
aaa
jo
sub
not
xchg
cmps
in
shr
popf
cmps
or
pushf
push
inc
arpl
inc
loopne
jne
cmp
pop
adc
das
scas
ss
rol
cli
ja
pop
dec
nop
mov
jl
out
pusha
test
(bad)
pusha
out
jo
imul
rcl
btc
sbb
mov
pop
mov
icebp
mov
ss
adc
into
jmp
test
pop
es
and
stos
fiadd
jp
mov
pop
dec
cmp
inc
add
cmp
pop
cmp
fsub
lds
nop
ins
push
bound
cli
mov
jbe
mov
xchg
push
mov
mov
out
outs
test
ss
fbld
xchg
mov
cmp
outs
gs
inc
or
or
rcr
lods
loop
push
pop
mov
cmp
or
add
mov
into
popf
xchg
jmp
cmp
enter
push
xchg
mov
les
daa
arpl
dec
out
outs
fs
push
mov
popf
stc
clc
push
cmps
movs
xchg
(bad)
ja
movs
sub
dec
and
mov
xchg
imul
call
(bad)
adc
jmp
test
loop
int
pop
push
call
mov
(bad)
out
arpl
and
jbe
sub
jle
call
sahf
and
cld
cmc
pushf
inc
fidiv
loope
(bad)
cli
xchg
pop
mov
push
mov
aad
or
push
cld
in
test
sbb
cs
xor
test
mov
lock
ds
ss
inc
mov
jecxz
jge
fadd
ds
xchg
call
dec
call
cwde
out
out
mov
adc
psllq
and
inc
and
nop
iret
mov
inc
rcr
cld
outs
shr
inc
pusha
popf
or
push
sbb
leave
pop
inc
out
ins
sbb
push
xchg
cmps
mov
mov
jb
push
xchg
fs
sbb
inc
and
dec
push
es
inc
pop
or
push
mov
loop
xor
out
mov
dec
cmps
jae
jbe
pusha
cmp
or
lahf
ret
scas
add
retf
leave
push
dec
pop
sbb
in
es
mov
in
dec
xor
xchg
(bad)
das
fld
das
pop
mov
das
dec
pop
sbb
shl
movs
xor
push
iret
sbb
push
into
iret
lock
ja
inc
shr
bound
scas
inc
pop
push
xchg
pop
mov
mov
sti
sar
iret
imul
push
and
adc
pusha
xchg
jmp
xor
ds
and
and
xchg
(bad)
aad
sti
xor
mov
adc
dec
mov
pop
pushf
mov
imul
push
push
xor
mov
inc
outs
addr16
fld
jle
jecxz
pop
jmp
jmp
push
out
retf
daa
and
mov
dec
shl
push
push
cmc
pop
outs
cmp
ins
xchg
lea
cmp
enter
mov
sbb
out
cmp
mov
sub
adc
bound
add
dec
ficom
(bad)
adc
bound
fsub
and
js
loop
or
shr
or
xor
adc
mov
jp
adc
jecxz
repnz
clc
add
push
inc
pop
push
jnp
xlat
push
loopne
push
ficomp
(bad)
jbe
cmp
mov
inc
arpl
ficomp
mov
jb
adc
or
adc
xchg
push
sbb
into
xor
popf
out
mov
xor
in
dec
adc
addr16
xor
mov
fnstcw
fstp
test
sub
push
addr16
cwde
mov
mov
xchg
cmp
jg
jg
movs
ins
cmc
in
add
xor
lahf
iret
or
cmp
mov
shl
imul
pop
pop
cmp
jbe
push
inc
repz
mov
(bad)
sub
pop
mov
pusha
imul
sub
loop
cmps
pusha
xchg
lods
push
leave
mov
out
inc
out
gs
add
ret
mov
pop
jmp
enter
shl
(bad)
add
inc
imul
sub
cmp
push
outs
mov
lock
xchg
mov
test
repz
xor
push
and
pop
out
cmps
dec
outs
jo
cdq
nop
fbstp
dec
mov
shl
in
add
out
jbe
push
cmp
test
(bad)
push
fbld
test
scas
push
test
push
jo
stos
pop
xchg
rcr
jle
pop
mov
das
xchg
jno
add
pop
inc
jg
jae
or
push
or
adc
push
(bad)
ret
inc
setle
jbe
jge
pusha
pop
xchg
enter
arpl
add
rcl
dec
sub
rcr
jbe
daa
and
gs
jbe
cwde
sbb
(bad)
fdivr
out
mov
sub
push
ds
aad
lahf
xor
mov
int3
scas
retf
(bad)
add
sahf
sahf
dec
xchg
pop
scas
sti
pop
adc
adc
add
push
mov
pop
adc
mov
adc
push
sahf
fild
or
mov
inc
push
or
popa
scas
xchg
cli
les
jg
iret
repz
shl
sti
inc
jo
mov
push
sub
jecxz
iret
and
gs
sbb
and
sbb
outs
mov
mov
repnz
cmovs
cmps
and
cmp
xor
and
dec
push
pop
imul
loopne
int
popa
or
and
sar
sub
repnz
into
xor
inc
inc
xor
mov
mov
mov
and
dec
adc
das
xchg
jbe
addr16
pop
gs
add
fwait
mov
mov
jl
test
(bad)
aam
movs
adc
adc
adc
scas
or
mov
cli
mov
mov
inc
ficomp
loope
mov
mov
cli
pop
adc
cmp
arpl
xchg
add
(bad)
fmul
rol
dec
dec
les
nop
out
or
xor
test
lods
(bad)
dec
dec
push
add
push
sub
jmp
mov
repz
adc
xchg
repz
les
pop
adc
sbb
xor
test
push
arpl
jp
sbb
xor
inc
xchg
mov
inc
cmp
fisub
xor
adc
xchg
xor
scas
rol
inc
sub
dec
sahf
in
sbb
xor
add
fstp
inc
nop
jmp
mov
push
mov
cdq
or
hlt
cs
daa
inc
gs
add
jae
add
lds
or
or
lods
retf
jno
into
sbb
into
mov
sub
loopne
es
lock
dec
sub
pusha
pop
dec
scas
movzx
jo
in
into
cmp
add
jmp
push
(bad)
cmp
(bad)
jl
fisub
mov
jp
scas
inc
xchg
sbb
mov
sbb
jmp
adc
cs
rol
adc
pop
and
xchg
or
sar
sub
add
sar
inc
mov
jecxz
dec
shl
mov
outs
jo
fadd
and
test
mov
jp
jmp
dec
loope
adc
adc
lods
dec
lods
xor
xchg
out
jmp
or
jo
jmp
leave
pop
enter
cld
outs
cmp
cld
sbb
cmp
into
push
sbb
pop
sti
in
adc
pushf
push
iret
lock
fstp
xchg
inc
dec
loopne
inc
scas
mov
fcom
xchg
imul
xor
jle
icebp
inc
push
dec
ret
popf
rcl
movs
xchg
popa
js
ds
aam
inc
outs
cmps
mov
sbb
push
pop
lock
sub
mov
jmp
inc
jmp
popf
cld
mov
ins
sahf
cmps
ins
dec
pop
repnz
xor
or
add
mov
dec
mov
and
cli
outs
pop
cmp
shl
adc
ja
xchg
add
push
add
loopne
and
fsubr
(bad)
loop
jno
out
jge
pop
ds
mov
(bad)
lock
cmp
mov
idiv
or
outs
or
test
xchg
xchg
cmps
or
sahf
add
inc
pop
sbb
(bad)
retf
or
pop
jb
mov
rol
dec
pop
mov
xor
aaa
mov
fnstsw
dec
sti
inc
or
sahf
pusha
fnsave
retf
fs
sbb
mov
ret
movs
leave
xor
push
and
icebp
test
(bad)
loopne
ss
int3
pop
sahf
jge
test
cmp
jno
movs
cmp
push
das
scas
fcmovnb
retf
ror
lahf
jns
neg
dec
ds
jne
icebp
dec
test
shr
lods
adc
shl
inc
jne
xlat
sub
js
mov
icebp
mov
cwde
mov
mov
mov
pop
sbb
popf
sbb
inc
cs
sub
icebp
mov
lock
ret
stos
ret
retf
adc
fmul
cmp
lahf
sbb
adc
repnz
cwde
arpl
adc
lods
stc
retf
xchg
add
ss
adc
iret
jne
push
jo
nop
cs
into
movs
mov
xchg
pop
pop
sahf
in
inc
jnp
cs
in
cmp
sbb
ret
mov
mov
test
retf
dec
cmovo
inc
out
jo
sbb
in
cs
jne
mov
dec
ins
inc
add
rcl
out
add
ds
push
cmp
sbb
rcr
out
push
jecxz
sbb
lods
add
jg
shr
pop
dec
sahf
mov
rol
test
loopne
mov
loop
jns
xchg
pusha
ss
cmp
xor
push
adc
xchg
mov
xchg
jg
inc
dec
and
inc
push
push
sub
mov
jbe
jbe
(bad)
popa
test
adc
sub
fs
mov
std
sub
cmps
cs
hlt
jo
jg
into
arpl
cli
stos
pop
test
xchg
ret
les
ficomp
mov
jnp
jo
(bad)
adc
jno
adc
gs
call
cmps
loop
cmp
shl
es
stos
in
and
das
and
dec
jo
xlat
or
jecxz
loop
push
pop
xlat
mov
push
push
nop
sbb
sahf
xor
push
sub
shl
mov
adc
js
sbb
fabs
dec
dec
movs
adc
inc
sbb
cmps
pop
mov
leave
push
stos
out
retf
cwde
sar
cld
call
fsub
sub
and
leave
out
push
sub
mov
icebp
call
xchg
pop
push
add
inc
dec
mov
dec
dec
dec
pushf
push
mov
xchg
cmp
retf
and
imul
pop
test
jmp
jne
and
push
inc
mov
pushf
cmc
xchg
add
sbb
sbb
std
dec
dec
push
sub
outs
pop
jp
sub
push
(bad)
into
jo
out
jmp
and
push
div
daa
adc
xchg
xchg
iret
pop
pushf
mov
rcl
pop
push
pop
aas
movs
icebp
adc
mov
inc
jp
adc
xchg
enter
arpl
mov
popa
aad
je
fsubr
inc
fisub
mov
es
mov
sbb
repnz
das
lea
outs
mov
mov
sbb
std
mov
int3
loopne
rcl
push
or
and
dec
pusha
add
inc
das
fwait
lock
and
dec
fistp
pop
enter
jae
xor
aas
push
(bad)
js
xor
aad
push
loop
and
ror
(bad)
in
xor
xor
stos
clc
mov
xchg
repz
fadd
push
sub
pop
jno
sahf
ja
fist
and
or
loop
pop
xchg
loop
xchg
mul
daa
ret
and
ins
mul
sbb
dec
xchg
mov
xchg
xchg
stos
pusha
hlt
push
sub
push
add
std
addr16
add
push
into
js
add
fwait
and
retf
sar
xchg
outs
xlat
movs
shr
adc
mov
mov
shl
xchg
dec
call
jae
int
add
dec
test
jbe
dec
sbb
mov
mov
leave
movs
call
in
scas
xor
sbb
pop
jl
pop
scas
mov
shr
inc
mov
fiadd
fimul
jp
in
ss
(bad)
xor
pop
inc
cmc
stos
cs
mov
mov
jno
loope
cld
data16
xchg
mov
jmp
mov
cmp
sbb
dec
inc
ja
dec
out
repnz
adc
in
cwde
cmc
enter
iret
xchg
pop
loope
fdivr
fmul
cmc
add
mov
pop
push
adc
aad
ins
out
call
push
lock
mov
lods
or
inc
or
sbb
dec
mov
iret
cmc
dec
ja
les
push
sub
cmp
cmps
push
mov
(bad)
(bad)
mov
in
jmp
cmps
cmp
imul
je
mov
mov
iret
fild
and
outs
inc
rcr
mov
jle
ficomp
cmp
add
xchg
in
jno
(bad)
mov
adc
jp
das
push
inc
iret
pop
push
jo
inc
clc
sahf
xor
inc
outs
or
xchg
xchg
add
xchg
cmp
addr16
mov
(bad)
mov
stos
dec
nop
cmp
pop
fsub
and
test
ret
out
push
xchg
lods
pop
jb
movs
retf
xor
(bad)
jmp
dec
bound
pop
sub
push
out
repz
mov
mov
gs
fimul
cmc
js
enter
fcom
sbb
mov
push
in
cmp
fwait
nop
pusha
repz
out
ja
xchg
jb
in
out
cmp
inc
push
jg
sahf
adc
adc
sbb
xchg
sbb
je
imul
mov
in
fsub
mov
mov
xchg
cmp
dec
mov
into
push
call
xchg
ror
rcl
sti
imul
xchg
pushf
loope
add
mov
cmovle
inc
cld
sti
lock
imul
clc
loopne
sahf
es
push
inc
lds
test
aam
or
dec
cs
adc
stc
imul
sub
(bad)
fidivr
pminub
mov
lods
test
aam
jmp
adc
ficom
aad
push
mov
mov
xchg
(bad)
mov
iret
dec
pop
push
arpl
xor
inc
scas
ja
jo
(bad)
enter
out
lock
pop
daa
mov
mov
pop
outs
outs
retf
adc
mov
mov
and
jo
cld
in
mov
icebp
or
mov
jecxz
lahf
push
mov
stc
call
mov
add
jmp
mov
pusha
nop
or
mov
jmp
lods
mov
cmc
and
pushf
inc
shl
push
sti
cdq
in
aas
and
mov
paddsw
and
ret
dec
adc
xor
adc
shl
movs
push
and
(bad)
in
aas
adc
scas
and
sbb
jg
push
pop
fld
inc
stc
and
sub
scas
ds
jle
push
cmp
mov
mov
lea
shl
daa
rcl
test
cmc
add
mov
out
mov
sbb
inc
cli
fs
rol
jbe
push
(bad)
cwde
push
pusha
outs
xor
xor
sbb
xor
cli
neg
add
dec
or
out
mov
test
cdq
jmp
rcr
test
add
xchg
sbb
mov
and
pop
out
aad
(bad)
pop
add
(bad)
pop
(bad)
sti
inc
push
(bad)
out
jno
or
sbb
and
gs
pop
push
mov
xchg
sub
pop
push
xlat
test
push
push
pop
pusha
pop
xor
mov
push
inc
ret
in
test
out
cmps
test
push
pop
push
test
xchg
dec
and
in
sti
xchg
nop
jmp
push
mov
in
rcl
adc
out
jl
pop
sbb
out
sub
stos
sub
test
jle
adc
ds
pushf
push
test
push
jle
cwde
mov
xor
aas
nop
stc
xchg
rcr
outs
in
loop
mov
xchg
out
pusha
push
cmps
ja
add
add
stos
push
add
lock
in
iret
out
outs
lock
test
repz
shl
adc
add
inc
and
push
mov
dec
xchg
mov
nop
dec
hlt
mov
rcl
sbb
mov
push
js
scas
xor
sbb
jb
aas
or
dec
cmp
add
sub
pop
or
test
(bad)
fimul
push
fcom
mov
addr16
popa
in
cmc
dec
rcr
mov
in
jne
data16
rcl
mov
adc
adc
pop
stos
lea
and
add
sar
test
xchg
rcl
sub
sbb
rcr
push
mov
jbe
call
push
cli
dec
add
rcl
cmps
stos
pop
outs
add
pop
repnz
push
cwde
and
lahf
ins
mov
aas
js
lds
sub
xor
and
ja
sub
push
pop
or
inc
daa
mov
call
sub
aad
iret
pusha
xchg
dec
loopne
stos
(bad)
sbb
xchg
fld
fwait
cdq
or
jp
push
jo
ds
ss
fcom
(bad)
fdiv
jecxz
out
inc
imul
nop
cmp
xchg
mov
add
sti
outs
cmc
retf
xor
dec
push
(bad)
data16
fcomp
sbb
push
and
test
jnp
and
mov
rcl
mov
and
std
pop
adc
and
pop
add
pop
loope
aaa
inc
mov
cmps
call
pop
cmp
sbb
shl
imul
push
xchg
pop
pop
enter
cli
push
push
sub
or
aas
dec
jl
int
jo
push
popf
(bad)
stc
nop
call
mov
mov
xlat
xor
push
sbb
jbe
ds
cld
inc
mov
bound
dec
dec
cmps
push
ror
dec
xlat
or
imul
xor
jbe
mov
mov
int3
push
hlt
mov
jmp
inc
xor
sbb
push
outs
std
(bad)
cli
xor
and
jne
mov
inc
mov
add
nop
lods
jg
jecxz
mov
sbb
les
stc
mov
int3
cli
or
adc
and
pop
fadd
ss
jae
inc
das
fnstcw
xor
xor
retf
push
sbb
das
pusha
gs
outs
jg
inc
pushf
sar
inc
mov
sahf
popf
push
mov
out
cmp
inc
push
inc
nop
sbb
inc
outs
shr
pop
cwde
xor
lods
sbb
lods
or
xor
shl
or
(bad)
in
cli
xchg
dec
mov
aad
xchg
jl
or
arpl
sub
adc
outs
jmp
out
(bad)
out
fild
and
inc
push
bound
out
sbb
pusha
cmp
(bad)
jmp
std
xchg
jmp
rcl
mov
bound
pop
neg
sbb
or
pop
cli
mov
jb
int3
fiadd
js
cs
mov
loopne
out
and
mov
outs
lea
sti
fisub
outs
mov
loope
inc
enter
cmp
add
not
push
nop
(bad)
jae
push
and
jl
cmp
sbb
and
pop
sbb
js
icebp
outs
and
mov
mov
iret
jmp
inc
or
je
shr
jbe
bound
bound
mov
(bad)
cmp
jae
push
jecxz
pop
ror
push
js
xor
stos
in
int
cmp
mov
mov
ins
sbb
dec
test
sbb
xchg
jne
and
jle
adc
mov
lds
mov
rol
xor
sbb
or
push
popa
jbe
fist
sub
mov
je
sbb
popa
lods
mov
movs
xchg
pop
add
pop
or
inc
mov
mov
icebp
sub
dec
mov
adc
ss
imul
sub
call
je
shr
cmp
jg
pop
push
mov
les
fwait
push
inc
sar
(bad)
xchg
mov
mov
jp
ds
and
adc
mov
xor
jmp
mov
adc
inc
js
cmovae
jbe
dec
retf
out
jo
mov
and
ins
add
scas
inc
dec
rcr
push
fs
repnz
xlat
inc
inc
ret
ins
(bad)
and
mov
mov
mov
loope
xchg
cmc
in
mov
adc
mov
jp
lea
mov
pop
push
dec
mov
inc
call
std
shl
push
pop
pop
jge
cmp
(bad)
(bad)
into
in
and
xchg
in
cmps
js
into
and
out
mov
ja
lock
test
inc
ds
add
and
pop
xlat
lds
inc
sbb
adc
xor
(bad)
and
mov
mov
dec
jmp
ds
jecxz
dec
nop
pop
xlat
(bad)
rol
cmp
pop
push
add
push
jle
(bad)
ror
lock
sub
mov
jge
retf
(bad)
es
lea
sub
xor
sub
or
lods
inc
mov
sub
cli
or
popa
adc
aas
retf
push
mov
daa
fistp
jge
cmp
and
out
dec
push
fisub
dec
jl
je
daa
(bad)
les
sub
lods
jge
xchg
(bad)
push
aas
imul
jbe
fwait
sub
test
cmps
repz
jmp
jl
adc
pop
shl
ret
jle
test
lea
jns
out
or
mov
loope
(bad)
int3
cld
adc
or
inc
retf
push
or
lods
cld
add
test
ficomp
aam
add
call
inc
sbb
repnz
mov
sbb
arpl
js
sub
pusha
push
add
test
xlat
xor
jmp
dec
loopne
pop
out
sub
(bad)
mov
xor
mov
pop
and
cmp
aam
mov
movs
xor
test
cmp
ins
pop
xor
(bad)
ret
call
cmp
xor
scas
shl
pusha
inc
inc
mov
jnp
ins
ins
sti
jb
jo
or
adc
(bad)
cmp
stos
dec
or
es
and
inc
es
xchg
stos
push
jo
cmp
sub
dec
sbb
and
mov
(bad)
and
mov
jo
mov
idiv
addr16
mov
scas
sbb
repnz
adc
push
mov
mov
inc
inc
mov
outs
nop
dec
scas
repnz
xchg
push
in
sub
jl
(bad)
mov
push
push
bound
scas
add
add
push
add
push
push
sar
out
shl
mov
adc
dec
inc
(bad)
hlt
cmp
imul
adc
shl
ror
dec
mov
nop
push
push
jae
jmp
push
mov
mov
loopne
aam
bound
mov
sub
dec
add
call
mov
pop
(bad)
sbb
mov
sub
outs
sahf
adc
fidivr
repz
jmp
les
xor
int3
(bad)
fnstsw
loop
cmp
enter
imul
scas
test
movs
lahf
daa
pop
xor
sbb
dec
jno
aam
mov
loope
fwait
pop
mov
shl
cmp
(bad)
scas
mov
movs
dec
out
fwait
jle
scas
mov
mov
mov
in
retf
jl
jne
cdq
push
pop
dec
jne
lock
adc
jmp
dec
pop
xor
dec
rcl
jbe
push
rcl
in
mov
inc
pop
or
sbb
test
iret
dec
mov
mov
movs
adc
add
sbb
aas
in
pop
cwde
mov
mov
loope
ret
mov
cmps
xchg
popa
sub
mov
je
dec
inc
dec
sbb
mov
cmp
lods
mov
(bad)
add
add
fstp
pop
repz
jo
xchg
(bad)
es
(bad)
(bad)
retf
xor
mov
daa
pop
inc
sub
mov
jne
ins
jge
sub
mov
test
fcomi
xor
addr16
pop
(bad)
cmp
pop
es
pop
(bad)
hlt
sahf
shl
sub
ins
push
cmp
in
xor
pop
bound
nop
or
mov
or
add
sub
int3
sub
aas
bound
pushf
stos
shl
jnp
cdq
pusha
pop
rol
adc
xor
dec
ins
lahf
mov
test
sbb
fwait
mov
xchg
ds
(bad)
fiadd
adc
mov
enter
mov
aas
ja
xchg
sub
scas
aam
mov
xor
pop
adc
dec
(bad)
ja
mov
in
inc
sbb
cli
fisubr
jo
mov
mov
push
inc
pop
push
iret
sub
mov
lea
cmps
stos
mov
push
sub
xchg
add
icebp
cmp
push
pop
stos
or
retf
fldcw
inc
dec
lock
jg
scas
jp
mov
cmp
push
stos
add
int
add
fbld
repnz
push
int
mov
mov
sub
mov
je
sub
loopne
jae
and
mov
popf
shr
neg
fldcw
cmp
sub
sbb
mov
and
add
inc
data16
aas
adc
stos
push
adc
nop
pop
mov
repz
sbb
test
lahf
sar
push
aas
cmp
inc
dec
scas
inc
jo
mov
mov
inc
mov
(bad)
out
sub
adc
push
popa
inc
dec
sbb
jle
jne
ds
mov
mov
and
nop
pop
loopne
jo
leave
in
out
or
inc
rcr
aad
stc
dec
les
xchg
sub
sbb
and
out
imul
xchg
ret
or
xor
pop
shl
sti
sub
je
popa
dec
loopne
loopne
jbe
jno
xchg
fcom
mov
out
mov
outs
and
and
mov
dec
out
stos
aas
sbb
xchg
fwait
dec
fadd
jae
ret
js
out
push
int3
adc
inc
mov
(bad)
adc
and
fwait
push
add
and
ds
xchg
xor
inc
mov
push
in
and
jnp
(bad)
(bad)
jmp
retf
mov
push
das
jl
mov
xchg
push
loopne
mov
pop
scas
xlat
out
ins
cli
xchg
rcr
dec
cmc
movs
sbb
mov
nop
mov
and
xchg
xchg
or
pop
scas
pop
jb
and
adc
jge
mov
popf
arpl
inc
dec
rol
sahf
call
loopne
leave
or
cmp
sbb
ds
jo
nop
(bad)
leave
inc
inc
push
adc
lock
inc
sub
and
div
sub
shl
and
sti
and
aad
push
jmp
pop
out
mov
jp
jmp
cmp
jp
cli
push
into
cld
aas
(bad)
add
jb
in
(bad)
cmp
inc
and
push
dec
cmp
pop
mov
aad
push
jg
ds
and
add
fadd
jg
cs
lahf
loop
add
nop
in
imul
dec
xchg
clc
add
aam
mov
pop
jb
repz
dec
push
fnstcw
mov
xchg
jno
push
repz
repnz
mov
mov
jmp
push
(bad)
push
inc
mov
popa
push
rcl
pminub
pop
enter
into
dec
sbb
mov
cwde
cmp
cmps
(bad)
pop
cdq
push
fdivr
(bad)
(bad)
sti
mov
mov
add
pop
cs
or
cmp
dec
push
adc
test
sub
and
out
(bad)
dec
and
mov
and
jns
jle
das
jae
ss
dec
fmulp
push
nop
std
nop
enter
push
(bad)
pop
inc
add
cmp
push
ret
sub
mov
dec
jle
mov
jle
dec
test
pop
aas
out
fcos
ret
mov
into
xchg
shl
es
push
cld
fld
pusha
push
movs
add
hlt
outs
scas
and
sub
mov
ror
lods
arpl
sub
push
cmps
push
neg
popa
dec
and
xchg
and
push
jo
fimul
(bad)
jg
xchg
dec
bound
imul
popf
mov
inc
popf
sti
and
push
or
es
lds
inc
cli
retf
stos
xchg
fimul
(bad)
out
popa
stc
mov
cmp
push
fs
nop
xor
pusha
ret
pop
in
scas
rol
mov
jl
retf
inc
nop
fldcw
fwait
dec
mov
xchg
js
jne
aaa
mov
cmp
(bad)
sti
xor
cld
nop
cli
dec
inc
adc
sbb
push
push
and
cmc
sti
fistp
jbe
push
in
iret
dec
xchg
sahf
mov
(bad)
enter
fisubr
xlat
dec
push
repnz
loop
mov
lock
or
jg
jno
adc
xor
pop
mov
scas
mov
push
jae
shl
sub
jb
icebp
sub
mov
push
rcr
dec
mov
push
jg
mov
cmp
jnp
mov
pop
sub
mov
test
adc
jg
cmp
xchg
scas
test
icebp
clc
push
xor
rcl
out
add
ds
xor
pop
xor
sti
jo
and
(bad)
data16
test
mov
je
test
sub
inc
or
adc
xchg
and
mov
jne
fdivr
jmp
pop
sbb
sub
jo
and
inc
data16
jmp
rol
sti
enter
repz
mov
rol
mov
not
adc
faddp
dec
mov
inc
test
adc
mov
mov
push
add
push
cmp
clc
ins
mov
jnp
sub
fist
call
push
xchg
xor
inc
xchg
and
add
repnz
jge
shl
pop
daa
push
cmp
adc
jle
mov
imul
mov
daa
pushf
jecxz
dec
mov
xchg
pop
std
pushf
xchg
mov
out
pop
test
retf
loopne
jns
sub
sub
jo
je
rcr
push
pop
add
inc
ret
cmp
fs
mov
lods
pop
inc
inc
pop
aas
mov
mov
idiv
sub
mov
mov
sti
xor
push
shl
and
imul
(bad)
jae
mov
jae
xor
jp
aam
cs
rcr
add
and
retf
sbb
mov
xchg
pop
rol
mov
sti
nop
adc
repz
or
daa
cmp
xlat
fs
pop
loop
jbe
call
lods
loope
add
in
retf
cmp
popa
sub
cs
nop
dec
scas
push
push
add
add
aad
cs
mov
shl
sub
(bad)
repnz
jge
adc
ss
test
es
mov
pusha
dec
ficomp
lea
push
div
nop
test
sub
jg
push
inc
sbb
rcr
mov
xchg
int3
les
dec
repnz
xor
add
aaa
out
pusha
es
retf
cmc
xchg
adc
iret
int3
scas
pop
xchg
and
pop
mov
adc
inc
mov
pushf
jmp
call
in
shl
rcr
pop
add
rol
xchg
int3
mov
xchg
int
adc
jmp
ja
sbb
sub
(bad)
out
mov
mov
shl
sar
sahf
into
lock
sub
and
or
nop
sbb
gs
dec
test
inc
stc
mov
sahf
push
les
add
data16
lock
add
sbb
enter
xchg
imul
mov
sub
ss
sbb
sti
ds
cmps
mov
mov
dec
mov
sub
fcmove
fmulp
inc
aas
add
into
sub
leave
or
stos
retf
aad
in
stc
retf
jle
fsub
cs
outs
adc
popf
push
xor
or
or
dec
inc
test
push
sti
pop
es
push
ins
bound
inc
jl
or
or
outs
hlt
xchg
push
cmc
adc
sbb
push
dec
xor
dec
and
arpl
in
jecxz
add
shl
jmp
adc
setnp
out
in
in
mov
std
xchg
sub
mov
xlat
sbb
retf
sar
into
adc
jb
dec
add
in
mov
mov
add
pop
mov
fsubr
loop
mov
mov
lods
sub
pop
ror
inc
loop
fdivr
cmps
test
xor
outs
dec
adc
mov
imul
fdivr
xor
shl
test
sub
repz
jb
push
inc
or
mov
lock
loopne
fcom
enter
push
cli
push
push
sbb
sbb
loopne
jle
pop
nop
rcr
test
in
lods
jnp
jecxz
add
jo
sahf
addr16
ds
cmp
test
cli
loope
scas
sti
pop
adc
mov
loop
sbb
fs
fistp
xchg
jo
loop
sub
xor
and
dec
test
sbb
repnz
shl
je
adc
in
jg
xchg
push
dec
adc
inc
(bad)
mov
scas
xchg
popf
aaa
cwde
mov
sbb
scas
and
sub
and
fidivr
cmps
out
jbe
adc
push
lock
pop
das
popf
mov
mov
loope
dec
js
pop
push
adc
add
push
(bad)
clc
retf
dec
sub
mov
jecxz
fs
fs
int3
and
xor
test
in
or
mov
cli
popa
add
add
and
call
lds
push
enter
push
aaa
lods
sar
(bad)
(bad)
xor
ret
cs
push
push
dec
jo
sub
aas
xchg
or
jmp
sar
(bad)
lods
ucomiss
imul
aas
(bad)
jl
mov
dec
adc
dec
sbb
pop
fistp
movs
sub
pusha
push
test
data16
lea
jns
push
xchg
(bad)
mov
stos
ficomp
dec
and
push
push
mov
test
stos
xchg
and
pushf
dec
in
jne
lea
sub
jno
into
pop
jno
cmp
out
adc
dec
xor
fnstcw
ficom
push
and
push
sub
adc
add
loopne
mov
inc
ret
xor
mov
out
inc
aaa
dec
adc
push
pushf
dec
nop
push
mov
dec
xchg
cmp
adc
pop
or
and
dec
inc
(bad)
pop
jge
or
adc
cmp
in
xor
das
dec
ins
rcl
out
dec
(bad)
jmp
adc
sbb
fmul
push
jae
inc
ins
or
lods
sbb
imul
leave
in
cmp
mov
or
mov
jo
push
out
pop
xchg
das
jg
jl
(bad)
xchg
lods
repnz
pushf
sub
pop
outs
in
jo
(bad)
(bad)
mov
jne
jmp
sub
mov
jbe
fdiv
jns
nop
in
push
xchg
jle
outs
jmp
out
fadd
xor
push
jno
dec
jge
jae
add
cmp
iret
and
and
inc
loop
inc
pop
cmp
stos
dec
sbb
stos
scas
int
xor
sbb
adc
or
cmp
xor
mov
jns
cs
icebp
inc
jb
stos
(bad)
in
popf
cli
push
push
dec
inc
ds
jg
nop
(bad)
mov
out
and
mov
xor
mov
and
(bad)
mov
(bad)
adc
pop
outs
mov
retf
test
add
repnz
test
ret
cmp
push
mov
xchg
inc
lods
jnp
mov
ret
push
and
pop
shl
mov
je
pushf
in
adc
fs
fcom
mov
cwde
mov
mov
push
push
dec
nop
out
ja
adc
dec
icebp
cld
shr
xchg
retf
sub
xor
or
addr16
dec
out
scas
ror
ret
sti
sar
out
add
inc
jmp
sar
ficomp
div
xchg
jb
hlt
rcl
ss
sub
sub
pop
inc
xchg
outs
push
test
jl
call
(bad)
cmps
sub
enter
push
inc
ds
sbb
std
xchg
ja
inc
loop
mov
add
ret
dec
movs
(bad)
das
int3
add
push
lods
fs
or
out
mov
std
and
stos
js
jle
jne
std
push
cs
fs
jo
ins
mov
stos
mov
enter
sbb
sbb
jmp
(bad)
lahf
jp
push
pop
pusha
test
jmp
dec
xor
mov
test
ins
popa
outs
inc
mov
lock
add
fistp
shr
mov
push
cmp
mov
sub
push
popf
stc
mov
dec
in
xor
gs
mov
push
ret
adc
jb
dec
sbb
pop
outs
(bad)
jne
call
pop
xchg
in
pop
mov
adc
outs
mov
inc
push
dec
sahf
mov
dec
xchg
repnz
sub
jmp
push
sub
mov
ds
movs
rcr
push
push
(bad)
jo
dec
(bad)
in
repnz
jb
js
inc
out
adc
or
xchg
xor
jmp
adc
arpl
aas
fisubr
dec
(bad)
or
dec
inc
cld
es
es
(bad)
and
pop
or
scas
sub
xor
jo
push
stos
arpl
mov
xchg
les
sbb
adc
sub
jmp
add
xchg
pop
lahf
in
dec
lods
outs
cmc
pop
pop
xchg
or
mov
cs
pop
jp
loopne
imul
outs
js
adc
rcr
mov
dec
(bad)
mov
add
icebp
sub
mov
cmp
aas
cwde
test
cdq
jae
fild
mov
sti
leave
and
add
out
sub
shr
add
call
add
ins
cmc
mov
cs
cld
jmp
jae
inc
lahf
inc
(bad)
mov
loop
inc
(bad)
xor
ins
inc
ss
(bad)
sub
jmp
(bad)
mov
jge
rcr
push
push
in
popf
sub
xlat
dec
cmp
retf
xor
(bad)
mov
test
mov
sub
stos
ja
rcr
add
and
pop
mov
mov
xchg
xchg
ins
(bad)
in
pop
pop
rcl
std
dec
lahf
inc
add
nop
xor
inc
mov
out
cmps
lock
inc
dec
sub
nop
aaa
fs
xor
mov
mov
cmp
xor
call
sahf
cmp
loop
mov
jge
fild
lea
outs
and
scas
lods
pusha
cli
push
hlt
jae
ror
aad
es
sub
cmc
push
test
outs
hlt
in
jnp
mov
pushf
repz
mov
icebp
loope
bound
xor
or
fdiv
outs
inc
push
add
xor
mov
jecxz
in
call
fwait
sbb
adc
ins
movs
mov
rol
imul
cli
movs
arpl
cwde
dec
repz
mov
call
sahf
pop
xor
inc
mov
repz
dec
pop
mov
mov
xor
ret
jmp
mov
xor
xchg
sbb
xchg
es
and
mov
sbb
pop
and
xor
xor
loope
add
xor
sti
xor
fadd
ret
pop
(bad)
jae
icebp
jb
fwait
nop
mov
mov
jg
jne
bswap
nop
outs
sub
ins
jnp
in
inc
jmp
inc
xchg
je
jb
in
shr
mov
mov
pop
outs
sub
pop
pop
mov
sub
push
pop
mov
bound
loope
cdq
push
lahf
(bad)
jb
xor
sub
jg
dec
test
js
fisubr
push
pop
rol
rcl
fs
pop
loopne
outs
push
and
aaa
mov
add
(bad)
cmp
cmp
in
dec
jo
add
inc
xchg
outs
imul
jnp
mov
das
retf
shl
and
add
jbe
fsubr
xchg
or
ds
xchg
fldenv
into
sbb
icebp
and
or
out
mov
fstp
mov
aam
mov
outs
es
jmp
and
push
cmp
push
jo
xchg
cmc
push
sbb
fdiv
jno
in
jo
mov
out
mov
pop
dec
sbb
xor
ret
imul
inc
jmp
mov
fsubrp
(bad)
xor
inc
cmp
adc
outs
cli
mov
shl
pop
sbb
push
push
repnz
xor
sti
adc
jo
test
dec
adc
inc
xor
popf
sti
add
inc
mov
lds
mov
std
iret
iret
(bad)
fistp
xchg
test
pop
push
jnp
xchg
and
add
into
imul
sub
push
jns
pop
mov
push
add
outs
(bad)
cmp
nop
inc
loop
jno
mov
fwait
and
idiv
retf
popa
add
je
xor
cmp
cs
lods
cs
jno
push
rol
mov
mov
icebp
sbb
pop
dec
adc
push
inc
jge
adc
and
or
test
shr
jae
and
in
(bad)
sar
jmp
xor
xchg
dec
out
or
mov
mov
jbe
outs
adc
ds
inc
loope
push
jnp
test
shl
mov
sbb
mov
sub
test
loopne
lds
stos
and
cmps
cmp
in
dec
jo
push
in
pushf
lahf
push
fwait
dec
mov
adc
add
shr
pop
jmp
push
jno
fimul
mov
or
push
in
enter
outs
pop
pusha
dec
lock
jb
sub
popa
retf
mov
iret
in
push
loopne
cmp
sub
aas
push
js
dec
shl
ins
ins
jo
push
ret
popa
cli
xor
mov
rcl
test
add
mov
and
sbb
(bad)
sbb
cli
jnp
push
shl
repz
pop
or
iret
fcmovnb
push
fisub
cld
sar
shr
mov
lods
not
sbb
je
les
jb
sbb
push
fdivr
ds
aad
jmp
cmp
jmp
in
(bad)
into
out
sbb
add
(bad)
faddp
xor
push
xchg
xchg
add
xor
enter
mov
lock
out
or
lods
aaa
jecxz
cld
iret
jecxz
xor
push
or
out
push
aaa
pop
out
fcomp
dec
jg
xchg
mov
fcomip
outs
xchg
and
mov
ficomp
or
jge
push
dec
mov
scas
jmp
dec
rol
xchg
je
push
add
and
cmp
push
les
lea
scas
xchg
xlat
shl
scas
push
pop
loope
clc
cwde
sahf
jecxz
dec
adc
jp
xchg
mov
add
ins
mov
mov
lock
and
sbb
sbb
fld
mov
cld
add
add
jmp
daa
pop
pop
and
and
sar
and
push
mov
ret
push
mov
push
sar
mov
xchg
pop
arpl
dec
adc
call
mov
(bad)
imul
daa
jnp
fwait
dec
inc
in
pushf
and
mov
jbe
not
fs
mov
retf
mov
cs
repnz
mov
out
mov
stos
les
pop
idiv
add
push
rcr
or
into
jmp
(bad)
aad
neg
ficomp
mov
inc
bound
in
sbb
cdq
pop
dec
xor
dec
fld
sbb
mov
sub
outs
popa
add
daa
inc
xlat
(bad)
jl
enter
pop
mov
in
sub
arpl
push
jne
test
call
call
mov
retf
jb
lods
or
rol
ds
push
lahf
icebp
inc
pop
dec
cwde
xor
push
sbb
mov
in
sti
shufps
inc
and
add
je
mov
pop
mov
stos
js
in
aad
addr16
bnd
xchg
add
dec
inc
(bad)
and
inc
pop
pop
xchg
mov
iret
js
add
mov
(bad)
(bad)
adc
sbb
sbb
aaa
cmp
cmc
sbb
or
pushf
leave
mov
(bad)
xchg
adc
call
push
shl
jg
cmp
fcom
neg
test
sub
(bad)
sbb
dec
add
jnp
ins
icebp
cmp
fimul
imul
movs
or
sub
les
xchg
mov
push
enter
add
mov
fiadd
push
inc
inc
push
aas
adc
pop
repz
jnp
add
scas
pop
cld
mov
(bad)
(bad)
cli
vpunpckhwd
pop
inc
loopne
sub
nop
xlat
push
sbb
hlt
leave
mov
stos
aaa
movs
lock
pop
push
mov
mov
inc
fcmovu
loop
xor
aaa
ds
mov
mov
or
(bad)
fiadd
(bad)
jbe
xchg
mov
sbb
dec
pusha
jb
sub
test
mov
into
mov
jg
push
idiv
or
lahf
shr
dec
xchg
aad
cmps
cmp
dec
mov
xor
add
pop
and
test
scas
pop
adc
ret
addr16
aam
popa
push
popa
push
xchg
stos
in
loopne
js
ret
popa
aam
mov
lods
jl
jmp
xchg
das
xchg
nop
pop
inc
ret
lock
or
ins
lock
loop
adc
ret
in
mul
in
fimul
sbb
ret
rcr
jnp
pop
add
cmc
or
mov
ret
pop
pop
addr16
jne
cwde
dec
call
cwde
push
loop
cmc
ficom
fcmovnbe
push
pusha
adc
mov
gs
scas
fidivr
stos
rol
(bad)
jle
stos
push
sahf
dec
cwde
mov
inc
(bad)
fisubr
loopne
ins
repnz
adc
dec
mov
(bad)
loope
mov
out
and
jo
jo
sub
jo
fs
xchg
rcl
jnp
outs
jb
and
pop
and
popf
(bad)
jge
mov
or
xchg
add
adc
mov
es
sub
push
dec
icebp
jns
push
xor
push
cld
push
je
jge
cdq
jae
aam
in
adc
xor
imul
sahf
mov
(bad)
and
lahf
lock
dec
fwait
xor
aas
mov
add
ins
shl
arpl
push
gs
dec
inc
popf
das
push
fdiv
cmp
ins
mov
dec
and
mov
xor
add
mov
js
rcl
sub
pop
adc
loopne
cmp
sub
xchg
xlat
ins
rcl
iret
jne
aam
xor
sub
stc
fild
inc
push
lods
pop
icebp
mov
clc
push
hlt
rcr
jbe
into
loop
fimul
mov
or
xchg
subps
xor
jge
mov
mov
xchg
out
fnstsw
cmps
mul
arpl
jno
stos
push
xchg
jg
lea
lock
mov
repnz
repnz
ss
sub
jne
pop
jne
and
jnp
mov
les
add
cmovo
fimul
jo
mov
jl
push
std
fidivr
cmp
in
jae
imul
xor
mov
fsin
mov
mov
xor
lods
jns
int3
and
mov
or
js
inc
scas
fistp
dec
or
fcomp
shl
xchg
dec
fstp
sar
xchg
sahf
jo
cmp
cwde
test
push
cmp
gs
jge
jne
inc
sub
push
jle
xchg
push
xchg
les
pop
cs
push
jno
push
mov
xor
xor
imul
mov
sar
stos
mov
inc
push
dec
mov
sub
push
jno
les
shl
fsub
mov
and
or
xchg
repz
inc
mov
dec
xchg
mov
mov
mov
idiv
vmovhpd
test
cmp
icebp
movs
mov
das
mov
psubusb
stos
repnz
(bad)
pop
rcl
adc
or
sbb
ins
pusha
lods
lods
pushf
push
jl
(bad)
test
inc
leave
xchg
cli
sar
add
lahf
jle
push
mov
cmps
scas
inc
sbb
pop
out
xor
mov
adc
cmps
push
or
imul
pop
rol
xchg
adc
cmp
outs
(bad)
mov
xchg
cld
fld
jnp
leave
cmp
inc
add
rcl
or
and
retf
jmp
push
xor
aad
test
imul
hlt
jne
or
lock
(bad)
xchg
stos
ror
test
sti
out
cmps
call
jo
pop
or
inc
pusha
inc
daa
loopne
aam
in
lds
clc
add
mov
es
push
add
push
add
adc
cmp
cwde
shr
in
loope
sbb
mov
out
push
sbb
mov
jbe
push
scas
loop
clc
stos
push
sbb
addr16
stc
xchg
mov
sti
xor
jb
int3
jp
mov
and
adc
or
(bad)
into
add
pop
fwait
pop
xor
dec
out
fyl2x
movs
dec
mov
shl
pop
lds
sub
cmc
dec
jae
pop
jle
fbld
lahf
loope
js
jge
xchg
(bad)
jne
pop
sub
adc
inc
cmp
adc
jmp
call
pop
movs
scas
pusha
scas
rcl
mov
hlt
push
inc
(bad)
ins
xchg
add
cmp
pop
aas
cs
dec
pop
jnp
add
xor
xchg
lds
mov
inc
ret
popa
add
js
fadd
inc
jg
mov
pop
mov
(bad)
nop
ds
shl
(bad)
sbb
mov
push
sub
(bad)
xchg
fwait
add
shl
jmp
adc
pop
in
nop
pop
mov
jle
xchg
mov
es
scas
inc
jbe
ds
into
xor
mov
add
jge
and
mov
mov
mov
(bad)
mov
xor
stc
leave
push
adc
xchg
xor
test
stos
mov
push
std
jl
ficom
pop
std
add
sbb
das
xor
cmp
sbb
dec
gs
mov
xchg
ret
cmc
dec
hlt
and
add
jg
(bad)
in
jp
jle
sbb
jge
shl
ret
icebp
(bad)
aam
lahf
or
stos
or
xor
outs
js
sahf
fimul
dec
bound
idiv
mov
pop
in
lods
jp
in
mov
sub
pusha
xor
dec
mov
push
jmp
ficom
mov
cmp
mov
rcl
stos
xor
mov
fnstenv
mov
push
sbb
push
mov
rcr
es
out
(bad)
pop
les
cdq
fidivr
jl
sub
inc
inc
into
cmp
adc
dec
jo
hlt
push
pusha
loope
mov
movs
mov
not
and
push
addr16
out
mov
gs
xchg
cwde
cmp
fnstcw
push
loope
mov
scas
sbb
cli
mov
jbe
ficom
out
xchg
fmul
loopne
push
add
pop
mov
xchg
(bad)
or
cmp
repnz
clc
xchg
(bad)
loopne
push
and
jns
sbb
xor
outs
push
js
out
clc
out
push
mov
mov
mov
push
pop
dec
jl
or
push
add
outs
out
pop
arpl
js
and
xchg
rol
sbb
mov
lds
pop
cmc
dec
pop
lahf
mov
lahf
hlt
mov
test
imul
je
pop
xor
(bad)
mov
popa
and
jg
sbb
push
idiv
and
fidivr
(bad)
cmp
mov
dec
scas
into
cmp
inc
pop
inc
nop
xor
adc
xor
jbe
aam
xchg
mov
pop
loop
icebp
arpl
out
jbe
jb
push
xchg
adc
(bad)
cld
mov
cmp
or
jbe
iret
outs
push
fwait
ins
pop
and
and
push
std
cli
cld
loop
mov
and
or
bound
adc
lahf
sbb
mov
call
cmp
push
and
mov
xor
mov
sti
dec
aas
add
pushf
xchg
cli
mov
popf
mov
and
test
outs
push
js
xchg
loope
mov
outs
int3
out
repnz
pop
jae
ins
imul
bound
sahf
mov
xchg
push
lods
push
sbb
push
repnz
sub
xchg
jmp
inc
outs
ss
outs
ins
scas
data16
test
xchg
imul
mov
icebp
(bad)
ins
mov
sahf
jb
dec
ins
test
(bad)
jnp
sahf
jnp
sbb
add
mov
mov
pop
ins
test
pop
push
int
push
dec
cmp
jmp
lds
jbe
ds
lea
vunpckhps
add
adc
xor
mov
push
or
fwait
inc
jp
push
sbb
or
xchg
outs
pop
cmp
sbb
(bad)
outs
mov
push
ss
loopne
out
xor
xchg
inc
scas
adc
test
loopne
sbb
dec
shl
add
mov
jo
sbb
inc
data16
push
and
fadd
cs
je
push
(bad)
sub
push
cmp
gs
pop
inc
out
xchg
adc
or
xor
jecxz
push
sub
dec
jecxz
push
sahf
push
push
ins
les
sahf
scas
mov
fwait
xchg
in
pop
out
mov
call
arpl
jns
in
jne
dec
mov
push
mov
call
enter
adc
out
ret
dec
or
test
push
js
leave
mov
jecxz
rcr
shl
les
push
gs
lds
sub
pop
mov
aad
dec
into
ja
and
out
sbb
rol
xlat
cmp
xlat
cli
loope
add
lahf
push
leave
xor
push
jle
mov
addr16
sub
jg
jecxz
jmp
test
pop
not
xor
add
cli
dec
mov
and
or
fist
std
(bad)
call
ss
adc
sub
cmp
cmp
adc
icebp
fiadd
xor
lahf
rol
scas
pop
popa
xor
dec
push
dec
sahf
xchg
repnz
sbb
arpl
cdq
fcompp
push
into
out
mov
xor
lods
jg
hlt
dec
push
fdivr
mov
push
(bad)
or
fild
pop
adc
xchg
mov
scas
ins
inc
into
xor
sub
int
jle
movs
add
lahf
push
les
sub
inc
pop
(bad)
xchg
int3
je
aas
not
lock
(bad)
xor
scas
ret
push
cmps
pop
push
mov
dec
xlat
ins
xchg
mov
push
mov
(bad)
push
cmps
jns
ds
pop
jg
ins
stc
xchg
dec
or
loope
inc
pop
(bad)
aas
mov
add
sub
aam
add
out
add
pusha
jecxz
shl
scas
fwait
mov
xor
fiadd
cmps
xor
js
xchg
jle
jle
sbb
mov
cmps
pop
shr
sbb
dec
sub
sti
inc
sbb
pop
xor
mov
adc
cwde
ror
ror
add
sahf
retf
xchg
xor
cmp
ins
lea
or
jl
ds
jno
mov
push
mov
imul
push
mov
retf
popf
xchg
or
mov
iret
test
sub
xor
xor
mov
and
mov
loope
aad
mov
and
outs
sahf
add
add
das
pop
jp
out
lods
fsub
xchg
mov
sahf
scas
mov
sar
or
xor
(bad)
in
or
icebp
pushf
sub
ins
enter
or
mov
imul
push
inc
cmp
rcr
mov
cmp
push
out
mov
cld
shl
and
test
(bad)
int
icebp
(bad)
int3
out
mov
add
add
jle
mov
popa
fidivr
outs
sbb
(bad)
nop
adc
loopne
inc
hlt
or
xor
adc
nop
push
ins
xlat
into
in
xlat
inc
push
lea
sub
out
pop
aaa
push
js
pop
sti
mov
aaa
daa
mov
push
xchg
fidivr
cs
mov
scas
mov
(bad)
and
sub
fs
popf
xor
sbb
lock
xor
mov
pop
cmps
cld
arpl
sub
fwait
out
(bad)
lods
movs
sub
jmp
test
ror
jo
xor
das
in
jb
lds
cs
scas
jo
inc
retf
mov
xor
adc
shr
mov
push
fiadd
dec
repnz
repz
xor
jmp
adc
mov
pushf
jns
add
loopne
sbb
pop
bound
pop
sbb
iret
inc
scas
or
pusha
push
out
scas
dec
mov
call
scas
or
call
mov
enter
xchg
mov
out
xor
add
je
and
popf
ds
jge
popf
jmp
jo
mov
pop
jmp
mov
xchg
and
aas
xadd
call
lock
sub
std
push
sti
gs
inc
test
push
lods
pushf
mov
inc
fld
push
mov
cdq
or
jmp
cmc
push
and
loope
cld
rcl
ret
and
pavgb
xchg
call
push
cmp
xor
in
(bad)
int3
fs
ja
cs
bound
fild
(bad)
sbb
inc
loop
xor
out
xor
mov
add
aad
xchg
clc
add
and
sbb
jno
xchg
xor
fs
push
cmps
pop
icebp
mov
cmp
or
mov
mov
xchg
psraw
jg
cmp
mov
mov
sahf
gs
hlt
xor
and
cdq
sbb
(bad)
or
test
and
daa
inc
retf
dec
xchg
int3
(bad)
pop
mov
sbb
mov
shr
dec
fcom
enter
mov
jno
in
fs
leave
sahf
aas
mov
idiv
xor
hlt
xor
xchg
adc
rol
jb
outs
xchg
jb
(bad)
popa
scas
push
outs
push
mov
popf
loop
and
sub
xchg
dec
(bad)
and
retf
cmp
cs
jle
sub
xor
cwde
mov
imul
outs
pushf
neg
mov
(bad)
clc
into
repz
out
punpckldq
enter
sub
outs
cmp
pop
dec
xor
aad
fwait
test
daa
xor
enter
fucomi
cmp
pop
lods
lods
dec
mov
lock
dec
or
iret
clc
les
fild
jmp
inc
ss
retf
add
add
jb
push
mov
xchg
hlt
mov
jmp
arpl
fcom
xchg
pop
test
mov
inc
outs
nop
jbe
pop
mov
repnz
push
dec
mov
or
mov
nop
pusha
fwait
inc
or
imul
test
daa
out
imul
mov
js
loope
jmp
xchg
(bad)
div
xchg
leave
out
adc
cmps
or
push
xor
mov
movs
outs
inc
movs
xchg
inc
mov
outs
mov
fisub
cmp
stc
pop
pop
mov
test
pop
(bad)
adc
xabort
dec
adc
sub
jge
jl
dec
je
popf
test
dec
shl
enter
or
inc
fs
cli
aas
xor
sbb
test
loopne
(bad)
mov
add
fbstp
or
ins
jo
xlat
loopne
push
mov
xchg
inc
xchg
outs
loopne
aad
jns
aad
imul
mov
xor
mov
xor
dec
cmps
mov
enter
outs
sti
sub
inc
and
stc
inc
je
ds
and
push
ds
add
ret
mov
jp
div
stc
pop
xchg
imul
cmp
imul
imul
cmp
fld
add
pop
xchg
out
xchg
mov
sbb
shl
sub
cmp
xlat
in
lods
xor
mov
push
out
mov
popa
mov
cwde
bound
stc
mov
or
in
jge
fisub
push
ins
dec
pop
jmp
enter
(bad)
push
loopne
jo
repz
out
mov
mov
outs
push
(bad)
adc
cmp
fisubr
outs
lods
jae
jge
mov
pop
mov
fdiv
lods
sub
push
sbb
mov
push
or
dec
repnz
inc
int3
xchg
push
aad
nop
pop
mov
xor
(bad)
mov
sub
ficomp
scas
dec
cdq
les
daa
mov
push
inc
xchg
(bad)
ror
fist
mov
jecxz
sbb
or
mov
div
dec
cld
in
xchg
stos
pop
ror
mov
out
push
je
push
out
mov
repz
xchg
mov
ja
in
push
cmc
or
xor
and
dec
cdq
mov
sub
fcmovb
pop
and
pop
sahf
test
sets
mov
dec
mov
jle
xchg
sahf
shl
setns
jle
adc
enter
js
adc
pop
adc
and
loopne
inc
mov
fwait
mov
sbb
dec
ins
or
push
shrd
retf
xchg
and
fnstcw
jno
xor
into
retf
nop
push
pop
mov
sbb
ins
and
fwait
xchg
into
mov
aas
sbb
fidivr
dec
cmp
dec
dec
sti
shr
xchg
inc
idiv
pushf
adc
jg
cmps
jne
dec
mov
addr16
in
stos
adc
mov
dec
push
add
add
cmc
rcr
imul
icebp
(bad)
(bad)
sub
or
mov
ja
das
and
sahf
ret
dec
sub
gs
scas
and
dec
loopne
es
retf
cmp
push
xchg
outs
pop
sbb
clc
scas
push
mov
in
repnz
xor
add
sub
and
mov
(bad)
lock
inc
xlat
sub
cmp
mov
mov
mov
iret
mov
cmp
jl
jg
xchg
shl
rcl
mov
ror
stc
sub
mov
xor
outs
sahf
push
dec
jmp
fs
mov
loop
fsubr
adc
movs
jp
push
sub
mov
aas
cmp
xor
cmp
cmp
pop
push
rcl
out
clc
xor
daa
push
sbb
mov
add
push
add
push
icebp
mov
xchg
addr16
std
mov
mov
das
push
jno
cs
jg
xor
in
out
adc
das
loope
rcr
test
mov
push
lahf
add
js
push
and
add
fsub
dec
loopne
pop
fs
ins
sbb
mov
rol
jp
bound
mov
mov
jbe
int3
cmps
push
cmc
iret
mov
inc
jae
push
or
add
stos
idiv
push
inc
in
sahf
fcom
add
push
xchg
mov
sub
sbb
xchg
mov
mov
fistp
imul
into
adc
jb
add
mov
sbb
test
movs
adc
imul
movs
push
jne
(bad)
mov
jbe
cdq
mov
jbe
lock
mov
mov
scas
stos
jg
jmp
aam
mov
mov
xchg
sub
lock
or
push
and
das
push
pop
or
nop
add
mov
hlt
stos
and
ror
test
jp
xor
mov
inc
push
jno
jo
push
push
pop
das
je
pusha
in
mov
nop
retf
add
or
xor
out
std
mov
mov
loopne
or
into
(bad)
jmp
xor
pop
int3
adc
cmp
mov
push
inc
mov
leave
call
(bad)
cmp
pushf
aas
rcr
(bad)
cmp
sub
fwait
movs
mov
mov
mov
xchg
add
mov
and
jb
pop
inc
pop
sub
ss
cdq
jae
pop
cmp
daa
xchg
pop
cmps
gs
cdq
fisub
jb
repnz
xchg
adc
out
movs
jp
ins
mov
in
jg
add
loop
sub
add
sbb
fs
xor
push
loopne
stc
dec
inc
xchg
cli
adc
inc
mov
in
add
pop
icebp
fdivr
fcmovnb
dec
dec
outs
mov
inc
cmp
dec
pop
pop
xchg
jle
out
rol
pushf
inc
sbb
add
in
(bad)
adc
adc
out
(bad)
neg
mov
rcr
jbe
cmp
inc
outs
push
sbb
add
mov
pop
sti
ror
scas
ja
mov
sbb
xlat
sbb
pop
jge
sub
scas
leave
imul
jle
(bad)
jno
inc
push
add
(bad)
fcmovnbe
stc
add
movs
sub
jl
mov
dec
aam
les
ror
adc
jmp
xlat
adc
dec
jbe
pop
mov
es
xor
sbb
fdivr
jle
add
add
fld
xor
fadd
pop
ret
cmp
aad
stos
push
(bad)
bound
shl
xor
int3
fsub
outs
data16
xchg
ss
repz
outs
mov
clc
jge
loope
movsx
test
iret
mov
push
cwde
icebp
iret
push
sahf
add
iret
fild
out
fist
push
sar
push
data16
lods
pop
shl
or
in
jmp
les
int
call
ret
mov
es
jbe
sti
out
xor
add
cmp
push
rol
je
jbe
add
mov
mov
cli
push
sbb
cmp
dec
loope
les
mov
and
shl
mov
dec
(bad)
sbb
scas
cmp
jne
sbb
iret
(bad)
fadd
sbb
out
loope
(bad)
mov
jle
add
test
in
lock
sbb
xchg
rcr
xor
inc
push
mov
ds
and
xor
mov
xchg
enter
ret
pop
inc
mov
outs
dec
mov
pop
sbb
push
ret
aam
aam
cmp
cld
jmp
arpl
mov
scas
data16
inc
and
jle
jmp
sbb
and
pusha
lock
(bad)
jb
mov
cmc
retf
push
test
rep
icebp
je
das
mov
and
xor
inc
push
pushf
out
jle
xor
out
mov
sub
sub
dec
fst
loopne
adc
pop
jo
jg
sbb
mov
inc
mov
scas
sbb
and
or
jg
adc
test
shr
mov
(bad)
icebp
rcl
or
adc
loopne
xor
cmp
push
sub
mov
retf
jg
mov
mov
mov
loope
and
jecxz
movs
add
adc
xor
and
fiadd
jle
mov
fisub
or
cmps
or
or
jg
das
stos
mov
push
mov
les
lods
and
jge
cmp
inc
pop
push
out
mov
fwait
adc
bound
mov
mov
test
dec
out
ds
mov
sbb
imul
popa
jno
add
mov
adc
and
dec
xchg
enter
lds
repz
pop
push
mov
(bad)
js
jmp
stos
sbb
fidiv
fidiv
add
push
les
dec
xor
lea
mov
cmp
fsub
test
daa
add
or
inc
mov
stos
lods
jbe
test
cmps
add
sbb
loope
push
jo
imul
lods
cmp
lods
xlat
xor
fdivr
jo
std
push
push
lea
pusha
out
call
mov
aaa
and
inc
repnz
mov
and
inc
dec
push
adc
fisttp
shl
lahf
movs
icebp
fwait
inc
rcl
fcomp
add
dec
push
push
icebp
data16
xor
jmp
loopne
lods
sbb
mov
les
outs
adc
rcr
cs
xchg
lahf
call
test
in
loop
shr
cmp
mov
sub
aam
iret
je
add
shl
pop
sub
in
mov
bound
cdq
lahf
mov
mov
(bad)
retf
mov
jne
jle
cld
fisttp
xor
inc
dec
(bad)
neg
jg
xchg
mov
cwde
(bad)
dec
dec
pop
xchg
imul
imul
jle
in
push
(bad)
addr16
or
mov
(bad)
ja
mov
xor
in
pop
mov
out
dec
xor
fdiv
add
test
xor
add
xchg
dec
ret
dec
pop
daa
jnp
daa
out
lock
aas
out
fisttp
xor
fdivrp
(bad)
push
jmp
mov
mov
or
push
loopne
jno
call
repnz
jo
fwait
push
pop
shr
inc
(bad)
dec
mov
jns
scas
mov
pop
pop
push
jbe
sub
aas
(bad)
fstp
jle
sti
xor
mov
(bad)
push
repz
and
aas
(bad)
daa
retf
jg
ds
ins
cmps
fisttp
mov
addr16
or
push
scas
push
dec
push
leave
push
fs
inc
dec
xor
or
js
inc
cmps
cmc
adc
lahf
sti
pop
or
mov
mov
jmp
ja
inc
fwait
clc
pop
mov
std
inc
scas
sahf
loopne
in
dec
sub
call
cmc
and
(bad)
loop
sbb
ret
and
(bad)
icebp
sub
repnz
test
xchg
dec
int3
sahf
sub
outs
and
xchg
jl
nop
push
lea
stos
sti
(bad)
popf
outs
ret
leave
dec
mov
xor
adc
mov
cli
call
mov
pop
sbb
mov
dec
add
mov
mov
mov
xchg
movs
loope
sahf
pop
mov
jp
dec
push
pop
push
int
mul
mov
lods
cmps
loop
hlt
lods
jg
pop
cdq
push
fnsave
mov
inc
out
imul
push
mov
int3
jmp
cs
jg
mov
(bad)
sti
mov
in
xor
(bad)
adc
cs
stos
fs
push
pusha
xchg
adc
idiv
push
enter
mov
test
push
bound
sar
cmp
sahf
gs
adc
push
mov
and
ret
jmp
nop
aad
into
mov
jb
(bad)
xchg
pop
mov
jae
add
mov
jl
sti
loopne
fwait
dec
mov
adc
or
sub
das
aaa
fist
outs
sub
jmp
xor
lahf
(bad)
pusha
retf
and
or
int
cwde
stc
jle
push
mov
add
jge
add
dec
pop
dec
out
pop
mov
pusha
xchg
shr
ret
sub
test
nop
outs
mov
add
adc
das
jno
pop
ins
xlat
jmp
(bad)
out
xor
sbb
ins
mov
and
and
mov
cmps
stos
mov
jno
int
xor
adc
jmp
retf
jle
mov
scas
cmp
fcomi
jg
cmp
push
and
sub
aas
(bad)
(bad)
out
nop
daa
ror
scas
mov
je
xchg
mov
mov
sub
test
mov
les
icebp
shr
pop
(bad)
into
adc
(bad)
cmp
pop
push
xor
js
or
jmp
and
mov
outs
push
adc
and
xor
pusha
cld
ds
aam
into
inc
adc
dec
mov
mov
or
inc
(bad)
gs
cmp
xchg
sbb
push
dec
cwde
pop
and
mov
sbb
shl
mov
dec
out
or
xor
and
sbb
mov
push
dec
retf
dec
call
fwait
aaa
inc
and
cld
rol
pop
mov
shl
mov
clc
int3
shr
pop
cmp
rcr
call
stc
scas
icebp
neg
call
and
jecxz
ins
lods
xor
xchg
fs
or
xor
mov
(bad)
loope
stos
pop
and
loopne
fwait
add
pop
dec
inc
ins
inc
xchg
loopne
mov
and
mov
and
loope
push
mov
xchg
xchg
or
aam
xor
bound
ror
or
add
xchg
jbe
sub
mov
adc
test
jmp
gs
inc
in
xchg
fsubr
hlt
jae
js
or
add
jle
xor
mov
pop
add
dec
ss
add
out
pusha
and
sub
ror
out
and
(bad)
adc
mov
ror
loop
ret
lods
adc
cs
xchg
sub
ds
loope
in
mov
mov
inc
psadbw
(bad)
jo
aas
pusha
xor
loope
mov
mov
push
jle
xchg
fcomi
lahf
aas
mov
sub
repnz
cmp
dec
sub
repnz
je
fisubr
jle
pop
aas
sar
fmul
ret
mov
cmc
inc
mov
(bad)
jo
in
enter
iret
clc
aaa
xchg
push
sbb
idiv
repz
pop
add
(bad)
lods
push
hlt
xchg
loope
push
mov
cmps
fs
sar
aad
scas
in
mov
mov
lods
sar
dec
div
and
dec
lds
out
dec
jp
ret
xor
add
ret
imul
repz
scas
div
ret
adc
retf
push
cmp
cmp
xchg
jp
pop
mov
mov
out
jns
bound
cmp
imul
add
add
ja
out
add
call
leave
pop
inc
fidivr
dec
mov
adc
jae
fucomp
push
adc
and
mov
push
sahf
jg
sub
fucomip
lahf
je
jle
cmp
fcom
aaa
xor
ficomp
xor
stc
push
popf
dec
cdq
arpl
mov
xchg
pop
xor
cmp
push
(bad)
fisttp
xor
push
dec
add
add
aam
repz
mov
and
int
outs
adc
mov
fnstsw
jnp
loopne
push
jno
add
out
cmp
aad
mov
adc
mov
xchg
inc
mov
fmul
jb
jmp
iret
add
test
mov
out
or
clc
sub
adc
pop
pop
pop
pop
and
push
sbb
jg
dec
push
in
add
xor
and
push
out
imul
lock
ror
out
xchg
and
inc
adc
aam
dec
clc
in
ss
xchg
push
xor
shl
jns
mov
ins
dec
(bad)
push
sbb
retf
pusha
inc
xchg
mov
sub
adc
imul
sub
add
xchg
inc
test
es
mov
jae
jmp
shr
xor
ficom
fld
xor
bound
xor
xor
pop
or
int
les
test
lock
xor
loop
sub
push
or
mov
out
pop
(bad)
push
std
and
inc
sbb
cmps
hlt
lods
mov
pop
mov
add
sub
in
push
mov
cdq
outs
xchg
std
std
dec
adc
add
dec
in
pop
dec
push
fsub
mov
rol
mov
mov
dec
popf
out
dec
test
push
dec
pop
cdq
mov
xor
movs
retf
in
push
push
(bad)
imul
push
es
neg
mov
or
xchg
(bad)
push
xchg
icebp
mov
hlt
and
rcl
repz
dec
sub
jno
adc
mov
pop
clc
inc
mov
sbb
jmp
sbb
or
dec
popa
jl
data16
out
imul
cmp
and
adc
popf
je
stos
mov
pop
sbb
into
adc
add
push
call
and
imul
in
into
inc
xchg
retf
xchg
out
mov
pop
or
scas
mov
and
sbb
cmp
fsubr
test
pop
inc
ficom
dec
and
iret
(bad)
leave
pushf
test
(bad)
cmc
call
push
sbb
popa
dec
iret
pop
ss
pushf
inc
dec
clc
mov
dec
stos
(bad)
adc
repnz
pushf
mov
add
cli
push
inc
jp
es
sti
and
and
inc
mov
sbb
xor
nop
jl
inc
sbb
sub
bound
dec
sar
out
pushf
xlat
div
sbb
popf
daa
ins
mov
lods
jbe
rcr
add
ja
mov
dec
stos
nop
jbe
xchg
dec
pop
cmp
leave
pop
stc
scas
outs
ficom
dec
xor
adc
inc
fucom
cmps
mov
push
in
les
sub
cmps
(bad)
and
xor
jl
cmp
mov
sub
in
sub
std
js
push
and
and
mov
pop
cmps
fcomp
jmp
iret
pusha
daa
dec
ret
clc
jo
(bad)
cmp
pop
xchg
mov
cmps
rcl
in
pusha
inc
ins
mov
les
ret
test
or
xchg
daa
sbb
xor
dec
mov
cld
dec
pop
mov
sahf
jmp
fwait
xchg
mov
cld
push
mov
xchg
fst
out
lea
jo
mov
xchg
(bad)
(bad)
xor
sbb
call
mov
fadd
scas
push
sbb
mov
adc
movs
mov
inc
add
mov
rol
mov
(bad)
mov
inc
fsub
push
pop
dec
push
pop
adc
ret
(bad)
aad
ins
adc
jb
and
(bad)
sti
dec
mov
(bad)
adc
push
int3
aaa
imul
ds
bound
mov
lods
xor
xchg
sbb
push
xchg
cmc
test
(bad)
lock
es
add
in
mov
ins
and
jecxz
mov
or
cld
mov
dec
sbb
sbb
inc
pop
inc
repz
xor
(bad)
mul
push
fsubr
inc
out
xchg
lahf
adc
adc
mov
stc
jp
pop
and
or
sbb
fwait
jmp
lahf
cmc
mov
fld
fmul
push
add
mov
xchg
les
sub
adc
hlt
(bad)
hlt
add
sub
add
arpl
xor
lock
scas
jno
push
mov
mov
dec
(bad)
jno
xor
or
sub
xor
mov
cmp
jno
and
stos
nop
pop
lahf
mov
add
jp
or
lock
xor
mov
call
clc
test
xlat
lds
test
das
push
sub
and
(bad)
cmp
stos
push
test
lea
xchg
mov
fnstenv
mov
sub
inc
test
inc
shr
jmp
push
mov
cs
test
(bad)
mov
cld
sub
push
adc
cwde
jmp
or
pushf
cmp
fdivr
fs
sbb
sub
movs
jbe
dec
and
inc
jo
call
mov
xchg
popf
(bad)
xor
movs
inc
pop
and
adc
xchg
mov
clc
mov
mov
and
mov
adc
inc
jg
popa
mov
xlat
mov
and
push
es
cmp
cmp
mov
(bad)
das
cmp
push
jnp
sub
imul
rcr
mov
and
rcl
inc
xor
mov
cmp
or
call
sahf
inc
(bad)
icebp
xor
cmp
jns
jecxz
xor
loop
imul
out
frstor
mov
mov
cmc
jo
fdiv
xor
ss
dec
adc
dec
xlat
pop
(bad)
fs
push
mov
xor
mov
mov
inc
mov
cmc
xor
mov
pusha
fiadd
bound
(bad)
xor
test
push
mov
loopne
vfmaddsub213ps
push
out
pop
pop
xchg
mov
dec
cmp
dec
sub
outs
or
xchg
int
cmps
jg
retf
arpl
mov
dec
xchg
cmp
mov
lahf
stos
ins
sbb
fdiv
lock
pop
and
xchg
imul
mov
push
jbe
push
out
mov
aas
cmp
xchg
jp
mov
sub
ror
cmp
sub
mov
and
adc
in
stc
je
(bad)
ins
xchg
inc
jmp
mov
repnz
fadd
jge
xor
add
imul
iret
inc
ffreep
xchg
push
loop
enter
xchg
cmps
loopne
sub
pop
pop
loop
mov
inc
outs
cs
push
cmc
test
ins
jp
add
(bad)
rcl
rcl
scas
pop
sub
cwde
inc
call
dec
pushf
fbld
mov
mov
(bad)
jno
fnstcw
dec
xchg
clc
cmps
adc
add
loope
jb
push
mov
movs
iret
shl
imul
div
pop
shl
or
cli
inc
pushf
pop
cwde
dec
mov
xor
sahf
pop
scas
inc
sbb
push
int
mov
aam
test
in
fild
xor
je
pop
iret
mov
mov
lods
into
jbe
xchg
pop
js
xor
inc
push
dec
or
(bad)
fst
jl
xchg
push
mov
iret
mov
enter
adc
push
sahf
into
arpl
mov
and
xchg
and
iret
pop
jbe
outs
test
jo
icebp
inc
xchg
xadd
and
adc
xor
inc
xor
mov
je
(bad)
pushf
in
jmp
adc
add
xchg
inc
hlt
jo
addr16
loop
xchg
les
popa
add
xchg
icebp
jg
jg
fidiv
jecxz
xchg
jbe
dec
cdq
pop
adc
add
inc
out
sub
push
js
mov
push
sbb
jg
inc
jmp
int3
or
mov
call
out
shl
pop
mov
jno
scas
xchg
inc
jg
mov
inc
int3
or
ret
pop
out
ds
cli
add
xchg
push
add
enter
popa
mov
mov
outs
rcr
jb
icebp
das
fiadd
idiv
movups
icebp
and
inc
rcl
sub
mov
arpl
xchg
lods
xor
out
in
push
pop
push
rol
shr
xchg
(bad)
je
jg
std
adc
push
and
xor
and
add
or
in
jno
shl
xor
bound
stos
add
jl
in
add
and
hlt
dec
dec
shl
xchg
cmp
mov
fsubrp
sub
sbb
adc
lahf
sub
mov
mov
(bad)
cs
out
sbb
adc
or
and
cmp
pop
dec
fisttp
push
adc
cmp
mov
ss
inc
cmp
pop
daa
cmp
not
mov
inc
call
lock
sub
mov
into
xor
out
xchg
dec
scas
and
sahf
lods
into
lock
in
fs
shr
adc
cs
ins
xchg
mov
inc
outs
pop
sahf
lods
dec
xor
ds
mov
shr
data16
push
dec
sti
adc
dec
movs
pop
pop
stos
inc
mov
fsubrp
into
cld
inc
xchg
mov
adc
fs
push
ret
rcl
sub
add
es
push
adc
and
xor
push
scas
sbb
scas
xchg
ficom
bound
inc
inc
stos
push
movaps
lock
shl
fstp
jmp
outs
ins
test
sahf
lods
mov
lock
loopne
push
sub
dec
and
adc
scas
jb
sub
fwait
movs
dec
push
mov
fidiv
fisub
ror
pop
pop
push
push
dec
js
aam
adc
add
push
cdq
out
xchg
rol
mov
pushf
pushf
lock
add
xor
test
ins
jg
adc
je
cld
push
push
push
sbb
mov
cmp
pusha
into
xor
jecxz
pop
sahf
cmps
test
stos
nop
push
nop
adc
jno
jmp
shr
daa
push
xor
xor
inc
movs
jmp
mov
pop
jmp
add
sbb
test
pop
pusha
outs
jno
adc
mov
cwde
ret
sbb
dec
pusha
(bad)
mov
ins
pop
je
inc
outs
add
jmp
mov
lock
mov
add
xlat
cwde
cmp
and
push
mov
fidivr
arpl
jo
fldln2
(bad)
pop
(bad)
repnz
es
outs
pop
xchg
jecxz
loopne
arpl
neg
mov
shr
pop
cmp
jno
popf
sbb
aad
stc
(bad)
push
and
pusha
mov
(bad)
faddp
and
xor
pusha
popa
sbb
dec
cmp
dec
stos
inc
in
in
imul
jno
push
ins
push
adc
sahf
mov
mov
bound
cmp
inc
loop
dec
nop
xor
iret
mov
jo
mov
fcmovnb
test
call
int3
nop
and
inc
xchg
push
jo
or
xor
mov
and
push
dec
push
dec
je
inc
popa
ret
cs
(bad)
and
fcomp
pop
loopne
push
jecxz
pusha
jo
and
sahf
xlat
fst
nop
fild
ret
mov
shr
cmp
jne
(bad)
imul
sar
cwde
out
pop
je
mov
push
sub
push
push
not
fidiv
imul
xor
sahf
mov
repz
nop
jle
out
push
mov
int
outs
bound
pushf
loope
push
repz
fdivr
mov
aam
inc
not
aas
or
dec
mov
fild
(bad)
pusha
mov
cmp
push
add
inc
(bad)
retf
out
mov
pop
dec
icebp
jno
repz
jg
push
loope
hlt
jp
ftst
pop
popa
adc
ins
push
les
push
cmps
cdq
ret
(bad)
hlt
push
and
scas
push
add
jecxz
xchg
jecxz
pushf
std
mov
fpatan
cld
add
cdq
add
sub
dec
pop
shl
(bad)
loopne
lods
pushf
aaa
mov
mov
jne
ficom
call
mov
test
push
pop
(bad)
out
jmp
je
add
icebp
mov
es
je
(bad)
in
outs
rol
outs
xor
pop
rcr
or
loope
push
sub
arpl
lahf
mov
inc
sar
out
je
mov
dec
jp
or
fwait
int3
push
sub
ror
jne
mov
xor
vunpcklps
and
add
pushf
arpl
inc
sub
(bad)
mov
in
test
aas
ds
sar
das
ins
push
out
and
fnstcw
add
add
push
sbb
cmps
add
jo
push
outs
dec
xor
jmp
scas
xor
and
ret
shld
aaa
int
sbb
jle
mov
sub
mov
jmp
pusha
fisub
push
in
(bad)
mov
inc
mov
outs
pop
pop
pop
jae
jge
test
repz
or
cmp
pop
retf
or
mov
test
push
loope
mov
adc
mul
das
jb
mov
sub
inc
pop
cmp
iret
mov
lock
pop
into
xor
inc
pop
mov
xchg
dec
loop
sub
(bad)
xchg
call
adc
call
adc
hlt
dec
jmp
add
rol
xor
rcr
add
pusha
cmp
aad
pusha
ins
push
mov
out
les
scas
sbb
adc
fucomip
fldcw
xor
inc
call
popa
mov
fimul
in
mov
repz
xor
inc
lock
rol
arpl
add
test
lods
retf
add
mov
cld
mov
sbb
jbe
or
cmp
xor
loope
lods
out
mov
das
test
pop
into
ds
mov
jbe
pop
xchg
xchg
cdq
inc
mov
ja
(bad)
out
scas
mov
or
xor
adc
pop
ins
in
mov
cwde
xchg
ret
xchg
(bad)
xlat
lds
push
adc
dec
daa
imul
mov
add
inc
into
ror
inc
repz
add
jle
fld
sahf
mov
jg
push
fcom
das
push
mov
dec
adc
cmp
dec
scas
enter
in
inc
or
and
cmc
mov
pusha
ins
scas
fwait
push
xchg
(bad)
psrlw
icebp
int
xor
fadd
in
cmps
pop
pop
mov
mov
loop
shr
pop
mov
mov
xchg
stc
movsx
dec
repnz
or
sub
and
mov
sub
cmp
js
add
and
adc
or
push
rcl
mov
add
icebp
fdivp
out
sbb
mov
adc
popa
push
imul
test
repz
cmps
adc
add
ffreep
je
jno
adc
shl
or
icebp
outs
add
mov
add
inc
(bad)
push
mov
pop
stos
dec
lock
sub
jbe
aad
aam
sbb
sub
add
adc
push
jno
adc
mov
jb
pop
push
shl
shl
add
adc
fild
out
adc
js
push
test
and
adc
cmp
xchg
xor
inc
iret
and
sbb
fdiv
mov
inc
mov
enter
hlt
fnstsw
dec
or
in
getsec
sbb
sbb
cmps
dec
dec
mov
push
inc
scas
jg
outs
cmp
frstor
or
cld
inc
lods
dec
call
mov
sbb
out
mov
ror
into
push
pop
cmps
mov
sbb
sbb
inc
pop
mov
add
lock
(bad)
(bad)
jl
out
retf
shr
adc
mov
nop
mov
data16
or
jb
push
dec
inc
xor
mov
xchg
cli
aad
sub
sti
push
rcr
xchg
and
push
push
dec
jae
mov
sub
mul
into
adc
dec
shr
dec
shr
push
mov
popa
mov
stos
pop
repz
push
fidiv
sbb
test
sub
and
adc
or
cmp
popa
mov
push
xchg
fnstenv
dec
in
cmc
xor
fdivr
or
std
push
jle
iret
loopne
or
cld
lea
loopne
aaa
ins
dec
and
(bad)
sbb
sbb
push
dec
xor
adc
sahf
mov
outs
mov
or
dec
and
sub
jo
xor
inc
lock
mov
mov
out
sar
jne
shl
ret
pushf
nop
mov
mov
(bad)
mov
mov
pop
and
pop
mov
add
shl
xchg
mov
jmp
cmp
inc
outs
mov
cmps
sbb
and
push
outs
sbb
aaa
xor
dec
js
cmp
cmp
(bad)
and
mov
shr
gs
popf
xor
pushf
loop
cmp
fstp
mov
mov
pusha
dec
fsubp
repz
int
bound
and
jnp
repnz
pop
push
inc
rol
ret
cmc
popa
into
push
jle
inc
mov
icebp
or
add
mov
sbb
loope
stc
pop
std
add
dec
jne
mov
loopne
push
adc
icebp
cwde
push
xor
adc
xchg
mov
add
xor
bound
push
pop
sahf
test
jae
rcl
retf
scas
sbb
adc
add
fcmovb
push
lods
sub
xchg
or
outs
jmp
out
aam
dec
pop
and
mov
in
mov
jnp
or
rcl
mov
not
push
and
js
inc
xchg
fsubp
in
shr
cmp
fwait
pop
mov
mov
mov
adc
jl
mov
shl
clc
jecxz
mov
inc
xchg
jl
dec
xchg
pop
mov
cmp
in
aam
movs
mov
jecxz
in
mov
pop
mov
pop
mov
fwait
movs
cdq
lock
loope
dec
sbb
inc
dec
fidiv
test
out
adc
mov
mov
aas
cmp
loopne
or
push
jge
inc
outs
add
jge
cmps
mov
stc
stos
adc
cld
(bad)
ss
mov
inc
sbb
xor
pop
mov
or
enter
sti
data16
sbb
pop
nop
lahf
cld
and
retf
jo
lods
mov
lock
sub
xor
add
lock
popa
add
imul
nop
or
(bad)
push
xchg
jp
lock
and
mov
xchg
pop
jno
mov
out
mov
and
ja
mov
dec
movs
mov
loopne
imul
inc
jo
sub
push
popf
and
clc
jp
popf
dec
inc
jnp
scas
addr16
push
mov
outs
sub
out
out
aad
jp
lock
inc
dec
pop
jmp
push
std
imul
xchg
inc
push
mov
scas
adc
xchg
aas
stos
push
jno
push
rol
mov
mov
adc
mov
and
repz
cli
dec
mov
mov
and
shr
xor
or
cli
xor
push
mov
leave
ins
inc
inc
ret
out
loopne
sbb
sub
mov
add
into
mov
out
cmovg
mov
mov
cs
xor
adc
push
sahf
mov
mov
icebp
neg
iret
test
out
mov
xchg
mov
loope
push
icebp
out
cmp
mov
aam
and
mov
or
ja
imul
fstp
ss
fldln2
scas
mov
shl
xchg
or
fdivr
and
icebp
aaa
xor
push
fs
enter
or
repnz
int3
out
lahf
push
and
mov
mov
scas
into
test
aas
call
loopne
or
inc
jno
xchg
cs
or
sbb
not
push
dec
cwde
fisubr
fsubp
dec
shr
mov
dec
adc
inc
scas
movs
mov
outs
add
adc
ret
push
cmp
mov
cmp
dec
adc
push
lea
retf
lods
cdq
pusha
repz
(bad)
cmp
sbb
xor
inc
mov
loope
jecxz
mov
outs
xchg
xor
fcomip
(bad)
out
es
movs
xchg
dec
icebp
outs
jno
inc
arpl
inc
mov
jle
repnz
fbld
jmp
test
iret
ins
daa
xor
dec
jbe
cmps
add
inc
push
cmps
jae
inc
in
push
stc
lods
xchg
xchg
popa
mov
icebp
test
imul
popf
mov
and
rol
jecxz
pop
adc
retf
jl
fild
aas
adc
xchg
sub
repnz
mov
cs
and
xchg
jp
test
pop
mov
inc
dec
xchg
enter
fdiv
leave
cwde
fidivr
bnd
sub
push
dec
pusha
mov
jb
sub
test
cmps
or
cmp
rcl
inc
push
loopne
and
xchg
nop
push
outs
lds
shr
mov
cs
mov
adc
sbb
and
iret
outs
pcmpeqb
jg
dec
pop
and
pop
iret
mov
dec
aaa
and
rcl
and
adc
stos
data16
inc
(bad)
mov
inc
push
shl
adc
xchg
mov
sub
add
adc
imul
mov
into
push
push
lock
push
adc
ds
out
pop
inc
adc
in
cli
xor
ins
mov
inc
inc
rcr
int3
mov
shl
and
fsub
mov
dec
pusha
cmc
(bad)
fidivr
add
lock
jle
into
add
add
movs
cmps
loopne
cmp
dec
lahf
mov
lock
dec
in
into
mov
imul
cld
xchg
jl
mov
cmp
into
pushf
bound
out
out
fcomp
imul
pop
ror
lock
mov
mov
scas
sub
data16
aam
(bad)
ds
inc
scas
mov
rcr
test
cmps
fs
lods
sahf
pop
or
dec
push
in
or
push
inc
shl
jge
out
pop
pop
xor
mov
adc
add
ds
out
sbb
add
adc
inc
imul
in
add
sub
push
leave
sbb
ret
fstp
cld
pop
xchg
sbb
shr
ins
jl
xchg
sub
enter
pop
dec
or
pushf
push
loopne
ins
cmpxchg
dec
mov
fdiv
sub
outs
inc
adc
and
add
outs
xor
mov
leave
test
xchg
mov
xchg
into
lods
xor
or
(bad)
ds
mov
movs
or
(bad)
pusha
inc
cs
jno
xchg
ja
es
push
push
fnstenv
mov
fstp
mov
push
(bad)
cmp
dec
mov
push
mov
push
cs
out
ror
(bad)
pand
mov
iret
add
cmp
push
hlt
xor
ss
sub
and
pop
mov
mov
test
loopne
retf
clc
xor
add
adc
(bad)
push
cs
sbb
mov
lock
ret
sbb
xor
fsubr
adc
mov
int
add
jecxz
retf
jmp
icebp
out
ret
sbb
jae
fdivr
inc
lods
pop
mov
inc
jb
into
xor
mov
xor
mov
pop
rcl
mov
xchg
mov
push
loop
shr
cmp
add
popa
push
pusha
push
shl
mov
(bad)
and
dec
(bad)
cld
jbe
jge
into
test
cmps
mov
pop
leave
scas
pop
lods
inc
adc
jae
cmps
leave
imul
ds
jle
push
ins
in
jnp
push
sbb
lods
add
nop
adc
int3
clc
ret
adc
adc
or
pusha
aam
fwait
jl
mov
(bad)
push
xor
into
cmp
or
and
and
clc
sahf
fsubr
sbb
push
inc
mov
dec
mov
add
out
cmpps
pusha
loop
jae
add
or
sbb
jecxz
lock
enter
lds
xchg
jg
ds
test
repnz
packsswb
sub
push
outs
add
jl
and
jge
add
cld
jb
inc
out
int3
mov
sbb
cli
aad
cmps
jle
shl
mov
sbb
test
(bad)
in
mov
sbb
dec
popa
outs
nop
mov
xchg
xor
scas
add
mov
iret
jns
lods
mov
push
add
xchg
push
mov
pop
jle
push
mov
mov
sbb
rsm
inc
fcom
lea
inc
scas
xchg
xchg
adc
in
rcr
cmp
jle
dec
in
mov
or
inc
and
xlat
in
dec
push
jp
outs
cmp
add
xchg
aas
imul
dec
jno
mov
sub
push
xor
pusha
push
fistp
adc
mov
jle
outs
dec
jmp
mov
mov
cld
dec
popf
ds
adc
test
jp
jae
retf
jnp
sbb
pop
jae
(bad)
mov
icebp
xlat
pop
xor
push
inc
inc
pop
lods
je
push
pushf
fidivr
inc
call
xor
mov
(bad)
or
cmp
jbe
mov
into
add
dec
adc
add
out
adc
push
movs
xlat
outs
mov
out
sub
imul
pop
aas
iret
and
aaa
adc
dec
inc
lods
inc
sbb
dec
mov
jecxz
outs
pusha
mov
push
add
loopne
ret
loop
and
aam
test
dec
jge
inc
add
int
adc
adc
ret
das
push
mov
fxch
retf
dec
xor
adc
dec
push
dec
(bad)
push
or
cmp
loopne
lods
xlat
push
scas
rcr
add
test
add
push
gs
fyl2xp1
stos
sbb
mov
outs
rcr
or
xchg
neg
and
out
ror
mov
shl
test
jns
inc
das
ins
and
xchg
sub
sbb
faddp
xchg
pusha
popf
jl
arpl
jmp
cmp
fcmovne
jge
ror
adc
sbb
rcr
sahf
inc
bound
cmp
pusha
mov
clc
test
iret
cmp
adc
xchg
outs
retf
clc
and
adc
mov
sub
ret
jp
inc
sbb
call
inc
retf
adc
and
aas
xchg
pop
in
int3
(bad)
jo
sar
xchg
inc
mov
sbb
repnz
mov
dec
mov
push
push
sbb
into
cs
test
mov
add
sahf
ret
lahf
inc
scas
aas
pop
sub
popa
mov
jne
mov
xchg
adc
popf
xchg
jb
bound
lahf
mov
inc
(bad)
xor
dec
push
bound
and
sub
jno
mov
lods
mov
cmp
mov
cs
shl
sub
fnstcw
fnstsw
cld
sbb
push
ret
mov
outs
and
mov
push
dec
pusha
inc
retf
loop
icebp
rcr
dec
popa
push
stos
outs
test
imul
or
sub
and
in
xchg
call
fild
mov
dec
mov
pop
outs
fild
jnp
pushf
pop
movs
mov
mov
aam
mov
sar
shl
(bad)
lods
xor
add
pop
jnp
dec
pop
pop
jae
mov
(bad)
pop
xor
adc
mov
xchg
or
jo
movs
popf
arpl
pop
adc
ins
mov
sbb
cmc
pop
or
mov
dec
pusha
je
loopne
lahf
in
push
sar
adc
mov
fdivr
inc
mov
dec
cmps
mov
pop
ss
xor
jge
pop
push
icebp
jecxz
cmp
mov
jb
pop
mov
add
paddb
ror
sbb
xor
cmp
mov
outs
adc
sbb
ret
inc
ds
and
jae
int
rol
mov
enter
mov
xor
xchg
xor
lods
adc
das
adc
mov
(bad)
push
ror
mov
or
mov
jns
cmp
ins
ds
dec
gs
sbb
(bad)
dec
ret
cmp
sub
lds
cmps
cs
mov
xchg
mov
pop
imul
xor
xor
shl
cmp
cmp
gs
cli
inc
xchg
or
aas
cld
and
stc
sbb
add
or
sub
pop
dec
or
imul
loope
lods
loop
and
lock
inc
cmp
xor
mov
cld
jb
dec
mov
jp
xor
pop
rcr
and
xor
pushf
mov
stos
sbb
sub
or
fmul
adc
mov
or
lea
pop
pop
mov
rol
mov
inc
out
push
add
mov
push
mov
inc
mov
das
xchg
cli
test
icebp
in
lock
mov
cmp
addr16
repz
and
arpl
jp
sar
aam
sub
mov
cwde
adc
mov
jns
in
xchg
pop
mov
scas
jl
loopne
aas
(bad)
arpl
rol
out
loope
inc
icebp
adc
cmp
arpl
sar
outs
retf
sub
pop
repnz
cmp
mov
outs
mov
push
lds
test
stc
mov
daa
add
out
xchg
jmp
fst
leave
mov
add
and
push
pusha
aas
adc
retf
dec
cmovns
cdq
outs
test
popf
into
cmc
pop
arpl
arpl
mov
movs
and
ret
lock
pop
push
mov
mov
add
pop
mov
push
fisub
jo
(bad)
inc
rcl
retf
loop
add
lods
into
lods
call
ss
ret
cmp
xor
aas
xchg
ret
mov
(bad)
push
and
mov
xchg
add
cs
adc
int3
pop
and
pop
push
sub
xor
call
clc
lock
ret
xlat
xor
das
iret
inc
sub
jb
gs
sahf
mov
rcr
sbb
cmp
loopne
pop
loope
jo
or
pop
and
push
arpl
and
cmp
retf
push
dec
cmp
jno
shl
sbb
retf
xor
push
inc
clc
fst
add
sbb
mov
lahf
ret
xchg
cmps
das
mov
dec
jo
nop
aad
popf
arpl
out
mov
mov
addr16
stos
dec
popf
gs
pop
lahf
loope
xchg
or
and
out
rcr
cwde
rol
outs
dec
lahf
int
outs
mov
aad
and
and
jecxz
push
loop
pop
nop
sub
push
inc
out
mov
or
push
xor
test
int3
retf
ret
ins
add
push
jae
dec
mov
ror
mov
mov
mov
imul
mov
and
add
and
adc
(bad)
mov
inc
adc
jg
push
pop
adc
mov
mov
push
cmp
cmp
out
out
in
fidivr
and
mov
outs
jl
pop
sub
into
sbb
push
frstor
pop
jmp
inc
sub
sub
cmp
mov
or
lods
fcmovbe
adc
rcl
mov
fs
cmp
cmp
cmps
std
ror
xchg
lea
in
inc
adc
add
xchg
div
and
pop
mov
dec
fistp
and
mov
daa
(bad)
push
push
ins
jmp
popf
lock
and
inc
mov
mov
jp
sbb
sbb
call
retf
jmp
mov
popf
pushf
bound
jmp
sub
fild
scas
aam
loopne
mov
sahf
lock
jbe
sbb
ins
mov
in
and
loope
cmp
jo
cmp
xor
jnp
xor
add
test
das
fs
repz
inc
xor
sar
lock
mov
and
adc
lds
fcomip
sahf
sar
(bad)
sbb
pop
imul
or
mov
jp
inc
hlt
fnstenv
outs
daa
in
mov
cmp
enter
(bad)
jo
mov
inc
jmp
leave
out
pop
rcr
sbb
sbb
dec
inc
push
pop
rol
repnz
mov
cmp
mov
pop
lds
sbb
repz
int
jo
cmp
xor
fstp
out
out
xor
adc
and
int
test
inc
pop
bound
mov
mov
add
jle
out
out
cmp
mov
and
fucomp
sub
add
aas
(bad)
or
cwde
inc
lods
out
rcr
leave
enter
inc
add
push
mov
mov
or
or
sahf
retf
xor
xor
dec
aaa
cs
arpl
repnz
pop
jp
repnz
scas
pushf
sbb
sbb
mov
jp
das
and
xchg
adc
inc
xchg
imul
lea
sub
or
ret
loope
sbb
adc
inc
popa
xor
not
mov
or
inc
lds
adc
xor
shl
add
stos
inc
outs
push
je
scas
mov
xchg
or
or
add
into
jg
jle
dec
in
retw
push
xchg
or
add
adc
ins
divps
out
rcl
loopne
lock
cs
ins
jle
push
inc
push
mov
push
ror
xchg
pop
(bad)
dec
repnz
aad
xor
jge
out
daa
vdivpd
shl
loopne
xchg
dec
pop
and
lahf
jbe
cmps
jge
scas
add
adc
outs
pushf
dec
lahf
loopne
sub
vlddqu
and
aam
adc
inc
xor
mov
repnz
in
lock
test
lock
pop
adc
(bad)
mov
cs
mov
sti
in
pop
mov
in
mov
sbb
arpl
push
aad
jne
xor
jo
xchg
dec
repnz
push
enter
inc
lock
jl
ror
fwait
xchg
xchg
shl
popa
mov
jno
sar
and
rol
sbb
fadd
sub
adc
test
inc
adc
(bad)
std
dec
fild
lds
mov
cmp
push
bound
pop
jno
mov
pusha
pusha
std
fidivr
pop
add
sar
pop
xor
out
lea
push
fadd
inc
(bad)
push
inc
or
sub
push
sbb
sub
sub
pop
in
je
fwait
inc
add
out
movs
jnp
cdq
ja
pop
int3
in
loopne
out
jmp
and
call
call
sbb
jo
iret
xchg
scas
je
xchg
pop
jmp
sar
pusha
xor
fidiv
mov
mov
cmp
out
xor
out
dec
pop
shl
jno
pop
add
mov
mov
ds
icebp
or
(bad)
test
add
arpl
xor
push
xchg
lods
jle
xchg
es
call
and
xor
push
push
jno
rcr
mov
xchg
pusha
(bad)
loope
ds
push
adc
fdivrp
sub
add
(bad)
rcl
(bad)
push
sbb
sub
inc
cmc
fisttp
pusha
outs
jne
pop
xor
test
inc
out
inc
mov
push
cld
bnd
push
mov
adc
sbb
push
xor
scas
scas
rcr
lock
aas
div
mov
aad
fwait
bound
fs
nop
pushf
call
pmulhuw
loopne
lock
aas
cld
cs
lods
dec
mov
mov
push
mov
adc
sar
in
jno
pop
and
add
aas
or
pop
arpl
outs
xor
mov
sbb
out
out
adc
pop
push
push
add
pop
test
jo
push
ins
push
dec
push
xor
ins
push
pop
mov
std
pop
das
das
and
scas
and
add
nop
add
inc
outs
mov
and
rol
adc
aas
fsubrp
lahf
mov
loop
inc
push
xchg
mov
pop
(bad)
sti
psllw
add
or
cs
xchg
sbb
out
loop
mov
icebp
pop
fwait
xchg
cmp
rol
adc
call
outs
and
mov
mov
sub
pop
adc
inc
in
add
lahf
(bad)
mov
pop
xor
sahf
mov
xchg
call
test
mov
(bad)
fs
cmp
lock
nop
add
mov
das
sub
inc
(bad)
into
cmp
and
dec
mov
cmc
(bad)
in
out
and
in
loopne
mov
movs
shl
pop
fsub
pop
in
iret
or
mov
rol
loope
fidiv
out
pop
and
add
les
mov
popa
mov
xor
push
cmp
push
fbld
adc
outs
mov
cmc
imul
and
sub
cmp
shl
jle
ror
and
xchg
scas
cmp
jns
rcr
mov
inc
sbb
dec
adc
fwait
push
push
addr16
dec
loop
ret
push
rcr
push
test
pop
adc
push
icebp
mov
sbb
in
retf
pop
xchg
sbb
pusha
and
sbb
adc
fimul
pop
jb
xchg
push
jne
arpl
mov
rcr
pop
dec
xor
fstp
imul
add
mov
into
sbb
outs
or
adc
adc
pusha
mov
xor
jns
jae
fst
mov
(bad)
retf
cmp
mov
push
ds
push
loopne
fnstsw
xchg
push
push
or
jp
pusha
mov
aaa
mov
pop
shl
push
repz
sbb
test
in
mov
scas
(bad)
loope
scas
movs
lahf
out
out
int
cmp
sbb
fdiv
nop
adc
loope
dec
and
or
out
into
adc
mov
sub
inc
xchg
cmps
jecxz
shr
fiadd
sub
xchg
add
fstp
dec
(bad)
lahf
adc
imul
sbb
in
jle
fdiv
call
int
xor
lock
iret
xchg
(bad)
xlat
push
mov
add
fcomi
aaa
xor
sub
mov
jecxz
fucom
mov
pop
sahf
push
enter
push
and
push
or
sbb
mov
pop
int
shl
aas
jno
in
retf
(bad)
sub
ds
icebp
(bad)
bound
cs
out
xor
jmp
out
jle
retf
mov
jne
rcr
das
adc
mov
ins
stc
xchg
cmp
mov
out
mov
stos
mov
add
mov
inc
shl
(bad)
jnp
repz
outs
dec
mov
mov
sbb
add
rcl
in
mov
xchg
rcl
cmp
or
leave
leave
push
cs
sahf
xchg
mov
mov
pop
test
lahf
shr
dec
rcl
sbb
outs
imul
icebp
ror
scas
cmps
das
adc
aam
mov
mov
cmp
(bad)
sbb
mov
pop
pop
(bad)
outs
cmp
arpl
mov
loope
pop
xchg
dec
repz
xor
imul
mov
sbb
imul
aaa
fwait
outs
xor
push
and
in
and
pop
sbb
mov
inc
test
das
pop
stos
adc
cmp
adc
ds
lahf
sbb
mov
loop
push
gs
add
add
ins
loopne
or
add
push
js
pop
inc
ds
into
xor
lods
das
pop
xchg
fist
jns
stos
jle
pop
push
sub
push
push
in
rcr
retf
sub
not
int3
xchg
addr16
mov
add
sbb
sub
mov
test
jle
adc
pop
mov
push
stos
push
test
xor
lds
add
sahf
xor
mov
xchg
mov
lods
stos
inc
icebp
cld
mov
sub
repnz
adc
stos
mov
ret
jns
pop
xor
or
mov
pop
sub
add
sahf
mov
popf
and
adc
and
lock
push
add
adc
pop
and
jle
jno
adc
in
and
jge
hlt
test
pusha
push
add
cmp
fcomp
mov
adc
rcr
retf
dec
jp
mov
pop
xor
add
sub
sar
adc
jns
test
jno
push
retf
lahf
mov
adc
div
dec
in
fidiv
icebp
or
leave
scas
ja
jne
in
fild
mov
shl
pop
icebp
jns
adc
test
push
jae
test
popa
jns
ficomp
stc
push
sbb
popa
xchg
jmp
pop
outs
icebp
and
xor
jns
fcomp
push
inc
cmp
pop
and
es
dec
hlt
jle
push
stc
xchg
pop
and
push
cdq
call
jns
mov
movs
lea
mov
icebp
adc
adc
enter
pop
rcr
(bad)
cmp
fimul
pusha
mov
inc
int3
mov
(bad)
sub
in
cmp
xor
push
push
out
(bad)
inc
jae
(bad)
sbb
xor
inc
mov
pop
xchg
jb
xor
pushf
neg
xor
mov
repnz
mov
xchg
sbb
clc
dec
xchg
mov
ret
xchg
pushf
neg
aad
cmp
cmp
fimul
mov
mov
or
inc
imul
ss
jmp
add
ds
xchg
pop
ds
xchg
adc
xor
mov
(bad)
imul
mov
arpl
push
add
imul
lds
xor
dec
test
jmp
ror
jae
mov
pop
add
mov
or
or
sysret
mov
fnstsw
sub
or
pushf
xor
mov
mov
push
dec
pop
xchg
mov
sbb
fdiv
cmp
test
dec
push
out
cli
lea
or
sub
mov
jb
mov
mov
cmp
mov
dec
or
xor
test
fdiv
and
jb
shr
or
or
add
mov
or
pop
ja
mov
pop
nop
push
test
loopne
xchg
int3
shl
mov
inc
cmp
mov
cdq
xchg
imul
jae
shl
xor
mov
jecxz
xchg
pop
xor
add
xor
out
jmp
daa
push
mov
mov
mov
mov
lea
clc
out
add
daa
adc
test
and
stos
xor
and
sar
sub
daa
popa
pop
xor
movs
jns
std
sti
xchg
add
cmps
xchg
addr16
mov
ins
adc
cmp
in
stos
xor
ins
daa
enter
pop
jmp
xchg
xor
imul
pop
mov
pop
test
jge
jmp
in
inc
mov
cmps
xchg
std
xor
daa
not
adc
cmps
xchg
out
mov
shl
mov
and
jecxz
jecxz
mov
cmp
and
out
hlt
call
stos
xor
inc
lods
mov
cmps
xchg
(bad)
nop
out
daa
or
aam
sub
shr
loop
dec
lods
outs
scas
mov
mov
arpl
mov
pop
mov
xor
out
addr16
dec
addr16
mov
aaa
and
jne
mov
jo
iret
xor
mov
dec
stos
mov
popa
inc
iret
outs
xchg
jmp
jno
mov
retf
addr16
add
mov
cmp
in
stc
call
jecxz
gs
imul
xor
and
push
jno
push
mov
in
in
cmp
xchg
pop
ret
push
inc
leave
cmps
pop
ror
sbb
inc
ss
xor
shl
pop
push
sub
into
dec
or
dec
inc
iret
jb
adc
lds
lds
ds
jge
popa
shr
push
sub
or
leave
or
inc
cld
je
je
dec
or
retf
adc
and
ror
mov
leave
sbb
aam
lea
test
inc
dec
retf
pop
push
fst
mov
or
dec
cmp
mov
xchg
xadd
jns
inc
into
inc
into
(bad)
dec
(bad)
dec
(bad)
dec
(bad)
fld
inc
xor
inc
mov
ds
mov
inc
jb
sub
sar
inc
inc
push
cwde
fadd
inc
rol
ret
cmp
mov
inc
xchg
sbb
push
dec
cmp
mov
retf
dec
in
xor
inc
or
inc
mov
ins
rol
or
leave
mov
leave
and
xchg
jmp
ret
repz
mov
and
lods
cli
push
leave
inc
inc
gs
ror
xchg
cmpps
mov
rcr
add
repz
mov
fwait
mov
and
into
repz
shl
jae
faddp
jl
push
xor
mov
sti
xchg
lahf
or
push
ss
push
adc
pop
inc
fwait
adc
xchg
xchg
pop
push
cmp
sbb
aas
ret
fist
fwait
push
adc
fcomp
mov
aas
pop
dec
fsubr
dec
popa
adc
test
rol
fmulp
add
aas
fstp
cdq
xchg
das
push
adc
cmp
out
shl
pop
xlat
scas
mov
jmp
sub
sbb
(bad)
bsf
xlat
(bad)
xchg
jg
dec
pop
jl
jp
das
(bad)
(bad)
push
and
adc
xlat
outs
sbb
jle
(bad)
shl
inc
inc
fist
xlat
xchg
aas
jae
sahf
push
sti
push
lods
test
dec
repz
xchg
fist
jnp
mov
pop
aas
xlat
pop
add
repz
push
sti
xchg
sti
xlat
dec
xlat
ins
repz
mov
push
xchg
fwait
xlat
(bad)
loopne
(bad)
xlat
dec
ja
push
enter
jecxz
xlat
iret
and
mov
add
xchg
xlat
add
imul
push
pop
ins
sub
xchg
add
lahf
imul
dec
push
xlat
(bad)
xchg
call
mov
xlat
jae
cmp
outs
xlat
loop
mov
ja
fwait
aas
repz
fwait
xlat
(bad)
jecxz
mov
fcmovu
xchg
mov
repz
push
mov
(bad)
in
jnp
and
test
sti
xchg
das
push
in
pop
aaa
push
jecxz
pop
adc
mov
fstp
icebp
adc
pop
lahf
retf
xor
rcr
sub
rol
(bad)
sti
or
pop
mov
(bad)
out
inc
es
sub
mov
imul
test
cmp
adc
ret
inc
jecxz
sub
sub
add
mov
xchg
pop
sub
jmp
sbb
mov
das
push
add
loope
push
jmp
sub
stos
es
inc
imul
mov
add
ins
pusha
cld
inc
imul
ret
arpl
or
mov
sub
adc
les
mov
movs
out
xor
adc
jo
inc
mov
pop
lock
test
rol
inc
jnp
ja
iret
cmps
loope
retf
and
repnz
call
addr16
dec
jecxz
in
addr16
repnz
mov
jp
pop
int
std
and
add
in
jbe
sub
lahf
push
div
arpl
ret
cmp
fdiv
idiv
dec
mov
jmp
pop
push
mov
hlt
add
adc
sub
loopne
jecxz
mov
jo
loopne
mov
and
(bad)
ss
push
(bad)
enter
cdq
pop
imul
or
(bad)
(bad)
xchg
(bad)
cmp
lods
lea
loop
mov
mov
sbb
in
lea
inc
jmp
aas
out
mov
mov
pop
pop
nop
jmp
fcmovnbe
lea
in
jge
sub
xor
pop
add
ins
das
test
mov
out
sub
adc
xchg
lahf
cmovs
aam
sub
lods
scas
fwait
outs
jmp
xchg
pop
mov
outs
mov
lods
fsubr
cmp
arpl
jmp
and
nop
ror
scas
push
mov
das
inc
daa
or
xchg
dec
imul
outs
stc
sbb
lods
pop
add
sub
or
das
imul
jns
ins
lahf
or
and
xchg
fidivr
jl
cmp
ds
(bad)
xor
outs
mov
sub
cmps
imul
push
imul
nop
cmp
jmp
xor
mov
xchg
sub
pop
imul
mov
jns
loope
loopne
mov
(bad)
xchg
(bad)
outs
sub
cmp
in
jo
and
lds
sub
leave
cmps
sub
and
popa
outs
dec
lods
lods
jmp
and
lea
sub
ds
mov
ds
mov
jmp
add
sbb
jmp
in
retf
sbb
push
push
stos
das
mov
out
imul
hlt
or
or
in
or
and
xor
test
fldcw
jle
sbb
sbb
add
jp
jno
cmp
add
movs
jae
repnz
add
scas
in
(bad)
cmp
jmp
dec
call
or
sub
(bad)
xchg
mov
pusha
out
mov
adc
imul
jmp
movs
mov
pop
adc
push
mov
mov
and
jns
push
push
pop
add
aad
mov
inc
sub
mov
int
frstor
cwde
lea
sar
and
jne
push
popf
jns
xchg
shl
cmp
cmp
dec
int
dec
ins
fld
dec
mov
mov
movs
jge
push
idiv
lock
test
(bad)
pop
mov
xchg
lahf
(bad)
ficomp
pop
or
pop
lock
mov
loope
xchg
pop
jno
adc
cmps
mov
xchg
xor
stc
ret
sbb
adc
xor
inc
pop
jno
xchg
cdq
inc
stc
push
icebp
mov
cmp
sbb
cdq
add
jno
adc
lea
icebp
mov
mov
ror
jns
pop
jno
ret
stc
xchg
pop
jno
inc
sbb
stc
sbb
out
dec
xchg
inc
xor
cmp
mov
movs
pop
test
sbb
add
add
fcmovnb
pop
jno
sbb
ja
dec
xchg
mov
(bad)
pop
mov
sbb
sub
mov
jge
popa
dec
icebp
mov
xor
xor
inc
dec
sahf
mov
repz
ret
mov
pusha
or
jecxz
jmp
int3
dec
xchg
dec
cmp
and
int3
call
or
(bad)
cmp
bswap
or
lods
jo
cmp
repnz
mov
ja
sar
shr
jbe
fmulp
jmp
cmp
push
int3
xor
mov
add
dec
ins
cld
xor
int3
mov
call
pop
dec
cmp
outs
cli
call
mov
rcr
inc
mov
lds
adc
jnp
push
movs
sar
cmp
pop
pushf
sub
xor
inc
xchg
dec
jbe
mov
xor
xchg
ss
iret
xchg
jbe
lea
call
jmp
ins
int
ss
cmp
dec
call
mov
and
sbb
or
inc
mov
cwde
xor
mov
(bad)
xor
push
rcl
movs
es
sbb
push
sbb
xor
dec
sbb
das
ins
fwait
xor
mov
rcr
sar
mov
enter
or
add
sahf
inc
mov
xchg
movs
pop
inc
jbe
inc
cmps
mov
fwait
mov
ficomp
cli
push
ror
xor
pop
push
dec
dec
test
int
dec
xor
pop
mov
int3
iret
sbb
dec
cmp
fiadd
inc
push
dec
mov
sbb
fidivr
fmulp
imul
aas
push
fiadd
push
int3
call
(bad)
mov
or
popf
scas
enter
repz
pushf
inc
dec
sub
jnp
and
sbb
sub
jge
jno
movs
imul
cmp
ss
mov
pop
movs
cmp
xchg
add
and
mov
xchg
loop
dec
or
sbb
mov
cwde
jle
movs
ins
add
in
jle
push
loop
js
cwde
imul
sub
or
jmp
nop
xor
bound
sbb
sar
sbb
enter
shr
(bad)
out
push
lea
inc
rcr
jle
mov
popf
rol
(bad)
int
push
and
popa
and
std
sahf
dec
rol
loop
or
dec
mov
push
mul
sbb
jle
mov
pop
pop
adc
ins
adc
jmp
stc
pop
pop
adc
ins
adc
lods
test
popa
push
jle
mov
outs
or
mov
adc
jmp
xor
or
inc
mov
pop
cmc
lods
ror
imul
mov
movs
pop
icebp
push
or
popa
bound
hlt
push
ret
nop
nop
xor
loopne
fnsave
mov
ds
sbb
adc
in
adc
mov
sar
dec
inc
fadd
inc
fistp
mov
or
add
in
mov
dec
fsubr
sub
clc
je
and
je
push
aas
(bad)
sub
mov
jmp
mov
adc
xor
cwde
push
js
pop
xchg
js
jmp
je
push
or
sahf
ret
retf
or
pop
loopne
callw
shr
mov
cmp
push
sub
mov
mov
ds
adc
out
adc
adc
rol
rol
rol
rol
adc
adc
rol
rol
push
inc
push
xchg
inc
push
pop
adc
adc
inc
push
xchg
inc
push
pop
adc
rol
adc
adc
rol
rol
sar
xchg
pop
push
cmp
nop
sti
cdq
xlat
leave
loope
mov
cmp
xchg
icebp
loopne
mov
bswap
mov
push
adc
mov
aas
dec
push
mov
pop
(bad)
lock
push
xadd
adc
ror
jb
push
(bad)
mov
mov
outs
scas
jbe
mov
loopne
aam
sub
inc
pushf
scas
mov
cli
pop
mov
inc
jg
pusha
sub
or
mov
pop
cmps
mov
sub
cmp
nop
jp
pop
xor
or
ds
into
data16
rcr
xor
jle
pushf
mov
je
sbb
mov
cwde
retf
nop
int3
push
mul
test
fidiv
sahf
loope
mov
push
jmp
ja
xchg
xchg
jp
cs
in
mov
push
loopne
xor
and
and
jo
push
dec
cmp
mul
and
adc
stos
leave
jnp
mov
push
bound
lahf
adc
mov
sub
push
and
test
dec
push
outs
or
mov
into
movs
aas
cmp
sbb
jnp
fisttp
ret
mov
pop
add
cs
test
iret
sub
dec
out
imul
mov
cmp
test
mov
cmp
push
(bad)
sbb
je
fistp
je
pop
aas
and
enter
cmps
inc
jg
test
pop
(bad)
rcl
mov
(bad)
cmp
pop
or
adc
inc
jno
sbb
mov
add
mov
(bad)
jmp
stc
mov
daa
ficom
dec
pusha
mov
jmp
xchg
loope
jecxz
jmp
jmp
fistp
loop
in
out
fcomp
cmps
mov
fcom
loop
sti
cli
call
jmp
jmp
mov
scas
mov
in
push
int
jmp
rcl
loopne
mov
cmps
jecxz
out
out
loope
call
xchg
lahf
call
mov
int
jmp
xchg
cld
mov
out
xchg
mov
fmulp
mov
test
(bad)
jmp
repz
clc
mov
fidiv
jg
or
fdiv
sub
mov
xchg
(bad)
out
jbe
and
pop
mov
retf
mov
mov
mov
int
mov
int
mov
mov
mov
int
inc
ja
add
inc
dec
ds
lods
pushf
jle
nop
scas
jns
cmp
loop
std
mov
inc
in
mov
push
cs
jge
dec
xor
aaa
or
jnp
sub
push
sub
aaa
add
das
aaa
fisubr
cmp
push
dec
sbb
or
outs
xor
ds
cmp
(bad)
sub
dec
sbb
sub
pop
push
fisubr
pop
cmp
pop
pop
jns
pop
and
cmp
sub
cmp
or
sub
xor
mov
adc
and
daa
cs
sbb
pop
push
(bad)
push
movs
cmp
cmp
xchg
test
mov
stc
xor
adc
adc
(bad)
sbb
sbb
pop
mov
mov
mov
shr
mov
jno
stc
repz
and
into
xor
in
pop
jae
es
fadd
mov
scas
pop
inc
imul
dec
sbb
in
lds
mov
push
in
or
inc
sub
sbb
add
push
xchg
xor
iret
xchg
sbb
add
outs
in
dec
loopne
cmp
repz
adc
cmc
push
popf
ss
sbb
push
lock
mov
test
lods
inc
fimul
ss
pop
lods
lods
push
mov
dec
fistp
scas
or
fidivr
cmp
sbb
aas
push
rol
dec
jmp
sub
adc
push
xor
gs
mov
mov
aaa
repnz
(bad)
popf
sbb
xchg
(bad)
push
mov
mov
xchg
aas
push
xchg
sbb
push
xchg
xchg
or
adc
xlat
jl
and
sub
fiadd
xchg
cmp
jb
add
push
(bad)
sbb
ror
repnz
stos
cmp
cld
dec
lahf
aaa
xchg
or
das
ret
xor
ds
mov
cmp
push
sbb
sbb
sub
or
pusha
adc
jp
sub
sub
push
push
cmp
sub
or
jmp
cmp
sbb
add
enter
jp
daa
adc
jbe
or
sub
and
ins
push
pop
inc
or
add
pop
inc
gs
and
in
inc
inc
cmp
addr16
add
sbb
in
mov
inc
sbb
xor
adc
sub
mov
and
pusha
pop
jnp
jle
jnp
xchg
pusha
sbb
xor
or
pusha
dec
jmp
bound
popaw
and
push
pop
test
mov
pop
imul
pop
and
add
ds
jl
or
das
cmps
jmp
popa
push
add
add
cwde
clc
cmps
(bad)
cmp
add
xor
jbe
dec
bsr
mov
daa
sbb
sub
inc
ins
bound
mov
add
push
gs
sbb
jnp
loope
stos
or
sub
dec
ja
sbb
sub
add
mov
cld
aas
inc
es
sbb
jl
and
aaa
jne
inc
add
sub
push
bound
mov
and
jge
dec
gs
cmp
mov
jns
cmp
and
dec
sbb
psubsw
mov
jp
popa
cmp
sub
push
sbb
mov
inc
cmp
inc
inc
inc
xchg
mov
dec
cmp
gs
jge
dec
jbe
in
cmp
and
and
push
dec
imul
add
inc
inc
inc
gs
jo
inc
inc
inc
mov
xor
pop
arpl
add
jl
add
sub
jle
pop
jo
add
add
fld
dec
sbb
adc
push
and
mov
pop
pop
add
or
es
inc
daa
push
ds
push
inc
push
lock
cmp
addr16
inc
inc
mov
cdq
(bad)
jno
pusha
adc
add
pop
cmp
lock
dec
es
cmp
je
add
call
push
adc
jne
fs
in
ss
icebp
jbe
pop
push
or
push
jne
xchg
aam
mov
aaa
and
xor
xor
xchg
xor
xchg
cmp
push
and
adc
pop
dec
rcr
or
shl
sbb
adc
bound
cmp
inc
in
call
inc
xor
push
pop
dec
ds
and
adc
inc
jmp
ins
dec
lahf
aaa
and
jnp
pop
into
sub
dec
mov
popa
stos
popa
cdq
imul
mov
int
xchg
test
stc
and
inc
fdivr
push
outs
repz
shl
jns
xor
add
mov
sbb
dec
add
xchg
sbb
gs
dec
push
call
cmc
pop
aam
loopne
cmc
add
mov
test
push
(bad)
ins
stos
or
dec
outs
call
daa
out
mov
fist
retf
or
pop
sahf
and
pop
pop
test
sar
pop
loope
inc
mov
repz
jmp
jp
pusha
inc
fcom
pop
lods
or
iret
inc
mov
lea
fistp
mov
adc
mov
sti
push
mov
fidivr
jns
int
mov
sbb
ja
or
pop
iret
cmps
data16
mov
adc
(bad)
jp
scas
push
pop
ret
daa
call
mov
sbb
cs
add
inc
fwait
jg
mov
cmp
add
or
pop
pop
or
sub
dec
sahf
xor
cld
das
mov
push
(bad)
and
in
cmp
cmp
jmp
mov
ficomp
fcomp
add
mov
and
lods
scas
add
pop
cwde
dec
mov
pop
imul
xchg
ds
aaa
sahf
mov
ror
pushf
add
fadd
das
cmps
cmc
xor
pusha
test
iret
pop
int
in
xchg
dec
ret
mov
outs
jmp
call
dec
fdivr
std
or
dec
enter
mov
out
pop
aad
inc
icebp
xor
inc
shr
sub
cmp
inc
out
test
adc
nop
aas
call
out
jo
push
fwait
and
inc
shr
push
stos
pop
out
movs
jl
xor
jmp
fsubr
jle
add
mov
xchg
inc
les
outs
lock
lods
pop
mov
movs
mov
or
popa
lods
and
movs
outs
in
sar
mov
push
adc
inc
rol
test
cmps
inc
call
pop
cld
int3
pop
shr
mov
mov
push
out
jmp
jge
ins
jmp
sbb
or
ret
movs
mov
adc
imul
aad
(bad)
mov
push
aaa
push
cmp
enter
and
inc
pop
or
jb
pop
fisubr
add
dec
cmp
cs
pop
cmps
pushf
mov
pop
sbb
pop
sub
or
div
push
or
pop
(bad)
pop
xor
hlt
and
pushf
jmp
daa
inc
jno
pop
mov
mov
mov
data16
xor
dec
in
fdivr
outs
add
inc
sbb
test
adc
arpl
inc
es
mov
repnz
ja
pop
pop
arpl
pop
movs
lods
in
test
ins
jns
jne
and
xchg
ret
mov
sub
sub
fist
and
adc
push
and
pop
ret
nop
std
lahf
fdivp
inc
dec
push
ins
jge
data16
jp
out
xchg
not
inc
or
add
(bad)
(bad)
mov
pop
cmp
adc
jmp
imul
or
cmps
jmp
pop
mov
inc
jle
dec
sti
mov
ficomp
dec
in
pshufw
fmul
ficomp
mov
xchg
cdq
sbb
out
cdq
js
sbb
int3
sub
or
dec
jl
stos
xchg
fisub
imul
arpl
mov
imul
lods
stos
mov
mov
fsub
xor
pop
pop
enter
out
xchg
lds
xor
pop
sub
mov
cmp
jp
pop
pop
mov
jmp
mov
das
aas
iret
cld
pushf
sub
inc
fdivr
int3
mov
dec
mov
push
sbb
push
dec
fisub
das
pop
xchg
jmp
(bad)
sub
popa
or
fwait
lahf
or
xor
ror
dec
sbb
add
pop
rcr
pop
pop
sbb
add
lock
(bad)
shl
loopne
jb
jb
jns
pop
fs
xchg
cli
mov
and
xor
ret
inc
or
and
xchg
inc
rcr
mov
sti
xor
and
mov
cmp
aad
jmp
shl
mov
aam
cmps
sub
xchg
push
mov
xor
jmp
inc
jmp
nop
xor
aad
retf
add
mov
pusha
inc
scas
push
inc
and
pop
mov
mov
mov
mov
int3
dec
adc
add
push
fnstcw
out
data16
dec
cmp
fld
ret
aas
mov
shr
xor
and
push
test
xor
scas
xor
inc
mov
and
jge
push
mov
sbb
cmp
cmp
push
mov
imul
mov
in
sbb
sbb
push
mov
dec
mov
call
(bad)
bound
(bad)
cmp
mov
mov
pushf
pop
or
adc
aaa
enter
jne
xor
scas
add
cmps
cmp
xchg
es
adc
jmp
push
test
jmp
int3
cmp
in
jmp
call
loope
fbld
push
div
ficomp
fisubr
cwde
out
inc
out
pusha
mov
out
inc
fnstsw
shl
ins
std
mov
scas
pop
int
mov
sti
and
pop
sti
aad
(bad)
pop
in
fild
fwait
jb
jno
ins
xchg
fist
or
sbb
popa
push
test
js
inc
mov
push
cmps
js
adc
arpl
and
jle
inc
in
ret
sbb
xor
retf
cmps
jp
outs
rcr
cdq
cs
retf
and
(bad)
bound
adc
jne
xor
pusha
mov
dec
xor
fdiv
inc
rcr
inc
inc
sti
inc
lock
mov
jb
imul
xchg
push
jmp
cmps
sbb
(bad)
out
in
mov
push
les
add
jle
stc
jno
cmp
gs
imul
cli
add
pop
pusha
frstor
xchg
fwait
popa
fdivp
pop
mov
movs
(bad)
out
pop
cmp
push
(bad)
gs
xor
ins
ret
imul
pop
loope
int
retf
mov
adc
push
and
push
xchg
jnp
pop
(bad)
out
scas
pusha
aad
inc
leave
jge
jg
push
ret
stc
push
(bad)
pop
mov
sti
dec
fld
push
shl
outs
shl
sub
or
rol
pop
or
pop
(bad)
out
cmps
(bad)
mov
jp
push
jo
push
outs
out
xchg
jmp
fst
out
push
inc
bound
push
jecxz
int3
in
xor
jmp
or
ja
clc
mov
or
add
(bad)
jmp
enter
or
mov
mov
test
ins
and
out
call
cli
dec
daa
adc
sub
enter
inc
dec
inc
jo
push
add
repnz
jns
or
jnp
or
ror
call
ja
cmp
int
or
push
jp
push
mov
shl
adc
xchg
leave
repnz
jge
getsec
ja
out
(bad)
mov
pop
adc
pop
dec
dec
mov
rcl
loop
mov
loope
sbb
outs
or
pop
jmp
ret
loope
shr
pop
sbb
jbe
dec
(bad)
lock
lock
dec
adc
ins
mov
lock
mov
or
bound
or
call
xchg
loop
cs
adc
or
repz
mul
in
cwde
aad
cmps
dec
jb
inc
dec
outs
mov
nop
xchg
aam
xchg
punpckhwd
jb
xor
cmps
xchg
call
out
shl
bound
sbb
xlat
sahf
stos
cmps
add
int3
ror
adc
mov
mov
xor
mov
jb
inc
add
not
mov
gs
add
lds
cmp
add
ror
loop
lea
push
sub
xor
int
(bad)
loope
loope
shl
(bad)
cmp
jo
push
(bad)
mov
movs
xchg
leave
test
mov
push
push
push
adc
scas
mov
lock
mov
es
xor
mov
mov
stos
pop
outs
or
arpl
int3
into
mov
xchg
and
adc
pop
mov
mov
xchg
iret
xchg
(bad)
lock
push
dec
jo
sub
xchg
xchg
lds
fld
xor
pusha
or
test
mov
imul
aad
int3
sar
inc
and
lock
int
(bad)
shr
and
ret
jge
aad
mov
mov
sub
push
or
es
cmp
ror
mov
xchg
pop
cwde
and
push
push
jno
cmp
xor
fld
or
les
pusha
cdq
pusha
mov
mov
hlt
pushf
pop
sbb
aad
xor
pop
fisubr
rcr
aaa
ficomp
pushf
add
bound
add
test
mov
cmp
adc
pop
xchg
inc
mov
jmp
rcr
mov
dec
cmps
push
icebp
aas
or
je
cmp
scas
pushf
jp
jmp
mov
jp
stos
inc
jg
clc
addr16
cmps
leave
and
lds
in
stc
sbb
in
cmc
arpl
adc
or
gs
sbb
(bad)
and
mov
mov
repnz
or
cli
xchg
nop
mov
xor
in
ja
jbe
jae
(bad)
jnp
pushf
add
jmp
shl
daa
mov
mov
imul
jmp
(bad)
jmp
pop
and
mov
push
test
sti
and
push
mov
push
or
adc
mov
xlat
cld
out
neg
fs
cmp
mov
push
jns
jmp
aas
mov
push
cmps
xchg
retf
and
jle
js
mov
push
mov
push
inc
mov
out
inc
push
xlat
std
out
adc
cmp
add
cmp
outs
jmp
cmp
data16
push
sbb
mov
adc
les
mov
icebp
sbb
add
push
adc
adc
imul
movs
jnp
(bad)
cmp
inc
pop
hlt
fld
arpl
sbb
(bad)
call
xchg
add
jae
(bad)
std
push
mov
(bad)
sti
inc
xchg
jns
jae
data16
mov
arpl
in
outs
loope
push
cmp
xor
cdq
data16
xchg
push
or
mov
mov
ins
frstor
jecxz
xor
and
sbb
sbb
inc
push
pop
jle
leave
or
add
pop
mov
jmp
mov
repz
rcr
push
mul
sbb
fsub
nop
xor
mov
lods
or
add
into
xor
push
fdiv
pop
cld
outs
lods
and
loopne
call
jns
pop
xor
pop
ret
mov
xchg
mov
in
popf
popa
movs
(bad)
pop
mov
in
fsub
ss
(bad)
mov
inc
lock
test
std
push
push
lods
add
fucom
pop
out
xchg
pop
xor
aas
not
cdq
mov
inc
ret
mov
outs
cmps
loopne
out
mov
lock
fstp
inc
push
xor
out
dec
out
cmp
repz
xor
rol
dec
xchg
or
sbb
mov
fs
sar
stc
pop
lock
xchg
(bad)
sbb
loope
rcl
or
mov
sub
push
arpl
pushf
(bad)
icebp
mov
mov
jecxz
mov
imul
pop
pushf
mov
scas
loop
icebp
or
mov
inc
cmp
cmp
call
fmul
jecxz
ror
or
mov
dec
test
pop
movs
mov
inc
in
loopne
daa
std
push
add
mov
or
les
jo
test
mul
test
call
add
test
hlt
loop
ins
sbb
mov
push
stc
shl
push
aas
inc
pop
xor
jmp
mov
mov
xor
pop
cmp
xchg
lock
inc
test
xlat
stos
push
mov
inc
adc
jne
push
cwde
test
xchg
in
int
lods
movs
hlt
fs
ss
sahf
adc
loope
cli
or
fsubr
jg
rcl
mov
xchg
test
jmp
xor
pusha
div
sub
dec
or
xchg
mov
xchg
and
(bad)
xlat
gs
pop
icebp
(bad)
lods
and
test
xchg
ins
jp
test
hlt
int
cmc
imul
movs
addr16
jecxz
int3
xor
dec
xor
rcr
fwait
stos
dec
xchg
clc
in
fadd
out
jae
jne
jecxz
sbb
test
jbe
pusha
cmps
mov
mov
sub
sub
stos
pusha
cwde
lds
int3
cmps
sahf
scas
cmp
imul
cmp
jmp
inc
pop
retfw
sub
sahf
push
int3
adc
(bad)
es
(bad)
std
int
adc
jmp
lock
mov
add
loopne
cdq
(bad)
ja
sub
clc
rcr
dec
dec
dec
xchg
mov
mov
adc
adc
shr
ds
ds
xchg
inc
loop
xchg
pop
cmps
jg
or
retf
mov
shl
inc
dec
xor
iret
jmp
cmp
or
test
hlt
fdiv
mov
(bad)
jns
lahf
(bad)
jmp
jmp
cmp
hlt
pushf
cwde
mov
cld
mov
call
in
fisub
cmp
fadd
retf
and
test
xchg
mov
lea
les
jle
mov
(bad)
fild
call
stos
int
sbb
jmp
leave
call
add
fdivr
ds
dec
test
cli
fdivrp
in
xchg
cdq
ins
cmp
sbb
clc
shr
sbb
sbb
mov
lods
cmp
hlt
lods
scas
push
jmp
in
jle
leave
mov
test
fdiv
mov
sub
sub
lahf
test
std
int3
enter
(bad)
dec
(bad)
mov
mov
xchg
mov
sbb
or
jns
cld
lahf
xchg
cld
mov
call
jmp
or
(bad)
fsub
jmp
scas
stc
aam
outs
inc
jp
mov
ror
outs
std
js
stc
mov
test
sahf
pop
mov
outs
and
lea
lods
cmp
les
cmps
stos
imul
cli
fstp
fwait
int3
fwait
mov
inc
mov
inc
out
loopne
cmps
or
dec
inc
push
jg
or
sar
or
loop
or
pop
(bad)
pusha
mov
add
and
sub
jae
ss
mov
push
mov
test
call
rol
lods
xor
cmp
push
out
push
mov
nop
int
mov
mov
dec
cmp
fucomi
dec
rol
pop
inc
call
test
shl
add
inc
fidivr
jmp
sar
bound
mov
loop
jecxz
repnz
test
pop
jecxz
nop
jl
clc
stos
pop
test
sub
mov
jb
lock
shr
in
repnz
and
std
(bad)
mov
arpl
xor
cmp
in
call
(bad)
call
or
shl
mov
mov
or
imul
xchg
fmul
and
ins
mov
enter
or
sub
ror
sti
cs
inc
or
push
cwde
xor
mov
dec
inc
cld
pop
shl
popf
or
ret
mov
cmps
push
leave
fwait
jp
xlat
push
inc
jge
cmp
scas
push
xchg
cmp
jbe
adc
jge
test
xor
bound
addr16
clc
int
ins
mov
clc
icebp
jmp
(bad)
fdiv
pop
aad
sbb
mov
mov
mov
push
js
hlt
xor
lahf
push
jnp
cmp
dec
ret
loope
xchg
clc
and
xchg
adc
add
fld
push
pop
ficomp
add
sub
outs
jg
inc
push
out
xor
bound
iret
inc
les
pop
jp
jo
sbb
or
bound
adc
data16
add
popf
adc
jmp
aad
in
call
test
shl
xchg
nop
ins
retf
mov
add
sub
push
scas
sahf
into
jg
sahf
scas
loope
mov
sub
shl
and
mov
mov
movs
sbb
outs
clc
add
aas
xor
shl
mov
lock
out
add
into
sbb
push
mov
scas
jg
xchg
aaa
shl
dec
adc
xlat
int
cmp
mov
ret
mov
frstor
popf
cmp
fsub
sahf
rcl
lods
aad
jmp
or
idiv
mov
repz
or
or
xlat
into
mov
repz
lds
in
mov
imul
and
imul
mov
xchg
retf
push
clc
mov
stos
(bad)
stc
mov
sar
xchg
sub
cmp
retf
in
loopne
mov
xchg
frstpm(287
enter
popf
jo
fdivr
fsub
loop
loop
fdivr
adc
xchg
loop
into
shl
test
xchg
popf
sbb
or
cmps
mov
enter
aas
je
mov
icebp
adc
jl
xchg
push
adc
xor
mov
rcr
cmps
(bad)
xchg
das
jo
cld
add
popf
xchg
(bad)
aam
jl
les
xor
(bad)
daa
cld
repnz
fiadd
cmp
mov
rcl
test
int3
push
test
and
jmp
sbb
sahf
mov
das
inc
aaa
mov
xor
xchg
cmp
xor
adc
mov
inc
not
and
mov
jg
mov
popf
push
shl
jnp
mov
push
jb
repnz
mov
inc
add
fidiv
(bad)
ror
mov
and
sbb
test
retf
mov
cli
mov
(bad)
pusha
mov
ins
data16
das
push
mov
(bad)
jne
test
push
jnp
xchg
addr16
sub
test
std
push
data16
cwde
shl
rol
xchg
adc
into
nop
and
rcl
xchg
add
fsub
in
cli
out
xchg
mov
hlt
ret
aaa
mov
xchg
aam
fld
mov
(bad)
xlat
xor
lock
in
jle
xor
xchg
add
cmps
leave
mov
mov
popa
loopne
loope
je
fcom
xchg
xor
adc
sbb
mov
push
icebp
lds
push
sbb
mov
sbb
jmp
sar
dec
gs
pop
push
mov
inc
lods
loop
mov
movs
mov
cmp
lock
ins
mov
test
jp
push
int
or
mov
lahf
jae
adc
lds
mov
xor
adc
jl
xchg
or
mov
or
add
jl
add
addr16
inc
test
jmp
in
pop
mov
push
loop
rcl
inc
add
mov
js
xchg
pop
jp
ins
mov
aad
aad
scas
dec
fucomi
sbb
mov
dec
sar
xchg
(bad)
fisubr
dec
push
and
data16
mov
fwait
xor
in
lea
scas
(bad)
out
pop
pop
sbb
pop
add
mov
xor
jae
or
in
adc
xchg
inc
js
int
call
in
push
cdq
(bad)
div
mov
aas
mov
add
cmps
add
push
fwait
add
inc
(bad)
push
in
adc
retf
js
fstp
shl
jne
aaa
mov
xchg
pop
xchg
fs
and
stos
in
adc
push
mov
inc
adc
loope
mov
sahf
cmp
mov
scas
out
in
adc
leave
pop
cmp
pop
and
xchg
and
or
outs
iret
jl
fist
mul
jo
jmp
imul
sbb
out
outs
ret
adc
mov
or
aas
sti
xchg
xchg
pop
sub
shl
in
fdiv
(bad)
dec
aad
es
ror
data16
pop
(bad)
pop
xchg
fsubr
neg
cmps
xor
in
xor
imul
popf
or
cmps
repz
mov
jbe
test
cdq
js
jb
fcomp
sub
push
or
mov
lds
imul
shufps
sub
inc
push
sub
xor
addr16
out
dec
ss
movs
sub
sub
push
fdiv
(bad)
fwait
cld
mov
mov
dec
inc
pop
pusha
mov
xor
sub
jns
call
cmp
mov
mov
adc
and
leave
cmp
(bad)
(bad)
jge
nop
ins
fdivp
add
sbb
aam
loope
push
(bad)
shr
scas
call
jo
out
and
jmp
pop
cld
ficomp
fadd
retf
cmps
push
in
jbe
(bad)
mov
test
das
adc
push
test
xchg
mov
pushf
loope
test
xchg
shl
jp
pop
clc
sbb
neg
sub
inc
mov
jmp
xchg
push
popa
sub
sub
mov
mov
stos
shr
call
lahf
cwde
mov
enter
xlat
fistp
jo
imul
fwait
mov
push
push
leave
xor
xlat
mov
ins
mov
mov
mov
sahf
sbb
lahf
push
dec
neg
in
pop
mov
pop
call
js
clc
cmp
xchg
jmp
(bad)
jmp
mov
mov
mov
test
movs
sub
mov
and
mov
jle
xor
leave
hlt
inc
add
sub
mov
and
mov
mov
nop
sbb
call
sar
mov
cdq
sub
xchg
jge
inc
(bad)
xchg
loope
iret
jae
cmp
stos
sub
stc
scas
popf
pop
ror
jns
psadbw
mov
cmc
mov
dec
push
(bad)
neg
ret
mov
mov
call
jmp
mov
std
in
jp
call
dec
inc
mov
pop
gs
not
cli
shr
cmp
int3
fistp
mov
arpl
stc
ins
mov
int3
adc
je
fimul
inc
push
clc
shl
mov
loope
inc
das
jae
mov
xchg
repnz
out
test
data16
sbb
gs
aad
retf
stc
or
pop
jno
inc
imul
mov
pushw
dec
xchg
push
jle
xchg
aad
inc
or
shl
pushf
or
sub
dec
mov
dec
jecxz
jns
xor
cmp
sbb
in
mov
jecxz
int3
mov
fsubr
std
adc
xor
dec
push
sub
adc
mov
in
loopne
push
mov
dec
retf
rcl
push
push
mov
dec
mov
dec
fxrstor
test
ins
stos
inc
ret
ror
or
lods
sbb
rol
popa
aaa
fdivr
sbb
std
xchg
(bad)
scas
dec
push
inc
add
xchg
jae
pushf
out
in
and
sub
into
mov
scas
scas
nop
pop
fdiv
ret
inc
imul
jg
add
mov
jo
into
arpl
xor
xchg
pop
std
lea
fsub
arpl
mov
imul
lahf
ror
std
lock
outs
loop
jne
popa
sub
sub
sbb
jnp
pop
shr
add
and
movs
psrld
xchg
nop
(bad)
(bad)
and
pop
cmp
and
add
adc
inc
sbb
adc
mov
or
sub
jecxz
retf
xlat
cmp
es
cmp
adc
std
cs
shr
pop
add
and
(bad)
xor
and
ja
dec
fadd
sub
popf
adc
ret
sbb
arpl
cs
add
jp
and
aas
xor
cmp
repnz
adc
aam
leave
aam
leave
add
mov
ret
adc
xlat
sbb
cmp
mov
(bad)
cmp
shr
cmp
ins
xchg
ror
jmp
sbb
adc
shl
fmul
pop
std
ins
loop
jno
cmc
ror
inc
cmc
inc
add
outs
mov
ja
mov
xchg
imul
jmp
mov
push
int3
cmp
sahf
popa
push
int3
cmps
pop
mov
inc
mov
mov
sbb
and
ins
(bad)
or
xor
pop
out
cmc
push
ret
jbe
and
ja
push
out
mov
addr16
enter
js
lods
dec
aaa
stos
ins
retf
cwde
jge
gs
or
in
mov
adc
aad
sub
pop
imul
cmps
mov
sbb
stos
push
pop
aad
sbb
inc
loopne
std
popf
(bad)
popa
pop
sbb
inc
jmp
in
or
stos
push
pop
daa
mov
jno
int3
pop
jne
cwde
stos
mov
ret
ja
mov
xor
and
push
movs
jmp
into
movs
fadd
or
into
adc
arpl
pop
pop
shl
pop
ficom
and
cmp
jae
dec
(bad)
cmps
retf
mov
adc
sub
add
push
stc
popa
sbb
cmp
mov
xor
dec
fimul
mov
xlat
ficom
loope
into
jb
and
xchg
pop
dec
jge
mov
outs
dec
mov
out
inc
xchg
inc
int3
ret
cwde
push
call
(bad)
sub
shl
cmp
test
add
out
push
cmp
(bad)
stos
aam
sub
in
mov
or
jno
mov
inc
sbb
stos
daa
cwde
or
push
test
inc
mov
or
fiadd
jle
cli
sbb
imul
mov
out
adc
sahf
ds
xor
adc
test
in
movs
cld
in
retf
or
mov
icebp
cmps
mov
mov
aas
out
adc
hlt
stos
mov
mov
dec
popf
mov
jnp
jl
daa
out
jmp
mov
push
sub
push
mov
jle
or
jne
dec
stc
push
(bad)
push
pop
xchg
pop
stos
cmp
ret
enter
retf
sub
lea
inc
and
imul
xor
lods
mov
mov
ret
ins
sbb
jmp
pop
mov
aad
movs
sub
sbb
retf
and
clc
cmp
pop
iret
hlt
stc
dec
rcr
cmp
jns
jle
das
shr
add
mov
fwait
dec
enter
sti
movs
sbb
lea
push
cmc
loope
mov
bound
add
(bad)
push
jecxz
dec
cmp
jecxz
mov
mov
not
push
ss
clc
inc
out
aam
jl
pop
and
lds
cmp
gs
call
mov
adc
sbb
leave
xor
int
outs
mov
jl
shl
bound
movs
imul
imul
(bad)
fdiv
les
sbb
mov
scas
data16
sbb
in
and
(bad)
test
jle
xor
xchg
and
lock
jg
arpl
js
or
xchg
sar
loope
xor
mov
sbb
and
xchg
ret
ins
xchg
cmp
loop
cmp
and
jnp
fwait
rcr
cmovae
lds
es
or
das
sar
xchg
dec
mov
inc
dec
push
push
xchg
shr
fbstp
aas
jmp
xor
pop
(bad)
fucom
(bad)
mov
and
(bad)
(bad)
stc
outs
adc
call
push
inc
and
inc
xlat
out
cmps
mov
punpcklbw
lock
pop
pop
shl
leave
dec
aam
call
loope
dec
arpl
adc
jmp
and
out
or
ins
push
(bad)
loope
dec
cmp
mov
out
mov
inc
cmp
into
loop
aam
and
daa
cs
and
jbe
hlt
sbb
les
cmp
in
mov
test
mov
pushf
mov
xor
div
mov
bound
inc
sbb
je
ret
lds
(bad)
xor
add
cmp
cwde
xor
test
and
ss
mov
rcl
dec
xor
mov
movs
xchg
les
add
push
cmp
xor
loop
int
mov
ja
inc
xchg
gs
mov
dec
retf
lods
push
in
dec
loop
sub
inc
fnstenv
test
fisttp
in
icebp
add
ja
add
dec
retf
and
gs
xor
fs
(bad)
push
retf
push
inc
adc
and
adc
push
fild
mov
inc
or
test
adc
movs
xor
and
fstp
pop
inc
jp
call
inc
sbb
fld
das
push
mov
push
mov
out
mov
test
inc
mov
cwde
dec
jbe
popf
(bad)
and
inc
mov
jne
rcr
cmc
enter
out
or
mov
rcl
push
fnsave
mov
jl
or
rol
clc
jae
nop
ss
or
jns
xor
aam
out
pop
jg
hlt
mov
dec
mov
rcr
and
cmp
mov
pusha
and
pop
lock
ins
xchg
lahf
mov
cmc
pop
xor
sub
xchg
xor
inc
add
pop
jmp
and
jecxz
add
mov
mov
xor
mov
cld
cmc
(bad)
cmp
mov
mov
cmp
sbb
hlt
mov
sbb
xor
xchg
cmp
nop
mov
or
adc
adc
dec
mov
int
xlat
out
loop
adc
push
jns
or
inc
fst
pop
pop
pushf
inc
(bad)
int
cmps
jp
mov
jo
jns
clc
xsha1
cmps
or
stc
mov
scas
pop
xchg
mov
mov
jp
push
aad
sub
pop
or
xchg
cmp
in
jle
sahf
cmp
or
and
push
inc
aam
cdq
inc
mov
and
js
cwde
xchg
adc
add
sub
test
loope
pop
jl
scas
adc
enter
aaa
(bad)
sbb
sbb
xchg
mov
sbb
movhps
pop
icebp
(bad)
add
cmp
inc
pop
sbb
ja
mov
call
pop
mov
sahf
add
in
(bad)
dec
ror
jp
xlat
xor
jmp
sub
outs
(bad)
push
std
inc
(bad)
and
aad
shr
jbe
adc
jp
addr16
pop
call
pop
lds
shl
xchg
pop
fist
daa
aaa
lds
jge
jb
cmp
(bad)
pop
xlat
jle
push
push
jecxz
cli
dec
ror
jb
inc
sti
push
cmp
(bad)
bound
xor
jae
push
jl
or
jo
push
mov
mov
aas
das
dec
hlt
test
mov
add
pop
cmp
pmulhuw
jmp
sub
(bad)
int
xchg
mov
jbe
adc
mov
test
adc
adc
retf
dec
fs
into
out
dec
push
fisttp
push
dec
mov
outs
jp
add
dec
(bad)
mov
loope
mov
data16
ficomp
or
mov
push
or
ret
cmp
(bad)
(bad)
retf
add
cs
mov
(bad)
cs
outs
adc
jmp
cmps
inc
cwde
in
mov
lea
movs
ret
and
(bad)
jl
mov
cmp
and
test
inc
and
arpl
bnd
lahf
xchg
inc
mov
push
pop
loope
das
into
(bad)
sbb
call
pop
push
push
lods
fist
dec
jmp
push
out
or
mov
es
out
ret
jae
icebp
mov
and
sub
mov
cmp
push
mov
or
lea
jle
retf
int3
and
bound
je
inc
daa
shr
gs
dec
int
mov
xchg
invd
dec
dec
jge
imul
mov
cmp
retf
enter
sub
pop
fisub
pop
imul
mov
pop
pop
gs
dec
or
outs
fldcw
dec
ficomp
das
cwde
stos
and
pop
push
call
dec
sahf
mov
loopne
dec
mov
mov
leave
dec
retf
jl
push
dec
in
sub
or
stos
in
js
aas
add
mov
cld
call
pop
and
or
pop
pop
out
push
mov
out
cdq
mov
sbb
push
leave
cwde
(bad)
fsub
add
scas
adc
sbb
inc
dec
ja
sub
mov
ror
sub
sbb
push
and
sbb
cwde
mov
push
mov
pop
sub
test
fldcw
call
pop
dec
mov
pop
sub
loopne
push
call
pop
mov
jmp
xor
xchg
mul
dec
aas
add
mov
jne
mov
pop
cld
or
inc
dec
xchg
push
sub
jnp
sbb
mov
test
dec
mov
dec
add
sti
dec
push
mov
jo
add
xor
pop
mov
sahf
sbb
sbb
rcl
imul
mov
ja
jmp
jno
jmp
dec
test
push
pusha
into
out
cs
and
cs
mov
mov
popa
xor
aam
xchg
leave
loope
in
fsubr
scas
aaa
jle
rcr
cmp
or
pop
jge
push
mov
mov
mov
scas
and
fnstenv
sub
and
push
das
movd
jae
sbb
cld
inc
add
xor
add
mov
adc
stos
xchg
inc
push
mov
mov
jno
shr
ja
xchg
(bad)
adc
call
ret
push
xchg
jmp
push
inc
nop
xchg
shl
loop
and
xchg
jp
cmp
jmp
jo
scas
jmp
push
and
ret
xchg
std
pusha
ins
movs
or
bound
xlat
int
stos
push
lea
dec
ds
popa
pop
or
push
xchg
imul
lods
and
jg
lgs
das
loope
push
aas
pop
lods
xlat
mov
(bad)
push
push
mov
mul
pop
scas
dec
jle
aad
mov
mov
or
mov
test
dec
sti
les
add
mov
pop
or
sbb
push
repnz
jo
and
retf
(bad)
loopne
add
test
call
push
mov
xor
clc
push
(bad)
aad
lahf
pop
xchg
mov
fyl2x
cdq
movs
mov
ins
xor
sahf
data16
test
jg
ficomp
xchg
add
sbb
inc
(bad)
es
nop
clc
cmc
push
xchg
out
push
into
add
movs
push
call
not
xlat
shr
out
xor
sub
out
push
dec
xor
fstp
mov
add
and
and
mov
mov
je
pop
gs
mov
push
(bad)
dec
ficom
pop
rcl
mov
pop
idiv
mov
outs
pop
and
cmp
dec
idiv
xor
daa
cmp
pop
pop
push
fistp
mov
xchg
je
stos
sub
jne
lods
out
jnp
mov
retf
neg
xor
or
adc
scas
ror
and
push
loope
ficom
push
mov
mov
mov
daa
test
ret
adc
outs
das
pop
cs
shl
or
pusha
mov
mov
mov
push
cmps
adc
mov
mov
mov
dec
xchg
iret
aas
mov
pop
mov
adc
scas
fistp
adc
(bad)
rcr
sbb
sub
adc
arpl
aas
or
movs
push
std
push
mov
gs
sbb
push
rol
fwait
xchg
xchg
dec
jns
xlat
mov
int3
fcomip
mov
pop
inc
or
mov
mov
xor
or
iret
out
add
dec
or
push
aam
out
scas
dec
add
pop
inc
cmp
push
mov
sub
(bad)
ja
mov
pop
xor
xor
push
and
mov
inc
adc
int3
cs
sqrtps
add
push
cmps
test
or
mov
add
push
jbe
dec
xchg
xor
rcl
inc
out
xor
cmc
push
inc
daa
push
mov
shl
retf
(bad)
pop
cmp
xor
jne
sahf
rcl
mov
jns
(bad)
push
js
fcmovbe
jmp
mov
imul
in
pushf
sbb
xchg
and
jb
cld
jne
jge
mov
mov
sub
and
rol
sub
bnd
(bad)
push
sub
data16
push
mov
xor
jbe
adc
xchg
iret
in
jbe
cwde
stos
xor
mov
hlt
in
pusha
ret
and
retf
adc
mov
or
fsubr
add
cmps
test
adc
shl
mov
cmp
push
sbb
rol
aas
in
adc
je
jnp
push
es
sub
pusha
test
int
push
jp
mov
fbstp
pop
stc
adc
std
xchg
bnd
fwait
xchg
mov
jl
mov
mov
rol
inc
jmp
(bad)
repz
and
outs
add
sub
cmp
dec
mov
clc
sub
sbb
outs
and
mov
leave
das
sub
cwde
es
shr
cmp
dec
mov
mov
add
ror
jle
outs
dec
shl
ret
in
arpl
jle
ds
jno
ret
mov
and
popa
and
cmp
sub
rcr
mov
mov
inc
sub
adc
add
adc
out
push
arpl
cs
jecxz
mov
into
add
mov
(bad)
mov
loop
enter
ret
retf
bound
sbb
out
fidivr
shr
or
ja
pop
and
gs
not
(bad)
jl
sbb
fsub
dec
(bad)
das
adc
cmp
out
ss
dec
sbb
mov
push
lock
fst
outs
jmp
dec
mov
div
iret
mov
cvtps2pi
dec
mov
rcl
das
xchg
jbe
dec
popw
jge
leave
fmul
push
mov
dec
sbb
stc
test
or
sbb
push
leave
mov
cdq
dec
pop
fimul
mov
cmp
aas
jae
neg
inc
inc
scas
call
lahf
mov
push
into
jbe
xchg
dec
lock
mov
and
mov
gs
jbe
dec
jo
cmp
int
sti
push
and
mov
push
leave
out
jbe
stos
mov
sbb
xchg
or
jns
stos
and
js
hlt
jp
mov
movs
jl
and
or
xchg
mov
dec
and
mov
ss
popf
(bad)
xlat
mov
or
mov
test
ins
xchg
push
sub
outs
out
xor
mov
jge
pop
cmps
fld
push
test
mov
call
inc
cmp
mov
cmps
js
daa
ficom
inc
pop
dec
test
ss
les
inc
(bad)
data16
inc
leave
xchg
and
sti
daa
mov
mov
test
fs
inc
add
add
xchg
xchg
sbb
pop
iret
ja
inc
leave
cmp
int
inc
into
and
push
cmp
push
sbb
pop
or
outs
mov
nop
inc
push
sub
dec
jo
sahf
push
push
mul
push
scas
das
mov
inc
mov
daa
push
in
nop
ds
adc
setg
stos
loope
dec
out
lea
or
out
sbb
dec
sbb
adc
push
int
adc
xlat
xor
push
push
mov
xor
add
popf
adc
push
adc
jae
shl
push
xchg
or
mov
aam
fistp
push
jle
outs
jno
icebp
jnp
or
out
lea
mov
mov
aaa
push
mov
xor
add
push
shr
push
fadd
jmp
inc
sbb
inc
jle
out
mov
xchg
xor
(bad)
out
popa
cs
push
cdq
and
cdq
jo
push
push
loopne
js
jle
inc
xor
jp
push
dec
and
or
push
push
bound
push
push
add
dec
add
popf
out
popa
inc
sbb
xchg
jb
xchg
mov
fidiv
push
cmp
bound
(bad)
int
pop
sbb
and
cmp
sub
addr16
push
pop
push
sub
sbb
push
adc
outs
hlt
bound
inc
mov
or
nop
push
add
mov
add
aas
adc
jns
xor
ds
sbb
fld
xor
push
fist
jne
pop
(bad)
cli
jl
loopne
add
jle
push
pusha
push
mov
in
push
cmc
std
dec
sub
jle
popf
jl
ds
push
cs
sbb
sub
and
pop
dec
outs
ins
cli
sub
outs
push
sub
aad
scas
jle
mov
test
xchg
or
in
movs
cwde
add
add
lahf
sub
xor
cmp
mov
or
ins
sbb
popf
cli
xchg
add
sub
or
fs
(bad)
xchg
arpl
mov
jnp
ins
xchg
arpl
cmp
fwait
jecxz
dec
xor
cmp
stos
sar
sbb
jl
push
fs
std
call
dec
mov
int3
adc
cmp
fld
das
ins
scas
push
fsub
sub
iret
jns
pushf
(bad)
fwait
xor
enter
test
outs
and
and
loop
ret
push
(bad)
out
repnz
mov
in
rol
int3
push
mov
outs
xchg
int3
jmp
in
cmp
lds
cld
ds
iret
mov
fstp
sub
int
cmp
les
inc
cwde
mov
xchg
ror
test
xor
jns
jno
dec
ret
(bad)
retf
cmp
int
out
hlt
xchg
out
scas
ds
movs
xchg
sub
js
int
loop
pop
sub
push
cmp
xchg
jmp
add
and
xor
int
fcmovnb
iret
xor
fistp
add
adc
add
ins
push
sbb
out
dec
fisub
mov
test
and
dec
arpl
mov
fs
cmp
adc
pop
ret
jbe
inc
rcl
xor
ret
or
or
mov
add
push
push
mov
add
pop
mov
xchg
and
cmp
cmp
loopne
xor
fucomip
xor
pop
sahf
in
push
aas
dec
pop
xor
loope
repnz
xchg
hlt
mov
xor
int
mov
fnstenv
scas
pop
rol
call
or
retf
inc
sub
mov
adc
sub
loopne
bound
int
data16
inc
repz
je
cmp
cmp
or
cmp
adc
dec
jmp
mov
aad
popa
(bad)
fnstenv
xor
icebp
cmp
imul
daa
sar
sbb
pushf
das
and
hlt
jle
in
mov
rcr
fisub
jo
rdpmc
fstp
sub
xchg
adc
cwde
cmps
ret
leave
mov
inc
sti
call
jne
cwde
sub
push
popf
fistp
push
jbe
mov
push
(bad)
or
jns
pop
add
pop
clc
fsub
sti
mov
(bad)
aam
fisubr
js
ins
mov
not
fmul
inc
pop
mov
daa
push
push
lahf
xlat
mov
dec
(bad)
dec
shr
mov
pusha
xlat
jge
xchg
stos
test
(bad)
pushf
ret
fisub
leave
fisubr
cwde
(bad)
jo
ja
mov
sub
jmp
mov
inc
and
xlat
inc
lds
aaa
jns
cwde
(bad)
jnp
mov
mov
js
imul
and
jmp
add
dec
cmc
dec
and
and
xchg
div
jns
cdq
ret
xor
pushf
xlat
push
ret
(bad)
sub
xlat
neg
ret
pop
out
push
push
cmp
add
fwait
(bad)
addr16
imul
imul
inc
pop
inc
fs
mov
push
outs
xlat
or
je
arpl
enter
pop
(bad)
push
cmp
jp
out
xlat
jl
imul
sbb
shl
not
push
add
shl
pop
adc
fild
shr
ficom
adc
adc
sahf
or
aas
icebp
xor
pop
ret
xchg
add
es
add
xlat
mov
mov
push
bound
aas
(bad)
loope
adc
add
fstp
sub
adc
data16
jo
das
outs
rcl
aam
(bad)
xlat
enter
add
(bad)
jle
loopne
mov
ds
inc
add
push
adc
jno
scas
or
dec
xchg
xchg
fisttp
add
mov
ds
imul
and
jno
mov
dec
ror
or
jle
faddp
mov
outs
push
ins
jne
sbb
iret
fidivr
jp
je
clc
iret
sub
shl
fisubr
outs
imul
push
das
jl
adc
pop
inc
aas
mov
adc
add
and
add
pop
leave
(bad)
shl
xor
sbb
outs
das
jp
pop
call
out
test
outs
and
bound
mov
xor
jle
call
shl
mov
cmp
mov
in
mov
add
sub
xchg
inc
dec
adc
loop
ret
push
repnz
adc
xor
sbb
fs
xchg
cmp
push
mov
xor
pusha
retf
jl
addr16
(bad)
add
pushf
cmp
stos
outs
inc
push
test
sbb
(bad)
adc
rol
mov
inc
sbb
adc
add
fs
dec
and
jmp
pushf
xchg
test
hlt
cmp
xchg
cmc
mov
rcr
in
repnz
xor
cmp
jg
cmp
and
shl
fisub
imul
add
mov
xchg
mov
inc
dec
add
and
inc
loopne
add
sub
cmp
fs
neg
mov
hlt
adc
jae
mov
arpl
adc
fsub
sbb
sub
xor
fs
bound
inc
xchg
add
inc
inc
and
inc
push
mov
dec
add
in
dec
mov
cld
inc
pop
cwde
xor
pop
and
repz
jne
shl
and
jae
adc
test
and
dec
adc
and
in
fisttp
jmp
or
xchg
cmp
(bad)
loopne
jle
jge
int
pop
adc
jl
mov
(bad)
scas
bound
stos
pop
(bad)
sti
xchg
sub
fnstsw
or
sbb
mov
das
mov
mov
xor
mov
ds
loopne
ins
shrd
or
dec
push
loop
sub
sub
pushf
push
push
lds
push
mov
adc
sbb
ficom
cmp
aas
les
int
stc
cmc
fild
ret
lods
sbb
cli
sub
sub
(bad)
cs
aaa
cs
fwait
push
adc
repnz
pop
cmc
adc
inc
es
pushf
mov
repz
fist
lahf
arpl
xchg
mov
pop
or
pop
push
xor
mov
adc
in
xchg
cmp
rcl
xor
jle
popf
test
and
cmc
loope
pop
(bad)
es
dec
imul
dec
cld
inc
push
fld
jmp
sub
and
cdq
push
inc
(bad)
mov
stc
mov
inc
iret
sbb
and
or
xchg
lods
ja
or
es
xor
gs
daa
je
jbe
lock
xchg
jo
pop
nop
push
sub
fild
retf
cmc
out
je
jbe
dec
out
adc
jbe
fistp
mov
repz
jbe
mov
mov
shr
jmp
push
jp
fist
fidivr
jb
push
sbb
iret
mov
mov
inc
clc
add
ret
or
out
mov
dec
xor
je
gs
jmp
cdq
aas
jle
fidiv
cs
std
pop
xchg
jbe
ss
jge
fstp
iret
push
nop
xor
and
xchg
xchg
dec
and
adc
inc
mov
in
and
data16
test
jno
mov
pop
mov
loope
add
mov
xchg
xor
xchg
or
jb
mov
push
pop
jo
(bad)
out
dec
pop
inc
or
or
cmc
sub
sub
mov
outs
or
push
sbb
into
cmps
in
sbb
cmps
dec
inc
pop
sub
sub
xchg
mov
cwde
test
push
inc
jg
ja
bound
mov
mov
add
xchg
dec
inc
inc
nop
clc
or
jp
inc
push
pop
ror
adc
pop
(bad)
jmp
inc
mov
call
es
mov
dec
adc
inc
mov
idiv
je
test
movs
dec
aaa
ss
cmovo
mov
sbb
daa
ins
rol
sub
mov
push
sbb
and
popa
jge
pop
cmp
hlt
stos
xchg
out
or
and
dec
pusha
push
popa
sub
and
pop
dec
pop
add
data16
rol
cmp
ins
outs
shl
scas
mov
dec
adc
sub
or
cmp
sbb
cli
mov
mov
or
mov
test
xor
lds
pop
cmp
xor
inc
fdivr
push
adc
sub
leave
push
fldenv
push
and
cmps
les
mov
cmp
mov
les
add
and
sar
fcom
mov
ds
add
jle
inc
xchg
(bad)
ins
aas
add
std
pop
push
inc
inc
jbe
lahf
out
out
mov
pop
or
retf
push
pop
inc
loop
test
mov
adc
rcr
mov
repnz
xor
push
or
lock
and
mov
clc
jae
js
fidivr
push
push
push
xor
jo
(bad)
mov
(bad)
fisub
and
outs
push
outs
sub
pop
test
ins
into
mov
push
cmp
push
cs
fimul
imul
sbb
inc
ror
in
jns
jno
(bad)
xchg
into
repnz
popa
mov
test
xchg
imul
aas
out
jle
sub
dec
mov
and
mov
popf
jns
unpcklps
xchg
dec
add
jo
sbb
es
in
loop
jg
jge
add
cmp
and
pop
sub
cld
arpl
mov
retf
in
movs
(bad)
cmps
pop
sub
adc
sub
xchg
cli
scas
push
ins
push
push
imul
test
imul
pop
or
mov
ss
or
call
add
jb
into
jno
add
loope
mov
loopne
push
test
ins
add
cmp
add
mov
pop
sub
mov
in
push
push
jmp
lods
jmp
loop
inc
les
clc
in
stc
push
gs
test
hlt
sti
mov
mov
inc
pop
leave
out
ins
std
out
xor
or
in
cmc
cmps
dec
out
pop
rep
mov
xor
inc
repnz
aas
sbb
fs
cmp
mov
adc
ins
add
jl
cmc
mov
jecxz
xchg
mov
and
movs
cmp
dec
je
or
(bad)
push
jp
inc
int3
aas
jg
shl
mov
sbb
test
sub
mov
fistp
bts
cmp
retf
pop
fisttp
ja
mov
or
sti
aad
inc
in
push
pop
dec
and
ret
out
loope
sub
sub
ins
inc
sbb
movs
mov
in
mov
add
sub
ret
bswap
fld
iret
adc
mov
mov
xchg
pop
icebp
push
pop
neg
loop
repnz
lock
popf
iret
mov
sar
mov
and
mov
outs
das
in
jecxz
nop
std
in
xor
push
dec
cdq
and
test
inc
jmp
xchg
and
push
pop
enter
aas
push
lock
push
repnz
add
test
stc
lea
in
push
mov
sar
aas
xchg
ins
inc
pop
dec
punpcklwd
dec
mov
cmp
jg
dec
lahf
mov
mov
outs
mov
mov
cld
(bad)
add
xchg
nop
sbb
inc
dec
cmp
pop
cld
or
shl
sar
rol
popf
cmc
mov
xchg
int
pop
mov
jg
cwde
inc
jge
aas
inc
or
push
xchg
sbb
shl
mov
mov
daa
nop
inc
mov
mov
not
daa
ds
pop
sbb
adc
xchg
sub
repnz
and
rcl
xchg
std
adc
(bad)
jl
adc
adc
into
(bad)
jg
jae
mov
push
jae
js
cmc
(bad)
jle
mov
jo
ins
bound
dec
scas
xchg
(bad)
fiadd
shl
inc
gs
xor
(bad)
fdiv
mov
inc
inc
xchg
pop
ins
movs
adc
push
scas
mov
sub
clc
loop
repz
repz
sub
fwait
or
push
fistp
dec
sub
xchg
loopne
sbb
out
ins
fimul
xor
xor
in
xchg
adc
jb
ds
jnp
aas
mov
jmp
repz
dec
mov
push
jae
add
pop
pop
add
out
or
fdivr
loop
pop
ja
dec
ins
lea
push
loope
in
mov
add
retf
add
and
movs
out
retf
aam
mov
ins
(bad)
mov
stos
mov
retf
cmc
xor
lods
daa
js
pop
ret
shl
shl
jl
scas
jecxz
dec
jle
inc
out
icebp
das
add
jle
fild
fucom
jmp
nop
ror
cmp
fcmove
push
inc
and
ds
sbb
sbb
cdq
aad
and
test
inc
mov
mov
scas
inc
xor
cmp
jle
(bad)
ret
cwde
mov
cld
mov
test
outs
push
mov
jo
push
mov
adc
ror
mov
pop
ret
jae
dec
xchg
inc
xchg
jg
mov
cmp
inc
mov
pop
xor
test
mov
shr
xor
ds
loope
fst
aas
mov
lods
mov
xlat
add
test
jge
mov
xchg
outs
pop
sub
icebp
prefetcht1
cdq
sub
out
mov
xchg
xor
outs
addr16
dec
ins
loopne
cmp
xchg
ins
and
ror
push
ret
out
lahf
xchg
xlat
inc
inc
call
mov
(bad)
jp
mov
inc
mov
std
mov
mov
test
rcr
mov
out
push
out
push
jbe
aas
sar
lahf
inc
(bad)
cmp
popa
ja
pop
jmp
jae
dec
pop
mov
icebp
and
daa
sbb
rol
aaa
mov
sahf
push
icebp
imul
pop
mov
imul
iret
fidivr
test
inc
add
adc
aas
sbb
inc
add
inc
xlat
out
xchg
sub
cmp
adc
or
and
lods
inc
push
inc
push
ror
inc
mov
add
jl
scas
jb
pop
ret
push
xchg
sar
xor
xchg
cld
sbb
xchg
(bad)
cmp
nop
mov
jg
outs
dec
popf
nop
iret
mov
test
out
pop
out
outs
mov
sub
ins
test
fsubr
stos
add
scas
pop
in
mov
jge
jae
loop
dec
dec
gs
bound
xchg
leave
inc
outs
es
rcr
shr
movs
mov
(bad)
pop
int
aas
cmp
pusha
js
sub
xor
pusha
jb
sbb
int3
rcr
nop
aad
mov
stc
loopne
cmps
jg
cmps
push
push
jo
ror
fsubr
in
add
mov
push
add
sub
push
pop
cmp
pop
pop
outs
and
pop
movs
mov
outs
mov
in
test
pop
popa
pop
cmp
add
xor
(bad)
pop
addr16
movs
(bad)
movs
in
mov
pusha
mov
ss
sti
cs
add
loope
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
test
push
push
mov
jg
jl
mov
cmp
jae
mov
xor
jmp
mov
push
push
push
push
call
push
push
lea
mov
mov
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
add
mov
mov
adc
mov
cmp
jl
jg
cmp
jbe
push
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
push
mov
push
mov
test
je
mov
mov
mov
or
jne
mov
push
push
mov
call
mov
mov
push
push
mov
call
mov
pop
pop
ret
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
call
cmp
je
push
call
mov
call
push
push
call
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
mov
jne
jmp
lea
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
mov
lea
push
call
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
jmp
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
lea
add
cmp
je
cmp
lea
jl
mov
cmp
jne
push
call
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
push
lea
push
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
xor
test
setne
mov
test
jne
push
call
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
jmp
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
call
push
lea
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
jne
mov
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
cmp
jne
xor
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
test
setne
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
call
test
je
mov
call
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
call
mov
add
test
je
push
lea
call
mov
call
mov
push
push
push
mov
call
mov
add
lea
push
mov
call
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
mov
test
je
mov
push
push
call
add
cmp
jne
pop
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
sub
push
mov
mov
mov
mov
test
mov
jge
mov
push
call
add
add
add
mov
test
je
mov
push
push
call
add
cmp
jne
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
movzx
mov
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
je
lea
mov
add
sub
jne
mov
cmp
jle
mov
push
lea
call
mov
push
push
push
push
call
mov
add
test
jne
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
call
mov
push
call
mov
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
push
je
mov
push
push
call
add
cmp
jne
mov
push
push
call
mov
mov
push
push
call
mov
add
test
je
mov
push
push
call
add
mov
pop
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
push
mov
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
push
push
push
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
call
add
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
xor
push
mov
mov
call
mov
call
mov
push
push
lea
push
lea
mov
mov
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
add
lea
push
adc
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
push
call
push
push
mov
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
test
je
mov
add
mov
call
cmp
ja
jb
cmp
jae
call
mov
lea
push
call
mov
call
mov
mov
lea
push
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
push
push
lea
call
push
lea
push
call
mov
sub
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
pop
pop
mov
mov
pop
ret
push
lea
call
mov
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jmp
mov
movsx
push
lea
push
push
call
add
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
push
call
cmp
je
add
cmp
jle
push
push
call
test
je
nop
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
jmp
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
lea
call
mov
test
je
push
call
add
mov
mov
pop
xor
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
call
mov
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
push
lea
call
test
setne
call
mov
mov
add
push
call
lea
mov
mov
movzx
mov
mov
push
push
push
push
call
add
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
cmp
jne
push
push
lea
call
mov
call
mov
mov
movzx
push
push
push
push
push
call
add
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
call
push
mov
mov
push
mov
call
mov
push
mov
mov
push
call
mov
mov
call
mov
add
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
jne
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
push
push
push
push
push
lea
push
call
test
jne
call
push
push
lea
call
push
lea
push
call
mov
lea
push
mov
push
push
call
test
jne
mov
mov
push
call
cmp
jne
call
push
push
lea
call
push
lea
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
push
lea
call
mov
lea
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
nop
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
push
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
push
push
push
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
push
push
lea
push
push
mov
call
mov
call
mov
call
mov
mov
push
push
push
mov
call
add
push
lea
push
lea
call
mov
call
mov
push
push
push
mov
call
add
push
lea
call
test
jne
call
mov
mov
push
push
push
call
add
jmp
push
call
mov
test
mov
jne
mov
call
mov
mov
push
push
push
push
call
mov
add
push
push
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
lea
call
test
jne
call
mov
mov
push
push
call
add
jmp
mov
push
call
test
jne
call
mov
mov
add
call
mov
push
push
push
call
add
jmp
lea
call
mov
push
push
lea
call
test
je
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
mov
call
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
mov
push
mov
push
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
mov
add
cmp
jl
push
push
call
add
test
je
sub
sar
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
jmp
push
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jle
mov
push
lea
call
mov
push
call
add
cmp
jge
call
cmp
je
call
mov
push
push
mov
call
add
jmp
lea
call
mov
call
movzx
push
push
push
lea
call
mov
push
push
push
push
call
cmp
jne
call
mov
mov
push
push
call
jmp
call
mov
mov
push
push
call
mov
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
pop
pop
pop
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
movzx
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
call
push
push
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
push
call
lea
add
push
call
mov
lea
call
or
mov
lea
call
mov
mov
call
push
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
call
mov
mov
jmp
mov
push
mov
lea
call
mov
mov
mov
ret
call
push
push
lea
call
mov
push
mov
lea
call
mov
lea
call
mov
mov
mov
ret
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
mov
mov
mov
cmp
jge
push
call
mov
cmp
je
cmp
je
mov
lea
mov
lea
cmp
mov
jae
push
push
call
mov
lea
add
cmp
jae
mov
push
push
call
mov
mov
add
add
lea
push
mov
mov
push
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
cmp
jge
mov
cmp
je
mov
mov
call
cmp
jne
call
mov
mov
mov
call
mov
mov
lea
mov
push
push
mov
call
mov
jmp
mov
mov
mov
mov
test
je
mov
mov
call
test
jne
call
mov
mov
mov
call
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
push
je
jmp
lea
mov
cmp
je
mov
lea
mov
cmp
ja
sub
mov
mov
mov
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
or
mov
lea
mov
mov
mov
sub
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
or
add
jne
mov
cmp
jne
mov
cmp
jbe
mov
sub
cmp
lea
je
mov
push
call
add
cmp
ja
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
push
je
mov
push
push
call
add
cmp
je
mov
call
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
cmp
push
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
jmp
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
add
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
push
lea
push
lea
call
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
test
sete
test
jne
call
mov
mov
push
push
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
push
lea
push
lea
call
push
lea
call
lea
call
lea
call
test
je
push
push
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
add
push
call
lea
mov
mov
mov
add
push
call
lea
mov
mov
mov
mov
push
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
jne
pop
pop
pop
mov
push
push
call
call
mov
push
push
mov
call
add
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
mov
mov
push
call
mov
call
or
mov
mov
call
lea
push
mov
call
mov
add
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
push
call
mov
call
test
jne
lea
call
mov
mov
push
call
push
push
push
lea
push
push
call
add
lea
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
push
mov
mov
push
mov
call
mov
call
mov
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
jmp
lea
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
or
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
jne
mov
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
mov
jge
mov
cmp
je
push
call
mov
jmp
push
lea
push
lea
call
mov
call
mov
cmp
mov
jl
mov
lea
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
lea
call
push
lea
call
mov
mov
push
push
lea
call
mov
push
lea
call
test
jne
push
push
push
mov
push
call
add
test
jne
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
cmp
jle
mov
cmp
je
push
call
mov
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
call
add
cmp
jne
mov
push
lea
or
push
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
cmp
jne
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
lea
call
mov
cmp
je
mov
cmp
je
push
call
add
mov
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
mov
push
push
push
push
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
mov
mov
add
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
push
push
push
push
mov
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
push
push
lea
call
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
lea
call
push
lea
call
lea
call
mov
mov
mov
push
mov
push
lea
call
test
jne
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
jmp
mov
push
mov
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
push
mov
mov
lea
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
mov
ret
mov
lea
call
mov
lea
call
mov
jmp
call
mov
mov
push
push
push
mov
call
add
jmp
call
mov
push
push
mov
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
call
push
push
push
lea
call
push
lea
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
call
test
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
call
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
push
add
call
add
cmp
jle
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
call
add
cmp
jl
push
call
add
cmp
jg
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
test
jne
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
push
mov
call
add
cmp
jne
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
call
push
push
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
lea
call
cmp
jne
mov
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
sete
test
sete
test
je
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
lea
push
push
push
push
lea
call
push
lea
call
mov
call
push
lea
mov
mov
push
call
mov
mov
push
push
lea
push
lea
call
push
lea
call
mov
mov
call
call
mov
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
pop
xor
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
push
lea
call
mov
mov
push
push
lea
push
push
call
mov
mov
add
push
push
lea
call
test
je
mov
mov
push
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
push
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
jmp
mov
xor
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
add
mov
push
mov
call
add
mov
mov
mov
mov
add
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
call
mov
lea
call
mov
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
add
lea
call
lea
call
test
je
push
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
lea
call
push
lea
call
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
xor
test
setne
push
lea
push
push
push
call
mov
mov
add
lea
lea
mov
add
test
jne
mov
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
call
test
jne
pop
pop
mov
lea
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jge
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
push
mov
call
add
cmp
jl
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
mov
push
call
mov
push
mov
lea
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
lea
mov
mov
add
test
jne
sub
sar
push
lea
mov
push
push
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
push
mov
call
add
cmp
jle
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
jb
mov
and
ja
ret
out
sar
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
stc
in
xor
popa
and
frstor
das
cld
cmp
fdivr
enter
mov
jle
repnz
xchg
mov
jp
in
popa
test
sahf
dec
iret
lds
shr
jmp
cmp
mov
mov
push
sti
ja
lock
sbb
lds
call
inc
gs
enter
jb
xor
outs
(bad)
fnsave
xor
add
rcr
(bad)
mov
retf
jl
sub
jne
cld
pusha
jmp
mov
push
inc
sbb
cmp
shl
pop
cmp
sti
dec
mov
sub
int
ss
movs
jmp
xchg
iret
(bad)
inc
sbb
sbb
in
mov
xchg
sub
cmp
xor
cli
ret
add
jb
movs
push
stos
es
adc
push
inc
sub
xchg
sub
xor
push
inc
not
xchg
fwait
repnz
leave
xchg
inc
inc
push
test
jecxz
iret
in
hlt
popa
cmp
adc
push
jle
cld
cmp
outs
and
jg
xchg
xchg
cmp
xchg
xor
xor
data16
fcmovnb
test
in
outs
mov
sahf
or
call
sbb
inc
outs
lea
and
aas
mov
stc
or
sahf
call
mov
jge
mov
mov
mov
iret
cmp
add
stc
push
pushf
pop
gs
ret
out
dec
clc
(bad)
jmp
push
cmc
and
ja
stos
or
mov
daa
in
xor
pop
fcmovnu
add
adc
xchg
add
xlat
dec
mov
shr
mov
jne
mov
(bad)
push
ja
mov
sub
out
sar
jg
push
jb
cmc
xor
mov
cmc
aad
push
stc
push
lods
push
push
jmp
or
das
push
jb
jb
xor
ja
xchg
std
in
div
stc
dec
xchg
adc
mov
mov
repz
xchg
test
xor
loope
mov
jge
jge
jns
adc
xor
lock
mul
bound
iret
shl
loop
xor
aas
test
aaa
cmp
push
and
data16
and
dec
cmps
jle
cwde
jb
inc
bound
and
inc
cs
inc
leave
aas
push
cmp
imul
ins
aas
imul
jmp
leave
ficomp
ret
mov
and
in
enter
ret
test
sbb
loope
mov
xchg
dec
ss
sub
out
shl
outs
mov
xchg
(bad)
sti
fnsave
ja
xchg
add
(bad)
mov
fdivrp
jne
sbb
mov
cmp
mov
imul
cmp
ins
cmp
aas
gs
lock
fdivr
(bad)
ins
cmp
or
clc
inc
mov
mov
jns
push
jno
cmp
mov
js
(bad)
cmp
mov
(bad)
jne
gs
jp
mul
stc
pop
je
push
xor
sub
dec
stos
stc
jne
adc
sahf
cld
gs
addr16
or
mov
mov
jg
pop
inc
fisttp
mov
cli
in
daa
clc
(bad)
mov
xor
jge
test
jbe
sbb
daa
dec
mov
fstp
jae
mov
jne
jmp
cmps
mov
sbb
fcom
mov
push
int
push
push
lea
push
jecxz
hlt
out
(bad)
mov
outs
dec
sti
inc
push
bound
cld
pop
dec
mov
mov
dec
mov
xchg
stos
jbe
js
mov
push
adc
jo
pop
cmp
gs
das
sub
pmulhuw
sub
dec
or
jne
push
neg
mov
xor
hlt
addr16
xor
jnp
sar
cmp
cmps
aas
mov
dec
add
push
(bad)
xchg
mov
pop
popf
or
mov
gs
ja
ret
out
mov
inc
test
add
lds
int3
out
cmp
xor
xlat
xchg
add
(bad)
mov
int3
sti
add
mov
scas
dec
out
mov
add
xor
(bad)
cwde
sti
stos
js
push
or
jp
add
mov
in
popf
push
out
push
mov
xchg
and
ss
xchg
aas
mov
and
fwait
dec
sbb
add
mov
jb
mov
push
jge
ins
imul
int3
jg
xchg
aaa
in
mov
cs
push
xchg
mov
jne
in
adc
sar
add
mov
ret
dec
stos
cmp
nop
fwait
or
icebp
rcr
inc
sub
jp
sti
pop
push
out
popf
mov
shl
ja
fdiv
idiv
fcomp
cmp
rcl
jp
icebp
cmp
cmp
mov
inc
aas
xor
ins
cmp
mov
stc
push
dec
push
clc
mov
lds
pop
hlt
inc
push
stc
inc
mov
ror
shl
sbb
test
or
mov
call
jmp
push
ins
cmp
ins
retf
in
nop
jmp
mov
cmp
les
iret
adc
dec
dec
push
loope
cld
stos
inc
out
sar
sysexit
jmp
int
mov
test
lods
fs
xchg
shr
mov
pop
xor
jmp
mov
cmp
push
fldenv
(bad)
cmp
jb
repnz
popf
push
xor
stos
cmp
jg
pop
retf
enter
lock
jae
cmp
cmp
int3
mov
xor
mov
mov
and
not
or
xchg
ss
mov
(bad)
mov
into
out
sar
and
cwde
stos
jmp
jne
shl
sbb
pop
push
adc
fimul
pushf
fsub
iret
iret
hlt
(bad)
fwait
test
fdivp
call
mov
jb
sbb
mov
dec
jmp
cli
jmp
test
movs
lods
ja
ret
fld
or
fmul
inc
stos
jecxz
loope
out
idiv
or
sbb
inc
jo
sahf
push
dec
out
pop
mov
enter
cmp
sar
jmp
daa
imul
ret
hlt
clc
xchg
jle
lock
(bad)
(bad)
cwde
sub
mov
loopne
mov
pop
int
pop
xor
dec
jg
aaa
in
adc
mov
outs
mov
mov
xchg
mov
mov
mov
inc
push
ss
mov
inc
inc
lea
ins
(bad)
dec
and
sub
test
sar
dec
push
push
gs
mov
sub
int
popa
inc
stc
in
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
hlt
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
push
push
lea
call
mov
mov
test
jge
push
call
movzx
cmp
jne
cmp
jge
push
call
movzx
cmp
je
push
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
mov
call
test
je
call
mov
mov
push
push
call
add
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
lea
push
push
lea
push
lea
mov
call
mov
lea
push
push
lea
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
lea
push
lea
call
mov
call
mov
call
mov
mov
push
push
push
push
mov
call
mov
add
push
push
push
push
call
test
je
push
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
push
call
add
mov
mov
test
je
mov
call
mov
jmp
xor
mov
lea
push
lea
call
add
mov
mov
push
push
mov
call
mov
mov
test
je
mov
jmp
mov
push
lea
push
push
push
push
push
push
mov
call
mov
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
push
push
call
test
je
mov
cmp
jne
push
push
push
push
lea
push
call
test
je
mov
sub
je
sub
je
sub
jne
push
call
mov
call
jmp
call
mov
call
jmp
mov
push
push
push
push
call
call
mov
mov
push
push
push
push
call
lea
push
call
lea
push
call
push
call
lea
push
push
call
test
jne
mov
push
push
lea
mov
call
mov
and
cmp
pop
je
cmp
je
cmp
jne
call
mov
mov
push
push
push
mov
call
lea
add
cmp
jne
call
push
push
push
lea
call
mov
push
mov
call
mov
lea
call
push
lea
call
push
lea
push
call
push
call
add
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
cmp
je
push
push
lea
call
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
call
mov
mov
push
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
cmp
mov
je
call
cmp
je
call
cmp
je
call
mov
mov
push
push
push
call
add
jmp
call
mov
mov
push
push
push
call
add
lea
push
push
mov
call
push
call
test
je
lea
push
push
push
call
mov
push
push
push
lea
push
push
push
mov
mov
call
push
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
mov
test
je
call
push
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
mov
call
mov
pop
and
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
push
lea
call
mov
call
push
push
lea
push
lea
mov
call
mov
call
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
call
mov
call
mov
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
mov
cmp
je
mov
cmp
je
push
push
lea
call
mov
mov
push
push
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
movzx
movzx
push
push
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
call
mov
lea
call
mov
push
push
lea
push
call
mov
mov
push
push
push
push
mov
mov
mov
mov
call
push
push
push
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
add
mov
call
mov
xor
cmp
je
mov
mov
cmp
mov
mov
je
mov
jmp
mov
leave
pushf
fcom
pop
fld
test
pushf
push
ret
adc
movlps
or
sbb
aas
ja
arpl
(bad)
dec
cli
inc
mov
call
arpl
mov
cs
cmp
pusha
pusha
inc
stc
stc
pop
das
mov
and
fwait
adc
shr
fidivr
sub
sbb
mov
or
mov
aam
dec
adc
and
clc
loop
(bad)
or
dec
dec
push
sti
cmp
sub
and
jmp
iret
xchg
mov
sar
iret
sbb
data16
dec
jne
call
ret
jg
sbb
ss
arpl
mov
add
jle
bound
sbb
cmp
mov
and
aam
inc
scas
sub
pop
outs
pop
outs
mov
loop
out
(bad)
shl
mov
sbb
aam
or
push
inc
ds
fisub
mov
sub
jle
xor
cmp
xchg
xchg
lea
jl
pop
cmp
fdiv
sub
push
adc
xor
mov
iret
(bad)
mov
sbb
push
xchg
aas
and
pop
dec
fidivr
pop
call
test
movzx
xchg
fwait
push
fisubr
ret
xchg
fwait
dec
ror
xchg
lods
lahf
pop
dec
jp
jp
jnp
retf
loop
mov
mov
das
(bad)
mov
pop
inc
les
jnp
or
push
addr16
into
sbb
sub
(bad)
mov
frstor
out
sub
mov
jb
push
mov
dec
call
jbe
mov
retf
loope
jecxz
retf
push
mov
ins
loope
mov
ins
adc
cmp
pop
jmp
sti
mov
sub
aad
push
out
call
out
xor
xchg
push
sub
cmp
popa
shl
adc
call
arpl
in
sub
js
and
and
fadd
jp
xor
stos
cmp
inc
inc
sbb
add
or
mov
les
ds
jge
mov
pop
jmp
adc
lock
aaa
bound
xor
xchg
jge
stos
call
inc
int
(bad)
aam
das
sbb
cmps
adc
fiadd
es
scas
add
and
mov
repz
not
inc
push
mov
or
sbb
ror
xor
and
shr
clc
sub
adc
dec
jno
mov
and
cli
mov
lods
xor
xor
inc
call
aad
ds
dec
arpl
inc
push
mov
sbb
push
dec
push
push
pop
dec
push
xchg
pop
and
dec
mov
jae
push
stos
dec
mov
shl
shl
mov
retf
jns
pop
push
inc
js
retf
stos
xor
sti
push
dec
cmp
jmp
jmp
cmp
std
aaa
bound
lods
and
jecxz
push
sbb
call
scas
ror
or
pop
adc
sbb
xor
inc
inc
rol
inc
(bad)
bound
inc
repnz
js
push
xchg
movs
push
sub
jnp
mov
pop
xor
(bad)
dec
cmps
dec
enter
ret
mov
mov
ds
push
imul
adc
sbb
xchg
call
jo
xchg
in
or
mov
xchg
add
clc
jecxz
mov
ja
pusha
repz
aad
or
fcmovu
enter
cmp
mov
jnp
dec
into
outs
mov
mul
xor
xchg
and
mov
or
retf
adc
add
clc
imul
or
test
cmp
sbb
inc
aam
or
jbe
mov
test
push
inc
inc
xchg
out
and
sbb
or
cmp
leave
mov
cwde
cmps
cmp
(bad)
arpl
xchg
retf
bound
loop
sub
push
jmp
adc
ss
add
aam
mov
(bad)
stos
or
pop
loope
push
shl
or
cmp
ja
in
jo
cmc
outs
aaa
add
(bad)
or
retf
mov
cwde
cmps
fimul
pop
loope
add
outs
xor
adc
xchg
jnp
stc
inc
xor
gs
mov
add
mov
loop
dec
sub
leave
and
mov
out
popa
push
push
retf
jne
jmp
cmp
sahf
retf
add
inc
dec
jp
enter
mov
xlat
bound
fwait
(bad)
xor
lds
xor
data16
sti
(bad)
sti
in
and
in
rol
imul
cmp
push
mov
mov
aam
jmp
pop
pop
xlat
mov
or
daa
jle
in
(bad)
jbe
mov
paddq
arpl
jg
mov
ret
pop
(bad)
in
in
shr
and
push
mov
xchg
mov
jmp
(bad)
jg
(bad)
push
xor
ret
sub
push
hlt
cmp
cbw
fld
jecxz
jle
imul
mov
cld
retf
push
cmp
fwait
sub
ret
mov
or
(bad)
mov
mov
xchg
or
mov
fwait
(bad)
jle
pop
ret
repz
adc
mov
rcl
je
sbb
sub
jg
fild
ret
hlt
jns
daa
stc
add
gs
cs
cmps
sbb
movs
sub
sub
ret
stc
push
mov
add
mov
repz
sub
sbb
inc
mov
(bad)
stos
add
comiss
sub
dec
mov
mov
xor
out
in
(bad)
lock
out
jns
push
sbb
or
adc
pop
or
mov
ficom
mov
mov
mov
ret
mov
mov
cs
bnd
(bad)
clc
test
adc
ss
cmp
xor
xchg
adc
lea
push
adc
pop
xor
lds
jnp
(bad)
rcr
idiv
jbe
lds
gs
data16
int
adc
jmp
cmp
xor
shl
hlt
in
jnp
mov
sub
pop
xor
fidiv
js
mov
and
ja
add
sbb
pop
sub
out
das
fldz
mov
pop
push
or
call
add
loopne
shl
mov
loope
ret
inc
mov
push
and
pop
add
loop
mul
out
dec
ret
cmp
or
retf
xchg
scas
stos
cmps
out
bound
loopne
ss
mov
sar
cwde
sbb
ins
or
rol
mov
addr16
dec
mov
or
in
outs
or
fild
repnz
out
sti
xchg
retf
mov
push
mov
pop
out
pop
scas
ret
ret
inc
bound
ins
and
mov
sbb
imul
xchg
stos
pushf
and
(bad)
enter
scas
add
mov
mov
rol
ret
mov
pop
and
xor
inc
add
(bad)
jmp
mov
jo
sbb
int3
add
fld
pop
jne
add
scas
mov
bound
ins
add
jo
fsub
xchg
mov
adc
or
or
ins
xor
dec
xchg
daa
imul
retf
xchg
scas
cmps
enter
xor
cli
fistp
stos
xor
mov
scas
mov
es
es
adc
dec
and
jmp
retf
enter
fwait
ds
nop
mov
jnp
aad
es
retf
jnp
and
or
push
sub
mov
and
mov
mov
out
bound
clc
arpl
test
cmc
adc
sbb
sbb
scas
pop
aam
push
push
push
or
cmp
loop
push
fldlg2
enter
loope
mov
pop
xor
jne
dec
sbb
dec
adc
sub
retf
jp
jb
sbb
sbb
cmp
add
cmp
je
push
dec
cld
call
stos
(bad)
jne
inc
mov
sbb
xchg
push
mov
in
repnz
inc
call
popa
arpl
loop
mov
sbb
adc
push
popa
mov
inc
out
daa
and
mov
sbb
aam
stos
bound
pop
pop
das
jmp
sahf
or
sahf
and
fldz
inc
or
mov
loope
nop
or
nop
and
sahf
cmp
dec
daa
xchg
mov
ins
rcl
fwait
sub
pop
fstp
inc
test
shr
and
gs
xor
xor
(bad)
adc
cli
in
push
popa
cmp
int
and
rep
movlps
bound
iret
pop
fcmovu
sbb
(bad)
int3
mov
into
shr
or
inc
cdq
sub
inc
xchg
sub
test
repz
xchg
sub
sub
rcl
cs
or
test
push
cmp
pop
xor
loope
shr
dec
pop
adc
mov
out
jmp
fcmovu
aaa
add
push
shl
pop
(bad)
fisttp
mov
pop
ret
(bad)
jl
(bad)
(bad)
fwait
loope
add
jecxz
imul
xor
imul
inc
cmp
adc
sahf
cmp
fs
scas
jmp
cmp
je
loop
fimul
lea
fistp
psubq
ret
adc
shl
aam
mov
stos
jb
add
test
adc
arpl
imul
pop
sbb
dec
add
adc
inc
call
(bad)
push
(bad)
addr16
bound
dec
div
and
add
xchg
or
ds
and
ret
dec
pop
mov
lds
scas
imul
mov
adc
jb
mov
fstp
movs
(bad)
nop
loopne
mov
adc
cmp
pop
inc
dec
das
sbb
sub
adc
sbb
cdq
or
int3
loop
inc
mov
xchg
xchg
sbb
fisttp
sub
jle
popa
add
test
(bad)
jae
test
enter
dec
addr16
add
cmps
sbb
scas
sub
lock
fidiv
in
cdq
mov
jg
xor
shl
or
adc
jo
js
sbb
or
shr
inc
out
ror
jp
xchg
inc
repnz
adc
sub
jecxz
mov
pop
test
cmps
out
jnp
or
cwde
imul
or
dec
add
in
sub
gs
pop
pusha
or
push
clc
add
mov
push
mov
(bad)
cmp
add
xchg
push
leave
cmps
sub
jmp
jo
ror
fistp
push
xchg
xlat
addr16
jo
pop
test
nop
popa
in
loopne
pop
icebp
jl
add
outs
sbb
out
sub
call
or
and
retf
cmps
xchg
es
jp
out
pop
xchg
mov
sbb
jae
rcl
dec
fwait
and
sbb
arpl
inc
xor
(bad)
pop
push
xchg
jno
push
arpl
retf
or
shr
pop
loop
dec
std
cmp
aaa
repz
cdq
call
xchg
pop
mov
inc
js
mov
jmp
pop
shl
dec
cmps
sbb
cdq
push
xchg
shl
loop
inc
sbb
jp
add
pop
stos
mov
sar
cmp
loopne
push
jo
adc
das
mov
ins
(bad)
call
add
retf
addr16
add
sbb
cmp
out
add
fwait
add
inc
xchg
in
jae
popf
sub
repz
sahf
sets
(bad)
dec
inc
popf
xor
or
mov
pop
popa
(bad)
popf
dec
lods
clc
dec
ficomp
mov
dec
int
lods
push
pop
xchg
cld
cmc
mov
sub
mov
jle
and
(bad)
pop
lds
mov
or
add
stos
jns
stos
add
and
xlat
push
clc
mov
mov
mov
inc
fisubr
aaa
sti
or
enter
dec
(bad)
bound
icebp
loop
lds
jne
aad
loopne
cdq
ins
push
retf
rcr
cmc
and
xor
or
adc
adc
jle
push
push
sbb
mov
mov
or
movs
(bad)
loop
fstp
dec
popa
xchg
cmp
aas
popf
push
sub
pop
stos
xor
out
data16
jno
fcom
cmps
cmp
arpl
inc
fiadd
mov
xor
popf
pusha
mov
(bad)
sub
xchg
pop
mov
mov
sbb
dec
ja
pop
fistp
xchg
dec
test
scas
xor
mov
sbb
adc
mov
jmp
test
dec
mov
lods
inc
cmp
rol
mov
push
repz
test
jmp
and
mov
and
mov
cwde
jg
scas
xor
adc
pop
fwait
and
jge
pop
ret
pop
mov
mov
xor
fucomi
rcr
rol
cwde
call
call
sbb
xchg
ja
daa
bound
cmps
lahf
add
jbe
in
ret
jbe
jno
adc
dec
adc
outs
dec
mov
add
test
rcl
ret
pop
sar
and
fwait
stos
xchg
bnd
out
retf
adc
js
enter
sar
or
and
xor
push
inc
sti
and
scas
lods
xchg
mov
in
(bad)
shr
pop
(bad)
in
stos
jbe
jo
imul
push
sub
mov
mov
jae
aad
aaa
mov
std
test
popf
mov
outs
sbb
retf
mov
jg
xor
sub
cmc
pushf
cmp
mov
sbb
sbb
call
popf
pop
inc
pop
push
movs
sbb
push
push
xchg
aaa
push
sub
xchg
jb
lds
sbb
fpatan
pop
pop
mov
mov
jl
das
pop
dec
mov
stos
loope
popa
je
in
inc
mov
jbe
inc
das
(bad)
push
cmps
clc
rcl
outs
mov
cmp
(bad)
jmp
rcl
adc
cmc
inc
dec
mov
repnz
into
shl
xchg
movlps
xor
xchg
mov
test
lock
mov
push
sti
das
mov
rcl
sub
in
mov
jl
inc
imul
mov
push
cmp
jb
aaa
mov
xchg
pop
or
sub
(bad)
sbb
or
fsubr
mov
jecxz
aas
or
adc
in
mov
lods
sub
fcom
(bad)
mov
sahf
and
dec
ret
sbb
jno
mov
jne
lea
mov
mov
jmp
dec
repz
xor
aaa
pop
out
repz
xor
cmp
in
xlat
fisttp
imul
adc
ret
cmp
icebp
ret
cmp
stc
lea
movs
clc
fwait
mov
jb
jmp
(bad)
loop
mov
das
xchg
cmps
icebp
into
mov
(bad)
iret
jno
(bad)
ret
dec
or
outs
loop
jge
iret
out
jmp
cmp
in
mov
sub
add
rcr
(bad)
and
mov
jnp
sub
and
push
repnz
mov
cmp
xchg
cmp
ins
jb
sub
jns
add
cli
push
dec
leave
xchg
ja
and
pop
mov
inc
jno
mov
call
loop
mov
sub
adc
stc
outs
fnstenv
and
pop
jmp
and
adc
push
out
push
mov
dec
popa
dec
sub
push
(bad)
cmp
xor
sbb
pop
mov
sbb
(bad)
aaa
inc
mov
shr
or
dec
cmps
bound
adc
dec
std
imul
repnz
std
jp
or
ror
cmc
retf
push
xchg
lock
stos
fmul
pop
(bad)
mov
mov
mov
in
cs
add
fdivr
dec
rol
aad
xchg
push
pop
adc
mul
scas
or
pusha
pop
imul
adc
xchg
retf
in
mov
or
jns
mov
pop
xchg
jae
in
cli
inc
sti
daa
jbe
and
dec
xchg
fist
jo
sbb
push
movs
cld
xchg
mov
push
mov
shl
cmp
in
inc
lods
js
rol
repnz
loop
xchg
retf
in
shl
das
and
test
hlt
add
xchg
cwde
lods
jo
adc
jp
scas
pop
sub
hlt
add
add
fsub
push
pop
xchg
push
repz
mov
test
leave
add
adc
adc
(bad)
sbb
mov
retf
mov
jne
sbb
or
jns
mov
sub
jmp
jp
pop
mov
dec
movs
push
dec
sar
mov
psrld
push
daa
adc
pop
ffreep
xchg
jns
test
mov
ds
mov
pop
or
arpl
outs
pop
push
hlt
shl
push
sbb
xor
loop
lds
mov
in
jb
jo
call
stos
aas
dec
jo
add
sub
in
sub
aam
mov
jno
cli
xchg
and
xor
test
loop
stos
dec
sub
scas
test
xor
pop
xchg
jno
sub
cmps
ins
sub
xchg
bound
cld
adc
das
shl
popf
push
cld
mov
repnz
jp
call
or
cmp
jmp
pop
pop
push
call
cmovl
imul
xchg
dec
outs
mov
push
fimul
adc
cmp
ds
pop
clc
in
in
shr
repnz
or
dec
and
ins
ins
xchg
or
push
sub
(bad)
sbb
mov
iret
int
push
jp
mov
aas
jp
pushf
arpl
mov
inc
sub
jae
jo
adc
xlat
stos
xor
dec
pop
pop
icebp
dec
fs
ds
jmp
or
mov
cmp
mov
stos
xor
sub
jmp
fst
icebp
jle
push
push
out
std
stos
imul
inc
pop
rol
fwait
jae
lods
fisttp
mov
ret
popf
aaa
add
int3
pop
push
inc
xchg
inc
jg
leave
popa
in
or
add
imul
out
lea
int3
inc
sbb
aam
call
jmp
sbb
ja
std
stos
mov
adc
mov
inc
xchg
popf
xor
sub
mov
and
cmp
(bad)
sti
out
dec
push
or
imul
dec
dec
add
(bad)
jae
aam
sbb
inc
add
jae
(bad)
fwait
(bad)
retf
inc
pop
dec
push
dec
push
nop
jmp
or
pop
pop
in
call
xchg
dec
cmp
adc
push
add
jb
cmps
repz
xchg
dec
pop
loop
push
or
xor
lea
jns
jge
in
test
cdq
cmp
push
cmp
xor
repnz
call
icebp
dec
cmps
jge
pop
mov
call
jae
and
xchg
cmp
jmp
cs
dec
pop
int
rcr
ror
bound
sbb
cmp
sub
jb
xchg
out
jp
adc
sub
mov
ret
lds
scas
aad
mov
imul
cmp
mov
mov
fdivr
adc
enter
pop
add
es
sbb
mov
imul
out
jecxz
fisub
fwait
push
repnz
jle
cmp
inc
sbb
stos
sub
sbb
jno
clc
and
cdq
mov
ins
pop
xchg
sub
mov
jmp
add
shr
fdiv
push
xchg
cwde
mov
jbe
mov
fist
imul
inc
lock
inc
mov
jae
sahf
test
stos
mov
cmp
and
nop
mov
sbb
dec
ret
arpl
clc
pushf
sbb
xor
(bad)
dec
add
xor
es
ja
or
lock
sbb
into
add
outs
sub
mov
jnp
mov
push
push
xor
shr
and
jmp
js
ret
lock
cmp
lock
adc
loopne
adc
sbb
(bad)
push
repz
jo
or
jns
lods
pop
lds
cmp
leave
mov
push
cld
sbb
popa
imul
repz
push
lods
cmp
stos
rol
gs
scas
and
sbb
mov
loope
push
call
adc
adc
pusha
test
xor
into
test
pop
fild
push
push
dec
xor
mov
inc
ds
jmp
push
call
in
jg
xor
fldcw
push
pop
and
sub
fisttp
and
jo
in
push
out
cmp
mov
sub
cmp
xor
sahf
fs
xor
mov
adc
xchg
sub
mov
dec
or
loop
(bad)
jae
cmp
push
nop
and
retf
les
or
and
inc
movs
sbb
sub
pop
mov
repz
mov
or
outs
sub
ret
int3
xor
ja
ss
cli
sbb
inc
jmp
mov
adc
or
imul
push
jl
push
jge
adc
sahf
xor
or
inc
mov
enter
push
adc
shl
jecxz
aam
loop
push
stos
ja
imul
xor
cmp
jnp
jmp
sbb
lahf
imul
add
push
mov
mov
and
(bad)
cmp
ret
(bad)
push
push
stos
scas
sti
(bad)
retf
popf
arpl
(bad)
ins
add
ins
movs
es
cmp
(bad)
push
or
out
ret
(bad)
jmp
je
icebp
add
movs
cmp
repnz
push
test
imul
inc
cmps
xor
into
data16
pop
into
push
rol
or
cmp
sahf
mov
pop
in
arpl
sub
js
inc
xchg
rol
xchg
sub
mov
jnp
fwait
push
xor
clc
push
mov
pop
arpl
scas
add
jns
and
sbb
cli
shl
test
xor
cmp
jle
jbe
loopne
xlat
mov
xchg
adc
fwait
xchg
je
mov
jae
aas
ret
adc
pushf
ja
retf
or
mov
pusha
sub
fwait
xor
or
enter
adc
xor
cwde
mov
dec
idiv
frstor
mov
cmp
cmp
dec
lods
jo
add
mov
add
loop
mov
mov
mov
or
mov
inc
dec
mov
stos
clc
sti
push
pop
retf
inc
jecxz
fimul
pop
fisttp
pop
mov
das
inc
xchg
and
loop
jo
dec
push
repz
sbb
mov
bound
mov
ins
leave
inc
in
or
inc
jl
icebp
add
adc
pop
movs
test
sbb
loope
sbb
jp
sub
(bad)
mov
movs
xchg
xchg
arpl
cmps
aaa
add
adc
imul
adc
xchg
xchg
ins
mov
adc
cld
enter
mov
inc
add
lods
and
loope
cmps
dec
ror
xchg
popa
lock
lahf
sbb
shl
in
ficom
inc
ret
in
inc
sbb
dec
fisttp
aas
sub
cwde
or
push
xor
popa
sahf
pop
fcmove
pop
pop
push
retfw
(bad)
das
xor
scas
fiadd
bound
fadd
pand
mov
pop
push
call
mov
pop
fwait
loopne
retf
pop
mov
(bad)
cmc
adc
ret
pusha
iret
jne
pop
or
xor
outs
cmps
add
push
dec
jmp
popa
mov
ror
adc
aam
je
lds
jmp
cmp
mov
lods
push
or
mov
mov
dec
lock
(bad)
(bad)
dec
dec
adc
mov
sbb
fndisi(8087
fstp
in
lahf
mov
adc
(bad)
lock
cmp
je
test
inc
cmp
or
shld
fwait
int3
sbb
in
dec
lods
shl
xchg
jp
inc
mov
xchg
fld
test
add
ret
pop
jnp
push
ins
inc
dec
dec
mov
nop
fwait
add
sbb
out
dec
mov
(bad)
repz
lds
pusha
mov
aaa
mov
xchg
into
mov
jae
fistp
add
push
sbb
jnp
pop
in
or
ds
xor
adc
mov
in
push
xchg
loope
jmp
rcr
cmp
and
dec
sub
xor
sbb
fisub
cli
push
push
jecxz
ror
add
ins
cmps
adc
(bad)
js
xchg
leave
inc
mov
out
sbb
stos
sbb
(bad)
neg
adc
ins
sbb
rcr
pop
scas
and
mov
fs
jecxz
inc
(bad)
sti
data16
mov
mov
jae
stos
sti
popf
loope
btc
in
jns
in
jmp
aad
mov
shl
fcomp
mov
mov
dec
retf
mov
fiadd
fistp
pop
ret
std
repz
dec
popf
jbe
inc
(bad)
ds
sar
sbb
inc
mov
add
popf
xchg
cli
add
xor
call
add
xor
es
sets
shl
repnz
aaa
mov
arpl
bound
pop
xchg
cs
inc
lods
addr16
stos
repnz
fisttp
pop
int
push
push
push
cli
cmp
xchg
rcl
jmp
adc
pop
(bad)
jo
mov
and
stos
sahf
outs
pop
outs
mov
and
or
cmps
sti
xchg
mov
test
dec
mov
sub
adc
movs
sbb
mov
mov
dec
pop
or
out
out
pop
sbb
jne
push
mov
xor
and
jo
jmp
es
js
mov
pop
sub
inc
or
xor
xchg
pop
shl
(bad)
jecxz
push
in
in
dec
jo
mov
mov
pusha
push
pop
sub
or
sbb
push
mov
jmp
fadd
hlt
jg
mov
xor
lods
xchg
imul
xchg
add
add
popa
cmp
out
mov
sbb
ret
cwde
out
dec
(bad)
xlat
inc
jecxz
xchg
mov
jnp
sub
repnz
push
int3
cdq
addr16
push
outs
sub
iret
sub
cwde
jge
sub
popf
mov
and
adc
popa
mov
sub
arpl
pop
jp
fidivr
dec
mov
xor
xchg
out
test
xchg
cdq
push
retf
mov
and
xchg
push
xor
adc
and
popa
imul
inc
out
or
jnp
mov
sbb
aad
adc
pop
ret
rcr
mov
mov
push
popa
fmul
sti
mov
popf
xor
bnd
jb
int
gs
das
pusha
mov
mov
mov
push
cmc
sbb
xor
fs
or
mov
nop
dec
and
test
and
jno
jmp
push
mov
xchg
nop
repz
lock
or
ja
pop
in
push
call
jno
mov
ficom
mov
dec
pop
lds
popa
in
in
dec
lea
mov
sub
fild
mov
cli
push
sub
adc
sti
push
xchg
daa
mov
(bad)
pop
dec
fsub
xor
ror
out
pop
nop
out
sbb
jnp
mov
xor
es
cdq
mov
pop
inc
jns
sbb
and
inc
dec
rcl
xchg
jge
pop
xor
arpl
and
push
out
(bad)
sbb
sub
outs
(bad)
adc
mov
cmc
out
push
jge
out
xor
mov
mov
rol
loope
and
and
jnp
xor
stos
mov
inc
dec
stos
jae
fdivr
nop
ficom
retf
mov
mov
lock
mov
pop
in
mov
dec
sbb
test
dec
push
jecxz
push
into
inc
fdiv
inc
mov
push
mov
jge
cli
sub
pop
dec
cmps
sar
ins
jbe
push
jmp
xor
mov
xor
shl
jae
mov
or
out
movs
jecxz
dec
push
mov
pusha
ficom
ror
leave
mov
cs
test
mov
mov
cli
sub
std
stos
stos
xchg
cmps
ss
xchg
push
jle
and
fisttp
das
dec
stos
ja
lahf
pmulhuw
xchg
jne
fld
jns
aaa
ins
push
add
loopne
mov
cli
loop
dec
jl
jmp
mov
js
lahf
pop
lahf
outs
arpl
rcr
push
sbb
xchg
mov
push
jns
lahf
ins
lods
test
mov
add
neg
icebp
shl
and
imul
les
jecxz
xor
dec
xchg
imul
and
pop
dec
mov
rol
lods
and
fist
inc
imul
ja
sahf
jb
push
mov
mov
jge
mov
dec
mov
pop
jb
bound
xchg
ficomp
sub
mov
das
mov
ret
sbb
inc
ret
cmps
inc
sub
dec
pop
push
not
aas
push
mov
mov
xchg
jle
cli
or
add
push
dec
inc
stos
test
xor
mov
addr16
and
jnp
inc
inc
mov
rol
mov
fwait
xor
cmp
push
in
mov
cmc
push
mov
sti
jmp
popf
jno
sub
add
inc
jb
daa
xchg
cmp
push
sub
inc
daa
cwde
cdq
jnp
ror
xor
push
push
scas
and
xchg
bound
jns
hlt
inc
loop
leave
mov
les
gs
jno
or
lods
pop
add
xchg
daa
into
push
mov
mov
jmp
and
push
pushw
add
add
arpl
out
push
jne
shl
lods
mov
imul
inc
out
sbb
imul
and
das
adc
mov
pop
sbb
jl
ret
fisub
in
loope
movs
pop
inc
push
enter
sbb
aad
cdq
xchg
cmp
adc
mov
dec
and
cmc
cli
dec
movs
xor
cdq
movs
outs
scas
cmp
push
dec
mov
loopne
addr16
xlat
inc
push
sub
ins
mov
mov
pop
jp
loop
ret
out
lods
(bad)
scas
and
hlt
inc
ret
dec
or
arpl
push
add
inc
fs
movs
jmp
push
retf
aaa
pop
ins
adc
retf
fisub
shl
mov
adc
pop
cli
xor
enter
mov
xchg
cmp
popa
mov
sbb
xchg
fwait
inc
(bad)
cmp
push
addr16
rol
cmps
push
dec
enter
inc
daa
xchg
mov
jmp
mov
mov
push
ins
int
test
test
icebp
sbb
xor
(bad)
fwait
jp
xlat
test
call
mov
mov
out
shl
or
add
pop
shl
lds
retf
or
ins
mov
inc
and
lods
inc
xchg
sbb
and
cdq
gs
(bad)
(bad)
mov
out
fstp
xchg
inc
mov
mov
adc
outs
adc
adc
pop
gs
xor
push
sbb
mov
pushf
out
std
addr16
imul
pusha
cmp
mov
inc
dec
adc
lods
pop
push
(bad)
clc
addr16
rcl
repnz
cmps
fsubr
iret
mov
cmps
test
les
sbb
cmp
jbe
pop
mov
dec
sub
call
dec
cmp
adc
fldenv
sbb
xchg
sub
rcr
sbb
fidiv
cmp
sbb
push
icebp
cmc
xchg
dec
pushf
repz
ret
sar
sahf
jg
sbb
and
mov
mov
xchg
fcomp
mov
xchg
push
and
repz
mov
cmp
sub
retf
dec
icebp
inc
shr
retf
ret
mov
sbb
sub
mov
cmps
sub
(bad)
(bad)
outs
inc
outs
sub
nop
and
inc
mov
cmp
mov
in
mov
xchg
test
sub
jle
test
push
pop
sbb
jbe
repz
ret
jbe
sbb
popa
scas
out
inc
mov
repz
xchg
inc
sahf
sbb
retf
jbe
sbb
xchg
pop
stos
jle
mov
push
hlt
in
ins
int3
mov
jmp
(bad)
data16
cmc
and
or
sub
xchg
fs
adc
mov
loope
jle
xchg
pop
ins
mov
pushf
jno
inc
jns
cmp
jae
or
mov
bswap
mov
repz
sbb
push
cmp
(bad)
scas
test
ficom
inc
punpcklbw
adc
cwde
mov
loope
fidivr
or
jae
jmp
mov
ds
mov
mov
loope
mov
inc
retf
dec
call
loop
loope
rcl
pusha
sbb
jb
ffree
add
dec
xor
push
sub
fldenv
int
sti
jno
retf
test
addr16
imul
bound
mov
ficom
jp
mov
mov
(bad)
sub
aas
jp
add
cli
ret
add
xor
loopne
xor
mov
adc
aad
in
cwde
ja
jnp
std
retf
retf
sbb
dec
push
xchg
test
or
aad
lds
scas
pop
mov
loop
(bad)
xchg
rcr
push
push
out
gs
pop
inc
rsqrtps
(bad)
mov
push
adc
shr
hlt
dec
add
jp
push
inc
pop
mov
push
jno
popf
xor
jmp
jbe
adc
not
leave
xchg
in
outs
inc
mov
pushf
stos
xchg
es
shl
and
jge
sbb
mov
sub
pop
adc
mov
cmp
dec
jle
sub
cld
(bad)
pop
jbe
cmp
imul
inc
pop
mov
inc
jmp
adc
inc
mov
add
nop
daa
stos
cmp
out
push
pop
js
adc
cmps
lahf
les
mov
push
adc
gs
mov
or
dec
adc
push
push
std
movs
retf
xchg
add
(bad)
lds
aad
push
mov
mov
daa
push
and
push
jmp
mov
push
xchg
cli
ret
push
shl
retf
mov
jecxz
xchg
ins
mov
popa
outs
mov
and
push
dec
xchg
sub
xchg
shl
xchg
mov
xchg
ret
clc
hlt
mov
int
aad
std
pop
add
daa
xchg
pop
mov
(bad)
(bad)
call
add
out
lods
mov
ret
xor
dec
idiv
repnz
pop
jne
jno
push
mov
dec
mov
mov
jno
push
pop
and
add
cmp
(bad)
stos
sti
out
jo
add
sbb
fcomp
cmp
shl
dec
loopne
dec
push
rcl
jl
out
nop
inc
and
mov
arpl
pop
push
or
lea
test
push
cli
outs
mov
push
push
rcr
and
nop
push
fld
mov
and
das
je
or
and
aad
rcl
mov
iret
add
loopne
jae
repz
jp
inc
mov
aas
add
mov
(bad)
xor
cwde
and
xor
jne
jmp
push
pop
clc
or
pop
xchg
push
sbb
(bad)
push
int3
push
ss
sbb
jb
jb
rcr
dec
retf
lea
dec
clc
add
cmp
sub
pop
push
push
fcmovnb
fdivr
out
pop
mov
les
je
dec
mov
xchg
cmp
test
and
add
add
adc
out
cmp
sahf
adc
adc
and
sub
cs
ja
test
cmp
repnz
jmp
stos
xchg
pop
inc
shl
ins
jnp
push
inc
mov
inc
dec
daa
xchg
push
mov
jmp
xor
repnz
mov
lods
fisttp
sub
sahf
mov
pop
jno
jo
jp
movs
mov
sbb
aaa
adc
adc
xchg
add
add
inc
imul
push
cmp
adc
in
aaa
sbb
dec
mov
sbb
mov
stos
fwait
and
inc
sub
mov
sub
out
je
popa
cli
cdq
dec
sub
xor
mov
cmp
into
push
cs
lock
inc
dec
pop
adc
inc
or
test
or
les
inc
in
xchg
mov
sbb
(bad)
adc
out
xlat
inc
ins
inc
dec
adc
retf
call
and
inc
scas
sbb
jmp
jb
push
xlat
stos
cwde
out
fistp
xchg
pop
fisttp
stos
pop
mov
fist
mov
fdivr
shr
loop
(bad)
nop
ins
push
leave
or
sbb
shr
xor
mov
mov
mov
ins
adc
add
sar
jns
jae
test
inc
mov
mov
jp
fcmovnu
jmp
in
daa
popf
(bad)
mov
dec
mov
adc
in
mov
xor
imul
inc
push
aaa
mov
movs
outs
jbe
sbb
mov
pop
fild
dec
inc
mov
hlt
and
xlat
in
sub
push
push
fistp
cs
imul
xor
call
push
mov
or
xchg
add
xor
pop
outs
adc
aaa
outs
and
cli
push
mov
out
mov
push
(bad)
fisttp
xchg
xchg
test
jns
dec
push
fild
loopne
jns
sbb
mov
mov
adc
iret
ror
pop
pop
(bad)
xor
xor
stos
iret
(bad)
lahf
mov
scas
addr16
and
pop
out
jg
jge
push
ins
xchg
jp
mov
sbb
push
jns
cdq
shl
sbb
in
mov
out
shl
dec
addr16
mov
dec
ror
in
lock
mov
retf
jbe
lods
cmp
sbb
dec
jae
pusha
daa
repz
adc
sti
or
cli
inc
clc
xchg
lods
faddp
pop
cs
addr16
outs
ds
push
js
mov
or
hlt
push
jle
fisub
mov
add
(bad)
fdiv
les
jb
call
std
rcr
pop
les
aaa
dec
jmp
and
pop
call
mov
jecxz
scas
ret
push
dec
push
(bad)
cmps
push
clc
das
inc
inc
or
fldenv
retf
enter
jge
adc
scas
sar
adc
mov
sub
arpl
inc
pop
gs
fisubr
ret
js
or
adc
es
rcl
mov
lock
das
fdivr
cli
mov
mov
xchg
(bad)
mov
scas
jo
adc
imul
add
outs
adc
sbb
aas
mov
bound
rol
loop
ins
jmp
fsub
iret
je
arpl
mov
movs
imul
pop
cmp
push
jg
or
das
pop
mov
test
inc
dec
mov
jmp
xor
ret
loop
mov
mov
fadd
mov
jg
(bad)
pop
std
push
sti
mov
and
sub
stos
mov
fsubr
(bad)
mov
out
aam
and
cwde
push
inc
jmp
sub
cmp
icebp
mov
adc
outs
jl
movs
mov
out
or
es
mov
cmp
sbb
aas
arpl
fs
sub
out
mov
and
mov
pop
sub
out
mov
cli
rcl
outs
cmp
pop
nop
stos
fdiv
loopne
mov
pop
jbe
xlat
mov
xor
jl
test
stos
out
movs
xor
sbb
stos
jp
pop
sub
gs
sbb
push
cmp
jns
jbe
adc
adc
pop
std
dec
sbb
push
fld
movs
xor
add
es
push
clc
outs
clc
aaa
test
idiv
xor
push
cmp
scas
add
and
pop
adc
and
xor
lea
es
lods
sub
jae
mov
mov
mov
or
jae
push
std
fs
or
test
(bad)
dec
jns
repz
inc
xchg
mov
arpl
mov
inc
imul
mov
dec
cmp
movs
sub
push
inc
in
mov
push
mov
add
movs
cdq
mov
retf
mov
scas
mov
fidiv
daa
jb
call
je
neg
cli
inc
enter
cmp
sti
pop
mov
cmp
mov
fwait
test
adc
or
mov
test
cmp
(bad)
outs
in
in
clc
lods
movs
fistp
mov
jmp
jb
arpl
xchg
inc
mov
inc
fcmovu
js
pop
push
pop
gs
cmp
jmp
scas
shr
lahf
leave
xor
retf
inc
sub
arpl
daa
shl
sti
mov
mov
jb
inc
(bad)
out
pop
in
adc
es
sar
or
sub
jbe
lock
mov
xchg
sub
mov
push
jns
es
rcr
or
imul
shl
or
inc
mov
jle
xor
mov
push
ss
adc
push
cmp
and
arpl
lea
xchg
adc
adc
ja
jge
repz
ret
enter
out
cmps
cmp
jecxz
push
sbb
jnp
test
sbb
loope
shl
dec
retf
out
sub
test
lods
sub
jle
or
ret
sub
or
and
pop
mov
mov
rol
jl
mov
pop
xor
mov
mov
pop
out
and
stos
xlat
in
(bad)
xlat
push
jmp
adc
das
or
(bad)
adc
pop
shr
mov
push
xlat
ss
in
loopne
sub
outs
xchg
daa
(bad)
pcmpgtb
adc
retf
(bad)
pop
and
std
inc
push
lea
push
mov
enter
call
xchg
out
cdq
cmp
jmp
push
adc
sub
fisubr
xor
and
inc
jg
inc
jbe
adc
xor
inc
jo
mov
enter
cmp
dec
push
mov
jae
inc
call
enter
adc
repz
dec
test
shl
sbb
mov
mov
mov
mov
adc
outs
in
enter
jne
loope
sbb
test
add
inc
jmp
or
mov
outs
pop
int
les
not
sub
stos
(bad)
fisub
mov
xor
mov
fldcw
cmp
sub
adc
mov
arpl
pop
mov
bound
test
cmps
mov
mov
and
mov
push
pop
jo
inc
xchg
adc
bound
(bad)
push
int3
sbb
ret
das
push
pop
ins
rol
and
xor
adc
ret
mov
enter
fadd
inc
addr16
pop
jbe
xor
aad
pop
sbb
in
fcom
push
ror
test
cli
mov
mov
mov
iret
std
cmps
mov
adc
or
push
outs
push
rcl
rcl
adc
sahf
jmp
mov
nop
je
sti
repnz
add
not
leave
bound
xchg
mov
fsub
inc
dec
movs
int
sub
je
adc
mov
add
jb
out
and
sub
mov
repz
(bad)
mov
ret
test
scas
jae
loop
cmc
inc
adc
mov
cmc
push
out
mov
mov
inc
add
inc
int3
jge
popa
sbb
xor
int
cmp
ror
push
dec
int
repz
mov
mov
cwde
scas
stos
push
jmp
jp
or
lock
inc
jnp
sbb
scas
aad
add
cmp
mov
mov
xchg
mov
sbb
push
test
dec
lods
cli
test
mov
dec
lods
xor
retf
adc
leave
ds
test
xor
fisttp
adc
add
icebp
jmp
hlt
mul
sbb
les
jae
mov
aas
shr
mov
push
cli
rcl
ret
jle
xlat
movs
push
adc
sub
inc
pop
jp
dec
sub
mov
adc
jbe
iret
add
rcl
mov
sbb
in
sbb
pop
lock
or
mov
popf
pop
add
fwait
ja
out
mov
sub
and
mov
sbb
xor
inc
pop
pop
or
xchg
jmp
sbb
jp
mov
test
and
pop
es
add
rcl
pusha
(bad)
sbb
rep
push
add
sub
call
les
mov
bound
imul
push
fldcw
out
sbb
push
xchg
lock
(bad)
mov
jecxz
hlt
and
push
retf
jnp
inc
test
xchg
in
lds
xor
imul
js
cmps
xchg
push
push
loop
(bad)
cmp
inc
add
mov
mov
daa
xlat
scas
mov
sbb
call
call
lds
cmp
push
sub
iret
nop
jbe
bound
mov
inc
outs
ret
sbb
mov
stos
adc
xchg
cmp
add
sub
inc
push
xor
or
adc
les
xchg
mov
shl
mov
inc
cli
and
mov
test
jecxz
out
rcr
ja
xchg
sub
jbe
cmp
and
push
ja
repnz
sub
addr16
js
stc
pop
xchg
jl
inc
pop
mov
adc
jmp
out
inc
(bad)
jg
mov
out
(bad)
aam
mov
pop
add
arpl
sbb
shl
sti
jmp
leave
add
jnp
daa
xor
dec
sbb
ficom
mov
iret
adc
outs
xlat
mov
cli
sub
or
xor
in
and
adc
mov
loop
mov
jecxz
mov
ret
pop
je
push
cmp
dec
fdiv
cmp
nop
nop
add
leave
cmp
inc
sbb
jnp
xor
nop
push
lods
cwde
sub
xchg
es
xchg
pop
mov
xchg
jb
cmps
push
lock
ss
rol
jecxz
arpl
sbb
cmp
and
jbe
and
mov
das
stc
and
or
xchg
mov
and
jmp
in
into
pop
dec
pop
sbb
in
jp
push
mov
stos
fisub
clc
out
adc
jbe
cdq
add
arpl
add
jl
push
sbb
push
jno
mov
fldenv
rol
pop
out
neg
sub
add
mov
inc
fld
daa
mov
rol
ffree
xchg
cli
mov
add
and
xor
jo
xor
add
bound
rcl
outs
sbb
cmp
cdq
jp
inc
xor
fbstp
shr
mov
rol
or
xchg
jg
cmp
test
jmp
mov
rcl
dec
xor
out
inc
test
fwait
daa
xchg
mov
pushf
sbb
mov
fstp
ja
bound
popa
cmp
shl
add
inc
xor
and
push
loop
repnz
xor
pop
in
and
shl
xchg
scas
xchg
and
test
cli
xchg
ret
iret
mov
xchg
test
pushf
push
mov
lahf
xchg
inc
inc
cmp
enter
sbb
sbb
call
push
and
or
push
jle
iret
sti
or
xchg
ins
mov
or
adc
adc
lods
js
sar
ret
ins
loopne
and
inc
stc
lea
daa
in
aaa
push
dec
pop
into
enter
inc
sti
mov
rcl
sub
cdq
cmc
sbb
scas
sbb
ret
xor
call
enter
shr
rol
pop
dec
lock
adc
xchg
jl
aas
inc
or
aad
push
sbb
push
inc
dec
xor
daa
push
icebp
sbb
enter
scas
fisubr
sbb
sbb
mov
pop
fcom
pop
pop
dec
sub
cmps
jo
mov
(bad)
clc
inc
add
xchg
test
inc
dec
out
cmp
or
shr
int3
(bad)
add
aas
jecxz
cwde
inc
xchg
call
cmp
(bad)
push
jno
or
mov
stos
and
add
push
iret
mov
mov
gs
add
rcl
addr16
fbstp
(bad)
mov
sub
bound
cmp
mov
sbb
test
fiadd
test
fstp
sbb
sbb
push
sub
xchg
imul
retf
adc
fsub
xor
je
movs
rcr
les
pop
adc
pop
call
jmp
pop
xchg
jb
push
retf
and
sub
or
push
or
lea
retf
inc
jmp
dec
mov
cmc
dec
aaa
xchg
adc
aam
add
js
jmp
scas
mov
xchg
ja
and
mov
add
or
inc
imul
cs
out
fcomp
aaa
repnz
dec
sub
int
push
sub
fxch
mov
dec
(bad)
sti
jge
cmp
dec
xor
sbb
jae
push
adc
test
inc
add
dec
ret
push
in
cwde
add
imul
das
dec
out
sbb
(bad)
mov
xchg
jp
sub
sub
jns
lods
push
cdq
dec
add
aad
retf
mov
inc
fdivp
mov
mov
fst
(bad)
iret
jmp
adc
arpl
mov
jge
xor
(bad)
inc
popf
or
aas
or
xor
daa
ret
stc
pop
(bad)
jecxz
xor
int
sub
sub
cmp
aam
inc
add
retf
jb
inc
mov
xchg
sub
add
dec
inc
es
addr16
and
push
test
dec
dec
xchg
jno
push
(bad)
fwait
and
sbb
adc
adc
mov
mov
cmps
fsub
addr16
xor
shl
idiv
movs
mov
mov
cmp
in
fsubr
mov
sub
icebp
push
scas
ds
inc
fwait
mov
dec
pop
cli
dec
mov
jo
dec
retf
cmp
sub
cmp
sahf
pop
call
dec
add
pop
push
repnz
pop
jo
push
movs
rcl
pop
and
sub
xor
lods
bound
mov
mov
inc
xchg
add
cdq
jnp
pop
clc
into
es
call
and
or
scas
fcmovnb
pop
int3
imul
add
stos
push
rol
inc
js
mov
mov
dec
dec
imul
lahf
jb
sub
dec
dec
lock
std
icebp
mov
push
lods
push
(bad)
inc
inc
stos
xchg
sbb
loop
adc
xchg
ss
(bad)
jmp
lea
dec
sub
jmp
mov
inc
shl
aad
retf
inc
ffreep
jmp
stos
sbb
test
jmp
add
call
pop
push
leave
cmp
in
adc
add
xor
inc
icebp
mov
or
sbb
cmp
(bad)
cmp
lock
and
sbb
pop
repnz
cdq
pop
je
fstp
aaa
fdivr
nop
sub
dec
xchg
push
aad
pop
scas
mov
mov
cmp
dec
inc
fiadd
inc
into
push
lods
and
push
retf
dec
jecxz
mov
add
push
xor
jg
adc
cs
xor
mov
mov
or
xchg
in
mov
shl
scas
xlat
out
cmp
cli
in
mov
jg
or
inc
fcmovbe
out
inc
add
mov
dec
iret
pusha
jae
xchg
jp
imul
cs
or
pop
fist
inc
enter
add
cmp
cmps
lock
inc
add
pop
mov
repnz
call
pop
pop
arpl
int
cli
sbb
popa
mov
inc
into
dec
stos
mov
jle
xor
jno
jo
arpl
xor
and
out
ret
mov
dec
push
test
adc
inc
fild
mov
jmp
arpl
sahf
test
jg
pop
or
ret
push
or
(bad)
mov
stos
cmp
or
int3
inc
shl
adc
fs
push
addr16
pop
out
hlt
cli
outs
sub
repnz
xchg
inc
cwde
or
add
jne
dec
scas
adc
iret
xor
sub
pop
mov
icebp
loope
jnp
out
inc
cmp
fcom
test
jecxz
dec
mov
adc
jb
jecxz
int3
push
jbe
fwait
in
cmp
inc
adc
(bad)
(bad)
cli
xor
in
mov
loopne
jmp
mov
pop
pop
jecxz
push
mov
inc
mov
pop
dec
jo
(bad)
rcr
push
rcr
mov
pop
mov
repnz
inc
neg
loope
stos
sbb
mov
pop
mov
es
xor
mov
mov
imul
cmps
push
xor
sub
jmp
movs
pop
add
stos
mov
outs
inc
loope
mov
outs
mov
mov
adc
cs
xor
stos
rdpmc
mov
sbb
pop
cwde
sbb
adc
inc
fnstcw
call
mov
outs
xor
xor
xchg
add
sub
mov
sbb
int3
imul
dec
dec
add
xchg
jmp
repnz
adc
(bad)
pop
inc
hlt
cld
(bad)
sahf
push
jb
repz
(bad)
inc
repz
(bad)
(bad)
dec
dec
inc
aaa
mov
call
repz
sbb
imul
loop
fmul
mov
and
inc
imul
out
lods
(bad)
sub
(bad)
xor
loopne
pop
mov
or
inc
cwde
ret
test
sbb
cmp
imul
in
mov
arpl
dec
in
jmp
int
nop
add
sti
movs
mov
mov
mul
adc
and
fisubr
stos
ja
inc
and
push
sahf
inc
cmp
or
cli
xor
mov
sub
std
jg
adc
mov
icebp
dec
fwait
adc
leave
jnp
mov
and
arpl
inc
pop
mov
xchg
inc
sub
enter
sub
inc
pop
pop
repnz
jl
cli
or
jns
add
ror
mov
movs
jp
pop
xchg
sub
loope
ja
lds
xchg
es
push
xchg
cli
sbb
sub
adc
push
ret
movs
adc
dec
jns
fcomp
fnstenv
clc
push
xlat
lock
dec
aad
mov
and
xor
jmp
inc
leave
or
add
sbb
fnstenv
jnp
cmp
sahf
xchg
pop
stc
jmp
call
loope
ret
adc
dec
sub
jno
adc
pop
pusha
int3
arpl
cmc
jmp
adc
outs
push
test
jg
ins
outs
mov
mov
xchg
ret
push
in
fs
test
stc
mov
mov
(bad)
int3
int3
bound
mov
cmc
pop
mov
mov
and
dec
popf
adc
sbb
mov
cmp
or
(bad)
dec
or
sbb
jnp
shr
into
pusha
jmp
cwde
popa
retf
xor
xor
ret
push
jmp
arpl
lea
js
jbe
shr
inc
and
add
jbe
xor
push
(bad)
imul
call
inc
or
add
adc
dec
jmp
mov
nop
inc
cdq
mov
push
leave
dec
jecxz
mov
in
es
scas
or
xchg
in
mov
push
jge
mov
or
jns
imul
addr16
int
bound
or
add
xchg
sub
arpl
xchg
mov
in
xchg
int3
(bad)
push
xchg
dec
les
fist
neg
xor
(bad)
shl
and
sbb
pop
lds
cmp
out
sar
cmc
xchg
dec
sub
cdq
cli
or
ret
adc
mov
adc
sbb
call
pop
(bad)
push
jg
jnp
call
sbb
adc
ins
repz
lods
aam
or
cmp
outs
loopne
aas
test
fucomip
(bad)
retf
push
or
inc
jmp
sub
xchg
aam
dec
mov
mov
shr
int3
xor
(bad)
out
adc
sar
mov
das
pop
add
xchg
dec
add
inc
aaa
out
setnp
ret
movs
push
and
imul
pop
fimul
(bad)
lock
lods
jecxz
mov
sbb
shr
mov
stos
pop
ret
test
cli
sar
jb
pop
mov
rol
in
push
sbb
jbe
clc
(bad)
sbb
or
ror
or
xchg
in
shl
jge
xchg
out
mov
jle
cmp
mov
not
push
stc
or
and
fdivrp
fs
sar
sbb
or
cmp
cmp
test
xor
in
xor
inc
pop
scas
pop
push
leave
call
push
jns
cmp
loope
arpl
mov
jecxz
out
mov
fstp
or
lock
cmp
(bad)
fwait
movs
mov
jg
jno
fnsave
mov
sti
adc
jmp
lds
cld
stos
mov
dec
inc
imul
inc
xchg
mov
cmp
xchg
mov
aas
ficom
ret
ja
shl
xor
jg
and
jp
cld
fsub
adc
jecxz
inc
dec
sbb
or
jmp
inc
ins
inc
pop
xor
sbb
(bad)
cmp
rcl
ja
rcr
test
mov
shr
push
mov
loopne
or
dec
iret
cmc
pop
mov
jno
add
movs
jb
dec
mov
(bad)
stos
xchg
ins
daa
mov
jae
sbb
addr16
sti
pop
ja
push
adc
push
inc
imul
in
test
enter
xchg
inc
xor
dec
js
int3
scas
or
(bad)
cmp
mov
ds
fdivr
dec
xchg
imul
in
std
and
jae
shl
mov
mov
stos
fwait
jecxz
rcl
inc
dec
xchg
mov
and
or
xchg
mov
mov
sbb
push
sti
lea
mov
mov
stos
daa
into
cmp
loop
fistp
push
jb
adc
push
(bad)
jbe
inc
dec
lods
jle
dec
movs
gs
cmp
push
retf
pop
(bad)
and
and
xchg
imul
in
and
push
mov
push
sti
retf
push
outs
jo
ss
adc
imul
cmp
scas
stos
sub
fimul
cs
retf
inc
loope
mov
test
pushf
adc
stc
cmp
lock
test
sbb
gs
(bad)
dec
fdivr
retf
sub
scas
mov
inc
lods
and
jmp
jns
add
enter
sbb
sar
cmp
movs
mov
mov
xchg
rcl
mov
dec
fstp
xchg
js
loope
lock
ror
pop
push
mov
test
cmc
push
call
mov
rol
push
popf
add
mov
test
pop
cmp
mov
push
bound
(bad)
iret
aas
ficom
adc
fwait
adc
inc
pop
or
mov
bound
repnz
repnz
ja
shl
and
stos
mov
mov
sub
imul
pop
mov
jb
jo
inc
(bad)
imul
xchg
mov
xchg
xchg
adc
lock
xor
dec
popa
jno
inc
fdivr
das
sbb
ja
add
jmp
shl
inc
mov
dec
in
icebp
mov
fist
stos
fcom
jo
push
fidivr
or
fidiv
mov
out
pusha
leave
inc
mov
sbb
dec
jge
and
fwait
sbb
mov
pop
inc
inc
adc
aaa
outs
or
jb
push
leave
fsubrp
mov
ror
rol
adc
jnp
mov
sbb
push
mov
loop
dec
sbb
data16
or
imul
adc
sbb
mov
mov
mov
wrmsr
mov
jae
dec
and
retf
rcl
mov
xor
xor
rcl
std
sahf
fidivr
jecxz
adc
mov
pop
ror
add
std
test
nop
test
mov
dec
iret
lock
adc
mov
les
movs
mov
inc
(bad)
xor
jg
imul
stos
pop
cmp
mov
jl
mov
jb
sub
sub
retf
imul
mov
test
sub
retf
dec
push
cmp
in
or
sub
loop
jge
push
lds
sub
stc
xlat
xchg
add
fidiv
fidiv
and
cmp
sub
or
repnz
sub
pop
sbb
push
shl
xor
mov
sub
pop
bnd
aam
push
xchg
or
arpl
xchg
pop
es
mov
sub
cwde
dec
sar
mov
bound
jne
das
test
add
ss
cmp
mov
push
or
sub
test
xchg
jp
les
dec
add
pop
outs
push
inc
imul
sub
and
mov
or
test
or
cs
add
add
pop
push
cmp
stos
test
repz
icebp
and
pop
mov
dec
(bad)
push
ret
cmp
nop
xchg
ror
test
push
fist
das
test
xor
push
jnp
lods
ins
dec
xchg
mov
xchg
jl
outs
rol
add
in
mov
outs
lods
jmp
es
xchg
ret
jp
sbb
popf
icebp
sti
and
retf
sub
mov
mov
in
ds
sub
mov
repnz
lds
fwait
or
dec
cld
sub
les
xlat
sbb
sar
mov
pop
rcr
mov
mov
imul
or
sbb
sub
and
inc
stos
mov
ret
repz
fdiv
pop
add
mov
test
fcom
gs
inc
imul
fiadd
(bad)
cmps
imul
call
fsub
pop
popa
inc
fmul
xor
sub
mov
and
cdq
add
add
dec
addr16
ret
add
dec
std
dec
mov
retf
(bad)
call
mov
jae
inc
lahf
pusha
retf
and
movs
les
fnstenv
push
jbe
nop
adc
fisubr
push
xchg
mov
mov
ins
jmp
and
test
and
jg
iret
dec
cmp
jae
xor
push
retf
std
es
mov
cmp
loope
cmc
jno
xor
cmp
in
and
jo
push
push
push
call
pop
sub
div
jmp
push
mov
and
push
sbb
or
sub
mov
push
sub
les
jnp
and
adc
sbb
clc
pop
cmc
fsave
push
sub
jge
mov
adc
aam
lds
sub
dec
xor
jmp
jne
call
ins
fsub
xor
ja
xor
out
inc
mov
scas
or
repz
push
(bad)
cmp
stc
por
repz
jb
mov
stc
push
shr
shr
fisttp
cmp
adc
xchg
mov
xlat
pop
xchg
add
in
add
inc
scas
fucomi
daa
sbb
jmp
xchg
mov
jns
adc
jbe
in
mov
jo
or
rcr
add
push
xchg
xor
xchg
mov
jle
sbb
sbb
jnp
jmp
jmp
daa
mov
mov
push
cmp
push
je
xchg
xchg
enter
in
sbb
(bad)
add
jge
cmp
sbb
imul
xchg
repnz
in
sbb
mov
cmp
js
(bad)
adc
sub
xchg
cli
xor
and
push
outs
repz
test
xchg
sub
lods
ins
sub
pop
mov
xor
mov
out
pop
out
or
add
enter
dec
mov
adc
cli
pop
xchg
mov
mov
cs
push
mov
dec
xchg
jmp
call
jns
adc
inc
scas
daa
cld
repz
into
xchg
fisttp
xor
jb
pusha
sub
mov
gs
mov
repz
fwait
into
and
out
mov
call
fwait
mov
imul
mov
adc
inc
push
inc
sbb
loopne
dec
jmp
mov
test
es
sahf
xor
data16
daa
test
inc
pop
mov
adc
cli
sbb
sar
cs
std
cmps
jl
xchg
(bad)
jae
cmps
daa
popa
lods
lea
in
hlt
fs
jne
aaa
mov
adc
jae
rcr
xor
inc
cmp
test
cli
inc
stos
gs
mov
lds
push
ss
sub
push
sbb
add
jmp
movs
call
adc
addr16
iret
fwait
add
movs
fnstsw
sbb
or
fld
pop
int
mov
pop
fucomi
fisub
repnz
shr
dec
sub
or
mov
mov
add
les
aad
sub
inc
adc
mov
lds
aaa
(bad)
jle
ss
in
jp
jmp
push
fs
retf
push
rol
jmp
stos
sub
mov
scas
sbb
add
repz
mov
mov
inc
cmp
fild
cwde
fcmovnbe
sbb
mov
int
js
enter
add
inc
xor
loop
dec
xlat
jecxz
outs
xchg
push
sbb
stos
jb
xchg
(bad)
cmc
jns
dec
dec
sub
mov
dec
loop
adc
mov
js
sub
mov
cmp
inc
aaa
test
cmp
adc
dec
pusha
mov
xchg
sub
lods
ror
fwait
mov
aam
jecxz
fiadd
dec
mov
push
dec
push
jge
pop
popa
jno
mov
fiadd
ds
dec
jmp
ret
sar
adc
mov
call
clc
mov
mov
dec
mov
inc
inc
ret
fisttp
push
mov
(bad)
lods
sbb
scas
int3
test
ja
fild
cmp
jp
mov
ss
cmp
stos
mov
push
mov
movs
bound
popf
sub
mov
mov
and
mov
retf
push
push
lds
in
push
pusha
xchg
adc
nop
in
mov
sbb
pop
in
jae
sub
or
xchg
scas
or
mov
call
pop
xor
xchg
inc
rcl
sub
sbb
adc
inc
retf
sbb
stc
mov
ror
push
movs
mov
pop
push
imul
mov
stos
les
aam
mov
imul
mov
es
test
leave
inc
retf
mov
jnp
(bad)
bound
pushw
shl
popf
push
xchg
mov
dec
adc
in
repnz
pushf
lea
or
fld
lods
repz
test
pop
rcl
test
xchg
jp
call
jg
jbe
sub
push
and
shr
sbb
pop
lahf
push
in
es
add
jb
ins
add
jp
retf
mov
inc
mov
mov
clc
add
sub
sub
xchg
mov
(bad)
mov
mov
cmps
mov
imul
sar
and
cmp
add
fadd
inc
mov
push
and
push
add
mov
and
mov
loopne
mov
nop
or
call
mov
mov
(bad)
mov
cmps
arpl
outs
push
loope
sbb
int
inc
sub
pusha
fsubrp
shl
inc
fidiv
adc
sti
arpl
std
loope
pop
pop
loope
inc
mov
ret
jae
(bad)
ficom
add
and
or
pop
mov
xor
push
(bad)
lods
push
loopne
(bad)
adc
fistp
shl
cmp
popa
mov
popa
movs
mov
sub
ins
ins
xor
aaa
dec
push
popa
xchg
or
call
(bad)
test
dec
sti
dec
rcl
stos
repnz
sub
icebp
xor
fwait
cwde
or
mov
mov
mov
fcom
mov
push
pop
cmps
push
cwde
iret
mov
add
jae
scas
sbb
daa
fild
bound
and
jmp
(bad)
out
and
pop
jnp
inc
xlat
mov
rcl
sti
call
(bad)
jl
test
out
jmp
sub
pop
out
test
jns
fs
sbb
cmp
fld
dec
push
mov
sub
add
in
rcr
and
cmps
out
pop
rol
imul
xchg
adc
outs
xor
movs
push
adc
add
rol
call
jb
inc
adc
xor
mov
cli
enter
std
shl
xor
jnp
lods
daa
pop
add
sbb
test
mov
loop
leave
push
les
fstp
add
xchg
sahf
and
scas
pop
mov
bound
inc
jnp
pop
movs
lods
pop
stos
jg
or
push
jle
test
icebp
dec
(bad)
stos
cmc
xor
push
mov
call
mov
jl
pushf
ins
outs
xchg
int
jmp
out
retf
jle
outs
jmp
jns
sub
pop
adc
loop
dec
repz
mov
call
idiv
in
ss
lods
mov
jmp
adc
push
adc
dec
adc
mov
dec
arpl
fist
mov
jb
pop
cli
push
clc
pop
out
dec
mov
aad
jns
lahf
dec
in
add
bnd
faddp
int
arpl
popf
add
mov
in
(bad)
jecxz
mov
xchg
fisub
shl
movs
mov
out
mul
pop
in
cmp
sbb
jmp
jecxz
push
lods
pop
and
push
and
jl
adc
push
in
jecxz
push
or
mov
stos
int
sub
add
mov
xor
push
ret
push
push
inc
fimul
daa
repz
mov
fidivr
mov
or
cmp
repz
imul
jnp
jmp
xchg
aas
pusha
mov
test
fcomp
fnsave
dec
jae
dec
jmp
fwait
xchg
aad
or
mov
push
sub
sub
lea
or
pop
into
es
pop
jp
ins
jne
lock
xchg
int3
hlt
adc
adc
test
jnp
add
ror
daa
jmp
jecxz
dec
pop
fisub
mov
(bad)
cmp
int3
into
iret
add
popa
repz
test
inc
nop
ja
jmp
mov
xor
icebp
mov
dec
in
rcl
inc
and
repnz
jle
cld
or
je
mov
push
dec
push
sti
add
or
push
sbb
arpl
and
arpl
jno
xchg
sbb
out
(bad)
shl
ret
xor
or
adc
imul
cmps
sbb
inc
sti
dec
xchg
jb
cdq
test
jmp
ds
and
rcr
cmps
dec
mov
push
imul
add
sti
mov
inc
sbb
mov
pop
mov
sbb
jb
ins
add
xor
mov
ret
loopne
push
cdq
add
add
pop
shr
ss
movs
mov
(bad)
dec
push
xor
cmp
mov
xchg
cmp
push
mov
cmp
call
rol
xor
sub
rep
mov
sbb
pop
rol
test
pop
jp
ins
jo
jecxz
pop
fisubr
out
xor
popf
outs
je
cmps
rcr
out
shl
xchg
push
lahf
mov
movs
jb
mov
lahf
cmc
sbb
mov
fldenv
mov
leave
into
call
mov
sti
xchg
mov
mov
mov
loope
aam
jl
pop
add
cmp
(bad)
and
mov
sbb
stos
ret
cmp
call
imul
inc
xchg
mov
mov
pop
rcr
sti
push
icebp
outs
mov
out
mov
or
inc
mov
fcomi
mov
xor
sub
xor
ret
mov
xchg
js
test
mov
gs
mov
and
jp
fs
mov
and
jae
xchg
jnp
pusha
add
jbe
mov
out
cmps
push
pop
or
bound
xchg
push
jbe
and
xor
scas
jmp
enter
pop
dec
cmp
mov
rcl
sbb
cmps
xor
push
pop
ins
mov
inc
xlat
dec
fidivr
cmps
push
nop
xchg
push
sub
pcmpgtb
push
mov
jmp
xor
add
daa
stos
xor
rcr
int3
je
inc
cmps
sub
mov
mov
and
mov
xchg
in
adc
(bad)
xchg
sbb
in
ret
bound
mov
jmp
rcr
cli
xor
js
(bad)
movs
sbb
mov
repnz
ss
ss
mov
jecxz
daa
repz
jg
push
shl
mov
inc
pop
push
and
mov
jb
cmps
mov
rcr
mov
ds
and
stos
ror
xchg
cld
push
into
ret
mov
or
data16
shr
cmp
pop
push
ficom
movs
sahf
push
out
and
fstp
outs
lods
xor
retf
pop
cmp
push
retf
mov
pop
stos
fs
cmps
inc
out
inc
popf
in
arpl
adc
sbb
pop
xor
iret
mov
dec
dec
cmp
jbe
(bad)
neg
mov
mov
fist
pop
push
pop
push
retf
sti
jns
sbb
mov
loop
in
(bad)
out
dec
lds
jbe
loop
mov
mov
mov
lock
pop
dec
std
dec
mov
jp
lea
sub
and
mov
jmp
push
pop
int3
sub
push
aaa
jbe
mov
jp
call
or
std
mov
iretw
addr16
test
mov
push
jne
jp
pop
mov
xor
clc
dec
fwait
mov
jo
or
loope
cli
mov
ja
cli
lds
mov
dec
test
mov
sub
mov
int3
inc
call
in
outs
fdivr
push
aas
pop
jle
jge
leave
xchg
lea
push
call
and
repnz
dec
cmp
int
mov
sub
jmp
jl
or
test
(bad)
mov
bound
jo
(bad)
retf
xor
rcl
loopne
dec
das
loop
daa
pop
sub
or
jmp
inc
in
stos
fs
push
cld
mov
retf
nop
cwde
fcomp
pop
loop
adc
jl
xor
cwde
stos
imul
pop
mov
mov
lahf
jp
loope
or
sbb
jae
icebp
bound
and
repz
jb
nop
(bad)
bound
sar
out
xor
stc
lahf
mov
sub
add
loopne
pushf
pop
dec
repz
add
sbb
and
xor
aad
xor
push
sahf
push
mov
xor
xlat
ja
rsqrtps
into
sbb
rol
sbb
inc
mov
and
push
stos
pop
push
adc
jnp
sub
in
inc
sub
add
(bad)
sbb
cmp
ret
mov
ret
mov
lods
loop
cmp
jmp
sub
or
pop
add
int3
sti
ret
idiv
lea
hlt
jae
mov
jae
icebp
jbe
stc
sbb
shr
in
dec
mov
or
js
jne
cmc
lods
inc
xchg
dec
inc
pop
outs
ret
int
mov
mov
gs
jp
cdq
push
xor
add
gs
daa
test
shl
stos
mov
dec
repz
lea
add
fs
shl
mov
cmp
in
popa
call
push
repnz
call
sub
in
pop
jecxz
fnstsw
sahf
fwait
imul
xor
adc
mov
adc
mov
cmp
js
adc
dec
push
push
sti
jmp
jp
or
add
(bad)
mov
imul
cmp
pusha
mov
inc
retw
lock
inc
pop
aam
arpl
jo
mov
cmps
ret
aad
sub
leave
jp
mov
(bad)
mov
loop
popa
movs
sub
les
icebp
and
and
sub
shl
movs
dec
mov
jge
xchg
data16
push
sbb
pop
or
xchg
jecxz
mov
or
call
stc
mov
add
jmp
push
cs
push
icebp
loop
push
add
enterw
add
mov
jge
cdq
jl
cs
xor
cmp
pop
cld
inc
call
xchg
pop
(bad)
push
mov
fwait
data16
xchg
in
aam
out
inc
inc
div
jecxz
mov
cwde
mov
adc
inc
sbb
sub
js
repnz
xchg
sbb
retf
xchg
push
stos
adc
cmp
jp
push
mov
xor
pop
jne
xor
ror
push
add
and
dec
les
sbb
cdq
call
aas
pop
mov
pop
or
imul
mov
mov
daa
shl
cmps
sub
or
jo
and
test
fcom
xchg
jno
pop
cmp
jecxz
addr16
xor
fs
adc
adc
loope
or
retf
pop
stos
iret
call
mov
xor
mov
fs
lahf
mov
ficomp
mov
shr
adc
inc
or
mov
fisttp
pop
mov
call
push
in
and
mov
clc
arpl
enter
sub
mov
loopne
push
cld
pop
mov
add
imul
in
add
jg
cld
pop
icebp
ficomp
mov
rcl
int3
jecxz
leave
test
pop
add
mov
or
ja
fisub
sbb
outs
(bad)
dec
xchg
sbb
movs
inc
xor
repz
fisubr
xor
xchg
pop
push
cld
outs
cmp
(bad)
in
mov
add
outs
stos
pop
jge
xor
lods
cmp
fisttp
cmp
loop
xor
dec
into
and
sbb
push
imul
aad
adc
xchg
xchg
sbb
push
dec
repz
leave
(bad)
cmp
jmp
rcl
xor
pop
sub
mov
stos
cmp
jmp
std
les
dec
fcomip
adc
adc
inc
push
pop
xor
jne
xor
xchg
pop
jmp
jecxz
cmp
add
xchg
add
xor
sub
adc
push
and
clc
sbb
sbb
and
dec
fst
in
or
dec
mov
jnp
mov
retf
ins
jmp
lods
jns
mov
mov
push
ret
sub
pop
add
mov
sub
inc
mov
cli
mov
pop
add
inc
mov
addr16
cmp
jae
popa
lock
test
jb
(bad)
push
adc
cmp
sbb
mov
outs
aaa
mov
pop
mov
movs
inc
jecxz
dec
js
lods
push
dec
and
fmul
mov
inc
stos
xor
pop
in
add
pop
push
or
jmp
mov
lods
inc
in
test
sbb
mov
dec
std
and
xor
call
sub
xor
sub
jmp
fnstenv
mov
push
call
cld
push
jle
pop
imul
leave
imul
pop
mov
cli
dec
mov
ins
ins
cdq
pop
call
jae
(bad)
cli
cwde
xor
jo
pop
rcr
sub
repz
scas
push
and
outs
(bad)
mov
inc
dec
push
int
adc
cmp
mov
int3
in
enter
xor
cs
movs
jns
dec
pop
dec
(bad)
sub
or
inc
lods
jp
mov
mov
sbb
mov
push
mov
cmp
jg
add
fwait
int
xchg
sbb
xor
test
dec
hlt
addr16
jmp
jmp
call
jmp
fwait
stc
xor
jecxz
mov
pop
test
das
shr
test
ss
fs
cmp
push
aam
(bad)
pop
dec
rol
in
dec
adc
sar
adc
dec
ins
loopne
mov
test
add
xor
pop
pop
sbb
in
fistp
iret
int
fstp
mov
std
inc
xor
inc
retf
iret
or
dec
push
xchg
xchg
mov
neg
dec
test
rol
sar
sub
aaa
mov
ficom
and
and
dec
mov
loop
div
or
ds
xchg
ds
ins
push
lahf
mov
dec
sub
jp
pop
out
ret
(bad)
sub
push
cmps
test
sbb
mov
bound
emms
push
fidiv
cld
add
mov
loop
hlt
aas
mov
shl
sti
mov
or
sbb
jmp
mov
inc
add
(bad)
mov
or
dec
loop
cmp
adc
(bad)
sbb
test
sub
and
cmp
xchg
ss
mov
sub
sbb
mov
jmp
push
mov
scas
push
inc
or
jmp
call
(bad)
in
mov
dec
ficomp
pusha
push
jcxz
icebp
add
jae
ret
add
outs
adc
jp
leave
sar
mov
call
aaa
retf
imul
aaa
cld
pop
out
cld
push
leave
jle
xor
icebp
mov
aam
mov
mov
inc
imul
pop
sbb
mov
test
imul
mov
outs
and
sbb
xchg
adc
mov
add
mov
iret
jge
push
mov
sub
pop
jp
stos
scas
dec
out
inc
aam
test
mov
cmp
ret
scas
xor
je
add
movs
ins
lods
pop
mov
enter
loop
shl
sub
addr16
sub
test
mov
nop
mov
ret
fisubr
jmp
call
popf
ret
xchg
jmp
call
in
mov
enter
sti
add
or
lock
and
sahf
fiadd
scas
daa
adc
sti
sbb
in
mov
fwait
mov
pop
jecxz
jb
xchg
sbb
adc
ja
movs
jo
pop
pop
mov
push
pop
jo
mov
pop
fisttp
xchg
add
(bad)
jmp
jp
pop
aam
pop
add
pop
scas
cli
sbb
lds
dec
scas
jecxz
ror
sbb
repnz
call
xor
pop
push
jl
inc
add
in
xchg
enter
stos
popa
fist
loope
or
sbb
jo
pop
xor
xchg
xor
pop
inc
push
jo
ror
std
dec
sub
pushf
shl
adc
bound
sub
cmps
cli
push
(bad)
repz
add
xlat
adc
aad
mov
jmp
push
pop
mov
cmp
rep
stos
adc
lds
lahf
ret
push
jb
sbb
mov
xor
xchg
push
sar
dec
adc
(bad)
dec
ror
rol
lods
div
imul
adc
ins
push
mov
or
and
xlat
xor
mov
out
inc
mov
stos
inc
mov
add
cmp
(bad)
cli
inc
mov
and
shr
dec
fs
jp
push
clc
ror
leave
mov
push
xor
sbb
daa
aam
fnstcw
gs
adc
fwait
sub
adc
push
daa
popf
rcr
add
cmp
or
out
mov
repnz
popa
pop
loope
mov
out
(bad)
neg
mov
xchg
mov
and
daa
mov
dec
cmp
jp
push
add
xlat
pushf
or
clc
inc
mov
pmuludq
stos
mov
pop
mov
int3
aas
jle
test
xchg
and
mov
mov
add
out
push
mov
push
arpl
fistp
and
jecxz
js
inc
in
fist
stos
clc
mov
int
dec
jmp
xchg
mov
add
dec
je
lds
cli
rep
push
fwait
add
adc
mov
cmp
loopne
xor
sub
cmp
mov
fisttp
cmc
jne
push
or
popf
lfs
out
pushf
(bad)
ins
sub
fimul
dec
push
pusha
out
ret
xchg
push
xor
loope
jg
in
mov
mov
mov
pop
add
xchg
jmp
cmp
jmp
(bad)
div
cmp
push
mov
sub
bound
call
gs
lods
arpl
fimul
shl
xchg
inc
add
retf
data16
mov
out
sub
push
add
inc
js
xor
jae
push
inc
jp
rcr
mov
push
and
or
pop
sar
xor
fimul
fwait
xor
call
outs
sub
xchg
inc
jecxz
xor
mov
and
add
mov
mov
pop
scas
in
adc
sbb
mov
sub
cli
add
jbe
jnp
jns
pop
or
ins
sbb
icebp
mov
add
mov
mov
(bad)
mov
aas
xor
cli
jecxz
stos
cli
push
outs
and
mov
pop
mov
pop
jge
sub
mov
pusha
and
mov
retf
lods
retf
int3
sbb
sub
repz
mov
push
mov
int3
and
retf
dec
jmp
aad
adc
fucom
retf
popf
call
mov
pop
scas
iret
out
ror
mov
ja
das
js
imul
inc
fcomp
bound
or
mov
idiv
ja
dec
cmc
retf
test
xchg
rcr
enter
pop
clc
add
dec
aas
mov
shr
stos
mov
and
fwait
mov
xchg
dec
xor
arpl
mov
aad
fs
iret
push
out
push
xchg
add
cmp
jmp
or
cmp
retf
push
outs
or
lahf
sbb
data16
cli
stos
lock
popa
jg
add
xor
stc
repnz
jns
add
pop
icebp
ret
ins
lock
dec
les
push
ficom
or
aam
jmp
and
jp
repnz
mov
jl
sub
or
bound
lock
jnp
or
pop
and
scas
inc
mov
cwde
mov
(bad)
inc
jo
dec
ret
scas
jecxz
xor
dec
popa
iret
sub
push
xor
push
mov
xchg
adc
cmp
retf
jmp
lea
sub
int
ficomp
sub
add
(bad)
mov
seto
mov
clc
cmps
mov
jne
lods
cli
fild
fst
jbe
add
inc
xor
dec
sbb
cmp
out
stos
mov
add
jge
dec
adc
add
test
cmp
out
ss
or
mov
test
mov
clc
and
or
and
test
stos
(bad)
sbb
aas
or
sbb
or
stos
dec
out
xor
mov
dec
push
adc
mov
fs
addr16
popf
popf
jge
push
xor
jno
mov
pop
or
cmp
push
scas
dec
ins
dec
jecxz
(bad)
retf
jae
sbb
push
pop
repz
xlat
scas
and
mov
outs
add
mov
lahf
push
dec
test
mov
mov
xor
xchg
xchg
inc
or
mov
adc
inc
cld
push
jmp
call
dec
jnp
mov
fld
add
jmp
fwait
pop
inc
jle
push
mov
mov
cdq
inc
test
pop
jnp
leave
xor
pop
scas
aaa
add
aaa
and
js
sahf
jmp
neg
push
mov
pushf
adc
inc
and
fsub
aaa
ins
sub
inc
mov
clc
or
pop
ins
inc
adc
xchg
pop
mov
out
adc
ss
and
cmps
mov
shr
xchg
cmp
dec
push
into
popf
sub
and
jle
cmp
adc
mov
test
lock
add
sub
jl
inc
ficomp
scas
xor
mov
mov
ret
jnp
fcmovb
cmps
mov
test
fisttp
mov
and
movs
jb
ja
xchg
inc
or
mov
or
(bad)
push
outs
retf
pop
retf
arpl
adc
mov
mov
faddp
mov
fldcw
jl
or
in
bound
(bad)
das
jecxz
jge
adc
int
jle
arpl
inc
(bad)
xchg
adc
(bad)
push
sub
(bad)
mov
and
xor
ret
sub
push
cli
or
jl
mov
enter
jle
xor
inc
adc
cs
sub
or
ins
or
(bad)
loop
cmp
push
sbb
jbe
ret
adc
cli
retf
pusha
scas
sub
xchg
mov
ds
pop
lds
pop
outs
fstp
pop
enter
and
mov
sub
jecxz
rcr
mov
ret
jno
retf
ret
leave
ins
cmp
pop
add
or
mov
inc
out
jo
shl
fisub
daa
sub
daa
fistp
iret
and
jmp
jns
cmp
scas
es
sub
aaa
ins
jmp
(bad)
jmp
test
ret
mov
jecxz
pop
cmp
jmp
dec
les
xor
push
fld
retf
sbb
lods
push
cmp
in
(bad)
leave
stos
bound
xor
retf
jo
stos
xor
data16
cmp
jmp
or
pop
jmp
leave
jo
sahf
jg
(bad)
aas
xchg
adc
mov
and
mov
adc
jmp
fiadd
dec
xor
mov
call
push
cli
retf
mov
sbb
jmp
xor
movs
mov
mov
je
jbe
fs
mov
add
outs
push
add
xor
jno
or
mov
retf
imul
xchg
lahf
mov
fwait
jl
add
not
lahf
and
dec
push
mov
imul
arpl
inc
sti
and
mov
push
rcr
js
or
stc
sbb
icebp
push
and
or
mov
loopne
int
in
add
retf
xchg
idiv
loop
lea
jecxz
pop
(bad)
jns
sahf
adc
and
add
dec
test
sbb
sahf
xchg
mov
rcl
das
repz
mov
cmp
(bad)
sbb
ret
mov
cmc
jno
mov
mov
sbb
mov
xchg
dec
lds
mov
test
xchg
test
mov
loope
sbb
imul
inc
cmp
(bad)
outs
xlat
in
or
mov
mov
xor
mov
cmp
rol
div
or
aaa
push
aas
add
out
inc
xchg
sbb
aam
enter
shl
test
ret
idiv
sbb
mov
test
cmp
nop
inc
mov
push
or
fdivr
inc
enter
xor
add
nop
inc
push
test
retf
movs
add
int
mov
movs
xor
scas
ins
inc
push
dec
mov
pop
call
inc
jge
loope
shr
enter
mov
sbb
loopne
ret
or
sbb
or
jmp
add
mov
shl
mov
pop
sbb
pop
sub
outs
pop
mov
(bad)
(bad)
jle
and
mov
fistp
xchg
jb
pop
adc
gs
inc
mov
jecxz
(bad)
imul
add
cmp
repnz
mov
cmp
into
jo
icebp
js
fld
pop
adc
std
push
sbb
sti
test
(bad)
in
out
(bad)
sbb
jl
movs
mov
es
jle
pop
loop
pop
pop
inc
jne
jecxz
mov
(bad)
sti
sbb
neg
fmul
call
mov
mov
pop
fmulp
mov
pop
xchg
outs
test
mov
and
sub
mov
ret
int3
jb
call
push
cmps
test
adc
inc
imul
sbb
arpl
jle
or
pop
loope
xor
xor
stos
cs
mov
inc
mov
cmp
test
ins
inc
jno
movs
push
xchg
call
mov
add
sub
call
mov
push
cdq
adc
fcmovbe
pushf
xor
fimul
and
bt
or
sub
mov
repnz
mov
mov
push
loopne
push
mov
stos
xlat
gs
nop
pop
loop
sahf
and
mov
sbb
dec
xlat
mov
test
pusha
push
sbb
mov
push
ss
dec
shr
push
test
cmp
mov
retf
inc
bound
jg
call
xor
clc
popa
test
jmp
neg
xchg
jmp
sbb
inc
enterw
dec
add
imul
dec
ins
cdq
ret
jmp
repz
shr
pop
or
cmc
cmp
sbb
inc
push
(bad)
in
and
mov
aam
pop
xchg
test
out
shl
js
rol
mov
rcl
leave
or
jp
xchg
sbb
xchg
sbb
inc
dec
loopne
xchg
sbb
arpl
or
repz
push
push
add
mov
sahf
and
ds
adc
arpl
loopne
mov
fld
adc
inc
push
rcl
xor
in
cmp
sbb
sbb
inc
cmp
aaa
mov
sahf
pop
fist
cli
pop
mov
and
sahf
jecxz
xor
sub
aaa
pop
aad
mov
mov
fsub
ins
ficom
add
and
lea
jecxz
sbb
sbb
sub
jecxz
dec
bound
icebp
repz
shl
adc
test
jbe
mov
sbb
push
jp
xchg
(bad)
adc
push
jmp
lds
dec
pop
adc
dec
dec
xchg
add
cmp
mov
dec
pop
lea
test
xchg
mov
cs
xor
leave
xor
jle
movs
test
push
call
ror
mov
or
out
in
jmp
xor
cmp
imul
and
ds
pop
rol
dec
sbb
(bad)
add
inc
mov
test
push
cmp
out
xor
cmovne
push
pop
jnp
bound
xor
mov
sbb
cmp
rcr
test
jnp
ret
cs
cmp
sbb
(bad)
pop
(bad)
xchg
stos
xor
pop
jne
push
retf
jno
sbb
mov
aas
mov
es
fiadd
mov
push
jb
pop
push
cmc
mov
push
dec
jp
adc
cmp
loope
cmp
loope
cmps
popa
cli
dec
jecxz
jecxz
mov
sub
retf
jae
or
test
mov
cmp
repnz
jnp
ror
lods
pop
inc
jnp
imul
xor
mov
jmp
xor
fstp
adc
jno
inc
and
xor
pusha
in
jecxz
mov
(bad)
arpl
pop
ds
sbb
imul
std
cmp
sub
cmp
xor
jge
cmp
xchg
adc
push
pusha
cmps
pop
stc
test
rcr
mov
sub
daa
call
bnd
inc
mov
(bad)
daa
sar
xor
push
or
dec
pop
cmp
iret
lds
sbb
pop
mov
fwait
cld
test
adc
jo
jp
aam
ret
or
aad
mov
test
jae
retf
jge
in
rol
mov
fwait
lea
mov
mov
outs
xor
rcl
pop
les
sti
inc
cmp
imul
jecxz
ds
test
cmps
dec
jg
outs
rol
out
inc
test
jmp
retf
inc
or
fdivr
mov
mov
dec
mov
and
add
mov
mov
add
jge
jmp
aad
xor
jecxz
sbb
inc
(bad)
push
mov
add
xor
fwait
pop
lea
mov
sar
aam
out
out
bound
outs
cs
mov
int3
mov
(bad)
inc
sub
repnz
pop
clc
test
stos
stos
or
pusha
mov
div
mov
imul
mov
(bad)
mov
loopne
gs
nop
jp
pop
repz
sub
dec
xor
mov
mov
inc
mov
cmc
or
ror
mov
sbb
xor
or
and
jns
mov
add
push
fstp
call
xchg
inc
adc
je
push
jmp
adc
sbb
cdq
and
dec
mov
mov
repnz
push
jno
clc
push
push
inc
xchg
mov
(bad)
jae
ds
clc
int3
fimul
cmp
mov
test
imul
addr16
jge
retf
pop
jo
ja
cwde
ja
jecxz
rol
add
loopne
push
cmp
mov
dec
mul
aad
mov
inc
mov
shl
out
xchg
aaa
adc
jecxz
mov
sub
rcl
mov
push
fldcw
push
test
or
or
mov
jmp
(bad)
mov
in
ficomp
xchg
ret
jb
mov
xchg
ret
pop
adc
mov
popa
fstp
out
xlat
stc
or
cmp
je
push
js
mov
outs
jmp
(bad)
sbb
or
sbb
and
sub
ret
shr
int3
shl
jmp
push
and
cmp
cmp
icebp
inc
clc
and
jnp
or
or
loop
(bad)
shr
jecxz
dec
or
(bad)
(bad)
fadd
iret
mov
mov
sub
int
and
mov
bsr
pop
iret
cmps
call
test
outs
pusha
mov
arpl
popf
jno
xchg
pop
loope
sbb
xchg
ss
cmp
call
mov
loop
sbb
loop
cmp
pop
movs
cmp
fmul
into
mov
aad
mov
mov
pop
lock
cli
popf
rol
fnclex
xor
jp
(bad)
(bad)
cmp
mov
add
cli
cwde
je
leave
movhps
push
jbe
stc
jecxz
push
dec
dec
mov
aad
cmp
cmp
xor
popf
sbb
inc
fist
ret
xchg
aad
call
add
push
push
mov
push
xchg
popa
pop
mov
adc
push
adc
mov
pop
ja
push
repz
xor
js
sbb
aas
jmp
sbb
fidiv
push
or
iret
arpl
cmp
cmp
and
ror
ret
fistp
mov
(bad)
sti
cdq
inc
push
shr
mov
or
in
sbb
pop
repnz
and
adc
shl
jns
push
mov
pop
dec
mov
sahf
pushf
hlt
outs
dec
movs
and
repz
rep
out
xor
out
icebp
and
sub
and
fmul
inc
(bad)
sub
mov
push
lods
es
mov
test
mov
jo
addr16
enter
xchg
ret
inc
jo
xor
out
retf
jp
sub
ins
retf
ins
stos
mov
jae
jae
pop
or
mov
sub
sbb
pusha
popa
cmps
jl
sub
mov
push
iret
lahf
shl
pop
cmps
popa
arpl
sub
idiv
imul
iret
aaa
fisub
mov
aad
xor
xchg
pop
push
jo
jmp
push
fdiv
xor
jno
lock
out
(bad)
cwde
out
mov
lea
mov
aas
sub
pop
imul
lock
inc
jns
ins
mov
popa
mov
add
daa
xlat
adc
std
rcl
out
jne
push
add
push
jns
rol
dec
in
ficomp
sub
jge
stos
(bad)
loope
push
pop
xor
rcr
cmp
pop
xchg
test
mov
mov
lods
repnz
test
(bad)
mov
push
ss
in
fnstsw
movs
mov
sub
add
inc
push
jbe
movs
pop
rcr
hlt
mov
push
inc
and
mov
xchg
ret
mov
xchg
add
pop
pop
loope
stos
mov
mov
lods
(bad)
xor
cmp
and
jmp
xor
mov
mov
xlat
push
sub
pop
mov
cli
fwait
hlt
push
mov
mov
sbb
je
not
shl
mov
sub
sub
jl
frstor
je
jmp
cmp
int3
inc
stos
and
pop
pop
add
ror
inc
sti
sar
test
jbe
pushf
and
adc
daa
scas
inc
in
or
aad
(bad)
pop
inc
repnz
aad
jae
add
out
fld
add
rcl
scas
clc
mov
outs
jp
jbe
mov
test
fisttp
push
mov
idiv
dec
sbb
out
mov
or
adc
cmp
and
rcr
cli
mov
mov
lea
fwait
cmp
pop
dec
sbb
and
int
cdq
mov
ror
xchg
mov
cmp
push
push
ret
cli
ret
scas
add
mov
add
cmp
cld
ror
es
jb
sub
push
adc
cmps
jge
sub
pusha
sbb
imul
sub
push
out
mov
clc
or
pusha
cmp
enter
mov
adc
pop
xor
outs
adc
imul
pop
les
aam
fist
repz
rcr
in
and
jb
cmp
ficomp
dec
dec
and
repz
in
inc
(bad)
fcmovne
jno
and
rol
hlt
dec
mov
sti
icebp
pop
xchg
adc
ret
sbb
popf
ror
sbb
cli
(bad)
sbb
(bad)
mov
add
dec
and
push
jb
js
push
rol
(bad)
push
dec
test
sub
push
popf
sbb
xlat
fld
nop
call
(bad)
aas
mov
into
int
mov
xor
sub
lea
gs
or
test
out
cmovns
loopne
dec
cmp
xchg
dec
test
retf
push
lds
adc
add
es
xchg
xor
iret
and
dec
das
push
outs
sub
leave
pop
pop
add
icebp
mov
ret
add
cs
in
cmp
mov
add
loopne
hlt
push
sbb
jmp
inc
cld
mov
pushf
cwde
xor
pop
jo
dec
dec
add
cmp
add
xchg
sub
sahf
and
sbb
enter
pop
aas
lods
sub
push
mov
or
(bad)
sub
push
cld
mov
retf
push
mov
or
jp
imul
xlat
icebp
lahf
push
pop
imul
int
mov
fld
arpl
lea
lock
mov
ss
int
xchg
mov
inc
mov
arpl
in
jp
in
jb
cmp
jb
and
call
or
cli
rol
jg
mov
and
sbb
cmc
retf
(bad)
adc
xchg
jecxz
adc
ins
add
ret
push
outs
ret
sbb
push
inc
dec
dec
movs
scas
nop
pop
xchg
cmps
cmc
ficom
js
rdpmc
xor
xchg
xchg
sbb
jae
fisubr
cmp
and
bound
and
jge
push
fstp
jle
ret
test
sbb
jbe
cmp
cld
out
mov
fisub
out
push
inc
jb
fild
mov
imul
shr
sbb
fbld
stos
jae
ret
cli
jae
pop
cli
ror
pop
pop
sub
xor
call
xor
imul
(bad)
cdq
ror
ss
dec
dec
xor
push
cdq
sbb
add
jae
inc
out
pop
lods
jne
mov
pop
in
jp
pop
repnz
test
cs
in
push
cmp
test
mov
jecxz
jmp
xchg
push
arpl
imul
loopne
mov
cmp
lock
(bad)
and
retf
cmp
in
jno
xchg
push
icebp
push
and
push
call
pop
shr
push
mov
xchg
sti
lds
jo
add
les
jmp
fild
or
test
push
add
mov
cmps
push
push
jecxz
in
cmp
mov
mov
fld
leave
mov
test
or
imul
dec
mov
sbb
test
int
adc
arpl
stos
push
dec
cmp
xor
adc
mov
mov
sub
and
add
jbe
jne
fidiv
sar
test
xchg
in
aam
mov
add
cmp
mov
fist
mov
clc
movs
popa
retf
adc
rcl
fcom
push
int3
jge
or
mov
retf
call
inc
fwait
arpl
out
(bad)
push
mov
and
and
popf
or
pop
stos
jl
mov
stos
js
fdivr
outs
jb
push
sbb
mov
ror
or
call
test
ins
xor
(bad)
sbb
jle
addr16
ins
(bad)
push
out
retf
(bad)
fmul
call
data16
push
jo
into
ja
cmp
or
lds
xchg
int3
xchg
mov
push
jl
sub
dec
loope
xchg
call
push
sahf
outs
jg
jl
dec
xchg
and
push
repnz
sbb
push
loope
int3
inc
addr16
outs
or
add
jp
mov
(bad)
sar
outs
scas
inc
mov
outs
or
sbb
cmp
xchg
mov
sbb
cmc
xchg
(bad)
jns
mov
xchg
cmp
repz
adc
jno
aad
adc
std
adc
or
inc
call
sti
push
(bad)
jnp
xor
(bad)
push
cmp
lock
aaa
pop
test
fwait
or
imul
in
cmps
xchg
jmp
(bad)
mov
sub
(bad)
fs
and
repnz
cmp
ins
fidiv
or
jp
cmp
mov
mov
movs
retf
sbb
adc
or
fucomip
scas
das
callw
push
iret
or
push
mov
mov
push
push
mov
and
xchg
push
iret
adc
test
(bad)
cld
arpl
icebp
out
cdq
cmp
add
jae
gs
fsubrp
fwait
cmp
adc
cli
div
loope
stos
fstp
xchg
rcl
je
test
mov
push
dec
cli
std
add
or
pop
mov
jle
sub
pop
jle
dec
ret
outs
ror
ficomp
push
iret
adc
mov
call
test
adc
sbb
fsubr
xchg
adc
cmp
xor
dec
jae
xor
xchg
jmp
jns
pop
cmp
aad
rol
push
add
xor
adc
sbb
sub
mov
pop
sbb
inc
jo
xor
xor
mov
repnz
mov
xor
fmul
into
mov
mov
mov
stc
push
mov
pop
imul
xchg
inc
mov
inc
xchg
cmp
mov
jns
movs
mov
mov
stos
ja
mov
addr16
push
adc
or
jecxz
ja
aaa
jae
mov
(bad)
fdivr
js
scas
std
inc
ror
and
aam
fcomi
mov
scas
(bad)
stc
push
dec
repnz
jmp
pop
mov
pop
xlat
hlt
shl
add
mov
xor
cmp
jne
and
scas
jmp
rcl
cmp
adc
push
pop
push
jae
mov
jno
jne
mov
movs
ss
out
push
out
les
jo
ins
ss
push
sub
aam
cmc
imul
sub
fwait
leave
or
pop
lods
ins
arpl
mov
stos
push
xor
icebp
loope
loopne
int
jecxz
outs
push
adc
mov
mov
jb
ja
sti
push
jmp
mov
lock
mov
out
dec
and
mov
bound
mov
mov
sub
and
xchg
les
mov
fistp
sar
je
loopne
not
add
jno
cdq
pop
cli
je
lods
sahf
push
and
arpl
mov
cmp
pop
jle
imul
call
adc
sub
adc
add
les
icebp
loopne
addr16
jnp
cli
jb
adc
fdivr
dec
adc
mov
mov
push
push
mov
test
dec
repz
mov
or
repnz
mov
ins
rol
out
jmp
xchg
mov
lahf
loopne
fwait
enter
lods
retf
ficomp
sbb
jo
add
sti
jmp
or
mov
lods
jb
je
pop
or
mov
inc
fiadd
scas
or
aaa
jo
cmp
xchg
mov
sbb
xchg
stos
cwde
push
(bad)
addr16
or
shl
push
out
push
fs
push
inc
dec
imul
inc
mov
stc
lods
xchg
or
fcmovne
mov
stos
sub
in
dec
jae
add
pop
jl
cmp
call
add
(bad)
cli
xlat
cmp
dec
mov
outs
shr
sbb
repz
mov
repz
jbe
or
or
shl
or
aad
sub
mov
hlt
cmps
add
sbb
retf
jnp
cs
or
mov
adc
inc
cmp
inc
mov
and
inc
or
jge
pop
xchg
push
sbb
mov
mov
test
cld
mov
dec
std
push
mov
jp
add
dec
out
push
mov
xchg
mov
outs
push
mov
xchg
jp
stc
loope
lock
ja
ss
mov
dec
popa
retf
mov
push
mov
rol
inc
jmp
fsub
inc
cmps
xor
lahf
jmp
outs
push
cmps
pop
iret
clc
inc
out
adc
xlat
mov
sbb
je
ds
lds
fstp
push
jno
mov
dec
xchg
cmp
stos
lahf
xchg
push
mov
mov
sub
fcom
fisub
mov
mov
jo
pusha
fld
push
cli
mov
imul
jb
jl
pop
call
ror
pop
inc
adc
sub
xor
aam
xchg
outs
mov
xor
imul
aam
mov
xchg
call
cmp
xor
jbe
std
or
ret
inc
xchg
jnp
lea
scas
add
(bad)
mov
mov
adc
imul
test
inc
mov
rcr
bound
test
jl
outs
sti
jo
pop
shl
gs
mov
xchg
pop
sahf
(bad)
dec
lock
shr
jb
mov
jp
jecxz
xchg
xchg
or
push
out
dec
fiadd
repnz
jb
leave
or
dec
or
in
xlat
jae
xchg
sar
push
fsubr
nop
mov
sbb
cwde
dec
rcl
rol
mov
push
mov
or
xchg
jp
in
aam
ja
mov
into
loopne
in
mov
add
push
call
inc
into
mov
and
adc
pop
mov
xor
rcr
mov
mov
int
push
ficom
icebp
xchg
inc
add
inc
mov
retf
xchg
inc
imul
into
(bad)
ror
xchg
xchg
sahf
arpl
adc
pop
mov
mov
scas
jae
movs
adc
xchg
ret
sub
and
xchg
jp
(bad)
stc
sub
and
fisub
jnp
or
xor
loop
test
push
cmps
gs
pop
adc
lds
mov
int
or
mov
or
push
add
xor
outs
loop
fwait
sub
mov
inc
je
mov
and
xor
loope
mov
sbb
dec
bound
dec
jae
pop
stos
push
sub
cli
loop
jae
adc
cmc
jge
sbb
mov
cld
xlat
mov
inc
es
call
aas
push
in
dec
test
xchg
retf
jnp
test
sar
adc
aas
ja
push
aas
inc
clc
out
retf
mov
inc
loope
ror
js
push
and
push
pop
stos
dec
push
xchg
sub
dec
xor
jmp
imul
xchg
dec
sub
adc
imul
scas
call
add
mov
xor
dec
jl
int
cmp
adc
je
fwait
test
mov
add
mov
shl
repnz
in
test
mov
sub
or
stc
mov
add
xor
(bad)
cs
stos
mov
adc
lds
push
jmp
data16
leave
and
jmp
add
in
(bad)
adc
mov
inc
fnsave
and
mov
movs
lds
sbb
and
jae
lahf
aas
mov
and
pop
dec
dec
repz
add
adc
loope
cmp
mov
imul
lds
sahf
pop
in
push
mov
dec
jle
sbb
cli
fsubr
sub
inc
jne
and
adc
ins
cmps
rcl
inc
jmp
outs
iret
jo
adc
cmp
mov
and
in
inc
add
retf
ds
mul
add
in
xor
pop
cld
loop
jmp
bound
shl
fidiv
mov
gs
sbb
mov
jae
loopne
ret
test
mov
icebp
fadd
cmp
xor
repnz
sub
aad
cld
js
loope
in
adc
xor
lods
jg
pop
push
adc
outs
xchg
push
adc
clc
jno
or
cmp
push
rol
leave
xor
stos
ds
daa
dec
sar
fistp
jnp
aad
repnz
iret
inc
pop
(bad)
call
ret
ins
cmc
adc
mov
stos
popa
popa
and
and
add
pop
dec
popf
push
add
push
shl
sub
xchg
and
lods
jp
cmp
rep
test
jo
jne
sbb
stos
dec
jecxz
push
jmp
rcl
test
sub
into
repz
pop
mov
mov
jmp
jno
jl
cmps
inc
jae
ret
popa
sbb
mov
fisttp
mov
loope
imul
outs
es
jmp
(bad)
test
mov
cli
xor
icebp
dec
sbb
inc
and
inc
xchg
adc
not
out
xor
scas
jmp
cmp
mov
and
jns
push
cli
scas
test
pop
or
sbb
sub
mov
jge
test
fimul
out
js
sub
mov
add
ins
jl
pop
adc
sbb
cmp
jl
stc
scas
xor
mov
xchg
mov
or
adc
push
jp
fsubr
adc
and
cwde
push
cmp
mov
jo
jnp
pop
mov
sbb
mov
aas
or
dec
fnstsw
mov
in
cmp
pop
es
push
fdivr
mov
fcomp
dec
retf
pop
daa
inc
xchg
mov
or
pop
sar
adc
sbb
adc
cmp
mov
or
loop
push
dec
(bad)
and
or
jmp
sbb
and
mov
shr
xor
and
cmps
hlt
xor
dec
hlt
xchg
add
inc
loope
popa
test
cmp
dec
cmp
push
mov
vphaddubd
jo
or
(bad)
mov
out
or
and
mov
jo
rcr
dec
jmp
add
arpl
xor
fld
and
xor
adc
push
xor
stos
je
push
xor
cmp
or
popa
outs
mov
enter
repnz
fmul
rcl
pushf
pop
rcl
adc
in
jnp
test
cmps
pop
mov
popa
inc
mov
(bad)
cli
aas
mov
dec
jecxz
ret
add
(bad)
aam
xchg
sbb
mov
mov
inc
xchg
in
outs
nop
pop
neg
mov
aaa
sbb
(bad)
cwde
jecxz
repz
xor
sbb
fidivr
ret
cmp
xor
push
inc
lea
mov
rcr
inc
and
sub
sub
mov
jnp
sbb
repz
test
fs
je
xor
cwde
iret
jbe
data16
call
or
jge
xor
icebp
loopne
je
mov
pop
xchg
(bad)
cmp
cmps
mov
or
into
call
jp
retf
mov
outs
clc
daa
int
cli
inc
lock
clc
(bad)
inc
or
dec
ins
stos
or
jmp
pop
movs
ja
retf
or
mov
stos
pop
loop
dec
int3
addr16
outs
xor
inc
ins
add
and
xchg
pusha
or
(bad)
add
into
mov
sar
jle
inc
ja
call
sbb
not
jmp
push
call
das
mov
mov
adc
jne
loopne
jns
bound
and
or
nop
rol
bnd
fwait
les
jle
pusha
cld
pop
fcom
fcmovne
dec
push
jl
movs
rcl
fild
fcmovb
cmp
fcom
cwde
loope
xor
arpl
lea
call
mov
sar
sahf
or
not
push
std
fcom
dec
test
lods
sbb
shl
stos
xchg
dec
xor
nop
stos
mov
mov
push
(bad)
fbld
popa
out
or
push
mov
gs
pop
push
jne
pop
xor
les
shr
sub
retf
in
out
retf
jecxz
in
ror
in
stc
xchg
js
mov
movs
add
fcom
dec
or
adc
lock
aad
stos
sahf
xchg
jno
das
xchg
inc
jns
stc
es
xchg
xchg
ss
ret
or
mov
sbb
leave
xor
ins
sbb
sti
ret
xchg
ja
pop
fcom
dec
std
dec
jmp
and
inc
scas
push
aaa
rol
sub
sub
sar
fstp
sbb
add
ror
sahf
or
dec
sub
stos
lods
mov
or
push
sbb
iret
inc
(bad)
jae
jp
or
out
mov
push
push
stc
xor
in
jp
push
add
sbb
std
sbb
cs
push
xor
inc
call
mov
xor
in
cmp
mov
mov
fcomp
dec
fisub
or
sub
add
xor
imul
cmps
xor
fwait
mov
in
je
pop
cmps
loop
gs
nop
inc
sub
fnstcw
mov
xor
fstp
lds
stos
adc
and
ss
and
mov
xchg
ret
jle
mov
movs
mov
adc
push
bound
cli
int3
mov
mov
imul
sbb
or
jo
xor
loop
imul
fnstcw
mov
dec
bound
push
pushf
mov
cwde
inc
in
mov
xchg
xor
xchg
stos
xor
(bad)
in
loop
ds
pop
inc
fwait
adc
jae
cmp
inc
call
cmps
mov
inc
inc
push
rcr
push
add
idiv
adc
fist
rol
icebp
cs
adc
sub
fbld
cmp
adc
dec
xchg
(bad)
inc
pop
xchg
push
rcl
popa
das
xchg
loop
xor
lds
fisttp
ficom
in
shl
retf
cwde
adc
pop
push
cmp
fsubp
ret
xlat
sbb
mov
or
jp
(bad)
push
fiadd
mov
mov
lea
push
jp
repz
push
repz
pop
je
inc
ret
xchg
fadd
xchg
in
jnp
jp
stos
gs
fst
enter
xchg
hlt
mov
loope
add
sbb
adc
aam
and
jnp
in
push
popa
mov
mov
adc
jo
test
shr
push
sbb
xchg
mov
sub
jmp
xor
arpl
loope
sub
ror
fwait
cmp
dec
jl
xor
into
pop
mov
and
mov
inc
and
pavgb
xor
shl
and
in
push
adc
sub
(bad)
xchg
fldenv
test
mov
sub
inc
retf
cmp
imul
(bad)
jge
(bad)
cmc
push
mov
mov
mov
mov
in
lahf
mov
and
fistp
icebp
js
inc
loop
mov
outs
inc
clc
daa
nop
std
mov
adc
push
push
stos
jge
xor
sub
in
cdq
pop
pop
and
out
cmp
and
ss
add
push
and
or
mov
xor
xor
adc
xor
dec
push
jl
aam
shl
inc
lock
sbb
dec
push
iret
adc
jo
lea
add
repz
add
cmp
inc
push
mov
popa
pcmpeqd
push
inc
repz
and
in
and
dec
aad
xchg
adc
jno
call
fcmovne
shr
loopne
sahf
inc
xlat
out
fmul
jmp
test
movs
(bad)
nop
adc
xchg
js
cmp
add
fwait
adc
mov
ficom
pop
mov
ins
pop
dec
jb
(bad)
cmp
mov
xor
sub
jp
pop
popa
and
and
add
jne
retf
dec
mov
sbb
test
dec
and
push
cmc
les
in
clc
jmp
xchg
or
ret
fwait
xchg
cmp
mov
mov
ret
movs
or
sahf
cmc
sub
jae
jge
adc
jecxz
mov
clc
pop
adc
cmp
add
mov
jae
xchg
adc
dec
add
int
(bad)
stos
idiv
popf
fild
fild
xor
mov
daa
xor
jne
or
or
xchg
sti
xchg
sbb
push
inc
mov
xchg
add
imul
pop
jo
hlt
cmp
push
and
fdivr
in
add
cmps
mov
fidivr
mov
or
or
xor
aad
push
mov
xchg
sbb
push
int3
sar
imul
cmp
dec
inc
sbb
mov
jmp
mov
repz
sbb
leave
and
mov
jae
ins
jge
daa
mov
xchg
jmp
repnz
xchg
aas
xor
adc
sbb
cmp
fisub
fist
bnd
es
call
lods
ficom
int3
daa
das
aad
mov
xchg
icebp
mov
popa
mov
push
fnstsw
xchg
xor
and
sub
sub
jno
mov
pop
push
jnp
(bad)
(bad)
jmp
ret
xchg
inc
std
xchg
mov
jp
sub
or
cmp
push
icebp
jge
mov
cli
adc
jmp
rcl
xchg
fsubr
sbb
repz
mov
inc
(bad)
fldcw
add
jmp
loopne
or
loopne
out
mov
and
dec
jp
jge
sbb
dec
fwait
inc
xor
pop
or
add
cmp
xor
arpl
push
stos
shl
sahf
xchg
rcl
in
mov
pop
xor
cmp
mov
xor
add
xchg
scas
loop
adc
and
jg
jecxz
pusha
inc
lea
out
ror
and
mov
rcl
jle
adc
mov
and
pop
(bad)
push
test
push
stos
add
repz
mov
push
pushf
jl
jmp
adc
xor
sbb
sub
jb
jb
repnz
cs
mov
lahf
and
cmp
inc
into
int3
enter
out
in
inc
jg
sub
scas
or
mov
daa
ficom
fistp
or
cmc
sub
add
cmp
and
fistp
push
pop
or
stos
inc
pop
inc
ins
cld
pop
add
cmc
loop
xchg
mov
jmp
mov
and
inc
cmp
xor
adc
shr
cmp
fdiv
jmp
jo
xor
mov
outs
xor
jo
xlat
(bad)
js
mov
jmp
popf
rep
mov
inc
imul
test
mov
shl
push
inc
mov
mov
cmps
cdq
cwde
mov
mov
loope
shl
in
jp
push
sbb
pusha
fiadd
add
add
leave
sti
repz
iret
add
mov
ror
iret
add
adc
adc
sbb
mov
(bad)
iret
shl
xchg
xchg
jecxz
mov
sub
nop
xchg
loope
mov
(bad)
imul
fwait
pop
idiv
retf
dec
inc
rcr
lds
and
sti
imul
jno
and
jle
outs
or
mov
mov
in
and
js
jbe
into
fild
mov
sbb
mov
sbb
cs
push
and
or
jbe
out
lea
dec
sub
mov
or
imul
in
jmp
pop
mov
jne
add
cmp
mov
jp
imul
sub
mov
xchg
bound
or
jecxz
mov
pop
dec
jl
fsubr
lods
and
(bad)
dec
dec
xor
inc
sti
scas
out
cmp
mov
mov
add
pop
gs
or
push
push
std
or
outs
aas
das
pop
inc
xchg
mov
mov
cmc
sbb
popf
pop
cmps
sub
ret
fadd
jecxz
call
push
cmc
outs
dec
lahf
mov
call
jne
xchg
inc
shl
lods
cmc
out
cmp
bound
mov
fistp
call
(bad)
xchg
sbb
pusha
stos
ja
jmp
xor
mov
aad
(bad)
or
mov
loope
cli
mov
adc
sbb
add
cmp
(bad)
rol
rcl
push
xchg
shr
add
pop
fsub
repnz
xchg
js
ret
cmp
sbb
xchg
lar
js
je
leave
sub
out
push
mov
shr
(bad)
jp
sub
sbb
sub
(bad)
les
test
mov
cmc
cli
stos
pop
aam
jp
jmp
pop
cmps
ret
pop
test
jb
int3
movs
adc
in
fld
dec
es
add
and
adc
or
aaa
pop
pop
inc
or
xor
call
adc
or
sub
or
or
je
adc
xor
das
dec
mov
gs
and
mov
addr16
adc
mov
mov
adc
loop
std
mov
xor
push
inc
dec
movs
movs
ror
arpl
xchg
js
xchg
imul
inc
mov
and
fadd
mov
or
mov
cmp
(bad)
jae
jae
and
mov
mov
and
pop
fs
and
out
loope
inc
xchg
loop
test
add
nop
iret
loop
cmps
push
jnp
call
xchg
shl
sbb
sub
sub
clc
dec
pop
enter
jnp
sub
stos
mov
push
jns
repnz
adc
mov
pop
dec
push
inc
in
mov
int
popf
inc
call
push
sahf
test
jp
xchg
mov
test
cmps
or
hlt
sbb
int
cld
push
push
popa
mov
hlt
cmc
dec
jno
or
lods
test
(bad)
in
sbb
and
int3
add
sub
push
cli
mov
sbb
inc
push
out
sbb
outs
fldcw
push
ret
loope
inc
iret
jno
add
cmp
adc
mov
cli
xchg
retf
mov
xchg
add
xchg
xchg
out
ins
cli
and
xor
add
jno
dec
jae
pop
lods
sti
repz
dec
xchg
jl
movs
fs
pop
push
adc
ficomp
xchg
lock
or
sar
stc
jmp
ret
pop
pop
aam
xchg
inc
test
shl
jns
push
(bad)
shr
push
aam
stos
dec
fisub
cmp
dec
in
xchg
and
je
fstp
lock
dec
xor
add
lahf
push
xlat
mov
or
pop
(bad)
dec
fwait
(bad)
inc
(bad)
mov
xchg
movs
cmp
rcl
xor
cmp
ins
data16
push
mov
lock
jns
xchg
sbb
mov
add
push
cmp
int3
jae
cmp
sub
jmp
ins
inc
wbinvd
leave
outs
ins
fwait
pop
mov
addr16
call
push
aad
and
call
leave
test
inc
or
fild
fsubr
and
and
imul
loop
mov
jmp
push
in
mov
retf
leave
imul
sub
lahf
scas
nop
call
mov
or
push
or
mov
mov
pop
adc
mov
add
scas
out
sbb
push
xchg
arpl
or
adc
cwde
cmps
lock
mov
adc
lock
xchg
add
dec
inc
ja
gs
clc
and
popa
enter
sub
or
mov
(bad)
cmp
popa
xchg
imul
mov
jo
rcl
mov
xchg
cmp
outs
adc
leave
push
arpl
movs
enter
retf
sub
in
and
mov
inc
jns
sub
mov
test
fiadd
sub
call
ret
shl
out
jne
xchg
and
xlat
sub
push
lahf
into
dec
iret
jg
sbb
ja
sahf
add
int3
arpl
sub
or
rcr
xor
jae
xchg
ins
lods
add
pop
shr
xor
(bad)
add
dec
xchg
and
mov
mov
test
hlt
out
dec
fdivr
xchg
(bad)
rcl
movs
sub
movs
pushf
jmp
jmp
in
xor
shl
setl
shr
or
icebp
retf
loope
xchg
mov
ret
xor
repnz
and
add
xor
push
movs
dec
jmp
fadd
idiv
jmp
push
cmp
xor
cmc
push
fidivr
cld
outs
pop
cmp
mov
repnz
mov
add
dec
cs
dec
mov
(bad)
stos
imul
in
test
stos
addr16
stos
jp
ret
ret
and
xchg
rcr
add
mov
repnz
mov
xchg
jg
outs
movs
pop
int
pop
ds
imul
xchg
imul
bnd
jns
pusha
mov
cmps
jmp
xchg
adc
xchg
mov
mov
add
dec
mov
dec
js
jmp
xchg
xor
inc
mov
data16
arpl
arpl
aas
shr
jae
repz
pop
jbe
inc
add
mov
sub
iret
adc
and
lods
push
dec
xor
jne
jmp
mov
push
mov
jle
jno
pmaxsw
iret
ja
sbb
hlt
arpl
nop
repnz
adc
mov
jno
sub
stos
or
addr16
sbb
jne
jge
ret
mov
mov
imul
add
pusha
ds
add
addr16
cli
push
jecxz
fmul
dec
rcl
sbb
lahf
ss
test
push
lods
xor
add
stos
and
aam
pop
rcr
clc
(bad)
fld
inc
cmp
imul
shr
push
xor
lds
shl
xor
adc
loope
cmp
push
xchg
add
mov
mov
jp
and
loop
jb
inc
or
shl
int3
out
xor
pop
cmp
repz
sbb
push
dec
imul
ss
or
iret
mov
nop
jo
rcr
jp
pop
sbb
mov
push
les
push
push
or
push
fbld
daa
mov
cli
and
mov
repz
xor
mov
sbb
mov
or
mov
aad
xor
mov
mov
mov
popf
and
fprem1
fwait
and
add
and
pop
ret
bound
jae
sbb
mov
add
rcl
ja
jne
in
sbb
fcom
cmps
(bad)
dec
cmp
xchg
pop
test
mov
enter
or
inc
mov
mov
mov
icebp
stos
push
mov
fcomi
cmp
push
sub
sbb
inc
xlat
call
pop
dec
or
fs
les
leave
fild
xor
dec
sar
ja
and
out
fwait
pop
xor
or
stos
(bad)
idiv
js
pop
jecxz
pop
arpl
xchg
mov
xor
icebp
leave
xchg
je
push
sbb
cmp
inc
aaa
push
(bad)
les
mov
pop
mov
jmp
outs
(bad)
sbb
mov
inc
push
cwde
scas
dec
push
mov
enter
xor
clc
sar
mov
aad
push
mov
push
std
pop
mov
jns
popa
sub
retf
xchg
int
stos
cmp
or
es
retf
aaa
adc
add
mov
adc
enter
xchg
adc
xor
popf
sbb
out
xchg
repnz
lock
ds
mov
stos
popf
cmp
and
dec
pushf
inc
mov
in
aaa
mov
jbe
push
fldenv
sub
shl
xchg
out
add
data16
push
jl
psrlq
add
out
jns
fild
mov
cmc
dec
mov
sub
hlt
addr16
aas
imul
xchg
mov
inc
in
pop
test
hlt
inc
into
add
adc
jmp
shl
sub
adc
imul
ins
pop
pop
xor
stos
jmp
adc
(bad)
dec
pop
and
jp
mov
int
mov
mov
outs
clc
bound
dec
retf
loope
lock
loop
aas
repz
punpcklwd
push
fcmovne
push
xor
cmp
je
push
aaa
jnp
or
rol
daa
jno
icebp
mov
fsub
and
loope
repz
gs
sub
std
mov
pop
or
adc
sti
push
jmp
xor
fwait
add
movs
pop
(bad)
cmp
dec
mov
mov
jl
or
test
fmul
push
aam
jne
fwait
or
repnz
sbb
das
scas
cmc
dec
inc
outs
push
push
mov
push
sub
fbstp
inc
mov
mov
dec
out
jne
arpl
push
and
out
adc
repnz
dec
jge
(bad)
out
jo
xchg
cdq
mov
push
vcvttpd2dq
cs
repz
ins
stos
in
daa
cwde
(bad)
xchg
pop
inc
das
xchg
and
mov
imul
inc
adc
ret
xlat
jno
push
movs
inc
ror
cmp
repnz
das
mov
push
test
arpl
outs
mov
jae
inc
jne
aam
xor
pop
pop
cmp
fiadd
adc
outs
fcmovu
or
push
sbb
add
jecxz
sbb
iret
xor
jecxz
pop
or
frstor
repnz
pop
gs
and
or
sbb
(bad)
mov
vcvtps2pd
rol
imul
mov
xchg
dec
or
arpl
push
sti
add
mov
fstp
shl
(bad)
xchg
cmp
pop
bound
and
das
sub
pop
xor
and
push
jo
mov
imul
or
jns
or
fild
xor
push
jb
ins
mov
lds
aad
jg
jno
ret
addr16
mov
mov
ret
rcl
call
mov
test
jnp
and
int
or
(bad)
fbld
sbb
(bad)
mov
movs
xor
dec
repz
and
add
xor
jg
push
fcmovnu
ds
pop
dec
push
sub
daa
xor
pop
cmp
lds
pop
dec
pop
ret
aas
sub
pusha
bound
loopne
cli
or
and
cmp
adc
fisub
xchg
and
cmp
adc
test
mov
mov
push
pop
sbb
out
or
js
fs
pop
mov
scas
xor
ret
inc
fcom
mov
xchg
jge
mov
adc
retf
sub
rol
out
in
adc
fistp
jb
jne
and
xor
iret
xchg
mov
pop
ficom
ins
cli
xchg
shl
mov
inc
add
sub
(bad)
in
jne
dec
mov
test
xchg
call
cli
cmp
sub
xor
stos
xor
pop
cmp
retf
aaa
adc
pop
adc
out
sar
pop
cmp
bound
add
icebp
inc
mov
adc
xchg
sbb
xor
mov
loop
pushf
mov
xchg
and
loope
rol
(bad)
and
imul
adc
std
pushf
sbb
xor
mov
cmps
xchg
daa
(bad)
repnz
ret
nop
outs
pusha
mov
frstor
ds
push
xor
mov
mov
jecxz
jl
shr
loope
xchg
sub
sahf
mov
retf
stos
push
sti
loop
or
call
cmp
sbb
mov
jmp
das
and
std
sbb
mov
stos
int3
mov
xchg
popf
xchg
outs
sahf
jo
and
fist
and
cmc
inc
(bad)
fdivr
xor
xchg
arpl
pop
pop
xor
sar
dec
cli
xor
adc
fist
inc
and
das
mov
push
test
and
arpl
test
xchg
pop
sub
call
push
jle
loopne
adc
xchg
jmp
pop
sbb
pop
les
jmp
xchg
push
outs
jno
or
add
retf
scas
fnstsw
sub
mov
sub
mov
iret
and
dec
cmc
hlt
adc
xor
out
mov
add
mov
and
jnp
ret
mov
fst
cmps
push
cmp
jnp
xor
retf
xchg
test
cmp
adc
stos
(bad)
or
ja
(bad)
leave
push
jecxz
xlat
cli
bound
xchg
and
in
les
and
test
popf
inc
les
jns
sub
(bad)
dec
push
sub
cmps
(bad)
fcmovu
push
add
xor
hlt
push
les
(bad)
sbb
cli
inc
mov
jne
ret
inc
push
pop
out
xchg
and
leave
imul
xor
ss
mov
leave
inc
jmp
or
clc
mov
leave
call
or
fidiv
jae
jae
mov
mov
popa
daa
scas
scas
push
jmp
xchg
popa
aad
adc
(bad)
outs
in
cmp
and
dec
push
jl
mov
xor
test
mov
jmp
xor
pop
test
lds
std
in
jno
test
ds
test
std
push
mov
inc
inc
scas
and
lods
imul
add
adc
out
xor
push
push
mov
push
inc
add
icebp
sbb
mov
xor
test
jp
dec
sub
inc
xchg
xchg
sub
stc
mov
mov
je
ins
jmp
imul
mov
shl
stos
adc
jecxz
idiv
mov
pop
mov
retf
fistp
mov
mov
pop
outs
xchg
ds
fsubr
nop
adc
outs
jg
mov
adc
rol
outs
mov
test
cmp
imul
repz
out
sub
mov
fild
cmps
sbb
leave
jnp
mov
dec
fwait
dec
lahf
fild
retf
jae
imul
add
jecxz
fdiv
xor
enter
les
in
mov
std
sub
adc
imul
or
and
xchg
das
call
mov
xor
test
es
sbb
and
cdq
repz
loop
pop
test
mov
je
pop
push
loopne
and
sub
jns
adc
jnp
mov
lock
or
aam
mov
movs
test
cli
and
inc
sub
adc
rcl
icebp
jp
movs
call
retf
or
mov
adc
repz
jge
repnz
and
xchg
(bad)
clc
hlt
stos
ins
jl
dec
sub
push
cmp
sbb
push
dec
and
sub
mov
pop
ds
jmp
mov
sar
pop
mov
jmp
cmps
mov
mov
sar
retf
xor
xchg
mov
mov
jmp
fisttp
clc
ins
ins
dec
fwait
jae
sub
pop
sahf
test
ins
mov
add
mov
xchg
jns
loop
cmp
lods
push
in
fisub
loop
nop
cld
test
pop
sub
xchg
stos
cli
inc
mov
sub
shr
iret
out
dec
mov
aaa
pop
jae
xchg
cmp
sar
xchg
das
jns
and
clc
pop
mov
mov
inc
push
repnz
mov
je
stos
inc
out
mov
push
aas
push
(bad)
cmp
pop
pop
hlt
dec
outs
mov
mov
mov
retf
inc
int
sbb
mov
mov
sbb
jbe
jb
enter
aaa
cmp
cmp
cmp
and
(bad)
retf
jae
jnp
cwde
dec
adc
test
(bad)
mov
mov
enter
iret
sbb
jb
add
fmul
test
movs
mov
rcr
add
xchg
cld
dec
enter
xchg
retf
bound
xchg
adc
and
mov
jb
inc
ror
pop
jecxz
int3
mov
ficom
jno
popa
sahf
jae
adc
push
sti
es
nop
stos
add
push
ror
(bad)
add
out
dec
sbb
add
cmp
jl
xor
call
mov
jge
mov
loop
xor
inc
int
test
mov
mov
fwait
aam
aaa
ja
movs
xchg
cdq
ret
stos
xor
bound
mov
neg
xchg
pop
les
add
or
xlat
jle
push
jnp
push
call
mov
loope
dec
mov
and
scas
hlt
xor
and
adc
sub
push
or
addr16
dec
idiv
cmps
jge
vxorpd
pop
sti
or
push
dec
movs
push
mov
ret
and
cmp
out
(bad)
sub
adc
mov
mov
pop
sbb
or
pop
(bad)
mov
retf
int
int3
mov
iret
pop
mov
out
repnz
dec
in
jo
shl
and
mov
imul
std
push
test
lock
mov
pop
xlat
and
mul
xor
inc
push
cmps
icebp
dec
mov
call
cmps
mov
jp
mov
or
imul
add
ss
std
aaa
and
jmp
inc
pop
or
push
dec
pop
loope
cmps
xchg
push
repnz
ins
gs
stos
xlat
mov
or
addr16
stc
cdq
cmp
xor
dec
mov
cwde
pop
scas
aaa
jle
mov
call
sub
outs
out
mov
repz
ss
cmc
rol
jae
inc
dec
mov
cmp
in
or
iret
imul
mov
jnp
push
adc
mul
sbb
out
adc
bound
or
dec
sbb
jmp
nop
iret
pop
adc
add
push
retf
and
xor
pop
scas
out
retf
mov
mov
mov
(bad)
out
shr
mov
inc
inc
adc
push
push
sbb
dec
and
mov
sub
stos
mov
mov
add
add
sbb
gs
loope
adc
popa
xor
ret
pushf
daa
pop
push
movs
mov
aas
xlat
nop
sbb
or
and
cmp
leave
inc
jmp
push
sub
ret
inc
test
sub
fnstenv
pop
lea
mov
lea
mov
ja
or
addr16
mov
mov
and
ja
inc
fcomp
loopne
pop
retf
or
mov
push
retf
or
jbe
push
retf
dec
(bad)
call
jbe
xor
nop
mov
ins
or
je
sbb
push
stos
add
dec
xlat
out
ins
dec
pop
icebp
rcr
and
cmps
sub
js
jno
outs
out
jmp
sub
arpl
retf
jge
shl
sbb
xlat
fptan
push
or
push
mov
and
movhps
adc
dec
push
xchg
jge
fidiv
jnp
das
cmps
arpl
and
cmp
mov
mov
mov
xor
sbb
ss
inc
or
xchg
rcr
std
mov
bound
jnp
mov
test
xchg
cmp
arpl
enter
nop
iret
mov
into
clc
xor
cmp
data16
cwde
jmp
dec
outs
aaa
or
cld
pop
loope
adc
out
dec
shl
sbb
js
rcr
ins
bound
xchg
cmp
retf
dec
fcom
dec
imul
mov
ret
xchg
mov
push
loop
mov
int3
data16
pop
sub
cmp
mov
jmp
daa
imul
dec
pop
add
fisub
adc
sbb
shr
mov
sbb
sub
jne
mov
jmp
pop
fisub
lahf
sbb
and
out
mov
sub
dec
inc
adc
jnp
pushf
pop
fwait
jbe
fwait
jnp
push
push
ret
ja
pushf
fimul
mov
mov
pop
push
inc
loop
pop
xor
pop
scas
cmps
imul
cmps
retf
loopne
js
lea
push
sbb
and
lahf
sti
cs
fcomp
(bad)
daa
div
fstp
xchg
pop
clc
sahf
loop
jecxz
jmp
mov
scas
mov
nop
sub
sub
push
mov
icebp
fwait
push
iret
pop
popa
loope
loope
mov
adc
dec
inc
(bad)
dec
adc
outs
jge
in
aas
std
cs
dec
xor
xchg
push
ror
movs
pop
(bad)
lock
mov
xchg
into
mov
push
fidiv
hlt
mov
add
(bad)
dec
mov
imul
scas
adc
sti
(bad)
loop
ret
(bad)
or
mov
xor
iret
jle
xor
adc
iret
pop
ds
push
cli
xchg
mov
xchg
adc
repz
sub
push
sahf
sbb
xchg
xlat
xchg
neg
xchg
test
mov
adc
shl
js
test
in
xchg
push
neg
xchg
mov
push
call
sub
scas
xchg
push
nop
jbe
(bad)
add
jle
shl
push
stc
push
adc
push
cmps
arpl
mov
and
jecxz
stos
in
push
(bad)
mov
xor
xor
nop
jns
ret
adc
cmp
mov
adc
pop
pushf
ds
mov
mov
ret
out
jne
jmp
push
ret
ficomp
inc
mov
sahf
retf
push
popf
jae
repz
jmp
stos
add
repz
ret
pop
out
popf
jg
outs
iret
pop
pop
out
push
shr
lds
sub
xchg
xlat
int
inc
push
(bad)
aaa
loope
stos
pop
dec
mov
fisub
cmp
ror
pop
add
sub
push
bound
mov
pop
ror
dec
ins
popa
pop
cmp
xchg
jl
adc
inc
cli
mov
sar
xchg
mov
mov
jns
jo
inc
imul
inc
sbb
mov
jp
xor
jmp
ret
adc
std
retf
and
pushf
jg
imul
loope
push
mov
imul
sub
push
dec
add
mov
pop
mov
or
js
out
and
mov
repz
out
jnp
outs
xor
jecxz
fs
pop
jmp
xchg
stc
lahf
xchg
add
imul
sbb
push
add
mov
mov
mov
cmps
fcmovnb
lahf
fistp
sbb
(bad)
leave
sbb
add
rcr
stos
jl
cli
push
cmp
lock
js
repnz
mov
cwde
sub
cmp
cdq
push
js
xor
push
pop
test
loop
adc
and
jge
mov
pop
popa
imul
imul
sti
cli
push
aas
mov
pop
pop
out
adc
(bad)
je
rcr
sbb
inc
imul
je
into
loope
adc
add
ja
fcmovnu
lahf
sti
xchg
pop
mov
cmp
sar
adc
mov
jmp
aaa
inc
mov
icebp
ret
xchg
shl
xor
fidiv
mov
add
xchg
dec
bound
jbe
sti
jmp
mov
mov
inc
lods
addr16
ins
xor
imul
movs
jo
aaa
pop
imul
lds
(bad)
xacquire
outs
jg
xchg
es
mov
or
mov
push
inc
stos
xor
nop
or
(bad)
in
sub
je
pop
or
push
fwait
jb
adc
mov
ins
dec
xchg
mov
jle
adc
hlt
imul
inc
sti
xchg
or
xor
frstor
mov
popf
mov
cdq
fstp
popf
enter
rol
mov
sahf
inc
out
dec
iret
sbb
jb
or
xor
pop
xchg
mov
lea
sbb
inc
xor
and
jg
sbb
adc
xchg
lods
fwait
ret
retf
mul
ror
imul
movs
xchg
sub
call
and
test
and
pop
jne
push
fisubr
mov
test
sub
addr16
mov
mov
bound
aas
push
cdq
rcl
out
loopne
xor
xchg
es
in
stos
sub
(bad)
daa
out
xor
mov
jae
out
pop
fs
test
(bad)
cdq
cli
fwait
pop
std
stc
repnz
jbe
fsub
sbb
mov
add
bound
inc
lds
pop
je
dec
mov
icebp
jb
jg
out
(bad)
ins
pop
repnz
outs
xchg
xchg
push
fsubr
enter
add
cli
sub
add
sti
and
xor
mov
or
xchg
(bad)
xor
imul
ss
cmp
stos
addr16
shl
in
enter
mov
jmp
ins
cmp
in
adc
mov
mov
cmc
sbb
push
jp
inc
cmp
and
inc
popf
clc
mov
mov
mov
or
jb
repnz
jecxz
cwde
fwait
mov
sub
imul
stos
(bad)
fdiv
fsubr
adc
ss
fist
jmp
ja
jmp
mov
mov
out
cmps
ret
cld
aaa
daa
mov
push
fiadd
shl
retf
xlat
bound
fwait
xchg
fcomi
adc
jmp
push
ret
sub
in
mov
out
pop
ds
out
call
aas
and
push
pop
cmp
inc
scas
xor
push
mov
or
mul
pop
mov
add
or
add
cmp
out
nop
int
iret
mov
fisub
idiv
jmp
(bad)
dec
sbb
ja
ret
(bad)
mov
push
rol
arpl
nop
add
mov
retf
or
push
imul
push
cmp
aad
ins
call
jecxz
shl
push
jnp
neg
clc
dec
pop
repz
mov
ss
dec
addr16
into
stos
movd
inc
or
data16
inc
or
in
lahf
loopne
(bad)
push
push
retf
test
lds
jecxz
call
pop
out
push
jp
or
ss
jb
push
clc
inc
mul
and
cmps
mov
push
push
ret
dec
fst
adc
scas
jbe
test
jae
out
sahf
aad
add
and
cdq
adc
mov
sub
fidiv
mov
je
inc
cld
outs
mov
xchg
push
push
sub
aad
cmp
movs
fisub
xchg
call
shl
shr
mov
xchg
and
pop
scas
sub
(bad)
xchg
jbe
or
call
js
cmps
jl
cs
dec
xchg
iret
lods
and
addr16
jmp
mov
cmp
cmps
enter
data16
mov
or
imul
cmps
mov
mov
repz
push
enter
aam
add
adc
jmp
mov
jmp
inc
cs
pop
jmp
scas
stos
out
jo
or
inc
(bad)
cmp
cli
push
sbb
jecxz
adc
sub
inc
xchg
int
and
xchg
mov
sbb
pop
scas
popa
das
(bad)
xor
outs
loop
ret
mov
add
sbb
cmp
xchg
arpl
push
mov
adc
(bad)
fwait
rcr
mov
jae
or
(bad)
sbb
cmp
cmp
mov
jae
lods
lock
xchg
hlt
scas
add
or
call
std
lds
add
div
outs
and
mov
(bad)
or
repnz
retf
sbb
xchg
(bad)
out
pop
fst
test
xor
push
xchg
hlt
mov
push
out
ficom
imul
cli
std
or
push
ja
repz
jecxz
fidivr
jle
push
aas
mov
xor
push
cwde
(bad)
repz
repz
jp
pop
mov
adc
pop
jo
mov
popa
cmp
lods
or
pushf
push
xchg
inc
ins
(bad)
cs
ins
add
xchg
pop
(bad)
jmp
pop
mov
inc
out
mov
(bad)
or
sub
aas
dec
adc
push
mov
fmul
cmp
daa
out
mov
test
lods
xor
inc
lods
jne
arpl
mov
in
inc
fiadd
shr
mov
div
jmp
cmp
in
mov
mov
out
jb
inc
jmp
rcl
fxtract
imul
stos
jns
in
push
call
xchg
jns
xor
xor
mov
dec
push
mov
add
add
mov
outs
aad
push
imul
arpl
push
cmp
pop
call
dec
int3
push
call
adc
add
sti
iret
pop
int
and
retf
dec
es
aad
and
(bad)
push
hlt
repnz
push
jb
sbb
shl
xchg
test
xor
sbb
mov
in
test
pop
or
jge
sbb
dec
(bad)
and
sbb
scas
pop
pop
pop
cmp
mov
retf
inc
xor
adc
add
push
pop
xor
repz
fnstcw
inc
stos
mov
add
mov
cmps
sub
jge
jecxz
dec
jp
sub
dec
call
scas
jo
pop
xchg
sbb
dec
repz
and
jecxz
jp
and
inc
in
push
mov
rcl
stos
ret
dec
repnz
in
cs
push
cmp
sar
fidiv
jecxz
dec
call
outs
or
push
fwait
push
sbb
add
adc
xchg
out
scas
sbb
ds
dec
inc
xadd
and
add
js
in
pop
mov
and
dec
push
push
mov
push
inc
push
fdivr
enter
xor
pop
and
pop
ss
loope
mov
or
push
lahf
cmp
add
and
push
(bad)
mov
call
div
stos
shl
lock
sub
ficom
or
out
and
push
dec
sete
push
daa
ins
cli
sbb
imul
nop
sub
push
je
(bad)
xchg
das
pop
adc
fistp
sbb
jbe
pop
movs
push
fisubr
test
cmp
aas
pop
jle
jmp
add
fwait
mov
push
repz
mov
push
lahf
sub
push
jae
sub
sbb
shl
(bad)
jns
ficom
adc
mov
adc
push
mov
retf
add
mov
sub
mov
or
fcom
and
sub
push
clc
or
inc
popf
inc
and
movs
push
call
ret
jge
sti
fisttp
xchg
mov
imul
out
(bad)
clc
inc
push
ds
jge
fiadd
xchg
cwde
cmp
pushf
push
cwde
es
cmp
(bad)
cmp
jle
cmps
cmp
sub
push
les
inc
add
hlt
dec
jp
cmc
aam
je
dec
leave
data16
adc
push
rcl
pushf
inc
adc
fidiv
popf
push
sbb
mov
inc
sbb
cmp
addr16
retf
test
sub
sub
push
cmp
add
ret
mov
inc
jecxz
sub
addr16
repz
pop
popa
jp
or
sub
into
(bad)
call
push
cmp
clc
push
into
arpl
fwait
mov
retf
sub
(bad)
mov
or
daa
sahf
dec
dec
shl
push
ins
sub
rcr
mov
pop
fldcw
jns
test
fwait
push
sbb
sub
ds
or
sub
pop
and
ss
adc
arpl
repz
lahf
pop
dec
aaa
out
sub
bound
inc
int3
mov
and
xor
and
jmp
xor
xchg
mov
sub
mov
xchg
bound
jmp
xchg
dec
loop
jae
push
xchg
add
sub
scas
(bad)
jecxz
lahf
cmp
jg
push
lods
add
das
xchg
push
not
jl
out
fsub
cli
aaa
sub
jnp
pop
addr16
(bad)
(bad)
nop
out
sti
repz
aas
test
push
cli
xchg
adc
mov
cli
dec
stos
fistp
out
mov
sub
pop
sub
jp
jo
sub
sbb
(bad)
and
(bad)
aaa
ret
mov
pop
into
stos
imul
inc
mov
mov
and
sbb
and
inc
hlt
adc
dec
not
call
or
cmp
retf
jbe
or
stos
loop
loopne
shl
(bad)
and
dec
sbb
addr16
push
imul
lock
popa
inc
cld
ss
mov
sti
or
sub
mov
or
inc
jmp
add
cmp
shr
or
inc
sbb
fbld
not
fld
adc
gs
lea
and
ret
jge
mov
mov
dec
cmp
fsubr
cs
into
sahf
cmp
push
loop
icebp
or
lahf
add
jle
jmp
xchg
dec
int
fiadd
mov
ins
mov
pop
test
jecxz
fist
(bad)
fcom
das
and
in
push
enter
cmc
jge
nop
adc
dec
shl
ror
mov
dec
movs
add
fidivr
aas
push
cwde
push
call
mov
cmps
adc
fmul
mov
dec
mov
jns
sub
and
or
jno
retf
sbb
jecxz
les
mov
xor
push
pusha
pshufw
and
cmp
jp
dec
lods
mov
out
push
(bad)
cdq
out
ret
cli
aas
mov
push
adc
fdiv
cmp
ins
ds
int
xchg
fmul
clc
scas
jnp
jmp
and
xchg
rol
leave
mov
mov
movs
add
xchg
mov
and
mov
aad
je
xor
bound
iret
jp
add
fwait
cmp
pop
pop
xchg
cmp
ret
push
scas
pop
push
std
mov
pop
fistp
or
push
out
loopne
and
lods
adc
push
call
cs
pop
mov
mov
or
mov
sub
mov
in
outs
pushf
shrd
ja
call
retf
xor
in
(bad)
arpl
aam
call
out
repnz
or
or
mov
cli
dec
and
push
xchg
stos
cli
sbb
xor
xchg
es
and
cmp
pop
lods
jmp
je
out
push
push
and
cmps
pop
mov
sbb
pusha
ret
push
sbb
sub
call
jne
pop
adc
and
adc
cmps
add
xor
addr16
pop
addr16
push
(bad)
pop
adc
lds
imul
pop
adc
jnp
xor
or
dec
std
mov
cli
jo
xchg
aas
cmp
push
xor
or
call
adc
pop
stc
jmp
sbb
sbb
mov
push
mov
pop
(bad)
mov
xor
mov
rol
test
lahf
shl
xor
mov
(bad)
out
dec
jg
add
and
push
test
shl
popa
jmp
sbb
les
mov
sub
loopne
test
pop
xchg
in
fdivr
xor
add
mov
xor
jge
in
adc
idiv
or
pop
out
jp
mov
cmp
adc
push
shr
xor
lea
cli
shr
and
and
inc
push
jbe
jnp
pushf
mov
int3
arpl
fwait
dec
nop
(bad)
loope
dec
and
ret
cmps
ret
mov
jnp
push
mov
shl
inc
(bad)
cdq
aas
(bad)
push
jnp
xchg
mov
dec
add
mov
fidivr
out
and
inc
outs
div
inc
inc
out
fsub
cmps
sub
sub
dec
or
sub
fcmove
enter
shr
retf
xchg
cld
out
jb
xor
retf
cmp
dec
arpl
mov
mov
sub
inc
(bad)
inc
ror
fiadd
fwait
shr
jmp
aam
loope
and
in
ja
or
retf
fmulp
push
pop
test
retf
rol
and
inc
xchg
pop
jmp
push
inc
sub
jbe
(bad)
push
xchg
mov
adc
push
xlat
dec
cli
add
repz
sbb
pop
(bad)
mov
icebp
or
adc
(bad)
push
pop
bound
scas
test
cmp
(bad)
sub
div
and
rcr
ret
pop
pushf
popa
jecxz
pop
mov
push
out
mov
cmps
adc
xor
and
push
aas
mov
rcr
mov
jnp
pop
cld
stos
xor
(bad)
xor
and
push
mov
pop
lahf
sub
repnz
out
outs
cs
adc
aaa
inc
pop
inc
adc
adc
adc
adc
jnp
dec
loop
jb
cmp
add
add
lea
dec
test
xchg
(bad)
dec
in
(bad)
inc
xchg
pop
xchg
je
mov
ins
in
inc
and
retf
test
cmp
cld
dec
xchg
adc
jbe
jne
mov
sar
inc
mov
cmp
jg
pusha
int3
fistp
add
ins
retf
mov
xchg
jmp
mov
repz
mov
rcl
mov
iret
sub
lods
mov
inc
and
or
mov
mov
or
adc
jne
arpl
mov
pop
cli
push
mov
pop
mov
iret
or
(bad)
push
stos
xchg
push
pop
(bad)
dec
rcr
mov
inc
sar
mov
in
jecxz
rcl
add
pop
(bad)
(bad)
sbb
outs
push
xor
aas
lods
mov
inc
idiv
out
fild
or
pop
xchg
inc
cmps
cmps
(bad)
outs
inc
(bad)
push
mov
adc
push
xchg
push
pop
adc
out
repz
mov
inc
in
push
dec
lea
jns
jbe
out
and
fisttp
enter
dec
(bad)
mov
sti
pop
out
aam
add
fidiv
stos
sub
dec
pop
inc
dec
cld
mov
aam
in
dec
sub
gs
cs
aad
fimul
push
imul
and
cld
and
xchg
push
arpl
inc
mov
cwde
xor
ja
es
jecxz
inc
test
inc
xchg
stos
mov
sub
inc
rol
xor
jp
fsub
xchg
imul
call
pusha
aam
sub
fld
pop
and
and
cmp
dec
pop
or
fmul
push
cmp
add
mov
xor
pushw
mov
push
sti
mov
call
(bad)
scas
push
sar
retf
outs
das
push
sti
out
mov
mov
mov
push
jg
inc
xlat
inc
adc
xor
arpl
arpl
cvtdq2ps
push
jecxz
inc
dec
arpl
das
push
in
lods
fst
mov
xor
jmp
call
mov
outs
cli
push
popw
stc
and
data16
xchg
xchg
into
and
inc
je
sbb
sar
movaps
dec
retf
sar
pop
push
cvtdq2ps
dec
iret
stos
add
sahf
jp
bound
jb
fsubrp
rcr
(bad)
dec
mov
out
mov
xchg
shl
in
out
jp
ss
pop
daa
(bad)
push
mov
mov
add
xchg
mov
jl
(bad)
jp
stc
stos
fstp
std
sbb
inc
aam
mov
push
mov
pop
in
lahf
adc
push
sub
push
movs
outs
and
xchg
add
jmp
pop
(bad)
mov
pop
repz
inc
mov
sbb
dec
fcmovnu
or
inc
out
jmp
mov
adc
dec
out
push
imul
xor
dec
pop
cmp
repz
pop
dec
call
sub
mov
adc
mov
ffreep
xor
pushf
outs
mov
cli
pop
clc
fmulp
sub
or
jmp
push
in
inc
ds
cs
jp
mov
sbb
jecxz
cwde
dec
pop
arpl
stos
jb
test
xchg
retf
xor
mov
mov
xchg
adc
rcl
daa
int3
pop
shl
jns
add
je
popf
ds
sbb
scas
fild
inc
sub
(bad)
test
xor
pop
pop
jnp
push
or
nop
cli
pop
addr16
data16
and
inc
ror
ret
add
ds
jne
dec
jp
ins
jo
hlt
ss
sub
or
jle
jmp
xchg
sub
sbb
mov
jecxz
xchg
sti
sbb
mov
loopne
cdq
out
xor
leave
mov
dec
mov
sti
das
add
xchg
in
sub
dec
jecxz
sbb
and
cld
arpl
idiv
inc
mov
retf
mov
mov
out
pop
cwde
jnp
adc
ficom
pushf
cld
mov
sub
or
and
cwde
adc
out
pop
fbld
jbe
push
mov
adc
and
hlt
push
xor
fild
jecxz
(bad)
lds
mov
jp
xchg
fadd
shl
dec
push
movs
retf
test
sub
cmp
sbb
leave
scas
sbb
xchg
add
stos
adc
sub
cmp
push
jbe
jp
sbb
sub
ficomp
clc
mov
adc
mov
push
and
jp
inc
adc
sub
and
mov
in
aas
rcl
mov
xor
dec
jne
mov
(bad)
sbb
ficomp
push
sub
adc
fstp
faddp
mov
popa
dec
iret
outs
add
xor
cli
outs
outs
pop
out
mov
cli
cmp
out
fnstcw
dec
out
cs
out
mov
fcom
xchg
out
(bad)
fistp
inc
cdq
and
pop
dec
lods
clc
cli
inc
mov
push
test
stc
jle
je
gs
scas
pop
(bad)
xchg
addps
scas
fidivr
iret
mov
cwde
push
add
inc
ss
cmp
test
out
mov
loop
ds
shl
shr
lahf
aad
retf
scas
adc
clc
inc
ret
and
(bad)
xlat
pop
xchg
jp
out
ret
and
sbb
out
inc
das
dec
pcmpeqw
retf
dec
cmc
or
(bad)
mov
pop
pop
popf
add
imul
add
fimul
test
test
ret
rcl
mov
push
and
xchg
addr16
jmp
cwde
daa
mov
sbb
adc
adc
push
in
aaa
stos
(bad)
cmp
int3
clc
(bad)
pusha
add
in
and
dec
fwait
add
and
call
cmp
retf
fs
push
sub
push
push
shl
(bad)
ins
sti
sahf
dec
repz
pop
shl
(bad)
sbb
lock
pusha
push
sub
retf
outs
mov
push
add
cmp
push
pop
and
cmp
dec
retf
or
pushf
repnz
aaa
lahf
jmpw
mov
out
fwait
sar
xchg
lock
mov
mov
test
sbb
sbb
cli
jnp
loope
rcr
and
push
xchg
mov
dec
sub
sti
das
mov
push
btc
push
adc
or
loopne
in
jmp
jmp
imul
movs
movs
ror
sub
mov
addr16
jge
into
mov
and
fwait
cmp
aaa
arpl
shr
mov
xor
aaa
xchg
mov
push
xchg
rep
push
scas
push
cmp
ficom
div
dec
lods
mov
ret
xor
shr
xchg
mov
iretw
aaa
sahf
sbb
fidivr
mov
rol
and
add
loop
ror
jb
sub
cli
jg
mov
jge
or
xor
stos
ds
ror
ret
xchg
cmp
sbb
fist
dec
sbb
mov
jb
loopne
mov
pop
push
mov
jae
xor
xchg
fwait
xor
lahf
jae
cmp
sbb
out
xchg
in
or
rol
cmp
jnp
pop
adc
aam
pop
jnp
imul
xchg
es
and
das
mov
repnz
xchg
cld
jo
dec
xor
push
or
jb
jne
into
gs
mov
pop
or
addr16
js
jno
push
push
xlat
sub
(bad)
int
cmp
dec
and
mov
je
addr16
mov
pop
ret
mov
push
mov
mov
adc
das
xor
iret
xchg
pop
rol
lahf
jnp
mov
mov
call
lods
jns
fcomp
and
push
pop
or
push
adc
daa
pop
scas
daa
push
sti
cdq
jecxz
in
sbb
fisttp
clc
or
jmp
repnz
jle
jle
(bad)
jg
icebp
dec
pop
fimul
push
cwde
dec
fwait
cmps
(bad)
inc
dec
out
dec
pop
out
fwait
pop
xor
out
dec
fld
imul
ret
jo
stos
jae
and
mov
inc
cmp
cwde
out
cmp
cmp
stc
push
pop
pop
sbb
or
add
jecxz
cmp
mov
mov
sub
mov
xchg
xor
mov
out
push
bound
push
sbb
fprem
dec
jecxz
movs
sub
or
(bad)
cs
xchg
fiadd
inc
arpl
out
out
xchg
xor
pop
in
punpckhbw
out
or
pop
and
mov
jge
mov
mov
mov
daa
fcomp
test
add
adc
outs
jecxz
ror
test
addr16
mov
push
test
enter
loop
xlat
mov
loopne
(bad)
aas
pop
lock
pop
das
xchg
xchg
xchg
out
std
in
adc
enter
jns
mul
xchg
pop
outs
repz
les
xor
and
adc
add
add
fbstp
sub
pop
xchg
daa
inc
and
mov
inc
add
fisttp
add
add
hlt
enter
pop
xchg
push
lea
icebp
mov
inc
out
das
inc
xor
xlat
data16
aas
enter
into
push
aaa
out
or
inc
(bad)
xchg
add
fcomp
inc
adc
or
cvtdq2ps
sbb
out
mov
imul
and
std
fild
cmp
sbb
xor
pop
stos
pop
and
xor
ins
inc
in
retf
outs
mov
sub
not
or
call
inc
adc
(bad)
sbb
xchg
cmp
cmp
popf
ins
call
jl
mov
push
(bad)
test
adc
movs
out
push
xchg
loope
sbb
adc
outs
popf
jle
xchg
imul
inc
ss
daa
jae
sub
pop
mov
fstp
sbb
mov
mov
movs
cmps
pop
movzx
mov
and
mov
dec
aas
test
push
jne
setp
cli
inc
inc
outs
mov
(bad)
pop
ds
sbb
ja
fwait
shr
ja
xor
call
dec
and
(bad)
push
mov
arpl
sbb
stos
cli
(bad)
mov
xchg
push
pushaw
jl
daa
out
inc
jle
les
mov
mov
jmp
adc
jb
jmp
(bad)
adc
addr16
fidivr
adc
ret
jp
pop
mov
fidivr
push
cmp
inc
in
cli
xor
jbe
sbb
push
mov
pop
mov
ss
xchg
adc
push
xor
mov
fidivr
push
jb
or
mov
call
ret
out
mov
mov
sub
jmp
push
in
out
jle
out
fcmovnb
inc
iret
jp
xchg
out
test
cmc
mov
mov
inc
fwait
xchg
inc
inc
add
cmp
adc
enter
addr16
mov
jns
mov
dec
jae
jg
sahf
inc
xchg
sbb
bound
sar
in
(bad)
loope
lock
push
addr16
pop
mov
inc
and
push
out
sub
aas
inc
test
add
pop
(bad)
scas
fsubp
sub
inc
jmp
mov
cmps
ds
scas
into
sbb
test
fisub
scas
sbb
add
push
test
sbb
xchg
dec
and
adc
adc
(bad)
(bad)
xchg
stos
stos
das
mov
dec
fistp
out
fwait
ss
cmp
movs
adc
dec
xchg
add
jmp
in
movs
cld
inc
add
repz
cmp
or
inc
ja
test
movs
in
div
inc
in
aam
bswap
repnz
(bad)
arpl
xchg
mov
xchg
test
sar
jmp
push
not
jbe
add
mov
add
and
stos
mov
add
std
mov
sbb
add
fwait
or
cli
jge
xor
push
mov
mov
dec
push
gs
pusha
cmp
sbb
mov
cmc
cmps
sti
test
adc
push
scas
push
(bad)
cmp
dec
pusha
mov
mov
inc
int
shl
mov
imul
(bad)
ror
jmp
or
sub
cmp
ja
inc
jmp
xchg
test
imul
jecxz
aam
pop
push
in
fwait
mov
jnp
xchg
mov
or
xor
xor
mov
xlat
dec
mov
push
js
inc
shl
or
inc
or
pop
mov
gs
mov
pushf
inc
jp
sub
movs
loop
ret
add
dec
leave
pop
fdivr
dec
xchg
sbb
(bad)
push
cmp
sar
jb
dec
out
gs
jmp
scas
lods
shl
ret
and
pop
cli
retf
test
leave
(bad)
aam
aad
fadd
mov
shl
pop
xchg
loope
mov
fidiv
cmp
xchg
(bad)
cmp
mov
xor
in
mov
or
pop
es
jae
push
xor
frstpm(287
or
mov
pushf
and
in
jmp
push
std
out
pop
jbe
mov
pop
mov
xchg
adc
sbb
or
mov
pop
push
pop
retf
mov
dec
shl
mov
aam
and
xor
ror
popa
cmp
out
call
popf
popa
popa
and
xchg
mov
popa
fadd
mov
mov
fist
daa
int3
and
mov
imul
sbb
(bad)
ja
sub
sbb
into
(bad)
cmp
data16
pop
cld
and
je
push
stos
clc
inc
mov
rol
in
scas
inc
sub
adc
mov
lds
sub
add
sub
and
pop
mov
mov
cmp
retf
and
sub
shl
sar
mov
test
lods
aad
jecxz
and
hlt
push
jmp
push
mov
dec
in
xchg
xchg
lahf
shl
xor
mov
xor
pop
jecxz
pop
push
jecxz
scas
mov
int3
mov
adc
jb
push
sbb
sub
out
xor
pop
fbld
mov
(bad)
mov
outs
sbb
and
mov
mov
pop
mov
jmp
dec
inc
push
aad
cli
adc
add
cmps
xor
mov
mov
mov
jecxz
push
mov
ret
ins
xlat
and
pop
stos
mov
push
adc
inc
add
mov
adc
gs
sub
and
aad
and
hlt
xchg
xchg
mov
pop
and
pop
mov
cmps
adc
adc
imul
mov
xor
cli
and
cmp
cmps
dec
add
scas
jl
out
(bad)
into
xchg
sti
lds
ret
xchg
xor
mov
or
ja
inc
cli
out
xchg
jle
add
out
mov
movs
add
dec
sub
ins
into
push
jge
sbb
mov
pop
aad
call
mov
std
cmp
xchg
inc
out
lock
or
fisttp
xchg
lahf
movs
(bad)
mov
jns
mov
fcmove
add
mov
push
lahf
xchg
mov
jg
stos
into
push
std
pop
inc
push
inc
sti
inc
popf
retf
sti
fs
cmp
dec
test
and
or
pop
pop
imul
stos
in
hlt
pushfw
jne
out
cmp
mov
std
and
push
add
or
scas
lea
lock
jb
push
push
scas
inc
and
adc
out
cmc
cs
pop
dec
in
inc
pop
or
imul
sbb
in
rcl
into
repz
jmp
mov
fstp
dec
mov
and
pop
pop
sti
mov
add
idiv
imul
inc
dec
sar
dec
jecxz
mov
or
adc
pop
cmp
imul
and
sti
fcmovbe
imul
mov
lds
xor
mov
jg
out
pop
out
mov
icebp
push
movs
pop
pop
inc
mov
jbe
push
xchg
ins
mov
push
stos
xor
cwde
daa
push
inc
mov
push
sbb
jecxz
sbb
xor
das
or
call
jne
adc
jp
xor
mov
jae
cmps
enter
int
jnp
push
rcl
jecxz
mov
rcr
test
bound
int
je
outs
ficomp
mov
ret
mov
mov
jmp
mov
fiadd
cmp
mov
jnp
mov
add
fdivr
pop
adc
dec
out
xchg
lahf
push
inc
and
mov
sbb
or
punpckhbw
fwait
loopne
mov
adc
xlat
jb
and
sti
inc
(bad)
xor
adc
sbb
adc
ret
push
inc
sbb
cmp
ja
lods
push
jg
sub
shr
xchg
(bad)
ja
mov
dec
ins
data16
mov
mov
and
inc
sbb
jle
(bad)
cli
call
pop
push
sbb
retf
dec
jle
rcl
icebp
dec
cmps
out
jo
rcr
push
dec
and
sub
cmc
xor
fsub
int3
icebp
add
scas
pop
(bad)
jg
cwde
adc
stc
cmp
xor
lods
dec
inc
test
les
adc
fwait
pop
add
addr16
inc
cmps
psubb
movs
jmp
repnz
aaa
sbb
add
ror
lods
pop
fidiv
inc
imul
rcl
fadd
cwde
ret
lods
cli
mov
outs
add
cs
(bad)
ror
add
adc
loopne
loop
aaa
mov
cmc
ror
dec
jne
int3
cmp
fdivr
lods
es
xor
lock
inc
test
push
lock
xchg
test
std
mov
or
mov
add
push
lock
lods
push
cmps
mov
repz
ds
hlt
js
xchg
pop
mov
mov
adc
or
cmp
fidivr
pushf
pop
cdq
sbb
mov
cmps
sbb
jp
bound
jmp
add
cmp
hlt
pop
jecxz
out
push
ror
xor
inc
clc
inc
aaa
into
jmp
in
pushf
mov
pushf
push
leave
xchg
daa
dec
retf
jno
bound
push
xor
lea
out
adc
mov
call
cmp
jae
push
cmp
and
adc
or
lahf
mov
cmp
mov
jbe
mov
jp
xchg
inc
movs
and
sbb
ret
cmp
sub
mov
mov
repz
rol
movs
shr
data16
cmc
pop
retf
xchg
mov
fwait
(bad)
pop
xchg
ds
shr
sub
ret
hlt
pop
mov
(bad)
stc
mov
retf
ss
add
cmp
push
inc
adc
xor
enter
stos
xor
jle
stos
sub
dec
mov
xor
scas
js
imul
push
lods
icebp
mov
cmps
in
and
pop
adc
adc
xor
in
repz
dec
cmps
sbb
inc
fmul
sahf
(bad)
dec
mov
adc
lds
push
adc
jo
mov
cmp
out
add
gs
ins
xchg
add
xor
and
sahf
lods
(bad)
pop
push
and
ffree
ret
mov
popf
ds
fbld
adc
stos
push
inc
mov
dec
pop
mov
xchg
dec
ret
imul
pop
push
es
scas
idiv
or
sti
and
mov
mov
mov
sub
jl
sbb
jg
jmp
push
jno
adc
adc
xor
cld
stc
das
and
out
push
mov
cwde
mov
pop
inc
dec
loop
sti
test
mov
cdq
in
imul
and
lahf
dec
cmps
xchg
mov
(bad)
adc
fadd
lock
in
ficomp
(bad)
fsub
pop
jge
or
test
xor
shr
ret
jg
pop
and
xchg
pushf
ja
loop
(bad)
retf
jae
cmc
cwde
imul
popa
adc
xchg
xchg
cmp
pop
cmp
xor
xchg
int3
add
mov
xchg
inc
xchg
push
stos
jge
sbb
es
imul
push
xchg
imul
mov
and
sar
fcomp
adc
out
fwait
popa
sti
lods
sub
mov
sahf
in
inc
mov
sub
xchg
movs
(bad)
and
mov
push
xor
sub
and
aaa
adc
ss
pop
xor
(bad)
retf
push
xor
loop
mov
leave
pop
mov
mov
adc
cmp
xchg
add
das
mov
leave
out
xor
push
sub
mul
mov
pop
dec
repnz
xchg
into
movd
outs
scas
fimul
jle
cmps
movd
mov
outs
outs
fwait
or
or
add
mov
cli
sub
mov
cs
mov
call
(bad)
and
dec
fucomi
das
mov
mov
cmp
(bad)
outs
out
mov
cmp
cmp
das
sub
outs
push
mov
stc
mov
arpl
(bad)
in
mov
push
sub
jnp
mov
jle
mov
lahf
daa
cmps
jle
xchg
pop
(bad)
cmp
dec
stos
pop
dec
cmp
push
mov
and
out
iret
cld
in
js
xor
add
mov
into
push
jle
mov
cs
lock
test
retf
jae
out
test
xor
adc
(bad)
lods
or
pop
inc
pop
fwait
jmp
push
fdivr
jmp
pop
sub
shl
mov
ret
xchg
in
movd
rol
mov
dec
pop
cli
das
push
or
mov
(bad)
outs
into
mov
adc
or
imul
mov
push
mov
test
call
cmp
dec
mov
cdq
and
mov
jns
sbb
cli
push
xchg
ds
adc
adc
cli
mov
fiadd
or
pop
ins
shl
call
adc
push
rcr
cmp
and
fidiv
add
adc
xor
cmp
xchg
sbb
fst
pop
jns
int
stc
fst
ds
pop
pop
cmp
sahf
dec
jne
pop
fimul
sbb
ja
aad
adc
jp
mov
cli
add
xchg
xchg
ds
shl
rcl
push
mov
adc
pop
mov
jmp
rol
fisub
and
pop
sub
inc
pop
hlt
pop
cdq
mov
in
pop
jbe
sub
shl
test
pop
out
aad
mov
lahf
aad
xchg
and
retf
arpl
jp
mov
jae
mov
mov
sub
push
cmp
cli
stc
ficomp
fbstp
or
push
arpl
mov
dec
xor
pop
fld
pop
mov
les
mov
popf
sub
xchg
xchg
cli
icebp
(bad)
fisttp
aad
mov
cmps
shl
cmp
neg
cmp
dec
jmp
mov
jecxz
(bad)
jp
aas
aad
inc
cli
push
and
cli
mov
stos
jne
xchg
pop
sahf
cmc
push
mov
shl
mov
mov
dec
lods
jo
rcr
fwait
out
div
(bad)
jnp
pop
xor
push
sti
cdq
(bad)
ja
getsec
ficomp
sub
jp
scas
xchg
mov
jecxz
adc
pop
ja
(bad)
clc
cmp
jo
jecxz
xchg
adc
aaa
outs
and
pop
div
sti
sub
xchg
aaa
xrelease
fidivr
sti
cmp
jbe
ret
xor
dec
div
mov
stos
repz
pop
daa
xchg
pop
jae
adc
fisttp
outs
div
push
lock
pop
push
push
xor
jnp
jnp
jp
jbe
imul
mov
and
xor
push
sar
ja
ja
add
mov
popa
add
jl
push
lock
cmps
jnp
sub
or
mov
push
sub
jnp
clc
cmps
jo
mov
(bad)
(bad)
xor
push
pop
sub
or
int3
ja
div
imul
arpl
outs
gs
mov
add
movs
mov
psubusb
mov
div
jo
cmp
jmp
icebp
push
jmp
sub
imul
imul
jae
test
mov
inc
dec
ins
pop
es
sub
push
repnz
pop
(bad)
cli
mov
push
inc
fstp
jecxz
add
cmps
dec
cmps
mov
js
cmp
push
pop
daa
xor
add
xchg
shl
lock
adc
cmp
dec
mov
and
sub
ins
movs
in
out
add
out
movs
in
cmps
in
and
dec
sahf
sub
fist
out
movs
lods
fwait
imul
sub
and
sub
cwde
add
sbb
sbb
pop
sbb
loop
addr16
cmp
addr16
ins
sub
jmp
hlt
out
in
in
xor
(bad)
out
scas
daa
out
repnz
ins
js
push
cwde
sbb
loopne
xor
movs
mov
in
fs
jg
and
rol
xor
mov
and
mov
mov
jns
sub
fs
pusha
and
sub
ins
push
movs
stos
xchg
loop
iret
mov
in
in
mov
jmp
shl
mov
push
push
ss
fistp
dec
test
xor
dec
lods
scas
js
mov
ins
pusha
call
dec
int
(bad)
pop
lahf
in
loopne
ins
das
push
push
in
push
js
popa
movs
ins
movs
adc
sbb
lds
out
dec
mov
outs
mov
push
mov
in
aam
dec
xchg
movs
cmp
(bad)
inc
call
mov
stos
add
and
stos
sub
in
scas
in
in
fist
out
cli
scas
cmps
fisubr
pop
test
add
mov
ror
out
pop
and
pop
jae
ds
retf
ds
clc
clc
out
pop
(bad)
cld
bound
clc
dec
and
loope
add
ret
fcomp
mov
scas
dec
xor
jecxz
mov
cs
xor
mov
mov
es
sbb
test
pop
mov
mov
rol
lods
push
jbe
sub
jae
xchg
sub
mov
sub
mov
daa
sub
fdivr
cmp
mov
fstp
pusha
(bad)
cmps
out
cmp
es
inc
test
sub
push
das
jno
outs
(bad)
ret
xor
inc
stos
ds
test
pop
jne
stos
mov
sbb
repz
aas
movs
es
fisub
mov
xchg
data16
xchg
jne
jmp
jecxz
xlat
in
xor
mov
cmps
ficom
mov
and
lahf
out
and
jp
mov
ja
fdiv
mov
(bad)
stos
mov
pop
cmp
push
jmp
add
sti
repnz
pop
mov
repz
cmp
stos
div
push
jbe
and
xor
repz
stc
jae
outs
neg
cmps
mov
pop
je
mov
or
mov
pop
lods
adc
push
push
cmps
xchg
shl
ja
pusha
int3
es
dec
jno
jae
jne
add
mov
xlat
jnp
push
inc
jo
out
pop
inc
add
inc
(bad)
sti
jno
and
je
mov
aaa
lods
repz
ret
mov
cli
add
(bad)
jmp
je
iret
loop
enter
scas
in
sbb
mov
mov
push
pusha
test
les
fwait
movs
out
in
inc
mov
push
pop
les
test
je
xchg
ret
sub
je
shr
ja
cld
xlat
xchg
ret
mov
pushf
scas
icebp
mov
jle
push
lahf
les
stos
cmp
xor
sbb
mov
fwait
jno
aas
cld
adc
cmp
push
ja
hlt
inc
es
xchg
cld
xchg
bswap
or
add
pop
push
or
movs
and
xchg
pop
cld
ffreep
int
push
aam
push
call
inc
fdiv
enter
sub
addr16
jmp
xchg
fs
fistp
(bad)
out
gs
ss
ins
popf
hlt
out
jl
jl
fadd
mov
push
sub
and
je
pusha
fdivr
pop
add
sub
and
push
dec
inc
bound
popa
jns
retf
data16
loope
or
jmp
addr16
mov
fcmovbe
(bad)
jb
or
popa
cwde
stc
dec
add
mov
fld
jb
ret
mov
ficomp
push
add
je
imul
sahf
push
icebp
or
mov
mov
imul
or
jmp
int3
xchg
fild
xor
jo
call
shl
inc
add
loopne
shl
loop
(bad)
mov
mov
xchg
adc
loope
cs
add
add
outs
jmp
dec
fisubr
inc
or
dec
push
dec
pop
sbb
cli
push
or
xchg
dec
fisttp
loope
(bad)
mov
adc
mov
or
stos
jb
push
add
push
call
retf
xchg
dec
ins
sub
or
imul
push
inc
xchg
dec
(bad)
cmp
xor
sub
xor
xchg
cmc
imul
out
add
hlt
adc
sub
enter
and
add
fimul
dec
(bad)
jmp
push
push
xchg
sub
call
and
add
(bad)
ror
jg
shl
xor
push
sbb
sub
dec
aas
fldenv
sahf
dec
sbb
scas
sub
dec
int
xchg
repnz
pop
inc
out
ror
cli
les
sti
xor
pop
retf
shl
xor
mov
imul
cmc
xor
dec
adc
adc
push
or
loope
and
push
shr
jmp
ret
mov
jmp
retf
fistp
out
das
gs
retf
sub
scas
dec
xchg
out
pop
mov
scas
sahf
(bad)
outs
lods
mov
mov
call
mov
mov
mov
out
pop
retf
(bad)
in
test
sbb
pop
add
jmp
leave
mov
scas
or
sub
push
dec
add
outs
outs
or
into
out
out
retf
and
and
in
out
pop
out
fst
iret
mov
jne
cwde
sbb
out
(bad)
mov
pop
lahf
scas
mov
mov
outs
lods
jmp
shr
in
int
mov
iret
push
mov
xchg
(bad)
cs
stos
cmp
test
jg
xchg
sbb
scas
push
lds
mov
call
in
or
test
retf
sub
out
dec
(bad)
jecxz
xor
call
(bad)
scas
push
(bad)
outs
mov
pop
pop
data16
(bad)
outs
cld
lds
je
or
cdq
or
mov
int3
stc
movs
gs
sbb
out
or
add
retf
out
sahf
(bad)
(bad)
scas
jbe
(bad)
jg
lahf
jle
iret
pminsw
sahf
(bad)
(bad)
scas
fimul
jle
xor
out
daa
push
pusha
xlat
scas
fimul
out
inc
into
cmc
push
out
sahf
(bad)
(bad)
scas
mov
lahf
jle
pop
unpcklps
xor
fimul
jle
pop
movd
sahf
(bad)
(bad)
scas
ficomp
outs
out
out
out
fisttp
stos
aas
scas
push
xchg
icebp
sub
mov
or
out
mov
sub
adc
outs
pop
dec
ret
outs
scas
mov
mov
dec
or
sti
add
(bad)
outs
ret
dec
idiv
scas
addr16
push
movsx
dec
std
mov
xor
ror
fimul
nop
std
cwde
mov
out
mov
lock
in
push
imul
loope
lea
clc
sub
push
cld
aas
inc
aad
cdq
ins
inc
sub
pusha
ror
and
pop
push
cdq
lods
xor
js
(bad)
cmp
mov
sti
cmc
in
sbb
or
and
and
leave
(bad)
fadd
xor
mov
icebp
mov
lods
icebp
mov
cmps
inc
out
jl
ins
xchg
clc
icebp
mov
jns
and
fsubr
mov
push
sbb
mov
cmp
daa
popf
inc
sbb
into
ins
cld
sub
sub
in
lea
repz
mov
jno
mov
mov
sbb
dec
pusha
cdq
cmp
or
les
lock
inc
pop
dec
or
loopne
cld
pop
lods
dec
push
ins
hlt
mov
shl
jl
pop
adc
in
fisub
xchg
lods
add
in
push
jp
aas
push
movs
xchg
mov
fadd
or
pusha
sbb
mov
sub
or
loopne
push
or
movs
xor
push
sub
inc
mov
mov
jge
rol
push
mov
cdq
test
mov
lods
jl
adc
clc
push
rol
lods
or
inc
xchg
ror
adc
sub
or
bound
fsubr
in
pop
cmp
ins
jle
call
lods
cmc
lods
aad
cmp
xchg
shl
push
sub
ror
inc
jge
aad
push
cmc
inc
sar
dec
in
cmp
mov
sub
jp
push
retf
xchg
and
fimul
mov
imul
rol
ds
mov
addr16
pop
sbb
and
lods
scas
ja
mov
sbb
mov
movs
pop
push
mov
sbb
sbb
neg
ja
and
or
ret
and
(bad)
outs
inc
fbld
sub
sahf
shr
xor
and
sub
retf
shr
div
fimul
cmp
jp
pop
pop
cmp
(bad)
jmp
pop
out
fucomi
jg
cmp
fisubr
stos
jg
jp
sti
retf
pop
or
outs
pop
imul
cmp
pop
out
cmp
cmp
jmp
dec
repz
jg
retf
ret
ds
pop
retf
stc
sub
retf
ret
retf
dec
pop
retf
pop
sti
push
cmp
mov
push
pop
pop
ss
fbld
(bad)
call
stos
shl
dec
sbb
xor
mov
es
fwait
ret
pop
mov
inc
ds
inc
or
pop
test
mov
dec
jp
sub
clc
ret
cmp
cmps
push
dec
cmp
cmp
mov
fiadd
and
add
data16
jb
jmp
dec
mov
jbe
mov
cwde
xchg
mov
mov
push
mov
xchg
mov
adc
hlt
xor
mov
mov
xchg
(bad)
(bad)
fdiv
mov
push
xor
call
jecxz
jg
sahf
movs
int3
push
fcmovnb
call
ins
icebp
(bad)
xchg
sahf
or
xchg
in
aad
push
and
xor
mov
jecxz
ret
retf
icebp
(bad)
rol
jno
push
pop
push
fwait
repnz
push
sub
dec
mov
fdiv
(bad)
shl
mov
ss
xor
call
lods
cmc
dec
xor
sbb
stos
fnstenv
sti
sbb
(bad)
in
dec
mov
in
sbb
cmp
mov
and
and
xlat
add
xlat
aas
push
pop
or
cmovne
arpl
jg
jae
push
sbb
sbb
fstp
rcr
xor
or
cmp
ins
or
inc
or
movs
out
inc
aam
loope
retf
dec
xchg
dec
cld
cmps
rcl
scas
pop
jmp
xchg
or
adc
or
aas
jmp
mov
jecxz
sub
pop
call
ret
mov
mov
xchg
cmp
ret
or
outs
pop
xor
cs
into
(bad)
xchg
xchg
loop
adc
dec
mov
adc
dec
mov
outs
cmp
ror
loop
push
sbb
sbb
sbb
inc
pop
add
pop
add
daa
jge
sbb
mov
and
js
add
repnz
sbb
jb
push
daa
fadd
jge
pop
add
sub
sub
fbld
lods
push
dec
sbb
push
sub
inc
popa
rol
js
adc
sub
ror
je
jno
push
inc
jno
dec
repz
shl
sub
inc
leave
xchg
in
lods
xchg
scas
push
dec
add
dec
jno
adc
cwde
jmp
push
dec
push
inc
jo
adc
xchg
fbld
inc
push
sub
sbb
iret
sbb
ret
je
add
pop
add
int
shl
jle
jno
xor
pop
lods
sbb
iret
pushf
leave
je
add
sbb
inc
popa
leave
icebp
sahf
shl
xchg
loopne
inc
add
or
mov
dec
std
mov
mov
sbb
lods
cmc
neg
jge
icebp
in
aaa
inc
add
xchg
xchg
pop
jb
loop
push
inc
add
jle
push
dec
sahf
sti
out
imul
sub
fimul
xor
ret
sbb
mov
(bad)
in
call
xlat
lahf
loop
aam
push
sbb
sbb
ret
lahf
mov
jmp
cmp
loop
in
sahf
pop
in
cmp
xchg
in
xlat
in
hlt
mov
(bad)
aad
and
rcr
mov
(bad)
aad
adc
aam
mov
aad
std
mov
shl
or
or
push
rcr
hlt
fnsave
xor
mov
cmp
aad
test
sbb
mov
ret
dec
adc
mov
test
cmp
fcomp
fs
leave
adc
jp
ret
in
push
in
mov
xchg
sahf
mov
shr
mov
xchg
sahf
mov
push
in
mov
xchg
sahf
mov
mov
xchg
cld
adc
jmp
cmps
stos
mov
and
mov
ins
ficom
adc
adc
cmp
and
pop
push
jb
arpl
push
and
imul
pop
jbe
jno
and
data16
ja
jle
push
push
adc
push
push
pop
push
dec
jne
outs
xor
sub
pop
add
pop
arpl
data16
pop
pop
sub
jbe
inc
push
pop
pop
pop
dec
jo
arpl
ins
jne
jnp
dec
addr16
addr16
arpl
ins
push
jg
push
cmp
pop
ins
pop
jno
push
pop
xor
xchg
fiadd
push
cld
adc
xchg
inc
jbe
push
inc
gs
js
aas
add
inc
xchg
es
xor
dec
adc
dec
push
cmp
or
loope
push
ret
shr
mov
pop
cwde
movntps
(bad)
add
mov
popf
cmps
mov
(bad)
mov
xor
shr
adc
jbe
inc
xor
sbb
cmp
and
sub
or
fisub
inc
jle
push
push
das
and
pop
hlt
jmp
ins
pop
adc
adc
retf
or
and
jne
sub
cmp
out
cmps
das
or
sbb
push
sub
ds
add
outs
adc
add
xor
leave
scas
cmp
imul
push
inc
push
sub
and
in
push
push
xor
and
push
adc
aas
sub
and
push
sub
aas
sbb
mov
and
jns
cmp
xor
cmp
sub
add
pop
cmp
push
pop
pop
xor
cmp
sub
xor
or
in
add
jno
pop
sub
pop
push
xor
leave
mov
push
push
jno
sbb
jmp
xor
lsl
inc
and
fmul
jle
push
daa
inc
push
push
add
popw
sub
xor
aas
sub
sub
es
test
sub
xor
aaa
inc
das
and
push
push
mov
rcr
jae
push
jns
sbb
pop
inc
rcr
(bad)
push
inc
or
dec
jge
cmp
push
adc
mov
or
cmp
pop
jns
sbb
push
or
lds
and
pop
xor
jp
inc
inc
scas
jmp
pop
fnsave
cmp
dec
sub
jp
adc
xor
push
inc
dec
xor
ds
test
push
or
sub
daa
arpl
rol
lods
daa
pop
pop
popa
pop
daa
dec
inc
add
inc
add
out
leave
xor
push
inc
or
cmp
mov
mov
es
push
sub
pop
pop
stos
mov
push
dec
adc
cmp
das
pop
cmp
or
mov
test
push
outs
xor
pop
ss
or
call
jb
pop
imul
or
xlat
fcomp
sbb
pop
or
or
ins
sbb
es
push
adc
popa
sbb
jp
adc
stos
(bad)
mov
cmp
or
or
add
sub
and
pop
inc
popa
gs
xchg
aad
dec
cmp
add
outs
adc
xor
in
aas
pop
add
dec
adc
xor
or
cli
mov
jbe
add
push
pop
or
push
or
pop
xchg
mov
aaa
dec
cmp
push
bound
mov
cmps
or
push
sub
xor
push
add
pop
sbb
and
push
sub
cmp
adc
scas
xchg
pop
dec
pop
pop
or
outs
ss
and
mov
mov
push
aaa
adc
add
in
in
lods
xchg
sbb
hlt
xlat
rol
cmp
dec
shl
int3
test
pushf
into
push
or
cmp
xchg
lods
loope
xchg
fld
xlat
sti
popf
mov
mov
(bad)
not
push
inc
(bad)
aad
mov
popf
clc
lods
xchg
aad
mov
(bad)
fist
jmp
pop
das
cmps
pop
xchg
mov
rcr
sub
out
mov
repnz
push
je
mov
mov
fwait
mov
popa
sub
mov
leave
mov
and
enter
icebp
xchg
xchg
sahf
mov
dec
push
or
(bad)
dec
cmc
fstp
mov
jo
test
(bad)
ror
push
ffreep
mov
loopne
ss
inc
ins
inc
ins
icebp
mov
adc
icebp
inc
add
add
cmps
in
or
dec
or
add
dec
mov
cmps
loopne
xor
stc
addr16
cmps
mov
test
shl
xchg
test
xchg
fs
and
jno
jl
lahf
pop
movs
ds
in
shr
cwde
jne
xor
popa
mov
cwde
gs
jno
pop
enter
and
or
inc
xchg
mov
jo
data16
adc
iret
arpl
jno
mov
cli
jo
xor
stc
push
push
mov
(bad)
bound
mov
mov
gs
xor
push
inc
pushf
sbb
inc
popf
jno
cmp
adc
cld
pop
cdq
sub
add
imul
jl
data16
dec
call
out
push
mov
sbb
add
inc
repz
sbb
les
stos
jge
push
cs
sub
jbe
pop
cmp
and
gs
outs
mov
movs
push
xor
xor
cwde
adc
jno
jle
jle
mov
mov
sbb
js
push
sub
ret
sub
add
sub
test
pop
je
imul
retf
jns
stos
daa
lahf
cmp
pop
stos
data16
add
adc
inc
jo
jge
or
cmp
test
mov
(bad)
jmp
ror
fxch
inc
push
sbb
inc
xchg
rcr
mov
je
jl
mov
in
out
mov
jae
jb
cmp
inc
sbb
add
mov
in
xchg
enter
ins
push
xor
out
sti
repnz
mov
cmp
fnstsw
clc
(bad)
(bad)
xchg
dec
pop
popa
fs
xchg
(bad)
(bad)
jmp
mov
inc
mov
shr
retf
lds
inc
dec
xchg
mov
sti
ret
pushf
scas
sub
pop
pusha
pushf
(bad)
cwde
mov
xchg
cmps
xor
addr16
mov
in
mov
xchg
push
ins
pop
(bad)
mov
test
pop
ins
pusha
inc
fld
xchg
mov
pop
arpl
or
jo
jg
xor
sahf
fdivr
jns
movs
mov
ffreep
ret
cmp
adc
cwde
xchg
mov
into
call
cmp
in
fcmovnb
lock
pushf
mov
ja
sbb
test
sti
xchg
loopne
mov
pop
inc
pop
outs
mov
(bad)
cli
add
cld
bound
adc
sub
cmps
aad
in
stos
faddp
xchg
ja
mov
idiv
fdiv
jae
or
cmps
aad
xchg
jecxz
mov
add
cmps
mov
mov
fcmovu
loop
add
cmp
(bad)
lods
mov
js
fdivr
fld
mov
jbe
jae
jno
xchg
out
mov
lahf
xchg
cmp
or
(bad)
ror
fwait
xchg
ins
cmp
and
test
cwde
mov
jbe
sbb
icebp
cmp
ret
daa
pop
and
cdq
fcomi
fiadd
mov
addr16
fwait
in
sahf
cld
call
or
mov
lock
aas
sbb
add
pop
int3
repz
cwde
in
test
fiadd
add
movs
movs
lds
cwde
fisttp
outs
pusha
inc
sbb
test
cmps
(bad)
mov
imul
test
pusha
sbb
add
mov
lods
in
cwde
loope
sub
jbe
(bad)
stc
into
mov
push
xor
sbb
mov
cmp
jnp
ror
adc
sbb
mov
and
jno
cmp
call
mov
push
sub
adc
jl
ret
lods
xchg
in
ror
jno
xchg
fwait
push
aas
push
xor
aad
inc
jmp
int3
jno
dec
aaa
lods
xor
aad
cmps
shl
(bad)
test
loope
cwde
sti
stos
inc
dec
cmps
pushf
gs
xchg
loope
retf
clc
mov
add
push
push
lahf
enter
fstp
jmp
cmps
imul
dec
or
cmp
(bad)
fdivr
(bad)
mov
sub
retf
sahf
dec
dec
adc
rol
movs
mov
(bad)
add
dec
es
and
add
mov
xchg
push
xor
xor
popa
xor
int
sahf
cmps
or
dec
or
retf
push
xor
je
imul
jns
outs
mov
mov
mov
aas
out
xchg
adc
arpl
(bad)
adc
lahf
ds
cwde
adc
lea
push
out
cmp
jb
xchg
adc
xor
sahf
jnp
cmp
loope
mov
adc
out
mov
xchg
sbb
lods
xor
cmp
pushf
push
stc
add
add
mov
jmp
cwde
lods
pop
cdq
add
push
ja
add
cmps
sbb
and
sbb
sbb
cmp
sub
call
mov
pushf
je
pushw
lods
das
mov
stc
sub
sub
xor
jl
sete
cmp
xchg
sub
std
sbb
sbb
jle
push
push
out
cld
sub
loop
mov
xchg
repnz
xor
mov
lahf
pop
lea
mov
mov
hlt
or
and
cmp
popf
ja
push
cmp
sub
sti
cmp
adc
cs
test
adc
push
mov
xchg
aas
mov
xchg
out
adc
cmp
out
icebp
pop
inc
inc
dec
arpl
dec
xchg
(bad)
(bad)
jmp
je
pop
add
pop
in
xchg
mov
(bad)
in
in
imul
dec
dec
gs
xchg
in
fst
dec
imul
push
sti
ret
call
inc
sbb
imul
hlt
ret
xchg
not
sbb
loopne
jecxz
xchg
hlt
cmc
xchg
ins
push
adc
ret
(bad)
(bad)
cli
adc
js
sbb
out
xchg
jmp
fld
int
jno
dec
ins
adc
pop
aad
into
out
adc
retf
push
adc
push
push
fsubr
sub
jmp
enter
dec
sub
in
test
nop
jl
sbb
dec
fs
fcmove
loop
in
xor
lsl
(bad)
out
popf
ror
repnz
xlat
dec
dec
push
jno
push
ins
out
aad
fst
inc
jg
adc
hlt
cmc
stc
mov
pop
sbb
jno
rcr
jbe
pop
bound
push
inc
jnp
rol
into
and
div
sbb
dec
push
adc
jmp
jmp
jle
fcom
jmp
xchg
call
jne
popa
adc
rcr
inc
adc
add
fdivrp
lahf
or
fdivr
js
jno
or
pop
stc
mov
icebp
mov
out
call
jnp
inc
(bad)
mov
lock
jecxz
and
ja
inc
(bad)
(bad)
mov
dec
aaa
add
or
dec
(bad)
repz
push
push
imul
cmp
sar
mov
xchg
lahf
in
test
add
or
dec
xchg
std
fsubr
push
or
jae
pop
stc
xchg
mov
xchg
sti
mov
add
fdivr
xchg
fcom
mov
cli
lock
jle
inc
push
adc
out
add
daa
ins
xchg
xchg
retf
mov
xchg
mov
push
add
add
call
test
pop
dec
popa
pop
cdq
int
(bad)
mov
pushf
hlt
loopne
xor
addr16
jmp
not
dec
dec
fs
pop
aam
lock
iret
mov
push
inc
or
cmc
xlat
jmp
or
pop
adc
fsubrp
fadd
push
adc
dec
inc
rcr
xchg
iret
fidiv
push
cmp
dec
sahf
fild
aad
push
add
inc
cmp
xchg
mov
jmp
or
push
gs
les
adc
call
jno
push
push
aaa
sbb
enterw
mov
or
arpl
outs
sbb
cmp
iret
mov
retf
addps
push
adc
add
mov
xchg
nop
retf
popf
pop
fs
je
inc
aas
push
dec
dec
push
dec
pop
adc
cmp
xchg
sub
inc
sbb
or
leave
mov
popf
repz
sbb
movs
xlat
mov
dec
arpl
and
jmp
dec
das
push
pop
jmp
jg
add
inc
or
into
xchg
enter
push
jno
pop
outs
sbb
pop
cmps
mov
dec
pop
imul
cmp
mov
ins
or
push
sbb
test
xor
or
cwde
retf
in
sbb
sub
sub
(bad)
mov
add
or
bound
dec
loop
lock
(bad)
mov
inc
sbb
sub
pop
mov
xchg
adc
push
mov
inc
shl
cli
sub
adc
push
arpl
out
ins
mov
loopne
jbe
jno
(bad)
gs
inc
add
sub
jbe
add
inc
test
ret
or
jne
push
out
xchg
xlat
add
outs
in
xchg
push
mov
or
repnz
push
push
add
inc
xchg
adc
push
fild
xor
xchg
sub
push
mov
push
push
xchg
int3
(bad)
push
movs
mov
test
movs
hlt
data16
adc
mov
push
movs
lds
add
sub
inc
idiv
repnz
call
add
dec
or
cs
xor
pop
xchg
cmps
inc
mov
mov
push
mov
sbb
repnz
in
(bad)
inc
xchg
xchg
int3
out
inc
and
add
and
(bad)
push
scas
jmp
xchg
aam
push
mov
push
jecxz
pop
xor
cmp
data16
mov
lds
sbb
out
mov
aad
push
xchg
inc
inc
les
inc
(bad)
repnz
bound
pop
test
add
inc
mov
lods
adc
inc
jno
inc
adc
mov
jae
and
rol
aaa
push
(bad)
shl
cmp
dec
push
xchg
or
xor
add
aam
mov
xchg
(bad)
rcr
push
mov
cmp
mov
aas
mov
xchg
daa
xchg
ss
jecxz
fwait
or
xor
div
dec
ror
in
sahf
push
mov
dec
and
mov
bound
push
addr16
ficomp
cmps
data16
and
arpl
xchg
popa
inc
inc
lea
data16
leave
test
jp
jb
cmp
mov
aaa
or
fsub
or
jp
mov
repz
sub
sbb
inc
dec
sub
xor
and
adc
and
sub
push
ret
dec
ret
call
xor
sbb
das
ret
mov
sub
cs
sbb
jae
mov
loopne
xchg
call
fs
dec
xor
sub
ds
and
jbe
cmp
pop
pop
cmc
(bad)
not
inc
outs
pop
cmp
mov
fistp
inc
jg
cmp
push
pop
add
into
jmp
jne
hlt
and
mov
push
jne
jnp
sbb
pop
adc
pushf
ins
and
push
sbb
add
cmp
jmp
sbb
sub
push
cmp
push
and
ds
and
(bad)
xor
nop
push
adc
and
jecxz
jg
outs
ret
jb
ins
pop
and
lock
xchg
cdq
and
dec
jge
jg
call
hlt
jb
cmp
dec
ins
push
add
out
ret
fld
sbb
xor
cmp
sar
ins
dec
ins
jl
jl
dec
pop
fidiv
aaa
stos
repz
or
adc
mov
std
jl
push
fld
call
adc
frstor
dec
pop
xor
dec
cmps
fwait
inc
pop
mov
push
and
adc
movs
push
inc
sub
push
pop
gs
fdivr
xchg
(bad)
mov
pusha
inc
jle
and
push
shr
mov
int3
(bad)
fnsave
sub
mov
sbb
js
add
retf
popa
movs
push
pop
add
loopne
and
inc
outs
ss
or
sbb
ja
repz
mov
mov
adc
inc
jl
call
icebp
add
dec
adc
dec
or
pushf
stos
mov
adc
int3
aam
mov
cmp
push
push
adc
dec
bound
sub
dec
inc
xchg
push
inc
in
sbb
jmp
jo
bound
pop
idiv
adc
icebp
retf
and
jmp
sbb
ds
push
ja
into
scas
mov
adc
data16
jnp
cmp
test
xchg
cli
jle
push
mov
mov
adc
and
adc
cmp
into
xchg
jmp
push
js
sbb
int
add
cld
push
cmp
int
pop
xor
(bad)
mov
aaa
jmp
fcom
jl
push
dec
cmpxchg
pop
loopne
hlt
fst
aaa
push
ss
and
sub
jle
retf
mov
ins
and
push
imul
jmp
icebp
pop
(bad)
jns
cmp
ret
sbb
mov
add
or
adc
leave
inc
scas
xchg
sub
ins
adc
xchg
mov
sahf
dec
push
jne
push
aas
or
jae
fnstenv
jo
ss
aas
add
or
or
lods
or
pop
les
adc
in
or
push
ret
out
daa
mov
mov
inc
fiadd
xchg
jmp
sbb
arpl
sbb
mov
mov
or
daa
dec
hlt
dec
xchg
lods
mov
mov
ins
jae
lods
xchg
(bad)
mov
stos
rol
cli
and
pop
rcr
cmps
repz
pop
retf
mov
(bad)
adc
jmp
mov
and
bound
ret
cdq
es
loope
ja
ret
(bad)
mov
xchg
mov
shr
int3
adc
pop
in
mov
lock
and
xchg
cli
add
xchg
fsub
xchg
ret
cs
retf
xchg
(bad)
es
(bad)
int3
inc
sbb
fwait
xchg
cli
add
pop
mov
fld
popa
or
inc
retf
mov
retf
daa
mov
xchg
in
lock
mov
lods
mov
ins
push
sbb
lock
jmp
xor
and
mov
rcr
mov
pushf
sub
fidiv
jecxz
int3
lock
cmps
cmp
mov
loopne
cld
push
cmp
clc
ret
sbb
enter
cmp
data16
ret
call
sub
pop
mov
push
sti
xchg
ret
fwait
scas
(bad)
mov
dec
in
rdmsr
mov
test
mov
pop
repz
imul
daa
pushf
pop
int3
jnp
imul
xchg
loop
cli
cmp
cmp
lods
dec
cld
xchg
adc
inc
inc
test
or
jg
push
mov
(bad)
cmc
sbb
popf
int
mov
test
std
clc
or
adc
ret
sbb
addr16
shl
cmp
adc
xchg
(bad)
cmp
mov
call
retf
jnp
(bad)
fld
push
add
in
std
test
jns
mov
stc
(bad)
(bad)
mov
push
inc
push
retf
lea
mov
std
jns
pop
jns
cmp
fsincos
sbb
push
(bad)
sbb
cmp
push
inc
xor
jmp
sti
cld
jl
aad
jmp
pop
cmp
ds
out
sub
in
pushf
jae
adc
dec
sbb
or
or
cmp
mov
pushf
pop
test
xchg
sti
loope
dec
pop
lods
imul
sub
fs
mov
(bad)
loopne
repz
lahf
jp
std
or
pusha
and
or
pop
cmc
mov
mov
in
cld
shr
ret
push
inc
and
mov
cdq
dec
jmp
mov
pop
push
sub
loope
xchg
jns
sahf
jle
repnz
std
sbb
mov
mov
mov
cld
inc
sbb
shl
cmp
mov
mov
lods
std
jmp
das
jg
lahf
(bad)
xchg
xchg
xor
mov
xor
xchg
outs
in
push
and
in
data16
mov
cli
mov
popf
mov
cmp
std
push
popf
ja
adc
xchg
xor
arpl
pop
mov
jnp
stc
jb
push
lahf
jne
leave
jl
sbb
(bad)
fcom
mov
or
mov
in
xor
ret
sub
dec
fbld
push
pop
mov
fwait
iret
mov
cdq
mov
int
jnp
sbb
dec
fld
jl
loop
inc
out
jmp
sbb
sbb
and
mov
inc
ins
sbb
retf
add
ror
repz
mov
out
scas
mov
jmp
add
xchg
rol
xchg
add
test
icebp
scas
imul
sub
scas
test
and
hlt
clc
cmps
leave
xchg
mov
loopne
daa
cmp
mov
(bad)
out
in
leave
sti
mov
into
gs
xchg
clc
neg
xchg
leave
aad
mov
jb
hlt
test
icebp
mov
inc
fld
cli
jb
xlat
out
aaa
cdq
inc
cli
add
movs
mov
fcom
dec
xchg
jbe
push
stos
xlat
mov
es
mov
popf
xchg
gs
out
jo
and
mov
sub
mov
or
aad
in
out
std
into
mov
loopne
out
fucomp
jmp
in
sbb
aas
outs
ins
imul
ds
pop
sar
in
jno
es
mov
mov
inc
sub
and
jbe
es
mov
adc
jl
outs
outs
mov
movs
sbb
sub
enter
adc
ss
addr16
jmp
imul
adc
cmp
push
call
push
jbe
jae
mov
imul
adc
adc
push
push
mov
outs
sub
fnstcw
push
jbe
xor
shr
mov
cmovne
enter
xchg
outs
push
pusha
test
jae
addr16
movs
inc
sbb
push
xor
test
push
jle
xchg
mov
int
ins
mov
pcmpgtb
or
jmp
jne
icebp
jbe
adc
pop
dec
js
push
inc
mov
cmp
popf
cmc
jp
add
mov
dec
cmp
mov
jmp
sar
jb
jbe
ja
div
inc
add
jo
fadd
call
das
xchg
jmp
movs
sub
daa
jg
pop
dec
sbb
sub
(bad)
out
mov
inc
sub
fidiv
and
bound
xchg
sub
pop
jb
xchg
fnsave
ficomp
and
test
test
ins
sub
pop
add
dec
or
sub
dec
cmps
xor
xor
pop
push
int3
cli
inc
rcr
and
dec
inc
mov
retf
mov
pushf
mov
mov
sar
repnz
push
mov
push
mov
add
adc
test
adc
adc
inc
fidivr
call
jl
xchg
aas
adc
fwait
into
and
test
xchg
pop
lods
push
push
sbb
pop
mov
jno
icebp
inc
stos
imul
test
xchg
cmp
les
adc
jecxz
jecxz
popf
shr
add
loopne
adc
jb
add
push
and
bound
inc
pusha
mov
inc
or
rcl
xchg
cmp
loope
sub
in
push
loopne
test
aaa
mov
popf
loopne
pop
sar
push
xchg
and
pop
arpl
mov
mov
xchg
xor
ja
inc
fidiv
mov
adc
mov
(bad)
int
out
push
loop
and
add
jge
sub
ret
icebp
enter
sub
loop
add
ror
in
mov
jne
adc
ror
sar
cmp
add
retf
fldcw
push
xchg
daa
jecxz
cli
and
add
(bad)
setb
inc
jb
fs
mov
rol
and
adc
and
mov
mov
(bad)
xor
xchg
bound
adc
xor
adc
pop
ss
repnz
repnz
xchg
inc
enter
pop
lods
xchg
sub
test
fidivr
jo
pusha
xchg
xor
inc
mov
push
cmp
cld
push
imul
mov
arpl
movs
scas
loop
mov
int
pop
mov
add
pop
pop
add
pop
push
adc
push
sub
ja
lods
daa
dec
pop
lahf
in
das
jo
jmp
pop
xchg
xchg
ficom
in
pop
inc
inc
pop
xchg
test
popf
ins
mov
cmp
xchg
pop
bound
sbb
inc
inc
movs
das
mov
jle
outs
xchg
cwde
and
in
dec
in
push
inc
pop
js
push
(bad)
push
das
pop
add
jae
pop
inc
and
daa
stc
inc
pop
dec
ja
sub
or
test
ss
ins
mov
inc
jae
xor
mov
loopne
out
inc
or
outs
and
inc
mov
jnp
and
mov
nop
ret
mov
nop
rol
iret
add
mov
add
xor
stc
sub
mov
push
mov
stos
push
stos
and
fisttp
fwait
mov
ret
xor
rol
ret
stos
stos
pop
daa
dec
jno
add
ins
lock
es
jb
inc
cmc
retf
push
in
adc
loope
xchg
gs
sub
xor
sub
pop
xor
and
jge
fucomi
and
sbb
pop
jae
mov
jge
leave
push
sub
push
dec
xor
sub
mov
out
push
(bad)
xor
aaa
pop
lea
ret
stc
xchg
xor
ins
and
pushf
jnp
sbb
jge
dec
stos
sbb
mov
jg
inc
xor
jle
adc
and
outs
(bad)
or
cmp
push
jbe
movs
mov
pop
out
xor
jmp
adc
fs
push
mov
je
xor
mov
inc
cmp
cld
dec
jge
add
push
jl
adc
push
and
fst
retf
and
dec
stos
daa
xchg
pushf
fiadd
dec
dec
push
jnp
call
js
mov
pop
neg
sub
in
cmp
in
mov
movs
stc
out
adc
dec
cmp
xchg
sar
shl
mov
mov
sahf
fadd
adc
mov
popa
jnp
fldenv
sahf
xchg
adc
mov
add
shl
xchg
push
jmp
mov
ret
mov
ins
or
sub
loope
dec
inc
lods
adc
mov
push
fmul
scas
leave
mov
inc
jns
ret
fmulp
jmp
cli
xcrypt-ofb
cmps
sub
sbb
(bad)
pop
(bad)
icebp
in
in
push
std
inc
std
push
in
or
pop
ror
rol
adc
loopne
mov
mov
sub
add
iret
pusha
jmp
pop
(bad)
jb
in
sub
xor
xchg
dec
mov
mov
jmp
lock
iret
(bad)
jl
aam
pop
sbb
sub
in
push
dec
mov
int
push
int3
and
xchg
or
push
pop
add
inc
xchg
mov
mov
mov
mov
stos
or
jp
int
cld
stos
cmp
xchg
loop
dec
inc
sub
lods
daa
pop
sub
lods
jns
xchg
sar
mov
jne
cmp
test
xor
ja
xchg
outs
leave
adc
call
push
pop
mov
icebp
mov
add
dec
retf
mov
xor
retf
push
jmp
sub
inc
lea
stos
lods
pop
push
retf
xchg
mov
jmp
cli
xchg
imul
fisttp
fdivr
sbb
or
sbb
outs
sub
and
cli
imul
mov
stos
jge
popa
out
scas
adc
dec
dec
mov
jmp
ins
repnz
push
outs
clc
inc
fisub
int
int
call
mov
mov
int3
sbb
fstp
retf
pop
fsub
cmp
push
sahf
and
aad
retf
sub
stos
cmp
dec
imul
mov
xchg
pop
ficomp
xchg
scas
cmp
xlat
xchg
mov
mov
mov
mov
dec
stc
inc
icebp
xor
inc
add
push
xchg
inc
in
outs
fimul
into
sbb
enter
mov
enter
mov
mov
pop
mov
sahf
ss
pop
cli
sub
dec
cld
cdq
xor
xor
pop
xchg
setp
sbb
retf
mov
cld
cli
or
sub
adc
jmp
mov
sbb
ja
enter
cmp
stos
stc
ds
jp
xchg
ins
dec
js
add
push
mov
jle
mov
sahf
mov
pop
cmp
cmp
xchg
xchg
aad
pop
in
mov
dec
scas
xchg
jecxz
mov
aad
and
std
ret
loopne
mov
cs
inc
test
shl
popf
gs
(bad)
mov
icebp
dec
ficom
or
jecxz
jno
and
test
lods
ja
dec
loope
outs
mov
add
mov
jmp
test
cmps
lahf
out
arpl
outs
add
or
pop
adc
in
fiadd
lock
sbb
sar
int3
int
xchg
push
jno
sub
sar
xor
jle
int
xchg
adc
andnps
(bad)
lea
jecxz
xchg
push
or
dec
xor
mov
aad
out
xor
lahf
cmc
add
pop
xchg
jmp
bound
fbstp
jp
mov
add
cmp
in
int3
repnz
mov
pextrw
iret
neg
ret
test
or
mov
in
sahf
jecxz
call
xchg
(bad)
push
sar
mov
cdq
ror
or
(bad)
cdq
adc
xor
mov
lods
or
mov
mov
mov
fwait
jp
or
add
xchg
cmps
mov
loop
rcr
sbb
pushf
lds
jae
jle
ret
in
add
test
pop
sub
fbld
out
pop
xchg
mov
rcr
cld
jno
jle
mov
mov
lock
popf
int
jnp
mov
leave
jmp
xlat
push
add
push
test
sbb
xor
xor
push
fbld
test
out
(bad)
jnp
es
sub
and
jbe
das
into
adc
and
ss
sbb
popf
repz
mov
sahf
ins
add
das
(bad)
mov
xchg
into
mov
aaa
lods
sar
mov
mov
sub
div
shl
xor
fidivr
sub
pushf
or
daa
dec
and
repnz
lods
retf
pop
adc
rep
daa
in
in
scas
in
mov
popa
pop
repz
lods
push
mov
sbb
(bad)
jecxz
jo
xchg
inc
sub
test
test
rol
cmp
sbb
push
xchg
iret
fs
dec
adc
pop
cdq
test
and
nop
adc
pop
add
popa
(bad)
call
enter
mov
jbe
fs
ds
mov
repz
das
mov
mov
mov
pusha
cmc
ds
in
inc
and
push
adc
(bad)
add
shl
jmp
xor
and
out
and
and
push
pop
or
inc
jl
mov
or
fabs
aas
imul
xchg
es
pop
out
fild
pop
mov
repnz
ins
mov
cmps
inc
les
and
cmc
pop
sub
cmp
mov
(bad)
in
pusha
movs
inc
jno
pop
inc
adc
pushf
dec
or
lahf
js
mov
mov
pop
(bad)
mov
lods
mov
mov
inc
ror
aam
mov
sub
repnz
pop
pop
push
es
cmp
pushf
hlt
jo
sub
xor
(bad)
out
out
(bad)
std
(bad)
cld
retf
lods
and
add
cmp
mov
shr
clc
sub
mov
ror
test
(bad)
cmp
mov
out
mov
sbb
nop
ins
push
pop
hlt
retf
mov
inc
or
ret
ret
ins
pop
ret
mov
inc
mov
outs
mov
fsub
mov
in
arpl
inc
ins
dec
pop
loopne
mov
jp
xor
ja
dec
jle
mov
in
movs
fcomip
out
retf
mov
les
fmul
xor
(bad)
imul
pop
fs
push
call
ret
pop
inc
jl
(bad)
mov
cmp
stos
out
sub
loopne
enter
mov
adc
dec
sar
xchg
adc
outs
xor
test
or
xchg
cmp
repnz
mov
adc
dec
(bad)
loope
call
xchg
daa
jle
lock
test
cmp
or
fwait
and
xchg
cmp
xchg
ret
cmps
js
dec
gs
gs
or
sbb
push
push
outs
lods
lods
adc
pop
or
daa
add
sbb
pop
push
aad
mov
das
cmps
mov
fldcw
jne
inc
fadd
adc
dec
in
loop
mov
inc
jae
dec
fild
shl
(bad)
mov
ret
cmp
sbb
shl
sub
loop
inc
and
adc
jb
adc
ret
xchg
mov
(bad)
add
xor
fcomp
out
push
retf
shl
and
out
call
push
call
div
push
sub
dec
in
xchg
jae
add
ss
(bad)
and
adc
adc
aad
inc
add
jo
ins
cmp
inc
js
xor
adc
cs
cmps
out
or
pop
sahf
cs
mov
inc
mov
add
(bad)
mov
add
in
cmp
jne
jno
adc
mov
(bad)
enter
ins
jecxz
adc
ins
adc
push
lds
mov
loop
out
pop
mov
pop
mov
shl
mov
inc
retf
push
inc
sbb
dec
jp
dec
ror
cmp
call
mov
push
mov
ins
aas
jns
(bad)
data16
jns
inc
ins
xchg
pop
shl
sub
pop
add
mov
push
mov
cmp
xor
popa
push
or
inc
push
inc
mov
test
mov
add
xor
out
repz
fistp
and
xor
and
data16
dec
dec
outs
inc
mov
clc
ins
mov
pusha
push
jo
test
movs
and
mov
and
push
fstp
cmp
jl
add
jp
mov
add
jne
mov
cmp
call
and
xchg
jl
retf
or
mov
inc
jne
jnp
sub
sub
pop
inc
dec
outs
jno
dec
ss
fmulp
xlat
mov
push
and
sub
adc
int3
repnz
imul
fbld
jbe
push
adc
pop
mov
(bad)
int
jg
pusha
adc
pop
push
test
jmp
adc
dec
jb
and
enter
(bad)
outs
pusha
jnp
pop
push
and
mov
call
popa
inc
add
hlt
out
mov
xor
jnp
sbb
adc
mov
cmp
inc
sub
sbb
xor
std
sar
sti
popa
inc
sbb
cli
ja
in
loope
(bad)
sti
call
in
xor
repnz
add
xchg
pop
ret
aas
jbe
ror
fbstp
in
xor
int
retf
jo
dec
ins
push
ds
idiv
mov
dec
sub
(bad)
mov
mov
outs
retf
xchg
mov
push
(bad)
push
and
sbb
popf
sub
(bad)
xor
dec
stos
rol
push
js
xchg
mov
mov
mov
or
outs
es
push
push
mov
int3
fidivr
addr16
ds
add
cdq
and
push
jmp
mov
call
mov
fst
imul
xchg
xchg
mov
mov
inc
sbb
jne
(bad)
(bad)
cmp
sbb
test
sub
std
out
push
push
call
es
or
jno
xor
cmps
or
mov
sub
xchg
inc
test
push
ins
imul
jb
cmp
data16
push
add
dec
fdiv
inc
cmp
xchg
es
pop
ror
xchg
test
pop
push
or
ror
or
inc
pop
nop
mov
inc
add
inc
mov
jae
sahf
xchg
inc
jmp
sub
push
xchg
out
xor
mov
sbb
adc
out
dec
scas
fnstcw
iret
xchg
push
sub
ret
push
int3
sbb
add
push
pushf
jge
nop
retf
mov
out
adc
aam
popa
loope
xor
(bad)
std
add
es
push
jp
jp
lahf
rcr
push
inc
pop
es
inc
test
cmps
jecxz
das
popf
pop
xchg
std
jmp
adc
mov
(bad)
sbb
cmp
iret
xor
nop
dec
stos
shr
jl
cmp
cmp
xchg
add
rcl
xor
and
adc
pop
xchg
jg
mov
test
adc
sahf
cmps
cwde
sti
mov
pop
arpl
out
pop
inc
out
inc
(bad)
ins
mov
xchg
jmp
or
jecxz
fcomp
and
xor
adc
mov
pop
stc
inc
pop
das
cmp
jle
pop
jbe
jnp
movs
cmp
sar
mov
fxch
jl
cmp
and
sar
xor
inc
scas
lods
push
push
out
cmp
push
or
xor
in
icebp
mov
mov
imul
pop
ins
and
adc
jecxz
pop
cmp
mov
sbb
int
sbb
inc
cmp
loopne
cli
jl
retf
ja
cwde
xchg
sub
and
test
dec
pop
out
clc
add
sub
movs
cmp
jle
ret
fcmovne
sub
inc
retf
xlat
sub
jge
enter
mov
cdq
outs
call
or
jbe
pop
in
xchg
inc
mov
push
sahf
stos
add
cmp
ror
cmp
stos
mov
dec
cmp
call
sub
les
or
cdq
lds
test
jecxz
int3
sbb
pushf
jmp
or
mov
leave
sbb
jns
and
ins
imul
sbb
push
shl
fisubr
cli
stc
inc
jp
test
in
mov
and
mov
imul
or
ja
fldenv
fild
xchg
xchg
mov
push
dec
push
jno
jge
scas
shr
loope
es
sahf
pop
inc
mov
dec
xor
and
cmp
xchg
mov
jmp
les
mov
jmp
add
mov
jge
sbb
sub
ret
sub
adc
mov
shl
lods
fsub
sub
and
movs
sbb
pop
adc
jae
cmp
mov
lods
out
shl
jp
popf
fdiv
cwde
push
sar
(bad)
loope
dec
xor
xchg
dec
cmp
mov
stos
mov
call
or
mov
xchg
cdq
inc
icebp
mov
(bad)
in
adc
inc
and
pop
jns
xchg
sbb
jg
sbb
clc
int3
add
call
sar
push
push
rcr
adc
mov
bound
sar
nop
push
push
jno
mov
mov
fsubr
popa
inc
mov
popf
cmp
aaa
lods
sar
xchg
add
ds
dec
arpl
mov
jecxz
inc
jne
lods
mov
test
cmp
sbb
pop
and
push
lods
mov
dec
mov
dec
push
cmp
mov
xchg
mov
mov
fldcw
xchg
mov
ror
mov
xor
jge
mov
(bad)
mov
and
adc
add
ror
sahf
lea
sbb
bound
add
loop
loop
and
bound
mov
push
push
sub
pusha
aas
lods
cwde
fcom
dec
and
sub
fmul
gs
outs
(bad)
shl
sbb
imul
mov
sub
adc
add
mov
jmp
(bad)
sar
mov
nop
call
mov
pop
push
dec
sub
or
mov
sbb
sbb
ret
leave
inc
lods
sbb
mov
lods
loopne
jg
jp
repnz
mov
lods
lahf
rol
ret
mov
std
xchg
fdivp
dec
aam
es
mov
ins
int
xchg
addr16
and
or
gs
dec
xor
cmp
or
sbb
hlt
lods
scas
in
cdq
cmp
push
imul
cmc
xor
sub
mov
mov
mov
push
call
sub
pop
cmc
mov
movs
sbb
xchg
mov
mov
repz
xor
sbb
dec
cwde
movs
mov
cmps
sub
adc
mov
jecxz
mov
fild
(bad)
sbb
dec
xor
inc
imul
and
xor
jp
inc
inc
stos
(bad)
cmp
data16
dec
dec
xlat
sub
mov
pop
js
mov
out
div
pop
fwait
mov
inc
and
jne
sbb
mov
test
sub
lds
sbb
in
hlt
lock
push
cmp
and
mov
hlt
mov
lds
fdiv
inc
hlt
cli
jmp
mov
shl
cwde
dec
fst
inc
adc
icebp
mov
mov
mov
shl
add
(bad)
and
xchg
fnclex
xchg
shl
and
sar
cs
adc
sub
sub
jmp
jno
out
(bad)
mov
and
and
mov
aaa
mov
(bad)
(bad)
imul
movs
adc
ror
inc
rcr
mov
mov
xchg
repnz
outs
aad
bound
imul
adc
pop
shr
xchg
(bad)
xchg
pop
xor
scas
add
mov
push
xor
inc
xchg
repnz
push
xor
int3
mov
leave
stos
xor
or
cmp
push
adc
mov
mov
adc
dec
adc
out
fst
outs
ret
ins
jecxz
repz
pop
stos
repnz
fdivr
dec
retf
dec
and
cmps
adc
ret
mov
sub
fld
mov
sub
fdivr
mov
outs
adc
xchg
cli
cmc
jmp
mov
or
call
into
in
movs
mov
imul
or
and
and
mov
mov
dec
cmp
jmp
enter
rol
and
pushf
stos
mov
jmp
sbb
loopne
cmps
mov
xor
pop
movs
xor
(bad)
mov
mov
fsub
ss
mov
push
dec
daa
mov
mov
gs
aad
test
loop
mov
lds
hlt
lahf
repnz
cmp
retf
cmc
(bad)
cmp
fild
cmp
in
xchg
out
sahf
xor
sbb
out
(bad)
and
repnz
xor
mov
aad
add
xchg
and
test
or
test
ins
push
in
hlt
dec
mov
pmaddwd
inc
sub
loope
cld
sbb
movs
out
aam
hlt
pop
lds
xor
or
jp
mov
mov
pop
(bad)
hlt
sub
jp
lds
sub
fwait
out
(bad)
mov
les
adc
pop
cmp
fwait
hlt
lods
aam
cmps
and
stos
rol
aam
inc
ja
stos
jo
lahf
(bad)
neg
mov
hlt
xchg
xor
dec
xor
es
mov
jne
imul
out
cmp
inc
stos
pop
pusha
fsubr
jp
das
pop
push
aam
add
cmps
hlt
or
lods
retf
xor
sbb
mov
cmps
inc
jp
fcomi
movs
lds
lods
les
into
inc
sbb
sti
jmp
xchg
test
out
push
fs
hlt
test
sti
lods
dec
ficom
adc
(bad)
std
mov
cmp
vlddqu
sub
in
jecxz
aad
aam
fstp
mov
icebp
les
jp
mov
mov
and
mov
stos
sub
mov
fcmovu
push
popa
iret
les
jno
daa
mov
aam
mov
cmp
sti
mov
retf
in
and
movs
lahf
push
push
sbb
xor
jmp
mov
aaa
movs
jg
jmp
jne
shr
or
pop
xlat
sahf
lods
int3
mov
cmps
aad
push
test
mov
mov
mov
add
or
lahf
adc
test
test
(bad)
xchg
cs
mov
aam
mov
idiv
aad
and
inc
outs
icebp
mov
cmc
daa
mov
in
push
pusha
rep
(bad)
gs
fsubr
pop
xor
mov
loop
xor
fnstcw
dec
xor
test
test
inc
dec
sbb
les
popa
lds
jae
sub
pop
fidivr
jl
shl
ret
inc
pop
cmp
cmp
icebp
sbb
lahf
xor
mov
xor
retf
fcomip
jnp
pop
bound
push
ficomp
xor
ins
fimul
pop
fmulp
fisubr
adc
mov
jl
xchg
pop
sub
movs
and
or
sub
mov
frstor
xchg
mov
lahf
sub
dec
dec
pop
xor
dec
push
xor
mov
add
xor
sub
(bad)
dec
and
cmps
push
fistp
(bad)
and
add
jle
popa
leave
(bad)
sbb
jb
dec
dec
jns
pushf
xor
xor
and
xlat
imul
add
jle
fadd
ja
cmps
sti
stos
adc
push
test
jmp
sti
sbb
test
mov
add
out
pop
xchg
sbb
mov
pop
sub
scas
sbb
sbb
jae
pop
mov
sbb
sbb
addr16
jp
pop
fwait
aaa
imul
retf
mov
stos
adc
sub
outs
mov
mov
sub
jae
sub
fwait
cmp
cmp
bound
xchg
or
fisttp
stos
mov
mov
je
popf
sbb
fistp
add
in
push
xchg
out
or
inc
adc
sbb
adc
cdq
popf
dec
pusha
retf
adc
fld
adc
cld
mov
dec
cwde
cli
mov
xor
xor
add
neg
call
pop
aam
outs
cli
fcmovnu
sbb
imul
retf
data16
sbb
retf
xchg
call
rcr
and
or
or
out
es
cli
les
aad
ins
xlat
adc
cli
(bad)
dec
or
mov
jp
pop
stos
sbb
pop
and
xchg
cmc
movs
loopne
imul
push
stos
dec
dec
popf
jae
add
sbb
fnsave
(bad)
shr
pop
jmp
cmp
or
scas
jmp
imul
je
sbb
pusha
adc
sbb
dec
push
loope
dec
fwait
add
and
sbb
retf
inc
xor
jmp
jl
jb
fcmovne
sbb
sub
sahf
sbb
push
mov
add
mov
icebp
mov
add
sbb
add
pusha
push
xchg
arpl
inc
sbb
jnp
and
mov
sbb
sahf
ffree
mov
je
ins
bound
add
push
std
jl
push
jno
arpl
popa
sub
fs
cld
and
and
fcom
push
pop
jl
imul
xchg
js
mov
mov
add
imul
imul
cld
lahf
retf
sahf
sti
jp
in
jae
xchg
xchg
scas
pusha
imul
arpl
pop
repz
xor
xchg
jl
push
adc
lods
movs
pop
push
jae
inc
mov
xchg
jnp
add
ins
inc
arpl
enter
add
jne
xchg
arpl
jb
jns
or
push
data16
data16
push
cmp
jl
lods
jle
jl
dec
lahf
ins
pop
ins
adc
nop
imul
fisub
jl
push
mov
arpl
ins
ret
push
add
jae
arpl
ins
or
arpl
bound
arpl
mov
cmps
xor
arpl
or
dec
push
outs
jae
aad
dec
add
addr16
push
pop
adc
xor
mov
clc
jb
push
rol
adc
jge
jnp
or
ins
jae
jae
cmp
bnd
pushf
and
sub
in
and
cwde
push
xor
cld
ret
lea
push
mov
in
jge
test
ret
adc
mov
cmp
int
(bad)
aam
jns
dec
loop
lock
imul
pushf
mov
push
sub
cmp
jns
mov
data16
jb
popf
cmp
inc
mov
sbb
mov
pop
jge
popa
mov
or
pusha
pop
mov
jnp
inc
jecxz
xchg
mov
retf
fs
add
popa
cmc
mov
add
mov
sub
ret
xchg
mov
addr16
jmp
or
out
std
data16
out
loop
inc
jge
lods
push
mov
or
mov
das
add
xchg
aaa
jge
push
sbb
popf
scas
or
xor
jge
sbb
inc
retf
fdivr
lahf
sbb
jmp
push
mov
add
xor
lock
inc
xor
call
ret
xchg
add
mov
addr16
sub
sbb
cmp
call
jno
mov
jbe
dec
(bad)
pop
call
enter
inc
mov
clc
in
mov
cmps
call
and
mov
movs
stos
(bad)
gs
jmp
sbb
push
aad
(bad)
fcomp
xchg
dec
loope
inc
pshufw
test
bswap
sahf
xchg
call
sub
outs
loop
add
sbb
fdiv
out
add
jg
sar
jmp
mov
loop
inc
add
stos
int
push
jo
retf
sbb
ja
cli
sti
xchg
scas
xchg
xchg
add
imul
mov
stos
jno
push
ins
fmul
test
pop
icebp
sahf
lds
das
push
mov
xchg
xor
ds
stc
and
or
push
and
pop
rcr
or
and
push
inc
jo
add
fcomp
jno
ror
in
cmps
ins
add
xchg
ret
clc
ss
movs
loop
shr
add
pop
cmp
ja
xchg
xor
adc
lods
mov
adc
jb
xor
or
sub
hlt
movs
jmp
xor
jns
into
inc
adc
cs
mov
mov
xor
sbb
cmp
rcr
dec
and
adc
xor
xor
xor
(bad)
stc
test
add
adc
popf
repnz
sub
out
inc
mov
and
mov
and
cmp
adc
push
xor
cld
mov
xchg
adc
cmp
inc
ret
adc
and
push
jbe
mov
inc
pushf
mov
clc
dec
add
push
test
lods
cmps
add
std
ret
adc
dec
inc
pop
(bad)
shl
jne
into
ret
xor
sbb
xchg
pop
mov
int
push
pusha
add
cmp
inc
ret
cmp
jae
jecxz
ins
mov
xor
adc
inc
retf
jmp
cmp
fbstp
jmp
aad
mov
cli
vandnps
adc
xor
mov
in
sub
adc
into
add
cwde
jmp
movs
xor
fwait
xchg
mov
js
inc
lds
mov
ror
add
lds
xchg
sbb
fidiv
out
repz
sbb
ffreep
inc
or
jmp
(bad)
mul
xor
or
mov
cld
call
jmp
jae
lds
and
mov
stc
xchg
imul
retf
xchg
sub
lods
xchg
in
mov
or
mov
cmps
pop
(bad)
fadd
mov
push
loope
test
cwde
test
add
lahf
cmc
mov
mov
ret
push
fmul
(bad)
imul
rcl
sti
mov
(bad)
repnz
scas
mov
inc
loopne
test
fwait
(bad)
jns
jge
cdq
(bad)
repnz
sbb
adc
mov
push
or
les
mov
ja
xchg
sub
pop
jne
and
retf
fwait
lds
xor
outs
sbb
movs
call
mov
xchg
pushf
push
cmp
xchg
popf
mov
push
or
push
mov
lea
mov
pop
xor
out
jo
inc
xchg
(bad)
mov
or
popa
pop
xchg
in
xchg
out
lea
in
movs
xchg
(bad)
xchg
cmp
pop
jge
mov
movs
fwait
movs
icebp
mov
jae
cdq
xor
fwait
mov
xchg
mov
out
inc
shl
xchg
scas
hlt
mov
mov
cmp
test
stc
loop
xchg
in
push
fcom
sub
adc
ins
lods
sub
in
call
sti
in
(bad)
mov
mov
in
std
push
jg
cmps
inc
call
pop
sub
aas
loope
pop
dec
dec
inc
shr
xchg
es
loop
jnp
mov
(bad)
aas
sar
frstor
repnz
add
jmp
retf
pop
sbb
ret
dec
pop
inc
call
stc
in
inc
lock
out
lods
push
dec
xor
push
aad
mov
adc
aaa
movs
cs
jo
mov
dec
and
fst
jae
pop
cmp
pop
icebp
dec
retf
movs
out
gs
and
out
push
sbb
ficomp
mov
(bad)
in
and
(bad)
lock
imul
mov
fnsave
ror
inc
add
(bad)
jbe
in
push
xchg
mov
jb
push
pop
inc
dec
inc
xor
test
pop
outs
mov
jne
movs
ds
lahf
test
int
in
xchg
fwait
and
or
pop
and
icebp
retf
mov
sbb
dec
rcl
mov
fcom
clc
pop
pushf
jmp
pop
inc
push
dec
imul
cmp
popa
jno
cmc
in
mov
adc
cmp
sub
ins
jne
xor
clc
push
dec
scas
sti
or
sbb
xchg
xchg
dec
adc
icebp
dec
in
mov
dec
bound
test
adc
cmp
jae
test
icebp
add
gs
ins
ret
pop
bound
mov
xchg
fistp
cmp
pushf
push
jno
hlt
and
icebp
mov
add
(bad)
stc
jnp
aaa
pop
lea
and
gs
test
mov
aaa
imul
sti
dec
fld
mov
jmp
enter
mov
outs
dec
outs
std
lea
jb
push
loopne
xchg
fs
inc
jmp
cli
mov
out
jle
pop
in
jl
adc
inc
shl
xchg
jmp
mov
outs
dec
ins
std
mov
jno
pop
addr16
jp
imul
pop
out
jg
pop
in
jl
adc
jp
ins
cld
adc
ja
push
in
test
gs
mov
pop
jmp
fsubr
(bad)
sbb
in
test
push
mov
call
jg
pop
outs
dec
outs
std
mov
jb
adc
inc
shl
adc
out
xchg
gs
mov
jmp
sbb
dec
fild
(bad)
sbb
in
jge
sbb
ins
cld
lea
jb
push
jecxz
adc
icebp
inc
shl
xchg
out
les
dec
mov
pop
dec
outs
dec
pop
out
jle
push
outs
std
dec
(bad)
sbb
jl
push
loop
and
js
jnp
rcr
xor
inc
cli
mov
mov
retf
add
cdq
bound
cmp
mov
cwde
xor
mov
sub
fld
mov
jecxz
sbb
pushf
or
enter
sub
fidivr
inc
pop
jno
rcr
shl
inc
pop
push
push
cmps
(bad)
sbb
cli
pop
add
lods
pop
popf
lds
adc
(bad)
push
add
test
xchg
xor
and
loope
and
mov
jle
test
dec
add
mov
cmp
test
enter
mov
rol
enter
vmovlps
dec
xchg
xchg
pop
fwait
xchg
sub
fst
cs
pop
adc
jecxz
outs
and
add
jb
mov
fmul
inc
ins
dec
in
dec
cld
or
pop
test
retf
in
inc
cmp
or
push
sti
xchg
imul
inc
jmp
stos
mov
and
std
dec
loop
sub
lds
or
out
push
jl
cli
and
add
lods
push
adc
fnstenv
sar
imul
dec
ror
cmp
sub
cmp
dec
xor
(bad)
je
inc
lds
mov
or
in
pop
daa
pusha
xchg
push
jge
mov
push
cmc
repz
xchg
xlat
lahf
add
pop
sbb
cmp
(bad)
mov
aam
mov
sar
mov
ror
(bad)
xor
pop
push
sub
pop
push
xchg
mov
mov
and
sub
dec
and
push
cli
call
arpl
pop
dec
arpl
cwde
pop
adc
mov
sub
fsub
fldenv
adc
test
dec
or
(bad)
ins
arpl
aad
lock
dec
add
lock
pop
jmp
test
int
add
pop
ret
jne
jnp
int3
or
test
or
mov
(bad)
mov
inc
mov
jmp
test
mov
fnstsw
jl
jmp
shl
or
les
popf
js
add
mov
sub
mov
add
dec
lds
mul
pop
xor
lods
adc
xlat
fnstsw
push
jecxz
add
xchg
mov
retf
sub
call
jmp
xor
dec
mov
into
daa
rcl
mov
add
cmp
or
xchg
std
stc
or
cmp
mov
adc
xor
pop
in
cmp
lds
sub
dec
mov
ins
xor
add
es
icebp
loopne
sti
cmp
(bad)
hlt
cld
outs
fwait
mov
mov
jmp
pop
add
retw
dec
pop
pop
mov
sahf
lods
mov
outs
loopne
cmp
dec
sbb
adc
mov
sub
mov
popf
pop
mov
ret
sti
xchg
lods
hlt
or
and
add
ins
add
adc
std
add
push
shl
stos
mov
xor
adc
rcr
push
out
add
xor
inc
ficomp
pop
imul
leave
add
and
aas
stos
arpl
adc
setno
movs
imul
(bad)
bound
jl
inc
cmp
add
js
inc
mov
mov
jne
xchg
or
ins
lea
dec
jmp
or
shr
pop
repz
jmp
call
sub
retf
les
xchg
mov
pop
neg
mov
mov
sbb
inc
aam
test
and
xchg
dec
mov
daa
cmpxchg
pushf
je
retf
pop
call
and
xchg
mov
fadd
mov
cwde
xchg
(bad)
mov
pop
outs
or
pop
mov
mov
dec
sbb
jle
ins
fsub
add
pop
sbb
cli
mov
ins
xor
mov
mov
inc
or
adc
(bad)
jmp
xchg
cli
test
sbb
sbb
push
call
repnz
jo
sub
scas
pop
rol
pop
je
adc
inc
dec
add
popf
fstp
mov
add
stos
jno
popa
loope
std
je
test
cmps
cmp
xor
cmp
je
cmp
je
call
cmp
je
cmp
jne
jmp
mov
xor
push
push
push
call
mov
xor
cmp
je
push
call
test
pop
je
mov
push
push
call
mov
cmp
je
cmp
je
mov
cmp
je
mov
jmp
mov
cmp
je
push
call
test
je
mov
jmp
cmp
je
mov
mov
call
test
je
cmp
je
cmp
jne
mov
inc
cmp
jl
xor
pop
pop
pop
leave
ret
call
int3
push
mov
call
mov
test
jne
and
jmp
mov
mov
mov
mov
mov
call
push
mov
call
mov
cmp
mov
jb
cmp
jbe
add
cmp
ja
test
je
mov
mov
cmp
jne
push
call
push
call
cmp
je
push
call
push
call
mov
test
jne
test
je
mov
test
je
cmp
je
mov
push
mov
push
call
test
jne
inc
jmp
cmp
je
cmp
je
cmp
jne
test
je
mov
test
je
mov
movzx
cmp
jne
test
jne
cmp
jne
test
je
xor
jmp
mov
push
xor
mov
call
and
mov
mov
sub
mov
je
dec
dec
je
sub
jne
cmp
jne
push
call
test
jge
cmp
je
push
push
call
cmp
jne
test
jne
movzx
cmp
jne
test
jne
cmp
je
push
push
push
call
test
je
mov
test
je
push
mov
call
jmp
push
push
call
movzx
cmp
jg
je
cmp
je
cmp
je
cmp
je
mov
test
jne
push
push
call
test
mov
je
mov
call
push
call
cmp
je
call
push
call
push
call
pop
push
mov
call
test
je
mov
call
push
call
push
push
call
pop
pop
push
call
test
je
call
push
call
push
push
push
call
mov
call
ret
test
jne
push
call
mov
xor
test
setl
mov
push
push
call
test
je
cmp
je
mov
mov
push
mov
call
jmp
mov
test
je
push
call
jmp
push
push
mov
call
mov
test
je
mov
and
push
call
push
push
call
pop
pop
jmp
cmp
jl
cmp
jle
cmp
jle
cmp
jne
test
jne
push
call
test
pop
je
mov
mov
call
jmp
push
call
xor
cmp
mov
jne
jmp
xor
push
push
call
mov
cmp
je
mov
call
test
jne
push
call
jmp
cmp
je
push
push
push
push
push
push
mov
call
add
or
jmp
mov
call
mov
ret
mov
push
push
call
test
jne
cmp
mov
push
je
call
jmp
call
mov
test
je
cmp
je
mov
push
call
cmp
je
mov
mov
push
call
jmp
mov
test
je
push
call
jmp
push
mov
push
call
mov
test
je
mov
mov
xor
push
mov
call
cmp
je
push
push
push
push
call
mov
jmp
push
mov
call
mov
mov
call
mov
and
test
mov
mov
jne
test
je
call
mov
and
mov
neg
sbb
not
and
and
mov
mov
mov
mov
call
ret
push
call
pop
ret
push
push
call
pop
pop
ret
mov
xor
ret
push
mov
mov
push
mov
cmp
jbe
mov
test
jne
call
add
cmp
jb
mov
test
push
mov
jne
mov
call
jmp
mov
push
call
test
je
mov
mov
pop
pop
ret
mov
xor
ret
cmp
push
push
mov
ja
mov
cmp
jbe
call
mov
xor
cmp
jb
ja
cmp
jbe
mov
push
mov
call
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
pop
pop
ret
push
push
mov
test
mov
jne
xor
jmp
cmp
jne
call
mov
mov
cmp
ja
lea
cmp
ja
cmp
jae
sub
mov
mov
mov
push
add
push
push
mov
call
add
mov
pop
pop
ret
push
push
mov
test
mov
je
cmp
jne
call
mov
lea
cmp
jb
cmp
jbe
mov
push
mov
call
mov
lea
cmp
ja
mov
mov
push
push
add
push
mov
call
add
mov
cmp
jbe
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
add
mov
adc
jmp
cmp
jne
cmp
jl
jg
cmp
jbe
push
push
push
call
mov
xor
add
adc
cmp
jg
jl
cmp
jb
cmp
jbe
mov
push
mov
call
mov
pop
mov
xor
pop
pop
ret
push
mov
mov
push
xor
cmp
mov
mov
mov
mov
je
cmp
je
mov
push
call
mov
pop
pop
ret
mov
jmp
push
mov
cmp
push
mov
jne
xor
cmp
sbb
neg
jmp
cmp
jne
mov
add
mov
cmp
jbe
mov
xor
jmp
push
mov
test
je
mov
test
je
cmp
push
mov
jne
mov
lea
cmp
jb
cmp
jb
cmp
jbe
mov
push
mov
call
mov
mov
add
cmp
mov
jne
mov
mov
add
cmp
jae
mov
mov
add
mov
jmp
call
cmp
jne
mov
sub
mov
mov
add
cmp
jae
mov
mov
add
mov
sub
add
mov
sub
pop
jmp
xor
pop
pop
pop
ret
mov
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
call
or
mov
mov
mov
mov
mov
call
call
ret
push
mov
push
push
push
push
call
mov
add
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
call
add
lea
push
mov
call
mov
xor
cmp
sete
xor
call
leave
ret
push
xor
cmp
je
xor
cmp
pop
setne
ret
push
push
call
push
mov
call
mov
cmp
je
mov
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
cmp
je
push
jmp
push
push
call
cmp
mov
je
xor
inc
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
mov
mov
xor
jmp
call
test
je
jmp
test
push
push
jne
mov
xor
cmp
jle
cmp
jle
mov
push
call
cmp
jge
push
call
cmp
jl
xor
jmp
mov
pop
pop
ret
push
mov
sub
call
test
je
push
push
call
jmp
test
je
mov
jmp
push
call
test
je
lea
push
push
call
jmp
lea
push
push
call
test
je
push
lea
push
call
jmp
xor
leave
ret
push
mov
sub
push
push
call
test
je
mov
push
push
call
mov
xor
cmp
je
cmp
jne
cmp
jb
push
lea
push
push
push
push
push
call
mov
jmp
cmp
push
jne
mov
xor
cmp
je
cmp
jb
push
lea
push
push
push
call
test
je
mov
mov
push
mov
call
push
mov
call
lea
lea
movs
movs
movs
movs
xor
inc
cmp
mov
mov
jb
push
add
push
push
push
push
push
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
cmp
push
push
mov
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
jbe
mov
jmp
cmp
mov
jbe
mov
mov
mov
mov
cmp
jae
mov
add
add
inc
mov
mov
add
cmp
jb
cmp
jae
mov
mov
sub
shl
add
sub
lea
mov
add
sub
dec
jne
cmp
mov
jne
lea
mov
cmp
jne
lea
mov
lea
push
call
mov
add
cmp
ja
mov
push
pop
jmp
cmp
jne
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
cmp
mov
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
push
push
push
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
movzx
test
je
test
je
test
je
push
call
mov
mov
mov
add
jmp
mov
jmp
mov
and
mov
mov
sub
mov
push
movs
push
movs
push
movs
push
push
movs
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
push
mov
push
call
jmp
push
mov
push
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
movzx
test
je
test
jne
mov
mov
and
jmp
cmp
jne
push
call
mov
mov
mov
add
jmp
cmp
jne
mov
jmp
push
call
lea
mov
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
mov
test
jl
mov
mov
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jge
mov
mov
jmp
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
mov
jmp
cmp
je
mov
jmp
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
lea
push
call
mov
pop
pop
pop
leave
ret
lea
in
das
inc
add
xor
(bad)
xor
xor
inc
add
inc
add
xor
mov
xor
push
xor
mov
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
in
push
push
xor
cmp
push
push
jbe
mov
mov
lea
xor
push
push
call
test
jne
mov
mov
mov
mov
add
cmp
jb
cmp
je
inc
cmp
jb
xor
pop
pop
pop
leave
ret
mov
jmp
push
mov
call
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
call
mov
not
and
or
cmp
jne
xor
jmp
push
push
push
call
mov
xor
cmp
je
or
push
push
push
push
push
push
push
call
xor
inc
pop
ret
push
push
push
push
push
call
ret
push
push
push
push
push
call
ret
ret
cmp
mov
je
jmp
jmp
push
mov
push
mov
mov
test
jne
mov
call
mov
test
jne
push
push
push
push
call
jmp
push
push
push
push
push
call
pop
pop
ret
lea
ret
push
mov
call
mov
test
je
push
push
call
xor
pop
ret
push
mov
push
push
push
mov
push
push
call
mov
test
je
push
push
call
mov
test
movzx
mov
je
cmp
jb
mov
or
or
push
push
push
push
mov
mov
call
test
jne
or
mov
pop
jmp
or
pop
pop
pop
ret
push
mov
push
mov
mov
mov
mov
cmp
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xor
mov
mov
pop
pop
ret
push
mov
push
and
push
mov
mov
lea
push
push
mov
push
push
call
test
jne
push
mov
push
mov
push
call
mov
mov
pop
leave
ret
push
mov
call
mov
mov
mov
pop
ret
mov
mov
mov
ret
ret
push
mov
call
cmp
jne
and
push
push
mov
call
push
push
call
pop
ret
mov
ret
push
mov
push
push
push
push
push
call
pop
ret
mov
test
jne
mov
jmp
mov
xor
ret
mov
test
jne
mov
jmp
and
mov
ret
lea
cmp
jne
push
push
push
push
call
test
jl
xor
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
push
push
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
push
mov
push
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
push
mov
push
push
call
ret
mov
mov
push
push
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
xor
ret
xor
inc
ret
mov
mov
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
push
call
jmp
xor
ret
mov
and
ret
xor
ret
mov
test
je
cmp
je
cmp
je
xor
inc
ret
xor
ret
mov
test
jne
call
and
xor
inc
ret
mov
test
jne
call
and
xor
inc
ret
mov
ret
mov
ret
mov
mov
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
movzx
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
push
call
ret
push
push
call
ret
push
push
call
ret
push
push
push
push
push
push
call
dec
dec
ret
push
mov
mov
cmp
je
mov
cmp
je
cmp
je
call
mov
mov
cmp
je
push
call
pop
ret
push
mov
mov
cmp
je
push
call
mov
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
push
mov
push
call
mov
call
mov
mov
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
push
mov
mov
mov
sub
push
sub
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
mov
push
mov
mov
sub
push
sub
push
mov
push
push
or
push
push
push
push
call
pop
pop
pop
pop
ret
push
call
mov
mov
test
je
mov
test
je
push
push
push
push
call
cmp
mov
je
test
je
push
call
test
jl
mov
push
mov
call
pop
ret
push
mov
push
push
mov
test
push
jne
call
push
call
xor
test
mov
jle
mov
push
mov
call
test
je
cmp
je
push
push
call
test
jne
jmp
push
push
call
cmp
je
inc
cmp
jl
xor
pop
pop
pop
pop
ret
push
call
jmp
mov
mov
test
je
push
call
ret
push
mov
call
test
je
push
call
mov
pop
ret
push
mov
call
mov
cmp
jne
mov
cmp
jne
push
pop
jmp
cmp
jne
xor
inc
jmp
cmp
jne
xor
mov
push
push
mov
call
jmp
push
mov
push
mov
call
pop
ret
cmp
jne
call
mov
test
je
test
jne
push
call
xor
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
lea
call
push
and
push
push
push
push
push
push
push
push
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
push
movs
push
movs
push
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
push
push
push
mov
test
jne
mov
jmp
push
mov
push
lea
call
cmp
mov
mov
pop
je
push
push
call
xor
pop
leave
ret
push
mov
call
mov
mov
xor
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
call
ret
mov
ret
jmp
mov
mov
push
push
mov
call
mov
call
mov
ret
push
mov
sub
push
mov
push
mov
call
mov
mov
test
je
mov
jmp
test
je
push
call
jmp
push
push
call
mov
test
je
push
push
push
push
call
test
je
mov
push
mov
lea
push
push
call
test
jne
test
je
push
push
call
test
je
test
je
xor
test
mov
jne
call
test
je
mov
lea
push
push
push
call
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
call
jmp
lea
push
push
call
lea
push
push
push
call
push
call
lea
push
lea
push
call
jmp
push
call
mov
mov
lea
push
push
call
lea
push
push
call
push
lea
push
push
push
call
mov
mov
mov
mov
add
cdq
sub
mov
sub
mov
cdq
sub
mov
sar
sar
sub
mov
sub
mov
mov
add
cdq
sub
mov
mov
cdq
sub
sar
sar
sub
cmp
jge
mov
jmp
add
cmp
jle
sub
add
mov
cmp
pop
jge
mov
jmp
mov
add
cmp
jle
mov
sub
add
push
push
push
push
push
mov
push
call
pop
pop
leave
ret
sub
push
push
push
xor
push
inc
xor
test
mov
mov
mov
je
call
test
je
xor
push
call
or
mov
call
mov
mov
jmp
push
push
push
push
push
call
test
jne
cmp
je
push
mov
call
push
call
xor
test
jne
cmp
je
cmp
jne
push
push
push
push
call
test
jne
push
push
push
push
call
inc
test
jne
mov
cmp
jne
call
test
je
cmp
je
mov
mov
cmp
je
cmp
jne
push
mov
call
push
call
xor
mov
mov
call
test
je
push
call
test
pop
je
mov
mov
push
push
push
push
push
call
test
jne
jmp
push
call
or
jmp
and
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
test
je
and
mov
xor
push
push
push
push
call
ret
push
mov
call
push
call
pop
mov
mov
xor
cmp
mov
je
call
call
ret
push
mov
call
mov
mov
and
test
je
call
call
ret
push
mov
cmp
jne
push
call
test
mov
jne
push
call
test
mov
setne
mov
mov
pop
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
and
lea
push
call
push
call
mov
test
je
and
lea
push
mov
call
mov
xor
test
setne
test
jne
jmp
call
mov
call
call
ret
cmp
je
push
push
call
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
lea
push
mov
call
mov
xor
cmp
setne
cmp
jne
call
push
call
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
call
mov
mov
call
ret
jmp
push
push
mov
call
mov
test
jne
jmp
call
mov
call
movsx
shr
movsx
mov
mov
lea
pop
ret
push
mov
push
mov
call
test
jne
jmp
push
mov
push
mov
push
call
pop
ret
push
mov
call
call
mov
cmp
jne
cmp
je
push
call
push
mov
call
pop
mov
mov
and
test
je
push
push
push
push
push
call
jmp
xor
or
push
mov
call
mov
call
ret
push
push
push
call
push
mov
mov
call
mov
push
mov
call
mov
pop
pop
ret
push
call
mov
xor
test
je
add
jmp
ret
push
mov
test
push
mov
jne
xor
jmp
push
push
call
mov
push
lea
mov
call
push
mov
mov
call
xor
inc
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
push
lea
call
and
and
mov
pop
pop
ret
push
push
mov
call
mov
test
jne
jmp
call
cmp
je
mov
test
je
push
call
and
cmp
je
and
xor
pop
ret
xor
inc
pop
ret
push
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
push
push
call
mov
test
je
mov
push
call
mov
pop
jmp
push
mov
sub
push
push
push
mov
call
mov
xor
cmp
je
cmp
jne
call
cmp
jne
call
cmp
jne
call
test
je
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
call
mov
mov
xor
inc
test
je
mov
push
call
and
test
je
call
mov
test
je
cmp
je
push
lea
push
push
call
mov
add
mov
mov
lea
push
push
push
push
mov
mov
call
mov
mov
push
push
call
mov
mov
call
mov
push
push
call
cmp
jne
mov
mov
call
mov
test
je
push
push
push
call
mov
call
mov
mov
call
pop
pop
pop
leave
ret
push
mov
mov
push
xor
cmp
jne
cmp
jne
xor
jmp
cmp
je
push
call
cmp
jne
jmp
push
lea
call
mov
cmp
jne
cmp
je
cmp
jne
push
call
jmp
mov
mov
call
mov
mov
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
push
mov
mov
call
test
jne
call
mov
lea
push
sub
push
mov
mov
push
mov
call
pop
leave
ret
push
mov
push
push
push
push
call
mov
mov
test
je
push
call
test
je
push
push
push
call
test
jne
cmp
push
jne
call
jmp
call
test
jne
push
call
jmp
push
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
pop
ret
push
push
mov
mov
jmp
push
call
test
je
mov
push
mov
call
test
jne
cmp
je
push
call
mov
test
jne
xor
pop
pop
ret
xor
inc
jmp
push
mov
push
mov
call
test
jne
call
push
mov
push
mov
push
push
call
pop
ret
push
mov
cmp
je
mov
mov
call
test
jne
mov
call
pop
ret
push
push
push
mov
call
test
jne
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
push
push
push
call
xor
inc
jmp
mov
call
neg
sbb
neg
pop
pop
pop
ret
push
mov
push
push
mov
cmp
jne
call
jmp
mov
and
lea
push
push
mov
push
call
test
jge
mov
jmp
mov
pop
leave
ret
push
mov
mov
test
je
push
call
test
jne
mov
call
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
jmp
lea
push
call
push
push
push
push
lea
push
call
test
jne
mov
call
pop
pop
pop
leave
ret
push
mov
push
lea
mov
mov
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
push
push
lea
push
xor
call
mov
mov
call
cmp
je
push
call
test
je
mov
jmp
mov
and
cmp
jne
call
mov
mov
call
mov
mov
pop
leave
ret
push
mov
mov
push
call
mov
push
push
push
call
and
pop
mov
pop
jmp
push
call
test
je
mov
ret
xor
ret
push
mov
sub
test
jne
push
mov
mov
call
test
jne
lea
push
push
call
mov
mov
cmp
jne
mov
cmp
jne
push
push
call
push
call
test
je
mov
call
test
jne
mov
mov
call
test
je
push
mov
call
pop
leave
ret
push
mov
call
push
mov
call
mov
xor
xor
cmp
setne
mov
cmp
jne
call
lea
push
mov
pop
lea
rep
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
cmp
je
mov
mov
push
call
and
cmp
jne
lea
push
lea
push
push
call
push
mov
push
mov
push
call
cmp
mov
jne
push
lea
push
push
call
jmp
mov
add
push
push
call
mov
mov
call
mov
ret
mov
mov
push
lea
pop
lea
rep
call
ret
push
mov
cmp
jne
xor
inc
jmp
push
mov
push
call
test
je
cmp
jne
push
push
push
push
push
call
jmp
push
push
push
push
call
pop
pop
ret
push
mov
call
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
push
call
mov
test
je
cmp
jne
and
or
mov
call
call
ret
push
mov
push
mov
mov
test
je
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
cmp
push
mov
jne
push
mov
call
test
jne
call
mov
cmp
jne
push
jmp
push
call
push
call
test
je
push
push
call
test
je
mov
push
mov
call
jmp
mov
push
push
push
call
test
je
push
mov
call
test
jne
mov
call
pop
pop
ret
test
je
mov
test
jne
xor
ret
push
push
mov
push
jmp
mov
mov
call
test
jne
push
call
push
call
mov
test
jne
pop
pop
ret
mov
jmp
push
mov
test
je
cmp
jne
xor
pop
ret
mov
call
test
jne
mov
call
mov
test
je
mov
jmp
mov
mov
call
test
jne
mov
pop
ret
push
mov
push
push
push
mov
call
jmp
cmp
je
push
call
test
je
push
push
push
push
push
call
jmp
push
push
push
push
call
cmp
je
push
call
test
je
push
push
push
push
push
push
call
push
push
call
mov
test
jne
pop
pop
pop
ret
push
mov
call
push
call
test
jne
xor
jmp
mov
lea
push
mov
call
test
jne
push
call
push
mov
call
test
je
mov
test
je
push
lea
call
mov
test
je
push
lea
call
push
and
lea
mov
call
and
xor
test
setne
or
mov
lea
call
mov
jmp
push
mov
call
call
ret
cmp
push
mov
je
cmp
jne
push
push
call
test
jne
mov
call
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
mov
mov
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
neg
sbb
and
add
ret
mov
mov
mov
mov
mov
xor
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
push
push
push
call
pop
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
call
pop
ret
mov
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
ret
mov
test
jne
push
call
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
cmp
push
mov
jne
push
call
test
je
mov
push
mov
call
jmp
push
push
call
test
jne
mov
call
pop
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
push
push
push
mov
call
test
jne
mov
call
pop
ret
push
push
call
push
mov
call
mov
test
jne
call
cmp
jne
push
call
test
pop
mov
jne
xor
jmp
push
push
call
test
mov
jne
push
call
and
jmp
push
call
push
push
push
push
call
pop
ret
push
mov
sub
mov
push
push
push
movzx
shr
xor
cmp
mov
mov
jne
cmp
jne
xor
jmp
lea
call
mov
push
lea
push
push
push
mov
mov
call
cmp
jne
xor
inc
jmp
mov
jmp
push
mov
call
cmp
jne
call
mov
cmp
je
push
push
call
test
jne
cmp
je
mov
push
push
push
mov
push
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
push
push
mov
call
movzx
mov
mov
push
mov
mov
call
test
jne
call
mov
cmp
jne
xor
inc
jmp
push
push
call
test
jne
mov
push
lea
push
movzx
or
push
push
mov
mov
mov
mov
call
pop
pop
pop
leave
ret
push
mov
push
call
test
je
mov
call
test
je
mov
jmp
push
push
call
test
je
push
call
jmp
push
push
call
pop
ret
test
je
mov
test
jne
xor
ret
push
mov
push
jmp
mov
push
call
test
jne
push
call
pop
ret
push
mov
call
mov
test
je
cmp
jne
mov
call
mov
call
test
jne
push
push
push
push
push
push
call
mov
pop
jmp
push
mov
call
mov
test
je
cmp
jne
push
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
pop
ret
push
mov
call
cmp
jne
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
mov
call
pop
ret
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
xor
inc
ret
xor
ret
cmp
jne
xor
ret
mov
mov
push
push
call
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
inc
jmp
xor
ret
push
mov
cmp
push
push
push
je
mov
test
je
mov
test
jne
mov
jmp
push
and
call
test
je
mov
add
mov
push
call
mov
xor
jmp
mov
xor
test
sete
test
mov
jne
push
push
call
test
pop
pop
je
cmp
je
push
push
push
push
call
test
je
cmp
jne
test
jl
add
mov
test
jne
mov
jmp
mov
pop
pop
pop
pop
ret
mov
mov
mov
mov
call
jmp
mov
inc
mov
ret
mov
dec
push
mov
jne
test
je
mov
push
call
mov
pop
ret
push
push
push
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
push
mov
mov
call
test
jne
push
mov
call
mov
test
je
push
mov
test
je
push
call
test
je
mov
call
cmp
je
test
mov
mov
jne
and
jmp
mov
mov
lea
push
push
push
push
call
pop
pop
pop
leave
ret
push
mov
cmp
push
jne
cmp
je
cmp
je
cmp
jne
mov
call
test
je
push
call
push
call
mov
test
je
call
push
call
cmp
je
mov
call
test
je
push
call
xor
inc
jmp
xor
pop
pop
ret
push
mov
call
mov
mov
push
push
call
and
and
mov
mov
xor
inc
sub
je
sub
je
sub
je
sub
jne
push
call
mov
lea
push
lea
push
push
call
push
push
push
push
push
call
push
mov
lea
push
push
call
mov
call
ret
push
push
push
call
push
push
call
push
call
push
call
jmp
push
call
mov
shr
push
movsx
push
push
call
xor
test
sete
jmp
push
call
push
mov
call
push
push
push
call
test
je
push
push
push
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
push
mov
mov
call
mov
xor
test
setne
test
jne
call
cmp
je
push
push
push
push
call
jmp
mov
mov
mov
call
test
movzx
mov
jne
mov
test
jne
test
jne
cmp
jne
push
pop
push
push
lea
push
call
lea
mov
push
mov
push
push
call
add
test
mov
je
push
push
call
movzx
cmp
jne
jmp
push
lea
call
and
push
mov
call
mov
mov
call
mov
mov
call
mov
push
push
push
mov
call
cmp
je
mov
mov
and
or
cmp
je
push
push
call
jmp
push
lea
push
push
call
test
je
and
lea
push
push
call
test
pop
pop
je
push
push
call
test
mov
je
mov
push
push
call
test
jne
push
push
push
call
push
push
call
cmp
jne
push
call
push
push
push
call
push
push
push
push
call
cmp
mov
je
push
call
and
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
push
mov
call
mov
test
jne
call
push
mov
cmp
je
cmp
jne
call
push
push
push
push
call
test
mov
jne
call
mov
pop
pop
ret
push
mov
sub
push
push
mov
test
mov
je
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
push
mov
call
test
jne
mov
mov
call
xor
jmp
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
call
test
jne
mov
mov
call
xor
test
setne
pop
pop
leave
ret
push
push
mov
mov
push
call
test
je
mov
mov
call
mov
xor
push
push
push
push
call
push
push
push
push
push
push
call
mov
call
mov
cmp
jne
jmp
push
push
push
push
call
push
push
push
push
push
push
call
call
cmp
je
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
mov
xor
mov
mov
mov
cmp
mov
jne
push
mov
push
call
test
je
mov
jmp
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
jne
jmp
cmp
mov
jne
push
call
push
push
push
call
cmp
jne
mov
shr
push
movsx
push
push
call
test
jne
mov
test
je
cmp
jle
cmp
jb
cmp
jbe
cmp
jb
cmp
jbe
lea
cmp
ja
mov
mov
lea
push
push
push
push
call
test
jne
mov
mov
call
mov
xor
push
lea
mov
and
call
imul
mov
add
cmp
mov
jne
mov
mov
cmp
jne
mov
lea
mov
call
test
je
cmp
jb
jmp
mov
mov
mov
mov
mov
jmp
cmp
push
push
jae
push
push
call
test
mov
je
mov
mov
lea
call
mov
mov
mov
lea
cmp
ja
jmp
mov
mov
push
push
jmp
mov
mov
cmp
je
push
push
push
add
push
call
mov
test
jne
mov
call
mov
mov
cmp
jne
mov
and
lea
call
or
lea
call
xor
call
ret
movsx
shr
movsx
push
push
jmp
push
call
push
mov
call
jmp
push
jmp
mov
call
jmp
push
call
push
jmp
mov
shr
push
movzx
push
push
call
push
mov
call
jmp
push
push
call
jmp
push
jmp
lea
call
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
test
jne
mov
test
je
push
lea
call
test
je
mov
lea
push
push
lea
push
mov
call
and
and
lea
mov
mov
call
jmp
lea
call
mov
push
mov
lea
push
mov
mov
call
and
mov
lea
mov
call
jmp
mov
shr
push
push
call
push
movzx
jmp
mov
shr
push
movzx
jmp
push
call
push
mov
shr
jmp
mov
call
jmp
push
jmp
mov
shr
push
movzx
jmp
mov
shr
movsx
push
movsx
jmp
mov
shr
push
movzx
jmp
push
call
push
push
call
push
xor
cmp
sete
jmp
push
call
jmp
push
call
jmp
mov
shr
movsx
push
movsx
push
push
call
jmp
push
jmp
push
call
push
jmp
mov
shr
push
movzx
jmp
movsx
shr
movsx
push
push
push
call
jmp
push
push
call
push
jmp
mov
shr
push
push
call
jmp
mov
movsx
shr
cmp
movsx
mov
mov
jne
push
call
push
push
push
jmp
push
push
jmp
push
push
mov
call
jmp
push
mov
call
jmp
mov
push
shr
push
movzx
push
jmp
movsx
shr
movsx
push
push
push
mov
call
jmp
push
push
mov
call
jmp
movsx
shr
movsx
push
push
mov
shr
push
movzx
push
mov
call
mov
jmp
mov
call
test
mov
je
jmp
mov
lea
mov
call
mov
push
push
mov
call
mov
mov
test
je
mov
mov
or
lea
call
xor
inc
jmp
nop
jo
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
jo
add
outs
inc
add
outs
inc
add
jb
add
jno
add
jno
add
jo
add
jo
add
jo
add
jo
add
jo
add
outs
inc
add
outs
inc
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
inc
add
jno
add
add
add
jno
add
jno
add
jb
add
inc
add
jno
add
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
outs
inc
add
in
mov
sub
mov
cmp
push
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
jne
mov
mov
mov
mov
mov
xor
push
lea
push
movzx
or
push
push
call
jmp
mov
xor
push
shr
push
or
push
push
call
test
je
mov
xor
inc
cmp
je
mov
jmp
cmp
jb
cmp
jbe
cmp
jne
push
add
push
push
push
call
jmp
lea
cmp
ja
mov
push
mov
add
push
mov
lea
push
xor
push
push
mov
call
cmp
pop
jne
xor
pop
leave
ret
and
push
mov
cmp
je
mov
mov
push
call
push
push
mov
call
pop
ret
push
mov
call
mov
xor
cmp
jne
mov
jmp
push
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
push
call
jmp
xor
jmp
mov
call
mov
ret
mov
xor
mov
cmp
je
mov
mov
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
and
call
mov
call
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
push
lea
call
mov
mov
xor
push
push
lea
push
mov
mov
call
test
je
lea
push
push
push
push
lea
push
push
call
add
jmp
push
push
push
lea
push
push
call
add
push
push
mov
push
call
lea
mov
call
mov
push
mov
call
mov
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
mov
ret
push
mov
cmp
je
push
push
mov
push
lea
push
push
call
add
cmp
pop
ja
test
jne
pop
ret
mov
test
je
mov
xor
inc
jmp
pop
jmp
push
mov
call
mov
cmp
mov
jne
mov
call
mov
test
jl
mov
test
jne
lea
push
call
mov
test
jl
and
mov
mov
and
lea
push
push
push
call
test
jl
mov
lea
push
lea
push
mov
mov
push
call
push
push
push
call
mov
mov
mov
or
xor
test
je
mov
push
call
jmp
push
push
push
call
mov
mov
xor
mov
call
ret
push
mov
call
mov
lea
push
push
push
call
add
test
jne
push
call
test
pop
jne
xor
jmp
call
cmp
je
push
call
and
call
mov
lea
push
mov
call
push
mov
call
or
push
call
xor
inc
call
ret
push
call
push
push
call
int3
push
mov
sub
push
mov
push
xor
cmp
mov
mov
je
push
movzx
cmp
je
inc
inc
movzx
movzx
inc
inc
mov
add
cmp
mov
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
push
pop
xor
lea
rep
or
push
lea
mov
call
mov
mov
lea
push
push
movzx
push
push
mov
push
call
cmp
jne
and
mov
add
call
xor
jmp
cmp
je
cmp
jne
push
movzx
push
push
movzx
push
mov
push
call
cmp
jne
mov
add
cmp
jne
cmp
pop
je
mov
push
push
push
push
push
push
call
mov
pop
pop
leave
ret
mov
push
mov
push
mov
call
movzx
mov
mov
push
push
call
test
mov
jne
push
push
call
mov
push
call
pop
pop
ret
push
mov
sub
call
mov
mov
not
and
jne
xor
inc
jmp
push
push
push
push
xor
lea
push
push
xor
call
mov
add
mov
call
test
mov
push
mov
mov
pop
mov
mov
je
lea
push
mov
mov
call
test
je
inc
test
je
or
lea
push
mov
call
test
je
or
test
je
lea
push
mov
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
lea
push
mov
call
or
and
test
je
push
lea
push
mov
call
or
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
or
mov
mov
mov
and
cmp
jne
or
mov
or
mov
and
pop
sub
pop
neg
sbb
inc
pop
leave
ret
push
mov
cmp
jne
push
call
mov
xor
inc
pop
ret
push
push
push
push
xor
xor
cmp
mov
je
call
mov
push
push
push
call
test
je
push
push
call
mov
test
je
push
call
mov
push
mov
call
test
mov
je
test
je
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
push
xor
inc
test
je
mov
mov
mov
mov
jmp
mov
add
cmp
push
ja
jmp
call
jmp
call
jmp
push
call
jmp
push
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
call
xor
cmp
sete
and
jmp
mov
test
je
push
push
call
jmp
push
jmp
push
call
mov
mov
jmp
xor
pop
pop
pop
ret
lea
dec
jge
add
inc
add
inc
add
inc
add
inc
add
jge
add
jge
add
jge
add
jge
add
jge
add
in
mov
cmp
push
mov
jne
call
cmp
jne
call
call
push
mov
push
mov
push
mov
push
call
jmp
cmp
push
push
jne
mov
and
test
je
mov
mov
mov
call
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
jne
cmp
jne
cmp
jne
cmp
je
jmp
mov
test
je
push
push
call
test
pop
pop
je
mov
mov
mov
add
mov
test
jne
mov
test
jne
mov
jmp
cmp
je
mov
shr
movzx
mov
jne
mov
mov
call
jmp
push
push
push
push
call
test
jne
call
mov
cmp
jne
xor
pop
pop
pop
pop
ret
push
push
push
push
push
push
push
call
jmp
mov
ret
mov
ret
mov
ret
mov
ret
push
push
mov
call
mov
mov
call
test
je
mov
call
push
call
mov
push
mov
call
pop
ret
mov
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
ret
push
push
push
push
push
call
ret
push
mov
call
mov
xor
inc
xor
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
lea
mov
test
je
call
and
pop
ret
call
mov
mov
push
mov
call
ret
call
mov
mov
push
mov
call
ret
mov
ret
push
push
mov
mov
xor
cmp
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
add
or
push
push
push
call
jmp
cmp
je
cmp
jne
push
mov
call
cmp
jne
push
call
push
call
push
push
push
push
call
pop
push
mov
call
mov
pop
pop
ret
push
mov
mov
test
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
or
push
push
push
call
jmp
mov
test
je
push
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
pop
pop
ret
push
mov
test
push
push
mov
jne
call
mov
test
je
cmp
jne
mov
mov
push
push
push
call
mov
and
cmp
jae
push
push
or
push
push
mov
call
jmp
mov
test
je
push
push
call
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
push
call
movsx
shr
cmp
movsx
mov
jle
cmp
jg
jmp
cmp
jle
push
pop
lea
cdq
sub
lea
sar
mov
sar
mov
shl
add
sub
cmp
jle
push
pop
push
pop
cmp
jle
mov
push
lea
push
push
call
mov
add
sar
add
imul
lea
lea
mov
mov
mov
movzx
mov
shl
inc
not
movzx
mov
mov
add
dec
jne
lea
push
push
push
push
push
call
test
pop
pop
mov
pop
jne
push
push
call
mov
mov
xor
call
add
leave
ret
push
mov
mov
push
xor
xor
cmp
setne
push
mov
call
cmp
je
cmp
jne
mov
cmp
jb
call
cmp
jne
call
cmp
je
push
mov
push
push
push
push
call
pop
pop
ret
push
push
mov
test
mov
je
cmp
je
cmp
je
call
cmp
je
push
call
add
cmp
jle
push
call
test
jle
cmp
jne
mov
jmp
push
and
call
push
call
pop
pop
ret
cmp
je
mov
mov
jmp
xor
inc
ret
cmp
jne
call
lea
cmp
je
mov
mov
mov
jmp
ret
cmp
jne
call
mov
mov
jmp
mov
mov
test
jne
call
add
cmp
jne
mov
push
call
jmp
mov
mov
push
mov
call
ret
cmp
je
mov
mov
jmp
xor
ret
mov
test
jl
cmp
jl
call
mov
lea
ret
mov
push
push
push
push
call
ret
push
mov
mov
test
jne
call
mov
mov
cmp
jb
push
mov
add
cmp
jb
call
lea
push
call
mov
mov
push
mov
call
test
jne
mov
mov
push
call
xor
pop
inc
pop
ret
push
mov
sub
push
push
push
lea
push
xor
mov
push
push
push
mov
push
mov
mov
mov
mov
call
test
jne
lea
push
lea
push
push
push
push
push
push
push
mov
push
call
test
jne
lea
push
lea
push
mov
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
je
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
cmp
jne
xor
jmp
lea
push
lea
push
push
push
push
push
push
push
push
call
push
call
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
cmp
push
mov
je
push
call
mov
test
je
push
lea
push
push
push
push
push
call
push
mov
call
xor
test
sete
jmp
push
lea
push
push
push
call
add
push
lea
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
mov
test
push
mov
push
jne
call
test
je
push
call
and
push
mov
lea
push
push
call
mov
add
cmp
ja
push
lea
push
push
call
cmp
jne
push
lea
push
call
test
je
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
test
jne
call
mov
test
je
push
call
and
pop
ret
push
mov
test
je
push
push
call
mov
and
je
push
dec
call
test
jne
push
call
pop
pop
ret
push
call
mov
test
je
mov
test
je
push
call
pop
mov
lea
cmp
ja
push
call
and
jmp
sub
sub
push
push
call
pop
pop
xor
inc
pop
ret
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
lea
push
push
call
lea
push
push
call
pop
neg
pop
mov
sbb
xor
inc
pop
call
leave
ret
push
mov
sub
push
push
lea
push
push
call
mov
push
push
jmp
push
call
test
je
push
push
call
test
je
lea
push
push
call
push
lea
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
leave
ret
mov
jmp
cmp
jne
xor
ret
mov
mov
jmp
cmp
jne
call
mov
mov
jmp
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
lea
push
push
push
mov
mov
call
mov
test
jne
push
lea
push
push
push
call
mov
test
jne
and
lea
push
lea
call
lea
push
push
mov
call
mov
mov
test
setne
add
mov
call
test
jne
or
jmp
mov
mov
call
mov
ret
mov
mov
cmp
je
cmp
jne
push
push
call
mov
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
xor
mov
mov
mov
call
cmp
mov
je
lea
push
mov
call
cmp
je
mov
push
push
push
push
mov
call
cmp
jne
cmp
je
xor
cmp
setne
cmp
jne
jmp
push
lea
call
push
lea
mov
call
push
lea
push
lea
push
call
push
mov
push
lea
push
call
add
mov
add
mov
call
lea
push
mov
push
call
lea
push
push
push
call
test
jne
push
lea
push
push
push
call
cmp
jne
lea
push
push
call
push
call
lea
push
lea
push
push
push
call
mov
add
call
mov
add
call
xor
inc
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
xor
cmp
sete
mov
ret
call
add
push
call
ret
call
mov
mov
ret
call
mov
ret
call
cmp
jne
push
push
call
call
mov
test
je
mov
test
je
call
test
je
mov
mov
pop
jmp
call
cmp
jne
push
call
pop
ret
call
add
push
call
test
jne
jmp
ret
push
push
mov
test
mov
jne
push
pop
mov
test
je
push
call
and
pop
cmp
je
xor
push
pop
mov
mul
seto
neg
or
push
call
mov
shl
push
push
push
mov
call
add
mov
pop
pop
ret
push
mov
mov
test
je
push
call
and
pop
mov
and
and
call
and
pop
ret
mov
mov
mov
dec
mov
jne
call
ret
mov
push
mov
mov
shr
mov
xor
div
mov
mov
mov
test
je
mov
jmp
cmp
je
mov
test
jne
xor
pop
ret
test
jne
call
push
mov
test
jne
xor
jmp
push
mov
mov
xor
shr
div
mov
jmp
cmp
je
mov
test
jne
xor
pop
pop
ret
mov
jmp
push
mov
test
jne
xor
jmp
push
mov
mov
shr
xor
div
lea
mov
jmp
cmp
je
mov
mov
test
jne
pop
pop
ret
mov
push
mov
call
xor
inc
jmp
mov
push
mov
test
je
cmp
push
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
call
mov
test
jne
mov
shr
xor
push
mov
div
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
pop
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
ret
mov
mov
xor
cmp
mov
jg
push
pop
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
inc
mov
and
and
pop
ret
push
mov
push
push
push
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
push
push
mov
call
mov
call
mov
mov
mov
shl
mov
mov
mov
mov
pop
add
pop
leave
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
call
inc
ret
push
mov
call
mov
mov
mov
push
mov
push
lea
call
and
push
lea
call
lea
push
mov
mov
call
xor
cmp
mov
jne
call
cmp
je
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
push
mov
call
mov
mov
test
jne
xor
call
ret
push
lea
call
test
jne
lea
push
call
test
je
mov
add
mov
cmp
jne
mov
jmp
push
call
and
lea
mov
call
mov
test
jne
call
push
call
push
lea
call
push
or
mov
call
mov
add
mov
cmp
jne
mov
mov
jmp
push
call
push
push
call
int3
push
mov
sub
push
mov
test
je
mov
neg
sbb
mov
je
push
lea
lea
push
lea
push
lea
push
mov
call
mov
add
and
cmp
jne
and
push
call
cmp
jne
pop
lea
call
lea
call
pop
leave
ret
push
mov
call
mov
mov
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
call
mov
mov
xor
cmp
je
dec
cmp
mov
jne
cmp
je
cmp
je
call
cmp
je
mov
cmp
je
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
push
call
mov
mov
call
mov
test
je
test
je
mov
test
je
push
call
cmp
pop
jae
cmp
je
mov
and
test
je
push
call
push
mov
call
pop
pop
push
call
test
pop
mov
jne
cmp
je
push
call
pop
mov
pop
xor
cmp
pop
setne
pop
pop
ret
push
mov
mov
push
xor
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
test
jne
call
mov
mov
dec
mov
jne
call
ret
test
jne
jmp
mov
test
je
mov
test
push
mov
mov
je
and
jmp
and
push
call
mov
pop
ret
mov
test
jne
call
cmp
push
jne
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
mov
mov
mov
mov
mov
inc
and
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
test
push
mov
jne
push
call
jmp
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
pop
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
call
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
call
pop
mov
mov
jmp
mov
cmp
jne
cmp
ja
push
call
push
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
sub
push
add
push
push
call
add
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
cmp
jl
push
call
push
mov
push
push
push
call
mov
mov
sub
push
add
push
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
push
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
xor
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
call
test
je
mov
xor
mov
rep
mov
mov
rep
pop
pop
ret
call
mov
mov
mov
push
mov
push
push
push
call
add
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
mov
add
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
push
mov
mov
push
not
test
mov
push
mov
je
push
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
jmp
call
push
push
mov
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
pop
pop
pop
pop
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
xor
inc
ret
xor
ret
push
mov
call
push
mov
push
mov
and
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
mov
call
mov
mov
mov
and
push
push
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
test
jne
mov
jmp
mov
mov
xor
ret
push
mov
call
mov
mov
mov
test
jne
mov
jmp
call
push
mov
push
and
push
mov
call
mov
test
je
mov
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
mov
mov
mov
mov
ret
cmp
jb
call
movzx
mov
push
mov
push
add
jmp
cmp
je
test
mov
jne
mov
mov
and
cmp
jae
and
add
inc
mov
test
jne
pop
pop
ret
call
int3
mov
ret
mov
test
jl
cmp
jge
imul
add
ret
call
int3
mov
mov
mov
test
push
mov
mov
mov
mov
pop
je
test
jne
call
ret
cmp
je
push
call
pop
ret
mov
mov
or
sub
cmp
jae
mov
ret
add
mov
mov
xor
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
mov
pop
ret
mov
test
je
and
push
push
push
push
call
xor
add
inc
ret
push
push
call
mov
xor
mov
mov
push
push
lea
push
call
add
cmp
jge
mov
jmp
mov
call
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
call
mov
mov
lea
call
ret
push
mov
push
mov
push
push
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
push
call
pop
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
mov
jg
mov
mov
imul
push
call
push
xor
push
push
mov
call
add
cmp
jle
xor
mov
mov
add
je
mov
mov
add
dec
jne
jmp
cmp
jg
mov
cmp
jge
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
mov
mov
mov
sub
inc
cmp
jl
jmp
jle
sub
test
mov
jle
mov
imul
mov
push
add
call
mov
inc
sub
add
cmp
jl
jmp
mov
cmp
jne
mov
cdq
and
add
sar
cmp
jge
push
pop
jmp
mov
cmp
jle
mov
mov
add
cmp
mov
jl
mov
mov
cmp
jl
imul
push
call
mov
imul
push
push
mov
push
push
call
mov
mov
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
and
and
mov
sub
inc
cmp
jl
push
call
pop
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
mov
test
mov
je
test
jne
call
mov
mov
push
push
not
test
push
mov
mov
je
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
jmp
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
pop
pop
pop
pop
ret
mov
mov
cmp
je
cmp
mov
je
and
mov
mov
mov
mov
mov
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
mov
neg
sbb
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
cmp
mov
je
push
xor
cmp
jle
push
xor
mov
push
add
call
inc
add
cmp
jl
pop
push
call
pop
pop
pop
ret
push
push
mov
mov
not
test
mov
mov
je
push
call
jmp
call
push
push
mov
call
push
push
push
call
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
jmp
push
push
mov
test
mov
jge
call
cmp
jl
push
lea
push
call
push
mov
imul
add
call
pop
pop
ret
push
mov
mov
sub
mov
call
mov
sub
call
mov
sub
pop
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
add
cmp
je
cmp
jne
mov
mov
add
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
mov
movzx
mov
movzx
dec
mov
cmp
mov
je
test
je
and
or
cmp
jl
cmp
je
mov
mov
shl
cmp
lea
je
cmp
je
mov
push
push
add
push
push
mov
call
test
jl
mov
mov
jmp
cmp
jne
mov
and
mov
mov
jmp
cmp
jne
cmp
jne
mov
mov
mov
test
push
pop
je
cmp
jne
mov
test
je
mov
xor
cmp
push
setne
mov
call
test
pop
je
mov
mov
mov
jmp
and
push
push
lea
push
call
mov
and
push
push
mov
call
or
cmp
je
push
call
pop
mov
mov
push
pop
jmp
mov
mov
jmp
movzx
add
cmp
ja
jmp
movsx
jmp
movzx
jmp
movsx
jmp
movzx
jmp
mov
mov
mov
mov
add
jmp
fld
fstp
jmp
fld
fstp
jmp
xor
cmp
setne
jmp
mov
mov
add
inc
mov
cmp
jne
cmp
jle
mov
mov
mov
mov
jmp
mov
cmp
je
mov
mov
mov
mov
jmp
xor
call
ret
nop
aam
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
mov
call
mov
push
lea
call
mov
mov
xor
cmp
mov
mov
mov
jne
lea
mov
push
call
test
mov
mov
mov
movzx
mov
je
lea
push
call
test
pop
jne
or
cmp
je
push
push
call
mov
jmp
mov
call
mov
mov
push
push
lea
push
push
call
movzx
and
mov
add
inc
mov
mov
mov
mov
mov
xor
mov
mov
shl
push
call
test
pop
jne
or
cmp
je
push
push
jmp
mov
cmp
ja
shl
mov
call
mov
mov
push
push
push
call
add
push
push
call
mov
lea
push
call
test
pop
je
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
mov
push
push
push
push
push
call
test
mov
jne
movzx
cmp
push
push
push
mov
je
cmp
je
cmp
je
add
cmp
ja
call
mov
mov
jmp
call
mov
jmp
call
fstp
jmp
call
fstp
fld
fstp
mov
mov
xor
cmp
jbe
mov
mov
push
call
add
inc
cmp
jb
cmp
lea
je
mov
call
or
cmp
je
push
push
call
mov
jmp
mov
xor
cmp
jbe
mov
push
call
inc
add
cmp
jb
push
push
call
call
mov
test
je
mov
mov
movzx
add
cmp
ja
jmp
mov
jmp
mov
mov
mov
mov
jmp
fld
fstp
jmp
fld
fstp
jmp
neg
sbb
mov
jmp
lea
mov
movs
movs
movs
movs
jmp
mov
jmp
movzx
sub
je
dec
je
sub
je
dec
jne
test
je
mov
push
call
jmp
lea
push
call
jmp
push
call
lea
mov
call
or
cmp
je
push
push
call
xor
lea
call
ret
lea
xor
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
call
mov
mov
call
lea
mov
mov
call
and
lea
call
lea
call
mov
mov
mov
add
neg
sbb
and
cmp
mov
mov
mov
je
push
mov
call
neg
mov
sbb
and
add
mov
call
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
push
push
push
call
add
lea
push
mov
mov
call
test
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
cmp
je
push
lea
call
push
call
mov
add
mov
call
add
mov
cmp
je
push
lea
call
mov
push
call
lea
mov
call
jmp
push
mov
call
test
push
lea
push
je
push
call
mov
jmp
push
call
mov
push
lea
call
push
call
mov
add
mov
call
xor
cmp
jne
call
push
lea
call
push
call
mov
add
mov
call
cmp
jne
cmp
je
call
mov
push
lea
call
push
call
mov
add
mov
call
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
call
mov
mov
mov
mov
and
test
je
call
cmp
je
push
call
pop
or
mov
call
in
adc
adc
and
inc
pusha
fld
stc
adc
pop
xor
loop
jecxz
add
xchg
cmp
push
push
and
or
jge
cld
sti
xor
mov
aam
into
(bad)
pop
mov
add
jle
iret
inc
push
inc
mov
lahf
dec
xchg
daa
sar
push
inc
sbb
ret
repnz
add
add
sbb
xor
cmc
cmp
or
in
in
xchg
stos
jns
in
adc
sub
fnstenv
lds
arpl
push
sbb
and
cmc
fdivr
in
add
call
mov
aaa
jnp
jne
add
and
out
mov
addr16
mov
cmps
je
pop
cmp
jmp
cmp
xchg
adc
in
cmp
ja
push
or
shl
cmp
pop
fwait
arpl
pop
addr16
and
jge
push
xlat
add
out
es
and
push
je
inc
in
sbb
push
hlt
add
ror
sbb
pop
and
dec
cmps
adc
mov
movs
bound
jp
xchg
retf
shr
push
xor
sbb
add
data16
cmp
mov
test
fdivr
jno
cdq
jecxz
shr
pmullw
or
lock
xor
xchg
shl
add
out
dec
jbe
or
add
lock
and
fnstsw
pop
adc
jo
xor
jno
fidiv
adc
xchg
in
repnz
into
xchg
fcomp
icebp
inc
push
inc
mov
cmps
and
mov
add
sbb
cmp
(bad)
push
lock
push
mul
add
xchg
push
shr
mov
fadd
out
push
push
adc
hlt
out
repnz
xor
ins
and
or
pop
xor
push
push
jg
inc
mov
add
cwde
push
add
push
fldenv
push
xchg
movs
loop
xor
jb
sub
fimul
iret
repnz
push
fistp
std
cdq
push
and
aad
cmp
in
loop
mov
jg
aam
mov
sub
daa
fdivr
sub
rol
dec
loop
enter
xchg
aaa
int3
push
aam
inc
data16
inc
mov
adc
div
add
cld
popa
mov
add
and
gs
pushf
aad
int3
fmul
pop
ret
into
mov
shr
loopne
jmp
inc
daa
xchg
add
aaa
(bad)
jle
mov
dec
and
jbe
mov
mov
leave
mov
aad
add
adc
daa
xchg
pop
stos
inc
mov
xchg
fwait
or
loop
outs
xchg
loop
xor
inc
pop
(bad)
hlt
imul
mov
aaa
mov
xor
arpl
mov
mov
pop
and
mov
das
bound
or
add
and
jmp
(bad)
push
cmp
jno
add
mov
xchg
sub
xchg
mov
xchg
push
jbe
add
push
cmp
aam
in
aam
fmul
retf
mov
shl
lfs
xchg
test
pop
mov
mov
push
jmp
(bad)
ss
jo
bound
mov
sar
cmp
or
jmp
icebp
xor
ret
cmc
push
xor
xchg
mov
jl
push
(bad)
push
mov
xchg
adc
or
xor
and
fidivr
(bad)
cmp
inc
cmc
retf
mov
cmps
push
fsub
xchg
jmp
in
mov
lock
inc
out
mov
movs
push
ins
lock
aas
sub
ret
popf
cmp
xor
push
jl
lods
mov
pop
imul
mov
mov
jp
les
aas
(bad)
in
jae
in
dec
lock
xchg
adc
fstp
xor
retf
es
adc
add
sbb
xchg
aam
mov
js
cmc
adc
stos
clc
pop
xchg
xor
(bad)
push
jns
sar
in
into
repz
or
mov
mov
pusha
repz
mov
gs
push
push
cmps
rcl
ret
mov
adc
std
or
pop
mov
fwait
lds
cmc
mov
inc
ins
xchg
mov
loop
fdivr
jb
stos
stc
mov
jbe
sub
dec
push
pop
jp
imul
fidivr
jl
lock
mov
push
xchg
mov
push
lahf
adc
mov
sub
loop
xor
outs
fs
sar
lods
mov
push
xor
xchg
retf
and
lock
mov
mov
das
push
scas
sub
push
mov
fcmovbe
xchg
sub
jge
retf
jo
hlt
adc
jmp
jmp
fcom
add
inc
fisub
pop
jno
xor
mov
xor
aam
out
adc
mov
rol
cmp
xchg
xchg
xchg
js
repnz
sahf
jb
push
push
retf
fwait
ror
lahf
(bad)
jmp
es
dec
rcl
xor
xor
in
popa
out
inc
inc
xchg
loop
dec
scas
pop
dec
mov
mov
loop
dec
mov
xor
int3
in
push
iret
xchg
lock
daa
cld
sub
stos
arpl
ret
jne
or
jns
add
xor
mov
inc
scas
sbb
bound
xor
inc
add
or
or
lock
in
sub
add
or
out
(bad)
mov
shr
leave
popf
push
cli
ins
adc
lods
sbb
ret
cli
xor
test
sar
add
sbb
mov
jae
cmp
add
stc
xor
or
cld
inc
dec
(bad)
and
rcr
sar
pushf
test
and
les
jb
push
mov
daa
fidiv
or
call
sub
sti
mov
push
mov
push
out
ffreep
xchg
ja
add
or
jg
inc
stc
inc
pusha
call
je
cld
or
je
and
ret
xor
adc
(bad)
push
and
leave
loope
cmps
pusha
mov
data16
dec
int
jns
add
mov
add
not
push
aad
xchg
add
jo
xlat
(bad)
jb
ss
mul
fiadd
popf
hlt
(bad)
mov
outs
sbb
mov
or
adc
jae
or
pop
cdq
adc
jb
(bad)
xlat
arpl
stc
xor
ss
xlat
mov
movs
mov
in
xchg
loope
(bad)
pop
test
mov
out
ds
cmp
es
fwait
xor
(bad)
push
jns
inc
push
xor
jp
arpl
mov
mov
pop
push
adc
mov
xchg
inc
jecxz
mov
mov
cmp
mov
rcl
and
mov
sub
adc
or
inc
add
xor
pop
cmps
dec
mov
push
mov
ret
mov
je
mov
arpl
pop
xchg
and
icebp
out
mov
mov
out
iret
inc
lods
xchg
out
ret
xchg
jae
xchg
pop
in
jbe
test
dec
dec
inc
clc
loop
dec
push
inc
stos
cld
pslld
stos
repz
aam
or
xor
mov
mov
inc
inc
mov
push
gs
inc
dec
shl
mov
xchg
(bad)
pop
pushf
mov
in
loop
inc
in
push
pop
movs
pop
icebp
bound
jle
outs
jae
xor
mov
jnp
jae
ret
sub
xchg
frstor
push
push
pushf
inc
ins
cli
mov
sbb
not
push
xor
or
repnz
mov
rcl
mov
or
cmp
sub
or
xor
xor
inc
fwait
mov
push
jb
adc
jmp
add
xchg
dec
cmp
xlat
ins
xlat
add
aam
cmp
mov
jle
pop
adc
imul
push
or
mov
xchg
sub
rcl
xchg
xchg
fldcw
and
push
repz
jmp
dec
(bad)
push
(bad)
jnp
adc
adc
retf
or
dec
push
mov
repz
inc
inc
pop
mov
in
jmp
ds
dec
jb
movs
dec
inc
and
(bad)
(bad)
shr
push
xchg
ja
das
dec
jge
xchg
gs
cmps
pop
push
cmps
xchg
jne
movs
cmp
out
call
jp
inc
pusha
mov
sti
push
and
mov
test
dec
mov
out
lods
aaa
push
jl
fnstenv
mov
ins
jle
pusha
xchg
mov
jno
and
inc
jecxz
mov
and
fidivr
xchg
mov
(bad)
retf
nop
adc
push
icebp
inc
in
adc
mov
aas
shl
inc
xor
and
lds
ins
(bad)
sti
mov
push
in
call
jp
push
xor
mov
mov
call
inc
cmp
nop
and
daa
mov
call
cs
mov
add
iret
std
je
(bad)
cld
or
jb
xor
fldenv
cld
in
cmps
xchg
or
scas
jl
lock
cld
push
cmc
mov
in
or
inc
cmp
adc
dec
jge
cmps
pop
jge
pop
sub
test
int
jae
xchg
inc
dec
jb
or
sbb
inc
cmc
inc
ret
mov
jl
out
mov
test
sbb
aad
int3
loope
fcom
add
sbb
je
movs
fisttp
mov
inc
adc
xchg
jmp
xchg
repnz
pop
stc
or
mov
(bad)
aam
cmp
push
sub
pop
pop
and
stos
mov
jmp
xor
xchg
dec
pop
adc
jbe
sub
xchg
int
push
adc
and
test
and
test
lods
pop
pusha
sti
pusha
imul
adc
inc
aaa
nop
ret
jbe
and
sub
jne
out
aam
mov
(bad)
retf
mov
in
and
add
pop
js
stc
sub
mov
aaa
xlat
xor
and
inc
xchg
data16
jns
ret
jns
xchg
add
out
cmps
jbe
add
mov
cmp
rol
in
jp
mov
xchg
movs
sub
or
mov
inc
ins
cmps
(bad)
push
jmp
sub
ins
out
fadd
aaa
in
sub
inc
into
loopne
push
movs
mov
xor
stos
inc
inc
sbb
shl
xor
inc
mov
dec
ret
leave
push
xchg
add
and
cmp
inc
add
sub
aas
pusha
test
cwde
aad
push
addr16
inc
imul
xchg
add
or
cli
shr
in
pushf
fstp
neg
(bad)
xor
fild
(bad)
call
cmp
mov
cmp
cmps
retf
add
lods
xchg
daa
das
add
movs
icebp
leave
xor
add
sub
loopne
jb
jle
jbe
mov
jge
rcl
adc
xor
bound
fadd
imul
mov
jmp
adc
(bad)
dec
add
icebp
pop
(bad)
ins
cmp
sub
ret
add
xchg
shl
jge
dec
loope
sbb
xor
ins
mov
addr16
pusha
xor
sbb
push
dec
xchg
(bad)
cmp
xor
add
shl
fisubr
ret
inc
movs
adc
mov
bound
stc
xchg
adc
xchg
or
test
arpl
(bad)
lds
push
mov
sub
fnsave
sub
sti
mov
inc
xchg
xchg
adc
jb
adc
loop
div
loope
cmc
fcmovne
shl
rcr
arpl
les
inc
sbb
leave
mov
cmc
not
xchg
rcl
jg
ss
je
mov
les
data16
xlat
jo
xchg
loope
or
push
jmp
inc
push
sti
ret
jnp
pop
pop
leave
inc
xchg
aam
push
mov
fadd
add
inc
dec
xchg
je
(bad)
cmps
aad
inc
push
add
mov
scas
stos
rol
mov
push
adc
movs
add
cmp
jnp
push
shl
dec
xchg
into
pop
inc
and
add
cmp
inc
shl
xchg
call
push
or
nop
push
hlt
dec
or
loop
dec
xchg
(bad)
(bad)
aam
shl
fs
inc
sbb
repz
call
push
jo
stc
and
inc
retf
outs
dec
aam
sub
sub
pushf
mov
mov
ror
outs
jmp
mov
sbb
adc
pop
cmp
inc
adc
jg
loope
test
push
cmc
fldenv
adc
jns
sbb
test
(bad)
out
and
mov
gs
inc
jbe
cmp
mov
adc
jecxz
adc
adc
jo
mov
retf
jl
or
xchg
xor
rol
aam
cmp
jg
and
add
movs
push
adc
sbb
fmul
sub
add
xchg
sahf
stos
movs
fldcw
call
pop
stos
mov
in
xor
popa
pop
add
xor
aaa
neg
leave
inc
ror
hlt
xchg
mov
push
fcmovnbe
leave
push
sub
mov
and
xchg
xchg
ret
add
inc
daa
sbb
retf
icebp
fs
fistp
mov
jmp
jo
inc
mov
out
sti
pop
fwait
dec
inc
(bad)
xchg
sub
cmp
mov
out
mov
mov
repnz
xchg
lock
icebp
lock
scas
push
(bad)
mov
add
mov
iret
and
adc
add
cwde
inc
gs
xor
xchg
mov
cmp
push
xor
shl
fsubrp
std
pop
icebp
dec
sub
inc
jb
gs
cwde
and
rcl
sbb
in
xchg
and
fs
ret
cmp
popf
adc
ret
push
hlt
les
arpl
call
popa
das
test
enter
cli
push
xchg
mov
lahf
jns
xchg
lods
mov
jne
stc
mov
imul
movs
push
xchg
dec
mov
sbb
mov
nop
jle
jb
add
add
aas
leave
push
je
aad
cmp
in
pop
xor
pop
push
or
jo
and
aam
les
shl
adc
and
pop
mov
rol
fsubp
ja
push
aad
aam
mov
outs
mov
jmp
out
shl
sbb
xor
add
or
lock
mov
out
mov
and
or
xor
mov
(bad)
xor
or
scas
int3
sbb
rol
repnz
ret
add
rcr
mov
popa
test
fs
mov
scas
sar
or
mov
mov
xchg
and
inc
icebp
scas
jno
aas
in
mov
and
loope
sbb
xor
cld
mov
xor
scas
mov
and
movs
arpl
push
mov
fwait
cs
inc
int3
push
test
rcl
loope
aam
jno
(bad)
pop
cmp
imul
test
mov
shl
ins
adc
mov
lock
add
mov
(bad)
loop
addr16
je
fbld
jmp
std
out
dec
in
adc
data16
shr
repz
in
add
push
sar
shr
push
lods
sub
aam
or
push
pop
mov
mov
sub
and
(bad)
out
mov
pop
loopne
lods
call
daa
jl
xor
xchg
jno
xchg
mov
mov
and
and
jge
fcmovne
push
movs
ins
cmp
mov
and
jne
sbb
rol
adc
inc
fist
or
lds
ror
xor
fbstp
pop
jns
ja
addr16
test
in
inc
mov
ss
jno
jbe
inc
xor
push
dec
call
(bad)
lahf
jmp
or
icebp
ret
and
mov
cmps
adc
xlat
ret
(bad)
adc
lahf
stc
or
mov
inc
cmp
ins
(bad)
rol
mov
int
mov
aam
inc
movs
movs
nop
call
fs
lahf
inc
iret
ret
mov
gs
dec
arpl
push
aas
cld
jle
jno
bound
jae
mov
nop
adc
aas
cmps
(bad)
movs
inc
xchg
loop
cli
inc
xchg
fs
stos
push
push
repz
inc
jmp
xchg
das
add
repnz
push
(bad)
ficomp
int3
leave
lds
test
xchg
and
adc
xchg
mov
mov
iret
int3
inc
sub
jae
shl
and
daa
fild
sub
xor
fsubrp
inc
repnz
sub
jle
xchg
and
int
add
jne
jne
push
xor
pusha
inc
push
or
mov
imul
jo
mov
lds
jae
xchg
or
add
scas
cmp
cld
or
hlt
mov
jge
pop
add
(bad)
adc
jb
dec
jg
aad
sbb
bound
mov
inc
mov
(bad)
das
retf
sbb
ret
xchg
test
gs
retf
ret
out
movs
std
mov
inc
and
cmp
jnp
push
shl
sub
mov
stc
(bad)
mov
addr16
xchg
mov
mov
inc
jb
les
neg
(bad)
mov
xor
shr
loopne
jl
xor
sbb
mov
mov
test
repz
push
add
leave
jnp
cmp
js
mov
gs
mov
cwde
mov
cmp
in
xor
nop
mov
jne
xchg
movs
adc
outs
mov
rol
(bad)
xor
leave
mov
test
and
dec
loopne
nop
jnp
inc
jnp
popa
pushf
movs
mov
inc
inc
loop
push
(bad)
pusha
xchg
repnz
daa
adc
rcl
xor
and
aam
inc
call
cwde
dec
cmps
out
inc
cmc
rcr
outs
addr16
adc
add
ret
mov
jecxz
mov
or
mov
adc
jns
lock
jbe
xchg
and
push
or
adc
stos
(bad)
int
mov
add
xor
mov
push
adc
add
adc
inc
mov
icebp
data16
pop
in
les
dec
mov
add
(bad)
cmp
fdiv
shl
mov
mov
in
pusha
xchg
movs
lds
inc
cmp
daa
(bad)
aam
cmp
and
std
dec
mov
push
push
push
(bad)
cmc
rol
push
jp
add
mov
cmps
pop
rcl
cmps
pushf
sar
pop
outs
inc
repz
inc
shl
jg
ds
cli
dec
in
je
xor
push
ror
add
outs
mov
add
sub
inc
sub
popa
iret
test
gs
fs
stos
xor
retf
mov
xchg
sbb
push
jmp
adc
pop
or
popa
pop
loopne
add
loop
cmp
fst
and
fcmovnbe
dec
add
dec
pop
jns
popf
in
mov
sbb
cmc
je
loop
push
or
mov
mov
in
adc
and
iret
xchg
icebp
mov
inc
adc
out
movs
xor
push
(bad)
pop
mov
cmps
cmps
push
fsubr
mov
cmp
dec
xchg
lds
les
mov
push
mov
mov
dec
retf
or
jb
popf
outs
mov
inc
mov
lock
inc
inc
xor
push
mov
pusha
inc
xor
repnz
lods
mov
inc
hlt
cdq
push
in
popa
or
pop
mov
cmc
or
jmp
repnz
cmps
in
xchg
adc
add
gs
jne
fld
cld
pop
cmps
inc
and
mov
ret
inc
pop
gs
sahf
inc
shl
stc
fstp
push
mov
loopne
lock
mov
sub
fdivr
jb
mov
add
dec
inc
mov
cmp
loopne
imul
push
test
lods
adc
repz
dec
mov
dec
in
push
outs
adc
dec
fbld
and
loop
mov
loop
cmp
sbb
adc
(bad)
aaa
in
push
fstp
fs
pop
xchg
popf
and
push
icebp
add
add
jl
adc
scas
jmp
ret
dec
push
fisttp
sub
mov
fisub
adc
xor
in
sahf
cmp
movs
xlat
adc
xor
sub
push
in
xor
aad
hlt
add
mov
inc
test
adc
mov
repz
ja
pop
call
fistp
aam
iret
push
movs
inc
and
sbb
test
rol
add
cmp
mov
mov
(bad)
jne
inc
sub
fsubr
test
popa
cli
ficomp
jae
or
mov
mov
xchg
(bad)
mov
jg
push
jb
xor
(bad)
cs
sbb
mov
aam
cmp
loop
lods
dec
dec
hlt
push
mov
arpl
xchg
jno
nop
das
pop
sahf
jl
call
inc
mov
push
mov
push
enter
(bad)
push
pop
stos
push
push
mov
cmp
xor
loopne
push
and
in
in
jbe
push
sbb
push
jecxz
mov
pop
cmp
(bad)
mov
scas
or
ja
sbb
jp
cmp
xchg
lods
loop
inc
xor
or
jb
mov
xlat
push
aas
fsub
xor
mov
repnz
xchg
dec
xchg
add
mov
addr16
enter
mov
ret
fist
pop
clc
(bad)
push
add
cmc
sbb
mov
bnd
aad
iret
push
das
inc
jp
lds
repz
xchg
je
mov
push
aam
ins
(bad)
loopne
aaa
add
xchg
sub
(bad)
sbb
(bad)
jg
out
movs
and
push
push
scas
rcl
inc
ds
sub
aas
push
add
arpl
push
int3
jg
jae
bound
pushf
and
sbb
xchg
push
xor
inc
jmp
pop
inc
dec
adc
xchg
adc
xchg
pop
dec
leave
pop
ja
es
and
lods
repz
and
mov
test
ret
mov
sub
fbstp
les
mov
ds
lock
addr16
cmp
sub
outs
scas
gs
push
pop
and
adc
mov
lahf
aad
mov
daa
push
jae
call
popa
sub
(bad)
mov
sahf
add
push
pusha
and
div
cdq
daa
push
jnp
(bad)
adc
sbb
movs
sbb
xor
popf
in
push
icebp
sbb
hlt
inc
mov
pop
pop
xor
in
addr16
ror
imul
mov
arpl
jg
dec
repnz
add
call
dec
and
mov
xor
out
cmp
adc
jae
cmp
ja
jl
jb
xor
div
test
xchg
(bad)
sbb
cmp
mov
fs
mov
in
call
dec
jb
add
xchg
mov
test
jbe
lahf
retf
sub
mov
dec
cmp
jnp
jecxz
and
fs
icebp
jae
je
jg
movs
les
ret
push
mov
mov
dec
fisubr
fstp
sub
dec
lds
retf
pop
jg
mov
pop
popa
inc
movs
sub
les
xlat
mov
and
loopne
pop
pop
cmp
dec
push
xor
les
ret
push
pushf
ins
dec
and
mov
sar
pop
mov
ret
xchg
inc
inc
inc
sub
add
inc
fdiv
sbb
bnd
mov
or
push
loop
adc
es
xlat
fbstp
sub
cmps
push
fs
push
sbb
test
push
or
(bad)
int
or
les
(bad)
lea
adc
cmps
jno
jmp
jmp
pop
pop
rol
retf
cmc
test
mov
dec
adc
les
cmps
mov
ror
adc
call
fmul
mov
lahf
cld
inc
ret
stc
xchg
(bad)
aad
adc
dec
xor
cmps
jge
je
mov
in
xor
inc
push
add
jg
pop
sub
inc
sahf
mov
mov
jae
imul
cmp
jb
jecxz
(bad)
cwde
les
iret
add
call
(bad)
sub
mov
sbb
push
xchg
xor
and
aaa
and
cmovg
repz
mov
jne
sahf
imul
inc
movs
inc
and
fwait
into
retf
rol
mov
push
mov
adc
aaa
push
rcr
adc
in
mov
nop
adc
test
cmps
shl
push
adc
imul
sub
xor
in
jg
enter
ins
test
popf
mov
push
jae
scas
je
cli
mov
mov
shl
mov
pop
push
lock
or
sub
pop
xchg
push
dec
popa
retf
xor
dec
jg
or
ror
adc
dec
xor
daa
mov
clc
jbe
and
mov
pop
fisub
loopne
inc
dec
mov
cmc
adc
shl
add
mov
push
jno
add
sbb
(bad)
jecxz
test
mov
shl
xchg
lods
hlt
in
pop
xor
lahf
loop
out
push
int
pushf
and
imul
and
adc
(bad)
pushf
call
stos
mov
xchg
outs
xchg
add
jecxz
(bad)
push
(bad)
mov
ret
pop
cmps
cmps
ret
push
gs
movs
out
push
(bad)
int
jnp
inc
jge
push
ficomp
add
loopne
adc
mov
mov
imul
jl
jmp
push
push
or
inc
sbb
mov
sbb
xlat
inc
push
mov
stc
sahf
sub
jg
and
dec
(bad)
(bad)
sub
xor
push
lds
(bad)
shl
jo
mov
add
sbb
(bad)
sbb
nop
rol
mov
dec
mov
xchg
add
dec
adc
std
mov
fs
push
add
jmp
icebp
std
adc
push
adc
aam
push
inc
add
rcr
xchg
jg
adc
push
pop
add
adc
add
inc
fs
add
push
nop
cmps
push
ja
inc
mov
es
(bad)
xor
out
dec
cmps
nop
inc
test
or
and
enter
int3
test
ins
loopne
hlt
pop
ret
xchg
ret
fmul
xchg
xchg
and
ret
sub
movs
mov
add
push
adc
xor
jmp
data16
push
add
addr16
and
test
rcl
xlat
push
and
jmp
mov
xchg
(bad)
mov
or
lods
xchg
add
mov
inc
inc
ss
adc
jge
xchg
pop
iret
ins
mov
xchg
push
ja
les
xor
retf
mov
les
aad
aad
je
dec
into
pusha
ror
sub
es
repnz
test
iret
in
add
das
lock
sub
hlt
aam
jae
dec
(bad)
hlt
mov
lods
ret
sahf
sbb
mov
adc
dec
push
and
es
mov
push
inc
lock
and
mov
add
cdq
jne
sbb
add
in
push
cs
add
jns
push
frstor
addr16
cmps
inc
(bad)
jo
add
iret
dec
stc
add
xor
call
jl
add
leave
dec
xchg
lods
imul
lds
and
push
sar
and
adc
xchg
fcmovnb
dec
add
fdiv
cdq
test
stos
inc
dec
mov
pushf
stc
ds
fmul
push
nop
imul
push
cmp
and
hlt
cmp
add
ja
mov
pop
pop
cdq
jb
xchg
or
xor
cli
jnp
pop
fs
add
add
pop
and
and
cmp
ret
cmp
jmp
nop
fld
mov
mov
lds
pop
into
xchg
(bad)
test
mov
bound
rcl
push
xchg
data16
inc
in
in
jae
add
mov
pop
dec
sti
daa
hlt
(bad)
mov
lock
vminps
rol
fs
aas
movs
cs
push
test
sub
mov
cmps
out
mov
adc
add
lds
pusha
adc
aad
jne
inc
inc
mov
pop
cmp
loop
mov
push
movs
movs
inc
out
ret
adc
mov
int
clc
aam
out
cmp
add
bswap
pop
and
mov
lods
ret
mov
stc
inc
adc
dec
jecxz
jl
adc
repnz
mov
shr
xchg
push
cmc
add
movs
popf
mov
sar
xchg
and
add
les
arpl
push
or
rol
add
mov
mov
mov
addr16
movs
sahf
dec
cmp
add
inc
stc
jbe
imul
adc
mov
and
ret
ins
mov
repnz
jecxz
sar
push
pop
aam
loope
pop
jb
arpl
iret
sub
leave
stos
xor
mov
loopne
je
int3
into
cmps
jo
xor
xlat
push
jo
dec
leave
test
(bad)
and
xchg
xor
stos
fsub
pop
ins
test
shl
jle
or
movs
xchg
ret
add
xor
aam
pop
aad
sub
ret
push
dec
test
jnp
add
mov
cmp
mov
pop
bound
call
mov
mov
cmp
sub
sbb
or
ror
rsm
xor
xor
cmp
ins
movs
ftst
inc
jmp
into
das
pop
xchg
inc
push
mov
push
mov
jns
xor
push
mul
inc
xchg
push
xchg
mov
in
xor
add
mov
loopne
fnclex
add
aad
cmp
nop
iret
repnz
mov
aas
inc
fisubr
call
push
repnz
fld
mov
call
arpl
cld
mov
mov
ficom
xor
push
xchg
test
inc
test
ror
mov
std
aad
add
hlt
dec
cs
je
mov
mov
adc
repnz
pop
jl
xor
xor
push
test
xchg
push
pop
mov
mov
inc
jl
jge
or
cld
hlt
add
sub
mov
jl
xchg
jo
xor
pop
push
fadd
mov
outs
retf
jge
cmp
push
loop
mov
retf
bound
std
jle
sbb
bound
or
cmp
dec
and
daa
or
mov
add
test
inc
sbb
mov
xor
sub
dec
or
nop
call
fimul
enter
test
aam
mov
mov
xchg
and
add
fs
mov
or
sbb
nop
shl
dec
xor
ins
xchg
push
cli
cmps
mov
jg
xchg
dec
cmps
div
mov
lea
popa
add
cwde
pop
mov
inc
jne
aam
jo
push
cmp
xchg
mov
add
call
pop
test
dec
imul
mov
outs
xchg
pop
fiadd
stc
mov
fist
jb
mov
sbb
xchg
xor
cmp
popa
and
cwde
adc
je
jo
add
out
movs
(bad)
jmp
sbb
daa
ins
clc
inc
xchg
stos
enter
jnp
add
add
sbb
push
retf
dec
sbb
pop
sub
shl
test
icebp
ds
pop
jmp
inc
push
inc
ret
and
sbb
dec
sub
pop
stos
sub
gs
out
dec
push
pushf
sub
xchg
arpl
test
push
loop
add
dec
inc
fimul
imul
hlt
nop
inc
(bad)
int
icebp
loopne
jmp
pop
inc
push
mov
cmp
pop
stos
xor
xor
call
sahf
ins
ds
clc
(bad)
cmp
xchg
out
jo
nop
into
aad
add
inc
loope
repz
mov
inc
imul
cmps
mul
mov
mov
sbb
(bad)
and
push
cmp
adc
push
sti
push
hlt
xchg
mov
push
xor
cmp
pavgb
loopne
popa
pop
in
sbb
fsub
sbb
sub
cmovb
iret
sub
ret
add
test
(bad)
push
repnz
cli
jb
fcmovne
cmp
xchg
jecxz
lds
mov
push
push
mov
leave
jno
push
in
es
(bad)
and
cmp
in
ds
lahf
loop
or
cmps
xchg
mov
dec
(bad)
sub
cld
fs
cmp
cmp
fstp
sbb
add
out
push
jmp
into
lods
stc
dec
dec
sbb
repz
and
fild
pop
shl
xchg
test
dec
xchg
fs
js
or
imul
rcl
add
div
xlat
xor
inc
das
xchg
fsub
arpl
je
xchg
sbb
xor
adc
(bad)
xchg
add
push
push
stos
je
push
add
outs
xor
mov
shl
in
mov
bnd
idiv
mov
sub
xor
outs
outs
inc
push
mov
add
sub
into
int3
adc
xor
(bad)
mov
adc
push
mul
mov
frstor
idiv
cmps
call
and
jne
test
scas
inc
inc
adc
xchg
mov
jb
out
in
jmp
jno
fmul
cli
inc
xor
nop
push
aas
xchg
push
add
gs
hlt
aaa
push
inc
push
fcmovnu
ret
mov
pop
aad
and
sbb
and
leave
(bad)
adc
inc
shl
daa
mov
pushf
push
fwait
pop
nop
mov
jno
fsubr
xchg
sub
push
push
mov
cld
mov
mov
adc
shl
sub
loop
icebp
jmp
cmps
inc
sbb
icebp
ror
pop
inc
in
loopne
xchg
inc
and
push
xlat
mov
das
sub
adc
out
jns
sbb
sar
rcr
mov
and
sbb
pop
leave
repz
ret
inc
sub
pop
xlat
fiadd
adc
pushf
push
xchg
daa
(bad)
adc
(bad)
xor
loope
sbb
xchg
imul
or
jge
stos
mov
daa
mov
and
inc
jnp
adc
call
push
adc
or
dec
add
jmp
adc
je
dec
out
mov
inc
icebp
loop
adc
push
ror
ret
and
pop
ins
icebp
je
cmps
rcr
ror
out
pop
add
dec
test
mov
inc
ins
push
sbb
xor
fist
adc
push
xor
ins
pop
sub
xchg
adc
(bad)
leave
neg
mov
jle
push
rep
xchg
or
(bad)
jecxz
int
rcl
mov
std
fldenv
sub
ret
nop
xor
hlt
pushf
xchg
xchg
jmp
inc
int
mov
repnz
inc
sbb
jb
mov
push
xor
dec
jnp
pop
sbb
push
(bad)
adc
xor
jle
loop
dec
aam
fs
push
sar
out
push
retf
adc
aam
(bad)
aad
jmp
inc
push
mov
test
push
repnz
mov
jmp
push
stos
mov
jle
inc
out
repz
mov
in
xor
jecxz
repnz
and
popa
or
xor
not
jmp
(bad)
and
out
xor
dec
aaa
pop
rcr
push
xchg
mov
adc
icebp
sub
inc
sbb
bound
pop
adc
shl
ret
cmp
lock
xor
and
aaa
je
nop
cmps
shr
jb
fsub
int3
bound
mov
xlat
pop
dec
xchg
lods
mov
retf
sbb
inc
sub
sbb
mov
mov
and
(bad)
(bad)
push
loop
or
push
pop
fwait
in
inc
shl
adc
retf
fdiv
movs
popa
lds
dec
int3
cmps
jb
xchg
inc
jb
xchg
pushf
jle
adc
xor
jae
push
xor
bswap
call
bound
hlt
xchg
adc
fst
je
cmp
add
pop
mov
jae
outs
and
add
xchg
fild
xor
icebp
int3
jg
pop
inc
cmp
mov
sti
add
out
inc
retf
pop
stos
shl
and
(bad)
cmp
rol
push
mov
into
outs
fsubp
add
pop
imul
shl
and
mov
lods
inc
xchg
mov
sbb
sub
adc
and
fbld
or
cmp
xchg
mov
mov
mov
nop
cmps
sub
aaa
(bad)
stc
or
ss
mov
fdiv
gs
sti
adc
lods
popa
lods
and
imul
push
(bad)
or
ror
shl
mov
push
sbb
mov
push
retf
mov
inc
sahf
cli
push
(bad)
call
sbb
aam
cmp
xor
in
xchg
ror
retf
add
inc
mov
pop
test
sub
cmp
cld
ja
std
adc
xor
fisttp
jp
sahf
jl
popf
sub
mov
push
dec
jmp
mov
mov
icebp
mov
fimul
or
retf
mov
inc
mov
mov
and
sub
xor
xchg
imul
retf
aam
(bad)
lock
shl
cdq
mov
add
pushf
imul
jl
popa
out
add
popf
adc
fwait
scas
gs
cmovnp
test
sti
lds
outs
add
xor
mov
mov
pop
cmps
mov
jns
scas
inc
dec
repz
aam
lock
nop
push
pop
lahf
xchg
lds
dec
mov
inc
out
xor
gs
pusha
mov
xor
mov
pop
pop
neg
mov
jmp
sub
mov
jo
fisub
sub
call
sbb
or
clc
in
xchg
mov
popa
push
mov
add
inc
je
div
push
addr16
fbld
jnp
sbb
push
mov
and
mov
aam
nop
push
(bad)
ja
(bad)
aam
repz
test
dec
mov
jecxz
jecxz
and
idiv
jb
adc
clc
out
mov
jmp
mov
push
adc
test
call
pop
pop
dec
xlat
aas
test
cmps
call
inc
adc
imul
adc
jp
cdq
add
pop
or
fcmovnu
idiv
ficom
inc
xor
ss
dec
adc
imul
cmp
fisttp
ror
in
pushf
push
cmc
cmc
push
pop
push
mov
mov
lahf
and
jne
les
pop
inc
das
bound
mov
or
mov
fcom
and
in
fiadd
imul
stos
je
fs
xchg
push
test
add
int3
and
mul
push
xchg
push
or
sbb
pop
inc
pop
int
mov
call
(bad)
sti
leave
outs
xor
adc
mov
xchg
inc
daa
mov
pop
push
adc
int
pushf
stc
mov
add
xchg
outs
and
inc
fdivr
add
(bad)
mov
lahf
mov
push
stos
inc
inc
pop
scas
jge
and
jg
and
jno
sahf
std
pop
mov
dec
adc
adc
and
ins
xor
mov
and
xor
mov
hlt
loop
mov
and
lock
nop
and
popa
lods
(bad)
jno
outs
adc
adc
and
push
lds
pop
lods
mov
cld
cmp
xchg
inc
and
mov
dec
test
mov
je
or
out
adc
inc
mov
and
jo
mov
jecxz
mov
and
adc
mov
movs
mov
imul
inc
lds
bound
add
mov
in
cmp
aad
push
push
outs
jmp
pushf
mov
mov
xchg
cmc
mov
lahf
retf
dec
dec
inc
aad
jmp
mov
inc
rcl
hlt
mov
xor
fld
test
push
cmp
ret
neg
and
push
aaa
int
push
push
and
adc
push
sub
push
inc
add
movs
push
rol
in
inc
or
jle
push
(bad)
fld
add
sub
clc
dec
or
repz
cld
sub
mov
mov
mov
sbb
test
(bad)
fidivr
xor
fs
add
pusha
(bad)
push
lods
nop
xchg
xchg
xor
pusha
and
out
sub
(bad)
cld
sub
xor
and
cmc
pushf
adc
test
add
mov
xlat
mov
test
iret
jns
jmp
cmp
add
push
push
xchg
scas
pop
test
cmp
xchg
mov
mov
push
int3
ror
scas
inc
cmp
mov
xlat
loop
(bad)
push
cld
jne
imul
aas
pushf
cmp
cmp
fmul
sub
adc
cmps
arpl
and
add
(bad)
fnstsw
(bad)
add
push
jne
xchg
cmps
fbld
jae
ins
lahf
outs
loopne
or
sbb
in
icebp
xor
aas
jle
loop
dec
mov
mov
pushf
ret
xor
pop
jne
or
and
adc
jecxz
sbb
add
adc
xchg
mov
cmc
fistp
and
in
jp
jbe
arpl
xchg
hlt
mov
ret
dec
test
adc
add
xlat
pop
test
imul
dec
mov
xor
repnz
out
movs
fcmovnu
mov
lods
inc
fld
push
bound
inc
cmps
clc
cmp
or
mov
mov
in
repz
inc
inc
xchg
std
jne
cmc
cs
jge
and
xor
sub
popf
push
je
(bad)
repz
test
test
fsubp
sub
(bad)
cmp
ja
jno
push
xor
push
pusha
add
ret
mov
xor
xchg
adc
xlat
mov
cmp
xor
das
lahf
call
movs
sub
push
fwait
pop
nop
lock
sbb
jae
mov
cmp
or
push
sbb
xchg
sbb
test
in
fwait
in
fimul
push
ficom
dec
sub
addr16
adc
das
cmc
inc
lea
inc
mov
fild
add
test
std
push
shl
adc
popa
jl
adc
xchg
dec
daa
dec
mov
ja
cmp
sub
add
xor
sub
and
pop
in
push
and
in
adc
sbb
push
lds
push
loope
xor
imul
add
sar
xchg
test
aam
pop
and
xor
out
lods
icebp
sub
or
outs
enter
jb
bound
add
in
cs
fmul
push
aas
(bad)
enter
jbe
xchg
enter
adc
and
add
hlt
and
adc
iret
and
lea
mov
push
push
jae
add
clc
mov
xor
hlt
adc
push
adc
cmps
movs
inc
inc
out
fdiv
pop
movs
aam
pop
mov
pop
and
test
jnp
in
xchg
sbb
pop
push
or
jns
ret
loop
adc
test
push
mov
mov
sbb
pop
xor
mov
sar
in
jae
push
adc
jge
push
movs
int3
push
ds
push
enter
sbb
inc
dec
es
jbe
mov
inc
sub
out
xacquire
jecxz
mov
out
jl
and
loop
dec
cli
call
jg
je
int3
and
das
ja
setae
loopne
icebp
push
sub
xchg
scas
inc
mov
mov
and
inc
push
mov
inc
add
inc
pop
sahf
sub
push
shr
push
dec
call
and
pop
fdiv
mov
into
fild
sbb
pusha
mov
sub
test
pop
pop
push
shl
pop
movs
sahf
gs
add
xchg
neg
stos
lock
fmul
inc
ins
shl
jmp
sbb
jmp
push
int3
push
aam
mov
adc
jnp
shl
test
push
aaa
loop
or
xlat
lds
nop
jo
xor
data16
and
loop
xchg
and
add
push
loope
sahf
xor
sbb
popa
add
pop
in
test
loop
fs
bound
fisub
inc
mov
mov
int3
rcl
inc
fbstp
xlat
mov
test
pop
and
add
adc
adc
(bad)
dec
jb
pusha
or
fisttp
ret
(bad)
cmp
and
xchg
xor
mov
push
mov
mov
out
loop
or
ss
movs
xor
dec
xor
call
nop
pop
sbb
fidivr
pop
jnp
inc
movs
mov
mov
aam
daa
outs
xchg
ret
test
xchg
mov
adc
push
scas
mov
arpl
push
push
das
icebp
mov
mov
aam
test
bound
or
in
ret
pop
jp
movs
inc
jne
enter
dec
std
mov
int3
out
mov
or
push
xchg
add
jnp
cmps
pop
repnz
xchg
pop
imul
aam
xchg
pushf
mov
vpcmpgtd
add
adc
div
std
call
(bad)
mov
cmps
and
push
jl
and
(bad)
data16
outs
sbb
dec
xchg
aam
dec
popf
cwde
mov
pusha
je
sub
jo
xor
std
mov
mov
sub
int3
das
inc
xlat
mov
xchg
xchg
mov
call
imul
mov
and
imul
sti
jo
push
or
ret
mov
xlat
out
pop
enter
mov
hlt
jae
rcr
mov
sbb
fs
dec
cwde
xchg
shl
arpl
mov
das
sbb
inc
mov
mov
repz
add
rcl
dec
and
adc
pop
mov
scas
fcomp
adc
cmp
retf
inc
jb
mov
sub
movs
cmp
mov
in
and
xchg
(bad)
aam
adc
adc
xchg
mov
ret
test
add
rol
mov
ss
sub
(bad)
out
arpl
mov
lods
out
xlat
ror
adc
test
jp
and
or
xor
enter
add
pop
sbb
test
clc
out
cmp
sti
rcr
sub
jp
pushf
out
mov
pusha
out
push
or
push
mov
jmp
sar
jnp
fbstp
inc
sti
inc
mov
lds
in
pop
mov
call
pop
(bad)
sbb
bound
adc
shl
cmps
in
mov
jl
add
bound
test
fsub
les
inc
mov
inc
inc
adc
xor
inc
test
int3
pop
shl
and
or
add
enter
pusha
es
add
popa
xor
pop
jl
leave
retf
cwde
out
(bad)
aaa
lock
sub
call
popa
stc
je
repnz
xor
pop
out
pmullw
and
mov
es
movs
xchg
js
mov
hlt
mov
idiv
xor
cmps
sbb
int3
loope
ret
ret
xchg
cmp
jns
or
or
xchg
and
mov
retf
xor
xchg
in
out
out
push
les
movs
das
add
in
scas
sub
push
jne
xor
add
fsubr
and
ror
dec
enter
cmc
push
or
ret
cmps
sub
jecxz
xlat
mov
mov
mov
push
add
mov
or
push
add
inc
loope
sub
retf
xor
(bad)
xor
push
sbb
fwait
sbb
enter
push
add
add
pop
test
aam
stos
sub
loop
xchg
cmp
clc
fldln2
xchg
mov
cmp
cs
or
or
or
mov
inc
mov
ss
neg
and
dec
in
add
xor
xchg
jecxz
mov
mov
sub
gs
and
ror
les
ds
jbe
jnp
ret
push
rol
out
jo
jbe
adc
jmp
call
(bad)
push
mov
loop
in
movs
mov
ja
das
jecxz
add
scas
dec
xor
imul
xor
ins
or
and
iret
rol
(bad)
mov
sub
add
adc
nop
dec
xchg
mov
loopne
(bad)
push
jno
and
in
aas
xor
or
ret
xchg
nop
mov
or
adc
push
xchg
and
inc
out
xor
jp
pushf
jecxz
and
daa
push
sar
push
popf
es
mov
hlt
(bad)
adc
fidivr
inc
lock
cdq
ret
in
or
adc
push
adc
aas
cmp
mov
xchg
mov
dec
test
loope
xchg
loop
test
repz
xor
in
nop
sbb
aad
(bad)
out
mov
pop
add
daa
pushf
mov
push
in
push
mov
ja
mov
(bad)
add
xchg
or
mov
pop
xor
inc
jmp
mov
or
jp
daa
int
cmps
mov
stc
jnp
xchg
or
inc
sub
es
sub
inc
call
ret
push
icebp
in
rol
ret
sub
test
pop
stos
int
jl
mov
xchg
and
pop
lahf
jne
xchg
ret
mov
sbb
fbstp
div
cs
mov
mov
aam
hlt
cmps
test
loopne
pop
cmc
mov
xchg
mov
js
hlt
hlt
ss
out
inc
adc
xor
out
bound
sub
movs
mov
xchg
cmps
and
or
jno
fwait
push
pop
scas
adc
clc
test
xchg
sbb
xchg
cdq
pop
push
push
cmp
dec
repnz
jmp
push
pop
and
ror
pop
(bad)
rcl
arpl
std
xchg
cmp
in
cmps
pop
inc
fimul
push
sbb
ret
and
call
pop
adc
dec
xor
mov
iret
cs
repz
fild
inc
and
aas
es
adc
icebp
or
push
dec
scas
mov
stos
ins
fwait
fwait
nop
lea
jp
pop
stc
outs
cld
icebp
rcl
mov
sub
xchg
(bad)
xchg
data16
xchg
xor
inc
and
(bad)
jno
xchg
inc
scas
loop
add
or
lock
daa
ss
pusha
ins
sar
and
mov
daa
mov
arpl
sbb
mov
sub
test
cmp
lahf
(bad)
cdq
fsubr
cmp
xchg
fwait
clc
xor
push
test
test
inc
adc
mov
xor
popa
cdq
pop
inc
sub
movs
and
inc
push
sbb
xor
and
mov
mov
movs
inc
xor
xchg
cmc
pop
cmp
jb
adc
sbb
inc
bound
fnstcw
stos
sub
push
jbe
loopne
test
sbb
leave
hlt
adc
loopne
mov
pop
aas
sbb
nop
mov
dec
xchg
loope
pop
std
test
test
cmps
scas
in
inc
cmp
or
pop
movs
bound
cdq
adc
and
int
ret
test
adc
jecxz
push
pop
jmp
cli
(bad)
pop
jnp
jb
test
aam
popf
fst
xor
int3
mov
out
pop
xor
push
cmp
repz
add
mov
fstp
xor
mov
adc
imul
sub
retf
aad
sbb
out
sub
push
or
in
ret
push
jmp
xor
ins
shl
xchg
inc
aaa
xchg
sbb
fstp
mov
in
cmp
dec
dec
push
pusha
cmps
sbb
sbb
pushf
pushf
xchg
jecxz
xor
or
xor
push
iret
and
fldl2e
inc
movs
inc
(bad)
push
nop
jo
inc
mov
fdivr
out
in
adc
cmp
inc
push
sub
enter
xchg
cmps
mov
ins
out
test
movs
movs
mov
mov
and
cld
sub
dec
add
loop
and
repz
in
cmps
inc
and
movs
mov
loop
mov
mov
fs
jb
push
sub
pop
add
xor
fmul
add
add
xor
lock
adc
int3
nop
adc
test
mov
inc
ror
and
iret
or
lods
sub
ret
data16
sbb
or
cmp
ret
ss
je
shl
and
push
stos
test
pop
pop
pop
xor
xchg
pusha
adc
mov
jge
add
lds
jl
repnz
pop
cld
inc
iret
scas
mov
cli
mov
xor
xchg
push
mov
retf
sub
push
and
adc
mov
sbb
bound
cmp
and
xchg
xor
sub
cld
cmp
pop
or
ret
arpl
inc
or
cmp
and
or
xor
rcr
xor
jae
adc
and
inc
mov
adc
pop
nop
mov
cmp
and
or
jl
mov
cmp
in
scas
and
xor
int3
push
add
push
scas
jno
push
adc
mov
xchg
dec
int3
int3
ret
adc
lods
(bad)
in
fild
daa
inc
call
xlat
popa
cli
cmp
cmp
shl
bound
aaa
std
mov
(bad)
stc
aad
xchg
and
dec
dec
repz
dec
adc
sti
out
xchg
daa
pop
mov
dec
mov
and
inc
adc
rol
xor
ja
and
pop
cmp
adc
aad
adc
mov
repnz
adc
cdq
xor
and
inc
std
mov
add
dec
movs
ret
js
dec
ror
(bad)
ss
xor
sbb
xchg
scas
push
xchg
stos
add
xchg
adc
add
movs
fisubr
xchg
mov
int
sub
and
push
pop
in
pop
jo
addr16
mov
mov
jo
out
xchg
jbe
lock
sbb
xchg
adc
jae
(bad)
gs
sub
stc
xchg
add
push
les
xor
mov
mov
call
in
xchg
jae
jo
pop
and
dec
xchg
aam
mov
cmp
dec
xor
lds
call
dec
and
es
push
xchg
mov
bound
adc
jge
cmps
or
(bad)
jae
aaa
popa
inc
mov
loop
jo
pusha
and
call
popa
mov
in
push
in
ss
imul
mov
jp
and
cmp
fisub
add
mov
dec
cmp
push
fnstsw
(bad)
jbe
adc
or
aam
lods
(bad)
or
push
dec
in
shl
and
xor
xchg
inc
pop
std
inc
mov
add
inc
adc
call
adc
ja
and
push
ror
arpl
push
fsub
mov
push
sub
loop
cmps
out
sbb
out
cmp
movhps
rcl
cs
and
pop
jno
repnz
mov
ss
adc
rol
jne
in
lock
repnz
and
mov
aam
push
cmc
es
shl
dec
add
add
sbb
movs
add
inc
sti
add
jbe
(bad)
xchg
xchg
fimul
pop
stos
inc
loop
xchg
jb
in
push
adc
mov
daa
cdq
jmp
add
jle
pop
aam
cmp
in
aas
daa
loope
or
aas
adc
rcl
jb
arpl
jno
xor
add
cmp
je
add
jbe
dec
cmp
add
mov
or
daa
xchg
movs
xlat
pop
repnz
xchg
sar
mov
ret
pop
mul
cmp
push
neg
pop
int3
or
xlat
test
fbstp
push
add
into
adc
aam
jbe
pushf
sub
xor
call
shl
jb
pop
ret
xlat
and
mov
sbb
jno
adc
sahf
in
xor
dec
fincstp
mov
add
lock
aad
xor
pop
es
jecxz
pop
pop
push
and
cmps
or
xor
loop
rol
inc
inc
(bad)
jmp
aas
cli
out
push
adc
loope
cld
push
rol
mov
cmps
icebp
jmp
cmps
push
xor
cdq
aas
xor
jmp
out
mov
sbb
jle
adc
shl
jmp
mov
pushf
aaa
nop
cmp
stos
loop
sbb
xor
add
xor
ds
xor
adc
xor
and
lock
(bad)
sar
out
daa
ins
cmps
mov
lock
fistp
cmp
mov
stos
xor
aas
push
mov
xchg
mov
jae
sbb
jecxz
xor
test
fsubr
loope
repnz
xchg
adc
xor
mov
mov
xchg
or
clc
jo
hlt
adc
jne
jmp
(bad)
pop
and
xor
jb
sbb
shl
stos
dec
xchg
(bad)
ror
(bad)
lock
shl
pop
sti
pop
and
or
push
repz
push
xor
jb
fdiv
xchg
cmp
mov
mov
stc
xor
jg
cmp
popf
add
adc
(bad)
loop
cli
(bad)
in
ror
outs
jae
out
ret
test
repz
mov
cmp
movs
mov
int
push
fbld
dec
xor
mov
jge
pop
jmp
xchg
and
js
jp
dec
cmc
mov
and
add
mov
or
test
in
mov
arpl
add
mov
rcr
xchg
test
pop
cmp
nop
inc
xlat
pop
ret
xchg
cmp
hlt
add
aaa
and
mov
je
mov
xchg
pop
push
cmp
add
mov
dec
sbb
loop
aam
ret
xor
xor
pop
sbb
mov
jmp
mov
ss
mov
adc
xor
(bad)
jae
cli
movs
pusha
xor
and
jp
xor
mov
sbb
sbb
enter
and
xchg
or
(bad)
not
sbb
mov
retf
(bad)
and
shl
jbe
mov
cmp
daa
ins
adc
mov
dec
rcl
ret
xchg
add
push
sbb
inc
jle
and
add
push
sbb
push
je
repnz
loop
mov
aaa
mov
ret
loope
les
jmp
lds
test
shl
add
shl
and
inc
movs
jmp
loop
dec
nop
adc
out
cmp
imul
dec
xchg
jge
dec
xor
cmp
dec
or
inc
and
mov
add
inc
test
retf
repnz
sub
and
(bad)
ror
sar
inc
mov
ins
mov
sub
xchg
and
xor
out
jno
call
sub
lea
add
mov
mov
xchg
repnz
pop
cs
(bad)
cwde
call
fadd
pop
rol
aam
shl
sbb
pop
or
mov
xchg
ficomp
aam
(bad)
stc
mov
push
enter
fisub
or
adc
mov
mov
mov
stos
in
mov
test
fcos
xchg
aam
mov
cs
inc
mov
xor
and
in
(bad)
loope
pop
out
push
push
xor
mov
lahf
cld
cmp
std
mov
lds
rol
popa
pusha
mov
jbe
nop
fcom
jo
push
cdq
dec
clc
popf
(bad)
loop
push
cmps
jp
mov
xor
lods
rcr
push
inc
xor
in
jp
gs
hlt
xor
dec
(bad)
out
xchg
push
int3
sub
sub
push
rol
inc
mov
test
xor
mov
lds
test
popa
xchg
fild
aam
fsubp
mov
rol
test
adc
adc
adc
jp
sbb
and
add
inc
mov
aad
adc
inc
test
fwait
test
int
cmc
into
xchg
out
adc
or
not
adc
inc
push
and
sub
xchg
neg
push
mov
jns
ja
push
es
(bad)
jge
adc
daa
xor
loopne
jo
jo
mov
inc
ss
cmp
cmp
test
add
dec
popf
neg
mov
call
adc
pusha
add
inc
cmp
dec
adc
ror
pop
cmp
sub
xchg
add
leave
adc
sub
stos
(bad)
rcr
(bad)
fild
inc
pushf
ds
xchg
mov
push
add
jg
aam
cmp
adc
cmp
aam
js
ins
lock
out
ret
retf
and
and
and
xor
and
(bad)
out
pop
pop
aad
sub
push
gs
xor
lods
jge
add
xlat
push
mov
daa
jns
and
and
leave
mov
out
fidivr
mov
sbb
xor
adc
adc
sub
test
mov
daa
mov
(bad)
retf
daa
mov
je
ror
jno
sar
mov
pop
mov
and
mov
mov
mov
xor
pop
dec
mov
and
scas
or
out
pusha
call
mov
sub
ins
cdq
paddsb
jl
jge
mov
shl
int
aad
sti
mov
dec
push
les
jne
fstp
mov
mov
xor
push
fcmovb
push
shl
mov
and
les
ficomp
dec
inc
xor
jmp
add
dec
mov
fld
mov
push
push
out
popf
xchg
out
call
ins
ret
or
(bad)
adc
mov
push
xchg
fidivr
add
push
mov
loop
ss
add
push
adc
frstor
(bad)
icebp
inc
mov
les
ror
pop
loope
sub
arpl
push
pop
es
push
dec
jge
adc
pop
(bad)
xor
sbb
push
cmp
fiadd
pop
push
adc
sbb
push
adc
xor
mov
and
xor
push
push
cmp
xor
outs
jl
aaa
and
inc
adc
push
and
or
into
ret
dec
jl
push
out
inc
inc
lods
scas
mov
adc
rol
sar
jmp
cli
add
jno
pop
test
mov
sbb
xchg
mov
stc
int
fsubr
dec
mov
(bad)
cld
out
sahf
dec
and
dec
xor
data16
repnz
cmp
(bad)
je
in
popf
mov
adc
dec
hlt
ret
shr
push
inc
pushf
int3
xchg
push
adc
jecxz
test
in
xchg
hlt
or
xchg
aad
in
imul
fild
mov
xor
fld
shl
adc
sti
leave
xchg
(bad)
add
in
and
push
add
ins
cmps
jmp
leave
iret
jmp
ins
inc
xor
pop
test
cmp
ret
mov
movs
lea
inc
xor
(bad)
dec
psrld
scas
or
and
adc
inc
sbb
call
mov
mov
imul
out
test
and
push
add
stos
sahf
retf
cld
sub
push
frstor
sub
lock
rcr
stos
adc
inc
aam
cmps
jae
sub
xor
pusha
adc
dec
fidiv
xor
cwde
inc
aad
adc
hlt
sbb
shl
pop
sub
into
cmps
pop
inc
jecxz
ficomp
push
cmp
add
xor
adc
pop
mov
hlt
adc
ja
sbb
sar
pop
adc
jmp
in
(bad)
sub
mov
movs
inc
xchg
and
popf
std
sti
inc
add
repnz
aad
jmp
inc
mov
jecxz
and
sub
xchg
dec
jbe
je
shl
loopne
inc
dec
and
scas
shl
aam
or
mov
dec
push
retf
mov
jne
cmc
and
mov
cmc
and
pushf
jmp
repnz
adc
(bad)
add
dec
repz
inc
add
in
mov
pop
test
aas
fstp
adc
cdq
xor
rcl
mov
daa
jmp
jge
into
jne
push
xor
iret
iret
loop
cs
mov
mov
mov
dec
add
cmp
push
pop
test
and
mov
mov
repnz
icebp
loopne
bound
inc
dec
mov
aam
test
aaa
push
dec
or
pop
xor
pop
dec
popa
outs
and
bound
bound
inc
xor
xchg
jg
mov
mov
push
js
adc
sbb
sub
in
aaa
out
cmp
and
dec
xlat
pop
icebp
xor
pop
dec
pusha
add
inc
aam
in
adc
aaa
mov
jg
lods
jne
stc
or
mov
and
cwde
cmp
mov
cmp
lds
ins
xchg
mov
lahf
push
and
add
repz
mov
mov
bound
add
into
lods
push
pop
cmp
mov
xor
xor
mov
cdq
xchg
mov
xor
jbe
xor
push
jmp
std
shl
and
jg
test
in
test
pusha
xor
jmp
sub
sahf
adc
xor
mov
jmp
pop
sub
rcr
repz
pop
ret
or
sbb
int3
sahf
fidivr
xor
adc
push
mov
push
sbb
mov
lods
call
(bad)
fldenv
popa
je
les
push
xchg
movs
add
sbb
leave
xlat
gs
icebp
xchg
ja
xor
int3
mov
push
test
rcl
jecxz
fild
mov
dec
stos
(bad)
jmp
and
cmp
lods
fisttp
(bad)
push
adc
cmc
add
cli
dec
sbb
cmp
xchg
shl
cld
xchg
jns
jle
mov
test
out
leave
retf
into
adc
mov
ja
xchg
jns
xor
and
dec
push
add
and
fs
sub
and
test
xchg
lods
adc
adc
scas
lea
pop
cmps
mov
mov
inc
pop
mov
loope
iret
repnz
pop
cmc
push
bound
dec
lods
add
fst
jb
jno
push
ds
push
bound
xor
jge
push
cmps
ds
test
hlt
xchg
int3
ret
cli
cmps
xchg
sahf
adc
xchg
push
out
jge
(bad)
add
(bad)
loop
or
push
add
pop
inc
xchg
push
pop
js
adc
push
jmp
fdiv
add
inc
loop
sbb
rcr
mov
inc
mov
(bad)
ds
mov
pop
(bad)
pusha
loope
inc
lahf
pop
aad
sbb
aam
test
cmc
imul
and
fucomp
or
pop
shl
ret
sub
push
push
adc
(bad)
mov
or
push
lea
pop
push
or
pop
ret
int
mov
xor
pop
scas
sub
jg
fnstenv
adc
lea
iret
dec
adc
cld
or
(bad)
dec
mov
inc
inc
mov
mov
push
leave
lods
dec
loop
push
jmp
repnz
nop
imul
add
jae
dec
jno
jnp
adc
xchg
les
pop
mov
cld
sub
fwait
add
repnz
shl
test
fldcw
shr
fld
sub
push
push
jl
jne
mov
or
aad
push
xchg
push
test
and
or
ret
or
ja
xor
bound
cmp
pop
ret
cmc
test
test
loop
call
inc
rol
pop
adc
mov
jmp
sbb
cli
in
cmps
push
jecxz
rol
jl
pop
addr16
xchg
pop
stos
xor
inc
inc
jbe
cmp
bound
in
fnstenv
push
cmp
mov
dec
inc
arpl
xor
lock
pushf
inc
fadd
jl
fsub
pusha
xchg
cmp
int3
fst
inc
pop
or
xor
push
sub
xchg
and
dec
in
push
mov
and
mov
cwde
fmul
nop
push
mov
adc
in
push
data16
repnz
in
(bad)
pushf
mov
jp
and
xchg
mov
inc
jb
xor
and
add
cdq
jne
nop
mov
nop
adc
jne
dec
xor
in
and
pop
cmc
ror
(bad)
aad
pop
ficomp
leave
lods
cmp
cmc
add
add
aas
mov
gs
push
xchg
adc
adc
bnd
xchg
jb
sbb
aad
xor
out
pop
push
and
inc
jb
inc
adc
pop
xchg
push
mov
retf
inc
cmc
ja
shl
cmp
pop
stos
stos
mov
mov
loope
and
mov
shl
arpl
jbe
mov
lds
mov
push
sbb
push
xchg
mov
jmp
push
cmp
iret
push
mov
imul
jns
pop
repnz
ins
or
(bad)
mov
mov
movs
inc
les
movs
les
test
jo
sub
(bad)
lock
je
push
xchg
pop
pop
retf
test
mov
xor
aad
inc
cmps
popf
lods
add
and
push
mov
inc
mov
mov
pop
push
pop
mov
test
enter
int
dec
fs
neg
or
imul
shl
popf
xor
jno
call
sub
inc
fild
xor
les
lea
xor
pusha
repnz
add
push
add
sub
mov
xchg
sti
mov
jp
int3
dec
jo
ja
mov
faddp
xlat
xchg
enter
pop
xlat
les
lock
and
fs
fs
xor
repz
rcl
fidiv
sbb
push
ins
or
and
pop
xor
stos
in
jb
into
xor
je
ficomp
mov
jl
xchg
jns
mov
cmc
ins
xchg
loope
cmp
test
or
pop
cmp
sub
or
adc
cmp
push
xchg
out
rcl
dec
and
xchg
push
mov
adc
jmp
retw
push
popf
scas
js
add
mov
sar
dec
xchg
push
adc
cld
jle
in
jns
pusha
scas
test
sbb
mov
fs
xchg
stos
mov
hlt
sbb
repz
mov
sbb
aad
pop
test
aas
hlt
pusha
in
cmc
retf
mov
add
add
js
pusha
cmp
push
xchg
daa
inc
adc
outs
test
mov
cwde
aam
cmp
cmp
mov
(bad)
cmps
add
mov
nop
aas
jmp
call
shl
xor
cld
adc
loop
mov
popa
adc
mov
xchg
add
push
pop
sub
push
loope
push
push
in
add
sbb
mov
pusha
mov
xor
fisttp
dec
ret
adc
rcr
mov
mov
lock
xchg
xchg
(bad)
repnz
dec
push
pop
and
and
nop
dec
into
sbb
(bad)
adc
leave
jecxz
call
sbb
pop
mov
outs
mov
loope
jl
bnd
in
xchg
mov
aam
xchg
pop
leave
les
add
repz
or
aam
div
and
cmp
cmp
scas
loop
dec
inc
add
push
bnd
jmp
cmp
ins
stos
xor
mov
xchg
loop
out
xchg
rcl
push
push
pop
jbe
movs
adc
jbe
das
mov
hlt
mov
mov
icebp
xor
movs
mov
push
and
mov
push
out
push
movs
cdq
retf
fld
int3
xchg
sar
or
icebp
push
addr16
imul
mov
shl
mov
les
xor
sbb
(bad)
cmp
add
push
cli
or
cmp
dec
out
jmp
mov
or
jge
movs
cs
jbe
dec
and
xchg
loop
or
push
and
mov
and
jge
fwait
sub
rcl
jae
fcmovnbe
mov
pusha
test
retf
dec
retf
lods
add
xor
push
jno
call
arpl
(bad)
or
je
gs
jecxz
push
gs
clc
bound
sar
and
mov
loop
dec
popa
cmp
fdiv
mov
cmps
mov
out
pushf
sar
xchg
cmp
call
daa
sub
daa
cmps
test
jne
hlt
repz
lea
mov
xchg
leave
sar
xchg
sbb
mov
aaa
test
jecxz
jle
xor
sub
xchg
sbb
int3
jnp
mov
xchg
adc
cmps
inc
lahf
push
rcl
pusha
retf
dec
or
arpl
daa
mov
mov
xor
sbb
cmp
pusha
data16
cmp
(bad)
mov
nop
cmp
jne
cld
repnz
shr
popa
push
sub
push
js
and
les
aas
movs
ins
stos
push
mov
mov
add
rol
std
repz
or
in
pop
push
rol
bound
adc
mov
pusha
mov
and
inc
loop
ret
aam
out
js
pop
movs
dec
je
add
push
pop
(bad)
in
mov
shl
out
(bad)
lahf
jecxz
lahf
xchg
rcl
ins
push
cld
xchg
jo
add
in
(bad)
or
cld
xchg
ret
push
das
cmp
add
add
loopne
mov
and
adc
xchg
cli
popf
sub
sbb
js
stc
retf
fisttp
mov
sub
fs
shl
inc
repnz
mov
ror
mov
mov
jno
mul
pop
shl
cmp
xchg
ins
jp
pop
sbb
adc
xchg
pop
xor
das
cmp
push
stos
pop
cmp
push
je
mov
imul
ret
adc
sub
aaa
xchg
inc
push
mov
sbb
xor
fcmove
adc
jb
push
pop
and
fbstp
out
leave
les
pop
adc
nop
imul
xor
jno
adc
mov
mov
fsubr
xchg
mov
xor
int3
jns
xor
hlt
fistp
bound
push
mov
cmp
dec
pushf
xchg
(bad)
xor
jl
loope
mov
jo
shl
repz
or
lods
in
aad
dec
call
push
xor
dec
test
inc
call
jb
or
and
xchg
(bad)
xchg
nop
adc
dec
int3
cmp
movs
int
push
jbe
xor
xchg
popa
mov
mov
inc
add
fs
pop
push
lahf
stc
cs
pop
gs
stos
ret
fdivr
call
mov
and
pop
and
imul
jno
mov
repz
rcl
and
fld
sbb
add
jmp
call
inc
mov
(bad)
icebp
xchg
rol
mov
xchg
sar
call
push
jmp
mov
adc
mov
cwde
mov
rol
sub
mov
mov
bound
adc
adc
or
stos
(bad)
push
paddusw
push
retf
or
not
ret
aaa
add
add
adc
nop
sbb
mov
sub
adc
and
ins
jne
test
es
xor
push
or
sar
out
xor
out
rol
dec
sub
cmps
cmp
pop
jo
fs
aad
ret
movs
movs
or
popa
add
xchg
add
mov
daa
div
leave
cli
popf
xor
inc
in
cdq
xor
loopne
jmp
xor
loop
jp
inc
pushf
and
lahf
(bad)
cli
add
pop
arpl
xor
out
fist
and
mov
test
(bad)
(bad)
loop
sub
jnp
jge
and
shr
push
bound
sub
and
add
xchg
daa
and
xor
jmp
cmps
arpl
xchg
pop
nop
(bad)
adc
repnz
jno
fcom
and
(bad)
outs
cmp
dec
std
loope
add
cmp
call
and
mov
lods
inc
fld
mov
mov
xor
push
imul
fnstsw
(bad)
cmps
and
ins
loop
imul
xchg
inc
mov
add
sar
push
in
dec
mov
xor
and
mov
rol
mov
dec
aad
fdiv
and
sbb
mov
push
xchg
popa
push
jae
leave
(bad)
xchg
jmp
shl
(bad)
sar
retf
cwde
and
mov
ja
ret
xor
mov
xchg
icebp
dec
mov
fadd
loope
daa
push
and
inc
ins
fist
adc
lods
in
add
cdq
pop
rcr
mov
pop
xor
outs
mov
loope
ins
movs
pusha
xchg
movs
add
out
mov
xor
sbb
mov
dec
or
push
into
pop
pop
jge
repnz
push
dec
fiadd
test
jecxz
mov
push
shl
ins
xor
stos
out
push
mov
jbe
fs
add
loopne
in
jno
jnp
shl
mov
outs
aaa
out
fstp
xchg
in
mov
mov
push
stos
inc
and
mov
popf
xchg
rol
repnz
aas
inc
mov
or
stc
push
jg
or
cli
rol
xchg
xor
stos
push
popa
je
cmp
jbe
and
in
aam
pusha
iret
jp
int
xchg
in
mov
mov
test
pop
push
jp
cs
es
xor
in
scas
jp
jmp
std
xchg
pop
popa
or
arpl
and
test
jp
pop
cmps
jbe
jne
dec
push
sub
mov
aas
adc
inc
loop
aad
xchg
pop
into
test
cmp
pop
sub
jne
mov
movs
mov
cld
mov
xchg
and
outs
xor
jmp
test
jecxz
fwait
push
jnp
push
fisubr
xor
retf
je
jb
shl
cmp
fs
pop
and
in
int3
ret
sub
jecxz
pop
cld
xchg
and
arpl
fst
test
popf
dec
cmps
rcr
mov
test
jecxz
xchg
mov
gs
outs
jl
jbe
repz
xchg
aaa
enter
fisub
push
in
adc
das
lock
push
dec
ja
xchg
add
aad
cmps
retf
inc
xchg
int
jmp
pop
ins
out
pop
test
cs
mov
xor
inc
mov
push
cmc
ror
nop
xor
std
dec
add
arpl
(bad)
mov
enter
mov
sub
inc
rol
dec
stos
cmps
jecxz
rol
int
stos
push
cmps
xor
mov
loope
pop
jbe
mov
add
xor
lods
and
push
inc
es
pop
aam
mov
movs
enter
test
xor
pop
push
xchg
xchg
jg
pop
out
xor
es
fist
xor
je
fld
mov
mov
nop
push
ror
or
add
lock
iret
in
leave
test
cmps
jecxz
or
cmp
dec
lods
push
fcmove
int3
push
fsubr
leave
mov
in
mov
dec
fwait
pop
shl
adc
or
call
push
dec
lea
mov
sub
and
push
jmp
(bad)
jne
rcr
mov
in
es
mov
aas
cdq
ror
cwde
lods
or
or
lock
pop
in
add
mov
imul
loop
test
jl
adc
aam
xchg
push
and
sahf
and
sar
jle
lds
stc
cmp
shr
inc
cmps
dec
sub
add
or
push
push
push
ret
fs
and
push
loop
add
adc
and
xchg
test
xchg
adc
cmp
mov
loope
add
and
loop
inc
pushf
push
repz
rcl
sub
pop
adc
and
hlt
xor
mov
and
test
or
xor
cld
int3
ret
loope
cdq
jmp
push
ins
clc
inc
pop
xor
xchg
jbe
(bad)
jno
pushf
and
jmp
and
cmp
(bad)
mov
sub
xchg
hlt
xor
pop
inc
dec
pop
leave
xor
adc
rol
pop
xchg
sub
shl
push
outs
mov
inc
sub
cli
outs
mov
or
xor
pop
pop
(bad)
mov
cmp
test
pushf
rcl
xor
iret
inc
xchg
inc
rcl
mov
imul
mov
pop
push
or
mov
inc
in
dec
ja
(bad)
ja
aam
inc
dec
(bad)
rol
stos
not
aam
test
sub
xchg
out
sub
ss
rcl
xchg
rcl
inc
mov
movs
aam
adc
out
or
lock
in
xchg
inc
dec
and
sti
adc
cmp
test
into
shl
adc
jne
sub
in
ret
pusha
push
icebp
test
push
lea
stos
ss
inc
mov
adc
(bad)
popa
psubsw
stos
adc
sub
add
inc
cmc
xor
cmp
aam
icebp
das
sbb
sub
adc
clc
pop
fs
shl
test
(bad)
xor
or
sub
or
lods
(bad)
adc
fistp
add
xor
and
gs
rol
sahf
push
cs
jmp
(bad)
xor
fs
push
lahf
test
mov
jbe
test
fiadd
or
or
(bad)
mov
loope
jbe
push
in
mov
and
jecxz
mov
rcl
push
inc
mov
add
in
jecxz
(bad)
lock
in
(bad)
mov
xor
sbb
nop
push
in
aad
mov
fwait
mov
jmp
or
(bad)
cmp
les
inc
jbe
mul
and
ror
and
mov
push
cs
push
les
pop
xor
and
pop
xor
ret
mov
push
adc
ret
push
out
scas
aam
push
push
mov
jb
xchg
pusha
jb
push
jo
(bad)
bound
xchg
add
inc
cmc
mov
arpl
inc
cwde
out
and
inc
xchg
jne
xchg
or
ror
out
jp
dec
fbstp
xchg
jae
retf
daa
mov
pushf
daa
hlt
(bad)
cs
std
pop
js
add
inc
sbb
call
jo
repz
adc
push
sti
xor
nop
or
jb
add
movq
and
jp
lahf
in
sub
jno
sbb
loope
lods
jb
mov
ret
sbb
mov
mov
hlt
jge
xchg
jns
push
jge
loopne
arpl
hlt
ja
je
add
mov
xchg
push
add
xor
inc
sub
mov
ret
and
push
pinsrw
mov
mov
inc
or
(bad)
cld
add
pop
push
adc
push
xor
add
push
inc
mov
les
adc
aaa
rcl
aad
sti
adc
in
ss
shl
lahf
xchg
loopne
add
cmps
hlt
mov
and
movs
sub
(bad)
dec
inc
xor
xlat
and
inc
jmp
inc
sbb
mov
mov
or
pusha
push
adc
je
adc
mov
jo
dec
jb
add
jmp
add
(bad)
popf
add
inc
loopne
pop
push
add
aas
sbb
movs
out
in
xor
push
(bad)
xor
add
inc
cmc
inc
push
jne
pop
pop
lea
fs
jno
add
mov
xor
fnstcw
dec
jbe
add
jb
inc
movs
adc
mov
(bad)
sar
shl
daa
and
jecxz
and
clc
les
bound
dec
cmp
loop
or
jbe
inc
inc
ror
loop
movs
jmp
jb
leave
das
ret
xor
adc
add
fwait
and
out
inc
cmp
ss
leave
cmps
push
pop
jbe
loopne
adc
lock
xchg
shr
and
mov
push
cs
les
popf
add
lahf
jns
push
jge
rcl
xchg
mov
sub
mov
int3
aam
mov
xchg
in
out
jmp
mov
jbe
rol
ror
sbb
iret
test
fs
fistp
push
mov
ror
fnstsw
iret
ds
xchg
xlat
inc
sub
xor
xor
xchg
mov
(bad)
adc
mov
mov
sub
icebp
adc
aas
mov
arpl
add
call
push
cmp
out
inc
inc
out
sub
jne
xchg
arpl
push
cli
cmps
or
xor
imul
in
inc
clc
movs
bound
lahf
dec
and
test
js
xchg
repz
or
dec
push
sub
aas
hlt
not
ss
fwait
rol
jb
xchg
xchg
inc
pusha
and
xlat
cmps
push
add
mov
jmp
imul
(bad)
push
adc
mov
retf
inc
in
in
mov
(bad)
dec
dec
jne
pop
add
push
ret
dec
call
aam
sbb
adc
addr16
push
mov
add
std
add
enter
sub
push
mov
xchg
add
ficom
mov
jle
cmp
call
bound
pop
and
and
adc
push
rcr
push
loope
add
mov
xor
(bad)
push
out
jne
add
sti
test
and
add
int
sbb
or
xchg
bound
xor
in
ret
loope
dec
add
xlat
fbstp
inc
aam
fistp
idiv
call
and
push
mov
mov
rcl
xchg
sbb
jb
xor
sub
shl
mov
jne
fldenv
mov
add
repz
daa
cs
das
stos
xchg
push
mov
pmulhuw
cmp
aaa
outs
push
add
addr16
add
sbb
sub
jmp
xor
xchg
(bad)
mov
mov
xchg
push
push
pop
cmps
dec
xchg
sbb
or
sbb
ficom
popf
sbb
jmp
sbb
dec
pusha
mov
aaa
push
xchg
cmps
push
rol
test
pop
adc
(bad)
and
mov
pop
jecxz
bound
dec
jp
test
mov
push
xchg
xor
sub
mov
ds
lahf
pop
loop
mov
test
or
xchg
pop
mov
fs
inc
loop
aaa
inc
pop
pop
aaa
jb
scas
addr16
leave
xchg
rol
not
push
aaa
inc
push
sub
sbb
inc
pop
fs
(bad)
retfw
sahf
adc
dec
aaa
inc
inc
aam
mov
sbb
cli
xchg
enter
test
dec
jecxz
cli
mov
push
push
cs
jne
mov
push
sbb
aad
shufps
mov
(bad)
stos
mov
mov
and
lahf
sbb
xor
push
xor
sub
fidiv
lock
mov
cmp
lds
hlt
pop
sbb
mov
lods
push
mov
dec
and
test
mov
adc
mov
imul
xchg
outs
adc
cwde
xchg
cwde
mov
fmul
push
mov
xchg
jmp
xchg
dec
mov
pop
jnp
stos
shr
bound
mov
in
add
mov
mov
loop
push
or
dec
add
pop
xchg
fisttp
fwait
aam
pop
retf
pop
mov
push
cmp
arpl
sahf
repz
add
lods
(bad)
in
push
fisub
xchg
je
xor
rcl
jb
adc
jb
add
fimul
stos
mov
or
out
cmp
inc
js
imul
pop
(bad)
fucom
pushf
pop
and
stos
xchg
repnz
jmp
loope
imul
sbb
sub
outs
lock
fisub
jo
inc
out
jecxz
in
or
movs
xor
hlt
pop
ret
sub
aas
xor
loopne
add
fldenv
fmul
xor
pushf
xlat
stc
ja
fcom
sub
push
stos
adc
inc
gs
rol
xchg
shl
inc
mov
int3
repz
pop
cld
movs
xor
loop
movs
call
loop
xchg
hlt
popa
das
xchg
nop
dec
push
push
(bad)
or
mov
ret
or
nop
push
ret
mov
push
add
adc
lods
and
xor
mov
je
mov
inc
int3
adc
cmp
jbe
xchg
mov
addr16
ret
aad
or
fist
mov
xchg
cmp
push
idiv
stos
jl
fs
call
call
out
jecxz
jae
cmp
mov
out
div
add
dec
jl
repnz
adc
lea
js
xor
jp
xor
xchg
out
rcr
ss
test
xchg
aad
xor
shl
cmp
mov
push
lods
add
ss
mov
aad
out
pop
and
push
fmul
out
shl
ins
cs
rcr
retf
push
push
loopne
jne
push
cmps
in
jmp
mov
xor
jbe
push
mov
add
ja
movs
and
pop
and
mov
xchg
nop
add
aas
adc
xor
or
sub
add
fs
push
dec
xlat
mov
cmp
ret
lahf
arpl
fwait
scas
mov
ret
xor
aad
push
loopne
xor
test
pushf
loope
adc
jl
mov
adc
jne
push
out
ja
and
inc
cdq
pop
pop
jo
and
cs
jp
(bad)
iret
pop
icebp
jle
and
fisubr
and
call
add
shr
mov
pop
fstp
iret
xchg
mov
adc
in
and
push
std
pusha
lea
xlat
xor
popa
rol
mov
mov
pop
lock
mov
mov
(bad)
xchg
xor
es
lahf
cmp
mov
mov
push
pop
clc
xchg
pusha
sub
inc
mov
mov
lods
lods
cmp
ss
mov
movs
fwait
mov
shl
push
and
mov
out
je
jne
inc
inc
loopne
cmp
and
test
ins
cmps
adc
jns
mov
jl
xor
inc
xchg
jne
cmps
movs
stc
cmp
movs
pushf
test
dec
pop
loop
js
xchg
outs
xor
int
in
(bad)
imul
inc
mov
cmp
sbb
in
call
cmp
jb
ins
xlat
mov
push
rcl
cli
cmc
or
xor
add
inc
iret
(bad)
lock
push
pop
retf
xchg
retf
fiadd
or
xchg
pop
test
add
push
adc
bnd
(bad)
fxtract
push
test
mov
dec
adc
fsubr
adc
mov
adc
push
dec
add
add
and
stos
push
xchg
stc
push
bound
and
out
not
mov
popf
push
mov
retf
push
add
dec
je
ror
ret
xchg
ret
ins
sub
out
xchg
(bad)
dec
std
inc
sub
retf
jae
mov
out
ins
mov
inc
aaa
or
xchg
add
pop
mov
fwait
inc
dec
jg
pop
js
sar
mov
sbb
sub
pop
xchg
push
cmp
in
stos
daa
xor
jmp
popa
jmp
cmc
jl
in
xchg
and
(bad)
out
imul
aad
mov
(bad)
iret
test
lea
jnp
add
fisttp
dec
sub
popa
xchg
cli
jbe
je
lods
das
je
mov
mov
imul
adc
out
test
test
xchg
gs
adc
(bad)
xor
in
aaa
push
call
pop
dec
fdivr
pop
sti
jl
rcl
mov
popa
scas
jmp
mov
lock
sbb
jno
inc
jbe
jnp
fidiv
loop
cld
jl
fs
or
cmp
rcl
mov
sub
rcl
and
imul
fwait
or
clc
sub
mov
pushf
das
jae
add
mov
ss
jb
mov
sahf
adc
and
scas
imul
fs
cmps
add
xor
ds
(bad)
neg
retf
movs
(bad)
sbb
add
adc
jmp
jae
and
fwait
lock
aad
call
repnz
es
xor
pop
add
push
xor
mov
mov
mov
cmps
fimul
and
mov
xchg
xor
dec
dec
add
push
jnp
jl
mov
stos
jl
fs
push
mov
add
movs
jecxz
sbb
test
pusha
dec
sbb
test
test
adc
inc
mov
xchg
push
out
push
ret
into
js
jle
pushfw
test
inc
xchg
xchg
dec
div
sub
es
repnz
ss
adc
cld
cmpxchg
mov
hlt
rcr
xchg
inc
push
dec
ret
out
add
sbb
popa
xchg
hlt
jmp
repz
sub
les
jae
jl
cmp
xchg
std
mov
(bad)
dec
xlat
call
push
add
jbe
loop
rol
mov
clc
fsubp
into
sbb
push
int3
xor
out
out
pop
add
adc
iret
mov
add
adc
push
lock
and
push
push
fadd
loopne
xor
mov
mov
add
dec
out
cwde
aam
inc
mov
mov
(bad)
xor
sbb
inc
mov
popa
(bad)
inc
jmp
int3
push
sub
cmp
retf
and
shr
data16
das
fwait
mov
jmp
aaa
sahf
stc
hlt
pop
das
xchg
jle
test
mov
mov
lds
movs
cmps
leave
xchg
dec
rcl
inc
sub
idiv
enter
(bad)
cli
in
test
(bad)
aam
out
add
xchg
mov
cmp
xchg
lahf
jmp
jge
popa
movs
dec
and
inc
pop
psllw
adc
add
test
arpl
enter
sbb
mov
jns
and
repnz
clc
inc
pop
push
mov
push
jo
lock
mov
clc
add
mov
pop
jns
fsub
aas
inc
pop
jl
test
test
loope
adc
sar
and
push
lea
and
mov
add
inc
inc
dec
push
sub
push
cld
stc
aam
push
jp
sub
jmp
push
pop
addr16
pusha
push
ins
aad
inc
int
mov
xchg
pushf
rcr
xchg
ret
cmc
mov
or
sbb
xlat
mov
pop
inc
jno
bound
enter
and
mov
arpl
add
cmps
sahf
(bad)
aam
(bad)
pop
mov
pushf
pop
xchg
adc
mov
pushf
xlat
inc
bound
loopne
xlat
adc
lods
les
inc
cmp
xchg
ficomp
dec
je
inc
xor
cmc
ret
mov
adc
jno
mov
das
popf
in
mov
aaa
adc
push
outs
sub
in
retf
xor
jge
shl
xchg
or
call
aas
movs
les
push
cmp
(bad)
lea
mov
sti
in
jle
mov
xchg
shl
loop
in
pusha
cli
jmp
int3
in
mov
(bad)
mov
movs
xchg
daa
movs
hlt
add
test
shr
(bad)
shr
popf
cmc
les
jecxz
or
repnz
jp
not
mov
cmps
clc
cmp
xor
or
gs
xchg
mov
xchg
bound
xor
add
push
sbb
mov
retf
fidiv
clc
add
shl
aam
mov
push
push
sar
pushfw
(bad)
mov
mov
push
push
in
sub
mov
or
xor
fnstenv
xor
mov
daa
jl
mov
fs
xchg
fdivp
push
mov
jae
add
aam
mov
mov
jmp
hlt
lea
ficomp
inc
dec
nop
add
call
xchg
icebp
(bad)
outs
sahf
pop
or
inc
test
in
inc
adc
xlat
cli
jg
faddp
xlat
cld
scas
gs
xchg
test
(bad)
outs
aad
ret
arpl
and
js
shl
inc
push
cmp
cmp
and
cld
hlt
cmp
xor
mov
sbb
mov
mov
mov
les
test
icebp
add
xchg
pop
push
cmp
cli
movs
xchg
adc
(bad)
in
(bad)
lods
rcl
pop
adc
add
loope
icebp
push
xchg
or
pop
stc
movs
adc
inc
imul
add
stos
push
push
adc
dec
icebp
into
(bad)
jge
ret
stos
test
rol
xor
das
sar
mov
adc
add
ret
in
fisub
psllw
test
xchg
mov
es
imul
adc
es
xchg
xor
sbb
jl
icebp
sahf
fnstenv
movs
add
dec
rcl
loopne
lahf
mov
ins
mov
xlat
and
or
aaa
shl
adc
add
cmp
test
pop
cmp
xchg
jp
cmps
imul
loopne
test
scas
cwde
rcl
stos
jecxz
ror
push
xchg
push
dec
xor
xor
push
mov
dec
lods
mov
add
mov
iret
adc
scas
repz
adc
hlt
mov
cdq
(bad)
lds
mov
xchg
lea
adc
dec
loop
jae
inc
mov
aas
cli
das
pop
outs
(bad)
mov
sbb
mov
sar
mov
mov
xchg
sub
mov
push
jnp
scas
jl
in
or
out
cmp
push
(bad)
outs
div
(bad)
xor
mov
jmp
dec
jecxz
fbstp
adc
and
imul
sub
push
sar
jbe
cmps
xor
and
call
mov
add
jp
popf
ja
mov
and
cmp
sti
jmp
iret
push
sub
xchg
mov
mov
pop
ret
fwait
ss
mov
and
inc
mov
xchg
cdq
or
fist
je
je
and
xor
outs
or
dec
jb
retf
inc
sub
(bad)
lods
pop
mov
inc
(bad)
adc
les
cmp
xchg
xor
pop
pushf
lea
std
ror
push
or
and
cmp
les
aaa
(bad)
lds
adc
inc
jge
inc
(bad)
jp
xor
ins
and
ret
and
ja
and
xchg
and
or
pop
adc
jns
sbb
mov
xchg
aaa
mov
xor
stc
adc
dec
repnz
mov
rol
in
loop
sbb
sub
xchg
dec
jno
lahf
(bad)
cwde
int
or
aaa
les
adc
hlt
rcl
arpl
mov
test
enter
(bad)
mov
xor
add
xor
pop
xor
add
les
dec
jecxz
test
adc
mov
xor
mov
xor
or
cmp
das
adc
enter
inc
mov
pop
ficom
sbb
jmp
pop
les
xchg
cmc
or
les
(bad)
in
out
sti
xchg
bound
pop
sub
test
adc
repnz
call
das
adc
test
ins
or
ret
mov
xlat
in
push
outs
and
rcl
push
mov
int
scas
loop
xor
mov
pop
sbb
bound
ret
aad
push
ss
hlt
pop
mov
mov
jmp
mov
arpl
daa
mov
repz
test
aam
and
scas
mov
adc
dec
mov
dec
pusha
in
sti
and
cmp
mov
add
xchg
mul
inc
mov
shr
adc
movs
mov
int3
mov
sbb
or
je
int
push
mov
jmp
and
add
sbb
jae
ret
cmp
xchg
mov
jmp
in
les
inc
out
mov
movs
call
mov
xchg
(bad)
repnz
popf
rcl
push
(bad)
mov
jne
test
stos
in
ins
lods
xchg
cmps
icebp
or
xor
mov
jb
dec
pop
in
in
je
push
ret
pop
adc
std
pop
(bad)
sub
(bad)
sbb
cmp
outs
inc
mov
xor
pop
cmp
ret
dec
int3
repz
jge
bound
adc
jno
stos
test
loope
mov
test
and
scas
repz
pop
in
jae
movs
or
mov
and
cmp
ins
les
enter
rcr
data16
call
shl
push
adc
jae
test
enter
out
jl
aaa
dec
fcomp
mov
cmp
movs
ret
mov
xchg
inc
nop
inc
push
inc
pop
fcomp
jb
dec
push
xor
cmps
arpl
dec
inc
jae
pop
or
jnp
inc
lock
mov
xor
add
cmp
int3
ja
test
fdivrp
ficom
xor
pop
xor
sbb
xchg
cdq
loop
inc
xchg
jnp
(bad)
retf
pop
lods
cmps
and
in
push
xor
mov
test
cmps
xor
xchg
mov
dec
cmps
push
jecxz
pop
movmskps
fucomip
adc
xor
cmps
xchg
inc
stos
adc
xchg
ins
outs
adc
pop
push
scas
cmps
add
mov
jmp
gs
xor
cmps
push
add
fs
mov
outs
je
jnp
dec
stc
jmp
mov
mov
jae
mov
scas
shl
push
mov
test
into
fxch
mov
add
or
icebp
(bad)
out
sti
push
jmp
daa
data16
xchg
sub
inc
sbb
sbb
out
pop
inc
push
jg
add
push
xchg
into
or
adc
repz
jb
fs
inc
mov
cmp
xchg
mov
adc
leave
fsubr
and
aaa
fstp
cdq
scas
fst
mov
and
xchg
out
test
rcr
pusha
jne
addr16
lahf
outs
adc
jecxz
xchg
icebp
pop
mov
std
mov
xchg
out
in
fbld
inc
jmp
inc
retf
sahf
ja
das
mov
mov
inc
inc
imul
popf
inc
es
cmc
loope
adc
fldcw
bnd
cs
mov
ret
push
jbe
iret
add
imul
fld
mov
out
sub
outs
sub
inc
dec
add
push
or
mov
xor
nop
aad
and
out
movs
dec
inc
add
xchg
push
push
pop
mov
fcom
xchg
hlt
cmp
out
sub
dec
bound
repnz
adc
push
in
jmp
xor
adc
rcl
fstp
push
jge
adc
out
sbb
pushf
xlat
sbb
mov
mov
xchg
fwait
adc
mov
inc
in
out
repnz
push
adc
xor
movs
pop
mov
cmps
je
repz
mov
cmps
adc
push
fiadd
cmp
pop
jae
dec
lods
push
(bad)
sbb
(bad)
jnp
push
aas
inc
fs
mov
cmp
jmp
mov
jge
or
push
in
not
jmp
inc
cs
add
movs
sub
call
lahf
in
mov
jb
sar
push
pushf
mov
sbb
xor
mov
rol
rcl
jmp
fisttp
cmp
jno
or
jbe
pop
jbe
(bad)
leave
test
jo
aam
in
pop
mov
call
sbb
ja
push
and
or
sub
push
outs
mov
(bad)
(bad)
stos
add
jae
les
push
sahf
push
mov
test
in
or
das
add
imul
fwait
hlt
mov
pop
xchg
shr
inc
shl
xor
in
(bad)
dec
inc
or
xchg
lea
xor
push
mov
jno
hlt
adc
iret
stos
pop
mov
fs
sub
pop
je
mov
test
in
out
cmp
outs
adc
inc
pop
xchg
mov
movs
inc
cmp
xlat
scas
je
jge
scas
mov
xchg
aas
les
add
xor
cmp
and
les
dec
sub
cdq
leave
outs
add
mov
(bad)
jae
fisubr
inc
cmps
stos
jne
and
lahf
push
jno
(bad)
push
inc
jg
add
ja
loop
pusha
je
mov
daa
sbb
mov
or
push
nop
cmp
push
popa
inc
outs
jns
mov
jecxz
loope
gs
aad
arpl
mov
jg
pushf
mov
out
and
jl
cmc
jbe
retf
adc
movs
aas
jmp
mov
mov
pop
adc
mov
xor
test
in
inc
jecxz
and
loope
mov
jbe
jo
iret
in
fwait
jg
enter
push
xor
movs
xchg
mov
mov
mov
xor
rcr
xor
test
sub
bound
data16
or
and
nop
push
add
inc
ins
cmp
fnstcw
sbb
cwde
push
icebp
cmp
pushfw
pop
aas
dec
and
push
les
loop
xchg
pushf
and
enter
retf
pusha
test
inc
mov
gs
in
movs
xor
repz
mov
dec
shl
push
daa
and
movs
stos
ins
pop
inc
xchg
pop
inc
ds
rcr
mov
loope
mov
push
stc
mov
(bad)
cli
adc
(bad)
rcr
sahf
es
btr
mov
push
aad
or
in
jae
rol
xor
ss
sub
mov
add
sar
mov
jmp
aaa
jo
das
mov
push
push
add
add
fmul
pop
movs
or
sbb
dec
hlt
hlt
and
pop
push
and
sub
mov
xchg
cmp
add
mov
add
sub
xor
xchg
test
hlt
xchg
inc
icebp
scas
scas
call
sbb
mov
jmp
push
jp
mov
push
les
mov
in
push
xor
ror
loop
mov
add
mov
aam
lahf
add
push
push
call
repnz
sub
cmc
and
mov
loop
or
mov
cmp
aas
retf
adc
idiv
cmps
iret
mov
loope
adc
outs
jg
jmp
stos
xor
lods
inc
hlt
aas
add
ret
inc
mov
out
sti
jl
pop
adc
push
test
movs
imul
adc
lods
xchg
int3
xor
repnz
push
mov
in
repnz
add
add
mov
fwait
in
adc
xchg
fs
in
mov
aas
leave
aad
adc
adc
fmul
mov
je
sub
bound
(bad)
xor
pop
or
out
mov
mov
inc
shl
in
ds
pop
out
push
pop
cmp
mov
jp
sbb
popa
dec
(bad)
mov
pop
cmp
out
xor
and
lds
xor
add
mov
mov
mov
add
jb
pop
aaa
aad
push
pop
hlt
mov
sub
scas
and
fiadd
dec
inc
pusha
mov
xchg
mov
fld
mov
cpuid
gs
popa
and
pop
cmp
cs
jmp
xor
add
add
lods
add
sbb
test
aaa
enter
jecxz
lock
test
xor
ins
inc
popa
mov
cs
sub
push
adc
call
popa
js
in
inc
inc
xchg
(bad)
sbb
ja
in
daa
xor
ror
adc
hlt
mov
bound
shr
mov
loop
lods
inc
xchg
int3
outs
clc
repz
(bad)
jmp
xor
mov
repnz
cld
sbb
(bad)
xchg
aam
sbb
mov
ins
push
das
jmp
and
adc
sub
pop
lahf
imul
push
jg
push
fsub
and
das
fsub
push
lock
mov
jecxz
in
adc
xchg
pop
out
hlt
or
push
push
xor
outs
xchg
lock
jno
and
(bad)
jae
add
push
or
aam
scas
jmp
jmp
pop
shl
mov
mov
push
loop
sbb
aas
dec
mov
sti
popa
ror
or
adc
aam
jge
or
adc
jp
ror
nop
xor
and
popa
dec
pop
imul
jae
cmc
out
aad
or
fdivr
fwait
mov
inc
arpl
adc
int3
push
and
add
push
in
cmp
ror
jecxz
sub
ins
jo
or
cmp
xor
shr
std
jp
fcmovnbe
lsl
mov
dec
dec
lahf
cs
mov
mov
xchg
ss
repnz
(bad)
fidiv
mov
neg
add
cmp
pop
push
sub
mov
cmps
push
and
mov
jbe
out
xchg
aas
or
jge
addr16
and
movs
jae
fld
pop
jecxz
popf
sub
xchg
mov
loope
mov
jmp
test
rol
mov
popf
cdq
push
in
std
push
aam
repnz
sbb
mov
xor
and
cmps
fs
stos
sub
mov
inc
repnz
jbe
push
arpl
sbb
jmp
mov
imul
push
cmps
sub
test
(bad)
loop
dec
ret
mov
adc
movs
shl
adc
xchg
xchg
les
stc
loop
bound
(bad)
lahf
lock
ds
repnz
xor
jmp
mov
(bad)
test
test
pop
adc
frstor
pop
mov
imul
mov
pop
lahf
mov
imul
aaa
add
inc
push
adc
inc
cmps
push
sbb
inc
pop
out
inc
retf
pusha
jp
aad
(bad)
out
addr16
pop
jne
xor
or
loope
adc
xchg
or
adc
or
in
out
shl
xor
and
es
dec
mov
les
mov
(bad)
loopne
cwde
ss
cmps
or
ins
sbb
test
mov
adc
jl
xchg
out
xchg
movs
bound
enter
mov
test
scas
(bad)
push
popf
ja
jmp
dec
mov
adc
inc
mov
sub
arpl
fisub
aaa
add
ror
xor
push
test
adc
aam
cmp
dec
loop
test
loope
shr
arpl
and
sub
or
xchg
in
test
int3
test
push
xor
mov
add
adc
pop
mov
or
push
fldcw
inc
rcl
inc
inc
mov
hlt
mov
cmp
test
retf
adc
xchg
inc
jl
div
loopne
test
push
(bad)
xor
mov
mov
mov
(bad)
lds
mov
in
pop
mov
jmp
ins
rcr
mov
fnstenv
inc
adc
cmp
cs
inc
mov
loop
inc
stos
push
jmp
cmps
jne
dec
arpl
inc
int3
pop
and
pop
jb
add
mov
xchg
xchg
jae
push
mov
ja
pop
sub
arpl
pop
inc
jge
cli
add
mov
mov
mov
jmp
mov
cmp
out
pop
push
pop
push
and
xor
not
ficomp
add
and
pop
jno
adc
sub
or
loopne
aam
pop
lds
push
mov
test
or
and
sbb
or
(bad)
(bad)
push
jecxz
fidiv
sub
push
jnp
mov
hlt
push
mov
scas
inc
loop
mov
(bad)
rol
cmp
xchg
and
jo
and
xor
(bad)
loope
adc
or
rol
lods
ja
sub
adc
cmp
loop
adc
scas
in
adc
pusha
rol
sub
fbld
mov
(bad)
push
(bad)
mov
int
popf
and
adc
cmp
jb
mov
sbb
popa
stos
or
in
add
mov
add
jb
pushf
sbb
mov
add
fsubr
fs
pusha
mov
addr16
mov
mov
int3
sub
adc
or
mov
xor
sahf
shl
xor
jns
inc
les
pop
stos
fstp
pop
rcl
leave
aam
pop
or
les
mov
sub
jge
push
fwait
xchg
inc
pop
int3
out
jbe
xlat
(bad)
out
repz
pop
nop
icebp
xor
jo
xor
push
and
test
fidiv
or
pop
shl
cld
into
iret
outs
cmc
std
mov
mov
xchg
inc
adc
out
pop
or
lds
jno
xchg
sahf
add
sub
add
aam
adc
call
nop
inc
cmp
pop
fsub
add
movs
sbb
shl
add
je
mov
sbb
and
mov
dec
rcr
sbb
je
pop
mov
inc
add
outs
icebp
outs
fdiv
push
jmp
push
and
mov
imul
pop
ds
add
inc
push
or
sub
inc
or
jmp
(bad)
mov
push
inc
xor
push
lods
out
mov
ret
lea
lods
fucomi
and
xor
push
cmps
out
jl
sub
retf
movs
adc
adc
imul
or
(bad)
(bad)
xlat
les
cli
add
shl
xchg
add
cmps
sub
push
repnz
not
iret
dec
xlat
xor
mov
add
loop
cmps
addr16
mov
mov
es
push
jbe
movs
inc
div
mov
(bad)
ins
pusha
popa
dec
mov
out
mov
je
dec
inc
cs
sbb
and
xchg
cmps
mov
nop
and
js
shl
mov
movs
jmp
add
xchg
dec
pusha
pusha
ins
test
fsub
inc
cmp
adc
mov
jo
das
in
dec
loope
xor
mov
add
out
push
mov
jmp
aaa
mov
in
fnstsw
mov
add
dec
clc
adc
aam
mov
sbb
cmp
int
fnsave
mov
jp
jne
inc
mov
inc
rcl
add
das
pop
pusha
adc
std
and
and
movs
imul
pop
sti
cli
inc
les
push
add
sub
loope
pop
pop
lods
aaa
in
aam
movs
add
call
push
push
jb
shl
loop
inc
mov
loop
mov
ror
out
and
pop
fwait
ret
add
pop
shl
inc
aas
jns
mov
loop
add
shr
adc
push
outs
mov
(bad)
add
iret
and
imul
fs
add
retf
repz
xor
cld
icebp
pop
fs
mov
or
aad
dec
xchg
fist
mov
sbb
sbb
push
dec
inc
jl
adc
mov
pushf
push
xchg
sar
cmp
repnz
pop
repnz
call
xor
jmp
and
inc
mov
xchg
(bad)
dec
stos
pop
leave
fist
push
fist
sbb
inc
jae
cdq
sbb
(bad)
sub
push
gs
mov
add
aaa
in
push
fisub
std
mov
and
xchg
(bad)
arpl
push
push
xor
ja
jg
add
clc
mov
cdq
dec
and
shr
cmps
adc
daa
push
or
pop
neg
repnz
loop
aam
xchg
das
dec
enter
push
dec
addr16
imul
(bad)
(bad)
call
xchg
outs
stos
or
xchg
loope
xor
pop
adc
and
mov
pop
adc
iret
movs
repnz
je
and
ds
pop
out
mov
and
xor
shl
lods
sbb
xor
rcr
sbb
adc
loope
(bad)
rcr
and
xchg
addr16
lods
pusha
dec
test
loope
jp
pop
retf
inc
ret
adc
xchg
sub
lar
mov
out
bnd
xchg
pop
push
push
adc
outs
xor
ret
imul
out
cdq
(bad)
imul
test
pop
push
inc
xchg
call
add
leave
aam
add
test
fadd
inc
xchg
sbb
push
retf
adc
movs
loop
jne
arpl
daa
dec
xlat
test
cmc
mov
or
cld
jecxz
test
aas
outs
sub
add
xchg
(bad)
and
add
adc
adc
sub
xchg
mov
jmp
out
or
push
push
cwde
xchg
ret
push
ds
jae
mov
jg
mov
adc
xor
icebp
push
loope
pop
data16
mov
cmps
dec
sbb
cmps
xchg
jne
jo
addr16
dec
(bad)
adc
popf
ss
(bad)
dec
movs
fisub
ret
icebp
mov
mov
sub
mov
xor
mov
retf
push
mov
jb
mov
ds
sahf
in
inc
cmp
aam
mov
add
and
mov
jle
or
mov
ins
loop
mov
(bad)
repnz
pusha
into
cmps
mov
pusha
lods
and
call
les
sbb
xchg
mov
out
cli
popf
add
sub
dec
das
mov
and
fmul
add
xchg
mov
in
enter
mov
ins
xchg
and
(bad)
repnz
xor
jno
and
sbb
sahf
cmp
out
push
clc
movs
popa
fild
cmps
lods
loopne
cmp
les
inc
mov
add
dec
and
and
(bad)
sub
punpcklbw
inc
xchg
mov
bound
jmp
rcl
les
lds
mov
retf
cmc
std
in
adc
ja
or
pop
pop
test
mov
push
out
ret
fmul
outs
out
add
or
in
je
add
inc
rcl
dec
cmp
mov
arpl
mov
pop
adc
add
mov
jae
lods
jg
mov
adc
pop
mov
ja
add
aaa
ja
call
icebp
xor
mov
icebp
add
mov
loopne
out
pusha
dec
add
mov
mov
(bad)
mov
test
and
mov
(bad)
repnz
gs
xlat
pop
mov
loope
inc
mov
gs
push
mov
sub
pusha
add
push
sti
(bad)
adc
nop
adc
cmps
jns
out
rcl
es
push
lods
shl
jbe
fcomp
mov
xor
(bad)
popf
jge
movs
ss
rcl
stos
movs
loop
xchg
fnsave
push
mov
fcomp
fild
stos
jbe
call
jno
inc
push
adc
and
addr16
mov
bound
xor
ins
xchg
imul
xor
xor
pop
xor
ror
xor
outs
add
mov
xor
arpl
das
and
in
inc
mov
mov
jbe
ins
pop
(bad)
movs
pop
fs
jp
xchg
call
jmp
or
ret
mov
push
cmps
mov
push
loope
lods
leave
xor
jno
push
ficomp
retf
es
push
fnstsw
(bad)
movs
inc
movs
sbb
(bad)
cli
and
jno
int
ret
push
mov
inc
icebp
xchg
in
xor
xchg
or
cmp
pop
ret
test
jne
bound
sbb
repz
push
and
push
sti
ins
and
mov
(bad)
ficom
push
mov
imul
aaa
push
xor
xor
pop
retf
in
inc
jo
fsubr
fcomi
out
add
adc
pusha
movs
ret
xlat
outs
lods
cmp
sub
sub
push
nop
xchg
pextrw
cmp
sbb
sub
(bad)
xchg
dec
cs
arpl
adc
inc
stc
xchg
inc
and
mov
or
stc
xchg
mov
into
scas
add
pop
inc
xor
outs
jae
stos
retf
cli
adc
xor
pop
xchg
dec
adc
mov
jo
add
push
mov
dec
aam
ret
add
cmps
xor
adc
xor
xor
call
retf
(bad)
mov
out
out
adc
loop
imul
(bad)
mov
and
test
pop
loop
push
xor
and
sahf
and
jb
push
xchg
sbb
inc
(bad)
ins
xchg
retf
loope
inc
cmp
sub
(bad)
neg
xchg
inc
add
sbb
push
sbb
jbe
jae
add
bound
sub
hlt
dec
xchg
aas
add
bound
rcl
rol
pop
loopne
xor
aaa
xor
cmc
sub
and
or
mov
and
in
push
sbb
bound
lahf
add
jne
es
lods
pop
dec
mov
mov
cmps
xor
add
and
mov
dec
push
mov
sub
dec
lock
adc
pop
ja
jo
idiv
adc
cwde
xor
xor
pop
cdq
aam
test
scas
leave
inc
stos
mov
and
movs
jne
jle
sub
xor
mov
stc
cmps
mov
les
test
jecxz
and
out
push
xor
shl
xor
inc
jno
aad
clc
push
pop
shl
popa
les
movs
mov
lods
xchg
add
adc
push
(bad)
dec
sub
pop
pop
or
pushf
jne
adc
movs
pop
xchg
mov
add
es
sbb
mov
jbe
mov
enter
cmp
aas
dec
shl
scas
out
shl
shl
sub
in
xor
loopne
sahf
aaa
mov
bound
hlt
mov
sub
repnz
mov
lock
push
shl
shl
ret
stos
push
fcom
or
or
in
nop
mov
inc
or
sub
mov
push
inc
jge
mov
out
push
pop
jecxz
or
add
push
movs
push
jns
je
push
dec
sbb
mov
adc
sbb
fidivr
xor
sub
test
xor
test
add
or
retf
stos
movs
mov
mov
test
out
add
inc
gs
or
les
inc
loope
outs
jl
ins
mov
adc
mov
xchg
add
aas
ins
inc
sub
bound
sub
dec
aad
bound
ss
push
inc
icebp
ds
adc
mov
add
mov
jg
and
jecxz
adc
pushf
adc
mov
sbb
or
pop
fadd
cmp
or
mov
adc
addr16
xor
push
add
ins
ins
xchg
fcmovbe
pop
inc
push
jae
fild
int
fadd
cmp
mov
jb
pop
sahf
pop
movs
inc
xor
movs
adc
(bad)
shl
push
stc
stos
or
neg
call
add
test
and
adc
jmp
data16
addr16
bound
xor
cdq
int3
xor
out
and
std
fbstp
ss
push
add
jge
push
mov
lods
cmc
add
bound
xchg
fisubr
add
push
xchg
in
shl
mov
adc
xchg
cmp
out
xor
addr16
jmp
loope
icebp
(bad)
test
loopne
loopne
xor
stos
not
sbb
jl
mov
and
adc
or
cwde
mov
addr16
imul
cmp
pop
or
xor
rol
sbb
int3
jbe
sub
xor
out
mov
retf
xor
cmp
inc
mov
lahf
push
imul
and
cmp
push
retf
add
into
lahf
push
mov
xor
add
sbb
and
xor
pop
call
call
fidivr
xchg
mov
bnd
cmp
fyl2xp1
inc
xchg
push
jmp
mov
jecxz
fadd
les
aaa
pop
inc
cli
arpl
mov
ins
mov
fadd
pop
pop
loopne
lods
inc
mov
push
mov
arpl
in
not
pop
retf
loop
xchg
in
or
dec
jnp
fldenv
xor
xchg
(bad)
cmp
mov
xlat
sbb
pusha
xor
sbb
mov
shl
push
push
not
adc
mov
je
xchg
adc
jnp
push
xchg
mov
in
aaa
stos
pop
rcr
popa
rcl
cmps
push
rcl
pop
push
adc
push
adc
mov
mov
shl
adc
push
adc
and
retf
jno
imul
dec
pop
push
inc
sbb
scas
pop
push
inc
add
fst
cmp
push
lds
jb
cmp
mov
pushf
push
jne
mov
repz
icebp
sbb
add
mov
jb
or
pop
sbb
stc
mov
mov
cld
add
dec
test
dec
mov
mov
push
pop
xor
add
inc
sbb
adc
xor
lods
sbb
push
movs
jge
shl
adc
jmp
push
aam
add
hlt
pop
(bad)
cmps
dec
push
loopne
ja
mov
inc
mov
mov
cmp
stos
aaa
repnz
popf
(bad)
(bad)
adc
aad
jb
stos
mov
rcl
xor
mov
imul
xor
mov
xor
inc
test
add
mov
adc
mov
jae
inc
and
and
jg
add
mov
adc
dec
pop
sub
fwait
add
mov
lock
or
cmp
pop
repnz
jg
mov
in
push
push
or
dec
dec
outs
and
push
xor
mov
fbld
cmp
(bad)
add
mov
out
lds
sti
inc
xchg
test
sbb
lods
fmul
outs
fs
pushf
sbb
call
xchg
mov
cmps
movs
cli
adc
xchg
retf
jbe
fisub
xor
not
mov
cmp
bound
retf
adc
cmc
add
ror
jnp
inc
mov
div
popf
mov
jle
mov
daa
cmp
cmc
adc
cmc
mov
movs
push
not
xchg
div
inc
ret
rcr
movs
adc
adc
jecxz
push
inc
sub
jbe
xor
jnp
push
mov
stos
jo
mov
cmp
addr16
xor
xor
(bad)
mov
cwde
ins
fwait
adc
xchg
jne
dec
ret
outs
dec
adc
dec
clc
sub
xlat
arpl
jb
ficom
fsubp
push
int
fs
(bad)
mov
addr16
add
inc
addr16
mov
xor
add
ror
lock
ss
bound
sub
addr16
addr16
out
inc
fistp
pop
inc
retf
jmp
loope
repnz
stos
and
lods
push
inc
push
push
(bad)
loop
lahf
xchg
xchg
je
gs
(bad)
mov
xchg
or
clc
push
sbb
mov
dec
(bad)
jmp
test
data16
mov
sub
cli
adc
icebp
pop
sub
sub
cli
add
dec
jno
call
xor
loop
xchg
xchg
daa
cmp
aas
loop
push
data16
sahf
mov
test
loope
jecxz
xchg
xchg
xor
movs
jmp
gs
shl
xchg
mov
or
jecxz
mov
scas
pushf
mov
sbb
jb
sahf
or
lock
fdiv
sar
adc
mov
jle
pop
(bad)
into
mov
rcl
mov
fisubr
xor
xchg
int3
out
dec
xchg
add
and
test
stos
ficom
nop
adc
or
lock
dec
retf
mov
add
das
cmp
mov
xlat
inc
idiv
in
add
(bad)
and
inc
in
xchg
aaa
mov
fsub
adc
jecxz
pushf
add
pop
jmp
pusha
jae
sub
or
test
dec
and
mov
test
or
rcl
pop
movs
add
or
scas
push
cwde
push
jl
sbb
xchg
xchg
repz
add
das
and
stos
adc
lods
aad
sbb
jmp
or
(bad)
mov
int
push
dec
mov
jo
pusha
cdq
shr
sti
mov
daa
pop
add
scas
xchg
and
push
not
inc
movs
mov
lock
pop
mov
sbb
mov
pop
xor
xchg
pusha
cmp
retf
test
fnsave
or
aam
lea
stos
shl
lock
ret
test
adc
jb
xchg
test
ret
fs
fisub
fwait
jmp
in
pop
test
sub
add
mov
and
mov
or
xchg
fld
es
ret
mov
adc
add
loop
sub
frstor
dec
imul
add
sub
mov
inc
mov
icebp
push
lods
and
xor
push
sbb
mov
push
imul
mov
xchg
bound
ins
cmp
gs
xor
or
inc
cld
fs
or
pusha
xchg
push
sbb
xchg
xchg
push
ret
aas
cmps
xor
dec
gs
mov
(bad)
int3
mov
call
push
pop
xor
cmps
sub
mov
ret
dec
aad
push
mov
jns
xchg
and
inc
xor
es
rol
xchg
push
or
les
and
jl
rcl
add
xor
inc
mov
call
int3
mov
gs
lds
xor
cmp
rol
adc
and
mov
shl
push
scas
out
ins
or
test
(bad)
inc
repz
out
or
xchg
pusha
neg
pop
mov
lahf
(bad)
mov
movs
sub
cmc
movs
jmp
addr16
or
(bad)
mov
hlt
xchg
or
dec
mov
movs
mov
cld
push
ffree
aad
or
push
(bad)
xor
mov
daa
loop
fadd
cwde
(bad)
mov
cmp
pop
jmp
dec
adc
loop
call
nop
scas
aam
scas
mov
test
addr16
add
mov
cmp
and
aad
je
test
mov
popf
push
leave
sub
jmp
arpl
loope
push
xor
dec
(bad)
and
mov
mov
mov
in
stos
xchg
mov
inc
push
dec
vpsrlw
xchg
ret
xchg
pushf
sub
enter
pop
imul
psrlq
mov
mov
int
adc
push
call
lahf
mov
retf
or
out
inc
gs
sub
add
test
xchg
shl
jne
add
inc
repnz
or
call
pop
jmp
mov
push
jo
ins
retf
pusha
in
jne
xchg
arpl
inc
xor
push
mov
jne
ret
(bad)
sbb
xchg
cs
jns
xchg
jno
mov
imul
test
push
push
arpl
mov
jb
fucom
xor
sub
(bad)
sbb
movs
ja
xor
mov
dec
or
je
leave
xchg
mov
lock
mulps
imul
add
int
in
sbb
cs
(bad)
mov
shl
cmp
add
inc
repnz
aaa
mov
inc
or
iret
push
and
ins
daa
inc
ret
out
cmps
jns
mov
mov
jp
xchg
arpl
data16
std
je
arpl
lods
mov
gs
adc
xchg
sub
xchg
lea
montmul
cmps
pop
jge
adc
lock
inc
adc
xchg
scas
jb
sbb
xchg
mov
cmp
lods
mov
or
xor
(bad)
fist
popf
push
lea
ja
cld
jno
adc
sub
int3
xor
mov
pop
rol
xlat
rcl
sbb
dec
cmps
or
scas
shl
mov
xlat
loopne
jb
pop
test
cmp
gs
mov
lock
icebp
movs
(bad)
(bad)
mov
data16
pop
imul
pusha
mov
fucomp
sti
push
and
jmp
jne
movs
add
add
inc
fnstenv
call
loope
test
pop
mov
(bad)
aad
mov
pop
xchg
outs
push
xor
and
cmp
enter
and
add
nop
daa
arpl
jns
push
rol
jle
cmp
fsub
or
movs
adc
mov
iret
lods
mov
(bad)
xor
cmc
add
sbb
jp
mov
repnz
inc
test
dec
add
mov
iret
rol
lds
pop
cdq
stc
or
pusha
leave
inc
mov
shl
test
aad
call
jmp
ret
mov
(bad)
adc
inc
sbb
push
repnz
lods
mov
bound
out
repz
jle
inc
jno
cmp
std
daa
fisub
int3
fisub
repnz
lods
pop
sbb
not
pop
(bad)
adc
stos
add
(bad)
adc
cdq
xchg
mov
xchg
call
mov
mov
je
add
movs
dec
loope
mov
rcr
inc
mov
adc
cmp
cmp
adc
fxch
xor
adc
cdq
jmp
dec
fnstsw
mov
aad
icebp
cmps
ins
ret
mov
adc
fs
mov
mov
lods
sbb
xor
mov
pop
push
daa
sub
aam
cmp
adc
(bad)
push
pop
push
mov
jbe
sar
lock
(bad)
scas
in
xchg
cld
into
repnz
lock
push
mov
cmp
(bad)
mov
jno
or
frstor
data16
push
iret
mov
xchg
adc
add
cmp
daa
adc
hlt
mov
icebp
rcl
(bad)
lods
push
repz
shr
cmc
ja
popa
xlat
mov
sub
movs
movs
mov
cmp
push
adc
sbb
arpl
and
or
out
cld
mov
mov
shl
mov
repz
push
and
add
push
sub
scas
mov
or
and
push
neg
xor
stos
std
sbb
dec
(bad)
int3
and
popa
ja
adc
popa
lds
mov
jmp
icebp
nop
mov
jae
out
aad
jne
sub
jle
inc
cmp
clc
mov
sub
ss
je
mov
lds
aas
mov
mov
sub
inc
movs
daa
mov
les
ret
sub
(bad)
inc
jp
cmp
lock
pushf
xchg
mov
out
fdivr
je
ins
cdq
pop
fwait
cli
test
cmps
mov
mov
mov
(bad)
in
pushf
ins
and
adc
jge
mov
leave
(bad)
repnz
jge
inc
and
pusha
outs
cmc
lds
adc
sbb
xchg
dec
add
dec
xor
ret
or
add
cld
and
cmc
mov
cmps
addr16
jl
inc
mov
lahf
repnz
sbb
pushf
arpl
shl
mov
adc
shl
(bad)
xchg
inc
sbb
xor
and
stos
mov
push
aaa
not
xchg
dec
mov
mov
int
and
mov
out
shl
arpl
neg
mov
xor
lods
shl
adc
cmps
clc
sub
idiv
mov
xor
ret
sub
jb
xchg
sub
es
add
dec
daa
fcmovb
dec
xchg
mov
or
test
daa
loop
loope
dec
and
movs
(bad)
aam
fcomp
jbe
sar
mov
sbb
aad
cmp
xor
retf
fiadd
push
mov
cmps
test
inc
popf
mov
repnz
adc
push
mov
xchg
mov
movs
xchg
clc
xor
xor
jo
sbb
push
mov
mov
xor
sub
loop
mov
mov
shr
retf
shr
rol
leave
sbb
pushf
clc
mov
icebp
loop
rcl
inc
ins
outs
arpl
ret
es
and
adc
adc
inc
mov
stos
movs
fld
adc
xchg
es
(bad)
cld
out
mov
pop
xchg
add
das
push
push
stos
inc
jle
test
loope
fs
add
jecxz
fs
jne
fs
aaa
aad
jnp
and
jge
(bad)
mov
repz
ret
cmp
and
shl
sbb
mov
push
inc
ret
add
push
cmc
mov
enter
cld
push
sbb
ret
jnp
cmp
jmp
jmp
repnz
(bad)
xchg
repz
arpl
mov
add
test
movs
xchg
shl
pushf
push
mov
repz
push
sbb
lods
sub
xor
mov
hlt
push
xor
add
mov
pop
mov
inc
adc
xchg
mul
sub
je
scas
sbb
and
push
(bad)
push
jecxz
xchg
xor
or
jg
dec
xor
retf
jo
push
dec
andnps
xchg
(bad)
mov
cmp
pop
loopne
mov
push
(bad)
sub
sbb
sbb
add
fcomp
sbb
(bad)
mov
inc
jno
add
mov
xchg
jb
(bad)
addr16
ror
xchg
sbb
sub
jge
mov
lahf
mov
pop
std
mov
jne
inc
mov
fmul
mov
xchg
inc
into
xchg
dec
jmp
ins
xchg
mov
xchg
add
inc
add
fiadd
sbb
add
loopne
les
jl
call
xor
call
xchg
mov
mov
mov
and
mov
jecxz
les
mov
inc
cmp
xor
sbb
mov
xchg
adc
(bad)
ins
adc
and
cmps
cld
push
dec
movs
stos
adc
jno
add
repnz
sbb
add
mov
dec
loope
sub
push
sub
outs
std
fld
pop
test
sbb
xor
xor
add
mov
jecxz
or
(bad)
stos
shr
leave
rcr
loop
gs
stc
cmps
sbb
xchg
lds
cmp
add
pop
shl
push
sbb
lock
inc
(bad)
and
test
in
xor
xor
or
add
daa
push
pop
add
cmp
out
pushf
imul
xor
xor
inc
inc
sar
push
mov
into
cmp
stc
cmp
lahf
push
xlat
jbe
push
int3
push
fidiv
adc
xchg
dec
add
mov
mov
mov
jge
push
inc
push
movs
(bad)
mov
xchg
push
je
dec
ja
outs
pop
shl
pop
push
xor
sahf
outs
out
dec
or
sbb
movs
cmp
jne
stos
cdq
and
je
and
xor
stos
push
xor
inc
popa
pop
xor
sti
loop
xchg
jae
and
mov
je
imul
push
mov
test
mov
cli
mov
lds
or
pop
xchg
mov
adc
cmp
cmps
pop
arpl
or
repz
js
mov
nop
push
cmp
cli
(bad)
jns
push
adc
sbb
inc
aaa
popf
and
rcl
jb
ret
mov
mov
or
lds
inc
or
mov
or
pop
and
(bad)
xlat
xor
ret
inc
xor
inc
fmulp
shl
mov
ss
xor
inc
ins
inc
fst
xor
or
inc
xchg
xchg
cs
adc
sub
adc
pop
fidiv
ret
test
or
aas
clc
shl
test
imul
jp
push
jns
(bad)
jmp
scas
dec
out
rcr
pop
push
cdq
xchg
xor
sub
popa
xor
stos
clc
adc
test
jns
rcr
mov
push
inc
cmp
fmul
lock
shl
lods
cmp
mov
loop
mov
mov
jecxz
add
ss
and
inc
dec
add
in
inc
xchg
imul
cwde
in
xor
ror
fistp
gs
aad
retf
inc
cmp
retf
cmp
xchg
nop
mov
jbe
jecxz
retf
xor
shl
sbb
lds
dec
mov
xor
inc
or
dec
shl
movs
or
icebp
arpl
dec
push
mov
pop
jle
jbe
shr
xchg
jns
ins
mov
xor
shl
je
loopne
xchg
jge
sbb
nop
push
fs
xchg
mov
pop
popf
fs
int3
lock
mov
push
mov
mov
adc
adc
aad
scas
xchg
aaa
jo
mov
inc
das
repnz
or
add
push
jmp
push
shl
mov
cdq
mov
sbb
jae
jo
cmp
enter
aaa
scas
pop
push
cmps
sub
xchg
pusha
(bad)
std
movs
je
shl
and
icebp
jbe
jg
pusha
xor
arpl
mov
mov
adc
out
movs
retf
iret
jbe
push
test
ins
in
jg
(bad)
scas
fwait
and
inc
mov
into
mov
iret
jae
movs
cld
(bad)
cld
cmp
sub
adc
imul
mov
cs
mov
retf
add
loope
and
add
fisubr
sbb
test
movs
mov
cmp
mov
icebp
jmp
add
test
mov
sub
mov
mov
xor
add
gs
in
mov
lods
shl
cmp
push
jo
jl
test
jecxz
and
bound
or
xor
sbb
data16
je
push
dec
xor
sahf
jb
repz
mov
xchg
popa
xchg
rol
cmps
ror
hlt
int
loop
daa
das
dec
pushf
push
loope
dec
sbb
xchg
and
xchg
sbb
gs
xchg
ins
movs
fwait
push
push
popf
repnz
test
jno
outs
int
ss
xlat
sbb
int
and
and
jl
dec
mov
repz
fwait
cli
lods
add
xor
shl
into
mov
adc
mov
adc
or
mov
push
push
push
enter
xchg
dec
arpl
push
cmps
xchg
xor
dec
clc
add
shl
test
jl
sub
jbe
mul
fwait
jp
out
shl
mov
or
shr
out
(bad)
jle
jns
repz
and
(bad)
adc
jmp
jmp
fs
pusha
in
mov
js
mov
cmps
movs
sbb
mov
pop
inc
cld
(bad)
xchg
outs
std
jecxz
xchg
fdiv
nop
fld
pop
push
sbb
push
sub
sub
dec
xchg
cwde
out
push
in
arpl
movs
je
xchg
adc
push
pop
cwde
pushf
adc
pop
add
lods
sub
pop
xchg
pusha
aam
rol
outs
fs
mov
lods
fist
xor
fst
mov
add
mov
dec
push
mov
test
mov
xor
fcom
and
mov
inc
pop
push
jecxz
adc
jnp
jp
aas
jb
pop
xor
repz
cli
xchg
xor
add
addr16
xchg
xchg
call
mov
imul
loopne
out
sbb
push
aam
push
int3
inc
out
iret
dec
fnstcw
jo
pop
add
add
aaa
rcr
jmp
mov
out
cmp
sbb
or
add
(bad)
fst
test
mov
xor
aam
inc
push
pop
mov
cmp
lods
dec
jbe
or
fs
inc
cmp
jne
mov
mov
imul
std
push
es
push
xchg
push
outs
push
dec
mov
mov
or
inc
call
xor
cmps
xlat
mov
add
push
clc
mov
xchg
sar
or
(bad)
fmul
fidiv
clc
xor
jge
jl
popa
mov
pop
je
jbe
popa
ret
outs
sar
inc
jl
add
shr
rcr
in
xor
xchg
lock
stc
and
lods
mov
or
push
xchg
les
cmp
out
(bad)
inc
shr
fistp
add
mov
out
pop
mov
push
in
and
mov
clc
lock
xor
mov
xchg
(bad)
arpl
or
ret
add
dec
icebp
xchg
mov
xor
xchg
mov
ret
int3
fstp
ret
pusha
or
adc
jmp
xchg
and
inc
aad
fsub
sbb
aad
dec
pop
push
cmp
(bad)
sbb
daa
cs
mov
mov
mov
es
test
xchg
lods
inc
push
mov
fs
mov
nop
and
add
push
cmc
daa
ins
jae
and
ret
push
lahf
push
jae
cli
out
add
xor
inc
hlt
and
out
mov
fiadd
mov
pop
out
shl
arpl
mov
xor
mov
inc
mov
sbb
rcl
fidivr
dec
push
(bad)
pop
pop
mov
mov
test
adc
xchg
data16
bnd
push
jp
adc
and
pop
repnz
(bad)
js
xor
add
dec
dec
in
inc
movs
mov
lock
cmp
xor
adc
retf
adc
pop
fld
ds
xor
push
cmps
outs
out
jecxz
dec
mov
dec
mov
push
ficomp
pop
jbe
and
ss
mov
sub
sub
jp
shl
retfw
pop
jge
xor
and
scas
arpl
ja
push
in
in
in
cmp
cmps
jecxz
cli
jbe
cmp
inc
jmp
mov
add
mov
mov
fbld
cwde
sahf
gs
add
push
hlt
loopne
dec
ja
rcl
shl
jbe
inc
out
retf
add
je
dec
jg
ds
push
and
jns
push
fcomp
rol
push
jo
add
(bad)
mov
cmps
icebp
rcr
into
cmps
mov
inc
mov
or
ins
xor
ret
inc
mov
inc
mov
daa
jb
sub
enter
dec
mov
fisttp
or
mov
mov
repz
adc
dec
fs
ret
inc
adc
push
or
jmp
xor
and
mov
leave
xor
nop
jge
dec
ja
cmp
xchg
push
mov
or
xchg
int3
sti
sbb
mov
cli
cmp
xor
xchg
arpl
lds
call
push
sbb
push
jb
ins
out
xlat
mov
fist
sbb
movs
ins
repz
cs
pusha
addr16
or
test
jbe
cld
fdiv
cli
pop
call
sub
fwait
imul
mov
push
sbb
fadd
mov
mov
sub
mov
dec
mov
in
int3
in
stc
mov
ins
test
nop
add
retf
push
cmp
pusha
xor
loopne
fs
mov
mov
ins
mov
mov
adc
inc
mov
clc
push
lds
fdiv
int3
lods
clc
ja
jo
lahf
lea
pop
and
cmp
add
cdq
or
push
jo
shr
adc
sub
push
push
xor
out
pop
inc
lods
call
push
fwait
shl
inc
arpl
imul
leave
js
fisubr
pop
xchg
int
mov
retf
fdiv
xor
adc
dec
mov
or
fidivr
jmp
push
xor
es
mul
movs
in
(bad)
(bad)
data16
data16
loope
data16
xchg
lock
add
sbb
test
mov
dec
lea
loope
(bad)
cld
(bad)
popa
scas
push
in
xor
add
mov
inc
add
div
les
dec
jmp
es
push
xor
loopne
inc
adc
jge
lea
pop
add
int3
inc
popa
imul
aas
jecxz
sar
sub
mov
mov
mov
push
je
cmp
jmp
rol
ret
xchg
repz
data16
movs
sar
add
push
pop
(bad)
call
inc
les
push
xor
mov
xchg
(bad)
fs
add
retf
xor
mov
retf
add
pop
aam
fadd
jmp
sbb
das
xchg
inc
push
jg
mov
dec
xor
fdivp
jne
push
das
movs
inc
fmul
or
stos
es
jo
div
sbb
in
scas
dec
fstp
and
imul
push
data16
clc
sub
mov
lods
nop
shl
neg
movs
dec
(bad)
sar
into
ja
adc
xchg
mov
dec
mov
test
gs
xor
rol
cmp
jae
xor
dec
inc
pop
arpl
or
fs
jns
(bad)
cmc
sub
inc
lock
mov
add
jl
sbb
int3
xchg
inc
cmp
jle
mov
ss
mov
adc
movs
pop
jae
adc
jno
jg
mov
fs
adc
xor
pop
add
loope
inc
repnz
inc
dec
call
shl
(bad)
out
jae
and
(bad)
out
push
adc
mov
loope
cmps
das
lods
inc
xchg
mov
inc
xchg
push
fsubr
xchg
add
jp
les
hlt
arpl
jecxz
cld
mov
inc
pop
push
mov
int
mov
and
ins
cmps
ds
popf
mov
cld
push
xor
inc
out
pop
add
xor
pop
mov
mov
mov
mov
adc
rol
push
and
xchg
int
mov
cwde
and
mov
movs
out
xchg
inc
icebp
test
pushw
sub
loop
jle
push
cs
arpl
jnp
and
sti
mov
add
pop
and
mov
mov
sub
xchg
jo
mov
(bad)
shl
mov
pusha
mov
call
add
sub
fdivr
clc
xchg
ucomiss
adc
sbb
lea
xor
aaa
stos
or
call
call
xor
ds
leave
les
lock
cmp
ss
(bad)
movs
dec
pushf
gs
popa
xor
ins
pop
std
sbb
push
pop
sbb
aaa
gs
arpl
mov
jge
adc
pop
xchg
daa
nop
jmp
dec
adc
add
enter
jecxz
mov
jmp
jns
push
jnp
xchg
outs
pusha
nop
icebp
cmovp
sbb
adc
scas
xlat
int
inc
(bad)
jae
(bad)
repz
shr
das
mov
and
add
jmp
push
lds
push
lock
mov
cmp
gs
dec
jge
push
sar
adc
add
inc
xchg
pop
dec
jmp
int3
push
xor
movs
xchg
loop
je
xor
mov
ret
mov
xor
pusha
mov
push
in
jb
cli
in
retf
or
jl
jp
mov
push
mov
xor
jp
retf
bound
mov
xchg
inc
cmp
lods
xchg
mov
adc
lea
add
je
sub
aas
ins
mov
mov
fadd
and
cmc
shl
xlat
scas
xchg
stos
or
xchg
pop
mov
cmp
pop
pop
xchg
repnz
push
xor
sub
mov
xchg
cs
adc
mov
dec
or
cmp
sub
sub
mov
or
outs
inc
push
and
add
retf
in
sahf
push
mov
iret
xchg
loopne
or
adc
out
fdiv
pop
xor
rol
sbb
sub
inc
in
sbb
ss
mov
stos
sbb
fnsave
add
movs
or
out
movs
push
sbb
jmp
nop
arpl
mov
xchg
or
push
cli
inc
xor
in
ror
jmp
mov
adc
add
lock
data16
cmp
test
icebp
cmp
hlt
out
fidiv
sub
jae
sbb
out
push
xor
xor
mov
mov
movs
(bad)
ss
push
mov
test
adc
inc
dec
ss
xchg
sub
or
pushf
daa
stos
vaddsubps
and
retf
ins
mov
cmp
xchg
jae
jne
dec
push
in
sahf
inc
(bad)
and
xor
push
into
and
mov
adc
call
add
mov
mov
mov
(bad)
sbb
inc
pushf
je
call
outs
test
sub
enter
sar
loop
mov
ins
enter
mov
shl
cld
shl
mov
into
in
mov
call
not
js
xchg
(bad)
aam
movs
pop
je
adc
add
push
iret
jo
push
add
push
dec
mov
mov
fs
xchg
(bad)
cli
mov
sub
jb
and
sub
repnz
push
in
xchg
jb
dec
push
inc
(bad)
std
fs
dec
jae
and
mov
xor
push
repnz
retf
clc
out
xchg
xor
inc
hlt
push
je
xchg
push
je
sub
nop
repnz
repnz
push
add
and
aam
test
shl
jb
jbe
dec
ret
add
cmp
shl
fadd
not
js
mul
shl
icebp
fs
mov
je
xlat
test
inc
and
adc
adc
xchg
in
ins
cmps
push
(bad)
jl
es
xor
inc
cdq
push
out
xor
iret
inc
sub
dec
pop
push
sub
loope
pmaxsw
and
lods
fs
dec
xchg
stc
adc
ss
xchg
adc
in
lea
js
mov
xor
jb
push
jns
add
push
nop
daa
or
test
mov
pusha
push
mov
mov
pushf
sub
add
dec
les
xor
(bad)
ja
test
sub
and
mov
or
push
jno
daa
mov
addr16
adc
rcr
and
xchg
dec
lock
sub
xor
xor
add
(bad)
push
cs
loopne
jmp
cwde
aas
jg
mov
sub
xchg
push
sbb
pop
gs
inc
shl
stos
push
in
je
inc
xchg
sub
ja
sub
ror
xlat
mov
inc
movs
inc
aaa
xor
fwait
gs
xchg
jno
imul
bound
data16
sub
std
cs
ret
(bad)
and
test
jb
sti
enter
jne
add
mov
add
inc
fwait
jecxz
mov
cmp
add
dec
mov
jle
and
in
icebp
mov
inc
mov
inc
icebp
movs
mov
fdiv
loopne
retf
inc
mov
repz
ds
xchg
hlt
push
or
mov
bound
adc
jno
cdq
outs
push
push
test
(bad)
in
adc
mov
das
leave
pop
mov
xchg
sub
rol
push
or
in
fwait
ret
xlat
xor
inc
in
mov
pop
sbb
scas
pop
dec
shl
(bad)
or
les
in
repnz
sbb
ins
xlat
xor
repz
hlt
mov
js
jl
jno
loop
addr16
iret
xchg
mov
add
gs
ret
and
mov
mov
ror
inc
(bad)
repz
sbb
or
std
jp
sbb
add
outs
and
add
loopne
movs
data16
mov
pop
jae
lgs
(bad)
pop
inc
xor
sbb
xchg
repnz
imul
pop
cmps
cmp
adc
fidivr
dec
fs
shl
rcr
cmp
popf
inc
(bad)
dec
cld
fst
add
dec
adc
push
mov
iret
(bad)
gs
popa
mov
imul
xchg
repz
jecxz
test
ja
pop
cmps
push
jecxz
ret
mov
add
lock
imul
cld
and
gs
rcr
mov
pop
mov
cmp
clc
pop
xor
cli
mov
jge
dec
mov
pop
mov
xor
aaa
into
cmp
push
and
(bad)
mov
xor
nop
dec
mov
test
xor
push
xchg
and
jecxz
cld
push
sub
xor
les
push
bound
js
pop
and
(bad)
dec
push
mov
repz
mul
cwde
clc
std
scas
lock
loop
call
mov
inc
or
scas
and
cmp
inc
xchg
or
out
les
jg
cmp
push
pop
push
fbld
push
add
or
(bad)
pop
and
jmp
pop
dec
nop
repz
sub
in
pop
jo
pop
in
(bad)
pop
dec
add
test
rol
xchg
push
xchg
jno
sbb
push
in
cwde
add
ss
movs
push
xor
sbb
movs
and
(bad)
adc
jmp
hlt
lea
mov
inc
cmp
add
es
gs
mov
int3
outs
pop
sub
adc
mov
mov
cmp
or
imul
popf
cmp
push
cmp
pop
push
dec
nop
rol
daa
aam
mov
int3
xor
pop
rcr
mov
test
xchg
in
jae
sbb
ret
rol
js
dec
adc
xor
push
inc
data16
dec
inc
push
mov
mov
pop
shl
cmc
adc
push
(bad)
cmps
in
scas
pop
stos
hlt
xchg
mov
xchg
pusha
mov
shr
test
pop
jmp
aas
(bad)
jecxz
inc
and
dec
hlt
jns
inc
pop
push
leave
sbb
popa
adc
test
fstp
jge
jl
mov
mov
or
ins
inc
retf
ret
xor
out
jb
popa
cmc
jl
movs
jbe
lea
and
cmp
push
bound
push
test
fs
ja
je
je
sub
or
pop
cmps
jbe
je
dec
mov
xchg
es
sahf
loope
push
je
inc
addr16
in
es
out
loop
sub
test
and
imul
inc
xchg
add
xor
cmp
idiv
imul
nop
xor
ret
fs
inc
inc
aaa
xchg
loopne
adc
je
gs
ret
imul
xor
scas
test
aad
stos
inc
jecxz
jl
pop
je
or
sbb
fs
add
aad
inc
xchg
les
bound
mov
add
fcmovnu
add
adc
or
xor
inc
adc
xchg
mov
xor
and
push
dec
cmp
outs
cld
lahf
ret
loop
mov
mov
inc
cmp
sub
cmp
movs
and
not
test
xchg
test
dec
outs
push
mov
imul
inc
out
and
and
sar
xchg
mov
nop
test
cwde
aaa
in
dec
clc
pushf
mov
sub
cmp
jecxz
into
aad
mov
in
into
xor
call
call
out
lods
mov
movs
repz
add
(bad)
int
cli
inc
inc
inc
push
jae
sub
nop
mov
cld
inc
scas
cmps
sbb
aas
(bad)
out
ds
mov
test
jb
push
clc
ins
test
ins
mov
shl
xchg
aad
and
stos
movs
sbb
mov
repnz
mov
fbld
idiv
add
adc
and
(bad)
aad
mov
retf
fist
popa
mov
add
ret
pop
add
inc
and
adc
and
pop
push
mov
mov
cld
cmp
test
add
and
or
xchg
sub
xor
out
inc
jbe
aad
jne
(bad)
stc
inc
push
out
xor
sti
iret
xchg
fnstsw
xchg
or
loope
sub
das
add
pextrw
dec
push
and
jae
and
loop
movs
xchg
inc
pusha
bound
not
(bad)
shl
add
cmp
mov
cmp
daa
neg
movs
and
inc
(bad)
in
imul
mov
test
and
cmp
push
dec
xchg
sar
sub
retf
mov
cmp
test
xchg
mov
adc
out
mov
ret
push
sub
hlt
and
mov
mov
add
fimul
loopne
adc
(bad)
adc
and
sub
shl
hlt
xchg
and
inc
es
retf
xchg
mov
mov
aam
adc
fadd
inc
jnp
ins
and
push
ret
xchg
lods
out
(bad)
cli
dec
aam
mov
idiv
xchg
adc
cmp
les
xchg
adc
jb
repnz
shr
imul
ror
loopne
loop
(bad)
jge
push
mov
push
cwde
mov
cwde
rcl
dec
pop
sub
add
cmps
inc
xor
outs
add
xchg
(bad)
mov
mov
movs
addr16
fistp
test
xor
stc
mov
mov
out
repnz
cmp
mov
xchg
jno
cld
inc
pop
add
adc
xor
jns
call
bound
push
mov
mov
in
fs
in
add
hlt
sub
or
or
das
dec
in
mov
adc
sahf
add
xlat
rcr
loop
(bad)
cmc
sub
into
xor
dec
jl
mov
loopne
mov
and
jbe
xor
(bad)
fist
scas
test
sahf
out
fild
xor
cmovo
cmps
lock
js
sub
pop
inc
inc
mov
das
ds
mov
jmp
sahf
rol
sbb
lea
add
inc
adc
outs
dec
fistp
aas
cwde
shr
outs
mov
out
ins
sbb
sbb
loope
xor
fisubr
das
sub
push
(bad)
jns
sbb
mov
(bad)
neg
into
into
fistp
je
imul
mov
adc
inc
inc
or
mov
out
cmp
inc
(bad)
or
mov
es
cmp
jns
or
(bad)
and
ret
ret
mov
adc
mov
push
cmc
fisub
inc
fild
add
and
mov
ret
mov
retf
mov
mov
fcom
test
jae
rcl
shl
add
sahf
mov
ret
jae
add
adc
test
inc
mov
fs
jle
leave
iret
fldenv
mov
sub
or
xor
call
pop
mov
je
add
mov
repnz
sbb
fldenv
fidiv
mov
xchg
(bad)
jecxz
jno
into
or
sbb
pop
shl
inc
xor
add
stos
inc
call
dec
clc
pusha
retf
cmc
sbb
fdiv
daa
mov
je
cs
(bad)
mov
movq
xchg
cdq
aaa
add
and
add
mov
push
rol
and
inc
pop
bound
add
gs
xor
in
movs
add
jae
and
aam
arpl
xchg
mov
sub
es
data16
adc
shr
pop
cs
sub
outs
mov
mov
popf
mov
je
mov
jecxz
push
adc
sub
adc
mov
test
(bad)
outs
xor
adc
xchg
or
dec
fsub
fs
sub
pusha
mov
fbld
sub
xchg
or
idiv
xchg
jge
jno
add
dec
xchg
cmp
jecxz
mov
sub
push
scas
(bad)
cmps
idiv
lds
xchg
mov
test
in
addr16
lahf
inc
(bad)
loop
push
das
imul
jne
(bad)
lds
cmc
adc
xor
jne
arpl
and
les
pop
cmps
lock
lock
jle
lds
xchg
sbb
push
xor
cmp
in
(bad)
cmps
adc
pop
jl
jecxz
or
xchg
push
mov
scas
adc
inc
jmp
and
inc
retf
repz
pusha
pusha
jbe
cs
je
adc
push
sbb
sar
jo
mov
and
stos
cmp
jae
adc
xchg
into
push
jge
mov
hlt
xchg
stos
sub
les
fcmovb
and
inc
push
popa
pop
add
mov
cmc
cmps
mov
or
cmp
mov
repnz
ret
mov
pop
hlt
int3
pop
jmp
loope
arpl
xor
ret
cdq
push
pop
mov
sub
mov
test
mov
repz
shl
rol
or
xor
sti
call
jo
xor
push
xor
lock
mov
jae
fdivr
xchg
dec
test
popa
push
push
xor
pop
jae
push
(bad)
loopne
pop
dec
lock
movs
pop
sub
or
push
or
mov
pop
add
rol
lods
mov
adc
je
fs
mov
in
dec
push
jle
ja
loope
mov
mov
retf
inc
cmps
mov
push
mov
ins
ss
inc
mov
sub
(bad)
sbb
loopne
dec
cli
ficomp
dec
or
hlt
shr
scas
movs
mov
stos
pop
mov
in
ds
pop
or
xor
or
and
mov
call
test
sub
xchg
jae
inc
daa
ret
imul
hlt
mov
sahf
inc
rol
jmp
adc
rol
in
adc
inc
pop
xchg
jne
test
pushf
mov
loope
sbb
ss
bound
ret
or
js
lds
test
jge
rol
xor
add
outs
add
xor
jl
pushf
adc
push
push
inc
les
add
int3
dec
cwde
dec
sub
jne
je
pop
dec
mov
out
(bad)
cmp
repnz
jmp
retf
or
inc
inc
mov
test
jmp
test
or
jl
into
ret
and
mov
jno
xor
ins
call
lds
or
adc
add
mov
sub
fs
popf
xchg
je
or
aas
fs
loope
adc
push
inc
push
cmp
les
sti
mov
(bad)
retf
mov
ret
xor
les
aas
imul
jmp
and
les
jno
dec
mov
adc
in
add
fld
push
sbb
or
dec
sub
mov
mov
adc
out
mov
sahf
sub
js
add
xchg
bound
inc
dec
jbe
addr16
sbb
loopne
add
or
rol
cmp
inc
mov
mov
icebp
push
push
es
data16
mov
fistp
sub
mov
je
and
jbe
enter
daa
push
(bad)
in
sar
mov
shl
jmp
in
mov
les
(bad)
adc
data16
iret
jns
scas
push
jmp
sahf
cmp
outs
fwait
and
mov
fisubr
mov
or
(bad)
adc
push
push
jmp
adc
dec
out
pop
jo
fucomi
scas
and
inc
ds
(bad)
iret
inc
pop
or
ins
je
push
cmp
jp
stc
jle
jmp
xor
and
stos
cwde
dec
mov
test
inc
hlt
sbb
rcr
int
sub
dec
loopne
jmp
fwait
sbb
enter
add
inc
mov
mov
inc
add
pop
(bad)
lods
test
in
add
xchg
pop
jecxz
pop
adc
mov
jae
xor
stos
loope
ret
cmp
outs
imul
sti
add
xor
js
sar
sub
jns
adc
cmp
les
aad
test
movs
inc
ja
mov
mov
xor
imul
adc
mov
test
mov
adc
cwde
and
adc
out
cmps
repz
in
fcom
add
mov
je
xchg
js
add
loop
ds
adc
in
sub
ret
inc
test
sub
xor
cmps
mov
pop
in
mov
adc
dec
and
and
dec
jp
test
(bad)
xchg
cwde
scas
mov
repnz
and
xor
adc
push
add
fisub
or
push
jle
mov
je
(bad)
(bad)
ja
movs
mov
gs
pop
fbld
cs
js
push
clc
test
or
jb
sar
cmps
sbb
shl
add
jmp
jb
sahf
jo
mov
mov
jne
add
dec
dec
loopne
outs
sbb
push
sub
mov
movs
mov
push
jae
adc
mov
mov
or
enter
mov
inc
push
push
out
pop
pop
push
add
mov
(bad)
pop
adc
add
out
jb
pop
aas
lds
test
fadd
fisub
ss
imul
xchg
pop
pop
aas
arpl
jg
inc
mov
repz
cmc
inc
xchg
push
mov
add
jge
inc
addr16
pop
neg
cmps
adc
call
pusha
or
outs
push
sahf
xlat
push
cmps
sahf
mov
xchg
lock
push
inc
push
icebp
mov
in
leave
loop
in
fst
mov
scas
push
mov
outs
mov
(bad)
call
xchg
add
gs
aam
xor
mov
ins
inc
mov
mov
xor
add
repz
stc
enter
jbe
nop
test
dec
cli
xchg
sub
sbb
xchg
ficom
mov
pop
call
and
jns
push
popf
push
mov
jb
and
fcmovnbe
xchg
(bad)
jg
xchg
stc
sbb
xchg
jg
imul
movs
push
xor
out
imul
sub
jno
add
sbb
test
and
mov
test
(bad)
push
inc
sahf
push
loopne
in
push
dec
add
test
inc
ins
scas
dec
adc
adc
ret
cmc
ret
stos
mov
xchg
add
mov
js
sti
rol
xchg
xchg
push
jmp
dec
arpl
xor
movs
add
retf
inc
mov
xor
pop
xchg
psubsw
cli
rcr
xor
repz
stos
loope
jae
mov
mov
jg
sbb
in
pop
ror
xor
xor
sbb
lds
push
aad
bound
ror
leave
in
pop
jmp
pop
hlt
fcmovb
add
xor
push
sub
pushf
pop
fld
sbb
test
cwde
adc
adc
repnz
mov
(bad)
ins
movs
and
xchg
into
pop
xor
sti
into
xchg
clc
adc
repnz
sbb
inc
ret
lds
xlat
pop
pusha
ins
test
cwde
arpl
mov
(bad)
pop
repz
cmc
push
cmc
add
inc
pusha
arpl
gs
add
push
dec
out
aad
std
push
scas
mov
pusha
inc
mov
jmp
mov
cmp
aaa
dec
pop
jecxz
out
lds
inc
aam
pop
lds
jl
retf
imul
mov
jmp
jp
sub
lahf
sub
test
jo
ins
cmp
mov
cwde
jle
nop
or
push
pushf
cmc
xchg
xor
repz
call
sbb
mov
bound
mov
pop
push
and
(bad)
cld
sub
xor
call
dec
pop
test
arpl
mov
inc
mov
call
ret
retf
sub
xor
sbb
cmc
mov
test
mov
aam
(bad)
clc
jmp
push
ss
adc
fnstcw
push
mov
fimul
mov
and
mov
jmp
ficomp
clc
adc
push
in
scas
clc
outs
push
nop
pop
je
js
push
(bad)
gs
in
and
call
xor
pop
mov
mov
push
push
inc
inc
adc
inc
jnp
mov
ins
mov
mov
xchg
pop
mov
pop
jg
inc
mov
(bad)
xor
xlat
outs
mov
add
sbb
cmp
push
xchg
add
adc
hlt
repnz
push
add
cmp
jno
(bad)
das
test
jno
enter
ror
jle
cs
xor
push
lock
cdq
mov
mov
mov
pop
or
ret
jne
xor
es
push
call
lea
jae
xchg
ins
loop
mov
imul
xor
lahf
sbb
pop
not
inc
je
pop
test
xor
ret
xchg
xor
bswap
push
pop
retf
fnsave
cli
lock
push
js
jne
mov
loop
add
sub
aam
sub
(bad)
jp
jmp
lock
test
add
imul
cwde
mov
in
into
cmc
(bad)
addr16
sar
cmp
test
push
jno
(bad)
xchg
mov
pop
shl
mov
lea
fdiv
adc
jb
loop
xor
and
sub
int3
mov
inc
aad
dec
jp
xor
xchg
inc
nop
shr
outs
push
popf
add
neg
push
cmc
int
ror
adc
inc
jb
lods
inc
push
aaa
cmps
push
(bad)
push
mov
(bad)
out
or
rcl
mov
mov
mov
lahf
jns
or
sbb
cmc
jecxz
cs
push
inc
push
movs
xchg
dec
(bad)
pusha
push
stos
outs
pop
ror
popa
(bad)
adc
sub
push
pusha
(bad)
gs
push
retf
loop
mov
in
jle
pop
add
cmp
adc
jl
inc
jb
xor
je
out
loop
push
mov
dec
in
out
inc
cmc
add
or
je
mov
imul
and
sub
mov
or
retf
adc
cwde
jae
test
push
fdiv
test
mov
shl
ds
scas
cdq
lahf
out
adc
js
push
out
cld
(bad)
(bad)
sub
cmp
push
call
jle
shl
es
cli
mov
pop
cmc
ficom
lahf
jae
sbb
add
out
pop
shl
sbb
stos
pop
imul
dec
push
sahf
or
fbstp
mov
push
sub
shl
loop
out
inc
ret
imul
inc
jns
jbe
ins
cli
icebp
ret
sub
push
push
leave
pop
stc
movs
stc
(bad)
pop
test
(bad)
push
dec
mov
xchg
loope
dec
in
add
jecxz
inc
cdq
(bad)
call
in
push
movs
call
mov
mov
inc
test
imul
shr
push
fisubr
iret
and
arpl
jae
ja
sbb
xchg
xchg
dec
ds
fs
mov
sub
xor
dec
add
(bad)
xor
pushf
sub
imul
clc
cmps
outs
mov
ja
(bad)
call
mov
add
aam
xchg
sahf
cmp
xchg
xor
ins
xchg
and
stos
out
dec
out
fmul
xchg
lds
push
imul
lods
jno
sub
pop
movs
mov
push
rcr
adc
pop
xor
sbb
lds
jne
test
int3
nop
fs
mov
inc
aas
push
div
stc
xor
xchg
test
and
sbb
cmp
out
mov
mov
or
xor
movs
arpl
int
gs
je
nop
mov
mov
stc
out
push
sahf
fstp
leave
cmp
fistp
mov
or
dec
bound
pop
fisubr
sahf
ret
jmp
mov
jle
int
inc
hlt
je
mov
xchg
adc
je
les
cmp
xor
fadd
push
add
movs
push
push
retf
outs
bound
mov
cmp
ja
xor
mov
adc
xor
mov
data16
ret
mov
add
add
adc
adc
and
dec
fsub
loop
cdq
inc
xor
pop
and
jb
jb
je
add
push
push
cld
mov
and
pop
stc
imul
mov
add
hlt
imul
mov
and
jle
sub
xlat
adc
inc
(bad)
mov
adc
aam
inc
loop
leave
xchg
fstp
mov
sti
push
ja
cdq
mov
arpl
ror
iret
sub
xchg
push
gs
xchg
fdivr
mov
push
inc
push
push
inc
cmp
jne
or
outs
mov
adc
lahf
div
mov
mov
xchg
mov
mov
cmps
and
adc
aam
xchg
iret
xlat
imul
ins
pop
rol
add
(bad)
mov
in
(bad)
and
test
mov
movs
mov
and
cld
pop
jo
push
xchg
rol
cmp
adc
addr16
aam
cmps
xor
aad
xchg
and
mov
pusha
shl
xchg
or
mov
xor
and
xchg
bound
inc
out
data16
push
stc
and
jmp
xor
push
cmps
movs
mov
arpl
cmps
repnz
adc
movs
ret
inc
xchg
adc
push
(bad)
cmp
pushf
mov
dec
push
mov
cmps
inc
pop
(bad)
xor
inc
xchg
lahf
(bad)
add
gs
add
ja
cmp
sbb
jnp
(bad)
ficom
or
sbb
xchg
mov
(bad)
mov
pusha
add
cwde
out
cld
sub
pop
xchg
inc
fs
xchg
lods
in
push
adc
mov
sub
sub
and
lods
call
cwde
sub
les
and
loope
fisttp
int
(bad)
fisub
add
xchg
dec
mov
add
xchg
arpl
imul
ror
add
sbb
imul
lods
add
mov
pop
ret
(bad)
mov
sahf
xor
ret
out
adc
adc
mov
add
sbb
lock
les
sbb
addr16
fistp
and
jb
loop
out
or
xor
and
pop
pop
fstp
xor
cmp
outs
xor
xor
movs
push
aam
loop
mov
jmp
xchg
dec
bound
or
add
xchg
lods
jecxz
imul
cmp
retf
mov
scas
add
and
fstp
out
adc
lea
ins
outs
mov
sub
xchg
inc
call
jne
adc
mov
adc
ja
int3
aam
sub
xor
or
add
fst
fwait
fs
and
adc
sub
(bad)
ins
sub
pop
xor
out
movs
jg
mov
mov
push
mov
xchg
and
sbb
cmp
stc
shl
stos
dec
loopne
enter
(bad)
sbb
and
loope
push
cmps
sti
mov
lea
adc
mov
sbb
jb
inc
mov
inc
rol
jl
and
(bad)
xchg
das
movs
inc
dec
wbinvd
and
clc
dec
sbb
test
cmp
shl
jecxz
enter
xor
jb
add
xchg
jo
inc
sub
aam
test
sub
(bad)
aad
repnz
je
aaa
clc
popa
cmp
push
xor
inc
sbb
ins
mov
sbb
ret
outs
hlt
add
xlat
and
and
rcl
(bad)
pusha
outs
rcl
or
pop
aas
in
rcl
fwait
mov
mov
sar
push
cdq
loop
clc
dec
repz
mov
test
mov
jb
mov
mov
add
mov
in
out
call
pop
mov
cs
scas
mov
jmp
sub
xchg
jge
outs
mov
sub
push
(bad)
ror
push
(bad)
test
jbe
outs
jae
mov
and
dec
sahf
js
pop
ret
das
add
leave
sar
mov
aam
movs
ret
test
inc
sub
xor
je
test
hlt
sub
push
cli
inc
data16
jl
test
inc
mov
arpl
loope
sar
cmp
cmp
call
popf
fldcw
loop
and
xchg
jb
ret
adc
in
shr
xor
and
cmps
dec
xchg
sub
imul
xor
jns
push
hlt
jp
xor
mov
inc
and
push
sbb
sbb
in
xchg
cmps
ss
dec
ss
cs
mov
ins
cmps
inc
inc
xchg
jbe
nop
cmps
bound
ret
xchg
iret
sub
and
adc
sbb
sar
sti
push
adc
mov
or
inc
je
and
xor
fsubr
and
add
push
xchg
dec
repnz
ds
push
(bad)
call
cmc
inc
mov
mov
cmps
mov
pop
dec
add
bound
(bad)
(bad)
sbb
scas
out
pop
call
mov
pop
and
adc
adc
dec
jno
vscalefss
dec
aad
addr16
push
adc
cld
movnti
mov
les
push
xchg
pushf
(bad)
xor
and
or
add
push
fist
sub
(bad)
aad
in
div
mov
push
dec
push
int3
sub
and
xchg
inc
xor
sbb
sbb
sub
dec
fadd
sbb
in
inc
mov
ror
fwait
sbb
inc
and
pop
xchg
jl
cdq
scas
pop
push
jno
gs
mov
repz
mul
pop
loopne
stos
adc
sbb
adc
inc
lea
fld
mov
and
sub
cmp
mov
pop
mov
or
lods
add
dec
xchg
imul
xchg
rol
xor
inc
and
push
or
arpl
je
dec
aaa
inc
int
fs
cmp
mov
ret
sahf
fadd
je
pop
jmp
xchg
in
repnz
fcmovnbe
mov
outs
hlt
sbb
clc
and
or
cwde
jo
mov
test
mov
mov
mov
or
in
push
and
pop
mov
inc
xchg
in
jb
and
out
dec
frstor
std
cmps
ja
cdq
adc
hlt
outs
cmp
dec
inc
jo
sahf
ficomp
mov
and
add
sub
mov
test
in
sub
mov
mov
xor
int
fimul
mov
adc
test
mov
mov
stos
data16
es
inc
shl
fwait
or
or
call
jecxz
ds
pop
push
stc
and
xor
pushf
adc
cmc
test
in
xchg
xor
add
push
jne
add
in
mov
int
and
icebp
bound
pop
cs
cmp
mov
cmc
jg
push
mov
in
mov
mov
les
mov
mov
inc
xchg
dec
ret
xchg
push
add
jg
les
fcmovbe
ret
and
(bad)
adc
adc
jg
shl
add
mov
test
jne
test
shl
push
icebp
test
and
test
int
fs
xor
arpl
xchg
xchg
popa
movs
cmp
push
sbb
arpl
cdq
jmp
in
mov
cmp
gs
xchg
dec
mov
fidiv
xor
repz
and
push
mov
popf
addr16
xor
dec
jns
push
xor
dec
or
loop
push
out
retf
mov
ficom
fdivr
bound
aad
movs
nop
add
sti
pop
fadd
xchg
test
mov
push
xlat
shl
movs
jge
and
xor
xor
inc
add
pop
fs
mov
adc
jns
shl
or
mov
mov
or
jp
aad
xchg
xchg
push
int
test
bound
(bad)
test
mov
or
stc
cs
dec
or
xchg
rcr
pop
mov
sbb
test
xchg
les
call
inc
movs
cli
mov
fninit
call
test
mov
cmp
popf
cmp
pop
cld
popa
js
xchg
add
outs
mov
lock
ret
mov
adc
and
mov
jae
nop
call
leave
in
lock
hlt
sbb
(bad)
cli
lds
mov
mov
xchg
not
in
lods
mov
add
mov
pushf
movs
pop
aas
js
push
pop
xchg
add
and
cmp
movs
loop
loopne
sub
push
sbb
mov
fwait
dec
xchg
pop
ret
add
(bad)
(bad)
in
loope
stos
and
bound
mov
sbb
ins
(bad)
sbb
jl
sbb
mov
push
sbb
mov
(bad)
test
loop
out
shl
hlt
call
sub
repz
sbb
dec
sbb
aad
hlt
out
les
inc
adc
push
xchg
xchg
nop
(bad)
hlt
inc
les
jo
mov
mov
pop
xchg
xchg
xor
je
mov
rol
call
xchg
scas
pop
data16
mov
test
dec
fisub
scas
sbb
retf
pop
push
hlt
out
fcomi
push
pop
or
in
rol
out
push
repz
xchg
xchg
inc
add
mov
push
repz
pop
jo
and
inc
scas
jbe
(bad)
imul
fild
jmp
cmps
and
adc
adc
(bad)
in
pop
mov
mov
mov
pop
movs
or
adc
retf
push
imul
jecxz
push
icebp
in
pop
jns
mov
movs
xchg
imul
ja
xchg
xchg
ja
cmps
mov
jmp
(bad)
jno
test
jmp
add
stos
repz
ret
mov
push
sub
data16
fwait
jnp
test
sbb
mov
mov
jnp
clc
rcl
push
jne
jnp
dec
mov
mov
xchg
jge
dec
xor
adc
aas
lds
rcl
pop
xor
xchg
xlat
dec
jle
sti
inc
shl
in
sbb
xchg
mov
xchg
inc
shr
sub
ins
out
push
add
sar
std
adc
outs
jmp
imul
cwde
cwde
aaa
test
sbb
sti
mov
pop
(bad)
inc
lahf
sub
ins
mov
shr
aaa
or
xchg
push
out
sbb
addr16
pop
test
mov
loopne
inc
mov
add
ins
mov
and
dec
inc
fstp
add
es
or
push
sub
sbb
cmc
sar
inc
loopne
add
inc
adc
cwde
add
ja
ins
or
shl
test
call
dec
mov
jg
aad
xchg
inc
adc
xchg
imul
xor
cmps
sti
ins
jmp
call
sub
dec
int
cmps
push
dec
mov
xchg
test
dec
push
in
jle
nop
fild
adc
sub
data16
aas
inc
cmp
push
dec
aas
dec
xchg
call
adc
inc
scas
or
push
adc
addr16
(bad)
xchg
ins
ffreep
xchg
inc
push
adc
sub
iret
(bad)
jmp
mov
push
or
and
stos
push
jmp
imul
sub
iret
out
test
dec
sub
add
and
mov
in
dec
jmp
dec
cmp
push
push
fild
imul
mov
jmp
push
jmp
pusha
fwait
loopne
popf
or
sub
fwait
in
adc
fcomip
cmps
retf
dec
addr16
imul
popf
jmp
push
das
das
inc
das
inc
sub
dec
jnp
cmps
aas
iret
stos
scas
nop
sub
xor
adc
push
mov
and
or
out
data16
jmp
jmp
jmp
xor
inc
mov
push
iret
mov
sub
add
dec
xor
stos
stos
setnp
(bad)
mov
mov
jae
stos
mov
stos
ds
dec
loop
mov
stos
inc
cmps
stos
sbb
stos
adc
ret
ins
inc
jmp
xor
sub
sti
mov
outs
push
das
mov
xor
jo
pop
lods
sub
dec
iret
pop
dec
pop
cmp
jnp
jecxz
jnp
add
sti
outs
or
mov
out
sub
lea
mov
or
iret
stos
ficom
mov
jmp
scas
out
jmp
push
pop
(bad)
inc
push
push
out
into
mov
jae
loopne
ds
mov
inc
sub
jnp
popa
inc
imul
or
mov
outs
adc
jno
dec
mov
icebp
cs
sub
popf
jne
push
ins
aad
aad
aad
leave
jb
int
push
sbb
push
push
jg
jmp
push
sub
jne
jne
repz
aad
in
lds
cmc
sub
xchg
mov
aaa
pop
clc
pop
clc
pop
js
icebp
pop
cmc
inc
mov
popf
xchg
jne
mov
and
xchg
aad
aad
inc
push
data16
test
lds
mov
xchg
inc
push
jp
mov
pop
icebp
aad
aad
or
fisubr
stos
or
test
jno
in
and
rcl
cmc
nop
jbe
mov
add
add
dec
imul
sub
xchg
push
push
xor
aad
or
aad
aad
shl
shl
jb
jb
jb
std
faddp
xchg
cmc
push
js
cld
mov
dec
fisub
movs
scas
inc
add
lock
xchg
jle
xor
xchg
daa
mov
fidiv
push
mov
cmc
xchg
mov
test
idiv
cmc
stos
cmc
and
popf
(bad)
mov
mov
test
aad
lds
inc
adc
jl
mov
outs
jne
jl
scas
mov
in
mov
and
jne
jle
mov
jo
jle
and
pop
jl
adc
sub
pop
mov
cmc
cmp
adc
sbb
je
inc
aam
and
jmp
cdq
or
or
push
inc
je
add
inc
nop
(bad)
cs
aam
rcr
int3
and
mov
add
mov
add
mov
xchg
jecxz
add
(bad)
jg
loopne
ror
and
pop
pop
jo
int3
dec
cld
fadd
mov
xor
(bad)
xor
mov
mov
push
inc
ret
xchg
inc
or
or
adc
test
cmc
aam
jb
dec
out
nop
push
or
push
jo
inc
in
push
adc
jge
and
jmp
push
inc
jo
adc
mov
or
add
jmp
push
mov
rcl
into
imul
inc
les
or
push
dec
(bad)
ins
retf
lea
loopne
add
ror
mov
sub
add
cmps
int3
pop
imul
push
ins
(bad)
dec
ret
add
sub
into
or
aas
inc
inc
mov
ret
in
mov
into
or
ds
and
jl
loopne
or
mov
mov
add
mov
in
mov
es
aas
ins
adc
push
add
xor
imul
push
mov
pop
pop
and
lods
push
dec
(bad)
loopne
aam
loopne
ror
loopne
lods
jmp
les
lods
push
je
sub
cmp
hlt
or
mov
add
enter
ins
jge
cmp
add
or
retf
inc
or
or
cwde
xor
push
retf
or
pop
mov
fstp
mov
mov
into
mov
or
add
cmc
test
push
jae
mov
and
mov
movs
add
pop
xor
sub
dec
and
push
pop
outs
ficom
shl
cmp
xor
or
cli
jnp
ins
cmp
cwde
call
or
out
push
mov
(bad)
push
sti
and
shl
xchg
add
out
jb
in
jp
sbb
es
ins
or
test
out
sub
scas
mov
out
cmps
jbe
lods
add
(bad)
sub
lea
add
mov
rcr
scas
mov
scas
pop
push
and
xchg
and
lea
push
push
and
or
and
daa
add
add
push
mov
out
repnz
cmp
mov
mov
jmp
mov
fist
sub
das
popa
push
xchg
mov
sub
fild
inc
popf
outs
movs
mov
adc
je
push
lods
ins
mov
sbb
mov
loope
xchg
pop
adc
lods
jbe
jo
inc
loope
rcr
mov
lods
cmp
ret
mov
imul
mov
std
cmp
inc
fld
cmp
int
inc
mov
lea
cmp
or
lods
jo
xchg
stc
outs
sbb
mov
jo
and
pop
mov
xor
adc
daa
sbb
int
mov
mov
sti
sbb
lods
xchg
and
outs
sub
(bad)
nop
xchg
cmp
xor
mov
sbb
push
mov
pop
inc
std
sub
sub
sbb
lods
int
ins
in
addr16
ins
sbb
pop
fidivr
adc
lods
in
lea
push
dec
popf
repnz
lods
into
int
in
test
dec
sbb
sbb
fs
xor
in
loop
int
cmp
loop
jge
sbb
adc
sbb
aad
or
in
(bad)
cmp
es
lea
jnp
vpsraq
loope
sahf
loop
add
xor
aad
popf
cmc
in
(bad)
daa
jne
jno
jne
scas
aaa
jne
and
lea
es
lea
pop
je
or
push
cmp
push
mov
mov
lods
fmul
and
movs
frstor
sub
int
mov
fmul
and
dec
pushf
loope
int
in
sahf
or
pop
cmp
aas
fidiv
xor
xchg
std
(bad)
fmul
sbb
and
(bad)
popf
pinsrw
neg
cli
xor
dec
dec
push
sbb
sahf
out
xchg
je
xchg
add
inc
jb
into
pop
loop
push
icebp
pop
pop
pop
or
idiv
movs
jbe
dec
hlt
ret
je
xchg
into
ins
jbe
test
mov
daa
stc
jl
xchg
in
hlt
xchg
test
loop
inc
in
sbb
push
in
shl
fild
cld
out
push
jne
pop
inc
inc
data16
mul
ret
das
jmp
jne
fist
mov
out
ds
pop
and
imul
xlat
shr
lds
mov
xchg
mov
fadd
stos
gs
in
mov
xor
mov
push
(bad)
pushf
mov
xchg
out
(bad)
jg
add
sbb
pusha
rcl
or
sbb
cmp
test
aam
mov
not
data16
ret
inc
push
dec
out
inc
je
fistp
mov
push
cld
test
xor
jg
sbb
cld
cmps
add
push
data16
cld
idiv
(bad)
fs
xchg
mov
mov
xchg
fs
mov
out
xchg
popf
idiv
xchg
sbb
out
out
xor
push
(bad)
pushf
idiv
inc
movs
out
cs
adc
popf
idiv
fs
push
sbb
sub
bound
std
xchg
sbb
cmp
xchg
pushf
idiv
stc
xor
xchg
loop
loop
push
je
push
inc
push
(bad)
shr
loopne
inc
push
mov
xchg
dec
stc
addr16
pushf
outs
push
and
out
cs
popf
push
je
adc
in
adc
mov
(bad)
xor
data16
mov
cld
mov
cld
mov
test
sbb
imul
out
stc
jmp
pop
cwde
je
xchg
xchg
gs
daa
mov
pop
inc
repz
jmp
pop
jno
(bad)
out
or
mov
hlt
push
or
jecxz
mov
lahf
push
mov
mov
(bad)
xchg
fnstenv
mov
inc
fisub
add
jnp
stos
add
jecxz
sbb
or
(bad)
movs
add
mov
sbb
sbb
mov
pop
adc
jg
(bad)
(bad)
mov
lock
push
jecxz
popa
add
xor
inc
add
cmp
bound
aas
push
cmp
rcr
mov
mov
or
jecxz
or
mov
(bad)
call
inc
or
or
mov
das
xchg
das
aas
cmovae
fs
ja
mov
pop
das
jae
out
or
push
adc
jg
mov
xor
pop
das
jae
pop
add
inc
mov
sti
xchg
inc
leave
stos
pop
mov
pop
xlat
shr
aas
lsl
movzx
(bad)
mov
push
xlat
pop
clc
or
inc
xor
stos
call
xor
xlat
mov
lahf
mov
sub
jmp
dec
fwait
je
sahf
scas
(bad)
pop
xchg
iret
jns
xlat
push
aam
adc
sub
push
cdq
jecxz
or
or
pop
mov
mov
cmp
int
jecxz
sbb
(bad)
sti
fwait
mov
dec
add
jecxz
mov
retf
retf
pop
mov
or
(bad)
pop
mov
das
iret
mov
aaa
or
pop
sar
mov
xor
je
xor
mov
mov
pop
or
or
jg
pop
test
or
sti
ds
xor
add
clc
pop
test
call
sub
rcl
pushf
scas
out
pop
imul
and
in
dec
push
pop
dec
sub
sub
in
xor
mov
fsubr
jb
push
mov
lahf
test
outs
mov
scas
mov
in
cmp
imul
adc
lods
jle
lds
out
test
dec
fbld
sub
aad
scas
push
int
add
call
fstp
pop
lods
gs
adc
lods
add
sub
fisubr
fisubr
into
sub
dec
lods
gs
js
in
sbb
inc
jmp
out
push
ins
sbb
sbb
ins
add
loop
(bad)
out
ins
sbb
sbb
ins
add
xchg
adc
mov
pop
in
into
lods
push
mov
jno
sbb
cmp
cli
adc
pop
jno
cs
cmp
xchg
loopne
in
call
sub
fimul
ins
out
retfw
cs
stc
ficom
or
scas
vcvtpd2ps
repnz
(bad)
cld
xchg
in
idiv
pop
in
data16
mov
out
outs
stc
fs
and
loope
mov
data16
cmp
add
(bad)
push
pop
or
mov
pop
loope
cmp
in
jp
adc
pop
rcl
inc
(bad)
dec
lahf
inc
(bad)
or
rcl
ins
dec
not
sahf
stos
push
mov
gs
test
adc
sbb
jl
and
call
cmp
in
inc
hlt
pop
adc
pop
pop
dec
imul
pop
jb
pop
push
cwde
addr16
jae
sbb
jno
push
xchg
add
or
sub
aaa
cmp
shr
sti
mov
and
add
in
in
and
and
gs
xchg
test
inc
pop
inc
cmp
fild
daa
pop
or
sub
and
es
cmps
out
daa
addr16
pop
jp
retf
stos
mov
mov
dec
out
sub
shl
xor
push
mov
popf
xor
ret
mov
xchg
pop
out
lock
pushf
mov
jae
(bad)
adc
lods
(bad)
arpl
xchg
push
dec
push
xchg
sbb
arpl
jbe
inc
dec
test
stc
movs
or
and
call
js
bound
or
fcmovnu
test
mov
cwde
(bad)
jmp
and
and
pop
jmp
dec
inc
fwait
iret
call
movs
scas
mov
mov
adc
cli
mov
pop
or
or
mov
mov
or
or
or
or
mov
mov
or
or
or
or
mov
mov
or
or
or
or
mov
mov
or
or
or
or
mov
mov
cmp
lods
out
in
repnz
iret
out
fs
js
jns
lea
rcl
push
stos
jecxz
in
shl
out
lods
jg
ins
imul
mov
ror
in
int3
retf
mov
pop
jns
stos
clc
(bad)
add
aaa
int
addr16
bound
aas
outs
add
jmp
jmp
dec
dec
pushw
mov
out
out
stos
outs
dec
outs
ja
mov
call
stos
push
gs
outs
jns
mov
fdivp
mov
push
fcmovu
cli
enter
dec
jle
pop
bound
(bad)
sti
fiadd
push
adc
in
sub
push
pusha
sbb
pusha
push
push
fcmovnu
data16
mov
pop
pop
mov
cli
pop
push
sub
sahf
xchg
out
ret
push
(bad)
rcr
mov
lods
pop
sbb
idiv
xchg
dec
adc
or
adc
jmp
push
sub
dec
sbb
xor
jle
js
jae
cmp
cmp
and
push
dec
pop
cs
lahf
cs
cmp
sbb
imul
ss
and
sbb
sub
cmp
lock
aas
dec
pop
dec
jg
das
inc
jg
xor
das
jmp
cmp
dec
cmp
sbb
cld
aas
push
js
cmp
cmp
push
daa
cmp
jp
das
or
sub
jo
jg
xor
daa
lahf
add
dec
sub
jg
sub
adc
jae
and
cmp
dec
pop
adc
or
dec
jns
jns
jns
inc
adc
sar
inc
sar
stos
aad
push
inc
popf
hlt
xor
xchg
out
aaa
push
ret
les
or
jg
lahf
dec
jg
pop
sub
dec
pop
dec
jg
pop
sub
dec
lahf
dec
jg
pop
sub
dec
cmp
lods
dec
add
es
in
fnstsw
xor
in
pop
xor
js
ret
jo
ins
push
mov
arpl
loop
iret
movs
adc
dec
in
cmp
stos
(bad)
cmps
popf
test
cmps
repz
cmc
mov
lock
jmp
repnz
mul
aam
int3
stc
int3
mov
sti
cmps
cli
mov
out
mov
fistp
lock
out
test
ret
lods
out
movs
into
mov
shr
in
scas
in
test
mov
cmps
mov
int
int
mov
test
lods
dec
repnz
mov
shl
cmp
lods
or
xor
add
ins
(bad)
rcl
jecxz
mov
xor
jmp
xchg
aad
in
lea
out
fs
mov
inc
fcmovnbe
mov
cmps
mov
(bad)
fidiv
sti
jmp
pop
add
movs
push
jne
dec
mov
push
pop
dec
push
adc
ds
sti
jmp
je
pop
aas
mov
popf
jp
popa
cld
outs
xchg
and
or
adc
retf
jg
add
fdivr
xchg
and
outs
test
and
xor
add
push
xchg
sbb
mov
pushf
cmp
and
ins
sbb
jne
sbb
fdivr
push
lea
pop
idiv
inc
nop
sub
pop
lods
and
fs
xor
sbb
lods
ret
mov
mov
icebp
and
push
mov
imul
test
mov
mov
sbb
dec
fwait
and
cs
cmp
xor
add
or
js
push
mov
clc
into
jne
or
addr16
sbb
sub
fwait
pop
mov
popf
cs
sub
cdq
and
adc
or
popf
leave
pop
daa
lods
inc
mov
outs
in
or
daa
scas
cmp
addr16
push
mov
and
repnz
stos
xor
pushf
and
popa
(bad)
adc
fdivr
mov
in
mov
xchg
rcr
rcl
cli
inc
mov
and
add
daa
mov
mov
int3
out
popa
fisub
push
int3
es
outs
mov
loope
adc
mov
aaa
scas
ds
ret
xchg
xor
add
push
into
fwait
je
cmp
addr16
dec
shl
in
inc
stos
and
sar
out
and
xchg
loop
ret
mov
inc
mov
pop
cli
clc
dec
mov
mov
sbb
fnstcw
jns
inc
stos
imul
stos
arpl
cmp
out
sti
push
mov
mov
and
ret
lods
xor
sub
(bad)
enter
lods
add
and
and
aam
out
arpl
inc
mov
mov
repz
jne
mov
fwait
pusha
lods
jl
sub
mov
repnz
jge
and
(bad)
(bad)
(bad)
loopne
or
cs
inc
xchg
ja
ds
es
iret
dec
jecxz
data16
jnp
pop
xchg
or
xor
xchg
es
lods
data16
jae
jo
repz
mov
pop
mov
in
xlat
lahf
and
es
pop
inc
inc
or
jle
dec
cs
add
push
fs
mov
inc
push
pop
pop
jge
xor
pop
std
cwde
out
mov
add
jle
ins
sbb
cwde
mov
pop
add
and
imul
loop
pop
js
jle
pop
push
pop
jns
(bad)
cmps
fucomip
(bad)
dec
pop
sub
and
dec
push
jg
and
and
cmp
adc
mov
cmp
cmp
pop
inc
dec
data16
mov
dec
pop
dec
js
add
arpl
stos
lods
std
mov
adc
sbb
sub
dec
xor
mov
add
cmp
push
jno
jge
mov
inc
jle
add
cmp
jbe
sub
cmp
js
aas
jle
dec
test
pop
inc
pop
js
push
pop
dec
dec
sub
cmp
int3
mov
dec
push
mov
sub
out
or
sbb
repnz
cld
mov
inc
inc
sbb
sbb
jmp
dec
ds
cmp
sbb
jb
test
fisub
pushf
mov
pop
jno
rcr
fwait
out
ficomp
add
cwde
call
mov
xchg
push
or
lods
aad
jecxz
test
mov
inc
sub
sbb
and
mov
jp
daa
leave
out
mov
mov
sbb
inc
sub
cmps
stos
std
in
test
mov
pop
jno
jns
fdiv
mov
and
outs
mov
mov
jecxz
loopne
push
adc
rol
out
repnz
(bad)
or
fidiv
cld
add
js
jg
jecxz
leave
in
enter
fwait
hlt
ins
sbb
test
fsubr
xchg
scas
(bad)
sbb
inc
push
xchg
scas
cmp
call
out
jnp
jl
fsave
sub
scas
call
rcr
mov
cmps
fnstcw
pop
and
cmp
scas
xchg
mov
sub
leave
test
test
movs
fiadd
cmp
scas
jecxz
movs
out
mov
sbb
daa
(bad)
lds
out
cdq
clc
xchg
inc
je
and
sti
pop
cmps
jb
jb
stos
ins
test
mov
pop
lods
adc
jp
movs
imul
xor
leave
mov
jecxz
fimul
aad
lods
int3
adc
push
mov
mov
icebp
xor
and
das
mov
mov
xchg
or
js
les
mov
cld
xor
mov
popf
test
mov
ds
leave
or
and
call
outs
cld
mov
stos
or
enter
xchg
jle
push
shr
xor
mov
scas
dec
rcr
lds
cwde
add
lea
pop
cmc
fs
sbb
hlt
dec
clc
btc
and
stos
adc
stos
adc
aas
lahf
or
js
xchg
xor
retf
sbb
outs
ret
mov
fcom
xchg
sub
popf
imul
inc
test
stos
pop
repz
push
lods
shl
adc
scas
gs
xchg
test
stos
into
dec
mov
dec
mov
scas
leave
sub
pop
scas
push
popf
or
retf
adc
(bad)
or
nop
adc
mov
ja
les
mov
fmul
xchg
aas
ret
jae
mov
cmp
sbb
repz
mov
mov
retf
(bad)
sub
jns
movs
add
jne
das
xchg
jl
dec
xchg
daa
leave
rcl
xchg
sub
movs
cmp
mov
mov
fdiv
jg
add
mov
cli
fdiv
sbb
cmp
dec
hlt
jns
mov
and
or
jne
sbb
dec
ret
lea
mov
int3
sub
shld
adc
dec
ret
or
jns
mov
sub
loope
hlt
or
cwde
test
push
stos
jo
enter
mov
xchg
and
and
sbb
pop
xchg
or
mov
mov
push
jmp
or
dec
rcr
xor
cmp
sar
imul
movs
push
mov
adc
or
xor
mov
xchg
pop
mov
fdiv
mov
or
out
sub
iret
ror
inc
das
sbb
mov
cmp
popf
fs
sub
js
mov
mov
imul
and
psubw
enter
inc
pop
pop
mov
cmp
les
push
push
inc
xchg
xchg
fmul
mov
pop
push
stos
popf
fsub
jecxz
fild
in
inc
arpl
fstp
inc
pusha
arpl
into
sbb
mov
mov
call
das
or
jp
inc
push
stos
int
dec
scas
loop
mov
or
mov
xlat
ret
push
push
ud2
sbb
ins
mov
clc
mov
sub
push
bound
mov
ret
call
jbe
imul
loopne
cli
mov
mov
sbb
stos
out
ficomp
popa
sbb
push
push
in
ret
mov
dec
sbb
pop
js
inc
push
pop
sub
ror
mov
jle
pop
jae
inc
xor
push
fisttp
das
data16
xor
fdiv
sub
das
xor
sub
mov
mov
xchg
sar
and
push
enter
(bad)
mov
jl
addr16
push
pop
cmp
mov
mov
xor
or
pop
jb
movs
stos
leave
lods
clc
mov
sub
jns
pop
cmp
mov
dec
aaa
pop
pop
sub
test
mov
jl
dec
pusha
sub
mov
pushf
mov
ds
dec
ss
mov
push
xor
fdiv
push
and
jg
or
mov
mov
bound
dec
cmp
test
scas
loopne
ret
fs
adc
js
sub
mov
fwait
cmps
mov
sub
xor
rol
jmp
imul
dec
sbb
int3
mov
xchg
movs
mov
and
pop
inc
dec
cld
xchg
icebp
(bad)
mov
cmp
ds
mov
fs
dec
pop
and
xor
stc
test
mov
dec
daa
jae
sub
fs
mov
fild
sub
cmp
pop
in
mov
lods
addr16
sub
and
je
push
dec
stc
ins
mov
push
clc
push
mov
int
out
jnp
dec
std
cmp
pop
in
out
lds
pop
movs
push
call
int3
dec
ficomp
iret
cmp
xor
es
push
out
test
mov
(bad)
outs
(bad)
inc
outs
out
rcl
fcos
ins
mul
dec
fimul
repz
sub
ds
jle
jns
gs
fs
dec
mov
mov
ds
lock
(bad)
xor
int
mov
mov
leave
jle
dec
std
ins
loop
jb
inc
xlat
or
in
or
jecxz
jmp
pop
dec
mov
in
ret
rcr
and
pop
ret
inc
test
stc
push
mov
stos
inc
stos
imul
dec
repnz
fnstcw
inc
and
and
jbe
ds
aam
movs
arpl
(bad)
ds
push
fstp
enter
leave
pop
scas
push
pop
out
jb
fistp
jg
jp
aaa
pop
fild
int3
ja
dec
fsubr
popa
scas
es
push
stos
inc
dec
test
mov
mov
jmp
cli
pop
ror
pop
mov
and
mov
retf
pusha
stos
or
lahf
pop
ficomp
inc
fild
shl
les
repz
icebp
jo
pop
repz
lahf
(bad)
sbb
sub
dec
retf
bnd
jge
inc
repz
inc
ret
and
inc
mov
cmp
pop
(bad)
pop
imul
jmp
fdiv
addr16
inc
int
mov
mov
jmp
ret
pop
mov
lahf
cmp
out
shl
bound
out
mov
mov
clc
outs
(bad)
push
int3
add
xchg
ins
out
stos
jnp
aas
mov
add
je
imul
ds
inc
xlat
repnz
mov
repnz
(bad)
mov
cmp
shl
lock
jle
inc
std
test
icebp
and
aas
lea
stos
dec
jecxz
(bad)
inc
imul
mov
push
rcr
fwait
dec
movs
fist
and
dec
retf
mov
cmp
inc
in
inc
lock
adc
mov
imul
retf
ss
in
xchg
jl
test
mov
sbb
sbb
movs
xor
fs
fisttp
(bad)
gs
in
loopne
rol
inc
xchg
jne
dec
fst
add
iret
jnp
cmp
in
addr16
popa
mov
cmps
mov
sahf
call
inc
sbb
dec
adc
in
or
ins
add
sbb
test
mov
int
push
imul
sti
test
xor
push
cmp
in
fmul
test
leave
rcr
adc
mov
xchg
fbstp
jno
sub
mov
hlt
cli
inc
das
aaa
sub
adc
out
cdq
mov
mov
sub
xor
cmp
repnz
int
push
jne
xor
xor
mov
mov
cmp
iret
or
pop
aas
cmp
inc
xor
lock
call
cs
sbb
mov
mov
cmp
push
sub
aam
sub
adc
sbb
out
mov
mov
add
jnp
lea
neg
cmp
xor
or
aam
mov
mov
std
sub
pusha
or
fistp
and
mov
mov
pop
push
or
pop
ds
ins
ficomp
inc
push
push
cmp
es
jmp
enter
or
fsubrp
sub
cwde
das
or
xor
jge
(bad)
cmp
mov
push
or
inc
dec
jge
cwde
(bad)
fadd
mov
arpl
sub
dec
dec
sar
fmul
sbb
ins
dec
aaa
pop
sbb
mov
dec
js
gs
pop
jge
push
jge
(bad)
scas
in
aad
push
jge
jl
pop
push
pop
cs
fwait
mov
lods
call
sbb
mov
int3
cmp
pop
sti
mov
outs
dec
das
mov
ins
push
jmp
fisub
ja
outs
int3
jo
aas
jb
popf
ret
mov
jbe
ja
dec
inc
sub
dec
adc
pop
scas
cld
jmp
sahf
aas
out
pop
cmp
pushf
scas
inc
pop
sub
cmp
mov
mov
sub
inc
jl
mov
pop
lds
adc
sbb
dec
sub
call
mov
push
out
jmp
ficomp
leave
sub
push
push
pop
mov
pop
sub
pop
or
mov
cwde
jg
nop
adc
push
jge
js
dec
retf
stos
mov
sub
jp
sbb
das
dec
jno
retf
js
nop
adc
jp
psubw
aas
pop
into
cmps
mov
dec
sbb
add
jge
stos
mov
pop
pop
pop
mov
sub
int3
mov
jle
or
loop
and
cdq
int
out
popf
stc
or
inc
test
pop
outs
leave
std
cmp
dec
fisub
outs
pop
sub
ss
jg
dec
fist
add
jl
or
fdivr
mov
jne
pop
ret
or
cmc
mov
lahf
sbb
ins
dec
pop
pop
sub
sbb
(bad)
push
outs
mov
mov
int3
push
mov
push
je
cmp
mov
jecxz
into
sbb
inc
mov
dec
mov
cdq
es
mov
clc
sub
fdivr
out
leave
sbb
pop
or
pop
mov
mov
test
test
aad
fldenv
(bad)
mov
(bad)
int3
sbb
pop
ficomp
sub
sbb
les
push
in
cmp
sub
dec
ins
fld
push
cmp
jnp
dec
int3
adc
sbb
lea
fwait
iret
and
leave
inc
aam
push
sub
mov
cs
aas
popf
cmp
fidivr
jle
fldcw
lds
int3
or
inc
or
and
iret
mov
leave
je
mov
sub
mov
fld
(bad)
retf
or
sub
lahf
in
mov
push
and
out
push
dec
dec
fsubrp
cmp
jg
pop
fistp
imul
ret
push
les
add
ds
cmps
retf
xor
inc
sub
int
cli
in
loop
ins
cmp
xchg
mov
int3
adc
sbb
cmp
xchg
and
mov
push
fwait
mov
push
xchg
sub
(bad)
retf
adc
js
mov
loopne
xor
loopne
repz
movs
je
out
test
mov
push
add
test
aad
fld
aaa
aaa
xchg
adc
lds
je
repnz
sti
jo
es
popa
inc
push
cmp
mov
ja
pop
les
fsubrp
ins
add
out
aas
push
mov
jne
xor
push
clc
bound
push
jmp
mov
lods
jbe
sbb
pop
pop
or
in
mov
adc
shr
ret
jecxz
xor
ins
add
sbb
add
xchg
mov
scas
dec
repnz
sar
add
add
retf
fisub
jl
mov
push
mov
hlt
sbb
mov
sub
sub
les
sbb
xor
(bad)
xor
enter
frstor
retf
push
pop
aas
retf
adc
cmp
(bad)
rcr
lock
pop
std
mov
push
cmps
addr16
out
ficom
clc
imul
cmps
lea
mov
mov
xchg
(bad)
ja
daa
clc
(bad)
fldenv
or
enter
mov
arpl
repz
or
out
pop
leave
add
sbb
fsub
aaa
dec
pop
pop
xor
mov
sbb
out
add
adc
adc
(bad)
mov
push
adc
in
sub
mov
inc
popa
lds
pop
leave
add
and
push
loopne
mov
leave
inc
mov
retf
int
mov
cmp
cmp
cmp
mov
pop
leave
inc
jl
jge
fdivr
outs
jl
or
imul
or
cmovge
or
sub
or
or
inc
cs
int3
popf
enter
push
jno
in
push
mov
jge
lahf
mov
dec
or
pop
sub
push
mov
pop
jge
dec
and
pushf
cdq
out
pushf
test
popa
dec
adc
jge
sub
iret
ins
sub
sbb
push
or
push
dec
adc
jmp
cs
or
dec
sub
lock
mov
pop
pop
pop
clc
jg
or
sub
jge
push
stos
mov
cmp
jl
cli
pop
dec
jns
cdq
or
pushf
mov
jl
dec
and
push
js
mov
mov
jle
push
or
mov
call
or
pop
or
test
stos
shl
pop
lods
push
leave
aas
sbb
pop
je
mov
stos
pop
imul
cld
cs
add
sbb
cld
cmp
fidivr
jg
sub
scas
sbb
dec
fimul
push
pop
mov
imul
push
je
sbb
adc
sti
imul
pop
jge
mov
pop
add
sti
sahf
retf
add
lahf
popf
xchg
retf
stos
(bad)
mov
sbb
push
call
mov
dec
dec
mov
and
iret
mov
dec
test
mov
pop
movs
sub
ret
sbb
cmp
retf
xor
lock
cmp
cmp
mov
mov
sub
mov
sbb
push
jnp
in
ror
popf
xchg
sahf
into
or
lea
sbb
fcomp
sbb
imul
jge
sahf
in
pop
cmp
fs
or
adc
fdivr
fwait
lea
adc
jnp
stos
je
mov
pop
mov
fsubr
addr16
fwait
test
leave
pop
xchg
dec
dec
loopne
mov
stos
mov
or
mov
sub
mov
call
jmp
mov
cdq
cmc
shl
(bad)
test
lods
in
pushf
sub
mov
adc
enter
xchg
movs
xchg
ffreep
loopne
mov
add
or
sub
out
pop
ficom
fisttp
imul
pop
stos
sbb
stos
in
fbld
cs
pop
loopne
loop
ds
jp
jno
into
in
pop
push
and
push
jmp
int3
pop
cmp
jecxz
sub
lea
lahf
xor
mov
in
gs
popf
sbb
sbb
jno
je
mov
loope
xor
dec
int3
adc
sub
xchg
jp
in
or
hlt
jb
outs
cmp
stc
outs
aas
lea
jnp
bnd
test
retf
sub
sbb
or
or
sbb
mov
pop
das
cmps
push
dec
es
dec
lods
mov
test
jecxz
int
add
jne
test
ja
push
cli
xor
mov
sub
test
push
lods
xor
lea
or
sbb
popa
xor
loopne
lahf
mov
cmp
(bad)
ror
(bad)
retf
fisttp
imul
dec
dec
int
jns
hlt
mov
loop
push
xchg
dec
out
out
mov
scas
ins
sub
mov
cdq
mov
out
fst
cmp
test
and
bound
sti
push
data16
mov
add
popa
add
scas
fwait
push
mov
mov
(bad)
fwait
icebp
cmp
jl
jmp
pop
repz
rcr
iret
or
lds
psubusw
mov
test
mov
mov
pop
mov
and
data16
out
adc
cmc
das
inc
ds
xchg
mov
pop
mov
sbb
pop
cmc
or
nop
dec
sub
out
push
aas
xchg
in
pusha
in
cmps
pop
sub
cs
loop
repnz
dec
jecxz
cmp
lods
xor
xchg
sbb
cmp
fild
mov
arpl
sahf
cmp
movs
iret
shr
pop
mov
out
mov
xor
push
xchg
ja
js
lds
in
ret
jmp
scas
push
js
stos
std
mov
(bad)
retf
cmp
rcr
repz
in
test
sbb
pop
pop
out
sbb
pusha
sbb
sti
push
mov
stos
push
jmp
sahf
int3
and
push
mov
sub
scas
pop
retf
lods
sbb
dec
iret
mov
ret
mov
sbb
mov
ret
mov
adc
stos
stos
mov
mov
js
iret
cwde
pop
(bad)
pop
stos
cmp
pop
lods
mov
mov
jb
ja
fcomp
dec
mov
enter
call
fimul
pop
sub
test
cmp
add
out
mov
jns
int3
sar
fiadd
(bad)
call
lock
stos
imul
mov
pop
aad
mov
mov
in
sbb
push
xchg
std
xlat
ret
xchg
fs
pop
cmp
xchg
fnstcw
dec
pop
push
mov
sub
in
cld
fld1
or
test
je
xor
in
sub
xchg
mov
cmc
jbe
test
push
mov
cdq
xchg
out
dec
leave
sbb
sub
(bad)
out
out
cli
ds
(bad)
call
mov
jmp
dec
lea
sbb
lods
xor
dec
nop
mov
jnp
xchg
leave
sar
add
mov
jns
int3
lahf
int3
clc
int3
jae
aaa
jp
mov
sti
lea
ins
push
cmp
sub
dec
sub
dec
sub
cmc
inc
lods
push
sbb
xchg
push
dec
sub
dec
outs
jg
jns
lods
ror
dec
push
mov
jge
mov
int3
pop
repnz
out
adc
outs
push
pop
ds
(bad)
shr
dec
outs
aad
in
lea
dec
sbb
mov
ja
sub
daa
push
pusha
mov
pop
call
pop
jb
adc
cli
cs
dec
sbb
inc
sbb
(bad)
or
movs
sbb
inc
data16
push
sbb
jp
aas
test
mov
pop
cs
pop
sahf
lahf
or
or
cmp
xor
popa
cmp
jmp
lods
sub
sub
dec
(bad)
jnp
sar
rcr
aas
imul
int
ins
push
cmp
pop
sub
pop
pusha
add
dec
iret
pop
sub
sahf
cmp
std
test
dec
or
adc
aaa
or
js
inc
es
or
mov
jle
pop
dec
sub
pop
inc
sub
xor
jne
dec
fadd
inc
ret
dec
dec
ret
stos
call
push
arpl
mov
jge
retf
cdq
jns
pushf
pop
jns
out
fdiv
fs
dec
or
std
pop
stc
pop
lds
inc
xor
jge
test
ins
cs
dec
sub
push
xchg
outs
retf
dec
dec
scas
imul
jg
xor
add
pop
ins
xor
or
mov
mov
sbb
pop
mov
mov
fld
std
outs
mov
(bad)
xchg
aaa
int3
add
scas
or
cdq
or
(bad)
adc
ins
mov
call
das
mov
lock
lods
xchg
ss
jp
data16
sub
ret
fdivr
into
and
(bad)
(bad)
jecxz
nop
jae
mov
pusha
jne
mov
retf
es
pop
mov
aas
or
dec
lds
retf
(bad)
cld
inc
ins
pushf
int
jg
into
lods
cmp
or
cwde
das
(bad)
mov
daa
call
push
repz
sar
sbb
adc
mov
adc
and
sub
mov
pop
mov
jg
sub
xor
push
and
out
mov
sub
fistp
daa
dec
mov
stos
lahf
rcr
nop
pop
push
dec
pop
push
ins
es
sar
xor
xor
add
repnz
out
fwait
mov
popf
mov
mov
cdq
add
sar
mov
jecxz
xchg
or
daa
inc
cmp
cmp
ja
sub
xchg
pop
ins
sahf
ret
dec
std
(bad)
bswap
movs
or
mul
ds
aam
loope
xlat
inc
es
ds
sahf
xchg
in
aas
add
adc
(bad)
fdivr
mov
lock
and
out
fild
je
dec
ds
in
xchg
pop
pop
(bad)
jo
pop
cdq
add
je
push
retf
push
mov
cmp
and
fild
loop
arpl
mov
fild
int3
add
or
test
and
push
out
add
inc
shr
dec
mov
adc
cmp
(bad)
into
add
lods
pop
dec
mov
movs
dec
pop
stos
mov
push
push
sti
adc
scas
push
xchg
and
(bad)
jle
inc
add
lods
cmp
aaa
cmp
mov
out
fs
add
out
and
push
xchg
xchg
push
xchg
aas
test
jle
xlat
push
pop
jmp
cdq
mov
mov
out
ret
out
out
pushf
test
push
ss
jns
ds
xchg
lds
sub
sbb
ds
out
or
movs
inc
fmul
dec
data16
add
dec
cmp
imul
mov
scas
fwait
adc
in
adc
int
cmp
(bad)
sub
and
fsubr
das
inc
rdpmc
lods
imul
jle
rol
dec
and
sahf
jg
pop
int3
out
out
jge
sbb
dec
cmp
cmp
jnp
xlat
cmp
and
cdq
movs
outs
outs
mov
jp
fmul
or
out
stc
lea
fimul
or
das
dec
cmp
jnp
scas
mov
dec
mov
sub
mov
fdivr
or
pop
cmp
pop
inc
stos
ins
and
aad
(bad)
(bad)
mov
inc
dec
test
js
add
dec
cmp
push
mov
dec
call
adc
into
sbb
cs
lahf
mov
pushw
stos
test
lea
jle
pop
cs
add
mov
jmp
pop
push
mov
push
inc
jnp
mov
pop
(bad)
cmp
inc
imul
cmp
dec
mov
dec
jo
in
mov
ror
dec
call
mov
cmp
stos
in
lods
clc
enter
lock
mov
lahf
or
dec
out
jnp
cmp
push
pop
inc
mov
cmp
(bad)
sti
xchg
push
xchg
sahf
jp
ins
ins
jnp
(bad)
jmp
cmp
(bad)
mov
test
pop
cmp
out
xchg
data16
das
test
popf
call
mov
adc
sbb
dec
arpl
pop
pop
popf
pop
xor
mov
sub
(bad)
ret
fistp
mov
cld
std
pushf
loopne
call
enter
int
lods
stc
int3
stos
out
icebp
pop
and
xor
xchg
in
shr
outs
(bad)
fadd
fdivp
(bad)
sub
nop
jmp
repnz
hlt
test
inc
or
cld
mov
xchg
in
mov
or
mov
test
rcr
iret
mov
sbb
fiadd
out
mov
outs
mov
mov
repnz
xchg
adc
push
les
mov
retf
inc
repnz
shl
jmp
dec
jb
fsubr
fadd
dec
ins
push
repnz
scas
hlt
leave
pushf
jmp
stos
fdivr
clc
stos
popf
enter
imul
lea
add
out
mov
pop
loop
call
cmp
cld
mov
pop
lahf
mov
(bad)
cmp
sub
in
data16
ins
dec
inc
jmp
lea
xchg
sub
cmp
pop
or
(bad)
mov
or
in
jb
pop
in
aaa
push
jge
mov
add
and
(bad)
jb
add
je
test
not
mov
pushf
pop
jg
mov
mov
cmp
sub
sub
cs
xor
pop
cs
sub
stos
and
cld
sub
or
push
mov
or
jne
dec
test
adc
int3
lods
sahf
fbstp
jne
or
inc
sbb
call
(bad)
ficom
in
inc
mov
pop
mov
cld
lds
dec
xchg
out
scas
pop
ret
mov
push
xlat
test
sub
in
in
dec
fisttp
lds
push
mov
add
int
mov
lea
pop
dec
mov
imul
push
inc
(bad)
arpl
mov
ds
cli
test
lds
outs
xor
mov
cwde
push
or
mov
mov
jl
or
imul
inc
jecxz
lahf
test
mov
cmc
mov
iret
int
push
add
pop
fadd
cwde
dec
add
sub
into
lahf
or
cmp
in
aas
dec
dec
mov
sbb
dec
ins
gs
sbb
xchg
mov
shl
cs
mov
das
aaa
aas
add
pop
(bad)
xlat
push
mov
or
(bad)
jmp
xchg
daa
cmp
mov
test
fsubr
pop
dec
pop
sub
data16
cmp
mov
lahf
leave
dec
cmp
pxor
outs
and
ss
sar
fisubr
dec
cmps
fwait
adc
or
jle
sub
xor
cmp
mov
hlt
xor
mov
lahf
gs
sub
pop
(bad)
cmp
and
mov
mov
shr
push
add
push
mov
inc
pop
outs
jp
add
mov
cld
and
das
not
std
pop
dec
adc
cli
shr
mov
adc
stos
sbb
mov
cmp
inc
in
xor
cdq
hlt
or
clc
xchg
jp
add
sub
lock
adc
out
mov
push
mov
(bad)
jp
and
outs
cmp
pushf
into
jge
iret
mov
jmp
test
dec
xor
fstp
fs
lock
cld
push
test
movs
aam
cvtps2pi
mov
sub
clc
bound
add
pop
mov
cmp
push
cmp
push
call
cmps
movs
jmp
rcr
jnp
cmp
add
mov
pop
adc
jno
mov
mov
add
pop
stos
mov
mov
arpl
lock
dec
jno
push
sbb
jmp
mov
outs
aam
xor
(bad)
xchg
cmp
and
imul
dec
ss
loope
mov
sbb
pop
movs
xchg
call
xchg
leave
data16
cli
dec
push
xchg
jns
inc
mov
int3
sub
loopne
bts
jb
xor
les
ja
cli
cdq
and
jno
shl
pushf
je
pcmpgtb
stc
das
and
xchg
ret
popf
imul
xchg
pusha
cdq
shr
sbb
std
pushf
sbb
mov
out
push
repz
push
cmp
dec
xor
daa
scas
or
sbb
push
ret
out
lahf
stos
pop
xor
mov
fidiv
pusha
cmps
mov
fild
adc
inc
das
in
or
sub
sub
sub
dec
mov
test
retf
xchg
or
sti
sbb
popf
fstp
pop
lods
xlat
lods
cmp
jge
out
int
jmp
std
cdq
std
fcomp
inc
pop
ins
jmp
cs
std
xchg
stc
push
sbb
sbb
cmp
inc
test
mov
adc
or
(bad)
cmp
mov
and
iret
xchg
mov
outs
adc
call
pop
int
cdq
es
clc
outs
outs
dec
cwde
(bad)
cmp
test
jae
lahf
stos
jmp
dec
ret
sar
cmp
dec
scas
mov
sbb
push
mov
aam
jecxz
fdivp
push
in
fwait
cmps
aas
mov
mov
fwait
sub
adc
adc
cmp
loope
mov
popa
aaa
shl
pusha
(bad)
cmp
fist
mov
jno
dec
add
aam
(bad)
mov
pop
dec
scas
mov
loop
out
ffree
push
jnp
cmp
inc
pop
jbe
adc
adc
lock
jle
inc
push
cmp
jno
jecxz
sub
sbb
bound
push
mov
xor
jb
daa
mov
or
push
aam
fldcw
adc
sahf
das
xor
stos
sbb
sti
dec
sub
sbb
pop
ins
psrld
or
test
lock
push
sub
adc
sbb
test
lock
mov
cmps
bound
cmp
popf
fwait
cmp
loop
push
jmp
mov
jmp
jp
dec
jge
xchg
pop
cs
jl
and
(bad)
lea
cmp
jne
fsincos
pop
popf
(bad)
mov
cmp
mov
jnp
jecxz
and
jns
cmp
imul
pop
mov
sbb
cmp
xor
dec
cmp
mov
xchg
xlat
mov
(bad)
jne
inc
or
iret
push
cmp
push
pop
xchg
shr
xchg
add
popa
add
shl
jne
jmp
sbb
add
push
sti
arpl
in
int3
movs
and
retf
push
sar
xchg
add
or
pop
sbb
es
jp
in
mov
cmps
or
jmp
mov
dec
cmp
in
mov
adc
ret
outs
adc
add
aas
sub
cmp
cwde
sbb
int3
dec
jns
or
or
cdq
jmp
mov
pop
int3
sbb
mov
sbb
pop
in
pop
clc
imul
sub
or
addr16
ins
sti
xor
and
xchg
jg
sbb
sahf
sub
aas
pop
fmul
sbb
sbb
sbb
sub
sbb
fadd
mov
stos
and
dec
add
scas
sub
pusha
pop
lods
and
pushf
inc
mov
arpl
xchg
or
lahf
or
(bad)
test
inc
xchg
movsx
sbb
daa
sbb
or
sbb
and
jo
push
imul
arpl
rcl
ds
xchg
out
arpl
es
nop
test
daa
pushf
dec
arpl
add
jecxz
pop
dec
out
daa
jle
lea
retf
out
pusha
push
mov
rcl
adc
xchg
push
test
mov
pop
cmp
sbb
jge
mov
jle
xor
cmp
push
pop
mov
cmps
or
cmps
push
sbb
sub
sbb
mov
dec
xchg
mov
cmps
retfw
push
in
dec
xchg
popf
inc
cli
inc
ja
ret
aad
jae
push
pop
mov
mov
addr16
push
push
cmps
xchg
stos
ds
and
pop
xor
pop
data16
fadd
clc
push
dec
push
mov
ret
jo
aas
cmp
popa
dec
das
or
mov
int3
pop
cmc
movs
(bad)
stos
push
sbb
aas
leave
dec
mov
dec
test
sbb
add
out
add
mov
mov
xchg
(bad)
pop
popa
xor
sub
jb
push
ins
repnz
jp
jb
rcl
aas
mov
pop
scas
fwait
push
mov
rol
cmp
fwait
ins
push
das
stos
xchg
cdq
cdq
mov
lock
or
fld
mov
sub
sbb
mov
stc
call
(bad)
retf
(bad)
cdq
stc
stos
(bad)
aas
xor
out
xchg
shr
add
cs
pop
js
mov
pop
mov
mov
scas
das
in
mov
imul
scas
cwde
or
mov
or
pop
jp
jle
(bad)
in
bound
ds
lock
sub
mov
xchg
stos
setle
lahf
mov
mov
dec
jmp
(bad)
cli
fistp
(bad)
mov
rcr
pop
test
push
sahf
dec
stc
jp
movs
mov
ds
push
inc
popf
pop
nop
mov
imul
or
mov
vcvttps2dq
add
out
pop
cmp
cmp
dec
push
mov
aas
xchg
pop
mov
data16
mov
lods
mov
adc
mov
test
pop
pop
dec
xchg
jmp
push
or
dec
cmp
xchg
xor
mov
jmp
sbb
or
repnz
mov
push
sub
ds
add
out
out
inc
sti
mov
pop
cwde
xchg
sbb
test
fldz
xor
stc
mov
test
(bad)
xchg
call
shr
jmp
jne
jge
pop
pushf
push
dec
shl
pop
fistp
fldcw
outs
mov
mov
pop
add
lods
hlt
jp
call
xor
das
add
mov
push
or
cmp
test
mov
pop
ins
sbb
in
sbb
les
int3
addr16
jmp
push
mov
sub
stos
or
data16
inc
jmp
mov
outs
cmps
pushf
mov
cmp
cs
add
push
pop
in
in
popa
nop
aad
adc
mov
cmp
sub
mov
out
cmp
sbb
mov
cwde
outs
jb
lahf
xor
fnsave
xor
push
cs
xchg
or
mov
mov
xor
dec
int
ins
or
scas
ins
cdq
push
sub
cmp
add
add
inc
(bad)
or
inc
sahf
pop
push
test
jge
fist
out
mov
jmp
mov
mov
mov
adc
jo
shl
cwde
mov
cmp
xchg
scas
mul
jns
pop
(bad)
mov
sbb
ins
cmc
push
test
dec
xchg
stos
mov
test
jae
add
sbb
dec
arpl
stos
mov
sub
or
dec
movs
xchg
cld
mov
cmp
sbb
dec
iret
sbb
jnp
arpl
mov
stos
sti
adc
jno
repz
ja
pop
and
xlat
and
into
lods
dec
lea
test
call
adc
mov
movs
dec
hlt
adc
push
(bad)
in
jb
adc
or
gs
repnz
jecxz
or
fdivr
fwait
mov
add
call
pushf
or
adc
sahf
sub
sar
jbe
das
ja
pop
shr
cmp
or
(bad)
fidiv
lods
xor
mov
in
mov
enter
sbb
das
cdq
sub
cmp
outs
rcl
jb
or
repz
add
and
lea
mov
lods
push
mov
cmp
lods
cmps
in
push
cmp
xchg
pop
pop
dec
test
sbb
cwde
cdq
adc
cmp
mov
call
into
cmp
gs
mov
pop
ja
jmp
mov
sbb
adc
xchg
cmp
sbb
inc
xor
cmp
mov
inc
aam
pop
pop
out
push
lods
push
pop
sbb
and
xchg
mov
clc
pop
call
and
push
or
jmp
sbb
inc
push
addr16
cmp
enter
cwde
imul
push
jg
inc
mov
xchg
ja
js
fdivr
sub
stc
arpl
pop
cmp
stc
xchg
out
stc
sbb
popf
push
mov
cmc
sbb
stos
movs
out
rol
cmp
dec
mov
cmp
xchg
into
je
push
fst
aam
(bad)
sub
gs
sub
outs
sahf
jmp
mov
push
imul
or
sub
push
(bad)
leave
pop
and
pop
stc
int3
cdq
dec
push
mov
cmp
(bad)
dec
pop
dec
ss
sub
jmp
dec
xchg
sub
xchg
xchg
pop
in
call
aam
int3
dec
push
push
lods
jg
sub
and
in
pop
dec
add
inc
push
int
cmp
or
jne
or
clc
push
pop
dec
jns
sub
cwde
mov
popf
or
push
xor
call
mov
jle
(bad)
sub
sub
dec
int
add
or
xchg
cs
ud0
adc
sub
xor
jne
mov
push
xor
cmp
fdivr
fldcw
jl
fild
pop
imul
iret
std
lds
sbb
dec
test
lea
clc
cmp
cwde
(bad)
mov
ret
aad
stc
(bad)
push
outs
xchg
or
xchg
cs
sbb
sbb
jmp
dec
mov
jmp
push
shr
popa
add
fsubr
sbb
inc
jmp
adc
(bad)
int
shl
cli
mov
retf
or
(bad)
stc
div
mov
mov
xchg
xor
sbb
jmp
push
loop
push
imul
or
mov
test
pop
push
enter
or
jbe
fcompp
in
dec
mov
pop
inc
mov
mov
in
push
or
in
int3
out
call
sub
shr
and
mov
loope
jb
lahf
repz
in
enter
cmp
mov
les
stos
sbb
sbb
jae
stos
fdivrp
adc
imul
in
push
lea
(bad)
fsubr
jne
jne
(bad)
ss
and
push
sub
sub
or
(bad)
pop
loopne
inc
sbb
fwait
in
dec
sub
pushf
ds
repz
cmp
sbb
loopne
pop
shr
mov
mov
mov
sub
pushf
push
cld
pop
cmp
out
shr
ficomp
cmp
pop
(bad)
out
dec
cld
mov
rcr
movs
fnstcw
pop
mov
push
jp
call
xlat
call
cmp
cmps
shl
pop
fsubrp
js
mov
cmp
leave
arpl
test
cmp
dec
icebp
mov
push
sub
push
call
(bad)
and
test
pop
fwait
sub
gs
call
jl
pop
mov
bnd
outs
out
and
stos
ret
out
push
sbb
in
pop
stos
push
sbb
cli
cmp
push
inc
rcr
popf
push
xor
add
retf
test
mov
pop
cwde
jl
fisttp
pushf
fisub
retf
sar
call
cmc
mov
inc
or
adc
sahf
push
xor
fdiv
outs
push
shr
pop
adc
mov
cmp
jecxz
push
shl
and
iret
sbb
push
mov
pop
mov
dec
sbb
test
mov
dec
xchg
pop
jp
push
cmp
into
aas
loopne
aaa
sbb
fadd
(bad)
xor
mov
and
push
push
loopne
inc
shl
jo
(bad)
lahf
hlt
dec
cs
jp
inc
xchg
das
pop
lahf
dec
xor
mov
js
cs
loop
cmp
daa
sahf
sti
imul
xor
popa
dec
(bad)
fiadd
push
adc
mov
cmp
xchg
dec
icebp
push
loopne
push
jl
into
lock
into
adc
(bad)
and
ds
shl
cmp
add
lahf
sahf
adc
shr
int3
pop
pusha
xchg
pop
(bad)
shr
js
mov
stos
test
mov
jle
sbb
pop
xor
das
jle
push
xor
lds
pop
xor
dec
mov
add
inc
mov
pop
xchg
(bad)
cmp
xchg
ficom
add
cmc
sbb
jle
inc
fst
cmp
mov
mov
and
pop
arpl
iret
pop
in
idiv
sbb
test
mov
arpl
out
mov
or
inc
movs
int3
dec
and
add
sub
icebp
ds
cmp
jecxz
mov
loope
loopne
adc
loopne
out
sti
sahf
push
jg
outs
cmp
sub
lds
pop
enter
retf
pusha
out
adc
out
push
ret
or
xchg
bound
test
imul
push
lods
or
pop
es
dec
in
fistp
nop
stos
sti
mov
pop
out
mov
add
jg
cmc
and
inc
push
ret
jle
out
ret
ret
adc
imul
mov
out
mov
loop
fisttp
pop
out
leave
mov
repnz
ss
out
sti
adc
and
(bad)
in
out
sub
(bad)
fiadd
popa
ds
sbb
pop
or
rol
cmps
mov
cmp
xchg
adc
adc
mov
ss
cmp
out
sbb
cmp
les
add
out
shr
stc
stos
(bad)
push
sahf
mov
sub
xchg
mov
(bad)
out
cs
aad
aam
mov
mov
(bad)
outs
mov
mov
les
jnp
popa
or
mov
sbb
fscale
cmp
fneni(8087
cmp
sub
cs
cli
mov
sub
dec
add
imul
out
fistp
adc
pop
mov
pop
sbb
mov
cli
arpl
mov
jle
in
jge
retf
inc
sbb
push
dec
ins
mov
dec
jge
jmp
xchg
dec
pop
xor
push
dec
and
cmovp
push
pop
dec
pop
aad
cmp
dec
sbb
xor
dec
xchg
(bad)
mov
ja
pop
iret
dec
push
inc
loop
pop
dec
lods
imul
dec
cmp
dec
or
ret
inc
pop
retf
sub
dec
inc
test
imul
adc
test
mov
stos
cmp
outs
enter
pop
mov
pop
inc
cdq
ins
push
sbb
dec
outs
add
pop
mov
(bad)
or
dec
adc
retf
or
ins
mov
mov
shr
int
push
jbe
dec
mov
pushf
ins
retf
stos
rcl
cmp
hlt
mov
adc
(bad)
xchg
out
cmp
addr16
inc
sub
add
sbb
lods
or
cmps
pushf
and
cmp
pop
adc
mov
or
(bad)
or
rcl
mov
pop
dec
mov
dec
jno
out
and
(bad)
sbb
or
stos
or
push
pop
outs
mov
fwait
(bad)
cli
ds
add
mov
int
fdiv
and
retf
and
jge
pop
loope
imul
(bad)
push
out
dec
adc
cmp
call
shl
pop
in
pop
iret
sti
std
enter
cmp
(bad)
ja
fs
sub
dec
imul
dec
adc
dec
pop
push
shr
add
pop
jl
shl
dec
mov
cmp
dec
aaa
mov
aad
and
test
pop
mov
pop
push
dec
retf
push
fidiv
fstp
cmp
aas
dec
outs
and
cdq
retf
push
in
cmp
mov
jl
ins
shl
out
pop
ror
shl
leave
(bad)
mov
jl
mov
or
inc
ret
fxch
cmp
stos
xchg
inc
int3
xchg
push
ret
dec
fistp
pusha
ret
add
xchg
movs
retf
cld
les
push
pop
dec
sbb
xor
cwde
pop
retf
pop
jge
out
sub
(bad)
lahf
sub
in
add
jp
fidiv
test
mov
idiv
pop
push
fisttp
(bad)
pop
fidivr
pop
add
cdq
push
and
pop
lock
push
into
push
retf
push
and
mov
out
mov
adc
mov
retf
dec
mov
mov
inc
int3
lods
cli
dec
dec
int3
in
retf
pop
rcr
xor
mov
or
push
cwde
add
lods
sub
xor
xchg
inc
outs
pop
and
lods
xor
(bad)
aad
inc
(bad)
cmc
xchg
sti
and
pushf
enter
call
retf
(bad)
pop
dec
xchg
mov
push
(bad)
cmp
addr16
out
ret
push
loop
jmp
pop
in
mov
xor
xchg
fbstp
cdq
or
add
push
push
(bad)
push
mov
out
inc
into
outs
and
mov
in
shl
addr16
and
cmps
daa
sub
(bad)
jmp
cmps
imul
push
in
sub
fs
mov
leave
pop
aaa
aas
mov
lods
ss
mov
test
loop
leave
enter
jle
jae
(bad)
dec
repz
stos
in
lods
idiv
enter
retf
lods
in
enter
retf
mov
mov
out
xchg
cmp
out
out
test
fmul
dec
retf
push
dec
scas
mov
mov
xor
shl
cmp
retw
fs
jne
js
dec
jne
cmp
and
xchg
sbb
fmul
mov
call
adc
shr
mov
ins
sub
bound
jb
aaa
adc
retf
(bad)
add
imul
das
adc
addr16
sbb
pushf
rcl
icebp
ror
cmp
mov
cmp
cmp
(bad)
retf
sbb
shr
push
pop
(bad)
and
pop
xor
cmp
and
xor
dec
xor
mov
je
dec
jo
push
cmp
ss
adc
pop
int3
or
stos
push
jb
jl
jmp
(bad)
xor
adc
in
xor
cs
cmp
mov
xchg
test
cmp
cmp
push
pop
mov
imul
mov
jmp
daa
aas
dec
pusha
add
fucomp
and
sbb
dec
fst
add
aad
adc
ss
fcmovnu
loope
sub
sbb
aas
(bad)
call
mov
cmp
jge
push
stos
sub
jge
push
sbb
stc
dec
pop
adc
les
push
aad
cld
fisttp
jmp
fwait
and
mov
stos
loopne
inc
ret
mov
or
jp
or
cld
ins
and
pop
mov
retf
cld
cmp
ror
adc
xchg
mov
call
sub
jp
mov
repnz
popf
pop
pop
cmc
stos
inc
mov
mov
xchg
xchg
adc
mov
in
fstp
int3
fist
add
fsubp
into
sub
aaa
pushf
mov
hlt
mov
inc
xchg
sub
das
cmp
sbb
dec
cmp
(bad)
fdiv
fild
xor
cmp
cli
test
fisttp
retf
sub
call
fwait
lock
mov
mov
mov
or
jg
into
adc
xchg
sub
or
mov
cld
inc
cmp
in
(bad)
dec
sbb
xchg
mov
jl
mov
cmp
sub
sahf
cld
sti
imul
pusha
fisttp
std
pop
fwait
jno
lods
mov
div
loop
or
dec
les
xor
or
stc
xchg
call
jg
or
and
ret
jp
mov
jecxz
and
add
sbb
std
push
int
lods
not
jmp
push
lds
push
andnps
inc
and
lds
jmp
mov
jg
xchg
and
sub
mov
push
mov
and
in
lods
mov
mov
mov
fimul
call
cli
mov
pop
lods
dec
jmp
nop
or
mov
sbb
cld
lea
dec
lods
cdq
pop
cli
dec
cmp
cld
es
cmp
pop
call
outs
cmp
push
(bad)
retf
dec
jns
int
jnp
or
aam
pop
dec
stos
dec
lock
int3
out
or
mov
(bad)
rcl
mov
bound
(bad)
cmp
jns
or
jmp
mov
jbe
mov
sub
(bad)
pop
mov
stos
push
test
pop
cmps
xor
test
fild
mov
iret
and
retf
aad
cli
jge
fldenv
fcomp
mov
test
push
push
retf
fsub
push
jge
or
cwde
or
or
jnp
sbb
cmp
js
cs
cmp
xchg
jle
and
mov
inc
mov
ja
inc
pop
fimul
les
xlat
cmp
xor
fcmovu
jl
mov
xor
clc
xchg
call
xchg
pop
push
cmp
les
outs
fwait
pusha
cmps
or
push
jne
aam
je
inc
or
xchg
movs
daa
shl
ins
fwait
mov
dec
ins
sahf
fisttp
push
jns
sbb
xchg
jge
popa
inc
cmp
dec
enter
mov
and
mov
jbe
(bad)
outs
loope
mov
xchg
jle
sbb
cmp
or
sbb
inc
and
loopne
mov
nop
gs
inc
clc
inc
push
aad
ror
les
jno
mov
pushf
mov
stc
(bad)
mov
icebp
jl
add
dec
sbb
in
js
dec
out
adc
pop
push
and
aad
xor
hlt
push
out
adc
or
popa
iret
ja
frstor
or
or
inc
jecxz
jbe
inc
xor
adc
cdq
xchg
cwde
fbstp
retf
mov
stos
test
xchg
mov
in
fistp
jmp
popf
cmps
fcomp
mov
pop
aaa
adc
xor
inc
jmp
jmp
ins
adc
(bad)
sub
sbb
mov
repnz
int
in
adc
(bad)
stos
mov
ja
aas
mov
imul
in
push
lods
pusha
pop
retf
jmp
lahf
lea
or
mov
call
mov
ret
xor
stos
fdivp
pop
loopne
fwait
cdq
pop
sub
jge
push
push
cmps
jge
push
test
mov
and
in
mov
push
fild
test
inc
push
pop
and
pop
sub
repz
leave
fisub
cmp
and
cmp
mov
xchg
shl
(bad)
daa
adc
pop
scas
jmp
mov
jge
lea
retf
pop
sahf
sar
mov
mov
and
push
jmp
xchg
jg
cwde
sub
push
push
xchg
xlat
in
push
jmp
mov
jo
xlat
pop
or
dec
arpl
in
sub
aas
inc
pop
inc
jb
mov
in
pop
dec
stos
mov
pop
pop
mov
adc
(bad)
jbe
enter
sti
pop
retf
pusha
les
lods
int3
inc
pushf
ret
sub
into
nop
jne
out
inc
sub
ins
add
into
cmp
enter
sbb
xor
pop
jb
jg
pop
adc
pop
loope
mov
push
lea
cs
ins
add
clc
xchg
loope
jne
repnz
jae
inc
mov
jmp
(bad)
cmp
gs
sbb
inc
and
lahf
mov
adc
sub
inc
jo
loop
push
in
jg
je
xor
lss
je
retf
inc
jnp
stos
adc
ins
imul
rep
ds
jmp
fsubp
jae
mov
xor
mov
fbstp
adc
cmp
enter
sub
pusha
leave
shr
jg
mov
js
inc
stos
cmp
add
jp
stos
(bad)
or
and
call
sbb
lds
scas
add
icebp
(bad)
mov
mov
inc
add
mov
(bad)
dec
push
adc
xchg
fnstsw
and
cmps
cmp
js
icebp
push
push
pop
mov
mov
add
pop
inc
jo
xor
xchg
xor
or
neg
or
into
movs
pop
jno
dec
pushf
pop
push
mov
retf
xor
jnp
fadd
in
jmp
loop
popf
sub
mov
xchg
test
pop
inc
xchg
jge
retf
and
cwde
sar
sub
xchg
inc
(bad)
mov
jb
mov
mov
xor
mov
xor
dec
cmps
lods
stos
xor
bound
sub
cli
jmp
outs
es
pop
xor
push
popa
les
mov
xchg
cmps
aad
mov
xor
jp
pop
xor
xchg
scas
push
pop
fisttp
mov
pop
mov
fucomi
aam
cmp
cmps
arpl
ins
popa
add
loop
mov
mov
pusha
imul
enter
nop/reserved
inc
jge
jge
stos
jnp
cmps
push
rol
adc
mov
iret
add
fmul
test
inc
adc
shl
pop
sub
xchg
add
cmp
and
iret
fisubr
xor
dec
cmp
push
push
fwait
cmp
pop
xor
adc
pop
ret
add
jae
dec
push
int3
mov
add
ror
retf
les
out
dec
fstp
or
(bad)
jnp
push
cmp
sub
jnp
inc
int3
jp
sbb
pop
frstor
sar
add
push
cmp
jae
pop
std
add
je
(bad)
fnstenv
xlat
bound
jmp
popa
adc
cmp
int3
retf
shr
mov
mov
lds
imul
sbb
push
push
test
test
jecxz
inc
and
push
pop
adc
(bad)
sbb
or
mov
pop
mov
fld
xchg
bound
repz
pop
adc
arpl
shl
lods
cld
pop
movs
fmul
and
jne
xchg
push
imul
das
and
and
pop
das
inc
sbb
add
dec
fwait
mov
xchg
mov
add
sub
pop
shl
mov
cwde
mov
and
movs
shr
fs
sbb
jmp
sahf
scas
rcl
cmp
jge
and
aad
xchg
jp
adc
push
sub
lds
mov
xchg
stc
adc
out
push
cmc
repnz
adc
aaa
fnsave
arpl
ins
(bad)
cmc
pushf
sahf
mov
rcr
gs
in
add
clc
or
(bad)
jge
cmp
aas
or
rcl
ficomp
int3
repnz
loope
int3
sbb
ffreep
mov
adc
int3
fwait
mov
fcmovnbe
imul
fmul
push
add
sar
pop
mov
ds
cmp
js
or
(bad)
mov
mov
adc
movs
ffree
add
loop
pop
mov
jns
sub
movs
dec
fcom
loope
out
clc
pop
stos
aam
xor
int3
fsubr
outs
xchg
adc
jns
jo
xchg
dec
jbe
sbb
es
mov
neg
or
(bad)
sti
std
cdq
shr
ja
fstp
nop
or
inc
mov
aam
les
sbb
out
xchg
cmps
adc
sub
in
sbb
rol
cmp
adc
ja
mov
rcl
inc
push
push
jecxz
xchg
mov
jnp
les
out
push
imul
(bad)
jp
repz
adc
dec
or
bound
jg
rcl
out
test
and
pop
mul
xor
adc
aaa
rol
xchg
stos
mov
(bad)
push
mov
fs
or
dec
pushf
and
lock
aad
lds
mov
xor
out
dec
repz
sub
movs
pop
mov
je
aad
icebp
outs
mov
rol
sbb
or
adc
dec
mov
push
fld
push
and
sub
movs
out
mov
adc
mul
shr
xor
es
shl
jae
gs
je
jnp
sbb
rcl
in
xchg
or
fdivr
mov
push
push
pop
int3
pop
push
ret
popf
and
adc
add
sub
add
movs
jae
inc
mov
adc
hlt
push
idiv
mov
mov
je
jle
add
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
or
mov
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
mov
and
or
mov
mov
and
or
mov
jmp
cmp
jne
or
mov
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
and
mov
jmp
cmp
jne
or
mov
jmp
test
jne
or
jmp
test
je
xor
jmp
or
inc
mov
cmp
jne
cmp
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
jmp
push
push
lea
push
push
push
call
add
test
je
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
test
push
push
mov
mov
je
cmp
jne
mov
add
jmp
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
mov
mov
call
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
xor
test
mov
mov
mov
mov
je
inc
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
xor
jmp
xor
xor
movsx
push
sar
pop
cmp
mov
ja
jmp
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
cmp
mov
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
(bad)
(bad)
inc
add
inc
add
aad
add
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
or
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
test
mov
mov
mov
mov
mov
je
inc
xor
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
mov
imul
movzx
push
shr
pop
cmp
mov
je
push
pop
cmp
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
and
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
and
and
lea
push
movzx
push
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
test
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
test
mov
je
mov
test
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
and
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
add
mov
mov
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
push
je
mov
mov
mov
jmp
mov
pop
add
mov
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
test
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
test
jg
jl
test
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmp
je
inc
test
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
xor
cmp
je
cmp
jne
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
nop
clc
loopne
add
inc
add
inc
add
fild
loopne
add
loopne
add
inc
add
loope
add
add
ret
push
mov
sub
push
push
lea
call
mov
movsx
push
call
cmp
jmp
inc
movzx
push
call
test
pop
jne
movsx
push
call
cmp
pop
jne
inc
inc
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
cmp
pop
je
mov
and
leave
ret
push
mov
sub
push
push
lea
call
mov
mov
test
mov
je
mov
mov
mov
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmp
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
test
mov
jne
cmp
pop
je
mov
and
leave
ret
fldz
mov
fcomp
fnstsw
test
jp
xor
inc
ret
xor
ret
push
mov
push
push
cmp
push
push
je
lea
push
call
mov
mov
mov
mov
mov
jmp
lea
push
call
mov
mov
mov
add
leave
ret
push
push
push
push
call
add
ret
test
push
mov
je
push
call
inc
push
push
add
push
call
add
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
push
lea
mov
call
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
jle
mov
jmp
xor
add
cmp
ja
call
push
jmp
cmp
je
mov
xor
cmp
setg
xor
cmp
sete
mov
add
mov
call
mov
cmp
mov
jne
mov
lea
cmp
jle
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
sete
add
add
cmp
jne
or
jmp
sub
add
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
lea
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
add
test
je
cmp
jne
push
lea
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
mov
jne
or
jmp
xor
cmp
sete
sub
xor
cmp
setg
sub
lea
push
lea
push
push
xor
cmp
sete
xor
cmp
setg
add
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
push
lea
mov
xor
mov
call
cmp
jge
mov
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
mov
add
cmp
mov
ja
call
push
jmp
mov
mov
mov
mov
mov
shr
mov
push
and
xor
cmp
jne
test
jne
mov
cmp
jne
or
jmp
add
push
push
lea
push
push
push
call
add
test
je
cmp
mov
je
mov
and
jmp
cmp
jne
mov
inc
mov
inc
cmp
push
sete
dec
and
add
mov
inc
push
call
test
pop
pop
je
cmp
sete
dec
and
add
mov
mov
jmp
and
xor
or
je
mov
inc
mov
mov
inc
test
sete
dec
and
add
mov
mov
inc
neg
sbb
and
and
xor
add
xor
or
jne
mov
mov
mov
and
inc
or
jne
mov
jmp
mov
jmp
mov
inc
mov
inc
cmp
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
and
mov
ja
cmp
jbe
mov
mov
cmp
jle
mov
and
mov
movsx
and
and
call
add
movzx
cmp
jbe
add
mov
sub
mov
mov
shrd
shr
inc
dec
cmp
mov
mov
jge
cmp
jl
mov
and
mov
movsx
and
and
call
cmp
jbe
lea
mov
cmp
je
cmp
jne
mov
dec
jmp
cmp
je
mov
cmp
jne
add
mov
jmp
inc
mov
jmp
inc
cmp
jle
push
push
push
call
add
add
mov
cmp
jne
mov
cmp
mov
sete
dec
and
add
mov
mov
mov
inc
call
xor
and
and
sub
push
pop
sbb
js
jg
cmp
jb
mov
inc
jmp
mov
inc
neg
adc
neg
cmp
mov
mov
jl
mov
jg
cmp
jb
push
push
push
push
call
add
mov
inc
cmp
mov
mov
mov
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
add
mov
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
mov
mov
mov
lea
dec
call
test
jne
call
push
pop
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
je
cmp
jne
xor
cmp
sete
add
add
mov
mov
cmp
mov
jne
mov
lea
mov
xor
inc
test
jg
mov
call
mov
inc
jmp
add
cmp
jle
mov
call
mov
mov
mov
mov
mov
mov
inc
test
jge
neg
cmp
jne
cmp
jl
mov
mov
mov
call
push
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
jne
or
jmp
xor
cmp
sete
sub
mov
lea
push
mov
add
push
push
xor
cmp
sete
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
mov
dec
mov
xor
cmp
sete
cmp
lea
jne
or
jmp
sub
lea
push
push
push
push
call
add
cmp
je
mov
jmp
mov
dec
cmp
setl
cmp
jl
cmp
jge
cmp
je
mov
inc
test
jne
mov
push
lea
push
push
mov
push
call
add
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
mov
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
pop
ret
cmp
je
cmp
je
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
push
push
push
xor
push
call
add
test
je
push
push
push
push
push
call
add
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld1
fcomp
fnstsw
test
jp
xor
inc
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
push
call
push
call
test
pop
pop
je
call
add
cmp
jne
xor
jmp
call
add
cmp
jne
xor
inc
inc
test
jne
push
push
lea
cmp
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
or
pop
xor
pop
inc
pop
ret
xor
pop
ret
cmp
je
push
mov
test
je
push
call
and
and
and
and
pop
pop
ret
mov
cmp
jne
mov
cmp
push
push
jne
call
test
pop
pop
mov
jne
xor
ret
mov
mov
mov
add
push
push
push
call
add
jmp
push
call
add
test
je
mov
shl
xor
inc
ret
push
push
inc
call
movzx
cmp
pop
je
push
push
call
test
pop
pop
jne
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
xor
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
mov
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
je
jmp
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
pop
pop
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
je
cmp
jne
cmp
je
mov
inc
inc
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
cmp
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
cmp
jne
push
inc
pop
inc
mov
jmp
mov
jmp
movzx
inc
inc
cmp
jne
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
cmp
ja
sub
inc
movzx
movzx
mov
mov
shr
add
mov
and
mov
shl
or
inc
dec
jne
mov
xor
jmp
movzx
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
jmp
push
push
lea
push
xor
push
mov
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
jmp
add
mov
jmp
add
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
mov
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
mov
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
shl
jmp
imul
jmp
test
jne
movzx
push
call
test
pop
je
mov
shl
call
movzx
mov
inc
cmp
movzx
lea
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
push
push
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
test
push
jne
movzx
mov
and
push
call
test
pop
je
mov
pop
ret
movzx
and
sub
pop
ret
cmp
je
jmp
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
mov
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
mov
jmp
mov
cmp
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
mov
add
mov
add
mov
mov
cmp
mov
mov
jb
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
mov
je
jmp
mov
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
cmp
pop
pop
je
dec
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
mov
je
cmp
jne
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
mov
test
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
push
pop
cmp
jne
inc
mov
inc
mov
movzx
cmp
je
movzx
inc
inc
cmp
jne
mov
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
mov
cmp
ja
sub
movzx
inc
movzx
mov
mov
and
mov
mov
shl
shr
add
or
inc
dec
jne
and
jmp
movzx
mov
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
mov
jmp
and
push
push
lea
push
push
call
add
cmp
je
mov
test
jle
add
sub
mov
jmp
inc
inc
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
mov
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
shl
jmp
mov
imul
jmp
test
jne
movzx
push
call
test
pop
je
shl
mov
call
mov
movzx
mov
mov
inc
cmp
movzx
lea
mov
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
mov
jmp
mov
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
cmp
jle
and
jmp
mov
call
mov
jmp
push
push
call
mov
jmp
call
cmp
mov
je
and
jmp
mov
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
mov
xor
mov
mov
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
push
push
push
mov
test
push
mov
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
or
jmp
dec
mov
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
mov
jmp
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
xor
inc
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
movzx
push
call
test
pop
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
movsx
push
push
call
pop
or
jmp
push
mov
pop
push
lea
push
lea
push
call
add
cmp
jne
call
mov
jmp
add
js
mov
movzx
add
mov
jmp
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
call
cmp
pop
jne
call
mov
or
pop
ret
push
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
imul
sar
mov
lea
and
mov
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
cmp
push
mov
je
push
call
test
pop
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
call
mov
cmp
je
mov
cmp
jg
call
mov
jmp
mov
mov
jmp
mov
cmp
je
add
mov
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
push
lea
push
call
cmp
je
cmp
je
cmp
jge
mov
jmp
call
mov
mov
jmp
cmp
jle
mov
push
push
call
mov
cmp
pop
pop
jne
call
mov
call
mov
jmp
lea
push
push
push
lea
push
call
cmp
je
cmp
jl
call
push
call
pop
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
push
call
pop
and
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jae
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jmp
cmp
jb
or
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
cmp
mov
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
cmp
mov
je
mov
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
sub
test
movzx
movzx
mov
mov
jne
or
leave
ret
and
push
push
mov
lea
push
push
push
xor
inc
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
push
push
push
or
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
mov
push
lea
push
push
call
add
or
mov
pop
mov
pop
leave
ret
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
push
push
push
push
mov
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
jne
mov
jmp
mov
call
test
je
push
call
push
call
pop
pop
jmp
mov
jmp
mov
add
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
mov
jne
xor
inc
jmp
mov
push
pop
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
push
call
push
call
pop
pop
mov
jmp
mov
mov
movzx
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
mov
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
test
mov
je
push
call
mov
test
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
jne
xor
inc
jmp
push
call
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzx
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
push
call
push
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
pop
mov
mov
rep
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
cmp
mov
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
xor
push
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
lea
cmp
jne
push
movzx
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
inc
cmp
jl
lea
push
push
call
test
je
cmp
ja
movzx
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzx
movzx
jmp
mov
mov
movzx
inc
cmp
jle
inc
inc
cmp
jne
mov
push
push
push
add
push
push
push
mov
push
push
call
add
test
je
mov
mov
push
push
mov
push
add
push
push
inc
push
push
push
push
call
add
test
je
mov
push
push
add
push
push
mov
push
inc
push
push
push
push
call
add
test
je
cmp
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
jle
cmp
je
lea
mov
mov
cmp
je
movzx
movzx
cmp
jg
lea
jmp
mov
mov
inc
inc
inc
mov
mov
movzx
cmp
jle
mov
inc
inc
cmp
mov
jne
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
cmp
je
push
call
test
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
pop
mov
jmp
push
call
push
call
push
call
push
call
xor
add
inc
jmp
lea
mov
cmp
je
push
call
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
xor
pop
call
leave
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
cmp
je
mov
test
jne
call
mov
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cdq
sub
mov
mov
sar
lea
push
mov
push
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
test
je
cmp
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
push
call
test
je
lea
push
call
pop
mov
xor
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
mov
sub
cmp
ja
add
movsx
shl
lea
mov
test
jne
mov
pop
ret
xor
mov
inc
cmp
jl
cmp
jle
sub
cmp
ja
inc
jmp
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
call
test
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
lea
push
mov
and
push
or
push
mov
call
test
jne
xor
jmp
lea
call
cmp
je
cmp
je
mov
push
mov
call
push
mov
call
pop
cmp
pop
je
xor
inc
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
mov
add
call
mov
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
xor
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
test
pop
pop
jne
or
mov
jmp
test
jne
mov
test
je
push
lea
push
push
call
add
test
jne
push
or
mov
call
cmp
pop
jne
mov
jmp
mov
test
jne
push
call
test
pop
je
or
mov
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
pop
xor
test
pop
jne
or
cmp
mov
je
or
mov
jmp
cmp
je
push
call
cmp
pop
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
cmp
jne
mov
mov
shr
not
and
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
cmp
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
call
push
sub
neg
sbb
inc
mov
call
sub
neg
sbb
and
inc
cmp
pop
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
mov
test
je
test
je
test
jne
and
ret
push
call
sub
neg
sbb
inc
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
test
jne
and
ret
push
push
push
push
call
mov
mov
xor
add
cmp
jne
or
jmp
lea
cmp
lea
mov
mov
je
cmp
je
push
push
push
call
add
mov
cmp
mov
je
cmp
je
mov
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
mov
cmp
je
cmp
je
push
call
sub
neg
pop
sbb
push
inc
push
mov
call
test
jne
mov
jmp
mov
call
mov
mov
cmp
je
mov
add
neg
sbb
and
mov
call
mov
test
je
cmp
je
cmp
je
movzx
push
call
test
je
push
push
call
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
test
je
cmp
mov
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
push
push
push
push
call
test
je
push
lea
push
push
push
call
test
je
push
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
mov
test
jne
xor
jmp
cmp
push
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
add
cmp
jb
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
inc
cmp
jb
xor
pop
pop
leave
ret
movzx
movzx
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
cmp
mov
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
cmp
pop
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
call
cmp
mov
jne
dec
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
mov
push
call
mov
add
mov
test
je
mov
push
push
push
push
push
call
mov
push
push
call
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
mov
mov
push
push
push
mov
push
xor
push
push
push
push
mov
call
mov
mov
cmp
je
test
je
mov
not
mov
jmp
mov
lea
push
mov
call
mov
mov
mov
xor
xor
cmp
je
test
jne
mov
mov
not
mov
call
mov
mov
xor
lea
xor
mov
mov
cmp
mov
mov
je
test
je
not
mov
call
mov
pop
not
mov
mov
pop
add
ret
mov
mov
lea
mov
push
xor
call
push
call
mov
mov
mov
xor
xor
cmp
je
test
jne
mov
mov
pop
not
mov
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
mov
mov
mov
mov
and
test
jne
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
add
mov
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
mov
xor
mov
add
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
cmp
jle
xor
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
call
pop
mov
pop
ret
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
mov
or
mov
push
push
push
call
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
or
mov
mov
push
call
mov
or
mov
push
push
push
push
call
push
push
push
push
push
call
mov
or
mov
mov
push
mov
push
call
mov
or
mov
push
call
mov
or
mov
mov
or
mov
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
mov
push
push
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
push
call
mov
or
mov
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
mov
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
push
call
mov
or
mov
mov
or
mov
push
push
push
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
lea
push
push
lea
push
push
lea
push
push
mov
push
push
call
mov
or
mov
mov
or
mov
push
push
push
push
mov
push
push
push
push
push
call
mov
or
mov
mov
push
push
call
mov
or
mov
mov
push
push
call
mov
or
mov
push
push
push
push
call
mov
or
mov
mov
push
mov
push
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
push
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
push
call
mov
or
mov
mov
push
call
mov
or
mov
call
mov
or
mov
push
push
push
call
mov
or
mov
push
call
test
je
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
sub
cmp
jae
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
shl
mov
cmp
jge
mov
and
mov
sub
cmp
jae
mov
cmp
jae
mov
and
and
test
je
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
jbe
mov
shr
mov
mov
and
mov
cmp
ja
mov
jmp
mov
and
add
mov
jmp
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
shl
mov
lea
mov
jmp
mov
shr
mov
mov
and
test
je
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
and
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
add
mov
mov
add
mov
cmp
jne
mov
and
test
je
mov
add
xor
mov
and
shl
mov
mov
add
mov
mov
jmp
mov
add
xor
mov
and
shl
mov
mov
and
and
mov
lea
mov
mov
shl
mov
mov
mov
lea
cmp
jbe
pusha
mov
and
popa
mov
jmp
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
cmp
jae
mov
jmp
mov
add
cmp
jbe
mov
jmp
mov
sub
mov
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
sub
add
cs
add
cs
add
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
add
mov
push
mov
push
call
mov
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
lea
mov
mov
xor
mov
rep
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
push
call
add
jmp
mov
mov
mov
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
jmp
mov
mov
call
mov
mov
mov
mov
push
mov
push
call
push
mov
mov
push
call
mov
mov
mov
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
add
dec
pop
(bad)
inc
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
call
mov
mov
push
call
add
mov
neg
sbb
add
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
je
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
mov
add
test
jne
push
push
push
call
add
mov
pop
ret
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
mov
push
push
mov
call
push
push
call
add
call
test
mov
jne
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
test
jle
push
push
push
push
call
mov
add
test
je
push
push
push
call
push
mov
push
push
mov
call
push
push
call
mov
push
push
call
add
test
mov
pop
jne
push
push
call
jmp
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
add
push
push
push
call
add
pop
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
lea
push
push
push
call
add
cmp
jne
fld
mov
sub
fstp
push
call
add
mov
add
ret
xor
add
ret
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
call
lea
push
call
push
mov
push
push
call
add
test
je
mov
lea
lea
mov
add
test
jne
sub
je
cmp
je
add
lea
push
call
push
mov
push
push
call
add
test
jne
lea
push
call
push
push
call
add
xor
cmp
sbb
pop
neg
pop
mov
xor
call
add
ret
mov
lea
lea
push
mov
call
mov
add
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
mov
push
push
lea
push
push
mov
call
add
mov
lea
push
call
add
cmp
jbe
mov
push
push
push
push
call
add
add
sub
je
cmp
je
lea
push
call
add
test
je
push
push
call
add
test
ja
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
call
mov
sub
push
mov
call
add
test
jne
push
mov
call
mov
add
mov
add
push
call
add
test
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
pop
ret
push
add
push
push
call
mov
add
mov
sub
test
je
push
push
call
add
cmp
jne
push
push
call
add
test
jne
push
call
mov
push
push
call
push
push
push
call
xor
add
cmp
setne
mov
jmp
push
mov
call
mov
jmp
push
push
push
call
mov
add
test
je
cmp
je
push
push
push
call
add
movsx
sub
je
sub
je
sub
jne
push
mov
call
mov
jmp
push
mov
call
mov
jmp
push
or
call
mov
add
add
cmp
jne
jmp
push
push
push
call
add
pop
pop
pop
pop
ret
test
jne
push
push
call
push
call
add
pop
mov
sub
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
test
jne
push
push
call
add
push
call
push
mov
call
add
test
je
call
mov
push
call
push
push
push
call
add
pop
pop
pop
ret
test
je
pop
pop
mov
pop
ret
push
push
call
add
test
je
push
push
call
push
push
call
add
call
pop
pop
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
mov
call
add
sub
mov
je
jmp
mov
sub
push
push
mov
call
add
cmp
jne
test
je
push
push
call
fstp
mov
push
push
call
add
test
jg
xor
add
cmp
jne
call
test
mov
je
push
push
call
add
mov
pop
pop
mov
pop
ret
lea
push
push
push
call
add
test
je
mov
mov
push
push
push
push
call
add
cmp
jne
mov
jmp
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
mov
call
add
pop
pop
ret
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
push
call
push
push
push
mov
call
mov
push
push
push
call
add
test
pop
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
push
push
push
call
add
mov
call
test
mov
jne
push
push
call
add
lea
pop
pop
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
push
push
call
add
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
add
push
push
call
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
aam
or
aas
aam
mov
xchg
movups
jnp
fnstenv
inc
js
imul
cwde
fadd
mov
cmps
sbb
and
pop
add
outs
mov
push
ror
ins
dec
push
mov
mov
mov
mov
pop
test
es
add
xchg
scas
ss
lea
sub
ja
push
add
mov
mov
xchg
jbe
ja
shr
mov
xchg
cwde
jae
sbb
or
test
mov
aad
into
loope
(bad)
sub
out
das
push
mov
cmp
imul
dec
enter
and
inc
mov
xchg
cmp
dec
sbb
movs
cs
cmps
stos
test
test
clc
adc
(bad)
fild
xor
sub
arpl
inc
fwait
es
ss
cli
or
call
ins
dec
loope
xchg
sbb
sbb
ror
scas
int3
sub
cmc
mov
jo
push
mov
fst
adc
dec
in
leave
xchg
inc
cmps
in
mov
iret
stc
sbb
fisubr
push
enter
pop
jno
popa
jmp
cmps
jmp
fsub
(bad)
push
ja
inc
add
mov
push
pop
popa
js
data16
call
scas
test
xor
cmp
aas
jae
jae
cmps
or
jo
mov
(bad)
fidiv
stc
pushf
bound
push
es
cmp
stos
mov
outs
push
jns
imul
shl
sbb
out
xor
or
lds
dec
out
movs
adc
fwait
dec
lods
xlat
cmc
mov
in
das
addr16
cmp
jns
or
mov
jne
xor
es
fs
fist
rcl
int3
jmp
xchg
push
dec
call
push
dec
aad
cli
push
pop
std
xchg
and
inc
dec
in
push
aam
sub
mov
test
test
xchg
sub
inc
jne
jmp
mov
fst
dec
push
add
jbe
dec
cmp
repnz
rol
mov
mov
mov
jge
adc
mov
test
or
retf
sbb
sbb
add
dec
jae
mov
inc
repnz
addr16
ret
in
gs
cmp
inc
xor
pop
jno
mov
or
adc
xchg
lods
dec
inc
in
cmp
es
inc
xchg
mov
sbb
inc
(bad)
jl
jmp
cmps
xor
out
fbld
ins
dec
mov
dec
xchg
push
xchg
xor
std
xor
xchg
ins
jmp
cmp
addr16
sub
lahf
outs
and
in
fld
add
in
adc
leave
test
fs
pusha
xchg
mov
jmp
or
mov
cmp
dec
aas
loopne
data16
leave
push
popf
jle
dec
cwde
push
lods
sbb
inc
sub
pop
not
push
mul
test
and
jae
mov
mov
jmp
mov
stc
xchg
jmp
add
cmp
lods
xchg
mov
sbb
and
test
addr16
lock
mov
or
dec
mov
in
dec
repz
and
test
adc
push
adc
mov
outs
imul
pop
stos
fs
rcr
cwde
push
es
jmp
ficomp
movs
pop
repnz
out
mov
ds
mov
aas
dec
push
fistp
push
jbe
addr16
jmp
lds
dec
popf
aam
xchg
xchg
test
add
dec
or
(bad)
and
cmp
xor
and
mov
inc
sub
add
xchg
mov
iret
test
inc
rcr
push
mov
fwait
daa
fnstenv
or
cwde
out
dec
inc
xor
cmp
push
inc
or
outs
mov
xchg
xchg
cmps
mov
clc
jno
mov
mov
out
and
or
sbb
jl
push
xchg
test
or
mov
cmp
mov
rcr
aaa
lds
or
(bad)
jmp
imul
mov
inc
mov
push
ins
jne
adc
sar
jne
cmps
mov
mov
and
movs
enter
jge
xchg
popf
mov
(bad)
test
out
in
xor
mov
idiv
xchg
sub
add
ja
inc
jle
clc
mov
stos
mov
pop
cmps
lds
push
fwait
cmp
out
fwait
or
inc
or
mov
jle
fs
inc
adc
mov
sbb
and
dec
shl
pop
mov
mov
movs
stc
and
loope
std
in
xor
add
pop
ins
add
cmp
stc
sbb
pop
test
inc
fprem
mov
adc
xchg
cmc
cmp
mov
cmp
call
cmc
shl
and
push
jmp
sub
adc
add
xchg
repz
add
add
out
mov
cmp
adc
mov
idiv
lods
daa
or
iret
int
adc
lods
les
adc
scas
cld
(bad)
mov
cli
lahf
(bad)
push
cmps
sub
fstp
jns
jne
sub
test
data16
xchg
adc
fldcw
mov
ins
ss
pop
addr16
jns
or
sbb
and
jbe
sbb
sub
aaa
sbb
cmps
sub
jo
jbe
xchg
lods
sub
shr
imul
lock
adc
mov
addr16
dec
push
sub
jl
pop
xchg
push
loop
mov
imul
popa
mov
push
imul
cmps
xchg
inc
imul
jnp
push
call
mov
movs
adc
push
stos
jnp
aas
add
jmp
cwde
ror
xchg
test
cs
mov
pop
xor
cwde
std
xchg
repnz
adc
cli
cld
inc
dec
push
push
scas
fstp
stos
adc
les
cmp
jmp
arpl
cmp
pop
adc
(bad)
and
adc
pop
pop
arpl
adc
popf
sub
lods
mov
or
dec
je
jnp
sbb
(bad)
adc
push
and
xlat
aad
sub
fiadd
xor
pop
dec
pop
std
mov
jle
ins
jmp
cmps
sbb
mov
mov
jns
popa
mov
dec
add
add
(bad)
or
sub
xor
in
or
push
add
sub
cmp
cmp
pop
sub
(bad)
cli
int3
push
pop
push
repnz
xchg
imul
daa
or
hlt
sar
cmps
js
inc
call
lock
icebp
out
cs
pop
sahf
std
push
inc
outs
popf
ins
iret
xor
ja
mov
cmp
dec
pop
imul
xchg
mov
mov
(bad)
js
sub
dec
lods
cmps
cmp
fdivr
clc
jle
mov
(bad)
sbb
(bad)
test
or
or
cwde
or
pop
push
int
pop
test
sub
sub
ret
lahf
pop
arpl
cs
inc
push
inc
lods
int3
jmp
mov
mov
call
cs
mov
push
hlt
mov
mov
fwait
push
daa
cmp
push
xchg
movs
jne
or
aad
bound
retf
push
jl
sbb
int
dec
aad
cmc
popa
test
push
sahf
mov
out
lds
add
mov
dec
jp
(bad)
pop
test
sbb
push
out
xlat
jmp
ds
mov
dec
pop
sub
push
gs
cmp
fsubrp
xchg
inc
jae
inc
test
cmps
sub
inc
ins
add
push
mov
jns
scas
sub
add
pop
nop
pop
mov
frstor
(bad)
xor
les
jnp
add
mov
mov
test
data16
(bad)
js
aaa
inc
cmp
or
(bad)
and
mov
add
fwait
sub
cs
sbb
enter
mov
into
call
test
(bad)
js
retf
pushf
in
xor
mov
neg
dec
(bad)
fsub
(bad)
rcr
(bad)
std
jbe
into
test
mov
mov
xor
mov
sub
jmp
mov
lods
add
out
dec
push
push
pop
mov
aaa
add
icebp
(bad)
int
cmp
les
xor
or
dec
push
shl
cli
movs
mov
test
jmp
sti
(bad)
das
or
jnp
mov
cld
sub
inc
jmp
dec
leave
std
popa
repnz
adc
jmp
das
or
pop
push
cs
add
push
and
rol
rcl
movs
xchg
mov
mov
push
out
bound
(bad)
daa
cdq
and
out
cmps
out
mov
aad
(bad)
fiadd
daa
leave
jge
rcr
mov
les
test
setle
cmps
loope
mov
jmp
ins
inc
cmp
add
xchg
xor
icebp
repz
push
in
mov
stc
lea
lahf
ret
mov
pand
fwait
aad
dec
cmp
(bad)
sub
xchg
sub
aaa
sahf
push
ja
cmp
movs
or
rcr
xbegin
stc
sub
and
xchg
inc
movs
stc
sar
mov
sub
(bad)
rol
test
sbb
mov
dec
fadd
call
sbb
pop
jmp
mov
sar
vpshufhw
sbb
push
dec
xlat
fwait
xor
data16
mov
pop
pop
stc
mov
iret
out
cwde
icebp
push
pop
pop
mov
jmp
push
dec
fwait
(bad)
fidivr
(bad)
imul
enter
imul
xor
add
(bad)
jl
jg
pusha
(bad)
les
scas
xor
clc
mov
fwait
cmp
out
popa
pusha
movd
in
mov
jle
in
into
push
mov
sbb
add
push
fisubr
retf
jns
mov
call
sbb
stc
repz
xchg
aas
gs
sbb
push
sub
fsubr
push
in
inc
xchg
ss
sbb
mov
xor
call
push
arpl
in
xor
movs
inc
cmp
mov
mov
test
and
sub
stos
fistp
adc
lods
mov
aaa
arpl
ins
add
icebp
xchg
pop
ss
xchg
jno
or
or
(bad)
sti
retf
push
add
call
and
add
pop
sbb
mov
mov
aad
sahf
mov
imul
jmp
push
xlat
and
ins
inc
fsubr
or
jb
pop
sub
xor
movs
fstp
(bad)
shl
or
push
les
test
add
cmps
xchg
jg
xor
sub
jnp
cmp
dec
imul
sbb
imul
shr
enter
pop
xchg
push
push
bound
mov
nop
mov
out
mov
cdq
imul
push
sbb
inc
cmp
addr16
test
jae
stos
(bad)
jg
xchg
xchg
jmp
es
push
movs
pop
mov
inc
(bad)
stos
push
popf
fcmovbe
or
data16
loope
js
sbb
jb
inc
adc
lahf
xchg
xchg
fld
mov
aam
and
cmp
out
push
mov
adc
ja
add
ja
retf
jo
rol
mov
push
sbb
jle
ins
enter
int
mov
fsqrt
sbb
test
in
mov
jl
jle
xchg
pop
pop
pop
or
cvtpi2ps
sub
or
call
xchg
jmp
push
dec
adc
pop
or
mov
and
scas
data16
outs
cdq
mov
ins
cmp
add
or
jmp
test
sti
push
outs
xchg
jb
pop
adc
mov
inc
push
scas
ins
pop
xor
js
xlat
inc
imul
mov
jae
out
test
cmps
pop
push
js
xor
xchg
cmps
xchg
add
into
(bad)
fiadd
xchg
fcomi
cmp
pop
adc
movs
test
scas
push
rcr
push
icebp
stos
dec
dec
(bad)
in
aad
sahf
xchg
cmps
aad
cdq
outs
cmc
lods
sbb
ins
fistp
push
fwait
sahf
mov
leave
outs
repnz
cmp
xor
ficom
cmp
xchg
mov
fmulp
sub
(bad)
movs
stos
sub
psadbw
mov
sbb
pop
(bad)
cmp
mov
imul
aad
popf
fisubr
jmp
and
adc
xchg
cld
pop
arpl
xchg
shr
(bad)
and
(bad)
mov
cmp
lock
sub
pop
out
retf
ins
loop
sub
(bad)
sti
dec
frstor
sbb
into
aaa
add
(bad)
jnp
cmps
pop
fcmovu
data16
fcomp
rol
mov
loope
mov
sub
dec
das
(bad)
(bad)
sbb
mov
or
xchg
cmp
shr
into
push
xlat
and
lahf
dec
fst
sub
push
shl
test
sahf
movs
repnz
adc
mov
add
iret
test
enter
fsub
sub
sbb
std
jns
push
je
out
ror
jmp
mov
(bad)
xor
sbb
mov
sub
mov
scas
aam
push
movs
imul
mov
mov
xchg
retf
cmc
cmp
mov
mov
das
jo
push
xor
fldenv
jge
and
push
inc
sbb
(bad)
xor
push
sbb
je
mov
test
or
cwde
jge
repz
cld
not
adc
mov
outs
and
jnp
popf
xchg
and
mov
jbe
jmp
push
mov
pop
inc
add
aas
jecxz
inc
sahf
cmps
test
(bad)
stos
loopne
out
mov
fwait
push
ror
test
lds
mov
inc
or
mov
jg
dec
lods
fldcw
jge
mov
or
inc
mov
not
arpl
mov
mov
xchg
int3
mov
out
jbe
cmp
aam
pop
clc
clc
pop
push
xchg
(bad)
ret
call
pushf
mov
dec
retf
push
xor
sub
push
dec
xchg
jl
and
fs
inc
ror
add
mov
pop
or
and
cmp
cs
mov
fst
cmp
inc
inc
jmp
and
mov
xchg
jb
xchg
mov
mov
sar
mul
xchg
neg
sbb
and
mov
inc
fwait
movs
jnp
addr16
mov
outs
dec
xchg
or
cdq
in
cmp
iret
push
pop
addr16
push
or
ror
aas
pop
test
sub
bound
sbb
cmp
pop
pop
lods
and
lahf
inc
sub
popa
mul
dec
dec
dec
fadd
fdivr
pop
in
sub
jnp
pop
jbe
jb
and
cmp
fmul
jmp
xor
mov
cmp
je
jg
cmp
jmp
jo
xchg
cmp
lea
pop
js
cmp
fstp
(bad)
and
dec
ret
stos
pop
call
jb
xchg
clc
jbe
jl
fcom
(bad)
adc
push
ins
xor
dec
in
mov
cmp
and
or
xchg
adc
dec
rcl
cmp
add
lods
retf
add
into
cmps
imul
stc
out
ds
sbb
inc
or
jle
daa
and
pop
xchg
test
push
test
cmps
clc
lock
mov
cmp
add
pop
mov
fwait
jae
jmp
retf
sbb
retf
push
sbb
dec
popa
cmp
sub
jno
dec
test
lahf
(bad)
cmp
sbb
bound
fs
xchg
mov
loope
jle
cwde
push
cwde
jge
call
xabort
enter
dec
push
push
sbb
movs
sub
pusha
add
repz
pop
repnz
add
(bad)
sub
ja
cmp
outs
inc
or
fs
add
(bad)
sti
xor
cwde
mov
xor
movs
(bad)
fld
add
jge
clc
ds
lods
pop
mov
movs
xchg
jmp
and
add
gs
add
cld
rol
cli
leave
lds
les
sbb
dec
xchg
loope
cmc
jnp
mov
outs
add
jecxz
mov
inc
pop
icebp
cmp
pushf
mov
rcr
and
adc
out
icebp
jae
sbb
into
leave
je
je
jae
push
mov
mov
push
adc
or
jp
lds
imul
jno
mov
mov
neg
test
imul
sahf
pop
jle
movlps
movs
jl
inc
fwait
test
pop
stc
mov
scas
mov
push
dec
add
and
pop
cwde
mov
cmps
bnd
dec
pop
jbe
ins
in
xor
inc
jne
popf
es
jecxz
jnp
pop
fcos
fdiv
or
mov
jb
(bad)
xor
addr16
sbb
pop
pop
xchg
push
stos
push
mov
sahf
push
sbb
cmp
lea
fldenv
mov
cmp
adc
mov
xchg
(bad)
clc
push
out
test
retf
leave
add
into
or
jmp
inc
ret
(bad)
push
inc
cmps
je
ss
jp
push
in
dec
int3
je
jo
out
jp
adc
mov
ja
mov
(bad)
loopne
cmp
mov
pop
push
sub
or
cld
(bad)
dec
test
xchg
hlt
cs
fistp
data16
shl
aas
sahf
ja
gs
dec
test
jle
inc
pushf
mov
xchg
imul
cmps
add
jbe
shr
aas
jge
push
push
jno
xchg
outs
push
sub
fld
mov
xor
push
enter
out
cmps
push
or
bound
(bad)
icebp
dec
push
adc
leave
mov
fsub
and
adc
cmps
ror
ficomp
lock
arpl
xchg
sub
nop
xor
push
gs
ins
shl
xor
and
ds
shr
mov
addr16
loopne
mov
dec
add
add
idiv
sbb
push
outs
xchg
fiadd
sahf
inc
jge
cmp
(bad)
ss
jle
bound
mov
mov
sar
arpl
push
call
lea
add
pop
in
ss
xchg
mov
lahf
fist
out
add
sub
jmp
gs
out
inc
out
test
jg
(bad)
clc
ja
fbld
cmp
adc
or
mov
repnz
xlat
cmp
pop
repnz
aas
and
xlat
cmp
mov
mov
daa
jl
dec
fcomp
iret
xor
daa
fwait
mov
dec
cmp
repnz
jp
xchg
ss
jae
retf
jb
call
(bad)
jle
scas
loope
sbb
repnz
xor
lea
mov
idiv
jb
int
dec
mov
xlat
(bad)
mov
aam
in
xor
stc
out
pop
inc
mov
fsub
and
js
pop
pusha
call
mov
pop
test
cmp
retf
push
sbb
pop
jmp
repz
pushf
(bad)
int
fisttp
push
mov
push
sbb
mov
mov
jbe
imul
push
add
add
push
add
loopne
push
mov
lock
movs
call
imul
retf
mov
jns
adc
cdq
loop
inc
add
xchg
cmp
add
xor
push
mov
js
das
inc
inc
mov
push
dec
dec
imul
xlat
clc
ret
call
and
push
add
imul
push
add
enter
dec
xor
scas
xchg
sbb
mov
jle
mov
div
cmp
icebp
mov
ja
sbb
cwde
int3
ja
ror
dec
and
popa
in
les
sbb
cwde
dec
loop
hlt
cwde
cwde
push
pop
sbb
ja
icebp
jno
stos
cmp
ins
lea
imul
inc
mov
mov
aad
arpl
sub
pop
inc
cmps
pop
mov
out
aas
aaa
xor
idiv
inc
inc
lds
push
mov
cwde
outs
pop
mov
ret
retf
lock
sbb
dec
ret
push
loop
lea
idiv
lods
cmps
mov
bound
inc
int3
push
mov
sub
ins
sbb
arpl
or
pop
pop
and
adc
xchg
jle
mov
pushf
xchg
cmc
xlat
mov
dec
sub
sub
in
jo
jo
outs
mov
sbb
imul
outs
pushf
aas
add
mov
mov
xchg
retf
pop
cdq
xchg
and
(bad)
push
sbb
mov
or
sbb
pop
push
pop
cmp
jns
fnstenv
push
sub
mov
pop
xchg
sub
push
or
dec
les
dec
out
in
xchg
adc
push
repnz
mov
(bad)
jg
hlt
mov
mov
sbb
mov
sbb
loopne
inc
sub
outs
movs
pop
loope
pop
pop
sub
sub
mov
xchg
(bad)
fidivr
seta
sub
cmp
or
cmp
hlt
cmps
lea
adc
jge
push
js
enter
and
mov
(bad)
mov
clc
pop
dec
dec
pop
scas
out
lock
aas
ins
mov
inc
push
les
xchg
sbb
sub
mov
(bad)
out
and
jl
or
sub
aam
cmp
js
aaa
aam
cmp
imul
mov
das
outs
aam
push
dec
xchg
pop
out
call
push
or
dec
xor
pop
and
leave
lds
hlt
ret
pop
(bad)
rcl
shr
mov
mov
jno
push
call
nop
mov
(bad)
test
or
push
sbb
cdq
add
jo
loope
push
cmps
adc
ja
adc
call
out
cmp
mov
mov
pop
jno
cmc
cwde
push
sti
adc
dec
jecxz
stc
retf
(bad)
in
out
lahf
retf
repnz
dec
mov
cwde
xor
jle
jecxz
shl
sbb
jo
cmp
in
sub
xchg
mov
aad
dec
ja
push
ss
mov
mov
cmp
sbb
iret
or
sub
mov
or
sbb
aad
int3
std
aaa
imul
int
xor
movs
ja
repnz
pop
add
adc
sub
ja
cmps
repz
xchg
mov
xchg
mov
mov
or
cmp
dec
sbb
ss
fcom
aam
pop
mov
mov
idiv
mov
adc
xchg
int3
fist
jmp
cmp
mov
mov
adc
dec
dec
mov
add
lds
cmp
clc
xor
ror
mov
fcmovne
es
mov
cs
(bad)
(bad)
fmul
pushf
cli
lahf
mov
fmul
daa
push
stos
mov
rcr
movs
sub
adc
adc
daa
lds
jecxz
out
mov
jae
dec
in
out
jne
xor
daa
cmp
(bad)
mov
pushf
hlt
nop
or
popf
stos
fxch
aaa
ficom
xchg
inc
dec
push
not
(bad)
mov
shl
sti
xchg
push
mov
pop
imul
nop
mov
sub
inc
pushf
push
stos
fcom
cmps
bnd
or
int
add
sub
sti
mov
leave
push
leave
jbe
mov
xor
sbb
data16
pop
dec
jge
aas
add
mov
and
jp
arpl
dec
sbb
mov
push
pop
jge
push
inc
cwde
cmp
pop
mov
cmp
(bad)
or
js
xor
(bad)
xchg
push
lods
test
aad
(bad)
mov
add
mov
lods
adc
cmc
mov
push
or
clc
in
ror
xchg
mov
lock
pop
sub
leave
cmp
movaps
enter
addr16
mov
test
xlat
pop
sbb
pusha
and
sub
cmp
mov
(bad)
fnstenv
out
cwde
es
js
stc
sub
and
(bad)
mov
fcmovu
es
lahf
lods
out
or
mov
mov
sbb
dec
mov
push
ins
sar
pop
cdq
clc
mov
pop
xchg
xchg
sub
dec
ins
shl
ins
lahf
out
jae
cmp
ss
call
jae
(bad)
dec
in
call
(bad)
jecxz
xchg
test
ins
aam
test
cmps
addr16
popa
adc
inc
js
push
test
cmp
xchg
pop
mov
push
push
sbb
aaa
inc
inc
int
mov
jbe
pop
sbb
stc
retf
sbb
out
lea
fwait
jbe
inc
out
pop
das
jbe
mov
mov
(bad)
movs
(bad)
imul
jge
sub
nop
push
jno
fldcw
aaa
mov
test
call
fcmovbe
jp
aaa
int
cmps
jle
(bad)
mov
movs
xchg
aas
ss
stc
sub
mov
add
push
inc
add
sti
popa
cmps
mov
sahf
jmp
nop
rcl
out
in
sbb
pop
jne
jbe
cwde
sub
ret
mov
rcl
xchg
mov
xlat
mul
(bad)
fstp
(bad)
mov
mov
xchg
jnp
pusha
mov
lock
(bad)
mov
jae
fld
jmp
ror
inc
cmc
popf
add
data16
test
hlt
dec
loope
sbb
neg
(bad)
dec
dec
mov
push
in
ds
add
cmp
mov
pop
pop
mov
lods
daa
ja
jmp
fnstsw
xchg
jecxz
pop
jl
aam
cmps
pop
bound
repz
mov
or
ins
add
add
imul
mov
jne
loop
fdivr
or
lds
sub
aam
mov
mov
in
adc
inc
ins
jbe
loop
xchg
sbb
les
add
mov
adc
shl
and
cmp
aad
inc
mov
(bad)
pop
out
cmp
ja
sub
in
mov
imul
ds
shr
mov
lods
add
mov
and
or
inc
jae
pusha
retf
ins
call
in
ficom
leave
xchg
push
push
es
imul
movsx
ss
loop
cmps
inc
or
push
ins
jbe
popf
loope
push
push
ffreep
sub
out
inc
mov
clc
xchg
cmp
test
std
dec
mov
pop
out
aas
into
repz
stc
call
jmp
mov
stc
sahf
sub
push
test
pop
ror
fistp
int
loopne
jae
jo
xchg
adc
loopne
rep
dec
push
rcr
dec
das
aam
lods
fcomi
or
inc
fidivr
pusha
inc
enter
popa
push
push
and
ins
jmp
ds
repnz
jmp
add
push
imul
cmps
mov
add
aaa
jns
cmp
and
(bad)
pop
push
jbe
(bad)
popa
bound
scas
mov
mov
icebp
sub
jg
stos
jo
push
daa
shl
and
aas
ss
adc
jb
xchg
mov
bound
cdq
mov
aad
mov
mov
(bad)
mov
ds
push
out
dec
test
mov
jle
enter
retf
sbb
adc
add
test
test
mov
xchg
sbb
cld
sar
or
and
push
(bad)
cmps
pop
aad
pop
cld
push
cdq
loop
sbb
fs
and
add
push
push
fcomp
loop
bound
jmp
and
and
pop
cdq
sbb
xchg
xchg
test
loope
cld
and
sub
test
adc
sbb
in
cwde
cli
out
and
outs
(bad)
icebp
pop
mov
bound
mov
sub
sub
mov
scas
adc
adc
nop
xlat
or
jl
cmp
ins
inc
dec
push
inc
adc
test
push
jns
loope
movs
repz
cmps
sub
xor
fisubr
mov
adc
int
xchg
sbb
pop
loope
mov
mov
push
je
imul
mov
aam
into
mov
(bad)
push
pop
xor
mov
push
mov
ret
(bad)
fstp
loop
dec
imul
leave
push
pop
(bad)
dec
or
jne
ins
xlat
dec
cld
lods
mov
inc
inc
push
and
js
sub
leave
enter
mov
in
adc
shl
push
adc
neg
mov
dec
cs
out
sub
mov
jns
xchg
stc
mov
jbe
mov
imul
jmp
aas
pushf
idiv
les
inc
cli
jbe
hlt
xchg
inc
dec
(bad)
fld
lods
pop
cmc
add
mov
dec
mov
cdq
or
push
shl
jmp
idiv
aaa
inc
dec
xor
jns
mov
loopne
dec
loope
mov
stc
push
add
sub
lods
popf
ja
mov
out
aas
push
test
xchg
ins
rol
fnstcw
ret
scas
sub
jno
stc
lods
jle
mov
mov
mov
stc
sbb
loope
inc
inc
sub
jbe
mov
adc
jne
arpl
jge
mov
xchg
cmp
add
aam
jnp
daa
loope
cmp
sbb
or
fs
out
aas
mov
scas
jl
cmps
sbb
xchg
ror
dec
test
aaa
iret
or
aaa
pop
mov
cwde
les
nop
xchg
jae
retf
loope
jmp
add
jne
and
add
pop
outs
test
in
je
adc
test
ss
xchg
cmp
call
xchg
xlat
scas
fadd
movs
fcomp
sar
pop
push
xor
es
pop
sti
stc
gs
cdq
ja
test
in
es
mov
sub
push
mov
jbe
scas
jl
sbb
xor
push
add
pop
cs
loope
mov
mov
push
mov
in
push
int3
js
dec
or
mov
cmc
mov
jle
neg
clc
cmp
test
ds
xchg
cmp
pop
in
lea
pop
sbb
mov
pop
mov
test
jge
daa
loop
imul
pop
dec
cdq
pop
outs
enter
ins
in
pop
xchg
mov
fnsave
jmp
inc
xor
loop
push
and
xchg
pusha
ja
inc
sahf
outs
sbb
mov
dec
call
or
aaa
xchg
xor
call
imul
cmp
ja
retf
cs
es
ror
xor
mov
inc
in
pop
test
inc
repnz
push
add
and
dec
mov
sbb
mov
imul
aas
sub
sub
aad
sbb
cli
arpl
out
sub
jmp
(bad)
ins
adc
xchg
mov
sub
shr
mov
jne
pop
jne
sub
mov
jns
sub
mov
mov
adc
mov
test
push
je
sti
pop
xchg
cmc
sub
fwait
loope
mov
and
shr
sub
ror
mov
inc
pop
clc
(bad)
mov
pop
adc
dec
mov
pop
jle
cdq
mov
cmp
(bad)
push
fcomp
mov
xor
xchg
stos
stos
div
sub
hlt
ss
and
(bad)
mov
cmp
or
icebp
out
arpl
jbe
mov
cmp
cli
mov
adc
or
xor
fnstcw
mov
xchg
fwait
aam
adc
mov
pop
dec
dec
xchg
mov
pop
sub
call
xchg
cmp
ins
pusha
and
cmps
stos
(bad)
mov
div
sbb
aam
(bad)
sbb
fldcw
xchg
or
inc
mov
mov
xor
neg
mov
jmp
lds
xor
(bad)
aam
xor
add
mov
sbb
scas
fld
push
and
inc
mov
vandpd
mov
and
mov
or
mov
ins
or
or
pop
pop
arpl
retf
addr16
pop
sub
ins
movs
push
stos
cmps
test
xchg
ins
jecxz
pop
push
std
outs
sub
jbe
nop
sti
push
imul
adc
popa
mov
repnz
mov
rol
(bad)
and
sbb
xchg
dec
jmp
imul
fsqrt
sub
into
sub
cmps
cmp
pop
and
inc
mov
xchg
push
mov
mov
into
adc
xchg
pop
mov
mov
sub
icebp
jecxz
xchg
sbb
call
or
dec
xchg
add
fxch
es
arpl
sbb
inc
cmps
dec
xor
in
mov
mov
jno
xchg
idiv
mov
mov
mov
sub
adc
into
leave
retf
cmp
out
push
pop
jae
call
in
imul
xor
enter
adc
imul
out
sbb
test
push
jge
adc
(bad)
fidiv
push
jp
jae
ins
inc
mov
pop
shl
daa
ffreep
pop
mov
mov
int3
(bad)
sbb
add
push
dec
dec
test
sub
aaa
mov
call
adc
out
icebp
or
pusha
xchg
jnp
fwait
and
ffreep
sub
pop
call
cmc
and
pushf
sbb
cld
(bad)
stos
mov
retf
jmp
jmp
or
clc
sub
fwait
add
cmc
inc
adc
rcr
fsub
aad
xor
mov
jns
loope
sbb
cli
push
cwde
jo
xchg
adc
std
pop
es
inc
adc
ret
or
shl
jb
enter
jp
rol
mov
bound
aaa
aam
push
test
add
out
add
(bad)
inc
mov
(bad)
ins
imul
jmp
dec
push
fwait
push
iret
sub
mov
int3
imul
fld
aaa
and
fistp
shr
add
in
out
cmp
xchg
ret
leave
scas
test
(bad)
jecxz
jmp
mov
mov
inc
and
mov
(bad)
xor
push
repz
add
cdq
imul
dec
and
inc
scas
addr16
cmps
inc
push
sbb
pushf
sub
scas
into
inc
adc
repz
movs
xor
imul
add
call
stc
sahf
cli
cld
lea
sub
test
fst
mov
jb
pop
or
test
cdq
cmp
sub
xchg
adc
inc
cmp
sub
mov
cmp
out
outs
mov
imul
inc
pop
sbb
inc
push
mov
pop
mov
test
inc
mov
mov
popa
scas
xchg
sahf
(bad)
mov
fldcw
cmp
les
retf
mov
mov
or
mov
sbb
push
cmp
in
push
jne
or
adc
shr
mov
scas
cmp
pop
ins
dec
adc
pushf
arpl
push
dec
cwde
sbb
mov
cmp
ss
out
dec
ins
mov
inc
and
dec
sub
push
jbe
dec
sub
jg
jb
pop
mov
hlt
retf
or
push
jbe
or
imul
fbstp
pop
ja
mul
push
push
sub
inc
sbb
jg
add
cmc
nop
das
mov
push
mov
call
test
movs
fstenv
xlat
pushf
imul
add
or
shr
scas
(bad)
aaa
push
add
das
or
rol
add
popf
fisubr
xor
mov
sbb
xchg
out
imul
popa
sub
push
xchg
xlat
in
xchg
stos
mov
movs
shl
mov
xor
xchg
and
sbb
(bad)
test
out
adc
cmps
shl
fucomip
cmc
cld
push
jbe
fs
sub
rep
test
(bad)
fcom
pop
pop
push
pop
push
add
sbb
and
push
scas
sub
pop
ja
mov
enter
push
sub
in
loopne
mov
xchg
(bad)
and
les
inc
cwde
fild
test
dec
fisub
leave
cmp
add
push
push
aad
mov
pushf
mov
push
jne
loope
(bad)
imul
stc
dec
pop
pop
pop
push
pop
pop
push
or
dec
lds
scas
test
and
lea
mov
imul
xor
add
ins
mov
pop
(bad)
out
fcomp
sbb
push
sub
mov
xchg
fwait
jmp
ss
ins
out
shl
pop
adc
loop
push
in
test
cmps
cdq
mov
mov
(bad)
mov
ret
dec
lds
jns
(bad)
mov
loop
cmp
jge
mov
cmp
mov
mov
inc
sub
iret
(bad)
fild
sbb
movs
daa
clc
sub
fstp
cmp
dec
fidivr
bound
mov
xchg
mov
shl
and
sbb
add
in
or
xchg
inc
cwde
(bad)
mov
push
xchg
xchg
mov
vmovapd
pop
enter
js
inc
sbb
mov
leave
mov
jno
in
bound
mov
sub
xor
pushf
int
fisttp
stc
fisubr
lahf
add
enter
sbb
pop
ret
xor
and
push
ds
add
(bad)
fdiv
arpl
adc
fs
aam
or
jmp
pop
ficomp
and
push
es
repz
and
enter
fcomp
mov
dec
mov
dec
push
cmp
xchg
neg
aad
cmp
cmps
jne
ret
add
adc
mov
clc
enter
mov
inc
dec
jl
sbb
popa
lea
mov
movs
jmp
popa
or
or
cwde
sahf
sbb
mov
dec
clc
(bad)
out
jo
in
adc
ja
push
jne
mov
pop
mov
ss
push
push
cmp
pop
sbb
lds
call
sub
and
stc
fidiv
xor
pushf
push
cmp
dec
cmp
xor
lods
fidivr
lahf
sub
outs
aad
retf
push
pop
xchg
es
xchg
pushf
(bad)
mov
xlat
test
mov
cmps
shl
arpl
sub
sbb
mov
jle
mov
clc
cli
push
dec
aas
jmp
or
jbe
push
stos
int
ss
outs
std
xchg
lods
loop
out
int3
jmp
sbb
sbb
test
in
imul
in
sti
mov
push
push
sub
jae
sbb
push
push
push
pop
gs
mov
mov
mov
xchg
pop
aam
pop
jo
push
push
sbb
push
repnz
dec
push
mov
mov
gs
and
pop
(bad)
(bad)
or
dec
into
inc
sub
push
xor
in
push
mov
mov
ret
add
adc
imul
mov
pop
mov
lods
int3
xor
mov
int3
out
sub
mov
add
inc
ja
js
retf
dec
stos
mov
sbb
(bad)
leave
cmps
or
xchg
js
push
nop
inc
cmp
les
retf
data16
pusha
ret
mov
mov
adc
inc
popf
sahf
cs
stc
pop
cmp
mov
popf
cwde
or
int3
xor
lods
leave
(bad)
inc
inc
fwait
stos
xor
jbe
adc
adc
adc
xor
lods
cmp
iret
je
sub
xchg
sar
cdq
(bad)
mov
pop
neg
mov
xor
jle
dec
imul
inc
retf
ret
add
imul
xor
aas
xchg
inc
ja
push
pop
addr16
imul
mov
xchg
jnp
outs
mov
xlat
clc
movs
fldenv
imul
push
sbb
cli
shr
inc
xchg
leave
ins
mov
bound
neg
ins
out
js
pop
idiv
in
inc
push
aad
mov
dec
jmp
mov
mov
js
push
pop
shl
xor
rcr
in
repnz
fcmovbe
add
repnz
mov
dec
mov
pop
cmc
in
mov
jbe
dec
lods
dec
pop
cmp
jmp
cmps
mov
fwait
sti
retf
ret
xlat
pusha
mov
xchg
in
test
pop
arpl
mov
push
repnz
jecxz
test
adc
fidivr
add
enter
rcr
out
mov
shr
xchg
out
mov
pop
or
xchg
push
outs
jg
lock
xchg
out
and
or
mov
cmp
loope
fcomp
mov
out
data16
sti
dec
in
lock
push
fst
jns
sbb
(bad)
aas
or
jge
cwde
out
movs
gs
dec
stos
mov
test
mov
fdiv
xchg
shl
inc
sub
push
mov
dec
inc
pop
out
scas
aas
stos
fs
fcomp
in
ds
retf
xor
xchg
add
jmp
loope
cs
inc
mov
stos
int
pop
loope
test
int
loop
push
xlat
jb
xchg
ins
xor
cmp
lea
mov
inc
jge
or
test
dec
jo
dec
les
inc
pop
fwait
and
xchg
dec
test
retf
ret
jmp
jmp
pop
xchg
retf
movs
and
into
mov
ss
ds
xchg
fsubr
es
xor
gs
mov
dec
addr16
xchg
mov
cmp
fistp
mov
or
or
ins
cs
jae
rcl
pop
pop
and
mov
or
or
jg
adc
sbb
and
cmp
add
mov
fst
or
xor
jb
cmps
(bad)
pop
ins
pop
out
pop
test
inc
push
push
and
out
sar
lods
push
ror
sbb
clc
jle
clc
or
or
jg
pop
addr16
push
push
dec
test
mov
mov
cli
pop
shr
sar
cmc
nop
lea
cs
pop
mov
stc
sbb
popa
cdq
sub
xchg
adc
outs
lock
dec
call
les
jp
es
xchg
mov
stos
out
ret
shl
sbb
xchg
mov
fisttp
icebp
jne
(bad)
xchg
and
mov
mov
inc
imul
cwde
cmps
rcl
push
ffree
xchg
dec
xchg
ins
les
sar
shr
and
int3
pop
push
repz
movs
cmp
cmp
dec
mov
push
sbb
dec
pop
ins
pop
icebp
cmps
pop
or
leave
jmp
inc
bound
pop
loope
enter
add
adc
ins
lods
mov
mov
test
aad
loope
dec
and
push
pop
pushw
adc
inc
dec
daa
out
sbb
mov
mov
pop
imul
push
push
mov
cmp
jns
les
push
cmp
imul
cmps
push
mov
lods
sbb
sub
sbb
dec
mov
adc
add
movs
pusha
pop
push
xor
lahf
xchg
fst
mov
and
jnp
fcmovnu
inc
inc
jbe
mov
mov
test
xchg
js
fdiv
arpl
sbb
jg
pop
push
dec
mov
xchg
jo
xchg
popa
sti
int
shl
pop
sbb
enter
(bad)
aad
loopne
xchg
mov
mov
cmp
inc
(bad)
and
leave
or
or
jmp
jbe
repz
test
jecxz
gs
je
push
xchg
je
sub
daa
(bad)
ret
cmps
add
adc
mov
and
adc
cwde
es
pushf
pop
sbb
sbb
cmp
mov
fnstsw
xor
sbb
jge
jle
mov
xor
(bad)
test
xchg
rcr
cdq
lea
bound
or
call
mov
call
es
out
es
push
cmp
mov
sub
push
mov
fstp
aam
ficomp
in
in
in
dec
fmul
mov
mov
and
push
lods
gs
cmp
popa
enter
push
jmp
test
ror
pop
mov
(bad)
popf
int3
mov
scas
dec
add
mov
xchg
inc
pop
iret
sbb
fucomi
cdq
push
std
rcl
xchg
cdq
mov
addr16
fld
cmp
pop
rol
pop
neg
sbb
iret
scas
xor
cld
inc
(bad)
or
aad
push
fstp
cmpxchg
or
movs
dec
xchg
jns
inc
dec
test
jbe
jnp
mov
sub
cmp
std
cmp
sbb
and
sbb
es
jbe
pop
and
(bad)
idiv
stc
int
mov
mov
xchg
xor
dec
jle
ss
out
les
hlt
mov
es
ja
imul
fdiv
cmp
std
jb
rcr
xlat
jl
push
inc
mov
je
jl
test
push
ds
(bad)
mov
mov
je
add
inc
fwait
xor
push
cmp
leave
loopne
into
shl
xchg
out
dec
js
ret
cmc
pop
mov
je
add
icebp
cmps
mov
pop
rol
fidiv
pop
dec
and
mov
jge
in
dec
hlt
cmps
jl
aaa
jl
mov
xchg
fwait
xlat
sub
fnstenv
inc
cmp
mov
out
out
cwde
or
push
in
addr16
fmul
push
mov
xchg
xchg
add
icebp
cs
cs
pop
imul
dec
xchg
add
mov
js
fdiv
cmovs
or
push
imul
aas
mov
pop
aad
sub
push
clc
or
mov
cmc
pop
jno
jge
inc
cmp
outs
popf
ja
push
and
cmp
not
inc
mov
jecxz
cmps
lds
push
xlat
pop
stc
push
xchg
xchg
rcl
inc
jo
(bad)
jns
xchg
adc
jg
jp
int
mov
enter
into
mov
arpl
jne
js
dec
mov
fisub
bound
adc
mov
rol
out
jbe
in
dec
xchg
sub
and
mov
pop
jnp
enter
dec
les
test
mov
mov
movs
push
ja
movs
cdq
fldcw
sub
xchg
aas
inc
jecxz
push
push
rcr
cwde
adc
addr16
push
lds
adc
mov
jns
dec
(bad)
xlat
icebp
and
or
ins
pop
inc
test
lds
push
mov
or
pop
xchg
daa
push
test
ret
adc
cmp
jns
push
xor
and
adc
into
repz
sar
mov
sbb
push
jno
mov
mov
les
fs
mov
mov
pop
leave
push
push
mov
add
div
mov
dec
dec
jno
les
addr16
push
sub
cmps
push
call
cmp
mov
ss
sub
xor
in
aas
(bad)
in
push
dec
pop
leave
sbb
xor
jmp
out
add
mov
mov
cli
loope
ret
in
add
div
cld
dec
mov
sub
pop
inc
test
sahf
add
fisubr
pop
cdq
xor
bound
sub
adc
mov
mov
mov
mov
mov
fnsave
rcl
shr
inc
sbb
es
mov
jnp
enter
mov
test
cdq
aad
sbb
mov
push
sbb
xor
adc
jbe
les
hlt
sub
adc
adc
into
adc
jne
es
mov
mov
push
mov
stos
xlat
outs
in
movs
das
push
fldenv
aam
mov
sbb
out
and
jg
jne
xchg
add
(bad)
mov
ret
ds
jo
scas
stc
loop
sahf
call
ss
pusha
add
mov
mov
pop
iret
adc
imul
mov
dec
mov
mov
and
jne
out
sbb
rcr
mov
sub
lea
xchg
ret
mov
ret
dec
cmps
and
rcl
dec
ja
clc
jb
xor
arpl
out
fwait
or
sub
ins
pop
jnp
push
test
enter
inc
xchg
test
cmp
sbb
sub
jmp
push
fdivr
arpl
cmp
inc
xor
and
neg
cdq
int3
mov
xchg
cmp
loope
mov
leave
es
xchg
mov
out
or
mov
ins
dec
push
call
out
sbb
call
push
pop
pushf
sub
movs
data16
test
out
push
fwait
add
sub
lods
sbb
es
inc
mov
adc
shl
stos
mov
push
popa
ret
mov
push
adc
fild
mov
cmp
sub
mov
outs
and
adc
dec
imul
ins
test
popa
jno
fsub
fnsetpm(287
jns
clc
(bad)
sbb
mov
dec
and
inc
mov
push
test
test
lds
inc
sahf
inc
sbb
or
fcom
mov
arpl
js
mov
jbe
mov
sti
xchg
repz
in
(bad)
pop
int
fdivr
xor
outs
mov
mov
lock
call
mov
jb
test
mov
inc
sar
loop
test
cmp
xchg
call
inc
ret
push
jl
popf
xchg
scas
cdq
(bad)
in
xchg
ja
imul
pop
or
mov
mov
mov
push
(bad)
test
daa
pop
add
mov
in
aad
(bad)
cmps
outs
or
call
stos
out
inc
mov
test
push
lds
imul
pop
out
test
pop
mov
call
je
dec
mov
cmps
adc
xor
add
pusha
push
das
int
ss
push
hlt
outs
jl
dec
mov
in
test
jo
es
jb
icebp
ins
cmp
cs
adc
adc
mov
sti
sar
dec
test
cmp
adc
ja
ins
jmp
adc
aad
daa
or
xor
xchg
xchg
mov
test
or
dec
add
cwde
push
sbb
jo
pop
pusha
movs
mov
loopne
push
lods
mov
test
mov
push
pushf
jmp
shr
adc
mov
cmp
jge
(bad)
sub
imul
sub
mov
mov
out
push
int3
retf
lea
fdiv
stos
push
jge
jne
xor
sub
dec
shl
cld
data16
inc
clc
leave
aaa
fbld
fwait
mov
idiv
jg
dec
lods
xchg
cmp
xor
imul
pop
dec
ss
icebp
pop
cmps
mov
imul
mov
dec
or
(bad)
mov
or
fadd
xchg
dec
leave
(bad)
sbb
jnp
jge
xchg
fldcw
pop
(bad)
pop
cmp
sahf
mov
pop
imul
lahf
out
and
and
xor
rcr
mov
mov
cmps
mov
inc
or
imul
fwait
(bad)
sub
push
jle
sub
(bad)
(bad)
outs
cmp
sub
push
dec
clc
adc
mov
cmps
js
mov
and
mov
pop
retf
mov
dec
inc
push
retf
rcl
mov
leave
je
jle
fucomp
lods
dec
pop
and
push
dec
ins
jns
jns
ffree
iret
push
mov
inc
pop
cmc
js
js
call
ret
mov
xchg
movs
xor
test
in
pop
je
retf
cld
jl
add
cwde
fisubr
mov
aaa
xor
push
dec
fsubr
stos
push
ret
pop
bound
daa
call
(bad)
scas
inc
in
cmc
push
jb
pop
mov
xor
fld
pop
das
add
mov
cmp
in
cmps
pop
add
das
xchg
or
sub
fadd
sbb
data16
rcr
call
dec
mov
fsubr
std
dec
push
aas
imul
neg
out
xchg
pop
add
ss
jne
gs
mov
clc
mov
pushf
mov
cli
pop
jmp
push
inc
push
mov
sub
leave
stos
ja
adc
ror
jecxz
pop
xchg
ss
dec
rcl
sti
pop
jb
sub
aas
test
sbb
jnp
cdq
xor
shl
or
cmp
inc
lahf
add
ds
lds
mov
repz
neg
out
add
ja
mov
push
popa
loop
mov
les
loope
adc
int
ja
and
sbb
xor
and
pop
int3
mov
jmp
push
xchg
push
mov
pusha
mov
stc
stc
xchg
sbb
jns
fst
cmp
lea
repz
mov
ds
clc
test
cmp
test
aad
push
pop
mov
and
mov
sub
int
sbb
sbb
fistp
push
mov
sub
shl
cli
ror
(bad)
xchg
imul
cmp
xor
mov
jecxz
(bad)
fadd
in
mov
sbb
pop
in
shl
adc
pop
push
mov
popf
push
pop
in
mov
test
mov
push
cwde
mov
(bad)
loope
stos
fwait
and
rol
imul
sbb
mov
lahf
mov
pop
xchg
fld
mov
cmp
jno
dec
push
mov
and
nop
pop
outs
or
or
and
inc
and
addr16
mov
push
je
pop
retf
adc
sbb
int
jecxz
xchg
mov
xchg
fs
out
fs
xchg
frstor
cmc
push
xchg
enter
jno
jne
cld
inc
sti
mov
inc
xor
lods
add
jp
mov
fcomi
aas
mov
adc
mov
dec
push
or
inc
mov
stc
(bad)
cld
push
push
and
daa
xchg
mov
mov
test
mov
test
mov
or
cmp
sbb
push
sahf
test
fisttp
jg
push
hlt
mov
out
push
mov
das
out
dec
std
jbe
adc
add
cmps
jns
add
movs
int
aaa
into
dec
ins
jnp
in
lahf
mov
xchg
pusha
adc
sub
jno
push
jns
or
clc
cmp
stos
mov
popf
xchg
fs
xor
mov
xchg
add
dec
jmp
rcr
and
(bad)
xchg
push
xchg
pop
push
cmc
arpl
ja
cmc
inc
mov
adc
ins
inc
pop
scas
sub
mov
mov
imul
push
(bad)
jbe
add
or
adc
jno
cmp
lods
fsubrp
push
test
ret
sub
imul
enter
pushf
cmps
dec
mov
ins
test
jmp
outs
xchg
xchg
push
repz
and
xchg
cmc
psraw
nop
xlat
fst
mov
mov
ins
dec
jmp
loop
mov
es
sub
xor
mov
mov
mov
mov
pop
or
sbb
pop
imul
cmps
jecxz
adc
dec
ins
add
mov
ret
cmp
pop
mov
xchg
xor
cmps
(bad)
mov
adc
mov
jns
jns
sbb
pop
lahf
mov
dec
mov
gs
xchg
pop
sub
sbb
retf
test
imul
sub
in
dec
in
shr
and
sub
stos
and
fmul
push
(bad)
push
rcl
and
dec
push
(bad)
xchg
fcomp
inc
push
fwait
sbb
xchg
ins
jg
xchg
mov
popa
cmps
in
fwait
movs
leave
out
ret
push
test
add
ror
add
dec
lock
adc
into
cdq
mov
(bad)
sbb
inc
out
xlat
dec
jge
mov
adc
cmc
or
out
adc
jl
sahf
adc
mov
test
push
loop
test
or
outs
jge
xor
sbb
cmc
sub
les
mov
test
push
jge
mov
pop
jle
adc
leave
out
xchg
imul
push
stos
pusha
fnsave
dec
int
addr16
pop
pcmpgtd
inc
add
mov
mov
cmps
and
dec
into
rol
test
xchg
sbb
add
jecxz
cmps
pop
fst
jl
je
mov
mov
sbb
mov
dec
dec
jbe
push
retf
cmc
das
jnp
or
push
mov
xchg
hlt
(bad)
cdq
push
push
xchg
sub
jae
inc
addr16
(bad)
push
xor
stos
pop
popf
xchg
call
xor
lahf
std
push
aas
pop
mov
iret
xchg
sbb
scas
leave
cdq
mov
call
mov
xor
push
sbb
das
push
fcom
xchg
mov
adc
and
cwde
sbb
loopne
popa
pop
push
or
stc
int
and
jg
fsincos
inc
lds
out
out
loope
icebp
push
or
push
cmps
cmp
pop
and
push
or
mov
cmp
xchg
jns
inc
jnp
push
cwde
(bad)
cmp
push
inc
and
clc
popa
sub
xor
pop
jmp
cld
and
pop
xchg
imul
pop
dec
out
in
sub
xlat
cmp
or
pushf
xchg
or
loopne
mov
sub
and
pushf
and
cmps
sbb
dec
xchg
stc
in
mov
pop
clc
mov
popa
mov
push
jl
test
data16
pop
sub
clc
test
inc
(bad)
movs
adc
cmp
je
fistp
loope
mov
stos
mov
mov
pop
sub
add
sub
outs
mov
or
sbb
sbb
jmp
inc
imul
and
data16
repz
(bad)
cli
ror
fist
xchg
mov
fsubr
add
push
cdq
mov
inc
cwde
inc
jg
inc
cli
sub
pop
or
mov
adc
cli
imul
mov
mov
fimul
xchg
aaa
call
inc
rol
call
mov
dec
shl
cwde
out
out
std
call
lahf
sub
outs
jp
pop
inc
mov
mov
inc
cmp
pop
mov
cmps
push
push
sbb
jns
inc
lahf
es
and
cmp
mov
add
push
and
and
inc
jae
xor
xchg
mov
sub
stc
lods
sar
neg
fsubr
inc
es
(bad)
leave
into
sbb
and
sub
inc
pop
pop
jns
ds
add
fs
aas
movaps
push
push
cmp
loope
add
(bad)
add
sub
xlat
neg
les
xchg
fs
push
pop
mov
pop
push
or
scas
cmp
aam
xchg
jmp
add
xor
push
pusha
jl
leave
dec
jmp
and
xchg
bswap
jno
and
pop
mov
jae
sub
and
mov
dec
in
(bad)
shl
(bad)
jns
mov
mov
ins
ret
bnd
sbb
mov
pushf
add
neg
test
xchg
dec
(bad)
retf
sbb
test
loope
cmp
bound
xchg
add
push
push
pop
call
ss
jle
leave
jmp
mov
ja
shl
fnstcw
sub
mov
jecxz
fisubr
pop
fiadd
xorps
jle
addr16
pop
in
lds
ss
in
cli
cmp
les
sbb
outs
and
leave
sahf
mov
test
fiadd
shl
push
mov
and
sub
pop
sub
loopne
ss
xor
iret
ja
imul
xor
dec
js
jp
pop
add
xchg
pop
sub
cmp
out
ret
aam
(bad)
jns
lds
xchg
mov
jnp
xchg
ins
jg
mov
pop
inc
sbb
daa
rcr
sbb
lea
cmp
pop
xchg
sub
mov
(bad)
(bad)
sbb
dec
jg
add
call
push
enter
fwait
add
pop
out
call
repz
(bad)
clc
fwait
jne
js
ds
mul
fisttp
ss
sub
and
(bad)
xchg
call
push
sbb
je
jge
and
fnstsw
aaa
lahf
push
retf
mov
push
test
adc
es
mov
(bad)
add
pop
js
call
xchg
jbe
fwait
jns
and
jb
ret
push
cli
mov
push
mov
push
xchg
(bad)
adc
ss
pop
mov
daa
lock
clc
inc
push
out
pop
lods
add
test
jae
xchg
mov
(bad)
push
inc
jo
(bad)
dec
mov
xchg
mov
and
push
scas
inc
data16
cmp
jo
data16
rcr
loope
pop
test
fwait
xor
leave
icebp
leave
and
cmp
cmp
push
or
aaa
ss
fiadd
js
cmp
pusha
fdiv
in
mov
push
sub
xchg
bound
xchg
fcomp
scas
iret
repz
jno
jns
iret
pop
retf
push
cdq
cld
sti
call
pop
adc
sahf
dec
cmp
add
pop
mov
test
push
fsub
adc
push
cdq
movs
or
mov
test
test
push
add
out
adc
adc
add
fisubr
loop
cmps
cmps
or
hlt
mov
imul
dec
cwde
push
jns
cwde
xor
arpl
xchg
js
or
ss
xchg
mov
jae
cmp
mov
push
data16
cmps
sbb
rcl
pop
cmp
(bad)
das
mov
pusha
inc
aam
inc
sbb
loop
mov
cmp
add
aas
sub
test
leave
das
in
fdiv
adc
fnstenv
out
jns
pop
pop
leave
(bad)
out
jbe
xor
shl
jmp
aad
xlat
or
pop
jecxz
xor
jnp
pop
dec
imul
daa
out
js
xor
or
lods
pop
or
sub
fld
sar
leave
mov
xchg
test
mov
push
pop
int3
inc
ins
cmps
stc
mov
lea
pusha
mov
data16
pop
cmp
and
(bad)
adc
adc
or
hlt
fdivr
pop
call
push
clc
pop
cmp
jl
leave
clc
cwde
(bad)
mov
or
or
pop
xchg
and
ja
xchg
sti
dec
or
mov
popa
(bad)
popa
(bad)
test
outs
inc
jno
cmp
fdivr
test
sti
inc
mov
not
cmp
js
jns
pop
stc
scas
arpl
mov
mov
in
mov
or
pop
stos
sub
sbb
pop
aas
sub
inc
push
ja
in
xchg
ins
fidiv
inc
sub
sar
jecxz
jge
adc
inc
jmp
dec
leave
jno
push
mov
mov
daa
push
and
scas
mov
les
mov
(bad)
push
mov
sti
adc
inc
movs
call
or
inc
jo
push
js
je
mov
aam
fmul
(bad)
jl
add
leave
jmp
retf
push
mov
dec
iret
scas
lds
and
scas
mul
dec
out
(bad)
into
jmp
inc
xchg
mov
loope
dec
out
mov
hlt
js
lock
(bad)
push
mov
xchg
inc
lea
push
sub
idiv
jns
aam
sahf
jmp
js
stc
data16
push
bound
imul
into
test
cmp
sub
scas
push
aad
lods
push
(bad)
scas
sbb
sub
push
cmp
jae
sub
sbb
fcomi
js
test
pop
les
add
in
xor
sbb
data16
loopne
icebp
aas
(bad)
scas
xor
and
push
loop
int3
in
in
movs
xchg
sbb
sbb
jecxz
inc
scas
(bad)
fstp
xchg
xor
mov
sbb
and
pop
aam
dec
jno
jge
dec
xor
xchg
jno
pop
rcr
lds
es
sbb
dec
ja
scas
push
ins
call
mov
mov
jle
loopne
push
mov
leave
mov
clc
dec
popa
fs
cmps
lods
push
out
cs
fldpi
xchg
in
repz
ins
loopne
pop
dec
mov
dec
mov
ins
adc
cmp
push
cmp
mul
test
mov
xchg
jns
mov
ins
pop
iret
(bad)
stos
retf
daa
add
fwait
(bad)
fdivr
jno
add
push
jle
(bad)
dec
jbe
xor
addr16
mov
cs
pop
cli
push
jle
stos
cmp
inc
retf
xor
mov
call
aas
stos
int
neg
out
inc
dec
sub
cmp
xchg
ja
dec
jbe
inc
mov
fisub
sbb
ss
pop
loope
lock
ins
inc
mov
das
(bad)
loopne
mov
and
xchg
push
inc
jmpw
pop
stos
xchg
sub
shl
popa
aam
mov
(bad)
xchg
mov
icebp
in
dec
jb
das
pop
jne
adc
push
gs
addr16
idiv
arpl
adc
mov
inc
and
jns
xlat
fs
movs
imul
sbb
fsub
sub
add
fcomp
sub
dec
popf
dec
ds
aad
mov
out
mov
mov
imul
push
sar
arpl
add
pop
or
cdq
ja
sub
scas
loop
icebp
inc
stc
leave
mov
cli
sbb
ja
jno
mov
or
ror
or
jbe
cmp
jle
int
mov
mov
push
ins
int
fcmovbe
daa
(bad)
repnz
fldenv
push
imul
jl
adc
cmps
iret
sahf
xor
ret
cld
mov
push
sub
cmp
pop
jl
ja
lds
lahf
inc
lea
jns
out
out
jnp
push
fldenv
or
je
cdq
jmp
std
mov
cmp
mov
cdq
adc
out
adc
arpl
(bad)
jno
imul
adc
push
das
mov
test
fsubp
(bad)
fldcw
mov
hlt
pop
or
push
je
cs
xchg
(bad)
push
xchg
inc
loope
stc
push
or
cdq
mov
push
jmp
jg
jno
jmp
bound
cmp
sti
cmp
adc
mov
in
or
jb
cdq
hlt
aaa
sbb
enter
(bad)
adc
sbb
mov
pushf
push
int3
pop
outs
je
xchg
fdivr
push
pop
xchg
mov
xlat
jns
sub
or
add
xor
enter
cmp
icebp
cmps
dec
inc
sub
les
push
imul
pop
xor
stc
das
mov
xor
and
add
iret
bound
clc
lock
into
add
xchg
ds
loop
xchg
je
into
dec
std
inc
push
inc
xchg
add
mov
shl
or
std
push
mov
out
stos
cmps
imul
dec
mov
pop
(bad)
adc
push
dec
hlt
sahf
dec
sbb
repnz
or
sub
adc
aam
push
loopne
lods
mov
ret
fcomp
ins
pop
sahf
mov
mov
jp
push
lds
mov
dec
jno
dec
mov
int
enter
push
push
test
retf
stos
adc
nop
dec
ins
push
cs
xlat
retf
mul
inc
jnp
push
je
lock
mov
sub
daa
cmp
ret
dec
pop
fcmovbe
ja
js
les
mov
jbe
push
loope
adc
inc
jle
mov
into
imul
mov
hlt
enter
repz
div
lds
xchg
stos
pop
or
mov
xchg
loopne
pop
iret
fisub
xchg
jle
daa
cmps
fimul
aad
sbb
repz
push
cdq
stos
stc
sub
test
call
and
xchg
push
(bad)
cmp
shl
sbb
ret
push
mov
inc
nop
scas
pop
sbb
mov
repz
(bad)
sub
pushf
loope
inc
stos
ret
and
mov
jmp
mov
pop
xor
pop
or
dec
and
lods
clc
in
jle
fdivrp
in
pop
pop
push
xchg
adc
lahf
jp
push
sahf
jl
pusha
arpl
repnz
aam
in
out
or
jl
pop
sti
retf
call
cld
adc
or
in
fidiv
mov
inc
arpl
shl
inc
cmps
leave
movs
xchg
cdq
mov
in
ja
out
repz
inc
jne
fdivp
(bad)
push
xchg
push
dec
jp
push
jne
xchg
iret
push
fist
fisttp
stos
cmps
scas
jne
dec
sub
mov
push
xor
push
xor
mov
sub
mov
or
mov
scas
jecxz
adc
(bad)
sub
imul
inc
ret
out
pop
or
xor
lock
mov
fnstsw
cmc
push
clc
jl
imul
gs
rcl
retf
push
and
jmp
call
jmp
push
call
dec
push
jmp
outs
pop
mov
sub
pop
add
sahf
dec
mov
mov
test
cs
add
daa
mov
ss
js
ret
fisubr
mov
(bad)
popf
xor
xchg
dec
push
fisub
dec
sahf
adc
add
iret
push
fcom
ret
push
mov
cmps
push
fcomp
clc
in
outs
dec
jbe
push
call
pushf
jecxz
test
inc
cli
xchg
mov
jns
adc
lds
push
inc
test
dec
xchg
xchg
fs
out
jecxz
cmp
pop
mov
(bad)
lahf
stos
jb
push
adc
call
cmp
adc
push
push
push
jnp
test
neg
or
pop
xchg
dec
das
dec
push
imul
sub
jge
setns
add
mov
mov
popf
stos
loope
loopne
in
mov
pop
stos
mov
jecxz
push
pop
and
mov
fwait
mov
cld
xor
std
pop
and
sbb
xor
or
jmp
or
add
das
dec
stc
cmp
mov
push
cmp
sub
(bad)
jbe
out
arpl
pop
mov
sahf
movs
mov
addr16
jbe
adc
ins
jno
out
fs
push
xchg
push
pushf
mov
test
sbb
call
test
js
jno
sub
test
cmp
mov
mov
retf
imul
fsubr
leave
mov
jnp
jmp
inc
mov
(bad)
cmps
int3
pop
jbe
mov
iret
push
adc
cmps
leave
clc
pop
lahf
sbb
ins
loopne
ret
nop
push
adc
or
sti
xchg
push
test
xlat
(bad)
jmp
es
mul
data16
sbb
mov
pop
enter
adc
rcl
cmc
leave
into
inc
mov
stos
movs
daa
add
xchg
(bad)
dec
mov
call
dec
std
xchg
push
jmp
sub
fs
loope
cwde
adc
mov
inc
fcom
cdq
in
or
test
xor
loopne
fs
outs
mov
sub
dec
repnz
dec
xchg
mov
ja
jle
imul
mov
push
mov
mov
pop
fldl2t
push
sub
xor
xchg
call
dec
outs
or
push
cmps
push
xchg
test
add
jmp
ja
lods
add
test
adc
xor
(bad)
std
push
dec
xor
adc
push
sub
pop
xor
ror
dec
jne
leave
sbb
mov
fild
push
sub
and
push
jbe
or
mov
jo
sub
popf
neg
or
mov
bound
jmp
ret
xor
fcomi
xor
icebp
push
in
cmp
cmp
push
pop
inc
imul
fidivr
and
stos
xchg
shl
retf
(bad)
out
dec
jno
add
sahf
xchg
sbb
clc
enter
dec
imul
iret
jle
dec
jns
xchg
pop
pushf
(bad)
in
test
push
div
sbb
loopne
pop
pop
dec
jbe
adc
mov
push
es
mov
iret
inc
pop
imul
in
sbb
inc
aas
cmp
xchg
pop
add
sbb
movs
cwde
test
(bad)
addr16
pop
sbb
and
cmp
es
xor
mov
ret
hlt
movs
scas
push
jle
mov
cmp
jns
push
arpl
mov
mov
push
or
mov
jle
push
mov
sqrtps
stc
out
or
and
mov
xor
sbb
pop
mov
hlt
pusha
clc
inc
cmp
inc
and
test
pop
mov
xor
sbb
addr16
add
pop
lods
sbb
test
out
inc
jge
call
jmp
call
pop
inc
movs
fisubr
stos
inc
mov
out
loope
fmul
pop
pop
gs
scas
fdivr
lods
push
aas
push
test
and
inc
pop
aad
mov
sbb
rcl
mov
js
fsubrp
iret
js
fisub
cmp
cmp
outs
cmp
loopne
pop
adc
xchg
jb
iret
add
leave
mov
xor
cmc
and
cld
fdiv
xor
sbb
ins
mov
sub
pop
push
push
mov
xchg
hlt
cdq
repnz
(bad)
jmp
in
rcl
rcl
sbb
(bad)
lea
or
sub
fnstenv
fldenv
pop
loope
add
or
mov
sbb
pop
test
push
xchg
push
call
enterw
sbb
cli
lds
mov
mov
(bad)
mov
xor
lahf
ror
ror
(bad)
jecxz
jnp
mov
pop
popa
mov
pop
enter
push
jmp
mov
les
in
dec
jno
(bad)
lods
punpcklwd
ins
xor
jae
icebp
pop
test
cmps
pop
bound
std
xor
and
mov
gs
sub
ja
fisub
fucom
or
sbb
mov
jbe
mov
rcr
jl
xchg
ficom
bound
xor
pop
mov
and
xchg
ins
(bad)
mov
fst
pop
outs
pop
dec
das
push
push
fs
mov
mov
outs
adc
ins
aas
fidiv
add
fdivr
pop
lahf
mov
aaa
retf
xchg
enter
stc
sbb
fstp
aad
(bad)
or
cld
jbe
fimul
dec
fnstsw
and
adc
rcr
in
mov
movs
daa
cmp
mov
xor
out
cmps
cdq
add
mov
rcr
xchg
popf
cwde
hlt
or
push
aam
mov
xor
push
imul
ins
test
jge
mov
dec
outs
xor
xor
push
xor
jmp
mov
dec
es
dec
mov
sub
mov
pop
(bad)
repnz
and
fsubrp
or
sbb
and
sbb
out
stos
bnd
dec
mov
sbb
inc
fisttp
mov
pop
mov
icebp
mov
pop
xchg
mov
add
add
icebp
jno
scas
jae
sub
call
jecxz
pusha
jecxz
fcmovb
pop
mov
mov
ss
dec
push
adc
mov
jns
jns
arpl
mov
or
loop
ds
in
lock
add
test
push
stc
sub
jb
call
test
cwde
push
pcmpgtd
rcl
xchg
jecxz
sti
mov
inc
push
mov
scas
icebp
inc
jns
or
sbb
and
in
dec
xor
(bad)
fist
ja
imul
mov
retf
rol
jmp
adc
push
mov
dec
adc
dec
inc
imul
xchg
adc
lea
jmp
xor
in
(bad)
ins
and
xor
and
nop
movs
cld
inc
push
cmps
cs
cs
cdq
cmc
dec
xchg
popf
xchg
pop
sub
mov
jecxz
pop
fwait
pop
sbb
mov
jg
mov
mov
sub
xchg
push
dec
xchg
sbb
inc
add
cmp
pop
mov
push
aas
mov
(bad)
cmps
sbb
es
mov
pop
push
shr
fnsetpm(287
jae
xchg
and
and
and
xchg
cmp
cmp
rol
sbb
pop
xchg
cmp
adc
jns
in
and
rcr
mov
adc
popa
xchg
stos
dec
ror
adc
cmp
jnp
aaa
xor
adc
mov
aas
sub
mov
adc
adc
jb
xchg
sbb
clc
mov
sbb
fsubr
int3
cmp
add
imul
ret
retf
pop
ja
push
inc
adc
mov
aas
scas
sub
les
sub
push
jle
jbe
push
sub
pop
sbb
sbb
imul
add
popa
bound
test
mov
push
scas
jmp
fucomi
pushf
rcl
es
aas
pushf
add
mov
cmp
in
arpl
popf
out
jo
cmps
aad
sar
cmps
and
xchg
adc
ja
in
test
popf
jbe
cmps
fwait
inc
je
(bad)
sbb
popf
aad
ja
outs
cmps
fdiv
inc
mov
add
inc
dec
mov
adc
repz
mov
jbe
fwait
cld
dec
repnz
arpl
sub
lods
(bad)
sbb
add
xchg
out
pop
movs
cld
adc
in
push
sbb
lods
mov
(bad)
cmp
inc
push
add
aaa
jge
loop
into
sub
or
adc
cmp
mov
add
mov
mov
dec
sbb
jg
fwait
hlt
mov
sbb
mov
les
sbb
in
pop
inc
sbb
or
adc
xor
adc
sub
sbb
imul
cld
inc
movs
sub
shl
and
pop
xor
inc
inc
push
lock
or
iret
xchg
add
cmp
pop
int
test
sbb
repnz
retf
inc
jbe
bound
fs
and
cmp
sbb
js
dec
lahf
mov
test
push
mov
movs
mov
addr16
mov
outs
cmps
mov
pop
push
movs
mov
mov
clc
fldcw
mov
jmp
mov
pop
mov
lahf
(bad)
(bad)
scas
in
mov
test
sahf
out
cmp
inc
or
data16
mov
arpl
mov
adc
adc
sbb
clc
lock
test
repz
mov
ja
(bad)
jno
sbb
fcom
mov
xor
sahf
adc
imul
out
leave
shr
xchg
pop
or
in
sbb
test
push
mov
jmp
inc
enter
movs
pop
test
out
mov
rcr
add
ds
mov
adc
adc
jl
push
int3
adc
out
xor
rcr
pop
ins
iret
rcl
mov
cmc
xlat
aam
pop
js
inc
dec
sub
jmp
ds
fidiv
aas
in
imul
jb
lods
or
ins
fadd
mov
cwde
(bad)
or
sbb
shl
or
push
mov
or
aam
push
ror
and
sbb
mov
cmp
pusha
cmp
fsubr
hlt
inc
fisttp
cli
stc
cmp
sub
ss
xchg
aas
xchg
xor
adc
(bad)
jp
cdq
leave
cmp
(bad)
out
adc
scas
add
ss
(bad)
push
jle
ja
shl
ins
imul
pushf
jmp
aaa
sub
fisub
mov
(bad)
out
cdq
and
cs
sub
sbb
jmp
ds
dec
mov
cdq
pushf
aaa
mov
dec
stc
adc
test
xchg
push
add
push
or
addr16
pusha
jno
add
cdq
mov
dec
or
std
mov
aas
xor
push
jnp
sar
(bad)
cli
mov
movs
leave
pop
dec
push
ret
inc
mov
jo
and
push
test
fcomp
inc
push
aaa
arpl
inc
lods
xchg
in
sub
addr16
dec
jp
test
call
bound
mov
call
mov
adc
mul
add
sub
push
cmc
cwde
push
test
sbb
ss
mov
(bad)
push
loopne
and
jno
iret
mov
pop
dec
inc
push
jb
push
xor
popa
xor
mov
mov
test
xchg
(bad)
dec
xchg
mov
je
or
pop
push
add
mov
rcr
cmp
add
(bad)
fstp
mov
popa
inc
in
call
out
(bad)
and
(bad)
cmps
into
mov
aam
arpl
mov
jo
mov
nop
gs
imul
pusha
(bad)
scas
inc
test
scas
es
xchg
jle
push
mov
xchg
ret
cld
lods
mov
pop
or
int3
pop
in
adc
test
fidivr
pop
push
cld
pop
mov
pop
jnp
mov
ja
les
mov
adc
cmp
and
push
lods
int
mov
push
neg
ja
shl
pop
mov
imul
jb
xchg
mov
or
imul
or
inc
jmp
inc
jno
mov
popf
cmp
dec
jg
out
sti
in
xor
or
outs
pop
xchg
add
fst
dec
jns
xchg
sbb
mov
mov
cmp
loopne
or
addr16
sbb
out
(bad)
mov
retf
push
cmp
rcr
or
xor
mov
test
mov
cmp
or
mov
push
imul
sub
pop
(bad)
and
repnz
into
xchg
sub
adc
and
cmp
lahf
out
inc
cmp
sub
xchg
out
push
scas
xor
leave
imul
cmps
icebp
ret
jmp
push
(bad)
retf
add
or
jb
xchg
cmp
or
sbb
movntps
push
push
push
ins
mov
fldenv
sbb
pop
pop
es
push
dec
jbe
sbb
(bad)
pushf
ret
push
add
ja
stos
mov
mov
pop
pop
jnp
les
mov
ins
aaa
cmc
push
gs
not
fcomi
mov
sub
push
test
dec
pop
jb
xchg
lds
lods
(bad)
loopne
sbb
mov
mov
mov
inc
pusha
retf
inc
mov
movs
mov
mov
stos
push
pop
(bad)
or
les
push
dec
dec
push
movs
or
push
scas
sbb
enter
adc
pop
pop
aad
xchg
xlat
sub
sbb
addr16
inc
sti
mov
mov
test
pop
std
push
xchg
stc
inc
push
(bad)
mov
test
les
pop
dec
fwait
lods
div
mov
cmp
inc
jle
test
(bad)
shr
imul
push
test
adc
fiadd
adc
aas
xchg
add
add
sbb
mov
cmp
mov
outs
inc
mov
ret
bound
sub
int3
mov
fs
xchg
pop
or
mov
je
out
mov
adc
hlt
mov
ret
xchg
mov
or
xchg
push
xor
pop
das
mov
cs
aam
mov
std
push
inc
sub
sbb
inc
data16
neg
arpl
test
pop
mov
js
in
jbe
or
push
jbe
inc
mov
in
dec
call
outs
push
in
test
mov
fucomp
inc
rcl
andnps
dec
add
push
xor
or
mov
sub
pop
cmp
js
es
aas
add
rcl
push
push
sub
shl
inc
sbb
sti
and
nop
cmp
push
add
popf
aam
mov
mov
scas
cwde
push
and
add
jle
or
push
clc
jo
ds
test
ds
int
push
inc
ret
imul
pop
inc
and
jo
jle
cld
pop
sbb
xchg
inc
ins
pop
data16
jle
retf
mov
adc
lods
pop
mov
test
test
xchg
or
jecxz
aam
ja
sbb
cli
arpl
div
dec
mov
call
loope
imul
cmps
xchg
int
cdq
mul
(bad)
add
jge
push
jbe
adc
inc
adc
je
inc
cmp
fwait
inc
stc
mov
inc
loope
test
sbb
mov
adc
inc
mov
imul
imul
xchg
sbb
inc
pusha
pop
push
jle
mov
xchg
inc
cmp
repnz
cmp
rol
retf
test
int3
jecxz
or
jns
jl
and
int
out
mov
or
fisttp
ss
mov
cld
cs
jns
inc
bswap
mov
lds
mov
int3
mov
fst
jp
adc
xchg
gs
lahf
cmps
enter
xor
call
adc
cmps
mov
retf
repnz
mov
sbb
sahf
push
and
out
push
mov
arpl
cmp
xlat
fcom
(bad)
int3
clc
dec
dec
mov
lahf
pop
and
dec
sub
adc
fadd
xchg
push
push
imul
jne
push
mov
cdq
adc
call
cmp
ja
sub
push
dec
push
jmp
and
stc
sub
sar
leave
inc
pop
movs
jp
sbb
xchg
mov
adc
sbb
mov
cmp
sahf
call
ins
cmp
push
sub
je
dec
sub
add
adc
ret
in
jg
stos
cmp
push
mov
retf
sbb
or
cmps
ror
jns
pop
mov
push
jne
adc
xchg
mov
push
push
jno
gs
cmp
sahf
es
sbb
jno
cli
ds
mov
sbb
(bad)
js
in
sub
xor
mov
mov
cmp
(bad)
rol
xor
add
push
imul
(bad)
pop
push
retf
out
lods
mov
sahf
(bad)
add
retf
inc
mov
cmp
mov
jns
imul
cwde
adc
stos
jnp
mov
adc
adc
js
ins
push
xchg
in
call
dec
inc
stc
shr
aaa
xlat
pusha
mov
pusha
std
or
sub
push
pop
and
ins
mov
lds
fstp
xor
daa
(bad)
xchg
test
ins
inc
outs
scas
lea
sub
into
dec
sbb
sub
push
push
bound
cdq
dec
push
test
fsubr
mov
fnstenv
mov
dec
mov
mov
sub
sbb
dec
imul
data16
cmps
stos
mov
xchg
(bad)
shr
cwde
(bad)
out
and
les
mov
cmp
repz
daa
clc
mov
inc
fisubr
xor
push
mov
pop
sub
cmps
mov
mov
jnp
addr16
mov
xor
cdq
dec
mov
xchg
cmp
in
xchg
data16
pop
out
xor
xchg
ret
pop
(bad)
push
daa
aaa
inc
xchg
push
mov
js
xchg
sbb
and
mov
jb
ret
mov
xchg
adc
pop
lods
sub
push
xor
and
jne
jcxz
cmps
(bad)
les
into
stc
cmp
das
inc
mov
and
nop
fisttp
inc
fstp
jnp
push
loopne
inc
shl
inc
pop
xor
add
daa
push
sub
inc
bound
or
clc
mov
test
enter
pop
dec
xchg
jbe
xor
pop
sahf
xor
imul
lahf
test
arpl
xlat
ret
and
xchg
push
into
stc
mov
xchg
ss
cmc
(bad)
bound
addr16
adc
or
cmp
addr16
sub
sbb
sbb
mov
mov
xchg
xor
xor
push
stos
call
mov
push
fild
jmp
push
sub
in
clc
ret
pop
aaa
dec
add
(bad)
xor
cmovbe
lock
sbb
(bad)
dec
rcl
in
(bad)
rcr
sahf
xchg
mov
add
pop
out
mov
sbb
sbb
and
icebp
jb
mov
and
aaa
sbb
pop
je
call
pop
push
sub
or
(bad)
sub
mov
pop
clc
test
leave
(bad)
ins
mov
(bad)
push
fisubr
(bad)
jecxz
and
adc
pop
mov
sbb
pop
push
mov
jmp
inc
mov
dec
mul
aad
hlt
sub
add
out
and
mov
sahf
lahf
jge
mov
ret
inc
aas
pop
hlt
dec
out
xchg
outs
outs
pop
and
mov
lods
and
(bad)
dec
test
repz
ins
fdiv
mov
jns
cmp
pop
or
bound
jg
xchg
pop
ds
call
xor
xor
mov
call
out
push
dec
hlt
cld
ret
add
pop
xchg
xchg
or
xchg
xor
(bad)
cmp
adc
sbb
fcom
ret
loope
jle
rcl
fld
jns
imul
or
mov
call
pushf
leave
pop
bound
pop
adc
or
xor
mov
es
pop
push
rcr
outs
mov
and
or
ficom
or
shr
outs
cmp
xchg
daa
pop
pop
mov
pop
mov
enter
mov
jne
daa
xchg
ja
enter
dec
adc
jbe
das
inc
ins
aaa
les
xchg
(bad)
xor
xchg
sub
outs
mov
xor
mov
add
adc
sbb
xchg
xchg
out
in
(bad)
mov
ret
mov
dec
sbb
or
mov
movs
mov
out
push
push
mov
imul
inc
and
mov
ss
inc
cld
data16
es
daa
mov
mov
pop
mov
daa
push
pop
(bad)
aad
mov
out
cmp
push
xchg
pop
adc
xor
add
dec
ins
fdivr
ficom
pop
mov
or
cmc
xlat
add
or
dec
int
(bad)
or
mov
push
xor
icebp
fbld
dec
test
cmc
mov
mov
outs
test
outs
pop
je
repnz
pop
inc
mov
xchg
xchg
cli
shr
lds
out
mov
push
bound
push
push
(bad)
sub
xchg
xchg
push
push
jns
in
shl
or
add
push
test
pop
ja
push
cmp
dec
mov
jo
lock
iret
pop
or
sbb
dec
mov
cs
data16
dec
(bad)
or
pop
div
inc
jmp
ja
mov
ret
mov
inc
mov
imul
fincstp
push
sbb
and
sbb
xor
add
int
xchg
or
or
inc
or
push
mov
cmc
dec
push
pop
out
dec
cmp
es
lahf
inc
jg
std
inc
mov
aaa
pop
add
inc
imul
jbe
and
(bad)
addr16
push
sub
(bad)
js
jge
jae
inc
mov
repz
repz
xchg
mov
leave
inc
jbe
dec
add
jns
add
scas
cmp
sub
int
jmp
cdq
add
mov
les
sbb
inc
dec
jbe
mov
repz
ss
imul
cmc
push
test
popa
inc
outs
shr
jns
jmp
ins
push
mov
cs
test
ret
daa
outs
ins
(bad)
push
movs
xor
mov
leave
and
adc
jle
dec
cmp
popf
fldcw
lea
test
and
adc
es
or
aad
or
adc
test
in
mov
push
mov
jecxz
dec
push
lahf
fisubr
ret
push
mov
nop
cs
test
jbe
jp
out
jmp
fwait
sub
xchg
sbb
xor
inc
ins
in
sti
retf
aaa
out
mov
retf
rsqrtps
or
jnp
adc
cs
es
push
imul
mov
addr16
rcr
loop
sti
mov
sub
cmp
jne
fldz
sbb
push
push
ins
in
add
pop
sahf
xchg
sbb
shr
dec
fs
sbb
or
xor
push
outs
push
push
stc
mov
pop
pop
into
sub
ror
xor
iret
outs
bound
and
cli
push
sar
and
and
popa
push
shl
addr16
push
dec
and
mov
push
outs
ret
cmp
xchg
push
xchg
sub
out
xor
push
jge
rcr
popf
movs
fwait
bnd
clc
retf
sbb
nop
or
push
lahf
pop
xchg
xchg
inc
inc
loope
jno
adc
fisub
mov
push
fadd
add
fnstsw
ins
gs
cmp
sbb
aas
(bad)
fidiv
sub
or
in
pop
daa
sbb
pop
mov
xchg
pop
mov
cmps
movs
sbb
push
stos
iret
in
or
push
sub
dec
pop
nop
xchg
enter
in
(bad)
retf
lods
mov
jp
in
jns
outs
call
cwde
xchg
jmp
jne
push
jge
or
push
scas
(bad)
mov
pop
inc
add
leave
in
test
mov
icebp
ja
push
cmp
mov
stc
inc
stc
push
leave
hlt
mov
mov
cmp
ins
mov
mov
bound
pusha
mov
cmp
stos
mov
hlt
aam
mov
mov
add
fiadd
ja
xor
xchg
bnd
out
mov
adc
in
and
js
(bad)
out
lock
mov
and
cwde
dec
les
xchg
test
repnz
inc
jno
pushf
add
push
data16
bswap
cld
shl
(bad)
mov
jno
push
lods
push
push
sti
or
xor
call
dec
xor
mov
or
or
call
xor
outs
cmp
fwait
retf
jmp
and
mov
push
sar
mov
sub
xor
ins
xor
in
or
xor
inc
xchg
int
inc
sbb
adc
pop
fwait
xchg
or
xor
fwait
add
call
call
idiv
cmp
sub
xchg
outs
cld
mov
loope
nop
mov
lds
clc
js
mov
jo
sub
and
pop
mov
push
jne
in
fdiv
inc
inc
mov
xlat
leavew
pusha
cmp
dec
push
lahf
cmps
or
lods
ret
ss
repnz
out
les
aam
fisttp
inc
or
mov
or
and
jmp
int
mov
(bad)
retf
pop
dec
xor
pop
call
jbe
dec
add
mov
inc
ret
jp
push
mov
stos
cmp
mov
popf
dec
div
dec
fld
adc
adc
push
mul
pop
fwait
ja
pusha
aas
loopne
les
js
(bad)
jmp
ret
imul
test
mov
mov
and
sbb
retf
cdq
(bad)
pop
xchg
inc
sbb
push
shl
pop
xchg
es
adc
jno
and
fnstcw
pop
xchg
fwait
(bad)
mov
call
outs
pop
inc
jl
xor
pop
xchg
outs
retf
ss
mov
push
mov
dec
loope
push
les
xor
test
inc
dec
mov
(bad)
mov
ret
fimul
sub
pop
cmc
pusha
sahf
jb
jo
fcom
jbe
cmp
jbe
mov
fsubr
shr
fs
or
fisttp
les
out
movs
inc
icebp
push
pop
mov
test
iret
into
push
je
xor
(bad)
leave
and
daa
lea
mov
mov
mov
in
pop
imul
(bad)
ror
enter
push
cmps
inc
loop
ds
aam
call
loop
mov
push
into
(bad)
dec
adc
xchg
dec
sbb
push
ins
mov
pop
pop
jecxz
out
(bad)
in
and
sub
inc
ret
lods
es
ror
(bad)
out
lods
sub
loop
(bad)
mov
outs
xchg
or
call
test
ffreep
push
mov
das
cmc
push
stc
mov
dec
cmps
jbe
cdq
imul
out
daa
add
es
jmp
sub
add
xor
(bad)
shl
out
dec
cmp
jne
xor
cmp
stc
scas
pop
push
pop
dec
test
pop
test
test
mov
add
jne
xchg
sub
pop
adc
imul
lods
xchg
call
sar
push
cmps
pop
mov
cmp
shl
(bad)
call
mov
ds
push
cld
clc
ror
lock
jb
sub
inc
adc
jne
cmp
xor
leave
loopne
test
int3
xchg
bound
ret
push
std
imul
gs
in
jge
mov
cmps
fldenv
mov
jbe
daa
shld
inc
push
and
sub
pop
jmp
data16
aaa
sub
rcl
dec
xchg
mov
fidivr
(bad)
(bad)
and
push
xor
pop
adc
test
add
imul
popa
je
outs
out
adc
cmp
out
jbe
add
out
fcomi
imul
retf
pusha
cwde
or
stc
jno
movs
test
repz
xor
stos
out
xor
xchg
inc
aam
les
shl
mov
push
inc
or
mov
dec
mov
mov
shl
cmp
call
or
imul
std
or
xor
mov
adc
cmp
sub
popa
sbb
inc
imul
cwde
xchg
(bad)
clc
jno
pop
fs
(bad)
(bad)
pop
fdiv
inc
cmps
mov
fadd
fcom
addr16
jbe
test
jl
sub
mov
mov
out
lea
std
nop
loope
fsubp
mov
mov
adc
add
lahf
stc
sub
cmp
push
jo
push
je
test
sahf
in
mov
mov
sub
psrld
push
rol
cli
adc
and
imul
xchg
adc
sti
add
xor
push
mov
pop
test
leave
jg
out
sub
mov
and
add
dec
movs
rol
sbb
in
mov
or
fild
xor
fistp
test
or
and
push
push
ds
aaa
cmp
cdq
in
pop
int3
mov
sub
aaa
sub
mov
push
clc
cmc
jecxz
push
pop
xchg
mov
mov
jecxz
movs
jno
mov
js
jbe
xor
cwde
icebp
mov
int
sbb
adc
and
pop
pop
or
mov
and
nop
loope
pop
xchg
jbe
ja
cmps
jns
jge
imul
out
leave
sub
lods
inc
jg
sbb
sti
fptan
cdq
cs
xchg
jg
mov
push
(bad)
rcl
sbb
ds
add
xchg
dec
cdq
std
es
xchg
xor
leave
jmp
inc
push
push
xchg
mov
into
sbb
idiv
mov
aad
sub
ret
mov
cld
out
and
cli
pusha
inc
push
sbb
push
or
add
mov
mov
xchg
dec
out
shr
mov
lods
(bad)
inc
mov
in
push
dec
cmp
sbb
xchg
in
or
mov
add
jecxz
pop
xor
jle
sbb
enter
aad
data16
adc
mov
repnz
mov
jmp
fistp
pop
or
fs
push
fndisi(8087
fwait
mov
cmp
push
js
enter
sub
mov
and
js
pop
and
add
into
jge
xor
shl
ds
shr
sub
or
cmp
call
aam
add
std
dec
shr
(bad)
cld
aam
push
int
xchg
jno
dec
repz
adc
push
jnp
dec
leave
int3
push
and
pop
icebp
aam
jle
outs
pop
mov
or
ss
or
ret
cmp
push
jns
pop
mov
in
cmps
push
je
sub
xchg
inc
arpl
xor
cs
sub
call
out
ss
push
sub
or
adc
cs
call
imul
retf
fcomip
cmp
iret
push
cmp
daa
neg
cmp
cdq
js
in
push
add
popa
sti
(bad)
sub
out
fcomp
mov
in
retf
clc
test
ss
add
mov
fdiv
cmc
std
jb
add
mov
js
xor
xchg
repnz
xor
hlt
inc
ret
pop
aad
sub
sbb
loope
pop
jne
or
jge
ror
jno
lds
and
iret
ficom
push
adc
into
jns
inc
jmp
mov
loope
lahf
xchg
leave
out
pop
movs
mov
js
les
das
xor
ja
xchg
and
dec
(bad)
pop
add
dec
aam
jb
push
dec
jle
sahf
popf
xchg
mov
cli
jmp
adc
mov
test
not
mov
xchg
aaa
pop
sub
jecxz
fcomp
call
aaa
push
mov
mov
(bad)
fnsetpm(287
ret
icebp
call
hlt
cmp
ins
mov
mov
cld
std
dec
test
cmp
pop
ja
jmp
test
mov
in
cmps
cmp
pop
(bad)
test
lds
add
jge
jns
jmp
aaa
inc
inc
jns
fcmovb
daa
push
loope
xchg
xchg
pop
adc
jns
mov
jae
retf
test
sar
push
loop
mov
fiadd
mov
add
jbe
mov
repz
mov
lods
ins
hlt
movs
xchg
mov
int
dec
xchg
and
scas
popa
fldln2
dec
icebp
mov
jno
xchg
div
push
add
ja
xchg
mov
icebp
push
lods
xor
mov
dec
jmp
push
cmps
sahf
or
jmp
movs
mov
lds
ja
inc
pusha
repz
ins
sahf
jns
pop
imul
(bad)
push
xchg
xchg
sub
(bad)
cmps
imul
or
pop
adc
mov
fstp
ins
push
xchg
mov
cmps
adc
lods
cld
sbb
mov
mov
jecxz
nop
cmp
jb
mov
push
cmps
or
inc
jo
dec
cwde
inc
xor
and
lea
jo
or
or
and
xor
pushf
in
mov
sub
cli
(bad)
shl
aad
(bad)
mov
push
stos
push
pop
or
xchg
(bad)
add
je
inc
(bad)
mov
mov
pop
cmps
sbb
dec
xor
and
jb
mov
leave
mov
xchg
test
sub
out
mov
aad
pop
stc
pop
xor
sti
cld
test
or
and
js
push
call
imul
jns
fsubrp
cwde
not
xchg
mov
mov
or
mul
lods
cmp
hlt
aam
push
pop
int
mov
imul
jae
adc
jecxz
movs
mov
(bad)
push
arpl
push
pushf
mov
cwde
dec
cdq
inc
fst
arpl
mov
or
mov
je
aaa
or
test
mov
push
pop
sbb
imul
into
(bad)
mov
push
out
popf
mov
aam
pop
inc
clc
into
and
cdq
pop
xchg
into
lahf
test
in
loope
mov
sub
call
or
jb
shl
je
jne
test
push
push
rol
and
inc
retf
call
mov
mov
mov
and
mov
xchg
push
xchg
fld
cdq
aam
mov
cmp
movs
test
test
div
adc
aaa
call
repnz
add
in
dec
ror
retf
sbb
cmp
stos
(bad)
jl
mov
sbb
dec
scas
lods
sub
dec
dec
mov
popa
add
push
mov
mov
les
xchg
dec
mov
mov
or
mov
xchg
out
fisub
or
(bad)
pop
jp
inc
cdq
addr16
mov
rol
pop
imul
sbb
and
(bad)
push
lock
pop
dec
mov
jmp
icebp
leave
stc
jl
std
popf
std
jge
aam
imul
sub
sbb
mov
in
dec
cmp
mov
in
in
ja
and
pop
jno
jbe
pop
int
cdq
mov
pop
repnz
js
mov
and
clc
mov
cdq
xor
(bad)
fistp
xor
enter
nop
mov
and
xchg
mov
sub
imul
and
mov
xlat
fidivr
or
jg
out
mov
add
mov
test
pushf
add
and
popa
ja
repz
cmp
imul
adc
dec
test
arpl
mov
dec
adc
fwait
js
xchg
mov
inc
push
repz
jmp
retf
ins
and
mov
adc
mov
ret
mov
(bad)
sbb
cmp
mov
repnz
cli
pop
pop
mov
mov
inc
in
mov
lahf
pushf
mov
(bad)
inc
leave
xlat
or
ins
push
adc
cmps
movs
outs
inc
push
sbb
cmp
mov
push
(bad)
adc
lods
pop
sub
sub
dec
jg
lds
mov
or
out
test
mov
mov
or
jmp
jae
mov
movs
cmp
and
adc
sub
(bad)
xor
in
jecxz
xor
adc
pushf
jge
or
movs
out
repnz
push
dec
push
jg
scas
dec
mov
cmp
xor
cmp
xor
xchg
sar
add
and
je
es
or
adc
js
stc
sahf
push
cmp
dec
dec
sbb
repnz
paddsw
cmp
mov
inc
retf
xchg
nop
jne
or
sub
test
pop
imul
sub
xchg
mov
cmp
xchg
mov
out
sbb
or
inc
es
xchg
sbb
mov
inc
scas
out
dec
mov
cld
pop
push
je
jg
dec
jae
test
xchg
mov
xchg
cwde
mov
push
data16
add
xchg
inc
cmc
add
mov
ja
xor
ficomp
enter
mov
(bad)
in
aad
cmp
imul
jne
dec
add
mov
pop
outs
pop
xlat
push
mov
push
jmp
or
mov
push
adc
aam
jmp
jp
dec
jno
and
xchg
push
std
ja
repnz
sbb
jp
or
and
pop
out
mov
xor
xchg
in
dec
ret
and
mov
test
sub
popf
sbb
jg
sub
pushf
xchg
push
test
cli
and
rol
call
inc
sbb
dec
stos
loop
arpl
mov
mov
push
inc
(bad)
(bad)
sahf
add
push
call
push
push
shr
inc
js
jmp
scas
xor
in
in
push
clc
mov
test
jmp
ins
pop
dec
stc
add
arpl
xchg
pop
out
pop
xchg
adc
int
ffree
mov
ss
cmp
in
hlt
test
dec
lahf
pop
xor
movs
and
cdq
xchg
mov
sbb
adc
and
leave
xchg
lock
fadd
mov
cmp
xor
repz
leave
or
push
pusha
mov
sub
push
xchg
sub
push
add
test
pop
pop
into
xchg
ja
and
scas
nop
push
xor
pushf
repnz
ins
cmps
jl
push
ret
out
lea
bound
mov
xchg
(bad)
mov
test
jmp
jecxz
xor
(bad)
scas
push
cmp
push
xor
inc
push
mov
clc
sti
in
mov
daa
mov
mov
xor
inc
xchg
mov
cmp
fld
pop
mov
xor
popf
(bad)
and
pop
dec
xchg
jmp
cwde
jmp
xor
retf
jecxz
pusha
icebp
fcomp
cli
imul
pop
fdiv
push
xor
inc
pop
mov
inc
cdq
leave
cmp
hlt
fs
retf
fcomp
cmp
cmp
push
mov
test
dec
mov
out
fnsave
mov
jmp
jns
mov
jmp
sti
adc
sti
mov
push
pop
test
and
(bad)
inc
ret
add
jns
add
sbb
int3
not
push
sbb
lods
mov
cmps
add
rol
repnz
out
mov
dec
push
mov
cmps
jge
xchg
ss
imul
retf
bound
adc
mov
idiv
cs
in
pop
mov
call
inc
leave
jbe
js
mov
(bad)
lea
fwait
aam
jl
into
pop
jno
push
pop
push
(bad)
ja
mov
rcr
cmp
stos
std
cwde
movs
or
xchg
gs
mov
ror
repnz
test
fldpi
mov
aaa
xchg
neg
mov
retf
mov
int
pop
jmp
dec
sub
mov
jo
mov
add
outs
div
jmp
shr
movs
dec
pop
cld
inc
or
enter
fmulp
call
and
cmps
daa
ja
xchg
push
out
or
sahf
imul
lods
jae
push
add
xchg
dec
xchg
imul
fistp
xchg
jns
xchg
cmp
jmp
in
and
pop
jns
pop
mov
loopne
retf
jmp
mov
adc
inc
jb
test
mul
pop
and
ror
dec
data16
push
rcr
cmp
popa
into
cmps
test
imul
lds
mov
rcr
cli
lea
pop
xchg
cdq
ret
out
(bad)
fist
sbb
adc
arpl
inc
imul
mov
mov
sub
jge
call
pop
mov
sub
mov
sub
leave
jb
clc
dec
inc
pop
rcl
push
popf
inc
js
aas
dec
fidivr
cmps
dec
outs
nop
movs
enter
adc
mov
sbb
push
outs
inc
xor
adc
retf
cmp
mov
test
adc
xor
push
or
and
(bad)
rol
push
jg
xlat
add
dec
arpl
gs
test
cmp
cmp
es
pop
jg
outs
cmp
enter
gs
test
and
rcr
aaa
pop
mov
rcl
fs
aad
pushf
push
pop
sbb
test
ss
mov
mov
int
mov
shr
xchg
sbb
nop
daa
nop
loope
inc
push
inc
jns
test
adc
movs
in
ss
gs
cmp
js
push
mov
push
fisub
sub
lods
pop
test
arpl
loopne
add
outs
ss
or
test
pop
jmp
mov
sub
jg
mov
movs
cmp
mov
push
push
sbb
fmul
std
mov
stc
ror
(bad)
clc
(bad)
loop
mov
inc
cmp
mov
scas
stos
xchg
mov
dec
xlat
(bad)
aas
loopne
(bad)
cwde
push
(bad)
dec
or
cmp
push
or
lock
jle
add
stos
push
out
test
cmp
dec
cmp
xchg
int3
push
sub
cwde
in
lods
test
xchg
fs
leave
aaa
mov
cmps
ds
call
fsubr
(bad)
sahf
idiv
dec
jmp
ret
fcom
xor
daa
pop
push
fiadd
add
sbb
gs
pop
pop
xchg
mov
pop
push
push
push
dec
aam
add
push
pop
add
dec
pop
dec
mov
ins
dec
inc
inc
int
outs
push
mov
out
sub
jecxz
lea
push
jmp
(bad)
dec
imul
ja
data16
sbb
out
sahf
dec
add
pop
ficomp
mov
jae
rcl
adc
test
hlt
mov
xchg
xchg
mov
bound
jg
iretw
mov
outs
(bad)
dec
pop
xor
hlt
pop
loope
inc
cmc
test
fist
pop
retf
add
pop
fiadd
inc
pop
cmc
pop
push
repz
dec
pop
aas
cdq
shl
loopne
int
push
mov
jg
std
and
into
retf
mov
mov
scas
xchg
jg
mov
jbe
push
mov
pop
nop
mov
add
ret
pop
xor
stc
adc
jmp
jbe
and
dec
inc
inc
call
cmp
(bad)
fst
xchg
div
ret
jge
int
mov
jp
xchg
rcr
imul
dec
mov
imul
xchg
and
mov
cs
imul
loope
mov
and
lods
cmp
es
adc
and
mov
mov
pop
sub
dec
scas
mov
inc
mov
mov
jp
pop
push
dec
adc
jle
pop
cmp
cmps
int
xchg
imul
mov
sub
push
imul
icebp
pop
mov
sbb
cmp
data16
aaa
cli
popf
push
loope
scas
cmp
rol
mov
(bad)
call
vunpckhpd
hlt
call
sbb
pop
test
inc
int
outs
enter
jmp
sbb
imul
je
(bad)
inc
fsub
nop
xchg
out
xlat
(bad)
pop
fstp
ins
sbb
std
and
dec
(bad)
mov
ins
mov
cdq
jmp
jae
dec
xor
jbe
shr
jle
cmp
test
out
leave
push
jb
xchg
imul
jne
repnz
adc
sub
jne
cmps
jp
cmp
sbb
mov
popa
or
ins
int
in
bound
pop
imul
sbb
fldenv
inc
cs
mov
xor
cmp
test
hlt
ds
add
mov
jo
enter
shr
push
jmp
rcl
jnp
stos
push
xchg
stc
popa
aaa
and
inc
inc
in
dec
mov
sbb
sbb
or
les
stos
cmp
or
cdq
push
or
dec
dec
popa
push
xor
xchg
clc
cli
fmul
adc
jmp
pop
mov
stos
in
jno
dec
pop
mov
scas
daa
mov
xchg
rcr
retf
lea
push
push
loop
jp
jo
stos
aad
pushf
dec
xchg
fs
ret
movs
int
sbb
test
mov
ss
xchg
push
pusha
dec
sbb
adc
(bad)
popa
fist
test
aaa
jmp
movs
mov
mov
stos
into
and
sub
in
fwait
data16
fcom
pushf
cld
adc
or
xchg
and
mov
adc
cli
or
sub
out
xor
retf
imul
push
cwde
jge
pop
vphaddubw
out
out
mul
xchg
adc
cmps
mov
fs
mov
adc
es
dec
xor
retf
fmul
cmp
sbb
(bad)
adc
cmc
pop
pusha
or
sahf
cmp
neg
loop
les
cmp
scas
jno
xchg
xchg
iret
fwait
xor
and
cli
icebp
mov
jg
inc
leave
in
pop
ja
(bad)
xchg
ja
inc
jmp
out
retf
push
inc
cmc
icebp
rcl
xchg
xchg
daa
test
sub
xor
stos
push
jl
fst
push
test
rol
dec
cmpxchg
pop
jo
jne
iret
mov
fcomp
retf
xchg
aaa
adc
retf
out
inc
mov
call
sar
xchg
push
mov
dec
ret
xchg
into
lock
cmp
int
outs
jmp
ret
sub
fmul
cwde
sbb
(bad)
jecxz
mov
pop
js
popf
int3
jnp
fcmovnbe
addr16
(bad)
cmp
dec
push
sub
xchg
mov
sbb
push
into
push
xlat
jnp
test
bound
es
fld
or
adc
aaa
pop
and
mov
mov
xor
(bad)
jp
xchg
pop
call
mov
imul
inc
and
and
test
inc
sub
ret
mov
xchg
rcr
mov
and
mul
imul
ret
cmp
and
repz
shl
retf
cmps
or
data16
(bad)
popf
int3
ja
jecxz
retf
pusha
out
xchg
fs
push
jecxz
fcmovnu
cmp
cmp
movs
js
mov
outs
js
cmps
mov
(bad)
loopne
addr16
sahf
(bad)
fadd
scas
or
nop
arpl
mov
pop
hlt
imul
call
push
dec
sub
or
scas
xor
mov
ds
fcom
(bad)
in
es
repz
addr16
out
mov
neg
push
bound
nop
mov
push
pop
cwde
and
not
mov
stc
sbb
push
dec
and
jae
hlt
lods
sub
inc
dec
push
outs
sbb
mov
mov
data16
out
ror
ds
out
retf
(bad)
sub
inc
push
pushf
or
imul
dec
xor
jnp
leave
cli
addr16
(bad)
mov
cmp
dec
push
mov
outs
cmps
or
out
popa
call
xor
and
cld
dec
sbb
stc
stos
lds
stc
ja
push
jp
mov
adc
mov
(bad)
pop
mov
scas
jnp
call
xchg
dec
sbb
cmp
mov
inc
cdq
clc
jp
dec
jne
test
retf
jae
fstp
outs
push
sub
mov
fsubr
mov
pop
jecxz
loop
mov
or
dec
cmps
and
pop
adc
pop
clc
(bad)
fwait
pop
mov
fwait
jne
mov
pop
and
test
pop
xor
je
adc
outs
arpl
sbb
dec
jl
sbb
sbb
pop
sbb
ja
mov
dec
sub
cdq
mov
mov
in
fcomp
(bad)
dec
push
or
xchg
add
pop
jmp
xor
test
adc
or
stos
les
cmp
retf
out
dec
pop
imul
clc
inc
jno
popf
clc
dec
xchg
out
lds
pop
(bad)
neg
jle
pop
mov
jl
mov
mov
mov
(bad)
push
push
aas
add
push
(bad)
dec
inc
es
mov
fsub
repz
adc
cmps
mov
das
jle
push
mov
sbb
cmp
data16
mov
(bad)
jmp
xchg
xor
jge
cmp
(bad)
lods
inc
loope
call
daa
out
jg
lods
sahf
outs
jle
jbe
and
push
and
add
pop
mov
mov
fldl2e
xor
and
and
sub
gs
das
push
push
retf
cmp
icebp
(bad)
gs
dec
inc
(bad)
aaa
fdivp
add
sbb
ins
cmp
arpl
jge
mov
(bad)
and
xchg
or
leave
repz
cmp
add
out
jle
inc
cmps
repz
imul
outs
jbe
cmp
xor
cmp
lea
push
(bad)
jmp
xlat
sub
and
popa
aad
adc
ds
(bad)
mov
mov
ins
push
lock
xchg
push
cmp
lahf
and
inc
iret
mov
pop
out
loop
leave
test
in
out
cmp
and
mov
sar
int3
fsubp
xchg
dec
nop
pop
out
mov
push
and
fwait
xor
fbstp
outs
ins
xchg
in
mov
push
fstp
aas
sub
adc
xor
and
xor
jecxz
xchg
cmps
cmps
push
enter
or
jnp
cmp
xchg
and
dec
inc
mov
mov
popf
xchg
sbb
out
daa
jmp
jg
test
retf
lods
push
pop
xchg
sub
xchg
xor
sbb
hlt
fld
mov
sbb
or
das
je
xchg
sub
(bad)
jecxz
mov
inc
dec
ror
push
imul
adc
push
ins
xor
lds
(bad)
fadd
icebp
push
mov
in
cmc
lds
or
cmps
es
inc
fldenv
pop
or
push
test
xchg
mov
vpsraw
dec
ins
(bad)
jmp
sbb
and
xor
push
xchg
jno
pop
xor
jmp
in
add
daa
cmp
jnp
dec
icebp
dec
ja
mov
mov
xchg
xchg
xchg
lock
mov
jns
xchg
imul
in
push
push
es
popa
(bad)
pop
jge
popf
repz
jo
inc
adc
fs
sbb
sub
inc
xor
sbb
xchg
lahf
in
fprem1
je
lock
inc
aas
push
rol
aam
add
push
jmp
pop
stc
push
pop
or
loope
(bad)
jmp
sbb
retf
daa
addr16
lock
push
scas
inc
je
sub
mov
mov
bound
pop
mov
out
gs
add
fistp
repnz
jae
sub
mov
add
cmc
sbb
loope
dec
pop
mov
mov
scas
fsub
jmp
test
mov
mov
and
or
push
cmp
inc
mov
dec
mov
jo
stc
int
je
cdq
cmp
sub
es
das
pusha
add
fdiv
xchg
dec
test
push
xor
push
(bad)
push
sbb
adc
bswap
sub
jns
xchg
ja
ja
sub
(bad)
fild
nop
fs
mov
sub
and
jecxz
stos
test
or
inc
mov
jae
sahf
sbb
and
in
xchg
repnz
(bad)
imul
dec
mov
fdivr
in
aad
pop
xchg
and
sub
sahf
sbb
rol
popa
mov
pop
mov
push
dec
adc
(bad)
out
pusha
cmp
rol
inc
sbb
aas
sbb
cli
test
leave
sub
pop
jmp
mov
jnp
cmps
sbb
sbb
fild
add
mov
mov
imul
xchg
(bad)
aas
imul
loopne
test
xchg
pop
sbb
lea
sbb
jno
in
inc
adc
sbb
add
and
push
cmps
clc
mov
arpl
dec
mov
and
adc
add
inc
out
xchg
je
xchg
mov
adc
in
out
(bad)
xchg
dec
jg
cmp
ror
mov
cmps
in
rcr
jmp
shl
xor
dec
mov
fmul
and
jg
or
test
sub
into
popa
jns
inc
adc
pop
inc
test
fmul
inc
gs
dec
jns
mov
out
xchg
sbb
clc
sbb
xchg
pusha
dec
mov
push
js
mov
les
inc
jmp
xlat
xor
shl
jnp
outs
cwde
jl
dec
inc
into
mov
aam
mov
(bad)
mov
(bad)
inc
fwait
push
imul
pop
out
cld
fisttp
arpl
xchg
outs
jbe
movs
sahf
ja
mul
pop
pop
sbb
push
or
sub
sub
out
jnp
mov
xchg
(bad)
scas
cmp
dec
dec
sub
sub
test
cmp
sub
cmp
dec
out
add
(bad)
int3
shl
add
xor
sti
xchg
cdq
adc
adc
jnp
jmp
(bad)
mov
aaa
cli
fist
fnstenv
mov
xor
or
dec
jmp
dec
pop
or
pop
cmp
into
sub
cdq
fstp
dec
jo
shl
test
push
js
(bad)
icebp
xor
and
mov
outs
cmp
dec
push
in
jb
les
out
xchg
arpl
fisubr
mov
push
ins
lods
xchg
pop
xlat
jmp
clc
cwde
scas
int
outs
add
sahf
sbb
or
fistp
xchg
sub
sbb
cli
(bad)
fnstenv
pop
mov
je
sbb
cwde
mul
out
or
xchg
xor
cmp
(bad)
out
add
sar
jp
sbb
lea
and
cmp
in
(bad)
and
int3
push
xchg
jbe
dec
and
fnstcw
or
imul
dec
ins
sti
cld
xrelease
lods
sbb
call
popa
rcl
mov
ret
xlat
or
ins
ss
adc
fs
sub
cmp
scas
mov
push
cdq
jmp
inc
push
dec
mov
pop
dec
push
ror
or
pushf
mov
shr
inc
jno
cli
add
test
aaa
ds
aas
jae
mov
xchg
or
cmp
inc
repnz
or
jo
add
cmp
int
inc
sbb
push
jno
inc
or
mov
xchg
push
(bad)
jge
shr
scas
pusha
mov
xor
pop
xchg
mov
pop
pop
mov
repz
mov
inc
pop
jmp
cmps
add
inc
pop
mov
fimul
mov
sbb
aas
and
int
(bad)
mov
out
idiv
hlt
mov
jo
xor
push
sub
push
fbstp
push
lods
fmul
call
out
jmp
xor
pop
pop
scas
lea
inc
inc
pop
pop
in
ret
inc
js
xlat
cmc
aad
xchg
jns
mov
ins
(bad)
and
push
and
les
out
ins
mov
fucompp
popf
xor
inc
fmulp
xor
cdq
xlat
fidivr
xchg
sub
mov
mov
outs
cmp
imul
cmp
pop
pop
in
lahf
push
push
int
dec
add
and
mov
test
clc
leave
sub
xchg
(bad)
sub
lods
mov
jb
into
push
pushf
cmp
pop
jne
add
(bad)
test
into
loope
ja
dec
out
pusha
test
adc
push
or
imul
fs
enter
xor
icebp
mov
cmp
pop
dec
dec
in
xchg
xchg
(bad)
sub
mov
shl
push
retf
push
in
test
pop
mov
rcr
adc
inc
jbe
xor
not
mov
fist
xchg
adc
scas
push
imul
mov
mov
std
std
inc
mov
push
xchg
mov
jecxz
cmc
xor
sbb
mov
push
out
jg
push
mov
(bad)
data16
sub
(bad)
xor
or
push
shr
stos
int
in
cwde
addr16
sbb
pop
aaa
pusha
xor
dec
adc
xchg
pop
scas
out
ss
push
mov
ss
js
push
push
jo
pop
adc
push
add
js
fabs
loopne
retf
cdq
adc
pop
push
cmp
cwde
mov
push
jl
popa
iret
pop
and
cmps
dec
push
mov
aad
cmps
outs
fisttp
outs
inc
jmp
int3
xchg
aaa
inc
add
or
inc
fld
mov
xchg
inc
sub
ja
dec
ds
xchg
mov
ja
cdq
xchg
cmps
clc
sti
cmps
mov
sub
or
sbb
ins
pop
sahf
dec
call
jbe
fiadd
adc
lods
or
adc
push
iret
push
sbb
imul
ja
pop
sbb
dec
in
mov
lods
sti
(bad)
lods
mov
sub
adc
sahf
leave
(bad)
leave
clc
in
jns
lds
clc
mov
mov
add
adc
fldenv
nop
cdq
push
icebp
aad
or
ds
sbb
dec
xor
icebp
outs
dec
mov
jmp
mov
mov
je
retf
push
push
inc
xchg
retf
les
aaa
sub
loop
aas
pop
leave
sbb
jecxz
or
xor
mov
sub
pop
fcmovne
xchg
int
xchg
adc
imul
das
loopne
test
div
sbb
iret
jnp
repnz
mov
stos
push
pop
(bad)
gs
xchg
hlt
fild
mov
pop
out
sub
in
cmp
(bad)
mov
adc
call
push
jg
js
call
dec
stc
sub
or
iret
out
fimul
call
xor
lahf
div
mov
out
pop
hlt
cmps
(bad)
stc
and
mov
adc
adc
xchg
cmp
hlt
cwde
sub
inc
jns
xlat
jecxz
jmp
cmp
(bad)
xchg
imul
dec
jb
inc
pop
test
mov
lock
(bad)
pop
mov
add
xor
add
sbb
mov
(bad)
xchg
push
jns
mov
fsub
out
loope
loope
cmp
out
jecxz
push
popa
(bad)
push
xor
jns
mov
and
stc
pushf
mul
stc
jns
xor
cdq
movs
daa
pop
mov
in
enter
push
pushf
jnp
mov
(bad)
addr16
call
lods
mov
push
in
jl
lds
(bad)
idiv
pop
jne
dec
scas
call
inc
and
pop
dec
fxtract
ds
pop
dec
xor
js
leave
test
push
rcr
jb
addr16
dec
dec
push
fwait
pop
leave
and
and
int
pop
call
sbb
bound
and
xchg
rcr
fidivr
loope
mov
mov
mov
push
xchg
and
push
push
outs
popa
xor
xor
std
jae
xchg
pop
test
lock
mov
or
loop
sub
(bad)
jnp
std
mul
pop
sub
push
xor
icebp
jge
cmp
sub
call
enter
repnz
popa
jge
xchg
mov
sbb
mov
xor
jmp
sub
xor
rcl
mov
push
into
leave
mov
mov
fmul
mov
repz
cmp
push
leave
cwde
and
stc
in
test
mov
pop
jbe
inc
ss
jns
dec
push
aaa
inc
pop
add
mov
cmc
fs
jae
or
pop
mov
dec
sahf
or
xchg
mov
mov
cmps
movs
cmp
jbe
dec
out
(bad)
shl
mov
or
and
imul
nop
and
push
fimul
lock
ds
jns
jns
mov
(bad)
sub
cmp
iret
or
push
ss
loopne
ins
jo
pushf
xor
and
imul
dec
fldcw
pop
js
das
out
movs
mul
add
cmps
mov
jne
imul
cmp
push
in
xor
rcl
int
pop
adc
mov
jle
(bad)
icebp
jle
dec
adc
sub
push
test
mov
inc
out
test
and
les
mov
mul
dec
inc
push
add
dec
mov
aam
daa
mov
repz
cmp
pop
std
stc
add
scas
pop
into
(bad)
shl
and
hlt
(bad)
fstp
movaps
imul
pop
inc
or
fsubp
jns
cdq
xchg
pop
test
jg
or
outs
sub
imul
inc
xchg
pop
sub
loopne
loop
pop
mov
stos
pop
icebp
imul
jl
push
push
jb
dec
sub
mov
pop
(bad)
mov
imul
and
and
stos
or
push
jns
jge
sub
push
mul
ss
(bad)
add
pop
mov
hlt
daa
pop
mov
and
mov
stos
xor
test
mov
sbb
in
mov
inc
mov
(bad)
mov
popf
movs
mov
jecxz
jp
cmp
cld
or
xor
dec
adc
(bad)
aas
in
clc
mov
sub
mov
nop
cld
ror
pop
cli
cmp
loope
xchg
cmc
leave
daa
mov
add
mov
add
aad
jnp
mov
shr
jl
retf
imul
rcr
ficomp
sub
cmps
sbb
js
jl
ins
sbb
mov
dec
xchg
hlt
mov
adc
sub
fistp
cwde
push
ja
dec
and
jae
into
arpl
loope
lahf
cs
push
mov
mov
dec
ja
test
pop
pop
(bad)
retf
test
fmul
sub
xchg
int3
cs
inc
push
jge
and
dec
jp
shl
test
or
(bad)
or
cli
jb
dec
fs
sti
out
in
cwde
jle
push
sti
jbe
outs
xchg
dec
sub
ja
rcr
fidivr
mov
or
fstp
or
lea
pop
inc
inc
xchg
stos
aas
jl
sbb
retf
dec
sub
aaa
and
push
jmp
pop
jmp
jbe
push
sbb
(bad)
jmp
pushf
xchg
mov
fs
lds
stc
mov
(bad)
jmp
mov
push
ja
cmp
call
xor
sahf
js
stc
stos
push
(bad)
and
test
add
loope
ins
xchg
add
pop
dec
sub
inc
jbe
xor
mov
(bad)
fdiv
enter
les
stc
outs
xchg
fwait
stos
xchg
imul
adc
vmwrite
das
mov
inc
mov
cmc
out
mov
mov
mov
(bad)
fnstsw
in
in
mov
add
sbb
fistp
sar
fnstcw
movs
dec
sub
add
cmp
inc
pop
pop
sahf
mov
aaa
sub
imul
out
jle
pop
xchg
lock
cmp
mov
sbb
iret
inc
movs
sub
cwde
sar
test
stc
(bad)
xor
cmps
cmp
cmp
jne
cmps
cwde
ss
mov
mov
pop
push
cmp
pop
add
xchg
xchg
inc
lock
aam
xlat
(bad)
movs
ss
cmps
sahf
shl
(bad)
dec
idiv
movs
mov
add
pop
not
fs
push
mov
pop
fnstenv
cmp
retf
inc
dec
dec
xlat
adc
cmp
inc
push
xchg
ret
xchg
mov
and
daa
cli
xor
push
jle
mov
dec
pop
xlat
inc
and
jns
lods
sub
xchg
jo
pop
rcr
cmp
fisttp
imul
cmp
xchg
jecxz
(bad)
aad
(bad)
mov
aad
mov
test
sbb
fidivr
mov
xor
mov
mov
add
call
xor
mov
jg
adc
iret
inc
jmp
ror
cmp
sbb
aad
test
outs
inc
pop
mov
call
sbb
fwait
mov
xlat
repz
popf
jbe
out
sbb
xchg
ss
add
daa
iret
lea
push
data16
scas
test
xchg
inc
dec
push
jmp
arpl
lds
mov
cwde
sbb
in
imul
pop
ja
aam
sbb
dec
mov
fsubr
rol
ror
fldenv
dec
mov
test
xor
std
inc
add
pop
daa
pop
jl
mov
or
sti
sub
shr
sbb
sbb
push
es
sbb
lock
dec
fisub
out
sti
scas
sbb
out
xor
out
mov
add
push
pop
sub
jnp
push
fwait
lds
ret
mov
rol
jge
sub
jge
adc
inc
sub
inc
cmp
cwde
in
adc
dec
jne
rcr
fisub
add
cmp
xchg
int3
and
mov
div
imul
mov
jp
or
retf
push
test
fnsave
in
ret
inc
imul
dec
mov
xchg
add
adc
lods
cmps
retf
pushf
sbb
mov
mov
add
test
pop
and
fstp
sub
mov
ds
mov
push
outs
aaa
dec
out
mov
lods
(bad)
xor
and
push
fild
dec
pop
arpl
sbb
mov
stc
jo
mov
dec
mov
int
mov
iret
ds
xchg
pop
mov
inc
dec
test
mov
pushf
push
push
stc
dec
test
mov
out
add
xor
pushf
jp
imul
xchg
mov
into
sbb
mov
gs
nop
fs
mov
out
repz
cmp
cli
out
cmps
(bad)
enter
jno
test
mov
xchg
hlt
fwait
adc
mov
inc
movs
loop
das
mov
or
cmp
mov
fisub
mov
in
mov
repnz
mov
ss
(bad)
out
or
inc
jmp
xchg
xchg
mov
bound
ins
scas
nop
adc
pop
sti
imul
mov
test
lock
in
xlat
ins
or
jecxz
inc
mov
or
mov
jp
leave
cmp
mov
int
sar
aam
pop
adc
mov
xor
cmps
push
in
les
push
test
ds
xor
or
mov
xor
mov
xor
inc
xchg
in
push
or
outs
test
xor
push
jmp
mov
sub
xchg
inc
dec
sub
mov
in
test
mov
scas
nop
xlat
repnz
jo
mov
mov
jmp
popa
mov
pop
das
fcom
mov
push
(bad)
and
xchg
sub
add
jge
dec
jg
xchg
test
mov
xchg
pop
jge
in
pop
and
or
in
fmul
fisttp
cmps
inc
es
xlat
push
pop
icebp
lods
outs
shl
repz
in
test
push
sbb
call
adc
and
mov
dec
inc
sbb
leave
in
push
popa
inc
sbb
mov
stc
out
addr16
cmp
push
ss
add
and
mov
ja
push
not
xchg
mov
ins
lahf
(bad)
xor
fwait
cs
pop
mov
jmpw
mov
cmp
test
pop
adc
mov
mov
cdq
jbe
sti
into
jecxz
push
imul
cdq
sub
aam
(bad)
int3
aaa
push
mov
or
das
(bad)
aaa
cmp
jmp
js
cmp
ins
scas
sbb
push
ret
popf
dec
and
xchg
jmp
xchg
mov
(bad)
fsub
imul
push
stc
dec
mov
pop
mov
pusha
mov
add
jbe
and
cmp
jb
dec
pop
xchg
mov
cli
add
push
inc
outs
push
loop
mov
sbb
sbb
and
inc
xchg
ja
fs
xchg
xchg
xchg
adc
ss
enter
adc
das
rol
inc
push
in
pop
cmp
(bad)
mov
add
pop
movs
sbb
cmp
data16
sub
add
icebp
les
cmp
icebp
sub
jle
or
push
not
cmp
movs
or
jne
jle
imul
test
out
in
div
push
in
push
pop
test
push
shl
fisttp
jb
push
shr
jnp
jl
test
pushf
(bad)
repz
jnp
sub
fadd
or
jns
sub
xor
shl
mov
push
hlt
out
ror
adc
loope
(bad)
xchg
fnstsw
adc
or
nop
lods
xor
fs
cmc
rcr
inc
(bad)
mov
push
fidivr
ret
cdq
fs
es
int3
push
mov
pop
ret
int3
sbb
xor
jge
add
add
mov
mov
mov
test
fld
fld
inc
or
mov
cmp
sub
push
and
inc
sub
popf
sti
jb
(bad)
mov
ins
lock
mov
jb
imul
(bad)
mov
xchg
leave
cmps
(bad)
test
and
das
adc
adc
jne
bnd
sub
inc
lods
mov
pop
movs
and
sar
sub
push
loope
mov
repnz
(bad)
data16
inc
xor
iret
test
sbb
push
and
imul
imul
stc
xchg
xor
daa
cmp
enter
sub
jp
add
sbb
in
es
xor
sar
les
inc
ret
fnstenv
xor
arpl
(bad)
ret
mov
es
(bad)
imul
push
mov
fisttp
ds
adc
dec
jmp
and
fist
jbe
out
repnz
xor
xchg
stos
scas
xchg
push
or
mov
xor
test
sbb
retf
mov
push
cmp
dec
test
lods
jbe
mov
cdq
rcr
shl
mov
xchg
cmp
out
cmp
xchg
pop
cmps
mov
or
gs
jb
enter
jbe
jae
add
js
pop
push
call
push
(bad)
or
and
stc
xchg
push
pop
mov
dec
dec
push
pushf
frstor
pop
inc
inc
sar
pop
sub
xchg
popf
mov
inc
lea
mov
(bad)
xchg
pop
out
out
pop
jno
mov
mov
mov
mov
mov
sbb
call
adc
gs
inc
arpl
nop
repz
inc
xchg
sbb
stc
push
ss
xor
xor
(bad)
dec
jg
jnp
cmp
mov
imul
daa
fisttp
push
adc
adc
scas
cwde
test
rol
pop
sub
pushf
sub
sub
sahf
(bad)
js
test
push
and
sub
push
cmp
out
repz
(bad)
jg
cmp
inc
(bad)
scas
sub
call
mov
leave
cmp
in
dec
jns
xor
lds
popf
cmp
jne
dec
and
or
mov
and
mov
xlat
xchg
fmul
pop
jmp
or
mov
enter
pushf
mov
in
mov
or
and
js
jb
push
push
xchg
push
and
stos
jae
retf
jge
mov
sahf
popa
retf
shl
adc
mov
jo
push
fs
mov
pop
imul
test
repz
(bad)
cmp
in
cmp
shl
iret
push
shl
mov
mov
popf
mov
add
mov
lahf
push
mov
cmps
mov
push
mov
test
clc
jmp
fnstsw
xchg
add
and
idiv
shl
inc
sbb
ret
clc
push
cmc
imul
(bad)
call
ss
xchg
mov
pop
and
int
imul
aas
push
mov
cmps
ror
ins
outs
and
stos
inc
pop
mov
rol
push
mov
xchg
jmp
xor
dec
push
push
or
dec
data16
mov
ror
dec
ror
out
cli
mov
fstp
iret
(bad)
inc
inc
mov
jmp
aam
sbb
adc
adc
stos
(bad)
ror
cdq
push
int3
xor
stc
sbb
xor
cwde
cmps
xchg
sub
fdivp
xchg
loope
mov
rcr
popa
dec
js
push
jle
test
xchg
fcomi
fiadd
ret
jl
cdq
cwde
das
es
dec
pop
dec
clc
fstp
(bad)
aad
in
(bad)
retf
mov
pusha
fs
adc
add
adc
shl
xchg
inc
pop
add
push
jp
loope
ds
mov
mov
add
cwde
rcr
jle
cmp
push
in
stc
sbb
mov
sbb
test
inc
iret
inc
fld
(bad)
cwde
imul
xchg
ret
cdq
es
add
lds
enter
fcomp
push
inc
jg
fwait
mov
xor
add
sahf
sbb
jmp
or
push
jno
inc
push
(bad)
inc
mov
neg
jg
sahf
pop
scas
in
lods
push
out
std
or
and
cmp
jl
in
add
mov
test
(bad)
mov
push
shl
clc
jnp
or
add
pushf
sub
pusha
push
jmp
sub
cmp
scas
sub
jno
and
push
shl
test
fild
mov
sbb
pop
add
dec
xchg
aaa
(bad)
es
or
sbb
cmp
out
clc
sbb
sbb
mov
ja
inc
(bad)
(bad)
lock
dec
jne
adc
jle
cdq
push
xchg
pop
inc
mov
jbe
pusha
or
mov
push
cmc
push
ins
aad
mov
mov
clc
daa
int3
cmc
cmp
mov
pop
mov
xor
adc
dec
fistp
adc
(bad)
add
leave
xchg
leave
adc
cwde
scas
or
and
dec
push
xchg
mov
imul
hlt
cld
mov
mov
xlat
neg
leave
retf
dec
add
ror
mov
inc
retf
ret
jae
leave
cmp
int3
stc
loope
push
jnp
das
xor
and
data16
adc
fcmovnu
jmp
loope
leave
lahf
pop
jmp
js
adc
popa
push
pop
stc
dec
cmp
xchg
test
shl
clc
jmp
mov
iret
sbb
push
adc
fcmovnb
fwait
push
xchg
add
iret
lock
adc
(bad)
jp
addr16
test
cdq
mov
fdivr
push
and
mov
arpl
icebp
cmp
arpl
daa
test
fwait
sub
les
sahf
fsqrt
btc
jns
ss
in
adc
pop
(bad)
lds
inc
fdivr
xchg
sub
lods
xor
cmc
pop
xchg
bnd
push
lock
sub
aam
mov
dec
clc
lods
jle
pop
pop
dec
xor
mov
icebp
xchg
sbb
mov
xchg
add
and
push
stos
cmp
adc
sub
jbe
(bad)
retf
push
ja
aaa
inc
inc
adc
cmps
xor
in
pop
jmp
cmp
out
ds
pop
add
int
inc
sahf
and
mov
frstor
push
fiadd
dec
test
sub
cmp
jge
or
call
xlat
movs
push
clc
and
lock
mov
sub
lock
daa
sbb
adc
(bad)
jns
sbb
mov
and
cmps
test
(bad)
in
ja
pop
dec
fistp
mov
repz
push
push
mov
mov
xor
rcl
mov
mov
scas
mov
push
or
sahf
or
in
outs
inc
retf
ret
mov
sbb
inc
test
adc
fild
les
stos
retf
cmc
(bad)
inc
pop
sbb
cmps
push
gs
addr16
iret
pop
xchg
push
and
sbb
adc
loope
pop
ret
pop
push
and
or
sti
cmp
into
sbb
jno
or
and
pushf
and
mov
xchg
scas
sub
jmp
psubusb
cmp
call
push
inc
fs
cmc
xchg
test
jl
popf
jnp
shr
out
mov
xchg
cwde
fwait
retf
fsubr
and
idiv
push
adc
pusha
mov
dec
pop
pop
(bad)
jecxz
repz
mov
mov
or
dec
imul
mov
adc
int3
or
(bad)
or
or
jge
mov
clc
jbe
inc
mov
test
hlt
mov
pop
popf
sub
fisttp
call
mov
not
es
test
xchg
jecxz
cmp
fcom
fucomp
and
test
xlat
mov
adc
add
enter
mov
xchg
and
ret
push
mov
sti
out
test
jle
mov
cwde
lahf
repz
ins
and
retf
mov
aas
rol
hlt
call
mov
or
xor
mov
outs
jecxz
and
inc
pop
(bad)
mov
enter
pop
mov
aaa
jno
cmp
jbe
sbb
sar
cld
mov
lods
fisttp
repnz
idiv
cwde
mov
cli
jl
in
push
cmp
mov
xlat
div
ret
xor
leave
out
pushf
mov
jnp
or
inc
or
xor
mov
push
sbb
(bad)
es
pusha
inc
out
add
pop
dec
jp
mov
popf
pop
inc
and
or
xor
lea
sbb
sub
clc
cmp
mov
mov
ja
cwde
lock
jb
dec
das
add
ja
mov
fwait
mov
imul
shl
ja
in
sbb
pop
dec
repz
je
fs
fcom
scas
mov
js
cmps
ficomp
stos
cwde
test
and
leave
js
fild
(bad)
ror
jmp
repz
pop
sti
inc
and
sbb
jle
cmps
fwait
scas
or
fcomip
jmp
cmp
je
les
ror
mov
xchg
pop
in
jo
ja
es
sub
jg
iret
loope
jl
push
movs
je
out
or
scas
jo
push
dec
fwait
xchg
cmp
enter
loopne
xchg
repnz
aaa
xor
inc
mov
push
xchg
out
jnp
cmps
pop
inc
add
mov
hlt
xchg
sub
xchg
mov
outs
jmp
les
cli
imul
jne
jl
imul
pop
into
call
xor
popa
ss
dec
pop
call
scas
push
test
push
sub
cmp
sbb
or
daa
sub
mov
mov
mov
push
mov
pop
pop
into
add
neg
or
inc
jae
push
mov
cmps
int3
ficomp
sub
test
xlat
add
test
jbe
dec
inc
jb
(bad)
in
clc
dec
xchg
xor
fadd
and
outs
cmps
mov
les
movs
fisub
push
pop
cmp
xlat
std
sub
in
in
psadbw
jle
cmps
inc
test
cli
sub
hlt
jge
pop
inc
lods
sahf
mov
popa
cmp
xchg
mov
cmp
sbb
shr
hlt
jb
inc
test
mov
mov
jl
icebp
icebp
push
jnp
ds
mov
push
imul
pop
inc
mov
clc
mov
pop
xchg
(bad)
pop
mov
sbb
js
xchg
mov
sub
jecxz
sub
xchg
stos
jge
(bad)
xchg
mov
sti
sub
and
cmp
rcr
dec
push
lods
js
push
dec
mov
xor
mov
hlt
fwait
dec
fyl2xp1
sbb
gs
popa
cmp
hlt
stos
ficomp
addr16
xor
mov
clc
fwait
loope
es
mov
push
cmp
sbb
iret
cmps
mov
cwde
ins
dec
jo
sub
ds
adc
ret
cmc
ds
mov
and
mov
stc
jmp
cmps
std
push
out
loop
sub
dec
in
dec
mov
cmp
mov
js
ja
ds
fdiv
jle
sar
xor
push
or
in
or
pop
pop
pop
cmp
mov
jmp
sbb
push
pushf
js
nop
xor
dec
movs
and
cdq
ja
and
xchg
add
pop
cli
and
cwde
pop
push
jae
jmp
leave
std
imul
sbb
mov
mov
ret
sub
sub
add
inc
add
add
xor
mov
dec
out
inc
add
movs
mov
enter
call
cli
lock
ins
aam
(bad)
cld
aad
xor
loopne
inc
mov
lock
pop
xchg
add
imul
mov
ret
stc
les
xlat
pop
fincstp
xor
add
push
xchg
xchg
push
mov
or
in
in
ror
mov
fsubr
cmp
push
jl
shl
into
sub
adc
mov
mov
fwait
mov
or
adc
cdq
test
pop
enter
pop
stos
add
(bad)
icebp
xchg
cdq
inc
das
pop
xlat
frstor
adc
daa
dec
enter
jo
xchg
or
pop
sub
adc
inc
inc
mov
movs
mov
adc
ret
sbb
std
xor
or
sti
inc
test
ja
iret
mov
test
aad
fdiv
lods
jge
shl
std
xlat
stos
dec
mov
and
push
push
xchg
ds
xchg
popa
add
fwait
sub
sbb
jmp
and
jno
call
sbb
ss
or
cdq
pop
out
xchg
jnp
dec
outs
popf
push
pop
dec
fwait
cmps
mov
sbb
cli
das
sbb
mov
(bad)
jno
jns
push
mov
pop
add
push
jl
ficomp
or
dec
in
ja
dec
add
jge
pop
jbe
xchg
je
push
mov
lods
jnp
lods
pop
push
and
pop
dec
movs
cmps
pop
je
mov
dec
xchg
mov
movs
xchg
inc
mov
stos
push
je
mov
sbb
push
test
or
sti
jae
push
inc
data16
jb
push
pop
aad
dec
mov
pop
or
call
loop
xchg
dec
fnstsw
rcr
aam
xchg
or
int3
adc
mov
out
xlat
ja
data16
js
loopne
mov
mov
call
int3
or
(bad)
inc
in
pop
add
leave
addr16
dec
js
int
je
cdq
and
movs
push
fs
and
inc
out
test
cmps
aad
push
pop
pusha
stos
arpl
cmp
dec
sbb
shl
iret
out
pop
cmp
arpl
in
push
sub
adc
retf
(bad)
adc
out
pop
jne
into
cmps
je
sahf
popa
cld
nop
loop
test
inc
out
es
je
add
movs
jle
push
pusha
out
push
jle
push
out
jns
cmp
pushf
out
add
scas
icebp
fcmovnb
cmp
mov
pusha
ja
jnp
sbb
fcmovnbe
jo
push
retf
ds
cmp
jmp
and
mov
int3
daa
enter
test
or
cmp
cmp
int3
pop
jae
test
das
add
adc
or
pop
mov
push
mov
sbb
loopne
inc
in
and
xor
sbb
mov
pop
out
adc
fiadd
cmp
sbb
stos
ror
hlt
add
adc
add
fistp
hlt
test
popa
push
inc
cmp
cs
repnz
push
icebp
cwde
dec
and
ror
xlat
mov
shl
pop
mov
mov
aam
mov
xchg
out
push
mov
outs
test
inc
loop
mov
arpl
popf
dec
push
adc
mov
cwde
enter
(bad)
jmp
daa
sbb
sub
xchg
mov
test
imul
mov
fisubr
mov
retf
movs
xchg
mul
inc
(bad)
mov
push
jne
and
cmps
mov
add
cdq
test
aas
jg
add
pusha
test
push
add
mov
sub
test
out
fmulp
(bad)
sbb
and
sub
jecxz
mov
fsub
call
stc
xchg
retf
xchg
imul
push
fs
mov
stos
mov
test
fcomip
(bad)
xchg
mov
idiv
sbb
jp
lods
mov
mov
cmps
mov
leave
xchg
xchg
popf
test
fcmovnu
push
pop
imul
aad
(bad)
sbb
es
sub
mov
arpl
mov
pop
adc
xchg
jmp
xor
and
pop
xchg
sub
add
imul
pop
cld
xor
jecxz
(bad)
mov
clc
sbb
dec
jb
in
or
cli
mov
xchg
inc
mov
stc
(bad)
in
(bad)
mov
sbb
data16
ja
mov
dec
xchg
fld
imul
shl
retf
and
push
xchg
jns
ja
imul
shr
jmp
inc
int3
sub
sbb
sub
test
das
out
fld
outs
mov
stc
sar
push
sbb
(bad)
xchg
(bad)
dec
inc
xchg
mov
add
in
pushf
call
icebp
xor
adc
ins
push
pushf
arpl
and
loope
movs
xor
mov
repnz
aaa
mov
fbld
or
sbb
xlat
je
and
adc
mov
test
pop
mov
hlt
out
jp
in
or
(bad)
cmp
sbb
inc
dec
test
inc
push
jbe
pop
push
xor
mov
ror
sbb
pop
pusha
jmp
iret
daa
jb
jbe
mov
lahf
cmp
scas
loopne
aaa
jmp
xor
pop
sub
dec
(bad)
jmp
dec
add
mov
xor
sbb
cmp
cdq
jne
jns
jl
pop
imul
push
movs
test
fstp
lods
dec
dec
out
pop
fmul
fist
push
jne
cwde
sub
js
es
sub
or
and
jbe
imul
mov
xchg
ss
xlat
adc
int
addr16
jge
pop
pop
pop
imul
data16
add
dec
fmul
and
inc
nop
add
dec
push
scas
mov
lahf
sbb
inc
jbe
push
cmp
sub
out
sbb
jae
cdq
in
jo
jbe
ja
cmc
test
xchg
lods
inc
mov
inc
mov
inc
cmp
pop
sub
(bad)
fisttp
hlt
mov
retf
sbb
call
sbb
inc
in
jo
mov
scas
mov
sar
push
adc
idiv
out
push
push
ret
fcmove
out
mov
lea
out
hlt
ss
loope
dec
repz
mov
or
push
mov
pop
stos
mov
sbb
out
fcomi
mov
movs
ficomp
cmc
jbe
or
out
jbe
lods
dec
sbb
inc
cmp
mov
in
add
repnz
ret
mov
pop
inc
cmps
push
ret
shl
pop
test
popw
pusha
fs
syscall
inc
or
push
test
jmp
loop
xor
scas
adc
enter
xor
aad
dec
pusha
pop
into
push
inc
add
jecxz
or
xchg
push
mov
xchg
pop
arpl
movs
cmps
jae
pop
jmp
lds
jb
pusha
lods
std
stos
fdiv
pop
inc
mov
adc
cdq
push
mov
jl
ins
sub
stos
lea
and
lea
lahf
xchg
jae
popf
inc
fld
cmp
jge
cmp
inc
mov
sbb
ss
retf
pop
int
pop
adc
mov
adc
es
stc
(bad)
mov
cmc
xor
xchg
js
dec
inc
test
mov
mul
dec
mov
aaa
push
mov
in
ja
(bad)
je
mov
dec
push
dec
pushf
ins
dec
jbe
lea
dec
mov
addr16
fstp
sub
push
pop
push
xlat
test
aaa
inc
test
loopne
imul
mov
xlat
mov
sar
sub
push
xchg
dec
pushw
push
push
push
(bad)
pop
call
out
ret
std
ror
loop
retf
pop
js
(bad)
fisub
jo
ror
int
stos
leavew
dec
fxch
loope
std
(bad)
fdiv
in
jmp
add
pop
or
push
stos
retf
inc
cli
dec
mov
repz
sbb
push
cmps
push
and
es
adc
or
push
pop
jmp
stc
mov
div
jp
aam
dec
test
push
xchg
neg
mov
sbb
add
(bad)
rdpmc
push
call
hlt
sbb
dec
pop
scas
inc
pop
inc
lahf
fisttp
out
xchg
jbe
in
mov
xchg
jmp
js
popa
pop
aam
pop
pop
cdq
dec
xchg
test
nop
xchg
call
and
cli
jnp
sbb
enter
imul
adc
adc
ror
sub
jg
jmp
inc
fbstp
and
call
xchg
xchg
idiv
fistp
rol
std
pop
test
lock
es
push
push
jg
test
sbb
adc
call
and
ja
pop
adc
std
cmp
in
jmp
jmp
loope
push
and
or
add
cmp
lds
lock
jno
leave
or
imul
xor
ds
cs
mov
pushf
mov
out
pop
fwait
push
jmp
jo
add
pusha
pop
inc
cdq
adc
xchg
inc
mov
icebp
push
sub
neg
pop
pop
cmc
xchg
xchg
call
xchg
xchg
inc
jne
test
test
cmp
jg
xor
popa
adc
and
push
es
fidiv
inc
adc
std
ficomp
lock
cmps
cmp
sbb
(bad)
push
ins
call
jecxz
add
jmp
(bad)
(bad)
leave
(bad)
cwde
jmp
js
push
movs
push
xchg
push
(bad)
sub
dec
sub
add
(bad)
pop
dec
es
push
xchg
imul
(bad)
inc
mov
aaa
adc
sbb
das
es
es
lds
sub
pop
sub
test
loop
cmp
(bad)
inc
les
adc
cmc
fld
push
xchg
jbe
and
inc
jp
cmps
mov
addr16
fcomip
(bad)
mov
and
call
(bad)
inc
sub
jb
jp
xchg
retf
mov
shl
cwde
daa
or
sub
mov
js
or
test
xchg
stos
cmp
clc
call
lock
fiadd
addr16
mov
push
nop
call
jo
nop
pushf
adc
xlat
push
jnp
popw
sbb
cwde
pop
push
(bad)
test
mov
xchg
sub
div
cmps
cwde
mov
xchg
retf
hlt
xor
push
daa
push
push
xor
movs
pop
inc
push
push
in
sub
pop
in
push
mov
jae
imul
pop
xchg
mov
imul
pop
fwait
inc
test
or
cmp
mov
sbb
sar
in
retf
mov
adc
std
retf
out
inc
ins
push
mov
xchg
and
aam
loopne
lods
loopne
fucomi
fidivr
adc
aad
popa
stos
push
add
cmps
bound
stos
fwait
cmc
jl
jmp
loopne
lock
mov
test
mov
les
inc
dec
scas
jnp
out
mov
cdq
add
out
add
pushf
dec
dec
data16
scas
cmp
cmps
mov
cld
push
fsqrt
leave
jmp
and
fild
cmp
je
jne
ss
mov
sbb
imul
mov
sub
adc
add
outs
push
xor
lock
push
lea
test
xchg
ins
(bad)
dec
ss
leave
int
cmp
inc
hlt
pop
sub
shl
pop
inc
call
rcr
push
inc
(bad)
mov
mov
repnz
lock
jns
mov
pop
cmp
cmp
retf
fsub
pop
loop
cwde
add
mov
xchg
sbb
mov
retf
and
daa
mov
sbb
fnstsw
inc
dec
inc
nop
xor
inc
hlt
push
test
or
pop
sbb
popf
loop
sbb
cld
lock
mov
dec
mov
or
ja
mov
icebp
sti
(bad)
pop
push
into
outs
enter
clc
test
scas
cmps
es
jne
xchg
push
out
retf
in
imul
inc
dec
icebp
js
mov
jg
mov
mov
mov
(bad)
aam
fldcw
inc
mov
push
jmp
sub
call
bound
mov
lahf
pop
shr
xchg
lds
repnz
mov
outs
rcr
ins
and
pop
(bad)
fcom
xor
popa
sub
or
sub
or
(bad)
loope
es
(bad)
iret
(bad)
cmc
pop
mov
inc
outs
mov
inc
js
sub
cmp
stc
xlat
repnz
(bad)
jg
cmp
mov
ins
dec
pop
call
dec
arpl
sub
add
movs
dec
jmp
out
cld
gs
add
lea
jmp
ins
sub
jmp
dec
or
jmp
ja
bound
mov
dec
es
neg
xchg
sub
ds
stos
movs
fbstp
sub
sbb
xchg
adc
test
cmp
sub
inc
push
push
popf
fisttp
adc
lahf
inc
retf
xchg
loopne
sti
xor
and
out
pop
xchg
mov
cmps
call
in
xor
outs
retf
mov
(bad)
xchg
jg
jp
jmp
inc
push
mov
arpl
xchg
enter
idiv
dec
add
fldenv
xchg
pop
jp
ja
sub
xchg
cmp
call
push
cmp
ins
add
mov
xchg
js
or
push
rcr
das
add
js
push
pop
mov
scas
and
or
cwde
add
mov
xor
jmp
pusha
inc
leave
add
cmp
jbe
pushw
mov
enter
or
enter
or
cmp
fdiv
pusha
sub
cmps
jns
cdq
cld
mov
bound
test
xchg
(bad)
and
fld
pop
inc
cdq
sub
neg
in
fist
lock
cli
push
add
adc
out
cmp
(bad)
sub
dec
push
xor
popf
jbe
test
pop
out
push
sbb
lds
inc
inc
add
(bad)
xchg
and
dec
shl
mov
jecxz
inc
mov
repnz
adc
fstp
stos
jg
gs
cmps
dec
push
call
sahf
cmps
shl
fdivr
push
loop
std
js
ror
push
pop
pop
retf
ja
data16
mov
mov
push
inc
in
adc
and
aam
scas
xchg
call
jne
imul
ss
and
and
div
jns
cmc
adc
es
jmp
jl
mov
into
or
adc
cs
mov
int
sahf
xchg
dec
xchg
iret
int3
mov
aas
cmp
cmpps
sub
adc
sub
jbe
sub
dec
retf
inc
mov
test
pusha
sub
mov
adc
les
loop
(bad)
cwde
sti
sub
jmp
sub
idiv
sub
repnz
mov
fs
jns
clc
xchg
and
xchg
das
inc
push
and
aaa
fcom
jbe
mov
push
sti
dec
xchg
add
cmps
stc
push
jmp
add
and
cmp
inc
lds
mov
cmp
xchg
sbb
sub
dec
jge
fidiv
dec
push
and
mov
std
mov
in
pop
jne
push
xor
pop
mov
adc
gs
mov
mov
(bad)
mov
xchg
stos
(bad)
test
not
fsub
pop
mov
xchg
jge
jl
push
sahf
aam
(bad)
call
mov
and
mov
inc
stos
inc
push
(bad)
xor
iret
stc
jns
add
das
jmp
push
add
test
add
loop
sbb
xor
icebp
xchg
scas
sbb
jnp
pop
jmp
mov
sub
push
mul
addr16
xchg
xchg
jmp
cmp
or
and
test
inc
ins
sub
pop
clc
inc
xchg
cmp
sub
cmps
ss
(bad)
mov
xor
jmp
adc
xor
push
or
and
es
push
jae
imul
mov
mov
ins
in
sbb
test
push
movs
fstp
push
mov
icebp
mov
mov
pop
push
jns
gs
mov
in
sub
loope
xchg
imul
adc
in
lock
pop
ret
jp
sub
in
add
xchg
(bad)
or
mul
pop
jbe
sub
fs
aam
cmp
icebp
and
hlt
or
mov
or
shr
pop
push
aad
sbb
sub
je
sbb
fisubr
xchg
retf
xor
adc
in
mov
pop
add
sti
mov
add
mov
xchg
jmp
mov
in
(bad)
sub
cmp
lds
fwait
sub
dec
jnp
repnz
adc
popa
(bad)
fdivr
xor
les
stos
mov
neg
adc
jns
mov
es
cmp
xor
fild
jne
add
mov
ja
gs
xchg
push
mov
cmps
popa
cmp
xchg
and
(bad)
ss
cmp
add
push
mov
inc
pop
jecxz
mov
fnstcw
in
jbe
add
cmp
cmps
movs
lea
mov
push
xchg
pusha
xchg
pop
pop
aas
loope
cmp
push
push
adc
push
dec
mov
xchg
jbe
es
push
in
push
cwde
xor
je
leave
loopne
das
jne
ret
cmp
pushf
call
pop
ins
inc
test
or
or
cmp
push
fld
dec
mov
mov
leave
push
push
pop
cmp
out
or
dec
movq
es
or
pop
stos
inc
les
(bad)
jge
jmp
cdq
ss
xchg
and
addr16
test
sti
mov
repz
xlat
(bad)
mov
gs
xor
mov
sbb
test
sbb
leave
into
jmp
cld
(bad)
and
pop
mov
sbb
mov
mov
push
icebp
inc
repz
sub
add
neg
sbb
xchg
ins
mov
into
inc
icebp
xor
or
mov
sub
inc
lods
neg
out
imul
mov
or
inc
int
add
push
out
fucompp
push
cdq
xchg
add
enter
or
pop
imul
cmp
mov
test
cmc
jg
mov
cmp
sub
lock
xchg
call
jnp
in
jae
or
jecxz
cdq
adc
ss
inc
mov
addr16
cmp
dec
dec
stc
leave
jmp
les
cmp
es
xor
inc
mov
jnp
adc
mov
fimul
add
scas
jbe
int3
cdq
int3
in
es
mov
jbe
shl
push
push
jnp
lahf
mov
and
adc
or
jp
inc
xchg
adc
dec
push
ins
pusha
fdecstp
xor
adc
cmps
sub
popf
jb
jp
sbb
dec
stos
data16
js
dec
movs
cmp
pop
pop
leave
int
mov
fwait
cmp
or
jp
jnp
cmps
and
leave
mov
sbb
jnp
fidivr
push
push
ins
inc
inc
push
test
xor
fdivr
add
leave
in
aaa
dec
or
ss
mov
(bad)
or
out
repz
sbb
add
fimul
jmp
mov
mov
mov
(bad)
mov
ffreep
jo
std
jmp
mov
xor
xlat
jg
aam
push
popa
sub
ficomp
cmps
in
ss
stc
bound
jmp
mov
mov
sub
fdiv
enter
xor
xchg
ja
fldenv
ss
out
push
inc
mov
mov
or
fwait
mov
jns
xchg
mov
movs
ins
in
movs
call
fnsetpm(287
(bad)
xor
and
sub
or
jle
xlat
cmp
mov
pop
jp
sub
jge
push
cmps
add
fisubr
xchg
cmp
jmp
les
push
pcmpeqb
xchg
adc
cmp
fild
xchg
call
sub
fidiv
cmp
cld
jo
fld
sbb
pop
add
stos
popf
outs
fs
mov
inc
cmc
cmp
pop
cwde
in
cwde
inc
imul
mov
push
pop
popa
pop
jmp
and
dec
es
mov
push
mov
aad
dec
mov
(bad)
xchg
rol
ins
cs
push
fisttp
test
push
fiadd
or
adc
int
mov
push
js
jno
outs
pop
inc
aad
fsub
cwde
mov
loop
add
repz
inc
xor
retf
mov
movs
xchg
push
mov
dec
in
mov
jecxz
cmp
dec
aaa
mov
adc
mov
ins
add
mov
sbb
(bad)
call
ror
pop
mov
push
or
test
and
jo
test
(bad)
sub
fadd
jns
inc
daa
daa
in
ss
fwait
cdq
aaa
add
push
ins
clc
cs
call
cmp
imul
mov
stos
movs
xor
test
xchg
aad
clc
ror
vshufps
stc
jg
push
ja
cmp
mov
xchg
mov
loope
call
cmp
mov
mov
call
call
sub
inc
adc
add
jp
div
mov
jg
movs
xor
fsub
add
mov
call
(bad)
(bad)
pop
inc
out
ja
fbld
and
mov
jns
or
and
or
inc
mov
push
je
pop
ficomp
je
mov
cmps
ja
cmp
or
fidivr
not
fldenv
addr16
test
dec
cmp
and
and
mov
mov
cmc
xchg
mov
mov
retf
pushf
dec
mov
cmc
sbb
out
rcr
xchg
addr16
fld
out
xlat
lds
dec
pop
jns
jl
inc
cli
sub
clc
mov
in
jle
cmc
aaa
popf
cmps
sub
sub
jmp
pop
jne
xchg
hlt
sbb
xchg
xchg
add
cmp
jp
mov
jne
pushf
fcmovne
leave
sub
pop
mov
xor
sub
xchg
or
jne
jbe
push
call
mov
or
cmc
inc
int
(bad)
(bad)
clc
push
sub
aaa
push
loope
mov
xchg
icebp
rcl
push
aaa
retf
pop
push
fistp
int
ror
dec
jns
dec
test
mov
test
cli
mov
cwde
(bad)
pusha
(bad)
sbb
pop
adc
fwait
xor
out
sti
mov
lods
retf
adc
add
inc
into
nop
lock
inc
xor
cwde
call
cmp
sub
in
jl
ret
cmp
xlat
cmp
dec
(bad)
int
js
mov
xchg
xor
xchg
fwait
adc
fld
xor
adc
cli
adc
and
lds
push
pop
movs
mov
sub
(bad)
enter
lods
jmp
push
cmp
jecxz
adc
leave
adc
fmul
adc
out
cmc
scas
push
test
out
and
xor
cmc
call
pop
mov
cwde
cwd
pop
(bad)
leave
mov
call
pop
push
cmps
jo
stos
cmp
inc
gs
fcmovu
pop
ins
cdq
add
movs
aad
or
push
xor
clc
jne
hlt
xchg
aaa
mov
cdq
xchg
inc
(bad)
jb
addr16
dec
sub
adc
sub
fwait
add
test
hlt
mov
dec
pop
fcomp
test
xchg
cmc
inc
cmps
cli
shr
inc
clc
dec
in
push
loop
mov
fldenv
call
cmp
retf
sbb
or
cwde
jp
imul
mov
and
push
(bad)
mov
and
xlat
xchg
ror
push
inc
dec
dec
mov
pushf
mov
lds
inc
div
cmp
dec
in
ss
sub
inc
(bad)
jb
pop
lods
pop
movs
add
push
jb
dec
test
push
cld
aaa
jno
mov
fistp
push
jne
push
mov
mov
jmp
sub
cmp
fldenv
mov
cmp
or
cmp
mov
sub
hlt
or
add
inc
adc
icebp
add
cmc
mov
enter
cmp
enter
in
and
or
out
sti
inc
mov
jecxz
mov
mov
mov
shl
aaa
cmp
pop
add
jle
dec
mov
sub
ss
enter
fisubr
inc
out
es
inc
push
ret
sbb
adc
retf
jle
aad
mov
ss
or
outs
ss
xchg
sti
test
es
pop
xor
sbb
lds
push
sbb
arpl
imul
sbb
out
loopne
ror
mov
ja
gs
and
mov
imul
push
push
sar
xor
loop
dec
mov
xchg
push
sti
cmp
and
jnp
and
mov
out
push
pop
mov
push
aas
cmp
jp
les
pop
aaa
(bad)
ja
dec
addr16
(bad)
cmc
or
dec
mov
not
pop
in
sub
push
aaa
ret
dec
idiv
add
xchg
jg
imul
jnp
dec
inc
leave
push
shl
int3
aam
ret
data16
and
xor
jmp
dec
(bad)
pop
gs
inc
enter
in
jl
push
cmps
xchg
inc
xor
js
push
arpl
sti
mov
imul
fs
int
dec
push
add
jl
sub
bound
call
cmc
ret
add
sbb
push
xchg
pop
mov
imul
push
in
push
in
push
idiv
or
lds
pop
test
mov
ins
enter
ds
cmp
mov
xchg
push
in
add
fistp
movs
mov
pop
cmc
pop
sub
loop
cwde
inc
xor
push
mov
dec
sbb
mov
ret
test
or
mov
jmp
inc
or
xor
xchg
or
cdq
mov
fbstp
mov
mov
ror
cmp
aaa
cmp
sbb
pop
dec
cmps
test
add
xor
clc
xchg
push
iret
sbb
dec
aaa
ins
fwait
imul
add
mov
mov
aam
sti
aaa
dec
arpl
je
mov
add
in
loope
cmp
and
aad
loope
cli
sbb
sub
push
push
data16
enter
retf
push
sub
ror
lock
xor
sahf
pop
retf
pop
sub
inc
jl
aaa
cmps
(bad)
imul
mov
adc
fbstp
mov
dec
arpl
and
xor
mov
nop
nop
xchg
(bad)
gs
bound
pop
adc
mov
pop
mov
mov
outs
adc
ss
sub
jge
out
add
aaa
adc
push
sbb
jbe
push
movs
ins
mov
mov
hlt
aam
mov
xchg
xchg
cld
in
sar
cmp
jno
push
aad
or
test
mov
pop
mov
iret
mov
push
and
add
add
add
not
(bad)
fcmovnbe
movs
inc
cmp
leave
pop
push
or
pop
mov
adc
mov
fs
or
xchg
mov
inc
jl
and
scas
gs
js
fbld
adc
cmps
cmp
pop
adc
idiv
sub
sub
xchg
mov
test
(bad)
in
out
aam
cmc
inc
push
ins
out
sub
xlat
inc
aaa
pop
mov
jp
pop
fs
mov
out
loop
xor
pusha
pop
pusha
sub
and
pop
xor
push
lods
stos
pusha
es
pusha
(bad)
xchg
(bad)
(bad)
(bad)
xchg
jmp
dec
bound
push
mov
dec
scas
inc
imul
test
out
xchg
mov
sbb
jg
js
sub
shl
or
or
aad
cwde
addr16
js
lds
sub
mov
test
(bad)
inc
aaa
loop
test
push
mov
clc
lea
xor
cli
sbb
js
push
enter
fadd
fdiv
fld
or
cmp
in
xchg
jbe
fs
ret
mov
cmp
(bad)
fsubr
adc
fmul
stos
int3
add
mov
push
cdq
movs
mov
push
imul
add
cmps
mov
xchg
mov
movs
push
sub
lea
stc
adc
xor
add
ja
mov
xchg
gs
mov
jb
add
test
add
lock
fucomip
test
aas
jmp
test
and
push
cmp
jle
mov
jo
call
jle
mov
cdq
imul
mov
add
(bad)
mov
jne
popf
mov
call
adc
mov
or
shl
cmps
test
sbb
stos
loop
sar
xlat
ror
sti
pop
add
cmc
jne
push
out
and
push
inc
das
in
xchg
loopne
test
dec
jg
jecxz
idiv
mov
dec
ret
shl
gs
pop
push
out
out
rcl
leave
or
scas
je
push
xchg
stc
clc
xor
jg
pop
pop
add
sub
scas
jmp
out
and
ret
aam
(bad)
pop
mov
dec
test
jae
or
imul
fcom
aam
or
fs
mov
jg
mov
push
dec
das
inc
shl
(bad)
mov
imul
add
adc
test
movs
scas
jb
xor
sbb
rol
leave
cmp
scas
and
mov
les
xor
cs
addr16
sub
cmp
dec
jp
(bad)
jne
cwde
jle
outs
cmp
call
test
and
sbb
xchg
jle
hlt
cdq
stc
lods
jmp
push
not
movs
sub
add
or
fnstenv
inc
add
push
xor
ins
in
dec
jae
repz
cmps
and
mov
stc
cmp
xor
lea
mov
and
or
stos
and
cs
mov
bnd
push
stos
cmp
xchg
(bad)
mov
rol
jp
(bad)
dec
int3
mov
mov
dec
cmp
repnz
lds
jnp
xchg
inc
xchg
mov
movs
mov
push
cmp
fimul
int3
cmp
cmp
movs
push
cwde
push
mov
mov
(bad)
in
and
push
jmp
pop
ror
pop
xlat
lds
fisubr
out
or
mov
vpor
sbb
aad
sub
(bad)
push
inc
sub
test
loopne
cmp
test
out
push
popa
rcr
ss
cmp
cmp
push
push
jmp
sbb
es
test
retf
adc
ss
cmp
les
fsubr
clc
dec
inc
mov
daa
fidiv
aaa
mov
mov
rcr
add
xlat
sbb
push
adc
inc
nop
addr16
movs
mov
pop
push
mov
or
ss
pop
shr
addr16
test
daa
enter
push
adc
push
push
out
dec
sti
cli
pop
xchg
mov
sub
icebp
push
mov
bound
sub
inc
popa
out
push
add
test
push
sub
call
mov
fstp
(bad)
out
xchg
out
or
or
cmp
lea
test
je
dec
outs
sbb
cmp
adc
pop
mov
repnz
jmp
jno
mov
scas
pushfw
arpl
push
cmps
js
aam
mov
add
mov
jp
sub
(bad)
dec
cmp
cmp
cmp
cmps
cdq
push
loopne
(bad)
sub
xor
lods
cwde
(bad)
mov
dec
push
mov
xchg
adc
leave
inc
in
mov
xchg
sbb
sub
cmps
jmp
bnd
imul
dec
jecxz
iret
cmc
idiv
cmps
das
js
cmp
cmp
cmps
or
pop
mov
xchg
jmp
cmps
aam
sbb
adc
push
xchg
or
data16
sub
stc
out
ror
cdq
jmp
push
les
js
jp
mov
xchg
mov
imul
xlat
mov
(bad)
in
test
out
data16
jnp
jno
pop
dec
ins
(bad)
jno
addr16
pop
and
mov
lahf
out
ret
inc
sar
imul
xor
inc
ja
mov
mov
sub
cdq
scas
cdq
fld
(bad)
sbb
(bad)
sbb
adc
cmp
xchg
cmp
jae
mov
stos
loop
pop
mov
lock
jmp
test
xor
ss
push
and
inc
mov
aaa
aas
mov
jg
xor
ins
inc
inc
jo
inc
sub
push
sub
es
mov
sti
ffreep
test
and
sub
stc
dec
arpl
mov
add
jle
nop
mov
adc
mov
stos
test
mov
mov
aam
into
pop
js
mov
dec
or
movs
cmps
push
cld
rcr
xchg
mov
dec
jne
dec
out
pop
pop
sbb
imul
xchg
shr
xchg
jo
out
rol
stos
xor
xor
push
ins
ror
xchg
and
(bad)
mov
mov
sub
jecxz
mov
cmps
retf
addr16
mov
mov
cmps
xchg
leave
popf
xor
jns
push
int
push
dec
push
dec
imul
and
mov
in
in
cwde
loopne
or
fs
or
mov
sahf
rcr
pushf
inc
aaa
cmp
mov
inc
retf
cmp
ja
inc
addr16
xor
dec
mov
cmps
rol
jns
retf
xchg
dec
and
push
shl
ins
jno
sti
leave
or
scas
cld
xchg
push
mov
inc
add
sti
push
js
inc
pop
push
movs
push
add
jbe
jmp
(bad)
fnstsw
lods
pop
cmp
jp
(bad)
jbe
neg
adc
test
push
mov
test
in
dec
or
call
ss
movs
sub
sbb
adc
sub
fld
lods
fild
jg
pop
xchg
jbe
and
and
enter
ror
(bad)
fbstp
pop
in
xlat
ss
mov
cmovo
(bad)
(bad)
jno
jbe
mov
div
mov
pop
sbb
push
xchg
adc
jo
mov
sbb
mov
push
mov
and
mov
cmp
daa
xor
jmp
sbb
cmp
sahf
xchg
stos
add
out
jbe
sbb
cmp
cli
sbb
adc
(bad)
push
bound
leave
adc
sub
push
(bad)
sbb
lods
cmp
mov
push
sbb
cmps
aam
jns
fist
inc
cmps
and
pop
fnsave
inc
cmps
adc
cmps
xor
lods
pop
je
ja
xchg
pop
mov
aaa
adc
jle
sar
xor
adc
mov
xchg
cmp
test
inc
xor
inc
in
sbb
out
out
adc
xor
jl
cmp
data16
mov
fst
shl
jl
and
mov
xchg
cmp
push
pushf
jb
mov
in
mov
(bad)
push
mov
push
fidiv
fist
loopne
sub
mov
push
fimul
sbb
cmp
pop
xchg
inc
ja
add
xchg
and
pop
aad
mov
sbb
xor
adc
scas
mov
mov
adc
mov
pop
pop
mov
ja
mov
popa
inc
pop
jae
mov
adc
out
push
jo
das
jg
xor
aas
loop
sbb
lds
shr
jne
scas
fdivr
mov
xchg
ja
js
adc
je
sub
fnstsw
mov
pop
(bad)
pushf
inc
fcomp
nop
ja
push
inc
push
test
ja
pushf
xor
fcom
push
retf
or
dec
sub
setge
(bad)
imul
push
movs
cmp
or
ds
(bad)
aad
jno
push
ret
int3
inc
hlt
ins
stos
imul
push
fdivr
pop
dec
xor
test
mov
dec
iret
jbe
adc
jg
les
fsub
inc
mov
(bad)
outs
or
mov
push
cdq
push
stos
fisttp
mov
pop
pop
sahf
loop
out
fidivr
jb
sbb
push
cmp
mov
inc
es
call
movs
inc
mov
scas
pop
imul
sbb
xchg
das
mov
into
xchg
pop
mov
dec
xor
loope
neg
jmp
repnz
pop
inc
stos
repnz
out
mul
daa
xchg
arpl
fisttp
retf
push
xor
dec
iret
push
xchg
outs
fisttp
push
out
push
out
mov
sub
xchg
sub
push
or
iret
mov
cmp
ret
adc
push
ins
push
jmp
jae
dec
shl
adc
fucomp
push
iret
aad
ins
dec
stos
aaa
pop
dec
and
mov
in
les
sbb
pushf
dec
fcom
outs
mov
xchg
nop
iret
push
mov
iret
es
repnz
push
mov
iret
cmp
pop
jbe
(bad)
mov
add
mov
das
push
jmp
sub
cmp
jge
dec
mov
xor
shl
scas
lods
sbb
jl
ror
inc
inc
dec
inc
add
fmul
js
sub
shl
xor
push
cmp
movs
rol
or
cmp
or
sub
fs
xlat
mov
rol
stos
ror
xor
sub
stos
cmp
jno
push
mov
xor
jge
push
lods
add
add
mov
xor
outs
mov
sub
push
(bad)
xor
fmul
mov
jno
jne
or
ror
sub
in
sub
sub
movs
jno
push
pop
jo
push
or
cmc
xlat
jne
mov
mov
ficom
rcr
mov
in
and
xchg
sub
or
xlat
adc
test
shr
xor
scas
movs
add
fist
mov
xor
pop
ins
xor
ja
jbe
in
fcmovnu
repnz
xor
push
push
mov
mov
xchg
outs
aaa
ins
pop
movs
outs
sub
sub
cmc
sub
adc
dec
mov
test
push
mov
push
cmp
in
daa
jne
push
or
outs
call
or
cmp
inc
sbb
pop
jnp
push
and
sub
test
xor
xchg
mul
and
mov
jl
js
and
loopne
lods
jg
jl
jg
(bad)
pop
std
and
cmps
repz
cmc
and
mov
cwde
mov
push
int
int3
and
dec
xor
lods
pop
lods
jmp
sub
bound
mov
inc
call
ds
outs
xor
test
xchg
xchg
push
jmp
out
and
dec
mov
xor
(bad)
test
cmp
cld
mov
fldcw
mov
or
aam
dec
(bad)
and
sub
mov
fucomi
jns
rcr
jg
hlt
int3
pop
(bad)
out
xor
cmps
outs
mov
add
sar
mov
int3
mov
push
mov
xor
mov
(bad)
jmp
pushf
inc
pushf
jnp
js
clc
and
and
and
sub
and
cwde
mov
scas
cmps
rcr
int3
cwde
pop
mov
in
xor
scas
push
mov
mov
jg
sub
aas
scas
mov
fild
scas
popa
cli
pop
cmp
out
sti
adc
(bad)
jo
cli
cmp
jg
mov
ds
ins
mov
loopne
sub
cmp
test
and
ja
clc
pop
sti
arpl
scas
adc
mov
(bad)
movs
mov
mov
test
rcr
jmp
es
mov
cmp
xchg
push
in
push
into
dec
cmp
outs
jae
cmp
sbb
pushf
pop
in
retf
jo
enter
mov
jae
add
in
call
adc
sub
fmul
(bad)
mov
xchg
stos
or
or
jge
sub
mov
pop
sbb
stos
nop
retf
inc
mov
add
or
fist
jp
test
aam
xchg
pop
mov
mov
add
pop
or
cmp
xchg
enter
pop
mov
sbb
push
call
pop
clc
leave
(bad)
pop
sub
(bad)
lahf
mov
test
pusha
punpckhbw
or
imul
or
mov
cwde
mov
fistp
das
mov
cmp
inc
fld
mov
mov
gs
sbb
(bad)
sbb
jae
and
add
cmp
pop
stos
aam
inc
ret
adc
outs
pop
sbb
fwait
pop
mov
in
cli
lods
dec
pop
pop
sub
paddusb
inc
add
(bad)
lea
cmp
adc
stos
test
jo
(bad)
dec
sbb
je
pop
sub
jo
mov
shr
xor
call
iret
pop
ret
sbb
sub
xchg
mov
xchg
adc
pop
cmp
push
out
mov
pop
xchg
aas
sbb
xor
mov
mov
lods
out
xor
sbb
pop
mov
push
or
in
ficom
xor
dec
pushf
jo
inc
lock
dec
sbb
fdiv
(bad)
mov
iret
retf
setno
retf
fdiv
into
xchg
das
movs
test
ficom
scas
pop
add
xchg
pop
mov
mov
mov
mov
dec
data16
add
jns
outs
(bad)
shl
sub
add
push
mov
pop
push
cli
pop
mov
pop
or
jmp
movs
test
sbb
cmps
out
mov
push
mov
ror
retf
loop
jmp
test
pop
dec
xchg
loop
sub
jmp
shl
sub
sbb
arpl
jg
ss
dec
(bad)
mov
retf
loop
fs
mov
les
stos
jmp
dec
loop
test
xor
(bad)
bound
push
outs
imul
imul
and
pop
mov
cmps
sub
imul
sbb
xchg
in
inc
push
sahf
dec
sub
cdq
jge
jne
inc
push
data16
jmp
in
out
mov
inc
jmp
aas
test
rcr
bound
jno
jge
jns
pop
and
pop
popf
sbb
jns
ficomp
add
mov
add
sbb
sbb
repz
iret
mov
inc
inc
ja
pop
jmp
sbb
jae
cmp
idiv
(bad)
mov
dec
or
mov
inc
mov
ja
pushf
jle
(bad)
push
sbb
jecxz
adc
enter
sub
pop
shl
outs
xchg
pusha
add
pushf
push
adc
out
inc
aad
fadd
sahf
push
inc
addr16
popa
cmc
cmp
retf
cld
in
mov
push
adc
das
sub
cmps
repnz
mov
(bad)
or
adc
repz
mov
cmp
push
fidiv
fidiv
sahf
ja
jg
pop
xor
xlat
repz
iret
xor
xor
sbb
ja
pop
cli
aaa
mov
mov
xchg
mov
pop
mov
cld
mov
(bad)
data16
xchg
push
aaa
out
call
push
cmp
lds
test
cs
push
mov
mov
mov
sub
in
hlt
jae
sahf
push
jle
cld
out
jecxz
push
mov
xchg
pop
jle
sub
jne
sahf
fild
push
adc
(bad)
xchg
xchg
pop
jle
not
jg
push
stos
shl
mov
ins
mov
jle
adc
(bad)
jmp
ja
call
pop
div
sahf
push
ja
adc
xlat
shr
mov
outs
ja
pushf
(bad)
jge
pop
mov
pop
inc
mul
cmp
popa
pop
dec
mov
(bad)
cmc
adc
and
call
xor
push
loop
bnd
inc
pushf
xchg
aam
jne
adc
cmc
pop
pop
(bad)
imul
xchg
pop
jno
fwait
mov
sub
(bad)
jp
xor
rcl
xchg
mov
rcr
xor
sbb
popa
aaa
mov
loope
(bad)
mov
repz
push
mov
mov
fst
and
ss
cld
ret
xchg
mov
jecxz
aad
pop
in
mov
mov
xchg
mov
das
xchg
(bad)
pop
adc
jno
sbb
mov
sbb
icebp
dec
aaa
(bad)
mov
sbb
mov
cmp
fld
mov
mov
data16
pop
loope
call
and
mov
fwait
dec
adc
push
pop
mov
iret
adc
je
mov
ss
dec
mov
rcl
and
xchg
xchg
mov
call
sahf
add
sub
jb
push
jg
push
aam
aaa
adc
adc
ds
mov
gs
jo
and
sub
cmp
lahf
mov
mov
hlt
xlat
add
adc
add
push
and
aam
cmp
rcl
fdiv
add
je
sub
xor
or
retf
push
mov
xchg
(bad)
mov
pop
push
sub
(bad)
and
iret
mov
daa
mov
mov
cmps
inc
inc
mov
outs
pop
test
cmps
pop
push
rol
pop
test
test
dec
adc
fdiv
inc
mov
xchg
out
rol
mov
fist
pop
mov
mov
push
xchg
cmps
mov
xchg
aam
(bad)
xlat
adc
popf
push
cld
and
data16
hlt
ret
add
mov
mov
xor
(bad)
neg
push
add
test
mov
sub
test
repnz
test
mov
jnp
repz
idiv
mov
shl
jl
popf
pop
jl
rcl
jmp
push
add
test
jne
cmp
sub
dec
cli
xlat
xor
mov
aas
fmul
xchg
pop
(bad)
push
xor
or
pusha
lahf
sub
sub
out
adc
fwait
call
(bad)
and
js
push
dec
mov
nop
lock
mov
inc
js
call
sbb
jb
cli
js
cdq
out
xor
js
js
lahf
es
mov
clc
push
mov
nop
sbb
mov
nop
arpl
xor
out
cmp
clc
cli
sbb
mov
mov
mov
fwait
push
xchg
or
xor
inc
jae
call
sbb
xor
mov
fdiv
outs
stos
out
(bad)
adc
clc
sbb
push
stos
dec
mov
test
sub
enter
sbb
mov
inc
xchg
stos
fwait
mov
cs
xor
mov
adc
mov
outs
adc
jge
retf
mov
push
mov
sub
ds
adc
outs
dec
popf
not
dec
fwait
mov
outs
sbb
outs
clc
sbb
xor
clc
(bad)
cdq
jp
xor
js
inc
push
mov
ds
sbb
mov
mov
adc
push
(bad)
test
adc
adc
jl
xchg
ret
push
ds
push
adc
adc
push
(bad)
xor
mov
push
out
rol
sbb
dec
mov
arpl
adc
adc
push
xor
ret
ds
adc
out
fs
jl
rcl
cld
mov
xchg
ins
xchg
into
nop
es
adc
test
adc
clc
cmps
inc
mov
in
sub
stos
sahf
(bad)
and
dec
pop
jge
and
inc
mov
data16
sub
jne
mov
loope
(bad)
(bad)
daa
mov
(bad)
sbb
sub
jns
pop
cmps
jl
rcl
dec
(bad)
push
push
(bad)
arpl
out
cwde
mov
in
and
xlat
mov
sbb
std
cvtps2pi
rcr
pop
push
out
(bad)
loope
call
xlat
lods
ds
pusha
cmps
push
jg
sbb
inc
xlat
jmp
mov
sbb
xchg
call
jae
cwde
or
push
imul
cmp
push
out
cwde
fadd
xlat
addr16
(bad)
mov
std
inc
mov
into
int3
outs
and
sub
test
push
jmp
imul
add
inc
ins
addr16
sub
test
push
jmp
pop
sub
jns
mov
out
movs
imul
inc
xlat
stos
sub
ret
(bad)
and
mov
inc
push
(bad)
push
jnp
outs
push
pop
mov
xor
inc
dec
in
cwde
sub
out
pop
call
addr16
inc
sub
or
call
out
addr16
loop
xor
and
scas
fwait
dec
xlat
addr16
dec
pop
retf
test
ja
add
js
and
mov
jmp
das
pop
imul
idiv
sbb
int3
xor
add
mov
pop
retf
jb
fdivrp
xor
pop
stos
mov
pop
dec
xor
push
inc
(bad)
jnp
or
pop
cmp
sbb
(bad)
(bad)
in
jecxz
call
dec
inc
pop
dec
xor
bnd
test
sub
add
not
test
adc
cld
pusha
jnp
xlat
inc
ds
cmps
fwait
aam
js
push
jmp
stc
push
sbb
xchg
push
xor
mul
cdq
or
or
enter
mov
push
enter
or
or
enter
mov
or
dec
mov
push
mov
push
dec
mov
ror
icebp
or
dec
mov
push
mov
push
dec
mov
ror
icebp
mov
xor
ror
icebp
or
enter
mov
push
sub
enter
in
shl
xor
mov
adc
rcl
aad
frstor
adc
aaa
out
jl
(bad)
loopne
in
and
daa
out
pop
xor
dec
leave
pop
jle
mov
xchg
movs
scas
imul
out
add
aas
mov
cmp
cmp
inc
pop
jno
push
mov
mov
(bad)
push
imul
sbb
mov
cli
and
aam
mov
movs
pop
test
je
mov
arpl
mov
xchg
pop
xor
dec
jmp
cmps
lods
cmp
sbb
imul
and
ficom
into
add
inc
mov
pop
adc
adc
mov
xchg
dec
sbb
ror
sbb
(bad)
call
mov
call
loop
add
cld
jg
or
jp
popa
jge
jae
jl
loope
nop
dec
dec
(bad)
popa
fcmove
(bad)
fist
jl
repz
nop
pop
test
pusha
fisub
in
(bad)
notrack
inc
jne
jle
jg
bound
ret
jp
dec
bound
push
(bad)
pop
(bad)
pop
std
pop
mov
std
and
push
fbstp
in
stc
dec
nop
ins
nop
ins
adc
jae
jae
out
int
dec
nop
dec
cld
dec
les
out
adc
jle
(bad)
stc
cmc
pop
in
xlat
pop
xlat
dec
pop
nop
push
idiv
jno
icebp
inc
loop
dec
push
imul
fst
jg
cmc
push
(bad)
push
std
pop
nop
or
mov
mov
mov
es
test
pushf
or
xlat
aad
push
dec
push
(bad)
rol
xor
addr16
mul
adc
sub
sahf
or
js
call
mov
mov
rcr
mov
or
call
dec
ror
adc
sbb
test
xchg
push
mov
pop
movs
or
push
mov
mov
or
push
mov
movs
sbb
je
and
and
adc
dec
movs
adc
cmp
mov
or
dec
mov
mov
mov
mov
mov
mov
add
cmp
cmp
cmp
pop
mov
push
loop
mov
mov
aas
cmp
aaa
cmc
pop
cmc
pop
cmc
pop
cmc
pop
sar
jmp
jg
and
cmp
xor
gs
adc
xchg
and
sar
jle
jle
adc
jle
jle
jle
adc
jle
jle
jle
mov
js
cmp
inc
(bad)
xchg
and
xchg
push
imul
jmp
mov
icebp
out
pop
and
adc
pop
adc
and
imul
sub
shl
scas
xor
gs
and
sbb
xor
mov
add
or
push
(bad)
aaa
xlat
sub
add
xor
push
test
inc
retf
es
xor
sub
sub
sub
inc
shr
and
adc
xor
xor
xor
and
xor
inc
repnz
clc
inc
jmp
out
scas
inc
xor
cli
popf
mov
test
retf
(bad)
jb
(bad)
mov
rcr
mov
or
(bad)
stos
adc
or
enter
addr16
int3
inc
adc
test
cmps
mov
out
jl
mov
and
jecxz
js
push
push
xchg
test
fmul
mov
pop
lahf
mov
cwde
icebp
stos
or
mov
adc
or
fadd
mov
pop
push
std
mov
cmps
mov
mov
addr16
(bad)
mov
mov
rcl
rol
std
mov
fdiv
sub
mov
xchg
nop
mov
ret
out
jb
xchg
test
rol
pushf
icebp
loopne
(bad)
out
ret
xchg
jecxz
adc
mov
nop
in
xchg
nop
cld
hlt
stc
mov
nop
jecxz
inc
out
in
out
mov
not
sub
cmps
mov
fwait
xchg
(bad)
mov
addr16
nop
mov
mov
retf
cmps
loop
or
cdq
shl
frstor
push
sbb
lock
mov
mov
sahf
(bad)
loope
cmps
int
jl
jmp
in
out
pushf
ret
arpl
sahf
cld
mov
mov
movs
out
mov
inc
xchg
jmp
retf
add
cdq
out
jmp
cmps
enter
mov
sar
repz
out
loope
retf
movs
aaa
adc
mov
(bad)
fbstp
ror
cmp
sbb
pop
mov
in
add
and
mov
movs
add
cmp
or
pop
fcomp
jbe
aas
in
rep
adc
(bad)
sub
sub
jae
pop
in
add
pop
jecxz
pop
mov
rcl
jmp
fcmovnb
xor
add
loop
cwde
ss
push
test
jmp
nop
push
mov
lods
and
and
push
and
fnstsw
mov
or
fs
push
ficom
push
cli
xor
ret
jecxz
lock
daa
test
in
in
in
xor
cmp
jp
sub
arpl
sbb
sar
int3
daa
int3
jg
stos
pop
retf
add
or
mov
pop
fisub
jecxz
ficom
mov
and
sub
ret
mov
and
cmp
mov
jp
push
movs
adc
adc
fisttp
fisub
(bad)
and
sub
pop
movs
les
fiadd
out
push
shr
fistp
cmps
jbe
ins
loope
mov
pop
fbstp
sti
aaa
fstp
inc
jecxz
iret
and
es
ss
push
out
jecxz
xlat
stos
cmp
lds
add
sbb
rcl
mov
mov
add
fucomi
pusha
repz
pop
fwait
jb
imul
mov
and
ins
(bad)
cmp
test
dec
fiadd
leave
cs
and
dec
mov
mov
nop
sub
pop
add
out
sti
push
fst
adc
test
or
adc
pop
pop
mov
ficomp
leave
push
test
push
jge
add
cmps
ins
xchg
dec
out
call
or
pop
cmc
add
sbb
push
cmps
pop
(bad)
sub
sub
call
ins
ficomp
data16
ror
or
in
add
sbb
push
stc
push
sahf
sub
pop
inc
cmc
or
mov
ret
or
or
cs
add
and
add
inc
(bad)
pop
sub
cmp
sbb
es
mov
ja
idiv
xchg
mov
push
std
push
pop
icebp
push
stc
cmp
push
add
jnp
cdq
or
xchg
cmp
cwde
movs
js
push
leave
xor
out
idiv
ret
add
pusha
push
add
pop
push
popf
jl
cmp
sub
enter
add
ins
mov
and
jg
mov
scas
shr
pop
ja
xchg
repz
fst
out
xor
sub
fnsave
test
dec
sub
cs
lahf
lods
fisubr
popa
inc
or
scas
rcl
fld
mov
enter
mul
mov
adc
push
fild
rcr
mov
shl
adc
xor
hlt
mov
mov
dec
(bad)
(bad)
cld
nop
mov
adc
sub
push
fcmovu
fimul
xchg
int3
mov
or
inc
cmp
pop
into
mov
add
lods
out
fdivp
retf
retf
std
fwait
xchg
mov
inc
lahf
rcr
xlat
mov
inc
dec
aam
xchg
add
cmp
mov
xchg
lock
fimul
adc
dec
and
mov
rol
cmp
fimul
lds
or
mov
int3
test
xchg
(bad)
adc
jg
xor
hlt
xchg
(bad)
rcr
sbb
dec
add
rcr
imul
lds
vandps
push
xor
jmp
test
mov
xchg
cld
retf
xchg
in
dec
aaa
pop
cmp
mov
stos
mov
neg
or
xor
jmp
lahf
sar
sub
scas
xlat
in
mov
int
dec
dec
aaa
push
icebp
scas
shl
(bad)
in
xchg
fiadd
pop
push
push
xchg
xchg
retf
neg
cwde
mov
dec
cmovle
in
sti
mov
mov
outs
xor
jmp
iret
sbb
mov
pop
add
fnstsw
aad
aad
int
ss
xchg
mov
mov
dec
sbb
jb
nop
xchg
cwde
mov
pop
sub
push
jl
xchg
rcr
mov
ins
sub
adc
enter
(bad)
repz
mov
dec
dec
fsub
loopne
test
mov
cld
xchg
fadd
xor
inc
(bad)
mov
mov
push
xor
enter
test
inc
and
xor
xchg
fmul
push
imul
int
in
rcr
in
ins
sub
xchg
(bad)
cwde
(bad)
aad
xlat
pushf
mov
pop
xor
out
mov
sub
sub
pop
(bad)
mov
mov
jcxz
add
ror
and
(bad)
cmp
sub
fnstsw
loopne
clc
rcr
dec
scas
adc
pop
leave
and
jmp
fstp
in
push
xchg
es
shl
dec
jmp
mov
ins
fbld
push
mov
in
pop
sub
mov
sti
rcl
inc
test
jge
dec
jmp
(bad)
push
mov
sub
leave
sbb
mov
shl
mov
add
adc
lods
push
mov
(bad)
push
les
xor
lods
pop
mov
lods
jg
addr16
pop
out
xor
bswap
movs
das
cmp
retf
cs
iret
hlt
pop
mov
bound
(bad)
sub
add
loopne
mov
mov
push
pop
mov
cld
imul
(bad)
(bad)
(bad)
add
test
lods
and
jmp
(bad)
enter
pushf
pop
scas
inc
mov
add
stos
dec
jmp
shr
xchg
or
popa
retf
push
call
inc
xchg
sub
aaa
lods
int
xchg
push
adc
xor
inc
outs
push
pop
out
inc
out
sub
test
call
mov
mov
loope
leave
aad
cmps
iret
xchg
push
js
jbe
add
sbb
cmps
in
xlat
pop
cmps
or
les
mov
int3
pop
into
jmp
int3
and
and
add
inc
test
push
xchg
push
mov
aam
add
push
into
call
mov
in
arpl
dec
lods
mov
les
xchg
jg
out
xor
add
inc
into
dec
cwde
and
jmp
sub
inc
sbb
push
stos
repz
imul
and
rol
lods
fs
inc
clc
outs
xchg
add
in
dec
sub
mov
mov
jmp
div
mov
dec
aam
fild
adc
icebp
gs
ja
mov
cmp
pop
xor
and
mov
fistp
dec
cmp
mov
(bad)
loop
repz
syscall
dec
and
push
mov
fisttp
push
dec
inc
jo
loope
in
mov
fdivr
cmps
xchg
adc
dec
prefetch
mov
in
scas
call
dec
pop
adc
sbb
mov
loopne
mul
sbb
bound
cld
mov
shr
mov
xor
sahf
mov
dec
jmp
push
dec
add
into
call
and
and
mov
jae
ins
sbb
add
icebp
mov
and
jg
cmp
xchg
mov
mov
popa
sbb
push
push
mov
mov
fldcw
dec
es
inc
sbb
(bad)
repz
retf
mov
push
push
sbb
mov
call
sbb
mov
mov
(bad)
aam
mov
add
sti
mov
into
fld
pusha
das
ins
and
iret
fmulp
scas
mov
push
pusha
xor
call
mov
pop
push
jp
ja
mov
aam
fcom
adc
pop
pop
out
or
mov
add
jno
pop
cmp
scas
xchg
cld
ret
dec
idiv
push
push
xor
mov
mov
adc
cmp
mov
icebp
cmps
into
scas
in
and
adc
dec
mov
les
and
sbb
xor
aaa
mov
mov
and
dec
cmp
(bad)
jecxz
push
cmp
cmp
loope
(bad)
enter
adc
push
add
leave
xchg
into
mov
and
or
cmp
ret
xor
pop
fs
push
xlat
mov
int
(bad)
cdq
lods
or
pop
xor
xor
mov
rol
adc
adc
add
jmp
inc
push
and
scas
mov
(bad)
out
lahf
mov
and
ins
call
les
sbb
and
mov
(bad)
mov
fs
outs
das
jnp
xor
shl
inc
jo
jb
push
sbb
ret
cmps
shl
dec
pop
dec
add
cmps
aam
mov
or
inc
dec
adc
cs
les
jp
ja
push
jnp
repnz
fimul
xor
and
inc
jp
ret
enter
test
push
push
add
push
jp
test
arpl
scas
lock
mov
xchg
or
popf
xchg
or
out
enter
lds
je
push
mov
cmp
mov
in
mov
xor
iret
or
inc
mov
into
jb
adc
setb
jle
cmp
adc
pushf
push
mov
out
adc
mov
sub
dec
mov
popf
push
mov
sbb
ds
push
lea
adc
mov
mov
mov
nop
and
jb
jne
loope
bnd
dec
mov
aad
(bad)
xor
push
or
jecxz
jecxz
xchg
mov
out
xor
dec
and
repnz
lea
mov
sahf
push
pop
(bad)
adc
outs
idiv
push
mov
xor
sub
ins
std
jb
in
add
popf
jnp
xor
push
(bad)
lods
jae
xor
(bad)
sub
pushf
adc
mov
push
repz
mul
jmp
std
xor
cmp
jnp
mov
ins
cmc
jge
cmps
xor
aad
shl
in
or
pop
sti
imul
test
push
int3
sbb
adc
dec
popf
cmp
push
xchg
dec
in
pop
and
pop
clc
sub
mov
outs
xor
dec
stc
sbb
push
(bad)
sub
dec
mov
dec
fisub
addr16
and
add
mov
retf
js
adc
shl
xchg
push
jmp
(bad)
js
dec
fsub
nop
pop
xor
call
in
not
xor
pop
lock
inc
cli
pop
push
test
das
out
pop
imul
imul
call
out
cmp
data16
pusha
out
inc
adc
jne
jnp
jnp
xchg
lock
dec
cli
sub
push
xchg
push
call
(bad)
dec
repnz
aam
pop
jmp
ins
sub
jbe
adc
imul
in
popf
ins
repz
out
push
not
inc
ret
je
(bad)
pop
leave
push
fisttp
xor
push
icebp
adc
ins
pop
cld
push
clc
addr16
leave
push
jnp
lea
dec
push
mov
into
outs
(bad)
add
movs
mov
sbb
push
aas
or
cmp
pop
mov
(bad)
mov
push
push
aad
fmulp
xchg
icebp
pop
pop
jg
dec
pop
xchg
cmp
mov
ja
js
inc
or
(bad)
in
cmp
jp
sti
inc
sub
outs
sti
sahf
fcomp
adc
adc
xchg
push
xchg
int
frstor
aaa
pop
jg
cmp
(bad)
loop
fstp
data16
push
dec
sar
mov
jb
jb
jae
inc
inc
hlt
sbb
add
sub
aam
adc
inc
or
ror
mov
pop
and
sub
and
fcmovnu
(bad)
outs
dec
js
imul
sbb
nop
mov
pusha
sbb
push
jne
je
sbb
std
(bad)
lock
fxch
cmp
enter
das
xchg
mov
mov
fsub
pop
out
sub
dec
xor
aaa
out
repnz
es
jnp
aas
mov
sub
mov
mov
cld
xchg
sub
adc
into
test
sbb
pop
pop
cmp
dec
lea
mov
jge
lahf
mov
call
outs
pop
into
adc
(bad)
ss
aam
mov
retf
inc
rcl
jb
dec
cmp
shr
dec
jo
stos
int3
xor
pop
and
adc
mov
lea
fwait
jae
repnz
xor
xchg
in
loop
cmp
es
jb
xchg
mov
xchg
mov
pop
adc
(bad)
aad
loope
(bad)
jno
sbb
xor
sub
in
sub
icebp
dec
xor
ret
pop
movs
sub
cmp
outs
xchg
js
cld
mov
and
ror
dec
addr16
sub
jns
mov
mov
add
and
jle
mov
imul
jge
call
enter
sub
sub
xor
es
push
dec
stos
ds
scas
adc
(bad)
imul
or
dec
dec
mov
sub
jg
xor
mov
and
dec
push
rol
jmp
xchg
std
clc
ret
js
stos
fs
scas
dec
outs
sbb
test
cmps
sbb
lds
sbb
or
mov
scas
mov
dec
pop
sbb
enter
cmp
pop
pop
sub
dec
pop
fadd
call
sbb
iret
arpl
mov
mov
sbb
cmp
jmp
test
push
pop
xor
fistp
stos
or
cs
jae
pop
aad
cli
(bad)
int3
pop
or
push
fwait
dec
scas
or
out
sub
outs
cmp
test
push
jmp
pop
sbb
cwde
dec
mov
in
adc
jle
push
pop
or
or
sbb
mov
add
push
jge
imul
dec
cmp
or
(bad)
jmp
arpl
jns
dec
das
mov
call
push
aas
test
mov
test
iret
imul
push
in
push
(bad)
mov
out
push
push
push
das
fsubr
mov
repz
ss
(bad)
int3
out
xchg
ds
pop
sti
push
into
mov
(bad)
xchg
cmp
ret
xchg
mov
push
in
jge
cs
loop
sub
int
fidiv
adc
inc
or
pop
sbb
call
sahf
out
dec
xchg
cmp
shr
push
(bad)
lahf
iret
cmp
adc
pop
stos
cmp
jge
jnp
jecxz
jl
test
loopne
add
call
ret
xbegin
loopne
shl
jle
mov
inc
push
je
jecxz
rcr
lods
xchg
mov
shl
xchg
ds
push
addr16
mov
icebp
retf
inc
scas
jo
nop
xlat
xor
push
pop
mov
lds
xor
mov
add
sub
mov
in
popa
(bad)
jbe
mov
call
xchg
add
ja
dec
push
lea
adc
push
sbb
pop
mov
bound
xor
jecxz
or
pop
ret
test
das
imul
xor
fcmovnbe
stc
jge
nop
push
popa
sbb
xlat
jg
imul
cmps
ds
pop
scas
das
sti
rcr
(bad)
sti
adc
dec
mov
jl
ror
mov
je
pop
pushf
inc
std
mov
inc
out
and
pusha
shr
das
sti
dec
mov
push
mov
(bad)
ins
xchg
nop
mov
mov
push
mov
sub
in
push
xchg
xchg
cmp
fwait
push
in
and
fs
jp
xchg
int3
ficomp
xor
jnp
mov
ins
xchg
cmps
and
lea
dec
inc
and
shl
ja
cli
push
inc
mov
mov
sahf
sub
inc
aad
out
call
popa
cli
arpl
leave
inc
test
push
sti
lahf
pop
(bad)
pop
xor
jl
into
(bad)
mov
repnz
test
ret
pop
cld
cld
cmps
cld
inc
cs
rcl
js
fsub
lahf
jo
ja
shr
jno
ins
rcr
aaa
or
inc
dec
xchg
sbb
icebp
xlat
test
jno
out
je
pop
test
fistp
(bad)
pop
jne
pop
fbstp
mov
mov
ret
pop
mov
ja
add
lds
xlat
cmp
pop
data16
pop
lock
outs
shr
xor
adc
ror
pop
scas
fs
es
push
hlt
pop
inc
jmp
pop
cwde
push
cdq
jne
fistp
mov
mov
sub
xor
sbb
mov
push
sub
xchg
xlat
cmp
cwde
out
daa
cmp
out
adc
xchg
xor
ja
sub
outs
movs
add
out
xchg
call
mov
(bad)
imul
push
clc
inc
addr16
xor
pop
cmps
sbb
inc
rcr
fidiv
jae
dec
mov
sub
inc
jae
sbb
icebp
inc
cli
jge
dec
mov
adc
ror
xor
jns
fadd
enter
cmp
mov
daa
xor
xchg
jmp
push
fdivp
ja
neg
or
aaa
and
clc
dec
dec
in
xor
scas
jle
pop
xor
scas
push
mov
(bad)
mov
xor
and
bndstx
and
dec
xor
inc
inc
and
xor
(bad)
pextrw
ins
repnz
iret
stc
jno
push
inc
jne
jecxz
push
jmp
push
jo
dec
jl
inc
aaa
mov
inc
dec
in
repnz
dec
mov
cmp
rcr
fld
and
cdq
sub
icebp
out
xchg
inc
push
cmp
mov
das
inc
push
or
sbb
mov
daa
fdivr
test
cs
icebp
sbb
mov
mov
pop
push
jne
test
mov
sbb
icebp
add
sar
xor
dec
daa
sahf
ret
or
imul
dec
popa
call
nop
loope
push
dec
xchg
pcmpeqw
mov
ss
jb
inc
imul
daa
out
inc
push
add
fs
mov
sbb
lock
rol
jo
mov
inc
pop
xor
jle
dec
call
inc
gs
pop
out
lods
jb
sub
not
dec
arpl
daa
or
inc
mov
aad
test
and
jp
punpcklwd
push
add
hlt
or
ficomp
jg
adc
push
imul
jb
xchg
aad
test
sbb
cmps
lock
jge
rcl
lods
ror
mov
es
dec
jecxz
(bad)
mul
push
mov
inc
movs
popf
jno
fs
dec
cmp
cmp
xchg
test
jae
mov
or
push
scas
ds
jne
aaa
jne
or
scas
movs
cmp
jne
inc
xor
inc
rcl
dec
cs
xor
sbb
mov
pop
inc
add
clc
aas
hlt
ficom
rcr
daa
rcr
sbb
mov
dec
jns
mov
adc
cli
jmp
outs
cmc
ins
call
pop
dec
cmp
hlt
shl
push
inc
movs
call
inc
outs
push
into
mov
stos
xchg
push
fwait
out
mov
cmp
push
lock
(bad)
xor
pop
cli
or
lahf
push
in
test
mov
or
hlt
cmp
mov
neg
pusha
das
xchg
lods
movs
or
and
push
cmp
push
mov
jle
out
push
jp
push
and
loope
repz
repnz
ret
and
jle
popf
pusha
pop
xchg
cmp
fild
cmp
pop
sar
loop
(bad)
ds
jae
ins
scas
outs
rcr
jns
cmp
or
hlt
outs
sbb
lds
icebp
(bad)
loopne
bound
shr
cmp
mov
hlt
push
inc
lds
inc
mov
test
mov
dec
push
retf
inc
fwait
adc
cmps
add
jnp
ret
add
outs
push
cmc
adc
aam
into
dec
stos
ja
repnz
arpl
repz
int
mov
add
(bad)
xlat
stc
mov
jmp
pop
push
in
and
(bad)
ror
shl
dec
jge
outs
jecxz
imul
jb
das
push
xor
mov
leave
and
lods
sub
mov
mov
out
jno
sbb
out
or
aas
mov
xor
push
(bad)
mov
inc
jp
cmp
xor
jge
xchg
ror
push
mov
or
dec
(bad)
test
push
mov
sbb
pop
mov
lods
movs
js
int
sub
addr16
popf
pop
outs
mov
add
sar
in
jnp
scas
mov
out
inc
retf
mov
xor
mov
das
or
(bad)
pop
mov
ds
lahf
scas
cmp
idiv
out
jg
pusha
stos
xlat
imul
fucom
sub
pop
aas
push
shl
shr
cs
fisub
mov
mov
ss
out
imul
xor
inc
ffree
enter
out
imul
push
(bad)
popa
jne
in
inc
add
cmps
sbb
xchg
cdq
jno
or
(bad)
retf
(bad)
inc
xor
out
pop
jmp
pop
ja
push
imul
nop
mov
dec
ret
mov
dec
arpl
dec
fs
inc
(bad)
mov
adc
sbb
sbb
inc
push
or
sbb
inc
sub
inc
in
pop
call
jle
jbe
jns
imul
and
hlt
cmp
inc
out
mul
mov
push
cmp
pop
in
dec
dec
jp
inc
js
out
push
and
mov
adc
cmp
sbb
jg
jmp
inc
clc
sbb
xchg
xor
popf
(bad)
mov
cmp
in
mov
dec
xchg
out
xchg
sbb
adc
and
shl
and
or
imul
push
dec
je
dec
jns
call
xchg
data16
pop
and
js
mov
inc
cmps
shl
(bad)
cmp
sbb
and
adc
adc
mov
out
mov
arpl
mov
cmp
pushw
xchg
pop
and
xor
jp
adc
sub
out
outs
or
mov
or
xor
lock
das
jg
jp
pop
xchg
int
sbb
sbb
jno
test
sub
xchg
pop
sub
dec
or
push
shr
jnp
sbb
fisubr
inc
stos
inc
cwde
add
sbb
push
enter
addr16
xor
sti
imul
or
je
sub
inc
cmp
imul
mov
adc
push
inc
or
adc
push
in
pop
out
js
xchg
pop
mov
jnp
retf
xor
pushf
cmps
inc
sub
ss
mov
sub
outs
jo
lods
pop
cmp
repnz
or
cmp
cmp
jae
jbe
sub
stc
inc
iret
push
jl
cmp
int
stos
adc
pop
out
sub
fcomp
or
adc
cmp
jb
sbb
or
sti
imul
ds
fs
outs
mov
jne
adc
out
fwait
sub
setae
fdivrp
add
aas
mov
pop
das
push
pushf
js
dec
call
mov
mov
stc
adc
scas
inc
mov
bswap
jl
xchg
es
dec
inc
or
call
xor
mov
cmp
cli
sti
pop
call
cwde
pop
push
daa
jge
cld
add
jg
imul
mov
dec
das
fwait
mov
mov
xor
shr
gs
ret
fdiv
xchg
cld
das
mov
xchg
hlt
push
retf
aaa
int
loop
sbb
js
dec
in
push
lock
or
mov
add
imul
or
xor
pop
(bad)
fistp
jl
sub
fs
or
pop
and
test
cmps
or
scas
je
sar
scas
inc
out
inc
enter
sub
iret
aaa
jo
cli
inc
mov
push
std
std
mov
hlt
(bad)
and
nop
mov
mov
push
pushf
cmp
sub
jb
adc
pop
push
scas
jle
es
sbb
jmp
cmp
rcr
stos
adc
mov
(bad)
rol
retf
inc
sub
xor
cmp
ss
stc
fs
(bad)
add
hlt
mov
inc
clc
outs
pop
daa
cmp
enter
in
nop
dec
add
push
mov
es
mov
push
jmp
out
pusha
fadd
in
push
repz
(bad)
pop
cmc
sub
push
cs
and
(bad)
sbb
in
mov
aaa
and
xor
daa
dec
and
inc
mov
mov
inc
and
das
loope
xlat
cmp
xchg
or
enter
fidivr
sbb
test
mov
clc
push
sub
mov
mov
mov
dec
fld
ds
push
jns
nop
fs
in
xchg
vaddsubpd
ror
movs
ficomp
sub
ja
daa
mov
dec
mov
jbe
jo
ds
push
lods
mov
adc
pop
adc
push
sbb
ins
xor
in
(bad)
bound
sbb
repz
dec
popf
jae
sub
xchg
stos
inc
shr
pop
das
ficomp
rcr
xor
ror
ins
and
or
outs
mov
sub
das
mov
pop
fild
add
dec
out
shr
pop
out
mov
adc
pop
or
test
pop
hlt
add
cmp
sti
sbb
ds
pusha
ins
ror
xor
pop
xor
xchg
outs
clc
dec
cli
fidiv
out
xchg
repnz
mov
data16
iret
ret
scas
gs
inc
rol
leave
mov
int
adc
and
push
loop
enter
mov
shr
stc
adc
iret
jnp
mov
inc
adc
fidiv
xor
kxnorw
daa
int3
out
or
pop
outs
jns
sbb
jp
add
push
test
push
push
and
inc
fst
pop
loopne
push
or
mov
cld
js
ja
popa
neg
aaa
and
dec
add
cmp
ins
pop
mov
sbb
jp
ds
arpl
imul
ins
mov
push
std
arpl
jo
mov
cmp
dec
cmp
push
stos
inc
mov
lock
push
and
pop
adc
push
pop
das
dec
clc
lods
xchg
punpckldq
outs
ss
sbb
mov
push
and
pop
jbe
sbb
imul
and
sub
ins
cmp
adc
sub
aas
cmp
inc
or
mov
jp
sbb
jg
ds
ds
or
adc
outs
pop
cmp
or
fstp
mov
push
xor
cmps
aad
adc
xor
adc
cmps
loop
xor
and
addr16
aas
jge
push
and
or
adc
jne
push
sbb
sbb
and
or
ins
jb
sbb
push
je
jne
arpl
cmp
push
cmp
ins
ds
and
inc
mov
hlt
cmp
inc
leave
mov
pop
cmp
mov
and
aaa
and
jne
adc
push
mov
inc
push
ja
fistp
pop
sub
jne
and
xor
mov
icebp
call
cmps
dec
and
inc
add
movlps
adc
jp
push
arpl
mov
push
jb
arpl
addr16
adc
xor
int
daa
(bad)
mov
sub
dec
or
arpl
sbb
adc
mov
inc
frstor
and
add
imul
dec
sbb
sub
mov
fisttp
mov
(bad)
clc
push
push
mov
mov
push
mov
add
mov
pop
add
stos
and
sbb
popf
xor
or
mov
adc
int
xor
xchg
inc
dec
mov
movs
(bad)
sbb
add
fiadd
inc
sbb
jne
xor
mov
jge
add
push
data16
add
mov
and
xor
jecxz
jg
and
aas
out
es
movs
(bad)
jmp
loopne
sbb
jo
and
mov
sar
dec
and
mov
pop
push
stos
(bad)
adc
jmp
aad
mov
nop
es
push
mov
ins
push
arpl
sbb
ins
dec
and
cmp
sub
popa
cmp
push
(bad)
aad
aaa
int3
push
push
cmps
outs
cmp
sar
xor
jge
mov
pop
dec
shl
fnsave
push
movs
xchg
xchg
addr16
hlt
das
push
cmp
jns
inc
(bad)
cmp
pusha
xchg
and
loopne
jp
or
repz
xchg
pop
in
aaa
dec
pop
jb
dec
mov
lods
loop
je
adc
test
push
arpl
inc
adc
daa
jg
add
sub
call
clc
adc
xchg
icebp
imul
mov
sub
xlat
mov
out
cmp
ret
mov
and
adc
mov
inc
das
add
or
or
mov
nop
adc
xchg
in
nop
push
add
inc
popa
dec
shl
repz
xchg
push
shl
repnz
push
sbb
xor
cs
cmc
adc
mov
xchg
iret
and
adc
xchg
ja
test
repz
dec
les
and
ds
in
xchg
xor
adc
sub
lds
mov
loop
and
and
pop
and
ds
xchg
mov
(bad)
lock
push
loopne
mov
xor
and
adc
mov
gs
(bad)
arpl
adc
xchg
test
cmp
inc
in
mov
mov
xchg
sbb
mov
fwait
jle
ret
cmp
mov
jo
je
or
push
mov
sbb
out
shl
out
mov
mov
rol
stos
adc
pop
dec
fisubr
(bad)
mov
sub
ja
jg
or
sbb
sbb
retf
movs
ss
popf
sub
pop
sti
icebp
sar
mov
jecxz
mov
mov
sbb
mov
sbb
ss
xchg
mov
pop
je
stos
(bad)
js
mov
dec
xchg
mov
fwait
mov
dec
jne
adc
cli
sbb
neg
mov
pusha
pop
push
push
jp
enter
out
lds
inc
pop
lds
sbb
and
and
push
push
nop
mov
retf
cmp
add
arpl
sbb
and
cmp
push
adc
sub
call
ds
lahf
or
loop
adc
(bad)
arpl
inc
ret
jno
sub
ja
xlat
and
push
fdivr
dec
mov
les
add
xlat
pop
enter
out
call
jmp
ror
popa
fild
or
clc
inc
clc
mov
xchg
aas
popf
lea
mov
mov
push
popf
inc
ret
loopne
iret
ja
repnz
xchg
mov
sub
loopne
or
xchg
push
inc
add
lods
in
sub
xchg
push
xchg
inc
popa
mov
xchg
jmp
cmc
mov
or
push
icebp
or
imul
mov
mov
or
pop
mov
retf
inc
xor
mov
aad
fcmovb
or
sbb
push
fs
and
mov
push
or
lods
cmp
jbe
pop
out
jmp
sub
fadd
cdq
add
inc
popa
mov
into
cli
imul
cmp
cdq
sar
(bad)
fiadd
mov
cmp
mov
adc
shl
sbb
mov
sub
(bad)
hlt
or
cmp
sub
aas
lods
xchg
fdiv
test
popa
xchg
add
cmp
dec
pushf
mov
popf
pop
xor
xor
pop
push
dec
sbb
movzx
aas
mov
or
push
push
movs
movs
loope
sbb
xchg
mov
sbb
ret
push
daa
or
movs
add
mov
loope
out
inc
imul
ss
int
sub
or
pop
push
(bad)
jmp
inc
rcl
xchg
add
and
inc
mov
fwait
cmc
or
xchg
movs
jp
push
xchg
sbb
or
xchg
mov
inc
dec
mov
dec
out
push
cli
cmps
loope
test
ins
or
and
mov
int3
hlt
push
cmp
into
pop
or
mov
adc
ret
(bad)
xchg
data16
xchg
mov
outs
sbb
xchg
push
cmp
push
adc
jnp
sub
jmp
test
cmps
push
or
fnstcw
xchg
dec
out
xchg
or
sahf
jae
repnz
arpl
pop
(bad)
push
mov
cmp
ins
or
sahf
lea
sub
push
test
inc
or
push
mov
mov
jo
or
retf
aas
or
mov
inc
cld
fcomp
xchg
mov
add
bound
pop
jnp
push
jnp
movs
daa
es
mov
mov
mov
pop
mov
jp
mov
dec
pop
lds
push
repnz
repz
enter
cwde
pop
push
xlat
jmp
or
cmp
sub
call
fst
leave
iret
pop
(bad)
retf
sar
pop
xor
sub
std
ds
sub
sbb
das
imul
ins
xchg
std
sbb
mov
ja
dec
sbb
scas
ror
and
add
cs
sbb
test
xchg
(bad)
inc
sbb
inc
cmp
mov
out
imul
jns
scas
fidiv
sub
push
cmp
dec
std
fmul
dec
or
push
popa
cmova
mov
nop
cwde
mov
aaa
fidiv
bound
out
xchg
pop
mov
lods
xor
rcl
fwait
pop
scas
adc
mov
mul
sar
fwait
rol
cwde
sub
fsubp
sahf
xchg
jmp
outs
sar
sbb
psadbw
dec
jb
repnz
scas
sub
pop
cs
xor
xor
xor
imul
or
adc
fmulp
aad
mov
pop
iret
in
or
dec
mov
adc
pop
push
xor
mov
retf
and
into
outs
shl
xlat
outs
add
lds
jae
add
xor
adc
sbb
xchg
push
adc
xor
mov
outs
adc
pop
int
inc
dec
xor
ret
lods
xchg
cmp
pusha
cmps
or
inc
aam
or
js
dec
jne
lock
or
push
ins
fmul
xchg
movs
stc
or
or
(bad)
xor
jae
or
xor
or
addr16
and
sti
or
xchg
int3
in
jl
ret
mov
fwait
pop
pop
loope
loopne
fnstenv
cwde
pop
adc
pop
pushw
(bad)
cmp
movs
xchg
push
jo
sub
mov
pop
mov
idiv
xor
sub
cmp
xchg
pop
out
cmp
lea
movs
push
pusha
push
mov
fsubr
or
push
sub
sub
push
mov
out
adc
lea
lock
add
mov
mov
mov
test
mov
mov
(bad)
mov
mov
mov
ds
arpl
aaa
add
mov
mov
push
or
ds
clc
call
int
xchg
mov
mov
mov
lds
sub
inc
dec
loop
xchg
adc
pop
fild
push
and
scas
sbb
adc
push
imul
rcl
jecxz
dec
ds
fcomp
jmp
or
jmp
xor
jp
dec
adc
lock
(bad)
inc
into
sbb
push
sub
jmp
xor
or
mov
jg
push
mov
cmp
sub
ret
data16
int
lods
ins
sub
call
cmp
nop
clc
jge
xchg
pop
jae
inc
xchg
aam
cmc
push
nop
mov
add
scas
out
adc
dec
mov
inc
mov
lea
push
outs
xchg
dec
push
leave
xchg
out
frstor
pop
in
loope
fs
jno
hlt
cmp
mov
stos
fnstcw
pop
pop
(bad)
ins
(bad)
lock
int
mul
cld
or
ret
aaa
sub
cmp
mul
neg
and
mov
enter
or
loop
xlat
mov
gs
push
fadd
sahf
rol
jo
fbstp
scas
pop
in
retf
sbb
xor
stc
pop
inc
cmp
cmp
cmp
fdiv
scas
add
jecxz
mov
inc
xchg
ror
inc
les
pop
retf
cmps
vmwrite
outs
xor
into
lods
xchg
pushf
push
and
iret
int
mov
(bad)
mov
mov
(bad)
pop
sahf
adc
imul
pop
or
std
pop
hlt
cmp
pop
xchg
sti
aad
dec
or
scas
fwait
ja
addr16
xchg
pop
sub
imul
shl
inc
pop
call
dec
inc
xchg
shl
scas
mov
cmps
xlat
mov
cli
ret
clc
push
into
aaa
mov
das
mul
add
movs
xchg
dec
retf
pop
and
jb
xchg
mov
pop
mov
pop
mov
push
(bad)
fwait
inc
aam
ins
xchg
sub
lds
jmp
rol
mov
pop
push
mov
and
add
mov
push
jmp
nop
add
xchg
pcmpgtb
cmps
repnz
xor
mov
test
(bad)
sbb
je
repz
pop
retf
mov
sar
mul
or
mov
pusha
call
push
add
push
xor
mov
in
jecxz
rol
fcom
cmp
pop
repz
inc
push
mov
inc
mov
clc
pop
cmp
bndldx
dec
xchg
adc
jbe
and
xchg
push
loopne
add
rol
jmp
or
mov
lods
pop
xlat
cmc
aam
ret
icebp
mov
sbb
je
adc
push
sbb
xchg
ja
mov
jl
add
jnp
(bad)
ret
mov
xchg
xchg
and
xchg
xor
xchg
ja
in
jmp
repnz
dec
push
xor
pop
mul
gs
inc
call
call
xchg
(bad)
lock
mov
and
push
imul
out
leave
push
inc
push
dec
lahf
test
adc
jnp
push
(bad)
test
fwait
(bad)
sub
sub
and
jmp
mov
sub
call
mov
ret
cld
fcmove
push
dec
fs
push
pop
pop
stc
fild
add
pop
cmp
lods
xchg
or
adc
and
popa
lods
push
(bad)
dec
mov
test
mov
dec
jmp
addr16
push
jmp
pusha
in
sbb
loope
push
mov
add
inc
clc
inc
leave
fdiv
push
cmps
je
test
jbe
leave
sbb
push
iret
sbb
xchg
dec
imul
pop
jmp
fcom
jmp
mov
sbb
in
pop
jbe
stc
and
add
in
push
adc
aam
and
sti
adc
sbb
into
push
aaa
adc
dec
mov
out
stc
xor
push
inc
cmp
stc
es
or
iret
mov
mov
pushf
stos
fsubp
pop
icebp
outs
and
sub
icebp
push
arpl
fsub
bswap
retf
cmp
(bad)
es
stc
shl
push
loope
(bad)
or
and
loopne
mov
(bad)
lock
dec
push
pop
jo
mov
mov
repz
out
pop
sahf
iret
shl
add
dec
bound
fild
xor
sub
pop
int3
mov
nop
sub
shr
out
sahf
(bad)
pop
scas
mov
inc
mov
jo
pusha
xor
das
mov
inc
add
mov
fisttp
push
out
dec
and
push
hlt
outs
int
xor
push
aas
adc
mov
mov
adc
xchg
into
icebp
dec
mov
mov
pop
xchg
sti
mov
and
sbb
pop
ins
pop
dec
xlat
push
sbb
inc
call
out
push
xchg
cmp
shl
mov
icebp
and
in
sbb
lds
jg
loope
push
adc
aam
js
out
mov
jl
mov
or
jmp
out
test
imul
or
mov
int3
jmp
jmp
dec
mov
sbb
les
data16
xor
nop
mov
xabort
movs
push
mov
mov
mov
sbb
xor
mov
cmps
out
pop
lods
add
fmulp
(bad)
mov
lea
es
mov
imul
jmp
push
mov
(bad)
int
mov
cmp
out
mov
fsubr
loope
adc
ret
dec
aad
sub
mov
dec
inc
pop
loop
hlt
cmps
rcl
inc
jmp
mov
or
rcr
out
ds
(bad)
cmps
sbb
mov
adc
pop
clc
sub
call
push
pop
ucomiss
add
pop
push
sbb
dec
iret
mov
into
mov
dec
jge
aaa
add
jge
push
sub
and
test
mov
xchg
lods
pop
popf
xor
mov
std
dec
mov
or
retf
stc
paddusw
icebp
add
pop
jmp
mov
shl
arpl
sbb
ja
mov
jle
shr
(bad)
push
cmp
jns
jnp
or
loop
or
mov
fmul
outs
sbb
add
je
popf
mov
(bad)
retf
std
out
(bad)
jge
pop
mov
std
push
cmp
push
clc
ret
popf
mov
in
mov
push
mov
or
movs
bsr
test
mov
mov
stos
pop
popa
pop
outs
sbb
mov
ror
ret
mov
std
mov
test
clc
fstp
cmp
cdq
cmp
(bad)
or
rcr
xchg
dec
adc
mov
aad
add
inc
mov
loopne
mov
inc
icebp
dec
arpl
pop
xchg
sub
dec
adc
inc
jmp
xchg
jo
cmps
dec
retf
push
es
stos
ja
cmps
push
retf
ret
mov
pop
mov
pushf
cmps
pop
jmp
or
mov
imul
fbld
out
xchg
jns
addr16
pop
sub
sbb
ins
ja
jmp
jnp
dec
cdq
cmp
loopne
iret
lock
mov
sahf
mov
stos
mov
jle
and
imul
pop
push
ins
inc
pop
test
xor
pop
test
mov
push
jnp
cmp
jo
lahf
jae
test
mov
fimul
test
xor
push
shl
mov
(bad)
call
in
xlat
dec
enter
inc
pop
jp
xchg
cmps
dec
mov
retf
jge
cmc
das
inc
or
retf
jbe
out
js
cmps
loope
mov
mov
shr
sbb
cmps
add
mov
cmps
outs
jmp
pop
(bad)
shr
out
jg
push
cmps
rol
xchg
inc
inc
test
mov
lods
retf
out
mov
jl
or
or
jp
stos
cld
dec
int3
and
rcl
cmp
pop
jge
rol
adc
and
cmc
in
out
in
mov
xor
pusha
not
das
add
ror
cs
push
and
lods
inc
and
sub
inc
sbb
inc
js
and
lea
out
and
sbb
pusha
fnstenv
mov
push
pop
jl
jmp
ror
mov
and
(bad)
lock
mov
dec
(bad)
hlt
jp
push
add
test
xor
iret
inc
xor
pusha
inc
dec
fs
inc
push
dec
repnz
jmp
into
dec
repnz
sub
out
das
rol
dec
inc
or
mov
jbe
aas
push
adc
addr16
mov
xor
sbb
push
sub
mov
sbb
repnz
sti
push
or
push
nop
cmc
icebp
nop
jg
jmp
rcl
dec
add
xchg
sahf
pusha
dec
inc
out
das
xor
sbb
nop
loopne
pop
out
into
(bad)
ficomp
and
adc
in
mov
xor
inc
mov
and
xchg
movs
inc
mov
sbb
pop
shr
pop
sbb
retf
mov
mov
adc
(bad)
mov
mov
test
mov
clc
mov
add
std
inc
sub
test
pop
jecxz
push
test
(bad)
or
xlat
lds
hlt
lock
mov
ja
icebp
xchg
mov
push
xlat
in
loope
mov
mov
mov
movs
mov
int
inc
test
aaa
mov
mov
call
jmp
push
fsub
pop
or
jp
enter
or
outs
leave
gs
repnz
sbb
loop
in
(bad)
ja
fdivr
test
cmc
in
mov
inc
out
or
div
adc
or
inc
fisttp
sub
in
mov
add
inc
inc
(bad)
mov
fisub
es
xchg
xchg
sbb
or
mov
ja
or
fmul
inc
fnsave
push
daa
cmps
daa
fiadd
call
scas
inc
mov
sbb
mov
cmp
mov
mov
xchg
xor
xchg
dec
inc
jbe
clc
inc
ss
loop
fdivr
aam
mov
push
and
fld
mov
pop
fld1
int
aas
dec
sub
push
xchg
push
enter
mov
inc
fdivr
and
ins
jg
inc
es
enter
mov
es
inc
(bad)
mov
fmul
push
cli
mov
leave
pop
xchg
inc
sti
cli
cmp
cli
push
sahf
mov
adc
sub
mov
popf
imul
mov
rol
mov
mov
cmps
pop
inc
outs
nop
aad
pop
retf
mov
bound
xor
mov
xor
and
pop
les
mov
inc
les
push
jnp
lods
xchg
jmp
mov
mov
mov
ret
mov
push
daa
ret
mov
cmp
outs
rcr
mov
mov
aad
ret
dec
fisubr
cmp
movs
cmp
add
mov
vpsllq
sub
mov
push
es
js
rol
inc
and
leave
adc
mov
push
shl
push
sahf
stc
iret
xchg
push
xchg
inc
shl
add
xchg
mov
cmps
mov
pop
nop
test
cmp
mov
adc
lahf
xor
jmp
inc
cmp
dec
cmp
gs
inc
push
mov
in
sub
in
mov
mov
pop
adc
mov
mov
pusha
and
xchg
rcl
(bad)
mov
loop
shl
xor
fld
adc
dec
jbe
mov
iret
mov
mov
popf
mov
inc
rol
jge
mov
pop
adc
push
push
popf
scas
mov
mov
in
ret
adc
jl
mov
(bad)
mov
mov
mov
aaa
jne
sti
xchg
push
stos
(bad)
(bad)
ja
popa
push
dec
stc
call
cdq
inc
arpl
sti
stos
xchg
ins
data16
sbb
cdq
les
aas
xchg
imul
and
inc
xchg
cdq
push
mov
xchg
jmp
lea
out
imul
and
ins
inc
cdq
fs
push
hlt
out
ss
arpl
ret
inc
stos
cdq
push
fadd
jmp
jmp
xchg
jno
test
fcomp
loope
fwait
cwde
mov
jno
mov
xchg
sti
stos
stos
retf
dec
js
cwde
and
push
cdq
add
(bad)
jbe
xlat
or
push
push
mov
ins
xchg
sub
imul
cmps
enter
sbb
ficomp
cdq
jne
ins
fist
push
or
cdq
mov
cdq
fs
popf
sub
jo
test
pop
mov
inc
cdq
mov
dec
dec
rcl
xlat
push
adc
push
popa
je
pop
repnz
pop
and
repnz
mov
jno
ds
iret
jg
frstor
xor
mov
jg
out
xor
adc
and
outs
rcl
dec
je
ret
scas
pop
cmp
jle
xchg
adc
sbb
imul
jbe
pop
mov
aas
shl
outs
xchg
inc
and
rcr
and
out
mov
sub
jg
inc
adc
jg
pop
es
cmps
dec
sub
das
test
call
ja
popa
sar
sar
xchg
and
ja
sub
dec
adc
sub
outs
pop
xor
mov
jl
ins
pushf
fmulp
outs
and
(bad)
pop
push
and
jg
popf
rcr
into
enter
jg
cmp
bound
pop
arpl
(bad)
(bad)
adc
test
adc
call
nop
test
cmp
test
out
aaa
(bad)
cmp
daa
imul
mov
adc
xlat
retf
mov
inc
call
int
sbb
pop
test
jbe
enter
mov
mov
pop
iret
xlat
sbb
cmp
xlat
dec
or
bound
push
aad
addr16
clc
push
enter
jno
push
pusha
inc
iret
xchg
mov
out
mov
loopne
push
aaa
mov
xor
sub
xchg
inc
out
mov
icebp
jns
cwde
sub
cmp
in
cwde
mov
pop
fstp
test
and
call
imul
cmp
mov
and
scas
sub
dec
sbb
nop
in
push
sbb
mov
ffree
dec
or
fadd
fidiv
and
ja
lods
test
inc
jle
mov
bound
je
mov
push
in
xor
jno
fmul
cmps
scas
fwait
icebp
or
inc
mov
mov
ss
jnp
push
pop
xchg
or
daa
xchg
les
ins
pop
leave
lods
fisttp
mov
fcmovnbe
lea
inc
in
dec
sub
or
enter
pop
and
mov
xor
pop
add
jg
bound
mov
sbb
retf
aaa
ud2
mov
cmp
or
or
in
pop
mov
enter
cmp
jle
cdq
(bad)
(bad)
jge
lea
pop
sub
ins
imul
(bad)
enter
cmp
jecxz
or
dec
pop
popf
fstp
enter
int
sti
or
retf
mov
jmp
sbb
imul
out
jp
jge
call
into
mov
fs
mov
movs
repnz
xchg
out
cmps
ret
mov
jmp
mov
lds
fmul
inc
mov
mov
ret
jnp
jle
jl
in
int3
mov
pushf
int
or
pushf
stos
enter
scas
leave
mov
pop
add
mov
stc
lea
mov
(bad)
sbb
push
jle
jno
loop
xchg
jbe
sub
jns
cwde
push
outs
mov
mov
nop
stos
adc
jbe
pop
fidiv
dec
daa
sub
icebp
pop
adc
cmp
loopne
xchg
sub
mov
data16
mov
and
test
loopne
lock
js
loop
jbe
jnp
into
pop
and
cmp
xchg
xchg
inc
mov
movs
dec
movs
inc
mov
fwait
stc
jmp
test
cmp
paddq
js
dec
stc
cmp
mov
in
sbb
icebp
sub
dec
movs
pop
mov
lds
aad
push
(bad)
sbb
jmp
iret
jnp
cmp
jnp
stc
push
test
mov
xchg
jp
dec
ret
push
push
or
xchg
dec
fldenv
retf
adc
(bad)
sbb
les
ret
xchg
mov
mov
call
sti
inc
jo
push
mov
lea
outs
aas
pop
xor
sbb
push
push
jnp
ret
enter
loop
inc
cmp
adc
jo
push
push
inc
call
adc
nop
sbb
mov
iret
mov
int3
cli
add
pop
movs
movs
int3
jmp
or
add
mov
ins
mov
sbb
int
or
push
inc
sbb
int
push
push
out
mov
dec
sbb
cmp
dec
jl
sub
scas
push
loope
mov
hlt
pop
jmp
stos
aad
push
cld
mov
lock
(bad)
mov
aam
sbb
fdiv
ret
iret
lahf
ss
js
je
sbb
mov
or
cmps
mov
movs
pop
inc
ins
jb
mov
add
add
aam
and
ficomp
call
push
jge
pop
aas
mov
ss
lods
clc
fst
je
mov
xor
sub
xlat
mov
cld
loop
fiadd
mov
fst
fidivr
fdivr
inc
pop
jo
push
imul
adc
lods
ja
pop
test
mov
pop
adc
add
push
(bad)
js
xchg
ss
xor
push
or
jbe
repz
test
push
fs
es
xchg
sub
sbb
push
leave
jo
and
stos
pusha
clc
je
add
push
js
sbb
fmul
outs
inc
out
add
fistp
js
ficomp
fiadd
push
loop
cmp
xchg
fisttp
sbb
mov
sbb
and
mov
sbb
test
ins
shl
pop
icebp
cli
ret
outs
test
mov
je
cmp
jmp
add
dec
xor
inc
pop
mov
jb
nop
push
jmp
cmps
movs
xchg
inc
mov
inc
scas
stc
inc
lock
sti
pushf
mov
sbb
xchg
xor
hlt
nop
in
movs
ror
outs
mov
inc
hlt
(bad)
xchg
xchg
xor
mov
and
mov
outs
xchg
cmp
push
sub
cmc
push
dec
std
(bad)
push
mov
fsubp
sub
sbb
in
add
or
push
xchg
inc
cwde
data16
rcl
out
(bad)
push
push
and
adc
dec
imul
mov
mov
fsub
test
adc
jo
push
wrmsr
dec
adc
jo
in
adc
jnp
aas
test
fs
imul
sub
out
fldenv
xchg
fdivr
out
sub
inc
xor
jp
jmp
xchg
dec
xchg
push
cmps
mov
int3
jns
mov
movs
sti
loope
adc
pop
push
mov
dec
pop
out
addr16
dec
jmp
sub
mov
in
dec
cmp
push
push
cmp
mov
je
xchg
mov
pcmpeqb
(bad)
fidivr
leave
hlt
sub
shr
xchg
mov
(bad)
dec
xchg
(bad)
imul
dec
not
sti
enter
call
movs
or
jns
xchg
jae
pop
push
test
cli
aaa
ret
or
xlat
mov
xor
test
inc
scas
sbb
and
inc
add
sbb
cmc
cmp
out
ror
mov
clc
mov
dec
out
jae
std
cmp
repz
test
movs
mov
adc
jmp
and
mov
cmp
dec
xchg
les
(bad)
jno
pop
mov
hlt
jmp
popf
cmps
sbb
xor
jmp
jns
jge
js
and
inc
int3
sub
cmp
ds
mov
mov
out
stc
stos
push
arpl
cld
cmp
(bad)
mov
repnz
dec
push
ret
mov
xlat
mov
gs
call
sub
inc
and
xor
sbb
mov
pop
lods
or
adc
mov
sub
sbb
movs
mov
add
out
push
pop
mov
jge
idiv
push
pop
pop
or
(bad)
loopne
sub
xchg
lds
pusha
rcpps
sub
hlt
neg
xchg
test
jge
xchg
cmp
mov
sbb
add
mov
mov
mov
jae
pop
int
cmp
loop
iret
aad
mov
mov
xor
rol
hlt
mov
inc
sbb
test
mov
in
js
ins
out
sbb
add
neg
fs
sti
push
mov
push
cdq
xor
das
enter
mov
retf
repnz
sbb
mov
fwait
mov
sahf
adc
mov
mov
aaa
in
imul
mov
lds
(bad)
push
enter
movs
(bad)
push
(bad)
sti
int3
imul
or
pop
mov
pop
jns
cmps
dec
rcl
xchg
stos
gs
push
retf
inc
xchg
cmps
(bad)
inc
ds
mov
mov
ss
test
dec
and
sbb
out
mov
loop
sbb
pop
xchg
fcomp
ja
inc
and
mov
or
out
(bad)
outs
mov
rol
je
outs
pop
imul
and
test
stc
movs
aam
mov
stos
retf
push
fnsave
jge
add
in
mov
shr
int3
or
test
jns
lahf
inc
cdq
cmp
daa
ins
push
sub
repz
retf
xlat
sub
add
mov
push
xchg
mov
jns
jmp
pop
or
dec
mov
pop
mov
mul
inc
mov
cmp
sub
cmp
sbb
pop
dec
stc
in
out
rcl
repnz
cmps
popa
mov
mov
movs
pop
cmp
dec
out
int3
adc
mov
add
lea
xchg
sbb
std
repnz
mov
movs
aaa
xor
dec
cs
pop
xor
xor
das
mov
mov
repz
loope
adc
jns
int3
gs
repnz
mov
inc
inc
mov
scas
pop
xchg
(bad)
lock
push
ja
fcomp
xchg
jnp
push
mov
mov
and
dec
std
mov
fcmove
pusha
xor
push
lahf
(bad)
pop
adc
shl
cmps
mov
(bad)
dec
or
inc
mul
push
and
iret
ror
pop
sti
fdivr
mov
mov
sub
sbb
push
scas
push
add
sub
jo
repz
xchg
loopne
fsubrp
out
loopne
int
gs
xor
sub
ins
push
add
inc
add
clc
fld
pop
fyl2xp1
fldenv
int3
jo
pop
inc
dec
adc
test
pusha
fstp
popa
pop
sbb
mov
cdq
sti
jns
idiv
cmc
mov
daa
pop
xor
and
sbb
addr16
aam
call
cmc
popf
sahf
lods
pusha
lea
xor
pop
xchg
xor
and
xchg
mov
loope
bound
mov
(bad)
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
lea
push
mov
call
add
mov
mov
mov
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
xor
jmp
call
push
push
jmp
call
push
push
push
lea
call
push
lea
push
jmp
sbb
sbb
test
sete
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
mov
mov
push
push
push
push
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
je
mov
test
je
push
call
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
mov
push
push
mov
call
cmp
jne
call
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
test
push
jne
or
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
not
test
push
mov
je
mov
push
mov
call
cmp
je
xor
cmp
mov
jbe
mov
mov
test
je
push
push
push
call
push
lea
push
push
call
mov
test
jne
mov
add
cmp
mov
jb
pop
pop
pop
mov
mov
mov
pop
ret
mov
call
mov
test
je
jmp
lea
push
push
push
push
lea
sub
push
mov
call
mov
push
lea
push
push
call
push
lea
push
push
call
mov
lea
push
lea
push
push
mov
mov
call
test
jne
cmp
jne
mov
xor
mov
mov
mul
seto
neg
or
push
call
xor
add
test
setne
mov
test
je
lea
push
push
push
call
mov
mov
add
xor
cmp
setne
test
je
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
push
call
test
jne
mov
pop
pop
pop
mov
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
xor
mov
mov
push
push
call
cmp
jne
mov
lea
call
pop
pop
mov
mov
mov
pop
ret
mov
push
lea
push
lea
push
lea
push
mov
mov
call
cmp
je
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
lea
push
push
push
lea
push
push
push
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
mov
push
call
mov
lea
call
pop
pop
pop
mov
mov
mov
pop
ret
push
call
cmp
mov
jne
push
call
mov
push
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
lea
mov
add
sub
jne
mov
mov
mul
seto
mov
neg
or
push
call
add
xor
test
mov
jbe
lea
lea
xor
mov
mov
jmp
lea
mov
test
jl
mov
cmp
jge
mov
add
mov
test
jne
xor
mov
jmp
push
call
mov
test
mov
je
mov
mov
lea
test
mov
je
test
jne
xor
jmp
push
call
push
push
call
mov
mov
mov
mov
mov
push
call
sub
sub
add
add
cmp
jb
mov
mov
mov
lea
lea
mov
add
sub
jne
lea
push
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
push
push
push
or
mov
mov
push
push
mov
call
mov
push
mov
call
add
test
jge
call
mov
mov
mov
push
push
push
push
push
call
add
mov
lea
push
call
jmp
call
mov
mov
call
test
je
push
mov
call
mov
push
call
mov
lea
push
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
push
call
test
jne
lea
call
mov
mov
mov
push
push
lea
call
mov
lea
push
push
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
mov
mov
pop
mov
pop
ret
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
push
push
mov
mov
mov
mov
push
push
push
call
mov
mov
sub
mov
sub
mov
lea
sub
add
or
mov
jge
push
mov
call
mov
mov
mov
push
push
add
push
mov
lea
push
call
add
test
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
mov
lea
push
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
push
mov
call
mov
mov
add
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
pop
mov
mov
mov
pop
ret
push
push
lea
push
push
lea
push
push
call
test
je
mov
mov
test
jbe
push
lea
push
lea
call
mov
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
push
lea
push
push
call
test
jne
push
call
pop
xor
pop
mov
mov
mov
pop
ret
push
call
mov
pop
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
push
mov
push
mov
mov
jne
call
cmp
jne
call
mov
cmp
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
lea
call
push
call
add
add
mov
mov
pop
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
push
mov
mov
mov
mov
cmp
mov
mov
je
push
lea
mov
or
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
cmp
mov
mov
jne
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
call
mov
mov
push
lea
call
mov
lea
push
lea
push
mov
call
mov
mov
lea
call
test
pop
je
lea
push
lea
push
call
mov
mov
push
mov
push
call
add
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
sub
push
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
mov
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
test
je
lea
push
mov
call
mov
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
lea
push
lea
push
call
add
mov
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
call
add
test
je
mov
push
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
push
mov
call
mov
mov
push
push
push
push
call
call
mov
mov
push
push
push
call
push
call
mov
add
test
jle
push
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
mov
call
xor
test
setne
test
je
mov
mov
mov
call
add
mov
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
je
sub
je
sub
jne
push
lea
push
lea
call
mov
call
push
push
lea
push
jmp
push
lea
push
lea
call
mov
call
sub
fstp
lea
push
push
call
add
jmp
push
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
lea
push
call
add
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
test
jg
pop
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
call
mov
add
pop
pop
mov
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
push
mov
mov
push
push
push
mov
call
push
mov
mov
call
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
call
mov
mov
add
cmp
ja
jmp
call
mov
mov
mov
push
push
push
call
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
mov
call
push
call
add
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
add
call
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
pop
mov
mov
pop
ret
push
inc
dec
add
dec
add
inc
dec
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
push
or
test
jne
or
mov
mov
call
push
mov
mov
call
add
mov
mov
test
jne
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
mov
mov
add
mov
cmp
je
call
cmp
mov
jne
call
mov
mov
mov
push
push
push
push
call
add
cmp
jne
call
mov
jmp
call
mov
mov
push
push
push
call
add
mov
mov
pop
pop
mov
pop
ret
mov
push
push
push
call
add
test
je
mov
test
jne
lea
call
mov
mov
test
jne
mov
mov
push
mov
lea
push
push
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
call
mov
mov
pop
pop
mov
pop
ret
cmp
jne
cmp
jbe
mov
call
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
call
mov
mov
push
push
call
mov
push
call
push
push
call
xor
add
test
mov
mov
jne
mov
mov
mov
push
lea
push
lea
call
mov
test
je
test
je
push
call
add
mov
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
test
jne
mov
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
mov
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
je
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
mov
push
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
push
lea
call
mov
push
lea
push
mov
call
mov
push
push
lea
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
pop
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
mov
sub
call
test
je
push
call
pop
mov
pop
ret
push
mov
jmp
dec
cmp
je
mov
call
add
cmp
jne
pop
ret
jmp
push
mov
jmp
dec
cmp
je
mov
push
call
add
cmp
jne
pop
ret
jmp
push
mov
push
mov
push
call
push
call
add
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
push
call
push
call
add
mov
mov
jmp
mov
cmp
jne
mov
shl
push
call
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jge
mov
sub
push
lea
push
call
jmp
jle
sub
push
lea
push
call
pop
pop
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
mov
cmp
jl
shl
push
call
mov
mov
shl
push
push
mov
shl
push
push
call
mov
mov
sub
push
lea
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
test
push
mov
jge
call
cmp
jl
push
lea
push
call
mov
push
lea
call
pop
pop
ret
push
mov
mov
push
not
test
mov
push
mov
je
push
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
jmp
call
push
push
mov
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
pop
pop
pop
ret
mov
ret
mov
ret
mov
and
mov
ret
xor
ret
push
mov
push
mov
test
jne
mov
jmp
and
push
push
push
call
test
mov
pop
pop
jne
push
push
call
test
pop
pop
jne
lea
push
push
call
test
pop
pop
jne
mov
jmp
mov
xor
pop
pop
pop
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
xor
pop
ret
mov
and
mov
ret
push
push
push
mov
call
test
pop
pop
je
mov
add
neg
sbb
and
jmp
xor
pop
ret
push
mov
push
add
call
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
call
pop
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
push
call
pop
ret
mov
mov
mov
push
call
ret
mov
mov
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
call
xor
ret
mov
mov
ret
xor
inc
ret
mov
mov
mov
mov
xor
ret
xor
inc
ret
xor
inc
ret
mov
and
mov
ret
push
mov
test
jne
mov
jmp
and
push
mov
cmp
je
mov
mov
call
test
je
mov
mov
push
call
mov
mov
xor
jmp
mov
pop
pop
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jl
cmp
jge
mov
lea
ret
push
push
push
push
call
int3
push
mov
push
push
lea
push
push
call
add
test
jge
push
call
mov
leave
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
mov
push
call
xor
pop
ret
mov
test
jne
mov
jmp
and
mov
test
je
mov
mov
push
call
xor
jmp
mov
ret
mov
test
je
mov
push
call
ret
push
mov
call
xor
cmp
jne
cmp
je
push
push
lea
push
push
push
call
pop
ret
push
mov
push
xor
cmp
jle
cmp
jne
call
cmp
push
jle
lea
push
mov
call
mov
push
push
call
test
pop
pop
je
inc
cmp
jl
xor
pop
pop
pop
ret
xor
inc
jmp
mov
mov
lea
test
je
mov
mov
mov
ret
push
push
push
mov
call
push
call
add
test
je
mov
mov
mov
add
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
cmp
mov
jne
mov
push
call
push
call
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
mov
je
mov
lea
push
call
mov
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
call
test
jl
mov
test
je
mov
lea
push
push
call
mov
test
mov
je
mov
push
call
and
cmp
je
mov
mov
cmp
jne
mov
xor
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
je
cmp
jne
cmp
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
call
test
jne
inc
mov
mov
imul
lea
cmp
jne
jmp
mov
cmp
mov
jne
mov
mov
test
je
mov
push
call
and
push
call
push
call
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
call
mov
and
mov
movzx
and
test
jge
mov
lea
call
mov
lea
call
ret
movsx
cmp
jbe
mov
jmp
test
je
mov
shl
cmp
ja
push
call
test
pop
je
movsx
shl
call
mov
jmp
movsx
shl
push
lea
call
mov
jmp
xor
test
je
movsx
xor
test
jle
mov
sub
dec
shl
add
mov
movsx
inc
cmp
jl
mov
mov
test
je
sub
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
test
jne
lea
push
push
lea
push
movsx
push
movzx
push
push
lea
push
push
call
mov
lea
push
call
jmp
push
mov
call
mov
mov
lea
mov
and
mov
and
push
mov
mov
mov
push
push
call
and
mov
call
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
call
mov
mov
mov
lea
push
push
push
call
mov
mov
cmp
jne
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
mov
test
je
push
lea
call
push
mov
or
push
call
test
pop
pop
mov
je
mov
test
je
push
and
call
cmp
jne
inc
mov
imul
add
cmp
jne
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
mov
mov
call
imul
push
mov
mov
mov
mov
add
call
mov
test
je
xor
test
setne
mov
dec
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
xor
jmp
push
push
mov
call
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
and
test
je
push
push
call
jmp
xor
test
je
mov
xor
inc
call
ret
push
mov
call
mov
mov
call
test
je
xor
inc
jmp
mov
xor
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
or
cmp
mov
jne
cmp
je
mov
push
call
jmp
cmp
je
mov
push
call
xor
call
ret
push
mov
call
mov
push
lea
call
lea
xor
push
mov
call
mov
cmp
mov
je
mov
cmp
jne
push
call
push
push
lea
push
push
call
mov
push
push
lea
call
mov
push
push
lea
mov
call
mov
push
push
lea
mov
call
mov
push
lea
push
push
push
push
mov
push
call
mov
lea
push
call
lea
push
call
lea
push
call
lea
push
call
push
call
call
ret
push
mov
push
xor
lea
mov
mov
mov
cmp
je
push
push
call
mov
mov
mov
pop
pop
ret
push
mov
call
mov
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
cmp
jle
lea
push
mov
call
mov
mov
add
mov
cmp
je
inc
cmp
jl
or
test
je
mov
push
call
xor
call
ret
or
test
je
mov
push
call
xor
inc
jmp
push
mov
mov
mov
cmp
push
jne
test
jne
xor
inc
jmp
lea
test
jl
cmp
ja
push
push
push
call
add
test
je
mov
mov
push
mov
push
call
inc
xor
inc
pop
pop
ret
xor
jmp
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
push
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
call
mov
xor
test
setne
test
jne
push
call
and
mov
and
push
pop
lea
push
push
push
call
test
mov
jl
and
mov
lea
push
push
call
test
mov
jl
test
je
mov
cmp
je
test
jne
movzx
cmp
jne
push
push
call
pop
movzx
mov
pop
jmp
sub
je
sub
je
dec
je
movzx
jmp
push
jmp
push
jmp
push
pop
test
je
mov
mov
push
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
push
push
push
push
mov
xor
cmp
jne
mov
jmp
mov
lea
push
push
mov
call
cmp
jl
mov
push
xor
cmp
jbe
mov
lea
push
push
push
call
cmp
jl
mov
mov
cmp
je
mov
push
push
call
mov
mov
movzx
inc
cmp
jl
push
mov
push
call
mov
cmp
je
movzx
cmp
jle
mov
jmp
cmp
mov
jle
mov
add
mov
movzx
cmp
mov
jne
mov
mov
mov
or
mov
cmp
jne
mov
push
push
call
pop
mov
mov
pop
inc
movsx
inc
inc
add
cmp
jl
movzx
movzx
sub
je
dec
je
dec
je
dec
jne
push
jmp
xor
jmp
push
jmp
push
pop
mov
mov
mov
mov
mov
push
mov
mov
push
call
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
test
mov
mov
mov
mov
je
test
je
test
je
test
je
push
mov
mov
movs
movs
movs
movs
mov
mov
movs
movs
movs
xor
cmp
movs
mov
mov
mov
je
lea
push
push
mov
mov
push
call
mov
xor
cmp
jl
mov
lea
push
push
push
mov
mov
push
call
mov
cmp
jl
mov
push
lea
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
push
push
push
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
lea
push
push
push
mov
call
test
jl
mov
cmp
je
push
mov
push
push
call
mov
jmp
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
lea
push
push
call
mov
cmp
jl
mov
lea
push
mov
mov
push
call
mov
cmp
je
xor
cmp
jbe
mov
mov
lea
push
push
push
call
mov
cmp
jl
cmp
je
mov
movzx
inc
cmp
jl
jmp
mov
mov
lea
push
push
push
call
mov
cmp
jl
mov
lea
push
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
cmp
je
push
push
push
push
call
mov
mov
add
push
push
call
mov
cmp
je
mov
push
call
mov
push
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
pop
jmp
mov
mov
pop
xor
pop
call
leave
ret
push
push
push
push
call
ret
mov
push
push
push
call
ret
push
mov
push
and
push
mov
push
push
call
push
mov
push
mov
push
push
lea
push
push
mov
call
test
je
mov
jmp
mov
push
mov
call
mov
lea
push
push
mov
push
call
test
jge
mov
jmp
test
je
mov
mov
imul
mov
call
mov
mov
push
lea
call
mov
mov
mov
call
cmp
je
test
je
xor
cmp
mov
setne
dec
mov
mov
test
je
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
mov
test
mov
je
push
lea
push
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
push
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
test
jl
and
and
lea
push
movzx
push
push
movzx
push
lea
push
call
mov
test
mov
jge
or
test
je
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
mov
test
jge
mov
or
test
je
mov
push
call
mov
jmp
lea
push
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
call
ret
mov
test
jne
mov
jmp
push
push
push
push
push
call
add
ret
push
mov
call
mov
mov
call
mov
xor
lea
mov
mov
mov
call
mov
mov
lea
call
lea
mov
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
call
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
lea
call
lea
call
lea
call
mov
sub
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
sub
call
or
mov
call
call
ret
lea
push
push
push
add
call
ret
push
mov
mov
test
je
mov
push
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
push
push
call
test
pop
pop
je
inc
mov
imul
add
cmp
jne
mov
jmp
imul
mov
mov
mov
lea
push
push
lea
push
mov
push
call
test
jge
xor
jmp
push
lea
push
mov
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
mov
lea
mov
call
test
je
push
xor
cmp
push
jle
push
lea
call
mov
push
push
push
call
push
mov
call
inc
cmp
jl
lea
call
xor
cmp
jle
lea
push
mov
call
mov
add
mov
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
add
push
add
push
push
lea
call
push
mov
call
mov
test
mov
je
mov
call
push
call
pop
inc
cmp
jl
lea
call
pop
pop
pop
leave
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
pop
mov
push
push
push
mov
call
cmp
je
cmp
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
mov
mov
push
push
call
test
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
sub
push
push
push
push
xor
push
mov
call
pop
mov
call
lea
push
push
call
cmp
jne
push
mov
call
push
mov
call
mov
cmp
je
mov
call
cmp
je
mov
lea
push
push
push
call
test
jl
push
lea
call
mov
lea
cmp
jne
push
push
push
push
push
lea
push
push
push
lea
push
mov
call
mov
call
mov
push
push
push
call
test
jge
mov
mov
call
mov
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
push
push
push
push
push
mov
call
pop
pop
xor
pop
inc
pop
add
ret
push
mov
call
mov
and
and
lea
lea
mov
push
mov
call
cmp
je
lea
push
push
push
mov
call
mov
call
mov
or
test
je
mov
push
call
call
ret
mov
push
mov
cmp
jne
call
lea
cmp
je
push
push
call
lea
call
pop
ret
push
mov
call
mov
call
lea
xor
cmp
je
push
push
call
lea
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
mov
mov
push
call
cmp
je
push
push
call
mov
or
cmp
je
mov
push
call
mov
call
call
ret
mov
ret
push
mov
call
mov
mov
cmp
jne
and
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
cmp
je
and
mov
mov
and
lea
push
push
call
push
lea
call
push
mov
mov
call
mov
add
call
push
or
call
push
lea
call
push
mov
call
mov
mov
push
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
mov
mov
mov
lea
push
call
lea
push
call
mov
mov
mov
mov
cmp
mov
je
mov
lea
mov
lea
push
call
mov
mov
cmp
je
cmp
jne
mov
push
mov
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
lea
mov
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
cmp
je
lea
push
sub
mov
lea
movs
movs
mov
movs
movs
sub
mov
lea
movs
movs
movs
push
movs
call
mov
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
cmp
je
mov
cmp
je
mov
cmp
jl
mov
cmp
mov
mov
je
mov
push
call
mov
add
call
mov
cmp
mov
je
mov
push
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
call
ret
push
mov
call
mov
mov
lea
mov
xor
mov
call
cmp
mov
jne
xor
jmp
mov
mov
mov
imul
lea
mov
cmp
je
cmp
jne
mov
push
lea
push
push
mov
mov
call
mov
xor
cmp
je
push
mov
call
test
jne
push
mov
mov
call
pop
mov
mov
cmp
mov
je
mov
neg
lea
sbb
push
and
push
call
mov
mov
jmp
mov
call
mov
ret
mov
mov
mov
test
jne
mov
or
push
call
mov
jmp
lea
push
push
push
push
call
test
mov
jl
lea
push
lea
call
jmp
push
mov
call
jmp
push
pop
cmp
jne
push
mov
call
test
jne
and
push
lea
push
push
mov
mov
call
mov
test
je
and
mov
lea
push
push
push
mov
call
mov
test
je
and
mov
lea
push
push
mov
call
cmp
je
and
push
mov
call
pop
mov
mov
test
mov
je
push
mov
push
neg
lea
sbb
and
push
push
call
jmp
xor
mov
mov
jmp
mov
call
mov
ret
mov
mov
cmp
jne
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
jmp
lea
push
lea
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
or
test
je
mov
push
call
inc
xor
jmp
mov
call
ret
mov
push
mov
cmp
jne
push
call
push
mov
call
pop
ret
mov
mov
mov
mov
jmp
push
mov
test
jl
call
cmp
jl
call
mov
call
mov
pop
ret
push
push
call
mov
xor
cmp
jne
mov
jmp
cmp
push
mov
jne
push
push
call
cmp
pop
pop
mov
jne
mov
jmp
push
mov
call
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
jne
call
mov
call
mov
call
ret
mov
push
call
pop
mov
test
je
push
call
pop
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
call
cmp
je
xor
jmp
xor
mov
push
call
pop
ret
push
mov
push
and
push
push
lea
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
call
mov
lea
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
add
cmp
je
test
je
mov
add
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
add
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
or
je
mov
mov
dec
jne
mov
mov
jmp
mov
mov
dec
je
push
push
lea
lea
cmp
jbe
mov
rep
pop
pop
sub
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
push
push
push
push
push
call
pop
pop
cmp
je
lea
push
call
or
je
mov
cmp
jne
mov
or
je
push
call
jmp
mov
push
push
call
add
push
mov
call
mov
mov
mov
mov
mov
cmp
adc
mov
add
jmp
mov
pop
ret
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
je
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
cmp
setge
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
je
mov
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
mov
cmp
je
dec
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
inc
cmp
jne
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
mov
cmp
setne
cmp
je
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
mov
push
call
pop
pop
mov
push
call
mov
push
push
push
push
call
mov
push
push
call
add
mov
call
xor
mov
cmp
sete
dec
call
ret
mov
push
call
pop
ret
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fsin
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fsin
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fcos
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fcos
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fptan
fstsw
sahf
jp
fstp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fptan
fstp
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
fld
je
fchs
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fxch
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
je
fldpi
jmp
fldz
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fld1
fpatan
cmp
jne
mov
lea
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
test
je
fchs
jmp
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
je
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpnlepd
cmp
jl
cmp
jg
andpd
addsd
movq
fld
ret
fld
ret
cmpnlepd
andpd
movq
fld
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
jne
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpltpd
cmp
jl
cmp
jg
andpd
subsd
movq
fld
ret
fldz
ret
cmpltpd
orpd
andpd
movq
fld
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
fxch
cmp
je
fprem
jmp
call
fstsw
fwait
sahf
jp
fstp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
movapd
movapd
psllq
psrlq
psrlq
andpd
movd
psubd
mov
psrlq
psllq
movd
cmp
jl
cmp
jg
movq
subsd
orpd
movq
fld
ret
movq
fld
ret
cmp
movq
je
movq
cmp
fldz
jl
fchs
ret
movapd
addsd
movq
andpd
cmpneqpd
pextrw
andpd
orpd
mov
cmp
jne
movq
fld
ret
sub
movlpd
mov
mov
add
mov
add
mov
sub
mov
call
fld
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
fst
call
call
add
ret
lea
call
push
fstcw
mov
je
cmp
je
call
test
jne
fsqrt
cmp
jne
mov
lea
jmp
test
jne
test
jne
cmp
jne
jmp
call
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fxch
fstp
fst
mov
call
add
ret
lea
call
mov
push
fstcw
cmp
je
call
and
lea
cmp
je
call
je
test
je
mov
and
jne
fyl2x
call
cmp
jne
fchs
cmp
jne
lea
mov
jmp
cmp
jne
lea
mov
call
pop
ret
lea
call
test
jne
inc
jmp
faddp
mov
jmp
test
jne
faddp
mov
jmp
xor
jmp
xor
and
or
jne
lea
call
mov
mov
and
and
cmp
jne
or
jne
test
jne
sub
mov
push
sub
fstp
fstp
fsave
call
add
pop
frstor
fld
add
test
je
mov
jmp
mov
and
or
jne
fstp
mov
and
or
je
call
mov
shr
test
je
fld
test
je
fchs
mov
jmp
fldz
test
je
fchs
jmp
fstp
fld1
jmp
fld
call
fchs
test
jne
fstp
fstp
fld
mov
jmp
fld
frndint
fcomp
mov
fstsw
sahf
jne
fmul
inc
fld
frndint
fcompp
fstsw
sahf
jne
inc
ret
fstp
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldln2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldlg2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
fldz
add
jmp
push
mov
push
push
call
fld
mov
mov
and
cmp
pop
pop
jne
or
push
push
fstp
call
cmp
pop
pop
jle
cmp
jle
cmp
jne
push
fld
push
push
fstp
push
call
add
jmp
fld
jmp
fld
fadd
push
sub
fstp
fld
fstp
push
push
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
fld
add
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
push
call
mov
mov
and
cmp
pop
pop
jne
fld
push
push
fstp
call
test
pop
pop
jle
cmp
jle
cmp
jne
fild
push
sub
fstp
fld
fstp
push
call
add
jmp
push
push
call
pop
pop
jmp
fld
push
fadd
sub
fstp
fild
fstp
fld
fstp
push
push
call
add
jmp
fldz
fcomp
fnstsw
test
jnp
fld
lea
push
push
push
fstp
call
mov
mov
add
test
jge
mov
sub
cmp
jl
jmp
mov
sub
cmp
jg
add
cmp
jle
push
sub
fstp
fld
fstp
call
fstp
fild
fstp
push
push
fld
fstp
push
push
jmp
cmp
jle
add
push
push
push
fstp
call
add
push
sub
fstp
fild
fstp
jmp
cmp
jge
fmul
push
sub
fstp
fild
fstp
fld
fstp
push
push
jmp
cmp
jge
add
push
push
push
fstp
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
add
fld
pop
pop
leave
ret
call
mov
mov
ret
call
mov
imul
add
mov
mov
shr
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
add
xor
je
sub
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
add
xor
je
sub
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
cmp
je
push
mov
mov
lea
push
push
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
leave
ret
push
mov
cmp
jl
jg
cmp
jb
mov
test
jl
mov
jg
test
jb
sub
sbb
mov
mov
fild
pop
ret
call
fldz
mov
pop
ret
push
mov
sub
push
push
xor
push
lea
push
push
mov
mov
xor
call
add
cmp
je
cmp
jne
push
push
push
push
push
call
add
mov
cmp
mov
mov
jne
cmp
je
push
push
call
mov
neg
pop
sbb
pop
inc
jmp
cmp
push
mov
mov
mov
je
call
mov
call
mov
push
lea
push
push
push
call
add
mov
call
cmp
je
mov
jmp
cmp
je
call
cmp
jne
call
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
test
mov
jne
mov
push
lea
push
push
push
call
add
mov
pop
push
call
pop
pop
mov
pop
leave
ret
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
mov
mov
push
push
push
xor
xor
sub
je
dec
je
dec
jne
mov
jmp
mov
push
pop
jmp
mov
push
jmp
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
mov
cmp
je
cmp
je
mov
inc
cmp
jne
mov
jmp
mov
inc
mov
sub
push
add
push
push
call
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
push
push
call
mov
push
xor
inc
push
push
call
add
inc
cmp
jb
or
jmp
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
sub
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
xor
mov
call
mov
mov
push
call
pop
test
jne
mov
mov
call
mov
jmp
push
call
pop
mov
cmp
jne
mov
push
jmp
mov
push
pop
cmp
jne
push
call
pop
jmp
push
push
mov
call
pop
test
pop
jne
push
push
call
pop
pop
test
je
mov
cmp
jne
call
mov
cmp
jne
mov
jmp
cmp
jne
push
call
pop
mov
cmp
je
mov
mov
push
push
jmp
cmp
je
push
call
pop
cmp
jb
mov
cmp
je
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
call
mov
mov
mov
mov
call
cmp
je
mov
jmp
xor
push
call
pop
ret
mov
mov
mov
call
ret
push
mov
push
and
lea
push
push
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
jmp
mov
push
call
pop
test
jne
call
mov
jmp
push
call
pop
mov
mov
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
inc
push
mov
sub
push
push
call
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
jmp
push
push
mov
call
pop
pop
test
jne
call
mov
mov
cmp
jne
mov
jmp
mov
call
mov
mov
call
mov
push
push
push
push
lea
push
call
add
cmp
jne
push
push
mov
call
pop
pop
test
je
call
cmp
jne
call
mov
mov
cmp
je
push
call
pop
mov
cmp
jne
push
call
pop
jmp
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
cmp
je
call
mov
mov
call
ret
xor
mov
cmp
je
push
call
pop
push
call
pop
ret
push
mov
push
and
lea
push
push
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
sub
mov
sbb
xor
push
add
push
adc
push
push
call
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
mov
xor
add
adc
mov
mov
xor
pop
leave
ret
mov
mov
push
mov
lea
jmp
cmp
je
add
cmp
jb
cmp
pop
jb
test
jne
lea
cmp
jb
cmp
jae
push
push
push
call
add
test
je
mov
inc
mov
lea
ret
xor
ret
push
push
call
xor
xor
mov
mov
mov
mov
mov
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
jne
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
or
push
push
lea
push
call
add
cmp
je
xor
inc
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
push
call
pop
test
jne
push
call
push
call
pop
pop
jmp
push
call
pop
mov
mov
mov
call
mov
lea
mov
push
push
push
lea
push
push
mov
sar
and
imul
mov
push
push
call
test
je
push
call
mov
mov
lea
push
mov
push
call
add
mov
cmp
je
xor
call
mov
cmp
je
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
jne
mov
cmp
je
mov
jmp
mov
lea
push
call
pop
test
mov
jne
mov
push
pop
push
push
lea
push
call
add
mov
mov
mov
cmp
mov
je
mov
mov
cmp
mov
je
mov
mov
mov
mov
push
call
mov
push
call
lea
mov
push
call
lea
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
call
mov
mov
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
jmp
mov
push
mov
push
call
pop
pop
mov
mov
cmp
jne
push
call
push
call
push
call
add
call
mov
mov
jmp
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
je
push
call
push
call
push
call
push
call
add
jmp
mov
push
push
push
call
add
mov
cmp
je
cmp
je
push
call
pop
lea
mov
mov
cmp
jne
push
push
call
pop
pop
cmp
jmp
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
call
push
mov
call
pop
pop
mov
add
mov
cmp
jae
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
push
call
push
call
pop
pop
dec
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
dec
inc
add
push
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
dec
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
push
inc
add
mov
jp
inc
add
mov
scas
dec
inc
add
dec
inc
add
inc
add
inc
add
ss
add
inc
add
add
add
dec
inc
add
cs
add
add
test
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
outs
add
add
add
add
add
add
add
add
outs
add
je
jb
outs
add
add
popa
add
add
add
add
imul
add
jo
pop
add
add
outs
add
jb
arpl
add
add
popa
add
add
add
add
je
jns
je
ins
inc
gs
jne
je
dec
dec
popa
outs
addr16
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outs
addr16
add
add
and
add
add
add
add
imul
add
mov
add
add
inc
add
add
add
add
dec
add
pop
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
push
inc
add
add
add
add
add
ins
cmp
das
add
outs
add
add
inc
inc
outs
outs
je
add
inc
inc
imul
add
inc
push
popa
imul
add
inc
push
imul
add
add
ins
imul
add
inc
inc
inc
add
jae
jb
js
gs
imul
gs
jne
arpl
js
gs
imul
dec
add
add
add
inc
add
add
add
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
add
add
inc
add
dec
add
add
add
(bad)
inc
add
add
add
dec
dec
add
dec
add
add
(bad)
inc
add
add
add
dec
dec
add
add
add
inc
add
add
add
dec
dec
add
dec
add
add
add
inc
add
inc
dec
add
dec
add
add
add
inc
add
add
add
dec
add
dec
add
add
add
inc
add
add
add
dec
add
inc
add
fs
add
sbb
inc
add
inc
add
sbb
add
dec
add
pop
inc
add
sbb
inc
add
inc
add
sbb
add
add
push
retf
adc
add
addr16
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
pop
inc
add
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
retf
sbb
push
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
dec
add
pop
inc
add
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pop
inc
add
push
add
sbb
dec
add
outs
inc
add
dec
add
int3
dec
add
jae
add
int3
dec
add
je
add
int
add
int
add
add
ins
add
je
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
add
add
add
add
add
add
int
add
je
add
jle
add
jg
add
inc
add
mov
inc
add
add
add
add
add
add
into
dec
add
jle
add
jg
add
inc
add
mov
inc
add
add
push
push
add
lods
push
dec
add
add
inc
add
add
add
ror
fild
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
scas
test
imul
inc
add
add
xchg
mov
mov
jbe
inc
add
inc
imul
(bad)
call
dec
add
add
add
inc
add
add
add
add
dec
add
nop
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
mov
mov
lea
cwde
lea
mov
inc
add
mov
add
inc
add
mov
inc
mov
test
inc
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
arpl
gs
add
imul
je
outs
outs
add
adc
adc
add
(bad)
inc
add
add
add
inc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
dec
add
add
adc
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
gs
add
add
dec
add
add
dec
add
add
add
ror
xlat
jg
add
scas
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
test
inc
add
inc
add
xchg
inc
add
xchg
inc
add
stos
inc
add
inc
add
inc
add
cmps
inc
add
xchg
inc
add
add
sbb
dec
add
xchg
inc
add
add
sbb
inc
dec
cmp
push
gs
gs
jae
dec
popa
outs
popa
addr16
gs
outs
arpl
add
ins
add
arpl
ins
add
add
add
add
add
add
add
add
inc
add
mov
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
mov
add
mov
inc
add
inc
add
inc
add
lods
inc
add
inc
add
scas
inc
add
cmps
inc
add
add
add
test
add
test
inc
add
lahf
inc
add
inc
add
ror
dec
stos
inc
add
scas
inc
add
inc
add
add
retf
add
add
lods
ror
aas
test
inc
add
inc
add
inc
add
retf
movs
retf
movs
retf
jp
inc
add
test
inc
add
retf
mov
cdq
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
cdq
dec
add
add
add
call
add
add
loopne
dec
add
add
add
pushf
dec
add
add
add
add
add
(bad)
(bad)
push
int
adc
adc
fs
add
dec
add
std
(bad)
inc
add
cmp
(bad)
call
add
add
std
(bad)
inc
add
add
std
(bad)
inc
add
add
std
(bad)
dec
add
add
add
add
std
(bad)
inc
add
ss
(bad)
inc
and
xchg
and
stos
add
push
mov
retf
inc
add
adc
xor
sbb
push
add
jae
sbb
into
adc
inc
ja
push
cmp
sbb
into
adc
inc
ja
mov
jae
sbb
into
adc
inc
ja
add
sub
adc
inc
ja
cmp
dec
add
add
fld
pop
leave
inc
add
test
inc
add
add
leave
inc
add
aam
add
inc
add
inc
add
inc
add
retf
movs
retf
(bad)
in
add
retf
mov
aad
add
retf
pushf
in
add
retf
mov
inc
add
inc
add
aad
add
retf
sbb
inc
add
inc
add
(bad)
dec
add
retf
inc
add
xchg
inc
add
xchg
inc
add
test
inc
add
inc
add
jmp
inc
add
jmp
call
add
xchg
inc
add
lock
add
icebp
inc
add
icebp
inc
add
repnz
add
repz
add
int
add
xchg
inc
add
xchg
inc
add
repz
add
hlt
inc
add
inc
add
sub
adc
inc
ja
rol
add
add
inc
or
add
add
add
rol
add
add
inc
xor
jae
sbb
into
adc
inc
ja
add
add
or
dec
add
fld
test
fld
movs
retf
and
inc
add
leave
inc
add
fld
test
inc
add
inc
add
retf
in
fiadd
push
fild
xor
inc
add
fild
repnz
push
loopne
add
inc
add
in
add
add
inc
add
loope
add
inc
add
inc
add
fild
jge
inc
add
add
add
dec
add
jg
add
sbb
loopne
dec
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
inc
add
inc
add
xchg
inc
add
xchg
inc
add
rol
loopne
inc
add
fiadd
cmp
inc
add
les
or
inc
add
lds
lds
add
add
mov
mov
mov
ret
add
enter
enter
fiadd
clc
fiadd
xor
inc
add
inc
add
enter
fild
fild
push
cmovae
inc
fadd
popa
aad
add
rol
sbb
inc
add
mov
and
inc
dec
gs
inc
imul
pop
dec
add
add
add
inc
add
add
add
add
add
sub
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
sub
cmp
inc
add
sub
fisubr
inc
add
xor
fld
inc
add
sub
loopne
inc
add
sub
(bad)
sub
cli
sub
jg
inc
add
sub
inc
push
outs
add
add
add
add
(bad)
(bad)
(bad)
inc
data16
push
add
add
add
add
jne
add
add
inc
add
js
inc
add
outs
add
add
ins
add
popa
add
cmp
xor
jae
jne
add
inc
add
js
dec
add
add
jb
popa
add
add
add
add
jne
add
inc
add
js
inc
add
popa
add
add
jb
push
add
add
cmp
xor
jae
jne
add
add
inc
add
js
dec
add
add
outs
add
je
jb
outs
add
add
add
jne
add
inc
add
js
dec
add
add
outs
add
add
outs
add
xor
xor
xor
add
add
fs
add
pop
dec
add
pop
dec
add
add
inc
add
dec
inc
add
add
add
add
add
je
outs
outs
imul
inc
add
je
outs
outs
imul
push
add
jne
inc
imul
gs
arpl
push
add
jne
inc
imul
outs
outs
imul
outs
imul
push
outs
imul
dec
outs
outs
imul
push
arpl
outs
outs
imul
push
imul
add
je
repnz
dec
inc
xor
push
repz
push
fidivr
add
(bad)
in
ffree
xchg
jno
xor
lds
rcl
inc
or
int3
movs
aas
push
ret
dec
xchg
inc
ret
pop
adc
add
popa
scas
mov
inc
mov
call
mov
mov
jne
pop
adc
into
retf
xchg
and
in
mov
mov
lock
aaa
stos
mov
das
imul
mov
cmp
xor
popa
ss
xor
fcmovnbe
shl
stos
cmps
call
rol
lahf
add
cmp
popa
(bad)
mov
repnz
sbb
pop
sub
dec
les
rol
dec
fiadd
push
dec
add
aam
mov
loope
and
add
lock
aaa
push
out
icebp
and
mov
inc
rol
in
call
loope
jno
xchg
mov
gs
mov
clc
cmc
push
imul
ss
sar
out
mov
cdq
mov
fs
cmovne
and
out
inc
mov
rol
ds
jl
mov
add
push
or
or
test
and
mov
xor
inc
retf
mov
sbb
push
and
outs
in
xor
add
cmps
es
inc
cli
mov
rol
mov
popf
mov
adc
adc
ins
xor
(bad)
jb
aam
and
mov
test
int3
shl
or
in
mov
hlt
ins
popa
lahf
ret
add
fdivr
jmp
dec
and
inc
cmp
pop
push
mov
xchg
gs
in
lods
adc
dec
and
into
hlt
fldenv
aam
xlat
push
and
adc
xchg
and
stc
js
pop
add
sub
sbb
sahf
cmp
mov
je
je
adc
mov
xchg
xchg
push
jb
fsub
cld
mov
repz
sbb
and
lods
mov
adc
or
xor
or
mov
hlt
xchg
dec
movs
push
xor
sbb
fild
out
pop
and
aad
inc
or
or
imul
cmp
xchg
adc
imul
dec
mov
cmp
mov
test
and
adc
shl
inc
xchg
dec
push
inc
add
pop
fisubr
outs
std
in
and
cmp
inc
test
popa
dec
and
mov
push
leave
inc
movs
popa
jno
mov
xchg
xchg
rcr
loopne
push
mov
push
and
mov
lods
jmp
mov
xchg
dec
ficom
pusha
gs
stos
dec
out
cmp
xor
xchg
clc
jmp
leave
test
mov
repnz
adc
adc
cmp
mov
test
call
stos
xchg
xchg
mov
inc
lahf
and
test
das
adc
mov
ret
je
test
icebp
ja
movs
(bad)
cmp
out
in
jle
and
dec
seto
or
jbe
test
cwde
and
jb
mov
pop
push
cmps
xor
and
movs
and
lahf
add
je
sub
rcr
imul
mov
int
and
aaa
add
push
into
xor
clc
add
sar
mov
clc
jecxz
cmps
ficom
jecxz
mov
or
int3
add
jge
xchg
mov
jnp
and
xor
inc
repz
mov
movs
(bad)
adc
mov
test
pop
push
xor
mov
xor
cmp
in
push
je
in
inc
jb
js
jmp
xor
sub
movs
es
aad
pop
pcmpeqw
xchg
cmps
mov
es
mov
inc
aam
hlt
nop
out
push
dec
add
xor
cld
add
fsubr
cmps
cli
xor
jl
test
mov
mov
aam
inc
and
stos
push
inc
push
and
popf
dec
clc
mov
hlt
sub
das
xor
adc
(bad)
and
cmps
cwde
xchg
int3
inc
sysenter
mov
scas
push
mov
mov
and
add
sbb
sub
lods
leave
call
pop
shl
jg
in
xchg
add
push
mov
add
inc
lods
xor
mov
sub
in
inc
imul
jno
and
je
test
into
lds
adc
div
inc
int3
je
or
xchg
test
out
out
dec
add
push
gs
bt
and
mov
test
xor
iret
aas
retf
jno
inc
mov
xchg
inc
dec
inc
push
retf
mov
pop
icebp
push
push
cdq
int3
popa
arpl
mov
xchg
push
sub
stos
inc
xchg
lahf
inc
adc
dec
dec
mov
fnsave
and
out
js
add
mov
pop
jno
icebp
add
call
loope
ficomp
dec
xor
and
jne
xor
adc
xchg
lahf
or
add
and
je
out
inc
dec
mov
stos
push
dec
loope
test
mul
adc
dec
movs
(bad)
xlat
or
repnz
xchg
cmp
pop
push
pusha
mov
add
cmp
jmp
gs
gs
fadd
or
out
retf
xchg
rcl
add
adc
(bad)
(bad)
ret
icebp
fadd
push
and
and
mov
cdq
ins
repz
movs
mov
cmp
inc
xor
sahf
lock
cld
push
sbb
inc
push
cmp
add
ins
fimul
xchg
loopne
push
fcom
dec
pop
(bad)
mov
cmps
adc
mov
jg
scas
push
ins
je
movs
sbb
(bad)
shl
mov
adc
jg
outs
mov
xor
xor
add
xor
and
xor
pop
jne
aad
and
mov
shl
movs
hlt
(bad)
clc
call
popa
lahf
xlat
shl
pop
xor
repnz
lods
mov
mov
lds
mov
push
dec
leave
pusha
xor
fdiv
call
out
adc
push
sbb
xchg
mov
dec
repz
daa
xadd
nop
in
sbb
push
mov
add
pop
adc
mov
pop
(bad)
test
push
sub
inc
sbb
adc
rcl
dec
popf
data16
es
adc
in
jmp
icebp
mov
das
test
lahf
imul
jecxz
jle
push
loopne
dec
xor
faddp
xor
lods
inc
cmc
and
or
mov
movs
and
mov
(bad)
push
rol
fld
imul
enter
push
fs
inc
or
das
cmc
add
popf
leave
jp
and
je
test
cmp
test
xchg
test
ja
push
mov
fs
cli
lea
and
sub
add
in
xor
(bad)
test
dec
leave
mov
adc
and
or
mov
ffree
dec
inc
push
in
sub
sbb
mov
inc
add
mov
cmp
xchg
daa
mov
add
fs
mov
aad
fld
pop
pop
jl
imul
cmp
ret
shl
test
pop
and
in
(bad)
mov
fstp
jmp
popa
in
shl
ds
xor
push
mov
ret
repz
xor
cld
dec
inc
popaw
js
dec
(bad)
mov
or
pop
aad
pusha
and
mov
pop
push
je
fiadd
je
jnp
mov
lods
sub
pop
shl
hlt
lock
cdq
std
ret
push
inc
pop
and
pop
xor
popf
vmovups
nop
cmp
fnstenv
dec
add
mov
movs
clc
sub
aam
daa
pop
xchg
inc
das
pop
push
push
jnp
add
and
cmps
ret
loope
sub
les
pop
mov
jb
mov
mov
not
lock
int3
pop
call
rol
and
push
xor
mov
mov
outs
push
ins
mov
mov
and
das
dec
leave
pop
add
dec
cmp
inc
adc
movs
xor
shl
aam
inc
pusha
aaa
mov
and
push
cdq
jne
jl
arpl
adc
in
fimul
cmp
adc
cmp
and
mov
leave
pop
pop
xor
lds
cmps
mov
or
add
xchg
ins
adc
xchg
inc
add
mov
and
adc
test
push
mov
and
adc
push
cmp
mov
add
mov
icebp
int
or
int
sbb
dec
retf
int3
adc
leave
inc
push
scas
enter
cmp
jae
jmp
out
jbe
jp
dec
adc
inc
repnz
fs
out
pop
ss
jmp
jne
ret
mov
xor
inc
dec
fnstenv
mov
daa
dec
(bad)
sub
push
push
push
add
stc
sub
loop
jne
push
jo
in
mov
(bad)
shl
lock
jb
sti
add
lods
xchg
inc
lock
mov
mov
ja
pusha
adc
or
ja
pop
and
add
dec
cmps
cdq
mov
sub
pop
fnstenv
pop
mov
adc
test
xchg
in
ja
stc
inc
adc
ret
aad
stos
ds
ret
xchg
pop
dec
xor
jp
std
inc
pop
add
pushf
pop
lock
lock
repnz
adc
loop
out
push
push
and
push
inc
ja
inc
sbb
mov
or
mov
xchg
mov
jne
dec
movs
lods
inc
cmp
js
ret
(bad)
aad
pop
push
fxam
test
adc
fild
retf
jp
mov
adc
and
bound
jmp
sub
je
sar
mov
hlt
jne
retf
cmp
lds
inc
stc
mov
movs
xor
xor
test
addr16
imul
dec
mov
pop
cmc
xor
pusha
movs
mov
push
jo
xor
ins
enter
mov
mov
(bad)
cmp
add
adc
outs
sub
fsub
icebp
mov
mov
and
cmp
mov
xchg
jno
cmp
jl
je
pop
pop
xchg
jne
jnp
xchg
and
hlt
jecxz
dec
enter
xor
inc
dec
cdq
mov
jae
aas
cmps
adc
adc
add
mov
cmp
aas
pop
rol
das
mov
(bad)
push
sbb
out
cmp
lock
gs
(bad)
out
int
mov
retf
gs
add
sahf
mov
mov
call
inc
push
or
out
push
test
jecxz
inc
dec
outs
movs
sbb
jl
sub
cmp
outs
pusha
nop
nop
repz
cld
or
jns
mov
or
push
pusha
jne
push
sbb
jno
fidivr
into
fs
neg
pusha
push
addr16
sbb
xchg
fbld
push
leave
rol
je
loope
add
pop
hlt
shl
add
lds
and
data16
in
xor
(bad)
int
test
inc
lea
pop
cmp
xlat
mov
std
xor
sub
inc
mov
xor
out
test
push
je
scas
lock
mov
int3
xchg
cmps
mov
xor
inc
es
xchg
cmp
repnz
test
loopne
pusha
loope
adc
jl
and
imul
push
xor
sub
xchg
push
mov
xchg
add
sbb
fadd
sub
aam
cdq
inc
lahf
test
xchg
(bad)
cmps
adc
inc
sbb
(bad)
repz
out
cmp
popa
add
inc
mov
sub
adc
loope
stc
rcr
icebp
mov
addr16
sbb
stos
mov
push
bound
(bad)
push
jecxz
sbb
dec
retf
test
lds
or
ja
jge
mov
in
mov
cld
ins
sbb
and
add
scas
jmp
ror
js
in
cmp
jb
iret
adc
ror
mov
adc
sbb
sub
and
xchg
aaa
mov
aad
and
jmp
mov
jno
aam
imul
xchg
adc
adc
retf
cmp
jmp
fwait
pop
adc
mov
test
jp
loop
scas
gs
into
and
xchg
cmp
imul
dec
ss
add
inc
je
popa
adc
test
sub
sbb
mov
ror
sub
jmp
jbe
or
push
leave
sbb
mov
and
or
and
cmp
push
ret
sar
not
pop
xchg
idiv
mov
cmp
xor
sbb
jmp
xchg
nop
ror
out
adc
lea
adc
dec
sub
inc
scas
xor
ret
xchg
test
push
mov
pop
sbb
push
or
mov
leave
adc
movs
ficomp
popf
imul
hlt
mov
mov
out
pop
icebp
test
ins
sub
call
push
mov
jbe
mov
dec
jmp
idiv
ds
in
dec
pop
xor
fcomp
sub
pop
in
jg
ins
in
mov
jecxz
xor
push
push
xor
jno
jbe
mov
aam
and
dec
enter
and
push
js
xchg
push
adc
rcl
fcom
mov
mov
outs
sub
daa
mov
and
aas
mov
sbb
out
pop
mov
inc
xor
xlat
xchg
add
mov
sub
add
imul
dec
and
shl
(bad)
xchg
xor
dec
cmp
inc
test
jp
cmp
loop
in
jbe
out
lock
je
cmc
xchg
retf
mov
hlt
fidiv
push
cwde
xchg
shl
mov
aam
out
stos
in
clc
pusha
add
xchg
ja
mov
push
xchg
fild
pusha
sub
fs
adc
aad
and
cmp
jp
pop
cmp
movs
sub
pop
cmp
add
or
es
test
sub
(bad)
cmp
test
pop
fidiv
fcmovbe
mov
imul
jl
fs
fnstsw
daa
inc
xchg
(bad)
das
mov
or
adc
cmps
jo
ror
pop
jae
call
stos
in
shl
pop
xor
in
cmp
push
call
jmp
adc
push
xchg
jl
call
leave
inc
arpl
enter
ja
dec
add
or
mov
test
stos
cdq
mov
sub
cwde
dec
test
add
outs
loopne
add
jle
pop
js
in
mov
cmps
in
sub
xor
fs
out
xor
rcr
and
lock
lahf
arpl
fwait
test
icebp
aad
cdq
cmp
ret
bound
cmp
sub
int3
dec
xor
imul
mov
inc
mov
je
jb
pusha
adc
xor
clc
mov
test
cmps
sbb
ret
jnp
or
push
sbb
int3
cwde
jmp
sahf
xor
mov
mov
mov
hlt
out
es
mov
inc
idiv
inc
add
es
or
je
popf
fadd
adc
inc
jne
jp
inc
mov
add
xchg
out
push
jo
pop
push
cmp
adc
les
out
mov
lahf
cs
jo
(bad)
in
adc
adc
es
and
inc
push
mov
lods
push
leave
mov
mov
or
in
pop
inc
daa
push
jl
xlat
pop
cdq
push
push
xchg
mov
pop
mov
mov
aam
xchg
dec
mov
jmp
jl
lahf
or
pop
stos
and
fisub
cs
fbld
test
push
jge
push
shr
inc
in
xchg
mov
ss
(bad)
movs
in
jmp
lahf
add
push
test
aam
fs
push
pop
pop
mul
ror
mov
mov
cmp
mov
sar
jne
test
xchg
inc
shl
jmp
sub
dec
pop
mov
outs
inc
mov
leave
out
sar
mov
or
test
sub
cmp
xor
ror
add
cmp
mov
in
lds
xor
push
inc
mov
dec
jne
dec
sbb
mov
fs
popa
inc
pop
xchg
inc
dec
mov
cmp
xor
jo
fptan
fisub
out
adc
sbb
mov
xor
and
sbb
mov
mov
xchg
aam
push
icebp
outs
sahf
sub
mov
shl
imul
adc
jg
push
and
xlat
std
pop
jo
inc
pop
or
ret
loope
(bad)
clc
adc
add
pop
jo
mov
pusha
jmp
xchg
sub
add
and
les
cmps
fidiv
fs
ja
add
popf
jo
jb
mul
retf
push
xchg
es
sti
dec
aaa
mov
fadd
aaa
into
mov
jmp
xor
lock
or
movs
xchg
outs
adc
push
arpl
sub
dec
sub
outs
popf
mov
out
jmp
mov
fldenv
inc
pop
ja
push
ret
pop
xor
movs
mov
jmp
pop
cmps
fsin
std
add
xor
push
aaa
xchg
sub
jbe
dec
cmp
sbb
inc
push
js
les
rol
add
sbb
push
dec
adc
sar
jb
mov
movs
(bad)
jecxz
(bad)
in
dec
push
xchg
rcl
aad
dec
fnstenv
jge
pusha
test
jl
test
out
data16
jmp
popa
mov
xlat
(bad)
rol
daa
inc
and
jo
pop
adc
inc
sub
outs
xor
mov
push
jl
sbb
je
in
push
loope
xor
out
call
int
in
jns
inc
push
mov
mov
push
ins
sub
mov
pop
xchg
push
lds
push
jle
add
ret
loopne
push
arpl
adc
frstor
ins
pop
movs
adc
fucomp
out
pushf
ret
dec
adc
int
aad
outs
inc
adc
call
je
fld
rcr
mov
(bad)
and
popa
loop
push
xor
call
xlat
mov
(bad)
cli
mov
xchg
inc
mov
xchg
out
xor
fs
xchg
xor
mov
icebp
mov
nop
pop
push
gs
add
sbb
div
test
clc
jmp
fdiv
fld
div
mov
xchg
retf
fs
inc
sbb
inc
ins
test
out
test
pop
xchg
mov
stos
movs
push
cwde
or
ret
push
je
mov
xchg
mov
xchg
aaa
cmp
xchg
mov
retf
xor
xchg
mov
push
push
adc
cmp
test
enter
div
mov
out
jae
push
mov
cwde
cdq
je
int
mov
xor
mov
fbld
jg
inc
rcl
enter
inc
ins
popf
loop
test
out
pop
loopne
xlat
ja
in
mov
add
mov
or
jne
lea
mov
loope
pushf
cmp
cld
dec
(bad)
adc
mov
push
dec
je
jge
iret
and
pop
movs
sub
push
xchg
(bad)
call
jne
or
addr16
ds
mov
leave
xor
mov
push
inc
hlt
pusha
test
(bad)
mov
adc
aad
inc
push
xor
adc
shl
jg
sti
sbb
imul
or
lock
mov
and
test
sahf
xlat
nop
scas
nop
outs
mov
(bad)
push
(bad)
mov
es
inc
xor
xchg
push
cmp
adc
jmp
xor
inc
adc
aaa
jno
add
mov
and
les
mov
lea
jns
add
out
push
pop
ret
pop
call
pusha
pushf
cmps
mov
xchg
jecxz
(bad)
mov
outs
mov
cmp
push
icebp
sbb
push
sub
pslld
icebp
hlt
xchg
bound
dec
(bad)
jno
inc
pop
dec
in
jbe
inc
and
push
push
outs
cdq
jl
leave
fsubrp
push
loopne
iret
pop
and
sbb
fadd
cmps
cs
dec
in
dec
mov
mov
mov
mov
les
dec
adc
ss
and
adc
sbb
pusha
xor
adc
in
pop
jb
dec
ret
xlat
cmp
fs
sbb
push
cmc
add
xor
add
or
ds
in
mov
mov
jmp
or
das
mov
cmp
sbb
or
cmp
inc
das
ss
xchg
inc
xor
push
inc
push
cmp
(bad)
call
xchg
jmp
leave
jl
movs
test
sbb
push
stos
and
add
cmps
scas
jne
out
push
add
(bad)
pop
xchg
scas
test
push
mov
ror
xchg
call
push
add
push
mov
test
sub
sub
leave
xor
in
ins
cmp
xor
mov
mov
test
aad
ret
into
lock
pop
mov
stc
movlps
push
jb
inc
jbe
sbb
mov
mov
adc
xchg
or
ret
ins
mov
jp
mov
lods
mov
inc
inc
add
lods
inc
and
imul
dec
inc
push
ins
mov
cmp
outs
adc
scas
sar
aad
cmc
push
(bad)
nop
adc
out
and
ret
add
mov
repnz
test
adc
jns
int3
mov
mov
or
jo
or
add
(bad)
dec
call
inc
lock
push
pusha
push
iret
mov
mov
pop
sbb
in
test
aad
sbb
sar
mov
inc
std
pop
push
data16
dec
xor
mov
ret
or
jb
(bad)
hlt
hlt
cdq
pushf
fs
mov
cwde
pop
out
and
or
iret
xchg
push
call
daa
lock
sub
cmp
sub
mov
adc
inc
adc
pop
sbb
movs
test
test
out
adc
scas
or
inc
or
mov
jb
std
movs
std
mov
xor
stos
cmps
xchg
pop
loop
in
xor
or
jbe
mov
cli
pop
pop
cmp
ror
xchg
mov
sbb
mov
jmp
je
lods
add
mov
(bad)
mov
fcomip
int3
test
in
lock
sbb
fs
dec
hlt
pop
(bad)
push
mov
(bad)
repnz
push
das
dec
push
popf
stc
ret
fst
adc
mov
nop
pop
push
and
mov
pop
mov
xchg
(bad)
jb
mov
xor
xchg
stos
or
jl
fistp
jp
in
retf
mov
dec
mov
(bad)
imul
mov
xor
mov
sbb
sub
in
enter
or
loopne
les
or
or
hlt
mov
and
xor
out
mov
pop
aas
xchg
retf
gs
outs
pop
int
dec
arpl
push
int3
and
jmp
dec
stc
sub
cmc
shr
gs
int
adc
mov
cmp
pop
movs
push
push
cmc
push
(bad)
mov
stos
push
fimul
stos
mov
fsubr
add
pop
push
movs
in
adc
sub
inc
lea
in
mov
lea
bound
cld
nop
je
push
(bad)
dec
xor
out
jmp
jge
movs
hlt
fisub
inc
mov
mov
adc
xchg
(bad)
mov
repnz
cwde
rol
mov
mul
shl
sahf
adc
retf
add
or
and
jecxz
aam
and
sbb
pop
push
in
icebp
cmps
aaa
xchg
inc
pop
adc
or
arpl
mov
ret
out
xlat
push
scas
push
movs
mov
mov
push
or
push
dec
(bad)
jmp
jo
je
xchg
popf
(bad)
data16
test
pop
rol
add
pop
and
inc
retf
inc
sti
xchg
jmp
xchg
loopne
fadd
imul
aam
inc
vcvtpd2dq
dec
shl
add
shl
push
sub
jae
add
gs
test
int
mov
sbb
loope
pop
shl
repz
xchg
ja
imul
sbb
xor
fwait
mov
retf
push
jns
xor
push
or
sub
inc
mov
call
in
hlt
xor
sbb
inc
out
and
call
and
mov
xor
add
mov
push
lock
in
aaa
push
cld
or
adc
sahf
jo
ja
cmp
and
and
dec
mov
xchg
xchg
retf
xor
sar
je
mov
call
int
cmps
jno
adc
xchg
sar
push
mov
jno
outs
push
push
cld
adc
dec
outs
xchg
xor
movs
and
mov
(bad)
sar
aam
test
cmp
sub
inc
push
push
xor
jns
repz
push
mov
in
jecxz
sti
ja
xor
cmp
and
add
cmp
sub
xlat
dec
mov
jl
mov
test
sub
dec
xor
sub
and
(bad)
lods
cmc
inc
adc
dec
xchg
je
lea
adc
jg
inc
outs
je
push
or
mov
adc
fstp
(bad)
and
xor
std
outs
xor
push
xor
lods
fidiv
mov
call
dec
mov
stos
loopne
push
push
stos
xchg
fs
push
push
inc
(bad)
jl
sub
and
add
sti
(bad)
icebp
(bad)
pop
xchg
arpl
cmp
sbb
inc
push
dec
xor
jno
or
mov
push
jae
inc
cmp
jo
mov
or
mov
stos
push
test
xchg
fstp
push
sti
ins
mov
ficom
push
mov
sub
data16
adc
ss
mov
test
pop
inc
jo
xlat
aad
jmp
inc
fst
aad
push
dec
mov
test
fiadd
xor
(bad)
fisub
shl
ret
xchg
xor
mov
jle
call
and
popa
inc
ss
fidiv
adc
or
stc
add
push
sbb
inc
sub
push
aam
imul
inc
sbb
int3
inc
add
mov
mov
hlt
and
dec
pop
mov
in
pop
popa
lahf
in
lock
out
mov
adc
ds
xor
addr16
loope
into
mov
cwde
xor
adc
and
add
push
xlat
dec
inc
popa
test
mov
shl
retf
xchg
aad
sbb
inc
inc
fidivr
je
pop
adc
mov
push
lock
mov
ss
out
push
pop
sbb
inc
popa
jmp
fmul
push
f2xm1
pusha
inc
mov
imul
loope
fdiv
pop
sbb
add
addr16
mov
mov
in
out
sub
cli
loope
inc
adc
shl
fcom
fld
pop
hlt
inc
cli
shr
into
xchg
nop
pop
mov
inc
xchg
cdq
and
cmp
push
inc
ins
push
ss
adc
cmp
xor
mov
xchg
sbb
arpl
retf
cmp
in
or
mov
mov
test
xchg
mul
jg
push
and
mov
test
sub
xor
in
xlat
ja
push
push
inc
cmp
std
jbe
inc
test
mov
cs
push
cmp
pushf
adc
ret
xor
rcr
imul
xchg
in
adc
out
xchg
int
mov
cmp
inc
icebp
mov
or
dec
adc
stos
mov
and
adc
iret
pusha
mov
(bad)
(bad)
inc
dec
addr16
(bad)
mov
cmc
out
and
add
loopne
xor
cmp
mov
or
sub
iret
mov
ficomp
sbb
mov
lock
push
pop
(bad)
imul
push
pop
mov
sub
and
(bad)
dec
or
push
sbb
jl
xor
and
add
or
pop
mov
jge
rcl
adc
add
out
rcl
mov
sbb
mov
test
xacquire
ins
cmps
imul
xlat
out
test
dec
lods
adc
je
jbe
jne
add
les
and
push
inc
es
(bad)
mov
mov
test
mov
sub
adc
and
add
lock
push
aam
and
je
mov
mov
mov
mov
inc
push
pop
lock
push
call
xlat
pop
mov
sbb
add
xor
inc
push
push
je
fdiv
xchg
mov
and
outs
and
mov
and
not
lods
pop
inc
out
repnz
mov
add
sub
mov
loope
test
lods
shl
xor
mov
push
dec
inc
push
test
xchg
xchg
les
mov
jmp
cmps
fmulp
add
rol
dec
loope
sub
xchg
int
mov
test
push
xor
out
cmps
(bad)
in
shl
ffree
je
add
repnz
cmp
adc
and
mov
mov
dec
mov
aas
jb
out
adc
inc
mov
add
cwde
or
test
pop
dec
and
push
or
mov
arpl
dec
xchg
pop
push
ss
pop
or
pop
(bad)
lock
xchg
icebp
adc
mov
das
loope
push
sbb
add
jp
iret
cmp
leave
addr16
dec
movs
push
in
test
sbb
outs
xchg
ins
inc
fs
mov
ret
pop
fs
ret
movs
(bad)
mov
mov
cmp
sub
and
inc
pop
mov
lods
sub
mov
push
xchg
aas
mov
stos
mul
aad
retf
aam
lods
or
push
ret
retf
mov
inc
out
mov
jno
push
xchg
sub
mov
rol
add
loope
scas
mov
pop
loopne
inc
cwde
cwde
push
test
add
push
push
shr
stc
hlt
or
xchg
fwait
pusha
rol
daa
cdq
xor
popa
mov
loopne
jae
inc
les
jbe
sahf
imul
inc
jns
in
xchg
xchg
(bad)
in
sub
mov
push
sbb
jmp
mov
(bad)
pusha
pop
sbb
or
mov
cmc
pushf
scas
icebp
mov
xor
out
pop
jns
sub
frstor
push
xchg
rcl
(bad)
jns
enter
setne
cmp
mov
cli
mov
repnz
jmp
test
sahf
shr
or
add
inc
jne
mov
es
mov
stc
pop
dec
push
aaa
dec
out
adc
mov
xchg
pop
(bad)
scas
inc
jnp
test
mov
jp
mov
(bad)
cs
inc
test
fcom
test
loope
pop
ds
icebp
mov
add
pop
stos
das
enter
xor
inc
push
adc
dec
or
push
mov
mov
jmp
cdq
rcl
inc
(bad)
jno
jb
hlt
and
push
push
ds
jo
add
and
pop
lea
push
xchg
push
pop
int3
push
es
pop
and
push
or
mov
cmp
mov
mov
adc
jb
bound
outs
xchg
(bad)
loopne
sub
call
mov
pop
je
loop
inc
lahf
test
and
sub
push
and
popf
dec
mov
leave
xchg
and
retf
sub
xor
xor
adc
mov
int
shl
jne
loopne
add
mov
lods
psrld
adc
or
and
test
or
cli
xchg
jmp
enter
sbb
xchg
adc
xor
popf
sahf
inc
in
pop
dec
push
xor
and
test
(bad)
mov
add
cwde
mov
test
dec
jecxz
lods
jmp
or
xor
mul
xor
or
hlt
add
jo
stos
or
pop
xchg
into
inc
sbb
mov
add
out
or
call
or
cmp
fdivr
xor
push
mov
fwait
das
mov
aad
je
inc
nop
or
enter
addr16
and
sbb
test
not
add
shr
xor
cli
lahf
sar
pusha
mov
loope
fistp
cmp
xadd
or
mov
ja
inc
fptan
lds
enter
mov
mov
add
add
add
in
aam
push
sbb
and
xor
call
inc
jne
inc
pop
ss
and
(bad)
adc
movs
dec
aad
nop
sub
mov
or
in
test
cmp
test
(bad)
sub
scas
fmul
inc
jbe
and
xchg
jge
push
es
popa
jmp
push
push
cmp
add
loop
add
add
mov
jb
or
retf
fstp
loope
inc
pop
out
shl
icebp
push
adc
push
cwde
in
out
jne
gs
xor
leave
mov
(bad)
add
ja
push
xchg
fild
sub
jl
pop
xchg
xor
push
xor
and
mov
in
loope
out
mov
push
add
lds
jns
xchg
shr
enter
xor
sub
out
push
mov
mov
(bad)
and
cmp
jb
pushf
push
mov
cmps
int
fcomi
jno
push
rol
sub
loopne
sar
mov
test
inc
xor
aaa
xor
jne
jg
aad
dec
xor
(bad)
pushf
or
unpcklps
lods
jg
ret
push
pop
in
ret
push
icebp
sub
outs
jp
add
imul
fwait
mov
outs
pop
and
xchg
pop
imul
std
cmc
push
xor
stc
pop
add
popa
pop
test
leave
xor
mul
mov
(bad)
cs
and
push
sbb
or
adc
or
sub
mov
and
fistp
push
mov
xor
out
push
aaa
mov
pop
icebp
aam
aad
(bad)
push
and
push
les
(bad)
adc
jg
movs
rol
retf
sahf
xchg
sub
fcmovnbe
out
pop
ja
inc
jb
xchg
mov
test
adc
pop
(bad)
sub
iret
jnp
jb
not
sahf
inc
shl
push
pop
(bad)
in
out
push
inc
dec
or
and
lods
xor
cmp
mov
imul
inc
mov
sahf
ja
and
fsub
xchg
inc
sti
add
loop
aad
mov
or
and
and
rol
iret
mov
mov
sub
jl
lea
repnz
imul
inc
outs
add
repz
out
lds
out
loopne
and
je
push
test
bnd
inc
mov
fild
fild
test
inc
cli
aas
popa
push
aam
mov
xor
in
fild
mov
push
loope
xchg
aam
div
aam
or
or
shl
adc
rol
sbb
movs
dec
movs
push
add
push
dec
xor
test
call
or
aaa
sub
fimul
jle
div
icebp
hlt
lods
push
push
push
shl
jl
push
push
sti
mov
push
in
pop
xchg
jmp
jecxz
xchg
scas
loopne
popa
xlat
test
stos
icebp
les
out
push
fsubr
add
and
dec
inc
xchg
mov
cmc
scas
mov
adc
loope
lods
imul
rsm
jmp
out
cwde
mov
cmp
inc
fwait
pop
adc
das
ficom
sub
mov
ds
cmp
adc
jmp
jae
mov
daa
xor
sub
dec
dec
inc
je
jmp
or
pusha
sub
xchg
pop
mov
inc
nop
adc
mov
sbb
lock
inc
pop
sar
push
mov
outs
lds
or
inc
leave
inc
call
push
jbe
stos
icebp
movs
loop
adc
sbb
ret
push
shr
imul
and
popf
add
test
mov
sub
or
cmp
mov
in
mov
iret
ret
stc
ins
xchg
inc
fwait
mov
scas
fistp
xchg
dec
add
and
outs
neg
rcr
mov
jp
cmps
lods
clc
sbb
rcl
nop
push
movs
sbb
xor
ss
cmp
xchg
xor
neg
addr16
movs
aam
stc
sub
adc
add
jae
xor
cmp
cmp
pop
fs
add
into
xchg
push
xchg
mov
mov
ret
or
ror
pop
cld
inc
mov
add
ret
push
outs
mov
ret
pop
push
xor
int3
jp
out
stos
in
dec
hlt
ins
or
xchg
or
cmp
stc
sbb
lea
jns
mov
(bad)
or
mov
ds
mov
or
fs
sbb
imul
jp
test
jp
push
ja
adc
or
push
adc
call
cdq
and
xlat
and
cmc
and
push
and
movs
inc
or
dec
add
shl
int
cmps
and
ss
imul
sbb
or
lods
pop
loop
xor
push
push
adc
popa
push
rcl
inc
jno
test
in
ins
retf
xchg
mov
mov
sbb
cmc
or
div
stos
shr
adc
repnz
lahf
xchg
cli
leave
iret
cmp
adc
add
inc
mov
push
adc
rcl
add
(bad)
jl
sbb
test
ss
jmp
or
in
cld
je
push
in
gs
leave
mov
push
ror
inc
pop
mov
jb
cmp
test
test
inc
in
sahf
test
xchg
inc
push
fisub
js
(bad)
mov
aad
add
jne
xor
imul
outs
adc
mov
cmp
add
fiadd
mov
shr
fsub
sub
(bad)
adc
pop
fs
fcomp
mov
jo
shl
mov
les
call
jl
out
fldcw
aaa
outs
mov
adc
xchg
mov
fldcw
jne
dec
pushf
aas
les
adc
or
loop
adc
pop
add
sbb
rol
push
lock
add
mov
retf
dec
push
test
push
xchg
mov
cmp
pusha
push
hlt
icebp
mov
mov
lock
ins
in
shl
add
ret
in
inc
and
fs
sub
(bad)
push
inc
in
cmp
js
jmp
pusha
popa
(bad)
rol
mov
movs
sbb
add
mov
lods
pop
vcvtss2si
mov
(bad)
and
test
inc
imul
mov
nop
movs
lock
cmps
addr16
(bad)
loop
jp
dec
frndint
iret
ins
fs
mov
inc
loopne
cli
aad
inc
push
shr
sbb
add
out
cmp
mov
leave
sub
adc
cmp
xor
or
cmp
and
test
or
movs
cmc
enter
mov
std
mov
mov
cmp
gs
aaa
fld
cli
adc
mov
(bad)
icebp
(bad)
xchg
inc
add
cli
int3
loope
fadd
je
fmul
les
and
push
inc
daa
push
out
sbb
adc
into
mov
add
xor
out
mov
xor
test
mov
xor
dec
inc
push
lds
movs
add
xor
shl
jno
dec
inc
inc
and
xchg
jbe
into
out
mov
fild
mov
cmps
ret
cmps
fs
inc
mov
ins
lds
js
add
xor
push
and
dec
gs
je
addr16
sub
inc
inc
loopne
test
in
in
fwait
sub
push
mov
dec
push
je
push
stc
cmp
dec
ficomp
in
adc
mov
push
or
push
and
dec
adc
cmp
mov
jmp
add
or
pop
jno
jae
dec
idiv
in
inc
cmp
jge
jge
fninit
inc
xor
ret
(bad)
cld
sub
cld
int3
lock
jno
mov
sbb
dec
mov
je
aam
adc
push
pusha
test
add
mov
add
xchg
sar
adc
icebp
xor
mov
shl
repnz
add
(bad)
mov
nop
(bad)
rol
mov
rol
cld
push
push
jb
ins
rol
xor
cmc
inc
add
cdq
stos
mov
test
loopne
aad
sub
punpckldq
mov
sbb
arpl
fist
das
lock
adc
mov
inc
call
std
or
jns
xor
mov
cmp
icebp
adc
cdq
jo
push
and
pop
mov
add
dec
cwde
mov
cmp
mov
(bad)
mov
nop
and
pushf
fcomp
adc
shr
sub
je
imul
push
dec
push
add
icebp
mov
nop
loop
aam
sar
outs
add
rcl
popa
xor
jno
push
ret
pop
fdivr
es
jo
mov
adc
ins
(bad)
xor
push
and
js
xor
sub
jg
push
cli
mov
in
iret
movs
adc
xchg
pop
pop
fnstenv
lahf
xor
das
adc
sbb
aas
lea
test
out
xchg
(bad)
imul
mov
mov
shl
lahf
fild
mov
mov
cld
hlt
daa
popa
add
loopne
lock
sbb
add
retf
rep
adc
mov
hlt
in
or
or
pusha
adc
add
xchg
push
shl
outs
test
xchg
xchg
or
pop
mov
jnp
cmp
loope
movd
adc
fs
ror
mov
pop
xchg
mov
xor
inc
(bad)
arpl
ins
(bad)
clc
mov
sbb
dec
cmc
mov
inc
popa
add
int3
js
jge
test
push
div
cdq
test
(bad)
dec
movs
je
mov
movs
xor
and
in
fdiv
inc
jl
push
test
les
lds
add
jae
push
sbb
test
push
or
in
dec
loopne
enter
ds
push
cmp
adc
jo
cmps
inc
pop
xchg
add
scas
rcl
adc
cmp
rol
xchg
test
js
dec
mov
xchg
push
xchg
in
cmps
jae
dec
adc
test
and
ja
adc
xlat
loop
ret
sub
cmovnp
icebp
movs
mov
push
jg
mov
sub
push
jno
inc
(bad)
push
jno
xchg
mov
ss
mul
test
shr
adc
xor
jo
leave
jae
jbe
dec
stos
adc
xor
loopne
rol
cmps
and
bnd
inc
mov
rol
mov
push
push
in
push
int3
pop
shr
(bad)
leave
mov
ds
cld
hlt
and
sub
inc
aas
pop
jbe
ss
add
or
inc
jl
sahf
repz
push
xor
les
inc
scas
xchg
add
xor
xchg
add
fwait
or
cmc
ret
xchg
rol
mov
xchg
(bad)
arpl
mov
mov
add
movs
shl
mov
aam
push
cdq
in
fcom
sbb
push
mov
xor
arpl
icebp
jo
mov
adc
xor
jg
jmp
push
sar
stc
out
in
daa
push
mov
sbb
test
jno
sbb
lods
jno
and
popa
(bad)
in
test
imul
das
in
aad
push
push
aam
push
cmp
pusha
sbb
xor
mov
dec
lods
lahf
inc
xchg
pop
daa
rcl
cli
xor
add
sbb
in
and
jg
dec
cli
rcl
cmp
sti
scas
popa
int3
adc
outs
inc
mov
jae
xor
mov
jne
inc
ja
jno
adc
push
or
push
je
cmp
call
movs
mov
xchg
mov
test
mov
shl
add
inc
push
icebp
jb
mov
pusha
mov
popa
icebp
aaa
jmp
push
pop
pop
iret
int
or
not
inc
cmc
aaa
xchg
pop
nop
fldenv
push
or
icebp
push
in
fs
icebp
adc
cmp
xlat
mov
ror
mov
jo
aam
sub
add
out
xchg
dec
out
mov
aas
mov
inc
pop
inc
es
adc
xlat
lea
mov
and
inc
(bad)
mov
xchg
and
push
adc
cmps
sbb
test
stos
xlat
bound
shl
cmps
sub
fistp
out
cmp
mov
xchg
nop
(bad)
repz
mov
xor
icebp
test
add
sbb
pusha
pop
xchg
nop
xor
or
or
adc
mov
outs
mov
or
add
sub
ja
cmp
in
mov
jo
dec
adc
mov
lods
in
pop
pop
call
cmps
cmps
fsubr
jge
test
test
push
pop
jbe
push
ret
push
rol
xor
and
rol
pop
sbb
jg
lods
jae
outs
dec
cld
add
ins
xor
xchg
(bad)
aad
or
inc
icebp
outs
aam
and
rcl
push
jnp
jne
or
call
lock
pop
and
cli
xchg
jge
das
data16
fisubr
adc
and
xchg
mov
int3
add
icebp
dec
push
fucom
ds
je
adc
jnp
js
and
es
imul
xchg
ds
mov
push
or
mov
push
cmp
sbb
hlt
cwde
inc
int3
xor
dec
or
popa
mov
shl
fadd
sub
test
hlt
call
jno
inc
fwait
jecxz
push
dec
stc
ss
test
call
push
pop
mov
icebp
xor
mov
and
in
movs
xchg
test
xchg
cmps
mov
mov
jns
imul
pusha
adc
pop
rcr
xor
cld
stc
mov
test
lds
and
add
cmp
cmps
xchg
sub
sub
popf
mov
lds
and
arpl
fisttp
movs
mov
call
loopne
sbb
les
push
jae
sub
inc
repz
jno
jmp
icebp
adc
mov
nop
mov
(bad)
leave
mov
mov
cdq
add
mov
xchg
test
(bad)
out
aaa
push
iret
(bad)
hlt
sub
jge
push
js
data16
push
and
lods
gs
add
cmp
jo
outs
js
js
movs
cmp
(bad)
mov
or
js
mov
mov
cmc
nop
aam
lods
xchg
movs
dec
add
mov
or
aad
adc
in
sbb
add
inc
enter
lds
je
or
jne
loopne
pop
pop
repnz
mov
test
xchg
fcom
pop
and
imul
mov
rcr
jo
in
cwde
lds
popa
js
mov
pop
xor
mov
and
arpl
mov
jmp
loope
and
daa
sbb
nop
pop
cwde
pop
iret
div
mov
and
lea
and
pop
lock
or
out
xchg
sbb
xor
inc
and
add
repz
(bad)
mov
push
adc
mov
mov
inc
jmp
ss
aaa
dec
arpl
js
push
jns
push
dec
push
les
jb
ja
or
and
mov
stos
(bad)
xor
es
adc
(bad)
test
mov
inc
sub
mov
cmp
ins
inc
inc
cwde
sar
shl
mov
not
xor
add
loope
mov
dec
imul
test
push
and
add
dec
jae
cmp
push
adc
repnz
in
mov
mov
inc
xor
sub
add
daa
cmp
rcr
cmps
jecxz
inc
inc
add
xchg
xlat
test
jge
inc
mov
inc
lahf
imul
aam
and
test
(bad)
shl
aas
mov
add
adc
mov
jecxz
(bad)
test
pop
rcr
jb
repz
jecxz
repz
mov
cmp
inc
out
jp
push
push
mov
xor
cmps
dec
sbb
daa
pop
mov
xchg
pop
imul
(bad)
xor
push
bound
inc
mov
mov
ins
xchg
fwait
das
pop
mov
stos
push
xchg
and
int3
popa
inc
add
inc
pushf
dec
mov
inc
daa
push
mov
push
rep
cmp
jns
and
popa
in
xor
xchg
add
or
cmps
add
fdivr
fwait
push
hlt
jl
mov
and
push
add
jle
push
je
(bad)
mov
call
and
sti
jo
ja
(bad)
fdiv
sub
mov
ja
js
adc
inc
inc
aaa
in
test
xchg
(bad)
je
push
rcl
xchg
jge
xchg
adc
(bad)
push
ss
stos
xor
stos
mov
or
and
push
popa
pop
hlt
fild
xor
shl
arpl
aad
call
loope
icebp
jl
pop
pop
or
and
pushf
sar
xchg
sbb
enter
mov
aaa
fnstcw
(bad)
fadd
shl
je
fadd
jp
mov
imul
jle
loope
(bad)
rcl
sbb
idiv
xchg
dec
or
icebp
add
hlt
mov
retf
iret
jg
pop
mov
dec
fwait
out
pop
outs
cmovp
mov
push
out
ss
cmp
aaa
inc
fiadd
sub
inc
inc
sub
sar
dec
mov
mov
and
loopne
scas
stc
jae
push
fsub
retf
ins
sub
fisub
xor
in
inc
add
xor
xchg
mov
mov
in
int
xchg
xchg
retf
iret
and
xor
cmp
test
cmp
into
xchg
add
xchg
cmp
or
mov
adc
hlt
pushf
mov
test
ds
and
in
xor
test
add
dec
icebp
mov
movs
xchg
fcomp
call
inc
xor
and
and
push
and
add
hlt
mov
js
lahf
pop
lds
(bad)
icebp
add
or
pop
and
jnp
das
adc
mov
cmp
fisubr
xchg
or
push
pop
and
push
xchg
inc
xor
hlt
in
movs
fisttp
push
in
cmp
mov
(bad)
popf
mov
xor
icebp
inc
inc
hlt
adc
call
(bad)
sbb
sub
rcr
mov
arpl
icebp
imul
es
inc
dec
and
jg
mov
or
test
xor
mov
test
inc
and
fstp
mov
mul
and
bound
ins
adc
fldcw
dec
add
cmps
scas
sbb
jp
jg
dec
mov
sbb
pop
pusha
mov
push
jp
lahf
jnp
pop
pop
push
push
jne
outs
mov
cmps
cmp
test
aad
sub
xchg
inc
fisub
sbb
and
and
(bad)
(bad)
mov
and
and
push
aad
mov
nop
add
pop
mov
popa
pop
fmul
jmp
push
mov
rcl
jo
sub
xchg
or
and
dec
sub
xchg
ret
mov
(bad)
push
dec
test
xchg
xchg
mov
pop
pop
jnp
sbb
cmc
adc
loope
das
gs
cmc
in
jbe
jnp
jnp
inc
xchg
push
aam
frstor
add
or
pop
aaa
add
pminub
gs
jns
sahf
jb
inc
mov
lods
mov
in
pushf
call
in
iret
leave
lock
jl
jb
lods
fisub
pop
mov
push
fwait
call
sbb
sub
fld
push
mov
push
iret
push
in
add
mov
int3
dec
cmps
sbb
idiv
je
mov
adc
int
push
inc
je
jg
test
fcmovb
xchg
shl
adc
mov
mov
inc
nop
in
out
sub
push
adc
(bad)
add
rol
mov
sbb
adc
xchg
and
xchg
add
adc
add
ret
lods
adc
data16
inc
repnz
xchg
push
(bad)
aad
cmp
pop
outs
aad
arpl
push
mov
cmp
push
jb
loopne
sbb
and
rcr
mov
mov
out
mov
xchg
in
jnp
inc
xchg
das
push
movs
mov
cmc
dec
xchg
sbb
sub
pop
inc
sbb
jno
jne
retf
lods
dec
jne
cmp
lods
aad
adc
xchg
ja
pop
repnz
fisubr
push
leave
fisttp
in
add
mov
cld
in
nop
ins
pop
adc
lock
imul
cmp
push
inc
xchg
mov
test
pushf
mov
inc
and
pusha
cmp
aam
xor
cmp
add
mov
les
push
ins
adc
test
jb
inc
cmc
and
pop
jmp
sbb
inc
int
movs
mov
loop
jl
pop
ret
or
push
xor
hlt
and
cmp
pop
hlt
add
xchg
rcr
and
jns
popa
jbe
xchg
push
or
mov
xor
mov
adc
push
ret
movs
adc
sbb
(bad)
sti
pop
jno
and
push
test
stos
mov
sub
cmps
jae
ins
dec
pop
sbb
add
and
icebp
jo
push
jno
ret
lahf
hlt
ror
arpl
fisttp
daa
fiadd
rol
mov
adc
(bad)
js
retf
mov
or
xchg
xchg
out
cld
xor
mov
les
scas
ins
pop
std
loopne
les
test
(bad)
xor
push
mov
xor
inc
das
repz
jg
jae
mov
mov
call
push
aad
pop
xor
inc
outs
ja
adc
fadd
pop
push
fnsave
lock
sbb
xchg
repnz
and
and
pop
push
dec
gs
and
or
(bad)
and
ror
cmp
push
cmps
into
sbb
jbe
gs
data16
sub
pop
icebp
mov
xor
fxam
retf
out
adc
jp
and
mov
xchg
push
adc
xchg
cmp
test
loopne
mul
jle
outs
je
jbe
mov
out
lahf
push
jae
arpl
stc
mov
mov
(bad)
or
mov
iret
xor
jae
push
jmp
push
mov
mov
xchg
mov
mov
loop
push
ret
shl
pop
inc
push
adc
cli
cmp
(bad)
xor
adc
jge
ss
xchg
pusha
cmps
adc
fldenv
dec
stc
xchg
pop
outs
imul
or
and
sub
xor
and
xor
pop
adc
(bad)
out
inc
rol
and
xor
data16
adc
push
retf
xchg
jmp
sbb
sub
cmps
mov
(bad)
xor
inc
loope
and
es
adc
sub
mov
mov
mov
rol
and
dec
sbb
push
(bad)
jns
stos
jecxz
add
push
jne
inc
loop
in
fprem
cmps
xchg
push
(bad)
aas
pop
out
mov
iret
test
enter
sbb
into
or
jnp
shl
scas
dec
and
jbe
add
ret
nop
outs
jl
sub
leave
stc
neg
xor
push
jmp
mov
jl
inc
or
jmp
pop
mov
(bad)
cmp
mov
iret
mov
daa
and
and
mov
and
adc
xor
xchg
(bad)
mov
(bad)
enter
xor
ja
shl
push
or
push
sbb
and
daa
mov
xchg
icebp
es
in
leave
repnz
pop
shl
sub
imul
adc
jne
push
xchg
jb
sub
add
cmp
xchg
mov
mov
les
test
mov
jb
jmp
je
push
xchg
(bad)
add
sbb
adc
(bad)
inc
repz
jle
lea
xchg
xlat
les
push
add
movs
jbe
add
inc
hlt
sar
(bad)
shl
adc
adc
shr
fiadd
jno
(bad)
ins
mov
loope
mov
loop
xor
pop
rol
pop
in
mov
pop
cdq
cmp
not
add
push
jb
lods
shl
inc
je
dec
rcr
pushf
jns
push
lds
mov
mov
je
cmp
div
or
jo
push
dec
ds
loop
int3
cmp
mov
jb
mov
test
jmp
imul
in
jno
test
sub
pop
in
outs
cmp
icebp
test
sbb
pop
mov
mov
xor
pop
lahf
and
jns
xor
and
data16
dec
add
fs
pushf
adc
sbb
pop
vpshlw
dec
adc
push
dec
adc
arpl
call
sbb
loop
pop
mov
and
dec
adc
in
mov
cmp
push
inc
cdq
pushf
repz
mov
scas
ficomp
and
sub
in
adc
int3
and
jp
call
jae
jecxz
into
test
into
test
push
enter
adc
mov
stos
in
shl
add
pop
lods
outs
inc
adc
adc
data16
out
je
push
xchg
popa
and
inc
add
int
inc
je
xchg
add
loope
int3
mov
es
out
push
rcl
inc
add
xchg
pop
and
les
ror
ficom
scas
add
mov
xchg
sbb
cmps
or
int3
bound
adc
je
or
and
scas
lock
xchg
or
pop
test
fistp
icebp
repnz
mov
aad
xchg
and
adc
(bad)
mov
dec
add
lock
xchg
fnsave
mov
or
sti
and
orps
loop
xchg
sbb
int
and
pusha
jne
add
frstor
shl
pop
(bad)
aaa
je
je
mov
out
xchg
(bad)
mov
pop
mov
adc
mov
cmp
sbb
test
fmul
mov
rol
int3
fs
cs
into
xchg
dec
and
xchg
dec
mov
xchg
sti
loope
add
cmc
add
push
scas
clc
adc
dec
jnp
cwde
xor
ror
test
xchg
repz
sahf
add
iret
dec
sbb
das
sub
neg
daa
out
addr16
pusha
sub
stos
loope
icebp
mov
push
mov
pop
mov
(bad)
jb
xor
movs
xor
neg
mov
jmp
enter
imul
mov
mov
mov
js
inc
jmp
mov
sub
test
cmps
dec
bound
push
xchg
mov
xor
sub
mov
push
(bad)
add
test
dec
push
adc
loope
jnp
sbb
push
add
cmp
rcl
mov
mov
push
clc
adc
clc
sar
pop
pushf
mov
push
push
or
jmp
pop
lds
ret
adc
mov
stos
mov
int3
(bad)
adc
push
push
jmp
sub
push
movs
adc
loope
out
aaa
pusha
mov
je
test
shr
adc
jp
add
jl
pusha
pop
pop
push
adc
mov
scas
fnstcw
push
mov
es
cmc
push
mov
jge
push
mov
cmc
popa
lock
mov
adc
mov
inc
push
hlt
inc
push
adc
or
xor
out
into
adc
jge
clc
and
mov
push
rcr
pop
and
jle
push
add
add
(bad)
xchg
ffreep
or
repz
hlt
jno
and
(bad)
psubd
xor
mov
lahf
inc
mov
call
cs
mov
add
add
xor
les
dec
cs
xor
push
inc
push
add
loop
repz
mov
rol
arpl
mov
sub
shr
dec
jns
or
cwde
jb
call
arpl
test
add
aad
jo
jae
(bad)
mul
xchg
pop
xchg
pop
xchg
xlat
sub
mov
aad
mov
out
out
imul
ss
pop
hlt
mov
je
and
loopne
movs
add
push
aam
push
jl
mov
jge
xchg
dec
sbb
push
and
addr16
add
les
push
popf
mov
mov
jge
jle
xor
mov
sub
(bad)
loopne
xchg
nop
in
stos
push
add
jne
mov
aad
jcxz
cmp
xchg
push
fadd
lds
gs
mov
inc
loop
mov
mov
xor
xor
or
or
sub
push
mov
dec
lods
ds
rol
and
fistp
xor
or
hlt
repz
(bad)
cmp
sbb
mov
mov
xlat
inc
inc
mov
inc
inc
cmp
mov
in
bound
or
mov
adc
int3
xchg
lods
adc
aas
lock
inc
add
sub
mov
ret
pushf
adc
call
sub
adc
out
out
xor
int
ss
in
mov
push
jne
mov
mov
xchg
cmp
pop
cld
cmp
nop
fs
jg
xor
leave
cld
mov
ins
leave
pop
push
mov
sub
xor
push
jb
call
jmp
cdq
push
sub
fwait
xadd
imul
dec
ja
aaa
adc
inc
ss
les
jo
xor
add
mov
cmp
inc
outs
hlt
test
in
xchg
sbb
loope
data16
dec
push
ror
mov
push
and
xor
push
inc
and
add
and
push
add
mov
jb
fcmovnbe
fisub
push
jl
xor
loop
push
sbb
cli
enter
push
jne
retf
push
(bad)
xchg
aaa
std
push
inc
add
data16
pushf
sub
ds
scas
and
or
and
and
aad
sub
inc
out
cmps
mov
shr
adc
mov
adc
icebp
xor
dec
sbb
xchg
mov
mov
fidivr
int3
mov
shl
push
sbb
test
pop
inc
iret
and
hlt
loopne
jecxz
mov
out
mov
and
mov
out
cmp
xor
or
inc
xchg
sub
xor
or
lods
out
fld
adc
sub
sub
or
cdq
icebp
dec
jne
jns
mov
stc
aad
push
jbe
dec
adc
cli
sbb
jmp
pop
mov
mov
out
daa
sub
add
jg
cmp
add
ror
jmp
adc
mov
jno
or
mov
adc
out
aas
and
test
dec
fst
push
add
inc
cli
inc
dec
inc
jno
adc
stc
jl
inc
mov
fsubr
and
stc
xchg
outs
add
mov
mov
inc
add
push
xor
push
mov
lds
cmc
mov
xor
sub
add
xor
pop
adc
sub
in
mul
xchg
in
mov
out
cs
mov
jp
xchg
jle
xchg
inc
stc
daa
leave
push
add
pushf
or
in
ficomp
in
cmps
pusha
xchg
mov
mov
icebp
call
loope
test
add
sahf
mov
xor
adc
xor
pop
imul
mov
xor
cmovs
ret
sahf
fwait
adc
inc
jmp
(bad)
sar
xchg
lds
xor
gs
out
gs
mov
mov
add
or
or
jo
daa
mov
rcl
movs
add
lock
cwde
mov
repz
jb
addr16
stos
xor
rol
mov
cmps
mov
arpl
fld
ss
inc
sub
xor
loop
jmp
jmp
mov
(bad)
into
push
and
jg
aas
aam
adc
pop
in
inc
shl
inc
mov
sbb
cmp
mov
dec
(bad)
(bad)
cmp
bound
ffree
in
push
push
and
icebp
mov
outs
jae
inc
je
mov
jmp
pop
inc
add
jo
shl
xchg
mov
mov
mov
es
xor
push
ret
adc
adc
inc
and
inc
cdq
lods
dec
xor
lock
test
and
pop
or
push
xchg
cmp
mov
mov
add
adc
push
add
or
pop
shr
loope
fs
lods
mov
(bad)
outs
dec
xor
in
xchg
popa
push
jbe
test
test
cmp
jle
rcr
adc
pushf
cmp
mov
pop
sar
xchg
sub
fdivr
pusha
data16
mov
jo
xchg
sar
inc
and
scas
mov
push
jg
inc
in
loope
adc
sbb
fnstenv
popa
sahf
dec
js
push
or
inc
inc
jne
add
mov
test
fst
push
loopne
and
in
sub
inc
inc
jmp
sub
mov
cmp
movs
inc
push
and
mov
cs
in
(bad)
outs
(bad)
mov
and
je
xor
add
adc
fs
icebp
(bad)
push
stos
pushf
cwde
add
xchg
imul
retf
ins
push
cmp
icebp
sti
xchg
adc
mov
cld
jmp
test
push
outs
and
xchg
add
add
jecxz
sub
retf
sub
jnp
hlt
xor
out
imul
mov
lahf
pushf
add
push
(bad)
test
fimul
outs
add
xchg
movs
retf
stc
bound
aam
push
add
hlt
mov
aam
push
xor
hlt
and
xor
icebp
les
cmp
repnz
leave
int
and
hlt
arpl
add
jp
mov
movs
mov
lock
and
xchg
push
push
test
add
popa
lock
mov
sbb
outs
shl
bnd
ret
pop
and
add
mov
add
dec
imul
or
xor
fwait
pop
push
les
dec
enter
arpl
cmp
cwde
xor
pop
loope
in
lds
bound
push
and
pop
mov
outs
pop
test
xchg
icebp
mov
loopne
add
push
int3
dec
add
mov
mov
mov
shl
aad
sbb
sub
cmp
imul
fwait
dec
movs
loope
sar
mov
aad
mov
pop
rcr
add
scas
push
dec
mov
jg
mov
cmp
cdq
test
jp
bound
shl
xor
into
(bad)
jmp
inc
loop
(bad)
sbb
je
xor
pop
jge
ins
vpshufd
sub
inc
sub
xchg
scas
dec
lds
icebp
xor
xor
inc
aaa
lds
and
push
fdiv
outs
and
nop
inc
scas
out
ins
mov
test
sub
pop
fstp
inc
inc
je
out
cwde
nop
inc
inc
cmp
cmp
and
repz
(bad)
out
ja
outs
pusha
test
dec
test
aaa
mov
in
sbb
mov
xchg
inc
ret
idiv
stos
xchg
iret
push
or
test
fld
jmp
call
shl
jmp
aam
das
leave
cmc
sub
out
dec
mov
hlt
aam
or
jne
xor
pushf
mov
cli
cmps
(bad)
and
sub
stos
ds
ret
add
or
add
mov
push
jl
mov
icebp
xchg
cmp
mov
in
xchg
xchg
jo
xor
xor
pop
mov
jbe
ret
jp
pop
adc
in
(bad)
adc
mov
in
scas
pop
add
add
bound
mov
and
dec
retf
lds
and
push
popa
cmp
jl
inc
(bad)
xchg
xor
push
jne
mov
js
fsubrp
sbb
xchg
or
sbb
fmul
retf
add
push
xchg
stos
rcl
adc
xor
ret
xor
push
adc
cs
sub
icebp
repnz
lahf
push
lods
pop
icebp
pop
mov
cmp
loop
pushf
mov
adc
imul
and
ds
aad
dec
in
push
les
ss
xchg
add
cmc
mov
mov
loopne
shl
int
mov
bound
push
adc
ins
mov
in
retf
(bad)
jne
in
aam
ret
push
mov
add
push
popa
push
sub
xchg
adc
mov
out
and
or
movs
in
xor
test
add
and
(bad)
adc
nop
test
fistp
adc
nop
xchg
jmp
out
mov
call
shl
cmp
fs
aaa
add
nop
xchg
out
add
icebp
in
jbe
push
mov
pop
add
in
hlt
push
cs
pop
pop
cmp
clc
movs
sti
test
popa
xchg
mov
jne
xor
out
arpl
loop
jmp
push
mov
pusha
mov
outs
inc
arpl
mov
fabs
stc
xchg
xchg
push
outs
inc
and
dec
cmp
pusha
adc
test
mov
dec
mov
sbb
je
and
es
mov
mov
test
movs
aam
inc
jae
movs
adc
pop
scas
add
adc
pushf
dec
adc
mov
adc
(bad)
pop
add
out
aam
shl
(bad)
(bad)
out
sbb
or
mov
or
test
int3
je
in
retf
adc
repz
rol
sub
gs
gs
xchg
cld
or
call
repz
sar
pop
repnz
ret
push
sbb
xor
out
sub
cmps
call
popf
out
cmp
xchg
mov
adc
fcom
lea
and
cld
stos
add
push
out
dec
sti
and
mov
cmps
rcl
push
or
adc
call
gs
lods
test
mov
push
out
stos
aaa
movs
dec
xor
ret
das
xor
push
mov
mov
jno
cmp
outs
call
sbb
ud2
dec
adc
xor
test
xchg
fs
rol
mov
and
push
lods
inc
inc
aas
imul
inc
jg
or
cmp
syscall
test
stc
add
xor
scas
adc
push
xchg
addr16
jae
push
jno
and
in
mov
rep
adc
in
bound
ret
pop
sbb
fstp
pop
add
xchg
jb
in
mov
(bad)
fs
ret
dec
fs
and
push
imul
xchg
lahf
cmc
or
pop
mov
rcl
enter
adc
cmp
fadd
sbb
rol
jmp
jno
adc
inc
sub
jo
add
mov
enter
sbb
repz
sbb
nop
adc
cdq
add
pop
xlat
push
in
inc
jno
je
inc
jmp
add
popa
and
fidiv
sub
popa
je
add
fsubr
rcr
test
mov
in
repnz
mov
stc
(bad)
jmp
enter
dec
scas
inc
mov
popa
mov
sbb
mov
out
add
jp
xor
mov
movs
mov
and
sbb
sti
jecxz
mov
fcom
in
hlt
mov
(bad)
dec
ja
mov
push
cmp
fdiv
jbe
adc
loopne
sbb
add
cmp
mov
inc
pusha
mov
inc
jg
lock
xchg
cwde
stos
shl
push
lods
leave
lods
in
stc
imul
in
push
xchg
jae
sub
mov
mov
sub
adc
jbe
out
or
xor
pop
add
dec
clc
mov
sbb
xchg
and
mov
repz
movs
or
inc
mov
adc
xor
(bad)
out
daa
push
cmp
ds
pop
out
jb
push
adc
mov
mov
xor
mov
shl
movs
neg
(bad)
pushf
mov
push
mov
pop
movs
add
xlat
and
fs
cmp
mov
lods
pop
adc
movs
(bad)
and
movs
les
xor
sbb
jmp
loopne
imul
cld
ret
test
repz
gs
xchg
fucomp
rcr
pop
cmp
mov
jmp
test
(bad)
adc
pop
inc
cmp
xor
adc
bswap
xor
fs
movs
sahf
data16
fnsave
dec
sbb
lahf
pop
out
mov
mov
out
nop
outs
loope
ja
cmp
jle
imul
inc
loope
xor
ja
mov
ret
xchg
xchg
test
inc
xor
xchg
stc
lahf
test
push
and
and
shl
imul
sub
movs
ret
ret
inc
in
jo
push
cwde
mov
leave
mov
xor
movs
movs
push
ror
nop
jnp
div
imul
sbb
cmp
xchg
mov
mov
xor
pop
jne
int3
retf
sbb
pop
cli
mov
sbb
(bad)
mov
mov
push
test
sub
jg
sbb
add
sbb
sbb
test
dec
scas
xchg
ret
or
adc
mov
or
jno
add
jmp
and
mov
push
loopne
fcomp
dec
add
adc
cmps
nop
scas
mov
push
xor
out
sbb
mov
adc
add
repz
mov
test
pop
mov
fs
aas
cmp
jne
xor
out
jp
jl
call
push
in
pop
mov
fidiv
lahf
add
cs
pop
pusha
sbb
inc
inc
cmp
rcl
xchg
xchg
div
xchg
aaa
inc
adc
hlt
or
xor
and
pop
fwait
inc
arpl
xchg
(bad)
mov
out
call
inc
call
xor
mov
clc
mov
cdq
(bad)
sar
cmps
pop
dec
pop
sub
cmp
pop
add
cmp
jecxz
jb
push
out
sbb
es
sub
mov
jmp
pusha
popa
xlat
xchg
jno
pop
mov
stc
xchg
inc
add
jg
out
and
xor
cmp
aas
adc
sti
pop
inc
push
adc
pop
pop
dec
loop
popf
lock
loop
push
outs
(bad)
stos
fisub
xor
pop
push
and
jp
inc
stos
movs
push
mov
arpl
push
repz
mov
in
jo
idiv
mov
movs
icebp
adc
push
loopne
inc
xchg
in
popa
cmc
fisub
cmp
pop
out
dec
jle
movs
mov
int
push
sub
xchg
pop
imul
mov
leave
adc
inc
xor
inc
xlat
inc
ficom
out
mov
in
xchg
mov
mov
pop
into
inc
jl
add
outs
stos
sub
xchg
js
xchg
add
lods
fsub
in
xor
pop
in
cld
ror
push
je
dec
push
push
or
jg
enterw
mov
or
jno
pusha
in
xchg
je
daa
je
cmc
add
in
jecxz
rol
stos
adc
iret
xchg
mov
inc
aam
and
popa
in
xchg
sub
ret
sub
popf
repz
push
and
icebp
mov
movs
push
mov
sbb
inc
retf
mov
pop
mov
aad
pop
int
adc
push
and
(bad)
fsubr
push
loopne
gs
outs
jbe
mov
div
dec
push
inc
cmc
sbb
ds
fiadd
lahf
mov
push
movs
bound
aam
js
dec
adc
mov
add
jecxz
cmps
cli
and
mov
arpl
and
xchg
jae
inc
lahf
sbb
pop
xchg
adc
les
out
xchg
loop
jne
adc
sbb
and
sbb
xor
xchg
in
mov
xor
inc
pop
dec
jle
push
push
dec
jge
jmp
arpl
add
and
and
xchg
out
fwait
xchg
jp
cmps
push
add
inc
popa
xchg
cld
stos
pop
pop
dec
loope
das
gs
push
test
shl
nop
push
shl
dec
adc
(bad)
in
mov
mov
mov
adc
leave
in
sbb
sub
dec
pop
sbb
jno
loope
and
add
in
fadd
fwait
mov
je
(bad)
sar
mov
sbb
(bad)
mov
mov
sub
ds
(bad)
mov
xchg
pop
xor
add
cmps
mov
cmp
push
jns
jne
outs
sbb
mov
outs
push
sbb
loopne
or
add
mov
fld
add
sar
lea
arpl
movs
mov
sub
inc
and
popf
das
pop
xor
xor
jno
jp
sbb
js
leave
cwde
addr16
mov
sbb
retf
sub
scas
shl
mov
in
add
loope
jae
jg
call
pop
mov
jae
mov
xchg
popa
and
sbb
xchg
xchg
jne
gs
xor
xchg
mov
fs
int3
lods
sbb
daa
bound
mov
jg
sbb
pop
xchg
or
push
xchg
test
fwait
or
test
adc
jecxz
dec
inc
xor
xlat
dec
pop
xchg
add
fadd
clc
pushf
repnz
mov
mov
xor
es
les
mov
int3
aad
or
and
and
pop
and
into
inc
add
(bad)
loop
mov
and
outs
jne
mov
sub
jp
fs
xor
je
cmc
loop
addr16
add
hlt
cmps
icebp
pop
mov
xor
aas
loop
mov
fs
cmp
cwde
xor
and
push
mov
aaa
adc
icebp
and
cmp
cmp
rol
xlat
clc
xor
push
mov
movs
imul
xchg
inc
into
jecxz
sti
cmp
push
xchg
ja
loope
pusha
fadd
add
aad
cmps
call
mov
xor
and
popf
xor
push
mov
mov
mov
lods
mov
and
enter
and
push
mov
mov
jb
cld
cmpxchg
leave
sub
inc
cmp
and
das
push
xor
sub
or
mov
sar
sbb
test
pop
adc
lods
mov
arpl
les
test
mov
cld
cs
cmc
out
rcr
add
rcl
sbb
add
scas
sbb
xchg
mov
xchg
or
fdiv
jae
push
xchg
add
pusha
adc
mov
and
adc
hlt
out
and
lods
cbw
adc
in
aad
aad
add
jl
add
and
rcl
push
out
sbb
outs
push
push
scas
sbb
(bad)
xchg
and
adc
mov
enter
cmc
jmp
xor
pop
mov
pushf
jecxz
jp
aam
mov
sub
xor
push
icebp
sbb
mov
add
out
inc
cli
(bad)
es
(bad)
in
retf
loopne
aaa
xor
or
scas
xchg
mov
push
inc
jb
ja
add
rcl
mov
lds
movs
out
ja
jp
retf
and
adc
mov
adc
mov
lods
push
imul
popf
sbb
out
test
cmp
push
fsub
mul
dec
cmp
and
xor
dec
ret
outs
sar
push
add
xchg
jg
lea
cmps
xor
add
nop
in
sub
loope
es
call
push
jno
imul
addr16
push
add
rcl
push
icebp
dec
not
sub
lds
imul
pusha
sub
mov
shl
xchg
iret
movs
jecxz
es
iret
(bad)
cli
sbb
data16
cmps
push
mov
xchg
addr16
lods
sbb
dec
(bad)
cmp
xchg
sbb
pop
lods
dec
xchg
(bad)
mov
mov
ret
pop
repz
fbstp
icebp
xor
dec
jb
in
in
sbb
mov
mov
inc
vandps
scas
adc
add
jns
clc
sub
sbb
adc
inc
inc
shl
sbb
xchg
lds
pop
pop
ror
pop
out
cmps
aaa
add
adc
push
stos
repnz
sbb
les
and
inc
sub
xor
daa
out
popa
jae
and
hlt
fs
shl
jmp
aad
lds
ja
xchg
mov
push
add
jg
dec
adc
loope
cmp
ret
jle
sahf
icebp
sub
xor
push
xor
push
fs
jb
push
push
aad
icebp
aaa
fcmovu
retf
and
test
and
les
sbb
jo
xlat
dec
dec
nop
xor
mov
sbb
int3
hlt
scas
push
jo
inc
adc
add
addr16
fimul
and
add
mov
xchg
jne
jbe
xor
dec
jmp
mov
pop
in
pushw
inc
les
push
cmp
ins
adc
inc
add
ror
cdq
call
int
clc
mov
ror
dec
and
xchg
xchg
jno
push
xchg
dec
mov
inc
jbe
mov
and
mov
lock
pop
mov
adc
push
add
out
test
iret
loopne
sub
cmps
jo
rol
movs
les
(bad)
icebp
hlt
inc
fdivr
lock
shl
push
mov
add
mov
jge
ror
or
cmc
or
dec
jg
mov
fdiv
shl
jge
or
popf
mov
or
cdq
lea
xchg
cmp
or
xor
test
sbb
jmp
xchg
pushf
loopne
in
jbe
mov
pop
jge
lahf
cmp
jae
mov
scas
cld
leave
xchg
ret
mov
rcr
add
(bad)
jb
shl
js
popf
add
(bad)
mov
ja
sbb
popf
retf
cmp
push
dec
adc
inc
cmp
add
inc
pop
leave
aam
shl
jae
pop
jns
mov
iret
pop
add
je
cli
adc
call
ins
jle
data16
xlat
aaa
adc
xchg
xchg
add
xor
(bad)
test
in
cld
adc
pop
pop
push
popa
in
shl
in
jle
inc
jno
nop
xchg
clc
mov
mov
push
xor
push
push
loopne
jp
cmp
ror
stc
add
cwde
mov
popf
mov
xor
inc
(bad)
(bad)
dec
pusha
and
and
xchg
adc
dec
retf
adc
jge
(bad)
mov
add
addr16
cmp
xor
push
add
adc
rol
cmp
leave
cs
(bad)
inc
and
jns
xor
inc
sbb
retf
push
fs
repnz
je
inc
repnz
push
shl
jno
idiv
rcl
(bad)
std
xchg
gs
sbb
icebp
cmc
mov
repnz
mov
pusha
inc
ja
cdq
xchg
test
xlat
or
je
add
add
push
sbb
mov
jb
sbb
pop
outs
int
push
dec
les
bts
test
out
add
leave
mov
stos
sub
inc
movs
xor
or
dec
or
sub
daa
mov
in
xor
mov
dec
mov
out
xchg
cmp
sbb
inc
jecxz
popf
jl
fcomip
add
add
ret
and
sub
je
jp
mov
adc
dec
jle
sahf
xchg
mov
loope
dec
and
call
pop
popa
sbb
fistp
add
pop
std
mov
cmps
cdq
push
pop
retf
sub
je
fisub
das
(bad)
cld
ret
jecxz
daa
jno
pop
or
shl
out
xchg
je
cmps
mov
adc
and
add
loopne
adc
push
mov
pop
sub
cs
call
sub
ss
dec
mov
cmp
xor
icebp
rol
pop
mov
(bad)
sti
(bad)
sbb
add
dec
and
out
fisttp
mov
sahf
or
shl
jl
jl
jl
xchg
shl
sbb
push
xor
push
push
(bad)
xchg
into
into
and
push
xchg
test
jmp
data16
ja
xchg
retf
je
cmc
(bad)
sbb
push
sub
(bad)
lods
fbld
pusha
xor
das
loopne
push
je
and
mov
mov
cmps
call
ror
in
test
fdivr
adc
push
mov
add
sbb
test
xchg
jecxz
sar
(bad)
adc
ret
xchg
popa
pop
mov
add
inc
adc
cmp
add
(bad)
nop
loop
aaa
jl
mov
sar
jbe
cmps
cli
retf
loop
xchg
fwait
loope
loope
mov
xchg
scas
sub
popa
xor
or
inc
mov
mov
mov
aas
lock
rcl
(bad)
loope
movs
in
push
add
sbb
int3
dec
mov
aad
pusha
adc
mov
xchg
mov
inc
push
scas
data16
mov
xor
mov
(bad)
sbb
cs
fnstenv
cmp
xchg
stos
loope
into
shr
add
dec
in
or
adc
bound
shr
retf
jge
out
inc
mov
repz
pop
pop
pusha
in
add
push
inc
sbb
cmp
in
push
loope
and
clc
mov
aaa
data16
aas
gs
icebp
add
mov
cmc
loopne
add
test
repz
cmp
cmps
cmc
push
push
scas
mov
jae
dec
or
mov
push
push
data16
rol
xchg
cmp
mov
call
inc
push
xchg
outs
inc
call
rcl
adc
sbb
imul
push
les
mov
shr
mov
icebp
aam
les
sub
pop
and
loopne
rcl
jae
fstp
xchg
ss
jno
xchg
sub
pop
or
cmps
mov
dec
cwde
rcl
frstor
les
jl
test
dec
mov
shr
clc
mov
ffree
mov
lock
mov
jle
mov
mov
retf
ds
test
inc
lahf
mov
add
inc
dec
pop
es
jmp
adc
push
mov
daa
fsub
je
test
hlt
icebp
clc
dec
in
and
xchg
xchg
xlat
out
mov
fstp
fcomip
andps
inc
sbb
popa
pop
sbb
sbb
push
jnp
xor
cmp
pop
cmp
test
aaa
pop
xchg
mov
mov
(bad)
adc
pop
mov
cmp
xor
jne
push
in
lock
jmp
pop
sub
sub
lds
pushf
xchg
sub
pop
test
sbb
inc
je
lock
icebp
rol
or
fdivr
sbb
cmp
sbb
ins
adc
aad
dec
add
mov
imul
xor
inc
jbe
xchg
add
push
inc
xchg
xor
xchg
sub
sbb
lock
dec
rol
and
lock
js
push
fdivp
push
jnp
inc
inc
in
fwait
jecxz
fisub
cdq
jl
and
shl
sub
addr16
pop
push
dec
pop
rcl
int3
mov
jecxz
push
jno
loope
xor
jne
imul
arpl
repz
test
xchg
scas
cwde
in
ins
movs
aad
nop
(bad)
sar
cmp
push
and
mov
ins
add
or
sbb
movs
clc
pop
mov
adc
fdivr
(bad)
pmulhw
rcl
nop
mov
je
inc
jno
out
rcr
not
addr16
jns
sbb
xlat
ror
loopne
popa
adc
cdq
fldcw
push
arpl
nop
push
movs
xor
sbb
cdq
jmp
cmp
hlt
jno
lods
loop
dec
adc
xchg
add
imul
and
inc
mov
popa
dec
pop
pop
stc
imul
stos
or
push
xor
je
xor
retf
mov
nop
cs
cs
jp
stc
push
xor
push
push
jo
xchg
jne
cmps
gs
add
div
les
shl
add
je
clc
jle
dec
mov
ret
das
xor
les
jp
push
fcmovbe
add
mov
cwde
popa
and
scas
repnz
adc
in
xor
loop
jecxz
ficom
mov
pop
push
xchg
push
mov
add
imul
mov
lds
into
xlat
lods
clc
adc
retf
and
imul
nop
pop
ins
nop
add
jl
mov
arpl
inc
rcl
mov
sbb
stos
adc
fld
gs
out
jp
mov
sbb
push
inc
ins
leave
mov
mov
dec
shl
mov
test
movs
test
popa
scas
mov
leave
push
jbe
pusha
xchg
cld
mov
add
movs
test
fdiv
aad
xchg
xchg
push
fs
cmp
pop
add
jne
adc
sub
das
test
test
aas
in
fcomp
xor
jl
sti
pop
push
and
aam
iret
jmp
test
test
mov
xor
pop
push
jp
push
or
sar
dec
push
sbb
inc
repnz
push
shl
cmc
xchg
leave
sub
dec
popf
inc
add
inc
mov
or
mov
aaa
push
ffree
(bad)
nop
out
and
xchg
xor
test
fmul
mov
daa
hlt
movs
out
adc
in
mov
retf
cmp
push
push
mov
adc
sbb
les
je
dec
jmp
jne
mov
rcl
stos
int3
sub
lds
adc
fadd
gs
imul
dec
xchg
xor
std
icebp
xor
popf
and
aad
xchg
xor
xor
dec
in
and
aam
xchg
out
mov
jle
(bad)
hlt
hlt
movs
add
les
jge
rol
pop
out
sbb
out
test
mov
inc
cwde
jno
bound
mov
aad
js
or
inc
lods
inc
repnz
dec
(bad)
inc
aam
daa
lea
jne
and
ror
xor
gs
cmp
aad
push
aam
sbb
ins
div
mov
sub
inc
inc
mov
pop
ret
xchg
or
repnz
xor
mov
mov
adc
adc
jecxz
mov
cmp
ret
ret
cmps
push
xor
xchg
loope
mov
icebp
xchg
inc
call
je
std
inc
dec
jle
out
rol
adc
mov
movs
loop
aam
ret
push
stos
les
(bad)
pop
push
push
mov
adc
retf
ret
aad
add
xor
leave
adc
push
test
pop
sbb
fbld
mov
dec
retf
repnz
lods
neg
aam
pop
mov
sbb
push
adc
test
ins
xchg
jp
retf
cdq
xor
test
out
push
ins
xchg
mov
cmc
pusha
jecxz
in
stos
and
ss
sub
pop
sub
xor
sbb
cli
and
push
es
jae
xchg
lock
pop
cmp
or
in
inc
add
sub
xchg
(bad)
in
xor
pusha
dec
aas
pop
pop
jns
dec
std
jo
outs
inc
push
jns
mov
dec
aaa
xchg
aad
into
fcomip
adc
jp
sub
dec
adc
test
dec
and
cmp
rcr
out
out
cmps
repz
cmps
data16
inc
out
xchg
xchg
push
or
sub
mov
loop
jp
data16
outs
mov
jnp
sar
dec
movs
iret
cmc
jge
(bad)
das
or
mov
out
xor
sub
jns
ret
cmp
in
repnz
cdq
xchg
add
lods
add
inc
jno
lock
push
push
inc
jne
jne
test
(bad)
mov
test
hlt
(bad)
bound
enter
aad
lock
popa
push
push
lds
es
pusha
add
mov
cmc
fmul
mov
sahf
dec
mov
mov
and
adc
xchg
push
xchg
sbb
inc
adc
adc
cmps
ins
add
aaa
movs
popf
sub
test
xchg
pop
pop
mov
push
mov
adc
xchg
dec
and
mov
lods
imul
mov
cmc
xlat
jb
push
mov
xor
lahf
push
add
cmps
mov
cmp
jno
xor
mov
sub
jge
jae
mov
cmps
adc
add
cmp
addr16
add
sub
fwait
xor
ret
xlat
popa
jmp
jmp
int3
shr
inc
and
(bad)
mov
pop
pop
adc
xor
shl
jne
xor
loopne
in
aas
jae
inc
cmps
push
mov
mov
in
mov
sub
add
data16
lock
pushf
scas
gs
pop
pop
sbb
mov
or
mov
jne
add
loopne
cmps
jecxz
push
xchg
ret
aad
push
fs
cld
stos
xor
or
and
pop
push
sbb
push
aaa
add
test
jo
sub
add
xchg
inc
ja
loopne
aam
add
xor
sbb
xchg
ror
inc
jbe
jmp
xor
push
xchg
adc
nop
dec
add
imul
mov
and
xor
sub
inc
and
add
ins
mov
aas
jp
jno
shl
pop
pop
jmp
icebp
icebp
mov
and
fld
dec
je
(bad)
das
push
xchg
jne
push
fucom
leave
xor
pop
cmps
xchg
popa
pop
ror
jmp
sub
xchg
pop
movs
ret
xchg
int3
out
push
and
cdq
and
test
inc
shl
sbb
mov
and
rcl
imul
popa
xor
add
ret
pushf
movs
pop
adc
jae
lods
mul
mov
sbb
cmps
gs
out
je
adc
mov
int
loope
ins
ror
imul
inc
or
repz
mov
clc
sub
jl
out
idiv
repnz
jne
dec
mov
add
test
cmp
mov
int
test
push
lods
mov
dec
retf
lea
les
popa
pop
adc
push
adc
mov
les
xlat
pop
dec
mov
sbb
jle
inc
mov
push
sti
aad
adc
add
aam
add
add
cmps
das
jns
inc
mov
mov
push
or
ror
mov
enter
xor
rol
icebp
pop
add
and
jno
scas
ins
pusha
mov
in
adc
push
in
push
push
sbb
dec
out
mov
adc
push
mov
icebp
push
cli
fimul
mov
and
and
(bad)
imul
cmp
mov
jo
inc
inc
push
repnz
mov
(bad)
and
pushf
daa
shl
mov
push
pushf
or
jmp
pop
push
addr16
inc
cmps
repnz
popa
mov
mov
ss
popa
lahf
pop
aam
les
push
fistp
test
mov
(bad)
pop
scas
add
ds
add
pop
push
xor
inc
adc
stc
loop
sar
fcmovb
loope
xchg
outs
retf
rcr
lock
dec
pop
pusha
setbe
test
jns
mov
add
aam
mov
jp
dec
cmp
cdq
add
rol
movs
push
jno
sahf
ror
ret
lea
mov
fwait
pop
pop
and
sub
or
push
or
push
mov
inc
les
push
cli
mov
and
adc
(bad)
pop
xchg
and
mov
mov
mov
mov
push
push
push
pop
jb
sbb
sub
sub
xor
stc
or
test
les
push
mov
or
arpl
and
or
xor
push
xor
ss
in
push
shr
xchg
ret
mov
xor
xor
lahf
push
sub
or
das
adc
btr
movs
pop
sbb
nop
fsubr
mov
nop
sahf
popa
push
push
jo
hlt
aad
mov
dec
inc
mov
ja
mov
mov
les
cwde
mov
mov
add
adc
add
movs
dec
test
neg
dec
push
pop
mov
out
mov
xchg
or
inc
cmps
test
retf
jno
iret
xor
aam
je
mov
(bad)
hlt
nop
mov
xchg
cmp
mov
xor
and
inc
xchg
cs
jge
in
pop
xor
push
hlt
mov
inc
fwait
aas
adc
jecxz
jp
add
xchg
ss
shl
or
xchg
aaa
pop
sub
lock
repnz
jb
jle
rcr
repnz
lock
xchg
jmp
or
adc
mov
inc
ret
test
xchg
push
test
dec
(bad)
mov
and
cmp
add
movs
adc
dec
clc
pop
xor
mov
repz
aad
loopne
xor
push
push
add
push
and
cdq
cmps
adc
mov
mov
data16
cmp
xor
dec
adc
or
add
pop
rol
push
xchg
movs
(bad)
mov
(bad)
lock
fnstcw
cwde
inc
sti
add
or
xor
inc
mov
push
das
mov
cdq
and
push
inc
rcl
fcom
adc
test
add
repz
xchg
cld
pop
out
dec
in
rol
inc
and
aam
mov
add
hlt
mov
jp
cmp
inc
push
push
gs
mov
imul
push
test
or
xchg
out
push
mov
jnp
in
fwait
sar
jecxz
or
(bad)
retf
movs
out
aaa
sub
mov
dec
movs
adc
shr
jo
out
jmp
adc
arpl
outs
test
sub
mov
clc
rol
ror
sub
(bad)
aaa
fwait
xor
ret
fimul
xlat
push
aam
not
aad
push
clc
fcompp
in
test
data16
push
mov
mov
adc
add
adc
push
inc
jno
nop
pop
call
fdiv
pop
lock
pop
xor
inc
adc
xor
mov
and
sub
ss
sbb
loop
pusha
inc
xor
mov
and
pop
pop
xor
sub
xor
cld
push
jno
stos
adc
sub
bound
mov
inc
pop
add
xchg
cmps
mov
xchg
jl
add
out
push
mov
xchg
mov
retf
cwde
enter
cmp
test
jne
leave
rcl
fbstp
push
push
dec
jne
fwait
stc
fcom
mov
push
ror
sahf
dec
neg
or
sti
cmc
dec
call
mul
add
and
pushf
xor
(bad)
les
and
xchg
mov
imul
outs
xchg
loope
rcl
fwait
add
jecxz
fisubr
jno
in
fnsave
add
lods
jmp
scas
dec
mov
cmp
mov
addr16
mov
lock
(bad)
movs
test
ret
push
inc
mov
mov
lock
aam
push
xchg
xor
ja
push
adc
sub
movs
in
ins
int
lods
adc
fs
sar
and
gs
ret
mov
push
cmps
(bad)
popa
pop
je
jae
pusha
sub
cld
jl
push
mov
movs
xor
popf
sub
pop
hlt
or
in
aam
in
fnstenv
pop
aam
jne
inc
sbb
rcl
lds
pusha
add
xor
in
fdivr
push
and
inc
mov
repnz
mov
jg
mov
pop
mov
cmp
ds
mov
aas
retf
push
retf
out
imul
jp
in
mov
cmp
dec
adc
add
pop
inc
pop
fs
mov
out
mov
icebp
(bad)
push
scas
sahf
mov
xchg
push
sbb
shr
lea
xchg
ja
sbb
icebp
add
sub
leave
sub
inc
aam
push
jo
ins
leave
or
in
aam
rcr
push
pop
lods
push
inc
fbstp
rcl
xchg
adc
stos
push
in
mov
jmp
ds
dec
sub
xor
call
inc
add
sub
adc
out
push
movs
jns
sbb
mov
arpl
cmp
rcl
mov
mov
push
jbe
ret
cmps
pop
pop
add
xchg
div
and
push
push
cli
mov
stos
inc
loope
mov
cmc
push
mov
mov
es
mov
mul
lea
test
and
mov
push
adc
add
mov
test
fstp
fiadd
xor
sbb
stc
repz
stos
ret
sub
add
add
popa
and
fs
sbb
cmc
inc
aad
in
addr16
leave
call
retf
hlt
xchg
fild
mov
test
dec
ins
xchg
sbb
xchg
outs
and
aaa
xchg
or
(bad)
sahf
retf
scas
mov
pusha
ret
sub
dec
jo
nop
inc
adc
addr16
push
aad
add
mov
nop
adc
movs
std
jp
xchg
cmc
jl
dec
js
mov
mov
and
push
fdivr
cmp
push
adc
mov
icebp
xchg
mov
inc
jmp
add
mov
xchg
pop
out
jo
and
push
adc
fstp
mov
test
jg
push
or
pop
add
mov
call
gs
or
or
jns
sub
jmp
mov
cmp
inc
out
inc
cmps
loopne
out
mov
movs
xchg
shl
mov
out
outs
push
xor
iret
cmp
jno
inc
jge
mov
mov
lahf
(bad)
dec
mov
inc
cs
in
dec
rcr
icebp
add
pop
jno
mov
inc
dec
push
jne
mov
out
dec
cmp
mov
stc
in
les
xor
outs
sbb
adc
sahf
rcr
cld
sahf
cmps
add
sbb
out
push
test
daa
jl
sar
ret
pop
popf
jp
(bad)
ins
in
xor
push
cdq
pop
inc
xchg
push
and
add
or
test
imul
shr
push
dec
mov
add
loopne
adc
imul
shr
ja
fsubr
ror
inc
rcr
or
imul
pop
mov
add
rcl
stos
pop
cmp
and
adc
mov
test
pop
sbb
test
or
xchg
pop
or
ja
mov
fldenv
fdivr
pop
cmc
and
imul
inc
retf
mov
jle
cld
rcl
adc
shl
pop
push
stc
sti
pop
imul
fcomi
test
shr
pop
call
and
and
xor
push
dec
enter
stc
xchg
test
cmp
push
popa
mov
lea
add
pop
xchg
je
pop
int
jl
movs
int
pop
adc
cmps
sti
loop
and
xor
ja
shr
addr16
les
lods
fs
sub
jno
xadd
aam
stc
mov
mov
loope
push
lods
je
hlt
jle
dec
adc
test
xor
jnp
or
jle
out
add
cmps
jle
or
add
xchg
pusha
xchg
pop
push
adc
mov
test
loop
fs
sub
add
pop
cld
frstor
fisub
xchg
loop
pop
lock
xor
fbld
lods
je
aaa
xchg
int3
push
into
mov
test
adc
aas
enter
das
xchg
jecxz
adc
cmp
je
inc
jle
popa
hlt
(bad)
dec
jmp
inc
push
into
push
cmc
mov
mov
pop
test
adc
popf
in
cmc
inc
test
push
jmp
pop
xchg
loopne
shl
cmp
out
xor
add
out
jbe
sti
cmc
jo
adc
jo
pop
dec
mov
sub
lahf
pop
scas
loopne
icebp
xchg
lds
inc
fisttp
cmc
push
inc
xchg
pusha
xor
stos
rcl
fsub
mov
iret
dec
lods
mov
dec
std
mov
scas
not
repnz
inc
stos
mov
pop
mov
push
aad
in
add
xor
jno
in
jb
jl
push
retf
push
dec
jae
push
jns
xor
adc
(bad)
rcl
hlt
popa
jo
mov
jo
popa
lea
jno
fdivr
mov
in
aad
cmc
movs
hlt
inc
je
mov
hlt
xor
adc
sbb
push
ins
inc
pop
and
xchg
stos
in
mov
pop
aad
jne
push
jg
mov
js
movs
cwde
mov
dec
xor
fcomp
sub
pop
gs
jbe
int3
imul
mov
inc
(bad)
cmps
mul
mov
or
movs
neg
xor
mov
call
jmp
dec
add
iret
(bad)
out
and
dec
cmps
rol
cmp
cmp
pushf
xlat
aas
ins
popa
test
loop
pop
push
add
test
les
push
add
dec
fs
call
in
daa
and
mov
retf
(bad)
aad
mov
adc
repz
(bad)
push
add
jmp
inc
dec
arpl
(bad)
xchg
lahf
jmp
test
ds
cld
lahf
lods
add
ret
mov
adc
les
loopne
cwde
cmc
in
je
data16
ret
add
gs
xor
sbb
call
aad
daa
loop
and
pop
adc
xor
and
lods
push
xor
icebp
dec
je
out
(bad)
or
mov
sub
mov
inc
fs
inc
adc
xchg
add
int3
xchg
idiv
mov
dec
loopne
pop
les
xor
pop
push
add
dec
and
(bad)
jne
adc
add
adc
lods
retf
(bad)
je
retf
imul
sti
in
ror
xchg
or
pop
adc
je
push
cmp
sub
pop
cmp
dec
jno
shr
sbb
mov
jo
daa
push
scas
adc
pusha
inc
push
icebp
pop
adc
dec
fistp
mov
add
lock
jno
mov
jne
je
pop
add
pop
dec
mov
scas
shl
ror
jp
sbb
bound
pop
adc
adc
inc
cs
jo
jno
retf
movs
cmp
or
(bad)
outs
mov
cmp
push
mov
mov
mov
add
std
gs
cmp
stos
xchg
mov
xor
jne
adc
pop
and
add
mov
cmp
mov
pusha
int3
xchg
adc
mov
xor
mov
test
or
repnz
aas
cmps
movs
jmp
ins
and
mov
xor
sub
call
test
mov
gs
and
loope
inc
mov
arpl
inc
or
aam
add
sbb
dec
xchg
xlat
inc
mov
nop
rcl
mov
mov
add
fidiv
ins
mov
cld
add
das
arpl
jecxz
push
jp
bound
adc
in
or
aas
movs
mov
hlt
mov
fiadd
xor
and
dec
mov
push
jo
out
aaa
aam
push
sub
lods
dec
sub
pop
sbb
inc
sbb
jo
pop
inc
stos
retf
sahf
cmp
(bad)
leave
push
mov
jo
(bad)
fcomi
add
and
cdq
mov
test
test
mov
and
push
pop
call
enter
in
dec
and
lods
mov
scas
out
(bad)
xor
test
adc
ret
fs
mov
xchg
xchg
push
xchg
mov
push
cwde
adc
adc
jnp
movs
jno
jno
add
ret
pop
sub
jae
mov
shl
sub
stos
(bad)
pop
add
inc
and
add
sar
rol
fcomp
sbb
daa
mov
xchg
mov
movs
mov
outs
fcom
adc
mov
xor
jp
bound
cmc
fimul
es
fmul
cmp
push
data16
stc
out
sbb
pusha
xor
jle
and
es
hlt
inc
retf
dec
hlt
push
retf
test
movs
mov
sub
scas
dec
out
jne
pusha
xor
out
in
inc
in
adc
adc
mov
dec
lock
push
add
mov
dec
sbb
and
mov
sub
out
dec
loope
push
pop
dec
adc
mov
inc
clc
ror
inc
mov
addr16
jne
out
jmp
hlt
pop
aad
mov
push
popf
les
jno
dec
push
fisub
or
add
dec
out
sub
mov
rcl
push
push
add
push
add
sbb
xchg
cmp
nop
call
cmps
dec
ror
fbld
loop
push
je
sbb
inc
ret
sub
mov
and
div
jmp
outs
or
sti
xor
add
imul
sbb
inc
jmp
add
pusha
and
out
adc
mov
push
mov
adc
add
jp
jmp
sbb
outs
add
pop
outs
xchg
mov
in
mov
jb
int
and
movs
loopne
paddusw
xchg
cmps
aam
mov
lock
push
push
add
jl
xchg
out
ss
mov
data16
jmp
push
jb
mov
sti
fs
sbb
out
or
lock
xlat
lds
xchg
fistp
imul
in
and
imul
ror
stc
cmp
rol
xchg
cmp
shl
pusha
mov
rep
pop
xchg
cmc
sbb
test
jp
(bad)
loopne
pop
test
xchg
movs
shl
pop
cmp
adc
out
retf
in
out
inc
lods
inc
adc
inc
js
test
push
adc
ss
dec
movs
sub
(bad)
inc
subps
jae
das
adc
jecxz
shl
sbb
es
pop
ja
dec
cdq
add
js
jmp
in
ror
fnstenv
xor
push
or
xchg
ret
sub
cld
mov
jmp
cmp
add
sub
inc
daa
popa
push
jne
xchg
mov
je
je
scas
jmp
mov
loop
add
push
push
es
cmp
jne
sub
inc
adc
mov
jns
dec
mov
iret
adc
cmps
fwait
cmp
loope
rcl
(bad)
movs
mov
retf
icebp
mov
add
ins
(bad)
iret
push
sub
mov
mov
mov
mov
fdiv
(bad)
mov
push
in
jecxz
fisub
xor
aaa
int3
fld
hlt
jmp
jle
xor
fnstenv
adc
inc
sbb
xlat
mov
test
add
test
xchg
cmp
and
addr16
fstp
jle
lahf
loopne
shl
xchg
jmp
jecxz
pop
mov
cmp
sbb
cdq
jmp
call
shl
dec
jo
mov
loop
arpl
inc
xor
sub
mov
fs
add
sub
xchg
retf
jno
aaa
dec
mov
jns
movs
test
cmc
cmp
or
lods
sub
aaa
mov
and
sub
iret
les
test
mov
in
and
cs
jne
test
jecxz
inc
mov
icebp
ins
sbb
icebp
sti
je
and
movs
xor
aad
retf
xchg
sbb
xchg
aam
xchg
sub
stc
(bad)
cli
inc
xchg
(bad)
in
daa
jg
pop
and
xor
sar
inc
xchg
or
pop
cwde
out
push
fstp
inc
inc
lods
sbb
mov
and
(bad)
push
test
les
mov
mov
test
not
sub
cmp
jecxz
lods
or
out
imul
(bad)
loop
jae
sub
or
fs
xchg
scas
sar
xchg
add
mov
(bad)
das
dec
push
addr16
pusha
cld
cdq
inc
mov
cwde
cmps
aas
inc
outs
daa
push
out
imul
scas
add
aam
repz
add
push
push
push
lods
test
push
adc
mov
repnz
stc
(bad)
sbb
call
dec
add
lock
lahf
or
xor
add
jp
mov
das
add
iret
imul
dec
and
and
mov
xor
mov
icebp
(bad)
(bad)
repnz
out
fist
dec
sbb
push
clc
cmps
cmp
dec
not
add
cmc
mov
addr16
add
adc
popf
jo
sbb
or
and
icebp
xor
fs
enter
movs
or
lods
xor
jmp
je
shr
jnp
out
and
and
mov
add
data16
shr
pop
in
sbb
popf
add
pushf
xchg
shl
mov
into
stc
div
dec
inc
add
mov
fdiv
jecxz
cmp
(bad)
rcl
xchg
fstp
repnz
outs
pop
mov
repnz
push
mov
add
and
xchg
fbstp
or
dec
(bad)
ret
mov
xchg
mov
adc
xchg
push
mov
xchg
data16
sub
test
jne
fs
les
xchg
cdq
cmp
sub
icebp
xchg
mov
fs
jle
add
stc
adc
lahf
pop
call
out
xchg
dec
ss
cld
push
lock
mov
mov
adc
mov
dec
(bad)
fisubr
dec
mov
and
imul
sbb
add
sub
xchg
shr
inc
ja
repnz
in
movs
mov
pusha
cmps
arpl
mov
(bad)
cli
sub
mov
add
mov
das
cmp
inc
stc
inc
movs
cmp
push
or
lds
je
mov
test
int3
jmp
xchg
dec
xor
loopne
mov
pusha
add
mov
push
and
sub
ficom
dec
xor
mov
addr16
jo
outs
inc
test
xor
mov
mov
call
loopne
xchg
mov
nop
(bad)
aad
into
pop
xor
mov
hlt
push
pop
nop
cmp
cwde
jnp
loopne
fsub
popf
ret
xor
sbb
scas
in
or
inc
pop
mov
es
das
xor
clc
cmc
pusha
jp
lods
inc
dec
adc
or
imul
sbb
adc
xor
pusha
add
mov
mov
pop
mov
xor
xor
cld
cmp
sbb
imul
adc
cmp
cmps
mov
pop
in
and
(bad)
aam
cmp
loope
mov
(bad)
and
movs
(bad)
loope
test
call
xor
add
push
xor
sub
dec
cmp
mov
pop
stos
out
aam
xor
enter
test
add
sbb
lods
pop
aad
ins
scas
jecxz
push
and
mov
add
stos
jmp
icebp
push
arpl
jae
inc
aam
pop
xchg
aam
jo
xchg
sahf
sub
test
mov
xor
mov
inc
push
xchg
pop
push
popa
push
pushf
mov
movs
xchg
call
mov
ror
dec
add
and
add
or
adc
add
jmp
dec
iret
and
icebp
jle
and
push
adc
push
pop
push
adc
movs
stos
sbb
nop
movs
add
popa
add
add
xchg
je
push
out
ret
mov
int
lock
data16
mov
cs
test
pop
or
adc
add
sar
add
loop
mov
pop
xor
lea
cmp
shl
jnp
popa
cli
les
add
mov
ins
sbb
call
(bad)
outs
cmps
call
adc
xchg
xchg
or
ds
push
or
(bad)
shl
popa
sub
add
jmp
mov
lock
data16
xlat
lahf
jno
nop
jb
nop
or
mov
mov
and
jae
test
push
push
test
outs
adc
inc
inc
pop
mov
shl
adc
icebp
xlat
lock
xor
and
out
shl
add
push
in
mov
fs
aam
xchg
fsub
das
es
or
xchg
sbb
fiadd
sahf
xor
add
pop
add
cmp
jg
adc
mov
jno
(bad)
imul
sub
pop
adc
clc
mov
add
jg
jae
cmp
inc
push
rcl
outs
rcr
sub
lock
pop
mov
mov
mov
mov
xchg
rcl
lods
lds
dec
retf
pop
and
and
shl
mov
push
mul
in
dec
and
popa
popa
push
mov
outs
jne
scas
push
add
out
and
stc
xchg
out
div
aam
fisttp
outs
xor
jl
sub
jae
or
ror
rcl
jge
(bad)
lahf
sar
inc
bound
cmp
jbe
sub
lahf
jp
(bad)
mov
pop
push
enter
(bad)
nop
mov
push
rcl
pusha
dec
sbb
push
je
fs
movs
sahf
mov
nop
std
fs
fst
loope
mov
push
mov
bound
loope
or
sub
(bad)
movs
aam
ret
daa
jae
xor
aaa
jmp
adc
and
add
jg
mov
sbb
xchg
xchg
les
and
xor
fucomp
popf
ins
mov
movs
sahf
out
cmc
and
dec
inc
movs
loop
shl
and
push
mov
hlt
xor
cmc
inc
mov
retf
push
xchg
adc
mov
add
pop
in
loope
ret
gs
(bad)
aam
xchg
adc
aas
dec
mov
sub
(bad)
add
add
mov
ins
mov
inc
jmp
popa
xchg
adc
out
inc
cmp
(bad)
mov
outs
movs
lock
sbb
mov
add
xor
adc
push
mov
out
inc
add
inc
nop
dec
rcl
iret
adc
cmp
add
sbb
or
adc
push
xor
shl
daa
inc
xchg
xchg
jbe
and
jecxz
and
(bad)
mov
aam
nop
in
mov
ror
inc
es
inc
jmp
push
std
add
mov
jne
aaa
cmp
inc
ret
and
sub
hlt
sbb
daa
xchg
stc
fldcw
lds
pop
cmp
aad
adc
xor
adc
jb
fidivr
cmp
mov
xchg
fnsave
in
inc
jne
push
add
adc
xor
jmp
cwde
test
icebp
mov
leave
mov
push
mov
jp
cs
test
js
pop
push
push
repnz
and
and
popa
adc
sbb
jno
or
cmp
je
adc
daa
and
sahf
ret
xor
dec
mov
inc
xchg
adc
mov
fld
push
and
ja
fsub
mov
cmp
int3
jg
rcl
xchg
in
xchg
push
sub
sub
or
add
add
cmp
adc
pop
mov
(bad)
int3
je
popf
add
popf
add
retf
dec
sbb
push
push
adc
and
movs
inc
mov
add
and
mov
cs
mov
in
jmp
mov
sub
xchg
xchg
sbb
cli
les
pop
push
mov
adc
cmp
inc
sbb
dec
shl
mov
jp
xor
mov
mov
in
adc
push
repnz
rcl
ins
in
mov
xchg
push
jno
sahf
dec
rol
jg
jp
nop
les
and
add
and
iret
mov
add
inc
mov
jecxz
and
adc
push
jmp
pop
xor
imul
pop
mov
jge
sbb
mov
xor
std
push
shl
push
jne
mov
or
and
add
and
cmc
xchg
loope
(bad)
inc
cmps
push
std
dec
add
test
sti
and
sub
dec
in
and
cmc
jbe
push
mov
and
stc
adc
(bad)
mov
data16
and
scas
imul
aaa
push
mov
in
mov
int3
in
in
mov
cmp
xchg
int3
call
add
push
pop
jp
push
adc
and
inc
test
sbb
jl
retf
clc
hlt
test
shl
sbb
fst
mov
jmp
ror
inc
fdivr
fidiv
add
xchg
xchg
mov
add
xor
and
mov
push
syscall
inc
mov
dec
mov
arpl
aam
jns
xor
and
ret
jecxz
mov
xchg
aam
dec
stos
fmul
add
test
and
dec
inc
add
xor
rol
in
out
sub
xchg
in
retf
adc
aaa
fwait
sbb
mov
mov
sbb
lds
jno
xor
cmp
in
inc
into
test
xchg
ins
pop
xchg
pop
rcr
(bad)
fcmovnbe
fld
jp
mov
or
lahf
push
xchg
test
jge
(bad)
rol
add
jl
jns
ja
ret
pop
or
movs
outs
pushf
and
in
jbe
xor
xchg
aam
mov
inc
ins
mov
in
push
push
mov
xchg
lods
rcl
adc
mov
rol
inc
mov
add
pop
adc
push
dec
mov
pusha
pop
push
or
jno
aaa
or
push
xor
mov
mov
les
and
and
rcr
(bad)
in
mov
mov
jbe
adc
pop
aad
in
xor
xlat
lods
cwde
xchg
popf
fimul
je
push
add
call
and
sbb
mov
dec
mov
and
jmp
add
dec
nop
jns
mov
out
add
xchg
mov
into
call
or
ror
call
mov
inc
adc
test
sahf
cmp
sahf
mov
out
sub
or
mov
xchg
push
jl
mov
adc
xor
push
inc
or
data16
push
and
push
xchg
inc
in
hlt
rol
mov
out
xor
jne
adc
je
jmp
fimul
int
push
bnd
in
scas
hlt
xchg
adc
add
cmp
adc
add
movs
sar
mov
mov
inc
jns
pusha
xor
daa
add
cmc
and
movs
xor
stos
shl
fist
icebp
(bad)
ret
addr16
ret
shr
sub
ror
lahf
jns
xor
jl
or
(bad)
push
int
test
fisub
cmps
push
in
push
je
adc
mov
scas
dec
xor
pop
icebp
in
dec
(bad)
ss
shr
sub
jno
dec
ja
data16
xor
and
mov
cmp
in
mov
xor
add
pusha
or
sbb
das
jo
ror
icebp
sti
inc
sbb
sub
int3
je
(bad)
scas
js
push
xor
mov
(bad)
lds
lds
xor
xchg
inc
inc
cli
xchg
test
ins
push
and
mov
xchg
mov
outs
ret
in
cmp
sub
ret
push
test
jae
mov
push
jno
push
cwde
pop
push
jg
fucom
cmp
mov
int3
jp
bound
sbb
sbb
bound
daa
stc
pop
loopne
loopne
jae
das
mov
add
jmp
movs
test
cmc
or
fcomp
xchg
aam
push
cmp
push
adc
add
call
mov
ss
(bad)
xor
es
and
and
pop
push
lods
sbb
test
dec
inc
in
push
aas
mov
and
sub
push
jo
cld
dec
add
mov
not
mov
mov
add
(bad)
xor
pop
scas
sahf
xor
push
and
mov
inc
or
in
ret
dec
xchg
push
in
dec
dec
sub
pop
fst
in
ja
push
push
and
sbb
cwde
enter
xor
and
pushf
sub
pop
repz
xor
sbb
mov
ret
nop
cmps
dec
loope
ins
lods
cmp
or
and
jbe
add
mov
adc
xchg
add
xor
cs
xlat
movs
dec
sub
jmp
cmps
fbld
es
arpl
mov
xchg
(bad)
adc
push
movs
mov
lods
push
call
mov
into
cmp
or
pop
sbb
sbb
rol
aaa
pop
test
cmc
xor
xchg
ja
and
repnz
lods
mov
loope
or
ficom
aam
enter
popa
mov
(bad)
outs
js
outs
(bad)
repz
adc
fs
push
jae
pushf
pop
jl
jmp
mov
rcl
adc
jb
arpl
jno
and
ficom
shl
cdq
xor
and
mov
add
sbb
cmp
lock
loope
ret
push
mov
pop
repnz
add
jecxz
jno
sbb
rol
fs
leave
pop
scas
je
xchg
mov
dec
movs
add
jno
shl
in
push
sbb
or
and
xor
aam
add
sbb
xor
nop
push
rcl
cmc
cli
dec
call
xchg
add
icebp
add
mov
je
(bad)
dec
inc
mov
outs
jns
pop
and
and
neg
enter
pop
gs
(bad)
fucomi
sbb
test
retf
jle
aad
push
sbb
adc
lods
sbb
ret
lock
out
cmp
in
retf
jp
dec
sub
lahf
cld
cmovp
fld
push
cli
enter
xor
outs
loop
or
pop
jb
sub
mov
cmps
dec
(bad)
or
sub
outs
dec
xor
push
fs
xchg
fisub
stos
xor
sub
ret
js
xchg
adc
add
push
(bad)
mov
ds
(bad)
xchg
aam
test
jb
mov
enter
cmp
and
es
stc
cs
adc
push
call
stc
es
aam
outs
add
pusha
sub
sub
push
xchg
sub
cli
loop
cld
inc
add
out
in
aad
xor
or
jnp
jnp
pop
cdq
test
movs
cwde
and
loop
enter
mov
ret
mov
add
adc
xlat
cdq
test
enter
pop
mov
mov
sub
aas
push
stc
pop
pop
add
and
lahf
les
fcmovbe
push
ret
sar
(bad)
mov
jnp
dec
bound
push
ss
push
xor
fadd
repnz
jnp
icebp
sbb
bound
inc
bsf
imul
mov
sti
add
mov
inc
dec
sbb
sar
xor
fistp
out
add
sub
add
outs
pop
add
mov
push
addr16
retf
xor
into
sub
dec
push
mov
call
cmp
outs
pop
sbb
mov
push
xchg
xchg
pushf
or
mov
sub
mov
fiadd
fs
leave
jo
ds
mov
fs
mov
push
or
cmps
xor
in
cmps
or
jp
mov
int3
mov
enter
je
dec
or
sub
ret
inc
pop
jno
jnp
and
aad
repz
stos
or
mov
jno
js
mov
das
add
pop
sbb
daa
inc
inc
xor
xchg
mov
jne
(bad)
sbb
push
mov
adc
add
pop
inc
xchg
and
int
leave
mov
enter
stos
mov
and
add
popa
rcl
outs
sbb
inc
dec
mov
les
hlt
hlt
jle
sbb
les
loopne
nop
xor
les
pop
inc
cli
arpl
push
lock
and
jne
(bad)
xchg
inc
or
sbb
pop
sub
sbb
sbb
faddp
mov
xchg
fiadd
hlt
jbe
loope
and
cmps
sub
test
fs
and
xor
movs
mov
(bad)
push
outs
lea
cli
xchg
push
es
aad
out
rol
popf
mov
leave
push
jbe
lahf
sbb
xchg
js
test
mov
sbb
cmp
das
call
scas
in
inc
and
cmp
pop
push
xchg
fidiv
popa
repnz
xor
mov
daa
lods
stos
test
cdq
das
jp
xchg
xchg
push
je
adc
adc
and
inc
pop
ins
cld
adc
aad
mov
and
dec
mov
inc
adc
or
push
mov
div
stos
ss
jg
xor
push
xlat
xchg
add
ins
cmp
fstp
scas
cmc
stos
mov
cmp
fiadd
mov
jae
out
adc
add
ret
test
xchg
arpl
ret
and
mov
cmp
(bad)
popa
ins
pop
jo
jns
jne
sbb
(bad)
cld
iret
jl
je
into
addr16
bound
xchg
and
and
xor
rol
lds
icebp
adc
cmp
pop
aad
xchg
fs
mov
inc
add
xchg
jmp
or
mov
mov
push
rcl
fidiv
mov
xor
daa
mov
cdq
xor
(bad)
push
out
mov
jmp
or
sbb
mov
out
nop
cdq
cmc
xor
call
fiadd
or
sbb
or
push
mov
mov
lock
cmp
xchg
aaa
jns
ror
inc
push
push
iret
movs
xor
adc
mov
adc
das
add
mov
movs
rcl
push
nop
int
xor
mov
repnz
fwait
sub
push
ja
mov
retf
sbb
cmps
jne
stc
push
xchg
xchg
push
dec
out
movs
aad
dec
pop
movs
cmp
or
jb
adc
in
fucom
and
jbe
mov
inc
and
mov
inc
inc
xor
mov
mov
cmps
mov
xor
aam
or
ret
xor
icebp
ror
ds
inc
(bad)
jne
movs
jbe
out
out
call
sar
adc
fild
add
ins
jne
cmps
jno
int3
not
iret
hlt
cli
jae
shr
push
xchg
das
push
push
les
inc
cmp
sbb
xchg
dec
sahf
ffreep
mov
aad
cli
jo
popa
bound
ror
scas
not
sbb
rcr
ins
je
fnstcw
hlt
sti
mov
ret
jae
push
push
xor
mov
pop
rcl
inc
int3
enter
jns
aad
ret
push
xor
data16
or
adc
retf
ret
int
or
outs
inc
data16
out
push
jns
in
repnz
and
cwde
and
xor
xchg
add
jo
push
xchg
mov
mov
add
or
xor
sbb
pop
mov
int3
add
push
jmp
or
xor
rol
ds
sbb
or
fld
lds
call
inc
or
pushf
mov
test
hlt
popa
mov
scas
fistp
pop
mov
mov
inc
mov
and
mov
mov
mov
push
or
fdiv
out
push
cld
dec
inc
jmp
pop
inc
imul
xor
(bad)
inc
add
sbb
push
int
fldenv
imul
call
mov
repz
cmp
inc
(bad)
dec
movs
imul
xor
fptan
jns
pusha
mov
lds
push
fld
bound
bound
dec
mov
imul
je
les
aad
mov
stc
dec
std
out
and
xor
xor
sbb
xchg
jmp
repz
push
adc
popa
cmp
inc
lds
xor
add
movs
out
xor
jg
xor
es
shr
xor
push
xchg
jecxz
aaa
cmps
and
lahf
xchg
ror
mov
fidivr
add
jmp
push
aad
xchg
inc
add
movs
push
jno
dec
lahf
push
cmps
retf
add
in
nop
rcl
jle
stc
push
cmp
xor
jb
ss
fisttp
std
and
xor
test
and
jno
dec
and
(bad)
lods
xor
in
test
loop
data16
mov
ss
arpl
in
fisubr
jae
out
add
jb
inc
jge
nop
xchg
sbb
mov
gs
sub
mov
sar
bound
inc
adc
out
and
stos
in
push
inc
adc
mov
cmp
jge
mov
xchg
rol
daa
mov
or
outs
jbe
adc
fwait
repz
adc
adc
lds
adc
add
aam
mov
or
xor
jnp
sar
outs
mov
cmc
adc
dec
xor
jmp
xchg
or
arpl
jb
mov
data16
loopne
push
pop
mov
mov
rcl
test
adc
pop
jl
push
pop
pop
scas
xchg
inc
arpl
test
popa
ja
mov
rcr
dec
add
icebp
or
outs
stos
jg
jmp
push
mov
(bad)
mov
call
add
scas
jmp
mov
xchg
adc
sbb
in
xchg
mov
les
fdiv
inc
gs
jg
mov
out
and
dec
cmp
pop
mov
pop
jge
jae
imul
sti
xchg
push
adc
into
or
mov
jecxz
mov
mov
js
and
push
lds
repz
call
adc
ds
xchg
xor
hlt
jo
push
mov
jne
retf
xor
push
(bad)
outs
movs
out
(bad)
sar
add
loop
ror
loopne
xchg
jnp
std
jl
ret
inc
call
lea
pop
ins
repnz
add
imul
fsub
xor
repz
cld
popa
xchg
mov
mov
fcmovu
or
or
sub
cmp
cmp
adc
xor
(bad)
and
add
in
add
and
add
dec
mov
or
rol
js
sbb
adc
jg
movs
shr
xor
xchg
mov
loope
mov
xchg
jmp
jno
adc
xchg
imul
into
push
xchg
xchg
cmp
dec
jmp
inc
dec
push
sbb
push
repz
and
ins
in
inc
cs
inc
les
add
sub
xchg
add
or
loopne
test
ins
cmp
push
inc
cdq
adc
mul
test
loop
sub
xchg
inc
cdq
adc
aam
out
and
and
ret
inc
mov
inc
cmp
aad
fwait
test
js
pcmpeqb
add
in
sbb
outs
aam
fadd
lods
mov
mov
in
xchg
ret
movs
inc
jae
lock
stos
jge
adc
rol
enter
(bad)
dec
xchg
movs
hlt
in
data16
aam
jnp
mov
loopne
aad
pop
in
test
into
cli
pushf
in
fbstp
cs
inc
mov
pop
adc
pop
lea
xchg
aam
push
xchg
inc
pop
in
add
cmp
mov
pop
mov
xchg
fimul
outs
ins
hlt
rol
push
movs
vrsqrtps
std
cwde
ror
xchg
or
popa
dec
pop
je
push
add
or
icebp
jle
adc
(bad)
std
dec
(bad)
fsub
xor
xor
out
mov
jl
inc
push
xor
pshufw
jmp
mov
scas
scas
push
sub
ret
jne
adc
call
add
retf
adc
rol
jo
inc
and
and
push
std
mov
shl
cdq
fwait
ins
jno
jne
inc
jne
sub
shl
(bad)
push
xchg
jnp
hlt
push
mov
push
movs
icebp
or
mov
add
mov
popa
sbb
pop
pop
in
lds
mov
mov
loopne
cdq
stos
add
rcl
dec
mov
pusha
inc
or
xchg
jo
shr
ret
jae
adc
or
or
cmps
push
push
cmps
mov
ret
sahf
loope
mov
add
mov
in
push
leave
jmp
add
mov
mov
popf
popf
pop
jmp
pop
jecxz
in
leave
les
arpl
hlt
dec
inc
xor
mov
test
hlt
jecxz
daa
outs
(bad)
movs
idiv
mov
add
cld
out
jo
imul
mov
push
jmp
xchg
out
xchg
movs
jb
mov
xlat
pop
xlat
push
in
repz
nop
mov
cmp
mov
jl
adc
shl
movs
sbb
je
aam
push
ret
out
(bad)
ficom
mov
test
mov
or
sti
jmp
shr
xchg
xor
int
shr
div
popf
popa
push
cmp
aad
stos
sub
xor
xor
and
mov
test
jl
and
mov
loopne
pop
fadd
dec
or
jno
mov
out
jns
pop
call
lea
mov
add
xor
inc
mov
xor
pop
outs
or
jb
iret
stc
push
mov
mov
pop
aam
int3
and
push
xor
dec
ret
xor
mov
movs
popa
xlat
sub
inc
sar
xor
pusha
hlt
cs
push
ret
pop
out
mov
loopne
hlt
sbb
mov
and
or
movs
mov
xor
jmp
xchg
iret
jo
ins
rol
add
mov
(bad)
out
mov
mov
add
test
jno
jmp
nop
(bad)
dec
int3
xchg
pop
adc
(bad)
push
dec
inc
ret
fs
cdq
cmps
loopne
(bad)
push
or
add
shr
and
dec
test
je
test
adc
xor
ret
xor
hlt
test
adc
cmp
dec
lds
sbb
add
pop
(bad)
push
fcomip
xchg
ror
fs
and
jo
jg
fprem
push
add
push
in
adc
in
icebp
xchg
movs
jnp
jb
cmc
aam
cmp
xchg
sar
pop
cs
push
and
push
add
mov
ret
cmp
and
(bad)
push
shr
inc
out
and
loope
push
je
out
imul
shl
aaa
ss
xor
add
aam
mov
xchg
inc
retf
push
xor
sbb
adc
mov
add
and
(bad)
ror
mov
and
outs
mov
popa
pusha
rcl
fs
retf
adc
xor
sbb
in
and
xor
aam
cdq
inc
inc
sbb
xor
je
rcl
aam
xlat
xchg
cmp
movs
movs
mov
jne
xor
sahf
jns
dec
xor
js
mov
repnz
sub
adc
jns
fdiv
out
bound
push
pop
rol
jl
mov
cmp
cmp
dec
and
adc
aaa
jb
mov
lock
lods
xchg
lds
push
push
and
enter
mov
loope
shr
jne
(bad)
lock
xchg
jmp
mov
pop
mov
jno
jge
push
paddq
leave
sbb
mov
repz
inc
xor
scas
and
cdq
dec
add
(bad)
and
test
loope
jmp
fwait
lahf
push
xor
inc
add
push
xor
xchg
xchg
push
dec
stos
push
xor
leave
enter
mov
les
aad
xchg
inc
test
(bad)
out
cmp
adc
fiadd
add
jb
popa
push
sbb
pop
adc
pushf
jae
sete
mov
adc
xchg
inc
xor
pushf
popa
out
(bad)
int3
pop
pop
mov
push
adc
jbe
dec
mov
imul
ret
or
jecxz
dec
and
inc
icebp
stos
add
pop
out
dec
push
loope
or
cwde
dec
adc
xchg
call
xchg
test
popa
ss
mov
and
push
test
test
fsin
xor
test
jns
loope
dec
mov
lds
pop
add
nop
or
out
mov
mov
and
xchg
push
xor
les
add
les
mov
push
add
dec
sbb
and
jo
dec
fcmovnb
mov
mov
jae
fadd
mov
ins
jns
dec
jecxz
repnz
push
cmps
or
movs
aam
push
stc
xor
inc
fcom
add
out
aam
xor
xor
add
clc
xor
outs
mov
xor
nop
hlt
jns
call
rol
xchg
dec
adc
js
rcl
cmp
xor
ss
movs
mov
xor
mov
scas
sub
loope
retf
nop
lock
inc
in
xor
sub
mov
shl
and
loopne
out
dec
jecxz
vpmaddwd
int3
push
enter
xor
shl
retf
xlat
push
xchg
aaa
sub
mov
in
sbb
fs
jb
xor
adc
ins
outs
test
sub
jns
inc
xchg
pop
ins
mul
xchg
xchg
cmp
pop
dec
xchg
mov
mov
add
adc
jb
inc
loopne
ror
aad
xor
mov
sub
movs
test
sar
xor
fsub
push
loop
push
int3
jns
(bad)
mov
and
cmp
sbb
int
and
or
jne
mov
inc
adc
movs
or
pop
xchg
mov
mov
cwde
mov
fbstp
in
leave
and
inc
add
add
hlt
test
pop
add
cmp
imul
pop
add
xor
adc
and
mov
cmp
cmp
inc
sbb
mov
pusha
loope
nop
cmp
cmp
jp
cmp
push
sahf
xor
mul
in
fidiv
dec
sbb
xor
jo
xchg
outs
cmp
fwait
dec
ficom
pop
sub
in
test
adc
lock
test
in
shl
lds
and
rol
sti
out
pop
fwait
jns
mov
and
mov
enter
pushf
sbb
or
aam
sub
jo
mov
pop
(bad)
jmp
push
(bad)
pusha
inc
scas
adc
rcl
nop
mov
and
jb
rcr
jg
mov
jae
mov
and
cwde
loopne
mov
inc
cmp
cmc
cmps
pop
or
jg
popa
pop
out
push
jg
add
call
jae
arpl
xchg
add
sar
icebp
hlt
mov
ret
in
xchg
out
inc
(bad)
and
cdq
cmp
and
mov
or
mov
sbb
mov
iret
push
test
inc
push
out
test
and
cld
xchg
test
cdq
pusha
mov
cli
or
mov
inc
sbb
add
call
pop
test
xor
fsubr
jecxz
mov
sbb
pop
push
xchg
rcr
and
leave
sbb
xor
mov
push
mov
xchg
pusha
shl
inc
fcom
xlat
imul
push
idiv
mov
ja
les
adc
xchg
icebp
cmp
inc
inc
loop
test
es
(bad)
sbb
imul
sub
mov
dec
xchg
aad
and
outs
(bad)
hlt
adc
lock
mov
pop
gs
cmc
scas
sub
in
jno
xchg
(bad)
sbb
inc
mov
inc
pop
and
sbb
or
adc
push
dec
sbb
test
into
mov
jmp
icebp
mov
cmp
in
sbb
ret
rol
jae
xlat
jne
ret
rcl
push
jbe
jne
les
retf
xor
adc
xchg
sbb
mov
jb
pop
xchg
fs
adc
in
xor
push
int
and
push
test
popa
pop
mov
pop
push
xchg
shl
sti
inc
movs
rcl
push
ret
fdiv
inc
sbb
cmp
cmps
aad
mov
cmp
shl
and
sbb
daa
mov
stos
sub
or
cmp
push
loopne
ret
adc
into
jae
ror
and
or
xor
nop
imul
pop
out
push
xchg
cli
fs
cdq
sbb
mov
fsubr
loop
mov
je
rcl
ja
inc
les
addr16
inc
pop
adc
outs
sbb
out
cmc
imul
adc
inc
sub
mov
dec
xlat
in
xchg
mov
popa
in
xor
inc
xor
cwde
mov
jmp
jbe
and
movs
imul
mov
or
sub
pop
adc
push
test
adc
call
aam
les
xor
jo
push
movs
imul
or
inc
xchg
mov
jmp
aaa
mov
jo
inc
sbb
jae
xor
test
hlt
jecxz
popa
and
out
into
inc
ins
and
bound
mov
fcmovnu
sbb
stc
retf
and
push
mov
inc
mov
in
add
shl
xor
shl
stos
mov
pop
cli
gs
mov
jg
aaa
mov
pusha
das
sub
sbb
faddp
push
mov
cmp
mov
lods
sub
std
jno
popa
cwde
push
ret
jae
push
push
pop
inc
shl
lods
inc
and
xchg
cs
sbb
adc
jne
push
repz
add
jecxz
mov
jmp
ins
dec
jbe
and
jge
(bad)
push
mov
ds
enter
cli
loope
mov
pushf
sbb
movs
loop
adc
fst
push
push
mov
cmp
and
nop
mov
pop
std
xlat
cld
in
sub
stos
test
sub
push
mul
(bad)
cli
jle
mov
jo
adc
movs
inc
mov
adc
add
dec
adc
jb
jge
addr16
aaa
pusha
add
mov
mov
mov
add
mov
xchg
adc
push
or
adc
ss
in
jp
mov
adc
xchg
int3
xchg
test
xor
retf
sub
js
loope
and
fld
mov
sub
into
push
ins
mov
sub
pop
mov
cwde
lea
out
and
mov
xor
mov
ror
daa
mov
ror
adc
lods
jb
hlt
mov
mov
fnsave
lods
loop
nop
les
je
shr
inc
mov
mov
add
test
jmp
xchg
ud2
jl
xor
(bad)
and
mov
sti
add
cmc
in
mov
(bad)
push
jbe
sub
shl
jle
pop
xor
mov
fdiv
ss
leave
sbb
mov
jg
jg
mov
sbb
ror
add
mov
xchg
xor
out
pop
pop
sub
lea
iret
jbe
mov
es
inc
inc
ror
repz
imul
xor
xor
pop
fstp
stos
xchg
or
mov
ret
inc
pop
xor
sbb
addr16
adc
lods
enter
mov
lock
xchg
xchg
mov
pop
pop
leave
adc
pop
icebp
add
cmp
test
ins
mov
sub
addr16
inc
push
dec
repz
push
ror
lea
addr16
ret
mov
adc
pop
and
cmp
inc
ins
jl
mov
pop
mov
out
aam
ret
fadd
icebp
test
push
or
or
das
lds
push
dec
iret
hlt
push
lods
pusha
div
rcr
and
jmp
jmp
jmp
mov
add
xor
enter
inc
popf
and
pop
fist
push
xor
or
daa
fwait
cmc
mov
add
jge
cmp
lahf
jae
int
or
push
mov
pop
scas
jp
inc
jecxz
fadd
repnz
adc
push
adc
xchg
sbb
in
ror
icebp
lock
jne
enter
idiv
mov
lds
and
push
aas
push
jo
mov
adc
xchg
adc
mov
dec
push
xor
loope
push
lods
test
xchg
je
jne
pusha
ins
inc
and
ja
mov
mov
add
jl
lods
jno
icebp
push
push
aaa
aam
push
imul
and
mov
jecxz
sti
cld
push
aam
out
cmp
(bad)
out
mov
imul
mov
(bad)
pop
inc
jmp
gs
jae
xor
and
iret
div
sbb
and
(bad)
jp
ret
movs
les
imul
or
adc
push
ret
mov
xchg
in
mov
jne
leave
and
mov
ss
test
out
stc
push
lods
int
icebp
add
mov
dec
mov
xchg
adc
jo
inc
push
je
dec
jl
popf
test
arpl
lock
fist
ins
(bad)
jle
jne
xor
pop
aad
rcr
mov
mov
mov
dec
pop
add
pop
and
mov
sahf
jmp
out
sub
mov
mov
fidivr
sub
push
xor
xchg
adc
pusha
pushf
sbb
xchg
mov
das
test
aam
mov
mov
pushf
arpl
out
cmp
gs
jp
inc
dec
add
icebp
out
fstp
jecxz
mov
adc
test
sub
inc
mov
xchg
ins
xchg
in
pop
add
mov
xor
jne
adc
or
jae
outs
outs
mov
mov
adc
xor
add
leave
xchg
add
cmp
xchg
repz
arpl
test
cmp
sub
add
mov
scas
clc
pushf
test
popf
shl
stos
sti
aam
mov
aam
shl
sbb
repz
movs
ret
xchg
dec
pop
in
lds
lea
sbb
pop
dec
adc
jmp
hlt
push
push
xchg
pop
rcl
cmps
mov
in
pop
(bad)
rol
int
mov
nop
mul
pop
add
repz
ins
pop
push
adc
cmps
inc
add
cwde
pop
or
das
inc
scas
adc
mov
outs
mov
adc
xchg
jne
jle
xchg
xor
cmp
xchg
fst
add
mov
push
and
xchg
sahf
retf
call
adc
push
aam
(bad)
adc
and
fnsave
sbb
sbb
leave
xchg
add
sub
shl
and
push
xlat
add
movs
dec
xchg
inc
cs
es
int3
dec
mov
mov
fs
inc
xor
dec
adc
sbb
mov
mov
movs
push
imul
dec
xchg
jmp
adc
sbb
mov
adc
jmp
lods
push
dec
pop
xor
inc
adc
pop
dec
icebp
stc
jle
inc
sub
scas
and
xor
aad
adc
iret
xchg
dec
sbb
inc
in
dec
add
retf
arpl
cmp
addr16
jmp
sub
es
push
scas
push
xchg
mov
(bad)
sub
outs
mov
sbb
int
xchg
mov
adc
mov
ret
mov
rcr
mov
cmp
rcl
shl
shr
push
retf
int3
cmps
jmp
xchg
mov
push
out
adc
das
test
xchg
out
cmps
leave
fs
in
push
sbb
mov
cld
add
sub
add
pop
int
add
ins
jno
aam
call
adc
and
sbb
ins
or
adc
sub
jmp
mov
lock
in
push
test
pop
std
cmp
jne
stos
retf
push
das
test
cld
loope
add
cmp
icebp
ror
mov
iret
lds
dec
mov
jl
test
cld
mov
ds
in
inc
push
cmps
ret
sbb
hlt
dec
mov
mov
push
sbb
test
jo
add
cmps
cmp
dec
adc
sbb
sbb
mov
mov
pusha
mov
fist
cmp
fstp
mov
adc
or
aam
push
(bad)
cld
daa
xchg
mov
lods
xchg
xor
sub
mov
in
mov
hlt
mov
mov
xor
jecxz
aam
add
je
into
jmp
mov
movs
and
sub
push
xchg
enter
popf
ins
aam
adc
fs
inc
inc
or
push
fld
icebp
in
sbb
test
xor
sub
nop
fmul
pop
fmul
pop
movs
test
push
pop
inc
loope
mov
imul
sahf
and
jge
ins
rcl
mov
add
add
sar
(bad)
les
and
fistp
dec
je
fs
sbb
icebp
xchg
xchg
mov
in
fcomp
(bad)
inc
push
mov
add
sahf
adc
ins
in
pushf
mov
sti
fadd
add
add
cmp
jne
xor
push
jle
das
es
daa
ret
mov
rol
pop
xchg
rcr
push
add
sub
es
ins
mov
call
pop
sbb
cld
adc
pusha
xchg
ds
add
jne
and
stos
xor
xchg
int3
mov
mov
mov
jo
push
adc
and
mov
pop
xchg
mov
cli
pop
add
lds
ja
xor
push
mov
mov
jmp
push
sub
sub
outs
rcl
int3
push
out
sbb
adc
mov
push
unpcklps
or
or
cmp
popf
les
cmps
pop
rsm
aam
popa
jmp
js
aad
add
fistp
push
jno
bswap
xor
mov
mov
loope
mov
stc
in
shr
stos
pop
fild
xor
dec
mov
jo
sbb
mov
jo
push
add
bound
call
in
mov
add
push
les
sub
add
adc
(bad)
in
add
inc
push
rcr
data16
and
jne
pop
and
cwde
xchg
lahf
jb
je
xor
inc
adc
pop
ret
leave
mov
loope
aam
inc
stos
js
gs
imul
push
jno
call
test
out
fisttp
adc
xor
ds
mov
in
enter
jge
cmp
push
popf
mov
test
outs
jo
pop
inc
mov
inc
inc
xor
rcr
add
mov
cmp
and
xchg
imul
and
xchg
mov
sti
clc
and
aam
je
ror
xchg
leave
sub
out
js
push
(bad)
popa
xor
xchg
imul
shl
das
in
gs
add
jbe
sbb
(bad)
mov
rol
add
movs
xor
and
lods
cmp
fisttp
add
hlt
bsf
not
mov
sub
lahf
and
in
into
push
hlt
mov
dec
movs
push
sub
push
jge
cli
loope
sub
push
lea
lock
mov
mov
sub
xchg
fsub
inc
inc
adc
add
push
call
jmp
movs
xlat
cwde
push
imul
dec
and
retf
call
jo
int
add
aam
mov
pop
arpl
bnd
push
in
jno
data16
push
push
mov
cmps
ja
pop
jb
and
out
add
shl
push
jl
(bad)
lock
repnz
ins
fisubr
push
mov
adc
and
inc
(bad)
push
aas
gs
inc
popa
and
out
loope
movs
into
call
rcl
test
add
mov
ror
retf
jl
call
adc
jb
pop
cmps
iret
aaa
mov
retf
cmc
mov
jmp
in
cld
aam
add
aam
movs
or
and
ret
jns
mov
mov
add
mov
aad
loope
int
mov
popa
and
movups
and
cld
scas
cdq
inc
add
pop
sti
sub
add
xor
pop
and
popa
pop
adc
call
jp
fnstcw
iret
sti
mov
aam
fst
inc
pop
and
es
mov
mov
ins
and
jns
mov
arpl
retf
rol
fdiv
les
adc
xchg
xchg
(bad)
pop
aaa
enter
add
lds
aas
push
adc
rol
sbb
pusha
fadd
adc
xchg
aad
push
xchg
leave
cs
sar
test
icebp
pop
inc
sbb
sbb
call
cmp
mov
mov
push
movs
mov
xchg
(bad)
cmps
clc
xor
lahf
mov
xchg
sub
(bad)
sbb
cld
std
dec
in
push
rol
es
cmc
mov
(bad)
(bad)
xchg
pop
xchg
fcom
sub
mov
pop
out
shl
lods
out
sbb
aam
dec
jbe
pop
cmps
or
test
or
cmps
mov
or
shl
mov
aad
loopne
sbb
and
and
(bad)
sbb
push
scas
jecxz
aaa
lock
ins
cmp
cld
aam
outs
mov
sub
adc
jo
(bad)
movs
repnz
mov
outs
or
adc
and
adc
sbb
xor
xchg
or
stos
and
and
and
jmp
mov
js
mov
jbe
es
in
pop
out
push
adc
sub
call
and
sbb
mov
loope
xchg
mov
mov
loopne
(bad)
and
jno
popa
call
cmp
inc
add
lds
jno
push
add
and
push
or
fidivr
jo
test
call
mov
sub
and
mov
lds
(bad)
jecxz
shl
push
jb
and
ja
mov
sbb
dec
jno
aad
in
dec
push
rol
mov
pusha
add
sub
and
dec
sub
addr16
test
outs
and
clc
rol
in
loope
and
std
push
mov
ret
outs
push
cmc
loopne
sbb
mov
stc
mov
and
push
sbb
lock
push
out
dec
test
sbb
loope
mov
add
in
push
mov
sub
push
mov
push
jg
jo
data16
int
lfs
bound
loopne
xchg
push
or
jl
and
icebp
sbb
sbb
sbb
jmp
fdiv
push
xor
stos
popa
adc
sbb
aam
add
sub
cwde
or
lods
sub
inc
pop
vunpckhps
mov
loopne
movs
sbb
cmps
fst
adc
and
push
out
shl
es
and
inc
out
dec
jne
cmps
in
adc
in
imul
test
nop
sub
sbb
es
xor
outs
outs
dec
loopne
cmp
adc
jno
popa
retf
push
adc
mov
adc
xlat
mov
mov
add
shr
je
cmc
push
lds
jae
loopne
inc
movs
popf
mov
jb
push
and
pop
adc
pusha
xor
in
repz
aad
movs
adc
push
cmp
stos
inc
aam
or
cwde
loop
retf
mov
xor
mov
lods
aaa
push
data16
in
in
inc
mov
add
inc
popa
out
pop
cld
loop
pusha
add
test
daa
sbb
mov
pushf
dec
loop
out
lds
sbb
(bad)
pop
jae
add
dec
and
dec
mov
out
jp
aad
mov
pop
xor
das
adc
ror
and
cmps
mov
jnp
in
aaa
dec
rcr
loope
inc
lahf
and
fucomip
pop
(bad)
fmul
fild
in
aam
mov
popa
jno
loope
push
or
mov
mov
push
sbb
push
cwde
rol
mov
pop
(bad)
mov
js
add
data16
frstor
sti
loop
data16
sti
loop
xlat
and
les
inc
leave
inc
jns
adc
mov
mov
sub
iret
clc
int
mov
mov
xor
and
jo
out
and
mov
push
pop
add
les
pushf
rcr
(bad)
jae
xor
rcr
das
jns
mov
inc
jae
repnz
dec
dec
sbb
leave
movs
fld
stos
mov
fdivr
inc
gs
scas
dec
mov
push
add
mov
add
adc
rcr
and
in
outs
sub
jne
mov
mov
cmps
cs
pop
and
jmp
push
inc
adc
add
sub
mov
pop
mov
dec
add
sti
ss
sbb
jne
test
adc
lea
daa
lock
or
fs
into
fistp
dec
xor
cmp
outs
adc
scas
xchg
cmc
(bad)
(bad)
mov
mov
bswap
and
push
inc
lea
hlt
jno
or
jmp
je
push
dec
popa
(bad)
xor
mov
retf
push
mov
fsub
inc
sub
inc
xchg
(bad)
aad
mov
cmp
sub
icebp
(bad)
jmp
cmc
lea
or
aam
sub
sbb
adc
pop
loop
jne
lock
mov
or
pop
cmp
mov
outs
inc
pop
mov
es
xchg
inc
mov
mov
loopne
les
in
int3
fnstenv
mov
popf
out
cmp
movs
ret
or
cmp
mov
jg
pop
push
rol
aad
dec
outs
rol
in
jb
mov
fisub
xor
push
popa
aad
imul
cmp
rcr
popf
out
loopne
shl
aad
test
jno
mov
mov
xchg
cmp
push
or
icebp
icebp
xchg
rol
mov
lea
ins
add
nop
dec
adc
or
add
mov
lods
xor
fnsave
push
sbb
movs
mov
push
(bad)
jnp
push
and
and
and
xchg
ret
push
jns
add
add
push
xor
cmp
pop
int3
adc
shl
out
(bad)
repz
push
hlt
inc
cmp
xchg
adc
mov
push
xchg
scas
dec
sub
sub
mov
test
loope
and
cmps
jbe
ins
arpl
or
ret
lds
cwde
popf
test
xchg
sbb
(bad)
mov
lods
js
mov
ds
inc
jbe
and
nop
into
(bad)
and
jecxz
jns
adc
(bad)
lds
mov
mov
dec
fild
aad
and
mov
lahf
sub
cmp
std
adc
adc
xor
popf
dec
mov
mov
aaa
and
dec
mov
ins
pop
cmp
jns
call
loopne
icebp
or
ins
popf
mov
pop
or
sar
xor
sbb
imul
mov
jmp
hlt
and
add
movs
loop
jp
mov
rol
xchg
mov
mov
adc
mov
push
inc
inc
pusha
or
mov
stos
mov
out
scas
hlt
gs
sbb
inc
add
ja
pop
dec
xor
ficom
les
push
mov
data16
daa
xchg
and
xchg
fild
push
xchg
and
test
dec
add
inc
movs
mov
out
mov
and
out
inc
imul
xor
xchg
rcr
xchg
or
mov
enter
xor
imul
jno
inc
rol
out
adc
test
clc
jge
push
mov
ret
xchg
mov
mov
push
jge
sahf
xor
cmc
mov
cmp
hlt
lahf
push
mov
out
rol
nop
test
mov
add
mov
lods
push
add
cmc
aaa
xchg
xchg
xchg
adc
add
cmp
mov
std
xchg
push
and
enter
shl
mov
pop
scas
fs
test
xchg
push
not
mov
repz
test
dec
loopne
mov
mul
mov
mov
movs
jle
hlt
movs
dec
movs
push
pop
mov
mov
mov
sub
nop
ret
pop
inc
xchg
adc
inc
adc
pusha
add
les
xchg
mov
mov
mov
push
and
(bad)
jmp
movs
fstp
outs
mov
jp
push
add
inc
aad
stc
stos
out
jp
dec
ins
repz
mov
push
repz
jecxz
aaa
push
imul
pop
and
xor
inc
outs
dec
mul
js
jno
je
adc
mov
sub
movs
cmp
dec
sub
mov
(bad)
push
mov
jne
je
inc
sub
or
jmp
or
lds
pop
pop
mov
add
mov
sub
fcmovbe
mov
add
add
repnz
adc
loope
inc
push
in
lds
pusha
int3
int3
xchg
dec
sar
and
lock
xchg
ror
lock
lods
aam
sbb
sbb
dec
dec
pushf
fisubr
loopne
add
int3
sub
sub
popf
cmp
aam
cs
test
jle
sbb
js
dec
rcl
push
xlat
inc
pusha
shl
daa
mov
pop
fcom
xchg
fst
or
popa
sbb
test
push
aam
sbb
and
adc
or
or
sub
push
sbb
or
scas
test
adc
jmp
cmp
std
fldcw
clc
bound
mov
call
xor
ret
push
inc
retf
in
cmp
std
cmp
gs
or
jbe
lods
int
nop
jl
lods
dec
mov
sbb
cmp
pop
sti
xor
mov
dec
test
push
pop
dec
pop
je
fs
std
xor
mov
push
movs
mov
enter
dec
xchg
je
push
adc
imul
adc
add
xchg
gs
out
fnsave
cwde
and
dec
std
jl
pushf
sar
adc
and
push
push
clc
cdq
mov
(bad)
pusha
nop
push
aad
mov
mov
push
xchg
add
jae
outs
mov
jno
and
out
push
xor
add
loope
fsubr
sti
inc
enter
pusha
arpl
xor
enter
or
ror
cs
mov
cdq
out
cld
inc
add
dec
add
xor
(bad)
fiadd
add
lahf
sbb
loop
aas
and
shl
popa
retf
repz
(bad)
int
jno
arpl
and
lods
in
mov
dec
ror
mov
outs
aam
jl
cmc
lahf
or
and
les
cmp
(bad)
test
addr16
jno
xchg
inc
rcr
dec
xor
mov
daa
in
inc
outs
movs
mov
adc
mov
mov
movs
shr
cmc
popa
push
ins
sti
mov
lods
jns
int3
lahf
add
sub
dec
sub
sbb
ja
dec
add
loope
sbb
mov
xor
out
jno
sbb
cdq
push
sub
aad
scas
loope
push
dec
mov
aam
ror
fsub
adc
hlt
pop
mov
mov
or
movs
sub
out
test
push
mov
or
xchg
int3
mov
jb
xchg
xchg
js
test
icebp
ror
xchg
jmp
hlt
jnp
jno
or
(bad)
leave
inc
or
sbb
sub
ins
mov
or
xor
xchg
test
je
sub
mov
test
test
push
xchg
int3
mov
repnz
or
xchg
enter
push
ins
adc
sahf
sar
fs
adc
rcr
in
mov
jl
popa
mov
xor
xor
add
push
mov
loope
xchg
es
gs
je
(bad)
jge
shl
ds
xchg
daa
mov
xor
in
mov
fnstsw
mov
les
mov
call
loope
popf
call
(bad)
mov
inc
jle
sbb
pop
test
pushf
rol
pusha
cmp
cmp
shr
cmp
mov
mov
and
push
push
gs
xor
stc
imul
push
adc
mov
out
(bad)
call
es
std
fcom
and
dec
add
jmp
lods
or
movs
sbb
adc
lods
cmc
cmp
es
push
push
jne
pop
lock
in
(bad)
gs
push
inc
test
pop
cli
fwait
shl
aas
pop
or
sub
lds
push
cmp
jne
pop
mov
dec
adc
or
pop
fcmovnb
ffreep
xor
push
jne
push
adc
mov
adc
icebp
mov
cmc
movs
les
shl
jbe
mov
cmp
fisttp
dec
push
hlt
rcr
pop
xchg
adc
sub
mov
mov
inc
inc
adc
sub
int
adc
mov
sbb
or
test
and
adc
add
or
les
push
scas
outs
mov
inc
mov
sar
in
repz
das
lods
cmp
mov
stos
test
addr16
mov
call
xor
and
mov
pop
mov
mov
repnz
add
loop
xor
mov
std
pop
out
lahf
add
pop
ja
push
fistp
add
adc
add
popa
imul
pop
mov
addr16
rcl
cmp
xor
dec
movs
xor
mov
es
push
mov
shr
in
or
inc
in
pop
les
xor
adc
(bad)
xor
in
or
test
int3
(bad)
pop
xchg
cdq
mov
rol
push
push
imul
inc
jne
gs
test
movs
push
(bad)
clc
rcl
adc
sahf
ret
and
mov
es
repnz
push
nop
sub
mov
inc
fnsave
je
mov
add
scas
adc
imul
mov
add
add
sbb
les
jmp
or
jp
mov
imul
rcr
addr16
lods
push
mov
scas
push
outs
pop
lock
cmp
test
test
cmp
jne
xor
add
and
jo
jo
cmp
icebp
push
lea
jge
mov
sub
lds
jae
call
rcr
ror
mov
imul
mov
mov
pop
es
jne
xchg
lods
add
lea
stc
lods
int3
cdq
push
jmp
push
jl
sub
jns
dec
lds
pushf
les
jo
scas
or
mov
sbb
fwait
in
mov
and
push
mov
jle
pop
sub
cmp
mov
cwde
jp
sub
jmp
movs
in
pop
inc
sub
pop
and
fnop
push
mov
stos
push
cwde
pop
push
fadd
add
adc
mov
and
popa
inc
and
dec
lods
clc
aam
outs
jl
mov
mov
cli
rcr
in
mov
scas
sub
sbb
and
inc
pop
sub
inc
ret
or
loope
scas
jno
lods
ins
js
nop
xchg
cli
ins
push
mov
retf
in
mov
movs
lahf
jb
jns
xchg
or
sbb
mov
(bad)
psubusb
enter
mov
adc
xchg
push
mov
xor
xchg
dec
clc
mov
push
mov
xchg
mov
mov
test
mov
or
pusha
iret
cwde
int
and
je
push
in
bound
mov
jl
lock
(bad)
(bad)
les
aaa
xor
sahf
mov
loope
mov
sbb
dec
stc
xchg
mov
add
lods
sbb
mov
cmp
leave
adc
movs
dec
test
inc
outs
jno
adc
f2xm1
mov
xor
adc
jle
add
(bad)
aad
mov
mov
adc
(bad)
cld
xor
mov
mov
jmp
pop
cmp
and
and
enter
jne
mov
and
loopne
icebp
sub
cmp
pop
les
or
sub
mov
xchg
gs
inc
popf
jne
int
aad
inc
adc
xor
pushf
push
mov
mov
mul
daa
cmps
mov
xor
push
call
cmp
inc
lea
xchg
sbb
inc
inc
pop
sbb
aad
pusha
jmp
aam
lock
mov
popa
sub
pop
int
ins
cmps
stos
inc
shl
pop
or
xlat
inc
enter
cmc
outs
call
jl
test
mov
in
jns
je
dec
adc
or
and
jg
dec
and
imul
arpl
push
or
or
pop
lods
or
or
xor
inc
xor
jne
xchg
scas
je
cmc
and
lods
sbb
gs
push
popf
pop
inc
mov
jbe
inc
adc
mov
adc
pushf
shr
(bad)
test
jno
stos
cmps
scas
dec
sar
mov
loope
add
retf
mov
ret
in
pusha
js
scas
rcr
(bad)
mov
inc
mov
fcmovnu
cli
cmp
(bad)
fdivr
fsubr
sub
mov
pop
out
retf
cmp
lods
mov
in
fwait
push
loopne
and
es
xchg
pop
lods
ret
dec
lock
std
wbinvd
push
xor
adc
in
dec
shl
loope
mul
jae
and
dec
lods
std
je
movs
les
jmp
mov
std
push
cmp
pop
jbe
push
or
mov
mov
mov
leave
hlt
stc
(bad)
sbb
adc
fnstcw
adc
test
lods
or
pop
lods
and
or
mov
inc
mov
retf
fcomp
inc
adc
retf
inc
gs
fucomp
cmc
xor
push
pushf
inc
jne
xor
fsubr
jb
mov
add
dec
mov
movs
and
ror
stc
mov
mov
xchg
sbb
sar
(bad)
inc
add
in
test
push
xchg
mov
lock
push
adc
shl
cld
leave
fbld
cwde
jle
push
pop
sbb
push
fucomip
addr16
int
jmp
mov
enter
fnstsw
imul
das
sub
xchg
rol
shl
xor
add
dec
mov
jp
(bad)
imul
sub
lds
(bad)
xor
sar
push
mov
and
mov
cdq
and
cdq
cmp
and
dec
sub
inc
push
ins
arpl
jo
or
mov
in
mov
nop
clc
add
xchg
adc
adc
test
rcr
in
or
mov
in
loope
shl
xchg
mov
xor
mov
(bad)
pop
jle
pop
jae
cmps
mov
hlt
mov
push
mov
(bad)
ror
cmp
lds
jle
arpl
xor
xchg
test
mov
add
pusha
imul
movs
dec
pop
adc
cmp
xchg
xor
and
lods
add
icebp
inc
xor
jmp
xchg
sar
in
rol
xor
cmp
or
addr16
xor
in
test
push
into
mov
push
mov
fmul
outs
jb
adc
jmp
test
inc
jne
jno
test
stc
mov
in
xchg
mov
aad
and
shr
xchg
dec
mov
cmps
mov
iret
inc
mov
rol
fst
loope
sub
or
pop
dec
inc
and
add
xchg
push
xchg
sub
popf
xor
and
add
mov
add
repz
push
jecxz
rcr
and
push
jne
and
cmp
mov
shl
mov
cmps
test
xor
ret
scas
push
cmp
psrld
loopne
loopne
test
sub
sar
jbe
test
dec
pop
inc
dec
movs
icebp
in
mov
push
dec
xchg
xchg
mov
sbb
out
loope
xor
jns
push
loope
and
xor
retf
rol
icebp
sub
mov
xor
addr16
test
or
sub
sub
mov
int
call
movs
repnz
int
shl
std
inc
mov
out
mov
dec
lds
cmc
xor
ret
pop
jbe
push
pop
xor
xor
sbb
mov
adc
in
sub
pop
jnp
push
daa
dec
jbe
ret
fisub
adc
sub
xchg
mov
int
mov
fimul
mul
sub
jo
xor
stc
fdivr
inc
xor
push
inc
(bad)
dec
jns
movs
and
daa
sahf
iret
dec
inc
xor
jne
(bad)
sbb
jnp
outs
sbb
daa
and
or
xchg
jo
loopne
inc
add
xor
xchg
clc
mov
xchg
mov
aam
mov
xchg
rol
jbe
test
inc
inc
les
mov
sbb
mov
les
mov
movs
js
(bad)
(bad)
jb
pop
retf
cld
movs
mov
lock
into
stos
inc
mov
nop
mov
push
push
jp
jb
dec
bound
(bad)
or
and
jl
arpl
inc
fistp
rcr
icebp
cld
ficom
mov
jl
xor
sbb
gs
aam
or
mov
mov
in
xchg
pusha
aam
fadd
mov
es
in
mov
pop
pusha
adc
inc
inc
mov
inc
jb
push
call
mov
mov
jl
gs
mov
ss
movs
jg
aaa
and
mov
inc
bound
mov
rol
mov
add
adc
cmp
lods
inc
or
stc
dec
jge
jno
fdiv
rcl
ret
repnz
aam
dec
push
in
dec
adc
loopne
mov
lods
xchg
hlt
les
loopne
inc
rcr
scas
aam
sbb
xor
push
dec
test
hlt
es
repnz
retf
mov
es
and
xor
push
outs
or
dec
cmps
sub
(bad)
mov
mov
push
adc
int3
call
add
sub
mov
jbe
shl
jp
(bad)
movs
xlat
lds
inc
mov
inc
mov
xchg
adc
test
ds
and
mov
popa
outs
ins
pop
pop
ret
or
xchg
pop
mov
loop
hlt
(bad)
stos
xchg
mov
iret
xchg
or
and
inc
push
icebp
rol
mov
test
cdq
out
jecxz
(bad)
push
and
lods
push
push
aad
pushf
pop
push
ds
in
jae
sbb
popf
icebp
mov
adc
shr
jmp
scas
cmp
and
or
mov
adc
add
pop
stc
xchg
jmp
nop
icebp
mov
xchg
cmp
mov
add
sar
mov
hlt
adc
movs
and
les
adc
push
jno
ins
mov
push
mov
pusha
and
jns
clc
test
xor
sbb
not
sub
add
icebp
test
dec
int
or
jnp
outs
daa
popa
sbb
popa
je
cmps
sbb
movs
add
test
mov
and
mov
sub
in
inc
push
in
cmp
adc
xor
enter
jle
adc
frstor
ja
or
push
add
nop
(bad)
xchg
sbb
mov
cmp
jmp
mov
fs
push
sti
sahf
inc
cmps
loope
aam
(bad)
mov
jo
popa
inc
nop
and
fst
push
lea
cmp
les
dec
or
icebp
mov
in
or
aam
adc
jae
dec
sbb
das
test
push
adc
leave
push
or
aam
gs
fiadd
sub
repnz
(bad)
xor
scas
icebp
mov
pushf
retf
call
dec
aaa
and
add
clc
into
fstp
jl
cld
fcmovnb
cmp
mov
aad
popa
sub
mov
mov
push
jo
or
cld
xchg
dec
pop
mov
cmc
nop
(bad)
rol
pushf
shl
jl
ins
xor
imul
fisub
cmp
outs
pop
in
push
add
cdq
mov
xchg
sbb
into
loope
pop
pushf
mov
idiv
bnd
mov
mov
ins
or
into
mov
sbb
clc
or
out
lds
xlat
jnp
sti
jno
popa
les
add
fwait
pop
(bad)
icebp
and
fcom
pop
sbb
dec
mov
aaa
hlt
pop
out
sub
pop
pusha
outs
or
add
push
xor
mov
inc
mov
(bad)
fwait
pop
adc
pushf
mov
inc
dec
test
pop
hlt
mov
lahf
scas
add
xor
and
imul
mov
ficom
jne
xchg
mov
fadd
rcl
aaa
out
lds
repz
movs
loope
(bad)
rol
js
xor
adc
shl
adc
mov
jae
mov
xchg
mov
pop
cmp
adc
mov
add
in
push
es
(bad)
add
repnz
ja
bound
xor
shl
rcr
mov
(bad)
mov
adc
xor
ror
(bad)
xchg
or
mov
sbb
push
addr16
inc
cmps
je
push
or
arpl
movs
lock
cmp
in
test
xor
jp
rcr
pop
jno
xor
aad
stos
mov
xchg
xchg
data16
movs
jbe
push
je
or
inc
push
scas
ja
and
sar
push
mov
not
jns
push
cmc
add
inc
jg
or
add
push
repz
mov
xchg
loope
adc
and
jmp
leave
fbstp
push
mov
push
and
sahf
ja
pusha
push
cmps
repz
add
mov
xchg
rcl
xor
les
mov
dec
push
inc
out
cdq
xor
or
dec
lds
inc
push
push
mov
daa
(bad)
daa
ins
inc
and
push
jg
cld
add
mov
imul
sbb
mov
lds
lds
jno
push
push
and
push
sub
fwait
jns
outs
sbb
ret
repz
jo
bound
and
es
add
add
scas
ja
cwde
out
push
pop
cmp
aas
bound
sub
div
inc
mov
iret
(bad)
add
movups
in
cmp
in
xchg
cmp
ret
ja
in
mov
cdq
and
cdq
push
jmp
jecxz
push
shl
adc
cmps
gs
xchg
out
imul
adc
and
(bad)
jns
(bad)
fdivr
push
add
mov
fsub
cmp
retf
js
cmp
cmc
adc
mov
add
pusha
faddp
call
js
mov
sbb
cmp
push
push
shl
retf
int3
into
cwde
icebp
jne
push
retf
mov
jne
mov
push
adc
pop
mov
frstpm(287
loope
test
jp
xlat
add
sub
nop
daa
aas
push
xor
or
xor
fs
cmp
jo
retf
in
mov
or
lea
adc
lods
lahf
push
dec
pop
inc
jno
sti
xor
pop
sub
add
dec
or
sub
adc
dec
mov
adc
jno
adc
adc
lock
cmp
fsubr
push
jg
inc
push
in
sbb
xor
pop
cs
add
stos
hlt
in
out
cmp
add
int
lods
cmp
lods
out
int
in
out
mov
dec
sbb
sub
lds
push
int
cld
repnz
mov
into
pop
add
push
int
and
pop
mov
dec
(bad)
(bad)
sub
push
dec
jno
stos
push
pop
sub
inc
dec
clc
mov
or
lea
lods
dec
int
lods
xchg
dec
popa
mov
mov
mov
adc
xchg
mov
mov
test
mov
sub
ror
lods
pop
ror
push
ret
fisttp
inc
jae
icebp
mov
aad
clc
sub
cmp
sub
leave
int
retf
fcom
xchg
fs
ins
cmp
cs
dec
sbb
pop
xor
dec
test
fbstp
cmps
cmps
dec
jmp
retf
mov
ins
cwde
sub
inc
push
adc
lds
lods
(bad)
fwait
add
es
xor
add
int
push
push
mov
imul
in
push
cwde
or
mov
(bad)
lea
inc
retf
sub
mov
outs
dec
inc
retf
mov
sub
mov
sbb
js
and
arpl
mov
mov
arpl
rol
repz
mov
jb
imul
xor
xchg
jl
shl
pop
ret
in
imul
xor
cmp
push
nop
mov
add
scas
repz
mov
lock
mov
fcmovb
sub
adc
das
rcl
jae
push
hlt
ds
adc
push
lahf
push
jno
(bad)
and
cmp
xchg
or
je
fadd
xchg
lock
pushf
cmp
ret
mov
xor
mov
xor
(bad)
jno
mov
loop
cmps
fistp
mov
push
test
fcomp
rcl
adc
push
xlat
cmps
pop
push
xchg
xor
nop
imul
vmread
inc
pop
sub
mov
fistp
rcr
pop
mov
pop
je
lahf
mov
xchg
or
shl
xor
je
jl
xor
div
xor
xor
sar
mov
ficom
pop
and
xchg
in
icebp
dec
push
stos
rcr
jl
shl
lods
es
(bad)
shl
push
mov
jne
ja
mov
or
push
repz
sbb
jl
pop
jb
jae
ret
xor
push
repnz
pop
cli
mov
in
push
idiv
(bad)
mov
add
sahf
and
and
lods
xchg
stos
dec
sbb
stos
cmps
pop
stc
out
(bad)
(bad)
sbb
dec
ret
or
mov
xchg
push
mov
jmp
js
pushf
cmps
mov
mov
fs
scas
pop
xchg
iret
mov
pop
ret
(bad)
stos
cmps
pop
xchg
mov
dec
sbb
cmps
ss
into
cmps
cli
pop
dec
mov
add
daa
push
xchg
add
cmps
push
cmps
jne
and
stos
outs
xlat
mov
sbb
push
cmps
fwait
into
repz
xchg
ss
mul
loopne
adc
xchg
pop
das
dec
cmps
cmp
jecxz
xor
lahf
aad
lods
ret
into
daa
add
and
retf
xor
and
addr16
xchg
into
and
shl
call
popf
push
cmps
pop
jmp
mov
data16
cmps
pop
xchg
into
xchg
daa
and
es
pop
daa
mov
and
loop
movs
cmps
pop
xchg
ss
out
stos
mov
outs
adc
xchg
gs
sub
push
mov
fnstenv
push
cmps
mov
cmp
fst
scas
lea
cmps
xor
mov
ret
cmps
xchg
ss
and
xchg
sbb
fdivr
loopne
data16
mov
sti
and
pusha
retf
sub
inc
ins
out
es
mov
daa
inc
std
adc
sbb
xchg
loopne
add
out
rcr
pusha
or
loopne
loopne
loopne
in
and
jecxz
inc
mov
(bad)
jmp
or
loopne
out
int
popf
out
(bad)
loope
jmp
pusha
or
loopne
jo
pop
int3
pop
ins
push
mov
add
shl
xor
loope
sub
push
dec
jo
add
loopne
clc
or
and
movs
(bad)
jb
(bad)
loopne
jo
xchg
sbb
ret
lock
cmp
push
push
sbb
jmp
hlt
cwde
clc
cmp
inc
retf
mov
jb
shl
fs
lock
mov
or
shl
sbb
call
sub
jnp
movs
add
push
lahf
(bad)
loopne
loopne
out
out
or
addr16
lock
(bad)
imul
jo
cwde
test
(bad)
mov
or
popa
int
(bad)
ins
jb
popf
and
jecxz
jmp
jmp
jecxz
and
mov
or
push
mov
mov
mov
cwde
enter
and
mov
xchg
shr
adc
(bad)
lock
push
lahf
pop
jecxz
lahf
add
cwde
pop
shl
pop
pop
mov
dec
push
jge
lock
out
or
jecxz
in
sbb
jns
retf
jle
lods
pop
cmp
sbb
cmp
sub
xchg
and
stos
jns
fldz
aam
mov
xchg
(bad)
push
push
out
fwait
mov
adc
pusha
xchg
pusha
fsubr
pusha
fsubr
pop
sub
xchg
lea
sbb
jmp
jecxz
pop
xchg
imul
xchg
add
pusha
shl
dec
out
loopne
imul
add
adc
imul
sbb
mov
xchg
loope
sub
sahf
sbb
cdq
loopne
xchg
pushf
lahf
leave
adc
mov
sbb
pushf
outs
cwde
imul
addr16
dec
jecxz
sub
mov
leave
xor
sub
jmp
jnp
add
lods
fld
cwde
sub
mov
mov
imul
mov
add
mov
pop
mov
dec
call
push
cmp
push
jmp
scas
add
sti
sub
loopne
pusha
xlat
jmp
fdiv
repnz
mov
mov
jmp
iret
xchg
imul
push
sub
out
sub
adc
repnz
test
cmp
iret
and
imul
addr16
imul
sbb
dec
lock
pop
imul
cs
xor
inc
cwde
cmp
adc
or
jmp
xchg
mov
dec
pop
add
sbb
sbb
mov
cwde
dec
movs
scas
sbb
push
add
cmp
ret
imul
cwde
dec
jo
and
cmps
lock
out
mov
and
sbb
sbb
addr16
mov
cwde
sti
and
xlat
add
push
fsubr
daa
shr
fistp
jmp
scas
sub
pop
cmp
das
mov
pop
dec
jecxz
sti
dec
loopne
outs
jno
stos
pusha
les
xchg
in
inc
out
sub
jle
cdq
or
xor
mov
in
mov
sahf
mov
pop
inc
push
lea
imul
adc
jl
cmc
or
fimul
ins
mov
ds
iret
sbb
or
dec
push
mov
inc
rol
hlt
or
push
lea
mov
jmp
inc
lds
or
shl
lea
or
int3
inc
xor
sbb
xor
or
push
lea
pop
gs
ds
xor
xchg
inc
push
xor
popf
ins
mov
or
inc
sahf
mov
data16
bound
data16
loop
ins
inc
fild
adc
shl
mov
dec
fld
lea
rcr
dec
fidivr
(bad)
push
xor
fs
fnstsw
mov
lahf
les
cmps
and
out
je
xchg
cmc
mov
xor
sahf
aam
retf
add
cmp
mov
inc
mov
pop
dec
cmc
mov
out
loop
xchg
push
retf
lock
repz
cmp
movs
loope
mov
out
inc
aaa
mul
inc
das
retf
repz
mov
cli
loop
cmp
push
xchg
data16
add
mov
in
pop
pop
retf
repz
(bad)
adc
and
jecxz
push
mov
fxch
shl
xlat
push
iret
and
repnz
das
xlat
sub
cmp
mov
pop
out
dec
mov
fst
mov
and
mov
jb
cs
scas
repnz
push
mov
scas
push
ret
out
add
inc
push
repz
and
out
mov
add
and
xchg
pop
mov
rcl
xchg
inc
in
ror
or
sbb
aas
sbb
ret
ror
lahf
(bad)
fldcw
dec
jae
ja
clc
and
mov
or
push
xlat
cmp
cmp
div
add
mov
xor
add
xchg
loop
sar
add
data16
xchg
ret
test
cmps
stc
sub
ss
jl
mov
aad
xor
and
stos
lock
ret
xchg
inc
or
jmp
iret
jae
test
and
aas
and
jnp
xor
and
sub
push
stos
jae
rcr
(bad)
bound
xor
bound
leave
push
cli
rcl
jae
xchg
add
pop
retf
js
and
sar
fidiv
mov
inc
repz
lods
out
fld
leave
repz
push
dec
jae
xchg
ret
fwait
and
push
ror
and
rol
mov
mov
inc
cs
ret
xchg
retf
jns
jge
movs
movs
popa
fwait
ds
outs
or
ins
and
cdq
outs
inc
mov
jmp
scas
(bad)
jmp
jmp
and
rcr
ret
shr
sub
(bad)
out
dec
cmp
iret
movs
in
sbb
pushf
pop
xchg
push
stos
and
fisttp
and
dec
mov
or
and
sub
movs
gs
scas
add
aas
das
pop
push
in
das
(bad)
scas
mov
pop
(bad)
ins
or
jmp
or
lods
pop
mov
xor
push
cs
int3
mov
ins
scas
push
loop
movs
dec
sbb
cmc
push
mov
les
inc
movs
es
mov
scas
call
sub
repz
add
dec
cmp
and
sub
jp
push
sub
jmp
dec
gs
rcr
outs
lods
(bad)
sti
sbb
into
sub
cmp
outs
cmp
movs
adc
inc
mov
push
pop
movs
test
movs
dec
xchg
xchg
pop
dec
xchg
shl
and
inc
std
fimul
sub
cs
mov
mov
pop
push
in
push
cmp
out
jno
std
movs
dec
scas
sub
and
dec
out
push
dec
scas
popa
mov
int
cmp
imul
jge
int
sub
scas
dec
into
sub
cs
and
test
scas
das
shr
xchg
or
sbb
and
jl
push
rol
dec
and
in
mov
leave
inc
(bad)
lds
mov
mov
xor
mov
add
movs
popf
mov
sbb
xchg
mov
mov
retf
lahf
mov
pop
scas
pop
push
push
scas
fst
stos
outs
dec
lahf
dec
movs
mov
dec
push
cmps
stos
imul
lods
inc
push
xchg
pop
push
xchg
pop
fmul
mov
call
pop
and
ret
aas
in
or
movs
mov
mov
jp
data16
ja
xchg
ins
mul
mov
rcr
fnstenv
call
lahf
ficomp
add
ret
pop
mov
clc
lahf
and
xchg
outs
pop
rcl
stos
idiv
lahf
push
iret
scas
iret
aas
pushf
ret
pop
sub
mov
sub
sub
ja
mov
ret
shl
cmp
mov
sti
test
imul
xchg
out
aas
movs
mov
std
fild
sub
mov
daa
lahf
push
dec
push
sub
mov
cli
sbb
mov
adc
clc
test
imul
cmps
pop
idiv
bound
test
dec
sub
push
jmp
addr16
push
jmp
adc
push
ret
xchg
stos
mov
stos
cmp
push
pop
outs
neg
into
stos
shl
adc
sbb
pop
test
xchg
stos
lahf
cs
mov
sub
nop
inc
stos
ja
lahf
out
imul
sbb
inc
mov
stos
cdq
stos
movs
loop
jp
cmp
xchg
pop
sub
or
stos
outs
pop
pushf
sub
sbb
iret
stos
arpl
jecxz
sti
lods
xchg
imul
inc
adc
sti
lahf
push
(bad)
sub
stos
lahf
mov
fisttp
mov
inc
mov
mov
jl
mov
clc
sbb
jnp
aad
icebp
lods
fdiv
pop
sbb
inc
push
js
repz
out
retf
sbb
pop
lock
adc
mov
adc
(bad)
cld
fs
push
leave
outs
push
dec
fst
loop
loop
fchs
xchg
xor
push
ins
movs
cmc
xchg
jne
adc
loop
push
aad
mov
outs
push
jae
popf
sbb
adc
sbb
fdivr
pop
sbb
pusha
popf
add
pusha
pop
out
mov
xgetbv
bound
jl
iret
inc
push
loop
(bad)
lock
loop
pop
out
shl
rcr
cld
mov
shl
cwde
popf
nop
retf
pop
call
mov
gs
mov
mov
lds
sbb
mov
mov
mov
lds
pop
fist
lgs
lea
dec
mov
out
adc
nop
popf
mov
sbb
popf
loop
jne
call
jns
adc
inc
dec
adc
adc
bound
sbb
lds
fsub
setge
popf
lock
cld
nop
(bad)
mov
nop
pop
popf
popf
jl
jge
sbb
ss
mov
mov
xchg
aad
adc
jnp
push
mov
lock
into
sbb
stos
sub
inc
add
push
int3
and
out
(bad)
ins
inc
rol
add
jmp
adc
pop
adc
xchg
push
add
mov
mov
push
add
xor
mov
mov
xchg
pushf
dec
add
mov
sub
adc
xchg
adc
cdq
fimul
and
sub
pop
fcom
rcl
jb
push
add
push
lea
stos
add
aad
ror
push
pop
ss
ss
dec
call
sub
dec
call
test
dec
div
push
stos
or
xchg
and
mov
mov
lahf
push
in
adc
in
inc
test
cmps
stos
sub
dec
jmp
sub
jmp
out
pop
dec
loope
pop
mov
ret
push
ja
gs
jnp
add
and
retf
xchg
stos
in
pop
xchg
ins
dec
imul
inc
xchg
scas
and
mov
adc
xor
stc
mov
pop
jae
test
ficom
sub
fnstcw
or
dec
lahf
sti
out
into
pop
int
loop
or
loope
dec
add
adc
outs
cmp
mov
jmp
and
push
adc
mov
out
cmps
mov
inc
das
stos
jecxz
pushf
(bad)
pop
jne
ds
lods
mov
stos
lahf
stos
lahf
sub
sub
sub
sub
stos
lahf
stos
lahf
stos
lahf
stos
lahf
sub
sub
sub
sub
stos
lahf
stos
lahf
stos
lahf
stos
lahf
sub
sub
sub
sub
stos
lahf
stos
lahf
stos
lahf
stos
lahf
sub
sub
sub
sub
stos
lahf
stos
lahf
stos
lahf
stos
lahf
sub
sub
sub
sub
int3
into
lods
out
(bad)
inc
pop
pop
inc
ins
jne
jmp
shl
jne
sub
dec
sub
(bad)
and
rcr
pop
jne
jne
retf
lahf
fsubrp
fcomip
repz
jae
jle
jo
pop
into
mov
jmp
dec
xor
inc
jae
pop
retf
or
lahf
fdiv
jmp
jae
data16
ret
loop
cld
jg
ins
in
mov
jl
sub
cdq
lock
lds
pop
imul
icebp
fdivp
(bad)
js
push
ins
dec
jle
ins
ret
lahf
fucomip
icebp
in
js
sub
imul
cli
cli
lahf
retf
lock
sti
pop
mov
popa
mov
push
retf
js
dec
test
xor
adc
and
mov
dec
int3
fld
push
mov
outs
inc
add
in
xchg
cdq
add
je
and
push
pop
ret
into
mov
ins
pusha
sbb
lock
cmps
fcmovbe
dec
inc
cmp
fcomp
sahf
lods
jmp
fistp
call
jmp
fistp
mov
jmp
mov
lods
cdq
mov
mov
jmp
mov
lahf
lahf
mov
(bad)
fucomip
(bad)
xchg
mov
stos
jmp
fild
fild
repnz
xchg
lods
cdq
mov
cwde
lods
sub
mov
lods
xor
lods
scas
mov
mov
mov
mov
lods
shl
cdq
mov
mov
mov
in
fsubr
fsubr
fsubr
jmp
neg
jno
out
adc
mov
ret
(bad)
shl
sub
pop
les
(bad)
fwait
lahf
stos
lahf
mov
fucomip
fucomip
mov
fucomip
fucomip
fucomip
mov
fucomip
fucomip
fucomip
cmp
neg
cmc
scas
push
mov
mov
mov
xor
iret
fwait
mov
mov
hlt
inc
push
daa
or
pop
inc
daa
aad
xor
mov
(bad)
ja
jno
sub
data16
sub
cmp
iretw
jnp
popa
int3
jg
jge
outs
mov
inc
jmp
and
jne
and
dec
retf
inc
(bad)
and
inc
test
(bad)
jl
and
jp
jae
popa
(bad)
pusha
sar
iret
je
pop
lds
ja
jae
xor
jae
pusha
mov
pop
call
and
push
pusha
(bad)
add
add
scas
or
xchg
repz
cli
dec
dec
cmp
mov
xor
popa
adc
xor
dec
jecxz
cmp
inc
int3
aad
inc
inc
out
lods
cmp
jmp
xor
loop
test
pop
push
loop
arpl
leave
ins
jo
dec
fild
push
aam
cmc
pop
loope
mov
inc
pushf
ins
les
loopne
out
dec
fcom
cld
outs
shl
arpl
inc
xor
and
cmps
pop
xchg
sub
dec
int
aam
cmp
fcomp
pop
fcomp
ret
dec
loop
ss
mov
xchg
cmp
data16
outs
mov
pop
mov
pop
fisubr
sbb
dec
fld
pushf
pusha
(bad)
or
pop
hlt
mov
ss
pop
cmc
pop
mov
frstor
add
daa
std
fwait
and
or
xor
push
mov
push
stc
movs
adc
fnstcw
jns
daa
test
jae
fwait
push
jl
ins
in
scas
inc
fnstcw
adc
inc
scas
popa
les
mov
dec
fistp
int
cld
adc
inc
not
sbb
addr16
aad
mov
loope
shl
add
in
(bad)
inc
iret
or
popf
push
loop
sbb
and
or
jno
add
outs
mov
sub
arpl
popa
mov
test
inc
(bad)
pop
into
jnp
sub
(bad)
dec
mov
sbb
xchg
pop
fisttp
imul
pop
mov
mov
and
inc
pop
mov
mov
jg
inc
test
sbb
stos
dec
mov
dec
test
inc
popf
mov
popf
cmp
addr16
xchg
bound
mov
jp
cmp
push
ror
mov
inc
mov
test
jl
cmp
js
dec
xchg
dec
dec
(bad)
fistp
test
jg
jle
or
in
pop
xchg
dec
cwde
or
xor
pop
out
jge
es
shr
add
fwait
pop
lock
movs
inc
ror
push
cmp
sbb
and
bound
pop
jecxz
mov
inc
imul
movs
inc
call
inc
jmp
mov
in
aad
inc
inc
fs
xchg
jl
sbb
inc
xchg
rol
jl
sbb
movs
inc
ror
mov
out
ins
ret
pop
movs
jl
jnp
pusha
pop
mov
cld
mov
pop
sahf
dec
imul
bound
fnsave
and
mov
inc
mov
jae
pop
xor
scas
push
fcomp
fistp
mov
iret
jp
sbb
pop
loope
xchg
bound
mov
frstor
and
jge
addr16
xor
and
push
dec
pop
sub
dec
dec
sub
pusha
push
dec
pop
cwde
call
jne
adc
and
jl
jb
cdq
retf
add
je
add
je
inc
dec
adc
dec
dec
xor
xor
jnp
or
xchg
stos
jb
gs
add
cmp
cmp
leave
adc
dec
cs
pop
dec
dec
pop
dec
mov
into
pop
pop
pusha
or
inc
push
inc
into
mov
pop
je
pop
push
adc
dec
nop/reserved
adc
push
pop
dec
pop
xor
inc
jnp
push
mov
imul
push
adc
daa
jbe
adc
push
xor
jp
push
jp
add
(bad)
jns
jl
jg
adc
ins
test
mov
xor
pop
sbb
call
cmp
(bad)
cld
enter
pop
dec
outs
jns
sbb
dec
dec
or
sub
push
adc
outs
outs
push
push
jl
cwde
into
push
dec
push
js
and
movd
outs
jle
xor
push
push
mov
mov
fs
sbb
pop
push
lods
or
inc
sub
pop
outs
fimul
adc
adc
cmp
nop
and
xor
jl
or
outs
add
pop
inc
adc
mov
mov
adc
ja
dec
push
add
push
jo
xchg
cmps
xchg
shl
pop
or
cs
dec
inc
mov
dec
dec
push
inc
pop
dec
or
sbb
mov
pop
jb
es
xor
push
jae
xlat
xlat
mov
jg
xor
push
ins
imul
push
jne
inc
dec
adc
dec
pop
jns
mov
adc
sub
push
or
or
or
pop
or
xchg
iret
test
ins
pusha
aas
push
pop
xor
or
pushf
jge
outs
dec
cmovp
push
or
dec
push
adc
xor
dec
and
push
push
imul
lahf
mov
dec
push
adc
outs
inc
or
mov
cmp
or
imul
fmul
aaa
or
adc
fisubr
pop
inc
or
mov
cmps
dec
mov
xor
pop
div
jg
jp
push
aam
inc
mov
sub
test
pop
mov
fcom
mov
(bad)
push
jmp
dec
scas
sbb
lea
scas
daa
lds
dec
rol
dec
xchg
pop
pushf
cmp
movs
dec
rcl
jb
or
out
xor
inc
(bad)
or
js
jge
mov
inc
mov
fist
cmp
or
jns
mov
jnp
or
pop
jno
pop
lea
test
fistp
pop
mov
jmp
in
das
cmps
adc
sub
mov
test
push
out
rcr
ins
inc
adc
pop
rcl
mov
inc
sbb
or
jnp
push
ret
dec
mov
(bad)
cmp
or
or
out
into
jns
fst
mov
sub
cmp
movs
pop
icebp
add
dec
fnstcw
push
retf
cmps
inc
(bad)
pop
(bad)
sbb
add
and
rcr
adc
jo
sbb
cs
mov
dec
mov
sti
pop
les
dec
(bad)
and
in
outs
lods
inc
(bad)
cmp
loope
retf
out
sub
jp
fs
sti
jbe
fild
mov
lods
pusha
(bad)
cmp
aad
mov
retf
pop
mov
std
das
scas
sub
lods
add
addr16
in
fisubr
popa
jmp
add
retf
add
repz
push
not
in
sub
sub
mov
or
and
movs
and
cli
outs
aam
aad
je
imul
aas
mov
sbb
fmul
pop
lods
cmp
push
daa
icebp
fsubr
and
scas
mov
xor
popa
jmp
mov
dec
hlt
psrlw
sub
or
mov
push
fnstsw
cwde
xor
gs
push
int
cli
xor
jle
daa
mov
imul
mov
sub
cld
sbb
xor
loop
into
adc
dec
mov
leave
ds
mov
ret
test
jns
jne
pusha
stos
in
clc
and
xchg
fs
dec
scas
addr16
fmul
test
jg
sbb
xor
push
ins
or
fldenv
or
jb
push
push
pop
pop
cld
int3
xchg
out
fbld
sub
jg
into
cwde
hlt
mov
shr
xor
aas
test
pushf
cmc
push
inc
or
lds
dec
cmps
fdivr
idiv
stos
mov
xchg
xor
fisub
test
xor
or
(bad)
fsub
outs
add
jecxz
dec
(bad)
sbb
mov
cmp
lods
cmp
jbe
shl
stos
cwde
jl
pop
and
sbb
popf
mov
fidivr
fstp
imul
jmp
or
or
popf
fild
dec
add
sbb
mov
in
aad
sbb
sbb
(bad)
jmp
pop
push
or
movs
in
fmul
int
sbb
sbb
xor
call
xchg
call
pop
push
dec
push
pusha
das
sbb
hlt
out
ds
gs
xor
xor
(bad)
aam
mov
jg
add
pop
inc
or
mov
dec
cmp
in
clc
into
shl
push
jae
inc
inc
inc
sbb
cld
(bad)
nop
iret
cli
fstp
das
das
jge
cmp
inc
sar
iret
xor
push
inc
jbe
ret
xchg
loop
and
pusha
push
inc
push
xor
jmp
jmp
ja
or
aam
sub
je
push
leave
aam
rol
fstp
dec
aas
dec
pusha
jbe
dec
cmp
mov
loope
loope
dec
jae
xor
and
hlt
mov
(bad)
in
retf
js
pop
inc
jnp
add
shr
iret
sbb
dec
inc
push
jge
or
(bad)
mov
sbb
inc
das
call
mov
push
inc
push
pop
inc
pop
stos
ror
fsub
mov
push
dec
jo
xor
inc
push
jmp
scas
leave
pop
jo
inc
add
xor
mov
(bad)
fldl2e
enter
push
push
or
leave
mov
iret
shl
pop
je
dec
push
js
pop
out
ret
out
mov
dec
sub
cmp
pop
mov
in
ds
pusha
dec
xor
add
retf
icebp
jmp
dec
push
dec
xor
ret
and
pop
mov
sbb
cmps
scas
push
mov
sbb
das
popf
cmp
(bad)
xor
mov
call
sbb
sub
xchg
pop
loop
call
call
stos
sbb
mul
ja
aas
xchg
mov
stc
ds
push
cmp
cmps
idiv
xor
(bad)
lgs
push
(bad)
jmp
pushf
add
sbb
xchg
scas
push
xchg
xchg
and
adc
loope
mov
in
cmp
lods
xor
es
fsubr
lahf
std
inc
and
xchg
imul
adc
loop
cdq
or
sbb
outs
mov
outs
mov
mov
test
mov
mov
stc
sub
adc
sbb
push
stos
sub
mov
push
loope
adc
sbb
mov
lock
jle
fs
mov
and
adc
test
mov
sub
push
jmp
scas
xor
sub
xor
mov
stos
or
cmps
ins
sbb
jp
add
lahf
adc
dec
enter
js
inc
mov
stos
dec
fsubr
mov
repnz
sub
mov
outs
stos
fldcw
fcom
fmul
cmp
or
sti
xor
push
lock
fld
dec
mov
cmp
adc
xor
or
push
mov
rcl
retf
add
sub
lods
jl
pop
xchg
pop
enter
adc
sub
or
pop
shl
mov
mov
(bad)
and
xchg
push
xchg
idiv
inc
enter
pop
test
xchg
jbe
push
push
lock
dec
ins
fld
dec
nop
jae
xlat
xor
dec
lds
das
or
fs
lock
dec
clc
dec
sbb
popf
jl
cli
or
cmp
sbb
sbb
or
dec
lods
idiv
dec
(bad)
adc
sbb
jl
push
retf
fcom
or
rcr
jns
in
test
sti
sub
pop
adc
push
xchg
pop
cwde
lahf
adc
push
test
retf
dec
pop
ror
xchg
pop
mov
and
sub
sub
cmp
mov
dec
mov
adc
int
ins
aad
mov
iret
jo
sti
pop
leave
aaa
(bad)
cmp
or
sahf
scas
lods
test
pop
or
or
test
xchg
lods
ficomp
and
xchg
mov
aaa
pop
pop
and
xchg
scas
repz
das
push
push
xchg
mov
push
sub
sahf
call
cmp
(bad)
cwde
mov
mov
lock
jns
out
(bad)
ret
mov
push
cmp
int3
mov
cmps
mov
add
add
int
cwde
fistp
pop
adc
dec
sub
out
xchg
and
cmp
mov
call
or
ss
mov
stos
out
and
pop
jns
popf
ret
mov
int
push
jp
sbb
mov
mov
cmp
fstp
xchg
add
or
add
stos
mov
cmps
ficomp
and
retf
xchg
add
test
xor
out
sti
pop
mov
push
and
pop
aas
in
(bad)
mov
xchg
jmp
sbb
arpl
push
out
jbe
xor
aas
ja
push
repz
jmp
and
sar
mov
int
jl
mov
cmp
and
xor
sar
sub
mov
enter
mov
and
fisttp
in
mov
cmp
aaa
dec
fs
xchg
mov
scas
xor
jae
and
xchg
fst
push
pusha
int3
push
dec
(bad)
fiadd
and
inc
xchg
sub
push
xor
adc
adc
test
cmp
loopne
xchg
mov
push
xor
sbb
adc
sar
sub
(bad)
mov
in
adc
les
adc
xchg
out
xor
adc
loope
mov
shl
sbb
shr
add
lock
mov
xor
cmp
jo
retf
int
cmp
out
aaa
sahf
adc
cmp
jecxz
fwait
in
fs
in
lods
(bad)
sbb
mov
cwde
adc
lds
cmp
jge
inc
loopne
call
or
and
sbb
push
gs
shr
push
adc
sbb
std
sti
cli
cmps
mov
mov
add
add
ror
in
xchg
inc
xor
jo
mov
repnz
or
sub
std
jne
jo
lock
cmps
scas
jecxz
push
fst
adc
pop
inc
stos
mov
mov
mov
inc
add
lods
mov
int
or
iret
mov
push
dec
icebp
push
fdivr
mov
(bad)
pop
dec
mov
popf
in
clc
jl
dec
xchg
adc
mov
jmp
clc
pop
pop
or
jge
call
adc
lods
adc
and
xchg
push
fisubr
aas
dec
pop
sbb
pop
(bad)
jl
xchg
push
std
ds
mov
or
sub
das
daa
xlat
adc
mov
movs
ds
(bad)
mov
jl
push
pop
inc
scas
mov
and
and
sub
push
in
sub
push
jmp
mov
jg
pop
pushf
cmp
out
imul
inc
sub
push
dec
aam
stos
sbb
jge
mov
in
les
pop
and
pop
dec
jl
jmp
jmp
ins
aad
jns
jns
lods
stc
pop
enter
pop
lods
lods
sbb
pop
call
mov
fimul
pop
(bad)
jle
out
ds
stos
(bad)
imul
mov
pop
pop
cmp
fucomip
jle
scas
in
int
(bad)
push
push
lahf
cmp
ja
dec
push
rol
mov
xchg
mov
in
inc
mov
(bad)
imul
test
dec
imul
adc
aas
stos
std
dec
lea
out
retf
in
mov
int
mov
cld
iret
retf
xchg
cli
ins
pop
dec
jno
ins
test
lea
mov
pop
into
(bad)
sbb
jnp
sbb
jl
jnp
sub
pop
in
mov
push
jmp
cmp
fsubr
add
cmp
mov
push
push
push
js
in
js
xchg
mov
stos
mov
dec
cwde
sbb
leave
xor
and
mov
outs
shr
mov
sbb
jno
jg
cmp
leave
outs
mov
cmp
mov
cwde
aas
nop
inc
xchg
pop
mov
mov
sub
iret
retf
inc
test
jns
ret
aam
dec
std
cli
mov
inc
stos
sbb
add
mov
cmp
ror
mov
lods
test
dec
xchg
fld
dec
inc
mov
outs
cwde
dec
jnp
sbb
and
sub
cdq
adc
mov
mov
and
dec
mov
push
(bad)
and
je
fimul
inc
inc
pop
pop
push
mov
adc
jmp
jge
cmp
lods
sub
mov
pop
pop
mov
dec
pop
mov
or
push
mov
mov
dec
mov
(bad)
fimul
lahf
push
sbb
dec
mov
jg
jle
sub
sahf
inc
stos
lds
outs
test
call
enter
outs
xchg
dec
lods
push
mov
mov
imul
xchg
jns
push
in
movs
pop
stos
pop
xchg
mov
imul
sbb
add
mov
lahf
mov
jns
add
pop
dec
mov
dec
(bad)
repz
addr16
jmp
push
mov
iret
test
cmps
fldcw
loop
sub
sbb
or
pop
outs
pop
mov
mov
jl
dec
or
int3
nop
movs
call
lods
dec
adc
rcr
scas
sar
ins
(bad)
mov
dec
outs
cmp
test
stc
sbb
sub
sbb
mov
stc
int3
aas
imul
loope
mov
std
pop
lea
jl
(bad)
leave
call
call
lods
dec
shr
lea
sub
pushf
lea
jmp
jns
sub
cld
(bad)
cdq
in
popf
cmp
ins
(bad)
and
mov
or
jmp
pushf
scas
fbld
dec
test
mov
test
or
fs
mov
retf
mov
mov
adc
outs
adc
popf
mov
cdq
mov
aas
mov
js
mov
arpl
sub
or
aad
mov
cmp
imul
mov
or
mov
mov
pop
mov
cmp
movs
(bad)
xlat
or
icebp
into
pop
mov
pop
cs
xchg
icebp
jne
dec
mov
out
mov
test
cmp
jmp
xor
mov
(bad)
sahf
adc
mov
mov
push
push
jmp
std
fstp
mov
mov
repz
ds
xor
xchg
cmp
popf
adc
retf
sbb
fcomp
mov
or
pop
(bad)
repnz
mov
xor
sub
cmp
adc
and
hlt
xchg
push
out
mov
in
and
pop
push
push
sub
cwde
mov
mov
ror
pop
push
sbb
ins
shl
pop
sub
xor
pop
ins
xor
jbe
pop
sbb
lock
gs
clc
ins
iret
dec
inc
popf
push
call
stc
in
scas
scas
mov
rcr
sub
or
push
rcl
cwde
sbb
push
xchg
mov
aad
iret
vandnps
ds
adc
fwait
pop
sub
(bad)
add
stc
out
cmp
pushf
outs
pop
fidivr
stos
push
jnp
pop
push
movs
(bad)
test
ss
jmp
out
in
bound
mov
stos
inc
mov
in
cmp
cmp
cwde
popa
mov
adc
xor
mov
movs
in
jns
or
sbb
or
cmp
das
retf
hlt
in
jne
jl
mov
ret
aaa
push
jg
inc
cmovnp
int
push
imul
pop
xchg
sub
es
je
scas
ret
sub
test
sub
neg
into
dec
popf
repz
out
or
stos
stc
or
pop
pop
ret
mov
sbb
mov
dec
(bad)
mov
dec
mov
sub
outs
sbb
faddp
pop
retf
imul
sub
pop
xchg
ins
jl
sub
lea
test
pop
push
cdq
int
mov
mov
loop
mov
stos
out
aas
out
fst
das
push
pop
inc
je
mov
cmp
xor
repnz
and
mov
jnp
movs
add
fldcw
imul
pop
into
mov
adc
cmp
mov
ss
imul
frstor
jl
test
lods
ds
jle
jmp
cmps
sbb
psrlq
sar
and
aas
movs
add
or
sub
lea
sub
or
push
jnp
cli
lahf
fisttp
lods
jns
cmp
cmp
popf
jle
int
pop
cmp
cli
test
cwde
mov
cdq
xchg
mov
push
sbb
clc
sub
(bad)
stos
dec
scas
pop
(bad)
in
sbb
aas
pop
lods
retf
test
sub
stos
enter
jp
sub
mov
(bad)
cmp
(bad)
jmp
or
cmp
shr
call
and
add
push
stc
or
mov
mov
addr16
rep
dec
out
lahf
cmp
mov
mov
or
stc
pop
mov
mov
scas
out
icebp
stos
outs
jnp
bound
lods
hlt
adc
je
ret
cmp
dec
or
mov
dec
in
fwait
into
sub
push
clc
dec
jecxz
mov
fsubr
call
cdq
mov
retf
jmp
and
ret
in
inc
sbb
jmp
out
mov
mov
ror
dec
add
sbb
jae
aas
sub
out
sbb
cli
test
xchg
fisttp
mov
pop
xchg
out
mov
pushf
loop
movs
lahf
mov
add
pop
dec
add
outs
mov
cmp
data16
xor
push
push
cmp
fsubr
das
imul
xchg
lea
jno
mov
pop
daa
cwde
enter
stos
fwait
inc
cmp
and
or
cwde
cmp
scas
cmps
imul
lahf
or
pop
popf
call
icebp
out
sbb
mov
xchg
or
jecxz
and
out
sub
retf
or
fcomp
movs
lahf
into
fbld
cdq
clc
pop
pushf
lahf
stos
dec
lds
test
cmp
xor
mov
nop
outs
mov
sub
div
lahf
xor
fcomip
ficomp
repz
or
cmps
sahf
fwait
shr
in
movs
mov
mov
or
mov
mov
push
adc
test
adc
inc
inc
and
sbb
lock
xchg
xchg
test
ss
mov
sbb
(bad)
mul
gs
pop
cwde
ja
cmp
mov
scas
and
mov
xor
cli
dec
cli
pop
pop
add
call
cli
scas
adc
adc
pop
popf
addr16
int3
repz
retf
repnz
ins
mov
std
clc
enter
push
out
mov
(bad)
imul
xchg
jmp
mov
call
mov
ss
(bad)
mov
loopne
add
test
(bad)
mov
ins
mov
dec
cmp
xchg
repz
or
cdq
sbb
cmp
cli
fwait
xchg
mov
mov
xchg
xor
ffree
sub
(bad)
in
ror
mov
dec
imul
and
mov
lahf
scas
(bad)
aas
call
(bad)
mul
ins
cmps
lods
push
mov
mov
xchg
sti
stos
cmp
cli
aaa
call
in
adc
je
(bad)
mov
push
mov
cmp
mov
mov
mov
mov
out
add
int
pushf
loopne
sar
test
test
mov
push
xchg
(bad)
and
push
mov
cmp
imul
bound
pop
pop
jbe
ret
fist
out
into
sub
std
cs
std
sbb
adc
ror
in
dec
fisttp
test
pop
aam
in
inc
(bad)
and
jmp
xchg
jmp
pop
loope
sbb
movs
push
sbb
inc
test
mov
iret
jle
inc
dec
test
sub
and
iret
jns
lods
mov
in
xchg
rcl
xchg
cmp
aam
mov
sti
icebp
cmp
dec
call
push
iret
gs
xor
ret
or
or
(bad)
push
mov
push
pop
fidivr
fisubr
sbb
jle
and
dec
cmps
into
pop
das
out
popf
add
cmc
mov
std
mov
test
dec
jbe
fistp
xor
cdq
inc
cmp
dec
fucom
pop
ins
out
outs
push
bound
or
or
test
fldlg2
jge
and
out
fld
inc
xor
xor
ret
nop
inc
cdq
dec
lods
push
arpl
push
dec
pushf
pop
mov
sub
out
xor
push
cwde
pop
repz
or
lods
imul
in
loopne
dec
cmp
dec
ins
(bad)
lods
mov
mov
mov
xchg
ins
fucomip
and
mov
(bad)
mov
cmp
ret
adc
jnp
mov
or
call
fisubr
adc
sbb
outs
ret
push
sub
cmp
bswap
push
out
enter
outs
fdivr
jmp
std
push
retf
sub
les
mov
add
sbb
dec
fidivr
pop
push
jecxz
mov
int
add
jge
mov
call
sahf
mov
xchg
jle
(bad)
xor
jmp
out
dec
gs
adc
cmp
aas
stos
sbb
push
dec
pop
fstp
neg
lahf
outs
in
loope
dec
cmp
outs
sub
ror
xchg
out
in
pushf
mov
sub
icebp
(bad)
fist
xchg
jmp
cld
aas
mov
shr
xchg
pop
jno
iret
xchg
lods
(bad)
cmp
imul
ds
cmp
mov
stc
sahf
xor
retf
neg
sbb
push
xor
cli
ds
lock
dec
cmp
inc
sbb
mov
mov
mov
clc
pop
mov
ret
mov
aad
push
pop
fcmovbe
out
inc
sbb
add
mov
pop
test
pusha
call
cmps
mov
or
pop
dec
ins
jno
sbb
fisubr
lods
jmp
sub
stc
cld
sbb
mov
dec
cli
clc
imul
mov
mov
sbb
sti
out
cli
mov
sub
pop
mov
neg
cli
rcr
xor
int3
loope
fdiv
js
cmps
fwait
xor
in
call
int
mov
dec
in
in
and
add
dec
jo
adc
adc
lock
in
pop
pop
scas
mov
mov
xchg
cmp
mov
mov
or
in
sub
xchg
cmp
neg
jne
aas
add
(bad)
imul
mov
retf
out
sub
aad
jle
sbb
in
(bad)
(bad)
cmp
call
leave
or
fidivr
(bad)
jg
mov
retf
test
pop
dec
cmp
fisub
mov
test
dec
fdiv
popf
rcr
mov
xor
fiadd
inc
hlt
dec
fwait
sar
(bad)
frstor
add
pusha
mov
and
(bad)
repnz
mov
mov
outs
iret
fist
or
scas
xchg
test
or
dec
scas
outs
inc
mov
into
jl
xchg
int
mov
jbe
xchg
dec
pop
mov
ficomp
sub
sub
ret
jmp
mov
ret
xchg
test
mov
push
(bad)
xlat
test
aam
movs
sahf
fldenv
test
in
cli
test
mov
hlt
(bad)
movs
movs
mov
push
adc
mov
push
mov
in
in
mov
pop
inc
sahf
test
fcmove
mov
push
mov
mov
pop
inc
call
ret
mov
push
inc
dec
xchg
mov
xchg
test
int3
xchg
or
fadd
mov
adc
loop
scas
mov
int
in
stos
mov
cld
inc
jle
loop
lods
movs
pushf
nop
cdq
loop
movs
movs
or
xchg
mov
(bad)
std
inc
pop
adc
cwde
and
and
mov
jo
out
ret
fsub
mov
imul
aas
jmp
mov
fsub
ins
push
ins
in
push
sbb
mov
and
inc
xor
mov
call
cdq
or
sub
add
cli
ds
mov
dec
retf
pop
js
xchg
mov
je
pop
pop
cs
sbb
pop
adc
sbb
lea
sbb
in
int
xor
mov
push
jmp
xchg
ins
ins
sbb
cmp
test
int3
fiadd
call
and
shr
test
out
ins
cwde
fisubr
lock
sbb
popa
jmp
imul
push
mov
je
retf
loopne
je
mov
mov
xchg
xchg
cmps
dec
std
mov
cdq
mov
push
leave
imul
fdivp
and
xor
adc
in
or
adc
gs
out
adc
stos
and
iret
fild
or
mov
iret
dec
xlat
iret
mov
leave
jbe
out
sbb
sti
outs
cmp
out
mov
outs
out
cmp
sbb
mov
adc
sub
and
add
shr
sub
in
pop
out
mov
mov
shr
xchg
jp
fwait
cmp
das
sbb
int
add
repnz
or
push
add
fcomp
sub
and
sbb
fiadd
sbb
dec
out
sub
lds
test
sar
(bad)
call
push
stos
cmp
ficom
fcom
push
nop
jle
sub
test
or
leave
jl
clc
sbb
sub
adc
std
inc
ret
fcom
retf
iret
mov
aaa
jmp
ror
mov
aad
lods
popa
pop
push
or
cli
shr
loop
cli
das
sbb
call
inc
outs
pop
stos
or
adc
pop
pushf
imul
add
sub
pop
mov
mov
sbb
jg
mov
(bad)
jo
lea
sub
dec
mov
in
push
out
ins
and
cwde
dec
mov
or
inc
popf
push
mov
pop
pop
pop
out
sbb
push
std
mov
sbb
mov
clc
inc
dec
in
add
adc
arpl
fbld
adc
(bad)
js
xchg
cmp
inc
inc
(bad)
cmp
sub
in
pop
or
mov
in
js
cmp
xchg
jl
sbb
popf
(bad)
mov
cli
stos
ins
dec
daa
lods
retf
mov
xchg
sub
movntps
out
mov
int3
fcom
mov
movs
jp
xor
jp
ins
inc
(bad)
push
(bad)
lahf
cld
test
mov
stos
fisttp
sti
call
into
sbb
dec
rol
sbb
xchg
jnp
sbb
je
adc
jmp
jb
xlat
mov
dec
or
mov
pop
mov
iret
push
fsubr
push
sbb
pop
sub
push
(bad)
lods
xlat
stos
sub
sbb
mov
jmp
add
mov
jnp
jl
fild
dec
outs
xchg
push
imul
push
mov
ja
mov
movs
std
fistp
idiv
and
or
fcomp
jns
lahf
mov
popf
addr16
test
ja
mov
cmp
mov
jmp
inc
fnstsw
add
sbb
pop
push
pop
scas
sbb
bound
or
test
sti
jbe
fcomp
outs
cmp
push
mov
add
aas
jl
jb
jne
and
push
sahf
ins
pop
dec
adc
mov
sub
leave
popf
push
add
jns
add
loopne
sahf
arpl
ins
out
jae
xor
lahf
cwde
leave
or
aaa
adc
ins
push
push
sub
add
or
mov
pop
iret
push
or
into
leave
fcom
jmp
or
pusha
mov
pop
pop
call
(bad)
aad
outs
adc
das
pop
int3
xchg
(bad)
mov
fs
jmp
cmps
dec
cmps
int3
sub
or
leave
cmp
cdq
mov
mov
dec
mov
jge
mov
fdivr
das
pop
cmp
fs
push
loope
mov
push
(bad)
and
mov
scas
in
test
sub
int
push
bound
add
ret
(bad)
outs
jb
js
(bad)
ret
pop
les
push
in
das
fld1
clc
dec
loop
sti
cmp
or
mov
xchg
enter
mov
pop
mov
lea
jns
gs
xchg
push
sbb
in
scas
sbb
pop
pop
data16
shr
imul
push
test
xchg
or
and
mov
cs
outs
push
jmp
div
sahf
loop
mov
push
push
dec
(bad)
jmp
xchg
dec
or
loop
push
loope
retf
xchg
popf
inc
retf
fwait
xor
adc
aam
int3
int
xor
sbb
xor
cmp
mov
or
iret
test
stc
shr
pop
mov
dec
xor
inc
test
pop
and
push
push
ret
cwde
mov
nop
sub
aas
jmp
inc
push
inc
fadd
cmps
fucomi
nop
fcmovnu
mov
and
mov
and
in
cmc
enter
sub
xlat
and
xchg
ret
ret
jb
mov
jnp
pop
lods
jne
and
inc
shl
mov
sbb
(bad)
out
jmp
leave
adc
dec
call
dec
mov
xor
or
fild
jns
mov
icebp
sub
xchg
dec
jecxz
ja
xor
mov
stos
mov
rcl
fild
es
in
pop
sbb
ficomp
mov
cmp
jp
clc
push
jmp
imul
sahf
ds
jb
stos
push
mov
mov
push
jg
ret
pop
mov
addr16
xor
inc
enter
fdivr
jp
lds
cdq
and
cmp
add
sub
(bad)
fdivrp
call
mov
ret
mov
pop
cld
js
pop
lods
ficomp
jl
lahf
sbb
sub
cmp
(bad)
dec
pop
pop
sub
mov
fwait
jge
fsubr
dec
cmp
cmp
sub
dec
clc
mov
inc
scas
daa
into
pop
jge
pop
mov
or
icebp
mov
mov
jb
cmp
popf
jnp
(bad)
fdivr
(bad)
and
in
dec
scas
stos
dec
sti
arpl
ins
stc
pop
popf
mov
inc
std
xchg
push
fst
jge
lock
push
fmul
mov
jg
pop
mov
scas
inc
call
call
shr
in
int3
je
sbb
test
jp
movs
sub
sub
clc
jle
(bad)
fld
scas
jmp
(bad)
shl
clc
int3
jl
jbe
fcom
mul
push
pop
fwait
cmp
pop
jge
adc
dec
fisubr
push
pop
call
and
int3
outs
cwde
dec
call
push
jg
cmp
jg
dec
fistp
dec
into
ds
jg
imul
or
adc
xchg
jle
lock
dec
int3
call
pop
inc
cmp
(bad)
in
popa
sbb
out
lock
mov
int3
cli
fiadd
and
add
mov
sbb
in
jle
retf
inc
jns
mov
sbb
jmp
int3
sahf
jb
sahf
xor
pop
add
cmp
dec
mov
dec
xchg
adc
push
sbb
pop
frstor
xchg
fnstcw
cmp
pusha
popf
out
mov
mov
and
loop
ret
ja
cmps
add
mov
add
mov
pop
int
mov
mov
adc
js
xor
sbb
mov
scas
xchg
or
popf
fidiv
in
inc
cmp
lea
call
pop
call
cmp
dec
pop
or
dec
mov
sbb
pop
(bad)
aas
add
shl
push
jp
sbb
test
shl
shl
std
xlat
pop
cmp
add
sbb
call
mov
icebp
xor
adc
pop
mov
push
int3
sbb
popf
jbe
cmc
mov
sbb
fldz
adc
mov
iret
jmp
cmp
sahf
stos
stos
mul
cmps
mov
das
pop
fldcw
repz
pushf
dec
sbb
push
scas
fwait
ins
dec
lea
dec
cs
jl
add
call
mov
pop
mov
retf
lahf
retf
arpl
sbb
pop
bt
clc
mov
jns
push
(bad)
pop
mov
movs
xchg
mov
cmps
ins
mov
jg
adc
jo
pop
test
ret
jle
cdq
push
int3
cmp
mov
push
cmp
and
loopne
xor
imul
pop
or
mov
push
cmp
sub
outs
dec
jno
ins
jecxz
xor
rcr
ss
jo
imul
pop
stc
pop
pop
scas
add
or
into
add
retf
es
in
xchg
mov
nop
jno
xor
aas
dec
push
sbb
xchg
fnsave
fld
cmp
xchg
lods
ret
sbb
rcr
sub
jl
mov
sbb
loop
mov
xchg
das
mov
pop
cwde
dec
cmps
cmps
sbb
and
xor
sbb
movs
push
popf
repz
dec
xchg
dec
and
iret
dec
cmp
inc
pop
sbb
xor
adc
popf
nop
cmps
not
data16
out
and
xor
push
cmp
cld
dec
jl
or
ds
ins
mov
imul
mov
and
sub
loopne
add
inc
or
retf
lds
popf
or
inc
and
adc
cmps
stc
inc
enter
sbb
jecxz
imul
jb
loopne
idiv
idiv
jo
idiv
lea
imul
fcomi
cmp
xchg
mov
ffreep
pop
outs
pop
inc
(bad)
ds
nop
nop
xchg
jb
jl
pop
or
inc
mov
test
xchg
bound
pop
loop
jae
dec
mov
pop
sbb
cmp
jle
mov
adc
mov
sahf
lods
cmp
mov
test
sbb
pop
and
out
aaa
push
adc
and
push
and
xchg
jmp
jmp
hlt
mov
popf
cmp
xchg
call
push
popa
(bad)
lods
in
pop
push
iret
mov
sbb
cld
ins
lea
sbb
pop
stos
pop
ds
popa
leave
cmp
stc
gs
adc
push
pop
ret
mov
sub
jnp
(bad)
frndint
cmp
test
xor
fild
call
call
adc
cmp
pop
into
rcl
jle
ret
lea
dec
fldcw
jnp
sbb
fcmovne
cmp
cmc
cdq
in
push
sub
push
outs
call
mov
iret
std
sahf
adc
xor
add
into
in
bound
mov
push
in
jle
push
inc
retf
test
sbb
dec
cmp
push
cmps
dec
and
mov
ss
mov
fisub
cmp
(bad)
(bad)
xchg
sub
in
cld
dec
ret
(bad)
int
arpl
in
cmp
push
loop
mov
int3
xor
fsubr
dec
sub
fsubr
push
int3
(bad)
inc
jmp
adc
dec
cmp
sbb
dec
jmp
cs
add
mov
stc
(bad)
es
sub
pop
ins
dec
mov
fld
push
adc
jg
lods
xchg
sub
shr
nop
or
addr16
arpl
lea
cwde
js
or
sub
add
adc
cwde
or
dec
and
cld
mov
sub
fsubr
push
rol
sub
ds
jmp
ret
add
sbb
enter
pop
int
lea
sub
out
imul
pop
fwait
jmp
sub
push
ret
mov
test
repnz
call
sub
outs
aam
xor
pop
or
mov
sbb
call
dec
dec
fild
jg
or
mov
lods
popa
movs
pop
lea
push
adc
sub
jp
mov
jae
leave
aaa
stc
repnz
or
int3
or
loopne
in
gs
add
pop
or
add
cmp
jmp
cmc
sti
in
repnz
sub
test
pop
into
xchg
rol
pop
fincstp
fimul
jo
fdivr
push
cmp
jnp
cli
fidiv
pop
push
push
pop
jg
pop
cmp
sub
push
jmp
out
outs
sbb
dec
cmp
sti
nop
push
adc
sub
push
jle
cmc
aas
hlt
out
clc
add
lods
inc
push
cld
pop
inc
(bad)
lahf
sbb
cmp
add
add
dec
xchg
mov
ficomp
popa
jp
imul
xor
fisubr
or
lock
cmp
aaa
in
xchg
out
cli
(bad)
mov
pop
js
cmp
aaa
scas
xor
cmps
or
sbb
lock
xchg
push
ss
int3
fimul
and
pop
push
pop
sub
sub
sbb
jmp
cmp
mov
lahf
inc
ds
xor
push
fmulp
cmp
add
retf
jp
jnp
pusha
cmp
dec
cmp
nop
cli
scas
gs
psubb
push
idiv
bound
addr16
rcl
mov
ss
in
in
cmp
popf
test
mov
mov
out
jae
mov
addr16
pop
(bad)
sti
jo
inc
sub
dec
sub
cmps
fdivr
xchg
out
inc
xor
ss
imul
push
aad
arpl
retf
dec
stc
push
aas
jne
xor
test
pop
fdivr
test
mov
movs
push
stos
into
fidivr
outs
shl
xor
mov
cmp
dec
xor
js
jb
ds
cld
mov
fidivr
bound
mov
inc
sbb
mov
(bad)
test
js
pop
and
aas
clc
mov
and
fs
dec
inc
cli
and
sbb
pop
es
fwait
pop
jp
(bad)
ja
enter
into
xor
mov
(bad)
cli
dec
(bad)
xchg
inc
add
daa
fdiv
jl
(bad)
ja
fmulp
sahf
es
jnp
xor
test
jle
test
jle
jg
jae
ds
ds
dec
out
mov
jle
mov
enter
jle
outs
rcr
mov
and
sahf
movs
fst
addr16
cs
jno
call
scas
cs
xor
pop
leave
jle
mov
scas
inc
add
mov
sbb
mov
ins
mov
or
lods
ret
cmp
cdq
aad
or
idiv
test
cmp
mov
mov
jle
jle
call
sbb
jns
daa
(bad)
mov
sbb
loopne
xor
cmps
(bad)
adc
int
mov
addr16
jns
clc
ss
fsubp
or
sbb
cs
and
shr
popa
stc
mov
fdiv
out
mov
ss
jl
mov
loopne
pop
xor
adc
mov
int3
fwait
das
leave
pop
adc
sub
mov
out
or
mov
xchg
mov
rcr
sub
in
cdq
in
dec
imul
fs
or
int3
(bad)
sub
mov
pop
mov
push
ins
fstp
mov
jne
call
in
iret
dec
(bad)
pusha
mov
pop
je
dec
cwde
popf
enter
cmp
or
(bad)
pushf
cmp
push
mov
sahf
stos
mov
jl
xchg
push
xlat
ins
cmp
stc
lods
mov
push
ins
cmps
cmps
in
fcomp
pop
or
dec
mov
out
fdivr
push
movs
inc
cwde
dec
js
sbb
mov
cmp
sub
sub
fcomp
mov
add
or
stc
dec
cwde
cmp
pushf
mov
mov
inc
dec
xchg
pop
xchg
sbb
xor
ins
cwde
movs
push
jo
mov
out
out
pop
popf
or
inc
ja
outs
outs
and
inc
sahf
or
push
fsub
dec
xor
pop
sbb
dec
adc
pushf
dec
cld
sub
div
stos
dec
ins
addr16
les
sub
popf
xchg
ins
pop
sbb
and
hlt
and
sbb
sub
dec
adc
ds
cmp
sbb
mov
(bad)
(bad)
icebp
pop
push
fdiv
sub
(bad)
in
out
xlat
sbb
cdq
ja
lods
push
add
push
dec
call
mov
pusha
push
jnp
push
push
test
movs
sub
call
and
div
sbb
popf
dec
jo
test
fdivr
(bad)
arpl
pop
call
dec
jl
jo
or
test
lahf
mov
cmc
pop
or
push
push
scas
stos
pop
mov
lods
mul
pop
cs
setne
push
dec
lea
push
mov
dec
js
dec
call
scas
(bad)
pop
pop
push
test
adc
xchg
cs
sbb
js
std
xchg
push
movs
les
xchg
mov
call
pop
ins
scas
outs
out
push
pop
retf
lea
rol
jle
mov
pop
arpl
jp
out
sbb
stc
jae
dec
(bad)
and
cmp
fwait
push
js
je
push
movs
fimul
dec
pop
pop
test
mov
dec
outs
pop
dec
xchg
mov
jb
icebp
das
stos
js
call
jb
push
mov
adc
adc
push
(bad)
or
nop
ins
mov
data16
imul
mov
sbb
inc
enter
lock
mov
nop
movsx
repnz
mov
ror
inc
or
ret
inc
pop
mov
xor
rcl
mov
loopne
adc
xchg
push
inc
push
mov
inc
or
ss
inc
test
mov
imul
pop
dec
inc
sbb
dec
pusha
and
mov
push
add
mov
dec
mov
xchg
rcr
xchg
dec
inc
ins
xor
mov
mov
(bad)
loope
pop
pop
das
int
dec
sbb
ret
or
es
and
enter
gs
fidiv
jge
fild
jecxz
lods
jb
push
push
cmp
mov
push
mov
out
jl
sbb
out
pop
loop
dec
gs
and
pop
ja
xor
mov
or
pop
push
pop
adc
sub
xchg
ins
xor
push
inc
dec
push
jmp
jno
sbb
pop
inc
jg
sub
aas
sub
and
adc
xchg
mov
mov
push
in
in
lods
xchg
xchg
xchg
mov
pop
in
inc
popf
mov
aam
dec
outs
cmp
bound
and
(bad)
xor
int3
pop
dec
xor
in
jb
(bad)
fsubr
gs
aam
inc
inc
xor
inc
in
test
jae
imul
sbb
repnz
ins
jle
cmp
scas
ins
mov
in
mov
xchg
mov
psrld
sbb
mov
outs
cmp
cmp
xchg
jnp
xor
jmp
mov
mov
pop
dec
ins
in
mov
pop
xchg
imul
mov
test
fisubr
lods
xor
cmc
mov
fstp
jmp
mov
sbb
mov
push
imul
xor
add
repz
mov
idiv
jmp
jb
fwait
popa
in
sub
mov
je
or
ja
cmp
mov
int
call
jne
jmp
jno
xchg
cmp
sbb
pop
hlt
bound
dec
add
or
or
dec
sbb
in
pop
mov
mov
mov
mov
in
dec
fs
pop
fwait
xchg
or
xchg
jbe
inc
fidivr
iret
push
jmp
js
ficomp
or
pushf
sbb
push
cli
cs
sbb
aam
adc
push
(bad)
xlat
bndldx
lock
lea
mov
in
icebp
cmp
addr16
fisttp
push
repnz
dec
push
fwait
lods
xchg
frstor
sahf
sub
jb
ins
loope
fwait
retf
add
or
sbb
xchg
repz
adc
arpl
add
jmp
(bad)
loop
loop
or
pop
das
sbb
sar
mov
pop
push
mov
cmp
es
push
pop
test
std
cmp
xor
enter
popa
add
cmp
mov
int
aad
sub
retf
jge
std
and
enter
leave
pop
sub
or
gs
jecxz
pop
scas
xchg
cmp
cmp
cmc
push
or
leave
fxch
loop
cmp
and
jg
popa
xor
in
iret
and
in
push
(bad)
adc
jmp
xor
xor
xor
cld
cmps
cld
out
push
mov
ss
dec
std
in
stc
ret
pusha
fisubr
add
ror
clc
lods
clc
lock
ror
push
fnstsw
repnz
fadd
push
sbb
add
push
cmp
sub
pop
inc
loopne
loopne
test
mov
in
cmp
pop
and
mov
or
mov
or
or
call
leave
test
mov
mov
or
mov
das
cmp
jne
and
stos
pop
(bad)
pusha
sub
in
sub
and
stos
out
fs
jg
fadd
push
cmc
sub
inc
adc
sub
int3
jge
add
push
or
mov
in
(bad)
(bad)
(bad)
pop
and
mov
mov
push
add
sub
stc
fild
cmp
or
push
fcom
sub
mov
and
pop
cmp
push
xchg
mov
ret
pop
pop
mov
jmp
mov
cli
and
or
pusha
fld
call
das
push
adc
(bad)
(bad)
fsubrp
cs
das
or
adc
pop
xchg
or
add
cs
enter
cli
add
and
add
add
mov
pop
and
test
das
or
or
das
test
add
add
fisttp
xor
adc
mov
and
aas
jbe
push
jmp
lods
movs
mov
arpl
add
push
pop
in
jno
jecxz
cmp
loopne
mov
push
inc
aam
mov
add
sbb
xor
add
(bad)
pop
outs
jecxz
xchg
fcomp
call
adc
sub
ss
std
enter
xor
xor
fwait
loopne
and
or
fsubr
sbb
jecxz
push
cmp
jmpw
and
push
in
or
mov
es
and
jne
mov
(bad)
adc
fbstp
in
cmp
cmps
push
daa
or
arpl
js
mov
sbb
sub
jae
imul
test
or
push
mov
push
dec
or
in
jle
ja
mov
xchg
xchg
cmp
pop
and
sbb
jae
cmp
call
add
fmulp
mov
pop
loope
scas
fist
adc
mov
and
inc
(bad)
jae
inc
out
sbb
mov
push
jmp
add
sub
in
pop
lahf
xchg
repz
in
mov
inc
loope
dec
xchg
call
cmp
out
mov
call
and
push
cmp
dec
push
add
popa
or
jecxz
pop
mov
or
and
adc
add
sar
lahf
cs
clc
fisttp
jmp
imul
mov
fld
dec
mov
sub
mov
sub
lods
pop
pop
pop
cmp
jns
push
mov
mov
cmp
inc
mov
mov
dec
cmp
mov
or
jns
outs
sbb
int
test
push
jmp
stc
sbb
clc
mov
fwait
cs
xchg
add
dec
ins
cwde
dec
jg
mov
mov
pop
sahf
int
or
push
nop
dec
sti
dec
dec
sub
dec
aas
push
pop
outs
push
push
mov
call
pop
stc
and
fst
jp
mov
mov
gs
push
pop
out
leave
ss
jne
jle
lea
push
mov
fcomp
mov
or
cmp
sahf
sub
js
stos
in
inc
mov
(bad)
cmp
push
cld
push
call
push
int
sti
push
into
addr16
dec
fcomp
mov
push
ds
in
movs
mov
jle
stos
(bad)
sub
cmp
dec
mov
dec
add
mov
bound
mov
enter
dec
psrlw
jno
push
xchg
pop
in
mov
aaa
fidiv
sub
ja
int3
and
sahf
xor
or
data16
or
ins
or
js
mov
repnz
es
jnp
leave
mov
push
mov
lods
sub
cwde
jle
sbb
pop
mov
(bad)
fcomp
pop
nop
push
in
inc
adc
xor
lea
add
(bad)
not
adc
jns
or
xor
dec
or
sar
jmp
loopne
dec
jmp
adc
mov
mov
in
mul
sub
shl
(bad)
int
sub
inc
mov
dec
mov
nop
adc
mov
inc
aad
repz
and
jns
mov
outs
mov
dec
sub
jle
aas
imul
add
jns
mov
xor
cdq
cmp
mov
xchg
pushf
mov
xchg
dec
daa
push
jl
mov
push
call
inc
mov
mov
xor
mov
loop
lahf
mov
rcr
bound
xchg
pop
sub
jg
jl
bswap
enter
test
movs
lds
out
fsub
movs
cmp
ror
mov
lea
aas
inc
jno
cmc
fcom
mov
mov
dec
mov
(bad)
push
add
push
mov
stc
imul
or
xor
and
sub
fisttp
fsubr
jg
mov
mov
xor
inc
add
or
jnp
dec
cmc
or
push
and
aas
(bad)
bnd
repz
push
jg
popa
cmp
and
mov
sbb
mov
retf
clc
mov
dec
cmp
fld
or
ficom
cmc
pop
xchg
pop
push
pop
sub
enter
fcomp
mov
lss
les
cmps
jle
shl
dec
adc
fidivr
mov
cli
cmp
test
sti
sbb
cdq
pop
fdivr
std
or
push
jb
std
popf
mov
pop
lahf
popf
mov
out
jns
aam
daa
pop
pushf
clc
dec
and
add
mov
inc
jecxz
xchg
cmps
(bad)
xor
push
inc
imul
clc
pop
in
clc
and
mov
mov
test
mov
fidiv
mov
push
mov
ret
add
repz
je
scas
call
pushf
jmp
mov
sahf
inc
inc
call
and
popa
rol
or
pushf
mov
lods
test
scas
and
sbb
xchg
or
push
int
dec
adc
sar
cld
cmp
and
jl
xor
mov
adc
test
nop
pusha
retf
mov
xchg
add
and
ds
add
popf
(bad)
in
sub
je
pushf
aam
jmp
push
scas
jb
push
push
popa
mov
dec
dec
daa
dec
sub
push
shl
jo
sahf
out
rol
fisubr
mov
test
arpl
cmp
push
fs
pop
jno
mov
mov
rcl
push
call
mov
int
dec
(bad)
mov
jmp
xor
sbb
ds
rcl
pushf
sbb
sahf
sbb
mov
adc
sar
add
loop
popa
rcl
lods
popf
mov
or
sbb
lods
sub
cmc
(bad)
cmp
mov
lahf
fwait
icebp
pop
cwde
rcr
pop
cld
in
mov
outs
popf
daa
lds
repnz
mov
mov
shr
scas
mov
fbstp
into
scas
or
call
xchg
(bad)
mov
ds
sub
sahf
mov
mov
stos
sub
dec
pop
in
fwait
sbb
pop
cmp
outs
push
ficomp
and
aas
mov
jae
test
(bad)
push
inc
jmp
lods
cld
xchg
in
and
xchg
sti
ret
outs
push
mov
xchg
jnp
xor
std
xlat
dec
adc
jecxz
mov
and
cld
push
test
(bad)
pop
sub
arpl
mov
pop
fisub
mov
jge
pushf
and
push
jbe
jmp
in
sub
jns
xor
loopne
sbb
xor
xchg
test
out
pop
or
out
hlt
loop
inc
(bad)
jne
gs
and
and
(bad)
pop
or
or
loope
add
fld
mov
jb
mov
mov
sbb
or
jnp
mov
or
ror
mov
xor
pop
xchg
push
xchg
jns
push
pop
rcl
test
movs
call
mov
cdq
(bad)
int
push
sub
rol
addr16
retf
jns
add
lods
sbb
daa
clc
shl
inc
cmp
push
sbb
repz
cwde
ficom
jbe
sbb
sti
ds
xchg
inc
mov
jmp
jbe
dec
div
pushf
xchg
pop
cmc
xchg
jmp
push
sub
int3
loope
mov
out
fisub
jl
sbb
cmp
ss
bound
jmp
adc
pop
scas
ja
jmp
sbb
test
mov
jnp
xor
jne
mov
outs
(bad)
fldenv
fs
fld
dec
and
xor
aam
sbb
cmc
mov
in
mov
add
enter
jecxz
sahf
ins
adc
inc
retf
movs
out
imul
push
xchg
cmp
std
or
add
sbb
adc
lea
mov
stc
cmp
ins
icebp
popa
imul
cwde
dec
cld
loopne
mov
mov
inc
je
test
jle
dec
sar
pop
adc
pop
mov
dec
not
imul
aas
push
dec
test
into
sbb
stc
int3
mov
cld
neg
mov
(bad)
sub
add
fwait
mov
push
(bad)
pop
(bad)
push
xchg
data16
std
ss
cs
xchg
pop
mov
fucomi
jae
lock
mov
aam
adc
sub
in
rcr
mov
cld
sahf
and
xor
sub
dec
sidtd
bound
ins
test
cdq
loope
(bad)
adc
dec
out
popa
jb
movs
inc
push
(bad)
push
es
addr16
mov
push
xchg
cmp
inc
xor
(bad)
fwait
sbb
and
inc
cmp
je
mov
mov
cmp
adc
pop
popa
or
xor
cs
jl
js
add
or
fmul
ja
and
cld
in
icebp
movs
loope
dec
fwait
das
lds
push
ins
jno
jb
fwait
arpl
and
mov
mov
fstp
popf
call
pop
hlt
lahf
adc
adc
adc
inc
lahf
mov
mov
not
nop
mov
rcl
push
pusha
dec
fmul
inc
cmp
jae
or
inc
sub
loop
idiv
mov
cld
push
mov
push
and
and
sub
add
jb
xchg
mov
int3
pop
xchg
jno
dec
xor
xor
sbb
jns
(bad)
and
jle
inc
test
retf
into
retf
bound
and
pop
aam
imul
push
pop
cmp
ins
shl
pop
out
adc
(bad)
cld
jmp
pop
jl
loope
jge
or
cld
aas
or
and
inc
fwait
cmp
rcl
icebp
addr16
aas
lods
cmp
dec
xchg
cmp
out
xchg
ins
(bad)
cld
aas
inc
pop
or
jno
imul
jmp
cmp
ret
pop
push
or
cld
aas
jb
adc
lea
pop
std
aas
pushf
jp
inc
aaa
mov
or
aas
ja
popf
jno
dec
popf
mov
sbb
aas
push
aaa
pop
xlat
add
cmp
leave
push
jecxz
std
aas
call
push
xchg
mov
out
std
aas
xor
pushf
cmp
mov
repz
std
aas
ret
js
ficom
xor
dec
sbb
movs
xchg
mov
inc
es
aas
xchg
adc
and
aas
mov
cs
(bad)
aas
(bad)
int3
test
cmp
dec
(bad)
sti
push
jp
aas
loope
or
and
xchg
cmp
nop
movs
mov
xchg
sub
icebp
mov
dec
iret
(bad)
aas
mov
pushf
mov
sbb
(bad)
aas
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
cmp
inc
outs
pop
jbe
(bad)
aas
mov
cdq
cmp
mov
(bad)
aas
or
popf
mov
shl
repz
dec
xchg
jno
sub
sar
aas
out
gs
je
bound
add
add
add
inc
add
add
add
cmp
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
aas
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
addr16
jg
push
aas
mov
imul
mov
aas
mov
cmp
mov
cli
inc
out
add
add
(bad)
(bad)
(bad)
inc
add
inc
inc
adc
add
add
lock
add
add
add
jg
add
add
add
inc
add
add
add
add
add
add
loopne
add
add
add
loopne
add
add
add
adc
add
add
add
clc
inc
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
clc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
(bad)
jg
cmp
inc
out
xor
xchg
push
repz
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
lds
aas
adc
and
(bad)
dec
mov
lds
mov
push
push
aad
push
jp
cwde
cdq
cdq
leave
aas
sbb
add
add
loopne
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
add
lods
jmp
add
add
add
aas
add
add
add
aas
add
add
add
jmp
repnz
cwde
jmp
cwde
jmp
inc
jmp
inc
jmp
in
jmp
add
in
jmp
add
call
add
add
add
aas
add
add
add
aas
add
add
add
call
add
cli
call
add
lods
call
add
lods
call
add
(bad)
call
add
(bad)
call
add
sbb
aas
add
add
add
call
add
shl
aas
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
jecxz
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
add
add
add
test
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
cmp
test
(bad)
aas
adc
mov
leave
fidivr
add
fwait
jp
aas
xlat
out
daa
fldcw
and
add
ret
cmps
aas
shl
test
pop
cmp
xor
aas
inc
inc
mov
cmp
pop
inc
mov
rcl
rol
inc
cmp
mov
mov
inc
push
push
cmp
cmp
ins
xchg
mov
dec
jns
ds
pop
and
(bad)
aas
inc
cmp
cmp
sahf
xlat
sar
dec
js
and
or
cdq
ret
or
jns
dec
cmp
jb
dec
les
mov
sub
idiv
jbe
add
aas
in
(bad)
xlat
push
xor
or
out
and
add
mov
(bad)
xor
aas
cmp
mov
retf
sub
jmp
aaa
cmp
test
ds
xchg
into
aas
sbb
xchg
and
cmp
fdiv
and
iret
pop
aaa
cmp
add
sar
inc
or
out
xor
cmp
sbb
sar
mov
or
sbb
cmp
sub
test
cmp
loop
sar
ret
adc
and
add
push
sbb
sar
add
add
ret
aam
(bad)
int
or
cmp
sbb
pushf
or
cmp
sbb
pop
cli
mov
clc
dec
and
test
aas
sbb
mov
das
jb
cmp
sbb
aas
shl
(bad)
xor
mov
xlat
aas
mov
inc
addr16
scas
aas
cmp
rcr
push
pop
data16
cmp
add
fnstcw
inc
imul
push
fnstcw
pop
inc
repnz
add
fidivr
adc
adc
xchg
inc
fstp
(bad)
mov
xor
cmp
add
daa
sahf
int
fstp
push
fwait
xchg
outs
mov
cmp
mov
fdivr
ret
call
add
push
fnstsw
(bad)
cmove
sub
cmp
stos
aam
aas
std
sbb
sub
add
fidivr
mov
mov
cs
movups
aas
fdiv
aaa
popf
ja
sub
add
fistp
ins
(bad)
push
adc
ror
movs
and
dec
ins
sub
cmp
push
jb
aas
mov
loop
cmp
push
mov
rcr
dec
cs
jmp
loope
out
sub
adc
xor
aas
ret
shl
cmp
mov
loope
push
sub
add
outs
addr16
loope
stos
cmp
add
aas
jnp
dec
outs
push
cld
adc
sahf
ja
aas
jns
xor
cmp
sub
shl
mov
cmp
or
xor
pop
jecxz
xor
bound
fwait
xor
or
xor
cld
xchg
inc
sbb
fld
jecxz
mov
mov
fist
sbb
fsub
aas
ds
test
int
sub
iret
sbb
aas
test
push
mov
add
inc
iret
pop
arpl
aas
lods
retf
aad
sub
add
(bad)
call
test
xchg
test
ins
js
shr
in
and
xor
shl
es
sub
aas
leave
mov
push
add
sbb
xchg
ins
in
sahf
outs
shr
add
pop
push
stos
in
cli
arpl
jp
aad
add
and
sub
aas
mov
add
cmp
inc
cs
xor
xchg
push
repz
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
rcr
add
add
add
fstp
adc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
cmp
(bad)
jg
add
cmp
(bad)
jg
js
push
adc
pop
mov
pop
xor
pop
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
into
xchg
(bad)
adc
xor
or
xor
rcl
xchg
fadd
push
aas
neg
push
inc
xor
jp
mov
ins
jp
aas
add
in
test
jl
sbb
push
sub
add
fidiv
add
imul
add
xchg
aas
sbb
cld
cmp
ficomp
sahf
rcr
xor
neg
lods
mov
or
sbb
idiv
mov
icebp
bound
or
push
pop
cmps
aas
fist
sbb
mov
xchg
ror
push
shl
cmp
xor
lods
aas
pop
inc
fprem
fstp
cmp
adc
mov
jbe
scas
sub
pusha
icebp
in
pop
pushf
mov
aam
push
push
aas
loopne
cmp
sbb
mov
loop
cmp
daa
xchg
mov
rep
(bad)
int
les
cmp
jae
mov
lahf
jge
and
ret
pop
cmp
ja
mov
jp
mov
cmp
or
mov
int3
in
cmp
mov
mov
xor
icebp
ss
mov
mov
and
push
sub
es
sub
jmp
add
mov
repz
and
mov
lea
mov
add
cmp
fwait
ins
sar
cli
loope
lea
fisubr
lock
mov
cmp
aas
mov
xchg
icebp
sbb
add
(bad)
push
ret
ja
inc
or
sbb
test
or
add
pshufw
aas
jmp
mov
je
les
xor
mov
cmp
and
les
push
push
cs
jne
lds
sub
fbstp
cmp
sbb
lds
adc
sub
add
nop
push
mov
cdq
xchg
cld
sub
in
cmp
add
ins
pop
and
aas
int
inc
bound
push
sbb
xchg
mov
aas
lds
xchg
push
add
enter
xchg
add
push
or
int3
enter
iret
mov
add
out
fistp
aas
in
(bad)
jp
and
pop
jmp
repnz
push
xor
mov
sub
add
push
lds
stos
fs
imul
stc
jl
mov
aas
jb
js
and
xor
jecxz
int3
aas
jl
push
int
retf
xor
popf
xchg
int3
aas
jb
out
inc
mov
cmp
sti
adc
aas
or
sbb
pop
lahf
int
jae
xlat
mov
add
push
cmp
xchg
repnz
into
aas
xchg
adc
pop
pop
iret
aas
add
pop
cmp
sbb
idiv
and
pop
or
aas
jg
push
and
pop
cmp
or
(bad)
adc
cmp
xor
mov
cmp
jno
sar
xor
xor
add
sar
sbb
cmp
das
inc
sar
mov
xor
xchg
jp
aas
cdq
pop
sub
cmp
jp
sar
jle
jmp
iret
cmp
adc
fisttp
or
cs
daa
cmp
push
sar
stc
pop
movs
sub
jle
cmp
bound
aas
adc
or
sbb
inc
shl
aas
jns
sahf
lods
imul
or
aad
aas
mov
jmp
mov
sar
xor
mov
cdq
xchg
cmp
adc
pop
mov
pop
xor
pop
cmp
add
fstp
add
add
add
fstp
add
add
add
aas
add
add
add
aas
add
add
lock
add
lock
add
loopne
fidivr
add
add
loopne
fidivr
add
add
rcr
aas
add
add
rcr
aas
add
add
mov
add
add
add
add
add
add
add
add
fnstcw
add
add
push
add
aas
add
add
and
add
and
add
loopne
fdivr
add
add
loopne
fdivr
add
add
sub
xlat
aas
add
add
sub
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
ror
xlat
aas
add
add
ror
xlat
aas
add
add
add
aas
add
add
add
aas
add
add
test
(bad)
aas
add
add
test
(bad)
aas
add
add
shl
(bad)
aas
add
add
shl
(bad)
aas
add
add
jo
aad
add
add
jo
aad
add
add
adc
add
adc
add
sub
aas
add
add
sub
aas
add
add
inc
and
aas
add
add
inc
and
aas
add
add
shl
aam
add
add
shl
aam
add
add
pusha
cmps
aam
add
add
pusha
cmps
aam
add
add
push
add
add
aam
add
add
clc
sub
aas
add
add
clc
sub
aas
add
add
js
sar
add
add
js
sar
add
add
cmp
add
add
add
adc
add
add
add
add
clc
dec
sar
add
add
clc
dec
sar
add
add
js
sar
add
add
js
sar
add
add
jo
sar
add
add
jo
sar
add
add
loopne
sar
add
add
loopne
sar
add
add
fdivr
aas
add
add
fdivr
aas
add
add
dec
dec
sar
add
add
dec
dec
sar
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
sar
add
add
jo
sar
add
add
pop
imul
add
sar
add
add
mov
add
add
add
add
add
add
add
add
jmp
add
add
sar
add
add
fadd
sar
add
add
fadd
sar
add
add
cmp
add
cmp
add
adc
aas
add
add
adc
aas
add
add
jo
sar
add
add
jo
sar
add
add
shl
aas
add
add
shl
aas
add
add
cwde
add
aas
add
add
cwde
add
aas
add
add
loopne
iret
aas
add
add
loopne
iret
aas
add
add
sub
add
add
sub
add
add
and
iret
aas
add
add
and
iret
aas
add
add
shl
aas
add
add
shl
aas
add
add
pusha
lahf
into
aas
add
add
pusha
lahf
into
aas
add
add
add
aas
add
add
add
aas
add
add
nop
sbb
aas
add
add
nop
sbb
aas
add
add
xor
int
add
add
xor
int
add
add
rcl
add
xchg
int
add
add
push
pop
int
add
add
push
pop
int
add
add
loopne
int
add
add
loopne
int
add
add
pusha
jecxz
aas
add
add
pusha
jecxz
aas
add
add
lock
int3
aas
add
add
lock
int3
aas
add
add
jo
int3
aas
add
add
jo
int3
aas
add
add
add
int3
aas
add
add
add
int3
aas
add
add
xor
aas
add
add
xor
aas
add
add
add
retf
aas
add
add
add
retf
aas
add
add
add
add
add
add
add
lock
add
add
add
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
add
inc
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
sub
inc
adc
sub
adc
cli
inc
xchg
add
cli
inc
xchg
cmp
sahf
mov
cmp
sahf
mov
in
shl
pop
movs
push
push
push
lds
sub
es
push
movs
aas
jnp
(bad)
(bad)
(bad)
(bad)
fistp
dec
jne
push
mov
xor
sub
add
mul
push
ror
mov
add
popa
enter
mul
enter
inc
xchg
add
pop
cmps
call
pop
mov
add
pushf
das
jo
mov
shl
in
jecxz
add
mov
mov
rol
adc
add
lock
lds
call
bound
test
cmp
jb
add
mov
jmp
mov
cmp
imul
call
aam
add
outs
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
add
repnz
cwde
sub
cmp
jl
gs
imul
xor
cmp
pop
cmc
popf
sahf
add
mov
or
xor
cmp
add
cmps
test
add
mov
mov
jne
cmp
add
dec
clc
rcr
fisttp
mov
cmp
add
jge
int3
mov
mov
aaa
cmps
jno
add
shl
xor
cmps
add
ins
dec
sub
and
dec
cmps
fiadd
add
mov
mul
or
add
adc
cmp
mov
or
add
mov
cmp
cmp
mov
xchg
mov
jp
into
nop
jbe
daa
sub
aad
mov
sub
cmps
sub
jbe
stc
add
pop
out
shl
popf
push
sub
sbb
daa
mov
inc
outs
add
loop
arpl
fld
stos
add
sub
xor
outs
out
add
mov
cdq
test
mov
mov
and
add
fdiv
xchg
cdq
cmp
and
cmp
add
mov
cmp
cmp
sahf
mov
into
xchg
sbb
mov
push
add
and
call
cmps
cmps
pop
mov
popa
mov
push
jmp
pop
add
inc
mov
jae
mov
(bad)
stos
loope
gs
dec
iret
ss
add
addr16
mov
adc
dec
cdq
mov
enter
xchg
cmp
xchg
inc
fldcw
add
lea
mov
or
inc
pop
repz
xor
cmp
ja
cdq
scas
icebp
or
cmp
push
pushf
mov
(bad)
aaa
aaa
or
stos
(bad)
stc
and
call
ficomp
daa
into
xchg
sub
scas
jno
nop
lock
add
ins
fwait
cmp
in
jnp
or
add
daa
xchg
cmp
and
or
mov
jae
test
cmp
std
jns
imul
xchg
ja
mov
call
sub
cmp
adc
or
scas
add
mov
bnd
or
int
pop
or
push
ror
int3
or
mov
scas
xor
push
test
fwait
sbb
lods
pop
or
(bad)
loopne
cmp
rcl
icebp
addr16
push
imul
nop
out
fsub
mov
add
jo
cmp
mov
dec
sub
pop
cmp
cmp
movs
sti
fcomp
pop
or
aad
pop
mov
test
dec
sbb
mov
jnp
xchg
cld
or
pusha
add
je
idiv
mov
cs
push
add
dec
or
fst
push
add
and
cmp
pop
popa
out
sbb
push
add
test
xor
inc
outs
pop
jbe
ltr
mov
fcom
sldt
add
add
add
aas
add
add
add
adc
out
cmp
inc
xchg
add
mov
add
add
add
lock
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
add
add
cmp
add
cmp
fs
add
fs
add
outs
gs
popa
data16
jb
add
outs
bound
add
pop
jns
add
xor
pop
jns
add
jns
outs
je
add
popa
bound
add
popaw
bound
add
add
arpl
add
add
cs
add
add
bound
add
add
arpl
add
add
cs
add
popf
ja
and
add
add
add
mov
mov
cmc
scas
aas
sub
ss
out
addr16
cmp
add
mov
add
add
out
mov
push
xchg
pusha
je
pop
add
add
add
add
mov
cwde
mov
enter
popa
add
add
add
aas
add
add
out
(bad)
ret
aas
xchg
clc
cmp
add
les
add
add
mov
xor
fdiv
add
add
add
enter
add
nop
retf
aas
and
and
add
add
add
add
aas
add
add
jne
iret
aas
(bad)
fld
(bad)
or
add
add
add
aas
add
add
inc
retf
mov
add
add
add
sar
add
add
(bad)
imul
add
add
add
aas
add
add
jo
mov
aam
adc
add
add
aas
add
add
not
aas
inc
adc
push
add
add
add
fdivr
add
add
dec
mov
aas
jmp
mov
add
add
fidivr
add
add
out
fidivr
jge
mov
pop
popa
cs
add
add
fdivr
add
add
mov
fdivr
fs
clc
sahf
in
adc
add
add
add
fidivr
add
add
lods
fnstsw
leave
fisttp
add
add
add
loopne
add
add
fld
aas
shl
mov
add
add
add
loope
add
add
sub
sbb
add
add
add
loop
add
add
inc
or
add
add
add
jecxz
add
add
sbb
idiv
add
add
add
in
add
add
xchg
loop
mov
in
or
add
add
add
in
add
add
inc
jecxz
pushf
or
add
add
add
out
add
add
shl
mov
(bad)
adc
add
add
add
out
add
add
test
and
div
add
add
add
call
js
cmp
aas
imul
add
add
add
jmp
test
adc
rcr
cmp
add
add
add
jmp
ins
out
add
and
add
add
add
jmp
add
add
cmps
add
aas
pop
xchg
out
arpl
add
add
aas
add
add
test
in
shl
add
add
aas
add
add
mov
push
lods
cmp
add
add
add
out
aas
add
add
cmc
lahf
call
mov
add
add
add
out
aas
add
add
jmp
adc
add
add
add
add
lock
add
add
cmp
mov
fcomp
add
add
add
add
and
pop
cmp
sub
add
add
add
icebp
aas
add
add
mov
mov
add
add
add
add
dec
add
aas
xchg
jb
in
daa
or
add
add
add
repnz
add
add
mov
cmp
sbb
add
add
add
add
jo
jmp
cmp
and
add
add
add
repz
add
add
popa
push
call
add
add
xor
add
add
in
aas
daa
pop
sbb
jl
cmp
add
add
add
hlt
aas
add
add
push
in
aas
into
jge
fs
and
add
add
add
add
push
outs
in
aas
xlat
mov
dec
push
js
add
add
add
cmc
aas
add
add
retf
xor
sub
add
add
add
add
out
aas
or
das
mov
add
add
add
aas
add
add
jl
aas
xchg
cmc
js
jl
xor
add
add
add
add
out
aas
sbb
fstp
cmp
adc
add
add
add
idiv
add
add
and
aas
mov
lea
add
add
xor
add
add
or
aas
mov
fnstenv
add
add
clc
aas
add
add
shr
gs
cs
add
add
add
push
lock
mov
cmps
inc
add
add
add
stc
aas
add
add
sub
aas
jbe
pop
mov
add
add
add
add
dec
lock
push
inc
pop
mov
add
add
add
cli
aas
add
add
adc
aas
daa
pop
loope
ror
add
add
add
add
lock
fwait
lahf
es
sahf
ret
add
add
add
sti
aas
add
add
lock
mov
dec
jb
push
inc
add
add
add
add
shl
aas
frstor
das
movs
daa
call
add
add
cld
aas
add
add
movs
repnz
pop
pop
int
add
aas
add
add
add
add
jmp
icebp
aas
or
aam
jge
pop
add
add
add
std
aas
add
add
gs
aas
out
dec
sbb
inc
add
add
add
add
sbb
rcr
push
into
nop
aas
add
add
add
(bad)
aas
add
add
addr16
aas
xchg
mov
sub
add
add
cmp
add
add
xor
sbb
xchg
dec
add
add
add
(bad)
aas
add
add
cmc
pushf
icebp
aas
xor
dec
add
add
add
add
int
arpl
repnz
inc
add
add
add
add
add
sub
shl
aas
fst
js
out
add
add
add
inc
add
add
call
adc
add
add
add
add
add
sar
add
add
add
add
add
lock
repnz
lds
xchg
mov
(bad)
dec
add
add
add
add
add
and
das
repnz
push
inc
dec
test
add
add
add
inc
add
add
mov
repnz
mov
add
add
add
add
xchg
pop
repnz
mov
adc
sar
add
add
add
add
add
push
out
jo
aas
xchg
push
dec
mov
add
add
add
inc
add
add
test
aas
inc
ss
xor
add
add
inc
add
add
xor
and
add
add
add
and
repnz
jae
add
add
add
add
add
add
inc
mov
retf
or
fsub
add
add
add
add
add
sub
fdivr
scas
rol
add
add
add
inc
add
add
push
out
aas
ffreep
sub
add
add
add
add
mov
push
dec
add
add
add
add
add
js
or
aas
sub
mov
add
add
add
add
add
add
in
repz
xor
jmp
add
add
add
inc
add
add
(bad)
sub
sub
ret
add
add
add
add
ds
mov
cmc
stos
xor
add
add
add
add
add
add
fwait
xlat
or
dec
add
add
add
add
shr
pop
aam
or
add
add
add
inc
add
add
out
repz
in
sti
cmps
sbb
add
add
add
add
cwde
cmp
cmp
add
add
add
add
ins
push
repz
push
loop
pop
push
sub
add
add
add
push
inc
add
add
repz
mov
cmp
add
add
add
inc
add
add
retf
and
cmovb
add
add
add
add
repz
test
jmp
add
rol
add
add
(bad)
repz
fwait
sbb
es
add
add
pop
inc
add
add
xchg
aam
aas
push
clc
inc
add
add
add
inc
add
add
(bad)
jo
ins
add
add
add
add
add
outs
adc
add
add
add
pop
inc
add
add
cld
repz
pop
mov
dec
add
add
add
or
add
(bad)
lds
hlt
aas
sub
lds
add
add
add
inc
add
add
adc
ins
sar
add
add
add
add
jne
in
inc
jecxz
add
add
add
or
add
inc
jo
hlt
aas
mov
push
adc
stc
xor
add
add
add
or
add
movs
cmp
hlt
aas
mov
mov
add
add
add
inc
add
add
inc
hlt
aas
div
aaa
add
add
add
add
push
hlt
aas
or
inc
retf
add
add
add
or
add
adc
cmp
dec
add
add
add
or
add
ror
hlt
aas
sbb
cmp
add
add
add
inc
add
add
ret
xchg
sbb
add
add
add
add
jnp
aas
xor
mov
xor
add
add
add
or
add
dec
sbb
test
add
add
add
or
add
mov
hlt
aas
(bad)
shl
inc
add
add
add
inc
add
add
imul
xchg
shl
add
add
add
add
movs
hlt
aas
js
xor
fwait
jne
add
add
add
or
add
cld
adc
dec
sub
bound
add
add
add
or
add
add
movs
mov
aas
sbb
es
int
inc
add
add
add
inc
add
add
cdq
sar
jecxz
dec
add
add
add
add
pop
retf
dec
outs
mov
add
add
add
or
add
add
js
hlt
aas
sub
cdq
cmp
add
add
add
or
mov
ss
dec
inc
sbb
cmp
add
add
add
inc
add
add
dec
in
aas
mov
dec
add
add
add
add
hlt
aas
adc
adc
add
ror
(bad)
div
aas
ds
es
add
add
add
push
inc
add
add
or
add
add
add
inc
add
add
dec
pop
cmc
aas
adc
push
push
or
add
add
add
add
pmaddwd
mov
movs
dec
add
add
add
push
inc
add
add
test
cmc
aas
xchg
mov
add
add
add
cmovo
add
pushf
jae
cmc
aas
add
xchg
dec
sti
push
dec
add
add
add
inc
add
add
inc
daa
cmc
aas
into
scas
mov
add
add
add
add
imul
cmc
aas
cmp
and
add
add
ror
add
add
movs
leave
iret
jmp
add
add
adc
add
or
ds
aas
xor
xchg
dec
arpl
add
add
add
adc
add
shl
aas
adc
xchg
add
add
add
inc
add
add
cmc
aas
add
dec
add
add
add
inc
add
add
push
cmc
aas
test
or
add
add
add
add
fcomp
aas
or
and
add
add
mov
add
sbb
aaa
add
add
add
adc
add
sub
cmp
add
add
add
adc
add
xor
cmc
aas
xchg
dec
adc
xor
add
add
add
inc
add
add
jbe
aas
push
mov
cs
and
add
add
add
adc
add
in
jl
aas
call
add
add
add
inc
add
add
in
and
mov
add
add
pusha
adc
add
xchg
nop
mov
aas
outs
sbb
add
add
add
add
neg
sub
add
add
add
add
sbb
mov
add
add
add
adc
add
add
pushf
cmc
aas
push
push
stos
js
jg
add
add
add
adc
add
push
push
mov
mov
mov
add
add
add
adc
add
xor
test
aas
push
(bad)
pop
and
mov
add
add
adc
add
adc
cmc
aas
lods
in
cmp
mov
add
add
add
inc
add
add
cmc
aas
jno
mov
or
add
add
add
inc
add
add
mov
and
xlat
shl
add
add
adc
add
add
cmc
aas
or
mov
add
add
add
add
adc
cmc
aas
or
shr
pop
cmp
add
add
add
adc
add
inc
pushf
retf
scas
mov
cli
cmp
add
adc
add
les
shl
aas
xchg
or
(bad)
cmp
add
adc
add
mov
stos
cld
xchg
(bad)
test
add
add
adc
add
test
(bad)
aas
mov
cs
xor
add
add
add
inc
add
add
loopne
aas
loop
jne
jl
cmp
add
add
add
inc
add
add
inc
sbb
cmp
add
add
add
add
push
lods
xor
std
mov
add
add
add
jnp
cmc
aas
sub
outs
inc
add
add
add
adc
add
and
hlt
cmc
aas
js
xchg
clc
adc
add
add
add
adc
add
adc
stc
cmc
aas
retf
aad
ins
test
add
add
add
adc
add
add
push
(bad)
cmc
aas
xchg
lock
cmp
add
add
adc
add
add
sub
scas
ficomp
cmp
add
inc
adc
add
add
cmc
pop
idiv
add
cmp
add
add
inc
add
add
lods
or
aas
sbb
push
and
add
add
add
add
mov
inc
ds
add
add
add
cmc
and
pusha
(bad)
dec
add
add
add
adc
add
add
test
idiv
cdq
jge
adc
xor
add
add
add
adc
add
add
push
pop
idiv
scas
xor
add
add
add
adc
je
and
aas
jmp
inc
add
add
add
adc
xor
daa
idiv
mov
and
and
add
add
add
inc
add
add
sub
aas
xchg
in
fiadd
add
add
add
inc
add
add
mov
cmovne
add
add
add
add
into
xor
aas
out
popa
repz
add
add
mov
add
add
idiv
stc
lea
mov
inc
add
add
add
adc
in
cmp
dec
inc
push
cmp
add
adc
inc
dec
inc
idiv
int
add
neg
add
add
push
inc
add
add
pusha
inc
idiv
popa
jo
dec
xor
add
add
push
inc
add
add
movs
cdq
cmp
add
add
add
inc
add
add
arpl
aas
movs
repnz
add
add
add
inc
add
add
push
idiv
dec
jns
ficomp
add
add
adc
add
add
cmp
aas
jbe
addr16
das
add
add
add
add
push
fimul
add
add
rcl
add
add
jmp
out
jecxz
jns
add
add
add
push
inc
add
add
pusha
idiv
inc
and
sbb
add
add
add
pop
inc
add
add
sti
out
movs
sahf
dec
add
add
add
pop
inc
add
add
and
aas
shl
shl
dec
add
add
add
inc
add
add
leave
imul
imul
sbb
jge
add
add
add
inc
add
add
mov
mov
add
add
add
add
cwde
fwait
clc
add
dec
add
add
add
add
mov
aas
sub
dec
add
add
add
pop
inc
add
add
jp
aas
jmp
icebp
inc
daa
cmp
add
add
pop
inc
add
add
jge
aas
pop
or
in
in
add
add
add
sbb
add
mov
xor
xor
dec
add
add
add
sbb
add
fsub
idiv
push
loop
adc
add
add
add
inc
add
add
idiv
push
dec
push
or
add
add
pusha
sbb
add
js
mov
aas
(bad)
push
xor
jmp
add
add
add
mov
aas
in
sub
add
add
add
add
idiv
jno
enter
dec
add
add
add
sbb
add
dec
jmp
idiv
enter
cmp
add
add
add
sbb
add
cmp
cwde
idiv
(bad)
mov
add
add
add
inc
add
add
fwait
idiv
retf
and
mov
add
add
add
sbb
add
inc
jne
idiv
out
xchg
repnz
add
add
inc
add
add
xchg
mov
add
add
add
inc
add
add
movs
idiv
pop
mov
add
add
add
add
test
xor
jge
add
add
add
add
stos
idiv
xchg
or
cmp
add
add
add
sbb
add
mov
lods
idiv
ins
or
push
pop
add
add
add
add
sbb
add
call
cli
test
shl
pusha
or
add
add
add
sbb
add
add
fs
idiv
add
add
add
sbb
add
adc
mov
aas
loope
push
jbe
inc
inc
add
add
add
inc
add
add
mov
enter
dec
add
add
add
inc
add
add
jge
adc
mov
add
add
add
mov
jbe
sti
loop
add
add
add
add
ret
int3
scas
sub
add
add
add
sbb
add
mov
(bad)
idiv
xchg
sti
call
xor
add
add
add
sbb
add
jl
(bad)
idiv
pop
jae
stos
mov
inc
add
add
add
sbb
add
adc
idiv
stos
fs
xchg
push
sbb
add
add
add
sbb
add
push
dec
idiv
mov
dec
dec
add
add
add
inc
add
add
iret
idiv
imul
(bad)
xor
add
add
add
inc
add
add
shl
aas
mov
retf
add
add
add
add
aam
aas
push
mov
mov
add
add
add
add
fwait
xlat
idiv
(bad)
(bad)
jmp
add
add
add
sbb
add
cmp
(bad)
aas
mov
mov
add
add
sbb
add
js
fdiv
aas
aaa
outs
lods
in
stos
dec
add
add
add
sbb
add
add
push
fcomip
aas
cmps
dec
arpl
pop
test
add
add
add
sbb
add
add
fsub
idiv
sti
jp
xchg
inc
add
add
inc
sbb
add
add
in
aas
and
icebp
inc
arpl
add
add
add
inc
add
add
aad
idiv
xlat
push
fisub
call
add
add
dec
jmp
hlt
add
add
add
add
add
xlat
ins
and
hlt
cmp
add
sbb
add
add
sbb
and
add
add
add
sbb
add
add
lock
pop
dec
add
add
add
sbb
cmp
repnz
add
sahf
dec
cli
test
add
add
add
sbb
dec
dec
cmc
idiv
call
add
add
add
inc
add
add
idiv
mov
sub
add
add
add
inc
add
add
idiv
cmp
idiv
std
xor
add
add
add
add
pop
jnp
jg
inc
add
add
add
add
mov
idiv
cli
inc
pop
retf
xchg
jg
add
add
add
sbb
inc
into
add
aas
push
xchg
nop
xor
add
add
add
sbb
clc
or
idiv
ja
xor
sbb
xor
add
add
add
push
inc
add
add
inc
add
dec
call
add
add
push
inc
add
add
pop
idiv
dec
pop
lods
das
add
add
add
inc
add
add
adc
add
add
add
inc
add
add
mov
pusha
xchg
add
add
add
add
idiv
call
add
add
add
add
and
idiv
ins
add
add
add
add
push
inc
add
add
inc
adc
aas
jle
sub
mov
add
add
add
push
inc
add
add
push
dec
rcl
add
add
add
pop
inc
add
add
jnp
mov
inc
add
add
add
pop
inc
add
add
idiv
jecxz
xor
ror
and
add
add
add
inc
add
add
test
xor
dec
or
add
add
add
inc
add
add
pop
inc
ficom
add
add
add
add
(bad)
addr16
shr
add
add
add
add
xor
sub
add
add
add
pop
inc
add
add
push
pusha
inc
xor
add
add
add
pop
inc
add
add
cmp
retf
inc
add
add
add
and
sub
stc
aas
pop
pop
adc
cmps
xchg
cmp
jns
je
ins
push
outs
outs
je
add
and
mov
mov
add
mov
repnz
retf
rcl
mov
add
dec
mov
les
or
scas
int
adc
leave
loop
popa
stc
push
mov
xor
adc
xlat
add
xor
rcl
mov
add
dec
fld
sbb
add
add
add
sbb
add
jmp
add
push
push
inc
push
cmp
repnz
mov
inc
div
mov
add
add
cmp
imul
outs
jb
sub
xor
outs
jae
popa
ins
ins
gs
ja
outs
outs
ja
pop
bound
ins
fs
jb
ins
gs
jae
pop
popa
jo
jae
bound
je
je
popa
jo
gs
jo
bound
add
icebp
dec
add
add
add
add
add
dec
add
add
add
add
icebp
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
mov
dec
add
(bad)
(bad)
inc
add
add
add
cwde
mov
add
add
add
add
add
test
dec
add
add
icebp
dec
add
mov
add
add
add
add
add
aam
dec
add
mov
add
cld
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
repnz
add
add
add
add
add
add
sbb
dec
add
mov
dec
add
add
add
repnz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
pusha
mov
add
add
add
add
add
jo
dec
add
add
mov
add
add
add
add
add
pushf
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
and
dec
add
mov
add
add
add
add
add
call
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fdivr
add
pop
repz
add
dec
add
add
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
repz
add
dec
add
add
add
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
hlt
dec
add
add
add
add
add
add
int3
mov
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
mov
add
add
add
add
add
sbb
dec
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
or
add
pusha
hlt
dec
add
dec
add
add
add
dec
add
add
mov
add
pusha
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
mov
add
mov
dec
add
add
add
add
add
add
lods
mov
dec
add
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
mov
add
mov
mov
add
add
add
add
add
clc
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
add
add
hlt
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
hlt
dec
add
add
add
add
add
add
xchg
ror
ror
ror
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
hlt
dec
add
ror
add
add
add
add
add
add
ror
ror
mov
add
cld
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
ror
add
add
dec
add
add
add
dec
add
add
mov
add
adc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
ror
ror
mov
add
push
cmc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
ror
add
add
add
add
add
add
ror
ror
add
add
add
(bad)
(bad)
inc
add
add
add
rol
dec
add
test
dec
add
add
add
ret
cmp
dec
add
dec
add
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
dec
add
test
dec
add
add
add
dec
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
dec
add
add
add
ret
int3
ret
inc
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
ret
add
add
or
dec
add
dec
add
ret
inc
mov
add
test
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
ret
xor
dec
add
add
add
pop
ret
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
ret
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
ret
dec
add
ret
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
add
add
ret
dec
add
ret
dec
add
add
dec
add
add
and
dec
add
les
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
add
js
dec
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
pop
dec
add
add
add
add
add
add
int3
les
fadd
dec
add
ret
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
add
add
add
add
add
sbb
dec
add
lds
inc
lds
add
add
pop
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
add
add
jo
dec
add
add
dec
add
add
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
pop
dec
add
lds
add
add
in
lds
clc
lds
inc
mov
add
lock
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fadd
dec
add
dec
add
(bad)
dec
add
add
add
(bad)
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
(bad)
dec
add
(bad)
dec
add
ret
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
(bad)
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
(bad)
dec
add
dec
add
add
add
dec
add
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
(bad)
dec
add
or
loopne
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
add
add
add
enter
add
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
enter
add
add
or
lods
enter
add
add
add
add
add
mov
enter
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lods
enter
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
leave
dec
add
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
leave
dec
add
add
add
add
leave
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
je
dec
add
leave
dec
add
add
ror
dec
add
leave
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
dec
add
add
and
dec
add
retf
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
or
push
add
add
add
add
add
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
or
mov
dec
add
add
add
retf
aam
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
or
add
dec
add
add
add
dec
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
or
push
retf
dec
add
add
add
add
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
retf
dec
add
or
movs
retf
dec
add
add
add
dec
add
ret
inc
mov
add
and
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
retf
dec
add
dec
add
retf
dec
add
add
add
dec
add
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
hlt
retf
dec
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
int3
dec
add
dec
add
add
add
add
add
add
pushf
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
int3
dec
add
add
add
int3
dec
add
int3
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fmul
dec
add
int
add
add
add
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
or
jo
dec
add
add
add
int
add
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
or
add
int
add
add
add
int
add
int
add
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
or
add
into
dec
add
add
add
into
dec
add
into
dec
add
int3
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
dec
add
add
dec
add
add
add
add
add
add
movs
into
dec
add
lds
add
add
pusha
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
into
dec
add
add
add
add
add
into
dec
add
iret
dec
add
dec
add
dec
add
add
iret
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
lock
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
iret
dec
add
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
add
add
iret
dec
add
add
add
add
or
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
or
or
dec
add
or
add
add
ror
add
add
dec
ror
pusha
ror
jl
dec
add
leave
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cwde
ror
add
add
test
dec
add
add
leave
dec
add
add
or
dec
add
add
add
ror
in
ror
or
dec
add
add
add
add
or
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
or
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
ror
inc
mov
add
sub
dec
add
add
add
ror
js
dec
add
ror
or
dec
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
ins
push
dec
add
add
add
add
add
add
add
ror
sub
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
ror
add
add
or
dec
add
dec
add
ror
je
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
clc
ror
les
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
add
add
ror
cmp
dec
add
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
nop
ror
add
add
mov
ror
dec
into
dec
add
cmovge
rcl
add
ror
call
ror
inc
ror
adc
add
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcl
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
add
xor
dec
add
dec
add
add
into
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
ror
add
add
jo
dec
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
add
add
lods
ror
adc
add
add
ror
add
add
(bad)
dec
add
ror
add
add
nop
cmovge
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
add
add
adc
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
cmovge
dec
aam
add
add
add
add
add
into
dec
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
aam
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
aam
add
add
add
dec
add
add
dec
add
aam
add
add
add
aam
add
aam
add
aad
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pop
aad
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
add
aad
add
into
dec
add
aad
add
add
add
aad
add
dec
add
(bad)
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
dec
add
add
adc
ins
(bad)
dec
add
add
add
add
dec
add
add
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
(bad)
dec
add
dec
add
add
add
add
add
add
int3
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
dec
add
(bad)
dec
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
xlat
dec
add
dec
add
add
add
dec
add
xlat
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
xlat
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
in
xlat
dec
add
add
add
xlat
dec
add
xlat
dec
add
add
dec
add
dec
add
add
add
dec
add
dec
add
add
fmul
adc
add
add
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
add
fmul
fmul
test
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
fmul
add
add
aam
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
add
add
dec
add
fmul
adc
add
add
(bad)
add
add
dec
(bad)
pop
(bad)
sub
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
(bad)
add
add
cwde
(bad)
test
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
add
add
call
(bad)
add
add
ins
adc
(bad)
(bad)
(bad)
inc
add
add
add
fcomp
dec
add
dec
add
add
add
fimul
cmp
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
dec
add
leave
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
adc
mov
add
add
add
add
add
add
fimul
aam
dec
add
fimul
add
add
enter
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
adc
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
dec
add
fimul
cld
adc
cmp
dec
add
add
add
dec
add
add
enter
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
add
fisttp
mov
aad
add
fisttp
adc
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
fisttp
mov
aad
add
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
push
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
fmul
add
add
add
add
or
add
movs
fmul
fcomp
dec
add
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
fmul
fcom
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
fisttp
hlt
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
add
add
jl
dec
add
fisttp
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
inc
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
fisttp
movs
fisttp
add
add
inc
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
dec
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
mov
fmul
add
add
adc
add
add
add
mov
fmul
in
dec
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
fimul
loopne
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
or
dec
add
dec
add
adc
dec
add
add
add
dec
add
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
adc
dec
add
add
sbb
add
dec
add
fisttp
dec
into
dec
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
int3
fisttp
add
add
(bad)
dec
add
fisttp
dec
into
dec
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
loopne
add
fisttp
dec
into
dec
add
dec
add
loopne
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
loopne
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
dec
add
loopne
add
add
add
loopne
add
loope
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
loope
add
add
add
dec
add
dec
add
add
push
dec
add
dec
add
add
add
loope
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
add
add
aam
dec
add
fimul
sub
dec
add
add
dec
add
loope
add
add
add
dec
add
dec
add
leave
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
loope
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
loop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
loop
add
add
add
dec
add
add
dec
add
loope
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lock
add
jecxz
add
loop
add
fimul
sub
dec
add
add
pop
dec
add
dec
add
add
add
dec
add
dec
add
enter
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
pop
dec
add
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
dec
add
in
add
add
add
in
add
in
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
and
dec
add
icebp
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
in
add
in
add
mov
add
pushf
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
add
dec
add
add
add
add
add
add
and
dec
add
in
add
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
dec
add
add
add
add
add
add
add
dec
add
dec
add
fimul
sub
dec
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
in
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
add
in
add
loope
add
leave
dec
add
add
dec
add
add
dec
add
add
add
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
add
add
cmp
dec
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
add
add
add
add
dec
add
dec
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
cmp
add
add
js
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
jns
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
add
add
dec
add
dec
add
out
add
add
add
out
add
out
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
shl
add
dec
add
call
add
add
add
add
add
xor
dec
add
dec
add
into
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
call
add
add
add
add
add
sub
add
aad
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
cmp
add
call
add
add
add
push
add
add
call
dec
add
dec
add
leave
dec
add
add
jmp
dec
add
add
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
shr
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
dec
add
add
add
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
cmp
add
call
add
js
dec
add
in
add
add
add
add
add
add
dec
add
in
add
add
jg
add
and
add
adc
add
nop
inc
add
add
pop
or
fist
or
sti
pop
or
sbb
or
cmp
or
pop
sbb
add
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
js
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
mov
or
mov
sbb
add
or
sbb
add
sbb
add
sbb
add
or
dec
sbb
add
or
mov
or
fcomp
add
sbb
or
pop
sbb
or
cwde
sbb
or
fcomp
or
test
or
scas
push
or
ficomp
or
xor
or
test
or
loope
or
sub
or
fldenv
or
clc
and
add
and
add
or
jnp
or
cwde
and
add
and
add
and
add
and
add
or
mov
or
int3
and
add
and
add
or
test
or
shl
or
repz
add
and
add
and
add
or
mov
and
add
and
or
pop
or
push
or
jae
or
mov
or
mov
or
(bad)
or
stc
or
sub
or
pop
daa
or
mov
or
test
or
call
sub
add
or
cwde
sub
add
sub
add
sub
add
sub
add
sub
add
or
xchg
sub
add
sub
add
sub
add
or
push
sub
add
sub
add
sub
add
sub
add
or
mov
sub
add
or
sub
test
sub
add
sub
add
sub
or
fsubr
or
dec
or
push
or
fld
or
or
or
cmp
or
pop
das
or
mov
das
or
fsubr
or
and
or
popa
xor
add
xor
add
xor
add
xor
add
or
mov
or
mov
xor
add
xor
add
or
js
or
cwde
xor
add
or
and
add
cmp
add
cmp
add
cmp
add
cmp
add
or
icebp
cmp
add
cmp
add
or
jnp
or
stos
cmp
add
cmp
add
cmp
or
mov
aas
or
xor
add
or
jns
or
fwait
inc
or
mov
inc
or
sti
inc
or
and
add
or
leave
inc
or
cmp
mov
inc
or
sub
add
or
mov
inc
or
add
add
or
imul
add
inc
or
call
dec
or
sub
add
or
push
dec
or
mov
dec
or
fisttp
add
dec
or
sbb
add
dec
or
pop
dec
or
xchg
dec
or
test
or
fisttp
add
dec
or
cmp
add
or
jle
or
cwde
dec
or
ds
or
pop
dec
or
mov
add
add
dec
or
mov
dec
or
clc
dec
or
cmp
add
or
fmul
add
or
mov
dec
or
inc
dec
or
clc
dec
or
mov
add
push
or
rcl
add
or
clc
push
or
call
push
or
pop
push
or
test
push
or
rcl
add
push
or
and
add
or
jo
or
nop
push
or
loope
or
clc
push
or
sbb
add
or
js
or
test
or
mov
pop
or
push
pop
or
xor
add
or
jo
or
cwde
pop
or
rcr
add
pop
or
adc
xor
push
pop
or
cdq
pop
or
mov
pop
or
xor
add
or
enter
lock
or
and
add
pusha
or
push
pusha
or
mov
add
pusha
or
push
popa
or
sub
add
or
xchg
popa
or
lock
or
enter
nop
arpl
add
or
inc
or
jo
or
mov
or
nop
or
loopne
or
adc
add
or
and
mov
or
pop
or
clc
or
cwde
push
or
call
push
add
ins
or
pop
ins
or
call
ins
or
shr
add
add
outs
or
loopne
or
or
add
outs
or
cwde
outs
or
shr
clc
outs
or
js
or
test
or
repz
add
or
sbb
lds
fdiv
cld
je
add
jne
add
or
xchg
jne
add
jne
add
jbe
add
or
jg
or
stos
jbe
add
jbe
add
ja
add
or
push
ja
add
or
pushf
ja
add
ja
add
ja
add
js
add
or
imul
add
js
add
jns
add
or
xchg
jns
add
jns
add
jns
add
jp
add
jp
add
or
sahf
jp
add
jp
add
jp
add
jnp
add
or
inc
jnp
add
or
fwait
jnp
add
jl
add
jl
add
or
xchg
jl
add
jl
add
jl
add
jge
add
or
pushf
jge
add
jge
add
jle
add
add
or
call
add
jle
add
jle
add
jg
add
jg
add
or
mov
add
jg
add
or
cmp
or
outs
or
mov
or
rol
add
or
sbb
or
pop
or
add
or
add
or
xor
or
xchg
or
int
or
lock
adc
or
pop
or
jl
or
lahf
or
ret
add
or
or
add
or
jno
or
xchg
test
add
test
add
test
add
test
add
or
jbe
or
movs
test
add
test
add
xchg
add
xchg
add
or
add
add
or
mov
or
iret
xchg
add
xchg
add
mov
add
or
jle
or
mov
mov
add
mov
add
mov
add
mov
add
or
xchg
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
or
or
add
mov
add
mov
add
or
daa
mov
add
or
jb
or
xchg
mov
add
mov
add
mov
add
lea
add
lea
add
or
mov
lea
add
lea
add
mov
add
or
push
mov
add
or
mov
(bad)
(bad)
(bad)
vprotb
or
into
(bad)
(bad)
nop
or
bound
or
test
or
retf
nop
or
out
nop
or
adc
or
jne
or
call
add
xchg
or
or
xchg
or
push
xchg
or
jns
or
pushf
xchg
or
rcl
or
pop
xchg
or
sub
or
jo
or
adc
add
xchg
or
icebp
xchg
or
add
add
or
xchg
xchg
or
test
or
retf
xchg
or
icebp
xchg
or
adc
or
push
xchg
or
jnp
or
mov
xchg
or
clc
xchg
or
xor
or
js
or
inc
xchg
or
js
or
adc
or
dec
cwde
or
inc
cdq
or
nop
cdq
or
push
call
or
add
or
cwde
pushf
or
adc
or
mov
popf
or
lock
or
and
or
pusha
sahf
or
mov
sahf
or
push
lahf
or
and
or
mov
lahf
or
lock
or
or
or
dec
mov
or
mov
mov
or
push
mov
or
and
add
mov
or
xor
add
movs
or
and
or
and
add
movs
or
loopne
or
sti
movs
or
and
or
push
cmps
or
enter
add
or
js
or
cmps
cmps
or
shl
add
test
add
or
xchg
test
add
test
add
test
or
push
test
or
mov
test
or
pop
stos
or
mov
or
in
or
pop
stos
or
sub
or
jo
or
fwait
stos
or
mov
stos
or
add
or
push
lods
or
cmps
lods
or
(bad)
(bad)
(bad)
push
dec
add
add
add
mov
add
add
(bad)
(bad)
call
add
add
in
dec
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
hlt
hlt
dec
add
(bad)
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
dec
add
add
add
add
inc
adc
add
add
fs
dec
add
add
add
dec
add
add
(bad)
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
xor
inc
add
add
add
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
and
inc
add
(bad)
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
add
dec
add
(bad)
(bad)
push
add
add
sub
dec
add
add
add
and
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
dec
add
(bad)
(bad)
jmp
sbb
and
add
in
dec
add
(bad)
(bad)
inc
sbb
and
add
adc
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
and
add
cmp
dec
add
(bad)
(bad)
call
dec
add
add
add
js
dec
add
(bad)
(bad)
push
dec
add
add
add
movs
test
(bad)
(bad)
(bad)
call
add
add
shl
dec
add
(bad)
(bad)
push
add
add
cld
test
(bad)
(bad)
(bad)
call
sbb
and
add
sub
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
(bad)
(bad)
clc
sbb
and
add
push
clc
dec
add
(bad)
(bad)
call
sbb
and
add
mov
dec
add
(bad)
(bad)
push
sbb
and
add
mov
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
loopne
dec
add
(bad)
(bad)
push
dec
add
add
add
adc
dec
add
(bad)
(bad)
jmp
add
add
inc
stc
dec
add
add
add
nop
stc
dec
add
(bad)
(bad)
call
sbb
(bad)
(bad)
(bad)
(bad)
fcomp
dec
add
add
add
sbb
add
add
jmp
dec
add
add
add
sbb
add
add
(bad)
sbb
and
add
in
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
add
add
inc
sbb
add
add
dec
sbb
(bad)
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
adc
dec
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
(bad)
(bad)
call
add
add
add
add
dec
cli
dec
add
(bad)
(bad)
push
add
add
jl
dec
add
(bad)
(bad)
call
sbb
and
add
test
dec
add
add
add
clc
cli
dec
add
(bad)
(bad)
push
sbb
add
add
clc
sbb
add
add
add
add
add
add
sbb
add
add
add
sbb
add
(bad)
(bad)
push
sbb
add
add
add
sbb
add
add
add
dec
add
add
add
and
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
pop
sti
dec
add
add
add
mov
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
sbb
add
(bad)
(bad)
dec
sbb
add
(bad)
(bad)
call
sbb
add
add
add
in
dec
add
(bad)
(bad)
push
sbb
add
(bad)
(bad)
(bad)
clc
sbb
add
add
add
and
dec
add
add
add
js
dec
add
(bad)
(bad)
call
sbb
(bad)
call
sbb
add
and
add
sub
add
xor
(bad)
(bad)
cmp
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
or
dec
add
(bad)
(bad)
push
add
add
xor
dec
add
(bad)
(bad)
call
sbb
xchg
sbb
add
add
dec
add
add
add
mov
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
sti
sbb
add
add
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
push
dec
add
add
add
or
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
(bad)
jns
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
inc
dec
(bad)
(bad)
(bad)
inc
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
cmp
add
add
add
loopne
dec
add
(bad)
(bad)
push
push
dec
add
add
add
push
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cwde
dec
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
pop
dec
add
add
add
and
add
add
push
and
add
add
sbb
dec
add
add
add
and
and
add
pop
add
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
(bad)
(bad)
(bad)
dec
and
(bad)
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
push
and
and
add
loopne
dec
add
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
call
and
and
add
or
dec
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
inc
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
add
add
(bad)
(bad)
push
add
add
add
add
in
dec
add
(bad)
(bad)
call
and
add
add
(bad)
dec
add
add
add
sbb
dec
add
(bad)
(bad)
push
and
add
add
sti
and
and
add
dec
add
add
add
add
add
movs
add
add
add
(bad)
(bad)
jmp
and
add
add
adc
dec
add
add
add
and
add
add
and
dec
add
add
add
dec
add
add
add
dec
add
add
add
daa
inc
add
add
add
add
add
add
add
add
add
cmc
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
dec
add
(bad)
(bad)
jmp
and
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
push
and
(bad)
(bad)
(bad)
inc
and
(bad)
(bad)
(bad)
dec
dec
add
add
add
add
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
jmp
dec
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
add
add
enter
(bad)
(bad)
(bad)
inc
and
add
add
enter
and
add
xchg
add
add
add
add
add
add
add
add
add
shl
add
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
and
add
add
call
add
add
adc
add
(bad)
(bad)
(bad)
inc
and
add
add
add
inc
add
add
(bad)
(bad)
(bad)
jmp
and
add
add
add
and
add
add
add
jo
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
movs
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
fadd
add
and
add
cmp
dec
add
(bad)
(bad)
push
add
add
add
add
and
add
(bad)
(bad)
dec
and
add
(bad)
(bad)
call
and
add
(bad)
(bad)
push
and
add
add
add
and
xchg
sbb
add
add
dec
add
(bad)
(bad)
jmp
and
add
sub
add
xor
add
ds
xchg
sbb
add
xchg
push
dec
add
add
add
add
add
add
add
pop
dec
add
add
add
inc
pop
dec
add
add
add
push
dec
add
add
add
cmc
dec
add
(bad)
(bad)
jmp
inc
add
add
add
icebp
dec
add
add
add
inc
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
into
and
add
(bad)
and
add
add
add
adc
add
loope
dec
add
add
add
and
add
add
add
adc
add
jmp
add
pop
es
add
add
add
and
(bad)
dec
es
add
(bad)
(bad)
call
es
add
(bad)
(bad)
push
es
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
add
add
push
add
add
(bad)
(bad)
jmp
add
add
add
add
xchg
or
add
add
(bad)
(bad)
inc
es
add
add
add
es
add
add
add
enter
(bad)
(bad)
(bad)
jmp
es
add
add
add
cld
or
add
add
(bad)
(bad)
call
daa
dec
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
push
or
add
add
(bad)
(bad)
push
dec
add
add
add
or
add
(bad)
(bad)
jmp
add
add
lods
or
add
add
add
add
cld
or
add
add
(bad)
(bad)
inc
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
dec
or
add
loopne
pusha
xor
inc
shl
jbe
mov
inc
xlat
or
lea
xchg
xor
jle
(bad)
fs
pop
ins
imul
add
inc
fcomp
(bad)
xchg
stos
mov
cdq
xchg
cli
movs
sub
loope
pop
sbb
dec
psubq
jo
jecxz
lahf
enter
jmp
push
mov
test
fisubr
pop
in
inc
cmps
popa
popa
mov
adc
movs
test
jno
sub
pop
xor
push
adc
xlat
xchg
(bad)
push
jmp
mov
adc
add
mov
ins
aas
pop
push
loope
movs
or
mov
mov
movs
xchg
xchg
adc
xor
xor
push
or
lods
mov
mov
mov
push
hlt
nop
cmps
cmp
mov
and
cmp
sar
and
xchg
xchg
scas
int
in
test
push
mov
test
clc
sti
rcr
leave
cmc
and
jl
sub
hlt
adc
xor
shl
test
addr16
xchg
adc
xchg
push
sar
enter
mov
rcl
sar
call
adc
out
int3
mov
test
pop
mov
adc
sbb
inc
or
lds
shr
adc
mov
push
sbb
ins
and
or
add
pusha
dec
(bad)
mov
mov
ror
addr16
inc
push
pop
jne
jo
mul
sbb
ror
and
mov
xor
cmp
mul
int
sub
dec
loopne
mov
xor
mov
shl
cmp
push
dec
add
imul
inc
sahf
fs
cmp
call
fcom
xor
or
cwde
and
pop
pusha
or
popa
shr
out
movs
loop
add
loopne
in
enter
or
js
jmp
inc
jge
jecxz
mov
ret
xchg
nop
jnp
mov
cwde
fmul
mov
lock
les
mov
adc
into
aam
push
js
fsubr
push
jne
dec
pusha
push
aam
test
in
aam
rol
xor
je
sub
xor
jo
in
add
repz
add
int
jo
cmp
xchg
mov
or
loope
xchg
push
pop
aam
xchg
mov
cmp
and
sbb
and
jns
inc
jbe
push
sub
int3
rol
clc
sub
inc
add
mov
fisub
push
aad
shr
xchg
mov
sub
in
(bad)
sahf
mov
nop
fadd
push
adc
add
push
movs
retf
shl
mov
jne
sahf
add
arpl
into
fmul
mov
mov
or
lods
mov
mov
scas
xchg
jg
out
sub
jo
jle
cmp
mov
imul
loopne
in
popa
mov
cmp
mov
xchg
add
out
inc
shl
lahf
lods
mov
int3
movs
mov
jb
cmps
fist
inc
add
rol
jle
sub
(bad)
xchg
inc
cs
inc
mov
pop
in
and
fst
xchg
xor
cmp
loopne
sub
xor
xor
shl
adc
sbb
push
xor
sbb
popa
xchg
shl
xor
bnd
mov
xor
jmp
jmpw
xlat
xchg
xchg
cmp
rcl
lods
aaa
add
push
test
mov
sbb
pop
dec
xor
sbb
shr
push
movs
xor
int3
adc
adc
add
sub
push
rcr
popa
and
repnz
shl
pop
fs
movs
jle
call
mov
xor
cdq
dec
dec
pop
pop
mov
pop
sub
aam
adc
test
fstp
fs
inc
mov
cdq
xor
xchg
xlat
lock
ja
jno
or
je
jle
dec
arpl
ret
test
pop
push
xchg
mov
jmp
shl
jl
add
and
sub
mov
rcr
xchg
inc
inc
int
nop
cld
fdiv
jo
sub
inc
pusha
cmp
push
mov
mov
cmp
aas
sbb
mov
ins
xchg
inc
inc
jo
mov
(bad)
hlt
fcom
sbb
ja
or
pop
push
fs
jle
add
arpl
xchg
call
push
jne
mov
lds
enter
rcr
add
nop
jo
sbb
xor
aam
adc
push
test
xor
inc
add
js
xchg
in
push
add
das
mov
pop
in
rcl
leave
mov
adc
push
sbb
add
cmc
or
fwait
and
jecxz
xor
push
add
cmc
movs
rol
inc
sbb
add
xor
inc
cmp
push
ret
add
pusha
jecxz
bound
xor
in
xchg
adc
fs
rol
fmul
add
adc
repz
xor
push
idiv
shl
shl
int
jg
jmp
cmp
xor
sbb
mov
jne
rcr
ret
adc
jno
push
shl
or
pop
mov
and
test
ret
sbb
fild
jno
test
mov
sbb
push
inc
push
jg
sub
xor
cmc
in
leave
hlt
jmp
push
dec
cmc
xor
pop
lock
sub
sahf
pop
js
cmps
jae
xor
fisubr
xor
or
push
jmp
ja
cmp
mov
not
mov
sub
cwde
shr
movs
pop
leave
pop
inc
ret
enter
aas
lock
ret
xor
repnz
inc
pop
or
push
outs
mov
pop
xchg
mov
mov
cmps
call
cmps
pop
xchg
shr
mov
jb
(bad)
cmc
or
clc
jno
hlt
mov
jns
sbb
adc
loopne
and
jp
daa
xchg
icebp
add
pusha
loop
nop
pusha
push
cmps
lods
add
push
cmc
sub
mov
xchg
push
nop
jae
and
mov
clc
lods
cmp
add
sub
push
xchg
xor
cs
mov
mov
inc
int3
inc
add
es
xor
arpl
jge
shl
stc
movs
mov
pop
imul
and
aaa
loopne
jecxz
sub
push
aas
std
mov
test
add
cmp
stos
pusha
mov
and
icebp
mov
inc
push
inc
inc
shr
xchg
pop
out
arpl
pop
jb
mov
call
jecxz
inc
jno
jmp
mov
and
enter
and
mov
leave
ins
xor
and
fistp
sbb
fs
push
mov
mov
push
jo
push
adc
je
ins
test
(bad)
call
jmp
push
push
adc
fist
jae
aaa
sbb
popf
mov
int3
fisubr
(bad)
mul
xchg
test
and
adc
gs
xor
cmps
inc
xor
pop
aam
ret
adc
push
and
xor
adc
push
lods
inc
jb
rcr
mov
inc
jae
shl
sbb
sub
jae
xchg
repnz
mov
cwde
push
movs
cmp
mov
test
sbb
mov
mov
and
test
xchg
and
and
shl
bound
xlat
adc
or
(bad)
mov
push
in
into
ret
clc
cmp
push
sub
push
cmp
inc
sbb
movs
push
and
mov
aad
cwde
loope
les
add
imul
jmp
cmp
xchg
mov
fsubr
mov
or
js
cwde
loopne
int
xor
(bad)
aad
test
sahf
xchg
loopne
ret
loope
ficom
out
je
jp
and
popa
je
push
push
xchg
pop
ret
xor
rol
test
lds
in
xchg
bound
mov
jo
inc
data16
shl
(bad)
cmps
mov
cmp
jno
mov
fs
stos
mov
pop
je
cmp
scas
repz
stos
jno
repz
loop
pop
fcom
int
sbb
and
adc
jne
lds
outs
loop
push
mov
rol
push
loopne
(bad)
xchg
adc
popa
lock
pop
add
std
inc
pusha
loope
xor
(bad)
shl
jmp
push
aam
jnp
push
aam
repnz
mov
out
inc
daa
mov
mov
adc
xor
mov
in
pop
sbb
push
and
or
sbb
inc
push
(bad)
lock
push
xor
mov
ins
sbb
mov
pop
into
xor
adc
add
pop
shl
fnstenv
sub
mov
dec
bound
pop
push
adc
xchg
xor
jle
jnp
movs
pop
pop
push
add
push
cmp
push
dec
jno
mov
js
imul
xchg
sbb
shl
cmp
fwait
lahf
rcl
pop
aad
data16
test
icebp
xchg
inc
xor
mov
mov
loop
dec
bound
sub
add
and
xor
call
sbb
je
xchg
sub
sbb
(bad)
push
cld
push
or
(bad)
nop
ret
gs
in
or
mov
mov
mov
out
push
nop
adc
das
sbb
push
and
add
je
shl
std
mov
test
stc
or
nop
retf
and
pop
rol
mov
jne
or
jo
loopne
loopne
and
rcr
push
sbb
push
adc
push
jns
pop
mov
push
std
sub
cmp
cmp
xor
sbb
les
pop
sar
fisub
jbe
xchg
enter
xor
cmp
mov
xchg
jmp
adc
jmp
push
inc
sbb
add
lods
push
mov
sbb
adc
or
stos
mov
in
outs
rcr
test
inc
fstp
cmp
xchg
iret
shl
jae
mov
ins
ror
sub
test
movs
mov
scas
dec
jg
add
je
iret
retf
cmps
mov
mov
imul
jb
push
retf
jecxz
mov
aaa
mov
xchg
lock
or
xor
and
cwde
dec
inc
pop
std
rcr
and
test
xor
icebp
push
mov
xor
clc
adc
add
mov
cs
inc
mov
shl
rol
dec
loopne
fisttp
pop
rol
into
push
loope
mov
pop
inc
cmps
push
repnz
iret
scas
pop
dec
loope
and
jae
and
fst
adc
add
lds
push
and
ficomp
enter
xchg
out
and
or
mov
loope
stos
ja
fnstcw
cmc
(bad)
jecxz
test
test
xchg
imul
xchg
dec
push
(bad)
jg
inc
push
mov
jb
add
adc
and
adc
or
xor
pop
add
jg
xor
cmp
(bad)
fsubr
and
adc
test
pop
ret
inc
dec
fisub
fdivr
or
mov
sub
fwait
dec
jb
loopne
cmps
popf
pop
xchg
xchg
scas
outs
and
jo
push
je
and
loop
ret
or
test
adc
xor
and
sbb
sub
jmp
xor
loopne
inc
add
lock
sub
pusha
data16
sub
aad
shl
mov
loopne
mov
loopne
cmp
inc
cmps
pop
hlt
std
push
lock
push
icebp
icebp
rcl
add
cmp
sbb
or
mov
pusha
pop
add
adc
sub
aas
out
or
popa
and
and
lods
or
jnp
popa
mov
mov
jmp
fcmovnbe
aas
ret
mov
ror
icebp
inc
fmul
cmp
xor
pushf
arpl
sub
adc
mov
ins
and
cmps
cwde
outs
js
shr
adc
pop
fisttp
repnz
mov
pop
xor
cmp
fnsave
out
dec
inc
jo
pop
push
jmp
sbb
scas
or
pop
stos
jo
xor
inc
mov
and
push
fsubr
adc
fcomp
xchg
push
mov
or
mov
js
out
nop
and
inc
hlt
dec
adc
aam
pop
add
inc
push
je
cmc
test
pop
fbstp
aam
adc
stos
shl
loop
nop
jb
loope
bound
xor
pop
lock
sub
jbe
cmp
add
inc
mov
push
add
pop
popa
mov
push
rcr
adc
jne
retf
inc
dec
or
cmps
loopne
cmp
daa
jge
xlat
cmp
pop
xlat
push
dec
add
rol
idiv
js
adc
xor
mov
jb
cmp
repnz
les
mov
mov
leave
mov
nop
fistp
inc
loopne
das
xchg
mov
int3
retf
and
fwait
lea
and
sub
push
fwait
popf
or
or
mov
mov
shl
mov
cmp
fcomp
lock
ret
or
fcom
mov
cmps
scas
sar
sbb
and
jnp
popa
dec
aaa
mov
mov
pop
adc
cmc
ret
mov
and
pop
xor
es
jns
mov
mov
out
lods
push
cs
push
mov
sbb
cld
adc
mov
or
ret
push
sub
fs
mov
mov
cdq
cmp
cmc
xchg
je
inc
sar
jp
lock
add
adc
pusha
shl
fs
adc
js
mov
sub
test
fsub
inc
jne
and
stos
into
pop
clc
icebp
cs
(bad)
(bad)
shr
out
ret
adc
retf
cdq
fs
loopne
test
push
mov
test
mov
inc
cli
or
sub
and
rol
pop
lea
into
and
push
and
or
icebp
xor
or
out
loop
test
xchg
loopne
bound
cli
test
fcom
rcl
gs
(bad)
xor
stos
fisubr
sar
dec
push
xchg
cmc
mov
mov
movs
test
shl
outs
in
xor
rcr
out
add
or
test
enter
add
movs
or
leave
mov
cwde
arpl
xchg
loopne
jecxz
popa
sub
mov
cmp
push
lds
outs
es
rcl
push
inc
push
jae
xor
loop
xchg
inc
es
mov
ins
rcl
das
pop
sub
pushf
hlt
mov
mov
xor
cmp
xchg
or
mov
jmp
sbb
and
xor
nop
stc
imul
xchg
xchg
outs
cwde
jle
mov
jnp
and
sub
add
cmps
adc
push
shl
and
mov
cmp
and
adc
into
dec
js
xor
mov
cmp
add
test
add
lock
loopne
mov
jno
lahf
sbb
jbe
sub
popa
or
dec
test
fdivr
in
mov
mov
jo
xor
xor
lods
repnz
shl
or
add
test
xor
jp
xor
jg
loopne
jmp
add
fs
scas
jl
call
rcr
cwde
push
xor
jnp
xchg
popa
pop
cmp
call
cmps
mov
sbb
pop
jle
inc
(bad)
mov
dec
outs
hlt
inc
pop
adc
inc
(bad)
in
ja
stos
gs
mov
xor
adc
mov
jae
dec
push
xor
movs
in
repnz
push
dec
iret
add
rol
retf
push
or
stos
inc
lahf
out
adc
stos
xchg
daa
aas
pop
jnp
clc
mov
imul
inc
cmps
lock
push
ins
clc
add
test
jno
shl
fcmovu
out
sub
ret
repnz
cmp
xchg
(bad)
mov
jg
cdq
or
loopne
(bad)
xchg
data16
and
xor
sub
imul
loopne
fisub
pop
loope
mov
jge
sahf
mov
(bad)
addr16
scas
sub
cmp
inc
sti
mov
mov
scas
push
push
push
push
mov
call
scas
and
and
retf
mov
add
idiv
into
movs
lods
into
fadd
sar
sub
sub
inc
shl
or
in
(bad)
int3
lock
push
fs
in
pop
mov
xadd
mov
rcl
and
leave
pop
jno
jge
ins
(bad)
nop
or
add
or
add
shl
fld
inc
imul
call
aad
popf
lock
push
inc
pop
mov
adc
mov
adc
pop
sbb
int3
cmp
jns
mov
pop
xchg
xchg
retf
jecxz
jnp
jo
enter
add
dec
jae
mov
mov
pop
sub
xor
pop
or
pop
xor
inc
shl
gs
xchg
mov
repnz
push
shl
xor
mov
hlt
cmp
jmp
icebp
sbb
mov
jp
jns
xor
jmp
pushf
inc
mov
ds
js
pushf
mov
retf
shr
inc
sti
jb
add
jmp
ret
lea
les
dec
push
cmc
outs
or
adc
jne
pop
xchg
inc
jne
mov
inc
xchg
rcl
sub
push
mov
xchg
mov
(bad)
in
mov
push
push
adc
dec
loopne
mov
shl
mov
gs
mov
pop
push
sub
adc
and
clc
stos
adc
and
div
jmp
push
and
xor
xchg
adc
mov
mov
arpl
inc
loopne
dec
mul
pushf
loopne
push
movs
inc
push
imul
add
mov
sbb
jge
mov
loopne
cwde
scas
mov
fwait
xchg
pop
xor
xor
or
scas
push
jae
hlt
icebp
rcl
ret
gs
(bad)
mov
fisubr
bnd
or
call
and
int
adc
dec
jmp
inc
sub
adc
(bad)
dec
add
sub
cli
and
mov
xchg
inc
push
(bad)
lahf
inc
mov
and
in
xor
xor
movs
mov
sbb
mov
mov
add
(bad)
jge
popa
cmc
rcr
cmp
xchg
nop
adc
or
dec
pop
inc
icebp
lds
xchg
dec
pop
lahf
adc
rol
ins
mov
shr
sbb
xor
mov
data16
call
dec
out
jo
xor
(bad)
pop
rol
mov
sti
xchg
les
ins
in
rol
nop
pop
jecxz
movs
stos
mov
shl
adc
frstor
pop
clc
jmp
push
jno
inc
pop
movs
cmp
or
dec
or
fcom
mov
sub
cwde
mov
and
mov
push
sbb
sbb
std
pop
or
out
and
rcl
add
mov
mov
add
mov
add
sar
xchg
jb
sub
cmp
and
and
in
hlt
pop
loopne
jge
(bad)
sub
bound
cmp
(bad)
jmp
mov
nop
rcl
movs
ins
test
ins
sub
cmp
dec
sbb
shr
(bad)
push
mov
ins
imul
xchg
(bad)
cld
cld
push
fcom
sbb
int
mov
cmps
pusha
push
cmp
iret
ds
sbb
mov
lock
sbb
stos
rol
push
ds
push
mov
retf
lods
lock
(bad)
cld
loopne
enter
ror
fwait
test
jmp
inc
rol
fsub
outs
mov
sbb
xor
shl
rol
mov
rol
or
sahf
jmp
mov
inc
jle
ins
adc
(bad)
icebp
xchg
pop
imul
or
push
xor
xor
fnsave
test
xor
mov
jnp
jno
inc
lock
nop
and
les
mov
push
and
cwde
les
lds
sbb
and
cmp
add
ret
lds
or
cmp
add
mov
dec
xor
and
and
popa
lds
je
sbb
sbb
xchg
jl
rcl
in
push
mov
adc
movs
cwde
pusha
fadd
mov
push
sub
and
dec
ret
fnsave
or
and
shl
xchg
rcr
jae
jbe
mov
sbb
shl
aaa
adc
lods
std
dec
std
shl
leave
inc
stos
xchg
adc
leave
push
fild
pusha
cmp
ror
test
mov
clc
push
pushf
mov
xor
mov
push
mov
dec
adc
fs
xchg
ss
jo
add
(bad)
and
dec
mov
xor
shl
xchg
jo
push
and
jge
xchg
xchg
shl
xor
ja
aad
jno
daa
mov
arpl
mov
hlt
mov
mov
push
loope
cmps
xor
shl
xchg
and
and
lea
xchg
in
repnz
jae
adc
jno
and
cmp
retf
cdq
adc
cmp
and
mov
clc
icebp
xor
xchg
icebp
add
sub
les
mov
or
cmp
and
cs
sahf
js
sbb
cwde
mov
mov
(bad)
add
jo
dec
ja
jb
dec
arpl
popf
leave
mov
jge
add
cmc
add
lock
mov
pop
inc
iret
push
or
fidiv
cmps
gs
shl
and
xor
icebp
loope
xor
mov
adc
inc
(bad)
and
push
push
xor
pusha
add
inc
jmp
xor
jno
inc
scas
rol
test
dec
adc
aad
ret
push
cmp
into
inc
setge
ret
mov
xchg
push
xor
loop
mov
mov
add
sbb
or
mov
sbb
sub
add
in
inc
jb
mov
xor
js
outs
stos
jnp
xor
add
and
add
sahf
xor
add
loope
sbb
data16
cmp
ficomp
dec
mov
pop
sub
fs
out
stos
push
data16
and
push
and
pop
mov
or
jae
mov
imul
in
jge
popa
mov
inc
and
inc
pop
sub
adc
mov
dec
adc
adc
cwde
jl
push
mov
rcl
sahf
cmp
clc
xor
lock
outs
test
fild
bound
aad
mov
mov
aad
sbb
(bad)
ror
pop
add
xchg
push
pushf
push
xchg
ins
cld
fs
adc
in
arpl
push
fwait
jae
mov
xchg
mov
add
gs
je
mov
bound
push
sub
cmp
pop
call
jmp
mov
scas
ror
and
dec
retf
mov
scas
jne
scas
and
test
lods
aas
dec
mov
dec
jge
sbb
xor
cmp
adc
mov
inc
nop
fs
ret
loope
and
ds
mov
adc
jne
xor
mov
xor
pop
inc
sub
xchg
jae
push
push
nop
rol
or
mov
adc
xor
int
out
sub
cwde
mov
call
shl
and
and
fdiv
or
pop
jmp
dec
mov
add
xor
mov
cmp
adc
(bad)
mov
(bad)
popf
cmps
test
cmps
mov
add
ja
dec
movs
adc
mov
movs
xchg
lock
push
retf
dec
(bad)
mov
mov
jns
in
push
movs
(bad)
call
add
fcom
xchg
imul
clc
les
jb
jmp
popf
add
leave
jns
fldz
cmp
xchg
rol
loopne
movs
repnz
dec
cmp
cmp
lds
pop
inc
or
dec
pusha
popa
sbb
(bad)
aas
fnsave
ins
mov
adc
shr
sub
je
loopne
or
aad
repz
jno
shl
js
sbb
sbb
xor
scas
xchg
mov
les
aaa
xor
and
xor
sub
push
jecxz
imul
xor
movs
sahf
movs
push
rcr
and
and
shl
inc
add
shl
div
xor
dec
test
in
loopne
sbb
lds
or
jns
push
add
inc
mov
fdiv
stos
jo
test
push
xor
mov
sbb
or
arpl
std
and
mov
movs
stos
(bad)
sar
in
adc
sub
adc
aaa
repz
lock
xor
cmc
xor
or
cmp
push
sub
div
mov
clc
mov
mov
xchg
aas
xor
icebp
sti
test
inc
mov
icebp
sbb
dec
inc
stc
mov
js
mov
and
cwde
in
adc
bound
call
mov
or
and
xchg
js
push
push
std
lods
adc
(bad)
repz
pusha
push
add
dec
call
or
hlt
hlt
jecxz
daa
enter
or
ficom
call
jo
push
lods
icebp
mov
hlt
and
adc
int
repnz
movs
hlt
jmp
add
sub
test
adc
sbb
push
test
loopne
repz
cmps
xchg
and
fstp
out
jne
xchg
xor
mov
rol
jle
ret
and
xchg
mov
in
mov
cmps
call
sub
sbb
adc
add
leave
in
daa
jb
popa
inc
xlat
mov
fwait
imul
imul
push
aaa
push
outs
loopne
rcl
(bad)
es
addr16
inc
xchg
cmps
mov
ss
outs
inc
pop
outs
iret
push
sub
add
movs
dec
sbb
aam
sar
les
inc
adc
inc
in
pop
pushf
ss
popa
push
std
mov
sti
repnz
sub
and
fsubr
xchg
xor
mov
test
fwait
cmp
mov
or
fisttp
arpl
xor
xor
inc
in
pusha
adc
cs
cwde
ror
add
lods
arpl
add
out
aam
add
pop
add
push
jle
lea
rol
jne
mov
cmp
xor
imul
and
jns
not
rcl
inc
pop
retf
xchg
pusha
sub
je
add
sub
jo
shl
sbb
(bad)
mov
inc
mov
(bad)
shr
cdq
je
push
jb
add
xor
sti
cs
mov
popf
fdivp
xor
clc
arpl
aad
cmp
adc
jo
jecxz
fndisi(8087
pop
add
mov
pop
jb
les
mul
xor
dec
loope
adc
and
inc
jo
sub
into
adc
loope
(bad)
pushf
cmp
mov
(bad)
jb
cdq
icebp
pop
mov
sub
aas
pop
nop
fstp
cmps
push
popa
test
mov
rol
push
repnz
scas
ror
push
ret
sbb
pop
mov
jmp
loope
push
clc
data16
pusha
ss
dec
cwde
adc
or
and
push
scas
pop
push
(bad)
loope
xor
icebp
mov
xchg
jmp
jg
sub
lds
icebp
xchg
mov
mov
jg
xor
cmps
jno
cmp
sub
imul
clc
adc
cmp
and
push
lods
lock
jo
pop
pop
add
pop
xchg
cld
mov
dec
loopne
jb
mov
ror
and
(bad)
lods
ror
pop
mov
mov
mov
xor
push
out
aad
inc
dec
call
scas
icebp
rcr
stc
stos
dec
jg
enter
inc
sub
fadd
call
xor
cli
jmp
sub
adc
mov
movntps
clc
ins
jg
add
xor
sbb
jmp
push
and
cmps
xlat
mov
xor
mov
rcl
mov
stc
loop
fild
add
and
movs
sub
inc
pop
mov
inc
and
nop
clc
sahf
pop
fucomip
xor
and
mov
sub
mov
mov
cmc
and
outs
xchg
or
cmps
mov
icebp
mov
in
test
data16
xor
inc
mov
xchg
dec
dec
add
stc
stos
inc
sbb
movs
add
push
cmp
nop
outs
and
and
mov
jge
xlat
push
xchg
ret
rcl
jno
ins
pop
movs
pop
add
adc
sar
not
jecxz
xor
movs
and
adc
nop
inc
ds
dec
retf
dec
cmps
dec
pushf
int
in
and
mov
retf
rol
bound
lahf
mov
push
mov
push
(bad)
sbb
mov
push
adc
and
leave
sub
lods
xor
push
out
popa
add
fidiv
xlat
pop
or
mov
mov
int3
(bad)
lock
jg
or
sub
lods
sbb
dec
ds
ror
add
nop
jbe
rcl
cmc
lds
pop
hlt
mov
mov
inc
xor
cmp
sbb
mov
outs
aad
fcmove
mov
cdq
loope
xchg
push
mov
ins
add
jne
add
mov
mov
loop
lock
imul
jle
aas
adc
pop
and
div
(bad)
idiv
inc
mov
rcl
ret
sbb
retf
fxtract
arpl
call
push
xchg
shr
pusha
and
loope
pop
mov
rcl
add
shr
mov
out
mov
loop
pusha
cmp
push
(bad)
aas
or
sahf
(bad)
push
maxps
push
mov
je
and
inc
ja
rol
dec
nop
lock
lods
cwde
and
push
cmp
outs
mov
loope
push
pop
mov
call
les
add
sub
xor
pop
push
cwde
mov
(bad)
dec
loope
je
test
mov
nop
test
xchg
daa
jge
xchg
mov
popa
inc
stc
lock
dec
dec
jnp
jp
and
push
xor
dec
inc
mov
retf
imul
mov
in
sar
loop
repz
xchg
lock
inc
cmp
adc
pop
sub
xor
mov
shr
xor
mov
iret
xor
es
dec
sbb
test
cld
mov
adc
call
xor
jno
les
jae
mov
ret
(bad)
adc
xchg
repz
push
retf
(bad)
mov
add
test
rol
xor
jno
fs
rcr
mov
sub
test
rcr
add
in
mov
lock
dec
in
xor
enter
movs
popa
das
aad
(bad)
and
xchg
xchg
stos
adc
inc
push
pop
push
pop
and
mov
adc
ror
or
shr
add
cmp
add
jne
rcl
and
mov
mov
cli
jae
and
xor
es
or
xor
(bad)
fld
repz
push
add
or
cwde
cmp
jge
adc
jle
sub
mov
mul
cmp
mov
or
nop
popa
jno
jge
ins
mov
nop
fwait
xchg
adc
and
dec
(bad)
rcr
outs
in
xor
lock
inc
(bad)
dec
push
in
adc
adc
xchg
inc
pusha
cs
ins
inc
sbb
mov
mov
cmp
adc
rcr
inc
push
sbb
bound
mov
test
inc
inc
mov
mov
nop
mov
jge
jb
dec
pop
inc
aad
call
clc
xor
scas
jae
mov
xor
xchg
ret
lock
pusha
das
popa
pop
xchg
and
call
dec
or
dec
stc
pop
cmp
(bad)
push
nop
jmp
jecxz
jge
push
pop
dec
xchg
sahf
cmc
inc
(bad)
push
scas
pop
xchg
adc
xchg
add
pop
cwde
inc
into
stc
and
je
and
mov
nop
pop
jnp
dec
lahf
call
hlt
clc
mov
test
push
loopne
hlt
jecxz
jae
jmp
daa
jp
or
sbb
dec
fist
shl
push
in
xchg
add
mov
test
mov
cmc
sbb
xor
out
sbb
pop
enter
daa
dec
mov
in
lock
movs
not
push
stos
cmp
mov
mov
cmp
dec
and
mov
int
fisubr
xor
jg
movs
fiadd
ja
mov
jb
pusha
mov
push
cmps
retf
clc
mov
jmp
push
das
adc
out
movs
retf
xchg
stos
mov
retf
xor
dec
push
nop
xchg
mov
inc
jecxz
dec
mov
(bad)
(bad)
addr16
arpl
sti
jle
jmp
mov
cld
fwait
hlt
popa
xor
mov
or
enter
lock
test
stos
xchg
sbb
nop
xlat
lock
mov
and
jno
(bad)
repnz
mov
lock
pop
sti
push
nop
popa
data16
jo
iret
pop
mov
repz
dec
pop
mov
or
lods
popa
adc
sbb
xor
cld
pop
adc
test
in
and
int3
dec
sar
xor
pop
fisub
repz
jnp
adc
jo
mov
lods
add
xor
adc
jbe
jo
in
aas
jecxz
bound
adc
inc
enter
push
(bad)
shl
mov
mov
sub
retf
ds
popa
push
loope
inc
mov
xchg
test
mov
dec
jne
mov
mov
call
popa
jno
jno
and
xor
mov
push
gs
fmul
movs
mov
and
repz
fs
bound
mov
mov
sbb
dec
mov
sub
mov
mov
mov
into
and
mul
shl
jno
mov
adc
pop
sbb
pusha
xor
push
pop
pop
push
test
(bad)
jg
jmp
pop
jb
cmp
dec
shr
push
or
ret
mov
fwait
shl
push
and
shl
test
add
dec
ds
ror
push
or
jp
ror
fwait
cwde
outs
or
fwait
rcr
sub
fld
push
pusha
cmp
push
pop
xlat
adc
rcl
inc
js
cmc
enter
xor
aas
lahf
or
adc
adc
jecxz
fidivr
in
jle
hlt
push
push
add
push
fidiv
dec
mov
test
inc
push
stc
out
lods
in
rcl
sti
cmp
jl
or
ja
add
cdq
mov
jo
and
bound
movs
inc
stc
fist
and
leave
xchg
mov
pop
jecxz
lea
repz
sti
test
into
dec
ret
call
adc
cmp
jmp
sub
fisub
xor
out
das
fst
adc
pop
mov
push
pushf
loopne
rol
mov
adc
xor
shl
sub
mov
add
push
sub
popa
mov
push
pop
push
push
jbe
mov
into
out
jg
xor
or
push
pop
and
add
mov
jbe
adc
jecxz
add
(bad)
sbb
pop
push
pop
outs
in
push
xchg
scas
not
rcl
cmp
cmp
shr
ret
jg
inc
and
(bad)
je
and
call
and
adc
mov
xchg
lock
xchg
pop
xchg
xor
jmp
mov
fidiv
sbb
loop
mov
inc
cmp
mov
sbb
xor
mov
ret
js
js
and
push
and
(bad)
mov
mov
and
cmc
loope
(bad)
xor
sbb
lods
push
mov
scas
pop
jge
inc
iret
jo
sar
push
mov
sbb
sar
enter
test
push
daa
sub
test
stos
xchg
adc
mov
inc
test
sub
sub
push
mov
popa
sub
imul
sub
cmps
lds
mov
mov
pop
sti
dec
or
adc
mov
lahf
and
loop
inc
aad
stos
cs
arpl
mov
imul
test
jno
pop
and
jo
nop
fnsetpm(287
rcr
or
mov
and
cmp
or
loope
std
sbb
(bad)
adc
fistp
fdiv
jle
cmps
or
or
cmp
std
fimul
mov
sub
sub
sub
add
ret
aaa
cmp
out
popa
test
inc
pop
inc
sub
popa
and
push
mov
aad
not
retf
rol
jmp
mov
push
clc
jecxz
mov
or
jno
xchg
sbb
adc
push
verw
inc
cmc
inc
repz
inc
cdq
call
xchg
inc
mov
dec
sbb
das
and
lahf
sub
enter
xchg
stos
push
rcr
adc
in
sub
mov
sub
ss
fcomip
iret
jno
adc
imul
dec
xor
ja
shr
stos
shl
mov
int3
cs
shl
pusha
adc
popa
add
popf
and
mov
popa
add
out
push
(bad)
popa
popa
xchg
or
mov
sbb
pop
(bad)
test
repnz
movs
call
push
sub
movs
aaa
inc
jmp
adc
mov
and
icebp
inc
add
xor
xor
adc
sahf
jb
inc
sbb
or
or
fmul
xchg
das
scas
add
mov
fimul
fs
adc
adc
sar
push
aas
push
push
xor
sub
inc
cmp
and
adc
jbe
out
loop
dec
add
aam
mov
shl
movs
and
mov
es
scas
movs
push
jp
xor
scas
xchg
inc
mov
pop
sar
adc
mov
inc
in
popa
push
inc
clc
into
jo
xor
jo
pop
push
(bad)
mov
xchg
dec
dec
mov
cwde
cs
stc
movs
xchg
sub
bound
loopne
std
and
mov
adc
inc
mov
repnz
push
test
cmp
xor
hlt
nop
mov
enter
ss
dec
fld
pop
loopne
popf
lods
mov
aad
retf
xor
ja
loop
or
inc
shr
sar
jnp
fcom
jge
jg
fld
jp
inc
out
adc
loop
cmp
hlt
mov
pusha
push
sbb
sahf
inc
seto
loop
push
add
ja
shl
adc
adc
inc
lock
jecxz
pusha
nop
mov
imul
adc
xacquire
mov
xchg
sti
push
sub
add
loopne
ret
xor
mov
add
inc
push
jno
inc
jb
fs
(bad)
cmp
imul
adc
clc
push
std
mov
aas
scas
imul
mov
xchg
mov
fstp
jle
ror
lds
add
mov
imul
add
mov
ret
jo
jmp
outs
adc
and
icebp
fadd
xchg
push
sbb
dec
rol
inc
mov
adc
int
dec
mov
enter
mov
xor
std
xor
loopne
mov
xchg
mov
adc
push
xchg
mov
aad
adc
inc
jne
jbe
out
inc
loop
cdq
cmc
pusha
es
call
pusha
jle
inc
push
data16
das
jg
aaa
repnz
sbb
push
lock
jbe
ret
ror
nop
scas
lock
and
mov
ja
pop
out
and
int3
outs
sub
inc
mov
xchg
adc
mov
push
xor
push
xor
ficom
mov
gs
xchg
add
jns
aas
inc
arpl
adc
outs
mov
mov
js
cs
jmp
shl
repz
and
and
xchg
jb
xchg
test
rcr
fucomip
outs
adc
pop
stos
mov
jl
inc
xor
jo
jno
(bad)
dec
cmp
dec
outs
mov
pop
jecxz
pop
cmp
sbb
repnz
dec
pop
xor
loopne
and
nop
scas
imul
es
loopne
mov
call
lds
ja
jecxz
xchg
popa
dec
inc
out
popf
pop
out
test
loope
aad
loope
stc
mov
adc
push
lock
scas
lods
lock
je
fwait
add
sub
call
mov
or
mov
adc
pusha
inc
adc
lock
mov
(bad)
mov
fwait
inc
dec
clc
std
adc
mov
mov
test
and
sahf
int3
cmp
pop
loopne
test
fcmovnbe
push
call
adc
in
enter
test
leave
jo
cld
or
sub
pusha
loope
inc
das
clc
mov
cmp
inc
ret
pop
lds
jo
pop
repnz
jne
mov
rol
jae
test
lock
nop
cld
loopne
xchg
inc
and
ins
int3
popa
mov
adc
loopne
adc
hlt
add
mov
jp
int3
(bad)
fdivr
adc
loop
cs
lock
push
xor
xor
ficomp
mov
dec
retf
hlt
out
movs
(bad)
sub
inc
xor
mov
pusha
dec
jns
and
dec
ror
add
repnz
mov
push
sbb
lods
sti
sbb
xor
ja
inc
xchg
dec
cmc
mov
mov
push
mov
loope
sub
rcr
push
repz
sbb
test
inc
pop
lzcnt
stos
fsub
popf
out
sti
xor
adc
loop
or
jl
mov
aas
sti
inc
cmps
aaa
jo
repz
add
inc
push
sbb
bound
aam
jno
cmp
in
fcomp
lods
jns
jo
and
sbb
cmp
inc
(bad)
das
xchg
fsubr
enter
enter
dec
rol
aas
ins
mov
js
xchg
cmps
sbb
rcl
cmps
inc
push
das
arpl
mov
aaa
sbb
rcr
and
mov
push
loopne
and
into
and
std
ins
cmp
clc
mov
out
mov
cmp
adc
pop
xchg
(bad)
and
dec
daa
les
xlat
jo
pop
push
inc
gs
imul
push
test
mov
icebp
bound
push
adc
push
xchg
cmp
mov
xchg
cmc
mov
loopne
mov
mov
fisttp
and
add
mov
xlat
dec
into
mov
lock
push
jo
ja
and
adc
pusha
aas
add
cmp
shl
jmp
sub
add
mov
test
add
cmc
jo
loopne
popa
cmp
nop
and
inc
add
xchg
stos
pavgw
mov
adc
nop
xor
mov
loop
pop
fiadd
mov
arpl
jo
shr
test
cs
xchg
mov
mov
iret
inc
les
outs
cmp
xchg
and
sub
(bad)
jecxz
inc
js
mov
cmp
and
mov
cmp
call
loope
adc
adc
mov
adc
dec
xchg
mov
cmps
ss
std
cmps
jne
in
xchg
xchg
dec
dec
adc
je
sub
inc
inc
jo
sbb
in
dec
and
cs
mov
js
test
mov
call
pop
adc
inc
loope
pusha
sub
pop
xor
mov
fist
pop
pop
inc
and
jg
push
data16
and
push
or
pop
into
into
shr
xchg
sub
adc
lds
mul
or
xchg
and
jno
movs
test
out
fcom
cwde
push
sbb
add
popf
pop
pop
cmp
(bad)
fadd
mov
adc
xor
stc
mov
(bad)
xlat
and
and
add
adc
ror
xor
jl
jno
les
std
ja
ror
ins
sub
sbb
pop
and
xor
shr
and
and
inc
mov
xor
mov
and
fmulp
aas
std
xchg
jp
sub
std
jne
dec
push
push
inc
out
retf
(bad)
cmp
sbb
(bad)
xor
xchg
gs
jo
rcl
inc
sbb
cmp
scas
jno
sub
or
xchg
(bad)
push
xchg
sub
push
push
or
mov
jae
xor
movs
push
popa
cmp
add
inc
ins
mov
cld
shl
mov
xchg
adc
icebp
pop
nop
xchg
ret
pop
xchg
jp
or
jp
enter
sbb
ja
inc
push
ret
or
add
push
add
pop
push
xor
and
sbb
test
mov
pop
in
nop
stc
cmp
mov
sub
add
rcl
push
adc
sub
pop
xchg
or
jo
test
std
and
ja
clc
inc
inc
or
mov
imul
cwde
imul
mov
stc
pop
nop
adc
arpl
push
clc
daa
out
repz
les
shl
ja
nop
ror
mov
inc
adc
pop
jb
jecxz
mov
mov
es
sub
and
test
icebp
adc
or
les
mov
aaa
mov
xlat
add
js
push
and
shr
ret
or
pusha
push
mov
xchg
xchg
inc
mov
repnz
sbb
push
mov
or
int
int
mov
in
push
xor
xchg
mov
adc
sub
loop
call
mov
repz
stos
dec
popa
push
xor
push
rcl
cdq
xor
sub
mov
xchg
and
(bad)
mov
mov
call
stos
inc
sbb
mov
mov
ins
pop
nop
sbb
dec
mov
push
pop
xor
ret
push
mov
dec
xchg
lods
mov
xchg
in
sbb
xor
inc
imul
call
mov
not
icebp
add
call
dec
shl
fisub
sbb
clc
push
dec
and
loopne
iret
popa
mov
add
adc
enter
int3
xor
sbb
or
push
rcr
or
pop
sub
xchg
mov
arpl
push
fdivr
rcr
(bad)
mov
repz
pop
adc
lods
repz
rcr
xor
dec
adc
pop
in
call
jno
cmp
neg
mov
loop
es
lahf
or
shr
push
es
pop
push
pop
idiv
sbb
adc
sbb
sub
rcl
cmp
xor
jl
movs
xor
mov
inc
shl
in
shl
mov
inc
arpl
jle
inc
inc
dec
push
push
mov
add
cdq
loope
retf
and
jo
aad
aad
xchg
add
inc
mov
aam
ret
loope
dec
lock
mov
sbb
and
inc
sahf
push
sub
cmp
mov
inc
call
xor
lds
call
mov
addr16
lds
shl
popa
daa
push
xchg
and
push
cmc
adc
mov
pusha
dec
call
dec
and
mov
add
ss
xor
pop
lods
test
mov
inc
dec
cmps
dec
sub
(bad)
fild
jmp
dec
and
or
xchg
retf
(bad)
lock
xor
fild
jecxz
and
in
shl
push
pop
xor
mov
lds
repz
sub
cmp
or
mov
lods
adc
push
mov
push
inc
sar
cmps
inc
test
cmp
inc
clc
nop
mov
daa
repnz
cli
mov
aam
(bad)
ins
xor
enter
or
and
mov
mov
jne
cld
test
mov
dec
mov
mov
or
pop
xchg
jo
adc
inc
ja
fdiv
(bad)
neg
mov
jnp
ret
inc
sbb
fs
xor
cmp
sub
fstp
mov
int3
fistp
nop
mov
inc
jns
in
rol
fwait
into
loopne
jp
cmp
jno
cli
icebp
not
(bad)
into
xchg
loope
rcl
mov
sbb
adc
adc
pusha
xor
xchg
xor
mov
adc
les
imul
cs
test
jl
mov
cmp
rcl
popa
mov
adc
daa
mov
inc
fs
pop
icebp
adc
sub
addr16
not
or
test
xor
std
inc
fistp
pop
loopne
repnz
test
inc
push
jnp
or
inc
pop
inc
and
mov
jb
jne
aam
repz
jbe
aas
sub
test
pushf
push
push
mov
xchg
sbb
psubw
push
dec
and
push
mov
mov
rcl
push
jae
mov
mov
and
push
xor
sar
xor
sub
mov
add
ret
mov
mov
(bad)
out
jb
ret
sahf
jl
movs
gs
outs
push
and
js
and
inc
in
dec
inc
mov
fwait
xor
add
test
and
inc
add
pop
shr
pop
fsubr
inc
xchg
mov
aas
inc
in
dec
out
inc
fiadd
adc
cs
sti
or
lock
ret
cli
pop
adc
inc
sbb
std
add
and
pop
sbb
ins
in
xchg
cwde
inc
mov
sub
xor
and
inc
lds
dec
fs
push
add
aam
ins
xlat
xlat
loope
jecxz
ret
or
sahf
jle
pusha
rol
cmps
outs
pop
xchg
clc
and
add
jnp
mov
sbb
pop
fwait
inc
dec
xchg
jg
sub
(bad)
pop
xchg
rcr
int
add
cmp
scas
xor
or
sub
loopne
and
xor
pusha
mov
cmc
jae
cmp
jp
icebp
sbb
repz
jb
lds
sbb
outs
arpl
push
ins
lea
cmps
push
push
test
(bad)
mov
data16
mov
es
cmp
adc
je
cmps
jl
add
clc
mov
mov
outs
xlat
jbe
cmp
jp
xor
pop
mov
pusha
neg
mov
shl
inc
imul
sub
dec
pusha
jae
adc
into
fdiv
popa
jmp
xchg
and
cmps
std
out
add
pop
sub
adc
sub
shr
loop
ins
movs
loope
add
jmp
loop
shl
ror
movs
or
popa
outs
or
pop
ins
data16
in
inc
lock
fdivr
xor
ss
fld
and
or
cmc
hlt
call
add
lods
xchg
push
sbb
and
xor
test
test
add
adc
bound
(bad)
outs
mov
pop
inc
mov
iret
inc
in
mov
loop
add
or
dec
cmp
and
dec
arpl
adc
dec
mov
jecxz
sbb
or
loopne
xor
cmp
inc
fstp
dec
xor
stos
and
xchg
test
fisttp
adc
pusha
mov
mov
push
jo
(bad)
push
sub
test
pop
dec
ret
xor
ret
shl
sar
(bad)
dec
shr
mov
jo
push
mov
mov
bound
adc
lods
jmp
fdivr
into
jo
sub
or
outs
jmp
loopne
lock
in
(bad)
in
xchg
add
xchg
jl
shl
dec
pop
int3
mov
repnz
jmp
aad
push
(bad)
mov
aad
inc
int
jmp
stos
sbb
adc
inc
mov
ret
adc
fs
dec
in
fucomi
in
movs
jo
rol
or
add
pop
mov
repnz
push
das
push
js
mov
mov
stos
call
call
or
mov
(bad)
mov
add
test
(bad)
loopne
cmp
or
loop
xchg
mov
push
(bad)
dec
inc
out
(bad)
push
test
scas
clc
test
sub
and
mov
rcl
mov
cmps
jbe
xor
call
push
je
and
jle
jo
add
mov
mov
jno
arpl
fdivr
xchg
cmp
sti
mov
push
push
xchg
jmp
mov
jnp
fld
shl
add
mov
sub
inc
add
sbb
and
adc
pop
(bad)
lds
adc
mov
inc
and
clc
je
add
fs
ret
sbb
sub
mov
sbb
xchg
xchg
shl
add
push
je
and
rcl
rol
jno
lock
fs
cmp
mov
call
test
sub
test
sub
pop
(bad)
push
out
pusha
push
int3
or
inc
adc
add
jg
dec
sbb
xor
popa
xchg
and
mov
xchg
xchg
jno
imul
cmp
lock
add
(bad)
es
aad
(bad)
pop
pop
or
icebp
mov
loopne
jbe
sub
cld
js
cli
arpl
adc
jns
rol
(bad)
call
add
jno
das
(bad)
dec
pop
pop
out
js
add
xchg
adc
lock
shl
dec
rcr
pop
and
dec
mov
sti
dec
mov
mov
adc
pusha
mov
push
xor
stos
lods
sub
inc
xchg
xor
xchg
not
push
dec
mov
inc
xchg
push
adc
hlt
lock
mov
je
push
add
int
loopne
mov
mov
psubd
mov
fcomp
int3
mov
lock
fwait
adc
dec
add
or
xor
jl
add
cwde
rcr
ret
bound
add
cmp
idiv
pop
icebp
dec
repnz
es
and
xor
cdq
jmp
or
sbb
push
pop
std
sub
or
fs
adc
inc
cmps
and
aas
inc
mul
sbb
nop
test
loop
inc
or
ss
data16
adc
and
and
fs
and
dec
bound
out
mov
test
fs
xor
cwde
(bad)
mov
rol
jle
dec
imul
std
mov
adc
ret
addr16
(bad)
neg
xchg
in
ficomp
jae
push
xor
(bad)
pop
in
jo
mov
mov
dec
test
loop
inc
cmp
pop
and
add
mov
popa
adc
inc
or
icebp
hlt
cs
pop
js
xchg
jge
movs
popa
push
push
dec
loop
mov
inc
leave
outs
and
aam
cli
rcl
mov
adc
fst
push
es
ins
xor
xor
sar
test
mov
jmp
in
add
loopne
cmp
dec
mov
and
jge
inc
lock
jne
and
scas
mov
idiv
xchg
adc
hlt
xor
outs
add
push
repnz
mov
repz
(bad)
movs
mov
add
mov
int
je
ror
lock
push
and
in
out
movs
rol
push
adc
or
imul
jge
in
push
jo
push
sbb
lock
adc
shl
pop
ins
adc
sub
repnz
jb
mov
add
add
fbld
mov
(bad)
pop
push
nop
and
xor
inc
stos
rol
aas
mov
shl
dec
out
sbb
sbb
inc
adc
arpl
movs
bound
add
imul
and
push
sbb
or
movs
dec
ret
movs
dec
mov
push
jmp
sbb
adc
sbb
mov
sub
mov
adc
mov
cmps
daa
in
jmp
adc
pushf
xor
cmp
loop
or
stos
mov
xor
scas
mov
fidiv
pop
jo
enter
bound
fadd
sar
test
into
aad
dec
rcl
push
push
aaa
and
imul
loope
pusha
jb
test
sbb
outs
sbb
dec
xchg
inc
imul
cmp
(bad)
xor
jecxz
cmp
rcr
and
inc
movs
inc
or
inc
mov
push
mov
push
xchg
mov
mov
push
fmul
cwde
inc
sbb
lds
inc
pop
cmc
adc
push
inc
mov
scas
xor
jo
push
mov
pop
mov
(bad)
(bad)
xchg
inc
pusha
test
and
push
mov
mov
rcr
xor
xchg
(bad)
and
mov
pop
push
push
repnz
mov
xor
push
or
mov
lods
push
cdq
lea
cmp
or
(bad)
int
cs
cmp
push
les
vpmacsdql
adc
and
cmp
pusha
das
std
mov
add
arpl
xor
sbb
adc
pusha
in
jl
xchg
je
shl
rcr
stos
rol
mov
mov
mov
div
(bad)
jno
pop
add
popa
xchg
push
imul
loope
xchg
xchg
mov
jnp
cld
cmc
and
cli
data16
je
mov
ds
test
mov
cmp
push
xor
outs
bound
mov
xor
adc
mov
adc
rcl
add
sbb
cld
add
mov
mov
mov
cdq
sar
jbe
push
and
mov
jecxz
bound
pop
out
xor
test
in
sub
movs
pusha
loopne
jge
div
imul
mov
lock
cli
scas
arpl
cmp
pop
push
mov
pusha
mov
test
mov
les
push
pop
xchg
xor
and
(bad)
jne
xor
ja
and
les
jno
adc
aas
add
xchg
dec
popa
and
xchg
pop
fdiv
sbb
ret
stc
arpl
imul
mov
aad
or
pop
xor
shl
dec
out
mov
ja
mov
imul
inc
(bad)
adc
mov
clc
push
cmps
rcr
cmps
repnz
icebp
shl
mov
mov
adc
dec
test
add
int3
inc
ja
shr
adc
jecxz
xor
push
and
jmp
rol
mov
xor
and
jecxz
mov
or
ficomp
xchg
add
scas
stos
xchg
xchg
ret
js
push
loopne
ret
push
fldenv
in
call
inc
dec
lahf
ret
repz
mov
(bad)
jno
sbb
jnp
test
or
and
pop
pusha
and
mov
mov
lock
fwait
jno
ds
xor
leave
or
loop
mov
(bad)
hlt
rcl
repnz
add
adc
in
pop
je
jnp
push
pop
push
inc
push
pusha
sbb
fdiv
sub
aaa
scas
ret
iret
adc
sbb
adc
mov
jecxz
xchg
dec
add
dec
movs
clc
xlat
nop
cli
xchg
stos
push
mov
jg
and
out
push
mov
mov
(bad)
sub
dec
lds
jns
cmp
add
xor
push
jp
test
mov
and
(bad)
xchg
jno
ins
adc
xor
jae
xor
inc
sbb
cmp
and
and
je
nop
stc
shl
push
xchg
inc
les
add
int
inc
jmp
rol
arpl
call
ror
shl
icebp
add
jo
push
test
aaa
xchg
jno
dec
mov
mov
mov
xchg
shl
stc
cmp
fist
add
xchg
ja
mov
mov
pop
mov
jg
sub
xor
inc
push
retf
ss
aam
in
shl
pusha
rol
dec
enter
mov
pop
sub
clc
jbe
iret
mov
push
inc
stc
mov
xor
sbb
aaa
ins
add
fisub
and
inc
js
add
pop
call
stc
sbb
std
mov
std
inc
sbb
or
xor
fsub
adc
repz
jg
shr
sub
imul
lds
xor
mov
mov
sbb
rcl
and
jae
cwde
shl
xor
xor
add
ror
leave
sub
das
xor
inc
add
mov
push
push
xor
push
mov
xchg
xor
jbe
mov
dec
add
mov
adc
sub
pop
and
mov
mov
stc
and
cmp
mov
cmps
nop
inc
cmc
or
scas
icebp
imul
and
add
je
popa
cmp
aad
inc
ficomp
add
mov
loopne
pop
adc
xchg
push
sub
cmp
mov
jne
xchg
or
shl
or
loopne
loopne
add
jg
pop
loope
test
sub
adc
nop
arpl
ds
arpl
mov
inc
push
sbb
mov
mul
inc
push
in
les
add
xadd
lea
sbb
mov
sbb
mov
(bad)
rcl
pop
mov
xor
add
cmps
push
push
inc
adc
fs
push
and
cmps
clc
or
jo
out
inc
cmp
cmp
icebp
mov
mov
xchg
xor
lock
push
xchg
push
inc
test
mov
inc
in
mov
cmc
jmp
sub
fdivr
out
cmps
out
add
push
mov
mov
xchg
push
jno
sbb
jmp
rcl
in
aas
mov
in
and
mov
fstp
and
call
icebp
pop
lods
ins
shl
pushf
pop
shr
xor
es
mov
mov
mov
and
dec
fwait
jno
sbb
mov
aam
sub
and
sub
rcl
ins
xchg
popf
xor
push
loope
jno
jmp
or
loope
push
pusha
cmp
shr
xchg
dec
into
jb
inc
cwde
mov
xchg
ins
in
fmul
inc
outs
xor
dec
or
and
mov
push
jle
mov
push
sub
div
mov
cs
push
ins
pop
mov
pop
or
jns
push
add
movs
inc
push
jmp
ret
add
sub
mov
loope
jb
mov
jae
jne
pop
popf
mov
mov
lock
popa
sbb
mov
adc
loope
(bad)
aas
cld
sub
js
adc
fist
and
add
and
dec
push
gs
adc
and
cmps
bound
jo
ret
and
icebp
dec
fisub
mov
push
jo
hlt
(bad)
dec
dec
and
mov
dec
xor
call
aad
lods
jns
lock
adc
pcmpgtb
dec
cmps
pop
ss
cmps
mov
mov
or
inc
and
stc
xor
xlat
push
sub
xchg
shl
push
pop
paddw
xchg
aaa
xchg
inc
adc
jae
ficomp
xchg
repz
mov
ret
and
clc
mov
mov
call
mov
push
in
jl
dec
(bad)
(bad)
int3
push
fwait
add
enter
repz
jnp
data16
adc
int3
(bad)
(bad)
rcl
loopne
(bad)
bswap
jno
out
adc
fwait
inc
outs
and
xchg
cmp
inc
dec
gs
movs
cmp
(bad)
(bad)
add
arpl
rol
loope
or
sub
jp
fist
mov
xchg
mov
movs
lock
sahf
add
fst
xlat
adc
aaa
rol
mov
aam
cwde
xor
push
pushf
ror
adc
movs
adc
jb
mov
inc
jle
and
movs
(bad)
(bad)
mov
mov
stc
das
mov
enter
mov
loop
retf
cli
sub
out
js
jg
cmps
xor
mov
rcl
inc
xor
sbb
test
add
aas
mov
push
or
inc
bound
sub
sbb
jl
jg
fmul
xchg
repz
adc
and
popa
test
scas
xor
cli
mov
jo
inc
lea
mov
pop
icebp
stc
fadd
sar
icebp
add
aam
push
out
mov
inc
inc
adc
and
cmps
sbb
mov
push
(bad)
sbb
hlt
push
jno
jmp
inc
call
push
(bad)
test
stc
xor
test
fbld
and
in
loope
mov
loope
xor
pop
jle
dec
rol
adc
movs
hlt
aad
clc
mov
sbb
popa
and
jo
mov
inc
push
add
bound
push
mov
xchg
dec
adc
push
sar
inc
dec
ss
adc
mov
push
push
scas
xor
pop
mov
mov
shl
push
stos
(bad)
pop
mov
lahf
mov
(bad)
xchg
ss
ficom
xchg
mov
push
add
cmps
js
or
int3
fcom
adc
cmp
imul
clc
aas
inc
inc
clc
push
mov
xchg
int
(bad)
xchg
sbb
or
xchg
mov
xor
aaa
icebp
and
lods
inc
lock
loope
jecxz
sub
rcl
cmps
cmc
mov
pop
inc
pop
ret
cs
mov
lock
push
outs
out
adc
cmps
add
cmc
cs
xchg
mov
push
loopne
ret
out
out
adc
push
lock
pusha
pop
int
ds
xor
or
movs
cmp
cwde
loop
cmc
dec
mov
in
loopne
add
(bad)
dec
mov
push
jge
push
iret
jo
adc
cmovo
(bad)
mov
test
clc
popf
dec
add
xor
loopne
repnz
push
and
jb
(bad)
xchg
pusha
push
addr16
popa
das
ins
jecxz
test
mov
rol
jo
ds
rcl
(bad)
test
out
mov
lods
sub
rcl
hlt
ss
adc
fs
repz
call
push
pop
add
sub
jmp
aaa
sub
ror
push
aas
lods
in
popf
sahf
add
mov
add
mov
iret
add
rol
and
cmps
ss
ins
test
xchg
mov
lock
jbe
mov
icebp
sub
pop
or
jno
shl
repz
push
mov
icebp
shl
ins
jne
outs
adc
and
cmp
and
mov
xchg
mov
aam
lods
scas
dec
lock
enter
(bad)
sbb
add
jl
xor
adc
xor
dec
enter
popa
(bad)
lock
dec
pop
punpckhwd
sub
and
enter
test
adc
xchg
inc
and
js
jecxz
mov
call
lock
add
mov
mov
jle
jge
cs
push
test
inc
out
dec
outs
adc
call
mov
or
nop
push
ror
xor
adc
mov
icebp
leave
aam
xchg
stos
inc
push
out
loopne
cmp
pop
jg
jg
xor
mov
jbe
mov
push
hlt
or
les
bound
jo
sub
push
adc
sbb
gs
adc
repnz
cmp
or
aam
mov
or
push
mov
mov
sub
inc
jg
sub
fwait
sub
xor
addr16
fcom
dec
mov
call
movs
mov
ret
sub
and
xchg
add
mov
adc
aaa
test
mov
dec
daa
add
pop
jp
cs
(bad)
movs
shl
mov
jmp
inc
jecxz
xchg
add
cmp
cmp
dec
xor
mov
inc
add
dec
shl
mov
add
shl
int
mov
bound
ins
mov
fwait
mov
dec
or
sbb
dec
xor
sbb
stos
retf
sbb
lock
xor
and
iret
jno
les
ins
adc
ds
shl
ret
sar
push
add
adc
imul
jae
jbe
pusha
sub
enter
out
jge
(bad)
cs
mov
mov
mov
addr16
sbb
sahf
out
in
mov
mov
mov
scas
sti
rol
pusha
daa
cmps
cli
push
adc
adc
cmp
loop
xchg
mov
inc
push
movs
ret
pop
int
mov
ss
in
cmp
add
sub
popa
jnp
fst
movs
xor
leave
jno
fisttp
jbe
xor
or
cwde
dec
pusha
popa
xchg
ins
xchg
int3
cmove
pop
mov
ins
mov
add
inc
sahf
sbb
sbb
dec
lock
scas
mov
in
mov
out
hlt
das
sub
or
loopne
xor
and
push
cmp
rcl
jo
push
xor
and
nop
test
out
clc
sbb
push
aaa
rcl
out
dec
jge
sar
and
add
rcr
xor
push
popf
mov
cmc
add
adc
ds
ja
adc
add
(bad)
movs
jns
xchg
sti
cmp
lahf
mov
pop
adc
mov
loope
shl
dec
lahf
xchg
adc
pop
add
mov
mov
push
jg
or
jle
ret
jo
xchg
adc
das
push
popa
mov
int
pop
push
outs
pop
arpl
imul
cmps
push
fsub
loop
out
faddp
push
pop
clc
fnstcw
push
add
bound
iret
add
xchg
fisub
push
ins
pop
lods
into
jmp
scas
xor
lea
pop
pop
rcr
bound
cmps
cmps
cmp
jmp
es
fst
test
dec
loope
mov
xchg
cmpps
xchg
movs
rcl
hlt
add
sbb
xor
inc
daa
xor
mov
ret
inc
xor
jecxz
or
mov
push
add
aas
and
pop
sbb
mov
xor
loope
adc
xchg
enter
repnz
inc
inc
mov
sub
call
ins
mov
enter
xchg
mov
and
adc
icebp
out
xlat
xchg
(bad)
or
(bad)
popa
and
int
or
sbb
loopne
lahf
jo
iret
aad
push
(bad)
and
shr
add
dec
pop
fmul
xchg
lock
inc
jno
mov
in
push
cwde
dec
cmp
inc
loop
xchg
leave
xor
pop
retf
bound
mov
sub
mov
add
(bad)
out
cmps
adc
out
jecxz
push
adc
fbstp
repnz
pop
loop
popa
adc
jne
jns
mov
dec
jnp
push
lock
fisttp
sahf
outs
xchg
push
xor
mov
hlt
in
aad
xor
or
jecxz
adc
cs
bound
daa
in
mov
ss
(bad)
push
test
pop
sar
mov
cmps
test
or
cmps
jp
mov
fdivp
icebp
loopne
push
stc
icebp
push
mov
xchg
fidiv
in
sub
mov
into
cmp
adc
push
sbb
ret
retf
sar
sahf
add
push
jo
mov
push
test
mov
out
aad
fst
jnp
in
gs
(bad)
sbb
jmp
jecxz
sub
ficom
lock
mov
adc
mov
push
add
jmp
fsub
pop
sub
out
xchg
les
scas
xchg
adc
push
fsubr
(bad)
out
fbld
or
push
pmaxub
nop
push
pop
push
adc
inc
jmp
jle
mov
dec
push
or
fs
movss
adc
mov
sub
in
xchg
lock
out
cmp
mov
sub
ss
bound
js
test
mov
xchg
xchg
pop
test
test
mov
je
js
and
(bad)
rol
jbe
push
or
mov
rcr
nop
lahf
dec
mov
cmp
mov
out
pushf
inc
stos
pop
xor
and
inc
mov
fidiv
mov
shl
mov
nop
and
add
icebp
push
lock
jmp
dec
pusha
cli
loop
(bad)
xlat
hlt
xchg
and
das
stc
mov
sub
addr16
push
jecxz
jl
xor
retf
movs
mov
mov
stos
dec
popa
and
ds
ds
leave
rol
adc
ss
out
sar
ror
jmp
mov
icebp
push
mov
loope
shl
je
sbb
jle
jmp
js
push
and
mov
xor
addr16
loopne
push
dec
repnz
shl
cmp
mov
ret
adc
add
fdiv
imul
xor
mov
xchg
xchg
mov
cmp
add
call
bound
int3
mov
mov
lock
dec
stos
and
sub
cmps
xchg
out
aas
jo
xchg
adc
mov
inc
pusha
sub
nop
int
jnp
dec
ins
mov
sub
and
clc
popa
(bad)
ds
mov
and
(bad)
mov
inc
push
icebp
pop
inc
xor
jo
mov
icebp
bound
mov
(bad)
into
adc
popf
pop
cmps
js
xor
loope
out
imul
stos
fidivr
repnz
lods
add
sub
fsub
in
sahf
dec
xchg
outs
dec
nop
lock
in
shl
add
and
cld
mov
lock
dec
mov
mov
mov
fmul
loopne
call
shr
out
inc
and
stos
mov
out
lock
mov
hlt
sbb
rol
mov
call
adc
inc
jns
loopne
cmc
jmp
mov
loop
mov
js
popa
sub
lea
mov
push
loopne
xor
xor
jno
sub
mov
xor
out
imul
stos
inc
mov
das
or
jmp
xchg
push
cmp
sub
push
outs
cmp
or
fcomp
mul
js
ins
mov
lea
xor
and
sub
mov
mov
pushf
push
xchg
mov
inc
pop
or
xchg
dec
std
add
xor
outs
inc
inc
cmp
adc
dec
retf
outs
xor
or
xchg
retf
jl
(bad)
shl
test
xor
inc
push
cs
mov
je
lahf
scas
lock
adc
pop
push
clc
stos
and
lahf
jnp
jp
inc
lea
and
mov
sbb
popf
loopne
xchg
call
fmul
jno
adc
sbb
call
lock
into
ret
and
bound
rcl
pop
mov
dec
jo
jmp
add
mov
jb
push
dec
adc
xor
js
call
pop
sub
loopne
das
adc
sub
jbe
shl
pop
sub
xchg
xor
dec
jecxz
adc
mov
mov
test
clc
(bad)
adc
jo
and
retf
fld
push
push
mov
dec
call
pop
es
xchg
rcr
lock
and
rol
mov
xchg
pop
xor
or
adc
jmp
ror
inc
cld
outs
xchg
mov
add
jl
pop
add
call
test
cli
xchg
arpl
xchg
mov
(bad)
in
sar
xchg
imul
xchg
push
sti
mov
ror
cmp
and
shl
loopne
adc
adc
std
dec
cmp
mov
fnstcw
retf
mov
(bad)
push
and
pop
rol
jne
lock
pop
(bad)
xor
pop
js
xor
in
push
xor
jle
fidiv
push
sbb
adc
stc
dec
rcl
mov
pop
sub
ror
dec
and
mov
push
je
scas
sbb
test
push
mov
hlt
xchg
aas
stos
je
jbe
(bad)
pusha
mov
pop
popa
add
repz
leave
fdiv
out
xor
loopne
add
inc
mov
xchg
lods
push
mov
mov
push
mov
int
mov
ins
sub
pop
xchg
outs
sbb
add
mov
call
loope
and
in
lods
dec
fdivp
imul
or
adc
loopne
push
outs
fadd
mov
cmp
push
add
lea
add
fadd
loopne
push
xchg
mov
mov
mov
out
mov
push
arpl
jmp
out
es
sar
jmp
ja
scas
jnp
mov
xor
mov
cli
mov
jg
xchg
out
inc
jl
(bad)
hlt
nop
clc
movs
fwait
jnp
or
pop
add
ret
sbb
jo
sbb
in
mov
jecxz
xor
shl
mov
push
xchg
rcr
push
and
mov
sub
arpl
adc
add
push
icebp
js
pusha
push
push
jne
add
rcl
mov
and
xchg
xchg
mov
push
add
or
or
cmp
inc
add
nop
add
shl
and
fnclex
adc
jbe
fisubr
push
lea
sar
les
rcr
hlt
mov
inc
xchg
xor
jae
lods
xchg
mov
sbb
push
stos
sub
push
out
xor
fsub
stos
outs
rcl
xchg
push
(bad)
xor
and
sbb
mov
div
mov
xor
in
ret
xchg
push
shl
fwait
adc
push
icebp
mov
sahf
cmps
pop
jno
mov
test
jmp
jbe
jge
fistp
add
add
xchg
adc
sbb
loop
shl
cmp
jmp
jle
(bad)
xchg
mov
xchg
jno
jns
(bad)
push
movs
cld
es
mov
popa
aaa
sahf
pop
adc
mov
push
mov
loop
test
jns
push
jb
arpl
dec
and
mov
loopne
jo
push
or
adc
mov
xlat
scas
shl
unpcklps
push
(bad)
stos
scas
and
rcl
(bad)
sub
shr
push
pop
push
add
adc
aad
adc
shr
pop
(bad)
mov
mov
aas
sbb
jle
xor
not
jnp
and
mov
mov
or
add
sub
retf
sub
and
stc
int
inc
fdivr
lods
cmc
retf
add
fcmovne
sbb
retf
adc
jle
mov
sub
mov
add
enter
sbb
mov
nop
mov
loopne
pop
xchg
or
add
adc
mul
cli
mov
xchg
cmp
pushf
inc
(bad)
js
movs
retf
jmp
loop
and
xchg
mov
push
jbe
cmps
inc
push
scas
test
push
mov
mov
jo
ss
mov
aam
push
mov
ror
add
add
push
jo
xor
push
scas
fstp
pop
add
inc
test
adc
xor
xchg
fld
add
ins
and
lock
xor
stos
nop
fsub
inc
dec
dec
aad
xchg
inc
repz
adc
mov
adc
sub
out
pop
stos
lahf
clc
mov
xchg
int3
rcl
xchg
fcomp
pop
fnstcw
or
cwde
shl
mov
rcl
add
shl
fwait
jmp
retf
jmp
adc
inc
adc
xor
rol
cwde
mov
push
or
lahf
xor
xchg
daa
not
pop
push
inc
inc
fld
jb
xchg
pop
xchg
add
mov
jge
mov
hlt
icebp
mov
pusha
sahf
sub
xchg
sbb
pop
mov
sub
xor
scas
inc
ins
mov
fdiv
sbb
cmp
cmp
clc
pop
push
xor
lahf
mov
pusha
jge
xchg
dec
adc
(bad)
push
xor
test
jne
(bad)
adc
xchg
icebp
mov
xor
jo
jg
sar
sti
push
mov
loopne
push
loopne
inc
mov
shl
lock
ss
sti
xchg
rol
call
nop
icebp
cmp
movs
pop
or
and
ja
xchg
push
mov
stc
fwait
jmp
std
jns
pop
mov
push
loopne
pop
das
jle
test
mov
and
xor
push
arpl
and
adc
popf
or
lock
int3
arpl
push
pop
add
xchg
push
repnz
sub
lock
inc
nop
loop
dec
pop
test
jno
ror
pop
adc
repnz
loopne
inc
fild
xchg
test
push
mov
pusha
adc
pop
xor
or
lock
inc
loopne
cmp
lds
jg
adc
pusha
pop
lock
dec
ins
and
je
cmc
jo
mov
jbe
rol
clc
fnstcw
popf
fs
ret
fdiv
cwde
adc
aad
mov
dec
xor
dec
xor
(bad)
stc
hlt
hlt
js
test
jne
rcl
add
add
fmul
mov
mov
mov
sbb
mov
cmp
cmp
and
adc
pusha
pop
push
hlt
xor
or
cmp
pop
inc
mov
cld
jno
push
push
jp
and
test
scas
int
jo
pusha
xor
lahf
retf
ja
stos
mov
sahf
test
adc
cld
hlt
loop
lock
loope
loopne
jecxz
jp
xor
popa
mov
sbb
adc
rcr
repnz
in
bound
test
js
in
popf
push
mov
int3
loope
xchg
loop
test
and
cli
loopne
add
icebp
and
push
into
(bad)
enter
call
push
push
jmp
dec
or
mov
xchg
rcl
lock
and
push
shr
lock
inc
in
mov
and
adc
jecxz
cld
(bad)
repz
jl
adc
loopne
mov
inc
mov
outs
int3
or
in
mov
pop
or
or
dec
pop
adc
pop
ret
inc
dec
sbb
repz
lock
inc
mov
sub
(bad)
sbb
loopne
(bad)
arpl
push
cmps
repz
adc
pusha
add
hlt
pop
cmps
lahf
inc
rol
out
je
iret
ret
call
xor
add
(bad)
sti
test
cld
lods
imul
out
pop
add
ins
loopne
add
pushaw
xchg
aad
stc
jno
dec
push
shl
inc
fisttp
jl
scas
cmp
(bad)
sar
push
inc
push
jno
daa
pop
inc
xor
fcomi
xor
xchg
xor
mov
adc
out
out
adc
dec
call
daa
push
fisttp
mov
jle
jle
xchg
mov
loope
rol
inc
mov
add
mov
cmp
adc
ror
cwde
jecxz
jmp
call
icebp
xor
out
(bad)
mov
les
out
fbstp
mov
and
sbb
nop
jle
cmp
hlt
xchg
test
nop
add
rol
sbb
in
jne
dec
xlat
arpl
je
rol
inc
loopne
add
mov
mov
cmps
and
hlt
pop
nop
add
fdivr
(bad)
movs
mov
cld
call
bound
push
xor
(bad)
xlat
mov
mov
mul
pop
mov
prefetchnta
xor
xchg
outs
loop
push
mov
jne
jnp
mov
rcl
bnd
in
rol
lock
mov
pop
cmp
jno
bound
inc
pop
mov
and
daa
mov
push
mov
xor
and
inc
or
nop
loopne
shr
and
mov
add
das
in
enter
adc
test
jp
cmp
not
mov
fisttp
in
imul
jo
adc
pusha
cs
sub
mov
ret
iret
(bad)
xor
inc
inc
mov
pop
or
xor
xor
pop
cld
repz
cwde
cdq
push
adc
xchg
shl
out
inc
and
in
cmps
arpl
and
sub
push
mov
xchg
or
ja
loopne
pop
jg
cmp
inc
retf
xor
cmp
xchg
inc
push
lock
scas
and
inc
dec
(bad)
lock
call
jae
push
lock
(bad)
aaa
loop
cmp
push
push
xchg
fsubp
sar
push
leave
sbb
in
popa
es
pop
sbb
mov
add
leave
mov
ret
int3
arpl
sub
sub
test
dec
inc
ds
test
jbe
nop
lods
neg
test
fcmovbe
and
inc
xor
imul
imul
and
in
nop
or
mov
int
es
sub
fisub
cld
mov
jo
inc
xlat
cmps
icebp
cmp
call
clc
lock
inc
mov
inc
dec
jno
jge
and
mov
in
out
retf
nop
lods
loopne
or
mov
add
out
adc
and
or
int
out
mov
dec
xor
jno
popf
imul
push
idiv
or
(bad)
adc
mov
nop
call
mov
add
pop
mov
mov
test
ds
repnz
sbb
aam
(bad)
adc
cwde
xchg
jecxz
loopne
nop
nop
mov
pop
loopne
rol
pop
push
inc
or
sar
pop
inc
xchg
push
cmps
fcomip
fmul
push
movs
in
jmp
out
fcom
jne
xchg
dec
inc
shr
es
dec
enter
or
mov
in
jecxz
lahf
test
lds
sub
jb
popa
dec
aam
push
pop
int3
ins
sti
lea
cmp
adc
ret
xlat
add
push
push
out
stos
mov
push
loopne
fdivr
push
aad
mov
js
inc
and
call
loopne
pusha
test
and
fwait
int3
sub
mov
sub
jg
jg
inc
out
pop
idiv
and
cmc
push
test
bound
xchg
dec
aam
dec
aad
lock
pusha
mov
cmp
pop
pop
jb
ja
icebp
add
mov
rcl
rcr
lock
nop
mov
add
int
xor
or
out
arpl
scas
loop
enter
(bad)
pushf
mov
xchg
mov
sub
add
push
sahf
xchg
pop
xchg
mov
mov
dec
add
xchg
ret
cmps
ss
pushf
xor
inc
stos
scas
in
cs
jo
jmp
mov
fisttp
xchg
leave
div
xor
add
push
enter
in
add
or
pop
call
adc
and
arpl
(bad)
ret
add
(bad)
mov
lock
rcr
fimul
mov
add
call
sub
loope
sbb
and
lock
mov
loopne
push
xchg
mov
(bad)
(bad)
in
shl
jo
ret
fyl2x
adc
lea
clc
dec
mov
stos
sbb
fcom
cwde
(bad)
adc
xor
adc
ins
cmp
dec
clc
xchg
xor
or
scas
jb
mov
rcr
mov
shl
aaa
arpl
mov
push
ja
addr16
fidiv
and
(bad)
xor
dec
pop
mov
push
mov
pop
es
push
adc
jl
in
dec
frstpm(287
jb
shl
loopne
int3
adc
jle
fiadd
xor
jp
jg
pop
repz
loope
add
and
pop
push
fdiv
pop
(bad)
shl
pop
mov
push
and
das
loopne
or
fst
mov
fbld
stc
push
rol
dec
js
push
mov
push
or
jecxz
(bad)
loopne
jle
ret
mov
sub
pop
mov
jo
dec
ret
leave
rol
out
fisttp
movs
cmp
outs
push
jecxz
pop
fs
adc
(bad)
icebp
das
sbb
and
adc
out
sbb
jl
rol
add
push
ds
bound
inc
loopne
dec
test
sub
pop
jbe
(bad)
sahf
sub
js
pop
and
(bad)
dec
nop
dec
push
inc
push
(bad)
aam
lods
fld
cmp
adc
push
and
cmps
push
adc
jb
jmp
sar
mov
shl
xor
adc
sub
(bad)
fadd
and
mov
xor
je
(bad)
dec
imul
pop
pop
or
imul
push
lahf
leave
in
icebp
fdivr
cld
jmp
sbb
aaa
js
sahf
and
mov
sbb
rcl
mov
cmps
aam
loope
outs
pop
jae
or
push
int3
mov
ja
sbb
out
call
ret
push
xor
sub
loopne
mov
push
add
bound
adc
cmc
dec
fst
inc
xchg
loop
sub
mov
call
xor
jo
jae
and
ins
adc
xchg
mov
or
xchg
xchg
adc
pop
xchg
jns
xchg
sub
mov
call
fnstenv
jmp
and
jnp
push
push
push
lock
and
lock
inc
shl
call
sub
inc
sub
sub
lods
mov
and
cmps
rcl
push
sar
loopne
fs
pop
fwait
xor
aam
sub
cmps
sbb
les
mov
mov
inc
je
ss
in
loop
dec
jge
repnz
(bad)
retf
fist
jne
in
mov
add
shl
inc
inc
call
pop
inc
inc
shl
pop
sahf
nop
add
jg
cld
popf
in
aas
fist
cwde
sub
scas
sar
stc
adc
(bad)
mov
rol
pop
add
icebp
repnz
sub
ins
arpl
xchg
ficomp
jo
and
lea
retf
xchg
and
sub
xchg
jl
jecxz
inc
inc
inc
or
push
stos
mov
inc
inc
mov
xor
test
push
xor
mov
ret
push
nop
rcr
xchg
imul
or
jle
push
push
shl
pop
add
ja
imul
test
jp
jno
popa
xchg
sar
pusha
aas
push
or
add
jno
jle
shl
xor
jmp
inc
mov
pop
xor
jl
popa
jb
ins
add
jg
imul
sbb
sbb
add
pop
mov
jmp
pop
loope
and
in
sahf
push
xchg
pop
add
push
aas
or
js
shr
int3
add
push
push
imul
mov
bound
ret
xor
arpl
movs
ret
add
push
out
and
int3
dec
sub
xor
js
jmp
imul
inc
and
sbb
inc
adc
loopne
mov
rol
push
int3
loopne
jg
or
cmp
adc
jno
xlat
iret
test
or
adc
shl
inc
shl
mov
mov
mov
leavew
ror
dec
mov
xor
mov
mov
clc
mov
out
shl
scas
or
pop
mov
inc
mov
bound
mov
dec
aam
loopne
shl
push
jo
or
sbb
xchg
sbb
arpl
inc
and
push
inc
imul
adc
cmps
and
enter
iret
adc
arpl
push
fsub
mov
gs
(bad)
pop
rol
or
leave
add
and
add
outs
jl
mov
lahf
arpl
les
xor
pop
enter
adc
inc
or
jns
sbb
fmul
popa
jmp
fs
cmp
jl
shl
cmps
sbb
and
and
div
mov
add
shl
and
sbb
inc
sub
mov
sub
lea
push
xchg
xchg
xchg
nop
mov
jbe
jno
ja
dec
inc
popa
test
scas
jns
push
xchg
cs
cmc
push
add
jmp
cmps
jg
ret
and
mov
sbb
sub
and
xchg
adc
and
fisub
mov
xor
push
mov
xor
or
movs
loopne
mov
and
mov
xor
and
arpl
pop
enter
(bad)
adc
mov
push
addr16
call
and
push
div
dec
scas
aad
inc
cmp
mov
mov
mov
ret
inc
cmovg
adc
and
(bad)
popf
nop
mov
call
mov
adc
in
outs
adc
in
xor
xor
push
cmp
sbb
shl
cmps
lock
ds
adc
jg
stc
sar
push
pop
mov
add
outs
jne
daa
(bad)
das
cmps
cld
dec
jbe
fucomp
adc
mov
inc
sub
leave
push
leave
jnp
(bad)
xchg
jmp
xchg
in
add
sti
jno
rcr
lock
loop
ror
add
cmp
pop
(bad)
fcomp
inc
mov
fldcw
mov
mov
xlat
and
push
rol
mov
nop
xchg
movs
fs
push
std
(bad)
xchg
jno
leave
lahf
aam
loopne
popf
es
sbb
or
xchg
mov
je
cmp
mov
frstor
mov
xor
stc
mov
mov
aad
mov
mov
out
pop
and
xor
add
sub
test
(bad)
xor
mov
ficom
addr16
pop
and
out
push
xor
xchg
xlat
test
in
fidiv
push
loopne
ror
arpl
jae
adc
stos
jo
adc
mov
rcr
rcl
repz
mov
jle
mov
add
pusha
(bad)
fidivr
repz
cdq
xor
cdq
inc
mov
lock
test
jecxz
movs
inc
outs
repnz
or
push
retf
inc
movs
adc
xor
stc
outs
jb
sbb
frndint
push
imul
clc
add
add
mov
xor
and
mov
clc
shl
and
pushf
dec
mov
ret
mov
enter
inc
add
xchg
outs
shl
sub
hlt
fucomip
and
(bad)
sub
or
pop
mov
shl
out
out
pop
rcl
nop
jmp
inc
xor
nop
stos
(bad)
stc
dec
pop
fistp
push
inc
jb
ret
pop
nop
mov
mov
cmp
shl
sar
cld
add
(bad)
mov
sbb
xchg
mov
sbb
lods
jp
js
mov
xchg
or
arpl
sub
cld
push
sahf
fadd
fsubp
cmp
inc
inc
push
add
fdiv
xor
sub
mov
mov
call
sub
jbe
dec
fmul
lock
mov
aam
push
xchg
pop
mov
xchg
pop
or
je
mov
ds
inc
ret
mov
mov
loopne
out
mov
mov
cld
or
or
pusha
(bad)
xor
inc
adc
std
mov
(bad)
into
push
repnz
out
inc
dec
loopne
mov
pusha
mov
and
fild
(bad)
jne
fisubr
sub
xor
fcom
add
repz
vcvttss2si
cmps
xchg
push
cwde
jno
mov
scas
loopne
popa
inc
es
test
imul
jecxz
mov
int
pop
nop
rcl
jne
ret
das
jno
inc
test
shr
jno
movs
sub
dec
and
push
lods
cmovo
add
inc
sbb
add
sbb
inc
inc
xor
jl
out
popf
(bad)
into
pop
mov
mov
inc
jb
mov
push
or
mov
pop
lea
ret
cdq
inc
pop
and
retf
rcl
or
sub
sbb
push
jns
xchg
add
(bad)
mov
and
mov
jecxz
cdq
psrlq
inc
loopne
xchg
cmp
inc
xchg
pop
inc
std
rol
xor
adc
and
mov
shl
sbb
sbb
jge
sti
arpl
sar
fwait
xor
dec
xlat
pusha
jmp
(bad)
mov
pop
inc
or
and
add
push
shl
xor
xor
mov
inc
out
stos
push
cmp
jbe
add
ds
call
lods
mov
or
ins
ror
push
rcl
jne
aaa
ja
adc
jbe
sbb
mov
pop
mov
sbb
loope
cld
mov
jno
in
and
lea
or
mov
bnd
popa
jmp
mov
push
ret
rol
push
mov
push
adc
cmp
cwde
(bad)
cwde
pop
(bad)
pop
test
pop
(bad)
pusha
cwde
out
cmp
xor
jg
mov
xchg
inc
sahf
add
jbe
and
daa
arpl
inc
and
and
popa
cmp
adc
movs
lock
mov
sub
jbe
adc
jno
scas
xchg
lock
setb
mov
rcl
rcl
stc
xchg
mov
push
rcl
dec
push
add
xor
aam
or
pusha
cli
and
nop
mov
int
add
cs
adc
adc
and
addr16
add
adc
sti
xchg
into
jbe
xor
ds
adc
jp
and
adc
sub
xor
cmp
dec
aam
and
and
clc
shl
add
aam
test
add
mov
add
sbb
cmp
and
lock
xor
rol
nop
sbb
mov
andps
clc
dec
std
add
mov
cmp
shl
popa
jb
mov
in
sub
mov
adc
dec
repnz
fucomip
xor
in
adc
xchg
dec
pusha
loop
push
pop
pop
mov
jae
cmp
or
loopne
fcmovb
repnz
jg
push
dec
adc
sbb
fadd
sbb
ins
repnz
xchg
dec
clc
jmp
push
add
pop
aas
js
adc
inc
(bad)
mov
xchg
out
mov
and
fsub
sub
out
fdivrp
div
std
or
fwait
jmp
dec
and
sahf
enter
mov
shr
mov
push
cmp
inc
mov
inc
sub
addr16
and
rcl
pop
repz
out
sub
push
pusha
into
xor
(bad)
xor
popa
fst
and
iret
daa
dec
xor
ds
jo
loope
pusha
inc
mov
adc
and
jbe
pop
loopne
cmps
out
xor
inc
inc
pavgb
cmp
mov
ja
sbb
lds
jo
bound
bound
aam
fwait
cwde
div
hlt
fcmovb
push
mov
lea
out
add
dec
push
xlat
loopne
xchg
jo
iret
and
icebp
cld
adc
cmp
push
ins
mov
add
mov
xchg
mov
jb
arpl
xor
mov
in
sub
scas
xor
pusha
imul
or
push
pop
jo
fsubr
in
sbb
ret
sahf
sub
xor
imul
inc
cmp
sti
pop
mov
dec
movs
add
jae
lock
test
xchg
loope
fdiv
add
jp
add
mov
sti
ja
pop
gs
push
out
jmp
dec
loopne
adc
adc
lds
or
pop
add
jno
and
popa
out
fsub
or
fxch
sar
adc
push
jo
mov
sub
sbb
cdq
call
cmp
fisub
leave
(bad)
dec
or
mov
lods
xchg
addr16
bound
add
nop
cmc
xchg
inc
jns
adc
pop
aas
fcmovnb
adc
nop
test
dec
movs
adc
rcl
sub
mov
xor
sub
dec
adc
push
bound
cmp
push
mov
stos
xchg
push
rcr
push
add
mov
(bad)
out
xchg
jmp
fiadd
bound
jns
loop
adc
cli
ins
pop
fstp
add
jmp
out
fimul
stc
cmps
add
mov
and
cmp
setnp
jnp
adc
imul
jg
ins
inc
xor
mov
push
ins
or
fimul
push
mov
cmp
out
xor
sbb
and
and
call
jnp
sbb
imul
push
and
sbb
xor
pop
add
(bad)
fadd
shl
mov
(bad)
(bad)
pop
cwde
adc
and
cmp
lahf
clc
push
push
movs
icebp
jno
sbb
fwait
ja
mul
mov
mov
les
adc
icebp
xchg
fcomp
push
push
arpl
retf
rcr
ret
sub
xor
hlt
push
test
add
pop
push
inc
mov
dec
fstp
inc
jmp
jl
push
ss
sbb
mov
pop
pop
movq
scas
js
scas
movs
mov
fbstp
inc
inc
mov
and
add
enter
jo
mov
pop
cmp
mov
enter
inc
pop
inc
or
test
repnz
push
dec
inc
leave
jecxz
nop
mov
(bad)
seto
xchg
pusha
adc
mov
ds
shl
cmp
shr
(bad)
mov
and
xchg
cmp
(bad)
nop
push
inc
and
xor
scas
inc
and
data16
and
xor
and
push
fs
inc
jne
xchg
cs
inc
pop
dec
sbb
call
cmp
nop
and
retf
mov
pop
mov
mov
xlat
mov
ins
in
mov
mov
mov
push
jo
stos
dec
mov
sbb
idiv
aaa
dec
mov
xor
(bad)
std
(bad)
aas
sub
push
jne
fcmovbe
fstp
push
repz
shl
xor
jp
push
mov
sbb
(bad)
fcmovnb
rcl
mov
je
mov
imul
mov
add
and
pop
mov
push
call
dec
call
dec
jb
adc
in
fsubrp
adc
loop
adc
call
cmp
clc
dec
add
adc
xchg
pop
movs
push
xchg
ret
or
stc
or
dec
mov
mov
push
jp
loop
push
ret
xor
movs
adc
inc
adc
sbb
inc
imul
add
pop
jmp
loopne
pop
dec
fadd
icebp
rcl
mov
and
cwde
inc
sub
jo
mov
jecxz
ja
jo
out
add
lds
jno
hlt
icebp
daa
in
xor
xchg
popa
inc
adc
or
dec
imul
scas
mov
stos
rol
ror
out
xor
push
jo
fldenv
mov
push
rcl
and
aad
scas
mov
adc
rol
ins
and
xor
adc
adc
sbb
std
xchg
lock
jp
xlat
push
aaa
pop
inc
out
sar
and
call
mov
stos
std
xchg
test
xlat
xor
popa
mov
jmp
xchg
cmp
loopne
jecxz
push
int
ss
clc
sub
jns
pop
enter
shr
and
jae
mov
xor
add
out
adc
out
jae
idiv
push
or
pop
add
add
retf
icebp
gs
mov
jno
cmp
push
and
add
ror
imul
pop
push
mov
int3
push
rol
js
add
xor
cmp
xor
cmp
rcl
ret
jne
jo
bound
loop
and
dec
call
add
mov
mov
js
test
lock
sbb
dec
js
and
pop
lds
(bad)
cmp
(bad)
cmp
push
rol
and
inc
inc
ror
mov
hlt
push
dec
jp
out
rol
pop
sar
dec
arpl
pop
loopne
mov
mov
sahf
add
bnd
stc
mov
push
cmp
push
adc
sbb
fsub
pop
adc
pop
into
js
or
call
cmp
retf
movs
(bad)
sti
add
xchg
mov
int
call
jge
mov
ins
aas
out
fwait
inc
cli
sbb
mov
and
leave
popa
mov
dec
pusha
pop
cmp
inc
(bad)
fadd
pop
adc
popf
push
xchg
xchg
test
movs
xor
arpl
sub
imul
xor
or
add
loope
adc
xor
rcl
push
pop
ror
lods
lock
ins
lock
sar
jno
(bad)
jge
or
inc
hlt
cmp
xor
or
loopne
add
movs
mov
add
jbe
cmp
push
add
cmp
movs
mov
(bad)
je
sti
mov
add
adc
inc
dec
bound
xor
jne
add
repz
xlat
lock
xor
adc
xor
repz
lahf
(bad)
cmp
daa
add
and
test
daa
loop
xchg
cs
jbe
mov
sub
mov
inc
xor
cs
sub
cdq
movs
add
scas
and
sub
sub
cmp
clc
daa
sbb
push
stc
mov
out
icebp
mov
adc
(bad)
js
ins
loop
sub
mov
sbb
sbb
test
fcom
jbe
imul
sar
dec
mov
pop
adc
add
cmp
push
(bad)
xor
(bad)
mov
stos
add
push
int
clc
inc
add
jnp
and
movs
push
test
mov
pop
xchg
jle
data16
clc
pusha
or
sbb
dec
lock
dec
push
movs
cs
mov
xor
in
rol
mov
push
cmps
and
ret
out
push
fadd
retf
xchg
mov
adc
push
push
xchg
mov
pusha
dec
jno
imul
sub
adc
fild
nop
jae
fisttp
cmps
shl
add
add
mov
loope
jo
inc
mov
loopne
xor
xchg
out
jle
xchg
cmp
xor
mov
push
and
mov
push
push
lods
loop
mov
nop
inc
push
aam
and
xor
push
xor
ins
outs
inc
popa
jno
popa
sub
xchg
add
icebp
mov
inc
mov
ror
mov
jl
es
cmc
stos
(bad)
out
inc
mov
and
push
rol
inc
inc
pop
fisttp
add
bound
lods
xor
ret
mov
mov
mov
icebp
fwait
jne
sub
call
loopne
js
neg
xlat
lods
add
mov
mov
cmp
adc
adc
xlat
xlat
push
add
xor
test
pop
pop
sub
mov
outs
inc
xor
jo
ja
mov
into
jb
ror
scas
mov
(bad)
jmp
xlat
or
int
out
movs
sbb
sbb
stos
shl
mov
and
mov
test
jle
dec
xchg
fnsave
shr
add
mov
rol
cmps
push
adc
test
adc
or
out
jmp
scas
mov
mov
mov
loop
pop
add
mov
sbb
cmp
mov
ret
mov
inc
ja
jmp
lods
dec
ss
arpl
cmp
adc
adc
mov
jmp
lods
cmp
dec
int
adc
adc
mov
xchg
push
mov
push
sub
push
and
xor
(bad)
retf
xchg
mov
and
or
mov
scas
xchg
xor
mov
fbld
mov
xchg
call
mov
cs
cmp
and
add
jo
ficom
xchg
jo
cli
dec
repnz
xor
dec
(bad)
cmp
adc
movs
inc
ret
add
aaa
pusha
das
hlt
add
adc
aaa
sbb
xor
lods
enter
lock
xlat
addr16
cdq
add
(bad)
out
ins
mov
add
jg
imul
sub
js
loope
cld
ror
xchg
mov
sar
aaa
stos
pop
inc
add
pop
add
test
(bad)
xchg
xchg
xchg
xor
xor
xor
jo
mov
js
push
xchg
mov
(bad)
mov
mov
aad
and
mov
adc
inc
mov
cmps
pop
gs
(bad)
fdiv
cmp
shl
loope
sub
sub
rcr
mov
jecxz
and
dec
and
daa
ins
sbb
jle
mov
inc
(bad)
scas
xchg
out
mov
(bad)
push
pop
adc
mov
pusha
and
mov
mov
pop
sbb
ret
call
inc
cld
call
rol
test
add
mov
mov
jle
and
hlt
inc
test
ss
cmp
mov
mov
test
(bad)
xor
adc
inc
adc
xor
fistp
or
xchg
outs
loop
(bad)
das
loop
in
xchg
lods
retf
push
in
imul
xchg
jbe
clc
call
ffreep
mov
pop
mov
fs
fcomi
inc
mov
xor
popa
cmp
fs
leave
enter
pop
mov
(bad)
das
mov
xlat
adc
fcomp
outs
xor
loopne
arpl
fadd
test
push
cwde
cmp
jo
or
cmp
(bad)
pop
fwait
(bad)
fidiv
sbb
dec
loop
push
sub
pshufw
xchg
mov
and
push
pop
movs
dec
shl
sub
jno
(bad)
xchg
push
ds
fsubrp
in
popa
mov
push
icebp
add
(bad)
adc
adc
das
loopne
push
xor
dec
mov
icebp
dec
(bad)
pop
mov
mov
pusha
(bad)
scas
add
xchg
cmps
into
and
das
push
mov
icebp
repnz
loopne
mov
or
xor
or
xchg
cmp
or
mov
add
test
aam
(bad)
clc
push
add
fnstenv
sbb
sub
rol
xor
in
lds
outs
lock
xor
pop
pop
pop
xor
rol
pop
sar
repnz
jns
mov
les
stc
ins
or
inc
retf
mov
and
push
push
loopne
ret
xor
add
jle
in
or
and
push
mov
retf
enter
jmp
fcmovne
and
jae
dec
loopne
inc
rcl
adc
jnp
add
sub
dec
sbb
sbb
mov
sbb
jl
mov
jle
mov
(bad)
icebp
aam
outs
(bad)
mov
push
add
es
fcom
mov
xchg
test
pop
sbb
lea
daa
xchg
jb
dec
push
icebp
jp
xchg
sub
je
pop
retf
aam
rol
mov
(bad)
pusha
mov
pop
and
xchg
cmp
and
ror
add
mov
ror
lea
ss
in
dec
mov
cmc
outs
ret
ins
pop
aam
mov
aam
or
inc
mov
xchg
and
add
nop
xor
and
shl
jo
mul
and
idiv
adc
mov
fld
lods
fist
test
loopne
cmp
lea
inc
sub
add
pop
inc
push
out
pop
imul
leave
jo
inc
enter
addr16
pusha
adc
jo
jecxz
mov
test
cmps
mov
adc
xor
cs
shl
mov
fnsave
lea
scas
(bad)
aad
(bad)
push
jb
pusha
push
or
mul
icebp
lods
fs
cmc
test
sbb
jl
xor
mov
jo
test
hlt
and
lock
mov
(bad)
xchg
push
push
xor
pop
xchg
cmp
test
mov
scas
rcl
inc
scas
and
test
inc
cmc
popa
sub
shl
scas
adc
mov
inc
icebp
sub
xchg
add
pop
mov
pop
ret
mov
das
ins
xor
xor
jge
shl
xchg
push
movs
fs
fwait
or
push
outs
mov
mov
popa
popf
jno
dec
out
jae
pop
xor
xor
ror
cmp
add
mov
and
jb
inc
aaa
xor
(bad)
icebp
sub
jno
popa
sti
rol
dec
mov
pop
add
popa
push
retf
jle
adc
fisttp
pmovmskb
mov
test
pop
and
cs
popa
(bad)
add
inc
cmp
ins
jg
js
mov
mov
sub
lock
push
leave
sbb
nop
sub
jo
inc
pop
ins
ins
inc
imul
lock
push
std
mov
into
nop
sbb
stos
xchg
nop
clc
lods
jno
fadd
push
fdiv
and
inc
bound
inc
jecxz
fdiv
mov
sbb
add
(bad)
jle
ss
mov
xchg
push
mov
pmuludq
ins
out
scas
xlat
cmp
mov
arpl
in
push
jo
adc
push
pop
mov
inc
sbb
xchg
inc
cmp
sbb
lock
test
imul
(bad)
inc
pop
adc
add
(bad)
mov
rcl
mov
pop
pop
push
inc
ss
ja
xchg
xchg
add
xchg
dec
nop
sar
push
rcr
inc
fild
ror
pushw
shl
push
xor
adc
add
jecxz
cmps
pop
adc
les
and
jg
outs
call
mov
cs
lds
hlt
out
movs
jno
adc
fst
mov
fcomp
adc
dec
xchg
nop
inc
push
and
loopne
out
sbb
sbb
jmp
xor
and
xchg
mov
adc
xchg
ins
adc
sbb
imul
js
jg
fbstp
ficomp
ror
sub
sahf
jo
lods
xchg
retf
dec
test
cwde
dec
ficom
dec
and
(bad)
xor
shl
dec
loopne
shl
ss
ss
movs
push
adc
cs
adc
rcl
adc
popf
xchg
mov
xchg
nop
adc
jmp
push
and
inc
sbb
lahf
sahf
mov
add
cs
and
push
lock
stc
inc
xor
add
adc
mov
rol
sti
adc
cmp
and
lock
push
jmp
jmp
lahf
adc
adc
fld
loope
in
dec
mov
and
xor
or
das
fistp
mov
test
inc
add
out
xor
jo
call
je
inc
loope
lock
xchg
push
xlat
push
xor
or
mov
sub
and
call
jns
sub
shl
xor
stc
inc
xchg
and
ficom
aaa
rcr
push
xchg
imul
push
shr
aam
sbb
adc
dec
rcr
sar
xchg
push
test
push
outs
push
or
push
mov
shl
mov
jae
xor
add
dec
adc
dec
mov
add
mul
ret
jmp
aam
and
mov
or
cmp
add
jnp
jmp
xor
sti
data16
call
inc
stos
jo
and
pushf
and
fwait
mov
iret
das
fnstsw
xchg
clc
sub
mov
adc
xor
imul
call
movs
in
js
int
iret
rol
and
jl
mov
or
push
pusha
cmc
mov
test
cmp
mov
xor
add
sbb
add
mov
push
ins
(bad)
nop
in
(bad)
std
mov
adc
xor
call
push
xchg
stos
js
or
imul
movs
(bad)
icebp
mov
mov
pushf
fs
call
mov
jecxz
xor
adc
and
jo
shl
and
push
and
jae
mov
loope
mov
inc
in
add
div
fisttp
test
pop
inc
add
clc
sbb
jo
je
popa
retf
ret
mov
mov
imul
shr
imul
jne
pop
xchg
mov
popf
cmp
shl
mov
cmp
jo
pusha
and
jno
mov
scas
mov
clc
sar
repnz
enter
jmp
xor
push
add
das
scas
cld
and
fisubr
mov
xor
movs
push
pop
pop
xchg
lea
out
sub
nop
add
jne
imul
or
mov
mov
enter
(bad)
mov
je
arpl
push
ins
int
jo
ja
(bad)
sbb
out
sub
shr
ret
popa
rol
shl
xlat
ja
jl
and
mov
xor
and
in
loopne
jg
mov
cmp
adc
adc
push
sahf
adc
mov
out
mov
leave
push
ss
push
and
and
inc
rcl
(bad)
clc
xchg
std
push
sbb
je
inc
rcr
adc
mov
push
shr
loope
hlt
popf
xchg
fcmovbe
outs
push
sbb
pop
and
scas
xlat
cmp
shl
(bad)
fnstenv
retf
imul
sub
sub
xchg
and
sub
xchg
push
lds
shl
lds
inc
cmps
in
jbe
stc
dec
nop
loop
push
jne
popf
jno
mov
dec
xchg
pop
std
aas
shr
add
test
aam
fcom
add
lock
(bad)
pusha
mov
jnp
scas
loope
sub
out
mov
jbe
jmp
adc
or
mov
dec
mov
and
fs
adc
out
nop
leave
sbb
mov
xor
test
add
(bad)
jmp
pusha
lock
inc
jb
pop
inc
add
mov
adc
push
sub
loopne
xchg
push
repz
mov
popa
cwde
push
mov
call
call
xor
ret
addr16
lea
inc
push
push
mov
xor
hlt
jecxz
push
push
adc
jne
scas
or
add
(bad)
icebp
xor
gs
js
pop
sub
out
out
outs
repnz
arpl
ins
nop
add
pop
popa
mov
adc
popa
test
shl
dec
mov
pop
mov
arpl
mov
push
xor
lods
adc
push
push
mov
cmp
xchg
mov
in
and
jbe
sub
cmc
push
and
cmp
add
mov
cwde
cmp
xchg
xor
mov
jb
nop
inc
outs
jecxz
test
mov
div
loope
mov
mov
xchg
jmp
loope
cmp
call
xchg
jg
push
rcl
jbe
jo
sar
fbld
(bad)
adc
and
inc
mov
pusha
xor
cdq
push
mov
mov
push
nop
and
mov
into
sub
xchg
xchg
pop
mov
pop
jno
test
inc
ret
imul
inc
jl
jmp
xor
sub
sbb
sbb
mov
stos
dec
push
sbb
loope
cmp
and
push
add
xor
and
lock
daa
and
test
test
sbb
mov
movs
and
add
push
inc
jo
jbe
adc
scas
cmps
loop
cmc
in
push
or
adc
push
xchg
shl
sbb
adc
cmp
push
bound
adc
movs
cmp
ret
xchg
jl
fnstenv
inc
sti
aas
ss
or
fs
adc
out
mov
cmps
sbb
das
mov
outs
rcl
and
data16
cmp
mov
adc
mov
xchg
pop
push
sub
cmp
push
adc
pusha
mov
jge
or
mov
fucomi
pop
push
arpl
inc
jne
(bad)
mov
mov
mov
jmp
test
sahf
jo
add
out
inc
(bad)
loopne
lock
push
sub
mov
loop
mov
jbe
push
push
add
mov
test
in
cmps
cmps
cdq
pusha
jnp
lods
rcr
or
xor
loop
add
jle
aad
and
jnp
lahf
je
mov
or
pop
push
add
and
icebp
popa
and
mov
sub
push
dec
or
(bad)
mov
std
jb
inc
push
xlat
xchg
lods
xor
inc
sub
inc
push
bound
sbb
imul
nop
mov
gs
neg
mov
cs
cmps
xchg
mov
addr16
sahf
enter
pop
test
sbb
in
out
aas
test
add
mov
sar
jne
jle
call
mov
adc
push
pop
cmp
cmp
mov
shl
lods
leave
push
and
inc
pop
mov
std
or
(bad)
mov
xchg
pop
aas
dec
xchg
call
pushf
cmp
(bad)
sub
test
jbe
popa
in
jmp
imul
ret
ja
fs
mov
inc
or
add
jl
xchg
stos
imul
and
pop
and
and
inc
sbb
inc
mov
in
fidiv
xor
and
xor
retf
aam
rcr
sub
pop
xor
repz
add
rcl
sbb
pop
movs
pusha
ins
mov
fsubr
jle
adc
daa
std
xchg
lods
leave
outs
bound
dec
mov
in
push
inc
fisub
dec
enter
jp
das
mov
(bad)
sbb
mov
mov
add
and
cmp
pop
mov
mov
xchg
clc
mov
adc
xor
jg
inc
cmp
inc
inc
or
mov
es
dec
pop
lds
jecxz
fcomp
and
aas
xor
inc
icebp
push
repnz
xchg
movs
call
shl
ins
mov
mov
stc
mov
xor
cmps
mov
or
lock
sar
mov
and
fild
add
push
push
adc
repnz
(bad)
mov
mov
inc
add
mov
lahf
out
scas
bound
mov
adc
aaa
test
mov
and
cld
nop
mov
mov
push
add
xor
ss
mov
adc
out
ret
ret
shl
pop
mov
jecxz
jo
daa
mov
add
inc
mov
or
(bad)
mov
out
sbb
inc
ret
jno
mov
push
cmp
xchg
add
rcr
sbb
out
fadd
es
(bad)
push
inc
clc
and
and
pop
inc
mov
inc
in
outs
loopne
xor
and
cs
lods
mov
addr16
pusha
adc
push
sar
sbb
out
push
hlt
dec
and
nop
push
jno
shl
mov
push
icebp
test
adc
cmps
push
pop
loop
and
sahf
mov
sbb
xchg
mov
sbb
sub
(bad)
lock
(bad)
hlt
call
sub
imul
lock
mul
xor
push
aam
enter
aam
loope
mov
sbb
add
adc
add
out
pop
lock
loope
bound
fmulp
adc
adc
push
cmp
pop
and
mov
mov
enter
loop
jmp
xchg
aam
(bad)
shl
jmp
mov
mov
out
std
pusha
nop
in
mov
xchg
mov
sar
xor
pop
push
add
mov
jnp
out
repnz
fcos
call
ret
mov
push
icebp
leave
je
in
gs
add
pusha
shr
mov
test
xchg
cmps
mov
lods
shr
popa
sbb
cmp
push
sahf
jl
cwde
inc
sar
and
lds
ret
add
mov
shl
push
popa
mov
inc
int
icebp
cmc
inc
mov
inc
cmps
mov
daa
and
lea
lahf
pop
jo
mov
test
jmp
fldlg2
sbb
iret
js
jo
push
inc
push
loopne
shl
inc
pop
sub
xchg
xchg
out
pop
aam
fcomp
fcom
pop
shr
add
pop
lock
push
mov
mov
jo
mov
ins
call
push
push
adc
xchg
adc
xchg
pop
sbb
pusha
cmp
retf
add
or
loopne
jns
aam
cwde
mov
mov
pop
sbb
(bad)
push
test
icebp
call
std
dec
repnz
inc
mov
add
xchg
pusha
mov
jg
or
adc
lds
retf
cmc
mov
lds
jo
out
ins
pop
mov
mov
xlat
inc
inc
jge
and
lea
pushf
push
add
or
jo
pop
test
icebp
mov
fimul
inc
(bad)
shl
dec
cwde
jmp
into
xor
pop
xor
xchg
clc
and
(bad)
nop
loope
mov
add
push
push
inc
inc
(bad)
xlat
and
xchg
pop
mov
in
idiv
add
mov
xor
jo
or
xor
mov
jo
adc
and
ror
push
or
fwait
outs
ja
stos
outs
and
xchg
adc
(bad)
or
stos
or
ret
js
daa
int3
jbe
jbe
test
mov
ins
mov
ret
pusha
lock
je
ins
mov
dec
into
mov
adc
repz
push
cmp
lods
(bad)
cmc
aad
xor
mov
sahf
sub
mov
pop
bound
or
mov
pop
xchg
sub
cmp
movs
rcl
adc
push
jns
ror
dec
ins
and
mov
lock
mov
call
das
nop
les
pop
sbb
ret
and
cdq
aam
lock
aad
xchg
mov
fsubr
push
enter
clc
test
call
shl
cmp
pusha
xchg
ret
xor
pop
mov
ja
rcr
mov
pop
test
sub
push
jae
in
stos
dec
mov
sbb
inc
push
jnp
mov
jns
push
add
neg
inc
pop
jg
pusha
arpl
mov
rcr
call
in
or
mov
pop
sahf
cmp
inc
add
ret
xchg
je
(bad)
sub
cmp
mov
aas
rol
in
pop
sbb
imul
mov
dec
cmps
iret
lea
mov
dec
cmps
inc
xchg
shl
cmps
jns
inc
inc
out
or
sahf
xor
ret
jg
push
shl
shl
inc
sub
leave
test
rol
or
mov
adc
push
and
nop
pusha
call
iret
rcr
or
pop
daa
in
cmp
adc
jle
jo
jno
pop
mov
(bad)
pop
or
dec
out
lods
xchg
dec
inc
push
or
icebp
les
cmps
add
jb
add
test
xchg
adc
cmps
sti
cmps
enter
push
jno
loopne
inc
call
mov
xor
stos
lds
inc
call
sbb
retf
jne
dec
popa
ja
dec
out
inc
adc
sub
loopne
adc
push
movs
mov
xchg
push
fsubr
jns
mov
push
push
mov
inc
leave
or
pushf
xor
popf
fadd
stos
aad
sti
lock
inc
mov
and
lock
xchg
shl
and
or
xchg
lock
cmc
movs
imul
push
add
cmp
into
repz
push
add
add
jbe
inc
push
dec
add
mov
add
ss
repnz
(bad)
js
cld
push
outs
outs
shr
jmp
jg
jo
and
aad
inc
xor
nop
sub
or
or
ror
sbb
push
add
(bad)
cmp
jecxz
loopne
jne
jle
mov
mov
icebp
add
and
add
dec
ret
add
adc
add
lock
pop
push
mov
xor
add
push
rol
(bad)
ins
sbb
mov
pop
push
adc
add
pop
fild
arpl
cdq
mov
jo
or
inc
stos
outs
ins
das
rcl
jne
push
mov
and
dec
retf
sbb
or
cwde
loopne
aad
lds
and
jb
test
or
sbb
push
add
scas
js
mov
pop
lds
pop
sub
add
dec
add
and
fist
imul
xchg
int3
push
and
xor
push
pop
or
movs
into
xchg
mov
pop
fbld
loopne
pop
jmp
xor
sub
mov
test
test
inc
retf
add
outs
movs
and
je
or
data16
pusha
in
and
cli
mov
pop
jo
jnp
xor
call
retf
or
and
pusha
jb
dec
inc
mov
add
and
(bad)
inc
pusha
ja
outs
sahf
mov
fsubrp
enter
std
fsub
and
push
lock
push
mov
rol
xchg
(bad)
std
or
in
aad
xor
and
inc
add
xor
xor
daa
dec
jmp
out
and
mov
call
dec
leave
cmp
pop
and
push
in
loopne
xchg
push
in
cs
pop
adc
add
inc
mov
inc
dec
add
xchg
or
cmps
sub
adc
push
push
popa
ds
shl
mov
aad
nop
movs
mov
adc
and
xchg
shr
mov
test
push
cmc
bound
loopne
sar
inc
fs
cld
inc
ds
xor
inc
add
xchg
mov
xchg
addr16
dec
add
adc
jno
inc
add
mov
and
(bad)
push
add
push
pop
or
(bad)
lods
adc
sbb
js
mov
shl
and
add
mov
lock
dec
pop
call
xchg
mov
or
shl
leave
pop
imul
fidiv
sub
push
mov
and
stos
and
fidiv
sbb
dec
push
mov
push
xchg
movs
inc
and
(bad)
imul
retf
xchg
out
test
loopne
cmp
inc
mov
jne
push
adc
add
test
mov
mov
popa
mov
inc
add
xor
mov
nop
jnp
in
mov
jecxz
loopne
mov
pop
adc
xchg
push
jns
inc
imul
inc
sahf
push
enter
ins
dec
push
icebp
push
mov
jo
push
fadd
and
(bad)
(bad)
jbe
scas
loope
jo
cmps
adc
xchg
rcl
push
mov
(bad)
arpl
add
aaa
pushf
out
popf
xor
jmp
sub
aaa
fcom
sbb
movs
mov
mov
fs
in
add
and
or
and
add
push
fadd
cmp
xor
arpl
pusha
movs
add
xor
sub
push
inc
hlt
rol
mov
(bad)
mov
mov
jnp
clc
fwait
shl
adc
adc
cmp
pop
fild
popa
rcr
xor
shl
mov
mov
mov
adc
in
test
cmp
adc
(bad)
xchg
jb
push
pusha
pop
dec
sub
sub
pop
loop
cmp
mov
push
inc
clc
stos
lea
push
or
in
ret
clc
int3
sub
lock
popf
adc
push
cs
lea
cmc
push
popa
ds
add
cwde
loope
mov
xchg
mov
fcmovb
xor
adc
adc
add
mov
jns
inc
and
(bad)
add
xchg
popf
pushf
xor
fisubr
loopne
int
loop
cmp
add
cmps
nop
add
retf
jne
daa
push
jp
pop
repz
jo
sub
ja
out
xor
and
jb
icebp
adc
dec
mov
dec
js
mov
add
outs
sbb
pop
inc
test
mov
and
lock
sti
mov
and
mov
xchg
jg
clc
aam
mov
pop
mov
mul
dec
out
loopne
fiadd
iret
pop
ds
adc
xor
jb
pop
data16
adc
mov
clc
out
lock
and
in
jecxz
and
nop
leave
jmp
mov
pop
xchg
jge
or
hlt
add
ins
pusha
idiv
xchg
add
jbe
icebp
mov
int3
add
and
xchg
ins
imul
and
jbe
fistp
out
int3
mov
fdiv
xor
bound
sub
add
arpl
aam
sar
ret
mov
or
mov
mov
cmp
mov
retf
fadd
loope
mov
mov
test
mov
mov
cmp
xor
cmc
xlat
(bad)
xchg
mov
xor
mov
sub
iret
(bad)
add
stos
push
retf
jl
inc
xchg
xor
imul
adc
xchg
out
(bad)
loopne
mov
xchg
fdiv
movs
loopne
pop
xchg
and
push
enter
mov
jmp
rcl
mov
loopne
pop
xor
cmp
adc
outs
adc
lea
loop
mov
(bad)
or
mov
inc
xor
cmp
inc
lahf
aad
(bad)
shl
call
push
xor
into
aad
dec
jmp
and
sar
ja
mov
jb
xchg
xchg
lahf
pop
sub
and
push
nop
into
ret
test
cmp
scas
sahf
inc
cdq
test
xor
pushf
xchg
data16
nop
sbb
neg
cmp
push
push
and
lahf
dec
into
add
xchg
sub
ret
fild
dec
imul
sub
inc
adc
jg
or
jbe
(bad)
rcl
pusha
xchg
inc
inc
js
inc
mov
inc
sbb
cmc
aam
sub
rol
xor
inc
and
xor
sar
dec
in
jecxz
rcl
cld
fld
cs
out
xchg
or
sub
pop
outs
push
mov
addr16
cdq
jae
add
xchg
movs
cmp
jl
ror
aam
call
aam
mov
fcmovnu
call
cdq
ja
sbb
push
loop
fs
cmp
mov
xor
inc
mov
pusha
lahf
clc
adc
mov
inc
xor
push
loop
mov
out
sub
lock
rol
or
jns
inc
xor
sbb
mov
das
and
aam
jne
fnstsw
dec
jns
popa
lea
rcr
add
jl
clc
sar
loop
lods
into
out
jb
clc
sar
jle
dec
fsubr
dec
add
(bad)
push
and
cdq
dec
xchg
add
mov
mov
mov
call
shl
inc
jmp
icebp
mov
mov
rcl
pop
adc
(bad)
cmp
bound
imul
mov
sub
mov
cld
test
lods
fistp
shl
inc
in
mov
loopne
es
add
loopne
adc
xchg
mov
pusha
sti
outs
mov
push
push
sbb
pusha
int
cmp
and
push
adc
cdq
xchg
mov
test
lahf
aad
jp
mov
jb
pop
movs
push
sbb
sub
sahf
nop
fs
mov
xchg
inc
pop
jno
dec
or
push
rcr
mov
fadd
xchg
dec
hlt
add
push
pop
fwait
daa
test
outs
xor
or
adc
icebp
and
lahf
sbb
sbb
add
cmp
jne
shl
mov
repnz
movs
loop
pop
shr
push
repnz
and
jo
(bad)
dec
div
sub
inc
movs
add
icebp
cmp
push
out
adc
push
jo
and
add
in
mov
lea
pop
mov
cmp
out
repz
dec
dec
push
push
ds
add
test
sub
inc
sub
mov
jae
aad
lock
jno
xchg
cmp
inc
ss
out
nop
not
fs
pop
or
add
mov
inc
ret
aad
jno
push
loopne
sub
mov
lahf
(bad)
clc
mov
cmp
sbb
inc
loop
sar
pusha
sub
in
rol
in
gs
push
push
loope
xchg
jl
jb
push
mov
(bad)
sbb
leave
sar
nop
cmp
ret
out
xchg
xchg
adc
cmp
rol
xor
xor
pop
mov
out
add
data16
add
call
pop
jno
inc
jo
daa
stos
loopne
xchg
mov
inc
push
repz
lods
test
inc
ja
xchg
movs
jbe
lds
repz
adc
mov
jmp
movs
pop
int3
rol
xchg
aaa
adc
(bad)
lock
xchg
ficom
pop
pusha
mov
xor
adc
add
jae
inc
or
imul
add
popa
adc
push
arpl
mov
sub
push
(bad)
cmc
push
push
test
stos
jmp
push
ror
xchg
push
xchg
cmp
mov
ds
cmc
sahf
mov
mov
mov
jbe
push
add
sbb
inc
test
xor
(bad)
stc
nop
loopne
push
div
pop
adc
leave
push
aaa
clc
pusha
cs
add
jmp
icebp
popf
jmp
xlat
mov
outs
adc
loope
imul
push
adc
push
jmp
push
or
xchg
hlt
in
dec
jo
push
gs
adc
add
retf
and
dec
in
jno
cs
push
cmc
fstp
dec
lds
enter
mov
inc
push
scas
fsub
push
sbb
in
stc
pop
add
sub
ror
lods
sub
xor
mov
sub
xor
push
out
mov
and
and
and
pusha
pop
pop
pop
or
arpl
push
lock
iret
lods
rol
push
xor
mov
ret
sti
xor
push
shl
mov
xchg
sub
cmp
add
xor
nop
imul
add
clc
push
adc
xor
push
div
push
retf
(bad)
push
lock
or
push
jecxz
and
pop
and
sub
sbb
ret
add
mov
xor
inc
add
aas
push
add
dec
loopne
cmp
adc
push
test
adc
shl
pop
add
xor
rcl
fsub
push
or
adc
mov
dec
adc
iret
jge
mov
mov
cli
icebp
cs
pop
and
inc
and
sbb
(bad)
sahf
icebp
lock
cmp
lock
sbb
fcom
mov
pop
je
mov
mov
fist
and
xchg
call
ds
push
test
call
inc
inc
sbb
hlt
mov
lods
shl
test
and
adc
jl
stos
loopne
pop
mov
cmps
xchg
jns
inc
ret
bound
les
mov
adc
bound
pop
push
dec
jb
mov
js
mov
test
mov
ror
fwait
add
pop
daa
fcom
and
lock
jecxz
mov
add
loopne
movs
je
push
adc
std
pushf
jae
shl
cmps
shr
rcr
nop
jo
sub
cmps
out
jno
rcl
aas
scas
add
xor
xor
pop
inc
inc
xchg
and
dec
imul
rcr
aam
ror
cmp
mov
push
cmp
sbb
sahf
xor
lock
bound
and
push
or
jo
xor
xchg
dec
mov
cwde
aam
hlt
pop
mov
cmp
rol
cmps
ss
push
rcr
mov
pop
adc
cmp
fiadd
sti
xor
das
inc
cld
(bad)
dec
sbb
or
mov
fs
push
add
push
lods
add
int3
popf
mov
push
cmp
dec
loopne
scas
std
push
inc
or
jmp
mov
(bad)
fnstsw
xlat
mov
cmp
push
add
mov
icebp
bound
cmp
jo
cmp
clc
sub
dec
pusha
sub
sub
or
(bad)
loop
out
mov
in
int
and
push
mov
pop
sbb
cwde
cmps
mov
fwait
popa
mov
aas
adc
(bad)
cmp
pusha
cld
stos
pop
sub
add
jae
adc
es
ja
pusha
adc
add
jle
popa
xchg
and
xor
mov
cmps
jle
jb
or
lock
jno
sbb
dec
scas
shl
add
pop
loop
ret
or
jg
xchg
jo
(bad)
js
pusha
pop
lock
call
add
aam
pop
popf
ss
movs
cmps
cmp
test
ret
pop
rol
adc
push
mov
adc
inc
mov
aam
mov
push
call
ja
mov
sbb
adc
rcl
inc
mov
out
sub
add
mov
iret
shl
(bad)
lea
loope
mov
push
push
cmp
mov
mov
hlt
test
jo
int
mov
inc
aam
mov
pop
push
cmp
mov
outs
test
rol
mov
xchg
loopne
sub
adc
xor
mov
mov
push
mov
or
and
movs
mov
pusha
mov
jo
xor
mov
aas
xor
retf
mov
adc
in
(bad)
adc
sbb
jg
sub
gs
(bad)
cld
div
nop
inc
mov
adc
(bad)
sbb
sbb
push
or
mov
mov
cmp
(bad)
and
nop
xor
inc
sub
clc
dec
in
dec
shl
out
push
xor
adc
in
pop
mov
pop
sbb
out
aam
rol
rcl
push
retf
xor
sub
ror
hlt
mov
push
cmp
xor
xchg
adc
dec
pusha
adc
fmul
loopne
mov
outs
push
aaa
fmul
movhps
data16
loopne
mov
retf
or
fidivr
(bad)
js
mov
pop
call
push
add
xor
int
loop
xchg
dec
cmp
clc
shr
adc
adc
sar
(bad)
shl
into
jne
sub
add
out
test
cmp
loopne
lahf
xchg
sahf
test
pop
and
popf
fcom
add
daa
leave
inc
and
(bad)
call
push
retf
jl
je
jle
or
lock
add
nop
xor
mov
fxch
pop
cmc
jecxz
sub
lock
jl
lock
aad
fwait
rcl
xor
xchg
cmp
inc
mov
xchg
nop
repz
mov
loope
jno
pusha
pusha
int
xor
inc
jns
outs
repz
test
fbstp
rcl
mov
mov
mov
xor
mov
aam
adc
cli
xchg
enter
ret
scas
in
lods
rol
imul
adc
lea
adc
push
in
scas
mov
cmp
stos
mov
stos
push
ds
mov
push
pop
repnz
and
lock
stos
aas
inc
pop
add
inc
jne
mov
xor
add
test
xchg
jmp
inc
xchg
push
jp
and
push
inc
push
inc
mov
inc
retf
mov
jp
jg
mov
mov
pusha
fwait
das
pusha
sbb
inc
mov
and
sar
fwait
les
iret
push
cwde
ss
mov
std
mov
xor
cld
jbe
popa
lock
or
sub
cmp
int
mov
cmps
pop
adc
add
jo
pop
dec
mov
repz
mov
fs
cmp
adc
dec
fwait
data16
jle
cmp
or
adc
fxch
add
jnp
ret
and
jno
mov
inc
cmps
pop
test
fisubr
inc
rol
jo
xor
cdq
ins
imul
xlat
hlt
add
and
sbb
movs
push
in
add
xchg
add
das
add
(bad)
or
rcl
out
loope
mov
push
mov
outs
repz
add
push
xchg
jmp
pop
fst
cmp
mov
jne
dec
pop
imul
call
ficom
nop
pop
test
sub
inc
shl
loopne
popa
movs
stc
mov
dec
out
cdq
(bad)
and
and
les
in
xchg
cwde
jmp
push
fild
movs
mov
call
enter
add
push
jno
mov
add
cmp
jns
retf
lds
sar
ja
aaa
xchg
mov
dec
inc
inc
ror
in
jo
repnz
xchg
out
pushf
(bad)
sbb
aas
jmp
add
jb
(bad)
jl
out
push
ror
rcl
dec
in
std
jns
inc
aam
pop
icebp
retf
push
add
stos
push
xor
sbb
and
scas
pop
mov
ss
adc
pusha
and
mov
bound
fld
jo
add
aam
mov
push
add
xor
sub
in
mov
and
mov
mov
mov
test
and
mov
ficomp
cmps
push
js
inc
sbb
call
adc
push
icebp
(bad)
out
adc
xor
cmc
mov
cmc
mov
retf
popf
mov
push
retf
add
ret
and
shl
ins
or
dec
sbb
idiv
push
jno
das
sub
(bad)
shl
adc
js
lds
inc
sbb
xor
loopne
repz
and
or
shl
push
push
jno
sahf
test
jnp
leave
dec
sbb
ins
push
mov
bound
push
cmc
or
loopne
dec
ret
(bad)
movs
sbb
jl
and
jecxz
xor
aaa
rcl
push
sub
fmul
cmps
clc
xchg
fs
pop
and
movs
mov
or
mov
jno
cmp
dec
mov
jne
adc
fsubr
sbb
mov
push
xchg
movs
cmp
loop
test
mov
adc
sbb
in
pop
inc
aad
and
icebp
jb
(bad)
mov
and
mov
popf
and
inc
or
push
xor
aam
cmp
(bad)
cld
add
or
int
cmp
shl
mov
test
cmc
popf
loop
cmc
xlat
ds
(bad)
cmps
dec
repz
and
popa
out
xor
mov
rol
sub
jmp
hlt
add
enter
movs
add
sub
mov
(bad)
pop
imul
stos
sub
mov
jnp
fimul
ror
xor
jne
mov
iret
adc
loopne
outs
inc
jbe
lods
sti
sbb
and
dec
cld
push
inc
cdq
and
dec
repnz
cmp
lods
pop
lods
shr
mov
xchg
xor
push
in
out
jns
int3
cs
add
jle
or
add
sbb
xchg
or
repnz
movs
stc
mov
ins
mov
cwde
ins
and
pop
and
lea
fstp
pushf
or
(bad)
push
ins
mov
xor
int
add
(bad)
loopne
jb
sbb
fs
mov
jmp
mov
mov
ins
xchg
sub
xchg
sbb
jmp
dec
push
aas
mov
dec
mov
imul
test
bound
dec
push
cwde
pop
sbb
push
dec
sbb
push
loop
test
call
lods
or
or
jmp
jecxz
popa
push
jbe
inc
xor
rcr
push
or
pusha
push
add
loopne
and
std
mov
rol
je
repz
pop
inc
(bad)
loope
jmp
mov
aaa
mov
push
retf
sub
int
mov
cmc
adc
ror
pop
daa
imul
test
dec
or
sub
cwde
bound
add
push
xchg
jno
outs
mov
inc
mov
int
inc
mov
dec
sbb
ins
shl
fwait
mov
mov
push
xchg
loopne
and
jno
push
(bad)
or
and
arpl
call
xor
mov
push
push
dec
sub
jo
mov
or
xchg
pop
sub
push
xchg
adc
xchg
test
xor
and
aam
push
add
adc
nop
lock
lock
push
les
jge
loopne
lds
loop
(bad)
jb
xor
fdivp
push
sahf
aas
(bad)
xchg
xchg
(bad)
and
inc
psadbw
push
(bad)
sub
cs
mov
cmp
ret
enter
clc
inc
in
mov
push
inc
push
(bad)
push
movs
in
imul
das
inc
sar
or
rol
ret
pop
test
dec
sbb
push
adc
pusha
inc
(bad)
mov
lock
mov
movs
scas
mov
sub
sti
cmc
and
pusha
adc
dec
aad
dec
shl
pusha
adc
clc
icebp
add
pop
retf
push
iret
mov
rol
dec
test
or
adc
ret
xchg
sub
gs
inc
imul
retf
sbb
jg
cmp
sbb
shl
mov
mov
add
jo
inc
icebp
and
jno
icebp
mov
call
bound
jg
ins
rcr
mov
rcl
xchg
pop
push
adc
xor
push
sub
push
std
pusha
fisub
shr
push
adc
xchg
push
nop
mov
sti
sub
jo
inc
inc
cmp
psllq
mov
pop
scas
push
sub
loopne
and
repz
pop
sbb
ss
loop
or
push
push
adc
dec
adc
add
iret
dec
movs
icebp
add
mov
fstp
jge
mov
shl
inc
shl
pop
fadd
pushf
sbb
loopne
and
ror
pop
xchg
cdq
adc
jo
xchg
shl
mov
xchg
inc
push
fbld
mov
loop
mov
enter
jge
dec
push
and
(bad)
xor
or
jb
jge
add
dec
not
pop
aam
pop
sbb
and
lea
inc
repnz
inc
lock
inc
ret
mov
mov
cmp
jo
push
out
and
xor
leave
pop
xor
fadd
mov
loop
retf
loopne
(bad)
loopne
push
inc
and
push
push
pusha
and
and
(bad)
pop
xchg
xor
cli
sub
jns
ror
mov
jge
(bad)
popa
mov
neg
cld
jl
out
call
jle
call
popa
or
xor
xchg
push
adc
cmp
jb
jb
cmc
adc
cmp
mov
ds
sub
outs
mov
(bad)
inc
xchg
icebp
or
inc
adc
retf
enter
sub
and
inc
pop
jl
loopne
(bad)
push
adc
or
push
stc
push
cld
push
sub
js
jle
ret
loop
mov
and
fstp
outs
adc
shl
push
mov
cdq
leave
gs
ds
mov
xor
mov
xchg
sbb
shl
mov
sbb
aam
push
jmp
mov
cld
popa
gs
adc
retf
inc
out
ret
xor
cmp
mov
pop
push
or
shl
test
or
shl
adc
add
adc
push
shl
mov
xor
aam
retf
add
stc
inc
mov
inc
xor
xchg
mov
jmp
cmp
push
aaa
adc
hlt
mov
mov
mov
loope
jo
and
retf
es
int3
enter
cmp
addr16
cdq
int3
fist
dec
mov
jo
and
fisttp
add
dec
dec
jge
dec
bound
outs
loopne
xchg
enter
and
sub
dec
(bad)
loopne
aam
cmp
(bad)
fiadd
retf
push
sar
out
and
and
shl
adc
adc
dec
hlt
mov
cmp
jo
pop
je
sub
test
daa
push
push
cmp
lahf
mov
hlt
loop
loopne
ret
shr
jp
sub
jl
jle
sbb
icebp
cmp
mov
out
imul
repnz
ss
fidivr
lods
and
aad
sbb
mov
mov
xor
xor
(bad)
cld
pop
and
les
mov
xor
stos
hlt
push
adc
leave
dec
dec
xor
test
nop
lods
jle
dec
clc
mov
fidivr
push
and
mov
enter
cmp
jo
sub
pop
adc
cmp
aam
out
rcr
jmp
cwde
or
xor
iret
lock
pop
xor
cmp
loopne
jl
xchg
addr16
inc
xor
in
outs
add
xchg
std
sub
or
push
aas
cmp
cwde
cmp
loop
jno
retf
inc
push
cmp
je
int
mov
popa
js
fsubr
inc
mov
xor
add
mov
or
mov
add
fcom
adc
rcl
pop
dec
cld
adc
int3
lahf
lock
ins
xlat
call
adc
sub
fadd
test
pusha
sub
fucom
cmps
add
sub
sbb
stos
mov
nop
inc
mov
mov
shl
inc
xor
jne
shl
push
and
rol
dec
sbb
loop
xchg
fadd
mov
xor
dec
add
push
inc
xchg
or
rcl
ror
pusha
loopne
ror
push
sbb
std
shl
ins
mov
pop
retf
cmc
pusha
xchg
adc
push
lock
in
pop
and
mov
push
nop
adc
(bad)
shl
xchg
add
mov
lock
ins
aam
adc
mov
ror
adc
and
adc
inc
repnz
mov
lods
mov
in
ds
or
jo
dec
inc
and
push
xor
rcl
inc
(bad)
les
div
pop
cmp
sub
scas
sbb
xor
sti
cmp
pop
es
push
js
adc
(bad)
in
jnp
pusha
into
push
mov
or
jo
ins
fsubr
mov
clc
pop
mov
xchg
ror
clc
push
loopne
adc
and
pushf
fwait
sub
adc
out
mov
ret
retf
sbb
rol
pusha
xor
xchg
push
add
adc
inc
add
cmp
je
xchg
(bad)
jo
ror
repz
cmp
xor
push
add
icebp
je
ins
push
and
inc
push
adc
mov
mov
(bad)
ds
bound
pop
je
and
adc
or
int3
movs
fdivp
loopne
mov
rol
pusha
iret
std
xchg
fst
das
dec
push
push
jge
adc
shl
in
es
cs
lods
mov
ins
or
and
push
(bad)
jne
push
add
pop
(bad)
ins
jno
mov
gs
test
adc
mov
add
fidivr
shl
lock
push
adc
std
sub
jne
int
sbb
into
mov
or
mov
adc
fdiv
ror
les
and
cdq
std
xor
pop
mov
inc
aad
jecxz
bound
cmps
inc
inc
retf
mov
lock
sbb
in
movs
neg
xor
jl
mov
movs
add
(bad)
cmc
cld
lods
jp
nop
shl
popf
fbld
pop
pop
fld
je
and
mov
call
iret
ss
adc
aam
xor
rcr
cmps
pop
mov
mov
in
sbb
dec
repz
mov
pop
mov
push
cmp
pop
ror
cmp
jmp
xchg
ficom
std
enter
(bad)
ins
add
cld
out
rol
mov
out
xchg
sar
mov
xchg
sbb
shl
cdq
into
add
gs
jbe
xchg
mov
inc
mov
inc
loope
pop
push
mov
js
xor
ds
mov
ret
mov
dec
movs
dec
fimul
sar
addr16
loope
out
adc
mov
stos
add
mov
pop
jo
push
inc
adc
call
mul
aad
adc
jb
nop
std
add
sar
adc
dec
cmps
or
fsubr
jne
popf
xchg
inc
sub
loopne
adc
int
mov
in
lods
fild
mov
hlt
adc
xchg
sahf
mov
push
rol
xlat
push
ds
lods
xor
into
push
leave
nop
pop
mul
aas
or
xchg
jbe
clc
outs
push
and
out
adc
adc
call
sub
scas
add
add
adc
clc
mov
adc
xor
xlat
add
cwde
mov
xchg
test
jno
mov
mov
push
loope
shl
mov
sahf
pop
ins
and
xchg
xlat
mov
cdq
dec
mov
push
enter
xchg
movs
sub
loopne
mov
mov
add
adc
ror
mov
inc
in
nop
stc
and
shl
mov
movs
mov
and
test
pop
loop
or
push
dec
pushf
xor
loope
nop
ins
pop
test
mov
ins
sbb
inc
das
(bad)
or
xlat
inc
rol
mov
fcomp
jno
outs
cmp
ins
lds
bound
pop
aam
lds
mov
push
lock
or
test
fnsave
and
retf
xor
mov
scas
aas
or
push
push
rcl
mov
push
sub
add
and
ins
xor
nop
xor
inc
sahf
xor
arpl
test
jle
push
sbb
inc
push
inc
in
mov
inc
xor
push
mov
js
push
mov
loope
xchg
leave
push
xor
mov
mov
xor
push
lock
mov
in
int
mov
data16
and
push
and
addr16
pusha
sub
mov
dec
mov
mov
sub
inc
sbb
scas
cmp
mov
mov
test
outs
nop
mov
(bad)
outs
shr
pushf
xor
icebp
mov
arpl
and
ret
xor
retf
cmps
xchg
(bad)
pop
lods
add
dec
mov
repz
in
mov
jnp
hlt
aad
and
mov
mov
and
popa
in
or
dec
inc
jnp
ins
fldenv
xchg
(bad)
jmp
leave
pop
and
ret
std
xor
adc
xor
add
xor
jo
jbe
mov
not
inc
(bad)
and
push
int3
or
jl
lahf
push
arpl
and
sub
in
popa
inc
and
cmp
lock
(bad)
jg
sub
es
iret
out
retf
out
test
xor
out
shl
adc
sbb
jb
pop
mov
gs
hlt
add
xor
add
sbb
fs
sub
push
std
adc
cmp
sbb
sti
mov
xchg
and
leave
push
inc
adc
push
jae
mov
push
(bad)
not
inc
in
(bad)
popa
rcl
ror
inc
add
xor
jl
mov
(bad)
adc
push
cmps
pop
mov
xchg
and
and
adc
pop
mov
fadd
lods
imul
(bad)
js
lock
out
adc
nop
or
stos
icebp
nop
jne
or
lock
in
push
and
sub
jl
pushf
pop
inc
dec
xor
mov
dec
add
jp
popa
and
add
rcr
xchg
or
pop
das
mov
stos
shl
jecxz
sbb
icebp
jo
push
nop
ret
icebp
fld
or
shr
adc
mov
pop
fidiv
xchg
shr
xor
loope
push
and
sub
sub
add
jl
push
sbb
cmp
and
lods
rcl
lock
xor
(bad)
call
mov
add
dec
or
icebp
mov
popa
and
loope
repz
loope
int3
lea
cmps
lock
mov
stos
shl
push
adc
bnd
arpl
jle
xor
sub
call
in
adc
inc
push
add
jno
inc
jne
xchg
mov
enter
mov
icebp
mov
cmps
cli
push
xchg
icebp
cmp
loope
out
in
adc
mov
mov
sti
pop
rcr
jne
ds
cmp
or
dec
(bad)
push
gs
jae
jno
popf
jae
in
xor
inc
or
jne
lods
adc
cmp
rcr
add
jle
xor
pop
add
mov
inc
inc
push
xor
sbb
test
dec
pop
push
inc
mov
mov
mov
js
xchg
inc
jb
out
adc
scas
pop
jb
adc
mov
push
popf
cdq
int
sbb
inc
out
in
inc
or
push
aas
scas
out
mov
jge
rcl
repz
inc
mul
inc
sub
and
adc
aam
shl
nop
push
or
mov
adc
in
int3
xchg
push
pop
add
mov
add
ss
mov
shr
shr
icebp
adc
inc
jo
and
outs
mov
mov
div
sub
add
adc
rol
(bad)
std
mov
add
inc
add
adc
add
lock
adc
arpl
inc
or
daa
push
inc
sbb
pop
add
xchg
ficom
push
lock
mov
rol
rol
popa
lods
push
cld
lods
ret
dec
xor
jb
jge
hlt
adc
dec
fadd
mov
lock
xor
xchg
pushf
mov
(bad)
sub
in
xchg
in
mov
mov
or
or
mov
push
aam
push
cmp
imul
jecxz
fidivr
pop
or
cmp
mov
in
popa
aas
lods
push
shl
jno
mov
xchg
adc
jge
xchg
jl
(bad)
xchg
xor
fisub
fldenv
fistp
ret
add
lock
sbb
and
xchg
lock
mov
cdq
sti
out
xchg
das
into
test
jo
ins
cwde
test
fs
out
in
daa
jno
cli
lock
rcr
pop
pushf
cmp
test
push
inc
xchg
inc
arpl
jmp
sbb
mov
cmp
and
jmp
(bad)
add
push
mov
pop
pop
ins
mov
cmp
or
out
push
(bad)
ret
jl
mov
inc
dec
xor
mov
push
pushf
mov
mov
gs
jl
stos
aas
into
mov
and
xchg
ss
repz
dec
jl
les
in
(bad)
cmps
imul
cmps
sbb
xchg
fucomp
and
xchg
(bad)
xor
mov
or
jg
adc
xor
add
lock
cmps
pop
add
jb
test
je
es
ror
imul
xor
inc
test
and
dec
push
pop
inc
jbe
mov
jo
rol
inc
in
je
adc
loopne
mov
sbb
cwde
adc
addr16
rcr
jno
aas
loopne
in
add
jge
cmp
dec
(bad)
mov
fwait
sub
xor
adc
mov
fidivr
jbe
push
jbe
jecxz
popa
int
iret
inc
cmp
ja
mov
mov
loopne
(bad)
out
fcom
loopne
stos
and
call
imul
idiv
jb
mov
pop
ins
push
cmps
jecxz
mov
xchg
addr16
mov
addr16
data16
sub
push
and
cdq
push
sub
add
lea
outs
sub
(bad)
mov
mov
sbb
and
cmp
mov
rol
call
shr
and
pushf
inc
mov
loopne
mov
(bad)
cmps
popa
int
call
pop
ins
xchg
mov
rcr
scas
mov
and
inc
mov
cld
jle
inc
cs
mov
inc
and
out
mov
push
xor
(bad)
pusha
push
js
pop
popf
popa
mov
sbb
jne
ja
pushf
xor
adc
(bad)
mov
scas
ror
jnp
loop
es
(bad)
shl
xchg
inc
loop
push
int
mov
add
shl
inc
fcomip
mov
shl
xor
ds
rcr
and
es
out
jae
push
sbb
(bad)
lock
imul
xchg
and
xor
les
fadd
lods
inc
test
jecxz
pop
shl
xchg
not
xchg
adc
pop
scas
lock
mul
mov
(bad)
sub
push
xor
and
add
jo
or
and
addr16
aad
rcl
or
jl
dec
xchg
outs
xor
push
mov
int3
test
mov
shl
in
dec
inc
sub
(bad)
cmc
fcomip
addr16
xchg
stos
fisttp
jae
mov
nop
nop
inc
arpl
(bad)
lock
xchg
sbb
push
xor
jo
mov
(bad)
and
jne
cmps
and
les
loope
cli
call
addr16
lock
adc
push
mov
and
stc
xchg
das
add
pop
adc
push
dec
push
mov
out
mov
mov
lods
(bad)
sbb
pop
das
xor
cmc
xor
cdq
dec
pushf
sbb
jbe
les
inc
and
in
lds
in
sbb
mov
imul
dec
mov
push
adc
cdq
or
popa
adc
dec
scas
push
adc
mov
mov
fistp
xor
push
imul
pusha
jne
or
scas
rcr
jae
inc
ins
mov
aad
les
bound
loope
inc
jo
inc
mov
mov
in
retf
add
std
ins
repnz
and
dec
mov
mov
or
jno
mov
and
repz
ss
pop
jmp
aas
xchg
xor
mov
dec
out
and
inc
je
gs
lock
out
nop
imul
jmp
(bad)
sbb
mov
jbe
mov
xor
or
ins
mov
mov
sbb
cmp
mov
cld
ss
pop
sar
lods
lods
or
in
shl
lock
nop
fsubr
int
out
daa
int
icebp
adc
sbb
mov
cmp
mov
add
ror
adc
in
sbb
arpl
test
fild
ficomp
in
jmp
xchg
(bad)
add
cld
iret
mov
dec
add
in
xchg
stc
xor
or
mov
enter
or
pusha
sbb
icebp
sbb
rcl
fs
sub
ret
das
rcr
xchg
(bad)
mov
sbb
ins
or
rol
add
add
pop
sbb
lods
and
jo
in
or
loopne
sub
ss
push
and
xor
pusha
in
outs
add
xchg
cdq
mov
call
lds
jmp
iret
push
jmp
ins
jle
lock
adc
add
mov
mov
dec
aad
add
mov
cmp
loopne
(bad)
shl
aad
lahf
adc
arpl
dec
dec
dec
and
ins
push
or
adc
hlt
lods
ins
cmp
mov
push
push
dec
push
cld
mov
sbb
inc
push
mov
jge
scas
iret
inc
popa
and
test
cmp
pop
in
dec
hlt
rcr
lods
xchg
ins
sbb
enter
mov
dec
cmp
lock
fst
dec
nop
push
fidiv
cs
and
push
popf
into
mov
xor
adc
mov
stc
add
not
test
jno
mov
cmp
add
dec
add
cmp
rcr
sub
ins
outs
or
pop
pop
int
inc
adc
pusha
ins
arpl
mov
adc
sbb
pop
mov
cmp
popf
lahf
(bad)
pushf
push
or
push
pusha
dec
repz
dec
or
xor
pop
add
jne
xchg
or
cli
add
xchg
xchg
cld
jno
int3
jge
sar
push
jmp
mov
call
(bad)
xlat
lods
jmp
scas
push
cmp
rcl
call
lods
sbb
sbb
fwait
xor
loopne
rcl
adc
div
enter
sub
inc
sub
or
jae
dec
and
mov
add
in
pop
mov
or
fdiv
ins
repnz
leave
dec
clc
sub
cmp
add
push
imul
jmp
pop
add
pop
outs
fcom
gs
(bad)
fadd
jl
ins
sub
int
add
sbb
lods
push
clc
nop
dec
lock
in
adc
mov
or
mov
mov
rol
add
jecxz
ds
lock
ficomp
sub
rcl
jmp
test
ss
repnz
add
nop
xchg
inc
mov
dec
aam
daa
popa
and
inc
in
add
ret
int
add
mov
dec
mov
scas
ins
and
(bad)
pop
adc
stos
stos
in
int3
mov
shl
int3
adc
ins
inc
mov
xor
or
push
dec
pusha
or
popf
add
lods
lea
fldlg2
lock
fadd
fsub
cmp
inc
sub
inc
mov
imul
movs
mov
rol
ins
pop
adc
xor
iret
mov
inc
inc
cld
xlat
adc
and
inc
or
std
cmp
idiv
popa
retf
nop
imul
lods
mov
xchg
add
icebp
test
hlt
jmp
push
sbb
add
jnp
loope
pop
xor
fsubr
add
xchg
pushf
or
shl
xchg
add
not
adc
fstp
lea
mov
sti
xchg
dec
add
xlat
mov
(bad)
loopne
mov
sbb
ss
mov
into
arpl
push
mov
call
adc
inc
popa
jg
pushf
int3
dec
adc
stos
push
mov
sub
in
adc
pop
add
add
cmp
loopne
es
and
dec
pusha
push
int
and
cmp
push
div
xchg
pop
cmp
sbb
js
lods
pop
aaa
stos
daa
mov
test
cmp
pop
jecxz
push
lods
sti
inc
or
pushf
mov
fdivr
mov
dec
das
mov
adc
add
push
jne
ins
or
mov
int3
ds
and
rcl
inc
adc
fisttp
arpl
imul
jb
lods
test
lods
or
test
xchg
xchg
xchg
das
sub
jmp
mov
mov
push
and
or
adc
or
inc
and
pop
jo
ins
jmp
loope
cs
out
movs
fmul
jle
xor
test
std
inc
or
int
ins
lock
inc
sbb
jno
cld
jno
or
enter
nop
adc
xchg
or
outs
xchg
xor
sbb
inc
gs
and
(bad)
push
ins
rcl
add
in
xchg
lods
rol
mov
sbb
(bad)
push
loope
rcr
add
mov
mov
lock
mov
test
mov
pusha
and
nop
out
ins
xor
inc
add
mov
sar
js
loope
ror
or
fcom
dec
jae
aas
popf
mov
ins
ins
mov
(bad)
ja
je
(bad)
scas
mov
xchg
adc
shl
stc
xchg
xchg
dec
xchg
mov
and
rcl
cdq
sbb
mov
inc
cmp
sbb
fucom
(bad)
mul
mov
lods
mov
ret
fist
pop
nop
inc
sub
je
cld
jge
dec
inc
and
stos
mov
jl
adc
pop
and
shr
cmp
call
push
rcl
gs
jge
mov
xchg
loopne
jo
jnp
or
aaa
push
nop
shr
lock
xchg
dec
shr
jb
lock
add
mov
iret
adc
mov
mov
ins
sub
lahf
dec
fs
je
fsub
cmp
add
xchg
cmp
int3
outs
and
push
loopne
cmp
mul
sbb
jno
lds
mov
outs
jle
movs
mov
movs
imul
jno
shl
inc
shr
jl
mov
jecxz
xor
mov
pushf
rcl
retf
adc
dec
dec
xchg
retf
push
dec
mov
stc
shl
cdq
pushf
in
(bad)
and
int3
and
mov
movs
and
push
pop
cdq
sub
inc
add
imul
ret
xchg
push
mov
lock
or
popa
mov
cwde
fs
aam
jg
out
push
jg
add
cmc
es
adc
push
jne
cmp
dec
jmp
jb
movs
fidivr
dec
mov
push
shl
cli
loope
add
dec
or
adc
test
aaa
jle
in
add
and
int3
and
mov
movs
lods
push
push
jne
xor
push
mov
jl
adc
add
jno
sahf
out
push
inc
push
dec
daa
xlat
fdivr
push
mov
mov
cmc
jp
inc
dec
out
push
dec
add
in
in
lea
xor
loope
call
jle
jl
pushf
and
fcomp
jle
cmps
dec
adc
dec
das
test
dec
xor
ret
xor
xor
fcom
in
rcr
xchg
je
mov
int
je
push
cmp
popa
shl
loopne
popa
or
add
xor
cmp
sub
out
mov
push
popa
inc
ins
icebp
xor
pop
adc
push
jne
or
xchg
adc
add
sbb
push
push
inc
mov
(bad)
sub
addr16
jg
lods
inc
mov
jge
lea
jns
lock
inc
pop
add
xor
mov
(bad)
mov
retf
jns
mov
mov
xor
or
pop
pop
and
(bad)
movs
out
into
stos
ins
leave
xor
mov
jge
arpl
pushf
pusha
leave
and
or
and
in
jp
xchg
adc
lods
add
and
inc
dec
mov
xchg
adc
jp
cmp
lds
jl
les
or
push
push
scas
stos
mov
in
sub
jo
data16
scas
push
mov
jnp
mov
fist
rol
adc
dec
and
add
inc
nop
or
mov
(bad)
outs
jae
nop
int
lods
mov
enter
dec
add
jmp
es
rcl
je
inc
imul
cmp
hlt
scas
xor
fninit
das
ja
fimul
mov
and
ret
mov
jmp
add
test
scas
mov
push
dec
ins
sub
fwait
sbb
xor
cmp
or
lock
outs
imul
into
inc
mov
pop
push
inc
out
push
out
adc
lods
hlt
out
aad
cli
add
xor
inc
fsubr
mov
int
or
lea
sbb
sub
pop
ins
sub
test
pop
sub
retf
mov
add
test
and
pop
ret
pusha
fcmovnbe
xchg
dec
lods
add
loopne
sbb
out
scas
loop
push
and
loopne
adc
cmp
cmp
dec
mov
loope
daa
dec
ins
xor
or
call
stos
hlt
es
mov
push
sahf
js
mov
push
push
adc
adc
sub
pusha
and
rol
jnp
mov
ja
cmp
fst
shl
ror
retf
or
sbb
mov
xor
cmc
cwde
add
movs
loope
adc
ins
pop
jno
aam
jbe
push
div
fs
push
push
sbb
mov
loopne
dec
or
bound
adc
add
fs
inc
(bad)
jle
lds
add
and
cmc
test
pop
cwde
mov
adc
and
(bad)
mov
and
xchg
popa
mov
pushf
push
xchg
(bad)
shr
xor
ds
inc
and
push
ja
test
xor
cmp
fild
fist
mov
iret
clc
sti
mov
or
push
shl
in
test
jns
inc
int
test
rcl
inc
jo
sar
test
xor
mov
add
test
xor
pusha
add
jecxz
jne
xor
sbb
adc
adc
div
xchg
fstp
test
(bad)
cmps
add
daa
inc
xchg
mov
das
rol
pop
or
mov
lahf
ret
loop
jge
cmp
sbb
ja
pusha
bound
and
scas
push
imul
sbb
ins
jo
sub
addr16
adc
stc
cmps
aad
inc
add
mov
out
jbe
cmp
push
and
addr16
fcmovnbe
cmps
jecxz
adc
in
lock
jb
jp
adc
sti
outs
out
xor
add
mov
mov
enter
jg
xor
adc
adc
inc
dec
cmp
aas
dec
push
(bad)
push
jecxz
sub
add
add
push
xchg
adc
sbb
xchg
lods
repnz
inc
mov
es
push
es
mov
jne
test
ds
mov
inc
jne
ret
or
sub
add
mov
jae
adc
xor
shl
jb
out
add
jo
cli
ds
and
and
push
push
adc
xchg
pusha
mov
in
in
les
mov
not
cld
cmp
movs
push
add
add
shl
xchg
inc
cld
jns
push
in
mov
shl
test
add
inc
add
jge
inc
iret
adc
(bad)
rol
pusha
loope
out
loope
fisubr
and
and
push
xchg
or
mov
inc
movs
mov
jbe
dec
mov
rol
dec
enter
je
jl
dec
add
jo
xchg
cmp
nop
mov
mov
push
out
inc
loop
jno
adc
in
mov
mov
fmul
push
fldl2e
fild
add
sbb
loopne
and
xchg
ret
loopne
adc
(bad)
outs
in
sbb
inc
sbb
es
push
mov
and
xor
push
pop
sub
cmp
std
sbb
loopne
push
int3
dec
or
int3
push
xchg
sub
adc
mov
jge
mov
icebp
inc
aaa
cmp
pop
in
mov
movs
std
js
mov
out
add
inc
adc
adc
retf
or
pop
(bad)
hlt
xchg
and
int
inc
jnp
je
ds
pop
(bad)
jl
je
std
push
adc
adc
mov
leave
push
push
ret
(bad)
pop
(bad)
(bad)
out
ins
out
popa
imul
mov
xchg
inc
lods
mov
push
lods
mov
test
inc
adc
cmp
retf
cmp
scas
pushf
popa
(bad)
stos
fisubr
loop
mov
jg
mov
pop
stc
xor
and
xor
lods
aam
xlat
popa
mov
test
in
mov
pop
lods
and
inc
add
std
aas
inc
jle
rcl
outs
add
aad
dec
xchg
push
xchg
lahf
mov
mov
inc
test
es
and
push
or
out
dec
shl
mov
lahf
jbe
pop
jae
rcl
and
imul
shl
lods
test
inc
jo
pop
into
pop
lock
pop
push
frstor
adc
lods
stc
and
loopne
popa
rol
dec
bound
loopne
push
sar
add
rcl
adc
(bad)
mov
and
call
ss
icebp
xchg
dec
inc
sti
xchg
pop
enter
loope
or
mov
pop
add
in
jge
inc
sbb
in
jp
iret
rcl
mov
jo
xchg
adc
retf
pusha
mov
mov
call
inc
rol
lahf
inc
add
popf
fistp
outs
das
aad
adc
xor
mov
sti
test
jbe
movs
push
xor
dec
ret
sbb
adc
aaa
jle
rcr
lods
loopne
fimul
dec
and
add
xchg
mov
ins
cld
xchg
dec
cmc
lock
add
xchg
push
push
sub
jne
ins
aas
push
or
or
mov
fiadd
mov
retf
cmp
jo
loopne
fiadd
test
lahf
and
(bad)
leave
adc
ror
inc
and
or
sbb
and
sbb
out
jo
in
dec
and
pop
fstp
add
mov
shl
mov
inc
cmp
add
pop
mov
sub
in
add
inc
mov
and
add
lahf
xor
and
xchg
push
inc
pusha
push
push
icebp
and
sti
push
sub
adc
jbe
loop
xchg
mov
lea
xor
aam
mov
in
(bad)
mov
mov
fisttp
jno
mov
aaa
int3
pop
and
(bad)
cmp
ror
test
cld
xor
add
lods
shl
push
add
mov
popa
lods
sub
or
xor
adc
pushf
mov
dec
xor
or
imul
out
adc
into
movs
pop
cmp
cmps
fistp
jne
jmp
or
(bad)
push
scas
ret
jo
call
call
xor
scas
imul
test
cmps
xchg
int3
inc
adc
repz
cdq
inc
dec
movs
aad
mov
sbb
sbb
jmp
add
loop
movs
mov
out
add
inc
xor
dec
(bad)
sti
pop
(bad)
mov
xor
emms
aas
out
mov
retf
push
jle
loop
or
xor
jle
and
cmp
rcl
mov
cmp
outs
and
push
add
pop
leave
in
mov
jo
push
sahf
jne
ja
jge
pusha
rol
add
jns
icebp
inc
aas
mov
adc
in
xor
mov
pop
push
mov
loope
daa
(bad)
out
fs
sub
lods
in
js
xchg
push
nop
nop
out
mov
add
dec
adc
outs
pop
jg
add
mov
push
sti
call
push
push
and
jb
lock
add
add
xchg
mov
outs
xor
fidiv
jle
jae
inc
jnp
mov
adc
cmp
and
rcr
rol
packsswb
add
popa
and
int3
mov
ret
adc
call
iret
stc
mov
(bad)
std
push
je
arpl
add
rol
test
xor
mov
xor
int3
pop
outs
inc
cmp
xor
movs
xlat
stos
int
and
or
cs
js
aas
not
bound
inc
adc
xchg
inc
jmp
inc
jno
cmps
cmp
inc
ss
inc
lods
or
sahf
mov
repz
add
and
sbb
dec
jle
loopne
inc
xor
add
xor
out
shl
in
mov
xor
(bad)
fwait
mov
popa
loope
pop
cmp
(bad)
int
imul
adc
dec
jmp
das
cmp
xor
cmp
push
dec
push
jmp
lock
cld
iret
xadd
fld
inc
retf
in
sar
add
xchg
cmp
push
fs
bound
mov
(bad)
fst
mov
adc
add
mov
pop
gs
(bad)
jne
and
inc
rol
push
aaa
and
retf
pslld
add
push
inc
(bad)
xor
or
not
inc
(bad)
pushf
sbb
repz
fbld
mov
xchg
and
mov
jo
test
test
mov
adc
xchg
cmps
out
push
adc
mov
jle
je
or
int
push
scas
mov
xchg
fdiv
add
xor
mov
nop
xchg
out
lods
inc
fdivr
mov
ins
fwait
inc
jo
xchg
test
imul
stos
inc
mov
lock
xchg
arpl
and
pusha
popf
pop
sub
adc
ret
xor
push
adc
ret
lahf
movs
ds
test
mov
lock
sbb
jno
jno
dec
pop
loop
out
inc
div
outs
loopne
mov
push
stos
push
es
mov
jecxz
xor
pop
or
push
lds
sbb
std
scas
movs
(bad)
imul
nop
cmp
pop
cmps
inc
and
lock
imul
jo
cmp
clc
daa
cmp
mov
inc
loope
inc
leave
adc
sbb
lods
cmp
and
xor
scas
adc
scas
mov
cld
push
push
sahf
xlat
dec
mov
or
outs
pop
push
mov
outs
dec
(bad)
ds
sub
push
sahf
fisttp
xchg
add
pop
push
dec
and
iret
outs
mov
inc
dec
xchg
add
dec
and
dec
fstp
cmp
and
cmp
xchg
dec
scas
xchg
push
sbb
das
out
add
xchg
xor
cmp
push
test
lahf
mov
push
add
push
push
or
in
push
cli
and
inc
(bad)
push
stos
aas
out
cs
dec
in
inc
jno
scas
push
push
push
or
icebp
rcl
pop
mov
push
jno
mov
dec
scas
cmps
lea
adc
(bad)
cli
add
int
push
sahf
outs
dec
fsub
inc
xchg
retf
dec
into
shr
into
or
and
dec
xor
outs
sbb
scas
outs
or
int
xor
pop
dec
mov
push
or
mov
lds
mov
mov
cs
pop
and
stos
mov
retf
int
int3
es
mov
scas
into
or
test
dec
jnp
pop
mov
stos
sbb
xchg
(bad)
adc
xchg
add
mov
sub
or
inc
and
pushf
cmp
mov
jl
je
cdq
sub
or
and
lods
mov
test
dec
xchg
dec
push
rcl
enter
sub
inc
xchg
jnp
lods
inc
jmp
cmp
cmp
pop
vhaddpd
jg
je
xor
test
je
fsub
mov
movs
and
jle
sbb
xchg
push
in
jl
sbb
cdq
sub
add
cmp
mov
add
dec
jmp
pop
out
xchg
or
ins
dec
mov
xchg
jne
adc
xchg
or
push
sub
pop
xchg
sahf
hlt
rcl
inc
cld
cmp
js
jo
dec
xchg
push
test
ins
push
repz
pusha
xor
adc
pushf
xchg
icebp
lods
xor
xchg
mov
js
jno
jne
pop
daa
jp
pop
inc
jnp
jmp
je
xchg
cmp
add
adc
rol
loope
adc
push
je
xchg
mov
mov
or
xor
mov
mov
mov
push
cdq
xor
sub
or
out
and
les
enter
sub
je
fcom
rcl
popa
inc
xor
fsubr
or
inc
xor
popf
ins
pusha
fnop
shl
les
ins
push
enter
test
jle
ja
scas
cdq
pop
ror
mov
lahf
pop
das
xor
das
push
dec
dec
ret
push
jmp
jg
(bad)
pop
scas
xor
dec
jns
jns
adc
jg
jle
iret
enter
or
xchg
sub
add
enter
popf
adc
retf
sbb
fisttp
pop
loop
imul
pop
movs
mov
(bad)
std
(bad)
pop
push
fsub
pop
bound
sbb
adc
cmp
jns
adc
shr
test
(bad)
popf
jno
iret
cmp
ror
shl
sbb
popf
retf
fisttp
outs
xchg
mov
nop
test
daa
inc
mov
iret
sbb
loop
imul
jns
dec
in
imul
xor
inc
fwait
mov
mov
push
shr
push
mov
test
push
and
add
pop
in
test
pop
sbb
sub
out
pop
int3
or
jmp
int
(bad)
iret
lahf
mov
dec
and
fidivr
cmp
lods
mov
pushf
sub
popf
push
adc
sbb
jle
adc
ins
pop
ret
pop
add
mov
sbb
es
clc
fdivp
movs
xchg
mov
pop
popa
rcl
sbb
(bad)
fnsave
dec
sbb
add
popa
int
dec
add
(bad)
loope
call
add
rep
mov
mov
jae
(bad)
test
js
clc
sub
clc
loopne
inc
clc
push
repnz
out
adc
stos
clc
iret
jnp
adc
add
add
mul
cmp
js
mov
retf
jno
pop
add
es
(bad)
dec
and
or
clc
or
inc
mov
jnp
lock
jae
cmps
pushf
je
ins
sub
gs
clc
jb
cmp
and
frstor
pop
pop
daa
call
call
pop
retf
int3
jnp
pop
in
sub
lock
fcmove
repnz
aas
fld
mov
dec
jnp
jae
xor
dec
mov
jg
jmp
dec
jmp
push
mov
ror
xchg
cld
mov
out
jge
and
cmp
js
lock
cmp
push
push
cmp
or
pop
test
in
fsubr
jno
jge
cld
fwait
mov
mov
pop
xor
lods
cmp
mov
dec
movs
das
pop
mov
push
mov
leave
lock
cmp
in
aam
dec
aad
jbe
test
call
dec
sub
fisttp
test
adc
hlt
sub
xchg
fnsave
scas
retf
sub
pop
sub
xchg
jp
aad
call
daa
xlat
in
cmp
dec
test
xor
stos
outs
sub
jnp
scas
popf
out
push
imul
cmc
gs
jmp
popf
hlt
in
(bad)
xchg
ins
rcr
adc
push
pop
das
sub
sbb
push
sub
out
rcl
sbb
popf
mov
(bad)
shr
pusha
sub
push
(bad)
scas
mov
retf
pop
sbb
xlat
sbb
jnp
xchg
xlat
ins
dec
retf
sbb
in
outs
into
in
mov
imul
ss
dec
mov
into
push
sub
addr16
jle
adc
loop
jle
outs
into
call
xchg
out
dec
xchg
outs
or
outs
jp
jp
lahf
cs
mov
pop
jecxz
inc
bound
retf
out
lahf
outs
pop
outs
mov
arpl
xchg
push
scas
retf
das
pop
dec
pop
jo
dec
mov
call
outs
push
xchg
jp
aad
pop
imul
fild
pop
cs
dec
push
loopne
sti
(bad)
cmps
sub
dec
mov
xchg
out
mov
retf
jecxz
dec
mov
scas
loopne
xchg
out
loopne
aad
pop
outs
(bad)
outs
pop
sti
cli
into
dec
outs
push
stos
inc
jbe
in
push
cld
stos
mov
mov
or
retf
cli
into
push
out
loop
aad
sbb
pop
push
dec
mov
cli
retf
pop
and
jecxz
dec
into
out
ficom
popa
scas
fidivr
mov
push
and
out
fmulp
add
loope
loop
outs
jp
pop
dec
gs
out
test
retf
mov
sbb
sbb
jp
xor
sub
adc
test
push
sbb
div
and
pop
fisttp
sub
pop
cmps
push
aad
push
aas
xchg
xlat
neg
int
pop
fst
jg
stos
mov
xlat
and
add
cwde
cmp
pop
cmp
xlat
not
das
or
inc
xchg
or
xor
pop
push
pop
xchg
fwait
xchg
mov
mov
adc
js
push
xchg
xor
out
sub
adc
rol
push
xlat
iret
pop
add
push
dec
xchg
sub
das
pop
sbb
call
mov
clc
xlat
ss
pop
xlat
aas
js
push
mov
inc
adc
out
mov
xchg
fwait
xor
pop
dec
sbb
and
dec
push
test
das
mov
and
fbstp
popf
fild
sbb
sub
push
(bad)
nop
adc
enter
mov
and
addr16
xchg
push
ds
lahf
and
les
sbb
xchg
mov
pop
clc
adc
clc
aam
lods
xlat
xlat
sbb
xlat
mov
int3
and
retf
dec
sbb
cmp
fldcw
movs
gs
jg
xadd
lods
out
jmp
aad
or
pop
shl
stos
adc
jecxz
retf
test
sub
xchg
ins
scas
stc
das
push
mov
iret
ins
fwait
(bad)
scas
cmps
sti
js
and
push
imul
or
out
jge
sbb
adc
pop
popf
and
pop
mov
or
scas
sub
test
(bad)
push
mov
add
(bad)
sub
gs
(bad)
scas
sub
aas
mov
pand
(bad)
btr
test
test
loope
or
std
(bad)
(bad)
or
inc
es
out
loopne
lea
and
test
out
or
scas
or
add
mov
shr
jo
scas
mov
adc
pop
mov
or
iret
pop
(bad)
popa
ret
lods
out
std
adc
pop
adc
cwde
jno
mov
cmps
push
xchg
sub
cdq
das
mov
lds
out
inc
cs
das
ins
mov
mov
xacquire
test
scas
test
dec
pusha
shr
dec
mov
add
xchg
fldcw
lock
push
ret
dec
jns
in
out
sub
in
cld
cmc
gs
ins
(bad)
mov
movs
dec
add
inc
mov
inc
cmp
pop
ins
and
das
inc
mov
call
call
push
xchg
dec
addr16
or
cmps
push
sbb
or
mov
sub
lea
jno
sti
xchg
outs
test
dec
test
pop
xorps
and
push
out
aaa
pop
mov
mov
cs
leave
jmp
push
loop
push
fwait
shr
bound
sub
loop
stos
scas
scas
scas
jle
out
mov
cs
push
stos
dec
cmc
fsub
repz
mov
daa
dec
and
test
sub
imul
in
das
sub
adc
popf
into
jmp
xchg
movs
xlat
xchg
movs
out
mov
xorps
mov
in
in
push
mov
sar
fdivr
movs
int3
test
sub
mov
loope
or
in
or
ins
mov
sub
push
jne
and
scas
out
push
mov
and
into
cld
iret
pop
sub
ins
inc
popf
dec
popf
push
aad
or
outs
add
lods
movs
add
movs
mov
push
jp
xchg
scas
push
push
dec
push
in
mov
in
mov
in
(bad)
sub
and
(bad)
clc
gs
stc
cmp
outs
ret
push
shrd
js
jae
(bad)
jle
push
pop
imul
sahf
fisttp
ss
aaa
jle
push
inc
ds
xlat
inc
jle
sahf
ficom
pop
mov
rcl
push
cs
ficom
push
push
pop
scas
pushf
scas
adc
sahf
inc
ja
mov
es
je
ds
push
pop
jle
push
fidivr
rcl
ds
mov
sub
sub
and
xchg
loop
movs
push
mov
out
mov
add
bound
sub
sub
call
cmp
out
mov
inc
push
push
movs
dec
jl
mov
loop
mov
(bad)
and
fs
(bad)
out
sbb
sbb
(bad)
xor
mov
std
jns
jmp
sar
inc
lock
outs
aas
and
out
int
int
mov
in
out
dec
out
rol
inc
mov
xchg
imul
pusha
cmp
add
add
rcl
cmp
rcl
xchg
mov
imul
or
retf
imul
add
add
cdq
pop
int
jmp
mov
inc
inc
mov
rol
stos
(bad)
mov
mov
cmp
sub
add
cmp
mov
mov
test
rcl
inc
shl
ret
sbb
mov
or
inc
out
outs
sti
ja
je
(bad)
shr
xchg
xor
inc
sar
xchg
repz
daa
test
inc
or
or
or
and
shl
lds
mov
cmps
and
mov
jne
inc
clc
icebp
xchg
imul
aaa
mov
or
xchg
retf
mov
rol
jle
jmp
xchg
cmps
fld
movs
inc
adc
int3
cmps
mov
xor
mov
ret
push
inc
add
lock
xchg
or
add
mov
mov
jnp
inc
stos
add
mov
mov
test
xchg
add
adc
ds
add
js
outs
sti
jge
out
cmp
cmp
pop
outs
or
outs
leave
ds
add
(bad)
int3
pop
ror
add
jle
and
into
cs
dec
xlat
call
mov
xor
cmp
stos
(bad)
fcomp
pop
cmps
push
mov
pop
sub
cwde
adc
and
scas
cmp
cdq
ds
pop
adc
adc
push
cmp
jle
ins
cwde
jno
pop
push
(bad)
test
push
fisub
ss
dec
cmp
push
cli
pop
(bad)
mov
lods
pop
lea
rcl
or
xlat
mov
mov
stos
fild
xchg
add
bound
push
repz
mov
bnd
push
xlat
not
ja
repz
not
jae
push
mov
jb
repnz
push
jbe
jae
push
div
repnz
repnz
sbb
repnz
inc
or
mov
sub
xchg
push
repnz
adc
pop
jbe
or
push
repnz
pop
sub
mov
jb
mov
ds
cmp
push
ret
mov
in
es
push
jnp
jae
repnz
jle
inc
(bad)
(bad)
shl
ret
sar
or
cmps
push
xchg
iret
adc
push
fiadd
repnz
jae
push
xchg
(bad)
mov
push
repz
rol
inc
stos
push
jp
jb
sahf
sar
pop
xchg
pop
repnz
xchg
pop
stc
in
xchg
inc
cmps
ret
push
pop
fistp
ficom
jb
mov
jno
iret
frstor
push
xchg
pop
(bad)
(bad)
or
in
mov
out
jns
or
cmp
pop
jb
fnstenv
jns
push
cmp
push
jge
push
jge
stos
xchg
std
xchg
xchg
std
(bad)
scas
and
imul
sbb
into
(bad)
scas
and
outs
push
dec
shr
ret
scas
xor
xor
scas
cmps
into
xchg
xchg
std
(bad)
scas
es
push
push
add
ss
test
(bad)
mov
sbb
not
inc
sahf
xchg
iret
inc
bound
repnz
ss
xchg
add
pop
jge
jge
mov
outs
std
dec
mov
out
jge
mov
outs
std
dec
mov
out
jge
mov
outs
std
dec
mov
out
jge
mov
outs
std
dec
mov
out
jge
mov
outs
std
dec
inc
fistp
das
bound
nop
cmp
lahf
cwde
inc
jo
retf
cwde
imul
(bad)
xor
ret
jae
add
lahf
jne
mov
push
loopne
xchg
dec
mov
icebp
adc
mov
les
xor
add
outs
aas
mov
jle
jl
jge
pop
push
fild
push
jmp
inc
in
dec
das
lock
test
rol
mov
or
cli
cmp
dec
xchg
mov
cmc
cs
ds
cmp
dec
bound
adc
outs
jmp
scas
mov
leave
fs
inc
mov
pop
add
add
add
add
add
add
add
add
add
add
add
add
leave
imul
add
inc
add
fisubr
loop
xchg
inc
xchg
inc
add
push
jae
jmp
add
jne
push
push
in
jb
jb
ins
jmp
in
in
repnz
inc
jecxz
in
imul
in
out
jne
fs
out
add
push
out
test
xchg
jne
pop
out
xor
(bad)
hlt
add
jns
dec
imul
out
leave
ins
imul
jb
fs
shr
iret
push
in
pusha
xchg
out
data16
dec
sub
or
pop
adc
shr
cmp
or
sbb
inc
sbb
xor
test
or
jmp
adc
pusha
mov
stc
inc
imul
mov
daa
cdq
push
jmp
loopne
nop
cs
rcl
repz
shl
shr
inc
scas
add
je
jno
jae
inc
mov
and
xor
inc
cmps
inc
scas
sub
es
sub
sub
sub
inc
movs
sub
xor
and
inc
sar
lods
inc
mov
adc
movs
inc
test
shr
and
repz
cmps
cmps
sub
inc
mov
shl
mov
lods
adc
adc
es
inc
popf
imul
xor
inc
mov
rol
cdq
pop
cdq
pop
cdq
pop
cdq
inc
jp
pop
sbb
scas
cwde
in
rcl
inc
xchg
arpl
push
out
adc
aad
adc
fbstp
das
mov
inc
rcl
inc
rol
rol
rol
rol
rol
rol
clc
push
lock
scas
dec
xchg
pusha
dec
data16
push
dec
es
rcr
test
mov
in
imul
inc
xor
adc
pop
push
addr16
mov
mov
test
cmp
jb
jb
xor
lods
jg
cs
xor
das
mov
stos
sub
mov
pushf
adc
ds
aas
mov
scas
xor
stos
setp
mov
cmp
sub
xor
xor
pop
mov
call
pop
mov
pop
mov
out
mov
xchg
xchg
jge
mov
icebp
jo
scas
mov
repnz
loopne
(bad)
push
jb
repnz
mov
int3
mov
dec
cmp
sub
add
inc
nop
out
push
popa
jle
mov
ins
retf
jle
jo
add
inc
dec
push
bound
mov
mov
jl
adc
jle
pop
bound
xchg
fisubr
(bad)
in
fisub
jmp
cmp
lock
mov
enter
into
mov
shl
sub
leave
clc
mov
dec
sub
shl
xchg
jmp
iret
mov
fst
sub
mov
(bad)
jecxz
cmps
cli
mov
fdiv
shr
mov
jbe
movs
rcl
call
xchg
aas
inc
aad
aad
icebp
les
mov
xchg
cmp
dec
test
xchg
jmp
out
fst
repz
add
mov
mov
int
ror
scas
xchg
mov
fcmove
les
pop
shl
ror
nop
fwait
loope
pushf
dec
pop
fstp
fsubrp
ror
mov
clc
xchg
int
fst
mov
into
cmp
push
iret
mov
(bad)
fst
xchg
cmps
rcr
jmp
ror
xchg
dec
icebp
fld
adc
push
lds
sub
dec
stos
rol
xor
or
dec
int3
psubw
fimul
dec
icebp
jp
dec
fisub
sbb
in
pop
fnstenv
pushf
cmp
xor
pop
mov
and
cwde
adc
mov
out
pop
retf
ins
cmps
sub
fnstcw
pop
mov
stc
push
loop
lahf
pop
fidiv
fmul
int
xor
loop
movs
pmaxub
call
cmp
sub
scas
dec
dec
in
das
fidivr
fdivr
out
sti
adc
rcr
fwait
cmp
das
mov
inc
fdecstp
pop
dec
mov
jl
push
mov
mov
(bad)
xor
mov
lods
pop
cmp
adc
rcl
les
xchg
sub
cli
pop
sub
ror
jmp
fcomp
rcl
loop
jecxz
fdivr
inc
loopne
std
or
mov
sub
es
dec
into
push
shl
cld
(bad)
out
or
jo
sub
xor
adc
sbb
pop
into
stos
add
int
mov
xor
jmp
cdq
sub
imul
(bad)
(bad)
dec
or
add
fidiv
in
sub
sbb
loopne
shl
icebp
add
cs
fldenv
dec
ror
inc
call
mov
into
push
fld
adc
jge
cmp
(bad)
add
cld
das
fisubr
in
xor
repnz
mov
dec
fld
ds
adc
sub
push
ror
test
iret
push
scas
cmp
aaa
neg
mov
aam
mov
fstp
lds
pop
mov
add
div
sbb
or
dec
stc
movs
dec
mov
push
hlt
dec
mov
xchg
repnz
fwait
inc
(bad)
xor
shl
mov
out
dec
xchg
pop
xchg
mov
and
dec
out
fmul
mov
pop
rol
stc
pop
or
or
add
mov
and
push
rol
adc
xchg
loopne
fisubr
sub
pop
stos
rcl
stos
lock
xchg
push
std
or
and
xchg
or
pop
and
les
xchg
ins
and
rol
sbb
xor
pop
es
cmc
inc
inc
add
icebp
jne
pop
sbb
jo
add
mov
icebp
repz
push
push
push
cmps
adc
inc
aad
mov
addr16
xor
fcom
xchg
and
pop
mov
scas
jp
mov
lods
pusha
cdq
dec
cmc
push
sbb
sub
iret
pop
out
jp
or
xor
mov
fcmove
add
sbb
aaa
xchg
inc
mov
movs
sub
retf
fs
xor
pop
xchg
push
mov
jge
inc
int3
or
lds
js
popa
mov
les
adc
rcr
pusha
mov
out
mul
imul
shl
les
push
scas
adc
or
xchg
ss
sub
fimul
push
loopne
rcl
mov
addr16
frstor
fs
lds
dec
pop
mov
mov
(bad)
pusha
ret
push
aam
lahf
outs
scas
adc
mov
or
les
xchg
add
xchg
cs
pusha
aad
cwde
pusha
test
mov
shl
push
push
xchg
mov
icebp
retf
or
inc
mov
mov
cli
test
aam
les
push
popf
sub
lods
sar
fidiv
xor
mov
mov
xchg
fsub
jno
outs
inc
(bad)
mov
dec
cdq
popa
mov
repz
mov
cmp
jno
ins
lea
ins
test
repz
rol
fimul
add
cmps
test
int3
cld
xchg
(bad)
sbb
push
fxch
fsub
sahf
ret
jnp
jl
cmps
hlt
xchg
mov
nop
cwde
xchg
lahf
ror
rol
aam
loope
nop
test
out
and
add
mov
xchg
movs
mov
jo
nop
fdivr
xchg
cmps
in
inc
jge
sbb
(bad)
lods
adc
clc
fimul
pop
jge
xor
mov
rol
sub
mov
sahf
ret
retf
lahf
int3
sahf
mov
movs
inc
push
adc
and
mov
mov
add
cmps
retf
mov
call
pop
xor
or
into
test
rol
dec
ret
mov
repz
dec
or
xchg
mov
enter
cmps
movs
fist
add
cmc
mov
mov
lock
cmp
neg
cmps
stos
mov
addr16
ret
xchg
enter
fwait
mov
adc
nop
fimul
mov
ins
outs
add
mov
ret
leave
popf
mov
inc
push
mov
jmp
test
inc
arpl
ja
pop
fsubr
stos
fnstsw
stos
inc
mov
fldenv
sahf
sub
inc
test
cli
dec
movs
cmp
cmp
stos
and
jl
mov
lods
pop
stos
jns
jl
mov
xchg
jle
cmp
in
add
pop
movs
aas
inc
mov
jge
stos
dec
jmp
jecxz
clc
inc
rcr
lea
cmps
aas
xor
fiadd
loopne
xor
cmp
(bad)
arpl
pop
pushf
inc
aas
in
inc
cld
dec
pushfw
(bad)
lock
sub
pop
mov
mov
sub
jp
jnp
sub
mov
pop
fidivr
cdq
sbb
pop
jnp
aaa
fmul
int3
ss
dec
mov
lods
popa
movs
arpl
jmp
ins
push
test
in
jge
mov
cmp
js
sub
jge
cdq
cmp
cmp
aas
les
inc
inc
movs
dec
loopne
cmp
cld
cmp
or
cmp
jnp
cmp
cmp
jae
pop
dec
mov
ds
pop
sar
dec
dec
scas
js
js
push
mov
rcl
jns
mov
mov
sahf
ins
xchg
mov
jno
out
jmp
(bad)
aaa
loopne
frstor
inc
out
fwait
loope
(bad)
jbe
ds
adc
mov
rcl
rol
clc
jo
mov
test
mov
adc
mov
xor
stc
xchg
icebp
push
iret
iret
inc
pop
jnp
sbb
adc
mov
xchg
inc
bound
push
std
pop
xchg
push
rol
xor
inc
lds
xor
cwde
pop
es
jbe
gs
mov
jle
lea
test
pop
repz
shl
xor
xchg
mov
xchg
jp
ret
xchg
jo
cli
inc
aaa
cs
(bad)
hlt
xchg
cmp
jne
jp
es
cdq
pop
shl
(bad)
cmp
fld
adc
pusha
cmc
shl
adc
das
movs
xchg
and
push
mov
loope
mov
mov
fild
jbe
jo
jp
and
inc
out
enter
movs
and
jne
push
shl
das
lods
dec
xchg
xor
mov
mov
mov
or
and
lods
add
jmp
mov
xlat
cmp
push
cld
aad
mov
mov
adc
push
mov
mov
mov
rcl
aaa
scas
add
ja
cmp
add
mov
push
retf
rol
adc
push
in
inc
call
int
mov
lahf
adc
test
loop
mov
fisttp
mov
xchg
cs
rcl
into
mov
adc
add
leave
or
and
push
scas
into
sub
mov
rol
rcl
add
ret
sub
into
xchg
adc
loop
add
sub
stos
and
sti
sub
sbb
sub
push
test
mov
xor
pushf
push
lock
nop
adc
test
mov
leave
push
into
imul
hlt
mov
jbe
dec
xchg
lods
div
sub
mov
in
cld
xchg
ja
push
add
and
fwait
out
mov
cli
cwde
or
jb
imul
loop
pushf
and
and
inc
push
or
mov
imul
mov
cwde
lahf
ret
sbb
push
sbb
div
nop
xchg
stos
into
imul
push
sbb
cdq
in
stos
enter
repz
sbb
ins
adc
loop
xlat
cmps
repnz
les
push
packssdw
push
icebp
out
loop
mov
dec
add
sub
in
mov
lods
cdq
stos
nop
pop
imul
mov
(bad)
lods
lea
inc
pop
jno
sbb
inc
in
rol
push
cmp
jle
and
retf
mov
xchg
add
push
sub
stc
hlt
into
pushf
int3
and
je
ins
cmp
jo
cmc
stos
xchg
jmp
xchg
push
jns
pop
cs
inc
clc
xlat
xchg
(bad)
sti
out
mov
sbb
pusha
daa
push
or
stos
pushf
call
sbb
sbb
and
xchg
loop
scas
rol
ds
loop
clc
nop
adc
inc
jl
sbb
hlt
iret
adc
js
arpl
cmp
cmps
xchg
jmp
icebp
loop
shl
sbb
push
xchg
lods
mov
ret
setge
inc
out
dec
popf
or
imul
dec
inc
jmp
cli
pop
lds
jmp
in
sbb
jnp
xor
aaa
enter
add
push
sti
jge
std
imul
leave
or
push
dec
jmp
jle
(bad)
popa
jecxz
dec
les
imul
test
and
or
or
or
in
push
push
mov
xchg
das
cdq
or
add
or
dec
add
cdq
add
or
jne
(bad)
mov
pop
fwait
dec
lahf
imul
(bad)
jmp
aaa
jle
inc
bnd
pop
out
jmp
or
sbb
in
push
in
(bad)
ins
rcl
sbb
popa
js
or
mov
sub
popa
fstp
jp
sbb
jmp
imul
stos
jle
pop
loope
sub
jne
add
and
sbb
ret
cmp
xor
ja
sub
dec
lods
jns
jbe
dec
xor
adc
add
not
out
in
jnp
cs
xchg
addr16
bound
les
cwde
ds
jb
repnz
xchg
arpl
mov
test
mov
and
sbb
out
mov
movs
gs
xlat
mov
mov
add
ja
pop
in
sbb
in
adc
sbb
xor
jo
jne
push
mov
cmps
and
cmps
xor
or
jb
mov
mov
mov
mov
xchg
adc
call
test
fwait
add
imul
sahf
push
repz
cmp
pop
repz
fwait
or
jle
add
mov
mov
dec
test
mov
cli
(bad)
mov
jno
lea
jmp
popf
xor
cli
gs
movs
or
mov
jmp
adc
jb
mov
ins
mov
aaa
cwde
xor
cs
adc
xchg
jge
sbb
mov
or
inc
test
hlt
repnz
movs
jg
nop
mov
int
stos
add
mov
inc
retf
enter
loope
push
sahf
push
shl
inc
std
xchg
sar
jge
push
pop
shl
xor
push
div
push
mov
rol
mov
(bad)
pop
aad
add
xchg
mov
arpl
push
jecxz
push
rcl
inc
ret
pop
adc
pop
mov
in
xchg
cmp
fild
and
add
push
out
cld
push
mov
ins
xchg
xor
push
shl
cwde
push
retf
jg
and
mov
xor
push
sti
or
int
push
inc
inc
push
xor
and
add
es
repnz
aad
arpl
xchg
in
inc
nop
mov
cmps
fsubr
jg
popf
es
jle
inc
mov
cmps
jbe
dec
jae
dec
(bad)
jne
push
rcl
xchg
ins
push
mov
icebp
pusha
ret
xchg
inc
inc
mov
xchg
and
jae
mov
mov
inc
jb
push
arpl
inc
cmp
dec
jmp
pop
ret
je
mov
pop
int
ret
loopne
test
sahf
xchg
fcomp
mov
stos
ret
add
imul
pcmpeqw
repnz
xor
mov
aad
push
mul
imul
pop
retf
dec
out
aas
xchg
aad
idiv
and
imul
dec
jae
les
cmc
inc
jnp
and
lods
div
call
push
rcr
push
clc
xor
push
sti
loopne
int3
dec
push
inc
out
ja
push
inc
fs
xor
or
sar
fcom
or
fadd
xchg
js
out
out
push
(bad)
push
pop
inc
xor
jo
mov
ret
cmp
aam
inc
out
jno
in
mov
popa
arpl
push
hlt
sub
push
fist
shl
aad
ss
adc
push
inc
xchg
dec
pop
xlat
popf
xchg
push
sub
js
push
test
jle
fist
cmp
pop
inc
sub
inc
cdq
xchg
sbb
out
push
sub
push
scas
je
call
repnz
cmp
daa
jl
jne
cmp
jp
in
xchg
cdq
(bad)
fild
jle
mov
cmp
aam
sbb
sbb
adc
inc
into
cmp
mov
out
jl
dec
add
pop
cmp
jl
sub
xor
pop
cdq
mov
sbb
dec
popa
outs
inc
sbb
jno
mov
sub
pop
and
in
cmp
gs
aad
lahf
idiv
pop
push
mov
out
gs
sar
pop
(bad)
ins
jge
pop
punpcklwd
movs
scas
cmc
repnz
mov
sbb
dec
and
or
mov
imul
cdq
lds
pushf
push
sub
test
inc
sbb
xor
iret
mov
mov
add
aad
cdq
outs
push
add
and
in
jno
test
jae
push
es
iret
in
les
push
inc
dec
pop
xchg
scas
mov
pop
mov
or
rcr
retf
popa
outs
sbb
mov
js
or
jns
mov
or
fist
xchg
out
out
or
sti
sub
enter
sahf
or
push
jmp
push
mov
sbb
push
mov
fbstp
mov
addr16
sub
or
xchg
cmp
sub
pushf
mov
(bad)
mov
inc
or
ret
jbe
jl
or
leave
cmp
ja
cwde
dec
fucomi
cli
xor
mov
test
xlat
fwait
sbb
sti
pop
(bad)
cmps
sbb
cmp
out
add
cmp
cmp
ins
pop
fistp
call
cmp
cmps
in
sbb
jns
ss
fldenv
jecxz
lahf
(bad)
jns
push
mov
pop
call
or
in
test
push
and
addr16
pop
mov
sub
jg
popf
fstp
jg
pop
jns
mov
cld
(bad)
pop
jecxz
or
mov
das
enter
or
jo
popa
fimul
das
pop
or
mov
mov
fnstcw
jl
cdq
sub
pushf
cli
xchg
xor
jl
sub
jno
cdq
test
fistp
mov
test
xchg
(bad)
out
lahf
cmps
cs
in
mov
dec
test
retf
mov
jns
mov
js
pop
fisttp
imul
dec
(bad)
cmp
or
dec
mov
mov
out
jg
dec
or
dec
push
fmul
psubq
mov
sub
stc
popf
or
icebp
dec
clc
pop
in
cmp
jle
fimul
jno
pop
leave
pop
std
jo
stos
jmp
mov
cmps
dec
pop
sbb
pop
jns
sbb
push
mov
pop
out
mov
jg
cli
push
(bad)
pop
dec
jmp
and
dec
inc
push
mov
and
or
ja
icebp
mov
and
add
and
and
mov
mov
push
ss
or
or
gs
adc
xchg
popa
rcl
push
arpl
add
fisttp
adc
icebp
mov
popa
popa
add
cmp
gs
jno
xor
popa
mov
out
mov
ret
gs
cmps
push
dec
pusha
push
retf
mov
mov
adc
adc
adc
shl
(bad)
ds
mov
fisttp
inc
cmps
dec
ret
xchg
inc
and
ja
popa
mov
mov
mov
cmps
push
xor
mov
and
jo
xchg
mul
ror
aad
and
retf
repnz
aaa
and
xchg
aam
xchg
rcr
inc
mov
xchg
mov
lea
xlat
and
shl
test
inc
leave
daa
add
xor
pop
into
pop
ror
(bad)
data16
jecxz
daa
hlt
jno
in
and
ins
xchg
push
mov
push
and
scas
add
popf
call
adc
popa
xchg
and
repnz
div
or
add
mov
xchg
add
push
jmp
test
mov
push
mov
xor
cmps
pop
fldcw
add
mov
(bad)
push
add
repz
mov
pop
ret
loope
add
and
div
test
xchg
and
cli
mov
ret
ss
push
dec
xor
out
shl
loope
fist
stos
pushf
adc
(bad)
(bad)
(bad)
enter
jae
ds
sbb
cmps
pop
in
ins
sub
jle
sbb
repnz
add
cmp
outs
shl
(bad)
ins
shl
adc
mov
(bad)
jo
inc
fidiv
int3
fist
arpl
mov
xchg
sti
push
and
nop
and
shl
cs
repnz
push
xchg
and
(bad)
mov
adc
sbb
inc
adc
jbe
jb
pop
xchg
and
aas
mul
fstp
xor
adc
adc
inc
mov
fld
loop
and
fistp
fisttp
jl
enter
jle
cmp
pushf
jb
int3
dec
repnz
neg
add
das
imul
push
(bad)
in
push
aaa
push
fisubr
sbb
jae
or
xor
or
call
sub
push
and
pop
fnstenv
dec
jno
popa
sub
dec
into
cmp
out
push
test
push
lahf
pop
jg
out
add
aas
push
cmp
add
out
add
shl
inc
ror
aas
push
inc
push
push
push
lock
mov
or
aas
xor
ret
mov
jmp
jge
in
dec
mov
add
imul
lds
pusha
pop
(bad)
fsub
pop
pop
clc
adc
push
ds
dec
mov
add
or
ror
xlat
aam
inc
dec
sbb
jne
adc
push
stos
cmp
sbb
nop
sbb
cmp
retf
daa
sub
sbb
scas
lock
xchg
push
repnz
sahf
jns
jecxz
sar
or
cmp
inc
aaa
or
xchg
sbb
je
jo
sbb
dec
cmc
sub
cdq
ror
push
cmp
fidivr
sub
stos
cld
dec
xchg
and
in
sbb
stos
addr16
fs
sub
fmul
int
out
(bad)
imul
std
imul
jns
pop
cwde
jge
sbb
mov
stos
push
imul
xchg
xchg
ins
mov
mov
or
iret
dec
jbe
lods
inc
out
das
mov
lahf
mov
mov
imul
pop
pop
or
jle
dec
fcomp
cmp
sahf
mov
imul
xchg
dec
pushf
outs
stos
sbb
cmp
or
(bad)
sub
fsubr
mov
sub
mov
cmp
stos
pop
sub
scas
dec
(bad)
in
or
sahf
cmp
aas
sbb
jge
jmp
fisttp
jl
inc
stos
ins
pop
lods
mov
mov
int3
inc
clc
imul
cmp
aaa
mov
xor
mov
add
jb
xchg
shl
xor
cmps
mov
pushf
xchg
test
pop
push
adc
out
cmp
movs
add
(bad)
mov
xchg
push
mov
xchg
cmp
pop
dec
mov
dec
push
inc
les
adc
xchg
jno
out
shl
in
iret
out
mov
adc
xchg
rol
xor
cmp
xchg
cmc
cmp
push
xchg
sub
add
sahf
fisubr
mov
or
and
je
ss
jo
jg
nop
xchg
jne
shl
xor
inc
push
dec
aam
push
or
dec
sub
jp
xchg
movs
mov
popa
movs
jne
mov
mov
inc
mov
(bad)
push
ja
adc
jno
or
shr
pop
in
jno
push
jno
pop
pop
mov
mov
out
dec
push
jns
cmps
(bad)
aad
jp
xor
xor
mov
lock
add
inc
out
test
pop
mov
push
in
cmps
js
jp
mov
sahf
fsubrp
test
fs
stos
pop
cmps
shl
inc
mov
loop
mov
test
rol
jl
in
jns
cmps
mov
mov
push
jae
push
xchg
jle
lods
repz
and
loopne
in
adc
xlat
xchg
xchg
and
jmp
stos
arpl
jl
ret
je
jb
add
push
je
xor
out
cmp
inc
mov
jge
pop
pop
push
nop
push
enter
fiadd
sub
loope
mov
out
call
cmp
jge
js
xor
inc
mov
or
test
jl
adc
iret
shl
push
out
mov
test
retf
in
dec
adc
xchg
arpl
int3
inc
jo
push
xlat
aas
sub
pop
add
jbe
icebp
sbb
sti
mov
out
aas
mov
loope
mov
push
jecxz
repnz
test
xor
ret
lock
mov
stos
call
int
cmp
add
hlt
loopne
add
xlat
jnp
fadd
shl
in
jbe
cmc
dec
jb
jbe
hlt
dec
xor
push
dec
sub
xchg
push
mov
div
xchg
xor
inc
mov
inc
lock
jne
shl
xchg
shl
out
xlat
lods
ret
aam
lock
mov
ret
ja
ins
popa
sub
xor
in
fcomp
int
(bad)
push
inc
cmps
mov
retf
mov
inc
pop
jl
push
inc
ret
push
add
ret
xlat
aas
and
xchg
(bad)
mov
ds
pop
xchg
cmp
mov
out
fsubr
mov
push
ret
out
js
lods
stos
xor
test
les
dec
cmp
xchg
push
mov
out
fs
in
mov
and
pop
or
xchg
fist
pop
test
lods
fsubr
dec
add
and
mov
push
inc
add
sbb
loopne
stos
fwait
sti
xor
cmp
sbb
pop
jg
repnz
nop
push
gs
lahf
jge
not
iret
mov
mov
jle
stos
or
(bad)
cmp
test
jbe
mov
movs
popa
test
add
mov
lea
(bad)
jns
cmp
mov
adc
jp
rcl
xlat
mov
iret
pop
(bad)
loop
jg
frstor
pop
cmp
dec
adc
cmps
iret
ficomp
mov
imul
xchg
cmps
test
cmp
repz
cmp
dec
mov
es
jae
push
adc
into
and
adc
push
aas
and
sti
sub
mov
dec
push
adc
dec
shl
pop
pop
das
pop
mov
es
cmp
shl
test
sub
push
fdiv
lods
and
and
outs
popa
push
pop
cmp
sub
mov
nop
test
xlat
lea
mov
rol
xchg
pop
jge
stos
cld
setle
lods
mov
and
scas
cmps
pop
xchg
mov
cmp
lea
fild
lods
imul
cmp
or
cmc
cmp
dec
lahf
scas
jg
je
or
xor
pop
pop
fsubr
arpl
ds
daa
xor
mov
daa
fcom
jg
(bad)
outs
int3
cwde
inc
sbb
add
leave
mov
pop
xchg
test
dec
sar
(bad)
sar
mov
sub
scas
cmp
imul
sub
imul
sub
mov
xchg
jp
fsubr
cmp
dec
dec
pop
pop
inc
mov
dec
lea
lds
dec
cmps
jae
icebp
push
or
add
push
ins
mov
push
ins
(bad)
dec
mov
and
dec
icebp
pop
in
mov
(bad)
div
mul
xor
retf
and
lea
xlat
mov
pause
xchg
les
clc
adc
jns
jl
inc
test
aam
retf
inc
xor
xchg
jno
pop
clc
jbe
cmp
lods
sbb
cmp
dec
inc
inc
nop
push
jecxz
add
cs
test
or
mov
mov
test
mov
std
dec
fisttp
cmc
sbb
dec
repnz
(bad)
xor
loop
imul
adc
push
nop
mov
fsub
in
test
adc
mov
sub
aam
iret
adc
out
jmp
push
and
(bad)
push
shl
lahf
rcl
test
bound
jl
inc
test
arpl
and
cmp
sub
xor
inc
and
adc
push
repz
in
aad
rcr
mov
jecxz
mov
(bad)
cmp
xchg
mov
aad
push
fsub
cmc
pop
add
adc
add
pop
mov
bound
rcl
je
aad
leave
inc
mov
cmp
push
ficom
divps
sbb
call
and
xchg
jp
push
stos
inc
mov
cpuid
call
(bad)
xlat
mov
inc
inc
add
dec
shr
mov
arpl
push
lods
cmp
jnp
ins
fs
ret
dec
mov
mov
sti
jmp
dec
push
add
xchg
inc
sar
pop
or
imul
les
and
mov
mov
retf
bound
das
cmp
and
aad
mov
jl
test
and
daa
dec
repnz
push
arpl
daa
popa
retf
jne
dec
fcom
out
nop
lds
push
cwde
push
in
cld
icebp
dec
daa
jae
adc
push
push
push
push
mov
sbb
cmp
mov
ret
push
rol
adc
popa
rcl
and
inc
test
in
push
sti
push
mov
cmp
icebp
push
cmp
adc
and
push
repz
int
loopne
jnp
adc
jle
ja
push
mov
push
mov
adc
lods
arpl
shl
adc
add
mov
pop
out
or
stc
mov
add
xchg
arpl
arpl
cmps
push
mov
retf
push
adc
inc
out
mov
xchg
xor
or
push
aas
test
xor
outs
or
cmps
aas
mov
leave
push
fisubr
ja
aaa
dec
out
ja
push
stos
and
inc
sbb
movs
push
and
lea
es
adc
or
into
clc
popf
loope
sbb
inc
xor
push
add
outs
(bad)
cmp
and
pop
mov
push
xor
or
das
jg
push
cdq
xchg
mov
ja
sub
mov
test
aaa
ins
mov
pushf
cld
mov
adc
push
std
scas
add
mov
xlat
jns
pop
mov
xor
mov
cmp
(bad)
dec
cs
mov
xchg
dec
aaa
jno
inc
dec
and
fnsave
adc
inc
fwait
inc
xor
push
sbb
pop
cmp
ror
sub
push
mov
neg
pop
xlat
in
push
(bad)
sti
fxch
das
lods
cmp
sub
pop
cmp
popf
xchg
sub
popa
call
mov
shr
arpl
aas
stos
mov
jle
dec
and
pop
mov
sbb
jae
jae
ja
cmp
inc
stos
mov
(bad)
pop
cmp
lods
mov
fld
and
es
xor
mov
(bad)
into
ror
jno
xor
dec
inc
adc
pop
or
or
out
cmp
mov
xchg
out
sub
fcmovb
jp
(bad)
sbb
inc
dec
and
mov
je
ins
push
sub
ins
mov
aam
aam
in
sbb
push
add
mov
adc
fwait
icebp
add
imul
rol
fwait
je
lods
xlat
gs
adc
xchg
out
push
stos
and
fcomp
add
jo
add
leave
imul
or
or
int3
out
jecxz
mov
in
enter
mov
push
inc
inc
inc
or
aam
xor
jnp
int3
jge
xchg
adc
inc
fst
ror
adc
cs
cmp
(bad)
mov
stos
inc
es
enter
pop
cmp
and
sub
shl
and
je
fs
popa
out
xor
and
mov
add
add
icebp
leave
or
das
mov
xchg
leave
ret
mov
repnz
(bad)
cmp
pop
push
push
mov
add
ret
das
fsub
inc
pop
pop
popa
push
mov
sbb
mov
sub
shl
xchg
adc
sub
aaa
dec
add
sbb
mov
cmp
clc
cdq
add
xchg
inc
or
call
sbb
sti
inc
pop
jnp
nop
cmp
scas
xor
and
inc
or
push
in
dec
adc
inc
sub
scas
add
pop
mov
inc
cmp
sub
ins
int3
lods
pushf
dec
add
inc
adc
icebp
sbb
sub
mov
(bad)
xchg
jp
mov
and
fsubrp
(bad)
retf
in
and
sahf
ror
sub
popa
out
or
xchg
or
sub
loopne
and
cmc
sbb
xlat
mov
dec
dec
arpl
sahf
aas
or
dec
dec
xor
sbb
and
mov
xchg
int3
mov
int3
leave
sub
stc
popf
mov
inc
leave
push
jnp
imul
fs
xor
ret
nop
pop
out
out
cmp
sub
shl
scas
and
outs
mov
push
fdivr
mov
fst
shl
and
mov
push
push
push
js
bswap
test
cmp
cmp
dec
std
pop
sbb
mov
stos
push
sti
adc
fcomi
sbb
dec
hlt
xor
aam
test
mov
ins
cmp
push
retf
ja
push
(bad)
cmp
idiv
test
push
mov
(bad)
stc
lahf
pop
fdiv
das
push
cdq
push
sbb
mov
ds
out
ins
xchg
inc
lds
jo
push
mov
outs
outs
push
fwait
mov
fiadd
repz
les
sub
and
stc
add
mov
ficomp
cdq
push
mov
push
sub
push
shr
sub
ret
cmp
push
jb
inc
mov
jae
push
pop
sbb
fild
add
push
jno
push
xchg
cmp
fdiv
and
xchg
push
je
xor
and
mov
test
push
push
xor
jno
xor
push
(bad)
rcl
xchg
or
jo
test
inc
inc
xor
cs
push
pop
fisttp
inc
jmp
out
cmp
cmp
jae
dec
and
nop
jb
in
fcmovb
xchg
push
out
shl
mov
loope
fs
loope
mov
fnstsw
pop
and
push
mov
push
xor
int
xchg
loopne
and
push
mov
mov
loope
outs
jmp
sub
and
mov
mov
pop
jecxz
test
aad
movs
pop
div
mov
retf
mov
hlt
sar
jecxz
jle
push
xor
jmp
mov
sbb
(bad)
retf
maskmovq
test
(bad)
mov
fimul
aaa
xor
mov
sbb
daa
push
mov
xchg
dec
and
or
push
shl
add
int
push
xor
(bad)
sbb
push
out
mov
cmp
adc
test
mov
rcr
jmp
jno
and
jb
pop
xor
xchg
mov
mov
nop
push
and
xchg
cmc
in
mov
inc
xchg
xor
push
xor
test
xor
mov
jb
data16
mov
lea
sub
add
mov
xchg
cmp
and
je
data16
sub
lock
sub
push
nop
push
pushf
sub
push
shl
pushw
mov
aas
jne
imul
xchg
(bad)
xor
or
es
dec
pop
out
adc
push
cmps
outs
mov
gs
inc
inc
push
dec
mov
out
push
inc
mov
pop
jp
out
outs
cli
dec
das
inc
icebp
cmp
pushf
push
loop
fdivr
das
and
mov
xlat
pop
fs
shl
mov
push
icebp
neg
mov
and
xchg
mov
sbb
adc
xor
outs
mov
scas
push
pop
sbb
int
out
fidivr
xchg
adc
mov
jo
retf
outs
adc
sub
imul
xchg
cmp
xchg
add
push
adc
mov
inc
inc
lahf
pop
jnp
add
repz
mov
pop
icebp
or
pop
pop
stos
test
inc
into
aaa
or
pusha
inc
jge
ret
sahf
mov
data16
dec
adc
or
in
retf
pop
daa
dec
dec
dec
sbb
sar
cwde
repnz
aam
adc
arpl
imul
fld
pop
push
je
dec
cs
xor
iret
mov
fldenv
and
jno
dec
shr
mov
(bad)
fdiv
cmp
les
mov
push
push
popa
pop
push
push
dec
mov
cmps
mov
jp
jle
pop
mov
mov
sbb
jg
lds
into
jp
imul
cmp
ja
out
inc
iret
ins
iret
sbb
cdq
sub
aas
sbb
jle
lahf
mov
jg
outs
cld
dec
mov
sbb
dec
jns
sbb
out
retf
jp
dec
test
fsubr
xchg
retf
mov
(bad)
mov
push
sbb
(bad)
lock
or
or
jge
scas
add
cmp
inc
pushf
pushf
mov
mov
pcmpgtd
lock
test
sub
dec
jbe
dec
pop
int
retf
mov
pop
(bad)
enter
jae
sti
xor
or
mov
mov
(bad)
pop
xchg
inc
fldcw
mov
enter
mov
mov
clc
pop
mov
rol
fidiv
imul
jg
aad
dec
nop
cmp
das
shl
inc
pop
imul
shl
adc
pop
push
test
pop
scas
fbstp
stos
mov
mov
daa
push
adc
or
add
xchg
cmp
std
ja
popa
xor
xchg
mov
push
sbb
mov
loop
sub
add
adc
pop
inc
mov
shr
xor
div
dec
mov
loop
inc
mov
cmps
sbb
add
fadd
mov
shl
mov
sahf
movs
out
mov
adc
push
les
test
and
inc
out
xchg
pop
push
call
add
hlt
push
div
clc
jle
or
inc
adc
outs
(bad)
and
daa
xchg
movs
cmps
mov
call
fxtract
ficom
and
inc
daa
dec
add
adc
outs
rep
das
(bad)
shl
pushf
(bad)
mov
xor
fisttp
push
rol
shl
push
sbb
and
pop
inc
inc
xor
adc
les
dec
out
add
dec
out
xchg
hlt
mov
icebp
aas
mov
ficomp
fcom
add
nop
add
dec
movs
mov
stc
das
cld
jle
xchg
add
mov
ja
push
leave
push
adc
sub
adc
lods
out
and
mov
and
rcl
leave
jbe
ss
adc
xchg
jo
adc
pop
adc
sbb
retf
aam
inc
in
sbb
mov
lock
fwait
mov
jg
gs
test
push
in
inc
sar
pop
jns
mov
shl
mov
add
push
pushf
jo
and
je
ja
mov
inc
ja
test
push
int3
or
es
pop
cmp
test
gs
std
mov
pop
xchg
mov
add
pop
xor
es
mov
(bad)
fcmovnbe
bound
icebp
push
in
mov
mov
cld
stc
sub
or
jno
cmp
mov
push
repz
push
shr
xchg
pop
mov
push
mov
dec
lock
adc
push
push
das
push
pop
loop
mov
adc
call
and
add
(bad)
ins
mov
push
repnz
mov
xor
jbe
inc
fcom
iret
stc
pop
cmp
repnz
cmps
jle
imul
jg
xor
xchg
mov
mov
in
ds
push
repnz
loop
loopne
ret
and
enter
loope
shl
mov
jg
jp
push
in
xor
lock
call
adc
stos
lea
inc
push
lds
shl
out
scas
aam
inc
test
cmp
sub
and
and
and
push
clc
das
mov
pop
mov
rcl
or
and
nop
fistp
jg
rcl
cmp
mov
cmp
mov
push
inc
cli
mov
push
mov
popf
mov
add
add
mov
bound
std
inc
(bad)
xor
mov
inc
cmp
jmp
adc
sbb
dec
dec
inc
sub
and
inc
fdiv
mov
jnp
or
mov
xor
xchg
les
sub
xor
test
sub
and
neg
icebp
jmp
in
sbb
add
aad
cmp
inc
cli
retf
pusha
jl
cmp
xchg
(bad)
mov
ror
push
xor
imul
mov
aam
retf
mov
push
pop
rcl
adc
sub
or
leave
xor
iret
inc
push
mov
aas
and
ins
inc
dec
pop
push
loopne
push
pop
aas
mov
dec
cmp
cmp
out
jecxz
leave
push
test
test
sti
pop
pusha
test
(bad)
cmp
rcr
mov
fsubr
xor
inc
lahf
dec
sahf
call
mov
cmp
push
movs
fadd
cmp
leave
loope
leave
enter
dec
mov
sbb
pop
repnz
lods
sub
pop
das
loop
(bad)
lahf
and
scas
mov
scas
pop
cmp
cmp
pop
cwde
inc
imul
xor
leave
pop
repz
test
into
mov
mov
stc
push
ss
js
imul
push
aas
mov
(bad)
cmp
jmp
stos
retf
xor
aas
stos
outs
adc
imul
or
mov
dec
mov
test
jmp
lea
pop
enter
dec
sahf
test
ds
movlps
pop
mov
pop
jmp
xor
lahf
popa
inc
push
mov
push
scas
jp
cmp
sahf
repnz
and
cmp
xlat
stos
int
xor
retf
xor
std
ja
je
and
xor
rcl
imul
sbb
push
and
add
jle
and
ja
jle
and
loope
jecxz
fidiv
icebp
(bad)
shl
cwde
add
fidiv
(bad)
imul
out
inc
loopne
inc
pop
and
jle
cdq
in
lods
fisubr
xchg
inc
(bad)
dec
pop
(bad)
xlat
gs
xor
shl
pop
jg
das
cmc
aas
out
pop
sbb
ret
(bad)
pop
dec
jne
mov
nop
aam
mov
dec
xor
enter
je
and
xchg
pop
and
xor
ja
fisub
iret
push
inc
sub
mov
dec
mov
ja
mov
xlat
xor
arpl
cmp
push
int3
cmc
adc
inc
pop
ja
mov
xlat
loopne
add
out
pop
pop
inc
jmp
push
movs
test
ja
xor
add
addr16
cmp
inc
fsub
push
cdq
mov
int
mov
je
ss
inc
xor
or
int3
icebp
inc
jb
cmp
jmp
fxtract
ss
loope
stc
test
inc
xor
pop
mov
ins
or
adc
mov
ins
(bad)
cmps
scas
or
xor
pop
push
iret
fisub
add
xor
ss
add
lock
push
fcmovu
push
aam
in
mov
(bad)
addr16
out
(bad)
das
cmps
in
mov
mov
mov
cld
dec
clc
repnz
loop
mov
(bad)
add
inc
lock
aad
push
fimul
lods
pop
out
mov
push
xlat
(bad)
test
mov
idiv
cmp
push
repnz
rol
mov
mov
cmps
inc
cs
pop
add
push
aas
and
test
xchg
push
mov
or
xchg
mov
ds
inc
popf
fdiv
and
pop
(bad)
and
cmp
xor
sub
xchg
sbb
jno
int3
fnstenv
jmp
ret
aaa
mov
mov
push
inc
fldenv
imul
xchg
sbb
cmp
xchg
jno
ins
call
push
cdq
mov
sub
aas
repz
or
inc
sub
out
push
sub
aad
sbb
shr
mov
les
dec
push
int
mov
das
inc
add
mov
xchg
jecxz
push
into
dec
xchg
ficom
fcom
mov
pop
and
leave
cwde
mov
cmc
mov
mov
add
lea
jmp
push
xor
int
push
rcr
fisub
dec
je
inc
iret
cdq
shl
pop
mov
cmp
mov
test
bound
add
fdiv
cmps
shr
stc
aas
js
cdq
scas
dec
jg
jae
push
sub
or
out
pop
das
or
cmp
mov
out
or
push
retf
adc
jg
push
adc
add
cmc
xadd
jle
repz
or
inc
scas
leave
mov
dec
xor
pop
and
outs
cmp
ret
nop
fild
dec
clc
xor
adc
jmp
or
pop
(bad)
jmp
das
jmp
test
ins
(bad)
pop
inc
mov
cdq
test
pop
sbb
and
fcomp
push
sbb
(bad)
ja
mov
add
sub
jecxz
push
ret
bswap
sar
cmp
mov
pushf
push
stc
jg
aas
sub
inc
mov
jp
icebp
movs
inc
dec
in
adc
div
imul
dec
aad
lods
cmps
inc
mov
push
add
mov
fcmovb
add
add
fild
inc
sti
ss
enter
into
lock
aaa
pop
add
repnz
dec
test
sub
adc
inc
shl
dec
outs
sub
jecxz
call
inc
cli
mov
sub
adc
(bad)
jnp
cmps
mov
sbb
getsec
mov
idiv
ret
fstp
ss
mov
pop
xor
sub
(bad)
je
sti
outs
dec
and
and
pop
test
loopne
fnsave
in
or
jmp
out
ret
pusha
push
jg
mov
inc
int3
ds
(bad)
jno
ja
popa
movs
shr
repz
div
xor
sbb
mov
jnp
pop
adc
jmp
hlt
mov
or
inc
or
(bad)
int
mov
jne
jae
retf
out
fldcw
pusha
(bad)
pop
enter
div
dec
xor
inc
mov
xchg
js
fdivr
nop
sbb
mov
fwait
push
not
mov
pop
repnz
out
fs
in
jo
stos
aaa
add
pop
idiv
iret
mov
or
xor
mov
mov
jmp
xchg
xchg
and
inc
mov
and
push
cmps
pop
(bad)
mov
fsub
dec
jb
(bad)
mov
cmp
inc
pop
push
outs
xlat
mov
xchg
mov
stos
rcl
cmp
jge
mov
cmp
fnstenv
pushfw
jb
cwde
jp
nop
daa
inc
adc
xchg
call
mov
stc
adc
inc
aam
out
fldcw
lods
jo
or
rol
fs
jle
jl
test
in
and
daa
xchg
dec
ss
mov
pop
es
and
popa
mov
rol
sub
dec
cmp
sbb
ds
out
and
popa
inc
xchg
and
xor
and
mov
fs
mov
(bad)
int3
(bad)
or
and
xor
loop
test
ja
jb
jo
cmp
cmp
and
inc
jbe
pop
mov
(bad)
cmp
lock
xchg
jae
cmps
pop
mov
idiv
imul
ret
retf
out
repnz
and
test
cdq
aad
xor
and
push
sub
inc
and
jp
xchg
inc
mov
(bad)
scas
add
dec
(bad)
dec
xor
cmp
out
pop
repnz
jb
push
movs
fwait
ins
iret
mov
ss
dec
je
jp
and
mov
pushf
and
out
jecxz
push
les
test
neg
sbb
inc
aam
loop
xchg
jecxz
in
xor
add
push
and
les
xor
xor
arpl
xor
dec
jnp
push
(bad)
mov
repz
int3
pushf
or
xlat
or
sbb
(bad)
or
(bad)
jnp
hlt
jne
icebp
and
push
movs
or
xchg
aaa
jmp
repnz
in
xchg
adc
xchg
push
jae
xchg
js
cmp
test
mov
push
mov
cmps
sub
imul
xor
dec
leave
xlat
mov
and
fcomp
sbb
lahf
cs
fistp
out
sub
dec
loope
and
mov
cmp
lahf
stos
jmp
test
(bad)
mov
iret
or
mov
add
jae
push
xchg
adc
idiv
dec
mov
xchg
jmp
xchg
mov
add
mov
mov
stc
adc
in
out
fadd
(bad)
(bad)
mov
ror
sbb
hlt
mov
mov
retf
jmp
mov
sbb
xor
inc
lahf
adc
xchg
mov
loopne
pop
pop
adc
adc
popf
xchg
cwde
aas
jns
call
push
imul
push
mov
xor
popa
push
(bad)
dec
mov
mov
icebp
xchg
mov
mov
or
arpl
imul
ror
cmp
adc
add
ret
jne
mov
ret
stc
jno
jle
sbb
loope
sar
dec
fnstcw
stos
cmp
xlat
dec
cwde
xchg
sub
fabs
xchg
or
lds
out
fldenv
test
mov
pop
(bad)
cmps
jns
cli
jmp
in
jge
mov
cwde
inc
loope
cmp
js
mov
aas
mov
mov
and
add
jg
hlt
xlat
ss
sbb
das
inc
int
jne
imul
ins
fwait
pusha
fdivr
xchg
push
rcl
mov
cdq
cwde
outs
test
mov
in
es
outs
dec
adc
xchg
mov
outs
jne
push
js
push
int
out
mov
mov
aam
fwait
sahf
xor
imul
ins
mov
xchg
mov
sahf
sar
cdq
cwde
aad
jmp
jo
(bad)
xor
jns
ss
pop
test
mov
jg
enter
iret
in
jb
mov
push
pop
rcr
pusha
cmp
(bad)
ror
out
and
mov
fnstenv
push
outs
str
outs
sahf
inc
mov
mov
cmp
fst
add
cwde
call
jns
jno
shr
xchg
inc
fs
ins
xchg
sbb
outs
mov
xchg
xchg
mov
mov
mov
pusha
mov
lahf
repnz
inc
pop
cmp
xchg
cmp
loope
(bad)
sub
ins
loopne
rcl
imul
sbb
xlat
inc
imul
imul
xchg
and
out
enter
jne
imul
call
test
sub
or
sbb
test
loopne
dec
mov
stos
and
and
xchg
xchg
xrelease
fucomip
xor
adc
retf
add
adc
cmps
jle
enter
cmp
mov
test
xchg
xor
xor
mov
lahf
addr16
dec
jnp
push
jge
mov
clc
pusha
jl
shl
jae
xchg
es
push
ja
call
xor
fcmovbe
adc
pop
popf
xor
in
in
xchg
cmc
and
pop
push
xchg
inc
or
adc
xchg
or
in
mov
xchg
pop
aas
psrlw
pop
lods
jnp
loop
and
frstor
dec
xlat
es
mov
int
mov
int3
jae
xchg
movs
adc
and
mov
jb
jmp
mov
push
xchg
mov
sbb
pop
xchg
mov
xchg
bnd
es
jno
mov
enter
push
jb
jb
jecxz
dec
shl
pop
push
inc
xchg
(bad)
pusha
ja
lods
movs
aaa
mov
leave
add
push
xchg
adc
or
inc
cmps
pop
jg
out
cmp
fstp
push
(bad)
jo
and
add
int3
les
sub
cmps
xchg
enter
dec
stos
pop
jo
xor
mov
ret
inc
jb
addr16
fdiv
(bad)
lods
add
repnz
adc
outs
stos
test
test
and
jmp
neg
jp
pop
push
xchg
and
(bad)
mov
mov
dec
lea
(bad)
mov
cmp
sbb
fld
scas
fldcw
bound
push
(bad)
push
and
sub
inc
(bad)
xchg
aaa
push
dec
sub
rol
sub
cs
push
not
scas
icebp
imul
ins
xlat
fcom
xchg
inc
sub
fld
hlt
pop
enter
sub
(bad)
jno
sar
mov
or
idiv
lock
fnstenv
add
popf
inc
inc
dec
fld1
mov
neg
outs
xchg
jmp
lods
jecxz
xlat
stc
shl
mov
cmp
push
jp
fisub
inc
aad
das
loope
adc
fcmovbe
mov
out
push
stc
(bad)
cmp
das
dec
leave
out
dec
cmp
into
ja
pop
cmp
mov
(bad)
pop
inc
xlat
mov
pop
loop
xchg
fcmove
pop
jno
(bad)
jmp
in
sahf
in
and
ins
stc
pop
sub
push
xchg
xchg
sub
inc
add
cmp
or
push
sti
aam
sub
sub
in
(bad)
ror
mov
jmp
lahf
mov
and
xor
sub
sahf
lds
clc
xlat
loope
sub
mov
leave
(bad)
fbstp
mov
xchg
pop
lods
push
fwait
das
push
retf
into
cld
aas
fwait
imul
ins
fisttp
jns
xchg
cmp
sub
jmp
jmp
or
imul
mov
jbe
aas
jg
sub
or
out
sbb
leave
nop
(bad)
jmp
mov
out
lahf
stc
sbb
or
fistp
jmp
lods
pop
jg
jg
test
stos
test
lahf
ins
enter
rcr
cli
or
cmp
sbb
scas
cdq
sahf
jb
xchg
jnp
mov
enter
retf
pop
stos
iret
push
stos
jns
into
sub
jb
pop
imul
push
sahf
das
mov
imul
sar
pop
call
adc
fldcw
das
adc
fcomp
mov
dec
mov
nop
cs
or
es
or
jnp
push
js
or
pop
inc
xchg
dec
sbb
or
int
jle
clc
loop
scas
aad
(bad)
xchg
je
popf
inc
test
sbb
add
lods
inc
add
retf
cld
pop
sar
das
or
add
(bad)
loop
pop
push
jg
inc
loop
cwde
mov
jb
xchg
sbb
daa
jne
neg
add
loope
pop
ds
imul
not
(bad)
int
inc
jae
ret
and
push
(bad)
xchg
pop
js
daa
xchg
daa
lods
adc
xor
mov
adc
rcl
popa
je
test
inc
adc
(bad)
in
pop
or
push
sub
enter
leave
xor
fcom
sub
test
sbb
(bad)
ss
mov
mov
adc
stos
and
pop
mov
push
retf
ret
mov
repz
dec
mul
xor
adc
jne
push
daa
rol
mov
cmps
movs
int
rcl
iret
or
dec
out
sbb
dec
std
out
movs
mov
movs
in
sti
out
jmp
cmp
xchg
cmp
popa
pop
push
push
(bad)
push
stc
add
(bad)
dec
cld
pop
imul
movs
add
daa
loopne
sub
mul
into
sub
mov
dec
mov
cmp
mov
mov
shl
inc
jo
out
mov
mov
jne
adc
or
hlt
or
clc
add
popf
push
adc
and
cmp
sub
aam
(bad)
mov
ss
out
dec
pop
jo
cmp
out
inc
fxch
jo
fidivr
xchg
pop
mov
lds
ret
retw
addr16
inc
in
in
in
gs
(bad)
out
les
out
dec
in
push
push
ret
fs
inc
jecxz
loopne
out
sub
ins
jmp
call
inc
in
(bad)
(bad)
arpl
pusha
les
loope
out
push
dec
in
cs
loop
shl
inc
jecxz
loope
loope
outs
enter
lds
jmp
sub
int
in
imul
out
out
out
addr16
fs
(bad)
arpl
out
dec
jmp
call
int
mov
in
in
in
loop
(bad)
(bad)
arpl
arpl
pusha
and
out
dec
out
sub
ins
call
in
dec
jmp
int
in
imul
arpl
inc
out
shl
(bad)
arpl
loopne
loopne
loopne
loopne
pusha
les
popa
lds
loope
out
imul
in
sub
jmp
jmp
and
(bad)
(bad)
out
(bad)
bound
loop
loop
loop
jecxz
arpl
pusha
in
les
loope
loope
out
dec
out
sub
sar
adc
dec
and
mov
jb
and
fs
sub
mov
iret
in
dec
jmp
adc
dec
loopne
adc
aaa
mov
mov
jmp
ror
outs
aaa
outs
shr
ins
cmp
jg
or
stos
cmp
neg
pop
mov
inc
sbb
imul
and
pop
aas
mov
in
sub
cdq
push
lea
and
pop
enter
ror
rcr
add
xor
popf
xor
out
mov
lock
inc
out
lahf
mov
lock
inc
and
cli
xor
dec
adc
inc
aam
call
jge
mov
test
and
cdq
sub
sbb
sub
pop
outs
pushf
xchg
cmp
fstp
sbb
dec
mov
pusha
(bad)
out
test
scas
mov
dec
(bad)
out
or
sbb
jmp
dec
cmp
jns
add
(bad)
bound
in
outs
int
push
outs
pop
sbb
repnz
pushf
aas
ins
in
mov
sahf
test
and
sbb
lock
sbb
fs
xor
or
lahf
inc
lods
shr
sub
bnd
adc
mov
cmp
ins
and
adc
and
rcl
add
push
xor
sbb
sar
repnz
mov
or
push
mov
fst
mov
push
pusha
jle
mov
dec
loopne
iret
scas
adc
xchg
(bad)
fdivr
outs
sbb
jge
mov
sub
pop
push
into
add
pop
mov
jge
mov
mov
mov
jbe
int3
pusha
mov
stc
sub
or
sub
ror
pop
push
bound
(bad)
cld
mov
lds
dec
mov
adc
fisttp
sbb
fisttp
dec
retf
mov
rcl
gs
xlat
inc
outs
sar
loope
inc
mov
xchg
inc
int3
fild
push
in
inc
adc
adc
adc
out
mov
(bad)
es
pushf
retf
xor
sub
nop
push
jae
mov
lods
dec
in
add
mov
fimul
pop
ror
test
push
pop
jmp
mov
jno
pop
scas
fnstenv
out
outs
mov
mov
or
into
jle
or
inc
cmp
out
inc
repnz
out
pop
lock
xor
out
push
loope
loopne
lods
cs
sbb
imul
lods
clc
arpl
mov
(bad)
(bad)
imul
mov
xor
pushf
push
lea
or
jo
movs
pop
pop
xor
pop
adc
nop
lahf
mov
add
sahf
retf
out
mov
add
jnp
jbe
push
lahf
in
aas
out
sbb
jl
mov
in
sub
popa
dec
xor
int
repnz
mov
cli
pushf
shl
ret
jo
jge
(bad)
and
dec
scas
scas
jnp
outs
test
mov
jmp
iret
test
pusha
pop
lea
aad
xchg
stos
pusha
int
mov
nop
ror
dec
ins
popa
push
xchg
pop
dec
add
scas
add
outs
(bad)
hlt
and
jg
jnp
inc
das
mov
xor
cmps
lods
fmul
lahf
cmp
mov
xor
jge
pusha
arpl
jp
aad
mov
push
mov
dec
push
ss
push
jle
sub
xor
xchg
repnz
cmp
add
xor
nop
jo
and
inc
shl
and
pop
or
mov
jno
mov
adc
aam
mov
cmp
fs
jb
int
iret
hlt
or
add
pop
sbb
mov
inc
push
or
loopne
ss
retf
scas
lea
rcl
sub
xor
gs
bound
adc
shl
jbe
sub
jl
adc
mul
dec
adc
cmps
push
cmp
add
sar
sub
test
out
ret
and
adc
mov
cwde
jmp
adc
rcl
lock
in
mov
mov
inc
rol
push
mov
adc
repz
add
rcr
enter
daa
das
bound
loope
inc
inc
cmps
xor
loope
pusha
mov
fistp
push
icebp
mov
repz
xlat
xchg
push
inc
push
dec
inc
push
xor
push
das
cwde
pop
je
rcl
(bad)
xchg
repnz
loop
push
mov
push
ss
and
jbe
aad
es
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
retf
add
add
add
add
add
test
add
fiadd
add
jb
add
lds
add
inc
add
add
add
add
push
add
add
add
ins
add
add
add
add
add
add
add
or
add
add
add
ins
add
add
add
ror
add
add
push
jae
add
pop
add
clc
or
or
mov
ror
test
dec
add
dec
add
lds
in
dec
add
dec
add
dec
add
dec
add
add
add
add
add
cs
inc
push
inc
inc
outs
ins
fs
popa
arpl
addr16
inc
add
add
mov
ror
mov
ror
mov
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
add
add
add
cs
inc
push
aas
and
dec
popa
jo
push
aas
and
push
je
imul
push
aas
and
je
push
jb
imul
push
aas
and
push
je
inc
push
push
inc
pop
push
inc
inc
push
dec
inc
inc
inc
inc
inc
inc
push
dec
inc
inc
push
inc
pop
push
dec
inc
inc
dec
inc
inc
add
add
cs
inc
push
inc
dec
je
ins
inc
imul
add
add
add
cs
inc
push
inc
inc
dec
je
ins
inc
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
jbe
outs
je
imul
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
inc
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
add
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
test
(bad)
push
loope
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
in
dec
add
add
add
add
inc
dec
dec
add
add
add
add
add
add
cs
inc
push
inc
push
je
imul
jns
inc
add
(bad)
(bad)
(bad)
call
add
cs
inc
push
inc
inc
dec
je
ins
inc
outs
outs
je
outs
ins
push
imul
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
ins
gs
outs
je
jbe
outs
je
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
jb
ja
gs
outs
outs
je
outs
ins
push
imul
xchg
jne
add
add
add
aas
inc
push
dec
inc
outs
arpl
jae
push
dec
dec
popa
outs
fs
gs
inc
add
add
add
outs
add
jae
je
outs
add
imul
add
add
add
add
outs
jae
add
add
popa
outs
add
ins
outs
add
add
add
add
add
add
add
test
dec
add
test
dec
add
test
dec
add
test
dec
add
test
add
test
dec
add
test
jb
add
loopne
jo
ja
add
add
ins
outs
add
add
add
xor
add
jg
add
add
add
add
test
enter
mov
test
ins
test
inc
test
sbb
dec
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
cmc
dec
add
dec
add
cmc
dec
add
dec
add
dec
add
dec
add
add
dec
add
dec
add
cmc
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
add
(bad)
push
fimul
leave
(bad)
aas
add
add
add
lock
or
or
add
or
add
or
add
or
add
add
nop
imul
imul
add
add
add
add
stos
dec
add
add
stos
dec
add
outs
jae
add
add
test
add
stos
dec
add
popa
outs
push
add
add
add
add
dec
add
add
stos
dec
add
add
add
add
xor
add
add
add
add
add
dec
add
ror
ror
ror
test
add
test
add
test
add
ror
ror
test
add
test
add
aas
pop
add
add
add
add
add
add
or
add
jo
add
mov
add
add
add
add
add
add
or
add
add
add
out
aas
add
add
add
lock
add
add
add
lock
add
add
add
aas
add
add
add
loopne
add
add
add
(bad)
(bad)
(bad)
jg
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
dec
add
dec
add
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
dec
add
leave
dec
add
dec
add
dec
add
dec
add
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
retf
and
dec
add
retf
(bad)
retf
jbe
dec
add
retf
ret
add
retf
loope
dec
add
retf
push
retf
dec
add
retf
dec
add
retf
dec
add
add
pop
add
add
add
add
xlat
mov
or
add
add
dec
or
sbb
xchg
std
aas
add
add
add
loopne
add
jo
add
mov
test
add
loopne
add
jg
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
adc
add
lods
dec
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
dec
add
add
add
add
dec
lods
dec
add
lods
dec
add
add
add
dec
add
add
add
add
stos
dec
add
add
add
add
sub
add
add
add
dec
add
add
add
lods
dec
add
mov
add
in
dec
add
add
add
lods
dec
add
add
add
mov
add
shl
add
adc
add
lods
dec
add
add
add
mov
add
enter
and
add
les
add
mov
add
add
mov
dec
add
mov
dec
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
and
add
pusha
add
add
add
nop
add
or
add
inc
add
or
add
add
loopne
add
clc
add
adc
add
adc
add
sub
add
add
add
add
add
add
adc
pop
add
add
add
pop
add
or
add
jo
add
mov
add
mov
add
add
add
add
add
or
add
call
add
add
add
adc
add
sbb
adc
add
xor
adc
add
dec
add
adc
add
pusha
add
adc
add
add
nop
add
adc
add
test
add
add
add
add
add
add
add
add
add
add
adc
add
fadd
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
data16
add
add
add
js
add
add
add
loopne
add
add
add
add
add
add
adc
add
add
clc
add
add
xor
add
push
add
add
add
add
push
add
adc
add
dec
pop
add
add
add
add
cwde
pop
add
mov
add
enter
adc
add
loopne
add
clc
pop
add
adc
add
sub
add
inc
or
sbb
add
pop
or
sbb
add
add
mov
add
mov
add
add
add
add
add
add
add
arpl
add
mov
add
add
add
add
add
add
sldt
jns
add
or
adc
add
call
jns
add
or
sbb
add
sbb
add
xor
add
dec
or
sbb
add
pusha
or
sbb
add
add
nop
or
sbb
add
test
add
ror
and
add
fmul
add
lock
and
add
or
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
js
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
adc
add
mov
add
cwde
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
fmul
add
call
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
sbb
add
adc
add
sub
add
or
add
push
add
add
add
add
add
add
add
or
add
pop
push
add
adc
add
push
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
fsub
add
in
add
add
add
nop
mov
add
in
add
add
add
les
add
in
add
add
add
clc
movs
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
enter
xor
add
in
add
add
add
cld
stos
or
add
add
add
add
add
lods
or
add
add
add
add
add
add
add
in
add
add
add
cwde
scas
or
add
add
add
add
add
scas
or
add
add
add
add
add
mov
add
add
in
add
add
add
xor
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
in
add
add
add
mov
or
add
add
add
add
add
or
add
add
add
add
add
fmul
add
add
add
add
add
fisttp
add
add
add
add
add
or
add
add
add
add
add
fimul
add
add
add
add
add
fisttp
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
in
or
add
add
add
add
add
or
add
add
add
add
add
test
in
add
add
add
mov
pop
add
in
add
add
add
nop
push
push
add
pop
add
in
add
add
add
fs
push
add
add
in
add
add
add
fcom
push
add
pop
add
in
add
add
add
movs
sbb
add
add
in
add
add
add
sbb
push
add
add
in
add
add
add
xchg
sub
add
add
in
add
add
add
or
push
add
add
add
add
add
or
push
add
add
in
add
add
add
add
sub
add
in
add
add
add
lods
dec
push
add
add
in
add
add
add
fmul
add
add
in
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
pusha
pusha
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
in
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
in
add
add
add
inc
xchg
push
add
add
in
add
add
add
mov
add
add
add
add
pop
popf
push
add
add
add
add
add
popf
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
stos
push
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
in
add
add
add
pop
mov
add
add
add
add
add
add
add
in
add
add
add
call
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
ins
mov
add
add
in
add
add
add
xor
in
add
add
add
xchg
mov
add
add
in
add
add
add
test
push
add
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
in
add
add
add
in
push
add
add
in
add
add
add
clc
mov
add
add
in
add
add
add
or
push
add
add
in
add
add
add
and
add
in
add
add
add
xor
push
add
add
in
add
add
add
dec
mov
add
add
in
add
add
add
pop
mov
add
add
in
add
add
add
jo
push
add
add
in
add
add
add
int3
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pusha
add
add
add
add
add
adc
add
sbb
add
pop
cld
add
pop
rol
pop
rol
pop
rol
pop
rol
pop
add
pop
add
add
add
add
add
sbb
add
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
pop
dec
push
pop
inc
push
pop
inc
push
add
rcr
inc
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
shl
jg
jo
inc
clc
add
sar
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
pop
add
add
add
test
add
leave
dec
add
test
dec
add
or
add
rol
add
cmp
add
add
nop
jl
add
add
add
jg
add
pop
add
js
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
inc
add
inc
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
(bad)
inc
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
clc
jg
push
aas
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
ud0
loopne
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
adc
add
add
xchg
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
jg
(bad)
cld
aas
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
ud0
pushf
pop
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
cld
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
add
and
add
mov
add
and
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
jg
(bad)
clc
jg
push
jg
jmp
jg
inc
jae
inc
inc
(bad)
inc
inc
(bad)
inc
jae
jmp
jg
push
jg
(bad)
clc
jg
(bad)
cld
jg
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
inc
adc
add
add
and
add
sbb
add
add
add
add
or
add
add
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
inc
repz
inc
ret
(bad)
inc
cmp
out
(bad)
(bad)
inc
(bad)
(bad)
cld
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
sbb
add
and
add
inc
add
and
add
and
add
sbb
add
add
and
add
and
add
adc
add
or
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
dec
ret
(bad)
inc
cmp
inc
ret
(bad)
inc
out
inc
jg
inc
aas
(bad)
inc
pop
(bad)
inc
ud0
rol
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
cld
add
and
add
add
add
add
add
add
add
add
add
add
test
add
add
inc
and
add
add
and
add
sbb
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
jmp
add
push
add
(bad)
clc
add
(bad)
cld
add
(bad)
inc
(bad)
jmp
add
inc
cmp
add
(bad)
inc
repz
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
inc
or
add
add
inc
and
add
add
inc
add
inc
add
add
add
inc
dec
add
dec
test
add
add
pusha
dec
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
jg
inc
iret
(bad)
inc
add
dec
xchg
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
or
add
add
nop
or
add
or
add
mov
or
dec
adc
adc
or
adc
or
adc
add
mov
add
or
adc
add
or
add
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
repz
dec
lock
dec
lock
(bad)
aas
clc
push
jo
lock
pavgb
adc
loopne
adc
lock
psubb
jo
cld
(bad)
aas
dec
lock
(bad)
(bad)
dec
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
cld
add
rol
add
add
add
inc
and
inc
inc
adc
inc
and
adc
or
adc
and
inc
add
inc
add
add
cld
add
and
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
(bad)
aas
cld
(bad)
(bad)
aas
cld
jg
aas
cld
aas
clc
ds
lock
pavgb
sbb
loopne
sbb
lock
psubb
jl
cld
aas
cld
aas
(bad)
aas
cld
jg
aas
cld
(bad)
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
idiv
dec
repz
dec
lock
dec
lock
push
jo
clc
or
pop
clc
or
pop
cld
push
jo
dec
lock
(bad)
(bad)
dec
repz
(bad)
out
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cld
(bad)
(bad)
aas
cld
jg
ds
clc
cmp
pop
clc
cmp
pop
cld
ds
(bad)
aas
cld
jg
aas
cld
(bad)
(bad)
mov
(bad)
(bad)
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
(bad)
cwde
add
add
add
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
and
add
or
add
add
add
add
add
fadd
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
mov
mov
add
(bad)
(bad)
(bad)
(bad)
dec
clc
xchg
ja
add
add
mov
lock
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
add
add
mov
str
clc
xchg
add
add
mov
push
add
xchg
add
add
mov
(bad)
inc
clc
xchg
js
add
add
mov
(bad)
push
clc
xchg
ja
add
add
mov
(bad)
(bad)
(bad)
clc
xchg
ja
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
add
js
js
add
xchg
add
add
add
js
xchg
idiv
add
or
(bad)
(bad)
push
jle
jg
inc
js
sub
xchg
out
idiv
clc
add
or
mul
and
stos
jle
jg
push
add
ja
mul
and
cmps
out
(bad)
(bad)
push
or
mul
and
(bad)
(bad)
(bad)
clc
add
ja
imul
and
(bad)
push
clc
add
ja
mul
test
add
ja
jle
and
maskmovq
test
mov
lock
(bad)
jg
add
ja
out
fwait
(bad)
jg
inc
jg
out
add
ja
jle
mov
idiv
jle
ja
or
out
fwait
fwait
xchg
(bad)
(bad)
jp
out
add
ja
out
out
jmp
jg
stos
jle
add
ja
out
out
out
out
jg
push
idiv
add
ja
out
out
out
xchg
(bad)
jg
jp
add
or
outs
outs
outs
outs
call
ja
add
or
loopne
out
out
jg
jg
add
add
ja
(bad)
inc
add
mov
add
ja
(bad)
(bad)
(bad)
inc
add
out
add
add
ja
mov
add
add
add
add
mov
mov
push
add
add
or
mov
ja
add
add
or
clc
(bad)
push
mov
add
add
(bad)
push
xchg
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
clc
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
clc
add
add
or
(bad)
(bad)
clc
(bad)
idiv
mov
add
add
clc
jg
push
pop
sar
add
aas
rol
pop
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
add
stos
mov
add
jp
pop
js
ja
js
mov
cwde
js
jp
js
jb
js
jp
js
ja
stos
ja
pop
js
ja
jp
jp
js
js
or
mov
xchg
xchg
mov
jns
ja
mov
mov
add
pop
ja
ja
jp
add
ja
ja
mov
mov
mov
ja
ja
add
xchg
add
add
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jmp
add
jmp
ins
jmp
add
add
in
imul
jmp
adc
out
lock
hlt
or
adc
add
out
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
repz
xchg
fst
fstp
(bad)
(bad)
jmp
add
repz
lock
repz
push
or
mov
sbb
mov
fstp
mov
add
or
jne
xchg
(bad)
(bad)
(bad)
fstp
(bad)
or
fmul
or
or
(bad)
scas
add
mov
fcmovnu
fcmovnu
mov
call
fisttp
iret
add
add
mov
(bad)
add
add
repnz
repz
add
add
mov
div
ins
add
add
mov
or
or
hlt
hlt
adc
add
add
fstp
mov
inc
pop
add
add
mov
mov
loope
add
rol
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
adc
scas
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
adc
adc
jmp
or
or
ins
adc
or
or
or
or
or
ins
out
repz
icebp
pop
in
ins
adc
jmp
adc
or
or
or
pop
lock
(bad)
(bad)
(bad)
push
mov
(bad)
fucom
repz
repnz
jmp
or
pop
pop
out
repz
hlt
hlt
(bad)
push
(bad)
mov
(bad)
(bad)
fstp
fucom
hlt
push
scas
inc
adc
or
or
out
out
pop
repnz
or
or
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
push
scas
adc
or
or
pop
out
pop
repnz
or
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
hlt
(bad)
(bad)
push
jmp
icebp
icebp
icebp
hlt
or
push
cs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
adc
mov
mov
jmp
fstp
(bad)
(bad)
(bad)
fstp
fdivp
(bad)
(bad)
(bad)
(bad)
push
jmp
icebp
icebp
loop
push
push
push
sub
(bad)
(bad)
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
mov
fstp
(bad)
call
iret
iret
pop
(bad)
push
hlt
hlt
(bad)
out
inc
test
icebp
loop
pop
pop
push
dec
mov
fstp
fstp
push
hlt
repnz
adc
repz
fdivr
pop
push
mov
fstp
fstp
push
repz
fstp
pop
adc
repz
mov
in
fstp
fstp
hlt
push
mov
mov
fst
(bad)
fnsave
lock
repnz
mov
outs
(bad)
(bad)
(bad)
(bad)
push
(bad)
hlt
repz
(bad)
(bad)
(bad)
mov
or
lock
fadd
cdq
cdq
push
dec
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
(bad)
(bad)
(bad)
(bad)
fsubr
mov
(bad)
(bad)
fdiv
(bad)
push
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jmp
fstp
fstp
(bad)
(bad)
(bad)
iret
in
or
or
mov
fcmovnu
fcmovnu
fcmovnu
(bad)
fstp
fstp
fstp
(bad)
mov
or
or
icebp
(bad)
icebp
loop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
(bad)
push
repz
fstp
fnsave
or
icebp
lock
mov
aam
aam
fcmovu
(bad)
loop
fdiv
or
or
lock
mov
loop
(bad)
fcmovnbe
aam
aam
mov
mov
scas
test
or
or
icebp
repnz
fsub
(bad)
(bad)
(bad)
(bad)
push
repnz
icebp
(bad)
fcmovnbe
aam
scas
inc
adc
or
or
icebp
repz
pop
pop
mov
hlt
hlt
repz
icebp
icebp
mov
or
or
or
or
icebp
repnz
scas
scas
scas
iret
mov
pop
mov
icebp
icebp
icebp
lock
pop
out
or
or
or
or
mov
iret
iret
scas
iret
iret
iret
iret
mov
mov
icebp
repz
repz
adc
or
or
or
or
pop
hlt
hlt
(bad)
fcmovnu
(bad)
fdiv
mov
(bad)
push
hlt
out
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
loop
repz
hlt
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
fstp
fucomp
loop
hlt
(bad)
(bad)
in
adc
or
or
or
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
jmp
jmp
or
or
or
or
pop
pop
(bad)
(bad)
fstp
fld
in
mov
mov
or
or
or
or
or
or
or
mov
mov
mov
or
or
or
or
jg
push
pop
sar
add
rol
xadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
or
ins
ins
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
ins
or
or
or
or
or
or
jmp
ins
ins
ins
jmp
or
or
or
or
or
or
or
or
or
ins
in
icebp
lock
in
ins
adc
adc
ins
or
or
or
adc
adc
adc
adc
adc
adc
or
or
or
or
or
or
or
ins
in
mov
push
pop
in
in
jmp
or
scas
mov
or
fnsave
adc
or
or
or
or
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
adc
scas
mov
fstp
fstp
sbb
hlt
repnz
scas
scas
adc
or
or
or
or
or
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
fdiv
fstp
fstp
sbb
repz
hlt
(bad)
out
scas
adc
or
or
or
lock
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
scas
mov
(bad)
fstp
fstp
fstp
fstp
sbb
hlt
(bad)
push
scas
adc
or
or
imul
idiv
jno
or
call
(bad)
fsubr
(bad)
fstp
fstp
fstp
fstp
sbb
(bad)
(bad)
push
scas
adc
or
or
mov
sbb
sbb
jno
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
push
scas
adc
or
or
or
idiv
sbb
sub
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
out
scas
adc
or
idiv
sbb
cs
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
sub
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fdivp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
out
repnz
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
fst
(bad)
(bad)
fstp
(bad)
(bad)
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
or
out
repnz
icebp
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
(bad)
mov
or
(bad)
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
lock
adc
out
repnz
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
fucomp
scas
in
scas
mov
hlt
hlt
hlt
hlt
hlt
hlt
scas
adc
out
repnz
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
call
scas
sbb
mov
hlt
push
repnz
adc
or
or
repnz
fnstsw
jge
push
push
jmp
fstp
fstp
fstp
(bad)
dec
in
sbb
(bad)
icebp
icebp
icebp
icebp
icebp
icebp
in
adc
or
or
repnz
fnstsw
jge
jns
jmp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
in
adc
or
or
repnz
fnstsw
push
push
push
push
dec
mov
fstp
fstp
fstp
hlt
(bad)
(bad)
mov
(bad)
fst
fstp
fstp
fstp
in
adc
or
or
repz
fcom
push
push
push
push
dec
in
fstp
fstp
sbb
(bad)
(bad)
(bad)
fdivrp
fnsave
(bad)
(bad)
(bad)
fstp
fstp
(bad)
or
repz
fcom
push
push
push
push
dec
scas
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
fst
(bad)
(bad)
(bad)
fstp
fisttp
scas
adc
or
or
repz
or
(bad)
fcom
push
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
mov
in
or
or
out
(bad)
ror
repnz
(bad)
(bad)
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fucomp
adc
or
or
pop
fcmovnbe
ror
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
scas
ins
or
or
or
fcmovnbe
lods
or
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
(bad)
(bad)
(bad)
push
fstp
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
or
pop
fld
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
call
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
scas
in
or
or
or
pop
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
or
(bad)
push
sbb
fstp
fstp
fstp
fst
(bad)
(bad)
scas
scas
or
or
or
or
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
scas
mov
(bad)
push
repz
fstp
fstp
fstp
fst
scas
scas
or
or
or
or
pop
sbb
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
aad
in
hlt
push
hlt
repz
fstp
fstp
fisttp
scas
scas
or
or
or
or
or
lock
repnz
fcmovnbe
aam
aam
aad
fcmovnu
fcmovnu
fcmovnu
fcmovne
scas
out
repnz
hlt
repz
fstp
fnsave
or
or
or
or
mov
sbb
aam
repz
fcmovnbe
aam
aam
aam
aad
aad
scas
scas
mov
fstp
fisttp
mov
scas
in
or
or
or
or
or
or
mov
sbb
fcomi
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
mov
scas
scas
scas
scas
scas
or
or
or
or
or
or
or
or
(bad)
push
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
adc
or
or
or
or
or
or
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
repz
icebp
icebp
icebp
lock
ins
adc
jmp
or
or
or
or
or
mov
mov
mov
pop
lock
hlt
hlt
repz
icebp
icebp
icebp
lock
or
or
or
or
or
mov
scas
scas
scas
scas
scas
scas
in
in
mov
pop
pop
lock
icebp
icebp
icebp
lock
out
or
or
or
or
or
or
or
scas
scas
scas
scas
in
in
in
in
in
in
in
in
mov
mov
pop
icebp
repnz
icebp
icebp
icebp
lock
or
or
or
or
or
or
or
repnz
in
in
in
in
in
in
mov
mov
mov
lock
hlt
hlt
hlt
repz
adc
or
or
or
or
or
pop
repz
fcmovnu
(bad)
fmul
mov
mov
mov
mov
mov
mov
hlt
(bad)
(bad)
push
hlt
hlt
out
adc
or
or
or
or
or
repnz
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
or
or
sbb
hlt
hlt
lock
or
or
or
or
hlt
hlt
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
or
fstp
repz
hlt
(bad)
(bad)
in
adc
or
or
or
or
pop
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
fstp
repz
hlt
(bad)
(bad)
(bad)
mov
or
or
or
or
pop
pop
pop
fcmovnu
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
out
repz
hlt
(bad)
(bad)
(bad)
push
jmp
or
or
or
or
or
pop
pop
out
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
mov
(bad)
(bad)
(bad)
inc
jmp
or
or
or
pop
pop
pop
out
out
div
mov
mov
fstp
fstp
fstp
fstp
fld
adc
out
(bad)
(bad)
(bad)
push
lock
pop
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
out
pop
out
out
out
out
or
fucomp
jmp
or
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
dec
add
inc
jg
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
sbb
inc
add
inc
aas
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
mov
add
add
add
add
mov
add
add
add
ja
push
js
mov
add
or
add
add
add
add
(bad)
(bad)
js
mov
out
div
div
add
add
add
ja
(bad)
(bad)
(bad)
(bad)
push
ja
mov
jg
jg
test
(bad)
(bad)
(bad)
push
xchg
out
out
(bad)
(bad)
(bad)
js
add
add
ja
(bad)
dec
xchg
jg
push
add
add
ja
(bad)
jmp
and
xchg
out
(bad)
(bad)
(bad)
(bad)
js
add
or
(bad)
jmp
and
and
jle
jg
(bad)
(bad)
clc
add
add
ja
(bad)
jmp
and
sub
out
(bad)
(bad)
(bad)
push
add
or
(bad)
jmp
and
sub
stos
stos
jle
jg
(bad)
(bad)
(bad)
inc
ja
jmp
sub
sub
stos
stos
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
add
ja
(bad)
jmp
ja
stos
jg
(bad)
(bad)
(bad)
(bad)
push
js
add
ja
(bad)
jmp
sub
xchg
ja
push
(bad)
(bad)
jg
jg
add
or
(bad)
jmp
div
jg
add
push
div
clc
add
or
(bad)
jmp
sub
xchg
jg
test
jg
js
add
ja
mov
mov
div
push
pop
ja
push
div
clc
add
or
(bad)
out
sub
jg
test
jg
js
add
ja
mov
stos
fwait
fwait
xchg
div
(bad)
inc
out
clc
add
or
(bad)
out
mov
jg
(bad)
push
ja
(bad)
jle
jg
add
or
mov
fwait
fwait
fwait
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
(bad)
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
push
stos
jle
jle
add
or
mov
(bad)
(bad)
dec
push
div
cmps
out
add
or
(bad)
out
out
out
out
out
xchg
(bad)
(bad)
(bad)
jg
ja
stos
jle
add
or
mov
out
out
out
out
call
div
div
cmps
call
ja
mov
out
out
out
out
call
jg
ja
jp
js
add
or
mov
out
out
out
out
out
xchg
push
div
div
stos
add
add
ja
mov
out
outs
out
out
out
call
jg
ja
test
add
add
ja
mov
out
out
out
mov
div
div
div
add
add
or
mov
outs
outs
outs
outs
outs
push
jg
jo
add
add
or
xchg
add
out
out
out
mov
ja
add
add
add
or
mov
test
outs
push
add
add
add
or
xchg
test
out
add
add
add
add
ja
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
ja
js
mov
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
or
mov
mov
(bad)
push
add
add
add
(bad)
clc
mov
mov
js
add
add
add
add
ja
mov
js
pop
add
add
(bad)
push
js
mov
jo
add
add
add
(bad)
dec
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
js
add
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
or
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
push
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
push
add
(bad)
(bad)
push
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
inc
add
add
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
inc
cmp
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
enter
add
add
add
dec
add
add
add
add
dec
add
popa
add
add
add
add
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
push
add
add
les
add
add
add
(bad)
inc
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
add
ja
(bad)
inc
add
add
add
add
add
add
daa
ins
add
arpl
je
ins
add
pop
add
jb
outs
add
jb
add
jae
xor
xor
add
add
add
add
add
add
or
jns
(bad)
inc
add
les
enter
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
ja
and
add
add
add
mov
add
add
add
xor
fs
inc
add
add
add
push
add
add
mov
push
add
add
add
add
inc
add
push
add
add
mov
pop
add
add
add
add
inc
add
arpl
add
add
add
add
add
push
add
add
mov
sub
sub
push
add
(bad)
inc
add
ins
add
add
add
enter
add
add
add
or
sbb
mov
inc
add
add
add
add
add
push
add
add
push
add
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
test
jne
push
call
xor
cmp
jae
mov
mov
sub
mov
add
push
push
mov
call
test
jne
mov
cmp
jne
mov
push
add
push
mov
call
test
jne
mov
cmp
jne
mov
cmp
je
cmp
jne
push
call
mov
cmp
je
cmp
jne
mov
mov
add
mov
mov
push
mov
push
xor
push
mov
call
mov
dec
mov
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
adc
test
je
push
call
pop
jmp
mov
and
imul
sar
mov
lea
and
mov
mov
pop
pop
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
mov
mov
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
jne
call
mov
call
mov
push
push
push
push
push
call
add
or
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
mov
or
or
mov
call
mov
mov
call
ret
push
call
pop
ret
inc
push
call
test
pop
mov
mov
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
ret
mov
cmp
jne
call
mov
xor
ret
push
xor
cmp
jl
cmp
jb
call
push
push
push
push
push
mov
call
add
xor
pop
ret
mov
and
imul
sar
mov
movzx
and
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
xor
pop
pop
leave
ret
push
lea
call
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
je
mov
and
xor
inc
jmp
lea
push
movzx
push
call
test
pop
pop
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
test
mov
jne
mov
cmp
jb
cmp
je
cmp
mov
je
mov
and
jmp
call
mov
cmp
je
mov
and
or
jmp
xor
cmp
setne
push
push
mov
push
push
push
push
call
test
jne
jmp
push
push
push
push
call
add
ret
xor
inc
cmp
jne
xor
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmp
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmp
jb
or
jmp
or
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
push
call
mov
push
call
cmp
pop
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
mov
call
add
or
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
push
push
mov
xor
mov
mov
push
push
mov
push
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
push
push
push
push
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
push
push
push
mov
push
call
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
add
jmp
push
call
test
pop
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
call
test
je
xor
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
mov
push
push
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
push
push
push
push
call
mov
cmp
mov
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
mov
jmp
push
push
push
push
call
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
movzx
lea
inc
cmp
ja
add
movzx
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
call
pop
pop
jmp
push
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
cmp
je
cmp
je
sub
mov
pop
cmp
je
mov
and
pop
pop
mov
mov
lea
call
mov
xor
jbe
jmp
sbb
pop
inc
xchg
pop
retf
sub
repz
fwait
or
cld
dec
sub
pop
gs
jecxz
xchg
inc
jg
mov
sbb
test
(bad)
mov
cmp
mov
dec
dec
inc
mov
mov
jmp
push
rcr
pop
test
into
or
je
mov
mov
xchg
adc
sti
xchg
dec
addr16
fld
and
ins
xchg
sbb
loope
sbb
or
add
mov
xchg
mov
rcr
and
xchg
sbb
test
dec
outs
xchg
movs
lahf
(bad)
sbb
fwait
mov
mov
push
sbb
cdq
fnstenv
jns
jnp
pop
stos
mov
mov
mov
jmp
inc
scas
lea
push
push
inc
add
xor
jp
push
sbb
jb
ret
ret
cmps
test
outs
dec
ret
mov
push
jmp
stos
xchg
and
(bad)
xor
pop
aas
inc
or
lea
mov
aaa
fldenv
shl
pusha
xchg
push
(bad)
mov
push
in
push
leave
jae
bound
cmp
repz
jmp
add
push
xchg
inc
dec
or
sub
push
and
movs
scas
repnz
xor
add
pop
popf
push
sub
dec
xor
mov
neg
xchg
inc
xlat
cld
push
mov
lea
rcl
ins
leave
arpl
cmp
and
out
stos
jge
mov
jle
and
cmp
arpl
fidiv
inc
sub
jne
jle
pop
and
cmp
xchg
jecxz
stos
or
xchg
or
push
add
pop
arpl
cmp
test
cmp
jmp
stos
cmps
fistp
fild
cmps
out
jbe
and
xchg
imul
outs
or
sti
aad
pop
rcl
lock
fwait
or
mov
mov
sbb
outs
stos
test
(bad)
push
lea
movs
pop
jle
inc
mov
sti
mov
push
dec
sti
mov
adc
sti
mov
cmps
and
jbe
ret
sahf
mov
fadd
jae
xor
push
(bad)
int
repnz
pop
xchg
jae
ins
gs
mov
test
inc
mov
xchg
push
repz
test
popa
adc
lods
sar
inc
sub
adc
repz
cli
sub
xor
add
scas
cmp
adc
sti
push
push
stos
pop
mov
sbb
aam
mov
ret
and
mov
aaa
dec
retf
pop
pop
jno
sub
pusha
lock
sbb
shr
rol
mov
mov
pop
stc
addr16
sbb
sub
push
push
out
jecxz
jae
sbb
mov
js
retf
adc
js
jmp
rol
popf
pop
fdivr
lahf
xchg
sbb
sub
sti
push
pop
ror
in
cmp
addr16
sub
and
dec
and
js
lock
jae
and
fistp
or
in
or
fnstcw
imul
adc
adc
adc
jnp
fcom
sti
nop
stc
inc
loope
mov
fistp
aaa
and
repz
inc
jnp
cli
mov
sbb
pop
mov
and
aas
mul
xor
mov
(bad)
sub
jnp
stos
in
xor
mov
loop
mov
mov
xchg
jecxz
test
test
cmp
cld
dec
push
bound
mov
dec
aaa
or
fdivr
push
inc
cmp
mov
js
dec
cld
dec
cmp
cdq
test
pop
sub
inc
xor
add
ja
dec
call
std
jg
addr16
cmp
(bad)
xor
sub
mov
sbb
addr16
or
loop
pop
mov
xor
int
jg
mov
cs
jae
popf
fidivr
and
popf
lahf
mov
rol
je
and
fdiv
lock
add
and
inc
stos
inc
push
push
fwait
ins
movs
inc
cmps
(bad)
aaa
adc
push
jmp
ret
fcom
xor
xchg
stos
adc
mov
(bad)
je
cmps
sbb
mov
retf
mov
je
lds
pop
test
ficom
add
dec
addr16
aaa
mov
fcomi
div
jle
mov
or
inc
daa
test
imul
and
iret
pop
xor
test
icebp
mov
xchg
scas
scas
or
ins
dec
rol
jno
cmp
add
aas
sar
js
mov
xchg
push
xlat
cli
ret
mov
std
xchg
and
stos
jl
pop
xor
sub
(bad)
fstp
add
iret
in
lea
movs
sti
pop
or
adc
into
sbb
push
mov
fld
add
mov
call
not
mov
adc
aaa
xor
shl
inc
jmp
loop
(bad)
or
movs
pop
mov
popa
add
and
mov
(bad)
bt
push
iret
mov
call
dec
mov
add
movs
fst
pop
cmp
pushf
sbb
pop
xchg
jae
retf
mov
push
cmp
push
xchg
mov
icebp
outs
(bad)
icebp
pushf
rcr
clc
arpl
mov
sbb
cld
repnz
cmp
clc
xchg
cwde
mov
out
mov
in
mov
pop
enter
out
mov
das
cmp
(bad)
fnstcw
mul
mov
sbb
pop
ret
sub
test
cli
cmp
xchg
mov
jmp
adc
pop
icebp
mov
imul
arpl
lock
dec
dec
cmp
mov
add
(bad)
push
push
add
mov
jg
out
jns
les
adc
cmp
inc
(bad)
fld
cmp
dec
shl
cmps
push
stos
popf
jae
(bad)
sbb
mov
and
adc
inc
dec
cld
add
inc
ret
xlat
inc
lds
xor
std
adc
dec
or
inc
in
sbb
das
out
inc
out
mov
ja
jecxz
sub
fs
and
mov
stc
xchg
arpl
add
(bad)
test
cs
(bad)
cli
mov
and
mov
adc
sub
ins
stos
adc
sub
test
outs
repz
(bad)
es
es
ficomp
mov
out
stos
mov
mov
retf
sti
jmp
xor
add
ins
inc
mov
leave
(bad)
jmp
push
or
dec
pop
iret
in
pop
pop
sbb
mov
aas
scas
inc
int3
in
jmp
stc
cmp
out
xchg
sub
test
addr16
nop
mov
jno
fwait
or
adc
in
retf
fldcw
jnp
ins
das
adc
push
dec
fwait
das
add
lods
cwde
into
mov
nop
jecxz
div
test
or
dec
sub
shr
jnp
mov
adc
adc
jmp
pop
mov
xchg
push
or
imul
jb
(bad)
(bad)
stc
les
dec
mov
jl
scas
pop
fs
fidiv
outs
jmp
and
dec
in
sbb
jae
inc
(bad)
call
mov
stos
js
imul
mov
arpl
xor
pop
ror
fwait
lods
mov
cmp
add
(bad)
out
dec
pop
sbb
shl
cmp
fcmove
bound
dec
ret
cmps
mov
retf
push
pop
fwait
inc
mov
pop
iret
push
adc
sar
push
xor
sbb
rcr
dec
arpl
test
lahf
popa
fnstenv
rcl
test
cmp
push
inc
dec
pop
sub
std
xchg
or
xchg
imul
fmul
loopne
push
(bad)
in
imul
icebp
stos
jb
pop
outs
cmp
out
add
mov
imul
mov
bound
outs
neg
call
sbb
icebp
pop
xor
jbe
call
xor
aad
mov
and
rol
(bad)
int
dec
retf
mov
rcr
ret
add
push
arpl
and
ds
mov
sub
mov
inc
repz
adc
push
data16
dec
bound
mov
test
sub
mov
fcmovnu
dec
aaa
jle
push
imul
daa
loope
xor
push
mov
mov
(bad)
inc
lock
fcmovnb
addr16
loopne
out
or
sbb
sbb
aam
sbb
xchg
inc
pop
loope
dec
test
imul
stc
cbw
adc
and
loop
retf
int3
bound
cmp
jno
cmp
ror
inc
dec
shl
fisttp
jg
jmp
pop
inc
(bad)
nop
in
sbb
xor
inc
enter
retf
jae
jns
jl
shr
and
fsubr
fldenv
xor
push
mov
mov
dec
out
xor
cmp
add
mov
sbb
stos
int3
rcl
adc
inc
sub
or
and
dec
add
mov
fsubrp
push
dec
rol
push
pop
push
xor
mov
shl
xor
xor
sahf
out
inc
imul
xchg
das
and
repz
adc
out
cmp
push
push
imul
jg
mov
rcl
sub
in
sbb
inc
pop
jne
jbe
clc
sbb
push
mov
jp
rol
nop
cmp
ret
mov
ret
adc
movs
or
cmp
push
sub
pop
add
fcom
repnz
cmp
add
stos
sub
xor
aaa
mov
cwde
inc
push
ror
aam
inc
scas
jnp
or
adc
scas
es
scas
cmc
aaa
js
xchg
icebp
in
sti
sar
ins
sub
call
ins
and
repz
sub
sbb
sub
cmp
xor
cmp
and
dec
mov
mov
out
and
pusha
jae
and
arpl
and
call
mov
mov
repz
inc
ret
mov
adc
dec
bound
jb
inc
sub
scas
cli
mov
clc
out
ret
dec
mov
mov
add
imul
xchg
inc
push
inc
retf
xchg
xchg
mov
mov
cmp
imul
dec
sbb
out
mov
xor
mov
leave
bound
xor
mov
stos
fsub
shl
mov
cmp
adc
jmp
rcr
pop
fisub
fadd
push
nop
jno
mov
mov
sbb
add
and
sbb
jl
and
pop
imul
push
add
sbb
jge
imul
dec
inc
outs
or
xchg
mov
mov
popf
inc
stc
popf
xchg
jecxz
sbb
loop
jle
jp
xor
inc
enter
cwde
mov
jmp
popa
cmp
clc
leave
cmp
mov
(bad)
fsub
mov
add
fnstsw
adc
xchg
adc
adc
vmovntps
inc
adc
mov
pusha
bound
xchg
push
out
sub
cmp
pop
push
out
mov
inc
push
jne
aas
shr
icebp
adc
mov
cdq
jne
pop
dec
jb
out
movs
cdq
arpl
cmp
mov
fnstsw
stc
aaa
in
fsub
push
adc
mov
or
mov
sbb
pop
ja
addr16
xor
ror
int3
daa
sub
leave
pop
pop
mov
jmp
jbe
popa
adc
loopne
xor
sahf
arpl
and
mov
dec
pop
imul
mov
push
loope
dec
popa
inc
or
stos
add
and
fcom
dec
and
inc
push
xor
bound
mov
jnp
adc
imul
dec
adc
ins
sub
and
dec
ficom
jecxz
push
mov
lock
sbb
jecxz
sub
and
push
push
mov
sbb
call
sub
jle
jmp
imul
lods
lods
pop
(bad)
int
ds
(bad)
stc
mov
clc
pop
pop
sbb
aas
(bad)
clc
mov
push
fdivp
jle
out
lods
ins
and
push
aas
and
(bad)
sbb
mov
push
in
retf
inc
in
loope
cmp
shr
jp
jns
fistp
test
ss
dec
popf
jmp
ror
pop
xchg
jnp
jnp
jle
out
dec
or
cmp
push
maxps
aam
ins
dec
xchg
dec
sbb
push
jae
jmp
push
inc
inc
cmp
cs
xchg
push
xchg
mov
mov
mov
loopne
icebp
scas
add
add
call
gs
dec
sub
add
sti
inc
cmp
das
dec
fimul
jmp
loopne
fistp
push
adc
(bad)
jae
mov
dec
test
sub
sbb
daa
push
adc
adc
(bad)
jmp
pop
jae
sub
cmps
and
mov
shr
out
dec
xor
sub
pop
outs
adc
mov
mov
mov
xchg
repz
push
push
movs
sub
jge
(bad)
jp
xchg
es
mov
push
clc
jo
mov
aam
sti
and
sbb
nop
add
mov
nop
jae
lds
push
pop
push
cs
mov
out
retf
push
mov
sbb
sahf
dec
mov
test
fs
and
jae
mov
dec
fs
cmps
stos
jle
jmp
push
(bad)
sbb
xchg
pop
dec
fisub
call
cdq
sti
push
pop
mov
cmp
xchg
fistp
and
sahf
jg
pop
or
repz
or
sub
sub
test
push
inc
push
add
xor
loop
sub
stos
jp
mov
sbb
pop
xor
xchg
out
cmovs
repz
pop
jmp
dec
sahf
aaa
sbb
sti
in
mov
inc
ret
in
fs
and
pop
jne
push
pop
mov
adc
call
arpl
ret
dec
ret
das
inc
imul
enter
mov
retf
aam
aas
or
pop
imul
dec
push
adc
sbb
jecxz
or
imul
mov
mov
ret
es
mov
shl
mov
(bad)
das
mov
(bad)
ss
inc
mov
je
addr16
sar
mov
cmp
stc
fist
test
ja
nop
in
jns
push
sub
fisub
or
sbb
jg
fldenv
call
inc
cmps
dec
dec
mov
xchg
or
dec
(bad)
cmc
dec
adc
cmp
call
stc
xchg
pop
neg
sub
jnp
push
jle
jb
inc
inc
das
int
push
(bad)
mov
jmp
jae
pop
adc
adc
xor
sub
daa
movs
int3
ss
dec
adc
scas
cdq
adc
mov
lock
push
dec
sahf
jecxz
nop
and
push
aad
repz
stos
adc
sbb
arpl
cmp
and
dec
push
add
bound
lock
cmp
sub
xor
imul
popf
push
push
inc
ret
aad
xchg
fwait
shr
sub
icebp
mov
inc
jp
dec
ja
mov
pop
mov
vhaddpd
inc
(bad)
xlat
retf
out
and
iret
lds
in
xor
dec
sahf
cmp
cmps
fdiv
or
(bad)
ror
stos
pop
loop
sar
adc
out
jmp
ds
sar
jecxz
mov
enter
aas
imul
or
repz
xchg
(bad)
fucomp
sbb
dec
push
in
inc
repnz
sbb
jmp
aad
xchg
imul
adc
(bad)
fsub
adc
inc
xchg
xchg
stc
sar
add
mov
in
nop
pop
dec
shr
dec
sub
mov
cmps
and
and
mov
or
stos
sub
xchg
in
or
jnp
test
mov
sbb
mov
xchg
push
data16
mov
jg
scas
retf
inc
icebp
adc
nop
mov
or
sub
mov
push
mov
ror
inc
mov
mov
lds
sar
dec
fstp
add
add
sbb
imul
and
mov
push
jle
dec
adc
fbstp
mov
mov
in
rol
stc
sbb
ret
and
rcr
or
sahf
int3
cdq
adc
ret
dec
mov
popa
shl
pop
mov
jle
enter
add
dec
dec
scas
sbb
mov
loopne
xor
enter
add
or
adc
cmp
hlt
cdq
jmp
sub
adc
adc
pop
sti
ror
pop
(bad)
cmp
jmp
lock
ret
stos
dec
or
pop
not
dec
pop
dec
push
bound
push
sahf
mov
fwait
jecxz
mov
cmps
lea
push
inc
adc
dec
std
pushf
dec
test
add
cmp
lods
stos
mov
mov
mov
jnp
xor
or
shr
pusha
add
xor
repnz
push
stos
(bad)
movs
mov
cli
cmp
aas
mov
push
js
in
xor
mov
cmp
add
fwait
sbb
or
call
lea
retf
in
push
aad
loop
cmp
fcmove
adc
pushf
pop
xchg
pop
dec
(bad)
arpl
push
cdq
dec
mov
into
mov
cdq
scas
jnp
push
test
fstp
adc
cmp
inc
inc
ret
cli
(bad)
daa
pop
inc
dec
add
stos
and
and
pop
push
das
js
ja
pop
inc
xor
lods
mov
ins
sti
inc
imul
sbb
jno
ins
xor
ja
push
gs
inc
fisub
mov
out
cmps
aaa
jecxz
in
ret
jge
imul
test
cmc
add
bound
mov
mov
fist
lods
sbb
jnp
sbb
push
sbb
adc
idiv
int
add
mov
push
push
fisub
cmp
mov
and
mov
dec
mov
mov
sahf
push
push
xchg
aad
(bad)
lods
inc
jnp
ins
ja
jbe
cmp
stos
fst
mov
push
sahf
cmc
cmp
ret
cmp
mov
sub
jns
or
cmp
mov
out
adc
sbb
sbb
mov
add
inc
(bad)
and
and
push
loopne
addr16
mov
mov
add
call
xchg
jmp
imul
inc
(bad)
leave
cmc
daa
outs
mov
xor
pop
rcl
arpl
inc
es
mov
sti
int
in
xor
mov
sbb
and
sbb
pop
es
dec
(bad)
cs
jmp
rcr
push
fwait
pop
pop
mov
jae
(bad)
ins
push
push
adc
xchg
in
mov
outs
pop
rcr
popa
out
cmp
push
sahf
sbb
stos
cmp
xchg
jle
repz
in
or
mov
fisttp
cmp
loop
in
add
pop
(bad)
shr
add
enter
rcr
add
or
or
out
mov
push
icebp
jno
inc
add
jbe
imul
adc
repz
out
ror
aam
add
sbb
hlt
dec
into
(bad)
sti
ror
retf
pop
call
jecxz
or
mov
jmp
rcr
cwde
repnz
leave
shr
imul
iret
mov
icebp
pop
mov
ins
retf
nop
fwait
ret
cli
or
sub
aam
cmp
dec
outs
mov
por
cmp
sub
jae
and
inc
sub
aad
cld
mov
add
jnp
imul
fs
push
jb
cwde
mov
and
lds
cwde
bound
inc
jb
bound
sub
jp
in
pop
imul
cmp
mov
mov
mov
xchg
call
push
mov
gs
pop
xor
jne
sub
adc
xor
not
retf
or
jne
outs
popa
push
mov
mov
fimul
push
lock
xchg
aaa
mov
and
pop
xor
jmp
inc
movs
sub
sbb
add
mov
mov
cdq
jae
inc
inc
add
test
jae
retf
data16
(bad)
loopne
iret
sahf
test
ffreep
adc
mov
scas
sbb
jmp
mov
ins
mov
pop
call
mov
push
stos
imul
and
jmp
mov
xor
mov
arpl
and
mov
sbb
pop
mov
inc
xor
aas
mov
(bad)
push
test
jmp
jl
aam
retf
(bad)
cmps
push
jbe
add
ss
dec
add
lds
out
or
imul
in
cmp
mov
out
jmp
cmps
sbb
push
pop
call
xchg
das
sbb
ret
dec
bound
imul
mov
xchg
in
cmp
and
mov
std
cmp
(bad)
fidivr
mov
(bad)
out
loop
sbb
mov
fxch
imul
jno
jmp
bound
xchg
dec
sbb
jecxz
ret
dec
mov
push
xor
mov
es
or
cs
pop
and
jae
push
mov
dec
mov
and
data16
jle
stos
adc
out
(bad)
jno
push
scas
jns
and
mov
dec
ss
sti
xchg
dec
stos
dec
or
shl
xor
xchg
test
pop
mov
stc
mov
xor
(bad)
cmc
hlt
ins
inc
mov
dec
jno
jo
fdiv
adc
add
sub
mov
jmp
lds
stos
mov
out
sti
xor
xchg
imul
cwde
inc
sub
ret
cmps
add
mov
xor
mov
outs
jnp
mov
inc
xchg
and
fsubr
and
retf
mov
sub
arpl
push
loop
mov
or
nop
fs
jp
cs
nop
cmp
(bad)
jb
cmp
dec
icebp
bound
xor
jmp
leave
xchg
jg
pop
imul
aam
or
xchg
cmps
and
cmp
popa
dec
cmc
inc
mov
mov
push
ret
sub
mov
mov
ss
mov
retf
sbb
mov
jns
loop
lea
xchg
fsubr
ret
aad
mov
sub
jbe
adc
sbb
mov
xchg
rcr
xchg
fstp
dec
out
jae
cmp
mov
outs
add
pusha
pop
lods
loope
outs
sbb
adc
jae
lods
pop
mov
add
adc
loopne
mov
out
retf
into
stos
cmc
sbb
mov
or
out
dec
adc
neg
and
imul
push
call
adc
cmp
sbb
dec
push
sub
rcl
cmc
jl
call
or
push
fist
xchg
pusha
sub
imul
lock
add
and
mov
and
ja
jae
pop
xlat
mov
jae
jo
add
inc
rcl
pop
add
xchg
pop
xchg
mov
jle
inc
sub
clc
and
je
jae
pop
aas
xchg
add
xchg
push
cld
or
nop
push
jp
mov
test
ja
or
(bad)
out
(bad)
mov
pop
aas
push
and
imul
stos
jecxz
mov
packsswb
aad
inc
inc
adc
mov
jnp
retf
mov
pop
jb
ret
jb
call
add
cwde
aas
ficom
push
push
xor
add
imul
cmovg
rol
bound
icebp
and
add
loope
pop
out
cli
xchg
aaa
js
add
adc
cmc
arpl
mov
pop
mov
in
icebp
icebp
cmp
mov
cmp
push
jno
mov
mov
fwait
fwait
xchg
sti
xlat
jg
add
add
iret
push
outs
or
icebp
test
xchg
pop
sub
movs
mov
das
push
sbb
shr
imul
ds
fistp
add
xor
into
gs
test
out
jg
sbb
imul
es
push
dec
push
pop
mov
les
adc
mov
mov
pop
ins
cmp
add
xchg
(bad)
add
fmul
hlt
inc
dec
dec
scas
hlt
cmps
cmc
and
inc
sbb
(bad)
mov
mov
push
jecxz
fwait
pop
xor
sub
es
cs
sub
pop
(bad)
mov
ins
adc
out
mov
pop
shl
std
mov
sbb
in
imul
iret
and
cmps
mov
pop
sub
xor
xchg
dec
cmp
stos
popf
pop
cwde
xchg
jo
outs
retf
(bad)
push
cmp
das
inc
and
adc
icebp
jp
jnp
or
cmps
mov
sahf
push
in
mov
adc
or
xchg
jo
dec
mov
cmp
stos
pop
fs
jmp
sti
xchg
stos
dec
popf
ds
sub
inc
jmp
stos
std
xchg
dec
sub
fstp
jmp
imul
ins
or
sub
iret
add
scas
cmp
fidivr
adc
mov
iret
add
retf
les
sbb
pop
add
stos
out
push
mov
das
adc
mov
jmp
sub
repz
jp
jnp
stos
xor
xchg
ror
(bad)
xchg
out
jmp
mov
inc
out
push
jle
sbb
jle
mov
add
(bad)
hlt
sub
xor
xchg
std
out
test
xchg
data16
adc
adc
cmp
idiv
push
cwde
or
data16
inc
push
inc
sub
movs
das
pop
inc
stos
sar
pusha
imul
xchg
imul
inc
adc
lds
arpl
pop
inc
sbb
stos
push
sub
xchg
(bad)
pop
jmp
arpl
or
cmp
or
into
add
inc
push
mov
cmp
lds
or
add
repz
or
sub
sbb
adc
pop
fild
cmp
popf
stos
mov
push
hlt
ret
xor
or
xor
mov
bound
sbb
aaa
(bad)
fisttp
dec
data16
imul
jmp
pop
into
sub
push
or
fmul
out
aas
push
fwait
lods
int
pop
pop
adc
adc
(bad)
int
adc
adc
mov
dec
loopne
adc
lds
fld
loope
mov
xor
test
jle
int3
mov
mov
jecxz
jg
and
or
shl
push
or
std
push
and
cwde
jge
leave
and
sbb
sbb
or
mov
jmp
dec
fwait
cmp
mov
fwait
rcr
ret
jp
xor
fwait
push
push
adc
and
jbe
loop
ffree
push
sub
sub
jecxz
inc
iret
pop
retf
pop
(bad)
out
pop
(bad)
js
ins
mov
sbb
sbb
call
jmp
pop
cdq
ror
sub
gs
pop
je
and
das
aaa
into
mov
nop
xor
xlat
stos
xor
xor
shl
sti
jnp
cmp
out
xchg
mov
mov
pusha
stos
jg
push
stos
shr
jmp
popa
cmp
lahf
cmp
sub
jnp
lock
pop
(bad)
sti
ret
pop
(bad)
mov
std
mov
jns
adc
inc
dec
add
leave
cmps
xchg
mov
fld
std
push
jl
loope
mov
ret
and
dec
sub
sub
push
std
xor
fwait
js
push
mov
gs
int
fisttp
or
sbb
mov
xor
xlat
rcr
je
fmulp
lahf
daa
adc
jecxz
imul
pop
repnz
fxch
sub
jbe
dec
xor
fdivr
xchg
add
mov
arpl
xchg
or
cmp
sub
js
xlat
in
loope
pop
inc
fild
push
fstp
xchg
add
sbb
test
test
rcl
retf
(bad)
clc
jo
jmp
sub
call
dec
shr
push
jle
imul
xor
out
inc
xchg
push
dec
aas
rol
cmc
pop
inc
cmp
ins
push
ret
cli
mov
pop
fucomi
fcmovnu
fwait
stos
lods
fnstsw
sub
leave
jnp
cmp
cmp
mov
inc
add
mov
xor
adc
add
(bad)
xor
outs
(bad)
fisttp
lds
pop
sbb
(bad)
fnsave
add
fs
in
iret
outs
inc
gs
sar
lods
mov
jle
sahf
data16
stc
jbe
sbb
cli
stos
mov
sub
inc
cmp
sbb
cmps
push
xchg
retf
xchg
sub
dec
loope
test
cmps
adc
mov
test
addr16
jne
mov
mov
push
pop
lods
sbb
dec
inc
sub
jae
inc
mov
(bad)
ja
sbb
add
jae
sahf
pop
lods
pop
imul
and
stc
in
retf
xor
xor
mov
std
mov
sub
and
jns
mov
push
push
fcmovnbe
arpl
adc
outs
mov
sbb
add
gs
mov
mov
mov
arpl
aaa
mov
inc
cmp
xor
mov
aaa
pop
cmp
dec
sub
sar
jne
aam
mov
test
(bad)
pop
scas
test
or
sub
test
lea
hlt
iret
xor
mov
(bad)
retf
jnp
jp
rol
cs
pop
and
cmp
xchg
or
pop
jno
arpl
sbb
leave
jae
mov
fcom
ret
lock
popf
dec
mov
pop
clc
jecxz
or
or
nop
aad
jnp
add
cli
ror
mov
jecxz
inc
pop
sub
arpl
les
test
inc
mov
dec
icebp
popf
cmps
sub
sub
pop
(bad)
imul
dec
or
ja
enter
rcl
pushf
arpl
mov
sbb
cmp
dec
js
sti
pop
das
pop
xchg
int3
out
arpl
add
test
mov
sbb
scas
jae
push
(bad)
mov
inc
cdq
and
jg
sbb
adc
and
scas
cs
adc
sti
hlt
ds
(bad)
ret
ficomp
in
pop
dec
repz
imul
(bad)
pop
and
ins
fs
loope
xlat
or
call
ja
inc
scas
aaa
push
or
or
add
mov
iret
call
mov
pop
add
fist
mov
shr
push
scas
cmp
mov
sbb
mov
ds
inc
sub
mov
stos
out
enter
out
mov
mov
loop
mov
sbb
jb
test
or
xor
xchg
mov
pop
loope
push
jbe
xchg
inc
sbb
jae
xor
inc
inc
shl
lock
mov
mov
ret
and
repz
lock
inc
sub
(bad)
lods
sub
out
push
push
mov
pop
xchg
push
fisub
test
adc
push
cmps
pop
out
cmp
cmp
cli
sbb
icebp
push
inc
and
and
movs
stos
jb
retf
enter
and
mov
mov
mov
das
js
or
adc
or
mov
test
xchg
pop
repz
sub
cmp
sbb
jecxz
mov
outs
xor
push
sti
mov
mov
mov
daa
inc
pop
pop
adc
into
(bad)
mov
aaa
pop
fst
ins
shl
mov
shl
imul
(bad)
ins
ret
mov
jg
mov
xor
fcmove
std
jge
sub
pop
(bad)
push
pop
fs
fisubr
inc
sbb
and
jp
push
popa
add
bound
mov
arpl
pusha
sbb
xor
mov
add
pop
ins
xchg
cmps
lds
jns
mov
or
test
mov
jecxz
mov
mov
cdq
popa
mov
dec
aad
push
push
pop
adc
test
cmp
arpl
push
sub
repnz
or
pusha
pop
lods
adc
movs
adc
fs
ins
enter
int3
loope
inc
inc
jp
scas
mov
mov
cmps
pop
dec
shl
jmp
iret
repz
mov
or
jns
imul
adc
(bad)
arpl
test
not
ret
inc
xlat
dec
or
inc
fidivr
ret
les
stos
inc
inc
add
pop
out
xchg
nop
call
nop
or
jmp
sbb
and
mov
cmps
push
mov
cld
xor
cmps
(bad)
sbb
lahf
adc
dec
jecxz
sbb
push
xchg
sub
mov
shr
dec
xchg
mov
mov
inc
mov
pop
xor
xchg
jle
dec
sar
in
cmp
jle
inc
stos
inc
cli
inc
jb
fwait
adc
addr16
jp
cmp
inc
mov
leave
dec
aam
test
addr16
sbb
lods
call
mov
mov
jbe
stc
adc
mov
pop
es
pop
xor
fwait
popa
sub
cmp
lahf
pop
push
nop
jl
xor
ja
cmp
popf
mov
or
mov
pop
mov
lea
fwait
cli
aas
sub
mov
pop
sub
inc
lock
mov
(bad)
xchg
sub
jo
mov
mov
(bad)
xor
push
push
or
jmp
cmp
dec
xlat
pop
ror
rol
ds
imul
adc
dec
test
sub
cmp
or
mov
cmc
stc
jp
inc
xlat
adc
pop
test
or
imul
lods
inc
call
cmps
dec
into
fcomi
xlat
neg
mov
pushf
mov
cs
rol
ret
xor
cmp
adc
add
fwait
repz
cmc
(bad)
pop
add
(bad)
sub
scas
sub
push
pop
jno
sub
inc
shl
ret
shr
rcr
mov
fs
cmp
sub
mov
or
or
xchg
adc
fs
stc
inc
xchg
sbb
pop
cmp
sbb
mov
ror
pop
xlat
and
push
test
jl
cmp
mov
outs
add
push
cs
fwait
xor
outs
push
bound
ret
mov
mov
dec
jno
mov
add
rcl
mov
aaa
sub
cmp
cmps
dec
xor
fdiv
push
repnz
popf
outs
repnz
enter
(bad)
hlt
js
cmp
retf
jnp
inc
repz
or
sub
sbb
jecxz
enter
jmp
popf
repz
push
mov
sbb
arpl
jbe
shr
add
xchg
(bad)
push
sub
ja
dec
pop
int
mov
fwait
xchg
push
test
(bad)
jmp
test
and
cli
jbe
mov
xor
ja
adc
cmp
ror
hlt
or
mov
inc
mov
(bad)
fwait
pop
mov
sti
xchg
ret
add
pop
adc
jmp
dec
push
mov
ja
outs
jb
sub
sbb
fist
fdivp
not
or
dec
xor
adc
or
sbb
ret
mov
cmp
inc
nop
jno
sub
xor
push
xor
dec
sbb
jmp
icebp
adc
add
jmp
cmp
nop
push
cmp
add
aaa
xchg
pop
pop
xchg
or
inc
pop
add
push
xor
lods
add
repnz
rol
dec
inc
jecxz
jle
mov
loope
or
or
xchg
mov
mov
inc
or
dec
jmp
repz
out
aad
and
dec
out
cmp
aas
push
cmp
repz
mov
add
out
lods
pop
loope
scas
push
fsubr
lods
inc
mov
data16
sub
adc
sub
cwde
dec
retf
lea
pop
xchg
adc
rcr
xor
xchg
inc
out
mov
jne
jmp
push
mov
mov
inc
or
or
add
or
or
pop
add
cmp
mov
pop
mov
das
outs
xchg
or
push
cmps
mov
dec
or
adc
inc
mov
jmp
inc
jecxz
psraw
inc
add
cmp
cmp
addr16
sahf
loopne
pushf
(bad)
in
nop
xchg
bound
dec
mov
sub
or
mov
leave
push
imul
xor
call
or
push
fwait
out
push
add
pop
add
dec
fdiv
call
out
push
test
or
mov
or
add
sbb
test
or
movs
test
push
stos
sub
aas
rol
push
inc
cmp
jbe
cli
shl
and
arpl
stos
xlat
sub
push
jmp
add
pop
xchg
call
ror
xor
addr16
adc
push
(bad)
mov
test
sar
inc
ds
(bad)
into
add
mov
js
imul
push
pop
dec
and
or
in
or
sub
repnz
push
mov
or
pop
mov
repz
xor
retf
or
mov
test
push
pop
fwait
xchg
bound
outs
xchg
add
test
loopne
int
jnp
movs
cmp
sub
pop
ror
cli
rcl
push
dec
in
call
pop
imul
adc
or
or
cwde
pop
mov
sbb
mov
push
jmp
xor
(bad)
ins
dec
sub
sub
jl
fwait
xchg
add
jnp
add
cmp
mov
mov
cmps
test
and
std
fwait
add
call
loopne
jo
sar
inc
mov
push
sub
fadd
xchg
push
jmp
pop
jae
bound
das
int3
fcmovb
jmp
adc
push
imul
mov
mov
sbb
cwde
test
cmp
fnstcw
das
sub
lods
jae
adc
xchg
stos
mov
mov
cmp
cmp
hlt
pop
call
retf
mov
js
clc
fstp
adc
fbstp
xor
(bad)
jo
sahf
popa
jmp
dec
shr
mov
rcl
cmp
adc
test
inc
movs
pop
(bad)
lahf
xchg
enter
and
stos
iret
cmp
retf
sbb
lock
retf
div
ret
xor
fisub
(bad)
test
sbb
and
das
lahf
mov
add
pop
xchg
cmp
xchg
push
xchg
lods
mov
hlt
cmp
imul
dec
stos
xchg
cli
mov
add
bound
gs
shr
loop
jge
ds
and
rcr
outs
sahf
(bad)
mov
fs
or
jmp
adc
imul
and
das
mov
(bad)
mov
icebp
sbb
sbb
fabs
adc
add
add
dec
inc
jmp
pop
xchg
xlat
popf
fstp
in
dec
push
dec
loopne
jns
mov
xchg
push
cmp
or
mov
add
stc
mov
fisttp
cmps
mov
push
mov
aaa
push
inc
hlt
sbb
mov
gs
mov
call
ret
xor
retf
lea
push
pop
mov
in
loope
mov
neg
and
sar
fwait
or
shr
dec
inc
and
adc
or
in
cs
cmp
test
mov
outs
push
inc
call
ds
pop
imul
dec
xchg
mov
push
mov
ret
cmp
jecxz
nop
outs
stos
adc
or
(bad)
repnz
add
push
jmp
ret
rol
inc
enter
jo
leave
add
imul
and
inc
test
cmp
fisubr
pop
mov
ret
cmps
jae
xchg
sub
adc
int
leave
jno
in
mov
punpckldq
cmp
int
inc
fisubr
sub
or
jg
retf
push
sub
jmp
mov
popa
ins
aad
add
add
(bad)
jg
rol
lahf
adc
inc
or
(bad)
lock
out
mov
sar
add
inc
push
cmps
pop
mov
movs
xchg
test
dec
arpl
fs
arpl
cmp
ja
or
mov
sti
inc
fnstsw
inc
push
push
pop
mov
or
pop
jecxz
adc
sti
dec
sub
xchg
jo
xchg
repnz
fwait
in
jnp
inc
and
push
jno
repz
scas
dec
cmp
cmp
lods
pop
pop
shr
xchg
pop
test
sbb
inc
mov
mov
jecxz
popa
inc
test
arpl
push
test
(bad)
ins
cmp
jnp
retf
cmp
dec
fistp
add
jecxz
cmps
fist
inc
push
adc
cdq
inc
mov
icebp
pop
int3
sub
repz
sub
iret
dec
popf
mov
and
dec
pop
imul
retf
xor
inc
mov
sar
pop
les
arpl
addr16
aam
es
xor
loope
daa
pop
sub
out
js
fdivp
les
pop
pop
mov
sbb
in
sar
mov
xchg
(bad)
xchg
mov
and
pusha
mov
pop
add
call
pop
push
and
(bad)
ffreep
in
pushf
xor
ja
xchg
sub
cmp
inc
mov
pop
mov
imul
xchg
icebp
push
repz
xor
cmp
out
sti
or
popa
jmp
jmp
fs
xchg
stc
push
bsr
xchg
imul
sbb
xchg
ffree
xchg
in
aam
test
push
jmp
ins
adc
adc
and
out
xchg
stos
shr
inc
mov
mov
fld
stos
pop
jl
xchg
xor
mov
mov
jp
stos
adc
nop
bound
mov
sbb
jae
sbb
xchg
adc
hlt
xor
sar
xchg
sti
arpl
cmp
dec
sbb
(bad)
cmps
retf
xor
and
jecxz
outs
das
ror
inc
jnp
frstor
fild
mov
stos
pop
pop
jmp
std
aam
xchg
icebp
cli
xchg
xchg
cdq
pusha
fwait
(bad)
mov
adc
sub
cdq
shl
xchg
sub
inc
add
or
push
in
ins
jecxz
nop
and
sti
icebp
or
cs
adc
jle
outs
inc
xor
bswap
mov
adc
(bad)
push
xchg
movs
idiv
imul
adc
sub
imul
fdivp
icebp
mov
and
mov
jns
movs
fld
dec
inc
add
fwait
adc
(bad)
aad
pop
test
xchg
push
xlat
test
sub
jg
bound
int3
shl
test
pop
out
fucomip
aad
cmp
mov
push
arpl
push
adc
movs
js
pop
adc
cmp
loopne
xlat
fldcw
push
scas
jecxz
lock
sbb
ret
mov
xchg
outs
clc
enter
neg
pop
xchg
jmp
int3
or
ja
add
ins
stos
xchg
cmp
inc
aam
pop
ja
shl
add
adc
adc
or
sbb
xor
dec
jae
inc
xor
mov
sub
loop
mov
cmp
clc
ins
or
call
jg
sahf
jmp
mov
icebp
or
and
jbe
inc
pop
pop
test
mov
mov
out
call
jbe
sbb
sti
rcl
int3
xor
ret
retf
(bad)
fadd
fimul
xchg
mov
movs
icebp
xchg
xchg
stos
push
pop
dec
push
or
mov
cmp
or
dec
cld
call
aas
xchg
iret
jno
pop
mov
in
hlt
pusha
fistp
xor
jp
pop
movs
adc
dec
fistp
jne
xor
pop
jnp
call
mov
adc
sbb
mov
into
loop
int3
dec
and
imul
inc
mov
mov
xchg
jecxz
add
xchg
cmps
jae
stos
push
pop
outs
adc
(bad)
sbb
cmp
mov
fmul
xchg
repz
and
xchg
cmps
sar
and
jbe
mov
xchg
xchg
retf
and
enter
xor
pop
retf
xor
mov
out
jns
fnstenv
sub
mov
call
stc
mov
bnd
test
xlat
add
lock
je
inc
or
cld
xchg
fld
xchg
aaa
mov
fldcw
push
adc
jo
adc
and
cmp
jae
jmp
and
ja
or
adc
(bad)
mov
dec
inc
sahf
test
jle
cmp
call
es
outs
and
sbb
inc
cli
xchg
mov
xchg
push
ror
sar
add
or
xor
and
sbb
(bad)
(bad)
inc
stos
xor
adc
sub
jle
pop
sar
inc
push
retf
fstp
and
and
cmp
loop
sbb
aad
dec
pop
mov
ins
ins
jmp
cdq
pop
mov
imul
nop
mov
adc
movs
fs
out
retf
out
mov
push
stos
repnz
push
or
gs
and
jl
ds
es
mov
(bad)
fnstcw
scas
jne
sbb
jnp
out
arpl
jg
sar
(bad)
ret
adc
test
sbb
jns
in
cmp
mov
in
dec
adc
repnz
sbb
sbb
mov
ds
cmp
xchg
popf
les
mov
(bad)
sub
xor
shr
sub
or
shl
jg
sub
repz
out
aas
loop
popf
xchg
scas
enter
pusha
pusha
push
jnp
jne
in
push
mov
sar
jge
fwait
mov
pusha
cdq
mov
out
mov
dec
cmp
dec
pop
push
inc
ins
mov
jne
sbb
(bad)
jmp
fld
dec
dec
ret
mov
inc
in
jmp
outs
out
iret
pop
jmp
sbb
add
inc
out
mov
loopne
mov
call
add
adc
out
and
lods
mov
fist
pop
fcomp
mov
mov
jecxz
rcl
push
pusha
and
adc
cmp
jp
(bad)
jae
add
cdq
jp
mov
pop
ret
xchg
inc
jl
cli
(bad)
adc
dec
shr
dec
add
cmp
js
mov
pop
lahf
mov
cmp
sub
push
leave
inc
xlat
xchg
js
shl
test
fldenv
stos
out
(bad)
cmps
inc
(bad)
jnp
dec
mov
or
and
movs
mov
or
jle
dec
bound
ss
fadd
sub
cmp
imul
cmps
push
ins
add
pop
or
add
addr16
inc
xor
imul
sbb
pop
pop
sub
push
imul
inc
or
cmp
add
mov
test
movs
mov
cmp
dec
ret
push
ret
adc
sub
jmp
push
mov
pushf
ret
stc
mov
xor
repz
mov
mov
cmps
ds
ret
cdq
cmp
mov
dec
(bad)
(bad)
pop
js
mov
in
adc
out
sahf
std
dec
xchg
mov
in
or
(bad)
cmp
pushf
push
in
inc
mov
nop
ret
jecxz
dec
repnz
out
sar
scas
jmp
xchg
cmps
fbstp
sbb
imul
les
jp
xchg
(bad)
loop
add
retf
jmp
sub
iret
push
pop
mov
retf
xchg
jb
(bad)
or
sbb
call
ret
enter
iret
dec
cmp
stos
pop
adc
ret
dec
rcr
(bad)
sbb
imul
mov
div
out
add
mov
fiadd
jo
xor
inc
cmp
sub
xor
jbe
ret
inc
jmp
aas
icebp
push
aad
sbb
jno
je
inc
(bad)
and
mov
jae
mov
repz
dec
xacquire
cmp
test
pop
push
sub
cdq
enter
addr16
inc
xchg
lds
ror
retf
xchg
cmp
add
inc
jmp
adc
mov
lods
sub
mov
rcr
add
push
fiadd
or
das
and
sub
xor
or
add
mov
jnp
out
repnz
test
scas
jb
adc
test
and
push
ss
std
and
cmps
iret
sbb
cs
push
cmp
sti
jae
mov
push
ins
push
mov
push
rcr
xor
mov
sub
fwait
in
adc
stos
lock
cmps
(bad)
mov
ror
fisubr
jb
lahf
je
sti
repnz
xchg
jecxz
loope
xor
test
movs
push
stc
test
mov
into
xchg
xor
into
lea
pop
sub
push
mov
mov
ss
cmps
or
xchg
(bad)
stos
pop
inc
xchg
xchg
out
cwde
dec
stos
fcomp
test
sub
je
pop
mov
fwait
jp
cmp
mov
xor
sar
cld
loope
fadd
ret
pop
sbb
sbb
test
mov
push
mov
jae
mov
sti
cmps
dec
shl
sbb
fisttp
xchg
cmp
aas
jno
or
aaa
fild
adc
and
xchg
sub
mov
icebp
fnstenv
leave
inc
dec
retf
jns
inc
add
xor
jp
shl
xchg
sbb
data16
enter
mov
dec
outs
pop
cmc
jae
mov
repz
jae
div
repz
push
test
adc
mov
cmp
sub
shr
jne
(bad)
dec
inc
popf
mov
in
and
ret
sar
data16
gs
xchg
outs
xor
mov
and
inc
test
popf
sbb
enter
sub
aad
repnz
xlat
js
dec
repz
xlat
lock
xor
mov
or
ja
sbb
mov
js
mov
(bad)
jmp
jns
sub
ficom
jnp
data16
es
jnp
out
dec
out
loopne
xor
jecxz
nop
pop
inc
std
sub
pop
data16
jnp
cmp
pop
sbb
js
mov
push
mov
mov
mov
pusha
aad
out
cmp
sbb
(bad)
sar
and
push
imul
inc
sub
mov
pop
cwde
int
xchg
jmp
sbb
push
pop
fdiv
sti
arpl
mov
add
sbb
mov
scas
sub
push
sbb
sbb
jecxz
inc
xchg
cmps
xlat
movs
adc
jnp
fnstsw
loopne
dec
dec
xor
push
xchg
sub
pop
retf
aam
fwait
mov
xlat
mov
fwait
sbb
xor
out
pop
aaa
pop
retf
xlat
fdiv
xchg
sub
pop
cwde
shr
ret
dec
lds
(bad)
xchg
int
mov
imul
or
lds
leave
mov
(bad)
xor
cld
jnp
int
or
scas
adc
push
jp
imul
les
pop
mov
push
push
lock
mov
fstp
rcr
xchg
fidiv
jge
push
or
mov
(bad)
dec
(bad)
adc
shr
(bad)
sub
retf
scas
mov
cvtdq2ps
mov
inc
inc
jb
addr16
push
ins
dec
adc
cli
test
lock
fistp
ret
cwde
ins
dec
push
aad
retf
jns
pop
retf
call
mov
loope
shr
inc
outs
cmp
mov
jae
test
hlt
jo
mov
daa
sub
adc
xor
push
mov
lock
jnp
fwait
(bad)
repz
jns
add
or
mov
or
jmp
retf
cvtdq2ps
jae
adc
jnp
sbb
jmp
mov
add
pop
pop
int
frstor
(bad)
push
scas
jae
sub
out
ins
jnp
adc
xor
mov
cmp
repnz
retf
(bad)
cli
mov
in
xchg
rol
adc
mov
inc
pop
pop
bound
xor
sub
lahf
pushf
or
cmp
imul
ficomp
fistp
aaa
into
mov
jno
sti
bound
mov
in
loopne
int
stos
cs
int3
mov
mov
aas
repnz
aaa
jns
leave
mov
fwait
ror
dec
jno
cmps
cld
mov
lea
add
retf
and
xor
xor
into
test
ret
mov
popa
xchg
arpl
pop
add
sbb
add
call
fldlg2
and
nop
dec
xchg
ins
push
imul
gs
push
jmp
xchg
jecxz
in
sub
fcmove
arpl
xor
iret
and
ret
jno
rcr
stos
jmp
sbb
js
les
aaa
cmp
push
mov
or
leave
pusha
ret
dec
add
addr16
aad
mov
jb
inc
test
push
enter
xor
dec
stos
sar
cmp
clc
or
ds
sub
dec
bound
out
fld
ss
cmp
or
rcl
imul
in
add
fild
(bad)
fs
(bad)
xchg
lods
outs
xchg
mov
fld
xor
imul
fwait
cmp
xor
leave
cmp
dec
and
push
dec
sub
popf
nop
jae
pusha
stos
and
jp
adc
mov
and
fdivr
mov
jnp
sub
adc
(bad)
fstp
ins
lds
test
(bad)
in
push
pop
stos
push
call
sbb
ficomp
push
mov
cmps
push
fsubr
push
je
mov
out
setae
shl
shl
int3
pop
mov
jge
rcl
adc
push
cmps
stc
int
sar
or
sbb
lea
bound
stc
jb
fldcw
mov
add
loopne
mov
in
retf
fsubr
in
lahf
aad
repz
scas
pop
repnz
xchg
mov
daa
mov
push
xchg
dec
jmp
dec
fiadd
dec
adc
jnp
das
jmp
xchg
jnp
daa
lea
(bad)
cmps
xchg
dec
scas
adc
cmp
jno
sbb
or
sbb
mov
loopne
cmps
pusha
lahf
test
inc
push
or
cmp
xor
sbb
jno
sub
jmp
imul
test
jmp
xor
mov
adc
jl
rol
std
adc
sbb
dec
lock
inc
mov
cmp
jmp
xor
cmp
dec
mov
xchg
jo
sub
bound
gs
outs
inc
in
lds
in
jge
jp
call
mov
cmps
jno
push
xor
adc
icebp
imul
add
mov
xlat
jle
call
les
mov
mov
inc
add
imul
inc
pop
add
cmps
mov
mov
adc
or
jb
dec
stc
mov
in
stc
add
clc
and
mov
dec
ss
sti
add
pop
cli
add
jmp
(bad)
xchg
jae
inc
and
or
push
fstp
ficom
pop
and
mov
adc
xlat
(bad)
imul
pusha
mov
sub
xchg
cld
test
sub
push
cmp
in
daa
cmc
mov
sub
mov
sub
data16
inc
cmp
xchg
add
std
lahf
and
xchg
or
sahf
(bad)
add
add
mov
pop
idiv
mov
sub
adc
(bad)
jne
jnp
or
fcmovu
push
imul
sbb
cmp
iret
in
lock
push
leave
mov
(bad)
pop
pusha
jmp
mul
(bad)
idiv
enter
mov
das
dec
push
add
repz
loopne
popf
aam
mov
popa
data16
out
cmp
dec
and
hlt
push
jmp
and
mov
and
or
outs
jbe
adc
adc
fisubr
and
sbb
push
xchg
push
dec
lods
and
dec
and
xor
mov
shl
mov
mov
jno
add
ds
dec
mov
test
push
(bad)
fimul
cmp
mov
sub
mov
jecxz
rdmsr
add
mov
xchg
rcl
sbb
jne
jp
sar
cmp
gs
movs
adc
or
add
pop
fisttp
push
mov
xchg
test
stc
jmp
mov
push
and
(bad)
cmp
bound
sub
mov
retf
xchg
or
call
xor
stos
loopne
sub
adc
dec
cmp
add
mov
pop
xchg
test
aaa
xlat
adc
jnp
sbb
xor
adc
inc
and
mov
inc
adc
sub
iret
or
cmp
jnp
inc
cmp
xchg
jmp
mov
xchg
xor
fwait
jecxz
mov
retf
mov
jp
ins
xchg
mov
pop
shl
xchg
les
out
and
cmc
xor
pop
adc
dec
cmp
push
adc
(bad)
add
jnp
xor
mov
inc
jle
sahf
mov
ss
fisttp
jecxz
leave
adc
inc
scas
fild
retf
int3
cdq
pop
retf
sbb
in
fcomp
dec
sbb
mov
ja
(bad)
sti
jecxz
rcr
test
fs
jle
ins
int
jmp
adc
(bad)
and
mov
fs
call
mov
fdivr
aad
cdq
add
les
(bad)
addr16
cmc
in
sti
adc
jne
(bad)
jmp
push
pop
sbb
js
adc
test
out
xor
fwait
mov
jle
ja
addr16
push
inc
push
xor
es
stos
mov
jb
add
mov
jge
lods
pop
retf
sbb
jg
sub
jae
outs
cmp
(bad)
popf
cmc
add
js
sbb
sub
mov
push
jcxz
xor
inc
pop
clc
cmps
outs
jmp
fdivp
jmp
ret
(bad)
jl
iret
pop
iret
fisttp
mov
neg
mov
call
add
arpl
jns
fwait
cmc
jge
pop
inc
or
fxch
jnp
lahf
nop
and
add
mov
inc
jecxz
pop
aas
xor
adc
jb
cmp
sub
cmp
mov
(bad)
sar
shl
stc
adc
xor
xchg
cli
dec
cmp
dec
pop
jns
fidiv
jmp
mov
adc
cli
fistp
pop
push
inc
ret
jecxz
add
pushf
inc
adc
cli
xlat
scas
xor
jp
icebp
pop
xchg
nop
call
int
cmp
sub
arpl
xor
mov
jmp
mov
aad
xor
and
mov
outs
cmp
jo
push
mov
fwait
dec
mov
mov
xchg
jns
dec
push
push
and
sub
rcr
mov
and
push
xchg
sub
inc
sub
jmp
jecxz
mov
std
xchg
add
cwde
sbb
pop
and
(bad)
out
out
sahf
aad
mov
mov
lahf
or
les
xor
add
aas
mov
push
mov
sub
dec
call
(bad)
ror
ja
cli
outs
jmp
sub
inc
loop
xor
pop
call
test
mov
and
pop
stos
cli
icebp
imul
fnstenv
mov
dec
or
xchg
cmp
push
add
xchg
or
rcl
bound
xor
sti
adc
mov
lock
out
iret
cmp
or
or
fwait
adc
stos
repz
arpl
sar
hlt
jmp
fcom
pop
push
stos
and
mov
jmp
popa
mov
push
cmps
xor
mov
sti
push
into
xor
mov
cli
or
sbb
or
adc
xchg
pop
(bad)
mov
cli
mov
jns
mov
mov
add
mov
test
call
(bad)
xchg
ja
sbb
inc
jbe
mov
sbb
pop
push
cmp
in
leave
mov
out
popa
fsub
cwde
fstp
prefetch
or
dec
clc
inc
or
sbb
pop
cmp
mov
or
add
ja
or
mov
retf
xor
mov
sbb
(bad)
fxch
int3
pop
sub
ja
iret
call
daa
das
sbb
add
adc
and
ret
pop
test
push
test
jae
mov
dec
dec
ret
cdq
fwait
stos
xor
retf
imul
or
fsubr
pop
xchg
packssdw
inc
jmp
imul
or
int
xor
rcl
sub
(bad)
sub
shr
lea
xor
mov
push
mov
les
outs
sub
jecxz
push
sbb
or
gs
sub
jns
pop
xchg
lahf
outs
jmp
push
dec
out
mov
inc
xor
movs
mov
dec
bound
aas
idiv
ret
aam
sbb
ds
arpl
imul
push
imul
out
fnstcw
ficom
fistp
enter
in
pop
pop
and
test
cwde
ret
push
mov
fldcw
pop
mov
xor
xchg
pop
popf
jp
retf
out
mov
xor
or
fwait
xor
jge
sbb
mov
out
in
push
arpl
mov
gs
arpl
shl
lahf
into
pop
sti
cdq
and
adc
mov
int
xor
mov
jmp
mov
mov
mov
gs
das
or
or
dec
test
retf
mov
push
xchg
icebp
outs
test
shr
call
ins
(bad)
push
or
and
(bad)
fild
retf
sbb
jl
jecxz
and
sub
jmp
mov
dec
test
mov
shl
xlat
bound
sub
xor
retf
ins
mov
das
sub
loop
pushf
jnp
push
pusha
xor
push
icebp
div
or
or
mov
xchg
sbb
pop
push
nop
call
sub
mov
retf
shl
popf
sub
adc
or
xchg
or
push
pop
or
mov
push
es
lods
xchg
pop
xor
stos
adc
ss
pop
std
daa
cmp
mov
adc
fs
adc
lock
addr16
dec
and
bound
or
sbb
outs
cld
mov
lea
dec
retf
or
bound
scas
mov
ret
(bad)
arpl
jmp
cmc
rol
retf
or
push
push
fld
pop
das
arpl
jae
pop
mov
mov
mov
pop
mov
pop
xchg
adc
pop
mov
ins
outs
sbb
popf
mov
jae
add
test
in
mov
std
or
(bad)
push
sub
inc
mov
xor
or
mov
pop
dec
enter
data16
sub
mov
mov
sti
ud1
arpl
push
inc
dec
cmps
mov
ror
inc
outs
dec
sub
jo
mov
lahf
retw
imul
add
jge
out
movs
jle
jnp
cmc
shl
test
adc
jmp
xchg
(bad)
push
rol
cmp
push
add
fadd
ficomp
popf
mov
iret
mov
sub
mov
div
push
pusha
push
call
mov
bound
mov
arpl
pop
sti
inc
xor
call
bound
mov
pop
imul
sti
jecxz
dec
sar
enter
rcl
xchg
push
cmps
add
add
loopne
xacquire
cdq
cmp
ret
inc
lock
sub
jecxz
jmp
jg
sar
das
stos
mov
pusha
cmp
das
push
push
daa
or
ins
xor
mov
imul
test
and
sbb
or
ret
jnp
bound
shl
leave
mov
pop
pushf
out
pop
movs
scas
into
ret
and
pop
jl
xchg
push
xchg
lea
aas
jp
in
jae
cmc
(bad)
adc
fs
int3
into
adc
sub
push
add
sub
aaa
push
jne
sbb
mov
mov
inc
push
mov
sbb
add
adc
inc
mov
and
adc
stc
loop
jns
or
cs
mov
lds
cld
mov
popf
call
popf
out
xchg
pop
mov
nop
shl
add
mov
sub
ss
mov
xchg
ret
mov
mov
in
dec
into
pop
aad
xor
xor
dec
rol
mov
pop
xchg
shl
and
mov
and
mov
xor
ins
test
mov
jmp
out
rcr
add
adc
dec
rcr
arpl
mov
loopne
adc
cwde
retf
mov
add
rcl
ret
push
and
das
shl
xchg
call
dec
or
xor
inc
jl
push
add
jb
mov
outs
adc
in
xchg
jb
mov
ss
xor
push
and
test
hlt
sub
xchg
fsub
push
sub
adc
icebp
cli
adc
pop
nop
jecxz
repz
dec
inc
dec
jno
cmps
jo
jmp
dec
aad
ret
jae
push
mov
push
pop
test
inc
dec
ins
inc
daa
ja
xchg
ss
push
xchg
int
shl
xor
mov
movs
and
mov
sbb
inc
and
data16
xchg
add
out
cmp
push
mov
mov
sub
mov
xchg
xor
mov
push
add
stos
jl
cli
gs
mov
and
dec
popa
or
xchg
retf
xor
imul
fwait
daa
lock
dec
enter
mov
jmp
add
test
pop
xor
push
outs
shl
loope
data16
add
shl
or
inc
stos
push
sub
sbb
movs
sbb
mov
(bad)
xchg
bound
xchg
lods
test
mov
and
das
(bad)
sub
shr
repnz
jb
into
pusha
aaa
or
push
loope
out
scas
mov
and
mov
jecxz
cmps
cmps
sbb
retf
mov
stos
add
xor
ror
lock
sub
fnsave
inc
imul
xor
adc
lock
ret
pop
imul
or
sar
ret
push
(bad)
call
cmp
pop
lods
inc
add
or
fnsave
and
lods
(bad)
fidiv
or
fldenv
inc
xchg
mov
jae
pop
imul
pop
xchg
retf
cwde
jmp
xchg
cwde
sub
push
jp
sti
ja
pop
call
cmc
adc
or
xor
(bad)
push
or
pop
jg
fld
fdiv
cld
js
or
mov
mov
lods
xor
fdiv
arpl
inc
stos
pop
not
xlat
fisttp
ss
xchg
test
xlat
sbb
sbb
cli
jg
jp
or
dec
jmp
test
out
ret
mov
dec
aas
pop
sahf
retf
inc
jmp
(bad)
fwait
push
pop
sub
aaa
js
scas
inc
xor
fwait
lods
jmp
mov
inc
or
sub
jl
leave
dec
daa
lods
retf
jb
inc
in
sti
fdivr
jb
ret
inc
ret
scas
ror
gs
mov
mov
iret
test
loop
fsubr
inc
popa
or
imul
retf
shl
loop
jecxz
mov
push
push
sub
jae
adc
out
outs
icebp
test
leave
mov
in
ins
mov
add
sbb
jnp
push
aaa
push
ror
hlt
repnz
sbb
mov
je
dec
xchg
cwde
pusha
pusha
mov
ins
icebp
jno
mov
mov
mov
dec
out
mov
(bad)
sub
das
je
add
and
fsubr
add
sub
jmp
inc
test
jmp
daa
jne
push
std
mov
push
xlat
mov
lds
stos
aad
xchg
and
retf
mov
inc
sbb
outs
aas
mov
xchg
cld
sbb
xchg
cmp
pop
adc
push
mov
lds
pop
(bad)
mov
jp
inc
dec
mov
or
jnp
dec
cmps
mov
mov
and
xchg
mov
loope
sub
xor
pop
repnz
fdivr
popa
fmul
test
in
xchg
cld
ror
in
out
adc
pop
sub
inc
push
pop
and
and
jmp
xor
or
mov
cmp
lods
fidiv
bnd
nop
jmp
mov
repnz
cmp
cwde
jecxz
sub
es
xor
mov
jne
mov
icebp
fistp
sub
cdq
out
fcmove
and
pop
std
mov
jg
mov
pop
inc
jl
shl
dec
int
cwde
imul
mov
jb
sbb
(bad)
sub
push
inc
xor
add
lahf
test
scas
stos
and
pop
adc
outs
dec
loopne
pop
jmp
jb
pop
shl
or
fs
es
sub
jl
fcomp
adc
dec
push
xchg
lahf
mov
bound
mov
jb
inc
imul
ficomp
inc
push
ret
mov
stc
jbe
sbb
in
dec
outs
pop
push
sub
stos
popf
mov
jle
and
adc
dec
movs
lahf
mov
ret
imul
test
lahf
fsub
pop
mov
jmp
and
pop
push
rep
in
add
fcom
sar
out
sub
or
adc
mov
push
push
repz
fwait
push
pop
ret
lods
add
and
loop
mov
xchg
in
cld
fsub
lods
clc
repz
outs
retf
ds
pop
mov
xchg
mov
out
sbb
add
mov
mov
jb
cwde
pop
int
stos
mov
outs
pop
jecxz
mov
cmp
pop
std
pushf
outs
adc
sub
jg
pop
mov
repnz
test
mov
add
mov
imul
repz
sbb
shr
and
pop
push
mov
stos
test
inc
cmp
add
mul
lock
xchg
das
add
adc
clc
ret
add
mov
loope
out
cdq
int
add
push
or
jae
aam
add
xchg
xor
movs
jg
rep
add
cmp
xor
mov
aas
and
je
inc
fadd
mov
sub
mov
mov
adc
mov
or
loopne
xor
inc
add
jecxz
add
(bad)
es
repz
or
dec
adc
mov
add
or
outs
ss
in
mov
push
inc
and
add
sti
or
pop
xchg
fwait
arpl
movs
or
iret
sbb
mov
mov
mov
adc
mov
sbb
cmp
add
cmps
xlat
mov
or
xchg
cwde
stos
pusha
and
pop
xor
lds
or
push
xor
and
xchg
sti
xchg
jge
sbb
adc
arpl
outs
dec
push
jo
lds
test
inc
jbe
iret
mov
jb
retfw
fcomp
inc
mov
imul
inc
push
stos
(bad)
cmp
push
popf
dec
mov
push
fcomp
and
cmc
push
bound
push
push
aad
fdiv
ins
sub
mov
test
idiv
cmps
jge
jecxz
je
push
fsubr
loop
pop
inc
mov
lock
xchg
in
mov
jg
loop
push
frstor
mov
js
fcomp
lods
leave
sti
cmp
xchg
daa
icebp
mov
shl
dec
ret
mov
stos
mov
sub
aas
rcr
adc
jno
and
int3
lds
cmc
out
sbb
mov
dec
cld
inc
xor
mov
and
add
mov
lods
xor
push
cmps
call
inc
or
xchg
dec
test
add
xchg
jecxz
out
sub
imul
push
(bad)
and
lea
ret
inc
xor
in
and
popf
pop
outs
inc
(bad)
(bad)
fnstcw
rol
jb
je
add
sub
into
sub
imul
pop
and
test
pop
add
cmp
dec
pop
in
sub
sbb
enter
push
cli
iret
sti
jmp
popa
cmps
mov
sub
lahf
in
sub
stos
pop
or
loop
popa
rol
mov
loop
adc
xchg
pushf
popf
inc
ficomp
push
dec
dec
xchg
mov
add
rcl
add
and
(bad)
cmps
cmp
sub
neg
mov
nop
outs
out
inc
inc
inc
aad
jl
or
xchg
inc
jmp
repnz
cmp
call
inc
ret
xchg
adc
adc
sbb
sbb
jecxz
pop
rcr
jp
adc
dec
push
out
loop
stos
mov
mov
cmp
xchg
cmp
xor
inc
sub
fidivr
out
push
sbb
retf
call
pop
es
inc
ficom
es
jg
sbb
stos
fldcw
jl
jecxz
hlt
push
sub
inc
pop
xor
pusha
jge
mov
jg
out
fcomp
inc
jl
ret
movs
stos
inc
ja
in
xchg
repz
sbb
ss
movs
bound
cmc
xchg
sar
movs
sbb
mov
and
enter
xchg
jg
jmp
cs
dec
sbb
jmp
sub
mov
mov
cmp
jo
arpl
cwde
out
pop
test
mov
mov
dec
shl
pusha
xor
inc
scas
loope
mov
push
mov
mov
fsubp
(bad)
cmp
pop
jne
mov
cmps
bnd
jecxz
arpl
or
add
pop
dec
out
imul
dec
cmc
xchg
pop
pop
ja
jecxz
xchg
mov
ror
clc
cdq
gs
mov
push
pop
mov
inc
fiadd
hlt
and
mov
cmc
push
dec
ret
pop
cli
adc
mov
lods
xchg
mov
arpl
sbb
sub
mov
adc
cmp
mov
in
ret
js
add
das
xchg
add
or
cmps
push
sub
out
popf
pop
or
mov
inc
shl
in
inc
test
add
xchg
mov
xor
inc
sqrtps
jb
ss
jne
fwait
lds
or
jmp
mov
jp
add
aam
push
cmp
xlat
out
lahf
in
jmp
jge
bound
es
mov
fwait
jp
sub
or
int
retf
mov
rcr
stos
or
inc
lea
mov
push
cmp
adc
imul
test
xchg
out
std
push
icebp
push
shr
jmp
mov
and
add
mov
add
dec
jmp
stc
sbb
or
mov
leave
in
sti
push
or
mov
xchg
cld
push
push
dec
(bad)
mov
jmp
dec
scas
dec
pop
enter
sti
out
push
cmp
add
repnz
cmp
call
sbb
repz
sbb
adc
pop
pop
add
mov
jecxz
dec
scas
pop
movs
xor
xchg
sbb
mov
sub
fisub
inc
ret
sub
cdq
fwait
sub
lea
jb
jmp
call
ret
jmp
or
xchg
test
push
pop
pop
xor
shr
mov
mov
inc
sub
cmp
or
push
stos
pop
inc
loop
lea
fist
ffreep
xchg
inc
cwde
mov
rcr
mov
gs
push
cmp
(bad)
pop
jns
inc
test
adc
xchg
xor
or
mov
mov
dec
in
sbb
jnp
sub
jge
fidiv
xchg
mov
aaa
xchg
cwde
adc
adc
xor
sub
lock
pop
sub
in
nop
sbb
lods
push
add
sbb
mov
xor
add
scas
pop
icebp
pop
aam
jge
sar
ret
jo
dec
xor
or
in
pop
out
mov
sbb
and
rcr
std
mov
dec
gs
adc
xlat
es
jmp
mov
jle
dec
pop
rcl
xchg
mov
jg
add
outs
imul
dec
mov
in
mov
clc
popa
icebp
rcr
push
xchg
mov
mov
loope
dec
ja
clc
(bad)
inc
mov
adc
add
fsub
daa
pusha
and
xchg
aad
push
adc
fiadd
xchg
mov
cld
rol
movs
push
ins
stos
outs
data16
jb
arpl
sub
pushf
out
retf
adc
or
lahf
push
or
push
inc
pop
inc
imul
lods
std
fcmovnu
jne
shl
xchg
xor
shr
shr
and
pop
rol
sub
and
xor
sahf
test
sbb
cdq
add
ss
jecxz
mov
jae
lahf
mov
movs
mov
xor
or
dec
outs
sub
enter
cmp
outs
daa
xchg
xchg
test
sbb
dec
xchg
mov
addr16
and
mov
mov
mov
cmp
sub
dec
and
(bad)
loopne
dec
arpl
loop
adc
ins
mov
add
push
repnz
rol
jbe
or
mov
scas
out
rcr
sahf
jecxz
ret
sahf
xor
cli
push
clc
aam
dec
mov
cmp
push
int3
xchg
dec
or
not
push
mov
dec
mov
arpl
in
in
das
aam
push
aam
cmp
in
repnz
and
xor
xor
jbe
inc
sbb
call
dec
cmp
(bad)
call
sub
jo
mov
rcl
xchg
or
sti
cmp
mov
xor
jecxz
jae
ret
mov
sub
retf
mov
out
mov
shr
jle
push
cmps
pop
sub
lahf
jo
push
(bad)
cld
adc
(bad)
ds
mov
cmp
cmp
and
int3
leave
xchg
xor
into
je
cmp
or
pop
push
push
ds
jge
mov
inc
xchg
inc
cmc
iret
jp
fimul
dec
je
test
or
sar
or
push
and
ror
xchg
xor
out
pop
jmp
add
bound
ja
addr16
sbb
aam
lods
fidivr
cmps
in
rcr
ret
arpl
iret
and
jmp
std
cmp
pushf
adc
std
mov
mov
enter
aas
test
cs
iret
inc
xchg
ins
(bad)
sahf
retf
shl
call
lea
inc
mov
push
sub
repnz
add
mov
adc
jo
arpl
xlat
dec
ins
add
outs
cs
xor
adc
pop
inc
add
push
mov
mov
cmps
mov
add
jge
mov
jmp
sbb
mov
push
sub
add
adc
cmp
cdq
dec
push
out
stc
ins
sbb
mov
mov
dec
pop
pop
sub
add
in
push
lock
sbb
cmps
push
out
jl
xor
cmps
(bad)
dec
scas
xchg
les
mov
jo
mov
cmp
mov
push
add
loope
scas
dec
jnp
stos
in
or
lds
push
mov
push
aaa
xor
cmp
sub
mov
repnz
lea
jmp
mul
outs
push
jb
dec
jbe
xchg
mov
stc
stos
ja
mov
or
adc
ds
rol
aas
or
fwait
out
inc
sub
cmp
int3
mov
pop
mov
outs
cli
sub
in
jnp
mov
cmc
and
enter
fld
scas
jg
stc
imul
jae
data16
cmp
sub
and
call
pop
mov
fmul
adc
sub
repz
mov
call
lock
fcmovu
mov
mov
sbb
cmp
jge
rcl
in
mov
mov
add
(bad)
mov
mov
push
and
fs
mov
pop
pop
(bad)
pop
and
imul
pop
idiv
imul
xor
mov
sub
sub
cmp
dec
jb
test
in
out
inc
inc
push
or
and
retf
out
mov
into
adc
arpl
clc
mov
stos
add
cld
mov
mov
ss
dec
dec
leave
pop
sbb
fstp
ficom
jl
pop
jns
daa
das
xchg
test
dec
add
data16
adc
mov
mov
jno
inc
mov
fldenv
pop
pop
(bad)
mov
dec
jl
xchg
and
bnd
mov
and
add
inc
sub
jnp
ds
xchg
jmp
jge
ret
dec
outs
inc
daa
push
or
sub
sbb
and
mov
adc
mov
adc
and
cmp
imul
inc
jb
and
(bad)
jmp
repz
mov
stos
sbb
arpl
cmp
fisttp
test
repnz
inc
js
cmp
shr
push
ror
and
stos
add
mov
loop
xchg
gs
outs
mov
and
push
sub
inc
xor
dec
dec
pop
sbb
test
dec
fistp
das
push
inc
scas
cwde
mov
mov
and
mov
cmp
sub
xor
push
cld
clc
leave
and
xor
jmp
jmp
aas
add
xor
fisubr
jno
jmp
inc
call
loope
adc
jmp
std
or
jecxz
and
or
aaa
das
pop
dec
fdivr
dec
rcr
aam
xor
fiadd
add
push
popa
adc
stos
aas
fsubr
inc
(bad)
fnsave
fsubr
ret
lods
ds
and
dec
pushf
adc
loope
mov
repz
mov
sbb
aas
pop
fwait
or
push
inc
jmp
mov
repz
or
out
(bad)
shl
nop
xor
or
add
retf
pop
push
cmp
mov
retf
movs
jmp
fwait
ret
js
jmp
cmp
sub
pop
inc
dec
dec
fwait
sbb
(bad)
call
add
jae
add
push
das
movd
xor
test
into
sahf
ror
pop
cmp
or
pop
push
inc
sahf
mov
imul
jae
test
stos
cmp
clc
mov
sbb
cli
(bad)
lds
and
push
sbb
mov
scas
mov
icebp
mov
cmps
dec
jno
(bad)
into
adc
fadd
add
pop
cmp
push
pop
mov
sub
or
test
cdq
loop
cmp
sbb
fadd
jmp
mov
packsswb
into
pop
jmp
add
jns
loope
in
nop
scas
jmp
icebp
sub
cld
inc
fs
aam
retf
adc
and
xchg
iret
add
pop
add
pop
pop
pushf
jecxz
pop
or
daa
movs
xlat
dec
cmp
push
or
xchg
imul
psubsw
pop
in
sbb
neg
fcomp
mov
sbb
mov
jp
adc
push
sbb
sar
retf
sub
fsub
das
shr
sbb
(bad)
ror
xor
or
inc
(bad)
stos
jecxz
(bad)
test
repnz
arpl
and
pop
(bad)
xlat
loopne
cmp
(bad)
arpl
push
out
mov
or
sbb
and
retw
sahf
adc
popa
call
in
ret
shl
imul
lods
repnz
scas
jo
out
pop
imul
outs
pop
or
mov
icebp
xchg
enter
add
inc
mov
jae
adc
pop
dec
imul
cwde
jp
jnp
or
cdq
sub
mov
jmp
jmp
or
and
adc
(bad)
in
out
adc
xor
add
mov
lock
mov
or
cli
out
jg
arpl
mov
cs
inc
cmp
out
out
push
test
ja
sbb
inc
movs
in
pop
mov
sub
xchg
mov
push
neg
mov
mov
lock
test
mov
fmul
mov
mov
jmp
inc
jne
xchg
mov
add
retf
mov
leave
xor
jne
lds
sbb
out
pusha
neg
not
mov
xchg
jp
pop
idiv
ror
sbb
sbb
pop
or
je
sbb
mov
fnstenv
sbb
mov
or
dec
push
or
cmp
sub
jle
push
and
adc
push
pop
out
icebp
jb
jecxz
and
imul
cdq
sub
inc
or
jnp
mov
cmp
xor
imul
and
repz
retf
cdq
pop
jbe
mov
dec
and
mov
pop
pop
addr16
mov
sub
pop
out
sti
mov
stos
xchg
jmp
mov
add
shl
jmp
mov
and
jnp
adc
je
mov
mov
pop
push
test
frstor
fwait
test
out
in
mov
push
aas
mov
sub
pop
bound
add
add
mov
dec
test
pop
cdq
xchg
xchg
mov
adc
sbb
addr16
mov
sbb
ret
sbb
sti
jae
sub
fldcw
stc
in
and
or
dec
pop
dec
and
fcomp
mov
loope
rol
or
xchg
sar
xor
fist
mov
add
cmp
adc
in
and
in
jmp
cwde
and
call
and
or
ja
(bad)
pushf
and
mov
mov
xor
mov
mov
push
xor
(bad)
jmp
call
mov
ins
jmp
jno
lock
adc
inc
outs
or
(bad)
mov
aam
stos
mov
cmp
inc
or
push
hlt
jbe
and
jecxz
jecxz
out
adc
aam
mov
cdq
add
xlat
or
ss
xchg
jmp
or
(bad)
retf
rcr
mov
adc
mov
ret
jmp
mov
loope
mov
adc
mov
retf
popf
icebp
inc
mov
pop
js
imul
mov
mov
fcmovnbe
cld
dec
mov
push
shr
cmp
and
adc
inc
fdiv
lea
sar
in
dec
xor
scas
adc
popf
sbb
dec
jle
jg
adc
push
mov
fmul
inc
add
pop
lea
mov
sub
inc
fcomp
push
(bad)
neg
push
fadd
test
ret
sbb
ret
mov
sar
xchg
test
jmp
jae
and
cwde
daa
sub
mov
cmp
cdq
daa
mov
int
cli
ret
xor
pop
sar
dec
and
fst
or
xchg
sub
clc
cmps
test
mov
stos
xchg
xchg
sar
mov
fild
adc
fwait
shr
or
jecxz
fwait
mov
and
sub
sti
add
int3
leave
rcr
fld
mov
sub
mov
adc
dec
mov
rol
mov
in
fcmovnb
add
mov
pop
and
cmp
into
xor
stc
fidiv
or
jp
ins
leave
jecxz
arpl
jmp
sbb
cs
jge
sbb
mov
repz
fcmovnb
cwde
cdq
sub
inc
imul
fucomi
xchg
retf
jle
mov
inc
jbe
or
add
inc
cmp
retf
in
sbb
das
repz
inc
xor
imul
mov
aaa
xor
stos
sbb
mov
retf
ror
jnp
imul
outs
jmp
stos
sbb
(bad)
loope
cmp
lock
xor
mov
dec
push
je
(bad)
pushf
pop
push
loope
or
pop
inc
add
ins
mov
or
and
and
inc
pop
jmp
jne
mov
test
and
or
sub
sti
retf
pop
lods
or
lds
mov
inc
les
(bad)
(bad)
or
test
cmps
rol
retf
adc
es
mov
fild
loope
dec
xlat
pop
pop
cmps
jns
in
lock
call
repz
ja
push
div
adc
sbb
xor
inc
mov
xor
cwde
stc
xchg
sahf
mov
ss
inc
sub
inc
retf
sti
aas
les
xchg
sbb
dec
mov
mov
mov
push
mov
inc
fistp
dec
loop
(bad)
das
xchg
neg
lea
cmps
sub
cli
xor
ins
push
retf
jecxz
xchg
sub
add
and
jmp
mov
cmps
in
sbb
lahf
cmps
mov
outs
inc
pop
loop
sbb
xchg
cmp
inc
add
xor
xor
int3
mov
data16
cld
mov
and
gs
jmp
scas
sahf
loopne
out
mov
jae
in
add
mov
pop
jmp
stos
aad
int
jae
out
lods
mov
adc
das
xor
or
add
push
add
movmskps
pop
xor
jno
clc
lods
inc
das
jb
mov
stc
imul
arpl
retf
push
cli
mov
clc
xor
add
or
xor
sar
pop
ss
test
xor
pop
mov
pop
pop
sub
loop
(bad)
inc
repnz
fucomip
repnz
jecxz
lods
retf
das
fwait
push
rol
pop
outs
push
cmp
and
dec
mov
jo
inc
movs
int
xchg
mov
or
fwait
js
dec
xor
adc
jp
jp
stos
ror
add
retf
shl
xor
push
in
(bad)
pop
pop
pop
push
or
sub
ja
in
iret
mov
xor
mul
add
push
aas
test
mov
inc
jnp
and
aam
jg
xor
cmp
add
cs
popf
shl
imul
inc
cwde
dec
or
stos
push
adc
adc
ja
jmp
ret
fadd
repnz
add
pop
adc
sbb
inc
sbb
sti
movs
lahf
stos
stos
mov
sbb
lea
pop
bound
or
stos
fst
(bad)
and
sbb
retf
jle
xlat
out
scas
push
mov
sbb
mov
jecxz
bound
sar
cmp
sahf
test
xchg
mov
cmp
inc
xor
cmp
out
sbb
ror
sti
push
iret
add
mov
xchg
mov
and
lods
cmps
ret
pop
std
icebp
movs
mov
xchg
and
in
loopne
adc
ror
call
pop
xchg
or
xchg
popf
lods
out
test
mov
push
movq
jae
pop
push
mov
push
dec
xchg
mov
and
(bad)
jp
jae
sub
stos
pop
push
jmp
xlat
fmul
mov
jl
daa
xchg
sub
cmps
jle
dec
pop
xlat
rcl
add
mov
push
inc
mov
push
push
mov
(bad)
call
cwde
add
mov
sub
xor
adc
dec
stos
mov
(bad)
fcmovbe
ds
repz
ret
inc
movs
or
in
adc
push
call
and
jb
mov
xchg
sbb
inc
retf
xchg
out
mov
and
and
pop
data16
sar
call
sbb
je
das
sub
adc
and
inc
add
push
loopne
sub
jge
in
test
nop
call
xor
pop
and
dec
inc
mov
fldenv
dec
cdq
xor
ins
ret
inc
stos
movs
mov
aam
cdq
cdq
push
sub
cmp
shl
xchg
fdivp
inc
std
xchg
enter
int
and
inc
and
inc
sbb
cmp
inc
pop
push
xlat
ret
sub
(bad)
in
popa
xor
xor
ss
mov
pop
pop
and
cmp
xor
sub
stc
cs
xor
retf
lea
pop
jnp
(bad)
mov
or
lods
ror
inc
fld
jg
mov
mov
mov
push
fcom
inc
mov
imul
out
cmp
adc
hlt
pop
scas
sub
jno
dec
dec
loop
add
add
push
or
pop
push
out
jecxz
mov
cwde
cmp
sub
mov
and
mov
mov
push
sub
mov
sbb
loope
sub
shr
xchg
cmp
add
push
mov
clc
aad
jg
(bad)
repz
fld
into
jb
mov
xor
mov
mov
push
dec
jg
jmp
int3
imul
jp
(bad)
std
in
and
ja
in
sbb
fwait
in
nop
ins
icebp
lahf
add
sbb
rol
test
push
das
cs
ret
xor
enter
rcr
leave
mov
rcr
in
xor
cmc
icebp
rcl
fwait
xlat
je
sbb
adc
mov
sti
out
inc
add
xchg
inc
gs
ins
dec
push
pop
sti
call
cdq
mov
cmp
xchg
fnstsw
ja
mov
mov
jnp
mov
es
mov
cld
pop
push
xchg
rcl
or
mov
out
sbb
sub
addps
imul
jecxz
xchg
xor
inc
inc
push
mov
inc
mov
mov
lods
repnz
and
mov
retf
in
add
sub
out
ffree
dec
xchg
push
dec
sub
fwait
aas
xchg
sti
scas
pushf
jp
pop
js
xchg
push
xchg
pop
(bad)
arpl
or
add
sahf
ja
addr16
mov
mov
arpl
bnd
mov
stos
test
ror
push
aaa
sbb
xchg
and
ror
clc
jnp
jecxz
rol
xor
xchg
jae
jmp
stos
ret
cmps
push
cmp
in
in
mov
(bad)
stos
fst
stos
xor
push
and
(bad)
test
adc
dec
jg
mov
pop
stos
jmp
push
(bad)
pop
add
pop
adc
popf
inc
bound
mov
stos
loop
push
loop
push
stc
cld
pop
cmp
mov
fbstp
or
add
xchg
enter
mov
rcl
push
test
retf
or
imul
icebp
loope
(bad)
and
inc
scas
lods
cmps
xchg
sbb
cdq
xor
jbe
jnp
xor
jae
into
pop
cmp
aas
scas
cld
loop
ins
cld
mov
mov
imul
inc
and
loope
lods
sbb
cmp
and
mov
pop
jmp
dec
sti
mov
mov
sub
sub
loopne
jg
jne
adc
mov
inc
sbb
sub
cld
cmp
ja
jae
shr
loope
pavgw
xor
mov
out
or
mov
test
push
sbb
mov
(bad)
pop
ret
out
adc
jnp
jecxz
aad
xor
repz
mov
fwait
or
mov
loop
add
mov
jbe
and
cmps
adc
sbb
adc
inc
sar
sbb
lock
(bad)
xchg
enter
jmp
mov
cmp
adc
bound
adc
push
fisub
repz
mov
stos
cdq
in
lods
sbb
adc
mov
pop
shl
or
sub
arpl
push
sub
pushf
jmp
add
mov
imul
or
lock
push
out
push
pop
mov
call
or
mov
(bad)
or
xlat
or
and
adc
mov
sar
mov
jnp
jg
sbb
pop
aaa
add
mov
out
mov
or
xchg
adc
xchg
mov
cli
aam
pop
push
adc
arpl
rol
jne
fstp
ins
add
popf
(bad)
repz
leave
mov
sub
mov
xchg
(bad)
lea
cwde
bnd
mov
(bad)
cmp
les
enter
and
mov
push
nop
dec
mov
ja
ret
dec
xor
and
or
inc
push
lods
push
jo
mov
sahf
pusha
gs
mov
xchg
pop
sti
sbb
fwait
imul
in
jae
and
retf
jns
enter
jmp
and
repz
sbb
lock
pop
cmc
pop
jp
fscale
out
test
push
movs
sub
jg
(bad)
daa
push
cli
mov
pop
test
jae
xor
mov
sar
inc
imul
lods
inc
loop
fstp
sub
hlt
sub
popa
loop
test
push
in
lea
xlat
in
fwait
rep
mov
popa
mov
repz
dec
sbb
dec
sbb
arpl
xor
sbb
and
push
dec
sub
cwde
push
out
adc
xor
outs
ror
ret
fistp
leave
movs
repz
(bad)
or
sti
jae
mov
xor
xchg
inc
retf
mov
or
push
test
xchg
sbb
jb
adc
dec
test
fisttp
inc
dec
sahf
out
out
out
fistp
arpl
sub
jmp
jmp
jae
xor
movs
cmp
cmp
movs
rcr
cmp
inc
arpl
cdq
sub
loopne
pop
les
repz
stos
or
xchg
add
or
mov
mov
sub
adc
mov
adc
dec
cmp
dec
stos
jmp
sti
mov
repz
stos
jp
cmp
pop
leave
jp
lss
push
pop
push
cs
cmc
arpl
jnp
lods
jbe
fstp
xchg
sahf
xor
fsubrp
inc
push
pop
ror
sub
jmp
mov
or
push
jg
pop
cwde
call
rol
add
loop
add
mov
neg
and
js
dec
ss
neg
jb
cdq
cli
xchg
loope
add
mov
repz
adc
sti
and
push
enter
scas
sbb
pop
es
sub
int3
pop
inc
mov
dec
fisttp
jnp
or
add
jmp
adc
mov
mov
lds
bound
cmps
cmp
enter
(bad)
sub
pusha
xor
xchg
adc
movs
jmp
out
adc
push
sahf
out
imul
cmp
jmp
out
ficomp
scas
leave
retf
ins
das
scas
lods
xor
dec
and
xlat
pop
sti
add
(bad)
pop
push
out
nop
sti
cld
imul
xchg
test
jmp
clc
leave
mov
xchg
xchg
sub
mov
pushf
ins
mov
xchg
test
mov
retf
aad
mov
mov
arpl
popa
retf
jle
arpl
push
dec
icebp
das
mov
sbb
es
shl
imul
mov
in
cli
ret
or
push
mov
dec
sub
mov
or
stos
stos
and
test
bound
inc
lods
pop
add
lahf
loop
mov
jge
mov
mov
scas
not
daa
dec
adc
(bad)
mov
arpl
std
retf
and
cmp
push
rol
les
cmps
xchg
add
sub
jb
clc
leave
cmp
sbb
(bad)
clc
retf
stos
push
ja
call
cld
pop
jo
mov
jp
ss
fwait
add
xchg
cmp
call
push
jg
xor
mov
xor
or
add
jo
popa
adc
cmps
mov
inc
sub
inc
fcmovnbe
pop
nop
or
cmp
push
ss
cmove
inc
icebp
shl
scas
cmp
nop
adc
lds
movs
retf
mov
inc
cmps
je
or
mov
stc
sub
and
or
inc
mov
call
sbb
mov
fs
mov
sbb
mov
and
xchg
test
push
call
xchg
stos
xor
pop
pop
and
mov
(bad)
enter
sti
rcl
or
ret
mov
add
mov
mov
mov
inc
fld
std
adc
outs
pop
xor
lods
jge
push
jbe
adc
pop
sub
sub
sbb
fsub
cmp
mov
jnp
xchg
xor
pop
push
sti
(bad)
repz
pop
ins
lds
push
and
ret
jns
sbb
retf
(bad)
pusha
and
jae
fsubr
push
ficom
addr16
xchg
mov
ficom
mov
push
pushf
and
dec
pop
pop
ja
outs
mov
lods
push
jnp
call
mov
mov
rcl
xor
jl
or
stos
sar
lea
and
fimul
xor
daa
je
mov
pop
cwde
fwait
in
xor
push
cmp
bound
cmp
mov
cmps
mov
repz
je
adc
outs
inc
dec
std
cmps
mov
xchg
mov
xor
sub
and
mov
imul
rcl
retf
imul
mov
imul
pop
push
imul
movs
div
cdq
xor
std
out
cmp
ficomp
cmc
std
pushf
fst
sub
sub
lods
push
imul
add
cmps
fwait
add
sub
imul
mov
ret
sbb
jne
sub
push
mov
in
out
loope
and
(bad)
out
aaa
scas
inc
jl
sbb
add
lods
sti
repz
cli
test
cdq
out
jecxz
xor
fist
fwait
sbb
inc
add
es
pop
icebp
fwait
xchg
sbb
ficom
mov
icebp
and
ss
inc
cmps
xor
mov
sub
retf
adc
push
fs
mov
or
sub
sub
scas
or
push
jg
add
imul
retf
movs
mov
dec
mov
fistp
pop
mov
jnp
xchg
stc
dec
fmul
mov
dec
rcl
jmp
cwde
jmp
jns
ror
inc
mov
xlat
dec
push
jl
jo
inc
xor
mov
push
xchg
push
jmp
cmc
in
imul
mov
fiadd
test
adc
into
dec
dec
dec
xchg
mov
mov
in
mov
dec
sub
jnp
push
or
adc
jnp
push
inc
jo
rcr
xchg
jae
xlat
fild
std
sbb
add
scas
xchg
lods
clc
fcom
xchg
fwait
pop
sbb
std
sub
popf
jnp
imul
jmp
int3
lods
lock
fwait
xchg
out
test
dec
test
int
jbe
xor
inc
in
mov
pop
arpl
or
loope
and
mov
pop
icebp
mov
and
push
and
out
or
xchg
mov
movs
mov
or
int3
sti
cwde
dec
arpl
stos
cli
(bad)
movs
(bad)
retf
sti
call
test
cmc
jns
mov
add
fwait
nop
jbe
mov
adc
adc
(bad)
stc
in
retf
popa
add
pop
mov
fs
push
push
cmp
xor
scas
in
sub
mov
and
inc
mov
jno
hlt
push
sbb
fwait
xchg
pop
pop
jle
sti
bound
xlat
call
cs
call
aad
push
fidivr
or
dec
xchg
jmp
clc
lock
xchg
dec
push
out
in
jo
mov
push
pop
shl
mov
rcr
arpl
mov
dec
repnz
shl
mov
jbe
dec
xor
sahf
inc
sub
xchg
mov
fld
mov
ret
retf
fidivr
loop
mul
jae
adc
fnstsw
mov
(bad)
mov
sbb
cmp
into
js
dec
scas
add
mov
test
lea
std
popa
and
movs
mov
add
fs
addr16
add
mov
out
loopne
dec
mov
std
into
cmp
jg
and
push
mov
mov
ror
std
adc
ret
mov
xor
popa
sbb
cld
hlt
or
loopne
out
xchg
aaa
shr
mov
fist
mov
mov
je
adc
mov
call
push
sar
ja
into
dec
inc
push
pop
mov
and
xor
cmp
mov
enter
js
out
jl
dec
cli
lods
push
jns
sbb
arpl
dec
scas
cmp
mov
out
(bad)
stc
jle
imul
clc
jp
cmp
push
pop
sub
stos
mov
push
mov
mov
pop
jmp
xchg
dec
test
cmps
test
cmp
xor
(bad)
test
mov
mov
in
sbb
cmp
pop
pop
pop
pop
pop
cmps
aam
and
das
jle
popf
aam
mov
push
add
jmp
pop
sub
repnz
sbb
repz
sbb
mov
rol
jbe
push
int
xchg
push
push
jmp
dec
or
pop
dec
fist
jmp
xchg
mov
jae
adc
sbb
mov
loope
call
sti
push
bound
fcmovnbe
xchg
in
ret
arpl
jge
sti
sub
pop
dec
dec
mov
int3
aam
out
ret
repz
push
clc
mov
in
sub
inc
bound
or
enter
mov
cwde
cwde
pop
jae
loopne
xor
cmp
push
dec
sahf
test
add
stc
clc
fld
ja
in
cdq
sbb
movs
retf
adc
jne
fwait
retf
xchg
pop
icebp
adc
sbb
pop
retf
push
dec
mov
shl
and
xchg
lods
mov
gs
ret
not
inc
and
jo
mov
cmps
or
mov
call
rcr
gs
aad
movs
push
cmp
iret
mov
(bad)
retf
sub
movs
(bad)
repnz
cmp
inc
jmp
mov
cmps
loope
dec
push
or
lea
out
dec
rcl
rcl
mov
mul
mov
inc
cmp
xchg
cmps
pop
jl
stos
bound
mov
lds
rcr
jb
je
in
pop
imul
call
inc
fstp
sar
lea
mov
fnstsw
fnstenv
repnz
das
fs
sbb
lahf
nop
and
(bad)
aad
or
sbb
inc
jae
arpl
inc
sbb
repnz
aas
out
sub
test
sbb
mov
xchg
push
xor
lahf
jns
arpl
mov
fcmovnbe
(bad)
out
test
jae
idiv
sub
mov
adc
ins
std
in
jbe
scas
inc
arpl
cwde
cmp
movs
in
mov
mov
lods
repz
out
popf
mov
inc
pop
cmp
sub
mov
jle
and
pop
popf
outs
ret
sub
je
rol
cld
fidivr
mov
mov
fs
adc
adc
or
fild
push
icebp
cwde
xor
lock
in
jno
lods
and
inc
mov
mov
mov
cmp
jmp
jb
xor
pop
mov
mov
mov
inc
repz
lods
clc
mov
retf
pop
in
fist
sbb
sbb
fisttp
sub
mov
jae
addr16
jl
or
ret
aad
cmc
repnz
enter
xor
mov
and
jne
and
fwait
shl
(bad)
push
push
cmp
mov
mov
and
and
lahf
sbb
and
mov
test
jae
dec
adc
ret
retf
mov
(bad)
push
js
add
sub
or
popa
(bad)
xor
xor
xchg
and
outs
cmp
add
sbb
jno
sub
shr
into
push
and
xchg
scas
ss
cmp
daa
dec
sub
retf
add
jg
fcmovne
pop
lods
mov
aad
sbb
mov
in
mov
imul
shl
push
push
add
mov
jae
push
or
dec
xor
std
loope
call
outs
retf
fdiv
xor
paddw
out
cwde
retf
movs
mov
pop
dec
and
xchg
sbb
mov
sub
ret
rol
fistp
inc
adc
mov
mov
sub
or
cmp
lock
push
pushf
movs
add
or
and
sub
sbb
aad
je
cmp
add
jae
jnp
shl
jbe
arpl
pop
pop
popf
sbb
imul
enter
mov
out
mov
(bad)
xor
fisubr
popa
stc
jae
icebp
jg
das
push
mov
jg
and
jb
out
mov
xchg
pop
mov
les
xchg
pop
mov
clc
inc
cmp
jl
inc
jle
test
pop
push
push
sbb
stos
jb
xor
jnp
push
retf
mov
out
loopne
jmp
pop
mov
push
pop
jo
add
inc
aas
stos
mov
test
sbb
inc
mov
sub
pop
adc
jbe
xchg
sub
xlat
cmp
or
ds
and
mov
test
push
mov
pop
lods
inc
mov
fld
retf
daa
lds
or
push
ret
cs
jae
dec
and
sub
xchg
pop
sbb
ins
inc
push
jae
repz
pusha
repz
shl
imul
je
mov
sahf
enter
fucompp
stos
ret
sub
fwait
mov
xchg
popa
adc
lea
xchg
out
dec
or
mov
loope
push
ret
or
dec
stos
sub
and
arpl
push
dec
sbb
mov
sbb
xchg
xchg
outs
xchg
test
jb
imul
sub
or
repnz
push
(bad)
ins
mov
test
fild
jp
fwait
inc
outs
mov
jnp
sub
mov
sar
int3
iret
(bad)
pop
in
int3
xlat
xor
inc
(bad)
jge
ja
adc
push
stos
xchg
push
imul
pop
test
and
pop
in
and
shl
adc
loop
jne
cmp
sub
mov
fstp
das
add
xlat
xor
mov
sub
push
xor
pop
shl
or
and
es
iret
ins
mov
les
cwde
rcl
pop
push
int
xor
xlat
outs
jnp
jecxz
xchg
xor
mov
nop
(bad)
cmp
test
inc
adc
mov
jnp
sub
xor
ret
inc
data16
lahf
dec
xchg
in
aaa
push
(bad)
mov
dec
push
mov
ret
stos
hlt
fisttp
std
jb
(bad)
shl
gs
adc
and
icebp
or
sub
mov
or
push
mov
pop
sti
mov
jae
ss
rol
loop
cli
int
aas
jg
mov
scas
scas
or
pop
(bad)
lea
nop
pop
mov
sub
mov
stc
fstp
lods
pop
aaa
enter
push
sbb
cld
mov
push
stos
push
mov
fld
out
adc
inc
inc
push
dec
loop
shr
and
adc
mov
les
pop
test
adc
cli
ret
repz
cmp
inc
repnz
stos
add
or
out
push
(bad)
movs
fcom
push
lds
cli
jl
cld
dec
adc
add
pop
fcomp
adc
xchg
mov
gs
push
retf
mov
jmp
mov
ret
sahf
inc
cmps
dec
test
and
loopne
adc
push
inc
sub
fwait
xor
pop
inc
and
ret
mov
xor
mov
xor
push
and
sbb
add
pop
int
mov
loop
std
sti
stos
mov
loopne
jnp
adc
inc
in
lock
dec
cmp
retf
retf
cmp
pop
mov
or
push
jb
std
pop
jnp
jg
bound
adc
adc
lds
ins
fbstp
cmp
repz
(bad)
adc
xchg
pop
test
sbb
mov
retf
(bad)
(bad)
les
add
or
jae
retf
lds
ror
xor
ins
pop
(bad)
sti
scas
out
dec
or
xchg
sbb
leave
cmp
retf
fild
push
sti
(bad)
(bad)
xor
dec
cli
adc
jo
iret
ins
inc
pop
add
lock
(bad)
jmp
dec
pop
inc
xor
retf
add
cmp
lods
call
inc
ror
(bad)
mov
iret
pusha
imul
repz
mov
cmp
outs
fnsave
repnz
sub
enter
jbe
dec
or
jae
ss
std
xlat
jno
mov
mov
stc
and
cmp
call
in
repz
cmc
push
xchg
mov
popf
aaa
stos
stos
into
add
in
xor
hlt
xor
addr16
cmp
jae
and
xchg
lock
mov
mov
dec
xchg
add
add
xor
sbb
dec
ror
jge
adc
popf
fld
stc
and
in
fcomi
inc
(bad)
shl
jmp
in
arpl
aas
jge
adc
sbb
add
sub
daa
retf
fldcw
jecxz
inc
jns
scas
out
mov
jmp
dec
lods
sar
push
mov
sub
push
dec
loopne
mov
in
mov
mov
cmps
push
dec
pushf
adc
sar
jae
jmp
ins
add
ret
sub
dec
imul
(bad)
and
dec
or
rcl
ss
hlt
sub
inc
dec
mov
and
cmp
scas
xor
inc
sahf
out
sbb
adc
pop
arpl
daa
sub
sub
fsub
mov
xor
aam
rol
adc
retf
push
pop
fst
cmp
push
mov
(bad)
pop
call
js
pop
dec
out
pop
sub
jns
jb
inc
shl
jb
mov
scas
mov
dec
out
adc
pop
xor
pop
jb
inc
jnp
ret
mov
or
pop
jecxz
add
sub
clc
inc
lock
dec
(bad)
push
stos
gs
sbb
and
fdivr
loop
mov
and
retf
xchg
dec
dec
sub
dec
push
movs
and
mov
daa
imul
xchg
ret
adc
call
add
push
int3
or
sub
daa
cwde
in
(bad)
sahf
fadd
in
jmp
add
cmp
xor
add
ins
into
aad
cmp
lea
imul
loop
push
cmp
push
test
gs
mov
xor
push
and
test
scas
sbb
std
inc
out
sbb
inc
xchg
dec
or
dec
add
sub
xor
ja
in
shr
pop
sub
pushf
sub
ss
mov
xor
mov
mov
aas
mov
cli
sbb
(bad)
movs
dec
cdq
ror
repz
mov
imul
push
fwait
cwde
pop
hlt
push
cmp
inc
sub
jge
push
mov
mov
cmp
fwait
lahf
fiadd
and
call
or
fdivr
push
mov
mov
pushf
mov
push
int3
adc
enter
dec
sbb
add
aas
repz
clc
icebp
cs
dec
stc
lods
inc
ret
mov
imul
mov
or
xchg
jmp
nop
push
lock
stos
les
xor
sti
push
and
mov
push
test
sar
mov
hlt
pop
(bad)
into
jecxz
sahf
sub
or
xor
pop
pop
cmps
cmp
test
outs
or
in
mov
dec
jl
arpl
sti
push
js
neg
jae
int
xor
mov
jne
pusha
dec
leave
loop
idiv
inc
or
stos
mov
inc
add
mov
data16
xchg
mov
stos
cmc
dec
loop
cmp
mov
jnp
addr16
imul
push
es
cmp
bound
and
gs
pop
mov
jae
mov
sbb
std
jl
test
sub
and
das
jmp
ja
pusha
sub
mov
daa
outs
push
adc
(bad)
or
(bad)
and
shl
xchg
fist
std
mov
jnp
call
mov
fs
mov
mov
call
(bad)
sub
jmp
inc
daa
loopne
and
xchg
mov
lods
sub
iret
inc
pop
mov
push
(bad)
pop
aas
mov
dec
ja
mov
push
stos
inc
mov
nop
sub
fld
and
push
sub
or
xchg
ins
mov
mov
inc
call
cmc
adc
lods
jmp
jbe
pop
sub
rcl
push
aas
adc
jae
inc
push
js
push
sti
repnz
push
retf
ret
jnp
or
ret
je
loopne
push
and
dec
cmp
sub
jnp
jmp
adc
mov
arpl
mov
add
jle
dec
std
sbb
into
fptan
jnp
push
scas
push
fwait
mov
shl
ret
addr16
add
ins
fist
retf
ins
pop
inc
jb
pop
loop
out
push
add
mov
mov
push
jae
sbb
les
mov
jmp
imul
pop
pop
xchg
mov
and
mov
mov
push
cmps
gs
push
int
sub
pop
inc
cmp
sbb
mov
sbb
mov
loopne
add
es
mov
pop
sub
mov
fmul
mov
loop
push
fisttp
cmp
test
lock
out
cs
in
inc
int3
fld
jecxz
cwde
movs
fisttp
xor
push
jno
inc
fwait
cli
ds
jp
push
mov
not
in
imul
jo
stos
jnp
pushf
inc
push
or
mov
jmp
aas
stos
fcomp
sub
int3
adc
jecxz
or
ffreep
mov
sub
inc
mov
mov
pop
dec
fwait
add
enter
clc
(bad)
pop
lock
lock
ret
fisubr
jno
mov
dec
retf
jno
pop
ror
xor
rcl
pusha
jbe
adc
push
shr
dec
mov
or
ss
dec
mov
inc
mov
fcmovbe
ss
test
push
dec
test
dec
xor
mov
ror
jecxz
sub
sub
or
jo
sti
bound
stc
outs
movs
repnz
add
nop
shl
(bad)
rcr
test
sub
arpl
ret
pop
sbb
xor
(bad)
ins
mov
movs
cmp
cdq
pop
ficomp
cmps
inc
test
xchg
(bad)
test
push
into
pop
mov
fcomp
arpl
mov
arpl
dec
pop
imul
enter
mov
outs
mov
dec
pop
cmovs
pop
sub
lea
stc
sbb
fdecstp
adc
test
aam
xchg
imul
(bad)
out
retf
jl
rcl
into
mov
xchg
xchg
xor
xor
xchg
sbb
jge
dec
xchg
xchg
lds
enter
(bad)
and
arpl
ds
or
mov
jnp
cld
in
lds
stc
lahf
dec
lods
test
pop
push
sbb
pop
(bad)
les
icebp
stc
sub
test
iret
adc
mov
inc
or
dec
inc
mov
inc
pop
lock
icebp
test
arpl
mul
lds
cli
inc
sti
jb
bound
repz
outs
call
jae
lds
mov
ror
ja
pop
repz
jo
outs
or
add
mov
out
je
add
sub
pop
sub
retf
jp
sub
sbb
and
dec
cmp
pop
ret
lahf
mov
sar
lahf
cmp
mov
movs
or
iret
push
ret
lahf
pop
mov
jg
lds
jg
movs
xor
add
add
add
sti
fstp
stos
outs
ret
jo
aas
jns
shr
jl
pop
neg
sub
cdq
jb
(bad)
retf
xchg
push
out
xchg
icebp
inc
loope
adc
cs
xor
mov
push
ins
mov
dec
data16
and
(bad)
mov
gs
out
cmp
scas
arpl
jno
pop
rcr
push
in
es
push
outs
jbe
pop
pop
pop
and
push
fmul
ins
stos
scas
fistp
sti
popa
pusha
sar
or
ins
stos
call
(bad)
cmp
sub
mov
icebp
leave
adc
mov
std
jecxz
push
cli
ret
mov
xchg
dec
jae
inc
add
and
icebp
push
stos
cli
add
out
(bad)
div
call
mov
xchg
add
pop
mov
mov
sub
xor
fidiv
ss
daa
or
cmp
mov
jmp
(bad)
fisub
repnz
pusha
pop
dec
cmp
jae
mov
clc
paddd
retf
xchg
fimul
push
dec
jb
mov
mov
cmp
call
jae
xchg
and
mov
inc
jnp
arpl
mov
cdq
repnz
inc
xchg
xchg
mov
mov
int
mov
sbb
aam
and
(bad)
fst
mov
mov
push
adc
arpl
rcl
sub
xchg
cmp
retf
add
mov
jnp
mov
(bad)
sub
mov
mov
mov
dec
stos
neg
mov
pop
mov
ret
sbb
pop
(bad)
xor
or
leave
es
leave
(bad)
jle
mov
fwait
jecxz
or
clc
jecxz
lock
rcl
(bad)
jne
aam
push
pop
addr16
fld
imul
fnstcw
in
xchg
add
jmp
jp
xchg
es
imul
or
das
mov
test
push
inc
mov
adc
lock
jo
and
jno
and
jne
rcr
sub
imul
or
pop
pusha
ret
cmp
andps
fwait
and
addr16
or
dec
test
jae
mov
mov
rol
dec
cmps
push
xor
cmp
sub
aas
cld
std
rep
popf
retf
adc
xchg
pop
nop
lahf
pop
xlat
pop
xor
add
mov
bound
jmp
dec
xor
scas
inc
dec
(bad)
popa
xor
pop
push
shr
addr16
test
and
mov
inc
pop
pop
sbb
adc
or
pop
cmc
sbb
pop
pop
std
adc
sub
sbb
jno
xchg
(bad)
adc
sar
xor
dec
mov
arpl
jmp
leave
mov
jmp
pop
jns
xchg
stos
shl
sti
shl
popf
fistp
sub
xchg
pop
and
pop
dec
mov
mov
lahf
xchg
ret
add
xchg
arpl
test
pop
xor
in
dec
dec
icebp
adc
jne
mov
sti
sbb
jnp
loop
and
and
jns
gs
rcr
add
loopne
stos
cmc
sub
imul
xchg
push
std
enter
out
cmp
daa
shl
push
mov
lods
shl
jmp
les
xchg
adc
sub
sti
add
into
scas
icebp
mov
sub
fs
ins
lea
hlt
scas
sbb
stc
aas
sbb
retf
(bad)
dec
sar
enter
sahf
mov
out
mov
arpl
sub
sub
retf
mov
adc
test
test
push
fldcw
sub
cmp
jo
dec
ins
cmp
lahf
fcmovne
fld
xchg
xchg
in
mov
mov
push
adc
movs
popa
retf
inc
and
mov
loope
fadd
mov
jp
mov
adc
in
icebp
xor
pop
mov
lods
xchg
xlat
adc
call
sbb
sub
(bad)
jnp
push
cli
leave
dec
scas
dec
loop
cmp
inc
mov
fist
adc
jns
adc
pop
and
leave
repz
in
cmp
push
xchg
shl
pop
dec
push
test
jmp
popa
push
imul
sar
sub
xor
or
add
test
jae
push
jp
cmp
xchg
push
movs
mov
sbb
jb
popa
pop
bound
cld
sub
repnz
(bad)
mov
loope
xor
jmp
fisttp
fwait
xchg
retf
mov
cmp
psubusw
jg
retf
fwait
or
lock
cmp
dec
das
pop
fld
in
rcl
jmp
sbb
rol
and
das
xchg
pushf
(bad)
xchg
cmp
or
mov
ret
aas
xor
mov
popf
mov
sub
cwde
add
push
add
imul
mov
aaa
test
add
lods
pop
jmp
push
outs
das
into
mov
inc
popa
pushf
mov
ret
xchg
sti
scas
stos
inc
jnp
push
clc
lods
ror
inc
mov
push
nop
repz
fdiv
test
shl
scas
pop
adc
call
push
mov
jmp
movs
in
lds
test
xchg
mov
jmp
or
sbb
mov
sbb
mov
int3
bound
mov
sub
popa
ins
and
mov
imul
mov
rcl
jmp
int
sbb
pop
or
out
sub
jl
cmp
and
stos
leave
pop
sub
seto
dec
pop
rcl
aaa
mov
sahf
in
lea
lock
pop
jb
jl
jmp
gs
(bad)
int
mov
sub
outs
sahf
iret
fcomi
mov
rcl
cli
jo
inc
dec
jb
gs
into
mov
ffree
(bad)
ins
shr
sar
cmp
xor
fiadd
mov
test
sub
jne
rcr
sbb
loop
fbld
fwait
pop
adc
and
aad
inc
pop
pushw
stos
mov
push
jg
or
mov
adc
add
cmc
push
int
pop
mov
mov
mul
xrelease
movs
fsubr
loopne
aad
xor
ins
(bad)
outs
or
cwde
inc
mov
push
repz
mov
xor
sub
aad
dec
xor
das
sbb
cli
cdq
mov
add
and
add
add
daa
test
stc
sbb
mov
outs
dec
pop
lahf
loopne
cli
jmp
jae
push
cmp
pop
test
or
sbb
adc
idiv
cmp
fild
aad
je
or
cmp
std
(bad)
in
pop
jo
test
bound
jmp
rcr
sbb
cmp
push
and
dec
shr
and
sub
cmps
outs
dec
cmps
mov
out
sbb
mov
sbb
inc
add
les
jle
loop
push
mov
popa
jbe
xchg
xchg
mov
call
(bad)
test
iret
xor
mov
jo
inc
fs
pop
ds
shl
mov
lock
imul
or
mov
rol
add
sub
data16
push
sbb
jo
test
ret
or
xchg
js
(bad)
mov
inc
or
imul
dec
arpl
bound
or
cmps
sbb
(bad)
nop
stos
push
dec
xor
sar
sbb
fstp
(bad)
retf
pusha
call
add
mov
sar
dec
jnp
pop
stos
sub
clc
cwde
fstp
in
(bad)
lds
push
dec
add
and
jae
repnz
lock
jp
pop
lea
out
jae
cli
repz
sub
inc
xor
pop
jecxz
pop
bound
mov
test
imul
mov
mov
pop
lods
int
test
jecxz
and
push
les
mov
sar
jnp
repz
arpl
repz
pop
mov
and
aad
arpl
pushf
mov
mov
mov
add
loopne
xchg
(bad)
adc
jnp
cdq
xor
dec
dec
dec
mov
inc
stc
loop
fwait
es
in
mov
inc
sbb
inc
lods
xchg
push
adc
and
jmp
jne
in
lds
stos
aaa
lods
adc
push
jmp
mov
loop
pop
sub
mov
mov
ret
jecxz
jmp
ret
jnp
fsub
ret
xor
xor
rol
stc
or
add
xlat
cs
jmp
scas
push
sbb
pop
cld
jne
sbb
shld
lods
rcl
sahf
std
hlt
cmps
call
fsubp
mov
xor
hlt
enter
inc
in
and
push
push
add
call
arpl
cmp
dec
or
cmc
rol
fs
mov
push
mov
mov
sub
ja
pop
or
jnp
fsubr
xor
jecxz
jge
xchg
ror
mov
mov
repnz
push
mov
dec
xor
and
jns
in
lods
mov
lahf
sbb
add
mov
add
push
mov
out
jae
jge
rol
ror
jne
mov
or
cmps
repz
into
(bad)
(bad)
in
jbe
ret
stc
nop
push
mov
out
jno
pop
or
(bad)
fs
cmp
repz
aad
ss
pop
loop
adc
xor
movs
fs
leave
fisttp
cmp
pop
sbb
and
xchg
icebp
xchg
xchg
mov
cmc
ds
movs
cli
out
arpl
xchg
and
scas
jecxz
inc
movs
jl
(bad)
stos
sahf
xchg
add
mov
xchg
imul
jbe
inc
lods
stos
dec
in
imul
add
icebp
cmp
cmps
push
push
cmp
das
bound
adc
div
int
mov
push
scas
mov
mov
out
jne
mov
pop
pop
push
outs
pop
cmp
in
mov
xchg
mov
jp
clc
push
int3
push
loope
push
mov
dec
and
rcr
jno
outs
pusha
or
sub
mov
and
icebp
sub
add
sub
sbb
or
fwait
mov
test
mov
(bad)
loope
cmp
mov
pop
add
popf
jbe
pusha
pop
push
aas
push
movs
ror
push
cmps
fimul
mov
mov
dec
mov
push
loop
fs
push
arpl
add
les
cmp
in
cli
xchg
imul
pop
addr16
sbb
dec
xchg
out
inc
pop
mov
in
call
sbb
repnz
or
aaa
push
cmc
les
inc
mov
adc
inc
fild
jmp
jmp
and
mov
je
pop
add
inc
mov
jp
push
pop
xor
lds
ja
inc
int3
rcr
das
mov
add
pop
loopne
js
(bad)
cmp
mov
push
xchg
jl
sbb
jmp
add
and
and
jp
jae
adc
jle
pop
jo
shr
xchg
and
ret
push
inc
(bad)
pusha
inc
int
cdq
add
add
sbb
and
retf
push
and
(bad)
(bad)
mov
inc
test
or
pop
or
mov
sbb
pop
cmp
xor
xor
and
neg
pusha
aad
dec
jbe
ins
mov
adc
xchg
mov
enter
(bad)
(bad)
shr
retf
outs
jmp
ror
add
mov
repz
xor
ret
mov
fs
push
dec
and
dec
sub
add
sbb
jmp
inc
jnp
mov
push
(bad)
adc
ret
xchg
lahf
jae
mov
jnp
sub
add
xor
sbb
imul
mov
addr16
xchg
in
cmps
mov
mov
or
(bad)
mov
xchg
inc
stos
in
or
rol
sti
xor
arpl
dec
sbb
pop
and
xchg
popf
repz
adc
retf
xchg
in
xor
out
jmp
repz
cmc
mov
mov
rol
jmp
cmc
and
xor
retf
enterw
dec
and
je
dec
dec
cdq
xchg
loopne
mov
xchg
mov
sub
inc
cmp
push
in
repnz
sbb
push
dec
out
add
xchg
dec
dec
dec
cdq
dec
inc
jp
jnp
lea
jae
fcmovnbe
addr16
call
fsubr
stos
(bad)
mov
cwde
ret
mov
pop
xchg
and
loop
cmp
int
or
pusha
loope
mov
or
or
shl
mov
pusha
add
jmp
repz
mov
mov
pop
push
jmp
in
and
xchg
popf
xor
and
sub
das
jae
out
cmp
or
test
pop
jp
out
mov
(bad)
es
bound
push
enter
mov
sub
jnp
dec
add
fist
jp
int3
jbe
cmp
iret
adc
cld
inc
jnp
jmp
ds
test
(bad)
aaa
movs
mov
mov
rcr
mov
sub
int3
and
mov
mov
out
mov
push
cs
dec
xchg
adc
pop
ds
xchg
mov
iret
mov
ret
aaa
imul
sub
loopne
mov
leave
sub
or
pop
rol
add
(bad)
jne
mov
xchg
or
popf
fwait
dec
cmp
jmp
inc
(bad)
iret
rcl
imul
bound
mov
movs
(bad)
repz
repnz
jmp
xchg
scas
loope
aas
jmp
test
xor
das
cmc
das
push
xor
fst
mov
imul
out
pop
(bad)
jnp
jnp
dec
imul
js
stos
jb
mov
int
fdiv
ror
imul
xor
int3
xlat
push
sahf
ret
push
lods
loop
out
push
test
shl
ret
leave
sub
in
cpuid
push
or
loopne
ret
fidiv
push
cld
dec
push
sbb
and
dec
lock
iret
cmp
stos
pop
push
sub
sti
leave
pop
or
mov
add
xor
ins
cdq
int
dec
and
mov
inc
ret
cmp
inc
sahf
inc
ins
(bad)
in
jbe
idiv
inc
cmp
push
es
and
das
fldenv
ret
cdq
sub
push
push
dec
in
test
sub
retf
jb
arpl
dec
lock
cmps
stos
mov
std
imul
mov
icebp
sti
(bad)
or
pop
mov
mov
push
xchg
cmp
out
and
shl
or
and
dec
inc
bound
ret
aam
jae
icebp
aad
mov
adc
sti
dec
adc
gs
ja
es
lods
sahf
adc
cwde
push
sti
test
ss
ret
inc
cmp
adc
fs
jne
stos
call
(bad)
cmps
and
into
xchg
(bad)
mov
jnp
mov
rcl
int
jnp
outs
shr
fcmovnu
retf
dec
xchg
cwde
mov
out
imul
dec
pop
ja
addr16
outs
cli
(bad)
stos
push
sub
mov
mov
(bad)
xor
leave
repz
cmp
ret
arpl
push
mov
jnp
jle
push
(bad)
jl
pushf
lea
dec
bound
push
mov
lods
jns
call
mov
repz
aad
les
jle
and
loop
jmp
lods
fwait
mov
and
xor
mov
hlt
lds
sti
iret
or
ror
dec
repz
and
xor
iret
out
(bad)
iret
fistp
pop
cs
cmp
out
dec
adc
bound
and
cs
out
ins
rcr
mov
inc
cmp
ret
mov
inc
jge
mov
lea
ret
retf
repz
rol
pop
jmp
pop
jmp
es
push
lods
cmp
push
mov
mov
xchg
jbe
or
jbe
sbb
sbb
int3
mov
in
xchg
cmp
and
inc
jb
retf
in
imul
pop
rcl
aaa
pushf
mov
push
arpl
inc
out
mov
popf
pop
imul
jns
out
and
mov
mov
sub
test
push
and
jg
mov
test
add
pop
mov
ins
sar
jae
push
stos
test
add
adc
test
retf
fwait
push
jmp
add
adc
sub
cmp
sbb
dec
mov
and
out
or
mov
div
jno
inc
pop
aad
cmp
xchg
or
fwait
cld
cmp
mov
rcl
sub
mov
xor
(bad)
lahf
mov
adc
sahf
xor
out
(bad)
push
or
ror
movs
dec
repz
dec
inc
addr16
push
jmp
add
(bad)
aad
fcom
cmps
adc
scas
sbb
adc
sbb
mov
mov
repnz
aas
or
ins
std
mov
cmp
lock
jge
pop
push
js
mov
push
fcomp
je
cmp
scas
test
int
movs
sub
pusha
outs
ss
and
push
shr
adc
(bad)
shl
inc
adc
dec
xchg
pop
in
loopne
push
mov
popf
mov
mov
fisttp
nop
mov
clc
mov
imul
or
mov
pop
retf
pop
hlt
dec
sahf
push
std
int
nop
cmps
into
scas
xchg
sbb
lock
jp
jmp
and
or
ret
mov
aam
or
rol
jae
rcr
aas
lock
mov
scas
sbb
and
mov
(bad)
and
sub
xchg
sbb
fisttp
(bad)
jno
fdiv
addr16
xchg
add
stos
fwait
adc
ret
in
jnp
mov
add
sub
nop
jb
sub
push
loop
fcomip
dec
(bad)
aam
and
popf
jb
lds
fidiv
and
adc
jecxz
mov
adc
into
mov
push
enter
mov
sti
test
mov
add
icebp
and
ficomp
arpl
mov
or
in
fs
sbb
jmp
retf
jecxz
inc
(bad)
pop
ret
ds
cmp
out
js
fwait
les
mov
dec
addr16
xlat
jl
and
enter
hlt
mov
mov
jle
cli
xchg
cmp
jae
cmc
pop
(bad)
outs
mov
add
gs
retf
int
jmp
mov
push
retf
mov
inc
stos
mov
add
sbb
sti
iret
adc
cmp
sbb
fcomp
pop
adc
aam
adc
out
sbb
test
mov
test
adc
(bad)
out
mov
push
jae
out
xchg
outs
lods
mov
mov
iret
xor
inc
push
jl
or
loop
add
fbstp
les
jecxz
adc
inc
adc
call
adc
mov
cdq
sub
shl
test
sub
adc
rol
scas
adc
rcr
sbb
xchg
adc
add
dec
lods
imul
mov
jmp
inc
cmps
adc
mov
aad
repnz
mov
pop
jecxz
pop
add
mov
adc
inc
into
jbe
push
push
ret
loop
cmp
dec
movs
lahf
and
mov
xchg
stos
pop
stos
cwde
outs
adc
pop
inc
jl
ja
das
arpl
shl
add
std
push
push
test
fimul
(bad)
es
pop
jo
lods
ja
add
cmp
(bad)
aad
cmp
xor
je
stos
sahf
sar
add
and
outs
or
mov
pop
aam
(bad)
pop
xor
test
ss
stc
jge
mov
and
push
(bad)
movs
jp
mov
mov
stos
fs
adc
ins
jb
aaa
nop
aaa
push
dec
mov
sbb
fwait
jecxz
mov
lds
and
fbstp
sti
in
(bad)
imul
rcl
daa
cmps
xor
lock
add
stos
and
test
leave
(bad)
dec
ins
movs
and
pop
pushf
in
(bad)
cli
or
add
retf
fist
or
sub
in
inc
adc
inc
aaa
pop
es
mov
mov
jb
ror
shr
sub
enter
arpl
pop
(bad)
mov
or
xchg
out
inc
clc
mov
lock
jmp
push
jl
dec
xor
cmc
loope
mov
mov
clc
jnp
xchg
rol
daa
adc
mov
hlt
push
adc
leave
daa
cdq
stos
xor
jb
jecxz
int
mov
loopne
dec
cmp
adc
rcr
fild
daa
add
jns
movs
in
mov
std
mov
pop
addr16
jbe
ret
dec
ret
jno
call
lock
cmp
sbb
cdq
dec
rcr
sti
inc
test
push
ins
aaa
adc
int
(bad)
cmp
stos
adc
mov
gs
mov
retf
dec
data16
(bad)
pop
pop
push
push
add
sbb
loope
mov
xor
push
lods
xchg
mov
xchg
pop
jne
mov
pop
(bad)
push
cmp
xor
and
xchg
xchg
jmp
jmp
pop
sbb
or
or
repz
sub
xchg
dec
sbb
sbb
or
jecxz
pop
inc
es
dec
into
imul
imul
in
pushf
xor
adc
mov
fisttp
enter
hlt
pop
out
push
repz
add
iret
mov
out
push
xchg
out
leave
pusha
pop
ss
ja
mov
sar
sub
imul
or
jno
je
pop
jnp
push
dec
ja
mov
sub
cmp
retf
dec
mov
ins
xor
or
ins
sahf
pop
aam
fdivr
(bad)
lock
lock
or
push
mov
fisttp
mov
jns
xchg
jo
daa
test
jg
mov
aas
repnz
dec
sti
cmp
inc
retf
and
jnp
mov
sbb
and
pop
xchg
icebp
bound
test
in
mov
push
jnp
(bad)
or
stos
into
add
xchg
dec
cmps
in
cwde
fisttp
jge
(bad)
lock
fcmovne
addr16
ret
dec
cmp
inc
fnstcw
fisubr
sti
cmc
pop
in
cmps
aaa
mov
sbb
push
jns
sbb
fisubr
stos
mov
sub
mov
push
xor
aas
sbb
jnp
dec
sbb
push
hlt
add
loopne
and
rcr
sar
in
pop
adc
adc
push
sbb
sbb
(bad)
pop
hlt
stc
mov
mov
xor
out
cdq
sti
push
movs
gs
mov
lods
jae
mov
push
push
and
inc
dec
movs
cmp
cmp
jns
dec
add
sbb
(bad)
sti
shl
je
mov
jp
xor
fcom
mov
fcomip
cwde
and
stc
push
shl
dec
mov
jb
mov
add
int
push
pop
xchg
xchg
lea
repnz
call
mov
dec
repz
rcr
ror
frstor
xchg
call
rcl
push
and
int3
mov
add
push
mov
and
sbb
mov
push
stos
cs
movs
jb
popa
sbb
pop
push
mov
js
xchg
lods
lea
mov
in
xor
out
and
and
addr16
xchg
enter
aas
jno
mov
jae
in
mov
cmps
add
test
(bad)
aad
pop
ja
ret
gs
loop
les
xchg
sub
dec
fadd
psadbw
sti
bound
out
dec
ss
outs
push
fisttp
cmp
inc
or
retf
add
xchg
and
scas
aad
push
and
fldcw
je
out
mov
cmc
popf
out
push
jecxz
cdq
(bad)
retf
push
jl
jg
jmp
es
mov
xchg
inc
sbb
(bad)
jns
repz
jmp
das
lods
repnz
dec
xor
and
add
pop
fwait
inc
adc
jmp
nop
out
dec
add
and
xor
repnz
or
fcomi
jae
retf
push
mov
jns
xchg
dec
or
loop
pop
(bad)
xchg
cs
pop
stos
or
adc
sbb
mov
pop
mov
pop
push
es
xor
push
sub
outs
test
jno
mov
jmp
and
mov
cmc
leave
out
xor
or
(bad)
test
jl
fs
mov
xor
ja
and
mov
mov
jmp
sub
and
sub
ret
add
ret
rcl
outs
mov
fcmovu
lahf
clc
xchg
aas
jmp
fs
jge
xor
cmp
jge
dec
sbb
jp
mov
mov
add
mov
movsx
push
in
pop
jnp
mov
ret
cmp
xchg
mov
sub
rol
mov
(bad)
out
xchg
lds
cmps
stos
aas
xchg
fldcw
mov
and
xchg
stc
cmps
fs
scas
mov
sbb
outs
fld
or
xchg
icebp
pop
in
test
sti
cmp
imul
aaa
adc
mov
dec
push
push
push
in
mov
and
ins
sub
dec
loop
xchg
dec
sbb
outs
lahf
mov
jae
push
push
xlat
mov
or
xchg
aam
retf
fisub
pop
mov
pop
scas
arpl
add
pop
sub
mov
or
fst
inc
jmp
clc
leave
sub
pop
out
ja
pop
inc
in
mov
xchg
or
sahf
out
aad
pop
ins
push
ficom
fcom
xor
(bad)
scas
loopne
mov
and
cdq
addr16
push
jae
sar
xor
mov
and
sub
pop
jnp
mov
sbb
(bad)
adc
jb
outs
dec
test
jo
(bad)
pop
dec
stos
pushf
push
enter
pop
out
cmps
push
jmp
mov
movs
ret
ror
stos
add
mov
mov
aas
(bad)
or
jns
(bad)
in
shl
rcr
xor
mov
jo
adc
inc
mov
mov
push
loop
xchg
out
pop
dec
lds
push
mov
repnz
push
sbb
jmp
cli
or
pop
dec
or
inc
pop
add
fistp
nop
(bad)
fldcw
loope
(bad)
stos
mov
pop
lds
jmp
mov
js
stos
mov
mov
dec
fs
popa
pop
shr
aaa
cmp
push
cmps
dec
(bad)
and
shr
cmp
xor
sub
jg
cmp
ja
mov
xchg
or
test
int3
mov
xchg
icebp
cmp
adc
popa
jns
dec
ret
mov
push
scas
call
sbb
add
pop
ret
xchg
sti
xor
rol
push
arpl
arpl
cmp
mov
(bad)
sub
call
outs
xor
sti
jg
(bad)
mov
jecxz
(bad)
jecxz
dec
mov
(bad)
adc
add
ds
mov
cld
not
cmps
xchg
dec
cmps
jno
movs
arpl
jae
arpl
(bad)
mov
mov
repz
call
jg
adc
adc
(bad)
sbb
popf
lahf
hlt
push
and
push
imul
pop
xchg
fild
out
dec
push
data16
jmp
mov
lods
push
cmp
adc
mov
push
(bad)
repnz
stos
movs
test
push
(bad)
sub
cmp
push
xor
cdq
adc
or
add
push
xchg
xchg
mov
out
xchg
fild
jmp
add
pop
adc
or
sub
xchg
leave
push
sar
mov
mov
repz
fwait
jo
scas
or
inc
pop
jg
ret
div
adc
inc
sub
add
ss
xlat
popa
test
xchg
mov
das
dec
(bad)
push
cmp
mov
loopne
es
(bad)
cmps
call
rcr
dec
and
inc
call
push
cmp
mov
xor
xchg
pusha
sbb
dec
stc
jg
in
ffree
loopne
jne
(bad)
sbb
jge
cmp
and
cwde
push
jne
jae
fld
xor
xchg
dec
xor
movlps
loopne
pop
jecxz
in
xchg
das
add
sbb
ins
sbb
(bad)
or
repz
xchg
aas
arpl
cmps
inc
mov
js
stos
mov
mov
xchg
imul
cmovae
pop
out
into
inc
inc
xchg
jmp
cmp
push
mov
and
sar
cmp
in
test
repz
out
mov
xchg
push
ret
or
mov
lock
xor
dec
aam
vmovddup
jecxz
cld
(bad)
ja
pop
sub
xor
push
ja
mov
mov
add
clc
mov
mov
ds
inc
jnp
jle
sbb
mov
and
nop
push
imul
std
cmp
mov
jno
push
aaa
(bad)
xchg
(bad)
cli
xlat
fnstsw
adc
sahf
cmp
ret
pop
outs
pop
mov
ins
sub
inc
fld
scas
pop
lea
add
mov
mov
in
call
fisubr
jmp
pop
rol
cmp
int3
shr
jecxz
xchg
nop
jnp
repz
ret
fwait
mov
adc
inc
xor
push
out
xchg
into
and
or
push
mov
(bad)
inc
xor
xchg
aas
mov
dec
push
mov
jb
cmp
pushf
test
(bad)
mov
call
jo
cmp
(bad)
bnd
cmp
mov
lds
fwait
and
pop
xor
sti
aas
ins
(bad)
mov
sub
cmps
push
push
mov
divps
mov
mov
pop
bound
add
dec
jp
sbb
mov
push
mov
bound
cmp
adc
and
dec
mov
pop
sbb
pop
ror
sar
xor
and
pop
add
ins
lea
fild
jb
icebp
sar
mov
ret
cmp
mov
pop
inc
lahf
pop
div
ror
sub
jbe
fbstp
mov
dec
push
shr
xor
loopne
push
ins
inc
xlat
dec
dec
bound
imul
mov
loope
dec
fld
not
int3
jns
js
into
sti
int
add
sbb
leave
or
jne
adc
mov
cmp
fstp
jmp
loop
test
pop
popa
pop
add
das
jmp
test
adc
lock
push
sbb
arpl
into
push
mov
call
xchg
or
jo
sahf
inc
cmp
add
sti
dec
push
adc
sbb
repz
sub
icebp
dec
sub
stc
mov
sbb
cmps
inc
ss
add
(bad)
in
(bad)
mov
mov
dec
cmp
xor
das
retf
xor
dec
or
in
inc
dec
mov
test
test
pop
inc
xor
mov
out
pusha
mov
cs
inc
push
fild
jno
inc
pop
xlat
clc
out
mov
jnp
cmp
cs
push
xchg
adc
sub
sbb
sub
loope
adc
push
fisub
ins
jae
push
dec
(bad)
pop
push
mov
xor
sbb
mov
(bad)
(bad)
nop
sti
sbb
sub
cmc
fwait
xor
or
cmp
or
mov
sub
push
mov
inc
shl
loopne
mov
or
sbb
mov
cmp
mov
loop
inc
pop
push
lds
ret
xchg
xchg
cld
addr16
add
je
dec
gs
or
imul
les
cli
mov
jae
jecxz
inc
jg
push
xchg
mov
inc
in
jmp
jg
or
inc
sar
arpl
stos
ret
mov
(bad)
sbb
imul
sti
jbe
lock
popa
and
mov
xchg
stos
mov
enter
or
inc
loop
jae
jle
shl
jb
mov
sbb
mov
xchg
cmp
cmp
xor
sub
into
call
adc
mov
shl
or
or
test
mov
shl
es
jns
test
add
stos
inc
or
outs
mov
repz
pop
outs
sti
fstp
inc
daa
std
imul
dec
adc
and
xchg
mov
jae
lea
(bad)
test
xchg
pop
adc
mov
bound
pop
push
es
jmp
out
mov
sub
imul
push
idiv
sbb
jbe
in
cdq
loope
xchg
sbb
mov
push
jne
in
repz
pop
loope
mul
ins
fwait
fwait
xchg
repz
dec
fwait
test
ret
pop
jae
data16
sbb
fwait
popw
or
mov
mov
aas
repz
mov
ja
dec
cmp
mov
push
jmp
push
jecxz
iret
jle
xchg
das
xchg
pop
test
out
or
sub
jnp
(bad)
mov
inc
xchg
faddp
fwait
adc
and
jo
mov
jnp
add
sbb
fstp
repnz
push
rol
ja
loop
sub
xchg
(bad)
xor
(bad)
test
repz
pop
ds
jnp
pop
shl
mov
lahf
jnp
out
or
pop
pop
das
iret
jl
mov
xchg
ins
repz
je
ds
aas
js
call
ret
xchg
hlt
in
dec
(bad)
mov
and
pusha
loop
sub
push
ins
inc
and
push
hlt
aas
sti
idiv
push
sbb
or
out
add
bound
imul
ret
cmp
enter
scas
cmp
dec
and
mov
mov
orps
xchg
fist
xchg
(bad)
popa
pop
jnp
dec
add
(bad)
push
sub
jge
ja
lods
xlat
daa
lds
inc
inc
sub
adc
repnz
mov
cli
dec
ins
mov
or
or
sub
mov
aad
call
mov
adc
cmps
ja
sbb
cmp
rcr
aam
fimul
mov
outs
bnd
dec
jo
push
and
jne
jge
iret
clc
push
stos
repz
shl
xor
xor
jnp
or
push
dec
adc
adc
cmp
ret
ror
neg
jo
imul
jo
outs
xchg
jmp
out
mov
mov
jmp
dec
jge
mov
inc
push
dec
popf
ds
xchg
lods
cmp
ds
sbb
mov
pavgb
mov
dec
lds
aaa
ss
inc
and
cmc
stos
xor
mov
icebp
aaa
imul
push
imul
lock
bound
aam
fild
fidivr
mov
push
sub
jno
jno
pop
fistp
xchg
cdq
out
leave
imul
push
(bad)
mov
call
cmps
(bad)
add
lea
jmp
xchg
cmp
call
ret
dec
ret
sub
and
xchg
mov
fld
and
or
mov
or
mov
dec
inc
imul
jae
repz
out
add
jb
or
jns
or
and
js
push
sbb
lds
and
ja
adc
mov
dec
jnp
add
mov
dec
stos
mov
and
icebp
mov
mov
xor
data16
fdivr
push
adc
add
pusha
jbe
jnp
mov
pop
stc
mov
jns
mov
add
lods
test
xchg
loopne
dec
xor
pop
add
outs
jmp
cmp
imul
mov
push
jbe
das
adc
adc
inc
nop
lea
xor
jae
movs
cmps
dec
repz
cmp
sti
xor
cmp
add
sti
push
sub
fisttp
adc
or
dec
out
jl
and
sbb
push
(bad)
and
cmp
mov
push
and
adc
add
push
fist
mov
dec
push
push
scas
(bad)
adc
jmp
call
shl
xchg
pop
fistp
cli
jb
push
aas
adc
mov
sub
fcom
dec
inc
ret
push
ins
int
mov
sbb
sar
mov
hlt
ret
xlat
std
repz
test
cmp
push
dec
cmps
push
cmp
int3
add
xor
xchg
pop
adc
rcr
jecxz
push
aam
loopne
sub
aad
xlat
out
hlt
hlt
dec
aad
jmp
mov
adc
inc
ret
mov
adc
dec
mov
push
fcom
mov
test
data16
inc
das
retf
mov
and
and
mov
aam
(bad)
ja
lds
mov
dec
outs
jae
push
dec
repz
mov
mov
jmp
cmp
(bad)
inc
mov
imul
mov
mov
es
cmp
fcmovu
je
mov
mov
push
mov
(bad)
cmp
jle
das
inc
mov
mov
(bad)
lds
xor
or
cmps
(bad)
call
push
and
mov
fs
arpl
inc
sub
repnz
mov
test
jnp
lahf
fidiv
mov
pop
add
cmc
cmp
mov
pop
mov
repz
mov
sti
push
stos
ret
mov
xchg
or
mov
jecxz
stos
jae
cdq
mov
repz
bound
pop
jo
fidiv
mov
scas
sub
mov
xchg
pusha
push
mov
gs
jl
std
xor
adc
ficom
add
pop
pushf
mov
mov
pop
pop
ret
cmp
or
ja
adc
cmps
jns
addr16
mov
xchg
lods
sbb
sub
movs
ds
and
sub
dec
iret
loop
repnz
jmp
jb
mov
ror
cmp
and
jnp
arpl
add
retf
fdivr
scas
mov
scas
popf
mov
dec
sub
ret
mov
arpl
mov
cmps
mov
jle
mov
mov
test
int
jmp
scas
cli
mov
nop
(bad)
ja
mov
daa
icebp
dec
(bad)
xchg
jp
test
daa
idiv
add
pop
lods
cmp
movs
fist
out
xlat
xchg
fsubr
and
adc
bound
ds
cs
sub
fsubr
test
bound
dec
xor
fwait
outs
ret
ja
addr16
leave
push
jecxz
xlat
push
or
or
xchg
cmp
adc
or
inc
fidiv
push
div
sbb
xchg
call
inc
jae
sbb
movs
shl
add
cdq
imul
enter
cwde
mov
add
shl
or
sub
pop
and
mov
pop
add
xor
and
arpl
(bad)
xchg
xchg
lods
sar
repz
mov
adc
lahf
test
xchg
fwait
add
(bad)
mov
mov
pop
(bad)
mov
ins
xchg
daa
xor
pop
and
sbb
adc
push
mov
sub
jae
arpl
pop
jb
or
xchg
xchg
hlt
mov
xor
jns
pop
fisttp
lea
mov
xor
sbb
scas
js
jg
je
repz
push
ds
or
call
push
dec
pusha
mov
lds
xor
xor
lds
mov
dec
stos
jp
push
call
and
imul
lahf
or
in
ds
inc
and
fdiv
ss
imul
ins
jle
movs
xchg
or
(bad)
into
or
xchg
mov
sub
ss
lahf
and
push
push
ja
xchg
out
xchg
mov
xchg
push
bound
push
imul
push
xchg
movs
stos
out
xor
mov
into
scas
inc
sahf
dec
push
and
imul
out
mov
jno
in
dec
repnz
fwait
popf
mov
mov
pop
scas
mov
push
or
jo
mov
cmps
and
icebp
je
outs
cmp
imul
push
and
jg
mov
shr
inc
outs
jae
adc
idiv
jae
inc
shl
inc
enter
xor
fwait
xor
(bad)
stc
push
jecxz
adc
imul
xchg
movs
xor
cwde
ss
pushf
adc
push
cs
mov
cmp
xor
jmp
xchg
mov
push
lods
into
mov
addr16
mov
jbe
bound
jb
mov
lods
inc
into
dec
into
cmps
pop
sti
fwait
jae
pop
mov
rcl
fcomp
mov
xchg
out
and
ins
imul
lds
das
cmp
ja
fucomp
dec
and
mov
or
and
push
(bad)
jg
lahf
addr16
cs
retf
inc
aam
push
retf
fcom
out
sti
lea
je
cli
in
sahf
sub
dec
das
aaa
imul
nop
aam
xchg
es
mov
lds
xchg
cli
movs
jle
and
and
sbb
xor
and
sub
gs
cmps
out
sti
fwait
xchg
fwait
pop
sub
sbb
ror
cs
push
es
hlt
retf
push
push
sub
sub
enter
les
(bad)
outs
test
gs
jno
popa
(bad)
icebp
fninit
xor
int3
mov
xchg
call
mov
jne
jae
and
mov
jge
mov
mov
pop
in
adc
inc
mov
lods
cmps
frstor
push
retf
xchg
push
xor
sbb
ret
arpl
retf
clc
pushf
out
sbb
jmp
add
cmp
and
(bad)
xchg
jp
pop
int
arpl
xchg
imul
xlat
leave
inc
mov
leave
cmps
psubsb
pop
push
push
mov
retf
cmps
xchg
neg
xor
mov
sti
xchg
popa
in
pop
pop
retf
mul
cdq
dec
(bad)
xrelease
call
adc
xor
and
sbb
sub
mov
or
pushf
and
icebp
arpl
dec
loopne
arpl
pop
mov
cld
addr16
lods
sub
retf
jge
fisub
sub
jne
xchg
sbb
xchg
ud2
es
out
icebp
addr16
arpl
push
pop
movd
addr16
cmps
mov
sbb
cmp
sub
ja
dec
add
xor
pop
rep
in
sbb
xchg
cmps
arpl
data16
int
add
(bad)
fcmove
fwait
pop
aad
inc
cmp
punpckldq
mov
xor
jmp
rcr
outs
cmps
mov
sub
fwait
mov
or
and
fbstp
outs
stc
retf
les
mov
aam
mov
ins
jmp
shl
jns
ret
inc
mov
das
addr16
jb
cs
inc
es
sahf
imul
and
xor
jecxz
repz
push
mov
mov
bound
rcr
std
xchg
add
ja
ins
push
(bad)
nop
or
sub
mov
call
call
sbb
mov
sbb
dec
pusha
jns
into
pop
xchg
in
mov
cld
mov
mov
sahf
fwait
add
jp
push
or
pop
ret
push
sub
loope
aad
leave
or
jp
xchg
enter
and
into
cs
xchg
xchg
jl
sub
call
push
mov
aaa
call
ja
(bad)
and
sti
nop
dec
pop
push
scas
lahf
rcl
and
jnp
(bad)
nop
adc
outs
or
sub
cdq
data16
xchg
sti
(bad)
cld
push
mov
dec
pop
enter
and
pusha
cmp
jl
jl
mov
not
lods
mov
out
push
fdiv
dec
inc
mov
xlat
fs
arpl
retf
jmp
sub
(bad)
sub
cmp
adc
(bad)
pushf
fisubr
xchg
dec
cs
or
ret
(bad)
call
push
les
retf
adc
ror
add
push
mov
inc
xor
cmp
fadd
(bad)
adc
mov
pop
sub
inc
gs
adc
(bad)
sti
cmps
call
iret
mov
xlat
xchg
push
imul
aaa
push
loop
add
stos
mov
stc
lock
adc
(bad)
mov
jmp
stos
mov
in
(bad)
pop
add
push
neg
dec
inc
or
test
mov
mov
or
imul
ja
jno
push
add
or
ret
pop
loopne
(bad)
dec
enter
out
ret
adc
call
(bad)
(bad)
sbb
sub
inc
add
leave
cmp
add
or
retf
out
and
imul
mov
xchg
push
and
lds
jne
pusha
lods
and
push
in
sub
jecxz
je
xchg
or
sbb
xchg
xchg
ret
and
push
fwait
(bad)
(bad)
sar
pop
cmp
ret
xor
neg
sbb
sahf
repnz
test
cli
ror
or
xchg
dec
mov
(bad)
out
lds
push
mov
shr
aam
pop
sbb
dec
ret
xor
adc
les
mov
call
dec
pop
jl
push
or
cmps
xor
icebp
mov
pop
pop
gs
addr16
sub
mov
out
pop
loope
pop
lahf
fistp
xchg
cmp
mov
test
push
jmp
cmp
retf
into
jecxz
jecxz
movs
pop
in
sar
jbe
mov
in
xchg
sbb
pop
(bad)
push
or
xor
and
test
cmp
call
retf
sbb
ja
inc
lods
push
repz
imul
scas
retf
dec
jmp
daa
lahf
sub
call
pop
ret
inc
fstp
sti
push
mov
mov
sub
mov
repz
(bad)
icebp
adc
xor
mov
aad
popa
cmp
push
jae
push
jecxz
popa
imul
mov
push
inc
xor
addr16
xchg
sti
pop
lods
into
push
das
test
fistp
mov
lds
push
add
sub
xchg
sbb
mov
fsubp
jmp
push
mov
xor
test
push
mov
repnz
shl
jecxz
xchg
es
jae
scas
sbb
inc
(bad)
sbb
pop
pop
aaa
inc
mov
rol
mov
mov
mov
data16
xchg
stos
adc
ds
repnz
sub
cmps
push
mov
or
xchg
jne
(bad)
mov
jmp
push
cwde
shr
das
xchg
mov
mov
push
sub
mov
lahf
fiadd
cwde
and
xchg
push
dec
or
popf
es
xor
or
in
xor
hlt
jg
mov
push
push
mov
mov
jnp
mov
sub
bound
movs
xor
mov
jp
cmp
rcr
push
jecxz
or
out
aaa
loopne
out
mov
lahf
pop
ret
data16
or
outs
push
push
push
inc
or
jl
or
push
cmps
cdq
or
ficom
and
sub
or
jmp
xchg
(bad)
call
dec
xchg
mov
jne
mov
xor
or
adc
dec
mov
rcr
sahf
mov
retf
push
jns
or
lea
push
cmp
inc
push
push
push
repnz
xchg
sbb
in
pop
loop
jecxz
shl
push
jg
inc
mov
repz
into
rcl
inc
cmp
clc
retf
mov
adc
fisttp
imul
inc
lds
mov
dec
ret
idiv
dec
push
pop
push
stos
iret
mov
fsub
mov
inc
sti
jg
jnp
jl
fwait
cmp
push
outs
and
ss
das
repnz
pop
mov
icebp
inc
cmp
into
dec
mov
rcr
sub
dec
cmp
addr16
jg
dec
pop
loop
inc
icebp
mov
ss
sti
pop
mov
ret
stos
test
ins
push
fmul
mov
sti
outs
(bad)
ins
xlat
jmp
and
and
push
stos
iret
sbb
imul
jae
stos
inc
adc
inc
sti
dec
(bad)
sti
cmp
fwait
shl
xor
xchg
dec
shl
sub
stos
push
sub
dec
mov
out
pop
adc
outs
or
dec
add
mov
sbb
xor
mov
ficomp
sub
jnp
retf
bound
out
test
xchg
cli
out
xchg
jle
mov
(bad)
add
inc
jae
int3
stos
mov
or
ja
repz
test
fwait
xor
and
mov
mov
xor
cmp
lock
cs
retf
xchg
push
neg
(bad)
mov
aam
push
pop
or
jp
add
dec
xchg
movs
dec
popa
js
das
sbb
sub
repz
mov
jmp
(bad)
ja
adc
bound
scas
mov
xchg
jbe
dec
adc
sub
and
(bad)
jnp
out
add
and
jmp
sti
jge
pop
xchg
mov
inc
imul
cmp
arpl
lahf
fst
sbb
out
fisttp
jnp
mov
cmp
into
add
xor
and
mov
cmp
sub
arpl
jo
daa
pop
pop
mov
dec
lahf
push
cmp
sbb
mov
mov
mov
push
stos
(bad)
repz
mov
daa
pop
out
sbb
dec
mov
mov
retf
imul
bound
jg
(bad)
and
mov
pushf
inc
retf
retf
retf
add
in
cwde
xchg
cmps
or
dec
into
jmp
out
mov
aaa
pop
sub
jecxz
pop
push
das
mov
scas
cmp
repz
into
adc
pop
mov
jp
jae
lahf
in
js
pushf
cwde
icebp
data16
xchg
stos
pop
ja
pop
imul
pop
ror
or
mov
inc
jno
pop
sahf
jo
scas
in
mov
jnp
ins
mov
mov
ja
sub
enter
jmp
lods
mov
mov
mov
icebp
push
sub
mov
xchg
and
jmp
scas
dec
jge
mov
out
xor
jnp
fisub
sub
outs
and
ja
les
mov
fisub
pop
outs
test
or
sub
cmp
inc
in
push
iret
inc
jne
fmul
aas
(bad)
jb
sub
loop
pop
ss
xlat
lock
enter
mov
xor
outs
mov
sbb
pusha
or
jmp
and
mov
dec
repz
fwait
arpl
daa
push
dec
cmp
in
and
cli
xchg
mov
pop
bnd
cmp
retf
test
jae
pop
fwait
xchg
fimul
lahf
xor
sub
jp
cmp
pop
outs
stos
frstor
or
fcom
cmp
fsub
loop
in
cmp
adc
and
adc
or
pushf
pop
bound
adc
lahf
sub
call
pop
xchg
(bad)
push
enter
rol
lds
add
popf
sbb
cwde
xchg
stos
(bad)
fbld
dec
add
cmp
leave
jbe
or
pusha
cmp
sub
aaa
movs
daa
out
mov
cli
into
or
inc
xor
mov
idiv
(bad)
(bad)
cld
pop
xor
inc
jmp
cmp
xchg
xchg
repz
sub
repnz
jle
mov
mov
jno
dec
cmp
xchg
pop
or
jmp
sbb
ss
jp
sub
fwait
pop
aaa
and
push
(bad)
mov
mov
in
inc
dec
mov
and
aam
xchg
ficom
ds
xchg
out
(bad)
rol
imul
clc
pop
pusha
daa
mov
cmp
(bad)
mov
jno
test
stos
add
movs
lock
scas
jp
shr
lods
sahf
add
mov
mov
leave
pop
fsubr
jp
dec
shl
sbb
ficomp
or
scas
jmp
(bad)
mov
int
mov
push
out
movs
arpl
xchg
(bad)
jmp
sahf
xor
xchg
in
xchg
js
dec
ret
push
out
in
jmp
jl
out
dec
out
jbe
les
mov
(bad)
push
(bad)
pop
cmp
(bad)
push
or
push
fbld
icebp
test
test
(bad)
outs
add
stos
or
cmps
bound
or
or
push
arpl
jg
push
mov
adc
and
jns
mov
addr16
int3
or
outs
out
mov
pop
sub
adc
out
mov
(bad)
jp
fidivr
imul
sub
push
jmp
or
stc
stc
mov
call
ss
outs
sub
jb
aaa
rcl
xchg
fcmovb
test
ss
mov
iret
xchg
push
stos
cdq
test
pop
(bad)
fwait
retf
xchg
inc
push
js
sbb
and
sub
or
bound
sti
iret
jmp
ret
pop
mov
xor
(bad)
aas
pop
daa
inc
push
lea
push
sbb
push
pop
sti
mov
pop
mov
test
push
sub
pop
jmp
stc
in
stos
lods
cmc
adc
push
push
or
push
push
arpl
popa
jae
mov
xchg
jnp
mov
cli
popf
popf
aaa
(bad)
or
dec
mov
outs
pop
imul
ja
sub
pop
dec
ds
jecxz
adc
pop
mov
call
jnp
jns
add
xchg
push
and
fistp
inc
pop
out
mov
sub
mov
(bad)
fwait
shl
jmp
outs
push
and
mov
jnp
pop
jae
adc
arpl
into
sbb
push
jecxz
and
shl
(bad)
std
out
jo
fldenv
dec
out
cmp
loop
outs
or
frstor
imul
and
and
(bad)
in
(bad)
mov
test
mov
das
xchg
sbb
arpl
repz
mov
or
movs
sub
imul
push
(bad)
cmps
jb
cdq
adc
inc
xor
ret
lds
jae
adc
fwait
ret
or
aad
cmp
lock
ins
dec
ins
jns
jl
mov
arpl
jnp
jb
ds
ss
(bad)
jne
dec
outs
loope
jmp
cmp
hlt
aaa
jecxz
pop
or
and
jnp
mov
iret
(bad)
call
repz
xchg
mov
jp
mov
or
daa
icebp
xchg
loope
adc
mov
adc
aaa
lahf
das
stos
adc
inc
inc
xchg
pop
mov
add
fwait
and
test
or
lods
shl
call
xlat
mov
aaa
fldcw
pop
movs
add
arpl
jbe
cmp
retf
test
push
jp
imul
cmp
jnp
jae
pop
sub
scas
mov
sub
in
fild
pop
arpl
(bad)
dec
out
sar
shl
dec
mov
push
xchg
(bad)
retf
neg
mov
xchg
sbb
pop
cli
fistp
xchg
loope
shr
cmps
lods
pop
pushf
or
mov
dec
add
shl
je
add
(bad)
mov
les
and
dec
and
paddb
retf
push
push
push
sbb
pop
sti
arpl
mov
stos
pop
mov
xchg
cmp
sbb
sahf
mov
fidiv
out
aas
call
sbb
lods
mov
cli
arpl
or
ja
pop
inc
mov
mov
neg
add
or
inc
adc
push
out
cwde
sub
mov
cmc
rol
cmp
pushf
retf
jae
inc
mov
pop
in
push
adc
cmps
repnz
into
dec
cmp
in
and
imul
jae
jno
pop
stc
loopne
cli
dec
arpl
dec
mov
cli
arpl
cmc
pop
dec
fistp
daa
ins
push
subps
add
or
into
inc
cmp
mov
and
lds
add
adc
out
inc
inc
push
sbb
sar
inc
data16
(bad)
fs
lods
fnsave
sub
sbb
les
add
movs
xchg
xor
(bad)
stos
arpl
cld
cwde
fucom
movs
or
push
jmp
sub
mov
hlt
cmp
jle
hlt
sar
adc
xor
or
inc
std
mov
and
test
mov
mov
lea
and
jle
outs
pop
sub
mov
xor
dec
sti
arpl
int3
outs
outs
mov
adc
or
jnp
in
mov
out
cmp
mov
or
or
add
imul
imul
jl
scas
push
jmp
push
xchg
popw
xchg
dec
jns
fs
outs
fwait
arpl
std
push
lods
jb
scas
mov
adc
int
add
call
cdq
scas
dec
out
push
(bad)
loop
xchg
jle
cmps
dec
sub
test
enter
inc
fimul
mov
dec
jno
das
and
lds
mov
rcr
mov
add
fldcw
dec
mov
and
int
cmp
lods
sub
push
lds
fisttp
rol
outs
cdq
lahf
inc
push
test
ja
xchg
push
sbb
dec
or
mov
jmp
and
(bad)
sub
mov
fwait
mov
jnp
int
(bad)
add
mov
xchg
jle
xchg
cmc
mov
jne
or
mov
xor
fwait
sbb
pop
mov
in
(bad)
fbld
mov
adc
mov
clc
es
mov
jb
cmp
xchg
out
push
mov
jae
jp
mov
out
(bad)
sub
addr16
and
ins
add
dec
mov
(bad)
push
(bad)
(bad)
int3
mov
fmul
sub
mov
inc
jmp
fld
sub
retf
dec
fbstp
stos
jecxz
mov
popa
lahf
push
addr16
mov
jle
enter
mov
xor
pop
inc
jnp
cli
inc
or
lahf
mov
ins
inc
movs
mov
pop
mov
aad
aad
cmc
adc
test
sub
or
imul
mov
inc
push
jo
add
test
(bad)
xchg
sbb
rcr
xchg
xor
xchg
test
pop
xor
xchg
test
add
shl
and
lods
shl
and
outs
sbb
mov
sar
out
mov
mov
stc
and
jle
movs
pop
fdivr
jb
inc
xchg
in
addr16
pop
lods
cmps
ins
aad
arpl
jne
sub
lods
scas
lahf
and
dec
stos
add
ret
pop
add
sub
jl
pop
imul
out
outs
push
cmp
fisubr
stos
xchg
out
push
jmp
jmp
xor
sbb
stos
mov
ja
xor
jle
pop
mov
test
shl
xchg
scas
call
or
call
cli
in
pop
or
cmps
(bad)
aad
cs
pop
jb
sub
outs
pop
ins
mov
cmp
(bad)
es
call
gs
xor
sbb
pop
cmps
pop
enter
aaa
xchg
mov
leave
nop
dec
sbb
mov
and
out
and
push
fistp
jo
jo
sbb
rcl
aam
inc
jecxz
and
mov
mov
inc
scas
(bad)
xchg
sbb
jmp
jmp
retf
mov
jbe
sbb
fld
dec
(bad)
call
popf
nop
mov
cmp
jmp
les
(bad)
cld
lahf
pusha
repnz
push
pop
ret
adc
push
sub
mov
stos
arpl
jne
adc
mov
loop
shl
and
rol
repz
push
stos
pop
test
push
repz
sahf
xor
mov
push
outs
push
adc
arpl
push
or
(bad)
pusha
ret
aaa
pop
adc
and
addr16
sti
daa
sbb
xchg
sar
adc
cmp
sbb
cdq
out
push
sub
or
sbb
imul
cmp
pop
out
inc
add
dec
pop
ret
pop
xor
pop
sbb
leave
jmp
retf
mov
sti
cmp
mov
mov
movs
out
jb
cmp
mov
in
ficomp
inc
mov
jmp
mov
data16
jns
pop
jg
jne
mov
outs
push
mov
out
retf
repz
xchg
add
add
test
xlat
arpl
mov
fdivrp
xchg
das
mov
out
jmp
shr
adc
inc
jle
push
sbb
adc
sub
addr16
gs
mov
mov
sahf
stos
sbb
cmp
ja
cmp
sbb
aam
sbb
jg
js
dec
push
in
cmp
and
jae
cmp
push
jne
mov
mov
pop
popf
pop
test
jp
inc
lods
call
movs
hlt
mov
in
push
and
and
xor
sbb
pop
push
pop
mov
mov
addr16
or
pop
mov
(bad)
fld
(bad)
mov
vfmsubaddpd
call
cwde
inc
add
sahf
mov
int3
ss
ds
and
sub
xchg
and
rcr
fcom
ja
fnstsw
fisubr
inc
cmp
fwait
rcl
and
push
and
xchg
imul
jbe
push
call
neg
in
shl
xchg
xor
cli
sbb
or
inc
fiadd
or
cmp
or
mov
inc
jmp
test
repz
sbb
inc
retf
dec
retf
mov
push
or
inc
in
pop
xlat
call
jle
and
repnz
push
push
add
sub
adc
cwde
jmp
cmc
or
push
push
ins
pushf
add
jae
push
jmp
add
rol
mov
xchg
jl
dec
pushf
cmp
lods
dec
(bad)
in
or
jg
sub
push
sub
mov
push
add
push
and
and
or
sbb
inc
sbb
add
retf
or
jo
popf
xor
movs
sbb
aad
js
mov
inc
aam
retf
push
iret
jmp
popf
xchg
imul
retf
adc
outs
sub
add
dec
mov
xor
mov
pop
call
icebp
imul
pop
add
dec
leave
xchg
mov
push
add
sbb
mov
inc
inc
ss
arpl
inc
int3
add
cmc
sar
xacquire
xor
sbb
ret
xor
mov
sahf
std
dec
xor
jp
adc
sbb
ffreep
cmp
pop
sti
sbb
push
sbb
pop
jbe
jnp
sahf
cli
in
inc
loop
sbb
fnstenv
outs
test
sbb
div
sub
popf
inc
fcmovnbe
xor
data16
cmp
add
mov
enter
lods
fild
cmps
push
jge
das
mov
out
rcr
and
test
adc
inc
xchg
push
jp
cmp
mov
or
test
repnz
sub
fsubr
add
jae
sbb
clc
out
lock
mov
or
jmp
rcr
adc
add
inc
outs
jg
lock
loopne
push
scas
mov
int
in
test
mov
dec
xchg
jns
retf
lods
mov
cmp
cmp
xor
jg
or
or
jp
cs
mov
loopne
mov
jecxz
pop
lar
sbb
jns
xchg
mov
adc
imul
out
loope
fnsave
fcmovu
sbb
mov
and
adc
push
sub
jecxz
loope
mov
(bad)
mov
lds
or
jnp
adc
xor
pushf
iret
push
retf
push
out
xchg
adc
mov
adc
pop
(bad)
sub
inc
retf
inc
imul
repz
dec
or
xchg
loope
imul
adc
sbb
fcom
cmc
repz
xchg
test
push
sti
clc
mov
test
xor
gs
dec
inc
pop
cmp
loop
imul
or
nop
pop
hlt
adc
xchg
push
aas
mov
popf
scas
shl
push
(bad)
fsubr
fwait
or
fist
into
stos
pop
jle
mov
mov
cmps
stos
mov
mov
retf
xlat
fist
xchg
xor
add
and
mov
cld
stc
popf
add
jbe
(bad)
stos
out
push
lods
dec
inc
inc
test
in
xchg
out
jb
cli
add
dec
mul
int3
inc
mov
inc
hlt
fcmove
ret
pop
xor
call
leave
clc
inc
or
ins
and
inc
jbe
pop
mov
(bad)
ins
(bad)
push
imul
jle
push
enter
call
mov
aad
or
jbe
push
and
mov
(bad)
push
mov
sub
xor
cmp
int3
adc
ss
cmp
xor
xchg
int3
iret
ffree
pop
test
fsub
popf
movs
push
pop
cmp
push
jp
das
loopne
sub
push
mov
push
xchg
(bad)
lods
jb
shr
repnz
xchg
jle
or
aaa
mov
mov
les
rcr
mov
jmp
push
mov
mov
(bad)
mov
imul
mul
(bad)
push
or
xor
push
ja
push
jne
push
or
adc
inc
arpl
jae
neg
push
in
push
fcomp
loope
and
jl
scas
mov
mov
clc
stos
push
dec
fdivr
add
cmps
dec
outs
pop
fwait
push
or
ret
loop
cmp
leave
pop
mov
outs
and
ficomp
pop
jae
lods
push
mov
inc
outs
fwait
push
rcr
push
outs
retf
adc
(bad)
test
adc
das
out
dec
addr16
dec
and
push
div
mov
pop
push
mov
inc
and
sub
cwde
repz
xchg
fimul
jle
pop
xlat
xor
dec
jmp
test
mov
rol
test
mov
push
lahf
sbb
pop
mov
aam
outs
jae
mov
mov
sub
into
stos
dec
xchg
or
sbb
mov
jmp
mov
add
push
ds
ja
dec
cs
dec
(bad)
or
push
(bad)
sti
(bad)
int
stos
cmp
aad
xchg
push
cdq
lea
fisub
loopne
(bad)
or
out
jle
mov
mov
pop
iret
cmp
out
sbb
sub
xlat
outs
push
jns
stos
xor
mov
cmps
jle
shr
stos
ja
sub
rcr
pop
ret
jae
xchg
scas
jae
mov
xchg
out
test
jmp
inc
jb
repnz
mov
xor
addr16
push
dec
mov
pop
pop
repz
(bad)
xchg
adc
sbb
mov
repz
lahf
mov
cli
jns
sbb
std
loope
data16
sbb
xchg
jno
stc
sbb
push
popaw
jne
xor
inc
enter
lea
dec
and
cmp
add
retf
(bad)
pop
mov
dec
jns
or
sub
pop
sbb
int3
mov
test
test
gs
sbb
push
push
(bad)
dec
popa
adc
rol
sub
lds
mov
movs
jns
mov
aam
pop
pop
mov
stc
rcr
pop
inc
push
rcl
and
in
xor
movs
int
pop
gs
lods
adc
fisttp
sbb
xor
xchg
sbb
int
pop
enter
lods
push
mov
(bad)
push
(bad)
popf
adc
push
popf
or
xchg
dec
xchg
pusha
push
lds
jne
xchg
pop
dec
jno
mov
dec
xchg
in
vcvtpd2ps
sbb
jmp
push
lds
fld
gs
or
popf
inc
sbb
pop
inc
(bad)
movs
fnsave
mov
fdivrp
cmps
addr16
loope
out
loope
xor
int
add
popf
inc
sub
stc
mov
sahf
adc
loope
aad
rol
dec
sbb
mov
push
stc
loope
std
bound
jecxz
out
xor
jle
sub
dec
lods
fwait
stc
dec
test
mov
popa
jns
stc
arpl
push
jns
and
lea
rol
dec
ins
fdivr
sub
dec
mov
inc
je
jmp
jg
jg
cld
pop
jg
lock
(bad)
fdivr
test
call
ja
clc
and
dec
jg
sub
push
mov
ins
test
push
xor
jg
cmc
cmps
jbe
xchg
jb
aas
rcr
inc
sbb
outs
in
scas
pop
addr16
daa
pop
pop
fisttp
jnp
jg
scas
shl
push
mov
mov
push
aas
push
sahf
push
hlt
pushf
mov
ds
sti
mov
mov
inc
aam
iret
out
aam
pop
and
and
pop
hlt
pop
jg
bound
mov
fild
das
mov
and
mov
fdivr
pop
js
js
js
out
mov
cdq
or
and
aaa
or
ficomp
sbb
or
pop
pop
lahf
pop
fwait
jo
mov
push
mov
sbb
or
(bad)
push
and
cmp
push
or
fwait
hlt
sbb
pop
movs
dec
and
fbstp
stos
add
and
or
shr
(bad)
or
iret
lods
sub
stos
lods
(bad)
pop
pop
mov
aam
and
out
fwait
mov
mov
mov
push
xchg
fdivr
pushf
daa
cs
cli
adc
call
das
inc
fsub
add
push
gs
movs
adc
fld
das
sbb
or
add
das
repz
(bad)
fs
push
in
fistp
cmps
in
xlat
in
push
inc
sub
enter
dec
lods
push
add
lods
fisttp
(bad)
jle
stos
jns
jns
and
dec
add
xchg
fsub
mov
push
add
sbb
pusha
out
sub
mov
xor
repnz
scas
lock
jno
jle
icebp
pusha
mov
push
dec
mov
scas
stos
and
addr16
cmp
push
fs
mov
and
dec
sub
add
scas
mov
mov
movs
scas
pop
retf
and
test
ds
dec
movs
cli
fs
jo
mov
sub
or
and
test
add
scas
add
in
sub
sub
sbb
push
push
adc
xchg
mov
mov
adc
and
retf
jne
add
loopne
dec
or
data16
and
test
(bad)
mov
sub
call
fnstsw
push
lock
adc
and
test
push
bound
arpl
stos
shr
test
jge
push
add
mov
pop
pop
in
sub
stos
mov
cmps
out
retf
or
and
push
push
xchg
cmp
pop
mov
pop
lods
lods
dec
dec
les
fst
ins
loope
cmp
test
pusha
or
shl
mov
sbb
repnz
add
sub
popa
test
movs
mov
cmc
xchg
mov
sub
mov
mov
jb
ror
dec
clc
xor
inc
ror
ins
dec
push
mov
(bad)
in
pop
int3
push
test
mov
mov
pop
xchg
push
test
mov
in
xchg
dec
and
dec
jl
ror
or
stos
jno
xchg
dec
sub
rol
sub
pop
scas
ror
mov
xlat
xchg
xor
inc
jmp
leave
mov
add
add
test
and
(bad)
xor
add
out
leave
outs
(bad)
mov
mov
and
add
(bad)
cmp
dec
js
mov
outs
jg
adc
(bad)
push
fs
inc
dec
loope
fist
fisub
aam
and
mov
add
dec
out
test
mov
sub
dec
xor
pop
cmps
dec
mov
push
pop
mov
sahf
sahf
xor
inc
jne
stc
mov
(bad)
and
xor
popf
(bad)
jmp
cmp
jge
shr
lods
mov
fidivr
movs
dec
cmp
std
xchg
or
loop
adc
cdq
xchg
sbb
mov
and
fldl2e
sbb
or
xchg
cmps
mov
movs
sbb
mov
sbb
inc
mov
lds
pushw
adc
cdq
ds
mov
aam
jmp
mov
sbb
xchg
std
cmp
test
pop
(bad)
popf
cmp
aas
mov
test
adc
bound
push
xor
jge
mov
mov
sbb
pop
jno
push
xor
mov
push
cmp
gs
mov
mov
dec
sbb
push
out
push
push
jmp
sbb
cdq
jecxz
xchg
jecxz
(bad)
xchg
outs
xor
jns
ds
movs
xchg
icebp
mov
dec
push
sbb
xchg
jge
ficomp
call
inc
int
ins
push
mov
xchg
pop
push
ret
push
jnp
pop
stos
mov
mov
aad
xchg
push
mov
xchg
pop
push
mov
in
std
mov
pop
test
fstp
cmp
push
retf
ss
(bad)
mov
fsubr
cmp
adc
fs
in
xor
pop
pushf
xor
je
mov
int
out
xor
adc
scas
movs
pop
fidivr
xlat
jns
mov
push
jns
cmp
mov
arpl
mov
jne
xchg
sbb
xchg
std
aas
xor
mov
lahf
push
jbe
adc
jbe
(bad)
push
imul
arpl
adc
jbe
push
pop
imul
repnz
les
out
nop
jp
dec
push
in
dec
data16
xor
clc
pop
inc
int
xchg
fiadd
das
ret
push
push
imul
push
fdiv
pop
mov
in
xchg
fs
mov
fadd
pop
mov
dec
add
sub
idiv
(bad)
adc
dec
sub
fldenv
jo
inc
pop
ds
daa
and
mov
int
xlat
ja
fs
ins
call
je
(bad)
hlt
cli
sub
dec
data16
push
xchg
mov
(bad)
fsub
or
or
jle
sbb
jbe
jne
icebp
mov
(bad)
std
jbe
enter
or
pop
push
mov
dec
call
ror
dec
lock
call
push
test
(bad)
dec
cmps
jp
sahf
mov
(bad)
call
test
shl
xor
sub
jb
push
cmps
xchg
mov
adc
fld
jb
xchg
add
ds
(bad)
hlt
and
push
fsub
xchg
fsub
push
pop
out
pop
or
mov
inc
cli
call
push
cmp
sub
dec
repnz
inc
jp
mov
xor
xchg
mov
sub
pop
out
(bad)
adc
das
dec
inc
cld
inc
pop
mov
out
(bad)
(bad)
push
call
or
sub
sbb
jmp
adc
adc
mov
idiv
pop
xor
(bad)
call
xchg
sbb
(bad)
push
mov
cdq
call
sahf
xor
add
dec
call
dec
sahf
mov
call
jnp
fiadd
clc
inc
inc
jbe
adc
out
and
adc
or
(bad)
gs
cmp
sahf
pop
repnz
xchg
call
sahf
repnz
cmp
call
xor
mov
call
cld
call
repnz
mov
fidiv
call
lods
mov
in
mov
push
sar
sbb
mov
mov
neg
mov
mov
pop
and
xchg
cdq
lea
retf
shl
dec
out
jb
jb
sbb
sti
xor
sbb
inc
pop
(bad)
jb
jo
cli
es
repnz
or
push
rol
xchg
ss
repnz
outs
sar
jns
jb
adc
repnz
cmp
jnp
call
mov
test
mov
bnd
mov
ds
repnz
jg
dec
xor
pop
repnz
cli
out
mov
pop
xor
and
mov
push
dec
mov
test
xchg
lods
jb
xchg
cmp
jp
(bad)
jg
xor
mov
and
jb
and
dec
sub
arpl
jmp
xlat
jg
or
adc
movs
lahf
fst
mov
std
push
xchg
jb
push
leave
xor
jne
dec
je
xor
repnz
jb
jecxz
jb
add
mov
out
cmc
mov
lea
div
(bad)
icebp
pop
jb
mov
int
jb
loop
dec
ins
out
cmp
push
call
repnz
xchg
div
jb
jb
retf
lods
mov
jns
mov
jb
fwait
lea
dec
xchg
mov
dec
jnp
rcr
sub
or
adc
add
sbb
jge
xchg
dec
js
popa
imul
add
or
xchg
jg
push
push
or
and
(bad)
stc
pop
out
push
aas
test
jl
loope
fiadd
cmc
fidiv
imul
inc
les
jl
neg
mov
add
aam
in
jg
jl
or
leave
rol
retf
mov
inc
jne
stos
fcom
adc
cmps
adc
pop
stos
push
retf
pop
retf
in
fsubr
xor
out
mov
xor
(bad)
xor
outs
xor
iret
mov
xor
xchg
outs
xor
(bad)
mov
xor
out
mov
imul
imul
inc
add
push
mov
xchg
test
aas
xchg
ret
xchg
push
mov
dec
xchg
test
aas
xchg
ret
inc
imul
dec
xchg
push
push
outs
mov
adc
sub
adc
fsub
ret
mov
push
jmp
lock
adc
(bad)
int
jl
les
shr
cs
cwde
mov
mov
xchg
push
sbb
lahf
out
mov
xor
cld
dec
push
dec
xor
loopne
push
mov
stos
imul
pop
dec
xchg
mov
and
stos
xchg
dec
xchg
stos
aam
fcomp
retf
or
sbb
push
rol
push
xchg
dec
sar
hlt
dec
xchg
add
xchg
aad
pop
out
jns
stos
mov
pop
mov
pop
dec
sbb
pop
jecxz
es
mov
xor
mov
adc
test
cld
adc
pop
jecxz
sbb
mov
int
jge
pop
int
bound
xor
push
cmp
fs
in
add
mov
pop
sub
gs
mov
in
lds
gs
mov
in
lds
gs
mov
in
lds
gs
mov
in
lds
gs
mov
in
lds
mov
inc
jge
dec
(bad)
rcr
jp
xchg
sti
xchg
pop
or
(bad)
lahf
shl
xor
mov
retf
mov
ret
in
mov
mov
sbb
push
xchg
jge
mov
jb
push
retf
cmc
push
jle
add
cs
ficom
pop
cmp
retf
sbb
bound
mov
loop
into
adc
jge
xchg
repz
push
into
mov
pushf
test
movs
(bad)
sbb
and
push
movs
rol
xchg
repnz
push
jb
jb
jb
jb
repnz
xchg
repnz
push
jb
jb
repnz
shl
jb
jb
jb
repnz
xchg
repnz
shl
jb
jb
jb
repnz
xchg
repnz
repnz
xchg
repnz
push
jb
jb
jb
jb
and
repnz
inc
add
xor
popf
fild
push
add
ja
push
pop
or
fcomi
daa
pop
push
push
dec
sbb
rol
and
pop
pusha
pop
push
jb
cmp
xchg
xor
adc
xor
ds
(bad)
sahf
not
xor
adc
pop
add
lahf
in
rcr
inc
sbb
xor
push
add
xchg
sbb
add
pop
jae
lahf
xlat
xchg
xchg
mov
xor
jae
inc
add
sbb
std
popf
in
push
pop
ja
imul
jb
popf
not
push
sbb
xchg
cmps
xchg
aad
mov
retf
dec
push
mov
(bad)
lods
iret
xchg
test
dec
test
or
and
(bad)
pop
aaa
scas
pusha
sbb
dec
cmp
call
into
mov
es
jno
popa
mov
fnstsw
mov
shl
ret
test
repnz
(bad)
repnz
mov
mov
aam
(bad)
adc
repz
aad
(bad)
mov
mov
adc
repnz
mov
(bad)
xchg
in
xlat
mov
jle
repnz
mov
mov
mov
sahf
frstor
mov
(bad)
fdiv
jp
xchg
adc
xchg
call
xchg
ficom
(bad)
xchg
mov
repnz
xchg
fcomi
cld
mov
cld
xchg
mov
mov
out
mov
pushf
repnz
adc
cwde
mov
mov
mov
sti
mov
shr
stos
jmp
into
jecxz
lock
mov
(bad)
ror
inc
je
xchg
mov
arpl
stos
aad
mov
jbe
sub
repnz
(bad)
repnz
mov
mov
(bad)
repnz
mov
mov
(bad)
repnz
mov
mov
imul
aaa
cld
or
mov
iret
xchg
jne
xor
leave
sbb
frstor
mov
add
jnp
std
sub
mov
add
add
pop
ins
or
push
sbb
or
dec
pop
inc
inc
or
or
ins
add
push
pop
push
pop
add
clts
push
push
push
sub
and
ss
es
or
xor
push
and
push
and
push
and
push
add
or
inc
or
pop
or
push
or
ins
inc
or
pop
add
push
or
daa
cmp
cmp
ins
gs
adc
adc
adc
or
or
or
or
jne
repz
bound
sub
cmp
sub
xchg
or
mov
xchg
jmp
dec
movs
enter
loop
repz
mov
outs
push
in
cld
icebp
bound
sbb
repz
gs
aas
fst
ins
(bad)
pop
call
retf
enter
stos
cmp
popa
leave
ins
loope
jp
jecxz
fbld
into
sbb
pop
jecxz
ret
dec
(bad)
mov
sub
dec
(bad)
(bad)
leave
sbb
fs
pop
in
ss
xchg
fs
int3
sub
push
mov
lock
ret
mov
cmp
jbe
and
push
cwde
pop
fcom
ins
fsubr
out
and
(bad)
ins
out
js
cwde
cmp
frstor
and
mov
push
shl
sti
arpl
inc
mov
jecxz
add
jecxz
repz
push
test
fsub
aaa
mov
rcr
(bad)
in
xor
inc
jmp
into
and
enter
add
push
in
jge
add
pusha
out
mov
daa
xchg
add
dec
les
mov
xchg
test
fld
cmps
sub
pop
lock
ror
pop
out
sbb
repz
jecxz
adc
into
ins
cld
jg
push
xchg
and
(bad)
mov
movs
and
daa
mov
ret
jbe
mov
in
iret
and
pusha
in
mov
fimul
and
sbb
mov
mov
jbe
inc
adc
not
dec
mul
or
push
or
push
test
pusha
mov
cmp
das
enter
xchg
inc
jb
push
das
cmps
cmps
sub
dec
ror
jb
aaa
ins
in
or
dec
bnd
pop
xchg
(bad)
sbb
fbstp
movs
add
adc
js
dec
scas
push
lods
sub
inc
or
or
push
cdq
imul
push
lock
sbb
cmp
sbb
scas
cmp
in
inc
mov
xchg
ss
cmp
push
ss
add
hlt
adc
fld
mov
cwde
ds
aas
out
stos
adc
sub
pop
sbb
push
aam
mov
or
push
sub
ret
ja
or
cmp
push
mov
jmp
or
cmp
sub
cmp
sub
adc
xor
mov
fwait
push
retf
jne
pop
mov
mov
dec
mov
pop
jmp
and
inc
retf
mov
scas
cmp
jno
xor
rcl
cld
or
ds
outs
xchg
cmp
or
cs
fmul
push
lea
cmp
push
xor
sub
push
mov
aam
xchg
cmp
inc
neg
xchg
cmp
aas
(bad)
push
xor
fdiv
dec
xchg
jg
adc
push
call
or
hlt
push
aas
lock
nop
adc
push
mov
dec
dec
enter
pop
lods
bt
in
jb
or
mov
add
sbb
add
or
or
or
and
dec
jl
or
pop
pusha
inc
outs
or
dec
or
ror
pop
push
dec
cmp
pop
and
or
mov
pop
inc
add
or
les
or
xor
cmp
mov
mov
jge
arpl
fs
pop
dec
sub
adc
cs
push
push
or
mov
mov
gs
inc
xor
shr
pop
sub
or
dec
dec
jge
test
mov
dec
xor
push
push
pop
inc
pop
std
cdq
fistp
dec
adc
dec
dec
pop
dec
stos
fcomp
cmp
pop
dec
mov
cdq
cmp
xor
dec
addr16
sti
sub
and
pop
jae
or
imul
mov
aas
out
or
jp
arpl
mov
pop
or
adc
pop
das
pop
ds
mov
cmp
or
pop
and
aad
out
sbb
and
mov
rcr
jnp
cs
dec
lds
sub
dec
mov
data16
xor
adc
or
mov
sbb
outs
sar
xor
xrstors
fidivr
fmul
stos
push
sti
jo
sub
add
lgs
popf
pop
std
aas
aad
sar
sbb
jmp
xor
inc
leave
pusha
mov
in
sti
add
mov
clc
es
shl
sbb
jnp
and
cmp
fdiv
adc
adc
ds
std
popa
test
jmp
mov
retf
ret
or
cmp
pusha
jp
and
loope
shl
pop
mov
cmp
mov
mov
jecxz
mov
pusha
or
sub
loope
retf
add
adc
lock
jo
pop
mov
shl
outs
jmp
clc
dec
aad
scas
xor
iret
pmovmskb
add
ins
clc
fs
xor
enter
and
aas
ret
add
add
cmps
imul
jnp
imul
jecxz
loopne
sub
mov
jg
jo
xor
inc
mov
std
dec
icebp
cs
cli
inc
stos
inc
cmp
jo
ins
sub
jae
ficomp
js
test
lods
adc
pop
jae
pop
call
sbb
hlt
dec
or
gs
popa
sub
cs
dec
div
(bad)
ja
push
ja
add
pop
fs
push
cli
and
push
cli
xor
xor
daa
xor
ret
outs
iret
xor
or
gs
ins
xchg
rcl
and
mov
push
ret
sub
fbld
stos
sbb
xlat
popa
ret
int3
push
mov
retf
je
cmp
fiadd
push
mov
xor
mov
or
xchg
adc
imul
cwde
sub
xor
es
pop
(bad)
gs
ret
js
cmp
jne
push
adc
ret
sub
in
inc
or
sub
jle
add
fbld
popa
imul
ss
fnstenv
jns
mov
lds
imul
or
and
out
mov
jae
popf
push
mov
pop
les
pop
dec
jmp
addr16
adc
loopne
xchg
adc
cs
out
pop
cli
sub
inc
cdq
out
pushf
ds
sub
aas
mov
lea
or
sub
addr16
fimul
mov
shl
or
jmp
dec
in
sbb
das
cmps
add
add
outs
loop
adc
inc
stos
xor
or
bts
test
int
jns
xor
sub
xor
data16
sbb
fld
mov
jg
mov
sub
addr16
cmps
and
retf
cmp
jge
and
cmp
sbb
mov
push
fdiv
and
xor
adc
mov
test
test
inc
cwde
adc
inc
jmp
sbb
mov
mov
into
push
hlt
adc
fiadd
lahf
sbb
and
out
ret
ret
retf
push
dec
inc
inc
sub
clc
shl
cmps
leave
stos
les
inc
xor
adc
out
in
into
adc
fs
fs
inc
aam
(bad)
xchg
fs
data16
cmp
imul
popa
ss
es
xor
jecxz
sub
out
test
les
and
inc
inc
out
xor
nop
mov
adc
xor
and
add
lock
aaa
out
xor
popa
sbb
movs
dec
and
inc
adc
das
and
je
pop
repnz
inc
test
pop
push
mov
sub
out
test
out
mov
rcr
add
dec
cmc
(bad)
xchg
int3
arpl
pop
jbe
or
xchg
mov
jmp
leave
aad
adc
ja
push
or
jmp
(bad)
mov
push
sbb
ja
dec
cmp
mov
mov
data16
xor
out
scas
lahf
fwait
call
int3
push
sar
mov
(bad)
mov
aam
ret
ins
fsub
ss
sbb
cmp
add
js
sbb
inc
jecxz
xchg
mov
adc
sub
cmp
cmc
cmp
dec
jmp
(bad)
pmaddwd
or
mov
mov
cmp
xchg
in
cmps
xchg
sub
(bad)
cmp
jno
outs
cld
adc
mov
fsub
(bad)
cmp
psrld
jae
mov
lock
add
sub
out
outs
clc
mov
icebp
aaa
int3
das
repnz
pop
lods
xchg
or
or
or
xor
mov
sub
adc
enter
dec
pushf
es
out
cmp
pop
mov
mov
or
or
pop
loopne
mov
xor
sar
(bad)
call
in
xor
mov
and
and
pushf
xor
push
mov
call
xor
fwait
dec
mov
and
aaa
cmc
sbb
xchg
push
jmp
fdiv
jne
jecxz
call
mov
in
pushf
jne
xor
pop
loop
clc
test
retf
jbe
sbb
nop
pop
in
mov
sub
ins
rcl
dec
icebp
xor
int
test
sahf
xor
call
dec
out
xor
jno
jl
and
lock
fwait
and
dec
mov
nop
dec
mov
fwait
and
inc
movs
inc
mov
mov
sbb
sbb
adc
add
pushf
xchg
stc
dec
stos
cs
aas
scas
push
xchg
sub
mov
out
mov
adc
and
stos
cmp
mov
xchg
inc
mov
cmp
jno
pop
scas
push
mov
mov
or
movs
adc
mov
inc
mov
fdivr
xchg
and
mov
xor
jne
push
mov
xchg
cld
push
std
adc
or
mov
xchg
cs
or
push
sahf
pop
data16
mov
mov
xchg
setbe
and
add
mov
mov
mov
mov
xchg
or
pop
add
or
sahf
or
sub
cld
or
mov
adc
daa
stos
stc
sub
adc
add
les
and
rol
and
push
(bad)
sub
addr16
adc
dec
in
out
jge
je
jle
adc
xor
(bad)
sbb
dec
cmp
inc
aad
in
fiadd
dec
add
sbb
pop
nop
inc
fld
add
jg
add
dec
fistp
jle
push
jp
(bad)
cmc
jge
sbb
call
sbb
outs
mov
fimul
pop
aam
jmp
popf
pusha
adc
dec
pushf
xor
rcr
push
jne
(bad)
or
sbb
loop
repnz
outs
arpl
dec
(bad)
xor
jg
add
pusha
adc
add
sub
dec
loope
retf
inc
sbb
or
js
add
pop
loopne
shl
inc
ins
call
adc
adc
push
push
std
adc
data16
ja
inc
out
(bad)
gs
jae
jle
jl
addr16
dec
lds
js
repnz
jle
dec
(bad)
jae
mov
bound
cld
or
cmp
pop
xchg
inc
loopne
in
add
popf
imul
mov
in
add
nop
jp
fldenv
pminub
fstp
xchg
push
sbb
aas
stos
sti
fnstenv
sahf
popf
dec
ja
sub
pop
mov
leave
out
out
cmp
dec
bound
cdq
loopne
call
repz
arpl
and
(bad)
pushf
fld
mov
push
imul
rcr
and
sbb
and
scas
repz
retf
mov
fwait
retf
jnp
and
xchg
stc
fldenv
adc
push
inc
stos
mov
inc
push
ja
or
fwait
retf
stos
fwait
in
cmp
ins
popa
retf
mov
(bad)
in
add
cmp
cld
out
call
cmp
cmp
sti
mov
xchg
lds
or
cs
(bad)
jmp
retf
mov
imul
pusha
sub
(bad)
out
mov
jg
inc
sbb
ret
enter
(bad)
xlat
mov
aas
dec
jge
rcl
out
lea
prefetcht2
sub
lods
out
(bad)
sbb
jg
mov
jmp
ret
xchg
mov
mov
out
stc
pop
test
lahf
push
in
pop
push
ret
dec
adc
in
xor
jl
adc
ds
mov
and
pop
push
out
loop
ret
push
xchg
mov
mov
cmps
adc
outs
xchg
pop
push
mov
xchg
imul
mov
in
jecxz
nop
mov
test
xchg
mov
jmp
retf
inc
xchg
movs
lea
mov
mov
aaa
mov
test
sahf
loope
bound
xchg
sti
shr
fdiv
sbb
push
sub
mov
xor
mov
es
jl
inc
test
mov
sub
dec
mov
mov
dec
ret
xor
dec
lock
mov
pop
jo
add
scas
loope
xchg
cdq
imul
sub
dec
xchg
fdivr
sub
push
jecxz
hlt
scas
(bad)
lods
mov
idiv
daa
ret
jns
dec
sub
pop
xchg
inc
imul
(bad)
aas
arpl
or
jne
push
xchg
cli
push
fadd
sbb
lahf
dec
idiv
stc
dec
sbb
std
je
xor
sub
test
popf
pop
sub
pop
scas
inc
je
push
jns
mov
pop
neg
cmc
setb
nop
adc
cmps
pop
test
mov
cmps
mov
popf
cmps
jne
and
lahf
push
loope
mov
pop
fwait
push
test
pop
push
sub
sub
nop
push
lea
sbb
sbb
lods
jbe
in
push
dec
xor
call
ds
adc
inc
imul
push
sub
stc
add
jbe
pop
les
push
xor
test
or
loope
jecxz
arpl
cmps
pop
aaa
mov
inc
adc
fcomp
sub
in
xor
mov
mov
jg
push
mov
adc
sbb
test
(bad)
(bad)
jmp
add
fs
int3
cmp
sub
popf
add
in
sbb
addr16
sbb
dec
jb
add
or
in
movs
loope
jno
jp
fst
dec
push
das
(bad)
aam
popf
jo
push
dec
push
test
addr16
dec
jnp
xor
mov
stc
(bad)
cld
les
cmps
dec
fild
imul
(bad)
outs
and
stc
inc
mov
jbe
adc
xchg
test
or
mov
in
leave
les
jbe
xchg
lods
pop
call
cmp
sar
fsubp
mov
lods
ins
xchg
sub
mov
retf
jno
sbb
mov
pop
sbb
cmp
pop
cmp
adc
aad
in
cld
pop
mov
mov
aaa
sub
inc
push
pushf
loop
ret
nop
jmp
or
stos
jmp
sbb
add
dec
ret
adc
sub
imul
xor
int
mov
js
sahf
bswap
pop
in
push
mov
mov
out
cmps
sub
in
fsubr
(bad)
aad
cmp
pop
sar
xor
mov
pop
in
out
sbb
pop
dec
add
cmp
mov
ja
jo
sbb
or
stos
sbb
and
push
shr
nop
sub
in
cli
call
add
int
cmps
in
and
xchg
in
mov
popa
cmp
call
sti
push
rcr
addr16
cmp
inc
adc
mov
mov
pop
jno
push
lods
arpl
cmc
sub
or
xor
rcr
cdq
jae
and
push
xor
jle
jg
push
xchg
arpl
pop
mov
psrad
mov
(bad)
fstp
push
pushw
mov
adc
jmp
adc
sbb
hlt
daa
sbb
pop
cmps
mov
pop
xor
(bad)
sbb
fbstp
sub
adc
cmp
int3
das
and
or
mov
out
cmp
outs
push
push
ins
inc
push
mov
jne
jns
or
sub
jle
cmp
sbb
dec
stc
and
mov
push
mov
jns
scas
sbb
imul
daa
js
xchg
cld
sub
pop
jmp
(bad)
cmp
push
aas
mov
pop
cmc
jge
jb
(bad)
(bad)
out
loop
cli
xor
repnz
in
mov
es
ds
xchg
pushf
inc
or
adc
push
cmp
test
mov
call
repz
pop
inc
mov
movs
out
loope
jbe
xchg
das
push
cmp
loopne
fild
mov
sbb
dec
ror
xor
ret
pop
test
push
push
outs
sbb
sahf
fwait
push
rcl
aas
dec
jg
out
mov
and
and
add
mov
push
xchg
adc
movs
inc
repnz
inc
rcl
push
test
xchg
sub
xchg
mov
cmp
(bad)
fld
aam
mov
pop
inc
les
inc
aam
and
xchg
cmc
push
out
retf
cmps
(bad)
lds
inc
xor
loopne
les
aaa
cmps
test
mov
inc
shl
adc
xchg
neg
xchg
cmps
cdq
mov
push
and
sahf
hlt
and
movs
inc
xor
lds
add
adc
in
xchg
add
adc
mov
test
push
in
push
mov
(bad)
lock
add
sub
out
rcl
shl
sbb
shr
cmc
(bad)
add
(bad)
(bad)
aad
xchg
mov
mov
test
mov
loopne
xchg
xchg
aaa
pushw
test
sti
cmc
fst
and
rol
loope
neg
mov
xchg
mov
out
add
sar
mov
sbb
mov
and
rol
ret
xchg
fs
aam
jecxz
movs
addr16
aam
add
in
push
xor
mov
cs
inc
mov
les
arpl
xor
mov
sti
mov
nop
jns
(bad)
repnz
bound
sbb
in
mov
aas
cmp
cmc
mov
mov
daa
ss
stos
pop
in
mov
sbb
mov
mov
push
out
(bad)
mov
push
daa
repz
hlt
iret
out
xchg
jge
ins
mov
jg
mov
sbb
std
pop
mov
dec
lds
xor
jae
int
mov
xor
push
sub
adc
jae
jp
push
pop
sbb
push
xchg
fisttp
xchg
jecxz
mov
dec
leave
pop
sar
push
mov
setne
push
iret
cmps
repz
adc
mov
mov
mov
(bad)
bound
in
fcomp
push
(bad)
sub
popa
fidivr
mov
clc
repnz
and
fadd
inc
jmp
sbb
pop
addr16
mov
and
rcr
gs
cwde
sub
xor
cld
outs
mov
inc
or
movs
loope
cmp
push
xchg
mov
cwde
mov
push
lods
outs
jecxz
mov
loop
xchg
ja
das
fwait
sbb
mov
les
jo
lds
cmc
dec
jno
lea
mov
nop
push
lods
rcr
rol
in
jle
stos
pop
xchg
fcom
iret
pop
cmp
imul
hlt
xchg
sub
add
shl
mov
jge
push
ror
sbb
arpl
in
sub
sahf
adc
mov
pslld
add
and
cdq
call
xchg
sub
or
inc
aad
jp
(bad)
bound
jmp
jg
mov
(bad)
or
adc
stos
push
(bad)
ror
fsubr
mov
enter
mov
xchg
and
(bad)
jns
mov
add
jp
inc
push
lahf
sbb
or
rol
dec
pop
cmps
test
push
sbb
cmp
out
dec
in
fstp
mov
adc
aad
repz
and
xchg
or
ret
pop
pop
add
jne
sub
adc
retf
inc
dec
outs
js
shl
int3
add
(bad)
jmp
sbb
pop
std
xor
inc
mov
or
popa
jle
cs
adc
rol
push
in
push
test
or
mov
aad
sub
and
fs
and
and
cdq
pop
sub
push
fld
mov
jmp
fbstp
push
imul
and
dec
push
std
fs
add
push
mov
cmp
call
xor
je
xor
daa
(bad)
and
fidiv
pop
imul
ret
fwait
push
or
jmp
popf
mov
scas
add
ss
add
daa
pop
test
scas
push
fnstenv
dec
movs
pushf
push
adc
daa
sbb
pop
movs
xchg
popa
out
sub
add
and
dec
mov
in
mov
rcl
sbb
(bad)
dec
leave
out
pop
scas
scas
lahf
ret
fstp
shr
popf
adc
fs
or
in
shr
jb
dec
push
lea
push
xor
leave
mov
cmp
xchg
mov
jae
popf
aam
movs
dec
fild
cmp
mov
gs
push
lock
fwait
(bad)
mov
sbb
leave
fdiv
mov
loopne
mov
test
xor
test
outs
(bad)
dec
mov
adc
sub
pusha
pushf
dec
pop
and
ins
loope
retf
leave
adc
dec
mov
aad
push
xchg
mov
fild
sbb
jnp
rol
(bad)
retf
cwde
out
stos
mov
mov
in
cmp
jmp
icebp
push
or
retf
aaa
ficomp
mov
repz
fdivr
cwde
aad
(bad)
sti
mov
mov
test
aam
mov
fimul
inc
mov
and
mov
xchg
retf
movs
sub
sub
imul
movs
mov
mov
ins
stc
mov
sub
fwait
push
cdq
stc
test
mov
scas
clc
mov
inc
mov
mov
or
fild
mov
in
rep
fild
leave
sahf
into
or
leave
pushf
(bad)
movs
fimul
in
or
aad
jl
gs
inc
ret
dec
mov
jno
lods
push
out
jno
mov
ret
jle
dec
xchg
cs
pop
lock
rol
sbb
mov
(bad)
cmps
push
test
je
cld
ret
add
cmp
jmp
pop
repnz
or
inc
and
pop
inc
dec
xchg
cmp
dec
mov
inc
mov
test
pop
ret
cmp
xor
inc
into
sub
push
nop
mov
dec
add
cmp
sub
sub
pusha
cli
dec
cmp
(bad)
fild
sub
cmp
arpl
repz
jmp
lahf
adc
push
loopne
clc
icebp
pop
sbb
out
adc
sub
jmp
or
adc
sbb
jmp
sbb
out
sbb
movs
mov
or
iret
jg
fnsave
retf
cmp
adc
ins
add
lods
jo
in
sbb
cmp
loop
retf
mov
and
pop
cmps
add
out
int
cmp
fld
dec
adc
fs
fisttp
mov
fild
test
scas
out
mov
lods
lfs
pusha
dec
and
push
jecxz
iret
add
push
or
dec
idiv
and
icebp
outs
mov
cwde
jecxz
mov
and
adc
or
sbb
or
rcr
les
leave
fcomi
sub
inc
fld
pop
ret
arpl
lds
jecxz
sahf
aam
mov
sahf
mov
lods
pop
jge
lds
add
lock
leave
jbe
test
and
scas
cwde
jno
pop
hlt
push
test
fisubr
xchg
sub
dec
rcr
add
pop
mov
sar
popa
sbb
pushf
mov
aad
xchg
cli
call
sbb
lock
call
inc
ss
and
push
fs
cmps
std
int
pop
stc
mov
std
add
cmp
xor
dec
add
inc
(bad)
dec
fstp
xchg
(bad)
mov
in
or
frstor
shr
jp
push
clc
shl
into
sti
mov
out
loopne
adc
push
rcr
jns
ret
std
ror
mov
rcr
lock
or
inc
ja
loop
loope
loop
sub
(bad)
push
push
and
xchg
jns
dec
xchg
sbb
adc
mov
stos
pop
clc
sub
fld
and
pcmpgtw
cmp
ins
mov
retf
xor
aas
jg
inc
adc
pop
xchg
pusha
sti
pop
sbb
call
mov
shl
mov
sub
div
dec
push
jo
add
cmp
out
ret
xchg
cmp
ret
mov
ins
mov
xchg
clc
test
out
or
mov
stc
out
sar
sbb
dec
cmps
and
or
pslld
cmp
push
lods
popa
outs
and
push
xchg
idiv
call
ret
lods
mov
lock
cmc
call
xor
inc
scas
cs
pushf
scas
or
pop
lock
xor
rol
jl
in
add
outs
push
fisub
dec
ret
inc
jmp
inc
or
sbb
xchg
and
popa
cmps
mov
test
pop
mov
pop
mov
dec
(bad)
sub
cmps
pop
test
xchg
mov
or
(bad)
outs
jecxz
movs
jg
add
adc
jb
inc
and
and
mov
jmp
xchg
inc
mov
(bad)
out
popf
cmps
(bad)
cli
or
mov
loopne
mov
xchg
lea
push
adc
cmps
test
fcmovb
add
je
push
shl
movs
mov
(bad)
mov
sbb
int3
mov
inc
mov
add
jb
xor
mov
lock
mov
call
xchg
add
sub
repnz
adc
add
lock
shr
mov
rcl
xchg
mov
push
dec
xchg
es
xchg
cwde
push
shl
or
pop
daa
push
dec
cmp
add
jo
push
inc
ror
dec
leave
xchg
nop
movs
mov
pop
movs
les
and
fild
add
std
xchg
and
je
fst
mov
adc
inc
dec
jecxz
std
mov
xchg
push
idiv
cmp
mov
mov
push
push
cwde
outs
adc
shl
jbe
jo
pop
jbe
pusha
in
inc
mov
lock
out
(bad)
push
add
sub
mov
mov
ret
mov
xchg
arpl
fsubp
dec
cdq
ret
fmul
stc
js
mov
and
outs
sub
arpl
fwait
push
pop
inc
lock
les
or
sub
enter
scas
das
int
not
or
inc
fistp
mov
mov
pop
push
aad
movzx
stos
sti
jge
and
ror
mov
call
inc
cmp
outs
retf
xor
push
inc
mov
sahf
pop
xchg
sub
sti
xor
and
mov
adc
and
ficom
(bad)
lods
push
sub
add
jge
icebp
aas
or
sub
sub
es
nop
or
shr
mov
mov
add
cmp
inc
aaa
fadd
stc
or
push
iret
sub
cmc
adc
xchg
arpl
ss
cmp
call
push
aam
sbb
cmp
mov
mov
sti
push
(bad)
xor
xor
and
xor
cmp
or
add
dec
fimul
fmul
jmp
or
ds
xor
loop
iret
push
mov
xchg
outs
fisttp
shl
hlt
and
mov
es
aas
rol
sti
das
mov
xchg
xlat
dec
inc
loop
test
xlat
jg
adc
mov
cmps
adc
fiadd
in
call
std
or
into
dec
frstor
test
dec
out
dec
imul
jmp
test
je
cmc
push
clc
mov
call
adc
jp
push
mov
call
adc
cmps
movs
sbb
cmp
sbb
fnsave
(bad)
fild
cmp
xor
xor
jecxz
jl
add
add
fst
jle
pop
aad
dec
movs
or
fimul
push
les
jp
mov
inc
adc
sbb
adc
add
jbe
mov
daa
cmp
rcr
and
add
lods
cmp
push
dec
pop
int
mov
aam
int
fsqrt
inc
sbb
sbb
push
scas
mov
add
pop
icebp
(bad)
stos
and
cmp
mov
dec
in
mul
xor
jb
(bad)
or
pop
(bad)
sub
cmp
cdq
rol
out
xchg
xor
or
xchg
and
outs
aam
mov
iret
push
aaa
dec
xchg
xchg
aam
sub
movs
das
stc
nop
jbe
inc
fisubr
mov
movs
sbb
ret
(bad)
fwait
popf
sub
jne
xor
in
ja
add
xchg
or
cmps
mov
(bad)
mov
pop
mov
dec
or
das
sub
adc
test
push
test
cs
xchg
dec
aad
cmp
nop
imul
jns
inc
in
mov
sub
out
sbb
iret
jno
xchg
iret
push
sub
and
jmp
repz
mov
or
jae
pop
xchg
sub
sbb
dec
and
push
test
add
es
cmps
xor
xor
add
test
stos
adc
imul
cmps
dec
clc
cmp
jno
push
adc
addr16
fadd
test
push
cld
adc
jmp
retf
mov
push
add
ror
cmp
ja
xchg
dec
push
inc
(bad)
cmps
inc
xchg
mov
dec
jle
cmp
mov
cmp
stc
sbb
jle
dec
jb
fdiv
mov
imul
adc
mov
das
cmps
mov
mov
pop
inc
cmc
add
jge
sub
inc
int
and
retf
sbb
cwde
jl
jb
dec
mov
xchg
dec
adc
div
jg
push
(bad)
retf
(bad)
jmp
xlat
shl
adc
and
cli
sets
retf
loope
pop
dec
hlt
jne
xor
mov
in
in
sub
pop
cmps
sub
push
and
add
adc
pop
or
add
sub
outs
jne
mov
inc
adc
lea
and
mov
psadbw
lods
pop
outs
aaa
ret
jae
rcl
dec
mov
xchg
dec
sub
and
mov
int
lods
bound
shr
add
ins
sub
rcr
fs
stos
pop
jae
pop
dec
adc
adc
jnp
test
cmp
loopne
inc
xlat
adc
and
jge
fsub
stc
add
sahf
test
ffree
sub
pusha
cmp
cmp
ins
int
(bad)
loopne
mov
adc
jb
jnp
inc
aas
arpl
das
popf
xor
cmp
cmp
in
cs
dec
cli
fcomp
addr16
push
lahf
jecxz
nop
outs
cdq
sub
mov
repz
push
and
add
ret
ret
test
jae
mov
popf
inc
fisttp
pop
xchg
loop
pop
icebp
xchg
dec
and
mov
push
pushf
popa
jae
std
push
pop
ret
lock
mov
jmp
sub
sar
xor
mov
fld
in
mov
jne
lock
jo
out
ret
ret
mov
xor
dec
icebp
iret
mov
push
inc
fwait
test
test
mov
imul
xchg
std
pop
pop
je
popf
aad
adc
sub
or
inc
fwait
call
fs
das
jmp
cmp
into
jmp
stos
(bad)
scas
into
scas
in
enter
out
push
dec
xor
std
mov
fstp
cdq
dec
int3
clc
mov
in
idiv
ret
add
mov
retf
pop
push
push
mov
lahf
cmp
pop
xor
cmp
sbb
cmp
mov
dec
inc
jns
dec
(bad)
pop
in
cmp
sub
jmp
(bad)
repz
call
dec
ror
dec
dec
xchg
hlt
jmp
or
cld
stos
js
loop
push
sub
imul
cmp
out
push
mov
mov
fnstenv
dec
jmp
sub
mov
aad
ds
push
test
ret
mov
daa
push
fistp
pop
adc
mov
js
cwde
xchg
lea
and
and
jle
int
dec
fdivp
jo
(bad)
pop
(bad)
ficomp
dec
loop
inc
out
dec
jns
das
movs
cmp
jg
sbb
bound
sbb
lahf
jle
out
xor
cmc
adc
or
sub
adc
out
xchg
fsub
xlat
xor
pop
neg
popa
cld
jle
adc
xor
int3
dec
std
inc
jno
(bad)
dec
xor
lock
nop
into
nop
sbb
fs
dec
pop
push
pop
shr
rol
jae
jl
mov
xlat
inc
movlps
aaa
mov
mov
push
scas
xchg
ficomp
jl
adc
inc
xchg
ins
ins
cmp
stc
ret
ret
push
xchg
dec
addr16
scas
ror
daa
push
(bad)
jge
mov
lods
cmps
xchg
lods
repnz
push
inc
loop
push
or
loop
lea
xor
push
shl
out
xor
pusha
into
loop
loop
sub
push
pop
and
add
jns
adc
mov
inc
pop
test
mov
or
and
cmp
lods
repz
pop
mov
cmp
fwait
loope
stos
fsub
and
and
add
out
lods
fsin
addr16
xor
out
xor
movs
out
or
fs
ins
ins
sbb
cli
pop
pusha
test
xchg
retf
cs
xor
int
pop
pop
mov
cmp
sbb
push
dec
bnd
ret
aad
int
dec
ins
mov
add
mov
jp
test
push
aad
push
dec
das
call
mov
movs
out
xchg
out
xchg
cmp
dec
scas
sub
push
dec
cmc
xchg
jno
inc
mov
aad
hlt
outs
mov
(bad)
push
cld
jnp
arpl
(bad)
(bad)
in
push
shr
fadd
lods
addr16
lock
jmp
test
mov
icebp
cmp
loopne
std
pusha
aad
mov
inc
ret
pop
call
fsub
ins
cli
and
mov
or
aam
int3
loope
idiv
ins
ret
lea
sbb
test
pushf
daa
loopne
or
sub
push
fwait
cmp
mov
bound
jge
aaa
sbb
mov
push
pop
push
or
pop
xchg
jge
fbld
mov
rcr
or
jno
cmp
in
adc
fwait
sbb
inc
lock
mov
sub
jmp
jmp
lods
cmp
fmul
imul
cmc
out
mov
adc
out
sar
ss
xchg
jno
daa
and
sbb
inc
xor
adc
test
mov
mov
sub
dec
repz
repz
cdq
sbb
mov
mov
call
push
xchg
fnstenv
call
mov
push
cmps
jb
ret
push
mov
scas
cmp
xor
pop
and
mov
aas
test
cmp
adc
adc
pop
fmul
std
inc
(bad)
adc
mov
jbe
ret
mov
ret
dec
inc
mov
cdq
or
mov
jl
inc
and
enter
sti
pop
test
aas
dec
in
in
(bad)
test
sbb
adc
cmc
hlt
pop
repz
movs
add
xor
repnz
or
mov
call
push
add
xchg
test
xchg
retf
mul
mov
inc
mov
shr
xchg
push
adc
sbb
mov
(bad)
iret
and
test
xor
test
dec
push
xor
cli
push
mov
cmps
(bad)
xor
daa
inc
daa
fs
(bad)
push
loopne
xchg
mov
aas
cmp
(bad)
jbe
jbe
movs
jae
pop
mov
cmp
push
push
add
and
fwait
stos
iret
adc
test
rol
int3
stc
popa
and
lahf
xor
sub
jp
jno
xchg
std
ja
jecxz
sbb
adc
adc
sub
int
push
les
jecxz
add
loopne
pop
jo
push
jae
loop
(bad)
xchg
sbb
and
xor
out
pop
jg
adc
adc
cmps
imul
adc
(bad)
(bad)
int3
adc
mov
cmp
int3
(bad)
adc
sub
pop
sub
adc
and
push
dec
jbe
rcr
aam
xchg
mov
dec
dec
aam
cmp
add
mov
mov
pop
ret
mov
cmp
imul
and
or
mov
mov
mul
add
push
xchg
sbb
dec
inc
std
add
sbb
test
inc
imul
leave
sbb
jo
pop
jmp
xchg
fmul
dec
pusha
sub
fistp
add
sub
or
(bad)
rol
xchg
test
stos
add
push
push
pop
cmc
or
js
lods
jns
out
xlat
cmps
mov
mov
pushf
push
sub
xor
aaa
fdiv
lock
mov
push
add
lock
jmp
jle
loope
inc
lods
adc
inc
jl
ja
push
adc
xor
test
fsubr
or
sbb
cli
test
mov
sahf
iret
(bad)
sub
ss
fldcw
sbb
nop
inc
xchg
popf
mov
pop
out
dec
ret
in
in
ins
cmps
(bad)
xor
dec
pushw
mov
movs
mov
push
lods
pop
lods
or
test
int3
mov
mov
jle
jmp
add
inc
ja
inc
push
arpl
cld
sbb
cmp
mov
push
fiadd
mov
or
adc
cmc
inc
(bad)
jb
je
adc
data16
cmp
fsubrp
popa
mov
pop
mov
rcl
aad
sub
aaa
cdq
or
setns
(bad)
rcl
pop
test
or
(bad)
adc
test
das
ret
jp
mov
jmp
fnstcw
ret
std
jo
and
call
xor
xchg
add
xor
inc
enter
in
pop
cmp
clc
sub
inc
loopne
hlt
repnz
mov
xchg
cmp
ja
and
(bad)
int3
fstp
cwde
mov
cli
xor
nop
mov
je
push
add
cmp
in
xor
cmps
fisub
sub
pop
les
sub
cmc
jl
push
add
push
dec
inc
pop
cmp
nop
sub
shr
sub
mov
jo
cmp
neg
fcom
mov
lds
ror
stc
cmp
xor
dec
jmp
pop
ja
ficomp
sub
je
cmp
es
cmp
shl
cmp
add
fidiv
inc
loop
sub
xchg
lods
push
das
xchg
mov
shr
jge
cld
lahf
push
xor
daa
leave
jns
mov
retf
jg
add
rcr
or
popa
std
xor
mov
sbb
and
adc
add
mov
jnp
jg
ficom
mov
test
mov
add
push
vmovdqa
or
push
sbb
rcr
add
push
(bad)
inc
outs
sbb
addr16
mov
pop
jno
loop
cmp
lods
in
int3
ins
ret
sbb
push
mov
popf
pop
repnz
sbb
test
stos
mov
mov
dec
cmp
cmp
add
mov
lea
and
add
add
xor
inc
add
push
push
push
xor
pop
and
ins
cmp
(bad)
clc
stos
stos
retf
mov
jl
cmps
pop
dec
jp
inc
dec
sbb
jg
sub
jl
test
js
js
jno
popa
call
mov
mov
sub
jno
cmp
cli
fidivr
sub
adc
jmp
aaa
sbb
cmp
test
add
xchg
sbb
fidivr
or
jp
or
(bad)
or
cmc
scas
movsx
cmp
sub
loopne
(bad)
fwait
pusha
inc
mov
cmp
(bad)
fnstcw
cmc
sub
mov
sahf
les
pop
in
pop
push
mov
popa
cmp
cli
not
jg
push
hlt
mov
imul
and
cli
lahf
in
sub
or
mov
fnstenv
cmp
xor
shl
jp
pusha
cmp
cmp
and
cmp
(bad)
sub
cmp
pop
inc
sbb
mov
in
sbb
mov
mov
ret
pop
mov
mov
rcl
jne
and
or
ins
xchg
int3
in
or
stos
cs
sub
cmp
mov
out
xor
xor
xlat
jmp
aam
cmps
add
jl
or
inc
push
push
scas
or
and
sub
lods
test
hlt
into
dec
(bad)
sbb
ror
and
dec
push
add
popa
fld
psubsw
mov
aaa
inc
(bad)
add
jbe
inc
ror
inc
call
dec
xchg
mov
mov
int3
adc
pop
call
mov
repz
ret
push
mov
dec
xchg
mov
or
inc
lods
mov
cmp
sbb
sub
jb
or
into
or
add
fsubr
jno
add
pop
and
sbb
xchg
ja
inc
nop
(bad)
fsub
mov
shl
repz
adc
pop
sbb
or
or
mov
pop
sub
xchg
hlt
adc
and
jp
loope
xor
js
xor
rol
in
int3
sahf
ds
fld
pushf
call
push
repnz
aas
lods
dec
shl
(bad)
loope
cdq
cmp
stos
out
dec
arpl
dec
xor
out
retf
sbb
mov
xor
xchg
jbe
pop
ror
pushf
mov
scas
and
xchg
fnsave
xlat
jmp
push
inc
xor
ret
mov
mov
jae
pushf
xor
jb
and
xchg
psubusw
sub
iret
dec
or
rol
mov
aas
or
cs
(bad)
loopne
retf
adc
adc
ins
ret
xchg
les
pop
aad
mov
pop
inc
dec
mov
arpl
sbb
int
mov
ins
and
pushf
pop
popf
pop
sbb
je
test
jbe
cmp
movs
movs
sub
add
retf
daa
leave
jp
xchg
aad
jmp
add
in
jne
jno
test
inc
popf
fldcw
mov
test
xor
or
div
lods
add
sub
mov
push
(bad)
mov
push
fnstcw
or
and
int
mov
sbb
mov
retf
xlat
loope
cmp
aad
jns
std
test
jmp
mov
loop
bts
xchg
hlt
cmp
xor
imul
test
scas
add
jbe
sar
xor
dec
mov
cmp
cmp
add
fwait
cmp
push
push
ret
jnp
stc
and
test
pop
pop
test
sbb
mov
(bad)
and
fldenv
retf
mov
xchg
mov
fdivr
pop
add
shr
gs
cmps
add
xchg
cdq
leave
(bad)
retf
xchg
stos
or
ins
mov
dec
call
mov
xor
adc
test
jmp
retf
cwde
shr
inc
aaa
movs
adc
sbb
inc
dec
mov
inc
leave
gs
add
imul
mov
adc
call
(bad)
inc
in
add
or
sub
ins
push
(bad)
call
xchg
popf
and
aad
mov
mov
dec
lea
add
popf
and
enter
jecxz
in
jno
sub
bound
xor
cs
xchg
shl
imul
adc
loop
fs
pushf
pop
push
dec
xchg
sub
loop
sub
xchg
xchg
mov
or
adc
dec
push
inc
std
or
pusha
xor
retf
popf
and
mov
fild
xchg
daa
ins
cmp
bound
bound
popf
ret
and
xchg
inc
sbb
cs
ret
imul
mov
xor
addr16
or
nop
cmps
xchg
retf
cmp
scas
push
xor
arpl
and
jae
mov
jecxz
push
pop
add
push
xor
pushf
cld
push
cmp
push
xchg
or
and
and
loop
lods
icebp
and
sbb
xchg
push
bound
fild
ins
sbb
pop
add
ja
popf
ret
jecxz
gs
dec
inc
in
sbb
xchg
inc
xor
in
push
pop
and
arpl
leave
jmp
and
andps
jmp
jne
pop
movs
or
sbb
push
fist
hlt
xchg
jmp
bound
rcr
and
push
loopne
je
adc
movs
or
add
call
push
xor
pop
jne
push
and
les
sti
pop
xor
cmp
jmp
daa
jmp
sub
sub
in
das
jne
lods
in
(bad)
and
xchg
jle
cmp
add
and
test
jae
(bad)
sti
push
push
out
xor
add
lds
mov
fadd
pushf
push
mov
xor
xchg
pop
cmc
jne
jl
or
and
pop
mov
in
adc
ficom
inc
stos
std
and
fisttp
sub
sbb
jg
shr
push
sbb
aaa
add
(bad)
fstp
or
sbb
mov
pop
sbb
ds
mov
push
stos
mov
mov
test
add
mov
dec
out
test
and
add
cli
cmp
(bad)
out
in
jnp
or
lss
dec
sbb
push
ss
cmp
test
mov
jmp
push
call
retf
mov
push
dec
xor
enter
jmp
mov
sbb
ds
adc
push
fwait
add
retf
stc
aad
aad
(bad)
loop
and
and
push
pop
in
dec
cmp
dec
add
out
mov
call
push
mov
mov
adc
inc
hlt
gs
ins
dec
fs
or
push
sub
stos
(bad)
adc
out
rcl
sub
lds
push
mov
sbb
jnp
mov
adc
mov
xor
add
add
inc
and
push
add
xchg
out
imul
test
mov
in
mov
mov
jge
sbb
and
pop
std
cs
idiv
fs
or
inc
repnz
mov
pop
lods
cmps
scas
push
ins
sub
cli
into
cmc
mov
mov
add
idiv
add
mov
hlt
mov
aad
aam
hlt
mov
les
lock
movs
out
jne
pop
mov
push
nop
adc
scas
icebp
mov
mov
mov
outs
jmp
out
dec
adc
fwait
mov
adc
adc
add
bound
dec
pop
jmp
gs
mul
inc
rol
inc
push
les
dec
les
jmp
sub
imul
mov
sti
mov
movs
test
push
mov
call
cmps
xchg
xchg
(bad)
lods
leave
sbb
jnp
into
lds
hlt
add
xlat
int
ins
add
imul
push
fs
(bad)
add
mov
mov
ins
xchg
cmps
pop
xchg
loopne
pop
jge
arpl
jge
mov
fwait
mov
push
push
aaa
sahf
inc
icebp
inc
nop
loop
gs
mov
sar
ins
jg
and
idiv
fdiv
test
idiv
xor
ins
push
pop
push
popf
add
ror
cwde
push
shl
push
or
mov
bound
jge
inc
and
ins
loope
lea
and
sub
mov
jge
sahf
sub
es
xchg
imul
mov
sahf
ins
enter
icebp
dec
push
xor
ds
add
jb
popf
shl
cmp
cs
jge
int
je
sbb
pop
add
inc
sahf
cmp
lahf
ins
out
(bad)
xchg
and
add
xchg
inc
out
(bad)
(bad)
jg
outs
lock
arpl
mov
mov
inc
lock
jle
ret
sbb
xchg
int
inc
sti
movs
fisub
push
icebp
popa
icebp
das
fadd
stos
or
ds
mov
rcr
call
push
jmp
mov
clc
sbb
push
jnp
test
cli
mov
lds
jns
fs
or
mov
in
adc
fsub
jae
xchg
hlt
lock
pop
jp
leave
add
dec
mov
mov
hlt
sar
or
adc
jmp
sub
sub
test
pop
mov
push
sbb
sub
pop
(bad)
dec
test
stos
jmp
fidivr
or
jmp
js
adc
pop
jne
pop
push
pop
sbb
or
movs
xchg
stos
inc
mov
adc
pop
not
push
jbe
cmc
mov
jne
call
jae
jp
sbb
jg
push
out
mov
dec
or
shr
jmp
les
push
jp
pop
sbb
pop
ss
stos
hlt
fisub
ss
fimul
das
sub
pop
mov
stos
push
push
xor
xor
xchg
mov
push
lods
in
fld
shr
mov
clc
pushf
stos
ret
sbb
dec
(bad)
dec
ror
sbb
mov
cli
out
es
sub
icebp
xchg
mov
or
sar
dec
int3
dec
xchg
or
rol
lods
adc
jno
push
adc
xor
repnz
xchg
adc
pop
ins
push
and
mov
in
mov
(bad)
dec
push
mov
xchg
mul
adc
shl
mov
push
pushf
pop
shr
mov
push
dec
mov
lods
xchg
bound
cmp
push
inc
popa
jecxz
mov
iret
push
pop
inc
mov
nop
push
fidiv
fdivrp
jb
jmp
pop
(bad)
sub
lods
popf
dec
mov
ins
fst
scas
add
ins
jns
retf
push
pop
std
adc
cdq
add
pop
sahf
mov
arpl
shl
mov
fidivr
adc
inc
shl
out
sbb
and
xlat
jmp
pop
jno
push
push
and
dec
out
cwde
sub
inc
xor
es
pop
dec
mov
mov
lods
inc
cwde
dec
stc
adc
add
jp
ret
repz
jns
pop
fs
xor
pushf
xor
rcr
jl
mov
add
dec
xchg
cld
mov
inc
pushf
cmp
int
pop
mov
fst
nop
dec
jb
pop
mov
fs
outs
aam
movs
pop
sbb
jne
mov
or
inc
xchg
push
sub
mov
sbb
arpl
jl
outs
shr
fnclex
addr16
call
loope
and
in
out
hlt
ds
hlt
sub
dec
push
stc
and
imul
pop
repnz
imul
jle
outs
ror
pop
push
or
ins
mov
das
mov
adc
repnz
adc
mov
(bad)
or
inc
sbb
push
outs
sbb
push
dec
mov
xchg
jg
pop
xlat
lds
in
xchg
and
sti
mov
add
int3
pop
sar
aad
mov
dec
sbb
out
xor
mov
mov
jne
ja
xchg
xor
mov
mov
cmps
mov
shr
adc
fbld
ss
ret
xor
sbb
(bad)
movs
lahf
and
cmps
mov
test
xor
pop
rcl
add
jae
mov
xor
mov
in
jns
xchg
pop
mov
sahf
pop
call
mov
es
cmp
mov
inc
mov
call
lahf
push
pusha
mov
pop
cmp
or
xor
and
xor
arpl
lea
repz
mov
gs
jne
imul
sbb
adc
outs
es
shl
lds
sbb
push
fdiv
into
out
mov
pop
add
sbb
sub
das
fwait
cmp
cs
mov
inc
repnz
fmul
gs
xchg
dec
lea
cli
shl
cmp
imul
retf
mov
in
jnp
mov
jne
(bad)
or
sbb
sbb
or
ss
pop
icebp
and
push
sub
cmp
pop
cmp
stos
inc
cdq
wrmsr
cdq
cld
push
out
push
xor
cwde
adc
sub
out
nop
mov
shl
inc
psubb
mov
mov
lds
mov
push
ret
sub
dec
jns
retf
and
daa
or
cmc
sbb
retf
sub
in
je
(bad)
and
bound
pop
adc
adc
pop
mov
fdivr
mov
les
out
shr
into
cmp
xor
adc
popa
xchg
jae
sahf
add
(bad)
nop
jge
sbb
fdiv
cmp
int3
pop
pop
xor
daa
aaa
aad
mov
or
iret
(bad)
sar
mov
dec
pop
xchg
sbb
xchg
and
sbb
pop
daa
mov
xor
rcr
adc
fcom
daa
std
push
lea
pop
(bad)
inc
cmps
and
mov
adc
pop
cs
push
push
xchg
rol
ret
ror
pop
cmp
sbb
add
sub
popa
xor
jno
mov
xor
outs
dec
pop
pushf
ins
cmp
add
ins
dec
or
outs
cmc
xchg
call
sti
and
pop
cmps
js
sbb
(bad)
and
and
and
scas
jbe
pop
sub
sub
adc
and
pop
mov
lock
imul
pop
stos
jne
pop
movs
jnp
sbb
jmp
fbld
cld
and
jge
push
lods
jae
adc
hlt
sub
and
daa
sbb
jge
adc
std
sub
test
test
test
hlt
sub
sub
je
movs
jp
pop
movs
jnp
sbb
(bad)
and
lods
jo
push
stos
je
adc
cmc
sub
adc
js
pop
cmps
jle
push
and
and
and
and
jge
push
lods
jb
adc
icebp
das
adc
ja
pop
sub
sub
sub
adc
pop
movs
jnp
sbb
stc
daa
fisub
jmp
pop
mov
jl
sbb
cld
and
and
and
lods
jae
adc
lock
icebp
das
push
test
test
sbb
(bad)
and
mov
jg
pop
and
and
and
and
lods
jb
adc
call
sub
(bad)
mov
or
fdiv
or
push
outs
xor
add
and
ins
dec
ret
xor
xchg
nop
retf
stc
jb
sbb
lods
xchg
inc
sar
pop
dec
loopne
outs
arpl
repz
aaa
popa
sbb
movs
sbb
xchg
(bad)
aad
hlt
dec
retf
mov
call
dec
add
sar
dec
aam
push
imul
jae
pop
xchg
push
and
int
ins
les
and
push
dec
and
dec
retf
movs
sub
stos
jg
cmp
call
std
stos
xor
xor
and
mov
cmc
test
sbb
mov
inc
dec
or
scas
in
(bad)
adc
(bad)
fwait
mov
movs
or
retf
or
dec
inc
sar
adc
out
mov
pusha
loope
bnd
out
or
inc
mov
xchg
pop
inc
mov
sub
sbb
rcl
std
dec
or
adc
cld
fdivp
cs
push
inc
xor
cmp
hlt
cmps
or
lahf
pop
jecxz
and
inc
and
jae
push
int3
aaa
mov
adc
fcmovu
adc
jnp
and
mov
in
stos
test
add
jge
xor
sub
fwait
push
outs
sub
call
mov
test
xchg
leave
gs
xchg
mov
imul
clc
movs
out
and
pop
loope
ins
dec
out
xchg
push
pop
ins
cs
jnp
js
in
in
in
or
ret
sub
pop
imul
stos
jle
outs
jns
loopne
and
lock
cmp
int3
repnz
pushf
cmp
(bad)
xor
nop
sbb
lea
mov
aad
mov
mov
movs
push
pop
pop
out
push
outs
pop
arpl
and
jno
sub
xor
add
inc
cs
dec
cmp
push
jmp
inc
pop
xor
retf
push
mov
mov
mov
push
pop
sub
outs
mov
imul
mov
push
pop
jns
repnz
add
sub
or
adc
inc
aad
leave
xor
xor
sub
sub
or
dec
fld
fadd
adc
in
push
pop
imul
jns
xchg
fistp
adc
sub
mov
sti
add
(bad)
in
push
mov
std
mov
push
or
out
xor
test
mov
fcmovnu
mov
mov
ret
dec
pop
out
mov
retf
loope
mov
je
jno
mov
cli
lock
sbb
mov
cmps
xor
mov
out
(bad)
das
mov
fdiv
out
bound
mov
stc
push
fdiv
out
sar
(bad)
ja
sub
xchg
push
and
bnd
and
mov
dec
rcr
test
push
pop
pop
pop
xchg
sub
retf
nop
pop
ret
dec
bnd
and
sahf
sbb
mov
mov
sub
and
sub
(bad)
mov
jmp
ins
daa
pop
test
in
cmp
cld
sbb
lock
inc
popf
daa
pop
mov
add
cdq
fbstp
test
test
mov
test
mov
ds
outs
jp
inc
in
xchg
or
ror
loop
leave
loop
and
cmp
out
and
mov
mov
sub
and
jmp
enter
pushf
mov
ss
jb
and
or
into
test
and
imul
retf
adc
ret
push
out
cmp
or
dec
int
add
pop
dec
mov
push
dec
adc
or
mov
cmps
xchg
pop
pop
cmps
retf
push
cli
cmp
stos
into
dec
cmp
mov
adc
ret
nop
jl
xchg
movs
jg
mov
fld
inc
pop
lods
xchg
mov
xchg
ins
xchg
inc
arpl
mov
mov
imul
and
(bad)
fdivr
cwde
ds
or
push
rcr
mov
call
jp
in
or
inc
jmp
or
in
dec
bound
std
ret
dec
add
in
add
ins
movs
pushf
mov
pop
adc
pcmpgtw
cmp
cs
adc
int3
shl
cmp
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
push
mov
call
mov
add
test
push
je
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
call
neg
pop
sbb
pop
neg
pop
add
pop
mov
xor
call
add
ret
call
add
test
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
test
jne
mov
push
call
add
test
jne
mov
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
push
call
add
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
lea
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
jbe
pop
pop
movzx
pop
add
pop
mov
xor
call
add
ret
mov
pop
pop
mov
pop
pop
xor
mov
call
add
ret
cmp
inc
add
add
inc
add
test
add
jg
add
jge
add
inc
add
inc
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
sub
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
mov
or
add
add
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
call
add
cmp
jne
mov
mov
shl
or
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
je
sub
je
mov
mov
jmp
mov
mov
jmp
mov
mov
test
je
mov
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
fcomp
fnstsw
test
jp
mov
ret
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
add
cmp
push
ja
jmp
fld
sub
fstp
call
add
pop
pop
ret
mov
mov
shl
mov
pop
sub
and
shl
add
pop
ret
mov
mov
shl
pop
sub
and
shl
add
pop
ret
mov
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
pop
ret
lea
add
inc
add
inc
add
test
jmp
inc
or
push
mov
jne
or
pop
add
ret
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
pop
add
ret
push
mov
mov
call
mov
push
jmp
lea
lea
push
push
call
add
test
jne
cmp
jne
cmp
jl
mov
cmp
je
mov
test
jne
mov
push
push
call
add
pop
pop
xor
pop
add
ret
mov
sub
pop
sar
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
mov
push
push
call
mov
add
add
cmp
jge
mov
mov
shl
lea
nop
cmp
jne
add
add
cmp
jl
sub
mov
mov
shl
cmp
jge
mov
mov
shl
lea
jmp
lea
cmp
jne
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
fild
mov
shl
fstp
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
shl
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
push
mov
push
push
xor
xor
xor
cmp
lea
jle
mov
lea
mov
mov
test
jle
add
mov
cdq
sub
sar
cmp
jle
mov
mov
cmp
je
add
add
mov
cdq
sub
sar
cmp
jl
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
push
xor
mov
mov
mov
mov
mov
xor
cmp
mov
jle
mov
cmp
jg
jmp
cmp
jg
mov
mov
mov
sub
shl
add
lea
add
cmp
je
add
add
sub
jne
mov
add
add
add
add
cmp
jle
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
mov
shl
push
mov
mov
test
je
mov
shl
mov
sub
add
sub
cmp
je
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
mov
lea
add
add
mov
jmp
xor
add
add
test
jne
mov
mov
add
mov
pop
pop
mov
pop
ret
mov
mov
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
cmp
ja
mov
mov
shl
push
mov
shl
push
push
push
call
add
jmp
push
call
add
mov
cmp
mov
jge
mov
mov
shl
sub
xor
push
mov
mov
add
sub
jne
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
xor
cmp
jne
xor
shl
mov
add
mov
mov
pop
pop
pop
ret
add
push
call
mov
add
add
cmp
jle
mov
push
push
call
add
mov
mov
shl
lea
cmp
ja
mov
mov
shl
push
push
push
push
call
add
jmp
mov
push
call
add
cmp
mov
jle
xor
mov
nop
mov
add
add
sub
mov
mov
mov
jne
shl
add
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
xor
push
push
push
call
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
call
add
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
push
mov
je
mov
mov
shl
push
shl
push
push
push
call
add
mov
mov
push
shl
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
lea
cmp
jae
mov
shl
lea
pop
add
ret
fild
fst
fldz
fucomp
fnstsw
test
jp
mov
jmp
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
shl
add
mov
cmp
jne
fcom
fnstsw
test
jnp
mov
test
jne
mov
fstp
pop
add
ret
mov
fstp
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
shl
mov
sub
and
shl
add
mov
cmp
jne
cmp
je
mov
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
sub
je
sub
je
sub
jne
mov
pop
add
mov
jmp
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
mov
push
push
call
add
pop
add
ret
mov
push
mov
call
mov
lea
lea
push
push
call
add
test
jne
mov
test
jne
pop
mov
pop
add
ret
mov
pop
pop
add
ret
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
cmp
mov
jne
mov
test
push
mov
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
push
push
mov
call
add
cmp
je
mov
mov
add
cmp
ja
push
push
call
add
cmp
jne
mov
sub
cmp
jbe
push
lea
shr
push
push
call
add
cmp
jne
mov
jmp
mov
push
push
call
add
cmp
je
add
push
push
call
add
cmp
jne
lea
pop
pop
pop
ret
mov
mov
sub
cmp
ja
pop
pop
pop
mov
pop
ret
mov
mov
test
push
jbe
mov
mov
shl
cmp
jne
xor
cmp
jbe
push
lea
shr
mov
shl
cmp
jne
mov
jmp
mov
mov
sub
cmp
ja
pop
mov
pop
ret
cmp
je
pop
mov
jmp
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
movzx
mov
cmp
mov
push
mov
mov
jle
mov
mov
call
mov
mov
push
mov
call
add
cmp
jge
lea
mov
mov
mov
shl
mov
mov
mov
mov
sub
jmp
lea
mov
mov
cmp
lea
je
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
add
add
sub
jne
cmp
ja
mov
mov
push
shl
push
push
push
call
add
mov
jmp
mov
push
call
mov
add
mov
jmp
mov
mov
mov
shl
lea
test
mov
jl
mov
mov
shl
lea
cmp
je
push
push
call
add
cmp
mov
jne
mov
test
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
test
jge
mov
cmp
je
push
shl
push
push
push
call
add
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
xor
push
mov
push
push
call
add
ret
mov
mov
shl
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
lea
push
lea
push
mov
mov
call
add
add
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
lea
add
add
mov
jmp
xor
add
lea
push
lea
call
mov
mov
sub
add
push
push
push
mov
call
add
pop
pop
add
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
mov
call
mov
cmp
jne
cmp
jne
mov
cmp
mov
jbe
add
mov
cmp
je
mov
cmp
ja
add
jmp
test
jne
mov
push
mov
mov
call
push
push
push
call
add
pop
pop
pop
pop
ret
lea
mov
call
cmp
je
cmp
je
mov
cmp
jne
mov
mov
mov
rep
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
test
je
test
je
mov
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
call
add
cmp
jne
mov
lea
push
push
push
mov
mov
call
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movzx
and
sub
cmp
ja
push
mov
mov
jmp
mov
or
test
je
test
je
push
push
call
add
mov
test
je
and
movzx
sub
cmp
jbe
pop
pop
ret
mov
cmp
jl
mov
test
je
push
push
call
add
lea
cmp
jne
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
adc
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
mov
mov
xor
test
je
mov
test
jne
cmp
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
or
mov
mov
mov
mov
test
lea
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
xor
cmp
mov
mov
je
test
je
push
mov
push
call
add
mov
cmp
je
test
jne
mov
mov
push
push
push
call
mov
add
cmp
je
cmp
jne
mov
add
push
push
call
mov
mov
neg
sbb
add
push
neg
push
mov
call
add
neg
sbb
neg
test
mov
jne
test
je
mov
mov
add
or
add
add
add
and
or
mov
mov
mov
mov
mov
test
je
test
je
pop
pop
pop
mov
pop
pop
ret
test
jne
mov
test
je
mov
mov
shl
jmp
lea
mov
sub
add
sub
cmp
jl
mov
test
je
push
push
call
add
test
jne
mov
mov
shl
test
je
mov
shl
lea
mov
sub
add
sub
cmp
jne
cmp
jl
mov
jmp
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
test
jne
cmp
jne
cmp
jne
pop
pop
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
mov
and
push
xor
cmp
jle
push
xor
jmp
lea
mov
add
cmp
jl
mov
test
je
mov
push
push
call
add
add
add
cmp
jl
pop
xor
cmp
jle
mov
cmp
je
mov
mov
and
add
cmp
jl
xor
cmp
jle
mov
cmp
lea
je
mov
test
je
push
mov
push
call
add
add
cmp
jl
xor
cmp
jle
xor
jmp
lea
mov
cmp
je
mov
lea
mov
mov
mov
and
mov
add
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
push
push
call
add
cmp
push
push
je
xor
cmp
jbe
lea
cmp
jl
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
mov
test
je
push
push
call
add
xor
cmp
jbe
lea
lea
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jl
mov
test
je
push
mov
push
call
add
mov
mov
cmp
push
mov
push
push
mov
ja
nop
mov
cmp
jae
mov
add
cmp
jbe
mov
cmp
jae
cmp
jl
mov
test
je
mov
push
push
call
add
add
cmp
jb
cmp
ja
xor
mov
add
cmp
jbe
sub
mov
sar
cmp
jg
mov
sub
mov
imul
sar
mov
shr
add
add
add
cmp
jge
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
lea
cmp
jge
cmp
jle
cdq
sub
sar
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
movzx
or
add
cmp
ja
jmp
mov
push
push
mov
call
add
test
je
and
mov
mov
mov
shl
pop
pop
lea
shl
ret
mov
mov
call
cmp
movzx
je
shl
pop
add
pop
ret
pop
lea
pop
ret
mov
mov
mov
push
mov
mov
and
push
mov
call
mov
mov
add
add
pop
lea
shl
pop
lea
pop
ret
mov
push
mov
call
mov
mov
lea
lea
add
add
add
add
add
pop
lea
pop
ret
pop
xor
pop
ret
xor
inc
add
cdq
inc
add
cdq
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
push
mov
test
mov
je
test
je
mov
shl
jmp
lea
mov
sub
mov
add
sub
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
mov
test
jne
mov
mov
shl
test
je
mov
shl
nop
mov
sub
add
sub
cmp
je
mov
cmp
jl
mov
jne
and
jmp
test
jne
mov
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
cmp
mov
jl
mov
test
jne
mov
test
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
movzx
add
cmp
ja
jmp
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
mov
add
mov
push
add
push
push
push
call
add
ret
mov
push
add
push
push
push
call
add
ret
lea
pop
fwait
inc
add
add
fwait
inc
add
inc
add
inc
add
fwait
inc
add
fwait
inc
add
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
movzx
push
push
mov
mov
xor
test
je
lea
mov
mov
sub
test
mov
jbe
cmp
jne
mov
push
lea
push
push
call
add
mov
movzx
xor
test
je
mov
and
and
or
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
test
jne
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
mov
cdq
and
add
sar
cmp
jae
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
cmp
jbe
push
mov
shr
lea
cmp
ja
mov
push
push
push
push
call
add
mov
pop
mov
pop
ret
push
call
add
mov
mov
pop
pop
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
or
mov
test
mov
je
test
jne
mov
mov
push
push
push
call
add
test
je
mov
push
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
push
add
push
push
call
mov
add
mov
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
cmp
je
mov
call
mov
cmp
jne
pop
ret
push
mov
push
mov
push
push
lea
push
push
mov
call
xor
add
cmp
jle
mov
push
lea
push
push
call
add
add
cmp
jl
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
lea
mov
mov
test
je
test
je
push
push
call
add
add
sub
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
cmp
je
nop
test
jne
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
call
xor
cmp
je
mov
call
cmp
jne
mov
mov
mov
test
je
push
push
call
add
push
call
add
cmp
je
jmp
lea
mov
call
cmp
jne
mov
cmp
mov
mov
je
lea
mov
call
cmp
jne
mov
mov
mov
mov
test
je
lea
mov
test
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
mov
mov
or
lea
mov
mov
mov
test
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
mov
test
je
mov
mov
mov
mov
and
and
or
push
push
mov
call
add
cmp
jne
xor
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
xor
add
sub
sub
lea
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
movzx
cmp
push
ja
jmp
mov
call
pop
pop
xor
pop
ret
cmp
je
pop
pop
mov
pop
jmp
push
call
add
pop
pop
xor
pop
ret
mov
mov
mov
lea
push
push
add
push
mov
call
mov
add
cmp
jl
mov
mov
sub
add
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
add
mov
cmp
jne
push
mov
call
mov
pop
mov
sub
add
pop
pop
mov
pop
ret
xor
cmp
je
call
mov
cmp
jbe
add
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
xor
pop
ret
mov
ins
mov
inc
add
mov
inc
add
pop
and
push
mov
mov
push
lea
add
jne
mov
mov
sub
add
mov
call
sub
cmp
je
test
jg
cmp
je
mov
cmp
jae
mov
add
pop
mov
pop
pop
ret
mov
add
pop
mov
mov
pop
pop
ret
mov
mul
shr
imul
pop
mov
pop
pop
ret
int3
int3
int3
push
push
mov
mov
cmp
ja
xor
lea
mov
mov
mov
mov
mov
mov
cmp
je
lea
mov
call
cmp
jne
call
cmp
je
mov
call
cmp
jne
mov
mul
shr
imul
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
push
push
call
add
ret
mov
mov
mov
and
and
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
mov
mov
mov
test
jne
cmp
jne
mov
or
mov
cmp
jl
mov
test
je
test
je
push
push
push
call
add
pop
pop
ret
mov
and
and
or
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
shl
add
push
push
push
push
call
mov
push
push
push
call
mov
add
pop
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
push
push
lea
push
push
push
push
call
mov
push
push
push
call
mov
add
test
mov
mov
mov
je
lea
sub
sub
test
mov
jne
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
push
push
push
call
lea
add
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
mov
push
lea
push
mov
je
mov
mov
cmp
jb
je
cmp
mov
jne
push
push
push
push
call
mov
mov
mov
add
and
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
pop
pop
pop
ret
mov
movzx
movzx
and
not
test
je
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
cmp
je
mov
push
mov
mov
mov
mov
mov
pop
push
push
push
mov
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
je
push
mov
push
lea
mov
cmp
jb
mov
mov
movzx
movzx
not
and
test
lea
je
cmp
je
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
call
add
cmp
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
xor
push
push
push
call
mov
push
push
push
call
add
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
push
mov
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
mov
push
shl
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
lea
mov
add
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
movzx
je
shl
add
push
push
mov
push
push
call
add
ret
lea
push
push
mov
push
push
call
add
ret
int3
mov
mov
push
push
xor
test
push
jle
mov
mov
mov
lea
mov
cmp
jg
cmp
jge
sub
je
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
pop
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
cmp
push
mov
ja
jmp
push
push
push
call
add
mov
mov
add
mov
pop
pop
ret
push
push
jmp
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
pop
pop
ret
push
cmps
inc
add
cmps
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
lea
push
mov
lea
push
push
mov
mov
call
add
test
jne
mov
mov
push
push
call
mov
mov
add
mov
pop
mov
pop
ret
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
mov
sub
sar
shl
add
push
mov
mov
test
je
lea
mov
sub
sar
shl
add
mov
mov
test
jne
mov
cmp
ja
nop
mov
sub
sar
shl
add
add
mov
mov
sub
sar
shl
add
mov
mov
sub
sar
shl
add
mov
cmp
jbe
mov
sub
sar
shl
add
pop
mov
ret
int3
int3
push
push
push
mov
mov
push
mov
lea
lea
cmp
ja
mov
mov
shl
push
shl
push
push
push
call
add
jmp
push
call
add
shl
add
mov
pop
mov
mov
mov
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
lea
cmp
ja
mov
lea
add
lea
add
add
add
push
add
add
push
push
push
call
add
jmp
push
call
add
mov
mov
sub
mov
imul
sar
mov
shr
add
lea
lea
lea
mov
lea
pop
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
cmp
mov
jg
add
mov
jmp
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
mov
je
cmp
je
mov
mov
mov
push
mov
push
mov
push
mov
sub
sub
mov
cmp
mov
mov
jne
mov
jmp
sub
mov
mov
imul
sar
mov
shr
add
mov
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
mov
lea
add
push
mov
push
mov
call
mov
mov
add
add
mov
mov
mov
add
pop
pop
mov
pop
mov
pop
xor
call
add
ret
int3
int3
sub
push
movzx
push
push
mov
xor
cmp
mov
jge
mov
sub
add
mov
mov
mov
add
sub
jne
test
je
mov
mov
mov
sub
cmp
mov
jb
push
call
add
push
push
push
call
mov
add
xor
test
jle
mov
neg
shl
mov
jmp
lea
mov
mov
mov
lea
push
push
push
add
call
mov
add
mov
mov
mov
mov
mov
mov
add
cmp
jl
mov
mov
push
push
push
call
mov
push
push
push
call
fild
mov
add
fstp
mov
mov
shl
mov
sub
test
jle
add
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
jne
test
je
mov
lea
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
call
mov
sub
mov
add
cmp
je
push
push
push
call
add
mov
cmp
jbe
lea
mov
mov
mov
mov
mov
mov
sub
sub
cmp
ja
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
add
mov
mov
add
mov
mov
mov
mov
pop
mov
pop
ret
sub
push
push
push
push
mov
call
mov
mov
mov
add
cmp
jne
test
je
mov
mov
test
lea
mov
je
push
push
push
call
add
test
jne
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
test
push
je
call
mov
lea
mov
mov
test
mov
mov
mov
mov
mov
mov
je
push
lea
cmp
jae
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
jne
pop
xor
cmp
jle
jmp
lea
sub
mov
add
cmp
jg
mov
pop
mov
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
lea
nop
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
sub
mov
add
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
mov
pop
ret
add
push
push
call
add
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jbe
push
push
call
add
mov
mov
shl
sub
mov
mov
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
call
mov
mov
mov
mov
add
cmp
jb
push
call
add
cmp
mov
je
mov
mov
push
mov
lea
push
push
push
call
mov
mov
movzx
push
push
push
call
xor
add
mov
cmp
mov
jbe
push
lea
nop
push
call
mov
movzx
add
add
add
cmp
jl
mov
pop
mov
mov
mov
mov
sub
mov
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
pop
pop
ret
add
push
push
call
add
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
mov
call
mov
mov
push
push
push
call
mov
add
cmp
mov
mov
jle
mov
sub
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
add
xor
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
push
add
push
call
mov
mov
mov
cmp
je
push
call
mov
mov
push
call
add
push
call
int3
int3
int3
int3
int3
int3
mov
cmp
jle
push
push
call
add
push
push
call
add
cmp
jle
push
push
call
add
add
mov
ret
int3
int3
int3
mov
cmp
push
push
mov
push
je
mov
call
mov
mov
mov
sub
mov
mov
mov
sub
cmp
mov
jne
push
mov
movzx
mov
shl
cmp
jg
mov
cmp
jg
lea
push
jmp
add
push
push
call
add
mov
add
cmp
jne
movzx
shl
lea
lea
cmp
jbe
mov
jmp
mov
sub
sar
sub
push
mov
call
mov
add
add
mov
mov
cmp
jne
call
jmp
add
mov
mov
mov
mov
movzx
shl
add
mov
mov
mov
mov
xor
mov
mov
mov
cmp
pop
jae
jmp
lea
mov
add
cmp
jb
test
mov
mov
je
add
push
push
push
call
add
add
pop
pop
xor
pop
ret
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
cmp
jne
call
jmp
add
mov
mov
add
mov
add
mov
mov
mov
mov
add
mov
mov
test
je
push
push
push
call
add
mov
mov
mov
mov
push
call
add
test
jge
pop
pop
mov
pop
ret
mov
shl
sub
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
movzx
cmp
jb
jne
push
push
call
add
mov
mov
push
push
push
call
add
test
jne
push
push
call
add
mov
add
mov
cmp
jb
push
call
add
pop
ret
cmp
jb
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
mov
jne
mov
push
add
push
push
call
add
test
jne
jmp
mov
mov
mov
cmp
je
mov
push
push
call
add
test
je
mov
mov
mov
jmp
mov
mov
mov
sub
mov
imul
sar
mov
shr
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
test
jne
mov
cmp
je
mov
call
pop
ret
movzx
cmp
jb
mov
call
pop
ret
mov
mov
shl
push
sub
push
add
push
push
mov
mov
call
mov
add
test
je
mov
push
push
push
mov
call
mov
mov
add
mov
mov
add
pop
pop
ret
movzx
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
push
push
push
mov
movzx
mov
mov
sub
push
mov
mov
mov
mov
mov
push
push
push
mov
mov
call
mov
add
test
je
mov
add
push
push
call
push
push
push
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
add
cmp
mov
jle
sub
mov
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
mov
add
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
push
mov
mov
sub
push
push
mov
lea
push
push
push
mov
mov
call
mov
push
mov
mov
push
push
push
call
add
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
push
push
call
add
test
jne
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
cmp
je
push
push
push
call
add
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
test
jne
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
cmp
jne
push
push
call
push
push
call
mov
add
push
push
push
call
add
ret
push
push
push
call
mov
add
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
push
lea
push
push
push
mov
call
add
push
push
mov
call
add
test
je
lea
push
push
push
call
add
push
push
call
add
test
jne
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
call
add
cmp
jne
push
push
push
call
push
push
push
call
push
push
mov
call
push
push
push
call
add
lea
push
push
push
call
add
test
jne
mov
push
push
jmp
push
push
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
lea
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
add
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
push
mov
call
add
push
push
call
add
test
je
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
add
push
push
call
push
lea
push
push
call
mov
add
test
je
push
push
push
call
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
lea
push
push
call
push
push
call
push
push
push
call
add
push
push
call
push
lea
push
push
call
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
push
mov
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
add
cmp
jne
push
mov
mov
mov
push
push
call
mov
add
test
pop
jl
push
push
call
add
push
push
push
call
add
pop
ret
push
call
add
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
push
push
xor
call
add
test
je
mov
push
push
call
add
test
je
or
push
push
call
add
test
je
or
cmp
jle
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
call
push
push
call
push
push
call
add
cmp
je
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
push
call
add
test
jg
push
push
call
xor
add
mov
xor
jmp
push
lea
push
push
call
push
push
push
mov
call
push
add
push
push
call
mov
push
mov
call
add
mov
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
mov
jmp
mov
push
push
call
push
mov
call
add
test
je
cmp
je
push
push
push
call
add
jmp
call
push
push
call
push
push
call
push
push
call
add
xor
test
je
mov
mov
test
je
mov
add
test
pop
je
mov
add
mov
lea
push
push
call
push
call
push
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
call
add
push
push
call
call
push
lea
push
push
call
add
test
je
push
push
mov
lea
mov
xor
repz
je
lea
lea
mov
add
test
jne
sub
push
push
lea
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
call
add
push
push
push
push
call
add
push
call
call
add
push
push
call
add
push
push
call
call
add
push
push
call
call
push
lea
push
push
call
add
test
jne
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
mov
push
push
mov
call
add
cmp
jne
push
push
mov
call
add
mov
jmp
mov
mov
mov
lea
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
jmp
xor
cmp
sete
mov
push
call
add
cmp
jne
push
push
jmp
lea
push
push
call
add
test
je
push
push
push
call
add
push
push
push
call
lea
push
push
push
call
add
test
je
add
cmp
jle
cmp
je
lea
push
lea
push
push
call
add
test
jne
mov
sub
mov
jmp
push
push
push
call
lea
push
push
push
call
add
test
je
lea
add
push
lea
push
push
call
add
test
jne
mov
mov
jmp
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
mov
add
test
jle
push
push
push
call
add
mov
cmp
je
mov
push
push
push
call
jmp
mov
mov
cmp
jne
push
push
call
add
jmp
cmp
je
cmp
je
mov
push
lea
push
push
push
call
add
jmp
push
push
push
call
add
push
call
sub
push
push
call
add
lea
push
push
push
call
add
test
jne
push
call
sub
push
push
call
add
mov
pop
pop
pop
pop
xor
mov
call
add
ret
mov
push
push
push
call
add
mov
ret
int3
int3
int3
push
mov
push
push
call
fabs
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
push
call
fstp
call
fstp
fld
add
fstp
push
call
fld
add
fstp
push
call
add
mov
pop
add
ret
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
fdiv
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fmul
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
fstp
call
fstp
add
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
push
mov
push
push
call
add
push
push
push
call
fstp
call
fstp
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jne
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jp
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
call
cdq
mov
idiv
mov
push
mov
fild
fdiv
fstp
call
add
sub
je
sub
je
sub
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
mov
push
push
mov
call
mov
add
cmp
jle
push
push
push
call
add
sub
add
mov
fild
sub
fmul
fstp
call
fiadd
jmp
push
push
call
add
cmp
mov
jge
push
push
push
call
add
fild
sub
fmul
fstp
call
fadd
jmp
fld
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
mov
push
push
call
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
lea
push
push
push
call
mov
push
push
mov
call
add
test
jge
lea
xor
test
setl
push
mov
push
push
push
sub
and
mov
call
add
test
jge
lea
xor
test
setl
pop
sub
and
cmp
jge
mov
mov
cmp
jle
mov
cmp
jg
sub
add
push
lea
push
push
call
add
pop
pop
mov
pop
pop
ret
push
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
lea
push
mov
push
push
call
lea
push
push
mov
call
add
cmp
je
jmp
lea
nop
sub
lea
cmp
jb
lea
push
call
add
mov
mov
mov
mov
add
cmp
jne
sub
lea
push
call
mov
add
pop
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
lea
push
push
push
call
push
push
mov
call
lea
push
push
mov
call
add
test
jle
lea
mov
push
lea
push
push
sub
call
add
test
jg
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
lea
push
push
push
call
mov
push
push
push
mov
call
add
test
jge
lea
mov
xor
test
setl
sub
and
push
push
push
call
add
test
jge
lea
xor
test
setl
sub
and
test
jg
mov
mov
cmp
jbe
mov
cmp
jle
pop
pop
xor
pop
add
ret
mov
sub
add
lea
cmp
jg
push
push
call
add
push
push
push
push
call
add
xor
test
jle
mov
lea
mov
movzx
push
push
call
add
add
cmp
jl
pop
mov
pop
pop
pop
add
ret
int3
sub
mov
xor
mov
push
push
push
mov
push
call
mov
lea
push
push
call
mov
add
cmp
jl
push
mov
push
push
call
mov
movzx
add
cmp
je
push
push
push
call
add
lea
cmp
jb
lea
push
call
add
mov
mov
add
add
cmp
jle
pop
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
push
push
call
lea
push
push
call
lea
push
push
push
call
add
test
je
push
push
call
add
lea
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movsx
add
cmp
je
cmp
je
mov
pop
ret
cmp
jne
add
nop
cmp
jne
mov
push
push
call
add
mov
add
cmp
jne
cmp
je
add
cmp
jne
lea
pop
ret
cmp
jne
mov
push
push
call
add
lea
pop
ret
int3
int3
int3
push
push
mov
call
add
add
cmp
ja
movzx
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
xor
test
sete
mov
push
call
add
test
je
mov
pop
ret
xor
test
sete
pop
ret
xor
cmp
sete
pop
ret
nop
(bad)
rol
rcl
inc
add
rol
in
rol
cli
rol
pop
rol
adc
inc
add
rol
rol
cmp
inc
add
inc
add
or
add
or
or
or
add
or
add
or
or
or
int3
push
push
push
mov
cmp
push
mov
jne
mov
add
mov
add
cmp
jae
lea
lea
mov
cmp
jne
movzx
add
mov
add
call
test
jne
mov
jmp
cmp
jne
cmp
jae
movzx
add
add
cmp
jg
movzx
cmp
jg
mov
pop
pop
pop
pop
ret
movzx
cmp
je
add
add
cmp
jb
xor
cmp
pop
pop
sete
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
mov
je
cmp
jne
mov
push
push
call
add
mov
cmp
je
pop
xor
pop
ret
mov
movsx
mov
add
cmp
push
movsx
jae
movsx
cmp
jne
sub
jne
pop
pop
lea
pop
ret
cmp
jne
add
add
cmp
jb
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
xor
cmp
jae
push
mov
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
mov
add
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
add
add
cmp
jb
test
pop
jl
mov
add
mov
push
lea
push
push
call
add
test
jne
sub
jns
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
mov
lea
push
mov
push
push
call
add
test
jne
mov
cmp
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
jmp
lea
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
mov
lea
push
add
push
push
call
add
test
je
pop
pop
pop
pop
ret
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jl
mov
push
push
call
add
mov
mov
push
mov
mov
push
add
push
mov
call
add
test
pop
jne
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
js
lea
lea
cmp
je
sub
sub
test
jge
mov
push
push
call
add
mov
mov
push
mov
sub
push
push
mov
call
add
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
add
push
push
mov
js
cmp
jge
cmp
jne
mov
push
push
call
add
mov
mov
sub
cmp
jb
cmp
mov
push
mov
mov
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
pop
jne
lea
pop
pop
ret
pop
xor
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
mov
lea
movsx
cmp
ja
movzx
jmp
mov
cmp
je
cmp
je
movzx
push
call
add
test
je
movzx
mov
mov
call
mov
test
je
add
jmp
mov
add
cmp
je
mov
push
push
call
add
mov
call
cmp
mov
jne
xor
jmp
mov
lea
movzx
push
mov
call
add
test
jne
movzx
push
mov
call
add
test
jne
xor
pop
pop
pop
pop
ret
mov
lea
mov
call
mov
test
je
add
jmp
cmp
je
mov
mov
call
cmp
mov
mov
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
add
push
mov
mov
call
mov
add
jmp
movzx
mov
call
mov
test
je
mov
jmp
xor
movsx
add
cmp
ja
movzx
jmp
test
je
lea
push
lea
push
push
call
add
test
jne
lea
jmp
test
je
add
mov
jmp
cmp
lea
mov
mov
jne
push
add
push
call
add
pop
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
pop
ret
add
mov
mov
push
call
add
pop
pop
pop
pop
ret
pop
mov
pop
pop
pop
ret
mov
xor
cmp
pop
setne
sub
and
pop
pop
pop
ret
push
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
push
push
add
push
push
call
add
pop
pop
pop
pop
ret
push
push
push
mov
call
add
pop
pop
pop
pop
ret
lea
jne
inc
add
inc
add
xlat
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
call
xlat
inc
add
(bad)
inc
add
xlat
inc
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
mov
push
mov
je
cmp
jbe
pop
xor
pop
ret
sub
sub
push
push
jne
pop
xor
pop
pop
pop
ret
lea
mov
mov
movsx
push
push
push
call
add
test
je
add
cmp
lea
mov
mov
jb
lea
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
je
mov
sub
add
mov
jne
pop
pop
pop
xor
pop
ret
pop
pop
pop
add
pop
ret
int3
int3
cmp
jl
test
jne
sub
push
mov
push
push
call
add
ret
mov
push
push
call
add
ret
push
mov
cmp
jne
mov
push
push
call
add
mov
mov
push
push
push
call
add
pop
ret
cmp
jne
mov
sub
mov
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
test
push
jne
test
je
mov
mov
push
push
push
call
add
xor
test
jle
mov
mov
call
add
cmp
jl
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
push
push
lea
push
push
push
call
lea
push
push
push
mov
call
mov
push
push
push
mov
mov
call
add
test
jge
lea
xor
test
setl
sub
and
mov
sub
mov
jns
xor
jmp
cmp
jbe
mov
cmp
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
sub
push
push
mov
add
push
call
add
test
je
mov
sub
lea
push
push
call
mov
add
push
push
call
add
pop
pop
mov
pop
add
ret
mov
cmp
jne
add
mov
mov
jmp
mov
add
add
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
mov
add
cmp
jae
cmp
jne
mov
jmp
cmp
je
sub
add
push
push
call
sub
push
push
call
push
push
lea
call
add
pop
pop
add
pop
add
ret
push
push
lea
call
add
pop
pop
pop
add
ret
push
call
add
pop
pop
mov
pop
add
ret
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
lea
push
push
push
call
push
push
push
mov
call
mov
add
push
push
mov
mov
mov
mov
call
mov
add
add
cmp
ja
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
add
cmp
jbe
pop
pop
pop
xor
pop
add
ret
mov
sub
cmp
jne
add
push
push
call
push
push
call
mov
add
test
jne
test
je
mov
mov
jmp
mov
mov
mov
push
push
push
call
add
xor
test
jle
lea
mov
mov
lea
call
add
cmp
jl
mov
pop
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
push
lea
push
push
push
call
xor
add
cmp
mov
mov
jbe
lea
cmp
je
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
movzx
add
push
call
add
test
jne
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
mov
cmp
jne
mov
mov
sub
push
push
push
call
add
jmp
mov
movsx
mov
sub
call
push
call
mov
add
add
cmp
jb
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
mov
call
add
add
cmp
ja
jmp
mov
push
mov
push
mov
call
add
pop
pop
pop
ret
push
push
call
mov
push
push
mov
call
push
push
push
call
add
jmp
mov
push
mov
xor
call
push
push
call
add
pop
push
push
call
add
test
jne
push
push
call
mov
sub
push
push
push
call
mov
add
push
call
add
pop
pop
pop
ret
push
push
call
add
test
jne
push
push
call
push
push
call
push
push
push
call
add
mov
push
call
add
pop
pop
pop
ret
xchg
fiadd
xchg
fiadd
iret
fiadd
lods
fiadd
sub
mov
xor
mov
push
push
push
push
mov
lea
push
push
push
call
push
push
push
mov
call
push
push
mov
call
mov
add
push
push
push
mov
call
add
cmp
mov
jne
add
mov
jmp
mov
cmp
mov
je
cmp
je
cmp
je
cmp
je
push
push
push
call
add
lea
push
push
call
mov
add
add
cmp
mov
mov
mov
jle
push
lea
push
push
mov
call
mov
add
test
je
add
lea
push
push
lea
call
add
cmp
jbe
mov
jmp
mov
cmp
jae
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
cmp
jne
mov
cmp
jl
mov
sub
push
lea
push
push
call
lea
push
call
mov
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
push
push
push
lea
push
push
push
call
lea
add
cmp
mov
jb
push
call
add
mov
mov
add
cmp
je
lea
sub
movsx
cmp
ja
movzx
jmp
cmp
jb
push
call
add
mov
mov
add
cmp
jb
push
call
add
mov
mov
mov
jmp
push
push
push
call
add
jmp
push
push
push
call
add
jmp
cmp
jb
push
call
add
mov
mov
mov
add
add
cmp
jne
sub
cmp
pop
pop
jb
push
call
add
mov
mov
add
pop
ret
nop
mov
inc
add
inc
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
push
push
mov
mov
je
movsx
push
push
call
add
test
je
add
cmp
jne
mov
sub
cmp
jb
push
push
call
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
add
cmp
jne
movzx
add
push
call
add
test
je
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
push
push
call
add
mov
sub
lea
push
mov
add
push
push
call
add
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
lea
push
mov
push
push
call
mov
lea
mov
push
lea
push
mov
call
add
cmp
jae
cmp
je
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
add
cmp
jne
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
lea
push
mov
add
call
mov
movsx
sub
add
add
cmp
ja
movzx
jmp
push
push
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
lea
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
nop
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
fnstcw
movzx
or
mov
fldcw
fistp
mov
push
fldcw
jmp
push
push
call
fstp
lea
push
lea
push
call
add
jmp
mov
lea
mov
call
jmp
lea
push
push
push
call
lea
push
push
mov
call
add
test
jne
cmp
jb
push
push
call
lea
push
call
jmp
push
lea
push
lea
push
call
add
lea
lea
mov
mov
add
test
jne
sub
push
lea
push
lea
push
call
add
cmp
jb
lea
push
call
add
mov
mov
pop
pop
pop
pop
xor
call
add
ret
movsx
push
push
push
call
add
jmp
nop
inc
in
add
in
add
inc
add
inc
add
inc
add
inc
add
out
add
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
push
push
push
push
push
push
push
push
push
add
add
add
add
push
push
push
push
add
add
add
add
int3
int3
int3
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
push
call
add
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
push
call
add
call
mov
pop
ret
int3
int3
push
mov
push
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
lea
push
call
add
test
jne
push
push
call
add
pop
mov
xor
call
add
ret
lea
push
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
mov
fild
mov
sub
fdiv
fstp
push
call
mov
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
push
push
call
push
push
mov
call
add
test
jg
push
call
add
jmp
push
push
call
add
call
mov
mov
cmp
jne
lea
push
call
add
add
jmp
lea
push
call
add
test
mov
jne
push
call
add
jmp
push
push
mov
mov
mov
xor
repz
jne
push
push
push
call
mov
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
add
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
test
jl
push
push
call
push
push
push
call
add
jmp
lea
push
push
mov
mov
call
mov
add
test
je
cmp
jne
cmp
je
mov
mov
push
add
lea
push
mov
lea
push
push
call
push
lea
push
lea
push
call
add
jmp
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
mov
add
test
jne
lea
push
call
add
pop
pop
mov
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
add
test
jg
push
call
add
jmp
push
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
mov
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
jne
or
jmp
push
push
call
add
mov
push
push
call
lea
push
mov
call
add
pop
mov
and
cmp
mov
jne
push
call
add
mov
pop
add
ret
fild
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
push
sub
fstp
push
push
call
call
push
push
mov
mov
call
call
push
push
push
push
call
fstp
add
push
call
add
pop
pop
mov
pop
ret
int3
push
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
call
mov
push
call
mov
push
push
push
push
call
push
push
push
call
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
add
test
je
push
push
call
add
test
je
push
push
push
call
add
test
je
cmp
jne
push
push
push
call
add
pop
mov
pop
ret
push
push
push
call
add
pop
mov
pop
ret
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
mov
push
call
add
xor
cmp
setne
mov
call
test
mov
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
call
push
call
pop
pop
push
mov
call
push
call
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
jmp
mov
push
call
pop
mov
mov
mov
mov
shl
cmp
je
push
call
pop
mov
shl
cmp
je
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
test
je
push
call
pop
mov
call
mov
cmp
jne
call
mov
jmp
push
call
call
mov
call
mov
push
push
lea
push
call
add
cmp
jne
call
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
push
push
push
call
add
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
lea
push
push
push
push
push
call
add
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
je
cmp
jne
mov
lea
cmp
jbe
jmp
mov
and
mov
push
call
pop
mov
push
call
push
call
pop
pop
and
mov
test
je
or
lea
push
pop
jmp
mov
cmp
jne
push
call
pop
cmp
jne
inc
or
jmp
or
jmp
or
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
push
mov
push
push
push
lea
mov
call
mov
test
je
mov
test
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
fldz
jmp
mov
cmp
jle
lea
push
movzx
push
push
call
add
jmp
movzx
mov
movzx
and
test
je
inc
jmp
lea
push
push
push
push
call
pop
push
lea
push
push
call
add
test
mov
je
mov
add
mov
mov
test
je
test
fldz
fstp
je
mov
jmp
test
je
cmp
fld
jne
fchs
jmp
test
je
fldz
fcom
fnstsw
test
jp
fstp
call
mov
jmp
fstp
fld
fstp
cmp
je
mov
and
fld
pop
pop
pop
leave
ret
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
push
test
push
je
mov
add
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
jne
sub
jmp
sub
jmp
sub
jmp
sub
mov
test
jne
mov
shr
jne
jmp
mov
add
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
mov
pop
pop
pop
ret
mov
xor
mov
mov
pop
pop
pop
ret
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
mov
mov
cmp
jne
push
push
call
pop
pop
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
jmp
add
cmp
je
mov
and
pop
leave
ret
push
push
push
call
add
ret
mov
ret
mov
ret
push
push
call
and
mov
mov
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
and
mov
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
mulsd
movlpd
fld
add
ret
movlpd
mulsd
subsd
mulsd
movlpd
fld
add
ret
jmp
nop
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fwait
mov
shl
sar
rol
mov
and
xlat
movsx
and
mov
add
add
jmp
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fxch
mov
fxam
fstsw
fxch
mov
shl
sar
rol
mov
and
xlat
mov
shl
sar
rol
mov
and
xlat
shl
shl
or
movsx
and
mov
add
add
jmp
call
fxch
fstp
ret
call
jmp
fstp
fstp
fldz
ret
fstp
fstp
fld1
ret
fstp
fld
test
je
mov
ret
mov
fadd
ret
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fld
test
je
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fstp
fld
cmp
jg
mov
or
ret
or
je
fchs
ret
int3
int3
int3
int3
int3
int3
fld
frndint
fsub
fxch
fchs
f2xm1
fld1
faddp
fscale
fstp
ret
mov
and
or
mov
fldcw
ret
test
je
mov
ret
fadd
mov
ret
mov
and
cmp
je
fld
ret
mov
sub
or
mov
mov
mov
shld
shl
mov
mov
fld
add
test
mov
ret
mov
and
cmp
je
ret
mov
ret
cmp
je
fldcw
pop
ret
mov
cmp
je
and
je
fstsw
and
je
mov
call
pop
ret
fldcw
pop
ret
sub
fst
mov
add
and
jmp
sub
fst
mov
add
and
je
cmp
je
mov
cmp
je
and
jne
fstsw
and
je
mov
cmp
je
call
pop
ret
call
pop
ret
fldcw
pop
ret
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jae
fmul
jmp
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jbe
fmul
jmp
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
jmp
push
mov
add
mov
fstp
mov
mov
mov
mov
mov
lea
lea
push
push
push
call
add
fld
cmp
je
fldcw
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
or
je
call
fsubrp
jmp
fld
fabs
fld
fcompp
fstsw
fwait
test
jne
call
or
je
fld
call
fxch
call
fsubrp
fdivp
ret
mov
call
or
je
call
fld1
fchs
fxch
fscale
jmp
fstp
fld
jmp
fstp
fld
ret
ret
call
jmp
jmp
mov
call
jmp
fldl2e
fmulp
xor
call
not
test
je
call
fxch
fstp
test
jne
not
fld1
faddp
fscale
jmp
call
faddp
or
jne
fld1
fadd
faddp
ret
fld
fld1
or
jne
fadd
fchs
fxch
fdivp
ret
int3
int3
int3
int3
push
mov
add
push
fstcw
fwait
cmp
je
call
or
call
pop
leave
ret
fxch
fst
fxch
fst
jmp
push
mov
add
push
fstcw
cmp
je
call
or
and
call
pop
leave
ret
fst
jmp
push
mov
add
push
push
push
call
add
push
push
call
add
fstcw
or
mov
call
call
pop
leave
ret
and
cmp
jne
fst
mov
or
je
cmp
je
cmp
je
or
je
movsx
mov
jmp
mov
and
jne
fstsw
and
je
mov
jmp
fldcw
fwait
ret
mov
and
or
je
cmp
je
jmp
mov
and
cmp
je
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jae
fmul
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jbe
fmul
push
push
mov
inc
mov
test
jne
cld
lea
lea
movs
movs
cmp
je
lea
lea
movs
movs
fstp
lea
lea
push
push
mov
mov
movsx
push
call
add
pop
pop
fld
jmp
push
mov
add
jg
pusha
adc
xchg
xlat
xor
outs
imul
add
loop
and
or
inc
jb
push
rcr
push
mov
push
mov
mov
cwde
mov
adc
shl
mov
dec
ret
xchg
enter
mov
sub
add
cli
and
icebp
out
mov
retf
ror
dec
jne
mov
(bad)
add
mov
in
sub
es
xor
xchg
push
stc
inc
lds
retf
sbb
loop
add
ret
inc
xor
lock
mov
lds
movs
call
repnz
mov
adc
imul
nop
outs
in
and
in
add
xchg
je
and
mov
es
mov
inc
ret
fs
jmp
in
mov
or
clc
sbb
dec
xchg
pusha
cmps
in
in
xchg
sbb
inc
dec
rcl
xchg
xor
dec
mov
lods
jno
pop
and
test
nop
repz
xor
lock
mov
and
arpl
bnd
jne
int
cmp
ror
gs
mov
xchg
mov
popa
adc
pusha
xchg
xor
pop
push
adc
test
push
in
mov
lods
out
lock
aad
in
adc
rol
popa
pop
out
bound
aad
imul
mov
push
xchg
push
mov
leave
jne
aam
fs
add
mov
sbb
sar
inc
gs
out
aaa
jp
push
sar
and
aam
ret
push
out
inc
add
sub
and
call
loope
push
(bad)
fwait
cmp
push
mov
and
gs
jb
mov
adc
add
mov
paddq
icebp
jae
hlt
shr
jo
popa
iret
jg
shl
sbb
pop
shl
jb
push
ret
loopne
inc
xor
xlat
inc
mov
mov
jno
xor
adc
jae
fcom
cmps
test
fmul
sbb
imul
push
movs
push
jno
adc
jg
jle
out
out
xchg
fcom
sbb
add
std
cmp
mov
adc
xor
std
loope
mov
enter
int
push
jo
adc
and
popf
adc
test
mov
ret
pop
pusha
lock
not
(bad)
push
xchg
lock
add
adc
es
mov
xor
ss
cmp
mov
lods
push
push
pusha
push
in
retf
daa
adc
push
xchg
add
xchg
sbb
and
lods
cmp
jmp
ins
adc
in
shr
jl
call
cmp
push
ror
xlat
sbb
popf
adc
fcom
cmc
pop
(bad)
mov
and
dec
mov
ret
test
push
outs
test
sbb
or
add
add
sti
sub
adc
ins
push
(bad)
xchg
ins
in
mov
retf
movs
push
mov
fdivr
jge
outs
xlat
imul
add
mov
nop
add
movs
sbb
add
aaa
movs
pushf
in
mov
test
mov
cmp
imul
aaa
xor
popf
hlt
loope
xor
sub
in
sar
pop
xor
cmps
pop
pushf
and
enter
loop
and
inc
xchg
fwait
push
in
cmp
xchg
popa
dec
cli
cli
dec
outs
push
xor
dec
jo
rcl
xor
rcl
sub
aad
rcr
fadd
cmp
sub
jecxz
xchg
retf
cmps
push
dec
mov
lds
xchg
xor
loopne
lea
pusha
daa
mov
or
jle
jge
inc
rcl
xchg
mov
jb
frstor
xor
push
cmp
daa
je
sti
add
mov
cmp
fsub
dec
mov
leave
adc
add
adc
test
pop
sub
mov
xchg
add
dec
cmc
setl
enter
nop
les
repz
adc
jo
or
sbb
jge
add
sbb
icebp
sar
inc
shl
push
pop
call
loope
lock
and
cmc
leave
les
(bad)
or
xor
out
nop
sahf
fwait
xor
mov
loope
sti
cmc
(bad)
pop
cwde
adc
gs
pop
cmp
inc
movs
xor
mov
(bad)
dec
cwde
sub
test
out
pusha
inc
inc
xor
sub
cmps
sbb
xchg
mov
xor
sahf
jge
daa
jp
scas
push
inc
enter
sbb
push
pop
sbb
adc
sub
sbb
mov
(bad)
and
ror
enter
cmp
ja
ins
or
scas
and
aam
scas
stos
and
fmul
xor
xchg
xchg
mov
xchg
in
mov
test
xor
push
icebp
call
sar
mov
jo
gs
lds
test
add
sbb
jbe
inc
adc
xchg
popa
mov
dec
adc
or
ret
push
sub
dec
pop
mov
enter
popa
xor
push
movs
dec
loop
xchg
mov
mov
jns
mov
jae
xchg
les
inc
mov
jae
movs
fwait
sbb
clc
mov
adc
inc
mov
inc
ins
jg
push
test
out
xchg
addr16
cwde
mov
scas
add
je
enter
xchg
xor
jl
test
cli
loope
mov
mov
or
pop
mov
mov
and
test
movs
jns
test
clc
mov
xchg
xor
sub
out
or
fsub
pop
inc
pop
ror
cmp
into
ror
rcl
std
inc
psubusb
xor
(bad)
xchg
sar
dec
add
popf
dec
je
movs
loopne
daa
aad
xchg
xchg
in
outs
cmp
sti
addr16
dec
scas
in
jecxz
sub
xchg
xchg
out
cwde
add
(bad)
mov
aaa
inc
ret
fisttp
push
bound
xchg
jmp
or
push
pop
in
xchg
arpl
dec
pop
loope
fisubr
gs
inc
dec
mov
js
ds
dec
gs
fcomp
mov
test
mov
jae
inc
jmp
iret
out
es
xchg
jne
leave
or
add
mov
mov
push
imul
pop
sub
xchg
and
aad
adc
push
cwde
push
gs
adc
loop
adc
fiadd
retf
mov
xor
cld
in
movs
push
cmp
dec
and
pop
xchg
and
jne
xchg
cwde
(bad)
xor
dec
test
shl
cmp
and
test
int3
movs
mov
(bad)
adc
inc
rol
sub
inc
out
shl
sub
cwde
mov
and
adc
das
addr16
(bad)
vmovss
fs
mov
leave
inc
mov
mov
dec
xchg
shl
mov
clc
cmc
and
loopne
jo
cdq
outs
cdq
clc
sbb
xlat
cmc
loopne
stos
jb
jbe
add
xor
movs
sub
loope
mov
add
cmps
and
pop
cmps
scas
pop
xchg
(bad)
mov
cwde
out
xchg
adc
sub
adc
adc
(bad)
data16
xchg
and
adc
fcmovbe
mov
aas
and
lods
in
inc
outs
add
bound
inc
push
jns
movs
and
aam
shl
cs
stc
mov
push
pusha
addr16
sub
xchg
pop
pop
jo
cmp
add
add
cmc
out
bound
inc
xchg
lods
mov
stc
pop
and
lea
xchg
cmc
jl
in
outs
jae
push
and
ds
jmp
mov
and
cmp
xchg
aam
fwait
js
sar
xchg
rol
aas
add
xor
shl
mov
push
jb
add
or
jge
adc
scas
push
inc
out
jne
cmp
outs
shr
mov
sub
push
call
push
repnz
fsub
rcl
push
aam
adc
fs
sbb
sbb
fild
adc
ret
call
add
add
shl
repnz
arpl
adc
inc
jo
and
aaa
or
xor
jmp
sbb
cmps
int3
test
sub
and
add
movs
push
rcl
mov
add
in
(bad)
rol
mov
loope
out
les
add
add
mov
cwde
je
xor
xchg
add
jae
cmc
add
xlat
mov
inc
mov
cli
ins
adc
ficomp
add
addr16
push
xor
jo
loope
lea
loopne
or
pop
adc
ins
bound
and
sub
jle
xlat
adc
add
ror
je
ret
xchg
push
das
gs
xchg
adc
out
cwde
lods
xor
lock
push
out
jo
push
hlt
call
in
push
nop
pusha
cmp
test
ja
or
das
add
lds
mov
mov
add
mov
leave
movs
rcl
test
jae
push
iret
gs
nop
(bad)
pop
mov
(bad)
and
and
cmp
fld
push
add
nop
xlat
xor
sti
push
or
ret
popf
mov
and
imul
adc
loop
into
fld
(bad)
adc
lods
stc
inc
fistp
fwait
sub
sbb
(bad)
je
xchg
pop
int
push
popa
jmp
mov
adc
aam
or
hlt
clc
imul
retf
movs
das
push
mov
rol
mov
jbe
icebp
fist
nop
shl
mov
mov
(bad)
cmps
loope
dec
inc
xchg
js
inc
sbb
push
inc
lds
jg
std
jnp
jb
mov
and
ror
in
lods
xor
xchg
mov
frstor
shr
out
dec
pop
jg
leave
cmp
or
pusha
sub
xchg
pop
mov
mov
sub
sbb
mov
dec
(bad)
loope
int3
xchg
sub
leave
das
jno
inc
push
push
jae
mov
pop
dec
dec
mov
shl
inc
xchg
mov
mov
inc
repnz
cmp
stos
add
cmp
mov
push
inc
pop
jo
push
xchg
and
int3
mov
jmp
je
push
cmp
fnstsw
cmps
icebp
cmp
test
and
out
mov
call
int
xor
or
sbb
push
inc
xchg
mov
pop
sub
lods
add
test
push
inc
inc
jb
and
jge
rcl
call
(bad)
call
mov
fistp
icebp
sub
cmp
addr16
add
push
addr16
rcl
scas
sar
mov
sub
jmp
add
stc
push
nop
xor
cmps
nop
fiadd
fnstenv
cmp
ss
aam
mov
mov
jns
jae
mov
mov
xchg
arpl
mov
cs
pushf
sar
daa
adc
and
mov
movs
sub
(bad)
call
je
cmc
and
mov
not
cmovns
pop
gs
xor
in
inc
mov
push
movs
dec
xor
adc
test
push
loop
arpl
gs
jmp
fwait
add
sbb
nop
cmc
movs
into
mov
dec
xchg
cmc
pop
and
icebp
pop
icebp
push
and
ja
loopne
clc
nop
div
mov
pop
cli
mov
adc
mov
pop
mov
cmp
push
pop
mov
fdiv
push
push
(bad)
jl
sbb
out
add
adc
xor
mov
mov
dec
fcmovbe
jnp
and
hlt
mov
int
xchg
in
std
cld
inc
iret
xor
test
adc
inc
xor
mov
in
sbb
jbe
jbe
movs
enter
int
imul
test
jg
(bad)
imul
fs
push
enter
test
mov
popa
mov
and
adc
in
fwait
shr
lock
add
adc
shl
pop
iret
aaa
sub
cmp
mov
ja
mov
jnp
into
cmp
sbb
and
repz
dec
dec
xor
rcr
sub
pop
push
push
shl
add
pusha
sbb
add
ss
iret
(bad)
push
lods
adc
cmp
jae
shl
dec
pop
xchg
in
test
sbb
int
gs
out
lods
add
adc
or
popf
loop
cwde
lock
mov
ins
add
(bad)
(bad)
fs
fwait
lods
dec
popa
test
shl
sbb
xor
jmp
pop
mov
push
int
daa
xchg
mov
int
repz
and
cmp
jae
jnp
jnp
mov
int
jno
ret
jo
arpl
jne
retf
les
xor
call
and
icebp
cmc
imul
jmp
(bad)
scas
mov
or
popf
aam
aam
xchg
jno
cmp
out
xchg
test
jb
mov
das
push
inc
xchg
call
mov
jb
or
sub
rcr
inc
or
test
loopne
xchg
sbb
les
je
add
lahf
push
and
xor
and
jge
movs
nop
pop
mov
(bad)
jnp
or
in
lock
xor
and
mov
inc
adc
xor
xor
idiv
cmp
inc
loope
in
xchg
jge
add
std
and
inc
jo
(bad)
dec
icebp
(bad)
mov
jnp
inc
les
pop
jle
ret
mov
icebp
mov
mov
and
sahf
adc
nop
(bad)
mov
dec
or
aad
add
or
in
xor
mov
add
inc
lock
pop
loope
cli
movs
ret
push
and
aad
stos
adc
clc
cli
aaa
adc
ror
add
call
daa
inc
push
jge
adc
pop
sub
add
fld
repz
push
push
pop
jnp
adc
dec
cwde
into
fild
retf
scas
inc
inc
lea
mov
cmp
cli
push
(bad)
pop
jge
cdq
mov
sbb
or
hlt
adc
xchg
jmp
addr16
mov
les
fs
pop
repz
xor
pop
je
push
rcr
pmulhuw
sub
aad
loope
ins
call
scas
xchg
mov
sbb
cld
or
and
in
dec
in
inc
and
(bad)
aad
add
xchg
xchg
xlat
and
dec
push
add
or
pop
movs
xchg
mov
ret
in
ja
jo
mov
mov
adc
adc
adc
adc
pop
mov
ins
and
pushf
or
js
jnp
jno
or
jae
jmp
sub
shl
jno
popa
adc
sub
push
mov
adc
mov
jmp
mov
xor
loopne
nop
stc
lahf
cmps
(bad)
leave
icebp
cmps
inc
adc
jl
inc
adc
jp
cmp
xchg
cmp
cdq
jp
int
or
and
call
cmp
(bad)
iret
mov
dec
adc
imul
aad
gs
outs
jne
in
daa
popa
int
std
mov
push
adc
mov
lea
inc
and
(bad)
lock
fmul
adc
loope
cwde
nop
neg
xor
inc
mov
mov
in
int3
pop
lock
sub
sub
popf
adc
mov
shl
sbb
retf
push
push
daa
(bad)
dec
(bad)
and
fsubr
xchg
rol
movs
jle
sub
add
outs
rcr
push
adc
jae
loopne
pop
shr
mov
ret
lock
or
mov
mov
xchg
and
mov
xchg
push
push
adc
fld
call
mov
inc
and
sbb
adc
jge
mov
pop
addr16
inc
loop
(bad)
pop
test
popa
xchg
(bad)
and
aam
or
pop
(bad)
cmc
mov
(bad)
sar
or
dec
js
aam
adc
mov
mov
mov
mov
xchg
hlt
(bad)
pop
and
mov
icebp
xchg
cmp
loopne
jp
stos
mov
inc
xchg
daa
cld
mov
dec
inc
test
aam
push
push
cmc
das
push
repnz
test
and
dec
(bad)
cli
and
cmp
inc
loope
std
icebp
call
inc
pop
je
push
push
push
sbb
pop
inc
pop
push
in
mov
mov
fst
jp
push
cmp
xor
sti
add
xchg
stc
iret
repnz
(bad)
outs
jns
pop
mov
sahf
jmp
mov
in
jno
jge
mov
call
mov
mov
inc
imul
dec
pop
adc
push
xor
leave
mov
sar
cmc
xor
mov
mov
mov
mov
stos
mov
popf
dec
inc
mov
repnz
aad
jge
ds
ja
or
rol
mov
ret
adc
jge
div
inc
add
lods
adc
popf
mov
jae
std
ins
xchg
xchg
push
sub
icebp
push
mov
movs
inc
mov
push
xor
(bad)
fucomi
inc
mov
call
jge
call
push
dec
in
test
push
or
mov
push
call
imul
mov
add
cmp
push
idiv
jo
mov
mov
mov
inc
xor
mov
inc
sub
ret
xor
push
push
movs
add
sbb
adc
xchg
sbb
add
stos
gs
add
lock
(bad)
out
push
adc
xchg
or
jne
and
push
movs
js
mov
adc
push
add
mov
fcmovb
add
in
mov
sub
sub
lds
in
cwde
in
dec
ss
sub
xchg
xor
push
and
fiadd
or
cmp
xlat
xlat
or
mov
pop
cmp
dec
or
mov
mov
jo
popa
jne
out
lock
lods
mov
or
int3
shl
adc
ret
enter
icebp
fwait
dec
xchg
loop
loopne
adc
push
retf
sbb
stos
out
mov
arpl
and
(bad)
mov
cmp
icebp
stos
shl
pop
frstor
and
gs
stos
sbb
dec
das
popa
sbb
aad
popf
fs
stc
push
and
ss
addr16
jecxz
gs
xor
test
xchg
ja
adc
loope
lds
adc
inc
es
sub
jecxz
rcl
mov
cmp
push
pushf
xchg
mov
or
inc
pop
repnz
xor
mov
push
fdiv
jecxz
in
sbb
rcl
loopne
in
ret
jl
les
call
cmp
cld
movs
(bad)
xlat
push
cmp
out
daa
pop
sbb
data16
add
loope
or
jnp
mov
xchg
rcl
fcom
popf
pop
repnz
jae
and
sti
aas
jbe
mov
dec
mov
jnp
xchg
push
xor
adc
mov
adc
cmp
add
mov
sub
xor
mov
xor
ror
push
jo
sbb
mov
jno
xor
retf
sub
sbb
adc
jo
ins
xchg
aad
xchg
mov
jbe
ja
ins
pushf
xor
loope
and
inc
mov
in
rcr
shl
mov
or
mov
loope
cmp
scas
or
push
mov
sub
cmps
jle
mov
mov
pop
movs
add
dec
add
mov
in
int3
ret
fidiv
fs
fsubp
les
test
aam
fwait
es
ds
or
stos
fstp
pop
push
arpl
icebp
jle
outs
mov
jno
dec
jecxz
xchg
rcl
(bad)
add
cmp
aaa
aam
in
or
push
jnp
mov
stos
pop
arpl
add
mov
cdq
pop
hlt
fld
mov
cmps
xchg
adc
gs
loope
mov
test
cmps
push
arpl
push
xor
add
fcom
pusha
and
sbb
adc
and
jo
aam
sub
inc
dec
sbb
adc
push
sbb
jo
clc
mov
inc
lds
jle
test
push
pop
repnz
loop
cs
mov
and
add
push
repz
push
sub
cmc
xchg
in
push
push
jo
(bad)
push
push
shr
mov
imul
sub
jo
lea
loopne
(bad)
pop
movs
inc
cmps
pop
dec
imul
push
xchg
(bad)
cmp
dec
adc
popa
(bad)
push
mov
and
je
shr
pop
popf
sbb
sub
mov
shr
mov
or
xchg
ss
ja
hlt
jp
mov
sub
push
fwait
add
adc
in
ror
and
cmp
sub
mov
nop
movs
imul
jno
hlt
cmp
mov
daa
dec
sub
jg
les
jl
mov
je
or
pusha
stos
jne
dec
push
add
inc
aam
xchg
mov
push
ficom
in
mov
cmc
fnstcw
push
mov
pop
mov
push
and
jno
xchg
jp
clc
mov
xor
jle
movs
imul
lods
push
dec
xchg
dec
loope
add
mov
popa
imul
ja
adc
cmp
add
es
pop
pop
(bad)
loop
adc
add
xchg
or
and
out
shl
cmp
in
aas
cli
into
arpl
test
mov
(bad)
outs
and
sbb
in
mov
sbb
je
adc
add
sbb
and
xchg
mov
pop
rcr
mov
add
cmc
cmps
cmp
and
xor
jo
and
sahf
xlat
push
push
sub
movs
push
test
mov
sbb
nop
icebp
inc
and
pop
add
jne
mov
xlat
cmps
mov
sahf
jne
or
ret
xchg
sbb
mov
or
push
in
mov
add
lods
or
or
inc
sbb
in
retf
jo
sti
push
lds
cli
push
push
mov
add
in
mov
fadd
sub
shr
pusha
jo
and
sub
dec
sbb
add
cmps
in
icebp
lods
std
add
loope
fsubr
jmp
cld
mov
ror
pop
inc
lock
sbb
sub
aam
sbb
cmp
std
push
gs
es
cmps
out
xlat
jne
arpl
mov
and
call
bound
xor
and
rol
xor
and
inc
and
imul
ror
enter
dec
int
ret
inc
cld
jae
outs
adc
ror
enter
sbb
(bad)
movs
pop
push
push
push
push
mov
push
adc
jmp
inc
mul
jbe
das
xor
and
sbb
xchg
pop
fsubr
and
pop
mov
add
mov
pushf
sbb
pop
in
mov
cwde
sbb
adc
pop
aam
pop
je
xchg
pop
mov
inc
popa
inc
push
add
xor
mov
jno
scas
inc
rcl
rol
(bad)
xlat
inc
push
dec
in
mov
jo
add
mov
and
push
adc
cmc
adc
shl
imul
rcl
repnz
into
sbb
adc
div
push
pop
ror
clc
loope
fstp
mov
ret
jne
and
movs
loopne
pop
xchg
sti
jmp
test
loopne
dec
xor
mov
pop
cmps
adc
adc
mov
add
cmp
sti
push
ds
sar
pusha
mul
retf
cmps
jns
movs
push
jnp
cmp
call
(bad)
add
add
inc
sub
pop
jl
push
test
test
inc
mov
test
xor
aad
ret
dec
mov
mov
xchg
lock
or
dec
daa
dec
cmp
and
adc
fcomp
ja
xlat
xchg
sbb
and
xchg
es
cmp
xor
test
(bad)
hlt
dec
fadd
nop
adc
inc
jg
fs
sbb
xor
ins
outs
push
mov
pop
mov
mov
jo
fcom
aas
fsubr
xchg
add
lds
stos
inc
mov
inc
jmp
mov
dec
jnp
push
jmp
inc
adc
sti
xchg
pop
popa
mov
sbb
jo
mov
aas
inc
iret
add
es
push
sbb
mov
fwait
cmps
div
and
dec
xchg
in
test
popa
dec
push
xor
adc
test
cmc
xchg
sahf
and
les
(bad)
cmps
ret
xor
lea
and
mov
push
lds
movs
cmc
add
retf
push
mov
test
push
lock
cmp
inc
ja
clc
mov
sbb
int3
cs
rcl
sub
into
adc
inc
mov
out
mov
popa
hlt
push
ret
and
gs
mov
les
mov
rol
mov
adc
lods
add
mov
pop
es
hlt
in
popa
xchg
std
or
div
icebp
sbb
mov
ds
js
xchg
imul
xchg
pop
pop
arpl
mov
adc
sub
push
test
aad
sahf
mov
xchg
sbb
mov
ins
and
push
sbb
cmp
rcl
rcr
xchg
inc
sbb
and
cwde
and
cmc
xor
jbe
pop
jo
jmp
inc
xchg
lock
test
mov
nop
(bad)
repnz
mov
fs
loopne
sbb
mov
adc
lods
imul
int
or
adc
cwde
loopne
dec
inc
push
lds
inc
in
gs
and
mov
or
fst
xor
in
fwait
pop
je
add
shr
dec
movs
push
aad
mov
cmps
xor
or
gs
or
cmc
dec
movs
inc
ficomp
pop
cmp
xor
ja
pop
adc
data16
imul
mov
jnp
addr16
mov
push
imul
test
jnp
imul
sar
and
jb
aad
xchg
call
int
ins
shl
xor
mov
enter
inc
in
xor
bound
ins
jno
(bad)
int3
push
aaa
ret
inc
shl
inc
mov
fmul
rol
shl
cmp
je
cmc
add
mov
jo
shl
ja
clc
cmp
sbb
movs
ror
jp
(bad)
pop
inc
shl
and
xor
hlt
inc
sub
lock
jo
xor
push
cwde
mov
sbb
fimul
pop
mov
lock
addr16
cwde
daa
cmp
mov
loopne
inc
jl
inc
jb
mov
fst
sbb
or
cmp
xor
pop
push
adc
mov
scas
jb
(bad)
(bad)
sbb
jmp
add
imul
(bad)
arpl
dec
inc
cmps
push
xchg
mov
cdq
int
enter
and
xor
mov
aam
dec
jle
pusha
or
dec
cmp
add
jmp
aaa
inc
xor
es
int
sbb
cmps
and
mov
and
fbstp
xor
(bad)
ret
loopne
xor
xor
add
mov
pusha
nop
imul
ffreep
inc
scas
out
xor
nop
jg
inc
nop
stos
jae
int3
mov
or
jle
mov
adc
scas
repz
mov
sar
add
iret
mov
loope
mov
not
mov
fcmovb
mov
fwait
xchg
gs
mov
rol
(bad)
ss
mov
test
jns
shl
cmp
fadd
repz
test
pop
inc
gs
imul
sbb
lock
jb
iret
and
std
cmp
cmp
xchg
push
pop
adc
pusha
sub
mov
inc
cmc
mul
jno
nop
stos
adc
ins
and
jecxz
inc
jmp
dec
(bad)
shl
scas
ins
pop
and
push
sbb
push
and
out
sbb
outs
xchg
lea
push
punpcklbw
push
push
jo
and
rcr
arpl
mov
inc
xor
aam
and
sar
stos
adc
cmp
adc
xchg
xor
das
int
xor
xchg
lds
jg
pop
icebp
ja
(bad)
sti
add
and
push
frstpm(287
loopne
jecxz
mov
cs
xor
aad
inc
jmp
test
cmps
std
mov
mov
jp
mov
sbb
outs
fistp
sub
sbb
mov
mov
sar
and
shl
pop
je
test
xchg
test
pop
mov
clc
xor
mov
mov
xor
loop
ret
or
mov
inc
pop
xor
xchg
dec
sbb
test
shl
mov
mov
xor
mov
arpl
adc
ins
cmp
cmps
int3
jb
test
mov
adc
adc
jp
xchg
mov
sbb
push
hlt
add
outs
js
adc
xor
std
and
(bad)
stc
ins
or
scas
(bad)
pop
cmp
data16
mov
daa
add
mov
ins
push
mov
adc
sbb
xor
movs
jne
fild
hlt
mov
div
push
cmp
rol
lds
popa
jmp
jle
mov
pop
ins
sub
in
xchg
test
jno
leave
sar
xor
and
sbb
push
adc
ja
fcomip
mov
dec
mov
dec
mov
jnp
push
sbb
sub
mov
shl
gs
jp
rol
icebp
mov
int
out
std
pop
and
repnz
movs
in
popa
scas
or
mov
test
mov
cli
mov
add
sahf
push
adc
sbb
repnz
adc
test
lods
mov
(bad)
xlat
shl
adc
cmps
not
cmp
xor
mov
out
(bad)
add
xchg
inc
jg
ja
lahf
mov
cmp
jno
xchg
dec
xor
fcomi
pop
xlat
lahf
imul
jmp
das
dec
gs
dec
sbb
xchg
add
les
imul
xchg
fs
test
loope
push
out
sbb
adc
and
popa
and
loop
stos
aaa
xor
into
pop
mov
jb
cmc
popa
inc
popf
cmc
xor
adc
aad
test
ficom
adc
das
xchg
ror
std
inc
data16
sbb
jnp
add
or
adc
inc
dec
pop
in
adc
ins
inc
mov
pop
push
pop
pop
test
ja
pop
lods
adc
and
loopne
sbb
imul
test
jno
adc
xor
out
push
add
adc
into
mov
cmp
loop
fst
stc
pop
xor
(bad)
dec
inc
cmps
call
or
cmps
pop
cmp
push
outs
cmp
lds
pop
and
and
mov
and
fbstp
xchg
shl
cmps
test
pop
sub
and
fisub
jne
and
push
in
add
mov
scas
add
mov
mov
arpl
(bad)
retf
out
jg
dec
mov
xchg
push
sahf
push
sahf
xor
dec
cmp
in
jno
stc
aad
pop
and
sbb
and
rcl
ins
lea
das
sub
push
fadd
pusha
push
lock
xchg
enter
sub
push
inc
in
xor
pop
aad
movs
movs
fsubp
inc
arpl
mov
mov
add
fwait
pop
inc
mov
xchg
and
test
and
mov
push
stos
es
mov
mov
rcl
jmp
lds
pop
ins
push
xchg
fild
movs
jmp
sar
xchg
je
or
aam
in
xor
jge
repnz
jmp
shl
mov
(bad)
jno
ret
push
or
jmp
(bad)
sbb
sbb
sub
sub
mov
loopne
(bad)
mov
lahf
jg
adc
adc
scas
xchg
js
xor
pushf
xchg
aas
inc
mov
push
push
pusha
sub
or
push
inc
lock
jns
inc
mov
out
shl
nop
in
loopne
adc
mov
(bad)
dec
(bad)
adc
adc
ror
pop
jge
das
loope
(bad)
mov
push
movs
cmp
cmp
nop
fucom
xor
add
jo
loope
dec
mov
in
push
and
popa
in
mov
inc
mov
push
(bad)
icebp
mov
and
or
scas
cmpxchg
hlt
add
call
jmp
cmp
test
pop
(bad)
fcmovbe
icebp
xor
inc
pop
movs
cwde
sbb
cmp
adc
mov
lods
leave
push
sahf
shl
jo
shl
push
(bad)
int3
sbb
mov
repnz
aaa
aam
(bad)
jge
and
outs
stc
mov
(bad)
sbb
sbb
mov
mov
cmp
cwde
aad
xor
inc
dec
int
(bad)
lds
rcl
nop
pop
rcl
outs
std
arpl
loope
pop
popa
dec
in
mov
mov
add
lahf
adc
in
daa
sahf
loopne
push
mov
loop
das
xor
add
adc
or
in
dec
mov
cli
xlat
inc
int
popa
stos
add
adc
jo
pop
inc
xor
adc
and
(bad)
test
into
sub
jp
xor
dec
mov
ret
sbb
adc
push
sub
and
pusha
fwait
nop
push
push
mov
cdq
push
cmp
bound
inc
jecxz
int3
imul
in
loopne
lock
shl
xor
mov
inc
cmp
push
push
cmp
pop
fnstcw
xchg
(bad)
push
sub
xchg
(bad)
nop
hlt
in
lea
retf
les
jle
out
js
ret
xchg
fdivp
mov
pop
push
cwde
stos
out
call
pop
test
mov
dec
mov
icebp
(bad)
aaa
or
sub
int
stos
movs
cmc
addr16
xchg
xchg
lds
xchg
mov
ins
push
ficom
fs
or
pop
iret
aaa
leave
aad
and
rcl
inc
xchg
or
sub
mov
mov
(bad)
in
mov
push
push
(bad)
mov
mov
mov
popa
jmp
xor
inc
xchg
scas
push
mov
jb
stos
inc
push
(bad)
xor
adc
aaa
add
cmp
inc
jns
cmps
stc
mov
aad
leave
cld
les
movs
call
das
inc
inc
add
xchg
fmul
and
aaa
(bad)
ja
movs
jecxz
rol
or
pop
les
int
shl
loope
imul
mov
int
lods
xchg
xor
mov
adc
inc
sbb
adc
adc
jnp
ja
cmps
cmc
mov
and
test
(bad)
sbb
stc
mov
sub
out
shl
xchg
lock
repz
jecxz
inc
xor
xchg
jecxz
dec
bound
xchg
popa
mov
fst
dec
sar
hlt
arpl
or
test
mov
xchg
sbb
cmp
push
jae
call
cmp
add
dec
push
ret
or
lahf
shl
cmp
mov
leave
aad
rcr
out
mov
mov
mov
add
cmps
repnz
and
mov
inc
pop
loop
je
sar
jo
popa
gs
cmps
arpl
inc
pop
adc
mov
add
mov
fs
arpl
sbb
out
mov
enter
test
pop
cmp
(bad)
out
mov
(bad)
fmul
movs
inc
dec
std
sahf
cwde
and
sub
xor
cmc
pusha
rol
fwait
jne
mov
repnz
add
push
sahf
in
jmp
ins
mov
aad
cmp
jge
pop
mov
(bad)
in
pop
adc
gs
addr16
pop
movs
xor
add
push
mov
xor
push
or
push
add
pop
mov
xchg
out
shl
retf
and
push
xor
pop
cld
mov
jbe
mov
jg
jle
adc
sub
mov
retf
fwait
out
pop
test
imul
into
inc
(bad)
mov
mov
test
or
lahf
xchg
shr
push
out
inc
dec
cmp
lock
clc
popa
arpl
mov
in
push
mov
imul
pusha
dec
push
movs
push
inc
scas
inc
xor
jns
mov
xlat
mov
data16
data16
popa
add
sub
(bad)
jnp
sbb
icebp
dec
(bad)
push
dec
xchg
cmp
mov
add
daa
xor
mov
lods
mov
sbb
pop
push
out
and
out
pop
push
and
lds
aaa
sbb
(bad)
out
popa
inc
sub
leave
fst
jns
xchg
sub
out
mov
mov
imul
mov
mov
cmp
test
sub
fadd
jno
mov
cmp
imul
fbstp
xor
jae
movs
inc
mov
cmps
add
xchg
add
scas
or
aas
ins
cmc
loope
inc
xchg
dec
inc
(bad)
test
push
adc
inc
fmul
js
cmp
(bad)
xor
mov
and
xchg
sub
inc
lods
inc
adc
outs
xor
mov
shl
fs
lds
rcl
cmps
shl
push
pop
int3
add
sbb
adc
jno
pop
or
jge
clc
add
sbb
ret
and
sbb
inc
sbb
ins
xchg
push
aam
inc
test
(bad)
leave
int3
add
pusha
(bad)
xchg
dec
jns
jbe
iret
movs
rcl
ja
imul
adc
pop
outs
dec
aad
xchg
out
add
jle
stos
add
add
cmp
cmp
aam
outs
inc
test
push
xchg
jmp
scas
popa
jmp
shl
scas
dec
mov
push
dec
jge
push
sahf
call
and
pop
sub
cli
fs
fadd
mov
jbe
add
not
adc
cmp
xchg
jge
dec
(bad)
das
lea
inc
xlat
inc
push
sar
(bad)
and
(bad)
popa
fild
add
fistp
push
dec
jne
and
lods
push
xor
cmps
les
xor
(bad)
in
imul
(bad)
mov
xor
push
sub
movs
xor
icebp
fild
xor
les
inc
in
push
popa
inc
xor
mov
bound
movs
aaa
mov
in
imul
fdiv
arpl
xchg
cli
loope
mov
cld
mov
outs
pop
pusha
cmp
fs
mov
push
pop
sub
loope
cld
out
loope
jnp
mov
dec
xlat
loopne
mov
cmp
jle
sub
int3
xor
or
out
ja
div
retf
jnp
pop
and
loopne
hlt
and
xor
mov
adc
pop
push
adc
hlt
retf
sbb
xor
aas
jno
adc
loope
je
add
xchg
inc
jp
mul
icebp
mov
add
inc
fbstp
pop
inc
xchg
push
ss
(bad)
movs
mov
je
mov
enter
or
push
and
and
movs
push
sbb
xor
loop
out
and
in
add
add
loop
mov
pop
ret
push
mov
push
pop
adc
cmp
add
imul
inc
jecxz
pop
mov
cwde
adc
add
(bad)
aad
(bad)
xlat
test
rcl
popa
jnp
call
jae
xchg
hlt
cmp
mov
mov
inc
mov
test
push
mov
movs
add
and
xor
inc
sub
shl
(bad)
movs
pop
loopne
adc
xchg
push
stc
inc
jmp
jno
lds
loopne
mov
add
sbb
jae
cmc
je
cwde
jge
movs
and
push
icebp
adc
pop
xlat
mov
fs
adc
test
mov
jns
pop
in
push
mov
icebp
jmp
cdq
pop
push
jl
movs
add
xor
xor
xchg
outs
movs
aam
clc
mov
aas
sahf
int
push
sar
nop
test
mov
popf
popa
mov
mov
enter
je
jecxz
jle
mov
loop
sub
mov
icebp
bound
sbb
shl
(bad)
loopne
mov
(bad)
icebp
pop
(bad)
aaa
push
xchg
idiv
cmp
std
xor
int3
dec
stos
inc
push
xor
inc
push
push
xor
jp
bound
aad
dec
scas
xchg
and
xor
ret
(bad)
data16
jecxz
sbb
jge
dec
cs
jb
clc
xor
scas
mov
inc
aad
dec
adc
popa
add
fs
cmc
mov
inc
dec
aas
in
jne
mov
inc
gs
jmp
mov
dec
jo
mov
sub
jg
inc
add
mov
push
mov
fidivr
nop
repnz
xchg
fxch
(bad)
sub
ret
xchg
push
cmp
inc
mov
stos
arpl
pusha
jo
loope
add
out
movs
inc
mov
out
adc
mov
xor
pop
cmp
mov
inc
dec
imul
adc
xchg
sub
mov
shl
add
inc
mov
mov
mov
jbe
clc
inc
(bad)
jmp
jo
inc
sub
mul
fild
jno
mov
mov
inc
retf
pop
imul
(bad)
xchg
push
cwde
repnz
sub
ret
test
pop
nop
repz
fdivr
mul
or
in
xchg
pusha
ins
push
inc
dec
hlt
clc
cmc
sub
mov
add
inc
jo
and
loop
out
scas
les
jne
sub
retf
jbe
add
aas
jb
mov
xor
ret
cli
mov
push
push
xchg
jl
rol
ja
mov
loop
push
inc
(bad)
pop
cmc
inc
hlt
xor
mov
fs
push
mov
push
sbb
and
adc
add
jle
push
mov
mov
mov
mov
and
popa
sbb
add
xor
mov
hlt
repz
push
adc
fwait
ret
sar
sbb
out
add
mov
dec
push
and
js
mov
xchg
cmps
loopne
sbb
cmp
sbb
cwde
lods
mov
xor
xlat
repz
(bad)
push
mov
imul
push
test
in
(bad)
mov
xor
jnp
or
sbb
fcom
pushf
mov
test
or
movs
enter
xor
mov
(bad)
ins
outs
aaa
cld
(bad)
sub
movs
lock
push
mov
jb
mov
mov
lods
push
int
xor
jmp
test
imul
fs
and
sar
adc
cmps
addr16
call
lds
scas
cmp
push
jne
test
or
pusha
or
push
or
hlt
dec
sbb
lea
nop
hlt
mov
xchg
pop
push
mov
scas
(bad)
pop
retf
push
ret
jns
loope
cli
je
xor
sar
sub
cmovne
add
dec
pop
sar
add
nop
add
inc
push
dec
stos
mov
xchg
xchg
inc
in
and
aam
fs
mov
dec
daa
in
ins
push
in
mov
imul
sbb
(bad)
shl
pop
retf
shl
mov
bnd
stos
cdq
inc
inc
aaa
jb
jmp
fwait
div
inc
mov
sbb
je
sar
shl
push
test
inc
out
in
sbb
and
xor
bound
inc
xchg
cli
(bad)
call
mov
mov
ss
int
in
sbb
ss
cmc
in
movs
xor
mov
iret
shl
in
sti
adc
test
dec
out
mov
xor
add
das
xchg
loope
adc
idiv
push
jg
add
pop
inc
push
push
mov
out
cdq
sub
lahf
xchg
add
pusha
pop
sti
lods
gs
leave
mov
in
or
jl
mov
retf
adc
shr
adc
ss
push
inc
aas
call
loop
(bad)
pop
mov
mov
stos
push
inc
sub
pop
xor
inc
adc
sbb
and
pusha
and
xlat
shl
repnz
xchg
or
mov
or
les
add
xchg
adc
sbb
les
sub
push
out
sti
das
mov
xor
mov
cmp
xor
jb
jmp
in
cmp
jmp
mov
dec
or
stc
nop
dec
mov
call
test
sub
adc
mov
rol
ins
sbb
rol
into
cmps
in
mov
stc
(bad)
or
ja
fcmovne
ret
lock
aaa
inc
movs
daa
es
cmps
cmc
cmp
xchg
adc
and
push
out
or
gs
dec
movs
mov
jp
pusha
out
or
int
call
dec
popa
sar
rcr
in
fiadd
inc
aad
into
inc
in
push
mov
ss
mov
lds
or
push
cdq
outs
test
mov
mov
mov
sti
call
cmp
in
dec
pop
stos
gs
test
sahf
out
ss
push
aam
dec
aas
cmp
adc
pop
push
adc
push
add
sbb
mov
pop
dec
lds
xchg
jo
push
mov
or
add
add
pop
xchg
std
mov
(bad)
sub
mov
cdq
outs
cwde
repz
outs
lods
mov
out
push
aam
pusha
mov
cdq
xchg
rcl
fnsave
xor
sbb
nop
shr
cmp
nop
bound
not
(bad)
mov
arpl
lds
or
popa
fild
and
and
shl
aad
cmc
push
inc
jl
aaa
and
cmp
xor
repz
mov
pop
dec
ja
call
aad
adc
add
fist
jns
jne
add
nop
xor
xchg
test
shl
add
xor
stos
out
(bad)
out
or
jae
lock
inc
jle
rol
pop
mov
inc
xor
lar
cs
daa
loopne
test
rol
push
pop
cvtpi2ps
sub
inc
inc
xchg
mov
xchg
popa
xchg
xor
aad
cs
adc
and
imul
push
mov
imul
icebp
jmp
gs
mov
dec
test
outs
dec
in
cmps
push
and
add
cwde
mov
test
cmp
xchg
je
int
movs
xchg
mov
lods
push
sub
sbb
shl
sbb
mov
call
cwde
sbb
jno
mov
(bad)
arpl
jge
and
jno
add
test
(bad)
jns
jb
repz
adc
push
sub
jne
clc
mov
dec
xor
in
call
push
sub
in
inc
loopne
repz
sub
adc
mov
ja
lods
pop
mov
inc
cmp
popa
cmps
push
jae
xor
sub
shl
shl
loopne
call
sbb
jnp
repnz
imul
push
sbb
push
loopne
xchg
add
retf
inc
test
adc
cmp
or
xchg
cmp
rcl
dec
dec
sbb
clc
adc
xchg
mov
mov
int
fisttp
in
imul
enter
lds
mov
dec
and
movs
or
xor
lods
int3
jb
call
jne
in
in
test
(bad)
pusha
cwde
lea
loopne
adc
dec
push
shl
rcr
pop
inc
mov
fsubp
pusha
cmc
nop
out
imul
cmc
fwait
jle
aaa
and
cs
mov
mov
or
add
(bad)
test
lock
fidiv
rcl
ret
adc
add
mov
mov
shr
in
in
jne
loopne
push
cmp
jecxz
sbb
sbb
leave
sub
sar
(bad)
xchg
mov
(bad)
adc
or
jp
sub
out
sub
retf
add
xor
scas
cli
push
add
add
popw
pushf
iret
shl
enter
or
mov
lea
int3
dec
mov
jae
pop
int
rol
in
add
jae
inc
hlt
test
dec
mov
dec
fs
xchg
std
inc
xor
bound
xor
js
mov
and
cmp
data16
icebp
and
popf
xchg
aam
std
inc
jo
fnstsw
jl
ja
test
pop
dec
lods
ins
test
sub
aas
fidivr
jno
sbb
pop
push
sbb
inc
ins
xor
loop
sub
xor
add
std
sub
sbb
dec
jg
js
push
retf
push
pushf
xor
xor
icebp
in
mov
enter
push
xchg
call
mov
mov
inc
ins
add
sub
retf
jmp
inc
mov
cdq
sbb
jle
(bad)
add
(bad)
add
ja
inc
clc
repz
inc
loopne
xchg
ja
out
mov
std
(bad)
jmp
ret
sub
loop
push
das
adc
clc
fwait
sbb
inc
sar
aad
fidiv
int
mov
ret
scas
mov
push
popa
loope
movs
outs
jns
icebp
inc
in
push
push
movs
adc
cmp
test
jge
pop
sbb
mov
pop
or
adc
sub
push
pop
push
inc
stos
mov
cdq
loope
rcl
test
push
xor
inc
movs
loopne
aam
je
pop
xor
std
int
xlat
xor
xchg
sub
sub
out
scas
mov
push
ja
lds
dec
and
nop
pop
imul
cmp
movs
clc
pop
jb
bound
push
and
xor
gs
xor
in
adc
jecxz
mov
fnsave
test
imul
and
sbb
sahf
xchg
or
sub
in
(bad)
cmps
jb
(bad)
sar
inc
xchg
jb
mov
xchg
jge
or
push
xor
sti
(bad)
sahf
and
xchg
xor
das
pusha
retf
and
ins
loop
inc
cmc
ins
add
pop
mov
loop
adc
pop
(bad)
jne
hlt
mov
mov
add
xchg
jmp
aad
repnz
pop
stos
retf
jmp
hlt
xchg
icebp
sub
(bad)
jno
push
stc
pop
mov
add
pop
and
scas
pop
rcr
jp
pop
(bad)
pop
push
sbb
out
clc
inc
bound
into
and
jb
pop
add
icebp
bound
push
mov
(bad)
lahf
cmp
pusha
xchg
xchg
mov
adc
out
out
in
jbe
ins
div
push
je
shl
mov
jbe
sbb
scas
add
mov
add
sbb
adc
das
stos
data16
jne
out
loopne
lds
and
mov
js
sub
fwait
(bad)
int3
mov
(bad)
xchg
or
lds
leave
retf
ret
cmps
in
sbb
mov
inc
jo
xchg
jp
rol
mov
mov
jae
les
cmp
xor
cmp
shl
fist
ins
jno
ss
aaa
jecxz
ja
push
pushf
loope
dec
iret
xor
std
pop
sub
enter
cwde
sti
ss
(bad)
sub
xor
inc
jl
icebp
in
lods
inc
or
ret
sbb
rcl
sbb
fwait
out
dec
loopne
pop
pop
stos
ins
xor
icebp
push
push
lds
sti
xor
add
fwait
test
es
jp
xor
movs
lock
mov
jl
fcom
mov
test
pop
jb
ins
neg
inc
and
sahf
dec
jb
adc
dec
outs
stos
cmp
push
xor
mov
push
adc
sahf
cmc
push
and
fldenv
test
mov
retf
outs
mov
jne
sbb
out
aaa
xlat
pop
xor
rcr
inc
adc
xchg
cld
inc
rcl
adc
mov
pushf
xchg
iret
js
aaa
and
mov
xor
inc
fild
nop
ror
out
fiadd
pop
pop
jo
xor
(bad)
and
xor
cli
cmp
adc
ins
mov
leave
test
ss
xchg
and
mov
add
cld
adc
and
mov
fist
xchg
mov
test
add
je
icebp
adc
aam
mov
add
xlat
and
shr
leave
sbb
mov
retf
pushf
add
in
outs
lahf
js
mov
dec
(bad)
mov
and
jmp
shl
ror
inc
sbb
fbld
mov
mov
dec
nop
lahf
ds
adc
gs
leave
jmp
and
pusha
add
xlat
mov
movs
aas
xchg
out
enter
fbld
pop
and
popa
xor
or
add
push
sbb
jp
adc
xchg
sbb
lds
sbb
adc
inc
cmc
dec
movs
xchg
test
add
sub
mov
xchg
or
cwde
ins
mov
movs
lds
mov
sbb
push
in
and
xor
fs
arpl
test
mov
bound
xor
sbb
sub
jecxz
sub
shl
push
add
adc
test
js
xor
pop
adc
jmp
retf
icebp
aad
rol
sbb
push
sub
mov
dec
sar
xchg
test
cmc
jne
xor
ja
mov
dec
mov
pop
add
popa
cmp
sbb
sub
add
pop
or
xor
(bad)
dec
dec
enter
mov
xor
aas
inc
adc
mov
ds
call
mov
movs
push
xor
jne
push
aam
mov
enter
xchg
fistp
div
and
xchg
sar
mov
push
fild
iret
push
sbb
sub
aam
in
imul
shl
add
dec
es
dec
dec
mov
sbb
xor
adc
jno
shl
mov
aaa
push
(bad)
push
leave
push
mov
push
sub
push
movs
daa
test
push
push
repz
push
repz
mov
ins
lods
jle
xchg
add
jge
cld
or
sti
inc
xchg
daa
hlt
daa
cmc
xchg
mov
add
pop
xchg
(bad)
ja
pop
out
jle
push
test
mov
mov
(bad)
daa
rcl
add
pop
add
arpl
mov
ins
iret
in
xlat
push
test
xchg
mov
lahf
jecxz
add
sbb
pop
adc
push
or
mov
pop
test
dec
pop
jle
popa
retf
mov
(bad)
aaa
jmp
pop
push
shl
je
out
fbstp
in
pop
xor
jb
xor
mov
xor
fsub
jne
cmp
aad
jbe
je
std
mov
xlat
adc
mov
imul
or
mov
punpckldq
dec
retf
into
lock
loope
dec
test
aad
aaa
call
into
popf
cmp
dec
lock
clc
in
lock
mov
push
cli
js
(bad)
pushf
push
or
xchg
test
push
jbe
daa
pop
movs
bound
sbb
mov
arpl
lods
jp
test
push
jp
das
movs
mov
hlt
ret
xchg
sub
mov
in
xchg
hlt
jne
cld
jbe
fidiv
cs
movs
fdiv
fcom
rcl
(bad)
repnz
mov
adc
xor
in
add
ins
push
add
jno
inc
ret
lock
jnp
push
mov
pop
sti
in
jmp
iret
add
shl
sub
cmp
popf
jo
inc
hlt
es
lds
retf
or
and
adc
jmp
xchg
pop
in
xchg
(bad)
call
pusha
xor
xchg
es
and
mov
inc
adc
ret
setp
sub
add
into
sbb
out
std
xchg
std
enter
sub
adc
push
mov
dec
mov
xor
push
sub
mov
adc
push
xor
test
mov
inc
xchg
pop
cmp
ins
shl
push
push
sbb
xchg
mov
cmps
jae
jno
test
adc
mov
mov
in
mov
push
shr
mov
shr
mov
outs
aad
ins
out
fsubrp
retf
lods
aad
retf
cmps
adc
out
mov
xchg
dec
shl
adc
push
leave
mov
and
mov
shl
ficomp
and
mov
mov
fs
je
add
or
rol
je
dec
ins
loope
mov
fsub
(bad)
and
in
and
loop
xor
mov
shl
jge
stos
push
and
mov
inc
xor
and
xchg
dec
imul
pushf
mov
int
fld
icebp
dec
mov
mov
jae
and
cmps
cmps
inc
pop
icebp
mov
nop
in
push
(bad)
outs
sahf
xchg
fdivp
dec
loop
and
inc
adc
imul
movs
loop
loopne
adc
mov
test
out
cmps
test
fwait
hlt
mov
in
(bad)
(bad)
mov
addr16
inc
cli
jne
mov
loop
div
pop
test
mov
cmp
xor
mov
clc
sti
mov
mov
mov
push
adc
loop
nop
test
mov
jmp
ret
movs
in
xlat
xor
add
enter
pop
loop
inc
inc
adc
sub
sbb
push
sbb
dec
sbb
repz
xchg
daa
lods
mov
imul
sub
in
jge
inc
jecxz
and
mov
pop
and
iret
mov
xchg
sahf
int
inc
xor
scas
bound
mov
ror
add
pop
mov
fs
add
mov
sar
in
and
popa
addr16
cmp
call
ds
lock
enter
movs
push
jmp
test
ror
mov
dec
out
movs
ds
sti
xor
adc
fstp
imul
mov
jge
xor
scas
call
lods
imul
in
ins
js
std
je
shl
inc
inc
add
icebp
jae
adc
xlat
popa
mul
sbb
add
nop
lds
gs
sub
jl
jns
cmp
mov
fs
out
pop
fst
adc
std
ins
imul
push
cwde
dec
cmp
mov
(bad)
loope
in
cmc
inc
jae
push
xchg
mov
adc
dec
or
inc
movs
sub
cmp
shl
aaa
call
adc
in
mov
into
lahf
pop
add
test
js
js
mov
out
sub
lds
jle
mov
xchg
sbb
int
lea
adc
lock
into
mov
jecxz
pop
mov
inc
pusha
cwde
test
rol
imul
mov
mov
and
mov
lock
pop
mov
mov
inc
push
jmp
mov
jne
pop
sbb
push
and
xor
or
dec
pop
inc
outs
add
mov
pusha
or
sbb
mov
dec
ja
xor
xor
(bad)
pop
rcl
in
adc
addr16
call
movs
les
aam
sbb
pop
outs
mov
or
add
cmc
inc
mov
test
adc
cmps
fcomi
add
pop
test
lods
aad
xchg
cwde
fidiv
mov
test
(bad)
mov
pop
xchg
scas
bnd
adc
ret
scas
xchg
push
fst
inc
(bad)
xor
xchg
test
int
ss
pop
ss
fs
loop
xor
push
jne
and
and
dec
fs
adc
xor
xor
dec
mov
xor
add
nop
retf
(bad)
fst
aam
pop
mov
leave
jle
dec
in
push
(bad)
and
and
mov
sub
add
add
mov
pop
lods
into
add
imul
xor
xchg
cmps
inc
dec
push
rcr
xor
pop
ja
or
xchg
mov
loopne
rcr
add
and
xor
push
cmp
ins
ss
add
sub
inc
in
fs
mov
std
shr
cmp
out
or
popa
gs
movs
addr16
cmp
out
or
inc
jae
cmp
sub
and
xlat
pop
icebp
push
and
test
push
push
enter
adc
and
or
shl
or
jmp
adc
inc
xor
or
sbb
jle
sti
inc
xor
sbb
lea
lods
fistp
popa
sbb
pop
movs
add
mov
rol
adc
xor
add
movs
outs
sahf
jg
jg
and
dec
dec
cwde
mov
(bad)
xchg
xchg
add
jl
shl
pop
dec
test
imul
mov
pop
xchg
scas
push
mov
jae
out
pusha
ja
sbb
int
loope
out
push
gs
mov
mov
mov
movs
xor
pop
xchg
add
in
shl
push
pop
movs
adc
jae
mov
cmp
adc
data16
in
lock
jecxz
jmp
or
sbb
aad
stc
push
adc
pop
pop
adc
shl
dec
mov
daa
test
imul
cld
pusha
icebp
add
les
push
add
mov
add
test
and
arpl
mov
in
cmp
jecxz
mov
(bad)
mov
mov
jns
cmps
(bad)
jno
add
dec
inc
arpl
loopne
inc
in
jbe
imul
stos
push
das
add
push
adc
pusha
popa
clc
xchg
div
jg
int
mov
lods
adc
cmp
loopne
cmp
mov
and
jle
xchg
mov
shr
sbb
inc
dec
mov
out
ds
test
inc
ins
mov
add
hlt
cmp
mov
jno
jl
inc
jb
ret
dec
fcomp
push
in
and
outs
mov
jge
mov
pushw
xor
scas
or
mov
fld
aad
int
int3
outs
mov
push
lds
(bad)
dec
mov
adc
(bad)
lods
push
jnp
and
les
int3
gs
movs
and
movs
adc
inc
or
adc
(bad)
adc
adc
shl
ret
lods
shr
mov
retf
xchg
mov
jb
xor
inc
jl
lds
jns
cmc
jo
jns
or
fwait
add
mov
loope
xchg
(bad)
and
je
inc
mov
(bad)
lock
cmc
rcl
test
loopne
mov
lds
test
out
mov
int3
movs
push
test
or
daa
movs
cmc
sbb
ret
test
inc
pop
int
jae
inc
and
test
inc
movs
add
sbb
push
sar
push
in
call
rol
push
mov
mov
pop
inc
xchg
jp
call
mov
and
adc
mov
adc
out
cmps
fdiv
shl
gs
dec
mov
mov
jge
and
fnstenv
scas
jbe
sub
xor
adc
inc
mov
fwait
lahf
fisttp
mov
lods
jo
test
sbb
call
xor
mov
or
mov
mov
mov
jle
faddp
cmc
adc
popa
(bad)
js
mov
daa
fsub
xchg
ins
push
add
xor
or
dec
imul
retf
push
xchg
popa
div
mov
adc
dec
or
mov
repnz
add
sub
mov
inc
out
aad
mov
xor
pusha
cli
and
dec
ret
ins
push
xchg
inc
adc
aad
fnsave
shl
xor
sbb
sbb
jb
mov
sbb
cmps
and
sub
jg
jb
pop
mov
jmp
aaa
inc
mov
aad
push
sbb
jo
hlt
xor
pop
adc
jb
outs
sub
icebp
mov
mov
movs
xlat
fdiv
sub
shl
add
cmps
cmp
add
pop
push
movs
(bad)
mov
cmps
repnz
cld
and
ret
stos
cld
pop
pop
retf
lock
mov
cmc
scas
mov
into
mov
lods
shr
and
lods
jb
cmp
ror
cmc
rcl
sbb
cmp
inc
test
and
stos
push
mov
dec
in
adc
xchg
jbe
dec
adc
sub
movs
xor
inc
clc
adc
mov
ret
sub
icebp
aad
add
arpl
sbb
pusha
xchg
adc
inc
jb
rol
int
cmp
loopne
mov
adc
push
push
inc
bound
push
mov
add
sub
xchg
int3
push
aam
push
lds
adc
pop
push
movs
xor
test
jge
ficom
scas
mov
inc
jmp
stos
out
das
adc
push
mov
loop
sbb
adc
add
sar
test
bound
hlt
js
mov
push
das
pop
and
xchg
(bad)
in
out
cmps
cmc
out
lds
pop
xor
movs
xchg
(bad)
rcl
into
popf
pop
(bad)
push
pop
sbb
dec
test
outs
mov
and
retf
loope
retf
jle
xchg
(bad)
leave
and
aad
push
pop
ret
test
fistp
test
or
sbb
jbe
mov
dec
push
adc
imul
fsub
rcl
out
loope
push
push
push
add
jge
and
fsubr
adc
jnp
add
(bad)
in
out
aaa
push
test
data16
add
sbb
cmp
cwde
cmc
push
inc
(bad)
call
arpl
xchg
into
xchg
cmps
aaa
and
sti
retf
jno
cmp
inc
mov
(bad)
jecxz
loop
jmp
lds
inc
mov
xchg
das
xchg
out
push
pop
xchg
and
dec
stos
ror
popa
test
jbe
(bad)
call
daa
jecxz
icebp
adc
sub
rcl
cmp
xor
sub
iret
aad
cmp
gs
and
add
add
xor
adc
out
std
fwait
jnp
bound
gs
repnz
cmp
xor
into
cdq
div
inc
mov
dec
and
mov
and
call
pop
outs
push
inc
add
adc
arpl
xor
loope
push
pop
ja
add
push
mov
pop
fwait
movs
and
nop
call
shl
mov
add
pop
addr16
xchg
inc
and
cmc
push
cld
es
cli
or
ror
ret
or
icebp
push
loopne
popa
stos
scas
inc
pop
xchg
outs
xchg
jo
mov
cmc
hlt
push
int3
xor
outs
stc
test
jne
mov
repz
dec
in
inc
div
fiadd
inc
sti
(bad)
int
mov
jmp
and
imul
in
lea
mov
jbe
clc
and
pop
and
rcl
cmp
mov
clc
or
cdq
dec
cdq
aaa
or
xor
mov
and
retf
or
pop
jecxz
jno
inc
dec
shl
fwait
push
inc
outs
jmp
sub
fld
adc
shr
xor
push
punpckldq
mov
jp
aaa
add
jmp
out
add
ds
jecxz
pop
pop
push
mov
sub
shl
nop
mov
push
mov
pop
arpl
sar
ja
jo
add
gs
out
movs
imul
movs
(bad)
mov
push
xchg
fimul
scas
and
adc
cmc
mov
pop
xchg
dec
xor
mov
in
je
xor
xor
mov
pop
stos
xchg
add
adc
or
dec
mov
push
test
mov
out
xchg
ins
popf
cmp
cmps
adc
loop
shl
add
retf
mov
cmps
je
xchg
mov
movs
push
mov
sti
rol
movs
inc
push
lahf
and
cmp
shl
push
in
mov
sbb
mov
inc
jge
outs
cmp
bound
test
mov
xchg
dec
inc
daa
jge
icebp
sub
sbb
jmp
aas
test
out
fld
mov
dec
mov
and
pop
mov
and
push
xor
lods
xchg
out
mov
inc
hlt
mov
les
ds
cmp
loope
xchg
shl
xchg
push
mov
jmp
mov
sub
jae
push
bound
(bad)
adc
cmp
ror
ret
and
xchg
imul
sbb
add
sub
cli
aas
sub
push
xor
inc
pop
into
xchg
dec
adc
test
add
push
out
hlt
add
jb
pop
dec
imul
loopne
fild
mov
and
mov
mov
es
mov
pop
ret
mov
in
jno
adc
enter
aam
xchg
gs
xlat
adc
adc
or
xor
cmp
clc
ds
xchg
das
jmp
inc
nop
into
push
js
inc
arpl
jmp
pop
push
or
pop
jle
out
xchg
xor
(bad)
(bad)
outs
ja
mov
movs
dec
(bad)
mov
adc
adc
mov
mov
retf
mov
popa
ins
adc
xchg
jbe
pop
(bad)
loop
mov
pop
mov
movs
xlat
faddp
dec
push
jmp
pop
adc
jecxz
adc
adc
fiadd
xchg
call
loop
hlt
cmps
scas
pop
xchg
or
inc
loop
mov
add
xor
pop
xor
icebp
std
je
adc
in
add
push
(bad)
push
pop
xchg
and
imul
pop
jp
aad
int
scas
mov
mov
jo
jno
mov
cmps
ja
pop
movs
bound
or
rcl
pop
(bad)
push
inc
pop
fcom
fwait
cld
adc
mov
and
or
pushf
add
adc
aam
mov
pop
mov
gs
cdq
xor
lds
into
xor
sbb
jno
push
sti
and
adc
push
sar
fwait
scas
push
mov
push
ins
aam
das
cwde
inc
in
mov
ins
aam
xor
cmc
jnp
int3
idiv
aad
test
add
scas
mov
adc
dec
(bad)
sbb
mov
xor
hlt
inc
ret
inc
cld
add
jnp
xchg
(bad)
add
xchg
loopne
mov
std
dec
lahf
and
add
push
ja
cmp
lock
adc
mov
nop
popf
call
cmp
push
lahf
lea
sub
(bad)
ins
or
mov
push
inc
add
mov
clc
jae
popa
xor
add
test
jecxz
das
jge
jmp
stc
cli
pusha
jge
jae
pushf
cdq
lods
cwde
push
bswap
jp
push
rcr
and
push
(bad)
mov
pop
and
jge
popa
cmc
push
fimul
jmp
xor
out
mov
sub
mov
dec
pop
mov
xor
movs
cld
loope
inc
cmc
add
sar
gs
aad
bound
cdq
jle
fisub
in
in
dec
int
nop
dec
sbb
mov
xor
inc
sub
sbb
add
mov
call
adc
movs
xchg
cs
xchg
test
loopne
add
add
add
mov
inc
outs
push
shr
gs
pop
dec
dec
stos
cwde
lds
mov
int3
mov
xor
dec
xor
mov
inc
mov
sahf
pop
js
cmp
cmc
push
sub
push
and
jmp
fsubr
jno
push
add
sub
lea
mov
mov
pop
and
add
jbe
mov
and
hlt
lea
lds
jo
mov
cmps
mov
mov
mov
push
jge
push
repnz
movs
mov
daa
lock
jg
sahf
xchg
fnstenv
dec
shr
sbb
sub
jp
jl
sub
add
movs
call
fldcw
leave
icebp
add
test
jg
inc
push
jns
imul
test
cmp
aad
ds
mov
repnz
cwde
jbe
push
mov
outs
pop
rcl
adc
call
je
loopne
push
and
leave
lea
push
sbb
or
push
popf
(bad)
fdivr
inc
xchg
cmps
gs
pop
push
pop
cld
je
mov
push
fistp
push
stos
push
inc
cmps
cdq
jo
push
out
mov
mov
arpl
mov
add
and
leave
cmps
lock
cli
iret
add
jns
sbb
cld
cli
cmp
aad
int
inc
clc
or
ja
imul
xor
pop
mov
adc
push
adc
icebp
pop
shr
cmp
lods
push
movs
mov
sar
jmp
stos
jmp
cmps
mov
test
jb
xor
icebp
push
push
imul
sub
or
jo
scas
repz
pop
push
push
jo
mov
(bad)
mov
nop
sahf
xchg
and
mov
inc
mov
out
mov
cdq
pop
mov
xchg
mov
add
bound
pop
sub
push
jns
enter
test
pop
scas
loop
push
inc
mov
or
das
pop
and
aam
or
lock
out
sbb
out
add
addr16
or
push
inc
mov
sub
and
stc
je
call
pop
and
inc
adc
push
lods
adc
add
pop
and
lds
inc
movs
pop
jecxz
(bad)
xor
cmp
bound
movs
cli
test
into
mov
mov
cmc
(bad)
mov
movs
fiadd
sbb
jo
test
add
in
and
push
mov
movs
mov
test
add
mov
and
xor
(bad)
out
sbb
mov
cmc
push
retf
ins
lea
or
add
ds
ss
add
in
xchg
xchg
bound
jnp
arpl
lds
mov
cmc
cs
popa
ret
adc
es
ins
push
or
in
movs
adc
shl
rol
fldenv
gs
push
pop
xchg
mov
and
jp
adc
adc
(bad)
retf
cmp
cld
mov
movs
xor
inc
fidivr
icebp
cmp
sbb
jns
test
lods
gs
xor
xchg
stos
cmp
test
or
xlat
shl
mov
adc
movs
sub
js
(bad)
test
shr
bound
xor
or
and
push
ins
xor
jne
cmp
shl
movs
inc
pop
pop
mov
pop
in
inc
mov
xchg
inc
mov
mov
test
pusha
sub
sub
adc
mov
sub
ficom
push
push
xchg
sbb
inc
nop
mov
mov
cwde
mov
ins
fbstp
sub
adc
out
mov
push
adc
inc
xchg
out
movs
push
sbb
in
mov
jb
test
int
test
movs
ret
(bad)
push
shl
div
sbb
test
dec
adc
lock
jl
sbb
inc
xlat
add
xor
xor
int
movs
jne
stos
jle
and
push
sbb
mov
dec
inc
xchg
stos
les
jo
sar
icebp
adc
enter
rol
ror
das
xchg
jmp
xor
jae
jmp
push
in
inc
(bad)
jge
adc
add
ins
aad
int3
cmps
shl
mov
add
jle
mov
sub
ret
stc
fbstp
out
(bad)
outs
mov
outs
cmps
push
lea
or
adc
or
add
pop
dec
movs
dec
out
or
je
ret
pop
mov
add
xlat
cmp
in
inc
add
fwait
mov
mov
push
pop
movs
fsub
push
adc
pop
cwde
and
(bad)
cdq
sub
out
mov
inc
mov
push
dec
adc
js
xchg
lea
movs
jnp
(bad)
pop
xchg
addr16
or
mov
and
xor
adc
adc
inc
fst
add
or
pusha
bound
xchg
xlat
mov
mov
movs
mov
jae
rol
cmp
jle
jbe
leave
mov
cmp
jo
call
cs
ret
ret
cmc
popf
push
xchg
dec
xchg
push
mov
sbb
add
sub
(bad)
jecxz
xchg
in
ja
(bad)
inc
shl
sub
mov
dec
pop
test
adc
or
fcmovbe
jnp
inc
bnd
mov
adc
inc
dec
xor
scas
inc
aad
lods
retf
adc
fnsetpm(287
sbb
xlat
call
outs
movs
xor
in
mov
adc
dec
out
xchg
aaa
daa
int
cmp
push
arpl
inc
jbe
push
clc
mov
shl
cwde
inc
sbb
pop
rol
inc
jbe
mov
(bad)
xlat
pusha
mov
js
(bad)
and
(bad)
test
mov
mov
fdivp
push
call
je
mov
cmp
add
xchg
xchg
jns
ss
add
addr16
jnp
and
js
shl
and
sub
out
nop
pop
out
in
or
test
out
sti
mov
mov
movs
sbb
push
in
ret
mov
std
xor
push
jnp
into
jge
push
xor
in
scas
add
lea
xabort
out
scas
mov
xlat
test
jle
or
in
jne
and
loop
stc
mov
test
aam
lahf
pushf
sbb
inc
popa
imul
sbb
in
jno
push
sahf
inc
mov
push
xchg
inc
xchg
shl
daa
push
inc
adc
sub
jns
pushf
or
test
adc
or
ds
test
sub
pop
fs
jne
pop
bound
adc
fst
scas
sub
pusha
inc
jae
jno
jmp
pop
(bad)
shr
mov
jb
mov
inc
cdq
aam
pop
xchg
push
retf
std
and
pop
mov
sbb
mov
dec
loope
pop
aam
mov
cmc
add
sub
xchg
int3
sbb
sub
xchg
popf
pushf
xchg
loopne
push
outs
and
loopne
jge
lock
xchg
add
xor
xchg
je
push
mov
cmp
inc
lea
sub
fist
xchg
aam
sbb
push
sub
adc
cwde
popf
pop
sbb
out
cli
xchg
sbb
scas
push
ror
outs
xchg
call
call
out
push
enter
mov
mov
lds
cld
vmread
mov
sbb
in
sub
mov
mov
gs
dec
dec
fdivr
popa
test
rol
xchg
mov
inc
inc
and
sub
adc
add
pop
dec
aam
xchg
movs
and
scas
out
popa
xchg
mov
mov
push
mov
stos
jge
pop
sahf
jl
std
or
call
sub
lea
xchg
inc
(bad)
inc
enter
push
call
hlt
jge
hlt
rol
and
inc
xchg
enter
dec
imul
push
in
ss
pop
imul
sub
xor
cmp
js
repz
gs
rcr
les
stos
gs
dec
push
fistp
arpl
mov
jae
arpl
adc
xchg
cwde
in
mov
fisttp
cmps
test
mov
xchg
ror
mov
mov
test
inc
sbb
inc
jmp
ret
add
push
in
out
sahf
mul
mov
sbb
push
mov
(bad)
scas
mov
cmc
fiadd
dec
sub
dec
repnz
ja
inc
mov
mov
mov
popf
mov
and
cmps
je
sbb
or
pop
fistp
add
push
push
mov
pop
ins
inc
cmps
hlt
xor
fwait
scas
push
sar
in
fidivr
ret
sub
rol
sti
std
add
out
cmp
sbb
inc
retf
sti
jle
lock
inc
jno
cmc
jmp
mov
test
xor
xor
mov
sbb
add
lods
imul
rcr
imul
(bad)
and
jmp
pop
pop
inc
sbb
mov
pop
inc
enter
mov
xchg
add
cmp
cmp
clc
cmp
mov
movs
int
nop
jmp
mov
inc
ins
(bad)
push
repz
and
push
and
(bad)
or
sti
cmps
push
mov
push
xlat
in
inc
pop
outs
cli
add
lods
jg
ret
jno
std
pusha
aad
add
dec
and
cmp
push
xor
iret
dec
or
mov
jne
fwait
dec
sbb
add
xchg
dec
je
icebp
push
and
pusha
xchg
xchg
jmp
out
jmp
cmp
xchg
and
xor
and
test
test
es
loopne
lea
mov
adc
push
and
ja
add
adc
shl
inc
pushf
outs
xor
mov
je
repz
rcl
lds
sbb
jno
icebp
int3
pop
stos
mov
inc
sub
je
lock
mov
mov
add
shl
inc
xchg
scas
inc
xor
fnsave
call
xchg
(bad)
aad
cmp
xor
test
cdq
sbb
mov
aad
push
xchg
xchg
retf
mov
shl
popa
xchg
adc
js
pop
not
push
fwait
or
int3
lods
inc
mov
sub
test
or
jle
std
add
push
jecxz
dec
ret
push
ds
inc
push
and
loope
mov
push
in
not
sbb
xor
cli
not
stc
hlt
cmp
aad
in
in
xor
mov
jle
push
mov
in
pop
jmp
jns
gs
or
inc
ins
cmps
pop
ss
add
pop
aaa
popa
adc
aam
call
inc
xchg
sti
xor
inc
push
lock
xlat
mov
cld
je
cmp
test
xor
movs
in
lds
dec
push
cmp
test
sub
rcl
pop
xlat
inc
adc
add
lods
mov
das
xchg
mov
(bad)
out
test
sbb
push
inc
addr16
lods
jmp
dec
aam
mov
in
pop
push
cld
sbb
dec
cdq
xor
ror
adc
adc
shr
inc
jmp
lds
xor
cmp
or
inc
push
in
cli
push
std
in
sbb
sbb
push
adc
sbb
test
(bad)
mov
sbb
mov
add
mov
adc
sbb
push
push
jg
pop
dec
mov
xchg
push
mov
lahf
dec
lock
rcl
add
arpl
adc
rcl
push
add
inc
mov
xlat
cwde
outs
sub
inc
repz
xor
adc
ds
sbb
pop
add
test
inc
and
sub
and
sbb
adc
shl
add
sub
(bad)
out
xchg
aas
div
cmp
cmc
cmps
jne
cli
loope
arpl
mov
fidivr
js
shr
xor
loop
cmps
hlt
test
mov
scas
ss
jecxz
mov
jle
pop
ffree
jmp
xor
aad
iret
iret
fsubr
mov
and
pusha
(bad)
and
adc
jp
mov
push
xchg
mov
sbb
sub
inc
std
xor
mov
dec
js
hlt
call
mov
loop
push
xor
cmc
int3
mov
inc
loope
add
pop
loope
mov
xchg
cmps
pop
cmc
mov
imul
jmp
imul
into
pop
or
jne
fld
jo
jo
jg
xlat
ja
xchg
jo
adc
and
add
in
hlt
shl
jno
ds
xchg
arpl
js
jg
dec
sub
inc
mov
and
adc
inc
out
das
xchg
sub
jnp
cmps
xchg
sub
rol
push
pop
pusha
pop
mov
je
test
mov
mov
sub
cld
das
adc
xchg
sahf
inc
inc
xchg
cdq
popf
mov
push
sbb
mov
movs
loop
call
arpl
movs
jl
std
push
mov
and
or
mov
test
xor
cmp
sbb
xor
mov
adc
aas
push
jo
xor
cmp
and
push
xchg
jge
push
mov
pop
(bad)
repnz
aas
repnz
jno
sar
in
movs
in
or
je
mov
mov
cwde
shl
cmp
xchg
pop
loopne
(bad)
imul
(bad)
push
jmp
sbb
adc
xchg
hlt
sbb
sub
fdivr
fbstp
adc
fstp
inc
(bad)
std
and
lds
jge
pusha
push
xchg
xor
xor
cmp
and
dec
mov
stos
shl
lock
pushf
xchg
xchg
repz
inc
xlat
sub
out
bound
dec
mov
sbb
mov
jg
shr
adc
add
jae
sbb
cs
mov
or
mov
xchg
int
pop
lea
cwde
nop
ret
add
xor
(bad)
jecxz
cmps
addr16
je
pop
and
xchg
mov
xlat
mov
test
aam
and
inc
push
ret
mov
xor
and
div
inc
leavew
sub
out
mov
mov
sbb
mov
xchg
pop
mov
je
xchg
jle
jp
pop
ret
shr
out
mov
ins
repz
retf
pop
cli
adc
popa
mov
loope
cmp
sub
sbb
cs
test
add
or
jbe
outs
inc
push
ds
les
rcl
jo
and
or
xor
mov
ins
push
xor
mov
xor
sahf
nop
push
push
ins
push
imul
push
lds
dec
aad
or
arpl
(bad)
adc
adc
mov
in
sub
pusha
or
ja
inc
pop
stos
hlt
std
fs
ja
pusha
ds
loope
mov
sbb
xor
(bad)
call
shl
lods
mov
pusha
fwait
push
mov
push
adc
push
mov
or
cs
cmp
dec
imul
inc
or
mov
punpckhwd
mov
out
pop
mov
imul
out
fstp
xchg
repz
rcl
add
add
adc
xchg
outs
imul
lock
jmp
push
(bad)
xchg
aas
adc
push
sub
adc
cwde
and
mov
loope
leave
ss
push
add
ret
mov
in
xor
je
aaa
ret
jp
loope
dec
xchg
test
and
stos
sub
push
sbb
nop
(bad)
cmc
rcr
pop
add
nop
lods
pop
sar
sub
mov
jmp
sbb
add
mov
mov
xor
mov
gs
and
push
adc
arpl
jne
dec
out
fisubr
mov
repz
je
sbb
in
xor
(bad)
sti
cmp
rol
std
aad
cmps
xchg
lea
pusha
sub
inc
pusha
add
cwde
in
push
inc
inc
or
dec
rol
and
cld
fild
scas
aam
mov
inc
fwait
push
add
xor
xchg
mov
jae
push
fs
pop
sub
aad
das
in
add
fadd
mov
cs
dec
push
ss
xlat
fiadd
test
and
and
push
imul
int
arpl
rol
pusha
pop
cmp
addr16
rcr
pmullw
loop
mov
xchg
dec
retf
xor
xor
mov
jnp
xchg
je
imul
sub
out
xchg
cmc
fld
jno
test
imul
daa
popa
cmps
xlat
idiv
fisttp
mov
push
pusha
pop
test
sbb
(bad)
icebp
cmp
xchg
call
fs
xchg
sub
mov
sti
add
inc
jg
dec
pop
xchg
sub
scas
push
mov
(bad)
les
js
rcr
push
add
rcr
inc
ret
loop
pop
xor
add
xchg
jmp
cmps
adc
jns
xchg
movs
mov
mov
(bad)
enter
out
add
sbb
add
pop
add
in
fs
jae
push
test
cmc
les
push
add
arpl
daa
or
jno
and
ds
repz
mov
xor
or
test
xor
test
loopne
or
add
(bad)
xchg
and
push
in
or
sbb
in
sbb
sbb
push
mov
repnz
adc
clc
enter
xchg
adc
inc
fstp
xlat
cdq
popf
pushf
out
ss
rcr
xchg
cdq
retf
loop
ja
div
adc
out
xor
repz
inc
dec
movs
cmps
fld
lock
push
add
pop
xor
cmc
xchg
je
out
sbb
fisub
into
out
mov
scas
lds
jp
cmp
jnp
ror
mov
bound
xor
pusha
outs
add
sar
jb
icebp
lahf
ins
lock
cmp
int3
cmp
xor
mov
xchg
pop
xchg
jbe
js
outs
fsub
ror
mov
push
adc
hlt
lock
gs
(bad)
lahf
and
repnz
inc
imul
cmp
jno
cli
mov
adc
in
pop
xor
cmps
cld
leave
push
shl
into
xchg
sub
jge
xchg
add
js
les
dec
std
ins
pop
and
fidiv
dec
push
and
dec
fcomp
std
mov
dec
adc
shr
fcomp
shl
dec
mov
(bad)
rcr
(bad)
dec
push
mov
aad
jne
push
push
ins
sub
push
lea
mov
push
inc
aad
lods
and
dec
and
inc
pop
mov
mov
sbb
mov
(bad)
xchg
dec
in
mov
push
jo
mov
ja
aad
mov
and
sub
jmp
out
mov
out
aad
sbb
xchg
stos
mov
iret
xor
push
pop
mov
(bad)
push
mov
mov
sub
jno
popa
jae
ins
push
fs
jbe
repnz
stc
xor
and
shl
lods
in
fucomi
pusha
or
pushf
lahf
ud2
(bad)
call
jg
cdq
xchg
ins
mov
xor
mov
inc
jns
mov
xchg
add
pop
arpl
jmp
sbb
lea
aad
xor
pop
mov
mov
inc
(bad)
hlt
push
pusha
inc
out
jae
(bad)
xor
adc
cmp
mov
add
lods
in
mov
neg
push
pop
frstor
pop
test
adc
rol
cmc
inc
into
imul
(bad)
add
rcr
ja
dec
mov
push
paddq
push
ret
mov
mov
jge
fwait
dec
stos
mov
adc
shl
dec
mov
xchg
mov
adc
mov
ja
bound
dec
add
stc
mov
out
push
push
inc
pop
dec
sbb
not
inc
mov
cmp
adc
mov
jo
cmp
push
adc
test
gs
mov
add
stc
dec
sbb
cmc
add
ret
lds
push
nop
and
jbe
pop
pop
iret
scas
call
jmp
jl
ja
sub
lods
cmp
mov
mov
hlt
jne
jne
out
test
rcl
pop
mov
or
idiv
shl
bound
jno
and
jns
inc
mov
retf
inc
into
adc
xchg
in
lea
push
push
cwde
mov
rcr
sti
and
inc
sub
mov
aad
add
sub
jge
and
add
(bad)
xor
sub
jmp
outs
inc
cmp
jns
push
(bad)
(bad)
mov
jnp
add
adc
adc
aad
add
mov
push
bound
xchg
inc
int
lds
mov
jge
xlat
and
ins
and
mov
popa
inc
mov
js
in
mov
jno
jg
int
lds
int
push
jl
lahf
dec
xchg
loope
xor
sbb
inc
loop
xchg
icebp
jno
xor
xchg
aad
(bad)
pusha
xchg
test
outs
lds
push
xchg
iret
mov
popa
fistp
add
test
xchg
xchg
es
pop
adc
test
test
sbb
cwde
dec
mov
or
outs
dec
mov
xchg
aad
outs
and
inc
xor
mov
pop
push
bound
shl
xchg
(bad)
cmp
xchg
add
test
mov
inc
in
in
or
and
loopne
clc
jns
pop
fucomip
pop
push
retf
dec
adc
sub
push
adc
cmp
add
cmps
stos
pusha
jo
inc
adc
pop
(bad)
mul
add
or
hlt
mov
pop
shr
mov
and
clc
or
cmp
movs
jne
mov
xchg
push
mov
add
mov
jb
aam
pushf
mov
xor
test
js
sbb
xchg
cmc
push
je
ret
lahf
shl
pop
fucompp
arpl
jle
call
nop
and
jg
pop
shl
push
sbb
xor
jnp
ficom
and
xchg
jb
test
mov
data16
adc
shl
push
push
hlt
mov
outs
icebp
(bad)
jmp
push
inc
cmp
fcom
sbb
mov
shl
ins
xor
loope
jmp
mov
inc
add
push
movs
shl
sbb
mov
cmp
push
sbb
jmp
adc
pop
push
cmps
jb
jne
jecxz
stos
inc
shl
and
mov
shr
aam
jo
cli
pop
xchg
cmp
inc
leave
out
dec
es
call
pop
arpl
movs
imul
cmp
xchg
xchg
jp
int3
mov
cmps
sbb
mov
xor
dec
hlt
mov
dec
jge
int3
push
inc
xchg
cwde
fcomi
push
mov
push
push
or
adc
cdq
idiv
addr16
mov
xor
mov
mov
sub
retf
nop
mov
sbb
inc
in
les
mov
pop
mov
cld
push
loope
mov
jno
sbb
xor
pusha
fcmovnbe
aam
ja
pop
pop
inc
xor
call
and
ficomp
push
push
(bad)
mov
push
jo
jmp
pop
adc
test
jl
fs
out
ret
aad
xor
rol
xor
fs
mov
xchg
mov
test
pop
jecxz
outs
movs
cmp
mov
jo
xchg
xor
es
std
push
mov
jo
lock
mov
(bad)
repnz
inc
test
add
mov
push
xchg
sub
xchg
add
in
pop
rol
adc
inc
xor
add
pop
sub
arpl
popf
jp
push
xor
int3
les
sub
jle
add
or
push
dec
xor
inc
test
xor
xor
shl
jo
mov
cmp
pop
cwde
add
(bad)
rcl
cmp
(bad)
lock
mov
jmp
aas
xchg
cs
loop
mov
loopne
lods
(bad)
je
push
mov
mov
in
xor
jno
and
xchg
xchg
xchg
fdiv
push
mov
ret
push
(bad)
mov
scas
dec
xor
inc
jp
fwait
mov
in
retf
in
mov
mov
scas
jns
addr16
aad
clc
add
shl
fstp
jmp
shr
jecxz
cmp
in
cmp
std
push
scas
jns
push
movs
and
out
xchg
pop
cwde
int
xor
inc
icebp
jo
(bad)
mov
jb
mov
into
pop
(bad)
inc
aam
imul
ins
mov
dec
mov
mov
jle
mov
mov
jmp
sub
sbb
jb
test
mov
jae
sub
mov
es
add
daa
cmps
add
adc
and
push
sbb
push
inc
fnop
sbb
call
aam
inc
mov
xchg
test
ja
jne
gs
fdiv
dec
aas
dec
xor
clc
adc
xor
cmc
lock
mov
mov
jnp
sti
imul
test
mov
loope
pusha
sahf
clc
cmps
out
add
out
push
les
cmp
push
(bad)
jo
push
mov
mov
inc
xchg
ret
in
jmp
and
cmp
mov
jne
pop
hlt
fidiv
rcr
test
mov
mov
add
xchg
mov
shl
retf
add
inc
movs
sbb
rol
push
enter
pop
idiv
aam
dec
jo
enter
addr16
loope
xchg
mov
leave
xchg
xchg
lock
shr
adc
push
daa
xchg
adc
test
mov
in
in
or
and
jb
and
xor
or
jl
cmpxchg
(bad)
jo
push
jnp
mov
dec
cmp
xchg
movs
xchg
sub
outs
mov
gs
cmp
cwde
lods
and
sub
and
lods
(bad)
in
mov
movs
inc
push
retf
xchg
call
inc
cmps
cmc
cmp
push
rcr
ss
and
push
xor
adc
push
pop
push
mov
sub
ret
call
mov
inc
retf
jecxz
loop
pop
ficom
loopne
popf
adc
leave
mov
dec
test
jno
push
js
xchg
jl
or
aaa
jne
jg
out
mov
pop
jno
push
or
adc
int
lods
(bad)
or
dec
gs
mov
adc
ins
lea
gs
dec
out
mov
dec
aam
mov
and
out
fwait
stos
dec
pop
adc
inc
cmp
push
dec
xor
repz
(bad)
pop
enter
cmps
nop
mov
js
add
popf
and
mov
out
outs
jae
pusha
adc
push
movs
xor
mov
mov
bound
shl
fld
xchg
pop
xor
je
call
out
scas
mov
test
les
mov
jmp
mov
mov
cmps
int
sub
jp
xchg
push
icebp
xor
xchg
js
(bad)
aas
jae
dec
(bad)
sti
or
nop
mov
sbb
dec
jae
pusha
iret
push
in
cmp
scas
xor
push
mov
gs
lock
mov
mov
rcl
push
and
gs
mov
push
adc
test
mov
jmp
jle
pop
js
fucom
ret
addr16
push
mov
adc
fnsave
xor
sahf
push
fnstsw
iret
inc
test
cmp
jb
mov
rcr
in
cwde
gs
lods
mov
mov
xor
add
jge
loopne
xchg
inc
push
rcr
imul
inc
mov
sbb
jge
outs
xchg
mov
push
mov
lea
and
mov
ins
pushf
shr
cmc
(bad)
fxch
add
repz
loopne
out
fst
add
push
movs
cmp
fdivr
call
push
test
adc
cmps
inc
xor
gs
jo
ss
je
push
faddp
adc
aam
pop
add
int3
mov
cmps
mov
movs
xchg
add
or
adc
dec
and
and
and
sub
dec
inc
mov
in
clc
mov
or
mov
sub
sbb
dec
gs
jle
or
mov
push
aad
fnstenv
sti
lds
int3
push
mov
lea
cmps
xor
pop
(bad)
mov
add
iret
push
aad
test
and
mov
and
out
js
leave
adc
mov
pop
mov
popf
call
sub
xor
fild
add
jmp
mov
les
shr
sar
and
test
fst
and
pop
adc
scas
leave
js
add
shl
in
xchg
lock
in
xchg
adc
xor
mov
sub
sub
pushw
push
cmp
add
add
cmps
jns
xchg
ret
mov
xor
sub
gs
fcom
ret
pop
lock
ror
movs
or
pop
jne
cmp
adc
not
rcr
ss
stos
mov
dec
shl
dec
bound
pop
push
retf
push
jne
push
sti
xchg
cli
lds
gs
(bad)
das
mov
cmp
jns
mov
inc
xor
scas
mov
pushf
add
jg
idiv
test
and
jge
pop
push
push
adc
and
mov
daa
out
push
sbb
loop
sbb
sub
cmp
rol
pushf
dec
popf
ds
scas
shl
or
call
adc
jne
lahf
mov
jo
not
std
xchg
mov
xor
nop
ja
leave
icebp
pusha
rcl
push
xchg
ret
pusha
cmc
jae
push
movs
ret
ret
cmps
test
daa
mov
fdiv
mov
mov
outs
and
aas
cmp
cmp
push
das
add
push
lock
aaa
inc
jle
jmp
rcl
xor
sti
or
popa
fwait
jp
out
retf
adc
icebp
pushf
nop
xor
inc
imul
ins
jmp
clc
pop
push
shr
xlat
adc
and
test
dec
push
fxam
inc
push
add
and
inc
daa
cmp
xchg
in
mov
es
mov
mov
xchg
outs
pop
sbb
(bad)
adc
jp
retf
jl
adc
neg
and
mov
mov
or
retf
test
dec
adc
dec
imul
(bad)
mov
test
pop
sbb
addr16
aas
ret
inc
scas
fwait
loope
fs
and
mov
jne
not
sbb
fdivr
dec
pop
inc
adc
fwait
xlat
bound
lods
test
dec
jns
out
mov
push
xchg
(bad)
sub
daa
dec
adc
xchg
jle
sbb
and
jne
fiadd
mov
es
arpl
add
gs
arpl
ins
jne
out
xlat
push
cmps
mov
sub
xchg
push
imul
push
neg
lahf
lock
in
nop
into
pop
inc
dec
clc
xchg
int
add
rcl
inc
fucomip
repz
and
push
cmp
xchg
into
mov
push
xchg
mov
data16
out
or
je
icebp
in
jmp
popf
jmp
(bad)
or
jmp
xor
or
mul
and
cmp
rol
jne
je
iret
xchg
jl
mov
jbe
and
icebp
jg
and
aad
(bad)
enter
and
adc
cmc
rcr
je
inc
cmp
enter
call
cmp
and
mov
nop
inc
cs
mov
push
lods
jno
imul
shr
shl
lods
mov
mov
nop
and
shr
or
in
in
in
ss
cmp
xchg
test
push
cmps
push
and
cmp
push
or
hlt
in
leave
clc
arpl
inc
aam
les
sub
xchg
push
out
mov
inc
(bad)
pusha
inc
xchg
jno
icebp
popa
jmp
pop
test
lock
and
cmp
lock
nop
sti
shl
(bad)
(bad)
(bad)
xor
inc
mov
pusha
loopne
cli
adc
push
xchg
dec
sar
sbb
es
jne
in
and
outs
mov
cmps
mov
imul
xchg
inc
pusha
jmp
jecxz
adc
stos
test
xchg
icebp
and
aam
inc
mov
inc
cs
stc
ds
cdq
rol
mov
jle
push
xchg
aad
dec
add
gs
adc
(bad)
rcr
or
mov
xchg
xchg
cwde
call
dec
or
arpl
movs
enter
jmp
adc
fldpi
daa
dec
shr
jo
mov
or
std
repnz
(bad)
push
in
addr16
sar
push
or
hlt
imul
xchg
cld
mov
(bad)
retf
test
dec
daa
or
ror
xor
cmp
jb
out
call
scas
inc
repz
in
xchg
mov
ror
xchg
hlt
popf
inc
popa
cmp
mov
pop
sbb
scas
push
cmp
push
push
push
adc
pop
ret
aaa
repz
add
push
jmp
xchg
call
gs
jecxz
into
in
(bad)
popa
cmc
pusha
xor
xchg
push
fwait
in
xchg
cli
movs
xor
xchg
frstor
(bad)
sbb
dec
cmc
loope
lock
jne
fistp
mov
xchg
std
(bad)
adc
lds
fdiv
add
push
add
imul
test
fcom
push
xor
imul
sbb
pushf
push
jmp
jmp
mov
mov
loopne
pop
and
jmp
mov
retf
daa
push
push
cld
(bad)
fstp
popa
cmp
iret
push
hlt
(bad)
hlt
fld
or
les
adc
inc
mov
xchg
and
add
lds
rol
cmc
icebp
inc
loop
daa
je
es
xor
pop
call
rcl
or
xor
adc
push
sub
mov
mov
xchg
jecxz
test
test
xor
jno
inc
pop
pop
mov
sbb
aam
and
(bad)
pop
jb
or
ret
and
mov
je
push
cdq
and
sub
fs
aam
and
out
or
pusha
ror
sub
inc
test
movs
aad
icebp
add
call
shl
into
xor
xor
and
lds
cmps
push
popf
es
pop
pop
adc
int3
div
xchg
adc
cmp
jb
jnp
repz
test
pop
lods
dec
test
mov
and
and
cmp
cmp
dec
adc
jmp
pop
push
mov
jb
in
jg
es
sbb
ror
sub
mov
stos
push
mov
jg
xchg
movs
push
or
xor
(bad)
push
mov
fisub
cmp
cmp
test
inc
mov
pushf
bound
cmp
cmp
xlat
mov
xchg
mov
in
test
and
cmc
nop
adc
movs
shr
xor
jl
loope
jbe
mov
push
and
lods
jno
lea
push
enter
inc
in
repz
push
in
add
inc
movs
inc
push
es
mov
xor
add
push
dec
in
jne
jge
out
jae
jl
dec
cli
rcl
shl
jge
imul
div
xchg
data16
jmp
mov
cli
xchg
daa
xchg
inc
mov
sbb
iret
add
ins
mov
outs
and
mov
xor
icebp
xchg
adc
mov
pop
inc
cmc
dec
and
into
ror
push
mov
jb
hlt
cmc
xchg
(bad)
xor
aaa
les
add
sub
iret
ret
xor
fs
adc
add
dec
in
call
nop
xlat
mul
add
jne
mov
in
pop
and
jo
loopne
adc
mov
xor
xlat
push
push
and
loop
pop
ficomp
and
and
jne
out
pop
sbb
jle
gs
push
add
or
mov
int3
jmp
movs
xchg
popf
jl
jno
js
call
out
outs
sub
(bad)
cmps
jmp
mov
sbb
xlat
loope
mov
lods
and
rol
(bad)
adc
inc
std
pop
and
push
xor
cld
sbb
sbb
and
ret
xchg
inc
std
jo
mov
les
into
cwde
addr16
je
sar
sbb
ret
sbb
test
loop
iret
mov
mov
clc
mov
add
movs
addr16
cmp
pushf
xor
mov
xlat
and
enter
pop
in
(bad)
pop
push
fs
(bad)
ror
loop
xchg
or
(bad)
dec
movs
adc
imul
js
mov
sbb
and
pop
jp
(bad)
push
pop
sar
mov
rcr
xchg
xchg
imul
add
xor
jbe
xor
xor
mov
pop
mov
mov
pop
adc
jae
xchg
and
sub
imul
hlt
imul
mov
mov
push
mov
xchg
sub
pusha
sbb
scas
sar
gs
mov
mov
mov
inc
pop
pushf
std
adc
les
pushf
mov
mov
pusha
pop
aad
scas
add
fldl2t
cmc
out
push
jle
xor
xor
sbb
xor
jg
inc
and
rcl
imul
or
in
dec
mov
ss
dec
jbe
loope
inc
xchg
inc
(bad)
push
movs
add
xor
and
add
add
or
jge
fldenv
test
xor
cmc
push
ds
push
lods
push
dec
adc
fist
(bad)
adc
or
inc
ror
lds
push
mov
jg
leave
nop
es
add
jmp
push
inc
and
pop
packssdw
jo
out
fbld
jmp
in
adc
lods
and
sbb
int
lea
ror
inc
clc
imul
jmp
pop
stos
loopne
cmp
jp
(bad)
xchg
jmp
(bad)
(bad)
frstor
(bad)
cmps
test
mov
loopne
mov
mov
sbb
push
jno
adc
lds
or
cwde
push
lock
bound
loopne
in
addr16
bound
inc
or
imul
fs
outs
xchg
and
jno
xor
gs
pusha
cld
or
mov
mov
into
aad
mov
loop
xor
aam
fcmovu
or
nop
inc
mov
mov
movs
and
mov
loopne
loop
fist
fld
lock
add
inc
addr16
xchg
mov
(bad)
in
xchg
cli
mov
mov
fwait
mov
inc
push
data16
jbe
movs
inc
inc
sahf
hlt
js
loopne
mov
js
xor
loop
fistp
sub
in
hlt
mov
add
daa
mov
mov
test
add
shl
mov
adc
xchg
es
cmps
push
cmp
mov
jne
das
push
cli
pop
and
daa
push
lods
cmp
adc
mov
mov
xor
mov
nop
jle
xchg
icebp
and
lock
in
cwde
and
xor
cwde
in
gs
pop
cmp
rol
push
xchg
fwait
loope
jl
add
pop
call
dec
jb
cmp
in
xor
loope
pop
add
cmp
and
repnz
add
xor
mov
mov
pop
mov
inc
lock
fistp
xchg
lds
popa
repz
cmp
xchg
add
xor
mov
xor
pop
sbb
fstp
fnsave
mov
in
dec
jae
cmp
popa
cmps
in
in
sbb
cli
aaa
inc
adc
cmp
jp
loope
dec
popa
jnp
add
pop
add
cmovno
or
sub
pop
pop
mov
inc
pcmpgtd
fdivr
nop
jecxz
shl
xchg
sub
iret
movs
mov
shl
aaa
shl
or
inc
inc
shl
mov
xor
int3
pop
rcl
movs
xor
xor
or
pop
loop
dec
fwait
mov
inc
pop
mov
push
jmp
mov
dec
jmp
mov
hlt
xor
lods
sub
mov
loope
jno
repz
xchg
fcmovne
push
jns
xchg
hlt
nop
je
pop
shl
ret
sahf
mov
mov
stos
mov
popa
mov
aam
stc
adc
push
idiv
jle
xlat
pop
push
lahf
dec
pop
or
iret
pop
stc
ja
xor
mul
outs
mov
pusha
push
imul
pusha
mov
add
fbstp
mov
out
jmp
cmc
mov
rol
xor
mov
int
fcomi
fcos
jns
es
mov
ror
push
lods
das
mov
fsubr
mov
pusha
adc
fadd
lods
jne
add
or
mov
sar
movs
push
pop
aaa
popa
fist
hlt
into
and
xor
push
mov
(bad)
jg
sub
mov
loop
call
push
pop
xchg
or
mov
or
fiadd
inc
ins
push
ja
ins
rol
cwde
or
dec
cmps
popa
push
loop
add
shr
mov
icebp
jmp
pop
sub
push
sbb
movs
xor
pop
and
jns
and
outs
lds
cmp
dec
enter
mov
fnstsw
or
lock
mul
inc
xchg
or
xchg
jmp
jecxz
shr
push
call
xor
xor
ja
xor
jl
mov
xor
cmps
add
test
and
sbb
jmp
mov
or
or
or
test
nop
sbb
jmp
sbb
(bad)
out
sbb
pop
outs
sub
pop
cmp
adc
fcos
push
movs
outs
int
push
xchg
daa
xor
(bad)
xchg
imul
pop
rcl
adc
inc
outs
dec
nop
in
(bad)
dec
ret
icebp
outs
inc
cmc
and
push
lahf
xchg
cld
xor
adc
fist
out
icebp
mov
aad
popf
or
mov
jp
icebp
dec
xor
xchg
adc
outs
mov
shl
pop
cmps
xor
and
out
pusha
fwait
test
xor
jg
sbb
inc
bound
or
(bad)
test
xchg
or
sub
les
fbld
jecxz
movs
test
loopne
xor
pop
(bad)
shl
jae
sub
cmp
xchg
ds
pop
in
mov
aam
push
add
or
enter
cmps
and
ins
jbe
test
movs
shl
das
imul
add
test
lahf
add
rcl
xor
std
jns
push
out
mov
stos
in
rcr
adc
aad
xor
xchg
cmc
add
xchg
mov
pop
test
cmp
ins
aam
movs
movs
cmc
mov
sbb
and
aaa
outs
mov
les
shl
dec
mov
int3
loopne
cmc
mov
or
mov
ins
xor
xchg
inc
mov
into
cmp
popa
pushf
adc
aad
xor
jae
vmovups
ds
jo
in
sbb
and
aam
shrd
shl
xor
mov
cmps
inc
pop
mov
loop
addr16
sbb
ror
xlat
ss
mov
ret
and
mov
call
inc
leave
mov
mov
pop
jmp
repz
push
les
adc
test
add
aaa
mov
adc
push
repz
call
shr
sbb
ins
and
cwde
mov
push
loopne
mov
xlat
fadd
cld
sbb
stos
mov
rol
and
imul
movs
test
add
lods
daa
mov
lock
mov
daa
push
rol
cmp
dec
in
movs
call
retf
sahf
jbe
mov
sar
mov
retf
mov
jmp
mov
enter
mov
or
jmp
add
dec
shl
std
imul
inc
sbb
stos
test
outs
push
adc
std
not
add
add
inc
push
mov
xchg
add
test
ja
push
mov
ret
xchg
mov
out
test
jne
push
data16
adc
mov
cwde
jb
jne
inc
push
jg
daa
adc
push
ins
sbb
nop
stos
xchg
nop
add
es
pop
add
add
iret
and
sbb
sti
adc
mov
mov
push
pop
inc
in
shl
cmp
ret
pop
clc
rcr
jg
sbb
repnz
cli
adc
cmps
test
xchg
test
pusha
and
add
mov
repnz
jno
push
mov
mov
jp
jb
mov
std
hlt
inc
xchg
ins
cmp
test
int
int
push
pop
and
jnp
addr16
adc
movs
and
and
in
mov
dec
into
nop
mov
jns
xchg
jo
add
inc
pop
xor
lock
je
mul
mov
jae
and
mov
push
add
test
sub
mov
pop
push
outs
lods
pop
and
lods
mov
pusha
inc
jle
dec
mov
mov
or
je
cmp
das
pop
adc
pop
out
sbb
inc
fwait
xchg
cmp
adc
mov
test
cmp
retf
lea
and
pop
xlat
lds
xor
mov
inc
mov
ret
lahf
cdq
shl
adc
test
test
add
inc
xchg
aad
jge
scas
sub
xor
xchg
jns
in
movs
std
cmp
iret
not
xchg
cmp
adc
xchg
cmp
pop
ret
cmps
inc
xor
push
jo
inc
es
mov
or
jno
pop
push
fcomp
outs
cli
inc
js
push
(bad)
test
xchg
mov
sahf
add
mov
mov
pusha
test
ret
and
xor
scas
mov
loop
mov
pushf
or
clc
int
rcl
repnz
movs
into
inc
and
jle
nop
imul
inc
adc
jle
xor
or
pushf
(bad)
sub
xor
arpl
xchg
inc
out
sbb
add
out
pusha
clc
inc
mov
(bad)
push
not
call
mov
pop
xchg
jg
mov
and
leave
mov
les
sub
xchg
int
popf
add
sbb
loop
jne
xor
pop
xchg
jae
or
push
in
inc
dec
dec
xor
and
sbb
pusha
mov
vmovapd
ret
push
test
outs
lock
push
jnp
xlat
test
inc
test
push
pop
add
and
ins
jno
add
inc
daa
out
pushf
mov
fcom
frstor
sbb
repz
and
cld
ins
(bad)
mov
outs
inc
in
xchg
sub
mov
ss
cmp
rcr
xchg
sub
sbb
lock
in
dec
test
call
jl
add
lds
add
adc
loop
pop
in
add
mov
cmc
lds
(bad)
in
pop
mov
mov
mov
mov
(bad)
das
or
cmp
dec
jne
inc
inc
mov
mov
inc
adc
popa
cmc
cmp
mov
adc
or
push
div
jne
lock
adc
and
inc
stos
and
pop
push
gs
icebp
xchg
int
or
xchg
mov
int3
shl
xor
xor
mul
and
and
xchg
loope
rol
daa
popa
movs
dec
mov
jle
js
bound
outs
and
into
and
sbb
jns
aam
adc
push
popa
push
div
les
jle
dec
cmps
xor
sti
xor
or
pop
icebp
xlat
div
or
inc
push
push
ret
popa
jmp
popa
mov
cld
aaa
shl
add
popa
sbb
in
push
jne
dec
cmp
cwde
xchg
xor
shl
mov
jle
pop
fld
call
fs
daa
gs
inc
lods
cmps
pop
rcl
stc
xor
ins
dec
(bad)
mov
or
sbb
(bad)
adc
push
xor
aas
(bad)
xor
xor
xor
fisub
out
mov
or
adc
push
call
cmp
enter
test
jns
xchg
(bad)
xchg
mov
lds
push
dec
pop
and
push
movs
loope
or
vunpckhpd
and
pushf
jecxz
aad
and
and
mov
dec
cdq
sbb
or
and
popa
out
sub
rcl
jo
inc
mov
inc
push
pop
push
xchg
loopne
inc
mov
inc
xchg
iret
shl
stc
sbb
sbb
fs
xchg
addr16
mov
in
xor
inc
ds
inc
mov
daa
xchg
jne
call
or
mov
loopne
adc
add
cmp
add
test
add
scas
rcr
imul
add
inc
adc
daa
ret
xchg
and
inc
icebp
adc
mov
pop
mov
adc
mov
or
es
popf
(bad)
lock
rol
mov
(bad)
aam
mov
mov
xchg
imul
sti
in
stos
add
std
jmp
cmps
inc
(bad)
aam
movs
sbb
cmps
inc
mov
movs
dec
dec
and
mov
mov
int3
xor
hlt
jo
adc
push
mov
cmps
repz
mov
pop
ret
adc
add
pop
cmc
xchg
scas
or
int3
lahf
icebp
xchg
inc
je
out
lahf
xchg
pop
outs
aaa
es
add
stc
xor
jo
xlat
xor
test
jl
or
rcl
cmp
popa
ret
dec
xlat
or
loope
xchg
cmp
dec
mov
inc
sahf
ins
(bad)
sbb
inc
in
ror
add
mov
xchg
pop
sub
mov
ins
push
(bad)
mov
jmp
ret
xor
mov
xchg
dec
mov
mov
loope
jb
xchg
jne
es
xor
add
pop
add
add
dec
and
pop
in
jo
mov
cmp
sbb
xor
cmc
ret
or
adc
xchg
int3
mov
in
gs
inc
bound
cdq
mov
sbb
pop
out
cmc
xchg
lahf
sbb
sbb
xor
xor
test
adc
jne
adc
std
mov
imul
xlat
xor
aam
adc
xor
push
or
out
in
loopne
sbb
hlt
test
ror
lea
aas
push
sub
xor
daa
iret
vpsubsw
addr16
enter
inc
jmp
out
(bad)
fisub
les
movs
mov
mov
mov
gs
pop
push
and
es
push
(bad)
jb
fxch
test
jno
ds
ret
int
push
aad
add
inc
push
push
addr16
loopne
push
cmp
shr
adc
(bad)
xchg
or
jle
xchg
mov
lds
pop
and
xor
addr16
in
xor
push
xchg
cmp
lods
outs
pop
rol
xchg
rol
fnstsw
sub
xchg
sti
je
add
xor
lahf
arpl
push
int
int
gs
jle
sbb
inc
jmp
push
loopne
mov
enter
push
popa
mov
rol
pusha
or
xchg
push
mov
xchg
mov
xchg
jl
add
popf
and
div
rol
cmp
and
mov
mov
inc
test
addr16
fs
ins
jle
sub
and
mov
movs
cmp
cdq
add
mov
icebp
add
lds
jg
dec
cmp
das
ss
inc
mov
push
les
test
or
xor
mov
mov
outs
sar
inc
and
mov
jmp
inc
scas
add
add
ss
mov
add
jne
jb
xchg
loop
pusha
leave
mov
ja
add
push
jno
shl
adc
jg
iret
mov
aaa
std
stos
inc
inc
cmp
pop
ss
dec
mov
aam
call
loope
repz
loope
aad
imul
cwde
in
jmp
fwait
mov
xor
or
and
movs
dec
cmp
movs
mov
mov
les
cmp
mov
out
test
clc
cmp
scas
out
and
lahf
add
mov
js
aam
fs
inc
push
outs
nop
int
hlt
lea
and
inc
imul
mov
mov
std
pop
ret
jle
lock
push
pop
push
mov
repnz
(bad)
adc
jne
mov
push
nop
xor
in
or
js
mov
daa
xchg
mov
mov
sar
cld
lds
xchg
push
shl
pop
icebp
adc
pop
in
cmp
ret
sahf
xchg
aaa
sub
mov
mov
scas
shl
adc
dec
test
jnp
inc
sub
add
aas
rcr
rcr
int
xor
pop
(bad)
lods
sbb
loopne
adc
pop
std
cmp
(bad)
adc
xchg
arpl
js
adc
sbb
shl
in
xchg
and
sub
jnp
(bad)
mov
inc
cmp
mov
lahf
or
movs
pop
adc
sbb
pop
and
push
shl
lock
add
mov
cmp
xor
mov
test
movs
loopne
dec
sahf
nop
pop
mov
xor
ds
es
loop
into
dec
inc
adc
popa
add
dec
enterw
out
xor
or
jb
clc
add
aad
es
cmp
loopne
inc
jecxz
lock
xchg
shl
loop
mov
icebp
bound
inc
fcom
xchg
imul
fwait
test
push
sbb
hlt
fist
and
cmp
mov
jg
and
jecxz
xor
inc
jg
mov
mov
jmp
jle
loop
pop
lods
push
ds
xchg
nop
call
xor
and
jnp
pmaxub
add
cmp
sub
pmullw
pop
test
push
sbb
aad
shr
nop
pop
inc
div
dec
pop
push
jle
jae
shl
popf
xor
das
leave
aam
call
(bad)
jp
fisub
push
mov
test
rol
pop
(bad)
push
iret
nop
fnsave
sbb
xor
ds
imul
jmp
mov
mov
int
shl
mov
movs
test
in
cmps
xor
cwde
xor
inc
cdq
sub
pusha
or
sbb
xor
in
mov
ret
adc
stc
inc
ror
or
add
cld
xor
jmp
pop
aaa
dec
ins
push
mov
push
mov
imul
les
add
(bad)
pop
push
inc
add
std
push
jbe
fldcw
jo
pushf
test
gs
xchg
in
lea
mov
jno
scas
pop
shl
lods
cmp
in
mov
inc
mov
push
ja
inc
xor
inc
add
out
fisttp
ds
cmp
mov
hlt
xor
jg
pop
xor
add
mov
xchg
pop
pop
(bad)
mov
call
test
xor
ret
adc
sub
cmc
mov
mov
and
push
jp
jecxz
adc
call
leave
xor
cmc
fistp
popa
bswap
js
stos
cs
xor
push
popa
(bad)
lea
xor
jns
rol
retf
test
mov
scas
mov
fbld
and
xor
adc
cmp
out
jne
test
leave
add
dec
cmp
ficomp
jl
or
call
dec
jbe
hlt
scas
retf
mov
mov
popf
or
add
loope
std
addr16
xchg
jno
fsubr
add
fdiv
adc
icebp
adc
push
(bad)
jne
pushf
pop
daa
idiv
sti
outs
rol
arpl
mov
xor
pusha
inc
daa
and
adc
mov
loope
push
jne
stos
mov
dec
loopne
imul
inc
inc
sub
loopne
lods
pop
test
push
jno
mov
jle
and
mov
sti
ret
ss
call
cmp
sbb
mov
mov
jae
bound
add
pop
cwde
push
jne
inc
xlat
sar
call
jns
loop
push
sub
nop
sbb
xchg
cmc
cmp
push
in
jae
fs
mov
inc
arpl
lds
aad
dec
cmc
cmp
xchg
inc
cld
(bad)
adc
sbb
lods
shl
(bad)
cli
adc
jno
inc
arpl
push
dec
mov
lds
(bad)
aaa
adc
cmc
add
or
and
fsubrp
and
cmp
loopne
mov
repz
adc
out
enter
mov
loopne
mov
cmp
test
adc
(bad)
retf
test
pop
loopne
dec
jne
leave
jle
shr
xor
mov
add
adc
xor
sbb
xchg
pushf
mov
xchg
and
ss
pop
adc
data16
mov
lahf
adc
repz
push
add
pusha
xchg
loope
mov
pop
xor
ret
sti
and
ins
addr16
add
gs
clc
jbe
xor
inc
ins
js
cmp
dec
jo
std
adc
movs
and
out
clc
mov
xor
inc
xlat
or
ss
mov
xor
call
dec
mov
mov
dec
cmp
push
xor
loope
test
mov
es
rcr
repnz
xor
addr16
add
adc
adc
adc
sar
pop
(bad)
jno
movs
ins
cs
adc
adc
les
and
xchg
mov
scas
pop
cld
add
dec
bnd
push
in
out
cmc
std
cmps
pop
pusha
mov
dec
xor
pop
xor
lahf
or
mov
inc
and
push
out
xor
or
cdq
imul
int
(bad)
cmc
xor
jp
mov
jge
arpl
jge
inc
adc
add
jmp
mov
xchg
push
add
or
loope
xor
test
xchg
xor
in
push
movs
popa
cs
xchg
mov
fs
cmps
push
pop
call
push
in
in
data16
and
in
loopne
cmc
dec
cmps
jl
and
push
lock
mov
mov
shl
ror
jl
add
push
test
fwait
mov
ret
mov
test
and
out
push
xchg
lock
mov
xchg
cdq
add
inc
sub
inc
mov
daa
ins
jle
inc
adc
cdq
add
add
in
adc
repnz
and
int3
sub
icebp
fadd
loopne
shl
sbb
test
(bad)
cmc
jmp
aaa
lds
inc
(bad)
push
and
jmp
mov
push
fsubr
inc
xor
add
add
add
pop
push
nop
sbb
push
call
add
sbb
mov
popa
dec
test
adc
pop
cmp
cmp
ins
pop
cmp
ficomp
arpl
push
bt
xlat
call
jb
mov
fstp
xor
dec
nop
lods
(bad)
pusha
je
inc
mov
nop
stos
cwde
lods
push
hlt
repnz
add
fild
inc
imul
addr16
sub
cmp
lods
lea
popa
fnstenv
mov
sub
pop
hlt
xchg
xchg
push
outs
jnp
jno
cmp
pop
sub
push
dec
cmp
mov
in
iret
push
ret
and
in
loopne
or
mov
mov
popf
sahf
iret
pmaxsw
sub
int3
sub
mov
stc
in
test
fisubr
mov
dec
lock
jecxz
pop
pusha
popf
or
cmc
and
lods
cwde
inc
ret
sbb
cli
shl
mov
or
mov
xor
ror
test
pop
(bad)
jbe
xchg
mov
cmp
adc
test
hlt
xor
sbb
retf
add
fwait
cmp
pusha
push
add
and
push
in
popa
cdq
ins
inc
lock
jns
mov
xchg
ins
push
xchg
outs
test
push
mov
(bad)
sub
gs
loop
hlt
int
mov
adc
xor
fs
and
and
push
fsubr
sub
push
fbstp
mov
sub
(bad)
cwde
xor
or
(bad)
fst
imul
jg
mov
xchg
cmp
inc
div
inc
aas
inc
mov
stos
jbe
rcl
ret
fs
js
xchg
jo
mul
push
dec
sbb
ja
adc
dec
xchg
sbb
sub
cmp
loope
test
mov
call
retf
adc
add
mov
test
pminsw
daa
sbb
cmc
xor
gs
mov
dec
lock
retf
cmps
fcom
cmp
cmps
out
mov
mov
sub
add
add
add
test
out
nop
jg
lock
and
push
std
(bad)
and
xchg
sbb
xor
xor
pop
outs
xor
ins
cmc
cwde
jl
mov
arpl
aad
scas
iret
bound
jecxz
xchg
xor
xchg
mov
adc
sbb
adc
xchg
stc
mov
add
inc
test
test
jmp
or
add
inc
jle
rol
mov
jmp
inc
out
push
mov
add
or
ins
shl
stc
icebp
adc
mov
cwde
fistp
jne
lods
push
xor
fiadd
push
mov
cld
lds
mov
mov
out
mov
mov
or
enter
push
fwait
sbb
ret
or
ficom
rcl
movs
mov
repnz
xor
xchg
sbb
mov
int
enter
repz
ror
das
sub
repz
ret
inc
mov
pusha
cs
and
test
retf
inc
inc
jmp
push
(bad)
adc
xor
inc
fwait
inc
mov
and
mov
hlt
jecxz
outs
ret
xor
mov
sbb
cmc
adc
dec
sub
add
(bad)
shl
xchg
mov
fsub
(bad)
or
mov
cmc
mov
adc
pop
pop
or
mov
into
mov
ds
push
jae
xchg
ss
dec
inc
mov
daa
shl
add
cmp
lods
push
hlt
adc
test
pop
ja
cdq
test
xor
movs
mov
daa
fadd
mov
xchg
push
and
popf
loopne
imul
dec
mov
ror
repnz
shl
rol
jae
add
or
cmp
inc
mov
push
and
xor
adc
mov
cmp
or
xchg
xchg
rcl
rcl
lock
mov
call
adc
inc
or
mov
and
js
aaa
xchg
icebp
loopne
lea
shl
mov
test
aas
inc
and
aas
retf
add
pop
mov
and
xor
cmp
adc
aam
jne
jbe
or
out
addr16
mov
mov
lods
push
or
inc
daa
mov
add
and
int
fisub
sbb
jne
(bad)
movs
in
push
cmp
test
je
sbb
push
out
sbb
sbb
pusha
xor
mov
mov
inc
push
jl
fdivr
(bad)
push
mov
fadd
cwde
fucom
pop
mov
inc
mov
sub
scas
xchg
cmp
leave
movs
add
les
mov
and
pop
push
rol
xchg
gs
call
(bad)
adc
aaa
dec
in
inc
sub
xor
shl
pop
int
fwait
mov
inc
ins
ins
popa
cmc
and
call
ja
push
scas
es
xchg
jno
ins
lock
xor
xor
xor
ins
ja
jno
xchg
data16
cld
mov
mov
cdq
sbb
loop
sbb
arpl
ins
icebp
push
retf
repnz
std
je
dec
cmp
mov
xchg
out
and
and
xor
pop
mov
adc
adc
xchg
jg
jbe
or
cmps
imul
sbb
int3
push
pusha
sbb
fcomp
ja
mov
jmp
(bad)
pop
nop
out
mov
xchg
outs
loopne
inc
add
repnz
mov
js
xchg
adc
mov
push
rol
pop
pop
outs
mov
mov
(bad)
mov
lock
cmp
sti
xor
dec
lods
inc
mov
inc
push
and
jne
and
ds
das
pop
mul
in
dec
adc
lods
mov
adc
and
push
push
inc
or
out
xchg
dec
and
data16
mov
jbe
push
jmp
or
jmp
cwde
aam
cmc
fsub
jne
jne
hlt
cdq
dec
adc
mov
push
add
fwait
push
lds
cmps
mov
fsubr
es
pusha
sti
mov
inc
dec
xchg
push
inc
in
and
pop
aaa
lods
xchg
push
or
inc
jne
and
lds
cmc
dec
cmp
sti
and
out
mov
lock
test
fwait
dec
mov
shl
jno
cmps
dec
sahf
mov
push
fs
jo
(bad)
enter
out
test
jne
(bad)
pop
push
int
je
pop
out
jecxz
xchg
adc
repnz
mov
daa
mov
dec
xor
cmp
jb
jg
adc
out
and
xor
lods
test
xor
adc
and
clc
xor
shl
mov
je
fldcw
in
aad
xchg
jb
xor
arpl
fdivr
pop
or
(bad)
and
push
mov
xor
cmc
enter
or
push
shr
jae
jle
arpl
mov
adc
jno
int3
hlt
and
cmp
add
jb
cmp
or
das
shl
cmp
inc
out
fnstsw
xchg
aad
dec
mov
pop
stos
inc
sahf
jbe
loopne
popa
inc
bnd
cmp
inc
mov
push
jb
inc
call
hlt
(bad)
mov
cmp
add
jmp
jne
imul
enter
les
add
aad
mov
sbb
imul
mov
push
xor
fdiv
adc
push
add
int3
ret
hlt
push
mov
jnp
add
push
and
imul
out
mov
inc
(bad)
inc
in
fwait
int3
sub
and
std
dec
loope
xchg
sbb
rcr
xor
les
cmps
in
not
test
jecxz
jp
outs
je
and
cmps
add
jmp
jge
(bad)
or
adc
nop
xor
pusha
rol
add
loope
jbe
inc
hlt
jns
add
inc
mov
(bad)
mov
ja
inc
mov
cdq
push
dec
ret
ficom
and
mov
jns
xchg
add
or
push
mov
or
nop
jns
and
mov
push
fld
xchg
popa
shl
push
push
hlt
inc
out
and
push
mov
or
xchg
mov
jl
fbld
movs
into
div
je
neg
inc
iret
push
mov
enter
loop
inc
daa
in
sbb
pop
mov
pop
inc
and
xor
xchg
cld
xchg
popa
(bad)
rcr
ins
les
aaa
inc
arpl
push
push
sub
push
add
loopne
cli
and
shl
mov
mov
repnz
lods
imul
out
fsubr
xchg
mov
scas
loop
rcl
pop
sbb
movs
dec
pop
mov
add
jae
test
xor
xor
push
cld
test
push
mov
fwait
aaa
xlat
add
inc
fstp
mov
fild
outs
push
adc
push
inc
mov
leave
inc
lds
outs
(bad)
movs
mov
add
jge
cmc
mov
jne
or
stos
mov
arpl
xchg
cmp
xchg
es
adc
xchg
repz
call
cmp
xchg
aaa
jne
ffree
ds
or
div
shl
loopne
sub
dec
mov
and
cmp
xchg
ror
push
repnz
movs
iret
arpl
cmc
call
movs
cmps
loope
test
shr
out
bound
cmp
shl
pop
adc
jno
cmps
push
bound
adc
mov
cmp
adc
jecxz
das
sbb
out
inc
and
push
popa
std
jnp
xor
and
hlt
aas
aaa
xchg
mov
dec
std
pop
push
lahf
jge
mov
jnp
inc
cmp
cmps
data16
inc
jmp
(bad)
jg
add
mov
rcr
out
pop
lods
les
(bad)
push
xor
jae
pcmpeqw
aad
and
jl
popa
xor
sub
adc
movs
sbb
xor
and
xchg
pop
mov
xchg
add
mov
adc
icebp
or
inc
mov
inc
push
xchg
dec
mov
fadd
leave
gs
and
sub
ret
add
inc
lea
xlat
adc
out
jbe
mov
call
mul
add
or
(bad)
fistp
cmc
movs
and
jo
fwait
add
adc
push
mov
jp
pop
dec
into
aaa
and
sbb
inc
or
cmps
cs
(bad)
loop
add
pop
and
mov
xchg
(bad)
lods
adc
inc
jb
scas
inc
pop
(bad)
pop
and
outs
mov
out
out
mov
or
xchg
cs
lock
inc
ja
je
clc
pavgw
je
aad
movs
mov
pop
add
or
xchg
xchg
nop
xchg
adc
pop
movs
(bad)
xchg
cwde
mov
push
push
mov
and
outs
gs
test
xor
aam
and
leave
jmp
stos
push
add
std
add
add
imul
loop
mov
clc
movs
add
and
jo
rol
rol
xor
or
scas
inc
push
test
and
loopne
jo
mov
and
out
inc
push
pusha
ins
ror
int3
jmp
jmp
fld
fs
out
loope
push
dec
cmp
mov
retf
sub
adc
push
push
mov
fs
lea
mov
mov
sbb
mov
xor
js
adc
sub
scas
or
(bad)
and
xchg
int
mov
lock
adc
mov
retf
test
cmp
repnz
inc
popa
inc
push
xor
mov
add
shl
lds
ret
jae
inc
cmc
out
movs
dec
ds
movs
push
iret
mov
push
jl
xlat
jbe
shl
pop
or
movs
add
pop
gs
imul
ret
push
adc
jmp
and
push
push
loop
adc
in
loopne
sub
add
dec
movs
movs
std
push
movs
les
push
mov
xchg
cmps
sub
sub
xor
loope
test
jge
popf
xor
lock
mov
cmc
push
mov
int
and
cmp
(bad)
xchg
in
cmp
push
jecxz
int
nop
movs
xchg
movs
cld
dec
add
shl
cwde
ins
xor
cwde
loopne
pop
xor
je
popf
jg
push
fadd
lock
xor
aas
mov
sub
cs
sbb
jno
and
push
movs
aad
lea
sbb
xlat
xchg
fdiv
pop
cmp
shr
fsubr
jbe
(bad)
jne
aam
xchg
pop
js
test
add
ins
push
mov
clc
loopne
sbb
shr
pushf
cld
push
and
lods
test
adc
retf
add
(bad)
mov
fcomp
pop
retf
inc
sub
fs
icebp
mov
mov
push
mov
ja
mov
mov
call
movs
sub
adc
add
pop
and
std
call
mov
(bad)
repz
xor
push
cmp
lock
sahf
sti
and
aam
xor
mov
sbb
cmp
(bad)
in
xlat
daa
mov
xchg
or
repnz
xchg
lock
inc
retf
add
and
ss
rcr
xchg
test
xlat
push
xor
mov
add
pop
movs
jno
test
inc
outs
fcomp
outs
int3
add
dec
cld
mov
xor
xchg
mov
sti
repnz
mov
pop
push
xor
outs
(bad)
and
adc
lods
fs
adc
inc
pop
(bad)
mov
jno
mov
xchg
in
adc
adc
push
push
cmp
pop
mov
iret
blsfill
lds
je
cmp
push
or
mov
and
xor
cdq
ret
stos
pop
add
cmc
jl
vsqrtps
add
pop
push
out
sbb
int3
pop
or
mov
push
stos
sub
sar
pushf
mov
nop
arpl
in
or
adc
retf
stos
sbb
pop
push
nop
xor
ins
jbe
pusha
push
xchg
jmp
cmp
inc
inc
and
pusha
mov
js
and
jmp
repz
jne
xor
xor
js
in
test
mov
add
shl
das
pop
outs
nop
sbb
jmp
gs
lods
cmp
push
fidivr
mov
cmp
clc
push
and
iret
gs
and
nop
adc
call
and
adc
sbb
adc
cli
lods
xchg
inc
pop
xchg
mov
jno
push
bound
lods
adc
hlt
les
clc
push
and
mov
xchg
fiadd
jne
cmp
jecxz
out
push
add
and
adc
mov
add
lock
push
and
shl
in
adc
xchg
mov
fnstenv
mov
and
pop
or
and
es
pop
inc
out
movs
adc
xchg
addr16
pop
xchg
mov
mov
arpl
mov
stc
mov
in
adc
pop
cmps
pop
xchg
clc
push
mov
lea
xchg
push
sub
iret
mov
mov
pop
jnp
xor
pop
xor
sar
mov
and
adc
push
(bad)
jl
leave
push
and
jno
shl
loopne
push
cld
rol
push
ja
or
popf
out
jl
and
(bad)
ret
pop
in
fs
xchg
pusha
mov
add
rcl
std
ret
test
loop
jecxz
call
jno
cmp
mov
imul
es
jge
or
ja
int
call
xor
or
jnp
test
std
push
jle
push
mov
xchg
retf
or
jle
idiv
lods
dec
das
mov
mov
pop
icebp
pop
and
or
fnstsw
fs
mov
or
or
daa
daa
inc
jo
lods
dec
loopne
mov
pop
mov
loopne
sbb
shl
sub
mov
rcr
call
rcr
pop
adc
leave
sbb
push
cmp
shl
loop
inc
(bad)
or
repz
xchg
xchg
gs
add
ret
pusha
cmc
ins
adc
push
and
push
sub
hlt
add
movs
xchg
icebp
stc
data16
push
mov
jae
and
es
mov
pop
pop
cmps
push
jge
mul
and
cmp
sbb
mov
and
fcom
pop
add
adc
jp
fs
mov
je
popf
sbb
xor
cmp
lea
jo
adc
and
fsub
mov
mov
retf
dec
cmps
cmc
jae
(bad)
sbb
mov
loope
xlat
ret
rcl
push
sbb
jge
outs
in
sbb
les
pop
pop
(bad)
aam
xchg
cmp
imul
and
dec
mov
je
sahf
int3
out
(bad)
pusha
cmp
int3
xor
inc
(bad)
aaa
shl
std
cmp
les
inc
jmp
dec
xchg
add
leave
mov
hlt
in
fcom
jmp
sub
ja
jmp
cmp
stc
in
lods
cmp
cdq
(bad)
rcl
inc
shl
mov
pop
xor
lea
add
(bad)
out
mov
daa
xor
jbe
fwait
test
mov
add
ds
jne
or
or
jge
cmp
shl
gs
xor
pop
push
adc
outs
adc
inc
mov
rcr
or
adc
cmp
mov
xchg
mov
loope
adc
loope
cmp
jnp
add
jne
loope
add
and
adc
int
ret
movs
fdiv
iret
add
mov
popf
mov
mov
rcl
pop
add
push
cmp
xor
fwait
xchg
sbb
xchg
jmp
fcomip
ror
cs
fs
sbb
cmps
mov
mov
pushf
scas
in
in
or
popf
(bad)
mov
cmp
(bad)
and
add
pop
fist
popf
ds
xchg
clc
mov
jge
and
aad
ja
jno
pop
icebp
push
jmp
rcr
fadd
shl
loopne
pushf
and
imul
repz
ficomp
aam
cmp
cmp
cs
dec
adc
dec
or
dec
push
shl
jns
push
mov
out
cld
push
ja
jne
jno
out
xchg
repnz
push
test
adc
rcl
xchg
loopne
inc
mov
ret
cmps
rcr
dec
pop
dec
adc
push
jmp
in
adc
and
mov
(bad)
fidiv
jge
in
xchg
and
lods
xor
inc
out
and
mov
lahf
test
rcr
mov
sbb
mov
xchg
dec
xchg
ffree
dec
jge
out
sub
rcl
fdiv
fs
sahf
jge
push
ret
fst
push
adc
inc
jo
jge
dec
adc
mov
cmps
gs
arpl
push
cmps
cli
retf
repnz
ins
test
out
mov
lahf
data16
ins
icebp
jb
movs
ins
lds
mov
xor
gs
daa
push
stos
jno
outs
loope
mov
jnp
cmp
cwde
inc
rcr
cvtpi2ps
push
add
xor
shl
int
outs
int
loopne
(bad)
cmp
in
movs
pop
test
fnstcw
mov
pop
push
shr
add
or
xchg
pop
cmp
pop
fwait
dec
inc
sbb
add
mov
sti
shl
in
in
sbb
pusha
movs
cs
push
dec
pop
clc
xchg
idiv
test
in
sbb
adc
inc
pop
stos
inc
dec
enter
lock
ins
pop
xchg
dec
mov
int
and
sbb
xor
add
or
mov
in
clc
(bad)
push
mov
xlat
imul
ds
adc
fistp
ja
adc
sub
inc
imul
sub
add
(bad)
inc
inc
mov
clc
icebp
repnz
scas
inc
push
mov
adc
lea
js
ds
lods
mov
jmp
cmp
dec
mov
test
mov
push
adc
add
add
or
js
cmp
push
add
mov
mov
lods
jne
(bad)
std
ret
sub
shl
mov
mov
enter
loopne
xchg
or
leave
pop
or
xchg
jmp
mov
cmc
lods
(bad)
test
das
adc
sti
pop
push
shl
lds
mov
dec
(bad)
shr
xchg
shl
fcom
into
push
inc
les
mov
hlt
(bad)
call
aad
jl
lds
adc
xchg
sub
pop
pop
xor
test
fwait
mov
and
icebp
add
xor
cmp
xchg
cmp
xchg
sbb
mov
mov
sti
ins
push
jecxz
leave
push
iret
xor
cmp
xchg
and
ins
scas
inc
dec
mov
in
and
or
je
jge
inc
hlt
std
xor
out
pop
int
in
xor
and
jne
xchg
xor
jecxz
nop
cmc
out
movs
arpl
gs
and
pop
js
push
and
cld
test
jmp
xchg
call
xchg
push
popf
sub
(bad)
clc
popf
call
les
in
fadd
test
cmp
mov
rol
mov
xchg
(bad)
sbb
mov
shl
sbb
jl
(bad)
iret
lds
popf
jae
add
xchg
cwde
clc
xor
sti
inc
retf
sbb
cmc
adc
ror
fs
loop
shl
inc
add
xor
push
in
pop
sbb
bound
and
push
fist
cdq
aad
nop
dec
mov
mov
dec
ins
xchg
jl
(bad)
and
je
sahf
in
(bad)
mov
lods
nop
mov
dec
retf
cmp
xor
xor
add
sub
lods
xchg
mul
inc
jns
add
in
xor
in
fnstenv
sub
test
dec
loopne
push
mov
mov
mov
jl
(bad)
stc
mov
mov
call
mov
sub
lds
inc
mov
call
adc
out
adc
dec
movs
rcr
add
adc
xchg
sub
outs
pop
mov
hlt
ins
xchg
push
test
cwde
xor
pcmpgtw
or
push
lock
xor
es
mov
call
cmp
xchg
or
xchg
add
jecxz
ret
or
cmp
inc
xchg
aad
jge
adc
mov
je
cmp
loope
inc
test
adc
push
nop
pop
inc
push
dec
add
xchg
lds
out
cdq
call
icebp
iret
lds
into
es
fst
push
inc
jo
mov
stc
in
cmp
mov
cmps
ins
in
popf
mov
movs
sbb
jns
addr16
adc
call
lock
mov
add
pop
js
inc
in
stc
pop
inc
cmp
cmc
push
fisub
mov
inc
pusha
push
cmps
in
xchg
fbstp
xlat
popa
(bad)
shl
push
cmp
aaa
inc
jmp
out
jae
in
repz
mov
lods
movs
sub
sbb
mov
xchg
mov
pop
sbb
sub
dec
mov
mov
cmp
add
push
stos
popa
xchg
and
in
leave
fidivr
or
xor
fiadd
xchg
mov
hlt
mov
push
cli
and
push
xchg
cmp
add
adc
or
jne
cmp
sbb
in
and
call
cmp
cdq
ret
sbb
and
sbb
retf
nop
or
popf
jo
sub
es
mov
fsubr
jl
inc
jmp
fiadd
jo
shl
pop
std
jle
cmps
fild
xor
in
mov
add
ja
add
xor
and
inc
imul
push
loope
ds
mov
movs
sbb
popa
inc
gs
and
lock
pop
andnps
add
sub
xchg
stos
push
rol
mov
pop
fwait
bts
aad
sub
xor
cmp
fimul
scas
stos
ret
imul
movs
pop
popf
in
jg
sbb
and
sub
push
aad
in
xor
adc
mov
xor
stos
and
push
sub
xor
push
movs
hlt
xor
mov
mov
mov
sahf
movs
push
cmp
fbstp
pop
movs
adc
jg
inc
mov
mov
adc
lock
bnd
adc
das
fnsave
int
and
les
xchg
or
inc
sub
gs
lock
xchg
sbb
loopne
xor
jo
or
mov
pop
jge
in
adc
daa
jae
test
mov
push
sahf
pop
retf
xchg
or
push
sar
ins
xor
or
fild
xlat
push
mov
push
movs
dec
lds
seto
jne
sub
push
jl
loopne
lock
in
icebp
shl
(bad)
xchg
ret
push
dec
jmp
push
lahf
push
fidivr
sar
and
std
fs
xor
fsub
mov
stc
or
inc
not
das
dec
call
lods
jge
push
or
jno
cwde
cmp
in
popf
mov
ror
and
sbb
test
dec
(bad)
in
push
aad
jne
in
test
imul
mov
aaa
movs
(bad)
mov
hlt
inc
mov
inc
js
xchg
add
mov
inc
ss
xor
inc
mov
sub
int3
in
aas
lods
nop
jns
cli
adc
pop
adc
lea
or
mov
test
ds
dec
stos
xor
jae
mov
std
lock
cmps
(bad)
out
mov
inc
aam
and
ret
in
and
xor
push
mov
mov
xchg
in
mul
mov
shl
loope
lds
xor
fwait
in
sub
js
lock
popa
fst
dec
inc
xor
psubusw
jmp
jno
inc
aaa
pop
jecxz
movs
dec
xchg
arpl
mov
and
rol
xor
xchg
test
cmps
mov
call
in
in
rol
adc
push
in
xchg
sub
sti
cli
pop
mov
fcmovb
dec
(bad)
iret
add
rcl
push
push
xchg
inc
inc
cdq
sbb
mov
movs
ja
aad
jo
ror
movs
lock
sub
mov
(bad)
fcmovnb
push
scas
hlt
pusha
mov
aaa
mov
call
not
pop
in
sub
ret
cdq
daa
fcom
mov
fs
aam
mov
sub
cmps
fcmovb
xor
aad
ds
jae
scas
idiv
dec
test
adc
inc
and
nop
cli
cmps
outs
xor
push
xor
ds
gs
push
add
xor
inc
jo
adc
push
mov
xchg
daa
imul
mov
xchg
popf
add
stos
lods
xor
dec
add
cmps
popf
mov
(bad)
pop
call
cmp
imul
dec
mov
iret
mov
leave
and
pop
test
rcl
in
or
ret
jo
push
and
mov
mov
add
lds
mov
sbb
retf
lock
push
dec
inc
mov
inc
cmp
movs
leave
mov
cs
call
jnp
stos
loop
shr
adc
lahf
movs
lock
in
pop
scas
lds
aam
in
cmc
shl
inc
mov
mov
inc
mov
in
jmp
shl
xor
sbb
mov
nop
movs
shl
push
add
or
and
in
rcl
or
in
push
test
push
add
add
adc
in
xor
div
sub
mov
jle
dec
mov
sti
icebp
imul
xor
or
icebp
mov
(bad)
cmps
xchg
adc
shl
adc
sbb
movs
push
dec
mov
and
ds
cmp
daa
(bad)
cld
(bad)
outs
loop
test
xchg
adc
jnp
ret
nop
(bad)
jno
jae
add
icebp
adc
jmp
push
sbb
icebp
in
js
dec
push
mov
hlt
inc
arpl
dec
aas
cmps
arpl
mov
xchg
jne
inc
sahf
loopne
mov
loope
(bad)
popa
xor
and
(bad)
cmp
jno
and
mov
bound
mov
xor
nop
push
inc
xor
repz
cmp
and
iret
faddp
push
cmp
pushf
cmp
add
pop
sbb
or
dec
or
cmp
cmc
xchg
push
repz
jge
pop
int
fnstcw
jne
push
loope
inc
inc
inc
xor
mov
test
jns
cmps
push
cli
pop
add
add
add
sub
cmp
push
push
jns
xchg
mov
mov
jge
cmps
hlt
adc
rol
add
cli
(bad)
xor
push
jg
pusha
mov
cmps
in
jne
mov
mov
push
add
das
pop
shr
cmc
repz
inc
mov
inc
(bad)
mov
daa
or
pop
cvttps2pi
cmp
int3
or
fld
push
aam
fdiv
je
adc
adc
mov
call
add
ins
adc
and
push
cmp
ss
mov
fs
les
lds
or
push
inc
or
mov
and
(bad)
mov
push
inc
shl
dec
add
nop
xor
in
movs
inc
outs
movs
add
fadd
mov
ror
sub
sub
dec
sbb
pop
loope
aam
push
hlt
dec
(bad)
cmp
lea
test
add
add
mov
(bad)
inc
dec
add
xor
xor
sbb
pop
in
dec
push
scas
xchg
jg
inc
xor
sbb
add
xchg
jl
imul
inc
clc
xor
xchg
jnp
sub
inc
lea
cmp
mov
fs
les
xor
add
sbb
das
mov
out
push
push
jnp
mov
adc
je
mov
cmp
lahf
push
retf
mov
cli
jnp
mov
and
cmp
leave
add
xor
mov
clc
mov
xor
push
mov
clc
nop
or
outs
mov
test
ja
mov
sbb
and
popf
stos
loopne
adc
xchg
mov
imul
in
data16
dec
sub
std
das
pop
cmps
inc
dec
pop
jns
mov
pop
cmps
stos
xor
nop
or
lods
push
sbb
or
(bad)
adc
mov
mov
aas
test
xlat
call
mov
lock
int3
mov
nop
mov
and
push
das
mov
ret
add
shl
ss
popa
stos
cmp
or
popa
ret
jo
jbe
add
push
pop
mov
add
xor
addr16
push
mov
mov
or
xor
cmp
cmc
in
test
in
pop
addr16
mov
push
mov
pop
mov
inc
stos
mov
in
mov
mov
gs
and
add
icebp
xchg
loope
sub
and
pop
fs
fist
ficomp
pusha
or
or
jp
movs
push
test
jno
push
xor
repnz
aaa
adc
rcl
les
je
jne
push
sub
test
xor
and
lock
mov
mov
sbb
data16
scas
mov
gs
push
repnz
jecxz
push
addr16
or
inc
(bad)
test
daa
int
sub
inc
(bad)
(bad)
pop
mov
push
bound
mov
adc
inc
aas
adc
call
cmp
mov
je
(bad)
add
iret
mov
movs
mov
xor
mov
(bad)
sub
jo
pusha
stos
cld
or
and
inc
xchg
fnclex
(bad)
enter
std
adc
loopne
jnp
retf
mov
inc
pop
mov
addr16
scas
sub
loopne
sub
add
ss
imul
add
je
sub
data16
mov
and
mov
or
cmps
and
xor
loope
jle
xchg
mov
(bad)
in
adc
inc
mov
push
add
in
sbb
mov
cmps
nop
inc
repnz
test
push
leave
lods
push
and
imul
cmp
mov
fcomp
test
das
(bad)
pusha
xchg
cmps
movs
mov
pusha
adc
add
push
pop
stos
xlat
repz
fstp
sub
pop
lea
push
add
jne
pushf
push
mov
xchg
push
addr16
inc
xchg
push
adc
scas
push
mov
mov
push
add
hlt
lahf
xchg
adc
shl
mov
cld
adc
mov
out
ds
xor
push
icebp
mov
dec
inc
mov
mov
xor
push
(bad)
push
cmp
sbb
scas
(bad)
xchg
in
retf
cmps
je
lock
adc
and
cld
in
rcl
jge
inc
adc
into
outs
adc
jnp
dec
pop
repz
dec
enter
jae
sbb
lods
inc
push
jg
mov
test
sub
ins
outs
in
(bad)
cld
xchg
lock
loopne
xor
shl
lahf
sub
out
and
jo
pop
xchg
lds
inc
retf
aad
cmc
sbb
lods
mov
mov
mov
sbb
cmps
jae
dec
push
in
mov
add
push
jb
and
inc
test
xchg
mov
xchg
jmp
inc
jae
adc
adc
pusha
and
fdiv
lds
inc
xor
xor
mov
out
ficom
gs
ins
sar
xor
sub
mov
pop
arpl
sahf
aaa
in
and
movs
arpl
sti
(bad)
mov
je
mov
mov
call
and
push
and
jle
or
aad
adc
jne
fcmovbe
push
mov
adc
dec
div
scas
rol
mov
push
ja
mov
shr
lea
fild
push
xor
shl
retf
shl
or
add
ss
lea
push
push
ins
inc
mov
or
add
add
pop
fdivr
or
nop
js
ret
test
inc
mov
mov
jo
(bad)
sahf
(bad)
fsub
adc
xor
int3
dec
and
aad
sbb
and
gs
inc
loopne
dec
xchg
add
or
repnz
ja
xchg
dec
xchg
xchg
sub
sbb
stos
push
jns
add
or
outs
psubb
cld
sbb
mov
sub
mov
lds
sti
xor
cmc
mov
gs
dec
mov
jns
cdq
cmps
popa
add
xchg
mov
shl
push
adc
movs
int3
jns
in
enter
xchg
cdq
add
retf
xor
shl
cmp
jmp
iret
push
cmps
movs
push
mov
jns
cmp
add
in
sbb
cmp
jecxz
sbb
sbb
jne
movs
push
or
nop
jae
or
pusha
ret
sub
jbe
shl
pop
or
dec
movs
push
push
nop
movs
dec
call
cmp
sbb
adc
cmp
test
sbb
in
cmc
jo
or
mov
adc
call
sub
or
or
scas
jb
inc
dec
mov
mov
cld
mov
fisub
or
imul
fstp
mov
inc
dec
mov
pop
stos
cmp
or
sbb
fldcw
fstp
nop
movs
in
fdiv
xchg
mov
sub
out
adc
add
adc
clc
add
aaa
bound
in
fidivr
jmp
xchg
in
in
xlat
in
jne
call
adc
and
xchg
sbb
push
jp
ins
cmps
int
sub
arpl
fsubr
pop
pop
mov
dec
dec
int
xchg
jns
add
dec
sbb
mov
dec
xchg
mov
sbb
int
inc
or
dec
xchg
out
sub
mov
fs
push
mov
sub
(bad)
enter
mov
repnz
nop
pop
push
lea
sbb
iret
add
jns
sub
xor
in
jae
inc
adc
js
lds
jo
push
lds
ret
add
sbb
mov
iret
pusha
xchg
jo
add
adc
and
fadd
dec
jns
dec
sub
ror
pop
lock
int
sbb
loopne
sahf
movs
or
add
cmp
mov
mov
mov
mov
fisubr
pusha
cmc
mov
call
call
and
mov
mov
retf
mov
sub
lds
or
mov
out
aad
sub
xchg
test
adc
cdq
jne
sahf
ds
(bad)
into
and
(bad)
stc
lock
xchg
xchg
or
cwde
or
sub
mov
mov
(bad)
jl
(bad)
aam
xchg
cmp
mov
rcl
mov
xchg
jns
test
test
push
xchg
dec
sbb
gs
out
shr
and
jb
mov
and
mov
enter
in
cmp
daa
shl
inc
pushf
fdivr
push
cmp
sub
in
mov
mov
jmp
mov
and
scas
cwde
inc
mov
mov
mov
pop
je
pop
daa
add
adc
inc
inc
or
and
mov
les
mov
imul
and
add
mov
sub
or
int3
popa
cli
xlat
jbe
xor
xor
pop
mov
mov
(bad)
icebp
xor
fsubr
out
cmp
icebp
mov
mov
movs
dec
cmps
stos
mov
pop
dec
ins
xchg
rcl
scas
movs
in
dec
(bad)
call
mov
idiv
dec
sbb
(bad)
ficom
cmp
scas
or
call
or
into
hlt
rcl
je
ret
sub
inc
jge
dec
or
inc
fdivr
push
mov
fiadd
dec
lds
je
push
mov
mov
fsubr
mov
or
test
xor
mov
sub
inc
std
adc
push
stos
mov
retf
test
mov
push
jne
jne
sbb
add
push
sub
push
add
pop
push
stos
pop
cmps
in
and
or
mov
vpsrlw
jns
jge
add
inc
mov
mov
cdq
cmp
mov
daa
stc
jecxz
aad
inc
popf
mov
in
stc
(bad)
jne
test
push
das
std
or
cmp
cdq
cdq
cmp
aad
and
adc
xchg
jbe
xor
cmc
cmps
xor
ror
clc
(bad)
mov
mov
or
and
aad
jmp
mov
es
in
inc
mov
mov
fucomi
or
loope
lea
or
fcom
lds
inc
mov
movs
adc
je
test
mov
enter
aaa
lods
(bad)
mov
scas
mov
ja
inc
test
or
lods
call
sbb
(bad)
test
push
push
mov
adc
pusha
jo
jmp
sbb
cmp
mov
pop
mov
mov
pop
cld
dec
xchg
cld
push
popa
stc
cmp
rol
sahf
push
lock
xchg
xchg
sub
push
movs
mov
call
xor
rol
xor
repz
push
inc
lods
xchg
add
scas
jne
xor
(bad)
jecxz
and
fsubr
pop
cmc
repz
aad
cmp
jmp
and
iret
stos
test
and
movs
fsub
add
or
jl
imul
mov
hlt
mov
inc
sahf
jno
add
add
and
test
jbe
popfw
jmp
jl
mov
popa
dec
sbb
xor
or
dec
sub
lods
in
retf
lahf
lods
dec
mov
xor
cld
mov
cdq
in
jns
jmp
aaa
(bad)
sbb
js
add
jmp
call
add
jb
sub
pop
lock
mov
movs
test
and
enter
les
test
shl
and
pusha
mov
loope
outs
outs
xor
mov
shl
shr
xor
sub
arpl
adc
pushf
fnstsw
hlt
mov
jmp
push
mov
hlt
test
add
mov
jno
lds
mov
ss
or
aam
mov
dec
popa
js
clc
int
adc
sar
mov
pop
in
xor
dec
jbe
mov
or
aam
sbb
inc
cld
js
scas
and
mov
test
ins
idiv
add
adc
xor
cmp
mov
in
jmp
imul
jge
xchg
and
inc
out
dec
xor
dec
push
mov
les
test
mov
and
xor
aad
(bad)
les
inc
pop
shl
adc
push
cs
or
stc
bswap
mov
loope
cdq
mov
sub
xor
cld
add
add
and
je
and
sbb
mov
push
imul
dec
scas
inc
inc
movs
push
xchg
loopne
or
gs
in
and
push
cmp
repnz
aad
jne
std
vpshlb
pop
or
mov
out
xor
sar
xchg
ja
bound
push
cmp
icebp
sar
rcl
cmc
popf
xor
xor
cmp
in
add
adc
test
mov
icebp
repnz
pop
in
movs
jl
sbb
sahf
cmp
mov
jge
movs
and
clc
xor
pop
adc
sub
adc
fwait
test
mov
movs
imul
and
retf
and
in
int
adc
dec
and
push
int
push
and
xor
inc
(bad)
test
sub
imul
cmc
push
inc
and
push
sbb
enter
movs
mov
lods
jmp
xlat
out
es
loopne
ss
daa
and
and
outs
outs
inc
les
mov
movs
xchg
nop
cmp
rcr
mov
in
popa
add
je
sub
movs
add
rcl
cwde
stos
ret
push
fwait
sbb
or
jge
push
jb
rcr
mov
push
mov
mov
js
fs
xor
jp
sar
add
jno
jp
dec
test
pop
jno
icebp
out
or
mov
jne
or
dec
pusha
mov
mov
sub
add
sub
cmp
push
push
std
or
out
into
gs
je
dec
loope
dec
mov
sar
std
push
adc
test
nop
xchg
ins
ins
jmp
and
in
test
mov
dec
jno
enter
in
mov
mov
push
into
pop
aaa
adc
test
xor
frstor
scas
cmp
(bad)
lds
int3
xor
aaa
xchg
movs
push
mov
jbe
imul
(bad)
outs
cwde
ror
inc
cwde
sub
inc
outs
imul
jl
jno
sar
sbb
hlt
(bad)
cs
aad
dec
mov
into
ins
cwde
mov
je
jmp
mov
mov
or
pop
shr
jnp
jnp
mov
xchg
jns
and
fdivr
add
fsubr
push
pop
mov
shl
sbb
and
ret
sbb
jne
mov
outs
inc
inc
dec
adc
xor
psubw
mov
daa
dec
add
add
cdq
ins
jmp
xchg
pusha
test
into
sub
push
or
mov
shr
add
and
mov
cmp
lock
(bad)
xor
(bad)
or
cmp
ror
call
xor
sub
cmp
stos
frstor
in
scas
jl
and
jne
xchg
int3
xor
inc
add
inc
cmc
mov
xor
xchg
cmp
push
xchg
adc
sbb
pop
in
int3
dec
xchg
add
shr
mov
cwde
push
in
loope
sti
adc
in
shl
fsub
gs
rol
or
es
je
adc
movs
xchg
add
loop
leave
popa
ins
mov
xchg
in
scas
dec
mov
sar
lock
xchg
pop
and
fdivr
cmc
inc
scas
rol
add
sar
xlat
mov
and
pop
loop
loope
sti
outs
out
inc
push
jge
pop
rcl
add
dec
mov
retf
retf
xor
jno
mov
adc
inc
add
xchg
xchg
pusha
and
pop
rol
call
icebp
add
stc
sar
push
fcom
(bad)
or
rol
fwait
push
rol
rcl
mov
mov
add
jge
repz
in
xchg
push
mov
add
mov
mov
mov
sar
xchg
in
inc
and
mov
cmp
les
test
sbb
mov
jns
shl
inc
test
cmp
jb
or
sbb
jge
and
nop
sub
icebp
pop
shl
push
loope
cmps
nop
add
lods
cli
xor
mov
mov
xor
sti
(bad)
cli
das
out
xchg
push
hlt
pop
and
xor
shl
pop
div
add
in
mov
xlat
inc
in
xchg
cmps
out
and
xor
scas
mov
push
jae
jb
add
jbe
adc
pop
fild
adc
jle
out
add
jne
adc
jo
in
inc
cmps
lahf
movs
xchg
rol
and
inc
bound
movs
xor
and
out
les
or
jne
repz
mov
adc
je
mov
sub
int
add
cmp
xchg
lods
inc
fs
popa
mov
les
xor
jo
mov
mov
lahf
push
sub
or
jns
imul
mov
and
cmp
mov
dec
(bad)
out
(bad)
lds
add
scas
mov
sub
cmp
shl
fidivr
xor
xor
pop
adc
nop
aad
dec
jno
inc
mov
jns
imul
xor
icebp
shr
dec
jns
(bad)
(bad)
stos
mov
xor
(bad)
cdq
adc
mov
std
cmc
shl
sub
ror
int
mov
jbe
ret
or
int3
mov
push
pop
pop
and
js
ss
push
add
out
sbb
jbe
push
adc
movs
adc
lock
addr16
jp
push
retf
mov
and
mov
dec
(bad)
cs
rcl
stc
les
arpl
out
dec
bound
sbb
cmps
jg
nop
(bad)
mov
xchg
inc
sar
jle
jmp
call
(bad)
pop
mov
mov
loope
test
pusha
mov
hlt
sub
mov
test
je
mov
sub
fcom
adc
lock
adc
sub
jl
add
hlt
mov
fst
test
imul
(bad)
cli
(bad)
push
iret
adc
imul
sbb
icebp
sbb
push
mov
dec
outs
adc
ss
xor
inc
or
js
test
(bad)
aam
dec
enter
and
sti
cmps
popf
and
aam
cli
xor
xchg
dec
aas
call
sub
sbb
push
fs
push
pop
adc
jne
retf
xor
nop
push
push
push
cmps
push
pop
retf
cmc
mov
shl
repnz
xor
shl
add
ja
xchg
fisttp
sbb
add
rcr
xor
fcmovnbe
jmp
or
fstp
mov
pop
stos
adc
mov
(bad)
pop
mov
and
ror
mov
sub
mov
mov
jo
mov
jbe
in
fcomp
lock
xor
sbb
adc
sub
add
in
das
mov
xor
pop
mov
fiadd
movs
jbe
inc
adc
push
mov
jp
mov
sub
pop
sub
cmp
pop
loop
(bad)
call
mov
test
int
fnstenv
pop
pmaddwd
cdq
test
xlat
xor
pushf
lea
inc
movs
mov
xor
pop
fidivr
adc
push
cmp
xchg
xor
mov
push
xor
adc
xchg
test
or
aad
and
leave
jg
lahf
mov
imul
mov
in
dec
push
jnp
test
lds
shl
xor
(bad)
jle
dec
jmp
add
and
dec
sar
sbb
xchg
movs
outs
inc
mov
inc
mov
jecxz
cmc
inc
enter
add
pushf
sub
arpl
or
xchg
push
inc
mov
sub
out
xlat
in
pop
fld
(bad)
mov
shl
sysenter
mov
pop
je
jp
mov
fld
pop
and
jg
pop
fild
call
push
scas
mov
or
je
jg
inc
les
popa
fsub
cli
or
xchg
adc
movs
mov
jae
mov
in
add
in
(bad)
movs
cwde
adc
adc
outs
jo
push
popf
mov
test
inc
out
ds
lock
arpl
cmp
cmp
psubd
repz
pop
mov
ds
(bad)
sub
xor
das
in
cmp
fwait
xlat
scas
lahf
add
jo
mov
inc
pop
sub
shr
arpl
jg
pop
lods
mov
mov
pusha
mul
call
cmp
push
into
push
dec
cmc
dec
jge
inc
adc
and
lods
push
into
test
fs
xor
rcl
pop
push
inc
mov
leave
add
fxch
pop
shl
and
mov
out
movs
lds
pop
inc
clc
pop
inc
loop
test
fadd
je
lds
gs
js
sbb
and
mov
xchg
jle
add
frstor
out
add
add
push
dec
and
scas
shl
xchg
adc
inc
ret
add
xor
cli
pop
and
push
dec
dec
dec
mov
pop
pushf
or
add
jo
and
add
shr
std
mov
xor
pop
retf
(bad)
inc
xor
dec
xchg
js
pop
nop
and
call
icebp
hlt
add
add
nop
repz
mov
inc
sbb
push
bound
adc
xlat
sub
xor
retf
mov
gs
cmp
xchg
cwde
cmps
rol
repz
jnp
ret
into
(bad)
div
mov
nop
rol
inc
mov
or
les
popf
xor
adc
cwde
rcl
mov
xchg
jmp
cmps
dec
adc
dec
and
sbb
xor
cmp
ja
xchg
loope
adc
mov
shl
or
fwait
inc
cmps
and
and
sbb
scas
push
into
jnp
cmc
popf
aam
(bad)
mov
push
push
in
sbb
and
and
and
mov
jne
xor
mov
repnz
adc
sub
adc
mov
lods
into
mov
and
xchg
pop
fstp
inc
mov
mov
rol
cli
or
pop
out
stos
and
push
in
jmp
mov
mov
add
add
sbb
mov
push
cmp
jno
cmps
cmps
fsub
scas
cmp
and
add
dec
adc
ret
xchg
stos
cmps
pop
jle
mov
nop
pop
xor
ss
and
arpl
in
mov
ds
aaa
test
aaa
jnp
mov
cmp
out
cld
rol
push
cmc
push
scas
push
inc
cld
je
mov
ret
out
dec
adc
lods
in
jl
nop
cmp
jle
nop
pop
xchg
out
mov
mov
cmp
out
push
test
cmp
ja
add
xchg
(bad)
lods
fidiv
mov
sbb
jae
sahf
add
shl
mov
xor
cmp
mov
xchg
out
retf
xchg
(bad)
xchg
fcom
dec
cdq
retf
in
call
mov
inc
inc
lds
rcl
cmp
cmp
nop
mov
je
ins
movs
sbb
fbld
loop
push
loop
rcl
fisubr
test
test
inc
pop
pop
jns
and
mov
mov
in
inc
or
sub
int
add
xchg
int
scas
les
mov
int
jbe
cmc
sub
jge
subps
out
mov
mov
push
push
pop
aaa
jp
mov
mov
or
pop
data16
xlat
add
(bad)
mov
add
add
inc
cmp
inc
cld
or
cmc
pop
lods
stc
cmp
sub
call
std
loope
dec
and
sub
cdq
popf
dec
mov
cmp
or
lods
out
(bad)
push
out
cmps
loop
sbb
std
sub
jge
cld
imul
or
cmp
sbb
nop
iret
pop
lods
jmp
pushf
dec
nop
imul
test
int3
imul
bound
mov
sub
popf
sar
push
loope
call
add
ror
fsub
lods
inc
cld
or
add
jmp
jns
popa
out
fldcw
in
pop
sub
xchg
add
cmp
repnz
mov
popa
stc
mov
ficom
push
cmp
push
ins
icebp
jmp
add
add
jnp
popf
add
and
(bad)
cmp
sahf
mov
out
fld
popf
cli
jno
es
mov
sahf
cmp
adc
mov
mov
fdiv
fisttp
fisub
stos
outs
movs
stos
ds
jne
ds
clc
movsx
(bad)
mov
or
inc
dec
sbb
lods
mov
scas
push
ins
(bad)
arpl
sub
or
dec
jmp
cli
stos
pushf
fisubr
ins
lea
cmps
or
jne
or
fimul
jns
mov
mov
fisubr
jp
out
outs
js
shl
push
mov
pop
ss
call
(bad)
jp
pop
int3
mov
and
(bad)
pop
outs
dec
out
mov
shr
cmps
jnp
push
ds
aaa
add
fstp
cs
or
scas
pop
in
jecxz
dec
call
pop
fimul
outs
push
aam
push
sahf
mov
(bad)
sub
fdiv
mov
jl
mov
pop
fisub
fstp
and
sahf
cmps
mov
outs
mov
ret
ds
mov
rcr
repnz
outs
ret
fisubr
push
pop
std
outs
test
es
out
cmp
dec
cli
sbb
arpl
call
repnz
mov
stos
xor
das
jbe
push
push
mov
outs
fisttp
mov
dec
push
stos
ds
push
(bad)
ds
sub
dec
mov
push
(bad)
fisub
das
xchg
mov
push
stos
jp
fcomp
aaa
rcl
sbb
sbb
push
jno
stc
(bad)
call
(bad)
fst
mov
les
xor
xchg
add
sbb
xchg
fsubr
sahf
xor
mov
cwde
sbb
fnsave
adc
mov
jns
mov
(bad)
mov
add
adc
pop
adc
inc
push
imul
clc
pop
(bad)
pushf
(bad)
ins
cwde
pop
pop
sti
cmp
push
mov
sbb
clc
adc
dec
mov
cmp
sbb
out
cwde
adc
mov
sbb
addr16
xor
mov
adc
dec
xchg
cmp
lods
inc
aam
mov
xchg
sbb
hlt
shl
jl
jmp
push
and
cmp
mov
cwde
and
test
push
sbb
inc
cwde
and
ins
adc
sbb
call
adc
adc
xor
loop
inc
fs
xchg
enter
lods
add
ret
mov
loope
adc
jmp
xchg
cmp
dec
cmp
out
dec
add
mov
xor
inc
leave
push
cwde
push
cmp
(bad)
dec
xchg
push
xchg
xor
test
cwde
adc
inc
mov
mov
push
adc
xchg
sbb
xchg
cmp
or
add
push
inc
cli
sbb
jmp
mov
imul
test
in
mov
adc
adc
cwde
(bad)
cmp
sub
in
retf
iret
dec
out
dec
ins
retf
sub
jmp
dec
mov
dec
ins
retf
adc
ror
daa
and
dec
sbb
lods
mov
dec
sub
jbe
not
(bad)
push
dec
xchg
sub
mov
jbe
mov
xchg
sbb
iret
in
dec
sub
dec
in
sbb
call
sub
xor
jge
gs
jo
sub
retf
mov
in
inc
dec
mov
push
test
inc
fild
mov
sbb
scas
inc
call
sub
out
test
xchg
inc
in
ror
xchg
addr16
dec
(bad)
jmp
sub
fucomi
mov
ror
cwde
retf
sub
dec
push
jmp
sbb
in
adc
sub
data16
arpl
ins
(bad)
cmps
test
cdq
xor
retf
in
scas
sbb
outs
out
inc
and
jmp
mov
clc
ret
dec
iret
out
sub
inc
clc
dec
leave
dec
xor
iret
add
out
xor
dec
dec
sub
mov
pop
jge
popf
or
inc
cmp
or
xor
xchg
mov
xchg
xor
fs
jge
cmp
mov
jp
ret
out
enter
pushf
out
shr
ror
cmps
dec
push
dec
pushf
cld
pushf
inc
xor
aad
movs
shr
pop
in
retfw
rcr
inc
sub
cmp
push
aaa
movs
or
inc
sub
sub
(bad)
ins
mov
retf
nop
pop
inc
mov
das
mov
aas
mov
les
push
call
cmp
bound
inc
test
aad
and
pop
shl
int
inc
in
dec
daa
inc
cli
in
or
sahf
rcr
cmps
mov
cmp
fxch
lods
pop
(bad)
sti
xor
call
fsub
cwde
inc
or
dec
daa
inc
sub
out
fdivr
jmp
and
mov
inc
dec
inc
pop
push
fwait
inc
test
push
lods
inc
das
cmp
or
mov
call
cmps
ins
ins
mov
loopne
lods
or
push
pop
adc
inc
aam
and
sub
push
and
inc
lods
enter
xchg
in
mov
inc
aam
and
jnp
push
in
and
lods
call
or
les
mov
and
pop
popf
cmp
sub
imul
ins
jbe
test
xor
(bad)
int
dec
cmps
retf
adc
loopne
dec
mov
sub
or
in
or
dec
pusha
ret
mov
enter
call
pop
jb
dec
clc
call
cmps
ret
jecxz
ins
lds
in
and
cmp
or
fsub
xchg
leave
pop
jb
fsubr
ins
jnp
cld
jmp
sbb
adc
ins
adc
xor
xchg
call
adc
lods
cli
div
fisttp
shl
lahf
mov
cli
(bad)
aaa
jp
call
movs
aaa
pop
shr
jae
xchg
mov
push
add
aad
push
mov
test
aad
inc
adc
push
push
cmp
dec
sbb
outs
ds
sbb
push
sbb
aam
push
cli
xor
shl
xchg
fidivr
push
pop
jp
fcom
mov
inc
cmp
sbb
lahf
cmp
push
inc
pop
xor
xor
pop
ss
mov
pop
shr
mov
dec
fcomp
pop
mov
mov
mov
lahf
adc
push
ins
ss
mov
push
push
aad
mov
cmp
xor
call
cdq
sbb
ret
aad
push
or
push
gs
lods
rcl
pop
xor
ds
push
and
repnz
inc
pop
sub
out
adc
cmps
in
(bad)
stos
or
lea
mov
jns
push
mov
je
push
cmp
std
fcomp
xchg
or
mov
xor
cmc
pop
outs
xchg
es
sbb
mov
(bad)
shr
int
popf
mov
jo
pop
sbb
test
xor
test
mov
les
hlt
stc
sub
adc
sbb
shl
out
jb
push
xor
jns
xchg
outs
jae
sub
fsub
idiv
or
aam
xor
xchg
sbb
mov
mov
aam
fs
popa
hlt
repnz
or
fs
lods
stc
ins
mov
test
xchg
inc
repnz
fld
pop
imul
leave
std
adc
cld
or
push
xor
jo
push
inc
call
pop
or
xor
(bad)
jno
xchg
rol
sub
sbb
mov
mov
nop
popf
hlt
jecxz
push
sar
mov
cmp
dec
add
(bad)
fstp
jge
sub
add
and
sti
pop
xor
lods
sbb
sub
mov
cmp
add
jl
mov
xor
shl
dec
add
iret
repnz
dec
lea
jno
inc
jl
push
jmp
jmp
jb
cmp
imul
movs
lods
aad
and
leave
cdq
mov
pop
aaa
sbb
fs
inc
mov
or
sub
or
jmp
mov
add
push
call
mov
or
sbb
and
les
mov
inc
xchg
mov
sbb
cmp
cwde
mov
jmp
pop
dec
ss
popf
loope
inc
sti
add
jns
enter
popf
xchg
sub
retf
sbb
(bad)
cdq
lds
mov
leave
sbb
imul
leave
ds
fmulp
inc
mov
shl
push
(bad)
push
dec
cmp
xchg
or
ret
or
ins
and
aaa
cli
leave
int
mov
ins
xor
popa
ss
pop
leave
cmp
mov
mov
adc
imul
sbb
mov
setge
xchg
xchg
xor
retf
lods
pop
sub
inc
bound
mov
push
ret
jne
jl
sbb
xchg
les
push
mov
push
ds
mov
dec
(bad)
pop
movs
push
push
inc
ss
push
in
xor
leave
shl
and
sub
(bad)
ret
sbb
jp
xchg
mov
inc
sbb
cmc
shl
mov
inc
mov
call
fsubr
adc
mov
dec
push
lods
call
popf
inc
sub
pop
jmp
mov
dec
and
jo
mov
cmp
leave
or
retf
cmp
dec
dec
and
xor
and
cmp
or
and
lock
sbb
push
dec
and
mov
mov
leave
ror
lea
pushf
ins
fsub
mov
popf
test
mov
or
inc
nop
cdq
lea
push
retf
jge
xchg
leave
lods
stc
jne
lods
leave
fisttp
ret
ins
ins
and
scas
leave
mov
mov
sbb
(bad)
rol
sbb
mov
or
aas
call
xor
cmp
(bad)
sub
(bad)
idiv
xchg
test
jp
outs
cmp
cli
jmp
ret
inc
jp
fwait
aam
cmp
test
adc
imul
loop
mov
jno
cli
lea
mov
out
adc
das
test
sub
imul
repz
dec
inc
out
xchg
mov
js
sub
push
lods
jno
pop
sub
in
or
cli
js
in
adc
cmp
mov
test
sub
xchg
imul
jno
xor
fwait
movs
cmps
sub
in
test
stc
fnstcw
jp
jle
sub
fnstsw
pop
js
or
ja
add
imul
stc
cmp
stos
test
cmp
jns
push
ds
(bad)
test
pop
imul
mov
and
or
jp
out
out
mov
stos
lea
fidivr
inc
sub
mov
and
cdq
ret
mov
arpl
cli
lea
xchg
jp
jbe
pop
imul
and
mov
test
jge
jnp
jle
fisubr
icebp
ja
jmp
cli
test
test
jp
sub
cmp
mov
jp
stos
xchg
sbb
dec
shl
jp
xor
inc
in
icebp
(bad)
jp
jp
ret
sub
mov
data16
sub
sar
inc
test
stos
int
test
mov
mov
cli
and
push
sbb
cld
push
and
add
sub
add
movs
cli
shl
jp
enter
mov
pop
ins
jno
or
fbld
test
ret
pandn
inc
sbb
in
icebp
in
(bad)
sbb
enter
les
pop
jns
outs
mov
sbb
jmp
dec
in
pop
cli
imul
in
mov
cmovs
jae
call
mov
xchg
not
sahf
jnp
bound
(bad)
aaa
and
add
in
adc
xor
inc
div
adc
xchg
and
xchg
inc
aaa
and
rcl
xchg
add
adc
adc
pop
movs
xchg
and
enter
mov
loope
(bad)
and
aaa
and
sti
hlt
inc
ror
cmp
jp
aaa
and
sti
hlt
inc
ror
pop
add
cmps
xchg
in
dec
cmps
mov
xchg
jae
enter
push
push
mov
push
vcvtsd2si
add
lods
add
mov
ds
cmps
mov
enter
addr16
mov
in
mov
adc
test
mov
movs
aaa
call
cmp
call
movzx
sub
ins
jg
shl
ret
in
or
adc
mov
mov
test
mov
in
pop
aaa
cmps
fisttp
pop
jae
cmp
xor
xchg
(bad)
sar
ret
push
inc
jo
call
or
push
(bad)
retf
lahf
mov
cmp
add
pop
push
(bad)
aad
mov
scas
movs
mov
aad
push
or
sub
int3
scas
lods
stos
xor
sub
or
xchg
push
(bad)
fadd
aam
aaa
push
pop
pop
sub
in
jle
cmp
popa
ja
out
in
sub
add
js
cdq
stc
mov
xchg
pop
jle
(bad)
jecxz
stos
out
(bad)
clc
jno
scas
(bad)
in
shr
inc
movs
outs
lea
repz
xchg
mov
xchg
(bad)
dec
adc
loopne
dec
pop
xor
cld
jle
inc
shl
fsubrp
pushf
sbb
enter
mov
gs
sbb
push
cmp
fdiv
call
inc
jo
dec
int
aad
jecxz
mov
imul
mov
popa
inc
mov
xlat
sbb
add
test
mov
fs
mov
and
adc
mov
pusha
fs
sbb
push
add
inc
push
test
int3
lds
pop
out
hlt
sub
xor
in
mov
jge
ins
jg
lea
mov
fdivr
or
and
mov
lock
sbb
dec
ins
hlt
loop
rol
call
dec
sbb
aam
aam
aam
aam
push
add
push
push
push
push
push
aad
retf
and
clc
mov
lods
icebp
mov
jle
jae
call
stos
icebp
stos
arpl
js
jl
xlat
test
push
add
(bad)
test
cwde
(bad)
cwde
shr
lahf
test
xchg
neg
sub
dec
push
pop
jp
cli
test
lahf
(bad)
jp
dec
pop
cmp
inc
mov
xchg
test
and
int3
xchg
test
sbb
sub
sub
int3
lahf
out
adc
pop
pop
adc
dec
cwde
test
cli
(bad)
pop
inc
jp
or
push
cli
int3
cli
int3
jp
pop
dec
pop
pop
jnp
sti
call
jp
jns
push
sub
dec
mov
fstp
dec
jp
jp
mov
lahf
call
jnp
cmp
pop
add
xchg
fnstsw
xchg
sub
lods
fs
pop
nop
popf
loope
inc
scas
dec
xor
aas
imul
cmp
dec
push
popf
loop
(bad)
int
pop
ss
popa
call
das
aam
movs
iret
repz
sub
js
or
cmp
(bad)
fmul
mov
mov
mov
test
test
cdq
aam
ror
fmul
out
mov
call
iret
mov
cld
xchg
mov
call
leave
jmp
aad
(bad)
fild
aad
rol
xchg
fst
fistp
xchg
movs
out
div
ror
fld
mov
mov
mov
mov
mov
mov
mov
lods
popa
clc
in
(bad)
pop
dec
scas
sbb
das
lds
enter
(bad)
jmp
sbb
mov
and
mov
jmp
mov
mov
jmp
cmp
shl
pop
nop
and
inc
jmp
pop
mov
push
inc
xor
adc
mov
push
test
add
in
stos
imul
stos
sbb
push
std
sbb
inc
stos
inc
loop
cli
push
sti
push
jecxz
out
sti
inc
aam
les
jne
add
loope
out
dec
mov
jle
or
jle
push
enter
loop
mov
inc
cli
pop
std
jno
pop
cld
push
aad
in
push
aad
(bad)
push
out
xor
push
call
push
fidiv
jg
push
in
push
jmp
in
aad
ret
jl
sbb
pop
std
cmp
pop
cmps
adc
xor
cmp
aad
mov
adc
scas
mov
arpl
jnp
inc
les
std
repnz
loopne
scas
add
(bad)
int3
rol
xchg
mov
push
out
sbb
call
add
jmp
mov
movs
(bad)
loopne
icebp
int3
add
(bad)
or
mov
(bad)
call
loopne
out
cwde
(bad)
out
pushf
sar
mov
fdivr
rcl
push
(bad)
jecxz
ret
mov
lods
jecxz
fdiv
out
movs
in
fbld
mov
jmp
cwde
hlt
mov
pop
add
mov
fcmovnu
xlat
mov
retf
sti
ror
inc
or
in
into
retf
mov
mov
adc
(bad)
mov
ret
or
retf
xchg
stos
cli
xchg
clc
les
sub
(bad)
jmp
loope
sbb
cmp
fcmovnb
ret
xchg
rcr
jecxz
mov
out
rcl
mov
sar
cmp
iret
fsub
scas
(bad)
mov
repnz
sti
(bad)
inc
add
sti
clc
rcl
cld
out
jmp
xlat
repnz
sar
(bad)
loope
sub
out
aad
mov
mov
push
dec
aam
(bad)
nop
cmc
mov
mov
in
jbe
inc
adc
je
sbb
mov
mov
xor
or
movs
pop
gs
pushf
push
into
sub
dec
js
dec
inc
call
push
loope
test
ja
and
fbld
sbb
cdq
cmp
aas
xchg
inc
shr
xchg
pop
jns
outs
lea
push
adc
jo
mul
inc
pop
out
mov
in
loop
in
inc
mov
pop
loop
mov
adc
cmp
push
jmp
add
xor
pop
mov
mov
pushf
push
pop
mov
mov
rol
rcl
cmp
push
lea
add
js
dec
xor
js
dec
fbld
not
pop
mov
push
(bad)
pop
inc
lods
pop
mov
movs
xor
push
in
je
inc
sahf
xor
push
lea
(bad)
or
push
sbb
mov
mov
adc
pop
push
mov
xor
test
dec
imul
fwait
addr16
clc
pop
in
int
mov
call
push
dec
xchg
sbb
or
add
or
xor
outs
in
sub
add
shr
fs
xchg
jo
stos
inc
jnp
inc
lea
psllw
pop
mov
jo
inc
jmp
add
outs
mov
cmp
xchg
inc
mov
mov
push
add
cli
test
lds
ret
test
mov
push
clc
mov
add
mov
cld
mov
lods
in
in
das
pop
cmp
mov
xchg
xor
xchg
(bad)
call
sar
test
in
cli
and
mov
cdq
sub
pop
push
sahf
xchg
mov
sbb
cwde
loope
stos
ficom
sti
pop
inc
dec
or
hlt
mov
(bad)
cwde
(bad)
fisubr
add
mov
lds
sbb
(bad)
call
push
push
dec
int3
jns
jnp
call
retf
leave
mov
les
jns
or
xchg
or
clc
or
retf
mov
sbb
or
test
xchg
retf
in
xorps
mov
pushf
loope
sbb
lock
out
sar
xor
add
not
enter
and
sti
sti
inc
aaa
adc
cmps
clc
loopne
mov
xchg
hlt
jecxz
jecxz
pop
and
xabort
lock
out
in
add
addr16
jmp
cmc
jmp
adc
out
mov
retf
cwde
mov
aam
shr
sar
mov
(bad)
loop
jae
addr16
cli
xchg
retf
lds
es
mov
test
repnz
ficom
push
cmp
(bad)
(bad)
mov
movs
loope
xor
pop
and
out
mov
lods
(bad)
sbb
adc
xlat
shl
cmps
cmps
std
mov
mov
sbb
sbb
mov
cmps
enter
fcmove
(bad)
fild
adc
fcmovb
loope
and
mov
sbb
mov
ret
(bad)
repz
dec
pop
adc
in
nop
xlat
fnsave
jmp
fst
ret
test
or
arpl
repz
repz
push
xor
icebp
mov
std
test
cli
loopne
jae
ss
mul
sahf
mov
mov
std
iret
cli
push
cmp
sub
lahf
das
fs
dec
push
popa
adc
pop
ds
(bad)
mov
jae
inc
aas
je
jae
jmp
imul
adc
out
mov
cs
dec
sub
sahf
out
mov
ds
gs
cs
int
leave
or
xor
pop
das
push
(bad)
jmp
adc
pop
dec
push
adc
pop
repz
out
(bad)
sub
imul
pop
or
mov
jne
sub
jbe
imul
idiv
cmp
aaa
inc
popa
dec
xor
in
xlat
leave
out
xlat
rdmsr
and
dec
or
ret
test
jbe
popa
aaa
dec
push
and
test
and
inc
push
addr16
adc
in
aad
and
xor
dec
adc
or
call
jle
inc
dec
imul
jb
shl
repz
and
pop
push
push
push
push
je
loopne
iret
repnz
pusha
push
jae
ins
adc
loopne
shl
dec
dec
pop
sub
jne
add
movs
vcmpsd
and
pop
dec
xor
adc
lock
aas
dec
inc
inc
push
push
or
loopne
(bad)
push
jno
adc
fst
sti
je
dec
jge
pop
mov
popf
inc
fdiv
adc
pop
ret
ins
jecxz
je
jb
das
cld
and
jp
inc
icebp
ficom
stc
or
push
leave
js
pop
jp
adc
scas
and
dec
mov
outs
test
stos
sahf
ins
clc
add
sub
cmp
push
test
mov
push
in
xor
push
mov
mov
loopne
stc
add
jns
push
aad
cmps
mov
hlt
ss
pop
loop
xchg
cmp
pusha
cmp
fisttp
in
mov
dec
xchg
outs
xchg
inc
xchg
mov
or
adc
(bad)
mov
es
mov
mov
and
data16
ficom
mov
icebp
add
mov
jns
add
mov
outs
in
scas
inc
loopne
cld
inc
aad
fimul
push
scas
push
test
stos
push
lds
cmp
es
imul
sahf
push
fnstenv
into
arpl
inc
shl
stc
mov
ss
fild
nop
popa
test
xchg
dec
fbld
xor
push
or
mov
cmp
push
cmp
fstp
xchg
xor
cli
jns
pusha
pop
aas
aas
dec
int3
fdivr
or
xor
(bad)
and
icebp
lahf
addr16
ins
push
dec
in
int3
dec
and
test
pushf
into
dec
cmp
jne
jge
fucomip
sahf
test
in
dec
jnp
or
jmp
cmp
lock
push
and
mov
dec
std
out
(bad)
in
ins
repnz
hlt
or
dec
push
leave
outs
cmp
mov
xor
sbb
fwait
or
out
retf
dec
xchg
dec
js
dec
dec
in
mov
ret
mov
jmp
(bad)
leave
shr
or
imul
cmp
mov
call
jae
push
or
mov
mov
mov
outs
cs
jnp
imul
outs
push
sar
xchg
call
pop
dec
imul
iret
mov
imul
push
dec
pop
jg
xchg
repnz
gs
sub
jo
sub
sar
ds
(bad)
xlat
in
out
rcr
arpl
push
ins
fs
mov
(bad)
out
pop
jge
and
dec
jp
mov
mov
es
dec
popa
and
fdivr
div
out
int
pop
dec
jl
jne
jle
test
ret
push
push
push
inc
outs
ss
xchg
int
mov
inc
ss
fist
in
jl
addr16
jbe
and
(bad)
int3
int
(bad)
jmp
jp
push
pop
aaa
jg
sub
out
in
shr
and
push
jne
adc
(bad)
sub
inc
inc
ins
inc
jnp
mov
xchg
test
xor
ins
fs
nop
mov
and
dec
jle
ins
jae
push
in
ror
jo
dec
inc
jg
xor
xchg
clc
(bad)
loopne
out
and
and
les
cmps
gs
dec
jne
jae
pop
mov
out
jbe
dec
jae
push
inc
inc
or
leave
int3
mov
ffreep
or
dec
imul
jle
mov
xor
outs
inc
inc
and
(bad)
out
out
leave
cmps
xor
jl
and
repnz
and
adc
test
test
lahf
and
cmp
sub
or
mov
cmps
jmp
out
stos
aaa
cmp
sub
xchg
div
pop
sub
xor
xor
lock
jae
jp
xor
jnp
fwait
mov
sti
jmp
jle
xchg
mov
mov
sbb
sbb
fs
loope
icebp
mov
cmps
loope
jne
and
outs
or
(bad)
call
popa
sbb
adc
daa
cdq
xor
sub
jno
aaa
cmp
call
adc
adc
and
ret
lock
xor
cmp
bound
lock
mov
sub
and
push
sbb
aaa
lods
mov
add
sbb
cli
mov
icebp
mov
daa
push
cmp
sub
jae
jae
add
and
test
in
mov
mov
push
stos
mov
xchg
xchg
mov
add
cmp
pop
sbb
xor
xchg
mov
jle
cs
loope
push
sub
adc
mov
not
sub
je
jns
rcr
dec
xchg
mov
imul
lds
dec
mov
xchg
adc
mov
(bad)
push
loop
xor
retf
outs
xor
in
add
je
pusha
mov
ficom
xor
and
stos
ja
inc
mov
cwde
sub
leave
dec
mov
(bad)
push
xor
(bad)
ja
xchg
add
mov
jbe
add
and
and
sbb
inc
mov
inc
(bad)
dec
sar
fisttp
mov
outs
lods
push
cmp
pop
out
int
jne
jno
ja
push
fistp
(bad)
ret
adc
dec
mov
jne
mov
mov
in
sbb
cmp
xchg
hlt
sub
sub
push
mov
push
imul
ror
ret
adc
push
popf
jbe
cmp
loope
ret
push
xchg
sub
mov
les
bound
hlt
sub
xchg
adc
ins
xchg
pop
xchg
pop
dec
fsubr
lock
xchg
pop
or
rcl
cmp
out
out
mov
xchg
arpl
add
inc
mov
jmp
fwait
addr16
dec
xchg
adc
mov
or
in
call
dec
or
imul
mov
inc
sbb
jmp
mov
je
adc
jbe
dec
jge
mov
sti
dec
pop
sbb
sub
test
cdq
test
sub
xor
mov
scas
xchg
jmp
dec
pop
sub
jp
jmp
scas
add
cs
jbe
movs
out
cwde
jmp
mov
push
inc
ja
outs
stos
cmps
clc
mov
test
ins
xor
push
sub
ficom
mov
push
dec
adc
rcr
outs
push
sbb
jp
mov
cdq
icebp
mov
push
adc
aad
mov
jns
cmp
xor
in
movs
mov
sbb
jl
jnp
(bad)
lods
fldenv
jp
cmp
push
jbe
loope
xchg
jmp
cmps
push
pop
or
dec
jo
or
imul
fisubr
jae
xor
jl
aaa
mov
aad
imul
inc
aaa
aaa
push
ins
jbe
fcomp
jo
push
add
lea
add
dec
stos
test
movs
lds
and
add
arpl
popa
inc
push
shl
movs
jno
test
inc
jnp
fwait
lods
xchg
cwde
shl
dec
sub
jb
es
mov
ret
icebp
and
xor
jge
mov
jb
push
ucomiss
lods
sar
fld
sub
popa
gs
test
sahf
aad
xchg
push
ss
xlat
jb
(bad)
xchg
(bad)
aam
(bad)
xor
push
adc
adc
ret
pop
add
das
adc
ret
lock
push
xor
sbb
mov
ret
(bad)
mov
inc
push
xor
push
push
cwde
or
aaa
and
xchg
inc
add
shl
movs
xchg
and
add
nop
jne
cmp
outs
in
push
jb
pop
inc
lea
add
(bad)
into
dec
or
movs
lods
(bad)
je
aam
or
xor
out
xor
add
adc
mov
add
mov
in
repnz
les
inc
push
sbb
push
test
mov
ret
inc
aas
xor
push
push
test
push
push
lock
data16
out
(bad)
adc
ins
xchg
stos
call
or
or
and
pop
test
int3
movs
jno
in
das
popa
inc
push
mov
mov
test
adc
inc
mov
cmps
out
jnp
ret
loope
(bad)
inc
mov
mov
sub
xchg
test
push
adc
shl
pushf
xchg
fs
cmp
sub
fs
out
outs
mov
adc
dec
inc
repz
xchg
aam
add
push
sbb
lock
xor
test
das
push
jle
test
mov
xchg
adc
mov
xchg
(bad)
dec
xchg
xchg
icebp
retf
or
jb
out
mov
out
mov
push
mov
and
mov
adc
add
and
lahf
in
pop
inc
cmp
mov
(bad)
xchg
out
loop
mov
and
and
cmp
inc
pop
fadd
xor
data16
add
ret
push
cwde
(bad)
fild
push
in
inc
jne
push
mul
cmps
xchg
pop
pop
mov
jb
in
shl
xor
jp
and
mov
aad
inc
mov
js
rcr
push
push
add
jecxz
les
rcl
adc
mov
ins
shl
(bad)
popf
icebp
icebp
ret
(bad)
inc
rol
xor
rol
add
mov
arpl
mov
enter
mov
fcmovnbe
sbb
xchg
loop
repz
cli
stc
test
ss
xor
ret
aad
rcl
xor
mov
pop
ret
jbe
jp
imul
cli
test
rcr
fbld
sbb
or
aas
inc
mov
mov
pop
push
adc
cmp
pop
and
or
sbb
cmp
test
inc
fsub
repnz
pusha
fdivr
fisttp
adc
and
sub
mov
fldenv
arpl
out
push
cmps
inc
retf
fstp
out
push
fsub
fld
lock
pop
arpl
sti
inc
test
mov
cmc
cmp
loopne
or
pop
mov
mov
aaa
mov
sbb
xchg
jne
aas
sbb
sub
int
repnz
dec
dec
(bad)
xor
pop
dec
cld
fimul
cmp
or
xor
in
push
cmp
jns
and
inc
scas
push
mov
enter
cmp
cmp
leave
adc
movs
and
aam
sbb
imul
mov
int
repz
inc
jne
adc
out
cmp
aam
cmp
mov
popa
fcmove
xor
ja
fadd
xor
rcr
loopne
mov
xchg
scas
xor
mov
les
xchg
mov
or
ins
fsubr
nop
in
adc
sub
lods
xor
hlt
int
dec
bound
cwde
fs
push
and
mov
aam
idiv
ror
sar
pop
idiv
in
mov
cmc
dec
xchg
adc
clc
push
cmp
jmp
sbb
ss
mov
sar
xor
cmp
ins
test
in
add
lds
cld
not
adc
sar
xchg
or
cmps
dec
scas
mov
xchg
mov
shl
fcmove
sbb
jmp
(bad)
mov
and
push
sbb
dec
repz
xlat
pop
call
cs
jmp
lock
mov
or
int3
outs
int
jmp
push
or
jmp
pop
(bad)
mov
mov
sub
pop
xor
jmp
dec
pushf
cmp
stos
pop
push
fcmove
scas
sti
mov
popf
push
ins
mov
lds
mov
fimul
cmp
call
mov
jg
or
mov
repz
mov
sub
cdq
mov
test
or
mov
test
fimul
mov
ins
mov
test
jle
cmps
das
pop
retf
das
lea
test
test
pop
xor
int
lods
mov
in
mov
or
xor
mov
mov
fstp
sub
cmps
or
sar
in
jmp
sbb
stc
mov
js
cmp
mov
push
or
mov
jmp
sahf
mov
dec
enter
fdivrp
in
stos
ret
sbb
test
cmp
mov
pop
mov
(bad)
cs
test
cdq
xchg
scas
pop
cmps
xlat
xor
addr16
fadd
out
shl
mov
lock
inc
mov
jmp
ds
cmp
test
adc
cmps
test
xor
not
cmps
xchg
in
movs
push
dec
aam
xchg
ja
mov
ret
icebp
inc
adc
movs
div
push
mov
mov
retf
enter
adc
or
add
scas
fdivr
sub
pop
(bad)
je
rcl
in
push
pop
jo
add
and
jmp
pop
mov
out
(bad)
pop
or
inc
fdiv
mov
aad
add
loopne
jmp
add
xchg
gs
aam
xchg
repnz
(bad)
sti
lds
push
shl
xchg
scas
shl
pop
ret
ret
cmps
call
dec
xlat
xor
lahf
iret
(bad)
push
mov
not
xchg
movs
and
jecxz
jecxz
lods
and
and
int
les
fmul
loop
xlat
pop
push
xor
jecxz
mov
in
push
xor
rcl
pop
pop
stos
adc
sti
test
inc
push
arpl
aas
or
pop
in
push
jo
push
pop
aas
or
ins
repnz
inc
push
jmp
je
inc
sbb
adc
and
retf
adc
pop
call
fstp
xchg
dec
dec
xchg
mov
adc
cmp
jecxz
in
xor
add
dec
jo
shl
call
inc
ret
loopne
sub
pop
pop
out
mov
addr16
inc
pop
fild
je
rcl
xor
dec
jb
or
dec
add
sub
cdq
xor
adc
add
nop
(bad)
ds
pop
je
xor
push
and
mov
cmps
inc
push
adc
adc
mov
inc
jecxz
mov
cs
adc
add
(bad)
cli
ret
add
xor
pop
jbe
outs
and
leave
jo
sbb
mov
ja
jne
jno
clc
xor
ins
fild
jmp
mov
dec
push
dec
mov
jae
inc
out
mov
xchg
not
dec
jne
in
inc
pusha
jecxz
addr16
pop
push
ds
jo
loopne
data16
bound
(bad)
(bad)
cli
adc
xor
jb
xchg
int3
add
inc
out
fimul
sbb
aaa
in
test
jmp
cmp
push
cdq
jno
inc
das
rcr
xor
int
call
jae
and
and
in
je
and
inc
cwde
in
or
or
psrlw
jb
adc
lods
pusha
cld
popa
mov
sub
add
movs
cdq
jae
sar
cli
sar
inc
test
ja
es
daa
out
jge
mov
lock
inc
in
je
cmp
adc
es
xor
jg
inc
fwait
cmp
inc
dec
jnp
sbb
dec
cmp
jmp
dec
fwait
imul
push
pop
psubq
lods
dec
sbb
out
push
adc
in
jnp
jecxz
or
and
lods
cmp
dec
mov
jo
cmp
mov
xchg
pop
fistp
push
or
fcomip
xchg
sahf
lea
out
sub
movs
sbb
cld
dec
ins
lods
or
ret
sub
xchg
sub
push
int
mov
xor
pop
(bad)
neg
dec
into
dec
mov
sbb
sbb
outs
fldcw
outs
dec
std
imul
inc
jo
mov
mov
ss
jle
push
(bad)
cwde
inc
pop
dec
adc
outs
daa
jns
add
jg
inc
add
ins
push
push
inc
push
pop
les
xor
push
mov
push
dec
and
out
xor
icebp
rcr
scas
fst
jae
cs
or
sub
xor
mov
cmp
shl
pop
sbb
jno
inc
push
movs
jmp
rcr
xor
push
adc
bound
arpl
sbb
fs
js
dec
ins
fxch
int
rol
ins
int3
sub
mov
jne
outs
scas
adc
or
mov
jmp
ds
aas
je
popa
and
pop
mov
jl
cmp
cmp
mov
xor
adc
pop
or
cmp
sbb
gs
pop
popf
and
ds
sbb
cld
arpl
xor
push
pushw
and
add
and
ds
adc
popa
cmp
popa
push
mov
sti
ret
xchg
and
jae
sub
xor
xor
adc
mov
in
pop
in
pop
retf
js
mov
sbb
sub
jg
sub
jecxz
xchg
xor
cmp
pop
stos
xlat
and
shl
bound
daa
mov
mov
xor
addr16
xor
pushf
xor
xor
sub
out
addr16
xchg
sti
mov
and
push
xor
imul
cmp
rcl
jo
mov
push
or
movs
jo
dec
add
xor
imul
sub
dec
xor
pop
dec
adc
out
daa
jae
ret
mov
cmp
xor
push
mov
out
cmp
inc
add
sub
fisub
inc
in
sub
xor
cmp
mov
add
jl
test
cwde
addr16
mov
jae
pusha
not
push
xchg
or
inc
out
inc
xchg
and
and
gs
(bad)
repnz
push
das
xchg
and
daa
sbb
ins
dec
ds
push
loopne
cli
adc
jno
and
and
test
shl
adc
sub
into
bound
outs
jle
lahf
es
cmp
nop
test
outs
cdq
je
sbb
test
dec
leave
out
pop
fwait
mov
sub
iret
push
xlat
pop
(bad)
pop
add
enter
dec
in
in
cmps
mov
xlat
out
pop
mov
pop
retf
les
repz
rep
(bad)
push
imul
inc
mov
jp
loope
jmp
jmp
xchg
jmp
lock
pop
test
call
pop
out
shl
call
sub
inc
rol
sbb
fs
fsubr
paddb
push
rol
xchg
add
dec
enter
out
call
test
push
imul
dec
mul
jmp
cmc
xchg
dec
test
cmc
iret
in
adc
push
mov
push
mov
int
add
inc
out
into
pop
cmp
dec
jnp
aad
inc
lds
mov
push
mov
push
addr16
or
(bad)
out
out
pop
gs
inc
ror
push
xor
mov
push
jno
aaa
arpl
jmp
test
data16
mov
fcom
cli
xor
mov
ror
out
jo
pop
fidiv
outs
fadd
cmps
stos
xor
repz
shr
jp
(bad)
xor
daa
pushf
popa
lahf
mov
ins
mov
pop
push
pushf
jecxz
les
xchg
stc
xchg
nop
repz
repz
mov
cmp
lds
add
outs
nop
sub
adc
out
icebp
mov
aas
mov
sbb
sub
enter
ds
ret
ins
mov
adc
xor
into
(bad)
ins
sbb
pop
adc
jg
sub
(bad)
aas
inc
sbb
mov
movs
lock
or
std
add
sti
adc
fs
inc
ss
mov
ss
xchg
leave
aaa
mov
xchg
clc
fs
call
aaa
rcl
or
out
jbe
movs
sub
xor
fadd
sub
pop
ret
pop
cmps
sbb
mul
rcl
jmp
int3
jecxz
pop
xlat
pop
out
jno
xchg
inc
fiadd
jmp
jge
aam
je
loopne
dec
(bad)
mov
push
in
sbb
cmp
lods
push
leave
mov
add
xchg
jmp
xlat
fisttp
pop
mov
(bad)
mov
add
cmps
pop
or
fidivr
dec
mov
(bad)
pop
add
mov
fwait
or
stos
mov
out
mov
lods
sbb
xchg
loopne
dec
cli
stos
cli
push
fbld
dec
jecxz
or
idiv
cld
pop
lock
push
test
mov
fdivp
enter
scas
mov
adc
sbb
fldcw
push
iret
xlat
dec
mov
cld
fistp
iret
hlt
aaa
fwait
inc
test
test
adc
or
out
std
cwde
shl
bound
enter
stc
pop
es
pop
aas
add
das
mov
mov
add
imul
cdq
in
(bad)
jmp
gs
out
int3
sub
imul
sub
sti
sbb
xor
xor
nop
fist
mov
hlt
imul
ss
div
pop
(bad)
fwait
gs
pop
add
test
out
fistp
lock
mov
mov
idiv
xor
sbb
loope
mov
sbb
jp
inc
sub
mov
add
mov
mov
xchg
out
mov
mov
sbb
pop
leave
mov
loope
add
popa
mov
ins
push
or
jnp
icebp
loop
add
out
hlt
and
movs
pop
movs
fdivr
les
inc
ja
aas
int3
in
shl
mov
pop
mov
aad
test
test
cli
xchg
fsubr
sbb
mov
int3
out
test
lods
adc
fsub
sub
xor
cmps
push
and
lds
xchg
mov
xchg
lods
rcl
aad
xchg
mov
lods
scas
stos
mov
mov
pop
dec
push
aam
jmp
test
push
push
bound
icebp
ret
mov
push
outs
xchg
xchg
mov
pop
sub
cmps
and
mov
mov
mov
(bad)
mov
test
mov
xchg
out
(bad)
cmc
lods
xchg
mov
and
call
int3
in
cmps
nop
push
inc
jp
mov
in
mov
or
add
shl
into
scas
mov
push
inc
mov
cmp
aad
lods
mov
add
ror
sti
lea
push
push
xlat
cmps
test
test
cli
cmps
push
add
movs
mov
(bad)
scas
nop
jmp
cmp
add
and
xchg
inc
fsubr
mov
add
iret
mov
adc
pop
hlt
xchg
out
loopne
idiv
stc
rcl
loop
imul
push
add
add
cmc
cli
or
pushw
add
push
out
inc
xor
lahf
cwde
nop
mov
xor
dec
adc
adc
or
inc
fwait
xor
pop
jp
pop
int
sbb
out
and
lahf
and
std
xor
cli
loop
aas
fadd
nop
adc
jl
and
or
arpl
push
cmp
pushf
mov
adc
and
fnstenv
dec
xor
aad
mov
movs
and
pusha
lea
nop
xchg
jg
int3
dec
jns
add
fiadd
and
out
mov
call
xchg
adc
cmp
es
lock
sbb
sub
add
ja
pop
push
and
xchg
cmp
cmc
cs
popf
movups
push
inc
jae
push
ret
call
add
jp
loop
pop
(bad)
xor
(bad)
and
imul
gs
and
push
fcomp
pushf
addr16
hlt
movs
and
into
out
jbe
mov
adc
aaa
add
jbe
push
daa
jno
and
jbe
(bad)
mov
dec
and
jae
pop
pusha
or
aad
pop
inc
xchg
adc
xchg
jne
xor
cmp
mov
inc
jo
xor
or
and
pop
pop
sub
pop
in
jo
and
cmc
int3
jae
pushf
stos
jmp
and
sti
mov
push
inc
push
imul
xor
lock
xchg
xor
pop
or
lods
faddp
test
les
push
jno
in
ret
out
and
dec
push
xor
mov
inc
and
push
cmp
lock
or
lock
fwait
cmc
cli
jle
ins
inc
popa
dec
push
and
nop
push
stos
lods
inc
push
retf
loope
add
loop
repz
add
shr
lods
popa
push
pushf
inc
fwait
aas
nop
popa
rcl
jl
repz
leave
inc
add
shr
ja
push
adc
and
imul
(bad)
adc
sbb
push
arpl
add
sbb
out
mov
sub
push
push
push
pusha
lea
sbb
hlt
retf
inc
xor
push
dec
push
in
retf
and
inc
jo
jbe
aam
add
and
scas
sbb
and
jns
mov
xor
xlat
xchg
imul
(bad)
and
xor
ins
add
xor
pop
sar
cmp
leave
addr16
push
jno
in
push
retf
xchg
mov
pop
arpl
mov
cld
lods
aad
push
lods
sbb
jnp
adc
add
ret
out
or
adc
xchg
push
push
nop
pop
xor
es
jmp
cmps
mov
mov
adc
imul
xchg
sub
fs
mov
jo
inc
cwde
or
pop
outs
dec
and
(bad)
(bad)
adc
jne
jns
cmps
test
jecxz
es
mov
nop
jbe
jp
imul
and
jp
dec
mov
ja
ins
cli
shr
sti
xor
cdq
add
into
mov
loope
pop
dec
loope
fisubr
imul
not
outs
js
sar
jo
icebp
aad
mov
rol
sahf
cmp
fst
test
adc
mov
and
nop
dec
sar
test
jecxz
or
jb
adc
add
push
jle
pop
cmp
rcr
and
dec
nop
into
cli
pop
push
pop
push
pop
or
xchg
ja
ja
std
mov
pop
jg
xchg
adc
ret
add
fst
loopne
jg
adc
inc
pop
or
out
jecxz
iret
cld
mov
sub
lds
adc
adc
adc
retf
loopne
retf
scas
sbb
loopne
scas
fisttp
dec
fcmovne
das
jnp
jge
in
ficomp
jb
adc
stc
dec
xchg
das
outs
cmp
cmp
in
scas
test
cmp
or
dec
cwde
cmp
lahf
mov
cmp
and
xchg
fsubr
mov
fnstsw
sbb
add
xchg
hlt
je
lahf
fidivr
inc
xor
leave
adc
sub
mov
pop
daa
pop
mov
sub
push
dec
ins
pop
sbb
pop
push
stos
retf
mov
or
cmp
ins
and
lods
cld
cmp
jge
cs
sub
sub
push
push
cmp
adc
(bad)
sbb
ds
xor
das
jp
fsubrp
mov
mov
enter
xchg
popa
mov
xchg
ret
(bad)
(bad)
cmc
mov
rcl
adc
xchg
ins
repz
fstp
shr
outs
jecxz
(bad)
call
inc
or
ret
nop
rcr
push
in
jp
push
rcl
nop
popa
pop
push
pusha
movs
stos
iret
mov
xchg
fiadd
mov
push
xchg
adc
mov
jns
test
push
push
inc
jbe
add
push
(bad)
xor
std
push
bound
xchg
mov
and
sbb
push
rcl
fild
repnz
pop
jmp
add
mov
xor
inc
xchg
test
enter
out
retf
gs
add
out
repz
add
in
sar
lds
jl
repnz
ret
sahf
fsub
dec
(bad)
ins
and
ret
bound
sbb
rcl
cmp
or
inc
dec
(bad)
mov
add
cmp
sahf
stos
ret
pop
hlt
bound
les
xor
jb
mov
pavgb
in
xchg
not
movs
out
xor
out
and
aas
sbb
push
jne
retf
cld
xchg
cwde
adc
jb
(bad)
cmp
sub
ror
xor
ss
ja
dec
out
lock
fist
in
(bad)
xchg
push
out
repnz
mov
jp
pop
aaa
push
neg
xor
mov
hlt
inc
dec
mov
retf
lock
jo
adc
jbe
mov
adc
das
mov
mov
not
and
addr16
mov
shr
iret
xor
ret
mov
mov
aam
mov
idiv
dec
ret
cdq
xor
push
dec
daa
push
leave
frstor
inc
cdq
cwde
cmps
pop
sub
loopne
mov
jb
icebp
mov
inc
es
adc
push
and
je
aam
ret
(bad)
jecxz
fld
jbe
ins
mov
imul
cwde
pushf
inc
jle
pop
push
add
xor
clc
fstp
popa
inc
inc
mov
fcmove
push
ins
inc
inc
test
fcmovnu
cmps
clc
lock
mov
dec
ja
in
fidiv
adc
sbb
mov
test
icebp
(bad)
mov
jge
jbe
call
xor
mov
pop
mov
out
push
mov
mov
enter
les
sbb
pushf
xor
sbb
xchg
mov
ins
push
scas
aad
xor
xchg
jns
sbb
lahf
add
push
fistp
pop
pop
mov
nop
jnp
pop
nop
fnstenv
inc
aas
movs
emms
(bad)
in
rcr
mov
xchg
in
mov
mov
(bad)
cmps
push
das
cmps
ror
xchg
jb
and
pop
push
inc
in
jmp
sub
shr
dec
popf
iret
test
and
enter
pushf
fisubr
xor
cmps
jb
fld
inc
call
leave
nop
push
fiadd
or
jle
sbb
sahf
sahf
rcr
lea
js
cmp
int
cmp
mov
xchg
sbb
mov
pop
js
jne
or
xor
sbb
cdq
push
cdq
dec
pop
xor
dec
mov
push
and
mov
sti
cwde
dec
jle
mov
mov
or
mov
cmp
push
mov
inc
jo
mov
dec
jno
adc
outs
sbb
xlat
cmp
nop
xor
sbb
jnp
mov
xchg
or
fnstcw
jp
pop
cs
arpl
stc
sub
cli
mov
stc
pop
pushf
in
cwde
stc
imul
fcmovne
mov
pop
iret
pop
pop
jge
mov
mov
cmp
dec
sbb
jns
out
mov
mov
daa
mov
mov
push
mov
jge
test
mov
mov
ds
sti
imul
jl
jge
retf
or
cli
sub
jmp
push
push
les
sbb
jle
and
ror
mov
shl
mov
pop
pop
sub
hlt
sti
fisttp
sbb
int3
cmp
mov
unpcklps
jp
inc
jl
xchg
leave
dec
arpl
jmp
add
imul
popa
(bad)
jmp
mov
jmp
inc
sub
dec
das
sbb
retf
cmp
cs
psubd
adc
push
xor
mov
inc
sbb
xchg
dec
jmp
in
add
inc
push
mov
xchg
test
(bad)
push
xor
inc
xchg
and
dec
(bad)
push
jmp
push
mov
add
and
(bad)
fs
adc
ss
jle
or
movs
pop
loop
je
xchg
sub
push
xchg
dec
cdq
ja
jne
push
fbld
bound
pop
leave
inc
ror
loopne
gs
ins
push
adc
add
mov
pop
pop
push
pop
add
mov
shl
mov
and
hlt
test
into
adc
adc
addr16
adc
lahf
xchg
add
outs
jg
cmp
inc
inc
cmp
add
les
mov
adc
adc
mov
aam
(bad)
retf
xor
adc
or
and
pop
xor
mov
addr16
ss
(bad)
push
push
out
cmps
pop
rcl
jmp
pop
shl
movs
(bad)
and
xlat
xchg
xchg
pop
cmp
cmp
lods
cmc
aas
xchg
mov
push
inc
dec
(bad)
out
test
dec
ja
or
sbb
or
push
cmp
(bad)
jnp
inc
ret
test
pop
cmp
add
mov
test
test
push
push
xlat
xchg
cdq
fs
daa
xor
cmp
int
jne
sub
ins
sub
cmps
xchg
test
(bad)
fcmovnb
adc
and
or
jno
enter
dec
cli
adc
mov
sahf
jecxz
or
and
in
mov
push
push
imul
mov
sub
rcr
and
bound
ret
mov
pushf
(bad)
pop
int
fwait
mov
push
xchg
bound
call
xor
add
and
aad
in
daa
or
mov
push
sbb
js
mov
std
ins
stos
(bad)
shr
mov
sti
loopne
pop
shl
pop
(bad)
inc
sub
sub
inc
aam
fisubr
xchg
mov
jmp
add
xlat
sub
(bad)
jmp
repnz
stos
xor
and
aas
jecxz
fcmovb
jp
nop
out
int
rcl
add
mov
test
sbb
ds
mov
pop
ret
and
icebp
repnz
push
inc
fs
ret
sti
fsubr
retf
mov
lods
and
push
arpl
jmp
jb
rcpps
mov
mov
rcr
call
push
push
fst
jb
in
mov
bound
mov
int
repz
and
add
stos
jmp
xchg
mov
cmps
or
leave
sbb
add
in
xchg
dec
sbb
inc
jbe
loop
(bad)
je
cmp
sub
xchg
dec
gs
hlt
sub
retf
fs
out
and
jns
add
mov
cdq
shr
(bad)
fild
xchg
jae
out
sbb
pop
push
mov
fucomp
call
ins
(bad)
jmp
inc
into
clc
or
cld
pop
and
push
test
or
sbb
dec
leave
repnz
les
dec
adc
aam
push
push
add
or
xlat
sub
cmps
in
jb
repnz
jmp
sub
cmc
test
call
cmp
mov
push
shl
pop
leave
pop
mov
es
in
fstp
mov
jns
jne
jmp
in
push
in
mov
ins
out
sbb
fdivr
push
je
rcr
sbb
cmp
imul
jns
push
cmp
adc
cmp
inc
scas
retf
dec
sbb
mov
jmp
or
xchg
test
int3
(bad)
das
add
out
in
jecxz
test
fdiv
ins
sub
iret
ret
pop
and
(bad)
jns
jmp
lods
out
mov
stc
mov
scas
cmp
xor
sbb
fstp
jmp
jmp
pushf
out
ins
jge
pop
jle
ins
inc
mov
in
fmul
xchg
das
imul
repz
scas
int
sbb
dec
or
(bad)
loope
hlt
push
dec
mov
push
push
cli
(bad)
(bad)
in
scas
add
sbb
out
pop
jle
adc
mov
scas
sbb
lods
loope
sahf
jecxz
in
jmp
sbb
repnz
push
mov
loope
into
into
cmovno
int3
lds
mov
scas
test
inc
pop
outs
mov
pop
cmp
movs
test
inc
inc
pop
fld
mov
or
xor
js
sbb
les
nop
std
mov
mov
mov
cdq
mov
das
pop
sbb
scas
jmp
push
call
popf
mov
mov
std
jl
and
mov
xor
imul
inc
loope
push
add
shr
ret
mov
push
jle
mov
lock
xor
mov
cld
dec
adc
pusha
push
sahf
jecxz
aam
mov
imul
inc
or
ret
xchg
mov
jo
inc
fs
mov
push
mov
ja
dec
push
(bad)
push
xchg
mov
mov
mov
jnp
out
xor
ret
xchg
mov
sbb
and
xor
fisubr
(bad)
call
jae
push
popf
jae
rol
cld
xchg
mov
mov
mov
mov
sbb
push
mov
pop
xchg
or
and
mov
or
pop
xor
std
pusha
xor
push
sub
xchg
mov
repnz
pop
cmp
xchg
cmps
pop
pop
aaa
es
test
jae
(bad)
push
xchg
and
ss
lea
ins
nop
mov
sub
addr16
imul
pushf
pop
push
mov
scas
sub
push
pop
pop
add
inc
inc
les
cmc
add
aaa
inc
addr16
ins
mov
xchg
fnstenv
inc
and
or
ja
push
push
or
jne
outs
or
std
addr16
mov
jae
xor
addr16
cli
fst
pushf
xor
outs
ss
xchg
gs
mov
xor
cmp
jp
inc
inc
dec
xchg
xchg
inc
call
ja
xchg
push
das
push
push
(bad)
mov
inc
push
adc
popa
xchg
fcom
push
nop
and
(bad)
jbe
out
sar
jle
inc
inc
cmps
addr16
dec
sbb
popa
inc
inc
adc
inc
dec
jne
out
addr16
push
retf
xchg
mov
not
or
cmp
add
jecxz
and
inc
or
sbb
lods
xchg
rol
add
add
adc
add
sub
add
jg
cmp
cs
inc
in
ret
lock
sbb
fsubrp
mov
and
je
adc
loope
icebp
push
int
popa
lods
adc
call
mov
adc
inc
xlat
add
xor
in
xor
loope
out
mov
sahf
aaa
iret
or
jg
outs
dec
fadd
push
repz
xor
fnstenv
int3
scas
loope
sahf
or
pop
sub
xchg
mov
ret
push
loop
sub
or
adc
xor
push
shr
pop
popf
fs
in
pop
pop
sub
outs
inc
adc
add
or
mov
int
ins
xor
pusha
(bad)
out
cs
ds
inc
pushf
and
sub
sub
cmp
into
or
pop
int
in
cld
(bad)
fwait
in
xor
popf
call
xor
add
fwait
in
or
mov
imul
stc
jo
cwde
jp
int3
mov
inc
fwait
int3
push
dec
cmc
cmp
sub
loopne
pop
das
jl
scas
popa
hlt
or
pop
push
inc
das
out
rol
stos
loope
in
int3
mov
sub
push
add
mov
adc
xchg
push
rcl
lock
mov
pop
popa
(bad)
push
in
das
and
mov
(bad)
mov
dec
iret
lods
ret
sub
mov
fisubr
jns
jns
pusha
ficom
jp
mov
and
jns
inc
pushf
js
push
and
aaa
pop
ret
dec
fld
dec
scas
mov
retf
and
and
pop
sub
pop
aad
fmul
sbb
mov
dec
sub
mov
cmp
jmp
jne
stos
pop
mov
jg
or
xlat
jns
pop
fisubr
adc
clc
retf
sub
xchg
les
popa
daa
jns
mov
and
shl
push
push
mov
cmp
clc
test
fcomp
(bad)
movs
or
and
mov
imul
sahf
jns
mov
or
mov
shr
cdq
push
aam
push
mov
sub
jnp
push
ins
add
xchg
aaa
iret
jb
ss
std
or
and
test
mov
mov
pop
mov
cmp
ds
aam
or
cmps
inc
xor
cmp
sbb
mov
inc
adc
push
nop
push
mov
inc
aas
inc
or
mov
inc
hlt
rep
movs
push
fist
and
inc
push
dec
jmp
movs
(bad)
push
jbe
push
xor
bound
call
mov
addr16
fisttp
pop
test
inc
dec
jmp
adc
push
jbe
inc
pop
add
xchg
push
test
push
push
push
push
push
lahf
mov
aam
mov
mov
push
(bad)
xchg
cmc
call
push
sub
inc
inc
daa
dec
add
push
and
ss
push
(bad)
xor
push
push
leave
mov
vandps
repnz
pop
ror
sub
push
adc
movs
pop
ja
movs
inc
scas
pop
fs
inc
stos
and
arpl
or
pop
adc
lds
push
adc
fs
addr16
and
popa
sbb
mov
lahf
inc
addr16
cmps
push
dec
inc
inc
jg
xor
fild
clc
repz
xchg
xchg
inc
pop
loopne
add
xor
pop
fnstsw
mov
dec
mov
mov
js
int3
add
push
cmp
cmps
sub
add
inc
mov
xor
pop
in
inc
test
stc
push
mov
push
pop
adc
push
jne
cmps
bswap
cmp
push
dec
dec
push
jnp
push
push
mov
or
push
inc
addr16
scas
or
lds
push
xor
ja
fadd
data16
inc
cmp
xchg
push
nop
adc
jg
scas
(bad)
outs
fdivr
sub
ja
xor
data16
push
and
cvtpi2ps
adc
mov
loopne
mov
jge
test
mov
(bad)
in
arpl
int3
xchg
xchg
xchg
sbb
repz
hlt
lea
xchg
push
js
jae
retf
jp
add
xchg
and
and
xchg
jge
xchg
xchg
or
aas
jl
shl
rcr
outs
aaa
mov
data16
std
cmp
mov
sbb
mov
and
mov
xchg
push
pop
mov
jns
popa
mov
mov
mov
jecxz
(bad)
loopne
sub
jbe
lods
adc
sub
fcomp
mov
leave
add
inc
cdq
adc
xchg
sub
and
xchg
xchg
xchg
scas
cmps
js
xchg
jg
xor
or
in
xor
adc
bound
mov
xchg
jb
mov
fnstenv
fldenv
xor
pop
adc
xchg
mov
pop
test
xchg
add
clc
fdivr
lods
mov
mov
mov
js
pushf
adc
mov
xchg
xchg
rol
bound
inc
bound
mov
cmp
cmp
lds
rcr
lds
adc
cmp
cmp
rol
(bad)
(bad)
dec
sub
mov
les
sbb
les
sti
cmp
aas
lds
out
sub
or
lds
sub
cmp
shr
pop
test
loopne
rcr
sbb
and
aam
sub
stos
mov
pop
add
sub
leave
adc
and
sub
cmp
jle
pop
mov
cmp
sbb
xlat
cmps
ss
pop
sbb
ss
ins
in
sub
adc
sahf
aad
jmp
(bad)
shl
dec
cdq
movs
cmp
mov
dec
ret
out
cmp
xchg
cmp
mov
sub
push
loop
adc
sub
inc
inc
movs
cmp
ret
ss
cwde
test
test
or
sub
xchg
retf
fsub
dec
sar
cmp
lds
xchg
cmp
js
fs
dec
jb
nop
out
les
cmps
xlat
data16
dec
stos
repz
les
outs
jmp
ret
(bad)
test
xchg
addr16
xor
or
mov
aas
stos
rcl
fistp
inc
sub
(bad)
cld
retf
jl
or
fistp
jl
mov
xchg
pop
(bad)
(bad)
mov
imul
call
inc
add
jecxz
mov
fistp
mov
mov
scas
mov
ficom
xor
inc
call
fidiv
cs
daa
xor
xchg
mov
sbb
cdq
jmp
fisttp
loope
shl
sbb
xchg
lahf
cld
jb
push
pushf
or
mov
fsubr
sub
mov
(bad)
jae
xchg
fist
iret
adc
add
inc
sti
mov
stc
das
nop
mov
fnsave
dec
int
fist
addr16
(bad)
ror
sbb
rol
fwait
das
xor
int3
inc
pop
fild
leave
jns
add
lods
inc
mov
fist
lds
into
lahf
enter
push
out
(bad)
repnz
mov
mov
sti
or
push
rcr
mov
mov
and
out
push
dec
inc
js
aas
fimul
ss
xchg
inc
test
pop
jp
pop
ins
shl
xchg
and
in
icebp
inc
mov
add
mov
pusha
inc
ror
(bad)
fcomp
mov
outs
nop
fs
inc
cli
cmps
dec
inc
mov
adc
mul
test
mov
push
cli
mov
mov
imul
xor
jne
inc
mov
scas
popf
fucom
and
popa
icebp
add
in
pusha
fisub
mov
lds
pop
xchg
in
mov
ss
add
mul
sbb
je
data16
or
dec
popf
das
add
fucomp
fadd
mov
add
cmps
xchg
pop
jno
push
leave
icebp
mov
cs
fcom
xchg
ret
adc
leave
mov
mov
mov
mov
add
mov
fsub
shl
mov
or
jo
mov
inc
pop
fmul
xor
lahf
mov
jbe
cmp
or
hlt
mov
scas
sub
jae
inc
push
out
es
adc
stos
mov
push
inc
push
adc
mov
cmps
push
push
bound
adc
out
push
(bad)
(bad)
xor
dec
push
pusha
xchg
out
inc
mov
push
jo
arpl
adc
jbe
rcr
inc
pop
push
add
xlat
arpl
nop
shl
adc
add
fs
mul
inc
or
jp
push
push
popa
cmps
dec
push
and
mov
loopne
push
and
inc
adc
push
pop
push
cmps
cmps
xor
push
data16
jbe
jae
pop
xor
xchg
mov
ret
inc
xor
xchg
adc
aas
cmp
fisttp
fs
jne
and
jg
adc
rdtsc
inc
pop
adc
mov
xchg
and
jg
push
ss
bound
cmp
and
shr
daa
jb
xor
lods
icebp
xchg
pop
xchg
add
cmp
mov
jae
inc
(bad)
jl
push
sbb
add
cmp
mov
push
jmp
xlat
imul
loope
retf
mov
(bad)
jge
sti
cli
ficomp
loop
pop
call
inc
mov
dec
cmps
jmp
sahf
std
in
jecxz
xor
int
ret
xor
xchg
addr16
push
xchg
push
mov
retf
xchg
sbb
xchg
adc
adc
mov
pop
test
cld
push
call
pop
xchg
xor
stos
add
add
inc
sahf
cmp
jb
stos
inc
popf
xor
pop
xor
lahf
mov
inc
xchg
cmp
xchg
fidiv
mov
dec
xchg
add
push
fnsave
sti
lds
call
mov
inc
jns
mov
cmps
pop
pop
scas
icebp
mov
mov
push
mov
pop
outs
cmp
ffreep
xchg
bound
push
add
ror
icebp
inc
dec
imul
fdiv
xchg
out
cmps
add
test
jp
mov
test
sbb
popf
out
add
fistp
lea
push
outs
ret
int3
adc
jmp
(bad)
fs
ficom
cmp
jmp
fdivr
shr
popf
mov
jb
mov
adc
minps
adc
cdq
xchg
(bad)
mov
cmp
mov
inc
xor
mov
sar
dec
cmp
pop
lahf
pusha
movs
mov
inc
mov
fisubr
xchg
addr16
push
pushf
test
imul
sbb
pop
push
push
xor
stos
pop
or
xor
dec
push
pushf
push
cli
pop
add
call
popa
jmp
dec
or
nop
scas
fstp
jl
mov
dec
dec
sbb
retf
inc
test
das
mov
push
shl
icebp
out
push
mov
call
in
mov
loop
cmp
xor
enter
aad
shl
mov
dec
sti
inc
push
icebp
mov
repz
das
shl
mov
sbb
mov
test
jecxz
jns
mov
sahf
int
inc
aad
sbb
jl
arpl
sbb
inc
sbb
call
mov
inc
sbb
mov
jbe
sahf
sub
cmp
mov
js
jl
push
push
push
xor
add
test
adc
cmp
pop
mov
xchg
xor
adc
xor
pop
mov
mov
cmp
adc
ss
xor
push
add
nop
ds
movs
xchg
add
add
add
mov
xor
or
mov
mov
pop
xor
adc
xor
xchg
push
aas
or
or
or
mov
xchg
ss
push
xor
push
add
add
cmp
pop
mov
mov
cmp
sbb
cmp
pop
mov
mov
pop
xor
adc
test
adc
add
add
add
mov
xchg
xor
sbb
lea
mov
cmp
sbb
add
push
mov
adc
xor
adc
xor
push
xor
push
add
add
cmp
pop
pop
pop
lds
xchg
test
mov
hlt
push
jmp
sahf
inc
pop
pop
je
nop
cmp
fistp
add
jmp
lods
out
ret
mov
pop
jnp
cmp
push
stc
add
aas
iret
cmp
add
mov
fs
xor
ins
inc
push
jge
inc
cmp
or
adc
add
popa
aaa
pop
jne
xchg
iret
pop
imul
sub
and
jl
in
jp
movs
sub
inc
or
sub
mov
stc
out
adc
(bad)
xor
cmp
in
push
scas
jmp
ins
ins
les
pop
leave
xchg
out
mov
or
scas
movs
cmp
mov
xor
aad
scas
cs
loopne
push
ins
sbb
int
scas
mov
mov
pop
xchg
jl
mov
iret
shr
push
fsubr
jge
pop
pushf
inc
and
mov
add
out
faddp
ficomp
mov
cmc
icebp
in
pop
jo
xchg
mov
lahf
mov
out
jmp
push
out
iret
mov
test
pop
mov
adc
popf
xchg
out
pop
popf
out
mov
(bad)
std
test
enter
dec
scas
lods
push
pop
clc
dec
lods
or
in
fdiv
inc
cmps
repnz
je
retf
mov
sti
les
dec
aas
test
push
xchg
lods
mov
jge
arpl
popa
movs
lahf
or
leave
(bad)
daa
call
or
mov
push
mov
sbb
dec
dec
sbb
sar
mov
push
mov
dec
cmp
mov
pop
cwde
test
cmp
cmp
call
cmc
add
dec
dec
mov
pop
sub
inc
sub
jno
cdq
push
(bad)
cmc
mov
scas
in
cmc
sub
repz
clc
ror
lds
dec
fwait
push
pop
dec
pop
outs
popf
xchg
pop
lock
outs
add
movs
mov
ss
jne
xchg
push
movs
lock
mov
sbb
into
adc
lock
sub
sahf
mov
aas
xchg
test
jg
mov
gs
pop
fwait
addr16
ffreep
and
aad
jle
sbb
xchg
xor
pop
out
clc
loopne
and
int3
pushf
inc
ja
pusha
xchg
dec
jno
adc
xor
fbld
and
fyl2x
or
dec
call
mov
call
clc
leave
cmp
inc
fild
std
retf
jl
cmc
jb
mov
pop
(bad)
cli
inc
enter
mov
or
pop
push
(bad)
std
jo
nop
jl
fdivr
popf
ret
int
andps
lock
mov
inc
lahf
jecxz
popa
sub
add
dec
mov
mov
or
ins
fidivr
cmp
mov
pop
jecxz
jo
mov
xor
push
setp
xchg
pop
xchg
sbb
lahf
pop
or
fwait
sahf
sub
xor
mov
(bad)
popa
dec
push
jne
mov
mov
pop
push
pop
rcl
ret
xchg
xchg
mov
in
scas
out
xor
popf
rcr
mul
mov
lahf
push
dec
mov
fnstenv
into
iret
and
les
retf
iret
lods
cld
and
dec
arpl
pop
stos
scas
or
xchg
sbb
lock
scas
add
test
ja
push
fdiv
mov
adc
sub
and
rcr
mov
add
cmp
shr
mov
jne
push
xor
and
push
mov
mov
mov
jge
out
mov
imul
cmp
dec
xchg
loopne
jo
hlt
div
fs
sub
xor
dec
ja
retf
and
test
xor
(bad)
jae
push
push
loope
loopne
loopne
sub
aam
mov
xchg
int
mov
movs
aad
dec
add
loope
adc
in
mov
adc
fstp
iret
arpl
cmc
bound
addr16
cmp
dec
xchg
mov
jo
mov
pop
jbe
sbb
inc
sub
xchg
cmps
int3
cdq
test
adc
push
lds
add
dec
jne
inc
mov
mov
push
aas
cld
out
test
inc
xchg
stos
sub
mov
lock
mov
neg
aas
in
add
sbb
or
adc
aas
loope
stos
lahf
cli
add
rcl
fcomi
test
movs
hlt
mov
addr16
out
clc
pop
inc
jbe
test
push
cmps
and
inc
test
adc
sub
dec
inc
inc
push
mov
mov
add
sbb
popa
add
add
add
add
add
add
add
and
add
add
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
jae
je
popa
add
add
jb
add
inc
add
dec
add
add
jae
jne
ins
add
add
add
push
add
push
add
jb
add
add
outs
add
je
popa
add
add
jb
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
sub
sub
add
inc
add
inc
add
inc
add
add
add
add
dec
add
dec
add
add
add
add
add
inc
add
dec
add
dec
add
add
inc
add
push
add
push
add
add
add
add
dec
add
add
inc
add
add
add
dec
add
add
dec
add
add
jne
je
add
add
add
add
mov
addr16
add
outs
inc
add
fs
add
jno
add
jno
add
inc
add
jae
add
inc
add
inc
add
addr16
add
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
jbe
ins
add
add
add
add
add
add
add
add
and
add
and
add
and
add
add
add
inc
add
add
pop
add
add
inc
add
bound
add
add
or
add
add
add
and
add
and
add
cmp
add
jns
add
add
je
jb
jne
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
je
push
add
popa
add
imul
add
add
add
jae
and
outs
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
outs
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
jo
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
add
imul
outs
add
ins
add
jae
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
jp
add
add
inc
add
imul
popa
add
imul
add
add
add
add
imul
inc
add
imul
jae
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
jb
jb
add
je
inc
add
ins
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
inc
add
inc
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
sub
and
jo
outs
add
imul
outs
add
cmp
and
and
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
jb
outs
add
inc
add
ins
add
inc
add
imul
add
add
add
add
add
add
add
jb
outs
add
and
je
push
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
jb
add
add
add
add
add
add
js
jo
add
je
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jb
imul
push
add
inc
add
ins
add
add
add
add
inc
add
imul
add
add
add
add
jb
imul
and
je
outs
add
add
imul
and
and
add
add
popa
add
add
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
ja
jb
imul
add
cmp
and
and
add
add
js
jo
add
je
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
add
outs
add
jo
jb
add
jae
and
add
je
popa
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
outs
add
jo
jb
add
jae
and
je
push
add
outs
add
jne
je
and
data16
ins
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
ins
add
jae
add
add
popa
add
imul
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
ins
add
jae
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
push
add
add
je
add
add
dec
add
and
push
add
jae
imul
outs
add
and
push
add
jae
outs
add
jb
arpl
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
add
add
inc
add
imul
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
add
add
js
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
add
outs
add
jo
jb
add
jae
add
add
add
jns
je
add
and
outs
add
and
and
add
add
inc
add
imul
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
inc
add
ins
add
add
push
add
add
and
inc
add
outs
add
add
add
add
add
and
add
je
jb
popa
add
je
imul
and
outs
add
add
popa
add
add
outs
add
add
add
add
add
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
js
je
jb
popa
add
je
and
jo
jb
outs
add
add
ins
add
and
popa
add
add
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
js
je
jb
popa
add
je
add
add
add
add
add
je
je
add
jo
je
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
and
add
push
add
and
imul
and
add
add
add
jns
je
add
and
imul
jae
imul
add
add
add
data16
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
and
imul
je
push
add
add
popa
add
imul
add
add
add
jne
je
jo
jne
je
inc
add
ins
add
add
add
data16
ins
add
outs
add
ins
add
add
add
and
add
add
imul
outs
add
ins
add
and
arpl
popa
add
and
outs
add
je
and
bound
add
add
jne
ins
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
cmp
and
dec
add
popa
add
add
and
popa
add
add
add
popa
add
add
outs
add
add
add
add
add
outs
add
add
imul
and
daa
add
add
add
jae
and
outs
add
je
and
popa
add
add
popa
add
add
add
add
add
jb
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
and
xor
and
cmp
and
and
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jo
add
add
add
popa
add
imul
add
add
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jb
add
je
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
jb
add
add
add
jb
imul
add
add
jb
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
add
jb
imul
and
ins
add
add
sub
and
data16
ins
add
and
imul
ins
add
jb
imul
add
add
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jo
add
push
add
arpl
imul
add
add
add
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
sub
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
imul
jb
add
add
add
add
add
outs
add
add
add
jp
imul
popa
add
imul
add
add
add
add
inc
add
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
jae
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
add
add
add
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
and
add
add
popa
add
add
add
outs
add
and
jb
add
add
outs
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
add
outs
add
and
and
add
add
add
add
and
jo
popa
add
imul
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
ins
add
outs
add
ins
add
and
and
add
ins
add
add
add
and
add
imul
jae
and
imul
jo
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
jb
popa
add
add
imul
add
inc
add
imul
add
add
add
add
add
add
add
and
inc
add
inc
add
add
popa
add
imul
add
and
popa
add
je
add
and
add
popa
add
imul
and
and
add
add
popa
add
imul
add
add
add
outs
add
je
and
ins
add
imul
add
add
add
imul
and
bound
add
add
outs
add
jb
jne
jo
je
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
cmp
and
push
add
ins
add
jbe
imul
and
daa
add
add
add
jb
outs
add
and
je
push
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
add
push
add
add
add
add
push
add
data16
add
jb
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
add
push
add
outs
add
jb
popa
add
inc
add
ins
add
jae
inc
add
jb
add
inc
add
ins
add
outs
add
inc
add
ins
add
jae
inc
add
jb
add
add
sub
add
inc
add
add
push
add
pop
add
push
add
inc
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
add
add
inc
add
dec
add
push
add
inc
add
pop
add
add
inc
add
add
inc
add
add
inc
add
dec
add
push
add
inc
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
push
add
push
add
push
add
add
dec
add
dec
add
dec
add
dec
add
push
add
inc
add
add
add
dec
add
dec
add
inc
add
add
dec
add
add
inc
add
add
dec
add
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
push
add
dec
add
add
add
dec
add
dec
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
dec
add
push
add
push
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
cmp
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
cmp
add
add
push
add
inc
add
dec
add
add
dec
add
push
add
inc
add
add
inc
add
add
add
push
add
dec
add
push
add
dec
add
inc
add
dec
add
push
add
add
dec
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
push
add
inc
add
push
add
add
add
dec
add
push
add
add
pop
add
add
dec
add
dec
add
inc
add
add
dec
add
push
add
push
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
push
add
push
add
add
dec
add
add
add
push
add
push
add
add
add
add
inc
add
add
push
add
inc
add
push
add
add
push
add
dec
add
push
add
dec
add
inc
add
add
push
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
add
dec
add
add
inc
add
push
add
inc
add
add
pop
add
add
dec
add
dec
add
dec
add
push
add
add
push
add
push
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
dec
add
pop
add
push
add
push
add
add
dec
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
push
add
add
dec
add
push
add
dec
add
inc
add
add
inc
add
add
push
add
add
inc
add
dec
add
inc
add
add
add
inc
add
push
add
push
add
push
add
add
inc
add
push
add
push
add
add
add
dec
add
push
add
inc
add
dec
add
add
pop
add
push
add
dec
add
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
push
add
push
add
add
dec
add
add
inc
add
push
add
push
add
dec
add
push
add
add
inc
add
inc
add
add
add
add
inc
add
inc
add
push
add
add
add
push
add
push
add
add
add
inc
add
push
add
push
add
push
add
push
add
add
inc
add
push
add
dec
add
dec
add
add
add
push
add
dec
add
add
push
add
add
add
dec
add
push
add
dec
add
add
add
add
push
add
inc
add
inc
add
push
add
add
add
dec
add
add
dec
add
push
add
add
add
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
add
add
push
add
push
add
add
xor
xor
add
add
push
add
push
add
add
add
push
add
dec
add
add
add
add
and
add
add
add
add
and
add
add
and
or
add
add
and
or
and
add
inc
add
outs
add
ins
add
outs
add
add
outs
add
cmp
cmp
push
add
jb
jae
add
outs
add
ins
add
outs
add
add
outs
add
and
inc
add
data16
jne
ins
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
jne
jae
je
outs
add
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
add
add
cmp
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
dec
add
je
add
outs
add
ins
add
add
add
ins
add
add
add
add
add
add
outs
add
and
and
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
daa
add
jnp
daa
add
add
outs
add
outs
add
add
add
jne
je
and
outs
add
and
add
add
outs
add
and
daa
add
daa
add
add
outs
add
outs
add
add
add
add
outs
add
add
js
jo
popa
add
jae
imul
and
data16
jb
and
daa
add
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
inc
add
arpl
add
add
add
add
popa
add
imul
ins
add
add
jne
ins
add
add
and
outs
add
and
jbe
popa
add
imul
ins
add
and
add
jo
popa
add
jae
imul
jae
sub
and
and
add
add
add
add
add
outs
add
je
popa
add
outs
add
and
popa
add
add
jns
arpl
ins
add
arpl
and
jbe
popa
add
imul
ins
add
add
add
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
push
add
jo
ins
add
arpl
add
add
add
add
add
imul
and
daa
add
add
add
add
jnp
jge
add
and
jnp
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
dec
add
imul
outs
add
ins
add
add
je
jb
imul
and
daa
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
push
add
je
dec
add
cmp
and
push
add
je
je
imul
and
and
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
inc
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
add
imul
and
imul
and
data16
ins
add
and
and
add
dec
add
imul
ins
add
cmp
and
and
add
jae
and
popa
add
and
imul
popa
add
add
add
imul
add
inc
add
outs
add
inc
add
ins
add
cmp
and
dec
add
add
add
add
outs
add
and
data16
ins
add
and
and
add
add
add
add
add
add
outs
add
add
add
add
jb
imul
bound
ins
add
add
add
dec
add
dec
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
arpl
je
imul
and
and
add
popa
add
and
imul
add
jae
and
and
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
dec
add
jns
jae
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
je
and
and
add
add
add
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
and
add
add
add
jae
and
outs
add
je
and
add
imul
inc
add
dec
add
push
add
push
add
push
add
dec
add
push
add
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
inc
add
push
add
inc
add
dec
add
dec
add
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
push
add
ins
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
je
and
and
add
add
add
add
add
dec
add
imul
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
jb
jb
outs
add
and
and
add
dec
add
imul
ins
add
cmp
cmp
push
add
je
push
add
ins
add
add
add
add
add
add
add
outs
add
add
jae
and
xor
xor
xor
xor
and
push
add
xor
and
jae
jns
jae
je
add
and
imul
outs
add
je
and
arpl
outs
add
jo
popa
add
add
ins
add
and
ja
imul
and
jbe
arpl
jb
add
add
je
pop
add
cmp
add
add
js
add
add
add
inc
add
add
add
add
add
add
jne
jae
je
and
bound
add
add
outs
add
je
popa
add
add
add
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
dec
add
push
add
jae
je
add
dec
add
push
add
je
push
add
add
add
add
je
add
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
dec
add
inc
add
outs
jbe
ins
imul
gs
push
and
gs
je
jb
ins
popa
jo
jae
je
push
and
and
add
dec
add
inc
add
imul
pop
add
add
add
push
add
outs
add
add
xor
xor
add
push
add
outs
add
add
add
add
imul
xor
xor
cmp
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
imul
popa
add
add
add
push
add
outs
add
imul
popa
add
xor
xor
add
push
add
outs
add
imul
popa
add
add
add
imul
xor
xor
xor
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
push
add
add
add
add
push
add
outs
add
push
add
xor
xor
add
add
push
add
outs
add
push
add
add
imul
xor
xor
xor
add
and
add
add
jae
push
add
ja
add
push
add
outs
add
add
jae
and
data16
imul
add
and
add
jb
outs
add
and
and
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
inc
add
jns
jae
je
add
dec
add
data16
add
add
imul
gs
xor
add
add
dec
jae
outs
ja
xor
jb
arpl
jae
add
add
add
jb
jae
imul
inc
add
and
data16
imul
add
add
outs
add
imul
and
inc
add
jns
jae
je
add
dec
add
data16
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
ins
add
popa
add
add
add
ins
add
add
outs
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
add
add
add
ins
add
add
outs
add
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
ins
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
dec
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
add
add
add
jb
outs
add
and
and
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
popa
add
add
outs
add
popa
add
add
add
inc
add
add
je
add
jo
add
popa
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
je
dec
add
add
ins
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
inc
add
aas
inc
add
sbb
dec
add
pop
inc
add
inc
add
sbb
push
add
ins
add
jae
push
add
push
add
add
add
push
add
ja
popa
add
add
add
add
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
and
jo
popa
add
imul
add
add
add
imul
and
ja
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
je
and
ins
add
arpl
popa
add
add
outs
add
add
add
add
and
je
push
add
add
popa
add
and
arpl
popa
add
jae
add
add
jb
outs
add
ins
add
ins
add
inc
add
add
popa
add
add
jb
ins
add
add
add
popa
add
add
and
daa
add
add
and
ja
popa
add
and
add
je
add
je
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
add
jne
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
jae
and
ins
add
jae
jae
imul
and
popa
add
add
popa
add
add
add
add
inc
add
and
imul
popa
add
add
add
add
jo
outs
add
popa
add
jns
and
add
jb
add
je
outs
add
jns
and
ja
popa
add
and
add
je
add
je
add
add
add
popa
add
add
add
add
add
add
add
add
js
imul
jae
cmp
and
and
add
add
jae
inc
add
ins
add
cmp
and
and
add
add
jae
push
add
popa
add
add
ins
add
cmp
and
and
add
outs
add
add
outs
add
popa
add
add
add
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
and
ja
popa
add
and
jae
jo
add
imul
add
add
outs
add
add
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
daa
add
add
add
add
add
ins
add
dec
add
jae
je
popa
add
add
je
imul
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
outs
add
add
imul
jae
add
add
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
add
imul
jae
imul
cmp
and
and
add
add
and
dec
add
or
inc
pop
add
and
arpl
outs
add
je
popa
add
outs
add
cmp
or
add
inc
add
outs
add
jb
popa
add
add
add
add
add
je
and
outs
add
and
data16
ins
add
jae
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
jbe
add
jb
imul
jae
push
add
je
push
add
data16
add
inc
add
add
add
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jbe
add
jb
imul
jae
and
ja
imul
and
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
popa
add
add
and
outs
add
add
jb
imul
jae
cmp
and
daa
add
add
add
add
popa
add
imul
add
add
outs
add
popa
add
add
add
jne
je
jo
jne
je
and
data16
ins
add
and
daa
add
add
add
add
add
add
add
js
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
dec
add
ins
add
and
add
jb
cmp
add
add
jb
outs
add
add
je
dec
add
ins
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
push
add
jb
jae
imul
and
add
jb
cmp
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
outs
add
jns
and
je
push
add
popa
add
add
add
imul
and
je
outs
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
je
push
add
popa
add
add
add
outs
add
add
add
je
imul
je
imul
and
data16
ins
add
jae
and
popa
add
add
add
add
and
jae
popa
add
add
add
add
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
jae
add
add
imul
cmp
and
and
add
add
jne
je
jo
jne
je
and
inc
add
ins
add
cmp
and
and
add
popa
add
imul
add
add
outs
add
bound
ins
add
and
je
outs
add
add
imul
and
data16
ins
add
and
and
add
add
popa
add
add
add
add
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
popa
add
imul
add
add
imul
and
and
add
and
data16
ins
add
outs
add
ins
add
and
arpl
outs
add
data16
add
je
jae
and
ja
imul
and
popa
add
outs
add
add
jb
and
data16
ins
add
and
imul
je
push
add
popa
add
imul
add
add
and
popa
add
add
add
popa
add
and
outs
add
je
and
jo
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
push
add
arpl
imul
add
add
add
add
add
add
add
jo
add
imul
and
outs
add
je
jo
jne
je
and
jo
popa
add
imul
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
outs
add
popa
add
imul
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
outs
add
jns
and
outs
add
and
jo
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
imul
and
jo
popa
add
imul
add
add
add
outs
add
je
add
je
jae
add
add
add
outs
add
popa
add
add
add
js
je
jb
popa
add
je
imul
and
add
jb
add
je
outs
add
jns
and
daa
add
add
add
popa
add
and
jo
jb
outs
add
imul
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
imul
add
outs
add
push
add
je
push
add
je
ins
add
add
add
and
add
add
add
add
imul
add
outs
add
push
add
je
inc
add
jb
add
je
imul
add
add
push
add
jae
imul
add
outs
add
push
add
je
dec
add
js
add
add
push
add
jae
imul
add
outs
add
dec
add
arpl
jb
add
add
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
add
add
outs
add
popa
add
add
add
add
ins
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
outs
add
and
add
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
and
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
add
and
add
je
jb
popa
add
je
imul
and
add
imul
and
daa
add
add
add
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
imul
jb
jns
and
pop
add
dec
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
add
add
bound
outs
add
je
add
add
inc
add
dec
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
outs
add
je
and
data16
ins
add
pop
add
add
add
add
ins
add
add
outs
add
je
add
add
add
add
data16
jb
arpl
add
jae
imul
outs
add
add
add
add
add
ins
add
popa
add
jae
dec
add
jae
je
popa
add
add
ins
add
jbe
popa
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
ins
add
arpl
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
outs
add
je
popa
add
add
jb
add
push
add
data16
add
jb
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
je
and
and
add
jae
and
add
outs
add
add
jae
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
add
add
add
jne
outs
add
je
imul
and
pop
add
add
add
dec
jae
outs
jb
dec
outs
push
jae
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
add
add
outs
add
and
data16
outs
add
je
imul
and
pop
add
add
add
add
dec
add
jae
push
add
jb
je
dec
add
push
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
je
je
add
jo
je
and
je
outs
add
add
add
add
add
add
jb
popa
add
jns
and
pop
add
add
add
dec
add
dec
add
push
add
push
add
dec
add
add
add
add
add
add
and
data16
jb
jae
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
outs
add
ins
add
add
add
add
imul
outs
add
jb
add
je
and
outs
add
ins
add
add
and
outs
add
and
jo
popa
add
popa
add
add
add
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
outs
add
je
add
jae
add
add
outs
add
jae
pop
add
js
imul
add
add
arpl
outs
add
data16
add
add
ins
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
push
add
je
inc
add
jb
jb
add
je
inc
add
jb
add
je
outs
add
jns
sub
sub
and
data16
imul
add
add
imul
and
add
jb
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
add
add
add
and
add
dec
add
dec
add
inc
add
push
add
add
add
add
ja
popa
add
add
add
outs
add
je
add
add
popa
add
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
popa
add
arpl
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
outs
add
je
imul
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
dec
add
popa
add
add
add
outs
add
je
popa
add
add
jb
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
inc
add
and
imul
outs
add
and
ins
add
outs
add
add
and
jae
jne
jo
jo
outs
add
je
add
add
outs
add
add
add
jae
and
jbe
add
jae
imul
and
outs
add
and
push
add
ja
popa
add
add
add
ins
add
jns
add
add
add
add
add
jae
add
add
ins
add
jns
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
outs
add
outs
add
add
add
and
pop
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
jns
add
add
ins
imul
je
outs
and
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
jae
inc
add
cmp
add
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
add
add
add
add
outs
add
jae
inc
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
outs
add
je
imul
imul
push
add
arpl
imul
add
add
popa
add
popa
add
add
cmp
and
push
add
popa
add
arpl
push
add
add
and
pop
add
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
add
outs
add
add
add
outs
add
imul
outs
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
inc
add
imul
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
imul
and
je
push
add
add
and
add
jbe
imul
outs
add
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
imul
add
jb
popa
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
outs
add
add
add
add
and
ins
add
popa
add
add
outs
add
imul
outs
add
add
je
add
pop
add
dec
add
pop
add
add
add
pop
add
dec
add
pop
add
and
cmp
add
outs
add
je
imul
sub
add
add
add
add
add
add
add
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
pop
add
push
add
pop
add
add
and
jne
outs
add
popa
add
imul
add
jb
add
add
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
dec
add
add
add
data16
add
add
and
ins
add
popa
add
add
jb
add
ins
add
outs
add
add
add
jae
and
add
jo
je
jns
and
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
daa
add
add
add
jae
and
popa
add
and
jne
outs
add
jne
jo
jo
outs
add
je
add
add
add
imul
jb
jns
and
push
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
add
jb
outs
add
and
je
jb
jns
imul
and
je
outs
add
add
add
add
add
add
imul
jb
jns
and
jbe
popa
add
add
and
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
jb
add
imul
jb
jns
and
jbe
popa
add
add
and
daa
add
add
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
dec
add
push
add
add
add
dec
add
push
add
add
add
dec
add
add
add
add
outs
add
outs
add
ja
outs
add
add
jb
jb
outs
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jb
outs
add
cmp
and
inc
add
jb
outs
add
and
dec
add
jae
jae
popa
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
outs
add
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
add
add
add
outs
add
add
je
imul
and
outs
add
je
and
popa
add
add
outs
add
ins
add
popa
add
and
jbe
popa
add
add
add
add
jb
outs
add
dec
add
add
outs
add
add
outs
add
add
outs
add
add
add
and
jbe
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
cmp
and
inc
add
jae
add
je
and
data16
imul
add
add
add
add
add
and
and
push
add
jae
je
outs
add
add
add
add
je
jne
jb
add
and
add
and
add
add
dec
add
jae
je
popa
add
add
add
add
bound
push
add
ins
add
arpl
je
add
add
add
add
add
je
jne
jb
add
je
push
add
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
je
popa
add
ins
add
add
add
je
push
add
imul
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
add
sub
sub
sub
and
inc
add
add
jne
je
imul
and
and
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
ins
add
jbe
add
ins
add
add
add
add
add
je
je
imul
jae
add
and
and
push
add
jb
jae
imul
and
inc
add
popa
add
add
add
and
add
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jo
popa
add
add
popa
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
outs
add
je
imul
push
add
je
push
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jbe
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
cmp
push
add
jbe
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
and
popa
add
add
ins
add
outs
add
add
add
add
popa
add
je
imul
and
outs
add
and
and
add
outs
add
and
and
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
imul
outs
add
popa
add
add
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
imul
and
jb
add
add
outs
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
popa
add
ins
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
popa
add
ins
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
add
outs
add
and
outs
add
add
popa
add
add
outs
add
add
add
add
push
add
add
outs
add
jb
imul
ins
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
dec
add
imul
popa
add
add
add
add
jns
jae
je
add
and
jae
push
add
add
outs
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
push
add
jo
jo
jb
add
jae
imul
and
popa
add
je
outs
add
popa
add
add
and
jb
add
outs
add
je
sub
and
jo
ins
add
popa
add
add
add
add
outs
add
je
and
je
push
add
popa
add
push
add
and
ins
add
outs
add
popa
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
inc
add
outs
add
je
imul
and
je
push
add
outs
add
je
popa
add
add
jb
and
add
add
add
add
add
add
jne
imul
add
add
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
outs
add
add
add
add
add
dec
add
popa
add
add
add
jne
outs
add
add
outs
add
je
popa
add
add
jb
and
inc
add
je
add
and
push
add
bound
outs
add
je
add
and
and
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
and
add
add
add
add
add
add
outs
add
add
imul
add
add
jo
add
popa
add
add
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
jb
popa
add
jo
add
add
add
and
and
inc
add
ins
add
ins
add
je
add
add
outs
add
add
popa
add
imul
add
add
add
add
outs
add
add
outs
add
and
inc
add
arpl
imul
add
add
jae
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
arpl
popa
add
add
outs
add
and
push
add
add
je
push
add
jno
jne
add
arpl
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
je
imul
and
push
add
add
imul
bound
push
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
add
popa
add
add
add
add
add
push
add
dec
add
and
bound
outs
add
add
add
add
and
jo
popa
add
add
add
outs
add
add
imul
and
jo
popa
add
popa
add
add
add
jae
and
ja
add
add
add
ins
add
je
jns
add
add
je
imul
add
add
imul
add
add
jo
popa
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jae
and
outs
add
je
and
popa
add
add
jne
jo
jo
jo
outs
add
je
add
add
add
popa
add
add
and
add
data16
jne
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
jb
imul
jb
jns
and
dec
add
outs
add
jne
popa
add
add
add
popa
add
add
and
data16
jne
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
js
popa
add
je
and
ins
add
je
arpl
push
add
outs
add
and
push
add
jo
jo
outs
add
je
add
add
add
popa
add
add
sub
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
outs
add
ins
add
jae
push
add
outs
add
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
popa
add
popa
add
add
add
add
add
add
popa
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
inc
add
outs
add
add
ins
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
imul
add
dec
add
popa
add
jne
outs
add
je
imul
jae
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
imul
add
add
add
and
dec
add
popa
add
add
jne
outs
add
je
imul
jae
add
add
add
je
jb
popa
add
je
imul
pop
add
add
add
add
xor
add
popa
add
je
imul
add
add
ins
add
imul
add
popa
add
arpl
add
add
popa
add
je
dec
add
dec
add
ins
add
add
jbe
add
je
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
push
add
inc
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
popa
add
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
add
add
push
add
outs
add
je
imul
push
add
je
push
add
js
jo
popa
add
add
popa
add
add
add
add
add
add
bound
outs
add
je
inc
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
outs
add
add
ins
add
add
add
add
add
je
je
imul
jae
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
jae
je
popa
add
add
add
jb
outs
add
add
je
jae
add
add
inc
add
jae
add
je
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
imul
push
add
add
dec
add
inc
add
add
outs
add
add
dec
add
add
jne
add
arpl
add
add
add
imul
push
add
add
add
push
add
outs
add
push
add
add
add
inc
add
jae
popa
add
ins
add
push
add
add
push
add
add
je
push
add
bound
outs
add
je
add
push
add
bound
outs
add
je
inc
add
add
imul
add
imul
inc
add
imul
jae
add
add
push
add
jo
popa
add
imul
add
arpl
imul
add
add
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
push
add
add
js
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
add
dec
add
add
add
popa
add
outs
add
outs
add
add
inc
add
jb
outs
add
add
inc
add
add
push
add
add
add
add
add
add
imul
jb
jns
add
add
inc
add
ins
add
je
add
add
add
outs
add
add
push
add
jbe
add
add
add
outs
add
add
dec
add
jae
push
add
je
je
imul
add
add
inc
add
je
push
add
je
je
imul
inc
add
add
add
add
je
je
imul
add
add
inc
add
dec
add
add
popa
add
add
outs
add
add
outs
add
ins
add
add
add
push
add
ins
add
popa
add
add
add
add
add
add
add
add
ins
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
jb
imul
and
arpl
outs
add
jo
ins
add
je
add
and
jae
je
popa
add
je
imul
and
arpl
ins
add
popa
add
sub
add
add
add
outs
add
je
jae
je
jb
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
je
jae
je
jb
popa
add
and
je
push
add
add
and
jae
arpl
jb
imul
add
inc
add
ins
add
push
add
jb
jae
imul
add
inc
push
push
dec
push
cmp
push
outs
popa
bound
je
and
fs
je
and
jae
jne
arpl
and
jae
jb
jno
imul
and
je
jae
popa
outs
and
ins
jns
and
je
jae
popa
jb
and
popa
imul
inc
js
outs
and
and
jb
gs
outs
outs
imul
popa
and
outs
jb
and
and
je
jo
jb
or
add
add
add
outs
add
inc
add
ins
add
dec
add
data16
pop
add
add
and
add
pop
add
add
add
add
jb
imul
push
jb
outs
jae
popa
je
outs
outs
add
add
and
add
add
add
add
add
add
add
add
outs
jbe
ins
imul
gs
imul
inc
dec
outs
je
jne
jo
jb
gs
js
gs
imul
gs
outs
jb
inc
js
gs
imul
inc
inc
js
gs
imul
dec
add
add
add
inc
add
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
ret
dec
add
inc
add
sbb
inc
add
inc
add
sbb
add
dec
add
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
push
les
test
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
inc
dec
ins
gs
js
gs
imul
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
sbb
fs
add
sbb
inc
add
sbb
push
sbb
clc
les
inc
sbb
inc
add
inc
add
dec
bound
arpl
ror
mov
dec
add
ror
movs
ror
mov
dec
add
dec
add
dec
add
dec
add
add
(bad)
inc
add
jb
push
js
gs
imul
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
loopne
dec
add
sbb
(bad)
and
push
sbb
inc
dec
popa
jo
je
imul
jb
outs
add
enter
push
das
inc
add
xor
inc
push
je
imul
add
inc
dec
add
add
(bad)
inc
add
add
add
add
dec
add
aaa
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
xchg
xor
mov
xor
inc
add
add
xor
add
xor
jns
inc
add
ss
add
xor
add
aaa
inc
add
(bad)
dec
add
ss
add
sbb
inc
add
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
arpl
je
outs
outs
and
outs
ja
and
and
je
jne
je
jb
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
gs
je
arpl
add
in
(bad)
dec
add
cmp
inc
add
dec
add
and
aaa
cmp
inc
add
cmp
inc
add
(bad)
dec
add
inc
inc
add
add
outs
inc
add
cmp
pop
cmp
inc
add
xchg
inc
add
cmp
inc
cmp
ins
cmp
push
inc
inc
add
and
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
dec
outs
je
data16
imul
add
jne
jae
add
xor
xor
add
add
add
add
imul
add
je
je
imul
jae
add
add
push
add
add
imul
push
add
add
jae
add
add
ror
movs
add
add
inc
add
add
add
add
add
add
add
inc
add
dec
dec
add
add
add
add
add
add
add
add
inc
loope
add
add
add
inc
add
add
add
(bad)
(bad)
call
loope
add
loope
add
add
repnz
add
add
add
add
loope
add
loope
add
add
add
inc
add
arpl
popa
je
inc
arpl
js
add
add
je
jbe
je
inc
arpl
js
add
ins
gs
jae
inc
arpl
js
add
inc
jb
popa
je
inc
arpl
js
add
add
inc
add
dec
add
dec
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
js
jo
ins
add
jb
add
add
dec
add
push
add
outs
add
add
outs
add
add
jbe
add
add
add
push
add
jae
je
jb
imul
push
add
outs
add
add
outs
add
add
add
outs
add
add
je
inc
add
jae
arpl
outs
add
outs
add
arpl
je
add
add
dec
add
push
add
arpl
add
je
inc
add
arpl
jae
dec
add
jae
je
outs
add
jns
add
dec
add
inc
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
add
add
jb
imul
add
add
outs
add
outs
add
add
add
add
add
jb
imul
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
outs
add
add
add
add
add
add
outs
add
ins
add
arpl
add
inc
add
jb
add
dec
add
inc
add
arpl
imul
add
je
je
outs
add
add
add
dec
add
inc
add
ins
add
dec
add
jne
add
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
cmp
add
das
or
inc
add
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
ror
ror
ror
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
ror
ror
ror
ror
ror
ror
ror
ror
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
ror
ror
ror
ror
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
ret
xor
dec
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
dec
add
dec
add
dec
add
dec
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
dec
add
ret
clc
ret
or
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
dec
add
add
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
lds
fadd
dec
add
lds
int3
lds
(bad)
lds
mov
lds
lods
lds
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
dec
add
(bad)
dec
add
dec
add
(bad)
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
dec
add
(bad)
dec
add
(bad)
dec
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
(bad)
dec
add
add
add
add
add
add
add
inc
mov
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
(bad)
dec
add
(bad)
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
