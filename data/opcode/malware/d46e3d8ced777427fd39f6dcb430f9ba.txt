push
icebp
pop
lods
arpl
pop
daa
das
xor
movs
jne
das
movs
gs
and
xor
in
addr16
lods
imul
daa
aas
jno
inc
rol
daa
das
xor
or
sbb
das
mov
inc
das
movs
inc
adc
pop
adc
cmp
adc
adc
das
movs
jns
movs
push
sbb
pushf
cmp
test
daa
das
xor
movs
jmp
inc
jns
repnz
scas
retf
jo
pop
sbb
pop
mov
outs
xor
push
daa
fnstenv
das
xor
push
retf
jb
in
cmps
aam
retf
daa
bound
jp
inc
sub
pop
daa
cmps
sub
xchg
ins
xor
sub
sbb
das
ds
fwait
das
xor
scas
push
xchg
bound
mov
test
fbld
cmp
out
and
xchg
sub
gs
xor
jns
xchg
dec
aas
mov
xchg
daa
mov
test
retf
movs
xor
lods
ins
xor
sbb
pusha
mov
stos
adc
sub
lahf
jae
aam
mov
sbb
das
push
xchg
and
xchg
jp
cmp
push
pop
dec
sub
iret
add
cmc
sbb
je
repnz
shl
outs
lods
sub
dec
test
mov
outs
lods
sbb
out
out
fisubr
mov
(bad)
mov
into
out
jmp
jae
call
xor
daa
das
xor
(bad)
mov
daa
das
mov
das
es
ins
push
inc
xor
and
sbb
inc
cmp
dec
push
xor
movs
jmp
adc
pop
mov
int3
or
dec
fcomp
and
pop
das
xor
aaa
lahf
jae
iret
or
daa
lods
cmc
sbb
daa
jb
inc
jl
fld
or
xchg
ins
xor
push
sub
repnz
mov
adc
iret
imul
daa
das
xor
jb
aam
fadd
test
aaa
outs
xor
cmps
adc
daa
das
xor
jo
push
icebp
ja
or
cmp
add
sbb
sbb
das
pop
cmp
push
xor
fcomp
sbb
add
adc
xor
inc
sbb
lods
cmc
add
out
push
fstp
push
pop
das
xor
in
xchg
sbb
das
xor
daa
jp
cld
lahf
aaa
jge
daa
(bad)
sahf
outs
daa
das
bound
nop
mov
pop
mov
pushf
xlat
pushf
iret
out
call
pop
sbb
pop
sbb
xor
cmps
inc
adc
pop
das
xor
daa
das
(bad)
(bad)
scas
stos
(bad)
movs
aam
ins
and
icebp
repnz
inc
xor
jg
adc
xor
jg
icebp
into
pop
xor
cmps
shr
daa
das
(bad)
and
sbb
fstp
dec
mov
mov
fistp
sbb
das
mov
sub
into
out
das
inc
sbb
out
jno
cmp
sbb
fcom
nop
mov
cmps
mul
xchg
fild
sub
jo
inc
out
in
fs
ret
dec
jo
fisubr
cs
mov
inc
dec
xor
stos
push
dec
stos
push
dec
dec
das
pop
es
and
jae
inc
xor
rol
pop
cmp
call
fisubr
xor
fld
push
out
fisub
fcomp
out
cmp
ins
cmp
out
aas
into
ins
fcmovnb
mul
das
mov
icebp
mov
fld
push
out
fimul
movs
push
leave
sbb
mov
daa
das
xor
cs
not
das
xor
out
outs
inc
out
in
fs
ret
adc
add
dec
xor
ror
mov
xchg
(bad)
popa
jno
das
xor
dec
das
into
ins
sub
inc
adc
jnp
sbb
cmps
not
rcr
sub
les
out
aaa
into
ins
xor
inc
add
aaa
rol
outs
dec
sbb
cmps
mul
push
rcr
pop
pop
das
xor
rcr
sub
les
sub
outs
ficom
scas
xlat
(bad)
(bad)
scas
push
nop
loopne
outs
shl
jp
cld
movs
ret
and
js
ins
sub
je
sar
scas
or
in
pause
jb
into
sbb
fwait
jae
movs
dec
lds
movs
dec
int
int3
inc
add
lods
push
nop
in
pause
jb
into
sbb
fwait
jae
push
rcr
pop
lods
push
sbb
movs
adc
xchg
xor
daa
push
inc
cmps
rcr
xor
repnz
aaa
shl
push
and
inc
sbb
push
repnz
(bad)
jl
cmps
je
scas
push
pop
scas
fidiv
and
push
call
int
bound
mov
pop
cmps
adc
sbb
or
mov
fcom
into
mov
js
push
in
mov
sbb
(bad)
or
das
bound
movs
inc
adc
mov
sbb
dec
pop
movs
mov
fcom
into
nop
in
pause
mov
into
out
shl
bound
mov
pop
cmps
adc
sbb
or
push
neg
les
rol
and
jb
mov
sbb
das
into
out
push
out
gs
mov
fcom
into
nop
mov
cmps
mov
fcom
into
out
adc
out
cmps
mov
fcom
into
nop
mov
cmps
jmp
sbb
das
into
out
mov
into
inc
jns
clc
fidiv
aam
retf
cmp
jo
ins
adc
push
push
mov
ror
nop
(bad)
xlat
mov
repnz
push
popa
daa
das
mov
push
inc
aas
pusha
nop
out
fcmovnu
(bad)
lock
push
sti
nop
div
(bad)
ja
stc
push
out
bound
neg
(bad)
shr
fstp
in
jno
shl
jp
cld
jbe
bound
movs
ins
adc
or
jle
(bad)
mov
dec
fistp
(bad)
repnz
(bad)
outs
daa
das
mov
push
inc
aas
pusha
nop
out
fcmovnu
(bad)
lock
push
sti
nop
div
(bad)
ja
stc
push
out
(bad)
sbb
sbb
dec
int
(bad)
xlat
mov
ins
xchg
ins
xor
aas
das
outs
inc
jl
repnz
scas
retf
jno
mov
or
sbb
jb
(bad)
mov
dec
fcmovnbe
xor
xchg
ins
xor
bound
cmps
and
mov
push
sub
(bad)
or
and
icebp
pop
int3
and
clc
push
rcr
daa
das
add
js
push
in
mov
dec
jo
inc
adc
cmps
leave
sub
cmps
mul
and
pop
daa
rol
jno
pop
daa
jns
pop
fcmovbe
into
nop
(bad)
mov
jno
into
jae
jno
add
fcom
popa
xchg
jp
jb
jno
shl
fcom
mov
add
cmp
(bad)
xlat
mov
shl
jp
cld
jbe
bound
movs
ins
adc
addr16
mov
(bad)
scas
push
nop
loopne
inc
adc
add
daa
cmps
div
inc
xor
xor
sbb
ins
das
inc
xor
(bad)
shr
das
mov
xor
shl
sbb
js
push
in
mov
dec
lods
pop
cmp
cmps
fsubr
and
mov
daa
pop
cmp
ja
sub
je
mov
sbb
das
movs
aaa
out
movs
sub
je
mov
pop
(bad)
xor
js
push
in
mov
dec
jno
mov
and
push
mov
fisub
xor
(bad)
xchg
imul
jg
or
ins
xor
scas
pop
xor
scas
in
mov
ficom
out
cmp
sub
cmp
push
jns
jno
into
jae
dec
sub
stos
push
dec
iret
jnp
sbb
cmps
repnz
es
es
ins
adc
rcr
into
jae
lods
sub
das
lods
aas
into
or
daa
cmps
repnz
enter
daa
push
icebp
adc
and
adc
pop
xor
out
ficom
scas
xlat
xor
scas
call
into
out
push
icebp
inc
jns
clc
fidiv
aam
or
xor
iret
fwait
inc
sbb
jl
dec
pushf
mov
jmp
cwde
sbb
pop
daa
ror
sbb
pop
ss
nop
popa
xchg
ins
xor
bound
ds
out
xor
lods
push
mov
cmps
in
mov
daa
das
mov
mov
pop
sub
ja
add
jno
mov
lods
jle
sbb
xor
shl
sbb
shl
push
and
xchg
xor
inc
ret
das
mov
out
(bad)
sbb
fcom
mov
sub
into
out
das
inc
adc
gs
xor
jnp
xor
cmps
fadd
adc
das
mov
xor
stos
push
dec
lods
push
xchg
sub
pop
shl
scas
push
call
xor
daa
lods
dec
in
and
inc
xlat
xor
daa
ror
sbb
pop
sbb
nop
mov
cmps
repnz
push
test
movs
je
push
sub
gs
inc
push
movs
or
gs
xor
scas
push
cwde
in
pop
sbb
inc
xor
ficomp
jle
jmp
jg
push
sbb
movs
je
scas
push
mov
stos
push
dec
stos
pop
rcr
sahf
sub
sbb
fcom
and
fdivr
nop
(bad)
mov
pushf
call
iret
out
in
mov
fld
inc
dec
dec
mov
pop
daa
inc
icebp
clc
gs
mov
and
cmp
daa
das
xor
push
sbb
fisubr
shl
mov
movs
or
mov
xor
daa
cmps
je
cs
inc
or
sub
gs
into
out
das
mov
(bad)
into
ins
sbb
xor
daa
das
inc
adc
jg
sub
jns
out
xlat
mov
loope
lods
sbb
fcom
mov
mov
xchg
jno
daa
das
(bad)
cli
scas
stos
in
fnop
mov
shl
jp
cld
movs
ret
and
js
aam
daa
add
daa
push
(bad)
nop
aam
(bad)
cmp
xor
bound
mov
pop
sub
pushf
mov
xor
cs
inc
or
daa
das
xor
shl
popa
scas
fistp
shr
or
mov
sbb
adc
ins
and
adc
inc
mov
add
call
mov
fbld
(bad)
xchg
pop
daa
das
fnstenv
ror
adc
pop
xor
call
gs
xchg
ins
xor
ins
cmps
leave
sbb
cmps
neg
cld
cmps
leave
out
shl
add
push
fadd
cmp
xor
sbb
movs
dec
int
scas
xlat
add
scas
call
mov
pop
das
ds
adc
into
out
dec
int
movs
push
int
push
and
ins
das
inc
add
dec
das
xor
pop
scas
test
inc
xor
inc
xor
inc
xor
daa
outs
pop
sbb
inc
xor
scas
push
jae
inc
xor
jg
das
dec
das
xor
movs
out
pop
cmps
adc
sbb
mov
push
sar
out
daa
into
ins
ffreep
dec
jbe
das
pop
sbb
sub
xor
push
xlat
fnstenv
das
xor
(bad)
fistp
out
xlat
(bad)
dec
das
xor
je
fidiv
aam
(bad)
das
xor
iret
or
jl
dec
pushf
dec
dec
pop
cmp
(bad)
cli
scas
stos
test
fnop
mov
adc
das
neg
inc
aad
gs
fnstcw
das
xor
fsub
into
dec
iret
pop
retf
jbe
fldcw
stos
out
adc
das
mov
fimul
fnstenv
push
das
xor
dec
inc
xor
scas
stos
std
out
sar
fcmovu
call
jecxz
iret
out
(bad)
fnclex
fcom
mov
sub
sbb
mov
das
xor
les
into
nop
in
mov
fcom
into
dec
xchg
mov
nop
(bad)
cmp
push
lea
pushf
mov
iret
out
in
mov
out
inc
push
clc
gs
mov
out
movs
or
xor
xor
daa
das
mov
push
mov
scas
repnz
das
xor
jg
test
into
dec
pop
cmps
je
cs
ds
and
jg
pop
daa
rol
(bad)
into
out
jmp
nop
loopne
mov
out
stos
std
out
rcl
nop
inc
jmp
cmps
fcom
into
dec
xchg
mov
nop
(bad)
cmp
sub
push
call
ds
test
xor
cmps
xchg
int3
out
shl
push
mov
inc
xor
into
jae
stos
stos
int3
out
shl
sbb
out
jmp
nop
loopne
mov
out
in
mov
daa
das
ds
mov
adc
out
das
ds
push
sub
mov
fcom
into
pop
ja
mov
fcom
into
dec
dec
jg
pop
daa
(bad)
retf
das
mov
sub
xchg
sub
xchg
sbb
xor
daa
das
ds
in
xor
cmps
in
loope
daa
das
pop
sbb
rcr
inc
popa
mov
rcl
into
call
xor
inc
xor
iret
jae
stos
xchg
int3
out
shl
sub
into
out
jmp
and
shl
sbb
neg
das
xor
dec
cs
fadd
ins
xor
(bad)
jo
iret
mov
adc
daa
pop
push
jae
inc
mov
gs
mov
out
(bad)
cli
in
fcom
mov
sub
into
out
das
inc
adc
stos
cdq
out
shl
sbb
das
pop
sbb
rcr
inc
popa
mov
rcl
into
call
xor
inc
xor
iret
jae
stos
xchg
int3
out
shl
scas
fcmove
out
jmp
and
shl
sbb
neg
das
xor
dec
cs
mov
ja
jo
iret
dec
(bad)
out
lods
cmc
adc
daa
pop
push
jae
inc
mov
gs
mov
out
(bad)
jbe
fcom
mov
sub
into
out
das
inc
adc
stos
cdq
out
shl
sbb
das
mov
pushf
xchg
iret
out
in
pop
sbb
rcr
inc
popa
mov
rcl
into
call
xor
call
into
sbb
das
xor
inc
mov
gs
pop
dec
xchg
icebp
(bad)
fcmovne
out
jmp
and
shl
sbb
neg
das
xor
dec
cs
popa
(bad)
ins
xor
(bad)
jo
iret
jecxz
out
lods
cmc
adc
daa
pop
jne
es
mov
gs
mov
out
(bad)
sahf
in
fcom
mov
sub
into
out
das
inc
add
cs
imul
ror
out
js
mov
ror
call
xor
call
into
sbb
das
xor
daa
lods
mov
push
cmp
sbb
fwait
jae
daa
mov
into
dec
iret
xchg
out
jbe
or
sub
gs
xor
test
pop
daa
cmps
jmp
fbld
das
fadd
and
xor
daa
mov
into
dec
lods
stos
in
out
shl
pop
shl
scas
push
adc
and
mov
jg
pushf
call
iret
out
movs
or
jo
mov
sbb
cmps
repnz
xor
int
ror
sbb
das
mov
not
iret
out
lods
mov
sub
mov
or
xor
inc
call
into
push
daa
call
into
sbb
das
xor
jg
pushf
mov
movs
mov
fcom
into
dec
lods
pop
into
dec
cmp
mov
fcom
into
nop
in
mov
fcom
into
dec
dec
mov
mov
fcom
into
dec
lods
pop
into
or
daa
cmps
je
cs
ds
sbb
xor
stos
stos
loope
fnop
popa
xchg
mov
jg
and
mov
mov
sbb
cmps
repnz
xor
icebp
fcom
into
dec
lods
stos
loope
fnop
popa
xchg
pop
shl
scas
push
adc
and
aam
add
daa
les
xchg
mov
jg
pushf
sti
ror
out
movs
or
jo
mov
jnp
das
(bad)
cli
scas
stos
cdq
out
sar
sbb
stos
icebp
sbb
das
mov
out
movs
mov
fcom
into
dec
lods
pop
into
dec
add
add
scas
in
mov
fld
ds
inc
sub
sbb
das
mov
xlat
ror
out
rol
ja
jo
stos
stos
int3
out
shl
push
inc
xor
movs
jmp
call
fcomp
and
xor
(bad)
fidiv
das
mov
out
push
sbb
call
fcmovbe
iret
out
inc
push
stc
gs
mov
out
(bad)
push
jne
das
mov
xor
bnd
stos
mov
sbb
mov
out
stos
lods
out
shl
xchg
cmps
into
out
lods
fisttp
scas
enter
das
xor
and
call
xor
daa
fcom
fdivr
fdivr
nop
(bad)
cmp
sub
mov
adc
out
scas
repnz
das
xor
jg
cdq
(bad)
ins
xor
fdivr
and
cmp
daa
das
xor
sub
mov
imul
out
shl
mov
jg
and
js
nop
(bad)
cmp
sub
mov
(bad)
ror
out
(bad)
rcr
daa
das
pop
sbb
rcr
daa
jbe
rcl
mov
imul
movs
mov
fcom
into
nop
mov
mov
into
dec
stos
call
aaa
cmps
(bad)
mov
aam
mov
out
ret
and
daa
das
ret
xchg
xchg
out
shl
sbb
ins
scas
push
mov
ror
mov
out
in
mov
fld
ds
inc
xor
movs
mov
xchg
mov
jg
imul
scas
into
out
jg
and
cmp
daa
das
xor
sub
mov
mov
and
xchg
mov
jg
sbb
call
mov
movs
or
jo
mov
xor
cmps
repnz
xor
daa
dec
mov
inc
ror
out
and
call
popf
out
xor
stos
stos
ins
out
shl
xchg
inc
into
out
(bad)
dec
jmp
neg
xchg
imul
and
xor
mov
call
into
sbb
das
xor
rol
mov
jg
inc
(bad)
ins
xor
jg
aas
dec
das
xor
fcmovbe
iret
out
out
pop
cmps
adc
sbb
mov
out
les
lods
jg
int3
out
stos
ins
out
shl
mov
mov
iret
out
(bad)
scas
jo
das
mov
sub
xchg
mov
jg
inc
(bad)
ins
xor
jg
ror
xor
pop
push
sbb
xor
movs
mov
fcom
into
dec
lods
pop
into
dec
das
cmps
jmp
inc
fcom
into
nop
in
mov
fcom
into
xchg
mov
push
mov
fcom
into
push
movs
and
out
movs
mov
fcom
into
dec
lods
pop
into
dec
das
movs
mov
fcom
into
dec
lods
pop
into
dec
das
shl
mov
push
mov
fcom
into
push
movs
ror
fsubr
sbb
neg
xchg
adc
daa
das
(bad)
cli
scas
stos
cdq
out
sar
out
shl
pop
shl
movs
xchg
loope
fnop
xor
movs
mov
fcom
into
dec
lods
pop
into
dec
das
lods
mov
fcom
into
sbb
mov
out
movs
add
jno
mov
out
movs
add
jno
mov
out
movs
add
jno
mov
fisubr
popa
xchg
pop
shl
into
or
out
jo
inc
out
in
fs
ret
jno
fwait
jae
dec
mov
pop
daa
dec
nop
sbb
das
xor
cmps
adc
daa
das
xor
jo
push
icebp
loopne
aad
adc
sahf
push
daa
das
neg
xor
daa
scas
je
out
or
sbb
xor
daa
(bad)
cmp
das
mov
and
inc
out
fcom
mov
cmps
fwait
jae
daa
pop
out
repnz
call
into
out
pop
neg
xor
daa
movs
je
in
push
icebp
loopne
in
add
xor
push
sar
fisub
into
out
shr
jl
mov
sbb
das
xor
jb
aam
jo
data16
jp
loope
enter
cmps
div
fwait
jae
dec
das
pop
sbb
adc
daa
inc
xor
(bad)
pop
jl
das
mov
jp
das
outs
shl
jp
cld
movs
ret
and
adc
cmps
rcr
cmps
mul
and
pop
daa
cmps
call
pop
daa
das
mov
fbld
xor
daa
das
mov
das
mov
xor
mov
das
xor
and
pop
daa
sub
sbb
cmps
stc
pop
lods
das
xchg
pop
mov
sub
data16
cmp
sub
or
daa
das
xor
test
xor
daa
rcl
sbb
das
jno
inc
sub
inc
lods
gs
add
cmps
push
adc
mov
jns
(bad)
sub
(bad)
xlat
xor
mov
sbb
adc
sbb
scas
cmp
mov
or
mov
fnstenv
mov
and
sbb
pop
scas
pop
daa
les
out
pop
scas
pop
daa
cmps
shr
cmps
je
scas
jmp
xor
and
scas
pop
daa
(bad)
retf
sbb
das
into
sbb
fwait
jae
shr
sub
and
icebp
lock
sbb
das
mov
aas
mov
sbb
(bad)
jno
data16
xchg
or
ror
out
sub
xchg
xor
lock
xor
cmps
fnstenv
daa
das
mov
aas
mov
sbb
(bad)
ds
rol
sbb
mov
sbb
pop
ss
(bad)
rcr
daa
das
mov
inc
dec
xor
cmps
and
xchg
cmp
test
pop
daa
(bad)
shl
fcom
(bad)
sbb
mov
sbb
pop
ss
mov
fistp
xchg
xor
and
lods
pop
daa
sub
xchg
fcom
(bad)
sbb
mov
sbb
(bad)
mov
imul
and
sbb
das
xor
and
pop
daa
sub
mov
sbb
fwait
jae
fsubr
or
fistp
xchg
jno
and
xor
xchg
lods
pop
daa
cs
mov
inc
xor
ror
mov
cdq
sub
scas
pop
daa
outs
fdivr
daa
das
xor
movs
out
xor
and
scas
pop
daa
(bad)
call
daa
das
nop
pop
mov
daa
mov
sbb
das
nop
cmc
mov
pop
scas
pop
daa
(bad)
lahf
sbb
das
into
sbb
fwait
jae
movs
sub
xchg
xor
mov
fistp
jmp
pop
mov
sbb
mov
fxch
loope
sbb
scas
cmp
mov
jmp
mov
mov
sub
xor
out
gs
mov
lahf
ins
xor
das
xor
pop
outs
or
daa
das
xor
rcl
sbb
das
jno
adc
xor
xchg
ins
xor
or
xor
mov
sbb
or
jo
scas
fild
jmp
aas
mov
sbb
cmp
out
pusha
sbb
das
mov
(bad)
xor
fsubr
inc
lods
gs
(bad)
sbb
mov
sbb
mov
daa
das
xor
test
pop
daa
cmps
shl
cmps
not
xchg
sub
gs
adc
daa
das
xor
and
pop
daa
lods
rcr
scas
push
push
xchg
push
and
das
xor
sub
mov
fsubr
pop
fsubr
cmp
cmp
sbb
cdq
je
sbb
cmp
sub
mov
mov
arpl
and
pop
aam
ins
jne
dec
jecxz
pop
jge
and
mov
pop
cmps
push
retf
sbb
aas
mov
sbb
cmps
not
test
lods
pop
daa
and
sbb
mov
(bad)
inc
adc
push
retf
sub
sbb
cmps
shl
cmps
neg
daa
das
fiadd
scas
out
xchg
xor
mov
xchg
and
or
sub
mov
adc
cld
scas
fild
das
xor
daa
das
fiadd
scas
out
xchg
xor
mov
xchg
and
cdq
mov
sub
scas
pop
daa
push
xor
mov
xor
shl
out
push
jmp
sbb
out
jno
jl
repnz
scas
retf
jno
(bad)
push
push
shl
mov
ror
mov
out
pop
test
inc
cmp
js
xor
gs
data16
cmps
jo
sbb
sbb
push
jo
sbb
jb
daa
das
(bad)
jmp
inc
or
gs
data16
jb
xor
test
lods
pop
daa
inc
jp
gs
data16
bound
sbb
outs
mov
adc
sbb
outs
shl
jp
cld
movs
ret
inc
dec
jno
mov
adc
dec
nop
jmp
jmp
ins
xchg
ins
xor
xchg
jae
stos
push
dec
fdivr
ins
mov
iret
aaa
xor
daa
cmps
jmp
call
mov
in
addr16
xor
cmps
les
jl
das
mov
fld
into
sbb
fwait
jae
movs
dec
loope
scas
test
jl
das
neg
xor
daa
call
xor
lahf
dec
push
sbb
fcom
nop
bound
inc
mov
(bad)
shl
bound
mov
das
xor
les
neg
xor
daa
lods
push
mov
stos
pop
loope
and
xor
aam
mov
sbb
sub
xchg
(bad)
retf
popa
out
fld
jmp
popa
jae
mov
xor
inc
xor
std
iret
mov
sbb
mov
inc
mov
dec
fnstcw
and
pop
daa
inc
xor
push
(bad)
pop
sbb
pop
sbb
ret
(bad)
dec
js
das
mov
addr16
xor
les
into
ins
ret
(bad)
fiadd
into
sbb
fwait
jae
stos
push
dec
fcomp
xchg
(bad)
retf
popa
out
fld
int3
sub
sbb
push
in
mov
fisub
adc
popa
pusha
mov
std
scas
push
out
inc
retf
mov
in
push
nop
(bad)
fistp
loope
dec
lds
push
std
mov
icebp
dec
sub
dec
cs
pop
iret
jg
ins
fild
xchg
(bad)
(bad)
fcom
inc
adc
cmp
xchg
mov
cwde
dec
shl
pop
daa
das
clc
fidiv
aam
jo
ss
xor
(bad)
sub
gs
into
ins
das
inc
into
out
aas
scas
pop
daa
xchg
(bad)
arpl
das
(bad)
(bad)
scas
push
nop
loopne
clc
fidiv
aam
retf
and
jo
inc
adc
test
push
into
push
xchg
sub
and
das
xor
push
sbb
scas
arpl
xor
das
xor
push
pop
ds
arpl
xor
das
xor
push
xor
scas
arpl
xor
das
xor
push
aas
ds
arpl
xor
sbb
stos
cmp
daa
das
mov
sbb
movs
and
fbld
xor
xchg
push
push
xchg
sub
fwait
ins
xor
xchg
cmp
and
and
frstor
scas
xor
or
sub
mov
push
xchg
cmp
and
pop
dec
nop
(bad)
nop
inc
ja
xlat
mov
and
xchg
daa
das
inc
inc
sub
ds
and
pop
movs
gs
popa
icebp
jle
xor
sub
and
movs
gs
arpl
jae
sbb
cmps
je
movs
out
xchg
jb
mov
jecxz
lds
loope
(bad)
xor
pop
aaa
mov
leave
call
and
sbb
(bad)
scas
(bad)
rcr
xor
jae
daa
pop
ds
(bad)
shl
lock
into
out
sub
gs
mov
sbb
inc
dec
scas
xlat
jns
sbb
xor
call
inc
pop
scas
xlat
mov
and
or
nop
fild
pop
sbb
or
xchg
xor
daa
pop
cmp
cmps
adc
cmp
and
and
sub
or
das
xor
cmps
adc
sbb
mov
pop
and
lods
fstp
cmps
adc
sbb
mov
cdq
sbb
xor
leave
call
or
daa
das
xor
adc
sbb
das
inc
movs
out
xchg
jb
mov
jecxz
lds
call
je
stos
imul
xlat
mov
and
sbb
das
xor
jne
leave
push
cmps
adc
sbb
mov
cdq
sbb
xor
leave
call
inc
sub
and
ins
sub
iret
sbb
das
inc
push
sbb
xor
daa
pop
sub
mov
sbb
xor
(bad)
sbb
das
xor
shl
sbb
nop
ror
out
jno
shl
jp
cld
movs
ret
cmp
sbb
fwait
jae
lods
pop
cmp
cmp
into
repnz
cmp
rcr
sbb
das
inc
call
daa
das
inc
or
je
or
xor
daa
push
imul
(bad)
fcomp
daa
das
mov
sub
ins
xor
xchg
jp
fadd
sub
mov
nop
fild
jmp
out
jbe
sbb
fwait
jae
sub
xor
daa
pop
push
and
das
xor
push
lss
ficom
scas
div
pop
(bad)
aaa
out
rcl
and
inc
icebp
int3
or
pop
stos
imul
lods
das
mov
sbb
push
loope
(bad)
jmp
mul
das
sbb
sub
mov
xor
movs
out
nop
aad
jmp
mul
loope
iret
sub
sub
mov
fs
aas
into
sbb
fwait
jae
movs
out
xor
mov
loope
iret
sub
lock
sub
daa
das
xor
and
sbb
sbb
fwait
ins
xor
push
ror
out
jmp
inc
jns
clc
fidiv
aam
jnp
xor
iret
jecxz
sbb
jl
dec
iret
icebp
enter
mov
clc
ror
sbb
xchg
push
sbb
scas
inc
push
loope
rol
fcom
xor
mov
das
mov
push
fwait
jae
and
into
sbb
ds
mov
scas
or
sbb
pop
sub
fsubr
inc
or
cdq
mov
enter
sbb
push
movs
gs
xor
outs
push
xchg
mov
mov
out
in
xchg
sub
or
mov
sbb
mov
pop
daa
and
out
in
xchg
sub
out
mov
lds
into
out
sbb
mov
ja
sbb
mov
pop
daa
scas
mov
enter
sub
into
jb
xor
pop
daa
das
ds
push
into
out
stos
ret
shl
push
xchg
mov
lock
and
mov
mov
and
xor
xchg
mov
lock
and
mov
sbb
ror
sbb
fwait
jae
cmps
xchg
rol
fcom
xor
mov
(bad)
push
loopne
sar
out
sub
gs
mov
out
cld
lock
ror
scas
div
daa
outs
xor
fcomp
into
repnz
inc
xor
daa
das
(bad)
mov
sbb
out
xlat
sbb
ror
pop
cmps
in
xor
daa
das
or
clc
mov
out
(bad)
outs
inc
daa
das
into
sbb
fwait
jae
movs
mov
neg
shl
lock
das
xor
dec
ror
sbb
rol
xchg
imul
out
(bad)
ds
shl
in
out
inc
jnp
mov
xchg
mov
les
fsub
lock
and
sbb
lods
call
pop
cmps
shl
sbb
cmps
ror
sbb
das
inc
push
scas
div
aaa
das
xor
fadd
jg
in
and
daa
scas
retf
das
xor
rol
and
out
jbe
pushf
retf
ror
daa
das
xor
lods
stos
mov
out
das
xor
mov
and
out
pop
test
rol
push
js
sbb
outs
xor
daa
and
out
int
xchg
xor
adc
rol
into
out
mov
neg
shl
xchg
mov
fsubp
fsubr
rcr
scas
div
lock
(bad)
int
sub
mov
out
movs
movs
in
enter
lds
xor
(bad)
sub
sti
cdq
sub
ror
cmps
xchg
(bad)
shl
sbb
fsubr
inc
lods
gs
mov
(bad)
lock
out
pop
push
jns
jae
iret
xchg
daa
cmps
mov
stc
ror
nop
in
and
sbb
shl
nop
mov
movs
mov
stc
ror
xchg
mov
out
out
lods
repz
mov
into
out
stos
xchg
(bad)
fcom
mov
out
sub
into
out
stos
popf
(bad)
fcom
mov
out
stos
in
(bad)
fcom
pop
add
fcom
popa
out
repz
out
(bad)
push
dec
daa
das
mov
out
stos
(bad)
(bad)
fcom
inc
pop
lods
stos
cmc
(bad)
fcom
mov
out
stos
in
(bad)
fcom
mov
(bad)
lock
out
pop
bnd
das
aaa
cmp
mov
out
lds
(bad)
fcom
lock
adc
cs
mov
out
out
les
pop
daa
and
out
int
xchg
stos
repz
out
add
int
ror
nop
sub
add
(bad)
out
out
rcr
lods
cmp
mov
xor
fadd
or
das
arpl
sbb
sbb
sar
fldcw
stos
push
sbb
das
mov
das
das
ds
sbb
stos
(bad)
sar
scas
daa
adc
sbb
das
inc
push
cmps
push
cmp
sub
fadd
es
xor
fsub
sbb
xor
out
jmp
into
sbb
xor
xchg
retf
out
out
cmps
rcl
xor
rcr
pop
das
nop
xlat
lods
fstp
cmps
pop
xor
rcr
pop
cmp
cmps
pop
xor
popa
fcmovbe
fsubr
inc
lods
gs
ds
mov
out
out
out
rcr
scas
fwait
and
std
ror
cdq
mov
cs
and
fcomp
daa
das
inc
shrd
sbb
das
xor
pop
sub
out
lods
mov
pushf
rol
into
out
xlat
sbb
lods
cmp
std
clc
ror
imul
pushf
mov
sub
into
fadd
sub
jmp
fsubr
sbb
das
xor
push
pop
mov
sbb
inc
pop
cmps
adc
daa
das
xor
push
cmp
sbb
das
inc
adc
das
xor
push
sub
repnz
and
out
out
dec
mov
push
xor
scas
mov
jg
lods
sti
lock
out
call
(bad)
into
call
into
out
pop
jae
sbb
out
das
mov
out
int
nop
(bad)
out
fcomp
out
xor
push
mov
out
cmps
xor
neg
shl
out
sub
sbb
into
sbb
fwait
jae
into
add
out
scas
mov
enter
sub
into
jb
xor
pop
daa
das
ds
or
into
out
jno
shl
jp
cld
movs
ret
or
inc
das
call
sar
cmps
inc
leave
or
xor
(bad)
shl
xchg
pop
enter
xchg
jae
sahf
xor
daa
fcom
pop
jmp
je
ror
nop
(bad)
jmp
pop
fbld
mov
gs
mov
daa
das
xor
and
movs
gs
mov
daa
das
xor
sub
sbb
ins
mov
fsubr
mov
sbb
cmps
fs
push
sbb
cmp
out
imul
sub
adc
push
iret
or
neg
fdivr
and
xchg
jne
jmp
mov
daa
das
xor
daa
das
mov
fsubr
ds
fs
daa
das
xor
xchg
or
sbb
das
mov
addr16
xor
push
xchg
ins
xor
movs
aad
ins
sub
es
addr16
xor
push
xchg
ins
xor
fs
ins
sub
ins
and
je
scas
in
sbb
scas
jp
push
xchg
ins
xor
das
xor
sbb
xor
push
xchg
sub
out
daa
das
xor
jb
pop
pop
xor
cdq
(bad)
xor
movs
jns
out
jmp
daa
xchg
and
xchg
jne
neg
cdq
(bad)
shl
repnz
scas
dec
in
pop
aad
dec
xlat
fwait
pop
daa
das
ds
and
mov
daa
das
inc
sbb
sub
push
in
mov
xchg
push
daa
mov
int3
imul
daa
inc
into
sbb
das
addr16
(bad)
ss
daa
das
mov
pop
cmps
adc
sbb
mov
and
loope
push
sbb
les
push
movs
shl
retfw
sub
cmps
repnz
jns
ins
fidiv
aam
and
xor
iret
punpcklbw
daa
jns
cmps
lahf
inc
xor
stos
int
fcom
mov
fisubr
pop
cmp
jg
(bad)
das
xor
jg
push
daa
das
xor
push
xlat
mov
inc
out
in
fs
ret
(bad)
aas
xchg
cwde
enter
daa
inc
xor
rol
das
fld
jp
fs
ret
adc
(bad)
jno
push
cmps
fdivr
daa
das
pop
sbb
xor
daa
inc
xor
inc
xor
das
xor
cmp
sbb
pop
sub
and
nop
(bad)
(bad)
nop
(bad)
fstp
dec
dec
das
addr16
and
sbb
jg
pop
iret
jmp
sbb
cmps
je
cmps
rcl
push
cmp
pop
sub
mov
in
fcomp
dec
fcomp
dec
iret
out
sbb
jns
repz
xor
scas
xlat
sbb
scas
call
repnz
scas
retf
jno
mov
or
leave
nop
loopne
xor
das
xor
dec
sub
dec
das
pop
sbb
das
icebp
out
daa
fldenv
das
xor
sub
xor
push
out
fimul
sub
addr16
cmps
jle
sbb
stc
out
scas
or
nop
in
xor
pop
cmp
sbb
inc
xor
inc
sar
das
addr16
sahf
jle
sbb
das
addr16
jbe
xor
lahf
xor
daa
jo
inc
out
in
fs
ret
adc
sub
xor
ror
mov
jae
inc
mov
daa
das
pop
sbb
dec
das
xor
out
inc
adc
iret
popa
sbb
cmps
not
(bad)
fstp
ins
and
icebp
repnz
jae
inc
xor
retf
popa
sbb
inc
xor
aas
into
ins
sub
daa
jbe
xor
loopne
fxch
push
outs
outs
inc
out
in
fs
ret
dec
jo
inc
adc
push
lock
movs
jo
dec
sar
ret
ficomp
sub
jbe
pop
and
je
inc
adc
daa
(bad)
dec
dec
daa
das
mov
fild
or
gs
fnstenv
das
xor
int3
cmp
scas
and
popa
jno
iret
jae
iret
jnp
sbb
lods
cmc
adc
adc
int3
and
and
loope
getsec
pusha
adc
adc
bswap
jae
iret
add
daa
lods
cmc
adc
pause
jb
outs
inc
jl
repnz
scas
retf
jno
mov
adc
xor
dec
cwde
vgetmantsd
cmc
ds
das
pop
and
ins
xor
sar
sbb
into
repnz
xchg
(bad)
ins
xor
(bad)
jge
sbb
inc
lock
or
pop
daa
(bad)
dec
das
push
(bad)
in
mov
inc
out
in
fs
ret
xor
cmps
pusha
or
scas
div
shr
xor
movs
dec
fstp
movs
dec
fstp
movs
dec
aad
stos
push
ret
xchg
adc
sbb
das
ret
mov
sbb
fcom
nop
(bad)
mov
sbb
push
fisub
sub
lods
push
push
nop
outs
xor
lahf
rcl
fcom
nop
(bad)
idiv
out
cdq
jne
(bad)
lods
icebp
pop
es
cdq
pop
shl
ins
and
mov
dec
shl
cdq
pop
shl
ins
in
movs
je
sub
iret
repnz
(bad)
sub
xor
xchg
push
push
xchg
imul
out
das
sbb
mov
fldcw
fstp
cmps
inc
iret
sbb
clc
mov
pop
jmp
ds
daa
movs
adc
cwde
and
test
push
nop
jp
push
mov
xor
jmp
xchg
push
mov
push
nop
(bad)
je
es
xchg
bound
ds
sub
and
push
nop
jp
push
mov
xor
je
sub
cmp
nop
jge
xor
cs
lods
push
repnz
repnz
jns
clc
fiadd
mov
sbb
outs
xor
daa
mov
ins
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
mov
ins
xor
daa
mov
jae
mov
mov
mov
mov
mov
mov
cmc
mov
mov
mov
ds
out
dec
mov
jle
das
xor
daa
ja
mov
adc
mov
adc
das
mov
mov
mov
mov
mov
sub
mov
mov
icebp
adc
pop
das
mov
mov
mov
fsubr
aaa
outs
xor
cmp
ins
sbb
ins
xor
in
jae
inc
mov
mov
aaa
outs
xor
mov
outs
mov
xlat
xor
mov
mov
pop
daa
mov
mov
mov
mov
mov
shl
fsub
mov
mov
(bad)
popa
cmp
ins
mov
pop
mov
loope
mov
mov
sbb
xlat
xor
mov
mov
pop
daa
mov
mov
mov
mov
mov
shl
fsub
mov
mov
(bad)
pop
sub
jae
push
pop
mov
loope
mov
mov
mov
(bad)
or
fcmovbe
repnz
aam
retf
aaa
bound
movs
ins
adc
cmp
pop
sbb
pop
(bad)
fs
fst
(bad)
fbstp
sbb
hlt
xor
daa
cmps
jmp
xchg
ror
inc
scas
in
mov
loop
pop
aaa
fbld
xor
or
das
mov
data16
das
mov
daa
das
xor
xchg
jp
nop
fiadd
loopne
rcl
mov
adc
mov
mov
ror
nop
(bad)
(bad)
mov
pop
sbb
or
scas
div
jmp
sub
mov
pop
sbb
xor
daa
pop
and
sub
retf
xor
cmps
and
daa
das
pop
adc
xor
daa
mov
sahf
push
daa
das
ds
(bad)
aam
nop
jmp
ror
ret
push
xchg
jp
sbb
jg
xchg
imul
je
ja
jmp
arpl
xor
and
xor
inc
shl
cwde
je
outs
push
not
movs
aaa
into
out
jo
inc
out
in
fs
ret
xor
out
loop
cmps
in
xchg
daa
das
fnstenv
das
xor
jbe
lock
int
sti
fcomp
and
loopne
push
sti
nop
div
fld
jmp
pop
daa
das
inc
push
push
out
fcomp
das
xor
daa
fldenv
jecxz
mov
popf
or
xor
sub
xor
gs
sbb
daa
cmps
out
scas
push
(bad)
cdq
dec
mul
enter
adc
out
and
cmc
movs
gs
data16
out
xor
dec
and
scas
fbstp
sbb
xchg
jae
and
(bad)
xchg
jl
daa
lods
cmc
add
cmps
je
int3
cmp
sbb
movs
and
call
in
mov
movs
gs
xor
xchg
jae
push
push
imul
in
gs
mov
mov
ror
mov
nop
xlat
sub
loope
cmp
movs
gs
add
movs
push
sbb
daa
sub
rcr
inc
retf
jl
daa
cmps
je
iret
dec
jl
daa
movs
dec
lds
cwde
into
nop
in
xchg
out
and
lock
or
call
sbb
(bad)
jb
daa
das
mov
push
daa
das
mov
out
in
ds
cmc
out
ror
cs
mov
sbb
pop
mov
xlat
sub
fstp
iret
jge
daa
lods
cmc
adc
daa
cmps
je
int3
cmp
sbb
movs
and
call
in
and
xor
xchg
jae
push
push
imul
in
gs
mov
nop
xlat
sub
jmp
gs
add
movs
push
sbb
daa
sub
rcr
inc
(bad)
scas
fdiv
and
xchg
jae
sub
mov
pop
daa
movs
cmp
call
out
and
cmc
movs
gs
ds
jb
loopne
lods
cmp
sub
mov
cmps
cmp
push
daa
das
mov
enter
movs
inc
fld
sub
rcr
jmp
pop
daa
jg
mov
ror
call
pop
sbb
pop
sbb
xor
rol
iret
daa
js
daa
cmps
je
cmps
fmul
daa
das
pop
sbb
pop
ror
pop
aad
pop
xor
fcomp
icebp
xor
jno
not
das
add
les
mov
ror
mov
inc
jns
clc
fidiv
aam
retf
aaa
xor
daa
jl
dec
cdq
icebp
add
push
xchg
(bad)
pusha
daa
das
(bad)
jmp
sar
lods
gs
fwait
sbb
das
mov
sbb
jmp
xor
jbe
lock
int
retf
push
out
cs
cmps
loope
scas
call
retf
xchg
mov
iret
out
jmp
pop
icebp
mov
xor
sub
jl
aaa
jle
fcom
(bad)
and
enter
mov
call
iret
out
scas
je
movs
je
sbb
inc
shl
stos
ss
shl
icebp
jb
xor
scas
in
(bad)
(bad)
pop
aas
fbld
sbb
pushf
and
into
out
scas
mov
mov
jg
mov
lock
stos
stos
retf
shl
adc
dec
das
pop
sbb
pop
sbb
pop
sbb
das
jno
mov
jg
retf
pusha
das
xor
fcom
inc
adc
jg
pop
ins
das
xor
mov
into
dec
dec
sub
daa
inc
leave
movs
gs
into
lods
rcl
into
out
pop
jns
daa
cmps
rcr
cmps
mul
xchg
fcmovne
out
(bad)
repnz
daa
das
into
sbb
fwait
jae
je
in
(bad)
gs
mov
out
(bad)
mov
das
mov
out
inc
in
(bad)
gs
mov
out
inc
xor
daa
scas
(bad)
das
xor
ror
mov
out
jmp
jae
dec
in
out
pop
daa
inc
cld
(bad)
gs
mov
out
inc
xor
daa
scas
fnstcw
daa
das
xor
inc
out
pop
daa
inc
dec
(bad)
gs
pop
sbb
das
mov
sub
xor
movs
jmp
cwde
shl
sbb
jo
inc
out
in
fs
ret
adc
push
cmp
nop
fild
leave
nop
loopne
xor
xchg
ins
xor
(bad)
fstp
sbb
push
dec
dec
das
pop
es
and
jae
inc
xor
rol
pop
cmp
push
xor
scas
fidiv
and
scas
push
out
xlat
addr16
inc
xor
push
aas
into
ins
fcmovnb
push
push
daa
das
mov
sbb
xor
fcomp
icebp
fisub
sbb
push
in
mov
xor
mov
outs
xor
fcomp
icebp
sub
sbb
popa
out
cmp
ins
aaa
rol
pop
cmp
adc
xor
movs
jmp
inc
jp
fs
ret
cmps
rcl
ss
xlat
(bad)
(bad)
scas
push
nop
loopne
xor
or
fcomp
out
daa
fstp
daa
das
xor
in
mov
cmps
lahf
js
push
scas
xlat
add
scas
call
mov
sbb
xor
daa
inc
xor
inc
xor
push
and
ins
das
(bad)
push
daa
das
cmp
push
sub
fxch
sbb
ins
aas
rol
pop
sub
or
pop
int
dec
xor
cs
inc
adc
sbb
sbb
out
fimul
scas
xlat
sbb
scas
call
sbb
das
add
addr16
fidiv
aam
retf
aas
addr16
lods
pop
and
nop
bound
mov
shl
sbb
jmp
add
scas
call
pop
add
sub
inc
adc
shr
sbb
out
inc
sbb
stos
push
dec
jno
xor
rol
pop
int
ret
sbb
out
inc
adc
out
xor
push
out
fiadd
fcomp
icebp
xchg
push
je
int3
and
out
shl
inc
out
in
fs
ret
dec
jo
xchg
jg
aaa
mov
popa
dec
xor
movs
adc
int3
gs
xor
(bad)
ss
daa
das
popa
icebp
xchg
sbb
push
leave
nop
loopne
int
gs
or
push
sub
outs
ficomp
das
pop
fisub
das
xor
inc
xor
inc
push
(bad)
gs
fld
das
xor
cmps
fsub
push
sub
fxch
cmp
sub
cli
jae
iret
addr16
daa
cmps
je
int3
sub
sbb
clc
ficomp
cmps
stc
xor
cmps
lock
arpl
xor
pop
daa
cmps
popa
adc
jp
cld
jbe
addr16
lods
pop
cmp
(bad)
xchg
adc
fld
les
sbb
cmp
or
mov
out
aas
fld
das
xor
push
idiv
sbb
cmps
leave
call
int
xor
xor
adc
sbb
cmp
push
push
mov
sbb
inc
add
sub
ins
xor
das
xor
daa
das
mov
nop
xlat
cs
sbb
cmps
neg
daa
das
cmp
push
xor
out
aas
fldenv
das
xor
push
in
mov
sbb
les
sub
jo
inc
out
in
fs
ret
or
jp
neg
adc
add
sbb
pop
daa
das
mov
enter
adc
jno
cmps
ins
xor
scas
push
sub
les
push
xchg
sub
call
ds
and
jmp
popa
adc
loope
retf
xlat
prefetch
daa
dec
neg
xor
outs
and
and
cmp
fmul
nop
icebp
lods
idiv
cmps
leave
mov
popf
pusha
fstp
imul
mov
call
data16
lock
jo
dec
pop
daa
das
mov
xor
pop
fldenv
xchg
je
push
cmp
out
in
fs
ret
sbb
das
xor
js
push
ror
fadd
sub
out
lods
xchg
cmc
fcom
into
sbb
shl
push
and
adc
into
call
xor
scas
jmp
add
into
pop
cmp
daa
lods
mov
fcom
into
sbb
(bad)
sbb
out
fmul
sub
xor
push
cmp
push
fs
xor
fcom
(bad)
mov
scas
stos
in
fcmovbe
mov
out
xchg
jmp
xchg
mov
into
in
mov
xor
jo
jno
jb
xor
scas
stos
int
fnop
mov
lods
pop
xor
fcomp
jno
xor
iret
xchg
jo
daa
cmps
shl
cmps
not
not
int3
out
out
mov
fsubr
and
scas
call
loope
fcmovbe
xor
jne
pop
aam
shl
(bad)
gs
into
ins
das
(bad)
mov
(bad)
inc
jg
gs
into
lods
fcmovnbe
iret
out
ja
sbb
lods
cmc
adc
pop
je
daa
xchg
cmp
daa
das
test
fisubr
jmp
xchg
ror
out
(bad)
pop
daa
das
mov
das
cmps
shr
cmps
div
sub
sbb
mov
loopne
aad
fs
retf
das
mov
das
xor
call
daa
clc
ins
xor
xlat
jne
daa
lods
cmc
or
div
daa
xchg
cmp
daa
das
test
fisubr
jmp
xchg
ror
out
mov
(bad)
inc
push
(bad)
gs
into
lods
fcmovnbe
iret
out
retf
jne
daa
lods
cmc
adc
(bad)
jne
daa
xchg
cmp
daa
das
test
fisubr
jmp
xchg
ror
out
(bad)
mov
das
mov
das
(bad)
dec
pop
daa
das
mov
daa
das
xor
and
icebp
dec
imul
sahf
dec
xor
daa
mov
loopne
movs
mov
fcom
into
dec
dec
adc
pop
daa
js
jg
das
xor
add
(bad)
gs
mov
out
inc
adc
gs
popa
icebp
outs
imul
movs
jmp
cwde
leave
jmp
daa
das
mov
daa
das
xor
and
jno
iret
jae
fcomp
fstp
das
xor
clc
ins
xor
xchg
ror
out
(bad)
push
pop
daa
das
mov
das
(bad)
ficomp
das
mov
daa
das
xor
and
jno
iret
jae
fcomp
fst
arpl
xor
clc
ins
xor
xchg
ror
out
mov
(bad)
mov
adc
mov
and
icebp
xchg
sahf
dec
xor
daa
mov
loopne
movs
mov
fcom
into
dec
dec
adc
pop
daa
js
xchg
call
xor
shl
nop
loope
pop
pop
daa
das
mov
and
xor
(bad)
jae
stos
xchg
out
out
shl
dec
ins
xor
stos
stos
out
out
shl
push
aas
mov
out
inc
loope
gs
popa
icebp
jbe
xor
movs
jmp
icebp
push
ins
xor
sahf
and
(bad)
loopne
aad
fs
cs
daa
das
mov
das
xor
call
daa
clc
ins
xor
xor
daa
lods
cmc
or
stos
stc
out
sar
sbb
xchg
cmp
daa
das
test
fisubr
jmp
xchg
ror
out
(bad)
ds
daa
das
mov
das
(bad)
cli
pop
daa
das
mov
daa
das
xor
and
jno
icebp
jae
fcomp
fpatan
gs
xor
gs
xor
mov
sub
(bad)
pop
daa
rol
loop
xor
movs
jmp
nop
xlat
push
rcl
das
into
ins
xor
dec
dec
mov
pop
daa
jg
addr16
xor
gs
xor
mov
sub
in
pop
daa
rol
pop
ins
xor
movs
jmp
icebp
push
ins
xor
sahf
and
(bad)
loopne
aad
fs
sar
das
into
lods
fcmovnbe
iret
out
ja
sbb
lods
cmc
adc
cmp
daa
xchg
cmp
daa
das
test
fisubr
sbb
xor
mov
xchg
int
fnop
data16
lock
jo
into
pop
daa
das
mov
aaa
lods
dec
cmp
and
call
fcom
das
xor
mov
das
mov
jo
xor
movs
mov
out
shl
repnz
movs
mov
fcom
into
sbb
adc
loope
ror
push
movs
mov
fcom
into
sbb
and
mov
mov
dec
arpl
daa
das
mov
jmp
out
(bad)
sbb
sar
dec
stos
xchg
xor
fcom
data16
lock
stos
xchg
xor
fcom
data16
dec
outs
xor
movs
jmp
mov
ror
mov
out
jmp
int3
out
xchg
icebp
out
shl
fwait
push
ror
out
call
aas
mov
into
dec
lods
stos
int
fnop
popa
jno
icebp
jae
ja
cs
daa
das
mov
aas
(bad)
into
pop
daa
das
mov
daa
das
xor
and
jno
icebp
jae
fcomp
fld
data16
xor
addr16
xor
mov
sub
in
pop
daa
rol
fisubr
sbb
rcl
das
mov
daa
das
xor
and
jno
iret
jae
fcomp
(bad)
addr16
xor
jecxz
int3
out
das
xor
fsubr
mov
out
stos
cmc
out
sar
fwait
mov
stos
fucom
fcmovbe
mov
pushf
out
int3
out
jmp
xor
(bad)
iret
out
data16
daa
scas
mov
daa
ror
sbb
stos
or
jmp
lods
push
sbb
out
sbb
stos
leave
out
sar
call
leave
out
sar
out
pop
and
sbb
shl
outs
xor
movs
jmp
xchg
stos
fcmovne
in
lods
stc
out
scas
or
nop
loopne
mov
out
fild
jmp
daa
das
into
out
and
out
stos
xor
fcom
into
dec
iret
or
sbb
mov
into
dec
iret
sahf
leave
out
lods
cmc
sbb
fcmovbe
into
lods
rcl
iret
out
pop
sub
xchg
(bad)
in
movs
mov
fcom
into
dec
dec
dec
out
pop
daa
jg
mov
jecxz
fstp
sub
fmul
call
out
pop
daa
rol
adc
sbb
rcl
das
mov
daa
das
xor
and
jno
icebp
jae
fcomp
fldenv
das
xor
sbb
xor
mov
sub
(bad)
pop
daa
rol
jb
xor
movs
jmp
out
(bad)
in
(bad)
repnz
das
mov
cmp
sbb
stos
(bad)
sar
ja
test
fcom
into
dec
iret
pop
(bad)
out
lods
cmc
adc
fnop
cmp
sub
pop
and
ins
xor
xchg
ror
out
(bad)
ss
das
mov
das
(bad)
repnz
daa
das
mov
daa
das
xor
and
jno
icebp
jae
fcomp
fsincos
sbb
xor
sbb
xor
mov
sub
in
pop
daa
rol
call
nop
xlat
fcom
nop
mov
cmps
div
dec
adc
sbb
mov
loopne
aad
fs
sar
das
into
lods
fcmovnbe
iret
out
mov
cmc
adc
out
pop
daa
rol
pop
adc
sbb
xor
sahf
and
(bad)
loopne
aad
fs
adc
daa
das
mov
das
xor
call
daa
clc
ins
xor
(bad)
nop
lods
cmc
or
das
nop
xchg
cmp
daa
das
test
fisubr
inc
stc
ins
xor
xchg
ror
out
(bad)
cs
daa
das
mov
das
scas
mov
repnz
sbb
mov
loopne
aad
fs
cli
(bad)
gs
into
lods
fcmovnbe
iret
out
fisttp
daa
lods
cmc
adc
lahf
or
daa
xchg
cmp
daa
das
test
fisubr
jmp
xchg
ror
out
(bad)
(bad)
and
das
mov
das
(bad)
mov
adc
das
xor
and
icebp
pop
adc
sbb
mov
loopne
movs
mov
fcom
into
dec
dec
adc
pop
daa
js
outs
sbb
xor
stc
ins
xor
xchg
ror
out
(bad)
mov
daa
das
mov
das
cmps
shl
cmps
div
sbb
xor
sahf
and
(bad)
loopne
aad
fs
sar
das
into
lods
fcmovnbe
iret
out
jae
sbb
lods
cmc
adc
out
pop
daa
rol
outs
adc
sbb
xor
sahf
and
(bad)
loopne
aad
fs
sar
das
into
lods
fcmovnbe
iret
out
or
daa
lods
cmc
adc
out
pop
daa
rol
adc
sbb
daa
sbb
(bad)
mul
daa
das
xor
and
jno
iret
jae
fcomp
fcos
sbb
xor
stc
ror
out
movs
mov
fcom
into
dec
dec
sub
fnstcw
jecxz
fstp
sub
fmul
call
rcr
rol
adc
sbb
jae
fcomp
(bad)
jecxz
fst
das
xor
mov
sub
(bad)
pop
daa
rol
dec
adc
sbb
xor
ror
mov
out
jmp
xor
mov
scas
test
das
xor
xchg
int
fnop
data16
bnd
jo
ds
aaa
(bad)
fisub
daa
das
mov
daa
das
xor
and
jno
iret
jae
fcomp
fst
sbb
xor
cli
ins
xor
xchg
ror
out
(bad)
retf
das
mov
das
mov
adc
mov
and
jno
iret
jae
fcomp
fxch
sbb
xor
push
push
sbb
mov
cmp
daa
das
test
fisubr
arpl
xor
mov
xchg
int
fnop
data16
lock
jo
inc
and
das
mov
aaa
inc
loope
gs
into
lods
fcmovnbe
iret
out
cmps
or
daa
lods
cmc
adc
pop
sbb
pop
sbb
pop
sbb
das
jno
push
daa
fstp
pop
das
xor
fsubr
xor
xchg
ror
out
(bad)
mov
daa
das
pop
sbb
shl
fcomp
into
lods
iret
ror
out
dec
or
daa
rol
ficomp
xor
fcomp
fnstcw
xlat
rcl
das
xor
fdiv
inc
out
in
fs
ret
adc
das
xor
data16
cmps
leave
out
shl
nop
loopne
je
daa
les
push
xchg
push
dec
dec
movs
in
pop
daa
mov
into
dec
iret
fwait
or
daa
cmps
leave
sub
cmps
div
inc
mov
gs
mov
out
inc
xor
daa
scas
fldz
xlat
ror
call
mov
imul
jae
dec
gs
pop
daa
inc
xor
daa
scas
fxch
xlat
ror
jno
repz
dec
cmc
in
pop
daa
inc
fcmovb
gs
pop
sbb
das
mov
scas
(bad)
out
jmp
cwde
enter
daa
jo
fidiv
aam
retf
mov
addr16
cwde
test
sub
cmps
neg
fsubr
mov
sbb
mov
mov
out
push
xchg
and
xor
daa
das
mov
out
xlat
sbb
scas
call
cmp
jno
jp
daa
das
mov
sbb
ins
mov
out
mov
pushf
pop
ror
out
call
adc
xor
pop
ror
out
jnp
sbb
jnp
sbb
movs
sbb
cs
nop
loopne
fstp
adc
xor
fcom
test
(bad)
sbb
sbb
ror
lods
mov
iret
pop
sbb
movs
adc
mov
xchg
push
ror
out
jnp
sbb
cmps
movs
xchg
fcmovbe
into
cwde
ror
sbb
inc
xor
gs
fldenv
mov
scas
(bad)
cmc
sub
xor
inc
xor
jg
sbb
das
xor
jb
xor
ja
push
and
das
pop
sbb
mov
jg
mov
ins
xor
repz
dec
sub
daa
jmp
add
icebp
ins
sub
mov
out
outs
sbb
das
fst
fnop
into
jno
xor
stos
stos
int
fcom
popa
xchg
mov
jg
jnp
das
xor
xchg
mov
test
xchg
mov
test
xchg
mov
out
rol
stos
stos
test
fcom
popa
icebp
imul
adc
fsub
icebp
ins
sub
daa
adc
xor
out
(bad)
sbb
das
pop
mov
mov
jg
mov
das
xor
loopne
mov
fcmovbe
into
dec
stos
stos
int
fcom
popa
icebp
mov
xor
iret
(bad)
out
cmps
mov
fcmovbe
into
jae
inc
xor
jg
nop
xor
push
xlat
mov
out
shl
daa
das
neg
das
xor
inc
call
into
sbb
lods
mov
push
xor
mov
xor
daa
mov
into
dec
iret
cmp
out
jbe
pushf
adc
out
mov
into
dec
dec
das
pop
sbb
pop
sbb
pop
sbb
shl
daa
mov
fldcw
stos
call
lods
(bad)
ror
out
xchg
add
daa
cmps
leave
xor
cmps
mul
xchg
mov
and
gs
pop
fs
ins
xor
jg
mov
das
xor
push
ror
out
les
cwde
shl
sbb
mov
into
dec
dec
pop
in
pop
daa
(bad)
adc
das
mov
add
xor
daa
(bad)
pop
sub
push
ror
out
movs
mov
fcmovbe
into
and
cld
pop
fs
push
xor
iret
arpl
mov
ror
sbb
pop
sbb
das
xor
push
sbb
sbb
xor
daa
mov
into
dec
je
xchg
dec
inc
in
pop
daa
mov
into
dec
iret
imul
ror
sbb
pop
adc
xor
add
fcom
xor
daa
les
xor
fidivr
stos
test
fcom
popa
icebp
jp
xor
lahf
mov
(bad)
nop
mov
cmps
test
add
daa
inc
xor
xchg
mov
out
(bad)
repnz
das
into
lods
adc
out
mov
sbb
movs
mov
fcmovbe
into
repnz
(bad)
(bad)
scas
stos
pop
in
sar
shl
sub
dec
scas
retf
aaa
jl
dec
lods
jb
cmps
mov
xlat
add
scas
call
(bad)
sub
das
mov
out
xlat
add
scas
call
mov
daa
das
mov
in
pop
and
mov
sbb
fldenv
xchg
sbb
fstp
scas
(bad)
shl
leave
sub
ds
jb
mov
jae
(bad)
mov
daa
das
mov
push
daa
das
add
movs
push
sub
nop
(bad)
fistp
pop
aas
jg
jmp
adc
xor
das
cmps
rcr
push
xor
fcomp
push
nop
push
xchg
arpl
xor
ja
push
sub
das
mov
(bad)
pop
and
nop
push
xchg
arpl
xor
nop
jp
xchg
arpl
xor
daa
add
daa
jl
scas
(bad)
sub
scas
jb
xor
sub
and
ja
fisubr
daa
das
mov
sbb
ror
das
pop
sbb
(bad)
adc
scas
fsubp
add
xor
jns
mov
(bad)
xlat
popa
dec
iret
pop
add
daa
jns
inc
push
das
xor
jl
repnz
scas
retf
cmp
xor
cmps
pop
xor
je
xchg
jp
mov
pusha
xor
fild
leave
nop
loopne
mov
(bad)
scas
stos
mov
fcom
mov
stc
fcom
jno
daa
das
mov
out
mov
into
dec
dec
dec
in
pop
daa
(bad)
repnz
das
mov
popf
mov
xor
cmps
fdiv
das
(bad)
out
jmp
out
(bad)
mov
(bad)
es
ins
cmp
test
(bad)
ror
out
and
aaa
pop
das
xor
mov
cmps
imul
out
fiadd
stos
(bad)
stc
fcom
jno
daa
das
mov
out
mov
into
dec
jno
pop
ss
das
cmp
push
sbb
fidiv
ffree
ror
icebp
adc
xor
movs
jmp
adc
pop
sub
xchg
out
out
rol
sti
push
sbb
push
icebp
pop
int3
and
xor
int3
test
fnstcw
push
in
mov
sbb
(bad)
mov
dec
jo
ins
adc
scas
idiv
adc
xor
loope
pop
sbb
jle
xor
scas
div
and
scas
call
xor
jne
adc
das
inc
fs
gs
(bad)
bound
xor
movs
jmp
cwde
sar
shl
cmps
div
lock
stos
stos
xor
fcom
popa
icebp
sbb
sbb
xor
sahf
and
(bad)
loopne
aad
xor
stc
gs
mov
out
(bad)
into
sub
das
mov
das
(bad)
mov
daa
das
mov
daa
das
xor
and
icebp
mov
sbb
mov
loopne
mov
into
dec
dec
ja
pop
daa
mov
into
dec
iret
pop
sbb
lods
cmc
or
scas
add
daa
xchg
cmp
daa
das
test
fisubr
jmp
mov
jg
xchg
xor
push
fistp
pop
daa
mov
into
dec
iret
stos
add
daa
lods
cmc
adc
outs
add
daa
xchg
cmp
daa
das
test
fisubr
jmp
mov
jg
inc
adc
xor
adc
xor
mov
sub
daa
add
daa
xchg
push
sbb
das
test
fidivr
movs
daa
iret
into
out
inc
imul
daa
iret
into
out
(bad)
into
sub
das
mov
aaa
rol
cmp
mov
(bad)
ror
dec
dec
push
out
pop
daa
mov
into
dec
iret
repz
daa
lods
cmc
or
scas
stos
(bad)
sar
sbb
xchg
cmp
daa
das
test
fisubr
jmp
mov
jg
xlat
adc
daa
pop
adc
ins
xor
jg
mov
jecxz
fldcw
das
xor
mov
sub
(bad)
pop
daa
mov
into
dec
iret
mov
cmc
adc
out
pop
daa
mov
into
dec
iret
scas
add
daa
lods
cmc
adc
stos
rol
sar
sbb
xchg
cmp
daa
das
test
fisubr
pop
adc
das
xor
mov
xchg
xor
fcom
data16
repz
stos
xchg
xor
fcom
data16
xor
and
icebp
jae
stos
stos
xor
fcom
popa
icebp
add
cmp
(bad)
push
xor
sahf
and
(bad)
loopne
aad
xor
stc
gs
mov
out
(bad)
into
sub
das
mov
das
inc
jp
gs
mov
out
(bad)
fisubr
daa
das
mov
das
cmps
shr
cmps
div
xchg
xor
sahf
and
(bad)
loopne
aad
xor
stc
gs
mov
out
(bad)
mov
daa
das
mov
das
inc
sub
gs
mov
out
(bad)
call
(bad)
push
sub
das
mov
daa
das
xor
and
jno
iret
jae
stos
stos
xor
fcom
popa
icebp
mov
jmp
cwde
sar
adc
fcom
popa
jno
repz
stos
stos
xor
fcom
popa
icebp
sbb
xor
movs
jmp
icebp
cmp
xor
sahf
and
(bad)
loopne
aad
xor
stc
gs
mov
out
(bad)
or
daa
das
mov
das
inc
xor
gs
mov
out
(bad)
push
sub
das
mov
das
(bad)
shr
daa
das
mov
daa
das
xor
and
jno
iret
jae
stos
stos
xor
fcom
popa
icebp
es
xor
movs
jmp
mov
ror
mov
out
jmp
xor
mov
scas
test
das
xor
xchg
xor
fcom
data16
repz
stos
xchg
xor
fcom
data16
mov
jmp
icebp
pop
pop
xor
sahf
and
(bad)
loopne
aad
xor
stc
gs
mov
out
(bad)
stos
sub
das
mov
das
inc
out
les
mov
out
(bad)
mov
daa
das
mov
das
scas
fild
sbb
xor
sahf
and
(bad)
loopne
aad
xor
stc
gs
mov
out
(bad)
push
daa
das
mov
das
(bad)
sub
das
mov
daa
das
xor
and
icebp
and
xor
sahf
dec
xor
daa
mov
loopne
mov
into
dec
dec
ja
pop
daa
mov
into
dec
iret
rcr
sbb
lods
cmc
or
in
pop
daa
mov
into
dec
iret
and
sbb
lods
cmc
adc
pop
sbb
pop
sbb
pop
sbb
das
jno
iret
cmps
sbb
in
ror
cwde
loope
sbb
mov
into
dec
iret
and
daa
inc
xor
js
xchg
call
lods
fcomi
into
out
retf
sbb
in
ror
icebp
pop
add
sbb
out
jno
and
test
cmps
aam
retf
stos
xor
dec
cwde
rcl
leave
out
shl
nop
loopne
xchg
test
ror
sbb
fnstenv
sbb
sbb
adc
mov
mov
pushf
cmps
aam
out
call
xor
sbb
sbb
(bad)
or
fcom
mov
neg
xor
dec
das
out
daa
mov
xchg
into
out
aas
pop
sbb
shl
out
xor
dec
sub
sbb
mov
into
dec
dec
sub
daa
inc
test
gs
pop
sbb
das
mov
(bad)
retf
movs
jmp
adc
and
jno
xor
stos
stos
int
fcom
popa
xchg
mov
jg
and
cs
nop
loopne
test
stos
stos
test
fcom
popa
icebp
push
aad
out
jmp
adc
and
jno
repz
stos
stos
int
fcom
popa
icebp
mov
xor
stos
stos
test
fcom
popa
xchg
mov
jg
(bad)
icebp
ror
into
out
stos
test
loope
xlat
mov
sbb
shl
xor
xor
movs
jmp
cwde
loopne
xor
daa
call
into
pop
daa
das
xor
mov
xor
daa
lods
mov
push
xor
mov
xor
daa
mov
into
dec
iret
xor
out
jbe
pushf
adc
out
mov
into
dec
dec
das
pop
sbb
pop
sbb
pop
sbb
shl
daa
(bad)
into
xor
das
cmp
sub
into
lods
(bad)
ror
out
out
sbb
daa
cmps
leave
sbb
cmps
mul
xchg
(bad)
int3
out
inc
and
gs
pop
fs
ins
xor
jg
stos
or
xor
pop
aam
out
les
cwde
loopne
or
daa
mov
into
dec
dec
pop
in
pop
daa
(bad)
sbb
daa
das
mov
add
xor
daa
mov
pop
aam
out
movs
mov
(bad)
into
and
shl
mov
es
xor
fbstp
sbb
jg
sbb
cmps
leave
xor
cmps
div
xor
stos
stos
mov
dec
iret
out
sbb
inc
xor
repz
stos
stos
mov
icebp
jb
into
out
jmp
and
shl
sbb
stos
neg
daa
das
mov
out
jl
test
jecxz
cmp
sub
pop
sbb
call
stos
aam
out
(bad)
jle
daa
das
mov
pop
inc
xor
stos
stos
lods
in
shl
xchg
mov
jge
fcom
mov
in
rcr
push
or
repz
iret
xor
sbb
jg
adc
ins
xor
xlat
sbb
or
dec
and
pop
daa
(bad)
into
xor
das
mov
out
les
dec
scas
in
xor
je
test
adc
into
out
jmp
repnz
call
movs
in
rcr
add
ror
call
xor
jno
xor
das
neg
das
xor
stos
stos
test
fcom
popa
icebp
out
push
xor
scas
xlat
xor
scas
call
xchg
in
rcr
daa
push
das
xor
xchg
mov
out
(bad)
xor
das
mov
out
sub
sbb
push
in
xor
mov
aaa
jl
dec
lods
jb
cmps
ror
js
call
(bad)
jb
xor
scas
push
out
and
push
push
das
xor
and
(bad)
dec
xor
das
mov
aas
add
xor
ror
mov
dec
iret
prefetcht2
daa
rol
jnp
sbb
ss
das
(bad)
sbb
das
addr16
jno
sbb
pop
sbb
aas
sbb
daa
cmps
div
jns
cmps
comiss
nop
(bad)
(bad)
nop
(bad)
fistp
dec
jno
jb
daa
das
addr16
dec
or
sbb
clc
fidiv
aam
daa
aas
xor
iret
mov
data16
push
imul
call
pop
sbb
pop
cmp
fiadd
xor
scas
jmp
mov
sbb
dec
sar
sbb
mov
into
dec
jno
(bad)
xor
das
pop
sbb
pop
cmp
out
jg
pop
xchg
ror
call
xor
cmps
shl
scas
mov
das
xor
jns
mov
das
xor
jns
repnz
scas
retf
sub
pop
pusha
mov
dec
sbb
dec
neg
xor
inc
and
pop
sti
ins
xor
add
pop
inc
daa
das
mov
sbb
xor
daa
rol
xchg
icebp
push
push
xor
sub
xor
shr
pop
daa
mov
scas
xor
das
mov
aas
mov
xor
xor
fcomp
sbb
jecxz
das
xor
push
push
nop
push
call
repnz
scas
retf
sub
cmps
push
adc
jno
(bad)
cmp
daa
fcom
nop
(bad)
mov
sbb
pop
sbb
pop
sbb
pop
sbb
pop
mov
das
xor
inc
xor
inc
and
sbb
xor
scas
call
xor
shl
sbb
add
adc
mov
sbb
add
adc
lods
pop
daa
(bad)
dec
xor
das
pop
sbb
add
adc
pop
xor
das
pop
sbb
add
adc
scas
pop
daa
(bad)
outs
xor
das
pop
sbb
add
adc
movs
pop
daa
(bad)
jle
daa
das
mov
mov
cs
rol
mov
pop
xor
dec
cs
rol
mov
pop
xor
dec
cs
rol
test
icebp
ds
xor
dec
cs
rol
cs
xor
scas
fild
jmp
jo
add
adc
test
daa
mov
sbb
add
adc
lods
pop
daa
(bad)
sar
daa
das
pop
sbb
add
adc
loop
daa
das
pop
sbb
add
adc
repnz
das
mov
shl
inc
out
in
data16
in
lods
cmps
fsub
daa
das
pop
in
sbb
test
fstp
das
xor
dec
aas
mov
daa
inc
int
adc
lods
pop
daa
(bad)
or
daa
das
pop
in
sbb
cmp
das
xor
dec
aas
mov
daa
inc
int
adc
es
das
mov
gs
xor
dec
ror
sub
mov
sbb
xlat
pop
sbb
mov
or
rol
retf
sbb
into
sub
mov
pop
sbb
mov
mov
pop
or
rol
out
or
sbb
into
sub
mov
sbb
lahf
pop
sbb
mov
gs
pop
or
rol
mov
or
sbb
into
sub
mov
sbb
mov
sbb
or
rol
mov
or
sbb
call
mov
gs
fnstcw
das
xor
dec
aas
mov
daa
inc
int
adc
data16
daa
das
outs
fidiv
aam
retf
cmp
cwde
fisttp
cmp
xor
hlt
jae
fcomp
icebp
mov
into
out
jmp
xor
lods
int
fsubr
pop
daa
inc
xor
push
pop
sbb
scas
(bad)
pop
cmp
xor
inc
adc
daa
inc
xor
adc
scas
pop
daa
inc
xor
push
xor
popa
xchg
(bad)
xlat
sbb
pop
sbb
pop
sbb
scas
popa
jno
lock
dec
into
jmp
das
fldenv
add
xor
dec
das
into
sub
mov
sbb
popa
jae
movs
je
or
rcr
inc
and
dec
dec
jmp
pop
daa
inc
jmp
gs
pop
sbb
daa
pop
sbb
mov
loope
xlat
mov
sub
mov
sbb
into
sub
(bad)
jo
dec
mov
je
or
rcr
inc
and
dec
dec
repz
pop
daa
inc
jmp
gs
pop
sbb
jmp
sbb
mov
gs
pop
sbb
pop
sbb
pop
sbb
cs
sbb
pop
sbb
xor
daa
inc
xor
inc
cmp
(bad)
ss
daa
das
mov
jae
rol
inc
or
sbb
into
sub
mov
sbb
into
sub
(bad)
jo
dec
aas
pop
das
and
inc
sbb
das
xor
inc
jmp
das
pop
sbb
ja
sbb
mov
gs
mov
pop
pop
xor
dec
das
into
sub
mov
sbb
into
sub
(bad)
jo
dec
aas
pop
cmp
inc
sbb
das
xor
aaa
jmp
das
pop
sbb
xor
daa
mov
sbb
sbb
sbb
sbb
data16
pop
or
xor
daa
inc
xchg
sbb
das
pop
xor
xor
ja
inc
gs
pop
ret
cld
ins
xor
(bad)
sar
mov
rol
daa
rol
aaa
inc
dec
sbb
das
pop
cmps
daa
das
xor
inc
xor
daa
jg
xchg
std
ins
xor
hlt
jae
dec
das
fnstenv
xor
into
sub
mov
sbb
into
sub
(bad)
jae
dec
dec
pop
jge
test
sbb
inc
and
dec
dec
repz
pop
daa
inc
mov
gs
pop
sbb
pop
adc
test
mov
lods
or
sbb
jmp
daa
inc
xor
xor
ja
add
std
ins
xor
inc
jb
daa
das
into
sub
mov
sbb
xor
out
sbb
out
dec
xchg
pop
daa
inc
sbb
sub
xor
daa
inc
dec
jno
das
mov
dec
repz
pop
daa
inc
mov
gs
pop
sbb
and
mov
jnp
xor
dec
das
into
sub
mov
sbb
into
sub
(bad)
jae
dec
add
sbb
inc
or
sbb
xor
daa
inc
xor
cmps
jg
(bad)
xor
cmc
jae
dec
das
(bad)
add
xor
iret
add
xor
adc
scas
pop
daa
inc
xor
adc
pop
daa
inc
and
inc
xlat
sbb
das
pop
jno
das
xor
das
xor
inc
jmp
daa
inc
jmp
gs
pop
sbb
mov
mov
loope
enter
cmps
div
rol
daa
rol
aaa
inc
mov
daa
das
pop
out
das
xor
xor
dec
das
xor
ja
(bad)
ret
cld
ins
xor
(bad)
jbe
daa
das
xchg
ins
xchg
jae
rol
daa
rol
aaa
inc
push
jno
xor
dec
in
xor
daa
inc
xor
daa
jg
pop
std
ins
xor
hlt
jae
dec
das
fst
add
xor
dec
das
into
sub
mov
sbb
into
sub
(bad)
jo
dec
aas
pop
in
das
xor
xor
dec
dec
pop
sbb
das
popa
jno
cmc
jae
dec
cmc
jmp
or
lods
pop
daa
inc
xor
adc
scas
pop
daa
inc
xor
adc
pop
daa
inc
and
inc
jnp
daa
das
pop
mov
daa
das
xor
sub
pop
daa
inc
jmp
gs
pop
sbb
mov
sbb
mov
sbb
sbb
sbb
sbb
gs
pop
add
xor
daa
inc
mov
or
ja
in
(bad)
gs
pop
sbb
ins
xor
sub
adc
daa
mov
sbb
sbb
sbb
sbb
gs
pop
add
xor
daa
inc
repnz
das
pop
or
ja
mov
sbb
ins
xor
sub
adc
daa
mov
loope
xlat
mov
sub
mov
sbb
into
sub
(bad)
jae
dec
aaa
pop
xor
xor
daa
inc
and
dec
dec
repz
pop
daa
inc
xor
gs
pop
sbb
push
xor
test
scas
pop
daa
inc
xor
adc
scas
pop
daa
inc
xor
adc
pop
daa
inc
sub
inc
les
daa
das
pop
or
ja
in
(bad)
gs
pop
sbb
ins
xor
sub
adc
daa
mov
xchg
pop
sbb
sbb
sbb
sbb
data16
pop
push
dec
mov
sbb
inc
cwde
sbb
das
pop
pop
dec
das
xor
gs
pop
jecxz
ins
xor
mov
test
icebp
jl
into
out
xlat
sbb
scas
call
into
inc
jns
repnz
scas
retf
aas
jns
cmps
adc
add
scas
call
xor
push
daa
fnstenv
rcl
into
nop
loope
ffree
gs
addr16
cmp
into
out
jmp
mov
scas
xlat
sbb
scas
call
cmp
push
das
xor
das
adc
daa
inc
xor
adc
scas
pop
daa
inc
xor
push
xor
popa
xchg
(bad)
xlat
sbb
pop
sbb
pop
sbb
scas
popa
jno
lock
dec
into
jmp
das
fxch
pop
das
xor
dec
das
into
sub
mov
sbb
popa
jae
movs
je
or
rcr
inc
and
dec
dec
out
pop
daa
inc
jmp
gs
pop
sbb
mov
sbb
mov
test
sbb
into
sub
mov
sbb
into
sub
(bad)
jo
dec
add
sbb
movs
je
or
rcr
inc
and
dec
dec
repz
pop
daa
inc
jmp
gs
pop
sbb
ja
sbb
mov
gs
pop
sbb
pop
sbb
pop
sbb
cs
sbb
pop
sbb
xor
daa
inc
xor
inc
cmp
(bad)
stos
cmp
das
mov
jae
rol
fidiv
xor
dec
das
into
sub
mov
sbb
into
sub
(bad)
jae
dec
dec
pop
jge
cmp
dec
sub
cdq
ja
in
(bad)
gs
pop
pushf
std
ins
xor
(bad)
fiadd
daa
das
xchg
icebp
mov
ss
sbb
inc
dec
ret
gs
pop
sbb
xor
daa
jg
mov
das
xor
cmc
jae
dec
das
pop
pop
es
xor
adc
lods
pop
daa
(bad)
cmps
push
daa
das
mov
mov
jae
adc
jae
inc
xor
xor
fcomp
fld
das
xor
xor
jae
inc
jg
daa
das
into
sub
mov
sbb
dec
sbb
inc
xor
adc
scas
pop
daa
inc
xor
adc
pop
daa
inc
sbb
sub
pop
arpl
xor
gs
pop
pushf
std
ins
xor
(bad)
pushw
daa
das
xchg
cdq
xchg
nop
fild
leave
nop
loopne
xor
adc
scas
pop
daa
inc
xor
adc
pop
daa
inc
sbb
and
daa
das
xor
das
mov
dec
repz
pop
daa
inc
mov
gs
pop
sbb
aaa
sbb
mov
popa
rcl
into
jae
rol
daa
rol
aaa
inc
mov
daa
das
pop
ja
cmp
sbb
inc
xor
daa
jg
dec
std
ins
xor
hlt
jae
dec
das
fld
cmp
xor
dec
das
into
sub
mov
sbb
into
sub
(bad)
jo
dec
aas
pop
jle
test
sbb
inc
repnz
das
pop
sbb
das
popa
jno
cmc
jae
dec
cmc
jmp
xor
sbb
fsubr
daa
das
(bad)
(bad)
scas
push
nop
loopne
xor
adc
scas
pop
daa
inc
xor
adc
pop
daa
inc
and
das
xor
dec
(bad)
xor
daa
inc
push
jno
das
xor
cmp
pop
daa
inc
jmp
gs
pop
sbb
jae
sbb
mov
test
pop
sbb
sbb
sbb
sbb
data16
pop
or
pop
mov
xchg
xor
dec
das
xor
ja
aaa
ret
gs
pop
ret
cld
ins
xor
(bad)
adc
daa
das
xchg
lea
add
mov
rol
aaa
inc
aad
daa
das
pop
jmp
das
xor
inc
xor
daa
jg
addr16
ins
xor
hlt
jae
dec
das
fpatan
cmp
xor
dec
das
into
sub
mov
sbb
into
sub
(bad)
jo
dec
aas
pop
in
das
xor
das
xor
dec
xor
daa
das
popa
jno
div
dec
cmc
jmp
xor
sbb
xor
adc
scas
pop
daa
inc
xor
adc
pop
daa
inc
sub
das
xor
dec
add
dec
das
xor
gs
pop
sbb
ins
xor
sub
sub
daa
mov
out
movs
push
xor
dec
das
into
sub
mov
sbb
into
sub
(bad)
jae
dec
aaa
pop
xor
pop
or
ja
in
(bad)
gs
pop
sbb
ins
xor
sub
sub
daa
mov
xchg
pop
sbb
sbb
sbb
sbb
gs
pop
add
pop
inc
dec
cmp
daa
scas
popa
jno
lock
dec
cs
daa
inc
xor
daa
das
fstp
cmp
xor
dec
das
into
sub
mov
sbb
into
sub
(bad)
jo
dec
cmp
daa
das
xor
xor
dec
xor
daa
scas
popa
jno
div
dec
aad
pop
daa
inc
xor
jmp
pop
daa
mov
shl
ret
into
inc
jns
repnz
scas
retf
aas
jl
dec
cwde
or
leave
out
shl
sbb
xor
daa
inc
xor
inc
xor
das
xor
mov
jmp
mov
daa
das
xor
jns
cmp
xor
ds
xor
(bad)
(bad)
loope
enter
cmps
not
(bad)
(bad)
popa
out
aas
pop
and
ins
xor
das
xor
fsubr
push
inc
xor
push
rcr
(bad)
ins
xor
div
fcomp
out
daa
fld
rcl
call
icebp
ins
add
xor
loope
rol
adc
sbb
scas
fldenv
ror
call
mov
shl
jp
cld
cmps
ret
cmp
daa
das
bound
cwde
pop
pop
inc
cmps
rcr
cmps
neg
daa
inc
xchg
test
daa
ror
out
(bad)
outs
add
das
(bad)
cmp
xor
mov
cmps
ins
out
push
into
sbb
pop
movs
xchg
ins
xor
jg
das
aas
das
xor
loope
dec
out
pop
and
lahf
jae
stos
stos
xor
fcom
popa
icebp
ds
xor
cmps
push
into
sbb
pop
in
xchg
ins
xor
jg
sbb
das
xor
ss
and
pushf
daa
ror
out
(bad)
fimul
daa
das
mov
fbld
ds
sub
das
into
out
jg
xlat
xor
xor
ss
jp
gs
mov
out
mov
or
sbb
mov
fcom
into
dec
iret
(bad)
sbb
scas
dec
out
pop
and
sahf
jae
stos
stos
xor
fcom
popa
icebp
scas
cmp
sbb
jmp
inc
or
sbb
mov
fcom
into
dec
iret
inc
sbb
scas
dec
out
pop
and
sahf
jae
stos
stos
xor
fcom
popa
icebp
jb
xor
cmps
push
into
adc
pop
sbb
das
into
out
jg
daa
xor
xor
ss
adc
daa
ror
out
(bad)
push
push
daa
das
mov
fsub
inc
or
sbb
mov
fcom
into
dec
iret
aas
sbb
cmps
shr
cmps
mov
fnop
into
nop
loope
dec
out
pop
and
popf
jae
stos
stos
xor
fcom
popa
icebp
retf
sbb
pop
sbb
call
shl
pushf
daa
ror
out
inc
xor
ret
ror
jno
div
dec
xchg
sbb
jno
data16
fld
ror
jno
or
sbb
fild
sbb
lods
cmc
xor
stos
leave
out
sar
out
jno
shl
sub
dec
scas
retf
jo
inc
adc
cmps
leave
xor
cmps
not
aas
das
xor
(bad)
cmp
fcom
mov
das
es
ins
das
inc
xor
jnp
sbb
jo
inc
jp
xor
cwde
retf
pop
cmp
daa
jl
dec
cdq
sub
pop
sbb
xor
daa
inc
inc
stos
gs
mov
out
(bad)
sbb
daa
das
(bad)
cmp
das
xor
mov
fmul
out
scas
mov
(bad)
into
sbb
pop
mov
ins
xor
jg
out
das
xor
fsubr
sbb
mov
rcl
into
dec
iret
retf
and
daa
scas
mov
(bad)
into
sbb
pop
(bad)
xchg
ins
xor
jg
shl
das
xor
ror
mov
out
jmp
into
out
pop
and
pushf
jae
stos
stos
fsubr
fcom
popa
icebp
xchg
xor
cmps
xchg
ret
shl
ss
sub
retf
out
(bad)
mov
daa
das
mov
aam
into
out
pop
and
pushf
jae
stos
stos
fsubr
fcom
popa
icebp
dec
cmp
sbb
shl
ins
ss
jle
gs
mov
out
(bad)
bound
das
mov
fbld
sar
ins
ss
pop
stos
gs
mov
out
mov
movs
aam
into
out
pop
and
pushf
jae
stos
stos
fsubr
fcom
popa
icebp
cmp
sbb
sar
ins
ss
fwait
stos
gs
mov
out
(bad)
into
or
aam
into
out
pop
and
pushf
jae
stos
stos
fsubr
fcom
popa
icebp
ret
sbb
stos
shr
fcom
mov
loope
sar
stos
gs
mov
out
(bad)
mov
aam
into
out
pop
and
fwait
jae
stos
stos
fsubr
fcom
popa
icebp
cmp
sbb
sar
ins
ss
adc
retf
out
(bad)
mov
imul
jg
or
xlat
fcom
nop
mov
cmps
div
(bad)
jae
dec
mov
enter
mov
aaa
cmps
mov
rcl
into
cdq
call
adc
xchg
fldz
fcom
xor
mov
scas
fistp
xlat
fcom
nop
mov
cmps
div
xlat
cmps
imul
cld
inc
xor
(bad)
jae
iret
outs
repnz
lods
cmc
adc
sar
fldcw
stos
jmp
das
xor
fsubr
ds
out
sub
int
fcom
or
mov
scas
mov
fcmovnbe
into
and
stos
pop
sbb
das
neg
xchg
jnp
daa
das
(bad)
jmp
sar
loope
shl
adc
jae
stos
stos
int
fcom
popa
icebp
cmps
aaa
xor
movs
jmp
call
inc
xor
outs
sub
daa
xchg
repnz
fcmovnu
(bad)
lock
push
sti
nop
div
fisub
mov
(bad)
into
push
mov
lods
or
mov
sbb
xchg
jno
div
stos
stos
int
fcom
popa
icebp
xor
xor
scas
fistp
jmp
xchg
jno
div
stos
stos
int
fcom
popa
icebp
fidivr
xor
movs
jmp
repnz
daa
das
mov
out
(bad)
adc
jnp
xor
shl
nop
loope
mov
(bad)
into
dec
dec
aas
call
in
ror
dec
iret
xchg
sbb
inc
xor
gs
mov
out
(bad)
dec
daa
das
mov
xor
into
dec
iret
cmp
daa
mov
into
call
leave
out
jg
jecxz
ins
xor
jg
arpl
das
xor
stos
stos
int
fcom
popa
icebp
cmp
sbb
pop
in
jmp
xchg
mov
jg
arpl
and
fldcw
stos
push
sbb
das
mov
out
out
xor
iret
repz
sbb
jbe
pushf
(bad)
into
out
ffreep
jmp
sar
loope
sar
push
mov
rol
mov
jae
dec
retf
daa
mov
into
dec
iret
das
sbb
lods
cmc
or
sbb
mov
fnop
into
dec
iret
sbb
sbb
mov
into
dec
iret
sbb
int
ror
repnz
cdq
fwait
sub
out
rcr
ins
aaa
movs
mov
rcl
into
fbld
shl
repnz
mov
call
inc
enter
jmp
sar
loope
sar
ja
out
gs
mov
out
(bad)
dec
(bad)
das
mov
aaa
mov
into
dec
iret
jmp
sbb
cmps
mov
rcl
into
xchg
call
stos
xor
xor
fsub
pop
pop
iret
iret
and
daa
cmps
mov
(bad)
into
cwde
rol
in
ror
dec
fcomp
fldcw
das
xor
jg
outs
xor
xor
js
movs
rcl
into
out
push
sbb
bound
daa
das
mov
out
inc
xor
xchg
fcmovne
out
inc
shr
das
pop
sbb
fld
das
xor
sti
and
daa
mov
into
dec
je
test
(bad)
into
icebp
fsubp
into
out
jmp
nop
in
icebp
push
mov
rol
jp
xor
cmps
rcr
daa
das
pop
pop
push
xor
icebp
adc
xor
jle
pushf
jecxz
shr
jl
repz
lahf
dec
and
daa
(bad)
mov
daa
das
bound
xchg
xchg
sub
or
fimul
sbb
das
cs
mov
daa
cmps
mov
leave
ror
adc
pop
and
sbb
inc
xor
cmp
sbb
fiadd
bound
xchg
sub
and
pop
daa
mov
jmp
lods
retf
nop
in
popa
test
fnstcw
das
xor
das
xor
dec
mov
adc
daa
das
fldcw
ss
xor
(bad)
sbb
scas
fcmovu
add
xor
xor
stos
stos
xor
shl
push
daa
(bad)
aaa
das
xor
inc
mov
pushf
xchg
ror
ja
cmp
aaa
adc
out
das
ds
cmp
xor
movs
sub
gs
cmp
add
pop
daa
shl
in
sub
daa
(bad)
xchg
or
push
and
out
(bad)
repz
ss
xor
shr
lods
neg
aad
mov
xor
shl
repnz
inc
or
call
push
inc
aas
pusha
nop
out
fcmovnu
(bad)
lock
push
sti
nop
div
fbld
movs
and
ret
cmps
stos
xor
shl
xchg
mov
adc
outs
out
repnz
das
xor
mov
das
fnstcw
xor
xor
push
and
pushf
mov
into
out
jmp
into
sub
shl
mov
jae
dec
jecxz
pop
daa
mov
into
dec
iret
and
pop
xor
mov
into
dec
stos
stos
xor
shl
outs
aas
xor
stos
stos
scas
cmc
fcom
popa
icebp
popa
jmp
fcom
popa
icebp
out
call
sub
mov
into
dec
iret
sub
sbb
inc
xor
adc
xor
cmps
fadd
aas
daa
das
pop
movs
jmp
jno
mov
dec
jmp
jno
data16
fnstcw
call
sbb
push
das
xor
aam
xchg
jno
div
dec
mov
test
xchg
icebp
push
cmp
sbb
in
mov
out
sbb
gs
mov
das
xor
inc
mov
jmp
jno
mov
dec
jmp
adc
xor
xor
mov
xor
aam
xchg
jno
div
dec
mov
test
mov
cmp
sbb
fsub
fsub
xor
aam
mov
fimul
pop
sbb
pop
sbb
pop
sbb
das
jno
daa
mov
sbb
mov
sbb
cmps
je
dec
sub
popa
icebp
mov
xor
loopne
mov
sub
xor
call
sub
xor
lods
stc
out
scas
or
jae
mov
mov
out
rol
repz
inc
xor
inc
sar
das
into
ins
xchg
(bad)
not
daa
das
mov
cmp
sbb
push
out
das
xor
call
ss
xor
lods
stc
out
scas
or
jae
mov
mov
out
rol
stos
sbb
inc
xor
inc
sar
das
into
ins
xchg
(bad)
pop
push
daa
das
into
ins
xchg
(bad)
cmp
daa
das
mov
push
das
xor
les
into
xchg
mov
cmps
repnz
and
jmp
sbb
aad
sub
fs
mov
data16
das
pop
sbb
xchg
sbb
cmps
je
dec
sub
sbb
inc
xor
sahf
and
sbb
sti
xor
daa
call
xor
dec
das
(bad)
(bad)
div
pop
fwait
sub
sbb
cmps
jmp
fisub
xor
daa
das
neg
xor
daa
mov
mov
sbb
sbb
sbb
pop
sbb
pop
sbb
pop
sbb
in
jno
hlt
jae
dec
into
jmp
aas
xor
test
scas
pop
daa
inc
movs
test
dec
das
fstp
das
xor
(bad)
xchg
stos
fcom
mov
and
inc
adc
das
or
daa
das
mov
or
shl
add
das
xor
div
ja
push
adc
das
mov
out
les
fld
das
xor
jg
mov
stos
popf
neg
shl
ror
mov
hlt
fcom
popa
xchg
mov
jg
jne
ins
xor
div
dec
jg
pop
daa
inc
xor
daa
scas
fst
jecxz
cmp
push
sub
sbb
call
xor
daa
das
xor
mov
into
out
neg
shr
into
out
inc
xor
inc
(bad)
das
pop
sbb
fst
sub
xor
cmps
cmp
mov
ror
dec
dec
das
pop
sbb
inc
pop
daa
inc
xor
(bad)
ficom
das
popa
icebp
dec
and
sbb
pop
in
es
xor
rol
mov
and
sbb
aaa
mov
mov
in
or
std
ja
xchg
daa
das
pop
sbb
pop
sbb
jnp
sbb
es
ins
bnd
inc
out
in
and
jb
aam
retf
pop
xor
daa
jl
dec
cwde
aaa
or
jge
das
xor
aaa
and
sub
sbb
das
fcom
das
das
xor
xor
sub
or
es
xor
adc
sbb
das
ds
mov
xor
sbb
xor
daa
and
lock
adc
gs
xor
mov
inc
(bad)
into
sub
fwait
jae
iret
adc
out
cmps
mov
fcmovbe
into
nop
fild
leave
nop
loopne
ffree
gs
into
lods
retf
ror
out
or
out
lods
cmc
or
sar
ja
test
fcmovbe
into
icebp
and
sbb
out
ds
mov
stos
stc
in
shl
adc
pop
daa
mov
fst
mov
out
stos
jmp
icebp
and
xor
push
loope
cmp
xor
lods
fstp
fcom
sbb
inc
dec
cs
out
stos
in
in
shl
mov
add
rcr
into
dec
dec
das
pop
sbb
sbb
data16
fnstenv
rol
sbb
lods
or
xchg
ins
xor
sub
nop
jge
ins
xor
cmps
fadd
and
das
mov
inc
fwait
jae
daa
scas
or
xchg
ins
xor
push
sub
fadd
into
out
scas
or
xchg
ins
xor
sub
into
sub
fwait
jae
iret
push
xlat
out
jbe
bound
das
xor
loopne
xor
das
and
daa
(bad)
ss
das
fadd
das
xor
push
push
ins
das
rol
cmp
daa
xchg
sub
das
(bad)
(bad)
scas
stos
fucom
fcom
mov
sbb
movs
je
scas
stos
leave
out
shl
sbb
mov
pop
sbb
inc
mov
sbb
add
sbb
rol
movs
mov
sbb
dec
mov
sbb
xchg
mov
sbb
cmp
adc
data16
ds
std
sub
sbb
into
ins
aaa
(bad)
rcl
(bad)
into
out
sub
gs
inc
or
xchg
mov
sbb
add
adc
lahf
and
daa
rol
xchg
cmp
out
das
into
ins
aaa
(bad)
scas
adc
or
xor
shl
nop
loopne
xchg
(bad)
into
sbb
xor
jg
xchg
sub
xor
fsubr
xor
jns
xor
scas
xlat
sbb
scas
call
xor
jg
sub
mov
sbb
ret
cmp
daa
scas
mov
fcom
into
sbb
pop
sbb
pop
dec
jmp
jae
(bad)
data16
das
into
sub
mov
sbb
sub
sbb
mov
daa
das
mov
fisubr
sar
out
stos
(bad)
in
shl
cdq
sbb
pop
daa
cs
mov
shl
sbb
mov
into
dec
fcomp
mov
gs
fstp
stos
cs
out
lods
stc
out
scas
or
call
pop
inc
(bad)
ins
xor
jl
out
ror
call
xor
xor
inc
add
gs
pop
sbb
out
sbb
rol
push
and
xor
daa
xchg
mov
daa
das
(bad)
(bad)
scas
stos
ftst
fcom
mov
out
shl
mov
jg
xor
ins
xor
jg
fwait
sub
xor
daa
das
xor
jg
sub
mov
cmp
daa
scas
mov
fcom
into
sbb
pop
sbb
pop
pop
jmp
jae
(bad)
adc
das
into
sub
mov
cmp
daa
mov
daa
das
mov
out
out
pop
cmps
adc
sbb
mov
aaa
pop
adc
inc
xor
clc
jae
dec
das
fnstcw
sub
xor
daa
das
fcomp
and
xor
mov
das
fisub
cdq
mov
fcom
into
xchg
mov
ror
and
pop
sbb
pop
(bad)
lock
xor
(bad)
rcl
daa
das
into
sub
mov
cmp
daa
(bad)
mov
daa
das
mov
daa
ror
out
movs
mov
fcom
into
and
fild
leave
nop
loopne
mov
fcom
into
dec
stos
stos
(bad)
in
shl
or
jae
stos
stos
(bad)
in
shl
mov
xor
movs
jmp
jno
das
xor
stos
stos
xor
fcom
popa
out
scas
nop
pop
daa
(bad)
into
adc
das
mov
es
out
pop
adc
inc
xor
clc
jae
dec
das
fnstenv
das
xor
adc
adc
das
fcom
and
xor
daa
mov
into
dec
stos
stos
(bad)
in
shl
or
jae
stos
stos
(bad)
in
shl
or
sbb
xor
stos
stos
xor
fcom
popa
out
add
adc
das
mov
es
out
pop
adc
inc
xor
clc
jae
dec
das
fstp
cs
xor
adc
scas
pop
daa
(bad)
sahf
adc
das
fdivr
fistp
leave
nop
loopne
mov
fcom
into
dec
stos
stos
(bad)
in
shl
test
jae
stos
stos
(bad)
in
shl
loop
xor
movs
jmp
jno
das
xor
stos
stos
xor
fcom
popa
out
pop
scas
pop
daa
(bad)
push
adc
das
mov
es
out
pop
adc
inc
xor
clc
jae
dec
das
fld
adc
scas
pop
daa
(bad)
jbe
daa
das
fsub
and
xor
lods
stc
out
scas
or
call
pop
sbb
out
daa
inc
xor
inc
daa
xor
fcomp
sbb
das
das
xor
and
sbb
stos
into
out
shl
repnz
xchg
stos
xor
fcom
into
and
push
push
adc
inc
xor
clc
jae
dec
das
fnstcw
das
das
xor
adc
scas
pop
daa
(bad)
loop
daa
das
fcomp
and
ror
out
cs
out
sub
mov
scas
call
into
out
mov
into
dec
dec
add
pop
daa
mov
into
dec
iret
idiv
sbb
lods
cmc
or
xor
daa
mov
into
dec
fcomp
adc
and
xor
fsubr
inc
cmp
pop
sbb
out
daa
inc
xor
mov
xor
fcomp
adc
and
xor
imul
out
shl
repnz
xchg
stos
xor
fcom
into
and
push
push
adc
inc
xor
stc
jae
dec
das
fnstenv
das
xor
adc
scas
pop
daa
(bad)
sub
daa
das
fcom
ror
out
cs
out
out
pop
cmps
adc
sbb
ds
mov
iret
out
push
repz
not
jg
pushf
rcl
into
out
inc
sbb
gs
mov
out
(bad)
adc
das
mov
aaa
xchg
pop
das
(bad)
(bad)
scas
stos
ftst
fcom
mov
out
call
pop
sbb
dec
das
xor
addr16
jno
data16
(bad)
mov
inc
xor
inc
xor
xchg
fcmovne
out
(bad)
xchg
sbb
das
mov
push
fwait
jae
daa
pop
jbe
sub
test
daa
lods
stc
out
scas
or
nop
in
xor
jge
jno
mov
sbb
call
and
xor
mov
into
dec
dec
sub
xor
xchg
fcmovne
out
(bad)
mov
das
mov
out
out
pop
cmps
adc
sbb
pop
sbb
shl
stos
mov
in
shl
xchg
fcmovne
out
(bad)
mov
sbb
shl
and
das
into
lods
rcl
into
out
push
xor
daa
rol
sub
sbb
sbb
data16
fldenv
daa
inc
xor
inc
xor
inc
xor
daa
outs
pop
cmp
sub
sbb
sar
pushf
ret
ror
out
stos
aad
fcom
mov
sbb
into
lods
rcl
into
out
fwait
xor
mov
shl
sbb
xor
bnd
mov
into
dec
je
mov
lods
rcl
into
out
(bad)
xchg
mov
jg
sbb
out
daa
rol
(bad)
sub
sbb
call
and
xor
and
pop
daa
xor
daa
cmps
leave
xor
cmps
div
inc
xor
sbb
jmp
lods
gs
pop
sbb
das
mov
mov
jmp
jae
rol
mov
sub
sbb
fcom
nop
mov
cmps
div
rol
pop
and
push
and
ins
das
(bad)
rcr
das
outs
inc
jl
repz
jp
cld
movs
ret
and
js
ins
das
nop
push
adc
xlat
mov
and
xor
sub
mov
aaa
es
loopne
xor
sbb
mov
gs
inc
adc
sbb
test
fld
(bad)
(bad)
nop
(bad)
xlat
mov
test
inc
adc
sbb
fwait
and
xor
adc
cmp
adc
scas
pop
daa
(bad)
pop
sbb
or
into
sub
mov
xor
out
shl
sub
mov
into
sub
mov
sbb
outs
xor
xor
rol
mov
sub
sbb
adc
cmps
adc
gs
xor
add
mov
sub
sbb
adc
cmps
adc
gs
xor
add
xchg
icebp
shr
sbb
es
pop
xlat
cmps
imul
cld
adc
icebp
mov
movs
sub
mov
xor
adc
aaa
xchg
cmp
scas
pop
daa
adc
xor
and
cwde
enter
daa
adc
add
and
and
pop
scas
pop
daa
pop
aaa
xchg
cmp
pop
daa
adc
cmp
movs
sub
mov
stos
nop
pop
daa
pop
aaa
xchg
cmp
scas
pop
daa
es
pop
and
push
and
iret
pop
xor
cwde
loopne
sub
daa
jo
inc
out
in
and
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
jp
cld
jbe
fldenv
loopne
push
cmp
pop
cmp
jg
sbb
lods
cmc
adc
pop
sbb
pusha
scas
push
cmp
fiadd
cs
inc
sbb
xlat
adc
xor
xchg
ss
pop
xor
fisttp
inc
jmp
xor
js
sbb
or
fcom
outs
shl
jbe
cmc
daa
aas
xor
or
and
daa
stos
xor
sbb
pop
fidiv
jecxz
xor
sbb
movs
gs
fcom
into
out
aad
mov
idiv
das
mov
ret
test
xchg
arpl
xor
sbb
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
aam
xor
daa
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
rcl
shr
mov
rcl
mov
xor
daa
