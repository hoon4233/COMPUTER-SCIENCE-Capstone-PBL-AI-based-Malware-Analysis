mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
inc
push
mov
lods
movs
fisubr
fdiv
sbb
test
and
sbb
xchg
jl
push
test
cmp
outs
lds
jo
mov
inc
xor
in
fwait
lds
inc
adc
push
test
dec
push
arpl
xchg
adc
cs
stos
pop
adc
into
sti
sbb
aad
shr
stos
cwde
inc
dec
(bad)
repnz
ins
jne
pop
(bad)
mov
jbe
mov
pop
sti
dec
rcl
inc
aam
push
push
xor
imul
sbb
mov
dec
in
mov
into
inc
sbb
pop
mov
and
ds
loopne
pop
daa
loopne
push
mov
and
ret
test
xchg
xor
xchg
sahf
(bad)
jns
dec
aaa
dec
push
out
ror
jae
repz
nop
retf
shr
and
popa
mov
sub
aas
pop
push
inc
rcr
call
nop
push
cli
aas
jmp
scas
jg
jle
imul
cmp
xor
lds
or
jg
xchg
pop
repz
or
cmp
sub
adc
dec
push
pop
div
ins
mov
cmps
xor
cdq
test
jno
xor
stos
gs
jmp
push
lock
xchg
pop
jns
test
push
pop
mov
jecxz
push
mov
xchg
dec
movs
lods
loopne
(bad)
cmps
and
fsub
cmp
fstp
mov
push
pop
dec
sbb
dec
gs
pop
inc
stos
test
enter
or
or
add
in
push
mov
pop
push
pop
adc
add
call
pop
test
push
adc
ret
cmp
outs
cmp
cdq
out
int
push
fincstp
test
cmp
out
into
sub
push
push
or
aaa
or
or
jg
out
gs
shr
xor
loop
inc
cmc
jecxz
mov
xor
xor
push
sar
fidivr
adc
arpl
or
shl
cmps
loopne
push
imul
shl
mov
ja
scas
outs
fcomi
push
xchg
mov
lea
sub
dec
pop
jne
or
push
fcomp
std
sbb
mov
pushf
xchg
in
sbb
mov
mov
jns
xchg
sar
and
pop
jecxz
rol
push
xchg
pop
adc
(bad)
ins
ret
stos
add
out
or
addr16
sbb
or
test
sub
ja
imul
clc
mov
mov
sahf
jb
add
cwde
cs
cmp
jmp
sbb
push
dec
push
dec
push
mov
xchg
ret
lahf
movs
xchg
(bad)
iret
jmp
outs
jmp
gs
ret
rol
add
or
stc
ss
xchg
push
dec
cdq
or
pop
adc
mov
addr16
mov
adc
jae
sahf
loope
push
gs
xchg
push
mov
sbb
pop
and
jae
sbb
dec
inc
mov
aad
or
sub
stos
rol
xchg
lods
icebp
je
mov
call
dec
jge
fild
or
mov
outs
jnp
imul
push
inc
retf
js
adc
out
lds
loope
dec
arpl
je
stos
cmps
cli
and
popf
sub
mov
lahf
sbb
enter
(bad)
(bad)
cmp
repz
scas
out
sbb
cmps
pusha
es
out
push
cli
cdq
jne
popf
ja
add
mov
mov
push
mov
xchg
je
xchg
sub
sbb
sub
movups
pop
scas
and
xlat
cmp
xor
fist
jns
call
lods
test
fld
jl
enter
jne
movs
ins
int
in
fnsave
push
in
sbb
or
fidivr
test
nop
fadd
jecxz
loopne
dec
add
sub
xor
mov
mov
and
out
dec
std
mov
and
stos
scas
jmp
adc
cmp
ficom
pop
(bad)
dec
gs
ja
xchg
lock
cmc
jmp
and
xor
shr
inc
xor
push
xor
lea
mov
sbb
push
cmp
js
adc
popf
cdq
lahf
mov
xchg
aam
shl
sub
mov
icebp
or
cmp
pusha
out
pop
std
lahf
mov
lods
out
xor
sub
int3
lock
(bad)
es
outs
pavgw
cli
mov
loop
bound
fisub
xor
icebp
fdiv
sbb
mov
out
adc
mov
(bad)
ins
es
lock
mov
mov
mov
inc
out
mov
out
and
push
mov
and
adc
mov
push
xchg
or
add
mov
mov
loopne
ror
shr
je
add
out
jp
popa
cmp
pop
enter
cmp
inc
cdq
pop
imul
adc
mov
iret
xchg
cmps
dec
mov
mov
fwait
jo
dec
mov
jcxz
mov
pushf
sub
push
cli
test
sub
xor
inc
jnp
pop
add
loope
mov
jae
adc
movs
pop
mov
mov
push
inc
adc
in
adc
sub
inc
rol
and
call
shl
shr
lds
cmp
push
cli
push
popf
iret
vmovhps
xor
pop
add
inc
adc
cld
ins
shl
xchg
push
pop
gs
pop
add
jmp
dec
out
inc
adc
adc
ret
aaa
test
imul
jne
sub
lahf
dec
mov
pusha
and
pusha
add
lahf
push
pusha
aaa
or
xchg
test
cli
push
repz
inc
hlt
hlt
push
popa
dec
ss
aaa
cwde
xor
mov
popa
cmp
lods
out
xchg
leave
cli
pop
test
pop
mov
and
test
fs
dec
push
pop
(bad)
es
dec
lock
pop
repz
mov
and
or
jecxz
cmp
repnz
into
je
push
pushf
jmp
stos
push
jecxz
jno
jmp
daa
leave
cwde
push
add
mov
xor
(bad)
outs
and
inc
mov
sbb
nop
rcr
inc
xor
xlat
sub
cmc
inc
shl
cli
inc
call
test
fcompp
(bad)
push
int
sbb
adc
push
in
shl
and
pop
int
daa
leave
adc
add
adc
mov
adc
xchg
retf
arpl
xchg
mov
ins
xchg
push
or
jae
jno
push
pop
cs
nop
inc
pop
es
dec
xchg
dec
aaa
or
popa
arpl
xchg
inc
test
ficom
repz
(bad)
das
ss
and
arpl
mov
in
jle
(bad)
fldcw
or
xor
sub
jnp
dec
test
ins
clc
gs
mov
xchg
not
xchg
nop
inc
ja
movs
mov
rcl
fst
sti
mov
stos
stc
mov
mov
adc
jg
jmp
pop
div
xchg
jno
adc
(bad)
dec
mov
adc
xchg
dec
ds
idiv
jl
adc
adc
adc
sahf
jb
pop
dec
xor
jmp
mov
xor
xchg
lea
mov
gs
je
xlat
or
sub
aas
cmp
outs
xlat
and
adc
ins
mov
enter
movmskps
out
mov
int3
jl
or
sti
or
pop
xor
cs
adc
push
mov
or
push
(bad)
shl
push
aaa
jae
ror
cmc
je
rcl
fcomp
xlat
loopne
cmp
xor
add
iret
pop
push
adc
push
in
test
push
pop
inc
scas
add
dec
cmp
inc
popa
pop
dec
mov
xchg
mov
sti
xchg
jnp
into
add
rol
ss
and
xchg
mov
add
inc
popf
add
retf
ret
xor
and
ret
sbb
fwait
loopne
push
jmp
inc
mov
test
add
sub
adc
mov
movq2dq
dec
(bad)
and
add
xchg
jno
sbb
pop
adc
dec
jns
(bad)
in
mov
pop
ins
ins
fdiv
or
push
lahf
dec
dec
jle
cmp
in
sbb
add
or
enter
test
movs
adc
push
xor
lods
jl
inc
fdiv
(bad)
cmc
int
mov
cmp
adc
aaa
pushf
dec
fs
push
adc
inc
in
jne
retf
mov
xor
outs
movs
pop
pop
mov
cmp
int
mov
mov
xlat
aad
lahf
xor
aad
cmp
inc
loop
mov
lea
sbb
cli
mov
aad
js
popf
jnp
in
movs
inc
mov
cwde
mov
sbb
stos
js
(bad)
mov
cwde
mov
cmp
outs
lds
mov
shr
push
je
inc
in
xor
dec
pop
movs
mov
xchg
jmp
mov
dec
pop
(bad)
add
adc
push
jp
xor
inc
push
stos
jno
outs
fs
cli
popf
imul
add
pop
nop
cmp
out
cmp
and
cmc
cmps
xchg
scas
adc
jb
sub
das
je
jge
jecxz
es
push
int
inc
jl
icebp
stos
sar
xor
jge
mov
xchg
or
out
mov
les
jmp
loope
mov
lods
mov
std
scas
cdq
jl
shr
cmp
clc
test
jo
jmp
jp
dec
push
mov
fsub
fsubr
mov
sbb
daa
nop
xchg
jmp
movs
mov
cmp
mov
int
xchg
cmp
or
popf
mov
dec
rcl
cmp
fs
gs
dec
xor
movs
fld
jge
mov
xchg
pop
stos
pop
pop
inc
out
fsubr
add
hlt
iret
pop
test
imul
mov
cs
int3
std
scas
adc
push
(bad)
fsubr
sub
push
push
cmp
and
int3
add
ds
jae
push
fiadd
movs
cdq
mov
aam
sti
jecxz
mov
jb
dec
ret
retf
jne
mov
mov
mov
and
lds
lea
pop
outs
out
fisttp
mov
or
out
in
jmp
dec
cmc
pop
pop
mov
jl
push
sti
jae
sbb
cmp
mov
or
mov
fcmovbe
cmp
arpl
sub
pop
push
xor
div
rep
mul
cmp
push
test
mov
pop
sbb
aad
mov
add
fidivr
lds
cmp
pop
imul
cwde
cs
(bad)
and
movs
adc
push
fbstp
lds
ds
and
sbb
fcomi
pop
pop
sub
mov
or
pushf
jne
imul
or
inc
adc
mov
sar
push
jnp
dec
sbb
aaa
jmp
jg
mov
enter
mov
and
enter
push
psllq
repz
ins
ds
fs
dec
scas
inc
dec
repz
xchg
test
je
pop
outs
repz
mov
fwait
mov
mov
gs
push
and
pusha
test
mov
sub
jp
xor
leave
cdq
movs
bound
inc
mov
mov
xor
xor
xor
jl
pop
cmps
retf
jne
popa
xchg
mov
test
retf
pop
pop
sar
push
lock
dec
push
stos
dec
sbb
mov
jnp
sbb
add
sti
push
ror
or
mov
sub
jo
inc
mov
dec
mov
std
jle
jmp
icebp
add
fidivr
sbb
cmp
inc
pop
xchg
fsub
imul
mov
push
pop
sbb
int3
test
aad
jb
xchg
(bad)
(bad)
lock
out
sbb
fdivr
(bad)
in
adc
mov
mov
and
cmc
inc
sbb
lea
scas
shl
imul
mov
jmp
test
inc
fst
not
fwait
mov
mov
jge
scas
(bad)
(bad)
push
push
push
sbb
jmp
push
and
adc
cwde
scas
fstp
dec
jmp
test
sbb
dec
adc
sbb
mov
movs
bnd
sbb
cmp
cmp
outs
dec
aam
dec
inc
repnz
movs
adc
test
or
mov
xor
inc
xchg
bound
xor
call
dec
ret
inc
inc
fcom
push
hlt
or
pushf
adc
call
mov
(bad)
repnz
inc
bound
cld
in
push
fcomip
imul
jae
loop
outs
aas
shl
cmp
pushf
xchg
pop
test
sbb
in
stos
fadd
ss
mov
pop
cmp
mov
popf
inc
sti
inc
cs
cmp
outs
or
aas
aas
icebp
mov
out
imul
fld
fwait
xchg
je
pusha
push
pop
lahf
mov
push
jno
inc
retf
or
sbb
out
jecxz
fsubr
add
rcl
test
jne
adc
loop
mov
or
pop
adc
mov
and
pop
mov
clc
std
stc
rcr
or
ror
sub
push
icebp
jnp
(bad)
jns
arpl
mov
stc
xor
in
mov
dec
leave
jg
cmp
mov
loope
fsub
mov
retf
into
ss
mov
mov
sbb
ins
xlat
mov
adc
outs
cs
and
jo
adc
test
push
test
sbb
push
pushf
xchg
adc
inc
or
push
add
repz
out
mov
mov
ins
mov
dec
jp
push
(bad)
add
jo
mov
pusha
mov
jbe
or
das
out
inc
or
sub
inc
pushf
imul
sbb
dec
xor
lods
push
jp
pop
or
mov
hlt
ins
loope
ins
aaa
outs
push
popa
mov
sbb
sbb
jp
stos
mov
cmps
adc
(bad)
call
movs
loopne
pop
pop
pop
in
mov
imul
sub
sbb
xor
push
sbb
retf
addr16
inc
jl
stc
fisub
shl
out
push
jge
or
pop
arpl
mov
ret
xchg
xor
or
inc
cmp
ss
(bad)
push
std
not
mov
or
mov
mov
fmul
xchg
cmps
je
jmp
sbb
jmp
or
mov
xchg
popf
pop
xor
mov
cmc
push
xchg
addr16
arpl
js
fcom
mov
(bad)
adc
inc
and
cmp
rcr
sbb
fwait
push
fimul
cmp
imul
scas
fs
inc
adc
test
lods
xor
rcr
ret
gs
test
adc
int
fidiv
push
lea
xchg
scas
dec
cdq
add
inc
mov
push
cmp
adc
push
sar
adc
and
ret
adc
cmp
(bad)
xor
stos
js
push
jge
xchg
(bad)
popf
popf
mov
mov
xor
hlt
fiadd
sub
icebp
push
inc
sbb
aas
push
lods
push
dec
adc
dec
cli
fnop
ficomp
xor
int3
sar
cmc
mov
xchg
pop
ss
int3
add
scas
sub
lds
bnd
add
call
xchg
jmp
out
popa
pop
push
fisttp
xchg
lock
cmps
test
jp
in
in
fidiv
enter
inc
cmp
test
je
jb
(bad)
lahf
(bad)
jno
hlt
xchg
std
push
pop
jae
je
mov
mov
jno
call
popf
call
jnp
jle
dec
jmp
push
push
fs
pop
outs
mov
cld
rol
push
sbb
adc
sub
das
out
push
or
out
out
sub
cmps
push
mov
retf
pop
sbb
addr16
mov
mov
xor
fcomp
idiv
xlat
movs
loopne
ss
mov
or
scas
ds
(bad)
adc
cmp
pusha
psubd
or
movs
lods
es
mov
(bad)
scas
les
mov
aam
push
push
jne
ror
push
and
pusha
dec
or
sub
and
mul
sbb
sub
jo
fadd
inc
ins
lea
push
into
icebp
cmp
movs
add
imul
mov
xchg
jb
ror
inc
xchg
test
or
sub
icebp
test
mov
stos
pushf
ss
mov
mov
adc
std
std
test
adc
stc
sbb
mov
test
push
mov
sbb
fcomp
jns
mov
lods
je
mov
dec
retf
push
mov
pop
fs
int3
sub
loopne
pop
add
push
or
cmp
leave
sbb
xor
push
mov
adc
cmp
dec
loopne
xchg
xchg
xlat
cmp
or
pushf
xchg
gs
pusha
dec
loop
leave
adc
test
xor
fwait
stc
(bad)
push
(bad)
or
xchg
pop
dec
in
ins
jg
das
iret
repz
(bad)
mov
pop
mov
xchg
sbb
sub
or
iret
in
inc
pop
fild
leave
cmp
mov
pushf
je
push
ja
pop
jns
mov
push
shl
sbb
jb
sti
sbb
adc
(bad)
sbb
aam
mov
lock
and
movs
imul
out
je
mov
or
ins
add
sahf
out
into
rol
jg
test
push
and
sar
xor
push
fidiv
sub
jle
loop
dec
out
mov
out
pop
xchg
mov
(bad)
sub
mov
mov
aad
xchg
test
sub
xchg
or
push
mov
repz
mov
xor
pop
(bad)
jnp
(bad)
dec
jle
and
fwait
imul
cmp
sbb
jle
rcr
in
add
jg
jo
inc
cld
pop
push
enter
je
or
or
sub
(bad)
sub
test
gs
loopne
mov
sar
div
call
retf
xchg
cli
shl
(bad)
push
adc
das
xor
add
jno
pusha
inc
ins
test
push
fisttp
mov
out
or
sbb
bound
jle
mov
jne
inc
dec
or
xchg
mov
cmp
and
in
xchg
mov
outs
mov
cmps
jge
aam
fs
mov
mov
dec
mov
lock
inc
ror
pop
xor
ss
jecxz
hlt
push
enter
fidiv
cdq
inc
xor
pop
(bad)
cmps
mov
addr16
test
add
mov
adc
push
jmp
mov
add
shl
stc
sahf
icebp
fild
pusha
xor
or
call
ja
inc
fst
imul
add
cwde
cmp
out
jbe
inc
xchg
push
dec
mov
mov
js
inc
inc
push
jmp
test
out
int3
ja
mov
mov
cmps
lahf
cmp
loope
adc
cmp
out
or
je
mov
pop
rcr
mov
imul
mov
outs
mov
pusha
or
sub
sub
push
lea
xchg
or
out
mov
and
ss
mov
clc
mov
ror
mov
mov
mov
rcr
add
sub
sub
mov
push
out
call
arpl
dec
cmps
dec
cmp
movs
call
add
xor
and
pop
xchg
(bad)
cli
nop
mov
stos
(bad)
ds
ret
pop
int
sti
and
nop
push
jnp
arpl
jnp
sbb
ins
das
push
ret
in
inc
add
jbe
sub
popf
mov
movs
mov
pop
test
push
adc
inc
jecxz
cmp
and
cdq
cmp
in
div
aaa
mov
call
xor
aam
dec
fbstp
mov
fdiv
pop
xlat
fistp
aad
mov
cwde
or
sbb
icebp
mov
push
dec
pop
out
aam
jbe
dec
push
mov
(bad)
rcr
call
loop
cmp
outs
pop
mov
jns
imul
or
jecxz
dec
push
loop
inc
sub
sti
adc
xlat
outs
fidiv
sbb
ins
leave
out
test
cdq
pop
push
sti
mov
xlat
sbb
inc
xchg
or
fsubrp
inc
xor
push
ret
xor
aam
cmc
add
lods
in
rol
xchg
mov
add
sub
sbb
dec
xor
push
cs
cmp
adc
lods
inc
addr16
fstp
dec
push
sbb
and
mov
loopne
sbb
in
iret
scas
jp
xchg
dec
int3
dec
sub
pop
mov
and
and
cs
and
mov
out
add
lahf
(bad)
pop
loop
mov
inc
inc
pop
comiss
loopne
pop
rcr
pop
rol
and
inc
fisubr
inc
retf
lods
sbb
jmp
xchg
(bad)
aad
cmp
push
xchg
sahf
and
int
mov
push
(bad)
je
push
add
or
sbb
sub
or
dec
fcomp
and
stc
retf
cwde
test
(bad)
js
xchg
int3
outs
and
jb
mov
scas
(bad)
retf
fimul
cli
test
cmc
and
iret
mov
cmp
cmp
xor
pop
xchg
xchg
shl
jle
pop
test
inc
scas
push
push
shl
add
pop
push
stos
pop
ss
add
(bad)
cmp
cwde
aas
pop
jg
mov
pop
cs
push
imul
add
in
sub
pop
xor
and
mov
into
and
xor
outs
fsub
xlat
repz
xlat
(bad)
jle
outs
push
jae
loop
sub
sahf
push
jns
movs
xor
loopne
xchg
pop
mov
mov
fldcw
fadd
lods
sbb
imul
push
leave
mov
sbb
push
das
aam
imul
jecxz
setbe
cmp
inc
aad
fs
(bad)
sahf
pop
add
lahf
loope
test
pop
dec
iret
sar
adc
outs
jge
jbe
sub
test
retf
cmps
in
pop
jae
inc
out
stos
sbb
fimul
(bad)
pop
stos
adc
add
xchg
imul
imul
rcl
push
mov
fnsave
fcomp
retf
fldpi
and
add
push
mov
pop
xchg
jmp
cmp
test
lock
adc
int
mov
dec
int
inc
js
aaa
push
dec
es
add
add
fcmovnb
lahf
and
fmulp
daa
pusha
jae
pop
push
pusha
pusha
dec
clc
or
and
add
fidiv
inc
test
mov
jge
mov
and
mov
clc
loope
les
bound
push
mov
dec
or
pop
cmp
lahf
dec
jmp
sub
ret
cwde
leave
mov
sub
in
add
imul
cmps
movs
ret
lds
xlat
xchg
mov
xor
xor
push
imul
rol
push
add
xor
cmps
jl
jmp
icebp
sbb
mov
mov
pop
call
outs
hlt
sub
dec
sti
les
mov
add
mov
arpl
aaa
dec
inc
push
jns
sbb
and
in
jmp
ret
xor
and
inc
adc
std
sbb
and
aad
adc
outs
frstpm(287
sub
aas
fs
jno
jns
xor
adc
fdivr
aad
sbb
cmp
ss
jg
inc
sub
pusha
sub
cld
fiadd
or
push
call
mov
(bad)
sub
aas
das
(bad)
mov
adc
ja
cld
pcmpgtb
or
shld
ss
push
test
(bad)
inc
scas
sbb
pop
retf
adc
add
mov
call
push
pop
mov
imul
sbb
inc
aad
cmp
pop
jo
(bad)
(bad)
push
aaa
and
lahf
not
xchg
xor
inc
pusha
or
push
(bad)
xor
dec
jmp
add
(bad)
cmps
leave
lods
jge
adc
dec
gs
out
sbb
jmp
inc
mov
adc
inc
xor
and
push
sub
push
sub
adc
adc
ins
jno
push
jmp
cli
sub
and
cdq
outs
rcl
sbb
rcr
pop
in
arpl
cs
push
cwde
sub
jecxz
hlt
mov
xor
in
and
or
xor
xchg
xchg
adc
xchg
aaa
cli
enter
jmp
fucomi
dec
mov
xor
add
sub
lds
jns
dec
xor
or
mov
rcr
je
inc
out
loop
add
ds
inc
inc
bswap
iret
nop
adc
(bad)
leave
push
imul
aad
mov
fs
mov
jle
in
lahf
mov
inc
jnp
and
adc
pop
aas
sbb
cs
cli
(bad)
sub
jae
mov
jmp
je
add
mov
icebp
add
xchg
lds
jmp
cmp
outs
xchg
dec
cmp
mov
add
ss
hlt
cmp
add
(bad)
sbb
aas
mov
push
mov
test
pop
je
arpl
xchg
cs
int
call
ret
out
jmp
shr
push
cmp
imul
push
rol
fiadd
fisttp
mov
mov
cli
xor
jb
xchg
push
pop
repz
(bad)
mov
lock
and
enter
push
pop
inc
cli
daa
or
dec
sbb
jp
xchg
aad
mov
jecxz
jmp
mov
cmp
pop
je
xor
push
and
push
mov
dec
daa
xor
fsub
adc
aaa
sub
pop
dec
add
call
xchg
mov
fadd
push
pushf
shl
mov
call
push
adc
add
movs
test
aad
sahf
dec
push
xchg
jbe
enter
hlt
cli
xchg
lods
out
and
cmp
cmp
ss
cmp
push
pop
push
mov
push
sbb
sbb
pop
in
inc
cmp
push
(bad)
scas
or
push
jbe
inc
mov
lds
dec
jns
xchg
add
or
mov
aaa
arpl
sti
mov
fwait
cli
mov
ret
push
cmp
fsub
xchg
cmp
test
addr16
mov
push
mov
mov
mov
xor
jns
stc
xor
xor
adc
xor
lock
push
(bad)
fcomi
sub
loope
jecxz
dec
bound
movs
daa
pop
push
mov
inc
in
sbb
and
push
(bad)
cmp
push
xor
(bad)
mov
outs
sub
jne
mov
mov
xchg
out
shl
lds
sbb
mov
enter
adc
callw
jno
loopne
add
cmp
pop
das
adc
push
sub
adc
retf
mov
mov
push
cs
sti
sub
out
push
fcmovnb
cmp
mov
pop
ret
hlt
(bad)
sbb
or
adc
pop
fwait
pop
add
mov
pop
mov
lds
adc
sub
int3
jno
lock
push
mov
enter
xchg
jmp
jb
mov
(bad)
ret
push
add
imul
in
push
dec
enter
mov
xor
hlt
daa
xchg
ss
pop
movs
test
xchg
cmp
sbb
int
jg
jae
dec
pop
sub
adc
sub
inc
xchg
out
lock
mul
addr16
adc
sbb
ror
in
sbb
fisttp
or
jno
dec
arpl
dec
dec
cmp
ret
mov
push
(bad)
in
frstor
push
pusha
mov
push
add
cmp
or
mov
jge
das
movs
jmp
sbb
outs
jmp
into
in
push
mov
dec
or
xchg
jge
add
das
loope
mov
and
mov
and
pop
mov
es
xchg
dec
fadd
aam
test
std
jbe
adc
popf
test
sbb
inc
add
clc
(bad)
push
or
lahf
loop
int3
mov
(bad)
sti
and
mov
mov
and
add
jg
stos
xor
test
mov
sub
retf
cwde
lock
shr
jmp
jae
rcl
inc
mov
clc
sub
cmps
mov
and
jg
out
popa
(bad)
adc
sbb
inc
jge
jne
(bad)
sbb
xor
push
dec
adc
inc
call
pop
xor
lds
push
xchg
xchg
jmp
rcl
shr
call
fldcw
and
rol
cmps
es
inc
iret
outs
sti
(bad)
(bad)
repnz
push
inc
add
popa
adc
shl
sti
jg
add
mov
outs
cld
xchg
imul
cli
sub
lods
xor
xlat
into
pop
cmp
clc
xchg
push
ret
sub
dec
(bad)
loope
inc
mov
cmp
in
jno
arpl
push
xor
cmp
jg
mov
push
shl
in
pop
push
es
adc
xor
in
div
arpl
inc
sbb
add
ds
xchg
add
xchg
jno
cmp
(bad)
mul
and
mov
mov
sub
outs
mov
loopne
mov
aad
rol
nop
and
imul
mov
or
push
xor
mov
jmp
inc
fwait
xlat
jecxz
pop
gs
movs
ins
out
sub
push
mov
mov
imul
pop
shl
xor
inc
jge
inc
mov
cli
ror
loop
push
sub
pop
stos
enter
lahf
add
mov
sub
sub
mov
jne
dec
inc
repz
sub
mov
nop
fwait
cli
push
jge
cmp
inc
jnp
dec
cdq
ja
xor
ja
ficomp
jmp
sar
cmp
dec
test
inc
jbe
fstp
adc
mov
xor
(bad)
xchg
sub
cld
jb
push
mov
je
jl
data16
inc
rcl
xor
imul
fild
jae
loope
iret
mov
or
retf
push
clc
call
retf
lea
push
push
cmp
mov
xchg
xlat
xchg
dec
adc
jl
push
in
lds
fbstp
xor
add
dec
and
inc
sbb
push
jge
fidivr
ds
add
pop
or
mov
repnz
aam
aas
outs
push
xchg
sub
in
test
lea
shr
mov
movs
jo
xchg
xor
mov
lds
jge
test
pushfw
shl
imul
jns
xchg
add
adc
cs
adc
shl
lods
bound
aam
pop
push
outs
push
cdq
fcom
inc
xchg
bound
or
scas
and
in
aad
mov
push
lods
mov
mov
dec
addr16
stos
jg
cmp
inc
push
mov
and
pop
push
dec
dec
in
mov
dec
ret
outs
add
pushf
ficom
or
cld
xor
movs
js
inc
ins
jno
(bad)
xor
lock
ins
outs
mov
add
lds
je
sub
xor
ins
fucom
and
arpl
mov
(bad)
scas
pop
inc
rcl
jmp
xchg
sbb
rcr
xchg
lahf
add
cli
sub
push
jmp
sbb
or
out
mov
ins
ret
inc
mov
cmps
pop
or
fist
xchg
mov
mov
dec
xchg
push
pushf
mov
enter
cmp
xor
push
in
dec
pushf
ja
push
inc
lahf
jl
pop
imul
(bad)
arpl
mov
inc
into
out
sub
cmp
cdq
aam
out
mov
fist
push
imul
jae
jne
inc
cmp
inc
imul
mov
mov
in
sahf
push
xor
cmp
push
jmp
stos
lock
add
xchg
dec
(bad)
and
sbb
or
mov
jbe
retf
inc
enter
mov
and
sub
stos
xor
lahf
movs
in
or
inc
sbb
mov
cmp
add
lods
pusha
out
jo
sbb
adc
add
or
xchg
cld
aas
jle
dec
arpl
aas
and
adc
mov
cwde
arpl
xchg
sbb
jne
ror
lods
and
aam
or
lea
mov
enter
std
es
push
inc
inc
mov
push
inc
popa
inc
sub
out
mov
mov
rsm
das
ins
test
lds
xchg
das
pop
adc
(bad)
idiv
icebp
pop
xor
push
dec
mov
test
(bad)
push
sti
lods
xchg
icebp
es
aas
fmul
sti
fs
popf
fs
mov
dec
cmps
mov
mov
enter
jns
lea
les
jb
out
adc
dec
pusha
pop
inc
or
mov
scas
ins
ret
lods
pusha
fs
mov
cmps
out
adc
jp
mov
mov
sub
xchg
jae
pop
stos
jo
dec
out
enter
adc
pop
and
in
in
test
cmp
sbb
retf
inc
mov
mov
in
or
jp
inc
aam
push
add
scas
sahf
(bad)
out
imul
push
ins
pop
fwait
jb
int3
push
lahf
mov
cmps
pop
or
sub
jmp
lahf
retf
jle
mov
pop
lea
push
mov
test
xchg
retf
repnz
mov
xor
cmp
cmp
aam
movs
or
sub
repz
inc
mov
loop
inc
sub
push
cwde
lock
mov
push
and
pop
pop
cmp
ja
cmp
fidiv
sub
test
xchg
pop
idiv
mov
pusha
cmps
xchg
ret
int3
pop
and
mov
mov
or
in
inc
mov
rol
cmp
pop
daa
or
rcr
xchg
jo
pop
jmp
adc
int
jo
and
mov
jle
cmp
in
icebp
jmp
add
daa
pop
cli
jbe
sbb
sub
jae
pop
mov
inc
(bad)
clc
aaa
inc
pop
ds
add
ins
outs
js
pop
push
ja
mov
pop
inc
mov
lea
xor
jb
shr
jle
xor
dec
hlt
inc
jge
clc
repnz
in
xor
adc
mov
shl
jnp
xchg
push
mov
rcl
sbb
popa
fild
daa
pop
pushf
ret
add
test
addr16
test
sub
into
dec
out
sbb
fsubr
in
div
push
adc
test
sub
(bad)
mov
push
mov
aam
sbb
fimul
or
push
shl
leave
nop
push
test
lods
push
sub
sbb
pop
or
test
cld
xchg
pop
test
mov
or
mov
push
aas
pushf
(bad)
(bad)
fisttp
idiv
xchg
pop
dec
xchg
mov
imul
and
dec
pop
or
jmp
mov
ss
xor
sub
aad
adc
fld
out
pop
sub
cli
adc
repnz
and
pop
jne
pop
repnz
aaa
lahf
cmp
jmp
sub
pop
pop
xor
shl
mov
ins
push
xor
mov
fs
adc
dec
rol
lea
mov
cmps
mov
inc
dec
inc
xchg
sbb
mov
fnstcw
and
xor
addr16
sbb
dec
sub
push
addr16
arpl
dec
pop
icebp
sbb
pusha
cdq
stos
mov
xchg
ret
loope
inc
dec
outs
cmp
pop
ret
stos
das
loope
push
jl
out
rol
sti
dec
sub
push
cmp
lea
push
ins
rcl
clc
sub
sbb
call
jp
popf
adc
inc
xor
inc
ins
arpl
(bad)
or
mov
and
push
sbb
xchg
(bad)
(bad)
test
sub
xor
pop
popf
push
or
or
add
ret
test
addr16
adc
imul
xor
in
or
mov
sub
or
aad
mov
test
loopne
add
(bad)
cmp
xlat
add
outs
xchg
adc
nop
xor
mov
retf
das
add
loop
shr
mov
sbb
xor
pop
push
adc
call
ins
mov
jl
(bad)
jecxz
fsubr
dec
pop
inc
pusha
xchg
push
ret
rcl
das
xlat
jl
pop
sub
or
loop
xchg
cmps
add
std
mov
lds
scas
gs
test
sub
mov
scas
or
loope
in
mov
pop
push
jp
inc
mov
mov
mov
mov
adc
pop
pushf
inc
xchg
loopne
xchg
dec
mov
xchg
sbb
imul
dec
pop
jno
sbb
or
sbb
jg
xor
sbb
ins
pop
repnz
push
push
xchg
lods
jmp
dec
jno
xor
xchg
xor
inc
or
sbb
shl
out
add
mov
pop
or
mov
sub
mov
mov
cmp
adc
test
add
add
cmp
aaa
or
loopne
pop
fsubrp
add
sbb
bound
dec
ja
or
int3
mov
sbb
xor
imul
and
leave
or
loopne
fs
cmps
jae
adc
scas
loop
cmp
ja
idiv
sbb
inc
pushf
call
cmp
mov
mov
js
ss
xor
ss
sbb
add
push
mov
(bad)
repnz
test
dec
cmp
xor
mov
mov
fwait
scas
daa
cmp
push
out
ins
jl
pop
out
repz
push
movs
out
and
mov
cmp
pop
jnp
popa
ret
(bad)
dec
or
and
pop
dec
call
hlt
mov
xchg
dec
jge
jbe
cmps
adc
lods
(bad)
mov
aam
xchg
(bad)
sbb
loop
dec
out
mov
in
inc
pop
inc
push
cmps
sbb
nop
iret
cmp
iret
(bad)
je
sbb
adc
mov
jmp
mov
jg
fwait
push
or
or
lods
push
fcomi
push
inc
jmp
enter
sahf
add
jns
imul
dec
pop
jnp
sbb
sar
daa
push
out
jnp
test
out
shl
push
enter
xor
inc
jmp
pop
popf
bnd
or
inc
imul
enter
cmp
jecxz
dec
into
jg
aaa
xchg
mov
call
repz
into
push
add
scas
retf
aam
or
test
std
cld
adc
outs
lahf
xor
not
adc
sbb
cdq
jecxz
pop
add
(bad)
lods
bound
jmp
out
fiadd
(bad)
iret
rcr
xchg
xchg
xchg
mov
(bad)
dec
popf
push
stos
jnp
repnz
mov
frstor
ret
in
retf
pop
cld
out
and
enter
mov
or
out
mov
jl
sub
dec
int
rcl
mov
xor
fdiv
in
mov
lea
ja
xlat
das
aas
mov
sub
or
ret
xchg
daa
lds
cmp
popa
repz
jle
inc
out
(bad)
sbb
push
mov
adc
data16
das
xor
adc
out
push
imul
mov
pop
lea
adc
stos
jb
je
inc
push
xchg
movs
sub
add
out
(bad)
call
or
sub
jecxz
inc
rcr
mov
jno
inc
dec
sbb
aaa
loope
sub
mov
outs
sti
and
pop
mov
mov
mov
addr16
bound
xchg
sbb
xchg
loop
pop
mov
aas
aaa
push
outs
mov
pop
push
xor
scas
cmp
add
fidiv
jmp
(bad)
xchg
cli
pop
mov
adc
sahf
aad
outs
ins
fistp
mov
outs
or
dec
jmp
lods
xlat
mov
jo
mov
jno
sbb
jns
sbb
pop
addr16
push
gs
test
mov
fisttp
sbb
cmp
and
leave
repnz
in
inc
nop
ins
shl
call
inc
retf
mov
pop
xlat
jb
in
test
out
into
cmps
test
dec
jle
sbb
or
push
fcmovnb
mov
je
sahf
sub
loopne
cmp
test
cmc
call
gs
xchg
outs
jmp
mov
loop
mov
pop
sti
jp
mov
xchg
pop
call
push
mov
xchg
iret
comiss
and
cdq
sub
or
xchg
sub
jle
mov
(bad)
push
retf
xor
test
jecxz
xchg
fs
sub
loop
dec
pop
(bad)
xor
lds
inc
popf
cmp
test
hlt
ret
div
jmp
lods
jno
pop
pop
inc
iret
dec
cdq
or
mov
pop
jmp
out
repnz
outs
fisttp
sub
in
es
cmps
add
xchg
xchg
cmp
add
dec
jle
add
lods
jo
and
sbb
mov
(bad)
out
cli
or
adc
(bad)
pop
cmp
fdivrp
stos
stos
test
and
test
gs
pop
icebp
movs
lea
push
xchg
inc
ins
jmp
dec
pop
popf
adc
sahf
(bad)
je
and
inc
cld
push
fmul
adc
js
out
icebp
pusha
xchg
fisub
pop
mov
add
sub
mov
dec
or
pop
pop
dec
dec
in
add
mov
movs
out
ja
shr
pop
repz
jp
dec
sub
and
xor
fmul
mov
sbb
jle
js
scas
scas
cmp
test
cmps
icebp
std
sahf
cmp
popf
jecxz
mov
push
movs
cmp
push
push
bound
dec
inc
call
push
in
lods
(bad)
xor
pop
mov
or
pop
popa
cmp
aas
sub
push
ins
push
out
pop
xchg
push
je
mov
dec
dec
dec
mov
adc
pop
popa
mov
aas
mov
dec
sub
arpl
cs
cmp
xchg
or
add
gs
sti
mov
push
jno
cmp
xor
pop
or
mov
add
or
sub
sub
xlat
lea
or
lahf
and
daa
sbb
cmc
xor
nop
cwde
push
mov
dec
or
test
and
std
(bad)
jns
mov
and
(bad)
enter
rcr
adc
rol
sbb
call
out
push
inc
and
(bad)
fadd
xor
imul
pop
sbb
xchg
xor
or
fimul
or
pop
outs
mov
cmp
cmp
cmp
push
scas
pop
ins
sbb
test
sahf
mov
pop
movs
or
fwait
and
or
retf
mov
iret
push
aaa
and
daa
xchg
pop
push
jns
add
pop
xchg
sub
add
jmp
fbld
mov
xchg
movs
xor
push
sub
mov
pop
pop
sahf
inc
mov
push
rcr
out
jmp
scas
ret
loop
inc
push
test
adc
cs
dec
mov
sub
xchg
sahf
clc
imul
jno
mov
ds
cli
add
cmp
retf
cmp
ret
test
sub
leave
mov
ds
sahf
scas
jp
aaa
leave
dec
xchg
cmp
retf
and
shr
out
dec
sbb
ret
ret
adc
ss
retf
jp
jbe
cmp
xchg
adc
and
mov
fs
(bad)
les
pop
mov
outs
test
xchg
(bad)
lock
out
mov
ficomp
retf
xor
add
sub
cmps
(bad)
jae
dec
xchg
dec
mov
add
in
sub
cli
mov
imul
xchg
mov
mov
add
rcr
jecxz
popa
xchg
push
mov
mov
adc
out
cld
push
repnz
imul
in
cmp
out
mov
sbb
xchg
xchg
(bad)
int
in
sbb
(bad)
or
jne
and
cmps
jmp
xchg
scas
repz
dec
mov
cmp
aaa
leave
not
jo
jnp
xchg
pop
lahf
(bad)
push
mov
jo
cmp
test
gs
push
movs
mov
cwde
inc
inc
sbb
sbb
push
lods
fisubr
mov
(bad)
sbb
lsl
mov
push
out
xchg
push
jge
xor
stos
popa
imul
aas
dec
cmp
lea
xor
or
test
inc
pop
cmp
cmp
adc
push
mov
push
push
cmp
ss
fistp
cmp
dec
pusha
jae
sub
mov
test
or
xor
lock
inc
retf
icebp
(bad)
cwde
inc
mov
jg
js
mov
or
data16
mov
iret
pop
adc
aam
cli
pop
xchg
out
cli
and
out
push
mov
je
xor
sbb
mov
out
lods
inc
push
or
cmp
retf
int3
lds
(bad)
outs
cs
push
fdiv
arpl
mov
sbb
push
outs
inc
fadd
sahf
retf
sub
or
inc
bound
cmp
or
shl
add
(bad)
dec
inc
and
test
cdq
retf
or
mov
cmp
inc
icebp
push
hlt
(bad)
inc
mov
add
aad
and
les
loop
cmp
and
jmp
cmp
jmp
fisttp
pop
mov
mov
dec
mov
sbb
es
dec
mov
ins
jmp
mov
push
and
test
mov
xchg
inc
mov
movs
jbe
fcmove
jge
mov
jno
sub
mov
into
das
dec
and
jl
shr
xchg
in
sub
sub
sbb
clc
lock
lea
jne
or
into
jecxz
iret
mov
out
xchg
add
add
nop
dec
xor
rcr
xor
fmul
nop
push
dec
adc
mov
call
jns
dec
fldcw
push
or
dec
ja
lods
xor
mov
sub
add
pop
or
das
sbb
dec
xchg
arpl
jl
aad
pop
or
mov
aas
mov
inc
or
sar
cmp
xor
fidivr
dec
xchg
fwait
cmp
mov
call
add
in
iret
arpl
cmc
inc
sbb
pop
inc
sbb
adc
xchg
int3
cmp
push
mov
and
mov
icebp
and
lods
and
sub
and
jl
bound
adc
cmp
stos
aas
ds
loope
adc
shld
das
jno
pop
xor
pushf
jmp
aad
jmp
add
dec
repnz
lock
mov
and
rcl
nop
cmp
in
add
es
imul
dec
aas
inc
or
enter
adc
mov
sub
mov
inc
xor
test
and
cwd
add
arpl
mov
in
out
pop
adc
aad
out
mov
int
fcmovb
lea
inc
loopne
xor
cmp
pop
jae
mov
mov
xchg
dec
push
adc
les
pop
xchg
lea
in
xchg
jno
push
pop
mov
popf
jl
idiv
inc
in
pop
add
pop
push
mov
mov
lods
pop
push
rol
jo
mov
fmul
jmp
push
mov
push
mov
sub
rol
lea
pushf
(bad)
mov
ror
inc
mov
mov
pop
fld
cdq
jecxz
pop
cmp
jg
inc
repnz
inc
cmp
xor
jb
imul
fnstcw
sub
neg
repz
dec
fimul
jnp
psrld
mov
pop
scas
aaa
push
retf
in
fcmovne
pop
dec
mov
aas
scas
xor
xor
pop
mov
push
stc
jmp
push
add
repnz
sbb
adc
pop
retf
mov
push
out
ja
pop
test
mov
mov
js
jne
or
fdivr
jp
test
fld
or
lock
jae
push
sbb
push
popa
mov
dec
in
pop
lea
mov
sbb
jae
cmp
dec
dec
leave
xlat
sbb
fidiv
outs
sub
lea
(bad)
inc
ret
movs
or
mov
hlt
sub
cwde
pop
das
retf
ret
xlat
pop
mov
fisubr
call
das
mov
pushf
adc
jmp
jg
xchg
jmp
cdq
imul
mov
mov
cli
pusha
and
sbb
mov
test
or
fisttp
push
xchg
sbb
cmp
shl
ja
rcr
ret
sbb
mov
dec
xchg
sbb
adc
dec
stos
xchg
lea
les
mov
fdivr
sub
xor
mov
out
push
not
push
enter
inc
push
int
(bad)
pop
(bad)
out
stc
cmp
(bad)
lods
pushf
xlat
(bad)
loope
push
jecxz
les
mov
cmps
cs
xor
cmp
cmp
enter
in
mov
dec
xchg
and
out
mov
stos
stos
fnstsw
arpl
sahf
xchg
sub
jno
and
sbb
jnp
or
int
sub
jnp
fistp
push
push
cmp
loop
mov
test
cmp
sbb
les
hlt
jecxz
fidivr
(bad)
fisubr
lods
fistp
aaa
mov
push
cld
cs
fstp
ficomp
mov
xchg
or
cmps
aas
movlps
leave
pop
dec
mov
iret
lds
mov
or
mul
and
cdq
mov
add
and
xchg
add
cmp
je
push
or
test
cld
jg
stos
fwait
pop
dec
xchg
repz
retf
enter
push
sbb
(bad)
pop
sub
neg
in
aad
int
push
mov
push
cmps
je
adc
pop
data16
dec
daa
and
sub
jae
add
add
test
and
in
mov
pop
imul
(bad)
int3
cmps
lahf
out
adc
imul
je
lahf
fisub
mov
cmp
push
xchg
adc
cmp
add
test
aas
lods
outs
int3
pop
out
cwde
in
dec
cmp
xchg
imul
pop
pop
push
pop
jbe
sbb
enter
adc
fldenv
and
mov
shl
dec
xlat
add
add
xchg
and
outs
mov
sub
and
jle
sahf
xor
pop
inc
mov
sar
or
call
xchg
(bad)
xchg
push
(bad)
jo
cmovl
add
mov
push
push
xchg
cmc
lods
xchg
xchg
into
imul
stos
fistp
cmp
add
mov
scas
and
xchg
test
cld
(bad)
and
mov
dec
cmp
arpl
jmp
je
xor
xchg
push
push
mov
inc
add
int3
sbb
retf
dec
or
sbb
cmc
test
mov
and
mov
fisub
push
jae
fs
xchg
or
mov
jge
dec
cmp
(bad)
or
xchg
addr16
xchg
vpaddd
sbb
int
add
mov
(bad)
aaa
icebp
mov
mov
sub
jb
std
cmps
pop
dec
or
cs
call
and
lahf
pop
mov
add
xlat
add
mov
mov
add
xchg
push
loop
je
dec
or
inc
test
ror
clc
or
mov
push
repz
sub
shl
loope
xchg
pop
ins
or
cmps
rcr
jle
xchg
shl
lea
sub
mov
in
stos
jae
out
out
cli
scas
pop
dec
sbb
ja
xor
es
pushf
lds
fiadd
jo
ins
repz
sub
lods
addr16
and
addr16
js
fsub
and
jecxz
test
jmp
mov
mov
push
popf
sub
(bad)
and
lahf
sahf
call
inc
jmp
loop
test
dec
dec
add
ror
pop
sbb
or
and
sahf
into
add
out
jg
xchg
push
cwde
leave
fs
add
cmps
pop
lock
cmp
addr16
sub
pushf
enter
xchg
stc
pop
stos
jmp
icebp
daa
add
test
cmp
fwait
push
aas
shl
out
loopne
and
add
and
or
lds
out
adc
mov
(bad)
fsub
sub
jp
shl
push
mov
pop
cmp
mov
aas
xchg
fld
cmp
dec
mov
sti
in
sar
pusha
dec
and
fisttp
js
or
dec
repnz
and
sbb
or
test
adc
pop
movs
dec
(bad)
ins
xchg
in
call
mov
dec
push
pop
jbe
xchg
sub
pusha
xchg
ds
sub
sti
jp
dec
int
ja
fistp
outs
and
sbb
xchg
cli
(bad)
cmp
dec
xchg
sub
add
leavew
shl
jne
mov
lds
mov
pop
pop
loop
outs
cmps
jno
(bad)
stos
outs
add
pop
jmp
mov
ins
std
icebp
aas
sar
repz
or
shl
sub
icebp
pop
out
bound
pop
cmp
leave
dec
inc
jp
xchg
mov
jg
ret
cmp
xchg
sahf
mov
enter
(bad)
jle
jno
xor
pusha
jl
jne
xchg
shl
les
xchg
test
stos
(bad)
xor
mov
dec
lods
inc
add
(bad)
jbe
hlt
jle
fninit
sti
pop
xchg
pop
push
jns
jne
mov
aas
es
mov
leave
sbb
test
test
sbb
xchg
aas
mov
mov
fxch
xchg
jge
test
sti
scas
into
aas
pop
adc
sub
add
sub
in
das
fcmovnb
dec
adc
call
dec
push
fs
jne
sbb
aad
std
inc
cld
dec
aad
ss
lds
pop
(bad)
pop
out
nop
jns
pop
loop
push
sbb
mov
mov
cmp
mov
cmp
inc
lds
push
adc
push
fistp
out
mov
or
jmp
popw
rcl
or
call
in
ins
imul
jae
fsub
rcl
je
rcr
lahf
sbb
mov
xchg
xor
adc
je
int3
cmp
inc
xchg
retf
retf
ins
aas
pop
shl
sub
push
jecxz
stos
popf
mov
cmp
cmp
sub
pop
sub
inc
loop
adc
xor
(bad)
mov
lods
dec
sbb
pop
mov
aaa
inc
dec
jns
xchg
push
cmp
cmp
push
into
inc
movs
jb
es
sub
push
dec
enter
repz
loop
gs
cmp
cmp
stos
push
or
jg
mov
xor
mov
div
icebp
fcmovu
call
mov
ret
mov
push
adc
aas
jo
pslld
or
xchg
out
push
jmp
mov
sbb
inc
jl
outs
mov
mov
scas
or
fild
mov
iret
pop
out
add
hlt
mov
mov
addr16
inc
and
dec
dec
adc
lods
cs
xor
mov
cli
cmp
add
mov
movaps
inc
lods
xchg
cmp
clc
pop
adc
rol
xchg
scas
dec
mov
repnz
push
jp
scas
mov
mov
out
fldcw
iret
xor
and
fst
jle
sub
pusha
lahf
mov
mov
sbb
inc
push
arpl
sbb
clc
pusha
ss
clc
mov
xchg
je
stos
cmp
inc
jp
mov
in
sub
fs
call
in
repnz
xchg
jns
and
jmp
add
outs
in
test
(bad)
in
mov
pop
mov
loope
imul
test
leave
push
sbb
xchg
in
inc
adc
and
pop
imul
wrmsr
das
mov
jbe
fs
pop
xchg
dec
rol
mov
dec
imul
pushw
pop
add
aad
push
and
pusha
jle
popa
int
mov
repz
stc
test
popf
ss
fwait
mov
mov
or
jae
cmc
shr
adc
enter
repz
mov
out
fwait
jmp
out
xor
add
fild
retf
push
mov
fwait
mov
add
popa
xchg
outs
push
imul
ror
jns
xchg
int
fiadd
jl
pop
jp
sub
sahf
sbb
adc
jecxz
pusha
dec
mov
hlt
sub
shl
push
jnp
xchg
(bad)
cmp
pop
shl
pop
mov
sbb
dec
and
mov
mov
je
fndisi(8087
push
mov
mov
cmp
inc
xlat
add
xchg
jg
and
cmp
mov
pop
div
push
mov
pop
add
in
cld
arpl
int3
inc
cmp
mov
dec
jo
scas
or
jge
mov
ret
and
xor
mov
ja
sub
lods
mov
adc
movs
adc
xor
cmp
iret
cmp
xchg
ins
jb
gs
inc
ins
arpl
jle
or
cmp
jno
cmp
daa
(bad)
icebp
inc
es
in
push
and
cmp
mov
push
xor
xchg
jecxz
leave
dec
mov
in
cs
mov
sub
mov
xor
lods
rcl
aam
jle
mov
call
xor
xchg
ficom
cs
sbb
sbb
out
mov
push
inc
cld
lahf
out
jle
daa
cmp
cdq
dec
shl
daa
sub
mul
(bad)
xchg
mov
adc
minps
or
cmps
int
lahf
mov
jbe
sub
push
sub
out
imul
mov
lahf
in
cmp
mov
jle
adc
arpl
ret
shr
xchg
xor
sbb
inc
dec
mov
mov
adc
sbb
out
shr
push
mov
cmp
add
cmp
pushf
adc
rcl
jmp
fisttp
or
scas
out
neg
js
or
adc
shl
lea
mov
cmp
dec
inc
sub
add
mov
and
dec
inc
popf
jp
push
and
ret
shl
or
push
sbb
ficom
mov
jg
and
aad
and
rcl
push
popa
sbb
and
out
pop
jmp
arpl
jns
retf
mov
mov
cmps
shr
ret
xchg
adc
sbb
in
jae
dec
push
mov
cmp
xchg
sub
jmp
mov
jmp
rcr
nop
mov
dec
pop
icebp
push
mov
inc
mov
icebp
movs
pop
das
push
cmp
and
fsub
stc
stc
(bad)
fcomp
stos
jb
push
mov
aad
cmp
mov
pop
stc
xlat
lock
popf
xor
fwait
jge
mov
adc
xchg
xchg
xchg
stc
mov
call
xor
mov
or
adc
jnp
and
loopne
jns
adc
jno
mov
push
adc
stos
int3
sti
cmps
add
dec
cmp
out
retf
(bad)
jae
xchg
fisttp
and
int3
jmp
add
mov
ror
pop
jl
push
int
and
ss
add
mov
dec
fidivr
dec
jno
add
cmps
call
mov
data16
push
mov
dec
xchg
aas
test
daa
xchg
js
push
sbb
xor
ror
aaa
lds
outs
jb
idiv
mov
fsub
dec
xchg
dec
in
xor
inc
and
jne
push
jo
pop
mov
adc
sbb
pop
inc
xchg
loopne
icebp
sbb
imul
pop
or
cmc
cwde
adc
outs
mov
mov
call
mov
dec
mov
jmp
shl
sub
jbe
adc
fwait
and
lods
mov
dec
push
call
pop
icebp
fs
adc
dec
cmp
sahf
pop
enter
sub
mov
nop
idiv
mov
or
mov
hlt
push
mov
mov
sub
pop
jp
outs
xchg
jne
inc
aad
or
xchg
or
inc
push
pop
inc
pop
fiadd
fs
dec
jno
push
idiv
cmp
and
jbe
sbb
mov
fwait
mov
inc
ret
xor
test
ja
mov
scas
or
jmp
rol
cmp
xlat
and
fmul
cmps
pop
call
adc
cmps
sub
push
and
loopne
and
popf
idiv
mov
cmp
popf
push
jmp
inc
pushf
push
mov
add
xor
fcomp
adc
mov
jp
bnd
add
jg
ror
repz
and
mov
sbb
or
fwait
push
xchg
out
fdivr
loope
test
sub
scas
inc
sub
mov
cs
cmc
std
fisttp
(bad)
call
push
fnstenv
add
out
lahf
xchg
ror
sub
inc
or
sub
inc
sub
adc
aam
test
push
inc
xchg
add
pop
pop
je
div
bound
repnz
mov
mov
imul
adc
mov
bound
mov
repnz
lahf
xor
jne
mov
cmp
or
mov
and
loopne
inc
inc
dec
out
adc
xor
cmps
imul
fs
inc
and
xor
stos
sub
cdq
mov
(bad)
mov
xchg
inc
fistp
and
pop
bound
adc
retf
lock
sahf
pop
dec
cli
icebp
adc
aad
pop
addr16
xor
pop
inc
das
and
les
fst
mov
jecxz
out
test
push
jl
nop
dec
xlat
scas
fs
call
(bad)
push
xchg
mov
mov
sub
cmps
sbb
cdq
push
jle
in
sar
push
(bad)
fcomp
jbe
sub
sub
and
jb
mov
and
xor
imul
xchg
in
mov
int
call
repnz
jg
jbe
cli
mov
clc
lea
xchg
jg
sbb
(bad)
adc
retf
fimul
fnsave
repnz
cmps
sub
out
(bad)
jecxz
leave
jmp
aad
inc
xor
xchg
dec
jno
adc
pop
nop
add
retf
(bad)
sti
xchg
rcr
sbb
pop
stos
xor
shl
jmp
pop
adc
ja
shr
pop
cdq
push
into
daa
retf
xor
rcl
mov
jecxz
repz
dec
adc
mov
jb
add
test
dec
retf
adc
movs
jecxz
aam
out
push
mov
jge
sbb
mov
imul
mov
adc
mov
mov
dec
gs
mov
pop
jb
fstp
rcr
pop
cmp
or
add
fstp
inc
pop
ficom
test
cmp
std
mov
lods
jg
cmp
or
pop
stos
cli
into
(bad)
lods
mov
inc
push
in
retf
pop
and
fcmove
add
xchg
inc
cmp
out
inc
sbb
jno
lds
not
dec
sbb
xor
cmp
gs
daa
in
push
mov
push
sbb
sbb
pop
shl
into
push
call
fsubp
jne
add
ss
xor
gs
mov
movs
mov
mov
and
test
jmp
cmps
out
nop
jne
sub
sbb
mov
sbb
push
mov
push
and
xchg
xchg
sub
mov
jle
cmp
adc
jb
fisttp
in
push
mov
js
int
loopne
and
in
out
cmp
lds
inc
jbe
fs
jg
cmps
jbe
retf
dec
stos
mov
add
and
mov
bound
adc
dec
in
mov
sub
and
div
or
jecxz
xor
cs
mov
adc
cmp
cmp
cwde
out
push
in
imul
push
dec
pop
xchg
imul
add
push
xchg
add
xor
jno
and
push
test
das
jmp
sub
xchg
xor
mov
mov
adc
xchg
adc
outs
dec
dec
ret
or
mov
or
shr
sbb
jb
xchg
cli
scas
retf
call
inc
xchg
addr16
xor
mov
pop
movs
mov
movs
push
mov
xor
clc
jae
(bad)
je
(bad)
mov
neg
push
mov
mov
pop
inc
inc
frstor
cmp
push
aas
loop
jnp
call
rcr
stos
iret
and
or
lds
fwait
jmp
cmp
inc
pop
popf
cmc
stos
mov
jg
movs
rcr
jmp
iret
into
imul
into
cmp
push
shr
sbb
stos
sbb
or
xchg
sub
jecxz
jne
xor
push
add
inc
stos
jb
clc
je
lods
xchg
sub
dec
movups
pop
cmp
fsub
cmp
jle
mov
adc
xchg
lods
(bad)
pop
sahf
jecxz
pop
xor
inc
cs
xor
sbb
cmp
rcl
rcr
or
dec
sbb
xlat
dec
nop
sti
xor
mov
mov
jae
aaa
add
je
inc
push
pusha
das
fs
or
xor
ins
fdiv
in
mov
jne
popf
(bad)
ins
and
cmps
imul
mov
inc
sti
and
inc
pusha
mov
pop
mov
popa
idiv
in
not
ret
dec
jle
sbb
les
ja
mov
outs
inc
jle
in
jns
ins
and
mov
fs
jl
sbb
cmp
mov
movs
scas
cdq
pop
sbb
cli
push
adc
out
aaa
and
adc
shr
inc
test
cdq
push
or
pop
cdq
jb
jp
fimul
call
mov
adc
sub
ins
cmps
xchg
and
jg
js
mov
jmp
ret
sbb
add
fsubr
test
mov
jns
cwde
push
adc
xor
and
aas
cmp
dec
icebp
cmp
aad
xchg
cmc
test
dec
jbe
(bad)
arpl
dec
or
and
addr16
cmps
cmc
fst
clc
sti
(bad)
(bad)
jne
lahf
int
fsubrp
popa
dec
cwde
push
mov
xchg
adc
jp
ds
aam
xor
pop
sti
adc
icebp
sub
arpl
popf
daa
add
bound
cli
mov
ror
adc
xor
outs
pop
jne
pop
push
jnp
mov
fwait
mov
scas
sub
inc
push
dec
jne
cmp
movs
sub
in
jl
xchg
leave
jecxz
jecxz
sbb
into
xchg
sub
push
int
pop
adc
add
sbb
int
or
sbb
gs
xchg
add
sbb
enter
xchg
icebp
movs
loop
sub
pop
xor
scas
jl
fldenv
jo
jl
jb
pop
xlat
and
mov
adc
icebp
jns
push
jo
cmp
xchg
nop
xor
add
xchg
adc
hlt
pop
mov
push
lods
fiadd
iret
cmp
(bad)
mov
mov
pop
dec
push
jecxz
repnz
mov
mov
ss
int3
std
xlat
popa
inc
push
xor
mov
sub
in
shr
dec
and
sbb
daa
push
dec
or
rcr
jne
push
out
fiadd
dec
(bad)
dec
into
inc
shl
call
fisub
pop
mov
mov
je
push
les
in
push
mov
dec
push
xor
mov
outs
xor
mov
pop
push
push
leave
in
out
xchg
and
out
movsx
add
xchg
inc
sbb
ret
jl
push
mov
fcmovnb
loope
stos
cli
icebp
fmul
xor
inc
push
ins
cmp
fcmovu
out
xchg
mov
test
mov
sub
pop
jno
mov
dec
mov
(bad)
popf
shr
and
in
xchg
iret
adc
push
mov
dec
xlat
es
inc
std
cwde
jo
pop
fwait
lock
push
cld
jl
push
movs
dec
or
sub
mov
das
mov
addr16
sbb
in
gs
xor
movs
jmp
out
iret
cmps
test
(bad)
mov
jno
nop
sbb
xor
hlt
cs
ret
out
mov
xchg
pop
push
push
sub
inc
dec
push
pop
clc
retf
push
ins
je
add
mov
mov
out
xor
enter
popf
cld
in
inc
xor
stos
sub
inc
pop
hlt
xchg
mov
sbb
pushf
sub
xchg
movs
mov
call
leave
lods
pop
dec
cmps
int3
repnz
xchg
lahf
jb
into
clc
test
dec
ins
cwde
inc
test
push
cwde
xchg
add
dec
adc
call
pop
mov
nop
test
popw
les
or
xor
xor
ret
or
dec
sahf
ss
loop
pop
adc
scas
push
test
bound
or
rcl
pop
push
mov
hlt
xchg
(bad)
mov
cmp
push
or
cwde
iret
push
dec
sbb
jge
inc
or
adc
in
lock
xor
mov
pop
cwde
nop
xchg
mov
jg
or
push
mov
mov
dec
adc
xlat
dec
es
out
iret
xchg
int
pushf
jge
add
mov
xor
lahf
or
or
sahf
outs
dec
xchg
xchg
bound
push
hlt
sbb
mov
and
cmp
into
lea
clc
xchg
cmp
mov
lahf
ss
adc
cld
in
ret
mov
jb
push
(bad)
pop
fs
sbb
pop
int
or
ja
call
cs
xor
unpcklps
sbb
xlat
mov
cmps
mov
dec
test
(bad)
xlat
scas
adc
mov
sbb
mov
adc
rcl
xchg
mov
repz
push
and
sbb
push
in
mov
pop
sbb
pop
iret
ret
fcomp
add
out
mov
jbe
xchg
push
cmc
jns
sbb
into
sbb
or
sbb
imul
cmp
fisubr
stc
fisubr
fst
scas
rol
inc
les
add
lods
adc
jp
jnp
(bad)
jmp
pop
aaa
and
lock
pop
pop
mov
lahf
or
call
ss
mul
and
dec
mov
xor
cmps
xchg
inc
pop
aas
ror
mov
adc
inc
out
and
enter
test
push
fstp
idiv
ja
xchg
adc
xor
push
cmps
adc
xchg
xor
and
sbb
or
paddq
sbb
ror
pop
pop
cdq
add
dec
loope
call
ins
xor
jne
add
hlt
xchg
outs
or
movs
sub
arpl
mov
lods
out
xor
mov
clc
ds
daa
test
repz
jecxz
jno
aam
push
and
in
inc
int
les
data16
xchg
nop
push
mov
cmps
xchg
dec
fs
xchg
div
push
ror
int
push
aad
add
data16
and
cdq
jns
jbe
ds
(bad)
fnstcw
scas
fstp
imul
sbb
test
push
lods
enter
sbb
in
pop
dec
cwde
jo
pop
or
jmp
in
add
or
pop
hlt
mov
xchg
dec
adc
push
(bad)
and
jne
cld
xchg
inc
jg
sub
leave
adc
push
stos
ret
sbb
in
inc
iret
push
cmp
dec
cmp
arpl
or
xchg
ds
clc
fiadd
aas
cmc
in
adc
mov
out
add
cmp
inc
and
ja
adc
jle
call
dec
in
mov
das
xchg
in
inc
push
retf
push
scas
fucomip
pop
mov
fadd
test
sar
int3
pop
jg
loop
scas
xor
sub
mov
loop
neg
sbb
mov
adc
clc
nop
fcmovnbe
lods
sbb
loop
dec
das
test
jp
jl
in
int3
jg
sub
push
lahf
out
(bad)
ror
pop
mov
in
sub
out
add
outs
call
pop
jb
push
das
test
push
dec
fild
mov
cmps
push
sub
lock
das
push
(bad)
push
sub
mov
inc
das
(bad)
jge
sbb
aas
cmps
inc
inc
inc
inc
jecxz
popa
mov
push
jmp
sub
cmp
dec
mov
mov
bound
mov
das
dec
loope
call
rol
jbe
std
cmp
hlt
dec
outs
pop
jne
push
cli
daa
gs
jmp
les
adc
fs
mov
enter
fstp
jmp
loope
push
cwde
inc
xor
mov
xor
imul
add
loope
(bad)
cmp
cmp
xchg
adc
or
fistp
adc
(bad)
dec
mov
pop
daa
ror
dec
repnz
das
xchg
retf
and
cmp
xor
mov
push
ret
js
mov
fldcw
aas
jmp
pop
in
aas
outs
leave
shl
cs
mov
iret
cmps
sub
push
mov
int
mov
inc
icebp
push
imul
xor
in
rol
dec
or
pusha
test
(bad)
(bad)
xchg
and
ret
cmp
ins
pop
and
mov
ss
sti
push
outs
cmc
sbb
dec
into
pushf
push
fnstsw
jecxz
jno
jne
add
sti
loope
fistp
ins
mov
je
mov
cmc
jns
fucomi
pop
sub
dec
jae
mov
dec
mov
pop
and
cmp
je
repnz
scas
int3
inc
(bad)
loopne
xchg
stos
jp
mov
fwait
stos
cdq
(bad)
jl
fcmovnb
or
mov
rcl
mov
mov
outs
cld
mov
and
pop
ss
movs
dec
es
das
iret
scas
pop
loop
jge
arpl
jb
and
push
hlt
pop
dec
adc
call
adc
mov
pop
(bad)
ss
pop
jno
push
jb
fstp
loop
ss
lds
mov
sub
ja
div
push
or
lods
data16
in
sbb
mov
rol
adc
leave
mov
mov
dec
pop
int
inc
add
outs
push
dec
xchg
cmps
and
cmp
adc
shr
sahf
daa
lahf
push
inc
leave
bnd
push
fisttp
scas
data16
mov
rcr
push
ins
cmc
jo
or
jle
rcl
fcom
fldcw
repz
xor
lea
inc
mov
pop
push
stos
addr16
ja
retf
ret
jmp
(bad)
push
pop
mov
mov
xchg
ins
or
cmp
repnz
(bad)
movnti
xor
movs
sbb
sbb
retf
inc
movs
mov
mov
jb
(bad)
sbb
sahf
and
jno
add
popa
ds
mov
enter
ret
cmps
ficomp
fs
mov
push
daa
push
mov
inc
xchg
sub
aad
shl
mov
mov
mov
cmp
test
mov
mov
fcmovnb
movs
xlat
out
shl
stos
mov
inc
fwait
inc
xchg
scas
mov
push
lds
sbb
hlt
mov
and
push
das
inc
ins
das
jmp
pop
call
dec
pop
sbb
es
inc
sub
cmps
call
sub
loopne
xor
push
lock
xor
jmp
mov
fistp
push
jnp
jl
ds
es
push
push
or
div
xor
mov
mov
sub
push
mov
and
or
sub
nop
mov
jmp
push
inc
mov
mov
jl
jns
mov
aas
fcomip
jmp
xchg
push
and
sub
mov
popa
add
push
in
mov
adc
movs
js
or
dec
jmp
push
sbb
test
xchg
and
or
sbb
xor
stos
sti
mov
jle
mov
cld
or
jmp
and
fwait
ret
cmc
pop
lds
or
push
add
pushf
repnz
loopne
repnz
test
xchg
jns
push
adc
dec
dec
inc
and
mov
xor
loope
xchg
cld
push
test
popa
scas
inc
add
cmc
pop
rol
int
ret
repz
lea
sahf
addr16
mov
pop
outs
mov
sub
xor
scas
pop
(bad)
cdq
dec
pusha
je
push
xor
add
dec
nop
jns
and
pop
mov
fimul
rcr
push
mov
and
sbb
mov
mov
leave
cmp
cdq
out
pop
daa
adc
pop
aad
fwait
mov
movs
adc
cmp
jle
pop
push
xor
jp
jg
mov
pop
mov
rcl
jb
dec
mov
outs
xor
cmps
mov
xchg
cmp
fsub
jno
fcmovbe
add
cmp
push
loopne
fwait
repnz
jbe
cdq
clc
jle
les
xchg
cmp
mov
pop
daa
sbb
pop
fwait
cmps
test
xchg
inc
mov
pop
enter
test
(bad)
xlat
(bad)
adc
mov
leave
pop
cld
jmp
pop
shl
jno
jns
jo
leave
and
test
outs
imul
shl
(bad)
rcr
lods
and
out
out
mov
and
stc
jo
popf
repnz
dec
xor
pop
xor
push
lock
aas
fild
out
in
loop
xor
mov
sub
xor
mov
xor
cmps
test
push
inc
adc
int
sahf
aaa
pusha
and
and
dec
popf
xor
mov
lahf
or
gs
stos
add
sub
pop
add
jno
aas
dec
popf
loope
adc
push
add
push
aad
and
cld
and
inc
push
sub
pop
fmul
test
jmp
stos
shr
mov
lahf
dec
mov
test
xchg
fsub
jge
call
outs
sub
push
in
jp
neg
sub
pop
cdq
dec
mov
mov
dec
xor
jmp
(bad)
or
and
jp
pop
es
xchg
pop
call
into
jge
pop
sbb
addr16
(bad)
jmp
inc
mov
dec
xor
ret
(bad)
push
clc
cmp
cwde
ror
pop
mov
shl
std
icebp
xchg
test
or
push
fld
sub
stc
push
xchg
out
inc
ds
pop
mov
nop
xchg
div
ret
leave
popf
push
dec
mov
in
imul
dec
cli
fidivr
arpl
ja
sbb
add
popf
pop
repz
nop
jo
adc
(bad)
loopne
ins
xchg
ret
add
mov
enter
pop
fnstsw
push
(bad)
or
push
jnp
inc
(bad)
mov
aas
xlat
xchg
jge
adc
das
daa
xchg
outs
mov
fcmovbe
jmp
js
les
data16
mov
dec
and
dec
retf
jge
sbb
ins
arpl
cmps
mov
sub
lods
jle
xchg
xor
sub
push
lods
mov
mov
mov
inc
xchg
or
mov
loop
dec
sahf
sbb
jge
xor
mov
sub
popf
jp
shl
sbb
and
jp
inc
jecxz
jo
std
rcr
mov
aam
outs
leave
inc
and
jnp
ret
mov
cmp
dec
arpl
int
hlt
je
out
push
repz
dec
stos
mov
push
jns
call
cmps
cmps
sbb
and
pop
push
(bad)
dec
jg
lahf
xchg
das
mov
or
es
xchg
sti
clc
jmp
outs
lahf
or
addr16
(bad)
out
(bad)
in
pop
stc
fist
push
fmul
mov
rol
repnz
inc
or
lods
push
not
imul
cdq
outs
xchg
pop
pop
and
jo
lahf
mov
xchg
mov
and
aad
push
mov
clc
cld
push
fisub
mov
dec
mov
lea
jecxz
es
mov
add
push
dec
repnz
out
mov
jmp
xor
dec
popa
sub
dec
fimul
popf
add
cmc
sti
push
jecxz
fcmovnb
add
aam
inc
sahf
add
inc
mov
sub
mov
add
push
sbb
and
jmp
mov
xchg
jecxz
or
add
inc
shr
std
leave
inc
adc
cmp
test
retf
retf
loop
sar
mov
in
cmp
cmp
inc
mov
(bad)
sub
push
mov
adc
cmp
mov
or
loop
iret
pop
push
jo
mov
dec
adc
xor
pop
daa
xlat
inc
pop
mov
in
addr16
mov
dec
sub
mov
cmc
or
xor
pop
sbb
sar
rcr
inc
cmps
mov
xchg
aaa
sub
pop
out
jmp
mov
test
adc
xor
sbb
ja
ins
cmp
jl
in
rep
and
mov
dec
cmp
dec
in
movs
mov
xor
jge
mov
loope
out
movs
pop
jmp
rcl
iret
pusha
and
bound
mov
add
adc
jp
mov
jecxz
xchg
out
pop
(bad)
push
adc
cmps
mov
mov
push
ret
pop
(bad)
sub
mov
in
dec
pand
sbb
clc
add
movbe
stos
int
loop
repnz
jg
cmc
or
xchg
jle
inc
inc
inc
sub
outs
(bad)
test
loop
repz
sti
dec
jnp
stos
fisttp
loop
fmul
es
and
lahf
sbb
in
je
dec
repnz
popf
dec
dec
sub
call
push
inc
adc
(bad)
or
push
sar
sub
(bad)
pop
jns
in
pop
scas
call
leave
jp
fild
mov
cmps
jle
adc
in
sahf
ret
mov
stos
cs
jb
pop
stc
inc
jp
inc
push
enter
stos
fistp
xor
or
bound
shl
xlat
or
jnp
xor
add
jl
push
xchg
(bad)
daa
cs
sub
in
or
enter
movs
(bad)
out
pop
push
es
pop
mov
loope
shl
sbb
(bad)
sub
sub
jmp
outs
std
push
scas
je
sub
cmps
xor
divps
es
xor
fstp
rol
data16
push
cdq
pop
mov
add
cdq
xor
addr16
and
mov
nop
outs
lods
dec
rcr
int3
movs
scas
or
imul
inc
(bad)
push
cmc
repz
test
addr16
inc
mov
icebp
pop
mov
movaps
jbe
jmp
test
dec
into
pop
sub
or
cwde
sub
add
xchg
lods
and
shl
in
call
cld
add
out
adc
push
icebp
or
mov
jnp
pop
push
jno
mov
stc
shl
sub
imul
or
xor
ds
jmp
jge
cld
mov
std
out
or
xor
cld
arpl
dec
mov
lods
push
dec
(bad)
fisubr
test
fcomp
push
shl
xor
in
cmps
inc
push
ret
fs
xchg
pop
and
or
sti
mov
inc
pop
xor
(bad)
xchg
les
add
out
fdiv
fist
repz
cmp
popf
mov
pop
xchg
adc
mov
imul
(bad)
cld
ja
int
push
cmp
push
push
into
mov
sti
mov
jns
push
loop
ror
xchg
ja
or
scas
dec
pop
in
cli
pop
mov
jle
arpl
lock
aam
repnz
repz
mov
cmp
push
pop
pop
fidivr
aad
pop
and
mov
jg
cwde
scas
jb
aad
and
enter
xor
and
movs
repnz
in
adc
dec
xchg
adc
jnp
sub
retf
mov
bound
jne
cmp
inc
cdq
shl
push
(bad)
pushf
jl
dec
jbe
inc
fistp
sub
adc
mov
pop
sub
scas
arpl
enter
nop
inc
inc
test
sub
cmp
je
push
cmp
jne
push
pop
lock
pusha
call
pusha
jmp
fwait
mov
mov
arpl
sar
mov
push
ss
mov
fadd
iret
mov
aam
jmp
hlt
add
mov
gs
dec
nop
fs
loop
popa
sbb
aad
pop
adc
iret
ds
cld
test
outs
mov
push
scas
xchg
push
cli
and
cli
sbb
add
out
cmp
retf
je
or
test
lods
lock
push
jecxz
sbb
adc
push
mov
dec
test
loope
dec
(bad)
xor
and
cmp
adc
xchg
fimul
pop
adc
jae
cli
cwde
imul
inc
pushf
out
popa
mov
or
add
lods
mov
fwait
lds
aam
loopne
mov
movs
lods
mov
fimul
aad
or
clc
xor
sub
lahf
cmp
and
sub
mov
mov
adc
fiadd
mov
test
into
fdivr
cld
fst
sub
jne
mov
lods
xchg
out
jb
push
mov
xchg
mov
inc
das
jmp
xchg
in
push
imul
jns
call
sub
xchg
mov
out
mov
mov
test
loopne
pop
add
in
dec
mov
push
adc
test
int3
cmp
inc
sbb
jecxz
pop
scas
push
push
pop
jb
outs
jmp
push
sbb
lods
repnz
sbb
pop
or
inc
jmp
xor
add
lea
mov
or
inc
call
bound
mov
enter
nop
out
mov
ror
dec
popf
jb
ds
fnsave
fsub
mov
mov
jne
mov
mov
sbb
sub
xchg
mov
cmps
pop
stos
mov
mov
mov
arpl
inc
(bad)
ins
cdq
push
dec
sub
pop
sbb
cmc
xor
aas
push
lods
ja
pop
cmp
xchg
mov
jo
push
dec
test
shr
mov
sub
out
jb
pop
mov
in
daa
dec
sub
pop
aas
retf
call
push
xor
cdq
cdq
xor
pop
xor
rol
daa
outs
out
je
inc
jns
xchg
out
loop
retf
inc
fcmovb
das
dec
out
std
popf
pop
lea
icebp
fwait
mov
jmp
lds
jne
js
jmp
movs
and
add
jo
shl
mov
and
icebp
nop
add
in
fwait
pop
and
sti
dec
cmp
sub
nop
sub
mov
mov
lods
test
sub
cmp
pop
inc
inc
jge
and
aaa
xchg
aas
pop
xor
push
sub
jo
mov
jmp
les
out
dec
loopne
cmp
lahf
ins
pop
lods
jbe
sbb
and
call
jno
xchg
cmp
out
in
push
push
loop
popf
scas
(bad)
add
dec
xchg
cdq
inc
(bad)
or
movs
icebp
rcr
cmp
jle
sub
mov
cmp
rcl
xchg
div
into
push
push
outs
mov
adc
xchg
loop
les
shl
lea
pusha
mov
push
sub
dec
sub
retf
add
out
jecxz
test
jbe
pop
sub
xchg
jo
and
and
sbb
jle
xor
adc
sub
mov
sub
add
xchg
or
pop
cmp
pop
sbb
sub
mov
mov
jmp
mov
mov
sub
test
pop
mov
fld
jmp
sub
adc
mov
std
mov
xchg
mov
cwde
call
sub
pop
push
xchg
ins
jl
inc
xchg
add
fmul
stos
mov
outs
arpl
test
push
lock
dec
jmp
pop
mov
fadd
fst
shl
mov
dec
xlat
pop
cs
sub
lock
test
pop
lods
push
movs
and
push
lds
xchg
dec
outs
xchg
loope
inc
pop
arpl
je
stc
(bad)
test
movs
or
or
mov
mov
mov
or
cs
adc
sbb
and
mov
or
cmp
lods
je
aad
aaa
call
jecxz
mov
jle
push
pop
js
or
add
ficomp
push
sahf
pop
test
movs
pop
dec
xor
(bad)
aam
cs
and
call
xor
mov
dec
retf
imul
vmwrite
or
mov
dec
fnstenv
cmps
sti
scas
and
aaa
mov
test
aad
icebp
pop
xor
xor
loopne
cmc
jmp
std
jecxz
adc
test
inc
je
push
push
jmp
sbb
ins
or
addr16
jecxz
jmp
mul
test
jbe
cwde
out
sti
not
push
out
daa
fimul
retf
out
iret
mov
jl
mov
imul
fnstenv
jmp
leave
push
sbb
inc
inc
mov
pop
dec
and
pop
out
sbb
shr
add
jmp
fdivr
pusha
mov
stc
rcl
mov
outs
add
sbb
int3
push
sub
shl
cmps
rol
jge
jmp
retf
mov
clc
xchg
loop
sbb
jl
sbb
cmp
adc
jbe
and
xor
arpl
add
push
xchg
pop
jns
int
push
in
aas
or
in
daa
add
(bad)
faddp
outs
std
jmp
fadd
cld
sahf
jg
stc
pop
movs
adc
aas
lea
or
dec
dec
loope
call
mov
xlat
mov
bound
shr
(bad)
int
out
xchg
in
ins
test
push
inc
and
in
out
inc
jmp
dec
dec
xchg
fistp
ins
xchg
sub
movs
in
imul
inc
adc
mov
ja
cmps
xchg
out
imul
mov
xor
inc
out
repnz
dec
in
mov
cmp
jns
and
inc
mov
nop
clc
int
cwde
es
dec
(bad)
fsubp
cmps
mov
mov
or
pushf
aad
jge
nop
push
mov
pop
(bad)
mov
mov
push
lods
repz
cmp
gs
sub
or
push
or
dec
mov
loopne
dec
add
call
daa
fisubr
repz
fs
addr16
push
mov
push
gs
call
repnz
mov
leave
jne
int
imul
or
fimul
retf
jo
pop
fisub
sub
xor
jecxz
movs
adc
sub
scas
mov
lahf
data16
retf
imul
pop
jae
mov
test
lds
int3
cdq
xlat
jo
movs
fmul
(bad)
ficomp
daa
(bad)
movs
cmc
outs
das
mov
and
xor
mov
js
ins
(bad)
cmps
or
xlat
(bad)
nop
aam
and
outs
cld
retf
or
mov
cmp
xchg
ins
push
adc
dec
dec
outs
data16
add
xor
and
jno
jp
push
stos
in
stos
xchg
div
addr16
push
mov
inc
xchg
shl
add
cmp
cmp
sahf
call
xor
dec
mov
jb
movs
lods
xor
iret
or
gs
dec
leave
mov
imul
in
adc
loope
mov
dec
cwde
add
mov
inc
xor
dec
or
adc
mov
jnp
cdq
retf
arpl
xchg
xor
ficomp
push
add
(bad)
or
retf
push
aas
sub
scas
jecxz
jo
fs
in
retf
pop
popf
int3
movs
cmp
push
mov
ss
mov
sbb
add
push
and
jl
xchg
pop
dec
lahf
jl
lock
das
int3
and
xchg
pop
mov
(bad)
xor
adc
shr
and
xchg
popa
dec
pop
gs
imul
inc
sbb
adc
jl
test
jae
mov
push
stos
and
push
daa
dec
js
inc
mov
xchg
div
iret
stos
inc
aaa
test
pop
rol
test
sbb
or
je
jmp
in
inc
adc
mov
call
dec
lahf
(bad)
ds
lahf
cli
mov
retf
pop
movs
inc
or
fs
imul
fisttp
daa
mov
jecxz
adc
inc
cmp
and
inc
mov
into
movs
addr16
sbb
cs
dec
fbstp
aas
test
inc
push
ficom
pop
or
test
retf
dec
push
daa
mov
test
gs
push
dec
mov
outs
jo
(bad)
lea
stos
adc
mov
(bad)
dec
cs
cmp
mov
cmp
sub
ret
inc
ins
imul
and
inc
dec
clc
loop
or
dec
lahf
push
pop
cmp
mov
xchg
jae
and
xlat
cs
outs
jg
mov
ins
(bad)
int3
clc
mov
movs
lahf
imul
shl
(bad)
or
arpl
pop
sub
jns
jb
xor
dec
add
out
pop
jl
leave
pop
jnp
cmp
sub
jb
sub
pop
mov
fucomi
nop
mov
xor
add
xlat
into
mov
out
dec
sub
jp
daa
jbe
sbb
outs
or
jae
mov
std
cmp
dec
mov
jne
sub
leave
repnz
retf
inc
loop
inc
mov
jno
cmp
push
inc
or
dec
push
add
aam
lea
mov
pop
mov
adc
mov
hlt
mov
and
jbe
mov
inc
leave
xchg
test
fs
mov
push
mov
and
mov
xor
dec
mov
and
(bad)
dec
xor
adc
pop
jne
out
adc
sbb
push
pop
add
ins
stos
mov
add
jmp
add
aad
rol
out
(bad)
mov
test
mov
jbe
or
pop
scas
mov
fst
(bad)
jle
call
enter
jmp
loopne
std
inc
into
imul
push
mov
sbb
fcom
aaa
inc
std
popa
stc
clc
jnp
pop
mov
push
leave
push
call
ds
mov
xchg
lock
jno
fs
xor
cmps
inc
(bad)
ins
movs
fisttp
push
mov
je
jbe
cld
stc
jg
xchg
std
imul
or
cmp
sub
mov
and
push
push
push
mov
repnz
inc
inc
add
and
es
jns
jl
call
jae
into
mov
aaa
cmp
clc
cbw
push
xchg
mov
jae
cmp
(bad)
jns
adc
sub
out
inc
adc
adc
ss
add
or
outs
cwde
aaa
in
ins
test
ss
mov
inc
add
mov
gs
aaa
pop
mov
mov
imul
dec
mov
adc
mov
mov
test
and
mul
mov
inc
imul
stos
test
push
cs
or
(bad)
cmp
into
movs
pop
mov
xchg
adc
xor
inc
inc
arpl
and
imul
inc
xor
pop
push
mov
push
iret
inc
pop
loope
mov
jge
inc
cmp
movs
push
(bad)
pushf
sbb
imul
retf
pop
xor
aas
into
cmp
js
jbe
xchg
jb
xchg
jge
sub
jge
and
rcl
aad
mov
pop
hlt
mov
mov
outs
mov
fucomip
or
sti
cmp
rcr
or
jge
hlt
pop
nop
pop
mov
jecxz
out
icebp
retf
push
xor
or
push
jp
cmp
mov
dec
xchg
sub
mov
test
in
fsub
pop
dec
pop
cmps
frstor
sub
dec
in
cmp
clc
shr
mov
mov
es
rcr
cmps
sahf
icebp
test
mov
or
cmp
js
inc
les
data16
movs
in
mov
dec
xchg
pop
mov
ret
(bad)
jmp
xor
sbb
add
nop
(bad)
or
jge
fcom
xor
test
repz
call
jnp
mov
mov
dec
inc
xor
adc
dec
cwde
sbb
mov
jge
sbb
ror
div
(bad)
mov
dec
mov
jmp
aaa
xor
fidiv
cdq
repnz
daa
xor
in
and
aaa
(bad)
sar
cmp
xor
loopne
or
sub
cmp
sbb
repnz
pusha
push
fisub
cmp
dec
mov
outs
fwait
xchg
pop
mov
pop
test
jmp
leave
dec
ret
cdq
sub
xor
inc
mov
xor
cmp
daa
test
push
mov
ins
sbb
push
(bad)
push
xchg
mov
mov
sahf
ret
(bad)
cmp
es
and
data16
push
dec
hlt
dec
scas
mov
mov
mov
(bad)
aad
test
adc
iret
imul
sub
mov
sbb
mov
gs
xchg
scas
xchg
ror
int3
rol
mov
dec
repnz
xor
mov
cmp
les
(bad)
jmp
int3
cmp
xlat
mov
out
cdq
push
xor
je
cmp
cmp
dec
div
xchg
ins
jb
inc
out
xor
cmp
xchg
jecxz
jo
sub
nop
or
movs
dec
mov
sub
sbb
xchg
call
pusha
or
or
dec
push
jg
rcl
sbb
add
dec
gs
jb
in
out
push
add
pushf
push
stos
inc
pop
je
pop
sub
(bad)
js
jmp
pop
mov
iret
aam
push
ds
mul
dec
mov
movs
bound
pop
sahf
push
jno
mov
mov
sbb
xor
cmps
(bad)
cmc
fsubr
cmp
adc
je
and
xchg
push
dec
loopne
sbb
sub
(bad)
mov
(bad)
xor
sahf
out
(bad)
outs
push
mov
movs
sbb
movntps
xor
hlt
push
xchg
and
loopne
jne
(bad)
inc
and
pop
sahf
ins
call
sbb
fsubr
add
adc
pop
aam
and
add
add
mov
div
pop
arpl
mov
cmp
adc
sti
ins
jl
mov
push
sbb
jp
inc
mov
push
mov
jbe
jmp
ret
cwde
push
fstp
add
pusha
cmp
enter
sub
test
mov
pop
pop
and
jp
in
test
and
add
mov
push
int
in
js
jmp
das
xchg
movs
idiv
jno
loopne
sbb
mov
jmp
xor
dec
push
inc
sbb
push
and
xchg
and
xor
fimul
test
push
sahf
test
stos
je
xchg
mov
sub
fisubr
sub
adc
hlt
or
ror
fmul
mov
jecxz
dec
push
push
push
mov
push
or
xor
sbb
shr
inc
je
arpl
add
std
sbb
adc
aas
push
jl
sub
dec
in
xchg
add
fmul
mov
imul
ss
mov
cli
mov
(bad)
mov
repnz
mov
mov
stos
sub
jg
out
aam
cs
or
loope
aad
xor
je
cld
mov
add
jno
adc
jbe
and
ins
and
or
test
jno
cmp
aam
pop
fnsave
adc
push
imul
aad
test
mov
cwde
sub
or
xor
cmp
fs
pop
mov
loopne
xor
repz
pop
cmps
mov
dec
xor
mov
xchg
daa
sbb
int3
fdivr
xlat
cmp
lock
adc
mov
pop
jle
mov
push
jns
xchg
mul
and
outs
lea
dec
xchg
xchg
gs
xor
xor
icebp
dec
or
adc
iret
in
out
xor
pop
pop
imul
mov
std
mov
xchg
add
scas
hlt
pop
mov
push
fnsave
movs
or
or
push
mov
pop
mov
sub
jmp
xor
int
push
sti
or
outs
add
stc
push
inc
outs
mov
jae
loop
enter
jge
(bad)
repz
push
out
push
iret
mov
out
fisub
add
es
mul
push
push
lods
adc
xchg
ja
stos
aas
je
mov
jbe
pop
stc
out
leave
aaa
es
cmp
or
clc
xchg
adc
(bad)
adc
and
in
pop
pop
fild
push
push
aaa
push
and
xchg
xlat
sbb
and
add
fistp
pushf
xchg
bound
xchg
fs
sub
mov
lock
(bad)
cmp
aam
cmp
sub
pop
cmp
mov
out
mov
shr
xor
inc
sti
cmp
cmp
mov
test
pop
test
gs
xchg
js
loope
imul
and
shr
cmp
jl
cwde
mov
xor
fsubr
stos
ja
std
add
je
jecxz
repz
lds
dec
push
mov
loop
sub
adc
dec
call
fistp
icebp
je
inc
retf
jle
add
jo
adc
adc
xchg
dec
loop
sub
inc
ret
iret
nop
mov
sahf
repnz
inc
mov
sub
aad
retf
jne
and
push
outs
sar
lock
out
les
adc
js
and
(bad)
xchg
and
adc
test
out
jge
jg
bound
fist
shl
ds
xor
cmp
js
fdiv
shl
or
sub
jmp
fisubr
pop
fs
sub
rcr
clc
jo
enter
push
cli
jb
hlt
mov
mov
and
cmp
(bad)
clc
ror
inc
sub
jns
bound
aam
aad
cmp
fwait
outs
push
adc
popf
xchg
jns
mov
out
pop
(bad)
jne
enter
add
and
and
and
jno
fst
and
sbb
outs
mov
pushf
mov
adc
ins
lods
rol
test
outs
ror
or
mov
mov
je
loope
nop
outs
and
fdivr
fsub
xlat
repz
lds
lods
push
inc
ror
in
pusha
loope
cmc
pop
pop
popf
leave
test
push
sysret
cmp
pusha
js
int
cmp
mov
faddp
repz
sub
jge
mov
add
cmp
adc
or
xchg
in
pop
sub
push
hlt
mov
ins
cmps
jb
xor
add
xchg
cmp
test
in
xchg
(bad)
jmp
and
cmc
xchg
movs
pop
das
imul
sub
fcmovnu
sti
push
movs
(bad)
aas
scas
pop
inc
(bad)
leave
lods
xchg
fs
and
fs
fidiv
mov
cmp
xchg
dec
inc
lea
in
repz
inc
retf
cmp
ss
loope
and
(bad)
loop
out
(bad)
inc
dec
ins
stos
xor
or
scas
or
in
fs
adc
daa
mov
mov
cld
mov
mov
adc
jp
add
mov
and
iret
mov
mov
cmps
vpcmpgtd
cli
push
test
mov
sub
push
push
adc
(bad)
mov
sub
test
inc
gs
enter
jg
loopne
out
out
int3
scas
mov
out
repnz
sar
xor
imul
sub
jnp
or
ins
sbb
jecxz
adc
daa
and
movs
mov
cwde
repnz
clc
ror
adc
cmc
test
adc
or
(bad)
ss
sbb
cmp
dec
mov
hlt
cmps
pushf
xchg
dec
inc
push
in
push
shr
sahf
scas
adc
das
daa
fs
sub
jo
xor
in
shl
mov
xchg
mov
jmp
movs
neg
bound
adc
push
pushf
and
sub
sub
and
in
add
data16
bound
cmps
push
loopne
add
pop
adc
sbb
push
shl
(bad)
mov
inc
sub
call
int
jmp
(bad)
jg
mov
adc
aam
cmp
movs
int3
sub
add
(bad)
jmp
loop
push
sub
sbb
sti
jge
mov
iret
jb
jmp
inc
cmovp
inc
cld
scas
jg
xor
mov
shl
clc
mov
sbb
push
stc
imul
mov
pop
cmp
and
stos
mov
sub
pop
cmps
sti
daa
push
jmp
stos
or
(bad)
(bad)
push
and
mov
xchg
xchg
and
call
stc
sbb
aaa
jmp
lahf
dec
call
sbb
and
ret
lahf
cmps
jb
stos
loopne
inc
fwait
adc
shl
adc
das
in
mov
daa
(bad)
ins
pop
push
pop
push
popa
add
or
call
pop
shl
retf
(bad)
sub
and
adc
xor
jmp
xchg
test
push
lock
dec
stc
push
pushf
mov
loopne
mov
cmp
push
inc
into
mov
dec
mov
ss
cmps
(bad)
xor
push
test
loopne
icebp
sbb
jle
and
imul
div
das
aam
and
das
test
loope
inc
not
adc
rcl
inc
sbb
sub
shl
mov
pop
add
xchg
xchg
mov
mov
ins
(bad)
repnz
push
mov
loop
in
sar
push
lea
mov
pushf
pop
sub
cmp
movs
dec
inc
push
xor
stos
push
data16
adc
pop
pop
or
and
xchg
add
cmps
test
jecxz
adc
lods
mov
fsubr
jecxz
pop
xchg
or
outs
neg
fldenv
adc
imul
mov
(bad)
cmc
lahf
shr
popa
popa
enter
sub
jecxz
sbb
std
push
xor
ret
call
pop
mov
pop
mov
iret
jne
fidiv
lahf
test
sbb
sahf
pusha
mov
mov
adc
push
in
daa
adc
pop
pop
aas
outs
add
mov
sbb
dec
popa
add
inc
popf
cmp
loope
scas
lds
test
adc
or
push
pause
jge
xor
jnp
add
mov
scas
push
inc
jmp
cmc
add
pop
hlt
imul
outs
sar
mov
(bad)
out
cmp
dec
retf
jnp
in
mov
push
push
out
je
pop
pop
xchg
test
daa
out
mov
repnz
cmp
fisttp
cmp
cdq
mov
inc
(bad)
mov
mov
mov
mov
dec
mov
sbb
int
adc
(bad)
sti
lahf
dec
cmp
mov
dec
gs
jbe
xor
ret
and
dec
movs
add
lods
fs
mov
sub
mov
add
xchg
dec
add
dec
sbb
and
ret
mov
aaa
into
push
sahf
jno
in
into
ja
mov
shl
jl
iret
(bad)
mov
and
daa
int3
jns
daa
outs
push
sub
pop
mov
dec
jne
xor
and
jmp
lea
call
sub
inc
enter
xchg
mov
mov
(bad)
(bad)
aam
jne
loopne
sbb
pop
stos
sbb
(bad)
xchg
iret
jns
jbe
and
push
add
ret
mov
inc
mov
mov
jmp
dec
rol
sub
shl
shl
cdq
mov
dec
test
out
cmc
repz
xchg
mov
push
in
jae
xchg
cmp
mov
jo
pop
mov
ret
aas
fwait
xor
mov
retf
jno
aaa
push
in
in
popf
mov
mov
inc
out
inc
sbb
hlt
cmp
xchg
test
mov
mov
xchg
mov
push
push
xchg
pusha
xor
sub
sti
js
dec
stos
shl
xor
lea
cmps
mov
pop
push
in
aaa
sbb
sbb
stos
rol
and
cmp
movs
sub
cmp
pop
or
cmp
aas
xor
(bad)
fcmovu
xchg
push
repnz
dec
sti
add
and
mov
pop
push
dec
mov
push
pop
test
lods
lds
pusha
jge
pop
jmp
inc
pop
std
push
xor
dec
push
stos
jnp
repnz
fiadd
push
fcmovb
int3
mov
add
xor
imul
jl
movs
xchg
fisttp
test
and
neg
and
xor
jmp
sub
sub
hlt
push
dec
sub
mov
sbb
mov
dec
cmc
ret
icebp
out
outs
or
fcmovnbe
sub
fs
fsubrp
fcom
push
dec
mov
cs
jl
pop
scas
cmps
test
rcl
push
enter
push
inc
mov
dec
adc
sub
cmp
call
(bad)
pop
or
rcr
mov
enter
loope
dec
jb
push
sbb
pop
adc
data16
loope
or
rcr
in
xchg
mov
pop
jp
mov
dec
out
cs
popa
pop
push
push
dec
sbb
dec
and
shr
arpl
xchg
xchg
sbb
pop
mov
or
inc
or
pop
adc
adc
push
data16
and
and
jl
test
leave
fdiv
push
xchg
adc
in
(bad)
fimul
sub
shl
push
push
cmp
stos
out
and
adc
xchg
inc
or
mov
movs
scas
jg
stos
inc
cmp
icebp
pop
lock
(bad)
jae
xor
cld
mov
mov
xchg
sbb
fmul
ss
pusha
ret
aam
mov
or
xor
ret
add
sub
jle
adc
shr
jmp
int3
cmc
dec
std
test
push
jp
aam
scas
fnstenv
xchg
jge
and
in
xchg
fwait
mov
ret
jbe
adc
hlt
mov
gs
lods
pop
pop
inc
xlat
stos
jmp
adc
push
xor
pop
dec
sbb
push
lods
cmc
xor
shl
test
dec
call
gs
sbb
icebp
loopne
sub
adc
pop
mov
int3
sub
xchg
faddp
(bad)
test
mov
pop
mov
push
cdq
push
mov
mov
test
in
(bad)
int3
cmps
ret
sbb
cmp
aaa
mov
pop
ins
jmp
push
sbb
aas
ret
ins
push
push
dec
les
pop
sti
test
jg
repnz
loope
sbb
push
sub
mov
imul
outs
sti
sub
imul
icebp
popf
jo
iret
mov
xchg
cmp
jbe
ja
enter
adc
adc
(bad)
out
inc
dec
push
clc
xor
add
mov
test
push
lea
cld
add
scas
sbb
sahf
out
loop
xor
scas
fsub
xchg
dec
xchg
mov
imul
jp
xor
pusha
(bad)
test
cmp
push
ds
in
xchg
jle
and
cmp
cdq
imul
jl
pop
pop
adc
cmps
out
ja
push
sbb
cs
(bad)
pop
push
(bad)
retf
sbb
and
mov
fadd
stos
popa
outs
and
js
xor
fstp
pop
sub
xor
push
push
gs
gs
xchg
retf
clc
mov
add
outs
sub
jp
xor
(bad)
pop
push
pop
xchg
mov
in
push
mov
adc
mov
rcl
push
add
lea
out
retf
inc
xor
add
ins
outs
imul
xchg
jne
cmps
clc
mov
mov
in
outs
imul
shl
push
mov
adc
mov
add
sar
and
add
jmp
mov
dec
push
ja
xor
mov
sbb
pop
dec
xchg
inc
jae
jle
repz
mov
pop
xchg
pop
add
call
dec
nop
push
mov
add
mov
adc
mov
cmp
mov
jne
dec
pop
cmps
cmps
leave
out
in
ds
mov
or
shl
lahf
mov
fldcw
js
mov
fisub
addr16
mov
in
or
mov
stc
outs
je
dec
inc
mov
sbb
mov
imul
add
fsubr
repz
mov
ins
lods
add
inc
mov
pop
pusha
sbb
or
mov
push
lods
inc
pushf
or
pop
lea
push
cwde
mul
rol
fisub
sbb
jne
test
loopne
shr
inc
push
sub
into
or
ss
add
je
xor
fisttp
hlt
sub
in
xor
out
lods
mov
cmp
jnp
cld
imul
and
in
xchg
mov
das
nop
xchg
js
arpl
dec
ds
dec
pop
call
js
mov
call
push
lahf
fmul
movs
test
inc
mov
and
ficomp
lock
test
push
pop
mov
ds
paddq
sub
js
ds
not
mov
cld
adc
std
lods
cwde
add
test
sbb
into
mov
arpl
pop
ins
pop
es
pop
push
jo
and
mov
fmul
dec
ins
out
(bad)
push
mov
ss
and
sbb
sub
dec
cmp
popf
imul
mov
mov
fistp
dec
xor
pop
mov
jnp
dec
xlat
test
daa
gs
sti
mov
retf
frstor
sub
jg
lods
sbb
jge
test
data16
ins
xchg
fmul
adc
ret
icebp
and
popa
mov
cs
into
or
xor
(bad)
sbb
scas
out
xchg
inc
movs
nop
sbb
movs
jno
loope
sbb
sbb
pop
xchg
ds
jge
push
jp
out
ror
fldenv
pop
into
xchg
inc
loopne
cli
stos
xchg
xlat
mov
cli
adc
jb
cmp
xor
add
lock
mov
add
fistp
dec
jb
js
dec
cmp
jge
add
int3
sbb
imul
mov
adc
mov
nop
out
(bad)
fdiv
das
inc
or
add
call
cmp
nop
ror
sbb
push
xchg
mov
adc
push
sub
push
and
jmp
inc
xor
cli
cmps
cs
inc
dec
dec
add
ins
adc
call
or
(bad)
hlt
cdq
jae
rcr
mov
sub
bound
fbld
aaa
fdivr
ss
cmps
popa
cmp
pop
push
(bad)
dec
(bad)
jno
sahf
cld
push
cmc
sbb
rol
lds
cdq
mov
push
xchg
in
movs
adc
fisub
rcl
movs
loope
or
iret
aas
retf
repz
int
mov
mov
jno
xor
and
xchg
movs
cmp
sbb
iret
cmp
or
dec
ss
mov
jmp
out
lods
(bad)
dec
sbb
mov
fstp
fiadd
mov
inc
dec
int3
test
or
je
mov
push
or
cld
xchg
sub
push
stc
fwait
cld
sbb
or
ja
mov
xor
add
push
sahf
jnp
push
jne
(bad)
fisub
clc
and
xchg
or
repz
push
movs
mov
adc
test
(bad)
mov
pushf
ins
aaa
pop
loopne
inc
xor
xchg
out
fisttp
cdq
addr16
out
fadd
lods
pop
or
ret
imul
mov
sbb
sub
imul
pop
scas
jle
hlt
inc
scas
dec
ret
push
xchg
inc
les
(bad)
sub
or
mov
add
jle
test
dec
cmp
addr16
outs
jp
jne
jbe
jg
outs
(bad)
jb
push
mov
fcomip
pop
leave
sahf
push
in
les
pushf
imul
aas
call
or
fstp
xchg
push
rcr
fst
sbb
mov
mov
mov
sahf
or
in
mov
add
push
dec
mov
xchg
mov
or
inc
cli
iret
movs
out
inc
in
jns
aad
xor
sub
xor
inc
std
ins
mov
je
stos
ds
repz
or
cmp
(bad)
es
out
pop
fcomp
pop
push
cmc
add
push
add
mov
adc
das
pop
lahf
push
mov
push
push
fwait
repnz
pop
dec
jne
ins
ror
pop
sub
shr
xchg
cld
std
(bad)
fidivr
outs
into
hlt
jae
dec
imul
enter
sub
fdivr
add
cmp
out
jg
add
fistp
cmps
mov
mov
mov
push
adc
jo
adc
dec
xlat
repz
push
adc
mov
in
jg
mov
sub
fdivr
cmp
mov
call
scas
jnp
loopne
mov
add
mov
pop
aad
and
push
fs
mov
inc
dec
fsub
inc
test
add
pop
push
adc
test
inc
pop
cmp
imul
mov
inc
xor
cs
mov
sbb
addr16
sub
pusha
and
jnp
mov
outs
(bad)
push
push
loop
sbb
(bad)
int3
and
jmp
cwde
rep
sbb
cld
fldenv
out
dec
imul
sbb
xchg
jae
xlat
inc
aaa
sahf
outs
mov
fidivr
push
aaa
jnp
lahf
push
mov
sub
mov
push
(bad)
lods
dec
(bad)
fadd
shl
mov
jb
mov
and
aam
dec
lock
inc
clc
sbb
mov
push
inc
or
outs
cmp
jmp
jb
mov
fs
push
int3
(bad)
adc
pusha
(bad)
push
cld
out
ins
xor
fcomp
mov
sbb
int3
xor
push
das
fxch
ds
mov
retf
popf
cs
imul
dec
push
ret
adc
pop
into
lods
shl
aaa
into
popa
mov
sbb
(bad)
xchg
aas
rol
mov
imul
pop
jecxz
pop
stos
pop
retf
sub
jle
mov
adc
xor
out
clc
unpckhps
retf
push
cdq
xor
ja
mov
mov
xchg
xchg
nop
mov
and
jg
(bad)
mov
cmp
outs
dec
inc
fdivr
iret
mov
call
(bad)
mov
inc
mov
dec
jmp
fdiv
sbb
out
dec
scas
aas
pop
aad
into
inc
push
clc
ins
neg
out
in
mov
imul
(bad)
xchg
push
xlat
and
xchg
leave
test
enter
and
push
aam
jae
mov
sar
rol
push
fwait
add
dec
bound
xchg
(bad)
xor
cmp
mov
mov
fild
xor
pushf
sub
shr
or
mov
test
ds
pop
out
mov
loop
dec
xlat
loope
or
push
and
jecxz
and
add
sub
iret
mov
(bad)
mov
sub
repnz
out
out
push
xchg
movs
mov
test
mov
push
mov
ins
test
xor
popf
jb
xchg
jmp
in
push
xchg
jnp
jecxz
mov
ffreep
jne
(bad)
add
pusha
sub
or
js
mov
test
mov
xchg
test
xchg
sub
stc
mov
inc
outs
test
pushf
xchg
int
jb
push
and
push
jl
test
rcl
repz
cs
mov
inc
loope
cmp
jno
pushf
sti
and
sub
mov
cld
xchg
jne
imul
aam
push
pushf
jns
mov
and
dec
lock
loop
push
push
or
jae
js
mov
xor
sub
nop
aas
adc
(bad)
test
pop
sub
int
jge
add
mov
mov
dec
xchg
es
lods
call
xor
jge
adc
ror
adc
stos
fist
sbb
xlat
sbb
mov
jae
add
aad
inc
mov
(bad)
stc
mov
mov
lods
mov
jle
jmp
mov
adc
pop
loope
cdq
mov
sub
sbb
or
out
test
dec
(bad)
jb
daa
outs
dec
fwait
xchg
outs
pop
jge
mov
mov
outs
ror
add
mov
jmp
ret
xor
dec
mov
xchg
and
mov
adc
lock
loopne
cmc
inc
popa
sahf
xchg
push
jmp
cmp
cld
fcmovne
push
sbb
cmps
mov
dec
rol
mov
pop
xchg
mov
in
mov
aam
inc
pushf
push
and
xchg
adc
ds
mov
mov
mov
push
jnp
jmp
das
scas
test
out
jmp
(bad)
pop
test
dec
imul
test
(bad)
mov
fbld
or
repnz
mov
pop
rol
cli
push
xchg
xchg
in
xchg
xchg
adc
cmps
pusha
in
rol
xor
mov
ja
add
mov
and
mov
jno
dec
mov
nop
popf
loopne
out
lods
outs
fbstp
fist
imul
mul
xchg
dec
mov
int
repnz
inc
dec
inc
mov
add
inc
cmp
test
repnz
adc
jecxz
retf
mov
cmps
nop
mov
adc
les
data16
in
sub
pusha
clc
adc
fstp
je
mov
icebp
mov
xor
xchg
mov
adc
mov
cmc
loopne
add
push
iret
add
sub
push
jns
sbb
and
push
fcomp
pop
jne
push
xor
mov
fisub
pop
push
(bad)
fisttp
lods
(bad)
jecxz
ja
jg
and
outs
jle
inc
mov
mov
jne
fdiv
fadd
jle
dec
dec
jmp
(bad)
out
push
mov
or
test
jmp
mov
add
mov
retf
fidiv
mov
call
mov
sbb
jo
xchg
jmp
movs
xchg
xchg
pop
aad
xor
inc
mov
imul
push
jmp
xor
pushf
int3
retf
push
xchg
aas
imul
mov
dec
push
xchg
pop
fidiv
movs
and
mov
dec
mov
mov
dec
sub
repz
loope
jg
cmp
pushf
frstor
xor
call
(bad)
std
icebp
nop
(bad)
mov
repz
sbb
aaa
jo
into
mov
pop
inc
mov
daa
inc
dec
cmp
mov
(bad)
sub
call
inc
or
test
pop
repz
je
bound
repz
pop
dec
aas
jle
outs
push
or
int3
pop
mov
xchg
and
jmp
pop
addr16
icebp
(bad)
aam
ja
in
int3
ja
or
aam
pop
sar
sar
adc
ficom
or
and
pop
les
arpl
jo
push
sub
leave
or
les
out
jmp
in
arpl
xchg
aad
popa
mov
(bad)
mov
push
dec
mov
pop
std
leave
in
mov
repnz
dec
push
adc
mov
stos
rcl
xchg
in
cmp
jg
mov
in
sub
jle
repnz
int
dec
jecxz
mov
aam
cmps
in
mov
aaa
add
mov
idiv
lods
(bad)
cli
clc
xchg
inc
cs
(bad)
push
mov
mov
test
stos
test
pop
cmps
jno
jno
lods
xchg
clc
sub
fcomp
cwde
jmp
loope
and
xchg
ds
dec
lds
neg
pop
jg
mov
or
je
or
sbb
pop
shr
mov
test
jp
xlat
sbb
mov
das
retf
add
mov
fisttp
enterw
ins
std
cmp
jecxz
pop
pop
mov
jb
jg
out
xor
add
mov
leave
jl
fchs
xor
sbb
mov
test
adc
cmp
sub
in
(bad)
cwde
sar
iret
push
xor
jno
push
ds
loopne
retf
cwde
inc
mov
(bad)
ret
sar
xchg
fcom
xlat
jbe
scas
dec
sub
nop
das
sbb
(bad)
aad
or
jp
enter
mov
mov
xchg
add
scas
sbb
adc
inc
cmp
movs
mul
sar
stc
ss
lods
ror
stos
mov
inc
in
nop
shr
xchg
or
jl
cvtsi2sd
fs
cmc
add
xlat
retf
ins
stc
js
(bad)
rcl
jecxz
fldcw
fisub
mov
xor
adc
movs
stc
mov
gs
outs
mov
inc
inc
and
jmp
sbb
popa
xor
mov
popa
mov
out
mov
mov
mov
es
mov
stos
xchg
mov
cwde
mov
push
outs
push
jo
fsubr
and
fistp
fsubr
test
aaa
icebp
cmps
mov
and
clc
repz
mov
dec
dec
aad
sub
sbb
ins
stos
dec
pusha
js
jp
loope
scas
dec
mov
jecxz
mov
jmp
sub
or
out
jp
ins
in
push
dec
mov
ds
xor
inc
adc
sbb
sub
fsub
sub
sar
jnp
mov
or
mov
ds
loope
bound
scas
pop
loope
es
xchg
fs
xchg
or
in
outs
sub
cmp
ffreep
xchg
dec
mov
std
nop
dec
(bad)
(bad)
dec
pop
sub
sbb
test
addr16
ret
xor
push
mov
call
cmp
(bad)
xchg
scas
ja
clc
or
cli
adc
sub
fistp
cmps
mov
rcr
xchg
pop
ins
mov
fs
fisub
aaa
loopne
(bad)
movs
cmp
imul
xchg
scas
inc
add
bound
pusha
jne
xchg
mov
mov
adc
adc
leave
mov
jecxz
mov
enter
sub
imul
lods
push
scas
mov
dec
call
outs
rcl
sub
adc
inc
jecxz
fldl2e
jl
pusha
adc
mov
push
or
mov
dec
ffree
mov
sahf
fild
mov
loop
mov
in
test
add
lock
nop
es
jno
out
fidivr
push
inc
pop
in
ret
mov
sbb
xor
mov
ds
sar
mov
mov
popf
les
inc
inc
cli
sub
dec
xchg
movs
jns
outs
push
ds
xchg
in
cmp
pop
xor
pop
push
and
cld
sahf
les
dec
pop
in
xor
shr
cmp
and
pop
clc
dec
pop
pop
pop
(bad)
test
sbb
and
xor
sar
push
add
sub
js
or
sub
sar
(bad)
int
lahf
adc
setae
cmp
push
add
cmc
pavgb
in
jg
mov
imul
dec
iret
cmp
ds
ret
mov
pop
sub
mov
lods
loopne
in
fcom
xchg
(bad)
and
and
pop
xor
retf
test
in
(bad)
fcmove
inc
fisttp
loope
ret
xor
add
push
adc
das
lods
aas
xor
pop
sbb
cmps
mov
jo
popa
mov
addr16
cmp
pop
xlat
cmps
(bad)
repz
sub
je
int
in
and
cdq
leave
fs
stc
retf
sti
aam
xlat
cmp
pop
jl
(bad)
in
cdq
in
sub
cmp
pusha
sbb
adc
jb
sbb
imul
outs
out
adc
dec
push
add
inc
inc
daa
(bad)
jo
repz
cmp
pusha
mov
push
pop
push
inc
mov
mov
inc
push
sbb
int3
hlt
mov
mov
stos
mov
push
mov
or
in
and
cmp
push
test
fwait
in
jnp
loopne
call
adc
push
mov
adc
fwait
jg
xchg
mov
sahf
sbb
or
jnp
(bad)
mov
pop
mov
fsub
dec
inc
std
(bad)
mov
inc
inc
mov
dec
test
bound
test
inc
loop
sub
sbb
outs
push
rcl
mov
and
in
mov
xchg
scas
fld
movs
push
add
sub
adc
cmp
jae
xor
add
xchg
fild
mov
mov
adc
cmp
je
sti
dec
xlat
pop
xor
ret
add
xchg
push
adc
or
in
in
cmp
jb
enter
jb
in
jno
and
add
call
mov
movs
xchg
mov
add
sbb
xor
push
iret
jmp
add
punpckhbw
and
inc
pop
aam
sub
sub
add
mov
cmp
pop
mov
mov
xor
enter
mov
cmps
out
jbe
addr16
dec
mov
pop
add
add
sbb
cmc
lahf
std
push
xchg
int
mov
stos
xlat
test
ret
push
ret
inc
mov
add
jbe
int3
or
(bad)
in
push
mov
loop
adc
xchg
push
jnp
sbb
or
test
sti
xor
call
sbb
stos
inc
fdivr
jmp
lds
jge
and
nop
cmp
xchg
pop
loope
dec
push
dec
es
cld
mov
push
mov
aas
loope
push
cmp
cdq
sub
jae
sbb
data16
add
inc
pop
call
inc
add
add
cld
mov
mov
pop
cmp
sbb
nop
in
imul
dec
ins
mov
adc
mov
lock
aad
add
icebp
int3
push
add
nop
add
call
adc
mov
inc
xchg
mov
ja
sub
mov
xchg
mov
ret
inc
call
jb
adc
ret
call
push
cdq
or
cmp
shr
stos
pop
pop
xlat
jle
in
and
cmp
mov
mov
arpl
(bad)
ficomp
and
jnp
sub
dec
fmul
fnstenv
je
jecxz
stc
inc
mov
sti
and
jecxz
cmp
cmp
xchg
lods
inc
scas
mov
sub
imul
jp
sahf
les
sti
xor
inc
inc
mov
pusha
pushf
(bad)
ja
cmp
imul
ror
or
(bad)
sti
pop
push
fisttp
xor
add
mov
or
lds
out
jb
push
dec
ficom
dec
fadd
inc
cmp
add
lahf
add
cli
cs
(bad)
add
stos
sbb
bound
mov
mov
pusha
retf
mov
(bad)
not
popf
pop
lods
pop
or
mov
add
xor
xor
hlt
test
ja
mov
retf
jp
jecxz
pusha
loope
enter
or
sbb
mov
dec
sub
xchg
xor
mov
mov
retf
dec
adc
push
mov
add
retf
mov
and
mov
jnp
inc
in
push
div
push
outs
int3
push
adc
(bad)
and
jnp
shl
mov
call
add
popa
or
popa
popf
jle
and
sahf
stos
sub
int
ficom
add
retf
xor
daa
aaa
cwde
xchg
push
test
out
pop
arpl
xchg
mov
dec
cmp
icebp
cld
in
push
xchg
aam
cmc
lds
push
add
nop
push
mov
fcom
dec
bound
xchg
add
cmc
fdiv
xchg
mov
cmp
push
dec
inc
daa
shr
clc
push
daa
out
xchg
movs
or
push
and
sub
call
cmp
daa
jo
dec
in
cs
call
sub
call
cmp
pop
addr16
xchg
or
push
repz
pop
cmp
mov
push
aas
outs
dec
pop
add
scas
push
sar
mov
ins
call
or
pop
mov
mov
push
jl
outs
dec
retf
bound
xchg
cli
movs
xor
adc
std
push
sbb
xor
(bad)
fisubr
add
iret
adc
rcr
mov
push
sub
cmp
retf
popa
shr
hlt
das
jg
dec
pop
ins
mov
pop
mov
push
jb
lods
retf
gs
and
dec
and
rol
xor
sbb
add
and
dec
in
xchg
push
pop
mov
popf
inc
dec
add
dec
dec
xchg
rcr
dec
pop
aaa
daa
adc
jb
lods
push
(bad)
xchg
push
jbe
ror
jbe
in
push
push
int
add
sahf
pop
push
stos
std
dec
inc
and
pop
pop
mov
add
mov
out
push
out
pop
retf
xor
cs
cdq
outs
sbb
xchg
ret
fiadd
jle
int3
dec
inc
jp
mov
loope
push
sbb
rol
inc
cmp
inc
cmp
shl
pusha
jecxz
cwde
fwait
jge
and
test
dec
stos
mov
mov
icebp
fild
inc
cmps
pop
xor
shl
es
inc
(bad)
fcmovb
sub
popf
cmps
js
dec
xchg
ds
ds
jg
adc
ds
mov
pop
xchg
pop
pop
pop
and
adc
ds
iret
jmp
and
fwait
or
sbb
in
or
es
mov
dec
jb
and
xor
ins
and
aas
push
test
lods
gs
jecxz
add
sub
lahf
cdq
clc
dec
scas
cmp
xchg
loope
push
lock
retf
cdq
sbb
(bad)
pop
xchg
imul
push
mov
jbe
(bad)
or
cmc
sti
pop
call
push
adc
inc
sahf
inc
lods
xchg
inc
mov
xchg
add
xchg
js
pop
test
jno
adc
mov
or
rcr
dec
pop
fs
inc
and
and
sub
inc
jp
imul
cld
je
and
pop
jno
pop
push
lods
iret
or
xlat
(bad)
sbb
imul
fdiv
xchg
bound
inc
ds
sbb
sub
cmps
jecxz
scas
mov
push
xchg
push
mov
call
fwait
push
bound
push
mov
pop
fidivr
std
add
popf
loope
push
jecxz
ins
fisttp
(bad)
popa
add
xchg
movs
cdq
addr16
xor
xor
sub
inc
adc
push
mov
std
and
xor
cmp
sub
ficom
in
int3
psubd
cld
out
cmp
cmp
inc
add
pop
cmp
push
repz
std
xchg
int3
and
jecxz
cwde
mov
js
jns
mov
sbb
cs
das
push
cmp
hlt
out
out
pop
or
cmp
jae
mov
add
shl
jbe
dec
mov
mov
jmp
and
in
xchg
dec
ds
repz
enter
repnz
cld
dec
jbe
enter
push
push
mov
adc
call
inc
hlt
push
mov
cmp
mov
pop
mov
mov
js
stc
imul
sub
bound
psadbw
aaa
jne
or
xlat
neg
nop
mov
pop
std
sbb
sets
scas
out
iret
or
pop
lods
jnp
mov
retf
jb
out
xor
pop
sub
test
loopne
sub
jae
inc
push
cmp
cli
pop
sbb
mov
aam
push
xchg
cli
add
jp
jbe
or
add
xchg
jmp
gs
lea
loope
push
mov
cli
stos
pop
xlat
retf
hlt
fadd
inc
adc
sub
xchg
jle
jne
shl
fild
add
je
or
cmp
mov
lock
mov
fld
mov
je
add
sti
jge
imul
repnz
sbb
cmp
mov
push
jp
xchg
in
(bad)
out
add
push
dec
xchg
push
adc
jbe
lea
mov
int3
mov
cmps
mov
mov
xchg
sbb
cmp
inc
mov
mov
cdq
sti
adc
jle
dec
jns
xchg
pop
xchg
sbb
xlat
fstp
sahf
inc
call
sbb
jne
or
pop
das
push
sbb
cmp
mov
or
pop
jg
lds
vandnps
hlt
pop
imul
dec
jmp
push
jb
sahf
mov
mov
and
inc
jl
sub
std
retf
push
jno
imul
mov
(bad)
ss
clc
jl
pushf
push
xchg
bound
xor
data16
xor
push
xor
mov
dec
popf
aad
xchg
jns
(bad)
or
in
lds
les
jg
(bad)
pop
inc
xchg
pop
mov
add
cmp
ret
clc
push
sbb
ss
into
xor
call
sbb
out
(bad)
jmp
cs
dec
stos
ins
jno
fadd
jbe
sar
cmps
xchg
pop
cld
cmp
retf
rol
cdq
add
jl
imul
inc
cmp
xor
or
dec
xor
mov
enter
jecxz
inc
and
inc
pop
mov
mov
sbb
xlat
dec
inc
in
(bad)
daa
jecxz
cmps
mov
les
xchg
push
adc
clc
adc
and
mov
lods
jle
(bad)
jecxz
jmp
jl
stc
leave
jnp
mov
mov
imul
adc
push
(bad)
jecxz
je
and
fidiv
call
jle
cli
jecxz
add
jg
stc
mov
mov
scas
scas
stos
xor
fadd
test
outs
(bad)
imul
frstpm(287
push
mov
jecxz
ins
dec
or
adc
push
adc
inc
lods
xchg
cs
mov
test
lahf
adc
push
xchg
imul
push
lods
lahf
(bad)
sbb
xor
xlat
iret
in
xchg
lods
daa
out
mov
xchg
loopne
push
movs
mov
jg
pushf
lahf
in
sbb
shl
dec
jae
sub
mov
jmp
jle
pop
ins
movs
xor
mov
sub
sbb
inc
sahf
mov
sbb
push
push
mov
iret
jnp
sahf
inc
add
dec
adc
sub
ret
int
adc
int
pop
push
xor
pop
lods
xor
or
mov
sub
repz
je
cmc
retf
dec
mov
lock
in
or
push
into
lock
sub
cmps
repnz
rcr
loope
push
in
iret
hlt
adc
jmp
std
es
scas
jb
jbe
push
popa
iret
or
in
mov
cwde
pop
or
neg
push
mov
fs
daa
mov
jle
adc
pop
add
adc
stc
mul
shl
xlat
mov
sub
adc
fwait
sbb
pop
(bad)
cli
mov
or
retf
and
fiadd
dec
jno
add
out
add
gs
les
sahf
mov
imul
add
cmps
jge
dec
xchg
sbb
call
and
ret
pop
jne
adc
lock
(bad)
mov
repz
cmc
xor
aaa
retf
add
ds
fidivr
outs
inc
sbb
sub
into
shl
lock
arpl
jb
data16
and
(bad)
jns
mov
sub
ret
sahf
sub
add
mov
pop
cmp
xchg
test
lods
cmps
or
(bad)
addr16
out
inc
push
lods
pop
in
and
jp
imul
or
test
mov
jg
mov
outs
jecxz
shl
sar
int
xchg
test
lods
(bad)
repnz
cmp
movs
lahf
fs
fadd
das
(bad)
jecxz
sbb
adc
es
push
push
xchg
mov
xor
push
fcomp
loop
cmp
mov
retf
adc
ins
cmp
test
adc
pushf
aad
fcmovb
loope
outs
add
das
pop
data16
cdq
and
fimul
hlt
mov
or
test
(bad)
(bad)
(bad)
out
test
rcl
mov
fld
(bad)
push
mov
ret
(bad)
fbld
ins
movs
mov
or
scas
sbb
mov
cmp
and
xlat
jmp
dec
test
mov
push
outs
lahf
xlat
pop
mov
inc
push
jo
mov
mov
mov
push
push
xchg
test
sbb
xor
xor
jecxz
add
lock
pop
adc
sbb
sub
not
and
cmp
push
retf
push
jb
adc
jmp
cmp
sub
jnp
ds
jge
neg
xchg
js
cld
sbb
pop
test
lea
xor
in
mov
sbb
cdq
(bad)
pop
das
sbb
retf
push
jmp
pusha
shr
push
call
xchg
cli
xchg
retf
daa
icebp
enter
icebp
adc
and
sar
jp
adc
sub
loope
push
in
fdivr
jle
adc
popa
sbb
test
jno
mov
jge
fs
pop
dec
pop
cmps
outs
fldenv
mov
push
adc
and
cs
aam
jno
pop
aad
outs
mov
sub
retf
xor
clc
push
stc
mov
test
push
out
adc
and
mov
int
jl
and
adc
cmp
std
or
push
dec
mov
mov
add
retf
jecxz
clc
dec
ja
and
push
and
or
sahf
inc
add
dec
xor
inc
sub
call
xor
loopne
xchg
ds
pop
std
test
inc
sbb
cmp
rcr
mov
bound
or
mov
mov
cdq
mul
mov
ret
(bad)
pop
jl
sub
mov
mov
dec
shufps
(bad)
xchg
mov
xor
into
aad
hlt
rcr
sub
and
lea
push
push
sti
sbb
mov
ins
xchg
mov
or
je
sbb
repz
repz
dec
out
pop
mov
pop
or
push
addr16
dec
sahf
movs
retf
call
cmp
jmp
jmp
pop
fsubr
mov
es
cmp
pop
int3
sar
jo
pusha
mov
or
dec
xchg
add
call
leave
inc
adc
loope
sbb
push
outs
mov
call
mov
call
fsubr
jbe
std
sti
mov
xor
test
sub
out
cmps
xor
jbe
loopne
inc
pop
mov
mov
retf
sbb
jmp
xor
sub
or
loopne
cmp
adc
fbstp
mov
sar
cmp
mov
pushf
(bad)
lods
cmp
xchg
out
push
xchg
cld
sbb
push
xchg
cmp
inc
scas
in
aam
mov
adc
xor
enter
mov
lods
mov
mov
in
jp
(bad)
test
cli
out
outs
or
jbe
inc
sbb
xor
arpl
cld
div
icebp
add
adc
or
push
retf
fbstp
xchg
out
mov
xor
scas
hlt
cmps
fwait
pop
fcom
add
lods
cwde
data16
imul
pop
jbe
sar
nop
cmp
retf
aad
or
pop
test
adc
fcmovne
xor
stc
xor
sub
in
mov
in
push
dec
ficomp
dec
inc
lods
inc
(bad)
rcr
inc
mov
and
xchg
mov
(bad)
adc
out
neg
inc
or
or
pop
sbb
adc
scas
sub
xlat
popf
enter
xor
and
lods
sbb
popf
cmp
shr
nop
add
xor
add
(bad)
pop
sbb
scas
push
cmps
inc
inc
imul
push
jle
jl
fs
lods
sbb
adc
push
adc
dec
(bad)
pop
mov
dec
ret
test
(bad)
jp
sbb
dec
call
out
ins
add
jmp
pop
mul
push
repnz
add
js
mov
test
repnz
jbe
xor
xor
push
mov
fidivr
mov
in
push
aad
xchg
sub
sbb
pop
mov
mov
rol
cmps
adc
dec
mov
mov
xchg
sar
push
cmp
pusha
pushf
cmps
mov
add
lds
gs
xchg
sti
sub
pop
icebp
mov
sbb
fidivr
or
push
pop
in
mov
pop
rep
fldcw
outs
fist
add
clc
adc
jp
ja
xor
inc
cmp
aas
push
dec
mov
add
out
or
test
(bad)
add
test
cmp
cmp
mov
mov
xchg
mov
add
and
xor
xchg
pop
shl
mov
sbb
sub
aaa
fistp
ja
scas
jae
push
jbe
test
lods
and
pusha
pop
inc
add
inc
sbb
movs
xor
pop
sti
mov
jnp
icebp
nop
sahf
cmp
cwde
lahf
xchg
test
push
fcmovnu
test
loope
les
sbb
jbe
mov
mov
sti
push
ret
pop
fisttp
pop
xchg
add
and
out
push
jb
loopne
sahf
mov
(bad)
push
fdiv
push
je
sbb
cmp
(bad)
(bad)
dec
push
ja
dec
pop
push
outs
aad
or
cld
xor
jnp
xor
and
mov
mov
cmc
or
in
jmp
in
clc
mov
cmps
mov
jg
out
mov
fcmovu
gs
dec
ja
ja
je
cmovl
inc
mov
(bad)
pop
retf
in
dec
out
or
aas
ret
adc
push
push
or
dec
std
shl
sbb
sbb
adc
jg
retf
xchg
xchg
test
mov
movs
por
outs
fidivr
pop
loop
sbb
mov
in
dec
mov
pop
adc
sub
dec
jns
jl
mov
sub
mov
scas
int
sub
or
sbb
int3
ins
mov
mov
lea
retf
lock
jno
xchg
cmps
mov
mov
ds
pop
jnp
out
push
push
inc
dec
push
sub
mov
sbb
cmps
sub
hlt
gs
push
mov
lahf
or
sub
cmp
fiadd
in
xor
sub
int
inc
repz
jns
mov
clc
or
dec
outs
dec
cmp
mov
dec
jecxz
fdivr
inc
rcr
bound
push
shl
mov
ins
push
into
fisub
(bad)
mov
bswap
mov
lock
jmp
aam
call
into
xchg
and
enter
xor
fs
xor
ret
mov
loope
sbb
or
cmp
cwde
in
adc
imul
retf
popa
mov
mov
call
cmp
mov
test
pop
jmp
test
jg
jns
fbld
sbb
add
(bad)
sahf
inc
fsub
mov
cmp
inc
or
cli
int3
mov
fnstenv
adc
dec
in
pop
mov
xchg
cdq
loop
int3
fdiv
jb
out
jns
push
cmp
hlt
fbld
aad
mov
push
ins
ror
lea
stmxcsr
adc
xchg
lea
mov
xchg
es
jae
and
fiadd
div
jb
(bad)
cmp
std
mov
fwait
into
cmps
jle
mov
enter
ficom
mov
push
movs
pushf
push
ret
add
dec
mov
out
stos
loop
pop
xor
out
lds
mov
inc
jne
mov
jo
sub
sub
punpckldq
ret
xchg
push
out
mov
out
movs
jmp
fstp
out
jg
stc
in
ds
shl
nop
add
mov
jno
cmp
div
cli
mov
sbb
push
rcl
imul
jnp
and
push
and
mov
enter
inc
pusha
and
mov
ss
add
retf
aad
jle
cs
int
sub
cmps
xor
test
loop
pop
fimul
pop
nop
into
call
pop
ja
dec
imul
aad
rol
add
(bad)
jmp
pop
cmp
data16
sub
mov
jp
mov
fnstcw
jmp
cmp
dec
pop
fiadd
ins
jl
push
jns
(bad)
rcl
or
out
arpl
ins
pmaxub
sub
sub
retf
sub
cmp
xchg
call
stos
mov
sbb
pop
cmp
nop
mov
jae
inc
pushf
inc
or
adc
push
call
xchg
fwait
pop
mov
jns
cli
xchg
cmp
cld
aas
or
adc
xchg
xchg
in
pop
enter
(bad)
lds
sub
and
xchg
inc
idiv
stos
pusha
stc
mov
mov
xlat
pop
pop
pop
mov
dec
popa
dec
and
fldenv
xchg
and
jne
push
loopne
cmp
jle
pusha
mov
add
add
jno
(bad)
mov
pop
sub
lea
xchg
mov
daa
(bad)
xor
xchg
adc
into
jp
mov
pcmpgtb
jmp
je
cmc
and
retf
mov
push
and
pop
jecxz
or
jmp
adc
or
dec
ror
int3
push
add
xchg
cmp
and
xor
retf
xchg
pop
call
inc
call
pop
pop
data16
mov
les
adc
jge
pop
dec
fwait
add
loop
lods
(bad)
pop
rcr
cmp
push
data16
mov
in
mov
test
push
sbb
aas
pusha
pop
jecxz
aad
jecxz
xchg
and
in
push
jb
jle
push
outs
loop
les
or
ins
mov
jmp
lds
in
xchg
jbe
xchg
into
mov
lods
in
push
xlat
pop
cmp
push
cmp
sbb
and
lea
jnp
loopne
jp
sub
cmps
lods
popf
ficomp
mov
or
xchg
dec
mov
xor
imul
add
and
lds
and
inc
sub
(bad)
dec
xor
shr
retf
ds
imul
mov
mov
xor
ja
jno
outs
sbb
loopne
xlat
sub
es
mov
iret
add
daa
push
leave
movs
fbstp
stos
stos
sub
es
mov
pop
retf
and
dec
push
shl
pop
mov
hlt
inc
aam
pop
push
dec
int3
in
xchg
xor
in
inc
fnstenv
and
mov
std
push
jp
loopne
ds
inc
lock
push
add
sub
jge
pushf
lahf
jge
jae
das
out
daa
mov
mov
push
(bad)
scas
(bad)
loop
mov
inc
pop
jns
ss
and
loopne
add
adc
dec
push
jmp
jo
scas
ins
shld
ds
lods
sbb
(bad)
sbb
clc
in
fucomp
(bad)
or
lea
rcr
bound
push
sub
add
xchg
and
push
mov
fld
sbb
aam
arpl
aad
rol
fcmovbe
repnz
sahf
pop
mov
stos
out
es
lods
or
sbb
(bad)
in
xor
jmp
loope
sub
dec
sub
mov
lods
fsubr
cmps
jbe
cmp
add
cs
adc
mov
xlat
and
in
xlat
retf
(bad)
aad
mov
jns
popf
not
sbb
mov
mov
sbb
jnp
(bad)
xchg
jmp
enter
mov
mov
bound
xchg
into
lea
mov
in
sbb
mov
pop
push
je
outs
inc
mov
or
mov
xor
jno
xlat
mov
push
jbe
mov
cmp
jb
jne
dec
adc
call
pop
shr
test
jns
loopne
loope
test
scas
mov
popf
into
mov
pop
rcl
push
loopne
imul
aaa
or
mov
les
outs
ins
jg
pop
xchg
retf
outs
ds
outs
outs
aas
xor
test
sbb
mov
jb
or
stos
lea
or
lahf
scas
(bad)
adc
int
inc
mov
inc
xchg
and
lods
aad
xchg
adc
call
mov
mov
cdq
sbb
inc
cmp
sbb
sub
pop
rcl
cmp
cs
out
retf
adc
scas
cmp
arpl
pusha
push
adc
aas
adc
test
xor
inc
push
(bad)
jmp
mov
jg
icebp
out
mov
pop
push
loope
inc
aas
in
js
aaa
fwait
stc
mov
lods
les
add
adc
fcom
call
retf
inc
stos
not
retf
out
aaa
xor
fiadd
leave
fdivr
into
pushf
push
test
adc
(bad)
fsub
ret
sar
(bad)
cmp
test
addr16
call
jne
mov
sub
scas
mov
mov
popa
push
mov
aaa
adc
(bad)
push
cmc
in
rcr
and
pop
dec
jbe
pop
jae
retf
dec
(bad)
mov
stos
cld
or
ror
and
or
shl
mov
mov
adc
daa
aad
in
jno
mov
sbb
(bad)
movs
push
(bad)
sub
mov
aaa
mov
push
or
add
push
loopne
xor
sub
(bad)
icebp
out
test
mov
mov
mov
repnz
inc
jle
or
aas
mov
mov
jle
inc
and
scas
add
mov
push
sbb
outs
xchg
inc
sbb
mov
inc
imul
dec
mov
sbb
outs
xor
xlat
xchg
push
test
cmp
jmp
cmp
pop
aaa
push
mov
nop
mov
cld
shl
fstp
retf
repz
(bad)
out
adc
lahf
sbb
cmp
bnd
int
xor
or
dec
push
in
aaa
pop
les
sti
retf
mov
xchg
inc
adc
(bad)
cdq
sub
sbb
mov
popa
and
or
or
mov
cmps
in
icebp
jmp
jecxz
xor
in
fmul
jae
es
frstor
ret
data16
fist
pop
mov
jmp
scas
shr
pop
bound
xor
or
inc
arpl
leave
inc
bound
inc
dec
push
and
inc
icebp
add
je
mov
mov
adc
cmc
test
and
and
add
xchg
scas
and
push
jl
jmp
aad
inc
sar
or
pop
mov
adc
lock
sub
jbe
adc
xor
mov
mov
cmp
inc
mov
inc
pop
aaa
cmp
stos
and
int3
sbb
push
sahf
popf
cs
gs
xor
jmp
push
mov
mov
or
aas
push
xor
cmp
scas
je
push
inc
rol
nop
cmps
hlt
shl
push
jbe
cmp
dec
add
sub
jp
cwde
or
sub
push
xchg
add
lea
inc
lods
inc
fsubr
cmps
sub
xchg
sbb
push
mov
jmp
popf
xor
sbb
pop
xchg
adc
ja
sbb
les
dec
(bad)
lock
adc
xchg
dec
mov
sub
jae
mov
mov
pop
out
adc
adc
inc
pop
jge
in
lods
cdq
cmp
fmul
sar
fs
dec
mov
push
add
push
lock
and
pop
int
mov
push
movs
add
xor
pop
(bad)
and
fcom
add
stc
mov
mov
pop
xchg
mov
pop
pop
not
push
movs
or
test
inc
mov
mov
pop
retf
repnz
icebp
rol
jp
sahf
dec
push
retf
dec
jge
and
and
xchg
cdq
shr
add
das
icebp
retf
je
scas
retf
rcl
pop
xlat
leave
test
mov
neg
xor
mov
jbe
ret
iret
(bad)
xor
inc
inc
fisttp
cs
enter
rcl
add
rcl
test
mov
xchg
int3
jnp
stc
test
ins
or
call
mov
adc
stos
test
and
or
inc
jmp
ss
sbb
inc
fs
jg
jp
cs
jnp
push
or
inc
dec
or
mov
jecxz
call
cmp
in
ror
cmc
sub
cli
lock
repz
push
(bad)
clc
jle
(bad)
pop
sub
sti
js
sub
addr16
mov
mov
cs
inc
fdivr
jmp
and
in
(bad)
push
xor
mov
out
sbb
adc
in
mov
cmp
add
mov
ss
sbb
fild
in
bound
pop
xor
add
dec
data16
or
cwde
scas
mov
add
push
and
daa
cmc
jg
add
mov
push
ret
sar
xchg
sbb
jae
cmp
(bad)
pop
pop
jo
dec
mov
sbb
int3
scas
jmp
jbe
inc
pop
cmp
outs
ins
std
cmp
je
cmp
or
cmp
pop
mov
jmp
fwait
add
leave
shl
jge
ret
sub
inc
pop
ds
jb
jmp
sub
test
and
or
adc
and
dec
push
sub
int3
test
jle
sub
push
mov
sub
sahf
loopne
ins
sub
jbe
pop
and
pinsrw
clc
(bad)
loope
mov
pop
jmp
sbb
cs
popf
mov
and
test
pop
sub
push
mov
scas
ins
retf
dec
cmps
das
sbb
xchg
add
movs
ss
xor
jo
pop
js
icebp
mov
mov
icebp
pop
push
jp
sar
(bad)
sahf
or
pop
add
(bad)
fisub
hlt
leave
int3
or
mov
and
fs
pop
sbb
and
jecxz
jmp
sar
ret
popf
jae
and
cmp
sahf
mov
out
dec
cmp
add
mov
add
push
imul
push
rcl
inc
dec
nop
retf
pop
int
inc
mov
cmp
inc
push
add
cld
stos
ja
shl
pop
fist
in
push
jmp
cmp
mov
or
into
cmp
xor
jle
or
cwde
out
cli
mov
aad
(bad)
mov
jns
xlat
inc
in
jnp
les
cmc
repz
pop
xor
jp
xchg
add
sub
xchg
gs
dec
jnp
lock
cmp
out
(bad)
jbe
add
xchg
fwait
push
mov
pop
inc
out
sahf
inc
fwait
shl
lods
jmp
out
scas
out
xchg
cmp
fwait
mov
push
and
repz
jns
add
mov
mov
iret
and
js
adc
stos
add
clc
cmp
into
or
in
aas
lea
aas
push
dec
js
adc
mov
(bad)
xor
popf
mov
stos
xchg
and
lahf
pop
mov
dec
mov
mov
in
add
imul
and
cmp
out
add
or
in
pop
dec
dec
mov
cmp
jmp
loope
pushf
mov
leave
(bad)
fcmovne
xor
push
and
xor
pop
les
lahf
add
sub
gs
mov
mov
(bad)
cmp
jp
inc
add
cli
cli
sbb
(bad)
cmp
and
xchg
aas
imul
sub
and
scas
inc
sbb
je
sub
cmp
xchg
and
ins
mov
xor
(bad)
mov
loop
lahf
sub
cmp
mov
mov
adc
push
dec
sbb
jnp
out
aad
push
mov
lods
repnz
cdq
or
retf
xor
push
xchg
jle
scas
mov
pop
pop
in
jmp
mov
lahf
or
pusha
imul
mov
fs
cmps
pop
mov
or
(bad)
repz
bound
jmp
out
retf
stos
sub
mov
and
dec
ret
lods
xchg
or
or
sahf
ins
ror
cmp
xchg
cwde
out
pop
add
cmp
mov
call
sahf
pusha
jb
js
ins
test
cmps
mov
push
mov
inc
jo
sbb
inc
bound
pop
es
xchg
adc
sub
rcr
jnp
sbb
lds
pop
fist
scas
inc
mov
adc
mov
fsubrp
jg
loopne
mov
ja
push
(bad)
or
je
lods
jmp
push
or
inc
pusha
shl
mov
hlt
aam
adc
sbb
jp
(bad)
out
jns
jp
cmps
mov
stos
scas
daa
mov
pop
shl
fidivr
sub
sub
add
mov
fst
das
nop
icebp
sbb
dec
sub
int3
pop
je
push
adc
aas
call
adc
icebp
pop
ins
xor
add
repnz
sub
out
je
into
xlat
shl
and
sub
int3
outs
cdq
sbb
into
test
push
fmul
and
test
addr16
mov
(bad)
call
out
loope
mov
push
adc
test
std
popa
adc
mov
xchg
xchg
test
aam
pop
jmp
mov
shl
loopne
popa
adc
idiv
fdiv
or
ret
ficomp
mov
(bad)
outs
push
fld
pushf
xchg
or
outs
xor
adc
adc
dec
in
test
imul
shl
scas
pop
jae
cdq
out
mov
(bad)
and
pop
aam
sub
and
rol
xchg
mov
push
inc
ret
push
je
xchg
int
ins
shr
inc
hlt
or
(bad)
inc
cmp
add
push
fwait
mov
mov
and
bound
loopne
jle
xor
cmc
test
pop
inc
aad
sub
xchg
pop
cmp
jge
lock
stos
ins
fcmovbe
xchg
ret
imul
cwde
retf
dec
ret
xor
jmp
adc
loop
test
jmp
dec
jmp
add
out
jo
shl
jmp
je
inc
mov
jb
fimul
pop
hlt
xchg
ret
test
jnp
xor
sbb
fisttp
sub
mov
test
cmp
cmps
jecxz
pop
and
out
mov
mov
dec
enter
out
icebp
xlat
movs
sub
dec
ss
loopne
sahf
data16
pop
push
mov
mov
hlt
icebp
inc
sti
jl
xchg
sub
push
popa
nop
loop
pop
jp
dec
cmp
sahf
cdq
mov
adc
pop
or
jno
inc
add
jg
(bad)
in
push
test
and
push
pop
xor
mov
dec
xchg
repz
fcomp
ins
js
mov
(bad)
jg
sub
addr16
xchg
rol
popf
movs
dec
test
pop
sbb
xor
les
sbb
jo
push
dec
int3
rol
es
add
inc
inc
movs
sub
add
dec
icebp
aaa
shl
inc
dec
push
aam
(bad)
daa
int
xchg
repz
dec
pop
sub
arpl
mov
je
jmp
jp
retf
ja
mov
(bad)
dec
scas
mov
add
jg
mov
sar
jo
(bad)
mov
jns
loope
adc
(bad)
fimul
inc
dec
inc
movs
arpl
mov
js
mov
xor
xor
jg
add
(bad)
and
or
cwde
fwait
rol
into
jg
or
test
into
mov
mov
xchg
sbb
cdq
and
pop
shr
inc
sbb
hlt
retf
aaa
xchg
dec
mov
jle
inc
aad
jl
mov
imul
sti
sub
ins
mov
and
shl
and
inc
jmp
push
out
jmp
adc
mov
cdq
out
mov
push
xor
rol
mov
out
mov
push
stos
cli
mov
bnd
push
dec
inc
repz
dec
pop
ja
dec
mov
cwde
push
add
mov
outs
fisub
ror
fdivr
aam
cmp
fs
fcom
jae
nop
cmp
ins
cmp
push
mov
dec
js
inc
mov
je
(bad)
sbb
adc
mov
push
gs
outs
stc
sub
stos
dec
les
mov
mov
or
out
mov
xchg
lea
fwait
sar
xor
cmp
mov
dec
xlat
inc
pusha
mov
xlat
ret
sub
fisttp
cwde
inc
pop
adc
sbb
fdiv
dec
or
cmp
in
(bad)
mov
in
xchg
adc
cmps
mov
popa
imul
inc
out
cmp
lea
cmp
ror
mov
in
aaa
test
or
sub
cmp
inc
es
pop
lock
mov
aas
cli
test
out
cmp
push
cmps
out
les
call
fcmovbe
aaa
inc
mov
sar
mov
cmps
or
repz
or
mov
add
mov
xchg
mov
dec
and
mov
shr
or
repnz
neg
jbe
mov
sahf
mov
dec
mov
pop
jbe
pminsw
(bad)
xchg
cmp
sbb
loope
bound
or
shr
adc
jno
and
xchg
xchg
inc
mov
push
aam
mov
xor
aas
jmp
cdq
sbb
(bad)
fwait
cmp
push
xor
mov
outs
or
sub
mov
out
lods
sbb
cmc
call
mov
sar
bound
idiv
inc
mov
fs
sar
sub
scas
loop
enter
xchg
data16
retf
lahf
rol
push
sbb
inc
xor
sti
mov
mov
and
or
or
sbb
adc
pop
sahf
and
push
leave
ret
jae
inc
sbb
nop
pop
mov
xchg
pushf
push
jmp
loope
adc
repnz
stos
sti
and
add
adc
or
retf
enter
pop
test
cmp
movs
movs
dec
mov
repnz
rcr
sbb
inc
xor
dec
jns
mov
cli
aad
cmp
in
cli
mov
xor
mov
or
movs
pop
adc
sbb
or
pop
dec
xchg
cmp
and
daa
jle
push
js
aas
das
and
jbe
test
fnstcw
imul
and
enter
sbb
sbb
and
pop
into
stos
clc
jno
jne
adc
retf
iret
ins
cdq
dec
jmp
cmp
cmp
imul
fisttp
cwde
std
mov
dec
out
pop
or
mov
sbb
dec
data16
mov
xchg
xchg
add
les
iret
neg
jecxz
movzx
pop
fstp
pop
shl
inc
cmps
imul
jae
pop
gs
jmp
pop
mov
jo
test
push
cld
aam
mov
fild
mov
dec
call
aad
mov
add
(bad)
std
lock
sub
jl
adc
dec
and
dec
pop
cmc
cmp
(bad)
lea
jne
(bad)
mov
jae
inc
add
xchg
mov
or
mov
les
cli
int3
inc
fld
mov
jg
xor
cmc
es
mov
arpl
mov
mov
(bad)
mul
and
add
jl
pushf
mov
pop
cli
sti
push
inc
dec
imul
repnz
stos
(bad)
test
xor
adc
sub
dec
fucom
and
push
(bad)
aam
jns
or
outs
test
dec
push
mov
sahf
inc
popa
(bad)
cli
jns
push
rol
jno
movs
mov
and
xlat
in
jmp
mov
push
xor
imul
das
clc
dec
xor
push
ret
mov
and
mov
js
jg
call
shl
test
xchg
sbb
xchg
adc
xbegin
adc
mov
lahf
dec
lahf
inc
rol
dec
aam
add
out
sub
mov
mov
outs
shl
(bad)
std
in
addr16
jp
std
hlt
adc
aad
jl
fcom
adc
xchg
out
sub
xchg
and
xchg
pop
call
mov
call
inc
pop
cmp
dec
loop
push
call
rcl
std
mov
xor
call
jg
jg
cmc
hlt
add
fwait
adc
cs
sbb
ficom
mov
sahf
mov
jb
sub
add
pop
(bad)
pop
mov
shr
int
sbb
imul
mov
sub
dec
jmp
xlat
xchg
cmc
xchg
inc
add
sbb
xor
out
push
push
push
xchg
loop
fwait
rcr
imul
mov
sbb
pop
std
jnp
sti
sti
add
xchg
cmp
(bad)
in
movs
adc
mov
mov
fbld
add
mov
lds
inc
xlat
sbb
inc
xchg
cmp
dec
cmp
fcmovnbe
and
and
sub
push
addr16
pop
dec
(bad)
test
outs
pop
imul
aam
out
mov
rol
dec
mov
lea
not
rol
in
xor
pop
sti
pushf
icebp
(bad)
dec
nop
mov
cmps
adc
inc
pop
cwde
mov
jmp
sbb
lods
xchg
inc
jp
ins
add
fidiv
and
fist
int3
xor
das
cmp
xor
cmp
rcr
addr16
test
or
mov
push
fs
aad
addr16
bound
sub
(bad)
fnsave
das
call
fistp
cld
stos
(bad)
icebp
push
aaa
inc
lods
dec
lods
into
(bad)
xchg
repz
mov
or
dec
add
inc
sahf
push
mov
sbb
aam
lds
mov
ret
mov
sbb
outs
jo
cli
mov
fwait
mov
mov
pusha
jecxz
sbb
scas
stos
inc
je
xor
loopne
leave
std
xchg
ins
sub
loop
cld
xchg
(bad)
loope
push
sbb
mov
sbb
stos
ins
mov
sub
fdiv
sbb
dec
std
adc
test
dec
mov
xchg
imul
rcr
mov
push
cmp
xor
(bad)
jg
cs
mov
jno
or
and
in
shl
addr16
stos
pop
cmp
hlt
jp
add
jmp
push
sub
xor
sbb
xchg
mov
inc
sub
adc
out
fdivr
sub
aaa
xor
push
jmp
xlat
loope
in
scas
mov
dec
nop
and
(bad)
aaa
out
or
xor
mov
mov
and
cwde
ja
repnz
mov
or
scas
stos
inc
or
psllq
push
ror
ja
xchg
cmp
sbb
xor
inc
pop
cmp
cmp
xchg
(bad)
inc
hlt
mov
jmp
pop
cs
ss
mov
fadd
adc
xor
mov
jbe
pop
out
mov
sbb
cmps
out
cmp
stos
ret
inc
sbb
bound
add
lods
fiadd
inc
push
push
mov
imul
retf
mov
sub
shl
inc
outs
test
push
cmp
ins
pop
mov
iret
rol
out
ins
sbb
fild
popf
and
add
mov
mov
sub
and
loop
scas
or
mov
in
arpl
cwde
loope
jbe
push
je
dec
push
fisub
push
fidiv
fiadd
xor
jo
jnp
hlt
stos
(bad)
sbb
cmp
retf
jl
sbb
ror
or
and
in
add
mov
add
imul
push
iret
add
ret
dec
adc
(bad)
push
lods
(bad)
dec
or
add
mov
repnz
adc
add
sub
sar
aad
(bad)
out
loope
out
std
(bad)
mov
mov
into
mov
pushf
pop
nop
cmp
xchg
xor
mov
std
sub
jecxz
(bad)
ret
or
adc
call
mov
sbb
mov
les
nop
in
adc
jo
pop
or
outs
mov
mov
sub
inc
loopne
(bad)
inc
and
call
dec
ret
mov
lahf
movs
or
xchg
cmp
les
xor
xchg
jo
enter
inc
test
jl
xor
enter
pop
jmp
in
shl
cmc
pushf
shl
loop
dec
cmp
daa
inc
int
inc
stos
popa
dec
cli
aas
out
xchg
sbb
pop
jnp
jmp
es
fs
sub
std
jp
(bad)
mov
pop
cmp
sti
out
mov
add
or
neg
xor
jecxz
in
outs
dec
pop
or
cmps
xor
ss
inc
cwde
int3
xor
xchg
sub
mov
cmp
push
mov
push
push
cmp
push
inc
movs
jmp
dec
mov
out
mov
lahf
fstp
add
(bad)
hlt
xchg
jl
inc
push
and
call
ffree
inc
ret
punpckhwd
es
push
pop
mov
mov
scas
adc
cs
inc
and
out
mov
inc
mov
retf
repz
out
add
sbb
jp
mov
in
jle
fistp
retf
pop
test
std
cld
mov
iret
add
popf
fisubr
inc
test
retf
enter
out
mov
ret
movs
fdivr
dec
(bad)
pop
arpl
fadd
sub
mov
(bad)
and
xchg
push
xlat
add
inc
mov
(bad)
pop
cmp
shr
ds
stos
push
loopne
mov
pop
dec
add
shl
jmp
cmp
cmp
add
jmp
jg
ror
mov
popf
les
fwait
inc
dec
inc
outs
loop
dec
cmp
mov
add
or
fdivr
mov
outs
cmp
aas
add
(bad)
jmp
retf
cmp
mov
jns
fmul
fisttp
(bad)
ins
mov
push
push
inc
into
xacquire
fidiv
adc
js
lea
repz
dec
mov
add
and
pop
(bad)
push
jbe
in
cld
adc
cmp
out
push
mov
mov
pushf
push
pop
dec
ins
jnp
stos
mov
pop
add
enter
xchg
retf
or
outs
or
sub
mov
std
push
mov
aaa
test
cmp
pop
xchg
sbb
dec
stos
push
icebp
enter
lods
in
or
ror
shr
add
retf
clc
pusha
sbb
and
sti
fiadd
jne
cmp
mov
jb
xchg
jp
popa
mov
not
lods
imul
outs
and
mov
mov
das
mov
cmp
stos
mov
jle
inc
mov
jbe
add
inc
push
shl
pop
std
(bad)
mov
into
pushf
mov
push
pop
stos
jb
add
add
dec
test
add
push
sub
ss
lods
jae
push
test
popf
sub
mov
xchg
mov
mov
mov
and
add
out
pop
or
pop
aam
retf
adc
outs
pop
popa
test
cmp
jmp
push
repnz
jbe
jo
dec
out
das
pop
and
jecxz
fisubr
push
cwde
lea
xchg
mov
add
inc
jg
repnz
xor
push
sub
sbb
arpl
lock
and
aad
(bad)
fcmovnb
inc
inc
arpl
enter
mov
sar
sar
xchg
nop
sub
call
lods
jmp
push
ins
push
sbb
mov
sbb
jo
repz
cmp
pop
scas
cmp
aam
das
or
aaa
xchg
inc
movs
imul
aas
inc
sub
adc
or
jmp
xor
fild
and
repz
mov
clc
movs
shl
mov
mov
mov
jb
sub
xchg
xchg
jmp
cmc
or
inc
cwde
dec
mov
fsubr
in
stos
xchg
ss
pop
pushf
push
out
shr
movs
ja
sar
mov
mov
stc
dec
aad
jae
mov
in
cmp
and
outs
inc
popa
ret
fcmove
xor
ret
lds
pushf
inc
lds
adc
sbb
popa
ficom
loope
out
hlt
jl
mov
mov
push
jbe
or
or
test
xchg
cs
jle
adc
xor
je
aad
(bad)
dec
scas
or
repnz
xchg
mov
mov
ds
enter
add
test
retf
sahf
adc
xor
xlat
push
mov
jg
test
dec
jns
push
push
lea
inc
push
pop
cmp
and
cli
cmp
dec
js
jge
shl
ins
push
xchg
sbb
(bad)
mov
hlt
stc
xor
bound
movs
push
retf
dec
movs
jno
sub
inc
ins
out
dec
push
out
test
xchg
or
cmc
xor
call
mov
mov
add
mov
mov
ds
lea
sbb
sub
sbb
call
push
sbb
addr16
push
pop
mov
scas
arpl
out
inc
adc
mov
repnz
cdq
cmp
sub
mov
jl
jp
inc
jl
fcomi
cmp
mov
cmc
ret
mov
and
xor
mov
mov
sar
or
push
mov
mov
cld
jo
fsubr
in
sbb
mov
dec
(bad)
sbb
jb
jl
jb
pop
outs
sub
mov
adc
fsubr
out
push
sbb
faddp
xchg
pop
(bad)
loop
sar
xor
jecxz
jp
push
clc
nop
aad
xchg
cmc
sbb
jno
leave
(bad)
mov
lock
jne
pop
test
mov
(bad)
xchg
push
ficom
mov
ds
mov
mov
lahf
(bad)
outs
fstp
xchg
loop
and
mov
cli
aaa
pop
pusha
in
dec
dec
lds
test
popf
add
daa
sbb
jnp
cmp
outs
imul
mov
push
mov
data16
pushf
stos
xchg
add
inc
xchg
jmp
cmp
in
lahf
pop
adc
mov
push
jl
fldcw
jle
dec
fldcw
fld
cmp
cmp
and
int
or
pop
cdq
mov
sbb
xor
daa
ins
sbb
pop
or
cmc
adc
bound
push
pop
push
gs
mov
ds
int3
pushf
xlat
ror
pop
xor
mov
xchg
dec
xchg
mov
fcomp
test
fiadd
mov
out
jecxz
mov
inc
cmp
sbb
std
enter
xchg
jg
sti
loop
repnz
sub
add
cmp
fcmovu
hlt
adc
lock
xchg
icebp
mov
push
sar
test
repz
(bad)
lea
or
add
xchg
scas
dec
mov
enter
stos
aam
push
jmp
adc
test
cmp
rep
cmp
sbb
jp
(bad)
loopne
cdq
add
sbb
cdq
pop
mov
jnp
shr
ret
cmp
loope
stc
nop
cmp
add
stc
das
cs
test
inc
dec
xchg
cdq
sar
push
mov
push
jmp
adc
push
daa
push
in
xor
cmps
in
mov
cmp
iret
push
aam
movs
dec
add
push
inc
xchg
jge
xchg
or
sbb
or
ror
test
test
lea
call
shr
inc
(bad)
jnp
in
ja
imul
inc
dec
and
fcmovu
xchg
out
or
mov
jp
cmp
stos
sub
inc
fsubrp
not
mov
aad
inc
mov
stos
pop
xor
lock
ret
(bad)
and
jecxz
jge
cmp
xor
push
xor
std
hlt
sub
(bad)
xor
jmp
aad
adc
mov
in
(bad)
rcr
pop
push
shl
mov
rcr
mov
repz
mov
sub
or
ins
aad
or
pop
retf
push
xchg
jno
sbb
cmps
call
xlat
aad
inc
fstp
add
add
int3
jb
sar
aas
add
out
outs
in
sbb
ds
xchg
add
aaa
push
popf
fmul
(bad)
and
and
(bad)
retf
fidivr
mov
adc
call
mov
pop
adc
pop
test
je
mov
pmulhw
mov
add
pop
mov
stos
cmp
mov
dec
jge
mov
icebp
sti
push
aad
out
movs
in
rcr
fdivr
sbb
fcom
cmp
sub
add
into
push
push
xchg
xlat
mov
sahf
pusha
mov
pop
pushf
ins
push
mov
sahf
aam
test
ror
push
ds
test
sub
mov
jmp
or
test
outs
pop
add
dec
in
test
stos
mov
push
add
dec
push
fcom
mov
push
gs
lods
dec
jno
sbb
dec
leave
mov
test
sub
push
stos
push
adc
xchg
arpl
pop
push
and
popa
pop
xchg
push
cmp
mov
(bad)
stos
hlt
jno
mov
cmp
cmp
mov
pop
dec
or
jb
add
test
in
ror
or
xor
pop
outs
fisttp
and
inc
mov
imul
nop
push
sub
adc
sti
inc
xchg
ins
not
cmps
and
lea
jo
push
xchg
in
(bad)
ror
repnz
es
sbb
fdiv
jns
inc
mov
jmp
adc
ins
push
push
jmp
repnz
inc
repz
pop
fcomp
cdq
aaa
mov
mov
shl
adc
xchg
cmp
int3
push
test
push
pop
std
dec
shl
mov
mov
int
arpl
dec
mov
mov
fwait
not
shr
mov
mov
cli
add
jmp
lods
sahf
jmp
mov
or
call
push
add
jl
in
push
cmc
jmp
adc
jns
push
mov
mov
and
xchg
or
push
aam
rol
pushf
mov
dec
jno
adc
(bad)
add
pop
inc
rol
mov
in
fisttp
inc
fcomp
pop
(bad)
loop
shr
push
mov
scas
pusha
leave
outs
in
mov
shl
shl
ds
adc
retf
cli
sar
icebp
mov
pop
sbb
pop
or
int
imul
jns
push
call
mov
or
and
mov
jmp
xchg
inc
mul
adc
and
jmp
jbe
sbb
shl
test
(bad)
stc
add
outs
adc
jns
sahf
and
sbb
icebp
dec
add
xchg
push
add
xlat
(bad)
cmps
mov
mov
add
call
pop
test
and
pop
ja
ja
inc
stos
jae
int3
pop
fnstenv
int
cmp
call
mov
mov
mov
fisub
mov
int
cmp
adc
lock
and
mov
dec
pop
mov
mov
inc
retf
adc
fnsave
dec
jbe
mov
push
les
xchg
mov
sbb
sub
add
jge
and
jp
rcr
ins
hlt
cmp
cs
xchg
adc
jnp
cmp
test
loopne
sbb
add
mov
sbb
jmp
sbb
push
dec
fisttp
sub
lea
mov
sar
idiv
sub
stos
scas
lahf
jmp
mov
mov
les
jnp
mov
cmp
data16
mov
jg
leave
xchg
pop
(bad)
mov
xchg
(bad)
int
mov
cmps
daa
push
cdq
mov
sub
jns
and
ret
fimul
adc
daa
aad
push
in
hlt
outs
mov
pop
adc
das
fidivr
daa
movs
lock
mov
movs
inc
loope
push
adc
adc
pop
mov
mov
dec
mov
and
and
fdivr
fimul
xchg
movs
adc
push
and
cmp
in
and
pop
sub
pop
mov
mov
fnsave
out
ins
push
mov
mul
push
in
shl
std
stos
adc
mov
mov
sub
call
repnz
push
mov
imul
add
add
call
(bad)
stos
arpl
fst
mov
fstp
ja
aad
test
outs
das
outs
add
dec
inc
xor
cmp
mov
rcl
jno
ds
dec
dec
cs
jnp
and
(bad)
xchg
movs
sub
jle
daa
mov
cmps
mov
inc
inc
ins
cmp
pop
and
add
cmps
push
jo
xchg
out
xor
les
fbld
dec
or
bound
imul
frstor
test
in
mov
aad
mov
shl
xchg
and
or
dec
les
jne
cwde
pop
ret
mov
mov
xor
and
jns
cld
es
xchg
repz
cmps
and
cmp
or
and
imul
rep
inc
pop
stos
xor
jo
fsubrp
retf
push
adc
cli
mov
xchg
les
add
xchg
push
sub
les
mov
mov
mov
cs
fldenv
mov
adc
outs
shl
push
and
pop
jmp
xor
std
or
mov
mov
rcr
cmp
mov
rcr
or
adc
cmp
sub
jp
jae
or
test
cmp
mov
adc
pop
movs
xchg
push
inc
sahf
pop
dec
(bad)
jae
dec
imul
sbb
movs
jne
mov
or
jmp
xor
ins
add
push
pusha
das
cli
xchg
sub
test
xchg
adc
pusha
dec
bound
adc
icebp
outs
(bad)
in
ins
in
iret
jmp
mov
cli
and
jae
out
iret
stos
loope
dec
fwait
ror
mov
ss
hlt
(bad)
mov
mov
jp
pop
and
pop
cdq
shr
lds
out
shl
pushf
retf
inc
xor
mov
push
sub
push
jl
xor
push
pop
push
imul
in
jle
dec
out
cmc
loopne
or
xchg
scas
push
aam
test
inc
cmps
mov
xchg
cld
inc
cmp
push
scas
into
jns
adc
retf
clc
lahf
push
sbb
lods
je
test
in
xchg
mov
cmps
out
pop
stc
mov
or
out
in
gs
xor
or
mov
cmp
dec
push
pop
sub
scas
sub
cmc
lods
xlat
dec
fcom
dec
idiv
dec
dec
(bad)
shr
sbb
cdq
dec
inc
in
je
dec
adc
cmp
shl
push
dec
mov
xchg
or
mov
repz
loopne
jp
and
(bad)
stos
adc
xchg
cmp
cld
bound
mov
stc
adc
xchg
gs
outs
cmps
and
and
push
fcmovbe
inc
hlt
jbe
sbb
dec
(bad)
and
ret
scas
aam
jns
cmp
mov
sbb
mov
ins
into
jmp
test
call
cmp
mov
ja
jno
in
adc
mov
dec
ins
sbb
mov
call
std
lock
sbb
sub
add
ds
pop
arpl
mov
lock
sub
sbb
dec
les
inc
pop
mov
das
pop
add
sbb
xchg
cmc
lea
in
cmp
sub
ins
mov
aam
push
pushf
test
or
aam
inc
xchg
and
mul
mov
fstp
pop
jne
mov
push
(bad)
ja
sub
sub
jecxz
mov
js
inc
or
lods
push
xor
and
inc
sub
mov
push
push
loope
dec
jp
xchg
or
xchg
js
ja
imul
aaa
rol
push
and
mov
sbb
mov
shl
test
out
push
mov
cmp
xor
inc
mov
ret
fisubr
or
ja
cmps
call
sub
es
xor
mov
sub
in
int
retf
cmps
xchg
pop
ins
add
jno
and
mov
dec
xor
jno
add
jg
add
push
push
cmc
retf
das
ss
cdq
dec
stc
cwde
push
pushf
xchg
pop
push
(bad)
gs
xor
pop
in
xor
mov
sbb
add
call
test
dec
lea
repz
inc
dec
repnz
dec
daa
inc
adc
clc
mov
inc
fcmove
ins
shr
pop
sub
or
bnd
dec
daa
iret
ret
inc
lea
mov
pusha
das
ret
xor
and
stos
lods
xlat
cmp
xchg
adc
rcl
(bad)
sub
aam
jp
push
aad
pop
call
jbe
and
test
ss
ror
mov
mov
shr
mov
pop
xor
jecxz
jmp
add
push
sbb
xor
adc
mov
mov
arpl
sbb
mov
iret
jae
imul
xchg
push
xchg
fnstcw
lds
fmul
mov
repnz
xor
lods
adc
movs
cmp
out
or
cwde
gs
xor
push
inc
lock
add
repnz
mov
xor
pop
inc
outs
and
xchg
push
scas
out
repnz
cli
xchg
cmp
xor
xor
xor
push
cmp
push
dec
adc
ds
jno
int3
ins
and
sbb
pop
out
add
imul
xchg
or
mov
mul
fistp
frstor
clc
mov
pop
icebp
ret
popf
inc
sbb
xchg
jmp
pop
lods
cmp
mov
div
and
push
xchg
xchg
mov
cdq
stos
fidiv
add
and
push
test
gs
enter
shl
push
repz
repz
or
call
xor
or
adc
sbb
mov
xchg
sbb
xor
cld
sub
and
test
mov
enter
je
imul
scas
stos
(bad)
aam
mov
shl
inc
sti
ret
inc
clc
sysret
xchg
rcl
push
mov
mov
jmp
push
jle
mov
adc
test
mov
sbb
dec
(bad)
push
repz
push
iret
inc
test
inc
adc
push
dec
mov
pop
adc
push
(bad)
mov
push
test
jnp
jns
test
retf
fstp
jmp
add
in
dec
test
not
call
outs
xor
scas
and
cmp
dec
aas
ficom
inc
jp
push
add
mov
frstor
cdq
imul
cmps
mov
mov
pop
cmps
ret
sbb
ret
add
stos
inc
pop
mov
fldenv
scas
movs
and
push
mov
xor
int
sub
jmp
mov
add
mov
sbb
cli
push
add
retf
jecxz
push
lods
and
repz
mov
and
jle
inc
movs
xchg
lds
sub
or
lock
add
and
or
cdq
jae
mov
jmp
fild
js
add
repz
inc
aad
(bad)
mov
dec
retf
dec
mov
push
cwde
jb
jg
js
cmp
inc
inc
push
std
jp
dec
sub
cld
mov
mov
adc
xchg
sub
sbb
xor
cmps
add
(bad)
cmp
dec
push
int
sar
xchg
fidivr
(bad)
cdq
loope
xchg
push
jg
popa
push
mov
out
popf
adc
cmp
ret
addr16
push
sbb
pushf
repz
lahf
rol
popa
dec
pushf
add
push
cs
pop
pop
repnz
push
jmp
in
out
(bad)
fnstcw
mov
mov
fisttp
sub
(bad)
popa
outs
push
addr16
push
lds
jbe
ins
add
cmp
inc
jnp
sub
pop
and
ins
in
pushf
(bad)
lahf
shr
jle
test
xchg
repz
or
or
outs
lods
sar
mov
jb
into
jbe
add
add
add
in
imul
and
push
mov
xchg
pop
(bad)
pop
sbb
test
add
test
shr
mov
sbb
gs
xor
inc
inc
bound
(bad)
shl
fdivr
adc
sbb
add
repnz
or
aad
(bad)
xor
dec
cmp
das
lds
pop
push
loop
jne
jge
mov
mov
jno
(bad)
push
rcl
int
inc
pop
outs
cmp
pop
sub
add
sbb
sub
pop
sti
jg
test
jle
imul
pop
sti
or
add
and
push
xchg
add
call
in
xchg
cdq
inc
pop
arpl
pop
cmp
in
rol
xor
icebp
and
fwait
aaa
pop
mov
mov
add
and
xor
sbb
jp
out
cmp
les
adc
xchg
cdq
out
popf
xchg
aaa
icebp
xchg
xor
test
test
push
cmp
xchg
push
mov
int
push
xor
mov
jb
or
imul
jbe
add
and
imul
cmc
pusha
stos
fwait
xchg
push
add
inc
lea
scas
mov
stc
jecxz
shl
push
inc
jne
xchg
ja
test
add
repnz
rcl
or
xlat
sbb
popa
std
xchg
jl
cmc
mov
inc
cmp
outs
in
test
in
sub
and
xchg
mov
mov
mov
out
sbb
ror
fild
xchg
xchg
and
jecxz
mov
dec
xchg
scas
mov
cld
lods
pop
cdq
lock
imul
sar
daa
xchg
jae
mov
mov
aaa
jle
xchg
imul
in
add
push
dec
fst
push
outs
je
jle
sbb
mov
pop
in
pop
pop
in
dec
push
xor
mov
or
jmp
sbb
(bad)
adc
mov
inc
mov
inc
mov
mov
mov
je
pop
js
inc
and
add
cmp
outs
inc
vmovdqu
mov
mov
imul
sbb
je
cmp
pop
loop
std
and
call
sub
cmp
movaps
fcomip
push
test
add
fs
outs
mov
or
inc
push
out
xchg
mov
jle
movs
cli
adc
xor
push
jae
or
and
retf
(bad)
xor
mov
push
jmp
int
jmp
pop
test
enter
xor
mov
xor
lods
jecxz
dec
repz
mov
mov
push
cmp
into
jg
sub
sahf
sub
and
mov
call
or
movs
(bad)
inc
jae
jp
jno
xor
pop
fs
shl
aam
mov
add
sub
cs
loopne
lods
mov
addr16
jg
out
lock
and
xchg
aad
jo
in
sbb
jle
dec
pop
sti
sahf
js
dec
in
(bad)
mov
add
shr
inc
jge
sbb
inc
aad
into
fstp
push
call
jns
mov
or
sub
mov
cs
push
jno
jge
cmp
int
loope
lea
push
aaa
sbb
mov
xchg
inc
add
jge
popf
lods
arpl
pop
lods
xor
icebp
in
cmp
and
dec
mov
and
jge
mov
xchg
add
in
cmp
out
pusha
mov
in
(bad)
mov
(bad)
xor
sbb
fwait
stc
jge
mov
mov
test
or
cs
xchg
fdiv
cli
sbb
lea
daa
inc
dec
mov
push
adc
sub
mov
not
lods
push
xchg
jb
ins
push
cmp
ja
loop
pop
jg
or
mov
and
outs
jp
sahf
out
lods
pop
xchg
aas
mov
push
inc
add
les
jb
clc
add
cdq
data16
repz
lea
call
mov
(bad)
mov
add
jp
adc
cmp
add
lea
sar
data16
data16
mov
rcr
lods
ret
aas
test
ficom
std
xlat
ficom
mov
lock
iret
hlt
xlat
(bad)
cwde
push
xlat
mov
xor
sub
hlt
dec
pop
push
mov
(bad)
call
cmc
aaa
inc
push
xor
ficomp
std
jmp
mov
cli
push
xor
jp
push
shr
xchg
add
dec
jo
cs
leave
arpl
push
cmps
pushf
mov
push
add
jl
scas
loope
sbb
jne
cmc
stc
push
xchg
pop
push
je
mov
ins
push
and
fld
movs
das
adc
lea
mov
push
jl
nop
fmul
(bad)
mov
xchg
inc
(bad)
dec
(bad)
cld
fadd
fiadd
mov
ret
in
lea
std
stos
sbb
xor
cmp
inc
mov
aaa
push
stc
sub
mov
dec
push
sub
xor
test
mov
pop
test
xchg
(bad)
adc
cs
jmp
xor
push
sub
xchg
jl
dec
jge
fsub
push
pop
bound
ja
push
cmp
jne
pop
fsub
sub
dec
add
jmp
lods
retf
sbb
sbb
mov
mov
mov
lock
push
movs
cwde
mov
or
inc
repnz
adc
cmp
sub
js
pusha
sbb
or
je
pop
sbb
sub
push
(bad)
lods
clc
mov
push
push
inc
and
in
mov
adc
sbb
push
cmp
mov
sub
push
sub
or
movs
push
dec
popa
fist
add
arpl
ins
cs
loope
(bad)
cwde
and
push
mov
jle
mov
rol
jo
pop
xor
mov
aad
mov
add
adc
outs
mov
pop
mov
xchg
adc
iret
rcr
inc
sub
ror
gs
lods
cdq
lock
adc
aam
add
push
aam
loop
or
mov
pop
je
int
jp
sub
sbb
mov
int3
movs
jmp
push
adc
mov
jp
jl
adc
dec
loopne
pushf
sbb
retf
std
das
repz
ret
pop
pop
mov
mov
sbb
mov
jecxz
test
dec
mov
mov
xlat
cmc
jl
mov
cmp
loopne
mov
xor
(bad)
xchg
sub
inc
adc
add
imul
call
je
(bad)
test
addr16
xor
mov
in
push
setl
adc
cdq
jmp
lds
xchg
sbb
scas
in
add
cld
lahf
pushf
inc
popa
stc
pop
out
js
cmp
pop
ror
and
(bad)
jl
pop
mov
xor
xchg
cmp
call
sbb
dec
jo
push
xchg
sub
xor
push
jmp
xchg
sub
data16
jb
xchg
sbb
jbe
mov
cmp
loope
stos
dec
(bad)
mov
mov
in
int
loope
mov
pop
cmp
jo
dec
mov
or
scas
(bad)
mov
gs
in
xchg
mul
popf
and
mov
popf
xchg
clc
mov
popa
adc
jl
pusha
popf
dec
xchg
sbb
adc
pop
cmp
jg
dec
in
cmp
xchg
mov
inc
out
call
mov
mov
jo
or
test
mov
(bad)
aam
mov
mov
loope
adc
sub
mov
cmp
jo
mov
xor
sar
mov
mov
mov
mov
xchg
lock
pop
pop
ja
ret
xor
and
adc
(bad)
adc
mov
lods
mov
or
data16
(bad)
in
inc
sahf
das
lahf
sbb
into
hlt
add
movs
push
xor
jns
scas
out
inc
mov
xor
les
inc
sub
div
call
and
and
lock
jmp
lea
adc
sub
xor
ins
push
add
mul
push
(bad)
in
mov
sub
(bad)
jmp
movs
pop
inc
sbb
add
push
dec
ins
mov
pusha
adc
fiadd
dec
xor
fnstenv
(bad)
jne
jmp
inc
or
stos
adc
xchg
sahf
repnz
mov
mov
fist
imul
jns
inc
mov
stc
cli
or
pop
jnp
mov
(bad)
arpl
sti
test
fnstsw
cwde
mov
and
mov
jb
pop
mov
and
inc
pushf
jns
fidivr
mov
das
(bad)
ins
cmp
mov
mov
or
mov
fidivr
movs
in
mov
in
and
xor
outs
in
(bad)
jbe
push
pop
test
mov
fwait
test
add
jno
gs
push
or
lds
pop
bnd
cmp
stc
je
push
outs
dec
push
jmp
xor
xor
push
xchg
aas
mov
push
jge
sub
mov
pop
or
stc
test
push
scas
or
out
sub
in
ins
das
fs
xchg
or
mov
lds
stos
cld
xchg
adc
rcl
xchg
test
lea
fimul
or
aam
rcr
pop
mov
pop
mov
pusha
out
pop
sbb
xor
retf
add
mov
xor
add
outs
into
xor
bound
call
xchg
stos
sti
rcl
in
pop
mov
movs
ja
mov
ins
div
pop
xor
add
cmps
xor
mov
std
push
stos
icebp
add
jg
sub
ja
mov
pop
xor
clc
(bad)
push
xchg
lods
xchg
dec
icebp
retf
test
push
stc
pop
mov
push
(bad)
inc
out
scas
ror
lahf
and
or
icebp
cmps
pop
repnz
pop
nop
xchg
je
loop
jae
pop
mov
daa
popf
sti
mov
test
adc
popa
pop
push
cli
fwait
sub
popa
push
jl
es
int
mov
xchg
mov
and
cmp
and
cmp
jo
daa
in
sub
jg
mov
ja
std
or
mov
jae
pop
adc
int
jae
jmp
xor
mov
outs
mov
inc
mov
loope
mov
cmps
push
call
adc
or
shr
(bad)
mov
pop
(bad)
xlat
pop
inc
dec
out
and
(bad)
xchg
mov
xchg
jne
mov
add
cmp
and
imul
pop
cwde
retf
scas
push
imul
rcr
loope
inc
test
and
rol
mov
sbb
das
xor
push
imul
aas
loop
xchg
hlt
into
clc
mov
mov
fsub
mov
and
sbb
push
sbb
and
test
and
or
pushf
fsubrp
call
push
cmp
add
fimul
mov
sub
fld
call
shl
mov
rol
add
pop
int
lds
inc
mov
push
(bad)
add
ins
in
mov
cmp
push
push
cmp
pop
sub
mov
pop
add
add
cmp
push
or
ss
mov
cmp
aad
inc
clc
scas
lock
xor
mov
or
jecxz
mov
cmp
cmp
out
ss
out
ins
cmp
mov
mov
mov
mov
fs
xor
xor
ret
(bad)
push
rcr
xchg
pop
loope
aad
add
fdivr
sahf
add
xchg
mov
retf
repnz
dec
sbb
sub
cmp
mov
aas
mov
retf
xor
mov
lahf
and
push
js
and
cmp
mov
cmp
hlt
xchg
adc
imul
(bad)
sar
imul
adc
rcr
push
sbb
lods
pop
(bad)
dec
mov
inc
nop
cmp
or
xor
push
cmp
(bad)
repz
jns
push
mov
sbb
or
jmp
imul
sbb
inc
popa
hlt
jb
ja
xchg
mov
and
scas
xor
(bad)
loopne
push
in
cmp
shl
dec
adc
cmc
aaa
inc
jmp
rcr
(bad)
xor
dec
and
dec
loop
imul
fucom
or
xchg
aaa
(bad)
jno
pop
je
pusha
inc
jl
fadd
and
mov
popf
mov
sbb
adc
or
jg
jmp
mov
in
stc
and
lahf
(bad)
and
xchg
sbb
xchg
add
pop
push
in
fld
dec
(bad)
pop
adc
inc
and
adc
push
out
stc
movs
(bad)
mov
inc
ror
sbb
inc
xor
vlddqu
cmc
mov
pop
xor
inc
mov
sub
je
push
cld
and
rol
ins
mov
jmp
lock
or
inc
mov
std
dec
pop
ror
mov
dec
in
ja
fs
mov
test
out
add
sbb
shl
loope
xchg
sub
sub
sbb
add
cmps
and
and
push
sub
adc
(bad)
cmp
pop
stos
popf
fist
fistp
ins
(bad)
mov
stos
arpl
nop
sub
push
dec
jp
gs
nop
js
pushf
jp
fcomip
outs
sbb
add
push
add
fucom
sbb
outs
pop
push
leave
(bad)
jge
fldcw
jecxz
and
push
dec
add
and
add
retf
fiadd
das
pop
push
inc
fsubr
jp
cmps
lock
movs
stc
js
sub
inc
lods
mov
sar
adc
outs
es
push
sbb
shr
inc
(bad)
xlat
mov
jns
push
xchg
mov
movs
add
xchg
sbb
and
add
push
fisttp
push
mov
mov
out
pop
xlat
pop
pop
out
sub
inc
cs
das
and
lahf
out
mov
shl
je
fstp
data16
fimul
clc
pop
adc
int
pop
mov
push
sub
lahf
sbb
out
repnz
out
or
mov
mov
inc
sbb
mov
ret
push
adc
stc
xor
lahf
cmp
rcl
sbb
mov
(bad)
xchg
(bad)
popa
gs
adc
bound
sti
pop
xchg
call
imul
cmp
and
mov
pushf
xchg
push
lock
cmp
(bad)
rcr
push
les
repz
sahf
pusha
shl
popa
(bad)
daa
call
pop
add
pop
xchg
lods
mov
cmp
add
mov
dec
das
out
movs
xor
push
cmc
push
movs
stc
int
int3
cmps
scas
(bad)
mov
stos
lahf
data16
sub
push
fwait
movs
jns
out
popa
sbb
out
(bad)
fsub
inc
test
xchg
sbb
lds
add
push
or
fdiv
jbe
pushf
mov
stos
sub
jg
xlat
and
in
pop
pop
stos
jb
push
pop
rol
lahf
inc
(bad)
xor
push
ja
int3
inc
cs
out
jle
cld
add
enter
rcr
lahf
sub
ss
mov
das
lock
in
add
xchg
xchg
fwait
mov
push
data16
test
mov
pop
add
push
push
sbb
cmps
pop
adc
adc
pop
push
mov
xor
and
cmp
gs
jmp
loopne
or
add
lods
cmp
pmulhw
pop
adc
pop
adc
add
and
nop
fisttp
ins
adc
mov
cwde
out
gs
outs
jge
jecxz
aam
and
das
xor
inc
push
mov
sub
leave
sbb
mov
pop
sbb
imul
inc
in
cli
mov
sahf
cmps
cmps
mov
cwde
shl
loope
icebp
aad
outs
aad
cmp
outs
aad
retw
popa
mov
mov
pusha
out
ss
lock
loop
dec
test
jmp
fadd
and
mov
push
cmp
sti
cmp
ss
and
clc
mov
aam
pop
mov
ins
loopne
inc
inc
add
fimul
cmp
push
add
retf
inc
push
xchg
in
mov
ss
aad
pusha
fcmovne
pop
cmp
cwde
lahf
into
int3
xchg
inc
inc
sub
mov
mov
add
xlat
lods
add
pop
mov
sub
cmps
je
inc
add
jne
dec
stc
cmp
jmp
dec
bound
or
mov
add
or
pop
sub
add
mov
pop
mov
movs
rol
adc
xchg
push
pop
push
lods
or
jae
inc
iret
and
enter
add
or
and
xor
jp
sub
rcr
dec
(bad)
mov
movs
jae
call
in
daa
cmp
cmp
sub
jo
jne
test
add
adc
xchg
inc
jmp
popf
and
jno
div
xchg
push
inc
jns
fs
retf
loope
jae
cmps
pop
dec
fidiv
stos
cmps
rol
jmp
jnp
xor
xchg
addr16
cdq
add
out
xor
mov
mov
je
pop
std
mov
inc
(bad)
fisub
lds
inc
cmps
inc
jge
and
cld
jmp
cwde
sbb
dec
push
sbb
xor
push
mov
ds
ret
rcr
push
repnz
loope
adc
inc
inc
and
mov
pop
ficom
out
stos
push
lea
movs
ficomp
imul
lea
mov
xor
fwait
pop
bound
adc
mov
in
xor
ret
aaa
inc
shr
ss
imul
pop
dec
adc
out
mov
ds
xchg
outs
aad
mov
in
fld
pop
push
fisub
fdiv
xor
mov
pop
test
in
push
add
jmp
pushf
jne
sbb
inc
in
leave
jne
loop
xor
push
movs
push
jbe
pop
mov
mov
imul
into
add
and
mov
lods
fstp
scas
fs
xlat
jle
imul
dec
inc
add
xchg
jae
adc
sbb
ins
pusha
aaa
enter
xchg
aaa
(bad)
jmp
je
(bad)
adc
xor
mov
sbb
in
or
pusha
in
xchg
sahf
outs
add
pop
push
aam
stos
hlt
loop
pop
pop
or
inc
jmp
(bad)
sbb
xchg
jns
loop
jp
in
(bad)
es
sub
push
inc
jmp
sbb
or
int
ja
inc
nop
mov
sbb
in
pop
inc
add
shr
pusha
je
int
into
(bad)
loope
movs
mov
cmp
xchg
retf
mov
mov
and
inc
out
std
xchg
aas
cmp
lahf
je
cli
div
jmp
add
jns
call
push
rol
(bad)
stos
xor
add
add
addr16
sbb
shrd
mov
mov
ds
sbb
and
aad
jg
xor
(bad)
jp
push
sub
aad
sar
lds
cld
das
and
adc
or
(bad)
rcl
xchg
out
mov
fld
test
(bad)
sar
push
pop
pop
mov
jle
xchg
es
sti
test
sahf
in
and
ins
fsubr
(bad)
dec
or
in
cmp
inc
fimul
out
mov
sbb
dec
jo
movs
pop
mov
das
dec
mov
outs
adc
imul
cmp
pop
jb
scas
jmp
jbe
or
sti
imul
aas
add
and
call
push
pop
mov
and
popw
fimul
arpl
test
ss
or
fdivr
jmp
imul
add
jp
(bad)
movs
adc
out
mov
jmp
and
lahf
mov
xchg
hlt
int
retf
loop
out
pushf
repz
cmp
test
aas
and
add
sub
sbb
push
repz
add
les
jecxz
adc
movs
xchg
jb
push
(bad)
call
sar
data16
movs
and
les
mov
call
jne
clc
call
mov
imul
jae
jle
clc
xchg
adc
cmp
or
cld
jp
cmps
xchg
imul
stos
xor
jg
jns
ja
jl
nop
jae
pop
push
cmp
icebp
aad
mov
mov
cmc
adc
sbb
imul
xchg
js
out
mov
shr
in
lock
mov
mov
push
sub
cdq
jge
jmp
sbb
ficom
or
mov
pop
jbe
aam
das
adc
mov
push
mov
js
inc
jae
and
push
sub
mov
fcom
sbb
(bad)
cli
inc
rcl
js
ja
or
pop
std
jne
mov
js
fwait
cs
scas
repz
inc
mov
cmp
je
cmp
in
pop
leave
in
mov
int3
loope
pushf
(bad)
mov
xor
xchg
sbb
test
sub
ins
std
dec
adc
outs
mov
sbb
jg
pop
jae
stos
stc
enter
into
xchg
lahf
inc
(bad)
push
and
push
add
std
gs
lea
mov
outs
scas
and
jbe
arpl
bound
test
jle
scas
fisub
cmp
cmp
aas
stos
imul
dec
pop
in
mov
in
jmp
xchg
add
jns
sbb
xor
jmp
test
dec
adc
sbb
daa
and
shl
retf
adc
popa
rcl
not
adc
aaa
xor
xchg
cli
shl
mov
sub
jmp
mov
mov
in
int3
stc
xchg
int
mov
(bad)
outs
push
mov
mov
push
or
out
xlat
test
inc
arpl
repz
pop
test
jmp
mov
cmp
and
out
cmc
or
adc
fs
sub
add
mov
jp
push
jno
mov
cmc
popa
inc
push
int3
jg
jp
das
idiv
xlat
fwait
xor
sbb
push
outs
xor
cmps
push
xchg
loope
dec
pop
mov
xchg
fldcw
inc
mov
addr16
sub
jecxz
sub
push
xchg
mov
pop
or
or
inc
fs
xor
clc
call
lea
jle
cwde
xchg
mov
xor
sub
sub
iret
imul
in
inc
outs
mov
call
aad
leave
sahf
fldz
sbb
fimul
fst
mov
mov
jne
cdq
jmp
fstp
es
inc
dec
jp
dec
cmp
ins
jecxz
cld
jp
or
and
adc
ins
rcl
jnp
(bad)
sbb
(bad)
jb
shr
mov
push
sbb
or
clc
retf
es
lea
mov
mov
and
es
xchg
rcr
mov
in
mov
jle
ror
push
xor
int
inc
and
scas
leave
imul
mov
ret
aad
cmps
inc
stos
push
jge
cmp
dec
hlt
test
mov
push
adc
inc
dec
retf
mov
mov
mov
(bad)
sbb
cld
mov
jle
push
fldpi
sbb
out
cwde
pop
sub
loope
cwde
xchg
xchg
pop
aas
dec
fmul
test
xchg
dec
mov
jmp
inc
adc
pushf
mov
or
mov
jb
int3
sub
sub
into
mov
ror
sahf
jb
add
gs
xor
add
mov
movs
fld
pusha
(bad)
pop
into
push
jne
cmps
stos
push
push
push
sbb
pop
and
jne
out
add
loope
push
xchg
in
ret
dec
sar
(bad)
sti
dec
retf
loop
sbb
dec
inc
add
mov
xor
adc
fisub
outs
popa
out
adc
out
call
ds
mov
xchg
pop
enter
adc
lea
pusha
push
adc
mov
jmp
add
jge
shr
(bad)
test
mov
xor
push
jmp
movs
iret
jmp
jp
cmps
add
mov
xor
sbb
fdivr
cld
cmp
or
lds
cmp
xchg
stos
mov
lds
mov
jmp
sub
xlat
add
add
and
cmps
fs
cmp
arpl
ins
ja
loopne
push
inc
jbe
add
xor
adc
test
scas
and
xchg
outs
lea
add
mov
adc
pop
mov
call
mov
(bad)
je
out
mov
sbb
test
aam
pop
cmp
pop
mov
shl
push
inc
xchg
cmps
iret
call
xchg
dec
pop
aas
lock
sub
jnp
jne
pop
fidivr
jb
dec
fisttp
test
(bad)
sbb
int3
or
and
push
in
adc
xor
inc
xor
ret
mov
loop
dec
adc
(bad)
jne
dec
out
repz
mov
nop
push
xor
cmp
lods
(bad)
retf
cmp
sbb
push
out
jp
push
cmp
call
sar
mov
jle
pop
loopne
leave
iret
mov
bound
jmp
inc
jno
jbe
fdivr
mov
mov
int
inc
adc
mov
stos
xor
push
dec
adc
icebp
push
daa
mov
pop
int
mov
lock
jo
into
aam
xor
test
repz
pop
sbb
jecxz
nop
ror
sub
cmc
mov
add
daa
aas
jge
xchg
iret
cli
fwait
xor
adc
fisubr
pop
xor
jecxz
dec
mov
cli
or
xchg
cmp
pushf
popf
out
pop
xor
pop
loope
jl
sbb
push
fcomp
rcl
repz
push
adc
int3
aad
inc
(bad)
xor
stos
sub
xchg
push
jmp
add
mov
data16
mov
cdq
dec
cmp
mov
and
out
push
inc
adc
(bad)
jmp
or
shr
pop
adc
je
mov
nop
mov
jmp
out
mov
iret
ret
je
or
mov
rcr
xchg
or
dec
cdq
or
retf
xlat
add
xor
call
jo
sar
and
xchg
dec
push
cmp
out
push
mov
jl
pop
mov
push
jmp
jl
jns
js
dec
sbb
sub
mov
xchg
out
outs
ins
sbb
pop
pop
sar
sbb
les
popa
adc
dec
xchg
test
arpl
jg
(bad)
neg
mov
push
or
sub
push
stc
push
push
(bad)
add
sub
mov
ror
dec
sar
sub
out
mov
xchg
in
pop
add
inc
pop
fwait
dec
fcmovb
jmp
shl
addr16
cmp
mov
imul
adc
push
jg
int
pop
repnz
popf
inc
pop
cli
jmp
add
jp
sub
sbb
imul
jne
pop
ret
out
dec
ja
fwait
aam
int3
fucomi
loopne
lock
add
xchg
mov
pop
ret
loop
cmps
ins
shr
aas
push
mov
sbb
fwait
rol
pop
in
push
mov
push
mov
dec
shl
pop
sar
(bad)
adc
xchg
stos
cdq
pop
in
jg
push
pop
iret
pop
push
pop
inc
push
addr16
retf
cmc
arpl
and
jo
out
(bad)
out
retf
inc
inc
or
dec
jl
dec
xchg
mov
sub
lods
cwde
jo
add
sbb
(bad)
sbb
jne
bswap
jnp
sbb
fistp
xchg
jmp
mov
xor
std
lds
pop
mov
xor
push
xchg
and
ds
sbb
add
popf
mov
pop
cmp
cmp
cmps
sub
ja
xor
in
lahf
data16
xchg
fdivr
push
mov
test
or
jg
mov
hlt
rcl
mov
fsubr
lock
repz
lock
sar
into
sbb
jo
mov
or
adc
jl
lods
mov
or
dec
jle
iret
inc
dec
nop
mov
cmps
pusha
inc
jl
inc
aad
fwait
jg
dec
pop
jecxz
pop
mov
push
cli
dec
outs
dec
cmc
sub
jns
xor
push
xchg
cmp
xchg
ins
inc
retf
test
push
stos
lods
pop
ins
sub
jecxz
jo
adc
scas
jmp
adc
push
iret
aam
(bad)
mov
dec
outs
pop
ins
(bad)
adc
and
xor
in
imul
fcomp
xor
dec
add
iret
cmps
leave
cmp
pop
ja
dec
adc
mov
dec
add
dec
popa
frstor
adc
enter
or
xchg
iret
outs
pop
push
pusha
inc
out
hlt
lods
xchg
(bad)
es
pop
mov
jnp
dec
mov
cmp
pop
jge
cli
ficomp
xor
jmp
sahf
lods
enter
fidiv
popa
mov
(bad)
mov
fistp
sbb
cdq
sar
xchg
xor
push
sahf
enter
loop
sar
ror
dec
xlat
xchg
add
xlat
in
sti
and
xchg
imul
popa
sub
(bad)
out
loop
(bad)
and
mov
pop
xchg
inc
and
mov
xor
data16
ins
inc
retf
add
stos
xchg
lds
sub
test
mov
sbb
test
add
mov
mov
xor
push
jge
mov
repz
scas
in
(bad)
cli
add
xor
test
pop
jg
retf
loop
in
pop
fpatan
push
adc
test
jno
xchg
and
mov
jl
or
pop
retf
cmps
push
sub
push
or
enter
cmp
inc
das
jae
aad
scas
mov
fs
ficomp
push
mov
aad
les
cli
jmp
cmps
jbe
push
jecxz
pop
push
mov
adc
imul
test
jg
mov
scas
mov
and
and
jbe
adc
cmps
push
(bad)
in
in
mov
inc
xchg
je
and
push
cmp
fisttp
call
icebp
pop
mov
retf
xor
push
push
outs
mov
movs
sbb
inc
and
xchg
setns
adc
js
shr
sub
mov
xor
push
pop
or
and
dec
outs
test
ds
shl
aas
sbb
mov
lock
adc
shr
stos
mov
or
pop
xchg
sbb
jo
pop
shr
inc
mov
push
push
(bad)
fdivr
inc
imul
sub
add
test
or
ret
imul
jge
gs
xchg
or
loope
jecxz
out
and
dec
push
jg
or
push
hlt
xor
adc
push
ins
mov
cmp
xor
mov
mov
test
sub
ins
adc
mov
xlat
inc
inc
sbb
or
jne
lea
push
inc
sbb
push
jecxz
scas
ins
or
mov
adc
fcmovne
add
pop
aaa
lock
mov
pop
in
fiadd
cmp
jno
push
xchg
jae
add
xchg
sub
sbb
std
popa
add
mov
and
outs
sub
xchg
fstp
mov
imul
std
pop
les
into
cmc
pop
test
repnz
mov
lds
cmp
cmp
jle
xchg
adc
aam
pop
rcr
mov
cmp
adc
pushf
mov
xchg
and
push
xchg
nop
sar
mov
data16
neg
std
cld
iret
or
xchg
dec
ja
mov
aas
sub
and
inc
std
sbb
mov
and
push
push
dec
mov
mov
add
inc
jbe
jmp
sub
clc
mov
xor
jbe
(bad)
sub
lods
mov
xchg
inc
fs
fdivr
pop
aam
aaa
dec
jmp
inc
test
outs
xor
retf
mov
fstp
add
sub
and
push
sbb
cmp
mov
push
pop
lea
dec
inc
retf
pop
jbe
and
cmp
push
ins
inc
push
add
hlt
jl
or
adc
mov
pushf
adc
xlat
ins
stos
cmp
lds
fisub
stos
xchg
push
mov
les
sub
jne
xchg
xor
ss
ror
(bad)
adc
cmp
mov
xchg
pop
mov
jns
call
pop
or
add
(bad)
mov
push
mov
hlt
push
call
mov
sub
cdq
and
daa
pop
int
sbb
cdq
or
pop
test
daa
and
fstp
arpl
fdivr
xchg
sbb
push
outs
cwde
add
iret
fbstp
pop
jmp
add
add
data16
(bad)
mov
push
out
test
inc
loopne
sar
mov
xor
push
sub
push
aaa
int3
xor
pop
popf
int3
pop
(bad)
sub
(bad)
xor
jmp
xor
cmp
inc
sub
or
lock
push
pop
cmp
jns
and
jne
mov
repz
push
mov
out
into
pop
mov
push
mov
add
pop
jl
lock
(bad)
in
xchg
dec
scas
mov
cmc
inc
add
rol
out
into
pop
mov
sub
pop
adc
and
xor
(bad)
jmp
les
mov
dec
movs
mov
int
fnstsw
jl
mov
pusha
cmp
fadd
stc
shl
jecxz
pop
sbb
stos
test
int3
nop
mov
mov
xor
dec
aam
xchg
jmp
sub
dec
out
pop
shl
(bad)
shl
cmps
pop
pop
xchg
ficom
or
inc
dec
inc
mov
addr16
push
movs
sub
push
sub
jmp
mov
sbb
and
hlt
sbb
cmps
push
stc
(bad)
in
xchg
sub
push
or
repz
shr
ins
and
adc
adc
bound
sub
(bad)
aas
jbe
inc
fld
mov
xor
imul
push
and
ins
mov
ffreep
dec
jge
jg
pop
vmwrite
cmp
das
jne
(bad)
xor
sub
mov
sahf
std
pop
xor
pop
and
js
cmp
aaa
xchg
retf
add
ins
dec
ins
retf
mov
push
inc
add
cmp
pushf
mov
sbb
scas
daa
push
ss
inc
and
mov
das
scas
push
jno
dec
call
xlat
push
out
lea
cmp
cmp
or
push
pop
popf
retf
mov
inc
dec
daa
popa
dec
hlt
pop
cmp
sahf
or
mov
cmp
jo
imul
mov
mov
ins
jno
imul
push
add
inc
adc
data16
cmp
xchg
cld
pop
int
test
js
(bad)
popf
out
adc
aas
ins
in
inc
(bad)
fstp
mov
sahf
leave
xchg
jg
and
repnz
push
rcr
push
jb
jp
ja
jo
(bad)
das
(bad)
in
mov
lods
daa
rcr
jns
pop
retf
jmp
setp
xchg
mov
dec
fs
inc
xor
push
test
dec
aas
je
fs
mov
push
retf
mov
xor
out
xor
inc
or
aaa
mov
sar
and
sbb
cmp
jo
loop
adc
repnz
xchg
cwde
imul
shl
call
adc
xor
aas
test
test
sub
inc
cmove
std
lea
hlt
popa
inc
jb
ins
loope
cmp
mov
sbb
ss
in
pop
and
ror
cmp
in
fidiv
sub
push
jecxz
test
adc
stos
arpl
jo
fadd
adc
inc
adc
(bad)
icebp
adc
cmps
ins
leave
pop
bsf
fistp
ret
dec
gs
fsub
js
jno
and
cmc
pop
shl
fucomip
pop
cmp
test
dec
and
push
push
and
test
pop
fwait
clc
call
ror
cmp
jnp
pop
shl
mov
dec
repnz
push
mov
jecxz
pop
xchg
add
(bad)
cmp
xchg
in
push
out
and
adc
loopne
mov
and
and
ss
pop
mov
ja
add
pop
dec
sub
push
jb
push
mov
mov
test
call
dec
cmps
hlt
ds
xchg
xchg
into
popa
add
jb
xor
inc
int
retf
(bad)
rol
out
int3
rcl
fild
aad
movs
mov
imul
and
dec
into
ins
out
stos
fsubr
or
mov
mov
jbe
int
mov
movs
call
jo
sahf
shr
push
into
outs
test
fidiv
or
ret
fwait
push
jns
push
pushf
mov
sahf
jb
xor
adc
pop
adc
popa
mov
mov
fwait
test
fnstenv
fild
cmp
fmul
push
lds
sar
dec
fwait
pop
scas
pop
out
rcl
nop
fsubr
daa
retf
ds
in
jle
enter
fisubr
inc
ins
dec
push
mov
dec
xor
dec
jmp
cmp
push
jae
outs
loop
xchg
xchg
scas
push
add
out
fwait
mov
xor
stc
or
and
jg
std
enter
bound
and
in
pop
lahf
mov
pop
(bad)
jno
xchg
mov
fisub
mov
aad
stos
inc
push
inc
mov
sbb
call
pop
cmp
idiv
cld
(bad)
fst
repnz
dec
dec
xchg
inc
test
cdq
cli
mov
stos
stos
push
std
inc
adc
jmp
(bad)
scas
sub
mov
push
daa
cs
inc
les
or
xchg
out
push
ret
cmp
mov
test
popa
int3
pop
enter
je
arpl
jmp
loope
hlt
jle
ror
add
dec
outs
xor
in
xor
add
cs
sbb
mov
sar
int
stos
int3
repz
ss
cdq
ss
clc
add
test
sbb
mov
cmp
ins
fld
jecxz
and
lods
pop
xchg
pushf
add
cmovo
cmp
stos
sub
ret
stos
push
cmp
ret
adc
inc
dec
out
test
rol
pop
shl
dec
cld
or
cmp
call
add
inc
aam
sahf
jnp
xchg
push
imul
xor
js
div
adc
jmp
mov
jne
jnp
ins
sbb
fistp
fsub
lds
mov
leave
jae
xchg
jo
int
jle
sub
mov
stos
dec
out
xor
sub
pop
mov
xchg
clc
shr
jne
jmp
cmp
movs
mov
push
lods
(bad)
fdivr
pop
pop
(bad)
loop
call
jmp
fld
xor
cs
mov
cwde
push
cmp
fstp
adc
(bad)
sar
or
mov
mov
rcr
mov
ror
sti
sbb
jle
sub
je
sub
cmc
je
push
fucomip
out
dec
fwait
movs
jecxz
and
and
std
fldcw
or
sub
cmp
inc
in
fld
push
adc
imul
inc
pop
fs
mov
mov
or
sar
cmps
mov
mov
add
nop
mov
je
sbb
rcr
popf
push
xchg
xor
loopne
jge
das
(bad)
push
ins
cmp
push
inc
inc
in
gs
inc
add
xchg
xchg
jmp
sub
arpl
cwde
pop
dec
adc
sbb
jg
fcmovu
cmp
and
jmp
cmp
fld
int3
xor
xchg
push
cdq
add
mov
sbb
sahf
pop
into
ret
xchg
adc
xchg
lahf
lahf
leave
xor
dec
and
popa
jg
scas
mov
into
jne
ret
addr16
movs
jmp
and
mov
lahf
sub
and
and
or
arpl
mov
fidivr
adc
div
xor
std
jl
push
test
stos
(bad)
call
xor
cli
fcom
pusha
cmps
and
sub
stc
sbb
jg
sub
or
lods
enter
mov
push
cmp
mov
(bad)
adc
sub
xchg
ins
cmp
mul
xor
mov
mov
push
cmp
cmc
leave
push
sub
pop
jae
xchg
xchg
outs
mov
test
adc
stos
jmp
(bad)
movs
add
adc
out
xchg
cs
cmp
pop
movs
into
jg
fs
xor
pop
mov
sbb
xchg
jno
inc
clts
into
push
out
fucomip
jne
mov
mov
fdiv
pop
cmc
loop
jmp
and
les
test
inc
xor
mov
add
dec
pop
loopne
mov
icebp
mov
es
fwait
jp
xor
xor
cmps
ja
add
(bad)
xchg
loopne
push
sbb
out
ins
leave
sub
mov
mov
sub
cmps
cmp
pop
sub
and
sar
add
push
dec
leave
push
in
or
push
cdq
xor
xor
and
mov
pop
lea
test
cmp
es
pop
pop
in
loopne
jecxz
fcmovbe
hlt
idiv
mov
jp
in
jbe
xchg
pop
mov
inc
shl
sar
fmul
fisttp
jge
(bad)
ss
ret
(bad)
mov
icebp
enter
in
repz
sub
lock
jne
pop
inc
ror
out
test
mov
and
and
mov
lds
mov
push
jecxz
xor
test
inc
jns
inc
retf
dec
adc
add
adc
dec
aaa
mov
pinsrw
inc
xchg
mov
lods
in
mov
push
dec
shl
add
shl
imul
lods
hlt
adc
push
std
inc
xchg
cmp
mov
nop
push
rcl
(bad)
sbb
jmp
jnp
inc
stos
test
out
popf
int3
jle
jl
gs
mov
out
sahf
push
inc
xchg
movs
pop
mov
mov
cwde
data16
add
mov
imul
push
sub
dec
xchg
stc
pop
jne
xchg
xchg
xchg
leave
call
test
add
mov
pusha
adc
push
fidivr
mov
rcr
inc
gs
ja
mov
icebp
cli
cmps
mov
in
aad
pop
jmp
stos
(bad)
push
push
mov
and
jmp
stos
mov
push
adc
jmp
cmp
outs
mov
sahf
fwait
mov
idiv
shl
push
mov
out
jae
adc
or
add
ret
sbb
dec
cmp
dec
mov
mov
push
sub
mov
xor
cmp
sub
stc
mov
or
pop
dec
xchg
push
outs
mov
jecxz
cwde
retf
pop
nop
jae
lods
inc
loopne
popf
arpl
shl
adc
lds
xor
push
jl
fs
or
inc
push
push
mov
sbb
sahf
out
mov
cld
sar
test
pop
add
sub
(bad)
and
xor
stos
es
ror
icebp
lahf
inc
xor
mov
pop
push
rcl
imul
adc
push
mov
stos
ficomp
jnp
push
pop
adc
pop
cwde
mov
xor
out
sub
push
mov
or
push
mov
test
scas
sahf
adc
retf
mov
(bad)
aad
jb
popa
clc
hlt
sti
pop
outs
and
and
pop
add
fsubr
add
mov
pop
inc
xchg
push
mov
jnp
out
xor
rol
(bad)
xor
mov
retf
rcl
inc
xor
pop
repz
adc
popa
push
addr16
inc
in
xchg
jbe
popa
lahf
aad
mov
shl
out
lods
data16
dec
push
out
dec
in
js
sbb
dec
mov
mov
adc
mov
loopne
xchg
bound
outs
mov
lahf
ds
mov
mov
pop
(bad)
retf
into
scas
jnp
mov
sbb
outs
mov
pop
mov
sbb
adc
mov
outs
hlt
or
push
test
sbb
fucomi
arpl
mov
sbb
jb
mov
inc
push
mov
jno
add
sbb
fcmovnbe
pushf
mov
mov
stos
inc
cs
adc
aas
ror
(bad)
test
mov
in
stc
pop
in
push
jg
iret
call
lea
mov
arpl
lea
mov
jno
and
mov
jl
adc
mov
adc
dec
jg
das
xchg
push
dec
jmp
sub
xlat
jmp
pop
mov
ss
sar
xchg
cmp
mov
sub
popf
push
add
cmps
data16
push
pop
jecxz
push
jns
in
dec
mov
xchg
mov
out
gs
rcl
xor
dec
push
xchg
pop
iret
stos
mov
test
dec
inc
(bad)
sub
loop
sub
shl
aam
dec
mov
pop
loopne
add
adc
aas
push
sub
nop
sbb
cmp
pop
xchg
jmp
mov
cmp
les
sbb
cmp
pop
fwait
in
push
fisubr
pop
or
and
nop
pop
leave
or
popf
mov
jae
sub
les
pop
jno
and
sub
mov
push
rol
add
bound
push
and
sub
jp
retf
jne
loopne
sub
cld
lods
sbb
mov
int3
call
and
push
sar
sahf
jmp
icebp
fsub
mov
fs
sbb
shl
pop
sar
mov
gs
or
loope
pop
pop
xor
cmp
fcomp
test
ret
inc
push
sub
aam
int
jnp
push
sbb
dec
setg
push
or
mov
push
dec
mov
cmp
scas
(bad)
inc
push
hlt
push
movs
mov
xor
xchg
jno
sbb
sub
fcom
mov
outs
jp
mov
arpl
clc
shr
leave
(bad)
popf
xor
xchg
(bad)
xor
sbb
jmp
pop
in
cmp
dec
xor
pop
jl
sub
mov
mov
xchg
inc
lock
lea
sar
std
push
enter
pop
or
cmp
cmp
bound
imul
stos
test
data16
pop
cwde
jecxz
adc
push
stc
push
sbb
dec
mov
cmps
mov
mov
pop
ds
ror
xor
sub
ins
repz
daa
sbb
int3
lods
cwde
lods
in
int3
lahf
and
add
inc
(bad)
cld
imul
fisubr
lahf
sbb
shr
or
fwait
test
push
iret
(bad)
dec
and
add
stos
pop
int
sub
rcl
mov
pop
out
cmp
mov
jno
pop
(bad)
les
or
adc
xchg
sub
stc
jb
loopne
aas
jnp
pushf
hlt
mov
shl
ds
arpl
(bad)
add
jnp
out
cld
out
sub
not
retf
nop
sub
call
pusha
jnp
xchg
inc
fwait
lock
mov
loope
sbb
ds
unpcklps
cdq
cmc
xchg
cmc
lods
and
dec
xchg
push
retf
fsub
xchg
or
mov
pushf
(bad)
push
xor
jmp
pop
adc
jns
out
loopne
and
cmc
retf
xor
jno
in
jecxz
imul
jge
push
push
(bad)
ins
loope
cmp
icebp
lock
out
sbb
and
xchg
sti
(bad)
(bad)
cmp
test
xor
xor
push
sbb
inc
icebp
dec
pop
and
sbb
dec
mov
and
push
pop
mov
sub
adc
and
inc
jno
xchg
xchg
pop
and
outs
xchg
or
pop
(bad)
iret
dec
test
mov
adc
push
or
rcr
sub
loop
scas
js
rol
and
mov
push
mov
and
imul
or
xchg
jns
mov
aas
add
cld
rol
xchg
mov
dec
pushf
lods
dec
ss
sub
cwde
xor
popf
ja
repz
cld
cmp
lahf
out
sbb
inc
not
or
dec
mov
inc
(bad)
hlt
mov
inc
das
(bad)
cld
push
inc
sub
xchg
push
ret
push
xchg
popa
mov
arpl
xor
ret
sub
test
jo
ins
dec
push
mov
pop
mov
cdq
cmc
cs
test
inc
mov
cmp
push
les
xlat
out
pop
or
pause
pop
ds
lock
dec
loopne
fs
stc
lahf
out
and
dec
inc
ds
data16
push
xor
push
(bad)
(bad)
mov
push
mov
out
push
loope
xchg
scas
add
mov
jo
sbb
bound
and
dec
mov
xchg
outs
xor
(bad)
js
hlt
retf
arpl
test
mov
cwde
add
push
jmp
push
push
xchg
jmp
int3
mov
lods
push
lock
leave
je
inc
inc
mov
push
js
sbb
enter
adc
or
aam
pop
cmp
mov
fist
pop
mov
mov
adc
adc
cmps
dec
jno
lock
pop
cli
test
pop
mov
xor
adc
repnz
and
fsubr
(bad)
stos
arpl
imul
enter
ficom
sar
hlt
(bad)
push
and
sti
inc
mov
stc
xlat
or
mov
js
bound
xor
jb
lahf
js
leave
xor
cdq
or
out
jge
ins
test
xchg
movs
push
pop
mov
xchg
lds
outs
adc
pop
pop
jne
movs
adc
fwait
mov
xchg
pop
inc
repnz
pop
gs
mov
bound
movs
add
in
aas
jecxz
test
adc
inc
pop
dec
cmp
jg
lods
dec
or
dec
add
(bad)
xor
test
xor
or
or
xor
imul
pop
clc
not
or
in
mov
push
pop
mov
jmp
or
ins
jge
mov
push
cmp
(bad)
test
ror
sbb
mov
push
or
into
mov
dec
retf
es
stos
cmp
jg
in
dec
mov
sar
test
outs
sub
mov
push
(bad)
dec
addr16
sbb
ds
loope
or
mov
arpl
fs
sar
test
out
pop
pop
ficom
shl
scas
inc
cmp
cld
(bad)
dec
test
push
xchg
(bad)
fs
outs
inc
and
fadd
pushf
dec
adc
imul
mov
sar
out
pop
repz
ror
xchg
pusha
xchg
mov
rol
pop
lahf
(bad)
leave
arpl
(bad)
ret
int
icebp
cmc
add
scas
popa
pop
retf
xchg
test
push
leave
imul
loopne
xchg
xchg
pusha
or
jp
push
mov
(bad)
test
test
mov
xchg
mov
loopne
pop
imul
and
or
or
mov
sub
rcr
mov
cmps
stc
and
inc
sub
mov
push
pop
inc
adc
pop
scas
shr
addr16
pop
pop
out
pop
pusha
cld
retf
sti
cmp
arpl
or
xor
push
push
add
and
daa
xor
ret
xor
aam
and
mov
add
pop
dec
dec
sahf
hlt
mov
adc
sbb
pusha
adc
sahf
jg
shr
sti
mov
ds
leave
imul
sub
fmul
and
cs
outs
jbe
je
jge
fs
lahf
dec
enter
pushf
or
jae
or
or
cmp
into
mov
pop
sub
cmp
mov
jmp
daa
push
les
outs
and
cli
popa
jmp
mov
movs
(bad)
sub
xchg
ficom
and
dec
dec
inc
xor
data16
push
and
int
adc
push
and
icebp
add
mov
mov
sub
sahf
mov
xchg
(bad)
mov
test
mov
push
scas
inc
fwait
aas
pop
and
hlt
pop
js
cmps
pushf
cli
and
sahf
clc
(bad)
retf
nop
mov
xchg
and
sub
adc
adc
movs
aas
popf
cmps
ror
mov
add
gs
dec
imul
and
(bad)
frstor
push
shld
sbb
js
inc
sar
adc
mov
popa
out
popa
adc
inc
daa
mov
and
jecxz
pop
cdq
jns
xchg
sub
or
mov
xchg
into
mov
and
bound
sub
stos
and
pop
add
inc
xchg
push
fld
cmp
adc
pop
fwait
and
mov
fcmovnb
adc
inc
ins
push
cwde
dec
pop
mov
or
and
mov
scas
or
or
push
cli
push
or
jmp
xchg
and
mov
test
pop
ins
inc
mov
mov
mov
xchg
xchg
leave
inc
fwait
dec
sahf
popa
fsubr
out
mov
in
in
or
push
and
mov
ret
lahf
push
and
xor
cmp
pop
leave
(bad)
fucomi
pop
pop
cdq
pushf
or
push
scas
cmp
fwait
in
mov
push
jmp
and
mov
cmps
mov
lahf
mov
sbb
fdiv
mov
loopne
push
jno
iret
add
cmp
and
jmp
pop
scas
int3
loope
sub
push
retfw
int3
daa
pop
iret
and
mov
push
mov
outs
jp
jmp
xor
push
add
and
pop
cmp
xchg
(bad)
shr
add
leave
jp
inc
pop
mov
dec
into
push
jb
add
jns
mov
fst
shl
jno
pop
popf
ds
push
or
scas
mov
(bad)
je
sar
ds
sub
pop
les
add
cmp
push
jmp
xor
leave
dec
mov
add
out
jnp
scas
adc
pop
jecxz
inc
imul
arpl
std
jg
xchg
(bad)
in
push
inc
lea
cmps
cmps
cli
jmp
out
test
sub
jns
cld
mov
fwait
and
outs
dec
lock
call
xchg
repz
pop
push
mov
or
xor
iret
iret
or
cld
and
jecxz
popa
(bad)
mov
pop
jnp
enter
and
dec
jne
sti
pop
jl
mov
cmp
jae
jg
cli
jnp
sub
jo
test
mov
leave
rdmsr
mov
mov
ins
or
cmp
shl
add
inc
rol
jb
ror
stc
nop
icebp
cdq
shl
scas
mov
shl
arpl
xchg
pop
sti
cmp
mov
pop
xor
lea
add
in
mov
dec
sbb
xchg
jl
int3
not
jbe
xchg
outs
add
fidiv
push
call
mov
(bad)
pop
mov
ins
lock
dec
ret
sub
mov
sbb
test
retf
retf
xchg
je
jge
jbe
mov
push
pop
push
push
adc
xchg
stos
add
(bad)
xchg
xchg
xchg
test
(bad)
mov
sub
ret
pandn
sbb
jbe
outs
lods
sbb
xchg
lods
mov
add
add
cmp
movs
cmc
mov
test
jmp
jmp
bound
jnp
xchg
pop
mov
mov
add
daa
mov
xchg
jmp
dec
arpl
daa
mov
nop
movs
adc
loop
stos
jl
jmp
xchg
add
sub
or
aad
dec
push
cmp
mov
xchg
rcr
dec
movs
movs
push
imul
test
push
mov
xchg
faddp
mov
pop
imul
fldenv
or
adc
and
jmp
mov
nop
or
cmp
gs
sbb
jge
sti
sahf
mov
mov
push
pop
cmps
dec
pop
sbb
pop
nop
xchg
push
test
iret
out
adc
mov
sub
mov
xchg
fwait
ins
xchg
adc
fmul
int
aas
das
retf
lea
jg
icebp
(bad)
push
shl
mov
(bad)
inc
push
xor
(bad)
lods
mov
das
jg
es
lahf
mov
push
imul
pop
add
int3
push
dec
mov
stos
rcpps
jae
stc
push
ficom
pop
fnsave
jecxz
pop
xchg
ror
loopne
and
jecxz
shl
push
test
(bad)
scas
sbb
out
sub
jns
hlt
mov
idiv
retf
push
push
movs
jecxz
daa
xchg
push
or
sub
sar
mov
jne
ss
(bad)
imul
cs
int
inc
and
scas
add
push
add
and
shr
or
imul
pushf
mov
jne
(bad)
aas
sti
in
ficomp
jns
std
adc
popf
mov
inc
mov
ja
mov
mov
scas
sub
cli
lods
sbb
shr
sub
and
loop
pushf
dec
dec
jp
cmp
or
pop
lods
jne
and
pusha
in
cmp
mov
xor
sub
leave
xchg
push
add
arpl
and
jmp
jnp
loope
inc
adc
push
xor
push
nop
jae
adc
cwde
in
mov
inc
arpl
loop
adc
xchg
ficomp
pcmpeqd
pushf
xor
mov
sti
push
scas
pop
jp
dec
mov
add
lds
dec
cmps
mov
dec
mov
nop
outs
ins
sub
cwde
lds
push
gs
mov
pop
sbb
mov
sub
and
rol
sub
adc
test
dec
mov
mov
cmp
adc
inc
nop
test
jnp
cmps
int3
aas
dec
xor
out
div
aam
(bad)
and
lock
jmp
mov
loopne
sti
outs
std
inc
xchg
pusha
sahf
push
pop
arpl
jle
sub
add
cmps
cmp
jp
hlt
cmp
aaa
sbb
sbb
in
add
sbb
ret
or
loope
stc
or
in
cdq
stc
mov
retf
test
clc
lock
call
cmp
mov
jge
sbb
pop
add
add
ss
sbb
ins
cmp
jmp
mov
rol
cmps
or
sbb
out
inc
retf
mov
xor
call
xchg
lods
jmp
lock
in
jl
or
in
push
push
in
cmps
in
cmc
adc
mov
cmps
mov
shl
not
jno
repnz
and
push
lods
pop
adc
pop
data16
fwait
jns
push
aam
xchg
cwde
nop
ret
dec
sbb
fsub
xor
mov
sahf
movs
sub
pusha
inc
pusha
es
xor
push
mov
sub
aaa
cmp
mov
add
icebp
stos
fwait
(bad)
mov
fimul
mov
sub
imul
inc
and
pop
ficomp
test
or
jp
aaa
pop
push
pop
add
xchg
mov
mov
pushf
(bad)
mov
xor
(bad)
pop
(bad)
adc
mov
sub
mov
ss
das
sub
cmps
fistp
les
add
inc
fs
xor
aas
add
pop
mov
mov
mov
shl
movs
lods
xchg
jle
ss
sbb
iret
scas
push
add
push
jle
scas
dec
cwde
inc
push
ins
pop
scas
xchg
sub
xor
sahf
jno
pop
mov
jne
xchg
xor
sub
aaa
sub
inc
mov
retf
outs
push
push
xchg
out
xor
xchg
push
mov
lods
jle
(bad)
out
loopne
cld
test
inc
xchg
mov
out
ins
mov
call
shl
hlt
les
xor
dec
movs
imul
dec
and
ins
sbb
pushf
into
std
and
jmp
dec
je
mov
and
xchg
imul
rol
mul
pop
pop
ror
xor
xor
push
mov
test
(bad)
mov
cli
jne
cmp
xchg
pop
out
add
ja
add
shl
lock
pop
(bad)
dec
sub
add
push
outs
or
mov
loopne
repz
je
mov
mov
outs
(bad)
push
outs
movs
mov
(bad)
mov
popa
(bad)
imul
xlat
out
mov
sub
(bad)
into
imul
jno
jne
leave
out
enter
and
adc
outs
outs
push
jo
sub
ins
adc
sbb
dec
cwde
mov
nop
or
(bad)
(bad)
push
jl
mov
pop
test
dec
js
sbb
aam
(bad)
sbb
pushf
test
pop
sbb
cmps
aam
(bad)
mov
inc
lods
mov
mov
ins
jns
pop
mov
sti
inc
jecxz
dec
jmp
gs
hlt
nop
pop
mov
sub
imul
dec
mov
ret
push
cmp
sar
lods
and
inc
jb
imul
int3
and
cmp
pop
aaa
adc
mov
xchg
bound
fnstenv
aad
and
iret
mov
jne
jge
xchg
nop
dec
pop
lods
push
adc
inc
ds
pushf
pop
aam
ja
cmp
jo
push
xchg
cmc
fnstcw
inc
ret
sub
cmp
jbe
sub
xchg
fist
in
sbb
push
add
xlat
xor
sub
dec
pop
icebp
imul
aas
mov
imul
and
out
jp
clc
dec
scas
mov
scas
loope
fild
leave
sbb
mov
xchg
mov
cmp
std
and
jmp
inc
add
dec
adc
js
fsubr
jl
xchg
shr
dec
pushf
jp
(bad)
call
push
sub
mov
xchg
fcomp
jle
jbe
xor
and
call
sub
and
pop
das
and
adc
adc
cld
dec
repnz
adc
int
gs
dec
imul
xchg
push
dec
xchg
jle
mov
je
xor
arpl
jmp
xor
loop
ins
lds
xchg
add
mov
cmp
loope
movs
jmp
enter
mov
dec
sub
jae
fst
sub
into
sti
cdq
inc
sbb
pop
aaa
cmp
push
and
push
jmp
iret
sub
test
xchg
(bad)
in
iret
xor
ins
or
xchg
cwde
in
jl
inc
jb
cmp
data16
pop
retf
inc
inc
out
pop
sub
outs
jge
in
sbb
jno
add
dec
(bad)
mov
and
mov
push
or
and
mov
cmp
jbe
push
mov
mov
push
or
int
pop
xor
cwde
jno
and
out
sbb
cmp
mov
icebp
test
mov
mov
jns
mov
scas
cmc
ffree
sub
cld
fistp
push
(bad)
call
fild
mov
adc
jp
xchg
pop
shr
pop
pop
or
sahf
imul
std
inc
cmps
jns
dec
in
pop
mov
lods
mov
stos
ja
mov
mov
xor
pop
mov
cmps
push
sub
clc
popf
and
es
or
mov
in
fistp
outs
mov
(bad)
pop
bswap
xor
and
jbe
pop
pop
cmp
test
mov
icebp
and
adc
fbld
test
add
js
jmp
mov
cmps
and
std
add
xor
test
xchg
loop
mov
icebp
popa
cwde
inc
test
rcl
mov
cmp
mov
adc
mov
dec
icebp
xor
jecxz
push
adc
sub
xchg
adc
inc
push
cdq
test
shr
sti
daa
sbb
leave
mov
push
or
pop
or
ja
mov
repz
push
popa
jecxz
xchg
mov
cmc
dec
outs
into
fisub
inc
mov
cli
(bad)
jle
out
xchg
jle
dec
inc
sbb
ja
or
mov
repnz
call
lea
mov
(bad)
mov
pop
jno
movs
mov
jmp
scas
inc
jmp
cmp
aad
jp
inc
movs
cmps
jge
xchg
xor
into
jmp
lds
ja
adc
ret
jno
jbe
mov
scas
dec
jnp
jg
dec
xchg
aaa
jbe
cs
out
mov
jg
and
and
fcomp
(bad)
out
xchg
(bad)
in
test
mov
iret
mov
push
jae
clc
dec
pop
retf
(bad)
not
movs
test
je
mov
leave
sbb
sbb
mov
fcom
repz
sub
les
fisubr
icebp
fisttp
or
(bad)
stc
int3
inc
jmp
add
mov
and
and
fisub
fnsave
std
dec
js
jl
movs
test
lds
cmp
in
mov
rol
xlat
push
and
(bad)
shl
jg
cwde
sub
lahf
push
xor
iret
and
loope
(bad)
shl
icebp
lea
movs
jae
and
jno
movs
sbb
icebp
je
xchg
cmp
pop
ins
je
pop
ret
in
mov
adc
jae
loope
loopne
lock
scas
into
cmc
lahf
jno
aam
out
push
enter
mov
pop
mov
retf
inc
stc
mov
push
jnp
xchg
xchg
add
imul
dec
mov
call
(bad)
loope
push
mov
movs
and
test
int
push
iret
push
mov
mov
pop
mov
stc
mov
add
adc
sti
ret
pop
sub
call
add
outs
mov
mov
and
ins
ja
xchg
popf
(bad)
lods
mov
es
jne
stc
push
popf
nop
ds
repnz
or
neg
icebp
fsub
xchg
xor
cmp
imul
jecxz
sahf
cmp
mov
rcl
cmp
rcr
mov
add
pop
mov
aad
(bad)
mov
hlt
adc
push
(bad)
iret
pop
inc
call
push
aaa
adc
push
xlat
dec
pop
loopne
fwait
dec
inc
pop
dec
int3
call
mov
arpl
pushf
push
enter
into
add
fs
bswap
add
pop
sbb
je
xchg
sbb
dec
leave
add
mov
push
or
push
iret
lock
mov
std
js
mov
pop
les
push
hlt
popf
lods
mov
out
mov
ins
dec
ror
test
loop
fcom
repz
mov
push
sahf
xor
sub
mov
ins
or
ss
shr
mov
inc
call
dec
(bad)
sub
dec
shl
pusha
aaa
fidivr
inc
leave
fwait
leave
xor
enter
(bad)
jmp
add
cmp
xchg
in
xchg
adc
sub
mov
sbb
cmc
lods
jle
cmp
mov
loope
xor
pop
imul
pop
xor
(bad)
jae
cld
dec
test
inc
cmps
cmps
sbb
mov
popf
and
push
or
ds
mov
and
les
enter
mov
xchg
cli
mov
jmp
popa
pop
cs
or
sbb
stos
add
push
jae
iret
xchg
adc
stc
dec
sbb
push
pop
(bad)
stc
add
or
shl
nop
push
sub
cmp
mov
jmp
ss
or
sub
scas
pop
adc
adc
xchg
pop
sub
leave
inc
sbb
mul
push
(bad)
les
(bad)
add
lea
movs
jae
jl
or
mov
movs
add
dec
jl
mov
sbb
dec
mov
mov
addr16
(bad)
cmps
mov
inc
xchg
or
sub
fdivr
cwde
ins
xchg
xor
fld
mov
push
cmc
scas
(bad)
ret
and
enter
mov
push
push
ins
jecxz
sub
movs
and
xor
and
pop
xchg
test
add
in
jecxz
inc
loope
pop
fild
xchg
mov
fwait
xor
data16
test
div
sub
pop
int3
rcl
retf
jg
iret
cmp
ins
mov
sbb
ds
pop
push
sti
das
rol
jbe
jmp
xchg
fs
xchg
mov
pop
inc
or
das
sub
in
jge
call
jbe
jle
sbb
push
jno
or
or
out
jmp
and
inc
cli
pop
test
les
xchg
aad
adc
dec
cvtsi2sd
xor
and
xchg
pop
iret
add
inc
dec
imul
test
mov
enter
(bad)
out
mov
fsub
aas
cld
lea
sub
sub
in
pop
shl
stos
(bad)
fistp
inc
push
adc
push
mov
sbb
imul
pushf
shr
clc
fistp
inc
or
out
jbe
mov
and
stc
mov
shl
or
sbb
or
lods
stos
jo
sub
rcl
not
outs
jecxz
ficomp
cmp
retf
or
inc
sub
dec
out
test
dec
push
jo
dec
sar
xchg
pop
pop
mov
cmp
cmp
bound
popf
(bad)
test
jmp
xor
push
aad
xchg
dec
jae
push
jne
scas
push
cmp
mov
jnp
xor
jp
std
dec
sub
xchg
cwde
push
arpl
cld
push
ins
fiadd
ret
(bad)
out
cmp
pop
xor
(bad)
iret
retf
cmp
ins
cli
push
adc
iret
fs
jge
imul
sbb
stos
cmp
adc
test
dec
fsubp
pusha
or
fcomp
jl
or
mov
jmp
pop
cmp
loop
pop
mov
(bad)
nop
xchg
iret
test
aas
adc
lds
add
in
sti
fild
cmp
xchg
jo
xlat
(bad)
mov
stos
jmp
mov
inc
pusha
cdq
retf
cmp
out
xor
fistp
sub
xor
imul
out
(bad)
popf
mov
div
jecxz
mov
sub
setg
dec
cmp
fistp
dec
or
out
jb
imul
inc
and
or
int
test
jl
iret
in
pop
out
pop
push
mov
mov
cs
adc
cld
cld
or
push
sti
or
stc
mov
mov
jp
ficomp
mov
movs
sub
adc
sbb
mov
not
scas
mov
mov
sub
xchg
in
test
mov
(bad)
loop
les
stos
mov
mov
test
cmc
ss
rcr
pop
and
into
pop
into
bound
pop
mov
dec
dec
lea
push
xor
test
bound
inc
dec
aas
jae
and
sub
sbb
jne
jmp
dec
fidiv
pop
inc
mov
mov
jne
es
ds
inc
push
mov
aas
cmps
sbb
sbb
push
inc
xchg
cmps
aas
sub
dec
call
imul
or
xchg
cmp
(bad)
ficom
xor
mov
(bad)
mov
and
lods
sbb
cmp
les
retf
xchg
mov
push
in
push
call
adc
sbb
(bad)
sub
xchg
adc
mov
out
jno
mov
aas
sub
imul
(bad)
mov
jns
mov
scas
inc
inc
and
dec
push
sahf
dec
push
cwde
xchg
retf
ins
(bad)
dec
(bad)
fsub
hlt
inc
(bad)
jmp
in
in
pop
bound
xor
sbb
fcom
fidivr
jl
out
std
dec
(bad)
mov
and
push
or
retf
and
sub
fstp
(bad)
or
pop
out
out
mov
xor
mov
outs
mov
in
inc
ins
cmp
pop
dec
xchg
fwait
inc
push
mov
jne
stc
sbb
ds
adc
cmc
fwait
push
adc
jecxz
cli
pop
inc
loopne
cmc
fisubr
stc
out
xchg
dec
fist
cmp
neg
mov
shl
lahf
adc
cwde
imul
add
mov
xor
enter
mov
or
xchg
sti
mov
fcmovb
fild
aad
cli
xchg
push
jae
xor
or
sub
call
lds
adc
sar
in
in
add
popa
sub
sbb
add
fsub
jl
cmps
cdq
daa
adc
push
into
push
nop
lods
data16
mov
es
out
cmps
dec
or
mov
fnstcw
repnz
test
pop
test
pop
ret
mov
pop
imul
(bad)
ret
mov
movs
jb
jnp
sbb
jne
or
jbe
inc
daa
fcom
sub
sysenter
jp
mov
mov
(bad)
pop
mov
xor
sar
push
into
out
bound
xchg
or
pop
sbb
mov
xor
jg
fisttp
in
es
leave
jae
icebp
(bad)
pop
test
aam
aas
pop
ins
mov
clc
mov
dec
jne
out
cmp
rol
outs
imul
xor
out
loope
jecxz
std
sub
xchg
inc
xchg
shl
inc
cmp
dec
std
inc
adc
rol
pop
jbe
adc
loop
and
mov
retf
xor
fld
je
sub
loopne
bound
inc
jne
adc
jno
test
sub
cmp
shl
lea
xor
scas
or
adc
xor
jbe
mov
xlat
inc
push
xor
xor
push
adc
repz
cmc
xchg
repz
xlat
mov
jg
ffreep
(bad)
iret
iret
pop
cmp
xor
mov
push
push
push
les
mov
pop
push
int
test
stos
outs
bnd
ins
adc
jae
test
push
lea
jmp
sbb
out
push
inc
and
std
xor
sbb
cmp
fdivr
cmps
push
mov
jo
call
jae
adc
or
sub
jle
lods
nop
lds
hlt
sbb
je
adc
ins
jne
sub
pop
mov
mov
or
jnp
add
mov
jnp
or
pop
xchg
inc
stos
in
pushf
pusha
hlt
mov
js
adc
adc
cdq
inc
out
lods
sub
jae
stos
cmc
jae
scas
mov
lods
arpl
fld
push
fs
lds
sub
daa
adc
jl
mov
xor
sbb
div
cld
add
sar
mov
sub
clc
sub
and
jae
push
xor
inc
push
lahf
lea
mov
iret
dec
sbb
jnp
add
popw
xchg
loopne
mov
mov
xor
stos
pop
lahf
jp
add
idiv
ret
ins
cli
or
das
push
sbb
pop
loop
mov
mov
into
push
pop
jg
scas
icebp
mov
xchg
mov
js
loope
pop
push
fcmovbe
jp
jp
(bad)
leave
cmp
adc
sti
scas
std
daa
mov
sbb
out
je
ficomp
aad
add
xchg
add
add
inc
test
inc
retf
ret
loopne
loop
jnp
fldenv
stos
fld
scas
push
popf
and
pop
adc
rcr
jae
mov
mov
out
call
sub
enter
inc
(bad)
out
xor
clc
xlat
push
jmp
adc
into
test
sub
popa
ret
or
cmp
leave
mov
test
mov
retf
push
(bad)
enter
out
xor
cdq
test
es
ror
jmp
mov
mov
(bad)
cld
pusha
sbb
sub
icebp
dec
xlat
aas
sub
and
sbb
pusha
psubusb
aas
adc
into
pop
out
dec
mov
inc
ins
das
mov
cmc
out
push
in
aad
ins
es
enter
jbe
push
(bad)
aad
inc
adc
clc
xlat
xchg
pop
cmp
cmc
aad
outs
jno
mov
sub
stc
int
add
cmp
stc
lods
out
js
cs
aad
mov
xor
jbe
pop
pop
ret
mov
test
ror
add
adc
mov
sbb
in
aad
js
xlat
push
mov
push
jmp
lahf
pusha
lds
jp
pop
(bad)
xor
xchg
push
sbb
das
mov
xor
dec
imul
push
mov
pop
addr16
xor
dec
pop
dec
pop
add
inc
xchg
mov
pushf
test
lods
mov
call
ds
iret
mov
not
inc
out
arpl
mov
adc
dec
fdiv
xchg
sbb
mov
aas
in
dec
and
adc
cmps
push
(bad)
push
je
int3
xor
imul
shr
xchg
shr
cvtps2pd
sbb
fiadd
in
jae
out
mov
push
(bad)
or
mov
or
dec
push
aad
loopne
mov
int3
jbe
iret
adc
mov
pop
(bad)
jo
or
bound
and
aam
push
xchg
or
daa
mov
add
push
pop
fld
add
in
ret
add
xor
push
out
sub
ja
daa
popa
fcomp
popf
xchg
cmp
jne
inc
jb
out
cwde
cmp
pop
lea
das
sub
or
rol
jmp
stos
adc
add
add
mov
push
ins
nop
sub
imul
jle
push
pop
sub
in
(bad)
cmp
(bad)
inc
fistp
movlps
retf
int
jmp
lock
mov
cmps
dec
push
dec
dec
sar
fistp
dec
inc
mov
pop
or
bound
loop
int3
int
sar
mov
fdiv
pop
sub
adc
test
pop
rcr
ds
pop
xor
mov
je
pop
ss
nop
dec
jecxz
dec
pop
cmp
test
cmps
out
jg
xchg
sbb
out
icebp
fcomp
fbld
clc
and
lods
xor
or
(bad)
fimul
imul
cli
sbb
push
enter
ret
int
jno
or
push
ret
mov
outs
loopne
enter
cmp
sbb
aam
fmul
push
pop
pop
aaa
dec
imul
fdivr
es
js
ja
mov
(bad)
sti
and
hlt
ins
mov
inc
scas
mov
rcr
push
push
sub
ja
mov
loope
mov
loopne
mov
data16
addr16
sub
adc
scas
xor
adc
je
aam
sbb
or
xor
mov
xor
stos
jne
sub
mov
shl
mov
popa
shr
add
mov
dec
dec
rcl
jnp
pop
sahf
repz
in
cmp
mov
fld
or
jl
in
out
hlt
pop
dec
cmp
jae
inc
test
inc
out
js
mov
movs
in
adc
iret
cdq
outs
or
push
sub
imul
fcmovb
(bad)
cmp
sti
enter
cmp
out
and
shl
arpl
sbb
push
je
int
loopne
sbb
inc
lahf
mov
fdiv
rcr
outs
pop
add
stos
add
gs
std
adc
out
fidivr
xchg
iret
jecxz
pop
bound
add
jmp
out
std
iret
inc
or
sbb
lods
inc
hlt
(bad)
mov
(bad)
aam
test
mov
dec
fsincos
and
push
sub
and
fidiv
or
int3
mov
cmp
push
adc
add
push
mov
repnz
cmp
sub
fs
mov
jmp
inc
ins
cmp
stc
test
inc
jno
and
jno
push
push
test
dec
adc
inc
mov
inc
mov
mov
sti
je
ds
push
arpl
and
lahf
fidiv
sub
js
mov
call
sbb
test
cwde
outs
sbb
sub
imul
sbb
dec
cmps
jge
adc
scas
pop
inc
inc
iret
cmp
push
mov
mov
add
jp
push
daa
repz
dec
loopne
addr16
add
inc
mov
and
(bad)
push
pusha
pop
mov
inc
out
aad
daa
dec
jg
outs
or
jo
jo
push
lahf
sub
add
sub
sub
ficomp
lock
or
jb
inc
cmp
push
bound
mov
inc
cmp
mov
and
outs
fst
gs
mov
stos
jmp
and
leave
xchg
inc
xor
lock
jl
sub
enter
imul
or
jmp
mov
aam
lods
fbstp
adc
nop
xlat
outs
std
imul
daa
popf
scas
inc
push
push
int
ret
nop
xor
pusha
xor
jbe
pop
xchg
scas
and
(bad)
push
sub
adc
push
test
fild
movlps
sbb
lea
mov
shl
(bad)
push
push
into
sbb
lea
ja
loopne
inc
dec
pop
dec
sbb
fs
aaa
in
push
xchg
jmp
dec
push
mov
pop
in
dec
fs
test
mov
mov
push
arpl
xchg
sub
xor
lds
add
test
jecxz
or
out
mov
(bad)
push
sbb
dec
xchg
xor
or
jge
pushf
lock
popa
test
enter
mov
loopne
fidivr
mov
cmc
retf
fldcw
lds
fsincos
mov
in
loopne
in
lds
sbb
sbb
sahf
cmp
mov
es
arpl
add
push
cmps
inc
stos
xchg
test
xchg
dec
sub
sub
jns
hlt
inc
cmp
pop
sbb
mov
and
xchg
outs
or
jns
push
mov
cs
sar
mov
call
stos
fdiv
sbb
test
xchg
minps
iret
fnstenv
jnp
sahf
push
dec
pop
lock
ret
xchg
cmp
fistp
mov
(bad)
cmovg
es
daa
jbe
loope
ror
lahf
imul
in
pop
inc
shl
sbb
mov
test
clc
push
xor
xchg
or
adc
xchg
in
lds
push
aam
push
loopne
in
jnp
out
mov
lahf
push
push
adc
cmp
xchg
mov
push
enter
jo
sub
xlat
jle
jns
push
ins
jo
scas
adc
arpl
push
mov
xor
jns
or
in
test
(bad)
dec
add
aam
mov
xchg
push
jmp
leave
xchg
repz
mov
inc
adc
push
adc
cmps
call
jmp
xchg
leave
bound
mov
repz
clc
add
mov
cwde
mov
cmp
add
cmps
pushf
mov
sub
sub
dec
add
cmp
jae
ror
and
mov
adc
push
or
setne
ror
test
test
(bad)
sbb
(bad)
nop
int3
out
test
out
in
add
adc
repnz
scas
scas
jbe
popf
mov
(bad)
jne
imul
dec
or
xchg
cmps
mov
push
lahf
jb
(bad)
jle
add
bound
xchg
mov
aas
fwait
dec
inc
cli
stos
popa
lods
inc
repz
retf
xchg
mov
rol
pushf
pop
nop
mov
pop
jmp
sahf
adc
ret
add
mov
cmp
lock
adc
jp
jge
(bad)
pop
clc
push
or
movs
sub
daa
mul
adc
movs
cmp
arpl
aaa
inc
bswap
sbb
adc
pop
and
xchg
js
pop
push
repz
aaa
ins
fiadd
adc
(bad)
fstp
push
add
jg
mov
or
dec
mov
mov
shr
sbb
add
pop
add
inc
xor
nop
mov
adc
fs
push
adc
adc
sbb
mov
or
push
(bad)
push
das
push
rol
mov
add
outs
in
lods
and
(bad)
push
out
stc
loopne
fild
xchg
jmp
sub
add
xchg
(bad)
inc
in
in
xor
xchg
or
bound
cmp
out
out
ror
or
repz
cmp
xchg
xchg
mov
dec
sbb
ins
pushf
adc
xchg
pusha
cmp
sar
aaa
dec
sbb
in
js
adc
jmp
xchg
jae
cld
stos
or
dec
fld
xchg
cmps
cmc
jecxz
dec
dec
movs
or
inc
push
nop
mov
mov
into
adc
cmp
inc
and
ins
push
jo
int
fistp
out
call
mov
push
xchg
call
dec
add
mov
or
daa
ins
adc
movs
cmp
pop
cs
bound
jecxz
add
xchg
sbb
in
xor
dec
inc
retf
sbb
pop
inc
and
or
xchg
shr
repnz
ror
xchg
push
nop
aas
scas
cmp
pop
sub
aad
ret
or
mov
cwde
loop
xchg
sub
cmps
cmc
adc
lock
and
arpl
(bad)
(bad)
cmp
xor
ret
push
xchg
call
dec
mov
inc
push
aaa
inc
fisub
sub
sbb
mov
rcr
jmp
add
pop
data16
mov
int
data16
pushw
repz
fdiv
(bad)
loopne
sbb
(bad)
je
jo
mov
push
jmp
xor
push
aam
cmp
int
pop
lea
add
or
shr
inc
ja
int3
stc
and
cdq
sbb
call
jl
adc
jmp
add
aad
retf
sbb
fucomi
loopne
cld
out
popa
push
jae
xor
fsubr
cmp
mov
stc
mov
sub
jle
ins
jge
retf
push
pushf
xor
mov
add
push
repz
dec
mov
(bad)
(bad)
jle
cmps
pushf
sbb
stos
jge
cld
sub
sbb
xlat
and
sbb
and
push
cmp
mov
sbb
in
leave
xor
push
daa
xor
arpl
repnz
xchg
inc
add
lea
mov
pop
mov
rcl
lds
sub
pop
jmp
repz
mov
lds
jp
stos
or
xchg
mov
xor
mov
leave
add
test
das
push
pop
dec
pop
arpl
sub
sub
out
pop
sbb
cmps
mov
ret
or
cwde
pusha
and
jp
rcl
inc
dec
je
stc
mov
scas
xor
shl
xor
fdivr
(bad)
jecxz
pop
jb
cmp
aad
addr16
inc
aaa
cli
xchg
push
idiv
dec
mov
clc
jo
xor
in
mov
sbb
mov
adc
ror
push
adc
xor
add
test
sar
and
add
sub
ret
pop
fistp
push
ret
fist
(bad)
sub
jmp
(bad)
pushf
xchg
je
inc
je
bound
(bad)
hlt
inc
cmps
or
dec
or
add
lods
mov
call
fsubr
sub
xor
(bad)
pop
dec
out
das
dec
jg
and
pop
gs
popf
mov
call
cmp
mov
xchg
stos
js
not
fwait
push
(bad)
das
mov
cmp
mov
and
cs
mov
enter
sbb
fwait
jge
and
sub
mov
inc
les
xchg
bound
nop
test
stos
jnp
fs
lds
out
push
xchg
test
cli
jnp
inc
pop
(bad)
cmp
mov
loopne
inc
add
(bad)
cld
cld
stos
sub
aas
or
leave
sub
out
fwait
mov
pusha
dec
or
fimul
and
jb
dec
mov
mov
lea
test
imul
and
or
cdq
ficomp
movs
and
adc
jge
xlat
cmp
push
ret
jo
dec
cwde
fcom
ret
out
mov
rcl
mov
push
movs
xchg
mov
and
jno
mov
das
mov
mov
ret
lds
push
push
mov
inc
retf
xchg
inc
adc
shr
mov
mov
rcr
jns
(bad)
push
and
std
lods
mov
fs
mov
and
sbb
push
mov
mov
call
es
or
sbb
pop
retf
jge
inc
clc
mov
not
lahf
xchg
mov
inc
fdivr
jle
cmps
test
pusha
push
cmp
or
in
arpl
add
inc
mov
sbb
xchg
sub
mov
and
out
cmp
adc
add
in
and
(bad)
in
aad
sbb
fs
call
out
(bad)
sbb
inc
cmc
retf
es
jne
imul
outs
sub
dec
xchg
mov
pusha
push
mov
push
js
fdivr
leave
dec
and
or
mov
add
aaa
rcr
sbb
push
or
adc
mov
mov
call
outs
push
dec
sbb
xchg
inc
push
in
mov
jns
jb
dec
jecxz
ror
push
mov
lahf
out
(bad)
int
ror
lods
mov
hlt
mov
mov
fstp
loop
icebp
ss
xchg
stc
inc
outs
ds
jns
imul
call
mov
out
xlat
sar
jno
enter
icebp
inc
jle
jno
pop
cs
sbb
or
adc
daa
xor
(bad)
mov
(bad)
jne
sar
sbb
xchg
pop
xlat
push
dec
inc
pop
jge
mov
gs
mov
out
stos
cld
inc
lahf
jge
(bad)
cmp
jbe
mov
xchg
or
cwde
hlt
jmp
jp
push
mov
int3
rcr
dec
rcl
aad
dec
popfw
icebp
repnz
push
pop
loop
pop
or
sbb
enter
es
jmp
int
inc
scas
xchg
in
cmp
scas
sbb
ss
jle
cmp
dec
das
jge
push
jl
enter
sti
cmp
rol
mov
or
mov
sub
retf
adc
mov
mov
movs
dec
int
lahf
cmps
dec
sub
pop
mul
cmp
mov
push
fist
mov
lock
sub
sbb
cmp
sbb
push
js
fisub
xlat
aam
add
out
xor
jbe
push
sbb
repz
mov
aas
push
popa
dec
pop
inc
cmp
mov
sahf
sub
jmp
movs
jnp
dec
sbb
dec
xchg
into
adc
pop
aad
mov
dec
or
xor
fbld
jnp
adc
sbb
call
pop
mov
mov
mov
mov
mov
push
xchg
or
sti
(bad)
mov
aam
jmp
adc
(bad)
sar
xlat
fld1
mov
mov
cmp
pop
iret
push
xchg
dec
stos
mov
sbb
test
or
fcomp
stos
jno
jne
dec
xlat
cmp
cmps
cmp
dec
xlat
adc
aam
and
aaa
test
sar
push
hlt
bound
data16
pop
mov
or
cwde
scas
push
dec
pop
mov
push
inc
lods
jae
(bad)
xchg
mov
adc
(bad)
jb
inc
fcom
inc
jl
inc
movs
jnp
sub
xchg
mov
or
and
inc
out
fwait
cld
fst
(bad)
loopne
shl
cli
push
test
std
ja
popf
mov
ins
add
ror
shl
leave
pusha
ins
push
call
mov
stc
inc
pop
pop
imul
jno
mov
cmp
enter
pop
dec
jne
jg
sbb
and
xchg
push
dec
leave
jle
adc
ffreep
cmps
lods
mov
mov
sbb
jp
jmp
ds
adc
cmps
gs
arpl
rcl
jae
lahf
or
pop
dec
pop
std
in
outs
mov
xchg
imul
or
rol
sbb
aaa
adc
aaa
xchg
push
out
ja
sub
or
xor
push
int3
xchg
popf
ja
loope
mov
fiadd
nop
mov
sbb
xchg
inc
cs
clc
jge
cmp
sar
ins
aaa
leave
fimul
arpl
ins
xchg
adc
jne
in
rcr
sub
fadd
mov
jge
test
dec
in
ja
dec
jp
add
inc
push
fwait
retf
shr
jne
pushf
mov
inc
add
imul
icebp
inc
push
(bad)
mov
lea
jb
out
and
push
xor
push
push
and
ins
lds
fcmovbe
jno
pop
dec
in
(bad)
sbb
call
or
or
(bad)
mov
dec
stos
jmp
icebp
and
arpl
dec
push
and
mov
xor
sti
pop
out
imul
or
(bad)
fidivr
call
add
es
xor
mov
inc
and
mov
push
push
icebp
clc
jl
mov
or
popf
cmp
add
stos
aad
mov
retf
jnp
fimul
rol
addr16
cmp
rol
inc
rcl
mov
xor
jo
iret
push
adc
bound
adc
fidivr
fs
mov
xchg
cmp
and
adc
xchg
lahf
or
sbb
sbb
repz
cmp
stos
(bad)
popa
cmc
mov
xor
add
sub
loopne
int
adc
inc
xor
outs
pop
jbe
pop
scas
and
enter
inc
sbb
and
mov
xchg
cli
push
push
shl
mov
leave
push
in
and
mov
jno
add
out
loope
or
cmp
or
push
jmp
scas
cmp
rcl
std
pop
in
fisubr
lahf
enter
pop
xchg
leave
jle
xlat
test
dec
cmp
cmp
(bad)
lods
(bad)
mov
loop
sub
bound
push
dec
arpl
cld
jl
ins
cdq
mov
push
je
outs
icebp
(bad)
sahf
sub
sub
(bad)
mov
out
xchg
rol
mov
fist
(bad)
ror
pop
cwde
fistp
ret
rcr
mov
push
mov
add
ret
lahf
cwde
aas
xor
and
sbb
adc
(bad)
or
call
test
mov
test
je
pusha
pusha
mov
hlt
mov
sbb
test
cmp
xor
sti
lahf
imul
aam
fbld
in
data16
fst
(bad)
in
jg
iret
add
mov
pop
or
hlt
(bad)
pushf
mov
cmps
mov
sub
shl
cmps
xor
lds
addr16
sub
mov
xor
leave
jmp
rcl
push
lock
imul
test
mov
mov
xlat
dec
sub
push
imul
ds
cmp
jne
call
adc
scas
jne
(bad)
(bad)
out
in
push
lds
pop
dec
cmp
pop
push
in
dec
(bad)
fwait
(bad)
js
jecxz
xchg
lods
jo
sbb
jae
jnp
in
jb
icebp
push
sub
dec
sar
pop
adc
xor
jl
inc
adc
cmp
(bad)
jbe
pop
add
jecxz
leave
sub
push
pop
xchg
repnz
cmp
push
ins
aam
test
sub
mov
sub
pushf
icebp
inc
jmp
xor
and
mov
and
xchg
out
jl
sub
test
push
stos
ret
fdivr
mov
push
ss
sbb
adc
mov
retf
push
jb
outs
jae
fxtract
adc
iret
jae
imul
add
movs
test
cmps
neg
adc
inc
adc
pop
in
jno
sbb
aaa
and
push
mov
xchg
add
cmp
out
nop
cmp
lock
jecxz
add
sbb
clc
pop
mov
pop
xlat
mov
aam
pop
xchg
pop
push
outs
fld
xor
addr16
xchg
mov
fs
inc
je
les
jne
ret
inc
add
imul
loopne
scas
dec
mov
enter
or
mov
dec
xor
mov
and
and
mov
mov
outs
jae
mov
cmp
cmp
sub
sub
nop
stos
mov
std
mov
sub
xchg
and
scas
sbb
inc
sbb
popf
sub
sbb
lock
sub
inc
sbb
lods
imul
mov
(bad)
mov
adc
push
mov
push
adc
mov
mov
movs
inc
jne
nop
jp
neg
mov
pop
cmp
mov
and
mov
retf
cmp
mov
mov
sbb
out
xor
jle
mov
add
push
jp
adc
mov
leave
aam
and
add
jmp
cmp
enter
inc
or
adc
popf
movs
jl
(bad)
popa
sub
cmps
cmp
inc
or
xchg
pushf
sti
aas
sti
mov
dec
(bad)
xor
jbe
rol
sti
push
movs
test
and
push
mov
sub
mov
imul
dec
mov
shl
cmps
lods
in
dec
push
test
int
(bad)
jnp
clc
aaa
push
cmp
mov
sbb
cmp
test
ins
mov
add
dec
inc
in
out
outs
ss
call
mov
sub
lea
mov
retf
loope
adc
(bad)
jnp
pushf
loope
add
lea
jl
rcl
mov
(bad)
pop
jp
add
xlat
sbb
(bad)
ins
test
jb
aas
mov
pop
mov
mov
lea
sti
push
jge
fs
lea
pop
push
pop
test
(bad)
retf
jb
jo
pop
fimul
fwait
mov
or
xchg
cmps
mov
cmp
add
sbb
cwde
dec
xchg
add
hlt
cli
jg
push
mov
mov
movs
xor
in
mov
xchg
call
lods
into
cmc
or
add
jp
sub
cwde
sub
jmp
icebp
rep
inc
mov
jle
std
mov
sbb
les
arpl
sub
ja
xchg
scas
cmp
xchg
(bad)
push
xor
in
and
retf
ja
add
int
sbb
sahf
(bad)
mov
gs
pop
in
add
outs
mov
bound
mov
dec
jl
aaa
mov
aam
aad
sbb
lods
add
imul
mov
dec
inc
out
sub
add
(bad)
scas
imul
or
ret
push
int
cmp
in
pop
ins
loop
movs
sub
outs
stos
mov
sbb
fild
cmp
lods
xor
xchg
mov
mov
retf
ds
xchg
fisubr
xor
pop
adc
inc
xor
pushf
aas
inc
xchg
icebp
stc
in
jge
or
imul
xchg
addr16
inc
pusha
or
sbb
imul
push
mov
dec
in
rcl
leave
or
xchg
push
jmp
mov
adc
ret
icebp
call
and
jne
and
or
dec
add
push
leave
xchg
ret
cmp
push
pop
pop
cmp
lods
div
mov
mov
pop
and
(bad)
jge
push
and
dec
stc
pop
dec
fimul
clc
mov
lahf
loopne
lea
out
xor
sti
push
retf
icebp
jns
push
lods
cmp
ret
push
imul
mov
das
ja
adc
loope
js
movs
aam
ret
push
retf
push
cdq
cmp
mov
mov
popa
and
dec
outs
fcomi
pop
and
and
and
ficomp
movs
repnz
push
mov
std
xlat
pushf
add
js
hlt
or
imul
addr16
push
mov
dec
xor
in
mov
pop
test
or
ret
sub
pop
pop
clc
pop
cdq
adc
pop
stos
cmp
xor
out
cmp
imul
retf
push
sub
jns
adc
(bad)
pop
inc
lods
pop
lea
pop
lahf
push
dec
cdq
lods
sbb
mov
jecxz
push
xchg
(bad)
jae
lahf
(bad)
adc
aam
test
pop
and
mov
push
xlat
pop
dec
jnp
push
in
xchg
movs
outs
stc
retf
shl
ss
xor
add
pop
fwait
sub
lods
push
dec
mov
stc
dec
xchg
cdq
adc
stc
stc
lock
movs
jl
adc
xchg
dec
push
mov
mov
loopne
sbb
movs
xchg
mov
sub
mov
retf
add
and
inc
or
or
mov
int3
jle
add
xor
sub
out
jno
imul
or
pop
mov
and
adc
das
mov
mov
fwait
jl
push
xchg
movs
sub
retf
imul
fldcw
sbb
cmps
test
cs
in
mov
jl
cld
adc
xchg
fcom
retf
xor
add
fnstenv
push
mov
mov
push
push
inc
mov
inc
std
int
xchg
ret
dec
inc
sbb
jmp
mov
cmp
add
cmps
mov
push
or
daa
scas
jge
mov
push
push
mov
mov
pop
divps
cdq
sub
and
stos
neg
sbb
in
lods
call
cmp
jecxz
rol
xchg
call
inc
icebp
popf
movs
xchg
push
inc
cmp
cmps
cmp
or
call
je
add
pop
fs
repz
or
sbb
lds
lea
fs
push
and
call
js
loop
push
and
pop
hlt
dec
shl
jge
outs
adc
push
or
in
xlat
sbb
cmp
pop
jecxz
fadd
adc
push
xlat
xchg
pop
js
stos
jecxz
rol
sub
xchg
adc
ret
mov
xchg
xor
fisttp
dec
fisttp
jo
(bad)
dec
add
mov
mov
and
push
mov
dec
xor
sbb
fdivr
cmp
push
xchg
int
pop
mov
xchg
and
dec
add
xlat
pop
cmp
jl
inc
cld
div
fcmovnb
sub
xchg
jl
icebp
xchg
lods
mov
mov
lods
pop
int3
sub
pop
aam
stos
adc
mov
cdq
pop
cmps
jae
jmp
ja
nop
mov
dec
out
rcl
fcomip
mov
bound
inc
repnz
mov
or
push
popa
aaa
xlat
pop
pop
inc
jo
sbb
dec
out
jmp
xor
adc
cmp
mov
loope
repnz
mov
fs
aad
stos
xchg
fidivr
lods
sti
les
jnp
js
add
std
push
in
mov
mov
fmul
mov
sbb
aaa
push
adc
or
in
sub
sub
ins
xor
aaa
test
sbb
sbb
pusha
fdiv
xor
add
push
jp
(bad)
xlat
xchg
stos
adc
lock
sahf
loope
xchg
dec
in
cmp
xor
arpl
dec
fwait
bnd
lahf
movs
enter
std
popf
mov
in
jbe
cmp
mov
test
push
cmp
mov
pop
mov
repnz
enter
jb
mov
cwde
adc
daa
aad
mov
adc
dec
mov
lock
mov
fld
js
lods
cmp
or
lods
cmp
enter
push
test
mov
repz
pop
push
je
stc
loopne
shl
adc
and
call
dec
add
dec
mov
std
adc
popa
xor
mov
ret
lea
retf
mov
or
mov
stos
call
dec
mov
pop
call
das
retf
ds
clc
jo
jnp
jnp
stc
out
xor
aad
dec
outs
movs
dec
mov
hlt
sbb
inc
test
xchg
fnsave
clc
or
fisub
mov
xchg
icebp
lea
cli
out
lods
lods
clc
mov
in
dec
retf
xor
gs
add
sbb
fistp
dec
stos
and
sbb
cdq
(bad)
les
inc
add
mov
mov
adc
fneni(8087
inc
ins
push
mov
jae
xor
xchg
sub
push
push
jg
or
jne
retf
dec
(bad)
lods
adc
sub
ja
in
retf
mov
and
or
sub
adc
int3
loope
sub
push
fwait
adc
cwde
(bad)
fldenv
sub
shr
xor
inc
inc
in
call
or
movs
cmps
add
mov
sub
xor
frstor
(bad)
int
add
sbb
mov
lahf
icebp
imul
fwait
push
jb
fbld
mov
popa
jbe
lahf
xchg
pusha
xor
push
jmp
sbb
mov
sysenter
mov
xor
es
inc
and
mov
mov
jmp
icebp
push
loopne
sbb
xchg
mov
call
xchg
aas
int3
ss
jg
pop
adc
ss
dec
pop
fcomp
pushf
inc
aaa
lock
push
dec
test
test
or
in
cmp
jb
bound
xchg
xchg
lahf
je
cs
imul
xor
loopne
jo
jmp
div
stc
xchg
mov
cmp
mov
imul
jb
(bad)
(bad)
push
mov
pop
popa
push
mov
shl
test
and
pop
repz
stos
ins
(bad)
and
cld
jb
mov
cmp
push
(bad)
jp
xchg
xchg
jmp
add
jnp
mov
mov
mov
dec
or
xchg
(bad)
fcom
xchg
sub
add
inc
push
mov
jle
dec
ret
mov
into
addr16
int3
sbb
fsubr
ficom
jmp
imul
push
aas
xchg
xor
sub
pop
add
jns
js
inc
ss
or
inc
and
ss
scas
popf
clc
ss
mov
sub
imul
rcl
cs
xchg
xor
aad
mov
sub
dec
data16
xor
std
add
(bad)
std
push
cmp
loope
push
xchg
pop
push
pushf
xor
je
mov
retf
dec
cmp
xor
or
pop
dec
sahf
sub
push
adc
push
loope
push
sti
arpl
dec
call
dec
adc
fcomi
or
mov
inc
in
pushf
push
sar
jle
jb
jns
ficomp
ins
fisttp
and
call
div
pop
imul
mov
sub
jg
sbb
popa
inc
jne
je
pop
xchg
and
add
imul
(bad)
sub
and
pop
or
and
cmps
out
loopne
sub
jmp
ja
iret
add
add
pop
imul
retf
in
call
sbb
pop
rol
repnz
dec
inc
and
pop
adc
push
jns
popa
es
retf
push
mov
ins
adc
outs
sbb
mov
bound
pop
in
jo
push
jmp
push
mov
mov
jmp
xlat
cmp
sbb
lds
xlat
mov
iret
jnp
inc
pop
test
inc
loopne
and
inc
std
mov
mov
pop
cs
(bad)
fbld
sub
shl
in
mov
mov
js
xchg
icebp
fld
cmp
out
test
jno
jmp
bound
jmp
stos
fistp
ret
gs
mov
(bad)
pop
mov
adc
push
in
sub
data16
add
cdq
jb
(bad)
xchg
aas
clc
xchg
xor
pop
xchg
inc
xchg
sub
je
and
adc
mov
xor
jmp
adc
int3
shl
mov
mov
test
cmp
inc
int3
sub
sub
and
(bad)
bound
ret
aaa
jecxz
movs
jp
cwde
ds
neg
stc
push
inc
jmp
(bad)
call
dec
sub
pop
jo
out
xor
add
loop
mov
in
pop
mov
nop
mov
add
push
ja
retf
aad
mov
push
inc
adc
adc
mov
idiv
aam
jp
pop
in
xor
xlat
pop
mov
add
cmp
cmps
cmp
fdecstp
add
adc
add
inc
push
pop
imul
and
cmp
scas
ficom
mov
xchg
mov
dec
out
idiv
hlt
imul
std
push
fs
jmp
pop
bound
int3
aad
or
jmp
add
inc
jg
or
cmp
fidivr
adc
test
cmps
fimul
xor
bound
jmp
or
inc
and
imul
sub
jmp
lods
adc
jmp
mov
jg
adc
mov
adc
sahf
cli
inc
xchg
pop
or
cmp
jle
inc
mov
sbb
mov
xor
mov
dec
push
xlat
or
mov
mov
jg
cmc
test
ror
iret
pop
and
mov
pop
call
bound
pop
adc
inc
and
retf
push
lock
mov
push
pop
sub
push
sbb
std
dec
xor
xchg
addr16
pop
mov
push
(bad)
dec
or
sbb
cs
jmp
or
push
xlat
test
cmp
dec
aam
lock
in
and
adc
lds
mov
in
pop
lock
mov
out
jge
mov
mov
add
in
add
push
sahf
lea
ss
mov
loope
mov
xchg
sub
stos
cld
mov
mov
(bad)
jl
sbb
lock
inc
sar
xor
mov
mov
mov
clc
les
inc
and
jp
repnz
(bad)
dec
cs
mov
jmp
mov
pop
ja
hlt
repz
push
and
into
xchg
std
sahf
out
(bad)
mov
je
or
pop
inc
inc
inc
dec
sbb
jns
dec
add
or
retf
push
and
mov
mov
or
adc
iret
fistp
add
and
push
loopne
jl
pop
out
pop
scas
in
fyl2xp1
scas
bound
fwait
pop
outs
pop
mov
adc
sub
push
ds
cmp
sar
outs
scas
xlat
stos
fist
or
mov
test
mov
cmp
hlt
fistp
dec
(bad)
lock
adc
xchg
xchg
jecxz
inc
scas
shl
call
fnstcw
push
jmp
das
sbb
into
fnstsw
call
sbb
in
test
add
js
xchg
mov
sbb
mov
mov
cmp
sbb
sbb
fs
jmp
adc
shl
jmp
pop
not
push
pusha
aaa
outs
lock
push
fnsave
adc
les
mov
stos
xchg
cli
cmp
and
push
clc
movs
cmps
dec
push
push
pop
mov
jb
mov
lock
fcmovne
cmp
sbb
push
pop
mov
lds
std
sbb
je
xchg
rol
(bad)
pop
stos
fld
stc
outs
iret
xor
inc
pop
sbb
push
or
ds
xor
iret
mov
out
mov
cmp
push
fimul
nop
test
pop
inc
lods
add
jno
js
rcl
sbb
push
inc
inc
push
adc
retf
pushf
inc
sub
or
dec
fwait
out
adc
ds
pop
iret
add
or
jl
ror
cmp
ret
outs
shl
iret
test
repz
sub
mov
dec
loopne
gs
in
push
out
push
(bad)
cmp
inc
jg
adc
addr16
cli
push
popf
mov
mov
ins
imul
fucom
add
and
pop
jmp
enter
pop
repnz
aas
das
ins
cmp
dec
dec
jbe
xlat
mov
dec
lods
(bad)
mov
call
leave
test
lds
xchg
out
out
enter
mov
cmp
(bad)
fwait
xchg
sub
out
mov
leave
lds
or
xlat
or
mov
ja
mov
imul
mov
(bad)
jecxz
fdiv
inc
cmp
mov
push
pop
pop
(bad)
jle
mov
push
out
cld
(bad)
hlt
fisub
ins
xchg
dec
pop
mov
xchg
sti
and
gs
retf
push
test
mov
adc
scas
hlt
rcl
outs
jo
pop
push
jp
and
ja
fwait
andnps
fimul
leave
mov
(bad)
out
mov
sbb
jge
test
mov
pop
jmp
aad
popf
add
inc
cmc
xor
leavew
(bad)
std
dec
mov
or
lds
icebp
jns
fist
sbb
sub
ins
cmps
or
jmp
sub
and
sbb
fnstsw
xor
mov
fnstsw
mov
inc
mov
xor
xchg
jg
xchg
(bad)
ins
js
out
pop
fbstp
jmp
sti
xchg
inc
and
cmc
(bad)
adc
inc
or
ret
cmp
lds
cmp
sar
pop
dec
call
xchg
inc
dec
sbb
aaa
(bad)
jmp
mov
ret
push
add
je
es
stc
sub
inc
push
pop
pop
lea
lock
aad
inc
push
add
xor
jg
xor
test
es
mov
imul
outs
cli
fmul
jnp
pop
lds
add
mul
sti
mov
out
dec
inc
fcom
sub
inc
inc
and
xchg
jnp
daa
xor
cmps
inc
call
addr16
cmc
aaa
push
sub
stos
and
ret
xor
in
xor
data16
(bad)
int
add
(bad)
xchg
pop
lea
adc
add
test
fsub
aad
mov
pop
fidiv
daa
arpl
ja
inc
add
jmp
or
adc
pop
movs
push
call
inc
loop
fcmovnb
xchg
xor
je
mov
xlat
mov
sub
inc
shr
adc
xor
loopne
adc
pop
lock
leave
mov
dec
sub
ins
outs
sub
int3
scas
ins
sar
data16
and
or
test
scas
xor
inc
sub
and
ins
ins
or
mov
sbb
mov
arpl
es
cmp
pop
or
icebp
ds
cmp
push
sbb
icebp
inc
pusha
(bad)
mov
je
xchg
lock
jmp
adc
push
out
mov
jne
mov
fidiv
xchg
lock
inc
dec
jns
daa
push
sbb
push
jle
mov
adc
dec
stos
jns
mov
lock
dec
xchg
add
iret
repnz
xchg
xlat
or
inc
cmp
pusha
dec
repnz
aad
sti
(bad)
arpl
sub
popa
xlat
sbb
sub
and
lods
mov
(bad)
loope
(bad)
dec
mov
or
retf
push
add
pop
shr
shl
and
pop
pop
outs
add
in
les
jg
pop
push
and
mov
cmps
jnp
outs
push
jne
xor
jb
add
mov
mov
sbb
push
(bad)
(bad)
cwde
jbe
or
retf
outs
pop
ins
test
inc
fdiv
jns
cwde
dec
push
jo
dec
cdq
and
xor
and
(bad)
sbb
xor
cli
div
cmp
pop
lea
mov
push
not
xchg
sbb
mov
xchg
sub
pop
fmul
xchg
xchg
xchg
aad
push
jmp
mov
jne
jmp
call
sbb
pop
sbb
sbb
bound
in
adc
ror
lahf
daa
retf
fidivr
dec
xchg
inc
loopne
xor
pop
ret
mov
jl
mov
jns
sub
xor
fisub
lods
or
repnz
lahf
mov
in
cmp
cmps
in
jo
(bad)
mov
aam
mov
push
pop
xor
adc
sbb
mov
das
imul
aaa
push
(bad)
ror
or
mov
add
dec
add
xchg
fmul
dec
ret
add
ret
dec
cs
push
push
cmps
cmp
inc
retf
aaa
pop
xlat
dec
test
or
xor
dec
jmp
ror
xlat
bound
push
(bad)
es
dec
push
dec
div
and
lds
aaa
adc
popf
pop
mov
lds
add
push
add
adc
test
dec
call
or
xor
and
xchg
or
sbb
mov
jne
adc
repz
jne
and
(bad)
jmp
inc
jb
ret
das
xchg
mov
add
lsl
imul
adc
pop
jno
outs
iret
test
pop
xor
fucomi
xor
pop
push
or
push
mov
std
int
jo
idiv
mov
inc
xchg
push
imul
xchg
xor
dec
je
jbe
mov
push
push
out
push
int3
mov
int3
sub
ins
mov
fst
sub
sbb
leave
inc
pop
addr16
mov
add
cdq
cs
push
jle
dec
or
push
test
hlt
out
leave
inc
cld
or
mov
mov
jmp
push
mov
jno
inc
fsubr
pop
movs
xchg
ret
fldcw
addr16
add
in
xchg
xchg
retf
ret
inc
icebp
stos
cmp
adc
mov
mov
or
xchg
cmp
addr16
xor
adc
in
scas
cmp
and
in
lods
dec
dec
mov
repz
add
ror
mov
test
int3
add
iret
es
fwait
stos
dec
in
(bad)
xchg
out
sbb
sub
push
xchg
inc
xor
mov
loop
cmps
mov
rcr
sar
xchg
mov
dec
adc
mov
push
dec
and
imul
jne
jmp
mov
pop
pop
jne
mov
sbb
mov
out
mov
aad
xor
ror
in
add
pop
fs
jl
push
lahf
(bad)
jmp
xchg
pushf
je
adc
dec
repz
dec
test
jbe
xor
inc
push
nop
outs
adc
jmp
je
repz
icebp
scas
sub
sub
xchg
mov
aad
cmc
rcr
fwait
inc
(bad)
es
cmp
ds
lods
add
mov
mov
xchg
ds
xchg
cs
in
call
sbb
push
cld
je
lea
push
cmp
arpl
scas
scas
push
ret
das
jle
(bad)
push
jmp
call
sub
mov
and
es
stos
push
mov
sub
mov
cmps
call
jecxz
push
loope
(bad)
int
call
adc
mov
call
adc
imul
jp
pushf
sub
(bad)
mov
ds
(bad)
dec
not
ds
ror
adc
mov
push
sbb
jno
push
das
imul
or
mov
sbb
test
pop
inc
mov
dec
sub
jae
jmp
fwait
xchg
push
sahf
fs
and
and
loope
inc
cmp
push
mov
(bad)
mov
cmps
ins
stc
lahf
push
test
ret
jmp
idiv
addr16
fbstp
in
cmp
jmp
stos
inc
cmp
(bad)
jecxz
jo
inc
xchg
and
xlat
or
pop
fisub
pop
dec
mov
sahf
aam
inc
push
test
push
inc
dec
adc
ror
scas
jle
nop
xor
andps
xor
int
inc
nop
test
enter
mov
enter
js
adc
pop
sbb
aas
adc
push
jmp
call
or
ret
jo
pop
je
pushw
xor
sub
fisttp
aad
cwde
retf
mov
pop
inc
xchg
daa
dec
mov
aam
loopne
pop
scas
or
lods
mov
mov
inc
xchg
ds
pop
inc
push
dec
pushf
or
popf
add
mov
push
jne
and
ret
sub
popa
lods
in
ss
sub
mov
cwde
xor
in
sbb
ins
into
lock
pop
sbb
fcomp
mov
xchg
cwde
hlt
not
adc
sbb
cli
pop
pop
fwait
test
neg
mov
mov
and
push
data16
fidiv
mov
mov
mov
outs
mov
push
mov
push
(bad)
(bad)
arpl
(bad)
mov
sbb
push
xchg
mov
adc
inc
fst
xor
pushf
push
push
in
jns
in
btr
cmp
rcr
or
add
xchg
dec
push
xchg
jge
rcr
push
jnp
dec
sahf
retf
push
add
ficom
pop
and
push
add
cmp
mov
pop
jmp
test
push
test
jnp
pop
out
icebp
mov
imul
dec
mov
pop
(bad)
fmul
xor
or
imul
mul
mov
add
call
jae
mov
mov
or
dec
mov
push
sbb
jge
pop
fwait
iret
inc
mov
ss
into
xchg
fidiv
je
mov
mov
pop
lods
lds
sti
mov
fisubr
sti
inc
push
xor
inc
mov
(bad)
xchg
sbb
mov
jb
jp
cmp
jp
out
pop
aas
retf
scas
adc
test
ds
(bad)
retf
fld
add
mov
retf
cmovge
pushf
std
cmp
pop
or
ins
adc
lods
sbb
push
(bad)
leave
xchg
cmc
das
xor
jnp
mov
mov
test
test
mov
mov
xlat
inc
cmp
(bad)
std
in
xor
inc
jg
lods
pop
sbb
das
dec
ins
test
aad
fstp
imul
in
lods
scas
mov
sbb
xor
pushf
or
xchg
mov
rcl
(bad)
xor
and
sub
jl
stc
jb
test
push
xchg
repz
ins
push
lea
mov
xor
mov
ror
jae
in
std
retf
(bad)
mov
call
fwait
mov
das
cmp
out
push
test
mov
mov
cli
inc
push
sub
and
cmc
cmp
cmp
xchg
cdq
cmp
mov
pop
aas
imul
loop
adc
or
clc
mov
dec
push
fwait
neg
mov
popa
mov
adc
xchg
jae
call
add
scas
out
cmp
into
add
int
inc
adc
cmp
jbe
nop
out
jno
cmps
pusha
scas
mov
outs
retf
adc
cmc
fmul
daa
push
(bad)
dec
daa
mov
jle
arpl
test
mov
imul
sbb
(bad)
es
call
mov
int3
lahf
xchg
ja
sbb
jns
xor
push
sbb
bound
push
inc
mov
xor
push
rol
(bad)
and
mov
mov
gs
xchg
add
(bad)
(bad)
jge
pop
sub
cmp
adc
inc
js
popa
in
jmp
mov
fs
xchg
mov
dec
cmp
out
xchg
add
cli
and
or
sub
test
out
mov
test
mov
mov
mov
xlat
sbb
mov
arpl
cmp
xchg
inc
fadd
mov
js
inc
push
inc
xchg
adc
jns
data16
imul
mov
pop
or
and
(bad)
xor
daa
int
cld
xor
push
dec
stc
sahf
xor
loop
ret
sbb
jo
xor
aad
jg
push
gs
data16
pop
icebp
ds
mov
out
ins
in
test
cmc
rcl
pop
scas
and
push
sub
cmp
push
dec
jns
mov
mov
or
bound
xchg
cld
sbb
push
xchg
xchg
lock
inc
dec
or
jne
mov
hlt
aas
xchg
pop
mov
idiv
icebp
inc
ins
pop
outs
dec
ficom
ss
mov
hlt
test
and
cmp
mul
dec
ret
je
(bad)
cli
adc
out
inc
xor
call
mov
jmp
in
dec
jg
fidivr
mov
imul
mov
xchg
fwait
mov
adc
cmps
sbb
sub
addr16
mov
jbe
push
xlat
pop
(bad)
sub
push
mov
add
jmp
cmp
out
ret
push
mov
out
dec
iret
pop
icebp
xor
test
xor
daa
ficom
mov
lods
mov
shl
or
mov
dec
dec
pop
jb
fcomip
fwait
mov
jmp
cmp
ror
adc
xor
cdq
push
add
xchg
push
mov
mov
in
pop
ja
mov
fdiv
(bad)
mov
adc
and
fld
arpl
inc
(bad)
xchg
movs
fadd
cmp
sahf
dec
jle
pusha
call
pop
dec
mov
and
sbb
int
add
inc
jno
inc
xor
sbb
mov
mov
les
sbb
dec
sahf
ret
mov
sbb
mov
cmp
and
aam
push
mov
add
jmp
jmp
adc
sub
mov
aaa
shl
das
aas
popa
fstp
pop
xchg
icebp
ret
mov
sbb
out
popa
add
(bad)
in
xchg
retf
sbb
call
iret
mov
out
add
xchg
arpl
mov
pushf
sbb
hlt
sbb
or
test
sbb
mov
loope
fild
jb
cmc
inc
dec
jae
mov
mov
rol
push
retf
pop
sub
inc
jge
add
dec
pop
icebp
(bad)
xlat
push
loopne
jp
mov
dec
rol
pop
mov
jmp
sbb
jbe
lahf
sti
mov
xor
cmp
mov
cmp
data16
or
test
sbb
inc
add
cmps
adc
rol
adc
mov
xchg
inc
retf
movs
inc
inc
mov
test
out
fmul
test
addr16
inc
pop
jmp
jmp
imul
popf
test
inc
clc
stos
xchg
fist
popf
push
or
inc
mov
popa
sub
sar
push
ins
lds
pop
ja
or
(bad)
push
(bad)
clc
jmp
mov
popf
add
retf
retf
call
jle
sti
inc
mov
sub
shl
rol
out
iret
sbb
push
jno
xchg
aad
mov
add
call
mov
mov
xor
out
cmps
shr
mov
imul
lods
js
cmps
fwait
jmp
shl
push
xchg
inc
add
pop
pop
lds
loope
adc
(bad)
pop
dec
dec
cmp
jo
repnz
sar
inc
push
addr16
mov
inc
not
test
adc
push
or
adc
out
cmp
je
xchg
stos
out
and
or
and
js
mov
aaa
adc
push
mov
ja
nop
iret
cld
idiv
push
adc
xchg
(bad)
pusha
inc
loop
pop
and
xor
inc
call
lods
pop
and
mov
add
or
mov
dec
jl
push
dec
les
or
adc
xor
cdq
dec
in
out
aas
or
(bad)
mov
sahf
jo
mov
fcom
cmp
arpl
push
pop
std
jae
jp
sub
cli
jp
jle
arpl
push
adc
adc
pop
jnp
lea
cli
fs
mov
cmp
cmp
movs
cmp
and
mov
xor
inc
push
scas
mov
and
pop
lds
fdivr
sbb
add
jge
aam
in
retf
or
lods
or
jl
xchg
mov
mov
push
popa
mov
push
je
mov
(bad)
fld
dec
push
clc
gs
cli
aam
es
push
sbb
xlat
shr
out
sbb
fwait
and
jle
cmp
inc
or
push
jge
pop
xchg
sub
leave
cmp
xchg
push
inc
xchg
jl
push
std
imul
adc
xchg
inc
mov
ret
adc
xor
xor
jo
mov
rol
adc
movs
fidivr
dec
lds
jecxz
mov
(bad)
loope
aas
mov
out
jle
div
and
mov
gs
dec
mov
xchg
mov
inc
push
pusha
xlat
std
sahf
and
and
jmp
cmp
leave
hlt
adc
loopne
loopne
cmp
jnp
mov
in
or
sub
jl
push
dec
pop
jae
inc
cmc
pusha
xchg
xor
stos
mov
adc
lock
adc
test
rcr
cwde
dec
and
enter
jmp
in
add
mov
aas
inc
push
adc
ins
xchg
out
int3
test
adc
jb
and
inc
pop
xor
pop
or
dec
test
fnstcw
sti
push
jg
fld
sahf
mov
ins
push
push
jmp
retf
movs
pop
xchg
adc
je
dec
jmp
or
hlt
mov
imul
lds
je
cmp
xor
sbb
push
icebp
xor
rcr
nop
(bad)
mov
adc
test
sbb
ret
sub
fld
int
outs
add
clc
jbe
comiss
hlt
loop
jmp
add
nop
adc
nop
add
fs
retf
xor
jbe
jl
js
dec
push
into
rcl
or
and
xor
mov
(bad)
(bad)
fisub
cwde
jecxz
xor
fidiv
sub
clc
hlt
push
imul
xlat
cmpxchg
mov
jmp
outs
xchg
out
push
call
dec
out
jge
ja
and
es
pusha
pop
or
ror
push
fnstsw
mov
je
xor
test
shl
jo
push
ja
xchg
mov
mov
inc
ficomp
ja
xchg
shl
sub
icebp
mov
imul
sbb
dec
sbb
jno
out
mov
push
or
mov
iret
clc
xchg
pop
imul
fcom
mov
adc
or
in
mov
int3
outs
or
retf
pop
pop
or
loopne
mov
lds
cmps
adc
pop
cmp
push
adc
jbe
cmc
pusha
pop
jp
xor
inc
movs
push
shl
pop
mov
inc
inc
movd
and
das
outs
sti
jo
push
xchg
adc
and
stc
mov
call
ret
popa
or
stc
fdiv
xor
mov
es
and
jle
mov
(bad)
fsubrp
push
loopne
ret
mov
sub
jmp
movs
lds
rcr
(bad)
scas
(bad)
mov
jo
lods
push
shl
or
inc
sbb
iret
iret
push
pop
push
aas
cli
movs
in
stos
inc
inc
js
and
je
movs
test
jbe
retf
(bad)
pop
aas
mov
iret
test
ins
xchg
or
ins
retf
mov
dec
fstp
adc
mov
sub
xchg
mov
or
iret
enter
mov
shufps
sub
repz
stos
push
neg
jno
out
cmp
jns
lock
stc
xor
and
(bad)
lds
dec
inc
ds
pushf
scas
push
xor
aam
push
push
mov
ja
mov
inc
xlat
sti
jno
xor
jae
loop
jl
mov
xchg
mov
rol
xchg
inc
cmp
shl
stos
ret
ins
lds
cmp
in
aad
push
lods
(bad)
mov
adc
dec
out
retf
imul
mov
cmps
call
lahf
adc
mov
xchg
loop
jbe
mov
gs
push
(bad)
cmp
movs
int3
es
push
cmp
xor
jo
(bad)
popf
sbb
call
jnp
inc
add
ins
aad
sbb
cmp
retf
jae
jp
push
mov
sub
fimul
mov
sub
test
mov
cld
cwde
test
fs
mov
jne
ss
xor
outs
repnz
dec
jp
int3
jl
pop
(bad)
ret
ret
(bad)
std
not
sub
sti
mov
push
or
xchg
cmp
out
mov
cmp
or
inc
or
shr
mov
sar
adc
(bad)
fwait
push
cmp
int
xlat
cld
mov
test
mov
sbb
push
outs
nop
loop
test
xchg
push
mov
fidiv
ja
out
cmp
sbb
push
aam
pop
xor
push
xchg
movs
push
int
or
xchg
in
jne
dec
mov
adc
cmp
mov
loop
mov
aam
jge
ror
push
fwait
inc
or
scas
call
xchg
ud1
mov
xchg
xchg
mov
mov
imul
cmp
jno
jne
pop
dec
or
xchg
pushf
sub
add
fisubr
les
rol
retf
int3
ins
add
and
ror
sbb
sbb
push
pop
sub
pop
adc
mov
not
fdivr
sub
(bad)
push
xchg
or
lods
add
test
aam
mov
jno
mov
xor
cmc
mov
inc
out
jge
mov
js
mov
mov
loop
inc
leave
aad
jb
xchg
fbld
and
aaa
nop
xchg
aas
leave
sub
and
(bad)
retf
sbb
jle
ss
inc
mov
inc
gs
xchg
mov
aam
popf
test
or
and
mov
lock
dec
int3
fidiv
test
jne
(bad)
push
lods
pop
cmc
retf
inc
dec
and
push
mov
cwde
mov
xor
pop
imul
jle
test
ja
in
sar
xor
sbb
(bad)
fcomi
cli
add
jg
push
lahf
das
dec
sbb
add
jo
mov
inc
xchg
sub
or
adc
or
pop
imul
loope
push
ret
jbe
sar
pop
push
mov
ins
mov
mov
push
and
daa
jnp
movs
data16
inc
pop
mov
das
addr16
mov
push
lods
jp
or
iret
pop
(bad)
pop
adc
ret
mov
sub
clc
pushf
pop
out
or
mov
inc
lods
sti
ret
dec
cmp
out
jns
stos
out
int
(bad)
jbe
mov
pop
scas
in
imul
inc
dec
jle
and
lods
daa
sub
push
cmp
and
je
jle
jo
fwait
push
push
jns
int3
dec
sub
out
dec
call
cmp
hlt
push
pusha
jmp
xchg
xchg
ror
scas
mov
imul
nop
out
and
loop
cmc
or
xor
mov
jne
scas
jae
adc
or
push
mov
fadd
not
out
hlt
not
pop
ins
adc
outs
mov
push
leave
mov
out
daa
ficomp
mov
dec
mov
inc
int3
int3
sbb
adc
in
ss
stos
fwait
(bad)
pop
mov
mov
mov
out
xor
xchg
jns
in
jns
sar
loop
neg
dec
inc
test
jae
cs
adc
cmp
jle
std
into
lods
pop
enter
mov
aam
cmp
jmp
(bad)
adc
add
ins
movs
loopne
mov
outs
push
inc
cmc
(bad)
xor
xor
fmul
aam
call
mov
movs
(bad)
mov
cmp
lods
add
jnp
fwait
mov
jne
jmp
or
fwait
mov
lfs
inc
imul
jo
es
(bad)
fisttp
test
call
dec
push
mov
xor
sti
ins
out
mov
fwait
lods
ds
rcl
add
outs
test
rcl
fadd
out
or
scas
push
sbb
cld
jo
outs
iret
xchg
adc
dec
pop
adc
push
pop
dec
out
stos
pop
inc
imul
cli
mov
pop
clc
pop
addr16
mov
push
lock
daa
xor
iret
pushf
stos
mov
jae
mov
add
ds
and
adc
push
std
inc
pop
push
xor
pusha
out
(bad)
sbb
cmp
add
xchg
stos
adc
xchg
int
and
push
push
pop
fidivr
pop
pop
adc
push
cmps
test
addr16
inc
lods
rol
sub
jne
outs
xchg
xchg
jno
mov
shl
add
mov
mov
inc
ret
cmp
dec
dec
xchg
mov
fucom
adc
movs
enter
(bad)
das
scas
lods
ds
fisubr
xchg
sub
jmp
sbb
clc
aaa
or
dec
pushf
mov
lods
shr
inc
data16
pop
imul
sub
or
xor
xchg
fnstenv
stc
scas
mov
pop
gs
in
xchg
scas
iret
and
test
mov
out
push
inc
mov
lds
jne
lahf
aaa
enter
aam
cli
pop
fstp
cmps
repz
cmps
nop
mov
jge
popf
inc
mov
cmc
add
adc
mov
push
sub
(bad)
in
mov
mov
sbb
ins
rcr
test
lock
test
fbstp
cld
push
push
test
icebp
in
enter
jne
adc
clc
int
hlt
and
xchg
pop
pop
lods
mov
xchg
aam
mov
mov
mov
movs
inc
add
sbb
cwde
add
pinsrw
call
scas
ficom
(bad)
sub
inc
loopne
test
adc
adc
sbb
add
mov
dec
stos
inc
cmp
aaa
xchg
mov
push
ins
clc
mov
mov
xchg
js
mov
test
jmp
jne
xor
outs
dec
rcr
push
(bad)
mov
stos
cdq
adc
and
cld
jb
dec
out
aam
popa
add
neg
push
lods
mov
ret
jge
mov
xchg
fs
out
call
ret
push
lds
pop
aad
push
dec
cmp
lods
adc
push
mov
ror
mov
retf
arpl
jbe
adc
iret
cmp
mov
icebp
mov
shl
call
fsub
push
adc
xchg
es
call
mov
sub
dec
xchg
sti
mov
loopne
call
xor
test
push
push
test
cmc
xchg
stc
mov
stos
jbe
sbb
out
cwde
adc
dec
(bad)
mov
or
or
fs
or
jmp
jp
mov
mov
mov
sahf
std
outs
jo
push
add
fadd
sbb
add
inc
push
cwde
jmp
and
fimul
aad
jl
retf
and
pusha
xor
in
mov
and
pop
xchg
in
stc
sbb
jle
shr
push
jbe
mov
mov
push
and
push
lods
test
sbb
psrlw
adc
inc
xor
mov
dec
shl
adc
jo
test
mov
adc
pop
inc
out
movs
ins
or
in
push
out
lds
(bad)
xchg
pop
jns
pop
push
ja
in
mov
ror
push
mov
jne
arpl
mov
(bad)
and
xlat
pop
lahf
mov
cld
loop
enter
pop
ds
fsub
mov
loop
ret
sbb
(bad)
xchg
fsubr
neg
push
retf
out
or
dec
push
fldenv
xchg
jns
sbb
cmp
push
xlat
pushf
xchg
into
call
out
shl
push
popa
inc
cld
jecxz
pop
aad
push
mov
push
loop
jmp
cmp
cmp
arpl
fidivr
and
enter
in
pop
add
push
sub
in
nop
aaa
(bad)
xor
mov
fldcw
push
cmp
mov
add
sub
sub
mov
mov
xchg
cmc
push
mov
es
cmps
push
jg
arpl
std
iret
or
or
jae
aam
(bad)
pavgw
(bad)
mov
dec
test
ins
call
fistp
stos
sbb
stos
sub
pop
nop
ins
pop
fstp
loop
cs
add
mov
mov
adc
lods
aad
mov
adc
imul
mov
inc
mov
rol
sar
inc
add
xor
pop
mov
das
nop
dec
imul
fidiv
test
in
xor
add
dec
or
daa
jnp
and
out
cmp
or
jmp
leave
repz
sar
mov
fld
in
adc
pop
mov
and
retf
mov
popf
retf
cli
loopne
out
cmps
(bad)
ds
xor
cmp
mov
ja
sub
jnp
iret
jns
mov
cld
or
retf
jno
cmp
adc
mov
cmps
mov
xchg
mov
mov
xlat
(bad)
enter
add
in
shl
dec
pushf
nop
xor
xor
mov
and
mov
push
pop
jecxz
rcl
add
jbe
(bad)
scas
in
adc
scas
xchg
div
dec
retf
cmp
sbb
sub
mov
mov
ins
xchg
(bad)
test
pop
mov
dec
add
fist
pop
inc
jne
sahf
add
aam
test
addr16
jae
sti
push
lea
out
lea
cwde
pusha
or
add
call
cmp
inc
fwait
jle
cmp
or
mov
sbb
lock
and
sbb
sub
mov
icebp
cs
sub
addr16
pop
lods
jp
add
inc
cmp
in
xchg
in
mov
call
jecxz
push
sub
pop
mov
mov
dec
test
dec
ret
push
into
push
fs
(bad)
inc
xchg
push
idiv
out
mov
push
xchg
push
dec
pop
jmp
inc
xor
adc
shl
in
mov
movs
and
push
and
lds
push
test
adc
aas
fst
test
pushf
adc
pop
jo
dec
and
retf
test
sub
ss
inc
mov
pop
ficomp
xlat
cmp
jne
fcomi
(bad)
jecxz
enter
jno
mov
outs
jb
sar
and
test
mov
fisttp
aaa
call
and
sub
inc
cmc
inc
mov
mov
xor
jo
push
pop
out
push
cmps
xchg
jne
(bad)
cld
push
je
out
aaa
mov
(bad)
outs
xor
and
mov
xchg
ds
fwait
data16
adc
add
adc
sbb
pop
xor
push
out
ds
fucomi
(bad)
hlt
in
in
push
imul
cwde
fist
xchg
in
cmp
xor
adc
fbstp
inc
out
mov
test
push
mov
addr16
adc
cld
(bad)
loopne
add
xor
and
push
inc
pop
mov
pop
xchg
push
sahf
fldenv
jmp
cwde
pop
lahf
cmp
(bad)
mov
mov
push
mov
shr
mov
ficom
push
mov
sbb
jge
add
pop
jo
frstor
rcr
in
and
jl
outs
pop
or
push
in
ins
ja
dec
xor
jmp
add
dec
adc
test
xlat
lds
mov
or
mov
jl
mov
outs
aaa
aad
cmc
jae
adc
es
jns
jo
mov
sub
stos
popf
arpl
jle
pop
in
rcl
pop
inc
test
stc
add
inc
push
pop
jmp
in
ret
(bad)
hlt
pop
jns
(bad)
jae
xchg
in
loope
addr16
pop
xlat
dec
mov
cmp
adc
mov
scas
dec
sub
push
or
test
push
dec
repz
mov
xor
out
ins
mov
sbb
push
sub
mov
jle
xor
iret
mov
gs
lods
xor
ds
test
dec
sbb
jnp
add
test
cs
adc
arpl
(bad)
enter
inc
dec
jns
inc
push
adc
fisttp
xchg
push
pushf
mov
sbb
jmp
jb
cmp
cmp
movs
out
dec
test
ret
(bad)
push
shl
sahf
hlt
js
dec
jb
cmp
stc
iret
sub
or
rcr
test
xchg
clc
mov
sahf
mov
movs
enter
fs
inc
shl
sub
sub
mov
dec
cmp
jo
push
hlt
push
jae
movs
(bad)
fiadd
fisub
scas
scas
xlat
in
fdivr
fist
test
mov
push
out
ficomp
cld
test
xchg
popf
xor
cmp
cmps
(bad)
fild
mov
push
inc
push
in
popf
icebp
push
arpl
xor
stos
dec
jmp
mov
and
xchg
out
push
pop
push
sub
mov
inc
mov
push
retf
push
lahf
or
adc
inc
xlat
add
rol
stc
(bad)
call
add
inc
jbe
xchg
mov
push
stos
mov
xchg
fadd
sti
icebp
sahf
mov
movaps
sub
dec
ret
pop
and
imul
mov
mov
stc
call
cmps
push
mov
out
pop
pushf
and
retf
int3
in
test
xchg
mov
ret
xor
cmp
mov
sub
sub
add
jne
inc
loop
fnstcw
pop
jnp
stos
fs
push
jg
mov
jge
push
into
sar
mov
adc
addr16
fild
pop
sbb
loopne
dec
leave
jge
sbb
and
or
mov
jge
mov
or
loope
pop
mov
sbb
mov
out
jae
loop
icebp
adc
scas
push
jno
cs
shl
outs
dec
(bad)
adc
cmps
jae
vmread
adc
mov
inc
and
and
data16
sub
mov
addr16
cli
outs
scas
out
aaa
sub
pop
sub
cmps
mov
leave
aad
ins
adc
mov
jle
push
or
fnsave
sub
fs
push
fist
jnp
xchg
xchg
imul
cmc
mov
pop
and
sbb
xchg
cli
daa
int3
cld
add
add
ret
jmp
inc
and
hlt
xor
(bad)
dec
inc
mov
les
xor
mov
(bad)
dec
jl
sbb
add
arpl
pop
stos
call
cmc
push
cmps
push
stos
fldenv
fxch
pop
xchg
in
mov
fs
mov
shr
inc
(bad)
stc
call
das
xchg
imul
(bad)
pop
sub
(bad)
fidiv
sar
xchg
xor
in
xor
scas
dec
test
push
iret
leave
sub
inc
dec
xchg
mov
jg
imul
sbb
scas
pop
in
jae
aad
(bad)
pop
xchg
cmp
outs
in
stos
std
ds
ror
mov
int3
or
mov
mov
pop
adc
int3
or
adc
sub
mov
mov
jge
ror
xor
rcr
jno
test
and
out
adc
test
push
(bad)
sub
movs
sub
(bad)
xlat
jbe
push
fwait
ds
(bad)
mov
(bad)
test
clc
(bad)
shr
xchg
mul
sahf
fadd
sub
pop
inc
lea
add
ror
scas
arpl
push
pop
sbb
jecxz
jg
loop
xchg
add
pop
cli
jl
pop
mov
jg
test
int
dec
aas
sbb
cmp
push
call
popa
(bad)
pop
jnp
jnp
push
push
sbb
div
inc
xor
jp
and
ficomp
fbld
xchg
fld
jge
shl
cmp
sub
es
sub
cdq
mov
push
in
(bad)
aad
xor
or
mov
mov
sbb
and
(bad)
and
jge
jae
xchg
fstp
add
into
adc
cmps
jl
lods
cli
xchg
jno
adc
fwait
add
jmp
test
rcl
clc
or
inc
push
xor
push
scas
aas
pop
loope
ror
cmps
push
movs
jle
cdq
test
mov
sti
mov
loop
shl
mov
xchg
fist
jg
movs
push
jge
mov
stos
test
dec
sahf
push
in
mov
adc
push
pop
cwde
cli
push
add
loopne
inc
cdq
add
push
cmp
jno
xor
xchg
js
sub
cmps
stc
cmp
or
rcr
sbb
add
xchg
fisttp
dec
jmp
sbb
inc
es
push
mov
push
xor
(bad)
and
(bad)
or
add
add
scas
lods
shl
xchg
xchg
cmp
fiadd
aas
jle
addr16
ins
pop
xchg
xor
cld
loopne
inc
aam
sahf
inc
xor
(bad)
cmps
cli
mov
and
outs
clc
out
shl
jmp
loope
or
retf
neg
inc
jmp
popf
fbld
pop
pusha
jns
stos
(bad)
fs
or
add
movs
js
push
fwait
pop
in
mov
jno
(bad)
mov
jbe
dec
out
jb
inc
xchg
or
sbb
jae
cmp
popa
(bad)
xchg
jno
or
add
sar
mov
aad
xchg
cmps
lock
jmp
mov
adc
ins
jno
push
fwait
inc
test
push
push
out
xor
loopne
push
cwde
lahf
add
lds
push
cmps
mov
xchg
mov
mov
je
sahf
mov
cs
push
xor
out
retf
data16
aam
xor
pop
loopne
loopne
sahf
lods
rcr
mov
sbb
scas
xor
inc
lods
jae
imul
push
add
aas
pop
dec
dec
pop
pop
jp
lock
pop
ret
mov
enter
repz
adc
adc
xchg
jne
test
sbb
fisttp
cdq
push
fst
sbb
lods
push
xchg
sub
imul
jmp
ss
inc
fsub
call
fild
inc
push
movs
das
or
ins
jnp
push
leave
push
pop
mov
xchg
push
cmp
xchg
and
gs
mov
cmps
inc
dec
sbb
adc
outs
lods
push
xor
xchg
mov
adc
push
scas
push
sub
xor
xor
addr16
sub
pop
sub
mov
push
rcr
and
inc
add
pushf
or
add
dec
repnz
js
hlt
jne
inc
jmp
rcr
enter
fwait
jae
into
imul
adc
pop
mov
or
aad
sbb
mov
sbb
ja
jl
mov
add
lock
es
dec
mov
dec
sbb
adc
ja
jmp
adc
xchg
ds
lea
ja
call
sub
fwait
and
mov
movs
stos
out
push
push
jne
mov
pop
jl
int
and
mov
out
jo
adc
pop
bound
or
rcr
loopne
in
mov
gs
stos
jae
xor
bound
mov
mov
xchg
dec
inc
retf
stos
fmul
sub
mov
daa
shl
stos
addr16
int3
pop
scas
out
mov
add
loopne
xchg
dec
or
or
out
push
xchg
std
lods
shl
dec
xchg
fcmovnbe
xchg
lds
push
leave
pusha
outs
add
pop
ret
pop
inc
mov
pop
and
sbb
mov
push
out
enter
push
sub
or
push
push
test
mov
or
push
pmuludq
sbb
add
jae
xchg
xchg
pop
pmuludq
outs
sbb
sar
inc
xor
rol
jmp
xchg
lea
sar
cmp
push
enter
movs
cs
push
std
jbe
sub
adc
mov
xor
and
mov
js
sbb
mov
ret
cmc
test
ja
movs
cmc
inc
in
je
imul
mov
leave
es
lds
fwait
das
fsub
xchg
ja
xchg
leave
xchg
sbb
pop
mov
stos
fsubr
pop
dec
cmovns
push
clc
inc
mov
xchg
push
cmc
pop
loop
cmps
call
jae
sar
stos
xchg
mov
adc
sub
inc
lods
int
cld
jae
and
call
xor
leave
mov
stos
call
cmp
cmp
(bad)
in
aam
ins
jo
jecxz
inc
adc
xor
clc
out
fild
in
lods
fwait
pop
push
ss
mov
and
fldcw
mov
jl
pop
sub
xchg
cli
and
mov
jo
adc
inc
imul
sub
int
icebp
sub
mov
fld
(bad)
cmps
out
cmp
iret
xor
sub
pop
(bad)
mov
cs
add
cli
jno
xchg
mov
scas
jle
stos
js
lahf
js
icebp
lahf
cmp
stos
jecxz
and
or
and
push
ja
lds
adc
add
js
aad
mov
int
mov
les
mov
int3
mov
fcomp
call
mov
scas
jmp
and
pusha
es
(bad)
pop
sub
xor
adc
xor
add
cmp
scas
sub
jp
test
retf
push
cs
jmp
xchg
xchg
adc
std
jbe
mov
imul
sbb
sbb
shr
std
cmp
nop
and
popa
dec
xchg
add
push
adc
and
out
movs
xchg
(bad)
out
push
jbe
fwait
and
jae
shr
cmp
cli
add
xlat
mov
sbb
out
pop
jnp
inc
je
hlt
xlat
in
in
call
outs
(bad)
xchg
xor
pop
push
ds
sub
or
mov
ds
(bad)
(bad)
leave
push
jecxz
push
and
or
adc
adc
xor
mov
fcomp
cmc
(bad)
rol
jge
(bad)
and
int3
fiadd
stos
movs
mov
dec
repnz
call
inc
sub
es
fisub
movs
aas
mov
enter
mov
cmps
lahf
sbb
mov
cld
sub
jbe
lahf
jmp
sub
pop
ds
out
sbb
xchg
adc
jmp
stc
adc
shl
push
mov
clc
nop
mov
adc
add
inc
push
mov
add
adc
and
loope
je
xor
add
fistp
jns
cmps
pop
stos
pop
xlat
cmp
xchg
dec
mov
xor
cmp
or
stos
pop
push
sbb
ficom
aaa
mov
int
nop
push
jo
inc
ins
jl
mov
sbb
inc
dec
mov
scas
xor
cmp
mov
pop
push
pop
jns
ficom
enter
data16
addr16
stos
cmps
inc
shr
push
addr16
mov
ins
pop
jne
pop
fwait
mov
add
jmp
popf
add
sub
cmp
pop
aas
mov
mov
cwde
inc
pop
test
dec
mov
in
imul
ficom
push
aas
jne
je
dec
loopne
dec
push
pop
jge
xchg
or
enter
lods
jge
pusha
int3
or
add
fstp
cmp
xor
adc
add
jns
fimul
loopne
hlt
stos
adc
retf
cld
mov
inc
and
push
xchg
xlat
loop
popf
pop
push
add
add
and
loope
pushf
cdq
enter
fisttp
push
mov
sbb
les
push
popa
cmp
or
inc
lea
push
in
dec
enter
xor
rcl
fcmovnbe
xor
sti
mov
shl
daa
dec
retf
std
adc
test
mov
mov
icebp
mov
sub
dec
add
mov
jle
sub
gs
dec
fidiv
in
xlat
xchg
mov
scas
retf
pop
add
adc
sar
rol
sub
xor
adc
inc
mov
std
mov
xor
pop
mov
fild
cmps
pop
push
test
jb
je
push
mov
sbb
or
(bad)
pop
xchg
pop
out
sub
in
mov
jmp
xchg
or
mov
imul
or
and
pop
pop
cmp
fldl2e
sub
fidivr
mov
outs
fsubr
adc
loop
push
loope
dec
pop
loope
ins
in
or
(bad)
sub
sub
jmp
iret
inc
xlat
xchg
and
aad
sub
jmp
mov
mov
scas
clc
repnz
cmp
sbb
cwd
mov
inc
inc
mov
sub
xor
jns
syscall
ret
adc
bound
(bad)
or
repz
pop
retfw
pushf
enter
shl
inc
xor
cwde
push
in
int3
and
test
test
jae
dec
loop
dec
xor
xchg
int
jge
gs
xor
repnz
int
iret
mov
sahf
inc
frstor
stos
sub
jge
retf
sbb
mov
xor
dec
hlt
pop
dec
jne
push
ds
int3
dec
ret
loope
jo
dec
pop
bound
hlt
add
inc
iret
dec
out
not
(bad)
mov
inc
lea
movs
sbb
xchg
test
sbb
repz
outs
aas
ja
cmp
jecxz
pushf
jo
push
xchg
sar
ds
mov
xchg
fwait
pop
sub
add
and
fst
push
xchg
push
inc
ins
aaa
inc
test
std
pop
test
sahf
pusha
push
das
mov
add
cs
pop
mov
dec
out
test
ins
cmp
jae
cmc
(bad)
pop
jnp
(bad)
pop
stos
outs
cmp
mov
add
sbb
fsub
xor
push
add
add
loop
iret
movs
outs
hlt
mov
cmp
mov
mov
ss
sbb
pop
mov
shr
mov
and
jp
mov
xor
add
arpl
cs
mov
inc
rol
daa
cmp
xor
mov
pop
mov
and
outs
xchg
cld
popa
xor
inc
pop
mov
aas
inc
in
dec
push
fsub
cli
popf
adc
inc
stos
inc
inc
das
call
push
sub
rcr
jnp
sub
cmp
out
pusha
dec
mov
jge
mov
and
adc
outs
push
jmp
jo
stos
aas
push
popa
nop
ror
lea
xchg
xor
out
cmp
jl
ins
push
lea
sbb
dec
(bad)
stos
add
dec
mov
scas
xchg
xchg
add
jbe
pop
xor
mov
mov
add
cli
call
loope
arpl
xchg
frstor
fs
jae
loopne
imul
imul
push
push
pop
call
loop
adc
cmps
xchg
push
push
aas
ret
lea
out
inc
mov
das
test
and
cmp
imul
adc
popf
mov
xor
add
push
inc
mov
clc
push
jmp
into
push
mov
adc
stos
jns
bnd
imul
cmovb
movs
out
gs
or
shl
mov
jle
cmp
mov
inc
mov
in
retf
fst
(bad)
mov
xor
imul
mov
xor
in
and
pop
pop
data16
loopne
dec
popf
shl
(bad)
popa
cmp
jo
(bad)
hlt
test
(bad)
shl
pop
fcom
dec
cmp
outs
lds
mov
inc
in
rol
sub
daa
jle
sbb
xchg
or
jmp
ds
mov
fwait
or
in
dec
stos
movlps
adc
ds
addr16
sub
cmc
in
mov
dec
(bad)
dec
sbb
dec
stc
or
out
idiv
test
adc
imul
out
adc
xchg
into
xchg
jns
mov
or
sbb
xchg
adc
cdq
es
int
jp
jle
sub
rcr
arpl
add
or
or
rcr
mov
adc
rol
fnstcw
and
inc
and
loopne
adc
jno
rcl
ss
pop
inc
push
imul
stos
cmps
sbb
(bad)
leave
adc
mov
fisttp
xor
stos
call
push
push
imul
pop
in
sub
test
adc
gs
dec
ds
scas
mov
dec
push
xchg
fnsave
fcomp
outs
or
mov
(bad)
sub
xor
sub
cwde
push
leave
adc
inc
and
test
sub
push
rol
cmp
jae
test
cmc
and
aam
fbld
cwde
call
mov
imul
or
cld
mov
cmp
clc
sbb
cmp
imul
or
ins
js
cmp
xor
mov
jns
sbb
rcl
imul
push
xchg
xchg
dec
adc
loopne
or
push
mov
sbb
jle
and
or
push
ins
mov
xor
sahf
mov
cmp
mov
stc
add
imul
addr16
jp
mov
lahf
fdivr
adc
inc
daa
adc
lea
sub
lahf
fs
jne
aaa
sub
fsubr
icebp
xchg
popa
pop
les
sub
out
mov
push
aas
retf
mov
js
test
fcmovbe
push
xchg
(bad)
cmp
les
js
cld
push
imul
xchg
lods
into
idiv
rcl
retf
imul
add
(bad)
rol
lds
xchg
repnz
push
call
arpl
fcmovu
lea
out
cwde
rol
stos
mov
sbb
cmp
or
out
adc
in
sub
stc
lock
loopne
out
and
adc
sahf
mov
popf
or
pop
pop
stc
loope
stos
repnz
sbb
and
sbb
pop
scas
out
loope
push
shl
sbb
jo
or
and
sbb
test
movs
enter
mov
inc
mov
ftst
test
lea
pop
pop
sub
xchg
mov
mov
mov
mov
out
mov
jle
dec
push
adc
adc
mov
jo
stc
ret
add
retf
mov
std
xchg
dec
push
adc
push
cmp
(bad)
mov
sbb
sbb
jbe
jge
jp
(bad)
popa
ins
loop
inc
pop
add
retf
inc
lea
dec
rcr
(bad)
sbb
out
or
xor
fnstsw
inc
mov
clc
cwde
and
dec
push
or
addr16
aas
popa
fist
jmp
loope
fwait
xchg
test
inc
inc
cmp
and
or
and
pop
das
mov
fidivr
mov
sbb
pusha
mov
jne
cld
adc
hlt
shl
repz
jecxz
xor
shl
mov
cmp
cld
cs
jbe
ret
add
sub
out
mov
or
aam
mov
lock
aad
data16
pop
add
lahf
ins
xor
xchg
int3
inc
mov
jnp
add
xchg
jp
sub
mov
adc
stc
js
pop
outs
push
pop
cmp
mov
inc
and
dec
aas
jb
shr
xor
lods
pop
in
mov
popf
test
xchg
out
adc
out
push
scas
ins
jnp
cwde
retf
test
pop
and
push
aad
fstp
mov
lahf
push
mov
jne
mov
mov
fadd
(bad)
sbb
outs
iret
mov
cmp
sub
cwde
scas
je
ret
dec
retf
add
push
cs
and
int
xor
push
xor
inc
(bad)
pop
dec
jo
aad
inc
push
std
jge
inc
test
js
iret
add
mov
jl
mov
xor
(bad)
mov
movs
in
xor
cmp
ret
mov
mov
pop
fist
out
xor
jmp
stos
fidiv
inc
jne
cmp
fwait
push
ss
hlt
outs
jp
addr16
pop
bnd
jmp
pushf
mov
aam
pop
retf
and
mov
test
mov
hlt
fcom
cmp
(bad)
cmp
imul
jo
sbb
or
xchg
out
cs
es
rcr
dec
(bad)
int
push
movs
mov
mov
aaa
cmp
jbe
push
sub
pop
ins
sbb
jmp
imul
shl
push
in
push
pop
mov
jmp
mov
movs
jg
adc
adc
and
mov
push
fisttp
retf
popa
ja
pop
jbe
mov
sbb
retf
bound
push
xchg
dec
add
movs
mov
add
enter
test
rol
push
xchg
hlt
retf
dec
cli
xor
mov
ret
leave
or
lds
xor
dec
xchg
or
cmps
add
push
or
jg
adc
push
cmps
sub
stos
std
in
jbe
or
in
push
xchg
mov
mov
and
shr
mov
out
jg
sub
outs
cmp
nop
repnz
enter
icebp
jmp
mov
aam
jmp
or
pop
mov
xor
sub
js
push
std
or
mov
push
in
mov
inc
ret
dec
outs
cli
cld
inc
mov
loope
in
mov
pusha
sti
pusha
and
test
les
inc
lods
je
pop
out
stc
jecxz
cmp
repz
push
(bad)
cmp
sar
cmps
sbb
ja
je
rcr
scas
scas
movs
xchg
sbb
(bad)
je
jb
pop
shl
cld
imul
add
lea
inc
popa
int
mov
movs
add
mov
mov
dec
xchg
dec
addr16
xchg
adc
and
inc
pop
sbb
cmc
dec
test
mov
dec
and
lds
jmp
adc
movs
xchg
cmp
push
cwde
idiv
pop
push
sub
jae
test
add
ret
(bad)
push
iret
(bad)
pusha
adc
mov
adc
cmp
xchg
inc
enter
inc
and
push
inc
jnp
movs
inc
inc
arpl
loopne
mov
inc
mov
jbe
or
mov
out
mov
jp
sbb
fcomp
fidiv
(bad)
xchg
inc
sub
lock
ret
jo
lds
mov
sub
fs
sbb
fisttp
addr16
jg
mov
clc
aas
ror
inc
pop
cmp
add
imul
clc
mov
push
jmp
mov
cmp
fdivr
bound
outs
inc
out
je
fstp
popf
test
cmp
sbb
jmp
scas
jns
or
xchg
xor
rol
loope
sub
pop
xor
enter
call
cmp
sti
cld
(bad)
data16
dec
fsub
xor
or
adc
jb
jmp
ins
cmc
lock
mov
fdiv
pushf
mov
pusha
aas
mov
xor
pop
dec
inc
mov
mov
push
inc
push
xchg
call
aaa
test
push
mov
mov
in
dec
push
sub
arpl
and
mov
xchg
xchg
ret
movs
pushf
mov
sub
imul
cmp
clc
std
sbb
retf
in
call
pop
outs
(bad)
jb
loop
arpl
mov
repz
rol
dec
lea
push
loope
dec
int3
int
popa
cmp
xchg
pusha
pop
mov
ins
popf
mov
mov
adc
sub
and
scas
bound
nop
pop
inc
mov
test
test
inc
jecxz
pop
loopne
int
daa
push
daa
or
outs
jecxz
outs
pop
push
out
or
aam
dec
arpl
push
mov
inc
(bad)
daa
adc
adc
lods
cmps
je
test
in
and
xor
cmp
cmc
push
out
jmp
cmc
pop
push
outs
fs
sbb
xor
add
call
je
(bad)
aad
je
daa
cdq
ss
aam
mov
rcr
mov
cmps
imul
pop
(bad)
cmp
mov
jns
adc
pop
movs
xor
add
mov
dec
mov
rol
jne
sub
cld
sbb
mov
and
mov
inc
push
setl
mov
mov
jno
mov
shr
jmp
js
mov
cld
dec
push
icebp
push
jbe
out
xchg
cmp
add
cmp
mov
dec
cld
cmc
pop
add
inc
sahf
jns
mov
iret
fld
fmul
iret
(bad)
in
mov
jl
mov
scas
and
cmps
(bad)
call
ret
pop
jb
jns
in
jns
ja
jae
add
in
adc
or
and
xor
mov
xor
bnd
cmc
mov
mov
mov
push
mov
leave
cmps
enter
scas
movs
sahf
jns
jmp
(bad)
xor
adc
into
add
or
jb
sbb
cli
add
jl
mov
iret
jle
xchg
cmp
outs
retf
and
mov
mov
es
mov
sbb
out
(bad)
fs
mov
dec
fidivr
scas
popf
lods
stc
xchg
leave
stos
cmp
loopne
add
cmp
push
lds
jne
sub
push
sbb
xor
inc
out
bound
sub
lds
popa
out
xor
rcl
repnz
inc
push
imul
pop
out
pop
mov
loope
xchg
popa
mov
mov
pop
jl
mov
sysenter
inc
dec
repz
or
fldenv
push
xchg
call
ss
mov
cmp
das
mov
push
loope
push
fimul
push
and
(bad)
jno
in
(bad)
xor
mov
mov
adc
aad
xor
test
js
repz
fistp
js
xchg
push
adc
add
mov
arpl
(bad)
div
out
dec
mov
mov
mov
dec
cmp
stc
fs
jmp
mov
and
jo
mov
xlat
in
ficomp
stos
fucomi
mul
aad
jg
xchg
test
jbe
xchg
cmp
imul
test
push
push
adc
mov
les
mul
js
sbb
or
cmps
(bad)
cmp
sub
mov
sahf
add
and
mov
pop
dec
imul
xchg
mov
add
pop
and
gs
jmp
xchg
clc
loop
sbb
test
dec
adc
mov
popf
or
sbb
in
jns
aas
inc
sub
mov
and
push
add
fimul
aam
test
fdiv
and
in
xor
mov
adc
sti
scas
or
xchg
push
pop
jae
inc
mov
xor
mov
loope
lea
fcomp
mov
cmps
lods
loop
fsub
inc
mov
(bad)
icebp
movs
ss
push
or
out
fs
jecxz
mov
ss
popf
movs
push
pushf
jmp
scas
sub
cdq
enter
rol
int
adc
sub
sbb
std
iret
inc
(bad)
stos
jmp
loop
jcxz
test
outs
div
rol
and
adc
stos
dec
xlat
cmps
sub
ja
cmp
pop
push
fist
xchg
inc
push
jnp
or
movs
retf
iret
xor
inc
dec
or
jnp
xor
xchg
aas
mov
jmp
or
retf
dec
mov
daa
lds
retf
pop
pop
lock
icebp
cli
mov
mov
add
inc
cmc
cmp
out
jnp
mov
scas
add
inc
push
fadd
out
and
inc
pop
cdq
dec
(bad)
jecxz
rcl
adc
xchg
out
(bad)
xor
icebp
xor
dec
repnz
rcr
test
aaa
in
adc
rcl
dec
inc
pushf
mov
daa
xchg
push
mov
movs
(bad)
fiadd
daa
xchg
jns
mov
dec
daa
push
aam
jg
retf
shl
mov
mov
adc
cmc
jbe
lea
inc
inc
outs
(bad)
dec
enter
jp
hlt
(bad)
and
fxch
popa
mov
adc
rcl
cmp
fisub
xor
out
adc
add
cmp
mov
int
and
pop
sbb
in
jge
pop
jl
cmp
inc
iret
sbb
pop
pushf
sbb
dec
mov
lahf
add
adc
pop
std
gs
(bad)
cmp
gs
pop
dec
aaa
dec
inc
lds
dec
xor
aaa
mov
fcmovne
adc
jmp
push
or
std
sbb
or
inc
lds
xor
aaa
push
mov
jle
add
and
int3
jo
jne
jae
jmp
icebp
fwait
mov
cmp
or
jg
push
jo
scas
mov
(bad)
(bad)
idiv
mov
fstp
call
inc
mov
mov
adc
jo
pop
scas
jns
xlat
call
stc
jg
xor
loope
ja
add
das
mov
and
out
pop
or
enter
aaa
call
push
inc
pop
rcl
or
stos
xchg
movs
xchg
(bad)
into
(bad)
cmp
mov
js
ret
aaa
scas
inc
pop
and
aam
fwait
pop
lds
adc
xchg
iret
jge
mov
dec
fstp
int3
sbb
sub
data16
and
sub
cld
push
lods
cld
mov
cli
cmp
push
inc
in
pushf
inc
jle
fldcw
je
fxch
inc
or
pop
repz
ds
mov
jb
fnstsw
mov
xchg
mov
push
out
sub
sub
and
dec
arpl
dec
scas
test
pop
sbb
loopne
mov
xchg
or
and
sub
xor
jo
bnd
(bad)
xchg
aaa
dec
pop
mov
sbb
fisubr
inc
sbb
dec
xor
xchg
test
(bad)
test
xchg
movs
jo
jb
mov
retf
out
aaa
mov
in
lds
pusha
jge
cwde
pop
cmp
push
dec
xchg
fcomip
push
push
and
popa
out
jp
cmps
call
das
pop
repnz
or
imul
mov
add
adc
mov
retf
mov
sbb
push
adc
loopne
jo
xor
and
add
sub
fbld
lahf
jecxz
mov
xor
shr
iret
push
shl
movs
movs
and
xor
arpl
or
test
pop
ins
sar
and
mov
or
(bad)
rcr
push
add
inc
add
pop
cdq
rcl
stos
mov
data16
lea
imul
add
ds
xor
loopne
icebp
xor
inc
push
lahf
mov
(bad)
push
and
rol
xor
pop
mov
push
mov
clc
jbe
fdiv
sbb
fcom
cmp
outs
retf
inc
pop
xor
in
sbb
mov
das
pop
lea
pop
imul
jnp
cmp
call
mov
ret
shr
aas
inc
mov
shr
cmp
or
pop
jb
xor
xchg
in
inc
pop
mov
adc
add
sahf
push
aam
outs
inc
sub
test
gs
out
test
mov
jge
int3
inc
dec
test
cmp
rol
(bad)
fisub
xchg
fdiv
mov
pop
jns
div
ds
pop
test
or
jo
es
xor
and
cmp
cmp
popf
cs
pop
sub
int3
inc
add
(bad)
adc
addr16
inc
pushf
xor
jp
arpl
(bad)
xor
loope
mov
popa
mov
mov
fs
add
mov
xor
popf
adc
enter
lock
sbb
rcpps
jle
cmp
push
cmp
xor
adc
fimul
sbb
xor
add
sbb
and
icebp
and
cmp
sbb
bnd
jbe
int
repz
aas
push
dec
mov
outs
mov
out
pop
call
out
shl
loop
xchg
test
ror
xlat
enter
mov
stos
or
aas
sbb
jb
xchg
push
xchg
int
sub
or
mov
(bad)
out
call
outs
mov
sbb
mov
mov
adc
xchg
arpl
xchg
or
inc
stos
jecxz
mov
push
add
or
fistp
inc
pushf
popf
ficom
sbb
xor
out
add
mov
rcr
jno
aam
in
push
pop
inc
les
ins
and
adc
popf
jle
and
cwde
les
jno
add
dec
dec
lock
pushf
icebp
xchg
popf
sbb
jge
pop
ja
xrelease
mov
or
ficom
sbb
adc
loopne
les
pop
mov
(bad)
fstp
push
pop
push
sub
loop
push
jmp
mov
push
xchg
loopne
jp
mov
addr16
cmp
dec
leave
push
mov
cmp
std
in
or
ja
inc
add
or
jne
push
loopne
mov
fild
aam
fwait
lock
pop
push
sbb
jl
and
push
push
aad
adc
fidivr
pop
(bad)
mov
mov
inc
xchg
mov
push
(bad)
adc
ss
aaa
pop
hlt
mov
inc
mov
sub
sbb
test
xchg
add
pop
pop
jb
sub
jmp
mov
push
fld
or
push
mov
jae
jecxz
push
xchg
shl
out
jbe
pushf
jo
or
test
push
call
jl
retf
(bad)
pop
adc
lods
fwait
(bad)
mov
fwait
xor
or
mov
add
cmps
dec
sahf
lods
mov
stc
outs
adc
sbb
mov
movs
call
out
dec
xor
cwde
xor
es
mov
jo
sub
call
sbb
std
pop
hlt
gs
mov
mov
pop
loope
addr16
push
mov
sub
mov
xchg
sub
test
sbb
adc
push
cmp
ja
xlat
mov
sbb
sbb
jle
jmp
lock
jnp
popa
dec
pop
mov
inc
or
stc
fisubr
scas
out
pop
pushf
lods
mov
(bad)
lds
xchg
inc
jmp
or
outs
push
jnp
or
sub
int3
ja
adc
popf
out
ret
cli
and
and
push
fcomp
in
push
sub
fistp
dec
xchg
test
(bad)
retf
inc
mov
in
push
(bad)
jne
sbb
sbb
ss
scas
cli
data16
dec
sub
cmp
xlat
test
ret
leave
xchg
or
sub
mov
stos
push
rcl
cmp
sti
jnp
ja
shr
inc
pop
in
mov
jg
adc
icebp
icebp
jle
je
enter
repz
call
ror
mov
cmps
fisttp
pop
ds
mov
ds
ret
jp
sub
sub
xchg
mov
jmp
fist
mov
test
cs
lock
add
mov
jb
loopne
sbb
sub
mov
push
cmc
dec
pop
int3
loop
sub
jl
push
or
xchg
loop
or
xor
cmp
mov
sub
jae
lods
adc
or
fwait
xchg
loope
push
in
popf
retf
fisubr
mov
xor
bound
sub
out
outs
jmp
daa
pusha
int
int
neg
je
fwait
push
not
aam
cmp
rcl
jo
cmc
neg
pop
jo
pop
add
push
scas
das
mov
cld
fldcw
mov
cmp
lahf
push
cmp
repz
mov
inc
fcmovne
or
push
clc
movs
lea
sbb
jno
mov
out
add
sahf
inc
outs
jo
or
xchg
push
aas
adc
icebp
bound
popa
pop
fidiv
cmps
adc
xor
mov
pop
jnp
mov
test
int
jmp
jb
pop
out
movs
inc
iret
push
aas
push
push
fnstcw
ror
aaa
push
add
cmp
mov
stos
pop
xchg
int
fidivr
js
fnstcw
ficom
and
xor
enter
xor
push
mov
movs
pop
add
adc
jo
shr
add
dec
(bad)
jnp
cmps
in
ret
xchg
mov
push
jne
add
jmp
cmp
movs
mov
cld
repnz
jno
cmp
mov
jl
daa
stc
call
xchg
ret
fwait
test
or
push
out
inc
sbb
ja
pop
cdq
xchg
scas
aas
stos
sbb
inc
sub
dec
and
pushf
rcl
mov
inc
mov
loop
call
jno
and
loop
(bad)
daa
stos
jge
out
lods
xchg
aas
fsub
mov
inc
add
pop
repnz
xchg
inc
dec
ret
or
dec
pop
popf
jecxz
shl
sub
icebp
mov
add
cmp
push
cmp
pop
clc
and
sbb
cmp
pop
jns
push
mov
adc
movs
fnstsw
xor
inc
out
into
pop
mov
inc
adc
loope
xchg
shl
push
call
int3
or
mov
xchg
jmp
sbb
data16
outs
jno
call
into
imul
repnz
mov
ds
mov
cld
iret
loope
dec
xor
mov
ins
pop
call
xor
inc
jg
movs
fdivr
les
xlat
sti
dec
cmc
outs
aas
dec
(bad)
sar
mov
push
add
aad
add
lods
mov
adc
loopne
mov
data16
rcr
loop
jne
and
(bad)
and
test
popf
sbb
or
cmp
addr16
(bad)
(bad)
retf
lock
imul
stos
cld
aam
test
cli
lods
lock
sti
jl
pop
sub
mov
nop
and
ins
int
pop
je
je
pop
jno
ret
rep
inc
test
mov
push
push
mov
jmp
movs
dec
fs
and
pop
adc
mov
or
inc
pop
ins
adc
add
jle
sub
(bad)
jmp
push
icebp
imul
and
dec
add
adc
jmp
push
cli
les
imul
loope
fld
out
shl
or
inc
loop
pop
(bad)
pop
lahf
inc
sub
jecxz
cdq
mov
jns
stos
xchg
fwait
cmp
pop
push
xchg
mov
jecxz
shl
push
test
mov
enter
test
sub
jae
popf
push
jae
inc
mov
cs
(bad)
test
outs
ret
cmp
aaa
add
mov
add
repnz
repnz
dec
imul
fisttp
test
and
ss
mov
jmp
sub
mov
cmc
xchg
and
outs
mov
mov
inc
lock
mov
repnz
xlat
test
clc
es
push
stos
xlat
leave
es
mov
nop
fs
ins
fstp
cmp
inc
aam
stc
cmp
fmul
int
imul
or
aam
pusha
iret
jle
pop
in
in
mov
lea
lock
xor
call
or
adc
gs
sahf
add
jle
test
and
pushf
sbb
sti
pop
icebp
ss
jns
push
jb
sub
fldpi
test
add
stos
add
push
cwde
out
adc
sub
sar
xlat
js
adc
test
sbb
shl
pop
add
(bad)
mov
pop
push
push
(bad)
push
mov
out
pop
pop
jp
sub
int3
and
call
push
mov
add
test
pop
fcomp
xor
dec
lods
push
shr
test
xchg
mov
rcr
in
inc
fidivr
push
outs
sar
lahf
xchg
dec
lods
outs
jb
and
out
jmp
lock
sub
out
test
push
and
call
add
shl
nop
test
je
sahf
loope
ins
pushf
jo
movs
les
ret
add
stc
lock
std
(bad)
repz
not
inc
mov
xchg
sub
pushf
jmp
sbb
sub
nop
mov
pop
fistp
pop
addr16
inc
inc
adc
lahf
add
xor
movs
cmps
jge
shl
xchg
xchg
nop
jle
dec
sub
dec
pop
scas
cmc
sbb
adc
sub
xchg
add
in
call
test
sbb
jmp
rcr
inc
pushf
lock
xchg
(bad)
(bad)
sar
scas
shl
icebp
mov
into
jbe
call
inc
and
dec
xlat
lea
je
pcmpgtw
mov
setnp
call
cmps
dec
scas
and
and
xchg
push
xor
xlat
ficomp
adc
jmp
mov
pusha
sbb
hlt
mov
shl
cmp
adc
dec
jns
and
loope
mov
ror
jmp
or
imul
out
je
pusha
call
(bad)
xor
test
inc
into
and
leave
shr
div
jbe
daa
(bad)
mov
mov
in
pop
xor
sub
(bad)
mov
mov
and
jle
fcomp
mov
mov
loop
aam
xor
pop
adc
cmp
add
sbb
out
bound
push
sub
stos
dec
js
scas
pop
cmp
inc
mov
sar
and
dec
cdq
cli
jbe
jg
cmp
test
sbb
mov
push
shl
fbld
push
pop
jne
cli
les
push
inc
sbb
test
bound
jnp
fild
mov
push
push
mov
mov
rcr
out
arpl
pop
test
pop
imul
(bad)
(bad)
cmp
sub
adc
ffree
(bad)
adc
pop
adc
cwde
retf
jb
xor
pop
sub
shl
adc
movs
idiv
fld
into
cmp
loop
imul
js
retf
mov
sub
xchg
dec
inc
mov
mul
test
test
leave
sbb
xor
dec
sahf
adc
mov
fsubr
and
lods
add
push
sbb
lea
popf
rol
rol
hlt
xor
add
fist
cmp
inc
mov
shl
cmp
repnz
xor
sbb
pop
int3
pop
and
(bad)
repnz
repz
fs
fist
(bad)
mov
or
fcom
dec
jge
dec
ins
xchg
pop
and
cmp
or
rcl
scas
xchg
popa
dec
adc
push
sbb
adc
push
sbb
ret
sbb
dec
pop
push
mov
push
inc
push
fsub
in
push
jo
aam
add
jle
rcl
cmp
dec
(bad)
rsqrtps
sub
mov
push
cmp
push
nop
ret
push
fisub
(bad)
cmp
fistp
add
scas
arpl
adc
les
inc
and
mov
adc
sti
and
lock
lods
test
jmp
shr
lods
mov
pop
out
je
imul
rcl
rcr
fst
scas
push
scas
scas
(bad)
adc
jno
aam
imul
jno
ret
jns
fcmovu
add
push
mov
adc
sbb
mov
push
(bad)
not
scas
cmp
push
int3
mov
xchg
jmp
fnsave
arpl
pop
aas
push
dec
inc
dec
mov
popf
xor
in
mov
ds
dec
xor
arpl
jge
in
and
mov
dec
push
stos
shr
cmp
xchg
out
daa
(bad)
lock
xor
cmps
movs
sbb
gs
add
fcomp
pop
jae
pop
ins
retf
jb
outs
icebp
sbb
ss
bnd
mov
data16
or
xchg
push
pop
scas
retf
test
xchg
out
and
ret
add
inc
xor
cmp
sbb
adc
movlps
jecxz
scas
add
cmp
sbb
(bad)
sbb
call
add
push
test
mov
sbb
pop
or
rol
adc
sbb
shr
int3
ins
ins
push
imul
ficom
scas
fnstcw
jo
push
cmp
imul
jae
xchg
cmps
mov
push
stos
mov
or
dec
shl
stc
loopne
push
out
ss
lea
and
mov
repnz
scas
pushf
mov
adc
cmp
into
ins
iret
dec
jbe
jl
mov
mov
dec
xchg
stos
push
xchg
and
cmps
sub
sbb
adc
in
test
pop
outs
pop
xor
or
jecxz
jmp
adc
mov
push
adc
add
push
add
fnstenv
hlt
into
mov
adc
cmp
cmps
mov
mov
ins
mov
enter
inc
inc
xor
fsubr
add
in
cmp
ins
sbb
std
movs
add
sub
cmp
add
addr16
or
inc
out
retf
mov
cmp
push
fs
sub
or
inc
inc
je
std
int3
or
and
test
and
mov
pop
pop
fistp
out
xchg
sbb
mov
idiv
xchg
es
js
jp
mov
popa
icebp
mov
into
dec
jmp
xchg
inc
mov
pop
stos
call
push
lock
jae
and
jle
retf
ins
xor
xchg
jo
fdiv
sbb
mov
add
sbb
or
mov
aad
or
mov
(bad)
scas
jns
sub
pop
outs
aad
fbstp
cld
ret
mov
dec
or
(bad)
mov
(bad)
lods
xchg
loopne
bound
aaa
ins
sbb
div
outs
scas
jae
cmp
mov
mov
jecxz
sub
pop
lahf
mov
xor
icebp
jecxz
(bad)
mov
sub
popf
test
dec
xor
(bad)
cld
enter
stos
dec
into
push
jmp
mov
sbb
and
clc
sbb
jp
movaps
dec
jge
das
mov
pushf
test
stos
pop
jnp
enter
bound
xchg
out
shl
xlat
adc
into
inc
jbe
mov
mov
into
dec
jbe
outs
loopne
jmp
outs
mov
inc
leave
inc
sub
das
in
jne
ret
sbb
fucomp
jecxz
je
repz
mov
xor
jmp
pop
test
fidiv
ret
in
dec
and
js
aas
lds
div
out
and
xor
push
xor
mov
cmps
shr
xchg
xlat
or
pop
or
outs
pop
pop
in
psubd
fwait
jbe
pop
xchg
pop
cmp
push
sahf
push
lock
(bad)
sti
daa
and
imul
imul
xchg
cmp
ret
fst
push
xor
loopne
les
daa
add
mov
and
ror
sahf
fdiv
pop
das
mov
icebp
(bad)
mov
gs
shl
adc
retf
inc
mov
sbb
pop
add
fucomip
mov
dec
sub
rcr
idiv
pusha
jae
(bad)
lock
mov
aas
mov
pop
sbb
mov
sub
and
push
and
rcr
out
mov
call
lock
ja
in
std
adc
es
and
add
jmp
sub
jle
mov
mov
mov
iret
push
ss
inc
xor
jbe
call
mov
mov
cmps
inc
xor
mov
inc
inc
xchg
(bad)
dec
in
loope
pop
fbld
cmp
ffreep
fdivr
in
mov
clc
pop
lea
(bad)
test
mov
sar
js
(bad)
pop
rol
aas
adc
leave
sbb
mov
es
cmp
fld
dec
fistp
mov
out
add
dec
add
arpl
jp
and
inc
cmp
push
jb
mov
(bad)
push
mov
stos
inc
dec
or
ins
sub
inc
push
push
add
mov
dec
std
bound
push
sub
mov
movs
mov
test
and
imul
and
pusha
not
add
inc
ffreep
movs
cli
jo
test
push
cmp
sub
loop
bound
jmp
jne
ss
int3
and
xor
(bad)
sub
cmp
imul
inc
sbb
retf
and
(bad)
mov
into
cmp
xlat
xor
xor
push
push
jecxz
inc
xor
rcr
or
mov
fild
out
jno
xor
pop
std
dec
popa
hlt
and
push
retf
popf
xchg
sub
ins
out
aad
pop
push
cs
dec
stc
mov
hlt
jns
lods
cmp
shl
lea
jbe
cmp
push
or
les
outs
test
inc
out
push
aaa
sbb
sub
(bad)
in
lea
inc
or
fisub
pop
mov
dec
ins
mov
imul
adc
fcmove
jne
pop
les
push
bound
gs
xchg
dec
xchg
add
xor
push
rcr
retf
lahf
mov
stos
sbb
xchg
sbb
push
rcr
pop
cld
pop
cmps
cld
pop
aam
in
mov
movs
out
push
sbb
xchg
mov
out
add
sbb
xchg
pushf
pop
mov
icebp
pop
or
fwait
jnp
sti
push
inc
test
stc
cld
jnp
int
mov
repnz
lds
dec
or
jle
frstor
addr16
xchg
into
and
and
in
mov
add
inc
mov
nop
addps
or
mov
push
popa
jns
push
jae
repz
push
fimul
cdq
int3
test
call
stc
mov
(bad)
mov
das
fstp
add
cmc
test
mov
movs
jge
or
jno
mov
fist
es
mov
push
mov
xchg
inc
mov
add
jmp
mov
scas
jno
sbb
xchg
ja
out
inc
js
adc
hlt
push
repnz
sub
and
xchg
mov
mov
movs
shl
arpl
jle
sahf
cmc
jbe
outs
sti
(bad)
rcr
or
push
xchg
rcr
and
les
xchg
retf
fist
lods
sbb
dec
dec
jae
xlat
fs
loopne
adc
test
push
pop
lods
xor
inc
jno
iret
fidiv
inc
fwait
fwait
cli
dec
shr
lds
dec
(bad)
outs
stc
xor
xchg
shl
sbb
lock
inc
shl
cmp
mov
sub
cld
sub
imul
arpl
test
loope
dec
jno
push
jp
add
ins
movs
or
xlat
mov
push
add
dec
mov
or
mov
xchg
sbb
xchg
lock
or
mul
cmp
out
(bad)
inc
pop
jle
pop
jecxz
xchg
push
mov
bound
(bad)
cwde
dec
loop
out
loopne
bound
into
(bad)
mov
lods
cmp
jnp
jg
jnp
sbb
mov
xchg
(bad)
(bad)
cmp
scas
dec
fild
je
leave
sub
cwde
sti
xchg
ret
loope
retf
add
push
scas
push
cmps
sub
pop
mov
pop
push
adc
in
mov
stos
pop
sub
inc
xor
push
pop
movs
or
xor
jecxz
lods
adc
fnstcw
mov
loopne
dec
xchg
lahf
mov
js
sub
aad
div
jecxz
or
push
pusha
movs
mov
pusha
sar
ret
mov
add
xor
xchg
dec
dec
rcl
push
lahf
mov
sbb
push
in
pop
mov
cmc
or
sbb
jo
popf
sub
pop
arpl
(bad)
aam
push
in
xor
dec
repnz
rol
sbb
(bad)
ins
push
jns
cmp
mov
and
in
adc
in
xchg
leave
js
lods
and
(bad)
pushf
mov
outs
add
stos
mov
loopne
jbe
jmp
sub
stc
sub
sbb
sbb
lock
cmp
sbb
call
bound
or
lods
sti
repnz
stc
and
mov
aas
dec
xor
mov
adc
lock
mov
sub
in
push
pop
retf
mov
xchg
mov
push
cmp
push
lds
xchg
outs
popf
rcl
xchg
fidivr
pop
repz
inc
test
lods
add
and
and
push
outs
cmp
adc
and
cmp
and
jg
mov
ins
loope
or
lea
test
in
clc
pushf
adc
push
dec
rcr
shr
sub
inc
das
je
xchg
mov
jp
and
scas
sbb
cwde
dec
inc
dec
xchg
test
cmp
call
pop
es
mov
cmps
cdq
mov
or
icebp
sbb
push
sub
out
cmp
mov
push
cmp
pop
jp
sub
cmp
jnp
cmp
push
push
sti
hlt
mov
add
adc
jp
ror
stc
js
jns
mov
enter
inc
adc
jo
xor
push
cmp
(bad)
adc
(bad)
jno
dec
mov
nop
imul
xor
test
cmp
bound
pop
sbb
and
push
fnstcw
jge
jbe
test
(bad)
mov
pop
pop
push
add
movs
ins
fwait
dec
mov
aam
imul
js
inc
ins
stos
movd
dec
push
loope
and
xor
dec
cmc
dec
cmp
adc
sub
lods
push
(bad)
pop
in
adc
call
pusha
jl
test
in
pop
dec
pushf
pop
aas
jp
or
sbb
addr16
mov
sbb
icebp
sbb
mov
and
loopne
pop
nop
dec
(bad)
mov
or
dec
pop
mov
inc
mov
jle
test
adc
and
mov
cwde
repz
pushf
test
ret
xor
sub
movs
mov
jnp
pop
dec
push
push
stos
and
sbb
xor
jo
xchg
int3
ror
inc
out
mov
sub
ror
into
cld
xchg
xor
xchg
jmp
adc
adc
jmp
ins
mov
rcl
mov
mov
jns
mov
out
push
fwait
dec
sbb
push
retf
pop
call
jmp
jae
mov
pop
outs
fwait
cmp
mov
daa
data16
stc
cmc
inc
add
leave
push
std
fist
ja
lods
cmp
pop
pop
in
in
lods
mov
cmp
mov
aas
repnz
push
scas
sbb
repnz
add
arpl
xchg
popf
out
out
or
mov
add
push
repz
dec
push
adc
test
out
inc
push
shr
jl
cmps
paddw
xchg
and
jmp
pop
cmp
fldenv
xor
jne
sbb
retf
call
mov
outs
repz
lods
jle
mov
xchg
jmp
dec
mov
xor
mov
push
add
(bad)
fsubr
jmp
cmc
xchg
imul
fldcw
aaa
test
mul
out
(bad)
mov
pushf
dec
jg
aam
adc
xor
push
pop
adc
jae
sbb
loop
mov
lea
call
mov
sar
sub
push
sub
inc
(bad)
scas
push
push
push
cld
hlt
iret
xchg
mov
add
mov
out
or
and
fidivr
jp
iret
mov
or
jle
gs
in
xchg
rcl
shl
(bad)
sbb
lods
ss
cld
cmps
xor
call
cmp
in
pop
nop
iret
lock
cmp
iret
test
in
mov
inc
mov
and
push
outs
xor
int3
cmc
sar
add
(bad)
sbb
rcl
dec
mov
jp
push
add
xchg
sti
bound
and
pop
arpl
mov
loopne
jmp
or
sar
jo
out
mov
popa
jno
or
into
xlat
sbb
push
or
ins
loop
push
sbb
xor
mov
(bad)
jle
cmp
icebp
and
jns
lods
jmp
out
pop
aas
pop
inc
in
sti
xor
jmp
test
push
mov
mov
pop
jb
je
xlat
xchg
rol
inc
aaa
pusha
cli
xor
(bad)
adc
sbb
dec
retf
pop
jecxz
nop
test
scas
inc
mov
mov
call
push
imul
mov
pop
and
mov
ins
or
hlt
bound
push
sbb
adc
out
mov
int3
jge
push
pop
xor
sub
movs
pop
sbb
mov
xor
pop
push
fwait
xchg
cdq
xchg
js
mov
push
(bad)
in
out
xor
add
pop
clc
push
(bad)
loopne
push
jbe
mov
and
xchg
and
shl
fs
cmp
mov
lods
pop
add
adc
sti
mov
ins
jb
repz
sahf
ja
(bad)
lods
pop
ud1
pop
adc
mov
mov
cmps
stc
iret
mov
je
push
jae
(bad)
les
shr
pop
jmp
(bad)
mov
aaa
fiadd
leave
pushf
xlat
mov
adc
retf
loopne
jmp
mov
call
mov
add
jle
mov
xor
or
imul
dec
movs
sbb
fcomp
inc
dec
dec
bound
bound
call
inc
lahf
pop
movs
outs
dec
push
mov
out
bound
add
sub
lock
inc
outs
inc
add
add
popf
fidivr
test
popa
sbb
xchg
mov
jae
add
scas
cmp
mov
into
nop
in
jbe
mov
mov
cmovne
jns
jp
lock
inc
pusha
fsub
es
arpl
fs
jg
xchg
lock
add
adc
out
retf
(bad)
cli
cmc
mov
mov
jnp
dec
jmp
in
and
sub
(bad)
nop
mov
sti
das
stos
call
mov
add
sub
inc
pusha
jnp
mov
mov
mov
out
fwait
xor
mov
ret
pop
les
mov
cmp
and
inc
cmps
stos
dec
add
adc
pop
in
and
or
daa
call
mov
or
jmp
out
mov
test
retf
ret
cmps
test
stos
mov
or
sbb
pop
fisttp
sbb
mov
outs
pmullw
ret
loop
lea
inc
mov
(bad)
das
daa
or
xchg
outs
dec
test
or
fiadd
dec
ds
pop
xor
pop
push
imul
cmp
mov
aam
fsubr
sar
loop
jmp
loope
popa
repnz
test
out
adc
mov
call
loopne
imul
ja
cmp
add
fdivr
(bad)
sub
mov
mov
scas
jmp
inc
test
mov
dec
fsub
dec
push
fmul
pop
cmp
mov
loop
aaa
movs
xchg
pop
in
leave
ret
int
sbb
inc
inc
dec
ins
mov
push
mov
rcl
out
mov
movs
mov
lock
mov
cmp
pop
inc
mov
mov
xchg
cmp
clc
out
mov
dec
fst
icebp
cmp
mov
xchg
shl
pop
mov
push
outs
aam
push
jge
mov
sbb
add
jp
mov
(bad)
inc
add
movs
or
sub
cmp
and
dec
inc
and
jno
(bad)
xchg
js
mov
lds
mov
mov
imul
ins
es
mov
gs
cld
repz
(bad)
and
repnz
or
xor
imul
adc
test
ficom
xchg
pop
push
mov
xchg
mov
inc
hlt
cmp
xlat
ins
mov
dec
(bad)
sbb
push
sar
push
pop
mov
sbb
stc
jp
sbb
rcl
cmp
pop
rol
loop
lahf
pop
sar
cdq
jge
pushf
cmps
cmp
cmps
add
adc
neg
(bad)
adc
dec
cmp
xor
sbb
pop
cmp
hlt
and
xchg
and
shr
mov
jo
cmps
mov
lods
jmp
ds
out
ret
push
push
sbb
cmp
xchg
sub
(bad)
lods
neg
out
jno
nop
push
mov
je
or
pop
pop
jns
mov
shl
mov
mov
repnz
pop
sub
ins
sub
sub
std
bound
mov
push
or
into
sar
imul
scas
movs
in
inc
retf
or
pop
sbb
and
test
aam
in
add
icebp
inc
pop
loope
lods
and
pop
sub
add
push
fidiv
and
jmp
jg
add
push
pop
iret
cmp
dec
imul
test
jbe
or
jmp
and
lods
mov
loop
push
mov
stc
enter
lods
and
nop
iret
int
pop
xor
fisub
clc
inc
fld
jle
or
inc
push
pushf
repnz
dec
movs
daa
adc
test
cmp
jbe
dec
sbb
clc
(bad)
jmp
adc
mov
mov
enter
sbb
dec
cmp
mov
call
mov
and
mov
(bad)
jb
cwde
sub
or
push
cwde
daa
add
xchg
mov
and
add
pop
std
dec
jbe
push
call
pop
push
ret
int3
and
jle
cmp
shl
xchg
bound
test
push
outs
test
fst
pop
mov
dec
ficom
inc
fld
xchg
push
add
sub
sbb
xchg
cs
adc
inc
aad
or
(bad)
out
loop
jnp
mov
popa
movs
pusha
popa
addr16
hlt
push
adc
add
and
cmc
movs
in
int
or
loope
or
xlat
out
or
lahf
adc
mov
pop
xchg
cli
add
shr
shl
and
popa
or
or
lods
add
pop
icebp
mov
scas
int
add
cmp
mov
dec
add
retf
and
(bad)
jge
daa
in
std
mov
imul
dec
das
sub
jne
mov
and
mov
fld
sbb
jmp
xchg
into
xor
sub
push
out
fisubr
fsubr
push
ds
mov
or
mov
ins
stc
icebp
mov
lahf
test
push
fisubr
fdivr
mov
test
aam
mov
lea
fisubr
in
sub
mov
dec
popf
fcomp
jmp
mov
xchg
mov
pusha
das
jbe
and
xor
fisttp
test
out
pop
ins
retf
adc
cmp
or
fcom
pop
clc
int
mov
loopne
(bad)
inc
hlt
sub
outs
cmps
jmp
jne
add
xor
push
or
mov
jp
push
pop
jno
sti
cdq
sbb
arpl
call
sbb
cmp
sbb
outs
sub
arpl
and
or
inc
nop
div
mov
inc
loopne
xchg
les
jmp
cwde
and
mov
pop
add
dec
sar
inc
retf
(bad)
adc
(bad)
fmul
leave
push
sbb
arpl
jecxz
mov
scas
sbb
dec
inc
jnp
movs
mov
add
jne
jmp
outs
popf
cs
sub
cmp
aam
jp
popa
mov
cwde
(bad)
sbb
adc
push
dec
inc
mov
in
fild
cmps
paddusb
mov
or
(bad)
jmp
stos
push
fistp
adc
mov
inc
dec
mov
mov
das
mov
ja
xor
sbb
add
dec
(bad)
adc
inc
arpl
(bad)
cmp
pushf
mov
cmp
mov
(bad)
inc
sbb
sub
jns
mov
and
ret
vdivps
sbb
mov
push
(bad)
and
xchg
mov
dec
push
jno
jge
pushf
mov
dec
mov
mov
mov
int3
rcr
std
pusha
dec
adc
fisttp
not
and
arpl
push
imul
lahf
aad
or
mov
lock
imul
add
call
cmp
or
sbb
arpl
and
sti
pop
inc
scas
in
je
sahf
push
mov
hlt
sub
idiv
pushf
aaa
xor
ss
scas
dec
inc
mov
pop
mov
aaa
fiadd
pushf
nop
outs
inc
stos
pop
cmc
ds
(bad)
rcr
sub
pop
sbb
icebp
test
push
in
jae
inc
mov
icebp
cwde
or
(bad)
mov
not
xlat
jnp
inc
outs
(bad)
push
mov
mov
call
mov
mov
xor
xor
pop
ds
cmps
iret
jbe
dec
mov
mov
sti
mov
and
fistp
inc
sub
div
add
loope
jae
cli
cmps
dec
cmp
retf
pusha
sbb
xchg
es
and
push
jge
inc
fwait
femms
mov
lods
and
ficomp
dec
cmc
mov
xor
pop
ffreep
dec
push
jp
jne
inc
cs
mov
dec
pop
xor
pop
cmp
xor
pop
jmp
(bad)
out
push
xor
pop
loop
cmp
inc
sub
sub
cmps
xor
mov
fimul
adc
push
xchg
jl
sub
daa
pusha
sbb
adc
mov
outs
inc
sub
outs
sbb
(bad)
out
mov
iret
xor
in
jb
sbb
fisub
fimul
push
cmc
(bad)
and
popf
pushf
add
aad
adc
push
out
cli
loopne
shr
cwde
jne
das
inc
mov
outs
cmp
mov
shl
inc
xor
shl
dec
out
inc
fiadd
xchg
mov
and
loop
cmp
jle
push
retf
leave
scas
xchg
ins
sub
iret
and
das
mov
adc
loope
push
daa
nop
sti
dec
xor
cmp
ret
add
push
ins
inc
not
push
or
fistp
push
rol
out
add
out
test
in
adc
imul
loope
out
push
push
xchg
pushf
mov
or
xor
dec
loopne
sbb
mov
xor
jg
jae
(bad)
fwait
inc
add
inc
mov
mov
fadd
cmp
ins
xor
mov
or
sub
cmp
jbe
xlat
shl
sub
and
div
in
movs
adc
adc
dec
rcr
push
fldcw
dec
jb
bswap
fisttp
add
mov
lock
popa
fnsave
sbb
mov
fs
jl
mov
jl
xchg
shl
push
push
shl
sbb
pop
sbb
adc
rcr
into
xor
cli
dec
dec
aaa
test
jecxz
sub
push
xchg
js
inc
sub
inc
daa
aas
fdivr
stos
xchg
setle
cmp
jg
mov
pop
pop
(bad)
jle
jp
or
retf
cmp
loopne
sub
ja
and
imul
push
in
cmp
dec
popf
dec
(bad)
scas
(bad)
jne
pop
loopne
popa
xchg
movs
imul
in
inc
(bad)
bound
loop
test
call
pop
mov
jmp
add
sbb
mov
mov
mov
retf
fsub
(bad)
dec
push
cmc
retf
jo
push
daa
cli
mov
mov
je
fsubr
inc
icebp
ror
xchg
xchg
adc
cdq
movs
inc
imul
push
push
pop
push
cmp
shl
push
into
jmp
sub
inc
stos
aam
lahf
or
movs
mov
inc
adc
push
arpl
daa
pop
mov
mov
in
xchg
push
xchg
mov
out
ss
pop
repnz
ror
aad
xchg
jp
addr16
mov
or
mov
inc
faddp
cmps
and
pop
and
inc
mov
in
jp
add
stos
nop
sahf
or
or
test
add
out
push
shr
mov
das
cmc
in
ror
jecxz
or
aaa
outs
repz
in
sbb
sbb
xchg
fwait
mov
rol
inc
jmp
aam
iret
cmp
mov
dec
(bad)
ficom
inc
jb
movs
repnz
rcl
fdivr
aad
(bad)
leave
stc
cmps
jns
ret
daa
add
psubw
sbb
jg
sti
add
dec
pop
sahf
fisub
adc
mov
in
es
add
(bad)
sub
xchg
jmp
and
stc
pop
or
cmp
push
fnstcw
inc
and
mov
inc
pop
pop
scas
add
aad
sub
pop
scas
pshufw
cmp
jo
fld
rol
push
idiv
cs
push
dec
cmp
aad
sbb
or
mov
mov
pusha
sbb
aaa
mov
data16
xchg
push
mov
jg
inc
mov
mov
adc
inc
cmps
dec
mov
adc
and
ins
push
xchg
loope
ficom
(bad)
adc
dec
(bad)
out
aam
sub
int
mov
add
push
mov
xlat
push
(bad)
aad
movs
sar
push
xchg
sbb
pop
mov
or
enter
ret
xor
push
repnz
les
push
ror
mov
stc
leave
fisubr
scas
cmp
mov
test
jno
xchg
sbb
enter
dec
(bad)
xchg
imul
repnz
ins
test
int
(bad)
jnp
cmp
mov
fsubr
mov
fcmovb
xor
cli
cmp
sbb
and
lahf
(bad)
and
ret
add
xchg
mov
nop
iret
cmp
ins
inc
push
cmp
or
inc
fild
jnp
push
mov
inc
retf
out
or
idiv
cmp
sti
mov
push
mov
jmp
jmp
jns
pusha
sub
fisttp
inc
or
mov
test
dec
add
inc
repnz
or
outs
xor
les
les
inc
adc
mov
cwde
or
dec
dec
daa
daa
mov
outs
(bad)
and
lods
jge
cwde
adc
cmp
ret
mov
push
(bad)
in
push
or
push
stc
add
jb
jmp
jp
movs
loope
scas
cmp
push
xchg
mov
adc
dec
push
fld
mov
mov
push
pop
ror
sahf
and
out
dec
(bad)
cmp
sbb
push
sbb
jge
pop
nop
sbb
jmp
mov
mov
sti
inc
rol
adc
stos
test
adc
popf
or
cmp
sbb
test
mov
jb
inc
pop
in
adc
shr
push
jb
(bad)
cmp
sbb
xchg
push
xchg
into
mov
hlt
into
pusha
adc
retf
sbb
fild
jge
mov
fcom
hlt
pop
dec
pusha
jmp
xor
inc
mov
inc
jle
inc
rcr
mov
mov
cmc
or
adc
push
adc
adc
loop
int
push
adc
test
adc
pop
mov
rcr
test
repnz
test
jl
dec
aas
cmp
mov
icebp
or
(bad)
dec
inc
fldenv
push
push
pushf
pushf
ror
dec
pushf
arpl
jo
jg
add
add
push
lods
push
pusha
sbb
out
lods
jecxz
mov
aaa
inc
int
xchg
mov
adc
mov
xchg
scas
into
and
dec
ret
fnstcw
stos
call
sub
add
(bad)
cmps
popa
fcmovnb
inc
movs
retf
mov
cmp
dec
int
pop
xchg
sub
sahf
call
pop
ss
cmps
int3
mov
ins
xlat
mov
mov
shl
adc
jbe
pop
ficom
push
cmc
fadd
xchg
jno
cli
push
mov
pop
dec
nop
pop
pop
add
shl
ret
sub
sbb
add
xchg
aam
outs
lods
push
push
cmp
or
stos
pop
pop
icebp
and
loopne
aam
mov
sub
push
addr16
test
enter
inc
add
cmp
xlat
sub
clc
nop
cwde
jne
cmp
ret
ja
neg
repz
aad
jno
loope
js
sbb
sub
push
cmp
inc
inc
popa
ret
jecxz
pop
jbe
lahf
sbb
out
push
ins
mov
inc
call
rol
jmp
jno
lds
je
add
mov
shl
mov
mov
pop
cmc
adc
jmp
xor
nop
div
and
(bad)
(bad)
arpl
add
inc
enter
sub
dec
pop
lods
out
cli
push
(bad)
ja
outs
pop
aad
(bad)
fisttp
lahf
fldenv
(bad)
fcom
cmp
scas
mov
push
aaa
lock
push
xchg
loope
cdq
or
ss
xor
std
xor
add
xor
fcmovu
call
xchg
into
pop
xor
jo
(bad)
cmp
jp
pushf
call
add
sub
inc
jg
outs
xlat
xor
pop
and
xlat
out
mov
xchg
xchg
inc
add
(bad)
nop
or
(bad)
sub
out
jecxz
iret
xchg
inc
cmps
dec
mov
cli
adc
fincstp
add
mov
adc
push
add
fs
sub
mov
(bad)
call
and
loop
inc
sti
mov
in
fisub
cmc
jmp
and
jae
jecxz
adc
in
mov
ins
lea
mov
loop
mov
pop
loopne
rol
jmp
xor
fiadd
or
in
leave
xchg
outs
sti
fs
pop
cmp
mov
push
(bad)
scas
xchg
xor
push
dec
fmul
xchg
jmp
mov
fldenv
mov
test
add
ins
mov
shl
push
mov
mov
cmp
cmc
shl
dec
xchg
or
ds
pop
sbb
std
add
es
mov
mov
cmp
pop
nop
sub
test
xlat
jmp
pop
cmp
xchg
call
xchg
js
mov
add
(bad)
or
push
mov
(bad)
arpl
pop
addr16
jmp
jmp
aaa
imul
ins
mov
rcl
mov
out
xchg
icebp
stc
mov
pop
jmp
nop
clc
bound
lahf
enter
out
pop
fnsave
out
inc
jmp
push
push
lahf
push
out
pop
push
inc
fnstenv
xchg
adc
adc
jns
mov
and
shl
jmp
xchg
out
push
lds
enter
(bad)
aaa
enter
xchg
popf
lock
(bad)
out
xchg
out
(bad)
and
out
dec
shr
(bad)
jb
mov
iret
pop
mov
sets
syscall
and
xchg
scas
xchg
outs
iret
imul
aas
out
sub
scas
jmp
push
push
ins
into
imul
jecxz
jbe
mov
cmp
cmp
bound
dec
cmp
inc
std
mov
jle
loope
arpl
inc
dec
ss
mov
fs
dec
outs
push
push
cwde
test
or
inc
out
dec
jmp
xor
imul
imul
mov
jge
stos
mov
push
adc
cmc
mov
sub
pushf
sbb
mov
adc
mov
mov
inc
xchg
shl
iret
mov
dec
mov
cmc
retf
fdivr
pop
lahf
cmp
or
ss
retf
out
cmc
push
sbb
push
callw
jnp
cmc
push
jnp
dec
adc
xlat
cmp
sti
test
push
cmp
cmp
into
mov
nop
inc
mov
cmps
mov
or
test
push
repz
nop
loope
mov
adc
pusha
ds
mov
fs
(bad)
arpl
(bad)
sub
pop
and
shl
popf
inc
adc
mov
test
and
nop
test
jle
inc
cld
fadd
outs
cmp
pop
or
mov
ret
aaa
adc
fild
dec
sbb
cld
jo
clc
in
jl
xchg
lods
adc
inc
jbe
push
fcomip
xor
test
xor
sub
adc
(bad)
pop
es
mov
out
push
jecxz
ins
xchg
enter
or
pop
fcomp
mov
mov
mov
dec
mov
ficomp
retf
xchg
cld
ret
cs
mov
or
stos
outs
aam
and
xchg
xchg
jg
addr16
mov
pop
and
cmc
sbb
mov
pusha
jecxz
fnstenv
add
sti
sbb
xor
pushf
and
inc
add
pop
add
and
xchg
nop
xor
hlt
ja
xchg
div
sbb
(bad)
shl
inc
mov
mov
add
add
sbb
sbb
outs
xchg
ins
repz
dec
jnp
fdivr
pop
cdq
clc
cwde
pop
cmp
mov
daa
out
mov
jl
jge
loope
dec
xchg
imul
adc
(bad)
hlt
xchg
test
mov
cdq
fdivr
jecxz
jnp
sub
call
lock
out
and
iret
outs
inc
sbb
fsub
push
sbb
jo
daa
ins
and
jno
lahf
fsubr
adc
dec
call
xchg
sbb
pushf
sub
movs
push
scas
xchg
in
jae
sbb
push
popa
inc
or
mov
scas
inc
arpl
push
push
mov
lock
fprem
push
cmp
js
mov
lods
(bad)
sbb
cmc
pop
mov
in
xchg
mov
xor
jmp
test
jo
pop
adc
mov
retf
lods
cwde
leave
adc
(bad)
cli
(bad)
jmp
mov
aad
jno
lock
call
stos
lds
sbb
outs
push
push
adc
mov
(bad)
or
dec
or
mov
cli
push
aam
das
leave
pop
push
adc
pop
mov
lahf
mov
in
push
in
scas
repnz
call
fisubr
in
pusha
mov
fwait
mov
push
cwde
psubusb
fst
push
mov
popf
hlt
push
ds
rol
and
aam
cmps
inc
jmp
jbe
ins
xchg
jle
xchg
pop
out
mov
sub
pop
in
add
fsub
sub
dec
xchg
inc
(bad)
mov
cmp
in
xchg
ja
leave
cmp
xchg
cld
cmps
test
dec
inc
out
out
mov
addr16
jg
ja
jmp
and
arpl
lea
ret
in
leave
es
out
mov
(bad)
mov
and
stos
push
jnp
fistp
adc
lock
jge
lea
or
les
mov
sbb
retf
jns
or
add
push
mov
lods
stc
rep
push
ds
iret
aas
add
or
mov
fs
sub
pop
(bad)
jmp
std
pop
out
(bad)
cld
xchg
xor
sahf
popf
jp
aas
cmp
xchg
push
loopne
adc
shl
and
inc
imul
sub
in
stos
inc
xor
mov
add
sub
mov
das
pop
shl
cdq
pop
lods
jl
aaa
sbb
stos
xor
xchg
pop
xchg
(bad)
push
aam
mov
leave
xor
adc
addr16
retf
xor
adc
enter
in
jae
jno
jmp
inc
jmp
xor
inc
push
cs
cmovs
cmp
ja
and
js
es
mov
es
pop
into
mov
jmp
mov
inc
(bad)
sub
cmp
bound
jno
and
and
loop
xchg
jecxz
push
xor
xor
mov
or
scas
aaa
clc
or
push
sub
jmp
push
test
arpl
jg
jge
add
mov
imul
fsubp
rcr
int3
sub
mov
pop
lods
xor
retf
xor
stos
adc
add
jl
aas
inc
cmps
call
pop
push
imul
aas
leave
mov
mov
adc
gs
xchg
sbb
sub
dec
addr16
clc
mov
jbe
push
sbb
push
mov
outs
fmul
xor
or
loop
add
mov
and
pop
jmp
aad
movhps
movs
cld
test
mov
sar
xor
mov
(bad)
push
call
dec
pop
(bad)
les
repz
(bad)
popa
sti
loopne
in
pusha
jbe
adc
dec
cmp
loopne
sbb
inc
nop
sbb
sar
xor
daa
scas
xchg
mov
shl
call
or
xchg
xchg
nop
pusha
jmp
fstp
cmp
and
ret
pop
cld
mov
mov
les
out
jmp
(bad)
cmps
lds
sti
aas
addr16
push
rcr
or
mov
pusha
xor
sti
iret
cmp
ficom
xchg
adc
(bad)
rcl
inc
fcom
data16
jae
sub
repz
dec
js
mov
xor
std
cmps
lods
(bad)
dec
xchg
xchg
ss
and
imul
(bad)
and
sbb
mov
cli
xchg
jmp
(bad)
push
push
mov
sbb
mov
mov
push
jns
mov
shl
inc
imul
stos
xchg
icebp
sub
xchg
jp
push
call
dec
enter
pop
mov
or
sar
xchg
pop
stc
sub
pcmpeqb
sbb
not
or
std
push
mov
jp
mov
stc
dec
ins
and
jns
fiadd
mov
push
adc
imul
test
cmp
adc
std
inc
sub
pop
(bad)
mov
dec
popa
mov
add
pop
or
adc
inc
inc
lods
sub
stos
inc
pushf
cmp
mov
jae
inc
mov
sbb
in
ret
mov
inc
stos
jbe
out
sahf
cmp
adc
xchg
pop
lar
scas
repz
jg
stos
popa
pop
in
adc
mov
jns
add
aaa
iret
pop
aad
cmp
retf
lock
div
ret
pusha
cld
inc
sub
dec
arpl
xor
mov
jb
inc
or
push
sbb
pop
sub
mov
fs
mov
aam
dec
or
lods
aad
div
imul
clc
inc
sbb
inc
loope
repnz
retf
mov
ret
cld
or
mov
gs
mov
icebp
sbb
cmps
or
xchg
mov
mov
xor
ficomp
adc
aas
xchg
gs
into
movs
inc
add
ss
xor
lock
outs
es
jle
pop
pop
jno
mov
inc
outs
mov
fdiv
call
cmp
and
adc
jecxz
push
loop
adc
xor
mov
hlt
leave
or
pop
mov
or
out
stc
js
rol
pop
outs
pop
stos
sub
and
or
cmp
pop
popa
xchg
inc
inc
ror
mov
jl
dec
add
cs
sbb
pusha
ss
in
je
xchg
push
test
in
inc
and
mov
bound
adc
cmp
rcr
sbb
(bad)
lea
pop
pop
adc
pop
cmps
ror
jl
ror
(bad)
cmp
les
fld
das
push
ds
gs
sbb
inc
fldenv
jl
iret
lahf
inc
loope
mov
fcomp
ss
sbb
int
mov
into
in
icebp
xchg
addr16
xor
daa
and
push
and
dec
in
mov
fdivr
hlt
outs
ret
js
mov
mov
lea
add
call
enter
gs
mov
pop
imul
cmc
mov
into
ja
out
loop
push
mov
dec
mov
and
mov
jnp
or
mov
push
loop
pop
push
pop
or
dec
push
inc
call
sbb
repnz
and
push
push
inc
push
sbb
or
sar
imul
mov
(bad)
icebp
pop
jmp
dec
test
lds
repz
mov
loop
xor
scas
les
je
xchg
pop
xor
(bad)
xchg
and
movntq
ins
jp
stos
cli
pop
mov
sbb
sub
fwait
cmp
adc
data16
fnstsw
xor
pushf
aaa
push
xchg
push
inc
les
and
jb
xor
jmp
mov
mov
jp
mov
jno
jg
jge
jns
in
jo
sub
xor
inc
lahf
(bad)
dec
and
test
loop
jb
cmps
xchg
or
jae
data16
jne
repnz
scas
pop
jo
hlt
icebp
or
fst
adc
popf
iret
sbb
add
pop
dec
mov
es
sbb
repnz
rcl
outs
and
in
pop
push
es
clc
cld
les
jo
jp
hlt
shl
inc
clc
adc
repz
test
or
out
out
repz
adc
movs
adc
std
arpl
mov
hlt
add
cli
inc
scas
pop
rol
ret
int3
sub
jge
fistp
sti
mov
cmp
xchg
ret
jb
mov
inc
lahf
inc
addr16
call
pop
mov
shl
test
mov
lock
adc
(bad)
jge
cdq
or
adc
inc
cld
cmp
mov
cmp
shl
xor
ja
pmullw
sub
xchg
fimul
adc
mov
jns
int
leave
pop
pop
jbe
scas
sahf
push
mov
retf
sbb
mov
adc
cmp
dec
repz
ins
fcomp
fmul
adc
imul
jbe
sub
(bad)
push
add
int
je
sbb
add
test
retf
or
mov
add
sub
and
hlt
nop
push
or
add
ins
(bad)
(bad)
inc
push
push
mov
stos
xchg
add
ret
xor
dec
push
jbe
in
xchg
sub
push
mov
adc
outs
inc
pusha
dec
dec
jl
jg
mov
push
dec
lahf
mov
or
or
mov
fadd
pop
clc
mov
loopne
cmps
fdiv
cmp
jecxz
xchg
inc
push
or
or
mov
jg
add
mov
inc
ja
sbb
cwde
cmps
jb
call
mov
(bad)
mov
addr16
in
push
sahf
and
loope
xchg
js
mov
sbb
ins
xrelease
jne
loope
xchg
push
mov
adc
xchg
or
test
icebp
push
inc
jecxz
adc
jo
inc
xchg
push
fst
jo
mov
mov
call
sbb
and
inc
stc
imul
push
and
clc
and
cmp
pushf
cs
xor
call
jge
push
dec
pop
iret
in
sbb
ja
inc
ds
je
clc
jmp
mov
add
xchg
inc
stos
jns
imul
ss
sbb
bound
jnp
shl
cld
mov
in
in
popa
mov
pop
pusha
sar
(bad)
pop
out
dec
add
cs
adc
pop
shl
pop
repz
adc
sbb
ds
cmp
cs
es
inc
jle
pushf
inc
adc
inc
xchg
sub
add
mov
jecxz
je
lock
mov
pushf
popa
mov
adc
out
loope
dec
scas
xor
test
(bad)
cdq
(bad)
retf
dec
rcl
jg
jmp
hlt
mov
or
retf
xlat
dec
push
push
or
pop
mov
aam
(bad)
outs
and
cmp
das
ds
ins
mov
outs
retf
dec
xchg
movs
adc
inc
popa
sbb
adc
pop
mov
in
inc
pop
sbb
xor
imul
ds
mov
dec
loop
sar
sbb
and
clc
xor
leave
test
jb
int3
jo
ret
imul
jbe
jl
dec
pop
dec
rcl
ds
sub
cmp
cmp
add
jnp
push
ins
aaa
mov
mov
je
or
imul
(bad)
push
das
test
fcmovb
inc
cmp
xor
retf
pop
adc
and
mov
cs
sbb
push
jecxz
(bad)
push
bound
retf
dec
or
in
add
stos
sub
scas
inc
push
push
pop
hlt
stc
jb
(bad)
xlat
pop
jp
(bad)
lods
inc
(bad)
mov
dec
lods
es
inc
(bad)
mov
(bad)
int3
jmp
es
mov
mov
add
xchg
shr
or
(bad)
cmps
cmp
test
mov
repz
adc
ret
out
add
fisttp
pusha
imul
aas
add
repz
pop
push
bound
pop
mov
mov
mov
lds
stos
cdq
add
dec
movs
mov
leave
shl
cmps
das
stc
mov
rol
xor
sti
dec
jb
sar
arpl
retf
mov
ficomp
jmp
sub
pusha
ror
movs
cmp
jne
push
cmp
mov
aam
or
mov
jno
adc
mov
xor
xchg
daa
mov
push
inc
nop
mov
xchg
cmp
push
in
xchg
sbb
mov
jnp
cmp
mov
in
add
or
add
push
add
mov
repz
add
add
mov
push
scas
xchg
xor
dec
or
iret
adc
jl
mov
mov
pusha
test
jp
pop
movs
adc
inc
or
out
lods
out
jno
mov
sub
dec
vmovaps
daa
fwait
out
outs
rol
dec
xor
adc
int
out
lods
jg
and
jno
js
push
aaa
inc
popf
add
dec
or
add
in
cli
std
or
pop
pop
push
ins
ror
cmps
jecxz
inc
push
ins
pop
shl
xor
add
xchg
add
(bad)
dec
and
mov
jmp
add
sbb
xchg
data16
pushf
jns
mov
stc
jns
add
mov
enter
adc
dec
mov
and
int
push
inc
inc
idiv
xchg
mov
push
lock
loopne
mov
dec
or
jp
int3
cmps
fwait
cwde
dec
imul
out
push
cmp
repz
jo
sub
pop
in
or
test
shl
jno
inc
outs
pusha
sub
sub
out
sbb
sub
jae
loopne
xor
adc
pop
push
ret
stc
pop
xchg
std
arpl
(bad)
and
mov
xor
sbb
xchg
pop
add
xchg
adc
adc
(bad)
push
mov
out
or
inc
mov
nop
jmp
call
aaa
mov
inc
adc
lds
pop
cld
jle
jmp
cld
jmp
in
in
xor
or
cmp
cmp
jcxz
imul
dec
jg
test
mov
add
fld
or
inc
push
add
into
xchg
ficomp
jp
jno
pop
mov
fldcw
rcl
fucom
cmp
inc
into
cmp
gs
repnz
cmp
cmps
cmp
setge
adc
mov
xor
and
ss
pushf
sub
fsubr
cld
movs
xor
je
sub
cld
out
xlat
out
pop
inc
loope
sub
and
das
js
imul
stos
jmp
mov
out
mov
in
retf
fwait
sub
add
and
(bad)
pop
cmp
inc
push
nop
out
inc
(bad)
jl
lods
popa
push
cmp
sbb
movs
out
in
cmps
pop
push
dec
jne
fwait
jecxz
xchg
(bad)
ror
xchg
arpl
into
add
push
fsub
or
fstp
push
data16
aaa
fwait
pop
add
jmp
imul
push
in
xchg
aam
dec
mov
mov
stos
inc
fldcw
fsubr
dec
mov
mov
dec
out
mov
stc
sahf
rcr
dec
repnz
into
jo
test
js
gs
loope
(bad)
mov
or
(bad)
and
xchg
adc
sbb
dec
inc
mov
xchg
pop
cmp
sub
das
or
push
movsx
or
shl
and
popf
inc
sub
inc
inc
outs
pop
jmp
cli
sidtd
(bad)
xor
fcomip
outs
and
jle
xor
jl
(bad)
sub
mov
fdivr
test
fcomip
pushf
push
retf
inc
adc
add
js
sbb
xchg
jae
ret
mov
fwait
test
arpl
sbb
das
imul
repz
jg
ds
mov
push
fimul
dec
pxor
jno
pop
inc
das
cli
aad
bnd
les
rcl
cwde
ins
pop
fstp
push
popa
xor
ins
loopne
push
or
mov
dec
scas
mov
stos
shr
inc
je
xchg
(bad)
in
jbe
fcom
mov
mov
pop
push
push
pusha
pop
lea
dec
xor
jae
mov
clc
or
loopne
(bad)
sbb
xchg
pop
pop
clc
xor
popa
ins
mov
add
dec
sbb
das
cs
popa
xor
sub
inc
daa
xchg
sub
ss
push
call
mov
mov
push
popa
cmps
out
scas
icebp
sub
ret
ins
push
jmp
sub
mov
js
jle
sbb
mov
mov
xchg
arpl
cld
movs
(bad)
xchg
jae
jo
mov
ret
ror
push
pushf
gs
outs
cmc
std
scas
add
ds
popf
push
es
xchg
outs
push
imul
mov
add
pop
test
sar
sub
bound
mov
ror
retf
movs
pushf
sbb
push
or
add
lods
test
xchg
sbb
das
dec
push
xchg
mov
dec
in
jo
movs
cmc
sbb
adc
dec
inc
mov
sub
test
pushf
xchg
lods
mov
fmul
jmp
aaa
shr
mov
push
sub
mov
xlat
lahf
(bad)
loope
pop
(bad)
jae
fisttp
and
in
nop
mov
xchg
int
mov
mov
inc
gs
mov
or
mul
dec
sub
inc
sub
lahf
mov
jg
jne
sub
rcl
lock
inc
adc
or
pushf
sub
in
jo
add
sub
sbb
sub
pop
in
mov
adc
dec
test
adc
nop
inc
xlat
pop
pop
cmp
neg
rcr
ds
or
pop
sti
inc
(bad)
and
pop
inc
push
mov
and
icebp
mov
mov
and
fisttp
mov
add
sahf
xchg
fs
jmp
enter
ret
nop
xor
cli
and
jmp
ret
pop
dec
lahf
iret
sub
enter
lods
test
jo
mov
mov
jne
adc
nop
(bad)
push
imul
mov
js
xchg
enter
mov
mov
int
shl
(bad)
mov
fnstenv
call
cmp
sub
fwait
push
retf
fld
inc
mov
mov
inc
aaa
pop
(bad)
div
imul
mov
es
fwait
jecxz
mov
mov
out
icebp
(bad)
mov
cmps
dec
and
aaa
in
popf
pop
lock
mov
sbb
adc
xchg
test
xor
pushf
xchg
and
xor
push
or
xor
es
mov
sbb
mov
lods
cmp
sub
movs
jecxz
(bad)
dec
pop
mov
inc
mov
inc
push
loope
pop
push
lea
mov
mov
or
sub
sar
repz
xchg
loop
fwait
pop
cmp
aaa
jecxz
jl
aam
repnz
neg
aas
shl
add
je
dec
inc
fcmovu
clc
lds
pop
add
scas
cmps
or
dec
push
cdq
mov
push
(bad)
ja
jo
daa
rcr
sbb
rcr
mov
or
push
popf
xchg
xor
pop
push
and
nop
clc
adc
dec
icebp
js
pop
inc
mov
push
mov
xchg
std
mov
jp
scas
pusha
into
mov
xchg
jno
pop
adc
or
pop
mov
pop
sub
aam
sbb
jge
add
sub
add
loope
sub
fdivr
stos
push
sbb
or
mov
or
shl
xor
jno
loopne
push
ins
(bad)
aad
jno
das
jns
push
xor
and
sbb
sar
jbe
add
inc
add
cmp
or
and
xor
sub
cld
adc
cmps
sbb
test
inc
in
jecxz
lods
mov
clc
push
js
xor
scas
lock
adc
mov
hlt
mov
fadd
icebp
int
xor
ins
hlt
and
retf
(bad)
cmp
cli
mov
mov
sbb
mov
lods
lahf
ret
inc
xor
aas
stos
sar
dec
pop
aad
imul
fcmovu
mov
xchg
and
das
in
adc
retf
fisubr
rcl
inc
dec
in
mov
out
jae
outs
fstp
adc
scas
push
in
repnz
cs
push
adc
jge
loop
(bad)
clc
inc
loope
aas
icebp
sub
adc
sub
fwait
and
stc
xor
mov
mov
push
fdivr
cmp
lock
jecxz
mov
push
xchg
push
pushf
mov
dec
lods
xchg
mov
and
push
push
sbb
pushf
dec
movs
nop
jmp
out
jb
cli
lods
mov
push
sahf
(bad)
pop
std
push
jb
push
cmp
ins
push
stos
jno
push
sbb
add
cmps
ret
and
push
fwait
(bad)
pushf
inc
jns
ror
jecxz
push
push
mov
pushf
or
sub
sbb
clc
xchg
pop
adc
jno
or
push
mov
xor
or
dec
cwde
aam
sub
(bad)
call
add
test
ins
(bad)
retf
jecxz
xchg
hlt
jmp
mov
stos
pop
dec
or
add
sbb
sub
mov
adc
or
hlt
mov
lds
mov
or
push
mov
je
ds
add
(bad)
pop
shl
jns
or
sub
adc
push
dec
test
sub
add
xchg
push
dec
mov
stc
popf
rcl
cli
sbb
ret
push
push
sub
les
in
mov
out
xchg
mov
pop
sbb
(bad)
pop
xchg
sbb
pop
adc
mov
das
lock
and
into
stos
sahf
jo
pop
sti
push
test
and
sbb
pop
aaa
or
push
aad
lods
pushf
test
mov
pusha
pop
xor
int3
fsubr
dec
aaa
jecxz
and
sahf
or
fild
lods
mov
xlat
int
stos
jle
clc
jp
add
dec
cmp
lds
sub
or
scas
or
(bad)
clc
sbb
inc
push
jae
daa
ja
cmp
mov
sbb
pop
sbb
dec
cmps
fild
dec
cs
addps
mov
or
inc
call
stc
mov
push
jp
cmc
popa
nop
inc
out
mov
ret
sbb
(bad)
dec
data16
xchg
mov
jbe
add
cmp
fwait
aas
push
test
sti
add
ror
and
dec
sub
adc
pop
imul
std
loope
pushf
sbb
mov
xchg
and
ss
jg
or
dec
repnz
fisubr
sar
mov
xor
(bad)
fcom
movs
fld
pop
out
test
aam
call
mov
mov
jp
and
mov
xchg
test
push
cmp
push
mov
ss
mov
and
psubsw
and
in
neg
aaa
xor
mov
(bad)
data16
(bad)
fidiv
enter
leave
inc
fcomi
aas
jecxz
push
pop
ficom
test
leave
dec
add
pmulhw
jo
fdivrp
rol
out
mov
test
dec
stc
cmp
jne
mov
shl
ins
add
ud0
add
push
daa
nop
clc
jmp
jb
cs
pop
jg
mov
add
shl
cli
fistp
test
xor
adc
dec
cmp
js
jmp
jae
mov
add
lods
mov
and
cmp
rcl
sbb
mov
mov
sub
es
(bad)
cli
push
shr
pop
add
cmp
mov
mov
pop
fsubrp
sub
mov
push
xchg
pop
and
in
or
jl
out
sub
(bad)
repz
aad
cmp
out
jp
sub
jecxz
sub
sahf
inc
fcom
mov
mov
(bad)
cdq
xchg
mov
sub
xor
and
dec
call
fucom
or
xor
setnp
xor
jl
(bad)
cmp
dec
mov
adc
shr
aas
cmp
lods
clc
mov
xor
ret
test
adc
sahf
nop
les
pop
in
or
xchg
(bad)
fcomp
push
int
mov
mov
adc
push
adc
es
pushf
out
xor
loope
(bad)
pop
push
daa
std
cwde
call
pop
adc
mov
imul
mov
dec
inc
bnd
ins
aaa
adc
adc
pop
jo
xlat
mov
loopne
push
sub
pop
sub
or
push
cmp
out
punpckhwd
or
mov
cli
lea
cmc
fisubr
loop
xchg
adc
ror
pop
shr
fistp
aad
add
mov
cmps
addr16
cmp
out
xchg
mov
popa
nop
scas
cmp
movs
int3
xor
loop
mov
sub
into
xor
and
shl
mov
cmp
(bad)
test
xor
cmp
test
sar
xor
in
sub
push
xchg
sbb
in
test
rcl
xchg
clc
add
ret
leave
inc
or
call
push
push
out
add
movs
arpl
das
cmp
rcr
test
xchg
sub
push
add
push
xchg
mov
popa
pop
das
dec
add
inc
nop
lods
mov
push
mov
lods
aaa
lods
sbb
in
iret
or
pop
out
adc
(bad)
stos
fistp
mov
lahf
mov
cld
mov
and
or
cdq
(bad)
mov
dec
pop
mov
cbw
(bad)
icebp
fsubr
movs
ins
push
xlat
clc
xor
int3
push
push
lock
sub
pop
cmp
xlat
add
mov
xchg
and
into
mov
push
xor
aad
leave
push
xchg
stc
and
pop
xchg
jno
aaa
sti
inc
jecxz
test
push
mov
inc
ds
in
(bad)
mov
mov
pop
mov
push
or
sbb
push
and
sahf
mov
xor
jno
add
shl
sub
inc
iret
outs
xchg
rol
cli
jne
jp
push
rol
pop
xor
dec
es
sar
push
shl
std
add
mov
loop
inc
mov
cs
pop
add
fsubr
out
xchg
inc
push
test
in
cmp
dec
repnz
cmp
mov
jge
sbb
pop
add
sti
pop
call
adc
imul
jns
gs
fidiv
cwde
push
mov
push
push
and
cmp
mov
pop
mov
pop
lock
or
lock
dec
adc
mov
(bad)
and
fwait
into
icebp
push
sub
sub
adc
into
cdq
push
into
out
movs
popf
rol
jmp
lods
cmovbe
outs
adc
and
in
cmps
or
and
cmps
sub
mov
js
adc
mov
xchg
pop
mov
arpl
scas
(bad)
xchg
ror
pusha
(bad)
push
inc
mov
cdq
test
push
pop
std
nop
inc
ret
inc
push
inc
loope
or
sbb
int3
lahf
xchg
shl
(bad)
leave
dec
(bad)
ror
pop
dec
jge
in
jecxz
mov
jne
xor
or
dec
lods
mov
test
mov
jbe
mov
loope
and
pop
test
mov
mov
and
orps
mov
cli
xchg
movs
pop
int3
push
pop
pop
imul
ja
xor
inc
jmp
pop
pop
test
pop
push
mov
dec
sub
pop
pop
push
xchg
xchg
mov
lods
cmp
or
pop
and
push
xchg
sub
mov
stos
dec
or
adc
repz
jo
aad
sbb
popf
gs
and
adc
xchg
retf
js
repnz
call
mov
cwde
movd
scas
in
jp
lahf
jno
inc
mov
push
mov
clc
jecxz
xchg
scas
mov
xchg
xor
js
or
loopne
call
shl
dec
cs
sbb
or
push
inc
mov
mov
jp
pop
pop
push
add
jbe
in
push
mov
push
out
(bad)
cmp
adc
outs
repnz
cmp
xchg
jmp
es
stc
aam
imul
leave
mov
shl
ins
pop
(bad)
lea
mov
mov
scas
popa
push
mov
pop
bound
popa
sbb
and
and
pop
sti
movs
in
ins
mov
push
dec
sbb
mov
adc
and
int3
sub
dec
loopne
pop
or
and
pop
mov
std
jge
push
cmp
push
xchg
nop
stc
xchg
or
cmp
outs
mov
inc
adc
mov
cmc
jp
aas
push
mov
add
push
aam
cdq
dec
je
mov
xor
fnstenv
mov
ds
and
inc
add
push
test
add
push
cld
cli
sbb
popf
int
mov
adc
jmp
(bad)
stc
mov
cmp
jne
push
fwait
sti
mov
inc
daa
cwde
or
push
xor
out
fidiv
jp
dec
and
fsub
(bad)
adc
push
mov
jne
nop
pop
nop
xchg
sbb
dec
pop
aad
je
lods
mov
adc
sbb
into
sub
and
jmp
dec
sub
test
lods
out
fld
lds
les
nop
xchg
iret
inc
out
scas
arpl
fadd
mov
imul
stos
cmc
inc
push
mov
pop
cmp
pop
daa
lock
jecxz
cwde
shr
push
inc
mov
inc
stos
xor
sbb
or
(bad)
retf
push
push
lds
rcr
add
push
int3
out
cld
pop
sbb
fsubr
aam
ja
sub
js
dec
mov
loope
out
cmp
push
pop
push
mov
leave
(bad)
sub
cmc
xor
sub
(bad)
push
xchg
sbb
(bad)
jmp
or
xchg
test
mov
ins
add
mov
or
(bad)
cwde
call
and
dec
dec
test
retf
mov
(bad)
pop
pop
jmp
mov
push
inc
inc
shl
lea
push
fucom
mov
jp
popa
mov
bound
(bad)
push
adc
dec
pusha
cs
inc
sbb
push
sti
inc
into
pop
es
pop
dec
sub
pop
dec
jg
mov
sbb
aam
push
loope
mov
jmp
jp
adc
or
outs
out
rcl
hlt
pop
sbb
and
ja
loope
std
xchg
jmp
push
add
jae
ins
in
bound
and
sbb
mov
sbb
push
aas
adc
pop
dec
lahf
mov
ret
xchg
or
jbe
cmp
out
push
xchg
mov
clc
sti
sub
adc
add
test
ins
bound
stos
mov
jmp
inc
pushf
dec
sbb
push
cmp
stc
pop
hlt
sub
cld
fidivr
mov
aas
sbb
adc
popf
push
dec
mov
adc
fldcw
pop
mov
mov
push
repz
lods
rol
jb
push
pop
jecxz
dec
mov
mov
push
push
mov
adc
add
jbe
adc
lods
jge
scas
mov
or
ror
or
sub
popf
mov
sbb
push
rol
aas
ret
mov
sub
dec
(bad)
popf
scas
and
mov
and
test
pushf
aam
rcr
aad
inc
test
rol
int3
clc
xor
imul
jbe
leave
cmp
add
aad
loopne
adc
and
les
mov
mov
loope
jb
scas
inc
xchg
test
and
repz
pop
mov
push
outs
shl
push
lods
mov
pusha
sbb
and
fldenv
pop
imul
push
add
arpl
sbb
jbe
lahf
add
xchg
shl
dec
sub
dec
jp
or
loopne
adc
loop
scas
pop
rol
cld
push
test
push
dec
lahf
xchg
push
cld
mov
repz
add
jno
mov
dec
inc
xchg
cmps
stos
sbb
cwde
sub
out
mov
add
inc
cmp
mov
retf
imul
data16
shl
mov
outs
xchg
in
pushf
cmps
or
dec
stos
(bad)
jg
cdq
test
jae
mov
repz
loop
fisttp
push
inc
mov
cli
mov
sub
pop
xchg
or
inc
outs
sub
add
ror
mov
jecxz
rcl
mov
shl
ret
lods
mov
adc
leave
sbb
imul
xor
add
or
lock
cmc
sar
(bad)
je
jns
xchg
out
push
sbb
and
or
inc
push
sub
sbb
cmp
mov
jge
test
jno
xor
jae
movs
push
int
xor
loop
mov
mov
cmp
nop
mov
mov
ja
test
(bad)
and
ja
cs
fstp
or
and
fadd
inc
cmp
mov
mov
enter
bound
xchg
shl
push
cwde
jge
mov
cmps
sbb
mov
icebp
inc
enter
push
cmp
int
movs
(bad)
jne
je
in
test
add
pushf
adc
movs
and
dec
repnz
test
add
repz
inc
pop
cmp
add
xor
fxtract
popf
push
push
loopne
and
and
adc
je
mov
sbb
in
dec
and
xlat
(bad)
push
rol
fmul
xchg
sbb
mov
jp
(bad)
jae
xchg
xchg
lock
daa
xor
addr16
pop
dec
adc
popf
xchg
and
mov
mov
jle
fs
jmp
add
and
pushf
aad
stos
mov
fwait
movs
ins
test
jnp
jp
mov
stos
icebp
xor
push
mov
mov
xchg
xchg
xor
adc
push
div
gs
sbb
bswap
(bad)
mov
push
in
jl
sbb
imul
mov
cld
xor
es
pop
lea
int3
dec
loope
popa
xor
fwait
xchg
dec
fnstcw
fcom
sub
adc
pop
js
popa
cs
cmp
sub
bswap
adc
aas
aad
push
mov
cmp
mov
das
sub
mov
cmp
and
sub
in
and
cdq
add
cmps
pop
mov
sub
loopne
mov
mov
fidiv
mov
push
mov
mov
sub
mov
out
mov
and
pusha
pop
int3
adc
rcr
hlt
dec
rcl
out
loopne
mov
push
dec
adc
mov
shl
sbb
or
jnp
mov
arpl
xchg
and
mov
sar
outs
or
fnstsw
ficomp
fcomp
sub
and
(bad)
push
inc
pop
out
mov
sbb
dec
push
inc
inc
mov
and
repz
imul
mov
cwde
jae
xchg
(bad)
test
xchg
inc
push
cmp
sti
push
fsubr
mov
fst
hlt
push
scas
cmp
jle
cmp
jo
adc
enter
jo
add
push
sbb
shr
neg
sar
popf
shl
mov
gs
push
out
add
repz
mov
fs
mov
adc
sub
lods
js
and
pop
test
test
push
popf
ror
xlat
popf
aad
fs
outs
jns
lods
adc
cmps
pusha
sti
out
add
inc
xor
mov
adc
or
ret
in
in
(bad)
in
xchg
mov
dec
lods
rcl
mov
jg
jecxz
cmp
rol
clc
pop
mov
sbb
push
or
and
bswap
call
(bad)
pop
movs
mov
sahf
jmp
sub
test
cld
xor
lods
jb
stos
mov
or
jb
ins
dec
movs
jl
or
sub
sbb
dec
pop
loop
pop
dec
sub
mov
popa
ins
movs
inc
dec
je
or
mov
(bad)
mov
mov
arpl
sub
dec
data16
ss
xlat
fldcw
jecxz
(bad)
mov
das
sub
repnz
adc
test
mov
or
jl
jmp
arpl
(bad)
cld
fcmovnu
shl
div
adc
sbb
int
rol
pusha
das
mov
outs
scas
pop
jo
cmp
push
sub
fsubr
jecxz
lock
outs
sti
in
sub
and
dec
daa
jnp
sbb
push
xor
pop
repz
mov
cld
add
aas
aas
jecxz
xchg
jbe
scas
(bad)
jbe
in
scas
outs
aad
xchg
ss
fdivr
xchg
das
(bad)
ret
mov
push
dec
ins
push
dec
mov
popa
in
rcr
mov
scas
fbstp
add
pop
adc
xor
sub
cld
sbb
leave
iret
cmp
pop
mov
xor
push
mov
lock
es
outs
cli
in
in
imul
push
pop
jge
invlpg
rcl
sbb
fstp
popa
fbstp
shl
push
jo
mov
push
sub
cmps
push
sub
push
jns
pop
cmp
test
mov
add
and
jp
sbb
sub
das
icebp
mov
dec
pop
out
cwde
pop
add
xor
ins
mov
sbb
mov
mov
xor
or
and
xor
fs
mov
inc
dec
imul
xchg
iret
cdq
adc
dec
jge
aad
iret
stos
cmps
retf
cmps
push
push
outs
daa
cmp
xor
inc
mov
int
mov
adc
leave
cwde
mov
stc
fnstenv
push
inc
mov
lea
or
lds
jno
inc
cmps
cmp
adc
jnp
(bad)
je
xor
aad
cmc
xlat
out
pop
mov
aaa
mov
adc
scas
in
push
push
add
int3
push
popf
jge
call
sub
out
add
cmp
adc
cwde
out
sti
mov
xor
pop
push
sbb
loop
ret
mov
sub
cmp
mov
push
rol
mov
xchg
pusha
ror
dec
pop
(bad)
push
push
outs
mov
lahf
sbb
retf
movs
pop
sub
adc
loop
dec
xchg
pop
hlt
dec
outs
lods
sub
and
mov
or
sbb
int3
sar
sbb
frstor
inc
dec
xor
sub
mov
xchg
inc
lds
dec
xchg
jb
push
dec
(bad)
push
fisttp
and
pop
jbe
dec
push
jecxz
enter
arpl
fwait
jno
popa
push
push
int3
cmp
push
jp
and
out
mov
lea
push
test
lds
shr
pop
mov
lahf
adc
mov
jne
inc
xchg
xchg
fwait
dec
jne
sub
inc
mov
xor
or
mov
inc
lahf
jmp
aam
aad
daa
sar
call
cmc
xor
and
mov
outs
pop
push
add
adc
add
cdq
xchg
jmp
jecxz
fs
sbb
sbb
retf
cwde
pop
mov
sub
sahf
add
scas
mov
adc
xor
mov
push
gs
push
fwait
cmps
adc
jb
fisttp
and
pop
fst
dec
adc
call
and
fdivr
sub
pop
sbb
scas
push
mov
pop
xor
add
jmp
xor
add
add
xlat
sub
test
int3
je
movs
sbb
and
or
loop
mov
xchg
mov
enter
icebp
bound
jne
and
fiadd
pop
fdiv
xchg
fcomp
ins
das
mov
mov
jae
rcr
xchg
inc
test
cli
and
add
mov
mov
push
xchg
push
dec
pop
push
nop
jb
jne
mov
jl
sbb
or
(bad)
xchg
inc
icebp
enter
movs
test
mov
mov
xor
enter
and
and
inc
jae
or
mov
pop
cmp
jns
cmp
pop
mov
scas
rcl
retf
sub
mov
push
pop
cmp
rcr
test
sbb
adc
fcomp
daa
xchg
call
(bad)
jmp
sbb
movs
add
jns
mov
test
adc
mov
dec
das
sbb
arpl
jne
and
cmp
xchg
ror
push
push
mov
das
dec
pop
xchg
scas
nop
rol
stos
mov
or
mov
test
in
test
jo
aas
out
inc
out
scas
dec
inc
pop
inc
or
(bad)
push
dec
push
out
fdivrp
ret
sub
enter
and
(bad)
dec
leave
mov
pop
xchg
xor
out
sub
movs
in
mov
adc
addr16
sar
aaa
sbb
imul
sbb
sub
cmp
retf
pop
add
or
add
dec
dec
aas
jnp
sub
xchg
mov
add
dec
mov
pop
aam
cld
adc
es
gs
cmps
cmc
std
sbb
xor
push
(bad)
xchg
inc
imul
out
js
push
sub
xor
push
adc
jmp
or
out
push
mov
shl
icebp
ss
stos
pop
cld
mov
jle
ret
je
xor
pop
sub
jmp
pop
test
data16
dec
in
movs
loopne
inc
dec
scas
or
cmp
push
mov
pop
mov
call
gs
popa
pop
mov
retf
or
xchg
mov
jecxz
dec
mov
push
mov
inc
inc
push
shl
pop
out
iret
call
or
push
cmc
mov
sti
xchg
pusha
or
adc
sbb
adc
xor
pusha
rcr
les
xor
xchg
cmp
mov
xchg
in
fwait
jp
ins
ja
push
sbb
push
mov
repz
mov
les
(bad)
enter
call
lods
popf
dec
mov
sbb
out
sub
fiadd
push
cmp
xchg
dec
and
jne
cmp
gs
mov
repz
mov
mov
test
pop
and
shl
push
jno
mov
ret
popf
or
jp
in
sub
cmps
daa
popa
scas
bound
push
(bad)
loopne
dec
or
xor
int
inc
mov
pop
pop
xchg
scas
(bad)
sub
sub
cmp
mov
adc
inc
sahf
sbb
pop
and
ja
(bad)
mov
mov
mov
jae
mov
es
out
push
pop
repnz
sub
div
xor
sub
sub
mov
inc
cld
add
les
cld
mov
stos
jl
dec
cmp
iret
push
mov
stos
sub
pop
xor
xchg
scas
in
push
cli
cmp
push
(bad)
popf
push
icebp
ficom
movs
fs
cmp
(bad)
mov
dec
div
mov
pop
pusha
in
sub
(bad)
fmul
les
xor
int3
sbb
cmp
mov
xchg
(bad)
in
inc
pop
xchg
arpl
adc
cld
retf
cmp
or
das
movs
test
mov
ds
dec
arpl
popf
sub
js
inc
jl
jp
lods
pandn
stc
loop
mov
lds
repz
(bad)
xlat
int
xchg
or
sub
mov
or
jne
cmp
inc
lods
in
push
inc
xchg
jmp
clc
mov
xchg
aam
cmp
dec
push
push
inc
dec
add
jg
mov
sar
jle
cmp
call
or
and
push
dec
push
and
pop
fadd
xchg
cld
mov
arpl
pusha
dec
dec
test
add
nop
cmc
jnp
and
xchg
jae
cmps
dec
das
in
mov
aas
xor
cmp
jmp
inc
std
in
pop
outs
(bad)
sbb
xchg
das
retf
mov
sub
add
icebp
adc
loop
jmp
stos
mov
inc
push
pop
mov
jae
loop
sub
push
mov
into
out
nop
mov
lea
xor
xor
xor
xchg
iret
push
mov
out
call
js
aaa
cld
cmp
es
push
js
fimul
jae
push
imul
add
add
inc
call
les
pop
ins
pop
mov
inc
jbe
cs
inc
aad
ror
or
xchg
nop
push
ret
out
sub
inc
sbb
xor
sbb
mov
test
out
pop
repnz
push
mov
call
(bad)
inc
rcr
es
repz
fld
lea
jb
lea
mov
(bad)
cmc
cld
test
xor
add
mov
enter
add
rcl
into
arpl
test
jmp
cs
loope
stos
mov
adc
ins
cmp
cmp
scas
or
in
dec
retf
icebp
sbb
and
icebp
jno
inc
or
mov
test
mov
daa
clc
mov
jno
mov
fcom
sbb
cmps
nop
sub
push
or
pop
fisubr
cmp
dec
and
push
dec
sbb
inc
mov
mov
mov
inc
gs
jnp
pop
xchg
add
mov
imul
imul
std
cmp
sub
add
sub
inc
ins
repnz
sahf
jo
call
pop
inc
cmp
sbb
inc
and
outs
cli
gs
retf
repnz
std
push
in
mov
inc
in
cmp
jno
push
in
loopne
mov
mov
adc
mov
pushf
lds
shl
pusha
stos
outs
jge
stc
xor
int
loop
lods
inc
sub
inc
adc
int
mov
outs
inc
scas
fistp
in
retf
push
outs
cmp
ja
pop
ins
and
repz
retf
outs
or
pop
in
scas
xchg
pop
xchg
xor
inc
ret
cwde
lods
mov
mov
mov
sbb
xchg
add
mov
pop
push
sub
out
mov
popa
cmps
add
das
and
lods
xchg
enter
dec
mov
xchg
sti
ss
and
add
and
xor
jnp
frstor
mov
jmp
into
jne
jmp
sbb
mov
add
and
mov
push
les
xlat
add
es
mov
lea
cmp
jmp
lahf
adc
jnp
jae
add
jns
jnp
pop
pop
movs
or
lds
inc
and
add
pop
push
pop
test
jge
test
jle
out
(bad)
xor
mov
int
add
hlt
mov
and
mov
mov
adc
mov
mov
cwde
dec
rol
and
fs
inc
jnp
adc
add
call
mov
pop
imul
cwde
xor
xor
sub
sub
adc
es
mov
jle
pop
in
rcl
inc
mov
popa
fwait
add
loope
sub
pop
jl
(bad)
out
xor
xchg
pop
xchg
les
xor
js
cmc
cdq
xor
scas
out
xor
std
test
outs
xchg
lahf
push
out
imul
inc
jge
rol
pop
(bad)
fisubr
lahf
dec
add
ja
push
push
and
mov
sti
adc
adc
push
xchg
stos
adc
sbb
fs
mov
test
xchg
sbb
and
mov
mov
add
loope
jmp
repnz
stos
aas
jmp
add
mov
rol
icebp
xchg
int3
inc
out
dec
xor
and
sti
scas
cmp
(bad)
pop
in
cmps
xchg
ror
pop
pop
in
idiv
data16
ret
inc
jno
mov
ins
(bad)
lods
fcom
mov
retf
adc
(bad)
sbb
add
(bad)
retf
mov
outs
ret
sub
add
rol
dec
dec
outs
mov
das
xchg
dec
xor
mov
cmp
inc
cmp
sub
jp
fwait
mov
push
das
mov
dec
std
xchg
es
call
jle
fcom
xor
mov
imul
cmp
jmp
pop
iret
jns
or
sti
jnp
adc
loop
xlat
jno
add
test
sbb
loop
dec
cwde
mov
(bad)
out
scas
jns
cmp
mov
das
adc
jle
(bad)
and
mov
popa
adc
sub
test
mov
int
mov
enter
cmp
imul
enter
jmp
repnz
xchg
and
bound
aaa
ss
xor
add
lods
enter
xchg
shr
sar
hlt
mov
(bad)
lock
outs
sahf
mov
retf
out
(bad)
pop
outs
pop
daa
lahf
push
jmp
pop
cld
jb
in
sub
ss
inc
push
xchg
adc
mov
pop
fwait
dec
retf
loope
sbb
xchg
or
(bad)
das
cmp
(bad)
mov
dec
mov
sti
mov
push
mov
inc
outs
popf
push
fs
call
mov
pop
fsubrp
mov
(bad)
lock
aad
lods
push
adc
sbb
in
into
setnp
mov
xchg
mov
test
rcr
or
adc
test
popa
leave
aam
ins
jge
mov
shl
cmp
rcl
mov
clc
(bad)
or
cwde
jle
sti
xchg
adc
inc
xchg
sbb
test
mov
dec
adc
or
fiadd
dec
xor
xchg
add
aad
push
jmp
sbb
lock
mov
out
dec
sbb
inc
mov
xchg
inc
ret
mov
sbb
jmp
or
jmp
mov
test
sub
or
adc
sbb
adc
mov
mov
cli
push
jnp
ficomp
jmp
jg
call
mov
fadd
mov
out
mov
das
clc
out
inc
and
(bad)
cmp
mov
xor
ds
mov
mov
and
shr
sbb
ror
xchg
and
inc
ret
sbb
pop
jbe
fsub
das
pushw
xor
and
push
xchg
ins
mov
test
ror
cmp
outs
lahf
jb
mov
ss
nop
loop
pop
jb
ror
std
or
jae
inc
rol
test
leave
stc
call
mov
inc
ja
push
iret
or
jge
dec
fistp
pop
(bad)
fwait
pop
jnp
(bad)
cdq
adc
repnz
retf
fneni(8087
inc
xchg
sbb
push
mov
test
push
addr16
(bad)
ins
mov
lahf
push
jge
clc
shl
movs
or
mov
(bad)
retf
xchg
outs
lds
and
test
test
(bad)
mov
push
jge
jae
mov
mov
test
jg
lods
test
push
mov
or
and
les
xor
ror
les
xor
and
xchg
sbb
push
mov
push
imul
out
push
addr16
xor
inc
push
outs
cli
cld
retf
lahf
xchg
or
and
or
test
int3
pop
jmp
out
in
mov
out
enter
dec
out
pop
sub
jb
xchg
scas
iret
and
mov
(bad)
shr
scas
outs
add
cmps
mov
and
mov
out
pop
movs
push
sbb
pop
mov
add
xchg
sti
pusha
mov
arpl
or
(bad)
xor
imul
mov
or
push
repz
xchg
shr
leave
stos
cmps
into
and
xchg
sbb
pop
mov
ja
jo
lahf
mov
bound
and
add
xor
push
sbb
add
push
mov
mov
mov
cld
int3
push
fisttp
mov
xchg
push
fisttp
imul
xchg
xor
add
sub
fld
pop
bnd
out
sub
ret
aas
hlt
adc
jp
scas
xchg
arpl
mov
hlt
nop
xor
dec
in
mov
pop
shr
pusha
xchg
add
sbb
cmp
data16
jmp
pop
es
jne
je
fild
repnz
cli
mov
ror
cli
cmp
jecxz
xor
retf
sub
xchg
xchg
lds
mov
div
xchg
xchg
inc
ficom
int3
xchg
cld
mov
inc
sub
or
jge
and
movs
adc
jae
popf
gs
mov
inc
and
pop
push
mov
fucomi
int
jge
xchg
push
dec
pop
js
and
mov
ins
push
add
movs
dec
adc
movs
mov
xlat
fucomip
std
sbb
addr16
loope
sbb
mov
(bad)
cmp
sbb
mov
jmp
ja
jle
dec
repnz
(bad)
or
js
add
mov
jmp
dec
dec
mov
std
and
cmp
cmc
lods
mov
push
das
shr
les
push
repnz
bound
mov
out
pop
inc
ss
ds
int
ins
jae
inc
mov
cmps
cwde
sahf
inc
out
aas
imul
popf
aam
jle
ins
push
ja
sbb
jp
out
adc
loopne
push
sar
adc
rcl
mov
mov
out
mov
mov
xor
or
repz
ror
or
loopne
jnp
adc
add
and
jecxz
sub
enter
inc
cwde
loopne
sbb
jb
retf
and
cmp
jle
(bad)
push
or
sbb
inc
pop
(bad)
sub
test
ins
js
add
fmul
adc
sar
sbb
fs
cmp
cwde
xlat
push
sub
std
inc
cs
add
xor
lahf
stos
mov
and
mov
retf
xchg
jb
xchg
cmps
sub
adc
jmp
mov
jg
cmp
push
loopne
data16
or
jle
es
mov
dec
ret
jne
jns
sahf
and
int
xor
les
dec
add
lods
lahf
jo
stc
push
aam
xchg
push
(bad)
ins
(bad)
inc
call
aam
add
stos
je
in
sub
xchg
icebp
mov
nop
mov
xchg
adc
addr16
xchg
sub
mov
dec
(bad)
cmp
jns
arpl
aam
imul
cdq
push
inc
inc
push
mov
das
pop
inc
xchg
mov
add
es
lods
aas
sub
xor
dec
inc
int3
fmul
mov
rcl
inc
or
inc
pop
sub
mov
pop
and
adc
nop
sub
in
sar
mov
jl
nop
sbb
outs
xor
lahf
mov
pop
aas
ret
jnp
nop
jmp
add
aad
mov
out
jle
pop
dec
in
dec
pop
or
jge
mov
repz
in
std
jae
sub
push
pop
popf
jle
mov
and
mov
ret
push
pop
mov
adc
sahf
push
add
ins
bswap
loope
(bad)
jo
sar
repnz
pop
add
add
loopne
sub
lods
sub
out
mov
movs
push
dec
or
pop
xchg
sbb
push
clc
inc
jg
mov
in
loop
int
or
cmp
loop
cmp
sub
cmp
dec
xor
sbb
xchg
rol
xchg
sti
pop
jae
lock
pop
popf
test
or
(bad)
adc
(bad)
and
aad
rol
add
pop
les
mov
sub
mov
sbb
pop
dec
sbb
in
test
dec
xor
pop
jge
inc
push
movs
std
add
ins
test
jmp
shl
dec
mov
lods
rcl
mov
iret
call
jmp
sub
cld
shr
ficomp
or
shl
aas
mov
stc
push
inc
pusha
sbb
push
test
jle
test
sub
jne
(bad)
lods
adc
mov
pusha
mov
cmp
and
je
sbb
and
xlat
jmp
icebp
das
pop
fs
jl
inc
in
fst
cmp
mov
sub
loopne
dec
fdivrp
mov
add
inc
adc
mov
sbb
bswap
inc
jno
nop
cmp
xlat
aad
dec
lock
xor
std
xor
retf
fwait
mul
inc
push
inc
shl
add
out
shr
call
std
cli
pop
jae
mov
daa
test
cmp
push
sbb
jae
lods
pop
int3
hlt
loope
loopne
xchg
fiadd
or
ja
test
movs
xor
mov
inc
enter
sub
ins
pop
(bad)
imul
push
shl
mov
push
sahf
and
data16
icebp
imul
dec
adc
mov
clc
loop
mov
cdq
aas
sbb
push
push
or
inc
lock
xor
sub
pop
pop
xchg
cwde
cmps
idiv
rol
pop
es
ret
mov
setp
aaa
jbe
or
pop
xchg
mov
sbb
xchg
xor
sbb
adc
pop
mov
or
xor
and
mov
sbb
call
sti
lods
mov
inc
mul
mov
ja
loopne
pusha
mov
cmp
push
xchg
dec
outs
push
pop
test
mov
mov
dec
jge
mov
xor
jno
outs
and
repz
mov
jno
jge
and
shld
and
jbe
pushf
nop
std
xor
loopne
ins
push
ins
mov
scas
gs
shl
xchg
sbb
ret
sar
ret
and
rcl
shl
jle
int3
imul
stc
je
popa
sub
test
mov
add
loope
iret
leave
ficomp
aaa
sti
sbb
js
aam
pop
mov
inc
rcr
jne
inc
popa
jmp
scas
enter
call
pop
mov
ja
rol
sti
xchg
mov
inc
cmp
add
xor
dec
jno
out
retf
rcl
jle
inc
das
sub
fistp
mov
pop
cdq
push
push
push
scas
outs
stos
push
cmovle
pop
push
inc
adc
xchg
cmp
and
ror
in
(bad)
or
sbb
jmp
jg
mov
mov
rol
sahf
rol
mov
sub
retf
mov
mov
sbb
int3
mov
xchg
movs
stc
mov
mov
(bad)
cmp
jmp
adc
sub
ret
out
or
sub
test
shr
xlat
jecxz
cmp
push
in
jmp
cld
sub
adc
sub
and
mov
scas
cmc
dec
shl
pushf
mov
adc
inc
sub
lahf
ror
inc
mov
mov
sbb
and
mov
pop
sbb
cmp
arpl
mov
mov
shl
xchg
jp
lds
mov
(bad)
lock
stc
popf
lea
sub
mov
retf
dec
(bad)
mov
jne
stos
jl
scas
neg
push
pop
ins
pop
jnp
movs
push
pop
pop
mov
mov
div
dec
xchg
mov
daa
leave
ss
out
sbb
cdq
(bad)
movs
dec
aaa
cli
ins
cmp
mov
fild
int3
into
sub
test
or
push
ins
cmps
ins
add
shl
ror
mov
sar
inc
add
sub
jnp
push
xchg
pop
mov
inc
aas
pushf
cmp
xchg
pop
mov
mov
inc
and
mov
dec
cmc
push
lods
(bad)
lahf
iret
sub
cmp
bound
sbb
cmp
push
xor
cmp
jmp
xchg
ret
ins
stos
stos
in
inc
imul
push
clc
cmp
sub
or
pop
nop
mov
cmps
sbb
sbb
cmc
cmp
fstp
mov
inc
adc
dec
jno
mov
rol
adc
stos
add
dec
out
aas
inc
in
int3
sbb
mov
movs
iret
test
sti
mov
loop
out
jmp
jae
cmps
push
sbb
dec
imul
mov
icebp
cmp
mov
mov
es
out
pop
lahf
xor
std
cs
lea
loope
test
or
call
push
shl
imul
nop
sbb
pop
mul
mov
iret
ds
xchg
adc
sub
or
jmp
int
test
ins
ins
aaa
fidivr
(bad)
(bad)
cli
mov
jmp
xor
xchg
push
mov
lahf
leave
xor
imul
dec
stos
mov
lods
inc
int3
fdiv
mov
inc
dec
mov
cwde
mov
mov
sub
cs
fld
sti
and
int
rol
es
sub
mov
mov
push
mov
les
lds
(bad)
xchg
sti
inc
test
(bad)
outs
shr
pusha
xor
and
mov
sar
lods
div
jae
dec
mov
lahf
jo
test
fnstsw
xchg
cmp
pusha
cmp
pop
sub
push
sbb
inc
xchg
pushf
je
dec
and
xchg
call
mov
(bad)
cmp
test
movs
sbb
arpl
repz
pop
xchg
es
mov
loop
mov
inc
shl
inc
xchg
(bad)
push
scas
fstp
push
call
ins
mov
loop
push
inc
icebp
jl
pextrw
jne
nop
dec
jl
xchg
mov
pop
ffree
push
inc
dec
popf
jo
stc
sub
sub
pop
gs
jle
scas
adc
add
sbb
or
or
pop
xor
xor
mov
shr
shl
mov
add
ins
pop
dec
mov
sbb
lods
stc
pop
push
dec
cmp
cmp
xchg
mov
inc
dec
push
mov
mov
test
add
pop
movs
adc
lds
mov
enter
lea
pushf
mov
and
or
adc
jae
dec
mov
add
push
dec
dec
imul
repz
push
cmps
push
jg
shl
adc
mov
mov
xchg
(bad)
lahf
mov
push
mov
dec
xchg
sbb
mov
je
sbb
add
dec
fist
test
or
lea
jmp
ins
sbb
jbe
ins
lods
ds
inc
les
adc
int
adc
test
and
cli
add
dec
sbb
mov
into
xchg
fdivrp
or
adc
adc
in
dec
add
jmp
jo
js
pop
add
popa
add
jno
or
dec
ret
test
cmp
rcr
neg
jmp
inc
or
jl
inc
add
sub
popf
fiadd
mov
icebp
mov
inc
call
mov
in
cmp
mov
lods
cmc
mov
sub
sysenter
mov
jmp
daa
mov
retf
push
test
mov
aad
pop
cs
add
jns
clc
sub
(bad)
adc
imul
adc
icebp
inc
into
xlat
out
dec
sbb
cwde
xchg
or
aas
jb
sbb
clc
lods
mov
mov
popa
xchg
adc
cs
xchg
add
mov
mov
xor
sub
mov
jecxz
add
dec
sbb
shr
pop
mov
mov
xor
and
outs
pop
mov
jecxz
ret
lds
movs
jmp
jmp
dec
mov
scas
mov
ret
ds
xor
cmp
ja
daa
fwait
fwait
inc
pop
arpl
push
or
(bad)
ins
cmp
push
mov
mov
add
out
out
out
jle
mov
or
xchg
push
fs
jg
aam
cmp
fsubr
add
or
mov
jg
pop
adc
lahf
mov
jecxz
or
adc
cwde
mov
icebp
stos
dec
push
retf
(bad)
jae
imul
mov
xor
jl
je
out
push
scas
movs
mov
dec
xor
iret
inc
inc
sub
add
aam
cmps
jmp
pop
nop
ins
push
fsubr
ins
in
dec
pop
(bad)
iret
(bad)
push
mov
mov
xchg
ret
push
rcr
stos
neg
jne
push
or
xchg
leave
shl
jo
cmp
mov
inc
inc
jo
or
sub
aaa
jg
adc
xor
dec
loope
dec
dec
test
(bad)
jl
aaa
pop
fld
xor
jo
jmp
jmp
add
push
push
xlat
icebp
shr
aad
in
cmp
mov
xchg
cwde
jecxz
xchg
(bad)
(bad)
(bad)
in
mov
xchg
(bad)
popa
fmul
test
dec
int
loopne
clc
ds
adc
xchg
add
js
sbb
mov
push
std
pop
test
stos
lahf
xor
ret
sar
jg
test
and
ret
pop
mov
fadd
push
retf
enter
or
push
jmp
lods
cmp
mov
dec
outs
jmp
sub
out
fucompp
loop
and
(bad)
cld
cmp
mov
imul
imul
adc
repnz
inc
xor
mov
aam
add
scas
pop
daa
imul
inc
out
adc
popf
inc
xor
jns
jns
mov
mov
inc
in
ins
popa
pop
mov
add
pop
ja
sti
jge
iret
aaa
push
lods
in
aas
or
imul
jo
mov
test
in
movs
pop
test
neg
mov
repnz
scas
or
cmp
pop
or
ss
mov
dec
sub
repnz
push
add
leave
sub
sbb
or
test
inc
retf
out
int
inc
sahf
and
sub
out
xchg
bound
retf
inc
bound
rol
cmc
xchg
or
mov
lea
sub
int
push
sub
xor
lock
cmp
fwait
shr
fadd
iret
inc
movs
(bad)
sahf
popf
add
and
neg
int
pop
jno
cdq
clc
pop
xor
pop
cmps
pushf
popa
cmc
mov
jbe
mov
stc
jl
fisttp
cmp
xchg
rcl
add
(bad)
and
push
call
(bad)
dec
xchg
jnp
pop
xchg
test
adc
out
outs
imul
xor
ins
xchg
or
in
fild
out
cmp
sbb
and
dec
imul
in
xchg
dec
jne
dec
popf
add
jmp
pop
out
mov
movs
adc
add
mov
dec
lahf
test
pop
push
xchg
lock
lods
(bad)
cmp
add
push
add
retfw
aam
push
cld
cmp
stos
inc
pop
mov
mov
in
mov
test
arpl
adc
cmp
js
pop
rcr
dec
sti
sub
adc
inc
jns
mov
sub
sub
cmp
sbb
int3
ror
leave
add
and
out
mov
scas
and
int
adc
movs
and
rcr
pop
mov
int
xor
js
bound
and
dec
aaa
dec
mov
xor
out
sbb
push
aas
xor
jbe
ja
ja
xchg
mov
jp
and
push
sti
imul
loop
jns
imul
mov
mov
in
sbb
sbb
mov
pop
aas
jmp
xor
cmc
push
test
adc
std
rcl
pop
outs
lahf
or
inc
leave
clc
mov
cmp
repnz
mov
test
jmp
ins
mov
jle
push
loopne
cmp
popf
pop
sub
sbb
shl
add
mov
dec
fdiv
and
addr16
fwait
jl
xor
lahf
popa
mov
push
fwait
cmp
and
cmps
and
aaa
mov
fld
add
or
movs
shl
cli
jmp
ins
or
mov
ret
stos
push
cmp
fwait
push
mov
add
xchg
and
ja
cmp
or
(bad)
mov
movaps
sbb
leave
add
aad
je
inc
jmp
cmc
aad
inc
push
scas
les
sub
pusha
lods
mov
nop
cdq
inc
pop
push
loope
pop
je
push
xor
sub
call
cmps
adc
(bad)
in
jecxz
push
and
mov
xchg
push
push
lods
xor
repnz
fwait
jmp
pop
sub
cmps
call
sbb
mov
push
stos
xor
std
cld
pushf
push
loop
mov
xor
imul
jnp
addr16
cmps
xor
imul
popf
mov
sub
jns
push
xor
sbb
data16
push
in
add
(bad)
push
mov
add
cmc
dec
fst
or
rcr
sbb
inc
fwait
push
push
or
add
mov
push
xchg
xchg
(bad)
ficom
or
pop
push
inc
mov
lds
and
or
(bad)
loop
mov
pop
test
inc
arpl
mov
push
shr
xor
in
push
hlt
inc
sub
data16
iretw
pop
setno
inc
xor
daa
movs
fs
div
out
mov
shl
cmp
and
xchg
or
pop
test
ins
fcmovne
fild
cmps
mov
lock
inc
repz
mov
(bad)
stos
test
jge
es
(bad)
in
std
or
sub
test
pusha
adc
stos
jne
inc
imul
leave
aaa
or
sub
retf
in
dec
adc
sbb
arpl
mov
push
jb
dec
loopne
push
sbb
push
test
test
sub
and
stos
(bad)
std
mov
jb
xor
dec
cmp
jmp
aaa
jno
fwait
push
cmp
mov
in
rsqrtps
mov
mov
jae
hlt
add
mov
mov
(bad)
aam
fmul
mov
cmp
mov
dec
push
outs
mov
gs
bound
dec
retf
movs
pusha
fucomip
pop
sub
clc
sub
lea
aaa
pop
outs
xor
xchg
push
fcmovu
jae
pop
leave
fidivr
xor
cwde
jbe
out
jp
dec
scas
nop
iret
xchg
ins
push
pop
adc
sbb
loope
scas
ins
dec
xchg
adc
rcr
call
cmp
push
sbb
push
push
shl
popf
mov
in
outs
push
xchg
fimul
enter
xchg
jb
sti
jecxz
mov
test
shr
(bad)
xchg
repz
jp
sub
push
repz
or
cmp
lea
sbb
lds
aas
mov
xchg
stc
ficomp
mov
loopne
mov
pusha
fldcw
jg
and
dec
xchg
popf
pusha
jnp
jecxz
mov
loope
jne
mov
add
inc
inc
dec
xchg
in
mov
dec
pop
pushf
std
push
sti
mov
jmp
inc
pop
mov
sub
xor
and
push
mov
ins
in
pusha
test
dec
nop
push
xchg
aam
lods
pop
fwait
xor
and
add
clc
mov
outs
rcl
xchg
(bad)
int
outs
ret
mov
repnz
cs
pop
adc
jb
sbb
xchg
xor
inc
loopne
mov
add
and
and
sub
fnstcw
and
mov
rcr
in
mov
outs
sti
shl
jbe
mov
outs
push
imul
xor
sbb
aad
mov
sbb
aaa
sti
add
xchg
loop
pop
jbe
cmps
les
rcr
pop
inc
popa
pop
ret
or
stos
sub
adc
xchg
jge
call
cmp
(bad)
push
div
mov
repz
and
xor
mov
or
pop
aaa
push
out
je
pushf
push
mov
fldcw
dec
add
call
xchg
adc
mov
(bad)
xchg
dec
repz
aam
movs
push
sbb
cmp
fwait
ja
out
add
push
shl
inc
fnstcw
sbb
aas
sub
push
pop
push
je
sub
cmp
push
dec
sbb
push
cld
or
pop
mov
jae
or
or
loopne
(bad)
clc
dec
mov
mov
sub
and
test
jo
popf
ins
jo
jo
fild
sbb
mov
adc
ja
stos
movs
xchg
(bad)
lods
dec
retf
(bad)
aaa
cmp
and
jns
xlat
loop
push
pop
hlt
xrelease
jae
lea
call
and
call
pusha
xchg
push
add
in
icebp
out
test
jo
int3
xchg
iret
mov
push
test
sub
sub
imul
in
cs
pop
jg
fsub
cmp
int3
xor
mov
mov
dec
sub
jge
pop
shl
push
push
add
inc
push
cld
icebp
out
xchg
aaa
cld
mov
xor
mov
pop
dec
mov
xchg
fxch
pushf
sub
cmc
inc
xor
inc
or
(bad)
loopne
imul
pusha
cs
int3
test
jb
stc
js
xchg
in
mov
iret
xor
push
pop
lods
push
fild
jmp
mov
sbb
(bad)
popf
pusha
fbld
cmps
ja
push
jge
in
push
mov
inc
pusha
das
jb
push
adc
cmp
repnz
xchg
aas
pop
inc
xchg
aas
sub
mov
mov
sti
cmp
pushf
add
rol
pop
sbb
je
call
dec
dec
test
xor
rcr
or
xchg
popf
cs
shl
loopne
daa
imul
retf
sub
ret
iret
sbb
ds
mov
addr16
sub
outs
mov
gs
mov
lahf
ins
in
mov
int
xchg
ror
in
inc
repnz
aad
pop
imul
sahf
mov
les
aaa
sahf
popa
sahf
cld
lock
aad
into
mov
(bad)
bound
aad
pop
sbb
sub
jae
loopne
(bad)
rcr
xor
add
inc
sahf
test
sbb
sti
or
xor
cmp
adc
mov
ins
jo
lods
mov
(bad)
jge
inc
sub
adc
mov
pop
push
adc
sbb
xchg
jb
pop
es
popa
ret
cld
into
cmp
mov
xlat
test
mov
mov
jl
add
scas
js
sbb
pop
retf
les
neg
out
in
loope
iret
shr
cmp
ja
gs
dec
xor
push
mov
arpl
add
sub
setge
inc
push
push
dec
mov
dec
inc
sbb
xchg
adc
enter
out
imul
pushf
cdq
inc
fsubrp
push
in
cs
enter
xor
clc
bound
jbe
repnz
fs
xor
test
and
test
jecxz
rcr
pop
sub
and
mov
xor
add
aam
sbb
mov
popa
adc
add
fst
dec
xchg
stos
mov
mov
dec
jg
inc
int
adc
bound
call
xor
xchg
mov
shr
out
mov
pop
push
mov
cmp
jb
pop
retf
cmp
mov
inc
cli
push
call
or
sub
or
adc
in
mov
mov
into
xor
jmp
push
lahf
jns
rol
fild
cld
mov
in
xor
mov
das
or
add
test
data16
loopne
shr
pusha
add
aaa
enter
lock
xor
adc
arpl
fist
movs
mul
jb
aaa
inc
cdq
rcr
pop
rcr
clc
pop
and
sub
popa
repnz
push
inc
outs
pop
jg
ja
and
xchg
and
cwde
jne
mov
jl
inc
adc
sub
fwait
lea
stos
jo
test
mov
push
push
(bad)
dec
enter
cmps
or
jmp
mov
pop
pop
(bad)
cmp
cmps
mov
ror
sbb
adc
push
aad
adc
mov
mov
push
add
ret
popf
xchg
add
outs
fst
adc
hlt
mov
fld1
jg
mov
jl
(bad)
adc
or
fcmovu
fs
fs
cmps
jnp
mov
pop
test
aad
imul
pop
cmp
mov
xor
and
fcmovnu
scas
xchg
test
retf
popa
fwait
sub
cmp
pop
xchg
mov
jmp
lock
pushf
mov
inc
xchg
mov
xor
test
lea
adc
inc
lods
test
nop
les
aaa
iret
mov
jle
mov
(bad)
mov
imul
sbb
sub
mov
mov
pop
lock
fistp
xchg
(bad)
int3
jbe
pop
push
out
loopne
fdiv
pop
push
cld
cli
mov
fnsave
ins
mov
sbb
sub
xchg
fisttp
dec
mov
jae
pop
fimul
mov
xor
mov
dec
mov
jb
adc
test
test
sub
sbb
std
jno
xchg
add
add
add
sub
daa
xchg
push
iret
retf
sub
out
dec
sbb
(bad)
adc
dec
and
pop
pop
cmp
pop
mov
and
scas
scas
comiss
ja
pop
mov
cmc
xchg
dec
jmp
iret
rcr
test
inc
sbb
sbb
fistp
lods
add
js
mov
movs
in
scas
les
inc
dec
div
sbb
mov
xor
retf
or
je
scas
ret
bound
cmp
jbe
pop
inc
dec
call
imul
and
adc
adc
dec
mov
pop
dec
pop
and
mov
fs
adc
mov
or
push
pushf
es
jmp
sbb
cmps
rcl
xchg
inc
enter
push
popa
loope
icebp
mov
or
adc
add
xchg
int
hlt
dec
(bad)
cmps
js
fdiv
dec
or
xlat
pop
jo
sub
leave
pop
push
test
xchg
iret
fwait
and
mov
sti
xchg
mov
jg
fiadd
jp
mov
push
mov
js
outs
and
cmp
dec
shr
mov
dec
lea
pop
test
jmp
mov
pushf
mov
push
mov
cmp
clc
inc
inc
and
jmp
mov
pop
push
or
ss
cmp
mov
call
and
mov
aas
test
push
out
push
xor
div
icebp
aas
dec
pushf
xchg
sub
mov
mov
fcom
aam
sub
fcomp
cld
push
lds
in
or
push
fxch
test
sub
xor
repz
adc
loopne
mov
jmp
mov
sbb
mov
push
adc
rcr
sahf
mov
nop
mov
pop
in
retf
(bad)
movs
or
(bad)
mov
add
leave
fwait
pop
fldcw
mov
hlt
adc
inc
pusha
fnstsw
cs
add
add
test
xchg
xchg
mov
xlat
es
stos
mov
movs
jl
mov
and
(bad)
test
test
and
mov
pusha
lds
aaa
sbb
stos
sbb
fidiv
dec
sti
and
push
(bad)
fdiv
jns
ds
inc
cmp
or
sub
sub
and
retf
hlt
and
int
das
call
stc
test
dec
iret
xor
fwait
inc
pushf
cmp
jl
fistp
jmp
in
icebp
pop
mov
push
sti
xor
add
mov
popf
jl
mov
and
(bad)
hlt
sub
repnz
or
loopne
pop
jmp
jmp
nop
test
(bad)
mov
mov
xor
or
lahf
and
or
jae
jns
add
jne
lea
mov
adc
sbb
cmp
pop
pop
inc
cmp
xor
cmp
xchg
xor
xchg
retf
sbb
cmp
pop
gs
(bad)
repnz
jecxz
jnp
(bad)
xchg
(bad)
or
xchg
dec
pop
mov
push
jns
xor
jb
dec
mov
ror
loop
lea
cmps
sbb
mov
or
fadd
mov
cmp
daa
ins
in
xchg
push
fcomp
cwde
add
outs
outs
xchg
rcr
std
push
cwde
mov
inc
test
sub
mov
call
xchg
lahf
int
xchg
ins
inc
cmp
in
mov
lods
or
call
pop
add
xchg
inc
pop
add
cmp
fwait
mov
das
cmps
xor
hlt
or
adc
add
jne
inc
loope
xchg
xchg
pop
out
push
mov
xor
push
js
ds
js
addr16
pop
fsubrp
or
daa
aaa
mov
jnp
sbb
xchg
test
push
mov
bound
xor
movs
aas
fiadd
adc
or
fimul
imul
inc
cmc
cmp
fcomp
jae
or
popf
add
mov
or
ja
xor
sub
mov
lahf
retf
inc
fwait
xchg
psubd
and
(bad)
(bad)
lds
push
aad
int
jecxz
lods
sbb
aas
cmp
mov
sbb
inc
add
daa
mov
mov
fcomp
fsubp
inc
mov
dec
mov
or
sbb
push
mov
jge
ds
sbb
outs
xchg
imul
jmp
sub
clc
inc
sar
add
xchg
js
sub
add
inc
mov
in
imul
inc
sbb
xor
dec
fdivr
imul
inc
jmp
inc
cld
pop
outs
lock
cdq
mov
mov
movs
adc
hlt
xor
cmp
jno
sub
xor
dec
ins
fidivr
xchg
xchg
xchg
in
add
sub
adc
pusha
or
das
cmp
fndisi(8087
cmp
xor
mov
cmp
les
mov
mov
cmp
mov
and
xchg
xchg
outs
xchg
push
adc
sar
cmp
jge
pop
hlt
jnp
loope
fwait
lods
xor
iret
mov
(bad)
sbb
fdivr
(bad)
(bad)
push
fisttp
xor
mov
fs
out
pop
cdq
jb
cmp
mov
jns
fs
retf
pop
retf
test
out
jae
sbb
mov
arpl
mov
push
cld
movs
sbb
pop
ins
adc
(bad)
jnp
xchg
pop
add
inc
jecxz
pushf
(bad)
in
out
jno
pusha
and
mov
test
fwait
jmp
push
mov
add
mov
xchg
jl
popa
or
jno
mov
aad
gs
aaa
pop
push
shl
fdivr
jns
icebp
dec
push
cmp
xchg
adc
inc
xchg
test
mov
mov
call
(bad)
out
fldcw
sub
pop
sub
mov
shl
(bad)
fnstcw
std
sub
jns
add
mov
or
gs
push
mov
bound
out
jbe
sbb
pop
mov
adc
sub
add
jmp
and
mov
(bad)
nop
into
cli
mov
in
jns
mov
repz
push
fistp
into
imul
cli
sahf
and
imul
cmc
rol
aaa
clc
pop
cmp
fadd
ret
call
pop
or
bound
mov
lds
or
lods
stc
jns
mov
sub
in
push
dec
push
cmp
mov
sub
and
in
and
lds
push
push
mov
dec
push
mov
movs
cmc
pop
aaa
stc
xchg
int
movs
rcr
pop
adc
inc
iret
jns
dec
jecxz
jb
sub
add
int3
and
add
adc
sbb
scas
stos
sbb
xchg
xchg
push
pop
pop
pop
push
or
ds
addr16
sub
lock
xor
pop
rcl
and
fild
cmp
jb
icebp
mov
inc
stc
and
scas
in
jmp
retf
or
popa
push
cmps
sbb
pop
outs
dec
mov
cmp
xchg
add
cwde
imul
mov
or
xchg
in
xor
js
ret
inc
retf
cmp
dec
sbb
outs
push
rol
sub
(bad)
mov
dec
mov
gs
ficom
fldenv
mov
jnp
push
ins
jb
xchg
mov
push
cmp
je
stos
mov
cwde
push
push
(bad)
(bad)
fwait
int3
and
sbb
in
pop
out
mov
mov
jp
jmp
popf
dec
mov
jae
icebp
pop
mov
push
mov
test
pop
pop
xor
stc
dec
push
adc
lods
ins
sbb
fwait
xchg
inc
and
gs
push
mov
cdq
jge
jb
inc
std
out
stos
gs
inc
pop
cdq
mov
add
jnp
xor
adc
das
fwait
imul
fs
jmp
push
scas
stos
fisttp
cmp
add
or
repnz
sti
enter
hlt
mov
add
shl
mov
cli
dec
adc
addr16
data16
or
mov
mov
xchg
and
cmc
jo
aad
mov
test
jne
in
js
push
xchg
fidiv
lahf
inc
jl
hlt
aam
push
add
mov
mov
aad
mov
out
stos
repnz
fwait
leave
push
shl
adc
xchg
repz
std
or
lods
jmp
add
lahf
jle
sbb
jmp
pop
jo
fld
int3
add
out
mov
sub
xor
sub
lods
mov
lds
sbb
cld
xchg
sbb
adc
xchg
int
sti
cmps
loop
loope
jae
and
jae
cmp
pop
(bad)
loopne
fisub
add
cmp
mov
jbe
test
sub
push
es
ja
gs
jmp
xchg
in
mov
sbb
std
dec
mov
jecxz
stc
daa
or
sbb
sub
adc
rcr
mov
setns
ins
jle
daa
sbb
cwde
ins
pop
mov
adc
(bad)
rol
stos
mov
outs
sub
and
sub
sub
xchg
add
jae
push
sub
mul
inc
xchg
mov
jne
and
push
mov
sbb
mov
jle
cli
push
dec
test
xchg
stc
nop
xchg
mov
fisubr
dec
aaa
sub
in
loop
sbb
sbb
mov
xor
mov
cmp
sub
dec
sbb
xor
pop
retf
jp
jecxz
nop
push
lock
and
xchg
test
mov
fnstsw
test
ret
out
add
sbb
pushf
fisubr
mov
cmc
sbb
icebp
xor
and
out
int3
shl
mov
and
jp
xchg
xor
xchg
sbb
fisttp
jecxz
ja
push
xor
sub
dec
call
jmp
xor
xor
mov
les
xchg
pop
dec
push
mov
xchg
movntps
push
and
or
lahf
dec
shl
nop
sbb
xor
cs
dec
inc
jns
push
inc
mov
push
in
dec
mov
dec
test
into
xchg
(bad)
loop
out
neg
shl
jecxz
mov
shl
test
dec
inc
ret
sub
es
fstp
inc
push
test
pusha
push
int
test
push
neg
inc
mov
dec
or
pop
mov
out
out
jo
cmp
popf
movs
(bad)
mov
add
dec
out
sbb
sti
ds
icebp
pop
push
aas
and
mov
cmp
inc
mov
mov
les
mov
cmp
imul
mul
and
mov
sbb
inc
movs
sbb
push
pop
mov
xor
mov
shl
enter
cwde
leave
dec
push
mov
stc
fnsave
das
sub
jns
adc
addr16
aaa
cmp
fwait
mov
sbb
xor
(bad)
inc
test
mov
nop
call
rcl
push
or
xor
pop
dec
scas
scas
ds
xlat
mov
mov
daa
xor
cmp
sub
loope
jge
mov
movs
es
rcl
mov
mov
inc
jl
sar
lods
pop
push
adc
mov
cmp
mov
jmp
or
icebp
mov
lahf
mov
aam
pop
mov
and
cmps
std
into
retf
cmp
(bad)
pop
or
(bad)
xor
imul
mov
cmps
(bad)
mov
xchg
popf
cmp
sbb
mov
add
cmp
idiv
hlt
sar
and
lea
add
stos
stc
cmp
inc
and
inc
add
dec
mov
sar
mov
adc
aaa
in
add
dec
data16
push
fstp
push
or
movs
jb
mov
jmp
sub
cmps
aas
out
add
iret
adc
cmc
imul
bnd
sub
fldcw
dec
lds
sbb
pop
in
mov
ss
cmp
gs
cmps
popa
mov
mov
and
les
adc
inc
xchg
enter
popa
ins
lds
gs
adc
and
adc
jmp
out
cmovns
ss
jae
fimul
adc
push
or
and
mov
jle
dec
sbb
or
inc
adc
adc
imul
mov
stos
mov
push
dec
mov
xchg
mov
aas
cli
scas
outs
mov
cmp
pop
dec
mov
pop
out
inc
push
mov
mov
(bad)
cmps
mov
dec
adc
icebp
movs
mov
daa
adc
popa
inc
or
aaa
lds
mov
lods
cmc
jo
lock
jne
outs
bound
js
call
rcl
add
mov
dec
cmp
pop
add
cli
cmp
jbe
xchg
(bad)
jae
jmp
icebp
or
call
sbb
sub
and
fsubrp
mov
loope
not
xchg
cdq
adc
mov
jmp
lock
inc
scas
push
xor
sbb
push
cmp
in
jmp
test
push
dec
mov
inc
test
outs
xchg
ss
sar
cmp
aad
arpl
rol
movs
mov
xchg
dec
scas
xchg
push
add
into
rol
stc
aam
pop
pop
ins
bound
fnsave
mov
sub
or
dec
test
pop
ficom
cmp
shl
ret
(bad)
int3
sahf
dec
retf
jnp
(bad)
dec
icebp
sti
xchg
mov
cmps
xor
out
mov
and
scas
sbb
mov
and
cmc
adc
fdivr
add
cli
xchg
push
push
cmps
push
rol
shr
mov
bound
scas
es
lods
lock
in
sub
mov
arpl
inc
or
pop
into
movs
pusha
xchg
push
cmp
mov
jp
ficomp
push
adc
test
dec
gs
(bad)
cmp
or
in
dec
pop
setne
pop
(bad)
loop
jo
ins
sahf
scas
and
add
rol
mov
dec
sub
sub
mov
not
or
or
push
pop
dec
in
sub
push
adc
cmp
xor
cmps
retf
jno
loop
cdq
lods
push
clc
dec
xor
nop
sbb
xchg
rcl
mov
jle
add
aad
sbb
pop
fild
xchg
(bad)
pop
cwde
add
pop
mov
mov
stc
pop
jmp
push
sbb
fstp
ret
test
icebp
cmp
xchg
xlat
icebp
sahf
inc
shr
dec
sbb
jno
xor
rol
push
(bad)
dec
stos
adc
je
inc
xchg
call
mov
inc
push
mov
test
xchg
cmp
je
xor
(bad)
movs
dec
jl
scas
jmp
mov
and
mov
stos
popf
and
dec
stos
cli
shr
mov
add
jg
outs
ret
std
setge
gs
xor
ds
mov
push
xchg
pop
inc
fst
mov
jbe
mov
(bad)
pushf
jg
outs
mov
push
(bad)
inc
fcomp
mov
xor
or
cmps
pop
or
retf
(bad)
fsubp
jb
imul
fnstsw
inc
popa
fmul
push
ror
push
jo
int3
jg
js
mov
ins
jmp
xchg
test
and
pop
pop
add
push
lock
dec
sbb
mov
adc
test
xchg
jg
neg
(bad)
jl
das
les
pusha
cs
(bad)
(bad)
and
xchg
inc
rcr
mov
(bad)
int
cmp
xchg
xchg
jo
sbb
cld
push
or
add
leave
mov
pushf
adc
adc
or
inc
lea
mov
fild
cmps
dec
jns
ds
ret
mov
pop
pushf
pop
fdivr
xlat
std
or
or
popf
inc
xor
jnp
xor
xchg
fs
test
jle
cmc
add
push
leave
stos
dec
adc
mov
inc
test
pop
iret
and
mov
xor
jns
mov
data16
xor
or
dec
loop
cdq
push
daa
adc
(bad)
loopne
dec
mov
mov
jg
rcl
adc
jne
add
sbb
hlt
dec
das
aaa
add
iret
stc
sub
movs
loopne
fisttp
neg
adc
data16
rcl
cwde
or
jb
mov
iret
xor
xchg
xor
loop
cli
popf
xchg
or
das
test
xor
mov
pop
aam
in
loopne
enter
sti
xlat
mov
cmc
(bad)
dec
dec
mov
xchg
popa
and
adc
or
cmps
inc
ja
push
add
lahf
out
repz
push
fstp
or
or
mov
adc
inc
mov
jge
mov
dec
mov
lahf
scas
xchg
xor
icebp
sahf
xchg
mov
jge
(bad)
push
aad
and
clc
mov
dec
jmp
cld
push
repnz
cmp
add
jge
push
jecxz
leave
xor
xchg
mov
inc
xor
call
out
push
aaa
sub
sbb
xchg
dec
ret
jg
sahf
fsubr
mov
xchg
mov
xchg
sub
aas
jge
das
pop
aad
popf
enter
mov
arpl
iret
and
xor
gs
adc
adc
bnd
and
out
pop
or
cli
push
nop
pushf
jecxz
(bad)
int
scas
rol
jl
bound
add
push
pop
mov
fs
sahf
xchg
adc
fwait
das
cmp
bnd
popf
inc
push
popa
retf
lahf
pusha
lods
jb
inc
mov
lods
cmc
cs
or
xor
and
or
xchg
cmp
push
mov
idiv
add
movups
and
mov
ja
lods
loope
cmp
cdq
test
sahf
lods
jae
neg
stos
sbb
cld
repz
push
dec
stc
test
icebp
cmp
inc
dec
sub
mov
dec
fisub
stos
adc
pop
and
test
mov
and
mov
(bad)
aas
sahf
lea
fs
adc
xor
fwait
jno
sahf
cmp
mov
sub
add
(bad)
inc
scas
clc
out
call
in
jmp
(bad)
into
fst
pop
pop
in
mov
shr
mov
xchg
cli
mov
add
pop
pop
sub
dec
stc
inc
outs
shl
stc
lds
jmp
xchg
mov
ret
stc
mov
rcl
cmps
xchg
jmp
dec
cs
sbb
jbe
das
rcl
push
mov
and
cs
ss
int
jbe
mov
dec
push
inc
leave
or
inc
aas
das
les
jge
movs
mov
pop
aam
push
repnz
xchg
sbb
pop
cmp
or
adc
jnp
repnz
nop
in
ja
ret
mov
es
add
adc
jecxz
dec
push
push
add
dec
lock
out
mov
pop
mov
jo
mov
xchg
dec
fs
xor
jmp
jmp
push
leave
lahf
in
inc
icebp
mov
int3
pop
enter
scas
adc
push
or
sbb
add
cmps
(bad)
push
xchg
inc
repnz
pusha
lods
or
and
sbb
and
cmc
jp
scas
(bad)
movs
and
ins
sahf
mov
repnz
stc
jbe
(bad)
push
stos
cmps
aas
mov
sub
jle
sbb
(bad)
ds
dec
cmp
adc
outs
popf
xchg
jmp
out
mov
nop
mov
pop
cmp
ret
inc
sbb
xor
retf
in
repz
xor
daa
ins
push
jge
pushf
sbb
push
mov
sub
(bad)
sbb
pop
push
cmp
(bad)
jae
add
dec
fucom
or
ss
mov
cld
imul
mov
js
cs
adc
out
in
movs
inc
bound
out
cmp
ret
jno
or
pusha
cmp
push
mov
push
out
push
xor
fistp
xchg
push
ins
jmp
xchg
leave
xor
repz
cmp
mov
and
pop
push
fsub
nop
xchg
cmp
les
jbe
in
js
stos
cmp
test
ins
xchg
jne
test
mov
xchg
cmp
sub
inc
mov
clc
and
add
arpl
inc
cmc
ffreep
sahf
imul
ins
outs
(bad)
push
js
(bad)
xchg
lahf
mov
sub
aam
xchg
lea
xor
jp
and
cli
mov
push
mov
shr
movs
shl
(bad)
fistp
mov
les
inc
mov
dec
js
test
xchg
xor
inc
push
jmp
jno
into
int3
adc
sub
pop
into
clc
cmp
add
or
mov
cmp
mov
cmp
in
int3
jo
xchg
pop
mov
lock
pop
call
int3
jae
mov
mov
sbb
push
loop
pop
xor
(bad)
push
daa
movs
xlat
jp
sbb
std
std
sbb
cld
sar
xchg
out
je
xlat
sahf
jns
push
dec
sub
enter
and
mov
cmc
sub
push
inc
js
hlt
ficomp
mov
adc
pusha
mov
les
in
fbstp
ror
inc
xor
add
clc
fwait
in
repz
sbb
call
cmp
push
or
sbb
cmp
sub
mov
push
push
or
clc
iret
nop
jno
adc
test
nop
(bad)
sbb
rcl
out
mov
push
jge
loopne
jmp
or
mov
jnp
inc
jmp
inc
pushf
pushf
or
push
popf
push
pusha
xchg
into
xor
add
bound
(bad)
in
mov
mov
das
sti
call
inc
ss
adc
adc
xchg
rcl
data16
push
adc
push
pop
mov
mov
adc
sbb
gs
push
xchg
popf
gs
jmp
movs
mov
mov
jb
sub
mov
outs
dec
xchg
addr16
iret
imul
into
js
daa
mov
ficom
dec
ds
xor
lock
nop
aam
aaa
sub
loopne
inc
mov
leave
mov
imul
mov
sub
cmp
push
ja
mov
add
aas
push
movs
push
pop
mov
mov
les
mov
out
inc
add
call
jae
xchg
enter
mov
je
inc
inc
inc
and
jp
imul
xor
sbb
hlt
es
jae
out
jo
sub
movs
loope
pusha
scas
(bad)
sub
icebp
pop
movs
push
inc
mov
jnp
repnz
jnp
inc
jo
mov
in
xchg
and
sub
sub
xchg
lods
xchg
sbb
dec
sbb
xchg
inc
retf
pop
iret
dec
bound
neg
push
test
pop
fdiv
stos
dec
pop
mov
mov
loopne
jg
mov
cmp
in
add
bnd
sbb
rol
fidivr
movs
pop
push
sbb
push
mov
(bad)
js
xchg
push
(bad)
or
mov
mov
pushf
xchg
and
or
or
mov
push
fwait
ins
scas
inc
xchg
retf
in
add
sbb
mov
ja
pop
jge
shl
add
pop
das
ja
enter
dec
mov
mov
leave
(bad)
mov
ins
sub
mov
mov
mov
inc
aaa
mov
or
inc
lock
xor
cmp
dec
xor
push
mov
test
(bad)
out
(bad)
xchg
inc
scas
lock
mov
ja
loope
leave
jle
mov
mov
jl
add
js
movs
fwait
scas
cmp
pop
jne
call
aaa
jge
lds
lea
aad
(bad)
jmp
and
int
xchg
and
jp
inc
sub
and
shr
jp
fild
js
mov
mov
lahf
stc
out
ret
cmp
add
jb
xchg
cmps
jle
lods
pop
fld
mov
adc
dec
jle
scas
sub
push
or
pushf
mov
mov
imul
pop
adc
icebp
pop
lods
out
dec
repz
stos
xchg
push
fwait
int3
fiadd
sbb
mov
pop
adc
adc
jl
enter
push
xor
stc
jmp
inc
xchg
cmp
scas
sti
pop
jb
sub
xor
rsm
add
sahf
add
dec
push
out
test
sub
xchg
sbb
or
daa
bound
sbb
es
mov
fsub
stos
lea
xor
shl
mov
sahf
retf
cld
mov
sub
adc
push
jmpw
jae
mov
xchg
xchg
outs
mov
imul
jl
lods
cmps
out
sub
fmul
or
out
rcl
adc
mov
adc
and
in
pop
and
xchg
dec
daa
pop
dec
and
ss
in
sahf
ficom
push
call
cli
rep
adc
push
enter
xlat
and
inc
in
xor
rcr
pop
sbb
cmp
push
stc
out
popa
sbb
xor
ds
icebp
rcr
inc
and
dec
out
retf
int
adc
jbe
jbe
pop
xor
(bad)
cwde
imul
mov
xchg
scas
in
call
ss
jl
out
jmp
sbb
sub
leave
adc
les
outs
push
and
dec
pop
(bad)
pop
stos
ds
sahf
jecxz
and
das
lock
cmp
sub
sub
push
je
dec
cmp
test
inc
(bad)
aad
mov
mov
xor
and
ins
shr
xchg
or
(bad)
or
inc
out
cmp
mov
fwait
(bad)
mov
dec
adc
pop
call
ja
pop
jmp
stos
jo
clc
or
jb
psllw
pop
add
cs
inc
test
not
xchg
xor
mov
dec
sub
cwde
retf
inc
int
idiv
iret
mov
adc
leave
pop
out
mov
out
cwde
xor
push
lods
sbb
mov
loope
mov
sbb
stos
(bad)
mov
cmc
pop
cwde
data16
adc
arpl
outs
xchg
outs
je
mov
adc
loop
push
or
jo
sub
dec
mov
sti
aaa
pop
adc
dec
xchg
push
(bad)
jge
rol
dec
mov
outs
jg
or
dec
cdq
push
div
xchg
out
sbb
push
and
cmp
xchg
cmps
mov
push
int3
rcr
cwde
aam
cmp
cdq
mov
hlt
xchg
jmp
cmc
sbb
sbb
ds
mov
mov
add
stc
adc
ficom
scas
jno
dec
pop
sbb
xchg
xor
add
leave
outs
add
mov
cwde
push
cmp
or
stos
sbb
cmc
fucomi
pop
mov
call
aas
xchg
adc
mov
lods
pop
mov
enter
repz
sbb
jmp
je
or
add
bound
ja
dec
shl
jl
mov
and
add
dec
mov
add
ja
int
xor
mov
ror
add
ins
push
adc
push
mov
xchg
dec
retf
add
stos
loope
xchg
sub
jo
xchg
sahf
sbb
lods
lea
sar
out
mov
(bad)
sbb
out
sub
movs
push
mov
aam
imul
sub
gs
push
outs
cmp
ss
cmps
out
fcom
icebp
pushf
pop
mov
(bad)
addr16
int
lock
push
xchg
ficom
mov
cmp
scas
mov
mov
or
in
retf
dec
cmps
lds
cmp
sbb
sub
lods
(bad)
jecxz
push
jnp
push
inc
dec
in
xor
mov
pop
in
out
mov
aaa
pop
push
(bad)
(bad)
sbb
shl
inc
rol
test
jne
cmp
xchg
jmp
fstp
push
loop
outs
cmp
cmp
sbb
(bad)
out
movs
mov
rcr
add
mov
addr16
cmp
dec
dec
and
iret
test
aad
cli
shl
and
lea
lock
or
dec
sub
inc
aam
mov
lods
adc
loope
loop
adc
mov
or
ins
sub
outs
inc
in
mov
mov
mov
(bad)
sbb
jecxz
dec
dec
or
cmp
(bad)
push
loopne
pop
sub
adc
add
in
xor
cmp
cmp
popa
ja
or
retf
xchg
push
test
inc
push
sbb
or
int3
xor
xchg
int
popa
test
jae
int
outs
cmp
jecxz
dec
inc
add
cwde
dec
add
out
leave
test
xchg
ret
sbb
and
scas
inc
or
sbb
pop
push
rcl
jmp
shl
cdq
fsub
call
stos
sbb
pop
aam
mov
jle
pop
aam
pop
cmps
retf
push
xchg
add
push
je
dec
cmp
xor
mov
(bad)
popf
push
mov
inc
pushf
hlt
mov
adc
mov
loopne
jno
lds
inc
jbe
inc
push
cdq
hlt
push
mov
mov
inc
arpl
sub
scas
lods
fstp
test
push
das
xchg
das
adc
out
cwde
js
gs
sar
out
scas
xchg
fiadd
fdivr
arpl
lods
data16
arpl
movs
sub
in
pushf
popf
sbb
xchg
int
ror
out
inc
xor
fsub
(bad)
daa
cld
out
mov
cwde
ins
mov
mov
retf
or
jl
jp
sbb
out
inc
movs
enter
mov
sbb
cdq
lods
sbb
pop
mov
ror
push
(bad)
push
test
dec
iret
mov
int3
dec
mov
clc
shr
fld
fwait
imul
bound
or
mov
aas
(bad)
inc
ret
retf
popa
inc
mov
mov
xor
ficom
stos
call
mov
jb
in
iret
pop
ins
in
mov
push
push
inc
mov
pop
lods
mov
jl
es
pop
sbb
mov
dec
cmp
adc
jae
or
mov
test
(bad)
push
ins
clc
aas
pop
jecxz
and
retf
hlt
leave
mov
and
push
sti
pushf
xor
lods
cli
jns
scas
clc
cmp
stos
(bad)
cmp
cwde
xor
dec
mov
fcom
sbb
stc
faddp
adc
outs
ret
sbb
sub
les
popa
retf
adc
mov
shl
inc
mov
pop
jecxz
mov
aas
and
in
xchg
add
push
(bad)
stos
or
shl
int
jp
jns
mov
leave
loopne
(bad)
out
push
out
dec
push
imul
mov
adc
leave
mov
enter
cmc
stos
xor
mov
aam
das
loopne
xlat
dec
hlt
or
pusha
add
out
in
stos
jmp
add
add
lahf
jmp
adc
sbb
and
lock
pop
lea
int3
and
pop
popa
cmc
xor
or
lods
sbb
inc
inc
cmp
mov
nop
fdiv
mov
cdq
movs
xor
(bad)
mov
ret
or
retf
xchg
xor
push
push
scas
inc
fsubr
ins
jmp
pop
jnp
mov
sti
jae
retf
sub
push
ret
aam
jo
and
inc
jmp
or
inc
pushf
jl
test
jb
push
lds
nop
out
retf
push
imul
setle
adc
fsubr
mov
int
mov
lahf
idiv
and
(bad)
cmp
das
scas
mov
jmp
push
cmp
lea
xlat
mov
gs
ss
sbb
adc
sbb
sub
movs
nop
jp
adc
push
aaa
jmp
sar
sbb
jge
sbb
lods
es
imul
shl
shl
imul
cmp
lods
or
jmp
xchg
mov
xchg
out
fdiv
pop
sbb
shl
stos
dec
lds
push
xchg
xchg
es
jmp
and
add
sub
out
or
inc
mov
lods
popa
cmp
jle
xchg
stc
rcr
in
sbb
xchg
sbb
ja
stos
pop
and
pusha
jmp
add
mul
ds
fisttp
movs
xor
push
add
aad
jl
and
xlat
jge
jmp
add
dec
or
daa
js
fidivr
hlt
jb
lods
sub
jne
aam
cmp
mov
ficom
dec
leave
es
std
sbb
cmp
mov
and
push
shr
ins
xor
adc
push
fnstcw
lods
adc
iret
in
push
adc
les
iret
loope
std
(bad)
in
pop
into
loop
fadd
(bad)
jmp
stos
rcl
xor
outs
leave
adc
add
imul
sbb
dec
inc
push
sbb
daa
mov
dec
cwde
mov
xor
jb
stos
cdq
sbb
mov
cmp
leave
jne
xchg
(bad)
lods
jp
ss
pop
aas
jp
call
je
pop
jmp
pop
add
dec
inc
(bad)
in
retf
sbb
add
xchg
push
mov
shl
js
out
mov
not
xchg
jae
sbb
jno
pop
adc
dec
dec
out
bound
jbe
repz
sub
or
gs
ret
aaa
hlt
loope
add
lock
mov
xchg
jmp
cmp
aas
jns
cs
and
push
push
call
mov
mov
shl
outs
jne
dec
ret
xchg
jp
dec
adc
push
jmp
dec
sub
xlat
jnp
or
mov
push
mov
add
jns
cmp
jmp
sub
inc
add
sub
mov
or
xchg
ins
xchg
(bad)
in
jge
fidivr
pop
lea
push
ja
adc
cli
out
cmp
outs
lods
adc
(bad)
ror
cwde
sahf
sbb
cmp
repnz
fisttp
pop
rcl
mov
mov
icebp
adc
fadd
sbb
jae
cli
(bad)
ins
pop
outs
dec
fwait
(bad)
mov
mov
xor
test
sbb
mov
outs
sahf
pop
outs
es
mov
int
jp
aad
push
sbb
imul
pop
int3
fld
das
call
cld
inc
dec
add
mov
jge
sub
mov
push
adc
or
mov
and
fcomp
push
jle
stos
(bad)
cli
sbb
shr
fst
mov
push
sti
lahf
pop
in
test
sub
cmp
mov
sbb
dec
fdivr
out
adc
sahf
jmp
retf
mov
ja
out
inc
adc
or
jmp
xchg
(bad)
int3
lds
jb
cld
sbb
je
dec
fld
jge
cs
cld
(bad)
pusha
fstp
daa
jmp
cmp
mov
jle
dec
dec
inc
xchg
rcl
retf
ss
adc
xchg
div
test
js
mov
adc
test
mov
jge
ds
inc
adc
lds
and
aad
jg
imul
cmp
mov
jns
push
js
xchg
call
imul
int3
jle
mov
data16
add
popf
jbe
adc
stos
(bad)
in
stos
dec
adc
jle
je
add
aaa
cwde
sbb
jae
jae
shl
dec
cmp
pop
lea
ficom
imul
test
inc
mov
mov
jle
mov
xor
dec
push
or
cli
test
inc
das
pop
(bad)
out
(bad)
out
leave
or
in
in
div
pop
mov
mov
and
stos
je
xchg
push
in
imul
pop
or
cld
xchg
mov
jmp
xchg
mov
adc
jo
outs
test
sbb
test
(bad)
adc
push
cli
faddp
repz
xor
in
fwait
xor
fs
xchg
mov
cmp
adc
and
ret
sbb
adc
lods
and
scas
jecxz
jp
icebp
xor
(bad)
movs
xchg
pop
je
sti
pop
mov
cld
mov
ins
data16
ins
shl
ins
lds
sub
hlt
cmp
mov
add
sbb
dec
xor
hlt
iret
popa
aaa
ja
dec
adc
mov
dec
stc
popf
xor
enter
cdq
dec
and
inc
inc
rcr
daa
leave
push
push
outs
aad
inc
nop
xor
jle
mov
and
or
xor
test
inc
aaa
das
loop
push
loop
and
xlat
sbb
hlt
mov
nop
je
ins
xchg
xor
cld
add
out
mov
xchg
nop
pop
and
inc
rol
(bad)
xor
jb
div
fucom
cmp
inc
lahf
add
ror
retf
dec
ds
jle
test
ret
cmps
mov
and
mov
int
cmc
or
je
and
fistp
or
xchg
mov
mov
dec
test
jbe
and
adc
fistp
dec
cli
cli
rcl
push
xor
shr
into
imul
test
xchg
sub
mov
les
and
js
out
fs
aam
xor
xchg
int
mov
jae
mov
inc
arpl
mov
outs
aaa
pop
jle
push
cs
push
xor
sti
(bad)
push
leave
not
jecxz
cmp
fwait
stc
mov
mov
in
cmps
pushf
xchg
dec
dec
test
outs
sub
sub
loop
pop
fsub
lods
les
aaa
loope
pusha
int3
push
imul
mov
sbb
in
(bad)
stc
out
or
sbb
jne
gs
shr
xchg
add
scas
or
jmp
jmp
inc
bound
or
daa
add
cmp
dec
jmp
les
inc
fidivr
movs
(bad)
and
cmp
outs
ins
inc
push
clc
mov
add
add
mov
inc
int
test
shr
sti
std
dec
arpl
fs
mov
mov
enter
adc
cmp
rcr
call
inc
shl
mov
mov
icebp
cli
aad
push
sbb
imul
movs
xchg
or
arpl
cmp
xor
in
add
ins
sti
sbb
inc
pop
stc
leave
pop
and
jmp
or
jmp
pop
push
jecxz
lds
cwde
xor
js
inc
test
rol
mov
iret
out
mov
stos
adc
or
outs
sub
xor
mov
fidiv
push
inc
pop
fimul
and
mov
push
jle
repz
pop
push
int3
jb
mul
(bad)
int3
xchg
cmp
mov
sbb
dec
sbb
pop
sbb
in
cmps
push
add
(bad)
clc
rcl
mov
push
rcl
pop
dec
inc
mov
push
dec
cmp
sbb
addr16
rcr
adc
pop
rcl
sbb
mov
mov
pop
jecxz
sub
loopne
ins
ins
sahf
mov
cmp
or
push
mov
rcl
cmp
cmc
sbb
inc
pop
inc
push
add
mov
jmp
mov
mov
imul
sub
hlt
pop
jmp
imul
ins
mov
fmul
inc
es
movs
dec
or
outs
mov
mov
or
add
push
push
jbe
dec
xchg
mov
(bad)
cmp
(bad)
pop
mov
sub
and
add
push
xor
cmp
mov
mov
mov
add
mov
(bad)
leave
ret
pop
cwde
adc
pop
loop
cmp
retf
jo
loop
sub
or
cmp
mov
dec
mov
cmp
jb
xchg
leave
add
add
dec
dec
mov
and
popf
jge
mov
xchg
lods
cmp
and
xor
lods
sub
push
jl
int
inc
fnsave
in
adc
in
cmps
sti
add
add
cmp
mov
stos
xlat
js
mov
fldenv
pop
int3
xchg
in
cmp
repz
scas
inc
jl
pop
imul
stos
clc
or
push
mov
je
jle
mov
scas
hlt
test
push
out
xchg
or
retf
push
inc
inc
dec
or
pushf
pop
leave
(bad)
in
add
shr
sub
test
sbb
pop
pop
arpl
sub
sub
adc
add
outs
ja
pop
inc
(bad)
xchg
cmps
push
cmp
cmp
mov
dec
jecxz
or
pusha
int3
push
movs
or
pop
scas
or
dec
out
iret
push
sbb
ja
loopne
sub
mov
jnp
mov
daa
rcl
bound
inc
jle
mov
imul
dec
dec
xchg
pop
jl
sbb
iret
pop
adc
pop
and
push
pop
retf
jle
repnz
rcl
and
push
sbb
mov
mov
je
ins
lock
cld
(bad)
icebp
xor
mov
cmp
fadd
(bad)
jno
or
mov
xchg
mov
xor
rcr
dec
cdq
jg
js
or
bnd
mov
and
jb
xchg
lds
add
xchg
movs
jae
retf
mov
push
sbb
jae
jecxz
aas
ret
jns
fist
cmps
sub
lea
shr
push
test
mov
xchg
or
shl
ss
push
js
cmp
push
mov
push
cmps
add
pop
repnz
push
pop
rcl
inc
sub
test
mov
xchg
call
pop
mov
fbstp
cmps
or
(bad)
adc
sub
inc
int3
jecxz
or
inc
mov
mov
mov
sbb
(bad)
pop
ror
sub
sub
jns
adc
inc
mov
mov
into
push
xor
nop
dec
adc
mov
call
popf
and
loope
ja
inc
sti
cmps
imul
adc
ja
fsubr
std
pop
lds
cmc
sub
daa
out
movs
cs
test
call
aam
jle
sbb
push
sbb
adc
mov
xor
test
sbb
in
out
adc
test
call
dec
and
inc
or
cmp
or
(bad)
dec
popa
cmps
push
fadd
inc
lods
xchg
cmp
lods
mov
adc
and
sbb
fisubr
mov
pop
pop
pop
loopne
(bad)
jbe
test
daa
cs
lods
xor
xor
mov
xor
(bad)
aas
jmp
dec
nop
ret
popf
sbb
lds
jle
adc
pop
push
xchg
xchg
and
in
lock
aam
jecxz
dec
xchg
sbb
jb
loop
ficomp
mov
in
fucomp
ss
adc
mov
push
outs
out
or
xchg
add
adc
pop
lods
daa
mov
push
aas
add
lds
dec
jno
sub
fadd
ret
adc
mov
nop
mov
lahf
fcomp
pop
ror
mov
idiv
gs
adc
or
hlt
push
retf
push
sbb
ret
popf
jge
js
aad
mov
cmps
cmc
pop
sbb
popf
mov
fnstenv
mov
xor
jp
fnsave
xchg
adc
sbb
jge
jb
fst
sbb
inc
xor
int3
add
ja
retf
jg
mov
xor
repz
add
dec
mov
jmp
pop
add
push
imul
cmp
pop
push
inc
or
lods
(bad)
ins
jp
(bad)
ins
or
repz
add
mov
mov
push
xchg
es
lock
jg
fist
pop
or
in
mov
inc
jae
add
sbb
int
pop
mov
fistp
and
jle
pushf
jb
xor
rol
xchg
mov
inc
mov
push
arpl
sub
mov
ret
pop
pop
mov
mov
dec
mov
retf
pop
gs
dec
call
push
sub
aaa
xor
mov
pop
stc
sbb
rcr
data16
pop
ficomp
ss
sbb
inc
jns
out
jmp
lahf
imul
fidiv
add
bswap
ins
or
lock
movs
sub
cld
xor
popf
stos
and
std
movs
sub
call
sbb
dec
adc
pop
xor
inc
call
fisttp
xor
lahf
pushf
(bad)
push
and
push
mov
or
and
inc
int3
popf
add
pop
fimul
xor
bound
(bad)
xor
shl
and
cmp
fwait
sbb
sbb
xor
out
(bad)
mov
xor
jmp
push
ins
cmps
shl
clc
outs
test
sbb
sub
jmp
or
clc
les
loope
mov
fstp
(bad)
cs
call
mov
outs
test
jmp
add
xchg
pop
jbe
leave
lds
test
fild
jns
push
ja
sar
xchg
push
add
in
push
jge
jo
inc
sbb
jg
and
rol
gs
mov
dec
jne
cwde
test
cmp
imul
lahf
sub
not
or
(bad)
movs
jmp
mov
push
repnz
sahf
bound
cmps
xchg
es
and
mov
push
std
(bad)
stc
cmp
xchg
scas
mov
jnp
popf
das
jae
in
jne
add
xchg
addr16
test
sti
(bad)
sar
push
call
sti
inc
outs
pop
cmps
dec
pusha
pop
(bad)
mov
jmp
push
dec
and
mov
xchg
ins
push
scas
jo
pop
adc
test
repz
push
xchg
cmp
mov
mov
stc
stc
gs
jge
es
jecxz
dec
cli
(bad)
aam
daa
rcr
sbb
repz
shl
movs
lods
inc
dec
cmp
aaa
aam
ror
cld
sub
icebp
addr16
mov
inc
ins
fcomp
mov
mov
mov
jb
in
mov
movs
xchg
lock
pop
jb
(bad)
pop
movs
xor
outs
cmp
xchg
xchg
push
popa
mov
add
jl
add
sar
cwde
cmps
imul
push
sub
sub
mov
cmps
push
xor
inc
ss
movs
mov
je
fist
rcr
cwde
sbb
loopne
lea
loope
dec
stc
das
gs
nop
jl
pushf
dec
mov
mov
sbb
xchg
xor
xchg
icebp
scas
jl
daa
pop
ret
lock
push
mov
dec
inc
in
into
daa
aam
adc
inc
repz
pop
repnz
xchg
push
daa
xor
je
mov
popa
jo
jmp
xchg
dec
sti
mov
std
iret
jnp
fild
or
and
in
ss
in
repnz
bound
ja
dec
call
cmps
dec
adc
xchg
call
std
js
rcr
mov
mov
pop
out
xor
rcr
mov
les
mov
adc
out
mov
cmp
pop
inc
and
and
mov
push
dec
fwait
jp
add
and
mov
mov
movups
mul
ret
jp
mov
loopne
pop
ja
mov
mov
sbb
sub
pushf
sub
inc
repnz
jns
fs
inc
xor
test
cmp
inc
aam
test
xchg
cmovb
sahf
gs
sbb
jo
mov
xchg
mov
js
mov
retf
pop
pop
fdivr
mov
jmp
es
jl
xchg
xchg
push
fild
xchg
cmp
push
lock
out
aad
xchg
sub
faddp
sub
fadd
ins
jge
sub
mov
fwait
mov
inc
shl
cwde
mov
movs
inc
mov
jno
mov
inc
xchg
push
dec
ret
loop
imul
add
jne
aas
sbb
push
pop
stos
js
aad
jb
pusha
ja
push
pop
or
mov
popa
fs
sub
xlat
int3
imul
in
out
mov
jo
xor
and
imul
aad
mov
mov
nop
sar
mov
push
ins
jle
dec
push
je
in
sbb
inc
xor
es
cvtps2pi
(bad)
int3
(bad)
daa
addr16
inc
cli
dec
add
cs
or
test
jle
cwde
mov
pop
push
loop
std
aas
movs
lock
ret
inc
cdq
aad
mov
mov
and
xlat
dec
popa
leave
push
clc
sub
gs
adc
cmp
test
and
lea
add
sbb
and
lahf
sub
push
retf
sbb
(bad)
sbb
inc
daa
mov
xor
adc
adc
(bad)
out
int
lds
lock
cmp
and
mov
mov
outs
xchg
mov
ins
mov
push
ret
xlat
xchg
push
les
mov
gs
add
fwait
cmps
cmps
hlt
inc
leave
push
sub
xor
stos
or
(bad)
lods
repnz
frstor
push
cmp
repnz
xchg
test
add
xor
mov
and
test
adc
jecxz
or
push
dec
mov
cmp
sar
or
clc
or
mov
inc
hlt
adc
fistp
popf
pop
popf
hlt
and
push
adc
pop
icebp
and
retf
enter
jb
cmp
xor
mov
sbb
sub
push
sub
arpl
add
fsubr
mov
out
pop
fs
inc
scas
test
div
mov
std
push
or
jne
xlat
outs
xlat
cmps
out
mov
mov
lahf
sub
or
or
fxch
push
jno
xchg
push
mov
std
aaa
push
pop
cmp
pop
xor
and
lods
push
inc
jne
(bad)
xchg
sub
cmp
and
mov
int3
inc
lds
xor
cmp
pop
nop
pop
ds
sub
cmp
aas
cwde
popa
push
sub
and
sbb
pushf
add
push
jmp
push
mov
adc
mov
addr16
cs
jo
xchg
xor
pop
rcr
push
push
neg
jo
lock
dec
or
mov
imul
fcom
fwait
sbb
rcr
adc
xchg
pop
pop
xchg
enter
aaa
addr16
outs
in
sub
mov
mov
add
cs
jl
sbb
xchg
ror
push
shl
iret
in
lea
jne
inc
retf
inc
test
shl
pop
push
stc
mov
or
(bad)
clc
sub
jbe
dec
mov
dec
cli
int3
jo
neg
cdq
adc
into
add
jmp
pop
inc
and
(bad)
hlt
in
xor
test
dec
adc
sub
push
sub
jno
cmp
or
or
or
ins
loope
xchg
sbb
cli
dec
add
cld
mov
xor
ret
mov
mov
scas
cs
or
or
push
add
cmp
fisttp
cmp
hlt
and
sub
add
lock
call
push
aas
cmps
movs
jl
dec
into
push
les
imul
in
in
(bad)
mov
inc
fdivr
dec
test
push
(bad)
push
aam
sbb
push
jmp
das
sar
imul
not
push
cmp
dec
adc
inc
js
nop
out
adc
cdq
iret
jp
fcomp
aas
dec
sbb
pop
rcl
fld
stc
(bad)
jae
pop
jne
in
loope
mov
scas
pop
shr
dec
xor
dec
mov
scas
jge
fcomp
(bad)
mov
repnz
pop
or
cmp
add
out
dec
out
adc
and
(bad)
aaa
shl
stc
dec
pusha
daa
pop
je
in
pop
inc
pop
xor
sahf
jp
dec
(bad)
mov
xchg
cdq
and
inc
and
in
mov
sbb
(bad)
xor
lods
xchg
iret
fs
les
mov
and
cs
inc
jmp
cdq
lea
pop
push
or
pop
pop
shr
into
pop
push
rcr
in
push
rol
or
mov
aam
into
mov
cmp
ss
cli
xchg
je
adc
mov
and
enter
mov
fisub
xor
push
movs
repnz
pop
movs
pop
inc
stos
fwait
jb
sbb
inc
push
or
in
sbb
not
add
sbb
scas
lods
adc
push
dec
aas
aaa
nop
xor
outs
pop
sti
pushf
not
icebp
jns
sub
mov
push
and
cmp
movs
arpl
rol
leave
adc
cli
mov
or
cmp
sub
jo
pop
push
in
in
sbb
sar
xor
mov
ins
pop
mov
dec
outs
xor
sbb
pop
lahf
stos
inc
lods
aad
lods
sti
test
sbb
ds
inc
dec
jae
xchg
mov
xchg
jecxz
sub
jg
loop
mov
test
pop
and
jne
mov
dec
(bad)
mov
mov
pop
mov
popf
mov
cmc
scas
push
cs
and
jnp
sahf
and
pop
push
jnp
xor
pop
mov
leave
and
cdq
push
xor
aas
mov
movs
jecxz
les
das
xchg
sbb
mov
mov
scas
xor
dec
cmp
mov
ins
mov
mov
cmp
xchg
(bad)
out
loop
fnop
lods
arpl
test
mov
lods
retf
aaa
iret
push
jge
mov
outs
xchg
mov
ins
xor
(bad)
fimul
int3
mov
in
mov
ss
inc
rcl
loopne
retf
popf
adc
cmp
jmp
add
scas
retf
shl
sbb
add
jnp
mov
pop
mov
mov
out
mov
jnp
(bad)
and
xor
inc
clc
lahf
xchg
aad
cmp
mov
mov
dec
xchg
popa
mov
bound
dec
push
inc
das
ds
arpl
and
inc
adc
cmp
fiadd
xor
cmp
loop
cmps
mov
sub
push
lods
sbb
jge
aad
xchg
sub
mov
pop
jo
dec
pop
stos
cmps
push
adc
out
dec
repz
mov
retf
in
call
and
adc
cmp
xchg
adc
fimul
test
call
movs
test
out
cmp
enter
or
mov
sub
sbb
pop
repz
(bad)
jg
leave
les
mov
call
mov
(bad)
mov
fs
jae
xchg
add
lea
lahf
adc
mov
pop
std
adc
jle
mov
jnp
jne
xor
(bad)
pop
mov
jmp
lods
(bad)
rcr
sub
in
addr16
(bad)
les
xchg
adc
cmps
jne
mov
pop
arpl
dec
imul
dec
movs
inc
lahf
test
sub
cmc
adc
adc
daa
dec
ds
loopne
and
jg
scas
das
ins
dec
test
dec
call
lea
cs
mov
mov
out
cmp
jae
and
dec
dec
dec
cdq
cmps
ja
mov
pop
pop
dec
(bad)
and
inc
out
aam
adc
add
dec
dec
(bad)
sub
outs
int
cmp
shl
ins
test
(bad)
jle
or
stc
or
jne
fwait
add
mov
jo
xor
cld
dec
fild
stc
xchg
push
or
cmp
push
dec
enter
sub
rol
lods
mov
ins
mov
fdivp
fstp
(bad)
icebp
cmp
rol
pop
pusha
jae
mov
retf
xchg
sub
add
clc
nop
vhaddpd
clc
fstp
ret
shl
pop
fdivr
inc
aas
aas
mov
pop
sbb
js
xchg
add
or
inc
fnstenv
cdq
cli
mov
jb
inc
push
sbb
cwde
outs
push
inc
cmp
repnz
pop
mov
and
aam
jecxz
xchg
sbb
xchg
xchg
lock
outs
(bad)
mov
push
scas
int
ret
add
call
push
add
cld
adc
adc
aad
pop
cld
push
adc
cmp
loop
std
pop
rcr
call
addr16
pusha
lods
and
std
les
or
shl
push
xlat
pop
jle
xchg
mov
sbb
push
test
imul
and
push
push
push
rcr
vmovdqa
out
pop
mov
mov
jmp
lahf
cmps
fcomp
jne
aad
mov
inc
ins
add
lahf
ss
jne
mov
retf
and
dec
out
fsub
jl
stos
and
lahf
dec
mov
repz
jle
aad
das
mov
xchg
cmp
push
fwait
(bad)
hlt
mov
sub
jb
inc
cmp
inc
jno
lods
imul
nop
inc
sub
or
add
dec
lock
jg
enter
jle
jp
mov
xchg
pop
jmp
shr
loope
adc
std
cmps
mov
cmps
adc
mov
cmp
fmulp
scas
push
fdivr
int3
sar
pusha
retf
mov
iret
inc
mov
test
pop
sub
jg
xor
mov
repz
mov
jb
cli
add
cmp
pop
inc
mov
pop
mov
pop
mov
loopne
aam
pop
pop
jl
xchg
push
daa
pushf
lahf
pop
xlat
mov
mov
iret
pop
pushf
inc
adc
data16
loope
xor
mov
pop
adc
rol
mov
xor
push
or
mov
stos
sub
inc
das
int3
add
sbb
aad
call
xor
xor
rcl
push
sub
into
inc
pop
mov
fs
aaa
or
jns
pop
aam
mov
jge
adc
(bad)
int
push
mov
cld
retf
stc
push
mov
fistp
sbb
sub
sti
xchg
jne
enter
in
mov
inc
xor
outs
mov
pusha
pop
sub
pop
dec
arpl
stos
lahf
add
fild
mov
lea
sar
inc
jo
out
ror
lods
mov
mov
jg
adc
loopne
push
mov
nop
call
sbb
(bad)
cld
das
push
jno
pusha
and
or
popa
popf
pop
movs
(bad)
jp
jae
lea
xor
xor
fsub
jmp
jp
js
dec
cld
or
xor
jo
xor
cs
rol
enter
mov
cmc
(bad)
sbb
push
loop
dec
and
stc
mov
mov
ins
loop
rcl
pop
jle
mov
test
xchg
lods
(bad)
xor
out
jl
cmc
ficomp
jg
lahf
jns
mov
shl
retf
shr
call
mov
cmps
lods
retf
mov
mov
outs
(bad)
sti
and
js
dec
inc
push
aad
pop
xor
xor
stos
xchg
dec
ret
xchg
sbb
sbb
mov
jo
and
push
and
inc
or
jecxz
sub
pop
xor
cld
shr
adc
dec
mov
imul
(bad)
call
(bad)
lock
and
push
cwde
mov
jbe
adc
sub
xor
popf
cmp
push
mov
shl
mov
push
and
test
xor
inc
inc
(bad)
xchg
pop
xchg
cmp
fisubr
add
pop
addr16
mov
arpl
enter
or
cld
fild
les
xchg
cwde
aam
imul
das
mov
xchg
cdq
js
or
in
dec
mov
loopne
mov
xchg
leave
scas
cmps
js
pop
sub
inc
pop
(bad)
shl
adc
and
call
inc
inc
push
sub
pop
sub
sbb
pushf
pop
shl
and
sub
cdq
fwait
or
outs
xor
pusha
retf
sub
mul
add
inc
mov
scas
or
add
jo
jbe
and
pop
xor
push
sbb
in
push
push
test
scas
dec
mov
in
clc
pminsw
sar
adc
stc
inc
call
push
or
fs
ins
xchg
lahf
fwait
ins
rcr
rcl
cmp
sub
xchg
xor
jns
jmp
or
(bad)
ins
fisubr
inc
sar
mov
push
mov
ins
out
cmp
or
call
cmp
mov
fs
scas
jmp
xor
scas
pusha
(bad)
jb
push
pop
mov
loopne
ja
in
ror
shr
stc
retf
xchg
int3
fld
cmc
hlt
jle
add
push
scas
mov
mov
aad
and
pop
mov
bound
shr
adc
adc
and
fiadd
pop
and
push
dec
out
xchg
les
sub
popf
inc
jno
ret
cwde
fdivr
push
pop
jo
jno
mov
jp
mov
and
sub
icebp
ja
mov
sub
or
mov
mov
mov
adc
mov
in
push
fistp
lea
jne
xchg
add
(bad)
adc
call
gs
in
dec
test
mov
pusha
les
retf
cli
sbb
cmps
sbb
(bad)
push
dec
sbb
popf
fisttp
(bad)
int3
(bad)
out
or
cmp
mov
cmps
add
mov
(bad)
xchg
mov
int3
sbb
icebp
jns
int
jne
lahf
out
popa
shl
push
cmps
sti
push
in
test
ins
sub
xor
out
sbb
jb
test
iret
pop
into
inc
add
mov
test
mov
mov
hlt
call
jmp
enter
dec
ja
std
pop
pop
add
push
xor
mov
imul
push
call
stos
jg
cmp
std
ror
popa
adc
pop
int
cmp
ja
fs
xchg
xchg
mov
cwde
or
jb
sub
add
repnz
adc
sar
pop
call
push
push
push
xadd
cmps
daa
int3
push
push
or
sti
cld
out
mov
lea
retf
mov
mov
mov
jmp
xor
imul
add
sub
repnz
std
int
and
fdiv
fsubr
inc
mov
data16
sbb
movs
or
sbb
test
cdq
aam
fucomip
inc
push
cwde
and
test
xor
setp
cmps
rol
adc
dec
mov
sbb
fstp
dec
or
mov
mov
dec
addr16
cmps
scas
or
sub
(bad)
pop
fmul
adc
leave
dec
in
pop
aaa
add
dec
xor
or
cli
ret
push
adc
sub
sti
pop
mov
outs
loopne
aas
fstp
sub
push
pop
test
add
iret
sbb
out
pop
(bad)
push
inc
aad
mov
add
fcomp
mov
sub
jae
call
mov
cdq
add
add
or
push
repnz
clc
add
xor
aam
cdq
jmp
push
add
cmc
enter
inc
enter
shl
neg
out
adc
push
adc
stos
out
xor
jnp
push
cmps
test
cmp
xor
push
jae
mul
adc
lods
in
cmc
dec
mov
sbb
jns
sub
es
(bad)
shl
push
stc
jbe
leave
mov
sub
pusha
add
xor
mov
mov
jge
mov
pop
and
add
into
xchg
popa
std
jmp
dec
pop
add
arpl
mov
sbb
nop
and
cmc
dec
ins
add
shl
aad
bound
popa
or
xchg
addr16
sbb
cmp
ds
mov
adc
jmp
and
mov
jmp
inc
pusha
idiv
iret
jecxz
icebp
cmps
cmps
out
in
sbb
xchg
test
cmp
fld
inc
push
and
xor
mov
dec
cmps
mov
xor
leave
push
fcomp
test
(bad)
icebp
hlt
push
imul
shl
imul
lds
sub
je
mov
popa
fs
int
xor
sti
lods
cmp
stos
out
ins
gs
sub
adc
jp
or
cwde
out
pop
es
mov
test
xchg
push
xchg
mov
jge
pushf
lahf
mov
hlt
pcmpgtb
pusha
or
mov
jmp
ret
loope
and
lods
sub
jg
shr
add
pop
js
mov
lds
test
in
xor
cmp
test
xchg
or
ja
nop
jl
sbb
or
jbe
cld
fwait
jnp
sbb
repz
xchg
xor
xchg
popf
jmp
test
in
rcr
neg
adc
xor
push
mov
out
push
xchg
and
push
cs
mov
out
xchg
jecxz
cmp
sub
enter
push
push
push
push
mov
daa
mov
and
cmp
ds
sub
out
adc
pop
and
les
call
stc
cmps
(bad)
clc
(bad)
xchg
lods
push
pusha
dec
ror
sub
xor
and
or
push
adc
mov
add
test
inc
mov
sbb
rcr
dec
data16
(bad)
scas
and
push
(bad)
jmp
test
call
and
sbb
ins
pop
mov
jp
icebp
cmp
cld
push
lods
xchg
mov
push
inc
push
add
mov
pop
xchg
lock
cmp
je
adc
enter
push
(bad)
or
sbb
and
jle
push
stos
push
mov
jno
out
arpl
inc
ret
mov
mov
mov
repnz
xchg
push
and
cmp
jne
cmp
pop
stos
(bad)
mov
push
jo
int
cmp
push
inc
mov
ins
aam
sub
mov
mov
cmp
inc
idiv
fwait
out
xor
fld
inc
pop
and
popa
mov
add
inc
sti
fcos
call
mov
es
imul
add
and
jecxz
xor
out
std
jne
ror
imul
popf
push
mov
or
scas
outs
adc
loop
cmp
sub
cmp
add
inc
les
popf
ins
(bad)
jge
mov
xchg
imul
cmp
push
mov
test
iret
out
fbld
pop
inc
sub
xor
xor
adc
dec
cwde
pmulhuw
arpl
mov
sbb
mov
xor
xor
mov
and
enter
jg
push
in
or
pop
lea
dec
sbb
(bad)
pop
inc
adc
add
pop
and
cwde
ret
xchg
inc
mov
cmp
ficom
call
cmp
pop
stc
add
jae
jmp
adc
das
xchg
jmp
or
lea
outs
(bad)
fistp
das
sub
mov
and
mov
jb
(bad)
std
imul
cs
ret
mov
(bad)
or
xor
mov
test
pop
rcr
push
jmp
fcom
ret
inc
call
mov
mov
push
loope
ror
daa
icebp
lods
imul
push
shr
mov
mov
std
in
adc
and
or
imul
rcl
adc
outs
inc
repz
or
pusha
adc
(bad)
mov
mov
cmp
scas
jnp
aas
adc
cwde
aas
add
pop
pusha
out
dec
ret
loop
mov
cli
push
xchg
jae
mov
mov
cmc
fcmovu
mov
dec
pop
mov
sti
xor
adc
inc
(bad)
jmp
daa
arpl
mov
shr
(bad)
mov
lahf
fdiv
rol
mov
adc
push
ins
sub
jns
and
ret
adc
pop
push
pusha
daa
neg
retf
sub
dec
cwde
adc
jnp
xchg
ret
and
jle
pop
idiv
out
adc
iret
pop
icebp
and
or
mov
mov
in
xchg
lahf
mov
mov
pop
mov
push
push
dec
out
and
jl
repz
inc
mov
push
pop
adc
and
push
icebp
ins
push
sahf
pop
sub
pop
ret
xchg
lds
mov
retf
outs
stc
int3
out
shl
mov
mov
sbb
movs
mov
inc
or
pop
pop
je
sbb
and
int3
cmps
icebp
sbb
xchg
add
(bad)
sub
jb
mov
dec
inc
rcl
shl
lea
jnp
rol
and
cmp
(bad)
add
push
frstor
outs
mov
pop
pushf
cmc
cwde
xchg
xchg
daa
inc
jae
ror
dec
lock
ss
mov
arpl
sti
int3
int
adc
data16
or
mov
push
push
scas
dec
or
ja
mov
adc
or
shl
mov
into
add
mov
js
stc
cmc
lock
push
add
dec
mov
mov
in
(bad)
jo
repnz
in
clc
jl
(bad)
and
movs
cmp
inc
push
cmp
div
xchg
int
mov
jmp
cmp
inc
push
push
dec
or
les
mov
(bad)
pop
push
or
and
enter
xor
dec
push
iret
and
in
arpl
sub
mov
and
pop
sbb
xchg
mov
adc
das
adc
pusha
sub
sub
stos
push
in
cli
mov
xchg
push
push
out
movs
pop
out
nop
jno
cmp
pop
fbstp
pushf
daa
sub
(bad)
ror
sti
jnp
jp
les
cli
test
xlat
mov
ret
xor
pop
and
(bad)
and
xor
mov
xchg
ja
or
mov
cwde
cwde
(bad)
and
sbb
sti
add
retf
jno
pop
sbb
shl
and
mov
call
stc
or
sbb
cmp
aas
dec
ror
pop
cmp
add
sbb
push
js
sahf
repnz
dec
mov
or
cld
and
jle
jae
push
sub
xchg
inc
cmp
loope
es
or
inc
dec
jbe
mov
push
addr16
push
mov
fadd
iret
pop
repz
clc
loopne
ins
push
xor
fld
and
mov
pop
rol
mov
mov
sti
add
lea
in
ds
shl
push
pop
and
fwait
push
xor
clc
mov
dec
pop
mov
cs
int
xchg
(bad)
cmps
xor
jmp
lahf
scas
mov
jbe
sub
pop
nop
pop
sahf
ret
adc
aam
pushf
mov
jge
sub
xchg
push
jns
and
sar
out
imul
or
nop
test
out
mov
nop
(bad)
mov
or
je
pop
mov
push
repz
push
push
xchg
in
cli
mov
loopne
inc
mov
jle
je
cmp
call
inc
outs
add
pop
sysenter
jns
mov
and
leave
ins
xor
jg
mov
repz
and
lock
(bad)
cwde
retf
jne
pop
mov
call
les
xchg
jl
fnstsw
test
in
fistp
test
or
xchg
(bad)
fisttp
out
popf
mov
push
pop
mov
scas
and
adc
push
dec
not
repnz
and
add
xchg
pop
adc
sub
scas
dec
xchg
xchg
mov
dec
mov
xchg
outs
push
imul
les
dec
mov
cld
int3
mov
ja
enter
dec
mov
jnp
jg
or
sub
ds
or
jge
inc
mov
psubusw
xchg
and
push
fsubrp
sub
pop
dec
pop
out
push
mov
fsub
fisubr
inc
pop
sbb
fs
in
cmc
add
sbb
add
sub
repz
sub
loope
mov
cmp
call
aam
scas
or
ins
add
jl
xor
imul
dec
popf
adc
jmp
jns
fiadd
and
adc
in
fidiv
cdq
jge
call
dec
sbb
sbb
rcr
sub
push
dec
or
xor
stos
adc
iret
fnsave
or
mov
shl
es
lds
fisub
scas
addr16
dec
pop
scas
fbstp
mov
pushf
cld
xor
(bad)
stc
mov
cs
dec
ins
sub
clc
fwait
rcr
cmps
sbb
mov
adc
mov
mov
je
out
push
in
jecxz
imul
movs
and
and
ins
dec
sbb
fnsave
cmp
daa
add
push
jns
lds
idiv
daa
popf
pop
mov
leave
popf
cmp
mov
movs
repnz
es
or
scas
repnz
addr16
mov
(bad)
pop
aas
pop
inc
mov
shr
(bad)
popf
inc
push
in
pop
sbb
mov
inc
inc
dec
push
xchg
sub
mov
loop
and
cmp
push
into
outs
mov
xchg
into
cwde
sbb
push
outs
test
push
pop
add
mov
lods
popf
add
pop
pop
retf
jp
cmps
jbe
jnp
mov
dec
push
push
sub
add
ret
ror
popf
cmp
ds
das
clc
loopne
lods
add
sbb
ror
sbb
adc
xchg
jmp
xchg
adc
sub
pop
jp
or
into
mov
das
in
rcr
lahf
pop
dec
add
stc
xchg
sbb
loope
clc
jns
xchg
iret
dec
pop
das
ja
in
adc
cmp
pmaxub
xor
sub
ds
sbb
mov
lods
cld
pop
pop
shl
inc
jne
xchg
pop
dec
scas
sub
(bad)
adc
mov
scas
xchg
shr
cmp
jle
int
mov
cwde
jns
(bad)
dec
les
mov
ret
cmc
fs
adc
in
cs
cwde
add
dec
pop
cld
cmp
sub
arpl
arpl
inc
cmp
cwde
icebp
cmps
inc
test
and
ffree
sub
(bad)
xchg
dec
sti
push
cdq
xor
inc
dec
push
push
lahf
mov
xor
mov
test
nop
test
out
out
arpl
mov
not
push
aaa
pop
inc
add
xchg
out
lds
ds
inc
aas
add
pushf
inc
out
jbe
pushf
rcl
aaa
or
inc
mov
inc
in
and
shr
mov
mov
iret
popf
sub
dec
int3
mov
aad
test
jnp
(bad)
fsubp
mov
dec
jns
(bad)
out
mov
jmp
mov
jecxz
(bad)
jbe
lock
mov
popf
jg
pop
mul
movs
mov
js
sti
dec
ss
mov
ror
inc
daa
retf
and
jg
sub
loope
and
jns
int3
rol
push
into
repnz
lds
xor
adc
jno
cmps
data16
mov
pop
adc
adc
scas
call
add
btc
pop
xor
ds
and
jl
pop
cmp
xchg
or
adc
cmp
mov
cmp
(bad)
call
(bad)
cmp
ficom
add
sub
or
pop
cmps
jae
iret
mov
push
arpl
shr
cmp
sub
out
push
jbe
lds
pop
dec
sub
inc
jge
js
rcr
sbb
into
push
clc
movs
imul
pop
out
std
ds
and
jno
add
jp
test
push
xchg
lock
ror
mov
fisub
ins
sar
(bad)
jbe
sub
data16
jmp
or
ins
add
push
adc
jge
int3
cmp
push
daa
clc
je
lahf
das
xchg
pop
sar
push
push
mov
jmp
dec
add
jb
mov
pusha
and
cwde
xor
inc
pop
and
sbb
xchg
push
lock
dec
sub
push
cmp
and
add
xchg
imul
iret
mov
xchg
test
add
stc
sub
sbb
push
lds
add
and
and
nop
std
dec
pop
std
aas
and
shr
in
pop
test
ficom
sub
fwait
jmp
jmp
and
test
pop
push
and
ror
test
mov
lods
ss
add
into
jns
sbb
mov
in
inc
ins
and
pop
aad
shl
mov
aam
mov
jns
ss
in
mov
or
or
ds
add
js
lock
vpmuludq
pusha
mov
or
sbb
pop
std
popa
stos
or
cmp
adc
or
hlt
dec
and
mov
shl
(bad)
or
push
stos
es
mov
aad
xlat
cmps
add
mov
pop
fwait
std
out
mov
push
ror
dec
mov
xlat
mov
popf
(bad)
or
int
cmp
mov
loopne
xchg
fild
cwde
(bad)
hlt
push
xor
bound
sub
cdq
jg
sbb
sub
lods
int
pop
iret
ins
and
pop
in
(bad)
pop
leave
push
aas
hlt
mov
outs
call
cs
(bad)
js
retf
or
rol
out
mov
jp
mov
xchg
mov
jl
xor
jmp
push
sbb
adc
mov
inc
fimul
iretw
push
cld
jb
and
in
xor
and
dec
adc
inc
int
(bad)
lea
pop
fild
cmps
gs
fcomi
fadd
inc
retf
and
test
retf
jecxz
push
push
pop
stos
push
cmp
cmc
in
add
xchg
sub
pop
xchg
pop
dec
sbb
iret
or
les
xor
xchg
dec
js
sbb
mov
or
pusha
xor
lods
sbb
push
mov
push
dec
call
push
bound
add
pop
retf
jbe
xor
jo
add
inc
mov
jne
ret
stos
les
adc
jmp
sbb
jae
nop
data16
popf
push
(bad)
lods
jne
aaa
(bad)
jae
ror
pop
fsubr
dec
mov
mov
inc
mov
loope
movs
in
outs
ror
enter
call
je
(bad)
mov
dec
in
adc
xchg
mov
ret
in
jmp
in
sub
ffree
hlt
sbb
mov
xor
test
sub
push
out
jp
jmp
mov
lock
mov
lock
and
sub
loop
xchg
imul
gs
fdiv
kmovw
ja
mov
mov
mov
sbb
push
into
(bad)
jbe
sub
adc
push
repz
xchg
btr
call
pop
test
je
repz
adc
jg
mov
cmp
iret
or
inc
sub
das
outs
mov
and
mov
adc
xor
push
jg
pop
int3
jno
inc
iret
sbb
ins
push
std
fst
stos
inc
dec
das
les
mov
mov
out
push
xchg
mov
xchg
ins
jmp
jmp
shl
test
mov
(bad)
fucom
mov
out
xor
(bad)
call
push
mov
shr
inc
mov
ins
dec
sub
mov
call
test
sub
fnstsw
(bad)
mov
inc
xor
mov
dec
jmp
inc
inc
int3
push
mov
inc
xchg
mov
mov
cmp
mov
xchg
jmp
sub
out
cli
das
inc
inc
stc
xor
leave
test
ja
ins
jns
jbe
test
(bad)
push
mov
out
xor
push
jo
jo
pop
std
mov
retf
int3
mov
adc
xchg
inc
push
jmp
(bad)
fst
aad
retf
mov
(bad)
sahf
inc
ret
pop
mov
xor
fs
adc
mov
or
mov
add
in
push
outs
pop
inc
dec
lods
(bad)
out
and
movs
ss
out
bnd
sbb
cmc
int
mov
push
dec
pop
in
call
fst
adc
jnp
jo
(bad)
cmp
mov
jb
ficom
hlt
(bad)
pop
shr
xchg
mov
mov
add
xchg
lea
xor
icebp
or
cwde
sbb
mov
cmps
aas
cdq
sub
mov
cmp
sub
shr
push
sub
xchg
xchg
das
jbe
(bad)
pop
sub
sbb
or
jno
and
adc
xchg
sbb
push
add
pop
cld
adc
ds
mov
loopne
jbe
mov
xor
mov
pop
sbb
or
sbb
ja
mov
cmp
int
sbb
lds
adc
or
add
popa
into
inc
cmp
mov
jb
cmp
push
add
test
add
(bad)
pop
out
mov
and
inc
cmp
jae
dec
sar
pop
add
arpl
pushf
fmul
cmp
adc
add
and
mov
ficom
push
or
out
dec
sub
push
in
(bad)
jmp
inc
cld
jg
out
popf
mov
test
stc
js
cdq
xor
mov
adc
cmp
(bad)
pop
cld
jg
je
pop
outs
cli
jg
jae
pop
push
jecxz
sbb
inc
jne
dec
aad
add
xor
inc
std
pop
and
aaa
mov
xchg
mov
push
adc
lds
pushf
dec
cli
fs
sbb
shr
retf
fild
push
push
xor
push
in
xor
inc
outs
retf
(bad)
aas
mul
repnz
(bad)
jo
dec
jmp
lahf
(bad)
outs
ss
fwait
in
cmc
cmps
mov
and
jg
mov
sti
inc
test
xor
push
std
xor
dec
mov
xor
ins
mov
es
sub
daa
gs
iret
nop
es
outs
mov
xchg
sbb
lds
jmp
aas
jl
sub
or
shr
mov
or
pushf
or
fs
add
ja
sar
into
sahf
mov
jl
test
adc
rcl
pop
pop
imul
and
and
or
xchg
cmp
fadd
mov
jno
mov
adc
cmp
aam
lahf
sub
xchg
jecxz
sub
shr
out
xchg
rcl
mov
scas
movs
cli
mov
scas
sbb
and
retf
xor
add
rcr
sbb
cmp
or
in
inc
mov
or
pop
rcr
fistp
jp
inc
push
fild
push
arpl
mov
mov
push
xchg
ror
add
(bad)
inc
sub
movs
(bad)
movs
mov
sti
push
retf
ficomp
out
inc
in
sbb
cdq
loope
jnp
fninit
xchg
test
mov
out
sbb
pop
add
out
xchg
call
pop
lock
mov
xchg
in
int3
mov
push
jecxz
xchg
rcr
les
lods
push
mov
and
pop
inc
inc
mov
and
(bad)
cdq
movs
pop
jae
aas
pusha
xor
ret
test
push
inc
jns
jle
or
mov
inc
ret
mov
and
mov
and
sti
cmc
push
iret
jp
cmp
shl
mov
xchg
inc
mov
inc
inc
xchg
adc
scas
mov
jbe
pop
das
jns
mov
icebp
ins
jmp
add
push
mov
call
add
jne
jns
js
rcl
mov
leave
or
adc
daa
and
scas
clc
cmp
test
out
(bad)
stos
xor
pop
xlat
inc
in
scas
push
std
test
stos
push
push
out
xchg
mov
pop
jle
push
test
pop
dec
push
add
(bad)
sub
fs
mov
jp
stos
enter
scas
add
pop
sub
adc
int
cmp
daa
mov
and
push
xchg
jo
lock
(bad)
push
pop
out
cmp
xchg
imul
and
sbb
lods
pop
dec
mov
add
test
xor
sub
lock
cmp
ins
jb
adc
inc
sub
mov
repz
ja
xor
popa
mov
mov
js
add
and
cmps
sbb
pusha
scas
xchg
sub
xchg
jge
int3
jmp
int
jecxz
push
adc
clc
scas
sub
mov
xchg
xor
add
or
in
fcomip
dec
sub
call
mov
push
pop
inc
mov
push
nop
loopne
imul
dec
pop
xchg
push
inc
loope
movs
js
arpl
fnstcw
push
ficomp
loope
add
rcr
xchg
adc
xchg
mov
jb
jge
dec
jmp
test
icebp
push
aam
imul
pusha
dec
fild
xor
sbb
sub
mov
iret
outs
loopne
shl
(bad)
retf
sub
scas
(bad)
xor
jle
hlt
sti
cmps
mov
std
or
push
mov
(bad)
(bad)
aas
sbb
push
cmp
jl
sub
imul
pop
or
mov
mov
cld
sar
cmp
sub
xor
and
pusha
in
into
jl
pop
jnp
jo
mov
xchg
shl
popa
jmp
adc
xor
inc
and
rol
push
pop
stc
cmps
pop
and
sub
imul
lods
sub
dec
iret
mov
cmps
call
push
add
popf
imul
test
jl
xor
jecxz
and
xchg
xchg
and
cli
xor
(bad)
fs
jg
pusha
in
ss
in
icebp
scas
xchg
mov
xchg
ret
add
icebp
lahf
lahf
sub
(bad)
into
retf
inc
aam
jge
cwde
jg
jle
div
(bad)
jmp
std
jle
dec
loope
jle
add
movq
jb
mov
jp
sub
idiv
pop
pop
dec
fistp
or
sub
mov
movs
lahf
fs
fdivr
fisubr
popa
bound
stos
add
dec
mov
pop
jns
fsub
gs
push
pop
int3
dec
push
xchg
in
inc
popa
and
lock
loope
into
add
sub
dec
lea
in
sub
push
enter
push
retf
add
cmp
stc
pop
adc
iret
sub
dec
sar
xchg
ins
test
stc
mov
or
push
or
xchg
push
out
cld
lds
push
push
(bad)
sbb
(bad)
les
push
scas
mov
xor
sbb
mov
test
inc
aas
mov
dec
repnz
dec
xlat
stos
mov
sbb
js
arpl
imul
add
add
hlt
xchg
iret
js
popa
std
inc
idiv
xchg
fidivr
fild
psubsb
sub
js
mov
mov
aas
add
jmp
ss
adc
sub
mov
and
jo
mov
arpl
ficomp
xor
call
pop
or
push
call
or
push
sbb
jp
xchg
mov
pop
lods
push
add
dec
adc
es
and
cs
xor
mov
out
aas
and
ss
cmp
(bad)
mov
jge
inc
sub
pusha
adc
das
xor
adc
mov
mov
out
dec
in
popf
jo
inc
xchg
mov
pop
mov
rcl
xchg
rol
into
mov
push
dec
jl
retf
dec
ja
sub
push
add
fs
loopne
fst
push
mov
movs
mov
mov
hlt
fdiv
mov
sbb
int
push
pop
pop
repnz
and
loope
enter
jae
leavew
mov
or
fdivr
js
sub
arpl
lods
movs
dec
scas
and
pop
mov
xchg
inc
imul
push
aad
xchg
mov
outs
cmp
mov
adc
jmp
retf
sbb
mov
adc
sar
cwde
cmc
adc
push
mov
mov
cs
lahf
aaa
pop
push
cdq
not
push
lods
jmp
push
aaa
rcl
inc
es
jg
and
dec
mov
cmp
adc
mov
mov
sub
repnz
mov
xchg
mov
aaa
fwait
add
es
adc
pop
mov
es
pusha
adc
jne
call
xchg
test
mov
das
push
and
xor
sub
scas
and
cld
aaa
(bad)
cdq
xor
div
push
xor
(bad)
xor
xchg
out
push
(bad)
out
(bad)
imul
cmp
cmps
xor
icebp
fisubr
(bad)
jbe
dec
or
nop
pop
mov
leave
jb
inc
xor
or
and
arpl
cmp
add
stc
sub
dec
inc
xchg
pop
(bad)
jg
cs
xor
jl
push
push
rcr
pop
not
push
repz
adc
or
jmp
(bad)
adc
and
push
gs
or
and
mov
shl
mov
std
mov
cmp
sbb
mov
push
mov
cmp
clc
inc
(bad)
hlt
dec
add
rol
jne
pop
mov
inc
mov
lods
test
add
stos
ud1
cwde
add
or
inc
jp
scas
test
inc
and
ret
icebp
dec
pushf
bound
adc
leave
movs
mov
imul
loopne
sbb
loopne
jnp
loop
bnd
cli
xchg
mov
idiv
sbb
mov
(bad)
cli
mov
jo
xchg
(bad)
cmps
dec
xchg
mov
fst
fadd
mov
cmp
js
pop
cs
jmp
lods
add
outs
cs
xor
in
stos
sub
mov
add
push
cwde
sahf
mov
pusha
sub
pop
push
jmp
mov
loop
gs
mov
ret
(bad)
dec
bound
adc
cmc
xor
inc
sub
jno
xlat
adc
test
fist
push
mov
cwde
cmp
or
lods
sub
enter
fisub
sti
scas
dec
jno
dec
adc
retf
dec
dec
mov
mov
sbb
jle
sbb
sbb
int3
mov
jns
add
dec
jmp
aaa
bound
mov
pop
dec
aaa
mov
or
out
sbb
outs
out
dec
gs
or
lods
popa
ss
repz
pop
add
out
sub
out
gs
jle
ja
adc
or
cmp
cmp
dec
sbb
jmp
or
xchg
std
addr16
push
or
or
(bad)
das
jo
mov
or
adc
add
rcl
push
sbb
xchg
stc
dec
ret
add
cmps
rol
mov
fadd
jecxz
jle
sbb
sub
jae
aaa
xchg
scas
push
sub
mov
push
int3
and
cmp
lea
jecxz
and
mov
xchg
or
mov
cwde
movs
retf
dec
adc
or
imul
loope
sahf
and
sar
inc
pusha
cmps
addr16
icebp
pop
jmp
adc
or
inc
inc
cs
mov
(bad)
pop
fnstenv
ins
pop
push
in
(bad)
pop
mov
or
daa
mov
scas
mov
and
dec
jae
loopne
ret
sbb
mov
pop
sbb
xchg
xchg
mov
nop
test
shr
jbe
outs
lea
iret
or
icebp
push
call
jo
jg
cdq
and
pop
cli
mov
and
mov
xor
jmp
pop
std
inc
les
retf
push
dec
movs
popa
adc
jle
out
inc
add
inc
cmps
lock
les
je
ss
hlt
(bad)
push
push
add
iret
push
xor
cmps
popa
shr
(bad)
call
(bad)
in
jmp
idiv
dec
mov
pop
mov
cmp
cmp
hlt
push
jb
shl
adc
leave
xor
data16
adc
cmp
and
xor
out
inc
adc
dec
adc
das
fnstenv
or
ds
lahf
push
dec
add
cmp
add
movs
mov
inc
lahf
add
popa
daa
pushf
mov
cdq
bts
es
aad
and
xchg
dec
ror
pushf
(bad)
dec
in
or
xor
nop
add
mov
loopne
aad
psadbw
adc
vpcomq
and
mov
(bad)
adc
mov
es
stos
ret
push
jmp
daa
hlt
pop
imul
out
lods
xchg
inc
mov
mov
enter
dec
adc
cwde
shl
fistp
mov
mov
test
cs
in
cmps
or
dec
in
and
jecxz
outs
sub
or
repnz
ss
icebp
fincstp
push
fsubr
xor
(bad)
lock
jae
or
movs
mov
fsubr
(bad)
and
mov
loope
(bad)
outs
cmp
xchg
cmps
cmp
mov
lock
jmp
inc
push
(bad)
dec
cli
in
sbb
inc
jno
cmp
repz
mov
mov
aaa
push
mov
cdq
add
hlt
add
nop
stc
sbb
retf
inc
dec
int3
inc
nop
ror
iret
pop
cmp
ins
xor
lock
inc
lahf
mov
imul
icebp
dec
or
fisubr
mov
or
push
mov
add
add
inc
sub
out
sub
(bad)
ffree
sub
add
aaa
push
cs
popf
jl
adc
fwait
jnp
dec
jmp
ja
dec
or
or
stos
and
outs
add
dec
pusha
or
inc
lock
hlt
xor
das
push
xchg
enter
jo
adc
sti
out
adc
mov
mov
push
test
cmp
out
push
inc
sbb
push
mov
add
sub
adc
mov
pop
pop
jne
push
fcomp
cmp
(bad)
movs
outs
(bad)
mov
loope
jl
mov
leave
mov
cmp
inc
outs
sbb
jne
dec
(bad)
gs
in
cmp
pop
cmp
or
in
out
or
pop
push
adc
cmp
sbb
test
xchg
into
ret
ret
out
cmp
addr16
inc
pop
sub
in
test
out
cld
mov
cdq
(bad)
push
das
mov
dec
pop
int3
data16
sbb
cmps
dec
sbb
xchg
and
adc
iret
hlt
out
and
mov
dec
in
imul
pop
adc
fistp
push
dec
aam
in
das
ror
sub
ficomp
dec
in
test
out
out
push
inc
cmc
jns
sbb
pop
cmp
push
(bad)
mov
sbb
adc
out
in
or
lahf
dec
xor
inc
mov
dec
out
retf
xlat
popa
push
sbb
ins
push
mov
loope
inc
paddd
enter
cmps
xor
adc
jb
add
or
sub
jo
adc
ja
and
cmps
or
mov
ret
scas
loop
inc
pop
in
cmc
xchg
pop
call
es
inc
dec
jg
(bad)
in
jecxz
mov
(bad)
outs
sbb
(bad)
sub
push
jno
inc
or
movs
addr16
lods
ret
push
mov
cwde
fbstp
xchg
adc
ins
leave
mov
push
jbe
mov
pop
js
mov
mov
inc
jb
test
call
xchg
(bad)
sbb
dec
call
mov
push
inc
imul
mov
and
mov
lock
inc
cmc
icebp
std
sub
inc
mov
sub
(bad)
fidivr
outs
(bad)
push
xacquire
add
cmp
ins
inc
mov
mul
xor
arpl
sbb
inc
and
paddw
movs
add
fnstenv
push
(bad)
inc
jno
add
xor
adc
adc
jmp
in
adc
call
adc
adc
jl
push
cli
or
jnp
mov
call
cmp
inc
or
or
or
push
repz
fucomip
pop
and
mov
mov
test
dec
aam
sbb
ret
dec
pop
pop
cdq
cmps
or
push
jae
and
ins
shl
xchg
inc
mov
pushf
push
out
cld
test
daa
sub
pop
sub
lea
jl
shl
inc
(bad)
pop
jle
inc
xor
popa
test
add
sub
dec
arpl
imul
adc
push
and
sbb
fnstenv
loopne
movs
les
push
lock
or
ja
cmp
add
pushf
aas
xor
aas
mov
and
sub
leave
popa
xchg
jnp
jae
adc
mov
ficom
inc
data16
dec
adc
jbe
out
ror
mov
cmps
retf
cmp
pop
sti
jne
in
fwait
out
int
sahf
xchg
movs
jp
into
or
xchg
mov
or
push
mov
out
sub
es
test
sbb
fwait
dec
fwait
lods
mov
stos
data16
xor
mov
mov
or
xor
hlt
xchg
mov
out
mov
push
jmp
sbb
mov
cmp
pushf
xor
or
jnp
cdq
jmp
leave
mov
bnd
sbb
sbb
ss
sbb
adc
jo
adc
add
push
test
jge
lods
add
hlt
ret
mov
cmc
jp
adc
xor
sti
(bad)
scas
dec
addr16
mov
fwait
out
mov
sbb
and
data16
imul
sub
bound
mov
add
or
fsubp
inc
xchg
add
fwait
test
add
add
dec
jo
shl
mov
jmp
inc
inc
and
xchg
movs
inc
ret
and
lock
jmp
cwde
test
adc
add
adc
xor
xchg
test
div
pop
or
fstp
cs
add
or
mov
dec
add
iret
dec
push
int
sub
mov
lods
pop
jns
jmp
jp
icebp
cs
das
add
(bad)
fidivr
pop
inc
cli
inc
pop
mov
jae
out
int3
pop
hlt
mov
push
jbe
xor
adc
mov
xor
and
enter
(bad)
arpl
push
adc
push
mov
mov
repnz
stos
inc
mov
xchg
mov
mov
pusha
shl
icebp
rol
pop
and
adc
ficomp
or
je
xchg
mov
jb
sub
push
shr
adc
or
xchg
pop
inc
add
mov
jo
jl
inc
lock
xor
(bad)
bound
mov
cmp
xchg
pop
xor
push
push
data16
xchg
cld
cld
leave
mov
cmp
dec
mov
call
ins
cmp
or
adc
es
push
(bad)
ret
imul
lock
ret
scas
imul
mov
jg
data16
leave
pop
in
inc
sbb
(bad)
add
pop
ss
and
sbb
out
jnp
loop
ds
nop
sbb
int3
bound
inc
push
(bad)
push
and
xchg
dec
push
add
push
sbb
cmps
popf
mov
fild
xor
xchg
add
jne
aad
push
adc
jmp
div
lock
data16
inc
mov
loop
shl
pushf
ja
push
outs
(bad)
xlat
add
rol
test
mov
mov
frndint
sub
ret
sub
dec
outs
add
bound
cmp
mov
adc
xor
repz
inc
fcomi
and
lock
add
scas
xlat
in
push
pop
les
cmp
xor
add
mov
dec
je
inc
mov
aas
or
jl
inc
fs
cmp
inc
rcr
int3
fstp
sbb
scas
push
mov
or
fwait
sbb
mov
popf
aad
cmp
and
not
xor
int3
(bad)
xchg
pop
jmp
jb
jg
or
cld
cs
jne
in
add
dec
xchg
mov
jnp
add
in
ins
adc
mov
test
sbb
push
adc
cmp
cwde
add
fldenv
cmc
clc
pop
stos
imul
add
xchg
mov
mov
in
imul
ret
rcl
aam
sbb
dec
ret
bound
mov
mov
xchg
mul
push
loop
fcmovnu
lea
jne
js
stos
fnstenv
out
(bad)
jmp
sbb
stos
xchg
arpl
dec
and
cli
cmp
add
add
loop
mov
add
cdq
fimul
inc
out
mov
sti
xchg
out
jge
dec
push
in
je
xor
fwait
cmp
xlat
mov
int3
aaa
fstp
icebp
out
ss
adc
dec
out
cmp
adc
jmp
sub
push
push
fcmovnb
xchg
xor
popa
xor
(bad)
shr
out
adc
dec
and
test
addr16
fild
mov
and
inc
je
aaa
pusha
jb
or
sti
fwait
enter
aad
push
mov
cmp
adc
lods
out
outs
lds
push
sub
ds
mov
idiv
mov
dec
xchg
(bad)
or
lods
and
adc
stc
pop
in
das
cld
sub
and
stos
outs
and
lods
pop
outs
push
aas
pop
pop
sbb
nop
pop
fs
pop
mov
test
repz
push
test
adc
fst
mov
rcr
(bad)
ins
or
mov
ret
xchg
bound
pop
dec
jmp
and
popa
fist
ins
jl
jecxz
scas
add
push
push
push
sbb
dec
sbb
addr16
cmc
or
sar
mov
or
inc
fwait
pop
mov
xchg
mov
or
nop
pop
inc
into
inc
js
test
shl
inc
imul
sbb
ret
push
outs
popf
pop
aaa
jns
and
ins
lds
dec
mov
mov
inc
cmps
pop
xor
cmp
mov
cmc
sbb
sar
sbb
add
push
mov
ins
pop
inc
or
ror
mov
fadd
imul
cmp
js
repz
dec
or
mov
scas
dec
mov
sbb
and
retf
scas
stos
add
add
adc
sub
popf
jne
pushf
jp
jo
pop
lahf
cmp
or
retf
mov
imul
or
xchg
idiv
retf
xor
out
in
mov
stos
aaa
mov
mov
ret
pop
sbb
push
push
mov
cmp
in
xor
in
mov
mov
ins
xchg
in
imul
pop
cwde
out
(bad)
mov
movs
add
add
jp
icebp
jbe
cmps
repz
popa
inc
jg
iret
(bad)
jl
scas
jnp
xlat
push
cmp
mov
jae
movs
pop
ret
shr
fisub
jmp
xor
pop
movs
shl
mov
inc
icebp
mov
int
sub
pop
in
mov
pop
ds
sub
into
jmp
inc
ret
sub
mov
stos
jns
ds
and
out
pop
cld
ret
jae
mov
xchg
xchg
retf
pop
iret
das
sbb
mov
mov
dec
or
lods
ret
dec
sbb
add
fdivr
inc
and
mov
mov
push
(bad)
imul
mov
or
pop
mov
push
hlt
mov
out
arpl
inc
mov
cld
push
rcl
leave
ret
push
cmps
add
stc
sub
mov
mov
popa
repnz
retf
fs
shl
dec
aad
retf
lahf
dec
enter
fdiv
jnp
add
lock
sbb
pop
mov
loopne
ja
sbb
adc
add
mov
ror
retf
xlat
push
sti
inc
mov
and
cmp
adc
dec
retf
inc
mov
and
mov
and
lods
xchg
sbb
jp
stos
jl
fstp
pushf
in
mov
aam
out
ror
pop
out
push
cld
aad
clc
xchg
test
and
jmp
(bad)
mov
sbb
add
cmp
in
xchg
and
ss
jecxz
(bad)
in
cmps
test
adc
pusha
adc
mov
xor
fisubr
adc
inc
pop
ss
cdq
stc
in
or
in
out
std
inc
rol
into
ss
pop
out
arpl
push
xchg
xchg
cmps
xchg
inc
mov
(bad)
mov
fxam
push
inc
xchg
jmp
cmc
out
repnz
icebp
and
xlat
aam
fs
mov
test
inc
mov
shr
and
sbb
push
sar
sub
adc
inc
add
inc
sub
cwde
mov
jne
cmps
xchg
dec
inc
xchg
add
das
shl
iret
ret
fdiv
push
(bad)
lock
sub
add
mov
ret
cmp
or
mov
int
mov
(bad)
rcr
xor
sub
push
fadd
(bad)
in
fild
into
xor
loop
inc
jno
(bad)
movs
imul
dec
inc
cwde
div
in
xchg
setle
retf
cmp
shl
pop
int
and
xlat
mov
jne
popf
js
inc
nop
movs
loope
xor
jmp
sbb
fld
hlt
data16
and
or
cmp
mov
push
push
or
cwde
js
mov
sbb
std
push
rcr
pusha
pushf
lock
inc
lea
and
sub
or
inc
mov
push
mov
pop
(bad)
pusha
repz
out
imul
loopne
mov
pop
add
ret
push
push
enter
adc
mov
sub
int
jns
xor
xor
dec
shl
outs
retf
xchg
xchg
and
stos
in
push
in
inc
dec
ficomp
fs
and
push
ja
movs
call
xchg
xchg
es
inc
imul
ficom
xchg
lahf
lods
push
push
shl
xchg
pop
mov
lods
aad
cmp
jbe
outs
retf
pop
sti
pop
rcl
jle
sbb
adc
aam
ffree
movs
lods
ja
sti
push
lahf
lods
clc
ffreep
mov
ja
dec
fs
push
xor
push
dec
(bad)
sub
(bad)
push
js
lea
lea
ins
fld
mov
inc
loope
jecxz
jmp
iret
jo
pop
mov
xlat
clc
les
test
ja
xchg
ins
push
aam
retf
pop
mov
xor
rcl
cmc
sub
sar
repz
and
xor
daa
popa
jmp
clc
ja
fdiv
mov
fcom
cmp
mov
adc
mul
sbb
mov
test
out
cmp
inc
sbb
add
push
and
xor
xchg
icebp
std
push
movs
call
popf
je
mov
addr16
adc
sub
mov
xchg
adc
leave
loop
push
mov
jle
out
fsub
jns
dec
and
movs
mov
xchg
stc
inc
(bad)
icebp
push
movs
int3
bnd
repnz
jmp
iret
cmp
mov
lods
pop
leave
fs
sbb
in
jo
sti
(bad)
adc
lahf
dec
mov
fldenv
push
fist
aam
jne
lds
jb
dec
dec
out
mov
jmp
in
mov
push
sbb
add
imul
js
test
mov
(bad)
hlt
cmp
mov
(bad)
adc
and
and
jno
mov
sub
outs
aad
int3
push
stos
and
and
mov
or
std
das
xchg
push
int
adc
xor
retf
dec
sub
std
sub
adc
pop
inc
shl
leave
movs
in
mov
jmp
xor
iret
mov
or
fist
js
cmp
push
mov
fmul
pop
popf
fwait
sbb
aad
xor
outs
cmp
dec
mov
test
and
scas
repz
adc
pop
in
xchg
jbe
push
outs
jmp
mov
or
cli
ja
jne
test
nop
lods
mov
imul
cli
pop
in
retf
loope
and
mov
xchg
inc
imul
mov
inc
push
cmc
fisubr
pop
std
jo
loope
sbb
aaa
clc
jnp
(bad)
cld
test
add
(bad)
mov
mov
mov
out
sub
pop
push
icebp
xchg
sahf
xchg
loopne
push
and
add
dec
fimul
pop
add
jns
xchg
cs
cmp
in
mov
in
ss
mov
mov
push
dec
sbb
(bad)
not
mov
and
jl
xchg
dec
or
jg
loopne
retf
stos
ins
jno
lea
adc
(bad)
mov
test
enter
dec
loop
and
ins
push
cs
cli
push
loopne
popf
test
das
cmp
repz
lock
imul
in
in
test
or
lahf
adc
inc
sbb
hlt
mov
mov
inc
aaa
gs
mov
call
pop
xchg
cmp
das
or
and
mov
dec
lds
fsubrp
xor
add
cld
fldcw
jg
push
repnz
mov
jecxz
cmp
ds
pop
fsub
dec
cwde
xchg
movs
mov
inc
add
in
add
pop
push
leave
mov
ja
into
in
jne
jle
fisttp
retf
cmp
shl
jecxz
and
pop
test
int3
cmps
popa
rcr
sbb
inc
sti
inc
sbb
test
call
mov
push
clc
idiv
mov
movs
inc
mov
add
in
call
iret
mov
sub
mov
and
pop
dec
sahf
sbb
fmul
dec
bound
push
les
(bad)
fs
dec
push
fld
jg
cld
inc
enter
and
push
jno
lock
cwde
mov
and
std
repnz
inc
inc
das
sub
and
fnstenv
jp
inc
in
jne
movs
jb
retf
repnz
or
pop
mov
or
and
dec
popa
sahf
arpl
inc
or
movs
sub
sub
push
push
jg
push
cmp
inc
mov
mov
sub
stc
xchg
push
add
movs
cmps
test
mov
add
pushf
or
aas
aam
jnp
jbe
or
(bad)
xor
out
jecxz
repnz
dec
popf
xor
std
jp
popf
cdq
inc
push
outs
(bad)
lods
out
cmc
test
inc
xor
inc
cld
cwde
adc
or
mov
push
retf
xchg
mov
push
pusha
fsubr
jae
jns
mov
or
sbb
and
ds
jecxz
push
xlat
popf
adc
gs
or
lods
xlat
jp
xchg
rcl
in
adc
inc
cmp
xchg
xchg
xchg
cld
aam
stos
mov
rcl
mov
repz
call
sbb
rcl
test
inc
pop
jns
ja
jmp
hlt
fmul
sub
sti
fsub
inc
xchg
mov
imul
or
retf
repz
in
(bad)
faddp
lea
cmps
stc
retf
int3
out
test
jmp
pusha
add
sbb
dec
inc
mov
inc
cmp
jge
mov
retf
scas
or
sbb
mov
dec
inc
fsubr
cmp
sub
mov
push
pop
stc
or
shl
push
inc
loope
js
jmp
loopne
pop
(bad)
sbb
dec
dec
dec
lds
and
cmp
nop
add
inc
mov
sti
inc
or
push
mov
mov
adc
push
es
push
push
sbb
out
lods
aas
shl
or
jne
or
dec
or
inc
and
cmp
std
dec
push
push
aam
mov
mov
loop
jne
ds
pop
jne
add
push
mov
fwait
aad
fiadd
dec
mov
mov
(bad)
rcl
int3
cmps
jno
adc
inc
push
mov
sbb
aad
jg
adc
mov
mov
fmul
push
mov
fucomi
lea
(bad)
jmp
sub
ja
xchg
lea
add
dec
div
fs
out
jne
mov
sub
adc
push
add
ss
movhps
inc
adc
je
popf
ins
arpl
in
adc
fisubr
mov
sub
fisubr
push
mov
stos
push
cmp
(bad)
enter
or
and
dec
das
mov
mov
popf
mov
out
lock
loopne
mov
sbb
ret
adc
pushf
push
and
dec
movzx
mov
inc
pop
mov
xchg
xor
jbe
scas
add
cmp
push
(bad)
push
aas
push
xchg
hlt
and
iret
ret
sub
and
mov
aas
xchg
mov
es
dec
pop
and
xchg
pushw
ins
popa
inc
shl
or
mov
lock
test
pusha
mov
cdq
sub
leave
add
jmp
push
inc
ja
mov
mov
hlt
bnd
out
xchg
loop
ss
adc
push
popf
rcr
aas
test
mov
xor
jl
fs
or
aam
xor
push
je
lahf
cmp
in
ficom
lock
lock
push
fmul
inc
or
push
jbe
fs
mov
jmp
mov
pop
pop
lock
jmp
repz
mov
enter
sbb
and
mov
inc
adc
in
cmp
in
(bad)
or
mov
mov
or
adc
test
rol
push
out
or
jnp
sbb
(bad)
pop
push
cmp
xchg
mov
fldcw
popa
test
adc
sub
mov
xchg
inc
hlt
mov
pop
loopne
js
inc
mov
and
push
jmp
mov
leave
lods
aad
mov
dec
leave
ja
pushf
bound
in
xchg
push
(bad)
cmp
and
mov
mov
inc
aas
and
sahf
rcl
xor
ret
aas
ds
add
movs
and
fbld
mov
jne
out
xor
or
test
and
inc
pop
mov
sbb
mov
mov
je
push
sub
(bad)
push
add
mov
call
lds
pop
mov
mov
pop
jo
mov
adc
fcmovb
or
ror
mov
jbe
jl
aam
neg
pop
inc
pop
mov
mov
in
enter
jecxz
sbb
pusha
mov
fs
sahf
push
sbb
mov
xchg
(bad)
inc
ds
mov
push
and
dec
mov
mov
test
sbb
ja
push
stos
dec
ja
push
fcomi
and
rcl
ret
xchg
pop
(bad)
call
sbb
enter
data16
cli
sbb
push
test
push
inc
sub
and
add
mov
fs
mov
jg
dec
inc
jmp
dec
std
inc
xor
scas
(bad)
fisttp
mov
mov
xor
ins
data16
lea
hlt
add
jg
cmp
push
call
(bad)
retf
jae
dec
mov
adc
or
sahf
or
aas
jo
pop
push
sbb
fnstcw
int3
xchg
pop
push
xlat
fiadd
jecxz
mov
ins
cmps
(bad)
xor
rep
rcr
mov
int3
ja
frstpm(287
jl
xchg
jp
hlt
push
movs
push
mov
aas
cdq
pushf
pop
cdq
adc
jmp
ror
rol
sub
fmul
xor
mov
aaa
adc
or
push
xchg
fmul
xlat
inc
xchg
cld
loopne
adc
pop
dec
inc
retf
fst
xchg
inc
mov
dec
rcr
ret
jge
ds
stos
es
sub
mov
ror
jge
push
arpl
inc
aas
xor
mov
mov
cmp
shl
test
movs
add
xor
int3
push
mov
mov
mov
and
loope
or
adc
sbb
adc
pop
cmp
call
lea
hlt
das
aas
call
in
movs
fadd
cmp
call
and
into
jl
mov
pop
pop
cmp
xlat
fs
push
iret
aas
push
scas
scas
pushf
cs
leave
cmp
mov
loopne
cmp
mov
int3
pop
adc
adc
fwait
xor
and
(bad)
cli
je
in
and
fcom
dec
pop
clc
pop
xor
mov
push
mov
mov
and
sbb
mov
sub
pop
popf
loopne
sahf
xchg
call
imul
scas
idiv
mov
xlat
(bad)
je
bound
sbb
jle
pop
pop
pop
mov
fist
sar
popa
outs
addr16
out
push
or
dec
push
es
shr
sbb
or
dec
cs
out
into
lds
rol
ins
ret
sub
(bad)
adc
aaa
cmp
mov
push
sbb
push
imul
iret
mov
addr16
lock
xchg
sbb
or
loope
stos
outs
scas
push
ja
push
mov
arpl
inc
mov
stos
or
or
sar
call
mov
cld
mov
popa
pop
push
sub
or
lods
(bad)
retf
lock
cmp
mov
pop
cli
push
xchg
shl
sbb
mov
dec
cmps
cmps
in
and
cli
mov
pop
sbb
lea
ret
dec
inc
xlat
lock
mov
sbb
lds
pop
inc
sub
or
mov
mov
leave
jmp
arpl
push
(bad)
out
xor
jno
arpl
lock
inc
jbe
mov
movs
xchg
mov
repnz
fiadd
les
or
ret
int3
xchg
adc
cli
adc
scas
mov
xchg
xchg
lea
xchg
add
mov
scas
mov
mov
xchg
sub
sub
cmps
push
retf
iret
or
test
dec
stos
sub
pushf
out
cmc
pop
nop
int
cmp
and
push
es
fldcw
cmp
or
inc
and
dec
xor
nop
mov
repz
test
repz
les
outs
cdq
or
cli
xor
aas
cmp
mov
xor
aas
aam
and
xor
pop
into
data16
xchg
dec
ins
cmp
mov
mov
sbb
push
xchg
bound
jg
adc
ss
popf
mov
je
dec
mov
stos
gs
out
jns
pop
adc
dec
jnp
sub
imul
cmp
fisttp
jne
outs
cmps
mov
mov
and
repnz
(bad)
loopne
bndldx
and
fucomp
jl
xor
push
(bad)
call
shl
fs
adc
pop
or
xchg
lock
push
push
dec
ja
sbb
mov
pop
retf
sub
test
mov
jb
enter
(bad)
pop
mov
sbb
test
loope
call
cmp
retf
repnz
int
icebp
xchg
pop
mov
and
gs
push
test
push
stc
cmc
lods
into
pushf
mov
jnp
xchg
cmp
pop
or
jmp
mov
jge
movs
xchg
jmp
add
pop
add
ja
xchg
add
xor
popa
jp
ins
loop
pusha
adc
ins
add
fwait
gs
fidivr
mov
inc
pop
or
shl
jmp
fstp
cwde
adc
xchg
scas
cmp
push
out
mov
dec
shl
(bad)
mov
adc
push
stc
and
gs
(bad)
in
mov
pop
ficom
sti
fisubr
push
dec
and
sbb
retf
add
xchg
push
sar
hlt
add
xchg
fcmovnu
pop
aam
mov
jo
ret
mov
fstp
icebp
pushf
xchg
arpl
pop
push
in
inc
outs
jo
js
or
mov
or
mov
sbb
dec
arpl
cdq
pop
retf
fistp
(bad)
(bad)
(bad)
push
rcr
inc
mov
nop
(bad)
sbb
repz
rep
cmp
and
rcr
or
xchg
out
sub
push
adc
mov
jmp
ret
mov
pushf
scas
mov
xchg
xor
pop
daa
enter
or
xchg
mov
pop
jno
sar
jecxz
mov
mov
iret
rcr
xor
mov
pop
mov
cld
cmp
cmc
icebp
jmp
jmp
(bad)
mov
enter
sub
sub
inc
call
mov
pop
sub
int3
push
mov
outs
push
cli
inc
dec
neg
xchg
scas
gs
ins
fist
fld1
lea
jnp
mov
sub
adc
fdiv
out
imul
cmps
shl
ds
jmp
outs
push
bound
sub
mov
ins
sbb
jo
loopne
js
movs
test
lods
pushf
mov
stc
mov
fwait
ret
push
retf
sub
cdq
fdivr
sbb
push
ret
and
or
xchg
aas
sbb
in
push
mov
mov
mov
aaa
push
cdq
sbb
call
out
mov
jno
sbb
sbb
les
jmp
bsr
sti
(bad)
ss
pop
test
movs
loop
ret
mov
or
in
and
cmp
out
stos
mov
fnsave
in
and
add
or
jmp
fnstcw
jmp
je
sub
sar
sub
pushf
push
inc
fwait
push
int3
les
loopne
out
mov
into
test
cwde
leave
sbb
inc
(bad)
cli
retf
jmp
repz
pop
leave
sbb
mov
pusha
dec
retf
popa
aam
xchg
aad
pusha
push
jmp
mov
pop
retf
cld
dec
xchg
je
popa
xchg
inc
test
add
mov
inc
add
ss
and
dec
sub
int
xor
out
movs
in
call
and
mov
shl
add
jne
pushf
mov
push
mov
pop
sbb
mov
jle
inc
iret
add
cmp
adc
mov
dec
imul
repnz
cmps
jns
xchg
rcl
in
sbb
and
je
push
dec
fild
fimul
ret
jl
call
xchg
mov
not
sub
cs
ja
cmp
dec
out
xor
ins
sub
jmp
and
and
mov
jno
inc
rol
jne
cmp
sbb
sub
fsub
jns
mov
dec
sub
(bad)
mov
push
cwde
aam
test
sbb
mov
xor
das
mov
imul
ins
xor
cmp
dec
cli
js
xchg
mov
fdivr
ror
test
inc
xchg
jo
bswap
pop
jb
iret
adc
out
rol
cmps
add
adc
mov
jl
rcl
test
push
repz
dec
push
or
jl
(bad)
test
ds
dec
fstp
mov
pop
push
pop
inc
adc
add
or
test
pop
bound
aaa
sub
mov
xchg
mov
jmp
pop
sub
fimul
fnstcw
cmc
mov
fsub
test
mov
das
or
jmp
ss
mov
pop
stos
sbb
add
in
mov
xlat
adc
cmp
stos
cdq
loope
pop
sbb
movs
mov
mov
aad
xchg
xchg
dec
ror
sub
lods
push
and
add
dec
bound
pusha
mov
or
inc
mov
rcl
icebp
and
jge
test
pop
pop
mov
mov
xchg
aam
jmp
or
ins
cmps
arpl
loopne
cmps
dec
inc
loopne
pop
fwait
test
repz
jle
jb
outs
adc
mov
in
sub
xchg
std
clc
test
and
jbe
add
pop
out
push
fidiv
(bad)
push
and
xor
adc
test
inc
xchg
sar
push
jne
dec
sbb
mov
push
pop
mov
shl
and
jp
mov
push
ins
fld
out
push
xor
bound
ficom
xor
or
lahf
mov
cli
and
mov
sbb
ror
out
lods
ja
add
mov
pop
pop
mov
clc
inc
and
ins
ds
imul
pop
fwait
leave
add
call
pushf
test
xor
sub
sti
jge
call
enter
data16
stos
or
pop
sbb
test
loop
adc
shr
sub
fldenv
out
ja
cli
cmp
cmp
xor
pop
(bad)
mov
daa
jg
daa
ds
lods
and
mov
test
xchg
sub
mov
cli
cmp
fdivrp
out
cmc
mov
adc
shl
retf
cmp
mov
test
in
lods
scas
es
(bad)
push
nop
adc
mov
jmp
dec
loop
(bad)
jle
mov
dec
pop
movs
loope
sub
cmp
add
fcmovb
jmp
fadd
mov
shr
aad
js
aam
adc
and
push
mov
ss
retf
jo
retf
test
sub
mov
cmps
push
mov
dec
push
mov
jl
les
add
pop
lods
xor
nop
pop
cs
aaa
pop
movs
ficomp
or
call
mov
mov
int
in
pop
cs
add
imul
xchg
(bad)
repz
repnz
repz
and
iret
(bad)
dec
(bad)
sbb
jo
dec
dec
push
mov
in
imul
mov
or
fwait
sbb
sbb
jmp
xlat
mov
xor
daa
and
aas
inc
aaa
dec
(bad)
cmps
xchg
push
in
lods
int3
ja
push
rol
aam
xor
or
pusha
test
fistp
and
stos
rcl
test
ja
sar
xchg
push
(bad)
push
push
lods
(bad)
out
iret
mov
fucomi
(bad)
adc
xchg
int
cmc
out
xor
imul
jo
dec
retf
popa
sub
sbb
ror
test
in
sub
sub
fidiv
sub
fwait
mov
call
imul
jge
jmp
pop
xchg
or
shl
or
stos
mov
push
xchg
dec
or
push
pop
mov
loop
iret
inc
loop
in
cwde
jbe
jle
pop
gs
mov
sub
dec
lock
out
test
mov
sbb
xor
das
fimul
or
xor
popa
sub
jl
jbe
mov
scas
jmp
hlt
outs
(bad)
xchg
fdivr
jmp
adc
pop
adc
add
out
sub
jno
mov
sub
push
pop
xchg
lods
lods
xlat
jns
mov
adc
mov
mov
xor
xor
sub
fld
jae
dec
ss
cwde
mov
arpl
stos
shl
sub
cmp
bound
addr16
addr16
stos
out
inc
jnp
add
mov
rol
imul
loope
dec
sahf
stos
inc
das
push
pusha
and
fwait
into
fcom
stos
das
ja
or
std
inc
aam
call
js
in
adc
add
mov
mov
fst
lahf
rol
outs
pusha
cmp
das
arpl
into
cmps
stc
loop
test
cmps
add
fwait
or
test
test
push
scas
mov
icebp
loope
leave
shl
aad
dec
sbb
icebp
xor
lahf
aaa
mov
mov
mov
outs
jecxz
loope
sbb
(bad)
pop
or
test
jbe
add
std
xor
pop
daa
xor
fcomp
scas
test
fisttp
inc
(bad)
fcmovne
stos
ror
add
sbb
dec
xor
jle
lock
cmp
adc
es
jno
xor
lods
outs
add
clc
mov
sub
inc
movs
(bad)
in
(bad)
call
pop
push
adc
in
mov
jle
sti
icebp
mov
hlt
cdq
jns
jmp
cmps
push
out
adc
mov
push
pop
pushf
mov
inc
and
cs
imul
hlt
mov
push
sub
jecxz
movs
jl
add
or
sub
scas
leave
mov
sub
ds
mov
mov
icebp
enter
nop
out
cmps
mov
sub
loopne
pop
or
jmp
daa
into
inc
dec
es
(bad)
fst
arpl
sub
ja
sti
bound
pushf
bound
je
xacquire
les
sbb
jbe
repz
pop
sub
cmp
mov
sub
mov
jle
sub
mov
(bad)
xchg
push
pop
sub
inc
lock
mov
ins
add
inc
fiadd
les
dec
mov
aas
sahf
push
jmp
fdiv
fmulp
inc
stos
jno
sti
inc
ja
addr16
call
mov
xor
nop
inc
cmp
add
call
call
lods
mov
icebp
cmps
popf
xlat
jecxz
out
inc
jp
mov
in
(bad)
push
sbb
pop
pop
cwde
imul
ins
in
sub
aam
sub
add
ins
adc
iret
cmps
in
(bad)
sub
ds
inc
mov
or
and
aad
adc
mov
call
shl
les
(bad)
jecxz
mov
sbb
out
into
std
cmc
sub
mul
ins
es
ror
xchg
mov
sbb
and
sub
ja
icebp
cmp
sub
mov
sub
es
mov
xchg
cmps
call
leave
movs
and
push
enter
mov
jno
lea
add
rol
sbb
mov
and
pop
sbb
pop
pop
int3
mov
or
into
cmp
sbb
fwait
xor
test
mov
xor
mov
(bad)
adc
movs
pop
sti
repnz
das
sub
clc
or
outs
jmp
lea
fs
xchg
aas
stos
pop
or
outs
call
cli
jmp
push
mov
leave
popf
repnz
pop
scas
pop
xor
data16
int
dec
lods
clc
jg
lods
cvttps2pi
adc
addr16
cmps
mov
push
imul
xlat
push
jb
push
mov
inc
out
mov
sti
das
in
cmp
fnstsw
mov
xor
(bad)
test
adc
and
and
into
mov
iret
outs
out
pop
jl
loopne
sbb
fimul
dec
in
push
cmc
inc
jb
out
sub
dec
mov
inc
cli
movs
push
mul
add
out
shr
mov
jmp
neg
or
cmp
cmp
sahf
js
push
mov
dec
push
cmc
cwde
loope
inc
(bad)
mov
cmc
mov
mov
add
xchg
dec
xor
mov
sbb
sub
pop
push
dec
dec
sbb
in
clc
clc
sub
sahf
dec
xchg
jb
fsub
imul
sub
mov
loop
sub
gs
xchg
loope
pop
and
rep
xor
cmp
sti
sbb
call
lds
or
push
dec
mov
pop
arpl
dec
sbb
jp
xchg
sub
stos
xchg
inc
std
dec
or
stos
adc
lahf
pop
push
jl
int
arpl
mov
xor
call
mov
push
fdiv
popf
or
pop
jle
and
adc
ds
pop
mov
and
cmp
int
fwait
push
push
pop
dec
mov
mov
sbb
or
inc
pop
jo
pushf
test
rcl
fisttp
and
mov
mov
sbb
mov
mov
ins
sti
retf
and
jne
lock
mov
loop
aam
test
xor
adc
inc
out
xchg
jmp
pop
imul
sti
shl
into
xchg
pop
pop
mov
call
cwde
inc
ja
jno
push
(bad)
addr16
std
cmp
(bad)
in
ror
mov
int
sub
pop
leave
sub
xor
inc
pop
dec
mov
mov
inc
adc
mov
call
mov
shl
mov
sbb
mov
add
call
inc
xor
cmp
and
std
repz
adc
and
call
dec
mov
fs
and
jbe
cli
inc
add
repz
(bad)
jle
dec
je
sbb
test
or
mov
lock
cli
cmc
inc
arpl
arpl
cdq
mov
(bad)
xchg
inc
fmul
ins
adc
jle
inc
cld
pop
push
test
popa
(bad)
pop
mov
cmc
mov
dec
repz
xor
xchg
out
or
dec
in
push
dec
pop
jmp
cmp
cli
mov
pop
div
jmp
push
jle
popa
cli
outs
fdiv
cmps
fs
mov
retf
pop
ror
sti
jmp
pusha
pop
outs
(bad)
xlat
xchg
fsubr
in
not
mov
fsub
sbb
jl
loope
movsx
xor
sbb
or
aas
cmp
enter
mov
adc
outs
mov
bound
sbb
out
mov
loopne
jg
sub
jp
cld
sbb
jb
and
mov
les
sub
call
ja
ins
inc
ret
aam
mov
test
mov
mov
test
popa
movs
int
jecxz
call
dec
sub
sub
sbb
inc
movs
neg
xchg
outs
in
push
add
lahf
or
pop
in
or
shr
or
jo
shl
adc
adc
ss
outs
ss
add
out
adc
stos
pop
clc
mov
in
xlat
inc
fwait
push
aas
call
push
cmps
ins
adc
(bad)
out
sub
or
adc
fwait
mov
add
out
inc
cmp
inc
clc
sahf
push
inc
lahf
test
mov
mov
pop
mov
cli
add
add
xchg
dec
adc
in
adc
jb
rol
inc
hlt
es
mov
ss
mulps
xchg
mov
les
jbe
pop
cmp
clc
xchg
xchg
stc
cmp
(bad)
or
std
retf
xchg
cld
int
adc
lods
pop
aas
in
or
push
movs
push
xchg
shl
sub
mul
or
or
cmps
xor
pop
add
jae
loop
jmp
lods
lods
bound
repz
outs
(bad)
sti
pop
pusha
dec
test
push
outs
push
shufps
jnp
repnz
push
mov
leave
sahf
inc
sub
mov
inc
out
retf
and
repz
aam
mov
dec
xchg
mov
cwde
jg
int3
jl
mov
mov
(bad)
scas
mov
das
fcmovnu
ret
int3
mov
test
sahf
sbb
leave
mov
std
mov
mov
jmp
bound
cmp
mov
push
rcr
pop
push
aaa
loopne
push
mov
pop
loop
add
pop
mov
loopne
cmp
inc
mov
out
pop
fist
stos
int
add
repz
pop
test
xor
(bad)
and
aaa
mov
ins
pop
xchg
inc
out
mov
je
icebp
sbb
push
sub
lahf
or
inc
push
idiv
mov
cmc
leave
enter
ret
jno
nop
leave
sbb
sub
mov
int3
xor
test
ss
lds
cmc
jp
xor
and
add
rcl
call
sub
(bad)
sub
aad
dec
imul
or
sub
retf
outs
imul
and
sbb
jne
imul
sub
xor
jbe
push
cli
cmp
jmp
les
xor
xor
ds
mov
jb
push
movs
ret
out
ins
sbb
push
ds
mov
retf
dec
imul
inc
push
inc
cmp
push
mov
dec
mul
ror
aam
pop
add
lods
inc
out
or
mov
jmp
jg
fwait
pop
sbb
jns
int
ret
xor
xlat
movs
mov
out
sub
nop
jmp
cmps
scas
in
mov
popf
add
xor
add
hlt
in
xchg
(bad)
mov
loope
jl
and
loopne
loope
into
outs
movs
retf
jne
mov
scas
sub
push
ror
iret
cmp
xchg
fsubr
mov
xlat
aaa
scas
imul
mov
cmp
call
push
sahf
and
mov
(bad)
jnp
adc
and
fisubr
add
stos
push
jmp
adc
jae
sbb
xor
add
icebp
jg
push
mov
adc
and
iret
test
pop
cmp
lods
xchg
sub
popf
dec
cdq
pop
dec
sub
xchg
fild
dec
xchg
outs
int3
push
enter
pop
jl
sbb
push
pop
inc
gs
(bad)
pop
ins
push
cmps
int3
popf
(bad)
loop
mov
jns
pop
mov
lahf
adc
(bad)
retf
xor
push
sub
inc
xchg
neg
and
pop
data16
into
sub
xlat
mov
test
adc
stc
shl
xchg
movs
sbb
jae
clc
dec
movs
jne
mov
in
cmps
daa
pop
lods
int
mov
int
and
push
cmps
(bad)
sbb
cmp
dec
ja
imul
jne
js
add
popa
loope
hlt
mov
pop
mov
movs
fsub
xor
stos
lock
outs
adc
int3
jg
mov
sub
add
jns
fwait
(bad)
je
xor
repnz
dec
push
popa
lds
shl
in
lea
call
lds
sbb
loope
add
lods
or
mov
jbe
xlat
retf
mov
ret
rcr
and
push
(bad)
xor
adc
mov
jno
cmp
retf
xor
test
je
xor
cmps
ds
sbb
dec
fisubr
bswap
dec
jmp
stos
cmp
daa
je
call
and
lods
inc
jle
and
cmc
sub
popf
jg
sbb
push
push
stos
inc
popf
push
or
xchg
push
jecxz
dec
fs
jmp
not
fnsave
stos
in
repnz
mov
mov
pop
and
test
into
jl
pusha
loop
out
out
ja
addr16
push
sub
mov
jae
int3
fwait
push
sub
in
sub
out
jp
outs
push
ds
push
pop
fcomp
xchg
(bad)
push
call
cmc
lods
(bad)
not
loop
jp
leave
jg
jo
sahf
inc
leave
cmc
inc
fdiv
and
pop
aaa
xchg
mov
out
mov
and
mov
inc
cmc
push
push
pop
inc
call
push
jne
in
scas
mov
pop
mov
shl
aad
and
jmp
sbb
ins
es
mov
xlat
cmc
mov
les
test
cmp
add
jnp
out
or
inc
jno
adc
popf
lea
shl
inc
xchg
pop
in
cmps
inc
mov
adc
pop
or
add
xor
push
inc
inc
mov
stc
inc
and
in
adc
stos
mov
(bad)
popf
sbb
mov
test
lods
and
sub
mov
and
mov
cwde
adc
psubsw
in
jmp
jl
jo
or
dec
ficomp
or
retf
out
sar
popa
push
and
cdq
ficom
inc
pop
aas
int
push
lahf
popa
push
or
add
test
repnz
shl
and
(bad)
xchg
(bad)
push
mov
xchg
and
clc
shrd
scas
mov
in
inc
scas
shl
inc
(bad)
test
int
jae
or
mov
mov
aad
dec
imul
mov
mov
push
xchg
add
push
pop
push
mov
imul
sti
mov
mov
sbb
cli
mov
cmps
call
bound
(bad)
mov
xchg
pop
add
out
jge
xchg
lahf
aas
push
sar
xor
cwde
mov
or
pop
add
mov
retf
shl
xor
xchg
repnz
xor
pop
push
sar
shl
or
(bad)
in
js
pop
mov
idiv
inc
(bad)
jns
ret
nop
jb
or
fdiv
mov
add
cmp
cmp
in
in
outs
or
repnz
mov
fmul
xchg
loope
jmp
std
cmps
fwait
dec
jmp
pop
imul
sbb
inc
bound
(bad)
push
shl
ret
call
pop
inc
nop
xor
hlt
pop
test
repz
add
push
loope
sub
or
xchg
mov
les
cs
into
pop
mov
pop
gs
mov
cmc
inc
push
jmp
int
xchg
in
movs
jae
cmp
aaa
loopne
das
inc
movs
lea
sbb
or
push
sbb
icebp
out
in
cmp
pop
adc
lahf
jp
mov
mov
mov
dec
pusha
ffreep
mov
mov
iret
xor
nop
mov
dec
test
loope
(bad)
cmps
pop
ins
xor
jno
fwait
mov
push
rcr
pop
repnz
fwait
and
(bad)
jmp
cmps
clc
sub
push
add
inc
es
loope
pop
push
lea
or
inc
add
lahf
pop
jl
into
adc
xor
aad
dec
dec
rol
pop
movs
aaa
cmps
shl
push
xchg
adc
arpl
ja
jecxz
add
sahf
adc
or
push
xchg
push
mov
mov
(bad)
sti
(bad)
clc
mov
pop
aam
data16
cs
idiv
mov
dec
in
push
mov
cwde
repz
cmp
cmp
ret
into
mov
push
test
sub
loope
fcomp
jbe
mov
rol
retf
mov
sub
pop
mov
(bad)
loopne
in
mul
dec
inc
add
loopne
sti
mov
fidiv
cdq
js
dec
inc
popf
fs
arpl
pop
fsubr
adc
dec
xchg
cdq
repz
stos
rcl
cmp
mov
lods
idiv
push
out
fstp
mov
mov
inc
dec
dec
in
add
clc
xlat
fcmovne
outs
adc
dec
test
clc
pop
adc
aas
jmp
mov
jo
xchg
(bad)
retf
dec
fwait
lds
icebp
shld
test
movs
adc
or
dec
dec
sar
cmp
dec
cdq
pop
pop
dec
sbb
fsubr
rcl
push
mov
popf
imul
rcr
mov
mov
loope
jo
ins
pushf
jo
push
dec
pusha
shr
iret
xchg
jo
fcomi
fild
aas
or
mov
cmp
dec
push
out
(bad)
jno
nop
je
cmp
cmp
es
jp
cmp
jg
pusha
fcom
push
lahf
inc
pop
inc
clc
fwait
jecxz
push
mov
and
pop
popf
push
je
retf
mov
adc
arpl
movs
adc
jge
and
add
retf
mov
or
sbb
out
jle
cmc
in
dec
push
mov
out
(bad)
and
push
sbb
xchg
outs
push
std
fwait
loop
mov
and
popf
in
lahf
lds
jp
hlt
scas
int3
adc
jns
sub
and
dec
pop
pop
dec
push
inc
inc
xchg
lods
retf
push
in
or
loop
cwde
mov
or
pop
mov
stos
pushf
add
dec
ins
mov
cmp
dec
jp
sbb
xor
xlat
xor
mov
sbb
movs
int
sub
xchg
in
sbb
sub
pop
aad
dec
int
mov
and
mov
mov
inc
jl
neg
ss
pusha
mov
adc
test
push
jp
and
ret
sbb
cmp
jmp
cmp
fisttp
jp
aaa
outs
stos
or
int3
fwait
adc
inc
enter
lods
xor
jecxz
call
or
pop
mov
(bad)
mov
cmc
popf
cwde
inc
push
aam
or
lods
xchg
push
sub
xor
(bad)
mov
pop
push
xchg
les
dec
jbe
sbb
push
outs
cs
cmp
call
or
in
ins
pop
(bad)
(bad)
mov
les
jle
mov
adc
mov
call
push
jecxz
(bad)
push
cmps
mov
xor
pop
mov
push
out
add
xor
push
call
cwde
push
(bad)
icebp
mul
xchg
jecxz
xchg
push
mov
push
jmp
fdiv
adc
shr
jb
cmp
or
gs
call
js
lods
mov
loopne
add
xlat
stos
fcmovu
fstp
cmp
pop
cli
loop
mov
ins
add
popf
cld
dec
pushf
test
int3
inc
ds
inc
pop
ja
and
pop
ss
imul
mov
imul
pushf
xchg
(bad)
xor
fidivr
jbe
sahf
pop
gs
lock
inc
sbb
pop
ret
xlat
pushf
push
lods
(bad)
hlt
loope
jo
cmps
or
pop
repz
sub
cmps
jnp
xor
arpl
cmp
xchg
aas
adc
and
shr
mov
dec
xor
hlt
addr16
adc
add
jecxz
js
stc
into
push
imul
add
adc
cwde
pop
mov
cmp
adc
cmp
push
pop
pop
adc
pop
movs
sbb
cwde
mov
mov
addr16
sar
inc
add
fidiv
test
out
lea
mov
es
ja
xor
ins
add
dec
push
call
fsubr
hlt
fdiv
ss
in
and
cmc
(bad)
sbb
push
jp
push
inc
inc
xor
fist
cmp
pop
cwde
repz
ds
push
mov
ss
repz
pop
in
pop
push
mov
mov
dec
xchg
sti
mov
stc
cmp
fidiv
sar
nop
push
cdq
fist
ins
jge
and
fnsave
lods
mov
inc
cdq
dec
fs
push
push
push
dec
pop
jmp
sbb
mov
stos
sti
xchg
adc
xor
xor
stos
jb
inc
shr
es
repz
test
mov
mov
retf
and
push
scas
sahf
mov
xchg
retf
add
stos
call
je
mov
mov
or
mov
int3
fucom
push
cmp
or
cld
jle
ins
sub
outs
ins
xchg
std
outs
add
jp
and
stos
mov
push
pop
push
sub
xlat
pushf
int
jno
pop
imul
js
jnp
hlt
lods
outs
adc
shl
dec
in
je
push
int3
push
aaa
shl
push
xor
jmp
fsubr
and
dec
xor
scas
popa
mov
dec
mov
xlat
out
xor
mov
jns
push
(bad)
sub
adc
push
aas
cmp
push
movs
push
xchg
ja
dec
add
ins
xchg
retf
xlat
mov
aas
aaa
test
jnp
xchg
push
test
push
push
xchg
in
xchg
call
push
fstp
jp
into
lods
sbb
add
outs
jle
or
inc
jle
jmp
push
push
(bad)
(bad)
aas
adc
neg
jle
cmp
adc
retf
inc
pop
dec
loope
mov
jns
pop
and
dec
and
xlat
and
pop
xor
ss
popf
call
cdq
mov
or
xor
sub
fstp
and
mov
arpl
lahf
mov
jmp
rcr
xchg
pop
or
pop
daa
fist
mov
adc
pop
push
push
ror
nop
les
arpl
xchg
inc
mov
add
or
mov
jl
fcomp
jle
xor
jecxz
pop
jb
stc
xchg
dec
jne
jp
shl
mov
jo
push
je
mov
fstp
out
in
mov
pop
daa
and
mov
xchg
sub
pop
jne
add
pusha
je
pop
jl
xlat
xor
add
sbb
xchg
adc
cmps
cmps
mov
and
and
movs
mov
pushf
xchg
sahf
in
aad
fld
mov
pop
out
and
inc
jbe
fist
adc
and
js
lods
bound
add
mov
mov
pop
cwde
lock
in
jo
test
into
pop
in
push
(bad)
sbb
in
or
jmp
fdivr
clc
add
call
push
sbb
jno
shl
(bad)
push
call
ror
pushf
push
mov
fsubr
push
mov
stos
icebp
inc
iret
rol
repz
fld
test
mov
push
arpl
mov
add
js
movs
cmps
(bad)
imul
and
pop
pushf
fwait
pop
cmp
push
or
scas
in
fs
push
cs
jmp
retf
inc
int3
fs
mov
fwait
xchg
pusha
mov
into
cmps
stos
in
mov
retf
popa
pop
or
jb
adc
pop
sar
dec
int
push
or
xchg
push
cdq
push
out
icebp
mov
add
lahf
pop
mov
xchg
or
cmp
adc
inc
loop
xchg
xchg
mov
jp
pop
jle
das
test
sub
ret
mov
into
and
aad
and
push
les
or
shl
mov
movs
scas
add
in
imul
mov
jg
xchg
test
fyl2x
dec
retf
pop
mov
push
pop
scas
jle
push
push
sti
sub
adc
inc
jmp
push
xchg
aas
popf
mov
jmp
inc
or
int
pop
add
dec
nop
inc
dec
shr
into
push
and
sbb
pop
loope
adc
fld
int
fcom
aam
mov
shl
sti
mov
shr
mul
adc
nop
cdq
out
and
(bad)
ffree
int3
fiadd
mov
mov
(bad)
pop
rol
push
cmp
jbe
xchg
aas
xlat
pop
jne
inc
sbb
lods
lds
push
jbe
mov
aad
test
adc
out
repz
xor
or
loopne
(bad)
and
push
cmp
nop
adc
ss
mov
sti
scas
sar
(bad)
push
icebp
inc
push
scas
cmp
cmp
xchg
imul
mov
jg
xchg
add
hlt
not
mov
dec
jns
push
push
adc
pop
inc
imul
or
ins
dec
imul
xor
and
out
jg
cmps
nop
adc
dec
ret
test
dec
sbb
mul
sbb
int3
stos
lods
jne
(bad)
je
ins
dec
fisttp
and
imul
(bad)
ins
aaa
ds
cwde
push
(bad)
jl
inc
mov
es
fldenv
pop
int
imul
pop
and
mov
je
pop
mov
mov
jmp
inc
and
adc
adc
mov
jg
into
int
aaa
sahf
test
jns
fsubr
sub
mov
mov
push
add
jmp
fsub
pop
inc
sbb
jge
ds
dec
shl
arpl
add
idiv
imul
bound
mov
add
loope
cmp
dec
xchg
push
mov
outs
cmp
das
mov
and
xchg
jl
je
xchg
add
movs
xchg
pop
movs
mov
sbb
jmp
aas
inc
mov
fimul
sbb
dec
adc
inc
shl
xor
xchg
jb
ins
sub
fcomp
ins
xor
mov
dec
and
hlt
ja
jne
in
cmp
adc
std
xor
dec
xchg
imul
xchg
div
movs
hlt
jne
lock
ret
add
rcr
repz
(bad)
ror
fs
jle
out
adc
shl
jbe
fisub
mov
scas
cmp
out
jae
(bad)
xchg
sar
jns
jne
dec
dec
lods
add
jae
pop
jl
pusha
addr16
jmp
or
jne
sbb
(bad)
jns
xchg
pop
ss
out
inc
out
in
popa
cdq
ins
cmps
dec
push
ds
inc
push
fnstsw
je
scas
sbb
add
mov
pop
movs
push
and
enter
scas
pop
cmps
pop
inc
pusha
inc
scas
out
pop
xchg
scas
xchg
sbb
scas
mov
scas
enter
cmps
xchg
ftst
inc
jnp
mov
xchg
(bad)
mov
iret
test
cmp
pushf
hlt
dec
mov
rcl
repnz
inc
mov
add
stos
(bad)
repz
(bad)
jae
sbb
adc
or
outs
shl
sub
loopne
fdiv
loope
dec
inc
cmp
test
push
into
pop
loope
xchg
cmp
xor
jnp
jle
jg
mov
xor
iret
ret
cs
fwait
in
js
add
mov
xchg
in
add
das
mov
loope
test
movs
dec
mov
dec
shl
lea
pop
pop
repz
shl
add
sar
loopne
pop
int
aaa
cmp
imul
add
sbb
or
pushf
xor
and
ins
xor
mov
jnp
aad
jns
ret
dec
repz
jns
sbb
push
cld
push
xchg
test
xor
mov
dec
adc
mov
cwde
push
cmps
cld
jmp
add
js
pop
rol
cmp
jo
mov
movs
cld
and
dec
dec
dec
jle
into
ja
inc
push
sub
xchg
repnz
add
retf
shl
mov
mov
js
xor
ficom
pop
push
aam
hlt
mov
xchg
fisub
rcl
fs
sbb
ins
pop
sbb
inc
cwde
dec
mov
cmp
mov
in
cmp
lds
stos
(bad)
jo
repz
out
cmp
inc
(bad)
pop
fwait
jbe
xor
pop
adc
mov
pushf
mov
xchg
pushf
cmp
mov
jecxz
push
jnp
or
mov
mov
dec
shr
add
push
mov
(bad)
loope
jb
out
add
retf
repz
mov
pop
out
sbb
jl
leave
in
loopne
in
test
out
push
aam
je
mov
mov
push
cs
lods
push
daa
cmc
push
mov
push
movs
mov
jnp
loope
sbb
or
sbb
fdiv
jp
daa
jl
mov
and
(bad)
out
cmc
adc
movs
push
dec
jo
(bad)
in
mov
mov
lods
add
jb
fst
bound
jb
ror
ret
in
sbb
sar
and
cmp
dec
ins
xacquire
mov
mov
lods
ds
(bad)
test
mov
scas
rsm
push
and
sub
lds
mov
cmp
jp
fldenv
fistp
sbb
mov
lods
push
out
push
inc
je
inc
pusha
xor
dec
movs
cwde
imul
scas
in
(bad)
lds
jne
dec
ret
jnp
in
pop
and
jae
add
retf
stc
push
add
gs
and
psubq
test
xchg
cmp
xor
popf
inc
(bad)
mov
jnp
scas
xchg
xchg
pop
mov
pop
mov
pop
cmp
dec
sar
dec
sub
mov
adc
and
jne
jb
pop
call
xor
(bad)
loopne
mov
hlt
daa
jo
(bad)
frstor
inc
sub
mov
mov
push
dec
outs
cmp
dec
mov
fisttp
sbb
out
fsubr
shr
es
xor
dec
xchg
pusha
sbb
mov
xchg
or
pop
repz
inc
ins
leave
(bad)
fimul
cmp
jg
push
outs
repz
fsub
ja
push
adc
nop
outs
movs
(bad)
popf
adc
mov
pop
dec
cdq
and
jp
cmp
pop
mov
stc
js
or
jmp
dec
or
and
sbb
popa
xor
hlt
loop
sbb
inc
mov
adc
adc
xchg
scas
(bad)
fldcw
add
dec
fsub
add
bound
mov
jl
je
pop
fsub
inc
jbe
lods
cli
xor
fistp
int
es
ja
and
push
fs
xchg
xchg
jmp
push
test
lds
xor
lock
rol
jns
add
outs
cdq
mov
dec
(bad)
cmc
mov
mov
aas
clc
dec
inc
repz
inc
cmp
sub
cli
sbb
addr16
lahf
jmp
jbe
push
loop
ret
xchg
xor
jle
shr
jle
push
push
cld
adc
imul
jns
repnz
call
push
sbb
push
jo
(bad)
retf
mov
(bad)
cmc
xchg
and
push
sahf
divps
(bad)
lods
mov
clc
cmps
push
sbb
ret
or
into
out
push
push
cmps
fmulp
shl
ret
retf
mov
cmp
fisttp
mov
cmc
mov
sub
xchg
mov
dec
in
mov
sbb
mov
xchg
ret
jmp
pop
mov
dec
lods
sub
ins
movs
jne
mov
lds
sbb
stos
scas
mov
mov
test
inc
(bad)
lea
lea
xor
stos
inc
jl
xlat
rol
out
in
mov
push
mov
push
loop
xchg
dec
jge
push
not
jle
call
test
cmp
out
jmp
mov
mov
push
or
inc
or
mov
mov
push
(bad)
jae
pop
fsub
es
cli
push
aaa
fld
and
shl
mov
nop
popa
scas
add
call
adc
jo
sbb
(bad)
out
sbb
sbb
sbb
pop
daa
dec
mov
pop
les
dec
sub
js
xlat
inc
dec
xchg
push
aaa
mov
jnp
cmp
cdq
ror
xor
pop
mov
adc
cmpps
cmp
cmp
in
jg
popf
les
fdivr
mov
test
dec
cmp
fcom
pop
adc
(bad)
pop
xor
add
leave
sbb
ret
sti
repnz
cwde
xor
outs
sub
sub
jg
xchg
jp
mov
cmp
push
scas
fs
in
jle
or
ins
push
out
je
pop
fisubr
ins
mov
movs
test
sub
sub
xchg
push
push
mov
mov
add
mov
mov
aam
fidivr
sbb
sub
dec
movs
xchg
out
mov
fisttp
fldenv
pop
mov
adc
rcl
inc
xlat
push
ror
and
push
push
push
fdiv
jp
es
daa
or
sbb
or
popf
shl
daa
add
cmp
push
xor
inc
outs
je
xlat
inc
jmp
add
test
sbb
arpl
mov
test
add
fstp
data16
(bad)
shr
and
loop
xor
retf
add
dec
mov
in
imul
out
jl
mov
ret
and
mov
call
clc
addr16
dec
add
test
cmc
ins
inc
cmp
les
xor
pushf
cli
pop
jmp
ins
xor
fs
adc
cmc
lahf
div
(bad)
sub
(bad)
jle
pop
mov
dec
pop
fidivr
aad
xchg
cmp
mov
mov
stos
(bad)
fdiv
sahf
push
test
test
call
and
into
icebp
dec
mov
sbb
dec
jae
push
lock
sub
ins
adc
nop
lods
mov
mov
xor
pop
in
inc
push
stos
cdq
cmp
addr16
out
pop
mov
loope
and
mov
jg
jp
shl
dec
add
pop
cdq
idiv
jno
jo
xor
mov
mov
adc
ret
mov
ret
and
popa
xchg
repz
pop
fwait
arpl
in
stc
adc
int3
sahf
xor
pushf
mov
ins
shr
adc
jnp
and
inc
cmp
jecxz
je
stc
mov
mov
ja
sbb
dec
mov
lds
clc
std
and
pop
cmp
rol
and
xchg
test
out
fadd
ss
cmp
jle
sbb
mov
addr16
mov
or
addr16
and
pop
ja
xchg
fld
mov
mov
jns
(bad)
mov
push
jno
mov
pop
(bad)
nop
xchg
push
ror
adc
sbb
push
movs
mov
fnsave
xchg
lea
inc
push
popf
nop
int
mov
std
retf
cmp
xor
adc
cmp
mov
movs
loope
mov
push
arpl
not
lds
or
aad
int
(bad)
add
(bad)
lea
mov
sbb
jb
js
rcr
mov
sub
push
fisubr
mov
stc
cs
cmp
(bad)
dec
cmps
in
sub
jp
push
enter
lahf
addr16
mov
in
mov
jns
jle
cmp
dec
hlt
xor
or
push
mov
cli
into
ins
lods
dec
test
hlt
int
pusha
lods
in
adc
inc
xchg
addr16
and
aas
imul
rcr
icebp
cmp
xor
pushf
or
jb
push
add
jg
cdq
arpl
arpl
addr16
mov
xchg
jno
enter
in
iret
adc
mov
mov
jbe
mov
cmp
mov
outs
lock
lods
push
lods
loopne
dec
adc
ja
sti
sub
lea
dec
popf
es
xchg
(bad)
mov
sbb
mov
adc
fnstenv
sti
and
fadd
mov
cli
sub
mov
push
lds
(bad)
xchg
jb
pop
push
lods
dec
adc
in
lods
movs
out
push
push
mov
fsubr
push
outs
jo
and
mov
out
gs
sbb
push
iret
js
inc
in
xchg
ins
cdq
out
sbb
push
fistp
jno
adc
add
dec
std
nop
or
sub
sbb
cdq
sbb
sub
enter
shld
sbb
pop
xchg
jmp
mov
adc
sbb
icebp
aaa
cmc
push
hlt
stos
mov
sbb
data16
push
out
loop
adc
inc
das
add
jmp
out
jbe
jb
jo
test
dec
call
mov
cld
adc
leave
mov
pop
daa
imul
xchg
jae
push
mov
gs
retf
xor
jb
hlt
mov
retf
into
hlt
out
mov
pop
push
test
jle
inc
int
push
jecxz
or
sar
mov
push
or
sbb
pop
cmps
fcomp
and
mov
mov
add
sti
inc
pushf
stc
stos
dec
cwde
fiadd
int3
mov
jmp
jmp
loope
or
shl
pop
(bad)
mov
fiadd
mov
mov
sti
in
jecxz
cmp
in
ins
jmp
mov
aaa
push
mov
pusha
adc
out
scas
gs
cdq
in
shr
jbe
repnz
adc
mov
aam
lods
add
std
mov
pop
xor
inc
in
xor
pop
mov
xor
mov
or
pop
sbb
mov
scas
jl
and
push
je
mov
lods
outs
xchg
sbb
jmp
mov
mov
mov
test
adc
mov
mov
xor
mov
(bad)
xor
inc
dec
jg
xor
adc
xchg
mov
pushf
xor
push
pusha
or
dec
jl
ja
scas
ficom
iret
sub
inc
scas
push
mov
mov
iret
daa
jmp
dec
mov
jbe
sahf
cmp
cli
and
test
xchg
mov
outs
inc
pop
mov
adc
inc
lahf
in
sbb
sub
cwde
adc
push
mov
nop
inc
test
jecxz
pop
mov
add
mov
ins
pop
in
aad
fwait
push
(bad)
fisubr
fnsave
cwde
mov
test
test
imul
jle
and
enter
and
jl
fsubr
into
dec
xchg
stos
inc
jge
scas
popf
mov
mov
test
test
dec
ins
ficom
xchg
shl
and
cmp
and
inc
mov
push
out
cld
in
adc
movs
aas
push
shr
loop
dec
fisttp
popa
cmp
ss
and
jmp
lods
cmp
stos
movs
cmp
aas
js
jne
ss
xchg
in
or
or
rcr
cli
pusha
repz
bound
and
mov
pop
cmps
addr16
pop
push
mov
lods
inc
repz
outs
mov
std
inc
xchg
retf
loope
pushf
inc
(bad)
loop
fs
sti
not
fidiv
add
add
cmp
or
and
cmp
inc
add
inc
addr16
pop
dec
jo
stos
stos
add
mov
inc
sbb
popf
cmps
add
loope
stc
shr
and
mov
stos
ret
dec
inc
enter
mov
cmp
enter
xchg
sub
call
(bad)
dec
stc
out
(bad)
dec
aad
movs
ror
dec
pop
push
sub
fisub
xchg
lock
iret
call
or
sub
pushf
adc
cs
(bad)
out
push
repz
outs
cmp
add
stc
cmp
cld
daa
pusha
pop
pop
mov
mov
idiv
or
mov
ror
add
cmp
mov
iret
sub
jecxz
in
ffreep
sahf
xchg
repz
or
adc
mov
push
jle
jl
cmp
and
add
adc
inc
inc
sbb
imul
inc
xchg
aad
ret
(bad)
pusha
jbe
push
clc
addr16
xlat
stos
cld
pop
or
daa
sub
push
(bad)
add
pop
in
out
cmp
push
and
inc
pop
mov
mov
xchg
(bad)
sbb
mov
mov
inc
cs
rcl
pop
sub
xchg
jns
push
adc
cs
pop
cwde
mov
shl
stos
rcr
mov
xchg
pop
jecxz
dec
add
out
pop
ins
repz
xchg
cs
mov
mov
xchg
test
inc
call
test
in
aaa
es
cwde
jns
cs
cmp
mov
push
push
les
out
add
outs
or
stc
push
add
mov
cmp
xor
hlt
outs
pop
ss
sub
inc
in
xchg
sbb
test
xchg
ds
mov
mov
push
dec
(bad)
mov
jae
xchg
test
dec
xchg
add
sub
scas
test
arpl
xchg
push
out
mov
xchg
sbb
mov
push
(bad)
out
pop
movs
mov
jae
sar
dec
inc
mov
icebp
inc
stos
inc
xchg
and
and
jno
arpl
test
shl
cli
mov
std
xor
jmp
sbb
xor
out
test
or
push
ja
out
(bad)
retf
cld
ret
push
inc
not
scas
rol
mov
inc
jp
add
stc
popf
cmp
mov
shl
and
cmps
repnz
clc
cmp
daa
sahf
in
std
ss
popa
(bad)
sti
adc
sbb
inc
mov
xchg
mov
shl
jl
fst
imul
sbb
cmp
cmp
fwait
lods
data16
lea
test
pop
js
push
pop
fisubr
pop
ss
xlat
jo
sbb
(bad)
sbb
daa
ja
xchg
and
mov
fldcw
out
enter
xchg
pop
shr
out
in
jbe
mov
xor
cmp
fwait
mov
aam
add
mov
jmp
out
cli
inc
mov
mov
xchg
xor
cmc
aas
mov
out
cmp
(bad)
or
jnp
cmp
ja
add
rcr
jl
adc
or
outs
imul
aad
pop
sahf
and
es
mov
ins
cli
jae
out
rol
cmc
add
lock
inc
cmp
lds
iret
leave
jae
xchg
(bad)
hlt
mov
(bad)
leave
xor
int
out
mov
dec
aas
iret
fnstenv
aas
fadd
aas
dec
jge
pop
in
imul
das
add
xor
shl
fcmovu
lahf
push
or
cmp
div
stos
adc
hlt
bound
mov
push
les
pop
pop
psraw
dec
and
sbb
xor
and
aad
sub
mov
jae
adc
mov
or
or
fwait
cwde
(bad)
data16
sbb
inc
dec
retf
hlt
fdiv
cs
pop
fdiv
and
push
xchg
pop
in
jnp
aas
mov
test
outs
mov
movs
xor
xchg
jbe
sbb
sbb
mov
stos
jno
xchg
ret
add
push
cmp
in
test
outs
jmp
fsubrp
push
lods
sub
jle
mov
icebp
sahf
aam
(bad)
cmps
icebp
stos
xchg
ret
dec
fild
and
(bad)
xlat
leave
stc
sub
jp
mov
ret
icebp
lods
inc
xor
mov
cmps
call
test
rep
out
and
jmp
fwait
mov
xchg
arpl
loopne
dec
push
jmp
push
jne
test
inc
lds
adc
xchg
xor
and
pop
fadd
jmp
inc
add
pop
pushf
fucomp
sbb
sbb
div
cwde
jno
fadd
xchg
inc
inc
jb
add
or
into
and
and
jbe
fiadd
push
cmc
mov
mov
sbb
adc
xchg
mov
adc
and
(bad)
xchg
sbb
loop
shl
pop
ins
rcr
xor
xor
inc
jecxz
mov
out
push
mov
add
rcr
add
(bad)
sti
daa
mov
(bad)
loope
cdq
or
pusha
lea
add
xlat
outs
stos
retf
mov
push
jo
or
pop
sti
in
pusha
pop
outs
ss
mov
sub
sub
mov
imul
mov
mov
aas
(bad)
ins
sar
jecxz
in
repz
cmp
sbb
ret
in
fwait
and
fdiv
lock
ret
pop
lock
aad
push
adc
fst
sbb
xchg
mov
mov
retf
imul
cmp
js
jl
jne
add
call
cmp
jmp
push
mov
fidiv
push
push
cmc
inc
cmp
pop
jo
out
dec
fild
mov
pop
in
stc
aaa
xor
mov
xor
stos
out
jb
adc
cmp
pop
and
jnp
mov
test
jg
mov
dec
in
xor
xchg
jmp
add
jmp
xchg
mov
pop
push
into
div
mov
scas
inc
mov
scas
xchg
int
xchg
xchg
cmps
popa
sub
or
pop
or
jmp
jmp
aad
(bad)
mov
jmp
ror
cwde
in
in
mov
cmp
cmp
jbe
bound
adc
or
retf
push
aaa
cmps
out
out
into
in
scas
inc
sbb
adc
(bad)
push
out
add
(bad)
hlt
push
jmp
jno
mov
arpl
das
and
jmp
rcr
out
cmp
dec
xchg
mov
popf
mov
push
scas
test
sahf
lea
pop
push
inc
add
out
iret
aas
xchg
aaa
das
add
aaa
mov
xor
cwde
out
ror
leave
data16
cmp
out
popa
add
sub
fs
pop
or
icebp
sbb
sub
nop
xchg
dec
ret
aam
arpl
xor
cmp
clc
retf
lahf
jne
mov
popa
or
xchg
retf
adc
sbb
out
dec
pop
inc
addr16
pop
or
repnz
sub
loop
jns
aad
loopne
mov
iret
or
enter
jo
inc
sub
loope
nop
pop
jge
mov
pop
ret
xchg
cmpps
jp
hlt
jg
mov
int
jmp
jns
mov
jns
sub
cmp
test
adc
mov
or
mov
imul
add
push
add
bound
sbb
pop
mov
mov
leave
inc
cmp
cmc
mov
fistp
xor
mov
mov
jp
push
(bad)
jns
mov
xchg
adc
or
aaa
out
sbb
fs
pop
fnstcw
or
inc
mov
cdq
lea
mov
jmp
inc
cmp
movs
push
mov
mov
and
and
retf
add
and
jmp
xchg
ins
mov
adc
jl
pop
pop
sub
inc
out
or
sbb
imul
jle
(bad)
xchg
mov
ins
sbb
jbe
mov
rol
es
add
stos
pop
inc
out
mov
cmp
ins
in
and
jno
sbb
movs
mov
xchg
hlt
dec
fstp
xchg
mov
test
fwait
lea
xchg
pop
out
jle
out
push
pop
dec
test
mov
rcr
jno
mov
shl
pusha
sbb
stc
js
push
mov
outs
xor
push
fst
xchg
push
addr16
and
fist
and
out
cmc
mov
xchg
push
rol
(bad)
sahf
pop
mov
ret
mov
imul
dec
sbb
rcl
out
dec
ror
mov
jne
push
and
test
inc
in
xchg
push
sbb
sahf
mov
jp
and
jb
dec
and
mov
dec
xor
jle
frndint
xchg
adc
in
arpl
jmp
sar
xor
sub
(bad)
in
shr
pusha
(bad)
dec
in
pop
popf
pop
mov
and
xchg
(bad)
leave
shl
ds
aas
addr16
sahf
int3
imul
and
mov
lea
xor
std
bound
jo
inc
lahf
inc
enter
mov
mov
xlat
movs
pop
inc
and
sbb
dec
loop
lea
dec
movs
cmp
cmps
sub
cdq
rol
add
sti
sub
mov
rol
je
jecxz
dec
pop
cmp
adc
push
shl
repnz
pushf
jno
mov
ds
xchg
aaa
in
pusha
gs
fidiv
push
ss
ret
ins
mov
xor
inc
jecxz
(bad)
pop
sbb
fidiv
pop
pop
ret
les
mov
pop
adc
inc
nop
mov
pop
test
and
adc
push
fisttp
adc
mov
addr16
in
cld
je
pusha
js
mov
in
fild
dec
leave
test
and
xor
movs
arpl
or
shr
out
add
pop
popf
ins
push
adc
push
jmp
mov
or
jmp
out
shl
mov
cmp
cs
into
push
add
mov
xor
mov
sub
fidiv
pop
jns
daa
pop
push
inc
add
sahf
pop
(bad)
and
test
repnz
int
cmp
js
jmp
(bad)
lds
enter
outs
or
dec
and
imul
les
fnop
sahf
adc
movs
addr16
sbb
inc
inc
ds
push
daa
pusha
dec
js
mov
xor
movs
call
das
addr16
das
or
and
lock
fmul
popa
adc
sti
(bad)
mov
mov
dec
adc
mov
leave
ret
jb
jmp
jns
test
enter
xchg
aam
enter
mov
pop
dec
xlat
or
stos
dec
jg
into
bts
les
adc
clc
mov
dec
xchg
pop
jbe
push
les
and
cs
inc
in
(bad)
fcomp
enter
sbb
mov
xchg
mov
in
fdivr
mov
dec
cmp
inc
jecxz
stos
cs
ja
jge
pushf
iret
inc
into
inc
gs
popf
inc
dec
dec
aam
xchg
and
inc
ins
adc
mov
xchg
cmp
out
or
out
iret
out
or
or
out
inc
jb
mov
xor
cmp
in
xor
jns
out
mov
daa
dec
xchg
pop
cmp
xchg
iret
adc
adc
call
jmp
aaa
(bad)
sti
xchg
repz
mov
pop
mov
ficomp
jns
sbb
jnp
pop
xchg
cwde
adc
and
std
(bad)
jmp
cmovns
adc
jge
and
ins
cli
in
lods
sbb
push
push
mov
jg
fiadd
push
lods
inc
pop
addr16
and
ins
inc
or
cmp
add
fs
push
ds
jo
es
mov
xchg
call
call
cmp
mov
jmp
xor
ins
loope
dec
inc
sub
mov
jmp
add
movs
adc
jp
and
fwait
loopne
mov
jno
xchg
jle
test
mov
sub
ins
xor
sub
mov
aad
push
loop
sub
mov
into
push
inc
hlt
inc
cmps
pop
sti
into
pop
adc
adc
push
aas
inc
nop
addr16
mov
push
jge
je
mov
jp
mov
dec
pop
xchg
dec
call
xor
scas
in
pop
sbb
xor
or
fwait
lahf
js
aam
jl
cmp
push
cwde
inc
or
(bad)
test
dec
in
scas
in
push
jae
mov
retf
fucom
neg
add
das
call
cs
fimul
ins
pusha
xor
adc
lea
cmps
inc
rcl
pop
out
add
xchg
retf
pop
push
cmp
mov
inc
mov
sub
call
sbb
ds
out
jno
sbb
or
mov
repnz
pusha
pop
mov
and
adc
and
(bad)
fiadd
popf
ins
pop
pop
adc
out
lods
push
(bad)
pusha
stc
pop
hlt
or
ret
push
rcl
(bad)
icebp
pushf
sbb
xor
or
lods
test
cwde
pushf
push
lods
inc
and
aam
mov
pop
stos
sbb
add
gs
(bad)
inc
push
cmp
inc
rcl
lods
fild
scas
test
jg
and
clc
stos
cs
xchg
mov
mov
mov
cli
scas
push
call
into
scas
inc
(bad)
in
ret
push
cmp
lods
(bad)
fild
std
xchg
das
aaa
outs
or
pop
test
pop
out
add
in
shl
cmps
hlt
dec
sbb
gs
ret
push
inc
frstpm(287
sub
jno
out
retf
ror
jge
xor
mov
cmp
xchg
fstp
hlt
gs
stc
jp
mov
adc
push
inc
mov
xor
adc
daa
js
mov
stos
stos
jecxz
popf
ds
neg
xchg
cli
xor
js
xor
or
pop
(bad)
cdq
mov
add
scas
lods
sub
int
pop
add
loope
(bad)
clc
in
xor
ror
out
sub
xor
pop
mov
sub
add
addr16
pop
or
cmps
mov
inc
dec
ds
lea
fsubr
xor
loopne
fild
neg
xchg
xor
xchg
loopne
sbb
(bad)
outs
mov
push
adc
sbb
sti
inc
in
scas
and
(bad)
repz
cmp
ss
out
les
rcl
outs
aam
in
retf
mov
push
ins
into
mov
retf
retf
ja
ret
sbb
xchg
ja
xor
aam
sub
mov
jl
pop
xor
clc
call
pop
cwde
cmps
and
test
add
scas
mov
popa
push
cmp
mov
ret
mov
scas
add
arpl
sub
fsubr
pop
(bad)
jle
or
cmp
cdq
adc
dec
and
sbb
ds
dec
js
dec
cmp
out
jecxz
xchg
aad
mov
nop
xchg
outs
cmp
rcr
or
jae
xchg
in
sbb
cli
addr16
push
sub
mov
sbb
pop
fistp
in
aaa
test
xor
cmc
nop
hlt
adc
iret
mov
fst
imul
sar
xrelease
sar
add
jnp
adc
dec
push
mov
dec
lock
cmp
out
push
loope
or
and
mov
cli
pop
mov
arpl
dec
test
(bad)
mov
inc
sbb
and
fdivr
es
xor
jne
lods
or
cmp
xchg
add
call
mov
jmp
lods
sahf
dec
mov
mov
or
out
xchg
push
and
in
je
shl
or
test
dec
mov
sbb
sbb
int
nop
jmp
shr
and
retf
push
xchg
loope
and
(bad)
sti
mov
fld
popa
push
push
(bad)
mov
into
mov
aam
dec
push
xchg
in
jecxz
adc
es
idiv
sbb
jae
xchg
aas
ret
mov
mov
jmp
jmp
out
mov
sbb
movups
mov
mov
adc
sub
fmul
outs
std
aam
push
cmp
div
jbe
pop
sbb
clc
or
cdq
pop
outs
jns
mov
les
add
sub
aam
in
call
xchg
dec
int
(bad)
bound
sub
mov
adc
cmp
int3
push
out
adc
jge
fnstcw
inc
retf
(bad)
fwait
or
push
push
stc
cmps
mov
lods
(bad)
retf
and
in
mov
mov
(bad)
cmp
cmp
lea
fdivrp
dec
out
stc
(bad)
js
push
adc
mov
ret
pushf
adc
int
rcr
xchg
mov
sbb
push
sbb
jmp
repz
mov
repz
and
xlat
jle
gs
(bad)
sar
mov
outs
outs
mov
dec
pushf
movs
inc
inc
push
xchg
add
adc
cld
cmp
fiadd
cmp
div
lea
rol
push
mov
arpl
xor
in
cmp
aad
retf
jmp
xchg
push
lahf
jmp
(bad)
sub
ret
mov
out
jne
and
dec
jp
lahf
or
adc
(bad)
loop
or
aam
loope
neg
cli
mov
pop
fcomi
add
sub
cmp
out
inc
inc
sub
adc
xlat
fwait
movs
xchg
sbb
jae
test
sbb
sahf
stos
fs
mov
xchg
mov
jg
xor
pop
inc
in
(bad)
jl
xor
retf
sbb
mov
push
jo
rcl
std
dec
ficom
push
xchg
inc
lds
mov
pop
movs
mov
mov
xchg
jl
xchg
movzx
pop
push
js
add
sub
arpl
xchg
cs
ret
add
xor
mov
or
adc
cmp
in
dec
xchg
push
mov
aaa
fnstsw
daa
xor
mov
cmps
and
cdq
mov
mov
xchg
ja
mov
mov
sbb
push
jp
push
or
js
inc
test
lds
push
popf
jecxz
jmp
out
fcmovne
iret
mov
bound
jbe
into
cmp
popa
sub
pop
cs
fisub
mul
sahf
movs
test
mov
pop
ss
inc
sbb
das
aam
mov
fsub
pop
inc
ss
imul
aas
out
sub
xor
repnz
sub
pop
ret
sbb
out
mov
pop
push
inc
push
sbb
pushf
and
sbb
push
cmp
add
sub
xchg
(bad)
pop
sbb
sub
dec
sub
(bad)
sub
movs
das
jmp
sub
jle
test
jp
lods
mov
xlat
mov
rcl
retf
ins
jmp
lock
ss
pop
mov
mov
(bad)
fisttp
mov
daa
cdq
fs
ins
pusha
xchg
aaa
stc
jg
mul
call
fsub
out
dec
cmp
push
(bad)
aaa
iret
retf
int3
mov
mov
test
dec
scas
jns
outs
mov
addr16
dec
adc
jmp
dec
jno
inc
mov
mov
psubb
lds
inc
mov
fisttp
outs
in
je
jne
in
mov
sbb
sub
push
es
push
mov
jg
loope
out
xor
sub
xor
mov
xor
test
nop
push
rcr
fidivr
pop
jno
fsub
xchg
mov
ja
pushf
arpl
jge
xor
cmp
inc
bnd
mov
jns
push
sub
jb
ret
dec
xchg
mov
inc
lock
pop
mov
mov
xchg
mov
bswap
pop
fsub
sbb
lods
push
jne
fsub
adc
add
push
inc
jg
pusha
pop
jb
into
mov
ror
cdq
gs
cdq
xchg
loopne
(bad)
fmul
add
push
jmp
dec
xchg
push
mov
adc
repnz
dec
push
mov
mov
inc
add
frstor
scas
ins
cmc
lahf
loope
mov
dec
daa
cmps
lods
mov
xlat
test
pop
add
add
aad
int3
les
xor
jae
add
call
out
mov
fnstenv
xor
cmps
in
stc
popf
in
xor
stos
pop
clc
(bad)
cmp
(bad)
repz
mov
fcomp
cs
imul
cmc
rol
cmc
fimul
add
scas
jecxz
(bad)
call
jg
mov
cmps
popf
add
mov
mov
(bad)
das
mov
jle
jle
fld
repnz
outs
mov
mov
imul
jg
sub
jmp
clc
mov
inc
cmp
(bad)
ror
cmp
add
(bad)
sbb
(bad)
int3
adc
pop
pop
push
pop
inc
and
mov
jg
add
jmp
and
mov
push
(bad)
dec
add
sub
sbb
(bad)
push
stos
ficomp
test
(bad)
cmp
(bad)
lods
ror
jle
adc
xor
hlt
jge
shufps
stos
ret
movs
mov
add
mov
das
mov
jmp
sbb
dec
jmp
push
aad
icebp
mov
movs
xlat
int
mov
mov
ins
dec
push
and
jae
sbb
inc
mov
das
mov
xor
js
fisttp
cs
dec
xchg
pop
sub
pop
(bad)
push
xor
dec
fcom
adc
fwait
cld
hlt
(bad)
dec
xchg
and
sahf
stos
lahf
movs
jmp
mov
pop
xchg
call
setbe
push
jmp
push
out
pop
push
loopne
sbb
sbb
pop
sar
mov
sar
rcl
mov
mov
or
cmp
rcr
and
aam
add
sbb
stos
inc
pop
in
fwait
push
adc
jg
add
or
inc
ror
mov
push
mov
leave
test
shl
push
in
jmp
test
add
dec
mov
jg
xchg
popa
iret
ss
mov
mov
push
fldcw
aaa
aad
xchg
sub
jno
sbb
pop
add
jmp
or
(bad)
xchg
fdivr
jnp
sbb
sbb
mov
sti
sub
(bad)
mov
outs
ror
sbb
std
cmp
(bad)
mov
in
push
xor
movs
daa
adc
cmp
push
cmp
imul
sbb
adc
sti
fild
mov
or
out
shl
out
and
pop
mov
in
push
add
or
rcl
pop
scas
sub
pushf
push
adc
popf
mov
ja
or
jp
mov
loopne
je
(bad)
jp
inc
mov
fst
sub
imul
xor
ret
mov
xchg
std
cld
adc
cmps
or
arpl
push
ja
in
jmp
xor
lahf
and
jge
push
push
adc
push
push
repnz
xchg
push
fwait
mov
mov
inc
lods
inc
ret
(bad)
xchg
lea
cmp
dec
fstp
add
cmp
mov
and
xchg
sub
sbb
test
rol
adc
data16
adc
xchg
test
adc
cmp
daa
pop
mov
xchg
in
mov
fdivr
inc
das
(bad)
pop
add
ins
mov
jb
pop
pop
shl
push
je
es
xchg
xchg
ret
jp
inc
sbb
pop
pop
(bad)
dec
cs
lods
lea
pop
inc
lock
fdiv
(bad)
dec
jl
(bad)
cld
mov
sub
mov
out
adc
mov
stc
out
test
mov
pop
int3
das
xor
mov
movs
and
in
lods
push
sbb
mov
pop
cmp
test
sub
mov
movs
in
dec
(bad)
hlt
pop
cmp
leave
jnp
mov
lds
sub
mov
fidivr
mov
daa
clc
push
dec
jmp
es
inc
lea
clc
mov
add
xlat
pop
gs
or
mov
std
mov
add
fdivr
lahf
pop
push
jnp
stos
push
ss
jl
cs
jb
mov
ror
cmp
ja
les
mov
mov
or
mov
xor
lds
(bad)
jmp
test
test
(bad)
and
ffreep
xlat
stos
mov
jg
adc
idiv
mov
push
inc
fdivr
add
jae
icebp
out
xchg
mov
xchg
push
(bad)
sti
mov
je
mov
popa
jb
fcomp
popf
mov
fbld
sbb
jle
cwde
dec
sbb
clc
push
jle
and
cmp
in
mov
not
retf
retf
mov
ret
cli
call
cld
js
loopne
test
push
mov
int
or
(bad)
or
jns
test
out
mov
in
inc
movs
call
sbb
retf
outs
cmps
adc
pop
pop
xor
ja
adc
mov
repz
sub
jmp
movs
push
sub
pushf
or
xor
mov
pop
push
add
movs
cwde
jl
or
retf
push
and
xlat
pop
std
mov
sbb
sbb
out
(bad)
mov
pop
ss
adc
jno
mov
out
mov
dec
pop
adc
lock
jb
test
and
mov
sbb
xchg
pop
cwde
leave
add
pop
sub
fmul
scas
add
repz
adc
pcmpgtb
mov
jge
adc
inc
jecxz
rcl
iret
xor
sub
sub
cs
mov
rcr
inc
inc
mov
jl
sub
pusha
xor
sub
enter
cld
test
mov
sbb
mov
push
add
test
mov
pop
pop
and
loopne
and
jg
rol
inc
and
mov
adc
stc
mov
xor
retf
cmps
(bad)
sbb
ins
shl
dec
shr
imul
clc
ficom
gs
imul
inc
std
out
mov
pop
xlat
test
je
(bad)
movs
jnp
and
mov
mov
mov
or
iret
das
test
mov
mov
jmp
mov
clc
mov
aaa
out
mov
js
and
sbb
loope
mov
aad
popa
stc
sahf
in
pop
xchg
sub
adc
loopne
fxam
inc
or
mov
mov
into
pop
sbb
sar
mov
xchg
or
fbstp
inc
cdq
test
xchg
lods
test
mov
ds
xor
in
cmp
xchg
jmp
ror
inc
add
repnz
mov
cmp
lods
sbb
sub
pop
pop
jle
cmp
repnz
adc
mov
arpl
jmp
jmp
push
pop
sbb
daa
lahf
and
stc
clc
mov
or
mov
outs
mov
mov
and
sub
xchg
cmp
adc
stc
jne
cmp
mov
adc
hlt
and
add
popf
mov
xor
dec
dec
xchg
jmp
and
fmul
lea
dec
out
xchg
lods
popa
sbb
and
jle
push
imul
(bad)
lahf
pop
jle
and
adc
push
cwde
(bad)
lods
popf
sub
add
xor
fcomp
out
push
jnp
cld
mov
push
push
sub
clc
sti
pop
xlat
out
dec
push
rcl
pushf
daa
adc
xchg
cmp
popa
mov
dec
mov
dec
cmp
adc
imul
arpl
nop
fldcw
cmp
or
popa
(bad)
sub
sub
aad
pusha
pop
push
hlt
sbb
dec
bnd
xchg
idiv
mov
add
jbe
add
(bad)
xchg
sub
adc
xchg
sti
xchg
mov
fimul
test
inc
sti
sub
mov
pushf
mov
cld
call
mov
std
xor
test
lods
in
imul
enter
add
ins
pop
fs
iret
cmps
std
adc
ficomp
mov
mov
xchg
rol
popf
mov
popa
xchg
imul
pop
pop
pop
pop
sbb
inc
pusha
adc
lahf
je
cli
xlat
jae
adc
and
retf
mov
and
(bad)
jmp
lahf
jo
inc
dec
adc
call
stos
rol
test
xchg
jmp
mov
loop
or
dec
xchg
jns
call
xchg
mov
jns
ins
cdq
sbb
or
fucomip
cmp
cmp
jno
mov
adc
aad
outs
pop
dec
push
repnz
(bad)
clc
scas
repnz
push
add
cmc
retf
sbb
repnz
fist
loopne
ins
jg
cs
push
or
mov
test
mov
loopne
mov
and
ins
outs
xchg
adc
add
xchg
mov
gs
lgs
sub
jecxz
(bad)
jno
(bad)
dec
push
sub
jne
pusha
pushf
fistp
(bad)
pop
add
scas
mov
jnp
xor
ins
mov
cmp
addr16
push
neg
icebp
in
or
push
repz
cmps
fimul
mov
sti
lea
aas
fidivr
add
and
mov
mov
ret
cmp
in
(bad)
arpl
xchg
call
sub
push
push
aad
dec
jmp
mov
lds
and
ja
inc
jecxz
in
push
call
xor
jno
loope
repnz
mov
outs
add
dec
mov
mov
stos
fwait
sti
mov
mov
push
fcmovne
inc
sbb
xor
cmc
gs
scas
(bad)
sub
cmc
push
adc
call
jbe
clc
dec
dec
shl
hlt
push
into
push
test
mov
addr16
push
repz
sub
mov
dec
aad
push
or
push
pop
outs
dec
fnstsw
pop
enter
ret
xchg
add
and
mov
mov
and
cdq
sub
push
add
xor
push
sub
arpl
xor
dec
add
out
mov
push
mov
stos
push
pop
div
sahf
pusha
jnp
sbb
mov
outs
pop
fldenv
xchg
mov
dec
sub
cld
jno
dec
stos
iret
xchg
cwde
inc
mov
pop
sub
cmps
or
xchg
dec
cmp
and
jmp
add
mov
or
mov
mov
sbb
push
xchg
pop
out
int3
mul
cmp
add
stos
out
cmc
fsubr
adc
jbe
cmp
aas
pop
cmp
das
fxch
xchg
xchg
in
lods
adc
pop
repnz
(bad)
int3
cmps
inc
lock
stos
inc
pushf
or
arpl
add
cmc
test
test
enter
stc
icebp
xor
stos
fsubr
aam
mov
cld
add
icebp
aam
mov
pop
xchg
lahf
jp
loope
fs
loope
fisttp
je
inc
jo
in
mov
push
mov
dec
pop
movs
jb
dec
mov
dec
dec
mov
fcmovne
jg
mov
pop
sub
mov
cmp
xor
pop
jnp
and
and
fs
mul
imul
inc
out
dec
sub
and
pop
dec
inc
test
mov
mov
push
adc
push
xchg
jne
xor
cs
mov
adc
dec
out
mov
jge
and
mov
mov
fnstenv
aaa
jno
sbb
cmp
xchg
cmp
int3
lods
call
push
mov
pop
retf
cmp
jns
jmp
xor
adc
test
inc
mov
inc
iret
hlt
mov
mov
popa
mov
unpcklps
test
fwait
or
ins
ror
sub
push
dec
pop
cs
arpl
fs
loop
call
imul
cmps
outs
push
jmp
scas
push
pop
sub
pop
imul
xchg
imul
into
loop
xchg
int3
xchg
pop
push
mov
push
xor
sbb
(bad)
int
loopne
xor
ficom
loop
(bad)
cmp
jns
mov
adc
mov
scas
sahf
loope
ja
clc
imul
mov
mov
jmp
int
pandn
sub
or
cmps
inc
ss
push
addr16
xchg
push
ss
inc
add
mov
lock
lea
or
or
imul
xchg
dec
outs
mov
repz
stc
xlat
add
outs
inc
jmp
in
fstp
clc
rcl
and
push
pop
aaa
push
mov
inc
mov
jnp
or
cmp
lods
call
mov
outs
fdiv
loop
pushf
mov
fistp
mov
fs
sub
pop
fdivrp
mov
sub
hlt
aam
cld
aad
mov
out
add
mov
and
dec
or
push
or
dec
xor
pop
stc
scas
fiadd
sub
push
inc
shr
in
cmp
daa
sub
dec
push
and
popa
push
sbb
inc
rol
mov
lods
mov
outs
push
mov
sbb
mov
clc
scas
sahf
nop
(bad)
out
xchg
test
in
xor
ins
and
stc
fidivr
and
cmc
cs
mov
ror
mov
push
lock
push
popa
in
cwde
jae
scas
push
mov
xor
loope
stos
test
and
(bad)
test
lds
or
adc
sub
mov
cmp
aas
rol
ror
(bad)
loopne
adc
iret
es
xchg
cmc
in
cmp
(bad)
sar
sbb
pop
pop
dec
int
adc
sbb
ja
inc
pusha
test
sbb
inc
les
or
hlt
call
aad
adc
inc
(bad)
pop
les
je
sbb
cmp
test
sbb
inc
adc
sbb
mov
mov
push
out
cdq
xor
adc
push
or
and
pusha
push
jbe
out
scas
out
repnz
retf
or
push
inc
ret
xchg
jns
movs
ror
dec
shl
aam
xor
call
push
js
inc
push
xchg
dec
xor
loope
xor
out
jne
push
push
jg
je
dec
out
ror
loop
jmp
fdivr
cs
dec
cwde
and
jmp
dec
ja
sbb
cmp
pop
mov
mov
popf
add
dec
(bad)
xor
add
and
sub
dec
mov
sbb
cmp
(bad)
and
sahf
(bad)
mov
pop
ret
lods
sbb
mov
add
dec
push
inc
push
inc
sub
mov
xchg
in
pop
mov
adc
fsub
pop
pop
xchg
fdivr
cs
or
sbb
mov
add
cli
aaa
or
rcr
int3
out
mov
movs
xor
sbb
xchg
sbb
xchg
and
sbb
mov
and
cdq
test
je
sub
arpl
push
mov
dec
shl
pop
push
loop
and
cwde
imul
push
fbstp
cli
pop
bound
shl
popf
cmp
cld
aad
inc
and
(bad)
pop
add
enter
out
or
popf
cmp
pop
lock
pop
sahf
add
inc
pop
lahf
mov
sub
push
adc
shl
and
fxch
scas
push
ror
sahf
loope
jns
and
je
stos
jnp
push
xor
(bad)
outs
dec
push
push
and
nop
out
push
sub
fimul
or
jmp
jmp
dec
ret
mov
pop
faddp
sbb
das
aas
xor
jbe
aam
popa
push
fs
cdq
mov
mov
pop
sub
push
ss
shr
ins
(bad)
je
mov
mov
clc
(bad)
mov
or
aam
xchg
xchg
adc
mov
int3
test
(bad)
dec
dec
push
in
mov
jp
xlat
loope
cmp
dec
sar
fwait
xlat
or
cmp
lods
jecxz
or
out
or
cmp
enter
mov
inc
sbb
xchg
jo
push
xchg
lods
mov
adc
test
rcl
or
push
js
cmps
imul
pop
sub
jp
inc
cs
out
(bad)
mov
fld
shl
mov
hlt
data16
sbb
ficomp
xor
sub
push
mov
mov
add
jp
stos
sub
or
xchg
mov
or
push
scas
mov
pop
cmp
repz
clc
and
dec
mov
fld
addr16
cmp
lods
inc
repnz
pop
jl
call
leave
inc
call
int
inc
xchg
pop
cmp
pusha
sar
pop
leave
imul
ret
and
cmp
into
pushf
sbb
dec
dec
dec
adc
mov
fld
(bad)
fs
and
in
pop
ja
pushf
movs
repnz
adc
jle
jne
mov
xchg
pop
mov
push
shl
jo
cwde
jo
mov
pop
test
jnp
lock
leave
add
mov
loopne
adc
add
xor
ja
addr16
pop
mov
pop
pop
adc
xchg
mov
cmc
fisub
xchg
add
jnp
cmps
icebp
scas
jo
fmul
fucomip
xchg
scas
retf
dec
sti
sar
shr
mov
mov
mov
pusha
outs
int3
cmps
ja
pop
rcr
xor
scas
rcr
pop
jb
fs
jns
rcr
pop
retf
push
add
sub
xchg
jns
je
(bad)
inc
ja
aad
dec
fadd
adc
cld
push
rcr
add
push
rol
(bad)
(bad)
mov
lods
out
into
or
sbb
jge
or
sbb
daa
js
pushf
dec
jl
ret
or
adc
nop
enter
xor
cmp
sub
out
scas
ffree
(bad)
fadd
push
dec
stos
xor
mov
mov
and
scas
sbb
(bad)
jmp
fwait
cs
push
adc
mov
push
fisub
mov
js
xor
xor
pop
(bad)
cmp
push
pop
and
or
jg
push
pop
mov
stc
jb
cmps
xor
loopne
mov
jg
mov
popa
mov
in
push
lock
inc
push
cmp
ret
push
in
ror
enter
sub
jp
push
adc
mov
sbb
and
add
in
fidivr
dec
bnd
dec
rol
adc
xchg
pop
push
sahf
clc
mov
add
mov
out
dec
cmp
mov
sub
hlt
fstp
mov
int3
cmps
xchg
iret
cmp
sti
nop
imul
ret
out
ss
push
pop
push
mov
jno
mov
jb
les
popf
out
sub
add
cdq
or
inc
pop
sub
pusha
push
sub
scas
cli
dec
popa
jno
shr
(bad)
rcl
ins
sbb
sbb
xlat
dec
sub
inc
loope
inc
fs
iret
dec
jae
add
cmp
in
xor
fsubr
retf
cmp
dec
stc
xchg
cmp
cs
xchg
dec
call
mov
xchg
das
or
add
ret
jne
xchg
enter
inc
mov
shl
push
jo
mov
adc
movs
mov
jp
dec
retf
push
push
cmp
hlt
cs
adc
int3
pop
mov
out
push
imul
mov
sub
clc
mov
push
mov
scas
mov
inc
test
pop
xchg
data16
add
sub
fcmovnbe
je
jg
out
inc
cld
sub
stos
ret
ret
fld
sbb
retf
mov
push
out
pop
lods
adc
(bad)
mov
(bad)
fldcw
nop
pop
jge
mov
adc
ret
fisttp
dec
sub
outs
xor
movups
cmp
jae
enter
xor
outs
xchg
xchg
adc
mov
cmp
je
dec
sub
adc
adc
jmp
mov
push
pop
bound
fwait
sub
push
pop
adc
dec
ds
mov
mov
adc
push
(bad)
cmp
fld
mov
adc
out
jo
lahf
inc
push
daa
add
inc
ficom
sub
cmp
enter
js
push
xor
and
(bad)
mov
cmps
idiv
lds
cmp
ror
pop
jecxz
aam
cmp
stc
pop
ins
mov
in
push
shl
sbb
mov
mov
fxtract
pop
pop
cmp
mov
mov
cmp
push
add
cmp
stos
pop
jbe
lods
stos
mov
sub
outs
sbb
clc
or
shl
loope
xor
jle
mov
loopne
je
retf
addr16
mov
dec
aas
add
xor
xchg
add
add
xchg
add
jle
sub
add
xchg
retf
add
retf
repnz
sbb
movs
or
and
adc
inc
es
retf
std
cmp
mov
fmul
xor
jnp
jg
cdq
inc
adc
ja
test
cwde
push
push
cmp
sti
push
sbb
les
xchg
cmps
int
repnz
sub
inc
test
and
out
adc
cmp
pop
mov
fild
cmp
jo
dec
popa
add
call
pop
cdq
outs
ins
ds
sub
fnstenv
aad
add
sahf
sub
jmp
cs
sbb
sahf
mov
out
mov
sbb
test
jb
or
add
mov
scas
stc
imul
mov
push
orps
repnz
xor
xchg
adc
mov
sub
adc
or
in
jbe
ret
dec
in
data16
js
into
adc
(bad)
dec
sub
mov
jl
sbb
jmp
inc
xchg
sbb
ss
inc
fnsave
sahf
adc
or
or
mov
push
xchg
lock
sbb
xchg
(bad)
enter
cmps
(bad)
(bad)
jg
adc
ss
pushf
stc
xchg
sub
xlat
mul
cmp
lods
imul
in
aas
xor
mov
xchg
mov
loopne
sbb
inc
dec
scas
sbb
sbb
shl
fcmovne
clc
cmps
mov
in
stc
addr16
(bad)
pop
push
out
mov
or
xchg
jns
jnp
and
xchg
or
rol
test
sbb
lods
call
mov
mov
repz
scas
enter
push
fdivrp
push
adc
iret
pop
icebp
inc
popa
push
xor
aas
mov
neg
mov
xchg
push
cmp
inc
dec
call
cmp
adc
inc
or
and
lods
in
leave
neg
mov
fldenv
cmps
sbb
mov
mov
in
jb
or
xchg
pop
or
loope
cmps
cmp
pop
or
retf
nop
push
enter
push
add
and
das
rcl
xlat
hlt
js
repnz
mov
dec
push
aad
idiv
jo
xchg
push
adc
push
rcl
inc
jg
imul
inc
enter
loop
xor
rcr
xor
lods
mov
popf
lods
dec
stos
jns
dec
sbb
push
into
pop
adc
push
fcomp
jge
dec
hlt
out
push
int
outs
push
retf
mov
push
in
(bad)
cmp
adc
in
sub
dec
inc
pop
ja
and
mov
mov
dec
inc
jecxz
xchg
cmc
mov
out
xchg
ja
cdq
hlt
inc
push
inc
xor
imul
and
pop
rcr
add
xchg
dec
adc
sbb
mov
mov
mov
jp
dec
lahf
sub
scas
int3
jns
das
mov
ins
pop
and
popf
cmps
sti
push
adc
imul
xor
mov
mov
cli
out
and
mov
cmps
ror
inc
or
ins
pushf
sbb
lds
add
mov
add
add
push
inc
arpl
push
xacquire
dec
sub
pop
jnp
hlt
jmp
stos
jo
and
lahf
pop
mov
into
inc
stos
jbe
or
sbb
cdq
jmp
mov
jb
test
stc
mov
adc
cli
jb
push
mov
or
(bad)
add
nop
(bad)
imul
aaa
sbb
ret
loop
lods
push
mov
into
adc
jecxz
mov
cli
jp
mov
stc
daa
mov
adc
dec
ss
jo
mov
(bad)
mov
in
into
fisub
mov
fsub
nop
jge
sub
mov
leave
mov
inc
je
xchg
je
jg
outs
fbstp
ror
in
(bad)
sbb
xor
lds
nop
xor
add
xor
jb
cmps
sbb
cmp
repz
add
shr
imul
mov
pop
(bad)
pusha
sub
rcr
aaa
repnz
idiv
icebp
adc
int3
ja
add
mov
push
mov
sbb
jo
add
cs
or
xchg
arpl
lods
jnp
xchg
call
jmp
fisttp
lock
retf
pop
push
push
repz
jp
mov
adc
mov
mov
sub
and
pop
outs
jne
mov
gs
sbb
and
jp
and
out
test
rcl
outs
jne
and
mov
mov
stos
mov
inc
push
ret
cwde
add
or
(bad)
mov
pushf
dec
fnsave
and
sub
aad
xlat
cli
(bad)
fistp
sti
cmp
adc
xlat
sbb
add
sub
popf
jno
fwait
pop
(bad)
mov
idiv
jp
sbb
loop
mov
ins
xlat
adc
(bad)
xlat
jl
sub
addr16
push
call
jmp
retf
push
xchg
mov
jge
cmp
fild
cmp
xchg
(bad)
pop
shl
aas
mov
mov
stc
je
mov
jmp
mov
enter
(bad)
fcom
das
cmp
imul
inc
sub
repnz
xchg
stc
retf
jb
mov
or
mov
pop
stos
fcmovnbe
dec
inc
add
cli
cmp
jge
mov
sub
pop
jno
call
inc
add
xchg
xchg
fisttp
push
inc
outs
mov
call
and
push
or
adc
int
jne
xchg
xor
adc
jno
fldenv
mov
or
outs
pushf
ins
or
lods
pop
adc
lods
hlt
sbb
test
and
adc
and
fmul
xchg
push
sub
push
adc
mov
sub
retf
scas
sti
xor
push
adc
data16
mov
in
rcl
hlt
push
neg
ds
call
pop
sub
imul
data16
cmp
int3
mov
inc
mov
aaa
jp
in
in
dec
lods
repnz
rcr
xor
add
sbb
pop
push
jle
sub
pop
mov
dec
mov
(bad)
inc
mov
jae
mov
cmp
inc
movs
dec
cld
(bad)
(bad)
pop
adc
adc
mov
pushf
mov
(bad)
mov
xchg
dec
test
push
scas
sbb
(bad)
call
jo
sahf
xchg
cmp
xchg
or
cmps
and
lods
sahf
xchg
imul
loope
mov
imul
push
idiv
mov
pop
pop
push
cmp
dec
mov
pop
loop
int3
cdq
cmp
cdq
and
inc
push
inc
enter
jg
repnz
call
hlt
int3
push
or
cs
inc
xchg
dec
jl
das
inc
xchg
or
mov
out
(bad)
addr16
out
cmps
mov
dec
cld
push
int
or
inc
mov
stc
xchg
ror
sub
loope
(bad)
jg
dec
movs
and
int
xchg
retf
cmp
pop
cs
cld
mov
inc
xchg
push
push
lock
jge
sub
repnz
ret
inc
cmc
xor
dec
add
push
sub
loope
fcmovu
or
out
lahf
inc
inc
dec
jmp
and
(bad)
mov
or
sbb
push
cmps
or
fs
push
dec
call
cld
jbe
imul
sub
add
into
pop
sbb
jns
adc
add
imul
push
test
and
sub
(bad)
mov
or
jae
aad
aas
jle
push
int3
scas
add
sbb
scas
imul
cmp
ins
clc
xor
push
mov
test
loope
out
jne
inc
ins
ja
cmp
inc
mov
in
inc
enter
enter
clc
sbb
mov
pushf
les
test
arpl
mov
pop
and
out
adc
jmp
(bad)
cmp
(bad)
leave
pop
mov
mov
mov
xor
rcr
dec
fs
inc
enter
loop
and
mov
lods
inc
cmp
cmp
imul
or
and
shr
jecxz
imul
test
dec
ins
test
mov
xchg
aad
pop
push
pop
dec
xchg
push
xor
mov
js
loop
movs
cmp
add
data16
leave
or
or
cli
or
mov
sti
(bad)
push
sbb
ss
call
dec
fisttp
lahf
push
daa
nop
daa
imul
faddp
pusha
dec
add
sbb
push
cld
js
xchg
fs
jecxz
aad
adc
bnd
call
push
sbb
mov
sti
sbb
pop
clc
popf
pop
xchg
jl
sbb
cmp
xor
rol
push
adc
syscall
cwde
pop
push
out
repz
jg
pusha
daa
fidiv
fsub
lock
aad
mov
icebp
sbb
sahf
in
mov
add
cmp
je
rcr
pop
(bad)
arpl
or
xchg
and
sti
xor
jne
dec
dec
fs
inc
pop
add
jmp
mov
push
push
lods
outs
sbb
add
ret
scas
pop
clc
or
in
pop
gs
mov
or
and
(bad)
mov
mov
add
xor
(bad)
ud0
jecxz
lahf
stc
retf
jbe
hlt
xor
popa
mov
ret
mov
(bad)
lock
mov
xchg
or
repnz
bnd
cwde
ds
enter
xor
add
enter
fxch
mov
pusha
getsec
jge
ja
adc
in
xor
push
sbb
jmp
xor
nop
add
int
and
mov
in
sbb
inc
or
mov
outs
jl
mov
pop
or
xchg
sub
movs
fimul
mov
jl
adc
leave
sub
aas
dec
or
in
and
jle
adc
sub
or
mov
mov
and
push
pusha
push
stos
xchg
les
cmp
xor
jno
(bad)
std
test
mov
mov
sbb
mov
or
add
mov
ins
movs
mov
mov
mov
sbb
scas
xchg
aaa
stos
test
outs
xchg
xchg
call
dec
gs
mov
(bad)
fldenv
sbb
(bad)
dec
js
ins
mov
xchg
mov
sbb
loope
mov
bswap
clc
sub
inc
ffree
fcmove
or
in
aas
xchg
repz
outs
test
adc
jno
movs
loope
pop
aaa
mov
lods
lea
sbb
xchg
pop
cmp
sub
scas
aas
ret
aad
pop
mov
jp
sub
push
jno
push
call
loop
jae
jmp
sbb
mov
add
push
clc
dec
jo
mov
dec
retf
push
jecxz
push
mov
jo
add
ja
test
in
or
jge
aad
cmp
fdivr
sub
loope
outs
sbb
cmp
repnz
add
adc
push
pusha
xchg
daa
pushf
int3
pushf
addr16
retf
inc
addr16
daa
lock
or
(bad)
mov
(bad)
mov
pusha
xchg
retf
mov
inc
or
ds
dec
push
mov
mov
stos
stos
fsub
out
xchg
sti
xchg
std
cmp
cmps
add
xchg
jge
add
inc
mov
jbe
icebp
shl
ja
mov
sar
lods
push
inc
sbb
outs
xor
popa
sbb
sub
mul
push
xchg
leave
jbe
sub
clc
int
adc
add
or
(bad)
jmp
lock
adc
scas
fistp
and
sbb
movs
in
sti
into
xchg
in
loope
jne
jecxz
push
fist
cdq
mov
push
sub
inc
sbb
ja
sbb
leave
fs
inc
push
call
rcl
test
mov
cmp
jnp
xchg
xchg
cmps
jp
inc
out
stos
lods
not
inc
sbb
test
imul
cld
sti
and
pop
aam
ds
inc
jns
sub
mov
ss
sub
push
aam
cdq
outs
jl
imul
dec
mov
aam
jecxz
dec
imul
push
push
mov
cmp
repnz
mov
fs
outs
ret
sbb
adc
adc
fistp
retf
pop
cmps
mov
retf
ja
cmp
xor
sbb
les
and
adc
movs
lahf
jae
mov
les
adc
loopne
pop
fwait
scas
or
add
or
es
adc
xchg
test
leave
mov
pusha
in
(bad)
enter
sar
push
jo
inc
(bad)
sti
hlt
xchg
sbb
cld
in
cs
out
imul
fld
xor
push
dec
loop
xor
push
push
sbb
ficom
push
inc
loope
jl
clc
jge
jae
enter
loopne
xchg
mov
jg
addr16
stc
fidivr
adc
xchg
fcmovnu
mov
dec
test
jmp
mov
leave
sub
sub
shr
cmps
mov
mov
mov
jg
dec
out
fdivr
inc
mov
cmps
dec
inc
inc
js
mov
fistp
clc
pop
adc
add
mov
inc
xor
scas
je
cwde
xchg
mov
sbb
mov
inc
jne
mov
(bad)
and
push
not
cld
js
fistp
ins
cmp
aaa
and
mov
mov
and
inc
sti
adc
and
imul
jle
mov
outs
pop
popa
leave
popf
and
pop
pop
in
dec
iret
inc
push
dec
(bad)
cmp
les
add
fdivr
into
mov
push
cmp
and
idiv
out
int3
pop
dec
and
push
jns
mov
ds
adc
jo
nop
sti
push
add
adc
jb
sub
add
pushf
cwde
div
lock
stos
push
xchg
fisub
stc
sbb
shr
shr
xchg
mov
rcr
cld
mov
out
or
push
cdq
fnstsw
and
std
mov
mov
push
pushf
adc
add
adc
cmps
jl
lock
int
stc
aam
inc
les
into
icebp
adc
lods
mov
mov
or
sub
out
frstor
cmc
push
cmp
dec
loope
and
fidiv
cwde
mov
sbb
fs
(bad)
imul
test
scas
lea
mov
adc
sub
call
sbb
dec
mov
inc
pop
mov
lea
data16
dec
mov
mov
inc
aaa
daa
pop
jle
cmp
mov
sar
jl
or
loope
mov
sub
sbb
xlat
test
lods
xchg
loopne
mov
and
fild
fmul
cmp
jb
jne
sub
ins
pop
ins
cmp
add
mov
arpl
repnz
pminsw
fimul
mov
jmp
mov
fnstsw
mov
xor
mov
aaa
in
iret
or
push
in
mov
aad
dec
and
(bad)
mov
pop
ja
loop
mov
xor
rol
aam
shl
xor
sbb
sti
mov
es
adc
xor
fisub
call
xchg
pop
jg
and
jle
repz
stos
jns
cmp
int3
int
add
movs
push
pop
lea
dec
xchg
jl
les
pop
sti
and
cmp
rcl
mov
pop
mov
enter
jbe
or
sub
stos
jmp
je
jmp
cdq
mov
retf
xor
inc
and
inc
cmp
jns
cmp
je
popa
sub
push
push
pop
xchg
movs
(bad)
jecxz
push
mov
adc
mov
fst
cmp
and
movs
ins
rol
test
sbb
loopne
les
in
sbb
ret
push
pop
or
scas
fwait
jns
pop
pusha
loope
pop
gs
call
cmp
mov
add
xchg
pop
adc
add
push
pop
(bad)
into
or
and
fs
scas
imul
inc
and
jg
iret
popw
jo
aad
je
and
pushf
sub
add
add
cmp
outs
(bad)
lock
xchg
les
test
rcr
test
mov
mov
loope
sbb
pop
shr
jmp
scas
popa
jle
pop
daa
pop
sbb
push
icebp
in
test
out
jmp
scas
push
mov
jmp
push
add
imul
enter
or
xor
jg
dec
jl
pushf
popa
mov
cmp
int
push
push
mov
imul
pop
push
cdq
fbstp
ds
push
xchg
lods
sbb
jge
jnp
sar
fild
dec
inc
ret
clc
lods
js
retf
sub
and
test
inc
cmp
out
inc
mov
fwait
sbb
aaa
pop
jl
loope
inc
xor
cvtpi2ps
mov
in
arpl
inc
push
mov
and
and
dec
cmp
mov
pop
mov
push
pop
out
cmp
and
xchg
aas
ins
pusha
or
adc
fsub
retf
jl
mov
dec
jp
ficom
sbb
shl
test
stos
ror
outs
lods
and
mov
ins
and
inc
movs
rcr
in
mov
pushf
inc
je
inc
or
add
ja
lods
retf
stos
or
xor
pop
jbe
xchg
xor
jae
add
or
rcl
jmp
int
xchg
mov
imul
packuswb
and
push
loope
fs
sub
or
test
(bad)
or
mov
fmul
fucomp
add
push
adc
and
icebp
jb
(bad)
push
mov
add
call
and
pop
ret
lods
mov
(bad)
push
mov
neg
pop
outs
push
iret
push
ret
daa
outs
popa
adc
push
or
int
fidivr
adc
sub
xchg
jg
jae
mov
pop
mov
or
stos
xlat
xor
les
mov
fiadd
adc
dec
neg
mov
test
push
out
sbb
icebp
mov
repnz
sbb
je
push
ins
jbe
inc
mov
std
repz
cmc
icebp
(bad)
and
pusha
xor
pop
cdq
pop
and
(bad)
sar
test
jl
(bad)
es
out
out
fstp
test
(bad)
mov
push
sbb
in
mov
jns
jo
and
jno
mov
pop
sbb
fxtract
adc
(bad)
fcom
push
pop
push
vpaddsb
div
sbb
fcomp
cmc
adc
xchg
push
sbb
or
sbb
in
dec
shl
jbe
repz
in
pop
xchg
inc
repz
push
xchg
outs
std
mov
xchg
test
and
je
cmp
mul
shl
call
push
inc
cmp
loop
adc
cmps
cmp
or
test
addr16
les
dec
es
jle
add
lahf
push
mov
inc
leave
imul
lahf
pushf
inc
sub
mov
cmp
jbe
push
xchg
ficomp
jge
pop
ja
call
push
imul
jnp
out
mov
imul
sub
cdq
xchg
or
shl
fnstenv
sahf
mov
pop
inc
jmp
(bad)
sbb
ss
xor
daa
push
stos
daa
fidivr
leave
and
pop
ret
cmp
sub
mov
movs
fild
in
add
push
shl
sub
add
xchg
xchg
lock
rol
and
fwait
shr
adc
mov
xor
jbe
int3
repz
or
sbb
bound
dec
js
adc
imul
push
hlt
and
leave
cmps
ret
retf
aam
loopne
push
adc
mov
pop
add
(bad)
jl
rcr
fwait
sub
or
test
pop
outs
sub
pop
sahf
ds
rcr
cdq
adc
cdq
fmul
dec
fsubr
sub
scas
or
xchg
jmp
xchg
mov
adc
sbb
das
aaa
retf
push
je
out
jmp
outs
jne
mov
sbb
(bad)
into
push
out
bound
ja
jbe
pop
test
jmp
push
and
sbb
mov
loopne
aad
cmp
lock
aaa
push
lock
dec
jo
shl
xor
mov
mov
push
repz
mov
cmp
dec
pop
and
push
test
aad
xchg
test
neg
push
jo
jns
test
in
(bad)
adc
mov
repz
rol
or
ret
stc
cmp
retf
dec
std
or
(bad)
sbb
call
das
outs
xchg
mov
adc
mov
fnstenv
icebp
cmc
outs
cmp
push
inc
xchg
add
iret
adc
clc
cmp
cmp
inc
pushf
mov
mov
test
(bad)
or
mov
and
mov
add
add
sbb
inc
pop
push
xchg
push
add
mov
push
push
test
cli
shl
dec
mov
pop
stos
mov
jge
mov
call
jmp
push
ror
fmul
pop
or
pop
or
loopne
xor
test
daa
cs
mov
pop
push
cmps
mov
xchg
in
retf
adc
mov
inc
hlt
jb
adc
xchg
jg
mov
je
(bad)
arpl
imul
ins
test
sbb
mov
cmp
lods
jecxz
sbb
sbb
ror
test
into
cld
retf
mov
push
push
inc
pop
or
mov
or
popa
mov
push
lahf
pop
repz
push
mov
(bad)
shr
or
mov
test
neg
daa
add
and
lahf
xor
pop
retf
fwait
dec
push
pushf
mov
out
(bad)
dec
fcomip
(bad)
cmp
enter
fnstsw
jg
mov
out
or
jge
sub
mov
or
adc
mul
rcl
inc
fwait
mov
dec
jnp
sub
call
pop
sbb
test
mov
add
sbb
mov
mov
add
and
and
xor
sub
or
sbb
hlt
mov
push
mov
in
inc
mov
jle
mov
xchg
adc
cmp
pop
movs
mov
ins
cld
jecxz
pop
mov
cmps
sub
adc
cmp
inc
shl
push
scas
stos
xor
mov
out
mov
jo
jle
mov
jg
jno
xlat
jmp
adc
mov
adc
push
lods
idiv
adc
fistp
mov
cmp
adc
jne
mov
pop
push
mov
sbb
sahf
xor
rcl
jo
(bad)
aam
pushf
cwde
pop
(bad)
and
dec
mov
repnz
lahf
nop
ins
inc
adc
and
cmps
cli
inc
push
adc
dec
inc
add
push
lock
cmp
dec
lahf
into
je
in
and
sbb
pop
ins
cmp
lds
cmp
xchg
test
out
push
add
fiadd
mov
add
iret
rcr
fsub
hlt
lods
push
mov
push
adc
jns
repz
inc
in
sub
add
lahf
xchg
add
and
mov
ror
push
or
movs
cmp
arpl
nop
mov
test
in
sbb
mov
xor
mov
inc
sub
mov
stos
in
fidivr
ins
icebp
adc
cdq
push
or
aad
arpl
or
arpl
fldenv
push
into
pop
repnz
arpl
sti
jb
xchg
mov
daa
pop
mov
je
and
sbb
mov
push
inc
fnstsw
shl
and
fisttp
test
sub
cmp
fistp
test
inc
call
sub
inc
lods
pop
jmp
cmp
lea
aad
or
mov
sbb
jg
pop
inc
mov
shl
(bad)
xor
es
and
or
cdq
jmp
movs
xlat
les
adc
stc
call
cwde
icebp
in
or
(bad)
sub
daa
pop
ss
push
es
or
add
cmp
mov
pop
aad
xchg
push
pop
das
sti
or
jno
in
(bad)
fs
sub
(bad)
jecxz
rol
inc
jbe
xchg
fisttp
movs
jbe
mov
rol
mov
sbb
dec
jecxz
xchg
mov
add
ret
ret
add
push
sti
xchg
pop
cmc
cdq
mov
adc
push
xor
xor
aaa
mov
fnstcw
popa
aas
mov
inc
enter
add
jle
push
push
push
xlat
lods
(bad)
pushf
inc
xchg
and
xchg
cmc
mov
adc
sbb
cmp
stos
mov
rol
inc
sub
inc
aaa
jb
and
pop
jg
push
(bad)
popf
pop
dec
or
xor
mul
inc
pop
hlt
cld
cmps
movs
ror
jb
int3
shr
dec
(bad)
jmp
xor
outs
mov
arpl
shl
adc
adc
fs
inc
jbe
popa
push
add
sti
adc
inc
or
in
das
push
es
pop
mov
inc
not
dec
je
xor
sbb
imul
mov
cmp
rcr
stos
ins
ins
xchg
sub
fcom
sub
jb
dec
jmp
dec
ds
popa
cmc
add
or
pop
cld
mov
daa
ds
or
jmp
and
das
mov
and
ret
cld
test
ins
(bad)
enter
and
pop
xchg
mov
push
das
fidivr
test
test
push
dec
leave
xor
xor
cmp
scas
call
xor
fimul
and
sbb
xchg
sub
inc
fsub
call
sahf
push
push
push
mov
xchg
xor
mov
jne
lahf
je
sbb
cmp
or
mov
leave
(bad)
(bad)
jmp
push
xchg
and
add
mov
call
xchg
jae
test
mov
scas
test
pop
loopne
mov
mov
pop
leave
bound
dec
sub
ja
icebp
mov
sub
push
lods
sub
mov
test
mov
lea
xchg
out
nop
enter
jno
pop
call
jae
mov
xor
mov
xor
xlat
repz
adc
xchg
lock
frstor
(bad)
adc
mov
test
ins
sub
and
fidiv
popf
add
jnp
mov
cmp
adc
and
fldenv
aad
or
loope
mov
pop
call
ins
sub
sahf
mov
sub
dec
sbb
int
jae
test
sbb
je
cmps
adc
xchg
cmovo
scas
xor
jno
xor
jge
xchg
pusha
je
cmp
(bad)
fucom
pushf
mov
adc
loop
adc
add
sbb
outs
ds
pop
mov
cdq
int3
jecxz
xor
pop
cmp
pusha
adc
popf
test
les
stos
inc
xchg
jmp
or
sub
xor
aas
mov
jb
cs
cmps
jp
jno
push
rol
jbe
mov
inc
scas
dec
mov
sahf
push
sbb
pop
and
cld
jns
sbb
jmp
cmp
dec
dec
push
lods
mov
call
mov
adc
pop
dec
pop
or
je
inc
scas
mov
and
lds
cmps
sahf
fdivr
fwait
adc
and
jge
inc
xchg
pusha
in
and
hlt
push
aaa
test
dec
jne
daa
clc
jno
rol
arpl
mov
out
in
fdiv
call
push
sahf
arpl
mov
pushf
mov
ret
inc
je
xchg
mov
ret
add
and
adc
pop
test
jb
jle
je
enter
mov
cs
mov
jle
loope
cmp
xchg
js
fwait
test
out
cmp
in
xor
fnsave
mov
mov
mov
pop
mov
shr
fwait
adc
movs
arpl
lds
(bad)
sub
(bad)
jmp
in
ja
rcr
repnz
inc
ins
cmp
retf
xchg
sbb
retf
or
stos
cli
in
outs
inc
test
jmp
icebp
jb
sbb
mov
fdiv
xor
and
clc
fisttp
mov
or
test
scas
pop
pop
xor
jne
or
sub
mov
jmp
retf
(bad)
(bad)
aaa
jns
(bad)
call
rcl
loopne
or
fwait
cmp
pop
push
sub
out
cmp
dec
cmp
mov
jbe
mov
xor
lahf
jns
cs
or
fmul
call
xor
cs
cmp
daa
(bad)
ins
leave
cli
mov
imul
or
and
xor
or
dec
pop
mov
add
adc
jo
shl
xchg
enter
fs
daa
adc
les
pop
dec
mov
xchg
imul
in
sub
mov
fild
mov
dec
jo
repnz
dec
data16
jmp
addr16
adc
pop
fcomp
and
cmp
sbb
popa
call
aaa
dec
sub
push
mov
test
mov
xor
sar
out
jg
movs
xor
mov
pop
dec
jo
cmp
xchg
sbb
xchg
xchg
or
fsub
adc
cmp
and
cwd
mov
xchg
mov
js
push
adc
mov
inc
in
fsubp
loop
lods
call
adc
lods
xor
pop
push
push
shr
out
dec
mov
retf
cmp
dec
rol
add
lods
and
push
stc
pop
add
sub
lods
xor
xor
adc
call
xchg
dec
inc
cmc
out
(bad)
push
push
loop
jmp
xchg
jne
movs
mov
sbb
dec
cld
jl
mov
push
out
pop
rcl
mov
dec
xchg
in
jmp
std
ja
sbb
dec
sub
(bad)
lea
outs
clc
out
sbb
pop
popf
ds
out
push
and
fs
and
aas
imul
push
mov
mov
in
jmp
cmp
ds
mov
add
jnp
mov
aam
jne
rcr
sbb
(bad)
xor
push
xor
inc
scas
jg
or
lahf
inc
retf
loop
add
mov
mov
gs
ins
rol
in
push
xchg
cmp
dec
push
mov
test
xor
aad
dec
cmps
xor
mov
dec
addr16
lea
aas
sbb
sbb
push
mov
add
xchg
mov
ins
loop
add
sti
mov
xor
push
push
add
inc
stos
mov
xchg
(bad)
pushf
repz
shl
js
retf
push
(bad)
in
das
pop
cmps
mov
or
loop
leave
stc
nop
add
sbb
icebp
pop
jl
mov
mov
adc
push
and
lods
or
mov
pushf
cdq
imul
je
ins
jg
iret
rcl
add
stos
sbb
mov
pusha
lock
push
sahf
or
add
lahf
xor
out
inc
out
enter
lea
cs
aad
test
sahf
sub
mov
lock
int3
pop
push
mov
mov
xor
add
sub
enter
lds
adc
mov
bound
dec
jmp
jbe
sbb
scas
cmp
jmp
cs
xor
inc
imul
sar
hlt
push
xchg
inc
mov
gs
jb
jge
mov
dec
outs
mov
js
push
retf
jecxz
int
or
inc
mov
daa
adc
and
shl
ffreep
addr16
clc
jp
xchg
xchg
mov
push
adc
xchg
clc
lods
fs
pop
sbb
push
ret
or
pushf
outs
adc
lods
js
dec
xor
xchg
fcmove
push
movs
data16
adc
je
adc
ins
es
rcl
and
ja
cld
jno
inc
mov
jbe
je
pusha
test
sbb
je
or
jnp
jg
mov
ds
and
add
leave
push
jnp
outs
in
arpl
fistp
rcr
mov
shl
xchg
mov
sar
pusha
push
sti
(bad)
and
aas
xchg
xor
add
fnstcw
jmp
imul
cmp
push
pop
stos
jmp
mov
aaa
fdiv
cmps
inc
adc
scas
daa
and
enter
imul
mov
movs
loope
sub
mov
or
mov
inc
out
lea
add
imul
xor
imul
rcl
pop
inc
je
rcr
es
lods
fwait
push
mov
shl
into
xchg
sub
and
repz
xchg
cwde
jbe
sub
(bad)
out
ret
mov
pusha
add
mov
sbb
jg
push
jno
fdivr
call
arpl
call
push
sti
clc
scas
push
pop
pop
pop
fs
daa
xor
jl
fistp
inc
push
stos
pop
aas
inc
sbb
adc
dec
daa
push
lahf
and
mov
bound
setnp
or
jecxz
cmp
or
push
test
xchg
fsubr
cmp
adc
xchg
pop
jb
rcr
sbb
mov
hlt
push
and
sahf
mov
dec
lods
data16
sar
shl
std
test
jbe
int
jno
xchg
xchg
(bad)
cli
out
inc
scas
pop
dec
pop
jle
out
or
pop
aas
popa
sub
cld
out
fs
(bad)
mov
dec
cdq
mov
ds
cld
add
(bad)
(bad)
xchg
int3
adc
sub
dec
push
mov
cs
add
dec
retf
mov
std
sbb
shr
retf
movs
mov
idiv
ja
ja
xor
sti
fidivr
cmp
inc
stos
jo
sbb
sti
pop
jns
jne
push
fldenv
retf
into
cmp
sub
(bad)
daa
mov
push
sub
adc
mov
jae
push
jns
dec
cwde
or
sbb
mov
pusha
push
add
retf
pop
loope
or
sbb
rcl
cmp
jno
mov
out
(bad)
push
xchg
sahf
sub
in
mov
dec
clc
xchg
push
cmps
sti
xor
test
arpl
or
ror
mov
jo
call
mov
fistp
mov
aaa
ret
test
rcr
dec
cmc
xor
ins
outs
mov
or
cld
sahf
mov
adc
dec
or
xchg
inc
jnp
xor
popf
push
inc
adc
je
xchg
xchg
(bad)
pop
and
in
mov
and
mov
and
jb
div
jmp
stos
cmp
jno
dec
mov
dec
and
ja
pop
cmp
leave
icebp
enter
xchg
mov
fs
les
pop
daa
sbb
cmp
jbe
inc
and
pop
leave
in
outs
sub
iret
inc
cld
pop
pop
jl
pop
sub
xchg
retf
dec
cmp
enter
xor
fadd
sbb
pushf
adc
fldcw
jge
pop
rcr
sub
fs
iret
ror
popf
leave
cwde
cli
lahf
inc
repnz
push
test
hlt
jecxz
fcomp
out
jl
mov
mov
push
enter
mov
push
fimul
inc
scas
imul
fdiv
lds
dec
jmp
add
xchg
sub
mov
inc
das
ss
mov
movs
cmps
imul
jge
cmp
xor
jmp
cmp
push
dec
adc
js
jge
stos
popa
fistp
push
jns
test
cmp
loopne
xlat
xchg
loopne
fisttp
xlat
cmp
retf
fs
test
fbld
test
popa
push
adc
mov
pop
add
mov
mov
mov
pop
pop
jp
add
pop
stos
dec
data16
in
jl
cli
mov
into
xchg
mov
dec
xchg
loope
ins
imul
scas
pushf
cmp
fmul
inc
pop
out
xchg
cmp
mov
cmp
pop
ins
lds
jnp
fwait
outs
dec
dec
mov
adc
add
arpl
mov
mov
out
fucomip
xor
push
sbb
leave
movd
dec
sub
dec
retf
xor
pushf
(bad)
popf
stc
in
es
aas
or
fisttp
enter
ret
mov
mov
dec
lahf
adc
adc
cmc
rol
jae
lahf
ret
sbb
pop
std
inc
push
push
add
adc
int3
xor
imul
jo
sub
inc
sbb
mov
bnd
inc
inc
sub
jmp
sub
add
in
les
movs
aaa
sar
imul
mov
and
xor
fcmovnu
dec
retf
mov
jge
fucomi
jbe
mov
(bad)
and
imul
mov
push
ds
imul
jb
mov
pop
pop
adc
adc
jb
jbe
jbe
adc
mov
cmps
std
pusha
and
fs
xchg
mov
das
neg
push
imul
mov
add
sub
sahf
push
pop
stc
aas
xchg
pop
out
shl
sub
jmp
lods
ror
outs
sub
stc
or
repz
xchg
int
pop
retf
cli
sbb
clc
fstp
gs
hlt
jnp
popa
sub
add
mov
xor
sbb
out
mov
add
pop
add
or
mov
xor
cmc
xor
test
(bad)
adc
sub
add
dec
mov
push
shl
stos
(bad)
jmp
xor
mov
dec
rcl
sbb
sub
rol
inc
cmps
push
dec
das
fmul
dec
sbb
jb
inc
mov
in
xor
into
mov
jo
push
movs
sti
mov
into
cmp
or
nop
inc
call
add
ror
pop
imul
xchg
dec
xchg
and
inc
shr
push
(bad)
or
fbld
push
pop
or
push
pop
pop
xchg
cs
lahf
cmc
inc
xchg
loop
jae
test
xchg
ins
int3
shl
lock
lock
fucomip
push
(bad)
les
xor
or
xchg
xchg
test
jl
xchg
aam
pop
test
scas
inc
mov
adc
or
icebp
adc
push
fwait
dec
pop
fdivr
ss
call
push
in
(bad)
(bad)
aas
scas
pop
inc
scas
xchg
add
cmp
mov
or
pop
mov
mov
loopne
push
push
aaa
outs
push
adc
fwait
pop
sub
mov
mov
(bad)
nop
shl
sub
popa
mov
shl
inc
xor
rol
rcr
inc
cmp
xchg
outs
jp
pushf
sti
sar
push
cdq
scas
push
faddp
enter
adc
jno
push
into
adc
ins
pop
popa
shl
aad
xchg
xchg
sub
sbb
int3
ret
pop
(bad)
fwait
jg
jne
in
xlat
sbb
inc
ret
ficomp
mov
dec
mov
jmp
loop
cmp
outs
cmp
or
xor
add
sub
sub
push
xor
sub
push
jmp
(bad)
xchg
mov
ror
call
pop
mov
mov
sub
and
mov
push
pop
out
enter
inc
stos
clc
test
or
jmp
fwait
or
and
scas
in
ret
dec
and
push
retf
outs
es
cmps
xor
mov
or
push
mov
pop
fisttp
inc
fiadd
bound
iret
push
lahf
fdiv
or
out
sti
fild
xchg
lods
shl
dec
and
inc
xchg
xlat
fmul
cmp
and
inc
adc
xchg
push
mov
imul
and
and
aas
out
retf
dec
push
adc
popa
add
ror
imul
mov
cmp
ss
xlat
aam
(bad)
call
mov
sti
pop
cmps
loopne
js
imul
mov
sbb
jmp
mov
mov
(bad)
or
inc
out
daa
add
stc
sub
xor
retf
pop
aas
mov
test
mov
pop
mov
mov
in
inc
repnz
stc
dec
scas
push
jmp
and
mov
and
xchg
inc
and
test
mov
shl
ins
mov
push
loopne
movs
mov
(bad)
xlat
div
xchg
lods
call
aad
aaa
arpl
imul
push
out
mov
sbb
xchg
outs
call
cdq
or
lods
mov
cmps
mov
es
add
out
xchg
lahf
fidivr
jae
repnz
(bad)
leave
call
sti
test
mov
lea
leave
inc
sub
push
sub
or
out
ds
mov
jg
sub
cmps
sbb
retf
outs
and
jne
std
mov
js
ror
lock
add
sub
movs
stc
xchg
dec
addr16
xchg
je
adc
stos
std
mov
in
mov
leave
pop
cmp
sbb
add
push
test
test
push
adc
and
mov
repz
test
pop
add
dec
sbb
iret
xor
push
dec
stos
mov
cmp
sbb
int
in
cld
mov
xor
xor
out
stos
daa
inc
cmp
gs
sti
nop
mov
pop
(bad)
cmovp
push
jl
dec
xor
out
and
mov
sar
jb
sbb
and
or
leave
imul
or
stos
cmp
cmc
push
sub
mov
outs
sub
fmul
loope
xlat
adc
cmp
xchg
jle
ins
fwait
nop
cmp
inc
adc
sbb
mov
mov
push
mov
daa
dec
test
xchg
pop
aas
outs
stos
push
pop
pmaxub
fist
inc
jno
jbe
jge
loopne
xchg
leave
push
fist
shl
cmp
pop
ficomp
sub
jg
fstp
cmps
mov
mov
jbe
loopne
lods
jg
xlat
jae
out
mov
adc
pop
push
jg
in
retf
jb
add
ins
loope
in
(bad)
cld
or
retf
in
sub
pusha
stos
(bad)
sti
test
lds
inc
fstp
add
scas
mov
mov
mov
and
sub
mov
xor
sub
push
out
or
dec
ret
xrelease
cmps
lods
jle
pop
in
popf
aam
and
leave
imul
aaa
push
movs
js
pop
sub
fadd
or
lods
gs
inc
enter
fwait
jl
das
das
add
jne
lock
lea
push
fwait
icebp
push
je
psadbw
dec
mov
lods
stos
std
add
ss
xlat
cld
adc
xchg
xchg
shl
sbb
push
mov
aas
cwde
fcomp
test
push
aas
mov
push
cli
inc
dec
inc
add
or
inc
dec
cmp
add
pop
and
mov
or
dec
cld
and
mov
push
test
mov
push
add
jmp
call
xor
imul
int
mov
inc
xchg
test
test
jo
push
es
iret
mov
repnz
mov
jo
or
add
add
retf
(bad)
int3
xchg
mov
jae
or
jns
sbb
fcomp
jmp
dec
adc
iret
aas
ror
xchg
js
sbb
in
mov
fiadd
jno
mov
jle
sub
xchg
xor
jl
adc
aad
inc
xchg
icebp
retf
pusha
shr
sbb
sub
icebp
lahf
dec
(bad)
popf
add
xor
inc
imul
mov
retf
sti
inc
mov
or
inc
xchg
cmp
inc
add
mov
test
mov
mov
inc
scas
es
leave
xlat
or
sub
mov
aaa
or
push
test
dec
xchg
jns
fild
cmp
adc
push
ds
push
mov
mul
mov
out
cmp
hlt
daa
loopne
popf
call
fiadd
xor
enter
jb
push
jne
xchg
inc
idiv
jae
lock
hlt
xlat
xchg
into
ret
shl
pop
bsr
fmul
jg
sub
mov
mov
sbb
call
and
xor
ins
cmp
arpl
and
test
and
and
jmp
xor
sar
imul
and
into
adc
in
popf
mov
pop
rol
enter
push
xchg
push
test
mov
jle
aas
add
xor
xchg
dec
inc
mov
mov
adc
dec
lea
lds
or
sub
push
ja
jmp
inc
pop
dec
sub
js
jmp
nop
jmp
aad
pop
cmps
popa
imul
jecxz
push
scas
jp
jle
fidiv
out
js
cmc
enter
std
pushf
test
push
xchg
xcrypt-cbc
cmps
rcr
dec
imul
lea
inc
xor
mov
pop
in
push
ins
push
jbe
loope
sbb
or
sub
lock
iret
sar
bound
xor
addr16
xor
jbe
icebp
in
mov
push
aaa
xchg
iret
dec
or
add
jl
rcr
cmp
xchg
xchg
mov
xchg
sub
repz
mov
out
into
daa
leave
xchg
sub
fimul
bound
xchg
and
or
jmp
and
ss
arpl
cmc
inc
mov
jp
test
push
bound
xchg
outs
test
stc
sbb
mov
mov
enter
mov
pop
js
(bad)
push
pop
mov
cmc
xor
ins
outs
mov
mov
movs
mov
mov
cld
mov
jb
mov
and
or
mov
mov
sahf
sbb
inc
mov
addr16
adc
stos
in
dec
(bad)
gs
int3
ficom
adc
(bad)
fs
add
ror
outs
or
xchg
sbb
outs
adc
popf
cmp
and
pop
pop
loop
xchg
pop
div
jmp
iret
push
shl
cs
leave
dec
retf
mov
xchg
push
xchg
ja
push
dec
or
clc
push
pop
mov
cmps
in
dec
outs
jb
adc
ins
xchg
add
xchg
loopne
xchg
sbb
aad
inc
mov
int
or
push
mov
adc
clc
pop
sub
or
rol
pop
lods
adc
inc
enter
pop
pop
outs
ja
in
jp
jle
sub
imul
(bad)
out
and
xor
mov
dec
mov
aas
mov
repz
mov
sub
sub
sbb
ins
scas
or
popa
ret
mov
cld
aas
push
dec
jbe
push
nop
ins
fdiv
push
mov
les
pop
(bad)
fadd
xor
inc
pop
retf
pop
dec
and
pop
mov
lea
outs
aad
xchg
test
pushf
outs
add
cmc
aaa
xchg
inc
das
and
add
ins
rol
mov
push
xchg
dec
cmp
adc
inc
fstp
dec
stc
jmp
imul
pop
add
cmps
cmp
(bad)
adc
cmps
daa
pop
aas
stos
fiadd
(bad)
(bad)
xor
mov
jbe
pop
xchg
aam
xor
pop
xor
retf
adc
gs
repnz
mov
in
adc
cmp
cmp
sbb
xchg
ins
test
cmp
jl
mov
sar
fiadd
xchg
or
xchg
data16
ins
gs
stos
jae
pop
or
mov
in
jl
push
idiv
xor
test
or
add
push
jl
sub
push
add
lds
mov
jmp
xchg
mov
mov
mov
int
xchg
(bad)
cdq
pop
push
mov
xlat
mov
xchg
jbe
cmc
or
jg
movs
retf
loop
je
mov
ja
push
xor
mov
cmps
ja
cli
and
push
and
gs
adc
jmp
imul
sub
fdivr
xchg
pop
sub
or
imul
mov
rol
adc
mov
out
out
push
ins
retf
cmp
loop
fisub
xchg
mov
jbe
popf
mov
call
(bad)
xchg
jbe
mov
add
cmps
push
test
mov
movs
in
cmp
aaa
addr16
xchg
mov
mov
ins
fist
fsubr
cmp
pop
jg
sub
sbb
fs
dec
lea
clc
mov
mov
or
push
mul
dec
mov
push
xchg
adc
mov
retf
mov
popf
jbe
aam
ficomp
stc
push
mov
movs
cmp
loopne
(bad)
cmp
pop
sub
fs
int3
xor
out
lds
push
ss
sub
pop
add
repnz
repz
push
adc
mov
daa
cmp
imul
int
mov
push
jge
lea
xlat
mov
inc
retf
jmp
rcl
push
mov
add
imul
pop
gs
js
sahf
ror
mov
dec
imul
xchg
sub
mov
xchg
jmp
lahf
retf
xor
nop
pop
jge
in
mov
push
mov
push
(bad)
js
adc
mov
push
xchg
iret
adc
fdivr
xor
mov
cwde
not
mov
(bad)
fdivr
imul
ss
push
mov
(bad)
jmp
bound
pop
cld
dec
mov
retf
mov
jbe
adc
sub
stos
stos
pop
dec
inc
stos
adc
mov
lahf
js
xchg
(bad)
fidivr
xchg
mov
mov
ret
or
xor
je
lods
inc
cli
jb
jnp
xor
call
push
mov
mov
and
mov
sub
push
dec
xchg
push
pop
stc
ja
into
pop
iret
fstp
(bad)
imul
ds
pop
inc
cli
js
cmp
rol
xor
vmread
sbb
mov
inc
cld
lods
xor
jle
cmp
fbld
and
cmp
pop
aaa
es
add
call
into
xor
ins
xchg
mov
ds
and
xor
sbb
test
sbb
cmp
sbb
inc
xor
sti
leave
push
(bad)
fisubr
test
and
fsubr
add
or
push
jno
mov
stos
sub
sti
xor
call
(bad)
jmp
push
rcl
lods
and
shl
and
adc
mov
addr16
fdiv
leave
in
and
jb
pop
jecxz
sbb
sbb
or
xchg
cs
pop
or
push
in
movs
adc
and
and
fnsave
push
fneni(8087
xor
or
add
push
sbb
cmc
xor
ins
les
enter
jge
loopne
std
in
in
pop
mov
(bad)
mov
in
scas
push
loope
fsubr
arpl
mov
sbb
scas
cmp
out
fwait
ins
mov
loopne
repz
int
fisubr
arpl
popa
leave
inc
xchg
xchg
mov
fisubr
addr16
pop
xchg
jmp
xchg
jl
ds
mov
inc
pop
mov
imul
cdq
loopne
daa
add
xchg
ds
test
test
pushf
stc
cmp
aaa
pop
pop
mov
pushf
iret
add
pop
pop
dec
push
repz
xadd
(bad)
adc
jo
inc
in
je
mov
jo
clc
jno
lock
repnz
daa
add
or
adc
pop
test
sub
push
sahf
and
jns
jb
fisubr
sub
add
jno
xchg
out
shr
cmp
stos
test
inc
and
int3
inc
pop
test
dec
inc
xchg
mov
je
inc
in
shl
fwait
jno
or
cs
dec
cmp
mov
mov
inc
imul
jb
(bad)
jg
ins
cmp
stos
mov
pop
nop
lods
xchg
lock
jo
les
jns
inc
jae
push
xchg
sub
and
mov
jecxz
adc
adc
dec
add
les
rol
in
inc
jmp
xor
xchg
movs
adc
dec
cli
mov
imul
push
or
xchg
adc
xor
jae
dec
xor
and
retf
out
mov
jecxz
xchg
xor
cmp
push
loop
je
popf
mov
fwait
push
call
xchg
mov
int3
push
jno
pop
retf
push
dec
sbb
fdiv
mov
cmps
push
sub
inc
add
mov
retf
std
xchg
dec
mov
mov
fs
mov
cmp
push
(bad)
cs
xor
pop
fcom
jle
test
sbb
pop
xor
sbb
arpl
xchg
in
adc
mov
push
cdq
jb
xor
inc
sbb
bound
push
mov
fbstp
sub
xchg
gs
lods
dec
sbb
xchg
(bad)
pop
pop
cmp
into
in
movs
dec
bound
inc
dec
sub
les
cmp
in
dec
mov
fcomp
dec
inc
leave
push
cmp
pop
xchg
out
call
jmp
stos
push
jmp
rol
sbb
add
sti
popa
ja
mov
leave
jg
outs
cmp
int
cmp
cmp
jecxz
(bad)
pop
add
in
jne
dec
dec
stos
hlt
xchg
push
mov
int3
imul
mov
ds
xchg
inc
cs
cmps
test
outs
add
pushf
ins
push
call
mov
pop
push
jne
ins
mov
add
icebp
xor
out
cmps
mov
icebp
add
sub
mov
and
pop
dec
mov
adc
pusha
sub
mov
push
(bad)
in
int3
out
push
mov
pop
jbe
dec
cmp
or
cmp
dec
jbe
arpl
ins
cmp
or
fbld
rol
out
sbb
outs
mov
add
xchg
xchg
adc
jmp
adc
daa
mov
mov
jle
in
sar
pop
and
fild
imul
mov
popa
cwde
inc
test
repnz
inc
loope
movs
jg
js
dec
mov
retf
int
lea
movs
xor
mov
jmp
stos
imul
js
mov
(bad)
pop
jne
mov
aad
fstp
push
nop
xor
lea
inc
sub
add
sub
sub
repz
(bad)
xor
xchg
lds
mov
mov
cwde
loop
sahf
sbb
push
out
sub
fimul
lahf
cmp
xor
loop
push
out
and
sub
test
mov
stos
ja
into
stc
and
jge
ret
inc
and
cmp
stos
jecxz
cli
fsubr
out
xchg
inc
mov
push
xor
xchg
or
aas
(bad)
(bad)
out
push
adc
test
xor
pop
movs
adc
iret
cmp
ins
loope
shl
sbb
inc
ret
add
inc
dec
dec
movs
dec
inc
mov
and
jbe
retf
mov
in
call
push
int
jl
mov
movs
pop
push
dec
sub
mov
stos
pop
out
jl
xchg
push
adc
inc
sub
std
sub
mov
fist
dec
mov
sbb
and
(bad)
daa
mov
fucompp
jne
cwde
mov
mov
lahf
mov
das
or
jb
fwait
pop
in
ss
repnz
call
fs
adc
sahf
push
mov
test
dec
sahf
push
shr
push
bound
leave
mov
dec
xchg
push
imul
push
dec
add
inc
mov
inc
ins
jge
sar
arpl
fild
xchg
enter
mov
ja
fistp
jbe
push
xchg
in
stos
(bad)
jge
cmp
cmp
jnp
mov
pop
xor
inc
repnz
cld
pop
out
mul
mov
icebp
ds
arpl
fmul
inc
repz
pop
mov
out
fiadd
call
jae
loope
xchg
mov
outs
add
jo
or
inc
sub
push
cmp
sti
int3
mov
ret
stc
cld
pop
jno
pop
push
stos
stos
int3
adc
or
mov
clc
aaa
fucom
and
add
icebp
cmps
out
popf
repnz
dec
jo
mov
movs
inc
mov
out
icebp
in
sbb
fsub
outs
adc
fwait
cmp
lods
sub
sbb
lds
push
outs
pop
sbb
inc
fstp
call
out
inc
cld
div
and
into
xchg
dec
fistp
je
sub
add
je
mov
dec
iret
cmp
or
mov
mov
and
fst
mov
repz
cmp
xchg
adc
ret
fdivp
test
repnz
in
push
int3
pop
dec
xchg
inc
and
push
mov
cmp
sti
push
sbb
mov
jns
or
and
repz
inc
sbb
and
(bad)
sar
push
and
aam
jle
jmp
jb
cmp
adc
movs
ret
pop
cdq
ret
dec
cmp
xchg
ja
into
add
xor
dec
div
daa
push
or
push
iret
sbb
sti
out
mov
mov
or
pop
cmp
mov
scas
aas
fld
sub
test
retf
push
mov
adc
mov
bnd
sti
out
xor
mov
xchg
jecxz
pop
cmp
and
pop
ror
stos
cmp
movs
aad
jno
jnp
arpl
sub
sbb
dec
icebp
ds
ret
es
jae
xor
sub
out
aas
call
test
push
and
and
mov
mov
icebp
into
jmp
mov
dec
or
popa
and
xchg
xchg
pop
xor
sbb
mov
sub
fcmovne
lock
pop
pop
push
lea
or
sbb
pop
or
cmp
pusha
pop
dec
xlat
ss
pop
and
ins
pushf
or
data16
inc
push
jge
ds
xchg
jno
inc
pop
mov
jmp
fsubr
clc
stos
mov
movs
xchg
mov
xlat
push
xor
das
cmp
mov
aaa
out
popa
shl
loope
and
rol
push
cmps
mov
unpcklps
add
mov
movs
lock
xor
(bad)
adc
add
enter
nop
in
retf
dec
jmp
inc
fnsave
cmp
inc
mov
add
je
pushf
adc
push
mov
(bad)
call
(bad)
sti
xchg
sub
add
popa
stc
xchg
sub
adc
mov
or
inc
inc
jl
cld
mov
xchg
jb
call
xchg
or
push
pop
cmp
repnz
fiadd
stc
mov
mov
es
cmc
icebp
cli
push
sub
outs
xchg
sub
fist
popf
xor
adc
lahf
cli
repz
add
icebp
das
ror
in
pusha
mov
cmc
test
movs
mov
sbb
hlt
outs
mov
jmp
mov
(bad)
aas
cwde
xchg
xor
pop
mov
jmp
adc
leave
loope
cld
(bad)
les
mov
xchg
xchg
dec
mov
dec
repnz
(bad)
jae
es
neg
sbb
repz
clc
sub
mov
dec
jae
or
jmp
xchg
loop
adc
test
ins
mov
push
cmp
and
(bad)
jl
cmps
add
sub
and
jle
add
push
push
pop
int3
pop
shl
mov
xchg
imul
out
fsubp
dec
sahf
shl
(bad)
mov
adc
add
lods
lea
pop
push
mov
cs
and
movs
dec
xchg
mov
scas
rcl
mov
adc
lahf
mov
mov
fs
test
lea
mov
out
push
sti
ret
jno
mov
cmps
cli
les
call
lods
repnz
mov
pop
mov
jae
sahf
jno
or
pop
xchg
mov
cs
or
lds
repnz
cdq
adc
pop
inc
mov
mov
jge
ss
mov
movs
aam
sbb
xchg
xchg
sub
addr16
add
(bad)
push
mov
or
jne
xchg
out
push
mov
inc
jns
cmp
pop
mov
sub
xchg
adc
dec
lods
std
(bad)
into
mul
gs
popa
inc
jbe
ret
inc
or
cmp
pop
ficom
cld
jo
pop
add
scas
jbe
add
mov
dec
sbb
sbb
in
loop
popa
(bad)
xchg
mov
jmp
outs
cmc
out
xlat
or
int3
imul
mov
sub
call
mov
test
mov
loop
push
xchg
dec
mov
push
sub
cmps
int
sar
mov
stos
xchg
push
loopne
mov
dec
sub
cmps
(bad)
mov
jmp
inc
mov
cmp
jae
pop
and
sbb
aam
outs
arpl
leave
mov
xor
(bad)
cmp
fimul
pop
jmp
ins
mov
dec
nop
push
cmp
fild
cmc
xchg
push
ret
and
sub
mov
stc
ss
ins
(bad)
fisttp
xchg
and
call
clc
mov
fiadd
cmp
(bad)
cmp
sub
sub
bound
call
xor
(bad)
sub
cdq
fs
jns
adc
movs
xor
ja
push
std
ds
out
scas
movs
jo
ret
mov
xchg
shl
in
dec
xor
popf
sub
and
and
lock
push
fstp
cmp
test
xchg
popa
minps
fsubrp
cmp
add
push
cli
call
inc
test
xchg
adc
movs
shl
xor
les
fadd
lock
lea
leave
dec
push
fucom
fwait
xchg
or
dec
sub
div
popa
sbb
mov
sub
push
push
push
dec
loop
and
fwait
movs
and
push
jmp
jmp
jnp
clc
gs
pop
not
lods
stos
and
jmp
push
cmp
test
push
and
call
xchg
(bad)
jg
(bad)
jmp
sbb
sti
jae
cmps
push
movs
and
pushf
inc
or
sbb
inc
rcr
jge
sahf
cmp
les
lock
ins
and
inc
push
cwde
int3
dec
mov
inc
mov
inc
jb
mov
js
fidivr
sbb
retf
inc
sbb
outs
aad
mov
pop
cmp
push
mov
xchg
popa
xor
into
sub
out
mov
adc
gs
dec
scas
stc
inc
loopne
cs
adc
ins
jnp
repnz
sbb
add
add
fnstsw
ins
mov
mov
xchg
pop
idiv
fnsave
inc
cmp
in
jp
stos
jl
test
call
or
loop
ss
cmp
dec
mov
jl
mov
in
cmps
add
nop
retf
les
stos
in
into
movs
sbb
iret
sub
js
and
mov
xchg
(bad)
jnp
push
cmps
jmp
pop
fisttp
jmp
jle
je
xchg
mov
dec
call
ss
inc
clc
or
les
pop
or
push
and
repz
cwde
or
fld
jb
in
shl
stc
lods
aam
dec
fwait
test
movs
jb
or
adc
sbb
push
int
aas
or
mov
push
pop
jne
dec
cmp
mov
jno
shl
jecxz
and
dec
bound
ret
xchg
pop
ins
adc
mov
cdq
arpl
sub
mov
(bad)
(bad)
and
aad
jl
sub
ja
aas
dec
sbb
push
sub
pushf
ret
pop
enter
aaa
test
loop
mov
or
pop
fsubr
add
enter
jne
mov
xor
arpl
bts
imul
add
ja
(bad)
fucomi
mov
mov
ins
scas
call
lock
mov
pop
mov
or
dec
fild
adc
test
(bad)
sbb
(bad)
cmc
rcl
mov
mov
aam
mov
(bad)
imul
push
out
mov
scas
xchg
dec
or
aad
dec
jp
sti
mov
xchg
outs
imul
sub
or
inc
ror
enter
and
cwde
mov
retf
aam
loop
jne
std
adc
mov
xchg
fwait
rep
pop
mov
or
push
fs
cmp
sub
fild
mov
hlt
nop
xchg
dec
retf
xor
cmc
std
mov
jmp
inc
ins
sub
loop
cmp
iret
xlat
inc
das
xor
std
inc
sbb
adc
in
add
lock
sub
jno
jno
imul
push
addr16
cmp
xor
inc
mov
pop
stos
jmp
push
lds
in
jle
cwde
imul
and
adc
stos
shl
adc
loop
bound
push
popa
stos
cdq
fnstcw
movs
out
push
or
jge
or
add
enterw
lahf
sub
sub
sbb
ffree
enter
popf
jge
sbb
add
dec
mov
sub
and
fld
sbb
sbb
pop
imul
and
adc
xor
adc
adc
ins
jp
inc
jno
mov
cmps
in
aaa
inc
cmp
jp
pushf
and
repnz
inc
and
adc
jmp
rol
cli
dec
inc
retf
mov
and
popa
mov
retf
pop
loop
call
js
data16
and
xor
das
in
addr16
mov
cmp
pop
ins
fst
out
pop
jmp
push
ss
mov
retf
cmp
enter
cmp
mov
ja
test
shr
inc
push
dec
mov
aaa
or
in
mov
inc
and
sbb
mov
dec
lahf
sbb
cmc
popf
fsubr
jecxz
outs
ror
loopne
cli
sub
fsubr
inc
jle
mov
push
push
ds
dec
push
cmps
xchg
sbb
xor
xchg
xor
cmp
jg
mov
sub
rcr
fdivr
dec
adc
add
cmp
dec
ret
es
dec
stc
push
jns
je
aad
mov
pop
and
shr
into
popa
out
in
nop
mov
nop
int
jl
xchg
neg
or
or
pop
out
jle
shr
repnz
scas
push
cmp
mov
jne
pop
cmp
jo
jle
fistp
cmc
adc
mov
je
call
jmp
mov
loop
lock
popa
ins
js
sub
sub
pop
sbb
dec
jge
leave
shl
out
xor
imul
out
mov
sbb
pop
pop
mov
sub
arpl
mov
xor
jb
or
rol
jb
mov
dec
xchg
cmc
xchg
sub
xchg
scas
adc
ret
or
cdq
mov
into
pop
or
sub
test
aaa
(bad)
pop
and
lea
add
mov
mov
jle
push
pop
and
xchg
shl
inc
sbb
xor
push
loopne
push
mov
test
outs
call
push
xchg
sbb
or
lahf
je
(bad)
call
clc
cmp
repz
js
ins
and
test
mov
xchg
dec
gs
int
in
(bad)
adc
mov
stos
sub
ret
add
jle
js
jmp
gs
sahf
mov
dec
out
fst
movs
cdq
and
arpl
loope
shr
jmpw
iret
lods
pop
ficom
mov
cs
popf
dec
or
je
xor
fwait
or
jmp
das
and
inc
adc
jnp
adc
cdq
xchg
push
jmp
setg
mov
fimul
xor
repnz
mov
out
inc
jns
jae
mov
dec
jnp
out
dec
lds
or
daa
daa
sbb
add
pop
sub
xlat
and
push
cli
sub
jnp
aam
jb
retf
cs
push
sbb
cwde
push
add
push
jecxz
cmps
mov
pusha
add
test
xor
or
inc
cld
inc
aas
jns
in
mov
cmp
mov
sbb
das
fidivr
xor
(bad)
dec
cmp
sub
mov
dec
test
cmp
pop
cs
neg
inc
xor
mov
and
fistp
push
lahf
and
xchg
sbb
mov
and
xchg
aad
pop
sbb
out
add
dec
out
dec
std
pop
mov
popa
popa
loopne
xchg
add
shl
mov
fimul
aaa
cmps
sar
outs
mov
not
aam
pop
push
pop
mov
dec
lea
in
add
sti
jb
stos
cdq
pop
jae
mov
rcl
pop
jl
js
gs
pop
ss
jl
mov
cmp
es
pop
jmp
lods
and
xor
mov
mov
push
dec
inc
in
ror
ret
arpl
adc
mov
les
neg
aam
sbb
cmp
mov
cmps
out
push
ins
jmp
cmp
ret
add
(bad)
jbe
ret
lods
dec
adc
cmp
sbb
xchg
lds
jp
sub
xchg
pop
cmp
out
push
or
sub
sub
xchg
imul
mov
sbb
push
or
mov
sbb
pmulhuw
pop
pop
inc
cmp
jbe
add
add
sti
ins
(bad)
and
jle
mov
jbe
and
cld
jmp
pop
inc
out
mov
mov
dec
mov
mov
mov
and
or
mov
sbb
jl
dec
xchg
loopne
add
mov
jg
repnz
xor
push
mov
repnz
dec
ror
bound
jge
aam
call
lock
inc
scas
push
mov
cld
pop
popf
pushf
fld
adc
mov
pop
sahf
push
hlt
adc
mov
or
mov
push
xor
push
cdq
fisubr
lock
jae
shr
pop
mov
xchg
pop
dec
or
xor
jmp
in
xchg
cmp
adc
mov
mov
(bad)
mov
dec
xchg
out
js
loope
fisubr
iret
or
cmps
mov
pushf
xor
(bad)
out
sahf
test
aas
ror
pop
adc
add
sar
hlt
cmp
adc
sbb
std
mov
fcmovne
sbb
out
xor
movs
pop
jmp
inc
test
jbe
jb
jnp
push
ja
adc
call
add
pop
add
xchg
repz
in
or
ins
into
mov
aas
aad
mov
jle
sbb
outs
mov
inc
add
sbb
jb
js
popf
xor
inc
jg
lahf
mov
popa
dec
or
adc
(bad)
loop
dec
les
or
push
and
inc
dec
retf
movs
unpckhps
out
in
popa
out
aad
retf
jae
cld
sbb
bound
xor
fsub
push
and
pop
xor
stos
xor
stos
xchg
inc
mov
pusha
xor
or
cs
fsubr
loope
lods
data16
mov
je
aas
push
inc
xchg
sti
stos
xchg
rol
adc
cli
retf
(bad)
mov
jmp
jnp
pop
(bad)
test
and
(bad)
dec
loopne
ins
cmc
les
adc
add
xchg
aad
and
cs
add
mov
add
mov
pop
sbb
jmp
lock
retf
push
imul
sub
mov
xchg
xchg
test
jno
into
shr
inc
dec
push
jp
fs
imul
lock
mov
test
sub
push
push
jmp
aaa
fnsave
push
repnz
popf
imul
mov
inc
mov
lods
mov
jmp
jge
bound
mov
inc
loopne
iret
jae
jg
cdq
repz
xchg
call
stc
outs
dec
ja
jo
sub
mov
cmp
rcl
(bad)
or
dec
mov
ins
outs
stc
jbe
jns
push
adc
sub
fsub
mul
pop
add
es
int3
les
aad
jae
in
fbld
jmp
mov
sub
mov
dec
stc
call
mov
aas
cmp
inc
stc
mov
and
inc
cld
in
scas
or
test
adc
repnz
nop
stos
cmp
(bad)
jmp
arpl
push
push
cmps
aam
repz
in
pop
repz
imul
je
or
and
sub
cmp
das
push
mov
inc
repnz
mov
xchg
mov
xchg
sbb
jne
mov
stos
mov
scas
fist
lods
movs
xor
repnz
pop
jmp
cmp
es
push
pop
ss
jmp
int3
in
and
push
mov
or
sbb
hlt
ins
cmp
mov
push
ja
popa
fnstcw
icebp
adc
jmp
push
ds
enter
add
mov
jle
idiv
xor
fwait
cld
ss
dec
cmp
dec
dec
adc
clc
fcmovu
push
xor
pop
and
or
adc
pop
dec
xor
mov
xchg
je
sbb
push
cmp
test
inc
aaa
and
retf
or
ja
or
push
(bad)
lahf
xlat
lods
aas
retf
cmps
xchg
sub
jnp
sahf
rcr
xchg
push
add
fistp
push
into
mov
mov
inc
xchg
dec
stos
in
push
sub
je
mov
pop
add
push
add
add
in
dec
sbb
dec
int3
stos
mov
jne
pop
mov
mov
stos
bound
mov
cmps
aas
fsub
adc
lods
ds
cmp
push
jmp
lods
fprem1
in
dec
fnstcw
mov
xlat
jle
lahf
cmc
and
bound
mov
cmc
mov
loop
fs
icebp
setg
fiadd
cmp
das
mov
mov
movs
mov
mov
mov
pop
pop
in
xor
popf
retf
in
mov
sbb
ret
bound
aaa
sub
jbe
ret
jb
sub
ret
xchg
xchg
mov
or
test
repnz
mov
addr16
fld
pop
stos
data16
mov
add
rol
rol
mov
sub
cmps
sub
or
call
repnz
mov
rol
xor
inc
add
or
out
sub
dec
mov
add
and
sub
pop
adc
cwde
test
mov
fs
movs
call
add
pusha
pop
(bad)
push
es
icebp
ja
fsub
call
mov
cmps
push
jg
and
dec
and
xchg
mov
mov
xchg
and
retf
stc
push
jbe
icebp
mov
mov
or
aam
inc
retf
leave
sub
sahf
mov
xchg
imul
push
js
jo
mov
sbb
xchg
sub
out
ds
sub
gs
xor
inc
sub
shr
mov
inc
xor
cmps
loope
push
movs
fwait
stos
or
test
push
stc
mov
int3
fcom
addr16
xor
xor
ja
cmp
jg
sbb
fisubr
pop
mov
push
adc
pop
loopne
jle
push
das
stc
jne
out
mov
add
aam
dec
push
sub
push
and
xchg
sbb
aas
adc
jnp
std
std
push
jno
and
mov
sbb
dec
xchg
sub
iret
cmp
les
pop
and
ins
enter
xchg
lahf
xchg
ret
call
mov
mov
dec
jnp
test
in
adc
adc
fild
imul
dec
push
xor
movs
mov
sbb
sahf
out
scas
sub
(bad)
in
es
cs
mov
lods
ret
fidiv
push
jo
add
(bad)
sbb
push
sub
jl
xchg
loopne
scas
sbb
and
test
jae
fild
adc
stos
leave
fstp
mov
jmp
es
fidiv
sbb
fwait
mov
ins
inc
push
mov
or
mov
mov
cmp
repnz
and
push
mov
cmp
push
int
aam
fwait
mov
cmp
sub
(bad)
jne
jmp
call
jle
push
in
aad
jbe
sub
enter
inc
cmc
adc
imul
stos
(bad)
dec
and
data16
and
add
ins
sbb
fisttp
sub
pusha
inc
dec
sahf
sbb
test
stc
rcl
call
jb
cmp
or
mov
aam
test
pop
push
ret
out
push
sbb
and
xlat
fisttp
popa
or
pop
jmp
or
pop
pop
enter
push
movs
or
pop
mov
mov
pop
hlt
xchg
aaa
test
sbb
(bad)
xor
jb
pop
mov
bound
sub
pop
ss
cmp
adc
out
popa
mov
test
ins
scas
pop
dec
adc
mov
add
imul
mov
lahf
push
or
hlt
add
xchg
cs
jg
adc
add
popf
iret
ins
test
fwait
inc
sub
xor
cld
popf
pop
js
test
jo
mov
ffreep
js
xchg
iret
cwde
in
cmps
jbe
repz
xchg
je
stos
iret
mov
mov
mov
out
das
jecxz
xchg
loope
xor
mov
cmp
in
setbe
or
mov
cmps
cdq
pop
push
jmp
and
test
loop
inc
add
dec
push
dec
fisubr
pusha
sbb
(bad)
xchg
inc
stc
adc
in
mov
outs
jmp
das
dec
sbb
lods
out
inc
icebp
xchg
cwde
cmp
aaa
mov
sbb
jecxz
cmp
int
xor
nop
xor
pop
or
mov
ins
xchg
pop
sahf
mov
dec
pop
mov
call
out
sbb
and
bound
and
or
fstp
call
cmp
xor
pop
popa
add
rcl
lea
(bad)
jl
enter
push
add
mov
pop
cmp
fist
stos
retf
ret
jb
push
enter
xchg
dec
xchg
scas
outs
gs
push
mov
sub
cmp
pop
repz
pop
cwde
(bad)
mov
stos
sar
inc
addr16
neg
and
test
rcr
ret
add
shl
into
xchg
or
xchg
mov
cmp
xor
mov
mul
lds
mov
mov
(bad)
out
mov
cmc
dec
xor
lea
cmps
les
mov
fldenv
or
push
hlt
xchg
mov
aam
fist
mov
fild
push
mov
inc
stc
shl
bound
sub
repnz
push
inc
jae
dec
gs
add
mov
push
sub
imul
jp
daa
mov
dec
xlat
sbb
push
lahf
add
scas
and
cmp
inc
adc
xchg
das
(bad)
pop
inc
add
lods
pop
rol
jne
mov
cdq
sbb
or
mov
ret
(bad)
cmp
lock
xchg
and
push
push
(bad)
adc
out
xchg
mov
test
jg
aad
jae
ret
retf
adc
xchg
push
out
(bad)
xor
adc
lock
push
pop
sbb
mov
cli
push
jmp
dec
cwde
jne
aaa
sub
popa
imul
add
lds
adc
add
loopne
scas
retf
sbb
mov
mov
outs
and
lds
or
pop
and
xchg
xchg
fs
sbb
shl
jae
les
and
bound
jp
sub
icebp
dec
sub
or
push
clc
pop
pop
inc
and
hlt
(bad)
mov
or
rcr
mov
(bad)
xlat
add
add
lock
movs
sub
data16
cmp
pop
lods
add
int3
in
pop
push
popa
data16
push
mov
(bad)
cmps
arpl
std
mov
cmc
xor
popa
xlat
xchg
cmp
pop
clc
add
pop
frstor
jbe
loop
cmps
and
bound
adc
rcr
mov
push
test
push
es
movs
inc
aad
mov
inc
cli
dec
dec
fidivr
mov
sub
test
lahf
adc
or
jmp
inc
lock
add
sub
loope
rcr
popa
mov
movaps
fs
sub
(bad)
dec
fld
push
dec
jmp
outs
mov
cmps
dec
(bad)
frndint
mov
push
jmp
lods
(bad)
div
or
cli
movs
out
movs
push
inc
or
test
inc
into
loope
mov
cld
sbb
jmp
pop
xlat
scas
cmps
xor
mov
ror
push
jge
imul
adc
xor
inc
out
outs
and
jl
in
leave
and
inc
aam
test
mov
sub
movs
inc
sub
push
mov
xor
sbb
daa
mov
in
out
xchg
out
cld
(bad)
fadd
js
and
or
xchg
push
ins
in
push
cdq
shl
inc
lods
mov
jno
popa
adc
push
add
dec
cli
inc
test
repnz
or
jae
in
sbb
add
inc
xor
out
inc
ret
mov
(bad)
xchg
pop
jle
and
std
in
xchg
ret
test
lea
jp
push
popf
cmp
div
sti
call
mov
out
lock
das
(bad)
sub
pop
into
push
ja
test
mov
push
out
mov
shr
and
mov
xor
arpl
push
inc
mov
or
jbe
retf
pusha
jecxz
or
in
lahf
push
jmp
and
imul
pop
rol
inc
xchg
out
iret
push
sbb
in
rol
ficom
call
pop
pushw
cmc
ror
leave
inc
fcmovnbe
jae
ins
ins
aam
jbe
sub
addr16
add
fs
inc
push
xor
data16
lods
popf
pop
(bad)
mov
sbb
mov
ins
sub
out
loop
push
mov
cld
or
mov
inc
add
xlat
mov
repnz
rol
popa
adc
sub
mov
or
cmc
push
jne
pushf
(bad)
jae
adc
and
pop
lods
jl
(bad)
(bad)
xchg
out
fisubr
dec
push
cmp
cmp
xor
arpl
call
xchg
xchg
or
icebp
aaa
les
sub
pop
outs
xor
mov
stos
add
push
(bad)
dec
cmc
leave
pop
mov
lahf
aas
jb
push
sbb
enter
idiv
xor
push
cli
push
jg
push
jecxz
sbb
jno
push
in
sub
dec
sub
in
jp
xchg
mov
sub
cmp
or
fstp
jg
leave
mov
(bad)
or
imul
(bad)
jecxz
and
or
bound
rcr
scas
xchg
ficom
std
cmp
and
pop
addr16
std
mov
shl
pushf
xor
and
ins
push
stc
bound
rcr
pop
pop
cli
xchg
pop
sub
mov
pop
mov
jae
mov
mov
addr16
ds
cmc
mov
mov
dec
mov
pop
(bad)
pop
loopne
xchg
gs
stos
pop
or
or
fs
sbb
mov
in
dec
add
push
test
add
mov
xor
nop
adc
or
into
push
sbb
jmp
(bad)
in
nop
sbb
es
ins
and
sub
loopne
push
xchg
and
arpl
pusha
repnz
ror
inc
push
ins
shl
or
in
fwait
shl
fs
xor
fisttp
push
and
mov
fwait
hlt
test
sbb
outs
or
mov
or
jae
and
bound
sahf
mov
mov
and
lods
adc
outs
cmp
mov
loop
fsub
iret
dec
jns
inc
mov
sub
xor
xchg
mov
les
or
mov
mov
rcl
fcom
out
shrd
lea
push
loopne
add
sub
mov
mov
or
pushf
out
outs
test
enter
or
jge
repnz
jg
xchg
rol
cld
push
add
pushw
rol
push
mov
cld
jge
scas
mov
movs
hlt
jmp
rol
xchg
outs
mov
std
pop
scas
into
loop
call
mov
hlt
sbb
or
vpackuswb
dec
out
sbb
stc
cwde
loopne
int3
in
popa
into
imul
into
sub
ffreep
lahf
mov
jmp
sbb
mov
pop
cmp
test
in
push
sbb
mov
jb
(bad)
out
fdiv
cmp
push
out
ins
adc
adc
arpl
jns
ds
jle
bound
cmps
mov
rcl
jae
retf
pop
cmp
dec
loop
xchg
cmp
push
jmp
sub
mov
mov
add
sub
inc
mov
rcr
dec
xor
enter
jmp
pop
mov
jno
call
sti
and
xor
mov
mov
mov
mov
pop
xor
aas
mov
and
popa
inc
gs
fs
ss
jmp
sub
rcr
aaa
jl
rcr
jnp
cmp
scas
xchg
(bad)
mov
jmp
mov
push
out
mov
cli
rcl
cmp
jns
pop
pop
dec
xor
out
jne
lea
inc
outs
jbe
mov
outs
mov
loope
and
cs
pop
rcl
aaa
imul
jge
fadd
adc
popa
imul
addr16
retf
(bad)
out
imul
sub
jnp
outs
jl
sahf
std
xchg
pop
pop
mov
jge
cmps
in
daa
ins
(bad)
imul
in
sub
inc
pushf
popa
xchg
or
cmps
call
mov
repnz
pop
mov
mov
je
aam
stc
xchg
iret
sti
int
jnp
pop
push
jae
shr
outs
out
int3
xchg
inc
fcomp
cmp
scas
dec
(bad)
outs
and
jb
in
mov
mov
std
mov
cmp
or
rcr
stc
xor
add
adc
out
retf
xor
pop
popf
mov
pusha
dec
mov
std
out
and
or
adc
mov
in
ror
mov
push
or
cli
inc
and
sbb
jno
daa
pop
mov
lahf
xchg
push
jnp
mov
inc
jmp
mov
imul
shr
cmp
xchg
cmc
ret
(bad)
adc
dec
daa
test
add
jg
aaa
push
(bad)
pusha
mov
cmp
mov
jecxz
ret
in
jmp
xchg
leave
xchg
sub
cmp
cmp
xchg
rol
pop
loopne
outs
repnz
sbb
cli
pop
sub
test
mov
(bad)
hlt
ret
mov
iret
(bad)
call
repnz
nop
scas
jns
in
xchg
xor
add
xlat
loope
sub
stos
jmp
xchg
rcr
mov
jo
in
cmp
in
xor
dec
test
js
shl
xchg
mov
aas
jg
cmps
pop
inc
adc
push
add
adc
cmp
lea
jno
mov
and
(bad)
retf
jnp
loope
mov
cli
cmc
ss
inc
jns
sbb
cwde
pop
(bad)
repz
mov
das
mov
hlt
jecxz
mov
add
out
add
sub
cwde
mov
rcr
(bad)
adc
pop
xchg
xchg
or
fwait
add
repz
stc
or
lods
ss
sbb
aaa
aam
std
xchg
in
rol
sbb
push
retf
dec
in
xor
push
ror
adc
shl
sub
pop
xchg
mov
sbb
xchg
inc
movs
mov
adc
stos
loop
faddp
test
jl
cmp
mov
xchg
ins
add
push
sub
bound
sbb
lods
or
mov
and
push
and
ds
popf
pop
sbb
rep
and
and
out
xlat
mov
ucomiss
adc
ror
outs
jg
cwde
add
or
mov
or
(bad)
movs
icebp
repnz
pop
ret
adc
movs
pop
nop
cmp
and
repz
inc
cmc
sub
xor
ins
adc
imul
cmp
dec
cmc
cmp
fsubrp
or
mov
pop
pusha
xor
add
retf
packsswb
js
call
push
xchg
cld
dec
out
mov
and
ja
mov
xchg
test
mov
xor
xor
push
ins
mov
popa
aam
mov
ss
cli
movs
imul
dec
sbb
xchg
mov
les
pop
lods
add
mov
sbb
idiv
inc
fldz
pop
push
enter
sub
call
cmp
xor
pop
ror
test
add
add
cmp
mov
call
test
add
sbb
pushf
pop
out
gs
pop
add
dec
fadd
and
xchg
sbb
push
inc
fadd
mov
cmc
jnp
and
and
push
jecxz
mov
out
push
aas
push
push
jne
(bad)
xlat
call
ret
lahf
cmps
pusha
mov
dec
stos
pop
dec
idiv
inc
push
add
and
(bad)
jge
outs
pop
mov
xor
mov
sahf
loopne
iret
leave
fsub
das
xor
gs
mov
ror
leave
shl
jge
cmps
dec
push
inc
loopne
popf
inc
dec
push
fsub
lods
pop
scas
je
out
repnz
mov
push
adc
into
jbe
mov
mov
xor
mov
je
push
mov
out
mov
add
push
(bad)
cmp
ins
pop
inc
bound
add
in
fsub
mov
test
outs
fnstsw
xchg
jo
mul
pushf
and
(bad)
mov
ds
or
xor
adc
popa
mov
pop
mov
mov
xor
in
and
and
push
ja
and
dec
mov
mov
pusha
or
dec
mov
mov
outs
pop
sbb
test
js
jnp
mov
jmp
mov
int3
fs
push
pop
dec
dec
add
add
dec
xchg
int
jecxz
dec
mov
xlat
jns
mov
mov
sbb
fdivr
adc
add
inc
ret
retf
not
add
dec
lods
out
imul
fs
sub
enter
popf
adc
sub
cmp
es
jmp
scas
fstp
or
es
add
cmp
mov
fidiv
fstp
retf
rcl
lock
fisubr
jmp
loope
push
cmp
push
in
inc
adc
in
mov
(bad)
call
pop
dec
fisubr
sbb
icebp
ss
mov
bound
sahf
js
push
(bad)
jno
test
repnz
dec
sub
sti
es
stos
push
out
dec
jne
scas
scas
retf
in
scas
ja
iret
fld
dec
push
aas
int3
lods
mov
cwde
ret
xor
cli
add
aas
inc
sub
mov
inc
adc
aam
addr16
sub
call
gs
aad
and
inc
movhps
mov
jge
xchg
repnz
push
sub
push
jp
pusha
pop
imul
addr16
add
sbb
xchg
mov
cmp
xor
and
jecxz
cli
dec
mov
sbb
jp
sbb
and
sub
outs
and
lahf
aad
push
(bad)
call
and
ret
(bad)
test
pushf
call
xor
enter
loopne
inc
out
lods
mov
popf
sub
or
popa
jo
xchg
scas
int3
xor
inc
mov
push
xchg
xchg
nop
in
cmp
scas
add
pop
sub
xor
dec
scas
loop
dec
mov
and
cdq
sub
push
call
xlat
cmps
sbb
std
inc
jg
adc
push
add
xchg
test
das
sahf
nop
les
cdq
test
scas
sbb
push
into
dec
mov
pop
xchg
iret
pop
nop
iret
push
icebp
scas
stos
jae
js
cmp
movs
xor
mov
cld
pushf
jb
popa
cmp
and
test
mov
test
mov
fdivr
(bad)
mov
fdiv
in
fwait
daa
cmp
int
mov
add
pop
(bad)
push
adc
aad
and
push
scas
push
or
mov
aaa
dec
jmp
and
outs
cmps
cli
mov
lahf
retf
mov
add
jno
pushf
pushf
rol
aaa
imul
push
cs
dec
or
push
dec
add
mov
sub
scas
int3
xchg
fcmovbe
test
repnz
sahf
aas
mov
retf
sub
push
int
call
or
mov
pop
data16
and
aad
push
pusha
cmc
(bad)
pusha
lds
hlt
inc
(bad)
cs
ja
push
out
jg
dec
or
outs
inc
fwait
dec
mov
xchg
and
inc
dec
cmps
dec
sub
add
jae
dec
and
inc
cmps
and
mov
sbb
loopne
xor
hlt
push
aas
mov
ror
loope
sbb
cdq
ret
pop
xor
shl
xor
out
dec
mov
ins
arpl
pusha
or
sub
loop
jno
inc
rol
call
hlt
xor
into
call
xor
movs
jg
fidiv
pop
pop
jl
int3
loope
sbb
sbb
(bad)
out
pop
mov
jae
jo
movs
xchg
in
xchg
ins
test
xchg
movs
les
add
fmul
or
sub
js
pop
test
nop
pop
sub
scas
mov
imul
xchg
sub
pop
movs
dec
pushf
mov
(bad)
int
cmp
cmp
mov
mov
mov
mov
cli
in
pop
cmps
sbb
or
in
int3
jle
pop
retf
fnstenv
in
xchg
sbb
or
hlt
lock
int
shr
sbb
fild
enter
cwde
jbe
xor
add
xchg
rcl
inc
repnz
jmp
loope
pop
call
scas
rcl
add
aaa
push
pop
xor
in
pop
xchg
mov
and
cmps
push
xchg
push
adc
lods
pop
out
aaa
xor
mov
jne
add
and
ins
add
inc
mov
call
dec
cwde
fwait
adc
lahf
cmp
pop
jp
ins
jne
mov
gs
mov
lods
mov
xchg
or
stos
stos
add
dec
xchg
mov
add
xor
scas
mov
das
test
mov
push
data16
pop
mov
ins
ret
add
hlt
lods
(bad)
cld
movs
mov
inc
dec
mov
jno
or
dec
movs
sbb
mov
cld
xor
retf
pushf
(bad)
push
push
inc
sub
mov
jp
cmps
retf
adc
push
icebp
jmp
inc
pop
cmps
pop
repz
jge
cmp
jecxz
or
adc
ins
pop
rol
mov
les
sar
popf
sub
jo
jae
sbb
shl
(bad)
not
sub
clc
aas
bound
mov
sub
cld
sub
cmp
xor
not
and
xor
dec
fidiv
pop
pop
hlt
or
repnz
mov
sti
popa
jnp
out
ss
adc
or
not
sub
or
sbb
jnp
or
adc
adc
mov
adc
shl
mov
add
mov
ret
add
in
mov
push
es
mov
repnz
xor
mov
gs
dec
jo
xchg
cmp
es
cmps
ins
pop
out
mov
(bad)
mov
or
lods
lea
or
je
out
mov
fild
mov
mov
and
ds
mov
xor
xor
aad
mov
dec
les
jmp
pop
xchg
icebp
jmp
mov
and
fucomp
cmp
push
scas
sub
mov
or
adc
test
xchg
xchg
popf
mov
dec
inc
clc
jp
dec
lods
dec
mov
mov
rol
in
xchg
xor
xchg
xchg
pop
(bad)
cmps
and
sub
pop
mov
xchg
ret
enter
outs
inc
hlt
mov
cmp
sbb
dec
or
xchg
push
gs
jp
mov
dec
(bad)
lock
loop
inc
call
jns
adc
add
xor
pop
rcr
mov
jp
movs
data16
lahf
xchg
mov
sbb
les
les
dec
gs
aaa
rol
mov
(bad)
frstor
cli
sub
xchg
(bad)
sahf
mov
pop
jecxz
add
outs
cwde
cmp
lods
in
xchg
inc
xchg
sub
ins
in
call
jle
lea
pop
ror
test
fnsave
sbb
adc
es
cmps
call
inc
dec
adc
mov
push
pusha
jp
jne
out
sub
mov
ds
mov
gs
inc
cmps
ins
stos
enter
(bad)
loopne
cmp
push
mov
xchg
jae
(bad)
sar
push
enter
pop
lods
or
movs
nop
lea
mov
xchg
push
jl
mov
aad
loope
sub
(bad)
mov
add
push
fld
ss
test
dec
sbb
jmp
lods
test
clc
sbb
and
sub
(bad)
sti
div
ror
or
sbb
shl
xchg
call
jle
xor
in
arpl
add
clc
fsub
in
(bad)
cli
shr
inc
cwde
ins
mov
imul
or
mov
je
leave
sbb
mov
pop
clc
cmp
add
hlt
ja
fidivr
xchg
inc
or
jmp
out
add
dec
stos
shl
fwait
sbb
inc
sti
inc
scas
scas
jo
arpl
jb
inc
clc
test
pop
mul
push
add
sbb
hlt
test
iret
retf
fwait
xor
icebp
sbb
sub
ja
cmp
scas
aam
retf
int
jp
add
push
jg
jecxz
js
gs
sub
and
int3
jo
dec
pushf
div
fistp
add
jmp
imul
je
jl
push
in
(bad)
sub
xchg
dec
into
test
lods
aam
ss
lock
mov
scas
std
add
sbb
(bad)
loopne
xchg
lock
xor
shl
mov
adc
bound
jg
mov
(bad)
jae
xchg
fcomp
fsub
mov
das
fwait
mov
bound
retf
in
inc
call
or
nop
sub
nop
cwde
cld
imul
nop
mov
pop
pmulhw
aam
fisubr
inc
leave
loop
xor
popa
imul
adc
popf
sub
pop
mov
xchg
ret
lea
movs
cmps
xchg
imul
adc
xor
lds
stos
retf
gs
mov
mov
pop
lods
repnz
or
sbb
outs
sbb
push
xor
aad
inc
div
cmps
mov
outs
inc
mov
sahf
adc
xchg
sub
inc
xlat
jbe
add
enter
pop
fild
cmps
mov
push
mov
cmp
push
sbb
int
in
js
fisub
fcomi
int
mov
rcl
iret
sbb
aaa
shl
icebp
aas
fisub
jb
xor
sub
adc
push
or
cmc
out
aad
enter
jnp
cs
lods
mov
repz
dec
xchg
je
fdiv
mov
(bad)
jmp
repz
pop
add
mov
mov
add
cwde
mov
pop
xor
xchg
jmp
pop
cmp
imul
nop
mov
in
inc
cwde
xor
cmp
jmp
jmp
bound
jmp
jmp
fs
rol
repnz
rcr
movs
mov
cld
inc
push
(bad)
sbb
inc
xor
scas
iret
adc
pop
jns
dec
inc
push
push
fcom
xchg
jbe
add
cli
sbb
xor
pop
mov
cmp
scas
mov
movs
mov
jns
push
imul
push
adc
push
enter
bound
sbb
and
fcmovnu
sub
out
dec
or
(bad)
sub
adc
sbb
cmp
sti
lahf
xor
fstp
ins
ja
retf
push
fucomi
bound
dec
jb
add
lods
cwde
pushf
(bad)
lods
lds
add
mov
mov
aas
aas
test
push
loop
scas
in
out
shl
adc
call
test
enter
push
inc
adc
popa
mul
fnstcw
test
push
dec
and
mov
movs
not
sub
shr
sti
inc
icebp
scas
repz
mov
lds
mov
dec
sbb
test
mov
lods
(bad)
xlat
or
imul
pop
jo
cwde
xlat
xor
jecxz
lds
pop
pop
jp
jne
inc
xor
add
jmp
xlat
aas
mov
pop
les
ret
std
out
xor
lods
jmp
stos
xchg
mov
out
mov
call
lahf
pop
sbb
xchg
ret
popf
push
iret
call
pusha
or
and
mov
mov
aam
movs
mov
push
and
mov
rcl
add
mov
dec
add
dec
dec
setbe
push
inc
jb
cmp
out
cdq
addr16
shl
rcl
iret
je
not
out
rol
ins
test
nop
ret
retf
or
xchg
or
xor
dec
mov
out
aam
mov
inc
pop
ja
push
idiv
imul
and
sbb
mov
pop
adc
shl
and
jecxz
mov
das
add
mov
sub
add
jecxz
adc
and
(bad)
xor
lock
test
mov
or
fisub
adc
sti
sbb
mul
mov
mov
je
movs
or
jno
mov
and
out
imul
push
and
push
push
and
std
outs
dec
fcomp
cmc
pop
shufps
xchg
neg
das
cmp
vmread
pop
aaa
es
pop
inc
enter
imul
clc
mov
pop
retf
lea
cs
fwait
xchg
adc
and
in
int
shl
xchg
jmp
pusha
nop
push
or
mov
fldcw
sbb
jmp
leave
dec
mov
mov
mov
dec
xchg
out
or
push
and
jmp
xor
rcr
mov
movs
mov
push
test
outs
loop
jo
and
(bad)
jne
add
and
jns
push
enter
and
mov
pusha
mov
fmul
(bad)
movs
mov
jecxz
pop
fstp
sub
repnz
popf
sub
pop
jp
scas
es
adc
xchg
add
xchg
sub
movs
les
mov
xchg
and
push
jne
cmp
mov
sbb
aaa
rol
mov
or
mov
mov
arpl
lods
mov
mov
and
mov
inc
xchg
call
out
or
and
stc
cmp
scas
cmp
test
outs
stos
mov
mov
xor
popa
icebp
dec
pop
or
sub
(bad)
fild
mov
nop
sbb
int
in
jmp
and
xchg
stos
xlat
vpshld
fcomp
aaa
das
test
xor
adc
push
sub
adc
shr
and
push
in
movs
in
(bad)
mov
mov
fwait
jne
push
pusha
mov
add
fwait
push
xchg
mov
hlt
call
mov
js
repnz
jae
pop
push
mov
ficomp
and
mov
out
fcomi
sahf
inc
push
inc
mov
mov
aad
or
movs
je
ja
or
push
out
jecxz
pop
mov
sub
adc
dec
sbb
push
inc
mov
adc
jmp
add
pusha
pop
mov
dec
in
mov
dec
push
pop
(bad)
daa
mov
push
and
loop
lock
arpl
mov
and
(bad)
(bad)
mov
cmp
cmp
ret
rcr
bound
cs
int3
push
sub
outs
xchg
dec
shl
es
jae
or
outs
repnz
inc
cmp
ds
mov
jecxz
or
es
out
adc
fisub
in
push
jge
(bad)
xchg
test
and
test
jns
retf
jns
loopne
(bad)
add
mov
jmp
(bad)
jbe
rcl
inc
dec
xlat
mov
jbe
mov
and
and
out
adc
jno
xor
cld
jle
sbb
call
pop
icebp
sbb
rcr
or
add
cmps
sub
adc
sub
inc
mov
inc
adc
lahf
xor
xor
push
outs
ds
xchg
push
int
jnp
cmp
adc
xchg
mov
pop
xchg
inc
mov
inc
stc
add
jno
stos
js
sub
cld
in
mov
pusha
mov
fnstcw
sahf
retf
add
mov
mov
push
mov
std
and
mov
xchg
sbb
fdivrp
xor
jl
inc
jecxz
call
call
fsub
cld
cmp
add
fwait
imul
frstor
mov
mov
jmp
data16
pop
xchg
sbb
xor
jo
push
movs
imul
(bad)
sbb
mov
lods
xchg
(bad)
popf
aaa
scas
fidivr
jnp
push
ror
push
into
sar
xchg
ret
sbb
or
add
mov
cmp
int
retf
(bad)
xor
or
or
xor
jnp
aad
or
push
test
jb
adc
sbb
xor
ret
iret
push
or
das
pop
(bad)
mov
mov
in
push
push
ret
fsub
push
or
pop
jns
inc
pushf
(bad)
mov
(bad)
adc
jecxz
cs
lock
jne
mov
lea
mov
pop
pusha
mov
mov
in
mov
add
test
mov
xchg
sub
cmp
pop
lods
xchg
lds
jmp
ds
cli
loopne
mov
rol
dec
push
jmp
shr
sbb
sti
bnd
xor
cmp
add
into
mov
dec
sbb
xchg
jg
rol
and
mov
push
mov
loopne
rcr
cmp
rol
shl
imul
addr16
repnz
out
sub
push
add
mov
mov
cs
mov
jae
xchg
xor
push
addr16
push
mov
ss
in
mov
mov
das
in
loopne
sbb
in
inc
cmps
xor
xor
xchg
neg
ds
lods
inc
dec
icebp
shl
xor
and
push
sar
fsubr
stos
mov
pop
jno
imul
test
pop
xchg
inc
jecxz
pusha
jmp
add
enter
push
add
cmp
adc
inc
xor
mov
or
push
mov
add
out
mov
and
mov
or
jb
(bad)
aad
xor
retf
shr
shr
gs
call
icebp
jae
xor
pop
cwde
in
les
stc
cmc
add
cmp
jae
loop
popa
arpl
pop
push
inc
add
repz
push
adc
mov
test
iret
call
add
ss
push
mov
(bad)
mov
push
(bad)
cwde
sub
mov
iret
sbb
add
inc
pop
sub
imul
out
jo
out
repz
lahf
mov
add
dec
jb
imul
pop
dec
xchg
add
bnd
js
int
fist
dec
cwde
sbb
lods
cmp
fcmovne
daa
ss
and
jecxz
jmp
push
sbb
fnstsw
das
sbb
xchg
xchg
lock
fsubr
mov
lea
xor
dec
adc
push
mov
icebp
push
mov
and
push
jbe
xchg
add
call
ins
mov
jae
pop
cmp
jecxz
test
and
and
xor
lds
(bad)
(bad)
leave
push
test
ret
mov
pop
xor
xchg
(bad)
and
inc
call
mov
adc
out
pextrw
mov
popf
mov
mov
(bad)
outs
xor
jmp
imul
fdivr
pop
adc
(bad)
xor
rol
mov
mov
xor
daa
and
bound
repnz
dec
push
leave
mov
cmp
cli
sahf
push
xor
sub
aam
iret
pop
inc
je
xchg
movs
in
cmps
ret
dec
shl
pop
loope
fsub
add
xchg
xor
xor
das
daa
pop
fwait
pop
push
jb
cmp
stc
and
test
in
push
cs
xchg
out
push
pop
sub
xchg
adc
jp
in
inc
pop
sbb
xchg
cmc
scas
mov
adc
pop
pop
xchg
aas
sbb
mov
mov
push
arpl
xchg
sub
sub
xchg
push
sub
mov
inc
aam
daa
arpl
inc
outs
test
and
and
data16
fnstsw
cmp
mov
outs
xor
mov
dec
inc
mov
ffree
cmp
xchg
fsubr
aas
mov
call
pusha
cmp
pusha
int3
pop
fwait
pop
xchg
rcl
cdq
pop
in
not
sub
sbb
mov
push
(bad)
dec
sub
sub
fs
(bad)
repz
ins
adc
mov
push
das
pop
in
(bad)
sub
and
sbb
push
sub
das
pop
enter
sahf
mov
(bad)
cdq
jno
jl
sub
sbb
gs
ror
push
push
adc
mov
lock
aaa
test
bound
jb
lahf
aaa
mov
lahf
cld
sbb
and
ss
dec
popa
pop
mov
mov
xchg
adc
retf
mov
cmp
jecxz
fdiv
mov
outs
pusha
repnz
lea
dec
add
sbb
and
in
mul
stos
or
push
xlat
mov
push
pop
xor
mov
retf
sub
inc
push
sti
cmp
mov
mov
into
pop
not
and
dec
push
sub
(bad)
ins
or
inc
mov
sahf
xchg
dec
xor
gs
or
icebp
out
fist
std
push
fbld
pusha
adc
shl
xor
stc
mov
cmps
dec
jno
ds
xchg
(bad)
test
loope
mov
iret
rcl
mov
outs
jae
xor
int3
push
push
adc
imul
adc
jmp
inc
jmp
or
or
clc
inc
jbe
ins
dec
pop
add
mov
ss
adc
or
sub
rol
xor
jg
dec
adc
pop
in
jl
lods
inc
mov
ins
adc
mov
lods
mov
retf
pop
adc
adc
dec
leave
and
and
jmp
mov
int
cmps
xchg
aad
sub
push
or
(bad)
lea
inc
aaa
fcomip
xchg
(bad)
push
push
jae
rsqrtps
push
stc
mov
shl
adc
fisubr
inc
rcl
shr
cmc
mov
jge
daa
dec
and
add
inc
sbb
ret
xchg
cli
sahf
or
mov
shr
inc
sar
or
xchg
loopne
popf
or
jp
es
mov
mov
and
xor
adc
lahf
dec
pushf
mov
ds
cmp
pop
pop
outs
mov
arpl
jg
pop
push
xchg
pop
sub
(bad)
adc
mov
cli
mov
and
ret
mov
pop
fmul
std
mov
lahf
test
dec
(bad)
popf
pop
mov
les
div
mov
icebp
jl
xlat
pop
out
sbb
xor
in
fs
dec
lahf
int
shr
das
xchg
mov
and
mov
cmp
or
popa
xchg
aaa
pop
iret
fild
sti
and
mov
mov
sub
mov
int3
sub
retf
sub
test
mov
out
add
mov
imul
xor
cwde
xor
rcl
push
fild
lahf
movs
repz
out
int
fistp
jl
or
push
jb
daa
sbb
in
mov
xor
inc
das
loop
mov
out
jp
loopne
stos
int3
lock
dec
sbb
(bad)
fmul
stos
cmps
or
add
push
mov
mov
fst
ss
mov
dec
dec
retw
pop
dec
mov
es
mov
adc
add
or
sbb
dec
mov
sub
bound
jl
repnz
or
pop
ret
and
cmc
mov
push
pop
div
int
inc
outs
mov
test
in
(bad)
jp
jg
xchg
bound
jl
inc
cmp
and
xor
jne
pop
nop
lock
movs
aad
out
sub
add
xor
cmc
sbb
movs
add
push
xchg
xor
retf
shl
xor
inc
(bad)
push
(bad)
fdivr
fnstsw
jno
add
pop
sbb
jmp
pop
jb
pop
pop
aam
fst
xor
ins
stos
fsqrt
dec
shl
mov
into
fs
mov
adc
jae
gs
retf
push
mov
sub
pop
in
in
fcom
and
mov
cmp
fcomi
outs
ret
out
adc
jl
pop
and
cmps
push
mov
jecxz
and
mov
jo
pop
cmp
sbb
aam
mov
xchg
pop
sub
sub
mov
adc
nop
xchg
push
iret
cdq
movs
cmp
outs
fwait
jae
pop
stc
sub
mov
(bad)
mov
into
call
popa
js
imul
ss
add
mov
mov
push
xchg
ja
dec
imul
fcom
in
inc
stos
push
jb
add
push
shr
fwait
adc
test
mov
fdivr
push
push
int3
fldenv
xor
ret
in
dec
sbb
dec
push
adc
or
pop
pop
imul
mov
popf
adc
fnstenv
pop
or
jp
pushf
bound
ja
push
sar
test
push
mov
add
scas
fdivrp
xchg
mov
or
and
dec
sbb
sbb
sub
cmp
fiadd
pop
les
jg
inc
mov
stos
jae
adc
pop
retf
add
sbb
sub
push
jmp
movs
mov
jmp
movs
call
add
test
(bad)
cmp
imul
(bad)
and
sbb
add
inc
jne
or
mov
hlt
or
pusha
adc
out
mov
mov
and
bound
dec
xor
imul
push
mov
inc
arpl
je
lahf
in
jne
add
cli
jl
pop
pushf
and
jo
int
push
xchg
xchg
int3
mov
out
dec
shr
mov
dec
or
cmp
sbb
(bad)
xor
add
clc
leave
scas
iret
out
push
sbb
retf
push
lahf
leave
pusha
mov
ja
fldenv
push
jo
cwde
xor
push
xchg
sti
adc
data16
push
lea
inc
mov
xchg
mov
imul
scas
cmps
add
xchg
dec
stc
pop
scas
(bad)
push
vcvtusi2ss
add
or
call
sbb
mov
push
pop
pop
add
imul
enter
push
or
(bad)
fdivr
lahf
mov
ret
(bad)
ficomp
out
jmp
xor
jns
lods
test
dec
xchg
iret
push
fstp
adc
push
div
fldenv
cmp
pop
mov
ret
dec
mov
push
(bad)
push
retf
add
shl
pop
movs
pusha
adc
hlt
push
in
xor
push
xor
mov
out
in
pop
movs
movs
sub
test
ins
(bad)
out
push
into
pop
mov
mov
xchg
repz
loope
lods
jnp
rcl
push
(bad)
icebp
xor
inc
xchg
jmp
shl
cmps
mov
out
repnz
pop
mul
imul
add
and
add
push
dec
call
mov
mov
rol
call
repz
add
shr
test
jmp
xchg
nop
cmp
sahf
shl
or
pushf
sbb
(bad)
retf
scas
xchg
xchg
pusha
push
movs
mov
mov
ffree
leave
(bad)
neg
adc
push
out
pop
inc
cdq
repnz
inc
pop
clc
int3
and
imul
repnz
inc
mov
add
cmp
xor
mov
dec
inc
adc
jge
js
inc
cmps
xorps
xor
lock
mov
inc
cmc
inc
out
mov
test
pop
mov
xchg
iret
clc
xchg
out
pop
ret
sub
push
stos
or
in
mov
scas
mov
xor
fisttp
mul
(bad)
dec
ret
rol
pop
inc
cs
mov
not
jmp
test
pop
sbb
pop
(bad)
push
push
retf
and
cmp
in
fisttp
and
add
mov
test
add
sub
call
jle
bound
jbe
lock
dec
shl
inc
popf
mov
cs
xchg
cmp
jnp
or
push
(bad)
mov
mov
cli
loope
xchg
popf
inc
and
test
and
stc
fcom
xchg
es
xchg
lds
push
test
or
les
outs
lock
sahf
ins
int3
shr
pop
cdq
dec
aas
pop
mov
movs
cmps
xor
test
shl
mov
popf
or
xor
shl
jmp
outs
shl
outs
inc
xchg
lods
cmp
jae
std
add
les
pushf
or
stos
rcr
test
popf
sbb
lahf
in
mov
lahf
jnp
cdq
movs
loop
dec
push
je
in
pushf
out
mov
mov
dec
jl
sub
xlat
das
(bad)
stos
sbb
les
xchg
inc
mov
mov
mov
fisub
sar
ss
out
or
cld
gs
adc
or
fs
xor
sti
jns
dec
xchg
sub
xor
je
push
loope
xchg
sbb
push
pop
push
aad
dec
fbld
add
fild
rol
or
inc
and
mov
xchg
pop
or
xchg
mov
aas
mov
jmp
dec
xor
(bad)
pushf
sub
sub
fwait
or
mov
cwde
pushf
or
cmc
mov
rol
jae
dec
sub
xchg
xor
cs
jecxz
mov
mov
xor
jae
sub
xor
and
inc
xlat
iret
xchg
stc
pop
dec
or
add
mov
int
sti
add
popf
cli
push
movs
mov
test
shr
pop
fs
fwait
repnz
cmc
mov
out
inc
xchg
mov
lods
mov
jno
xchg
jmp
jmp
mov
lock
or
getsec
xchg
dec
pop
and
inc
mov
mov
inc
mov
test
es
xor
je
xlat
daa
shl
leave
xor
loop
repz
aad
(bad)
sbb
mov
xchg
pop
lods
int
add
clc
xor
popa
lock
jo
repnz
inc
outs
mov
jnp
daa
ins
dec
mov
pop
repnz
sbb
and
mov
ins
outs
add
out
add
pushf
pop
stc
loopne
out
outs
dec
sbb
in
xor
or
jp
retf
mov
jmp
fisttp
xor
mov
ror
mov
ficomp
sub
loop
jno
sbb
lahf
out
repnz
inc
jmp
(bad)
aad
cmps
pop
stos
bnd
pop
mov
cmp
xchg
xlat
fs
pop
lahf
mov
fucom
fiadd
mov
sub
jb
pop
inc
adc
inc
xchg
jmp
push
mov
inc
rcr
inc
add
repz
shl
es
arpl
xchg
sbb
xor
and
pop
add
dec
inc
cmc
int3
movs
popa
xchg
retf
add
sbb
xchg
jge
(bad)
cmp
sub
lea
jo
fwait
inc
fmul
dec
in
push
mov
retf
xchg
mov
aam
les
push
jbe
test
imul
adc
test
pop
mov
hlt
mov
xchg
(bad)
call
test
push
sti
sub
cwde
lahf
mov
jnp
adc
cmc
nop
sbb
push
leave
lahf
stos
jl
adc
pop
jmp
es
les
mov
dec
retf
in
lds
push
(bad)
cli
data16
and
jmp
push
outs
xlat
pop
cli
iret
das
mov
into
xor
mov
into
ret
fsubr
jno
popa
mov
ror
dec
xchg
pop
int
or
stos
push
mov
lods
cli
pop
xchg
ds
cmp
in
xor
mov
sbb
xlat
cmps
cld
scas
sbb
sti
push
(bad)
loop
push
xchg
shl
pushf
daa
or
scas
pop
cs
mov
stos
outs
aad
imul
inc
push
shr
adc
mov
cmps
rcr
xor
inc
xor
sub
stos
clc
and
inc
mov
dec
dec
test
inc
retf
jmp
in
and
call
movs
ret
mov
fwait
mov
sbb
sub
dec
in
inc
stos
xchg
out
sahf
sbb
mov
(bad)
jbe
sub
mov
call
mov
loop
dec
rcr
and
push
daa
(bad)
mov
jp
adc
push
sub
cmps
cmps
and
mov
cmp
leave
in
xor
out
xchg
mov
dec
pusha
inc
shl
adc
and
mov
mov
mov
inc
mov
add
mov
gs
ds
xor
and
aam
icebp
mov
loope
xor
(bad)
sbb
add
arpl
loop
lds
clc
add
dec
mov
fnstsw
call
retf
mov
test
xor
sbb
inc
cmp
jmp
mov
or
int
aam
rcl
add
xor
shr
shr
xor
add
xchg
pop
jae
stc
shr
sbb
mov
test
(bad)
cmc
lea
xor
(bad)
es
cmp
xchg
jno
add
mov
xchg
mov
imul
arpl
popf
push
mov
mov
sbb
cmp
mov
dec
pop
push
add
cmps
sbb
push
mov
push
pop
pop
popa
in
dec
sbb
mov
stos
inc
pop
jns
(bad)
cli
push
bound
and
call
mov
pop
cwde
pop
sbb
aaa
pop
int
daa
pushf
pop
in
imul
push
and
call
or
inc
(bad)
xor
mov
jne
stc
or
pop
leave
inc
lods
cmc
fmul
sbb
retf
imul
inc
fwait
outs
mov
loop
pop
scas
cld
cld
jecxz
dec
pop
popf
mov
int
add
adc
mov
push
xchg
shl
mov
mov
adc
sbb
js
clc
pop
add
js
jb
jb
mov
aad
xlat
mov
sbb
in
xchg
(bad)
and
jge
sub
mov
pusha
jne
add
sti
jg
mov
jo
pop
cmp
ja
cmc
xlat
mov
test
push
xlat
mov
enter
pop
xor
add
aas
pop
enter
stc
push
sti
ss
pop
sub
add
cmc
cmc
fwait
mov
push
pop
push
rcl
mov
jle
cmps
movs
push
inc
ins
out
xchg
arpl
pop
xor
rcr
sub
mov
jo
add
jmp
fdivp
enter
add
mov
(bad)
ror
popf
in
add
cmp
(bad)
xchg
cmp
mov
adc
dec
sti
jmp
sahf
out
rcl
aas
(bad)
mov
ja
inc
cmovp
xor
pop
and
or
push
nop
sbb
js
or
cli
xchg
pusha
pop
mov
pop
mov
inc
sub
retf
ja
mov
inc
popa
and
call
jp
xchg
loope
add
in
add
clc
and
push
and
cmc
scas
stc
arpl
ja
sbb
mov
aad
fsubr
dec
jge
sub
(bad)
hlt
push
shl
adc
push
mov
fs
jmp
push
push
loope
call
idiv
mov
lds
dec
jg
or
push
sahf
mov
addr16
call
rol
fisub
mov
mov
aam
jns
mov
std
dec
sti
pop
mov
in
xor
fadd
xlat
add
pop
lahf
add
adc
loopne
inc
mov
push
mov
rcl
jne
pop
add
je
call
xor
in
adc
je
call
jns
push
pop
cli
add
push
call
cmps
std
cmp
(bad)
ins
cmps
nop
imul
xor
inc
(bad)
div
cmp
and
mov
xchg
fcom
inc
cld
mov
pop
outs
sbb
adc
push
movs
push
ret
addr16
add
xchg
sub
pushf
loop
shl
jo
pop
push
mov
movs
jbe
iret
or
cmp
jnp
pusha
sub
les
stos
inc
mov
test
loop
dec
mov
jno
adc
mov
add
in
xchg
leave
mov
or
in
jl
inc
sbb
scas
mov
jl
mov
jle
ds
mov
xor
mov
pop
xchg
out
aas
(bad)
ins
inc
mov
xchg
dec
test
aas
inc
push
std
and
add
xor
cmp
jae
mov
pushf
fbld
xor
fdiv
adc
scas
std
cmps
js
ret
mov
ret
jb
dec
test
lods
scas
call
cmc
mov
or
cmp
enter
sub
lods
outs
cmp
and
pusha
sub
es
scas
cmp
gs
adc
jno
out
icebp
test
sbb
hlt
and
jo
retf
xchg
jno
in
jmp
popa
repz
(bad)
test
ffree
mov
lahf
dec
icebp
sub
adc
mov
into
stos
mov
les
scas
icebp
push
ds
xchg
and
(bad)
jbe
frstor
out
cmp
(bad)
cmps
enter
mov
sahf
sbb
push
xor
out
xchg
fwait
mov
inc
or
out
or
cli
loop
loop
jbe
arpl
adc
stos
xchg
add
dec
cmp
and
mov
sbb
imul
jg
jge
mov
mov
mov
test
fsub
sbb
test
rcr
fs
outs
lods
pop
mov
cmp
add
mov
xchg
jmp
sub
pop
and
inc
iret
mov
cmp
ror
add
inc
rcr
les
loop
dec
cmp
js
in
bound
sbb
inc
cmp
ds
pop
push
dec
jmp
shr
test
xor
cmp
movq
jecxz
adc
repnz
cli
retf
out
cwde
xchg
mov
fwait
movs
sub
jg
data16
adc
jb
jmp
jmp
sub
cmps
out
cli
movs
jns
or
cs
xchg
sti
inc
retf
clc
and
ins
fisttp
popa
div
jne
(bad)
hlt
add
mov
add
fstp
leave
jo
push
fdiv
xor
cmc
dec
jl
cmps
jg
imul
in
cmps
addr16
int3
mov
mov
std
retfw
xchg
cdq
mov
inc
pusha
add
and
rcr
pop
jbe
and
mov
(bad)
imul
push
neg
mov
cdq
push
adc
push
adc
aad
adc
arpl
and
les
inc
adc
sbb
enter
xchg
cmp
lock
pusha
arpl
lods
(bad)
jnp
sub
cmps
fisubr
adc
dec
sbb
call
test
sub
push
lods
das
js
mov
and
xor
push
jp
outs
adc
rol
pop
jbe
fadd
sub
xchg
or
jp
es
mov
push
leave
adc
lahf
outs
cmp
outs
icebp
hlt
das
imul
lea
dec
and
cld
jne
xchg
jb
xor
fistp
dec
xchg
xor
add
sbb
and
dec
shl
int3
mov
pop
mov
push
(bad)
rcl
imul
jecxz
or
pusha
repnz
(bad)
vcmpps
adc
xchg
loop
sahf
xor
xlat
mov
stos
fnsave
mov
or
mov
(bad)
cmps
dec
ja
xor
sbb
scas
mov
jb
mov
fst
add
jns
inc
(bad)
mov
push
sar
jmp
and
jns
mov
in
fist
ret
sub
push
mov
adc
push
mov
int3
popa
xor
add
adc
mov
cmps
stos
test
loop
pop
push
aaa
scas
or
mov
loop
adc
add
jns
pop
dec
pop
nop
and
adc
imul
clc
inc
pop
mov
lahf
cmp
add
mov
and
mov
adc
sbb
sahf
out
cmps
sbb
in
fs
mov
in
mov
jb
or
and
and
sbb
shl
adc
out
sub
or
mov
mov
movs
enter
mov
rep
int3
and
pop
ret
sahf
pop
adc
add
test
cmp
xor
rcr
sbb
xchg
mov
xchg
lahf
adc
call
mov
add
cmps
ret
inc
mov
clc
pusha
mov
mov
stos
xor
int3
ss
cmp
sbb
dec
or
cwde
push
pop
ret
sti
pop
outs
jae
sbb
sbb
lods
out
push
imul
(bad)
pop
inc
ins
fwait
lock
rcl
test
push
mov
lea
and
mov
xchg
adc
jbe
out
in
push
retf
ins
mov
cdq
jbe
(bad)
(bad)
cmc
and
sbb
rdmsr
call
add
daa
xchg
stos
mov
cmp
repz
add
(bad)
sbb
mov
icebp
popa
mov
pop
and
push
je
jne
adc
jnp
cmp
xchg
cmp
sub
popf
inc
and
xchg
dec
pop
cmp
movs
and
add
in
lock
shl
retf
xor
cmp
mov
or
cmp
sub
mov
ins
xor
test
dec
into
fst
and
loop
adc
mov
in
push
push
seto
enter
mov
leave
adc
imul
adc
adc
fld
mov
push
xchg
push
ds
cmp
or
pop
sub
sbb
popa
dec
repnz
ins
clc
les
add
not
mov
sti
in
repnz
jns
jno
or
clc
sqrtps
jecxz
pop
(bad)
xor
dec
xor
nop
inc
rol
clc
rol
sbb
pop
cmp
jecxz
push
xchg
or
ror
test
popa
jp
pop
or
arpl
add
push
mov
sbb
adc
adc
mul
scas
in
or
pushf
lock
aaa
fisub
repz
push
jge
sbb
jg
ds
(bad)
jmp
sub
add
int3
lods
shr
jo
jle
stos
imul
popf
mov
fcmovne
data16
das
test
inc
xor
rol
dec
je
cs
mov
sub
iret
test
add
fisubr
out
addr16
int3
je
push
jg
adc
sbb
mov
out
pop
cmps
adc
mov
mov
retf
or
test
or
imul
test
jmp
inc
loop
dec
xchg
inc
cmp
dec
popf
ret
test
inc
fst
cli
int3
cmp
cmps
stc
or
ja
scas
push
xchg
cmps
test
inc
jp
enter
sub
dec
stos
jno
out
sub
not
xchg
test
test
adc
shl
call
outs
sti
cmp
adc
mov
cld
fst
or
push
dec
jmp
and
pop
pop
cmp
fcomi
int
add
mov
(bad)
bound
enter
and
ret
mov
pop
les
(bad)
gs
dec
xor
icebp
daa
sbb
sbb
(bad)
fst
hlt
or
and
inc
xor
pop
mov
aaa
ins
jle
je
movs
push
push
sbb
aaa
cmps
add
mul
out
xor
ret
mov
mov
add
dec
adc
sbb
test
ret
mov
int3
lahf
dec
pop
jnp
adc
cmps
xor
inc
sub
push
les
aaa
icebp
jno
jne
fiadd
fisttp
mov
test
push
shr
sbb
adc
mov
fsub
dec
cmps
clc
movs
ins
pop
jo
sub
inc
cmp
retf
out
scas
movs
std
les
add
ja
dec
test
mov
mov
pusha
shr
mov
les
cmp
jmp
clc
jmp
(bad)
jp
div
pop
aas
loopne
add
das
cmp
mov
mov
inc
shl
aad
test
fiadd
inc
mov
inc
loop
fld
nop
jno
loopne
sar
push
je
ror
jecxz
jmp
scas
jmp
es
out
clc
jl
scas
pop
scas
fcom
and
call
xor
push
int
lds
adc
fcom
nop
push
mov
dec
fucom
es
sar
sub
fdivr
add
in
push
mov
or
lods
xchg
test
jp
sub
ficomp
xchg
sbb
xchg
nop
dec
push
pop
jmp
loopne
mov
fistp
pop
stc
jl
inc
jge
ret
sub
push
hlt
js
jl
int
pop
ror
add
xor
xor
jnp
inc
push
or
jg
mov
and
mov
arpl
js
dec
in
fchs
sbb
leave
dec
mov
mov
pop
sahf
nop
mov
push
jp
adc
sub
jbe
in
pop
(bad)
rol
aas
sti
mov
mov
sahf
xchg
(bad)
cld
cs
cs
(bad)
mov
inc
stc
mov
inc
in
in
leave
mov
ror
mov
ja
sbb
outs
test
and
mov
pop
cmps
mov
outs
(bad)
retf
mov
jae
(bad)
mov
push
push
stc
push
or
fs
push
inc
in
adc
sub
pop
mov
and
pop
cwde
mov
xchg
cwde
ret
lahf
jb
mov
jb
mov
xchg
pop
mov
retf
scas
clc
mov
and
sub
ja
fidivr
mov
pop
neg
xor
mov
scas
push
cmp
sbb
push
mov
adc
mov
push
add
and
lea
cld
aaa
les
pop
scas
popf
aad
xor
(bad)
mov
stc
mov
jb
(bad)
cmps
xor
mov
adc
dec
rcl
xchg
dec
dec
iret
lds
popf
test
mov
inc
push
cmp
call
(bad)
pop
bound
pop
jbe
add
outs
push
rcr
xchg
jnp
ins
or
sub
(bad)
lods
or
dec
pop
xacquire
inc
mov
mov
clc
adc
mov
data16
lea
jo
xchg
push
js
push
mov
bound
int3
cmp
scas
icebp
int3
je
xchg
es
mov
jg
shl
(bad)
fwait
mov
aam
jge
pop
mov
cmps
jge
into
xchg
or
psrlq
ss
loope
ja
jge
cmps
sub
nop
mov
add
push
in
inc
popf
pop
aad
pop
xchg
mov
or
jmp
in
mov
xchg
and
sbb
or
sbb
ja
add
js
jo
push
pop
inc
mov
mov
sti
neg
gs
and
fild
sbb
mov
and
aad
xchg
jp
hlt
mov
repnz
fdivr
and
(bad)
retf
cmp
je
mov
inc
mov
mov
int
xor
pop
pop
jo
dec
retf
sbb
sbb
cwde
push
(bad)
aaa
xor
xor
or
pop
mov
sub
mov
out
loopne
cmp
(bad)
cmps
xor
imul
popf
iret
in
shr
cmc
sbb
clc
jb
ins
xchg
adc
jg
or
add
repnz
pop
and
loopne
shr
fstp
cmp
pop
test
retf
jns
scas
ins
sub
cmps
push
dec
clc
lea
mov
inc
data16
xchg
sub
xchg
push
nop
hlt
dec
ret
push
inc
cmp
cs
jno
(bad)
aam
mov
pop
sbb
and
push
mov
(bad)
jge
xchg
xchg
nop
addr16
lds
push
xor
dec
fadd
stc
loope
sub
mov
ret
push
(bad)
push
or
mov
mov
mov
fdivr
adc
mov
fwait
call
(bad)
push
(bad)
lods
mov
adc
icebp
int
fstp
push
test
aam
dec
push
pop
and
fs
int3
ins
mov
jnp
add
ins
xor
add
or
in
sub
dec
stc
jae
sub
lea
jl
xor
addr16
sub
push
movs
into
loop
adc
ins
and
(bad)
jns
inc
mov
ror
rcl
aas
fisubr
adc
mov
pop
fldcw
sbb
lods
adc
push
pop
pusha
add
fild
fwait
leavew
xchg
jmp
ins
test
push
ja
(bad)
int3
jmp
loop
xor
inc
inc
dec
je
bswap
jle
or
addr16
mov
test
frstor
cdq
(bad)
push
dec
test
push
les
sbb
jp
loopne
pop
xor
ins
(bad)
or
inc
mov
je
sub
sbb
mov
ficomp
add
ja
(bad)
in
and
ins
push
jmp
mov
es
test
rcr
dec
mov
rcr
ja
lock
cmp
mov
(bad)
movs
cmps
lods
ins
dec
lahf
push
lahf
push
cld
mov
jbe
pop
test
aam
and
mov
(bad)
data16
gs
icebp
jl
imul
in
ficomp
std
stos
lock
les
add
xchg
and
fs
(bad)
jl
call
mov
vphadddq
xchg
rcl
mov
jae
por
xor
(bad)
jo
outs
and
mov
pop
call
scas
and
std
sbb
movs
call
je
lahf
push
popa
jmp
cmp
fbld
sub
or
aaa
lahf
sbb
cs
xor
into
xchg
aas
mov
fstp
outs
sbb
mov
mov
mov
aas
xchg
mov
sub
int
inc
scas
inc
sahf
or
out
ins
mov
push
push
pop
or
mov
cli
jmp
dec
enter
sbb
test
add
xchg
dec
cli
lock
dec
xchg
ss
out
xchg
cdq
cmps
inc
cmovo
mov
(bad)
arpl
sbb
scas
outs
call
dec
ss
hlt
lahf
dec
ret
cmp
(bad)
movs
out
stos
xor
cmp
xor
stc
retf
retf
fdivr
fstp
xchg
sar
lods
(bad)
jae
push
sbb
pop
xor
sahf
jo
cli
cmp
add
push
sub
xor
mov
pop
xor
sahf
imul
mov
bound
inc
loop
cmps
ins
jnp
adc
ret
mov
adc
mov
sti
xchg
add
in
shl
fisub
sahf
jmp
mov
daa
jge
mov
std
adc
xchg
sub
jb
dec
sahf
dec
imul
xlat
xor
xlat
mov
scas
shl
icebp
dec
push
outs
sub
pshufw
mov
add
push
mov
pop
pushf
fwait
inc
jo
push
adc
pop
int
dec
push
ror
pop
mov
popa
test
ins
cmps
cmc
out
push
pop
sahf
dec
ins
loopne
cmp
mov
mov
cs
out
pop
jmp
call
add
bound
inc
push
repnz
daa
push
dec
lea
add
cli
lock
mov
mov
cwde
dec
push
and
fst
xor
iret
dec
pushf
call
mov
test
inc
xchg
dec
inc
scas
cs
ret
fs
sub
test
cmp
xor
addr16
fs
retf
sbb
add
out
(bad)
pop
sub
scas
inc
fld
in
test
mov
pop
ss
imul
mov
in
cmp
sbb
add
test
imul
add
or
(bad)
fwait
ins
test
sbb
and
sahf
ret
mul
dec
outs
in
js
daa
movs
xchg
neg
stos
icebp
and
retf
addr16
inc
addr16
inc
mov
xor
aad
sbb
pop
adc
jne
(bad)
push
dec
cdq
jae
test
sub
push
gs
adc
mov
sub
xchg
jp
ins
jp
push
mov
mov
jo
int3
add
jbe
cs
cmp
(bad)
(bad)
jmp
cmp
gs
mov
sahf
push
sub
les
xchg
daa
ins
xchg
(bad)
pop
mov
imul
sbb
pusha
pop
ret
std
pop
in
cwde
sub
sub
mov
rcl
inc
or
test
jnp
mov
add
cmp
mov
or
pushf
mov
call
fnstenv
jbe
cmp
mov
out
mov
and
add
popw
gs
dec
xchg
ds
pushf
outs
xor
inc
arpl
pop
ins
out
and
xlat
sahf
xlat
loop
enter
enter
xor
push
or
jo
imul
pop
dec
test
(bad)
in
imul
out
or
xchg
xor
mov
pop
paddsb
jno
add
lods
stos
in
add
add
sbb
jl
enter
fistp
outs
outs
(bad)
aam
push
xchg
lods
sub
xchg
sub
jno
inc
push
call
out
xchg
pinsrw
sbb
fild
outs
adc
xchg
push
(bad)
retf
ret
sbb
daa
cwde
xor
iret
cmc
ja
in
loope
sbb
pop
icebp
cdq
jmp
pushf
gs
jg
mov
mov
fsubr
xchg
add
lods
push
pop
callw
pop
int
pop
jge
fisubr
mov
sub
movs
jnp
mov
push
mov
mov
stc
adc
out
jmp
sahf
fwait
push
push
jne
mov
adc
jl
outs
out
out
pop
enter
clc
shl
ret
or
mov
bound
ror
sbb
ror
shl
out
shl
mov
mov
push
inc
jae
(bad)
std
icebp
stc
cmp
lock
in
pop
cwde
push
push
imul
mov
in
cmp
out
and
sub
cmp
mov
nop
push
out
sub
sahf
retf
jge
cmp
iret
sub
int
ins
cmp
(bad)
loop
ret
shl
pushf
push
pushf
dec
loopne
pop
or
data16
mov
int
test
xchg
shr
xor
lahf
js
add
dec
adc
and
cmp
scas
xor
xchg
adc
mov
add
or
fild
lahf
rcr
fisubr
rol
inc
out
jnp
push
adc
ror
sbb
clc
outs
ror
sub
xchg
test
movs
mov
aas
frstor
popa
sbb
leave
cmp
dec
ss
fcmovne
mov
outs
sti
xor
outs
out
pmullw
nop
jle
add
and
jmp
push
jmp
loope
inc
add
clc
mov
cwde
mov
pop
inc
stos
fwait
ss
add
lea
mov
push
sub
pop
or
pop
and
arpl
push
dec
jle
pop
jmp
fistp
inc
scas
dec
cmp
cmps
push
adc
bound
pop
xor
xchg
mov
xor
(bad)
xchg
add
ficomp
mov
push
push
mov
cmp
outs
(bad)
popa
jnp
inc
loopne
mov
jecxz
pop
lods
jno
mov
cwde
cmps
cmps
(bad)
jbe
sub
iret
scas
sub
adc
xor
(bad)
movs
add
adc
fcmove
dec
dec
sar
xor
into
mov
pop
ror
outs
pop
popa
lock
movs
push
lock
shr
iret
(bad)
jbe
and
fneni(8087
xchg
or
les
sbb
(bad)
xchg
push
push
add
je
loop
lahf
stos
ins
daa
dec
lods
mov
loop
cs
push
and
push
adc
pop
stos
test
add
jmp
icebp
dec
dec
jge
nop
sub
jo
push
ss
sbb
mov
loope
mov
sti
and
popa
pop
jl
(bad)
xor
std
scas
pop
xchg
and
mov
sub
ds
fdivr
cmps
jbe
xlat
mov
(bad)
pop
test
jge
std
fisub
add
and
aam
xchg
cmps
shl
mov
xchg
adc
jne
test
arpl
jg
ss
mov
adc
mov
mov
inc
pop
dec
ins
icebp
pushf
inc
cwde
xor
jne
add
push
aad
add
inc
sub
outs
neg
push
inc
push
mov
repnz
sahf
mov
cmp
(bad)
pushf
jmp
fst
std
jle
jo
push
adc
jae
cdq
mov
xor
sub
inc
jge
mov
clc
(bad)
nop
xchg
aas
jg
call
inc
sub
and
dec
pop
or
pop
into
sbb
(bad)
outs
adc
cmp
shr
es
stos
fdivr
stos
mov
int3
cs
jmp
call
(bad)
pusha
popa
dec
data16
cs
pusha
sub
data16
jg
push
sti
aad
test
ret
xchg
jmp
test
sbb
ja
pushf
push
lahf
rol
sub
jnp
add
adc
or
aas
iret
jo
fisubr
jecxz
int
jl
or
rcr
int
in
std
fsub
push
retf
sbb
shl
inc
int
xor
xor
lds
shl
sbb
sbb
jb
xchg
mov
es
cld
mov
adc
or
lods
add
jnp
mov
sbb
push
out
adc
bound
sub
repz
test
(bad)
pop
addr16
xchg
pop
(bad)
(bad)
test
in
dec
inc
out
pop
mov
inc
sub
ds
lods
(bad)
fucomip
pop
jecxz
sar
inc
xchg
push
sbb
or
stos
stos
ficom
call
lock
pop
outs
adc
loope
pop
test
stos
sub
(bad)
inc
dec
jmp
test
and
repz
xor
dec
adc
jl
nop
lock
add
call
hlt
push
mov
sub
daa
pop
test
and
in
xchg
inc
sub
dec
jno
fimul
repnz
mov
xor
mov
std
loopne
mov
movs
sbb
sub
ret
jb
pop
test
cmc
ds
and
popf
ss
sti
inc
jp
(bad)
enter
xchg
mov
clc
dec
hlt
aad
mov
mov
pop
je
std
movs
adc
jns
ins
xchg
pop
push
aaa
(bad)
push
into
into
ja
fidiv
cmp
fild
ds
sbb
out
pusha
sahf
into
mov
into
rol
imul
retf
pop
mov
fnstenv
std
in
xchg
movs
jne
push
pop
push
popa
push
in
nop
shl
lahf
shl
inc
xchg
pop
int
popf
inc
add
cmps
aas
mov
push
push
cld
mov
pushf
es
mov
mov
add
xchg
dec
movs
dec
mov
dec
dec
or
in
mov
aas
xchg
xchg
lods
pop
adc
neg
idiv
stos
pop
push
xor
push
nop
pop
xor
sub
lods
jae
int3
sbb
mov
daa
xchg
repnz
inc
push
scas
pop
mov
movs
cmp
retf
or
mov
or
call
int
repnz
pop
leave
fcmovnu
pushf
repz
cmc
dec
fidivr
(bad)
loop
es
fisub
pop
test
scas
dec
retf
(bad)
and
loopne
jne
jmp
adc
pop
pop
push
addr16
sub
je
repz
and
ss
dec
pop
daa
push
jg
sbb
inc
repz
icebp
shr
dec
dec
(bad)
jmp
push
sub
jl
out
sub
mov
inc
adc
mov
addr16
fiadd
xchg
iret
push
(bad)
scas
mov
jnp
pop
inc
rcl
aam
sub
mov
loope
int
inc
xor
jo
xchg
pop
pop
dec
nop
dec
iret
xchg
outs
dec
out
cmp
mov
outs
sub
in
mov
popf
fdivp
jl
xor
ins
(bad)
cmp
dec
sub
mov
aaa
fcom
mov
adc
mov
retf
cmp
lea
aas
int3
dec
or
mov
(bad)
repnz
jo
in
shl
inc
aam
sbb
xor
inc
push
inc
in
adc
mov
aaa
xchg
leave
sbb
shl
enter
nop
sbb
inc
cli
sub
and
add
mov
stc
jb
sar
sbb
leave
pop
sahf
adc
test
lahf
outs
and
mov
sar
cmc
(bad)
sbb
push
imul
in
xor
sbb
mov
mov
adc
std
fsubp
mov
cmc
popa
imul
add
adc
fucom
mov
inc
pop
bound
nop
inc
(bad)
jae
pushf
adc
sbb
out
call
lods
(bad)
ja
mov
call
out
or
mov
fisttp
or
sub
lods
jae
call
jne
fmul
int3
mov
cmps
std
ror
xchg
iret
pop
push
in
xor
out
or
jmp
adc
xchg
cmps
inc
shl
call
mov
dec
dec
mov
imul
loopne
in
ja
mov
sbb
inc
xchg
xchg
shl
in
fimul
jno
mov
cmps
lahf
(bad)
fimul
fcom
dec
xchg
push
inc
push
test
test
adc
pop
sub
pushf
cmp
adc
shl
pushw
mov
xchg
push
out
stos
cdq
or
cld
add
xchg
test
pop
pop
add
mov
shl
sti
imul
fdivr
test
jp
ss
xlat
mov
cld
jge
mov
inc
mov
push
bound
xchg
clc
pop
daa
cmp
mov
rcr
icebp
repz
mov
push
je
das
add
or
push
fneni(8087
icebp
inc
mov
mov
lods
ret
mov
sbb
jmp
or
aaa
fst
loop
clc
shl
xor
sub
sbb
test
mov
ds
fchs
and
sub
fadd
mov
jae
xlat
call
mov
lea
jge
add
(bad)
push
mov
mov
pop
inc
push
jge
cmps
jmp
jg
sbb
outs
neg
mov
push
fiadd
cmp
inc
mov
out
je
pop
movs
inc
(bad)
ins
fcmove
mov
ja
sbb
int
or
pop
cmp
out
(bad)
iret
cmp
int
mov
xlat
pop
mov
sbb
push
push
cmps
add
mov
pop
pop
pushf
jge
fiadd
and
jbe
ret
or
ins
xlat
mov
add
push
pop
jbe
pop
scas
or
jae
sbb
retf
cli
loop
int3
pop
and
icebp
call
and
lods
mov
icebp
cmps
mov
cld
retf
retf
shl
sub
(bad)
sar
jno
mov
mov
push
xchg
sahf
sahf
cmps
(bad)
sbb
mov
loopne
stos
xchg
pop
mov
cmps
cmc
jmp
xor
cmps
dec
lea
and
mov
nop
adc
push
xor
ss
sahf
popa
mov
push
fisubr
aam
lock
repnz
xor
cmp
leave
sahf
inc
loop
jne
cmps
stos
fsubr
mov
mov
lds
nop
and
mov
pop
mov
jns
mov
cwde
inc
aaa
fld
out
mov
mov
mov
icebp
lock
pop
aaa
fstp
sub
call
xchg
push
iret
push
mov
pop
cmp
fistp
xor
mov
jbe
adc
sbb
mov
xor
mov
lahf
jno
xor
dec
imul
jp
xor
out
cmp
and
or
jg
es
push
lea
xchg
cmps
mov
jns
hlt
inc
lods
mov
and
sub
mov
inc
int3
jge
cs
mov
(bad)
popa
xchg
sbb
pop
push
das
and
inc
inc
mov
icebp
xor
or
lock
cs
mov
arpl
arpl
gs
push
gs
add
test
cmc
(bad)
jle
mov
or
cmps
(bad)
jae
or
adc
loop
rcl
cli
out
hlt
pop
loope
xchg
test
out
loopne
jmp
sbb
add
retf
cld
sub
xchg
movs
mov
sahf
mov
sti
stos
fstp
sub
sub
or
or
lock
popf
into
retf
cmps
xor
cmps
adc
adc
jbe
or
ret
fstp
stc
inc
cli
pop
and
dec
mov
push
xchg
push
bound
rep
add
inc
repz
repz
push
cld
iret
test
loope
or
jmp
(bad)
das
repnz
lea
stos
jecxz
nop
int3
pop
mov
mov
scas
leave
out
pop
(bad)
rcr
cli
aaa
pop
xchg
inc
fcomip
push
pop
sbb
pop
inc
es
add
es
jle
xor
pop
and
xor
mov
jg
into
aas
sbb
(bad)
in
sub
les
das
js
xor
cdq
icebp
test
sti
mov
mov
sub
clc
inc
sbb
dec
sbb
cmp
std
jbe
in
jns
jns
aam
xor
retf
mov
pop
aaa
adc
imul
and
jmp
test
jnp
ins
xchg
rcl
and
outs
mov
mov
xchg
mov
pop
enter
push
std
icebp
mov
adc
mov
xchg
push
dec
test
or
fidivr
jecxz
aad
test
cmp
and
adc
jne
out
mov
mov
and
xlat
ror
into
pop
inc
fsub
rdtsc
xchg
jmp
and
cmp
add
es
push
or
jg
mov
sbb
(bad)
pop
xor
arpl
mov
ror
clc
aad
ret
imul
cmp
lock
lahf
sbb
out
sub
cmps
dec
popa
add
prefetchwt1
sbb
mov
inc
(bad)
iret
gs
out
inc
(bad)
sub
fs
xchg
lock
and
cwde
lods
mov
push
add
add
sub
sub
xchg
xor
and
sub
mov
mov
mov
jge
aad
push
jmp
mov
dec
ffreep
dec
add
push
or
fucomi
aas
cmp
jp
and
pop
ror
call
in
pop
int3
clc
adc
loopne
hlt
pause
aam
int3
xchg
mov
js
ja
call
push
inc
ins
jo
xchg
xchg
cs
inc
ins
dec
imul
call
in
mov
movs
fs
sbb
int
sub
and
xchg
or
mov
push
ror
pop
rol
adc
push
ror
inc
repz
or
(bad)
cmp
jno
cmp
dec
in
inc
imul
sub
pushf
enter
sub
psubw
cli
xlat
jnp
ds
ret
and
adc
addr16
in
outs
and
and
lahf
mov
(bad)
(bad)
sbb
pop
shr
rcl
call
sub
pop
mov
test
dec
(bad)
jae
jns
in
das
add
xor
cmp
int3
div
aaa
adc
cmps
and
fwait
arpl
loope
sub
dec
femms
and
movs
test
inc
mov
dec
add
test
addr16
xor
adc
repz
cdq
dec
fwait
jae
adc
in
pusha
adc
fisub
test
mov
(bad)
jmp
in
icebp
dec
mov
and
test
xchg
add
popf
jns
jno
inc
mov
pop
mov
push
arpl
add
push
pushf
js
or
adc
cmp
jmp
or
aas
ret
sub
sbb
sbb
add
mul
jbe
mov
ja
repnz
xchg
imul
in
mov
push
popf
sbb
xor
push
adc
pushf
dec
xor
and
mov
in
mov
jp
(bad)
call
lahf
add
sub
dec
inc
clc
repnz
inc
into
push
sti
aad
jns
cdq
pushf
pop
or
pop
mov
fstp
mov
add
shr
jne
leave
mov
mov
sbb
jmp
push
sbb
test
jl
das
call
cmp
(bad)
(bad)
mov
inc
mov
sbb
mov
add
jle
out
cmp
mov
push
cmp
push
imul
and
xchg
or
sbb
rcr
dec
ret
adc
mov
std
aaa
popa
xor
sbb
ja
mov
inc
test
sub
movs
lock
jnp
pop
mov
fld
pop
xor
xchg
out
call
dec
fwait
and
inc
test
retf
jne
and
out
inc
xor
stc
stc
push
jecxz
(bad)
pop
mov
(bad)
pop
mov
stc
xchg
or
into
enter
push
dec
or
stos
stos
xchg
push
sti
dec
ret
test
sub
cmp
pop
push
(bad)
daa
lahf
mov
pop
pop
jns
(bad)
rol
dec
adc
xchg
sub
mov
(bad)
mov
add
iret
ins
xor
push
mov
sbb
or
jle
cmp
mov
add
dec
and
fs
jge
shl
pop
shr
ja
mov
xor
iret
fwait
lahf
mov
lds
cmp
ret
mov
inc
and
cmp
jae
aad
sub
mov
loope
mov
mov
int
cmp
xlat
push
(bad)
int3
les
push
stc
push
aas
stc
leave
jmp
xchg
mov
jnp
aaa
lahf
ins
daa
sbb
fmul
mov
xchg
outs
sub
icebp
xor
sub
and
pop
pop
mov
xor
cmp
mov
leave
dec
stc
ret
mov
imul
aad
cdq
add
movs
sbb
jns
add
mov
fadd
or
mov
dec
cdq
xor
jmp
or
sbb
ret
dec
ins
(bad)
cmp
ds
or
push
mov
inc
fnstsw
(bad)
xor
test
repnz
sub
cmp
inc
push
popf
mov
add
into
jmp
or
lahf
mov
test
enter
pusha
jl
pop
xchg
jne
push
sbb
push
mov
and
stos
push
push
sub
int3
mov
push
mov
in
jmp
push
xor
pusha
lds
iret
and
inc
inc
mov
xlat
mov
jne
dec
sub
in
mov
test
jmp
or
sub
mov
test
fst
in
mov
ds
push
jns
jno
call
repnz
addr16
mov
fs
push
pusha
add
stos
cmp
or
lahf
and
outs
add
in
jge
push
pop
sbb
retf
stos
ins
cdq
ja
cmps
mov
mov
iret
sbb
jecxz
push
mov
js
test
int
lock
rcr
bound
push
jmp
dec
clc
xor
(bad)
imul
lea
jecxz
test
test
or
(bad)
out
sbb
mov
dec
in
push
movs
sbb
inc
pop
pushf
fwait
xor
adc
inc
xor
dec
data16
mov
jl
push
xchg
xchg
clc
shr
aam
call
lock
(bad)
fcomp
arpl
lds
mov
dec
mov
jno
jle
sub
(bad)
in
outs
dec
and
sbb
sbb
(bad)
cmp
mov
adc
jnp
jmp
mov
inc
push
pushf
in
neg
cmp
dec
pop
xchg
mov
cdq
pop
or
into
xor
or
mov
cmps
sub
gs
dec
jp
fild
aaa
mov
icebp
jmp
addr16
lea
test
mov
cmps
iret
mov
ds
xchg
test
call
push
in
sub
int
add
adc
push
adc
dec
inc
add
and
(bad)
dec
sti
pop
push
data16
push
aas
lods
cs
xchg
cmp
pop
inc
cmc
and
xchg
ror
dec
loope
jo
xlat
dec
xlat
push
push
loope
stos
hlt
rol
mov
mov
aaa
jecxz
pop
fcom
leave
cmc
call
xor
pop
xor
fwait
xchg
into
int
fadd
jo
add
fimul
addr16
stos
fdivr
sbb
in
mov
imul
loopne
jp
test
mov
gs
jmp
jo
in
int
es
aas
imul
push
xor
sar
(bad)
cmp
mov
xchg
push
xor
mov
sahf
jg
xor
les
jae
pop
test
xchg
and
mov
cmp
add
cmps
scas
ja
mov
mov
ins
jnp
jg
push
retf
xor
ds
mov
and
call
mov
or
mov
xchg
repz
retf
sbb
inc
scas
loopne
dec
int3
test
daa
movs
mov
add
cli
daa
pop
mov
cmc
out
test
add
push
pop
cmp
(bad)
sub
cmp
call
test
dec
sbb
jge
add
adc
xor
jecxz
cmp
test
das
inc
(bad)
mov
imul
dec
mov
in
xchg
push
mov
hlt
icebp
in
out
push
sub
cli
loop
adc
jl
and
xor
or
adc
movs
and
cmps
aaa
and
jnp
arpl
sbb
out
aaa
mov
sbb
xor
xor
and
mov
xchg
icebp
or
mov
pop
mov
xor
rcr
inc
sbb
pusha
ret
jnp
je
leave
cmp
cmp
in
jae
outs
push
out
dec
pop
push
popa
add
or
add
imul
imul
pop
adc
icebp
xor
inc
sub
push
test
mov
imul
hlt
int3
push
dec
pop
and
pop
call
push
cmps
mov
push
sub
fimul
jmp
jo
mov
jns
xchg
xor
jmp
cli
in
jge
xlat
das
jmp
cmps
rol
dec
aam
ins
arpl
sbb
fbstp
ret
movs
add
cmps
sbb
icebp
xchg
jmp
fld
ins
imul
or
and
(bad)
dec
xor
mov
dec
push
jae
mov
push
pop
xsha1
cmps
or
cmp
inc
int
xlat
sub
pop
(bad)
aas
dec
arpl
mov
out
xor
ret
lock
adc
cmp
inc
scas
enter
rcl
aad
pop
mov
les
je
jo
idiv
lea
xchg
mul
or
mov
xabort
in
pop
push
ja
sahf
popf
enter
dec
(bad)
xchg
xchg
(bad)
loope
outs
rcl
and
imul
shl
push
or
xor
mov
scas
xchg
std
jmp
adc
stos
pop
push
mov
fwait
lods
addr16
sbb
inc
popf
cli
(bad)
(bad)
xchg
sbb
push
iret
jmp
ins
jmp
movs
pushf
ss
xor
and
push
data16
stos
or
dec
pop
sub
popf
mov
stos
xor
sti
inc
mov
repz
pop
les
adc
adc
ja
test
push
jno
ror
add
cmc
xchg
sub
or
sbb
nop
push
mov
push
adc
mov
int
fsub
enter
or
movs
or
cmp
cmps
pop
rcl
mov
push
push
fnstenv
enter
or
xchg
or
ins
es
inc
ins
push
mov
fmulp
div
xor
sbb
bnd
or
jae
sbb
sbb
sbb
mov
cmc
jge
and
fcomp
mov
mov
adc
inc
iret
dec
add
push
(bad)
pop
sbb
cwde
push
stos
loope
mov
dec
outs
in
mov
retf
fadd
adc
out
xchg
aam
sbb
sbb
arpl
mov
sbb
sti
xchg
mov
lds
mov
push
push
mov
jp
push
and
popf
push
outs
lods
jne
and
or
dec
fidiv
mov
int3
mov
mov
icebp
dec
and
imul
xchg
or
xor
nop
mov
mov
xchg
add
ffree
cmp
in
pop
(bad)
mov
mov
repnz
add
xor
ss
mov
hlt
in
aaa
xchg
addr16
mov
push
mov
mov
nop
rol
fist
cmps
out
xor
not
in
push
jae
loope
lds
cmc
add
loop
out
imul
jmp
into
and
jo
repnz
mov
add
push
leave
loope
iret
cmp
ins
cmp
pop
adc
fstp
sub
cwde
push
and
jb
or
icebp
(bad)
xchg
clc
and
push
inc
hlt
gs
pop
pop
pusha
mov
movs
(bad)
jns
xchg
test
pop
xchg
je
adc
xchg
jnp
retf
pop
jnp
push
xchg
loopne
or
mov
xor
or
mov
mov
push
bound
and
call
cmp
test
adc
jno
adc
rcl
xor
in
cmp
cmps
fadd
push
in
lods
pop
jp
in
fucomip
mov
inc
test
pop
mov
mov
rcr
mov
outs
clc
ds
(bad)
sub
dec
ds
mov
sbb
push
pushf
addr16
popa
jns
out
rcl
stos
dec
into
mov
fcomi
xchg
push
hlt
xchg
dec
sub
push
pop
dec
(bad)
aam
inc
sahf
push
les
cmp
div
ins
sub
jle
test
ins
dec
push
push
ss
push
cmp
jno
popa
clc
pop
test
in
movs
or
stos
jne
ja
jle
adc
cmps
jne
mov
mov
pop
shl
jbe
cmp
popf
ret
aam
xchg
iret
mov
je
mov
sbb
mov
js
rol
in
push
std
and
jae
mov
es
neg
mov
adc
lods
ret
xor
das
ins
mov
aas
shl
dec
mov
xchg
mov
int
jmp
pop
adc
es
mov
mov
inc
xchg
push
lds
int3
pop
xor
mov
bswap
addr16
(bad)
js
retf
push
aad
jo
lods
imul
rcr
stos
pop
ja
mov
sub
call
ret
fldcw
mov
imul
shl
xlat
jle
dec
or
push
movs
shl
mov
cmp
and
ins
sbb
jb
test
cdq
inc
push
arpl
sti
fidiv
call
(bad)
call
fldcw
loopne
sbb
popa
int
stos
jle
sti
mov
je
pop
and
jbe
push
out
pop
add
jbe
pop
daa
ds
lods
adc
push
and
push
test
shr
and
adc
ja
jmp
dec
jb
sub
ins
jbe
dec
or
jbe
(bad)
(bad)
mov
shr
xchg
pop
outs
sub
movs
xchg
lods
aam
arpl
mov
addr16
or
cmps
adc
gs
jb
(bad)
jl
and
mov
adc
mov
fwait
sbb
sbb
aam
jle
jg
lods
retf
mov
int
sbb
jmp
std
and
cmp
aas
(bad)
dec
xchg
int3
mov
(bad)
shr
push
xor
xchg
fidiv
test
pushf
lods
(bad)
jmp
fsubr
fld
out
loop
jmp
dec
jnp
mov
test
into
into
ret
fdivr
xchg
fbstp
in
and
xchg
mov
fsubr
sub
ins
sbb
mov
mov
(bad)
les
aas
into
es
ds
out
jp
pop
inc
jl
mov
mov
popf
mov
scas
push
mov
mov
das
retf
cld
test
mov
pop
push
vrcpss
cdq
and
push
daa
xchg
or
shr
mov
sub
mov
sar
ja
and
push
add
sbb
sbb
(bad)
or
push
pop
shl
loope
add
daa
xchg
jbe
jo
lea
mov
popf
test
loopne
xchg
jmp
jbe
and
inc
sbb
pop
xchg
lods
cmp
pop
cmps
jb
xor
push
pop
rcl
lock
inc
imul
push
div
ret
(bad)
push
pop
dec
outs
xor
xor
sbb
dec
jmp
mul
out
or
(bad)
sub
mov
jmp
adc
mov
push
sbb
scas
push
rcl
jo
cli
les
pop
xchg
ret
in
fcomp
push
xchg
xchg
xchg
cmp
xor
ss
and
stc
dec
cwde
ss
xchg
rcr
into
inc
neg
add
jecxz
xor
adc
retf
add
fcomi
xchg
dec
enter
fdiv
cmp
stos
add
cmp
push
jnp
add
mov
adc
sbb
popa
call
jo
ret
fld
mov
cmps
mov
ja
scas
mov
mov
cmps
das
jg
int
sub
in
mov
pushf
inc
pusha
cwde
scas
in
popf
stos
inc
push
(bad)
dec
xchg
sub
mov
test
cmp
push
dec
dec
cmp
sahf
(bad)
pop
sub
pop
arpl
stos
xchg
sbb
gs
rcl
fs
les
jbe
dec
movs
push
jecxz
and
adc
cmp
out
jmp
div
inc
mov
loope
cs
ror
imul
(bad)
push
pop
mov
addr16
(bad)
fwait
sbb
fcmovu
test
cmc
pop
sti
cmps
fwait
pop
repnz
cmp
mov
cmovbe
push
sbb
popa
mov
adc
aad
scas
jno
or
xor
and
jo
jmp
vmwrite
xor
pushf
xor
test
jle
sbb
dec
xchg
int
pop
(bad)
pop
dec
pop
cmp
jae
cmp
xchg
add
push
push
cli
sbb
jbe
xchg
mov
nop
add
mov
inc
xor
sub
fbstp
add
fbld
pop
js
adc
imul
enter
shl
xor
out
cmp
jno
iret
fwait
xchg
out
aad
lods
sbb
adc
add
mov
cmps
iret
jg
or
loop
in
data16
pop
out
cld
add
pop
movs
loope
cmp
cmp
sbb
add
inc
jbe
lods
cmc
pop
and
stos
or
jmp
fild
pusha
dec
jo
push
adc
cmps
cmp
and
push
adc
stos
pop
out
lods
mov
(bad)
and
in
pop
mov
shl
(bad)
cdq
hlt
add
push
mov
mov
cmp
enter
or
or
mov
out
lea
js
mov
mov
inc
xlat
push
and
ror
repnz
jl
arpl
mov
scas
retf
out
sub
mov
call
loope
je
jo
pop
rcl
(bad)
pop
fwait
jecxz
sbb
aaa
hlt
pop
xor
add
aaa
xchg
bound
dec
cmps
xchg
lds
push
mov
int3
xor
lahf
xchg
dec
pop
inc
cld
mov
lods
into
fcom
pushf
lods
sahf
or
mov
or
xor
das
hlt
leave
pop
nop
sbb
mov
or
pop
ins
ja
iret
adc
clc
adc
xor
shl
imul
push
cmp
inc
mov
dec
fsubr
loope
sbb
sbb
xchg
sahf
push
mov
jno
stos
out
lahf
cmp
mov
test
push
sub
jo
(bad)
fcomp
(bad)
stc
pop
pop
xchg
jo
ret
pop
dec
out
jg
sbb
cmp
in
mov
ins
(bad)
add
retf
fsub
mov
jnp
cmp
mov
adc
sub
mov
popf
jne
push
xchg
add
inc
or
xchg
add
dec
xchg
jge
lea
cmp
mov
sub
cmc
test
idiv
pop
xor
inc
mov
mov
or
stc
xor
(bad)
mov
aaa
mov
and
scas
push
call
push
jmp
cmps
lahf
out
bound
xor
dec
mov
int3
and
xchg
dec
mov
dec
push
mul
inc
pop
dec
clc
repz
jmp
pop
dec
sbb
fdiv
mov
cmp
stos
adc
shr
pushf
into
test
push
add
cmp
outs
and
xchg
xlat
pop
xlat
dec
jmp
adc
jecxz
pop
dec
lods
push
jge
out
jg
loope
std
mov
inc
jmp
jp
sbb
sar
lods
sub
sub
dec
push
cmp
and
sub
add
mov
aam
push
retf
adc
leave
adc
or
popa
jg
enter
rcl
pop
xor
dec
sbb
lahf
cmp
test
jge
fwait
pop
adc
cmp
nop
pop
dec
leave
mov
outs
das
repz
cdq
clc
fisttp
test
inc
sahf
pop
or
pop
(bad)
xchg
leave
test
add
inc
inc
cmp
fadd
in
scas
mov
jp
ja
(bad)
ds
popa
rol
mov
xor
mov
sub
imul
pop
dec
cmp
mov
mov
sub
xchg
leave
(bad)
cs
jecxz
mov
(bad)
jp
dec
daa
out
adc
in
stc
jnp
cli
add
ins
fwait
and
push
je
add
das
push
cmp
push
xchg
and
jg
mov
jl
jo
lahf
mov
sahf
aam
mov
mov
dec
push
aad
cmps
aad
shl
sub
xchg
fist
das
ficom
icebp
sbb
xchg
data16
repz
xor
scas
adc
push
mov
push
inc
mov
inc
add
sub
call
loope
jno
dec
or
xchg
js
add
into
or
imul
pop
icebp
mov
adc
fdivr
leave
adc
or
cmp
ja
mov
(bad)
push
test
xor
mov
push
adc
pop
int3
jnp
sub
lahf
loopne
adc
dec
xlat
jne
inc
jecxz
ins
dec
int
stos
mov
fs
cmps
ja
sbb
loopne
outs
cmp
iret
repz
sbb
dec
stos
pop
mov
cmp
dec
pop
push
outs
inc
movs
stos
dec
shl
ins
inc
call
arpl
dec
mov
out
sti
mov
jb
movs
cld
pushf
dec
xchg
xchg
scas
push
loope
pop
push
sub
cmp
pop
push
pop
aad
(bad)
jnp
addr16
cli
test
mov
dec
mov
test
jmp
loop
xor
push
jbe
mov
add
mov
push
xchg
shl
pop
mov
xchg
loope
lods
dec
push
(bad)
fisub
inc
jle
mov
sub
daa
mov
sbb
arpl
cmp
jmp
mov
mov
(bad)
repz
jmp
xchg
and
aaa
push
lock
add
std
cs
(bad)
ja
add
xlat
int
mov
dec
adc
fmul
xor
mov
sbb
xchg
mov
arpl
and
aaa
jecxz
sti
inc
outs
inc
cmps
retf
mov
inc
or
in
cmps
rcr
dec
mov
add
shl
sbb
hlt
ja
sbb
in
das
push
stos
icebp
mov
lods
lldt
lods
jns
adc
ss
rcr
inc
pop
int
xor
in
in
push
sbb
mov
add
adc
icebp
mov
int
out
movs
loop
int3
cmp
popf
mov
pop
cmp
cmp
pop
fwait
aad
pop
xchg
and
add
push
or
shl
adc
stos
ins
xchg
mov
mov
xchg
pop
mov
popf
ffree
pop
int3
jp
nop
out
sub
push
ss
movzx
add
add
add
fisttp
into
loope
xchg
xor
(bad)
scas
cmps
in
mov
dec
shr
fst
jp
inc
adc
xchg
lods
jmp
cmps
aad
pusha
xchg
lods
sub
push
pop
add
pop
xchg
cli
ret
adc
dec
add
pop
and
fbld
xchg
(bad)
sub
xchg
add
ins
inc
add
and
cmps
add
sbb
outs
daa
ret
push
fidivr
xor
fcos
je
inc
fldcw
inc
sbb
adc
daa
mov
popf
enterw
mov
shl
imul
int3
jo
mov
jg
sub
xchg
push
sbb
aad
fsub
or
sbb
adc
jl
mov
mov
pop
test
das
add
or
adc
pop
shl
loopne
dec
scas
repz
ss
shr
add
lahf
mov
adc
ins
mov
push
out
push
adc
cmp
jae
mov
cmc
in
out
xchg
xchg
daa
test
adc
mov
aaa
aaa
repz
xchg
sbb
push
imul
repz
popf
adc
rcl
mov
or
push
or
sub
xchg
add
loope
fild
or
mov
pop
movntps
and
(bad)
hlt
cmp
call
pop
cdq
ficomp
sti
retf
xchg
adc
ret
push
jmp
cmp
lea
in
cmp
es
xchg
leave
cmp
das
popa
push
push
push
mov
mov
cmp
pop
jg
sub
push
xor
xchg
inc
inc
pusha
dec
or
mov
push
add
mov
mov
sbb
push
inc
jo
push
leave
add
test
dec
push
dec
cs
jae
pop
into
cmps
popf
mov
cmp
push
in
std
cld
ins
xchg
dec
xchg
dec
push
and
jne
stc
int
shl
mov
fcom
aas
or
retf
lods
stos
mov
hlt
jne
mov
into
xor
mov
je
call
shr
sti
(bad)
popa
ret
shl
cli
leave
add
pop
and
dec
lods
enter
scas
mov
mov
jecxz
sub
mov
fs
and
test
sub
mov
jmp
aam
xchg
fild
xor
dec
mov
shl
jg
in
xchg
sbb
inc
dec
xchg
pop
mov
sub
adc
ins
and
in
pop
fmul
mov
call
xchg
sbb
and
dec
xchg
ret
adc
cmps
push
push
sub
cwde
out
xor
cli
(bad)
test
out
fldcw
aaa
sbb
jg
jle
add
jmp
daa
inc
sbb
pop
inc
xor
add
mov
lock
jnp
ss
pusha
rcr
hlt
cmps
pop
js
scas
popa
jmp
adc
repnz
mov
test
adc
cwde
pop
mov
xor
add
out
mov
int
sub
jo
or
pop
cwde
outs
adc
inc
push
fistp
push
and
sub
stc
addr16
xor
sbb
xor
inc
rcl
mov
pop
adc
pop
inc
jns
cmp
cmp
sub
mov
pop
lods
cmp
(bad)
popf
sti
sar
std
push
dec
mov
js
(bad)
(bad)
or
jp
in
xor
add
(bad)
mov
mov
inc
idiv
sub
stc
aam
dec
(bad)
fucomp
xlat
cmc
xlat
sbb
push
dec
xchg
scas
(bad)
sti
xchg
xor
addr16
mov
sar
in
xor
ins
sub
leave
test
repz
or
cmp
cmp
dec
mov
les
fstp
mov
jge
xchg
retf
lahf
jp
scas
pop
adc
out
cmp
les
jbe
cdq
adc
ror
cmp
ins
xchg
scas
and
pop
sub
inc
(bad)
cmp
shl
add
inc
test
cmp
mov
or
add
sub
nop
inc
inc
jbe
(bad)
dec
clc
inc
mov
aas
lds
pop
hlt
std
mov
retf
ds
mov
or
fimul
pop
push
sti
sbb
stos
dec
adc
fdivrp
iret
(bad)
(bad)
mov
test
xor
cmovg
add
aaa
es
ja
xchg
call
adc
fdiv
xor
lds
loopne
sub
ret
std
clc
aas
adc
or
pop
ror
cmc
inc
jb
rol
gs
movs
in
enter
test
fs
inc
jb
xchg
add
xchg
fmul
setns
add
lock
cwde
in
call
inc
shl
or
and
mul
xor
out
sbb
jbe
sti
test
les
(bad)
jae
cmps
loop
outs
mov
xor
dec
popa
or
rol
cli
cld
int3
mov
dec
lods
fst
pop
or
adc
cmps
and
inc
dec
xor
mov
sbb
popa
cmps
mov
test
call
mov
test
mov
and
cld
les
ins
fdivr
mov
nop
xlat
scas
mov
sbb
xchg
arpl
sti
div
(bad)
pop
mov
sub
dec
add
jmp
pop
mov
push
lahf
cmp
cmp
xchg
dec
mov
sub
out
sub
dec
mov
fldenv
cmp
retf
fwait
pushf
addr16
jg
addr16
push
sbb
sahf
daa
jb
sub
shl
not
mov
pushf
fstp
jmp
lock
push
push
or
push
popf
xchg
sahf
adc
and
and
xor
jge
dec
stos
dec
aaa
jo
sub
retf
(bad)
repnz
inc
add
iret
les
ds
aaa
and
or
(bad)
mov
clc
mov
(bad)
xor
or
dec
push
pop
cld
clc
jb
stos
and
lds
hlt
and
mov
loopne
xor
push
or
clc
rol
sbb
hlt
mov
ins
imul
push
scas
cmp
mov
std
sub
sbb
aad
jmp
lods
sahf
or
mov
shl
xor
retf
mov
jae
fwait
enter
push
idiv
repz
daa
ins
cmps
lods
jmp
(bad)
ror
sbb
inc
rcr
or
jae
fdiv
jae
cmps
mov
jns
(bad)
xchg
xchg
inc
aaa
idiv
pop
or
cwde
pop
or
les
bound
or
retf
pop
loope
push
popf
jecxz
loopne
pop
hlt
aas
sbb
cmc
fistp
inc
div
jns
add
leave
xchg
jp
lahf
xchg
add
in
jne
frstor
dec
dec
xchg
int3
push
shl
retf
jge
dec
popa
pop
popf
test
pop
add
adc
push
mov
cmps
jne
push
out
(bad)
in
addr16
jmp
mov
and
mov
cdq
fiadd
mov
jae
inc
pop
cmp
pop
dec
sbb
lods
stc
push
mov
fucomi
xchg
sahf
push
(bad)
cmp
out
retf
sbb
lods
dec
push
popa
mov
adc
inc
cmp
push
or
xlat
cmps
ss
retf
test
push
imul
lods
int3
adc
adc
scas
mov
jg
adc
imul
and
pop
or
call
or
push
push
jmp
aas
sub
scas
fs
push
mov
mov
mov
in
mov
jmp
and
test
sbb
inc
das
mov
sbb
mov
aas
lea
leave
fisttp
xor
jmp
inc
call
and
sub
mov
jecxz
sub
mov
mov
dec
mov
hlt
sub
aaa
inc
or
pop
imul
inc
mov
inc
inc
in
fild
add
inc
xor
sub
pop
imul
jmp
icebp
popa
add
movs
xor
push
hlt
(bad)
or
xor
dec
push
(bad)
rcl
pop
lds
les
dec
adc
nop
xor
push
mov
(bad)
cmp
cmp
dec
js
lea
adc
push
out
adc
neg
cmp
test
add
into
(bad)
out
mov
pop
inc
int3
js
xor
dec
cwde
adc
shr
cli
fwait
out
js
xchg
adc
and
imul
xchg
xor
pop
sbb
int
nop
fdiv
push
or
inc
mov
pushf
lods
jl
inc
push
inc
loop
shl
mov
sbb
stos
xchg
jae
or
pop
stos
pop
jbe
out
cmps
sahf
nop
rcl
test
imul
test
add
dec
call
mov
addr16
mov
cmps
test
cs
shl
add
cmp
jecxz
cli
and
pop
loope
jmp
test
arpl
or
shl
mov
mov
adc
(bad)
mov
mov
stos
int
or
outs
out
mov
test
pushf
ficomp
xchg
test
mov
mov
push
ss
fst
cld
loop
rcr
jg
xor
addr16
in
aaa
movs
and
dec
jle
(bad)
adc
xor
xor
(bad)
rcl
sub
(bad)
xchg
aam
mov
(bad)
cmc
pop
inc
sbb
jo
push
pop
ret
cld
cmps
lds
movs
dec
das
hlt
pop
pusha
in
dec
sub
sar
and
or
xchg
ins
inc
fisttp
stos
retf
mov
ss
lods
inc
jg
push
aam
sbb
mov
pop
sbb
push
out
fiadd
sbb
jmp
xchg
pop
test
cmp
arpl
scas
mov
cs
push
in
jg
lods
cmp
mov
dec
pop
clc
(bad)
jmp
mov
add
adc
pop
sub
pop
test
movs
fmul
pop
mov
loopne
in
pop
sbb
test
sub
lahf
pushf
push
mov
sub
jne
jbe
icebp
add
cmp
mov
or
shr
xchg
in
test
aaa
arpl
out
(bad)
in
mov
ja
mov
or
pop
test
clc
icebp
enter
mov
dec
mov
jge
jl
popa
push
mov
(bad)
mov
std
adc
or
mov
push
add
ret
inc
pop
sbb
add
add
pop
repnz
cdq
test
popa
pop
mov
int3
adc
fldenv
rol
lock
inc
and
dec
js
adc
mov
pop
fnstsw
mov
cmps
in
stos
xchg
pop
out
pop
dec
aad
rcl
xchg
movs
jne
pop
or
or
test
mov
mov
dec
jp
hlt
add
sbb
mov
je
mov
cmps
push
jge
enter
loope
rcl
add
clc
fsub
add
xor
xor
push
xchg
jnp
jg
pop
jecxz
aam
or
xchg
cmp
jge
stos
sahf
call
out
dec
sbb
gs
shl
jnp
les
cmc
jmp
cs
push
into
or
fmul
push
pop
or
jb
cli
(bad)
cwde
sahf
fisttp
sub
push
out
data16
jne
jg
repz
repz
cwde
dec
(bad)
ror
gs
int
add
cmp
or
sub
mov
sub
adc
mov
fild
xor
imul
js
daa
enter
jne
inc
test
or
shl
pop
xchg
lahf
sahf
movs
cmps
aaa
inc
dec
push
push
fist
sbb
inc
pop
jbe
jnp
inc
jno
mov
inc
cmp
rcl
pop
mov
imul
ins
scas
bound
cmp
aas
mov
mov
jge
add
add
cmc
div
push
inc
pop
scas
jmp
xchg
push
lods
inc
repz
cmps
xchg
pop
inc
mov
dec
pop
sub
or
jb
sub
mov
test
jmp
push
imul
mov
gs
(bad)
dec
into
jge
push
movs
int3
mov
add
mov
pop
jmp
in
fild
test
fidivr
mov
aad
xlat
and
xor
sub
or
pusha
outs
gs
push
les
stos
lods
daa
sub
(bad)
pusha
xchg
ins
xchg
inc
(bad)
mov
cmp
icebp
mov
fs
and
xchg
mov
popf
aaa
push
jg
dec
mov
xor
loopne
pushf
push
mov
jne
lods
das
xor
ss
in
mov
xchg
outs
pushf
or
mov
push
mov
outs
ffree
imul
sub
sub
shl
mov
pop
fcmovb
ss
out
andps
imul
dec
aam
aaa
adc
xchg
xor
jns
adc
or
(bad)
out
jbe
push
push
retf
dec
hlt
cdq
mov
fcom
sub
imul
jns
inc
push
arpl
sbb
dec
rcl
test
adc
dec
das
cmp
fld
jne
dec
cld
jmp
dec
jg
and
push
dec
mov
xchg
and
in
mov
jp
xchg
int3
xchg
call
and
scas
cmp
fwait
in
dec
mov
mov
xchg
outs
ins
sbb
cld
stos
ds
inc
pop
js
adc
lods
sti
mov
pop
out
cmp
fdivr
jae
mov
or
jl
fwait
and
xor
or
lds
mov
jmp
jne
xchg
(bad)
addr16
shr
jp
add
mov
mov
and
xchg
pop
ret
shl
sub
aas
hlt
aam
push
loopne
adc
xlat
shl
xlat
xorps
xchg
jbe
xor
cmovg
adc
cmps
xchg
stos
push
pop
scas
push
inc
mov
jmp
mov
jmp
popa
cld
mov
mul
adc
sub
ss
sub
inc
sub
arpl
dec
jl
pop
push
ret
mov
outs
pop
ja
cwde
ins
in
mov
repnz
ds
in
add
enter
sahf
or
cld
or
add
fnstsw
jae
xchg
mov
mov
jns
sbb
sub
mov
(bad)
bound
arpl
sub
push
retf
cdq
or
jg
repnz
fcomi
sbb
test
mov
or
or
xchg
xchg
mov
mov
cmp
mov
or
jmp
sbb
jl
push
push
pushf
push
cdq
pop
imul
cli
jmp
xor
sub
out
ret
xor
cmps
movs
data16
ss
inc
ficomp
ror
cli
cmp
cmps
aam
lahf
xchg
aam
fwait
sub
mov
sbb
int
fcmovbe
enter
or
mov
enter
xchg
aas
pop
mov
mov
int
(bad)
jecxz
sub
nop
cmp
and
arpl
cwde
mov
push
sub
inc
clc
adc
cmps
xchg
jge
into
pop
(bad)
(bad)
adc
loopne
js
outs
adc
bound
mov
jp
popf
out
pop
sahf
sbb
pminsw
mov
sub
je
pop
mov
push
cmp
pop
sti
mov
gs
adc
inc
stc
popf
cmp
push
les
add
add
dec
jmp
jp
pop
mov
aad
xlat
sbb
pop
push
sub
mov
jmp
sub
mov
je
dec
fwait
cmp
imul
call
adc
(bad)
push
add
push
mov
hlt
adc
movs
out
and
cmp
xor
xlat
lea
mov
dec
(bad)
xor
add
call
add
aam
leave
fwait
inc
rcr
test
push
ja
retf
sbb
jecxz
push
pop
adc
mov
or
pop
mov
push
std
das
cwde
cwde
xor
cmp
sub
or
pop
inc
ins
sub
add
jge
adc
scas
and
xchg
retf
call
cmps
inc
imul
push
idiv
pop
mov
pop
ffreep
sti
cmps
or
cdq
sbb
xchg
push
pop
mov
loopne
add
scas
enter
in
inc
jle
xchg
mov
inc
mov
sub
test
add
and
mov
cmc
adc
push
test
mov
repnz
cmp
fwait
adc
fsubr
mov
stos
cwde
and
js
sbb
or
sub
icebp
or
daa
inc
frstpm(287
loop
xor
lock
pusha
fiadd
xchg
fcom
(bad)
out
jne
pop
pop
test
inc
add
(bad)
and
and
mov
enter
aad
movs
pop
cwde
jbe
test
cmps
nop
sub
xor
xchg
out
(bad)
(bad)
int
and
mov
mov
aaa
fsubr
bswap
mov
xor
sub
xchg
inc
mov
mov
fild
(bad)
popa
popf
in
leave
push
pop
das
push
xchg
rcl
xchg
daa
or
push
pop
push
and
fldcw
arpl
icebp
ds
cmp
outs
xor
jg
imul
shl
fcomp
ror
outs
test
sub
enter
and
and
mov
cmp
cmps
out
je
(bad)
cmp
(bad)
call
xchg
fidiv
or
into
scas
push
into
test
or
outs
movs
fistp
cwde
adc
and
imul
xor
adc
rcl
mov
lea
mov
xchg
cmp
int3
push
jnp
xchg
cli
push
movs
jl
ror
pop
xchg
mov
cmp
imul
neg
rcr
sbb
mov
in
jecxz
ficomp
sub
add
pop
mov
aad
sub
and
add
sbb
jo
cli
scas
sbb
add
cmps
(bad)
mov
mov
add
ds
sbb
leave
push
fidiv
gs
js
int3
ss
or
mov
push
cli
inc
data16
sahf
hlt
xor
fadd
cmp
loopne
(bad)
cmp
inc
cmps
iret
xchg
cmp
jl
pushf
in
mov
data16
lahf
enter
pop
retf
aaa
or
shr
xor
dec
jl
jg
push
push
aas
cld
pop
cmp
mov
cmp
push
and
std
inc
call
cmp
movs
cld
dec
pop
clc
in
sbb
test
dec
mov
jl
rcl
or
pop
fsub
push
inc
xor
xchg
mov
retf
nop
loop
mov
iret
and
and
and
test
pop
scas
sbb
jmp
aad
xor
jo
add
hlt
gs
loopne
fadd
out
jge
js
xchg
add
repnz
lods
movs
mov
es
not
scas
mov
and
not
fwait
add
and
sahf
ja
sub
dec
dec
data16
xor
sti
and
jnp
push
dec
fidiv
sar
pop
pop
dec
sub
iret
pop
jb
ret
mov
push
mov
mov
push
jne
xor
cmp
out
push
retf
adc
ss
add
inc
inc
xchg
retf
or
mov
ss
and
jnp
and
add
in
in
call
rcpps
hlt
inc
int3
enter
movs
ja
and
jno
int3
jne
mov
xor
ss
mov
adc
ja
rol
mov
push
lods
jb
mov
in
mov
mov
jb
stos
cmps
cwde
outs
lea
mov
xchg
xchg
mov
fwait
sub
cmp
jp
test
(bad)
out
mov
(bad)
mov
cmp
mov
shl
push
or
or
or
aad
pop
std
retf
jle
cmp
xchg
cmc
mov
inc
jb
ds
rcl
inc
mov
lahf
cmp
dec
push
add
push
xchg
pop
and
adc
sti
pop
cmps
(bad)
sub
cmp
movs
inc
lahf
arpl
jae
in
idiv
pushf
das
add
jg
data16
mov
inc
sub
(bad)
pop
test
inc
mov
out
test
das
call
dec
shr
pop
mov
test
in
push
sbb
and
push
jb
mov
xor
sbb
es
movs
dec
movs
add
retf
mov
ror
xor
cmc
fidiv
xor
sbb
jl
mov
(bad)
mov
ds
aam
ss
in
loope
dec
hlt
or
(bad)
out
mov
loop
cdq
jl
lock
pop
into
pop
lods
scas
das
adc
mov
addr16
xchg
(bad)
mov
adc
adc
mov
ja
adc
gs
in
clc
inc
cdq
mov
jg
stos
xor
push
xchg
pop
hlt
add
leave
mov
push
push
xchg
adc
cld
pop
adc
adc
and
sar
loop
inc
mov
ficomp
cld
cs
push
inc
xor
pop
mov
sbb
pop
out
outs
iret
mov
sbb
ds
jae
cmp
mov
or
lock
xor
scas
mov
mov
pop
jl
cld
shl
fisubr
xor
leave
sbb
stos
inc
xchg
retf
pop
pushf
add
aam
jmp
xlat
sub
sub
(bad)
and
test
rcr
ins
out
jecxz
int3
dec
int3
popf
repnz
addr16
push
sub
xor
cli
call
fdivrp
enter
call
pop
aaa
sbb
jno
xor
xor
mov
mov
sub
lea
popa
lea
loopne
dec
jae
xor
pop
dec
sub
mov
mov
and
fisubr
enter
cld
push
dec
mov
sbb
sbb
cmp
scas
cmp
mov
cmp
out
out
adc
addr16
popf
ds
(bad)
ficomp
rcr
outs
push
xchg
xor
movs
(bad)
mov
fidivr
add
push
xchg
lahf
leave
jecxz
adc
in
in
add
test
ja
outs
and
add
retf
or
ficomp
dec
(bad)
dec
and
push
cmp
mov
add
je
push
aas
in
lods
mov
sub
mov
jb
data16
sbb
mov
inc
mov
(bad)
adc
pop
data16
fs
add
enter
push
inc
push
jl
xor
cs
outs
adc
xor
dec
push
mov
out
ins
add
push
test
or
inc
adc
adc
mov
gs
(bad)
cli
inc
es
dec
jnp
shr
jns
add
les
add
mov
adc
or
dec
test
clc
inc
fsub
inc
and
cdq
mov
and
arpl
out
jg
sub
imul
js
xchg
cwde
inc
pop
test
pop
(bad)
(bad)
jmp
fs
and
pop
stc
loopne
(bad)
outs
das
or
(bad)
arpl
out
outs
push
test
test
add
call
ins
ss
stos
xor
or
loope
loopne
ins
push
in
aam
into
mov
jae
and
add
retf
loop
mov
hlt
mov
(bad)
into
mov
outs
shl
sahf
jnp
mov
out
adc
lea
inc
or
inc
push
sar
test
mov
leave
add
add
adc
(bad)
dec
nop
lock
inc
and
into
pop
icebp
mov
cmp
bound
xor
or
fld
pop
mov
pop
in
cmp
jb
mov
dec
dec
jg
dec
std
test
mov
sub
or
out
into
xor
dec
scas
movs
sub
in
ja
xor
movs
out
cmp
gs
inc
popf
and
aad
xor
aaa
in
xchg
out
outs
jnp
pop
dec
push
sub
add
push
scas
ffreep
inc
mov
cmps
(bad)
pop
push
sub
mov
cmp
xchg
or
mov
sub
call
pop
mov
sbb
sub
or
sahf
cmp
cmp
pop
leave
loope
cs
mov
jbe
dec
xor
jae
stos
push
sub
inc
es
lahf
mov
(bad)
ds
(bad)
sbb
add
neg
outs
scas
mov
inc
mov
movs
in
sti
inc
inc
call
lock
std
xchg
test
cli
mul
arpl
and
adc
daa
pop
mov
ds
mov
or
ins
sub
push
and
jae
mov
int
cmc
test
dec
fs
and
cmps
sar
icebp
xlat
or
fidivr
mov
mov
loopne
add
adc
scas
int3
dec
inc
pop
cmps
mov
mov
rcr
cli
xchg
std
jo
adc
in
lds
xchg
cmps
rol
add
xor
shr
push
or
mov
pop
call
sbb
xchg
out
xor
inc
stos
arpl
stos
add
shl
ins
xor
xor
mov
sti
ret
sbb
ss
outs
sub
dec
mov
or
lods
push
sub
mov
cmp
stos
iret
push
add
sub
or
cmp
daa
js
adc
out
push
jne
popf
ss
mov
cmps
add
add
inc
loopne
xchg
ja
adc
push
cmp
sbb
inc
cwde
mov
lahf
lahf
retf
inc
fadd
lea
xor
mov
adc
sub
or
mov
lock
clc
pop
jmp
push
ins
ins
pop
push
rol
daa
ja
mov
xor
mov
pop
push
test
aad
inc
xor
out
in
loop
movs
cmp
ds
out
pop
rol
pop
jae
je
loopne
push
mov
out
sub
mov
xor
fild
sti
sub
pusha
mov
lock
pushf
cmc
cs
fdiv
jecxz
mov
dec
inc
dec
(bad)
pusha
or
retf
or
and
pop
jno
mov
fnstcw
ins
mov
mov
lods
xchg
jb
scas
es
retf
xor
xor
add
push
mov
imul
out
adc
jo
rcr
sbb
loop
sbb
jns
cmps
mov
jmp
popa
jg
sub
out
lahf
mov
sub
or
jg
repnz
in
mov
imul
push
and
fmul
adc
(bad)
and
push
pop
test
and
jno
dec
jo
fimul
add
int3
adc
sub
mov
ja
add
push
xchg
cmp
retf
xchg
push
addr16
loope
out
rcl
stos
daa
shl
rol
scas
mov
lahf
popa
adc
mov
push
push
mov
jae
xchg
pop
mov
fnsave
cmp
ins
pop
xchg
add
push
jbe
icebp
faddp
push
aas
or
dec
or
inc
cmp
pop
xchg
inc
fs
cmp
popa
mov
jp
ds
repz
mov
jg
add
shl
jmp
mov
dec
(bad)
mov
lahf
in
xchg
push
in
leave
adc
xchg
fdiv
daa
aam
sbb
enter
stc
xchg
call
and
push
dec
and
mov
sbb
(bad)
test
fisub
sub
retf
imul
dec
push
repnz
sbb
pop
push
inc
inc
sbb
push
addr16
mov
je
mov
or
sbb
arpl
inc
mov
jg
aas
lods
imul
cmp
rcl
loope
scas
iret
fs
lods
call
mov
shl
mov
jbe
and
jno
ds
adc
inc
mov
stc
cmp
data16
cld
jmp
jp
and
mov
inc
dec
mov
xor
in
fnstcw
dec
sbb
inc
add
call
push
push
clc
imul
rcr
add
pop
or
cmps
ficom
xchg
jg
jb
cmc
dec
add
add
mov
cmp
mov
dec
and
imul
fwait
inc
and
add
inc
cmp
add
sti
add
addr16
inc
jmp
ss
push
mov
out
popf
sbb
call
mov
push
add
dec
das
ja
sbb
push
dec
sbb
fdivr
jg
mov
jge
cwde
dec
mov
dec
(bad)
xlat
cwde
sbb
movs
mov
arpl
xchg
data16
push
loope
xchg
inc
mov
inc
mov
inc
movs
mov
popa
and
fld
mov
and
ins
and
sti
arpl
mov
hlt
int
dec
outs
jno
sbb
cs
fild
push
inc
jmp
adc
or
jns
mov
out
sbb
out
inc
(bad)
add
ja
retf
inc
jne
mov
add
mov
repz
sub
gs
inc
dec
movs
lds
dec
bound
movs
xchg
fcomp
add
test
lahf
push
mov
inc
ret
sar
(bad)
jmp
icebp
pop
jb
stc
stos
mov
mul
sahf
fnsave
cmp
vfnmsub132pd
rol
jne
(bad)
ror
pop
cs
mov
ins
mov
fstp
cld
mov
ja
dec
call
push
push
je
xor
inc
or
jns
jp
jb
ja
(bad)
cld
xchg
mov
add
js
repz
sub
add
inc
jmp
lds
clc
xchg
xlat
dec
mov
and
in
mov
fnstcw
mov
cmp
adc
je
shl
mov
lods
sbb
inc
push
cmp
pop
jecxz
add
inc
adc
shr
mov
dec
xchg
mov
and
sahf
(bad)
mov
pop
jne
inc
jp
hlt
push
xlat
mov
addr16
sub
mov
or
ret
loop
mov
lods
xor
xchg
fwait
test
xchg
mov
outs
cmps
fidivr
jns
mov
mov
lods
aam
add
out
jg
enter
cdq
pop
fiadd
movs
inc
mov
pop
outs
add
sti
mov
inc
jl
ja
cmp
mov
(bad)
fst
in
into
pop
scas
adc
mov
repnz
outs
sar
mov
not
fidiv
cmp
cmp
scas
fisttp
test
pop
sar
outs
xor
js
sbb
or
sbb
xor
jp
std
fcom
cwde
ds
push
mov
loope
addr16
(bad)
aam
or
int3
gs
repnz
cld
dec
jnp
lock
jmp
mov
rcr
push
in
out
sbb
or
ret
or
or
pop
and
mov
in
inc
ret
inc
aam
dec
loopne
fild
fucomi
cmps
fiadd
out
call
or
(bad)
call
sub
xor
inc
jae
mov
sahf
es
jg
push
aaa
xor
shl
enter
and
fsubr
pop
inc
sbb
xor
sbb
adc
addr16
dec
dec
(bad)
mov
xchg
xchg
fst
and
loop
add
mov
sar
sub
ss
sbb
jecxz
test
mov
xchg
js
movs
sahf
cwde
dec
or
cs
xlat
out
inc
stc
rcr
shl
add
lods
out
out
add
and
test
js
mov
adc
xchg
dec
dec
mov
or
aaa
(bad)
jp
ffreep
nop
shl
xchg
or
mov
pop
ds
pop
cmp
movlps
sbb
arpl
lea
lds
(bad)
push
(bad)
test
push
cdq
push
mov
inc
lods
jmp
mov
icebp
dec
push
rep
ret
mov
and
pushf
add
sti
jle
dec
mov
inc
and
hlt
add
cmp
adc
and
sub
jp
call
outs
dec
and
fnstenv
sbb
mov
sti
mov
jno
icebp
dec
cmp
add
mov
ins
pop
cmp
inc
jecxz
(bad)
push
scas
inc
in
(bad)
test
xor
dec
je
mov
dec
les
loop
sub
push
hlt
cmp
mov
mov
out
ret
mov
test
add
sbb
mov
fsub
pop
push
in
int
mov
aam
cwde
imul
enter
cmps
ret
stc
es
jmp
rcl
push
adc
ss
lock
xor
std
out
movs
mov
jmp
int
cmp
fidiv
pop
jle
enter
dec
cmps
fistp
nop
mov
pop
idiv
pop
outs
stos
push
cmp
or
daa
add
test
arpl
cmps
mov
(bad)
jg
cmps
push
push
out
gs
fwait
push
iret
aaa
jl
in
pop
pushw
adc
pushf
aaa
or
and
mov
shr
lahf
je
addr16
ror
lock
imul
adc
(bad)
mov
aaa
pop
push
(bad)
pop
repz
fstp
mov
call
ins
movs
cdq
pop
es
popa
mov
stc
adc
xchg
add
lods
mov
repnz
ins
out
test
cmp
pusha
stos
xor
mov
adc
push
fwait
aas
repz
fnstenv
push
mov
mov
aad
js
pop
imul
jecxz
mov
ja
enter
cwde
mov
cmps
fnstcw
and
adc
cmp
push
in
push
push
(bad)
xor
movs
and
jmp
addr16
xor
ss
movaps
mov
xor
jae
xor
xor
shl
mov
sub
lds
mov
bound
fwait
inc
(bad)
hlt
lds
loop
fs
mov
es
lahf
sbb
jnp
xchg
xor
sub
movs
jne
mov
xchg
add
add
fistp
in
xchg
es
aas
fsubr
and
popf
xor
in
or
inc
and
mov
sub
push
int
or
cmp
push
cwde
and
mov
adc
fdivr
cmp
nop/reserved
xchg
lea
and
repz
jg
fistp
sti
xchg
inc
add
pop
imul
stos
dec
push
sbb
mov
scas
mov
stos
cld
dec
movs
sbb
xchg
imul
add
sahf
retf
inc
push
adc
push
cmc
sbb
loope
jg
inc
mov
imul
adc
les
movs
mov
mov
out
arpl
dec
or
jl
sub
inc
test
and
test
repnz
push
sub
stos
mov
push
jp
(bad)
or
adc
jle
sub
fnstcw
dec
xor
push
jb
mov
into
lock
add
dec
shl
sbb
fisttp
adc
inc
dec
jle
popf
popa
mov
mov
sti
xchg
inc
dec
int
adc
lods
(bad)
sti
xchg
mov
add
and
mov
mov
jmp
in
xor
cmp
neg
jg
sar
sub
mov
mov
mov
xchg
(bad)
icebp
adc
inc
xchg
popf
mov
push
scas
pop
ret
ret
inc
out
in
pop
push
dec
mov
and
cmp
xchg
daa
out
and
push
mov
jae
push
adc
pop
int3
dec
scas
add
mov
jmp
xlat
scas
(bad)
stos
clc
popa
push
xor
xchg
sbb
push
sub
outs
jo
std
(bad)
les
add
aas
xor
es
jge
lock
(bad)
or
dec
lahf
sub
dec
ror
nop
in
mov
add
or
dec
inc
mov
sbb
fdivr
push
fmul
and
in
mov
or
push
add
mov
pop
out
lds
int
int3
ffreep
je
aam
cs
rol
push
xchg
cmp
xchg
sahf
jno
ins
push
pop
or
inc
(bad)
push
add
inc
xor
xor
imul
sbb
in
or
sbb
xor
aas
mov
ds
adc
cmp
xchg
aaa
in
adc
xor
pop
xchg
push
jne
dec
loope
adc
mov
sar
dec
or
pop
xor
mov
or
cmp
sub
(bad)
push
adc
push
sbb
retf
ss
xor
mov
pop
jp
dec
mov
and
ficom
repnz
fbstp
cmp
in
outs
xor
cmp
pmulhuw
hlt
ins
cmp
inc
cwde
jmp
aam
mov
ror
pop
and
pop
movs
xor
jecxz
mov
idiv
cdq
addr16
aam
stos
jge
push
sbb
sub
pop
test
lods
inc
cmps
mov
push
mov
fdivrp
inc
fdivp
js
in
and
sub
ja
into
xor
inc
mov
inc
xor
nop
and
sbb
sbb
test
pop
aaa
mov
mov
test
(bad)
fdivr
xchg
fmul
cld
jbe
mov
xchg
cmp
(bad)
aad
scas
sub
fs
mov
inc
mov
or
(bad)
loop
sub
repz
sar
cmps
adc
fwait
mov
adc
in
retf
dec
adc
jge
pop
clc
sbb
fnstcw
aas
pop
fnsave
sub
scas
mov
add
xor
(bad)
sub
sahf
fs
inc
dec
add
push
outs
push
or
jge
jae
xor
popf
pop
mov
mov
mov
add
pusha
xchg
arpl
mov
(bad)
mov
sar
mov
or
mov
pusha
call
add
stc
cmp
(bad)
xlat
dec
lahf
mov
lahf
lods
retf
pop
pop
sbb
push
cmps
or
push
outs
pop
jo
sub
mov
adc
movs
xchg
out
mov
push
lods
call
adc
dec
jo
in
dec
adc
stc
dec
dec
ficomp
and
int
sbb
sub
out
popf
not
ds
cli
inc
cld
xor
ficom
inc
and
(bad)
cmc
and
iret
jo
daa
js
dec
ins
clc
pop
pushf
cs
dec
hlt
xchg
inc
leave
cmps
inc
add
mov
mov
cmps
dec
aas
adc
data16
call
jmp
nop
loopne
call
shl
aas
mov
cmp
mov
sbb
mov
push
dec
ret
stos
pop
inc
in
xchg
(bad)
jmp
call
jno
test
adc
push
(bad)
loop
dec
psraw
inc
cmp
sbb
sbb
add
mov
scas
and
movs
(bad)
in
out
aas
dec
addr16
lahf
lods
test
movs
imul
dec
add
mov
jns
inc
mov
mov
fwait
mov
and
mov
mov
dec
add
xchg
aam
fstp
mov
or
aad
cmc
adc
xchg
stc
and
inc
stc
adc
sbb
aad
push
jnp
sub
add
mov
mov
rol
inc
mov
dec
sub
clc
or
leave
std
hlt
push
inc
sub
cmp
xbegin
xor
xchg
neg
aaa
mov
push
xchg
mov
mov
jmp
bound
jae
aaa
cmp
push
mov
imul
imul
jecxz
retf
dec
in
ds
inc
adc
add
mov
ins
xor
cmp
xchg
cmps
shl
inc
mov
cmp
imul
std
jno
std
add
xor
inc
push
mov
test
cwde
les
lods
add
repz
dec
mov
jl
in
(bad)
rcl
pop
jl
sub
sbb
int
std
stc
sti
aad
and
inc
jmp
aaa
or
xchg
lahf
outs
mov
mov
inc
int3
movs
and
fwait
scas
into
jnp
xchg
push
shl
int
xor
mov
xchg
pop
pop
imul
add
add
mov
lock
outs
mov
pop
out
scas
xor
push
dec
imul
popa
pop
daa
cmp
mov
push
retf
xor
pop
in
ret
add
(bad)
pushf
jecxz
xchg
scas
addr16
jb
retw
cmp
cli
xchg
xor
out
pop
xor
addr16
scas
repz
div
cld
lahf
out
test
mov
jbe
in
jbe
test
adc
dec
inc
push
cmp
push
adc
ins
js
scas
mov
aam
lahf
addr16
mov
mov
cmps
iret
xor
xlat
gs
fwait
sbb
into
or
pop
mov
cwde
dec
js
xor
and
inc
in
jmp
push
dec
(bad)
mov
push
mov
cmp
sahf
mov
inc
movs
xchg
pusha
test
pushf
mov
outs
jne
pop
sti
cs
je
in
imul
and
ss
xor
mov
out
mov
add
leave
imul
mov
pop
adc
inc
mov
test
neg
mov
push
and
mov
xor
push
cmp
cld
mul
push
mov
pop
mov
xlat
adc
in
xchg
xchg
iret
ja
xor
mov
test
in
test
outs
jnp
repz
pushf
push
mov
enter
sub
ins
out
loopne
fsubp
jo
pop
and
test
add
or
add
rcr
shl
and
mov
mov
mov
jp
(bad)
adc
(bad)
or
xchg
sub
push
mov
out
lea
cmp
sti
pusha
cli
(bad)
adc
inc
clc
les
in
xchg
mov
and
cwde
iret
int3
inc
fisttp
in
dec
jg
jnp
and
mov
sti
dec
inc
and
jb
lods
pushf
mov
stos
loop
adc
repz
imul
fldenv
arpl
lds
mov
fidivr
and
pop
inc
inc
add
push
cmp
sbb
gs
cmp
xchg
rol
jnp
fcom
lods
push
inc
sub
ficom
mov
sbb
mov
dec
out
ins
pop
cmps
inc
cli
adc
nop
fs
mov
sbb
and
jmp
ret
jp
adc
cmp
mov
sub
ds
mov
push
mov
lahf
fs
xchg
mov
cmp
stos
and
inc
das
pop
arpl
add
jle
sar
push
mov
and
xchg
xchg
cmps
inc
and
adc
iret
retf
pop
jno
in
xchg
or
mov
fild
fwait
pop
xor
xor
xchg
sub
add
jnp
je
call
mov
pushf
aam
xchg
mov
cdq
push
sbb
out
clc
data16
sahf
push
cmc
mov
sbb
mov
dec
dec
xor
inc
lahf
out
cmp
popf
sbb
fisttp
adc
pushf
(bad)
fist
ficom
not
xchg
mov
(bad)
sub
inc
xchg
and
shl
inc
push
sub
cmp
retf
out
xor
test
cwde
es
push
ret
repnz
iret
test
stc
mov
cmc
imul
fist
pushf
ja
push
nop
push
dec
push
mov
test
lods
mov
and
aas
fnstenv
sti
fldpi
jnp
or
out
xchg
test
dec
cmp
and
jl
imul
sbb
jp
ins
stos
dec
xchg
pop
jno
fs
ins
sub
xchg
je
aas
sbb
fucomi
int3
jno
je
mov
lods
jg
lods
xor
cs
loope
pop
pop
push
jge
xor
sbb
mov
jo
cli
stc
and
hlt
out
out
jae
fisub
(bad)
xor
sar
sbb
shl
into
pusha
mov
jns
repz
sar
mov
mov
mov
jle
sub
jmp
jno
mov
or
pop
lods
sahf
xor
out
out
div
mov
lahf
sbb
and
retf
push
push
adc
add
sub
push
call
(bad)
(bad)
aad
add
test
jmp
ins
xchg
push
(bad)
dec
mov
movs
fwait
ins
in
jno
data16
jp
fwait
pushf
cmp
and
fwait
imul
add
pop
jmp
pop
sub
loope
mov
in
lea
mov
mov
test
movs
mov
addr16
and
inc
dec
cmps
sub
sti
and
(bad)
ror
cmps
into
or
xor
in
dec
mov
push
ja
stos
and
ret
mov
pop
push
sub
(bad)
xor
pop
hlt
mov
mov
push
add
jnp
test
retf
inc
xchg
mov
(bad)
retf
in
push
stc
adc
pusha
jmp
ret
sub
dec
push
xchg
dec
ss
and
or
sahf
xor
jmp
or
inc
mov
xlat
and
enter
pop
mov
jmp
xchg
sub
add
and
ins
jne
aam
add
mov
push
lahf
sub
push
call
fstp
and
add
xchg
out
mov
fisub
or
bound
cmp
xchg
stos
push
mov
sti
mov
out
push
(bad)
sar
inc
dec
dec
jnp
inc
and
and
mov
push
cmp
popa
hlt
jmp
sar
inc
add
mov
and
xchg
rcr
dec
dec
push
adc
adc
out
(bad)
and
xor
rcr
fst
dec
fnstenv
and
(bad)
shr
clc
arpl
sub
movs
fnstcw
jecxz
and
dec
push
add
mov
outs
sahf
jnp
push
pop
int
or
sub
mov
push
in
(bad)
ds
mov
pop
daa
xchg
push
pusha
mov
(bad)
rol
push
cmp
or
xor
push
and
push
mov
(bad)
jecxz
cmp
push
dec
and
stc
push
(bad)
hlt
mov
pop
mov
rcl
sbb
hlt
adc
adc
cld
fxch
push
jae
test
std
jl
push
loop
daa
jns
xor
pop
idiv
std
out
sub
push
mov
xor
fldcw
shl
or
xor
daa
sbb
add
aam
sbb
(bad)
retf
out
xor
(bad)
jnp
mov
cli
out
bound
repz
and
lea
mov
jb
sbb
xchg
push
add
das
lods
and
dec
add
pop
push
cmp
push
cmc
push
mov
xor
fld
pop
push
rcl
shl
push
xor
lahf
(bad)
sbb
pop
jnp
sti
push
fcmovnbe
test
push
pop
retf
and
dec
(bad)
sbb
ja
sub
and
je
mov
jle
inc
pop
aam
cmp
fidivr
lahf
dec
mov
xlat
cdq
and
pop
nop
ins
movs
fsubr
mov
xor
lahf
mov
sub
arpl
pop
push
mov
dec
ficom
sahf
or
xchg
test
inc
push
xor
loopne
mov
cmp
es
push
loopne
and
test
cmp
imul
mov
jl
mov
call
sub
lock
or
mov
pop
pushf
push
cmp
xchg
pop
pop
ret
mov
rol
js
jmp
in
pop
in
and
push
(bad)
in
dec
bound
push
jne
sbb
add
or
sahf
and
push
adc
nop
xor
jmp
test
push
fidivr
out
aaa
imul
cmp
and
sbb
lds
push
dec
push
jo
mov
fnstsw
push
push
daa
push
std
shl
push
popf
outs
in
les
fwait
xlat
lock
jns
xchg
outs
adc
(bad)
sbb
stc
inc
outs
dec
mov
sbb
sbb
cmc
outs
sub
jmp
or
cmc
out
mov
ins
jmp
inc
fucom
mov
mov
push
icebp
pop
(bad)
iret
adc
adc
pop
xchg
les
mul
dec
js
retf
cs
imul
cmp
jle
jl
aas
bnd
mov
loop
jae
popa
and
xor
jg
mov
outs
jae
inc
cmps
sbb
fadd
in
mov
cmp
cwde
sub
icebp
ss
jae
outs
add
std
or
or
mov
test
push
push
mov
xor
add
fisttp
movs
mov
dec
adc
mov
int
sub
pop
add
lods
jbe
loope
cmc
adc
jmp
jle
fstp
jge
pop
cmp
sbb
outs
sub
add
aaa
dec
adc
popf
push
dec
(bad)
test
adc
in
call
pop
data16
test
adc
mov
push
shr
jb
out
js
jp
add
mov
scas
sub
dec
inc
add
pusha
cdq
shl
push
popf
or
push
sub
ins
pop
jecxz
mov
das
mov
dec
and
out
sbb
mov
inc
sar
jb
mov
imul
stos
(bad)
jmp
fisttp
pop
mov
fmul
mov
movs
push
jo
fisttp
mov
fs
shl
bnd
push
mov
mov
fbstp
clc
and
das
adc
push
jge
jns
jmp
cmps
add
push
in
cmp
scas
shl
lock
sbb
lds
ins
mov
test
lahf
jb
xlat
dec
rcl
mov
and
scas
test
dec
sub
mov
mov
and
xor
pop
push
mov
mov
(bad)
mov
nop
in
add
in
mov
push
push
and
into
sub
scas
cs
dec
xor
sub
jmp
mov
push
stc
dec
xor
mov
pop
dec
pop
mov
arpl
sti
arpl
dec
jns
mov
(bad)
jae
mov
inc
sub
loopne
nop
arpl
pop
lods
add
fadd
and
cmp
call
dec
addr16
pusha
jp
and
outs
xor
(bad)
push
out
add
fwait
adc
js
push
stos
rol
cwde
pop
mov
mov
mov
fdivr
cmp
icebp
pop
and
pop
xor
dec
loopne
mov
ins
or
rcr
das
out
xchg
std
sar
shr
or
outs
fisttp
jecxz
stos
ret
or
mov
popa
mov
or
cli
jae
xor
jb
aam
cmc
ret
sub
sub
xchg
ins
pop
push
in
cdq
jns
iret
dec
jp
mov
addr16
test
cmp
sbb
into
popf
ds
dec
sub
cmps
ins
inc
(bad)
add
leave
pusha
(bad)
mov
out
push
add
loopne
xchg
and
fistp
aad
js
and
rol
ins
retf
ss
ins
jge
mov
add
fild
repz
cmp
xor
jbe
in
sar
adc
dec
(bad)
test
ret
ret
jae
mov
pop
enter
cmps
mov
push
jmp
lods
jae
or
cmp
fstp
loopne
aaa
fdiv
mov
jb
and
mov
ficom
sti
fwait
add
lea
cs
rol
dec
cwde
pop
retf
nop
xor
loop
mov
jnp
lea
pop
cwde
inc
aas
std
pusha
xchg
cmp
xchg
cmp
enter
add
int3
daa
pushf
lahf
sbb
loop
loopne
hlt
dec
aad
test
mov
gs
shl
jmp
push
or
xchg
xchg
jae
or
and
scas
aad
sub
push
add
lea
sub
xchg
lock
mov
jo
in
sub
lods
inc
hlt
outs
mov
or
pop
dec
push
dec
xor
push
fisttp
xchg
rcl
push
retf
push
sbb
jae
push
(bad)
jg
mov
mov
lahf
adc
sahf
inc
mov
mov
cwde
cld
sub
jge
pop
jo
jge
xchg
jo
jl
mov
into
jecxz
and
fs
ins
ret
dec
leave
xchg
cmp
xchg
inc
into
mov
dec
push
stc
cmp
jo
cs
dec
jecxz
stos
sar
cmps
inc
pop
cwde
pop
or
imul
push
das
mov
mov
or
in
shr
and
arpl
lahf
inc
jg
cs
xor
mov
push
adc
dec
sahf
(bad)
pushf
fistp
aam
pop
test
add
int
and
adc
sbb
add
and
adc
lahf
or
pop
mov
int3
mov
cld
mov
pop
mov
mov
pop
jmp
pusha
fisub
jbe
push
daa
out
out
fbld
adc
sub
add
inc
mov
dec
and
aam
repnz
sub
cmp
or
arpl
aad
pop
mov
adc
mov
rcl
adc
mov
mov
cdq
imul
sar
sbb
push
pop
ret
jae
(bad)
call
or
leave
adc
sti
sub
idiv
and
pusha
shl
cmp
dec
jnp
gs
cmc
movs
sub
xchg
push
mov
ins
lods
test
dec
pop
add
push
pop
call
dec
js
das
dec
xlat
add
cwde
jnp
push
add
pop
push
push
pop
mov
ficomp
cs
js
push
retf
push
jo
mov
xor
ins
fsubr
push
inc
cmp
sub
popa
icebp
mov
pop
add
lock
enter
fsubr
xlat
loopne
lds
xor
(bad)
lds
repnz
sar
in
or
xchg
inc
in
lahf
rcl
jb
sbb
loopne
in
mov
sub
iret
xchg
adc
(bad)
jno
test
pop
and
loop
jbe
inc
push
jl
into
ret
xor
out
sbb
out
pop
push
cs
push
icebp
scas
(bad)
pop
dec
hlt
imul
or
std
enter
inc
add
mov
enter
mov
mov
mov
(bad)
cmp
adc
jbe
mov
iret
push
fwait
add
mov
add
xchg
mov
aaa
or
je
ins
push
xchg
loopne
popf
jecxz
push
inc
ss
sbb
pop
mov
jae
mov
dec
shr
or
sub
dec
repz
daa
jmp
(bad)
jmp
cmc
jle
ret
push
aaa
mov
or
rcr
test
test
mov
dec
call
rcl
aam
cmp
push
ja
lea
or
arpl
xchg
sub
jmp
inc
mov
shl
mov
icebp
dec
jb
iret
sti
js
jb
xchg
sub
test
(bad)
out
xchg
loope
fist
loope
add
sbb
std
or
mov
adc
leavew
in
dec
fadd
sbb
stos
out
dec
sysret
xchg
cmp
mov
mov
jnp
mov
in
xchg
test
das
dec
jno
cdq
sahf
mov
enter
mov
inc
addr16
sbb
sub
and
ss
push
dec
cld
jecxz
aaa
scas
xlat
es
hlt
dec
(bad)
pop
add
and
aaa
call
fld
and
inc
jge
add
stc
test
cmc
rol
retf
movs
neg
jp
pop
int3
aad
mov
adc
imul
icebp
xor
fwait
mov
mov
push
sahf
push
pop
push
jmp
in
sbb
movs
jl
dec
jge
sub
rol
and
fisttp
mov
cld
cmps
icebp
push
inc
test
shr
push
mov
sbb
retf
xor
in
inc
in
cmp
sub
mov
dec
xchg
xchg
stos
mov
fadd
adc
(bad)
push
xchg
dec
pop
mov
sbb
add
iret
push
aad
dec
in
sub
pushf
adc
sahf
mov
loop
repnz
adc
and
inc
call
ret
xor
sub
clc
icebp
clc
cmp
pop
xor
push
and
jge
jg
add
(bad)
jge
xchg
iret
pop
jg
cs
sub
fbld
push
(bad)
call
repz
xor
jo
test
not
add
in
and
adc
and
jbe
xor
xchg
jo
(bad)
jae
(bad)
sbb
movs
mov
jns
mov
lahf
inc
or
lods
xor
jg
jo
xchg
inc
das
(bad)
loopne
xchg
out
jb
(bad)
pop
cli
outs
mov
jmp
push
es
xchg
je
xor
mov
pop
push
jo
(bad)
pop
retf
call
retf
jne
mov
mov
mov
aaa
mov
out
outs
push
pop
scas
shl
xor
mov
cs
xchg
xor
pop
test
sbb
and
xlat
(bad)
popa
xchg
pop
sbb
jmp
retf
and
xchg
lahf
sub
jb
inc
xchg
out
inc
sbb
fild
outs
ret
test
dec
je
dec
cli
mov
pop
pop
or
and
ins
sbb
mov
movs
test
xchg
and
(bad)
arpl
int
jmp
push
out
gs
cs
imul
inc
mov
sti
ds
xchg
aaa
movs
jle
inc
mov
call
retf
fbld
dec
mov
cld
mov
scas
cdq
push
add
ror
sbb
push
xchg
jae
test
adc
xchg
pop
lea
arpl
ret
pop
xchg
retf
jns
rol
cmp
stos
sahf
xor
ins
sti
dec
loope
jne
pop
dec
fst
push
xor
push
dec
jnp
add
pop
rcl
mov
test
jp
and
mov
inc
test
adc
popa
not
ficomp
leave
movs
outs
push
(bad)
mov
pop
(bad)
inc
rol
call
leave
mov
sub
test
or
pop
dec
jns
xchg
icebp
loop
xlat
push
dec
call
pop
fsub
xchg
xchg
jbe
pop
pop
stc
pop
imul
retf
cdq
push
pop
jb
fneni(8087
ret
nop
call
xchg
xchg
cmp
mov
jbe
mov
push
ret
push
fiadd
repz
(bad)
mov
add
jmp
iret
sbb
fadd
mov
cmps
xor
inc
xchg
test
out
sbb
es
mov
jnp
rcl
das
xor
mov
mov
dec
enter
dec
cmp
jmp
xchg
add
mov
push
jge
cmps
sbb
add
push
enter
xchg
(bad)
jne
cmp
cld
int
test
jmp
les
xchg
or
imul
xchg
mov
jno
mov
sbb
loopne
sbb
xchg
mov
mov
rol
pushf
mov
pop
and
push
xor
repz
test
jg
nop
add
out
loopne
xchg
in
mov
mov
stos
pop
das
into
cmps
cmp
mov
hlt
or
pop
mov
adc
or
stos
sub
retf
jmp
mov
fist
(bad)
or
mov
xchg
sub
cmc
dec
push
push
or
lods
shr
push
push
scas
jb
xor
ficomp
and
scas
xchg
inc
popa
push
push
mov
push
(bad)
xchg
jg
and
out
loope
mov
add
ficom
aad
(bad)
icebp
pop
adc
adc
(bad)
adc
aas
test
pop
push
js
aaa
inc
dec
push
lock
fidivr
out
add
popa
and
sbb
pop
and
jg
cmp
inc
cmp
push
in
mov
frstor
cmp
fwait
dec
mov
dec
xor
sub
add
dec
xchg
jmp
sub
outs
push
enter
inc
inc
ret
adc
jp
add
and
rol
leave
pop
loopne
outs
cwde
fcmovne
sub
sub
mov
sub
cmc
and
aam
stos
imul
mov
inc
out
ss
data16
sbb
in
add
loope
rcl
cmp
mov
pop
mov
daa
sahf
ja
mov
push
test
fdivrp
movs
shl
iret
sub
leave
mul
adc
iret
fldcw
push
or
jae
jne
xchg
lds
sbb
push
cld
add
loop
repz
sub
jle
jae
pop
jle
pop
neg
and
aad
scas
add
aad
rcl
pop
lods
jge
retf
or
jmp
jecxz
pop
jno
adc
ror
rol
scas
es
inc
mov
mov
addr16
jb
xor
outs
mov
sub
pop
pop
mov
mov
push
js
jg
mov
push
repnz
jp
sub
add
ret
mov
xor
mov
mov
jne
sbb
mov
jge
cmp
push
cs
sbb
and
sahf
xor
dec
test
daa
scas
fist
xchg
push
mov
or
add
in
adc
imul
add
shl
or
pop
and
fwait
xchg
sub
clc
xchg
push
loopne
or
fistp
add
popa
xchg
ret
push
jge
test
(bad)
enter
(bad)
jbe
mov
mov
or
pop
jmp
pushf
and
gs
daa
test
jg
(bad)
repz
aam
mov
ret
popa
es
pop
mov
fdiv
cmps
xlat
xchg
jge
cdq
mov
aad
jo
lock
dec
sbb
and
scas
and
fimul
repnz
inc
jbe
outs
imul
clc
es
jae
(bad)
xchg
clc
jecxz
mov
inc
aaa
loopne
nop
fld
push
ja
pop
cmp
ret
adc
std
pop
clc
mov
jle
outs
or
or
and
push
dec
rcr
ret
call
pop
jmp
sbb
inc
rol
mov
jl
test
inc
mov
mov
test
rcl
cli
sub
movs
ror
bound
mov
jle
std
push
int
ret
std
cwde
dec
pop
shl
fsub
push
inc
sbb
jle
int3
call
xchg
dec
push
(bad)
add
cli
aaa
mov
mov
ds
and
mov
(bad)
stos
pop
jns
and
call
fs
movs
and
mov
js
mov
jb
outs
movs
call
push
int
sti
rcl
adc
xchg
push
lock
inc
mov
or
les
mov
jo
in
pop
cmp
dec
ins
popf
movs
les
jecxz
add
outs
retf
ins
mov
mov
jecxz
out
pop
pop
(bad)
or
xchg
add
jl
retf
or
icebp
xor
mov
jae
lods
aas
add
push
inc
push
mov
add
push
jo
mov
cmp
push
xchg
sbb
in
jns
or
std
sub
jmp
mov
sbb
in
and
sahf
xchg
mov
sbb
push
dec
loopne
ret
mov
inc
cmp
test
jb
movs
adc
loop
lahf
mov
jp
jmp
mov
(bad)
push
and
xchg
mov
jbe
mov
or
in
cs
ds
or
enter
ins
div
push
or
add
int3
push
adc
mov
fcmovb
das
gs
pop
fsub
imul
adc
adc
add
test
(bad)
icebp
out
lock
in
inc
xchg
cmovnp
mov
fnop
add
adc
jmp
in
test
pop
push
pop
add
stc
imul
popf
out
dec
fild
fdivp
jb
popf
(bad)
and
xchg
xor
dec
aaa
dec
call
mov
(bad)
aas
repnz
xchg
repz
pop
mov
(bad)
push
call
pusha
inc
adc
mov
xchg
test
mov
inc
jmp
xchg
cmps
ror
repnz
ins
shl
push
in
add
call
sbb
pop
cld
xor
push
aad
aad
sub
sbb
pop
mov
repnz
push
adc
imul
(bad)
inc
adc
adc
popf
ins
fstp
sbb
adc
stos
cmc
rol
stos
(bad)
xor
cmp
add
cwde
sbb
rol
sbb
fist
and
mov
call
jmp
mov
inc
inc
xlat
push
mov
adc
xor
loopne
fs
mov
mov
mov
repz
ins
inc
jecxz
push
(bad)
call
lea
(bad)
sahf
xlat
mov
push
(bad)
mov
push
xor
inc
add
popa
inc
xor
mov
std
cmc
inc
sub
jmp
dec
jns
(bad)
repnz
stos
imul
xor
in
bound
arpl
lds
jo
xlat
fimul
aaa
out
jmp
(bad)
adc
nop
or
call
popf
push
gs
test
dec
stos
(bad)
stc
in
daa
and
xchg
xchg
ja
into
mov
loopne
pusha
push
repz
mov
rol
adc
call
mov
hlt
xchg
aaa
cmc
pop
add
or
jge
jl
cmp
mov
inc
cmp
sub
sbb
data16
jb
call
and
mov
push
leave
aad
inc
add
mov
in
mov
or
out
dec
inc
scas
dec
adc
or
out
lods
or
jo
movs
add
repz
sbb
mov
and
(bad)
pop
push
cwde
add
xchg
push
xor
sbb
fimul
xor
mov
in
and
jns
cwde
push
and
in
aam
(bad)
sub
sti
test
xchg
in
addr16
(bad)
gs
hlt
dec
adc
sub
xlat
aam
mov
or
mov
dec
pop
repz
xor
add
push
popf
add
clc
pop
leave
adc
loope
push
(bad)
aaa
sahf
and
dec
daa
jae
or
shl
rcl
ja
in
cmp
test
push
add
bound
dec
aas
pop
test
shl
repz
imul
(bad)
lds
dec
sbb
(bad)
ror
fmul
sub
in
test
mov
cmp
or
pop
xor
pop
or
pop
mov
jmp
cdq
jmp
jne
cwde
jmp
mov
out
xor
mov
adc
aad
push
ds
sub
cwde
xor
and
mov
inc
retf
inc
in
push
loopne
cmps
push
call
in
int3
cmp
cdq
add
adc
fst
test
dec
rcr
ret
out
sbb
int
fwait
pop
(bad)
mov
out
jge
aas
fs
sbb
cmp
mov
mov
jmp
jb
add
cmp
mov
ror
setne
jnp
ins
xchg
cmc
jmp
and
xchg
cmp
mov
mov
mov
shl
add
pop
mov
push
pusha
and
xchg
daa
mov
xlat
jno
adc
and
retf
or
cmps
cmps
add
sbb
push
lds
mov
fimul
mov
mov
jae
ins
call
ins
ror
push
dec
cs
inc
jb
pop
popa
in
dec
jmp
pop
dec
scas
pop
jge
and
pop
lahf
or
jp
retf
mov
cmc
push
sub
popf
sbb
jge
stos
pop
fwait
sbb
in
pop
inc
add
cmp
sbb
jbe
xchg
sbb
ret
xor
jb
(bad)
(bad)
pushf
nop
and
in
cmp
mov
cmp
or
or
jns
std
push
pop
call
pmaxsw
dec
dec
call
or
jge
inc
dec
jecxz
leave
(bad)
scas
dec
adc
and
call
out
js
in
ins
popf
ret
adc
mov
xchg
call
fisttp
test
and
pop
adc
shl
xchg
es
sbb
pusha
add
vmovaps
movs
les
push
inc
loop
xchg
cmp
xchg
adc
cli
dec
and
mov
push
repz
mov
js
int3
out
out
dec
jmp
je
repz
ror
mov
or
sub
jmp
mov
in
push
jl
xchg
cmps
arpl
adc
cmp
add
retf
ins
daa
mov
movs
sbb
call
mov
xchg
cmps
hlt
ud2
loop
das
jg
mov
sub
xchg
mov
push
mov
inc
ins
test
out
rol
fdivr
ret
mov
cs
ror
cmps
cmps
xor
or
and
pop
and
scas
out
loope
rcl
jae
xchg
retf
shrd
inc
sub
adc
add
push
adc
cmc
lock
popf
pop
inc
ror
sub
sub
loopne
mov
sub
jbe
mov
stos
mov
mov
pop
lds
xlat
xchg
push
test
(bad)
(bad)
(bad)
daa
pusha
sub
out
pop
jnp
fisub
pop
pop
ins
push
neg
jecxz
mov
push
sbb
dec
repz
shl
add
jg
in
push
mov
out
cwde
sbb
das
sbb
and
enter
enter
loopne
xor
xor
mov
add
pop
call
test
xchg
mov
add
retf
adc
ins
lea
jbe
mov
adc
inc
cmc
cmc
cmp
and
mov
in
gs
fiadd
cmp
scas
lock
addr16
cmps
out
cwde
pop
dec
dec
in
mov
into
scas
mov
bound
es
(bad)
cmp
pop
ficom
aam
retf
add
mov
xchg
pop
xchg
push
xor
(bad)
lods
dec
loope
std
aas
mov
jg
inc
popf
in
push
cmp
(bad)
inc
call
adc
clc
xsave
pop
mov
fld
pop
aas
adc
xchg
or
cdq
mov
shr
add
js
jl
test
rcl
enter
repnz
jmp
outs
mov
retf
or
cs
fisub
mov
or
clc
dec
xchg
and
sbb
shr
mov
xor
xor
int3
sahf
and
leave
mov
sbb
adc
jbe
imul
das
xlat
lods
and
dec
sbb
test
es
pop
cmps
(bad)
into
ja
cmp
ins
repz
xor
pop
dec
out
ja
sub
push
inc
push
mov
out
mov
mov
dec
pop
jo
int
mov
pop
cmp
mov
xor
xchg
lahf
ins
repnz
pop
retf
mov
aas
push
cmp
imul
jae
lods
mov
dec
addr16
xor
lea
mov
ret
test
jmp
iret
loop
sub
add
retf
inc
aam
fwait
sbb
sub
fs
pop
les
pop
lahf
call
into
add
int3
add
or
(bad)
cmc
cmps
or
jmp
mov
or
out
test
cmp
pop
xor
pushf
dec
aaa
bound
xor
pop
(bad)
push
mov
adc
pop
in
cmp
mov
stc
lock
scas
xor
mov
push
and
call
mov
mov
mov
xor
lahf
int3
inc
or
cwde
dec
cs
retf
rcl
or
shl
out
add
daa
out
xchg
mov
mov
push
daa
pop
test
cdq
dec
jp
sub
xor
mov
fisttp
jo
dec
inc
mov
sub
push
loop
xlat
ret
test
imul
jg
xor
cs
out
mov
scas
in
call
rcr
test
inc
and
idiv
jo
loope
add
rcr
retf
or
xchg
xor
add
jmp
jp
push
or
jns
pushf
popf
shr
dec
push
inc
fld
aam
mov
adc
mov
mov
mov
push
bound
mov
pusha
cmp
cmp
fild
arpl
nop
shl
adc
lahf
adc
cmp
cmp
daa
add
cmp
pusha
mul
mov
cmp
and
sub
sub
adc
jge
sub
(bad)
mov
or
int3
jl
cmp
loope
lods
mov
test
stos
hlt
adc
xchg
scas
enter
push
xlat
jno
jne
mov
cmp
mov
jle
iret
dec
fmul
xlat
frstor
xchg
jp
xchg
test
int
ss
mov
retf
jne
test
std
scas
pushf
add
jp
sub
mov
mov
in
push
lahf
(bad)
pop
sbb
xchg
jne
test
addr16
xchg
adc
les
mov
mov
xor
loopne
jno
movs
rcl
cmc
lock
aas
retf
jne
movs
mov
jns
mov
cwde
cmp
loop
shl
int
xor
test
sub
pop
scas
ds
iret
add
stos
addr16
popa
scas
(bad)
ss
adc
or
fwait
iret
rcl
dec
mov
loope
in
out
sub
jle
add
in
xchg
push
add
xchg
pop
jne
and
xor
or
and
adc
xor
mov
push
mov
jle
loop
scas
sbb
pop
or
in
(bad)
jmp
xchg
jge
ss
cmp
xor
cmp
dec
sahf
cld
or
inc
and
outs
sbb
std
in
adc
aas
js
sub
fsub
mov
lods
scas
jg
xchg
fsub
push
mov
adc
outs
fistp
dec
push
fsubr
scas
pop
mov
sub
add
dec
sahf
mov
adc
adc
rcl
cli
movs
dec
cs
xchg
mov
fwait
int3
and
test
shl
cdq
das
sub
adc
sti
pop
mov
cmp
aad
push
push
es
loopne
mov
loopne
or
mov
clc
cmp
loopne
jmp
add
jmp
add
inc
dec
ss
push
lahf
xor
pop
imul
cmps
mov
push
rcr
icebp
into
xchg
mov
jb
cmc
fadd
rcr
imul
cdq
in
outs
jg
ins
call
cmp
(bad)
xor
mov
pop
retf
mov
jnp
les
cwde
xchg
aas
and
cmp
mov
adc
(bad)
and
sbb
xchg
jl
inc
stos
sahf
imul
mov
loopne
gs
push
pop
(bad)
lods
out
js
inc
mov
mov
enter
cmp
jmp
loop
push
push
jae
or
cmc
xchg
cmp
push
test
loope
fdivr
test
xor
enter
add
ja
sbb
sti
fwait
jo
pop
adc
jp
cdq
jo
hlt
dec
imul
xchg
stos
popa
and
pop
inc
mov
dec
dec
jmp
pop
inc
daa
dec
mov
xor
add
mov
push
pop
retf
ss
fcomi
hlt
leave
fbld
daa
cmp
mov
sti
mov
ror
rcl
inc
ins
cld
ins
pop
adc
mov
mov
mov
pop
sar
or
jo
push
ins
and
dec
test
outs
mov
mov
fstp
adc
movs
rol
(bad)
fistp
mov
xchg
inc
push
sbb
mov
xor
mov
jle
fsubr
and
add
rcl
stos
jo
mov
loopne
push
ret
fcmovb
adc
dec
mov
pop
cwde
ret
sar
std
enter
imul
jmp
inc
jns
inc
or
pop
jle
sub
repz
cmp
or
into
jecxz
xchg
js
test
test
lds
in
addr16
jno
xchg
lahf
js
sahf
pop
sub
dec
jb
and
and
jae
int
fidivr
sar
imul
adc
inc
loop
adc
ins
xor
lahf
push
cmovp
test
or
pushf
add
pop
mov
cmp
fadd
mov
push
dec
clc
jno
xchg
xor
add
or
pop
stc
imul
xlat
addr16
dec
ins
jo
sub
sbb
ror
mov
pop
aad
arpl
inc
pushf
cmp
xor
and
xor
stos
mov
cmp
lea
or
adc
jo
pop
cwde
push
test
stc
adc
mov
mov
mov
pop
dec
mov
ja
cli
and
rcr
shr
push
or
pop
shr
mov
loope
fidivr
push
rcr
aad
repnz
aad
cmp
inc
es
push
rol
cwde
ror
mov
rcr
neg
sub
stos
pushf
clc
loope
xor
jle
jg
dec
lods
jmp
pop
dec
clc
jnp
sub
xchg
pushf
pusha
loopne
test
(bad)
cmp
xlat
mov
inc
and
cmp
adc
(bad)
and
sbb
sub
repz
mov
mov
sbb
popa
xlat
xchg
stos
int3
or
es
inc
push
xchg
sbb
enter
call
mov
mov
inc
push
mov
test
sub
sub
mov
mov
mov
bound
mov
fisub
out
popf
in
mov
push
push
dec
int3
mov
ds
sub
bound
test
repnz
inc
test
loope
inc
xchg
stos
sbb
jp
iret
cmp
rol
pop
popf
sbb
inc
clc
dec
pop
push
jl
push
cmp
cmc
push
out
mov
dec
adc
sbb
fnclex
dec
je
or
inc
jb
jg
leave
aam
add
lock
jmp
pusha
xlat
clc
ret
nop
mov
xchg
movs
lods
push
inc
ss
xchg
aad
addr16
imul
mov
mov
xchg
inc
(bad)
inc
push
repnz
cmc
rcr
call
fcmovnbe
mov
or
call
and
out
cs
xor
dec
enter
leave
cld
in
shr
test
sar
jecxz
ret
cmp
and
(bad)
or
daa
(bad)
mov
mov
addr16
add
movs
mov
sbb
and
xchg
(bad)
xchg
mov
mov
and
stc
xor
sub
fidivr
movs
or
and
mov
sub
xchg
or
shl
jo
retf
stc
xor
inc
fwait
xor
seta
xchg
and
loop
jo
mov
add
stos
js
xchg
push
movs
addr16
mov
lahf
mov
std
xchg
rol
imul
icebp
push
inc
xchg
cmp
or
push
lds
sub
adc
imul
push
push
adc
xchg
mov
lahf
outs
mov
addr16
in
xor
jl
xchg
sbb
fisubr
push
clc
jb
test
aad
je
scas
jae
sub
dec
xlat
cli
(bad)
in
ins
pop
scas
into
scas
mov
cmp
ins
sub
cmp
popf
mov
mov
mov
mov
push
or
mov
add
div
xchg
out
xlat
cmps
imul
popf
and
or
dec
fsubp
aaa
sub
or
pop
xchg
repz
fcom
out
gs
addr16
sbb
out
shr
(bad)
fld
shl
xchg
jmp
out
dec
pop
pop
neg
pop
pop
call
test
sbb
out
jle
fiadd
cmc
sub
jge
sub
lock
add
jno
xor
and
(bad)
les
adc
jg
and
add
in
push
push
cmp
add
retf
scas
or
pop
ret
gs
stos
push
mov
into
xor
fs
xor
fidiv
inc
retf
movs
xchg
aam
mov
xchg
add
push
rcr
pmuludq
push
cmc
mov
fist
hlt
stc
or
jle
ret
pop
xor
push
in
cdq
cli
pop
test
stos
push
mov
lds
mov
out
jno
cdq
fld
cmp
test
mov
loopne
movs
(bad)
mov
mov
mov
xchg
pop
or
ret
loope
mov
mov
repnz
pushf
pop
(bad)
cld
add
movs
ins
movs
data16
and
movs
ds
sbb
imul
pop
cmp
lods
xchg
xchg
loopne
sbb
cmp
xchg
frstor
inc
scas
sbb
rcl
movs
out
test
pop
inc
push
loope
cmp
xor
push
push
and
int
lahf
adc
rol
and
sbb
xchg
retf
mov
or
daa
stc
loopne
cmp
jbe
mul
icebp
inc
jge
adc
cmp
pop
shl
sub
ins
fisttp
push
mov
inc
or
pop
dec
or
imul
fwait
pop
inc
mul
adc
enter
cmp
adc
mov
jne
sub
xor
cmps
sahf
mov
xchg
add
dec
jb
xchg
in
dec
push
jae
(bad)
jg
scas
cmp
cmp
call
mov
dec
adc
mov
mov
mov
les
imul
lahf
sti
dec
int3
push
jge
mov
cmp
fwait
imul
dec
pop
cmp
lods
inc
jle
fisubr
clc
js
dec
repz
fst
xor
dec
jle
pushf
adc
push
inc
sbb
pop
jmp
mov
push
in
(bad)
push
pop
sub
(bad)
setle
jns
ja
sbb
ss
mov
mov
loopne
gs
xlat
inc
gs
inc
(bad)
push
iret
push
sbb
push
ds
gs
adc
adc
popa
fdivr
addr16
stc
or
in
cdq
add
jne
retf
popa
fucomp
jno
xchg
(bad)
(bad)
cdq
pop
mov
jns
dec
cs
adc
or
test
lea
ins
pop
and
loopne
add
sbb
inc
jne
aad
imul
popf
sub
into
push
or
push
enter
xchg
mov
inc
(bad)
fprem
(bad)
fadd
out
add
mov
loopne
jge
sbb
jmp
xor
jb
(bad)
in
test
add
fidiv
shl
push
add
stos
(bad)
add
ret
xor
fisttp
imul
mov
das
sub
jmp
mov
jl
fdivr
ret
xor
mov
scas
scas
sub
das
sbb
ret
add
dec
iret
xlat
sub
pop
jne
jb
fcomp
dec
pop
add
or
popa
push
nop
hlt
mov
pop
fld
mov
sbb
push
push
inc
jne
mov
dec
adc
nop
outs
add
pop
out
push
add
int3
or
test
in
push
dec
dec
js
mov
push
lahf
jae
xchg
dec
jmp
addr16
mov
les
lods
pop
outs
mov
pusha
cmp
jge
inc
mov
fcomi
fwait
in
cmp
push
mov
popa
daa
xchg
and
sbb
ror
xchg
sub
imul
shr
sbb
sub
test
xor
outs
lods
or
ss
dec
ja
pop
xchg
scas
shr
test
mov
(bad)
cmp
mov
loope
and
sbb
jge
ror
mov
xchg
fadd
push
daa
ficomp
lods
mov
neg
out
and
int3
mov
rcl
int3
adc
adc
aam
mov
sub
ins
jge
add
clc
or
mov
dec
jo
cmp
or
arpl
stos
mov
push
push
lock
(bad)
push
sub
call
mov
loopne
imul
fwait
dec
int3
es
pop
dec
fbld
adc
iret
jno
loope
push
cld
mov
inc
scas
daa
jbe
and
mov
loope
inc
sub
xlat
fbld
mov
rol
push
stos
cmp
xchg
lods
jl
push
xchg
jnp
mov
jmp
xchg
xchg
int3
(bad)
fimul
sbb
mov
mov
mov
dec
cmp
mov
cmp
(bad)
dec
jle
add
mov
push
adc
sti
jecxz
bound
or
(bad)
or
popa
leave
xor
sti
cld
push
ret
outs
mov
lahf
adc
sub
or
sbb
jg
pop
xor
cmc
xchg
and
fiadd
dec
clc
push
add
aad
nop
jmp
xor
mov
imul
or
jg
call
xchg
fcomp
fwait
into
vcvttsd2si
jle
in
int
test
cmp
or
sar
addr16
cmc
jg
int
movs
cmp
pop
jns
stos
loope
pop
adc
lods
sbb
mov
lods
dec
out
adc
cld
or
mov
repnz
xchg
test
scas
jge
sbb
mov
scas
dec
push
pop
push
stos
and
lods
add
add
mov
stc
jecxz
add
cmp
pop
sub
(bad)
int
cmp
mov
pop
(bad)
sbb
mov
and
inc
je
into
(bad)
addr16
jnp
push
and
fist
adc
cmovg
dec
inc
dec
jne
mov
shl
loopne
movs
sti
nop
cmp
daa
out
cmp
scas
push
mov
mov
sbb
mov
or
mov
sbb
(bad)
or
push
mov
inc
dec
adc
iret
add
stc
xchg
add
mov
or
cs
jae
push
inc
mov
mov
pusha
sub
repz
fcomi
shr
inc
cmp
add
fcom
out
xchg
lds
mov
adc
dec
repz
mov
xor
out
out
push
ret
sub
je
call
stc
adc
jo
scas
add
inc
sbb
or
pop
xlat
inc
adc
and
cmc
cwde
pop
push
(bad)
lock
mov
stc
call
push
cmp
pusha
pop
pop
in
mov
rep
outs
pop
repnz
les
push
xchg
inc
mov
or
or
jbe
jle
es
jnp
ss
push
or
retf
pusha
inc
mov
cmp
xor
ror
das
sbb
inc
dec
mov
sbb
push
cmp
daa
test
jbe
pop
cmp
and
mov
jp
jmp
test
fwait
sub
cli
cmp
into
pmovmskb
das
sahf
popa
mov
and
ret
cmp
push
repz
mov
add
pop
pop
and
dec
and
scas
push
cmp
adc
shl
sbb
add
stos
push
push
cmps
in
pop
movs
xor
push
xor
cmp
fist
or
jge
int3
clc
mov
xor
stos
mov
add
pushf
and
in
jp
sbb
jns
mov
mov
cmp
mov
inc
mov
mov
call
loop
mov
inc
push
mov
sti
cmp
or
sbb
pushf
inc
jecxz
sub
inc
sbb
push
je
jl
pop
(bad)
cmp
sbb
mov
call
or
add
jl
ss
pop
addr16
int3
jmp
pop
repz
jno
and
add
pop
pop
shl
outs
sbb
pop
xor
call
push
add
xchg
sbb
xchg
add
std
fs
sti
out
and
and
ror
rcr
retf
sbb
aas
in
or
outs
sub
hlt
add
xchg
sub
fstp
dec
retf
outs
jne
inc
sar
adc
add
dec
les
lea
sub
sub
leave
adc
and
jmp
mov
inc
sub
imul
shl
ret
ins
xor
sahf
das
or
dec
mov
and
imul
mov
dec
gs
fstp
jp
mov
or
sub
pop
push
jle
stos
adc
push
dec
jmp
leave
mov
xchg
movs
std
mov
fild
xchg
pop
jne
add
in
xor
or
sbb
mov
sub
push
scas
(bad)
mov
stc
es
(bad)
jmp
pop
adc
sub
mov
inc
je
imul
xor
leave
lods
mov
or
ss
sub
loope
cmp
out
cmp
jbe
inc
mov
(bad)
(bad)
xchg
and
fsub
loopne
and
fbstp
sbb
aam
push
in
(bad)
sbb
pop
int3
pop
pop
inc
jno
movs
inc
jmp
jb
fs
scas
out
or
push
test
adc
lods
jns
mov
mov
cld
pop
xchg
inc
pop
outs
rol
mov
push
fistp
cmc
pusha
loopne
loopne
or
mov
xlat
cmp
fstp
xchg
or
sub
pxor
sub
out
cdq
xchg
bound
popf
adc
and
adc
gs
pushf
retf
sub
sbb
aas
fistp
mov
mov
or
jmp
xor
lds
add
lea
jg
dec
mov
mov
sub
arpl
or
shr
pop
inc
arpl
cmp
test
mov
das
sub
vunpcklps
test
cmc
lahf
sub
mov
test
xor
int
dec
jnp
push
adc
loopne
jmp
mov
and
pop
xchg
ret
xchg
dec
js
stos
nop
sub
test
cmp
jmp
iret
pop
mov
and
cmp
sti
outs
adc
pop
xor
push
push
pop
mov
sub
push
ffree
pop
push
stc
or
jmp
push
dec
shr
dec
cmps
adc
push
inc
and
addr16
cmp
mov
jmp
in
dec
arpl
ds
rol
mov
pop
std
popa
inc
ins
cmp
adc
call
push
call
mov
jbe
mov
push
out
sbb
enter
mov
retf
test
mov
pop
mov
dec
pop
int
scas
sub
jmp
dec
jno
mov
mov
clc
imul
jnp
sbb
icebp
inc
add
(bad)
or
jbe
mov
lds
fild
push
xor
and
les
ss
push
and
adc
sbb
jno
pop
jmp
pop
mov
idiv
icebp
push
add
mov
jmp
adc
test
xor
xchg
jmp
sub
xchg
and
int3
bound
lods
pop
sbb
enter
and
mov
mov
sub
rcr
rcr
sbb
lea
daa
cmps
or
jl
push
ds
jno
sub
test
ss
ss
rcr
retf
sub
loop
out
lea
xor
in
leave
adc
xor
pop
jge
add
mov
and
movs
lock
inc
out
es
xor
or
mov
(bad)
pop
or
inc
dec
pushf
mov
je
mov
ds
adc
pusha
cs
loope
lock
mov
xchg
das
sti
dec
sbb
push
pop
mov
lock
pop
sub
or
add
pop
inc
add
jno
(bad)
sub
push
mov
and
sub
retf
(bad)
cli
rol
rcr
or
or
cmp
pop
enter
jp
push
lods
fs
jmp
sub
mov
push
gs
push
xchg
cmps
pop
add
xor
out
jno
(bad)
jb
push
mov
dec
test
or
mov
cmps
cmp
xor
jl
daa
sahf
(bad)
shl
(bad)
(bad)
sbb
adc
push
adc
jnp
xchg
retf
pushf
fwait
mov
inc
out
enter
call
and
inc
scas
cmp
aas
les
or
in
sbb
div
fnstcw
scas
lds
mul
xor
push
cmp
push
daa
mov
sub
fcmove
sub
xor
out
movs
mov
imul
mov
in
popf
mov
pop
not
(bad)
jmp
icebp
mov
in
inc
sub
sbb
(bad)
movs
cmp
adc
popf
push
mov
loopne
(bad)
mov
je
pop
fadd
jo
int3
rcr
cld
outs
inc
jnp
inc
test
pop
inc
arpl
sahf
test
test
pop
js
leave
jmp
fsubr
lds
sub
ja
(bad)
bound
addr16
nop
rcr
inc
push
ds
imul
popa
push
aas
shl
ret
mov
jecxz
and
push
dec
mov
cwde
(bad)
cmp
sar
pop
add
arpl
push
jbe
int3
inc
test
(bad)
push
xchg
sbb
pop
sbb
pop
cmps
add
jmp
in
push
cmp
push
mov
mov
mov
push
jmp
cmps
push
pop
inc
pop
ins
mov
xchg
mov
push
pop
and
mov
xor
or
xor
push
jnp
aas
ja
pop
dec
das
push
push
push
stos
cmp
sbb
mov
mov
adc
aam
test
jne
aad
and
jnp
test
je
and
jb
jge
inc
div
inc
push
jmp
(bad)
aam
pop
movs
pop
sub
jp
jp
cmp
jbe
jo
push
cs
dec
push
fldenv
mov
inc
push
int3
mov
int3
inc
outs
fwait
shl
cmps
test
sbb
pushf
sub
in
add
ret
bound
push
imul
xlat
lods
fimul
repnz
and
cmps
cs
loop
mov
jnp
loopne
div
mov
dec
call
cmp
cmps
dec
fistp
mov
add
jno
and
jae
inc
adc
daa
(bad)
fistp
in
aam
inc
mov
mov
xlat
cwde
clc
stc
jp
mov
jge
jae
out
inc
cmp
dec
pop
xchg
movs
mov
jno
xchg
xchg
xchg
outs
jne
sbb
and
mov
ret
in
mov
call
psubq
ins
mov
in
add
mov
cmp
xchg
jmp
jg
mov
push
cmc
cmps
and
repnz
inc
shr
cmp
jmp
sahf
fcomip
jl
sub
sbb
xor
(bad)
pop
inc
pop
jb
mov
mov
sub
icebp
call
js
jmp
stos
or
cwde
pop
aad
pop
stc
(bad)
outs
jg
mov
inc
xor
push
and
mov
fisttp
ret
dec
push
std
mul
cmp
imul
jno
jecxz
mov
inc
fwait
xor
imul
mov
test
in
sub
ins
mov
jo
sub
or
jle
mov
jge
lahf
cmp
sar
test
rcr
sbb
jnp
xchg
ss
ds
fdivr
fcmovnbe
repz
pop
ret
xchg
add
mov
adc
sti
inc
iret
jmp
std
jmp
adc
(bad)
mov
test
repz
jg
addr16
in
mov
dec
lods
lock
ins
das
cmp
out
fld
loopne
es
in
sbb
sbb
push
adc
aad
shr
call
into
mov
cli
xor
cmp
mov
cmps
mov
cmp
mov
outs
mov
sbb
inc
lahf
xchg
push
imul
and
add
inc
sahf
sub
je
in
rcr
mov
fisttp
call
xchg
adc
lods
es
push
iret
icebp
stos
mov
call
cmp
loop
(bad)
jmp
jp
out
pop
push
add
rcl
push
test
mov
fs
jmp
mov
(bad)
mov
sbb
cs
in
cdq
int3
adc
cmps
int3
xor
push
xchg
dec
out
aam
scas
dec
cli
dec
fadd
mov
sub
and
ins
icebp
sbb
jecxz
push
dec
push
sub
int
mov
repnz
inc
(bad)
pop
scas
fadd
enter
xor
sub
movs
stos
shl
mov
sub
jmp
jnp
(bad)
mov
sbb
mov
mov
cld
(bad)
jmp
sbb
mov
ret
and
jns
out
inc
cmp
pop
mov
push
hlt
sbb
mov
mov
pop
mov
xor
inc
out
pop
hlt
call
(bad)
xlat
xchg
and
push
xchg
in
or
popa
or
test
lods
fst
fsub
mov
sahf
ror
sbb
sbb
les
or
mov
cld
mov
mov
hlt
pop
inc
hlt
push
xchg
fld
pop
inc
pushf
rcr
data16
inc
in
(bad)
fwait
or
les
push
push
push
or
test
mov
or
cmp
mov
out
in
mov
mov
push
sbb
push
adc
add
cmp
ffree
or
cs
sub
jmp
fdiv
push
lods
imul
ss
sbb
jo
nop
or
add
mov
sub
jnp
xor
scas
fdiv
jecxz
add
jmp
cli
mov
push
jns
mov
sbb
lds
ret
sbb
xor
aaa
popf
push
add
sub
or
and
xchg
hlt
xlat
sbb
fwait
xor
scas
inc
shl
mov
and
jo
jle
mov
addr16
mov
mov
repz
adc
xor
push
jle
mov
mov
cmp
sbb
icebp
popf
test
sub
adc
js
and
jmp
clc
pusha
aam
xor
adc
pop
adc
xchg
ret
pop
sbb
and
lahf
add
push
pop
mov
ins
pusha
jp
scas
pop
xor
or
mov
jge
fucomip
xchg
mov
push
clc
outs
(bad)
iret
xchg
inc
jmp
mov
inc
and
cmc
cmc
fst
lds
pop
sbb
cmps
pop
cmp
or
scas
push
sub
jl
pop
outs
sbb
push
adc
add
cdq
loope
(bad)
int3
rcl
push
pop
pop
or
stos
xlat
sahf
mov
jo
mov
jnp
xchg
cmp
jmp
mov
push
mov
out
cmp
dec
jmp
cld
inc
aas
adc
xchg
cmp
mov
push
adc
cmp
loop
fcom
inc
outs
mov
in
mov
inc
xlat
in
daa
inc
nop
scas
push
bound
sub
push
popa
loope
pshufw
pop
into
imul
jl
or
nop
push
jbe
pusha
or
sar
ds
dec
out
std
sbb
jbe
sub
nop
pop
(bad)
push
xor
(bad)
push
mov
outs
xor
sub
stos
out
pop
(bad)
sub
and
mov
push
jne
xor
jo
es
ja
ds
loope
sbb
jmp
pop
or
popa
cld
add
sbb
out
pop
dec
jo
cwde
cmps
ret
inc
cmp
inc
inc
inc
xchg
jle
jne
push
mov
nop
inc
sbb
adc
push
push
jo
push
jmp
sub
lods
imul
in
lahf
shl
fst
pop
sub
adc
lds
popa
lds
mov
scas
mov
mov
push
mov
aad
ja
sbb
fs
cmp
jl
cli
push
loop
push
push
dec
in
push
cmps
movs
imul
jp
dec
jmp
xchg
and
loope
push
pusha
or
out
sbb
aam
(bad)
push
jle
push
test
stos
(bad)
dec
call
xchg
adc
loop
or
cmp
xor
cmp
dec
pop
out
imul
jbe
loope
test
add
jle
push
pop
popf
outs
push
int
out
push
add
sti
sbb
test
xchg
sahf
in
xchg
dec
pusha
pushf
ss
and
retf
test
mov
clc
sub
daa
call
sub
dec
daa
pop
sbb
and
sar
adc
outs
adc
out
mov
xor
and
retf
inc
fsubr
loopne
mov
mov
ja
xor
(bad)
lock
inc
add
sub
mov
cld
daa
push
push
mov
ins
add
adc
mov
jmp
pop
adc
(bad)
jp
mov
jae
rcl
sbb
pop
add
jg
and
mov
mov
cmp
pop
sbb
mov
jmp
icebp
jae
test
pop
nop
(bad)
sub
mov
pushf
sbb
mov
inc
repnz
lock
retf
aad
dec
jnp
in
ja
adc
aad
leave
popa
aaa
js
movs
sub
mov
movs
mov
xchg
outs
int
pusha
or
dec
lea
out
shl
mov
push
xor
not
adc
cmp
hlt
jno
or
inc
mov
cmp
out
xor
arpl
or
sbb
and
sub
jecxz
scas
xor
or
hlt
lea
ficomp
sub
lahf
dec
sbb
sar
mov
fstp
xor
or
lds
neg
gs
popa
mov
loop
dec
mov
pusha
inc
pop
inc
jge
mov
sub
mov
or
adc
inc
int
fprem
test
mov
test
lods
scas
ins
outs
shr
mov
xor
cmp
cmp
loopne
or
mov
in
xchg
movs
xchg
in
iret
test
sti
aas
mov
xor
or
inc
sbb
xor
xlat
cld
push
mov
jl
mov
ins
cmps
xor
xchg
mov
and
into
jbe
scas
pop
cs
gs
and
gs
push
pop
mov
push
stos
sub
jbe
xor
(bad)
adc
stc
popf
aas
stos
test
pushf
je
cmp
outs
fptan
sub
jmp
mov
push
cmp
(bad)
cmc
xor
xchg
sbb
dec
aad
cmp
dec
sti
xor
in
add
test
mov
sbb
in
pop
fwait
or
add
mov
jnp
repz
retf
enter
cwde
sbb
dec
out
pop
out
jg
into
ss
inc
push
js
mov
fxtract
add
inc
hlt
fidivr
stc
(bad)
ins
ret
fdiv
(bad)
popf
xchg
adc
ss
ror
or
fidivr
jle
ins
repnz
sub
sub
mov
or
push
(bad)
aas
fnsave
test
aaa
mov
fdiv
test
fimul
ins
add
sahf
(bad)
push
mov
xlat
ja
popa
xchg
daa
ret
add
movs
add
ror
jbe
adc
mov
shl
sar
popa
je
and
cmc
push
fldcw
jb
rcl
jnp
retf
or
cmp
scas
mov
and
aaa
(bad)
mov
mov
pusha
push
mov
xor
and
jne
or
inc
cdq
mov
cmps
and
stc
push
push
push
inc
sbb
aam
in
call
mov
cmp
xor
sahf
push
mov
int3
dec
pop
inc
and
es
pop
das
pop
lods
(bad)
stc
push
bound
add
mov
push
fisttp
or
wrmsr
outs
add
and
xor
mov
and
xor
adc
loop
lods
clc
mov
sub
(bad)
setbe
xchg
sti
cmp
fwait
imul
xchg
das
sub
scas
pop
xor
push
popf
mov
xchg
clc
imul
cmp
ret
cmc
push
mov
jne
cmps
aaa
xchg
push
push
pusha
sti
leave
push
repz
jg
les
lds
stc
shr
pusha
test
mov
sbb
(bad)
cmps
in
and
xlat
out
test
mov
or
mov
sahf
cmp
ins
inc
retf
gs
or
mov
cmp
mov
call
cmp
inc
imul
dec
sub
loope
nop
das
and
mov
fldcw
pop
jl
xor
mov
(bad)
movs
lea
scas
mov
adc
mov
ja
hlt
ja
xlat
movs
mov
(bad)
loopne
xchg
arpl
clc
addr16
cwde
push
xchg
lahf
pop
sahf
cwde
and
mov
lahf
stc
shl
push
and
iret
jno
loop
add
repz
push
shl
shl
and
(bad)
rcr
jmp
push
adc
sub
add
int3
and
mov
mov
fsubp
enter
jl
mov
adc
cwde
dec
dec
aaa
mov
mov
ss
sbb
mov
ret
(bad)
dec
in
pop
gs
in
jbe
jnp
aaa
xchg
push
fadd
gs
jmp
add
cli
adc
pop
ret
mov
scas
ror
mov
xchg
sbb
push
repnz
sbb
cmp
and
push
(bad)
imul
fwait
dec
daa
adc
loope
dec
(bad)
(bad)
sub
inc
xor
xor
ja
jnp
and
in
xchg
dec
inc
jecxz
add
jne
inc
xor
adc
int3
sbb
and
mov
xor
push
rol
out
fnsave
movs
sbb
ja
xchg
push
push
jb
(bad)
inc
in
shl
jp
sub
sahf
jg
std
dec
ret
pop
cmp
sbb
dec
xor
jns
leave
push
shr
cmp
xor
mov
jne
lds
sub
call
sbb
push
addr16
and
and
repz
imul
shl
fist
push
sbb
push
fimul
xchg
dec
loope
int
das
and
shr
mov
inc
cli
sub
gs
pop
sub
mov
mov
inc
dec
mov
call
sahf
adc
sub
lahf
fcmovb
das
stos
lahf
retf
sbb
fstp
sbb
cmp
in
adc
and
dec
add
fistp
adc
mov
xchg
sbb
das
and
push
mov
sub
cdq
pop
xchg
mov
fstp
inc
cmps
int
loop
sahf
stos
pop
dec
(bad)
lock
dec
fisubr
imul
leave
jmp
je
stos
add
push
lds
xchg
jo
add
movs
cdq
pop
stc
xchg
add
xlat
mov
int
lods
jge
int3
push
hlt
test
rcr
in
aam
enter
es
dec
pop
adc
add
mov
fmul
or
jge
mov
fst
push
add
inc
mov
sub
xchg
inc
loope
sub
inc
repnz
out
icebp
xchg
xchg
ret
or
(bad)
into
sub
adc
dec
shr
js
inc
jne
mov
test
sub
jae
dec
adc
jbe
enter
icebp
xor
loop
outs
jo
das
(bad)
clc
fcom
retf
jae
push
retf
ficom
iret
ror
out
outs
and
xor
es
pop
cmp
mov
pop
push
or
xor
addr16
aad
stos
rcl
adc
(bad)
inc
clc
sub
mov
gs
cmp
cmp
enter
int
repz
pop
icebp
xor
shl
jmp
jno
test
jbe
lea
scas
mov
out
xchg
in
add
mov
rcr
pop
out
(bad)
sub
(bad)
mov
sub
ret
cmps
pop
jns
jno
xlat
add
stos
pushf
cmp
cs
enter
mov
sub
jecxz
mov
stos
retf
movs
and
(bad)
stos
ss
add
xchg
mov
adc
loope
test
nop
ds
jecxz
test
adc
jle
jg
cli
jae
neg
xlat
sub
mov
mov
fcmovbe
retf
xor
outs
ds
int
stc
cld
adc
xchg
movs
push
push
pop
inc
repnz
adc
xor
in
mov
arpl
mov
xchg
pop
test
sar
push
loopne
sub
aad
xor
and
mov
out
jb
xchg
adc
push
ret
call
and
jno
cwde
xor
cmp
mov
cmp
retf
test
scas
inc
rol
stc
sub
lahf
inc
xchg
or
sar
ja
outs
in
sub
addr16
dec
jne
aad
jnp
mov
xor
push
and
xor
fistp
dec
les
dec
frstor
xor
cmps
inc
pop
data16
sbb
(bad)
mov
cmc
pusha
loopne
hlt
cmp
test
adc
mov
iret
jl
add
xchg
fucomi
xchg
bt
inc
ret
and
and
sbb
out
sub
or
jbe
rol
loopne
push
sti
js
xor
mov
add
(bad)
sbb
or
jb
icebp
add
ret
cmp
dec
cmps
push
shl
and
jbe
mov
loop
jnp
jnp
push
mov
dec
jp
add
mov
sub
push
popf
jmp
in
jbe
pop
stos
jle
push
or
xor
repz
cmps
push
sbb
push
jp
dec
test
pushf
add
adc
int3
mov
jns
xchg
mov
scas
ffree
push
xchg
mov
sbb
cmc
push
out
pop
bound
and
and
test
xor
mov
inc
or
test
jmp
inc
int
cmps
xor
das
leave
aas
fcom
xchg
pop
push
cmc
test
pop
cwde
xchg
jo
add
leave
sub
ds
fmulp
int3
in
xchg
repnz
das
bound
(bad)
adc
call
mov
mov
xchg
sbb
inc
daa
sub
sub
dec
xchg
les
clc
lods
ins
mov
mov
loope
pop
or
mov
or
push
mov
inc
in
pop
loope
sahf
push
push
je
pop
and
add
sub
and
ficom
mov
cmp
fild
mov
cmps
in
and
dec
and
loopne
and
ja
xor
movs
retf
fisttp
ss
jnp
push
cmp
mov
pavgw
int
mov
xchg
jae
jo
pushf
nop
pop
add
dec
mov
stc
xor
sahf
mov
inc
js
jo
scas
push
test
ja
shr
jmp
jge
mov
mov
fs
dec
and
dec
nop
pusha
adc
ficom
int3
movs
loop
not
ret
inc
push
cmp
jg
and
rcl
leave
sbb
out
sahf
dec
dec
xor
shl
loope
mov
mov
mov
pop
push
rcr
aaa
inc
or
movs
mov
or
sbb
mov
addr16
nop
outs
pop
int3
add
sub
jbe
push
daa
into
(bad)
mov
test
add
sub
cld
jmp
(bad)
enter
(bad)
(bad)
imul
jno
mov
lea
jge
push
mov
hlt
adc
mov
inc
mov
mov
inc
pushf
cmp
gs
ret
cmp
shr
add
cs
mov
xor
outs
inc
daa
shl
and
addr16
in
add
aaa
inc
popa
aas
lds
xor
mov
or
dec
pusha
mov
cmp
xor
mov
pusha
in
inc
in
mov
fucomp
stos
add
add
sbb
out
cmp
or
(bad)
jmp
shl
cmp
(bad)
xchg
loop
sbb
jl
es
jnp
xchg
push
fmul
or
mov
iret
stos
pop
or
out
xchg
sahf
lds
mov
push
and
scas
pop
and
jge
cmp
stos
test
sbb
xlat
fiadd
nop
dec
call
or
test
fiadd
sub
sub
jnp
stos
mov
not
adc
ins
pop
inc
xor
sbb
ins
popa
adc
daa
push
cmp
shl
jge
cmps
pop
sub
loopne
mov
dec
and
mov
fwait
adc
push
mov
bound
add
retf
mov
xchg
pop
ret
sti
xor
xchg
cwde
lea
mov
xor
mov
test
mov
std
nop
jmp
ins
push
imul
popf
cmc
(bad)
addr16
test
xor
retf
and
and
ret
loope
(bad)
fisttp
loop
retf
jg
into
push
aaa
xchg
cmc
stos
mov
rcl
mov
mov
xchg
repnz
aas
xchg
mov
out
repz
retf
xor
adc
and
(bad)
xchg
mov
out
push
lds
data16
and
xchg
fsub
bound
pop
adc
xchg
ds
xchg
push
ins
test
shl
jg
and
push
loope
sahf
xor
push
out
aam
daa
loope
cmp
in
push
arpl
fwait
mov
rol
sbb
aam
mov
jge
clc
out
add
fisub
push
push
ret
movs
cmp
dec
pop
inc
sbb
js
rol
lds
test
or
xor
sbb
outs
mov
cmc
mov
call
scas
popa
dec
loope
mov
push
icebp
pop
push
push
add
das
fst
idiv
clc
in
xor
outs
mov
fbstp
into
xlat
xor
adc
inc
mov
sub
sbb
inc
bnd
daa
hlt
or
aas
(bad)
call
jnp
xlat
or
push
jecxz
jno
fwait
push
adc
rcr
jne
inc
add
gs
sub
mov
mov
inc
adc
movs
lea
pop
fld
out
int
or
dec
fcom
retf
icebp
or
mov
loope
lds
lods
jno
std
out
aad
jp
ja
adc
sub
inc
test
or
fild
sbb
(bad)
std
aaa
mov
mov
std
and
adc
cdq
jmp
xchg
(bad)
fld
cmp
mul
cld
pop
les
sub
iret
je
mov
repnz
ins
inc
in
sti
mov
lods
jmp
push
xchg
mov
add
test
mov
clc
mov
push
mov
sub
(bad)
mov
popf
imul
jge
into
outs
lds
inc
repz
xor
xor
out
ror
std
sbb
pop
sub
inc
jae
rol
cmc
das
(bad)
jne
push
fs
adc
out
adc
cwde
pop
jp
sub
neg
in
mov
add
add
ret
out
sar
fiadd
cmp
adc
les
push
cmp
lods
test
pop
adc
fcmovu
rol
mov
mov
xor
add
or
mov
sbb
out
jo
cdq
sbb
and
dec
xchg
jp
test
test
xchg
jo
pop
retf
jmp
cmp
lock
lds
and
loope
ins
repnz
(bad)
mov
mov
xor
adc
and
mov
xchg
nop
inc
sub
fstp
jl
repz
mov
cwde
push
stos
movs
rcr
add
fcom
and
jmp
pop
fld
jl
rol
icebp
sti
dec
push
add
xor
mov
mov
cwde
jo
xchg
icebp
sbb
ds
push
rcl
jnp
pop
(bad)
jmp
xor
stc
cmp
cmp
mov
pusha
dec
cmp
jne
iret
jl
mov
call
fisttp
les
xchg
call
cmp
enter
sar
test
call
pop
inc
scas
cmps
out
cmp
pusha
scas
loopne
or
or
scas
mov
ja
enter
sbb
mov
xchg
xor
jmp
fdiv
mov
ret
xchg
fnstenv
add
data16
dec
jo
inc
not
jmp
outs
xlat
push
loopne
mov
jo
test
jl
pop
pop
push
jae
std
push
jl
and
jl
movs
xor
lahf
daa
or
sbb
mov
cmc
popa
lea
outs
cld
lock
add
dec
in
lds
(bad)
fsubr
inc
add
jb
repnz
push
sbb
outs
sbb
inc
pop
pushf
mov
add
call
mov
and
jae
lea
xchg
(bad)
pushf
in
mov
sbb
cmp
pop
mov
in
sub
std
out
loop
int3
retf
inc
cwde
daa
fimul
scas
fsubr
sub
adc
fidivr
fnstcw
les
xlat
mov
adc
mov
fldcw
xor
sti
movs
aad
dec
jnp
pusha
fistp
add
retf
movs
out
retf
outs
sbb
inc
out
jl
mov
loopne
mov
dec
pcmpeqb
ret
mov
dec
in
outs
leave
es
lahf
cmp
aad
test
or
push
adc
adc
and
out
mov
out
aas
dec
sbb
add
sub
jb
dec
xchg
sbb
ror
or
outs
jns
in
ds
and
dec
mov
jb
push
mov
xchg
sub
mov
adc
sbb
cld
dec
or
pushf
add
sub
jp
cli
(bad)
jnp
repz
add
or
jle
jmp
arpl
dec
jae
test
pop
add
mov
jbe
push
(bad)
aam
pop
adc
bound
in
(bad)
rol
add
push
aaa
sbb
push
cwde
js
out
jecxz
ret
sahf
(bad)
test
shl
pop
pop
ds
aam
inc
fs
fsub
mov
push
jo
push
call
shr
data16
sahf
je
ins
xlat
int3
push
push
mov
xchg
jnp
pop
push
push
fdiv
push
mov
gs
cmp
mov
inc
cld
imul
xor
enter
cmovno
(bad)
mov
push
in
xor
(bad)
enter
dec
ds
mov
fistp
pop
outs
ret
jnp
addr16
js
and
mov
and
bound
das
test
pop
mov
cmp
imul
mov
push
mov
repnz
jbe
cwde
jmp
inc
dec
or
rcl
imul
mov
test
sbb
pop
(bad)
ins
jmp
add
xchg
jge
add
pop
mov
jp
out
cmp
xor
fstp
dec
and
adc
and
mov
cli
cmp
mov
mov
(bad)
in
rcl
nop
and
add
inc
movs
and
sbb
mov
arpl
xor
jae
retf
jo
xor
js
push
rcl
adc
test
cmp
clc
popf
and
pusha
mov
nop
lds
fisttp
adc
push
mov
mov
add
imul
mov
mov
xchg
mov
push
mov
mov
dec
sbb
in
or
cdq
pop
pop
stos
jae
imul
cmp
jg
xchg
pop
jmp
mov
jg
cmp
(bad)
cmp
push
jge
mov
and
stos
xchg
mov
sbb
loopne
push
movs
clc
sub
out
or
loop
inc
ja
fcom
lahf
fsubr
pop
jb
fist
cwde
push
shl
popa
jb
inc
push
(bad)
push
fcomp
xlat
mov
idiv
mov
pop
and
sbb
jnp
outs
push
repz
xchg
sbb
jbe
jno
clc
out
xchg
test
je
stos
or
mov
cmp
cmps
push
int
(bad)
pop
push
add
xchg
cdq
nop
cli
pop
fld
lock
adc
push
aaa
jmp
pop
in
mov
addr16
je
xchg
inc
mov
mov
dec
cmp
sbb
loopne
jg
pop
xchg
mov
or
movs
shr
in
pop
mov
clc
or
shl
int3
fisttp
mov
add
ret
mov
ret
sbb
aam
cmp
fcomip
add
mov
xchg
(bad)
mov
popa
nop
shl
icebp
int
je
inc
into
push
mov
or
mov
call
dec
fidiv
ins
addr16
sbb
sbb
pop
push
jbe
mov
shl
and
std
movs
ds
push
dec
mov
pushf
fcmovne
push
call
mov
mov
adc
nop
(bad)
addr16
pop
je
popf
cmp
fdivr
in
or
jg
and
mov
in
in
push
dec
call
add
dec
scas
lds
add
inc
sahf
push
cli
mov
jecxz
dec
loope
add
jne
add
pop
pop
adc
stos
in
push
and
stos
cmc
pushf
mov
fistp
cmp
jb
enter
(bad)
sub
xor
movs
gs
stos
push
ja
sub
sub
mov
push
adc
jle
and
and
sub
test
std
movs
js
or
add
aad
fldenv
(bad)
icebp
and
in
add
cmps
xlat
push
jg
cmp
jmp
pop
xor
mov
mov
pop
pop
xchg
xlat
test
icebp
fld
lods
mov
jae
mov
xchg
fcomp
outs
adc
cmps
popf
cdq
jb
mov
jl
(bad)
sbb
pop
popf
je
shr
push
mov
mov
jle
fadd
clc
inc
inc
ins
ror
js
dec
pusha
mov
retf
movs
push
sbb
hlt
(bad)
nop
fcomp
dec
inc
rcr
cmp
in
fcmovb
jmp
xor
sub
cmp
dec
mov
cdq
sub
lods
movs
pusha
test
nop
xor
sahf
inc
jo
xchg
mov
cld
push
dec
or
xchg
adc
rol
dec
cld
mov
sub
inc
mov
sbb
pusha
push
aaa
ds
inc
push
pop
test
push
(bad)
mov
popf
ret
fild
xor
pop
push
or
push
out
adc
outs
out
dec
cdq
shl
mov
sub
pusha
sbb
lock
inc
aaa
pop
cdq
out
pop
ret
dec
lds
ss
jbe
test
psubusb
je
in
xor
jns
xlat
adc
lahf
push
push
inc
mov
mov
and
jmp
je
mov
shl
cmp
sahf
mov
sar
fsubr
jecxz
call
scas
push
add
stc
mov
xchg
adc
add
(bad)
xchg
rol
int3
into
dec
mov
ds
jnp
cmp
xor
lods
sahf
dec
mov
int3
mov
pop
cmp
call
mov
insertq
dec
pop
imul
inc
xchg
jp
push
inc
adc
fisttp
cmp
mov
cmps
cmps
loopne
gs
stc
lock
(bad)
ss
mov
xchg
je
in
inc
lea
shl
mov
fnstsw
or
fldcw
cmp
cmps
ror
pop
push
call
scas
push
out
mov
rol
aad
mov
or
(bad)
out
popa
push
in
xlat
les
jne
push
sub
push
mov
xchg
inc
test
and
ror
xchg
adc
xchg
out
daa
add
retf
mov
fstp
lock
inc
mov
pop
repnz
jo
fwait
js
hlt
repz
dec
aam
call
push
ds
or
and
test
cmp
sbb
lods
imul
adc
fdivr
daa
retf
jb
push
dec
les
shl
push
dec
inc
jne
nop
(bad)
xchg
xor
gs
sbb
jb
mov
jle
cdq
sar
in
push
(bad)
out
dec
xchg
rcr
sbb
dec
data16
sbb
repnz
pop
in
cmc
push
cmp
stos
pushf
ja
ja
xor
xlat
ret
dec
enter
cmp
pop
jae
cmp
mov
(bad)
mov
int3
(bad)
enter
mov
jge
jp
cmp
cmp
repnz
(bad)
jge
in
or
es
adc
mov
xchg
push
loopne
lock
cli
sub
std
in
test
retf
lahf
jge
mov
mov
adc
xchg
int3
mov
xlat
mov
xchg
out
cli
pop
pop
mov
push
movs
and
pop
lock
rcl
pop
xor
push
not
inc
fcomp
push
sbb
push
pop
sti
cwde
and
jecxz
jecxz
add
push
dec
(bad)
push
push
xor
movs
(bad)
sbb
cli
loopne
test
jae
jle
aas
fs
out
add
mov
mov
mov
sbb
inc
clc
mov
mov
jp
not
mov
ins
addr16
in
cmp
mov
movs
add
imul
push
ror
jb
sub
inc
inc
iret
jno
and
push
and
cmp
outs
div
mov
in
mov
std
mov
jmp
mov
sbb
jo
outs
xor
push
movs
fst
mov
sub
inc
call
mov
addr16
mul
mov
test
cli
sub
adc
xchg
dec
jnp
lea
fucomi
shr
test
jb
mov
gs
mov
mov
lock
mov
cmps
push
and
xchg
jmp
in
inc
test
rol
ins
mov
push
pop
out
out
jl
or
popf
jb
fucom
les
add
addr16
int
in
mov
(bad)
js
jbe
mov
bound
fst
je
cdq
daa
icebp
pop
fild
inc
mov
mov
out
xchg
push
add
(bad)
into
mov
outs
add
and
fist
inc
mov
jl
popf
(bad)
outs
ss
imul
mov
les
mov
xor
jmp
cmp
xchg
cli
clc
sub
xor
test
test
inc
jmp
cmps
sar
cld
div
outs
xor
push
and
pusha
ja
test
inc
xor
lds
in
cmp
nop
mov
pop
mov
daa
xor
shl
mov
ja
or
push
add
or
es
call
fwait
cmp
dec
fstp
das
movs
inc
aaa
sub
mov
dec
aad
adc
popa
(bad)
push
pop
in
mov
dec
test
(bad)
xchg
adc
icebp
ins
daa
push
and
(bad)
lods
cdq
or
ds
in
ss
fild
adc
movs
(bad)
or
adc
je
pop
cld
popf
jmp
je
sbb
xchg
cmps
xchg
xchg
mov
pop
js
mov
cmp
and
in
(bad)
pop
mov
sub
das
sub
or
xor
adc
sbb
sbb
stos
les
hlt
outs
adc
nop
sahf
fstp
iret
loopne
push
test
test
outs
pushf
sbb
sbb
sbb
pop
jno
inc
xor
iret
aas
cmp
push
repz
cld
repnz
mov
cs
sub
mov
pop
fstp
pop
mov
and
ret
xor
cmp
adc
jmp
cmps
mov
inc
mov
pop
es
jmp
push
mov
xchg
das
push
rol
pop
jno
pusha
mov
gs
idiv
inc
call
(bad)
aam
sbb
nop
mov
(bad)
adc
test
jg
or
mov
sbb
and
fbld
add
sbb
arpl
xchg
mov
pop
fidivr
push
cmp
sar
inc
stc
mov
or
mov
dec
pop
sahf
hlt
mov
adc
(bad)
(bad)
into
cmps
fxch
sar
mov
mov
jl
pop
fwait
in
imul
pop
(bad)
mov
mov
les
and
mov
sub
enter
dec
jae
jge
push
mov
mov
repz
sbb
dec
cmp
push
adc
jl
stc
pop
loopne
mov
push
jns
stos
or
jo
inc
xchg
dec
popf
mov
or
xor
bound
mov
cwde
popf
jmp
sub
add
xor
iret
dec
cmc
lods
jmp
sub
addr16
jmp
in
adc
jp
icebp
js
jb
repnz
dec
push
fwait
sbb
adc
dec
mov
aad
outs
and
and
add
sbb
cld
jno
adc
xchg
cmp
fsub
fisttp
inc
adc
mov
push
jp
push
jmp
add
fisttp
movs
mov
bound
outs
mov
jae
xchg
jns
xchg
cmp
movs
pop
xchg
and
or
pop
ret
aas
ins
in
arpl
cmp
adc
sub
loop
int
setge
sbb
xchg
dec
cwde
stos
mov
aaa
mov
div
lahf
pusha
je
ret
sti
inc
arpl
and
push
jmp
pop
ret
ret
mov
(bad)
adc
dec
or
mov
es
icebp
jp
test
pop
repnz
sets
jle
mov
daa
xchg
aas
cs
scas
outs
dec
out
or
mov
in
push
inc
fcomp
inc
sub
mov
mov
loopne
dec
cli
cmps
and
xchg
fdivrp
mov
call
pop
imul
fwait
sub
cli
adc
mov
or
in
mov
or
pop
and
in
test
mov
mov
loopne
push
fldcw
and
mov
cmps
out
(bad)
mov
aam
arpl
sub
cmc
bound
add
jno
ftst
mov
pop
pop
stos
rcr
cmp
dec
jns
mov
cmp
ret
retf
inc
sbb
jb
dec
xlat
scas
sub
popf
dec
xchg
aam
scas
dec
pop
cmp
inc
add
and
inc
adc
mov
or
dec
push
inc
mov
sub
std
rol
imul
aaa
in
mov
xor
int3
sub
enter
cs
movs
div
xor
push
sbb
data16
jl
stc
hlt
sub
ficomp
jns
scas
sub
into
call
das
(bad)
jp
and
sahf
push
mov
push
ret
je
cmps
aas
loop
mov
inc
xchg
mov
add
ins
xchg
jae
in
sub
jns
cmp
js
and
cli
movs
adc
imul
dec
lods
inc
mov
js
jecxz
and
out
xlat
sti
(bad)
mov
mov
imul
(bad)
outs
xchg
xchg
pop
cld
mov
shl
mov
add
xor
cmp
bound
pusha
ja
push
iret
ret
mov
mov
lods
xor
mov
fsubr
pushf
mov
mov
hlt
in
xchg
inc
xor
outs
(bad)
fnstcw
out
jne
imul
punpcklbw
or
test
sub
into
fs
out
loope
cdq
das
pop
add
clc
jl
cmps
out
add
add
adc
mov
fisub
ret
and
adc
mov
push
mov
loope
push
add
xor
fbstp
cmp
inc
cmp
rol
loop
dec
into
jns
ficomp
or
scas
sub
sahf
sub
mov
and
dec
mov
movs
sbb
push
lods
movs
mov
rol
cmp
imul
jl
(bad)
xchg
std
mov
sbb
and
jp
adc
push
or
retf
shl
adc
iret
std
and
xor
out
mov
sub
xchg
movs
cli
xor
or
(bad)
sti
out
adc
ds
jmp
call
xor
sbb
std
mov
pop
xchg
outs
pop
dec
inc
in
jmp
popa
ss
add
loopne
out
jmp
jg
push
add
cmp
nop
add
ins
xor
pop
clc
mov
fld
mov
jg
pop
push
fnstenv
xor
movs
adc
mov
dec
mov
add
mov
and
scas
cmp
add
stos
xor
cmp
xor
cwde
lods
mov
enter
pop
dec
dec
jmp
jl
sub
adc
test
pop
repnz
mov
gs
std
scas
fdiv
and
jae
pop
xchg
push
aam
inc
add
rcl
cwde
adc
lock
sahf
dec
fsubr
mov
mov
and
adc
pop
popf
or
es
or
push
mov
stos
jae
sar
(bad)
xchg
test
or
sti
pop
iret
xor
popa
dec
xlat
inc
in
out
iret
cmp
and
and
mov
jns
jns
xchg
sub
dec
dec
aam
add
dec
mov
push
(bad)
stos
mov
(bad)
mov
xchg
arpl
jnp
lock
clc
sar
inc
sahf
and
pushf
dec
inc
sub
retf
ss
xor
pop
mov
(bad)
(bad)
and
inc
jmp
mov
ret
scas
addr16
add
mov
jp
mov
clc
add
xor
push
fdivr
shl
shl
mov
into
add
mov
ror
push
fs
(bad)
push
nop
scas
iret
dec
mov
ret
mov
adc
and
jp
clc
fnstsw
dec
cld
jle
dec
xchg
test
push
xchg
sub
scas
xchg
push
sbb
rol
test
jb
ss
scas
out
jnp
rcr
aad
adc
int3
aam
xor
in
or
xor
ret
mov
dec
loope
push
popf
adc
call
dec
popa
cmp
(bad)
mov
out
xchg
or
xor
pop
pop
loop
jo
stos
fnstenv
push
test
mov
mov
pop
ret
jmp
mov
leave
or
jo
arpl
pop
fldcw
aam
mov
jb
cmp
pop
call
(bad)
call
xchg
lods
adc
sahf
xor
lods
cwde
xlat
addr16
cmp
test
ror
sub
dec
pop
lds
adc
cs
push
xor
aam
mov
mov
push
xor
xchg
push
sub
inc
shl
and
sti
aam
ret
push
mov
nop
xor
in
jnp
sahf
add
aam
shl
ds
jmp
fisubr
stos
ins
lods
repnz
sub
push
sub
shl
fiadd
mov
lahf
nop
mov
jecxz
jp
jmp
and
stos
add
arpl
push
sub
test
pop
sahf
pushf
xchg
mov
fcmovu
sahf
out
outs
cdq
loop
arpl
xor
sub
dec
add
mov
adc
gs
cmps
sub
(bad)
out
jmp
retf
in
shr
(bad)
xor
mov
(bad)
sub
mov
sbb
jns
out
inc
add
(bad)
or
push
aam
xchg
in
repnz
mov
mov
nop
sbb
into
je
jb
je
mov
dec
ficom
sbb
movs
in
outs
inc
in
and
aam
mov
mov
ds
outs
mov
adc
test
xor
out
ins
pusha
fstp
inc
cmp
or
int3
or
call
fisttp
add
mov
xchg
ins
inc
push
add
xchg
movs
clc
fcomi
(bad)
repz
cli
data16
lds
dec
dec
idiv
mov
inc
hlt
pop
cld
jnp
mov
jl
jno
pushf
push
out
aaa
clc
shl
movzx
loopne
je
cmovp
retf
jbe
jae
in
lahf
lods
sahf
sub
out
lods
sub
cmps
ins
(bad)
lea
xor
mov
call
mov
pop
arpl
rcr
rcl
call
jnp
jp
xor
movs
mov
(bad)
cld
es
or
ret
imul
arpl
push
sub
dec
iret
mov
mov
jp
mov
push
xchg
inc
jecxz
data16
pop
mov
scas
sahf
sbb
cmp
das
leave
and
mov
out
push
jae
sbb
and
xor
jns
ins
ins
jo
call
mov
das
hlt
mov
mov
inc
adc
aad
add
movs
fs
int
std
out
xchg
loope
ss
sar
sbb
mov
out
cmp
cmp
shl
stc
aaa
mov
push
dec
(bad)
pop
sub
mov
sub
cmc
dec
in
sti
mov
jns
loop
out
jns
das
cld
pop
cwde
cmp
test
(bad)
mov
pop
xor
cmp
xchg
fxch
dec
mov
rol
and
inc
push
push
push
icebp
jmp
mov
xchg
add
cmp
mov
int3
add
dec
xor
neg
mov
inc
dec
xchg
pop
comiss
retf
jg
fbstp
lds
push
sar
pop
mov
dec
call
test
jmp
fnstsw
inc
push
fptan
mov
or
add
or
xor
jne
mov
popf
push
add
lahf
cmps
(bad)
jg
inc
mov
mov
mov
popf
push
mov
repz
and
hlt
aas
in
pop
out
jg
dec
sti
mov
cmp
test
xor
(bad)
or
jns
pop
outs
or
push
push
mov
mov
js
loopne
jb
dec
pop
mov
mov
aam
inc
xor
sub
xchg
add
cmp
shr
(bad)
int
pusha
mov
mov
popf
rcr
lods
aas
lods
imul
test
dec
fs
xor
dec
arpl
movs
bound
sbb
pop
outs
and
dec
pusha
mov
shl
pop
dec
psubd
int
push
jle
and
mov
mov
and
sub
mov
pop
fst
ret
stos
movs
out
mov
lods
mov
fld
jmp
jl
fild
xchg
pop
sbb
adc
xchg
mov
add
test
mov
xor
popa
mov
ret
sahf
fwait
shr
jb
clc
test
(bad)
data16
mov
jo
pop
push
fsubr
lds
nop
ja
add
clc
xor
mov
mov
aaa
cmp
or
jmp
inc
dec
push
push
loop
in
inc
xchg
jp
enter
xor
mov
sub
sub
dec
xchg
pop
(bad)
cli
xor
sub
xor
inc
dec
addr16
icebp
mov
inc
or
sbb
inc
ror
loop
adc
push
sti
add
pop
ss
adc
jle
sub
dec
xchg
leave
mov
xchg
jne
push
cmp
and
outs
hlt
cmps
loope
retf
dec
in
xlat
adc
push
in
add
movs
cmp
sub
jmp
test
lahf
addr16
and
shl
xchg
scas
test
adc
dec
cmp
(bad)
aaa
sub
test
(bad)
pop
mov
pop
test
mov
or
repnz
mov
dec
and
retf
sub
mov
scas
je
test
pop
adc
xchg
ss
or
xchg
xlat
inc
mov
jmp
and
aas
das
mov
sbb
or
add
sub
int3
jbe
test
xlat
loop
sub
jp
data16
mov
jae
pop
int
pop
push
or
mov
sbb
aad
out
mov
shl
and
rcr
xchg
mov
jne
clc
inc
or
xchg
es
shl
mov
pusha
cmp
call
push
add
sbb
jle
sbb
mov
sbb
dec
mov
cmp
stos
ja
pusha
jo
add
imul
mov
imul
and
xor
jb
imul
jp
sub
iret
dec
mov
(bad)
jl
pushf
in
pop
mov
retf
fstp
idiv
daa
outs
and
or
jp
cli
repnz
jle
fdivr
(bad)
push
dec
cmps
fisub
(bad)
ja
lock
push
or
test
mov
cdq
jl
loop
mov
add
fmul
push
inc
mov
fucomp
sbb
mov
jno
mov
fidiv
out
fsubr
(bad)
enter
mov
push
or
jecxz
mov
arpl
inc
adc
in
add
imul
lods
ret
imul
lahf
xor
retf
xchg
fistp
mov
adc
movs
int3
add
movs
push
push
call
stos
sti
sbb
inc
sub
xor
(bad)
iret
dec
(bad)
iret
jl
sub
mov
data16
mov
arpl
lds
icebp
lea
sub
push
and
lock
or
inc
jnp
mov
push
data16
cs
sub
into
and
jl
aas
xchg
pop
or
xchg
inc
mov
outs
or
sub
inc
adc
adc
jge
clc
ret
push
adc
fistp
imul
mov
and
sbb
sub
shl
pop
inc
or
int
fcom
push
jmp
icebp
imul
push
add
add
jmp
in
cld
cmp
dec
cmps
push
(bad)
sti
pusha
retf
sub
popa
cmp
inc
retf
mov
xor
pop
push
xor
ja
icebp
pushf
push
mov
and
mov
mov
jg
in
cmp
pop
pop
bound
xchg
jbe
mov
(bad)
movs
out
pop
shl
ja
int
jg
cmp
clc
(bad)
out
pop
push
idiv
add
retf
add
jp
call
ret
pop
rcr
std
outs
cmp
mov
xchg
test
xor
out
xchg
fidiv
jg
push
loop
sub
rcr
(bad)
jle
imul
push
push
or
aam
mov
pop
aam
mov
xchg
aam
sub
or
ja
jg
loop
stos
or
pop
shl
ja
mov
imul
or
fisub
test
push
pop
sbb
xchg
aam
fst
test
sbb
loope
stos
scas
inc
scas
add
xchg
pop
(bad)
(bad)
ficom
xchg
outs
pushw
adc
out
aad
(bad)
adc
push
cmp
sti
push
jg
cmp
inc
or
popa
cs
call
xor
sbb
cs
xchg
and
fidiv
ds
das
leave
call
inc
xor
or
movs
ins
sbb
gs
cdq
ret
test
pop
ds
mov
mov
xor
ss
cmp
adc
mov
movs
popa
test
das
stos
dec
enter
cmps
sub
retf
inc
jne
outs
imul
lock
shl
adc
jns
sbb
jno
fcom
ror
clc
pop
adc
xor
jecxz
dec
and
stc
add
mov
imul
mov
mov
cmp
mov
test
sbb
mov
adc
jmp
movs
mov
sub
retf
xchg
cmp
sub
sbb
sub
jmp
hlt
jb
dec
mov
fwait
mov
ret
arpl
lds
lds
cs
inc
(bad)
outs
mov
sub
cmc
dec
(bad)
xor
adc
sub
out
idiv
int3
movs
or
daa
hlt
das
add
(bad)
adc
adc
mov
pop
cmps
mov
pop
out
es
and
ret
jbe
shr
out
push
dec
push
sbb
pop
test
add
adc
loopne
add
mov
dec
outs
adc
outs
cmp
imul
cs
movs
push
repnz
daa
push
mov
popa
mov
sbb
les
jnp
adc
push
and
cmp
pop
add
ins
or
(bad)
adc
loopne
pusha
cmps
sbb
call
xchg
les
fwait
xchg
div
mov
pop
out
lods
repz
pop
outs
jp
jl
and
(bad)
and
mov
dec
dec
sub
dec
push
int3
pop
push
stos
in
lods
dec
or
enter
and
xor
adc
and
add
(bad)
ficom
outs
dec
adc
lods
ds
mov
sti
jp
popa
adc
mov
adc
test
mov
sahf
bnd
or
retf
push
cmp
jbe
cdq
aad
fisubr
dec
xchg
repz
scas
fcmovnu
leave
pop
mov
xor
adc
jg
mov
daa
ror
adc
cmps
xor
repz
jmp
std
out
or
or
jb
sbb
ins
outs
mov
test
loop
sub
ss
dec
jle
mov
test
iret
ficomp
pop
push
cmp
pop
inc
sar
add
xchg
popf
rcr
es
cs
pop
inc
pop
ins
inc
mov
clc
jns
adc
out
xor
jmp
sbb
aam
cmp
cmps
sub
and
and
lahf
add
outs
mov
jle
mov
sub
es
icebp
add
or
pusha
scas
into
mov
out
fwait
or
or
or
fild
inc
in
test
mov
jg
pop
pop
pop
add
test
push
scas
test
sub
outs
pop
jecxz
(bad)
pop
jne
push
std
jge
jp
push
adc
xor
gs
add
(bad)
adc
fild
ins
std
jb
scas
inc
test
dec
mov
shl
or
aaa
sub
jo
mov
cmc
xchg
or
inc
pop
pop
aam
into
pop
jecxz
jo
dec
mov
adc
jle
leave
inc
or
cmp
rol
imul
cld
xchg
pop
outs
mov
adc
movs
dec
or
push
pop
pushf
call
(bad)
mov
push
scas
xchg
int
repnz
jg
jnp
and
xor
inc
ins
enter
sub
cmp
adc
dec
arpl
lods
or
jno
ror
inc
xlat
dec
sbb
bound
inc
pop
pop
mov
mov
cdq
adc
loop
sub
jp
cmp
mov
or
jno
fnstenv
test
cmp
stc
in
cmp
addr16
in
icebp
xlat
xor
shl
adc
mov
imul
dec
mov
mov
pop
pop
(bad)
cmps
mov
imul
call
cmps
sub
sbb
mov
jo
xchg
test
adc
frstor
rcr
fbstp
xchg
pop
cvtps2pi
sbb
sbb
pop
mov
cmps
fldz
or
out
les
cmc
sbb
jl
(bad)
lods
(bad)
jns
cmp
push
jb
std
dec
and
jge
mov
jmp
jge
inc
test
ins
movs
or
loop
fnstenv
dec
cld
in
aad
xchg
movs
inc
fist
add
les
pop
stos
call
mov
mov
dec
call
jae
ds
fwait
push
dec
in
or
(bad)
(bad)
cwde
scas
into
sub
int3
imul
mov
cmp
in
dec
push
in
shl
adc
pop
and
pop
fwait
push
pop
mov
dec
stos
cmp
xor
(bad)
jecxz
movs
shl
jae
jns
aaa
movs
push
loope
add
sbb
add
cs
or
push
or
test
add
fwait
jmp
pusha
push
js
jle
pop
inc
or
push
or
sbb
ret
fdivr
aas
mov
in
gs
imul
rdtsc
mov
jae
adc
sti
push
cmc
cmc
test
mov
jae
xchg
cmp
pop
dec
cwde
aam
fwait
mov
push
cs
pop
xor
mov
jmp
push
jae
cwde
ja
jbe
hlt
mov
aaa
mov
xchg
movs
xchg
pop
out
js
inc
imul
ficomp
in
push
add
sar
mov
dec
aam
cmps
cmp
loope
xor
(bad)
nop
ja
jne
pop
or
xchg
xchg
out
jne
push
movs
sub
dec
jg
or
and
push
sahf
and
xlat
push
jmp
mov
clc
jns
std
fstp
movs
mov
jns
dec
mov
fwait
dec
push
and
test
pop
mov
sub
mov
mov
cmps
call
cmc
stos
ret
add
popa
or
bswap
in
jne
or
mov
jnp
adc
dec
lds
mov
adc
cwde
icebp
(bad)
iret
xchg
inc
pop
nop
rcl
pop
mov
push
lods
test
out
cmp
push
inc
push
inc
cld
push
mov
cli
fneni(8087
jmp
jmp
add
imul
dec
mov
ja
ds
xor
or
xchg
dec
pop
xor
stc
mov
in
xchg
(bad)
lahf
cmp
push
mov
mov
shl
push
xchg
int
data16
out
xchg
cmp
xor
jb
nop
enter
loop
and
cmps
(bad)
sti
jg
in
xlat
sub
adc
xchg
sub
bound
adc
rcl
ins
sub
inc
pop
repz
add
mov
mov
sbb
in
and
enter
leave
popa
pop
cmp
and
sub
rcr
jp
add
fisttp
sbb
aas
loopne
data16
retf
fist
push
dec
add
das
cdq
addr16
and
dec
push
call
sti
(bad)
sbb
push
push
sbb
adc
push
adc
aam
push
mov
repnz
pop
lds
mov
pop
push
adc
sub
cmp
outs
xor
jae
ss
inc
shr
aam
cdq
pushf
arpl
call
iret
je
and
cmp
in
je
loopne
aam
mov
dec
dec
sbb
mov
sub
loopne
xor
int
(bad)
daa
int
das
mov
(bad)
addr16
push
fs
xchg
pop
mov
xchg
popa
xchg
dec
jbe
imul
sub
(bad)
retf
jnp
cmp
leave
repnz
ins
add
inc
sbb
into
cs
add
xchg
jecxz
xchg
mov
or
cmp
fdiv
cmps
xchg
sahf
push
stos
popa
retf
jmp
mov
dec
jle
push
pop
int3
jp
and
sub
xchg
sub
jno
clc
jmp
fimul
push
xchg
in
adc
xor
sti
cwde
dec
nop
mov
sub
shr
ror
cmp
mov
ins
xchg
in
sar
aad
data16
mov
loopne
mov
adc
mov
push
lods
dec
xor
jl
pop
and
inc
sub
lods
lods
sub
xlat
ja
mov
in
jp
scas
sbb
add
test
mov
aad
std
xchg
pop
lds
stc
mov
jmp
cmc
popf
xor
and
popa
adc
jle
mov
push
cli
pop
fucom
jb
out
pop
jns
jl
arpl
or
popa
xchg
dec
(bad)
ficom
fs
rol
or
sub
cmovg
imul
movs
mov
or
mov
fld
shr
dec
ror
enter
add
and
inc
shr
ss
push
xchg
aam
popf
inc
jns
outs
mov
dec
xor
xor
repz
push
nop
imul
in
sar
push
adc
popa
jbe
ret
nop
inc
pop
sub
and
mov
out
add
pop
clc
ficom
cs
or
jbe
inc
dec
jmp
cmp
test
pop
(bad)
push
ret
inc
push
xchg
ds
pop
dec
movs
fbstp
aad
fmul
mov
add
(bad)
and
sbb
aam
mov
cmp
je
leave
imul
in
xor
push
mov
mov
jmp
sub
enter
xor
and
repnz
stos
pushf
int3
cdq
jge
mov
xor
sbb
push
iret
shr
int
in
mov
push
in
fstp
push
inc
push
push
loop
pop
xlat
pop
jne
add
pop
mov
jns
sub
repnz
lds
fadd
stos
lea
push
test
mov
loope
ret
rdpmc
aad
scas
lods
js
push
test
sahf
mov
mov
(bad)
mov
mov
dec
sbb
das
test
(bad)
mov
xor
dec
out
pushf
(bad)
adc
mov
xor
adc
and
call
mov
(bad)
repz
shl
mov
or
aaa
or
fsubp
je
mov
loop
sub
push
popa
dec
add
push
shl
test
into
inc
ins
xor
rol
push
dec
inc
xor
std
sbb
mov
dec
arpl
jg
push
add
pop
imul
ins
int3
jp
mov
aam
pop
jmp
popf
mov
mov
mov
cmp
sub
ins
fiadd
aaa
mov
je
push
ret
repz
fidiv
scas
push
or
push
xor
repnz
sahf
dec
dec
gs
lods
sbb
data16
xchg
aad
dec
daa
mov
push
or
leave
movs
cmp
inc
xor
imul
or
gs
icebp
dec
fisub
pusha
push
fdiv
cmp
dec
rcr
mov
jge
inc
or
and
les
push
pop
mov
test
mov
jae
adc
sub
mov
paddb
dec
mov
pop
cs
ins
(bad)
or
clc
jp
push
ss
rcr
cld
xchg
enter
xchg
mov
jns
lea
fidivr
push
cmp
push
clc
and
ret
rol
out
jl
ins
mov
push
push
sti
out
call
arpl
lock
outs
dec
loope
ins
dec
xor
lods
jge
pop
add
mov
or
in
cmc
sub
adc
fdiv
stos
(bad)
(bad)
mov
mov
adc
xchg
sub
xor
cmp
movs
jo
adc
xlat
hlt
pop
dec
xchg
add
inc
test
fld
pop
dec
cmps
inc
mov
out
jp
cdq
addr16
add
mov
imul
jb
lds
cmp
shl
inc
push
cmp
push
dec
int3
std
fmulp
mov
std
std
sub
inc
sbb
loope
out
xor
cmp
push
pop
sbb
icebp
cs
icebp
xchg
popf
cli
js
add
popf
sti
dec
sub
cdq
jnp
pop
fucom
or
inc
mov
sub
sub
pop
inc
les
(bad)
lea
out
rol
adc
xchg
or
xchg
push
arpl
dec
fsub
icebp
jae
test
pop
js
stos
jae
push
loopne
mov
mov
call
cdq
and
cwde
das
test
aam
cmp
xor
jno
push
or
hlt
mov
sub
loope
inc
in
imul
jg
mov
lock
mov
add
and
inc
cld
iret
fstp
scas
fs
push
sub
bound
xchg
test
pop
iret
mov
clc
mov
retf
mov
(bad)
mov
inc
hlt
mov
iret
push
gs
aaa
add
xlat
das
fldenv
mov
mov
(bad)
out
ror
mov
popa
sbb
push
fwait
(bad)
cdq
jmp
outs
sub
outs
xlat
into
lea
mov
add
rol
mov
pop
hlt
fs
adc
leave
ficom
mov
dec
xlat
call
mov
leave
mov
popa
ss
call
cmp
mov
mov
add
mov
push
outs
div
adc
jle
stos
aad
mov
sub
fidiv
retf
lea
aam
add
and
scas
mov
or
mov
push
xchg
push
jo
outs
xchg
addr16
popa
das
push
push
mov
jne
jmp
and
or
fsub
sub
push
jg
stc
xchg
xchg
(bad)
xor
xor
scas
ins
xor
xor
pop
add
dec
add
hlt
test
aas
ins
xor
mov
in
jnp
mov
arpl
pop
mov
outs
or
add
pop
jmp
jecxz
pop
push
ror
fst
pusha
sub
xor
jl
ror
ror
adc
push
cmps
pop
mov
pop
push
jns
push
push
sar
dec
xor
add
shr
inc
popf
sub
cmps
aas
mov
dec
shr
xchg
mov
repnz
sub
xor
xchg
popf
xchg
cwde
push
push
push
lea
mov
ds
sub
jge
pop
mov
das
fisttp
push
ja
out
push
xchg
push
iret
jo
scas
rcr
sbb
call
or
and
xor
retf
dec
xchg
out
or
mov
push
test
or
in
cli
popf
std
hlt
(bad)
test
daa
adc
or
or
test
dec
xor
iret
mov
adc
cmc
lahf
sar
test
shr
lds
dec
jne
cwde
fmul
data16
daa
fs
scas
xor
cmp
(bad)
sbb
jns
sub
xor
into
fidivr
mov
test
push
dec
cld
sbb
lods
movs
test
fdivrp
repz
sbb
out
or
in
xchg
fwait
xor
call
rcl
lods
mov
pop
in
lahf
pop
pop
call
sbb
repnz
rcr
ja
rcr
out
inc
mov
mov
sub
or
sub
adc
xor
xchg
mov
mov
bound
add
dec
and
pop
mov
xchg
call
xchg
xor
fs
not
cmp
cmps
adc
jge
adc
mov
inc
mov
sub
outs
clc
retf
cmps
dec
xchg
hlt
ret
mov
inc
arpl
push
mov
dec
imul
mov
pusha
mov
mov
push
icebp
mov
xchg
shl
stos
push
aad
pop
fdivr
jecxz
add
push
popf
add
mov
cmp
out
dec
cmps
int3
(bad)
or
fisub
push
out
pop
pop
and
sti
fidiv
mov
lea
retf
enter
sub
lods
cmp
inc
mov
xor
(bad)
nop
pop
and
out
(bad)
ja
xchg
sahf
and
mov
xor
out
mov
fldlg2
neg
retf
cmps
xchg
cmps
scas
push
cmc
lds
js
push
jle
dec
cmc
adc
inc
imul
ror
jl
lods
push
fidiv
add
mov
mov
push
dec
cmps
ret
call
dec
xor
or
and
arpl
inc
movs
cwde
mov
add
pop
stos
inc
push
mov
ja
ret
fwait
lock
push
mov
outs
mov
add
lods
sub
sbb
mov
or
inc
pop
sub
cli
push
cmp
or
lea
and
push
push
(bad)
or
jle
xor
push
xor
fsub
aam
popa
add
lods
cmp
dec
aaa
retf
mov
test
jg
les
fld
push
cmp
fs
std
enter
jmp
jmp
xchg
sub
push
add
or
and
sar
pop
or
dec
push
rcl
push
sub
xor
add
scas
jne
retf
add
xchg
lods
ds
fiadd
inc
rol
push
or
cmp
nop
xchg
mov
mov
enter
push
sub
inc
add
xor
arpl
loope
dec
mov
xor
int
pop
retf
mov
in
pushf
icebp
mov
push
ret
cmps
sbb
fnstcw
loope
cmps
add
push
jns
add
movs
push
dec
push
retf
int3
push
scas
sub
adc
dec
adc
pop
xchg
dec
xchg
test
ins
in
pop
mov
popa
pop
stos
adc
shl
dec
test
mov
jnp
fisttp
ret
add
loop
movaps
aam
sbb
xor
stc
mul
lahf
pushf
cmp
mov
mov
push
dec
jbe
add
test
push
adc
xsha256
cmps
(bad)
inc
mov
sbb
xor
sahf
pop
retf
stos
sahf
sub
push
jo
pop
inc
call
ins
sub
mov
jne
cmc
push
xchg
lock
ror
pop
mov
add
or
dec
fsub
xor
xor
test
shl
in
lds
jmp
shr
pop
dec
dec
cmp
mov
mov
aas
cmp
xor
push
and
test
ret
adc
jecxz
fidiv
hlt
test
sbb
xchg
fst
(bad)
movs
retf
jae
fiadd
popa
cmp
sub
mov
fst
cmp
shr
adc
mov
shl
xchg
bound
imul
jl
push
mov
arpl
repz
cmps
hlt
pushf
lods
pop
je
ja
retf
push
cdq
push
inc
jecxz
push
cmp
pop
sar
out
xor
or
sub
mov
inc
dec
ss
mov
out
scas
mov
cmps
inc
mov
and
mov
sahf
loopne
mov
stos
and
push
and
and
push
loopne
fmul
les
adc
sbb
pop
fld
jmp
cmp
mov
mov
pushf
retf
iret
shl
rcr
mov
xchg
add
and
in
jmp
ret
cmp
cld
movs
repnz
adc
and
out
test
cld
ja
sbb
mov
pop
daa
push
inc
mov
scas
inc
es
mov
call
xchg
mov
mov
sbb
es
pushf
xchg
popa
push
mov
rcl
scas
jnp
xchg
scas
popf
addr16
int3
(bad)
aam
std
push
leave
retf
xchg
mov
dec
imul
pusha
fcomi
stc
popf
push
push
stos
pop
cmps
sub
je
sbb
mov
xchg
(bad)
outs
mov
call
and
loope
mov
sbb
cmp
loopne
fsubr
xor
cmp
pop
test
shl
arpl
jge
(bad)
mov
adc
mov
leave
push
push
bound
inc
mov
sbb
jns
sar
sbb
call
pop
out
or
sti
movs
or
xlat
xor
xor
(bad)
and
jno
mov
pushf
mov
ins
adc
add
fwait
or
mov
sbb
shl
mov
mov
xchg
ror
(bad)
inc
xor
vmwrite
dec
pop
push
aad
shl
mov
neg
js
push
movzx
sub
xchg
test
clc
aas
int
mov
sub
dec
or
xor
xor
or
jmp
(bad)
jl
outs
mov
int3
or
cli
xchg
pusha
pushf
mov
pop
ins
loope
or
pop
int3
add
jg
and
jb
sub
cmc
jno
sbb
push
cli
movs
imul
push
rcr
pop
cmp
mov
movs
sub
jmp
f2xm1
xor
frstor
push
jne
pop
sub
pop
lods
xor
sub
fild
xchg
adc
mov
ins
mov
adc
sbb
push
adc
push
imul
fidiv
stos
(bad)
cli
push
dec
retf
ret
mov
cmp
mov
loope
jbe
out
idiv
mov
scas
idiv
push
and
adc
lock
test
shl
rcr
test
movs
loopne
mov
or
xor
cmp
das
jae
or
ret
add
mov
ss
dec
outs
mov
cs
sub
jg
rol
dec
cs
xor
adc
out
scas
inc
fsubr
test
add
out
or
leave
and
jnp
adc
push
(bad)
xor
mov
imul
mov
jge
and
xor
push
inc
dec
lods
push
idiv
lods
xchg
std
jp
sbb
int3
pusha
movs
mov
(bad)
ins
retf
call
rcl
pop
or
inc
es
lahf
jl
sar
push
mov
ret
mov
test
xchg
jmp
xchg
jg
test
out
push
dec
retf
(bad)
mov
cdq
daa
pop
add
cmps
data16
xchg
add
mov
or
xchg
inc
xor
(bad)
scas
nop
sbb
hlt
repnz
mov
push
scas
cwde
sub
ret
jg
push
shr
mov
pop
push
cmp
not
adc
push
pop
call
and
lahf
xor
pop
shl
mov
in
fcomp
add
adc
mov
cmp
cmp
mov
add
dec
pushf
mov
pop
adc
pop
das
stc
aas
and
xlat
jnp
push
addr16
imul
ins
stc
and
cmps
mov
xor
clc
aad
(bad)
dec
lods
jp
imul
cmp
pop
jne
jl
aad
jb
rcr
rcr
mov
imul
pushfw
mov
adc
fstp
sbb
inc
cmp
in
stc
js
in
sar
lods
jns
inc
idiv
adc
retf
add
cmp
jns
imul
lods
mov
xchg
jl
inc
(bad)
push
popa
jmp
sahf
loopne
sbb
aad
adc
jmp
xchg
push
push
aad
cmps
mov
add
repz
cli
dec
ret
pop
les
repz
aas
xor
shl
ins
out
cmps
sub
inc
pop
push
cdq
xchg
js
out
scas
inc
pop
push
mov
cmp
cmps
sub
cmp
stos
in
inc
and
aam
out
cwde
(bad)
jno
call
and
xchg
ficom
fsub
push
inc
retf
or
xchg
shl
adc
sub
push
repnz
push
cwde
adc
int
xchg
in
cwde
jle
mov
gs
inc
jmp
pushf
sar
ja
dec
inc
fst
into
sub
outs
cmp
hlt
inc
and
pop
or
test
sbb
out
mov
mov
pushf
push
cmps
mov
fst
and
mov
mov
add
nop
add
push
repz
pop
mov
std
xchg
(bad)
(bad)
xor
push
jg
jo
jnp
lea
pop
mov
(bad)
push
adc
mov
sahf
dec
jge
push
sub
jb
inc
jbe
es
jmp
and
add
cmps
mov
mov
into
gs
pop
lods
call
dec
mov
retf
xor
shl
pop
mov
(bad)
jae
push
or
mov
add
ss
ret
repz
(bad)
(bad)
fadd
add
xchg
push
jg
fmul
div
(bad)
mov
dec
pop
sbb
addr16
or
xchg
dec
lahf
xchg
jns
sbb
xchg
ficom
call
pop
mov
mov
and
xor
in
mov
repz
stos
push
in
adc
dec
vxorps
xchg
jbe
pop
lds
retf
lods
jb
lea
adc
ss
mov
jno
(bad)
sub
jb
fs
or
cmp
inc
cs
int
popf
std
repnz
and
xlat
icebp
stos
add
pop
cs
and
jno
scas
xor
(bad)
je
cwde
xor
aam
outs
jns
or
imul
sbb
imul
and
sub
ss
add
cmps
sbb
in
add
scas
xchg
jge
hlt
jecxz
repz
mov
imul
test
xchg
mov
cmps
nop
shl
je
lea
fisub
inc
or
or
pop
pop
loop
sahf
mov
sub
test
sub
mov
out
in
or
add
lea
retf
or
adc
imul
sub
xor
addr16
mov
jb
mov
ds
dec
outs
dec
in
inc
adc
or
xor
leave
cmp
retf
ja
jmp
(bad)
repz
inc
fs
cmps
sub
imul
div
iret
or
pusha
push
aam
jle
fucomi
adc
push
into
pop
dec
(bad)
shl
push
add
mov
sbb
adc
std
rcr
(bad)
xchg
jg
mov
sbb
xchg
mov
cli
sub
psubsw
pop
ss
mov
cdq
aas
jmp
mov
nop
sub
(bad)
jp
push
adc
stos
ins
jmp
or
add
neg
mov
adc
dec
into
(bad)
and
cmp
pop
inc
out
sbb
fs
push
pushf
clc
xchg
sub
inc
push
pop
add
fdivr
add
sub
rol
lea
ror
call
sbb
test
fs
je
ror
sbb
adc
cmp
mov
mov
mov
xchg
jb
fwait
or
mov
or
pushf
mov
or
sbb
or
lods
retf
mov
inc
xchg
aas
stc
js
ror
xchg
dec
dec
jae
add
hlt
mov
leave
push
cs
push
sbb
add
xchg
sti
cwde
pop
mov
clc
jns
push
lods
jno
pop
mov
inc
repnz
dec
pop
mov
push
retf
call
daa
jecxz
xchg
xchg
jb
mov
jle
jo
enter
fcmovnb
jno
div
call
pop
jmp
jb
in
jns
aam
adc
arpl
sbb
cmps
ret
and
scas
ja
jg
push
loopne
dec
nop
jmp
mov
jns
js
adc
(bad)
adc
pop
jmp
shl
mov
out
mov
ja
ja
scas
mov
pop
int
into
dec
pusha
test
nop
in
pop
push
into
inc
cmc
mov
push
imul
or
pop
fwait
pop
cmp
add
and
and
add
adc
ficomp
retf
das
push
inc
cmps
outs
mov
cmps
ret
(bad)
jno
adc
int
loop
rep
or
ret
cmp
scas
mov
cmp
fistp
shr
xor
cmp
out
jnp
daa
adc
stc
jae
dec
call
pushf
cmc
dec
ins
jge
call
sahf
lods
loope
(bad)
jno
mov
ins
(bad)
dec
jae
icebp
movs
push
and
inc
xor
xor
das
ror
add
jae
or
mov
jo
sahf
out
fadd
ins
sub
jmp
cmps
sar
je
out
loope
aam
stos
aad
sbb
int3
pushf
ret
dec
push
sar
stos
aad
clc
adc
(bad)
popf
fcmovnb
or
(bad)
jp
test
pusha
ss
inc
mov
mov
mov
aad
(bad)
shl
jno
dec
add
ds
mov
sub
inc
cmp
cmps
xor
lea
fwait
and
lods
jae
test
jecxz
mov
sbb
movs
mov
test
fdivr
(bad)
xor
push
sub
push
add
dec
call
out
mov
mov
fwait
popa
xchg
imul
adc
mov
push
int
repz
test
jg
xchg
cmp
xor
push
mov
sbb
ins
rol
inc
xor
pop
retf
pop
ja
ja
cmp
dec
xor
inc
xor
sti
sub
pop
or
es
test
pop
mov
int
mov
add
mov
mov
retf
jns
xor
inc
add
sbb
inc
int3
retf
repnz
pop
hlt
mov
sub
imul
pop
out
movs
jp
pop
les
in
sbb
ds
adc
push
pop
mov
icebp
lock
in
les
sbb
cmp
sub
fiadd
jns
icebp
pop
add
fstp
(bad)
clts
jne
and
mov
aad
ret
inc
adc
sbb
or
cld
sbb
pop
jo
sti
push
rcl
ficomp
dec
dec
and
pusha
shl
pop
jb
cld
div
cmp
retf
test
out
or
out
adc
mov
fldenv
(bad)
(bad)
jmp
daa
pop
test
aaa
xor
add
ss
xchg
loope
pop
jns
jnp
test
cmc
jns
add
shr
in
push
xor
and
scas
inc
mov
imul
adc
dec
mov
test
push
or
inc
popa
movs
rcl
sub
(bad)
and
cld
xchg
popf
xchg
shl
mov
repz
sbb
pop
cwde
jle
lahf
push
mov
push
clc
xor
and
es
mov
jecxz
int3
pusha
jae
test
ins
jmp
fsubr
popa
movs
inc
sbb
scas
inc
push
push
mov
and
xchg
cmp
sbb
dec
push
add
lds
sub
lock
push
cmp
xchg
sbb
mov
shl
mov
push
mov
das
hlt
int3
xchg
dec
mov
in
clc
sub
gs
daa
or
test
inc
retf
bound
jmp
pop
cmc
jbe
aad
arpl
add
js
(bad)
in
(bad)
out
sbb
test
xor
(bad)
aam
lea
nop
mov
adc
fistp
test
sbb
adc
adc
inc
lahf
jbe
es
xor
mov
jbe
(bad)
and
adc
jecxz
jmp
inc
add
sbb
jb
hlt
jne
loop
push
adc
aam
pushf
mov
mov
rcl
xchg
or
and
mov
xor
pop
jge
pop
sti
pop
xor
movs
xor
inc
or
or
imul
and
enter
movs
call
push
pop
jnp
shr
(bad)
fsub
push
mov
mov
adc
pusha
scas
in
lahf
mov
test
mov
fdivr
shl
mov
rol
jge
push
mov
jle
push
sahf
rcr
jno
rcr
xor
not
ds
push
retf
add
xor
sahf
and
and
out
jp
ret
jle
cmp
ror
xor
xor
mov
xor
fwait
mov
sahf
cmps
cmp
call
loop
jmp
inc
xchg
mov
and
add
addr16
inc
jns
jmp
jmp
jg
mov
int3
ret
ret
xchg
xor
push
xchg
adc
adc
xchg
in
fbld
cmp
cmp
mov
and
push
cmp
push
pusha
xchg
dec
and
mov
cld
popf
mov
or
stos
mov
js
repz
addr16
(bad)
pop
mov
gs
pop
fistp
mov
mov
arpl
mov
jecxz
js
adc
aam
pop
jecxz
fnstenv
mov
pop
jae
inc
xor
aas
setge
push
lock
pop
out
jge
sysret
imul
and
cmp
mov
pextrw
push
repnz
fs
jge
vpminub
imul
(bad)
loope
int3
in
mov
push
mov
lods
add
push
add
pop
aam
add
xor
xchg
aam
ds
xchg
std
in
mov
jno
pop
ret
cmp
test
sti
mov
sub
adc
jne
adc
inc
mov
movs
and
lock
jne
aad
mov
jge
sub
pop
sbb
in
adc
aas
mov
lods
loope
mov
(bad)
dec
inc
inc
cwde
lods
lock
ins
stc
jae
inc
jne
dec
neg
push
pop
out
or
add
movs
jmp
and
(bad)
nop
hlt
sub
xchg
xor
daa
ja
xor
pop
js
out
out
ror
fnsave
mov
cdq
pop
mov
movs
sbb
outs
pop
inc
push
stos
test
push
sbb
call
adc
sti
jns
(bad)
mov
fiadd
and
mov
adc
daa
add
cmps
jb
mov
lods
jb
jge
adc
test
xchg
jo
mov
sub
or
cld
call
mov
js
data16
push
and
sbb
jg
inc
fcmovne
dec
push
(bad)
lods
pop
loopne
inc
xor
or
xor
add
ss
cmp
out
or
xchg
cli
sbb
in
dec
add
arpl
pop
mov
push
pop
ds
(bad)
std
sub
je
fld
adc
jb
jbe
jle
sub
pop
fistp
mov
dec
fcmove
pop
sub
xchg
sbb
por
enter
xor
pop
shl
in
out
mov
push
(bad)
leave
bound
pop
(bad)
push
shl
ret
jg
sub
push
xchg
dec
aas
rol
jns
into
cmp
push
jge
test
or
add
aaa
push
mov
jb
pop
mov
xor
mov
test
sbb
mov
pop
push
sub
es
lods
xchg
cmps
in
sbb
les
dec
enter
mov
push
jmp
(bad)
jo
cmp
movs
std
mov
sbb
pusha
enter
or
stos
sbb
push
cdq
push
jb
stos
lea
mov
in
fnstenv
mov
xor
pusha
hlt
sub
cmp
fcomp
(bad)
int
ret
cmp
dec
les
lea
arpl
inc
cld
push
xchg
jns
mov
push
mov
dec
inc
inc
push
inc
ins
inc
loope
icebp
mov
dec
push
mov
xchg
push
(bad)
sbb
aad
in
xchg
leave
jmp
sub
xchg
adc
pop
sub
push
shl
(bad)
shl
or
stos
rol
pop
adc
sub
add
dec
mov
add
arpl
inc
pop
inc
push
mov
sub
mov
cdq
stos
jae
jg
xchg
and
and
lods
xchg
shr
cmp
mov
jmp
mov
retf
jbe
lods
sub
cdq
shl
scas
jmp
inc
mov
clc
movs
cwde
jae
lds
mov
mov
aaa
in
xor
sub
pop
enter
or
pop
and
mov
xchg
dec
xor
leave
mov
ss
cli
popa
and
loop
repz
cmp
xchg
sub
adc
jle
push
jmp
add
jnp
or
sub
repz
test
dec
xchg
out
mov
jg
add
sub
cmp
shl
in
sub
adc
sbb
fisttp
inc
cmp
loop
(bad)
(bad)
iret
pop
pop
test
push
repnz
pop
hlt
and
cld
push
and
xchg
pop
add
push
push
dec
pop
sar
add
dec
and
(bad)
mov
lahf
cld
add
xchg
jno
fxch
fwait
pop
lods
call
fbstp
adc
push
and
xor
jp
add
and
jae
(bad)
call
pop
leave
loop
sbb
mov
cmp
mov
xchg
rcr
std
inc
sub
adc
sub
mov
add
out
push
ret
fs
push
mov
rcr
popa
sbb
pushf
sub
mov
add
outs
ror
jp
dec
sub
pop
in
(bad)
and
retf
and
lods
popa
call
xchg
adc
cwde
pop
sar
sub
aam
sbb
pop
adc
xlat
ja
add
out
and
xor
pop
xor
sar
mov
xor
adc
adc
jnp
movs
into
(bad)
clc
and
inc
lea
add
mov
push
pusha
jle
or
inc
add
sbb
mov
cmp
push
pop
push
pusha
mov
popa
shl
pop
mov
ret
int3
cmp
mov
xchg
out
xor
and
ret
int3
hlt
mov
mov
mov
xchg
fst
sbb
rcr
ret
add
xchg
xlat
pop
lds
jl
test
sti
jb
shl
pop
add
jae
ins
mov
nop
fistp
mov
cli
push
sbb
mov
loope
mov
sbb
pop
mov
(bad)
mov
and
in
enter
cwde
dec
retf
shr
mov
pop
aaa
push
mov
push
nop
add
imul
imul
stos
cld
add
out
sbb
data16
fwait
pop
jno
and
add
popf
call
in
jecxz
retf
xor
clc
dec
and
mov
xchg
leave
dec
and
fcom
in
xchg
and
and
arpl
xor
cmp
movs
jbe
inc
mov
mov
sbb
and
in
mul
sahf
(bad)
adc
shl
ja
xchg
jmp
enter
(bad)
hlt
mov
cmps
gs
inc
jbe
sbb
pop
pop
cwde
inc
loop
fisub
out
mov
mov
das
adc
cmp
mov
mov
push
cwde
pop
daa
and
xor
test
cmps
jg
repz
scas
in
inc
pop
leave
adc
sbb
push
leave
aas
repnz
push
pop
popf
lds
pop
pop
pop
fwait
jns
mov
stos
sub
(bad)
mov
cmps
push
out
dec
mov
ret
pop
inc
mov
call
enter
push
popf
mov
aaa
mov
pusha
push
stos
and
adc
push
sbb
pop
ret
les
leave
add
iret
dec
jmp
lock
fimul
ins
or
out
ret
add
and
dec
fsub
mov
xchg
push
xchg
data16
pop
and
scas
retf
or
jae
loop
push
(bad)
stos
sti
mov
outs
mov
in
int
ja
daa
lahf
adc
test
pop
mov
cld
les
mov
sti
sbb
cmp
pusha
es
pop
and
out
push
dec
jmp
sbb
repz
call
adc
mov
cmp
mov
call
popf
cmps
(bad)
jmp
xchg
push
mul
mov
fucom
push
pop
adc
mov
imul
and
rcl
aaa
rcr
loopne
cdq
into
pop
dec
aad
sbb
popa
add
and
loopne
enter
(bad)
stos
adc
push
test
xchg
mov
push
js
popf
adc
xor
add
aam
sbb
repnz
jmp
lods
push
add
les
and
xor
inc
mov
data16
sub
outs
push
xchg
int3
icebp
in
stos
jp
rol
or
loop
mov
add
and
jmp
add
sub
(bad)
int
je
cli
or
vprotq
bound
xlat
adc
rcl
out
fnstcw
das
out
fld
adc
leave
(bad)
dec
sub
cdq
pusha
pop
jo
adc
mov
mov
repz
ds
sbb
(bad)
mov
sbb
cmp
fnsetpm(287
je
ret
push
push
push
pusha
imul
mov
sub
imul
sti
rol
mov
mov
stos
mov
jp
dec
xor
mov
imul
out
scas
fs
adc
add
mov
loope
and
pop
dec
dec
xchg
jle
jns
inc
xchg
and
out
mov
jg
into
mov
(bad)
sub
add
mov
xor
(bad)
fdivrp
lods
push
cdq
aam
int3
jg
daa
cmp
or
inc
inc
sub
test
enter
dec
cmp
cmp
popa
adc
add
inc
mov
mov
and
mov
inc
dec
or
mov
retf
inc
jb
pop
mov
add
push
and
(bad)
cli
adc
mov
ret
enter
add
or
addr16
test
(bad)
jo
mov
add
call
mov
(bad)
pusha
fldcw
push
inc
push
dec
inc
push
mov
xor
test
loop
in
pop
fld
out
popa
mov
pushf
movs
ja
scas
sbb
xchg
inc
fimul
or
and
mov
push
adc
mov
lea
in
pop
mov
ins
out
ffreep
lods
fnstcw
and
in
push
inc
shl
dec
cmps
mov
push
adc
hlt
retf
lds
jno
push
mov
mov
dec
pop
test
pop
cwde
imul
ret
std
imul
sahf
xchg
outs
cmps
pop
sahf
inc
in
aaa
dec
stc
loop
or
aad
or
pop
inc
std
sbb
pop
xor
sub
sahf
test
dec
mov
mov
sbb
(bad)
loop
cmp
aas
adc
cmps
xlat
xchg
or
cmp
xlat
fwait
test
cmp
hlt
(bad)
sub
out
jo
in
lea
pop
jo
xchg
push
xor
inc
out
cmc
call
xlat
dec
pop
stos
add
aas
cmp
bound
cmp
das
push
enter
pushf
pop
lock
sub
dec
lea
sub
or
jge
test
jmp
int3
leave
sar
push
adc
ret
sub
or
(bad)
sahf
(bad)
adc
jbe
ds
daa
fs
and
bound
and
cs
or
rcl
sub
inc
sti
pop
push
mov
xlat
and
imul
aam
push
dec
clc
cwde
mov
fwait
push
jecxz
in
int
adc
shl
jbe
bound
pop
fdivp
lock
pop
shl
enter
and
pop
jnp
mov
dec
lods
mov
inc
or
pop
pop
data16
(bad)
ret
jmp
fisub
iret
cmp
mov
inc
outs
loopne
popa
js
(bad)
cli
push
fild
test
mov
(bad)
(bad)
jp
inc
retf
cmc
fmul
hlt
sbb
cmp
jae
dec
test
(bad)
sbb
lahf
fst
dec
sbb
imul
or
mov
pop
cmp
cmp
das
fcom
adc
mov
mov
or
sbb
xor
jmp
movs
inc
xchg
rcl
dec
hlt
or
jmp
bound
scas
jae
pop
xchg
mov
fistp
sti
popa
(bad)
(bad)
mov
jle
rol
sbb
and
dec
mov
push
xchg
mov
test
xchg
dec
add
les
stos
call
add
stos
xor
jmp
mov
cmp
out
inc
fimul
leave
mov
mov
cli
jno
mov
adc
mov
ss
sbb
xor
jge
push
leave
popa
jp
xor
mov
repz
jne
int3
mov
lods
mov
xchg
out
inc
test
jmp
inc
adc
push
mov
dec
push
dec
mov
mov
pop
cmp
test
xchg
cmp
cmp
inc
(bad)
data16
dec
xchg
stos
loope
into
and
dec
wrmsr
mov
ret
test
cmps
das
mov
in
jl
in
scas
xor
adc
int3
fldenv
hlt
lock
mov
sbb
mov
cmp
sbb
lock
mov
jno
popa
mov
call
add
popf
out
in
sub
fs
xor
jge
or
sub
out
cs
(bad)
retf
mov
push
push
in
rol
enter
pushf
ja
mov
cdq
or
inc
sub
push
inc
pop
(bad)
int3
mov
je
pop
out
mov
mov
aam
mov
inc
or
or
ret
xchg
adc
xor
in
jb
sbb
loopne
cwde
inc
push
push
aas
data16
jb
and
div
rol
inc
in
imul
push
mov
shr
fdiv
dec
mov
cmps
sbb
add
dec
xchg
pop
jl
push
ret
jl
sbb
or
adc
jecxz
push
mov
pop
mov
stos
nop
push
mov
dec
add
fsub
mov
popf
test
repnz
test
add
inc
add
fidiv
inc
mov
push
fst
aad
mov
or
mov
cmp
jmp
push
cmp
pop
out
lock
aam
cmp
icebp
push
add
sbb
(bad)
mov
in
(bad)
xlat
dec
adc
and
and
inc
gs
mov
repnz
mov
popa
pop
jb
mov
jge
xor
sub
sbb
dec
inc
pop
fs
movs
aas
mov
pop
mov
int3
xor
jbe
out
adc
mov
scas
cdq
sbb
ss
and
jo
(bad)
cmp
fwait
mov
jecxz
mov
sbb
cli
fsubrp
(bad)
push
cmp
iret
push
xor
or
fcomp
sti
outs
outs
test
and
lds
mov
jno
cwde
sbb
aas
jmp
cmp
shl
lea
pop
ret
(bad)
pop
jmp
nop
ja
int3
dec
das
(bad)
inc
aaa
out
xor
sbb
movs
(bad)
retf
add
(bad)
sbb
repz
rol
jmp
push
push
add
fmulp
mov
div
sbb
mov
std
popf
cmp
lds
stos
lds
fldcw
fs
call
jae
cld
jbe
sub
fbld
mov
fs
sbb
movs
xor
pop
ret
mov
daa
jb
sub
and
dec
nop
or
jnp
into
out
mov
cli
leave
add
sub
in
fwait
adc
sbb
shl
leave
jnp
out
ja
adc
fs
leave
mov
add
loope
nop
sar
cmc
cmp
xchg
push
sbb
sbb
sub
je
mov
fstp
lea
push
mov
popa
xchg
outs
scas
cmp
sahf
push
out
cmp
retf
fcos
ss
(bad)
test
pop
and
ins
out
fldcw
movzx
arpl
sub
in
cwde
ins
jecxz
cwde
das
push
mov
std
jno
iret
daa
and
fucomp
and
scas
push
add
pop
push
fwait
inc
lds
sub
lds
stos
cmps
dec
xchg
add
or
mov
leave
pop
scas
stc
arpl
push
and
shr
mov
sbb
into
cmps
mov
ins
dec
cmp
shr
pop
ss
leave
fwait
in
push
mov
jl
hlt
add
or
xor
(bad)
sbb
fld
inc
inc
cmps
push
loope
bound
sbb
pop
mov
xor
and
hlt
mov
sub
out
inc
fimul
xchg
add
arpl
push
cmp
mov
add
cmp
pop
jmp
mov
int3
rcl
imul
aaa
int
(bad)
and
out
in
scas
pop
pop
into
ficomp
xchg
jmp
mov
mov
retf
in
mov
and
cli
mov
aam
mov
aas
xchg
mov
mov
add
and
stos
inc
shl
sbb
fnsave
ja
mov
arpl
xchg
xor
stos
inc
xchg
sbb
test
pop
hlt
aad
xchg
pop
in
sub
or
xor
(bad)
(bad)
xlat
sub
loope
call
div
pop
mov
sti
popf
icebp
ror
sbb
fnstcw
inc
sub
cmp
mov
ficom
mov
push
(bad)
adc
and
xchg
mov
add
icebp
ror
aad
outs
push
cmp
sbb
xlat
popf
and
lock
add
dec
mov
out
inc
call
fmul
in
xchg
(bad)
cli
ror
push
fs
mov
in
jbe
add
jae
inc
jno
iret
and
les
cwde
fimul
and
outs
sbb
push
pop
jmp
nop
xor
dec
fstp
push
mov
sbb
(bad)
jmp
push
leave
add
mov
mov
je
cwde
test
xchg
daa
pop
(bad)
fnstcw
mov
stc
and
leave
movs
ret
xchg
fiadd
or
daa
inc
loop
loop
mov
retf
lea
or
addr16
repnz
fstp
pop
shr
(bad)
sar
imul
into
push
push
loop
bound
mov
pusha
sub
sub
inc
and
(bad)
ret
shr
push
sahf
jbe
mov
jge
pop
and
jno
cmc
xor
outs
mov
mov
push
test
mov
add
xchg
or
push
push
cmp
or
xchg
push
cmp
mov
dec
test
adc
in
test
xchg
hlt
xchg
daa
clc
pop
daa
sub
mov
mov
sub
gs
add
jp
lods
(bad)
dec
push
test
push
cdq
or
fst
(bad)
cmc
ffreep
push
jne
push
(bad)
into
out
adc
fisubr
jg
daa
fisttp
xor
pushf
ss
jmp
mov
add
inc
jl
int
dec
frstor
mov
add
ss
mov
pop
inc
clc
sbb
call
dec
lods
xchg
xlat
ror
push
mov
lock
and
dec
xchg
jge
fs
pop
cmps
or
pop
outs
ins
inc
dec
int
call
mov
push
push
sbb
sbb
ja
es
aam
jne
loope
(bad)
cmp
jle
fs
popa
stc
ins
add
sbb
(bad)
mov
jnp
push
jmp
push
mov
mov
push
xchg
cmc
test
in
cmp
fdivr
test
out
dec
shl
fidivr
adc
lods
inc
push
icebp
popa
es
xchg
mov
retf
cmc
cs
jnp
push
mov
mov
jecxz
in
push
add
xchg
jo
fdiv
lds
add
sub
call
nop
add
mov
pop
sub
inc
mov
add
(bad)
pop
xchg
(bad)
aas
into
jne
rep
mov
inc
adc
sbb
test
test
adc
movs
dec
std
lea
jo
aam
mov
mov
mov
scas
pop
add
adc
stos
cld
xor
popf
stos
jle
(bad)
fistp
add
sub
mov
shl
cmps
stos
mov
imul
or
jge
adc
std
hlt
cmp
ja
(bad)
jecxz
lods
int
sbb
push
enter
sub
hlt
aam
fidivr
(bad)
push
scas
ins
fild
xchg
sub
outs
mov
mov
jmp
jge
mov
ja
or
lock
bound
out
js
push
or
rcr
mov
jno
and
rcl
int3
mov
(bad)
ror
loope
movs
stc
inc
jg
pop
push
jl
stos
mov
xchg
nop
shr
jge
es
mov
inc
xchg
jecxz
mov
mov
or
imul
jno
xor
test
scas
jbe
and
jns
pop
or
and
or
mov
xchg
inc
je
sbb
xchg
inc
cmp
add
clc
mov
outs
or
xor
out
cmps
push
rcr
mov
(bad)
or
maskmovq
div
push
push
or
fld
lods
(bad)
push
test
cmc
aas
shl
push
dec
cmp
ret
adc
icebp
and
ret
xchg
and
test
and
xchg
into
sahf
aaa
daa
push
mov
test
js
int3
or
lods
cmp
xor
push
jl
jb
or
xchg
daa
mov
es
dec
por
imul
fisubr
popf
pop
pop
fisub
ss
xchg
adc
ja
jl
dec
stc
lea
mov
pop
loopne
fnstenv
ret
in
adc
shl
jae
repz
and
dec
xlat
cmp
test
and
les
xlat
jmp
cmp
or
(bad)
fxch
pop
test
and
jecxz
icebp
loop
mov
sub
mov
add
inc
iret
idiv
jae
pop
or
or
xor
adc
stos
jecxz
fs
scas
mov
in
retf
inc
stos
mov
bound
jmp
neg
aad
adc
push
vmwrite
scas
adc
adc
aaa
lea
dec
push
xchg
frstor
repnz
xor
fs
nop
ds
cmps
mov
daa
ja
xchg
mov
stos
test
pop
sar
cmp
(bad)
out
sub
pop
int3
loop
cld
sbb
test
aad
scas
and
xlat
and
clc
push
add
arpl
cmp
dec
xor
xchg
retf
hlt
fstp
cmps
inc
lods
mov
sar
(bad)
mov
in
(bad)
sti
xor
aad
mov
jge
bound
imul
shl
xor
jae
fwait
es
les
cmp
movs
sbb
mov
into
jg
and
xchg
js
add
adc
stos
add
shl
out
adc
out
xor
jmp
mov
push
jmp
cli
sub
std
popa
lods
dec
sbb
pop
iret
sub
mov
(bad)
ret
in
mov
inc
adc
popa
adc
jb
pop
jmp
mov
movs
jno
cmp
aas
jmp
scas
mov
add
sub
mov
mov
and
arpl
jp
ins
adc
adc
xchg
mov
push
in
clc
lgs
jmp
cmp
and
loope
or
adc
push
push
imul
paddq
js
mov
sub
push
mov
inc
int
or
push
mov
jp
pusha
adc
add
hlt
es
add
cmp
ja
and
mov
popa
(bad)
arpl
inc
adc
shr
dec
call
cmp
pop
pusha
xchg
xlat
push
xchg
fwait
lock
lock
inc
jecxz
call
jbe
pop
jge
out
mov
pop
and
mov
push
fimul
push
xor
or
mov
jecxz
das
or
retf
(bad)
out
pop
adc
push
in
pop
rcr
pop
push
push
out
sub
hlt
int3
sbb
dec
cwde
call
imul
or
fstp
adc
add
xlat
push
pop
gs
mov
sub
inc
cs
arpl
fistp
leave
xchg
outs
leave
scas
xor
sub
fs
in
cmp
mov
ins
and
ss
test
lods
mov
sub
xchg
int
aad
or
xlat
add
adc
ret
fmul
mov
retf
mov
and
lahf
mov
pop
dec
pop
fdiv
xchg
dec
lea
int
mov
fimul
dec
int
es
sub
out
pop
je
lahf
out
dec
out
pop
mov
dec
jnp
push
or
ins
call
dec
jbe
add
mov
push
adc
addr16
das
pop
fisttp
out
cmps
adc
vmread
lahf
and
cmp
mov
mov
ds
mov
pop
pop
cwde
and
mov
jge
adc
jmp
ret
lods
dec
add
fistp
loop
inc
pop
xchg
js
dec
push
popf
imul
ins
xlat
sbb
sti
mov
add
and
loop
sti
mov
xor
mov
push
frstor
mov
or
xor
add
aam
inc
or
dec
pop
or
(bad)
wbinvd
xchg
and
imul
lods
mov
xor
xchg
xor
push
sbb
adc
aas
xor
idiv
pop
out
mov
lea
jns
outs
push
retf
mov
cmp
sbb
mov
out
repz
sbb
data16
or
sub
cmp
fcomip
mov
xor
mov
data16
add
sbb
out
jne
cwde
xchg
xor
aam
retf
adc
std
jmp
xchg
fnstcw
mov
pop
or
jae
push
push
mov
jge
aaa
mov
sbb
repz
xor
xchg
(bad)
cmp
movs
(bad)
dec
imul
icebp
fs
outs
aaa
xchg
and
dec
inc
pop
or
mov
jno
mov
adc
inc
outs
popf
pop
sahf
or
jmp
dec
adc
and
retf
dec
cmc
and
jecxz
xor
ins
mov
arpl
call
sub
iret
dec
(bad)
out
jns
lock
repz
das
leave
sti
add
mov
jmp
pop
jae
mov
lods
and
enter
leave
cmc
cmp
and
mov
push
dec
mov
sub
mov
cmps
in
lds
aam
scas
xchg
xlat
and
dec
repz
ffreep
xchg
lods
cmp
mov
jnp
push
and
jo
fimul
aam
leave
and
jp
jb
and
jmp
and
mov
pmulhw
or
mov
in
jecxz
jne
ror
test
ja
mov
mov
mov
ror
std
mov
or
out
retf
scas
(bad)
and
(bad)
sbb
leave
jge
sbb
aaa
and
pop
popa
jb
cmp
mov
xor
fisub
pop
push
push
pushf
mov
sub
in
jb
retf
or
ja
sar
orps
les
or
vpaddw
aas
add
repz
fidiv
test
fsubr
cmp
outs
mov
xchg
xchg
repnz
or
push
nop
in
cmp
cdq
(bad)
pop
bnd
xlat
and
loopne
idiv
lock
cmp
icebp
sbb
mov
mov
jl
scas
es
sbb
(bad)
repz
sbb
ficomp
jg
pop
xor
and
push
add
push
in
jo
jg
sbb
sbb
icebp
or
out
dec
adc
dec
adc
lock
mov
jmp
psrad
loope
scas
mov
mov
fadd
dec
sbb
test
and
fmulp
adc
pop
out
dec
test
push
adc
inc
dec
into
mov
push
add
es
or
ss
push
imul
std
scas
and
out
jbe
sahf
inc
push
das
scas
cmp
stos
mov
mov
jnp
inc
daa
cmp
jecxz
push
adc
mov
jmp
or
push
xchg
adc
fwait
call
xor
pop
les
ret
mov
xor
mov
idiv
iret
fist
sub
push
jmp
inc
div
mov
ret
aaa
mov
test
inc
cdq
mov
popa
iret
(bad)
or
pop
adc
enter
mov
lods
leave
mov
inc
fwait
jmp
mov
sbb
push
cli
push
shr
adc
cmc
jecxz
sar
stos
je
xchg
and
imul
dec
pop
or
imul
inc
adc
jne
add
(bad)
adc
pushf
test
jo
lock
call
out
cmc
xchg
lahf
aad
ficomp
aas
mov
addr16
popf
mov
jl
cmp
cmp
or
cmp
mov
out
mov
sub
xchg
hlt
lods
jb
lock
popa
call
(bad)
addr16
loop
mov
and
fadd
enter
sub
dec
imul
and
or
push
push
xchg
imul
(bad)
hlt
or
mov
sahf
fisub
add
cmps
cmp
xchg
mov
jp
ret
pushf
push
jmp
add
ja
rcl
push
or
and
push
push
mov
ins
outs
sub
or
dec
leave
mov
adc
loopne
daa
movs
lods
mov
adc
(bad)
rcl
pop
add
repnz
xchg
pop
cmp
pop
bound
xchg
aas
jno
xchg
ret
cmps
mov
cdq
aas
fcmovbe
rol
pop
int
sub
bound
xchg
xor
scas
aam
fdiv
mov
fdivr
aaa
mov
mov
jp
and
mov
mov
mov
xchg
(bad)
fdiv
hlt
bnd
jne
gs
adc
repnz
rcl
mov
dec
xchg
mov
retf
stc
outs
add
mov
or
gs
xchg
push
xor
cli
xor
cmp
dec
imul
das
jmp
jmp
mov
xchg
sbb
or
jecxz
ds
jne
shl
push
push
xor
mov
icebp
mov
add
and
scas
adc
xor
and
pop
push
test
sbb
and
mov
int
stc
imul
cmps
enter
(bad)
cmp
jne
cmp
call
aas
in
ins
xchg
jns
xchg
cmp
or
jb
jle
mov
js
sub
aas
imul
fdivr
int
clc
jmp
xor
psubsb
inc
mov
mov
retf
pop
ins
out
lahf
mov
(bad)
nop
cli
jecxz
pop
in
aaa
xchg
jb
adc
out
(bad)
imul
mov
aaa
jae
inc
jl
mov
sar
xchg
pop
les
jno
push
(bad)
sbb
idiv
xchg
and
popa
arpl
push
inc
dec
fnstsw
xchg
leave
repz
cmp
adc
sub
push
std
sar
pop
pop
scas
sbb
es
lock
cmp
xchg
mov
out
pop
into
or
cwde
or
push
jmp
sub
mov
jmp
xor
dec
jno
pop
test
fwait
std
push
loopne
mov
gs
mov
lods
fdivr
sbb
popf
std
cdq
into
dec
mov
xor
push
inc
mov
pop
pop
cmp
mov
(bad)
lods
je
in
test
push
jmp
dec
push
xor
cmc
sub
test
dec
mov
mov
fs
or
jns
sahf
(bad)
cmp
imul
xchg
mov
cmps
stos
test
scas
(bad)
scas
sar
push
and
mov
jle
out
mov
idiv
mov
out
push
bound
pop
enter
jecxz
pop
sbb
inc
dec
sbb
dec
ja
aaa
test
mov
sti
push
mov
fs
adc
inc
adc
into
sbb
lods
retf
sub
jle
xor
(bad)
je
add
call
and
push
fs
leave
cmp
je
dec
call
ds
jge
push
xchg
les
jnp
xor
sbb
retf
out
pop
dec
and
sub
stc
mov
nop
int
pop
pop
js
cmp
ja
sbb
in
jle
movs
adc
nop
add
sbb
xor
mov
ins
and
call
push
scas
adc
out
(bad)
ret
xchg
js
pop
or
sub
jb
(bad)
mov
xor
push
shl
xor
mov
ss
adc
cld
inc
movs
inc
arpl
in
je
mov
xor
mov
sbb
not
sub
ret
inc
hlt
outs
and
and
fcmovnu
jg
in
add
lds
inc
shl
imul
call
push
push
shl
xchg
shr
test
ret
xor
sahf
popa
mov
mov
das
rcl
xlat
ins
or
push
fild
xchg
imul
xchg
push
mov
jp
mov
mov
mov
sub
bound
jno
push
add
xlat
cmp
add
add
inc
lods
popf
adc
fist
xchg
xor
jecxz
pop
mov
mov
or
(bad)
fld
mov
push
cld
cmps
cmp
adc
mov
mov
jmp
xchg
dec
repnz
jg
scas
repz
js
xchg
push
mov
xchg
je
sbb
pminub
gs
aad
hlt
popa
mov
add
out
jnp
je
jmp
stos
or
add
gs
pop
push
out
mov
inc
dec
scas
mov
jmp
dec
xor
(bad)
sti
imul
les
lods
dec
fbstp
pop
pushf
or
or
add
sub
dec
int
ror
xor
inc
leave
inc
out
and
mov
sbb
push
add
aam
pop
rcl
dec
(bad)
xchg
push
retf
cmp
lahf
jo
fst
cmps
enter
and
rol
jb
jg
xchg
mov
xchg
mov
jo
inc
and
cwde
(bad)
mov
dec
jnp
sub
jae
sub
jecxz
pop
out
sub
fst
push
fs
pop
repnz
push
dec
sub
xlat
cmp
push
sbb
fdivrp
aas
loopne
push
and
add
cwde
outs
and
ins
xor
int3
inc
aad
ins
mov
push
movs
xor
rcl
icebp
in
mov
outs
mov
out
inc
ror
push
add
sub
sbb
cmps
lods
sub
adc
jl
inc
dec
ja
mov
push
mov
leave
sub
and
imul
rol
mov
dec
cmps
push
adc
add
xor
inc
add
or
push
test
pop
pusha
xor
add
repz
or
push
jnp
icebp
sbb
xchg
xchg
fbld
sub
loop
(bad)
movs
sahf
lahf
dec
mov
adc
sbb
inc
sub
sbb
es
xchg
and
fcomp
daa
mov
mov
inc
pushf
mov
jo
or
dec
add
mov
mov
imul
dec
jg
dec
repz
jno
jb
and
and
jno
push
gs
pop
cwde
sbb
cmp
aaa
retf
iret
add
retf
xchg
data16
lds
clc
div
sub
hlt
pop
dec
inc
stc
dec
pusha
(bad)
pop
cld
push
js
push
jmp
fcomip
adc
iret
fist
ja
ror
lahf
xchg
inc
sbb
ret
outs
xor
(bad)
cmp
pop
dec
sar
xchg
push
mov
lods
mov
mul
outs
(bad)
jecxz
enter
jb
sub
test
adc
mov
fst
inc
imul
in
mov
push
sub
xor
mov
or
sbb
push
mov
sbb
retf
aas
std
es
sbb
mov
push
cdq
ss
jmp
not
ins
sbb
xor
xor
(bad)
fbld
adc
cwde
mov
(bad)
enter
in
push
fild
cs
push
jmp
out
push
pop
pop
inc
mov
xchg
scas
add
fcmovb
sbb
sub
mov
inc
(bad)
cmp
movs
sti
fist
es
mov
cmps
xchg
std
mov
jp
or
or
adc
in
jge
out
(bad)
call
xchg
mov
mov
fimul
pushf
mov
nop
xor
fs
lods
xchg
inc
inc
mov
dec
xchg
dec
and
ficom
inc
fistp
lods
or
ins
mov
enter
cmc
mov
lods
push
mov
mov
mov
cmp
in
(bad)
test
das
jl
mov
pop
movs
stos
adc
sub
jmp
ins
(bad)
inc
pfsub
fcmovb
std
or
jge
loope
inc
popa
shr
in
(bad)
out
retf
push
fild
retf
stos
(bad)
sbb
sub
adc
dec
inc
push
ss
ret
movs
cwde
int3
add
dec
push
test
mov
add
mov
test
(bad)
fcomp
sub
jo
retf
rcl
sbb
xor
lahf
rcl
dec
in
je
std
lds
sbb
push
xchg
lods
and
or
jns
cmp
movs
dec
std
sahf
popf
push
cli
dec
mov
pop
imul
imul
sbb
fisubr
mov
pop
ja
leave
jno
test
sbb
add
(bad)
call
inc
scas
in
inc
push
out
(bad)
loope
inc
and
and
xchg
mov
lea
lock
sub
xchg
mov
cwde
aas
pop
xor
push
jae
add
shl
or
in
mul
push
adc
fisub
in
mov
popa
cmp
push
cmp
enter
push
jg
jb
repz
pop
xchg
mov
repnz
adc
aam
cli
mov
inc
pop
pop
inc
add
mov
mov
inc
mov
lock
xchg
add
aas
jno
call
mov
cmp
das
popf
aaa
mov
xchg
cmps
xor
sbb
or
jp
neg
outs
das
scas
inc
mov
add
ja
push
scas
cmc
xlat
loop
ror
test
cmp
push
inc
lahf
mov
adc
pop
icebp
push
cmps
push
dec
xor
sbb
mov
stos
jmp
dec
jl
sbb
dec
sti
and
push
ficom
(bad)
loopne
(bad)
xor
stos
ins
jb
mov
ficom
popf
jno
ficomp
push
in
neg
cmp
jno
aam
fwait
adc
scas
pop
and
mov
inc
add
cwde
xchg
test
push
mov
ss
daa
inc
mov
stos
inc
out
jae
dec
cmp
jmp
cmp
sub
popf
fiadd
fist
icebp
fstp
xchg
sub
sub
inc
js
adc
dec
js
out
mov
mov
into
or
sbb
adc
sbb
cmp
push
repnz
fbstp
mov
sbb
retf
jno
mov
pop
call
sbb
jle
sbb
pushw
(bad)
push
in
ja
loop
xchg
(bad)
movs
add
(bad)
jns
and
in
jmp
push
hlt
into
add
shr
push
outs
mov
retf
cmp
retf
pop
lods
movs
movs
jmp
mov
test
sub
add
ja
xor
lods
sub
xchg
ss
xor
call
fistp
pop
mov
push
pop
jbe
inc
stos
lds
cmp
cmps
push
(bad)
daa
leave
pop
xlat
push
xor
sbb
and
in
jo
inc
lahf
dec
sub
xor
or
cmps
daa
sti
cmps
ret
addr16
jmp
jmp
jl
icebp
mov
mov
mov
imul
xor
sub
mov
cmc
lock
inc
push
loop
loop
sbb
call
xor
ficom
cmc
add
pusha
adc
push
stos
in
popf
jnp
hlt
imul
xor
cmps
pop
xchg
stos
aas
js
in
call
xchg
repnz
push
cmc
sahf
jmp
or
movs
mov
xchg
jnp
pop
sbb
jne
jb
sbb
and
push
xchg
adc
cmps
retf
xor
jge
jb
push
cmps
pop
add
int
dec
fs
adc
lds
mov
or
push
sub
clc
inc
sbb
cs
(bad)
loop
sub
jmp
fisttp
xchg
sti
pushf
imul
imul
xchg
into
scas
mov
sub
fdivp
or
or
dec
data16
(bad)
pop
adc
stc
cmps
and
sbb
lock
jne
add
adc
inc
mov
jg
outs
adc
inc
dec
dec
shr
or
ror
inc
in
jns
cld
adc
xor
pushf
lods
lds
rol
jge
inc
hlt
jl
sbb
adc
mov
dec
pop
cmp
daa
jno
gs
out
xchg
add
imul
xchg
div
add
push
mov
jo
adc
imul
into
lock
and
leave
add
mov
mov
in
and
dec
test
mov
sub
cmp
sbb
xor
xor
inc
cmp
mov
mov
outs
fs
inc
les
aad
push
fs
inc
pop
ins
sbb
sub
fmul
cwde
sub
cmp
pop
ret
xchg
stos
push
stos
test
es
push
pop
mov
jbe
out
mov
add
popf
mov
jno
cmc
enter
movs
scas
sbb
and
mov
xor
push
mov
mov
inc
xor
ffree
push
and
pop
or
sub
or
inc
dec
dec
push
cmps
repnz
(bad)
(bad)
fld
adc
jns
cs
jns
push
xor
ss
into
or
mov
bound
inc
nop
bound
in
cmp
or
ins
and
jp
js
(bad)
aam
lods
das
inc
test
out
lods
jns
in
push
mov
mov
rcr
in
(bad)
or
sar
ss
lods
pop
mov
dec
es
push
fnstsw
sar
adc
mov
aad
call
into
inc
lock
and
cmp
jmp
aas
jmp
neg
sbb
jmp
ins
xchg
jo
adc
rol
pop
jmp
dec
shr
out
dec
xor
jp
fbld
jle
inc
jnp
xchg
call
fsubr
outs
cmp
and
jmp
inc
ret
mov
or
xor
punpckhwd
jo
dec
sahf
mov
mov
add
inc
mov
lods
mov
fidiv
mov
add
imul
ja
xchg
or
popf
stos
or
push
dec
aam
jno
sahf
into
pop
xchg
mov
mov
jmp
fsub
jl
sub
nop
sbb
sub
je
pop
push
repnz
push
sbb
sub
sti
dec
lock
xchg
pusha
dec
jge
and
rcr
sub
stos
out
and
(bad)
sub
pop
xchg
pusha
sbb
lods
dec
cli
inc
sub
push
call
jp
mov
dec
(bad)
icebp
jp
repz
in
add
test
leave
jp
retf
out
aam
mov
mul
scas
inc
mov
int3
mov
and
jg
cwde
test
adc
js
pop
out
pop
(bad)
jmp
inc
xchg
ret
rcr
clc
sbb
retf
dec
cmp
mov
dec
bound
cdq
inc
in
popf
sub
or
xchg
mov
cmp
stos
and
add
fist
adc
int3
cmp
fs
dec
fcom
inc
pop
jae
int3
and
iret
movs
sub
in
outs
bnd
jle
loope
mov
cs
mov
mov
xor
mov
cmp
outs
js
mov
jle
(bad)
fcmovb
mov
push
fisttp
sar
cmp
retf
pop
lahf
sub
rep
xchg
dec
add
mov
jle
and
jns
aas
xchg
int
or
add
shl
(bad)
fst
xchg
pop
push
push
add
and
js
inc
rcl
jae
fisubr
std
mov
call
xor
and
jle
ds
mov
jns
xor
in
movs
and
mov
lods
jmp
leave
xchg
ror
(bad)
push
xchg
(bad)
mov
nop
int3
push
sbb
ja
mov
lds
mov
mov
mov
sar
into
add
int3
pop
nop
jno
add
aas
sub
xchg
and
cmps
mov
enter
cmp
xchg
cld
add
cmovge
dec
out
mov
adc
(bad)
cmp
fadd
xchg
xor
jae
call
or
out
mov
lods
jmp
nop
xchg
fstp
aam
pop
xor
scas
and
hlt
ja
jns
and
cmps
jnp
push
sbb
jae
aam
loope
and
adc
dec
push
retf
add
dec
jbe
push
(bad)
arpl
xchg
fcom
jno
bound
pop
push
das
cmp
aas
inc
and
icebp
int
mov
cmp
sbb
aam
fxch
dec
leave
mov
sti
loope
inc
mov
sbb
xor
rcl
icebp
dec
mov
mov
sahf
add
ins
and
aas
iret
stos
loop
enter
add
out
enter
fs
rcl
cdq
and
ret
or
mov
mov
icebp
jo
jecxz
xor
sub
push
std
sub
fst
mov
(bad)
call
mov
jnp
jmp
out
jecxz
cld
mov
inc
pop
test
jns
push
popf
jae
addr16
int3
mov
into
fs
sub
xchg
xlat
ja
jno
scas
repz
push
dec
sti
cmp
(bad)
lods
pop
out
dec
icebp
inc
sub
cdq
jl
(bad)
cwde
cmps
mov
aam
add
ret
out
repz
push
cmp
pop
mov
int3
sub
sub
xor
push
int
push
jns
pop
clc
out
scas
jae
ret
out
mov
out
xchg
shl
push
pop
mov
in
loope
sti
sub
ret
inc
jnp
inc
lods
and
gs
sbb
outs
dec
adc
outs
xor
jae
fimul
cmc
xchg
inc
ins
not
(bad)
sbb
rcr
sti
xchg
sbb
jmp
jp
mov
mul
and
out
inc
ror
cmp
mov
xchg
hlt
or
push
jl
pop
xor
cmp
jmp
sub
mov
jecxz
rol
sbb
or
cmp
movs
outs
dec
aaa
ficomp
out
and
xchg
adc
jp
movs
das
hlt
call
into
ins
daa
jbe
popa
adc
bound
add
fs
push
inc
gs
sub
sbb
or
dec
jb
hlt
cmp
jae
out
and
out
mov
gs
es
or
rcr
stos
mov
repnz
in
dec
inc
mov
loop
scas
clc
shl
ins
out
ret
ins
sbb
shl
pop
mov
movlps
pop
aad
fs
adc
fld
jp
ds
bound
out
cmps
arpl
loop
xchg
cmp
xor
leave
mov
and
jg
pop
push
scas
mov
dec
aaa
add
cmp
popf
call
lods
hlt
xchg
and
sub
stos
lea
cmp
les
pop
(bad)
stc
inc
and
add
xlat
mov
jae
jge
retf
int
repz
add
jge
xchg
or
ss
sahf
popa
and
es
and
mov
mov
and
mov
mov
test
jp
sub
push
add
mov
push
adc
xor
out
retf
call
call
push
imul
fwait
dec
fild
and
cmp
xchg
in
push
push
loopne
pop
pop
and
mov
fnstenv
lea
add
div
or
arpl
xchg
xor
push
imul
repz
cmps
cmp
push
ja
adc
push
call
or
pusha
adc
sbb
ins
inc
mov
hlt
test
retf
int
mov
iret
and
fmul
push
or
jne
cli
inc
push
push
sbb
mov
icebp
mov
pop
(bad)
cmp
(bad)
mov
and
pop
ss
dec
mov
(bad)
call
fsubr
or
cdq
sbb
dec
adc
imul
jle
(bad)
gs
sub
pop
pop
push
out
pop
adc
(bad)
mov
mov
test
in
xlat
jmp
or
mov
mov
mov
mov
imul
in
icebp
mov
int3
or
mov
les
pushf
js
fdivp
sbb
lock
and
cmps
ja
cwde
pop
cmp
and
push
test
pop
inc
arpl
inc
in
sbb
dec
or
sbb
mov
push
rcl
cmp
dec
or
adc
dec
fdivr
push
and
cmp
fst
fbstp
test
push
push
lea
and
movs
cdq
ss
mov
jno
iret
add
mov
aam
test
jnp
cmp
xchg
call
(bad)
dec
and
mov
pop
xacquire
inc
popa
adc
adc
and
dec
sbb
movs
jl
xor
retf
push
mov
mov
out
or
and
fadd
mov
cmps
ins
int3
cmp
rol
loope
jmp
push
xchg
add
arpl
push
push
push
lods
loop
push
pop
sbb
mov
push
push
xchg
jg
inc
cli
rcl
jecxz
push
fsub
adc
call
loop
fs
and
mov
push
pop
sar
mov
iret
es
nop
in
aam
push
aad
cli
inc
xchg
jmp
pop
jmp
movs
push
inc
sub
mov
fbld
rcl
inc
lods
das
scas
cs
cmp
xchg
in
xchg
retf
and
mov
or
xlat
fldpi
inc
or
and
jmp
in
retf
and
inc
jns
scas
lahf
arpl
stc
push
xchg
fld
mov
add
add
pop
xor
nop
xchg
mov
mov
stc
adc
jl
sbb
or
test
popa
lock
imul
mov
jl
or
add
or
push
adc
inc
outs
xchg
xchg
daa
sbb
and
xchg
imul
gs
arpl
and
mov
cmp
or
push
ja
xchg
cmc
adc
adc
ror
inc
icebp
xchg
mov
push
xor
les
enter
ins
into
sbb
push
(bad)
ret
dec
stc
push
shr
sar
iret
adc
pop
out
daa
mov
pushf
xor
daa
sub
test
call
icebp
out
fist
xchg
mov
pusha
mov
loope
outs
ss
inc
inc
add
retf
imul
jb
fidiv
addr16
add
into
push
add
in
test
jne
inc
mov
xor
cmp
push
cmp
dec
and
inc
retf
adc
inc
add
push
outs
out
es
repnz
add
ins
cmp
cmp
fild
lods
les
sbb
mov
(bad)
cmp
arpl
aas
push
in
pop
out
test
dec
sub
test
mov
scas
fild
cmp
mov
(bad)
sub
sub
xor
push
xchg
ja
loopne
repnz
in
fcom
ret
sbb
pop
cmps
mov
cbw
xor
mov
stos
xor
(bad)
jmp
or
out
cmp
in
and
jae
rcl
mov
fsub
inc
dec
loop
fdiv
push
xor
push
xchg
stos
ret
mov
out
push
fadd
cmp
fcomi
ret
test
add
rol
cmp
cmc
(bad)
sbb
out
fs
sub
mov
mov
fidivr
inc
call
pop
xlat
jge
stos
fucomi
mov
imul
lods
jno
mov
fwait
aam
inc
ret
mov
test
jae
lahf
test
fdivr
adc
dec
jne
dec
fstp
push
adc
pop
inc
jecxz
inc
xlat
aaa
fld
push
xor
xor
pop
imul
retf
pop
mov
cdq
js
nop
fs
xchg
in
mov
pop
int
test
ret
into
sbb
mov
xor
dec
add
clc
fimul
clc
sbb
sub
jecxz
xchg
mov
add
test
mov
jne
mov
test
loopne
imul
into
adc
mov
or
popa
adc
add
mov
test
rcl
or
scas
ret
nop
in
xchg
mov
cmp
and
arpl
mov
inc
jecxz
cli
add
sub
jmp
ror
lahf
(bad)
in
movs
int3
dec
jno
sbb
call
sbb
cmp
pop
xor
mov
push
imul
aam
jle
jle
data16
or
mov
xor
mov
imul
pop
lahf
adc
xlat
data16
stc
mov
jne
das
in
dec
xchg
clc
lahf
leave
fs
mov
xlat
add
xor
loope
pushf
fistp
and
popf
test
es
jno
sub
movs
pop
cmp
inc
lock
dec
scas
xchg
mov
loopne
sbb
(bad)
rol
clc
push
ds
and
inc
ins
push
add
cmp
or
loopne
mov
loope
nop
int3
push
shl
test
cmp
and
dec
mov
adc
cmp
das
enter
mov
cwde
call
mov
jmp
inc
fadd
hlt
test
dec
ret
and
out
aam
aas
mov
push
pop
jne
in
pop
dec
bswap
jmp
and
repnz
xchg
xchg
lock
mov
(bad)
icebp
push
inc
or
fisub
jle
lahf
(bad)
xor
mov
stc
add
xchg
sar
cmp
push
cld
test
nop
sub
out
ja
sub
pop
mov
adc
mov
pop
cmp
lock
in
inc
cmps
cmp
lahf
push
out
pop
inc
setno
and
pop
xchg
and
xor
mov
es
sbb
and
mov
jmp
shl
mov
dec
xor
push
fld
mov
xor
mov
retf
dec
sub
sti
or
inc
aas
sub
jne
daa
(bad)
imul
dec
aas
jmp
(bad)
shl
pop
fst
outs
cmp
data16
jmp
das
xlat
retf
ss
retf
cmc
or
cmp
test
stos
push
add
fwait
shl
scas
add
cmp
pushf
(bad)
pop
rcr
retf
and
lods
pop
data16
push
outs
push
mov
ins
mov
sbb
pop
retf
add
fs
pop
mov
aam
mov
fisubr
or
sbb
movs
mov
xchg
push
pop
or
nop
xchg
dec
xchg
and
mov
pop
sbb
or
inc
imul
rol
cdq
xchg
and
add
pop
mov
ins
inc
mov
jmp
cdq
jae
movs
inc
sar
setp
cmps
or
inc
mov
in
aaa
dec
rol
add
fsub
mov
xchg
shr
not
rol
jge
xchg
mov
jbe
(bad)
pop
inc
ins
and
ja
std
pop
retf
dec
popf
pop
stc
cmp
cmovb
mov
mov
in
mov
stos
jecxz
pop
push
pop
sub
xchg
push
sar
jg
jle
adc
adc
or
popa
and
data16
inc
fistp
ret
add
leave
jl
ja
rcr
xor
neg
and
mov
gs
mov
push
bound
pop
stc
bound
cwde
movs
cmp
mov
cld
mov
or
sub
push
cmp
xor
int3
cmps
jmp
mov
sbb
mov
inc
clc
xor
arpl
mov
outs
clc
jmp
pop
jl
gs
out
std
jbe
call
scas
shl
(bad)
xlat
cld
sahf
xchg
adc
xchg
not
(bad)
ror
hlt
leave
dec
add
mov
dec
or
repz
ds
xchg
jb
rol
mov
gs
pop
mov
mov
and
sbb
sub
ja
or
repnz
jge
mov
mov
jl
fist
sub
xchg
pop
out
retf
mov
loopne
mov
inc
mov
add
push
test
gs
push
mov
dec
add
mov
jge
jns
push
sub
sub
stos
pusha
cmp
inc
rcl
xor
je
pop
xchg
out
int3
fld
out
out
imul
xchg
xor
mov
mov
dec
mov
mov
dec
hlt
cmps
nop
dec
cmp
and
ror
xchg
mov
ins
rcr
mov
dec
xor
or
mov
sbb
daa
xor
jg
add
clc
pushf
or
(bad)
cmps
cmc
outs
test
jbe
(bad)
sbb
mov
imul
pusha
fimul
dec
call
ror
ret
sub
aaa
and
out
popf
sbb
jg
test
ror
repz
repnz
addr16
dec
cmp
push
pop
fmul
dec
mov
addr16
add
scas
retf
mov
loope
(bad)
cld
rcl
cdq
je
or
sub
imul
pop
push
jl
or
pop
mov
shr
mov
shl
pop
xchg
xchg
dec
push
out
jno
sub
call
and
cdq
out
cmp
pop
inc
mov
cmp
scas
adc
clc
jmp
pop
stc
adc
xchg
jnp
pushf
out
mov
push
fiadd
mov
sbb
pop
push
jmp
fisttp
xor
mul
pop
mov
mov
push
sub
inc
xor
pop
jns
add
pop
(bad)
mov
outs
pop
xchg
int
stc
scas
jne
lahf
fdivr
dec
jmp
push
in
dec
int3
jmp
int3
adc
sbb
adc
sbb
not
(bad)
cli
data16
std
mov
fdivr
push
add
inc
dec
and
fidivr
mov
imul
lahf
sbb
jecxz
mov
mov
cld
adc
dec
push
xchg
retf
mov
pop
jo
ror
add
retf
jmp
add
add
shl
cld
es
add
je
pushf
mov
push
inc
push
sub
in
std
xor
stos
push
cdq
and
mov
(bad)
js
scas
shr
push
test
bound
sar
ins
out
mov
dec
out
xor
(bad)
and
mov
jle
(bad)
sub
jno
icebp
add
(bad)
or
xor
lods
in
fistp
adc
add
je
stos
fmul
scas
add
xchg
pop
stc
mov
(bad)
mov
xchg
jns
jecxz
add
out
repnz
aas
ins
hlt
push
inc
jmp
bound
loope
(bad)
mov
inc
and
out
dec
pop
sahf
jmp
ja
idiv
mov
jg
mov
nop
aaa
das
mov
inc
jge
inc
dec
xor
popa
popa
adc
ds
and
and
clc
sar
dec
dec
ficom
mov
mov
rol
ret
or
das
xor
push
push
ret
dec
fs
outs
scas
test
inc
cmp
lods
movs
cmps
imul
(bad)
rcr
sub
jmp
or
scas
pop
jmp
(bad)
cmp
mov
call
inc
shl
add
xchg
ja
pop
out
inc
and
repnz
cwde
or
jmp
cmp
jg
jo
xor
xor
pop
jge
nop
shl
loop
mov
(bad)
loop
cmp
push
mov
pop
pop
add
inc
xchg
sbb
dec
and
imul
push
or
or
mov
xor
inc
call
cmps
in
aad
call
stos
ss
test
neg
sahf
pop
lea
lahf
loop
cmps
icebp
ret
nop
cmp
xchg
jb
fistp
loop
addr16
stos
xlat
and
and
push
out
idiv
in
retf
bound
xchg
hlt
addr16
jp
add
jmp
enter
scas
xor
std
ds
adc
(bad)
popf
pop
mov
mov
lea
dec
mov
push
out
push
xchg
sti
rcl
mov
push
(bad)
mov
sub
sbb
dec
and
sbb
mov
jb
inc
iret
call
xchg
inc
js
adc
pop
movs
dec
lods
inc
or
and
jl
xor
mov
xchg
mov
add
ds
xor
das
jmp
scas
pop
aas
sbb
jb
call
test
add
aad
jnp
ja
xchg
int3
inc
mov
or
fdiv
cmps
mov
mov
mov
inc
xchg
ja
int
adc
gs
stos
pop
xchg
sbb
dec
pushf
xchg
int
sbb
or
cdq
mov
xchg
sti
mov
out
out
pop
es
mov
sbb
sbb
xlat
mov
lds
js
adc
les
sub
and
lahf
call
mov
mov
imul
imul
shr
jecxz
or
hlt
pop
and
imul
cmp
sbb
popa
dec
aad
or
jmp
into
add
test
fsubr
mov
icebp
loop
mov
ret
mov
mov
and
fwait
mov
xor
clc
jbe
mov
iret
outs
in
jecxz
or
mov
fmul
inc
pusha
rol
xchg
nop
rcr
mov
push
je
adc
inc
retf
push
push
jnp
rcr
xchg
sar
lods
test
sub
inc
loop
adc
push
shl
rol
mov
pusha
enter
test
inc
xor
or
fimul
in
mov
int
stc
sar
sbb
lds
cwde
and
icebp
sti
mov
push
(bad)
std
cmp
add
iret
pop
xor
ret
push
lock
inc
stc
loop
pop
add
call
xor
adc
push
fidiv
lahf
mov
out
std
sub
fistp
test
mov
ds
pop
int
ret
adc
repnz
lods
jg
into
je
ds
ror
pop
aam
into
loopne
sub
loope
xchg
leave
fwait
cmc
dec
jecxz
xor
daa
or
leave
jb
rcr
pop
ror
dec
push
or
mov
sbb
or
test
jnp
sbb
retf
xchg
jns
lds
sbb
push
jbe
jo
icebp
jnp
pop
cld
push
xchg
fs
add
sub
push
retf
lock
xchg
in
ins
clc
pop
mov
xor
loop
adc
cld
data16
popf
int
gs
sar
mov
stos
retf
call
adc
inc
dec
or
adc
sbb
adc
pop
and
(bad)
ficomp
dec
jecxz
imul
movs
mov
jno
push
pop
inc
add
and
scas
movs
xor
add
mov
ret
sub
int3
lock
push
sar
cwde
cwde
sub
test
jge
sub
cmps
sbb
or
mov
mov
xchg
sbb
dec
adc
loopne
enter
push
dec
xor
(bad)
mov
cmp
push
movs
retf
jnp
fisubr
jecxz
add
inc
add
div
or
cli
sub
dec
mov
xchg
aam
popf
pushf
mov
xchg
add
cmp
test
sar
and
sub
xchg
xor
mov
popa
and
pushf
mov
stos
jno
dec
fsubr
add
pop
outs
sub
scas
icebp
stc
data16
xchg
fwait
mov
adc
stc
pop
ret
sbb
cmp
in
ins
adc
add
dec
ins
jp
mov
std
retf
pop
fwait
stos
idiv
pop
(bad)
mov
sti
push
(bad)
(bad)
in
aaa
or
(bad)
shl
test
js
sbb
push
(bad)
sub
or
sub
cmp
(bad)
jmp
mov
mov
mov
loope
push
push
stos
(bad)
imul
mov
dec
test
mov
xchg
not
dec
mov
imul
cmp
jns
and
(bad)
div
adc
mov
into
push
jecxz
jbe
je
pop
arpl
outs
pop
inc
(bad)
les
icebp
inc
adc
mov
mov
inc
xchg
or
inc
mov
dec
(bad)
aad
out
fnstcw
imul
jmp
mov
mov
lods
fadd
sbb
xchg
mov
pop
add
push
add
or
imul
cmc
and
sbb
pop
pop
inc
int
loopne
test
push
mov
push
add
xchg
sub
jge
test
or
add
dec
sbb
dec
mov
sbb
outs
inc
cmps
and
jns
rol
sub
loop
xchg
fnstsw
pusha
adc
mov
(bad)
movs
dec
mov
adc
cmp
add
test
lock
int
or
sub
adc
add
push
aad
xor
ja
(bad)
gs
or
aad
sub
and
cwde
sbb
push
push
fwait
cs
test
and
popa
movs
sbb
sub
sti
jp
add
movs
mov
sbb
int3
mov
push
jb
lock
daa
bound
imul
outs
dec
mov
jg
sbb
sub
popf
dec
jecxz
jns
inc
push
bound
mov
jp
cli
mov
loope
test
je
sbb
xchg
ror
cs
sbb
and
xor
rol
jmp
lahf
scas
(bad)
(bad)
jns
ins
fst
js
mov
mov
mov
jg
daa
pop
aam
aam
jecxz
cdq
mov
and
sar
popf
inc
xor
inc
add
test
les
pop
adc
inc
and
mov
jae
push
fldenv
hlt
sub
mov
int
xor
fldcw
cdq
fs
cmp
mov
sbb
(bad)
(bad)
(bad)
sbb
out
je
(bad)
dec
les
mov
push
push
mov
mov
xlat
mov
mul
sub
mov
aam
fsubr
xchg
or
mov
rcr
daa
jle
lods
add
inc
lea
seta
jge
pop
cld
jmp
lahf
call
or
(bad)
mov
mov
ins
cmp
rcr
or
jo
pop
in
jb
fidivr
cdq
mov
bound
lods
cmc
movs
cmp
ret
popa
sahf
pop
test
jne
xchg
add
xchg
das
mov
gs
cmp
jno
dec
mov
out
mov
xor
mov
test
in
push
lea
or
rol
push
imul
test
inc
pop
shl
loope
int
mov
outs
aam
mov
int3
mov
(bad)
mov
ins
push
mov
and
xchg
addr16
xchg
pop
mov
(bad)
jle
inc
daa
mov
aad
les
mov
cmc
ins
cmp
jecxz
dec
out
int
addr16
xor
lods
add
test
retf
inc
push
push
rcr
mov
imul
mov
enter
pop
jmp
clc
in
and
ror
std
cli
outs
cmp
stc
cmc
and
mov
sar
jns
add
(bad)
std
pop
ins
mov
inc
or
icebp
pop
mov
cmps
xchg
mov
push
fldenv
cdq
outs
push
mov
push
ss
loope
pop
adc
das
mov
mov
push
das
pop
push
sub
in
mov
ror
or
sub
sub
lods
ja
push
xor
lock
xchg
cwde
xchg
push
enter
inc
scas
jo
and
fcom
imul
mov
pop
jl
adc
jp
xchg
mov
inc
lods
repnz
jmp
push
xor
jne
rol
in
fcmovne
dec
(bad)
cs
dec
dec
in
iret
pop
pop
leave
inc
jg
shl
(bad)
mov
cmp
jnp
jle
or
inc
push
cmp
les
test
movs
lods
lahf
cld
jne
pop
jns
mov
dec
lock
jl
add
dec
fld
movs
adc
cmp
inc
sub
xor
push
push
and
test
es
jmp
inc
and
outs
iret
scas
dec
or
bound
and
rcl
jo
mov
pop
sbb
and
jecxz
xlat
xor
ror
sbb
ret
movs
or
mov
(bad)
mov
xor
stos
out
popa
and
inc
jno
xchg
mov
adc
push
dec
aas
div
sbb
(bad)
loop
pop
mov
push
or
sbb
sub
pop
fcom
lods
rcr
jns
cs
movs
add
xor
out
mov
cmc
movzx
lods
out
(bad)
ror
sub
and
jae
pslld
popf
mov
les
daa
imul
and
sbb
dec
js
mov
push
cmc
leave
push
mov
bound
loope
jmp
imul
shr
pop
xchg
jbe
mov
mov
ja
cmp
push
repz
sbb
adc
mov
mov
adc
push
xchg
add
scas
and
rol
xchg
movs
push
in
xor
fs
jmp
sub
and
nop
cmps
dec
fild
lods
mov
(bad)
push
std
adc
and
adc
mov
jae
cmp
push
pushf
sub
mov
add
outs
shl
jbe
jl
aad
repz
xchg
sub
enter
jo
mov
adc
mov
sub
mov
mov
and
xchg
in
xor
out
sub
aas
gs
bound
inc
pop
dec
ret
jle
out
jp
jg
mov
daa
mov
mov
adc
jecxz
add
ds
xor
int3
cmp
and
mov
fidivr
push
loope
xor
mov
fadd
aaa
dec
dec
retf
loop
repz
inc
jns
dec
(bad)
mov
lea
aas
rcr
jbe
enter
repz
cwde
cmp
and
sahf
movs
stos
mov
data16
jae
inc
mov
cmp
das
mov
repz
mov
js
rcl
mov
aas
pop
add
pop
cmp
repz
jne
adc
mov
jns
sub
test
pop
int
cmp
retf
xor
shl
or
sub
out
aaa
mov
xlat
hlt
pushf
xchg
xchg
sub
xor
xchg
lods
sti
push
fst
jbe
xlat
sub
fcomp
into
ficomp
jge
mov
sbb
movs
test
outs
ret
imul
inc
cmp
movs
and
add
addr16
mov
popa
into
cld
xor
cmps
scas
push
call
push
mov
push
mov
enter
sub
sub
push
data16
int3
ffree
(bad)
or
mov
and
pop
sub
pop
repz
aaa
xlat
jecxz
mov
add
adc
retf
shl
fmul
nop
push
adc
xor
sub
aam
(bad)
out
(bad)
cdq
les
outs
pop
inc
pop
mov
fcomp
mov
pop
lods
sub
test
xchg
jnp
mov
sti
inc
jl
popf
test
fs
das
psubusb
ins
scas
shr
cdq
or
leave
pop
cs
push
jnp
push
xchg
mov
add
fcos
add
sar
push
ret
scas
or
dec
pop
sbb
imul
jle
sub
aaa
imul
push
mov
and
xor
pop
mov
adc
inc
aaa
xchg
in
sbb
js
mov
daa
jmp
mov
adc
xchg
imul
call
std
fnsave
mov
bound
cmp
sub
sbb
or
dec
(bad)
jnp
or
pop
scas
inc
adc
inc
mov
test
xchg
dec
cmp
xchg
lds
ds
adc
js
enter
ins
xchg
mov
dec
jb
fadd
inc
fadd
adc
leave
mov
popf
mov
cmps
add
jle
stos
mov
add
push
mov
push
cmp
lds
call
pusha
cld
fsubr
adc
popa
pop
jg
icebp
xchg
inc
lahf
out
push
or
int3
test
imul
gs
inc
shr
sub
(bad)
in
mov
xchg
mov
and
and
je
cli
aaa
jmp
dec
sub
xlat
dec
stos
outs
and
sub
les
js
cmp
or
rol
mov
fidiv
lods
xchg
ds
(bad)
jnp
add
pop
outs
and
mov
movs
(bad)
addr16
fistp
mov
jecxz
pushf
xlat
fidivr
stc
(bad)
in
clc
hlt
clc
xchg
repz
lock
cld
stc
jno
popa
pop
std
cmp
adc
rcr
pusha
push
cs
mov
sub
into
stos
out
xor
outs
mov
add
mov
xlat
ja
outs
mov
add
daa
ja
loope
cmps
leave
fild
int3
enter
movs
pop
sahf
xchg
test
fadd
dec
ds
push
add
mov
add
push
sbb
in
cmps
loope
fadd
fs
(bad)
mov
into
cmp
out
cmps
call
ds
mov
sbb
dec
sbb
stc
das
stc
sbb
jle
sahf
(bad)
test
scas
dec
lock
mov
sub
arpl
push
scas
dec
xchg
sbb
xor
adc
sbb
jb
popf
mov
cmc
mov
(bad)
idiv
pusha
dec
jmp
not
out
pop
js
push
fwait
mov
push
cmp
in
sbb
ja
xchg
xchg
pop
(bad)
nop
loope
ins
xchg
cld
test
push
xor
pop
push
lahf
test
adc
jo
and
nop
push
sbb
or
rol
cmp
dec
cwde
inc
es
sub
repnz
movs
xchg
xlat
pop
pop
inc
mov
push
aad
sub
adc
cli
and
dec
pop
inc
xchg
shr
inc
ret
inc
add
add
leave
les
nop
mov
mov
push
cmp
push
xchg
dec
jmp
std
push
aaa
shl
repz
xor
retf
or
iret
jb
icebp
fld
jmp
xor
mov
xchg
(bad)
cmps
mov
xor
sar
fs
mov
in
repz
xchg
xchg
frstor
retf
rcl
movs
sbb
in
dec
sbb
and
adc
lds
sub
dec
test
xor
and
jl
cwde
push
(bad)
xor
cmc
jno
xchg
cwde
je
aam
out
xchg
imul
addr16
dec
js
jmp
jno
cld
mov
mov
dec
or
or
or
dec
test
push
sbb
movs
cmp
and
add
or
dec
sub
mov
add
outs
nop
push
xchg
push
adc
add
cdq
adc
(bad)
xchg
cs
mov
pop
repnz
enter
mov
pop
loopne
dec
inc
and
or
mov
movs
mov
or
dec
xor
inc
jns
div
dec
popa
fadd
or
paddsw
pop
xchg
sbb
inc
enter
neg
sub
stc
in
cdq
add
jne
test
scas
stos
pop
xor
aas
sub
scas
retf
push
fs
stos
mov
(bad)
sbb
or
mov
sub
les
sahf
into
int
int
in
mov
adc
imul
arpl
xchg
push
hlt
pop
mov
adc
in
sbb
sub
jecxz
sub
lahf
push
sti
sar
imul
fs
push
xchg
mov
jne
pushf
fiadd
scas
je
pop
pop
push
inc
scas
cmp
in
add
sahf
push
and
inc
pop
sbb
addr16
iret
and
fiadd
std
xor
and
mov
jmp
and
lock
or
enter
push
pop
mov
jecxz
xchg
push
or
cmp
mov
xchg
imul
and
ret
cmps
jns
enter
fst
scas
mov
ins
push
mov
cmp
sbb
mov
xchg
push
(bad)
aam
jo
fisub
or
repnz
js
cmp
inc
xchg
retf
sbb
cdq
mov
into
inc
push
enter
cmp
inc
dec
call
push
dec
mov
cmp
ret
dec
les
aas
aaa
sub
jbe
rcr
loope
push
jecxz
sbb
es
xchg
jae
mov
rcr
stos
rcr
cli
call
into
sub
xchg
sahf
inc
dec
lock
movs
outs
stc
adc
jmp
imul
pop
dec
dec
mov
fisub
pushf
(bad)
iret
popa
fisttp
shl
in
or
jmp
push
(bad)
ret
push
imul
pop
push
xchg
mov
inc
mov
addr16
repnz
jae
mov
pushf
cmp
or
out
int
mov
sub
add
push
and
retf
out
fadd
jmp
push
and
jl
jbe
adc
or
pusha
dec
adc
lahf
push
push
mov
mov
retf
fs
push
xchg
out
jo
add
jb
pop
sbb
push
ins
call
push
sub
jo
jae
loop
inc
jne
pop
jmp
mov
cmp
cli
cmc
pusha
or
xchg
pop
sub
sbb
stos
mov
js
jg
fdivr
xor
inc
cs
call
cli
pop
xlat
adc
dec
fbstp
and
inc
lea
push
ss
pop
inc
mov
idiv
mov
ja
fisttp
mov
in
mov
into
mov
int
and
or
mov
jle
out
ins
adc
sub
clc
clc
mov
jno
push
dec
mov
cli
jmp
jae
ror
ins
fwait
pop
stos
push
jbe
dec
mov
loop
stos
and
shl
pop
lods
loopne
pop
loop
mov
dec
jp
jg
cmp
into
jecxz
cmp
sub
xlat
out
push
sub
movs
mov
push
int3
nop
cmps
arpl
push
xchg
jp
loopne
ss
add
mov
in
int3
fisttp
xchg
push
mov
mov
addr16
(bad)
xor
cs
or
rcl
js
(bad)
mov
mov
adc
leave
xor
xchg
mov
mov
dec
mov
loopne
sbb
mov
test
jno
cmp
and
sub
movs
hlt
sbb
xor
stc
adc
test
pop
in
jecxz
mov
adc
mov
leave
dec
ja
adc
ins
mov
inc
fwait
adc
mov
mov
adc
xor
leave
xchg
mov
add
popf
pop
iret
sqrtps
nop
jmp
lods
adc
jge
fs
stc
loopne
in
dec
ins
mov
xor
jmp
jno
retf
lahf
out
cmp
mov
pcmpeqd
pushf
or
ja
ins
or
int3
enter
(bad)
fs
loopne
xchg
jp
fnsave
cmp
push
mov
sbb
sbb
sbb
repz
lods
adc
mov
pop
pop
jnp
cdq
outs
in
ja
adc
test
movs
das
fldcw
ds
and
test
push
js
adc
push
fstp
sbb
repnz
mov
sub
sub
rcr
pop
aam
or
xchg
xchg
lock
mov
cmp
clc
repz
fisttp
imul
xor
adc
sub
pushf
and
inc
enter
jnp
fcomp
stos
mov
push
js
mov
mov
test
mov
shl
out
into
adc
fisttp
popf
cmc
and
mov
fmul
add
aas
aaa
sbb
and
sub
sub
push
sub
scas
lods
jno
xchg
stos
mov
sbb
ins
sbb
mov
mov
and
inc
sbb
pop
std
int
jno
hlt
xor
mov
fisttp
es
and
or
add
push
mov
add
ins
cmps
add
and
out
jp
adc
popf
mov
sub
mov
lods
dec
leave
mov
jl
xchg
stc
fisub
fwait
mov
outs
or
jnp
test
(bad)
scas
add
imul
int3
dec
pop
ret
outs
push
call
mov
mov
hlt
sbb
cmp
fidivr
mov
mov
xchg
inc
rcl
mov
ss
xchg
into
test
cli
(bad)
test
add
mov
xor
out
pop
jmp
dec
cmp
sbb
dec
call
and
xchg
in
sbb
(bad)
xlat
xor
xor
cmp
pusha
lea
inc
in
out
retf
lock
adc
xor
je
(bad)
aas
xor
jmp
xor
push
xchg
mov
int
fiadd
fcom
xor
test
(bad)
mov
fidiv
add
jno
aad
fnstenv
movs
cmp
bnd
enter
fs
movs
inc
mov
aaa
adc
in
loop
push
mov
jbe
cmps
(bad)
mov
mov
shr
jo
adc
dec
pop
scas
les
push
jb
cmp
xor
sbb
enter
dec
inc
jae
xor
leave
fmul
sbb
clc
test
jg
inc
mov
shl
shl
js
popf
shl
xor
pop
fdivr
stos
inc
or
cwde
jns
push
ret
fistp
je
push
jb
adc
sub
sar
popa
mov
shr
stos
push
mov
or
jmp
ret
in
push
sub
fidivr
outs
jmp
jo
popa
inc
mov
push
xchg
cld
mov
push
xchg
push
mov
sbb
xchg
ss
int3
pop
ja
cdq
fstp
lock
lea
sbb
out
sub
in
outs
dec
movs
jnp
push
xchg
sub
sbb
enter
sbb
mov
jae
pop
xchg
dec
dec
cli
aas
push
sar
imul
dec
cmp
les
pop
ins
mov
jge
mov
mov
or
cmp
imul
xor
jle
js
loop
or
mov
scas
pop
(bad)
aaa
mov
jge
cli
sub
pop
out
cs
scas
out
dec
pop
ret
sti
or
ficom
sub
jle
push
mov
xchg
mov
fwait
jo
sbb
imul
ins
jns
push
popf
cdq
pop
sub
scas
sbb
shr
imul
jg
xchg
xchg
retf
(bad)
nop
mov
add
cmp
jo
aad
int3
jae
(bad)
push
sub
cmp
sbb
and
pop
adc
(bad)
cs
sbb
sti
call
adc
cmp
fimul
ds
int
mov
imul
shl
ds
(bad)
retf
(bad)
mov
aam
int3
push
pop
loop
xchg
pop
out
rol
ds
adc
xchg
mov
xchg
cs
cli
dec
outs
dec
jmp
jge
add
call
mov
loopne
mov
lock
inc
adc
adc
les
ja
(bad)
mov
aas
stos
pop
cs
int3
call
sub
out
into
repz
adc
jne
mov
push
stos
int3
cs
repnz
xchg
xor
adc
jnp
sub
or
mov
cwde
jle
sbb
(bad)
(bad)
fidivr
ss
sub
pop
imul
addr16
inc
push
dec
sub
pop
int
inc
js
cmps
imul
loop
je
cwde
mov
sar
mov
mov
in
inc
pop
stos
repnz
bound
dec
add
cld
jmp
sub
sbb
loope
ins
ret
(bad)
cld
bound
add
pop
lahf
test
xchg
mov
cmp
push
push
icebp
and
scas
jns
sbb
daa
mov
stos
inc
retf
sub
aaa
inc
fmulp
add
sbb
push
(bad)
xchg
mov
inc
test
mov
sbb
sub
add
mov
xor
pop
xor
jns
fs
dec
xchg
add
dec
addr16
fisubr
and
xor
add
pusha
add
out
stc
in
addr16
test
mov
add
loope
cld
xchg
nop
and
pop
mov
xor
call
adc
es
mov
cmps
and
(bad)
ss
pop
mov
stos
mov
fwait
jp
mov
xchg
lds
iret
retf
fidiv
(bad)
xor
stc
and
pop
popf
je
aam
xchg
dec
and
lahf
cmp
(bad)
inc
jmp
push
(bad)
push
loop
outs
mov
pushf
mov
fnstcw
mov
jns
mov
mov
xchg
loop
and
mov
xchg
add
xor
test
mov
and
test
faddp
and
mov
sub
jo
and
jp
bound
adc
neg
sub
adc
dec
outs
popa
and
not
sub
int
pop
idiv
mov
jmp
fwait
xor
out
mov
shl
sbb
or
mov
sbb
or
add
or
(bad)
jmp
mov
push
sub
ins
adc
sub
inc
xchg
scas
inc
mov
jge
es
pop
inc
out
pop
xor
(bad)
jo
jo
ficomp
pop
adc
fchs
cmp
and
cmp
xor
xlat
add
mov
xlat
xchg
push
mov
stc
and
addr16
sub
xor
cmp
test
stos
sbb
loopne
adc
popa
clc
(bad)
mov
int
(bad)
and
cmp
fbstp
into
daa
fist
sub
call
in
sub
iret
dec
xor
dec
ins
sbb
call
imul
(bad)
ins
sub
fcmovbe
push
mov
in
mov
mov
mov
push
jmp
fwait
inc
not
inc
mov
stos
jno
jecxz
inc
cli
or
dec
stos
pop
inc
jp
xchg
inc
mov
bound
pop
xchg
jecxz
push
lods
cmp
mov
sbb
ret
neg
xchg
jno
mov
test
dec
sbb
mov
xchg
call
push
cld
dec
fcom
sbb
imul
xchg
repz
jns
call
pushf
dec
ret
cmp
cmp
je
adc
int3
daa
sub
ins
inc
scas
mov
cwde
into
add
lods
aam
xlat
scas
sbb
cmp
out
dec
sub
test
rol
sub
pop
push
sbb
js
lods
mov
jle
dec
jb
inc
daa
ror
inc
pop
pop
inc
imul
add
pop
out
mov
lods
add
mov
imul
rcr
mov
sub
jecxz
push
xor
repz
test
out
inc
pop
cmps
push
ss
pushf
loopne
neg
jnp
sbb
cmc
out
js
(bad)
mov
inc
cwde
stos
into
shl
or
scas
or
mov
xchg
xlat
or
mov
fs
pop
les
sahf
sbb
fwait
or
fcom
dec
bound
adc
adc
xchg
loop
inc
mov
jecxz
xchg
push
pop
mov
fsin
icebp
jo
(bad)
mov
or
mov
test
inc
bound
dec
push
mov
(bad)
inc
ds
jmp
pushf
or
push
sbb
repnz
cmp
jno
add
cmps
mov
into
push
out
add
movd
sbb
mov
lock
enter
xchg
push
cdq
pop
mov
fdivr
test
xor
fwait
std
sub
cli
cli
shl
fbstp
ror
int
cmp
pop
ins
pop
inc
jns
mov
mov
loope
sub
leave
stos
push
cmp
call
cmps
jno
cli
jbe
enter
inc
dec
jg
cmps
ja
inc
mov
in
sbb
xor
call
cdq
pop
ret
jnp
fadd
lahf
push
inc
fisubr
pop
call
sbb
aaa
bound
xlat
xor
in
sbb
dec
adc
idiv
mov
jb
cmp
sub
lods
xchg
xor
mov
outs
mov
in
ret
outs
sbb
neg
or
(bad)
xchg
mov
sar
clc
jns
mov
sahf
inc
mov
sahf
cmps
xchg
rcr
jmp
push
dec
inc
(bad)
movs
push
jmp
les
popa
sub
int
out
inc
or
pop
and
add
and
test
mov
inc
sbb
pop
xor
mov
push
data16
rcr
mov
lods
sub
inc
xchg
gs
xchg
jg
pop
iret
into
movs
mov
sbb
xlat
jo
adc
mov
pop
fcom
bound
push
add
js
movs
test
add
in
mov
fs
es
pop
rcr
mov
loope
pop
or
xchg
loop
scas
ins
and
or
test
adc
in
sub
jg
xchg
push
dec
ret
jge
adc
xchg
and
addr16
add
inc
(bad)
adc
dec
mov
mov
rcl
fimul
mov
and
add
mov
mov
sub
popa
je
repz
iret
movs
nop
mov
pop
fcom
jmp
mov
and
xor
inc
sbb
xchg
stos
inc
jae
add
and
push
cmp
ds
mov
jo
bound
or
ins
out
pop
fnstenv
jge
mov
aaa
push
clc
inc
mov
inc
inc
adc
sub
aam
dec
and
popf
mov
and
enter
inc
lock
ja
mov
push
addr16
repnz
add
dec
or
retf
mov
cmp
xchg
adc
adc
or
push
movs
lock
jns
push
mov
mov
add
mov
hlt
or
push
test
pop
xor
loopne
cmc
jno
adc
dec
sbb
push
mov
adc
dec
pop
stos
cmp
adc
js
mov
jecxz
pop
daa
or
(bad)
loop
and
jne
fcomp
outs
in
mov
daa
out
int
rol
sbb
pop
sbb
dec
and
push
pop
(bad)
ficomp
mov
lock
cmc
mov
aam
call
cmc
sub
repz
loope
mov
mov
sbb
sub
mov
shr
push
mov
mov
shr
rcr
cmp
xchg
rcl
xchg
dec
xchg
sbb
jecxz
sub
popf
movntq
ret
enter
daa
lods
pushf
ret
adc
hlt
mov
jmp
loop
jno
dec
push
ret
sbb
cwde
jg
(bad)
stc
dec
ja
fs
iret
adc
pop
lods
scas
pushf
inc
js
mov
fistp
add
adc
test
pop
inc
push
retf
lahf
dec
loopne
outs
push
sub
icebp
scas
imul
test
push
sbb
stc
dec
dec
movs
dec
rcl
ror
mov
cpuid
lock
xchg
sub
call
pushf
push
sbb
repz
ror
sbb
mov
mov
adc
sub
shl
ds
pop
std
and
sub
fisttp
dec
inc
push
cmp
jl
aam
or
sub
or
lds
cmp
ss
lods
mov
fucomp
or
(bad)
call
mov
aaa
dec
arpl
out
enter
data16
fucomp
xor
sbb
or
mov
add
sbb
ret
(bad)
push
jb
shl
sbb
mul
xlat
fisubr
sbb
xchg
push
xchg
push
ds
mov
add
jl
adc
fild
or
jmp
cs
cmps
mov
sahf
jo
hlt
popa
cmps
sbb
repz
inc
or
mov
stos
lods
movs
mov
ret
cmp
cmp
dec
inc
inc
pop
in
test
retf
jecxz
nop
outs
pop
inc
lea
sahf
fwait
cmps
cli
push
or
in
push
aad
xchg
cmp
push
jmp
pop
jmp
mov
inc
push
stos
xchg
in
loop
and
cli
sub
popf
dec
mov
aaa
and
ins
mov
push
jnp
adc
test
dec
cs
nop
xchg
dec
jae
in
adc
jne
popf
jl
fisttp
aam
dec
hlt
sbb
and
ret
fcomp
add
ds
paddusb
jns
jp
sub
adc
popa
jl
bound
ret
jl
push
int3
rol
mov
xor
or
lock
jbe
and
mov
retf
jecxz
lea
in
dec
test
dec
inc
and
sbb
push
ror
or
or
push
pop
cmp
ins
xor
pop
sbb
fst
sbb
xchg
pusha
(bad)
stc
xchg
(bad)
mov
(bad)
push
jle
(bad)
scas
jb
mov
ret
fsub
push
(bad)
inc
jg
clc
and
or
push
int
sbb
(bad)
xor
call
push
inc
repnz
add
inc
ret
stos
adc
jge
cmps
fstp
push
or
inc
or
mov
div
aad
mov
or
push
popa
mov
rcl
xor
mov
add
ret
inc
xchg
and
sbb
jmp
sub
pop
mov
sub
push
mov
adc
std
jns
jle
adc
mov
push
iret
xchg
stc
(bad)
xchg
call
jmp
es
xchg
xchg
adc
(bad)
inc
cdq
inc
jl
mov
sbb
ja
aaa
out
push
aam
or
call
sub
arpl
push
mov
ficom
push
mov
cmps
mov
scas
mov
xchg
push
test
repnz
dec
sbb
xchg
cmp
and
loopne
mov
xchg
sub
scas
push
jmp
lahf
mov
cli
mov
xor
cmp
std
sbb
gs
mov
shl
add
xchg
test
rcl
retf
pop
push
aam
aaa
pop
cdq
idiv
xor
in
sub
cdq
dec
dec
jae
inc
rcr
sub
pop
jne
fnstenv
fs
jne
loopne
pop
imul
add
sub
add
imul
and
sub
mov
in
sub
lods
cmp
push
add
cld
out
xor
nop
(bad)
test
xor
call
cmc
fptan
imul
push
pop
jns
nop
clc
cmp
mov
push
mov
test
fldcw
test
(bad)
mov
jb
outs
nop
out
int
mov
out
test
adc
sar
sbb
adc
adc
dec
xor
xchg
push
mov
movs
dec
or
lods
sub
call
outs
sbb
jno
jmp
lock
mov
xlat
inc
(bad)
daa
jl
inc
cmc
ret
pop
retf
popa
add
xchg
popa
ja
and
cmps
and
xchg
mov
das
aas
loope
dec
push
xor
dec
(bad)
xor
(bad)
in
mov
xlat
sub
and
pop
sbb
imul
mov
in
push
out
xchg
popa
mov
sar
cdq
js
mov
retf
stos
mov
retf
mov
xchg
push
jno
add
not
cli
cli
xchg
add
cmp
pop
or
sti
je
mov
mov
mov
ins
inc
mov
in
sub
cmp
pop
rcr
cdq
ins
adc
add
cdq
addr16
cmps
sbb
imul
mov
repnz
aad
in
mov
inc
fdiv
scas
push
lds
mov
mov
shl
or
dec
in
shr
in
cmp
or
sub
shl
into
mov
mov
test
sub
ja
inc
jge
prefetch
or
mov
call
stos
adc
jl
fwait
or
jbe
retf
call
mov
arpl
pop
pushf
push
mov
or
xor
inc
pop
and
(bad)
inc
mov
ja
mov
clc
sti
int
push
cmp
mov
pushf
out
mov
mov
neg
push
jb
int
lods
aad
fadd
movs
push
imul
scas
mov
sti
(bad)
mov
sbb
repz
jns
jb
into
sbb
inc
repz
std
pop
push
mov
sbb
ror
push
scas
jle
add
out
leave
fwait
inc
jno
xchg
xchg
fcmovnb
cmc
retf
test
adc
lock
arpl
mov
fdivr
push
ds
xchg
sbb
scas
mov
mov
pop
xchg
or
sub
inc
or
sar
jne
mov
and
hlt
mov
leave
scas
pushf
outs
fadd
sub
xchg
xor
pusha
not
test
imul
mov
stos
pop
adc
xor
loop
mov
fbstp
in
jno
sbb
inc
and
sti
aaa
aad
add
jae
jns
ins
icebp
push
or
nop
or
stc
jnp
add
into
lock
mov
das
das
or
in
or
gs
loop
or
cmp
ror
loope
aas
push
retf
sub
push
push
add
mov
push
gs
jo
mov
mov
ins
rcl
xor
xchg
mov
inc
cmp
dec
rcr
fwait
sub
xor
ror
int
and
lods
push
and
repnz
xor
jmp
mov
rcl
jmp
xchg
repz
sbb
cli
imul
push
int3
adc
mov
outs
ins
test
rcl
cmp
jmp
jmp
adc
sbb
lds
lea
out
inc
jle
loop
cwde
je
inc
push
pop
jmp
dec
ins
dec
imul
and
cmps
fwait
ins
pop
movs
cmps
sti
jb
or
pop
pop
adc
pop
dec
add
inc
scas
into
(bad)
push
xor
ins
mov
js
outs
enter
test
out
cs
cmp
xor
dec
loope
pop
inc
xor
dec
inc
pop
jb
cmp
push
push
xchg
jae
out
mov
scas
test
jbe
jecxz
and
movs
pusha
call
jecxz
pop
add
cmps
shl
mov
jle
lods
jmp
sbb
xchg
loop
stos
pop
dec
ret
rcr
(bad)
sar
push
retf
retf
sti
jle
inc
jnp
movs
xor
jg
adc
out
not
jmp
hlt
add
mov
rol
push
lods
jle
nop
xchg
or
xor
in
xor
and
mov
int3
scas
mov
and
movs
stos
pop
clc
add
hlt
mov
mov
xor
xor
jle
es
jbe
add
in
mov
imul
and
sbb
(bad)
sti
push
cwde
repnz
mov
js
popa
lock
outs
popf
inc
pop
and
popf
jae
add
add
scas
mov
add
repz
movs
xor
jnp
fild
loop
mov
or
and
fwait
outs
dec
test
mov
neg
xlat
jb
push
add
push
out
dec
dec
mov
pusha
data16
dec
push
cmp
fld
push
sub
ins
mov
iret
int3
das
ds
push
xchg
mov
jp
retf
sub
pop
repz
dec
lods
div
sub
fst
fimul
dec
call
das
mov
mov
jp
inc
inc
sub
call
rol
jno
ds
jae
xchg
ret
(bad)
lock
mov
mov
jmp
pop
add
scas
scas
xchg
sub
dec
out
repz
xchg
clc
or
mov
(bad)
cmp
pop
sar
fdivr
bound
xchg
ret
test
nop
sub
push
stos
dec
push
loope
movq
es
nop
push
loopne
push
loopne
sbb
rcl
sub
mov
inc
sbb
or
or
push
xchg
mov
adc
pusha
push
movs
loope
ss
mov
xchg
pusha
loopne
mov
dec
dec
dec
or
std
ret
stc
jnp
aam
jb
loope
lods
fisttp
repz
call
leave
mov
adc
xor
test
mov
sub
test
call
mov
and
hlt
jge
bound
jmp
clc
fcom
inc
xor
lahf
jle
cdq
leave
push
popa
iret
ja
(bad)
mov
pop
stos
xchg
mov
icebp
sar
jo
loopne
enter
dec
inc
mov
pop
btr
and
jl
int
lods
sub
fimul
xor
movs
mov
mov
mov
mov
cwde
pop
dec
mov
stos
add
cmc
sub
jns
mov
aad
sub
fsubr
dec
daa
adc
enter
xor
adc
dec
push
adc
int
mov
push
push
adc
stc
fs
(bad)
pop
cdq
pusha
push
(bad)
into
daa
mov
xchg
out
inc
dec
jmp
out
dec
jmp
lods
outs
retf
mov
cmp
dec
addr16
jbe
and
add
mov
cwde
mov
push
cmc
xchg
add
fimul
lods
sub
jae
mov
aad
sar
cmp
pop
mov
cs
aad
in
mov
adc
call
data16
mov
xchg
xlat
inc
cmc
loope
das
outs
pop
(bad)
std
pop
test
out
icebp
xlat
int3
inc
fadd
xor
jge
fisttp
mov
(bad)
into
leave
jmp
fsubr
add
pop
(bad)
dec
or
fldcw
adc
push
mov
push
xchg
mov
mul
std
mov
fisubr
or
iret
inc
or
inc
lods
lods
das
add
cmp
hlt
mov
test
jl
data16
fldcw
test
dec
pop
push
ret
outs
cmp
or
scas
sbb
and
pop
xor
data16
pushf
push
call
or
daa
rcr
sahf
cmp
dec
rol
loop
fidivr
dec
(bad)
arpl
mov
push
fisttp
lods
rol
jae
iret
pop
scas
inc
xchg
cmps
mov
mov
or
pop
inc
or
in
cmp
(bad)
xchg
jo
jno
(bad)
sti
cmp
mov
sub
fst
fnsave
cwde
xlat
jae
inc
push
iret
(bad)
inc
xchg
aam
dec
sbb
mov
sbb
call
(bad)
into
mov
out
xchg
xchg
mov
je
in
add
retf
in
sbb
jmp
cmp
mov
push
ret
mov
adc
mov
mov
fdivr
add
inc
enter
repz
or
and
lods
cmps
push
adc
add
inc
cmp
lea
js
es
xchg
xor
outs
push
fdiv
mov
fneni(8087
and
shl
jecxz
test
ret
and
rcl
(bad)
add
cs
inc
scas
nop
test
pusha
call
pop
or
aaa
mov
int
enter
je
xor
and
popf
lahf
jbe
inc
or
mov
ja
sbb
sbb
mov
sbb
cmps
inc
sbb
popa
inc
add
push
popa
inc
pop
sbb
rcl
jmp
jge
es
or
cmp
call
jns
xor
sub
stc
add
test
mov
shl
std
and
rcl
cmp
jo
or
mov
fcom
mov
or
aam
mov
xlat
push
sbb
mov
in
jle
pop
scas
jns
je
and
pop
imul
int
ficomp
stos
jne
mov
mov
(bad)
imul
test
inc
and
or
repz
add
inc
shl
lds
int3
test
pusha
aam
fnstsw
(bad)
ins
mov
push
test
pushw
scas
call
ror
sahf
xchg
into
(bad)
add
fucomi
icebp
arpl
imul
add
xchg
lods
add
and
inc
mov
out
lods
adc
xchg
in
mov
inc
inc
clc
fstp
test
mov
xlat
lahf
xchg
pop
dec
push
or
stc
cmps
jecxz
rol
aam
cmps
jno
mov
rcr
gs
fwait
cdq
and
shr
push
shl
loope
dec
pop
unpckhps
inc
or
xchg
cmps
push
test
inc
shr
sbb
fdiv
loop
popa
out
and
pop
adc
add
xchg
stos
mov
out
pusha
and
cmp
icebp
jge
pop
xchg
loope
pop
inc
push
xor
jg
ret
pop
in
in
add
loope
cmps
lea
inc
cdq
fsub
and
push
push
jb
test
addr16
fsub
out
push
cmp
mov
add
push
movs
mov
test
test
cmps
aas
and
jmp
inc
leave
mov
cmps
lahf
xchg
lahf
ins
and
or
mov
push
pop
repnz
(bad)
mov
jl
add
pusha
adc
sbb
test
xor
xchg
ror
pop
adc
push
fimul
ins
xlat
imul
or
addr16
jo
inc
inc
jne
xchg
sub
add
sbb
sti
push
out
cmp
push
mov
inc
xchg
mov
mov
scas
sub
leave
cmps
mov
int
cdq
cmp
test
cmp
dec
sbb
xor
dec
ins
add
outs
sub
cwde
push
cmp
adc
jmp
dec
dec
or
cmp
pop
aad
ds
in
cmc
fild
fs
cmp
(bad)
add
test
sub
dec
call
adc
sub
popa
dec
xor
xchg
cmps
jge
inc
or
iret
jge
cmps
(bad)
mov
mov
pop
sub
(bad)
cld
mov
jne
ret
cld
shl
mov
sub
pop
lahf
pop
fldcw
adc
push
and
mov
hlt
sub
mov
outs
(bad)
add
dec
xor
not
test
lea
mov
cmp
das
xchg
(bad)
int
mov
cld
mov
test
loop
repnz
xchg
lods
jo
fsub
cmp
jns
bound
mov
int3
and
(bad)
inc
add
cdq
pop
in
ficomp
lock
mov
repnz
adc
cmp
adc
pop
sbb
push
mov
test
inc
pop
cdq
outs
push
push
jl
ins
leave
mov
ja
movs
and
test
xchg
sar
addr16
xchg
sub
imul
mov
mov
mov
or
xor
xchg
xor
outs
xchg
mov
add
push
mov
les
push
dec
fmul
lock
mov
jl
ds
dec
mov
js
mov
jns
fwait
xchg
ficomp
cmc
lea
test
jne
cmc
lock
or
inc
push
pop
inc
retf
test
test
cld
xor
jge
(bad)
mov
mov
mov
cs
mov
hlt
in
fldlg2
test
add
sbb
jns
rcl
adc
je
pop
ror
jb
push
stos
loopne
and
loope
sub
sub
test
into
and
inc
nop
pop
add
(bad)
mov
lds
ins
xor
retf
mov
aas
cmp
add
loope
push
test
(bad)
pop
inc
or
mov
dec
and
xor
dec
in
adc
or
mov
sub
cwde
jbe
add
xchg
lock
int
mov
fistp
arpl
adc
push
xchg
pop
mov
ja
loop
lods
(bad)
aam
hlt
xor
xor
push
ror
and
repnz
sbb
pop
pslld
cmps
sbb
sahf
push
xlat
mov
jle
repz
aaa
repnz
scas
fwait
ds
mov
mov
mov
and
loope
test
dec
jbe
movs
(bad)
fstp
imul
lods
push
pop
and
adc
mov
retf
sub
jnp
call
popf
test
mov
(bad)
and
and
mov
aaa
push
in
jg
cmp
outs
popf
setne
retf
push
js
xor
int
call
mov
jnp
inc
scas
das
mov
jae
jecxz
push
cmp
mov
pop
int3
movs
out
add
pop
hlt
mul
call
jmp
ret
std
test
xchg
cmps
retf
or
jge
push
call
(bad)
lahf
mov
push
aaa
es
xlat
push
cmps
out
or
push
xor
loopne
add
out
mov
mov
sahf
sar
and
mov
sub
mov
sahf
dec
aad
and
cld
or
jg
xchg
adc
popf
jnp
jb
mov
das
sbb
push
movs
mov
test
fadd
aas
or
xchg
lods
add
out
stos
fsubr
in
retf
and
mov
jg
mov
lods
pushf
cmp
rcl
outs
imul
jmp
loopne
or
pop
mov
xor
stc
pop
add
cdq
stos
aas
mov
or
lock
sbb
cdq
(bad)
leave
or
jbe
push
push
lods
outs
mov
and
dec
sub
in
xchg
adc
scas
int
out
cmp
mov
rol
aaa
push
test
lea
into
or
rol
pop
xor
imul
sub
(bad)
lds
mov
js
in
xchg
inc
inc
jo
ss
adc
adc
call
gs
adc
and
and
imul
xchg
adc
je
outs
loope
dec
popa
outs
mov
dec
mov
test
cmc
popf
lods
dec
loop
shr
adc
adc
jle
lock
mov
ins
(bad)
fist
cmp
add
gs
dec
cwde
aam
out
imul
inc
mov
sbb
mov
mov
pushf
mov
mov
push
cli
out
push
stc
(bad)
jg
push
popf
jg
test
dec
push
sbb
cli
mov
mov
xchg
push
mov
ret
cmp
hlt
jo
mul
mov
das
jecxz
pop
pop
jl
xchg
xor
or
push
in
retf
cmp
add
shl
xor
dec
outs
outs
dec
push
adc
cli
dec
and
push
int
push
pop
test
ja
mov
add
not
cmp
sub
shl
push
aam
imul
inc
pop
jb
(bad)
stc
adc
mov
or
pop
adc
jg
ret
shl
aas
mov
cmp
je
or
pop
in
out
fisttp
adc
repnz
xchg
push
xor
das
adc
mov
push
or
dec
lock
add
mov
sub
jl
stos
popf
rcl
add
into
inc
cmp
dec
cmp
pop
and
(bad)
cld
cdq
addr16
or
in
scas
dec
jmp
daa
add
jno
xchg
hlt
or
add
add
out
(bad)
jle
push
retf
push
icebp
retf
test
(bad)
and
mov
ret
lock
das
mov
jl
es
mov
mov
jge
test
cmp
fs
imul
push
dec
inc
xor
mov
cmps
pop
mov
mov
adc
adc
mov
call
aad
inc
neg
inc
scas
mov
push
out
adc
dec
fwait
inc
mov
xchg
adc
adc
test
rcl
pushf
mov
sti
(bad)
or
(bad)
mov
xchg
mov
retf
inc
je
scas
cmp
mov
aaa
test
inc
ret
mov
push
mov
lods
pop
stos
loop
dec
movs
xchg
mov
icebp
lods
jl
mov
xchg
out
jg
int
inc
je
std
and
loopne
adc
test
int3
inc
pop
adc
sbb
pop
retf
lods
in
or
adc
aaa
hlt
jo
pop
stos
imul
cli
movntq
and
cmp
fdiv
add
dec
push
cmp
sbb
fucomp
icebp
cwde
xor
adc
push
inc
outs
jmp
mov
cmp
sub
ja
mov
jo
and
mov
bound
mov
jecxz
xchg
in
cmc
xchg
repz
je
pusha
sahf
je
data16
cmc
arpl
leave
mov
mov
pop
inc
push
imul
in
dec
loope
xor
cmps
in
pop
loope
mov
pop
dec
addr16
jmp
dec
fnstsw
or
gs
pusha
iret
lods
mov
push
ret
xchg
shl
test
js
pop
add
ins
xlat
xor
cld
push
stc
fs
mov
and
jbe
test
or
(bad)
sub
pusha
jbe
cmp
loope
lahf
int3
jl
push
and
jbe
aad
fwait
xchg
xchg
sbb
cmps
pop
mov
add
jge
inc
sub
mov
arpl
cdq
pop
int
lods
or
mov
ret
jmp
and
inc
nop
cli
xchg
je
jmp
scas
or
leave
mov
je
stos
mov
pop
jge
mov
lock
sub
das
(bad)
loope
xor
test
sub
ficomp
lods
mov
call
push
dec
sub
inc
mov
mov
fst
and
jae
ds
push
jae
or
mov
dec
repz
pop
xor
sbb
jmp
stos
mov
test
inc
dec
nop
dec
fst
movs
mov
stos
inc
lods
jle
das
add
ficom
imul
cmp
jmp
cdq
xchg
xchg
(bad)
test
cmp
and
test
shr
inc
fs
nop
mov
push
repz
fs
test
mov
mov
jne
aam
jmp
call
shr
rol
ins
pushf
(bad)
and
sbb
sbb
cmp
mov
loopne
les
aad
pusha
nop
fdiv
out
mov
mov
sub
jecxz
push
cmp
push
pushf
loop
div
and
mov
xlat
sbb
and
sub
es
mov
cmp
enter
push
leave
xchg
xchg
mov
lods
retf
dec
jb
in
call
xor
ret
sbb
cmp
mov
mov
xor
ror
aam
outs
and
cld
xor
js
mov
mov
cwde
jns
sbb
movs
sub
ror
sub
gs
cdq
mov
out
or
cs
int
je
mov
jne
jne
int3
outs
add
lock
lods
out
fstp
cli
pop
mov
jbe
pop
movs
add
push
(bad)
mov
repz
mov
aas
lea
xor
or
test
xlat
cmps
mov
jb
xchg
xchg
rcl
inc
pop
cmps
mov
push
xchg
clc
aas
pushf
mov
mov
outs
outs
sub
test
mov
js
push
xlat
push
jo
inc
or
sbb
loope
sbb
dec
add
cld
cwde
xchg
pop
adc
push
pop
jno
call
xchg
loop
cmp
mov
stos
cdq
jae
jmp
lock
push
ins
scas
jg
or
xchg
xor
sub
inc
fdivr
ds
sbb
cdq
cmp
stos
popa
mul
push
arpl
and
sbb
mov
int3
aas
and
div
add
mov
fnstcw
adc
jge
loop
fxch
or
scas
adc
lods
shl
adc
push
pop
mov
xchg
outs
xchg
jp
mov
stc
dec
cmps
dec
loope
loopne
and
sbb
sbb
test
pop
xchg
mov
xchg
pop
push
xchg
dec
xchg
(bad)
ret
pop
adc
xor
leave
test
fld
fisub
popa
dec
call
mov
pushf
mov
jp
jo
fcomp
clc
inc
cmps
sti
cmp
mov
sub
sub
outs
push
jle
mov
test
adc
retf
cmp
rcl
mov
or
int3
add
xchg
cdq
fwait
pop
push
pop
pop
retf
cli
test
jg
ins
cmp
aam
scas
push
outs
ss
xor
dec
add
adc
jbe
push
cwde
xor
rcr
jmp
mov
dec
sbb
push
std
or
ds
sti
xchg
outs
movs
dec
dec
sbb
cmps
dec
imul
push
shr
push
aad
pop
sbb
into
test
cmp
cmp
test
jnp
inc
cwde
inc
xlat
inc
or
addr16
jns
push
test
xor
in
in
dec
dec
mov
or
push
inc
dec
mov
xchg
cmp
cmp
xor
std
sub
in
xchg
adc
mov
arpl
fist
ja
sti
xchg
(bad)
push
adc
sub
jne
push
pop
aas
cmp
iret
mov
pop
adc
xor
add
pop
mov
jb
pop
clc
add
cmp
xchg
and
push
pop
ret
pop
adc
push
scas
push
lock
inc
push
jns
jmp
sub
xor
inc
clc
lods
(bad)
mov
adc
(bad)
xor
movs
mov
cmp
and
and
xor
sbb
outs
mov
jae
dec
xchg
mov
xchg
jo
loop
inc
jo
(bad)
out
js
add
std
xor
fbstp
dec
xor
cmp
dec
out
push
or
dec
mov
(bad)
ds
icebp
(bad)
cld
(bad)
ja
cmp
sub
inc
push
jmp
ficomp
out
sub
mov
dec
pusha
xor
cmps
push
cmp
inc
adc
push
repz
in
mov
pop
jnp
lods
std
fnstsw
ret
stos
mov
xor
call
imul
data16
pushf
call
xor
test
sub
mov
sahf
mov
repnz
imul
out
push
add
les
cmps
mov
inc
cmps
fsubr
jns
jge
iret
dec
ja
shl
push
xchg
sti
adc
jg
xchg
test
cli
(bad)
sbb
out
or
mov
xor
bound
xor
sub
xor
aad
add
outs
outs
inc
sti
mov
xchg
pop
pop
push
xor
cmps
push
inc
enter
in
int
push
sbb
int
lock
xor
push
cmp
iret
dec
popf
mov
push
ds
or
cmp
test
fwait
sub
mov
sahf
and
fwait
sbb
pop
sub
push
and
enter
dec
popf
fcmovne
mov
xlat
jge
adc
ss
jbe
jp
cmps
repnz
add
mov
pop
fs
out
xchg
call
adc
sbb
mov
add
xor
inc
sbb
ins
jl
in
mov
retf
sti
test
xchg
jle
and
sbb
lea
mov
pop
inc
push
dec
or
ins
popf
mov
add
mov
scas
fmul
pop
and
ret
pop
pop
push
dec
fsub
arpl
and
lods
loop
mov
add
retf
int3
mov
xor
jns
repz
out
lds
mov
and
leave
nop
outs
sub
ror
fs
retf
pop
js
lods
repz
jecxz
sub
mov
and
mov
mov
and
aas
iret
inc
xchg
xchg
int3
test
jno
sbb
lods
jge
pop
fs
popa
push
and
xchg
fmul
test
bound
cmp
loope
mov
and
loope
adc
sub
aad
pop
pop
(bad)
xchg
inc
lea
or
ror
cli
adc
xor
pusha
and
cmps
or
jecxz
sti
out
pop
or
sub
stos
imul
(bad)
pop
add
pop
mov
ins
shl
cmc
push
jp
or
jnp
mov
mov
cmp
fcom
out
adc
mov
xor
and
inc
jno
push
test
sbb
inc
xor
cmps
mov
outs
and
aaa
fst
adc
and
gs
dec
jmp
daa
or
imul
jp
out
add
add
daa
jle
sub
movhps
das
cli
idiv
sar
sti
and
and
dec
dec
jne
popa
loop
sub
fstp
outs
(bad)
xor
retf
test
in
sub
aam
arpl
cmp
cld
popf
push
cwde
cmp
xlat
in
out
jnp
shl
pushf
xor
ficom
inc
xchg
retf
imul
pop
push
dec
xchg
and
sbb
mov
js
in
mov
sub
push
xchg
int
lahf
cwde
dec
mov
loop
push
fmul
xor
push
adc
jae
call
push
inc
mov
pop
sar
mov
dec
push
bound
bound
jge
mov
mov
scas
jno
jmp
push
pop
push
bound
sbb
cwde
adc
ret
or
fdiv
mov
das
hlt
add
cmp
sahf
push
sbb
test
push
ss
sbb
and
jne
out
clc
adc
xchg
rol
mov
int
push
mov
sbb
stc
das
xor
cdq
and
mov
sub
pop
test
xchg
scas
mov
push
loopne
out
pop
mov
bound
adc
mov
repnz
xchg
in
xchg
mov
mov
outs
jnp
ret
shl
jns
sti
adc
or
pop
pop
jns
fst
mov
jge
fistp
mov
fst
out
mov
jmp
shl
dec
cmps
fwait
cmp
ds
scas
getsec
sub
pop
sahf
inc
lds
jp
mov
mov
cmp
shl
jnp
push
repz
xor
mov
adc
mov
xor
loope
popa
int
ins
test
mov
aad
or
daa
mov
(bad)
xor
mov
inc
bound
std
fild
mov
lds
jmp
(bad)
dec
outs
dec
mov
out
or
or
or
pop
popf
imul
sbb
fild
dec
ficomp
add
cmp
mov
inc
pop
(bad)
shl
(bad)
dec
cmps
in
lds
(bad)
aaa
cli
fimul
jge
jle
pop
and
mov
mov
shl
pop
cmp
or
push
dec
mov
push
cwde
and
and
cwde
shl
das
cld
inc
and
enter
or
(bad)
gs
mov
push
xor
jnp
pop
mov
ds
adc
push
cmp
mov
lds
inc
stos
les
cli
loop
mov
psadbw
or
push
jo
xchg
retf
(bad)
xchg
fcmovnb
iret
sub
je
shl
mov
mov
bound
movs
scas
(bad)
or
sar
mov
mov
and
sub
dec
aam
inc
push
(bad)
(bad)
cmc
test
test
(bad)
mov
or
xor
or
cmp
mov
mov
cmp
fild
and
adc
popf
mov
popa
ins
inc
js
inc
retf
scas
ss
popf
leave
(bad)
ins
bound
xchg
inc
loop
xor
stc
cmp
cmps
dec
nop
rcr
jne
xchg
aad
pop
add
and
dec
sub
sbb
jle
rol
ret
jae
inc
push
sub
div
xlat
or
adc
stos
push
sar
fnstcw
repz
pushf
mov
stc
addr16
jns
jecxz
int
ins
pop
jmp
pop
jle
pop
ins
jmp
xchg
ds
add
fidiv
inc
pop
cmp
pop
mov
out
mov
adc
push
add
xchg
inc
and
and
fild
enter
mov
pop
mov
pop
mov
ins
nop
fcmovu
jle
jp
rcl
fwait
mov
sbb
jb
add
aam
dec
push
xchg
stos
mov
mov
imul
xchg
hlt
jno
jmp
lock
pop
ret
cmp
in
pusha
inc
rcr
popa
mov
ins
or
and
ins
(bad)
in
sub
nop
ja
call
repnz
jecxz
mov
dec
out
adc
fsub
data16
cmp
mov
and
cmp
ins
push
cmp
sub
arpl
xor
ss
inc
popf
loop
sub
not
sub
push
inc
xor
repnz
sbb
cmp
popf
int
loopne
inc
xchg
outs
ss
cmps
repz
ins
retf
mul
mov
and
sbb
pop
inc
movs
popf
push
push
xchg
inc
dec
(bad)
jo
daa
xor
push
pushf
and
push
inc
sti
ficomp
fld
mov
xor
add
cmp
cmc
mov
bound
xchg
xchg
push
fiadd
xchg
pop
ss
in
jmp
lock
inc
mov
scas
inc
pop
aad
add
js
xchg
shr
sbb
sbb
xchg
add
cmp
outs
fwait
and
scas
jns
int
movs
(bad)
sti
or
or
dec
pushf
std
mov
jne
push
fst
repz
and
dec
jnp
daa
jae
cmp
jmp
lds
inc
cmp
gs
mov
push
fcomip
jecxz
pop
out
mov
loop
into
add
jle
rcr
pop
cwde
xchg
sbb
jae
imul
mov
mov
or
cwde
sbb
ds
aas
sar
in
dec
aaa
outs
fcom
ins
loope
mov
(bad)
mov
mov
sti
pop
retf
xor
out
push
cmp
nop
mov
dec
js
aas
sub
xor
scas
push
mov
fbstp
jp
out
out
push
xor
loopne
or
push
or
sub
test
cld
and
enter
cmp
shl
les
ret
xor
push
in
adc
outs
xchg
aam
cmp
out
sub
mov
sti
sar
into
fdiv
adc
je
out
aad
nop
sti
mov
add
mov
xchg
sub
dec
adc
(bad)
and
jae
or
mov
fistp
(bad)
scas
or
xchg
scas
lahf
lds
mov
sbb
adc
dec
fs
mov
(bad)
scas
(bad)
out
jg
int3
lock
adc
repnz
jp
sbb
cdq
mov
push
jne
cmps
push
ins
mov
sbb
inc
add
sar
jno
mov
lahf
dec
pop
jmp
or
jp
xchg
je
out
mov
adc
stc
and
mov
jg
mov
xor
in
test
add
addr16
add
les
jbe
cld
jb
push
fiadd
mov
outs
int3
test
aaa
mul
stos
mov
retf
push
or
lods
retf
sbb
sti
mov
pop
mov
jno
xor
sahf
xchg
retf
lea
push
sub
mov
js
ror
mov
sub
mov
sbb
jmp
in
inc
mov
cmps
mov
add
and
daa
add
xor
sub
or
jmp
paddb
add
(bad)
ss
ins
sbb
or
data16
xor
xchg
in
jle
pop
loopne
pop
inc
sbb
int
push
shr
loopne
push
inc
cmp
fs
cmps
sahf
adc
cli
cmp
cmp
mov
xchg
cli
loopne
mov
xchg
inc
shl
xchg
sub
inc
jae
sub
mov
repz
jb
mov
std
hlt
or
mov
out
dec
dec
mov
rcl
pop
aas
aam
dec
push
aad
movs
hlt
into
stos
add
sbb
cmp
pop
add
and
cmp
jmp
or
ret
jb
sbb
and
cmc
fprem
ret
fcomp
push
mov
aaa
mov
cmc
inc
mov
jmp
int
jp
mov
in
xchg
push
jge
popf
mov
ror
movs
lock
add
stos
add
bound
scas
repnz
sbb
xchg
or
mov
pusha
inc
jmp
add
push
xor
mov
hlt
fiadd
mov
fsub
mov
and
aam
adc
dec
stc
mov
inc
out
pop
pushf
jmp
loop
stos
dec
pop
clc
and
sub
jl
in
jle
push
add
test
mov
scas
inc
and
pop
call
pusha
sbb
bound
fcmovnbe
dec
sub
add
lds
stc
dec
push
(bad)
mov
mov
inc
xchg
loope
xor
addr16
mov
test
repz
push
retf
int3
movs
lock
std
mov
mov
fcomp
(bad)
pop
mov
test
fcmovnbe
stc
inc
pop
(bad)
dec
mov
sbb
loop
jmp
xor
in
sbb
xchg
(bad)
adc
xlat
mov
sbb
stc
sub
add
movs
pop
jne
mov
push
mov
adc
jnp
inc
int3
adc
and
(bad)
pusha
mov
mov
cmps
xbegin
bound
xor
jno
sahf
jl
xchg
leave
inc
fsubr
je
mov
and
jg
jae
pop
ret
or
push
in
shl
test
cmp
(bad)
in
nop
leave
bound
enter
mov
cmp
dec
ror
sbb
mov
sub
xchg
imul
cld
in
and
or
cmp
mov
or
bsr
or
loop
mov
shr
jno
lahf
bound
xchg
fwait
pop
xlat
or
sub
cmp
xor
pop
dec
xor
adc
mov
into
sbb
jmp
outs
mov
shr
(bad)
repnz
aas
xor
cmp
sub
test
aad
xor
sbb
jmp
or
mov
into
add
or
adc
adc
lods
retf
cmps
pop
dec
es
jmp
mov
(bad)
(bad)
movs
jp
push
inc
xchg
pop
adc
adc
imul
repnz
push
fmul
push
outs
into
and
mov
jbe
mov
in
sbb
stos
xor
clc
add
xchg
out
and
cmps
in
ins
cdq
dec
ins
mov
repnz
ret
xchg
loopne
push
sub
push
xchg
dec
xchg
(bad)
push
hlt
add
add
sar
bndstx
push
aas
das
test
push
cwde
lea
dec
cwde
movs
fnstenv
inc
and
cwde
int3
data16
mov
sub
sbb
dec
(bad)
push
pop
enter
enter
mov
leave
jmp
rcl
mov
push
bound
sbb
push
cmp
jbe
xor
pop
cs
mov
fsub
pop
es
xchg
jae
xor
sahf
adc
int
cmp
out
jecxz
lahf
dec
cmp
aas
cmp
mov
outs
jecxz
adc
mov
xchg
jnp
lods
or
sub
sbb
cld
sbb
adc
or
xchg
out
dec
xchg
(bad)
les
mov
cmp
push
int3
mov
in
fldenv
lods
add
and
cmc
mov
mov
(bad)
imul
pop
cmps
mul
push
mov
bound
jge
jmp
sub
movs
xor
dec
mov
sbb
test
fisttp
push
jg
outs
or
push
pop
movs
or
add
and
mov
cld
out
int
stc
or
test
repnz
add
cmps
mov
sub
in
mov
iret
add
pop
in
adc
(bad)
sbb
in
add
(bad)
cmp
mov
mov
and
xchg
cwde
pop
cs
jns
pop
dec
mov
or
dec
xchg
(bad)
mov
cmp
jecxz
stc
sbb
dec
jo
sti
adc
scas
adc
sti
test
mov
in
and
ds
and
and
lahf
jmp
xchg
mov
sub
and
retf
scas
repz
std
inc
ja
or
mov
hlt
(bad)
or
fwait
aaa
xchg
int
xor
call
xchg
mov
mov
fs
jne
mov
ficom
and
aaa
inc
ja
pop
pop
repz
sbb
out
xchg
jmp
shr
xor
int3
or
lahf
push
fsubp
movs
rol
or
sbb
cmp
jnp
or
ficom
out
pop
dec
sub
pop
(bad)
retf
(bad)
and
call
jmp
ins
push
ret
mov
retf
mov
sbb
mov
adc
push
(bad)
pop
cmp
jmp
sbb
aaa
jbe
adc
test
sub
fisttp
or
in
fisub
jmp
cwde
shl
retf
mov
sti
imul
or
push
dec
and
pop
add
popf
dec
dec
sbb
shr
aam
test
imul
frstor
mov
loop
hlt
sub
mov
mov
sbb
es
mov
xor
and
sbb
out
inc
push
add
xchg
mov
rcl
hlt
(bad)
xor
fwait
adc
cmp
cmp
sbb
push
mov
(bad)
xchg
pusha
add
mov
sbb
jbe
mov
jl
lods
or
inc
and
test
out
sub
rcr
adc
dec
mov
ins
in
ret
sbb
add
push
bound
imul
les
mov
lock
push
pop
into
dec
sti
sub
push
mov
cmps
sub
pusha
and
jmp
scas
cwde
sub
stos
ins
enter
mov
lods
scas
jbe
fsub
push
lock
dec
cmp
in
call
jmp
mov
retf
push
cli
fwait
inc
xchg
and
sbb
and
out
and
ds
xor
(bad)
pop
test
add
test
xor
jl
mov
jnp
stos
out
nop
xchg
lds
jg
mov
cwde
call
in
push
mov
xchg
pop
(bad)
mov
cmp
inc
mov
scas
(bad)
adc
cmc
aas
(bad)
fst
pop
mov
mov
ror
je
scas
jmp
sub
xlat
imul
lea
xchg
xchg
std
inc
mov
mov
fisttp
cld
mov
push
xlat
test
mov
in
sub
scas
sbb
bound
pop
popf
mov
test
pop
stos
fs
fs
jg
push
shr
enter
ror
push
jbe
rcr
prefetcht0
call
leave
int3
xor
popw
call
xor
je
aas
(bad)
jle
imul
shl
inc
addr16
xchg
pop
jg
je
sub
sub
sahf
xchg
in
mov
and
sub
fxtract
les
hlt
add
mov
xor
neg
ror
shl
add
ret
arpl
inc
lahf
mov
sbb
xchg
pop
cli
mov
mov
jp
cmc
mov
mov
(bad)
scas
gs
or
mov
sbb
mov
sub
(bad)
jnp
es
dec
loopne
fsubr
in
retf
sub
push
enter
mov
add
sub
sar
jle
mov
xchg
mov
and
pop
sub
xor
mov
mov
push
sbb
xor
jb
mov
sti
(bad)
hlt
or
pop
dec
sar
add
out
jae
test
jl
fs
repnz
mov
and
pusha
call
(bad)
aas
or
sbb
das
(bad)
stc
jnp
dec
mov
out
dec
mov
sbb
hlt
inc
jmp
iret
push
lods
inc
jmp
and
or
scas
loopne
sub
pushf
dec
call
sbb
fs
jbe
ja
push
xchg
ja
retf
sub
push
mov
pop
movs
add
add
cmp
out
or
mov
and
outs
cdq
pop
xor
xchg
ret
push
call
cmp
add
je
ss
(bad)
loopne
mov
and
into
(bad)
mov
not
aaa
sti
in
cs
pop
lods
gs
sahf
mov
xor
cmp
add
xchg
movs
ds
jecxz
push
fistp
sahf
neg
(bad)
add
dec
call
dec
inc
cli
xchg
call
jg
fadd
es
adc
adc
push
pop
js
in
or
call
jmp
push
mov
mov
cmps
jnp
repz
gs
mov
cwde
jnp
stos
fistp
dec
sahf
lea
js
rol
stos
sub
pop
in
call
pop
mov
jno
in
push
mov
and
add
sar
pop
fwait
dec
mov
push
or
enter
bound
ret
xchg
outs
xor
inc
dec
adc
cmc
aas
cmp
push
rol
retf
repz
mov
ror
sub
jge
xor
jg
stc
cld
xchg
loope
xchg
mov
pusha
sub
leave
sub
adc
comiss
lods
pop
cdq
or
into
mov
mov
jge
stos
out
in
imul
test
adc
xchg
movs
loope
push
pop
hlt
mov
pop
or
mov
out
cmp
aaa
cmp
sbb
scas
xor
out
inc
mov
aas
std
repnz
mov
jo
push
loope
into
mov
aad
xchg
or
stos
cmp
scas
mov
push
dec
and
push
adc
adc
out
or
cwde
mov
les
sub
fwait
cmps
cmp
rcr
inc
mov
xchg
(bad)
enter
adc
pop
jbe
stc
mov
sbb
sbb
loop
into
sub
ret
adc
sar
movs
cmp
adc
mov
aad
jg
stos
and
ret
fsubr
cmp
jmp
and
jle
xlat
push
shl
(bad)
shr
loopne
outs
and
or
ins
and
loop
jmp
scas
movs
push
dec
xchg
rol
and
mov
enter
and
push
sub
mov
or
push
mov
daa
adc
aaa
mov
push
aas
scas
and
inc
stc
imul
push
loopne
in
sub
xchg
jnp
jle
call
mov
inc
jno
sub
ins
and
mov
mov
push
lds
push
cmps
mov
cli
mov
int3
ds
sub
ins
jge
adc
shl
add
cmp
cmps
mov
dec
out
pop
imul
sbb
aam
sub
sbb
mov
les
xchg
jle
retf
pusha
xor
dec
lds
rcr
xor
lds
sbb
pushf
adc
push
les
int
pushf
adc
pop
hlt
and
mov
fild
mov
and
idiv
into
xchg
les
pop
sbb
adc
mov
stos
repnz
inc
fsubr
inc
pop
lds
sti
xchg
mov
enter
jg
dec
(bad)
sub
loope
sbb
sbb
add
sub
lea
mov
iret
mov
stos
pop
jae
lock
push
in
pop
and
sbb
or
mov
lock
lea
sub
cmps
pop
test
adc
sbb
lods
fcmovnu
hlt
xchg
fs
sahf
adc
jl
retf
jae
int3
push
inc
mov
add
movs
fs
lea
push
and
retf
rcl
jle
mov
sbb
sbb
and
mov
jbe
mov
addr16
jbe
adc
push
ror
jge
jecxz
pop
test
xchg
outs
lock
or
(bad)
fdivr
or
loope
in
aam
jae
sub
and
rol
in
lea
adc
in
imul
mov
test
ficomp
sbb
sbb
imul
dec
sub
dec
lods
push
inc
pop
imul
sub
push
or
mov
repz
fnsave
mov
push
jl
jns
call
xchg
xor
fidivr
add
(bad)
mov
inc
push
dec
fild
mov
push
movd
dec
not
data16
int3
std
xor
sti
test
dec
mov
fistp
imul
sti
test
xchg
ja
movs
repnz
add
sahf
sub
hlt
xchg
in
dec
in
(bad)
xchg
lock
sub
popa
pop
mov
inc
cmp
jae
neg
icebp
inc
fstp
imul
and
dec
sbb
jmp
adc
(bad)
mov
sub
int
enter
add
sub
sbb
push
sbb
fisubr
xor
mul
or
retf
in
ret
mov
mov
jge
hlt
push
xor
or
clc
xor
gs
mov
and
(bad)
cld
mov
clc
mov
pop
fst
in
(bad)
ins
lds
xlat
sbb
add
movs
push
pop
mov
hlt
stc
iret
loop
sbb
pop
cli
loope
(bad)
je
lds
scas
(bad)
adc
data16
jmp
mov
es
lahf
adc
inc
mov
and
test
lahf
leave
int3
in
rol
(bad)
rcl
push
jbe
xor
mov
dec
scas
retf
adc
pop
xor
pop
vpcmpeqb
scas
cmp
aam
inc
mov
imul
pop
mov
cmp
and
or
sbb
out
pop
xor
fidivr
rcl
and
cmp
xchg
imul
jecxz
adc
scas
fst
mov
clc
push
fldpi
mov
sbb
push
bound
retf
add
out
rol
imul
adc
cmc
and
enter
xchg
call
mov
jno
mov
ds
loopne
ds
jmp
lahf
jg
and
jns
jmp
jnp
lea
frstor
adc
dec
into
outs
out
lahf
mov
dec
cdq
ror
movs
js
cmps
repz
fs
sbb
cdq
or
pop
inc
xchg
(bad)
cld
out
jmp
add
ficomp
add
pop
je
outs
mov
inc
sti
jne
jne
sub
out
adc
fbstp
fld
imul
mov
lahf
inc
mov
leave
mov
mov
pop
(bad)
dec
mov
adc
aaa
pop
pop
dec
lea
dec
ins
(bad)
in
movs
mov
add
lods
hlt
xchg
inc
and
mov
sub
and
stos
dec
push
aad
push
in
dec
shr
push
adc
loopne
or
out
test
push
ror
or
sbb
stos
sti
cdq
xor
inc
icebp
enter
dec
sub
in
sub
out
les
mov
or
jmp
push
push
sbb
inc
loopne
inc
or
mov
pop
pop
into
cmp
arpl
ins
or
cwde
add
push
leave
loope
movs
lods
out
xchg
cld
not
imul
push
fnstsw
call
sub
stos
push
push
movs
xchg
je
mov
addr16
xchg
push
rcl
mov
das
inc
pop
inc
iret
out
mov
dec
ins
sub
jge
cmps
loop
push
xor
jo
jnp
inc
pop
jp
rcr
xchg
adc
fs
jmp
mov
dec
adc
out
ret
sub
fwait
xchg
loop
ret
mov
xchg
js
(bad)
lods
add
or
mov
or
iret
sub
daa
mov
shr
(bad)
sub
mov
or
push
fisubr
sub
and
and
cmps
out
and
fmulp
dec
add
inc
fistp
ss
(bad)
mov
pop
dec
lods
jae
aam
xor
loop
pushf
mov
leave
cmp
cdq
(bad)
xchg
fdiv
xchg
test
dec
xchg
sub
jp
mov
out
out
cwde
inc
leave
sub
mov
clc
xchg
xor
pop
rcl
fwait
test
jmp
nop
add
pop
push
mov
fnstenv
dec
cmp
ins
or
mov
pusha
ror
xchg
into
sahf
cmc
jle
cli
movs
ss
out
mov
cli
call
fdivr
jae
mov
mov
stc
pop
add
add
movs
or
test
pop
pop
adc
hlt
repnz
jbe
dec
push
imul
stc
xchg
inc
pop
add
in
jnp
and
add
pop
std
inc
in
jmp
mov
mov
mov
popf
xchg
jns
pop
lods
mov
jbe
xor
mov
jne
inc
mov
jp
and
xor
and
stc
(bad)
jno
xor
or
inc
ins
mov
fsub
dec
std
aad
fcomip
cmp
das
imul
mov
and
retf
mov
hlt
jmp
lds
inc
push
clc
(bad)
leave
and
jnp
jmp
out
or
cli
icebp
and
adc
popf
nop
mov
outs
add
inc
push
jbe
cmps
xchg
push
invd
movs
call
aaa
pop
pop
ror
cmc
add
bound
cmp
sbb
or
out
retf
pusha
rcr
jo
mov
cmp
mov
out
adc
out
xchg
mov
xor
jg
cli
mov
and
dec
or
cmp
sub
or
inc
dec
push
mov
xor
in
inc
jnp
jns
sbb
mov
arpl
push
pop
xor
cmp
clc
mov
sbb
stc
int3
ss
sub
mov
iret
aam
test
mov
sub
inc
pop
add
or
push
sbb
cmp
pop
inc
push
(bad)
xor
inc
add
mov
jecxz
ins
adc
sub
clc
nop
int3
fld
or
jno
pushf
jecxz
jp
in
js
mov
push
jp
iret
xor
aas
and
xor
mov
adc
inc
and
push
or
repnz
test
std
loope
mov
sbb
sbb
popf
movs
pop
pop
and
mov
jg
or
xor
aas
and
scas
inc
loop
das
xchg
add
push
nop
scas
xor
dec
imul
out
sub
ss
jae
xor
sub
jno
or
std
jae
push
pop
cli
sti
xchg
sbb
dec
adc
fcmovnu
loopne
push
cld
pusha
ins
rcl
jbe
fcomp
sub
sbb
stos
sti
test
imul
iret
push
pop
push
lock
and
mov
mov
ins
sbb
and
jns
xchg
popa
adc
(bad)
fadd
inc
xchg
adc
adc
mov
bound
movs
int
pop
mov
inc
jle
sbb
hlt
fnsave
cmp
test
mov
prefetch
(bad)
(bad)
jl
(bad)
addr16
test
rcl
push
hlt
fwait
push
adc
popa
jl
push
out
nop
mov
stos
jno
cmp
xchg
mov
push
mov
xor
icebp
data16
fisub
outs
test
sar
mov
sbb
inc
(bad)
push
dec
push
popf
sub
cmps
ins
xchg
movs
outs
js
xor
mov
pop
cmp
repz
or
add
lds
je
pop
rcr
xchg
popa
mov
pop
lea
add
dec
cmc
xor
add
lea
or
scas
repz
sub
cli
mov
out
mov
inc
test
jle
jns
call
mov
scas
jmp
das
cmp
jmp
push
rcr
mov
mov
aas
or
xchg
and
or
dec
sub
xor
or
(bad)
stos
mov
push
push
mov
cmp
fbstp
aaa
jg
sbb
mov
sbb
and
pop
mov
outs
push
bswap
shl
imul
fist
fucom
and
loope
mov
jg
sbb
hlt
pop
push
cdq
xchg
int
inc
lock
arpl
es
inc
dec
movs
push
cmc
add
cli
retf
rcl
pop
stos
aaa
push
push
adc
in
mov
push
test
adc
push
loop
mov
sub
inc
or
dec
test
mov
add
cmp
jb
popf
imul
dec
jb
xor
loop
mov
sub
adc
iret
arpl
mov
leave
mov
sub
cs
fnstsw
sub
js
out
ds
add
sub
mov
ret
ss
jg
push
jl
js
cmp
(bad)
adc
jmp
xlat
xor
lods
mov
aas
add
adc
ret
leave
push
and
test
add
add
fsubr
pop
xor
fcomp
aad
in
test
cmc
adc
fild
jno
addr16
push
or
arpl
add
adc
jns
push
lahf
pop
adc
cwde
cmp
cld
pop
dec
neg
xor
add
cmp
adc
cmp
sub
jmp
cmp
syscall
sbb
dec
sub
aad
sahf
jae
jmp
ins
mov
xchg
stos
inc
fstp
xchg
mov
cmp
imul
jnp
xor
cmp
xor
in
inc
pop
aaa
push
gs
xor
icebp
or
mov
cdq
pop
adc
(bad)
mov
xchg
jno
xlat
dec
shl
dec
(bad)
and
in
add
or
mov
shl
jecxz
hlt
(bad)
out
mov
inc
scas
cdq
add
(bad)
cmps
lahf
dec
outs
jnp
js
mov
and
mov
ret
jo
loop
xchg
repnz
test
jne
lds
pop
sbb
jecxz
jne
add
shl
sbb
test
or
out
pop
mov
and
cdq
rol
and
pushf
inc
ins
pop
mul
movs
pop
imul
mov
sbb
leave
aaa
dec
inc
adc
ja
lahf
pushf
fbld
push
cmp
jge
scas
dec
jns
jno
sub
dec
imul
es
mov
loopne
jge
data16
outs
jge
jg
nop
dec
xor
mov
add
inc
sbb
nop
push
retf
ja
lds
test
lods
jnp
iret
imul
(bad)
int
dec
int
jno
and
adc
xor
add
push
inc
adc
mov
cmp
in
bound
pop
mov
jmp
mov
(bad)
jbe
lods
cwde
sub
inc
xchg
dec
and
and
mov
fs
push
sbb
sub
movs
in
sbb
popf
dec
xchg
or
ss
xor
bound
dec
fst
jp
push
cwde
mov
sub
in
retf
and
jmp
in
scas
cwde
ss
(bad)
pop
imul
shl
repnz
ins
push
bound
leave
jae
sub
scas
jge
movs
fimul
jmp
push
xchg
pop
xchg
fisttp
sbb
xchg
mov
push
jne
add
enter
sub
ficomp
or
add
mov
int
int
add
jge
mov
fldenv
fwait
jl
xchg
xchg
add
ins
add
ins
ret
xor
sahf
ss
xchg
div
mov
stc
mov
mov
push
sbb
adc
dec
das
push
dec
(bad)
aad
sti
pop
outs
mov
pushf
jl
ficomp
mov
or
inc
cmp
mov
or
(bad)
dec
sub
push
stos
push
push
sub
es
retf
outs
retf
rcl
mov
jo
mov
(bad)
out
sbb
cmp
push
and
mov
stos
int3
xchg
cld
dec
sbb
nop
push
jno
push
aad
shl
jp
mov
loope
xchg
test
or
js
mov
ins
jecxz
and
add
jmp
jmp
push
mov
cmp
not
iret
out
das
fld
inc
add
jecxz
jge
adc
xor
push
shl
jne
sub
leave
cmp
sub
dec
lds
call
rcl
mov
shl
test
jp
sbb
fwait
jl
stc
xchg
cmp
cli
pop
shl
repz
mov
imul
shr
test
inc
jge
imul
pop
hlt
fsubr
fsub
or
hlt
inc
jb
test
clc
mov
add
cmp
repnz
mov
js
xchg
pop
or
fisub
jb
and
mov
repnz
das
xor
daa
cmp
rol
xchg
ds
(bad)
pop
out
retf
inc
fs
repz
sbb
mov
outs
cmp
test
cmp
iret
cmp
mov
dec
out
sahf
mov
fisttp
push
repz
mov
sbb
test
sbb
fstp
mov
mov
pop
iret
out
adc
fistp
jl
inc
ret
jge
lods
enter
mov
mov
mov
dec
xchg
fstp
or
(bad)
icebp
add
add
xchg
push
fidivr
ins
sbb
cmp
popa
es
xchg
sub
mov
(bad)
cmps
ror
add
inc
xor
adc
mov
rcl
int
mov
aaa
ficomp
retf
aaa
pop
add
sbb
mov
sub
aad
mov
jmp
mov
or
push
cmp
or
dec
ins
xchg
add
inc
pop
test
xchg
xchg
dec
sub
and
pop
and
adc
shl
adc
imul
cmps
in
movs
into
cmp
sahf
inc
push
fdivr
push
scas
lods
lods
push
xor
fnstsw
dec
mov
fwait
adc
icebp
jns
stos
je
cmc
popa
rcl
and
fs
sub
fmulp
inc
dec
mov
cmp
jne
add
adc
push
mov
dec
aad
sbb
outs
fist
mov
push
cmp
in
mov
pop
dec
dec
xor
scas
call
push
pop
cmp
and
sbb
test
sub
(bad)
jns
xchg
mov
aad
lahf
and
xor
mov
mov
inc
xor
pop
and
sar
int
(bad)
mov
fs
inc
cmp
repz
xor
and
jmp
dec
fs
jp
sahf
inc
test
(bad)
lock
or
ror
jmp
in
sbb
ror
lea
or
loop
adc
mov
test
pop
movs
push
ds
clc
jge
leave
mov
es
fwait
push
nop
pop
xchg
pop
sbb
inc
sbb
inc
cmp
dec
cmc
int
fcomi
inc
cmc
shl
xlat
dec
cs
ret
fst
(bad)
dec
pop
add
out
pop
stos
sub
jne
ffreep
clc
xchg
ficom
daa
arpl
mov
push
pop
daa
lahf
mov
jno
mov
pop
fdiv
xor
cmc
sub
add
cld
mov
call
mov
jl
out
dec
inc
sub
mov
push
mov
retf
(bad)
or
pop
dec
add
push
push
mov
xchg
call
test
dec
jnp
sub
fcomi
nop
mov
pop
ret
shl
loope
add
imul
jno
(bad)
push
add
sub
fiadd
cmc
fmul
xchg
push
adc
ins
adc
mov
mov
sbb
add
(bad)
lods
sub
test
or
cmp
cmp
and
dec
jge
xchg
test
inc
sub
mov
sub
arpl
clc
xchg
inc
dec
add
jns
and
pop
cmp
sahf
jl
call
scas
adc
xor
jb
cmp
sub
inc
xor
jmp
movs
stos
fst
push
imul
out
lods
xor
jno
jb
cmp
scas
and
fld
and
mov
adc
je
mov
cmc
inc
aaa
cmps
sar
xchg
(bad)
cwde
xor
cmp
push
sub
xchg
sahf
sbb
xor
iret
xor
call
pop
clc
jne
retf
(bad)
je
fiadd
leave
push
lds
js
jp
adc
std
dec
dec
or
shl
sub
icebp
leave
call
xchg
int3
int
ficomp
out
std
push
sbb
adc
xchg
mov
push
pusha
xor
cmps
or
add
xor
int
push
dec
cld
mov
or
mov
dec
ss
dec
sbb
mov
or
vphaddubw
inc
jmp
lods
in
jnp
xchg
retf
jae
cmp
dec
out
and
push
aad
push
pop
sbb
xchg
jp
fisub
xor
sahf
inc
arpl
jmp
repnz
push
outs
mov
cli
sbb
dec
stc
fidiv
jbe
das
pop
sbb
(bad)
push
adc
jmp
pushf
pop
pop
mov
jne
mov
add
mov
push
cli
fild
add
pop
sbb
lahf
cli
or
jmp
cmps
push
repnz
push
mov
ror
or
jne
xchg
cli
fucom
adc
jno
jb
not
std
aas
adc
call
stos
cmp
mov
enter
dec
neg
adc
rcr
adc
dec
fnsave
lods
les
adc
dec
push
shr
jmp
dec
mov
jnp
pop
push
mov
jge
push
xchg
repz
jg
fld
jno
stc
sahf
jecxz
nop
xchg
(bad)
sub
add
aas
xchg
cmp
mov
imul
clc
jae
pushf
mov
add
cvtps2pi
fist
xchg
jbe
adc
add
push
sbb
xchg
leave
cs
mov
rol
stos
movs
or
dec
dec
mov
adc
test
xor
sub
fnsave
or
mov
jg
cdq
leave
daa
dec
and
and
xchg
jp
xchg
aas
stos
mov
cs
fdiv
fdivp
sub
dec
fld
dec
lahf
mov
or
push
out
test
cmp
fwait
and
fwait
(bad)
xor
adc
ror
mov
mov
sbb
fdiv
repz
add
cmp
pop
stos
mov
or
neg
and
pop
std
bound
arpl
mov
dec
pop
popa
mov
(bad)
pop
mov
xor
in
mov
add
push
addr16
enter
sbb
adc
inc
and
ins
xchg
dec
add
test
(bad)
fwait
lea
stos
ret
inc
ins
adc
stos
cmp
or
pop
(bad)
gs
xchg
mov
ret
(bad)
jo
ret
mov
mov
outs
hlt
fmul
sbb
inc
inc
jb
cmp
xchg
inc
inc
pushf
rol
adc
ror
pop
push
pop
mov
sbb
cmp
mov
push
repnz
cs
data16
inc
sub
push
mov
xchg
fadd
(bad)
(bad)
cmp
mov
dec
dec
loopne
mov
dec
cmc
int3
xor
rol
call
(bad)
out
test
mov
repnz
leave
movs
adc
test
inc
mov
push
test
fbstp
push
clc
fstp
push
jne
xchg
push
mov
daa
sbb
dec
cmps
mov
xchg
jb
jg
dec
dec
int
add
pop
xor
fs
lock
mov
xchg
cwde
aad
or
jae
cmp
dec
lock
fisttp
xor
imul
(bad)
xor
nop
jnp
jle
xchg
int3
dec
pop
jp
das
push
pop
jle
enter
xchg
into
push
call
mov
xchg
sbb
jp
mov
clc
cmp
cli
add
test
xor
aas
or
mov
pusha
jg
icebp
mov
xchg
test
daa
mov
imul
and
cdq
ret
lea
dec
hlt
cli
push
mov
inc
out
daa
daa
mov
test
mov
xor
leave
into
popf
jmp
aad
(bad)
iret
jns
sbb
inc
push
dec
stos
pop
cli
scas
(bad)
(bad)
movs
and
xor
add
push
test
sub
or
add
adc
(bad)
aas
jle
das
sti
mov
xchg
sbb
push
cmp
mov
into
mov
jae
xchg
pop
pop
rcr
sbb
fucomip
push
xchg
mov
push
mov
addr16
in
bnd
test
cmp
jno
fstp
or
xor
lahf
adc
jmp
cmps
xor
adc
pop
adc
sbb
inc
sbb
jns
rol
imul
(bad)
and
imul
cmp
imul
lods
sbb
sub
icebp
inc
popa
in
dec
nop
and
sub
(bad)
mov
xchg
repnz
push
mov
fcom
sub
ss
jp
mov
mov
rcr
push
jmp
cmc
shl
(bad)
std
das
cmps
lds
cmp
mov
jmp
inc
inc
jne
mov
inc
scas
push
into
inc
dec
xor
push
inc
ss
pop
ja
scas
lods
sbb
pop
push
mov
xor
pop
loopne
scas
enter
mov
int3
cwde
and
fwait
cmp
push
lods
fst
(bad)
ret
cmp
rcr
pusha
fidivr
ins
sub
sbb
fsub
and
push
movs
inc
push
push
add
sbb
pop
aad
jg
push
repnz
and
lea
ja
fstp
pop
in
outs
test
adc
push
mov
cdq
inc
ds
dec
xchg
lahf
mov
cmps
jge
pop
int
scas
mov
push
nop
fisttp
dec
test
push
push
pop
imul
pop
ret
icebp
inc
push
mov
jle
and
cmp
fist
rcl
xlat
shr
push
mov
inc
cmps
jne
add
and
mov
mov
ret
shl
xchg
pop
leave
cmp
mov
mov
test
mov
mov
jnp
aad
cdq
mov
lds
mov
js
test
mov
dec
das
test
sbb
lahf
fimul
and
dec
stc
inc
into
out
in
(bad)
xor
xchg
mov
test
xchg
mov
push
and
mov
cmps
xor
call
retf
ret
or
mov
les
inc
retf
jns
out
mov
and
fwait
add
sbb
xchg
sub
pushf
test
inc
adc
push
ror
or
or
inc
sbb
out
mov
sub
iret
cmc
fbstp
nop
aad
cmc
movs
dec
mov
cmps
(bad)
mov
aas
(bad)
jecxz
and
push
add
jns
std
and
sbb
mov
ret
and
test
iret
fisub
push
pop
call
xchg
in
adc
jae
push
sahf
inc
cld
mov
xchg
cmps
push
fild
jmp
mov
jp
pop
mov
aaa
(bad)
sbb
sar
ret
stos
jnp
sub
add
mov
gs
inc
sbb
mov
mov
xchg
dec
push
mov
aas
ins
jno
aaa
in
sub
cmp
adc
jae
add
repz
xchg
jne
cmps
and
sub
mov
fisub
push
in
or
sbb
push
pop
mul
mov
or
scas
retf
lock
lahf
xor
mov
mov
aam
jno
mov
ins
mov
adc
ja
xchg
jb
inc
ret
ins
pop
pusha
aam
mov
cdq
popa
ficomp
mov
hlt
ins
jmp
mov
jecxz
inc
sub
mov
aaa
rcl
xor
retf
ds
and
sbb
nop
daa
cmp
sbb
mov
jmp
lds
sbb
js
cmp
fst
jg
lods
loop
xchg
(bad)
bound
sub
inc
pop
setge
pop
sbb
mov
ror
cmp
cmp
cdq
jb
xor
push
push
jl
ins
fld
fwait
mov
and
xor
push
xchg
jno
mov
shr
ins
xor
or
adc
sub
dec
icebp
xchg
imul
fstp
int
sar
cmc
loope
call
jle
fmul
in
scas
xchg
sub
shl
adc
aam
mov
cmp
sbb
fimul
sub
jnp
push
ret
pushf
call
outs
stos
shl
cmps
cmp
cs
and
push
out
jae
(bad)
loop
pop
and
xor
loop
and
adc
or
pop
fiadd
sub
or
ret
out
push
pop
mov
imul
cmps
mov
iret
movs
mov
and
(bad)
dec
sbb
sbb
jnp
lods
mov
sub
xrelease
scas
xor
xchg
out
test
jbe
mov
ret
or
mov
inc
rol
in
into
push
fwait
test
shl
xor
retf
je
xor
daa
test
loop
clc
lods
jl
lock
hlt
push
sbb
cmp
cmp
shl
lea
ins
dec
inc
adc
jae
push
mov
loop
xor
xor
ja
imul
sub
mov
scas
adc
add
vpmullw
(bad)
int3
out
in
xlat
and
jae
jecxz
adc
sbb
sub
aaa
das
sahf
push
lea
mov
jno
fimul
push
add
int3
iret
int3
test
addr16
or
pop
stos
push
sub
fsubr
in
retf
sbb
retf
sub
dec
arpl
cmps
nop
je
test
stos
jbe
mov
adc
push
retf
test
fcomp
cmc
shl
cmp
mov
dec
sub
jp
fdivr
push
jl
xchg
pop
or
jecxz
outs
push
sbb
das
std
and
add
mov
sbb
ja
mov
retf
dec
push
stc
fisub
mov
or
pop
enter
jne
icebp
mov
cli
or
mov
dec
sub
ins
movs
mov
jae
mov
jne
cld
mov
dec
adc
mov
gs
add
xor
popf
mov
fisttp
aas
cdq
cmp
out
add
int
daa
bound
out
loopne
loope
stos
xor
dec
imul
loop
sbb
frstor
cmp
test
int
aad
push
push
imul
js
cmps
fwait
add
ss
mov
js
fst
imul
mov
pop
xchg
push
bound
lods
std
aam
dec
dec
icebp
addr16
or
and
push
dec
push
dec
mov
xchg
aas
mov
lds
push
jmp
sbb
adc
les
stos
and
sub
ins
arpl
fmul
repz
push
xor
jns
rcl
test
mov
aas
push
retf
jmp
clc
pop
mov
sub
(bad)
out
call
js
imul
push
rol
cmc
jge
jmp
in
or
push
jp
daa
out
test
aaa
xor
adc
sub
aaa
fsqrt
push
js
fisttp
sub
inc
mov
push
adc
pop
fiadd
jmp
cmp
mov
fisttp
sbb
es
inc
fs
xchg
hlt
mov
mov
jns
and
xchg
loop
stos
les
loopne
std
inc
in
pop
inc
sbb
pushf
mov
inc
icebp
pop
addr16
rol
xor
in
cmp
fwait
dec
loope
shr
or
or
punpckhbw
pushf
xchg
(bad)
cld
mov
ret
dec
repnz
call
in
push
jae
int
cmp
mov
jbe
lahf
rcl
or
adc
push
xchg
mov
ret
jp
and
xchg
jmp
and
adc
mov
sub
push
ins
std
lods
push
lods
movs
mov
repz
inc
dec
ror
adc
or
cmp
cmp
aad
js
mov
adc
xlat
pop
ss
jle
fistp
rcl
adc
bound
cmps
arpl
pop
xchg
adc
cld
mov
xchg
jmp
adc
push
cmp
mov
inc
mov
pop
add
or
movs
push
ins
pop
hlt
repnz
dec
pusha
add
in
inc
add
xchg
fxch
mov
adc
add
jo
loop
cdq
mov
sub
dec
and
(bad)
push
ficomp
jle
adc
xor
cwde
xchg
pushf
outs
pushf
and
jae
out
adc
push
dec
popf
xchg
aam
in
inc
add
cdq
xlat
stc
mov
movs
pop
js
push
icebp
add
call
aad
scas
loop
xchg
imul
repnz
jnp
imul
mov
mov
fimul
add
mov
jmp
int3
(bad)
pop
mov
mov
inc
add
jnp
jne
jno
fcomp
push
jno
sahf
jp
in
lock
ds
or
fs
mov
sub
xchg
idiv
out
xchg
cdq
(bad)
xchg
fucom
sub
mov
das
pop
(bad)
repnz
mov
xchg
repnz
xchg
imul
outs
sub
jmp
imul
or
inc
fild
cmp
sub
jg
lock
sahf
sub
jb
mov
clc
test
jge
lea
add
add
loop
jmp
xor
cmc
xchg
jno
xor
xor
mov
and
mov
repz
xor
sbb
xor
xor
(bad)
push
mov
jge
sbb
int
popf
mov
call
les
mov
out
lahf
in
jle
xor
cmp
les
jne
cmc
rol
and
cwde
dec
add
rcr
cld
addr16
xor
loop
or
retf
lahf
push
mov
push
xor
push
mov
jge
jge
jle
bound
mov
ret
pusha
xor
jo
fcomp
jb
push
aad
xchg
or
inc
inc
or
mov
pop
jp
cmp
adc
cmp
mov
jnp
shr
hlt
push
cmp
loope
and
adc
pop
mov
test
and
and
mov
cmp
cmps
shl
inc
repz
aam
adc
enter
pop
lahf
ins
xchg
mov
or
lea
and
mov
rol
add
hlt
pop
xor
rol
iret
out
sub
jmp
imul
push
or
daa
cmp
mov
ficom
imul
sti
rol
stc
xchg
inc
cmp
add
enter
cmps
sbb
stos
adc
int3
pusha
cmp
ss
or
ins
xor
mov
(bad)
sub
push
or
out
jle
fisubr
push
aas
ror
mov
repz
daa
xchg
or
or
sbb
std
shl
dec
adc
sub
jge
imul
dec
leave
dec
lods
xor
and
or
add
pop
stc
fdivr
fild
cwde
pop
imul
dec
inc
out
mov
push
popa
bound
cmp
sbb
retf
je
data16
push
add
push
jno
aaa
pop
push
sar
push
xor
clc
movs
out
mov
push
add
imul
(bad)
ror
loope
sar
lds
sbb
scas
pop
test
push
and
push
and
ss
js
in
add
xchg
jp
add
out
out
popa
mov
cdq
stos
addr16
repz
adc
scas
repnz
lahf
(bad)
mov
pop
cmps
gs
cmp
je
out
enter
jle
dec
imul
sub
cli
bound
inc
sub
inc
ret
mov
mov
loope
push
add
push
shr
inc
push
cmc
(bad)
(bad)
leave
xchg
add
add
push
xchg
sub
push
test
xchg
jecxz
or
pop
jecxz
mov
jmp
sti
scas
addr16
mov
ss
adc
sub
and
cwde
in
sti
ja
sbb
cmp
data16
retf
or
mov
cmp
cmps
(bad)
sbb
push
pop
(bad)
cmp
les
dec
mov
jnp
inc
fwait
fs
add
int
in
fld
in
xor
in
(bad)
mov
outs
push
and
fcmovb
pop
pop
mov
mov
js
dec
lds
or
mov
adc
jp
mov
movs
inc
sbb
mov
cmp
in
inc
dec
add
add
clc
outs
xor
je
xchg
sub
ficom
xor
cmps
jle
(bad)
pop
cdq
dec
iret
hlt
xchg
(bad)
nop
inc
es
mov
mov
(bad)
pop
push
in
je
inc
fistp
push
rcr
jg
push
daa
mov
rol
out
xchg
add
jae
add
ret
imul
adc
adc
sbb
dec
dec
sti
adc
stos
sbb
int
mov
fldln2
jg
shl
xor
mov
or
mov
mov
in
es
sbb
(bad)
adc
jb
pop
jmp
ds
mov
setg
in
test
in
call
fnstenv
daa
fwait
sbb
stc
jmp
mov
pop
or
test
pop
xor
lds
add
test
and
cmp
jp
stos
mov
add
add
xor
ds
jg
fs
test
scas
push
or
jns
sbb
jns
fisubr
mov
adc
mov
aas
imul
add
imul
(bad)
out
inc
test
sbb
ret
xchg
aam
or
mov
nop
repnz
mov
jp
out
cmp
mov
out
jl
cmp
loop
xor
adc
scas
cmp
mov
into
pop
push
fwait
jmp
mov
sub
push
icebp
ror
sbb
xor
dec
pop
add
and
mov
les
jns
or
pop
std
popf
loopne
adc
test
int
dec
adc
xor
fcomp
cmps
mov
sub
push
mov
and
gs
addr16
aad
fstp
pop
movs
outs
(bad)
pop
xchg
ins
movs
adc
cmc
mov
enter
test
gs
stc
sub
mov
int
mov
pusha
jne
xchg
sahf
pop
ret
fwait
test
or
push
ror
or
cli
mov
imul
mov
dec
add
push
jns
sbb
jnp
push
test
pop
aam
in
inc
adc
dec
cmps
mov
xor
jno
jl
pop
mov
ins
int
pusha
ss
jae
adc
adc
idiv
mov
pop
dec
mov
or
in
sub
mov
jmp
lods
scas
jg
ss
or
and
addr16
push
pop
nop
mov
movaps
jp
js
stos
stos
(bad)
sar
in
std
fsub
mov
lahf
sbb
sbb
mov
not
pop
leave
leave
fnsave
aad
inc
mov
(bad)
adc
popa
imul
mov
jecxz
call
mov
push
out
lods
add
cmp
div
pop
dec
test
int
loopne
lods
mov
xor
add
(bad)
popf
inc
and
adc
push
jecxz
lods
pop
test
ins
cmp
lds
push
xchg
mov
fwait
inc
cs
das
fistp
jle
inc
lahf
adc
fdiv
jbe
mov
or
pop
mov
mov
mov
pop
push
jp
ins
xchg
fs
sahf
bound
enter
fiadd
outs
popf
jne
cmp
pushf
jae
es
mov
jae
adc
inc
xchg
cmp
mov
add
out
cmp
in
or
xor
cmps
sbb
sbb
(bad)
pop
frstor
pop
(bad)
loopne
cmp
xchg
add
in
sahf
push
sub
ror
nop
jp
enter
fwait
lock
push
jp
pop
jns
mov
call
push
mov
or
sbb
jnp
xchg
aaa
stos
jge
outs
or
jnp
bound
push
xchg
add
xor
dec
mov
mov
push
and
pop
bound
sub
aaa
idiv
inc
xchg
ins
ins
stc
cmp
les
cmp
sub
jns
sbb
jl
in
lea
fsub
dec
mov
xor
push
xchg
inc
ins
jmp
or
(bad)
(bad)
out
dec
aad
xlat
rol
adc
inc
add
scas
int3
mov
ins
xor
sti
adc
icebp
inc
popf
cmp
mov
fmul
mov
ins
sub
sub
das
or
retf
repnz
scas
ds
cdq
fs
xchg
add
push
sbb
mov
mul
push
push
adc
mov
ds
test
(bad)
icebp
pop
mov
sbb
leave
or
pop
loop
cmp
(bad)
aaa
lahf
and
outs
cs
cmp
retf
or
rol
cs
call
mov
push
icebp
or
mov
mov
bound
call
fisubr
es
mov
mov
add
or
pop
rol
push
clc
sub
in
adc
add
mov
dec
and
xchg
pop
fdivr
xchg
daa
jle
ret
inc
fdivr
inc
div
cmp
push
(bad)
push
pop
pop
iret
xchg
sub
loope
addr16
jle
fs
rcr
mov
and
dec
je
lods
mov
xor
(bad)
bound
clc
nop
push
and
and
icebp
pop
push
push
inc
jnp
xchg
clc
dec
jb
pmaxsw
loope
call
xchg
pop
mov
add
adc
mov
cmp
cmp
xor
out
dec
xchg
pushf
xchg
cli
cmps
pop
xor
xor
clc
inc
adc
(bad)
xor
rcr
sub
cmp
repz
dec
dec
lock
cmp
retf
cmp
stc
jle
fdiv
push
jge
ret
mov
aaa
pop
ss
dec
cld
or
inc
mov
jae
mov
imul
pop
jb
add
mov
pop
jle
out
ror
stos
jecxz
in
push
inc
popa
aam
nop
lock
cmp
outs
pop
aad
jg
icebp
mov
(bad)
jns
mov
mov
and
fidiv
js
int3
ret
ins
in
movnti
inc
xchg
mov
pop
inc
retf
(bad)
ja
mov
xor
jns
call
sub
xchg
adc
bound
lahf
add
aaa
xchg
jo
dec
sbb
and
xchg
push
pushf
adc
fs
das
push
dec
xchg
pushf
loope
imul
mov
lock
xchg
cmc
rcl
add
pop
and
neg
popf
arpl
xor
xchg
jb
mov
daa
sub
popa
mov
push
mov
push
inc
popf
jge
imul
add
jns
mov
add
push
inc
mov
scas
xchg
sbb
cld
std
xchg
mov
dec
jp
mov
mov
repnz
jmp
sub
push
inc
push
lods
inc
aam
sub
in
mov
xor
and
pop
and
movs
pop
inc
les
test
sub
add
add
inc
cmc
inc
and
and
pop
int3
dec
cwde
xlat
cmp
pop
xchg
or
mov
into
mov
ins
xor
out
movs
or
mov
mov
ss
aaa
jns
pop
pop
popf
fisttp
xor
push
mov
jecxz
and
fs
mov
daa
mov
jle
cmp
add
pop
sbb
dec
mov
mov
into
xchg
std
jno
inc
in
jne
adc
jl
inc
jae
rcl
daa
mov
xchg
lahf
test
repz
and
xor
movs
xor
sar
pop
mov
push
sbb
das
push
int3
or
push
mov
jp
out
adc
sbb
dec
xchg
inc
(bad)
jmp
sti
or
(bad)
das
cmp
cmp
jne
jle
pop
out
call
xor
mov
sbb
dec
sbb
mov
or
retf
push
pop
(bad)
repz
in
mov
daa
retf
data16
mov
push
fimul
ins
cdq
jns
mov
inc
push
pop
jmp
jmp
sbb
ja
sbb
cli
test
pop
inc
shr
mov
and
add
xor
xlat
mov
pop
or
pop
mov
mov
mov
stc
jle
xor
into
int
mov
jo
aad
stos
(bad)
cmps
call
mov
adc
cmp
lods
jmp
sub
fistp
(bad)
jg
xchg
push
inc
sti
aaa
jmp
cmps
push
sbb
mov
repz
scas
enter
sub
aam
xlat
in
inc
jne
mov
jge
test
fidiv
fwait
mov
pop
ds
cld
mov
mov
outs
sbb
popa
mov
push
adc
sbb
ins
xor
pop
data16
inc
sti
pop
cs
in
xor
sub
inc
fwait
into
cli
jp
sbb
nop
pop
inc
pop
jnp
xor
mov
sub
dec
stos
pop
test
lock
pop
pop
pop
mov
sub
gs
mov
jl
clc
mov
int
call
cmp
jo
ins
sbb
fs
sub
inc
push
pop
movs
jns
mov
ret
pop
es
(bad)
adc
aad
or
xchg
(bad)
add
adc
cli
retf
jo
pop
addr16
xchg
adc
inc
xchg
std
ror
outs
test
lock
ret
sbb
xor
(bad)
shl
sbb
jae
popf
push
inc
sbb
dec
out
push
and
or
(bad)
sbb
aad
movs
not
clc
popa
dec
or
popa
dec
mov
js
add
movs
dec
and
or
sar
adc
add
cmp
inc
mov
mov
(bad)
std
in
xchg
xchg
jg
xor
cmc
inc
inc
or
mov
movs
imul
cmp
je
mov
ins
sub
fadd
xlat
sub
in
(bad)
push
inc
mov
(bad)
jae
(bad)
(bad)
mov
sahf
gs
pop
ficomp
cmp
mov
in
test
sti
fwait
mov
imul
pusha
(bad)
jae
xor
sbb
stos
(bad)
xchg
daa
or
cs
sbb
jno
adc
push
mov
rol
movs
add
fs
scas
cmp
fidivr
ds
arpl
push
call
sar
jge
fdiv
mov
inc
push
sub
icebp
add
cmp
ror
arpl
ins
inc
cmc
pop
add
stc
outs
into
aas
loope
pop
mov
adc
mov
lods
sub
outs
dec
or
stos
ret
(bad)
imul
ffreep
and
inc
xchg
xor
jbe
ret
pop
xchg
leave
cmp
aas
pop
pop
push
adc
dec
test
out
aas
icebp
call
stc
or
adc
fisub
inc
dec
jnp
lods
stos
cli
inc
sbb
lock
jo
bound
sub
jo
jp
mov
loope
rcr
shr
mov
das
push
fnstsw
and
jl
xchg
pop
sar
xor
push
cmp
or
pop
repz
not
xchg
sbb
call
jbe
pop
mov
dec
jl
stos
xchg
mov
push
and
stos
test
xchg
push
les
shr
cwde
xor
sub
and
mov
push
pop
loop
int
es
pushf
int
enter
in
(bad)
mov
jp
das
sbb
lock
xchg
xchg
mov
pop
pop
inc
mov
fidiv
sub
cli
mov
ds
movs
adc
pop
fist
push
addr16
push
call
jne
sub
loop
std
(bad)
mov
xor
sbb
jo
mov
xchg
ds
sar
test
aad
xchg
jg
fs
cmp
xchg
pusha
add
test
pop
jmp
jnp
jbe
pop
gs
jp
fnstenv
cwde
xchg
stos
dec
mov
cmps
ins
out
cwde
jp
sbb
stos
(bad)
xor
stos
test
int3
daa
jbe
stos
and
fwait
popa
cmp
xchg
push
jge
pop
fs
or
pop
mov
aam
dec
adc
out
in
jp
mov
(bad)
mov
adc
xor
rol
or
xchg
jmp
or
inc
das
mov
jl
cmp
fwait
aad
rcr
enter
xchg
jp
hlt
inc
mov
mov
sbb
(bad)
sar
mov
add
xor
mov
cwde
push
dec
jae
mov
aam
ret
lods
std
jge
dec
fisub
push
push
dec
aaa
(bad)
popf
adc
jge
cmp
mov
repnz
jnp
jge
dec
jbe
inc
mov
mov
(bad)
aad
inc
hlt
fadd
test
adc
and
fcmovb
loope
cmp
xchg
jp
xlat
mov
retf
mov
ins
add
sub
xchg
mov
mov
jb
sub
js
in
stc
xor
add
jp
sbb
in
popf
fbld
push
ret
mov
(bad)
out
mov
mov
loopne
or
mov
xchg
push
inc
imul
(bad)
cmps
jle
add
ret
fst
pusha
loop
mov
loope
pop
pop
inc
pop
addr16
or
ficom
rol
and
cmp
xor
rcl
mov
dec
pop
inc
sbb
outs
mov
push
cdq
jle
mov
dec
mov
xor
adc
scas
jmp
jo
imul
pop
sub
test
loopne
and
add
je
(bad)
loop
inc
mov
cmp
jbe
jge
repz
mov
fwait
dec
push
mov
mov
vpmullw
ror
sbb
mov
fucomp
ret
js
and
adc
cmps
ret
inc
inc
fbstp
mov
mov
es
mov
or
push
jmp
stc
and
rcr
fisttp
fs
bound
jnp
xor
mov
and
jne
in
outs
out
ins
cmp
and
(bad)
das
movs
shl
cmc
call
retf
cmp
ja
fwait
mov
push
arpl
das
sbb
inc
popf
adc
dec
lods
mov
or
jb
scas
mov
pop
sbb
xor
push
push
jmp
xchg
imul
xchg
pop
(bad)
push
cmp
xchg
in
(bad)
aam
fdivr
sbb
je
out
cmp
aam
js
jmp
xchg
mov
test
jb
cmp
imul
dec
mov
mov
push
dec
mov
add
and
and
retf
cs
in
fstp
jbe
xor
packssdw
fwait
mov
push
aaa
push
xor
adc
das
fmul
js
movs
jmp
cmp
mov
pop
retf
push
mov
pop
lods
sbb
and
add
or
rol
sbb
sub
scas
mov
ds
into
add
in
ins
mov
(bad)
cmp
shr
fisub
pop
pop
fs
dec
or
dec
cli
leave
lods
mov
xchg
jg
and
jmp
pop
dec
sahf
fimul
sbb
inc
call
jns
xor
std
jo
cmp
scas
popf
jp
mov
leave
call
js
ins
cwde
ja
cmp
mov
ds
jno
js
fcomp
xlat
in
jp
bnd
rcr
xchg
(bad)
ftst
in
(bad)
pusha
cld
cld
mov
ds
push
xchg
xor
jl
xchg
clc
cmp
movs
sub
(bad)
xor
test
inc
push
jmp
nop
add
jmp
loope
neg
sub
cmp
lods
mov
xor
sbb
push
pop
mov
cmp
lock
(bad)
inc
shr
pop
(bad)
mul
and
retf
cmp
aam
ret
xor
sub
mov
iret
(bad)
clc
mov
push
mov
mov
push
or
das
push
mov
and
movs
repnz
xchg
sub
std
pop
ja
arpl
gs
mov
dec
and
lock
mov
out
repz
out
or
rcl
push
and
inc
fdiv
mov
jecxz
scas
adc
retf
adc
ficom
jl
push
pop
test
xor
mov
mov
inc
adc
or
popf
sbb
jns
out
pop
jg
retf
push
fiadd
jae
mov
(bad)
frstor
mov
and
dec
(bad)
movs
sub
pop
adc
clc
cmp
enter
push
int3
mov
xor
cmp
pop
xchg
or
fldenv
pop
(bad)
bound
mov
and
loopne
les
aam
mov
sbb
jg
cli
mov
jle
mov
ja
retf
jecxz
fsub
gs
adc
mov
mov
js
arpl
ds
ficomp
sub
adc
or
jecxz
inc
repnz
loopne
(bad)
pop
into
stos
jg
and
jno
rcl
mov
imul
test
cmp
sub
call
cdq
out
or
mov
into
fisubr
mov
mov
out
ins
repz
divps
rol
mov
add
cmc
lods
cdq
lds
dec
std
xor
or
cmps
mov
push
push
lods
movs
mov
xchg
cmp
xor
(bad)
repz
mov
inc
in
dec
test
push
dec
fld
add
popa
dec
and
mov
jno
and
or
mov
cwde
ins
xchg
pop
retf
arpl
jg
sbb
jo
pop
test
ret
cld
test
inc
movs
jecxz
in
cmps
add
cmp
xor
test
fwait
lea
mov
mov
jecxz
xor
fstp
lds
pushf
les
sub
mov
mov
push
fs
popf
ficomp
(bad)
cdq
loope
sub
push
jp
out
xor
xchg
les
outs
pop
inc
fdiv
xor
jo
out
jo
call
pop
loop
inc
mov
repz
fsubr
scas
dec
fcomp
jp
aas
in
push
jns
shl
adc
adc
repz
leave
jg
imul
lahf
mov
push
add
out
push
out
cmp
mov
sahf
push
ficom
inc
mov
and
add
cmp
push
cmps
shr
cmp
sbb
push
mov
fstp
adc
aas
into
loopne
ins
mov
sar
popf
(bad)
lahf
scas
jle
inc
xchg
add
xchg
push
xchg
retf
pop
push
fld
lahf
fcom
dec
dec
sahf
nop
push
(bad)
hlt
aaa
xor
sub
mov
dec
mov
test
out
sti
sahf
jns
pop
push
pop
jecxz
mov
mov
lods
(bad)
aam
jge
rcl
xor
mov
jge
repz
adc
dec
jbe
repz
and
push
sti
xchg
cld
add
push
push
cmp
mov
xchg
sbb
aaa
and
adc
sub
sub
and
jne
and
out
scas
sub
popa
push
mov
ficom
shr
mov
dec
iret
fs
es
call
and
pop
pop
test
dec
mul
scas
stc
jmp
push
leave
ss
mov
shl
adc
or
test
sbb
cmp
sub
fsubr
jmp
add
fwait
js
nop
and
scas
mov
test
mov
sbb
jb
fidiv
push
sub
push
ins
loopne
mov
dec
ss
(bad)
out
inc
bound
sbb
(bad)
cmp
repz
fsubp
lds
cmp
ins
adc
add
add
inc
out
xor
xor
and
jmp
inc
repnz
cld
mov
out
mov
lods
mov
push
sub
add
(bad)
js
adc
in
mov
add
imul
test
xchg
int3
adc
mov
div
ss
arpl
jo
jmp
push
mov
inc
sub
mov
jb
jl
dec
(bad)
outs
cvtps2pd
adc
out
pop
dec
imul
mov
pop
mov
add
fs
dec
sub
push
add
mov
repnz
ret
lods
dec
nop
push
pop
test
and
ret
lock
pop
das
fadd
cmp
pushf
and
or
adc
pop
mov
scas
mov
daa
aad
aad
jg
aad
push
es
or
jmp
call
out
dec
jg
out
push
mov
gs
(bad)
xor
sub
mov
lock
or
and
jmp
mov
mov
out
mul
aaa
hlt
in
cmp
inc
outs
loopne
jbe
loop
out
call
popa
shl
and
test
jmp
test
adc
adc
pop
pop
daa
or
addr16
xor
jg
xchg
fwait
adc
cmp
jns
and
or
iret
mov
iret
push
dec
mov
mov
je
fbld
mov
sbb
jle
(bad)
sbb
mov
sbb
movs
xchg
mov
int
xor
xor
or
sbb
fsub
sbb
push
sbb
imul
call
xchg
call
fcom
inc
xchg
add
adc
cmp
fistp
mov
gs
and
fstp
xor
repz
mov
bound
fcom
push
arpl
mov
sub
cs
or
fs
sub
cmp
xlat
xchg
sub
mov
add
sub
rol
int3
adc
jmp
jo
dec
or
pop
lea
inc
(bad)
cmc
inc
sbb
cs
jns
push
mov
mov
sbb
rol
es
out
sbb
mov
jno
out
or
dec
fdivr
or
and
out
stos
cmps
xchg
ret
sub
outs
leave
inc
add
daa
push
retf
stc
mov
aas
pusha
lods
push
mov
outs
rcr
mov
xchg
pop
dec
arpl
lds
mov
xchg
inc
push
xor
cli
jmp
fld
push
out
jmp
add
add
dec
and
std
push
sbb
setle
imul
jp
sbb
mov
jle
pop
jae
dec
mov
out
mov
xchg
pop
jmp
jecxz
fistp
cli
call
ins
mov
js
cli
iret
shr
imul
push
pop
mov
fisttp
(bad)
mov
sbb
rol
ret
and
ins
shl
icebp
cmps
in
adc
movs
shl
xor
ss
ins
aaa
int3
loopne
xchg
or
add
sub
jb
ret
in
mov
add
sub
movs
ficomp
js
fxch
bound
and
adc
dec
outs
jecxz
dec
fs
popf
dec
movs
sahf
loopne
mov
mov
repz
lahf
pop
and
jne
cmc
sbb
cmp
cmp
dec
ficomp
fsub
shl
ret
jg
inc
xchg
and
jbe
ror
std
push
inc
push
pop
sar
mov
add
outs
jmp
test
fisttp
sub
inc
movs
or
(bad)
movs
pop
es
push
repz
add
xor
fbstp
cld
mov
sahf
leave
in
mov
lods
xchg
pop
jge
add
loopne
jo
xchg
jo
mov
mov
rcl
dec
sub
inc
test
cmp
das
js
nop
shr
mov
jbe
xchg
cmps
jne
mov
push
and
adc
push
je
out
popf
test
test
test
sub
gs
les
mov
push
xor
or
mov
jbe
mov
mov
pop
cmp
dec
dec
rol
fsubr
sub
and
(bad)
jg
fs
fistp
jne
or
inc
bnd
adc
scas
aas
aas
outs
mov
aam
mov
sbb
fbstp
push
in
aam
mov
rcr
outs
cwde
jmp
sub
fiadd
leave
gs
int
cmp
and
dec
mov
jg
call
push
jae
repnz
pop
push
jae
jb
(bad)
icebp
cmp
add
in
sub
mov
jmp
loope
sub
inc
retf
popa
mov
ss
fisttp
xchg
mov
test
push
in
cmp
in
push
cmp
movs
jl
test
xchg
sub
inc
mov
xor
cmc
adc
(bad)
rcl
loopne
inc
cmc
fwait
cld
mov
add
push
sar
movs
lock
push
cmps
cmc
inc
pop
adc
and
or
push
jbe
mov
mov
sub
shl
loop
mov
pop
inc
in
das
and
(bad)
icebp
inc
lock
stc
push
outs
es
and
test
pop
add
outs
mov
pop
sbb
cmp
cli
add
imul
arpl
ins
pop
or
in
dec
aaa
sbb
add
shl
or
test
push
jecxz
inc
repz
ss
pop
cld
add
ret
pop
cld
pop
fwait
scas
fdiv
rcl
dec
cld
pop
das
gs
push
cmc
or
mov
ror
cli
inc
addr16
push
mov
nop
add
dec
add
imul
push
sti
xchg
sbb
jno
cmp
xchg
lock
cdq
dec
out
shl
call
adc
push
jge
and
pop
fbld
ss
sbb
stos
popf
movs
or
mov
cmps
pop
and
test
leave
sbb
mov
std
imul
ror
push
mov
mov
add
hlt
imul
jo
mov
pop
js
imul
xor
push
sbb
imul
or
push
xchg
cmp
bound
ins
arpl
mov
cmps
dec
add
pop
mov
les
cmps
push
xchg
sahf
pop
mov
jmp
je
aaa
call
xchg
sub
lods
(bad)
iret
dec
pop
popf
adc
jmp
lds
add
xor
mov
and
xchg
jg
fs
mov
and
sub
test
push
mov
mov
sbb
dec
xchg
cmp
in
mov
aas
idiv
dec
add
bound
loop
jp
sub
into
adc
mov
stc
dec
xor
faddp
iret
mov
scas
pop
pop
pop
push
sbb
movs
ret
cmp
ret
ins
jmp
mov
sub
pop
ins
mov
jne
xor
shl
iret
jo
jo
jmp
jno
aam
shl
pusha
or
xchg
sbb
add
scas
adc
cld
mov
jg
or
gs
xor
jl
mov
inc
jp
loope
add
nop
aaa
and
mov
pushf
popa
sub
loopne
je
cmps
cmc
das
loop
sbb
(bad)
jno
xchg
xchg
outs
in
jg
outs
in
retf
scas
mov
push
aaa
cmp
pushf
jb
sub
loopne
retf
mov
fistp
je
out
cmp
clc
mov
jmp
sbb
mov
xchg
dec
xchg
data16
push
push
pushf
les
jnp
and
fcom
cmp
(bad)
cmps
enter
push
or
and
icebp
fwait
pop
out
cld
jno
call
xor
jle
scas
jne
lods
int3
jp
push
sti
jb
sbb
popa
inc
call
scas
or
inc
out
stos
dec
mov
out
adc
retf
in
inc
jmp
stos
mov
sub
mov
add
mov
jns
shl
retf
gs
mov
sbb
mov
cmps
clc
popf
test
rcl
arpl
stc
mov
adc
loopne
push
push
ja
jae
data16
cli
dec
mov
not
div
aad
xchg
mov
add
mul
jmp
mov
pop
or
jmp
mov
mov
cmp
and
popa
mov
and
jb
mov
dec
shl
or
in
aas
mov
(bad)
add
movs
movs
in
cmp
jne
jmp
inc
cmp
aaa
add
dec
inc
int
gs
or
add
or
fist
ja
lock
ret
pop
adc
lea
cmps
das
xor
test
push
cmp
stos
fimul
movs
xor
dec
jmp
xor
lock
aad
xchg
mov
xchg
jne
push
and
ds
fisttp
je
inc
out
aas
aam
dec
add
imul
xchg
bound
retf
sub
jle
inc
in
push
pop
jno
dec
ss
sahf
pop
cmp
mov
inc
es
aad
push
or
(bad)
fisttp
jbe
ins
fadd
cmp
and
scas
mov
dec
sahf
fadd
shl
js
test
les
sbb
jp
ins
sbb
jg
in
pop
or
adc
mov
and
cmp
dec
ror
pusha
imul
sub
sbb
aas
fistp
xchg
dec
sbb
and
add
cwde
outs
daa
push
ins
sbb
fs
push
cli
fstp
mov
lods
ins
retf
xor
push
mov
sar
ss
aam
arpl
outs
adc
mov
fisub
lock
fdivr
xchg
push
cmp
jle
mov
push
inc
jmp
mov
in
and
push
retf
and
out
sub
lods
int3
push
hlt
gs
xchg
and
rcl
cmp
idiv
sahf
or
cdq
dec
cmp
xchg
sub
and
mov
pop
fcomip
mov
xchg
test
mov
push
pop
leave
push
jmp
mov
mov
in
bsf
ss
mov
or
lahf
sbb
fadd
or
jge
pop
icebp
call
adc
mov
pop
push
cmc
rcr
or
add
frstor
dec
mov
je
imul
imul
and
jmp
push
mov
paddusw
pop
jg
dec
mov
je
aam
jmp
push
push
ins
popa
fdivr
dec
mov
xchg
aam
pop
out
adc
aad
adc
out
popf
push
sahf
or
or
push
inc
jns
mov
and
xlat
or
and
and
sbb
out
and
jbe
aad
sbb
fmul
sbb
push
or
cmp
push
in
jno
mov
imul
push
ss
dec
clc
push
mov
cs
retf
sub
mov
retf
mov
or
jg
in
fadd
inc
sbb
dec
mov
sub
fs
addr16
sbb
and
xor
mov
push
rol
div
xor
push
pusha
(bad)
popf
sub
call
xchg
mov
and
push
inc
jge
lock
aam
push
ss
mov
mul
inc
ret
pop
sub
sahf
iret
mov
push
pop
popf
jns
push
inc
ds
cs
sub
inc
or
fisub
pop
mov
sbb
jge
sbb
dec
adc
les
mov
rol
inc
cmps
jmp
loope
pop
adc
pop
cmp
mov
add
xlat
mov
and
loopne
mov
test
xchg
enter
cmps
sbb
push
fmul
cmp
adc
sub
fwait
sub
mov
pop
sub
or
jmp
mov
fwait
xor
mov
bound
push
test
cmc
scas
and
icebp
cmp
imul
add
mov
lock
pop
xchg
std
and
push
ds
fist
lods
pop
jo
pushf
pop
sub
daa
mov
mov
lock
xchg
movs
and
iret
and
mov
xor
push
or
retf
dec
or
xchg
sbb
frstor
sbb
loop
cwde
mov
inc
inc
mov
dec
loopne
test
lock
data16
push
mov
pop
test
imul
adc
into
outs
add
popa
dec
cmc
lock
cmp
ja
hlt
pop
clc
in
jecxz
push
or
in
ret
mov
mov
lock
loopne
js
cmp
call
cmc
fist
xor
call
push
pop
pop
imul
add
fidivr
mov
and
and
psllw
data16
jne
mov
daa
pop
pop
aam
std
cwde
fsub
(bad)
fsubr
add
mov
cld
adc
mov
and
inc
lea
(bad)
pop
ja
mov
xchg
loopne
sub
mov
loope
int
fcmovnu
cmc
cmp
cmp
js
xchg
push
sbb
jae
push
loop
mov
inc
push
neg
push
jae
cwde
pop
rcl
cmp
ror
cvtps2pi
stos
sub
jns
sar
adc
inc
fstp
(bad)
bound
mov
jg
call
mov
cli
fstp
gs
clc
shl
mov
movs
cwde
pop
hlt
jo
mov
mov
push
bnd
jae
mov
stos
sahf
movs
push
sbb
mov
cld
xor
sub
pushf
test
aaa
push
dec
popf
push
fsub
xchg
cmp
retf
movs
aad
cmc
punpckldq
mov
aaa
in
mov
mov
sbb
arpl
adc
call
stos
jnp
jns
in
inc
es
mov
xchg
inc
jno
mov
push
adc
es
pop
mov
fs
cwde
xchg
(bad)
iret
pop
and
loopne
or
int3
stc
cmp
in
inc
push
retf
push
mov
scas
fsubr
xor
mov
xchg
inc
adc
push
stos
mov
pop
mov
les
daa
es
mov
out
adc
jmp
inc
and
pop
shr
and
inc
cmp
sub
pop
int
inc
jp
ja
xchg
mov
push
hlt
xor
push
cmp
sub
pop
ror
xchg
jle
outs
fld
icebp
fxch
call
dec
pop
mov
sbb
retf
std
mov
and
pop
pop
xor
pop
pop
pop
mov
mov
aam
(bad)
adc
dec
cmp
pop
cld
adc
jno
nop
push
jle
sahf
fs
push
dec
int3
jecxz
aaa
movs
jne
or
and
std
xchg
call
outs
sbb
pop
ins
mov
sub
(bad)
cmp
out
cmp
adc
pop
adc
inc
add
xchg
lds
jge
jmp
sub
inc
sar
mov
fwait
not
movs
cdq
adc
repz
fucomi
hlt
mov
or
sti
xchg
adc
jp
movs
(bad)
(bad)
js
imul
outs
mov
test
ret
ror
ret
and
addr16
enter
(bad)
loop
aam
jecxz
and
mov
(bad)
imul
out
imul
icebp
(bad)
repz
mov
push
xor
dec
jne
and
add
out
pop
mov
in
jno
mov
adc
fwait
popf
hlt
rcl
jbe
movs
sub
nop
dec
jno
daa
sbb
outs
xchg
js
xor
xchg
push
dec
(bad)
bound
scas
jp
sbb
aad
aas
mov
nop
xor
sbb
int3
dec
ins
aam
(bad)
vpavgw
xchg
loop
jmp
xchg
and
mov
mov
xor
inc
fisttp
popf
push
sub
push
ins
xor
mov
xchg
mov
adc
ss
(bad)
or
or
mov
pop
jb
retf
loope
out
cmp
ins
lods
mov
cwde
adc
jmp
add
cmp
adc
mov
fiadd
jmp
pop
push
pusha
jl
fcom
stos
mov
rep
or
dec
loopne
and
inc
or
pop
jbe
pop
pop
jo
ficomp
das
add
add
out
sub
(bad)
(bad)
xor
xchg
xchg
aas
outs
dec
sub
sub
cli
ficom
jmp
mov
pop
adc
cmp
and
das
aas
imul
clc
jno
mov
add
fld
pop
dec
pop
dec
mov
out
pushf
sbb
stos
bound
inc
imul
(bad)
jno
cli
pop
pop
xor
loopne
add
dec
shl
and
xchg
mov
das
dec
rcr
mov
xchg
aaa
add
sub
pop
push
les
inc
loopne
popa
xor
je
addr16
mov
sar
repnz
dec
push
vshufps
inc
xchg
fmul
xchg
or
not
xor
jmp
or
dec
cld
and
pusha
pop
pop
add
push
jnp
inc
sub
out
push
stc
mov
movs
das
sbb
jmp
mov
adc
jo
fnsave
cmp
pop
fiadd
jns
adc
push
outs
(bad)
pop
scas
inc
test
lds
(bad)
call
les
add
jg
add
jp
cmp
xor
cs
jle
retf
pusha
(bad)
adc
mov
mov
ds
lock
stos
push
gs
inc
sahf
and
dec
scas
mov
aad
loop
cs
test
add
imul
jg
mov
ds
inc
int
cmp
cmp
and
push
pop
add
test
test
pop
xchg
xchg
ja
push
mov
mov
cmp
and
je
add
or
mov
inc
(bad)
pop
jbe
dec
xchg
out
mov
ret
jns
pop
(bad)
adc
xor
mov
lods
popf
pop
and
inc
shr
je
mov
cmc
imul
fdiv
pop
add
or
cwde
mov
gs
js
cmp
jnp
pop
in
push
dec
push
jp
push
mov
add
xor
mov
js
jns
cmp
dec
mov
xor
pop
frstor
push
popf
ret
and
fcomp
mov
in
sbb
xor
cmp
adc
mov
jmp
jle
push
fdivr
into
inc
add
jecxz
sub
fdivr
sti
adc
imul
jecxz
psubsb
retf
popa
test
dec
jmp
mov
and
sbb
(bad)
mov
aam
jmp
push
add
cmp
mov
call
xor
sbb
add
loopne
xchg
les
rol
dec
jmp
(bad)
jmp
(bad)
push
into
repz
ins
xchg
xchg
sbb
push
lea
mov
jno
mov
mov
mov
mov
outs
push
(bad)
xlat
xchg
or
cmp
lahf
xor
sbb
(bad)
sbb
das
into
(bad)
cdq
imul
outs
in
jmp
fidiv
jl
mov
cmp
(bad)
pop
adc
not
mov
fs
stc
lahf
jmp
cmp
ror
xor
or
mov
push
idiv
lds
addr16
inc
jns
popa
sbb
int3
cdq
jmp
mov
and
jecxz
fdiv
lods
push
mov
jno
xor
int3
cmp
push
(bad)
sub
out
aaa
out
dec
test
(bad)
in
clc
inc
mov
inc
jae
cmp
inc
in
xor
jnp
push
xor
test
cmp
xchg
loope
dec
xsha1
cmps
push
xchg
dec
sub
hlt
rcr
push
shl
and
fst
add
ficom
inc
retf
cmc
icebp
sub
push
cmp
mov
out
push
push
adc
mov
inc
retf
iret
inc
inc
add
movs
neg
jnp
push
inc
add
retf
inc
jnp
lock
ja
mov
outs
sbb
aad
loop
xchg
sub
(bad)
out
pop
add
aad
in
add
cmp
sub
icebp
pop
fdiv
sbb
jb
xor
add
pusha
sahf
adc
mov
fistp
outs
push
push
in
jge
xchg
mov
push
sub
inc
add
call
jo
cmp
or
(bad)
mov
xlat
adc
test
cmp
nop
shr
add
nop
je
lods
int
fwait
mov
cmps
ret
into
fwait
or
cmps
cli
mov
add
popf
lock
inc
sbb
(bad)
repnz
sbb
loopne
or
rol
call
mov
jecxz
std
into
lods
push
sbb
lods
sbb
fcmovb
cdq
into
xor
jnp
add
ret
std
pop
in
jp
fs
cmps
or
popf
dec
adc
ret
hlt
and
test
pusha
aam
enter
mov
mov
push
mov
sub
dec
or
jne
test
jns
dec
adc
jb
adc
and
inc
stos
ins
out
dec
(bad)
jnp
(bad)
mov
pop
out
(bad)
jp
cmp
sbb
or
leave
xor
mov
pushf
jo
mov
mov
mov
cmps
mov
into
cli
cmc
mov
shl
xor
jge
rcr
pop
cs
cmp
push
and
ret
std
stos
cli
mov
retf
pop
ins
pusha
jp
jl
out
clc
gs
(bad)
retf
fist
xlat
xor
test
inc
test
mov
jb
jle
cmp
shl
lahf
data16
popf
adc
lahf
mov
je
ins
in
in
xor
mov
dec
mov
jae
push
test
imul
movs
bound
(bad)
lods
inc
mov
cmp
and
push
add
cs
mov
add
inc
jnp
cld
pop
pushf
scas
pop
icebp
sub
ss
ins
and
loope
ins
sbb
push
mov
mov
inc
test
dec
sti
and
xor
test
add
adc
or
or
jg
inc
aaa
pop
test
lahf
xchg
adc
out
sbb
je
and
or
xchg
gs
rol
push
adc
jp
pop
repnz
or
iret
mov
pop
outs
sub
pop
xor
xchg
ss
dec
aas
loop
xchg
xor
popa
dec
jle
xchg
mov
fisubr
not
(bad)
xchg
fcom
pop
out
jno
mov
or
imul
pop
outs
mov
stc
and
push
cld
lahf
outs
out
aam
call
bound
pop
imul
jge
jp
push
jecxz
sti
cmc
xchg
jg
and
in
leave
dec
jge
test
adc
shl
xor
aas
mov
dec
(bad)
pop
sbb
(bad)
ins
sbb
push
or
or
ja
mov
data16
cld
jo
mov
hlt
ss
enter
mov
or
dec
das
adc
cmp
push
mov
mov
add
dec
jg
pop
xor
sbb
popa
mov
inc
sbb
lds
add
imul
mov
sbb
pushf
push
(bad)
fcomp
movs
dec
fidiv
cwde
arpl
fcom
xor
fcomp
sub
mov
add
into
adc
adc
adc
push
scas
jmp
out
loope
mov
retf
and
inc
sbb
loopne
fs
xor
icebp
lea
loope
bound
scas
pop
ja
adc
push
rol
jno
jno
dec
cmp
xor
xchg
cmc
aad
pop
icebp
out
and
pushf
out
in
bnd
(bad)
inc
arpl
and
inc
jle
mov
sti
jbe
push
sub
push
jl
add
sbb
ins
xchg
dec
add
push
xchg
mov
pushf
and
loope
fmul
adc
add
pop
into
int
mov
jnp
lods
fistp
retf
push
inc
jmp
pop
aas
sti
mov
and
inc
push
push
pop
call
lahf
sbb
in
ins
shr
nop
sub
sub
jp
mov
mov
mov
xor
adc
mov
add
lea
push
mov
sub
test
test
and
push
xor
mov
xor
fadd
sti
mov
pop
pop
cmp
int
loop
sbb
xor
pop
pop
mov
int3
mov
push
not
popf
icebp
test
ja
int3
cld
jl
dec
cmps
sbb
pop
stc
in
push
repnz
mov
repnz
out
dec
mov
pop
aad
mov
mov
cmp
mov
mov
movs
(bad)
cmps
inc
or
stos
outs
adc
jns
or
mov
add
mov
sub
out
shr
lock
jg
mov
shr
xor
rcr
in
ret
jae
repnz
add
xchg
pop
test
add
push
(bad)
out
sub
and
xchg
xor
xchg
cmps
mov
mov
push
loop
xchg
div
(bad)
nop
inc
xlat
(bad)
out
jmp
adc
jle
stos
mov
add
sub
mov
fstp
mov
mov
rcr
retf
push
jns
addr16
div
ja
push
not
cli
cld
xchg
rol
das
popa
mov
fcmovnbe
mov
inc
int
fist
mov
(bad)
jbe
aaa
dec
retf
fnstenv
push
int3
lods
or
sub
mov
or
lock
adc
daa
rcl
fimul
movs
dec
adc
enter
and
pop
jmp
mov
call
push
lds
ins
pusha
mov
and
jg
mov
ret
or
or
jmp
inc
imul
scas
dec
sbb
adc
xchg
mov
mov
mul
fwait
pop
sub
jae
(bad)
xor
jmp
movs
mov
sahf
xor
push
or
pop
or
sbb
mov
push
sbb
in
jne
mov
clc
aaa
mov
fadd
inc
sub
xor
cmp
das
leave
not
js
push
dec
out
push
jbe
(bad)
ror
pop
jl
movs
xor
(bad)
stc
mov
sub
not
jmp
sti
add
and
fisub
push
dec
shufps
or
xor
adc
fild
mov
lahf
push
es
shr
mov
(bad)
mov
int
fdiv
mov
movs
imul
fs
cwde
cwde
pop
stos
cmp
clc
mov
or
ins
mov
pop
dec
or
pusha
std
stc
mov
pop
addr16
cmp
aam
sahf
jge
aaa
push
mov
mov
pushf
or
in
sbb
fsubp
pusha
push
cld
dec
leave
lea
jl
jbe
(bad)
pop
push
fidiv
popa
jle
scas
into
push
push
and
les
push
sub
cdq
mov
sub
sub
std
mov
or
test
inc
fucomip
push
mov
cmp
mov
fmul
mov
xlat
or
push
add
popa
mov
outs
fiadd
sub
xor
mov
daa
fs
dec
sub
dec
and
mov
pop
adc
add
and
sub
adc
inc
lds
adc
adc
dec
pop
test
call
xor
push
adc
scas
jb
into
ret
push
ror
idiv
aad
inc
arpl
inc
es
in
fisub
int3
fcmovb
xor
(bad)
shr
adc
inc
arpl
sbb
push
repnz
sub
aam
int3
pop
dec
jae
aas
or
mov
bound
pop
iret
add
shl
or
outs
icebp
nop
add
mov
rol
push
or
and
mov
add
xlat
imul
into
pop
xor
imul
inc
and
push
xchg
cli
cmc
pop
shr
and
fadd
cmps
sub
(bad)
xor
push
jnp
or
and
test
xchg
mov
aaa
inc
and
lods
or
loopne
int
loopne
xor
addr16
jge
mov
push
xchg
mul
call
dec
shl
cdq
push
pop
cmc
fbld
std
imul
xor
pop
mov
mov
mul
xor
jnp
push
ret
sar
sti
ins
jl
xlat
loope
scas
(bad)
leave
cmp
mov
daa
cli
fldenv
je
std
pop
das
mov
fild
popf
imul
shl
jbe
mov
int3
xchg
pop
retf
dec
and
icebp
in
xlat
jb
inc
and
mov
xchg
add
sahf
cmp
dec
test
aaa
fidiv
jns
jb
cdq
xadd
dec
pop
fs
hlt
pop
dec
jb
xor
sbb
js
mov
gs
cmp
cmp
xor
leave
cmc
add
les
popf
imul
mov
jg
adc
mov
xchg
or
jmp
fild
push
jno
xor
xchg
cwde
add
mov
mov
mov
mov
cmp
jne
xchg
xor
pusha
or
lock
cmps
pop
pushf
inc
push
outs
push
test
pop
xor
dec
push
jno
lock
data16
scas
cli
scas
jb
mov
inc
push
int
mov
add
mov
jmp
sbb
and
in
xchg
cmp
pushf
popf
dec
sub
adc
xlat
add
mov
cmp
lods
xor
mov
push
xor
or
jmp
dec
pop
mov
xor
add
not
int
enter
xchg
cmps
out
imul
add
(bad)
adc
retf
pusha
pop
int3
mov
push
in
scas
add
jl
sahf
outs
jmp
jecxz
fwait
clc
or
nop
fdivr
mov
rep
stos
ret
lahf
mov
stos
cmc
jns
adc
(bad)
div
or
push
push
mov
adc
cmp
push
push
jg
sbb
jae
pop
xchg
adc
and
mov
push
out
or
dec
pop
adc
retf
nop
dec
in
(bad)
jbe
inc
mov
hlt
sti
lods
cwde
sub
push
leave
pushf
ins
sti
or
test
mov
jp
repnz
dec
sbb
or
or
push
test
retf
ret
add
idiv
mov
xchg
loop
(bad)
sbb
std
jo
icebp
dec
test
outs
into
dec
std
jb
mov
mov
ret
out
xchg
std
mov
sti
ret
movs
sbb
enter
ret
push
sar
inc
sub
aad
and
popa
imul
ret
ds
inc
aaa
mov
xor
dec
faddp
lock
push
(bad)
pop
jo
pop
xchg
lea
jp
or
clc
lea
ficom
add
pusha
jo
vxorps
lods
iret
cs
mov
fdivr
mov
dec
aam
dec
idiv
push
aad
xlat
frstor
xchg
ret
or
inc
and
in
mov
adc
add
xchg
stos
push
add
xlat
arpl
inc
ret
sbb
psrad
aad
dec
pop
ds
pop
xchg
(bad)
jnp
and
adc
mov
mov
(bad)
out
gs
sbb
hlt
js
(bad)
in
dec
push
push
lock
inc
inc
pop
sub
movs
ins
(bad)
loope
das
mov
inc
mov
add
pop
inc
outs
pusha
imul
dec
dec
movs
sbb
icebp
push
imul
inc
sub
push
mov
dec
outs
jp
cmp
pop
mov
adc
pop
aam
mov
xor
shl
imul
add
dec
repnz
lods
ja
inc
rcl
test
movs
fs
(bad)
div
imul
fist
mov
or
adc
cmc
jl
pop
jge
out
mov
mov
stos
push
imul
lds
stos
int3
mov
nop
pop
and
mov
jmp
in
push
mov
ins
jmp
xchg
dec
xlat
dec
inc
ins
sub
dec
aas
test
adc
aad
jmp
cmp
stc
sbb
push
xor
mov
cmps
jae
call
iret
sub
push
jne
add
xchg
xchg
xor
dec
test
mov
adc
and
test
popf
adc
sahf
sbb
push
dec
sub
push
pop
sub
or
inc
test
jns
mov
pop
mov
rcl
outs
sbb
push
add
pop
sub
arpl
mov
push
mov
mov
loope
in
(bad)
xor
inc
sub
sbb
push
dec
mov
(bad)
in
add
jge
adc
dec
xchg
aaa
in
xchg
dec
jle
pop
cwde
adc
add
sbb
sub
cld
fcomp
test
mov
fld
dec
das
push
jae
fst
ss
pop
test
ret
les
cmps
mov
mov
mov
sti
call
imul
cmps
fwait
pop
daa
int
jae
mov
push
(bad)
cld
(bad)
ja
dec
xchg
xchg
jmp
sti
loope
icebp
mov
ffree
cmp
(bad)
dec
pop
popa
mov
jae
push
mov
jns
pop
mov
fld
fidiv
inc
sub
(bad)
retf
mov
std
(bad)
test
aas
adc
aaa
popa
dec
jge
xchg
addr16
jb
test
push
and
(bad)
push
push
das
add
push
(bad)
sbb
pushf
mov
movs
dec
aam
(bad)
mov
or
out
loop
mov
fisttp
dec
mov
in
mov
aaa
mov
iret
inc
push
ja
sbb
inc
sbb
or
and
into
jnp
ror
scas
add
neg
xor
dec
scas
std
or
sub
jl
dec
cld
push
mov
aas
(bad)
mov
das
xor
fidivr
movq
mov
pushf
cs
jp
inc
outs
adc
mov
push
daa
mov
aam
push
xchg
stc
jne
xchg
retf
sbb
xchg
pusha
arpl
adc
pop
out
inc
shl
je
inc
add
and
pop
movs
imul
push
mov
push
in
call
xchg
ds
mov
data16
loop
pushf
jne
(bad)
aad
(bad)
dec
push
push
sar
inc
movsx
push
imul
adc
call
xor
pop
mov
stos
push
loopne
bound
add
add
cwde
dec
ret
xor
cmp
fild
xchg
movs
sbb
cmp
sub
loop
jno
sub
xor
mov
mov
sbb
sub
xchg
(bad)
jg
dec
arpl
icebp
mov
jmp
out
lods
arpl
sti
das
stos
mov
inc
sub
fldenv
xor
mov
cmps
sub
dec
pusha
mov
ret
loope
push
push
pop
push
(bad)
aam
push
inc
ds
je
rol
gs
push
jecxz
sub
fwait
test
jmp
jmp
into
loop
inc
sti
test
in
loope
mov
data16
popa
pop
and
or
mov
pop
and
sbb
mov
xchg
jbe
cmp
(bad)
xchg
outs
sbb
repnz
enter
inc
pop
loop
out
dec
aaa
cwde
fimul
dec
and
iret
cmps
int
cdq
mov
xor
je
outs
cmp
ret
bound
dec
(bad)
shl
aad
sbb
mov
adc
add
jmp
daa
sbb
cwde
gs
mov
bound
inc
sar
or
fwait
std
push
xor
jno
adc
call
inc
mov
aaa
sti
adc
cld
mov
inc
icebp
pop
mov
push
fistp
fcmove
(bad)
push
out
push
push
mov
lods
js
sbb
jmp
add
clc
xacquire
dec
popa
cmp
push
mov
mov
push
xchg
adc
jb
inc
enter
fs
ins
fdivr
iret
inc
add
enter
jns
sbb
in
ja
or
add
movs
dec
pushf
cmp
sub
and
push
push
lock
push
in
fimul
and
pop
xchg
mov
enter
jmp
push
iret
leave
out
mov
scas
or
in
ins
call
xlat
inc
xor
sub
push
imul
xor
outs
imul
push
repnz
push
les
pop
jg
and
jb
mov
data16
sbb
mov
mov
icebp
out
call
push
pusha
adc
cmps
xlat
push
test
movs
push
push
movs
or
inc
mov
jp
int
retf
out
cmp
outs
inc
mov
test
mov
xlat
sub
jmp
mov
mov
add
dec
dec
mov
in
enter
mov
div
mov
xchg
call
sbb
mov
data16
test
in
call
movs
cmp
test
rcl
push
and
jecxz
xor
int
stos
sbb
lock
adc
ins
in
test
and
out
cmp
lds
cdq
sar
mov
lea
icebp
or
ds
mov
ret
xchg
lahf
ds
pop
scas
arpl
lds
inc
stos
fwait
jno
js
(bad)
neg
pop
sti
aad
mov
and
push
loope
leave
pop
push
xlat
nop
(bad)
adc
test
in
sahf
inc
push
mov
and
jne
mov
ret
pop
fdivr
pushf
jmp
scas
mov
es
ror
jl
int3
mov
imul
sbb
rcr
add
sti
(bad)
xor
test
mov
rcr
cmp
add
xlat
int
jne
jge
fwait
loope
adc
push
(bad)
call
(bad)
into
cdq
in
scas
add
and
nop
sahf
or
in
add
in
scas
jmp
pop
test
push
jo
cmc
push
adc
call
xor
das
movs
rcl
out
test
mov
icebp
adc
inc
mov
fwait
mov
mov
das
call
xchg
mov
mov
mov
adc
jecxz
loopne
inc
xor
in
adc
dec
imul
cs
aaa
test
jo
addr16
ja
mov
rsm
call
cmps
sub
fnstsw
pop
or
mov
dec
das
rcr
out
popa
out
(bad)
out
ret
inc
xchg
push
mov
pusha
and
dec
stos
or
dec
push
xchg
jbe
adc
mov
mov
clc
movs
sub
popf
add
mov
xor
xor
mov
ja
(bad)
jns
sbb
mov
mov
add
and
inc
out
push
mov
into
cmp
mov
cmp
mov
aad
xor
xchg
fwait
jmp
idiv
pop
pop
cs
rcl
inc
xlat
jg
inc
fiadd
in
rcr
push
adc
cmps
inc
outs
mov
adc
repnz
push
dec
or
xchg
jge
xchg
mov
adc
(bad)
mov
cmp
test
nop
sahf
jecxz
jp
repz
enter
xor
daa
shr
inc
sbb
sbb
sbb
xchg
aas
cmc
xchg
mov
jo
mov
enter
repnz
sbb
inc
and
enter
mov
inc
jnp
inc
inc
cs
imul
dec
retf
idiv
or
pop
mov
outs
pop
adc
lods
shr
sub
(bad)
fmul
movs
adc
pop
std
adc
inc
adc
jnp
shl
sbb
stc
enter
xor
lods
or
mov
into
call
xchg
in
repnz
mov
and
lock
mov
push
mov
arpl
(bad)
lahf
pop
lods
dec
jmp
ins
(bad)
enter
mov
mov
inc
dec
jmp
sub
push
sub
dec
(bad)
mov
fiadd
add
repnz
not
stos
add
(bad)
fnsave
aam
sbb
jecxz
mov
mov
pop
xchg
and
inc
out
pop
clc
mov
stos
xor
and
fcmovne
imul
inc
cmps
mov
sub
xchg
pop
fild
into
out
jb
(bad)
jo
cli
jbe
or
xchg
sub
mov
push
popf
es
xchg
pop
(bad)
xlat
inc
push
dec
adc
mov
add
inc
(bad)
push
push
fstp
add
inc
dec
xchg
(bad)
sbb
addr16
aam
aas
push
test
pop
mov
popf
jb
pop
rcr
jge
(bad)
push
sbb
sub
(bad)
hlt
pop
inc
jecxz
cmps
(bad)
xlat
dec
in
inc
xchg
xchg
outs
mov
outs
push
sar
lods
xor
aam
fdivrp
and
mov
ror
mov
jno
aaa
mov
je
push
adc
cmp
inc
pop
ins
fnsave
push
cmps
in
mov
inc
cmp
loope
jp
js
cmps
test
(bad)
out
pop
xchg
mov
sub
add
scas
dec
push
jo
repnz
aam
mov
jle
push
in
and
inc
lds
adc
test
adc
pop
pop
fisttp
hlt
jo
jnp
or
inc
jl
ss
push
mov
ret
mov
imul
pop
ins
mov
jns
mov
mov
mov
es
test
mov
rol
lahf
popa
and
mov
mov
mov
adc
push
or
lds
inc
call
jmp
lock
out
nop
or
ins
and
and
jmp
sbb
push
adc
push
dec
in
push
pop
aas
rcl
loop
or
sbb
std
ja
repnz
imul
lods
shr
arpl
rcr
dec
int3
fisttp
pop
push
ins
test
aaa
push
pop
outs
pop
inc
sub
add
rcl
fldcw
xor
mov
push
sub
gs
leave
in
test
mov
sub
mov
sbb
inc
repnz
sbb
push
std
repz
pusha
fist
not
dec
fsub
adc
repnz
mov
and
scas
test
jae
add
mov
hlt
int3
in
repz
mov
sbb
sub
les
mov
gs
je
daa
scas
shl
in
mov
fstp
cmc
sahf
les
push
pop
push
mov
icebp
xchg
or
or
push
and
xor
mov
cmp
in
sub
fsubr
xchg
adc
jo
adc
push
popa
stos
imul
sar
cmc
stc
(bad)
sar
push
ins
fnstenv
xchg
stc
pop
mov
inc
test
ins
jbe
pusha
cmp
fwait
rol
in
arpl
sbb
pop
into
and
fs
into
push
push
xchg
sub
and
std
lea
rcl
icebp
jge
xor
or
mov
cmp
push
ds
push
pusha
sub
push
push
sbb
mov
xchg
push
into
ins
movs
ja
mov
pop
push
test
mov
dec
das
push
in
cmp
bound
jae
xor
adc
inc
sbb
inc
into
fiadd
bnd
jbe
mov
sub
pop
mov
iret
cmp
ds
fist
lea
not
popf
dec
shl
push
jmp
addr16
lods
push
daa
mov
jge
jp
lahf
data16
aam
out
pop
les
ins
pop
add
enter
cmovg
pop
xchg
or
cmp
ficomp
dec
sub
or
mov
stos
ror
jle
shl
int3
or
xchg
in
and
retf
sti
mov
inc
push
and
in
movs
mov
sub
push
push
mov
stos
cmp
push
dec
pusha
jbe
mov
stos
xor
mov
mul
loopne
cld
jae
sub
shr
dec
or
pop
rol
call
lods
je
lds
push
lea
popa
jns
push
dec
jmp
add
(bad)
stos
test
mov
shr
das
push
sub
popf
aam
test
xchg
loopne
repz
sbb
stc
sub
(bad)
cmp
ret
xchg
or
push
dec
scas
dec
and
inc
jmp
pop
dec
and
test
mov
movs
mov
xchg
fs
mov
js
push
mov
and
or
mov
inc
retf
or
jl
popa
cld
aad
jo
jae
cld
leave
and
cmp
fimul
fs
and
test
popa
rcr
mov
mov
mov
jmp
sti
sbb
pop
inc
(bad)
scas
test
push
or
jp
test
les
jmp
enter
call
mov
cmp
fidiv
popf
sub
mov
adc
ins
sub
xchg
mov
pop
mov
fcomp
neg
add
clc
and
mov
and
loope
and
bound
fisubr
dec
jp
xchg
or
mov
outs
push
pushf
sub
mov
push
adc
push
push
fild
adc
adc
add
xchg
outs
ror
sub
mov
mov
mov
cmp
ror
sub
ds
imul
pop
rcl
retf
fld
(bad)
sbb
call
cmp
out
or
adc
movs
lods
or
mov
jecxz
mov
cwde
pop
push
ja
jb
fstp
add
mov
movs
sub
push
sbb
sbb
mov
xor
fnsave
rcr
pop
repnz
mov
js
ret
ins
rcl
bound
adc
xor
ja
clc
pop
pop
cmp
add
lea
pop
stos
xor
jecxz
lock
stos
mov
and
jge
mov
sar
retf
mov
pop
shr
cld
mov
mov
fst
enter
into
cdq
pop
cmp
inc
mov
mov
xchg
cs
and
neg
mov
mov
mov
daa
mov
loop
daa
data16
hlt
add
leave
jmp
jp
pop
cs
fild
and
push
mov
or
lea
(bad)
dec
jg
mov
cmp
adc
(bad)
nop
shl
leave
jecxz
sub
jp
pop
inc
bnd
movs
stos
jnp
dec
xor
into
adc
cmps
(bad)
fidivr
out
cs
sub
cmp
xchg
imul
sbb
fadd
adc
bound
mov
and
cmp
das
mov
sbb
shl
jne
out
xor
add
mov
add
fisttp
pop
fwait
xor
shl
inc
not
lea
retf
mov
dec
mov
shrd
fistp
jne
in
int
or
(bad)
mov
es
jne
into
leave
call
pushf
in
(bad)
dec
stc
mov
inc
adc
jb
push
mov
arpl
(bad)
jns
test
inc
jmp
outs
out
jg
out
lock
cmp
fistp
jl
into
lds
cmp
adc
push
daa
out
cwde
lock
jle
jmp
cmc
stc
cdq
scas
push
mov
jg
ds
test
ins
gs
cmp
xor
loop
inc
stc
outs
mov
push
xor
in
xor
dec
in
ret
test
ss
adc
sbb
mov
and
sbb
jb
xchg
xchg
gs
adc
and
movs
mov
or
push
sub
xor
les
scas
nop
sub
push
or
xlat
test
push
lahf
adc
xchg
jnp
mov
stos
mov
push
aaa
nop
adc
xor
mov
frstor
rcr
int
test
adc
inc
int3
inc
fadd
push
inc
cmc
out
jmp
into
bound
jmp
rcl
dec
jl
std
xor
push
jp
rol
call
sub
sahf
ror
(bad)
sti
idiv
inc
pushf
xchg
add
mov
sbb
inc
cmp
out
jg
dec
sub
cmp
cwde
adc
call
sbb
push
out
ret
mov
std
cwde
jno
dec
sbb
xor
sub
add
rcl
adc
sub
or
xchg
sub
sub
mov
sbb
sbb
push
out
(bad)
sar
ud2
es
mov
stc
fcomp
and
out
outs
push
dec
cmp
mov
ret
call
leave
cmc
das
sub
(bad)
mov
outs
or
inc
dec
mov
inc
ins
pop
(bad)
aad
enter
xchg
sbb
adc
push
popf
lea
scas
inc
inc
dec
add
jge
push
lea
push
adc
cmp
add
ins
add
inc
xchg
rcr
mov
push
mov
out
mov
jp
into
mov
xchg
mov
jecxz
xchg
sub
loope
ds
pop
aas
jecxz
movs
bound
sub
lods
out
call
jge
cmp
or
cmp
das
ins
lods
popf
test
fiadd
adc
add
lods
cli
ins
add
push
sbb
or
hlt
dec
pop
jg
and
dec
pop
inc
cdq
adc
or
sbb
sbb
(bad)
mov
mov
ss
lea
push
repnz
or
stos
add
push
and
add
pop
mov
adc
push
aaa
pop
jge
fnstenv
mov
pop
xor
dec
add
push
(bad)
daa
mov
sbb
sar
imul
(bad)
adc
push
mov
sub
jmp
popa
cmp
out
xchg
inc
cmp
icebp
push
es
mov
jb
cli
push
add
xchg
pop
retf
loop
aaa
xchg
jle
std
rol
jne
push
mov
test
test
jl
(bad)
push
cmps
xchg
sub
jb
aaa
inc
push
dec
sti
and
adc
jno
lods
jp
stc
dec
iret
dec
jecxz
xchg
mov
pop
pop
cmp
xor
rcl
dec
xchg
cmps
clc
out
pop
dec
int3
mov
pop
mov
and
jno
mov
clc
mov
mov
test
mov
sbb
sbb
dec
sbb
fstp
in
stc
push
js
ds
push
push
inc
inc
jne
xchg
data16
jo
xor
dec
cmp
pop
retf
jmp
cdq
add
xchg
mov
movs
mov
jae
fsubr
jo
fnsave
call
mov
retf
push
sbb
mov
and
cli
pop
push
xchg
fisttp
mov
in
mov
loopne
sti
pushf
loope
mov
es
mov
icebp
aaa
aaa
and
test
fs
inc
stos
and
(bad)
dec
dec
add
xchg
cmp
xchg
out
rol
scas
fwait
out
(bad)
aaa
cmps
adc
pop
out
repz
test
aas
inc
ss
add
add
bound
outs
out
out
pop
mov
mov
jg
mov
aaa
lea
sti
jg
xchg
loopne
aad
fisubr
(bad)
lods
outs
cmp
pop
adc
call
jmp
add
mov
fimul
xlat
daa
push
add
repz
mov
mov
inc
xchg
jo
jo
jbe
call
dec
dec
test
jmp
rol
cmp
ret
movs
loopne
not
repnz
aam
jne
jno
pop
mov
stos
fadd
bound
movs
in
xor
push
jbe
jns
fimul
(bad)
fsub
push
cmps
ins
add
dec
outs
ins
pop
cmps
xchg
in
cmps
sti
sbb
mov
shr
pop
hlt
push
xchg
clc
lahf
sub
adc
jb
std
mov
add
xchg
cmp
aam
jnp
sub
(bad)
(bad)
idiv
test
mov
pop
add
and
pushf
call
jge
push
mov
adc
mov
push
retf
pop
stc
cld
sbb
xor
and
mov
cli
jnp
mov
out
loop
dec
sbb
mov
xchg
jne
fstp
out
mov
scas
lods
inc
in
or
inc
mov
jl
dec
leave
pusha
cmps
or
mov
push
loope
jmp
sbb
mov
fs
cmp
nop
jl
pop
into
dec
dec
in
ss
pop
mov
lds
push
aam
sbb
xchg
or
or
add
cdq
stc
enter
test
mov
sub
pop
out
aas
sar
push
cmps
push
cmp
cmps
into
xchg
in
iret
out
pop
sahf
je
dec
pop
imul
cmc
loope
ret
mov
add
jge
cmp
ret
jg
outs
sbb
stc
inc
and
and
sub
jge
mov
push
aam
and
or
movs
xchg
(bad)
outs
std
mov
add
and
adc
lods
(bad)
shl
(bad)
sbb
mov
jp
pop
and
pop
ffree
or
in
lahf
adc
shl
in
push
bnd
test
lods
out
adc
pop
shl
jecxz
in
mov
mov
ds
dec
scas
push
and
mov
push
xlat
sar
(bad)
mov
mov
sar
xchg
cld
mov
lods
pop
popa
pop
sbb
or
dec
loope
pop
push
ret
in
int
inc
mov
sub
or
sbb
or
mov
je
(bad)
addr16
mov
outs
pop
in
mov
xor
in
std
xor
cmp
push
popf
push
(bad)
mov
fwait
data16
out
mov
xor
mov
ret
rol
movs
data16
pop
inc
jge
fsubrp
ss
frstor
push
inc
lods
inc
jl
push
out
clc
pop
add
dec
mov
jecxz
mov
add
std
(bad)
pop
xchg
cmps
mov
mov
test
int
add
pop
xchg
ins
xor
xchg
mov
ror
xchg
out
enter
dec
jb
lahf
jbe
and
sub
inc
sub
mov
mov
cli
inc
or
das
jle
mov
ds
out
sbb
pop
or
dec
cmp
pop
(bad)
xchg
test
cmc
ins
test
mov
fistp
movs
(bad)
scas
inc
les
jge
hlt
add
pop
mov
popf
rcr
pop
inc
cwde
fldcw
loope
popf
ja
mul
retf
push
adc
imul
mov
hlt
mov
mov
mov
dec
mov
lods
popa
out
and
ror
mov
movs
test
pop
in
sbb
loope
cdq
cwde
movs
cmp
jmp
into
ds
fwait
add
inc
or
scas
xor
xchg
fwait
sbb
pushf
jns
nop
mov
inc
add
fild
add
in
sbb
mov
dec
pop
push
dec
xlat
xor
repz
push
pop
mov
mov
or
mov
shl
lock
adc
mov
pusha
sbb
jmp
adc
mov
in
push
adc
pop
mov
add
and
(bad)
int3
xor
iret
std
jnp
loop
outs
in
xor
adc
test
cli
loopne
xor
retf
(bad)
cs
mov
dec
call
push
scas
push
(bad)
cmps
in
and
cmp
mov
test
jl
push
sub
icebp
xchg
pop
mov
ins
cmp
sub
cwde
cwde
imul
fisubr
dec
sbb
mov
xchg
sbb
mov
stos
pushf
cmps
jno
repnz
rcr
cdq
js
push
mov
sbb
mov
hlt
lea
and
mov
jae
or
iret
adc
mov
push
add
data16
dec
jmp
aad
ds
outs
xor
pop
push
movs
ds
lods
push
push
mov
mov
mov
ins
jne
mov
ja
sbb
push
jae
sub
jecxz
jmp
fisubr
dec
push
cmps
pop
xchg
pop
jle
cwde
adc
mov
and
mov
xchg
mov
ret
or
test
call
cmp
cmps
push
ror
push
lea
lock
js
inc
fstp
xor
jne
imul
inc
cmp
cmps
lea
cmc
mov
inc
mov
sub
out
test
pop
jne
dec
test
pop
hlt
pop
leave
sub
inc
mov
adc
inc
loop
or
scas
sbb
or
cs
add
add
mov
mov
adc
and
push
sbb
xchg
jnp
jno
lds
aaa
mov
es
pop
or
jmp
pop
mov
idiv
adc
pop
js
add
push
clc
scas
sahf
lahf
sub
inc
cmc
ss
div
push
mov
cld
mov
mov
je
inc
sbb
fdivr
js
test
mov
addr16
shl
jb
leave
out
push
adc
iret
inc
xlat
mov
out
scas
test
sub
imul
cmps
xchg
rcl
pop
mov
inc
xchg
fstp
pop
retf
lods
and
push
xchg
mov
popf
mov
into
cld
gs
cld
push
popf
or
dec
and
sbb
in
inc
in
(bad)
pop
sub
adc
out
jecxz
sub
ret
and
mov
icebp
fs
in
stos
xchg
sub
cmp
lods
fldl2t
fisub
out
int
ins
add
mov
imul
movs
or
jmp
clc
aam
pusha
sahf
rcl
pop
fcmovnbe
jecxz
sbb
push
jo
aaa
rcl
sub
cmp
int
push
mov
push
adc
or
mov
jns
retf
xor
out
jl
mov
or
loop
fwait
cmp
push
pushf
loopne
jmp
xor
rcl
xchg
xor
pop
jg
out
push
xor
pop
ja
mov
mov
cmp
test
ficomp
stos
inc
clc
sub
cmps
sbb
push
mov
mov
sub
pop
and
ror
cmc
cmp
sub
(bad)
jbe
aaa
stc
sbb
shl
test
xchg
(bad)
sar
cmc
dec
mov
mov
add
and
call
push
mov
mov
xor
pop
aad
inc
int3
dec
and
fisttp
stc
push
fsubr
xchg
mov
or
sub
cdq
ins
rol
mov
jp
data16
js
mov
popa
imul
and
mov
sbb
imul
push
repnz
jecxz
retf
jnp
adc
idiv
or
cmp
push
cmps
or
mov
cmp
jg
int
neg
out
mov
enter
lods
enter
inc
leave
in
idiv
jae
rcl
mov
inc
mov
mov
push
mov
jb
js
lahf
push
cdq
out
sub
out
sahf
mov
leave
cwde
mov
sub
cmp
cmps
das
fld
pop
leave
ficom
jecxz
inc
pop
mov
or
loop
gs
mov
fs
jecxz
mov
jae
imul
or
inc
pop
xor
add
mov
lea
movs
inc
test
adc
mov
xchg
sub
into
movs
popf
lea
ret
out
call
push
clc
sub
test
mov
out
inc
popa
or
and
mov
ret
popf
in
imul
fist
rcl
scas
in
xchg
sub
shl
cmp
push
jo
ret
add
sbb
ja
cmovl
mov
or
push
inc
arpl
movs
nop
lods
test
fdiv
mov
xchg
shl
ror
or
xor
push
sub
enter
stc
pop
jmp
int
in
into
add
fsub
jle
sbb
mov
(bad)
les
jne
enter
sbb
and
jmp
adc
mov
pop
inc
jmp
fisubr
out
cld
add
inc
mov
xor
mov
outs
add
mov
movs
popf
xchg
inc
aam
sbb
fld
pusha
dec
(bad)
stc
ds
shl
scas
push
mov
sbb
sub
cmp
sub
cmp
dec
enter
clc
jmp
mov
mov
push
dec
cld
adc
push
inc
and
retf
sub
cmp
pop
or
cwde
mov
inc
cmp
mov
je
pop
jge
(bad)
pop
add
jge
or
jle
ficomp
into
js
mov
xchg
std
call
sbb
pop
sar
xchg
sar
push
sub
imul
movs
leave
cmp
mov
push
xchg
loop
pop
mov
and
cdq
(bad)
dec
loope
ret
add
mov
pop
shr
call
mov
adc
jmp
stc
jno
dec
mov
lahf
cmp
das
scas
popf
push
js
jbe
mov
sbb
mov
fldcw
and
xchg
cmp
popf
sub
mov
jle
dec
cmps
(bad)
in
mov
push
outs
inc
xchg
outs
outs
je
and
xchg
jp
aaa
fs
in
mov
xchg
pop
pop
out
sbb
mov
shl
imul
inc
xor
add
cmp
sub
mov
add
fisttp
inc
ffreep
out
aas
inc
or
not
pop
test
imul
idiv
adc
pusha
pop
sbb
jl
pop
sbb
fist
mov
dec
jno
rcl
call
scas
shr
jb
mov
add
pop
push
je
or
das
mov
fiadd
cwde
pop
mov
arpl
pop
xchg
mov
add
mov
scas
test
call
out
xor
aaa
mov
inc
test
adc
push
das
xor
pop
jae
xchg
movs
mov
mov
xor
dec
call
ret
mov
mov
pop
aad
in
in
sti
push
rol
and
push
movs
fimul
aam
nop
cmps
pop
(bad)
repnz
aas
and
pop
sub
outs
aas
add
out
jle
lds
pop
cdq
xchg
repnz
scas
dec
pushf
pop
icebp
clc
push
in
ins
fs
nop
mov
push
ja
rcr
lahf
daa
fld
loop
jnp
outs
cld
pop
sbb
cmp
xchg
ins
mov
imul
inc
js
sbb
outs
sbb
push
test
mov
sbb
jbe
stos
cmps
cmps
in
ds
jo
jbe
movs
cwde
push
mov
into
push
rol
das
imul
mov
stc
cmp
cmp
or
sub
sub
xor
xchg
xchg
cmc
cmps
test
out
call
xchg
xchg
mov
mov
push
inc
rcr
mov
sbb
mov
sub
(bad)
jb
pop
sub
(bad)
loopne
xchg
dec
fidiv
sbb
enter
stos
dec
push
int3
repz
aad
int3
call
cmps
(bad)
xor
pop
imul
cmps
enter
inc
or
into
push
scas
out
ret
ret
arpl
stos
call
inc
inc
push
data16
out
pop
and
mov
jo
xor
in
data16
aaa
mov
sahf
inc
push
sub
mov
jg
bound
js
mov
pusha
xchg
in
and
cmp
arpl
cmp
je
xor
sbb
jle
jecxz
adc
imul
popf
sub
ins
inc
add
scas
sbb
int3
mov
call
or
cld
ins
dec
inc
adc
cmp
add
(bad)
test
retf
stc
dec
sub
gs
or
dec
icebp
imul
fisub
dec
pop
sbb
or
or
cmp
mov
cs
mov
fsub
popa
push
dec
enter
mov
sbb
ror
dec
movs
mov
test
sbb
push
pop
lahf
cs
sub
cwde
mov
aas
xchg
jae
rcl
mov
push
mov
lds
lea
pop
push
sub
lahf
mov
loopne
adc
push
or
(bad)
cli
xchg
stos
mov
das
ja
mov
mov
or
push
or
jl
sbb
sub
je
or
push
and
mov
mov
dec
inc
sti
lods
jns
popf
(bad)
(bad)
stos
lods
pop
fs
pop
xchg
imul
push
sub
dec
out
xchg
arpl
cld
in
cwde
sub
pusha
pop
mov
cmp
xchg
sbb
rcl
sbb
add
cmp
fabs
enter
sbb
cwde
push
mov
out
or
xchg
je
ins
repz
jmp
retf
inc
jecxz
fisub
pop
and
push
cmps
clc
inc
lods
sbb
pop
sbb
out
ins
test
int
int
(bad)
movs
or
gs
cli
int3
or
add
cmp
pop
push
in
dec
push
gs
dec
sub
xlat
add
out
push
(bad)
pop
retf
pop
mov
or
fcomp
sar
sbb
xchg
mov
or
cwde
push
fldcw
add
rcr
lea
pop
daa
(bad)
in
sahf
add
ins
sub
cmp
cwde
mov
dec
cmp
sub
aas
enter
push
call
add
out
sbb
cmps
push
pop
sbb
gs
stc
add
add
mov
test
mov
daa
retf
ret
iret
push
mov
sub
je
int
ret
add
pop
jmp
fldcw
shl
sbb
mov
add
push
mov
movs
inc
ins
push
(bad)
and
ja
add
mov
mov
loope
push
jle
pushf
movs
popa
sysret
lahf
add
hlt
mov
hlt
ins
movs
aas
icebp
scas
in
inc
xor
xchg
stos
and
mov
mov
lea
scas
cmp
std
mov
lods
inc
(bad)
cwde
dec
or
push
icebp
or
sbb
jmp
push
xchg
push
mov
pop
xchg
sar
imul
ja
int
js
js
test
test
fs
dec
fisttp
scas
pusha
sbb
xchg
fcom
pop
jae
(bad)
xor
jns
aaa
pop
gs
loop
cli
(bad)
hlt
mov
(bad)
idiv
sbb
xor
xor
(bad)
nop
data16
push
xor
dec
data16
addr16
rcl
loope
(bad)
sar
mov
repz
jecxz
xlat
lods
dec
dec
fiadd
stos
ds
daa
fdiv
sbb
pop
pop
pop
cmps
retf
adc
mov
jno
push
pop
mov
or
adc
add
aas
jmp
mov
popf
int3
jns
add
lods
pop
out
push
movs
iret
cdq
std
dec
sbb
out
inc
mov
hlt
push
dec
popf
aam
ss
mov
sbb
cmps
ins
add
inc
das
pcmpgtw
pusha
inc
jmp
into
jmp
clc
push
icebp
xor
add
cmp
out
xor
ins
loopne
jecxz
jb
(bad)
es
lds
mov
jmp
xchg
xchg
adc
enter
pop
out
call
and
mov
fs
lods
sbb
es
jge
xchg
push
lahf
sub
inc
(bad)
lods
int3
push
xchg
js
retf
scas
inc
rep
jmp
mov
sub
loop
std
shr
bound
fdivr
in
jmp
cmp
ror
dec
mov
test
and
adc
push
push
push
mov
fmulp
pop
ret
ret
in
sbb
popa
rcl
sub
sbb
out
push
into
cmp
mov
pop
pop
or
cmps
inc
or
imul
fisub
call
les
aad
mov
adc
rcr
(bad)
dec
cmp
(bad)
movs
addr16
in
mov
(bad)
gs
push
xchg
cwde
repz
dec
cld
sbb
push
cmp
push
in
inc
lods
add
and
ins
mov
in
ret
lds
sub
or
in
pop
inc
in
lods
push
pop
jbe
push
imul
data16
push
pop
(bad)
leave
pop
test
inc
adc
imul
bound
adc
sahf
call
and
jg
jg
cmp
sbb
xor
sbb
nop
xchg
pop
sar
cmp
mov
out
or
inc
pop
adc
into
and
cmps
dec
ins
push
in
(bad)
(bad)
add
(bad)
out
icebp
xor
mov
repz
lds
pop
sub
and
jo
outs
stos
adc
pusha
leave
xor
mov
aad
test
pushf
pop
pop
mul
adc
cwde
cmp
ficom
adc
mov
mov
ffreep
and
das
pop
shr
cmp
out
loop
cdq
(bad)
js
mov
fcomp
loope
jae
popf
aas
or
cs
xchg
mov
xor
add
out
xchg
adc
inc
jp
and
dec
movs
sahf
std
imul
pinsrw
rcl
retf
jge
aas
inc
lea
cmps
mov
es
sub
aaa
sahf
jmp
mov
mov
sbb
rol
test
out
imul
mov
fdiv
pop
xlat
mov
jns
xchg
and
push
add
sti
xchg
stos
mov
or
jmp
jecxz
cmp
addr16
jmp
scas
ficomp
icebp
or
mov
sbb
movs
sbb
jg
pop
adc
or
test
xor
bswap
adc
popf
jge
push
add
or
in
cld
idiv
outs
push
aam
rcr
fsubr
div
sbb
jo
xchg
sbb
test
dec
add
mov
adc
js
xchg
mov
retf
out
lods
xchg
jns
sbb
mov
dec
push
xchg
add
(bad)
adc
push
dec
rol
test
movs
and
sub
sub
push
xor
mov
(bad)
cld
ins
in
sahf
ja
pusha
jnp
dec
mov
(bad)
pop
dec
and
pop
outs
sub
(bad)
(bad)
loopne
and
test
mov
sub
rol
(bad)
jp
mov
sbb
xchg
scas
js
lods
adc
mov
outs
aam
xor
stc
out
mov
mov
cld
js
mul
(bad)
jae
mov
ja
sbb
movs
nop
repnz
lahf
mov
aas
mul
pop
mov
cld
cmp
icebp
dec
fmulp
std
stos
stc
push
push
xor
push
push
xor
movs
out
dec
inc
jo
ins
cli
mov
leave
fisubr
or
push
pusha
pop
mov
jmp
xchg
retf
add
add
fcmovu
bound
sub
adc
dec
mov
cli
lds
retf
sub
iret
pop
lds
out
push
cmp
test
(bad)
fisttp
add
pop
add
adc
les
push
ja
cs
sbb
iret
es
imul
push
cmp
and
ins
adc
push
sub
sbb
mov
mov
cmps
inc
pop
(bad)
pushf
adc
sbb
mov
xchg
jo
push
push
ret
and
xchg
mov
out
push
hlt
lahf
fist
sub
add
push
pop
xchg
inc
push
clc
loop
xor
dec
sbb
cmp
and
in
pop
jns
sub
stc
dec
pop
test
xchg
enter
mov
stos
les
ret
push
mov
add
clc
sub
or
mov
out
test
push
add
clc
lods
sbb
shl
cmp
mov
sbb
adc
xlat
dec
sub
mov
call
or
inc
addr16
jl
xor
stos
cmp
jnp
stos
pop
aaa
xchg
hlt
xor
mov
xor
or
out
rcl
cdq
loopne
imul
outs
rcr
ins
fild
cld
fld
mov
aam
push
xchg
sub
ins
pop
push
mov
adc
adc
cmps
sbb
jo
pop
xchg
xchg
sbb
popa
lock
mov
jge
adc
push
xchg
push
mov
xchg
not
or
fcomip
nop
lock
pop
mov
dec
aam
cmp
jge
inc
mov
ja
jge
imul
retf
daa
div
xchg
out
adc
push
cmps
call
getsec
vandnps
jl
retf
mov
push
mov
call
jg
dec
fcom
enter
add
movs
nop
jbe
ds
popa
fucomip
mov
or
scas
pushf
xor
push
dec
fidivr
fmul
xchg
sar
mov
xchg
cwde
in
jb
mov
jle
mov
aaa
and
mov
push
xchg
int
xor
add
add
bound
sub
lods
push
cs
xor
sub
mov
bound
jnp
or
dec
mov
dec
mov
aam
mov
or
pop
je
push
pop
in
pop
inc
cld
cs
or
or
adc
stc
and
pop
add
push
aad
in
(bad)
mov
mov
popf
(bad)
jns
mov
ficom
dec
dec
dec
mov
cli
adc
out
push
out
rol
inc
cmc
inc
clc
sbb
push
mov
(bad)
and
push
dec
pop
int3
add
call
mov
aas
push
pop
xchg
jl
or
xchg
inc
std
cmp
adc
cld
scas
pop
mov
daa
jecxz
movs
dec
pushf
jle
in
adc
xchg
xchg
imul
sbb
sbb
cmp
jp
jge
rcr
pop
mov
aaa
dec
fisub
cwde
cmps
ins
fstp
mov
movs
pop
xchg
sub
push
stos
fdiv
sbb
mov
cwde
dec
pusha
fisub
cmps
jmp
daa
cs
ds
lahf
hlt
jno
jmp
fsub
pushf
(bad)
pushf
push
pop
adc
pop
and
rol
dec
xchg
xchg
ss
aas
and
push
or
popf
dec
pusha
inc
lods
movhlps
push
dec
aad
adc
jae
mov
sub
das
sbb
or
mov
mov
sbb
adc
sti
mov
imul
scas
ffree
jns
sbb
dec
mov
mov
rol
loop
arpl
mov
shl
sbb
lds
or
sbb
mov
sar
shl
pop
out
dec
or
in
movs
or
pop
scas
mov
in
or
pop
push
mov
inc
aaa
adc
fbld
dec
pop
in
imul
push
and
inc
sub
ds
jb
push
cli
mov
sbb
leave
ret
xor
std
aas
jbe
add
push
sbb
dec
cmps
hlt
pop
adc
imul
rol
arpl
mov
scas
cmps
cmp
js
sub
dec
js
test
test
movs
fcompp
push
in
imul
sar
in
sub
shl
mov
fucomi
ret
jg
in
add
cli
fcomp
or
dec
and
inc
jns
push
popf
jmp
mov
sub
xchg
retf
outs
in
iret
mov
sub
lods
adc
out
inc
dec
rol
in
daa
fidivr
jb
jnp
pop
add
jle
int
call
mov
jmp
mov
pushf
jnp
mov
out
sub
rcl
cdq
in
add
out
and
rol
ja
test
inc
cdq
out
fild
in
add
sub
jmp
pusha
ret
and
cld
jnp
mov
ds
rol
pusha
popf
mov
(bad)
and
inc
jg
retf
jmp
mov
xchg
data16
push
arpl
inc
fwait
mov
ins
xor
dec
mov
xor
test
or
shr
cmps
sti
stos
cmps
and
sub
mov
cmp
pop
push
add
push
ins
pop
ins
and
push
and
call
addr16
ficom
scas
xchg
add
pop
lods
adc
adc
inc
mov
ret
push
adc
cmc
xor
fs
aas
sub
dec
in
mov
iret
(bad)
mov
xchg
mov
dec
outs
add
mov
mov
daa
aad
pop
outs
aaa
cmp
sbb
dec
ret
fucomip
jb
mov
in
or
xchg
shl
dec
pop
dec
mov
ror
xor
adc
xor
(bad)
mov
pop
push
stos
pushf
test
xor
push
dec
cmps
xor
push
dec
adc
dec
loope
cdq
jbe
dec
mov
xchg
cwde
lock
mov
inc
dec
cmp
and
cmp
xor
shl
fld
fs
(bad)
or
call
mov
jg
push
dec
test
and
sub
pop
cli
xchg
jmpw
sar
outs
mov
mov
push
ins
xor
sahf
jne
data16
fisubr
jb
or
push
sahf
inc
cmps
out
cmp
mov
ret
ror
push
out
out
pop
addr16
loopne
adc
js
push
or
push
dec
push
adc
enter
mov
imul
ja
sbb
ss
add
mov
jmp
cmps
imul
popf
fild
cmp
sub
leave
push
lahf
xchg
push
inc
mov
(bad)
xchg
lods
pop
push
ss
mov
(bad)
xchg
inc
push
test
xor
shl
push
inc
jae
mov
mov
iret
mov
dec
add
fsubr
js
data16
or
stos
iret
das
sar
sub
stos
xchg
es
xor
xchg
sub
dec
xchg
sti
(bad)
mov
xchg
or
jb
dec
or
cmps
test
fisttp
fcomp
imul
cmp
adc
inc
call
test
xlat
jo
and
jmp
mov
jecxz
imul
jo
cmps
test
pop
hlt
sbb
xor
in
sti
(bad)
mov
sbb
stos
stc
sbb
retf
cwde
ins
js
loopne
dec
adc
cmp
pop
pop
nop
pop
inc
cli
or
or
sub
in
push
daa
rol
xchg
adc
in
or
(bad)
inc
adc
cmps
arpl
std
add
mov
mov
cld
jecxz
std
cwde
sahf
mov
daa
xchg
mov
iret
imul
test
retf
or
jno
lods
aas
inc
pop
jb
push
ins
push
arpl
ds
aam
mov
sub
dec
ret
inc
or
pop
stos
xchg
cmp
retf
js
mov
fnstsw
retf
movs
cmp
js
in
test
push
xchg
jno
or
fwait
popa
xchg
dec
cmp
call
mov
gs
adc
popf
mov
cmp
pop
mov
cmps
and
and
pop
aam
into
pushf
out
test
or
fcomp
cmc
xchg
sbb
scas
or
jp
imul
or
push
jb
sub
test
pop
ds
push
mov
mov
and
movs
mov
dec
sbb
inc
inc
pop
(bad)
loope
ret
fcomi
jno
in
mov
add
cdq
jmp
cdq
(bad)
scas
jne
sub
(bad)
repnz
xchg
mov
nop
mov
fist
push
push
sbb
xor
(bad)
sahf
loopne
and
into
into
mov
push
xchg
aad
js
in
fcomp
fstp
pusha
pop
add
inc
cwde
mov
ret
mov
fmul
inc
lock
out
sar
repnz
popa
inc
sub
ins
pop
mov
sar
push
cmp
xor
cmp
mov
mov
and
pusha
mov
outs
icebp
and
cwde
aas
int
stc
rcl
adc
add
add
mov
xchg
inc
fsub
sub
fnstenv
or
adc
inc
inc
sbb
cwde
imul
mov
rol
jmp
iret
sar
int
lods
jnp
out
iret
(bad)
adc
mov
aam
pusha
test
push
lea
adc
mov
loope
test
xchg
fistp
sbb
xchg
je
mov
pop
cld
jge
int3
addr16
jle
xchg
or
or
inc
or
mov
cs
cmp
adc
inc
retf
jne
sar
addr16
outs
ins
ds
jb
mov
jno
mov
or
adc
mov
mov
dec
sbb
mov
pop
sub
in
test
xchg
xlat
daa
repnz
mov
popa
or
sar
jne
aaa
dec
sahf
fnstcw
adc
mov
mov
hlt
or
aam
stos
mov
add
cmp
mov
dec
lds
les
or
xor
jg
fwait
loope
loopne
mov
lock
cmc
js
lods
daa
cli
dec
test
push
sbb
cdq
cli
std
cwde
mov
pop
(bad)
loop
jmp
push
mov
loope
mov
jle
mov
sar
jns
sti
js
add
retf
iret
cmp
mov
fcomi
and
mov
mov
mov
dec
je
pop
push
shr
dec
sbb
es
std
inc
and
int
dec
push
pusha
xchg
rol
sub
pop
fnstsw
inc
clc
fidivr
jmp
sub
push
mov
and
pop
xor
adc
jl
pusha
test
push
(bad)
das
xchg
rcr
stos
add
int
push
or
pop
loope
dec
xchg
test
daa
xor
or
aad
mov
popf
dec
sub
inc
add
popa
mov
pop
add
inc
push
enter
outs
adc
mov
mov
into
xchg
cld
cld
stos
pop
aam
jno
rol
adc
fidiv
call
push
gs
jae
fxtract
jl
xchg
fcomp
xchg
aad
pop
cld
ss
dec
repz
arpl
div
sub
pop
xlat
icebp
sub
sbb
jbe
in
aam
and
ror
nop
xchg
pop
sti
dec
cld
cli
test
ds
adc
xlat
int3
cmps
icebp
mov
stos
in
add
push
jge
cmp
pushf
fnstenv
loope
mov
jge
xchg
mov
out
cmp
pop
bound
mov
call
adc
push
push
cmp
out
dec
repnz
(bad)
mov
mov
xchg
xchg
cli
mov
(bad)
or
xchg
push
xlat
jmp
rol
leave
or
sbb
add
push
jl
cmp
adc
jecxz
hlt
enter
dec
mov
jb
int3
inc
cmp
cmp
sub
jle
jmp
push
in
xchg
jno
push
adc
xchg
fcomp
mov
test
fcomi
cmp
mov
push
push
arpl
cli
pop
push
stos
xor
add
push
mov
es
retf
cmc
inc
pop
cmp
jmp
aaa
push
cmp
loop
adc
das
or
movs
enter
jecxz
ret
lahf
mov
mov
jp
or
sbb
push
ss
mov
xlat
ins
retf
or
jae
jno
jne
cli
fadd
add
sti
enter
dec
ror
pushf
cmc
and
cmp
rol
gs
xor
cmp
jl
ror
addr16
pxor
repnz
retf
out
scas
inc
ficomp
nop
outs
sub
mov
dec
sahf
jp
cmp
ins
xor
neg
xchg
push
outs
lods
dec
shl
jle
xchg
cmc
bound
jnp
ror
cmp
or
loopne
loopne
dec
movs
mov
popa
fld
mov
jge
mov
xor
stos
jecxz
inc
jg
push
mov
and
push
add
fldenv
xchg
pop
xor
sbb
stos
inc
xor
inc
mov
inc
pop
cwde
mov
and
cdq
mov
test
call
mov
rcr
cdq
dec
mov
dec
lahf
add
mov
dec
adc
sbb
aas
gs
sbb
push
inc
cmp
sub
push
sbb
cmp
and
mul
jl
jle
pop
add
gs
fs
imul
add
in
xor
mov
cwde
xlat
data16
movs
xor
xchg
mov
sbb
pusha
push
ds
adc
push
mov
test
rcl
xchg
push
xchg
movs
pushf
sbb
dec
push
ins
out
inc
pop
mov
ret
mov
ins
ror
adc
jl
rcr
lods
mov
push
in
mov
push
jae
gs
push
stc
mov
adc
fidiv
sbb
lods
popf
mov
inc
inc
add
dec
adc
inc
xor
jge
xor
adc
mov
mov
ss
imul
loop
jb
cs
fcomp
and
movs
in
ficomp
je
jbe
add
jl
sbb
pop
pop
xor
push
push
dec
ret
xchg
xor
push
retf
jecxz
inc
(bad)
and
scas
push
inc
jnp
inc
pusha
ret
jnp
sbb
mov
push
add
(bad)
adc
xchg
lods
pusha
mov
add
jnp
mov
in
push
nop
pop
pop
mov
mov
gs
pop
or
ffree
sahf
jno
xchg
dec
lea
hlt
add
call
push
xchg
cmp
ret
cmp
jb
push
or
xor
in
dec
neg
or
jmp
unpckhps
dec
or
loopne
cdq
out
xchg
imul
ins
push
mov
out
je
(bad)
xor
addr16
cs
aaa
mov
mov
dec
inc
dec
test
mov
cwde
sbb
fnstcw
sar
adc
hlt
adc
push
shl
pop
adc
xchg
pop
xor
gs
jnp
cs
out
outs
adc
xchg
js
fisttp
dec
in
pop
add
jne
mov
mov
adc
imul
inc
dec
push
add
addr16
scas
fwait
imul
sbb
pop
fsubr
out
and
xchg
in
scas
jo
test
dec
mov
(bad)
call
pop
repnz
mov
aaa
repnz
sub
enter
adc
sub
xchg
sub
mov
xchg
pop
pop
bound
mov
cli
ss
inc
mov
xchg
cmp
not
stc
dec
ret
inc
and
push
retf
ret
jle
aad
(bad)
mov
add
cs
sbb
cwde
aad
nop
icebp
test
aam
jo
pop
sbb
mov
xchg
pop
addr16
aam
(bad)
cmp
not
jnp
test
xor
jae
mov
xchg
inc
sub
addr16
or
stos
pop
js
mov
mov
mov
add
lea
call
mov
ins
ins
popf
jnp
add
outs
(bad)
loopne
xchg
cs
and
and
mov
aas
adc
and
mov
sub
lea
jmp
ja
jb
movs
ds
in
xchg
mov
ret
pop
mov
jg
gs
stc
jle
pop
cmp
repz
pop
stos
pusha
inc
jns
daa
shl
addr16
mov
xchg
jmp
popf
cmp
pop
icebp
and
add
les
in
push
movs
mov
mov
popf
add
dec
jecxz
into
repnz
fsub
cli
or
lods
sbb
jno
sti
in
push
jnp
mov
sbb
es
test
add
sbb
mov
mov
mov
mov
jp
movs
push
nop
sbb
mov
leave
cmp
adc
add
aaa
sub
sub
add
adc
sbb
cmps
xchg
mov
cdq
inc
push
nop
pop
aad
bound
adc
(bad)
sahf
or
int3
mov
xchg
or
push
mov
aaa
cmp
jl
leave
popf
push
out
fsub
sub
in
and
push
xor
std
pop
xor
out
popa
adc
sbb
cmc
aas
stc
in
enter
jmp
fisubr
cli
dec
mov
fisttp
repz
sbb
cwde
sub
imul
lds
mov
daa
adc
push
imul
retf
fst
jns
sub
test
test
cmp
test
sbb
pop
push
mov
(bad)
mov
mov
mov
jae
xor
pop
test
scas
loope
cmps
jns
xchg
stos
cli
and
fwait
daa
or
nop
sahf
lods
push
(bad)
lock
jg
sbb
jg
pop
les
xor
xor
inc
movs
not
popf
rcr
cmps
repnz
icebp
movs
fstp
dec
cmp
cmp
push
jbe
and
jl
pop
adc
fwait
add
sahf
push
shl
mov
idiv
loopne
call
mov
or
mov
paddq
dec
movs
retf
sub
pop
popf
or
xchg
mov
dec
cwde
out
movs
in
adc
xchg
not
gs
jecxz
jae
cld
stos
sub
stc
outs
adc
or
gs
xchg
cmp
rcl
aam
dec
adc
mov
lock
sub
fcmovnu
xlat
jl
neg
push
nop
ret
mov
mov
les
fidiv
pop
(bad)
adc
mov
mov
or
pop
hlt
test
mov
hlt
pop
xor
xchg
sbb
sbb
stc
sbb
sbb
test
in
fld
cs
ins
push
leave
mov
dec
iret
fmul
adc
les
and
aas
sub
out
repz
or
jne
add
inc
mov
in
ja
jne
mov
fistp
jmp
pop
sahf
mov
clc
push
aaa
mov
ror
shr
mov
ins
inc
sbb
push
jmp
xchg
gs
sub
scas
test
pushf
jae
ret
repz
xchg
aaa
add
mov
inc
xchg
shl
xchg
push
and
rol
in
(bad)
pop
das
jmp
inc
mov
adc
pop
mov
mov
pop
push
les
mov
xchg
add
adc
cmp
mov
lock
push
jl
dec
mov
pop
test
jmp
xchg
jb
and
adc
adc
repnz
out
fdivr
push
mov
leave
retf
adc
xlat
cli
adc
cmp
shl
mov
jl
loop
or
(bad)
fdiv
mov
fcom
stos
adc
xor
bound
xchg
fwait
cdq
jmp
nop
cmp
sub
sub
pop
cmps
xchg
fs
inc
jle
loop
cmps
les
mov
ss
mov
lahf
sub
jb
mov
pushf
or
pushf
mov
mov
mov
jl
adc
shl
pop
add
jl
mov
sbb
push
or
imul
movs
je
push
cwde
fadd
hlt
ret
aas
sub
or
xor
in
push
js
icebp
push
pop
repz
add
xchg
scas
cld
mov
xor
xor
imul
jmp
xor
inc
and
mov
push
sbb
loop
jecxz
loopne
push
sub
jg
push
dec
mov
js
es
aad
mov
lahf
addr16
and
loope
ins
ror
cmps
mov
fimul
sahf
(bad)
fild
add
jae
sub
xor
outs
stos
jb
stos
movs
jmp
ret
mov
or
fsubr
fld
mov
mov
mov
add
sbb
and
inc
in
pop
push
ja
mov
adc
repz
xor
enter
test
das
or
and
dec
push
push
sbb
outs
aaa
and
enter
mov
retf
jl
fnstcw
add
ja
sbb
jno
dec
data16
xchg
add
push
scas
std
jecxz
push
dec
jmp
adc
pop
push
jge
xchg
mov
push
bnd
cs
push
sub
shl
push
mov
repnz
clc
xchg
push
les
sub
mov
pushf
inc
loop
xor
popf
dec
add
bound
adc
jb
adc
mov
xchg
loopne
outs
push
ret
in
gs
or
mov
imul
or
jg
out
cdq
shl
dec
in
je
repz
addr16
loope
push
test
stos
cli
popf
js
pop
test
mov
movs
scas
add
jbe
sub
aaa
jno
test
cmp
aaa
jecxz
cmovb
fcmovnu
xor
push
push
fs
cs
jge
xor
push
sub
dec
stos
sti
cmc
test
aad
mov
pop
inc
xchg
fadd
sar
(bad)
(bad)
ds
jno
xor
pop
push
xchg
inc
sti
mov
add
adc
imul
jb
jge
mov
jns
sar
in
bound
push
dec
dec
mov
dec
call
cld
idiv
xchg
jns
or
mov
add
inc
add
mov
add
scas
jns
adc
inc
test
lea
and
and
add
xchg
cwde
outs
jo
sti
jo
lea
call
mov
(bad)
mov
ret
movs
add
stos
dec
iret
add
dec
in
mov
xor
cli
xchg
popf
push
push
adc
pop
fst
dec
push
mov
mov
cmp
test
and
aad
cs
push
cmp
jg
fsub
jns
dec
sbb
and
xchg
(bad)
add
pop
and
xor
nop
jmp
stos
push
int
call
push
cmp
inc
in
(bad)
and
or
jmp
in
(bad)
xchg
fstp
lahf
ror
cmp
xchg
push
mov
pop
sub
ins
jo
mov
jbe
pusha
pop
cmp
in
mov
xchg
arpl
mov
inc
mov
xchg
out
(bad)
lods
or
sub
cmp
push
mov
aad
cmp
mov
sub
mov
fdivr
add
push
xchg
jne
jg
xchg
(bad)
cld
mov
jg
push
loopne
jg
jmp
jmp
call
addr16
jge
pop
and
xchg
dec
xor
movs
in
(bad)
pop
mov
xchg
sbb
or
ficomp
clc
add
add
outs
in
rol
pusha
ret
cmp
dec
jns
jae
test
jle
adc
std
adc
mov
push
mov
mov
lds
pop
xor
cld
inc
push
jno
xlat
sbb
lahf
dec
std
idiv
call
pop
mov
hlt
push
cmp
je
mov
cwde
or
(bad)
clc
xchg
stos
bound
jmp
adc
sub
cmp
mov
cwde
outs
and
clc
in
imul
sbb
aaa
(bad)
jg
mov
mov
fmul
pop
fcomp
aad
mov
add
(bad)
(bad)
fisttp
and
mov
mov
mov
pop
dec
es
fcom
sbb
xor
(bad)
jmp
push
mov
mov
jmp
push
(bad)
aad
call
mov
scas
mov
pop
sbb
jle
les
loope
push
xchg
inc
not
lock
xor
fimul
push
inc
movs
push
inc
mov
pop
inc
cmc
mov
push
dec
sub
add
cmp
in
add
sub
cmp
jle
sub
(bad)
repnz
ds
adc
push
lock
fmul
test
pop
mov
iret
mov
or
mov
aas
add
ins
loop
inc
addr16
xor
imul
mov
call
mov
loop
jno
pop
mov
scas
push
sbb
enter
addr16
pop
add
rol
push
mov
cwde
xchg
or
mov
or
fs
movs
std
xchg
push
xchg
pop
push
mov
sbb
loop
cdq
(bad)
mov
pop
jge
test
cmp
inc
sbb
push
mov
and
jge
pop
sub
and
push
into
movs
scas
stos
and
retf
and
cmps
out
ja
jecxz
nop
fild
and
rol
int
sbb
dec
jns
mov
jns
ret
fcom
or
and
leave
mov
lsl
xchg
cmc
sbb
mov
stos
xchg
lods
pop
pop
sub
and
lds
push
or
outs
shr
hlt
push
fcomp
sbb
pop
push
sub
iret
adc
gs
rcr
scas
pop
and
dec
jl
out
test
sar
add
adc
push
mov
lods
xchg
std
cmp
rol
into
test
ins
test
adc
cmp
jbe
jg
mov
pusha
outs
jecxz
add
movs
jae
in
retf
ins
dec
ret
outs
cmp
(bad)
stos
jae
in
inc
push
inc
mov
(bad)
jl
aaa
adc
xor
adc
jmp
and
or
hlt
pushf
rol
out
sahf
daa
sti
or
mov
sbb
push
lock
or
arpl
sub
sub
xchg
stc
(bad)
dec
shl
ficomp
cmps
sbb
jg
dec
push
stc
cwde
enter
or
xchg
mov
cmp
rol
pushf
cld
sbb
and
nop
icebp
mov
shr
aas
out
dec
out
sahf
out
test
mov
pop
je
aam
retf
jb
leave
or
jae
faddp
mov
dec
movd
or
inc
pop
das
cli
mov
fwait
lea
popa
mov
and
fdivrp
xchg
push
cmc
mov
lods
pop
cmps
push
or
jnp
add
mov
test
popa
out
and
mov
int3
jp
and
rol
call
out
scas
push
pop
in
cmp
mov
iret
jne
(bad)
movs
fstp
test
mov
inc
or
repz
inc
ss
sbb
imul
call
sub
xor
retf
pop
cld
jl
out
pop
jmp
sahf
std
cmp
in
cmc
inc
clc
jmp
dec
retf
mov
lock
xor
mov
mov
pop
mov
and
adc
call
(bad)
and
and
inc
fisub
inc
mov
ret
push
xchg
arpl
mov
rcl
push
enter
sub
mov
pop
mov
iret
shr
fnstsw
enter
cmp
jecxz
addr16
inc
les
call
mov
sar
aas
icebp
je
(bad)
cmp
cmp
jp
cwde
out
sbb
in
aad
sub
ret
test
lahf
xor
pushf
popf
push
jl
cmp
arpl
or
imul
sub
jo
jecxz
stos
dec
jmp
out
repz
jmp
bound
fcmovnu
dec
sub
ss
lea
stos
fmul
int
dec
nop
mov
fild
lods
in
push
(bad)
mov
scas
push
mov
mov
push
test
imul
test
cmp
ficomp
retf
dec
ret
xor
cmps
jp
neg
test
sub
mov
mov
dec
mov
and
cmp
ss
xor
call
mov
mov
sbb
(bad)
scas
aad
scas
mov
sar
add
aad
dec
push
das
fs
sbb
or
dec
stos
imul
fidiv
(bad)
push
inc
les
mov
pushf
jg
mov
pop
neg
in
cmp
imul
mov
mov
inc
mov
xor
mov
(bad)
jl
popa
and
mov
xchg
or
test
aas
mov
(bad)
icebp
fld
cwde
jp
mov
mov
(bad)
inc
pop
pop
int3
mov
out
cmp
fisubr
daa
xor
inc
js
enter
mov
les
js
jno
ss
inc
cmc
push
(bad)
vpunpcklbw
sbb
push
scas
arpl
jl
push
ins
add
mov
pop
pop
das
cmp
inc
mov
pop
adc
xor
inc
mov
cs
jb
mov
dec
jbe
stos
xchg
movs
ss
xor
aam
jle
popf
push
pop
cwde
xchg
mov
xor
test
push
push
out
or
idiv
xlat
sbb
mov
xchg
sub
test
std
je
xchg
pop
push
mov
sub
iret
pop
in
popf
dec
ja
call
lock
inc
fsubr
push
sub
stos
mov
loope
push
daa
pop
lea
pop
out
push
sbb
pusha
cwde
xor
xor
popf
dec
and
rcl
out
sbb
dec
enter
jo
les
mov
xor
mov
mov
das
out
mov
leave
xlat
sbb
mov
test
and
mov
stos
add
xor
mov
fnstenv
in
cmc
retf
retf
pop
pop
aaa
lods
adc
lods
pop
cwde
xchg
push
mov
push
call
test
neg
(bad)
stc
das
loop
test
cwde
jne
and
(bad)
retf
(bad)
stc
shl
xlat
jmp
dec
aam
add
add
fild
sub
inc
nop
addr16
cmp
shl
mov
lahf
or
sbb
out
inc
xchg
pop
mov
in
call
test
push
sbb
loope
xlat
sti
jnp
shr
in
repz
loop
xchg
ret
pop
xor
enter
cmp
jle
test
scas
not
inc
sub
stc
mov
stos
aas
mov
cmp
iret
sbb
(bad)
test
outs
push
popf
pop
adc
out
imul
pop
push
sub
(bad)
mov
jne
imul
push
mov
push
imul
(bad)
jmp
(bad)
sub
mov
fadd
mov
pop
sub
into
ret
pushf
pop
pop
sbb
pop
mov
cwde
fisttp
mov
sti
ror
xchg
call
cmp
repnz
test
fwait
jl
enter
fmul
pop
jnp
jb
mov
cs
(bad)
xor
jle
mov
bound
push
mov
push
daa
adc
xchg
mov
push
sbb
or
(bad)
bound
leave
shl
fsubr
ins
in
cmps
sub
addr16
pop
sub
fiadd
stc
aam
sti
ds
mov
cdq
icebp
ins
sub
aas
adc
mov
and
xor
jnp
loopne
loopne
sub
cmp
xchg
adc
dec
sbb
retf
fs
inc
or
sub
iret
mov
and
js
jmp
ret
ins
test
arpl
xor
push
daa
xchg
xor
or
xchg
dec
add
aam
addr16
lods
repz
xchg
sub
pop
pop
fdiv
cmp
mov
std
mov
push
cmp
mov
adc
pop
pop
into
addr16
fbld
cmp
push
scas
ret
sub
mov
xchg
packssdw
pop
out
cmc
nop
dec
push
or
mul
aaa
sub
cmp
jmp
in
adc
sub
loop
into
mov
loop
mov
loop
pandn
cmps
pusha
clc
test
jmp
jle
frstor
or
xor
add
inc
mov
push
adc
das
cmp
adc
in
dec
(bad)
aam
fdiv
add
mov
not
fidivr
retf
js
js
aas
xchg
pop
imul
jmp
sub
jmp
mov
jo
push
lods
adc
sti
pushf
inc
out
movs
sbb
and
jg
(bad)
cmp
jo
in
cmp
retf
mov
pop
jno
adc
inc
imul
scas
sbb
cmps
sahf
jp
loope
imul
icebp
inc
ret
pop
call
ds
jmp
jle
cmp
inc
push
xchg
sub
in
pop
in
mov
gs
dec
mov
add
das
pop
mov
aam
scas
jbe
dec
jg
test
mov
inc
push
test
add
das
fwait
inc
loope
ror
cwde
mov
inc
jp
push
push
jns
dec
fsub
loope
ja
push
xlat
out
rol
or
xchg
push
pop
into
and
jnp
loope
cli
xor
cmp
ins
stos
out
pop
push
mov
pop
fld
pusha
addr16
cli
adc
mov
push
dec
pop
test
jnp
test
or
xor
mov
push
lahf
push
dec
pop
mov
push
push
lea
xchg
mov
clc
jmp
add
(bad)
(bad)
pop
fs
sbb
jno
inc
push
loopne
adc
sti
adc
inc
push
dec
pop
or
repz
push
pop
int
movs
jecxz
addr16
jmp
mov
jno
movs
mov
(bad)
push
into
(bad)
cld
mov
push
jns
jb
xchg
(bad)
sub
adc
mov
shl
jmp
sbb
call
mul
xor
xlat
in
sub
jne
fist
sub
add
stos
inc
mov
popf
aaa
lahf
daa
push
push
jl
clc
lea
test
cmp
push
arpl
sub
mov
loope
and
mov
mov
sti
inc
retf
jae
cli
rol
lods
xor
sbb
repz
das
popa
ins
shl
fnstsw
dec
(bad)
push
inc
jne
sbb
add
xchg
jnp
arpl
xor
not
idiv
test
aam
jbe
xchg
imul
pop
sahf
shl
stos
dec
dec
scas
inc
or
or
sub
add
and
inc
jbe
mov
xchg
aad
cmp
and
or
mov
mov
les
and
jl
int
ss
mov
xchg
pop
loopne
inc
test
mov
xchg
xchg
push
jmp
sbb
inc
inc
adc
(bad)
mov
inc
adc
or
jmp
adc
imul
mov
mov
hlt
ja
call
and
call
call
stos
xor
jle
mov
sub
lea
pop
stos
adc
adc
outs
out
ja
and
or
test
cmp
adc
adc
dec
adc
and
jno
push
daa
jge
mov
adc
mov
adc
xchg
mov
test
mov
xor
repz
std
(bad)
mov
mov
(bad)
and
add
pop
xor
pop
pop
sbb
ret
adc
mov
mov
xchg
inc
mov
jmp
xchg
aas
out
cmp
mov
fisub
sbb
inc
movs
jbe
inc
pop
add
xchg
fwait
ins
and
pop
sbb
imul
push
rol
jne
iret
cmp
icebp
adc
(bad)
scas
or
fadd
clc
sbb
dec
inc
sar
inc
mov
xchg
mov
sbb
stos
xor
jecxz
int3
out
pusha
ins
sti
scas
(bad)
mov
stc
inc
jns
fidivr
ret
add
xchg
sub
or
hlt
dec
mov
gs
call
jge
fiadd
sub
scas
inc
(bad)
dec
or
mov
or
dec
pop
stos
inc
mov
xor
rcl
xchg
inc
inc
hlt
and
mov
mov
sub
ss
mov
shl
push
and
stc
cwde
mov
js
adc
shl
outs
or
pop
fdiv
loope
data16
ds
dec
xchg
mov
ja
test
adc
add
pop
movs
aas
jmp
add
push
mov
inc
cmps
push
test
pop
adc
dec
std
mov
scas
fbstp
inc
inc
cli
jecxz
add
pop
sbb
push
inc
inc
jmp
call
mov
call
sbb
imul
addr16
jge
mov
shl
jo
test
repnz
test
fcom
ret
addps
sub
inc
or
pop
mov
pop
and
jmp
push
mov
imul
sub
adc
xchg
popf
adc
mov
push
shl
rcl
cmp
lahf
xchg
add
out
arpl
ret
out
push
jae
mov
dec
adc
push
push
stc
mov
cwde
clc
cld
loope
push
cs
adc
aaa
fsubr
jno
dec
pop
sar
or
scas
ret
sbb
mov
pushf
outs
sahf
inc
xchg
adc
or
enter
dec
adc
mov
pop
push
(bad)
out
lahf
inc
lea
dec
sbb
les
idiv
fistp
lods
add
not
sub
sbb
data16
xor
sub
xchg
cmp
jne
cli
outs
cmps
or
mov
popf
test
sbb
test
cmp
imul
ret
add
popf
push
stc
pop
dec
xor
lock
ficomp
ja
les
ja
clc
xchg
fidivr
pop
cmp
adc
cmp
xor
cmp
movs
call
or
or
mov
clc
sbb
pop
ins
add
cmps
cli
adc
stos
jb
lds
popf
movs
mov
vpaddq
imul
js
je
lahf
in
not
stos
pop
stos
sub
mov
aas
iret
push
popa
jmp
ja
cmp
lock
jae
sbb
data16
mov
xchg
add
push
mov
neg
sub
and
movs
xchg
add
and
stc
out
mov
dec
add
xor
aad
iret
xchg
test
mov
outs
mov
ret
push
icebp
(bad)
out
daa
or
jg
sbb
sbb
pusha
cmps
add
xchg
mov
push
dec
clc
fstp
add
in
retf
cmp
sub
pop
imul
xor
or
or
mov
pop
jmp
enter
or
cmp
cs
(bad)
fisubr
loope
and
fisub
js
ss
add
jo
sbb
clc
repnz
cli
adc
push
ins
sub
std
dec
push
jno
leave
imul
bound
loope
cmp
xchg
push
sub
stos
sub
scas
cdq
mov
dec
push
leave
hlt
outs
mov
call
push
out
emms
inc
test
and
leave
mov
sbb
inc
iret
mov
pop
imul
inc
loop
xchg
and
(bad)
and
xor
or
pop
jg
mov
pop
or
cmp
adc
(bad)
sbb
scas
jo
sub
sub
scas
mov
jmp
enter
nop
jg
pushf
or
hlt
mov
movs
push
es
outs
popa
pop
mov
aaa
dec
aam
cmp
leave
mov
mov
inc
sub
enter
rcl
jo
mov
xor
popa
fistp
jb
test
mov
loop
mov
pop
xor
cdq
fcmovnbe
and
inc
movs
outs
sub
add
xchg
inc
xor
mov
sbb
push
adc
pop
cmp
setge
ja
ror
ror
pop
dec
les
inc
lahf
xor
push
retf
test
dec
ja
in
mov
out
mov
mov
add
add
ror
shl
cwde
push
inc
movs
neg
mov
std
movups
loopne
mov
in
xor
push
push
jmp
sti
or
test
sar
das
stos
add
das
or
dec
sub
icebp
sub
ja
js
sub
mov
aaa
xchg
das
js
inc
(bad)
repnz
inc
jno
(bad)
sbb
lods
cmc
adc
add
cld
inc
into
sar
push
dec
mov
jg
fidivr
add
mov
jne
aad
cmp
jecxz
cmp
popa
mov
mov
test
mov
add
cmp
js
and
arpl
or
jbe
push
fwait
bound
sbb
mov
test
es
sbb
test
daa
repnz
xchg
into
mov
popa
into
in
push
sbb
fbld
dec
mov
push
pop
call
mov
or
cmp
xchg
aam
fsubr
mov
das
mov
inc
js
xor
inc
in
xchg
sub
sub
push
fisttp
fst
pop
fs
jecxz
in
pop
fs
xor
stc
popf
popa
mov
int
hlt
sub
mov
rol
mul
inc
mov
xchg
scas
sbb
ret
mov
sbb
or
add
mov
js
nop
dec
mov
lea
mov
mov
push
push
push
(bad)
fmul
xor
sbb
xor
pop
addr16
pushf
fisub
out
jmp
lods
pop
adc
pop
leave
ss
test
jp
cdq
push
(bad)
mov
aas
rcl
in
pop
mov
in
push
cmps
jmp
cmp
sub
nop
jge
arpl
int
leave
sbb
xchg
test
push
mov
cmp
mov
and
sbb
or
aas
into
inc
xchg
add
xor
xchg
pop
jecxz
cmc
cs
inc
rcr
inc
sbb
lds
mov
and
jmp
or
not
push
es
pop
xchg
adc
mov
adc
fld
pushf
enter
out
scas
(bad)
call
sub
sbb
cmp
add
jg
xchg
(bad)
sar
pop
sbb
jl
xor
push
call
xchg
push
leave
out
movs
push
pop
scas
cmp
icebp
cmp
xchg
sar
popf
adc
pushf
outs
sti
cmp
test
enter
js
mov
mov
pop
fild
into
ds
jmp
mov
push
push
out
cmp
push
(bad)
ror
int3
jmp
movs
mov
cmp
arpl
dec
inc
imul
fdivr
sbb
jae
cmp
sub
fdivr
xor
pop
and
mov
hlt
je
nop
hlt
mov
jb
inc
xor
inc
xchg
cmc
or
sahf
or
sbb
out
xor
inc
or
test
and
das
out
popa
fbstp
sub
fist
mov
mov
sbb
fld
and
adc
arpl
cmps
push
sbb
inc
sbb
popa
fmul
in
inc
aad
xor
jle
jmp
inc
mov
xchg
push
loop
sub
sbb
sti
ror
dec
aad
mov
ret
xchg
test
dec
int3
(bad)
in
mov
retf
scas
mov
mov
(bad)
outs
nop
add
neg
mov
nop
rcl
shr
fwait
sub
cwde
mov
aad
lds
loope
push
std
xchg
in
jl
or
lea
leave
sub
and
jp
sub
xchg
jp
scas
mov
pop
mov
fnsave
mov
aad
mov
xor
ins
dec
push
dec
add
sub
adc
data16
jmp
xlat
inc
retf
and
rcl
jbe
fmul
ret
mov
cdq
sub
movntps
add
cld
push
nop
mov
mov
lahf
sti
mov
add
pop
add
rcl
cmp
dec
inc
mov
movs
jge
retf
cs
imul
xchg
sahf
lahf
mov
fstp
ror
lds
adc
in
imul
mov
push
aas
int
inc
xchg
adc
aam
sub
cmp
loope
rcr
into
stc
(bad)
ss
in
and
cvtps2pi
jecxz
fild
into
fisttp
cwde
movs
xor
mov
int3
nop
repz
xlat
cmps
pop
lahf
and
pop
or
cdq
xlat
stos
mov
out
cmp
call
movs
mov
xchg
sbb
loope
mov
lahf
mov
hlt
dec
mov
pop
cmp
mov
sub
std
mov
fucomp
js
(bad)
cmp
pusha
mov
loopne
sub
inc
out
xor
dec
jg
mov
adc
pusha
pop
inc
loope
inc
out
mov
cwde
das
out
cwde
mov
stos
rcl
mov
mov
push
js
xor
pop
stc
cmp
sub
sti
xchg
push
out
lock
jnp
movs
sub
jl
icebp
dec
frstor
rol
fcmovnu
pop
(bad)
mov
shl
fdiv
xchg
mov
mov
jmp
fsub
aad
stos
jmp
jo
xor
cmps
movs
test
mov
jne
out
sub
sbb
sub
pop
pushf
std
mov
test
das
dec
sub
mov
repnz
aam
adc
adc
mov
add
sbb
cmp
fwait
xchg
scas
push
adc
aas
push
adc
mov
sbb
inc
imul
push
dec
dec
rcr
into
mov
adc
ins
or
shl
icebp
jp
adc
fadd
stos
fild
fdivrp
retf
mov
in
jecxz
adc
fldenv
pop
dec
dec
mov
jmp
pop
mov
push
sbb
jno
mov
fsubr
cmp
repnz
and
sub
cmp
or
dec
xchg
mov
pop
dec
loop
sub
lea
cmps
loope
call
ss
jno
pop
push
sbb
sub
jb
mov
jmp
int3
mov
stos
out
mov
(bad)
clc
add
test
aas
and
mov
mov
cmp
in
mov
jbe
scas
popf
ret
lea
aas
xchg
lods
mov
mov
cld
pop
int
cmps
(bad)
adc
mov
dec
push
out
sub
ins
jmp
(bad)
shr
popa
add
and
fisttp
sbb
push
test
dec
pop
mov
and
daa
mov
xor
and
fisttp
and
push
fwait
inc
mov
jp
jne
inc
and
or
xchg
xor
cmp
dec
mov
and
mov
mov
xchg
(bad)
jbe
les
pop
shr
push
mov
xchg
cmp
cli
dec
mov
mov
mov
aas
sub
push
inc
sub
ja
jno
jae
jns
into
adc
xchg
inc
mov
stos
repz
scas
pusha
mov
ret
mov
inc
int3
adc
bound
mov
xor
xchg
imul
mov
mov
pop
jl
add
jns
(bad)
dec
movs
loop
mov
cmp
cld
push
das
rcl
xchg
sub
fistp
and
gs
sbb
setg
add
and
sub
xchg
push
sub
sub
xlat
xchg
or
(bad)
xlat
arpl
sti
arpl
mov
inc
mov
outs
leave
(bad)
sbb
(bad)
ror
sbb
loop
sbb
push
cmps
das
xchg
loop
inc
stos
loop
popf
daa
xor
jno
adc
das
sub
jo
fmul
push
xchg
push
sub
jmp
out
ret
sub
and
dec
das
popa
aaa
nop
(bad)
jb
cwde
pop
fcmovnu
adc
jmp
clc
mov
in
xchg
mov
push
out
dec
into
push
xchg
mov
retf
pop
out
fisubr
inc
adc
in
pop
iret
and
loopne
lahf
jnp
add
adc
cmp
mov
(bad)
push
push
push
xchg
cmc
mov
test
push
push
mov
push
ds
cmp
sub
int3
test
out
jmp
(bad)
and
data16
(bad)
daa
or
dec
and
fcmovbe
mov
push
popa
data16
mov
fcmove
aaa
cli
dec
pop
cmps
mov
jae
sbb
aaa
inc
lds
dec
xchg
push
test
mov
inc
in
bound
push
mov
jmp
popf
add
push
xchg
loope
dec
cmp
mov
nop
rcl
push
arpl
out
jecxz
add
outs
clc
sahf
stc
xor
fwait
jg
add
mov
sbb
fisttp
pop
xchg
les
jbe
sbb
rcl
adc
not
mov
stc
inc
outs
lds
cld
in
xchg
loope
fsub
aas
pop
adc
jmp
cmp
sar
pop
xor
xor
mov
adc
cmp
cmps
cmp
icebp
dec
xchg
xchg
jns
(bad)
mov
mov
sar
clc
(bad)
pop
sti
call
retf
mov
sbb
dec
pop
dec
ror
in
jmp
jecxz
gs
dec
(bad)
dec
std
or
and
js
inc
out
mov
or
movs
mov
cmps
arpl
mov
mul
sub
cmovp
stc
popa
inc
add
sub
nop
cmp
in
out
push
pop
sub
loope
mov
dec
pop
or
enter
les
lea
mov
add
inc
add
dec
popa
arpl
xor
pop
inc
lahf
mov
jg
cmc
fstp
movs
cmps
mov
ret
xchg
dec
(bad)
out
or
nop
and
sbb
adc
les
dec
pop
jmp
test
mov
aam
data16
mov
inc
scas
mov
add
inc
in
add
and
mov
xor
xchg
mov
jg
sbb
sbb
dec
pop
jg
dec
mov
pusha
dec
add
push
xchg
pop
add
cmp
cwde
sti
add
sbb
xchg
pop
or
jge
inc
(bad)
(bad)
pop
loop
inc
push
inc
lea
xor
push
leave
pushf
xchg
sbb
xchg
clc
lods
test
sub
push
inc
cmps
out
mov
push
mov
ret
adc
add
mov
lock
pop
sbb
rol
add
and
xchg
add
sub
retf
pop
jnp
xchg
xchg
sub
addr16
xchg
or
sbb
repnz
loopne
adc
jo
fild
push
add
sub
call
shl
mov
rcr
dec
jnp
xor
leave
mov
push
add
adc
imul
mov
jne
xchg
and
loopne
gs
mov
pop
rol
jmp
ret
out
ror
xchg
out
pusha
mov
fwait
icebp
lds
loope
adc
add
push
jl
ror
and
mov
push
in
dec
stc
pop
call
or
pop
aad
cs
ja
out
xchg
or
rcr
call
dec
mul
push
jb
inc
xchg
mov
mov
ficomp
aas
cmp
dec
xchg
arpl
pop
lods
imul
mov
in
push
ins
gs
jmp
xchg
or
add
icebp
cmp
adc
cmps
add
outs
test
sbb
lods
dec
xor
sbb
add
inc
adc
adc
sub
icebp
ds
out
adc
rcl
stos
add
ins
pop
popa
cmp
sub
jns
sub
fidivr
sub
push
out
adc
pusha
nop
adc
cmps
ret
(bad)
in
jnp
call
adc
mov
jb
inc
mov
inc
ins
mov
mov
pop
iret
push
shl
mov
mov
repnz
aas
and
sbb
mov
add
and
lahf
adc
jno
pop
pop
test
stc
and
cli
pop
test
mov
mov
pop
shr
popa
push
adc
test
jg
test
jl
jmp
push
(bad)
ss
jb
mov
pop
add
push
test
loop
jge
ins
lds
sbb
lea
add
in
adc
ins
jecxz
movs
mov
or
dec
xlat
sahf
pop
cld
ret
fwait
inc
push
shl
mov
icebp
fistp
pop
dec
or
pushf
and
xor
ret
mov
cmp
mov
and
retf
cmp
loope
pop
js
cmp
data16
jo
push
pop
int
sub
xchg
mov
fdivr
leave
cmc
and
adc
cmps
out
imul
push
pop
out
add
arpl
or
inc
jne
xor
xor
sub
mov
inc
sahf
movs
push
add
mov
and
ss
fwait
call
sbb
pusha
add
fwait
sub
adc
inc
call
mov
mov
popa
mov
mov
xchg
mov
loopne
das
(bad)
jmp
fcmovb
rol
inc
cmp
cmps
fstp
inc
movs
jo
push
fidiv
retf
xchg
inc
push
pop
jno
jmp
idiv
add
popa
push
test
push
pop
leave
aaa
xlat
mov
add
repz
mov
lock
cmc
and
jo
pop
loope
adc
cmps
and
inc
fiadd
in
mov
call
aas
jns
push
jno
jg
shl
dec
jge
ins
int3
test
pop
(bad)
jmp
xor
adc
push
dec
adc
aas
and
(bad)
xlat
cmps
lds
push
dec
or
retf
repnz
mov
aad
stos
adc
jmp
cmc
jo
sbb
(bad)
out
xchg
mov
cli
out
retf
xor
iret
lods
les
ins
and
mov
jge
fdiv
mov
push
adc
les
mov
stos
ds
mov
adc
imul
pusha
aad
mov
es
aas
xor
and
retf
pop
mov
or
(bad)
pop
and
push
fistp
push
(bad)
and
add
lea
jecxz
push
push
jg
jge
movups
fs
mov
sub
cmp
les
xor
test
lahf
pusha
mov
in
xchg
add
adc
dec
shl
push
xor
cmc
pusha
out
xchg
sbb
outs
aas
push
xchg
adc
and
scas
frstor
arpl
add
popa
ret
arpl
dec
pop
cmps
cld
mov
mov
out
imul
and
push
aam
xchg
dec
js
or
les
fwait
out
ret
clc
(bad)
std
sbb
and
ret
lds
inc
test
push
and
sti
iret
lods
shl
or
xchg
imul
mov
sti
mov
loop
out
add
pop
jg
icebp
pop
mov
movs
test
ins
lds
jbe
cmp
fnstenv
xchg
mov
lahf
out
jmp
outs
cmps
xor
mov
pop
and
xchg
ins
ror
jmp
(bad)
aam
shl
pop
or
xchg
jecxz
xchg
imul
(bad)
jmp
pop
add
sbb
cmp
inc
clc
loopne
out
sbb
dec
mov
loopne
add
(bad)
scas
push
jae
mov
outs
or
(bad)
jnp
push
int3
shl
mov
and
hlt
fstp
(bad)
jno
mov
leave
loope
pusha
xchg
gs
pop
fcom
lahf
pop
jge
ins
or
or
push
or
mov
jns
mov
adc
pop
imul
push
add
stos
push
mov
mov
push
nop
inc
lods
jbe
and
or
es
cmc
icebp
ss
sahf
sub
pop
jg
inc
mov
xchg
sub
sub
lods
adc
inc
adc
test
sbb
jne
aas
test
stos
mov
dec
cmp
dec
cmp
(bad)
jmp
adc
pop
cmp
icebp
mov
add
sar
test
popf
test
fcomp
xor
xchg
in
cmp
sahf
or
or
dec
mov
in
xor
(bad)
sub
mov
and
inc
lods
push
xor
nop
iret
popf
(bad)
or
lds
mov
mov
(bad)
or
repz
xchg
outs
(bad)
test
scas
mov
retf
xchg
or
adc
add
frstor
(bad)
lds
jnp
aad
and
xor
add
test
(bad)
sub
stos
inc
addr16
sti
ds
push
mov
sub
mov
jle
or
sbb
int
push
loopne
xlat
hlt
(bad)
mov
xchg
pop
add
pop
pushf
ss
dec
outs
cmp
mov
ret
ja
test
xor
xchg
push
call
sbb
das
(bad)
cmc
adc
popf
ficomp
jmp
js
pop
fnsave
test
mov
sub
inc
sbb
(bad)
shr
add
mov
repz
inc
(bad)
sbb
push
movs
(bad)
jno
shl
cmps
inc
sub
dec
imul
test
jo
adc
data16
add
loop
out
xor
xchg
mov
cld
push
xor
mov
cmps
sahf
clc
shl
mov
dec
mov
scas
push
cli
cmp
dec
aam
int
adc
push
mov
or
cmp
push
sub
retw
(bad)
aam
fwait
mov
neg
int
xchg
scas
cwde
push
and
retf
mul
cmc
jb
loopne
or
add
push
dec
loopne
addr16
jno
cmps
dec
popa
mov
outs
dec
xor
sub
test
aaa
and
repz
mov
jbe
stos
push
jb
int3
daa
push
into
mov
(bad)
fcos
push
cmps
push
mov
cmp
fdiv
push
push
cmovl
shr
test
out
xor
xchg
mov
sbb
xor
int3
inc
popf
leave
mov
adc
out
jmp
or
mov
test
xchg
jbe
arpl
or
not
es
sar
pushf
push
mov
(bad)
xchg
rcr
mov
pop
sub
cmps
pop
rcr
hlt
xor
mov
push
adc
scas
adc
jb
cdq
or
fist
jno
or
ins
push
cmp
sbb
test
fild
dec
aam
stos
jmp
xchg
xchg
leave
xlat
and
and
mov
dec
shr
or
mov
dec
into
or
sbb
sti
or
cmp
jae
cdq
jmp
fnstcw
or
outs
inc
mov
imul
sti
mov
lods
sub
inc
rol
daa
xchg
inc
out
push
retf
pop
pop
jle
pop
pop
int3
loop
jnp
out
clc
add
ret
movs
in
in
(bad)
mov
jmp
test
(bad)
out
pop
add
jno
(bad)
pushf
adc
popa
mov
ja
add
and
lds
mov
lea
mov
mov
loope
hlt
into
sub
mov
xchg
add
loop
iret
push
sbb
push
or
sbb
pop
xchg
clc
mov
into
push
iret
jns
or
stos
fbld
sbb
cmc
cmps
mov
iret
xor
mov
xchg
int3
xchg
jle
ins
fdiv
ins
imul
mov
out
outs
xor
xchg
fstp
gs
mov
lods
push
add
pusha
adc
dec
jp
jmp
rol
cdq
xchg
fwait
imul
mov
les
popf
cmps
xchg
ins
mov
sar
or
in
(bad)
jmp
and
xchg
inc
retf
cmp
test
mov
rcl
int
clc
test
mul
test
push
push
dec
cwde
inc
out
test
and
add
inc
xor
dec
push
mov
or
loop
mov
push
arpl
xchg
and
pop
in
or
sbb
in
jnp
and
fs
pop
jns
xchg
fimul
push
sub
and
ss
pop
aad
loopne
dec
add
popa
xrelease
xor
stos
and
int
add
and
dec
les
xchg
mov
out
icebp
test
mov
fwait
xor
xlat
pop
(bad)
pop
neg
and
fnsave
adc
mov
and
clc
(bad)
jae
adc
and
push
hlt
iret
stos
(bad)
clc
jmp
push
xor
in
outs
pusha
fisub
cmps
lds
je
xchg
mov
loopne
ret
push
cmp
xor
jmp
inc
stos
aam
ins
ror
loop
sbb
ret
inc
inc
adc
dec
call
out
adc
and
(bad)
mov
pop
test
dec
add
fwait
add
cs
adc
retf
or
jg
sbb
mov
cmc
ret
sbb
mov
xchg
inc
push
mov
das
mov
sar
cmp
sbb
cmp
fbld
jge
and
xor
sub
add
jge
aad
jmp
xchg
and
or
xchg
jo
out
dec
or
cmp
sbb
das
mov
es
fild
in
adc
clc
xchg
sub
push
pop
out
(bad)
rol
out
adc
and
or
push
adc
js
in
ret
fnstcw
push
rcl
or
mov
sub
add
pop
mov
inc
cmc
sub
jle
or
mov
jg
or
repz
add
clc
outs
cdq
xchg
int
sbb
fxch
mov
stos
jp
jl
sbb
mov
dec
imul
retf
iret
leave
sub
adc
fbld
add
xchg
sar
cmp
pop
and
mov
pop
outs
stos
sbb
pop
inc
inc
mov
je
clc
ret
out
sbb
mov
push
sbb
lahf
and
loope
pop
jecxz
mov
not
xor
xchg
test
arpl
int3
mov
dec
inc
clc
nop
mov
sbb
loope
repz
inc
jns
xchg
in
inc
call
dec
xchg
arpl
call
pop
xchg
out
jp
inc
rcr
mov
repz
jno
test
inc
adc
mov
jge
nop
xchg
adc
int
gs
fwait
stos
jns
xor
popa
fist
imul
test
xor
jo
lock
adc
inc
xchg
arpl
out
outs
cmps
test
shl
out
and
mov
jle
dec
(bad)
call
cmp
stos
lock
fstp
mov
test
sub
sub
inc
in
not
in
or
or
lock
mov
jmp
xchg
push
(bad)
mov
sti
sub
call
xchg
dec
fwait
popf
push
cwde
clc
mov
xchg
aam
add
fld
sub
test
popf
imul
push
fs
ins
add
dec
add
das
mov
push
jo
ror
enter
mov
dec
cwde
imul
xchg
fs
repnz
sbb
push
sub
mov
test
imul
mov
cli
pop
and
mov
push
imul
(bad)
and
stc
ret
fst
(bad)
cmp
out
pop
scas
inc
fwait
pop
xchg
(bad)
arpl
cmp
ror
dec
xchg
aam
ja
inc
jmp
jmp
cmps
dec
stc
ret
xor
mov
es
shl
lods
out
stos
mov
dec
inc
nop
mov
jbe
sub
inc
out
xchg
call
fimul
ss
in
mov
repz
cmp
das
clc
rcl
jns
(bad)
jno
arpl
scas
or
arpl
mul
adc
jne
retf
jae
jno
mov
clc
mov
pop
dec
xlat
sbb
dec
pop
dec
fdiv
(bad)
jmp
adc
iret
stos
sbb
ror
jne
pop
mov
adc
dec
mov
dec
das
int3
push
dec
test
enter
inc
cmp
clc
icebp
js
(bad)
outs
jp
jmp
clc
fimul
jmp
sub
imul
stc
jnp
fild
and
sti
cmp
sbb
mov
pop
push
sub
pop
or
xor
and
ins
sub
cdq
pop
jmpw
out
and
and
call
cld
outs
dec
sub
and
mul
fstp
inc
jns
push
fisttp
repnz
xchg
imul
enter
in
jo
jno
into
adc
(bad)
ret
scas
jmp
ja
scas
ret
aam
push
call
in
fld
mov
ss
fmul
mov
and
mov
jmp
mov
mov
dec
enter
test
xchg
xchg
stos
mov
(bad)
enter
daa
jnp
adc
int3
sar
inc
or
cmp
push
push
dec
jecxz
enter
repz
std
sub
sbb
jb
and
inc
mov
or
inc
jns
int
test
dec
ds
fadd
add
jle
mov
mov
and
loopne
fs
(bad)
and
jmp
scas
repnz
mov
jmp
or
pop
push
mov
popa
lods
ins
xchg
xor
(bad)
pop
in
stos
push
or
add
add
sbb
dec
fidivr
int3
push
add
test
lea
mov
fadd
sub
add
int3
(bad)
ficom
les
jnp
cwde
xchg
arpl
iret
push
xor
dec
xor
ss
fild
sbb
mov
into
add
retf
xchg
adc
mov
out
fsub
cmc
mov
cmp
lds
xchg
ins
je
mov
cmp
shr
hlt
cmc
mov
xor
mov
movs
les
dec
and
aaa
pop
mov
in
jg
pop
out
push
xor
mov
jmp
jnp
dec
mov
ja
xchg
(bad)
or
and
sub
(bad)
rol
jne
adc
xchg
cli
imul
mov
sti
addr16
out
repnz
or
inc
ja
out
sbb
xor
or
sbb
scas
es
inc
repz
lahf
std
ins
or
data16
mov
xor
jno
add
sbb
cmp
fbstp
sti
pop
mov
cmps
add
cmp
push
inc
xchg
add
ja
cmps
leave
or
xchg
pop
sbb
and
out
das
pop
pushf
jbe
jecxz
or
stc
nop
scas
loopne
cmp
or
xchg
fs
push
push
inc
or
sar
sbb
mov
jne
push
fist
lods
sub
add
xchg
push
imul
cmps
mov
fstp
(bad)
lahf
enter
inc
loopne
xchg
addr16
popf
or
scas
in
sbb
push
mov
mov
xor
lahf
cld
cwde
enter
inc
inc
(bad)
and
scas
hlt
sti
mov
ret
sub
xchg
les
inc
sbb
repz
bound
sbb
dec
pop
cld
(bad)
mov
adc
add
push
xchg
sbb
aam
mov
adc
and
jge
dec
push
arpl
and
push
mov
mov
mov
sbb
in
pop
and
adc
out
inc
dec
fs
inc
gs
test
popa
sbb
sbb
xchg
mov
inc
aas
test
dec
pop
int
mov
sub
jle
ss
mov
push
xchg
js
adc
fild
icebp
xchg
test
not
fmul
fwait
or
inc
mov
ret
cmps
xchg
lea
outs
pop
add
adc
xor
push
test
jmp
(bad)
adc
loope
arpl
dec
ja
mov
stos
cmp
dec
je
inc
xor
nop
mov
shl
push
lea
or
dec
add
hlt
mov
mov
call
inc
adc
pop
retf
xor
jle
mov
dec
sbb
xor
adc
je
push
mov
jmp
stos
sub
mov
push
aas
xchg
das
in
xchg
mov
cdq
(bad)
sub
mov
ficom
add
adc
push
in
cmp
mov
inc
mov
lahf
sub
mov
sbb
in
inc
mov
adc
cmp
xor
xor
xchg
push
xchg
aaa
pop
mov
test
sahf
xchg
bound
in
sbb
cmp
fldenv
retf
sbb
aas
in
push
adc
adc
ins
xchg
(bad)
sub
repnz
adc
sbb
clc
mov
test
(bad)
mov
mov
shl
mov
xchg
push
cdq
fsub
add
or
repz
sbb
xor
(bad)
ins
xchg
out
cmps
cmp
xor
jmp
xor
add
iret
mov
imul
pushf
push
ror
jmp
ret
cmp
mov
in
jns
(bad)
aam
add
or
sub
or
dec
jle
lods
cli
inc
mov
add
(bad)
leave
imul
daa
sbb
ja
je
jmp
pop
(bad)
mov
inc
cmp
add
mov
mov
inc
and
pop
push
jmp
jno
jb
retf
or
daa
push
popf
mov
dec
mov
aas
xchg
stc
test
(bad)
pop
jbe
call
push
std
sahf
fcmovnb
or
cli
cmp
movs
xchg
leave
dec
mov
fwait
adc
mov
inc
ins
cmc
ror
enterw
sub
dec
dec
shr
add
sbb
mov
ins
ret
test
jmp
icebp
xchg
jns
popa
adc
test
lock
push
rcr
pop
std
es
inc
add
adc
push
add
jmp
add
sub
pop
pop
cmp
mov
push
in
inc
int
(bad)
jb
movs
inc
enter
or
mov
arpl
adc
stos
aam
in
adc
out
movs
scas
outs
dec
sbb
adc
jge
cmps
in
sbb
xchg
add
call
outs
mov
(bad)
int3
fild
test
in
inc
cmps
ins
(bad)
and
add
js
lods
mov
popa
and
cld
or
push
and
out
outs
call
push
inc
adc
dec
push
je
test
iret
imul
or
jge
stos
add
push
aaa
imul
iret
add
out
stc
dec
fimul
mov
pop
movs
sub
sub
and
push
xchg
sub
out
jl
xchg
push
mul
daa
addr16
inc
dec
cmp
idiv
push
cmp
add
les
cmps
popa
cmp
cmp
push
stos
pop
das
sbb
xchg
add
pop
pop
iret
dec
xchg
push
fldl2e
imul
and
rcr
pusha
enter
cmc
lahf
mov
icebp
mov
push
jo
fs
push
pop
iret
dec
(bad)
mov
in
cmp
in
les
jg
inc
pop
mov
gs
push
loope
repz
es
or
pop
xchg
jnp
mov
das
mov
xor
mov
cs
jne
cmp
and
addr16
mov
enter
pop
mov
jnp
jne
loop
cli
pop
rol
mov
adc
ins
imul
sbb
dec
leave
neg
ret
push
adc
call
jmp
fisttp
(bad)
cmc
rol
or
cmc
icebp
add
repnz
push
js
outs
and
mov
nop
push
pop
dec
pop
shl
jge
push
out
lea
sub
or
ja
pop
inc
push
sub
ds
gs
dec
ror
push
jp
add
push
ins
adc
push
or
mov
dec
sbb
inc
jmp
push
inc
xchg
ss
cld
sar
aam
jns
sub
push
ins
aad
dec
jg
xor
shl
mov
sub
aas
fild
sub
mov
sub
dec
dec
pusha
pop
jno
and
dec
cmp
mov
push
and
mov
(bad)
mov
mov
sbb
xor
xor
aad
cld
das
mov
push
mov
sub
jle
repz
pop
mov
cmp
and
cmc
pop
std
imul
xchg
(bad)
mov
sbb
repz
fld
cmp
sahf
xchg
cwde
addr16
outs
jo
ret
cmp
(bad)
mov
push
add
xchg
sub
repz
nop
popf
rol
aas
icebp
add
and
inc
je
mov
(bad)
ds
cs
mov
push
push
stos
data16
fldenv
popa
adc
dec
pushf
cmps
retf
push
inc
cmp
mov
pop
cmps
cdq
lock
fdiv
in
sub
int
loope
in
loopne
xchg
fcom
jmp
loop
(bad)
dec
movs
sbb
pop
add
clc
pop
fwait
and
inc
inc
jecxz
out
leave
cmp
gs
jl
rol
push
gs
das
jne
jg
jg
push
mov
jmp
out
add
sbb
call
ror
call
jge
test
sbb
jnp
test
(bad)
sti
mov
loop
push
and
jae
ss
add
(bad)
mov
pop
dec
xor
call
add
xchg
jmp
std
cmps
fist
xchg
xchg
rcl
adc
adc
test
call
dec
hlt
dec
push
test
push
mov
mov
xchg
xchg
xchg
sbb
pop
add
xchg
mov
sub
test
xchg
ins
cmp
cmp
nop
jne
mov
aam
jo
push
push
mov
dec
es
lahf
inc
xor
dec
outs
xor
inc
mov
or
ins
aam
fwait
inc
daa
(bad)
loopne
mov
jg
jg
push
sub
and
arpl
mov
outs
lahf
scas
sub
movs
lahf
and
sbb
out
ds
and
cmps
pop
paddb
gs
adc
pop
cli
shr
rcr
and
aaa
mov
repz
mov
and
xchg
jo
jmp
mov
sub
mov
sub
jmp
pop
in
mov
popf
mov
fldcw
js
mov
retf
call
pop
mov
push
mov
jnp
push
pop
fdiv
icebp
fmul
test
aas
(bad)
mov
mov
jne
jge
add
sbb
dec
xchg
push
ret
outs
dec
imul
test
adc
ror
mov
ins
aam
inc
or
pushf
lds
(bad)
lahf
int
das
dec
test
out
jg
jmp
daa
dec
mov
std
push
inc
pop
push
xchg
pop
mov
test
xchg
pop
add
jae
test
ret
fs
mov
cli
fcom
repz
push
arpl
push
clc
mov
sub
call
xchg
in
add
sbb
sub
je
or
gs
inc
fucomi
(bad)
mov
stc
imul
cmp
dec
xchg
dec
inc
mov
push
mov
test
dec
outs
pop
xlat
test
(bad)
(bad)
loopne
xchg
mov
xchg
sub
inc
xor
mov
add
gs
push
in
jno
imul
cli
mov
out
scas
je
lods
jle
(bad)
pop
cmp
pop
adc
jl
mov
push
jl
sti
push
fld
push
rcr
inc
callw
jp
data16
int3
cmc
daa
(bad)
xor
mov
mov
jl
test
pusha
jmp
or
dec
pop
jae
add
(bad)
add
push
sbb
jns
scas
mov
cmp
dec
jp
cmp
xlat
adc
(bad)
(bad)
jns
fwait
rcr
aam
lock
pop
mov
jno
int
js
adc
or
sbb
xor
cwde
mov
jge
cmp
mov
fwait
push
mov
imul
or
add
jge
(bad)
stos
in
push
push
pop
dec
fsubr
ss
arpl
pop
call
push
popf
mov
daa
jae
add
mov
xchg
mov
mov
push
mov
cmp
jg
(bad)
cmps
out
push
pop
das
gs
and
add
dec
pop
pop
sub
popf
jno
push
scas
cmp
shr
lea
mov
ret
cmp
xor
mov
sbb
xlat
idiv
sbb
repnz
inc
adc
loope
(bad)
fninit
or
dec
ror
jne
clc
int3
in
pop
cmp
mov
mov
jno
adc
jns
call
adc
mov
pop
xor
dec
movs
fiadd
dec
dec
lods
mov
es
movs
pop
out
pop
inc
(bad)
sbb
sahf
dec
adc
push
sub
dec
jnp
add
dec
mov
stos
sbb
jmp
(bad)
mov
arpl
or
push
add
jmp
xor
hlt
jl
out
pop
xor
jge
mov
aam
push
xchg
loope
daa
in
cmp
jl
bound
push
xchg
jb
dec
movs
neg
sub
daa
cmp
in
call
in
(bad)
jmp
xchg
add
fimul
mov
add
(bad)
lods
and
jo
mov
mov
int
inc
ins
scas
dec
mov
ja
mov
xor
cld
in
mov
or
scas
outs
mov
test
ja
sahf
sahf
mov
js
push
rol
cmps
jbe
xor
inc
rcr
xchg
int
ds
mov
add
call
fld
shr
dec
pop
out
movs
aad
lds
jno
shl
aad
in
fwait
fwait
pushf
cmp
jmp
mov
sbb
jno
mov
hlt
(bad)
mov
les
mov
xchg
lahf
cli
scas
mov
and
sub
push
std
ficomp
shr
test
sub
retf
test
add
cmps
jmp
add
ret
or
retf
fild
mul
inc
jnp
cmp
es
or
xchg
test
pop
stos
fisttp
cs
movs
movs
int3
xchg
add
cmc
jp
or
call
dec
sti
sar
adc
(bad)
xchg
adc
cmp
adc
mov
mov
push
push
xchg
fistp
xlat
mov
fwait
neg
xchg
cmps
pop
call
in
sub
pop
pop
adc
ins
adc
mov
ret
and
ins
sub
mov
jo
add
xchg
pop
imul
or
cmp
fadd
(bad)
push
jns
cwde
dec
push
rcr
push
push
adc
inc
push
fadd
jno
out
mov
xchg
cmp
call
mov
and
mov
inc
test
mul
cmps
mov
ins
out
pop
aam
push
and
push
or
out
mov
mov
xchg
mov
adc
xor
inc
xchg
ins
mov
retf
fsub
mov
mov
rcr
test
out
cld
push
addr16
xchg
lea
cmp
imul
mov
or
shr
mov
mov
sub
and
sbb
jno
jns
(bad)
frstpm(287
in
fcmovb
jg
nop
ss
in
mov
fiadd
scas
inc
loop
jae
jmp
add
adc
mov
mov
imul
push
sub
mov
pop
mov
xchg
push
or
adc
(bad)
dec
jg
jb
push
psllq
ds
mov
es
dec
or
loopne
daa
or
sbb
pop
ss
cmp
push
mov
sub
adc
or
dec
mov
fstp
fwait
ds
xchg
unpckhps
xchg
and
pop
jbe
popf
push
leave
mov
inc
js
cmps
or
aad
cld
dec
shl
(bad)
cli
jno
cli
cmp
xchg
iret
popf
movs
cli
dec
loopne
fidivr
icebp
pusha
test
dec
push
or
sbb
aam
xchg
(bad)
push
xchg
jl
and
add
(bad)
leave
in
rol
sub
xchg
mov
adc
icebp
pop
rol
adc
add
je
and
sub
ins
jg
and
pop
cmp
(bad)
jae
jg
mov
nop
jnp
ss
(bad)
call
out
jmp
data16
and
or
or
xchg
ror
leave
nop
jno
(bad)
mov
sbb
int3
inc
mov
stos
pop
scas
sub
in
xchg
loope
mov
sbb
mov
pushf
call
sub
fimul
and
mov
sti
jo
dec
mov
push
popf
push
mov
mov
jo
addr16
aad
or
stos
sbb
cmp
mov
jecxz
and
sbb
in
cmps
sub
jnp
adc
out
test
sub
call
(bad)
ret
stos
xor
gs
into
sub
lock
icebp
gs
push
fimul
adc
pop
add
xor
aaa
pop
les
mul
lock
fbstp
add
xchg
jne
aad
mov
pushf
or
cmp
mov
outs
out
idiv
xor
int
mov
es
dec
iret
mov
ss
lahf
inc
pop
out
dec
out
adc
pusha
enter
mov
adc
sbb
jno
(bad)
jecxz
and
arpl
mov
dec
jp
(bad)
fldenv
enter
pop
xor
xchg
imul
bound
push
pop
sbb
or
jbe
pop
aaa
cmp
inc
cli
and
jg
ja
or
shl
cmp
lds
data16
xchg
je
idiv
(bad)
xor
scas
ret
lods
adc
aaa
inc
ret
addr16
lds
stos
pop
nop
pop
data16
cld
pop
(bad)
aam
clc
pop
stos
in
pop
loopne
xor
adc
repnz
inc
ret
mov
dec
sub
jecxz
push
out
push
inc
popf
or
or
push
ds
and
and
sbb
stc
and
sahf
add
push
xor
inc
rol
out
in
(bad)
jne
out
cwde
stc
shr
xor
jno
ficom
mov
mov
mov
mov
push
(bad)
cli
mov
fimul
loop
sbb
dec
adc
hlt
sub
or
cs
iret
addr16
fdiv
mov
loopne
repz
xchg
les
fild
add
mov
mov
push
or
mov
mov
push
es
mov
daa
dec
loop
bound
pop
xor
popf
leave
stos
add
imul
pop
cmp
enter
or
xor
cld
xchg
jmp
xor
icebp
pusha
arpl
fidivr
push
lds
gs
and
push
inc
scas
push
fidivr
xor
pop
vmovups
mov
sub
test
inc
adc
call
push
int
in
dec
imul
sub
sub
or
jbe
aam
test
hlt
sbb
bnd
js
inc
outs
and
jg
jle
cmp
int
push
(bad)
xor
lds
mov
sbb
jge
push
loop
fcomp
mov
into
jle
xlat
int
and
adc
push
es
pusha
sub
fs
adc
popa
add
fwait
xor
shr
adc
lds
or
imul
cmp
pop
aam
dec
(bad)
pop
cmp
fadd
dec
push
fisubr
imul
in
or
and
pop
mov
inc
stos
sub
ins
pop
test
cli
pop
fild
pop
dec
push
mov
push
push
lods
or
pop
into
inc
mov
sub
jp
dec
test
fisub
xchg
out
xor
arpl
or
sar
dec
imul
push
cmp
pop
xchg
mov
xor
jp
not
jns
outs
rcl
pushf
mov
mov
xor
lds
mov
xor
mov
mov
mov
sbb
xor
add
push
add
mov
or
cmp
cmp
or
xor
sbb
ins
mov
push
sar
cmp
adc
jg
and
iret
imul
jns
aad
or
sub
gs
je
cmps
push
jae
mov
mov
mov
fdiv
sbb
(bad)
ret
stc
push
lahf
dec
xor
adc
dec
hlt
inc
jae
cmp
mov
pusha
fld
mov
iret
fstp
xchg
cmp
lock
lahf
out
adc
dec
iret
fisub
int
into
xchg
in
mov
xor
push
retf
push
mov
or
adc
mov
adc
mov
shl
inc
iret
jmp
lahf
mov
inc
pop
popa
(bad)
call
add
jl
push
mov
lods
fs
and
(bad)
jle
or
mov
dec
adc
mov
add
push
les
sahf
in
push
xchg
mov
not
(bad)
movs
iret
lea
or
mov
mul
out
cmp
div
push
or
push
add
icebp
in
and
or
popa
pop
ins
sbb
cwde
jp
add
mov
xchg
cli
loop
dec
pop
fild
mov
push
call
(bad)
pop
call
iret
mov
repz
rcr
dec
ins
aaa
repz
fild
retf
test
inc
mov
push
repz
cmp
inc
outs
popa
loope
sar
jnp
repz
(bad)
(bad)
push
retf
ret
add
dec
xchg
leave
je
xchg
jae
vmovsldup
dec
xlat
pop
sbb
pop
mov
and
ret
and
bound
push
mov
jecxz
sbb
xchg
add
pop
inc
scas
cmp
enter
repz
cdq
out
ret
out
fisttp
or
or
(bad)
pop
mov
inc
sbb
fidiv
sbb
jp
pop
mov
rol
mov
add
cmp
cdq
jmp
mov
or
or
or
fdivr
sbb
imul
sahf
call
inc
cmp
ja
add
add
nop
push
sub
inc
mov
pop
mov
pop
je
enter
rcr
(bad)
loopne
add
dec
ret
sub
xlat
mov
push
xchg
xor
xchg
and
jecxz
xchg
jne
and
ja
inc
xchg
push
jno
rol
jne
das
scas
lods
add
pop
mov
xchg
shl
test
in
lahf
pop
outs
add
in
rol
(bad)
loopne
loopne
push
test
cmc
mov
in
out
xchg
mov
sbb
jbe
mov
sahf
aas
(bad)
loopne
leave
stc
nop
sahf
add
cmp
mov
aad
cmc
sbb
pop
call
pop
xor
loope
push
adc
fild
repnz
adc
add
xchg
or
cld
pop
lahf
cmc
ss
daa
jle
jmp
jb
(bad)
mov
jmp
cmp
sbb
hlt
push
stos
push
je
and
(bad)
rol
lods
add
(bad)
imul
gs
xor
push
or
adc
push
jbe
add
mov
inc
call
pop
ins
ficomp
loope
sbb
retf
jmp
movs
mov
out
test
rol
mov
dec
ror
icebp
jo
jne
dec
mov
arpl
push
dec
(bad)
rcr
cmp
div
outs
ja
in
outs
sahf
xchg
or
ja
test
adc
push
mov
arpl
pop
add
or
cmc
outs
inc
dec
loopne
dec
cld
ss
mov
test
popf
cmp
dec
gs
and
pop
push
mov
jo
jb
xchg
fcmove
sub
iret
jmp
or
dec
movs
fwait
or
sub
aam
cmps
or
xchg
imul
rcr
add
hlt
dec
fild
mov
stos
or
icebp
scas
fld
loop
sar
fldenv
jl
sub
iret
dec
sbb
add
cmp
ret
inc
lahf
(bad)
sbb
sbb
sbb
addr16
fld
mov
out
fadd
add
imul
scas
push
mov
rcl
test
mov
test
inc
mov
push
add
mov
cmp
or
sti
or
adc
es
pop
sub
mov
xor
leave
pop
dec
mov
js
(bad)
mov
repnz
cmp
mov
or
adc
jmp
int
inc
stos
xchg
inc
inc
xor
in
cdq
das
cmp
in
out
test
xor
int3
pushf
(bad)
out
scas
popa
in
mov
pop
pop
mov
int3
scas
dec
sub
aaa
in
adc
jecxz
mov
mov
in
jmp
dec
xor
pop
stc
mov
jecxz
je
jmp
sbb
jge
loop
call
aaa
jmp
rcr
sbb
mov
jg
sub
and
add
dec
xchg
ja
sbb
add
dec
ror
sahf
jne
xchg
push
inc
xchg
adc
pop
aas
jns
push
mov
les
xor
fidivr
dec
outs
clc
push
adc
rcl
pop
das
pop
dec
dec
inc
mov
enter
pop
(bad)
or
xchg
xor
push
inc
out
daa
xor
addr16
loopne
ja
dec
jmp
cmc
or
fld
xchg
cdq
outs
inc
xchg
(bad)
cmps
scas
aaa
daa
outs
movs
js
push
int
cli
dec
pop
aad
xchg
aam
stc
adc
jne
test
add
pop
sbb
addr16
stc
pop
call
push
adc
push
sub
out
jne
out
or
adc
mov
xor
jmp
mov
and
sbb
inc
call
xchg
test
mov
fidiv
aad
ja
push
xor
and
push
dec
sti
mov
push
and
and
ds
aas
adc
lea
push
xlat
rol
add
push
jle
in
and
pop
mov
div
fwait
int3
inc
ins
inc
movs
popf
mov
bnd
addr16
push
mov
ins
add
adc
int
cmp
cmc
enter
mov
sub
stos
pushf
pop
xor
dec
add
sbb
xchg
xchg
cmp
mov
jbe
fcomp
cdq
jecxz
lods
mov
add
sbb
push
aas
out
pop
fcomp
hlt
push
jg
ret
pop
xor
dec
call
stos
sti
popf
fstp
rcl
mov
mov
jno
call
adc
jns
push
or
in
mov
(bad)
int
les
sub
sbb
sub
cmpxchg
arpl
test
int
add
push
out
add
jae
hlt
push
xchg
je
xlat
mov
adc
jmp
xor
cwde
or
xchg
popf
into
pop
int
and
iret
push
cvttps2pi
adc
jno
mov
or
jmp
xor
loopne
loopne
fistp
cmp
not
retf
inc
xchg
mov
loop
iret
out
call
mov
xlat
fwait
xchg
lds
bound
test
mov
mov
lahf
imul
push
mov
into
fs
xor
mov
cmp
call
push
dec
push
imul
mov
aaa
sbb
ffreep
jbe
push
sub
jmp
mov
sbb
cmp
cmp
repnz
dec
sub
jp
arpl
jge
sub
not
dec
jg
bound
outs
adc
bound
mov
out
push
sti
test
jns
and
retf
sub
adc
push
rol
inc
cmp
nop
je
push
pop
inc
stc
retf
mov
sub
dec
pop
pop
mov
jmp
fwait
mov
and
pop
stc
cwde
mov
gs
movs
aas
mov
loopne
retf
mov
(bad)
fadd
(bad)
mov
sub
sahf
adc
fsub
add
jnp
lahf
inc
(bad)
scas
push
and
jecxz
pop
shl
sub
xchg
sbb
adc
cwde
jge
fsubr
xchg
lds
pop
and
xchg
test
fs
fwait
sbb
cld
leave
daa
inc
sub
add
add
mov
call
rcr
dec
sub
jg
inc
test
imul
push
out
or
or
in
push
pop
dec
mov
jg
and
int
les
or
push
daa
push
push
mov
push
neg
fstp
and
or
push
test
mov
adc
mov
pop
ror
mov
add
out
jmp
xlat
nop
mov
dec
stc
push
shr
pop
pushf
pop
jl
ror
sbb
add
in
retf
popf
daa
repnz
(bad)
xchg
jmp
fdivr
dec
sbb
call
mov
outs
sub
xlat
add
mov
ror
movs
or
(bad)
icebp
icebp
cmps
test
dec
mov
mov
test
out
fndisi(8087
push
mov
inc
or
jp
mov
mov
push
xor
xchg
cli
push
rcl
cmc
repnz
fwait
popf
or
fdiv
in
pop
and
lods
dec
std
arpl
test
adc
mov
mov
sub
dec
test
enter
or
mov
in
nop
lock
and
(bad)
mov
jae
stc
daa
adc
lods
push
or
mov
cmp
push
mov
add
ret
and
ins
pop
xchg
jp
in
xor
retf
scas
adc
xchg
ror
fisubr
and
jl
aaa
dec
xchg
pop
into
(bad)
push
iret
mov
retf
cmp
daa
sub
mov
lds
mov
inc
test
sar
adc
pop
ficom
loopne
push
or
inc
(bad)
sub
add
pusha
cld
aaa
aam
and
test
(bad)
xor
ret
xor
addr16
inc
fist
jmp
inc
test
jae
out
out
and
ret
mov
xchg
lods
pop
mov
pop
push
xchg
out
popf
xor
adc
dec
fldz
or
data16
aaa
jns
inc
cmp
mov
mov
jmp
mov
add
pop
out
cwde
pop
push
std
mov
sar
rol
(bad)
in
add
leave
mov
xor
test
push
sbb
fs
push
movs
push
mov
into
push
and
popa
retf
in
cmps
lds
scas
dec
(bad)
out
add
pop
jae
rol
or
sar
push
loop
xchg
stos
jae
(bad)
mov
and
mov
jmp
inc
xlat
movs
and
stc
icebp
mov
xor
and
jno
call
(bad)
xchg
movd
inc
mov
or
jge
inc
or
dec
sub
jbe
aam
out
jp
inc
xchg
sbb
pop
cdq
adc
call
dec
lods
fist
and
int
add
dec
mov
or
adc
adc
inc
stc
ja
fwait
cwde
mov
jecxz
jge
std
loop
das
fdivr
adc
imul
inc
out
repz
mov
neg
call
movs
push
sahf
enter
sbb
adc
push
mov
pop
in
cmps
push
lods
and
nop
fnstcw
sub
lock
inc
add
test
(bad)
cld
dec
sub
xchg
in
sbb
push
test
outs
pushf
xlat
or
jl
adc
adc
cwde
fisub
push
and
repz
mov
and
je
pop
out
cmps
inc
xor
jmp
ror
repz
cmps
cld
mov
or
scas
(bad)
call
adc
gs
imul
cmps
lahf
rol
xor
inc
sbb
imul
inc
xchg
adc
daa
out
cwde
stc
jmp
mov
rcl
add
neg
mov
retf
cmp
jo
call
scas
xchg
call
daa
and
fisttp
mov
push
(bad)
sbb
sbb
call
jmp
(bad)
mov
hlt
cmp
sub
lds
sbb
addr16
pop
and
ret
jle
jno
(bad)
adc
push
add
push
(bad)
leave
add
cwde
jl
fsub
sbb
push
or
lods
mov
cwde
dec
cmp
add
out
mov
adc
adc
pop
scas
popf
inc
xchg
sbb
mov
push
es
loopne
mov
sub
std
fldenv
mov
push
push
mov
iret
inc
es
inc
or
jmp
push
pop
(bad)
(bad)
into
mov
out
ja
adc
call
out
stos
leave
aaa
xor
lods
add
jmp
pop
push
enter
xchg
ins
mov
out
out
sub
out
es
pusha
aam
retf
mov
mov
inc
sub
lods
xor
cld
adc
jns
xchg
push
sbb
test
or
add
cmp
shr
mov
jmp
mov
mov
test
sbb
add
shr
or
pop
dec
adc
and
add
adc
sbb
in
dec
dec
jnp
pushf
movs
mov
or
mov
ins
push
jmp
adc
iret
push
(bad)
pop
pop
aaa
sub
lods
mov
dec
icebp
lahf
outs
pop
push
mov
ffreep
sbb
fisubr
sbb
shl
icebp
lods
mov
add
clc
jns
ss
xchg
mov
loope
imul
sub
cmps
xchg
fwait
js
test
sub
adc
or
mov
adc
sub
ins
mov
or
(bad)
mov
and
jne
fisub
mov
cs
xor
sbb
fstp
sub
cwde
test
cmp
aas
push
mov
push
fist
or
cld
enter
sbb
and
clc
mov
jle
cmps
cmp
into
hlt
cmps
mov
sbb
push
mov
in
add
xchg
lds
daa
jp
outs
mov
jg
pushf
sahf
stos
sahf
push
fstp
mov
sub
push
out
push
add
retf
aas
inc
dec
sbb
add
mov
add
pushf
hlt
dec
push
pushf
cmp
aam
dec
push
dec
xchg
(bad)
movs
cmp
lods
daa
mov
or
cmp
test
sbb
retf
push
test
pop
jns
(bad)
and
lahf
sti
xchg
adc
adc
sub
mov
repnz
inc
imul
fnstcw
leave
or
and
push
cmp
ds
data16
or
stc
ja
daa
jo
scas
push
lods
mov
out
cmc
add
cli
sbb
pop
movs
ret
push
push
sbb
xchg
jns
call
xor
jp
mov
(bad)
adc
int3
xchg
inc
mov
add
(bad)
in
add
xchg
iret
mov
test
mov
pusha
mov
ret
push
adc
and
xchg
inc
sbb
ja
jnp
sbb
movs
jmp
pop
scas
fldcw
outs
addr16
leave
mov
bound
in
test
or
rcr
in
daa
lds
ins
cdq
nop
mov
dec
mov
mov
push
cwde
ret
mov
cmps
cmc
pop
rcr
jno
cmp
sub
ins
ret
je
call
fwait
les
dec
aaa
inc
repnz
not
dec
xchg
adc
pop
mov
mov
inc
(bad)
ins
jp
mov
sub
outs
fwait
mov
(bad)
daa
(bad)
retf
dec
sub
fmul
ins
jmp
aam
dec
push
fidiv
aad
inc
jb
lea
xchg
(bad)
xchg
jecxz
xchg
add
inc
iret
and
cmps
sub
xlat
push
sbb
inc
fwait
bound
lahf
sti
push
and
mov
jb
jmp
xchg
ja
xlat
aas
push
test
xchg
cmp
sub
movs
mov
(bad)
pop
adc
jecxz
mov
inc
push
mov
or
(bad)
mov
dec
cmc
(bad)
mov
jno
cli
xchg
mov
loope
add
xor
xor
jl
lea
inc
leave
fwait
inc
fisttp
cmps
inc
inc
sbb
outs
sbb
retf
cmp
rcl
dec
in
das
out
pop
popf
jecxz
push
add
pusha
in
and
xchg
jl
xor
lahf
sbb
shl
stos
inc
adc
hlt
push
pop
jmp
pop
(bad)
repnz
push
repz
jmpw
stos
mov
pop
and
addr16
into
(bad)
pop
dec
mov
retf
dec
mov
loop
leave
(bad)
(bad)
rcr
int
cmp
jge
xchg
mov
jp
out
es
and
mov
movs
mov
vpmacsdqh
jb
sti
sub
movs
jge
idiv
jb
inc
sti
or
ror
cli
test
adc
xor
stc
mov
rol
dec
loope
adc
ficomp
xchg
clc
movs
scas
and
push
rol
cmp
push
sub
les
or
cmps
ret
and
inc
and
push
sbb
jp
rol
push
sub
add
mov
adc
cli
imul
fsub
out
addr16
jnp
xor
fisttp
jle
push
mov
dec
jns
out
imul
bound
call
mov
cs
fidivr
dec
xchg
call
sub
les
rol
adc
aam
iret
lods
rcl
mov
ins
add
mov
mov
jmp
cmp
add
pop
outs
dec
adc
fwait
repnz
inc
out
shl
xchg
ss
test
inc
sub
(bad)
adc
jl
in
push
cdq
cmp
(bad)
fbld
or
lods
cs
or
ficomp
outs
jp
pop
dec
mov
pop
sbb
mov
in
aas
adc
shl
mov
push
or
push
and
jmp
scas
xchg
sahf
aad
mov
pop
pop
pop
sbb
(bad)
fnstenv
sub
cmp
stos
mov
push
inc
(bad)
ja
mov
rcl
and
(bad)
mov
pop
xchg
js
mov
xor
jbe
push
pop
bound
pop
xchg
aad
xchg
cmps
or
jmp
adc
adc
sbb
lods
(bad)
push
push
(bad)
loope
mov
jbe
sub
xchg
mov
fimul
mov
pop
ds
sub
jp
scas
imul
int3
mov
push
out
xor
xchg
sub
and
mov
(bad)
in
mov
(bad)
int3
inc
adc
pop
cmps
mov
(bad)
fidiv
fiadd
mov
out
hlt
movs
(bad)
aad
js
stc
int3
xor
inc
repz
sbb
pop
sbb
jb
mov
popf
pop
sbb
js
bound
fdivr
jns
push
mov
mov
loop
sbb
retf
fisubr
push
in
adc
test
aam
icebp
xor
test
mov
push
pop
out
mov
cld
pushf
imul
inc
imul
stos
js
mov
sbb
jne
cmps
movhps
rcl
in
xor
xchg
add
mov
daa
dec
push
xchg
cmp
adc
jmp
pop
or
lea
shl
mov
out
cmps
out
inc
in
dec
inc
aas
call
inc
mov
mov
clc
scas
dec
and
jo
test
inc
ret
mov
dec
mov
mov
in
cmp
pop
xor
scas
sub
cmps
(bad)
or
scas
sub
into
mov
sbb
iret
call
jno
inc
inc
fiadd
cs
or
(bad)
lods
pusha
ja
and
xchg
popa
jno
pop
out
(bad)
sbb
gs
mov
adc
nop
jno
jae
hlt
jle
mov
cdq
inc
dec
aad
cmc
cdq
lahf
xor
dec
and
mov
sub
clc
add
mov
xor
(bad)
dec
xor
or
mov
loop
cmp
les
mov
mov
test
mov
pusha
inc
dec
call
ss
sbb
dec
int
cli
jne
fs
mov
sbb
into
leave
sti
repnz
in
nop
sbb
push
inc
je
loop
cwde
jmp
(bad)
xor
mov
pop
mov
pop
jle
imul
sbb
or
inc
xor
jmp
imul
jle
dec
retf
outs
pop
loope
xor
data16
test
or
(bad)
sbb
lds
inc
jne
sbb
fst
adc
test
sbb
movs
stc
popa
cmp
stos
sbb
retf
lods
out
rcr
mul
pop
mov
rcl
idiv
shl
pushf
jle
adc
pop
jl
ret
and
(bad)
sbb
lea
cmps
stc
loop
int3
or
jl
mov
xchg
repz
ret
cwde
lahf
mov
mov
retf
inc
pusha
push
mov
xor
xor
fidiv
sub
mov
cmp
mov
pop
test
and
call
outs
sbb
ja
int
adc
shl
dec
mov
sbb
mov
test
retf
add
jmp
sbb
dec
lods
cmp
dec
xor
loop
test
in
icebp
xlat
loopne
push
mov
neg
or
mov
out
sub
div
test
je
sub
add
out
mov
mov
in
int
sbb
test
inc
mov
sbb
retf
into
bnd
cs
inc
push
mov
inc
ja
int
xor
int3
call
inc
lods
and
mov
stc
fisubr
fiadd
pop
pop
mov
retf
push
cmc
xchg
leave
stos
pushf
xor
xor
in
mov
push
lock
repnz
dec
dec
lds
cmp
jmp
mov
inc
fiadd
pop
(bad)
(bad)
iret
jmp
test
adc
mov
pop
xor
stc
not
xlat
inc
xchg
(bad)
enter
cmp
adc
or
mov
jle
(bad)
dec
loopne
pop
ror
das
in
outs
ins
sub
loopne
inc
(bad)
sub
sub
into
and
sub
mov
clc
pop
cld
lds
mov
mov
or
shl
into
dec
xor
adc
in
mov
ret
push
jg
rcr
dec
mov
lds
push
jnp
jle
mov
sbb
popa
mov
(bad)
dec
gs
pushf
nop
test
loope
add
push
dec
cmps
xchg
pop
adc
pop
test
scas
jecxz
xchg
and
pop
(bad)
jp
mov
int
popf
repz
sar
jmp
adc
inc
arpl
xchg
dec
cwde
dec
mov
lods
stos
jl
(bad)
jmp
std
dec
push
pop
pusha
push
dec
retf
mov
or
jl
lea
int3
adc
and
mov
or
pop
jp
ja
jp
cmp
mov
jmp
out
dec
xor
pusha
outs
mov
jge
in
mov
mov
dec
mov
cmp
outs
gs
fmul
(bad)
dec
lea
push
adc
add
or
bound
cmp
aam
push
mov
xor
xchg
stc
adc
stc
call
cld
repnz
or
je
out
add
sbb
out
pop
mov
cmp
xor
in
mov
pop
sbb
out
sub
(bad)
fisub
lds
int
retf
xchg
mov
(bad)
int3
add
sbb
mov
call
add
cwde
daa
repnz
into
jmp
loopne
xchg
sub
push
xchg
sbb
sbb
(bad)
es
jae
cmp
mov
std
jae
add
in
or
lods
jecxz
adc
push
test
cmps
xchg
cmp
jle
jae
lods
fucomi
cld
dec
dec
mov
shl
mov
shl
(bad)
and
(bad)
push
and
inc
repz
mov
imul
mov
cmc
jo
cmc
cmps
fwait
mov
sar
mov
popf
test
mov
ss
out
adc
ja
mov
lods
jnp
sub
push
jmp
pop
clc
push
std
or
mov
leave
xchg
lods
add
(bad)
add
rcr
mov
(bad)
xchg
retf
(bad)
xchg
rol
lds
mov
test
cmp
lock
imul
jge
cmp
in
sbb
test
push
dec
add
ds
or
sahf
(bad)
sub
inc
fs
cmps
pop
pop
retf
sub
push
add
ja
jmp
int
mov
popf
add
loope
jp
sbb
push
in
ret
iret
aam
cli
and
stos
add
jnp
lds
out
pop
mov
repz
jecxz
xchg
inc
jl
xchg
mov
mov
es
mov
mov
add
daa
xchg
or
push
rcr
sbb
sti
mov
inc
mov
mov
add
adc
push
jbe
outs
sub
frstor
ins
adc
push
and
xor
and
out
and
in
pop
lods
lock
lds
adc
shr
add
sub
(bad)
jge
pop
es
dec
ret
rcl
add
dec
push
jg
cld
dec
inc
pop
mov
out
ins
ins
cdq
mov
or
dec
push
adc
clc
fnstcw
xchg
add
mov
mov
stos
jns
in
sub
clc
lds
xor
jmp
movups
dec
mov
xor
mov
lock
inc
in
xor
ffreep
mov
aaa
out
xchg
dec
ficom
int3
adc
mov
mov
mov
std
push
pusha
shr
lods
clc
push
jbe
inc
movs
add
xchg
sbb
or
mov
cmp
or
inc
fimul
add
adc
xlat
out
add
xchg
inc
mov
inc
xchg
push
leave
mov
test
dec
xor
sbb
int
inc
mov
add
cwde
fild
not
setp
mov
or
in
in
lods
fbld
aas
in
pop
imul
in
fchs
or
mov
and
aaa
gs
jmp
adc
daa
call
inc
dec
push
mov
std
in
push
int
iret
cld
clts
ret
mov
dec
or
nop
popf
les
jno
sub
push
add
adc
cmp
popf
test
enter
add
mov
xor
inc
sbb
pop
gs
jo
dec
daa
stc
jo
ror
xchg
jns
sti
mov
hlt
ds
jbe
popa
sub
cmovno
ret
lds
hlt
cmps
inc
push
mov
sub
mov
movs
(bad)
inc
sbb
sub
rcr
sar
or
cld
or
dec
pop
ret
cli
pop
jne
movs
and
lds
jno
and
(bad)
push
ins
or
pop
jle
in
lods
fsubr
xchg
ret
iret
mov
popf
dec
adc
or
je
psadbw
push
push
call
and
es
push
repz
dec
adc
jmp
cmp
retf
mov
and
mov
dec
das
retf
sbb
jno
jecxz
sbb
(bad)
xlat
gs
push
or
fsub
xor
ins
fsubr
cmp
adc
seta
xchg
xchg
cmp
mul
and
movs
mov
ins
frstor
aad
push
and
aad
and
cmc
inc
call
or
imul
fld
fidiv
int
ret
inc
daa
(bad)
ds
sbb
cmps
ret
cmp
push
enter
sub
add
jnp
or
dec
add
mov
pushf
mov
hlt
test
dec
xchg
fld
sbb
(bad)
sar
scas
cmp
aad
scas
or
fld
es
jmp
jns
pop
inc
lea
aaa
aaa
repz
rcr
test
dec
sub
gs
push
cmp
cmps
push
(bad)
and
push
stos
xchg
or
xor
lods
pop
out
mov
sbb
sub
out
cwde
int3
add
loope
and
jns
xchg
ja
jno
(bad)
jmp
js
pushf
sahf
(bad)
fist
mov
sbb
aad
pop
js
jnp
ds
cwde
pop
jns
pop
retf
add
add
out
jge
or
and
sub
pop
cmp
or
retf
cmp
and
fwait
daa
inc
or
jbe
sub
dec
push
inc
adc
cmp
cmp
lods
leave
adc
lds
sahf
pushf
movd
xchg
pop
jle
xor
push
arpl
int3
add
mov
pushf
pop
arpl
dec
or
lock
int
adc
jae
movs
ins
push
jmp
adc
addr16
call
shl
inc
test
fs
popa
inc
or
shl
xor
mov
jb
dec
ss
mov
push
jns
jmp
sub
lock
inc
(bad)
nop
ds
int3
fidiv
sub
jmp
jmp
inc
mov
les
sbb
fadd
mov
(bad)
test
les
jo
xchg
dec
out
xlat
or
mov
push
out
and
push
cld
push
jae
dec
aas
sets
call
mov
(bad)
sbb
sahf
lea
xchg
and
fdivr
icebp
test
lock
cdq
add
out
test
cmp
sub
pextrw
mov
sub
jge
daa
cmp
add
fcmovb
push
push
sub
and
fisub
aad
loop
sar
sub
das
xchg
aad
(bad)
mov
test
xor
jne
leave
adc
in
sbb
fs
mov
xchg
out
idiv
(bad)
cmps
ds
popa
dec
pop
add
pop
out
sub
push
popa
scas
push
push
iret
aam
add
pop
push
jp
arpl
lds
fmul
pop
cmp
xchg
js
out
out
hlt
xor
aad
ror
cs
pop
popf
popf
lahf
fisttp
adc
fst
mov
add
push
daa
xchg
fld
fs
push
sahf
inc
test
inc
mov
loop
mov
in
mov
in
sub
push
mov
nop
jg
xchg
ss
fnsave
imul
std
jl
mov
push
xchg
pop
cmp
sub
inc
mov
mov
dec
dec
and
rol
mov
cmp
add
cmps
mov
mov
sbb
jnp
pop
stc
ins
pop
cmps
lods
adc
inc
jle
fldz
pop
ucomiss
pop
test
pop
xchg
push
retf
inc
ret
add
or
into
iret
mov
in
add
pop
cmp
pop
(bad)
enter
mov
rcl
call
inc
pop
fisttp
or
or
adc
cdq
and
ror
pop
into
loopne
mov
sbb
scas
cmc
nop
js
or
test
pop
test
dec
adc
stos
dec
adc
int
arpl
jo
lods
xor
push
push
ror
sub
jmp
test
mov
(bad)
xor
clc
push
pop
jg
test
outs
sub
and
and
dec
jecxz
ret
and
adc
xchg
cmp
jle
push
imul
push
retf
push
cwde
jecxz
out
jg
lock
pusha
test
cli
popf
jge
cmp
pop
push
mov
sub
jg
cmps
test
enter
mov
loop
test
leave
mov
je
cmp
test
pop
jns
or
movs
pop
outs
int
jae
inc
(bad)
mov
pop
stos
push
jns
jmp
sbb
dec
cwde
je
and
add
std
cwde
push
mov
cwde
mov
xchg
std
ficom
mov
pop
mov
out
inc
imul
and
lock
out
mov
ins
or
dec
movs
lock
cmps
fdivr
jp
(bad)
lahf
jb
ins
fldenv
mov
jbe
mov
fcomip
fsubr
xlat
stc
and
xchg
dec
cdq
and
and
pop
mov
inc
jae
lds
cmp
jo
sti
sub
xor
add
mov
out
fcmovu
popa
push
mul
leave
(bad)
mov
sbb
ins
add
pop
daa
adc
fs
push
loopne
add
cmp
aad
es
and
stos
pop
xor
pushf
rol
out
lock
gs
sub
or
or
ficom
je
push
mov
xchg
fs
cmc
enter
xor
push
mov
pop
adc
in
pushf
mov
shr
(bad)
sar
xchg
enter
stc
dec
sbb
inc
or
inc
fsubr
adc
jmp
sbb
mov
push
push
adc
repz
test
push
sbb
xchg
shl
(bad)
rcr
shr
jo
sti
pushf
pop
or
jb
mov
xor
jmp
mov
xchg
fwait
cld
inc
sti
xor
push
jb
in
loopne
add
(bad)
cmp
out
mov
repnz
jl
sti
mov
call
dec
mov
sbb
dec
mov
cs
push
pop
mov
sub
jo
les
or
push
lds
adc
inc
cli
mov
inc
cmps
xchg
(bad)
pusha
pusha
sar
leave
adc
add
jecxz
mov
aam
add
sbb
pop
movs
cwde
sbb
sbb
mov
lahf
push
inc
mov
loope
ins
shl
mov
(bad)
pop
setb
fcomp
and
test
iret
stos
les
(bad)
sbb
outs
xor
sub
cdq
out
cwde
add
loope
dec
xchg
push
fisubr
out
nop
ins
pop
(bad)
jb
or
add
lahf
in
push
fdivr
cmp
mov
inc
je
mov
out
nop
dec
movs
xor
cwde
jmp
iret
inc
sbb
jno
hlt
and
pop
outs
lds
add
mov
aad
or
out
mov
xrelease
sbb
add
in
adc
or
sbb
pop
ja
retf
dec
pop
xchg
imul
jg
ret
jmp
cmp
mov
std
mov
mov
mov
mov
outs
push
xor
add
push
leave
adc
push
inc
daa
loope
test
aas
dec
cmp
data16
mov
adc
xchg
cmovg
push
cmp
mov
das
pop
xchg
cmps
sti
in
ret
cmps
add
mov
jns
lods
jecxz
and
pop
shl
mov
inc
sub
pop
pop
add
inc
aaa
sti
pop
inc
cmc
retf
pushf
jnp
fistp
or
adc
popa
pop
aam
xor
je
mov
sub
pop
pop
enter
sub
out
movs
push
pop
(bad)
xchg
addr16
or
xchg
push
cwde
fs
dec
(bad)
jo
inc
xor
fldcw
jle
cmps
int
repnz
(bad)
xlat
shl
cmp
cmp
in
(bad)
dec
leave
or
push
ror
add
sbb
cmp
call
into
push
lods
and
dec
push
icebp
or
add
jns
cmc
or
imul
xchg
stc
inc
inc
sub
std
ss
push
(bad)
pop
jmp
shl
popf
jmp
mov
add
dec
xchg
xchg
fcom
jg
test
imul
sbb
sti
add
test
jns
(bad)
jl
jg
dec
ja
xor
inc
bound
pushf
(bad)
sub
lock
and
mov
mov
lea
xlat
pop
retf
(bad)
aam
je
shl
jae
lea
sub
push
jb
idiv
(bad)
sbb
push
mov
sti
mov
xor
dec
mov
bound
inc
and
xor
xchg
hlt
int
pminsw
scas
sub
pop
dec
addr16
repnz
ror
jae
sbb
je
adc
inc
sub
adc
or
les
icebp
push
mov
push
add
stos
push
pusha
mov
fadd
out
cli
dec
sbb
dec
frstor
pusha
xor
jmp
inc
mov
push
xor
mov
mov
jmp
jp
(bad)
cdq
out
dec
fadd
push
dec
into
mov
mov
mov
mov
hlt
jns
or
dec
or
dec
into
xor
push
push
xor
out
pop
jge
add
loopne
jmp
shl
addr16
(bad)
in
test
mov
mov
and
inc
retf
cld
mov
fisub
shl
rep
call
mov
cmp
pop
xor
lea
int
adc
scas
pop
mov
mov
cdq
clc
bound
xchg
add
dec
enter
pop
jne
movs
and
fisubr
cmp
cli
fld
add
mov
sbb
rcl
sbb
mov
pusha
pop
shl
addr16
add
mov
xchg
push
or
ins
in
push
dec
icebp
mov
movs
and
push
pop
pop
mov
sahf
and
aaa
pop
adc
test
shr
adc
test
pop
xor
xchg
popf
pop
test
imul
or
cmp
stos
lods
dec
add
cmp
sub
ror
popa
pop
or
lds
dec
(bad)
dec
sbb
push
push
dec
and
test
int
mov
lods
sbb
jge
or
pop
call
popa
inc
cmp
add
mov
adc
jmp
nop
ja
jl
(bad)
pushf
retf
mov
cmp
lock
(bad)
cwde
add
movs
xchg
(bad)
rcr
add
out
dec
push
push
iret
inc
(bad)
in
sar
fst
(bad)
and
ret
mov
lods
inc
pop
mov
in
cmp
data16
sub
rol
ds
cmp
arpl
inc
loopne
(bad)
sti
outs
cmps
pop
push
jnp
repnz
int
mov
js
dec
adc
sar
xchg
mov
push
jmp
cmc
mov
cs
mov
mov
jmp
shr
inc
xlat
jl
aam
data16
sar
dec
mov
mov
add
cmp
jp
nop
sbb
add
(bad)
dec
shr
hlt
mov
int3
cli
mov
inc
xor
pop
mov
sar
(bad)
or
sbb
dec
sti
test
cmp
mov
les
ror
mov
(bad)
cmp
icebp
ret
sbb
mov
mov
adc
leave
and
xchg
sbb
outs
lock
mov
lahf
adc
ror
cmc
in
sar
dec
movs
in
lea
movs
add
nop
jl
ss
dec
mov
sar
cmp
mov
sbb
xchg
push
out
das
mov
mov
pop
(bad)
out
cmps
jo
out
scas
into
fistp
add
mov
mov
sbb
fisttp
xchg
fidiv
dec
pusha
lds
adc
xchg
push
retf
push
iret
add
loop
sub
(bad)
jnp
lock
add
sahf
mov
push
dec
sti
mov
inc
xchg
xor
inc
inc
jecxz
pop
call
das
sbb
pop
sub
arpl
std
fisubr
fwait
push
cli
jp
jecxz
xor
add
add
pop
and
xor
dec
cmc
cwde
or
adc
lahf
push
mov
and
jmp
adc
mov
jne
adc
inc
dec
movs
fwait
pop
ss
mov
sub
icebp
call
mov
or
mov
ret
pop
sub
nop
mov
push
jge
sti
jae
push
ins
pop
push
(bad)
and
es
and
adc
out
mov
leave
in
sub
add
gs
outs
xlat
cmp
push
mov
dec
shr
enter
push
(bad)
rcl
test
jbe
lea
push
pop
sbb
sar
lds
mov
cmp
push
mov
xor
mov
ja
sbb
pop
sbb
cmps
repz
inc
movs
jo
mov
out
adc
jo
cwde
and
xlat
xchg
imul
(bad)
lea
xchg
(bad)
aam
push
pop
xchg
sub
es
ret
mov
jnp
cmc
lods
cld
or
loop
jo
mov
repnz
mov
repz
out
pushf
sub
dec
or
xor
inc
sub
lahf
stos
adc
push
cmps
and
retf
xor
(bad)
sbb
scas
mov
pushf
push
jno
xchg
or
scas
iret
aam
push
xor
addr16
pop
mov
retf
and
js
out
cmp
clc
mov
int
pop
cmp
sub
clc
xlat
idiv
mov
into
cmc
pop
ja
dec
mov
xor
iret
ret
sub
mov
ins
mov
(bad)
xchg
bound
mov
dec
dec
(bad)
test
inc
xor
inc
jg
sbb
xchg
pusha
mov
ret
inc
call
pop
out
into
or
xchg
mov
mov
(bad)
adc
pop
sbb
jo
arpl
(bad)
enter
dec
fld
mov
mov
dec
cmp
cmc
xor
inc
stc
mov
push
mov
mov
inc
cld
push
leave
(bad)
jmp
cwde
mov
jb
add
loop
sbb
cmps
jle
inc
adc
jb
mov
neg
(bad)
mov
mov
inc
sub
lods
mov
xor
add
pop
lods
div
pop
or
out
or
xchg
cld
pop
mov
outs
cmp
pop
lods
adc
pushf
add
(bad)
shl
jmp
mov
push
js
xchg
das
in
(bad)
mov
cmps
ins
outs
xchg
sbb
das
sub
and
xchg
sbb
mov
(bad)
rol
jl
js
in
enter
mov
pop
call
add
dec
arpl
mov
lods
inc
stos
sbb
or
jmp
mov
repz
xchg
adc
ja
inc
jno
mov
xor
and
mov
pop
pop
(bad)
js
inc
jmp
push
sar
add
push
ins
dec
and
popf
jae
dec
ins
push
inc
addr16
sub
push
pop
pop
and
gs
and
inc
movs
pop
cmp
mov
cmp
pusha
mov
xor
jno
ds
add
or
out
push
xor
repnz
mov
pop
leavew
sahf
sbb
scas
test
mov
test
pushf
xchg
addps
and
lods
or
fwait
in
cmp
mov
xchg
arpl
push
mov
pop
lahf
push
ins
hlt
mov
cmp
xchg
ror
or
push
or
iret
dec
scas
add
not
push
enter
sbb
into
xchg
jmp
bound
cmp
cmp
or
pop
fcom
pusha
pusha
inc
adc
jo
js
sahf
push
enter
xor
or
jno
ror
mov
aas
retf
inc
jecxz
shl
jmp
mov
leave
mov
push
xchg
repnz
sbb
movs
ret
in
cmps
add
xor
xor
mov
ds
or
inc
shl
sbb
and
lods
stos
(bad)
in
cmp
xchg
cmp
mov
pop
cmp
mov
fdiv
movs
(bad)
call
or
push
and
inc
add
out
pop
ret
dec
(bad)
sub
test
add
xor
and
jnp
push
out
xor
hlt
retf
popf
sub
loope
sahf
mov
adc
mov
mov
fs
xchg
push
lods
pop
arpl
cmp
popa
call
or
sub
push
adc
in
push
inc
push
mov
mov
pop
mov
mov
adc
out
stos
dec
std
call
mov
xlat
inc
add
test
leave
jge
or
test
cmp
jne
fidivr
test
stos
into
inc
dec
xor
sbb
mov
cmps
dec
mov
mov
push
mov
mov
jp
enter
xchg
adc
pop
mov
mov
les
fdiv
pop
mov
and
daa
or
xor
loope
dec
dec
loope
add
sti
jp
sbb
adc
fidiv
and
ds
jbe
pop
xchg
mov
aaa
push
fwait
jmp
inc
das
retf
js
add
sbb
ret
sub
fwait
or
add
push
xor
pop
sbb
out
stos
mov
xor
test
add
cdq
mov
or
fwait
hlt
sub
cmps
popw
jmp
cmp
out
cmova
push
ins
fadd
pop
push
loopne
mov
cmp
or
(bad)
jnp
jnp
fldcw
mov
in
and
mov
and
and
aaa
mov
scas
test
shl
push
dec
int
pushf
sbb
push
pop
add
inc
push
jmp
sar
xchg
add
mov
inc
int
mov
loope
es
test
fnsave
add
push
test
loope
bound
int3
jno
cs
add
xor
dec
push
out
addr16
sbb
push
pop
fist
ror
mov
ins
lock
inc
bound
inc
pusha
jge
test
popa
mov
rcr
test
daa
repnz
mov
ins
add
iret
fild
sub
xchg
fptan
add
mov
add
test
fwait
xor
push
add
add
out
lods
aas
mov
jno
(bad)
scas
lods
scas
add
pop
xlat
cmc
adc
lahf
push
pop
leave
dec
fisttp
lods
les
lahf
fmul
ss
add
push
cmp
std
lea
sub
leave
retf
(bad)
iret
aam
movs
(bad)
retf
push
in
adc
jae
mov
(bad)
cdq
leave
ins
test
add
mov
sub
push
sbb
xor
add
popa
nop
inc
(bad)
or
clc
pushf
add
sti
inc
paddw
cmp
int
push
leave
jecxz
push
mov
std
mov
xchg
or
rcr
dec
or
mov
sub
(bad)
std
jmp
ret
xor
rcl
outs
xor
cld
jmp
xchg
jmp
mov
jno
push
inc
ins
pop
dec
test
dec
je
xor
jge
imul
data16
pop
cdq
(bad)
push
das
sub
(bad)
lods
adc
xor
pushf
and
and
ins
idiv
in
push
push
cs
mov
and
mov
fs
mov
loop
inc
hlt
repnz
dec
js
data16
push
mov
cmc
push
fmul
les
mov
cmps
sbb
or
inc
pop
mov
adc
pop
rcl
jns
scas
rcl
ins
gs
scas
jle
pop
cmp
popf
mov
in
(bad)
outs
aad
lahf
test
les
push
sbb
shl
add
mov
das
pop
mov
shr
push
pop
mov
sbb
mov
lahf
lds
dec
sbb
jge
pop
xchg
ja
and
loope
push
scas
ss
jg
mov
adc
jge
popf
sub
retf
leave
pop
sbb
iret
pop
test
movs
pop
test
xor
fild
mov
jbe
mov
add
jno
add
push
in
jp
loope
jge
enter
outs
es
mov
lods
test
test
jmp
push
retf
(bad)
cld
in
xchg
xor
dec
int3
cdq
mov
stos
sbb
enter
dec
ds
loopne
and
stc
push
sbb
push
pop
lea
xchg
into
retf
mov
xchg
sub
lea
add
je
data16
sar
pop
adc
jnp
dec
movs
imul
fwait
ja
mov
xor
(bad)
enter
sbb
arpl
xor
(bad)
sti
clc
jle
mov
je
sub
xlat
out
(bad)
dec
pop
sbb
out
daa
fcomp
cld
xor
lahf
dec
shl
or
add
mov
add
mov
imul
mov
push
mov
or
mov
jb
mov
sbb
add
push
shr
inc
jnp
or
jmp
sub
jno
jbe
repnz
push
mov
mov
in
scas
sti
shl
mov
mov
mov
int3
aad
pop
mov
in
add
cld
(bad)
push
stc
and
ds
(bad)
mov
xchg
(bad)
fcomip
jb
repnz
mov
sub
imul
int3
mov
cwde
imul
inc
add
ss
cmp
je
cli
out
pop
jmp
(bad)
jne
add
add
je
arpl
cmc
ficomp
out
movs
nop
cmp
inc
push
das
sbb
in
or
add
pop
and
inc
inc
or
dec
mov
hlt
adc
add
scas
jmp
adc
sar
int
xchg
sub
fwait
cwde
mov
fdivr
mov
out
jecxz
jne
arpl
or
imul
cli
test
jnp
in
push
es
adc
out
sub
out
mov
xor
das
fs
repz
pop
fmul
xor
setno
add
rcl
inc
cmp
(bad)
pop
add
pop
or
ja
mov
jmp
xor
jmp
out
adc
outs
and
mov
imul
or
test
pop
or
push
xchg
xchg
dec
imul
jmp
rol
inc
loope
retf
sub
jb
(bad)
pop
jnp
aam
ins
mov
sbb
pop
xor
mov
xchg
xchg
cmp
mov
mov
mov
movs
je
cmp
pop
mov
loope
sti
aam
push
mov
(bad)
arpl
jmp
fmul
adc
adc
mov
in
stc
dec
test
jae
xchg
ds
(bad)
and
lods
and
mov
pop
shl
or
xor
push
mov
inc
(bad)
mov
push
push
xchg
pop
int
iret
aam
mov
pop
cmp
retf
mov
jecxz
pop
sbb
xchg
sub
add
call
pop
push
add
hlt
xchg
push
sbb
jns
xor
xchg
push
adc
div
ficomp
xor
push
shl
push
add
xchg
pop
mov
sbb
sbb
xchg
sbb
adc
xchg
ja
test
push
xor
sbb
push
adc
fldenv
pushf
popf
aaa
hlt
clc
inc
add
test
pop
lods
adc
mov
xlat
push
call
jecxz
outs
test
pushf
sbb
sub
pop
inc
repz
mov
jo
cdq
pop
or
and
add
mov
pop
inc
pop
sbb
xlat
or
js
ficomp
mov
mov
mov
sti
or
pop
lea
adc
je
lock
scas
sbb
popa
jo
(bad)
out
movs
mov
fcmovbe
cdq
dec
cld
scas
pop
jns
xchg
adc
mov
add
lahf
in
jmp
mov
mov
xlat
iret
mov
pop
shl
call
mov
add
hlt
push
xor
mov
xchg
cld
out
push
jl
and
es
xchg
jne
sub
fcom
test
in
sbb
mov
iret
fwait
jle
ret
je
mov
push
and
push
fsubr
xchg
repz
popf
stc
das
jmp
sti
sbb
test
js
ins
pop
cmp
jp
retf
push
inc
add
aam
xchg
(bad)
fistp
push
sbb
std
ins
inc
stc
arpl
push
imul
repz
push
je
call
repnz
xchg
sbb
(bad)
xchg
or
or
rcl
je
repnz
adc
aam
inc
scas
imul
mov
retf
daa
jae
mov
dec
push
xchg
jo
dec
je
fdiv
cmc
pop
retf
int3
push
ror
mov
arpl
cs
das
inc
sbb
mov
das
fnstsw
pusha
push
je
rol
push
mov
into
adc
sub
into
and
mov
or
aas
fwait
mov
xchg
sbb
jno
sbb
sub
mov
outs
pop
xlat
sub
push
add
bound
fisttp
aad
test
cmp
test
popaw
sub
or
iret
mov
fs
push
cmc
and
enter
mov
out
into
inc
or
adc
lods
test
lods
pushf
ins
push
fadd
sahf
test
dec
adc
in
sub
outs
jge
inc
or
call
div
loop
in
xor
fstp
fidivr
cmps
int3
xor
push
xchg
lods
cs
push
cmp
mov
scas
mov
jg
out
mov
es
daa
sbb
push
fdiv
mov
sbb
sbb
or
out
das
cmp
push
mov
mov
push
dec
shl
mov
cmp
mov
sti
jl
ret
or
cmp
je
mov
iret
push
(bad)
scas
push
jne
outs
dec
adc
jg
iret
pop
jnp
out
or
gs
xor
xor
movs
outs
outs
loope
cmps
out
mov
inc
(bad)
lods
xor
jge
out
je
mov
adc
loope
jl
movs
aaa
cmp
rcl
aad
sbb
loope
ins
(bad)
fidiv
sahf
pop
pop
lods
pusha
rcl
inc
inc
(bad)
in
lods
aaa
hlt
test
sbb
(bad)
in
xor
cli
cs
jbe
fwait
and
xchg
xor
and
loopne
shl
movs
and
pusha
push
(bad)
retf
fs
cmp
out
xchg
add
pusha
std
mov
push
and
cmps
and
pop
call
xor
out
mov
mov
lds
push
jl
daa
sub
cmps
hlt
fisub
stc
scas
fnstenv
mov
xchg
(bad)
movs
ja
push
jae
fdivr
cdq
push
div
add
addr16
sub
push
jmp
or
outs
pop
add
in
mov
pop
loop
das
ret
neg
pop
jle
outs
add
shl
imul
and
cmps
shl
(bad)
fsub
mov
inc
test
sub
(bad)
int3
pmulhuw
aaa
pushf
adc
outs
cmp
out
push
adc
out
ret
std
stos
fld
add
mov
cmp
stos
test
imul
or
aas
jo
mov
out
xor
xor
imul
int
push
fs
ds
fcomp
call
xchg
loope
ds
dec
add
scas
cmp
mov
jnp
mov
xchg
xchg
pop
es
xchg
stc
inc
mov
rcr
stos
cmp
mov
cs
sbb
ror
jmp
pop
sbb
ror
popa
jmp
fnsave
clc
and
cmps
inc
and
inc
pop
cli
(bad)
pop
jne
nop
add
sbb
outs
mov
sbb
push
sar
xchg
sub
fsub
mov
test
fld
cmp
adc
xchg
dec
adc
lahf
cmp
out
push
pop
out
popf
loope
mov
retf
pusha
rcr
cmp
jle
ja
aas
imul
cmp
inc
mov
and
and
rcl
sub
jg
push
ds
in
imul
push
inc
pop
cmps
and
xchg
in
sub
add
mov
xor
not
push
fwait
dec
imul
loopne
pushf
cmp
jbe
popf
sub
or
(bad)
loopne
in
inc
push
push
push
mov
vpsrad
outs
popa
cdq
mov
fucomp
mov
lods
add
mul
sub
jns
scas
push
nop
dec
cmps
inc
fcomp
pop
jl
pusha
jge
hlt
fld
mov
in
mov
dec
and
(bad)
push
cmps
xchg
sti
ins
jle
xchg
lods
adc
popf
or
addr16
in
or
dec
push
stos
mov
stos
sub
pop
iret
aad
mov
add
adc
xor
or
daa
add
imul
sub
popa
scas
mov
xchg
push
ins
test
(bad)
jbe
fimul
sub
and
cld
inc
ficom
adc
mov
out
or
ret
retf
and
push
rcr
mov
cmp
movs
dec
xor
(bad)
jge
xor
pop
fs
(bad)
aam
pop
mov
or
shr
cmp
sub
sbb
mov
out
nop
gs
jb
loope
xor
neg
pop
xchg
out
mov
mov
ss
jmp
xchg
or
je
sbb
aad
dec
pop
push
cmc
jne
leave
and
mov
pushf
dec
cdq
imul
aas
pop
(bad)
fwait
mov
outs
fdivr
test
xchg
push
popa
jne
loop
mov
outs
das
lea
cmp
sbb
ror
pop
sbb
(bad)
cmp
push
and
cmp
ficomp
sar
stc
push
lea
mov
inc
cs
ss
call
sub
popa
or
pop
mov
inc
mov
mov
stos
fld
and
xor
jle
test
nop
push
lds
lock
out
xchg
sar
test
sub
and
push
cmp
jg
call
and
call
pop
popf
fnsave
mov
ret
out
fwait
pop
arpl
lods
ins
scas
push
cmp
push
jl
test
xor
cld
push
into
repz
sub
mov
popf
xor
pop
adc
and
jmp
in
jae
(bad)
sbb
sbb
mov
jp
lahf
test
jg
and
mov
inc
mov
inc
(bad)
xlat
ja
mov
and
out
jbe
xchg
pop
aaa
dec
outs
jnp
(bad)
cmps
dec
or
cwd
call
ffree
dec
aad
sub
push
xchg
ins
xor
lock
cmp
mov
psubusw
cmps
and
sbb
mov
daa
inc
mov
fwait
pop
ja
enter
mov
mov
(bad)
ja
out
jecxz
jecxz
mov
jle
jo
test
xchg
adc
mov
add
xor
add
adc
jne
fwait
nop
push
test
xor
add
inc
xchg
fiadd
lock
cmp
and
test
inc
xor
pop
xor
aaa
icebp
jns
mov
jecxz
fldcw
push
push
ud0
add
xor
xchg
inc
or
aad
mov
mov
(bad)
dec
stc
jecxz
mov
shr
jo
sub
xor
pop
push
outs
inc
mov
lods
(bad)
leave
imul
pop
call
cmp
aad
repz
mov
adc
adc
mov
call
inc
sub
push
pop
mov
and
sar
inc
shr
cmc
inc
inc
sbb
mov
out
jno
push
add
pusha
push
pop
and
gs
lods
push
sar
test
or
ds
and
pop
ror
enter
mov
stos
xor
mov
mov
and
mov
idiv
icebp
cmp
adc
jnp
xor
mov
mov
je
and
std
fmul
xor
pop
jp
rcl
dec
mov
fs
sbb
in
add
jo
xchg
jnp
call
repz
inc
pusha
pusha
xchg
jecxz
sbb
lea
es
sbb
(bad)
and
cmp
push
sub
ins
imul
(bad)
mov
or
mov
fcomp
mov
inc
pop
faddp
in
sbb
movs
push
mov
push
push
sbb
fcomp
cmp
or
jnp
sub
mov
nop
(bad)
(bad)
jl
fsub
xchg
xchg
mov
or
movs
call
dec
xlat
inc
xchg
push
mov
stos
int
das
nop
mov
cmc
lea
sti
cmp
and
inc
bound
mov
xchg
into
mov
daa
push
shl
or
fnsave
(bad)
mov
add
outs
mov
sub
bound
arpl
adc
repz
or
add
lods
or
xchg
inc
lahf
lahf
std
pop
ficom
fucom
sub
inc
mov
push
dec
(bad)
jg
adc
dec
ret
mov
push
stc
into
xchg
lds
add
push
leave
arpl
(bad)
jo
pop
xchg
ror
pop
mov
inc
push
pusha
mov
mov
aaa
or
dec
scas
mov
pop
mov
std
sub
xchg
out
cmps
aad
mov
inc
and
in
adc
sbb
pusha
jo
pop
adc
mov
repz
sub
ja
fld1
xor
stos
iret
mov
shl
cmps
loopne
pushf
cmc
jecxz
adc
sub
pop
mov
inc
pop
and
rcr
sub
push
(bad)
imul
push
push
adc
lock
sub
xchg
cmp
lods
push
xor
xor
out
cs
lods
lahf
xor
dec
mov
addr16
pop
and
pop
or
jmp
push
cmp
and
call
(bad)
fdiv
xor
shl
lock
cmp
sub
popa
rol
or
arpl
scas
pop
sbb
xor
(bad)
fdiv
mov
cmps
xchg
cmp
or
mov
test
adc
imul
mov
stc
imul
dec
sbb
xchg
popf
xchg
pop
jne
mov
xor
cdq
xlat
popa
xor
fcom
mov
pop
js
pop
sub
call
push
xchg
stos
and
push
and
ror
and
in
mov
dec
scas
and
aas
hlt
jbe
mov
mov
inc
stc
jns
sbb
add
mov
in
sbb
ins
xor
cmps
mov
popa
iret
dec
fs
sub
inc
push
test
stc
and
ins
test
fsubrp
xchg
ficomp
xchg
adc
stos
scas
cwde
cs
loopne
push
mov
sahf
jns
daa
adc
dec
xlat
sub
aaa
add
push
lahf
pop
add
popf
adc
int3
scas
cmc
pushf
adc
lock
pop
or
movs
icebp
pop
mov
xchg
inc
retf
and
pop
cmp
xor
shr
mov
sbb
xlat
pop
mov
pop
add
xchg
repz
dec
fild
gs
or
xor
or
jae
mov
mov
out
stos
aas
push
sub
aad
loopne
jo
and
mov
daa
xchg
push
imul
mov
ror
mov
fstp
in
or
fdivr
sbb
xchg
les
cmp
push
cmc
sbb
shr
mov
cmps
outs
jo
mov
or
sbb
jbe
icebp
js
xchg
or
add
jne
sahf
mov
and
xor
(bad)
xchg
cmps
fisttp
pop
ins
int
shr
fild
mov
out
lock
cmp
pop
mov
mov
sar
fsub
ins
xchg
movs
fst
dec
pop
pushf
pop
mov
test
test
mov
ins
test
icebp
push
loope
inc
iret
pusha
fidivr
bound
shr
sub
mov
ins
jnp
mov
sub
jg
ret
jnp
add
adc
call
shr
out
mov
cld
fisttp
stc
ret
mov
xor
jle
icebp
fstp
adc
int
or
cli
inc
das
xchg
pop
in
mov
sbb
out
pop
bound
sbb
push
test
mov
inc
xor
mov
out
inc
adc
sbb
push
add
add
xor
pextrw
test
or
jp
nop
xor
cmp
jmp
adc
fist
and
cmp
pop
test
sbb
fnstcw
clc
aad
pop
dec
lods
idiv
jae
popf
cmc
retf
ins
cmp
mov
push
mov
mov
aas
call
xchg
lea
mov
in
cdq
std
repnz
neg
mov
pop
fdiv
mov
sub
inc
cmp
fiadd
dec
shl
stc
inc
lods
push
xchg
add
sbb
adc
enter
xor
mov
push
icebp
stos
mov
xchg
mov
add
dec
mov
inc
dec
mov
and
xor
push
pusha
add
lods
jp
add
aas
repz
push
shl
clc
push
xor
cmp
mov
pop
add
xchg
into
scas
jp
neg
ins
nop
mov
jb
lea
out
daa
fcom
mov
jmp
out
sub
mov
push
aad
dec
adc
adc
jne
fstp
jmp
xchg
sbb
dec
jmp
push
ins
repz
dec
clc
cmc
mov
or
jnp
popa
pop
test
gs
in
cmp
sbb
stos
pop
push
cmps
push
aam
mov
popf
icebp
cmp
ret
xchg
push
retf
add
adc
je
mov
mov
ss
xchg
dec
data16
aaa
cmp
mov
adc
sub
xchg
clc
or
xlat
xchg
fild
cmp
adc
ror
and
sbb
scas
mov
add
test
outs
adc
pop
push
cwde
jne
in
dec
lods
inc
mov
jmp
xor
sub
out
aad
jnp
and
mov
repz
fwait
out
das
sub
cs
add
mov
mov
inc
test
jnp
(bad)
sti
iret
rol
mov
test
and
or
(bad)
nop
iret
in
fistp
cmps
jmp
es
push
pop
sahf
repz
out
test
adc
or
sub
jnp
ret
add
fsubp
inc
and
sahf
fcmovbe
cld
test
dec
outs
mov
mov
lods
sbb
into
xchg
test
outs
adc
jns
es
add
sub
data16
pop
jb
imul
inc
(bad)
stc
outs
cmp
in
sbb
cmp
inc
inc
sti
test
ret
sub
aad
retf
add
rcl
ret
and
in
cmc
sub
cli
push
aad
fxch
fs
addr16
jge
cld
sub
sub
mov
in
cmc
loopne
mov
fld
mov
sti
add
ret
dec
test
shl
inc
mov
(bad)
sub
push
jecxz
adc
fsub
and
mov
jmp
add
pushf
xchg
sub
ret
xor
jae
sub
xor
xchg
dec
cmp
xor
sahf
test
inc
(bad)
scas
mov
push
mov
sbb
popf
out
fisttp
cmps
lods
loopne
xchg
in
stos
cwde
inc
enter
ja
mov
and
fcom
cmps
lock
jns
pop
enter
push
dec
or
(bad)
fidivr
adc
push
add
popa
xchg
(bad)
fnstsw
xlat
or
scas
aas
mov
push
pop
aad
cld
fwait
scas
pop
sahf
retf
sbb
out
loope
mov
ins
adc
cmps
push
xchg
pop
xchg
pop
xor
jecxz
data16
je
in
xchg
push
cmp
mov
pop
fidiv
dec
mov
aas
inc
pop
les
es
mov
jo
add
div
lods
out
mov
push
xchg
jl
sbb
sti
sub
jno
fist
dec
sbb
test
and
movs
pause
rcl
test
cmp
scas
push
mov
retf
and
or
xchg
pop
xchg
inc
clc
pop
pop
daa
mov
enter
sub
fidivr
xor
add
push
mov
cmp
or
and
retf
imul
dec
jle
mov
movs
aaa
mov
dec
shl
cli
out
mov
xchg
fwait
xchg
test
sub
repnz
pop
outs
sar
push
cmp
adc
push
add
mov
retf
enter
pop
pop
pop
mov
cmps
sti
sub
clc
add
fnstsw
call
mov
pop
mov
or
sbb
mov
xchg
(bad)
sbb
xchg
(bad)
fcmovnu
test
jmp
xchg
ins
inc
ins
and
mov
mov
clc
dec
(bad)
sbb
pop
adc
mov
mov
sbb
dec
movs
sahf
icebp
mov
in
ffree
inc
push
loop
nop
int
xor
aam
fmul
xor
fld
iret
aam
(bad)
ret
xchg
xchg
aaa
push
mov
popa
fld
inc
call
mov
push
mov
das
mov
repz
fild
scas
xchg
inc
xor
outs
arpl
or
les
(bad)
mov
movs
ins
scas
or
(bad)
jp
and
ins
push
test
jge
aam
xchg
aaa
xor
sar
add
jmp
xlat
(bad)
call
ins
push
pop
add
repnz
sbb
add
cld
or
pop
retf
mov
loope
cmp
jle
loope
mov
ret
scas
pusha
cmp
cmp
push
fist
xor
(bad)
aas
lahf
aam
and
dec
aas
push
cmps
outs
iret
and
mov
push
mov
push
and
mov
mov
dec
mov
sbb
push
test
xor
jl
or
sub
js
pop
lds
xchg
sbb
cmc
mov
mov
or
dec
inc
mov
shl
pop
test
mov
in
ins
mov
sub
jae
push
xchg
sti
in
ret
push
imul
mov
aas
push
jo
jo
fist
rcl
dec
dec
pop
pop
js
cdq
jmp
cmp
mov
leave
jge
adc
jl
scas
mov
ss
jbe
int3
fwait
aam
add
test
push
and
pusha
dec
and
mov
mov
xor
push
jge
inc
das
jnp
out
imul
jle
mov
jns
sbb
cmc
mov
out
sahf
xor
ins
inc
fldenv
push
mov
das
fbld
scas
mov
popa
imul
adc
stos
stc
nop
dec
xor
cmp
loope
(bad)
pop
ror
push
cmp
leave
add
push
cmp
cmps
popf
dec
lea
ds
fisub
xor
inc
or
addr16
imul
(bad)
xchg
mov
xor
xor
mov
repz
dec
std
sbb
add
xor
jb
mov
dec
cmp
aaa
scas
fsubr
ins
iret
and
data16
cmp
sub
aam
lods
add
ss
jae
cmc
aad
rcl
fcom
sbb
xor
aad
call
imul
jmp
popa
leave
xchg
xor
lods
mov
xchg
imul
mov
lahf
xor
dec
pop
or
push
jae
daa
sbb
cmps
fisubr
mov
popf
cmp
shl
retf
data16
mov
mov
arpl
add
test
sbb
scas
iret
push
or
inc
jno
ror
lea
sbb
adc
pop
mov
call
sbb
push
(bad)
sub
mov
pop
ins
int
fwait
and
adc
movs
mov
mov
dec
push
into
fs
mov
add
mov
jmp
je
popa
test
mov
add
pop
mov
sub
sbb
cmp
test
push
(bad)
inc
mov
scas
lea
and
movs
idiv
loope
popa
into
repz
push
dec
fcomip
mov
imul
sub
sub
retf
and
scas
in
fsubr
cmp
mov
add
add
jae
fwait
pop
jnp
rcr
shl
arpl
(bad)
jg
push
add
adc
mov
clc
xchg
rcr
call
mov
push
fnstsw
and
cli
fwait
cmp
jmp
ret
pop
in
jbe
idiv
pop
jp
xor
pop
cmp
xor
lock
sbb
ret
dec
dec
lds
hlt
div
fidivr
mov
adc
(bad)
cmps
xor
mov
int
das
fldenv
icebp
outs
cli
movs
jle
and
(bad)
fidiv
xchg
jbe
int
jb
dec
(bad)
mov
fild
in
sbb
out
cmp
stos
dec
cmp
outs
add
stc
in
sahf
mov
xlat
leave
or
ja
sbb
or
ss
je
hlt
stos
test
out
and
iret
push
push
outs
xchg
bound
xor
mov
mov
mov
adc
mov
lds
rcl
mov
fdivrp
cwde
or
test
sbb
xor
lods
pop
and
sub
outs
clc
test
push
cmc
push
pop
in
ja
push
in
ret
stos
push
in
xchg
or
lds
add
lock
fnstenv
pop
pop
mov
dec
popa
or
and
dec
out
mov
retf
sahf
adc
jp
lea
arpl
js
popf
fdivr
cmp
fldcw
xchg
push
jp
icebp
add
mov
into
mov
addr16
or
mov
fadd
ret
push
push
mov
fisttp
push
mul
mov
sub
cdq
pop
mov
dec
scas
mov
shl
xchg
xchg
or
sti
xor
sar
add
and
and
add
enter
lea
out
mov
js
mov
mov
dec
arpl
mov
js
xchg
mov
dec
mov
int
pop
mov
repz
rcr
push
mov
inc
loope
jg
mov
dec
mov
mov
add
or
repnz
jle
aas
mov
loop
je
and
sub
xor
iret
jne
pop
push
add
pop
cmp
fs
aas
sbb
cmp
jl
cmps
fnsave
push
pop
sbb
outs
fmul
sbb
fcom
sbb
or
jmp
mov
and
mov
enter
shr
cmps
pop
mov
scas
mov
aam
add
push
test
or
add
mov
test
dec
arpl
jb
ja
or
out
repz
mov
pop
push
and
scas
jne
int3
lea
add
xchg
lods
je
jge
ret
mov
jl
iret
imul
dec
ins
jg
cwde
cmp
imul
sub
mov
mov
ins
iret
mov
fs
loope
gs
sti
and
cmps
daa
lahf
cmp
or
test
retf
ja
xor
lock
push
sub
push
loope
inc
repnz
mov
cmps
mov
lods
mov
cmp
aaa
(bad)
mov
mov
push
neg
movs
mov
aaa
fimul
data16
or
inc
int
in
pop
fstp
sub
xchg
bound
ret
sbb
cli
mov
hlt
lock
loope
jb
(bad)
test
push
mov
enter
cmp
mov
fsubr
retf
xor
outs
jbe
pop
test
cmp
sub
adc
pop
mov
ins
std
popa
adc
cmc
pop
cmovae
ficomp
movs
outs
dec
pcmpeqw
jns
(bad)
and
mov
xor
jns
jns
or
jbe
pop
fistp
mov
stc
lds
adc
hlt
lods
js
aad
hlt
icebp
inc
cmps
call
sti
out
push
not
std
dec
ins
push
out
loope
push
int3
mov
loope
je
test
adc
scas
cdq
push
mov
adc
or
stos
pop
lods
mov
xchg
icebp
cli
adc
repnz
adc
mov
ins
jle
dec
jmp
ror
cmp
std
and
sbb
(bad)
xchg
sbb
dec
int3
je
push
pop
arpl
pop
or
and
or
call
inc
xchg
movs
loop
pop
push
cmp
jecxz
div
(bad)
daa
fcmovnbe
inc
sbb
jne
mov
neg
push
or
sbb
test
out
or
(bad)
ret
add
fbstp
pop
add
sub
sbb
push
mov
push
pop
outs
adc
inc
adc
sbb
xor
out
dec
rol
sete
pop
push
xor
gs
sbb
and
sub
dec
cld
xchg
test
fld
cs
repz
adc
mov
xchg
adc
(bad)
jns
std
pop
xchg
pop
dec
int
stos
pop
add
adc
sub
outs
aas
fnstenv
cmp
cdq
stc
dec
lods
adc
addr16
(bad)
jle
mov
nop
inc
pop
jo
mov
test
push
cmps
imul
or
cmp
stc
in
jg
jmp
mov
loop
mov
cmp
xor
inc
movs
nop
cmp
sub
and
pushf
xchg
cmps
(bad)
lods
jo
out
pushf
adc
call
and
popf
out
shl
into
retf
xchg
in
retf
repz
pusha
dec
arpl
inc
lahf
movs
hlt
fstp
(bad)
push
adc
sub
ja
sbb
ins
sub
add
pop
or
mov
outs
ret
shl
sahf
addr16
popf
mov
clc
(bad)
ins
imul
fnsave
movs
sbb
pop
pushf
movs
in
pop
sbb
jnp
mov
mov
or
or
int
push
daa
mov
sub
or
mov
fcmovu
mov
jmp
jns
shr
mov
stos
dec
adc
stos
(bad)
loope
jne
sbb
pop
repz
mov
jb
shr
or
xlat
imul
add
stos
ins
push
fist
retf
repz
xchg
or
adc
adc
push
jmp
pminub
pusha
cli
ja
xor
xchg
dec
ds
mov
out
cmps
mov
les
sar
mov
or
cmps
sbb
xor
jecxz
mov
pop
dec
pop
imul
ret
mov
pop
pop
dec
or
cmp
stos
xor
adc
loope
aaa
cwde
movs
es
and
cmps
(bad)
int
in
test
or
shl
push
(bad)
scas
pop
fs
das
int
imul
arpl
movs
dec
mov
out
adc
xchg
mov
popa
gs
mov
pusha
dec
jg
jns
jb
cwde
call
into
push
and
std
mov
into
jnp
call
xchg
outs
fistp
xchg
inc
mov
jno
cwde
lock
add
cdq
bound
retf
lds
iret
lahf
jbe
loop
or
jo
pop
imul
sub
xor
xchg
hlt
pop
das
or
sbb
jns
test
dec
and
fldenv
inc
retf
inc
mov
loopne
(bad)
mov
xchg
popa
sbb
xchg
xlat
jmp
adc
and
and
retf
fsubp
cmps
sub
cwde
call
sti
pop
popf
sub
in
xlat
sbb
mov
push
inc
pop
fmul
adc
push
ror
test
loop
mov
pop
in
pop
outs
mov
jo
fbstp
dec
add
in
push
xchg
cmp
push
push
xchg
addr16
hlt
fdiv
popf
jg
cs
(bad)
out
cmp
mov
push
jle
add
clc
mov
adc
cmp
mov
mov
loope
(bad)
stc
loope
pop
and
add
xchg
sub
mov
mov
jmp
pop
loopne
pop
mov
cli
xchg
retf
in
shl
inc
xchg
xchg
cmps
xor
dec
mov
mov
or
xchg
xchg
sti
push
sbb
sbb
xchg
mov
dec
ror
pop
cmps
adc
jmp
(bad)
pop
addr16
loope
fisub
push
sub
inc
pop
mov
push
mov
mov
idiv
popf
push
and
cmp
inc
mov
in
xor
mov
mov
pop
movs
inc
fimul
out
hlt
jnp
add
jnp
popf
jbe
es
arpl
psrld
xor
enter
dec
cmp
pop
push
cmp
idiv
add
rcr
outs
jbe
cmp
dec
dec
and
mov
(bad)
pop
cli
xchg
mov
jmp
sub
int
jnp
std
jnp
jg
outs
stos
xchg
xlat
test
adc
lea
sahf
sbb
cmps
inc
and
inc
stc
inc
das
dec
xor
and
dec
aad
les
retf
mov
mov
dec
dec
mov
sti
call
js
add
mov
and
in
and
(bad)
ds
jg
jmp
dec
lds
xor
outs
cs
lods
add
cli
shl
mov
enter
xlat
pop
mov
inc
out
cmp
pushf
ret
adc
aam
mov
sbb
enter
inc
lods
pop
fwait
jge
shl
xchg
aad
add
test
jno
aas
aam
pop
ficomp
add
dec
xchg
ins
cs
daa
fnstsw
outs
or
xchg
mov
addr16
mov
or
xor
pop
call
inc
mov
pop
dec
inc
push
jmp
iret
xor
or
imul
mov
push
(bad)
cli
add
mov
xchg
xor
addr16
daa
cmps
pop
ins
jl
gs
jae
in
mov
out
push
inc
gs
mov
mov
stos
add
movs
pop
test
test
in
mov
ret
retf
jne
in
cli
mov
xchg
push
mov
arpl
shl
hlt
popa
push
jne
jge
mov
pop
cmps
mov
iret
cmp
(bad)
aaa
jmp
stos
fimul
addr16
call
adc
dec
cmp
das
stos
mov
int
ins
mov
mov
xchg
jl
ins
out
push
pop
xchg
push
dec
jp
jo
push
or
inc
cmp
sbb
jle
jmp
lods
adc
add
and
push
fnsave
sub
mov
xchg
pop
jae
push
cmc
push
fisub
or
and
pusha
adc
push
pusha
push
or
push
mov
outs
shl
jmp
jno
push
lahf
fist
ds
adc
sbb
add
pop
jecxz
ds
xor
aaa
jbe
mov
jbe
repz
popa
xchg
aam
movs
mov
sbb
and
pop
daa
in
int
sbb
hlt
mov
mov
jno
pop
rcr
aad
call
bound
movs
std
enter
inc
sub
pusha
outs
scas
bnd
xchg
jne
bound
pop
fwait
adc
mov
dec
es
sub
(bad)
daa
test
mov
pop
xlat
jg
es
fmul
mov
fnstenv
nop
cmps
mov
stos
lea
add
cmp
xor
aam
xor
test
les
dec
pop
lock
sbb
pusha
jmp
leave
in
jg
ins
xlat
cmp
fcom
push
repz
loope
stc
fnsave
lahf
fcomip
or
popa
jae
test
imul
inc
fwait
in
repz
fcomp
mov
mov
int
xor
mov
js
jae
pop
push
aaa
or
es
lock
shr
shr
mov
fst
pop
ds
add
mov
and
adc
mov
push
pop
jp
fsubr
je
call
adc
pop
(bad)
fld
ret
out
icebp
or
cld
stos
sub
mov
repz
fidiv
ret
call
sar
push
lods
ret
mov
jne
inc
xchg
sub
sbb
adc
aam
add
pop
icebp
sqrtps
mov
push
inc
sub
jl
sub
jecxz
lods
mov
test
out
or
xor
mov
cdq
jmp
mov
jb
cwde
adc
xlat
lea
or
dec
(bad)
dec
adc
push
pop
les
cwde
sub
xchg
scas
pop
loop
into
cmc
clc
or
push
pop
lea
xor
mov
push
es
jb
leave
add
mov
sahf
aas
imul
jo
cmc
int
ja
pop
inc
lock
xor
xor
enter
hlt
push
dec
mov
dec
xchg
or
loope
cmp
sub
dec
adc
dec
mov
lock
or
call
test
push
adc
dec
jmp
xchg
mov
mov
xchg
int
lock
cmp
adc
or
mov
scas
repnz
ja
sbb
push
ret
xchg
mov
mov
or
push
pusha
sub
sbb
mov
mov
or
push
pop
test
call
cmp
inc
inc
add
call
jmp
out
ins
cmp
jecxz
xchg
pop
cmp
loopne
out
dec
int
test
push
lahf
mov
(bad)
loop
aas
shl
sbb
out
cdq
(bad)
inc
mov
and
aam
cmp
cmp
or
add
cld
sbb
add
ss
test
lods
mov
fistp
ins
cmp
lahf
mov
loop
call
jae
test
push
inc
push
enter
cmp
adc
(bad)
mov
or
push
sbb
repz
mov
sahf
pushf
dec
jo
mov
sbb
repz
jb
and
add
pop
pop
shr
sbb
xor
repnz
sub
jle
aad
xchg
pusha
rcr
pop
data16
out
xchg
and
xlat
add
xchg
lds
iret
push
xchg
jl
pop
xor
iret
clc
mov
fs
mov
fdiv
pop
in
pop
outs
xor
inc
mov
push
cmp
(bad)
jp
push
leave
xchg
push
fwait
adc
(bad)
push
push
les
xor
lds
sub
jecxz
add
(bad)
xlat
push
(bad)
popf
sub
add
nop
jecxz
xchg
xor
fbld
adc
sar
and
and
add
gs
mov
(bad)
mov
jno
push
iret
pop
lds
dec
pop
lds
(bad)
fstp
pop
push
sub
aas
popf
nop
xchg
out
mov
mov
fs
imul
jb
daa
inc
jg
pop
repnz
stc
imul
sub
das
clc
hlt
clc
mov
jl
push
cmps
pop
daa
shl
sti
shl
push
and
xlat
shl
mov
shr
test
cmps
pushf
xor
lea
pop
aad
leave
pop
adc
pop
xor
jnp
test
add
sub
imul
outs
out
jmp
stos
sti
in
dec
cmp
data16
push
cld
popf
jb
shl
adc
gs
adc
pop
cmp
pop
sar
clc
fs
cmps
sub
into
mov
and
jo
pop
sahf
and
mov
retf
fs
cmp
mov
mov
loop
mov
dec
sbb
imul
xor
inc
jge
in
or
inc
dec
cmp
iret
lock
loop
in
call
out
add
mov
lds
jns
push
jmp
push
sbb
cmp
popf
inc
pop
retf
push
out
mov
movs
fs
sahf
push
mov
arpl
mov
adc
push
jp
movs
imul
test
imul
lods
fmul
(bad)
rcl
xor
mov
push
pop
push
cmp
pop
or
push
lods
push
or
icebp
add
jl
les
out
ud1
mov
jp
mov
pop
js
jmp
cmp
jg
mov
jbe
popf
add
adc
call
push
sti
faddp
mov
shl
inc
stc
dec
mov
jb
sub
or
push
jnp
cs
fcomp
add
clc
imul
sti
fcomp
jne
scas
mov
icebp
rcr
mov
lods
push
adc
imul
rcr
jnp
call
test
or
ret
dec
push
inc
fmul
or
adc
add
push
call
dec
add
mov
push
mov
push
mov
xor
jge
cmp
pop
mov
and
mov
dec
(bad)
cmp
outs
xlat
mov
retf
push
arpl
ins
sti
xor
add
xchg
sub
sub
mov
mov
lahf
cmp
enter
ds
jmp
dec
or
mov
aam
and
dec
mov
dec
sub
push
push
outs
lods
mov
out
dec
xchg
ret
pushf
leave
sub
pop
push
stc
dec
sahf
pop
sahf
mov
push
add
dec
in
je
test
mov
and
pop
mov
popf
ins
push
sub
jae
push
mov
sbb
inc
test
xor
out
jmp
je
mov
inc
jae
or
push
lock
push
jmp
mov
int3
mov
and
adc
out
js
jae
aam
pop
sub
loope
jmp
fwait
dec
jo
sbb
addr16
test
pop
jecxz
inc
gs
and
(bad)
xchg
mov
inc
push
mov
(bad)
aad
or
xor
mov
push
dec
stos
sub
inc
stos
or
les
jne
repnz
dec
inc
aaa
push
cwde
cmp
mov
inc
and
cdq
sar
enter
(bad)
pop
ss
int3
xchg
fild
jne
xor
inc
jmp
in
fisttp
sbb
mov
ja
push
stos
ficom
inc
push
cmp
fimul
sbb
mov
ret
adc
in
xchg
gs
in
ret
jge
and
jbe
nop
and
cmp
fisttp
int
cmp
icebp
push
mov
enter
add
cld
ins
mov
mov
mov
daa
lahf
adc
lds
dec
addr16
add
scas
dec
pop
ja
mov
int
cmps
scas
pop
popa
test
xchg
jle
fnstenv
or
sub
nop
mov
pop
into
sub
stos
ins
push
outs
mov
or
test
retf
and
jle
iret
adc
push
push
in
xor
sbb
ret
dec
inc
add
push
jb
sub
(bad)
mov
pop
call
aad
aam
push
mov
sbb
imul
ss
push
or
in
xlat
shr
jle
das
add
pop
jl
cs
enter
pop
loope
cmp
cli
call
dec
clc
popa
setg
pop
sub
ins
push
fimul
xchg
test
int
fld
ins
sub
repz
inc
mov
and
sti
or
mov
inc
int3
(bad)
lea
sbb
in
and
xchg
scas
jns
movs
pop
inc
(bad)
out
in
xchg
or
mov
push
mov
inc
mov
mov
or
and
ds
pop
mov
out
pop
fldcw
jbe
xor
cmp
add
and
jg
sub
scas
cmp
mov
jo
mov
mov
pop
sub
cmp
jmp
xchg
imul
imul
je
sahf
push
data16
not
cmp
xor
ret
pusha
fistp
and
ret
out
xor
aam
fstp
stos
mov
cli
loope
repz
icebp
std
jmp
mov
mov
sub
mov
inc
mov
cdq
int3
movups
lods
sub
dec
pop
push
mov
leave
mov
dec
stos
dec
out
adc
mov
xor
jl
or
in
into
push
repz
iret
xor
sub
mov
scas
pop
fmulp
clc
xor
ret
and
xchg
rcl
pop
mov
dec
sub
pop
sar
dec
fisub
adc
inc
mov
scas
in
push
dec
popf
inc
lods
lock
jle
ins
imul
xchg
inc
push
mov
mov
call
pop
rol
into
or
mov
mov
sub
dec
leave
inc
stc
nop
xchg
inc
pop
xor
aam
cmc
ret
fwait
jp
ret
lock
xor
clc
ins
xor
sbb
mov
bnd
cdq
shl
cmc
sbb
mov
dec
mov
nop
ss
pop
mov
loop
addr16
push
retf
sub
jne
jno
in
int
jo
jl
pushf
pop
into
jg
jb
stc
imul
test
imul
loopne
cdq
mov
fld
loop
or
add
push
(bad)
fild
pop
retf
push
jno
mov
push
fsub
iret
add
mov
and
sub
(bad)
mov
mov
cld
cmp
dec
sbb
ret
jo
inc
push
jno
sub
fsub
sub
cmp
mov
mov
stos
jmp
in
add
shr
and
lock
add
les
cmp
xchg
push
push
mov
mov
fcmovnb
and
ret
sbb
sbb
mov
ins
dec
pop
mov
pop
scas
inc
xchg
mov
stc
sub
xor
rcl
add
sbb
push
int3
dec
test
(bad)
(bad)
jmp
mov
retf
cmps
mov
out
je
and
movs
loopne
push
xor
sbb
jp
fstp
fs
push
sbb
xchg
rcr
jmp
xor
sbb
mov
xor
xor
or
dec
hlt
fdivr
aad
xchg
aas
loopne
mov
push
js
push
add
std
dec
sub
das
mov
mov
ss
enter
repnz
pop
jbe
ss
js
mov
xchg
les
mov
pop
push
ret
into
add
push
adc
std
pop
dec
inc
adc
push
push
das
lds
out
xchg
(bad)
enter
(bad)
fistp
dec
mov
sub
popa
ds
sub
js
arpl
mov
loop
xor
pop
iret
retf
xor
adc
mov
xor
dec
xchg
ins
add
or
jne
lods
ins
ja
adc
test
mov
iret
arpl
bndstx
repz
nop
cwde
adc
push
inc
jns
mov
inc
ins
push
cli
test
and
icebp
pusha
in
pop
cmc
jp
into
mov
jb
mov
test
mov
add
rcr
lahf
mov
gs
nop
out
inc
fild
dec
rol
add
jecxz
ds
sub
icebp
jle
lahf
shl
add
popf
cmp
mov
xchg
in
push
mov
out
movs
imul
inc
cmp
call
not
xor
push
mov
sub
pop
adc
mov
(bad)
push
add
jns
dec
xchg
je
shl
out
and
adc
ss
in
cwde
jg
mov
cld
mov
and
push
lock
jmp
lea
in
add
hlt
jbe
xchg
out
stc
jnp
mov
push
xor
pusha
shl
mov
mov
lock
push
in
add
inc
es
call
outs
retf
repz
(bad)
adc
cmc
call
test
icebp
sbb
stc
int3
std
adc
sti
stc
je
retf
xchg
and
dec
add
sub
cdq
jmp
dec
add
call
enter
jg
in
ror
xchg
repnz
jb
jo
in
std
mov
ja
pop
dec
pop
and
pop
dec
dec
mov
jbe
clc
pop
call
cmp
inc
inc
std
mov
sbb
imul
sbb
push
jbe
push
mov
imul
aas
mov
adc
cmps
xchg
loope
ret
in
pop
lods
jg
cwde
(bad)
or
lock
retf
xlat
jno
pop
dec
aam
cs
(bad)
jae
aas
mov
int3
inc
mov
jb
call
ja
or
xchg
test
pusha
or
or
call
call
test
daa
jno
rol
push
icebp
jns
into
mov
inc
pop
cmp
sub
sahf
retf
outs
sahf
sbb
mov
out
call
inc
mov
call
xchg
cs
in
adc
adc
jnp
das
outs
fwait
cmc
mov
push
pusha
mov
test
jmp
aaa
shl
jmp
inc
cli
aam
leave
aas
movs
enter
js
pushf
pop
dec
sub
mov
das
pop
stc
fwait
sub
lds
xor
cmp
fs
out
lea
aam
mov
(bad)
out
mov
dec
stos
inc
jmp
sbb
xchg
sar
leave
sbb
mov
dec
repz
xor
and
sub
and
dec
add
cmp
dec
push
add
jnp
test
rcl
int
aam
push
inc
leave
fcom
mov
dec
and
cmps
mov
cmp
fimul
fsubr
lea
dec
scas
xchg
xor
sbb
sub
xchg
cmps
cmp
or
test
or
mov
out
xchg
(bad)
push
xchg
nop
in
dec
mov
inc
mov
xchg
stos
shl
sbb
retf
mov
xor
xlat
jno
or
adc
clc
cmp
mov
jl
mov
or
xor
sbb
mov
vpavgw
lods
jo
push
push
sub
lahf
pop
loope
das
cmp
mov
xor
arpl
and
iret
xchg
jg
cli
dec
xor
(bad)
mov
mov
xor
xor
mov
sub
sbb
ret
or
push
mov
cli
add
push
mov
pop
lds
dec
mov
mov
sar
jg
push
jecxz
cli
fsub
xor
fld
pop
iret
cmc
retf
pop
cmp
cmp
push
xchg
jae
aam
lock
adc
movs
movs
call
mov
mov
pop
jo
or
cmp
fst
mov
xchg
mov
nop
aas
ret
es
popf
dec
test
out
mov
pop
retf
sahf
adc
das
fcom
and
fwait
and
sar
shl
icebp
inc
lock
mov
aaa
cmp
cli
inc
xchg
and
mov
jne
sub
push
xlat
(bad)
dec
add
adc
bound
or
inc
sbb
mov
pop
int
inc
add
xor
stos
fst
hlt
rcr
pop
push
mov
call
pop
test
(bad)
push
lock
inc
cdq
pop
xchg
lods
jnp
outs
jae
shl
mov
add
scas
pop
mov
and
std
push
sar
cmps
ret
adc
out
pushf
inc
call
jo
pop
out
mov
bound
pushf
fs
pop
in
loope
xor
mov
jp
arpl
popf
inc
call
or
jmp
test
pop
loop
add
push
xchg
jno
mov
scas
not
aam
dec
push
lds
dec
or
call
jp
out
stc
test
pop
inc
mov
inc
outs
sub
hlt
stc
xchg
mov
movs
(bad)
pop
sbb
add
(bad)
and
add
jno
pop
pop
push
ret
fdivr
dec
popa
push
xor
repnz
in
push
mov
jmp
int3
fidiv
jb
leave
test
jbe
push
dec
int
loope
data16
xor
cmp
mov
fisttp
daa
(bad)
xor
arpl
movs
cmp
xor
jle
repnz
les
arpl
(bad)
jae
xor
jg
push
adc
cwde
mov
out
leave
xor
and
out
xchg
dec
jg
xchg
in
push
hlt
sub
xlat
push
ja
add
xchg
lds
fcmove
and
ror
test
aas
cmps
inc
test
or
call
jmp
jp
sbb
mov
shl
(bad)
and
dec
in
out
out
sti
dec
lods
sub
(bad)
out
xor
cmc
shl
mov
pop
loop
in
lock
test
dec
fs
sbb
xchg
push
push
pop
(bad)
js
and
mov
jmp
in
adc
stos
dec
xchg
push
or
imul
jg
push
and
mov
mov
rol
test
and
adc
pop
stc
(bad)
leave
call
push
inc
inc
hlt
lock
sahf
dec
pop
jno
push
out
jg
mov
rep
test
dec
jmp
jmp
cmps
pop
lods
add
mov
jmp
out
mov
push
stc
push
outs
inc
xor
call
aas
das
mov
arpl
cli
xchg
adc
popa
neg
and
mov
scas
popa
jmp
cmp
pop
lock
lds
cmc
inc
sbb
xor
mov
xor
sub
pop
pop
pop
dec
push
add
pop
sbb
outs
bound
mov
popa
test
or
mov
movs
out
fdivr
cs
inc
iret
fsubr
cwde
jmp
ds
xchg
cdq
scas
repz
sbb
frstor
adc
mov
cld
loope
or
lods
nop
cmp
ret
lds
je
sbb
imul
sub
xor
popa
xor
sbb
push
push
test
add
lods
dec
sti
jns
mov
or
(bad)
jmp
test
aam
or
mov
cmp
or
or
or
call
mov
or
add
push
inc
adc
fistp
xchg
out
xchg
call
lods
retf
test
daa
aas
(bad)
and
mov
mov
retf
mov
pushf
rcl
sbb
push
ret
inc
jns
push
pop
dec
jl
mov
jp
cmp
std
jbe
test
fs
inc
xchg
scas
xchg
ret
mov
call
adc
aad
jg
adc
sbb
jbe
mov
adc
jmp
out
or
repnz
sub
dec
int3
sbb
inc
adc
out
sub
(bad)
add
and
adc
int3
jl
stos
fwait
or
add
test
imul
add
mul
cs
dec
jmp
inc
sub
or
push
xor
or
cmp
push
sub
inc
into
jo
sub
in
xchg
fld
push
(bad)
repz
sbb
xchg
mov
mov
fdivrp
inc
in
retf
or
jmp
xchg
mov
std
outs
mov
add
xchg
jne
mov
ror
fild
jnp
pusha
jne
ficomp
ja
xchg
rol
imul
inc
bnd
add
test
test
test
rol
fsubr
xchg
cli
add
in
mov
aam
add
xchg
push
gs
push
pop
fnstcw
inc
mov
cmps
sub
retf
push
mov
shl
jmp
hlt
jnp
sbb
jae
or
xchg
mov
shl
mov
and
aam
fucomip
retf
adc
test
(bad)
scas
mov
xor
push
pop
dec
sbb
jl
mov
sbb
mov
call
mov
nop
dec
pop
iretw
pop
mov
sbb
ins
jp
(bad)
fnstenv
stos
jne
jl
and
add
imul
sbb
pop
call
movs
dec
add
jbe
sbb
out
pop
outs
adc
cmp
xchg
hlt
mov
stos
retf
mov
dec
sub
adc
jge
jmp
fistp
bound
push
movd
add
jecxz
mov
sub
sbb
stos
push
mov
not
scas
sbb
cs
add
dec
pop
add
pop
mov
sub
fldpi
xchg
icebp
(bad)
cs
ins
cmp
out
add
and
mov
call
and
aaa
in
sbb
mov
mov
fnstenv
in
(bad)
sar
in
and
cmps
lods
ds
cmp
xchg
adc
in
cmp
add
sahf
gs
gs
test
ins
mov
(bad)
int
and
fadd
sub
mov
add
cmp
pop
inc
push
inc
push
xor
inc
in
inc
mov
loop
inc
sub
ja
or
addr16
aad
bound
sub
xchg
ins
call
leave
cmc
inc
nop
shr
int3
loopne
xor
das
or
and
dec
mov
or
cmc
mov
loopne
add
sahf
xchg
push
cdq
jns
cmp
imul
mov
inc
cmp
(bad)
dec
sub
jl
jo
ss
ds
jle
out
inc
(bad)
sbb
jle
outs
data16
adc
ficom
inc
pusha
pop
push
adc
or
xchg
inc
test
pushf
adc
es
ja
dec
push
ret
not
xchg
cmc
mov
mov
cmc
cmps
and
push
out
push
jns
push
(bad)
aaa
std
icebp
mov
and
gs
sub
sub
sub
inc
inc
jg
push
bound
movs
jne
bound
ret
retf
mov
les
in
cdq
jo
and
push
or
pusha
push
dec
jae
mov
jbe
jg
pop
dec
cli
or
xchg
xchg
jecxz
inc
fstp
ins
lea
out
(bad)
fild
sbb
ja
pop
push
out
mov
out
xchg
ret
cmps
popf
push
adc
inc
mov
call
retf
xchg
retf
int3
shl
push
xor
xchg
fst
cmp
int
mov
pop
add
call
xlat
fsubp
(bad)
push
ficom
ror
sti
pop
cmp
add
dec
ror
test
or
ficom
pushf
lea
inc
test
cmps
cmp
sub
xor
pop
outs
fwait
(bad)
jmp
mov
sub
cmps
sub
pop
push
js
arpl
push
test
hlt
outs
add
fisubr
xchg
xlat
pop
add
push
cmp
lahf
add
(bad)
mov
movs
mov
and
mov
ds
sbb
ret
sub
dec
int
and
inc
(bad)
jb
int
jle
cwde
push
xor
retf
hlt
ja
sbb
in
jnp
pop
jmp
adc
ja
out
xchg
pop
pop
fisub
mov
jo
xchg
dec
xor
test
cmc
inc
sti
retf
test
jns
sub
pop
mov
out
inc
popa
mov
push
test
dec
mov
int
cs
inc
or
pop
add
push
add
ficom
sbb
fild
icebp
ret
cld
mov
xchg
and
pop
repz
and
sbb
(bad)
std
mov
xor
fisubr
mov
fidivr
icebp
push
je
pop
push
retf
mov
jmp
xor
push
fs
pop
mov
sbb
jge
out
inc
xchg
xor
leave
int
stc
jmp
adc
push
cmp
cli
xchg
lods
jno
cmp
jmp
adc
arpl
push
pop
inc
mov
cdq
fnstenv
mov
pop
jae
add
mov
mov
jg
call
mov
js
fbstp
test
enter
xchg
push
adc
loope
sbb
ss
adc
pusha
test
rcl
mov
mov
nop
cmp
ds
inc
int
jae
xlat
es
jge
popa
es
sub
push
jmp
ds
mov
and
sub
ins
push
jmp
and
fstp
retf
addr16
and
out
dec
outs
dec
jge
iret
cli
mov
stos
push
(bad)
push
jmp
pop
xchg
sub
mov
add
pop
mov
or
ins
std
sub
ret
pop
push
int
popa
out
retf
hlt
jecxz
arpl
les
pop
cmp
and
int3
mov
mov
cmp
jbe
sar
daa
ds
pop
adc
xchg
out
cmp
jbe
popa
adc
and
fxch
sahf
jb
or
fsub
jp
push
ins
imul
and
mov
adc
neg
aaa
ins
in
jnp
jne
pop
loope
inc
icebp
xor
push
in
(bad)
gs
out
lahf
cmp
mov
(bad)
and
and
push
scas
inc
mov
(bad)
mov
mov
mov
loop
cmps
cdq
xchg
sbb
jbe
repnz
push
rol
std
sahf
cwde
ja
xor
test
or
jno
mov
or
and
mov
dec
sahf
lock
arpl
inc
sub
xchg
lods
mov
mov
dec
ja
outs
mov
nop
test
call
pop
mov
retf
pop
out
mov
outs
mov
xor
stos
inc
iret
dec
or
mov
imul
out
pop
out
xor
stos
and
mov
arpl
inc
addr16
mov
int
icebp
mov
push
popa
cmp
loop
repz
ficom
js
loope
dec
ret
jle
inc
sub
lahf
les
sub
ret
cmps
add
jl
out
clc
into
cmp
je
adc
in
mov
in
push
loop
and
cmc
ds
dec
lods
aam
add
push
sub
mov
push
jb
(bad)
jmp
cmc
das
sbb
stc
test
dec
add
mov
scas
mov
hlt
cmps
mov
and
js
(bad)
sub
les
mov
inc
stos
xchg
mov
retf
jge
lods
cmp
sub
stos
stc
adc
sub
sub
sbb
cmc
fist
or
lea
div
into
xchg
mov
fisttp
jg
pop
(bad)
leave
and
ret
mov
test
mov
pop
in
or
mov
mov
dec
jne
inc
getsec
fs
sahf
call
mov
pop
loope
xchg
mov
adc
ds
adc
pop
jg
sub
push
sub
and
fimul
std
or
mov
lods
xchg
jge
xor
jl
adc
ror
or
aad
inc
adc
jecxz
sub
es
aaa
adc
jecxz
or
mov
test
pop
test
jo
loop
faddp
fsubr
fdiv
sub
dec
or
les
iret
jb
push
inc
loope
jae
jno
movs
xor
xor
inc
mov
and
and
push
mov
add
fiadd
cmps
adc
xor
adc
adc
pop
in
imul
adc
jle
add
or
push
aad
sbb
xchg
retf
cld
inc
movs
cli
lods
mov
in
out
xlat
ss
xor
fidiv
daa
cs
jne
call
mov
shl
mov
mov
cwde
outs
sub
inc
xchg
lea
mov
pop
into
add
les
lea
hlt
cs
push
mov
int
out
sar
fsub
outs
hlt
pop
xor
pop
mov
xchg
sti
pop
jg
sub
add
push
inc
out
jl
aaa
clc
mov
add
jbe
movs
pop
repnz
jg
inc
daa
pushf
pop
fs
je
fcmovbe
adc
and
call
(bad)
xor
repz
icebp
in
test
add
mov
pop
das
fild
sub
jae
ficomp
jmp
repz
into
add
pop
lahf
adc
bswap
mov
mov
std
shl
or
in
cmp
sbb
cmp
stos
in
xchg
popf
dec
clc
stos
(bad)
lea
movs
mov
and
mov
stos
adc
jne
sbb
xchg
and
repnz
xchg
stc
xchg
ret
xchg
pop
pop
inc
jno
cwde
mov
jnp
fucomp
in
(bad)
push
sub
addr16
aaa
and
mov
fisubr
sbb
jns
dec
mov
shl
fs
xchg
shr
adc
les
jmp
xchg
imul
push
push
jmp
repz
fsub
or
lea
popa
(bad)
gs
bound
inc
fnstsw
mov
cmp
fist
nop
xor
les
adc
jg
fs
pop
or
sti
push
mov
pop
ret
call
cmc
xlat
(bad)
retf
push
xor
mov
jno
mov
repnz
push
jno
mov
loop
pop
inc
cmps
jle
cmc
cwde
loop
aas
jecxz
iret
or
jnp
(bad)
(bad)
aas
js
mov
scas
fldenv
push
dec
adc
in
shl
xchg
cmp
cmc
lock
inc
and
mov
mov
mov
lds
push
into
scas
pop
sahf
hlt
lea
nop
mov
ins
lock
rcl
add
(bad)
out
cmp
adc
xor
lea
dec
and
aam
mov
or
push
ret
inc
jecxz
aam
aad
pop
adc
gs
nop
(bad)
mov
(bad)
jg
(bad)
mov
xchg
ror
pop
jb
test
arpl
inc
inc
(bad)
in
jmp
jno
xor
movs
inc
out
sub
call
jo
fs
ins
push
inc
out
outs
jnp
into
jl
outs
cmps
rol
jg
sbb
lds
xor
aad
cld
imul
push
test
sbb
xor
dec
mov
popf
nop
in
out
mov
pusha
cmp
jg
enter
xor
xor
or
dec
or
mov
das
add
push
sahf
aad
mov
ficom
inc
cmp
inc
push
mov
push
adc
sub
dec
loope
ja
mov
int3
mov
add
xchg
dec
xchg
rcl
mov
mov
outs
call
xor
sahf
retf
inc
adc
test
dec
push
shr
int3
adc
dec
jo
sti
ins
adc
mov
hlt
pop
(bad)
mov
push
fnstsw
sbb
or
ins
sar
push
out
pop
sbb
mov
pop
(bad)
int
pop
or
mov
ins
push
aam
test
loop
loope
xchg
fisubr
xor
xchg
adc
cs
mov
mov
mov
fwait
mov
sti
cmp
lea
jno
repz
addr16
xor
aam
iret
cmc
adc
sti
ins
or
ins
add
adc
push
pop
in
mov
mov
icebp
sbb
daa
dec
mov
or
add
loopne
in
push
xor
retf
sbb
and
into
pop
fist
jns
or
nop
and
pop
dec
repnz
gs
mov
jle
mov
sahf
push
(bad)
cmp
das
xchg
scas
adc
faddp
lock
push
test
jb
or
retf
retf
xlat
jp
je
xchg
jle
xchg
push
jg
les
mov
fs
add
rcl
mov
or
cmc
loopne
js
jno
fnstcw
fwait
add
in
pop
rcr
(bad)
in
push
sub
dec
ja
stos
inc
add
adc
xor
call
(bad)
mov
repz
dec
mov
out
fs
ret
lock
jne
out
icebp
aam
jp
(bad)
jne
cdq
fcomp
cmp
mov
push
adc
add
or
push
xchg
dec
imul
ret
jb
jmp
xchg
js
or
pushf
pop
jae
out
push
sub
mov
mov
daa
add
bound
adc
(bad)
mov
xchg
pop
jnp
push
stos
jae
and
fisubr
(bad)
mov
ins
sub
mov
ror
int3
ss
xor
nop
inc
adc
pop
ds
sar
pop
mov
cmc
pusha
sar
and
sub
bound
shl
mov
cmp
cdq
dec
mov
jo
sbb
push
test
or
sbb
in
fisttp
sub
or
and
imul
lds
leave
ds
cwde
jl
shl
ins
jne
mov
int3
xchg
not
add
sub
push
adc
sbb
movs
push
int3
lahf
mov
push
mov
out
aas
jle
ja
mov
inc
inc
stc
dec
imul
mov
sbb
popf
mov
dec
adc
sahf
mov
jle
clc
jecxz
test
loope
or
xor
ja
push
ins
ins
clc
es
rcr
retf
xor
cmps
mov
inc
dec
stc
das
jbe
je
sub
out
test
adc
(bad)
push
out
jg
jns
jle
xor
fisub
pop
push
lea
jo
cmp
hlt
and
inc
dec
xchg
mov
inc
pop
imul
lea
xor
inc
xor
in
out
or
imul
add
mov
loop
pop
jge
push
push
into
pop
je
retf
push
test
mov
pop
mov
xchg
outs
int
gs
fimul
out
inc
mov
shl
lods
test
or
popa
push
xor
lods
pop
out
push
pop
retf
arpl
lea
xor
ret
popa
neg
xchg
mov
rcr
xor
pushw
and
loop
popa
sub
repnz
jge
iret
pop
inc
bound
push
push
mov
push
test
cli
fisubr
clc
push
and
adc
mov
int
mov
jp
pusha
inc
inc
dec
add
fidiv
ret
mov
popf
or
jno
mov
jge
rsqrtps
cmp
call
fcom
adc
or
dec
push
inc
adc
gs
ficomp
push
out
cli
inc
inc
mov
and
lods
dec
xchg
dec
popf
dec
mov
retf
xchg
pop
mul
mov
popa
scas
imul
jnp
mov
pop
inc
stc
imul
loopne
and
xor
dec
mov
adc
cmps
enter
test
sbb
fimul
push
inc
jl
sub
push
outs
xchg
das
xchg
mov
xor
inc
sub
lock
(bad)
ja
push
test
adc
sahf
mov
fcomp
sbb
imul
mov
xor
cld
sbb
popf
test
aas
sti
mov
stos
dec
xchg
cld
(bad)
xor
pop
xchg
and
pop
cmps
mov
mov
loopne
cmp
add
pop
inc
daa
jg
loope
das
push
cmc
ret
stos
cmp
add
push
ret
test
outs
cmps
pop
ins
cmp
cmp
push
fcomp
cmp
pop
daa
mov
ret
jo
test
or
pop
pop
jnp
jno
mov
xchg
pop
pop
adc
inc
lahf
iret
jno
mov
cs
mov
pop
pop
clc
sahf
xchg
scas
and
test
bound
jmp
xchg
(bad)
test
add
xor
ror
adc
sbb
arpl
out
add
mov
popa
outs
xchg
pop
sbb
or
sub
cmc
xchg
fs
mov
jbe
inc
iret
pop
enter
push
adc
pop
jb
std
jp
inc
cwde
inc
out
retf
movs
pop
ins
mov
bound
cwde
adc
mov
mov
into
imul
adc
cld
jno
jmp
retf
jae
jnp
stos
xchg
rcl
movs
pop
push
in
aas
xchg
sub
jbe
pop
mov
push
xchg
fadd
mov
and
pop
aad
jmp
inc
ret
xlat
test
or
sbb
(bad)
loope
mov
and
mov
adc
add
in
cld
shl
mov
imul
xor
lds
test
outs
call
shr
mov
sbb
int
stos
sub
sbb
cmp
mov
ret
(bad)
cs
or
dec
nop
push
jge
pop
or
or
pop
inc
fadd
inc
mov
retf
xor
cli
les
mov
(bad)
inc
inc
xchg
enter
adc
daa
inc
fdivr
popf
or
test
stos
adc
pop
ror
lock
mov
ja
mov
mov
shl
bound
aas
aas
popa
int3
xor
pop
adc
(bad)
adc
js
fcomp
test
sub
in
adc
dec
scas
xchg
(bad)
jo
or
out
mov
mov
pop
mov
jge
jg
mov
mov
mov
sub
scas
fist
push
add
(bad)
out
and
fs
iret
call
mov
mov
adc
fisubr
add
test
dec
sub
cwde
xor
test
pop
add
(bad)
push
xchg
xor
out
ret
es
stos
fimul
mov
or
std
das
in
cmp
cmp
ret
jne
jmp
push
in
loop
(bad)
imul
add
(bad)
xor
je
push
or
jne
sub
popf
mov
int
dec
sub
sbb
cmp
sub
inc
cmp
sub
loope
jbe
fsubr
out
sub
pop
pop
(bad)
pop
out
sahf
sbb
or
imul
mov
cmp
out
inc
add
mov
jb
xor
mov
xor
sbb
ret
enter
mov
sub
pop
rcl
pop
leave
shl
rcr
or
jae
mov
sbb
cmp
cmp
adc
push
jl
mov
jae
popa
push
mov
pop
sahf
pop
js
cmp
repz
cmps
mov
jg
(bad)
jmp
adc
ins
mov
mov
xchg
scas
push
cmc
xchg
(bad)
mov
adc
sbb
cdq
test
sub
pop
xchg
jbe
sar
jge
mov
and
pop
loop
mov
mov
jb
jmp
xchg
xor
sub
jne
jb
jae
fistp
and
xlat
pop
push
call
pop
ficom
add
mov
inc
pop
fwait
das
daa
cmp
movs
add
lds
dec
data16
cmc
dec
xchg
xchg
int3
mov
mov
jle
cmp
xchg
call
retf
stos
inc
mov
push
jnp
fyl2xp1
mov
xor
and
rol
jge
(bad)
adc
mov
shl
mov
mul
or
jnp
mov
fs
lods
or
test
rcr
sbb
jp
xchg
ds
xor
xchg
xchg
inc
mov
or
stos
mov
sbb
int
shl
or
jge
sbb
push
mov
test
sti
mov
scas
and
push
sub
adc
mov
inc
mov
stos
stc
ret
(bad)
lock
out
xlat
sbb
push
cld
dec
sbb
jne
push
jb
jp
fldcw
adc
ficomp
dec
inc
or
ret
pop
sbb
not
cld
clc
xchg
data16
mov
aas
cmps
lods
jae
fld
pop
data16
cmp
ss
xchg
ficom
jno
mov
add
mov
adc
lock
jb
call
aaa
ds
adc
loop
mov
imul
and
inc
pop
dec
arpl
sub
and
mov
push
xchg
sbb
push
sub
jmp
push
(bad)
mov
inc
push
int3
dec
jg
or
lds
pop
xor
push
adc
movs
loope
xchg
out
xchg
sub
mov
sub
adc
das
and
mov
dec
cmp
add
int
scas
idiv
mov
cli
fdiv
cmp
sub
add
push
stc
dec
cli
nop
fcomp
pushf
sub
test
cmp
push
shl
cld
xchg
retf
mov
ja
ror
jmp
jae
inc
mov
aam
and
xor
sbb
sub
and
in
stc
push
jg
ror
pop
pop
neg
cmp
aad
mov
shr
repz
mov
loopne
dec
mov
dec
mov
pop
fiadd
fldcw
dec
pusha
popa
fidivr
retf
push
fbstp
popa
cwde
inc
adc
adc
les
or
mov
xchg
shr
pop
mov
movs
jae
les
in
mov
xchg
xchg
call
dec
pop
(bad)
mov
mov
stc
adc
pop
adc
lock
mov
mov
push
int
stos
jg
aad
stc
pushf
(bad)
lods
or
stc
int
adc
dec
pop
sub
xor
mov
xor
dec
add
jg
xchg
cdq
movs
shr
in
fiadd
cmp
pop
xlat
sbb
mov
dec
and
jb
mov
mov
aam
sbb
lahf
inc
jmp
lods
cs
sub
fist
cmp
mov
jno
cmp
mov
arpl
xor
ja
clc
jmp
lods
sub
popa
shl
stc
or
adc
cmp
pushf
mov
adc
inc
add
mov
jmp
adc
enter
cwde
push
inc
jb
push
hlt
(bad)
mov
lahf
mov
outs
and
fs
mov
and
jmp
sbb
in
aad
lods
out
xchg
imul
push
mov
adc
je
loop
mov
in
pop
and
inc
(bad)
mov
jmp
loopne
psadbw
push
nop
in
cmp
test
jnp
pop
xchg
into
dec
or
cdq
push
test
repz
jge
loop
fst
or
fisub
xor
fcmovb
jmp
fs
retf
aad
and
out
cld
dec
shl
mov
xor
(bad)
and
push
pop
mov
sub
scas
bound
xchg
xor
es
pop
cdq
cmps
rcl
push
or
in
and
mov
dec
xor
jb
jl
sbb
ins
lahf
or
add
mov
data16
test
pusha
test
mov
push
dec
icebp
in
inc
imul
cmovbe
mov
mov
(bad)
fld
adc
mov
fisttp
fsubr
ds
dec
mov
call
push
bound
xchg
imul
push
sahf
js
xor
jl
pop
jp
inc
sbb
add
out
pusha
jb
mov
inc
push
pop
(bad)
push
iret
xor
scas
aas
fs
mov
cmp
ds
adc
iret
dec
mov
sbb
xor
fiadd
pop
ins
lahf
or
cmp
retf
fist
mov
(bad)
pop
and
push
loopne
xchg
outs
lods
movs
and
cmps
xchg
ret
cld
cmp
je
jo
inc
jnp
arpl
fist
pop
fld
call
pmulhuw
inc
push
movs
sub
xor
js
lods
test
in
fnstenv
adc
aaa
cmp
sub
xor
and
mov
add
xchg
add
call
and
sbb
mov
mov
pusha
and
sub
or
inc
bound
test
cmp
mov
or
adc
xchg
pusha
mov
fcomp
ret
adc
sti
popf
xchg
adc
in
inc
pop
jp
adc
add
arpl
enter
sbb
pop
jecxz
push
retf
scas
call
xor
icebp
push
inc
or
int
movs
adc
push
scas
sbb
push
mov
shl
dec
jg
fisub
lock
xchg
inc
daa
(bad)
inc
shl
inc
cmps
(bad)
xor
cwde
retf
stos
stos
mov
mov
aad
hlt
inc
sub
mov
call
aad
and
int3
sbb
jmp
xchg
loopne
cs
dec
(bad)
mov
sbb
fs
mov
fbld
out
jnp
test
sub
xor
mov
cmp
scas
mov
stos
mov
lea
add
pop
cmps
(bad)
fldenv
fsub
mov
mov
out
test
xchg
mov
js
js
push
mov
test
pop
les
push
iret
loopne
or
les
out
daa
out
sbb
mov
and
sub
xchg
inc
mov
fadd
gs
gs
fdivr
add
stos
sub
or
ja
adc
sbb
mov
scas
jp
jnp
cld
popa
mov
jge
cwde
movs
int3
popa
fisub
jle
shr
mov
and
movs
jmp
aaa
and
mov
jae
and
add
xor
add
and
ret
jo
mov
and
and
sbb
push
mov
ds
outs
xchg
xchg
sets
jle
loope
cld
jno
mov
inc
dec
fs
cmps
adc
data16
adc
call
cld
add
adc
(bad)
add
or
pop
aaa
das
aas
mov
xchg
jns
xchg
push
adc
mov
js
sbb
pop
mov
inc
xchg
mov
pop
nop
and
cmc
push
popa
(bad)
test
inc
jg
sub
in
jno
(bad)
and
mov
inc
mov
mov
adc
in
xchg
sysenter
ret
add
sbb
lods
(bad)
mov
scas
jne
pop
out
sbb
(bad)
sbb
sbb
(bad)
dec
pop
lods
lock
xor
movs
and
das
or
ja
test
pop
cwde
mov
ins
sbb
rcr
cmp
or
int3
sub
fdivr
mov
lahf
xlat
frstor
pop
aaa
mov
sbb
push
cli
mov
test
mov
jae
cwde
dec
push
js
push
jmp
fdivr
sub
fidivr
dec
aas
adc
inc
and
jmp
cmps
popf
fnstsw
add
stc
inc
into
and
adc
dec
push
mov
movs
add
inc
dec
adc
jo
cli
jge
and
cmps
xchg
mov
jmp
mov
cwde
pop
jg
jne
pop
ins
pop
jns
inc
je
add
dec
push
adc
sub
jmp
pop
mov
mov
out
xchg
sbb
cld
jne
mov
repnz
aad
ins
mov
jle
(bad)
jmp
xor
mov
adc
jmp
popf
(bad)
jecxz
ss
leave
retf
rcr
mov
push
push
xchg
xchg
mov
mov
aam
inc
mov
mov
cwde
cmp
popa
xchg
not
sbb
mov
xchg
mov
cmp
loop
sbb
sbb
mov
repnz
mov
(bad)
nop
inc
aad
and
pop
pop
mov
mov
sub
mov
mov
aad
clc
ror
dec
ins
aam
sbb
adc
(bad)
jmp
or
xor
pusha
mov
(bad)
in
sub
(bad)
in
jne
sti
sti
in
lea
sub
into
out
xchg
mov
jl
daa
inc
jae
add
jle
mov
aaa
lods
mov
xchg
cdq
dec
mov
imul
mov
out
loope
xchg
js
push
sbb
aas
shl
(bad)
(bad)
cld
ins
ss
sub
cli
mov
ins
mov
inc
pop
int3
iret
jl
sahf
and
test
repnz
lock
neg
pop
in
mov
ret
sbb
mov
or
jne
inc
dec
or
mov
ins
ins
lods
sub
adc
inc
pop
shl
sbb
inc
mov
push
xchg
xor
mov
jnp
mov
sahf
daa
push
mov
leave
arpl
outs
(bad)
jmp
retf
mov
inc
and
shl
(bad)
jmp
inc
sbb
xor
test
test
mov
mov
hlt
sub
jmp
xchg
adc
fadd
mov
rol
adc
stos
xchg
fadd
scas
adc
enter
(bad)
lea
iret
cmps
dec
xchg
push
mov
xor
loopne
cmp
inc
pushf
ret
pusha
xor
cmp
cmp
fsub
adc
lahf
jge
dec
mov
mov
lea
dec
xchg
nop
sbb
sbb
dec
and
cmps
pop
add
or
inc
sub
psubq
retf
xchg
mov
(bad)
lds
sahf
jle
sbb
cmp
nop
and
arpl
enter
cs
movs
lahf
and
jno
mov
retf
sahf
fidiv
aam
mov
out
mov
mov
jmp
clc
add
pop
push
popf
fisub
leave
cmp
cmp
outs
xchg
js
or
fnstsw
sbb
int3
jmp
pop
push
pushf
aad
mov
ja
icebp
xchg
data16
imul
shr
imul
lds
inc
push
test
dec
xchg
add
loop
pop
add
or
push
xchg
pop
test
mov
or
jmp
jmp
mov
pop
mov
ins
and
pop
adc
inc
scas
mov
inc
fwait
cli
push
in
sub
adc
jbe
sti
xlat
mov
ins
lea
add
test
data16
pop
dec
mov
movs
dec
fisttp
adc
sti
lods
push
jmp
sub
(bad)
(bad)
cmp
je
mov
movs
xor
lea
fisubr
mov
cmp
jns
pop
rcr
cmp
sar
add
ins
mov
jnp
cmp
push
loope
sar
mov
hlt
mov
outs
shr
loopne
push
adc
sbb
fwait
pusha
xchg
lahf
lea
retf
mov
cmp
aam
dec
push
xor
xchg
jle
pop
xchg
stos
sbb
jmp
imul
int
outs
(bad)
lock
aad
inc
pusha
les
push
in
imul
stos
into
adc
mov
clc
xchg
shl
jnp
xchg
adc
mov
enter
out
lock
jg
jb
add
clc
(bad)
jmp
clc
int3
jbe
sub
daa
(bad)
mov
push
push
xchg
dec
push
shl
popf
cmps
sub
push
push
test
aad
and
cli
lods
pop
inc
sahf
bound
mov
outs
and
(bad)
mov
cmp
in
icebp
fwait
imul
mov
or
add
ficom
xchg
in
and
movs
loop
xchg
out
bnd
popf
add
test
lods
bnd
outs
outs
pop
mov
mov
call
mov
jmp
mov
push
in
push
sbb
mov
push
cwde
inc
js
sbb
and
lods
leave
or
ss
xchg
es
ficomp
push
push
or
jl
mov
retf
adc
xor
mov
jmp
inc
push
mov
sbb
and
repz
shr
lds
fild
inc
add
sar
inc
test
and
adc
add
fbstp
int3
clc
in
mov
dec
mov
push
pusha
dec
int3
jns
test
adc
int
pop
jl
lods
hlt
mov
cli
lds
loope
outs
iret
stos
xchg
fcmovu
xchg
dec
mov
pop
fild
jno
inc
or
mov
sub
adc
es
call
in
or
jnp
daa
aaa
inc
lock
mov
mov
xchg
movs
outs
push
push
xadd
je
xchg
mov
int
div
mov
mov
cmp
out
mov
icebp
xchg
push
call
ins
pop
push
movs
(bad)
add
sub
pop
xchg
mov
or
mov
adc
or
out
mov
outs
(bad)
neg
sbb
fldcw
or
or
aad
test
cmp
sbb
jb
call
out
pop
and
xchg
jo
xchg
call
adc
cs
inc
loopne
xor
xchg
(bad)
clc
sbb
ret
xor
repz
repnz
mov
add
xor
std
sar
mov
or
xchg
cmp
pop
inc
dec
sbb
jecxz
jge
jmp
fldcw
lock
dec
xor
xchg
addr16
ret
jg
pop
dec
cwde
xor
and
out
xchg
inc
adc
and
jns
adc
int3
rcl
cld
push
and
scas
mov
xchg
aas
inc
xchg
aaa
push
adc
jl
jo
outs
sub
mov
pop
repnz
rol
or
loopne
dec
mov
or
out
into
push
cmp
pop
xor
retf
clc
jno
jo
sbb
cli
xor
and
dec
mov
push
fdivr
in
mov
jecxz
leave
leave
add
push
sbb
mov
adc
dec
or
fst
dec
std
lods
pop
inc
sbb
mov
pop
dec
xlat
gs
je
sub
and
and
dec
into
pop
icebp
test
loopne
clc
div
add
psrlw
sbb
clc
call
int3
aaa
loope
daa
push
sbb
inc
out
jae
stc
call
cmp
xchg
movs
or
shl
adc
in
xchg
stos
dec
mov
mul
pusha
das
repz
ss
mov
mov
xchg
inc
iret
push
jge
aam
(bad)
mov
ins
in
movs
retf
and
mov
call
xor
aaa
test
ficomp
xor
xor
arpl
fmul
sar
call
dec
xor
xchg
retf
lock
jp
iret
sub
ficom
sub
ja
cmps
daa
cmp
test
jp
push
popa
test
aam
mov
rcr
jbe
lea
nop
and
movs
fcom
xchg
retf
cmp
mov
xchg
xor
jg
and
stos
cdq
xchg
inc
test
jbe
dec
in
jae
mov
xchg
cmp
mov
dec
dec
xchg
adc
push
xor
inc
stos
dec
mov
stc
enter
jle
movs
in
(bad)
mov
in
cmps
imul
and
cmp
push
mov
pop
jmp
iret
mov
pop
stos
xor
lea
dec
arpl
jl
inc
push
push
cmp
cs
fisttp
in
inc
push
outs
and
stos
call
popfw
enter
dec
or
sbb
imul
adc
test
sub
sbb
jle
ins
push
fdivr
sar
xor
retf
enter
das
rol
add
or
test
call
lods
ja
xor
xor
je
ins
jp
adc
(bad)
sbb
xchg
hlt
jecxz
add
sbb
cmp
jns
pop
adc
cwde
fadd
out
sub
or
pop
push
mov
shl
xchg
sti
pusha
daa
lds
xchg
cwde
call
jbe
push
loopne
stc
add
fdivr
outs
xor
push
cli
cmp
xchg
test
sub
or
loop
push
std
add
and
jg
mov
push
aas
enter
sbb
(bad)
imul
clc
push
stc
jp
es
adc
jl
(bad)
mov
retf
add
xchg
or
fldcw
imul
rcl
cmp
in
pop
sar
dec
jp
lea
ds
repnz
imul
pusha
pop
int
imul
jle
ds
repnz
cmps
cmp
push
push
sub
pop
mov
(bad)
jb
jb
push
clc
mov
arpl
sub
clc
mov
or
popa
icebp
mov
add
sbb
stc
dec
les
push
movs
mov
repnz
jecxz
add
ror
ins
mov
ficomp
cs
cmp
js
jecxz
sbb
mov
inc
dec
int
neg
push
mov
int3
mov
inc
fisttp
or
fsubr
outs
push
xchg
arpl
loop
cwde
sub
aad
mov
call
xchg
mov
jbe
xor
aam
mov
push
and
ins
stos
push
xchg
repz
inc
leave
lods
xchg
ror
dec
fbstp
xchg
push
and
call
adc
icebp
mov
mov
nop
je
stc
(bad)
js
hlt
push
xchg
mov
jge
arpl
xchg
fucomp
fisub
out
and
xchg
aaa
shl
add
mov
adc
jb
cs
(bad)
jne
(bad)
lods
xchg
or
(bad)
dec
test
mov
aaa
inc
(bad)
push
jo
adc
xor
adc
imul
and
ficom
push
xchg
mov
outs
scas
and
sbb
int3
xchg
test
cmp
xchg
test
sbb
loope
rcl
jo
mov
dec
leave
fiadd
mov
out
or
jle
mov
mov
dec
or
scas
out
shl
sbb
inc
dec
lea
inc
sbb
enter
dec
xchg
and
xor
gs
enterw
lods
mov
sbb
outs
call
jae
mov
add
call
test
xchg
mov
inc
jb
(bad)
mov
and
imul
adc
jmp
xor
push
push
jae
and
mov
pushf
in
stc
mov
mov
push
enter
xor
push
lods
cld
sbb
mov
or
repz
or
dec
enter
test
push
inc
neg
popa
repz
mov
aam
(bad)
sub
lods
cmove
add
adc
or
sbb
push
movs
pushf
(bad)
add
push
push
test
dec
or
push
cli
xchg
gs
(bad)
xchg
enter
xor
mov
lods
mov
push
jnp
retf
cmp
add
fcom
jno
dec
xchg
jg
xchg
or
push
mov
call
xor
jg
sbb
dec
and
nop
mov
sub
pop
call
jge
in
icebp
inc
gs
fsincos
daa
ja
fbstp
push
xor
call
push
xchg
call
clc
cdq
push
das
icebp
test
add
icebp
cli
repnz
jge
and
mov
(bad)
in
jbe
repz
ror
xchg
sbb
or
pop
push
int3
leave
jmp
out
pop
pop
pop
out
add
cmps
ja
or
push
cmp
outs
cmps
push
mov
mov
cmps
outs
and
xlat
cmps
jns
sbb
nop
and
cs
pop
rcl
xor
in
stos
pop
mov
cs
(bad)
sub
ja
clc
push
mov
das
lahf
test
sbb
jne
rcr
sub
adc
mov
popf
mov
xor
xchg
add
sub
repnz
add
xor
sahf
mov
in
mov
cli
pop
push
xchg
xlat
cmp
into
jmp
int3
data16
push
mov
or
mov
lds
pusha
push
(bad)
adc
pop
sbb
jl
pop
xlat
adc
in
in
rcr
fist
je
push
add
and
xchg
jb
pop
adc
repz
xchg
fisub
sub
mov
popf
ja
or
ds
add
in
sbb
in
repz
push
or
adc
mov
fnsave
cmp
aad
je
ins
mov
inc
mov
call
jae
cli
adc
mov
mov
pop
(bad)
popf
cld
cli
out
pop
jae
in
mov
jae
push
pop
cmp
xchg
arpl
pusha
jne
loop
xor
out
aas
js
fisub
fwait
das
je
cmps
mov
push
retf
jmp
stos
cmps
adc
add
stc
ret
adc
pop
adc
sub
sbb
ins
(bad)
adc
or
ret
push
hlt
aam
adc
mov
shr
loope
mov
adc
rol
imul
movs
xlat
inc
sti
ror
in
sub
outs
leave
xchg
in
out
mov
push
xchg
(bad)
pop
cmp
jg
test
mov
mov
neg
imul
in
push
and
sbb
popa
out
and
fild
jge
pop
xor
mov
jp
enter
adc
push
add
mov
jbe
mov
dec
inc
mov
scas
stos
mov
push
stc
bound
xchg
fist
imul
loop
mov
push
jb
stc
xor
jne
sub
bound
in
jb
add
je
lea
sbb
mov
jge
push
pushf
outs
je
imul
(bad)
mov
jmp
sub
add
(bad)
mov
push
in
into
fs
sti
jmp
xchg
push
or
mov
adc
sub
in
inc
xor
or
enter
adc
inc
fisubr
pop
ins
loope
xchg
jle
mov
mov
fild
mov
cmps
cs
ror
xor
dec
push
dec
aam
or
stos
mov
jmp
pusha
inc
jbe
shl
xor
nop
lods
pop
cwde
lds
jg
and
push
adc
pop
sub
mov
pop
pop
or
add
int3
cld
movs
push
cwde
inc
das
mov
inc
dec
lock
cmp
push
mov
push
ficom
mov
ret
mov
cmc
das
mov
xor
and
arpl
pop
and
sub
and
test
aaa
pop
test
cmp
cwde
fadd
push
fld
mov
mov
inc
fwait
mov
loope
fimul
pop
mov
dec
push
jbe
retf
mov
and
retf
pop
pop
sub
pop
xor
nop
add
in
pop
jne
jg
repnz
lds
add
leave
sub
xor
push
mov
cmps
retf
fisttp
cmps
or
test
mov
jnp
xor
pop
and
mov
jecxz
imul
mov
test
push
inc
pushf
sbb
imul
adc
mov
jo
push
jecxz
in
js
nop
imul
jno
shl
push
pop
adc
inc
retf
ficomp
dec
push
jecxz
and
nop
aad
or
addr16
pop
add
outs
xor
xor
or
dec
xor
ins
pop
jbe
add
mov
shl
aaa
mov
sbb
fcomp
jp
push
mov
jo
out
cmp
adc
cmp
jle
and
rcl
mov
mov
xchg
mov
and
out
(bad)
icebp
mov
call
int3
outs
addr16
pop
cmp
aas
ja
ds
in
in
and
stc
ins
xor
add
repnz
cld
xchg
add
into
out
add
out
in
mov
mov
repnz
dec
into
mov
(bad)
jb
outs
in
dec
idiv
pop
mov
out
pop
jo
xor
xchg
sahf
or
pop
adc
ins
ins
xchg
push
fs
mov
in
sbb
sub
push
aas
push
xchg
push
and
rol
xlat
pusha
dec
inc
out
test
imul
aas
in
jbe
fisub
ins
xchg
call
addr16
or
or
test
mov
sub
sub
outs
fidivr
pop
cmp
cmp
push
mov
push
ss
(bad)
je
and
inc
in
stos
enter
add
and
mov
imul
popa
inc
push
retf
out
mov
out
imul
jmp
mov
push
dec
dec
pop
inc
cmps
mov
ins
push
inc
int3
add
sar
mov
test
outs
mov
dec
(bad)
sub
mul
in
mov
and
js
pushf
cs
sub
sahf
and
and
popf
cmp
(bad)
dec
cli
test
movs
outs
test
pop
shr
pop
and
out
lods
cmp
mov
(bad)
test
les
call
inc
out
div
push
xor
clc
sbb
jno
jns
inc
stos
ja
push
mov
fsubr
mov
ins
ror
cmp
ud2
mov
movs
inc
into
aas
cmp
mov
imul
stos
xchg
add
repz
dec
jp
sar
(bad)
sbb
repz
movs
test
ss
sbb
setge
xor
push
mov
stc
sar
sub
fimul
pop
sbb
out
mov
iret
mov
cmp
hlt
dec
mov
xchg
or
xchg
mov
or
sbb
test
fcmovbe
in
in
pop
icebp
xor
adc
add
mov
mov
inc
xchg
jno
jne
loope
sbb
stc
stos
mov
aad
fwait
xchg
stos
arpl
dec
fdivr
mov
daa
adc
test
mov
push
icebp
push
and
pusha
jl
jnp
inc
ins
loope
xchg
push
test
pop
or
imul
jl
dec
iret
xchg
popf
in
in
out
sub
add
pop
dec
jle
sbb
arpl
aas
mov
pop
and
ret
int3
add
pop
ror
fwait
mov
stos
sub
mov
(bad)
ja
repnz
les
pop
sub
fidivr
in
push
mov
push
xor
mov
and
movs
dec
in
jmp
sbb
dec
stos
sub
sbb
jle
lock
push
enter
mov
jg
pop
pop
into
jne
cdq
jne
xchg
xchg
mov
fwait
jecxz
call
scas
sub
repz
xchg
add
jle
xor
std
jp
and
lock
repz
inc
mov
add
call
mov
ret
xor
cmp
jge
adc
lods
ret
jne
mov
sbb
sub
xor
push
push
(bad)
and
inc
scas
inc
sbb
outs
jg
cmc
add
and
lock
cdq
sub
jp
inc
inc
hlt
sar
pop
popf
jae
sbb
fstp
or
mov
cmps
sti
test
repnz
cli
aas
adc
sbb
call
neg
push
outs
jge
ret
aam
sbb
adc
(bad)
scas
push
enter
push
mov
shr
xor
pop
jb
push
rcl
shl
add
sub
addr16
xchg
jp
pusha
sti
call
das
scas
sub
cli
enter
sahf
cmps
pop
fmul
push
rcr
lea
mov
nop
dec
fwait
dec
stc
nop
jg
push
add
mov
xchg
mov
cld
adc
xchg
daa
repz
cwde
dec
sbb
inc
or
scas
adc
ins
ss
jle
rcl
cli
xlat
adc
ret
cwde
ins
jmp
cwde
push
data16
int3
inc
mov
shl
sar
stos
movs
enter
jnp
loopne
cmp
std
test
ret
mov
(bad)
leave
jge
scas
stos
inc
loope
enter
lds
push
pop
pop
lahf
push
(bad)
jno
push
sbb
lods
jecxz
inc
int
ins
enter
adc
fsub
pop
call
(bad)
mov
sbb
inc
pushf
xor
out
dec
and
hlt
add
lea
cmp
ds
stos
pop
push
jmp
icebp
and
idiv
push
retf
retf
jo
adc
addr16
retf
push
movs
mov
sub
lds
adc
pop
inc
jns
mov
xlat
adc
movs
and
outs
jno
sbb
aaa
jbe
outs
bound
push
xor
jne
inc
cmp
hlt
inc
(bad)
out
leave
scas
lock
pop
sbb
cmp
cmp
adc
retf
mov
in
jmp
pusha
add
cmps
push
movs
mov
in
cld
mov
call
out
xchg
test
jb
int
pop
jg
jnp
xchg
scas
movq
(bad)
adc
inc
sub
fwait
xor
lods
sbb
in
pop
mov
gs
sti
(bad)
cs
sub
call
xchg
add
test
cmps
(bad)
and
(bad)
repnz
adc
xor
push
xor
and
loop
inc
xchg
jb
jnp
cmp
push
das
(bad)
push
pop
int3
xor
test
scas
pop
idiv
mov
push
cmps
enter
mov
pusha
rol
jbe
and
shl
adc
fidivr
lds
in
test
loope
push
popf
clc
into
mov
mov
jns
sbb
inc
test
add
sbb
sti
clc
mov
lods
lea
mov
ds
add
(bad)
out
int
arpl
or
cmovs
sbb
test
mov
or
mov
fmul
push
scas
ret
xchg
xchg
push
or
fimul
lods
add
or
test
in
cmp
xchg
inc
push
jg
outs
dec
ret
xchg
push
pop
fidiv
inc
scas
(bad)
fnsave
sbb
imul
int3
fdivr
leave
or
ins
lock
add
mov
xchg
xor
mov
test
(bad)
sub
shl
das
adc
das
ffree
sub
(bad)
and
xlat
adc
push
fs
inc
mov
xchg
push
fadd
push
in
fcmovne
dec
sub
push
xchg
inc
leave
xchg
das
imul
jne
pop
jle
jmp
stos
mov
adc
sbb
clc
inc
mov
or
aas
fimul
sbb
xor
fs
bound
cli
jb
dec
push
and
sub
js
adc
sub
fbstp
pop
push
leave
lahf
xchg
sub
leave
jne
mov
add
push
aam
sbb
or
pop
jo
xor
popf
data16
adc
bound
push
dec
mov
mov
jbe
adc
shl
inc
mov
jbe
adc
sub
jae
mov
mov
xor
out
cwde
call
enter
inc
mov
xchg
push
lock
push
fstp
jb
push
mov
(bad)
pop
int3
adc
pop
sbb
xchg
push
and
arpl
pop
out
push
and
scas
or
ret
mov
sub
add
or
loope
add
outs
ds
lahf
das
cwde
jnp
daa
sar
cli
das
pop
xor
push
ins
out
mov
dec
and
in
inc
lds
scas
sub
sub
sub
movs
or
sbb
xchg
sub
popf
daa
(bad)
sub
mov
push
or
dec
and
dec
es
sti
pushf
push
loope
and
dec
repz
mov
push
push
test
imul
push
shl
outs
xchg
or
push
push
jge
ror
jp
ret
rol
outs
loopne
retf
sbb
shr
pop
sub
mov
mov
jne
jecxz
jne
in
mov
ins
cs
cmp
adc
lea
adc
shl
out
mov
adc
cld
pop
push
add
cmc
inc
jbe
out
or
rcr
and
cmp
mov
cli
jg
in
pop
movs
repz
ret
mov
in
(bad)
popa
ds
pop
out
fstp
jecxz
cmp
xchg
pop
mov
loopne
sub
xchg
dec
stos
call
dec
push
adc
inc
jle
pop
push
in
test
in
cld
xor
and
or
push
dec
jmp
xor
mov
inc
push
in
pop
and
ret
push
mov
mov
mov
dec
sahf
dec
dec
in
movs
ds
cmp
ins
call
mov
jge
cmps
ja
jae
fiadd
dec
mov
sti
mov
sbb
xor
or
sub
out
push
in
out
and
dec
psubusb
mov
gs
in
inc
jo
mov
repnz
mov
test
mov
jbe
adc
out
jg
inc
push
scas
xor
pop
xchg
cmp
adc
inc
mov
xchg
jbe
dec
lock
(bad)
les
mov
sbb
mov
retf
push
imul
hlt
lea
in
mov
push
xor
or
outs
(bad)
ins
mov
lods
stos
and
stc
ror
repnz
fwait
clc
cdq
ror
(bad)
icebp
pop
pop
cmp
aas
push
sub
add
inc
or
cs
lahf
stos
mov
adc
adc
jge
into
sub
dec
aam
das
adc
mov
add
xlat
cmp
stos
ret
ss
xchg
outs
fild
push
out
ds
and
daa
jmp
mov
add
mov
sbb
ins
or
pop
iret
ds
daa
cwde
lock
adc
(bad)
int3
push
adc
scas
mov
lods
rcr
aaa
mov
aaa
popf
pop
xchg
test
mov
gs
aad
or
push
test
xchg
call
or
imul
xchg
pop
add
imul
fdiv
ja
ret
xchg
cmc
pop
cmp
jl
jnp
push
add
push
pop
movs
or
icebp
adc
xchg
xchg
cmp
adc
lss
test
inc
and
adc
scas
clc
call
adc
cmp
retf
cmp
aaa
and
dec
pop
dec
out
jnp
jle
push
or
cdq
test
ret
push
pop
and
fs
adc
cld
xchg
aaa
jecxz
mov
aad
stos
and
in
sub
dec
aaa
cmc
xchg
call
and
in
in
ja
or
mov
test
dec
les
test
outs
xchg
mov
mov
jne
or
add
sub
push
jb
fldz
push
and
sub
ins
arpl
shl
pop
gs
push
jle
faddp
xchg
outs
movs
xlat
mov
sub
and
xor
pop
or
xchg
jae
sar
ja
adc
pop
xlat
add
inc
cmp
and
(bad)
xchg
mov
cmp
pop
mov
retf
xor
(bad)
mov
aam
push
(bad)
sub
pop
fsubp
mov
aas
les
(bad)
push
xchg
or
inc
push
aas
cli
adc
mov
fdivr
jnp
leave
(bad)
and
fcomp
inc
ror
dec
or
pop
jl
loope
movs
das
push
sahf
xor
push
in
push
fcomp
dec
outs
cbw
cmp
cdq
das
cmp
dec
ffree
mov
xchg
ins
pop
add
and
out
fwait
cmps
(bad)
stc
mov
lock
fdiv
pop
xor
cdq
mov
sahf
movs
and
xchg
fld
or
push
inc
jp
lds
movs
sbb
fiadd
mov
fwait
inc
cdq
test
push
pop
cmp
mov
jg
push
test
xlat
sahf
aam
shr
and
cmp
add
clc
sbb
sub
xor
retf
mov
stc
xchg
mov
push
add
lds
jne
in
enter
mov
or
mov
pop
xchg
jecxz
in
shr
fcom
movs
cld
mov
aas
fld
push
arpl
dec
xor
(bad)
sbb
xor
xchg
retf
dec
and
and
mov
xlat
test
sub
in
sbb
je
add
stos
xchg
dec
into
movs
(bad)
stc
pop
mov
popf
sbb
inc
sub
xor
sbb
or
xor
neg
inc
daa
or
or
inc
cmps
ret
(bad)
daa
in
out
fiadd
pop
(bad)
es
pop
aaa
(bad)
out
adc
xor
inc
push
retf
push
enter
sar
dec
adc
xor
mov
pop
push
out
add
xchg
inc
stos
(bad)
out
shl
sahf
sub
cdq
push
mov
inc
out
loop
jle
rcl
aad
adc
mov
pop
cdq
sti
aam
data16
sbb
jno
lods
cmc
fwait
adc
hlt
outs
xor
(bad)
xlat
push
(bad)
jge
shl
inc
add
sbb
pop
aam
xor
fisub
ins
dec
adc
loopne
clc
xor
mov
cld
xchg
dec
je
and
mov
pop
loope
inc
push
stc
sbb
stc
jmp
push
xchg
daa
and
jg
outs
adc
scas
adc
les
and
adc
iret
inc
sbb
aad
pop
add
fisub
adc
pop
gs
inc
call
mov
ds
addr16
icebp
js
push
push
pop
call
push
xlat
arpl
in
scas
cmp
repz
inc
add
cmps
add
jl
pop
adc
xchg
inc
int
lds
aam
inc
adc
xchg
mov
aaa
scas
sbb
cmc
in
retf
adc
dec
in
xchg
push
pop
imul
add
lea
lahf
push
mov
mov
dec
push
cs
add
cmps
and
push
out
or
popf
mov
sar
adc
ds
fisubr
ficom
mov
xchg
cdq
sbb
cmps
repz
sar
inc
inc
cmps
mov
pop
mov
adc
pop
(bad)
pop
pop
xor
xchg
daa
and
outs
pop
sub
sbb
leave
xchg
push
in
mov
jle
es
fwait
mov
xchg
(bad)
stc
cmp
sub
mov
rcl
cmps
das
lods
lahf
cmp
pop
xor
pop
push
es
adc
ss
and
xchg
nop
mov
push
inc
repz
jb
sbb
popa
outs
js
fisub
inc
or
xor
pushf
into
rol
(bad)
cmps
cmp
dec
adc
xor
mov
jmp
fld
retf
xchg
sub
imul
mov
push
inc
add
dec
mov
retf
dec
int
ja
jbe
push
cmp
pop
pusha
xor
stos
lds
cmp
leave
jae
imul
ret
sbb
inc
stc
ins
stc
xor
mov
mov
and
outs
mov
jo
lds
fiadd
or
test
mov
add
mov
dec
fmul
push
jnp
div
sbb
mov
into
cmp
frstor
gs
fidivr
aad
adc
pop
lods
seto
pusha
sbb
ret
xchg
sub
xchg
push
mov
ss
mov
mov
ror
lods
inc
adc
or
add
xchg
dec
xchg
sbb
or
adc
push
mov
add
mov
punpckldq
aam
sbb
shl
add
sti
rep
mov
jne
push
xchg
push
stc
xchg
es
lea
ins
or
jge
mov
sub
mov
jmp
std
in
mov
sbb
sbb
loope
push
cwde
pop
sbb
clc
out
sub
adc
stc
fst
int3
cmp
daa
pop
fdivr
es
cmp
pop
sub
add
iret
ins
outs
shl
push
ins
and
mov
inc
mov
dec
cld
lahf
mov
push
jae
jne
pop
scas
push
fstp
test
jo
push
sub
repz
shr
jnp
movs
sahf
repnz
jnp
imul
inc
inc
cdq
mov
mov
push
lods
sar
mov
pop
jg
lahf
dec
std
scas
cld
xchg
(bad)
xlat
in
dec
push
mov
add
xchg
lahf
retf
cmp
aaa
std
leave
mov
sbb
push
pop
xor
xchg
movs
xor
jmp
or
push
add
mov
nop
out
fstp
mov
and
(bad)
clc
xchg
dec
inc
mov
lock
push
and
dec
jmp
dec
mov
mov
mov
enter
jg
shr
call
call
cmp
mov
in
dec
adc
or
inc
enter
call
push
mov
inc
inc
call
hlt
mov
push
xor
sbb
jmp
adc
xchg
jns
inc
sbb
mov
lods
mov
xchg
or
mov
mov
pop
loope
sar
inc
movs
lahf
sbb
les
(bad)
adc
test
sub
pop
mov
dec
push
jp
int
imul
in
inc
jbe
sub
mov
out
gs
jmp
gs
stos
xor
imul
fcmovb
and
enter
mov
movs
mov
push
xor
std
dec
sbb
out
inc
pop
clc
adc
das
pop
xchg
sar
xor
jl
pop
push
mov
cmc
fmul
ret
cmp
mov
imul
ja
loop
neg
fistp
sti
rol
inc
jnp
inc
add
xor
fist
lds
mov
shr
adc
out
adc
sub
push
mov
mov
pushf
mov
mov
xchg
jb
adc
add
out
mov
mov
test
push
pop
pop
inc
(bad)
mov
dec
outs
adc
mov
scas
mov
int3
shl
mov
mov
mov
cmp
call
rcl
lock
push
jp
ficom
xchg
xchg
mov
inc
scas
movs
lea
rcr
pop
outs
sub
sbb
daa
xor
test
pop
add
addr16
pop
mov
daa
mov
loopne
or
ret
sbb
pop
dec
stos
adc
pop
rol
sahf
daa
push
mov
adc
out
and
jns
jns
push
xchg
adc
arpl
data16
pop
push
mov
retf
test
(bad)
or
ror
shl
loop
jb
adc
mov
push
vshufps
(bad)
loope
jbe
fmul
push
inc
test
daa
push
jne
push
mov
test
push
rcr
xchg
fs
mov
lods
mov
xchg
jle
rol
retf
je
mov
enter
outs
xor
rcl
pop
add
inc
lods
xor
mov
xchg
mov
hlt
push
inc
sbb
push
bound
sahf
aas
adc
aad
das
mov
ss
pop
pushf
sub
cmp
dec
(bad)
in
call
push
jns
into
test
ss
rcl
inc
(bad)
lock
ins
gs
pop
lea
dec
adc
mov
retf
shl
dec
push
sub
loopne
or
out
mov
sub
xor
aaa
mov
inc
xor
out
xchg
jmp
loop
xchg
xor
out
sbb
popa
std
loopne
xchg
dec
(bad)
cmp
or
mov
cmp
sar
jge
inc
or
lea
loope
repz
mov
sbb
out
fwait
inc
cwde
retf
test
ret
(bad)
add
inc
sub
ret
and
int3
mov
sbb
repz
mov
(bad)
shl
pop
icebp
push
mov
sti
adc
xchg
setnp
xchg
mov
cmp
ins
pop
hlt
mov
je
test
fisttp
daa
mov
push
pop
sbb
mov
fndisi(8087
jle
add
mov
repz
inc
xchg
sbb
add
xor
dec
int3
lods
ins
cwde
adc
push
sbb
out
icebp
jle
test
push
adc
xor
push
rol
dec
iret
fs
xor
jle
cli
push
inc
push
jle
rol
inc
test
xor
ss
cli
repz
push
mov
mov
mov
outs
mov
jns
test
sbb
enter
sbb
sub
adc
pop
or
jmp
cs
aaa
repz
sti
(bad)
imul
or
cmp
std
sbb
jns
lea
xor
rol
inc
sub
mov
popf
shl
jns
xchg
sti
sub
popa
test
clc
out
std
sub
aas
arpl
add
cwde
add
jmp
sub
retf
test
xor
add
stc
push
or
daa
dec
jbe
fwait
push
ficomp
out
fmul
not
inc
out
dec
mov
xchg
out
inc
movs
pop
cmp
les
jg
retf
call
jne
out
jp
aas
jno
cmc
mov
xchg
jl
jne
adc
aaa
fstp
ja
inc
cli
fs
add
and
jmp
pop
loope
xchg
out
popa
enter
dec
or
push
out
inc
adc
pop
iret
ret
mov
rcr
xchg
cld
mov
ss
retf
out
repz
ds
or
icebp
xor
xchg
repz
push
test
xlat
push
xchg
arpl
pop
sti
jmp
adc
pop
ins
mov
mov
popa
ins
in
addr16
fwait
and
sahf
inc
cdq
stc
jmp
jno
nop
es
jnp
jo
(bad)
cli
jg
(bad)
or
pop
inc
push
mov
ja
lods
rol
dec
mov
xlat
push
popf
call
jae
pushf
leave
popa
dec
iret
mov
add
xchg
sub
push
cmp
mov
(bad)
fcomp
xchg
mov
xchg
rcl
loop
(bad)
stc
cmp
or
mov
pop
adc
pop
outs
cdq
inc
loopne
xor
inc
mov
push
adc
jns
imul
rcl
sub
sti
dec
inc
ficom
xor
aam
xchg
ja
ret
stos
push
imul
mov
adc
repz
adc
jo
movs
cli
add
out
out
aaa
add
ja
clc
(bad)
and
pop
and
fstp
sbb
jbe
add
call
dec
shl
mov
pop
xor
mov
test
inc
fisub
jb
mov
imul
ret
xor
std
div
lds
(bad)
lock
or
push
push
xchg
call
xchg
sar
push
sub
xchg
shl
push
pop
mov
adc
out
hlt
loop
xchg
or
xor
pushf
jo
mov
xchg
lea
pop
aaa
sbb
dec
(bad)
lds
pop
push
cmp
mov
and
in
loope
in
xlat
add
gs
sbb
ins
scas
pop
xor
retf
xchg
outs
in
sub
add
outs
loope
mov
fld
div
inc
test
adc
out
xchg
in
sbb
cmc
(bad)
jle
mov
or
push
jae
loop
dec
retf
mov
sub
pop
fdiv
in
scas
into
push
or
cmp
div
fidivr
daa
and
jmp
mov
arpl
fwait
stos
sti
shl
or
xor
ja
pop
mov
jp
fwait
mov
ja
int3
mov
scas
mov
daa
mov
xor
dec
pop
stos
rol
fwait
pop
jbe
jo
xor
dec
psraw
jmp
mov
jb
jbe
dec
inc
out
sbb
retf
jmp
sar
dec
push
pop
push
cld
mov
iret
push
jno
movs
jge
xchg
das
mov
inc
mov
sbb
(bad)
sti
sbb
dec
int3
pop
shl
push
stc
bound
fsub
jb
push
jg
mov
sbb
cs
arpl
cmp
jp
aaa
and
cmp
int
setns
hlt
fmul
dec
mov
sti
push
pop
cmps
aad
pusha
cmc
hlt
int3
mov
ins
dec
cmp
movs
mov
test
sbb
test
call
jno
leave
lahf
out
xor
xchg
mov
mov
mov
test
sar
jbe
ror
pop
inc
ja
jnp
add
in
icebp
pop
push
(bad)
clc
(bad)
and
adc
mov
fld
fsubr
xchg
jns
ret
push
mov
int
or
mov
push
ss
mov
xchg
or
mov
sub
sub
adc
stc
out
pop
call
xchg
and
dec
dec
cmp
mov
ins
das
xor
mov
es
jnp
rcl
aas
in
cmp
pushf
dec
dec
ja
je
mov
rcr
jne
add
xchg
sbb
inc
jp
pop
aaa
adc
cmp
loopne
lods
cmp
adc
stc
dec
rcl
or
mov
jmp
daa
cmp
add
pusha
and
test
es
inc
inc
jo
sbb
lahf
mov
stos
dec
mov
push
loope
cmp
and
pushf
mov
xchg
and
ds
les
ja
push
fsubr
or
lea
clc
xchg
push
dec
sub
movs
sub
dec
out
inc
push
fcmovb
les
cdq
pop
add
xor
fnstsw
movs
cmp
jbe
or
data16
fsubr
and
mov
hlt
xchg
enter
mov
ins
cs
hlt
push
sbb
cmp
sbb
push
adc
push
sub
push
push
mov
pop
pop
inc
push
pushf
movs
das
out
inc
sbb
mov
push
es
jecxz
mov
call
out
sub
xor
xor
leave
ret
and
adc
cmp
sub
jae
xor
sar
cmp
cmp
fwait
or
in
je
and
mov
fild
sar
lock
and
inc
xlat
dec
mov
adc
mov
sbb
rcl
xchg
in
fs
xchg
push
xchg
inc
inc
mov
ret
loopne
mov
adc
sub
jb
or
mov
jmp
test
dec
adc
xor
mov
mov
mov
test
mov
fild
cmp
and
sub
jno
cmp
div
retf
aas
dec
arpl
popa
leave
mov
fld
mov
call
out
(bad)
ins
mov
adc
aam
popf
lock
dec
jne
sub
lds
sbb
leave
xchg
in
sbb
inc
jbe
shr
neg
add
fnsave
imul
cdq
div
push
(bad)
fist
(bad)
scas
mul
in
xchg
shr
sub
ret
bound
call
mov
mov
sub
add
pop
repz
jp
test
jne
push
hlt
and
sub
mov
arpl
xchg
sbb
cwde
or
jecxz
lds
shl
push
adc
inc
jbe
in
stos
add
mov
push
aad
and
xchg
sbb
nop
add
and
lods
xor
(bad)
lock
cmp
pop
and
stos
inc
add
add
int3
adc
stos
pshufw
mov
fisubr
add
cld
mov
fdivr
(bad)
out
xlat
inc
fxch
dec
je
or
xchg
xchg
jbe
call
sub
nop
push
hlt
inc
mov
ins
mov
leave
mul
test
sbb
push
adc
mov
(bad)
push
das
cmovae
(bad)
lahf
inc
cld
mov
push
mov
mov
mov
loope
dec
loopne
and
popf
lods
repz
out
lahf
hlt
fstp
pop
pop
into
mov
sbb
out
xor
mov
mov
inc
adc
in
ret
enter
mov
enter
cmp
dec
out
cmp
mov
fist
and
mov
lods
inc
neg
push
rol
push
fimul
jge
jns
lods
dec
mov
xlat
aaa
fwait
jne
int3
sahf
loopne
test
mov
cmp
and
lods
fcomp
les
in
inc
xor
xchg
cmp
push
inc
popf
add
int
pop
xlat
aad
jb
stc
std
mov
pusha
cmp
mul
adc
mov
mov
addr16
cmp
dec
inc
jl
dec
xor
mov
cmp
mov
xchg
and
mov
fild
outs
icebp
daa
pop
dec
pop
jecxz
cmp
nop
cmp
shl
mov
xor
xor
outs
(bad)
jbe
cs
dec
jb
and
or
xlat
pop
pop
push
mul
mov
aad
xchg
mov
fldcw
fistp
shr
push
fbld
cs
movs
cs
fs
xchg
xor
push
cs
stos
lds
jp
mov
adc
pop
or
shl
mov
shl
outs
or
xchg
mov
xchg
pop
xlat
or
xchg
or
push
xchg
cmp
mov
dec
jecxz
stos
nop
movs
dec
push
or
inc
sub
movs
push
push
lods
cli
push
sbb
mov
mov
push
rol
xchg
ret
jmp
out
or
pop
fdivr
inc
pop
cli
dec
or
xor
ret
mov
mov
jp
mul
cs
hlt
(bad)
repnz
(bad)
pop
mov
hlt
mov
mov
xchg
icebp
hlt
pop
inc
shl
sbb
xchg
outs
sub
ds
sbb
fisub
jmp
aas
mov
inc
or
or
les
pop
bound
in
lods
pusha
ja
mov
xchg
sbb
loope
or
jne
test
(bad)
or
les
fimul
imul
mov
daa
fwait
mov
mov
gs
mov
pushf
stos
cdq
call
pop
mov
jbe
inc
xchg
jbe
push
inc
dec
fisubr
inc
jg
xor
cmps
std
add
fsub
in
or
or
push
cmp
cmc
cmp
sti
faddp
adc
cmp
inc
mov
loopne
idiv
cdq
(bad)
pop
fmul
xchg
sbb
pusha
add
cmps
rol
imul
jle
out
test
mov
mov
mov
inc
add
xchg
outs
ins
inc
mov
inc
cmp
xor
dec
mov
js
sahf
popa
in
out
cld
dec
in
imul
popf
ins
aam
ss
in
jno
cld
ja
pmaddwd
test
lods
pushf
bnd
inc
add
or
popf
inc
mov
arpl
sub
sbb
jge
movs
push
sti
ret
pop
aam
in
sbb
xchg
mov
outs
fisttp
cmp
leave
add
mov
inc
cmp
das
(bad)
pop
jmp
push
retf
dec
inc
lea
inc
mov
xchg
shr
leave
jmp
adc
cmps
xor
mov
pop
fbld
mov
sahf
jb
xchg
mov
imul
add
leave
xor
aad
adc
ins
inc
or
rcr
sub
adc
ss
ret
sub
push
jecxz
mov
dec
test
xchg
popf
lock
test
push
mov
or
jl
add
mov
add
scas
(bad)
jecxz
sub
int
fnstenv
lods
xchg
mov
inc
push
mov
cmp
ret
call
jmp
repz
sbb
adc
jnp
push
and
jmp
test
cdq
(bad)
xchg
or
stos
xchg
mov
imul
sahf
xchg
(bad)
sub
out
rcr
xlat
mov
mov
nop
push
fist
fdecstp
pop
jbe
mov
cmps
popa
cmp
call
sub
mov
pusha
add
dec
adc
cwde
push
sub
or
and
fnstenv
pop
es
xchg
in
hlt
std
lods
and
in
imul
pop
pop
cmp
mov
and
inc
xor
repnz
xor
ins
iret
mov
mov
inc
pop
sbb
in
sbb
xor
cmp
inc
pop
call
cmp
retf
jns
push
push
arpl
push
ss
jp
outs
sub
jle
mov
sbb
(bad)
sub
retf
test
dec
dec
inc
or
mov
and
add
das
aaa
sahf
popa
ins
(bad)
ret
cmp
dec
sub
test
(bad)
xor
call
hlt
ret
jge
imul
xor
push
out
lahf
out
xchg
add
mov
(bad)
and
jo
mov
loop
inc
push
pop
xor
sbb
xchg
dec
out
ds
stos
inc
out
outs
int3
cs
dec
lock
pop
out
xor
adc
ds
es
lahf
pop
fst
mov
in
rcr
ror
jbe
cs
fnstenv
sbb
inc
fs
ins
leave
movs
ret
int
mov
lods
in
cdq
adc
ret
mov
cmp
retf
ret
adc
jecxz
fs
cmp
xchg
into
or
lock
std
rol
dec
cdq
inc
cmp
or
pop
cdq
sub
adc
sar
add
and
std
xchg
add
std
lds
es
popf
std
test
jb
mov
or
lock
out
cwde
adc
daa
jnp
mov
test
retf
aam
lods
pop
inc
inc
into
dec
lock
inc
dec
imul
jg
xor
(bad)
fiadd
jo
out
xchg
(bad)
stc
aaa
call
out
adc
mov
scas
lods
mov
add
loop
pop
push
inc
push
(bad)
in
jb
inc
pop
jbe
movs
inc
mov
jle
lock
movs
ds
data16
mov
call
push
leave
jecxz
mov
mov
stc
add
movs
dec
dec
pusha
mov
fistp
outs
sar
mov
jb
leave
movs
or
nop
add
sub
push
in
repz
cmp
into
sahf
jg
push
sub
xchg
mov
sub
cld
jae
inc
xchg
or
out
pop
add
jo
inc
xchg
retf
pop
jo
sub
cmps
jmp
or
pop
add
mov
xor
push
sbb
or
int3
mov
push
pop
scas
test
pop
dec
stos
aad
xchg
(bad)
push
add
add
push
inc
xor
je
popa
sbb
dec
popa
les
stos
test
ds
xor
sub
xchg
mov
ror
in
xor
push
cmps
push
jecxz
push
pusha
and
sbb
lds
jp
movs
mov
sub
rcr
xor
and
int3
mov
adc
js
clc
popf
xchg
sbb
add
cli
lock
and
jge
and
or
test
pop
fiadd
dec
mov
xor
and
adc
dec
(bad)
in
add
dec
popa
xchg
bound
(bad)
jmp
ds
mov
je
or
push
pop
adc
in
pop
pop
enter
aaa
pop
test
pop
pop
outs
(bad)
jl
loop
cmp
neg
shr
ds
dec
out
dec
and
mov
fbld
adc
test
mov
in
sbb
jae
add
(bad)
xor
jle
das
inc
pop
bound
push
xor
dec
push
and
pop
fstp
or
out
push
(bad)
mov
cld
sub
inc
cmps
fnstcw
jecxz
in
or
cmp
pop
dec
cs
sbb
shl
xchg
or
pop
mov
ins
push
dec
and
aaa
retf
je
idiv
(bad)
gs
sbb
(bad)
cmp
jmp
das
inc
jg
xchg
(bad)
outs
xchg
cmp
pushf
das
dec
mov
or
pop
ins
mov
xchg
outs
les
jne
das
mov
mov
rcl
(bad)
fstp
xrelease
(bad)
sbb
pop
mov
sbb
bound
icebp
int
sbb
sahf
ja
call
in
test
mov
or
pop
xchg
sbb
mov
addr16
xchg
sti
mov
dec
(bad)
pushf
adc
loopne
rcr
mov
xchg
mov
nop
inc
stos
out
dec
loop
sbb
stos
jmp
sbb
mov
mov
into
ja
and
test
bound
and
leave
add
fisttp
loope
sbb
xchg
pop
fist
xor
ins
popf
jge
inc
sahf
outs
and
cmp
retf
cmp
call
dec
or
sub
and
dec
push
(bad)
or
mov
sub
and
xchg
test
mov
ret
push
mov
inc
or
imul
mov
sbb
push
jmp
inc
dec
sbb
push
jle
test
and
fs
fistp
jp
mov
jmp
sbb
lea
inc
into
jnp
mov
mov
mov
push
and
fidivr
(bad)
(bad)
loope
sbb
fisttp
pop
iret
adc
sbb
sub
sbb
cmp
stc
sbb
retf
mov
clc
xchg
outs
(bad)
push
sub
cmps
js
bound
pop
xor
popf
icebp
rcl
push
movs
jnp
jmp
inc
imul
loopne
inc
lods
imul
push
push
fistp
add
sub
shl
scas
iret
aas
sbb
daa
add
jecxz
lock
sub
mov
xor
sbb
xor
adc
dec
out
xchg
cmp
inc
data16
imul
adc
in
test
pop
retf
push
jo
add
icebp
iret
sbb
mov
imul
sbb
pop
add
xchg
dec
sbb
pop
pusha
les
adc
sub
cmp
lea
cld
adc
pop
retf
hlt
shl
xor
adc
dec
rcr
and
(bad)
pop
or
cmps
leave
xchg
mov
bound
sub
inc
nop
pop
dec
fstp
dec
cmp
dec
xchg
sub
mov
and
lods
xchg
in
push
sti
pop
jns
pop
fsub
mov
sub
sti
ins
(bad)
mov
fs
jecxz
mov
add
cld
dec
fcomp
mov
test
sub
jmp
sub
mov
inc
enter
mov
mov
sbb
stos
push
inc
xchg
dec
mov
mov
xor
xchg
mov
popa
jle
loopne
push
in
sub
mov
jb
xchg
std
pop
dec
nop
xor
or
xchg
aaa
(bad)
das
and
mov
scas
pushf
iret
mov
(bad)
mov
mov
das
in
test
mov
jnp
or
dec
sub
mov
stos
test
mov
cmps
movs
mov
jnp
cld
not
fbld
enter
mov
adc
test
aaa
fmul
or
cmp
test
scas
icebp
pop
scas
(bad)
es
or
xlat
imul
shl
inc
sbb
mov
push
pop
sub
mov
inc
sbb
xchg
and
loopne
or
paddw
and
mov
fadd
jecxz
jp
mov
hlt
xchg
jmp
or
push
inc
jno
out
pop
inc
xchg
dec
push
in
cmp
leave
test
and
test
inc
mov
add
shl
aas
jbe
add
pop
es
mov
add
imul
inc
dec
call
inc
imul
loop
mov
fwait
jecxz
test
pushf
dec
sbb
ret
outs
mov
jmp
sbb
push
into
xchg
loop
mov
repnz
push
jae
mov
push
cmp
fild
in
mov
jmp
pop
in
mul
xchg
test
ins
jg
push
xlat
fstp
js
nop
xor
push
add
test
lods
pop
pusha
icebp
cs
ins
ss
mov
fnsave
xchg
sub
push
mov
push
sbb
dec
cld
test
cdq
pushf
ds
jno
lds
sbb
push
jmp
fimul
xor
std
repz
rcr
and
adc
inc
popf
sti
add
fcomp
push
sub
add
out
xlat
(bad)
scas
(bad)
ins
mov
xor
fs
mov
in
scas
xor
test
neg
cdq
xchg
(bad)
cmps
(bad)
out
fucom
sub
mov
adc
loop
cmovbe
jae
daa
rcr
mov
cmp
fild
push
add
bound
jmp
push
(bad)
adc
inc
retf
mov
leave
adc
ror
cwde
mov
into
jl
cmc
adc
ficom
ds
sbb
sub
push
and
gs
sub
cdq
(bad)
sub
fsub
loop
and
jecxz
xor
mov
setb
mov
mov
daa
cdq
aam
adc
xor
movs
mov
adc
dec
and
xor
sbb
loope
test
cmp
out
push
neg
push
jg
iret
arpl
std
sbb
sub
mov
dec
(bad)
mov
mov
lds
and
cmp
sar
inc
add
mov
retf
stos
lods
inc
add
sub
aaa
(bad)
mov
test
pushf
stos
xchg
shl
pusha
stos
aam
xchg
sbb
(bad)
div
xchg
jo
std
mov
mov
xor
cmp
jmp
pop
xor
leave
popa
push
mov
nop
xchg
test
int3
shl
xchg
test
sbb
fmulp
xchg
push
dec
cmp
xor
call
es
jbe
stos
stos
sub
retf
arpl
ficomp
mov
jmp
fs
test
aad
ret
fadd
fld
(bad)
adc
dec
retf
test
mov
test
mov
movs
mov
pop
cmps
mov
xor
dec
and
dec
das
add
frstor
daa
pop
out
sbb
(bad)
jmp
and
daa
repz
mov
sbb
xchg
xchg
pop
in
(bad)
or
ss
cmp
movs
mov
pop
cdq
and
not
adc
and
ins
pop
lods
adc
jb
stos
jle
or
xor
sahf
retf
add
mov
ret
cld
push
fs
mov
cs
rep
rcl
adc
mov
std
sub
(bad)
aam
frstor
xchg
pop
or
jb
pop
xchg
mov
jnp
ror
je
(bad)
mov
pop
cmps
popf
rcr
or
bnd
lds
repz
mov
adc
ds
cmp
push
(bad)
mov
cmps
mov
jge
outs
adc
das
hlt
mov
sub
inc
(bad)
in
sbb
outs
stos
inc
cwde
lds
xchg
and
repz
sub
(bad)
sub
(bad)
mov
push
jbe
scas
fs
pop
cmp
adc
push
jns
bound
popa
shl
frstor
fistp
dec
fimul
pushf
std
push
cli
pushf
sahf
inc
(bad)
cmp
sbb
leave
mov
xchg
pop
clc
mov
fs
fimul
push
lock
mov
adc
je
xchg
es
(bad)
dec
mov
sub
xor
inc
jecxz
adc
ret
(bad)
int3
mov
xor
pop
inc
push
rcr
dec
pop
retf
imul
lea
dec
lock
das
scas
mov
test
dec
push
inc
cmp
(bad)
cmps
jb
jns
push
xlat
xchg
ds
dec
sti
jns
jge
pop
adc
(bad)
mov
idiv
je
je
xchg
sub
inc
jmp
(bad)
in
dec
cli
into
scas
sar
pop
xchg
loopne
fcomip
push
pop
push
jae
xchg
mov
xor
jl
mov
(bad)
fisttp
shl
mov
rcr
jmp
mov
cmp
sbb
loope
push
jo
sbb
jae
mov
jmp
xchg
mov
jno
xor
mov
inc
dec
retf
sbb
aam
(bad)
or
arpl
ror
mov
clc
cmp
cmp
out
in
daa
cli
mov
mov
ss
inc
clc
test
jmp
(bad)
retf
xor
test
gs
push
xchg
mov
(bad)
ins
loopne
js
stos
add
lods
pop
dec
(bad)
jo
and
je
fbstp
out
(bad)
int
lahf
inc
mov
pop
sbb
test
test
mov
shl
ja
int
dec
ret
xchg
fldenv
jg
push
rcl
adc
test
into
pop
inc
and
aam
push
inc
mov
xchg
das
add
adc
push
jae
cmp
add
push
push
mov
xor
enter
adc
ret
jmp
out
mov
ds
scas
mov
mov
fwait
and
push
add
mul
mov
out
rcl
or
retf
xchg
dec
mov
inc
out
jle
xchg
mov
scas
inc
sub
mov
or
cmp
xchg
sub
xor
jbe
lds
pop
jnp
cli
sti
pop
adc
xor
fwait
cmp
es
and
mov
cmp
jmp
rcl
push
popf
(bad)
(bad)
mov
outs
inc
mov
and
and
ror
es
dec
pop
test
aam
(bad)
popa
rcr
mov
lods
test
inc
push
hlt
lds
mov
lea
pop
ins
movs
gs
add
ret
xor
mov
rcl
repz
cld
xlat
push
movs
into
cmps
(bad)
push
xchg
mov
cmc
int
push
das
sub
stos
aaa
lds
xor
sub
sub
ret
add
pop
lods
(bad)
jns
sbb
mov
outs
xor
and
inc
call
fbld
retf
sti
aam
repz
(bad)
fdivrp
(bad)
mov
jmp
(bad)
xlat
xchg
cld
inc
cmp
dec
push
mov
lds
leave
(bad)
iret
cmovo
neg
inc
into
push
mov
mov
xor
test
mov
mov
mov
xchg
dec
imul
movs
call
push
cmps
ds
xchg
jg
inc
inc
push
mov
ja
add
into
icebp
jle
sahf
fst
in
lds
data16
pop
inc
aas
gs
bound
mov
xchg
stos
jle
sub
push
adc
fisubr
mov
mov
pusha
and
inc
out
(bad)
fdivr
stos
outs
sbb
hlt
and
fstp
(bad)
aaa
imul
sti
cli
hlt
and
dec
call
xor
in
leave
xchg
adc
mov
mov
inc
jl
shl
ja
adc
pop
adc
ins
repnz
pop
mov
pop
xor
cmps
xor
mov
shl
test
in
test
mov
cmc
dec
xchg
push
mov
sti
(bad)
frstor
xchg
mov
cmp
or
cdq
cs
pop
push
or
stos
mov
enter
stc
faddp
sub
and
out
mov
adc
add
cmp
sub
out
fs
imul
loop
ins
jg
mov
mov
mov
les
dec
and
adc
push
push
jg
or
ss
hlt
das
xor
adc
popf
jmp
adc
mov
enter
adc
fwait
mov
jo
into
and
push
pusha
xchg
fdivr
out
or
adc
retf
and
imul
xchg
lahf
or
cmp
push
sbb
adc
adc
lods
imul
and
push
es
lahf
xchg
jmp
stos
nop
pop
jae
std
movs
sub
in
jnp
jecxz
das
push
jmp
adc
cwde
je
clc
dec
xor
lods
inc
and
mov
hlt
fldcw
or
ja
inc
ins
lods
aas
dec
xchg
scas
cmp
or
adc
push
ret
dec
mov
popf
push
(bad)
bound
mov
pop
loop
adc
sbb
sar
xchg
outs
inc
retf
jmp
push
push
gs
sub
(bad)
daa
(bad)
mov
je
lahf
in
loopne
push
add
or
lock
fimul
and
push
pop
loop
mov
jmp
and
push
pop
and
arpl
mov
mov
retf
adc
pusha
xor
icebp
cmp
pop
inc
xor
retf
loop
mov
(bad)
cld
ds
ret
loopne
stc
dec
xor
popa
xor
mov
add
mov
out
lods
mov
xchg
or
sahf
cmp
and
dec
sbb
std
sbb
mov
outs
mov
lahf
mov
dec
xor
inc
cmp
xor
jno
shr
test
loop
xchg
hlt
mov
into
mov
jnp
inc
stos
lods
lock
mov
xor
jge
scas
sahf
mov
ret
int
loopne
add
cmps
enter
xor
mov
shl
inc
cmp
xchg
cmps
loopne
xor
sbb
sub
rol
inc
mov
mov
movs
(bad)
std
stos
aad
test
adc
jno
jb
cmc
mov
push
sbb
lds
ret
add
dec
pop
mov
or
in
lahf
dec
jmp
add
xchg
daa
mov
loope
mov
xchg
fadd
stos
cwde
mov
arpl
ds
ins
and
imul
adc
out
lods
and
dec
sbb
sub
out
movs
call
jne
jl
call
adc
xchg
pop
or
and
dec
(bad)
add
push
or
sub
jmp
push
aam
cli
dec
mov
nop
jmp
sub
pop
sub
and
mov
jle
cmp
pop
adc
ror
mov
jne
push
ror
and
dec
cmps
dec
test
scas
out
push
jecxz
jmp
dec
push
popf
enter
xor
jb
adc
fwait
loopne
ret
outs
xor
mov
ds
inc
aam
add
or
push
fstp
add
push
prefetchw
mov
jmp
xor
or
fisttp
push
rcr
fwait
dec
call
sub
mov
jl
rcl
and
pusha
stc
ja
imul
xchg
adc
pop
fwait
scas
out
pop
xor
cwde
inc
call
mov
xor
xchg
imul
inc
mov
sahf
lods
xrelease
retf
ds
xchg
mov
cli
imul
add
xor
adc
pop
ret
mov
enter
out
repz
push
fist
xchg
inc
loopne
sbb
retf
inc
mov
add
mov
jl
mov
sbb
stos
push
mov
sub
imul
test
inc
sub
jmp
add
xchg
fsubr
mov
cmps
sub
push
pop
mov
hlt
jb
pop
pop
mov
mov
jge
pop
(bad)
cmps
fwait
and
div
and
cmp
xlat
data16
push
in
xor
out
fiadd
scas
xchg
jnp
mov
cld
mov
sub
cdq
xchg
shl
and
ja
xchg
dec
jecxz
jle
leave
cmp
mov
es
mov
sbb
mov
hlt
xchg
sbb
cdq
ja
out
pop
push
and
in
pop
frstor
mov
ins
sbb
xor
or
pop
xor
retf
mov
xchg
adc
and
adc
and
jae
push
mov
in
pop
lods
popf
sbb
scas
add
mov
sub
scas
imul
fist
nop
inc
imul
sub
add
in
adc
arpl
xor
mov
jl
adc
pop
dec
test
fcomp
call
pop
jle
shr
retf
mov
sbb
dec
dec
pusha
ds
loope
cmps
stos
ins
xchg
pop
ror
in
es
dec
js
sahf
call
outs
adc
add
cld
mov
stos
gs
fild
out
dec
jp
(bad)
addr16
jl
pop
call
es
dec
das
test
inc
lods
(bad)
mov
pusha
inc
and
ins
aam
add
rol
repz
jle
mov
mov
imul
enter
imul
nop
adc
inc
fldenv
mov
add
mov
jg
add
scas
retf
rol
pop
mov
xchg
repz
rol
cmp
and
(bad)
sar
push
add
mov
out
int3
sub
xor
sbb
or
jmp
std
sub
lock
fisub
add
mov
mov
cli
pop
push
ror
push
retf
ret
cmps
shl
ror
gs
pop
mov
xchg
fcmove
in
shl
retf
fnstsw
(bad)
out
(bad)
sub
jno
push
or
(bad)
js
outs
aas
ret
in
push
retf
sbb
fadd
imul
push
xor
cmps
sub
addr16
sbb
ret
push
xor
jae
addr16
ins
arpl
xchg
rcr
in
test
movs
pusha
dec
mov
stos
pushf
jecxz
fdiv
or
xchg
sbb
sub
pop
push
pusha
add
outs
shl
add
daa
jnp
inc
dec
cli
repnz
adc
iret
push
or
mov
push
test
add
fnstcw
cmps
call
imul
or
fsub
jmp
cmp
cmps
in
test
sub
hlt
or
ss
add
fcomp
je
dec
pop
shl
dec
cmp
inc
jl
xchg
push
movs
xor
sbb
popf
outs
mov
rcl
xor
xchg
into
xchg
ja
cmp
cmp
pop
or
xor
add
daa
mov
retf
adc
(bad)
xchg
frstor
pop
(bad)
addps
pop
xchg
cs
cmp
aad
sbb
cmp
jns
stos
inc
movs
cmp
dec
pop
jns
fs
dec
mov
shl
out
(bad)
std
jnp
ficomp
cmp
push
jmp
scas
and
sbb
adc
pop
inc
add
push
das
add
(bad)
mov
jmp
cmps
add
stc
sti
xor
push
mov
pusha
daa
or
loop
pop
pushf
mov
mov
jp
out
out
ror
lods
xchg
(bad)
lea
add
jno
sbb
bswap
(bad)
imul
add
stc
out
jg
mov
xor
pop
xchg
lock
and
shl
cmp
sbb
aad
int3
in
and
inc
test
ins
(bad)
fdiv
dec
popf
jb
shr
repz
lods
mov
sbb
in
pop
jle
pop
cmps
fcmovbe
push
xor
or
mov
inc
imul
enter
aad
scas
int
mov
pop
xchg
fmul
xor
lds
test
jge
ret
dec
test
xchg
fdiv
mov
sub
es
jle
cmp
xchg
xchg
cmps
adc
mov
push
push
movs
daa
inc
fldln2
(bad)
dec
out
psadbw
mov
jge
pop
ror
shr
lea
push
sahf
jmp
cmp
test
fnstenv
pop
pusha
jmp
sub
arpl
push
sub
adc
sub
sbb
ss
int3
mul
out
add
pusha
das
or
add
imul
retf
or
dec
sti
inc
mov
lea
mov
leave
out
les
cmp
jo
stos
(bad)
retf
mov
cdq
cli
and
in
inc
or
ja
and
adc
mov
add
test
shr
rol
shl
xchg
mov
sbb
sbb
xchg
mov
sub
repnz
mov
test
not
in
jl
out
aas
adc
jno
mov
lahf
xor
xor
pop
push
(bad)
out
xchg
add
jns
add
mov
(bad)
scas
(bad)
and
out
cmps
dec
std
mov
arpl
xor
xchg
movs
xchg
mov
pop
pusha
adc
(bad)
test
inc
add
es
xchg
loope
cmp
outs
ficom
aaa
and
sub
mov
retf
into
push
sahf
lock
pop
sub
in
add
mov
sub
imul
jbe
jl
push
mov
mov
fisttp
adc
adc
je
gs
fidivr
mov
jle
iret
and
fwait
loope
js
into
jle
daa
inc
fs
rol
mul
add
mov
pop
add
popf
push
dec
mov
fmul
(bad)
lock
cli
addr16
cli
(bad)
ror
jbe
fsubr
fisub
jmp
add
cmps
pop
rcl
sbb
je
hlt
in
ret
and
(bad)
jo
aas
stc
shl
pop
xchg
in
movs
gs
repz
iret
mov
sub
cmp
inc
push
or
scas
mov
aad
pop
sub
cld
add
movs
mov
inc
aas
aad
mov
and
mov
test
and
sub
push
push
je
pop
lahf
out
cs
es
xor
add
pop
cmp
jmp
and
out
je
std
add
push
fcmovu
mov
(bad)
jg
dec
ror
rcr
repz
sub
sub
(bad)
mov
call
retf
jecxz
cld
imul
lahf
mov
cs
push
jl
inc
ret
dec
xor
int3
gs
or
mov
and
lods
fimul
jl
jg
push
inc
pop
in
xchg
jmp
xchg
and
out
dec
push
mov
xchg
jmp
les
jbe
call
cmp
dec
cmp
(bad)
rol
xor
mov
rcl
inc
pusha
inc
scas
or
cmp
cmps
adc
push
in
fadd
aas
mov
out
inc
cs
lahf
test
mov
mov
inc
daa
push
std
ret
lods
jno
aas
xor
sub
les
hlt
test
sub
rcr
test
push
pop
pop
inc
out
mov
xchg
retf
add
jmp
ret
cmc
inc
cwde
fsubr
cmp
sbb
add
sub
sbb
pop
xor
xlat
dec
jmp
dec
pop
and
adc
xor
mov
pop
fild
xor
ret
push
enter
data16
push
push
cmp
fadd
inc
pop
or
add
mov
movs
in
stc
call
cmp
cwde
in
(bad)
mov
jo
arpl
push
pop
aad
pop
xchg
stos
lea
pop
dec
inc
stos
sbb
xor
cmp
int3
dec
push
cwde
xchg
jne
dec
pop
cmp
ins
fbld
adc
popf
hlt
mov
or
arpl
fisub
xchg
adc
lock
aad
sbb
ins
pop
fdivp
and
shr
adc
pop
sub
fisttp
icebp
cmps
loop
popa
dec
movs
add
add
out
or
mov
stc
add
inc
ins
pop
rcl
mov
loop
mov
and
and
jg
test
mov
call
(bad)
jl
rcr
stos
loop
xchg
and
and
xor
pop
pop
mov
sub
loop
mov
fs
test
lods
cld
sub
mov
adc
sub
cmovns
mov
mov
je
adc
jmp
add
pop
mov
push
and
test
stos
fwait
mov
call
shr
in
aas
cmps
neg
int3
stos
adc
sahf
mov
punpcklwd
mov
mov
icebp
mov
mov
inc
jp
sbb
lahf
cmp
jne
and
pop
mov
cmp
inc
mov
lds
xor
jno
jb
test
and
add
popf
iret
test
add
scas
popf
or
xchg
sub
cmc
shl
out
mov
scas
repnz
adc
mov
pushf
dec
paddw
ss
enter
sar
pop
adc
in
adc
xor
cmp
test
retf
and
cmp
ins
fucomip
movs
xchg
fimul
mov
sbb
bound
shl
inc
push
in
idiv
(bad)
ficomp
xor
(bad)
cld
out
(bad)
cmps
fnstenv
js
jo
das
or
popf
dec
repnz
jno
outs
rcl
cmp
std
es
retf
out
je
mov
jmp
ins
shr
xacquire
and
adc
hlt
outs
xor
pop
dec
jmp
mov
inc
xor
aaa
sub
jg
mov
int3
jecxz
sub
sub
ret
jl
cmp
sub
and
pop
or
push
stc
sbb
sbb
inc
mov
rol
repnz
ja
or
sahf
adc
mov
es
xor
ror
push
and
mov
leave
pop
cmp
push
and
movs
push
hlt
test
(bad)
loope
std
inc
adc
mov
sub
fistp
xchg
xor
aas
iret
adc
adc
fdiv
and
mov
ins
dec
fwait
pop
adc
mov
adc
dec
and
hlt
mov
sub
loope
xchg
jmp
jno
mov
push
lods
test
mov
jb
lods
stc
out
adc
pop
jb
xchg
rol
fdivr
fs
mov
inc
mov
in
xchg
and
movs
mov
inc
in
rcl
xor
pop
test
sar
jae
adc
popf
pop
cmp
and
dec
in
dec
sub
sbb
test
and
jmp
or
pop
mov
mov
add
mov
loop
fs
aaa
and
(bad)
pop
xchg
jecxz
ins
iret
nop
loop
sar
push
mov
cmp
dec
inc
enter
mov
jbe
push
stos
and
xchg
push
sub
test
cmps
sbb
inc
mov
out
and
mov
lods
push
add
ror
cmovg
shr
pop
in
movs
xchg
jmp
xor
call
jmp
test
xor
pushf
xor
or
jae
repnz
jp
sti
inc
inc
mov
xchg
stc
fwait
enter
outs
dec
leave
adc
add
push
mov
mov
(bad)
test
fcomp
fild
inc
out
cmp
cld
fisttp
ins
fwait
jbe
in
imul
adc
idiv
cmps
ss
cdq
bound
call
inc
mov
xchg
aas
ins
xor
push
out
sub
shl
iret
repz
ror
out
or
sub
(bad)
hlt
push
mov
pop
sahf
jb
loopne
xor
mov
shl
xor
or
pop
shr
icebp
ds
das
sub
jo
ror
in
jb
mov
jns
rcr
cli
call
ret
leave
mov
pusha
xchg
ret
mov
add
movs
cmp
cli
push
xchg
inc
repz
cmp
push
push
ins
iret
cld
rdmsr
add
mov
daa
pop
jmp
or
dec
stos
sbb
adc
jo
test
sti
sahf
mov
xor
dec
fbld
inc
into
xor
mov
leave
call
jmp
push
cmp
jmp
arpl
loope
jne
add
js
mov
dec
fdivr
std
inc
sbb
cmp
int
jp
sahf
adc
mov
ja
pop
inc
fnstcw
aas
lods
cdq
xchg
popa
sub
sub
add
add
jae
inc
test
or
lds
ins
dec
pop
dec
dec
test
add
outs
fadd
or
pop
and
sbb
sahf
jmp
xchg
add
dec
popf
adc
gs
fidiv
sahf
cmp
xor
cmp
fidivr
cld
xchg
clc
mov
inc
imul
xor
lea
cmp
stos
in
fidiv
xchg
lahf
cwde
es
out
(bad)
jmp
ins
fsub
dec
js
cmp
scas
sbb
pop
stos
in
fucomp
inc
add
xchg
pop
adc
movs
aas
retf
pop
fcmovne
pop
fisub
push
inc
dec
test
lods
(bad)
mov
cmc
add
jmp
fwait
push
and
daa
es
leave
mov
cmp
pop
inc
adc
jmp
cmp
xchg
jmp
jne
daa
xor
jl
bound
push
bound
popa
pop
pop
(bad)
mov
dec
xchg
xchg
xchg
rcr
mov
ss
jmp
cmp
cmps
cmp
fldenv
mov
mov
xlat
sub
add
mov
mov
and
stos
es
push
adc
repnz
and
unpckhps
xchg
fist
xor
sti
sti
out
daa
add
aam
pop
mov
cmp
lods
loopne
leave
lods
cmc
(bad)
push
outs
loop
cmps
repz
cmp
shl
jg
sub
sbb
sub
mov
inc
dec
sti
int3
inc
sbb
ret
inc
ins
ret
inc
adc
call
or
cmps
push
(bad)
out
cmp
outs
xor
jae
(bad)
adc
fcomi
dec
inc
pop
jmp
popf
int
leave
fld
aaa
fnstsw
add
loopne
xor
push
xor
gs
xchg
xor
sbb
imul
mov
les
xchg
sbb
mov
mov
idiv
clc
xor
leave
or
sub
mov
mov
mov
jl
inc
aaa
dec
dec
jnp
jo
xchg
pop
cwde
ficom
pop
add
(bad)
aas
stos
leave
xchg
out
hlt
adc
bound
pop
xchg
call
fcom
lds
test
add
push
and
and
stos
(bad)
pop
mov
popa
and
rol
ins
movs
add
aam
ss
inc
pop
in
(bad)
adc
mov
fcom
push
sbb
int
cld
cld
cmc
cmc
test
out
add
outs
ror
mov
loop
aaa
cld
mov
test
pop
neg
test
in
mov
push
push
jmp
std
add
into
lods
loop
test
rcr
ficomp
ret
or
mov
repz
pop
mov
mov
cli
pushf
lock
cmps
das
aas
sub
inc
pop
mov
jp
jmp
dec
push
jle
test
call
dec
push
in
pop
fcom
sahf
adc
cmp
inc
or
pop
ins
enter
push
jge
stc
or
in
push
fist
jl
and
pavgw
mov
cmps
retf
outs
pop
mov
fs
xchg
je
or
loop
pop
es
sahf
pop
(bad)
fld
lods
mov
sub
and
in
movs
aaa
xchg
and
adc
cdq
pop
ins
aam
adc
xlat
sbb
lods
push
leave
inc
dec
aas
repnz
xor
imul
das
and
(bad)
jo
inc
adc
push
inc
jns
or
mov
xchg
and
pop
ficomp
xor
cmp
pop
adc
jmp
xor
mov
sbb
add
inc
aas
lea
mul
fst
pop
mov
push
ror
aaa
(bad)
mov
adc
sub
xchg
mov
sub
not
out
jle
shl
mov
xchg
jecxz
outs
dec
cdq
inc
jmp
and
in
xchg
mov
js
sbb
dec
adc
or
movs
mov
jbe
out
frstor
mov
inc
xchg
mov
outs
fsubr
cmps
mov
in
dec
lods
sbb
inc
push
test
fld
sub
push
xor
push
sar
mov
sub
sbb
push
cmp
mov
xor
xlat
in
xor
lahf
into
and
aam
test
je
push
xor
mov
sbb
dec
jge
shl
leave
add
jns
push
out
pop
mov
pop
adc
mov
arpl
jmp
clc
mov
adc
xchg
cdq
vunpcklps
in
xchg
sbb
xchg
sub
pop
popf
inc
mov
gs
lods
jbe
test
lea
dec
rcr
xchg
ret
lds
sbb
pop
add
mov
imul
ror
xchg
pushf
mov
pop
in
les
int3
into
scas
fldenv
ins
jno
add
imul
movs
jp
inc
mul
pop
xor
mov
out
push
ins
xchg
and
adc
nop
dec
cwde
mov
jbe
vcvtss2sd
xor
cmp
cmp
or
or
aad
and
fisub
js
jbe
cmp
loope
in
xchg
repnz
(bad)
pop
scas
cli
push
dec
push
(bad)
xor
jl
addr16
(bad)
or
adc
mov
adc
mov
ins
jl
push
or
aad
or
data16
das
push
push
pop
mov
xor
xor
dec
aam
dec
jbe
adc
inc
ds
ja
cli
inc
jge
and
out
jge
clc
dec
test
xor
push
push
sbb
sub
inc
pop
and
mov
jg
arpl
fisttp
push
cmp
rcl
rol
mov
mov
lock
or
(bad)
in
(bad)
shl
ficomp
add
jmp
dec
jmp
fidivr
inc
inc
push
mov
sbb
and
jne
aaa
ins
sbb
cdq
xor
idiv
adc
cdq
jge
outs
pushf
sahf
ins
jg
daa
cmp
stos
dec
sbb
in
mov
mov
addr16
mov
xchg
sub
add
inc
leave
in
xor
into
std
or
icebp
jns
mov
push
xchg
jle
jmp
jne
xor
outs
and
jns
mov
movd
stos
mov
ss
xor
test
cmps
adc
dec
je
push
xor
mov
icebp
push
sub
inc
xchg
inc
fcom
in
(bad)
mov
div
push
(bad)
fprem1
shr
aas
sbb
cmp
repnz
mov
adc
out
push
aam
loop
jnp
xchg
cwde
shr
leave
mov
pop
and
mov
or
ds
and
xchg
ja
jmp
mov
arpl
pop
lods
mov
(bad)
fcom
cld
jmp
xor
hlt
xchg
cmp
ins
jne
in
push
popa
dec
adc
sbb
sbb
xchg
daa
push
pop
and
inc
rcl
leave
jp
dec
lods
outs
dec
sbb
adc
fimul
stos
out
out
push
shr
pop
imul
xchg
xor
xor
or
push
shl
pop
sbb
jle
shr
fdiv
xor
mov
test
js
sti
nop
add
jnp
(bad)
mov
jne
stc
rcr
inc
fiadd
mov
popa
push
push
cmp
adc
xchg
or
push
add
popa
add
xchg
add
adc
sub
jns
dec
cwde
inc
dec
js
int
gs
adc
sti
or
mov
push
scas
clc
(bad)
mov
fild
inc
imul
mov
retf
ja
pop
mov
out
inc
shl
cmp
sbb
popf
vmovsldup
jnp
loope
int3
(bad)
icebp
sub
out
clc
jae
cs
outs
jmp
mov
loope
mov
popf
add
fmul
retf
mov
sbb
pusha
loop
test
inc
mov
or
adc
add
fnstsw
pop
mov
mov
hlt
cwde
ins
ficom
pop
lock
mov
jl
pop
cli
jmp
or
aaa
and
call
pop
aas
cwde
stos
es
(bad)
lahf
in
stos
mov
sbb
push
xchg
xchg
fnstsw
mov
scas
out
(bad)
test
jo
aas
lahf
nop/reserved
mov
or
ret
sbb
or
outs
push
dec
jp
jo
sbb
xchg
fdiv
or
repz
and
add
dec
jnp
jns
jg
pusha
mov
hlt
cmp
inc
jns
or
pop
sti
cmp
adc
ins
or
and
jle
xor
and
mov
scas
push
mov
call
bnd
pop
mov
shl
inc
mov
(bad)
nop
pop
sub
pop
xchg
fwait
jle
pop
jp
in
cld
adc
mov
popf
adc
dec
and
dec
lods
or
xor
mov
in
jnp
repz
out
dec
xchg
jge
aam
lods
(bad)
ins
xchg
push
cmps
lods
(bad)
xchg
push
sbb
into
rol
stos
gs
aam
mov
loope
fbld
add
or
and
shl
lss
ins
out
mov
mov
push
push
jmp
daa
mov
mov
mov
mov
fucom
hlt
and
js
(bad)
bound
sub
xchg
jmp
and
out
add
inc
sahf
xchg
ds
xor
and
add
dec
push
or
pop
mov
and
push
lock
sbb
xchg
cli
jl
jl
jecxz
movs
fiadd
not
(bad)
rol
push
repnz
shr
dec
ins
or
mov
mov
shr
mov
jle
or
call
test
push
pop
je
sbb
xchg
xor
mov
pusha
ret
lods
mov
xchg
out
mov
mov
mov
pusha
dec
addr16
push
or
shl
repnz
bound
loope
imul
and
push
and
and
pushf
aas
and
subps
xor
fdiv
scas
out
jnp
in
cmps
loop
lahf
sub
out
fimul
icebp
sub
retf
ins
lods
(bad)
out
jp
sbb
repnz
dec
mov
inc
stc
add
dec
push
pop
adc
ror
and
es
shl
pop
inc
mov
add
(bad)
push
clc
push
out
jmp
pop
daa
add
jns
in
(bad)
jge
mov
test
fsub
add
sbb
cmp
repz
repnz
nop
enter
lahf
out
imul
popa
sbb
jle
cmps
xchg
push
js
jae
repnz
and
daa
sub
or
push
fs
mov
add
dec
sar
call
mov
cwde
and
dec
ret
xor
inc
sbb
fcomp
cld
sbb
pushf
clc
sub
mov
inc
mov
sbb
xchg
mov
jbe
lea
pop
repz
cmp
ss
lock
add
mov
lock
xchg
xor
inc
push
cmc
test
cld
mov
or
test
scas
bts
rcr
adc
sahf
ins
jnp
lods
fldenv
test
jp
ja
scas
jae
push
xchg
dec
in
and
ret
mov
pop
pop
mov
jecxz
push
lea
add
popf
fs
pop
std
mov
xor
xor
test
std
mov
jg
xlat
inc
inc
je
xor
dec
repz
mov
cli
daa
loope
call
cld
fisubr
pop
pop
pop
sub
sahf
mov
pop
mov
mov
fild
int
outs
mov
push
dec
xor
xchg
cmp
inc
pop
outs
outs
or
sbb
inc
dec
fwait
xchg
ja
mov
pop
iret
dec
xor
dec
dec
test
sub
dec
xchg
fimul
neg
adc
out
push
jmp
cs
push
push
push
mov
out
icebp
jnp
sbb
jae
mov
outs
retf
fwait
jnp
mov
lahf
rcl
mov
sub
es
cs
cmc
pop
sbb
rcr
aad
push
aad
leave
movs
pop
mov
lahf
cmp
cmc
sub
sti
in
cmp
jge
xchg
div
jmp
lock
and
xchg
shl
in
xor
xor
and
jge
aad
test
clc
(bad)
jle
sbb
or
fsub
dec
test
pusha
mov
dec
jns
push
xchg
push
ins
out
push
scas
movs
mov
ins
int
dec
mov
and
imul
into
aaa
or
and
gs
sahf
xchg
jg
stos
xchg
popa
sub
fisttp
xor
out
ror
add
push
xchg
jns
jbe
mov
push
push
jecxz
add
idiv
xchg
xchg
jmp
dec
jbe
jo
pushf
inc
cmp
mov
in
data16
adc
popf
lods
cmps
xchg
and
lods
mov
call
adc
mov
inc
xor
adc
push
pop
xor
rol
adc
or
aaa
mov
retf
stos
fbld
mov
(bad)
push
jae
lock
mov
fdiv
stos
lds
pop
jne
jo
cld
js
sbb
fisub
clc
fidiv
lahf
mov
sub
xchg
movs
icebp
push
arpl
adc
xor
pop
stc
add
mov
mov
outs
mov
enter
outs
sti
test
mov
inc
fstp
leave
jg
mov
movs
xor
inc
cmp
arpl
stos
pcmpeqb
cmp
stos
data16
sub
jecxz
mov
inc
xor
or
jno
adc
mov
inc
sub
retf
lock
js
cmps
retf
clc
je
js
inc
imul
in
sub
mov
sahf
pop
imul
mov
mov
mov
adc
sub
and
push
sbb
ret
(bad)
dec
jle
cdq
push
ficom
pop
mov
jecxz
rcr
imul
jne
cli
fadd
shr
xor
inc
adc
mov
aas
add
mov
jae
xor
inc
or
enter
arpl
(bad)
xor
jmp
les
retf
inc
stos
sbb
out
or
and
fs
int3
test
add
aas
repnz
cmp
popa
retf
hlt
cli
push
mov
cmp
bound
cs
outs
sbb
cmc
xor
mov
pop
aaa
push
cdq
ror
scas
and
popf
adc
mov
pop
cmp
hlt
fdiv
loope
call
clc
pop
pop
inc
push
test
xor
int3
or
cmps
outs
inc
lds
sbb
retf
mov
adc
lgs
pop
outs
and
lock
jno
fistp
cmp
mov
push
cmps
pop
mov
xlat
mov
pop
mov
sub
rcr
sti
cli
and
aas
sub
loopne
fistp
push
mov
out
inc
leave
bsr
pop
xor
dec
nop
mov
in
lods
or
pushf
push
fdiv
data16
bnd
inc
nop
mov
pop
cmp
mov
pop
mov
mov
adc
mov
dec
jle
std
push
and
jle
outs
xchg
push
sbb
mov
es
mov
push
xchg
rcr
add
pop
cmps
enter
xchg
mov
push
jno
jge
and
fs
mov
lahf
pusha
push
shr
and
cmps
cwde
enter
pop
pop
adc
push
mov
adc
cmp
int
iret
sub
gs
loopne
mov
movs
je
mov
sub
(bad)
push
mov
push
ret
jmp
mov
and
adc
xchg
repnz
movs
jmp
inc
stos
test
fild
jp
jle
mov
mov
addr16
push
cmp
scas
scas
or
test
xchg
jge
call
push
adc
pushf
sbb
pop
inc
xor
shl
ret
std
fld
div
mov
add
pop
jecxz
addr16
addr16
add
mov
dec
or
xor
mov
mov
arpl
fsubr
and
pop
repz
xchg
mov
out
or
sti
xchg
icebp
add
jmp
or
ins
shl
mov
std
lods
cmps
nop
pop
fdivr
fst
cmps
mov
sar
cmp
xchg
std
inc
xchg
inc
or
xor
jb
stc
push
lods
lods
cmps
dec
inc
pop
push
mov
jno
jnp
bound
imul
sub
icebp
push
ret
and
addr16
mov
mov
int
jb
fild
sahf
cmp
and
es
stc
inc
(bad)
dec
pop
rcl
test
(bad)
scas
arpl
push
jmp
push
repnz
sub
in
sbb
mov
cmp
push
cmps
lods
xchg
lahf
outs
into
cmp
call
mov
adc
pop
fcom
xlat
mov
ja
dec
test
xchg
fldcw
push
inc
cdq
add
mov
pusha
into
xlat
out
retf
xchg
(bad)
jb
push
cli
mov
xchg
push
jg
mov
push
aaa
add
dec
stos
xor
retf
(bad)
inc
add
imul
sub
mov
cwde
retf
retf
push
adc
pop
push
outs
and
aam
push
shr
xchg
test
inc
call
xor
icebp
push
not
mov
ds
imul
nop
bound
xchg
repz
into
adc
lds
fdiv
xor
lock
dec
cdq
push
les
pop
stos
cmp
fcom
mov
stos
data16
dec
aad
jb
and
cdq
add
mov
lock
xchg
dec
imul
adc
jmp
xchg
xchg
adc
jno
int
shl
pop
cmps
mov
repz
xchg
xor
repz
ror
mov
push
popa
ret
mov
mov
push
xor
xor
or
not
out
lea
pop
mov
jecxz
inc
push
mov
int
push
adc
fld
inc
jnp
dec
and
addr16
or
retf
jb
repnz
outs
and
rcr
jb
sub
jo
(bad)
xlat
sub
fstp
or
repnz
inc
cdq
mov
xchg
mov
sub
call
push
add
jno
mov
or
into
test
imul
jp
repnz
mov
mov
and
jae
or
arpl
mov
cs
shr
xor
cmp
pop
dec
pop
cmp
xchg
and
mov
lahf
xor
mov
movs
mov
jp
enter
imul
call
mov
add
std
mov
in
push
lock
pop
dec
push
retf
pusha
inc
mov
clc
xchg
jecxz
aaa
cdq
jns
mov
outs
movs
sub
sar
pop
xor
adc
push
mov
movs
pop
lea
cmps
nop
mov
into
xchg
sub
aad
sbb
retf
ins
arpl
inc
stos
adc
xchg
imul
jmp
pop
bound
dec
loop
into
into
aam
cdq
loopne
adc
shl
dec
dec
or
push
loop
or
mov
or
inc
push
leave
ret
jno
push
pusha
movs
out
add
mov
mov
cmp
jb
fld
mov
mov
in
(bad)
push
mov
stos
xchg
jmp
popf
jae
out
stos
rcl
std
je
pop
jg
lock
mov
call
les
and
xor
xchg
rol
adc
outs
imul
or
nop
jno
stos
jne
sub
out
repz
gs
xchg
inc
imul
pop
pop
loope
xchg
push
jmp
xchg
out
leave
xor
not
xor
cdq
test
loop
sbb
shl
cmp
and
pop
sub
fild
cmp
cmp
ins
pop
aam
test
cmc
pop
sub
jle
and
in
xchg
add
cmps
cld
in
mov
dec
jbe
mov
leave
inc
js
dec
sub
push
ficomp
mov
in
nop
xchg
cmp
popf
dec
stos
and
aam
mov
mov
mov
leave
int
fild
call
sbb
jmp
sbb
lock
sub
cmp
pop
dec
mov
mov
retf
inc
jmp
call
adc
std
xor
adc
adc
test
ins
inc
inc
jno
int3
jns
hlt
shr
cmps
push
adc
loop
cmp
nop
mov
and
fisubr
pop
inc
(bad)
stc
inc
xchg
std
jne
not
push
ja
xchg
call
mov
jmp
mov
cmp
mov
cmps
or
ret
scas
sub
jbe
lods
mov
popf
dec
cmp
(bad)
stc
sub
cld
pop
dec
(bad)
mov
lahf
xchg
inc
mov
fidiv
ss
sar
int
push
(bad)
enter
lock
dec
inc
mov
in
cmp
push
imul
(bad)
dec
sub
or
fbld
mov
inc
push
ja
popf
loopne
leave
adc
lods
mov
(bad)
iret
inc
jb
repnz
mov
js
outs
stc
daa
mov
iret
test
sbb
push
nop
push
icebp
sbb
jnp
cs
ret
test
pop
mov
dec
and
enter
inc
out
sbb
sbb
sbb
imul
jl
pop
inc
fsubr
sub
pop
xchg
stos
sub
xchg
dec
fsub
fsubr
cmps
loop
add
out
lea
pop
lds
jo
xchg
test
and
jbe
outs
hlt
sub
or
inc
pop
cmp
mov
(bad)
cld
sbb
inc
mov
ret
call
and
jmp
xor
ror
inc
dec
aad
fiadd
add
pop
mov
imul
jns
inc
xor
fldenv
jbe
xchg
stos
in
mov
mov
add
lahf
in
xchg
loopne
sbb
js
test
inc
ret
mov
neg
mov
pop
aam
scas
pop
sub
(bad)
and
enter
fisubr
xchg
mov
or
xchg
test
sbb
cwde
jno
fdiv
(bad)
and
jo
aaa
mov
inc
shr
int
inc
jo
fimul
cs
(bad)
push
retf
inc
mov
xchg
or
sub
sbb
push
fdivp
repnz
jmp
(bad)
adc
jg
pushf
mov
bnd
sbb
in
inc
leave
cmps
in
xor
xor
dec
xchg
call
sbb
dec
fisub
or
out
xor
pop
scas
mov
jmp
jnp
mov
ja
jbe
xor
and
jnp
lea
lea
dec
and
inc
aam
(bad)
movs
jae
jno
shr
outs
ficom
mov
dec
and
jmp
add
sub
sub
leave
pop
mov
int
out
shr
(bad)
cli
xor
(bad)
push
adc
loope
sbb
sbb
ins
jmp
pop
sub
mov
xchg
ret
or
(bad)
into
lea
mov
dec
je
jb
cwde
ret
mov
arpl
ins
pop
xor
fadd
fnstcw
xor
jl
ret
test
pop
mov
dec
jg
mov
pop
fiadd
inc
pop
js
sbb
push
xchg
xor
lods
stos
inc
stc
xchg
push
in
mov
cmp
clc
repz
in
push
scas
idiv
out
sbb
add
sbb
pop
lods
mov
test
jl
pop
es
sub
xchg
xor
add
in
pop
lock
mov
or
mov
sar
ja
xchg
ror
sar
mov
cmp
fisttp
adc
int
xchg
push
icebp
add
cmp
in
dec
or
loop
mov
xchg
loop
mov
jmp
and
stc
or
dec
xchg
jp
pop
push
and
mov
xchg
add
int3
fld
sub
fstp
or
jge
loope
outs
pop
xchg
mov
pop
je
hlt
pop
xchg
fldenv
jle
lods
je
sub
mov
push
shl
ja
xor
mov
cli
movs
mov
add
cmp
push
mov
das
pop
(bad)
inc
pop
shl
addr16
test
push
repz
out
jle
xchg
pushf
hlt
test
push
imul
movs
daa
fucomi
frndint
clc
mov
adc
lea
es
cdq
add
popa
sbb
je
sub
jmp
out
hlt
dec
outs
push
aad
xchg
push
mov
pushf
or
adc
and
fst
sti
or
xchg
(bad)
sub
sbb
fimul
pop
iret
jb
mov
aad
call
cli
xchg
push
pop
adc
push
pusha
(bad)
mov
mov
or
inc
cwde
test
leave
daa
fstp
push
adc
jmp
dec
push
inc
cmp
(bad)
dec
loop
iret
mov
mov
call
mov
pop
cli
add
add
fwait
or
mov
retf
punpcklbw
or
(bad)
and
cwde
shl
dec
movs
fwait
aaa
add
xchg
das
bound
in
pop
adc
inc
xor
dec
inc
sahf
xchg
repnz
lds
shr
das
data16
dec
add
test
and
adc
mov
push
js
ins
rcl
xor
cmp
rol
or
mov
adc
inc
aas
fst
inc
push
dec
add
add
pusha
dec
pop
push
sub
pop
jo
or
push
cmps
inc
popa
fimul
add
push
call
fldcw
inc
sbb
cmps
fldcw
inc
test
pop
retf
imul
mov
cmps
mov
mov
sar
dec
cli
ins
jmp
mov
mov
push
stos
push
popf
pop
repz
and
retf
jecxz
inc
sbb
ja
pop
sbb
shl
dec
hlt
fbstp
push
aaa
or
jge
xchg
dec
out
pusha
pop
inc
mov
inc
pop
scas
jbe
in
rol
xchg
sub
popf
cmp
les
add
inc
ret
imul
in
repz
sahf
in
mov
cmp
fld
xchg
push
xor
add
aas
cmc
xchg
dec
into
jge
cmp
outs
outs
leave
mul
xchg
adc
mov
cmp
jmp
or
or
and
sub
gs
xchg
lods
sahf
jg
push
or
call
jmp
ins
jge
test
inc
mov
icebp
jmp
sub
ss
mov
push
out
xlat
ins
add
dec
imul
cld
xor
jbe
rcr
movs
inc
inc
push
(bad)
pop
or
leave
dec
test
adc
mov
xor
aam
jne
push
sti
dec
and
push
sbb
mov
aas
mov
(bad)
dec
pop
scas
and
cmp
dec
popf
scas
mov
and
mov
xchg
ror
push
es
inc
add
mov
call
xor
clc
sbb
adc
push
sub
shl
or
xor
imul
test
cmp
mov
mov
push
(bad)
xor
mov
xor
ins
or
inc
jmp
dec
je
sbb
mov
push
stos
mov
(bad)
into
xor
ror
jo
and
cli
mov
enter
and
push
mov
imul
xchg
aad
arpl
push
je
lds
dec
mov
loope
or
stc
fst
xor
dec
sub
gs
jge
jp
mov
movs
popa
sub
popf
jle
leave
mov
add
push
xor
pop
sbb
mov
or
mov
sar
js
jge
xchg
cmc
sub
push
push
dec
stos
js
cmp
aam
xchg
ds
cwde
jg
add
popa
push
out
mov
outs
pop
jmp
and
mov
push
inc
addr16
mov
cdq
push
cmp
cld
call
lock
imul
outs
outs
adc
cwde
les
dec
add
in
or
(bad)
or
arpl
icebp
cmp
inc
jle
mov
inc
inc
lds
sbb
(bad)
imul
xchg
mov
mov
mov
mov
je
xor
sub
mov
aaa
xchg
xor
jecxz
xor
in
push
stos
dec
ja
das
cli
pusha
cmp
cdq
icebp
jp
sar
add
mov
push
inc
mov
bound
adc
loop
pushf
jnp
(bad)
test
fisubr
dec
jp
pop
xchg
hlt
push
jmp
jns
mov
aas
addr16
arpl
inc
dec
jp
test
fistp
aaa
(bad)
xchg
jp
pop
or
jno
xor
adc
rcr
(bad)
hlt
in
push
jg
lods
mov
mov
pop
enter
mov
xchg
push
xchg
mov
fs
repz
push
gs
mov
xchg
mov
sub
mov
push
dec
loopne
out
sar
in
es
mov
shr
jmp
(bad)
mov
mov
mov
sub
cmc
inc
ja
xchg
inc
xor
mov
call
jmp
test
sti
mov
inc
lds
test
cmps
outs
mov
out
dec
movs
(bad)
in
xchg
outs
lods
loop
dec
or
dec
(bad)
or
movs
idiv
popa
dec
dec
push
inc
cmc
xchg
and
(bad)
adc
je
lock
cvtps2pd
mov
pop
pushf
ret
jp
or
out
aas
test
inc
push
jmp
adc
ficomp
push
cmp
jg
leave
and
xrelease
cmp
jne
scas
sub
jbe
loop
pop
jl
ins
pop
xor
outs
mov
pop
scas
mov
les
sub
jg
mov
mov
xor
pop
jmp
pop
adc
lea
or
jae
idiv
adc
cdq
test
(bad)
out
(bad)
out
fst
int
or
push
pop
in
adc
sbb
scas
fcmovb
test
cmp
dec
adc
pop
push
mov
add
js
push
repnz
arpl
xchg
push
aaa
dec
ret
xchg
ins
out
sbb
ret
imul
xchg
and
sub
test
int3
sub
push
nop
std
out
cdq
push
test
loopne
lods
lods
jg
aam
stos
dec
and
xor
loope
fidiv
lock
xor
(bad)
std
mov
lock
xor
mov
test
ss
dec
adc
jg
xor
push
mov
sub
out
and
push
repnz
add
sbb
outs
loopne
call
dec
push
mov
cmp
mov
mov
xor
push
push
aas
test
mov
add
ret
cmp
(bad)
cmps
inc
mov
outs
xchg
shl
mov
sub
arpl
push
(bad)
adc
out
pop
add
pop
cdq
test
clc
mov
(bad)
leave
out
ss
daa
jle
xor
lods
ds
stc
add
mov
pop
jle
std
mov
adc
xor
in
cmc
mov
cld
dec
ret
inc
popa
xacquire
pop
dec
repz
jbe
inc
xlat
call
mul
jno
repz
cmp
dec
xchg
js
test
cmp
xor
(bad)
jo
pop
push
out
loope
mov
jp
pop
sub
into
cmp
and
aad
sub
push
jbe
cmp
and
inc
call
adc
push
rcl
add
(bad)
popa
repnz
xchg
retf
mov
test
jbe
aaa
outs
mov
imul
lods
jbe
xchg
mul
ja
push
pop
sbb
adc
and
pushf
or
pop
sub
mov
jmp
mov
fs
mov
(bad)
shl
inc
mov
xor
movs
or
addr16
shr
movs
mov
or
or
jno
lea
sub
cli
es
and
xor
dec
adc
sbb
cld
jp
sub
gs
xor
in
push
addr16
cli
pop
mov
sbb
fidiv
cmp
xor
cmp
aad
cmp
mov
xchg
retf
sub
popf
int
cdq
stc
fnstsw
scas
jne
movs
fwait
scas
add
das
mov
lods
test
call
xchg
in
and
ficomp
sub
int
out
mov
push
inc
adc
push
pop
(bad)
in
aas
jnp
jo
je
mov
clc
test
je
ss
mov
sub
mov
push
adc
push
inc
push
repnz
adc
and
clc
pop
ins
out
out
fsub
pop
enter
inc
pop
and
dec
int3
pusha
jmp
fnsave
call
cdq
adc
sub
outs
mov
ins
test
ror
retf
or
lahf
jno
cmc
sub
or
test
fstp
push
mov
xor
mov
aaa
jnp
sahf
jno
sub
lods
jne
jge
vorps
int
adc
pop
cli
dec
arpl
xor
ds
or
xchg
rcl
jl
mov
fcomp
xchg
xor
fucomip
into
push
cmps
pusha
cmovle
movs
dec
test
sbb
jbe
cmp
mov
pop
jmp
and
adc
inc
repz
mov
push
mov
xor
inc
stos
daa
or
dec
cmps
jl
fnstcw
dec
sub
xchg
ins
xchg
push
cdq
adc
stos
pop
mov
jp
xchg
sti
les
mov
or
imul
int
mov
sbb
in
cld
das
gs
add
inc
int
aas
lock
in
pushf
mov
repnz
cmp
icebp
push
cmp
ds
mov
test
call
lock
and
inc
jno
inc
ins
mov
jno
xchg
sbb
cld
pop
lods
ins
xchg
div
xor
inc
mov
ret
(bad)
mov
fisttp
inc
(bad)
sbb
fsub
pop
pop
xchg
(bad)
ss
stos
mov
arpl
je
imul
jp
ret
shl
mov
ss
nop
xlat
inc
aas
push
inc
leave
lock
sub
adc
fcom
jmp
push
push
fs
cmp
push
inc
pushw
outs
fidiv
out
xchg
cmp
rcl
es
cmps
lds
retf
jns
mov
xchg
shr
mov
outs
jo
jg
adc
call
adc
cmps
and
xchg
xchg
cmp
mov
je
xor
mov
repnz
sub
mov
mov
(bad)
or
jb
xchg
jno
push
adc
xor
mov
dec
dec
cdq
(bad)
push
pop
(bad)
out
mov
inc
push
lahf
icebp
dec
sbb
cmp
adc
mov
sbb
cmp
mov
popf
loop
jmp
outs
push
add
inc
aam
cli
sbb
cli
bound
sahf
clc
(bad)
mov
xlat
movs
leave
mov
mov
fisubr
xchg
or
push
mov
ficom
fxch
clc
cmp
mov
xor
outs
sub
mov
sbb
popa
gs
adc
adc
push
jnp
jbe
sub
pop
outs
xlat
jns
pop
repnz
push
inc
fsub
aad
call
pop
inc
outs
aad
imul
xchg
pop
test
and
mov
sbb
xchg
jns
xor
popa
push
iret
pop
and
xchg
das
in
out
dec
cmc
mov
xor
mov
rol
and
jg
xchg
jo
aad
fsubr
sub
dec
retf
push
mov
jge
xchg
aad
das
outs
cmp
sub
retf
or
cdq
int
mov
jle
mov
in
in
movs
ss
dec
xchg
stos
push
xchg
mov
jb
repz
pop
dec
call
mov
add
jge
inc
push
cs
jge
js
test
sar
mov
sbb
xor
push
mov
fs
pop
xor
mov
dec
std
outs
sub
jb
cmps
pusha
loope
test
jmp
push
add
mov
pusha
(bad)
sbb
std
cmp
xchg
cmps
sub
pop
rol
ins
dec
pop
sub
test
adc
test
mov
and
push
fldenv
retf
idiv
test
daa
icebp
add
push
jp
mov
dec
hlt
adc
popf
and
xor
sbb
bound
cmp
in
xchg
push
adc
mov
mov
xor
xor
cs
scas
push
mov
adc
sbb
xchg
mov
and
pop
stc
or
xchg
out
movs
aas
adc
in
scas
retf
(bad)
xchg
out
mov
jmp
xor
xchg
pop
call
cvtps2pd
add
mov
mov
out
adc
outs
inc
sub
dec
ja
shr
out
push
pop
add
pop
cmp
xchg
xchg
xchg
leave
jmp
repnz
mov
xor
jno
or
nop
imul
jae
popa
sbb
ret
inc
imul
mov
pop
in
sbb
pop
call
(bad)
dec
stos
sbb
sub
push
jle
gs
clc
(bad)
mov
je
fdivr
adc
push
mov
rol
and
cli
retf
xchg
mov
jmp
pop
sub
mov
inc
fidiv
lds
stc
xor
mov
dec
scas
pusha
mov
jne
push
push
push
push
mov
imul
(bad)
add
xchg
mov
sysenter
stc
in
aas
fdiv
outs
push
cmp
mov
loope
pop
repnz
js
call
fld
repnz
push
ror
push
lods
sti
scas
ss
in
shl
jmp
dec
mov
jnp
xlat
pusha
scas
pop
lock
in
cmps
cwde
jecxz
bound
jns
mov
push
pop
and
mov
push
pop
mov
adc
xlat
dec
inc
xchg
cld
pop
sub
cs
push
enter
pop
(bad)
or
imul
push
lock
mov
mov
imul
icebp
mov
mov
stc
cmp
repz
pop
sahf
aam
mov
jge
(bad)
in
imul
push
int
shl
(bad)
(bad)
mov
in
mov
xchg
jno
(bad)
and
repz
aam
cmc
cs
inc
fidivr
mov
pop
inc
pop
in
and
inc
pusha
in
push
hlt
xchg
scas
(bad)
fild
mov
sbb
retf
and
in
pop
adc
push
repnz
or
pop
pop
sbb
mov
rcr
xor
push
adc
fnstenv
add
mov
out
repz
push
arpl
stos
iret
dec
out
inc
ss
cmp
dec
push
dec
loop
jmp
ins
mov
pop
jmp
outs
push
je
(bad)
iret
and
inc
and
sub
out
rol
lahf
mov
add
pop
pop
cmp
hlt
lds
and
xor
and
and
fld
xlat
(bad)
mov
dec
icebp
mov
push
out
sub
adc
scas
or
aam
push
(bad)
xlat
inc
mov
jp
cdq
and
push
mov
cmp
mov
mov
add
int
fdivr
push
mov
inc
sub
das
retf
pop
and
mov
mov
jmp
sbb
popa
push
fisttp
cmp
lds
cmps
mov
jecxz
adc
ins
in
or
cmc
jmp
js
(bad)
xor
fild
ret
pop
xor
adc
cmps
test
cmp
cmp
data16
outs
jne
sub
dec
jg
xchg
cmp
push
sbb
rol
mov
out
push
std
cld
sbb
jne
xor
cmp
pop
push
pop
test
fcos
mov
jge
and
sbb
bound
inc
cs
das
pop
out
test
aaa
cs
mov
mov
inc
ror
sbb
enter
pop
retf
stc
xlat
jo
and
inc
add
xchg
in
fidiv
leave
mov
fsubr
jne
pop
in
shl
mov
add
cmps
pusha
rol
push
mov
push
jno
cmps
nop
mov
mov
jmp
ins
mov
outs
out
pushf
out
xchg
(bad)
(bad)
enter
cmp
fisub
dec
cmps
or
jb
test
in
add
iret
aas
in
outs
xor
push
fmul
repnz
mov
cmp
arpl
jge
les
pushf
loope
jge
and
push
dec
rcr
lahf
jno
mov
push
cmps
test
fisub
mov
cmp
(bad)
mov
jo
sti
fdivr
jne
cmp
or
ret
dec
lea
jb
jg
mov
not
xchg
lods
jp
sbb
mov
xchg
pop
pop
push
fwait
rep
test
mov
and
shr
sbb
cmp
and
xlat
jns
dec
gs
popf
gs
sub
fild
je
into
dec
mov
or
in
leave
lahf
jg
push
je
ss
out
jbe
cwde
mov
xor
jns
das
and
movs
mov
push
sbb
or
xchg
or
not
push
lods
cmp
popa
mov
loope
dec
cmps
outs
cmp
lock
(bad)
loopne
loop
jbe
movs
pusha
jae
mov
xchg
cmps
fs
mov
pop
js
sbb
in
cmp
adc
xchg
retf
retf
js
jmp
xchg
jle
into
inc
dec
pop
(bad)
int
es
jns
sbb
test
xor
sub
out
jp
sbb
pushf
cmp
xor
push
push
std
xchg
inc
scas
jmp
cdq
mov
stc
pop
sub
and
or
push
fldcw
sub
loope
addr16
call
lds
push
js
repnz
cmp
pop
inc
call
fidivr
imul
cli
pop
stos
mov
stos
ret
cwde
loope
sub
or
aam
cs
aad
aas
mov
scas
xchg
mov
mov
xchg
mov
call
pop
imul
jp
lods
sub
cmp
inc
cmc
jnp
in
sub
fcmovu
cmp
or
leave
test
push
out
and
jle
add
xor
cmp
fld
outs
leave
jns
movs
sub
call
xchg
pop
aas
(bad)
push
jae
iret
mov
in
pop
imul
xchg
add
sub
sub
sub
aas
sti
cmp
shl
dec
lea
repz
mov
push
jge
inc
ficom
push
test
popa
sbb
aam
cmp
loopne
enter
pop
icebp
call
shl
mov
push
(bad)
push
imul
bound
mov
xchg
pop
cmps
scas
gs
shl
sub
loope
call
outs
xchg
test
push
mov
add
jns
retf
mov
mov
pop
mov
xchg
call
mov
cld
push
dec
mov
loop
mov
test
mov
dec
cdq
cmp
repz
mov
pop
pop
repz
adc
out
jge
push
imul
sbb
and
iret
fldcw
shl
xchg
push
cmp
cmp
or
add
adc
push
fstp
out
or
js
loop
sub
xchg
mov
shr
xchg
(bad)
fisttp
mov
xchg
inc
cli
push
ret
dec
mov
movs
(bad)
popa
clc
mov
cmp
in
pop
push
imul
mov
mov
sub
mov
mov
cwde
adc
sbb
cmps
retf
shr
mov
dec
enter
push
mov
mov
(bad)
push
cmp
pop
or
dec
shr
dec
mov
ins
scas
push
mov
dec
mov
aad
add
inc
dec
mov
jno
push
add
pusha
rcl
int
push
sbb
mov
xchg
call
cmp
dec
mov
repnz
xchg
or
push
or
inc
bound
cmp
test
aas
mov
mov
in
sub
aas
jne
stc
ds
inc
or
iret
push
sub
mov
mov
popf
xchg
dec
rcr
inc
mov
stos
es
sbb
sub
push
dec
cld
xchg
jae
push
adc
push
jo
inc
je
mov
push
and
sub
and
cdq
sub
push
pop
dec
adc
dec
mov
jmp
icebp
mov
cmps
js
call
arpl
mov
jbe
imul
or
aam
jp
xlat
mov
cmp
call
cmp
jo
push
test
retf
int
add
adc
(bad)
sub
mov
shl
pop
cmp
jle
push
xor
cmc
addr16
mov
fmul
scas
dec
dec
xor
adc
popa
mov
inc
fidiv
enter
pusha
stc
dec
(bad)
in
inc
(bad)
clc
adc
push
jnp
pop
cli
iret
sar
call
cli
inc
or
jnp
xor
in
aaa
iret
pop
pushf
or
push
sbb
jecxz
aas
sub
stc
adc
xchg
xor
arpl
gs
mov
jmp
rcr
test
shr
add
dec
xchg
push
sbb
mov
call
cmp
add
popa
addr16
(bad)
mov
popf
push
stos
add
cs
cmps
hlt
inc
stc
scas
push
test
mov
mov
das
stos
(bad)
push
pushf
movs
scas
sbb
out
xlat
pop
or
retf
(bad)
lock
test
ja
pop
nop
mov
pop
fimul
movs
ins
pop
cmc
mov
or
in
jecxz
cmp
push
inc
push
mov
(bad)
sar
push
inc
xchg
loopne
cdq
push
cdq
mov
jl
jo
push
(bad)
adc
sub
push
pushf
outs
outs
sub
jo
lahf
mov
cwde
fsubr
adc
adc
por
xor
aam
or
test
ret
lds
push
jne
and
scas
fimul
enter
mov
inc
pushf
xchg
jmp
out
mov
cmp
fiadd
dec
pop
xchg
pop
pop
mov
mov
adc
call
mov
aas
pop
jnp
add
cmp
mov
stc
jge
jno
xor
or
inc
(bad)
push
fiadd
mov
xor
xchg
mov
xor
aaa
sub
aad
repz
rcr
lea
cmps
mov
stc
dec
and
idiv
repnz
retf
dec
js
mov
inc
push
hlt
mov
mov
xchg
fmul
loop
sbb
aas
xchg
ds
into
rol
adc
stos
(bad)
ror
dec
cmp
das
clc
pop
shl
and
sbb
mov
xchg
xor
les
push
stos
cld
fiadd
bound
mov
popa
data16
cli
cmps
add
xchg
sub
push
fisub
aaa
div
mov
int3
add
pop
jg
or
mov
add
movs
mov
(bad)
inc
leave
lods
mov
mov
loopne
(bad)
jmp
in
nop
mov
or
add
rcr
cdq
jmp
lea
(bad)
xlat
add
lea
rcr
movs
xchg
mov
xor
jge
dec
sub
arpl
popf
xor
rcr
int3
xchg
jb
pop
sub
add
hlt
mov
adc
shl
jle
jno
jb
jne
rol
idiv
cmp
data16
test
loope
stos
jle
loop
repz
xor
pop
add
ss
fmul
je
push
push
arpl
dec
cmps
fs
fmul
inc
and
retf
cmp
popa
inc
shl
inc
mov
adc
outs
jp
mov
(bad)
adc
lahf
and
push
push
mov
mov
clc
dec
dec
inc
jg
push
fnstenv
pop
movs
test
add
lods
das
inc
and
mov
call
jl
(bad)
xor
fild
ret
sbb
in
cdq
pop
out
neg
xor
ds
sbb
lods
test
fs
daa
das
adc
(bad)
or
dec
jmp
adc
stos
outs
and
push
popf
test
adc
dec
mov
xor
jb
cwde
push
clc
nop
pushf
ins
xor
retf
stos
lea
leave
sub
cmp
mov
into
inc
jmp
cmp
dec
clc
push
arpl
lds
push
imul
ds
retf
js
(bad)
mov
and
mov
mov
in
mul
cmps
(bad)
mov
mov
dec
mov
out
sub
ret
loop
jmp
sub
pop
sub
mov
push
mov
dec
xchg
and
mov
test
adc
mov
cmp
or
xor
xchg
out
lahf
loope
mov
inc
call
ret
aas
fcmove
cmps
enter
scas
push
shr
jb
and
push
adc
enter
loope
jae
ficom
push
mov
mov
add
jl
jnp
xor
xchg
jmp
pop
inc
cld
shr
fisub
xchg
push
aas
ds
mov
xlat
mov
xlat
dec
inc
fwait
movs
sbb
int
mov
mov
mov
paddw
int3
call
loop
or
cmps
bound
lahf
jp
xor
lea
popa
out
sbb
fild
pushf
mov
mov
xor
es
test
scas
iret
pop
dec
or
aam
xchg
pop
lock
mov
jmp
inc
mov
jo
push
data16
cmp
stc
ins
lock
popf
cli
sub
mov
mov
iret
or
jmp
fild
pop
inc
inc
jmp
mov
mov
in
xlat
(bad)
mov
or
adc
mov
sbb
ret
jmp
cmc
iret
fs
pushf
dec
movs
mul
cmp
pop
js
loop
jmp
and
push
fwait
ds
add
and
loopne
mov
mov
sbb
dec
scas
pop
(bad)
mov
add
test
dec
pop
jae
mov
cmp
pop
or
xor
sar
stc
jl
cmp
jnp
mov
int
shl
push
jle
int3
lock
or
adc
ret
mov
pop
pop
mov
loope
xor
or
scas
and
pusha
ins
and
lods
lock
pop
test
leave
sbb
cmp
lea
dec
test
xchg
repz
xchg
xchg
inc
mov
mov
imul
add
call
ins
xor
sbb
mov
mov
lods
push
bound
pop
loope
shl
loopne
dec
mov
push
sahf
retf
jae
scas
sub
and
cs
dec
mov
dec
or
xchg
pop
(bad)
sbb
repnz
xchg
out
cdq
sub
lds
xchg
outs
inc
jmp
sbb
js
(bad)
pop
or
cli
sub
or
jae
sti
data16
inc
mov
or
les
add
pusha
jl
jb
icebp
imul
sbb
cmp
adc
inc
dec
xor
(bad)
pusha
imul
stos
mov
mov
nop
outs
cld
mov
add
inc
pop
sbb
fcmovu
cmp
mov
std
stos
adc
dec
mov
sub
dec
js
cwde
mov
pop
sub
cmp
(bad)
jle
loop
mov
lods
addr16
jae
fild
add
dec
and
jne
sbb
mov
mov
sbb
outs
or
into
fisubr
out
push
mov
(bad)
cmps
cmp
push
pop
and
(bad)
dec
aam
xchg
rol
dec
push
lds
fcmovb
pop
push
push
test
mov
repz
mov
out
lods
test
jns
mov
out
inc
pusha
nop
enter
shl
fs
iret
push
xchg
inc
inc
adc
inc
adc
cmps
or
push
or
cld
push
scas
cs
sub
cmps
aas
jle
stos
loop
sbb
je
pop
mov
leave
inc
add
dec
xchg
push
pop
push
xchg
retf
cmps
retf
mov
dec
cld
and
(bad)
cmp
pop
mov
push
xor
lahf
or
lea
xchg
push
xchg
mov
xor
or
inc
loope
push
mov
imul
loop
xchg
int
inc
xchg
out
jnp
jmp
add
adc
inc
movs
add
hlt
loope
aam
mov
gs
adc
cmp
test
sub
mov
cli
xchg
dec
arpl
and
aaa
in
pop
nop
ja
cmp
int
mov
dec
jbe
dec
ja
inc
mov
nop
leave
jmp
out
sar
in
imul
cmp
mov
call
mul
add
sbb
mov
in
popf
pop
add
xchg
pop
ret
shl
or
shr
test
fmulp
mov
cmc
mov
push
adc
pop
push
icebp
cmp
mov
dec
(bad)
jle
add
xor
ficom
mov
jp
cwde
xlat
add
rcl
xor
imul
into
mov
dec
mov
pushf
mov
stc
xchg
cmc
sub
lods
std
or
adc
xor
xchg
rol
push
mov
jp
cmp
mov
fcomp
mov
(bad)
xchg
inc
adc
mov
sahf
fucom
repnz
in
ret
mov
in
adc
or
inc
sub
out
mov
icebp
add
aad
dec
xor
movs
jns
inc
fbld
fild
cmp
rcl
inc
popf
stc
mov
mov
movs
jb
(bad)
jge
aaa
push
push
pop
cmp
inc
div
dec
in
xchg
push
(bad)
cmp
rol
into
adc
ja
mov
mov
arpl
jmp
(bad)
mov
clc
pavgw
sar
cmp
jo
ss
cdq
sbb
(bad)
rcr
js
test
ror
int
push
xor
mov
mul
xor
pop
sbb
xchg
jle
cmp
sbb
pop
in
lods
push
dec
inc
sub
stc
push
cmp
sbb
push
cli
ss
mov
fist
jl
cmp
or
mov
out
dec
add
sbb
dec
mov
retf
push
adc
jns
mov
pop
xor
(bad)
pop
out
sahf
add
mov
loopne
pop
xor
cmp
cmp
push
and
fcmove
nop
nop
ret
mov
leave
dec
arpl
lahf
test
aaa
jmp
pop
xchg
fs
(bad)
xor
xlat
jmp
xchg
jg
(bad)
retf
and
(bad)
fcmovnbe
pop
jge
inc
fld
cld
xchg
loope
cmp
enter
xor
and
pop
popa
add
aad
nop
cmc
out
std
mov
outs
xor
out
pop
cld
test
shl
or
or
jnp
push
dec
(bad)
mov
ja
cmp
push
or
aaa
jmp
sar
bound
sub
dec
pop
cmp
imul
xchg
sbb
push
bound
pop
sbb
mov
cmc
daa
mov
das
xchg
jno
jle
xor
dec
call
es
dec
inc
div
sub
dec
cmps
std
mov
add
mov
pop
cmps
cmps
sub
cmp
push
inc
or
cmps
mov
sub
retf
sbb
sbb
add
lea
push
mov
cmc
xchg
test
in
int3
or
inc
xchg
dec
test
jo
xlat
out
sbb
scas
mov
xor
mov
push
lock
mov
idiv
add
sahf
pop
imul
xchg
ret
jecxz
jge
test
jmp
pop
lahf
in
pop
dec
xchg
rcl
fsub
add
inc
ret
leave
sbb
jmp
ds
inc
or
scas
fstp
fidivr
cli
jecxz
cld
call
xchg
ret
addr16
aas
sbb
push
pushf
mov
pop
enter
test
das
xor
nop
pushf
xchg
shl
jnp
out
cld
jns
shl
push
sub
and
aaa
sub
(bad)
cmc
test
xchg
call
xchg
xchg
mov
jne
push
and
pop
fnstenv
and
adc
jns
mov
pop
adc
mov
pop
stos
outs
popf
jmp
loop
not
xchg
or
lds
cdq
lock
mov
int3
repz
movs
jecxz
sysexit
or
sti
dec
leave
push
leave
les
adc
test
pop
inc
ficom
stos
push
je
out
pop
int
icebp
adc
xchg
dec
push
cmp
inc
stc
sub
mov
maskmovq
idiv
data16
dec
and
mov
(bad)
jecxz
int
push
popf
mov
jno
dec
aas
stos
mov
cmp
pusha
adc
cmp
out
sub
add
add
or
aas
(bad)
rsqrtps
imul
addr16
cdq
lea
add
fistp
jo
and
in
aam
xor
js
mov
test
sbb
test
mov
and
mov
push
dec
fwait
cmps
mov
test
in
cmp
dec
jb
leave
and
aam
dec
std
div
mov
popa
cmp
push
cmp
fidivr
pop
xor
popa
fmul
scas
sbb
push
adc
xchg
adc
sbb
rcr
rol
xchg
mov
xor
mov
dec
jno
(bad)
pop
bound
mov
das
mov
pop
or
pop
push
sbb
icebp
test
fcomi
fs
bound
(bad)
mov
push
add
cmp
mov
stc
cli
fist
aaa
xchg
daa
jmp
cmps
dec
push
dec
or
adc
inc
mov
jbe
xchg
int3
shl
fstp
pop
clc
mov
adc
(bad)
mov
nop
jg
or
jo
xchg
jle
test
mov
sbb
and
loopne
inc
loop
and
mov
cmp
mov
pop
ins
jmp
and
pop
fwait
cmp
(bad)
mov
daa
jns
sar
rol
push
int
lahf
shr
cmp
cld
nop
xchg
xor
(bad)
lahf
and
xchg
js
imul
fist
out
(bad)
int
je
jae
mov
ror
xlat
(bad)
pop
ds
sbb
sub
(bad)
jmp
or
out
mov
xchg
cmp
jns
xor
push
mov
test
mov
retf
push
ret
mov
bound
out
xchg
and
xchg
mov
cli
pop
lods
and
mov
add
movs
jmp
mov
dec
mov
test
and
aad
cld
jmp
sbb
pop
sub
pop
fiadd
in
movs
sbb
mov
xchg
sar
ja
jmp
push
int
scas
push
repnz
fsub
lds
mov
mov
push
loope
mov
add
mov
outs
call
pop
push
cld
jecxz
cld
not
add
cmp
push
sub
imul
rcl
xchg
mov
movs
stc
pop
cmp
sub
mov
mov
ss
call
shr
xchg
sub
xor
ja
push
adc
ret
and
dec
shl
jno
aas
pusha
outs
int
cmc
fild
adc
and
aam
ins
dec
jmp
jns
dec
bound
pop
idiv
mov
cmp
jnp
ds
cwde
jecxz
mov
(bad)
jnp
cmps
test
mov
adc
data16
ins
frstor
in
fwait
arpl
lock
sbb
fst
lock
mov
pop
push
loope
push
and
aaa
cmc
call
lods
sbb
and
add
push
xor
xchg
cmps
xor
push
hlt
hlt
les
into
sahf
in
jno
adc
ins
sub
or
call
test
popf
adc
test
push
mov
sar
push
add
enter
xchg
push
retf
stc
stc
xchg
test
test
cmp
push
mov
adc
cmp
jmp
mov
and
dec
dec
jo
imul
mov
ja
int
into
cmc
outs
in
inc
jle
cmps
pop
call
inc
stos
jb
mov
mov
lea
cs
xor
test
push
pop
jle
outs
fiadd
add
xor
mov
pop
je
in
mov
cmc
aas
pop
xlat
clc
lahf
xlat
mov
retf
es
and
jle
scas
pop
movs
call
loope
hlt
mov
lea
mov
dec
sbb
rcl
sbb
shl
and
adc
dec
gs
inc
nop
inc
cs
mov
inc
pop
mov
xchg
add
dec
dec
cmps
fwait
pop
and
cli
into
loop
retf
repz
call
outs
movs
or
sub
fistp
adc
jo
adc
fcmovne
xchg
mov
test
jl
or
out
mul
jge
out
lds
(bad)
js
in
imul
mov
outs
pop
xor
iret
xchg
jl
inc
mov
pop
movs
ja
pusha
rol
ret
jmp
push
and
ja
and
scas
xchg
inc
mov
daa
icebp
aad
xlat
clc
out
mov
call
sbb
adc
ja
jae
cmp
mov
and
push
pop
or
stos
lock
popf
sbb
push
dec
aas
mov
push
jne
inc
sub
call
jl
and
jae
xor
mov
sahf
adc
and
sub
cmp
inc
fadd
dec
bound
push
cmp
xor
add
sbb
lods
mov
and
and
shr
or
cdq
pop
clc
push
jp
aad
sbb
cmp
jae
mov
jmp
call
pop
pop
mov
div
mov
in
out
bound
sbb
and
or
jmp
sub
sub
int
cmp
retf
std
dec
jns
cli
loop
out
clc
es
hlt
jmp
ins
pop
jb
sbb
mov
adc
lock
int3
sub
scas
pop
fisubr
fs
xchg
(bad)
mov
lods
out
std
jbe
xor
sbb
push
add
mov
ficom
aam
in
pusha
xchg
movs
inc
push
mov
jns
mov
repnz
(bad)
das
cmp
loope
fisubr
lea
mov
jnp
sahf
xchg
mov
sbb
leave
dec
push
or
outs
mov
xchg
cwde
dec
mov
movs
stos
imul
mov
movs
nop
xchg
ror
jmp
push
mov
aad
dec
popf
mov
jnp
jp
sbb
inc
push
das
and
add
mov
std
in
aam
mov
adc
ins
ret
adc
jo
inc
(bad)
dec
inc
jl
and
push
dec
nop
out
add
jb
inc
adc
jns
stc
test
loopne
add
add
or
(bad)
inc
sub
int
add
cmps
and
xchg
leave
imul
jmp
mov
mov
pusha
pop
bound
pop
rcl
xchg
push
enter
jmp
aas
sbb
std
or
dec
fild
pop
mov
out
dec
push
push
out
mov
fiadd
add
inc
jmp
(bad)
fs
pop
pop
(bad)
rcr
or
lahf
or
push
out
xchg
xchg
fidivr
mov
stc
adc
mov
jo
fs
pop
stos
cmc
pop
jmp
shl
sti
imul
inc
retf
cmps
cmp
stos
jg
lock
xor
ins
iret
imul
adc
ds
stos
retf
shr
lds
mov
js
sti
jno
mov
adc
and
loope
into
leave
adc
dec
push
bnd
xchg
out
(bad)
stos
lods
(bad)
not
popa
pop
sub
xlat
cmp
xchg
icebp
ja
jmp
loopne
test
pop
arpl
cli
dec
fld
mov
push
pop
pop
in
inc
aaa
xchg
in
std
aad
and
mov
call
popa
fdiv
dec
aaa
(bad)
adc
cmc
jbe
dec
cmp
sbb
xor
shl
dec
xchg
jae
sub
dec
sbb
repnz
mov
rcl
inc
out
xor
test
retf
cwde
shl
jns
test
pop
sbb
pushf
adc
add
and
cs
loop
sub
and
cmp
xor
pusha
out
push
mov
cmp
hlt
push
jb
ja
test
push
mov
mov
mov
sti
sbb
std
xor
push
sbb
ja
xchg
push
and
mov
add
sbb
cli
mov
arpl
loop
cmps
pop
cwde
mov
cmp
xlat
pop
push
cwde
scas
xchg
setns
jg
push
aaa
mov
dec
clc
pop
or
sub
add
mov
sub
push
fisttp
retf
push
into
pop
pop
fucom
xchg
mov
push
sub
pop
inc
jae
fcomp
jns
mov
adc
push
inc
push
inc
and
movs
imul
sbb
adc
and
push
push
cli
jae
outs
into
dec
mov
enter
pop
add
mov
adc
mov
gs
test
add
out
push
sbb
push
int3
dec
adc
cmps
aam
stc
ret
fld
and
in
jmp
inc
and
repnz
push
xor
adc
xchg
movs
cmc
(bad)
hlt
mov
pop
sar
retf
mov
test
call
movs
mov
test
inc
loop
mov
cwde
add
ss
ins
jo
xlat
jo
mov
ins
or
dec
add
sub
cmp
cmp
mov
clc
cmc
addr16
test
fs
mov
pop
hlt
dec
xor
mov
fnstsw
xor
aad
add
or
ss
push
pop
out
mov
xchg
data16
loop
scas
pusha
sbb
pop
es
add
push
xchg
call
movs
pop
mov
jo
aad
inc
pushf
inc
ins
lahf
test
xchg
imul
shl
push
daa
in
mov
sbb
das
(bad)
pop
stos
inc
mov
lea
push
mov
into
pop
(bad)
mov
mul
sub
(bad)
push
pop
pop
sbb
jle
or
add
pop
pop
out
cmp
lahf
mov
imul
pusha
inc
stos
jae
scas
xor
sbb
mov
sub
sbb
ret
nop
stos
ins
mov
fdivr
push
popf
hlt
imul
fsubr
mov
mov
sub
xchg
xor
inc
call
loop
cli
(bad)
push
scas
xchg
shl
test
and
sbb
adc
and
jmp
bound
mov
ins
add
fist
jne
test
jmp
jmp
jno
je
js
test
pop
mov
mov
jge
sbb
inc
rcr
mov
daa
xchg
std
add
xor
rol
inc
mov
ins
and
lds
sbb
ds
jecxz
mov
push
fst
je
mov
pop
sbb
(bad)
push
fwait
xchg
pop
mov
inc
stos
dec
jecxz
scas
imul
cdq
mov
jbe
fdivr
dec
dec
xchg
test
das
add
gs
jmp
cs
and
aam
mov
fs
(bad)
stos
test
clc
ret
mov
xchg
das
lea
mov
push
mov
dec
test
loope
mov
lea
mov
rol
scas
adc
test
pop
jl
add
retf
jb
test
jae
xor
sbb
add
aam
imul
lods
in
iret
xchg
xchg
adc
mov
shl
psllq
push
(bad)
mov
sub
leave
(bad)
push
bnd
aam
fst
test
mov
stos
dec
or
cmp
dec
xchg
lea
sub
cmps
iret
mov
sub
int
outs
cmps
popa
adc
sbb
loop
dec
in
outs
fld
shr
sbb
or
ret
(bad)
icebp
jne
and
jecxz
sub
mov
mov
scas
(bad)
and
jp
call
mov
fadd
rcr
aad
sub
retf
add
test
ins
movs
je
mov
fild
add
and
iret
push
out
pop
std
(bad)
shl
xchg
fiadd
ss
mul
das
push
inc
sti
or
xor
add
mov
clc
aaa
rol
out
scas
sub
outs
push
jae
xchg
push
push
mov
clc
mov
push
fs
xchg
push
inc
jge
in
sahf
mov
mov
imul
into
aam
push
sbb
dec
call
push
xchg
dec
scas
ins
or
(bad)
stos
retf
push
fld1
(bad)
pop
shl
jb
sbb
shl
mov
or
mov
xor
and
and
cmp
rcl
xchg
test
iret
sbb
or
fcomp
in
outs
sbb
pop
repnz
pop
xchg
stc
es
popf
scas
xor
cmc
or
out
mov
fld
test
(bad)
push
idiv
or
std
lods
inc
cli
cmp
loop
xchg
pop
jecxz
push
xchg
lea
or
pop
fcomp
xchg
lods
inc
mov
adc
xchg
mov
mov
jno
mov
inc
aaa
fs
pop
(bad)
bnd
mov
sbb
pop
shl
or
or
inc
add
lds
push
gs
mov
push
mov
daa
mov
cmp
xchg
dec
inc
iret
icebp
push
mov
jne
sbb
popf
jne
mov
dec
add
xor
push
nop
mov
fld
or
pop
push
pop
sti
test
movs
dec
jge
cmp
mov
outs
(bad)
mov
js
cmp
movd
shr
and
sbb
adc
sub
cmc
shl
jnp
in
adc
jecxz
stc
push
push
xchg
push
nop
dec
mov
retf
and
add
mov
aas
add
lock
mov
inc
mov
es
ins
div
or
dec
inc
jp
cmp
cmp
fisubr
out
add
loope
repz
cs
out
jne
les
push
pop
xor
mov
repz
hlt
pop
cmps
push
cli
dec
fstp
ins
dec
xchg
jmp
xchg
adc
stc
xor
pop
or
dec
pop
adc
retf
push
jle
retf
js
dec
add
icebp
jne
das
outs
enter
dec
(bad)
mov
adc
jmp
jl
repz
dec
inc
and
scas
pop
mov
mov
ds
fcom
icebp
or
jle
sub
push
inc
lods
sub
aaa
ret
xlat
das
(bad)
in
add
and
sub
stos
pop
popf
inc
mov
xchg
sbb
ja
fstp
imul
push
mov
mov
push
dec
jno
push
pop
mov
pop
jle
xlat
mov
popa
add
jb
movs
jo
sbb
push
mov
aaa
enter
fild
push
outs
xchg
add
jge
pop
and
daa
sub
cmp
cmp
xchg
adc
xchg
mov
movs
sub
mov
stos
imul
sar
jmp
out
mov
xor
mov
xchg
pop
fld
clc
mov
enter
mov
mov
rcl
xchg
inc
fidiv
and
in
inc
mov
cli
sub
inc
adc
(bad)
mov
(bad)
fchs
imul
(bad)
push
sbb
aas
stos
je
push
dec
fcomi
js
adc
rol
jne
inc
fwait
xchg
cmc
inc
xchg
sub
fisub
std
inc
pop
adc
movs
push
nop
mov
cld
popa
adc
mov
sbb
adc
popaw
xchg
and
les
les
ret
xchg
cmp
not
cmp
mov
add
fnstsw
mov
pop
test
and
es
ins
(bad)
dec
xchg
fsub
jns
jp
or
xor
adc
mov
sar
lock
pop
imul
hlt
xlat
shr
pusha
jle
push
lds
xchg
je
inc
push
enter
fistp
jge
fadd
icebp
adc
mov
test
fdiv
cmp
pop
push
pushf
mov
call
jns
repnz
cs
ficom
repnz
sub
cld
mov
or
aaa
mov
mov
gs
jg
mov
call
or
out
outs
jnp
xchg
aas
sub
jp
or
xchg
popa
fcom
xor
sbb
fild
ins
gs
(bad)
mov
sub
cmp
inc
sub
mov
xchg
mov
gs
ja
pop
shl
int3
ins
mov
jns
std
push
imul
(bad)
push
je
jp
mov
mov
test
and
push
loopne
je
inc
sahf
cld
jo
push
sub
sahf
push
int
sub
(bad)
les
push
xchg
cdq
mov
or
add
pop
mov
add
mov
cwde
arpl
aad
mov
push
adc
pop
add
pop
pop
push
or
sbb
(bad)
int3
push
and
pop
mov
jp
mov
mov
out
out
and
ret
cmp
(bad)
jp
(bad)
or
into
push
das
das
mov
sub
jge
in
adc
fs
mov
mov
retf
hlt
stos
call
mov
sbb
xor
mov
adc
xchg
and
gs
ret
loop
ret
mov
pop
nop
or
dec
(bad)
mov
or
lds
into
jmp
sub
xchg
rcr
pop
add
mov
jmp
mov
mov
loopne
rcl
mov
pop
out
push
mov
xchg
call
shr
push
and
call
adc
or
cs
retf
cmc
loopne
adc
fist
(bad)
sti
pushf
sbb
push
dec
mov
cmc
aad
jne
adc
push
retf
xchg
mov
cmp
(bad)
movs
and
pop
push
pop
sahf
clc
xor
xchg
jle
inc
fnstcw
pusha
xor
lds
ja
(bad)
xor
cmp
movs
or
xchg
sar
mov
pop
enter
out
cdq
stc
imul
xor
shl
jle
mov
push
mov
repnz
cmp
cld
mov
hlt
lock
shl
(bad)
push
sub
adc
xchg
add
mov
jb
add
jle
mov
aam
xchg
(bad)
lods
daa
popa
lods
sub
inc
(bad)
mov
mov
and
ret
bound
dec
adc
mov
pop
or
shr
push
jle
dec
add
aas
and
lds
(bad)
aam
mov
stos
and
mov
adc
rcr
mov
mov
sub
sub
adc
cwde
sbb
retf
ss
div
(bad)
push
cmc
or
add
xchg
rcl
pop
dec
cwde
mov
out
retf
dec
and
xor
loopne
add
or
mov
pop
push
iret
jmp
pop
loope
je
mov
dec
inc
pop
out
rcl
sti
jge
lea
adc
xchg
mov
sbb
les
ret
ins
pop
hlt
jne
mov
add
(bad)
dec
mov
and
pop
push
cmp
aad
add
mov
into
mov
out
xchg
(bad)
xchg
jg
hlt
lds
and
movs
jp
into
mov
js
push
add
ja
outs
xchg
inc
lea
push
or
mov
pushf
aaa
cmp
push
add
mov
adc
cmp
sar
xchg
push
xchg
sub
mov
adc
fcomp
push
out
aaa
and
shl
popf
mov
inc
aad
jae
ret
rcr
jnp
sub
adc
jg
fwait
ins
xor
mov
nop
shr
xchg
sub
cli
xor
add
xor
gs
jg
jb
push
adc
retf
mov
(bad)
pop
and
dec
inc
jnp
add
repz
leave
rol
fs
dec
cmp
fsub
jge
ja
outs
sbb
shl
out
sar
cmp
ja
out
adc
or
mov
jmp
add
repnz
sti
(bad)
mov
dec
mul
cmp
out
ss
mov
stos
dec
sbb
and
fcmovb
xchg
sbb
dec
fcom
push
enter
add
fldcw
ins
arpl
add
add
or
daa
mov
jle
aam
cdq
adc
stos
dec
clc
cdq
and
icebp
xchg
dec
(bad)
or
inc
movs
mov
out
div
cmp
xor
mov
data16
cmp
mov
loopne
sub
cwde
ds
cs
xor
pushf
dec
or
adc
pop
add
enter
sbb
inc
lahf
mov
add
and
push
fisttp
mov
sbb
mov
pop
jno
cmovae
sbb
dec
repz
arpl
out
jp
mov
cmps
mov
fstp
xchg
rcr
xchg
jge
mov
(bad)
in
(bad)
shl
inc
pop
jbe
mov
ss
push
xchg
xor
es
retf
or
xchg
sub
jae
inc
imul
or
gs
mov
pop
fist
cld
inc
adc
dec
sub
sub
jle
xchg
(bad)
and
mov
xchg
enter
add
push
cmps
pop
inc
int3
mov
and
dec
mov
jge
jnp
sub
in
cmp
xlat
call
and
adc
repz
sbb
push
int
mov
xchg
or
inc
xchg
lock
sub
movs
movs
enter
pop
sbb
jl
sbb
xor
dec
loope
add
jmp
daa
out
retf
(bad)
retf
pop
sbb
push
movs
das
cmps
ins
sub
call
test
js
xchg
jmp
movs
jns
jg
inc
ficom
dec
add
jne
mov
mov
cmps
in
fst
dec
push
stos
ss
call
(bad)
sbb
icebp
or
fldcw
cmp
xchg
add
pop
jge
test
xor
dec
lds
gs
mov
aad
repz
nop
int3
fistp
ror
mov
sbb
sbb
jmp
shr
test
sbb
mov
push
fbld
xor
sub
xchg
inc
mov
cmp
aas
gs
out
dec
in
js
mov
mov
ror
push
sahf
fidivr
mov
call
sbb
mov
iret
xor
repz
(bad)
sar
(bad)
dec
push
mov
push
cmp
xor
aam
adc
mov
mov
cs
jns
leave
iret
pop
fsubr
add
mov
stos
lods
xor
lahf
nop
pushf
jl
inc
dec
xor
fisubr
pop
pop
fsubp
fidivr
xchg
pushf
cwde
mov
repnz
mov
cli
adc
stos
dec
ins
ret
mov
repnz
xchg
xchg
xchg
aaa
xchg
ret
mov
mov
and
popf
fmul
inc
sbb
dec
pop
sub
out
outs
ret
xlat
test
fwait
lods
sar
sahf
int3
repz
sbb
aas
dec
push
dec
sbb
daa
ja
mov
cli
sbb
aas
fnstcw
and
xor
lods
mov
mov
movs
lea
cdq
mov
push
lock
jmp
jmp
out
mov
fwait
jmp
dec
push
mov
test
mov
popf
rcr
jecxz
mov
sub
add
call
scas
mov
sub
mov
ins
mov
sbb
ret
mov
scas
mov
dec
clc
mov
outs
push
lods
mov
mov
mov
imul
dec
jne
and
push
mov
pop
push
les
movs
jo
imul
cs
mov
jno
test
addr16
xchg
add
mov
mov
inc
aas
jge
push
stos
mov
pop
lods
adc
(bad)
(bad)
mov
xlat
add
sub
fidiv
outs
mov
in
and
jge
push
jg
js
rcr
stc
pop
pop
add
jmp
sti
(bad)
scas
shl
or
movs
mov
xor
add
ret
jne
cmps
bound
and
xor
mov
out
jle
data16
add
jno
sub
sub
push
pop
and
(bad)
int
ins
push
mov
lea
arpl
loopne
mov
cs
dec
test
jae
outs
mov
xchg
repz
call
cwde
movs
mov
stc
xchg
sahf
push
out
icebp
push
mov
xchg
stos
int3
jecxz
sbb
sbb
in
xchg
cmp
out
jae
sub
icebp
out
mov
rol
sub
cmps
shr
xor
sub
inc
loopne
jb
mov
cmp
mov
sbb
jo
jnp
inc
xchg
dec
cmp
mov
pop
push
test
xor
fmul
hlt
add
ins
inc
loope
adc
sub
out
sub
sbb
cli
cmp
dec
pop
fcmovbe
out
pop
lahf
es
xchg
pop
(bad)
cdq
cwde
in
sub
jae
arpl
mov
pusha
jmp
add
or
ror
popa
mov
stc
pop
(bad)
mov
lods
inc
xchg
mov
in
(bad)
je
push
inc
mov
or
mov
add
mov
(bad)
mov
add
cmp
iret
ja
xor
test
es
dec
hlt
in
xor
retf
popf
jmp
leave
(bad)
in
mov
iret
in
mov
gs
mov
popf
out
aaa
xchg
fsubr
dec
and
push
aam
sahf
vdivpd
inc
pushf
mov
test
ret
mov
jmp
fld
or
popa
mov
mov
adc
inc
into
push
push
lods
mov
test
cmps
cmps
(bad)
sbb
int
es
fwait
test
stos
inc
mov
xchg
(bad)
cmc
inc
fdiv
xor
sbb
outs
rol
jmp
sti
jae
or
mov
cmp
mov
xor
outs
inc
sahf
mov
or
pop
mov
cwde
xchg
inc
aam
icebp
mov
leave
mov
jmp
xor
adc
div
hlt
sub
mov
xchg
jbe
aaa
mov
add
shl
add
mov
sub
ds
test
inc
add
out
sbb
or
cmps
cmp
mov
lds
xor
in
xchg
push
aaa
fdivrp
jle
cmps
push
push
xchg
pop
mov
and
rcr
cld
cmp
and
ja
adc
push
dec
sbb
sbb
(bad)
jmp
aad
mov
scas
push
jo
mov
sub
pushf
mov
in
(bad)
mov
xchg
inc
gs
fsub
lods
cli
xchg
out
rcr
pop
fnsave
out
mov
mov
dec
xchg
cmp
stc
fadd
push
rol
jmp
or
mov
inc
das
loop
dec
push
stos
jmp
scas
sub
cmp
jno
push
(bad)
sahf
xchg
cmp
push
xchg
push
mov
retf
stos
add
out
fdiv
xlat
fucomip
retf
jae
adc
cmp
sub
aas
loop
mov
adc
bnd
retf
retf
sub
pop
xchg
inc
mov
retf
stc
cmps
xchg
(bad)
sbb
ja
test
pop
mov
push
mov
aam
lods
shl
arpl
mov
xchg
imul
inc
adc
das
cmc
jecxz
aas
inc
xchg
cmp
cmps
mov
pop
xchg
dec
adc
sub
in
sti
cmp
mov
pushw
stos
rcl
mov
pop
in
mov
popa
jno
lahf
and
push
pop
lea
dec
iret
lods
test
xor
push
inc
hlt
and
inc
outs
and
pop
lahf
iret
push
jl
pop
mov
mov
jge
pop
jo
ins
je
sti
mov
int
ins
and
movs
add
pop
clc
jne
sub
jp
and
jae
cmp
repz
cwde
jp
stos
sub
faddp
out
pop
test
xlat
cld
mov
jge
xchg
hlt
(bad)
(bad)
stc
push
mov
xor
aas
xchg
(bad)
movs
fnstsw
pop
mov
pop
loop
mov
pop
xor
push
stc
and
outs
shl
int
mov
and
repnz
xchg
jp
xchg
add
sahf
cmps
and
sbb
(bad)
xor
aaa
jl
xlat
mov
push
ret
dec
call
lds
pop
ret
ret
or
enter
repnz
push
mov
cmp
adc
mov
aas
in
movs
mov
call
call
stos
mov
clc
repz
mov
cmc
gs
push
jecxz
xchg
pop
mov
enter
and
push
xchg
sbb
jnp
and
movs
jecxz
mov
adc
mov
sbb
or
cmps
adc
xlat
and
mov
mov
xor
mov
clc
and
pusha
pusha
or
add
enter
rcr
mov
frstor
inc
mov
rcl
pop
mov
dec
out
(bad)
mov
(bad)
sbb
ror
jl
(bad)
mov
inc
cmp
xor
ja
sub
sbb
cmp
push
xchg
jno
and
into
enter
out
mov
cmps
add
fnstcw
out
adc
shl
jno
push
outs
pushf
mov
pusha
shl
test
outs
iret
ds
(bad)
in
push
cwde
enter
pusha
test
dec
mov
pusha
fst
cmp
cmc
cmps
out
fistp
xchg
sub
xchg
js
mov
add
xlat
movs
mov
xchg
push
cli
sub
test
ins
xor
dec
ror
movs
cmc
aam
(bad)
mov
xchg
lods
cmc
inc
jp
fdivr
pop
jl
mov
fnstsw
push
stc
mov
sub
xor
push
mov
or
call
xchg
adc
gs
xchg
bound
movs
jo
adc
pop
mov
stos
sub
loope
(bad)
out
mov
div
in
movs
arpl
inc
aaa
sbb
inc
pop
mov
ror
mov
or
mov
and
loope
add
rcl
sub
cli
test
lods
popf
sub
add
aaa
sbb
mov
mov
add
pop
sub
ins
and
push
pop
cmp
hlt
mov
enter
lahf
xor
test
fsubr
ror
retf
test
(bad)
add
ja
in
add
push
xchg
and
repnz
adc
push
fsin
pusha
aam
inc
mov
std
in
jmp
stos
jl
iret
scas
loopne
fsub
ss
or
sti
call
xchg
mov
movs
sub
std
xor
pop
push
test
jle
div
inc
pusha
fdiv
dec
div
sti
daa
mov
pop
dec
pushf
mov
pop
xchg
pop
inc
popa
dec
ja
scas
test
test
stos
mov
xor
jecxz
add
sbb
sub
pop
pop
push
mov
xchg
mov
(bad)
je
fstp
xchg
fadd
out
das
and
pop
xchg
repz
and
pop
pop
in
aad
dec
inc
and
movs
cmps
enter
mov
ins
out
shr
call
aam
loope
mov
imul
mov
sahf
xchg
mov
sbb
adc
sbb
shl
xor
mov
mov
cmp
sbb
cli
ror
pop
loope
add
cmp
or
repz
inc
dec
push
push
scas
push
das
add
or
mov
test
scas
jne
dec
out
imul
popf
xor
mov
scas
mov
pop
pop
ror
loopne
or
pop
rol
pop
inc
cmc
lods
add
xchg
mov
nop
xchg
dec
or
rol
mov
loopne
mov
ret
add
mov
leave
in
ins
ins
in
pop
in
bound
retf
js
jbe
cli
adc
mov
test
jge
dec
cmps
stos
mov
in
cwde
add
pop
sub
add
adc
pop
es
dec
inc
std
sbb
mov
mov
push
xchg
scas
or
inc
sub
stos
sub
dec
into
add
pop
rcl
dec
xchg
xchg
push
(bad)
rol
and
fcomp
adc
sahf
dec
jmp
xor
fidivr
and
dec
bound
or
scas
fld
aad
shl
aaa
dec
(bad)
xchg
imul
sahf
fnstcw
mul
cmp
xchg
mov
test
fdivr
sub
scas
aam
xor
pop
push
retf
icebp
lea
cdq
retf
xor
adc
mov
out
popa
jns
sbb
and
push
xchg
es
push
sar
fs
shl
fcom
fimul
or
(bad)
xchg
xor
jb
cdq
js
les
xor
data16
test
adc
loop
cwde
fiadd
test
push
lods
push
je
cdq
inc
jns
mov
sahf
call
add
inc
aad
xchg
stc
fisttp
sbb
sub
clc
sti
xchg
retf
xchg
ret
popa
dec
int3
xlat
or
pop
jg
aas
retf
imul
sub
mov
(bad)
cmp
cmp
push
jle
inc
in
aam
mov
and
push
jbe
add
test
adc
mov
xchg
shl
xor
pop
in
jo
dec
add
or
das
adc
addr16
mov
add
xchg
push
or
sbb
sub
and
pop
cmps
lahf
push
mov
dec
mov
add
xor
mov
sub
out
add
mov
imul
mov
scas
inc
sub
pop
popa
pushf
sub
xor
mov
jmp
mov
mov
cmp
ret
mov
fcomp
mov
pop
push
pop
cs
out
adc
mov
jmp
mov
jb
cmp
test
dec
mov
jnp
mov
adc
ret
retf
xchg
dec
pop
leave
jmp
ss
stos
ror
sub
push
sbb
addr16
sbb
mov
mov
(bad)
retf
icebp
fwait
xchg
pop
hlt
fadd
(bad)
sub
jge
or
popf
inc
and
out
dec
ds
jp
mov
xor
xchg
sub
std
push
(bad)
pop
inc
or
fisttp
lahf
out
cmp
inc
inc
mov
test
(bad)
sub
pop
icebp
xchg
inc
out
mov
push
cmp
fwait
shl
fsub
push
jbe
shr
mov
jmp
pop
lea
aas
xchg
int
pop
dec
vmovups
mov
bound
cmp
sub
(bad)
scas
leave
cmp
or
push
xor
(bad)
push
jmp
das
pop
jns
add
pop
in
sbb
jne
jbe
mov
dec
shl
jae
addr16
sbb
inc
in
mov
mov
push
mov
repz
dec
retf
xor
jecxz
sub
enter
test
fsub
push
arpl
fnsave
or
cmp
and
(bad)
cmp
ret
fmul
stos
ret
repnz
test
getsec
lods
std
adc
fwait
cmc
dec
in
push
pop
adc
jne
pop
(bad)
adc
aad
jnp
adc
out
(bad)
inc
pop
adc
pop
stos
xor
pop
(bad)
sub
push
xor
adc
ret
sbb
cmp
out
cwde
mov
in
mov
pop
inc
mov
sbb
jp
dec
add
outs
je
jns
adc
sbb
cld
push
test
int
mov
jg
push
jo
sbb
mov
fmul
xor
xchg
test
enter
mov
jge
ins
int
sbb
jo
movd
push
pop
dec
(bad)
lock
adc
jo
pop
out
pop
inc
sbb
adc
cmps
add
mov
or
(bad)
push
inc
push
das
mov
pop
xchg
mov
mov
ds
stc
mov
out
cmp
stos
jg
or
mov
xchg
pop
pop
pop
imul
idiv
(bad)
adc
or
and
aam
add
jmp
and
xchg
jns
in
mov
sbb
in
cmp
lahf
mov
mov
push
sub
sbb
into
cmp
lock
inc
inc
ret
push
sbb
(bad)
shl
sbb
popa
dec
sub
int
test
push
retf
(bad)
and
mov
add
mov
mov
ins
div
sub
add
mov
addr16
ins
push
xchg
xor
nop
jns
std
sub
xor
jnp
test
movs
pop
adc
jnp
mov
push
std
jle
mov
pop
fild
mov
nop
mov
and
ss
pushf
sub
adc
lock
pushf
inc
jecxz
dec
pop
retf
mov
jp
lods
add
mov
retf
jg
jg
shl
pop
mov
mov
je
push
push
jl
popf
push
ror
mov
xchg
adc
rcl
sub
jecxz
push
out
mov
in
sbb
fild
cmp
out
pop
jmp
sub
jbe
sbb
or
or
cmp
pop
jecxz
add
and
push
sbb
dec
inc
nop
xor
rcr
pusha
xchg
push
out
in
sbb
out
sbb
jo
mov
add
cmp
inc
add
mov
mov
clc
mov
outs
mov
out
jne
mov
xchg
lods
lds
fstp
or
mov
dec
ficom
movs
and
pop
inc
pop
imul
jne
ins
sti
push
test
cld
xorps
ret
adc
cmps
cmp
in
sub
jne
push
fwait
cmp
push
(bad)
xchg
push
stos
mov
loope
inc
cmp
out
lods
cld
pop
xchg
mov
int
xchg
stc
dec
push
lahf
dec
in
nop
mov
jmp
lods
xor
push
ret
aad
xor
dec
fisttp
iret
sub
mov
retf
mov
shl
sub
inc
xchg
ror
and
jl
xchg
inc
inc
xchg
stos
pushf
jl
mov
dec
cmp
dec
loop
out
out
dec
fwait
xor
cmp
xor
push
ret
xor
sub
mov
mov
in
push
movs
push
fadd
mov
(bad)
ret
mov
test
push
cmp
xchg
loop
mov
sub
call
jmp
inc
pop
pop
xor
cld
cmp
cmps
xchg
sbb
popa
fs
in
leave
xchg
call
mov
mov
sub
adc
pop
adc
mov
push
aam
sbb
lea
inc
fwait
sub
mov
outs
mov
cmp
xor
fs
in
leavew
add
scas
popf
mov
sahf
mov
mov
push
add
xchg
enter
inc
sub
adc
aaa
mov
add
call
fwait
in
mov
imul
cmp
popa
xchg
adc
enter
or
jl
add
je
fmul
pushf
mov
clc
jne
(bad)
in
cmp
sbb
cmp
pop
push
stos
mov
test
push
xor
pop
push
fnsave
sar
pop
sar
mov
pusha
push
dec
out
lock
and
(bad)
enter
lea
mov
mov
in
adc
cmp
aad
pusha
outs
adc
sub
mov
adc
sub
adc
sub
inc
mov
ror
jmp
retf
pop
adc
es
ins
mov
cdq
stos
addr16
inc
rcl
dec
in
fnstenv
pop
or
xchg
ins
adc
loopne
mov
jmp
hlt
xchg
stos
add
fistp
add
addr16
loop
jmp
leave
pop
pop
and
scas
adc
in
add
das
mov
ret
stos
fwait
add
mov
addr16
aam
lock
in
cmp
fprem
cdq
pop
fcmovnb
mov
jmp
sub
mov
mov
mov
push
mov
popa
pop
in
ror
cld
push
outs
mov
fidivr
mov
push
mov
mov
and
retf
dec
std
movs
fdivr
stos
cmp
mov
sbb
sbb
adc
inc
mov
jg
jmp
inc
xor
adc
add
add
shr
cmps
dec
in
sbb
sar
cmp
push
jecxz
lahf
jle
inc
mov
cli
and
inc
js
lahf
(bad)
mov
push
inc
mov
add
push
aad
out
cmp
push
(bad)
jno
and
jle
jae
jmp
inc
out
xchg
mov
movs
sti
in
fstp
aaa
cs
fwait
dec
cdq
mov
mov
mov
xchg
(bad)
rol
ror
mov
xchg
mov
ret
cmp
call
jl
sub
xor
std
cmp
aaa
push
gs
clc
or
pop
mov
(bad)
(bad)
nop
mov
jg
sbb
aad
lds
xlat
sbb
mov
mov
mov
mov
lea
ret
mov
popf
xor
(bad)
adc
jge
vphadduwq
clc
mov
ret
in
retf
xchg
adc
add
(bad)
sbb
(bad)
xchg
pop
add
mov
cdq
loopne
lock
sub
ds
les
push
inc
pusha
aam
cmp
repnz
mov
xlat
je
test
mov
sub
es
inc
pop
push
enter
daa
push
popa
aaa
mov
icebp
xchg
daa
or
ds
scas
and
dec
inc
ins
xor
mov
test
adc
je
xchg
or
gs
stc
inc
retf
in
cs
add
mov
mov
shl
lds
(bad)
jmp
mov
cmp
movs
ret
sub
call
push
imul
fwait
mov
popa
aam
push
or
mov
and
in
sbb
aam
(bad)
retf
imul
and
adc
add
(bad)
out
sbb
nop
inc
shr
xchg
out
popa
xchg
jmp
dec
mov
add
jg
rcr
jl
stos
mov
popf
push
pop
push
cmps
cmps
cmp
ins
sub
jbe
lahf
or
enter
mov
push
xchg
ret
stc
jle
sub
fcomp
pop
inc
sub
ja
movs
mov
nop
xchg
cmp
sub
jnp
jnp
cmp
pop
inc
shl
mov
cmp
out
arpl
push
or
mov
inc
imul
cwde
je
aaa
rcr
retf
loop
(bad)
push
ins
aad
ret
loope
or
std
or
push
loop
pop
mov
dec
cs
mov
js
shl
pushf
xor
xchg
and
xchg
sbb
dec
or
sar
xchg
xlat
pop
cld
xchg
mul
push
mov
add
ror
jge
sbb
cmp
inc
cmp
mov
or
cmc
mov
mov
neg
int3
shl
push
jnp
add
jecxz
xchg
scas
xor
data16
cwde
pushf
pop
std
mov
mov
retf
aas
repz
imul
mov
call
sbb
pop
out
ja
dec
addr16
add
data16
xchg
adc
enter
popf
jne
ds
xchg
or
inc
xchg
sbb
shl
(bad)
rcl
inc
jle
aam
sub
or
inc
ss
jmp
adc
shl
dec
xchg
sti
mov
dec
mov
sti
sub
jae
jns
xchg
cmp
(bad)
mov
cwde
scas
sub
xor
dec
popf
xchg
dec
frstpm(287
mov
jmp
cwde
test
retf
int3
sub
rcl
mov
jp
fdivrp
bound
movs
mov
clc
or
inc
pop
lahf
mov
scas
lods
leave
bound
jmp
xchg
imul
xchg
cmps
mov
push
movs
hlt
mov
xchg
xor
mov
ins
addr16
xor
sbb
inc
(bad)
(bad)
fmul
xchg
outs
in
cmp
jecxz
in
push
outs
inc
push
mov
push
sbb
push
mov
sbb
and
add
mov
and
push
cld
daa
inc
loop
adc
enter
or
aad
stos
fdivr
add
jle
lds
xchg
aam
loopne
clc
xor
pop
jl
xor
xlat
xor
jbe
cmp
jmp
dec
sub
hlt
push
ja
retf
adc
adc
push
mov
aaa
adc
inc
jp
jmp
pop
pop
jmp
leave
push
aad
or
stc
shl
cmps
or
or
mov
xor
adc
jbe
add
mov
stc
popf
and
test
mov
clc
lods
ror
push
scas
fs
and
cmp
mov
(bad)
shl
sub
or
inc
mov
adc
mov
mov
fabs
and
lods
push
retf
leave
jmp
pop
addr16
lahf
cmp
and
inc
pop
inc
pop
or
fwait
sub
arpl
jmp
mov
cmp
js
mov
inc
sub
mov
xor
ins
sbb
shl
aas
adc
inc
adc
jo
out
adc
jmp
cmps
shl
jno
in
std
cs
mov
mov
sahf
inc
movs
out
loope
sbb
sbb
mov
mov
repnz
mov
aam
sub
stos
adc
inc
pop
sahf
xchg
fwait
loope
mov
dec
and
jl
je
ror
push
jne
pop
jo
repz
sahf
scas
pop
jmp
sbb
and
sbb
sahf
mov
mov
cli
adc
mov
iret
rol
aam
xchg
add
(bad)
(bad)
out
xor
dec
iret
jmp
push
popa
dec
daa
lock
rcr
scas
xchg
leave
dec
shl
leave
mov
fsubrp
imul
mov
test
lea
ds
xchg
lock
xchg
ins
dec
mov
mov
jo
(bad)
jmp
jmp
adc
stc
add
xor
jno
pop
jae
jle
mov
aas
jmp
stc
pop
cmps
mov
popa
lahf
cmp
mov
inc
in
inc
lea
movs
in
rol
jl
cmp
lock
xchg
(bad)
mov
mov
push
sub
cs
test
rcr
or
pop
addr16
shr
lods
add
(bad)
jmp
fs
aad
icebp
les
ret
sbb
sub
sub
int
cwde
xchg
scas
popa
jmp
ror
add
stos
jmp
sbb
rol
movs
iret
rcl
mov
cld
hlt
mov
xor
test
pop
dec
xchg
sub
mov
dec
stos
add
inc
jge
(bad)
pop
xlat
aam
or
popa
ds
sub
jb
mov
mov
push
pop
fmulp
(bad)
pop
int3
push
mov
jmp
dec
aas
out
sahf
iret
cli
leave
das
pushf
rcr
pop
push
es
xchg
mov
sbb
inc
std
(bad)
dec
pop
push
test
xchg
or
je
call
shl
loope
add
mov
aaa
nop
es
js
(bad)
xchg
nop
inc
daa
mov
sub
mov
and
mov
mov
xor
or
xor
dec
lock
inc
pop
test
outs
lds
arpl
mov
xor
dec
or
out
sbb
mov
sub
loop
and
sbb
movs
push
cmp
fcom
adc
mov
xchg
jbe
xor
imul
std
mov
iret
lea
mov
das
cmp
stos
mov
and
mov
inc
movs
cli
push
add
fadd
xchg
sub
mov
ja
(bad)
adc
cmp
adc
dec
add
nop
ins
in
ins
cmp
out
rcl
outs
mov
out
stc
shl
addr16
or
pop
add
cmovg
and
jae
movs
cli
(bad)
das
imul
jno
loope
mov
add
sbb
inc
jae
and
imul
inc
mov
daa
cmps
xchg
test
out
and
test
gs
sub
(bad)
jmp
sbb
mul
mov
cwde
push
jmp
add
sub
test
mov
cmp
cld
sub
mov
sub
imul
pop
add
and
popa
arpl
fstp
cmps
out
test
enter
and
fimul
push
mov
adc
aad
jmp
pop
loopne
scas
jno
mov
mov
xchg
daa
push
mov
out
jg
push
stos
aaa
repnz
test
sub
test
inc
inc
shr
test
dec
cdq
push
pop
aam
jecxz
(bad)
shl
es
jnp
and
and
ror
dec
out
fiadd
(bad)
fisttp
aam
push
cmp
push
stos
cmps
adc
jo
inc
lods
pop
ror
popw
test
xchg
dec
aaa
ins
jecxz
mov
push
dec
cmps
pop
mov
or
xchg
xchg
mov
xor
stos
mov
xchg
loop
repnz
jle
aas
mov
push
fisub
mov
shl
movs
ja
mov
xchg
adc
mov
js
or
mov
aam
add
pop
shr
cld
mov
cs
jmp
popa
pop
(bad)
iret
pop
inc
add
outs
push
sbb
xlat
shr
lahf
add
xor
sti
or
xor
adc
jle
dec
or
fcom
xchg
push
mov
aam
inc
pop
pop
pusha
(bad)
xor
pusha
inc
rcr
stos
mov
aas
add
cwde
sar
rcl
repz
mov
mov
add
arpl
xchg
add
out
sar
fcom
add
data16
jb
cmp
jl
retf
out
sbb
add
cmp
mov
stos
test
xor
jo
jmp
mov
int
dec
sahf
mul
dec
sbb
sub
push
cli
push
mov
pop
xchg
fcmove
xchg
fimul
adc
hlt
icebp
jl
test
sub
dec
(bad)
inc
(bad)
movs
add
push
inc
retf
jae
(bad)
and
and
jne
xor
inc
mov
sub
data16
es
outs
push
lea
mov
cmp
mov
aaa
add
adc
sub
mov
mov
sbb
pop
adc
xor
inc
pop
mov
cmp
mov
leave
pop
ror
sub
add
icebp
mov
fistp
mov
pop
dec
(bad)
rol
imul
pop
push
mov
xchg
mov
and
data16
mov
and
push
cmc
mov
push
out
enter
pop
leave
sub
mov
adc
test
sub
pop
push
jle
rcr
mov
adc
jbe
or
push
loopne
mov
in
adc
outs
es
push
leave
cwde
loope
and
clc
mov
bndstx
cdq
stos
adc
mov
cmp
push
jns
je
mov
mov
stos
movs
stos
adc
enter
cmp
xchg
mov
mov
mov
loop
movs
push
sub
arpl
sub
xchg
mov
int3
mov
fisub
pop
add
adc
or
bnd
mov
jg
sub
popa
(bad)
dec
pop
lods
jno
stos
pop
repnz
test
dec
sub
sub
dec
sbb
loope
or
cli
mov
call
push
pop
dec
mov
push
xor
mov
mov
xchg
fisttp
dec
mov
leave
das
test
adc
or
mov
call
enter
sub
xchg
(bad)
xor
inc
mov
add
add
dec
cs
lock
cdq
dec
in
sub
mov
jl
pop
dec
daa
xchg
clc
(bad)
lock
dec
not
mov
adc
sbb
fdiv
sub
loop
or
mov
ds
jle
ja
sbb
sbb
jmp
sar
and
mov
jno
cmp
xor
inc
data16
push
or
out
ret
xchg
adc
xchg
imul
sub
jb
pop
mov
leave
imul
imul
stos
dec
push
xchg
and
fadd
pop
call
cmp
sbb
jo
ins
dec
pusha
in
inc
dec
mov
mov
jg
xchg
inc
xchg
push
es
push
leave
inc
adc
cdq
or
add
(bad)
int3
mov
call
dec
test
repz
call
shl
jnp
clc
push
push
icebp
cmp
push
call
retf
dec
cmps
(bad)
cmp
popa
in
pop
jmp
cli
movs
shl
lods
retf
sub
pop
jmp
adc
outs
xlat
sub
inc
ds
mov
inc
mov
cmps
mov
jmp
and
mov
fld
loope
test
add
pusha
(bad)
fld
ret
hlt
xchg
or
push
mov
mov
out
sahf
les
mov
mov
daa
shl
ss
sbb
pop
sahf
xchg
mov
leave
ret
add
push
loope
mov
pop
jmp
retf
sbb
dec
jno
pop
in
push
fstp
aas
xor
push
aad
jg
xchg
ss
mov
xor
xor
std
repz
(bad)
dec
sar
fidivr
dec
push
ds
push
mov
jbe
dec
js
mov
cs
and
jge
add
ins
in
xor
jmp
xchg
sub
inc
mov
cmps
loope
pop
inc
fs
pop
fisttp
cwde
push
cli
out
or
fst
mov
inc
mov
clc
dec
rcr
fldenv
fsubp
ret
stos
cld
mov
shl
call
outs
(bad)
pop
inc
xchg
cmc
sbb
jbe
inc
xlat
xor
jmp
retf
jb
test
ret
das
fstp
mov
fwait
test
movs
aaa
jne
jle
and
push
dec
mov
sub
add
mov
not
ret
popf
pop
sbb
mov
jb
mov
mov
adc
xor
cmp
movs
out
dec
aad
cmps
mov
sub
and
aam
ror
push
adc
add
(bad)
jg
adc
cmps
outs
popf
pop
mov
xchg
sbb
dec
mov
adc
das
mov
setns
jae
or
lods
jl
dec
dec
sbb
xor
dec
cmp
jbe
pop
xor
shl
inc
fisub
loopne
jb
js
fbld
aas
mov
inc
mov
jo
sti
shl
dec
cdq
jb
repz
hlt
mov
xchg
cdq
sar
jp
fadd
sti
jns
inc
lods
cmp
xchg
mov
test
xor
(bad)
icebp
fwait
out
aas
repnz
pop
sar
dec
popa
mov
(bad)
push
mov
repz
arpl
adc
aad
jo
mov
data16
(bad)
movs
push
(bad)
pop
xor
inc
sub
xchg
stos
retf
pop
ret
addr16
pop
dec
in
sahf
pop
push
std
out
inc
adc
xlat
cmc
push
xchg
test
jae
loop
rcr
or
cmp
mov
mov
xor
fwait
dec
leave
mov
ror
or
fsub
xchg
dec
jmp
push
dec
cli
int
pop
pop
mov
jp
in
mov
sahf
daa
push
mov
addr16
hlt
stos
int3
adc
jmp
inc
std
cmp
(bad)
cdq
sbb
and
lock
retf
cmps
fdivr
pop
sbb
mov
dec
rcr
retf
push
xchg
stc
sahf
out
dec
mov
ins
aaa
out
retf
mov
and
push
jnp
lahf
xchg
sub
fdivr
ss
inc
test
imul
not
call
adc
into
jne
mov
movs
leave
adc
(bad)
mov
and
imul
mov
adc
ds
lods
cmp
mov
xor
(bad)
xchg
add
sbb
push
mov
les
cmp
cmp
cmp
and
js
in
and
es
mov
pop
cmps
push
lea
xor
and
jnp
sbb
movs
sbb
ins
and
(bad)
fld
aam
hlt
cld
sbb
jp
retf
jp
lahf
mov
sbb
rcl
in
cmp
cmp
push
in
ret
in
add
hlt
pop
popa
mov
push
sbb
outs
mov
mov
pop
sbb
inc
sub
and
ficomp
adc
test
pop
inc
(bad)
cmp
sub
pop
or
into
cs
daa
sbb
pop
adc
test
add
adc
cld
fld
push
jp
das
fidivr
jl
adc
call
dec
in
fs
xchg
sahf
fsubr
test
lock
adc
mov
pop
fcmove
pop
and
(bad)
rcl
iret
xchg
daa
ins
push
ins
in
or
xchg
cdq
clc
repz
sub
jns
add
jge
xchg
inc
mov
dec
int3
jae
mov
ud2
mov
lds
dec
push
pop
in
or
ins
movs
dec
inc
add
push
jge
es
mov
(bad)
aas
pop
push
xchg
(bad)
inc
xchg
call
fist
scas
arpl
or
je
mov
pop
add
add
push
movs
pop
mov
xchg
mov
xor
(bad)
add
iret
cmps
call
push
fwait
imul
jecxz
retf
fisttp
sahf
cmp
cmp
addr16
jnp
mov
pop
jg
mov
sub
or
jmp
outs
ficom
sti
fisttp
xor
stos
mov
jo
dec
shl
push
mov
pop
sbb
mov
sub
jl
pop
push
stos
fistp
sbb
sahf
cmp
pop
ins
sahf
xor
mov
imul
push
pop
or
enter
adc
cld
mov
push
aaa
pop
mov
stos
push
cmp
stos
pop
cdq
ins
out
cmps
cld
sub
sbb
outs
jb
mov
loope
or
jmp
jmp
cmp
jnp
and
push
bound
cmps
or
fist
loopne
in
xchg
push
inc
aas
pop
int3
sub
enter
pop
xor
mov
pop
jg
fdiv
test
dec
je
repnz
or
sub
bound
rcl
out
enter
pop
and
inc
stc
push
(bad)
mov
jne
cmps
sub
mov
cmp
aad
cmp
out
in
and
scas
mov
cmp
scas
push
and
fadd
stc
outs
xchg
mov
scas
push
dec
leave
fadd
cmc
mov
(bad)
aas
mov
test
adc
cmp
call
out
jmp
lock
enter
sti
mov
rcr
jbe
jne
xchg
out
mov
out
or
retf
sbb
dec
das
outs
mov
xor
and
aam
push
fidivr
(bad)
mov
(bad)
arpl
xchg
dec
cmps
mov
adc
fdiv
cmp
adc
jge
jmp
mov
xchg
je
shl
xchg
sub
stos
dec
mov
dec
pop
xchg
cld
mov
cmc
iret
xchg
jb
stos
adc
xchg
dec
push
sti
lock
push
or
imul
push
arpl
pusha
sub
rcr
add
aam
sahf
pop
jle
mov
xor
(bad)
aas
mov
je
movs
inc
dec
inc
cli
dec
dec
mov
test
mov
ret
and
push
sbb
fwait
mov
repz
push
pop
loop
in
xor
scas
xchg
and
clc
jg
test
pop
gs
push
pop
test
and
inc
int3
or
mov
lahf
mov
pop
popa
(bad)
adc
pop
push
jmp
sub
push
dec
jmp
pop
inc
and
stos
sbb
mov
xchg
add
popa
add
inc
ror
test
inc
sub
xchg
dec
sbb
push
xchg
mov
mov
arpl
lock
icebp
ret
sub
imul
mov
inc
call
inc
ins
xor
ret
mov
int
and
mov
lods
cmps
out
ins
dec
rcr
nop
ror
pop
ja
jp
jne
xchg
xchg
add
mov
cwde
pusha
imul
movs
xor
lds
sbb
ins
jns
movs
cdq
dec
cs
inc
cmp
cld
and
and
inc
jbe
push
sbb
test
xchg
push
sub
fwait
sbb
ret
cmp
cmp
outs
mov
inc
imul
aaa
sub
in
nop
mov
mov
sbb
inc
xor
mov
ret
lods
arpl
push
lock
lock
or
aaa
fmul
mov
mov
jmp
xchg
push
push
std
adc
mov
hlt
out
in
xor
cmp
jmp
pop
pop
push
pop
dec
jbe
inc
push
je
stos
mov
sar
pushf
lock
lea
rcl
dec
mov
ds
pushf
movs
retf
(bad)
pop
jg
std
jmp
and
movs
pop
cli
jne
cmp
loop
or
mov
mov
mov
lock
dec
mov
mov
pusha
add
add
ss
ret
jnp
aaa
adc
push
pop
cmp
mov
fisubr
sbb
push
test
and
cmp
lods
jle
(bad)
or
pop
dec
xchg
xor
sbb
in
push
(bad)
repz
nop
stos
jmp
push
ins
jb
sub
xchg
adc
ror
ror
mov
push
gs
shl
imul
icebp
sbb
loope
gs
int
dec
fsubr
sub
ret
repz
cwde
mov
and
jnp
outs
sahf
dec
ins
(bad)
call
adc
retf
fdivr
pop
or
xor
cld
arpl
sbb
jle
pop
add
pop
jns
and
pop
xor
sbb
retf
test
mov
(bad)
adc
jb
pop
push
add
dec
mov
xchg
and
mov
mov
push
mov
ret
sahf
cmps
stc
inc
push
push
mov
fs
mov
test
mov
or
push
cmp
test
adc
(bad)
add
push
enter
mov
fisub
adc
sub
js
add
xchg
gs
jp
jae
add
jmp
sbb
aas
add
aas
test
ror
fwait
call
xchg
sbb
in
push
scas
data16
push
sbb
inc
in
lock
retf
pop
fxch
test
mov
adc
inc
(bad)
imul
int3
sbb
add
xlat
cli
push
inc
dec
gs
mov
bound
aaa
outs
ja
and
call
imul
adc
fldl2e
xlat
dec
adc
xchg
out
add
in
mov
push
push
rol
lods
inc
pop
add
dec
and
add
push
xor
adc
scas
stos
jb
jp
xchg
or
xchg
fisub
xchg
repz
xor
stos
ror
fidiv
lods
mov
loop
mov
jmp
or
dec
mov
xor
ret
mov
mov
dec
jne
ja
cld
in
fisubr
repz
lahf
mov
ins
mov
(bad)
rcl
sbb
das
push
xor
(bad)
sar
fs
daa
jg
pushf
add
lea
push
inc
in
mov
fwait
ss
inc
pop
ficom
cmc
jne
sub
repz
cld
scas
mov
test
dec
jmp
add
jl
ins
retf
pop
addr16
push
add
or
pusha
sub
and
std
imul
sub
lea
fidivr
push
dec
loop
imul
lods
mov
gs
sub
pop
fwait
call
jecxz
repz
not
sub
scas
mov
retf
hlt
lea
xor
mov
adc
gs
sub
mov
jne
jmp
test
out
test
(bad)
xor
in
mov
mov
in
mov
sbb
aaa
mov
adc
cmps
js
mov
dec
fcmovnu
mov
cmp
shl
(bad)
int
mov
lods
dec
xchg
scas
mov
cs
test
or
icebp
outs
scas
cmp
es
inc
jmp
cmp
jl
mov
fs
pop
mov
dec
xchg
xor
cli
mov
nop
xor
mul
call
leave
ss
pop
jg
xor
mov
push
(bad)
aas
aas
(bad)
(bad)
sub
div
mov
push
push
dec
mov
add
scas
fisubr
sub
js
test
lea
movs
aam
jns
add
mov
push
xchg
pushf
jo
add
cmp
popf
jno
nop
stc
cmc
lahf
inc
fimul
mov
mov
in
inc
inc
ds
and
mov
retf
pushf
dec
pop
(bad)
dec
pop
sbb
xor
and
mov
sti
sbb
and
jp
or
aaa
inc
test
hlt
mov
out
inc
int
or
fimul
fs
clc
jnp
mov
mov
jge
pop
out
pop
xor
sub
adc
in
repz
mov
jmp
fcomp
pop
fprem1
lea
mov
bound
xchg
cdq
inc
or
out
inc
jge
xchg
pop
dec
inc
daa
sub
xor
fwait
sbb
and
or
xor
outs
cmovle
and
popa
adc
ins
inc
push
mov
adc
dec
mov
fst
mov
cld
or
ins
call
xchg
jp
xor
aas
pop
enter
inc
lods
shr
(bad)
idiv
ds
vcvtpd2dq
and
lds
mov
push
and
leave
sub
dec
dec
cmps
add
add
fs
xlat
sub
or
les
nop
test
(bad)
cmp
mov
ret
push
sahf
sub
movs
mov
gs
mov
inc
mov
jmp
mov
jo
xchg
cld
lods
mov
fcomp
inc
lods
aaa
aas
call
mov
cmp
mov
repnz
retf
jecxz
jo
(bad)
adc
adc
adc
sete
cmps
sbb
call
dec
nop
ror
and
mov
and
jns
push
call
data16
xor
adc
mov
outs
pop
test
inc
push
int3
mov
sbb
xor
cdq
and
bound
cdq
pop
das
retf
jmp
jne
cwde
mov
in
xlat
pop
test
cmp
sub
shl
push
xchg
cmp
jae
cmp
dec
mov
mov
leave
es
sar
and
sbb
dec
jle
fdivr
mov
push
arpl
lea
mov
push
int3
sbb
add
je
push
cmp
push
ret
pop
outs
or
jbe
addr16
jbe
ins
(bad)
(bad)
dec
stos
xchg
adc
int3
xchg
lea
push
add
ror
mov
xor
repz
mov
les
push
pop
add
push
push
je
adc
out
jmp
xchg
outs
(bad)
and
fist
add
lds
or
sbb
inc
test
jecxz
sub
xchg
push
lock
mov
push
push
jbe
jae
scas
cmp
cwde
les
neg
aas
jnp
sti
cld
jmp
dec
mov
xchg
fwait
mov
xchg
test
test
dec
out
cmp
into
test
cmps
test
push
lods
mov
adc
test
push
imul
or
mov
jne
mov
lods
jmp
loop
jae
inc
cmps
retf
push
out
ror
inc
mov
in
sbb
outs
fistp
call
test
in
dec
cmp
ds
stos
out
mov
cmps
shl
sbb
arpl
add
or
out
adc
push
dec
test
mov
frstor
fisubr
movs
adc
scas
mov
jg
mov
cmp
not
and
(bad)
loop
pop
cmp
sbb
mov
mov
mov
retf
imul
pusha
dec
shr
(bad)
add
sub
mov
ret
xchg
push
in
test
out
mov
(bad)
inc
mov
jge
jne
pop
xchg
fwait
push
mov
out
stc
xchg
stos
xchg
pusha
aad
and
mov
inc
sbb
mov
fist
ins
dec
cs
push
imul
xchg
xchg
or
test
std
add
test
jnp
mov
test
outs
mov
or
call
sahf
loopne
lock
arpl
adc
mov
xchg
call
cmp
pop
xchg
shl
repz
ins
xchg
sbb
pop
std
sub
jl
xor
mov
(bad)
into
int3
mov
sbb
xchg
cmp
or
test
into
movs
rol
cs
mov
mov
sub
mov
or
or
pop
aam
or
mov
popa
cmp
into
daa
jle
jmp
mov
push
xchg
push
adc
cwde
pop
cmc
cdq
out
adc
mov
retf
push
scas
adc
mov
hlt
push
ret
or
and
add
scas
sbb
cmp
mov
icebp
push
dec
aaa
shr
ror
in
pop
mov
mov
in
aad
jmp
stos
xchg
jmp
dec
nop
mov
aas
mov
inc
adc
inc
ins
jg
sbb
in
adc
adc
push
repz
lea
adc
adc
shr
aam
sub
jmp
fdivr
in
mov
cmp
imul
and
iret
push
push
add
pop
and
mov
sub
xchg
mov
mov
(bad)
push
push
jbe
dec
xchg
xor
jb
cmp
(bad)
pop
retf
lods
sahf
add
adc
shl
and
mov
mov
cdq
and
jae
xchg
push
inc
call
gs
xor
mov
out
and
add
sub
scas
xchg
sub
ja
mov
pushf
mov
std
popf
ror
sbb
or
xlat
push
(bad)
fcom
push
and
and
mov
xchg
pop
imul
sti
xor
fucom
sbb
jmp
ds
lahf
sbb
and
(bad)
jecxz
inc
in
in
aaa
pop
xchg
ret
xor
dec
add
(bad)
out
pop
mov
push
pop
push
push
lds
sbb
or
repnz
and
test
gs
xchg
(bad)
xchg
and
js
jg
loopne
xchg
xlat
cwde
out
ds
mov
push
xor
and
jp
lds
es
ror
or
cs
xchg
cmps
pop
nop
jnp
nop
int3
and
in
inc
inc
mov
xor
cmp
adc
in
pop
sbb
aas
loop
xchg
sub
mov
daa
icebp
clc
sahf
in
sbb
les
pop
cmp
mov
retf
mov
or
xchg
sub
data16
pop
inc
sti
xor
jp
inc
push
dec
xchg
scas
xchg
push
jmp
push
jbe
imul
inc
out
xlat
mov
jo
call
xor
jnp
or
mov
in
jg
mov
call
popf
push
cmp
pop
int3
xchg
ret
(bad)
std
stos
sub
call
ret
mov
xor
ins
or
push
mov
cs
xlat
pop
sahf
xor
fadd
fsub
rcr
loope
dec
pop
jmp
fisubr
sub
mov
neg
push
mov
jbe
xchg
aam
pop
stos
mov
pusha
inc
inc
jmp
int
jmp
fcom
mov
bound
push
test
xchg
in
dec
cmp
and
and
das
push
jmp
out
sbb
and
dec
cmps
fild
jmp
push
sub
(bad)
or
push
ret
les
cwde
sbb
movs
std
dec
xchg
lock
or
les
clc
rsm
adc
xor
jne
clc
xor
fist
pop
(bad)
rcl
clc
cmp
jmp
add
dec
jle
cld
frndint
mov
inc
push
(bad)
push
pop
jne
push
cli
loope
xor
sbb
rol
dec
mov
xor
inc
jno
mov
lea
jnp
add
sbb
dec
xchg
dec
lds
cdq
in
pslld
in
dec
outs
jmp
jg
cmp
cmp
dec
div
sbb
sub
sbb
mov
lock
rcl
cmp
test
push
pop
adc
push
cli
lea
jg
cmp
push
scas
xchg
and
lock
lock
jne
fiadd
ins
sub
adc
popa
sti
jecxz
enter
xor
mov
std
adc
mov
xor
jnp
add
xchg
les
clc
nop
out
push
inc
adc
(bad)
pop
sahf
pop
pop
dec
xchg
call
test
fidivr
mov
frstor
xchg
push
rol
out
sbb
aad
(bad)
popf
pop
test
jecxz
sub
ss
aas
repnz
xor
pop
jge
jmp
cmps
(bad)
ficom
cdq
rcr
add
stc
ja
imul
movs
push
cwde
sbb
and
mov
sub
push
lock
in
out
fwait
and
cwde
rol
sbb
sbb
nop
cmps
(bad)
push
mov
shl
cdq
shl
test
pushf
movs
stos
jmp
mov
push
mov
outs
je
and
fst
lahf
scas
std
test
call
into
(bad)
push
(bad)
push
and
mov
xor
and
pop
int3
mov
push
inc
icebp
push
add
jns
addr16
outs
retf
fld
sub
mov
inc
mov
inc
cli
cs
test
nop
xor
sbb
and
pop
cmc
pop
mov
mov
inc
out
jae
mov
hlt
mov
lahf
pop
in
dec
rcl
add
stc
cmp
inc
arpl
and
shl
div
stc
add
sbb
in
mov
ror
pop
gs
lock
lods
arpl
rcl
inc
xor
lods
out
or
fcmovne
sbb
pop
pop
(bad)
cmps
clc
(bad)
(bad)
stos
jl
push
cmp
xor
mov
mov
cmps
dec
push
mov
mov
add
dec
push
ss
test
push
out
dec
adc
mov
aaa
jns
jbe
js
mov
outs
(bad)
adc
test
jp
into
call
cmp
inc
test
pop
push
(bad)
inc
mov
enter
jb
and
xor
fsub
inc
add
stc
iret
pop
daa
fbld
iret
rcl
cmp
(bad)
lods
adc
das
push
mov
mov
fild
sar
mov
or
add
cmc
lahf
(bad)
xchg
(bad)
ror
xchg
mov
sub
repnz
lahf
dec
jbe
adc
fs
sbb
jns
mov
fwait
push
arpl
rcl
sti
add
in
scas
push
mov
out
call
xchg
xor
std
(bad)
push
dec
dec
push
or
jp
push
cmp
mov
hlt
mov
lahf
sub
jmp
cwde
adc
(bad)
mov
mov
pop
jl
pop
outs
jl
scas
add
push
fisubr
adc
iret
imul
(bad)
in
fiadd
mov
aas
or
cli
enter
adc
inc
in
popa
or
mov
pop
and
mov
outs
es
test
pushf
addr16
repz
xchg
adc
fst
gs
(bad)
imul
add
inc
lods
adc
mov
fdivp
out
data16
cmp
add
jmp
sbb
jmp
popf
popa
out
inc
add
jne
shr
inc
enter
mov
hlt
das
xchg
mov
sub
pop
adc
test
pop
sbb
add
jns
mov
rcl
xchg
popa
xor
lea
sub
adc
sti
sub
xchg
pop
stos
imul
addr16
pop
push
mov
and
in
movs
js
lock
mov
pop
sub
int
push
jns
in
inc
push
push
jbe
inc
mov
or
dec
retf
into
popf
out
cmp
and
jno
pop
stc
sti
aas
outs
jmp
dec
pop
dec
inc
out
out
jmp
aad
inc
loope
xchg
scas
add
cs
inc
and
jle
push
pop
add
les
add
pop
inc
out
cmp
or
ficom
lods
in
test
sbb
pop
movs
ror
in
lea
push
pop
into
sbb
xchg
neg
enter
fs
jo
cwde
mov
stos
loope
mov
mov
mov
std
push
stos
enter
mov
pop
ins
xor
jecxz
or
or
cmp
fs
cdq
dec
adc
test
sub
les
xchg
sub
nop
rcr
mov
and
sub
call
xor
xchg
ja
repnz
pop
cmps
sub
adc
aad
es
mov
mov
adc
xchg
xor
dec
cmps
std
out
bnd
jae
shl
ins
inc
push
retf
in
and
and
mov
xchg
and
call
mov
dec
push
jb
adc
adc
inc
xor
addr16
nop
lock
jb
jmp
push
cs
sbb
inc
mov
add
cmp
cmp
pop
jbe
inc
push
inc
mov
jp
sub
sbb
sbb
pop
clc
and
fadd
sbb
cmps
in
cli
mov
(bad)
scas
xor
fld
mov
lock
mov
lahf
ds
mov
sub
cmc
scas
adc
xchg
sub
fucomi
out
in
cli
cli
xchg
push
push
lahf
test
xchg
lahf
and
push
test
sbb
sbb
popf
bnd
gs
pushw
outs
push
inc
gs
movs
cmc
sbb
cwde
mov
or
cmp
sub
cdq
push
cli
pop
(bad)
loope
out
mov
das
in
mov
or
aas
inc
repz
aad
add
out
xchg
sahf
fs
dec
in
aad
ins
or
test
es
adc
add
fs
push
cmp
adc
jbe
jmp
movs
or
push
das
inc
mov
jb
ret
enter
jnp
ret
cwde
clc
and
dec
daa
add
jecxz
mov
mov
mov
stos
add
and
test
mov
rcl
mov
imul
inc
leave
sub
mov
or
(bad)
jecxz
xchg
push
or
sub
adc
or
(bad)
mov
fst
(bad)
ss
mov
(bad)
mov
jge
(bad)
into
mov
in
jbe
ret
in
dec
pop
rol
or
xor
lods
and
rcl
imul
das
and
adc
xchg
fmul
(bad)
mov
inc
scas
dec
mov
push
inc
push
push
xor
frstor
or
retf
dec
fucomip
push
push
inc
jbe
jg
jp
sahf
shl
cmp
(bad)
in
shl
out
xor
cs
mov
dec
movs
push
nop
sub
sub
fist
not
push
enter
ret
or
enter
std
adc
pushf
pop
call
pop
mov
(bad)
inc
hlt
dec
dec
call
icebp
jg
xchg
cmp
mov
xchg
jno
inc
xchg
mov
mov
bound
add
jo
sahf
clc
cwde
out
das
clc
pop
es
scas
mov
xor
popf
dec
inc
out
data16
stos
ins
ins
jne
sub
jno
jmp
cmp
adc
loop
rol
cmps
aas
loopne
arpl
xchg
ins
xchg
stc
fwait
pop
shl
or
lahf
imul
aas
cmp
leave
loope
xchg
neg
not
mov
cmp
popf
cmp
enter
test
jmp
xor
scas
sbb
add
jo
push
addr16
mov
call
xor
mov
pop
mov
mov
pop
and
ins
adc
lea
xlat
out
dec
cmp
adc
in
inc
jno
call
mov
add
aas
mov
jp
mov
and
mov
and
or
out
call
mov
push
pusha
popa
(bad)
fidivr
pop
xor
es
and
(bad)
and
push
jp
scas
adc
cs
inc
or
add
stc
mov
loopne
jmp
push
jno
add
icebp
cmp
jle
dec
rcr
push
scas
xor
in
cli
cwde
aaa
mov
pop
mov
and
adc
icebp
or
(bad)
shl
xchg
add
jns
stos
mov
cmp
nop
sbb
add
cdq
fld
int3
xor
div
sar
call
jg
dec
std
adc
lods
adc
cdq
sub
mov
mov
mov
dec
push
mov
adc
push
aaa
xor
inc
jmp
ds
std
ja
fs
cmp
jns
cmp
arpl
fstp
nop
xor
mov
ins
pop
in
xchg
jmp
add
or
stos
loop
jbe
add
iret
adc
daa
dec
les
psubd
inc
ja
mov
mov
push
cmp
mov
cmp
pop
pop
icebp
jle
mov
cmp
out
add
dec
cmps
sub
popa
jmp
lods
test
mov
push
out
jns
jb
dec
and
in
xlat
out
jb
xor
mov
sub
and
test
lock
ret
sbb
pslld
push
retf
mov
bound
pop
cmp
ins
mov
push
je
iret
sbb
out
ja
popf
cmp
leave
mov
adc
add
movs
push
mov
cmps
movs
jge
sub
ret
loopne
push
out
nop
jmp
or
and
ds
inc
jae
mov
sbb
xchg
sub
ret
imul
in
cmp
mov
mov
sub
in
pushf
cs
rcl
out
call
xchg
(bad)
je
mov
pop
sub
mov
inc
retf
jl
int3
mov
push
dec
sti
adc
ins
mov
add
dec
ficom
pop
shl
pushf
movs
mov
and
lds
mov
dec
fxch
movs
sub
mov
mov
daa
add
mov
jle
iret
add
ds
jg
popf
mov
lods
imul
mov
mov
in
cmp
dec
mov
es
(bad)
pushf
icebp
call
ins
jge
mov
daa
shr
inc
test
push
jge
mov
sbb
(bad)
fwait
loop
and
es
mov
adc
dec
es
jecxz
ret
stos
dec
(bad)
popf
stc
xchg
adc
enter
jle
sbb
xor
(bad)
js
fwait
push
ret
push
popf
cmp
hlt
inc
scas
pop
retf
(bad)
retf
cli
stos
adc
inc
cli
sub
push
pop
fst
jmp
cmp
jb
jns
xor
fbld
push
lods
xchg
cmp
xchg
imul
push
rcr
and
(bad)
lock
inc
inc
movs
xchg
js
mov
pop
sub
jnp
cmp
loope
mov
pop
push
cwde
or
pop
add
fwait
(bad)
nop
sbb
(bad)
sub
mov
ret
xor
and
xchg
movs
pop
jns
inc
stos
or
jb
xchg
sbb
or
push
mov
pop
sub
idiv
dec
mov
fs
jb
adc
xchg
xor
mov
xor
pop
xchg
inc
sub
dec
xchg
test
mov
mov
dec
fnstsw
inc
and
xlat
not
idiv
lea
add
mov
mov
adc
or
cli
xor
adc
not
or
and
data16
cmp
jbe
add
inc
or
sbb
mov
rol
sub
inc
mov
inc
jo
ret
mov
cmps
xchg
test
push
push
movsx
and
xor
es
jp
jns
dec
mov
gs
das
fnsave
push
xchg
jb
(bad)
aaa
xchg
jge
push
xor
fild
ret
push
jp
mov
pop
mov
popa
mov
or
pop
jl
xchg
loopne
adc
cmps
xor
or
pop
dec
lods
pop
xchg
sbb
shr
push
adc
or
imul
js
int3
shr
ret
stc
jp
sti
cwde
dec
dec
fidiv
xor
loop
xchg
fbld
(bad)
xor
or
sub
mov
out
das
cmp
es
ret
sbb
sub
cli
or
les
test
icebp
xor
(bad)
call
add
sub
jbe
(bad)
fs
push
jo
jno
clc
sub
dec
outs
popa
js
pop
ret
das
xchg
rcr
aas
repz
jle
push
sub
xlat
daa
xchg
cs
test
std
into
shl
adc
inc
fsub
and
mov
ret
fnsave
adc
sub
mov
lods
imul
jle
push
lods
loop
movs
add
les
push
aas
inc
cmp
cwde
shr
and
cmp
sti
xor
test
ds
mov
push
mov
adc
pop
add
shr
ror
xchg
stos
push
test
mov
sbb
pop
xor
cmp
lods
lea
push
sbb
out
pusha
adc
outs
sbb
and
sbb
and
cwde
jne
mov
into
inc
cmp
cmp
or
mov
mov
imul
out
push
data16
add
and
in
pop
out
(bad)
cmc
add
jmp
lea
repz
xor
dec
repz
sub
ret
xchg
cs
push
xchg
inc
sar
hlt
or
mov
movs
sub
jbe
push
inc
mov
cmp
dec
lahf
out
sub
xchg
jecxz
or
xchg
adc
imul
out
add
cli
inc
test
scas
pusha
cmp
mov
xchg
(bad)
pop
out
adc
psubb
mov
lods
enter
retf
imul
dec
push
adc
or
into
jae
mov
cmp
pop
fwait
or
test
sahf
xor
cld
and
jns
adc
mov
dec
add
and
std
pop
outs
mov
jnp
movs
js
test
sbb
adc
mov
mov
sbb
mov
das
rol
sar
mov
jecxz
(bad)
int3
fidivr
mov
cmp
or
scas
(bad)
in
mov
mov
(bad)
xlat
std
inc
fld
mov
or
loope
mov
leave
xor
daa
inc
mov
test
sbb
aaa
mov
push
xchg
test
mov
push
cmp
dec
cmp
fsub
inc
jnp
das
mov
dec
mov
and
add
(bad)
std
xchg
jb
es
das
nop
push
jae
jle
aad
xor
shr
cmp
jecxz
cmp
popf
mov
leave
hlt
cld
je
cmc
dec
sub
xchg
xor
pop
mov
dec
mov
sub
or
pop
push
pop
movs
xor
add
arpl
daa
fsubr
xchg
daa
arpl
ret
das
mov
mov
sbb
shr
and
xor
data16
out
(bad)
nop
and
mov
jno
sahf
test
ret
jne
adc
mov
or
sub
xchg
jns
pop
sub
add
retf
jne
cmp
nop
into
retf
mov
mov
jmp
bound
push
data16
cmp
(bad)
aas
push
pop
sub
ror
mov
dec
inc
sub
fistp
ins
pop
lea
inc
push
inc
inc
(bad)
int3
pop
adc
pop
xchg
mov
hlt
dec
pop
mov
aad
es
and
xor
or
cmp
(bad)
push
ins
inc
mov
xor
pop
xchg
(bad)
add
push
inc
ror
sub
test
mov
jmp
push
out
call
push
xchg
mov
cmp
mov
std
push
leave
adc
bound
mov
cs
addr16
pop
pop
shr
mov
mov
pop
sti
cmp
sbb
data16
jne
dec
push
call
es
jo
les
inc
fidiv
mov
add
sbb
(bad)
cmp
popf
pop
push
(bad)
cmp
push
out
mov
xchg
or
ret
mov
mov
push
fadd
rol
jnp
push
jg
mov
lods
stos
inc
test
shl
cmp
push
or
mov
sub
or
ja
sbb
add
enter
mov
xchg
(bad)
xor
pusha
lods
jo
(bad)
mov
xor
sbb
jge
pop
loopne
call
pop
xchg
xlat
mov
or
or
xchg
or
inc
and
das
repz
mov
sbb
push
data16
mov
pop
div
pop
cmp
push
xchg
push
cmc
fisttp
std
add
and
mov
ret
stos
inc
cmovb
loop
add
mov
sbb
mov
aaa
movs
popf
ror
add
(bad)
repnz
(bad)
jmp
stos
mov
sahf
push
or
loop
mov
js
mov
js
or
es
ds
mov
inc
xchg
mov
push
cmps
fld
fist
repz
dec
pop
std
lahf
cmps
cs
sbb
sbb
fwait
mov
add
jne
mov
in
sbb
fidivr
out
lea
mov
jp
call
stos
mov
sbb
jne
mov
test
dec
pop
std
jns
cmc
dec
dec
mov
(bad)
sub
cmp
and
ret
lds
clc
sbb
adc
mov
xchg
call
aas
adc
imul
or
cmc
or
mov
rcl
outs
push
cmps
dec
jmp
cmps
loopne
stos
repz
imul
movs
push
cdq
cmp
in
iret
fdivr
fild
(bad)
xor
jmp
nop
je
push
and
call
xor
js
mov
fsubr
pop
mov
fmul
addr16
sub
(bad)
(bad)
mov
add
and
jae
xor
mov
dec
loopne
daa
fs
arpl
in
in
mov
in
mov
and
mov
jno
dec
int
xor
out
inc
mov
mov
ret
sbb
in
dec
bound
add
push
loop
das
push
iret
xor
and
leave
mov
xchg
imul
iret
sar
cmps
cwde
popa
and
mov
jmp
ins
hlt
jge
sbb
scas
add
inc
enter
fdivr
pop
cmp
shr
xchg
or
popa
popa
and
in
push
mov
popf
sbb
loop
rcr
xor
xor
fdivr
dec
mov
lahf
int
in
and
call
ss
cs
retf
stos
bound
push
adc
pop
adc
scas
lods
sbb
aaa
add
add
and
pop
mov
sbb
mov
call
cdq
leave
test
icebp
neg
fcomp
dec
call
fadd
imul
mov
(bad)
sbb
cmp
adc
fwait
sbb
jp
test
popf
ins
sbb
sbb
xadd
inc
and
push
loopne
or
aam
inc
pcmpgtb
aam
inc
ret
push
dec
cdq
xchg
retf
call
sbb
xchg
mov
xchg
jmp
jo
mov
ret
les
push
pop
std
fwait
dec
cmc
adc
shl
sub
dec
xchg
scas
push
or
mov
jl
mov
cmps
cld
test
in
loope
rcr
cmp
mov
gs
dec
out
sbb
dec
ficom
fwait
neg
dec
jbe
outs
push
sub
and
into
lds
mov
stos
imul
ficom
repz
dec
in
loop
and
test
pop
dec
inc
cmp
mov
sbb
xchg
inc
out
mov
jb
dec
mov
jmp
add
cwde
test
push
rcr
pop
jmp
xor
test
add
sub
jnp
push
jmp
enter
jo
mov
xor
outs
and
sahf
jbe
psadbw
xlat
push
or
jae
out
dec
fist
das
inc
stos
test
push
ss
jne
and
sbb
mov
sbb
iret
pop
aam
cmp
popf
mov
or
sbb
retf
neg
add
xchg
pandn
sbb
ja
cmc
jl
cmps
push
mul
call
outs
ss
scas
arpl
loop
cmp
fisttp
scas
add
test
xchg
jno
add
movs
test
or
in
cmp
cmp
jnp
lds
fmul
xchg
cmp
ret
imul
xchg
shr
push
jp
jp
and
jge
or
fsubrp
xchg
fs
cmp
enter
int
dec
sub
sysexit
xchg
jnp
jge
mov
loope
jno
add
push
pop
je
subps
dec
cmp
xlat
pop
jl
mov
dec
arpl
sub
push
(bad)
jg
sub
inc
add
sub
cld
mov
mov
icebp
cmp
jo
push
jae
call
repz
(bad)
cmps
(bad)
cmps
cmp
pop
dec
leave
and
add
ret
mov
stos
(bad)
jbe
cmc
arpl
push
adc
jno
mov
in
jb
shl
sub
or
js
xor
test
fild
xchg
mov
xor
push
or
inc
mov
sub
aas
aam
movq
adc
leave
bound
aam
mov
sbb
pusha
mov
add
stos
push
lock
rol
jmp
jecxz
imul
stos
int3
jne
jmp
lods
cmp
aas
push
xchg
movs
fdiv
sub
mov
jp
call
cmp
pop
fidivr
adc
fld
jp
ins
add
mov
xor
lods
xchg
mov
inc
pop
push
pop
mov
pop
xchg
ins
stos
ins
scas
scas
nop
or
loopne
repz
jne
fld
jbe
leave
ficom
jecxz
dec
fldcw
mov
add
popf
jmp
add
imul
aam
add
cmp
repnz
scas
jmp
loopne
cmp
jg
ss
movs
fcom
cmc
push
jae
aam
sahf
shl
sub
imul
adc
dec
pop
mov
jbe
and
stos
bound
jns
cli
mov
jmp
ins
leave
pop
stos
dec
xchg
mov
ss
mov
pusha
or
arpl
pop
popa
call
(bad)
adc
fisubr
mov
jmp
and
retf
adc
(bad)
(bad)
sub
pop
fidivr
sbb
mov
push
scas
mov
sub
rol
fstp
sbb
jnp
sub
cmp
pop
push
sahf
lea
and
push
rcl
out
pop
push
mov
adc
xor
and
mov
mov
push
test
push
adc
sti
ins
into
jne
xor
fidivr
and
push
aam
dec
scas
mul
jmp
fimul
(bad)
sti
and
inc
push
and
push
xchg
leave
bound
ds
mov
sub
jbe
in
in
xchg
clc
xchg
sbb
sub
sar
dec
jne
stos
mov
adc
jl
ja
push
mov
mov
cmp
inc
fadd
out
sub
xor
popa
add
jg
int
xchg
jmp
mov
cwde
(bad)
jl
mov
sbb
or
xlat
loop
jb
inc
xor
adc
neg
or
fmul
or
cmovno
test
and
or
jb
dec
lsl
cmp
in
inc
pop
push
jle
inc
xor
dec
test
pop
cdq
dec
push
pop
pop
daa
dec
fnsave
adc
sar
cwde
aam
jno
stc
adc
jecxz
(bad)
push
call
pop
cdq
jmp
sti
pushf
ret
and
mov
cmps
inc
mov
jnp
aaa
xor
shl
scas
push
cmps
rcl
pop
(bad)
mov
push
lea
sbb
push
les
les
aam
inc
add
imul
das
sub
and
jmp
inc
(bad)
fisub
aam
jb
jmp
jg
jo
fimul
sub
sub
pop
xor
mov
mov
jg
clc
inc
or
(bad)
pop
inc
lods
push
scas
les
ins
mov
sub
movs
in
and
mov
dec
aad
jns
mov
cmp
sbb
outs
jl
inc
dec
cld
movs
imul
mov
into
xchg
inc
xchg
jno
mov
sbb
dec
add
mov
inc
cli
xchg
push
mov
mov
ficomp
or
fs
call
cmc
mov
sub
xor
sub
outs
sbb
mov
push
jns
(bad)
addr16
fdivp
in
stos
cmp
loopne
push
dec
rcr
(bad)
pop
jbe
mov
outs
mov
dec
sub
xor
jg
adc
add
fiadd
daa
(bad)
jnp
ficomp
js
and
pop
retf
test
shl
loopne
out
test
jb
and
cmp
push
cdq
ss
jno
ds
(bad)
and
cmp
scas
dec
and
ret
mov
rcr
loope
push
cdq
(bad)
icebp
sahf
inc
xchg
gs
out
jecxz
and
mov
mov
and
add
repnz
out
dec
jb
add
shl
repz
push
jecxz
fwait
mov
mov
push
mov
xchg
fmul
xchg
inc
jecxz
lock
pop
cs
stc
sti
outs
arpl
pop
cmps
or
xchg
ror
(bad)
rcr
add
adc
icebp
mov
xor
jns
dec
cmp
xor
push
add
shr
cmp
inc
gs
inc
sbb
add
dec
adc
mov
jmp
xchg
xor
stos
xlat
pusha
sub
(bad)
mov
shl
pop
mov
(bad)
popf
ret
or
rol
cmp
pop
out
mov
push
xor
jle
jmp
retf
in
es
add
sar
push
lods
fptan
repnz
adc
cmp
jne
daa
ds
xor
dec
dec
inc
call
icebp
outs
xchg
cmp
mov
hlt
ret
lds
retf
inc
stos
xchg
sbb
enter
adc
sar
add
test
pop
mov
mov
cmc
cmp
push
retf
mov
dec
jo
mov
jbe
jecxz
dec
jp
mov
xchg
xchg
lods
inc
adc
xor
arpl
or
sub
mov
clc
pop
sbb
cmp
test
xchg
dec
shl
pop
imul
xchg
ficom
push
xchg
mov
aam
clc
in
int
loop
imul
iret
jmp
bound
jnp
add
mov
or
mov
pop
inc
mov
add
mov
or
and
jecxz
int3
xchg
lea
push
mov
aad
push
inc
add
adc
mov
adc
or
arpl
mov
push
bound
jg
and
into
mov
mov
mov
mov
shr
iret
enter
repz
inc
push
mov
sub
jno
retf
mov
fbld
fld
and
movs
jmp
sub
test
sbb
pop
dec
in
daa
push
outs
es
cmps
ficomp
pop
mov
sub
jl
add
mov
js
and
sbb
sub
pop
sub
scas
and
ret
inc
pop
inc
jge
cmp
cmp
lea
ds
cmp
in
or
cmp
bound
out
xchg
inc
inc
les
sbb
rcl
les
(bad)
adc
leave
mov
cs
test
xor
repnz
jmp
mov
(bad)
cmp
xchg
sahf
mov
inc
push
enter
stc
leave
xchg
xchg
fist
mov
cmp
sub
into
cmc
jp
out
neg
cmp
test
inc
pop
and
sbb
jb
popf
xchg
test
lock
sahf
dec
cli
and
lea
(bad)
xor
hlt
aas
aas
jns
inc
sbb
push
icebp
dec
mov
add
xchg
jg
cmp
sbb
fidiv
mov
lahf
nop
push
ds
retf
call
add
mov
out
inc
ficomp
sbb
push
mov
stos
push
in
add
mov
fcmovne
sahf
(bad)
out
mov
mov
cdq
xchg
push
mov
sub
scas
fs
xlat
dec
mov
mov
mov
ins
add
imul
in
movs
jne
out
sbb
scas
cmp
jno
push
push
(bad)
nop
dec
loop
add
sbb
arpl
jno
push
test
cld
loopne
fisttp
inc
daa
xchg
and
mov
cld
(bad)
push
xlat
pop
daa
in
movs
sbb
cmp
cs
push
movs
(bad)
adc
push
mov
std
push
jae
inc
jbe
cmp
das
sbb
jl
pop
int3
sahf
in
cs
enter
jmp
pop
iret
jbe
ja
int
popa
retf
mov
xchg
xchg
arpl
repnz
add
js
mov
add
jns
xor
and
mov
sar
outs
xor
ffree
mov
scas
xor
mov
pop
dec
push
mov
cwde
xchg
out
hlt
sub
or
sbb
mov
pop
pushf
dec
cs
add
in
push
repnz
lds
xor
fadd
inc
test
adc
and
jb
bound
lods
and
and
cmp
out
aaa
scas
jo
inc
jmp
scas
lods
in
jge
inc
pop
sahf
leave
sti
dec
xchg
mov
aam
jae
nop
push
(bad)
test
clc
jmp
or
xor
fbstp
sub
ret
or
mov
std
mov
dec
cli
pop
jb
mul
inc
pop
stos
aaa
hlt
adc
xchg
push
cdq
xchg
xor
fwait
jge
fcom
les
sub
enter
mov
or
adc
and
push
ins
fs
cmps
(bad)
movs
int3
sub
hlt
sbb
push
add
mov
stc
xor
xor
or
pushf
and
mov
icebp
test
mov
hlt
dec
and
test
xor
push
jmp
dec
in
bound
xchg
and
mov
sub
test
jae
mov
sub
popf
add
popf
pop
pop
inc
and
sti
sub
js
add
xor
pop
in
mov
sbb
(bad)
dec
mov
std
add
and
cld
mov
sub
cmps
pop
(bad)
dec
mov
cli
sbb
cmp
xchg
mov
add
xchg
(bad)
hlt
and
pop
repnz
call
mov
cmp
sti
xor
or
rcl
push
loopne
sbb
out
(bad)
mov
mov
leave
addr16
fistp
pop
pop
cmp
pop
stc
mov
cs
pusha
mov
ins
sbb
sbb
sub
lods
jmp
mov
sbb
or
scas
lods
ins
xor
call
aaa
shr
cmp
and
mov
test
and
lea
and
outs
(bad)
in
dec
mov
gs
push
mov
out
adc
lods
cmp
dec
fist
(bad)
(bad)
fst
mov
add
pop
out
jb
cmp
push
dec
push
lea
fsubr
call
test
leave
lock
aad
inc
arpl
cmp
jge
cmp
(bad)
mov
call
and
inc
(bad)
(bad)
pop
(bad)
lds
xchg
xchg
ret
and
sbb
adc
push
jle
sahf
and
adc
and
and
xor
mov
arpl
in
popa
not
cmp
cmp
jae
and
adc
mov
shl
cmp
jno
pop
mov
mov
mov
data16
jge
jmp
jg
ja
into
test
ret
ss
repz
pop
pop
add
push
mov
repz
mov
sti
lahf
mov
jb
test
leave
jo
sub
ret
test
(bad)
int3
adc
sbb
(bad)
retf
fnstcw
jg
mov
fucomi
imul
xchg
f2xm1
sub
lods
sbb
cli
into
outs
mov
or
movs
sub
loopne
sub
sbb
(bad)
jns
add
call
in
jg
int
mov
fwait
call
sbb
(bad)
out
xor
push
hlt
and
mov
push
mov
sbb
lods
fistp
out
je
rol
fbld
mov
cmps
push
jb
mov
and
into
outs
jbe
mov
loop
stc
daa
cli
jle
out
les
jmp
pop
xor
sub
mov
mov
icebp
cld
mov
test
shr
test
dec
or
adc
js
pusha
mov
xchg
push
mov
clc
cdq
add
add
pop
cli
xchg
pop
rcl
or
fdivr
push
data16
fdivr
and
clc
or
mov
push
call
rol
xchg
sub
xor
sbb
sub
dec
ja
jne
idiv
or
movs
jp
mov
xchg
hlt
addr16
xor
xor
and
sbb
movs
retf
xchg
(bad)
jmp
shr
sbb
push
jl
ficomp
or
inc
adc
mov
dec
stc
add
xor
int3
test
test
push
leave
pop
lods
pusha
fwait
out
xchg
enter
mov
popw
xor
mov
push
adc
xchg
dec
arpl
mov
ret
jecxz
inc
xor
dec
inc
scas
mov
lods
loopne
out
aad
mov
aam
popa
pop
push
clc
xor
rcr
jb
sub
mov
(bad)
cmp
out
xor
jmp
mov
mov
jle
imul
jbe
sahf
out
test
arpl
fs
xchg
clc
data16
push
(bad)
push
movs
sub
jmp
cld
fiadd
outs
xchg
ins
xchg
movs
xchg
(bad)
jg
push
test
iret
enter
and
add
(bad)
les
aaa
inc
ffree
push
sbb
hlt
outs
push
xlat
stos
jae
cmp
adc
test
push
xchg
push
xor
xchg
cmp
lods
xor
sbb
retf
add
mov
adc
fsub
jae
sub
and
test
sbb
mov
stc
sbb
push
mov
fwait
retf
sub
mov
mov
fist
stc
test
jmp
ret
loopne
mov
cmp
sahf
rcr
jmp
xchg
outs
push
or
add
sbb
mov
pop
inc
xchg
stc
imul
in
leave
stos
mov
ds
cmp
enter
push
pop
mov
mov
gs
mov
pop
retf
jb
test
push
add
hlt
xchg
pop
inc
add
mov
nop
and
shr
stos
sbb
arpl
test
adc
dec
cli
pop
outs
jecxz
sti
fist
hlt
push
int
jno
xchg
test
mov
mov
mov
cs
in
mov
xchg
or
mov
jb
imul
scas
ss
call
inc
iret
jb
je
fdivr
daa
pop
stos
test
xchg
jnp
sbb
ficomp
pop
out
dec
xor
loop
mov
scas
faddp
jb
or
jns
mul
or
xor
scas
stc
inc
cmp
ret
fmul
mov
cmp
cs
js
xor
scas
ins
xor
add
rol
cs
xchg
popf
loopne
sub
ret
xlat
cli
inc
(bad)
jmp
dec
call
fcmovnu
adc
xor
mov
jmp
cmp
loope
(bad)
fldenv
in
retf
jp
adc
and
scas
mov
xor
jmp
fs
out
or
pop
outs
test
movs
dec
inc
push
add
mov
cmp
neg
cmc
out
mov
add
dec
jo
sbb
or
pushf
mov
shr
sti
jmp
push
sti
cmp
gs
(bad)
je
fidivr
mov
xor
retf
out
sub
sub
xchg
js
out
daa
cs
add
mov
imul
lds
push
(bad)
fld
cmp
fdivr
lea
fs
add
ror
(bad)
stos
std
gs
pop
mov
pop
cli
(bad)
in
fnstsw
cmps
pop
mov
jmp
mov
mov
and
push
jns
xor
push
pop
sbb
lock
sti
popa
push
inc
dec
sub
pop
fs
out
lea
jne
stos
rcl
das
leave
ins
jmp
cmps
and
push
es
mov
ds
(bad)
fcmovnb
pop
cld
fstp
fcom
ds
test
and
sub
in
fdiv
pushf
xchg
lahf
xor
sti
pop
inc
call
mov
pop
aaa
or
test
out
cmp
mov
lea
jmp
xor
pusha
stc
pusha
cvtps2pi
pop
cld
jns
mov
and
dec
lods
aam
push
fwait
std
ja
scas
or
in
adc
(bad)
and
push
cmp
mov
add
or
out
sbb
neg
lahf
pop
mov
sbb
cmp
outs
push
jecxz
shl
cmp
es
stos
xchg
icebp
or
adc
mov
jo
nop
out
test
fst
pop
sbb
mov
jo
leave
aam
add
ins
xlat
mov
cmp
mov
add
jno
xchg
pusha
out
cdq
jl
mov
in
sub
out
shr
popf
dec
pop
inc
loope
popf
xor
or
sahf
mov
jmp
pushf
scas
pop
push
mov
sub
test
rcl
xor
add
cld
movs
xor
imul
cmp
push
mov
and
ret
xchg
sbb
jecxz
bnd
xchg
ret
inc
inc
ret
pop
xchg
jmp
in
sub
push
xchg
dec
mov
mov
test
outs
cld
pop
push
stos
sbb
mov
rcr
add
out
(bad)
lods
je
stc
jmp
aad
int
mov
jne
xlat
or
jbe
cmc
cli
fcom
pop
es
sub
pop
mov
(bad)
push
retf
jmp
test
cmps
jmp
mov
push
leave
loop
in
mov
pop
sbb
icebp
fs
out
and
dec
cmp
adc
dec
push
and
or
out
(bad)
leave
jg
sub
and
xor
jbe
mov
mov
xlat
in
std
cmp
cmp
xor
loope
mov
sbb
cmp
and
and
push
(bad)
xor
jg
dec
mov
gs
mov
cmp
call
test
push
ins
or
popf
mov
inc
cmp
fild
mov
sub
in
loope
je
pop
fistp
and
outs
mov
pop
jp
adc
adc
cmp
xchg
inc
add
lock
pop
or
in
pushf
les
sbb
or
das
fwait
add
iret
sbb
out
pop
mov
sbb
mov
push
mov
mov
pop
leave
sti
nop
call
fcom
mov
jno
retf
and
cmp
cmp
sbb
lods
popf
loope
mov
ldmxcsr
jp
outs
push
daa
popa
arpl
push
dec
lods
out
addr16
xchg
pop
fidiv
xchg
je
scas
in
and
mov
popf
adc
xchg
xor
cmps
adc
mov
jecxz
test
rol
outs
pop
pop
add
bound
sub
jmp
inc
dec
aad
pushf
cmp
call
sub
add
(bad)
push
mov
cmp
mov
sub
and
scas
fdivr
or
ficom
xor
rol
or
mov
ins
or
and
out
loopne
and
sub
lds
pop
(bad)
(bad)
inc
pop
inc
bound
jmp
xchg
xchg
(bad)
mul
add
xlat
popf
xor
jmp
div
mov
jle
fimul
mov
(bad)
popa
shl
mov
add
jge
mov
sahf
mov
pop
loope
pop
pop
test
or
ret
sbb
pop
pop
inc
lahf
push
call
retf
push
pop
shr
imul
arpl
jle
jecxz
jae
aas
fsub
lods
mov
sbb
sub
pop
push
mov
inc
call
jle
movs
pusha
rol
pop
xor
mov
(bad)
fidiv
sbb
mov
mov
sti
ss
retf
dec
jecxz
xlat
out
push
xor
cli
push
into
xor
addr16
push
jg
(bad)
xor
or
sub
ret
pusha
sbb
lea
inc
ds
dec
xor
enter
sbb
xchg
inc
(bad)
mov
(bad)
mov
pop
jno
mov
xchg
and
mov
sahf
cmp
mov
and
push
fadd
leave
movs
mov
sbb
daa
sub
not
cmc
call
retf
stos
popa
(bad)
mov
sti
in
xchg
sbb
inc
jmp
cmp
adc
int3
xchg
out
mov
sar
dec
sub
ss
(bad)
sub
or
jmp
ins
pop
fnsave
dec
xchg
fwait
jmp
leave
js
sbb
arpl
bound
mov
jnp
pop
scas
hlt
fbld
sub
and
mov
dec
inc
push
rol
cld
or
dec
and
nop
sbb
or
xor
inc
test
dec
mov
in
cmps
cmp
or
jae
nop
in
jecxz
add
dec
test
add
or
inc
adc
xor
sub
je
les
inc
mov
push
push
xor
push
sbb
in
in
iret
add
cmp
adc
xchg
enter
repz
test
push
cmp
push
mov
push
cmc
xchg
push
inc
mov
lea
cmp
xchg
dec
call
mov
je
pop
jmp
(bad)
or
jg
hlt
add
cmp
jnp
and
sbb
shl
pop
sub
push
push
ins
cmp
inc
popa
xlat
shl
xchg
inc
shl
sub
jl
fs
(bad)
mov
pop
or
dec
push
mov
jo
pop
jo
jb
mov
cli
lods
cmps
icebp
clc
cmp
jmp
repnz
les
stc
jae
cmp
enter
retf
and
pop
adc
data16
push
jae
and
sbb
test
push
shr
popf
enter
mov
push
pop
call
jmp
in
adc
push
pop
ror
daa
cld
dec
out
mov
adc
mov
out
cmps
dec
mov
bound
leave
or
and
xor
ins
xchg
dec
sbb
sbb
cmps
iret
sub
and
push
mov
xlat
loopne
xor
mov
jno
xchg
aas
add
mov
sub
mov
fidiv
fisub
pop
(bad)
dec
(bad)
push
cmp
xchg
and
add
jbe
adc
aad
movs
into
and
mov
leave
fsub
push
sbb
into
scas
nop
pop
rol
dec
sub
ret
mov
cmps
lea
xor
loop
lods
jmp
dec
loopne
aad
lds
push
xchg
lock
aas
sbb
ret
push
sbb
loopne
sub
in
mov
push
shr
cwde
or
pop
xchg
mov
sub
scas
cs
cld
xchg
sbb
call
popf
(bad)
fcom
stos
iret
inc
out
lods
cmp
pop
mov
outs
xchg
ficomp
push
pushf
js
jb
push
xor
and
pusha
out
loop
ret
xchg
ja
mov
call
cs
out
xchg
mul
jbe
js
or
xor
sbb
pop
and
outs
or
add
aad
jge
movs
and
ds
repnz
mov
test
sahf
dec
rcr
pop
xchg
jnp
fsubr
daa
cli
ffreep
xchg
mov
rcr
ror
jo
aas
pop
pop
mov
sub
pop
cmp
mov
push
xor
mov
jmp
pop
mov
lods
pop
push
add
(bad)
stos
fcom
out
inc
sahf
fistp
jns
jp
(bad)
outs
push
cld
adc
pop
jne
inc
push
lds
inc
retf
adc
fidivr
mov
sti
stos
pop
stc
stos
(bad)
out
cmp
xchg
not
pushf
mov
sub
sub
test
mov
imul
je
(bad)
loope
push
pop
sbb
pop
push
jmp
jge
sar
sbb
les
mov
adc
bound
sub
mov
add
lods
(bad)
stc
leave
dec
(bad)
jnp
arpl
popa
jno
cmp
push
cmp
fdiv
add
leave
or
dec
push
sub
(bad)
cmp
sub
dec
ins
jnp
test
and
in
popa
in
pushf
pop
aad
frstor
cmp
cmp
mov
cdq
fcmovu
push
popf
jns
repnz
and
out
adc
lea
add
mov
inc
pop
ja
jmp
pop
in
retf
sbb
data16
xchg
fcom
js
std
int3
gs
out
mov
xchg
push
(bad)
fsubr
sub
stos
xor
push
jg
jnp
or
iret
(bad)
mov
push
add
in
out
data16
sti
sub
jp
inc
adc
fstp
sub
movs
call
mov
pop
add
sbb
cld
frstor
scas
retf
push
popf
inc
mov
dec
arpl
push
mov
xchg
or
cmp
cmc
cmp
call
movq
lods
imul
dec
push
(bad)
mov
std
pushf
in
jno
or
in
shl
push
movs
dec
and
pop
add
mov
or
pop
(bad)
mov
mov
xlat
es
mov
pushf
jae
xor
mov
push
into
xchg
add
daa
inc
js
jge
add
xchg
dec
jp
add
loop
cmp
loope
lods
mov
adc
aam
ret
xor
push
(bad)
jmp
loopne
and
or
push
xchg
iret
mov
cmp
idiv
nop
inc
mov
mov
test
lea
pushf
movs
add
call
ds
jae
aas
pop
retf
inc
sbb
mov
sbb
loopne
mov
xacquire
scas
(bad)
sti
jmp
jl
shr
call
pop
inc
push
lock
pop
aaa
loope
jmp
mov
and
repnz
in
mov
ficom
retf
cmc
xor
movs
dec
stos
cmp
cwde
dec
or
or
xchg
ror
scas
sub
outs
in
mov
int3
arpl
xchg
cli
fld
sub
lahf
fucomi
(bad)
fmul
push
in
repz
mov
retf
xlat
gs
push
cmp
and
cmp
retf
push
repz
in
ret
cmp
lods
adc
sbb
loopne
(bad)
pop
jecxz
push
fsub
fmul
aaa
adc
data16
pop
mov
fisub
loop
sub
mov
and
and
call
sbb
mov
je
dec
sar
or
pop
mov
out
inc
sbb
popf
adc
movs
add
sub
ret
or
stc
arpl
int3
movs
mov
sub
cdq
push
xor
add
xchg
arpl
fidiv
test
jbe
push
jmp
jmp
fucom
jle
int3
retf
mov
lods
stos
enter
adc
(bad)
cs
stos
pop
push
pop
test
and
(bad)
cmps
not
jg
pusha
cmp
icebp
sbb
cmp
fldcw
inc
pop
push
push
inc
mov
call
mov
push
mov
pop
cs
in
inc
mov
fcom
cmc
hlt
and
cmps
rcl
(bad)
loopne
fdiv
and
or
cwde
xchg
mov
data16
push
mov
inc
xchg
sub
cmps
daa
or
jle
or
and
add
cs
mov
jle
fbstp
adc
jno
retf
dec
aas
sar
pop
push
rol
xchg
ds
sub
movs
mov
mov
push
fcomp
xchg
push
xchg
rcl
and
stc
jmp
xor
sub
out
mov
mov
push
pusha
inc
test
pop
int3
sub
sub
ss
fucom
popa
fwait
cmp
xchg
or
adc
icebp
pusha
es
in
fstp
pop
fdiv
shl
outs
loop
inc
mov
lods
iret
push
mov
pop
fdiv
adc
cmp
dec
mov
sbb
push
dec
pop
push
sbb
xor
cld
mov
gs
cmps
out
gs
sbb
inc
jecxz
cmp
xchg
xchg
pop
pop
mov
repz
popa
imul
retf
mov
and
(bad)
or
and
dec
inc
cmp
daa
cmps
dec
pop
je
test
and
lock
es
int
cmp
imul
dec
jl
mov
js
xchg
or
retf
out
mov
repz
push
(bad)
pop
movs
mov
cmp
imul
and
jo
clc
out
xor
jo
cwde
fwait
cs
das
inc
cmp
ins
xchg
mov
shr
ret
jae
cdq
mov
mov
pop
cs
jb
jns
sub
dec
movs
imul
ficomp
mov
mov
ficomp
sbb
pushf
jmp
(bad)
dec
push
ret
pop
push
adc
push
dec
push
(bad)
(bad)
pop
shr
add
test
push
div
sti
inc
pop
stc
cmc
push
imul
sub
cwde
retf
sbb
dec
mov
fdiv
ins
jae
lock
call
es
cdq
push
cmp
and
cmp
mul
loope
sbb
arpl
or
gs
les
adc
dec
ins
mov
je
and
pop
movs
je
jbe
mov
test
jle
cmp
ds
das
ds
cmps
cmc
iret
push
test
jg
pop
stos
into
jge
pop
ja
addr16
sti
mov
push
aaa
adc
add
les
sub
imul
fdiv
fist
icebp
shl
xor
adc
push
(bad)
pop
dec
add
jae
(bad)
ins
cmps
sub
(bad)
popf
add
dec
or
pushf
mov
in
xor
push
stos
loope
out
aaa
daa
add
adc
outs
cmp
ss
sbb
ins
ret
hlt
push
push
pop
mov
ins
cmps
sub
push
mov
(bad)
(bad)
jmp
fwait
scas
in
add
call
sub
mov
mov
mov
stos
add
add
scas
and
in
in
inc
imul
or
add
mov
sbb
xor
test
push
xchg
sbb
sub
fidivr
enter
js
mov
dec
ins
daa
pop
shl
stos
cld
add
imul
in
xchg
cli
addr16
repnz
arpl
fsubr
sbb
lea
movs
jo
cmp
repnz
add
or
mov
mov
xchg
pop
pop
add
mov
xchg
(bad)
nop
js
nop
jge
fmul
or
repnz
sti
clc
inc
and
lea
les
mov
push
pop
fnstcw
push
enter
imul
push
add
cmp
cmps
jnp
sahf
sub
pusha
pop
or
add
aam
cs
or
push
jo
mov
stos
ja
dec
add
sub
into
movs
sar
adc
imul
pop
push
adc
or
pop
sbb
cdq
jne
imul
loopne
add
fstp
test
mov
stos
mov
adc
mov
jb
out
mov
pop
loopne
push
loope
or
popa
mov
fsubp
pushf
jns
ds
in
pop
clc
lock
push
push
cs
and
xchg
mov
(bad)
mov
ss
dec
adc
pop
inc
ret
and
xlat
dec
ja
ins
das
inc
adc
out
test
adc
push
adc
mov
sbb
outs
pop
mov
pushf
xor
push
dec
repnz
mov
xchg
pop
clc
in
(bad)
shr
push
rcl
cli
mov
jne
inc
jo
inc
and
jmp
in
cmps
stos
aam
popa
cwde
jo
sbb
aas
jae
sub
push
lock
xchg
or
std
mov
ins
mov
dec
inc
repnz
ja
mov
push
or
out
xor
gs
call
and
xchg
pusha
mov
push
out
add
popa
adc
aas
ja
movs
jbe
(bad)
int
(bad)
sub
add
(bad)
lods
mov
aam
sbb
jmp
add
shr
or
dec
lahf
js
jg
pop
mov
pop
aad
(bad)
xlat
inc
in
or
ja
mov
xchg
inc
mov
inc
sub
loope
fwait
xchg
jmp
hlt
adc
cmp
fdiv
sti
test
mov
mov
sbb
inc
cwde
add
or
push
cmp
fdivr
fsub
inc
pop
call
std
ret
adc
add
sbb
repnz
sub
mov
js
pop
jbe
inc
in
mov
scas
add
mov
xor
sar
inc
fsin
in
hlt
shl
loope
sub
call
cmp
adc
cmp
aad
lock
cmp
push
call
ss
jmp
ret
mov
inc
pop
loopne
push
mov
not
dec
out
scas
adc
sbb
fstp
xor
jecxz
stos
cmps
sbb
inc
mov
or
xlat
ins
cs
test
cld
(bad)
cmp
adc
sub
es
mov
xchg
cmc
out
out
in
out
imul
xchg
or
or
enter
in
xor
imul
mov
jno
es
ret
jnp
int
js
sti
sbb
dec
cmp
div
mov
fbstp
imul
aaa
mov
and
cmp
push
lods
xor
scas
jae
jmp
sub
add
adc
in
in
rcr
fistp
shl
(bad)
arpl
push
adc
fistp
stc
xchg
sub
inc
pop
clc
mov
fidiv
pop
out
test
ss
add
add
pavgb
fdiv
mov
xchg
xchg
adc
fcomp
jecxz
sub
sbb
push
mov
mov
xchg
(bad)
cmp
mov
mov
ins
adc
push
add
push
fs
call
and
mov
int3
inc
and
inc
mov
inc
mov
inc
mov
inc
shl
imul
sbb
ror
inc
mov
out
xor
shl
imul
add
iret
dec
(bad)
mov
push
movs
hlt
and
out
ds
jecxz
scas
xor
inc
stos
ss
jmp
test
lahf
pop
loopne
movs
mov
pop
scas
mov
pop
clc
imul
push
ret
cli
retf
pop
pop
add
sbb
and
add
push
or
xchg
aam
dec
idiv
repz
jge
loope
mov
add
push
inc
out
sbb
sti
xlat
jecxz
and
or
xchg
mov
cli
iret
shl
std
icebp
and
and
dec
or
jnp
pop
jmp
add
mov
inc
mov
xchg
rcr
cmc
sub
cmps
or
aad
fisubr
dec
xchg
dec
push
xchg
lods
lahf
xchg
xchg
fidiv
sub
ror
(bad)
in
ins
push
ins
mov
shl
mov
das
repz
mov
imul
cmp
test
in
inc
test
ss
rcr
add
cmp
addr16
cdq
test
imul
dec
dec
lahf
jmp
xchg
sti
and
xor
mov
dec
cwde
jp
popf
ins
aam
xor
mov
jne
mov
fidiv
and
lahf
add
cs
mov
fmul
jp
aad
dec
(bad)
out
sub
xchg
xor
mov
aaa
and
push
inc
ds
test
(bad)
xor
les
popf
lds
shl
dec
sbb
adc
or
jb
jae
mov
jg
push
sbb
xchg
sbb
loop
int3
pop
pushf
ds
hlt
sub
pop
loope
sub
rcl
(bad)
adc
pop
and
mov
cmp
push
fdiv
mov
mov
in
mov
out
ds
mov
inc
pop
cmp
fld
popa
push
jmp
xchg
jne
movs
push
push
xchg
test
dec
mov
std
loope
outs
int
cld
and
add
mov
add
push
xor
mov
xor
inc
cmps
add
jo
push
adc
jo
inc
loop
mov
add
cmc
(bad)
xchg
sub
cmp
dec
xchg
xchg
mov
outs
sub
inc
push
shr
fwait
push
or
ret
mov
dec
mov
lods
jle
lods
and
ja
pop
std
sbb
test
dec
cmps
push
fisub
je
and
push
pop
(bad)
retf
ret
pop
repz
push
push
retf
push
or
inc
pusha
rcl
add
hlt
int
pop
frstor
ins
push
mov
xor
cli
sbb
dec
sbb
dec
cwde
xchg
call
test
jmp
das
adc
pop
(bad)
pop
mov
aaa
jnp
loop
and
stos
into
das
jne
sbb
pop
mov
adc
add
aas
aas
loope
xor
jmp
data16
mov
out
lock
push
leave
adc
inc
mov
in
push
add
mov
push
mov
imul
mov
dec
cmps
mov
aad
cwde
push
ss
fldz
pop
(bad)
jmp
jmp
je
test
cmp
daa
(bad)
inc
jg
loopne
sbb
aam
cmp
inc
arpl
push
aas
ins
int3
ins
enter
shl
adc
lods
pop
scas
and
push
movs
cmp
cmps
adc
cli
dec
scas
adc
pop
das
add
stos
popa
shl
or
pusha
cs
loopne
mov
sub
xchg
int3
out
sbb
add
mov
sub
loope
pop
ja
mov
(bad)
mov
adc
(bad)
in
ret
push
pop
xchg
add
loop
call
(bad)
out
pop
cmp
in
mov
push
mov
push
add
lahf
sub
sub
gs
sbb
push
lahf
add
fistp
into
push
aam
cmps
mov
cmc
sahf
popf
(bad)
pop
inc
mov
test
mov
ds
mov
jns
inc
or
out
push
inc
cmp
pop
repz
lds
xor
enter
mov
shl
dec
pop
fidivr
fwait
cmp
fsubr
sbb
rcr
adc
(bad)
pop
jle
add
dec
sub
xor
xor
data16
cmp
push
aas
ror
push
inc
mov
retf
hlt
sub
ret
jb
inc
out
push
adc
arpl
add
xor
sbb
jmp
ins
push
cs
loop
js
jge
gs
xor
or
clc
fcom
xchg
jl
xchg
sub
ins
test
jne
sub
(bad)
(bad)
pop
out
clc
xor
inc
ss
loop
mov
adc
mov
pop
mov
mov
out
dec
cmp
xchg
cmp
movs
push
sbb
shr
xchg
adc
pop
mov
iret
dec
into
and
jo
sbb
call
js
cwde
adc
out
dec
cmp
test
adc
jbe
adc
pop
into
fldcw
xor
mov
push
cmp
xlat
js
pop
mov
adc
sub
xor
test
pmuludq
(bad)
cmps
(bad)
sbb
neg
cmps
jp
xor
push
lsl
adc
mov
inc
jo
mov
mov
out
pop
out
dec
test
sub
lock
lods
test
int
xor
sub
mov
pop
dec
mov
push
scas
repz
xor
ds
dec
into
into
xchg
pop
das
loop
out
imul
push
inc
stos
(bad)
or
jle
cmp
inc
jo
mov
mov
sub
jp
push
(bad)
fdivr
lahf
adc
pop
mov
loope
fldenv
pop
push
adc
(bad)
int
sar
imul
test
(bad)
jmp
and
xchg
cmp
mov
retf
cmp
les
fistp
in
test
cmp
push
mov
aam
stos
mov
mov
xchg
dec
and
shld
fisubr
cdq
les
xchg
je
loop
xchg
gs
xlat
fwait
inc
sbb
or
mov
mov
pop
xor
pop
mov
mov
ret
mov
arpl
sub
mov
jl
fsubr
mov
mov
pop
pushf
push
inc
movs
shl
adc
push
into
cmp
mov
cmp
js
bound
and
sub
adc
fbstp
test
into
push
and
jno
popa
loope
lds
sbb
dec
mov
push
pusha
add
mov
push
mov
neg
fs
aad
jb
les
push
test
stos
adc
sub
addr16
scas
jmp
push
sub
les
inc
push
test
mov
outs
retf
xchg
clc
ins
lods
mov
rcr
leave
dec
pop
aam
mov
inc
arpl
repz
dec
sub
add
push
rol
cld
pop
xchg
inc
inc
push
ja
sbb
mov
cmp
pop
or
pop
in
(bad)
fldenv
jmp
add
sub
or
stos
push
in
(bad)
out
adc
adc
cmps
in
lea
mov
or
scas
daa
mov
ins
into
mov
adc
aas
sub
xchg
(bad)
aaa
adc
mov
jl
jecxz
js
mov
push
ror
pop
movs
xchg
jge
xor
hlt
imul
shr
pop
div
rcl
shl
iret
pop
pop
sbb
xchg
das
push
push
jne
cmp
rcl
push
pop
or
shr
push
or
sub
cmp
leave
push
lods
dec
cdq
data16
jg
arpl
mov
xchg
pop
sti
data16
sbb
mov
pop
jne
std
or
rcr
xchg
mov
fsub
push
cmp
es
pop
sahf
pop
inc
fcomi
adc
push
xor
xlat
sahf
mov
adc
push
fadd
icebp
or
xchg
loopne
fldenv
rcr
jmp
mov
jae
(bad)
fstp
stc
bsf
mov
xor
dec
in
mov
in
ins
ret
fdivr
loope
dec
enter
xchg
cmc
jae
sub
mov
lods
not
xchg
nop
(bad)
(bad)
sti
(bad)
into
or
push
adc
je
dec
dec
fmul
(bad)
fidivr
dec
loop
in
pop
popf
fs
push
cmp
je
xor
ret
imul
sub
add
sub
xchg
inc
loopne
fidiv
pushf
(bad)
mov
in
(bad)
cs
xchg
jmp
(bad)
mov
mov
lods
xchg
pop
js
mov
sbb
movs
pop
xor
stc
hlt
pop
mov
xor
add
aam
movs
fsub
xchg
inc
inc
vmwrite
aad
fidiv
or
pop
dec
repz
cmp
add
dec
or
sbb
loope
scas
xor
inc
std
jmp
fdivr
mov
pop
xchg
cmp
clc
xchg
dec
and
jnp
jle
ss
(bad)
sbb
out
ins
pop
inc
(bad)
popf
mov
iret
aaa
xor
pop
loopne
outs
clc
(bad)
(bad)
cmps
mov
fnstenv
dec
cmp
add
mov
mov
inc
dec
mov
pop
test
mov
das
and
(bad)
out
mov
and
fnstcw
jecxz
xchg
dec
imul
in
dec
push
pop
xor
cli
neg
das
retf
or
sbb
xchg
imul
ins
dec
sbb
je
in
and
add
adc
or
sub
(bad)
int
mov
mov
adc
imul
xchg
ror
shl
daa
xchg
adc
(bad)
xor
popa
not
ds
stos
sbb
aad
cmps
add
arpl
pop
jge
iret
push
imul
jbe
test
mov
and
rol
xchg
aad
and
fsubr
push
lock
ror
or
pop
sub
pusha
fild
int3
retf
ds
sub
bound
jo
push
jne
xchg
lods
mov
icebp
push
xchg
push
ror
outs
cmc
and
pop
stos
mov
stos
inc
fcomi
xor
dec
mov
cvttps2pi
daa
ret
nop
fcomp
xor
jle
or
cdq
ss
mov
popa
jp
xor
jae
fstp
mov
sar
int
not
cld
fst
adc
dec
out
stos
xchg
inc
xor
je
(bad)
fnstenv
mov
lahf
xchg
add
push
mov
push
out
dec
lock
test
mov
scas
mov
bound
and
ja
retf
push
inc
jmp
iret
push
ror
mov
jmp
repnz
jecxz
nop
lock
stc
and
and
push
pop
outs
adc
bound
cmp
pop
xchg
std
pop
retf
enter
push
mov
mov
leave
ss
mov
retf
or
clc
sbb
shr
(bad)
jbe
int
jge
int3
jmp
adc
lahf
dec
xchg
adc
cmps
test
pop
cmp
loop
xchg
jne
jp
aad
jge
rcl
or
fisttp
mov
sbb
ret
popa
jge
call
icebp
cmps
stos
out
movs
adc
mov
ror
mov
mov
fidiv
sub
push
int
test
xchg
push
lock
jno
aas
cmp
cli
fnsetpm(287
dec
lds
ds
ja
jmp
mov
sbb
stos
repnz
out
arpl
mov
test
pop
popa
push
(bad)
push
or
inc
push
(bad)
fbld
mov
sbb
imul
xchg
inc
outs
xor
stc
mov
nop
or
jae
pushf
xchg
lea
or
xchg
add
ins
fsub
fisttp
sbb
jne
jae
aad
arpl
lock
mov
xchg
pop
je
adc
loopne
adc
(bad)
cli
jmp
scas
cmps
inc
cld
pop
fisttp
scas
mov
push
xchg
aaa
retf
or
cdq
fisttp
(bad)
push
loop
and
add
jle
in
xor
add
shr
vunpcklps
mov
aad
and
ins
jecxz
sub
adc
repz
push
das
push
out
movs
adc
clc
jmp
out
pop
aas
xchg
out
fwait
es
or
push
mov
pop
and
push
aaa
out
xor
mov
jmp
movs
call
fnsave
cmc
xlat
(bad)
sub
cmp
add
jle
movs
and
in
(bad)
inc
mov
pop
sti
add
ror
das
and
mov
aam
stc
pushf
jle
fbstp
jmp
cwde
js
ins
fmul
xchg
fimul
inc
stc
loop
outs
dec
pop
pop
in
inc
js
adc
mov
les
scas
or
inc
out
jno
cmp
sub
icebp
pop
pop
sbb
inc
js
loope
add
jne
imul
fistp
cwde
test
mul
pop
cmp
add
dec
out
inc
inc
add
loop
push
popf
push
mov
mov
or
mov
mov
pop
ds
mov
icebp
push
pop
call
jg
or
cli
ja
jge
sbb
mov
mul
cwde
pop
lods
sub
shr
scas
lock
mov
bound
sub
mov
xor
fcomp
rol
lds
add
(bad)
iret
adc
push
adc
fidiv
mov
push
fld
xor
lods
dec
sub
jne
jl
push
and
sub
out
sahf
gs
shr
adc
inc
jecxz
out
and
cmp
add
and
fnsave
adc
inc
mov
imul
std
aas
ror
mov
inc
shl
cmps
mov
xor
adc
jl
inc
lods
ins
jl
fwait
push
push
add
lea
or
(bad)
in
xchg
ret
call
fwait
mov
out
mov
test
pop
sbb
movs
pop
dec
clc
imul
cmps
fidiv
int
je
pop
sbb
push
jnp
retf
arpl
pop
dec
mov
test
push
sbb
addr16
icebp
stc
sahf
add
mov
popf
and
xchg
and
rcr
xchg
dec
in
push
aas
inc
mov
lahf
fcmovbe
push
jno
fidivr
inc
push
fdivr
mov
jecxz
jge
mov
adc
aam
mov
bnd
fwait
cmc
xchg
inc
hlt
inc
fistp
jno
mov
call
ss
out
pop
sbb
retf
xchg
pop
imul
and
push
pop
mov
push
mov
adc
in
inc
scas
fucom
addr16
mov
int3
imul
repnz
sub
or
dec
mov
adc
jne
loopne
dec
fild
aad
iret
dec
adc
repnz
loope
push
(bad)
aam
or
fstp
int3
lea
cwde
int3
jne
jmp
cmps
fucomi
push
mov
sub
mov
out
dec
lock
popa
out
inc
or
mov
jl
mov
test
mov
sub
push
bound
(bad)
fcom
mov
(bad)
ins
sub
(bad)
sub
(bad)
mov
jbe
sub
jbe
inc
addr16
adc
add
mov
and
cwde
cmps
xor
mov
icebp
dec
ja
dec
sub
shl
pop
leave
cmp
xor
sahf
leave
pop
fidivr
pushf
aad
xor
sub
mov
(bad)
push
lea
inc
or
icebp
ror
push
das
push
pop
inc
sub
into
lods
arpl
pop
in
push
xlat
dec
add
or
jmp
cld
jmp
dec
lock
mov
test
and
mov
iret
daa
mov
push
sahf
mov
aam
cwde
push
and
xchg
mov
mov
mov
test
rol
xlat
int
mov
sbb
pop
fimul
xchg
mov
xor
mov
js
out
fcomp
lds
idiv
adc
movs
repnz
jge
mov
push
ret
mov
jne
(bad)
push
cmp
imul
push
mov
lds
jmp
mov
out
lahf
shl
xor
loop
into
icebp
adc
xor
cmp
in
push
scas
ins
ja
mov
(bad)
jp
sbb
jmp
sbb
mov
mov
popa
jnp
lahf
pop
xchg
aad
mov
sbb
fld
pop
popa
(bad)
xchg
aam
nop
lods
push
not
fnsave
test
sbb
xchg
push
cmp
repz
iret
stc
sti
pushf
sub
pusha
and
pop
add
or
pop
lods
out
sub
loopne
ret
repz
mov
fidivr
dec
pop
mov
sub
xchg
in
fucomp
sub
cwde
leave
imul
call
xchg
cmp
pusha
push
sbb
rcl
iret
addr16
(bad)
stc
cmc
sub
(bad)
out
jp
add
lods
cmp
shr
xor
(bad)
(bad)
ds
(bad)
cmp
mov
hlt
mov
xor
mov
mov
mov
push
xchg
cs
fiadd
mov
aas
sub
iret
push
xor
ret
ret
lea
jge
dec
xchg
stos
pop
push
xor
push
cmc
mov
and
cmp
sub
and
leave
sar
nop
push
neg
stc
mov
cmps
ins
(bad)
fbstp
pop
adc
repnz
dec
lods
push
adc
sbb
pop
in
lods
sti
cmps
push
js
mov
les
in
sbb
jnp
xchg
retf
and
out
cli
popa
add
jns
jle
pop
cmc
movs
mov
and
fild
clc
adc
arpl
xor
xlat
lea
mov
mov
cli
in
mov
mov
mov
add
dec
sub
stos
neg
push
mov
xor
mov
int
movs
dec
pop
adc
loop
cmps
mov
xchg
lods
dec
add
cmp
pop
cmps
push
test
xchg
fistp
inc
sbb
pop
inc
cmps
cmp
dec
mov
out
pop
dec
or
xlat
jns
cwde
addr16
inc
popf
push
push
inc
mov
nop
sbb
add
pop
bound
icebp
xor
cmp
inc
sub
fidiv
jno
and
scas
pop
pop
popf
pop
sbb
call
rcl
jae
cmp
sbb
and
iretw
stc
rcl
sub
shl
stc
xchg
(bad)
jmp
(bad)
jl
cli
loopne
dec
fsub
and
push
push
fucomip
jle
jnp
(bad)
lods
mov
cmp
push
clc
inc
movs
mov
loop
mov
or
mov
cmp
cmps
popf
data16
adc
call
sbb
cwde
scas
rcl
or
sub
imul
sbb
outs
sbb
shufps
les
jns
loope
sbb
and
lods
loop
mov
pop
pop
jns
pop
cmps
xchg
xor
iret
xor
popf
sub
idiv
dec
or
dec
mov
jae
jl
or
sbb
or
sar
pop
scas
mov
cmp
and
jecxz
mov
bound
stos
or
mov
cld
imul
(bad)
movs
dec
sbb
xchg
sbb
movs
xor
vmread
jnp
dec
mov
mov
movs
cmc
into
lods
getsec
in
daa
jno
and
xchg
lock
pusha
pop
xor
add
push
xchg
out
scas
add
jbe
inc
fwait
and
ds
lods
or
and
pop
das
dec
clc
cmp
mov
repnz
or
inc
icebp
push
cdq
lahf
dec
imul
(bad)
ror
jg
inc
and
fisubr
stc
aas
sbb
sbb
test
movs
add
push
push
mov
add
cli
stc
ins
mov
adc
pop
pop
pop
push
cmc
jb
add
rcl
cld
or
inc
inc
or
mov
data16
mov
xor
mov
popa
cs
inc
sub
iret
sbb
lahf
and
lahf
mov
and
dec
inc
pop
in
mov
mov
(bad)
int
stos
mov
lahf
ins
fistp
mov
out
pop
push
pop
jmp
cmp
popf
mov
fist
push
jge
into
ds
std
sub
jmp
add
cmp
xor
imul
adc
leave
push
xchg
push
cmp
jge
cld
jl
iret
mov
cmp
add
cld
mov
sti
mov
dec
(bad)
jmp
inc
dec
cmc
cmp
pop
adc
outs
js
movs
pop
(bad)
(bad)
xor
es
add
mov
adc
push
dec
mov
dec
xor
movs
sub
pop
lahf
movs
mov
(bad)
cli
fsubr
cmp
inc
xchg
mov
in
cmp
cld
fimul
xor
xor
jecxz
js
sbb
xchg
or
arpl
loop
dec
dec
jg
xchg
mov
mov
jne
pop
mov
lds
jge
je
xchg
pop
dec
mov
in
outs
dec
fs
lock
sbb
or
int3
inc
cmp
or
mov
imul
push
aaa
lahf
mov
ss
imul
sbb
stos
push
pop
fist
push
ficomp
lahf
dec
aam
int
push
(bad)
fisttp
jl
adc
fild
xchg
sub
push
mov
out
fist
test
inc
mov
gs
push
fiadd
xor
ds
cdq
shr
daa
xchg
mov
lea
sbb
xlat
xor
movs
fprem
xchg
stos
pop
and
mov
mov
sub
pop
jecxz
mov
add
and
inc
outs
shl
call
xor
test
das
push
in
shl
in
mov
ins
stos
addr16
clc
retf
jg
pushf
mov
(bad)
ja
fucomp
pop
cmp
repnz
lds
adc
out
jb
clc
mov
cs
jp
stos
push
mov
leave
out
test
xor
(bad)
sbb
ins
push
add
imul
inc
sub
xchg
test
(bad)
das
out
sbb
(bad)
xor
gs
inc
rcr
sub
rcr
sbb
xor
add
push
lods
shl
add
test
dec
scas
pop
icebp
retf
bound
inc
inc
mov
addr16
push
sub
lock
hlt
lds
xlat
dec
mov
cld
dec
hlt
sbb
dec
sahf
jns
jmp
mov
enter
cmp
jmp
push
adc
push
cdq
shl
cmp
cmp
fsubr
mov
xchg
cmp
adc
je
stc
das
nop
std
mov
fstp
sub
jnp
ins
mov
xor
cld
cmp
daa
jmp
mov
mov
dec
push
loope
lahf
das
jl
loopne
ret
(bad)
test
enter
push
repnz
call
gs
rol
adc
sub
add
cld
aaa
sbb
test
pushf
stos
clc
dec
cmps
ret
(bad)
loop
(bad)
pop
inc
and
mov
mov
scas
jle
and
test
jno
(bad)
std
bound
ret
push
fcmovnu
ins
retf
fwait
in
jmp
cmps
xchg
(bad)
jle
shl
or
xchg
push
adc
xor
xor
jg
mov
adc
sub
cmp
add
dec
pop
add
ret
imul
pop
in
int
jae
(bad)
cmp
xor
ds
cdq
int3
popa
adc
dec
pusha
in
sar
sub
mov
xchg
and
daa
and
lea
push
sub
stos
(bad)
dec
push
cmp
lods
aas
fnstenv
imul
sti
mov
jno
sub
test
mov
popa
pop
ja
jmp
add
sbb
lds
xchg
cmp
rol
xchg
test
jge
or
and
out
and
push
jbe
or
ror
stos
inc
pop
and
test
das
test
neg
and
or
stos
dec
pop
aas
fmul
push
(bad)
pop
fmul
movs
fnstenv
jl
out
sti
sub
xlat
aas
jmp
push
leave
mov
and
loopne
xchg
add
mul
sar
or
mov
ret
outs
pushf
iret
cmps
push
sbb
inc
xchg
bound
dec
sub
dec
mov
stos
ja
sbb
or
mov
clc
sti
imul
lock
sub
repz
sbb
retf
jmp
in
(bad)
ret
cmp
imul
int
dec
nop
mov
cs
cmp
rol
pop
jmp
(bad)
xor
mov
dec
dec
mov
mov
test
jle
(bad)
(bad)
fldcw
pusha
lea
in
rcr
add
mov
hlt
jle
jecxz
inc
mov
sbb
repz
mov
imul
pusha
sub
fsub
and
nop
mov
pop
lahf
sbb
mov
jecxz
ins
xor
stc
lds
test
or
inc
into
(bad)
hlt
add
sbb
xor
(bad)
mov
adc
adc
xchg
into
mov
push
mov
inc
ins
imul
lods
inc
popf
bound
dec
dec
scas
cmp
and
inc
fidivr
jmp
jnp
hlt
retf
jno
or
lods
dec
sbb
adc
retf
push
jo
cmp
fcom
pushf
movs
mov
adc
mov
mov
jge
mov
and
cmc
and
ins
jne
in
outs
xchg
adc
jb
sbb
addr16
adc
jp
sbb
ja
sbb
in
sbb
movs
dec
jmp
loop
fdiv
or
adc
add
mov
sbb
das
(bad)
hlt
pop
lahf
and
inc
or
mov
jbe
push
cmp
arpl
cmp
or
mov
cmp
inc
dec
jge
sub
je
sti
imul
cmp
xchg
jmp
iret
inc
in
test
(bad)
cwde
sub
jmp
retf
mov
jl
jae
nop
mov
push
mov
mov
sbb
jo
sub
data16
dec
imul
pop
test
xchg
sbb
mov
movs
mov
mov
popa
or
in
add
in
push
inc
adc
pop
xchg
cwde
call
lock
inc
inc
iret
and
test
call
lods
cmps
arpl
fadd
out
sub
push
xchg
mov
cwde
adc
sar
cld
loopne
lahf
mov
sti
nop
adc
dec
mov
iret
or
xchg
shl
xchg
sub
inc
adc
cmps
out
xor
sti
aaa
in
xchg
cmp
leave
stos
add
fdivrp
stc
retf
mov
add
xchg
in
lds
sbb
mov
inc
xchg
pop
push
jnp
sub
mov
cmp
push
xor
pop
jge
push
or
xor
das
lods
jb
push
or
mov
test
sbb
xchg
lahf
or
mov
pushf
jmp
inc
inc
stos
aaa
ret
add
or
xor
inc
jp
pop
mov
lock
push
or
shl
xchg
jnp
inc
ins
mov
xchg
jno
inc
cmp
shl
inc
dec
xor
mov
xor
loop
ds
mov
das
fsubr
clc
jge
popa
ins
add
das
aas
sbb
ret
jno
dec
inc
jns
(bad)
jae
sub
sub
xchg
enter
sti
adc
retf
(bad)
lahf
jmp
fcmove
dec
adc
daa
mov
cmp
call
xor
lods
std
je
xchg
and
popa
push
push
jmp
and
movs
mov
fwait
xor
cmps
dec
fnsave
inc
xchg
cmp
jle
jle
stos
retf
push
outs
stc
sbb
rcr
sub
push
cmp
shl
gs
sahf
or
xchg
pop
in
inc
test
pop
leave
mov
daa
call
int
call
movs
fistp
push
stos
es
loopne
out
out
mov
dec
sub
shr
jmp
jo
mov
or
cmp
and
pushf
mov
xchg
ret
xchg
push
enter
dec
ret
xor
xlat
pop
mov
or
inc
(bad)
sti
dec
int3
leave
les
mov
ret
inc
or
sub
aas
(bad)
(bad)
cdq
call
(bad)
add
lahf
mov
mov
xchg
fwait
push
ins
test
loope
add
mov
hlt
mov
mov
cmps
dec
out
gs
loop
(bad)
mov
inc
cmp
pop
jecxz
sbb
xchg
mov
jbe
mov
out
push
cmp
or
xchg
pop
sbb
push
std
repz
pop
arpl
pushf
fwait
jae
scas
dec
shl
enter
jbe
xor
xchg
arpl
mov
ror
mov
pop
test
dec
sbb
fs
test
push
popf
int
xchg
xlat
loop
fidiv
dec
pop
adc
scas
cmps
popa
and
das
leave
jbe
shr
fldenv
adc
ror
ss
push
pushf
xchg
popf
jmp
jb
stc
jbe
stc
dec
sahf
loope
(bad)
(bad)
lock
mov
or
xor
sbb
mov
push
push
jae
rcl
(bad)
js
fild
test
xor
pop
(bad)
adc
dec
test
aam
jns
push
loop
add
sbb
das
push
jo
loope
sbb
js
push
mov
in
push
call
inc
fist
push
sti
dec
xor
pusha
das
aad
xor
cwde
xchg
pusha
adc
and
push
jl
fs
sub
mov
lds
sub
outs
push
mov
and
xor
mov
loopne
xchg
mul
in
sbb
dec
inc
mov
aam
(bad)
ret
cdq
bound
xor
fcmovnu
retf
jmp
pop
and
nop
arpl
in
sub
jge
shl
add
or
xor
mov
push
(bad)
shl
push
xor
fs
mov
xor
mov
bound
cmp
mov
gs
fs
or
push
cdq
test
test
add
scas
cmp
jb
xchg
stos
pop
aam
out
ins
xchg
xchg
mov
xor
int3
outs
push
sar
sub
xor
daa
and
add
(bad)
movs
lahf
leave
xlat
gs
mov
lods
xchg
add
icebp
ret
or
cmp
fwait
push
push
pop
aad
test
cwde
sub
repz
dec
mov
xchg
arpl
jns
and
cmp
push
cmp
xchg
adc
retf
inc
je
mov
dec
sub
iret
cmp
pop
xlat
or
test
mov
xchg
sub
push
stos
popf
icebp
adc
xor
sbb
enter
mov
pop
cs
hlt
adc
fstp
xlat
jne
popa
inc
mov
push
out
mov
and
mov
jb
sbb
repnz
imul
out
leave
rcr
xchg
or
movs
and
and
push
lods
jmp
fdiv
adc
adc
mov
mov
xchg
or
es
in
bound
pop
inc
cmps
pusha
out
push
addr16
cmps
shl
or
sbb
stos
les
push
sbb
mov
int
mov
jle
and
ficomp
hlt
mov
aas
cmp
div
xchg
sub
gs
arpl
in
pop
into
inc
mov
mov
and
imul
jmp
and
in
out
inc
dec
fdiv
inc
xor
pusha
push
push
adc
idiv
push
dec
pop
pop
and
std
fcom
fimul
sub
ja
lods
test
loop
scas
dec
mov
jecxz
pop
sub
push
sub
pop
add
stos
setae
sub
dec
push
xor
xor
imul
inc
mov
and
ret
retf
adc
mul
(bad)
call
mov
and
cmps
xor
jnp
mov
or
push
addr16
sbb
fidiv
jbe
adc
xchg
inc
(bad)
mov
mov
into
aad
into
icebp
push
stc
add
loop
ins
scas
out
rcl
pop
add
jbe
jns
inc
cdq
pop
bound
ins
push
leave
out
fadd
dec
jno
cmp
xor
pop
pop
sub
mov
sbb
push
pusha
adc
push
mov
xlat
push
(bad)
clc
outs
pop
in
push
mov
sbb
sub
lock
xor
sbb
mov
sub
sub
adc
int3
ror
(bad)
sub
adc
rcr
mov
aad
pop
test
add
xor
and
dec
out
retf
movlps
add
retf
or
mov
sbb
aaa
jmp
pop
or
push
in
lods
fdecstp
sbb
mov
push
retf
lods
jp
jno
popa
adc
sub
cmp
adc
adc
lods
jg
sahf
das
out
cmp
in
div
pop
pop
test
mov
push
jne
scas
(bad)
(bad)
inc
aas
adc
loop
test
cmp
push
fmul
push
xchg
jnp
xor
xchg
das
(bad)
push
xor
mov
mov
push
and
mov
(bad)
pop
(bad)
aas
inc
int3
adc
sbb
cmp
push
popf
retf
loopne
cs
ja
lahf
add
ss
cmp
(bad)
sub
dec
mov
xor
inc
sub
push
sub
ss
dec
popa
and
xor
aad
hlt
xchg
enter
cmps
out
scas
ret
leave
pop
cs
dec
stos
mov
or
ins
mov
push
es
call
popa
sbb
sub
test
lods
rol
xchg
retf
add
jmp
dec
inc
adc
xchg
adc
and
aam
or
scas
int
cdq
sub
or
dec
das
adc
loopne
(bad)
mov
inc
push
push
mov
ja
sbb
nop
mov
inc
adc
mov
sbb
stc
mov
cmp
mov
enter
jne
xor
popf
adc
jle
in
mov
and
xchg
pop
je
out
bnd
fcom
dec
xchg
mov
mov
cmp
mov
mov
inc
jne
dec
push
je
adc
fcomp
sti
mov
inc
adc
mov
or
mov
push
stos
pcmpgtb
sbb
pop
sbb
or
retf
mov
cdq
in
test
icebp
rol
inc
(bad)
jb
shl
shl
inc
(bad)
out
hlt
sbb
sub
(bad)
xchg
lods
mov
mov
gs
xor
or
(bad)
and
rcr
sbb
dec
jmp
mov
xchg
loopne
push
cmp
cld
xchg
(bad)
loop
cs
push
nop
mov
shl
jbe
and
cld
or
mov
outs
or
ds
fnstsw
lahf
shl
outs
rcr
push
xchg
iret
mov
and
adc
fdiv
inc
or
inc
out
mov
push
setns
scas
and
xchg
mov
or
jle
mov
popa
cmp
or
shr
cwde
xor
jb
stos
mov
stc
gs
add
mov
das
add
ret
popa
inc
pusha
rcr
lahf
add
jbe
pop
jp
mov
gs
push
adc
cli
mov
mov
repz
fs
dec
sbb
mov
fs
pop
cmc
mov
or
cmps
cmp
dec
in
mov
add
sbb
inc
or
inc
jbe
jmp
sbb
and
mov
cmps
test
sub
jge
fnstenv
iret
dec
(bad)
dec
sahf
or
call
inc
ins
sbb
loope
xchg
sti
mov
pop
nop
cmp
add
mov
test
fdivr
add
jno
scas
aaa
imul
loope
or
mov
jae
inc
pop
call
out
call
or
cmc
out
test
sbb
jno
dec
jbe
(bad)
outs
inc
test
or
fsubr
js
add
test
seto
ja
mov
dec
fstp
inc
cmps
or
push
repnz
repz
mul
push
shl
pop
popfw
aaa
out
mov
dec
aaa
xchg
inc
jle
sbb
gs
stos
les
xadd
cmp
bound
xchg
data16
mov
push
pop
(bad)
xchg
sbb
out
add
and
test
sub
mov
dec
push
fs
clc
movs
push
mov
(bad)
xor
dec
and
mov
pop
bound
xchg
inc
repnz
loopne
mov
mov
and
(bad)
mov
daa
jo
push
hlt
(bad)
dec
and
mov
shrd
fwait
scas
cmp
ins
sub
sub
sub
xor
adc
(bad)
jle
push
test
sbb
and
jle
cmp
fcom
out
cmp
nop
out
test
popf
xchg
push
data16
jle
fnstcw
stc
cs
xchg
push
popa
stc
loope
xchg
in
sahf
jg
pop
add
iret
divps
jno
sub
lods
lahf
and
repnz
mov
pop
jne
std
movd
enter
in
sub
fs
cs
mov
jle
push
and
cmc
mov
sti
push
push
add
fild
pop
push
mov
mov
popf
jnp
lods
jmp
or
nop
in
inc
sub
lea
push
jp
mov
scas
lods
push
stc
iret
push
fcom
adc
cmps
and
sbb
xchg
mov
ret
sbb
hlt
pop
jmp
clc
push
lods
cmp
sub
xchg
xor
out
mov
(bad)
clc
nop
jmp
dec
or
imul
jnp
jno
xchg
loope
daa
pushf
lds
jle
pop
test
cmp
popf
dec
lock
jb
lds
aaa
xchg
retf
repnz
ficom
jo
and
mov
mov
dec
je
dec
jnp
loop
mov
add
out
xchg
jnp
mov
test
xor
in
aad
push
xor
mov
add
mov
mov
popf
and
(bad)
sub
lods
jnp
nop
jo
popa
cs
scas
xor
hlt
imul
fnstcw
out
jnp
mov
pop
fiadd
movs
int3
shl
int
pop
loope
push
data16
ror
jnp
mov
dec
loope
bound
pop
std
pushf
lahf
ds
clc
inc
push
and
sub
sbb
inc
cmp
cdq
jecxz
and
mov
mov
sbb
ret
ja
inc
dec
sbb
and
xor
xor
shl
movs
and
adc
jne
dec
cwde
inc
push
nop
cmps
punpckhdq
loop
fsub
ss
xor
das
adc
lahf
out
aad
push
(bad)
fisttp
jnp
sahf
jg
aaa
leave
mov
xchg
sbb
xor
add
loopne
fwait
or
jle
cmp
dec
mov
aaa
mov
sbb
xchg
dec
xchg
neg
das
call
call
dec
lods
add
test
call
dec
and
cmp
xor
jae
mov
pop
movs
xchg
es
scas
leave
push
push
fcomp
push
mov
test
or
lds
std
ror
add
jno
inc
stos
es
stos
and
inc
jmp
pop
ins
mov
and
xor
push
jg
rcr
int3
mov
pop
lock
in
add
cmp
cwde
push
in
in
sti
adc
or
inc
call
sbb
or
inc
push
cmps
loopne
and
test
mov
pushf
jmp
or
arpl
out
js
pushf
pop
jnp
pop
cmp
out
int3
imul
in
cwde
inc
mov
push
addr16
jae
test
mov
imul
mov
cmc
mov
or
dec
sbb
jne
fucomp
sub
data16
stc
enter
push
mov
jb
jecxz
push
dec
and
dec
dec
inc
add
push
stc
push
daa
cmp
xchg
sbb
out
jle
dec
sbb
jl
jno
jge
xor
jecxz
test
jae
inc
sbb
sti
mov
movs
dec
xchg
mov
pop
imul
jmp
popf
ror
(bad)
mov
outs
inc
jae
mov
xchg
sbb
(bad)
lods
addr16
out
jecxz
ret
jns
jno
loop
pop
lods
out
aad
jmp
and
and
mov
div
es
test
xchg
sbb
imul
dec
mov
fs
push
mov
fimul
rol
lods
adc
cwde
bound
int3
mov
pop
retf
movs
stos
les
xchg
dec
add
cmps
and
dec
inc
stos
fs
in
jno
mov
sub
xchg
push
scas
push
mov
pop
pop
(bad)
not
xor
out
cdq
add
retf
pop
stc
inc
fcmovb
adc
fiadd
lock
inc
rcl
pop
(bad)
jmp
sub
dec
div
lods
sub
inc
jecxz
pop
outs
xchg
inc
push
fs
loopne
cmp
xchg
push
ss
and
sbb
repnz
adc
(bad)
fldcw
push
cmp
jmp
xchg
lds
(bad)
pop
fimul
adc
shl
loopne
xchg
sub
push
nop
neg
inc
mov
and
adc
mov
test
into
out
addr16
fadd
mov
mov
pop
mov
into
sar
inc
out
aaa
push
mov
mov
xchg
fidivr
(bad)
jle
or
pushf
test
gs
jbe
push
dec
cwde
push
(bad)
iret
add
outs
lods
rcl
and
(bad)
aas
xchg
lods
cmp
sahf
retf
jnp
iret
aad
adc
mov
adc
fs
mov
cdq
loopne
mov
ror
inc
rol
ins
(bad)
fimul
fs
ss
in
cdq
push
jae
push
cmps
mov
pop
movs
xchg
(bad)
idiv
lods
into
mov
cmp
gs
pop
push
mov
cmp
xor
and
fcomp
add
inc
jle
jp
aaa
xchg
inc
cli
and
sar
mov
popa
or
mov
ss
cli
jl
lahf
mov
cs
mov
adc
div
jne
into
retf
pop
sbb
movs
out
and
and
loop
ins
xor
ds
mov
sbb
mov
push
sub
push
test
stc
leave
or
shl
sub
leave
ret
iret
mov
lds
xor
retf
xchg
jns
add
in
cmp
jmp
idiv
adc
adc
ret
and
ins
add
pop
adc
popf
cmps
mov
xchg
test
or
or
and
xchg
aam
push
popa
pop
test
dec
inc
xor
sbb
cwde
inc
adc
jg
fcmovu
loop
popa
push
hlt
mov
adc
cdq
aad
jmp
push
inc
gs
mov
cwde
adc
push
clc
mov
mov
adc
dec
(bad)
fnstcw
xor
add
sbb
ret
jp
sbb
and
sub
xchg
cmp
mov
dec
or
xchg
(bad)
icebp
adc
pop
jne
sar
cmp
adc
mov
hlt
push
(bad)
ja
scas
ret
dec
sub
stc
or
jo
adc
aas
in
fisubr
call
call
cdq
dec
inc
push
popa
aas
dec
sub
and
dec
sub
aaa
enter
imul
cdq
pushf
push
jbe
cld
mov
stc
shr
adc
xchg
ja
clc
(bad)
and
jns
rcl
and
stos
xchg
aam
pop
sub
dec
sub
out
mov
sub
unpcklps
pop
mov
and
xchg
mov
out
in
dec
mov
stos
mov
add
jae
and
neg
mov
pop
mov
rcr
xchg
in
lds
not
or
pop
and
and
repnz
ror
sub
dec
push
shl
aam
pusha
scas
push
aaa
pop
adc
das
popa
add
xor
test
in
inc
nop
stos
dec
out
cwde
in
sub
or
xor
popf
(bad)
out
loop
(bad)
imul
ins
mov
mov
rol
rol
loope
mov
adc
repnz
push
sub
adc
jg
xchg
cwde
or
xchg
call
rcr
sti
std
push
sbb
xchg
adc
cmp
movs
aam
and
push
add
cmp
scas
arpl
adc
icebp
shl
out
scas
or
push
inc
pop
cwde
stc
pop
inc
sti
test
and
enter
jnp
cmp
jbe
int
jge
call
xor
sbb
pop
pop
pushf
dec
mov
pop
popf
icebp
or
div
push
shr
and
sbb
or
and
lea
sbb
dec
mov
fistp
mov
mov
sbb
int
fwait
mov
aam
das
aaa
add
jp
jns
ja
sbb
xor
push
jno
ret
lods
xlat
popf
pop
pushf
cmps
or
in
xor
iret
inc
jae
sub
xchg
sar
push
xchg
cmps
xchg
push
pop
adc
or
mov
test
clc
add
addr16
pop
div
dec
shr
mov
retf
rcl
fidiv
or
push
leave
push
retf
inc
dec
adc
std
adc
mov
mov
mov
mov
inc
repz
ret
scas
out
arpl
icebp
dec
loopne
shr
xchg
loopne
mov
mov
push
adc
mov
int3
lea
pop
sbb
mov
fmul
iret
(bad)
fs
sub
jmp
jp
or
mov
fwait
pop
adc
nop
cmps
push
mov
jp
ret
aad
xor
inc
xlat
push
inc
push
mov
outs
lock
xor
test
pop
lods
xor
jno
jl
mov
movs
shl
outs
xor
xor
call
mov
sbb
mov
mov
xchg
sahf
pop
movs
cmp
adc
xchg
mov
cmp
dec
sub
jb
xchg
sub
jne
fmul
and
clc
fstp
outs
mov
adc
add
jb
lahf
lds
ds
hlt
call
jg
sub
jmp
call
mov
pop
in
les
in
aad
jb
dec
push
mov
lods
jecxz
pop
sub
xor
repnz
mov
shl
gs
mov
lods
int
data16
and
adc
call
ror
inc
leave
and
push
and
sub
sti
or
push
xor
shl
pop
pop
int
test
jl
mov
pop
xor
jle
leave
jmp
addr16
adc
test
jb
cmp
es
das
test
xchg
jmp
push
dec
add
sub
mov
xor
test
imul
mov
test
xor
gs
test
inc
lahf
push
lods
(bad)
mov
xor
sub
clc
pop
pop
mov
sbb
xor
pop
xor
sti
mov
add
out
(bad)
clc
sbb
scas
rcr
scas
outs
adc
xchg
sub
and
repnz
leave
add
xor
out
cmps
dec
push
pop
pusha
jge
xchg
mov
push
ret
aas
pop
cmp
sub
and
shl
sbb
cmps
retf
bound
fcmovb
adc
mov
imul
push
cmps
xor
jb
mov
mov
jle
mov
bound
fprem1
jg
ror
ins
push
ret
sub
ret
fst
push
inc
fnstenv
int
test
rcr
ins
sub
bound
or
scas
mov
out
and
inc
xchg
and
push
mov
xor
test
stc
mov
inc
int3
adc
mov
sahf
jo
cld
cld
mov
cli
xchg
adc
xor
gs
in
mov
loop
aaa
sahf
ds
sbb
inc
add
dec
loopne
cmp
adc
shl
call
imul
sub
sbb
xor
cmp
scas
aad
cmp
(bad)
hlt
in
mov
jge
cmp
cwde
movmskps
cs
pop
xor
cmc
ins
call
jno
fbstp
pop
xor
test
xor
mov
pop
stos
in
xchg
sar
call
inc
ficomp
retf
in
in
xchg
jb
xchg
clc
adc
push
shr
mov
pop
jne
sub
xor
sub
adc
adc
push
xor
clc
movs
jg
sbb
inc
mov
mov
ret
mov
cdq
rcr
mov
in
dec
imul
out
mov
stos
sub
(bad)
ret
push
fist
xchg
push
pop
imul
lahf
repz
pop
jl
lds
xor
add
xchg
mov
push
les
add
dec
stc
cwde
cmps
jge
fwait
les
mov
outs
dec
jo
add
in
jl
out
dec
gs
adc
lds
ds
xchg
aad
in
je
xchg
sbb
mov
add
cli
test
rol
inc
dec
dec
mov
jbe
pop
inc
loopne
adc
mov
and
cmp
fild
lea
test
mov
test
jg
push
jnp
adc
adc
outs
xor
sahf
fdivr
lahf
fnstcw
dec
jae
mov
mov
and
movs
leave
aaa
inc
jmp
imul
lea
addr16
jnp
sub
ins
cli
jo
add
and
or
mov
sub
sbb
daa
mov
mov
movs
sbb
push
mov
mov
cmc
dec
and
sub
xlat
ins
ss
mov
cmps
gs
bound
(bad)
stc
mov
dec
neg
(bad)
jb
call
ja
out
mov
inc
mov
xor
and
mov
sbb
jmp
pop
xor
pop
sbb
lods
dec
mov
in
(bad)
or
pop
fwait
hlt
outs
(bad)
pop
cmp
dec
and
sub
icebp
adc
clc
and
mov
rcr
test
pop
cmp
cli
dec
bound
rcl
sub
cli
movs
cld
stos
rcl
inc
scas
xor
dec
nop
outs
inc
sbb
js
lds
stos
xor
jmp
scas
js
lahf
cwde
pop
cs
sahf
adc
adc
inc
inc
shr
xor
push
or
inc
push
dec
icebp
fistp
mov
jnp
pop
jg
adc
call
and
xlat
scas
sub
add
clc
xlat
xchg
fstp
sbb
mov
xor
and
and
movs
(bad)
adc
not
enter
or
xor
and
mov
sbb
jmp
(bad)
test
arpl
movs
movs
jle
jnp
and
out
xchg
call
ret
push
ins
mov
xor
cli
sbb
and
out
xor
prefetch
cmc
dec
push
add
jae
push
inc
fst
lds
test
push
push
add
ret
popf
jp
stc
xchg
bt
and
mov
jg
std
dec
sti
pop
repz
pop
pushf
fsubr
adc
bound
mov
add
int3
pop
loopne
fsubr
pop
icebp
mov
mov
rcr
inc
ss
add
loop
out
push
add
inc
add
sahf
xchg
not
ret
stos
dec
in
inc
pop
sbb
hlt
aaa
icebp
and
repz
in
dec
adc
sub
add
dec
jmp
out
into
imul
in
lahf
(bad)
pop
or
sbb
data16
fucompp
imul
jno
stos
pusha
rcl
pop
pop
xchg
sbb
out
cmp
or
cmps
push
or
shl
pushf
mov
jmp
ror
scas
es
popf
mov
into
or
out
js
or
mul
jmp
or
or
jl
cmc
and
call
lahf
mov
sbb
in
pop
(bad)
jp
fadd
or
cmp
hlt
scas
and
jns
sar
push
fdivr
ds
lock
test
shr
inc
test
ret
cli
xchg
stos
(bad)
out
jmp
arpl
cmp
fstp
in
sub
mov
sub
(bad)
sbb
in
pushf
loope
or
repnz
mov
les
adc
cmp
out
xor
push
std
xchg
pop
sub
inc
sub
ins
cmp
sti
jle
xor
fs
lahf
or
xchg
and
bound
mov
popf
mul
sar
dec
push
cdq
fwait
shl
cmp
mov
inc
retf
mov
push
inc
adc
and
out
adc
mov
inc
xchg
cmp
and
repz
add
enter
shl
test
fst
cmp
ja
adc
pusha
dec
mov
lock
retf
xlat
and
sbb
push
xchg
or
jg
fs
les
sti
cmc
das
(bad)
mov
fprem
xor
inc
dec
mov
mov
iret
push
cmp
pop
fsub
or
sar
inc
sbb
dec
repz
xor
inc
xchg
fdiv
je
mov
dec
dec
pop
out
sbb
dec
dec
cmp
loope
movs
xor
sbb
test
addr16
int3
mov
ja
mov
(bad)
in
adc
(bad)
pop
lods
sub
or
repz
cmp
fisttp
sbb
ret
jge
(bad)
pop
(bad)
jge
ins
int
inc
push
mov
pop
push
jmp
xchg
pushf
pop
xor
xchg
jnp
rol
cli
les
jg
ins
ss
jae
sahf
cmp
add
rep
popf
adc
sub
add
repnz
ror
mov
aaa
loopne
out
inc
adc
in
fisttp
daa
sbb
ret
enter
test
in
add
rcr
std
push
sbb
iret
push
repnz
mov
lods
ret
sub
push
sub
jnp
ja
ror
mov
bound
(bad)
sbb
sbb
adc
mov
jb
std
ds
mov
xor
out
les
mov
test
add
sub
dec
mov
imul
jp
inc
neg
mov
cli
xchg
cwde
pop
xor
out
dec
xor
and
mov
aaa
and
adc
popa
cld
and
sbb
pop
push
mov
inc
jecxz
aaa
(bad)
xchg
and
test
inc
in
jno
mov
lods
adc
add
xchg
pop
repnz
mov
es
xor
pop
adc
js
sbb
push
ja
mov
loopne
pop
jl
inc
stos
sar
retf
mov
xlat
pop
cmp
pop
out
jmp
xor
outs
loopne
push
outs
sub
inc
(bad)
sbb
and
addr16
add
lea
popf
jp
in
fwait
data16
adc
mov
rol
in
adc
sbb
dec
sti
cs
or
add
fist
sbb
pop
and
dec
test
push
cmp
mov
mov
rcr
and
pslld
sbb
xor
retf
fisubr
push
aam
jle
sub
dec
cmp
aad
jmp
arpl
xchg
scas
lds
sar
ret
mov
dec
fimul
movs
shl
shl
mov
xlat
add
cmc
gs
jo
pop
fadd
arpl
inc
and
int
push
cmp
aam
pop
or
xor
outs
xchg
movs
mov
xchg
xchg
lds
ins
jo
js
xchg
xchg
cmps
dec
xor
mov
adc
mov
xlat
push
dec
and
cmp
and
lds
mov
adc
loopne
sahf
mov
sahf
xchg
cld
mov
ja
fisttp
ror
neg
cmc
inc
out
pusha
lahf
xchg
loop
ins
adc
cmp
in
sub
xchg
mov
push
rcl
in
fsubr
cmp
out
xchg
retf
mov
inc
movs
mov
lea
mov
mov
xor
(bad)
dec
aas
add
test
es
mov
or
mov
mov
iret
dec
int3
enter
push
jmp
leave
mov
mov
out
retf
mov
xor
popf
jge
shr
sub
inc
test
mov
pop
add
shr
push
in
shl
mov
ja
fucomip
jp
shl
(bad)
pop
mov
inc
daa
fdivr
ret
jp
cdq
mov
bnd
out
xor
arpl
mov
push
push
fistp
cmps
dec
std
adc
jmp
sar
pop
pop
sub
daa
jo
add
push
dec
rcr
dec
pop
jnp
loopne
dec
push
xchg
stos
adc
mov
or
inc
ins
push
ins
fstp
fnstenv
or
(bad)
jmp
(bad)
out
add
xor
ret
int
inc
push
xchg
mov
add
in
fsub
stos
cmps
xor
call
mov
les
pusha
leave
dec
pushf
xlat
mov
xor
loop
in
xchg
ja
je
and
leave
adc
(bad)
jo
dec
ds
ror
push
adc
daa
mov
sar
mov
pop
push
fprem
dec
pushf
push
stos
and
cmps
out
or
mov
inc
test
xor
std
fiadd
test
inc
cmp
add
out
lock
sbb
xor
in
(bad)
call
adc
pop
bound
imul
push
mov
jno
test
and
(bad)
sbb
sti
in
push
ins
out
ds
sar
xor
pop
add
aam
loope
jmp
xor
push
pop
pusha
retf
mov
mov
ins
lods
and
lock
fadd
aad
dec
add
fidiv
inc
and
add
xchg
inc
dec
(bad)
sbb
std
jno
mov
sbb
sar
inc
iret
stos
ficomp
shr
pop
sub
push
gs
je
out
jns
js
popa
repnz
ins
inc
xchg
test
sub
lea
or
cmp
push
mov
pop
hlt
mov
add
lea
imul
(bad)
aad
imul
cmp
fcom
jl
cmp
imul
sub
imul
cdq
xchg
sbb
inc
outs
inc
in
mov
je
mov
(bad)
dec
retf
and
aam
push
dec
push
cwde
es
xchg
ret
sbb
sub
es
enter
shld
arpl
cmp
push
xchg
cmc
cld
scas
aaa
sar
mov
or
mov
pop
pop
in
call
mov
inc
and
aam
cmp
iret
xchg
sti
add
pop
xchg
mov
mov
xchg
or
ins
sbb
xor
dec
(bad)
inc
test
imul
xor
cmp
rol
inc
dec
icebp
jg
xlat
pop
cs
mov
pusha
xchg
inc
push
xor
fsub
mov
sub
leave
dec
xchg
pop
dec
movs
add
jl
cmp
std
pop
or
or
jno
inc
fisub
mov
out
jmp
xchg
cmp
jmp
call
xchg
push
nop
mov
test
outs
xchg
dec
pop
cmp
push
fdivr
push
cmp
and
or
int3
mov
mov
xchg
dec
scas
inc
xor
sbb
push
fild
cmp
sub
cmp
jge
bound
fdivr
sti
scas
movs
outs
mov
mov
push
fmul
cli
adc
rcr
loope
or
repnz
pop
xchg
(bad)
jns
dec
and
addr16
mov
inc
inc
jp
adc
lds
sub
xchg
jg
mov
sub
ds
in
cmc
pop
(bad)
mov
mov
cmp
jmp
into
cmp
test
outs
cmp
rol
mov
mov
rcr
retf
in
ds
test
sub
ins
push
pop
cdq
scas
cmp
cmp
pusha
ret
jmp
xchg
adc
or
or
into
fmul
jbe
in
test
mov
sbb
cwde
out
(bad)
pop
inc
into
jnp
je
mov
outs
add
adc
shl
inc
aaa
std
arpl
mov
into
add
xlat
dec
retf
call
push
or
in
mov
mov
dec
cwde
xchg
jbe
mov
arpl
inc
sbb
fbstp
push
inc
sbb
and
pop
lea
cmp
movs
in
and
out
push
ret
sahf
mov
sub
addr16
mov
inc
cmp
sub
popf
and
sub
gs
sbb
adc
ret
xchg
xor
frstor
mov
sub
mov
bswap
aam
cdq
lods
lahf
sub
sub
jmp
mov
inc
adc
mov
pop
xor
fs
mov
ret
jg
push
and
or
mov
and
dec
jae
jp
das
pop
ja
adc
arpl
sub
xor
in
and
inc
icebp
popf
lahf
sbb
mov
push
mov
les
pop
dec
adc
pop
xchg
cmps
pop
retf
movs
popf
pusha
mov
dec
mov
rcl
into
and
mov
retf
aam
and
cmp
adc
mov
inc
mov
mov
xlat
push
xchg
arpl
pop
js
sub
les
xor
and
and
fucomp
frstor
adc
jl
les
lea
mov
pushf
fldcw
push
pop
(bad)
jmp
dec
xor
push
adc
pop
jmp
mov
add
scas
mov
clc
hlt
jne
or
xchg
loop
cmp
or
popf
arpl
shr
ins
icebp
and
mov
sub
fidiv
sub
aam
fadd
pop
stos
shl
imul
push
xor
mov
mov
sub
dec
push
adc
(bad)
test
xchg
inc
rcr
retf
pop
mov
popa
nop
shr
push
loopne
inc
iret
icebp
in
shr
sbb
xchg
jo
jecxz
movs
mov
adc
jecxz
xor
jecxz
out
jl
cmps
sahf
les
inc
and
test
fst
sti
mov
push
mov
push
sub
dec
sbb
sub
cld
fist
dec
cmp
push
mov
cmc
hlt
push
xor
cmps
fs
ins
pop
imul
xor
xor
pop
dec
call
and
test
xchg
or
loopne
jo
jg
or
or
jle
icebp
rcr
ins
loop
xchg
push
cli
push
pusha
cdq
sub
push
pop
aad
clc
jno
push
jmp
dec
or
ror
xchg
xor
mov
xor
jecxz
iret
fsub
add
pop
imul
cmps
arpl
stos
mov
sahf
psubb
jg
sbb
xchg
pusha
retf
enter
xor
xchg
fild
sbb
push
jmp
pop
ins
mov
mov
dec
and
jbe
fcomi
xlat
addr16
mov
mov
js
test
mov
push
aam
dec
push
jge
add
mov
mov
scas
pop
push
mov
sbb
in
jb
inc
iret
pop
ins
pop
jns
loopne
in
sub
push
rol
xlat
bound
pop
mov
jp
mov
sbb
aam
aaa
(bad)
xchg
and
xor
jle
arpl
scas
jo
xchg
xchg
(bad)
dec
push
cmp
ja
stc
cmp
jl
enter
jg
jnp
gs
imul
pop
adc
mov
and
add
retf
in
xchg
lahf
and
pop
in
push
cmp
add
js
cmp
out
and
jmp
add
jl
mov
mov
outs
dec
mov
sub
sub
clc
aas
dec
retf
push
aas
rol
lods
xchg
sbb
out
fld
sub
ins
xor
outs
neg
dec
rcl
and
pop
inc
add
adc
ret
out
adc
xchg
cmp
leave
add
adc
pop
fdiv
jmp
cld
add
std
xor
or
pop
xor
(bad)
mov
add
shr
loope
inc
and
add
dec
push
(bad)
jne
movs
adc
addr16
loopne
gs
lea
or
stc
xchg
(bad)
jo
scas
mul
out
sbb
je
xor
test
dec
mov
imul
out
popf
push
jg
pop
adc
retf
pop
sbb
inc
cwde
dec
ss
add
jb
dec
cmp
adc
cmp
cmps
dec
adc
sahf
jb
lods
lahf
xchg
sahf
pop
add
loop
cmp
stc
repz
ficomp
retf
mov
(bad)
rcr
mov
mov
mov
push
push
aas
jle
aad
pop
add
lea
pusha
and
es
aad
mov
sti
cli
cs
lods
nop
adc
out
inc
scas
jne
ja
mov
jge
sbb
push
in
xor
test
mov
test
movd
inc
mov
or
rcr
sti
les
jl
mov
les
pusha
inc
mov
mov
sbb
pusha
sub
fadd
mov
sbb
ja
mov
je
lods
lods
jb
call
scas
ss
dec
push
mov
inc
lea
cmp
sbb
and
push
sbb
cmp
jg
cs
push
int
arpl
pop
test
dec
inc
mov
xor
xchg
cmp
shr
pop
stc
lods
adc
movs
arpl
push
dec
std
xor
and
retf
add
aaa
movhps
push
repz
pop
add
pop
mov
pushf
lods
mov
push
xor
daa
jp
xchg
xadd
loop
xor
mov
stos
adc
sahf
push
pop
pushf
xchg
cmp
(bad)
pop
fs
or
push
test
jle
cmps
fidivr
stos
xor
(bad)
test
das
mov
ror
cmp
jmp
adc
xor
xchg
cs
ins
imul
mov
cli
add
xchg
and
cmp
sbb
idiv
sbb
leave
mul
je
add
jnp
pusha
out
xchg
fidivr
jl
jb
push
pop
inc
dec
xor
scas
cs
sub
dec
dec
push
cmps
jbe
mov
inc
and
xchg
mov
push
movs
cmp
pop
enter
aam
adc
mov
xchg
mov
pop
mov
das
int3
inc
hlt
cs
fcmovnb
dec
fisttp
in
xchg
mov
dec
mov
ins
and
in
cmp
(bad)
fild
add
outs
jbe
loope
cmp
ja
cmp
ins
sub
cmc
jbe
xchg
inc
sti
jo
push
add
test
addr16
jae
jecxz
mov
pop
mov
enter
pusha
add
ss
sub
adc
mov
lods
lods
les
sub
ja
push
pop
addr16
sar
cli
xor
adc
rol
loopne
lds
cmp
test
ins
ret
push
mov
sub
daa
hlt
add
pop
fmul
jns
in
retf
gs
jle
jmp
xchg
pop
je
in
cmp
mov
jns
pop
add
pmulhuw
push
or
xchg
aad
xor
pop
pop
int
mov
out
mov
dec
and
mov
mov
mov
out
xchg
push
push
outs
outs
(bad)
xchg
aam
add
sub
add
xchg
cbw
icebp
sub
xchg
push
popa
push
pushf
pop
dec
sahf
cmp
mov
xor
push
(bad)
mov
mov
daa
sbb
pop
mov
ficom
not
ins
xlat
loopne
adc
jmp
push
pop
movs
(bad)
js
lea
cmp
mov
sub
cdq
and
sbb
stc
or
ficomp
add
jns
push
sub
daa
dec
sub
push
lahf
jno
push
outs
sub
push
mov
ret
sbb
xor
xchg
mov
das
ret
rcr
mov
lods
sbb
xchg
popa
mov
mov
mov
adc
shl
or
cmps
imul
test
pop
dec
cmp
mov
add
xchg
sbb
adc
clc
add
call
mov
fs
push
sbb
movs
stos
jle
ss
repnz
adc
clc
jb
outs
dec
jl
cmps
cwde
add
push
or
enter
xor
pop
(bad)
mov
vmwrite
push
dec
lods
jo
jbe
sub
pop
or
adc
inc
adc
xchg
mov
sti
jae
in
sub
pop
stc
sti
sbb
stos
icebp
fstp
int3
jmp
(bad)
repnz
sbb
mov
das
push
fs
add
clc
out
fcomp
jne
in
xor
cmc
adc
jmp
xchg
pop
fisubr
sti
sahf
test
pop
je
arpl
ds
inc
mov
por
movs
or
pop
div
leave
jge
popa
aad
and
out
ja
sbb
ror
add
addr16
ror
jp
addr16
lods
test
mov
pop
jo
inc
adc
shl
inc
out
outs
xchg
inc
dec
add
cld
jno
les
pop
and
mov
push
loope
push
fwait
out
sub
adc
push
pop
imul
out
(bad)
leave
sbb
iret
repnz
sbb
test
cmp
ins
test
aaa
mov
ss
cmps
out
add
add
mov
pop
and
add
jno
stos
(bad)
cmps
cmp
cmp
shl
ret
dec
pop
pop
sti
in
sub
fcmovnb
push
jo
adc
es
jmp
xchg
lahf
mov
outs
and
and
ss
iret
out
and
adc
xchg
push
leave
pop
std
test
ret
xor
sub
out
lea
inc
icebp
repz
mov
fiadd
cmp
iret
sub
xchg
sbb
jmp
and
not
jae
mov
adc
mov
inc
dec
fwait
call
nop
jne
xchg
aas
mov
xor
sbb
or
loop
sbb
push
ret
in
dec
pop
jl
xor
cdq
adc
inc
(bad)
xor
mov
or
push
mov
mov
pusha
push
add
loope
jge
fdivp
sub
stc
lock
fisttp
scas
out
inc
test
mov
in
inc
cmp
adc
xchg
cmps
sub
add
call
imul
mov
aaa
xor
sbb
fist
mov
out
fisttp
fidiv
loope
xchg
jecxz
loopne
or
add
push
inc
mov
cmc
xor
push
imul
imul
adc
sub
xchg
mov
mov
(bad)
cmp
mov
xlat
fldcw
stos
aas
xor
jnp
(bad)
rcl
mov
or
jb
int3
outs
sub
pushf
add
pop
jnp
test
push
shl
add
cld
mov
xor
mov
add
xchg
pop
pop
dec
or
iret
test
jmp
test
scas
rep
ins
dec
fisubr
daa
fcmovu
shr
cmc
or
mov
(bad)
retf
loop
dec
test
pop
jp
push
inc
sub
lahf
jg
mov
sub
dec
push
mov
ret
neg
not
es
bnd
jae
fisttp
imul
jmp
imul
and
stos
pop
inc
jg
stos
jle
adc
loop
hlt
dec
ror
out
mov
jbe
daa
call
loopne
int
fucom
mov
les
cdq
lods
push
or
or
add
cdq
es
add
cwde
jmp
cs
mov
nop
and
test
pop
xchg
mov
les
into
sub
cmc
nop
pop
call
dec
lea
(bad)
stc
xchg
ror
in
push
inc
(bad)
mov
inc
sbb
scas
std
(bad)
ror
pop
shl
jb
(bad)
mov
or
jg
cs
popf
adc
pusha
fsub
xchg
out
push
push
mov
jno
pop
div
mov
mov
jb
lds
fbld
mov
adc
pop
ja
outs
test
jecxz
jmp
fmul
gs
cmp
and
push
adc
and
mov
jne
jge
adc
xor
sub
mov
dec
inc
hlt
mov
xchg
push
shl
std
push
test
sbb
xchg
scas
ins
adc
jg
fsubr
xor
push
(bad)
sbb
and
data16
pop
mul
outs
jg
lds
and
das
shr
dec
das
test
(bad)
cmp
stc
or
cli
rcr
push
pop
in
rcl
dec
rcr
mov
sub
pop
pop
jp
jns
int
jns
sti
pop
pop
pop
nop
mov
ins
aam
push
or
pop
pop
fmul
inc
sub
imul
cli
fisubr
jmp
mov
sub
adc
lods
loop
push
sub
cmp
sub
ins
cld
loopne
jmp
jp
shr
ficomp
push
sar
(bad)
sti
or
sub
mov
ins
in
jmp
cmps
(bad)
sub
mov
retf
bound
sub
jae
loope
inc
aaa
lods
fwait
cmps
xor
mov
jmp
mov
cmps
dec
popf
adc
pop
inc
xor
in
hlt
ror
inc
mov
dec
cmp
loopne
imul
mov
enter
jae
in
shl
das
cmp
arpl
fstp
push
dec
sub
jae
retf
adc
cmp
je
mov
not
es
out
iret
xchg
xor
adc
fnstcw
and
or
scas
fdivr
pop
iretw
enter
ret
mov
movs
sbb
les
dec
pop
sbb
pop
movs
aaa
shr
cmps
(bad)
inc
popa
mov
pop
jmp
and
mov
test
push
jo
mov
xchg
adc
cmp
fldcw
jmp
nop
pop
hlt
leave
in
cld
xor
jmp
call
(bad)
adc
pop
fimul
inc
sbb
std
ret
mul
and
jmp
enter
xchg
icebp
es
shr
aaa
in
test
sbb
cdq
xor
enter
xchg
ins
movs
mov
push
mov
out
rol
cmp
mov
xor
xchg
inc
popf
ror
scas
push
push
bound
mov
aam
jp
jns
in
sub
jo
pop
inc
dec
xchg
rcr
mov
mov
push
lahf
jmp
retf
test
iret
in
cmp
cli
mov
call
mov
ret
data16
inc
push
push
push
pop
icebp
aam
and
shr
aaa
mov
inc
int
imul
jmp
adc
inc
not
int3
xlat
mov
in
sti
add
jecxz
repz
fdiv
mov
inc
sbb
(bad)
cmp
and
gs
or
cmp
fs
jmp
mov
(bad)
neg
xchg
je
inc
ins
lock
(bad)
test
push
xchg
stos
mov
mov
fcomip
mov
mov
in
loopne
mov
out
push
mov
add
sbb
movs
loope
rcr
cmp
jle
adc
ficomp
inc
gs
or
mov
or
icebp
pop
sub
popa
test
mov
je
mov
inc
cwde
inc
sbb
mov
lods
ss
fild
aaa
sbb
out
dec
push
push
(bad)
cmp
rcl
int3
repnz
rcr
sbb
xlat
jmp
cmp
arpl
jle
fdiv
ins
in
ror
mov
cli
and
shl
mov
icebp
xchg
mov
call
mov
test
sub
sar
pop
xlat
adc
xor
(bad)
push
int3
in
cmp
inc
jb
or
sbb
pop
ins
pusha
xor
inc
loope
out
add
push
mov
lods
pop
out
scas
push
repz
ss
add
je
in
cld
mov
jno
inc
in
into
fstp
popf
sbb
rcr
jno
mov
xor
cld
imul
ins
(bad)
hlt
mov
xor
sbb
push
cmp
retf
push
mov
push
mov
pop
inc
dec
cdq
add
and
push
pop
sbb
or
(bad)
int3
adc
xchg
loope
or
popa
or
sub
dec
or
cdq
cdq
icebp
repz
retf
xor
loop
out
pop
mov
mov
push
loop
push
scas
pop
push
pop
or
bound
pop
sub
out
ret
pop
in
loopne
sti
add
lea
xchg
mov
jnp
pop
cs
js
dec
dec
cmp
jp
into
xchg
(bad)
dec
push
adc
mov
nop
ret
cwde
xchg
xor
cld
cmp
js
pop
dec
nop
xchg
pop
xlat
pop
mov
push
dec
lods
ret
lea
jo
out
test
push
push
xchg
test
jne
ss
push
xchg
push
fmul
test
(bad)
push
cs
pop
mov
xor
pop
xchg
push
push
or
movs
cmp
mov
xchg
(bad)
fxch
mov
mov
(bad)
cmp
je
jns
fnstcw
lahf
push
out
mov
cmp
mov
xor
test
sbb
xor
jbe
sub
pusha
mov
in
add
jg
cmp
movs
sub
jl
push
leave
add
out
jne
inc
mov
adc
out
daa
jnp
fimul
mov
xor
inc
test
mov
loopne
adc
pushf
stos
jnp
test
mov
push
loopne
ja
xchg
inc
in
push
fmul
and
inc
jmp
lods
cmp
sbb
jne
mov
ret
hlt
popa
sti
push
cmp
pusha
xor
cwde
(bad)
enter
sub
dec
xor
cmp
loope
movs
mov
xchg
xchg
sbb
repz
lahf
pop
lea
jne
sub
push
cmovl
xor
mov
xor
pop
neg
mov
push
xor
cmp
les
sbb
mov
pusha
arpl
fcomp
cmp
add
xor
pusha
adc
fbld
icebp
adc
inc
add
cmp
mov
cmps
xchg
lods
lods
lahf
cmp
imul
in
cmps
popf
ror
mov
cdq
(bad)
in
loopne
(bad)
test
pop
and
and
lock
xchg
movs
cdq
sbb
nop
jle
(bad)
cmp
sahf
push
hlt
pop
jmp
(bad)
sub
je
in
loope
lds
cs
mov
pop
xchg
cmps
in
add
pop
adc
inc
pop
xor
out
pop
jl
xlat
cli
repnz
fst
call
dec
test
or
add
retf
mov
lgs
inc
adc
push
cmps
popa
fist
mov
adc
popa
test
sbb
pop
pop
fadd
adc
sub
mov
shl
mov
scas
mov
jl
arpl
mov
lds
stc
xlat
arpl
and
pop
xchg
cmp
jne
jg
pop
push
cdq
cwde
fcmovnb
fist
mov
pop
adc
sbb
test
push
sub
and
push
xchg
xchg
cmps
gs
or
ins
add
in
inc
mov
push
pusha
sar
scas
sbb
cmp
xchg
or
repz
call
repnz
push
call
pop
test
mov
pop
dec
dec
adc
sbb
adc
xor
pop
(bad)
mov
(bad)
mov
inc
jl
imul
enter
pushf
jmp
dec
sbb
inc
cld
xchg
xchg
fstp
(bad)
(bad)
jno
(bad)
scas
sbb
mov
sti
shr
(bad)
jl
dec
arpl
xor
mov
cdq
push
arpl
jnp
call
dec
jmp
or
cmp
fdivr
sti
sub
out
ret
inc
or
mov
jg
retf
inc
loope
cs
cmp
fldenv
stos
pop
leave
clc
mov
xor
dec
fmul
cmps
loope
scas
daa
xor
jmp
mov
push
fucomp
mov
mov
sub
push
cld
adc
inc
inc
arpl
sub
pop
push
and
mov
push
add
mov
or
xchg
(bad)
lahf
dec
push
mov
mov
(bad)
sub
arpl
out
arpl
inc
test
xchg
or
sub
arpl
jle
(bad)
imul
and
pushf
mov
jmp
adc
imul
and
inc
mov
jbe
xchg
jne
add
mov
cld
jge
std
xchg
or
sahf
add
in
or
test
push
retf
lahf
out
push
jmp
imul
test
mov
cmps
(bad)
mov
dec
push
out
loop
stos
adc
cld
adc
xor
pop
sbb
jne
test
fcmovnbe
fisttp
jne
adc
scas
mov
xor
outs
cmp
loop
pop
jge
retf
sbb
loop
pop
scas
(bad)
lahf
ins
call
rcr
jne
aam
hlt
jae
les
js
pop
and
std
ins
cdq
inc
inc
fild
lock
push
sbb
ss
outs
les
xor
and
xchg
stos
cwde
(bad)
das
xchg
inc
dec
xchg
xchg
sbb
scas
xchg
(bad)
xlat
gs
pusha
mov
enter
mov
sbb
fidiv
push
lds
adc
or
out
cmps
sbb
rcr
dec
scas
ds
inc
mov
sub
dec
pop
ret
add
repz
sbb
sub
repz
cmp
dec
cmp
aaa
and
push
mov
mov
xchg
mov
cwde
xor
sub
stos
outs
pusha
push
mov
imul
pop
push
bound
leave
jmp
rcr
std
xchg
dec
and
neg
imul
ins
inc
hlt
fnstenv
stos
mov
add
mov
cs
rcr
out
sub
and
aam
push
xchg
or
xor
or
enter
shl
das
mov
pop
push
push
mov
xchg
mul
stos
js
scas
xchg
xchg
fld
out
lds
out
cdq
imul
dec
leave
mov
push
ins
push
daa
out
fistp
xor
test
jge
(bad)
out
iret
test
xchg
jp
inc
and
xlat
mov
loop
imul
inc
std
nop
dec
cwde
aam
jle
inc
jno
mov
ins
dec
mov
push
xor
inc
or
daa
cld
add
pushf
adc
jg
adc
xor
pop
add
xchg
xor
scas
inc
out
push
push
jp
shl
jb
call
sbb
fidiv
enter
leave
mov
cmc
cld
mov
push
inc
jg
call
leave
daa
add
aam
fdivr
test
and
cmp
mov
dec
adc
jo
call
popa
cmp
imul
sub
stos
adc
lods
dec
js
leave
push
add
aas
cmp
jg
sbb
mov
or
or
jl
mov
jge
jmp
hlt
enter
xchg
aaa
fwait
jl
mov
hlt
xchg
adc
cmp
fcomip
ret
jbe
out
jle
xchg
out
push
ret
push
pushf
fiadd
icebp
add
loope
rcl
jb
dec
(bad)
fadd
sub
sbb
dec
xchg
sbb
lahf
loope
push
and
pushf
mov
out
sbb
push
pop
inc
or
addr16
jmp
sub
add
loop
and
inc
fdivr
cli
adc
and
xchg
push
and
je
and
push
(bad)
mov
fmul
jno
cmp
(bad)
push
cmp
push
push
mov
sar
xor
lods
sub
repnz
sti
pusha
aas
int3
mov
iret
pop
sbb
(bad)
jl
dec
out
mov
fsubr
popa
pop
sbb
adc
out
test
sub
add
(bad)
mov
or
out
stos
add
rcl
mov
fs
mov
cld
mov
dec
lods
or
bound
jbe
icebp
add
(bad)
pop
gs
xchg
std
adc
mov
add
ja
add
cli
mov
xchg
dec
cld
aas
test
(bad)
mov
adc
cmp
fwait
push
cmp
sub
dec
dec
cld
fdiv
(bad)
or
jo
inc
loope
cwde
jg
lods
push
int
repnz
pusha
stc
inc
jp
mov
pop
dec
mov
daa
adc
jns
sub
sbb
sbb
or
mov
sbb
lods
xrelease
je
test
mov
jmp
push
popf
xor
mov
cmc
mov
shr
dec
jnp
sub
je
mov
les
sbb
xor
push
push
jo
fstp
ds
call
(bad)
out
call
mov
sub
xchg
dec
lods
call
and
bound
add
repnz
xchg
push
fwait
das
stc
push
imul
push
call
leave
imul
test
in
cmp
nop
add
jmp
out
mov
push
lea
sti
sbb
mov
inc
test
loop
(bad)
mov
inc
repnz
stos
rcr
cmps
adc
mov
push
xchg
mov
imul
call
inc
sbb
and
xor
daa
xchg
or
popa
ins
push
ins
jne
sub
movs
or
(bad)
mov
and
mov
and
jo
cli
push
pop
add
loopne
out
imul
enter
push
popa
cs
ds
jmp
test
js
outs
inc
xor
in
pusha
sub
shl
inc
and
jp
xchg
mov
cmp
xor
jmp
pop
mov
push
dec
test
addr16
imul
mov
push
mov
mov
mov
pop
push
mov
test
add
pop
aam
push
loope
xchg
lds
jmp
retf
stos
mov
and
scas
clc
das
pop
jmp
push
xchg
adc
jno
dec
(bad)
cld
data16
call
and
xchg
jecxz
pop
pop
push
pop
inc
aaa
rol
adc
mov
cs
stos
pushf
test
leave
mov
aam
lods
xchg
or
push
jno
rep
mov
or
out
fadd
cmc
pop
shl
ret
jge
in
dec
into
jne
dec
lahf
jg
jg
xchg
pop
jge
dec
shl
cmp
loope
pusha
xchg
(bad)
jae
arpl
or
xor
pop
inc
rcr
(bad)
jmp
add
rcl
mov
hlt
push
in
or
push
in
or
xchg
jo
test
add
in
ret
push
xor
adc
dec
jae
xor
test
jl
mov
imul
add
add
sbb
adc
jmp
jns
push
sub
ret
daa
cmc
xchg
aam
adc
add
mov
mov
shl
test
lods
cmp
jmp
xchg
jnp
cmp
add
sbb
jmp
scas
hlt
bswap
es
add
mov
add
and
push
push
xor
dec
xor
repnz
aam
jns
(bad)
cld
out
outs
(bad)
sub
push
jbe
repnz
adc
cmps
retf
call
addr16
add
not
add
inc
cmps
stos
stos
hlt
sub
je
iret
pop
movs
nop
pushf
jne
iret
sbb
dec
jne
lds
xchg
add
jmp
scas
std
cli
leave
fcom
rol
sbb
in
out
je
or
int
mov
sbb
sti
jge
popf
retf
push
aaa
aas
test
jle
push
loop
and
fld
adc
inc
pop
test
mov
aad
shl
and
pop
popa
mov
in
push
lahf
mov
jmp
vandps
call
scas
fiadd
test
rol
leave
add
pop
push
and
std
(bad)
stos
push
push
fwait
shl
(bad)
lds
cmp
pop
(bad)
leave
addr16
pop
jne
sub
pop
lock
mov
scas
add
xchg
dec
(bad)
ins
jnp
dec
adc
xor
shr
lock
ja
test
(bad)
clc
inc
test
mov
mov
and
jp
inc
add
xchg
retf
ss
daa
or
mov
mov
and
mov
int3
fcom
push
or
in
outs
out
mov
push
std
hlt
inc
mov
iret
adc
mov
jnp
dec
out
mov
fs
pop
(bad)
cli
mov
call
cmp
daa
xor
stc
or
cmps
inc
jne
fsub
mov
xchg
fsubp
(bad)
rol
xchg
lds
je
xchg
push
test
aad
pop
inc
add
mov
aaa
jmp
inc
ret
ret
ja
xor
jge
push
push
inc
inc
stos
mov
xchg
ror
call
dec
pop
movs
fist
and
call
mov
mov
push
cmp
sub
cmp
xor
push
ffree
push
popa
push
xchg
mov
fimul
lock
mov
mov
inc
nop
loopne
mov
outs
add
xchg
lahf
xchg
aaa
(bad)
mov
mov
adc
hlt
dec
test
ds
pop
jnp
push
popa
jg
(bad)
aaa
adc
out
sub
aad
mov
out
cmp
inc
mov
xchg
pushf
adc
data16
out
les
popa
push
(bad)
lds
mov
outs
cmp
add
mov
adc
mov
sar
fisubr
jno
sar
pusha
nop
push
and
call
jmp
or
cs
mov
mov
sahf
rcl
call
ds
cli
add
sti
test
jp
or
mov
ja
xlat
ins
stos
pop
aaa
push
push
mov
dec
inc
cmps
cwde
imul
lock
xor
ja
push
cvtpi2ps
mov
push
adc
cdq
sar
shl
mov
jae
icebp
push
cdq
stos
jb
mov
add
pop
popf
stos
pop
inc
(bad)
popf
fistp
jle
pushf
pop
hlt
sbb
fnsave
xchg
mov
or
mov
adc
fist
adc
ficom
and
fcomp
add
jmp
in
jg
clc
in
jo
aam
xor
or
mov
inc
lock
jno
sbb
in
sbb
cld
lock
mov
cmp
push
mov
cmp
scas
(bad)
and
inc
mov
sar
or
mov
ss
mov
mov
or
idiv
clc
lods
xchg
mov
fiadd
pushf
and
inc
call
mov
ret
mov
mov
mov
pop
adc
retf
sub
out
(bad)
xor
sbb
mov
mov
scas
jp
jae
in
jne
xor
imul
inc
add
retf
outs
sub
or
cmp
add
mov
sub
movs
fidiv
mov
xor
retf
inc
or
pop
or
rcl
adc
mov
sbb
shl
test
imul
xor
ret
jecxz
sbb
and
aas
les
leave
adc
inc
loopne
imul
mov
push
adc
mov
(bad)
mov
sub
call
dec
ret
cli
or
cmp
xor
je
or
dec
dec
pushf
stos
mov
out
pop
jb
push
mov
mov
or
ins
mov
jbe
or
call
jo
jge
mov
aam
jle
sub
fs
inc
ja
and
push
shr
adc
or
jmp
jg
mov
sub
and
adc
pop
xor
movs
movs
cs
or
xchg
punpcklbw
sub
jl
jns
add
fsubrp
jnp
jns
test
xchg
jmp
aaa
ss
and
and
das
sub
mov
icebp
sub
arpl
and
js
in
cmp
daa
pop
mov
jne
xor
cld
or
jp
push
inc
fwait
and
hlt
or
in
dec
cs
mov
out
add
add
dec
test
sub
and
push
mov
jp
(bad)
fcom
cs
jmp
xchg
and
pushf
lock
dec
inc
iret
in
mov
xor
jmp
xlat
mov
sub
xchg
gs
das
rol
sbb
(bad)
cmp
mov
sbb
inc
sbb
lods
repz
xor
pop
mov
inc
rol
pop
dec
cwde
cmps
mov
(bad)
fdiv
js
fs
mov
adc
in
fidivr
cli
movs
repnz
(bad)
stc
jecxz
xor
and
test
leave
aam
test
jae
aas
imul
cdq
cmps
and
mov
jg
sub
fisub
fisttp
shr
rdtsc
mov
ret
sbb
out
scas
lock
inc
into
imul
das
fwait
loope
push
dec
sbb
iret
jg
fild
arpl
inc
mov
cmps
imul
push
adc
jbe
in
arpl
cmp
jns
jl
and
rcl
push
mov
(bad)
outs
scas
fiadd
bound
outs
xor
mov
ds
movs
fsub
stos
loopne
imul
and
popf
loope
icebp
or
sbb
or
sub
jmp
mov
jmp
icebp
adc
and
ins
adc
es
iret
ret
add
inc
push
add
inc
lock
scas
mov
add
aam
out
cmp
lock
loopne
scas
stos
sahf
into
ss
mov
jecxz
jo
outs
sub
shl
dec
mov
retf
dec
scas
jnp
movs
scas
stc
adc
cmps
data16
xchg
cmps
mov
fwait
or
fnsave
ficom
pop
aam
cmps
scas
inc
pop
ss
cdq
shl
and
xchg
pushf
add
popf
pop
data16
and
mov
push
je
leave
mov
sbb
sar
adc
and
outs
cwde
not
xchg
sti
sub
add
(bad)
js
jl
adc
movs
cmp
xor
stos
retf
xchg
scas
sbb
bound
mov
adc
test
pushf
popa
cmp
adc
pushf
xor
addr16
mov
ror
adc
mov
mov
inc
mov
jge
mov
jmp
cmp
or
nop
hlt
call
lods
cmp
mov
xor
pop
nop
not
xor
push
scas
ror
sub
cmp
cmp
push
mov
or
inc
jle
lods
mov
pop
retf
push
sub
xor
xchg
adc
inc
ja
add
mov
mov
sub
mov
jbe
add
adc
jne
push
pushf
and
out
add
ds
jge
rdmsr
jne
cmp
call
mov
shl
mov
mov
sbb
or
fwait
xchg
pop
and
xchg
inc
cwde
out
inc
pop
pop
mov
inc
xchg
call
and
add
cmps
popw
(bad)
jbe
mov
cmp
dec
and
lock
in
sbb
out
cmc
jp
call
sub
loopne
jb
fdiv
or
and
inc
aaa
fcomp
and
fcomp
(bad)
scas
push
push
pop
call
cmps
add
clc
pushf
stos
or
repnz
hlt
sahf
arpl
imul
pop
das
or
cmp
mov
popf
mov
xchg
sub
rcr
lahf
push
sbb
les
scas
cmc
add
stos
bound
inc
sbb
or
mov
cmp
inc
out
sti
inc
icebp
jle
test
inc
ficom
pushf
gs
sub
jne
sub
mov
and
xchg
ja
add
push
addr16
fwait
mov
aad
add
retf
pop
test
cmc
jb
inc
jle
sbb
add
pop
mov
mov
cmp
mov
outs
xchg
adc
dec
push
daa
loope
or
pop
dec
les
mov
xor
(bad)
sub
and
outs
jmp
add
pop
push
xchg
div
repz
adc
sub
mov
cdq
inc
mov
data16
sub
mul
(bad)
repz
mov
xchg
leave
lock
mov
scas
add
push
imul
fldcw
pop
jmp
rcl
sbb
popa
mov
arpl
and
mov
pusha
inc
call
out
dec
jmp
pop
mov
pop
mov
inc
shr
aad
dec
add
add
outs
loope
ins
ret
sar
ds
xchg
push
call
and
push
sbb
push
rol
std
pop
arpl
lods
jle
(bad)
fmul
inc
xchg
je
enter
fisub
jecxz
popf
dec
push
lods
leave
add
retf
inc
pop
scas
xchg
mov
mov
sbb
test
in
ds
enter
jne
jp
(bad)
cs
jns
iret
xor
les
aaa
mov
(bad)
add
ins
rol
inc
push
push
lods
dec
sbb
jmp
mov
cdq
ins
cmp
adc
xor
pusha
pusha
in
scas
or
inc
rol
pop
jno
cwde
cmps
retf
cmp
jmp
add
xor
retf
loopne
cdq
mov
mov
sbb
sub
popa
out
push
jp
mov
dec
xchg
cmc
test
dec
inc
aam
and
ret
xchg
push
sub
retf
cmps
loopne
in
jecxz
daa
and
xchg
inc
ret
or
xchg
stc
retf
mov
jbe
and
inc
cdq
and
mov
pop
aad
cmp
sbb
test
mov
aas
jmp
movs
in
jns
in
sahf
cmp
cmps
add
in
xchg
push
addr16
(bad)
and
dec
push
pushf
out
ins
sub
push
xchg
loopne
mov
push
push
fptan
jmp
int
pop
lahf
fnstenv
aad
push
sub
dec
mov
adc
push
aad
pop
mov
mov
dec
(bad)
icebp
out
add
and
inc
into
test
outs
adc
cmp
sbb
imul
push
ds
call
jecxz
mov
sub
int
daa
out
cmp
ret
ins
jns
jns
arpl
mov
inc
xor
sub
cmp
call
stc
pop
and
test
add
shl
retf
addr16
lds
rcl
adc
test
jbe
mov
mov
(bad)
jmp
outs
sahf
jge
jae
int3
pop
mov
mov
mov
jmp
(bad)
mov
rcr
and
cmp
ret
int3
pusha
cmp
pop
test
cmc
vmovq
int
fwait
sbb
adc
popa
hlt
in
ins
int
int3
jb
mov
mov
jmp
or
dec
jo
cld
bound
popa
int
add
and
mov
jg
dec
or
aas
cmc
shr
push
inc
jmp
sub
aad
cmp
sub
dec
nop
jb
fldenv
dec
and
int
jg
mov
outs
cmps
lods
push
lods
jo
mov
xchg
jle
jge
cli
adc
xor
stos
std
jo
rol
push
out
mov
cmp
out
add
mov
dec
fimul
outs
lods
push
xor
or
sahf
pop
scas
pop
sbb
xor
data16
cmps
pusha
xor
sub
stos
mov
jbe
pop
test
sbb
jmp
stos
mov
cmc
ins
loop
push
jecxz
loop
ins
leave
out
jo
(bad)
and
xor
push
stos
inc
or
sub
dec
xor
enter
sbb
xchg
shl
stc
pop
push
xor
ss
leave
ret
int3
inc
jns
icebp
movs
cmp
pop
adc
stc
pop
lods
mov
je
jl
xor
cmps
pop
xchg
xchg
int3
mov
dec
mov
and
inc
cmp
and
retf
mov
and
lods
add
inc
outs
imul
inc
in
sub
sub
retf
inc
ins
adc
sbb
push
inc
inc
dec
jae
mov
inc
and
lods
lea
pop
cmp
pslld
or
fmul
xor
ror
xchg
stos
lea
test
popa
(bad)
push
jg
mov
jp
mov
fiadd
cmp
pusha
(bad)
js
repnz
cs
lock
cmp
xchg
pop
call
int
stos
sahf
stos
xchg
mov
stos
push
ror
rcr
icebp
push
dec
addr16
mov
dec
jmp
push
pushf
cmps
jl
or
mov
fwait
xor
retf
(bad)
push
or
popa
pop
jg
into
jecxz
scas
ss
dec
jle
push
jno
cmp
inc
rcr
mov
es
xchg
in
or
iret
sbb
jmp
test
inc
pop
adc
sti
mov
test
scas
repnz
ret
pop
or
ins
sbb
std
test
jbe
add
pop
js
jle
sub
ficomp
cdq
mov
outs
mov
stos
loopne
ret
icebp
sbb
sbb
hlt
push
call
ret
mov
out
mov
or
pop
icebp
imul
icebp
mov
and
add
cli
mov
out
call
xchg
jecxz
fs
sahf
cmc
pusha
(bad)
ins
test
sub
dec
call
call
pop
jns
adc
sbb
xor
sbb
(bad)
ins
iret
fcomi
add
dec
pop
inc
inc
pop
sbb
cli
jmp
mov
dec
adc
add
popf
mov
daa
mov
mov
jnp
inc
jmp
rcr
test
dec
in
push
lods
add
push
pop
adc
push
pusha
cli
scas
sub
jmp
adc
jecxz
rcl
lds
fcom
loope
(bad)
jl
pushf
mov
pop
or
imul
push
mov
out
mov
outs
mov
jb
xor
adc
jne
jmp
cmp
mov
ins
daa
mov
je
adc
jmp
outs
shl
aad
in
add
retf
mov
adc
cwde
out
and
dec
mov
mov
das
push
xlat
stos
push
cmp
jl
dec
test
jle
xchg
les
(bad)
push
and
das
sbb
movs
cdq
xor
idiv
out
inc
iret
int3
mov
out
xchg
sub
aad
and
mov
(bad)
leave
int3
jo
fisubr
scas
add
cmc
fdivr
and
cld
mov
aaa
and
mov
xchg
jnp
adc
lds
mov
ins
ja
nop
(bad)
jbe
sar
cli
shl
jns
lods
cmp
aaa
cmps
inc
test
shr
mov
ja
mov
rcr
mov
push
outs
pop
sbb
pop
jge
scas
mov
and
jbe
out
in
and
lods
xchg
fild
sub
pop
test
push
push
or
jmp
pop
xor
push
mov
ficomp
neg
inc
pop
or
push
jge
mov
jno
dec
dec
mov
outs
fs
mov
sbb
xor
mov
sub
in
test
pop
inc
inc
js
mov
idiv
fs
push
sub
cdq
ret
invd
repz
xor
(bad)
mov
retf
and
stos
xchg
and
jae
or
mov
or
or
sbb
je
mov
cli
sub
lods
(bad)
int
cli
push
std
repnz
lods
mov
ds
es
sub
mov
lock
neg
fucomi
pop
sub
in
ret
push
test
mul
inc
retf
or
movs
pushf
xchg
and
gs
fdivrp
aaa
pop
sbb
std
add
jp
movs
cmp
mov
add
imul
fisttp
in
cwde
jge
out
fst
scas
or
mov
jnp
pop
and
shl
cdq
pop
bound
call
aad
mov
mov
or
stc
int3
aas
mov
xor
call
or
mov
xchg
imul
cmp
popaw
add
aas
stos
loopne
(bad)
je
push
sti
lock
fnstsw
aad
and
mov
dec
mov
pop
call
push
enter
sub
and
call
ins
add
push
or
mov
or
dec
icebp
jns
push
aam
cmp
es
movs
jmp
scas
mov
jge
jge
xchg
push
sti
or
loopne
in
adc
sbb
push
and
sbb
jne
movs
call
add
stc
jmp
pushf
push
mov
xlat
xor
pop
mov
clc
jge
pop
mov
xchg
ffree
push
aaa
push
jnp
test
adc
mov
pusha
lods
pop
ins
mov
jb
rcl
push
int
or
pop
jne
jg
imul
mov
in
jbe
rcl
cld
xchg
add
movs
dec
mov
sub
out
xchg
xchg
cmp
dec
std
fmul
std
cdq
pmaxub
ret
jb
addr16
adc
dec
xchg
stos
xchg
call
and
or
fidivr
ficomp
xchg
xor
stos
or
in
jnp
call
cmp
scas
sub
js
mov
test
js
mov
fwait
sti
jno
jecxz
mov
ja
scas
pop
push
mov
cmp
mov
stos
(bad)
cli
inc
jns
jmp
sub
loope
cs
pop
cli
adc
cmps
jnp
imul
cld
push
imul
mov
popf
sub
call
jbe
dec
cli
es
xor
xchg
rep
pop
std
sub
jnp
ffreep
retf
pop
mov
daa
loop
jmp
out
mov
inc
out
jno
loope
cmps
inc
nop
xlat
pop
fcmovb
inc
cmp
mov
push
push
push
push
dec
cmp
dec
dec
sub
aaa
sahf
retf
dec
pop
mov
pop
mov
mov
fidiv
in
test
pop
call
fbld
fisttp
push
mov
dec
imul
jb
push
pop
in
popa
and
scas
sub
xchg
mov
jge
clc
or
adc
and
out
stc
inc
jmp
fdiv
inc
cdq
push
adc
jmp
push
or
ret
mov
xchg
push
pop
mov
adc
data16
or
stc
mul
movs
cld
add
xchg
push
loop
(bad)
fucomip
or
les
cmp
retf
jmp
imul
cmp
jnp
xor
fidiv
mov
push
xchg
jne
outs
fidiv
mov
pop
gs
push
fucomp
xchg
clc
and
cmp
fcom
jbe
repz
out
out
inc
movs
xor
cmps
bnd
imul
mov
call
xchg
repz
out
rcl
mov
xor
xchg
stc
cmps
lea
sahf
ja
add
dec
adc
movs
push
mov
arpl
cmp
pop
scas
cmp
xchg
or
xchg
push
pop
mov
or
call
sti
cmp
out
enter
(bad)
rcl
sbb
jmp
rcr
push
ja
(bad)
mov
sbb
jno
jmp
out
or
rcl
mov
in
mov
push
fistp
xor
shr
mov
push
xchg
rcl
add
js
or
das
cmp
add
mov
mov
xlat
jb
rol
pop
cmps
inc
pop
leave
cmp
es
stc
lahf
popa
ds
xchg
or
in
cmc
adc
lahf
adc
repnz
mov
repnz
inc
mov
call
and
xchg
or
push
adc
cmp
ret
loopne
jae
and
xchg
jl
or
ret
retf
shr
popa
out
ds
cld
xchg
dec
add
idiv
gs
or
loop
js
lods
xor
push
outs
cld
rcr
pop
cld
add
(bad)
push
in
movs
fild
pop
daa
(bad)
mov
xor
cmp
repz
dec
mov
call
and
adc
shl
mov
sbb
sub
(bad)
push
cmp
mov
loop
(bad)
dec
mov
add
sub
fyl2xp1
aaa
lods
rol
sbb
call
cdq
shl
xchg
hlt
pop
adc
xor
out
shl
mov
fistp
push
ins
and
fadd
mov
(bad)
xacquire
das
pusha
add
mov
sbb
ins
test
inc
jle
(bad)
ss
icebp
mov
and
sub
rcl
jb
or
ds
xchg
psrlq
mov
inc
jb
and
outs
popf
xchg
fs
(bad)
out
pop
(bad)
loop
ja
imul
sub
mov
outs
loop
dec
or
leave
mov
mov
dec
cmp
imul
sub
xlat
hlt
xor
xchg
rcr
call
mov
push
sub
test
ret
add
mov
unpckhps
jmp
mov
in
adc
jno
inc
mov
mov
or
jp
pusha
shl
mov
mov
push
jne
stc
dec
jmp
adc
and
aaa
push
or
sub
mov
inc
push
xchg
and
das
adc
mov
cmp
mov
mov
pop
sbb
jae
jp
inc
cmps
sbb
mov
(bad)
outs
leave
or
sahf
mov
out
out
xor
shl
mov
push
lea
imul
sbb
pop
push
call
and
fsubr
mov
in
sbb
or
out
push
xchg
fstp
mov
sub
dec
and
stos
pop
or
push
bndstx
js
out
iret
test
pop
xlat
mov
mov
das
xor
xor
aad
sub
bound
or
dec
or
shr
push
fiadd
arpl
mov
arpl
in
addr16
ds
xchg
push
jae
add
jle
cmp
mov
mov
ins
adc
ins
add
fisub
mov
pushf
scas
mov
out
sbb
xchg
sbb
sub
cmps
hlt
lock
mov
mov
mov
xchg
mov
inc
inc
push
in
retf
jge
fidiv
add
sbb
fidiv
push
mov
inc
repnz
test
sar
(bad)
fcmovne
and
mov
call
dec
mov
cmp
mov
ret
fiadd
fwait
inc
cwde
not
arpl
sbb
cmp
jns
mov
stos
mov
jecxz
add
jle
cmp
sub
imul
int
adc
mov
cmp
ins
xor
add
addr16
cmp
cmp
rol
jbe
mov
or
jbe
dec
lahf
dec
pop
mov
jns
repz
inc
iret
mov
shr
test
cmp
push
mov
push
or
sub
daa
les
arpl
daa
add
sbb
xchg
add
xor
in
hlt
mov
cdq
cmp
or
mov
and
mov
mov
add
imul
cwde
lods
and
jecxz
cmp
je
cmp
or
loopne
add
fimul
retf
jle
mov
add
jne
retf
ret
or
mov
mov
imul
push
sbb
mov
cmp
sti
mov
cmp
out
pop
iret
stc
sti
aad
mov
cmp
or
cld
cdq
or
mov
les
cmp
movs
cdq
fdivr
inc
sbb
sbb
lods
in
daa
push
(bad)
push
pop
jge
imul
jp
push
fsub
or
jl
retf
xor
(bad)
scas
leave
test
test
cdq
mov
retf
and
push
cdq
mov
xor
fistp
imul
(bad)
lods
jbe
jbe
sti
mov
loop
xor
fdiv
aas
adc
mov
(bad)
outs
mov
fs
lods
mov
js
jb
add
retf
call
pusha
xchg
xchg
out
mov
hlt
push
or
pop
cmp
and
pop
sbb
out
xchg
sar
jecxz
out
mov
xor
dec
cmc
and
les
ror
imul
nop
lahf
lahf
scas
dec
mov
shr
mov
cli
cmp
mov
mov
nop
inc
pop
or
push
jecxz
fucomip
xchg
jbe
loop
(bad)
and
adc
jbe
mov
adc
sar
out
inc
mov
clc
xchg
push
adc
ins
pop
jl
sbb
je
bound
lea
add
mov
cmps
xor
cmp
sub
mov
rol
xchg
xor
mov
push
mov
dec
(bad)
pop
je
(bad)
or
popf
xor
sbb
adc
push
sbb
popa
retf
jg
cmps
loope
je
or
cmps
pop
jo
sub
inc
dec
sbb
aaa
xchg
pushf
xchg
fcom
dec
ss
cwde
dec
pop
cmp
shl
push
nop
mov
dec
cmova
ja
mov
inc
or
pop
dec
int
lds
enter
add
jmp
jecxz
sbb
fidiv
repnz
xlat
aas
jecxz
fild
fidiv
lea
sbb
sti
mov
inc
movs
cmp
and
jmp
adc
jmp
pmaddwd
mov
adc
(bad)
call
xchg
adc
jle
sbb
repnz
xchg
mov
or
aam
in
xor
jae
loope
sbb
hlt
fdivr
pop
jbe
dec
in
push
mov
inc
inc
xor
push
jae
lahf
xchg
in
cmc
jo
es
dec
sub
fcomp
call
mul
fs
enter
in
dec
jae
nop
mov
(bad)
imul
das
bound
rcr
or
ret
arpl
and
test
fwait
sub
sub
fnstenv
fldenv
or
jmp
push
nop
sti
enter
cmp
loope
mov
push
iret
adc
shr
inc
enter
repz
(bad)
arpl
mov
mov
mov
rol
clc
mov
idiv
dec
cmp
fimul
arpl
sar
fwait
(bad)
scas
fcomp
sbb
sti
sar
push
sbb
adc
ret
jb
push
pop
nop
and
(bad)
call
fiadd
dec
and
xchg
sbb
std
mov
and
lods
stc
dec
movs
(bad)
push
aam
sbb
pop
sahf
mov
fstp
inc
cwde
mov
(bad)
je
repz
jo
setno
cwde
cwde
loop
aas
int3
stc
dec
scas
ins
hlt
pop
movs
inc
in
movs
xchg
pop
xchg
mov
add
jg
pop
test
dec
dec
lea
or
aad
xor
leavew
cmp
ss
popa
sbb
jg
icebp
shl
mov
clc
fild
sbb
mov
outs
sub
leave
sub
cwde
push
das
jmp
push
push
rol
xchg
xor
mov
repnz
xor
stc
mov
jmp
add
xchg
and
or
retf
xor
daa
in
mov
sub
push
mov
in
pusha
xchg
dec
je
xor
mov
scas
jecxz
cmp
mov
test
jp
aaa
xchg
mov
ja
jge
popf
jecxz
lods
adc
or
jnp
fs
leave
mov
(bad)
aas
inc
movs
cli
shr
iret
jno
push
bound
sti
mov
into
mov
xchg
daa
cmp
neg
sub
mov
lods
aad
dec
sahf
sar
or
mov
dec
push
dec
or
arpl
mov
pop
addr16
push
and
pop
pop
(bad)
fimul
clc
adc
sub
xchg
in
and
cmp
add
into
imul
cmp
mov
pop
(bad)
xor
sub
mov
jl
fadd
cmp
lods
jns
or
or
call
push
ja
dec
retf
in
adc
aam
(bad)
mov
rcl
gs
mov
mov
xor
pop
pop
inc
and
data16
dec
cmp
idiv
imul
in
ret
cmp
mov
movs
xchg
jo
scas
(bad)
addr16
outs
xchg
inc
mov
jge
inc
pop
xchg
mov
ins
push
push
jp
mov
lock
(bad)
sub
jge
frstor
daa
jecxz
jecxz
push
lds
aad
ds
mov
(bad)
ficom
ja
lahf
lahf
sbb
aam
dec
imul
push
aas
jne
xchg
push
push
push
imul
movs
push
jo
dec
mov
punpckldq
rcr
cmp
in
lahf
xor
jge
xchg
sbb
pusha
jge
add
add
push
outs
inc
or
cmc
mov
loope
adc
or
sahf
rcr
pop
ror
inc
ret
jmp
sti
scas
jo
jnp
inc
call
push
movs
dec
mov
or
ins
xor
push
cwde
cmp
or
mov
push
aad
adc
test
pop
hlt
and
sbb
es
mov
mov
scas
(bad)
rcl
aam
jo
addr16
ss
cdq
jnp
lahf
fnstsw
pop
dec
mov
call
std
push
ret
pusha
sar
pop
scas
inc
inc
dec
mov
adc
cmp
mov
adc
xlat
and
in
adc
rcl
inc
shl
or
rol
es
popf
pusha
jns
mov
push
in
iret
inc
add
jns
into
jmp
je
cmps
jmp
xchg
mov
rcr
js
rol
push
xor
add
pop
jecxz
lods
mov
jge
push
(bad)
cmp
pop
xchg
fisubr
rol
scas
push
retf
dec
arpl
xchg
and
sbb
popa
adc
push
into
adc
outs
mov
test
adc
daa
call
inc
lods
and
retf
dec
inc
into
or
lods
inc
mov
test
pop
xchg
clc
stos
test
outs
pop
ins
sbb
int
adc
div
cmp
sbb
(bad)
data16
into
add
shl
push
mov
(bad)
out
js
nop
mov
cmp
out
shl
push
imul
fwait
sbb
inc
ja
and
cmp
xchg
mov
mov
pop
cmps
ins
sti
mov
mov
or
stos
push
pop
jbe
fs
fstp
adc
popf
into
pushf
aas
shl
jge
push
mov
mov
inc
out
xor
or
sbb
push
push
arpl
sub
mov
push
xchg
addr16
jecxz
fldenv
adc
or
loopne
xchg
cs
je
imul
imul
pop
push
stos
sub
fiadd
xchg
jp
fiadd
mov
test
test
push
popa
dec
mov
dec
or
push
cmp
addr16
xchg
cmp
stos
test
xchg
mov
stos
sub
rol
adc
sub
sbb
xor
iret
lahf
sbb
lea
ins
imul
push
push
invd
and
loope
in
mov
push
and
pushf
add
setge
call
adc
rol
sahf
cmp
push
mul
ror
cmps
cmps
(bad)
push
mov
push
mov
jl
popa
dec
pushf
adc
push
inc
cmp
pop
(bad)
mov
add
ret
ret
push
xor
jae
cmp
cmp
sbb
test
std
or
jl
les
adc
pop
lds
fwait
and
cmps
ret
in
pusha
ficomp
arpl
ret
sub
xor
in
mov
out
jne
shl
and
sbb
test
and
lods
fisubr
jmp
jmp
rcl
lods
cli
ficom
fldz
pop
mov
jno
or
mov
stos
fsub
jle
jbe
outs
jl
adc
mov
sub
in
and
cmp
out
dec
call
fwait
ds
add
pop
stos
std
push
pop
jnp
aas
xor
ficomp
scas
stos
(bad)
adc
sar
jo
ret
pop
adc
adc
rcr
in
add
jmp
nop
inc
push
loope
xchg
xchg
imul
jle
cdq
mov
cmc
sub
cld
xchg
int
or
retf
jmp
leave
xchg
test
and
add
push
inc
addr16
in
dec
lods
jp
and
mov
pop
pusha
dec
sbb
jno
jmp
dec
lahf
mov
pop
lahf
nop
stos
loop
bound
push
arpl
mov
mov
dec
imul
shl
jo
jae
adc
mov
ret
cdq
jp
test
enter
jb
mov
les
dec
movs
dec
popf
loope
inc
out
aam
outs
cmp
fistp
xor
clc
sub
add
xor
aaa
pushf
inc
xor
fmul
rcl
into
xor
sbb
ja
push
inc
fist
rcr
push
pop
push
cmps
xchg
movs
jecxz
cmp
and
jne
mov
mov
sub
add
(bad)
in
mov
pusha
popf
mov
mov
cwde
in
push
add
xchg
(bad)
cmc
sbb
dec
movs
or
loopne
retf
repnz
pop
jmp
push
fwait
mov
xchg
pop
add
(bad)
popa
fwait
add
sbb
add
cli
xchg
js
out
jl
shl
lods
movs
lds
repz
add
dec
cld
inc
aam
adc
adc
mov
mov
push
push
cmp
sar
mov
jmp
adc
dec
jge
leave
ficomp
pop
mov
into
loopne
jae
jae
add
jge
fadd
(bad)
sbb
pcmpgtb
inc
popf
mov
inc
mov
fisubr
int
in
dec
and
pusha
fs
add
test
arpl
pop
test
stos
sbb
jnp
xchg
test
out
cs
push
push
enter
dec
pusha
rcl
out
xchg
jmp
(bad)
shr
fld
pop
(bad)
fcmovu
cmp
cmp
mov
loope
push
lods
cmp
scas
mov
mov
mul
pop
je
cmp
xlat
stc
cmps
xlat
fsub
(bad)
jmp
outs
pop
add
inc
loope
jmp
ds
or
ficom
dec
movs
push
aaa
cmp
pop
jge
in
fild
push
mov
adc
xchg
cmc
ja
outs
fiadd
icebp
xchg
retf
xchg
or
mov
jmp
jae
int
add
aaa
jle
and
dec
dec
or
jb
dec
aad
and
xchg
push
sub
stos
sbb
pushf
movs
and
leave
mov
aaa
mov
je
dec
pop
ret
or
mov
mov
(bad)
xor
mov
fadd
call
sub
inc
(bad)
lods
dec
mov
clc
lahf
ds
mov
fisub
lds
cmp
retf
je
and
sub
or
int3
and
cmp
enter
sti
xchg
inc
jecxz
xchg
call
mov
xor
retf
jmp
jns
sbb
(bad)
hlt
inc
push
movs
jp
mov
adc
je
ret
iret
jne
out
popf
stos
outs
cli
sbb
scas
shl
push
loop
lds
retf
cmp
daa
and
cld
push
inc
mov
pop
cmps
jmp
in
rcl
stos
jne
mov
jmp
sub
cmp
xor
push
(bad)
sbb
and
jno
arpl
push
pop
sbb
and
xchg
inc
rol
lods
pop
mov
retf
rol
jge
push
add
cmps
mov
xor
sub
aas
cmps
les
inc
fimul
ins
inc
hlt
jo
leave
imul
xchg
xchg
and
mov
inc
mov
jne
mov
and
push
out
(bad)
cmp
les
push
inc
(bad)
pop
jmp
and
pushf
xchg
ja
jmp
mov
test
loop
std
jmp
(bad)
cld
imul
xchg
test
ret
fisttp
sbb
add
sar
cwde
cmp
add
xchg
pop
fwait
xchg
and
mov
jae
loop
mov
mov
sub
fisub
into
jae
pusha
aas
inc
mov
add
add
adc
neg
nop
and
cwde
fldenv
dec
mov
enter
lea
aaa
mov
adc
cmps
sub
and
movs
fsub
test
in
xor
mov
pop
scas
inc
and
add
push
xchg
fstp
jle
into
jne
fs
rcr
mov
rol
mov
out
popf
out
movs
cmp
xchg
setl
dec
sahf
dec
push
push
pop
jge
mov
sbb
mov
addr16
fidivr
popa
test
retf
xchg
pushf
push
mov
stos
sub
dec
or
mov
mov
xchg
cmp
rol
jmp
sub
daa
(bad)
sbb
sar
push
sbb
pop
out
jl
mov
sub
inc
mov
int3
mov
and
add
pop
cmp
push
repz
repnz
xlat
pop
push
jle
xor
repnz
xchg
jo
das
daa
call
or
mov
mov
or
xchg
outs
loop
pop
mov
or
add
fcom
rcl
in
dec
int3
lock
int3
lock
ins
pop
and
dec
(bad)
pop
add
ret
call
fst
pusha
repz
daa
loopne
inc
and
test
inc
enter
call
sbb
push
rcr
cmp
mov
pop
jp
jbe
jecxz
cld
and
scas
addr16
adc
cmps
jo
sbb
ja
adc
mov
scas
push
daa
cmps
retf
neg
push
shl
pop
std
dec
push
xchg
fcomi
push
or
jnp
pop
sti
mov
sbb
jo
shl
pop
xor
adc
mov
inc
xchg
xor
sub
call
inc
into
push
sbb
pushf
popf
rcr
push
in
jmp
sti
sub
iret
xor
fwait
pop
or
and
push
push
and
(bad)
sahf
mov
sbb
inc
(bad)
dec
pop
scas
fadd
bswap
sbb
or
push
aam
jno
and
ret
mov
repz
inc
mov
mov
ins
dec
sbb
mov
sahf
sti
test
sbb
adc
test
mov
pushf
jp
shr
sbb
(bad)
jmp
inc
jno
inc
jns
outs
not
scas
or
xchg
sub
dec
cld
mov
jl
pop
scas
out
outs
push
pop
cmp
mov
aaa
sbb
add
cmps
mov
add
push
jns
mov
hlt
(bad)
cmps
mov
xchg
fidiv
jg
push
outs
mov
mov
scas
push
push
popa
xor
adc
retf
or
imul
stos
ret
aaa
mov
popa
arpl
imul
std
in
push
push
mov
mov
pop
daa
jge
add
fisttp
sbb
mov
loopne
mov
mov
push
jp
mov
call
nop/reserved
push
add
es
pop
ret
pushf
jge
push
mov
scas
popa
cmovb
fisubr
retf
push
into
xor
add
jmp
and
aam
shl
into
aas
lods
mov
cmc
(bad)
sti
xchg
repnz
sbb
stos
or
and
xchg
dec
sub
addr16
jmp
jne
and
gs
dec
cld
sub
jmp
(bad)
sbb
push
xchg
push
push
push
pop
sub
or
adc
lea
cmp
or
mov
cld
dec
les
dec
jmp
cmp
mov
in
test
das
test
hlt
dec
inc
inc
(bad)
outs
das
xchg
pop
xchg
pop
outs
sub
mov
and
cmc
inc
dec
dec
add
sbb
dec
mov
push
fs
les
retf
sbb
(bad)
and
in
enter
adc
pop
pop
dec
mov
jns
out
lea
xchg
push
loopne
add
xor
sub
test
call
fs
idiv
mov
xchg
mov
add
inc
scas
adc
imul
ret
xlat
stos
xlat
int3
jne
idiv
mov
ins
fdiv
out
bound
pop
(bad)
rcl
inc
adc
jns
add
in
pop
xor
aaa
inc
cdq
push
inc
lea
add
lock
pop
mov
mov
(bad)
jmp
call
int
dec
arpl
xchg
ror
retf
cmc
retf
cmp
test
cdq
sbb
int3
mov
sub
sub
jae
sbb
lds
sti
stc
and
mov
add
mov
pop
inc
leave
jge
xor
and
call
test
fnstcw
pusha
out
imul
sbb
imul
mov
or
ror
scas
adc
mov
cmp
jb
jecxz
push
adc
pushf
shl
mov
repz
dec
rcl
pop
xchg
jmp
cmp
test
pop
sub
dec
push
dec
fst
cmp
popf
pop
push
xor
sbb
sahf
inc
retf
push
jae
and
mov
fwait
ret
clc
rcl
shl
or
adc
aad
loope
aad
imul
lock
push
lock
dec
xchg
mov
rcl
fst
dec
push
pop
loopne
mov
or
imul
(bad)
fcmovne
repnz
ja
xchg
pop
jne
jle
xlat
push
stos
int
pop
jecxz
in
inc
sub
jmp
fadd
out
cmp
xor
retf
(bad)
jbe
fidivr
repnz
std
or
inc
cli
call
js
(bad)
arpl
sti
xchg
xchg
dec
cmp
add
mov
daa
inc
sbb
sbb
sbb
fs
xor
(bad)
jbe
cmp
or
stos
mov
mov
mov
xchg
xor
call
arpl
xlat
jp
and
adc
push
mov
iret
or
mov
data16
scas
test
xor
(bad)
pushf
pop
pop
xchg
or
movs
and
add
mov
rcr
retf
mov
sahf
inc
sbb
sbb
pop
clc
mov
mov
shl
data16
jmp
mov
(bad)
push
push
and
stos
push
mov
jp
jbe
fsubr
sub
arpl
or
xchg
out
mov
sbb
jnp
sub
ror
push
xchg
and
hlt
bswap
push
fwait
cmp
cmp
and
enter
outs
inc
adc
pop
pop
push
movs
adc
cli
push
adc
lods
adc
enter
jl
pop
dec
iret
in
and
ror
cdq
pushf
arpl
fbstp
daa
idiv
fild
pop
data16
clc
xor
or
aaa
push
or
repz
adc
fld
sti
mov
rol
xor
mov
pop
xchg
xchg
adc
jne
cld
ins
stos
and
cld
or
xchg
scas
ret
das
dec
pop
cmps
enter
jge
push
iret
add
push
idiv
pop
fucomip
popa
jecxz
ss
js
dec
xor
add
js
cld
movs
cmp
ja
sbb
cmps
scas
in
mov
xchg
sbb
push
fwait
inc
into
or
pop
mov
and
ins
dec
cwde
call
test
fwait
and
ficomp
adc
cmp
jecxz
aaa
fidivr
test
test
xor
repz
stc
sbb
adc
dec
shl
sbb
in
je
jp
enter
mov
jecxz
pop
fist
aas
fiadd
and
push
rol
pop
jge
popa
jo
push
cmp
std
mov
cdq
(bad)
cmp
pop
data16
pop
enter
cmp
push
add
call
iret
enter
cmp
add
sub
stos
cld
cs
mov
arpl
mov
jo
imul
(bad)
inc
shl
inc
xor
xchg
xor
sub
addr16
or
xor
and
add
neg
sbb
xor
pop
jbe
mov
cs
shl
or
test
in
jmp
or
mov
push
outs
jmp
out
outs
cmps
cmp
in
adc
in
jae
aad
outs
jge
mov
pop
shr
icebp
and
ds
cmps
xchg
add
clc
lods
cmp
mov
push
sbb
mov
mov
pop
mov
cmp
sahf
stc
out
lfs
cmp
mov
sub
add
fdivrp
add
or
out
mov
push
xchg
jecxz
cmps
neg
ja
out
jl
and
sub
adc
sub
inc
inc
jno
push
sbb
or
cmp
push
adc
pop
jl
(bad)
cwde
sbb
or
movntps
mov
push
inc
and
inc
and
daa
dec
mov
push
leave
pop
out
sub
jle
sub
jmp
test
js
jmp
or
inc
mov
imul
sub
mov
adc
dec
push
dec
xor
jmp
test
pushf
cmp
stos
jge
les
sbb
int3
movs
sbb
jne
mov
or
or
adc
adc
mov
jge
leave
jne
in
test
xlat
add
cmc
mov
xchg
or
cdq
scas
retf
adc
das
dec
fstp
xchg
stos
fadd
bound
cwde
loop
fisub
push
xor
mov
hlt
sub
add
retf
pop
dec
jbe
or
jne
loope
and
adc
loopne
test
push
jnp
shl
(bad)
fld
outs
(bad)
sbb
div
mov
sbb
jns
pop
push
fcomp
int3
stos
xor
sub
cmps
enter
lds
daa
test
jmp
inc
sub
stc
(bad)
cmps
and
inc
sub
dec
jp
mov
xchg
int
and
(bad)
dec
(bad)
in
adc
sub
out
mov
out
mov
dec
jmp
adc
jb
push
movs
(bad)
fsub
add
and
sbb
mov
and
cmp
jae
push
and
mov
or
xchg
jmp
cmp
mov
stos
test
cmp
mov
push
mov
jmp
movs
(bad)
pop
mov
and
dec
and
call
inc
icebp
sub
and
(bad)
in
or
pop
(bad)
jno
movs
daa
lods
(bad)
fld
out
stos
aaa
stos
add
call
xchg
cdq
or
ss
push
sahf
out
mov
mov
sar
push
sbb
xchg
or
inc
(bad)
or
dec
shl
data16
sbb
popf
cmp
enter
ss
fs
rcl
dec
push
or
aas
xchg
test
mov
and
out
xchg
int3
dec
lods
fs
pop
xor
popf
(bad)
idiv
pop
mov
sub
and
popa
mov
push
push
and
mov
shl
sti
ja
add
mov
xlat
mov
ror
repz
mov
(bad)
pop
push
jl
mov
sbb
add
or
push
or
sbb
out
fild
dec
hlt
in
hlt
dec
mov
pop
xchg
fcom
pop
stos
dec
sti
cmp
jns
mov
ja
test
jne
push
pop
je
xchg
test
out
push
xor
cmp
stos
ins
pop
sub
popf
lds
inc
sahf
loope
jp
dec
pop
cmp
or
arpl
addr16
xor
sub
add
(bad)
push
sbb
sbb
pop
mov
and
jecxz
or
int
sahf
pop
pop
mov
sub
dec
mov
mov
popa
sub
repnz
clc
xor
cmp
inc
jecxz
pop
ret
sub
mov
jl
ss
and
jecxz
jg
imul
hlt
cwde
fidiv
inc
aas
ret
and
stos
jl
sub
jae
cmps
das
pop
(bad)
xchg
sbb
nop
or
fisttp
ja
cld
jno
stos
pop
jge
aad
adc
jmp
pop
sar
mov
inc
fisub
int
enter
jp
adc
div
add
jmp
or
mov
ss
jge
(bad)
dec
daa
ror
push
in
mov
mov
jmp
ret
cmps
inc
(bad)
sbb
shr
jne
(bad)
not
jecxz
in
movs
je
push
pusha
rcl
fdivr
push
xor
mov
sub
mov
jns
aad
outs
push
cmp
push
xchg
pshufw
and
es
pop
jmp
xlat
jl
jg
mov
scas
mov
(bad)
adc
(bad)
mov
mov
fwait
pop
in
sbb
dec
div
xchg
aam
ins
cmp
mov
scas
scas
pop
sbb
and
mov
push
(bad)
jecxz
test
dec
jnp
das
jmp
mov
xchg
clc
loop
add
xchg
dec
scas
in
dec
sub
imul
idiv
mov
fld
sbb
shr
jb
pop
sbb
fldcw
mov
bound
jne
(bad)
jp
mov
int
mov
push
(bad)
clc
js
fdivr
into
imul
sbb
cmp
lea
sub
push
nop
sub
push
add
cmps
inc
jnp
cmps
(bad)
jl
inc
xor
popa
loopne
dec
outs
leave
dec
xor
sub
movs
jno
test
pop
imul
imul
imul
bound
cmp
clc
sub
icebp
out
mov
mov
ror
div
mov
push
outs
fcmovnbe
cmps
mov
adc
lods
add
clc
(bad)
xchg
aam
(bad)
jnp
inc
fmul
aaa
mov
mov
(bad)
or
sbb
mov
xchg
lahf
sub
and
dec
mov
xor
rol
mov
addr16
push
mov
jne
mov
inc
retf
(bad)
push
retf
jmp
cmp
adc
sub
xchg
push
sti
jecxz
ins
mov
sbb
jl
pop
cmp
(bad)
repnz
adc
ins
mov
mov
fldcw
mov
movs
sub
inc
jnp
mov
(bad)
ds
pop
adc
dec
jae
adc
cmp
adc
xchg
test
mov
jbe
push
xor
cmp
es
push
loopne
in
retf
mov
ja
pop
xchg
out
mov
pop
or
pushf
and
or
pop
clts
frstor
aam
out
(bad)
jge
jo
fst
aaa
retf
jne
inc
enter
retf
scas
imul
add
cli
pop
xor
mov
push
add
stc
ss
add
repz
clc
ins
sub
jne
rcl
xor
nop
fld
push
cwde
lods
and
loopne
pushf
xchg
mov
push
aad
cmc
push
retf
rcr
xor
stos
push
aaa
sub
leave
rcr
cmps
mov
add
ss
sti
jb
inc
mov
dec
arpl
clc
adc
and
xchg
call
mov
call
mov
daa
neg
call
call
sub
jle
js
mov
mov
mov
pop
into
mov
xchg
push
dec
mov
inc
jl
pop
in
(bad)
sbb
cmps
push
sub
cdq
xor
cmp
outs
jns
test
test
cdq
out
xchg
es
or
mov
aad
pushf
sub
fld
lods
mov
(bad)
repnz
and
out
ja
inc
pusha
pop
sub
fwait
sub
int
sahf
xchg
push
sbb
arpl
push
(bad)
int3
outs
dec
pushaw
push
ins
fld
cdq
pushf
adc
push
popa
pop
add
jbe
or
leave
pop
or
sti
bound
popa
jle
push
jne
out
pop
cmp
dec
xchg
ins
and
(bad)
(bad)
cmp
and
ins
das
dec
xchg
pop
mov
push
inc
lods
xchg
cmp
fldenv
inc
mov
push
pop
lea
pop
loope
sub
std
push
dec
pop
scas
sub
jg
bound
xchg
sti
push
hlt
stos
ja
arpl
cmp
ins
inc
jnp
push
(bad)
mov
jmp
push
fstp
push
movs
repz
ins
cmps
nop
movzx
push
adc
push
or
sahf
push
test
cdq
mov
sub
cdq
dec
sti
repnz
ja
fcom
popf
imul
pop
test
and
cmp
cmp
sbb
push
fstp
mov
dec
xor
dec
sti
inc
dec
(bad)
mov
sar
lds
xor
pop
ror
mov
repz
and
adc
lods
mov
lsl
(bad)
in
push
dec
inc
mov
fs
push
fld
push
jmp
push
mov
imul
xchg
lods
pop
mov
es
cmp
add
inc
movs
mov
repz
mov
dec
call
xchg
adc
leave
jbe
or
or
xchg
(bad)
stos
mov
dec
fldenv
pop
jge
ror
jmp
jmp
push
aas
(bad)
dec
push
mov
(bad)
leave
out
or
out
mov
xor
dec
sbb
xchg
std
lock
cs
shl
dec
cmc
loopne
push
lahf
add
sub
mov
in
inc
sub
popa
into
sub
mov
ds
ss
(bad)
jl
pop
fdecstp
mov
mov
xor
sbb
cs
or
jge
ds
es
pop
loopne
mov
lock
inc
ss
cmp
push
and
retf
mov
inc
in
rcl
test
push
mov
pop
outs
and
push
outs
aad
pop
cmp
push
xor
add
call
shl
inc
repnz
pop
fist
pop
out
enter
jb
mov
hlt
mov
leave
xchg
xor
cld
pop
nop
ds
mov
imul
cmp
sub
sub
push
daa
or
imul
mov
pop
mov
dec
and
movs
cmp
cmp
pop
add
aad
add
mov
xchg
add
push
xor
in
stc
xchg
mov
xchg
stc
gs
lods
les
lock
sbb
ret
(bad)
jecxz
(bad)
retf
enter
push
pusha
in
mov
xchg
pop
cmp
adc
inc
pushf
retf
jae
xor
inc
test
scas
fsub
cdq
mov
sbb
jecxz
push
mov
js
adc
ret
sub
popf
dec
outs
retf
pop
rcl
mov
xor
pop
push
dec
popa
test
mov
mov
sbb
mov
mov
push
dec
mov
cmp
bnd
lock
mov
and
addr16
test
adc
mov
fmul
mov
mov
mov
les
cld
ds
pop
jmp
lock
call
sbb
stos
popa
pop
add
sub
add
mov
mov
mov
fdivr
cmps
jg
mov
pop
clc
dec
fistp
je
add
cmps
dec
les
retf
outs
bswap
stos
inc
add
sbb
jle
push
mov
cmp
push
out
pop
or
jmp
inc
mov
jne
adc
pop
(bad)
dec
loope
jno
xor
les
in
lods
lds
icebp
jbe
jns
jno
stos
loop
xor
sahf
mov
mov
int3
jns
push
mov
div
push
outs
sahf
mov
xor
stc
je
movs
jmp
or
or
out
repnz
icebp
(bad)
dec
mov
pop
push
jmp
inc
stos
pusha
dec
(bad)
loope
shrd
jnp
in
cmps
xor
lods
xor
sub
out
scas
add
cmp
lods
xlat
jle
aas
xor
pop
test
imul
fsubp
or
in
sub
repnz
cmp
xor
inc
mov
xor
fisubr
out
lods
mov
leave
clc
or
test
inc
inc
cmp
loope
mov
xchg
xchg
in
rcr
ds
or
lods
retf
cs
dec
call
fcom
sbb
xchg
inc
in
push
mov
xchg
and
xlat
aad
push
push
loop
adc
and
sub
addr16
mov
lea
call
cmp
mov
clc
loop
inc
lea
int
sbb
dec
and
mov
retf
add
xor
adc
in
dec
fmul
mov
outs
xchg
push
call
test
mov
repnz
(bad)
mov
mov
push
xchg
push
pop
xchg
push
(bad)
mov
in
pop
repnz
ret
jmp
xchg
cmps
and
sbb
dec
fidivr
xchg
push
lods
imul
test
mov
jb
out
inc
movs
loop
fmul
add
jl
or
addr16
jp
vpaddq
push
sub
lods
movs
push
pusha
dec
aam
lods
push
(bad)
data16
mov
fs
out
add
jge
push
in
pop
inc
push
ss
mov
dec
jmp
and
loope
pop
aam
shl
jns
dec
jle
push
sub
ss
je
retf
and
rcr
push
inc
sub
call
mov
mov
and
mov
stc
and
inc
jg
das
aam
mov
sbb
or
daa
push
cmc
adc
cmp
mov
jb
xchg
aas
mov
std
pop
iret
push
jp
sar
fld
ins
lahf
data16
jp
int
arpl
add
into
ss
lock
mov
out
lds
movs
and
jbe
test
jmp
fmulp
aad
and
bound
and
push
push
movs
jbe
test
fldenv
adc
loope
sub
into
cwde
and
jo
in
mov
sub
pop
pop
in
out
pop
lock
pop
(bad)
loopne
gs
inc
outs
arpl
sub
fcom
repz
xchg
jno
inc
imul
imul
loopne
mov
jns
into
mov
sbb
pop
loopne
(bad)
das
test
popf
fwait
jge
add
sbb
ror
push
sub
sahf
stos
imul
call
movs
mov
mov
or
cdq
cmc
shl
sub
jmp
xchg
pushf
aam
mov
pop
cmp
fs
mov
call
mov
push
mov
inc
rcl
test
push
sub
cmp
hlt
aaa
jmp
xchg
fwait
push
or
jle
pushf
mov
pop
bnd
pop
sbb
dec
aas
mov
test
mov
int3
ret
stos
and
je
adc
xchg
cmps
fs
push
es
stos
pop
retf
(bad)
and
sub
popf
xchg
cmp
lds
stos
in
popf
jns
xchg
lahf
mov
test
imul
and
retf
and
push
push
je
jnp
pop
xchg
pop
or
daa
or
in
movs
dec
scas
pop
push
lock
sub
adc
mov
in
sub
gs
mov
xchg
sub
add
fsubrp
xchg
cmc
jecxz
loope
xor
mul
jmp
leave
dec
and
daa
jmp
ffreep
inc
mov
xchg
mov
test
popf
call
add
xor
stos
push
scas
(bad)
mov
bound
push
ror
sbb
lock
outs
mov
jle
sbb
push
sub
jl
js
push
cmc
imul
cmc
inc
mov
out
sbb
icebp
sub
das
movs
push
inc
mov
push
push
xor
test
and
and
ds
jb
(bad)
mov
dec
sub
mov
xchg
adc
adc
out
pop
or
adc
pusha
das
pop
popa
icebp
scas
push
pop
adc
lahf
push
arpl
xor
inc
and
and
es
mov
nop
mov
or
test
adc
sbb
dec
ins
xor
jns
and
aad
gs
xchg
repnz
mov
cmps
sbb
fisttp
cmc
mov
cmovno
xor
mov
cdq
cmp
push
fstp
loop
dec
jg
pusha
loope
aad
add
gs
mov
inc
lds
jo
or
jmp
mov
adc
repz
out
imul
push
mov
and
jno
xchg
nop
sbb
add
shr
push
enter
push
inc
cld
xor
inc
adc
stc
gs
adc
mov
fsubp
sbb
hlt
lock
std
dec
mov
cli
jmp
jecxz
cmp
xchg
std
jbe
pop
adc
int3
push
push
hlt
push
in
sub
dec
dec
in
shl
cmp
movs
sub
push
sbb
jbe
es
xlat
ret
aad
sbb
inc
outs
adc
mov
inc
je
or
pop
js
pop
xlat
scas
cmp
outs
and
jo
adc
jecxz
data16
mov
sbb
fdiv
out
push
enter
addr16
and
or
stos
shr
add
scas
mov
(bad)
rol
mov
mov
aas
inc
mov
fisttp
xchg
fstp
jl
or
sbb
out
inc
or
mov
add
stos
pusha
test
arpl
mov
data16
jecxz
jp
(bad)
mov
lock
scas
sbb
and
nop
fdivp
lea
adc
ins
stc
(bad)
fnstcw
or
repnz
das
test
dec
pop
cwde
xor
out
fadd
aas
push
push
movs
cmps
cdq
sti
loopne
xchg
dec
lock
xchg
xor
mov
mov
shl
pop
(bad)
les
xor
pushf
jmp
call
jg
aas
enter
test
xchg
and
cmps
add
xchg
cdq
sub
mov
rcl
in
imul
mov
in
iret
cs
div
scas
std
xchg
cdq
mov
pusha
push
retf
cmovp
add
push
xor
sub
push
imul
mov
aaa
pop
sbb
loopne
or
stc
mov
cdq
mov
push
enter
fmul
ja
lock
sub
and
mov
jne
adc
cmp
in
push
xchg
cs
sti
mov
mov
adc
pop
jp
inc
popa
ret
dec
fnstenv
das
sub
xchg
add
sub
dec
mov
cmp
ss
sbb
mov
call
adc
fstp
sbb
clc
rol
clc
mov
test
ss
outs
lock
adc
mov
sbb
lods
retf
adc
les
aaa
shl
jp
jmp
lds
mov
leave
dec
xor
and
jmp
mov
mov
mov
fisubr
dec
pop
std
adc
mov
into
adc
enter
ins
jg
cdq
lds
sub
into
xchg
mov
push
push
sub
lods
sbb
retf
or
movs
test
or
cmp
xchg
mov
pop
add
int3
rcl
test
(bad)
push
or
sbb
in
cmps
cmp
cld
idiv
push
loop
fstp
mov
mov
rcr
lods
lahf
(bad)
adc
sbb
fcmovb
xlat
pop
hlt
into
fdiv
iret
ins
(bad)
pusha
cs
mov
js
imul
call
mov
inc
cmp
add
rcr
pop
push
mov
int3
mov
xchg
aas
aaa
stc
mov
(bad)
jbe
popa
cwde
mov
jge
sbb
pop
sub
fdiv
data16
sub
xchg
lahf
std
push
add
or
in
sbb
lock
xor
lods
movs
inc
pop
and
dec
jb
inc
jmp
xchg
sti
loopne
retf
sbb
cmovge
adc
fiadd
adc
mov
inc
mov
nop
aas
shl
jmp
cli
xchg
xchg
lods
jae
aaa
into
outs
in
xor
mov
or
dec
dec
mov
push
cwde
inc
push
in
test
dec
xor
xchg
mov
and
push
push
cmps
and
sti
(bad)
and
mov
lock
lahf
shl
mov
or
xchg
mov
call
aam
push
xor
or
xchg
dec
(bad)
adc
jb
mov
dec
or
pop
mov
mov
neg
test
jge
and
mov
add
or
mov
and
retf
lahf
jl
inc
mov
dec
lock
ret
call
int3
popf
jecxz
mov
in
push
mov
or
xchg
shl
dec
sbb
cmp
jl
ret
test
mov
outs
adc
sub
jmp
fbld
add
sbb
fwait
loope
or
mov
rol
shl
adc
(bad)
pusha
test
inc
adc
daa
arpl
mov
js
sub
mov
cli
fist
mov
push
not
xchg
push
je
iret
sub
xchg
mov
ins
cmp
xlat
clc
xchg
sbb
jne
cmp
(bad)
sti
mov
les
jp
dec
std
or
sub
add
dec
cs
out
test
or
int
sub
dec
ins
mov
xchg
test
arpl
and
outs
call
push
into
data16
dec
enter
cmp
jbe
scas
loopne
xchg
push
cmp
jb
mov
or
cmp
push
das
cwde
jecxz
and
(bad)
push
push
and
xchg
mov
daa
or
jp
xor
xor
repz
icebp
out
xor
(bad)
outs
es
pop
xor
pop
xchg
sahf
iret
add
ss
fisttp
fld
mov
xchg
sbb
movs
add
(bad)
dec
and
(bad)
lahf
clc
inc
add
mov
jle
sahf
fst
test
test
push
les
adc
push
nop
fist
sub
test
pusha
mov
jge
mov
addr16
std
jmp
push
cli
inc
repz
icebp
(bad)
jmp
in
inc
mov
sar
jne
sbb
dec
mov
cmp
test
xor
jl
les
repz
inc
jb
aam
mov
jno
xchg
clts
lods
push
xchg
rcr
popa
dec
xor
das
ins
lds
setns
daa
cmp
pop
ja
jnp
mov
loop
std
es
mov
aaa
retf
sbb
and
mov
movs
jmp
arpl
mov
(bad)
jle
jp
dec
pushf
adc
xor
(bad)
pop
pop
adc
sbb
call
call
mov
adc
in
aaa
add
sub
jb
daa
mov
inc
scas
add
out
inc
enter
jo
xchg
or
retf
daa
push
gs
inc
fs
dec
mov
lea
fadd
pop
aaa
(bad)
cld
mov
sahf
popf
or
call
iret
and
pop
push
out
add
sbb
test
add
leave
fldenv
cmp
imul
xchg
(bad)
sahf
jns
dec
(bad)
push
sub
xor
retf
cli
out
call
adc
imul
xor
jmp
je
popa
and
out
sbb
fist
in
xor
ret
sub
cmp
(bad)
sub
cli
leave
jno
lea
fadd
inc
pop
sbb
xchg
das
and
sti
test
stc
jp
mov
jmp
es
pusha
push
in
jbe
xor
sub
sti
test
mov
inc
push
pop
mov
mov
push
fs
and
outs
pop
aas
test
xor
dec
cs
inc
jle
imul
fmul
clc
sbb
in
mov
imul
sub
push
inc
rsm
shr
ficomp
cdq
iret
leave
fwait
xchg
and
sub
sub
sbb
xchg
test
mov
(bad)
loopne
mov
mov
jle
out
or
add
push
ror
pop
mov
inc
xchg
in
sbb
inc
cld
xchg
sbb
cmp
sti
jae
sub
test
shr
inc
xchg
cld
nop
inc
xor
or
pushf
xor
xchg
xlat
aad
retf
add
inc
xor
cmp
lea
add
lods
mov
mov
scas
leave
mov
ins
mov
das
gs
jge
ror
push
cmp
scas
pop
jne
int
in
mov
mov
mov
out
test
sbb
sub
imul
and
clc
adc
fs
jb
sbb
sbb
push
cmp
mov
arpl
cwde
cmc
pop
aas
dec
outs
mov
jae
ins
xor
push
lahf
inc
rcr
pop
add
sub
inc
scas
(bad)
and
jmp
and
cmp
pusha
iret
imul
fld
sbb
popa
add
test
dec
push
and
loopne
dec
addr16
mov
rol
popa
shr
(bad)
aas
outs
in
or
mov
or
mov
int3
sbb
sub
sahf
fdiv
xchg
js
xchg
je
mov
in
(bad)
mov
test
lods
hlt
xchg
stos
adc
mov
and
jae
xor
and
inc
cmps
(bad)
jg
test
xor
pop
nop
leave
aam
or
call
fsubrp
mov
sahf
dec
aam
push
jmp
jg
(bad)
and
mov
scas
call
mov
pusha
leave
cwde
rcr
add
out
mov
cmps
cld
pop
inc
fldcw
sbb
leave
loopne
sti
outs
ret
in
in
sbb
das
mov
nop
xor
(bad)
(bad)
cld
icebp
mov
or
lds
dec
sbb
sbb
imul
jmp
jecxz
push
dec
mov
icebp
xchg
stc
and
cmp
pop
xor
outs
jb
fnstenv
pop
mov
cmp
int
lods
mov
pop
stc
mov
or
cld
in
ss
xor
fwait
sbb
loope
out
in
cmp
loope
je
mov
dec
dec
cli
pop
je
mov
pop
push
xor
xchg
pop
inc
dec
loopne
(bad)
pop
xor
rcr
jne
and
mov
sub
mov
xchg
sbb
and
ror
loope
mov
cmp
shl
aas
cmp
sbb
iret
test
add
outs
mov
aam
mov
jg
jg
imul
sub
adc
dec
adc
outs
loop
sbb
jbe
jbe
push
push
int
mov
pusha
cmp
loopne
mov
call
jge
jge
ja
int
push
jecxz
dec
mov
fcmovnb
lods
call
and
push
dec
pop
adc
cmp
pop
fs
xlat
arpl
nop
stc
scas
(bad)
pop
mov
jecxz
bound
cld
xchg
add
mov
ror
bnd
adc
add
and
cmp
lods
mov
mov
pop
lahf
cmp
jmp
mov
jmp
mov
and
pusha
es
dec
sbb
xcrypt-cbc
cmps
push
push
adc
enter
loope
dec
fcomi
mov
and
mov
fcomp
lahf
pop
push
jp
icebp
cmps
pop
sti
dec
add
sub
or
addr16
sub
sub
push
inc
pusha
jnp
out
pop
pusha
test
fld
test
test
adc
dec
jae
daa
push
add
or
jnp
or
mov
dec
xlat
or
lahf
jecxz
xchg
fwait
or
jmp
das
aam
data16
adc
repnz
adc
out
and
jns
aad
dec
jge
pop
in
cmp
scas
into
or
in
jb
cwde
push
sti
ficom
rol
lods
xchg
jmp
xchg
jge
ins
rcl
cmp
ss
inc
xchg
mov
aaa
add
jne
jmp
mov
mov
add
mov
jle
out
mov
and
shl
out
jg
sbb
bswap
and
adc
push
test
jo
push
lods
sbb
xor
retf
hlt
or
mov
mov
xchg
push
jno
dec
dec
inc
cmp
shr
sbb
nop
leave
and
repz
shr
stos
cmp
jnp
in
push
sbb
add
cs
into
jne
lock
cmp
adc
sub
add
or
xchg
dec
(bad)
test
mov
jmp
out
clc
(bad)
cdq
lods
int
mov
sti
imul
or
pop
shr
stos
mov
arpl
dec
out
(bad)
dec
inc
lahf
adc
mov
add
call
and
icebp
or
outs
pop
mov
xlat
and
xor
cmp
mov
xchg
outs
std
int
push
mov
retf
into
sbb
pop
cmp
jl
popa
add
mov
icebp
cmp
out
movs
retf
dec
jno
fadd
and
sbb
(bad)
mov
sub
add
sub
and
dec
xor
sbb
cmp
dec
nop
in
pop
clc
call
mov
std
mov
jae
xchg
scas
jp
bound
cld
pop
adc
sub
aad
mov
popf
jecxz
inc
aad
push
repnz
push
repz
dec
imul
jne
mov
dec
int3
pusha
das
movs
shl
scas
pop
sbb
xor
test
in
adc
push
jg
mov
mov
mov
and
xor
dec
inc
nop
mov
and
inc
mov
pop
cmps
cmps
bound
stos
(bad)
mov
mov
sar
mov
adc
cmc
cli
push
and
dec
inc
dec
in
ja
xchg
xchg
mov
movs
xchg
mov
and
pop
xchg
mov
outs
stos
xor
push
mov
cs
fwait
push
pop
cmovbe
sbb
pop
faddp
xor
push
add
sub
mul
fimul
or
icebp
lahf
inc
add
out
je
movd
add
dec
int
ror
push
sub
dec
adc
int3
mov
cmps
adc
or
and
sbb
mov
loopne
(bad)
and
movntps
cmp
ds
or
adc
rcl
into
inc
fmul
aam
scas
fs
or
push
ror
jnp
movs
and
add
neg
rcl
mov
pop
dec
and
push
stc
sub
jge
pop
add
push
jne
enter
mov
pop
imul
jp
shl
adc
add
sbb
ins
and
nop
ins
retf
test
inc
cld
add
sub
cmp
loope
lods
ins
xlat
mov
and
in
push
adc
or
xchg
into
dec
popf
sbb
jmp
dec
dec
cmps
cli
pop
inc
pop
call
or
(bad)
cwde
scas
push
push
or
jns
mov
xchg
int
and
test
mov
jp
hlt
aaa
in
mov
or
mov
dec
inc
xor
or
xchg
mov
xchg
bound
repnz
call
xchg
loopne
call
and
jbe
push
pop
test
and
in
aam
out
xchg
mov
clc
sbb
push
add
stos
push
pop
dec
adc
mov
push
sbb
sub
add
sahf
mov
adc
lds
and
mov
test
sub
jno
fdivr
cld
fdiv
daa
jecxz
ret
ss
dec
daa
popf
push
jecxz
pop
mov
mov
or
cli
push
mov
cld
sahf
jecxz
bound
and
sub
es
in
sbb
into
dec
jp
lods
pop
dec
retf
xchg
adc
inc
mov
jbe
outs
xchg
mov
inc
daa
imul
xor
cli
push
lock
or
cmp
cmp
pop
out
lea
test
sahf
add
xchg
sub
jmp
retf
mov
xchg
outs
retf
call
and
xchg
sti
cli
outs
repnz
repz
enter
push
stc
cmp
scas
inc
cs
cmp
pop
xor
cmp
lock
mov
in
push
fwait
and
aad
push
jg
arpl
sahf
push
ror
in
outs
lds
shr
push
in
outs
and
add
fs
test
sbb
(bad)
jge
cs
pop
xchg
je
xchg
xchg
or
aaa
cmp
hlt
or
jo
(bad)
or
shr
imul
pop
xchg
xchg
iret
cmp
pushf
push
test
push
xchg
xor
sahf
or
xchg
dec
movs
loopne
or
jns
std
push
test
arpl
popf
and
out
lods
pop
xchg
xchg
pop
mul
(bad)
out
push
inc
add
js
cmps
std
sbb
inc
aaa
dec
push
sbb
xor
sbb
sbb
scas
fwait
rcr
ins
fmul
int3
push
cmp
sbb
cmp
retf
int3
lods
mov
rol
repnz
(bad)
loope
scas
add
mov
lods
cmp
ja
ins
into
jnp
xor
mov
(bad)
in
xchg
cmp
mov
dec
ret
out
push
add
mov
cmp
mov
mov
popf
in
mov
dec
js
mov
cmp
mov
and
call
jge
ds
mov
stos
sub
cli
popa
pushf
or
dec
jne
icebp
dec
lds
jmp
not
cmc
mov
lds
cmp
sbb
mov
pop
icebp
call
outs
cmp
sub
popf
sub
sub
cmp
lods
lea
fs
retf
dec
and
ror
fmul
ja
jnp
push
jo
push
mov
rol
inc
sub
cmp
inc
call
sti
enter
cwde
or
aaa
ror
mov
into
jno
movs
sbb
loop
movs
push
cmc
push
cmp
leave
mov
mov
and
jl
out
push
shl
pop
push
xchg
in
sbb
jno
scas
out
push
das
and
loope
pop
aas
ss
sub
movs
mov
daa
adc
loopne
stc
adc
icebp
pop
cli
mov
xor
mov
jnp
mov
push
and
ficom
fldenv
xor
cmp
and
outs
mov
cmovae
pop
sbb
sahf
pop
jns
ja
bswap
aas
dec
fadd
add
shl
adc
into
mul
cmc
jns
mov
push
mov
shl
ja
out
cmp
cmc
cmp
repz
in
clc
jge
iret
push
dec
pop
sbb
out
sub
(bad)
fwait
pop
mov
loopne
jo
jns
jne
ja
sar
js
add
loope
xchg
sub
data16
aas
and
cwde
fisttp
pusha
clc
scas
arpl
mov
ret
push
lods
aaa
test
jmp
sahf
push
rol
sar
push
dec
add
mov
add
popf
bound
dec
call
push
shr
add
jmp
mov
mul
pop
xchg
add
xchg
sub
fstp
add
mov
sub
repnz
es
push
pushf
pop
inc
daa
add
and
ret
adc
stc
cmp
cli
jno
out
ss
xchg
dec
or
and
mov
fistp
std
xchg
(bad)
(bad)
jl
retf
sti
ds
or
scas
shl
mov
xchg
dec
xchg
outs
pop
pop
nop
jbe
add
loope
int3
xchg
push
mov
mov
in
jl
xchg
xchg
sahf
out
leave
nop
mov
jb
add
inc
popf
cmp
xor
push
imul
push
jl
fnstcw
out
out
xor
and
jnp
lock
repz
out
dec
in
retf
sbb
shr
popf
mov
pop
xrelease
jp
ins
js
loopne
stos
and
fs
pop
cdq
push
(bad)
xor
jmp
sub
and
dec
mov
mov
mov
push
call
test
add
xchg
lds
mov
sahf
js
fist
xchg
data16
int3
adc
mov
imul
(bad)
neg
test
mov
ror
dec
outs
pop
popa
or
xor
push
pop
sbb
dec
inc
xor
or
add
jp
int3
mov
aad
cmp
mov
jae
add
pop
mov
mov
add
push
das
push
mov
mov
pusha
and
mov
pop
xor
inc
popf
shl
bound
inc
lahf
repz
and
sub
(bad)
jle
push
inc
shl
jmp
cld
loop
dec
pop
mov
mov
mov
in
movs
movs
pop
dec
aad
push
lds
cmps
popa
imul
enter
scas
mov
mov
fwait
movs
pop
test
pusha
xor
xor
push
out
fmul
jne
pop
mov
mov
ins
xor
jne
push
push
stos
(bad)
sbb
mov
pop
push
leave
adc
sbb
movhpd
mov
cwde
mov
mov
ror
enter
call
mul
fbstp
(bad)
jp
fwait
cmp
ss
and
adc
les
xchg
inc
pop
dec
pop
mov
pop
push
fmul
ds
cmps
or
cwde
sbb
scas
jmp
(bad)
sbb
dec
inc
lock
test
mov
xor
mov
pushf
call
cmp
mov
fnstenv
psrlq
inc
lea
(bad)
adc
push
stc
or
int3
test
shr
xor
adc
sbb
mov
ret
push
lahf
pminsw
shl
jno
mov
leave
movs
(bad)
push
jno
dec
stc
mov
shl
adc
xchg
icebp
(bad)
jge
add
mov
add
das
lds
stos
cmp
jmp
dec
inc
lods
add
fidivr
jbe
jo
inc
enter
mov
and
ja
add
cmp
out
or
fsub
mov
xchg
adc
mov
cld
pop
xor
and
cli
rcl
xchg
(bad)
pusha
je
fadd
push
lods
push
mov
retf
(bad)
cmc
adc
out
lods
push
enter
mov
pop
and
or
sub
stc
das
mov
jg
add
xchg
into
loopne
or
and
jbe
mov
das
stos
xchg
cmp
dec
loope
lods
test
aam
in
mov
mov
push
stos
dec
fldcw
(bad)
mov
fdiv
daa
mov
sub
push
push
xchg
test
dec
ins
lods
and
or
jp
pop
sti
xchg
mov
repz
cdq
out
loopne
add
je
or
sbb
inc
cmp
inc
fldenv
xchg
jbe
aad
mov
dec
adc
into
or
or
dec
sti
sub
adc
mov
arpl
pop
aaa
call
call
mov
push
pop
(bad)
add
setge
mov
sub
fst
cmp
push
xchg
out
pop
sub
sub
pop
sbb
out
fyl2x
jns
xor
clc
adc
jae
mov
jmp
sbb
mov
or
jno
arpl
adc
pop
in
aam
xchg
hlt
test
call
(bad)
addr16
out
push
shr
pop
retf
fs
xchg
(bad)
xor
adc
dec
cmp
retf
mov
ds
fwait
(bad)
pusha
push
and
sbb
clc
push
aam
jo
jns
stos
cmp
rcl
dec
popf
test
xchg
cmp
dec
xchg
dec
push
pop
xchg
idiv
cdq
mov
popa
mov
aas
mov
mov
loopne
dec
cmp
jne
inc
stos
sbb
mov
lea
push
(bad)
push
inc
push
loop
pop
daa
loop
mov
xchg
test
push
push
ret
jbe
inc
cmp
test
iret
ret
hlt
and
ja
pop
jae
fisttp
mov
push
out
mov
adc
and
xor
adc
push
push
mov
cli
mov
jne
inc
mov
test
mov
popf
jecxz
inc
push
ror
or
mov
in
mul
mov
ret
into
ror
loop
jns
mov
nop
mov
xor
imul
fild
and
jns
gs
push
mov
inc
push
in
fcomp
dec
stos
xchg
dec
or
daa
and
ins
rol
add
aaa
es
adc
push
dec
cli
push
les
scas
scas
jno
cdq
les
pop
jg
into
sti
mov
jae
cmc
jae
sar
sub
fld
mov
adc
mov
neg
fild
enter
enter
mov
hlt
mov
(bad)
mov
rcl
test
sti
ffreep
or
add
jo
cdq
inc
test
mov
mov
push
shl
mov
out
jmp
xchg
pop
ss
xor
mov
cmp
std
or
mov
push
xchg
or
cdq
rcl
stos
mov
aaa
addr16
sub
inc
push
out
mov
repnz
inc
dec
push
push
(bad)
fwait
xchg
cmp
aaa
or
xlat
jno
cmp
xor
je
jbe
jns
push
mov
dec
pop
out
fcom
mov
push
mov
sub
ret
mov
hlt
js
mov
fldpi
adc
int3
aam
sbb
jmp
jge
xchg
mov
sar
rep
in
mov
sbb
call
ror
jb
lds
sub
ror
fld
imul
xchg
mov
mov
or
jo
loopne
pop
fdivr
jo
cmp
popf
xchg
std
jmp
in
retf
cmp
popf
cmps
or
sub
sub
fnstcw
pop
ss
ins
call
int3
pop
jge
cmp
mov
imul
add
jmp
sahf
xchg
dec
imul
cmp
(bad)
and
mov
outs
outs
dec
mov
jg
repnz
out
aaa
das
sar
fdivrp
adc
std
fdiv
mov
bnd
xchg
jae
out
adc
mov
int
sti
jmp
sbb
xchg
mov
(bad)
frstor
iret
xchg
(bad)
mov
(bad)
call
test
cmp
vmread
aaa
dec
jmp
es
cmp
pop
fisubr
inc
outs
cmp
mov
sub
movs
add
rol
leave
jg
mov
gs
sar
ss
push
loope
mov
jge
add
call
test
sub
out
(bad)
call
lahf
int
sub
mul
mov
sub
xchg
mov
daa
cmp
test
stc
test
dec
dec
stos
pop
push
inc
test
arpl
cmp
xor
mov
in
xchg
xchg
mov
enter
adc
jle
mov
test
enter
mov
ficom
into
mov
dec
mov
pop
or
dec
inc
pop
sub
repz
loope
js
sbb
sbb
sub
mov
(bad)
sbb
pop
adc
(bad)
ins
sub
lea
pop
sbb
pop
call
or
adc
imul
pop
in
(bad)
(bad)
push
loop
mov
jns
adc
in
push
mov
adc
ja
out
jbe
push
jl
cmps
sub
adc
mov
leave
cdq
push
mov
shl
push
jne
sbb
and
cmp
stos
jmp
xor
mov
retf
cmps
mov
cmp
xchg
mov
dec
mov
push
jmp
cs
and
mov
cmps
fcomp
sbb
ss
into
sub
call
out
inc
sbb
lahf
xlat
cmp
mov
xchg
or
ja
sbb
sbb
jl
fdivrp
rcr
jg
mov
xchg
int
stc
xchg
mov
in
push
push
inc
test
or
sbb
mov
out
mov
cvtps2pi
or
mov
dec
jmp
cwde
nop
or
iret
outs
sbb
sub
repnz
mov
cld
lods
mov
enter
inc
aas
xchg
mov
add
popf
push
sbb
pop
xchg
retf
scas
jbe
cmp
test
push
retf
rol
cld
or
(bad)
loop
cdq
or
nop
fwait
cdq
(bad)
push
dec
cmp
enter
popf
mov
or
ss
push
or
es
push
pop
xchg
aaa
cmps
push
pop
sub
sbb
add
pop
lods
call
lods
cmp
in
int3
imul
xchg
jg
mov
push
loopne
stc
mov
inc
loop
sahf
xlat
sbb
ss
mov
popf
mov
daa
mov
mov
pop
inc
sub
movs
ins
inc
jb
paddw
ins
ret
jbe
pop
sbb
adc
fcomp
cli
cmp
retf
xchg
clc
mov
fdivp
pop
inc
cmc
mul
fdiv
jbe
push
jne
and
sbb
jmp
jge
adc
inc
xchg
xchg
lods
out
dec
fsub
outs
inc
(bad)
jb
xor
xor
mov
icebp
dec
out
pusha
ficomp
dec
jle
cwde
mov
imul
cmps
mov
addr16
jno
popf
xchg
xlat
sahf
bound
in
dec
mov
sar
mov
mov
lahf
xchg
pop
and
add
mov
(bad)
sbb
and
or
fidivr
sbb
pop
pop
push
adc
(bad)
xchg
jl
rcr
push
movs
pop
mov
out
sbb
jmp
ret
sbb
cmps
mov
jecxz
loopne
mov
sahf
lock
and
pop
or
movs
aas
cmp
lock
mov
stos
lahf
cmp
iret
jo
and
jl
call
xor
sub
push
iret
inc
dec
mov
icebp
leave
or
jg
test
cmp
sahf
adc
push
aas
stc
adc
mov
jle
sbb
cmc
fild
mov
jbe
div
mov
lock
pusha
xor
adc
icebp
xor
movs
mov
mov
sub
mov
push
mov
in
sahf
je
mov
push
cmps
cmp
inc
cmp
je
mul
or
call
or
push
or
mov
jno
xchg
loop
mov
mov
inc
sbb
outs
push
adc
push
cmp
pop
xor
mov
push
or
jae
cdq
dec
(bad)
ja
into
jmp
pop
mov
out
xor
mov
ss
inc
jns
inc
push
mov
outs
jno
dec
xchg
dec
jmp
test
fidiv
xlat
jge
cs
push
xchg
jg
ror
jmp
mov
jecxz
adc
sahf
and
or
jbe
(bad)
aad
clc
out
or
pop
mov
sti
stos
sub
jns
popf
sti
in
inc
jo
mov
sahf
push
or
dec
add
push
outs
dec
enter
mov
jle
loop
fidiv
dec
mov
mov
push
leave
(bad)
loopne
fs
push
inc
jg
lods
pop
rcl
adc
out
sub
push
sbb
mov
retf
(bad)
fisubr
sub
(bad)
leave
pop
retf
hlt
lock
popf
and
out
out
mov
push
mov
dec
loope
jmp
adc
mov
cmps
cwde
in
jnp
add
out
leave
cmp
mov
inc
cwde
push
mov
pop
xor
lods
and
add
sub
(bad)
and
inc
test
out
leave
push
mov
mov
rcl
aaa
pop
pusha
lds
sbb
adc
popf
jb
add
cmp
in
cmps
hlt
rol
gs
pop
pusha
pop
in
out
(bad)
and
retf
movs
lods
xchg
popa
dec
push
shl
inc
dec
sub
dec
ds
add
enter
retf
fwait
and
mov
push
dec
das
pushf
cwde
test
aad
or
sub
test
jg
pushf
dec
loope
jne
sbb
pop
hlt
dec
cwde
adc
mov
cmp
mov
mov
mov
push
mov
addr16
cmps
daa
call
pop
hlt
(bad)
xor
dec
dec
lock
shl
in
test
sahf
pop
ret
jmp
in
jge
adc
ins
dec
and
dec
inc
in
fstp
imul
add
movs
(bad)
shl
pusha
lds
mov
inc
cmp
mov
jnp
xchg
mov
pop
fwait
mov
and
inc
xor
lods
je
add
shr
sbb
cwde
stc
push
xchg
jo
xor
pop
dec
and
push
mov
push
jbe
sub
jbe
sub
pop
mov
sbb
popf
jg
adc
sahf
adc
fucom
mov
push
fiadd
int3
adc
xchg
mov
push
dec
call
jnp
jp
lea
mov
in
pop
mov
cmp
inc
sti
push
into
ins
sbb
and
sar
mov
jae
pop
cmc
cwde
ficomp
dec
or
cdq
int
arpl
mov
or
fisubr
cmp
mov
xchg
mov
jecxz
cmp
mov
mov
test
cdq
stc
xlat
pop
mov
inc
daa
cdq
xchg
pop
mov
dec
cli
cmp
push
retf
adc
inc
cli
ret
test
icebp
js
fisttp
xlat
rol
ret
rcl
mov
jp
mov
dec
inc
adc
jb
daa
mov
cli
mov
out
add
movs
push
jnp
out
out
iret
scas
inc
or
or
jle
dec
and
fwait
pusha
push
pop
inc
(bad)
icebp
or
and
jg
ret
sub
ss
dec
pop
fcom
out
add
mov
in
fxch
push
mov
sbb
cmc
ret
pop
out
add
(bad)
jge
shl
pushf
mov
jb
in
ss
iret
inc
ret
xchg
out
push
mov
mov
pop
jmp
jo
outs
push
pusha
out
jae
mov
add
shl
or
inc
dec
call
dec
jg
mov
sar
jno
fist
mov
mov
add
(bad)
inc
mov
lahf
adc
jb
clc
mov
inc
or
jl
shl
add
in
or
mov
loope
or
push
retf
sub
in
pop
std
inc
mov
cmp
div
(bad)
mov
jg
jne
scas
inc
stos
mov
repz
mov
outs
pop
pop
cmp
mov
mov
shl
dec
jbe
jg
mov
ficomp
or
retf
mov
dec
jecxz
dec
popa
cs
cld
arpl
pop
stos
adc
iret
push
jl
or
and
add
jg
ret
xor
ins
xchg
and
loope
adc
sbb
test
addr16
das
rol
adc
int3
sub
out
aam
(bad)
fsubr
fld
sbb
xchg
in
mov
sub
add
sbb
leave
ja
sub
push
pop
into
cmp
fcmovnu
xor
imul
nop
int
sub
dec
hlt
sti
shr
push
mov
jg
bound
sbb
jmp
inc
les
pop
retf
in
dec
into
scas
jmp
add
cmps
je
aam
lods
xchg
or
sti
add
(bad)
add
(bad)
mov
jge
add
sub
pop
test
mov
mov
(bad)
fdivr
jle
lea
inc
jmp
dec
popa
fadd
in
test
xor
cmovno
rol
clc
fxch
add
ror
pusha
jmp
lahf
or
jo
loop
mov
mov
jecxz
push
sub
xchg
or
popf
aas
arpl
inc
push
jecxz
fs
ror
sub
pop
fcomp
inc
mov
icebp
popa
jecxz
leave
(bad)
lods
inc
xchg
pop
ret
xchg
gs
push
popf
push
shr
into
adc
sbb
push
fwait
jbe
and
daa
jb
inc
push
or
cld
ret
movs
push
mov
dec
repz
or
inc
in
nop
sub
call
sbb
(bad)
xchg
pusha
mov
aam
call
iret
js
dec
ret
aaa
pop
out
or
sub
ss
arpl
or
dec
xlat
and
call
sub
jne
iret
repz
sbb
xor
adc
cmp
and
mov
mov
or
push
lock
sti
xchg
in
shl
mov
leave
(bad)
push
pusha
fdivr
inc
sbb
(bad)
sub
inc
add
clc
hlt
jne
int
xchg
fwait
dec
pop
pusha
xor
dec
xchg
ds
jno
shl
cld
mov
pusha
mov
mov
pop
pop
enter
retf
imul
pop
mov
pop
repz
jnp
addr16
inc
loopne
imul
add
(bad)
xchg
or
(bad)
pop
dec
dec
rcr
jp
ins
(bad)
dec
mov
gs
loop
scas
dec
(bad)
cdq
push
jecxz
fld
pop
push
mov
mov
fistp
jge
mov
jp
jns
ror
stos
sbb
push
int3
fbld
fucom
sahf
xchg
popa
in
sub
repz
mov
outs
cmps
mov
push
sbb
hlt
jge
sub
mov
rep
out
mov
adc
inc
xchg
sub
sub
or
or
push
sub
add
loope
(bad)
ins
push
daa
mov
icebp
aam
in
lahf
out
inc
push
push
xchg
xchg
sub
fxrstor
shl
xchg
call
push
jns
ss
mov
loopne
stos
icebp
or
adc
cmp
inc
pop
cmp
fsubr
imul
sbb
inc
cmp
cmp
add
cmp
inc
pop
retf
(bad)
xor
pop
aad
adc
mov
retf
mov
dec
jns
pop
push
pop
iret
jo
out
shl
pop
movs
repnz
std
add
rcl
(bad)
mov
mov
fwait
loopne
xor
xchg
add
pop
outs
inc
adc
bound
sbb
inc
xchg
ds
lods
sub
stos
sbb
clc
retf
in
(bad)
repz
sbb
inc
je
fiadd
ret
test
in
inc
mov
nop
mov
hlt
mov
sub
(bad)
out
jge
xchg
pop
pop
(bad)
lods
inc
aas
sahf
adc
aam
repnz
out
push
mov
sub
lahf
mov
repnz
jns
jnp
sub
and
sbb
fs
out
mov
fisub
aad
in
xchg
sti
aam
xor
fwait
pop
cli
stc
push
dec
fsub
icebp
jne
cld
aad
lds
mov
fidivr
out
dec
pop
aad
xor
push
dec
xchg
push
mov
adc
adc
xor
clc
mov
fcmove
int3
jnp
mov
bswap
sbb
push
test
fmul
les
lods
jnp
fs
ficom
jg
sbb
jmp
aad
nop
mov
test
pop
sbb
jecxz
lds
mov
mov
xor
adc
pop
mov
inc
dec
popa
test
rol
mov
out
stos
or
and
adc
arpl
arpl
adc
xor
xor
pop
pop
lods
in
add
mov
jp
push
add
and
nop
push
imul
add
add
mov
mov
jmp
jno
sub
xchg
sbb
mov
jge
inc
xor
fistp
pminsw
add
jmp
push
sub
(bad)
sub
pop
inc
cwde
pop
push
adc
imul
gs
adc
daa
fs
lahf
stc
or
cmp
mov
into
jmp
mov
lods
ins
cmps
jno
jnp
mov
shr
sbb
cmp
mov
mov
cmp
xor
imul
lahf
shl
mov
sti
sar
push
inc
cmp
mov
jnp
dec
xor
or
inc
mov
mov
or
xor
imul
adc
xor
shl
scas
inc
xchg
cs
mov
jl
mov
pop
movs
stos
dec
jl
dec
adc
pop
inc
cdq
arpl
mov
pop
pop
int3
imul
push
cli
or
popf
jmp
lods
push
(bad)
sub
cmp
sti
es
repz
xchg
repz
test
repnz
fmul
loopne
add
and
mov
sub
mov
retf
fidivr
mov
mov
pop
inc
inc
jno
mov
pop
dec
jne
dec
out
push
mov
push
stc
adc
fwait
and
dec
icebp
sub
call
cli
mov
cwde
sub
jae
retf
and
xor
pop
or
es
iret
lea
ss
add
jnp
into
jo
jo
jp
outs
jnp
sub
cmp
repnz
or
retf
adc
adc
adc
sub
cmp
cmp
je
xchg
pop
pop
(bad)
jecxz
xchg
push
sbb
pop
in
cmp
or
jmp
std
or
call
retf
retf
call
rcr
fwait
loop
inc
icebp
loop
xchg
dec
jae
out
adc
mov
mov
mov
cs
mov
in
jmp
mov
add
rcl
cli
fldenv
push
das
std
mov
rcl
cmp
xor
into
sub
retw
push
ss
test
xchg
sub
sbb
mov
test
test
adc
enter
cmp
das
loope
sub
adc
dec
mov
(bad)
and
(bad)
movs
sbb
fsubr
xor
jnp
or
jg
fucomip
jmp
(bad)
(bad)
movs
inc
(bad)
(bad)
mov
jl
pop
std
mov
jmp
ins
push
or
push
inc
dec
pop
push
inc
cmp
adc
push
icebp
clc
push
popf
mov
gs
pop
rcr
jo
lea
(bad)
jecxz
sbb
and
out
call
push
and
sub
inc
dec
shl
jle
dec
xchg
push
mov
push
jbe
mov
mov
add
inc
int3
mov
inc
loop
add
(bad)
push
jne
call
movs
fwait
xor
jo
mov
ss
push
jb
push
pusha
outs
retf
push
leave
scas
xchg
iret
addr16
rcl
pusha
xchg
(bad)
ins
adc
mov
call
mov
jae
and
mov
pop
adc
xchg
jae
add
jmp
test
xabort
ss
and
sbb
pop
lds
pop
repnz
outs
mov
xor
idiv
dec
inc
ficomp
sbb
xor
rsqrtps
mov
out
imul
xchg
jnp
xor
and
out
jecxz
test
mov
cwde
mov
or
xchg
mov
dec
push
and
jg
mov
adc
ja
jno
ins
sbb
jle
mov
stc
movs
mov
popf
mov
push
mov
adc
mov
sbb
stos
cmp
or
mov
cld
imul
and
cmc
aam
and
and
mov
mov
call
loope
sbb
or
inc
(bad)
pop
cmps
loopne
daa
int
jge
push
cmp
(bad)
mov
cmp
into
xor
inc
in
pop
mov
test
lods
rol
stos
xor
test
cmp
dec
mov
imul
call
ror
push
dec
pop
clc
xor
sbb
pusha
je
xor
and
clc
cmp
ja
xchg
mov
in
mov
jp
dec
das
sbb
xchg
sbb
leave
add
gs
jae
add
mov
pop
out
dec
les
sub
mov
add
imul
dec
push
xchg
mov
arpl
mov
into
inc
out
lods
mov
dec
sub
xor
mov
xor
shr
mov
jecxz
hlt
(bad)
shr
pop
out
xlat
fnstsw
sub
js
(bad)
(bad)
cmp
dec
push
push
mov
jl
jmp
ja
and
mov
cli
cmps
inc
add
std
call
jmp
std
add
ficom
and
sub
call
jmp
test
rcr
aas
sti
je
repnz
push
es
push
cmp
dec
cmps
fcomp
sub
push
mov
or
daa
loopne
or
push
jl
outs
scas
or
add
xor
ret
and
cmps
and
sbb
aad
sbb
pop
enter
dec
lock
pop
mov
adc
stos
sub
movs
inc
cdq
sub
dec
js
les
dec
adc
rcl
stos
out
cmp
xchg
rol
jne
arpl
xchg
stos
mov
ins
addr16
push
dec
or
sub
cli
jne
dec
shl
or
lds
jmp
das
test
sbb
fs
cmp
dec
bound
out
jg
in
add
cmp
sub
add
fidivr
not
lea
xchg
std
inc
mov
enter
jne
pop
ror
mov
mov
dec
dec
pop
push
push
xchg
xor
dec
ror
retf
out
es
mov
iret
mov
mov
call
push
mov
inc
out
retf
push
fld
or
lock
mov
mov
jmp
inc
add
push
push
(bad)
push
jae
test
into
and
test
add
jo
mov
in
or
outs
push
rcl
or
inc
push
jg
call
addr16
pop
inc
push
repz
cmp
inc
prefetch
shl
jle
and
arpl
adc
dec
mov
pusha
push
mov
stc
imul
ret
adc
inc
icebp
mov
clc
jmp
pop
mov
push
xchg
and
(bad)
mov
outs
in
bound
ja
dec
mov
adc
cmp
jae
add
inc
dec
gs
or
mov
stos
push
jge
test
test
hlt
xlat
xor
les
pusha
shr
lahf
mov
adc
loopne
scas
int
(bad)
sti
and
(bad)
retf
pop
imul
xor
imul
sub
and
outs
push
enter
shr
pop
sub
xor
mov
xchg
xor
pop
xchg
xlat
or
jmp
stos
loope
retf
mov
scas
in
push
fwait
jae
arpl
lock
dec
jmp
push
retf
mov
inc
mov
or
aaa
push
jmp
xchg
xlat
sbb
out
cdq
cmp
and
nop
xchg
scas
into
pop
aam
or
test
sbb
test
cdq
lods
popf
pop
jbe
das
test
mov
xchg
pop
mov
test
bound
and
fist
jne
imul
pop
dec
inc
adc
nop
pop
icebp
xchg
loop
dec
test
lock
lahf
mov
and
cdq
cmp
mov
jmp
dec
pop
xor
repnz
and
xor
call
sti
xlat
(bad)
cmp
les
rcr
idiv
repz
cmp
ins
aad
adc
bound
popa
push
mov
outs
and
popf
movs
neg
js
cmps
test
cmc
gs
ret
jmp
loop
inc
fmul
retf
std
fimul
daa
xchg
fs
test
xchg
or
mov
js
cld
sbb
(bad)
cmp
mov
dec
sbb
pop
ret
sub
retf
or
call
jmp
xchg
les
clc
mov
cs
stos
xor
fbstp
dec
movs
push
les
and
iret
xor
cwde
xchg
sbb
xchg
adc
and
jmp
mov
test
push
pop
push
pop
pop
inc
ins
popf
and
scas
in
sbb
idiv
and
jae
add
mov
and
dec
mov
in
aad
add
xchg
ret
or
test
addr16
cmp
inc
sbb
ret
adc
loop
fwait
inc
push
adc
ror
test
and
imul
sub
loope
mul
clc
pop
add
inc
or
enter
mov
shl
push
sub
in
inc
push
adc
or
lea
jg
add
cmp
sbb
mov
xor
in
jno
cmp
stc
or
xchg
mov
movs
fs
aas
test
fdivr
mov
or
in
pop
inc
jns
lods
(bad)
cmp
sub
and
mov
and
push
jge
add
dec
mov
jl
and
cs
int3
pop
popf
loope
adc
int3
mov
(bad)
ins
sub
cs
faddp
cld
leave
retf
outs
dec
jbe
popa
mov
and
test
push
mov
std
retf
movs
ins
leave
or
cli
dec
stos
aam
jp
movs
inc
jnp
xchg
xor
bound
adc
cs
pop
fisttp
gs
shl
mov
movs
or
aad
test
pop
and
pop
test
in
add
jae
mov
arpl
test
int
or
add
cli
mov
and
cmps
cld
xor
adc
push
pop
sub
ror
jg
sbb
sub
pop
arpl
das
mov
int
mov
jbe
fcmovu
je
dec
cdq
idiv
(bad)
clc
mov
js
pusha
pop
sti
lock
add
je
xor
jecxz
mov
mov
jnp
test
cmps
aaa
adc
aas
cdq
ds
imul
(bad)
or
imul
imul
add
pop
sbb
mov
sub
jmp
or
pop
sar
jne
and
lods
jbe
dec
or
ds
jmp
movs
cdq
lods
cs
jnp
jecxz
fs
sub
test
push
and
iret
loopne
sbb
div
mov
dec
or
test
(bad)
lds
pop
std
mov
jl
cs
xor
fistp
push
(bad)
in
lods
jns
retf
xor
push
mov
push
in
stos
bound
adc
pop
nop
aad
mov
cdq
adc
stc
pop
mov
fxch
xor
sti
push
pop
inc
and
dec
mov
adc
mov
sti
call
jl
hlt
cmp
aaa
pop
push
sbb
repz
pop
jl
jl
adc
int
lahf
outs
add
(bad)
sahf
lds
mov
xor
stos
mov
int3
jmp
iret
and
push
mov
in
or
cmp
or
stos
stc
(bad)
mov
pushf
xchg
mov
dec
lds
fmul
into
xchg
or
dec
sub
ret
sub
inc
xor
xor
push
sbb
adc
cmps
mov
lods
mov
das
or
int
fsubr
adc
jp
shl
jg
mov
pop
xchg
push
or
loope
sbb
(bad)
pushf
cli
and
ror
shl
jns
pop
imul
sbb
int3
or
push
test
jp
sti
xlat
fnstcw
xor
pushf
push
xlat
cmp
push
sbb
(bad)
(bad)
not
xor
outs
adc
hlt
pop
outs
mov
mov
pop
xor
add
cs
jae
pop
inc
xor
push
dec
imul
imul
fidiv
arpl
sub
adc
xor
div
les
fild
dec
xor
movs
xchg
xlat
ja
sbb
movs
mov
aaa
push
lahf
div
movlps
cmps
popf
loope
dec
push
inc
xchg
sti
call
fisub
mov
dec
xor
pop
jno
push
xchg
mov
jno
add
test
bound
dec
cmps
and
stos
das
cli
leave
cmc
rcr
cmp
pop
mov
mov
add
ds
dec
mov
inc
and
rcr
or
mov
inc
test
adc
sar
movs
xlat
fwait
xor
imul
ror
xor
pop
cmp
push
dec
addr16
gs
push
std
mov
aam
repz
pop
out
loopne
and
lds
mov
test
and
out
dec
cmp
inc
push
test
add
mov
xlat
sbb
cli
clc
dec
jno
daa
mov
mov
loop
fist
leave
outs
sbb
pop
jns
mov
mov
xor
fucom
xor
pop
mov
icebp
sbb
aaa
mov
pop
cwde
mov
and
bound
pop
push
jg
outs
(bad)
sub
shl
hlt
retf
shl
imul
sbb
mov
js
push
add
fucom
clc
je
pushf
scas
ss
mov
sar
js
jmp
cmps
in
movd
in
shl
dec
cld
dec
adc
and
xchg
outs
inc
mov
xor
push
out
jbe
and
pop
inc
movs
imul
fld
inc
push
jmp
imul
add
push
jp
in
cdq
popa
sub
loope
pop
js
adc
xchg
movs
adc
ins
(bad)
sbb
push
push
inc
mov
dec
inc
xor
pop
outs
or
xor
sub
int3
shl
lods
mov
fucomip
inc
xor
ins
adc
not
es
js
rol
fimul
or
in
test
mov
xor
mov
fwait
lea
sbb
or
mov
movs
adc
mov
out
xor
icebp
shr
mov
lock
stos
or
cmp
mov
int3
sub
dec
jmp
or
stc
cmps
pop
or
mov
into
and
iret
mov
nop
aas
sub
mov
mov
jl
push
adc
(bad)
aam
arpl
out
push
mov
dec
jle
scas
stc
daa
movs
add
sbb
jbe
scas
pop
fsubp
es
mov
aad
scas
fwait
pop
mov
jge
cmp
sub
dec
les
call
xchg
shl
out
pusha
test
out
sbb
mov
xchg
and
sub
sbb
sbb
xor
retf
pop
sub
mov
pop
lods
pop
mov
scas
ins
add
hlt
xchg
das
mov
pop
fcmovu
sbb
aaa
lods
sub
mov
clc
in
xchg
in
aad
sub
push
(bad)
(bad)
cld
and
sti
lds
xchg
shl
frstor
lahf
push
xor
inc
inc
clc
stos
mov
xchg
std
aaa
int
out
iret
pop
adc
ror
fstp
pop
cmc
iret
mov
push
pop
mov
ss
sti
or
xor
sbb
xor
inc
movs
int3
imul
and
xchg
sub
jle
mov
(bad)
mov
bound
lock
(bad)
cs
inc
jl
in
jle
dec
mov
xchg
mov
push
out
and
repnz
and
aas
daa
push
add
jmp
pop
jne
iret
test
or
mov
add
jbe
sub
xor
ret
inc
jae
stos
xor
daa
xchg
into
call
cwde
fwait
movs
std
xor
jbe
fst
mov
jl
(bad)
pop
jle
cmp
arpl
pop
inc
inc
std
dec
retf
(bad)
push
inc
setge
and
sub
dec
dec
jno
push
cmc
loop
inc
loope
pop
rcr
ja
int3
and
push
add
cmc
inc
jne
inc
mov
fcomp
loope
repnz
or
mov
(bad)
(bad)
fcomp
loope
out
fidiv
xchg
repnz
fucomip
jmp
pop
add
xchg
cs
sbb
mov
and
lock
and
in
jmp
rcl
push
inc
scas
xor
push
gs
mov
mov
lods
lahf
sbb
add
cld
sbb
dec
dec
xor
inc
cmps
inc
sbb
jmp
pusha
inc
cwde
ins
retf
rep
arpl
call
adc
lea
mov
cmp
xor
clc
dec
xchg
cmps
out
out
call
int
pop
fst
dec
rol
rcl
pusha
daa
sub
pop
inc
cs
adc
pop
dec
test
sti
mov
and
xor
out
imul
xor
enter
mov
daa
add
mov
xchg
jmp
push
xchg
push
ins
adc
ficomp
dec
gs
sbb
mov
and
in
enter
add
jge
mov
movs
cmp
and
rol
inc
add
out
cmp
popa
jl
cdq
sub
push
lods
pop
addr16
push
data16
lock
fwait
ret
out
push
(bad)
stos
pop
mov
mov
sar
inc
push
or
sti
js
stos
xor
jae
cmps
jg
mov
xchg
inc
pop
adc
nop
sbb
dec
(bad)
into
rol
push
push
sysenter
ficomp
xor
mov
jns
imul
enter
mov
inc
pop
or
gs
sub
jo
loopne
in
jns
jnp
cmps
jbe
sub
add
(bad)
addr16
adc
add
pushw
or
hlt
mov
imul
jbe
cmps
xor
jp
les
lods
and
enter
cmp
jne
imul
sbb
test
in
mov
stc
or
adc
adc
ins
gs
add
and
push
inc
mov
add
cwde
mov
sub
fcomp
pop
pop
lea
cmp
pop
or
loop
mov
xchg
pop
idiv
aaa
sub
cmps
test
pushf
adc
ins
daa
or
mov
jbe
mov
pop
xor
inc
lahf
inc
adc
fild
loopne
mov
mov
in
arpl
adc
jg
mov
mov
sbb
dec
mov
add
xor
push
ret
call
loop
(bad)
jbe
cwde
mov
fs
adc
movs
pop
cmc
fucom
and
inc
repz
ins
push
mov
(bad)
mov
cmps
loop
stos
and
scas
push
cmp
pop
dec
dec
push
xor
ds
and
xchg
jnp
push
sahf
mov
adc
movs
and
repnz
mov
inc
in
sub
es
jo
fidiv
shl
mov
ret
mov
lock
test
push
and
sbb
jecxz
lds
stc
jmp
jbe
popf
pop
addr16
cmps
fwait
les
or
repnz
jnp
sar
mov
shr
jns
fsub
jge
jge
mov
lea
enter
daa
je
and
enter
inc
jp
mov
sub
add
ret
je
shl
sbb
fisub
xor
jmp
retf
mov
lods
sub
cmp
inc
xor
shr
jbe
sbb
dec
push
cmp
jne
mov
adc
push
call
push
jmp
fistp
mov
xchg
and
js
out
ror
dec
mov
and
mov
daa
ins
call
adc
xor
dec
in
adc
loopne
pop
dec
inc
or
movq
loop
dec
lea
cmp
enter
mov
mov
aam
clc
(bad)
das
sbb
adc
mov
in
inc
mov
lahf
push
ror
jo
inc
enter
push
clc
icebp
and
(bad)
aam
pop
sti
xchg
xchg
mov
and
inc
movs
add
in
mov
mov
arpl
std
sti
jg
test
aad
push
xchg
mov
cld
mov
jl
push
call
push
cmp
and
call
sbb
mov
call
mov
cmp
lods
lea
mov
out
rol
shl
faddp
push
pushf
bound
in
pop
movs
out
sub
sbb
cmp
bound
cld
xor
in
xor
ror
mov
inc
add
pop
add
mov
dec
(bad)
jno
into
sbb
cmp
fsubrp
cwde
lds
xchg
jecxz
inc
(bad)
and
hlt
rcr
call
in
mov
addr16
cmps
fs
cld
fisttp
fcmovu
jl
xor
aad
dec
dec
aas
popf
sub
xor
mov
test
mov
int
cld
imul
pusha
mov
pop
push
cwde
gs
inc
xor
out
inc
or
cli
(bad)
test
test
cmp
out
jg
aas
ror
adc
adc
pop
xchg
mov
lods
arpl
or
mov
sub
dec
lea
mov
rcr
das
pusha
outs
das
jo
popf
mov
add
ret
sub
call
push
mov
fisub
nop
xor
sbb
not
and
jecxz
mov
fwait
mov
add
xchg
fld
push
add
mov
ror
inc
dec
enter
jnp
call
jle
adc
data16
pop
clc
popf
fadd
or
ret
push
nop
cmp
inc
pop
repz
or
jo
push
jmp
inc
clc
test
sub
mov
or
inc
sahf
push
gs
dec
xchg
dec
mov
and
jne
ret
jno
inc
fnstcw
mov
dec
xchg
lods
(bad)
cdq
cmp
sti
mov
push
push
aas
out
inc
mov
and
push
shl
(bad)
dec
cmps
std
std
cwde
out
outs
mov
xor
rcr
dec
data16
pop
pop
and
inc
mov
jmp
or
repnz
stc
call
(bad)
xchg
add
lea
xchg
inc
pop
inc
dec
into
stos
push
push
push
das
scas
rcl
loop
and
mov
fdivr
jno
rol
sub
add
mov
aas
movs
jmp
fdivr
cmp
adc
jg
and
mov
cdq
mov
dec
pop
cmp
retf
stos
or
jg
stos
gs
mov
jo
lock
xchg
mov
jae
es
mov
lea
mov
mov
out
loope
lods
dec
clc
fisttp
cmp
and
jl
sbb
jb
adc
loope
jb
inc
sub
mov
imul
movs
mov
xor
jmp
sar
popa
sbb
push
iret
jmp
adc
popf
mov
add
cmp
adc
jg
sbb
jbe
(bad)
cmps
pop
push
push
inc
dec
jle
addr16
fdiv
mov
popa
(bad)
cmp
xchg
mov
into
or
shr
popf
or
mov
xor
in
add
cmp
test
add
call
lds
add
bound
cmp
xor
mov
inc
int
ds
outs
std
add
sub
xor
call
push
and
inc
jb
sti
lods
push
ins
add
lea
imul
jne
js
sar
sbb
push
jno
mov
popf
add
sbb
cli
ret
add
lods
fld
sub
cwde
jmp
xlat
mov
jne
sub
xor
in
mov
loopne
jle
pop
and
inc
pop
add
hlt
stos
lds
push
sub
cli
jns
add
sbb
inc
push
add
jl
aaa
inc
iret
test
mov
sub
xchg
loop
cmc
call
rcl
push
out
jl
les
je
call
xchg
mov
ror
sub
aas
repz
push
and
mov
and
fstp
mov
jge
movs
fistp
loope
daa
and
fistp
inc
cmc
push
retf
adc
stos
fucomi
pop
sub
xchg
scas
pushf
addr16
mov
je
sub
mov
rcr
rol
cwde
sub
push
mov
push
pop
push
mul
fldl2t
or
cmp
ss
popf
in
sti
and
arpl
icebp
xor
popf
mov
das
sbb
xchg
daa
and
das
and
ret
jno
xchg
cmp
pop
mov
sub
cwde
inc
inc
fistp
inc
(bad)
xor
fcom
ds
arpl
mov
jbe
jg
pop
popa
sbb
inc
rcr
dec
sbb
inc
cld
or
mov
sti
sub
loope
adc
push
adc
xchg
pop
cmp
ds
mov
shr
aaa
xchg
jmp
dec
inc
ficom
(bad)
cmc
data16
push
cmp
jno
je
sbb
push
int
loop
mov
mov
ins
icebp
mov
xor
cmp
adc
mov
sub
popa
repnz
adc
and
push
push
in
(bad)
mov
xchg
fdivr
in
scas
je
lock
je
mov
or
mov
movs
cmps
(bad)
jge
inc
pop
mov
or
nop
scas
inc
shl
ror
lds
shr
adc
pop
cli
jnp
push
paddw
sti
bound
cmps
adc
jp
rcr
or
scas
or
mov
loope
xchg
adc
fwait
lock
fild
mov
jno
retf
mul
jp
jno
lods
jmp
cmc
fstp
cdq
cmp
mov
sbb
in
push
push
push
push
test
sbb
aad
cmp
sbb
or
and
push
mov
mov
ja
add
loop
in
int
loope
pop
mov
pop
aas
cdq
push
adc
jecxz
lahf
push
(bad)
stc
mov
bound
pop
retf
pop
js
jle
cld
enter
push
xchg
dec
out
mov
mov
add
mov
cmp
dec
lods
sbb
mov
sub
arpl
pop
loope
iret
sub
inc
jp
cmc
clc
lock
push
fmul
mov
mov
in
adc
sbb
add
add
aas
imul
out
xor
cmp
aad
shl
add
pop
cdq
jp
cmp
adc
push
add
or
sti
push
pop
pop
mov
push
call
fstp
fs
in
mov
aam
mov
jno
loopne
sub
mov
cdq
sahf
inc
pop
movs
or
jle
pop
js
bound
fiadd
cmp
xchg
lock
jns
mov
adc
dec
push
xlat
out
or
dec
retf
sahf
ds
cmc
fs
movs
out
lock
pop
xlat
push
push
add
cmp
ins
(bad)
adc
into
mov
inc
cmp
fst
mov
adc
in
fld
in
inc
adc
js
inc
adc
dec
std
lods
les
cmc
retf
popa
xchg
inc
js
repnz
dec
dec
mov
adc
repz
ss
call
fld
out
ins
sahf
xlat
sub
cmps
outs
jnp
movs
adc
cdq
fldlg2
js
lahf
mov
xchg
push
sub
arpl
lods
xor
pop
xchg
test
sbb
aad
xchg
mov
retf
sbb
dec
rol
dec
fisubr
xchg
cmc
jns
mov
push
pop
and
inc
inc
cmp
fmulp
(bad)
cli
mov
stos
repnz
jle
jl
xchg
pop
fyl2x
mov
jo
xor
sbb
(bad)
jmp
mov
push
or
pop
or
vmovntps
sub
call
fcmovb
cs
inc
sub
gs
in
cmp
pop
(bad)
iret
dec
(bad)
out
es
mov
or
xor
sub
mov
mov
xor
and
adc
lods
sysret
pop
mov
xor
arpl
(bad)
push
gs
nop
imul
jmp
add
addr16
ja
leave
or
inc
adc
push
dec
mov
fmulp
cli
push
mov
movs
imul
rcl
mov
jle
out
inc
cmps
jge
(bad)
fadd
retf
cdq
mov
mov
call
data16
jmp
jg
sub
jb
loope
into
inc
and
jae
enter
(bad)
cli
push
inc
mov
div
xchg
ret
call
or
mov
mov
sbb
push
xchg
or
inc
sar
stos
movs
jae
loop
clc
add
jl
jg
cmp
and
sbb
dec
div
js
mov
(bad)
out
push
ficomp
adc
jl
cmp
sub
out
in
and
(bad)
xor
or
xor
adc
sahf
dec
or
cdq
popa
cmps
jl
and
dec
mov
imul
and
stos
imul
ret
iret
movs
fwait
movs
dec
fisubr
(bad)
jne
mov
das
push
outs
mov
jbe
lods
cmps
into
xchg
fmul
mov
daa
mov
ror
ss
cmc
(bad)
mov
sbb
ret
cld
gs
das
in
mov
cli
sub
sub
aam
sar
or
ficom
dec
xlat
or
ror
inc
in
sub
sahf
mov
repz
stos
daa
fidiv
fs
fprem
xchg
bound
fbstp
inc
push
ins
ror
lods
pusha
mov
push
test
aam
jne
mov
cmp
sar
je
and
mov
(bad)
addr16
vrsqrtss
in
and
(bad)
mov
ins
xchg
into
aaa
jnp
inc
cmc
int
pop
adc
sub
inc
fbstp
mov
pushf
push
cmp
fisttp
or
mov
(bad)
xlat
add
mov
sbb
and
scas
mov
mov
and
adc
call
icebp
or
aad
sbb
adc
push
pop
inc
cmp
arpl
jp
loop
ret
movs
scas
sub
add
jp
and
add
and
dec
idiv
sbb
xchg
mov
or
(bad)
pushf
pop
rol
dec
mov
xor
shl
xchg
xchg
mov
xor
sbb
popa
inc
sahf
jae
jbe
pop
stos
test
xchg
jp
push
add
arpl
cmp
mov
test
daa
sbb
ins
push
rcr
out
add
and
and
es
lods
adc
(bad)
mov
loope
fst
cwde
(bad)
jle
out
lods
lods
(bad)
fild
in
(bad)
leave
inc
mov
(bad)
cmp
cli
(bad)
adc
xchg
xchg
sbb
push
lods
loope
push
imul
sub
stc
jae
sbb
in
add
lock
jl
in
pop
mov
(bad)
xor
push
mov
mov
lea
shr
pop
add
lods
sbb
add
pusha
pop
xor
mov
pop
retf
push
(bad)
cli
cmps
pop
fldenv
xchg
clc
and
push
dec
outs
push
mov
ror
push
push
in
arpl
jno
hlt
loop
popf
enter
push
add
fcmovne
arpl
cmc
fimul
aas
push
ja
scas
cmc
dec
pop
and
sbb
mov
ret
or
bound
icebp
popa
pop
lods
popa
xchg
jecxz
jmp
push
loopne
loope
or
es
repnz
mov
push
in
lods
sahf
and
repnz
ja
leave
mov
mov
cmp
mov
sbb
or
sbb
xchg
(bad)
ins
hlt
or
mov
add
repnz
retf
pop
fdivp
dec
jl
or
in
jg
mov
outs
inc
loop
mov
xchg
int
jmp
out
dec
add
push
inc
add
dec
fxch
push
dec
cdq
daa
cld
sub
xchg
xor
shr
lea
mov
inc
retf
jmp
je
scas
shr
pop
pop
mov
sub
jl
dec
sub
xlat
imul
movs
pop
sbb
sub
jb
jne
mov
mov
push
dec
jno
arpl
lds
sbb
leave
(bad)
clc
hlt
dec
xchg
xchg
fsubr
imul
cmps
sub
iret
pand
inc
mul
xchg
je
push
mov
push
test
repz
adc
out
push
out
lods
pop
inc
or
out
and
cmp
pusha
inc
sbb
push
and
cmc
shl
sub
lea
mov
mov
cmps
sbb
stc
arpl
fistp
les
test
or
push
outs
pop
sahf
and
jne
jb
mov
pop
(bad)
jg
sub
jle
stos
xchg
cmp
xchg
mov
jno
repnz
mov
mov
data16
or
pushf
inc
mov
push
cmp
rcr
in
jnp
popa
mov
iret
int
add
out
into
mov
scas
call
xchg
in
jle
or
or
inc
(bad)
mov
imul
les
hlt
or
sbb
js
mov
inc
out
in
or
retf
push
movs
mov
push
push
repz
sbb
cs
popa
dec
jmp
dec
inc
mov
das
fnstenv
(bad)
cdq
mov
aam
test
in
fistp
push
jg
cmp
sbb
fcom
(bad)
data16
test
es
rol
mov
cmps
xchg
test
xchg
scas
(bad)
adc
cmps
sbb
(bad)
cmc
inc
push
stc
xchg
je
je
das
addr16
shl
retf
cmp
mov
sub
clc
mov
sbb
sbb
adc
xor
inc
nop
cwde
loop
repz
movs
mov
mov
adc
push
or
lea
sbb
daa
ret
jbe
pop
sahf
cmp
mov
movs
cmp
and
cmc
mov
sti
or
cli
cld
ds
sbb
popa
shl
ss
imul
ins
sub
es
sar
add
dec
enter
add
pop
mov
inc
icebp
xor
call
inc
adc
pop
xchg
push
imul
dec
xor
and
mov
js
fist
cli
push
mov
dec
pop
dec
adc
cmp
push
ret
mov
adc
in
pop
push
add
or
(bad)
sar
stos
stc
mov
sbb
scas
pop
xchg
jmp
bound
test
pop
mov
xchg
xchg
mov
in
pop
mov
mov
test
mov
inc
dec
adc
hlt
(bad)
xchg
inc
mov
pop
sbb
out
shl
inc
adc
sbb
imul
add
xchg
sub
jae
sub
cmps
sub
pop
xor
or
shl
push
loopne
clc
in
imul
xor
xor
loop
pop
add
pop
hlt
inc
adc
cmp
mov
cwde
mov
sbb
or
imul
clc
sahf
ret
setg
cmp
je
fmul
pop
or
outs
popf
add
pop
pop
mov
jnp
mov
mov
mov
add
ins
pop
aad
and
scas
add
and
cmps
xchg
sub
(bad)
and
mov
xor
adc
fmul
dec
mov
and
mov
xor
lods
mov
sub
leave
push
arpl
mov
dec
stos
imul
mov
fnstcw
test
js
repnz
push
lds
(bad)
adc
rcl
aas
xor
jecxz
sbb
dec
adc
in
adc
jle
pusha
dec
test
ins
scas
(bad)
inc
pusha
mov
and
or
fnstsw
pop
int3
outs
ds
outs
or
nop
add
sub
adc
(bad)
fistp
cld
test
jg
push
out
retf
fld
nop
pop
inc
pop
jae
jb
fist
enter
and
mov
std
sbb
push
cmc
xor
jle
ret
add
iret
jg
sbb
hlt
daa
mov
leave
add
(bad)
sub
inc
adc
movs
inc
jns
popf
and
test
pop
jp
out
adc
addr16
js
mov
xchg
enter
jg
outs
pop
int3
dec
jl
pop
xchg
inc
and
loope
jae
cmp
sbb
leave
sbb
fistp
bnd
or
jns
inc
js
sar
fadd
mov
stos
cdq
add
sub
mov
leave
sub
mov
test
xchg
inc
movs
push
in
ret
leave
push
xor
in
and
stc
xchg
xchg
lea
adc
dec
cmc
adc
pop
les
inc
out
cmp
dec
push
xchg
mov
add
pop
imul
mov
add
mov
daa
mov
adc
mov
mov
imul
xor
fs
outs
jg
(bad)
leave
loopne
test
add
ror
and
movs
or
imul
jno
dec
and
movs
lods
ror
loopne
sub
jb
orps
neg
sti
into
shl
dec
bound
mov
lods
sub
pop
mov
call
test
hlt
test
and
(bad)
fisub
push
dec
lahf
push
retf
pusha
xor
add
add
xor
add
pop
gs
adc
aam
and
fisttp
pop
pop
cwde
dec
jl
rcl
cli
ins
jge
(bad)
cmp
enter
adc
xchg
lea
sti
loope
pop
mov
ja
pop
popf
or
or
enter
mov
cmc
call
adc
push
ffreep
cld
mov
repnz
scas
xchg
stos
cli
(bad)
lock
loop
out
inc
push
mov
and
cmp
lahf
es
xchg
mov
pop
xor
mov
ins
hlt
xor
mov
adc
call
sbb
fst
cdq
jo
icebp
test
stos
jmp
push
push
fstp
fwait
mov
inc
cmc
push
jmp
fsubr
shl
pop
or
rcl
and
cli
bound
and
sti
and
(bad)
add
jge
sbb
stos
and
xchg
daa
lds
mov
iret
dec
push
pop
sub
and
retf
test
in
sub
dec
pop
xor
push
in
(bad)
in
jb
xor
pop
int3
inc
and
sub
mov
(bad)
popf
out
sub
mov
jb
dec
pop
jp
jbe
dec
xor
add
int
aas
iret
sbb
aad
cs
cmps
or
retf
cmp
fisubr
add
jge
bound
push
cmp
xor
aas
scas
or
in
pop
lahf
cs
cmp
sbb
jbe
adc
xor
xchg
ins
rol
sub
cmps
bnd
mov
jmp
test
je
sti
xor
jo
mov
cmp
inc
aad
popa
and
sub
fcomp
test
fidiv
mov
mov
addr16
mov
and
xchg
xchg
pop
(bad)
pop
ss
daa
pop
ja
out
daa
call
and
xchg
lods
pop
xor
shl
or
dec
cmp
stos
jae
pop
fmul
jae
out
int
lds
outs
ror
test
or
jns
dec
adc
imul
stos
xor
xchg
popf
mov
sub
(bad)
jbe
inc
fsubr
adc
pop
das
dec
je
xor
aad
mov
in
inc
adc
mov
xlat
mov
pusha
jbe
ss
adc
ret
rol
push
addr16
ficom
repnz
cmpps
fwait
sub
adc
cmp
pop
mov
add
sub
loopne
add
mov
inc
scas
mov
dec
sbb
(bad)
sahf
inc
adc
and
loopne
push
sub
loope
xor
jo
cmp
mov
lods
loope
mov
jne
and
mov
fwait
push
mov
sbb
ror
cli
add
adc
sti
fsubr
jecxz
fs
adc
cwde
jbe
push
cli
les
cld
inc
lahf
sub
icebp
in
out
popf
adc
jbe
dec
pop
and
cmps
adc
movs
arpl
push
push
mov
pop
shr
add
xchg
sbb
sahf
sub
aaa
inc
rcr
mov
jg
mov
sbb
adc
and
std
pop
call
lods
iret
dec
data16
mov
(bad)
sbb
jmp
cdq
inc
out
outs
out
mov
sti
jge
mov
push
inc
ds
loope
ins
rep
(bad)
sub
bound
add
pop
inc
stc
hlt
inc
sub
fsub
hlt
das
retf
fs
out
cs
enter
cdq
sbb
movs
push
push
cld
jno
rcr
fadd
test
stos
push
jo
mul
mov
adc
jl
bnd
mov
popf
fst
inc
repz
or
dec
cdq
icebp
out
test
jae
push
sbb
xchg
fs
push
imul
cmp
scas
or
(bad)
mov
repnz
js
push
fcom
cs
pop
sbb
mov
(bad)
leave
jle
dec
popf
mov
scas
dec
rep
lods
cdq
and
xchg
cmp
cmp
in
mov
sub
retf
addr16
cmp
or
and
push
push
sub
ins
jmp
es
stos
in
push
sbb
jbe
(bad)
mov
out
test
add
in
ror
call
(bad)
sub
xchg
ds
jnp
aaa
push
push
xchg
ss
scas
push
and
int3
fidiv
icebp
mov
es
jl
push
push
mov
je
jbe
ror
bound
cmp
pop
mov
add
mov
add
jne
mov
adc
mov
push
cmp
imul
and
shl
add
add
data16
inc
cmp
xor
call
aaa
imul
add
inc
or
lahf
mov
sbb
in
add
(bad)
jl
mov
push
js
jge
dec
sbb
xlat
addr16
sub
imul
inc
call
push
lds
or
xor
sbb
cmps
sub
push
jae
xchg
mov
les
mov
and
jge
addr16
repnz
dec
pusha
jp
bound
sub
in
jecxz
into
cld
xor
sahf
jmp
movs
jmp
mov
jne
into
jne
std
sub
lods
jne
aad
push
push
lds
in
xor
mov
push
xlat
hlt
test
add
and
sar
and
fimul
add
les
xor
call
arpl
aad
lock
push
jbe
push
xchg
iret
call
adc
pop
mov
xchg
adc
cwde
pop
ror
setg
xchg
aas
retf
add
popa
xchg
adc
jo
scas
out
mov
pop
out
fmulp
jmp
imul
into
push
aam
out
push
daa
jns
add
cs
dec
imul
mov
jae
push
enter
pop
leave
inc
cs
add
repz
push
ret
hlt
cld
inc
adc
mov
and
push
shr
sahf
add
cmp
jb
dec
sti
xchg
(bad)
mov
das
mov
sub
jno
(bad)
sbb
cwde
lds
(bad)
mov
add
rol
mov
or
ror
es
cmp
xchg
pop
adc
push
imul
push
mov
sub
pop
inc
mov
xor
or
jns
mov
xor
in
mov
outs
js
jg
jo
push
sub
dec
lods
sbb
inc
pop
mov
adc
mov
shl
push
sti
(bad)
cli
xor
repnz
add
push
or
cmp
inc
add
retf
fwait
mov
or
sbb
jno
jno
ins
adc
ins
inc
out
xchg
push
jo
pop
pop
into
inc
std
mov
pusha
bound
jne
pop
shl
xchg
ficomp
hlt
ret
test
or
or
inc
jo
and
icebp
rcl
sbb
jo
(bad)
out
ffreep
adc
inc
cmp
shr
loopne
out
popf
pop
and
and
push
mov
leave
sub
les
jge
cmp
sahf
jmp
mov
loopne
retf
or
movs
fwait
push
mov
(bad)
leave
mov
push
out
nop
enter
in
push
adc
(bad)
std
stc
push
add
jmp
int3
lock
or
bound
lds
ret
fcom
adc
xchg
cwde
adc
inc
inc
jno
inc
sar
ins
imul
adc
js
adc
mov
sbb
in
mov
xchg
push
jge
cwde
bound
and
mov
imul
pusha
mov
cmp
cs
aas
cmps
sahf
scas
push
jp
sub
inc
xchg
into
sbb
movs
in
aas
mov
jmp
add
mov
xor
xchg
outs
push
sub
popf
pop
mov
sbb
rcl
ins
mul
pcmpeqd
in
rcl
inc
mov
push
mov
bound
push
test
mul
jg
movs
(bad)
cvtps2pd
push
add
outs
rcr
pop
add
pop
xchg
js
xor
inc
cli
cmps
fcomp
das
scas
inc
shl
test
push
sub
mov
cmp
call
xlat
fnsave
push
out
mov
or
sub
(bad)
mov
fsub
into
or
scas
jmp
les
fst
mov
aaa
mov
loopne
jnp
aam
mov
mov
and
xchg
(bad)
lds
hlt
in
xor
movs
sbb
gs
sbb
sub
cmc
aad
outs
int3
scas
pop
movs
fs
out
mov
xor
sub
int3
es
clc
pop
es
pushf
and
jb
call
stos
adc
imul
lahf
not
ins
cwde
jmp
fistp
push
fwait
scas
adc
sub
mov
paddw
mov
fidiv
jbe
dec
mov
ret
push
mov
jne
ret
push
fs
and
cmc
shl
retf
mov
push
xor
mov
sub
push
cmc
or
leave
push
scas
daa
and
pop
ins
inc
ss
movs
ins
mov
rcl
mov
mov
test
fadd
dec
mov
imul
lahf
or
inc
add
rol
aam
std
sub
imul
inc
or
jno
sbb
push
sub
movs
shl
push
cmp
movs
xor
push
(bad)
cld
mov
jecxz
pop
mov
xchg
dec
xor
adc
push
jp
or
jle
jmp
xor
lods
fmul
jbe
icebp
adc
or
popa
jg
pop
pushf
jnp
out
mov
xchg
gs
sar
mov
cmp
jns
xchg
mov
xor
xchg
pop
push
inc
mov
mov
jb
in
in
push
aam
inc
dec
lods
cwde
push
lock
data16
sbb
push
pop
ins
mov
mov
xchg
dec
push
ins
cmp
push
pshufw
cdq
inc
pop
in
jge
sti
cmps
sbb
data16
test
jo
addr16
push
adc
sbb
sar
sbb
mov
outs
add
das
mov
shr
inc
and
mov
sets
cmps
add
out
dec
imul
pop
push
or
jmp
std
ins
and
sbb
push
sub
daa
outs
stc
fistp
jecxz
mov
popa
mov
mov
or
(bad)
pop
pop
lea
push
jg
pusha
(bad)
enter
mov
and
aad
sbb
mov
xor
dec
loopne
cwde
sub
pushf
ret
aad
mul
ins
mov
xor
jle
shr
sub
mov
pop
inc
out
dec
inc
jecxz
es
xchg
xchg
ins
cmp
mov
xor
add
sub
pop
mov
ret
call
mov
(bad)
in
push
xlat
cmp
inc
mov
div
adc
pop
sub
loope
push
dec
add
inc
mov
aaa
mov
out
bound
push
mov
cmp
mov
or
and
ja
and
les
adc
adc
(bad)
lods
or
jnp
or
inc
adc
push
jb
adc
loop
xor
int3
dec
xchg
xor
std
sub
xchg
jl
sbb
mov
push
(bad)
jl
mov
mov
loopne
je
mov
rcl
mov
inc
pop
lock
pop
fcom
out
movs
(bad)
fsub
and
xchg
movs
movs
adc
or
or
call
(bad)
sub
xor
dec
call
hlt
cmps
nop
mov
mov
lock
(bad)
aam
retf
push
jl
jbe
bound
inc
shl
mov
repnz
pop
mov
cs
xor
pop
dec
cwde
je
mov
push
xchg
lahf
push
lea
int3
popa
inc
fstp
icebp
test
mov
fst
cld
sub
xor
daa
sbb
or
sub
ins
pop
add
data16
push
push
pxor
scas
gs
inc
add
loop
push
push
jmp
dec
mul
cs
mov
add
loope
mov
mov
jne
jne
nop
stc
jb
call
xchg
cmps
psllq
iret
mov
mov
mov
xchg
outs
aad
nop
mov
pop
addr16
xor
push
mov
add
mov
div
int
je
sub
and
js
fs
cmp
mov
mov
xlat
cmp
push
pop
sub
add
push
mov
mov
jecxz
jl
mov
scas
outs
fsubr
or
call
rcr
sub
ficomp
jo
sub
add
push
lods
and
sub
mov
jecxz
add
mov
jmp
leave
inc
jmp
push
xor
mov
sbb
pop
into
mov
iret
pop
sub
push
mov
push
pop
loop
sub
jo
sti
(bad)
iret
inc
pop
mov
int
and
pop
mov
inc
repnz
mov
pop
pop
ja
sahf
dec
dec
xor
data16
jg
ins
cmp
data16
sub
fldcw
test
push
jecxz
push
lock
and
mov
xchg
xchg
mov
data16
push
jg
mov
das
cmc
xor
jno
push
popa
and
jmp
and
cwde
ret
sub
sub
jae
or
in
je
addr16
cwde
sub
lock
leave
or
out
xchg
popa
outs
pop
inc
pop
repz
push
mov
or
dec
jns
cli
sub
jmp
xor
mov
add
fidivr
(bad)
fidivr
adc
push
cmps
pushf
jp
xchg
fcmovnbe
xchg
mov
mov
dec
jo
in
jg
mov
mov
(bad)
jecxz
add
inc
mov
scas
test
and
or
test
stos
repnz
retf
push
stos
mov
imul
into
cmc
mov
dec
inc
shr
jae
jp
pop
(bad)
xor
push
mov
cmp
imul
ins
push
ds
jle
nop
and
ret
test
pop
clc
in
int
out
inc
(bad)
adc
repnz
mov
and
add
inc
adc
inc
sub
cmp
mov
and
outs
test
aad
scas
xchg
(bad)
jno
bound
mov
imul
push
push
scas
aad
adc
fidivr
and
(bad)
cmps
out
ins
xor
push
mov
dec
popa
shl
gs
(bad)
inc
ja
(bad)
sbb
jge
xor
ins
sbb
pop
xchg
call
popf
adc
popf
push
nop
mov
outs
xchg
push
cmps
push
fs
lods
inc
aam
test
inc
aam
or
daa
ret
imul
adc
mov
push
xchg
mov
clc
xchg
jb
xlat
xchg
and
pop
add
sub
js
jmp
mov
lahf
or
retf
dec
inc
loope
jg
fst
ins
push
adc
call
push
out
xchg
imul
fwait
dec
push
call
jl
icebp
outs
sbb
add
adc
xor
int
ins
das
sbb
inc
jno
fidiv
xchg
xor
ds
into
mov
(bad)
and
jge
cwde
call
cmps
mov
imul
jge
sbb
cmc
aaa
adc
mov
loopne
cmp
loope
icebp
inc
(bad)
in
mov
das
cmp
add
adc
pusha
scas
call
jg
xor
pushaw
xchg
mov
add
icebp
and
addr16
sub
test
mov
mov
out
sbb
sbb
dec
sbb
popf
gs
jo
outs
jae
xchg
push
mov
mov
or
mov
aam
call
cmps
inc
and
or
pop
sbb
xor
data16
mov
lods
enter
mov
sahf
fs
mov
sub
repz
(bad)
mov
outs
cmp
int3
fimul
pop
inc
and
ins
push
pop
cdq
retf
mov
stos
inc
adc
sbb
ins
movs
repnz
in
push
cmc
push
or
imul
mov
push
push
je
jg
aaa
(bad)
or
fild
js
jmp
jecxz
shl
stc
clc
pop
fsub
ss
call
mov
imul
fwait
mov
test
jg
loopne
enter
in
(bad)
repnz
mov
sbb
add
cmp
push
test
xchg
lods
cmp
(bad)
push
mov
inc
imul
sahf
xchg
adc
jno
outs
lock
jbe
pop
xor
mov
neg
vpmulhuw
or
call
xchg
pop
cmp
and
sub
pop
div
inc
cdq
test
fadd
imul
fisubr
sbb
jnp
sbb
je
pop
pop
popf
jne
sub
cmp
cmp
icebp
dec
addr16
inc
pushf
dec
push
jne
xchg
sub
arpl
test
lds
lock
add
enter
gs
xlat
leave
hlt
fs
fsubrp
xor
retf
rcr
sbb
test
and
push
lods
repz
and
dec
cmp
dec
lea
add
xor
adc
js
jmp
pop
(bad)
jns
mov
dec
mov
or
rcr
fist
cmp
cli
dec
iret
mov
rol
or
icebp
iret
push
jns
out
jp
adc
(bad)
iret
aam
(bad)
pop
mov
test
mov
pop
test
adc
xchg
push
in
aad
push
sbb
neg
or
inc
(bad)
(bad)
lock
bnd
ret
scas
mov
pop
mov
add
ds
shl
xchg
enter
sbb
cli
movs
jge
mov
add
add
and
add
scas
out
sbb
mov
mov
sbb
pop
dec
mov
outs
je
int3
xchg
lods
clc
std
jb
adc
mov
dec
xchg
sub
jmp
loop
pusha
push
out
out
xor
stos
pavgb
push
sbb
imul
xor
dec
fs
fs
out
adc
and
jmp
adc
(bad)
ds
rol
pop
mov
jbe
sti
dec
loop
add
jnp
scas
jmp
and
pop
cmp
push
push
(bad)
mov
loop
cmp
aad
mov
stos
jne
call
test
xor
add
pop
fisub
dec
(bad)
inc
and
enter
sti
sbb
cmp
cmps
out
xor
imul
loop
xchg
mov
mov
inc
mov
inc
loope
or
dec
or
mov
loope
mov
rcr
icebp
rcr
rol
jge
push
mov
add
popa
sahf
inc
shr
in
scas
sbb
in
ret
into
mov
mov
retf
dec
inc
not
js
rcl
and
xchg
cmc
fstp
xchg
jle
fdivr
cld
movs
xchg
lods
jmp
fwait
push
enter
push
(bad)
sub
rol
int3
mov
mov
sub
fs
dec
outs
rcl
dec
pop
shl
fbld
mov
jmp
xlat
inc
cmps
cs
jmp
and
imul
imul
xor
jb
retf
cmps
call
xchg
push
lods
aaa
mov
fld
cmp
sbb
out
cmp
fdivr
cwde
jno
rol
pop
cmp
out
push
push
outs
bound
lea
and
add
stc
clc
fnstenv
mov
adc
loop
pop
or
call
cmp
xchg
adc
repnz
cli
das
out
iret
and
push
enter
sbb
cli
push
mov
xchg
push
movs
push
(bad)
pushf
adc
sub
daa
mov
pusha
call
jns
push
xchg
clc
xor
(bad)
dec
jns
pop
jl
pop
xchg
es
inc
jo
pusha
cmc
dec
lods
xor
fisub
mov
in
xchg
shl
repz
dec
xchg
cmps
stos
cdq
into
jae
leave
data16
add
xchg
imul
into
inc
add
das
mov
shl
dec
shr
sbb
add
stos
sbb
cmc
loope
les
and
mov
and
movs
xchg
les
jl
cld
cmp
fwait
addr16
dec
pop
movs
in
inc
fs
daa
(bad)
ror
add
pop
neg
xor
sbb
int3
das
adc
(bad)
and
leave
pop
jnp
fbstp
mov
jmp
xchg
pop
jb
jle
mov
pop
adc
add
or
pop
fisttp
fnsave
inc
or
cmp
(bad)
retf
movs
loopne
retf
rol
mov
cmp
and
adc
jns
xchg
and
dec
in
mov
mov
xchg
and
or
jns
test
mov
retf
cmp
imul
loope
push
jbe
mov
cmc
loopne
inc
xor
adc
into
add
ret
push
clc
test
pusha
and
mov
mov
test
xor
sbb
mov
jo
dec
jne
xchg
push
push
outs
fwait
enter
in
das
inc
scas
xchg
xchg
mov
inc
mov
lods
aas
jle
mov
stc
(bad)
adc
xchg
push
cwde
xchg
(bad)
push
aaa
fnsave
xchg
out
add
xchg
jnp
icebp
not
arpl
and
push
ret
arpl
inc
mov
mov
stos
xor
mov
or
inc
mov
sbb
xlat
movs
mov
pushf
sub
pop
je
mov
ds
or
fild
mov
mov
jo
mov
xchg
lds
test
add
xor
aas
and
pop
or
retf
scas
das
mov
mov
mov
ds
add
inc
das
mov
into
cs
adc
mov
inc
test
data16
ja
cwde
cli
dec
addr16
push
or
clc
sub
and
push
(bad)
in
outs
je
pop
fcmovu
xor
jns
pop
xchg
xor
push
inc
inc
jmp
fbstp
aad
sub
jge
mov
mov
ins
leave
or
jno
pushf
rcl
or
ret
das
test
mov
ss
(bad)
pop
addr16
fnop
sub
jge
(bad)
ror
xor
loopne
fstp
call
loopne
imul
in
std
mov
jle
jno
retf
xchg
inc
in
call
cdq
add
fdivrp
ins
lds
aad
(bad)
or
aam
jno
pop
mov
arpl
addr16
sbb
cdq
(bad)
mov
sbb
pusha
fidivr
int3
mov
nop
jl
sbb
dec
int
dec
mov
inc
sub
arpl
or
inc
out
add
nop
push
hlt
aad
jns
loop
outs
xchg
adc
mov
leave
xchg
out
or
push
mov
fwait
pop
stos
(bad)
or
xor
pop
xchg
mov
jnp
xor
mov
dec
jg
jbe
pop
push
sbb
cmc
mov
loop
in
sub
push
call
mov
jb
sbb
pop
not
stc
pop
push
outs
je
popa
mov
pusha
je
(bad)
mov
xchg
mov
dec
jge
out
add
ds
aam
pop
je
inc
cli
dec
loop
repz
inc
mov
xor
sbb
retf
shl
add
xchg
adc
cmps
xchg
sbb
add
xchg
std
mov
test
in
addr16
outs
bound
cmp
mov
push
test
cmp
(bad)
sub
adc
ds
pop
xchg
inc
sbb
ficomp
cmp
dec
sbb
shr
mov
or
call
lods
jne
adc
sahf
aad
dec
sub
rcl
imul
rcr
fs
inc
int3
lods
ja
sbb
cld
mov
hlt
sbb
rcr
sti
stos
adc
xor
xor
fadd
push
shr
rcl
nop
ins
nop
cld
xchg
jmp
inc
bound
lock
dec
sbb
or
popa
mov
and
xchg
fiadd
and
ds
mov
cdq
fmul
sar
mov
rol
imul
pusha
cmps
pop
aam
jg
pop
jbe
sbb
lahf
out
cld
jmp
sub
or
sub
pop
sub
mov
pop
mov
bound
iret
rcl
int3
scas
outs
and
popa
add
lods
lock
ret
imul
inc
movs
out
sub
push
dec
rcr
mov
aam
xchg
inc
call
loope
fadd
jecxz
retf
push
cwde
inc
ficomp
cmp
rol
loopne
mov
jns
test
ror
scas
mov
pop
and
sahf
jbe
pop
mov
xor
outs
jb
inc
jb
mov
xor
dec
mov
push
push
mov
shl
aas
fbld
mov
test
movs
mov
inc
or
das
jp
adc
cld
mov
pop
add
ds
bound
cwde
sub
dec
add
js
ss
xor
sub
scas
retf
and
fadd
out
sub
aaa
lods
lahf
and
(bad)
push
add
push
inc
pushf
cmps
lea
mov
out
fwait
dec
inc
jg
pop
rol
inc
xchg
and
les
js
push
and
retf
xor
sti
sub
(bad)
adc
mov
and
ffree
pop
inc
out
mov
cmp
inc
test
and
icebp
push
(bad)
sub
push
std
push
adc
xchg
retf
cmc
aad
add
sar
hlt
in
xchg
pop
sbb
adc
jle
inc
sbb
aad
adc
pop
es
mov
loopne
sbb
adc
fdiv
mov
fiadd
jp
scas
mov
popf
xchg
mov
cmc
push
test
cmp
cmp
or
nop
cdq
(bad)
jg
xchg
popa
xchg
or
icebp
cmp
lock
bound
xchg
in
or
push
mov
rcr
pop
and
pop
jne
inc
pop
sub
inc
add
loopne
js
inc
js
sti
(bad)
dec
dec
test
mov
sub
rcr
mov
cmp
dec
mov
dec
dec
add
xchg
rol
sbb
xchg
mov
and
sbb
mov
inc
push
cli
and
pop
push
ins
out
mov
mov
and
cmp
jo
stos
pusha
movs
repz
mov
inc
movs
xchg
popa
and
cmp
inc
js
imul
dec
sub
retf
in
inc
movs
mov
jl
pop
aaa
xor
cdq
out
inc
js
push
lods
mov
das
add
cmp
fcomp
pop
dec
cli
mov
jmp
cmps
ss
adc
stos
ja
inc
fstenv
out
cdq
jmp
ins
sub
add
xchg
(bad)
ins
mov
imul
inc
call
stos
data16
pushf
and
test
stos
push
out
test
mov
(bad)
or
xor
test
push
rep
xor
fisubr
retf
in
lahf
mov
ret
into
mov
(bad)
out
ins
inc
movs
sub
fnstcw
idiv
mov
jnp
mov
cmc
and
jns
mov
scas
pop
cmovae
jmp
aam
dec
jb
(bad)
xchg
or
popfw
sbb
aaa
sbb
mov
fisttp
test
dec
sahf
xchg
jecxz
popa
(bad)
push
pop
mov
or
int
xor
dec
push
icebp
and
sbb
or
sahf
test
movs
xchg
pop
xor
mov
pop
psubusb
dec
xor
sbb
dec
fnstsw
jl
rcr
sbb
imul
out
sbb
lds
rcr
adc
sbb
mov
movs
loopne
mov
hlt
jmp
fstp
cdq
mov
cmp
js
push
retf
jp
push
dec
retf
and
gs
clc
xchg
dec
movs
push
rcr
dec
add
and
jmp
jmp
push
das
aaa
add
js
(bad)
pop
(bad)
repnz
jg
addr16
(bad)
in
mov
push
ret
fwait
rcr
push
cmp
or
hlt
mov
call
cs
ds
inc
mov
les
cmps
cwde
sti
sbb
add
retf
dec
iret
addr16
dec
mov
je
pop
jno
or
lds
jo
icebp
gs
xor
std
ret
retf
xchg
jnp
ror
xchg
scas
bound
jmp
stos
jmp
aaa
ins
xor
cmp
inc
std
jmp
es
or
add
mov
mov
ret
bound
push
ret
fwait
add
or
dec
pop
ret
test
test
inc
out
mov
shl
das
das
aam
jbe
shr
out
fistp
dec
sti
add
jno
cvtps2pi
xchg
scas
dec
mov
mov
push
jle
add
retf
xchg
add
shl
xor
add
fwait
bound
push
xchg
fdivr
or
jmp
int
(bad)
fmul
es
fisttp
xchg
mov
std
mov
lods
fcmovnbe
pop
cmps
cmp
mov
gs
jg
aam
test
or
sbb
out
fist
push
mov
xor
hlt
push
inc
jmp
xchg
nop
inc
int3
ret
in
jmp
ret
movntq
call
sbb
mov
rol
inc
and
add
pop
mov
mov
popf
dec
ja
add
mov
push
ins
push
fidivr
repnz
ins
int3
imul
xor
and
imul
cdq
shl
mov
int3
cmp
dec
dec
(bad)
enter
sub
xor
or
and
or
sti
test
fiadd
ffreep
dec
mov
sbb
jmp
lock
sub
icebp
pop
ret
scas
fild
iret
push
inc
sti
test
js
lods
call
pop
sbb
pop
cmp
fidivr
push
pop
jg
xlat
jns
sub
cmp
scas
or
ret
push
ja
out
ss
lods
jp
test
mov
rcl
int
fistp
jmp
in
or
sub
movs
mov
ret
sub
or
pop
popa
lods
cmps
inc
adc
sar
aad
cdq
xor
xor
dec
stc
sahf
cmp
loope
sbb
clc
aas
daa
xchg
jecxz
dec
inc
dec
cld
hlt
ins
test
add
inc
movs
or
(bad)
and
xor
and
test
dec
fild
and
push
movs
push
xor
sub
or
loope
in
lods
sub
test
retf
mov
xchg
out
add
leave
pop
sub
mov
mov
ja
mov
in
sub
fcom
adc
cmp
inc
loop
rol
xchg
test
inc
push
cmp
jg
int3
movs
inc
pusha
loop
inc
push
nop
mov
retf
jg
(bad)
jmp
sti
inc
and
scas
shl
xor
neg
stc
test
dec
aaa
pushf
mov
in
push
mov
sbb
cmps
jbe
outs
jne
push
cdq
adc
dec
(bad)
outs
cmp
dec
add
xor
cli
adc
and
push
imul
jo
xchg
test
adc
mov
out
sbb
test
mov
dec
add
sahf
sbb
cdq
rcl
popa
cwde
inc
and
repnz
mov
enter
popa
xchg
ret
not
mov
mov
movs
mov
mov
cmp
dec
dec
mov
inc
bound
pop
push
nop
push
cmp
aam
add
add
in
xchg
test
jecxz
mov
lods
xor
shl
xchg
ret
and
mov
test
retf
xor
out
xchg
(bad)
push
(bad)
shl
dec
dec
ins
xor
inc
fnstenv
in
lods
or
out
push
(bad)
jmp
dec
cmp
shl
mov
fcom
inc
loop
cmp
push
jno
add
mov
not
mov
cld
sahf
out
sub
retf
jne
(bad)
fdiv
scas
pop
jbe
pop
mov
retf
fld
lea
or
cli
xor
std
cmp
mov
xor
repz
xchg
retf
jl
sbb
(bad)
pop
sbb
test
push
daa
and
push
je
push
jle
loop
lds
xlat
push
popf
push
cmp
push
dec
clc
cmps
cdq
fcmovnbe
sub
mov
fs
loope
sbb
xor
push
fidivr
lock
addr16
lock
mov
jecxz
pop
movs
clc
ror
mov
loopne
stos
add
sub
scas
sub
or
fstp
stos
(bad)
adc
add
cwde
jns
push
pusha
mov
push
rcr
pop
aam
or
add
in
out
push
ins
push
dec
cmp
int3
gs
sti
adc
daa
call
aad
xchg
outs
lods
push
adc
das
sub
pop
inc
xchg
retf
cdq
mov
das
repnz
mov
imul
or
hlt
fadd
push
push
cmps
xchg
sub
pop
xchg
lods
adc
push
out
lea
inc
and
mov
int3
aas
fild
push
mov
rcl
(bad)
and
out
je
jae
stos
gs
xor
pop
daa
xchg
push
xchg
stos
dec
int
sub
mov
mov
lods
leave
lahf
cmp
xchg
fcomp
aaa
or
pop
rcl
arpl
ja
(bad)
push
add
xor
mov
inc
std
mov
daa
push
cmp
mov
dec
add
jbe
or
out
cld
jae
mov
ins
pop
es
xlat
dec
sbb
aam
test
sub
ret
mov
add
pop
scas
(bad)
pop
mov
shl
ins
xor
dec
sub
stos
cli
repz
aas
adc
enter
fwait
and
dec
int
push
mov
fisub
adc
and
add
mov
retf
fstp
add
xor
ja
fpatan
push
mov
pminsw
mov
dec
sbb
std
pop
pop
arpl
test
push
pop
je
adc
fdiv
adc
add
sbb
sbb
outs
in
jo
aam
mov
bts
mov
unpcklps
xchg
dec
test
sub
popf
loopne
ror
imul
call
hlt
and
sub
ror
(bad)
loopne
jl
inc
ficom
sub
xchg
xor
out
mov
cmps
adc
stc
ret
jmp
imul
fs
popa
push
and
jge
test
je
sbb
stos
mov
or
jge
mov
stos
fdiv
and
mov
mov
or
arpl
xor
jns
adc
mov
out
and
or
dec
cmp
std
out
outs
jmp
neg
cdq
test
jne
xlat
pop
add
cdq
cmp
js
cld
aam
sub
dec
or
jl
fisub
retf
shl
cmp
pop
cli
test
add
cmp
xchg
std
adc
out
int
jno
adc
das
cld
mov
mov
mov
mov
adc
and
pushf
sub
stos
jge
test
cmps
movs
arpl
test
dec
popf
mov
mov
fisubr
fbstp
push
mov
jl
pop
imul
push
jae
cmps
icebp
repnz
adc
pop
mov
repnz
mov
cmps
lds
outs
das
dec
rcr
hlt
xor
lds
or
por
sub
lds
cli
or
and
nop
add
iret
repz
imul
mov
xor
push
and
stos
mov
jb
fdiv
jns
and
shr
cdq
popf
test
enter
dec
test
mov
jmp
push
push
retf
out
pop
stos
ins
or
jbe
sub
(bad)
gs
call
test
fmul
loopne
dec
aaa
mov
ret
sar
in
test
and
stos
mov
adc
outs
mov
and
ror
pop
xlat
xchg
jae
dec
sub
cmp
dec
and
push
mov
pop
mov
pusha
retf
pop
push
jne
adc
mov
lds
push
stc
sub
inc
in
fstp
and
ror
test
sbb
adc
push
les
jnp
cdq
or
push
out
cmp
dec
imul
jmp
lock
adc
jae
shl
movs
imul
add
cmp
call
loope
hlt
(bad)
stos
xchg
in
xor
ret
xchg
mov
dec
jmp
stos
xchg
mov
inc
xchg
ret
jae
pop
imul
jmp
in
popf
push
inc
cmps
xchg
xor
aaa
dec
std
mov
loop
aam
es
rcl
call
(bad)
movs
test
fsubrp
(bad)
jmp
push
cmc
lock
jmp
shr
fst
mov
stos
dec
and
dec
add
jae
mov
fdivr
jp
push
add
shr
xchg
jmp
popa
shl
lea
xchg
adc
jmp
or
add
and
sar
repnz
loope
xor
ins
jle
in
jae
lods
out
jmp
cmps
stos
dec
cmps
pop
div
ds
sub
sbb
ret
xchg
dec
jns
jne
and
pop
icebp
pop
rol
aad
pop
sbb
xchg
mov
fwait
imul
jl
pop
call
in
mov
jo
stos
loopne
xor
mov
pop
cmp
shr
ds
dec
push
jmp
inc
shl
daa
out
rcl
cmp
test
ret
xchg
mov
or
lock
xor
das
call
popa
popa
dec
jle
jge
adc
push
pop
mov
sub
outs
ins
mov
push
rol
push
shl
popa
pop
mov
adc
mov
push
pop
cli
shl
pusha
jmp
cdq
push
and
xchg
or
mov
adc
jmp
test
cmps
jg
inc
cmp
mov
sbb
mov
(bad)
icebp
les
or
or
imul
out
mov
(bad)
loop
xchg
push
repnz
cmp
xor
jle
hlt
sub
mov
dec
cld
in
stos
shr
push
call
inc
pop
test
pop
fidivr
jnp
fsub
in
bound
int3
pop
loopne
(bad)
sub
or
stc
(bad)
cmp
jo
push
(bad)
rcl
cmp
sbb
sahf
inc
xchg
jp
fisttp
add
and
shl
arpl
jae
sub
and
loopne
loop
xchg
xor
(bad)
lds
and
push
js
mov
sti
lock
enter
inc
(bad)
sahf
and
cli
xor
sub
idiv
mov
add
and
aam
jmp
inc
sub
adc
pop
fisub
xor
xchg
pop
sar
adc
pop
std
xadd
into
aaa
cs
xor
gs
sar
adc
xor
push
jg
sub
lds
adc
enter
sub
sub
lea
mov
xchg
jmp
mov
jp
sbb
dec
jle
test
cdq
ja
adc
mov
dec
dec
jle
mov
push
inc
cmps
outs
push
xchg
scas
hlt
ja
cmps
jle
popa
adc
test
mov
push
fwait
adc
dec
shl
pop
fistp
push
mov
or
retf
xchg
jp
aaa
sbb
adc
ds
jae
cmp
call
push
xchg
cwde
adc
pusha
jmp
rcr
iret
out
jo
jo
lea
xor
jle
cmc
cmp
shl
mov
adc
mov
jge
push
xlat
dec
aaa
cmp
jmp
aaa
sbb
aas
mov
pop
mov
mov
jle
pushf
(bad)
jno
push
mov
or
mov
xchg
(bad)
push
rol
(bad)
cmps
ficom
jne
xor
adc
cwde
fwait
mov
push
aaa
mov
sbb
dec
dec
sub
mov
es
cld
stos
sbb
repz
xor
call
xchg
pop
push
fcmove
shl
and
push
add
sbb
add
inc
lods
mov
and
add
test
jecxz
mov
cwde
(bad)
and
xchg
and
jmp
fidiv
xor
gs
sub
test
imul
adc
push
inc
or
js
push
pop
fimul
sbb
push
adc
fdivr
adc
push
pop
mov
sbb
add
mov
jmp
pop
ror
adc
jno
lds
mov
psrld
dec
and
test
leave
push
lods
inc
bound
dec
sub
mov
ins
mov
jge
jg
out
pop
xor
repnz
rcr
cwde
inc
xchg
dec
jb
mov
or
push
dec
js
add
fdiv
rol
(bad)
mov
pushf
aas
inc
jecxz
retf
dec
add
mov
rol
xor
(bad)
pop
(bad)
pop
xchg
sbb
lahf
inc
inc
mov
in
lods
or
shl
mov
(bad)
pop
jmp
stos
fnstenv
popa
clc
sub
std
or
adc
sub
retf
sbb
pop
mov
adc
jmp
adc
and
inc
cmp
loope
hlt
dec
jle
mov
scas
call
mov
cld
jmp
cmp
jecxz
sbb
retf
cwde
inc
clc
xor
or
idiv
mov
inc
scas
xchg
inc
ret
retf
sub
jp
adc
pushf
outs
add
stos
cmp
ss
push
out
pop
dec
cwde
aam
mov
cmp
test
jae
fmul
jp
retf
pop
or
push
sbb
ret
cli
adc
(bad)
icebp
dec
pop
nop
adc
sub
cmc
adc
aam
icebp
push
sbb
popa
xchg
xchg
mov
mov
add
dec
adc
(bad)
int
xchg
jp
push
mov
lds
lods
mov
xor
xchg
pop
clc
and
movs
repnz
sahf
dec
scas
ds
sahf
add
ins
push
pop
daa
mov
ss
fild
cmp
dec
jl
inc
cdq
push
mov
cmc
xchg
ss
dec
ins
cld
(bad)
xchg
xchg
inc
cwde
jae
inc
std
sub
mov
fcom
aaa
mov
jno
adc
leave
int3
jge
aaa
repnz
scas
jno
xor
or
xchg
movs
sbb
lahf
inc
sbb
adc
pop
pushf
push
sbb
and
outs
and
loopne
mul
dec
inc
imul
or
jmp
dec
jl
pop
xor
mov
push
cmp
daa
dec
arpl
and
and
mov
push
fdivp
jbe
mov
jl
sbb
shl
je
push
dec
fbld
leave
mov
stos
push
dec
fucomip
daa
push
mov
cmps
mov
cdq
push
stc
aaa
retf
mov
jmp
jmp
imul
outs
or
test
std
mov
mov
loop
mov
fistp
xor
shr
push
sbb
sbb
sub
and
sbb
rcl
jae
rol
sub
cmp
clc
xadd
sub
mov
or
ret
std
and
mov
add
or
sbb
mov
cwde
int3
push
(bad)
popf
dec
jle
xchg
add
xchg
mov
ret
(bad)
cs
mov
in
mov
xchg
jecxz
sbb
push
(bad)
ins
mov
xchg
pushf
aas
jno
pusha
sub
or
pop
xor
cmp
sahf
sub
lahf
cmp
ins
mov
clc
pop
jg
inc
inc
sub
and
mov
fisttp
lds
pop
aas
test
sbb
push
cmp
push
inc
adc
xchg
es
sti
mov
call
inc
imul
lock
and
cmp
sub
stos
test
jb
sub
sar
mov
mov
adc
(bad)
(bad)
dec
inc
add
fwait
test
add
repnz
push
cwde
and
mov
outs
push
xchg
or
xchg
add
lahf
adc
mov
lock
test
hlt
pop
imul
dec
push
test
jmp
xchg
aas
push
adc
loope
ss
lods
js
dec
xchg
pop
popa
int
addr16
mov
aaa
cmps
fisubr
retf
or
adc
nop
(bad)
scas
imul
int3
push
retf
cmps
jno
mov
shl
mov
in
sbb
arpl
sbb
adc
scas
jo
pop
js
xor
ret
pop
sar
sbb
call
inc
or
arpl
push
nop
sub
inc
enter
adc
sbb
movs
mov
ret
mov
xor
ror
sub
mov
loope
mov
fiadd
ja
div
add
pop
mov
add
mov
rol
push
mov
bound
jecxz
jecxz
jne
mov
sbb
ret
sbb
aam
std
hlt
data16
mov
inc
xchg
jp
popf
pop
adc
push
lock
or
mov
xchg
add
das
cmp
lahf
xchg
mov
mov
jae
cmp
daa
adc
stos
ror
sbb
dec
popf
fs
or
mov
push
sar
call
pushf
das
retf
push
sub
cmp
pop
cmps
cwde
std
stos
or
dec
pop
enter
jmp
and
pop
cmps
inc
jge
push
sub
mov
sub
aam
push
dec
(bad)
inc
inc
lods
sbb
xlat
jecxz
fld
pop
pop
retf
xchg
sahf
mov
imul
(bad)
cld
mov
sbb
popa
daa
popa
or
outs
and
cs
and
sub
loope
sbb
push
mov
mov
ja
push
call
retf
scas
and
test
cmps
add
cmp
inc
jle
jns
mov
and
sub
sub
call
xchg
push
stc
cmp
jp
out
repnz
push
mov
dec
pop
cmps
loop
add
shl
or
fidiv
cmp
mov
pop
call
inc
jbe
ret
ret
or
cmp
or
jne
fiadd
aam
pusha
fisttp
fistp
enter
(bad)
out
mov
cmp
sbb
dec
xchg
add
mov
mov
hlt
and
jns
push
cld
pop
in
push
mov
jmp
cmp
or
add
jns
or
fisttp
inc
push
push
mov
pop
or
call
xor
jecxz
popa
sahf
push
mov
dec
stos
pop
(bad)
xchg
push
leave
daa
addr16
jns
fwait
sub
dec
ds
or
inc
out
pop
push
outs
push
mov
mov
jp
or
das
(bad)
ins
ffreep
or
fadd
xor
sub
std
dec
loopne
clc
pop
sbb
or
and
push
retf
jb
mov
cdq
ds
sub
scas
lock
movs
loope
lods
xchg
jno
fstp
mov
scas
arpl
pmulhw
jecxz
dec
xchg
mov
pop
mov
iret
(bad)
loopne
lods
cmp
mov
and
test
lods
stos
ret
fldl2t
dec
loop
pop
jmp
add
cmc
inc
push
and
cmps
xchg
xchg
xlat
cs
xchg
leave
sbb
add
cs
add
cmc
dec
push
je
add
adc
out
jno
pop
shr
test
lds
xor
push
pop
rcl
adc
fiadd
and
ficomp
iret
sub
clc
fld
xor
icebp
adc
rcr
cdq
imul
dec
das
aam
stc
push
in
(bad)
mov
cmp
xor
jge
in
aas
mov
inc
or
scas
int
int
(bad)
ins
mov
adc
mov
(bad)
mov
fstp
(bad)
xchg
popa
jge
sub
jnp
sbb
xor
fdiv
push
fsubr
push
js
call
and
jp
shl
imul
or
mov
adc
jb
clc
sub
stos
in
cmp
jp
rcl
mov
or
ret
pop
shl
or
push
dec
xor
sub
xchg
dec
ror
sbb
cmp
(bad)
sti
mov
cmove
js
dec
xchg
xor
pop
in
mov
cli
mov
fisub
and
test
aad
scas
push
mov
retf
pushf
mov
and
mov
pop
mov
dec
iret
in
sub
rcr
push
rep
dec
and
and
cdq
hlt
sub
retf
and
xchg
rcl
xchg
sub
aam
mov
js
lock
pushf
dec
repnz
int
cmp
jmp
add
icebp
ja
mov
ins
enter
jbe
in
adc
dec
dec
mov
mov
xchg
pushf
das
(bad)
sub
in
inc
jbe
or
or
cmp
adc
or
push
cmp
cs
xor
je
push
mov
je
sub
sbb
mov
mov
or
xchg
out
out
xor
repnz
adc
sub
mov
cmp
enter
(bad)
test
adc
and
test
in
push
pushf
call
stc
gs
call
test
inc
into
outs
push
(bad)
jno
shr
movs
cld
(bad)
mov
cmps
mov
xchg
xchg
adc
in
fnsave
jp
jno
mov
mov
inc
jmp
push
jp
popa
mulps
leave
xor
sbb
cmps
inc
xor
cli
cs
jle
xchg
sub
adc
or
fwait
mov
pop
into
sar
xchg
imul
inc
dec
nop
mov
and
jge
mov
les
mov
mov
dec
dec
jmp
aaa
ror
aam
mov
sbb
fs
adc
jmp
cmps
jae
xchg
xchg
call
push
add
loopne
(bad)
in
jge
and
movs
push
dec
push
xchg
icebp
or
outs
mov
inc
mov
in
jns
loop
xchg
sub
addr16
das
pop
cmp
(bad)
or
pop
psubd
sbb
cmp
cwde
mov
mov
push
rcr
and
enter
sub
pusha
imul
xchg
xor
mov
mov
push
pop
icebp
test
dec
jne
pop
jmp
sbb
cmc
(bad)
sbb
mov
jmp
and
enter
enter
call
jae
inc
(bad)
sbb
and
int
lock
dec
arpl
cli
into
xchg
popa
stc
stc
fdivr
push
inc
(bad)
pop
add
les
in
dec
sub
shl
cmps
cmp
popa
sahf
loopne
cmp
mov
dec
mov
jecxz
inc
cmps
xor
cs
jmp
fsub
or
ins
das
push
xchg
add
out
loope
jbe
jp
xor
adc
mov
jge
call
sbb
jbe
test
pop
scas
js
addr16
ret
add
xchg
add
dec
push
mov
mov
ins
loopne
das
stos
fs
and
adc
dec
jl
into
push
cmps
call
fnsave
nop/reserved
lods
div
adc
xchg
(bad)
shl
or
pop
lahf
push
push
popa
stos
repz
or
dec
adc
cmp
and
adc
sub
test
repz
into
int3
or
and
mov
(bad)
jns
jge
in
sbb
dec
push
into
pop
xchg
mov
fwait
int3
bnd
dec
mov
sbb
and
movs
jl
aad
fwait
push
mov
jns
push
cli
and
je
mov
adc
fucompp
or
and
int3
pop
pop
jbe
int3
push
in
(bad)
xor
jo
leave
pusha
(bad)
hlt
push
ja
loope
(bad)
out
mov
aam
sub
js
inc
mov
ret
push
xlat
or
mov
push
inc
int
je
mov
out
test
(bad)
push
mov
ins
adc
lds
in
inc
sub
std
iret
retf
repz
icebp
cwde
xchg
dec
aad
and
cmp
jbe
sbb
lods
xlat
retf
and
sub
(bad)
hlt
icebp
fwait
dec
rol
aam
in
(bad)
adc
jns
neg
mov
cli
mov
leave
outs
aas
push
xor
add
push
arpl
popa
jg
mov
shl
mov
aaa
dec
jl
jns
mov
jbe
xor
std
mov
adc
stc
inc
cmp
push
mov
or
call
les
mov
(bad)
leave
mul
xlat
retf
mov
inc
jmp
pop
cdq
pop
test
cmc
pop
add
dec
jns
mov
outs
or
push
sub
ds
and
fbld
dec
xor
jge
ja
es
adc
mov
ss
ret
mov
jmp
retf
pop
xor
ret
push
mov
push
sbb
xor
pop
and
push
mov
inc
shl
es
and
fisttp
loopne
sub
inc
bound
test
in
repz
push
adc
mov
sub
pop
int
aaa
inc
sbb
push
jne
adc
lods
lods
ret
or
(bad)
shl
lahf
stos
mov
inc
dec
sbb
xchg
mov
inc
ret
(bad)
(bad)
mov
fnstcw
mov
(bad)
(bad)
fstp
add
mov
xor
scas
inc
cmc
mov
mov
in
in
adc
jno
mov
jnp
imul
jmp
cmp
inc
jmp
xchg
(bad)
lds
dec
or
(bad)
push
popa
inc
nop
mov
sti
fsubrp
adc
push
inc
push
sahf
jbe
test
dec
or
iret
mov
imul
mov
lods
inc
ret
aaa
dec
sub
inc
jne
dec
cli
ret
retf
sbb
fs
cld
jno
pop
jb
retf
bound
jo
xor
test
pop
mov
mov
or
aad
aas
or
pop
stc
pushf
(bad)
jecxz
imul
sahf
jle
pusha
cwde
mov
cmps
sbb
movs
add
mov
sub
popa
mov
(bad)
and
dec
test
xor
inc
or
dec
dec
sub
add
xor
pop
xor
mov
imul
fldcw
inc
sbb
inc
mov
mov
sub
mov
and
xlat
xchg
pop
and
inc
and
dec
adc
jmp
repz
imul
xchg
mov
repnz
(bad)
fisttp
xstore-rng
cmps
inc
shl
retf
mov
ss
bound
mov
and
inc
repz
shl
xor
or
mov
push
and
push
mov
ins
xchg
push
pop
jno
inc
scas
ds
xchg
or
data16
add
shl
inc
and
mov
mov
cmp
pop
popf
jne
lahf
push
mov
dec
add
stos
or
pop
(bad)
pop
mov
popa
arpl
fwait
push
sub
add
lea
dec
outs
fdiv
and
jb
cmp
and
and
je
push
dec
fld
mov
jmp
(bad)
jecxz
xor
out
mov
dec
cmc
add
cmp
int3
sbb
std
pop
jo
out
sbb
mov
dec
jo
cli
mov
dec
xchg
jo
rcl
call
(bad)
sbb
loope
stos
std
mov
sub
(bad)
stos
lods
mov
cs
mov
(bad)
ss
add
aaa
mov
sub
mov
cmp
jae
mov
sar
push
data16
lods
mov
fsubrp
(bad)
bswap
jg
test
mov
fld
stos
das
xchg
pushf
add
xchg
jb
nop
test
inc
adc
mov
dec
xchg
push
xchg
jecxz
push
lahf
mov
pop
(bad)
xchg
ja
or
ds
mov
add
fimul
ins
ja
fidiv
mov
push
sbb
cmp
retf
out
out
aas
cmp
(bad)
jns
loopne
ins
cmp
rcl
add
nop
or
mov
cmp
arpl
mov
lea
js
pop
(bad)
shl
xchg
fs
pop
popa
int3
les
push
jl
mov
or
dec
(bad)
not
xchg
dec
jmp
stos
aad
lods
ss
in
loopne
fstp
imul
enter
add
imul
cmp
fdiv
les
in
add
fcom
aad
mov
push
sbb
or
jmp
lahf
sbb
icebp
mov
mov
and
jns
enter
mov
add
jg
mov
adc
or
pop
push
aam
push
mov
lea
sar
mov
jo
outs
sbb
lods
push
(bad)
mov
pop
iret
aas
sbb
push
int
inc
pusha
add
xor
jnp
sub
fs
add
push
mov
lock
inc
pop
rcl
jg
sub
sbb
cmc
sbb
xor
sahf
adc
shl
mov
push
mov
and
inc
xchg
xchg
or
repz
div
cmc
fild
rcr
aaa
pop
fs
outs
(bad)
push
fstp
ins
push
dec
pushf
and
arpl
into
rol
adc
xor
or
or
cmps
jge
mov
cwde
addr16
cs
cmps
xchg
loop
sbb
dec
or
sub
cmp
and
cmp
or
jmp
jne
mov
lock
push
jb
div
push
stos
ins
call
sub
or
sub
cmp
lea
push
inc
xor
int
push
bound
sahf
push
cmps
data16
add
and
push
data16
push
inc
outs
jnp
cmc
mov
jp
test
cmps
sbb
lock
setns
imul
xchg
into
mov
popf
rol
dec
mov
test
loopne
mov
adc
nop
dec
mov
pop
fnsave
adc
iret
xchg
call
dec
ss
mov
(bad)
cmp
call
push
inc
aas
(bad)
shl
jmp
jno
or
and
sbb
mov
jno
sub
jmp
and
jno
inc
mov
addr16
pop
addr16
mov
push
popa
jp
mov
stc
inc
jge
fadd
rcl
retf
rcr
sbb
fs
sbb
and
ins
mov
jae
fld
call
pop
cmps
(bad)
fimul
jnp
imul
or
cld
test
lods
hlt
or
inc
sub
js
jnp
jae
jmp
push
cmp
mov
pop
(bad)
fstp
retf
adc
mov
clc
dec
arpl
jg
(bad)
push
jecxz
cwde
xchg
dec
cmps
add
int3
pushf
(bad)
repnz
mov
cmp
not
add
rol
cmp
mov
push
push
lods
lea
outs
aas
mul
(bad)
xor
pop
mov
or
sub
fs
stc
sbb
xlat
push
ds
loopne
stc
ret
jnp
fnstsw
call
xor
jo
stos
push
jae
stos
pop
mov
leave
out
cmp
jle
shr
fadd
imul
mov
xor
test
xchg
and
lahf
jge
jae
jbe
xchg
cmp
mov
sub
scas
xlat
mov
rol
(bad)
and
push
mov
in
mov
test
imul
sbb
sbb
int3
fnstenv
leave
mov
ins
(bad)
out
add
push
jmp
jge
sub
paddw
fsub
and
inc
xor
bound
enter
fs
js
xchg
iret
popf
cmps
mov
retf
stos
and
xchg
lods
xor
push
cmp
retf
push
repnz
mov
xor
xchg
cmps
ret
je
xor
mov
loop
adc
rcl
adc
mov
jmp
mov
cld
sbb
sub
fdivp
and
fild
sbb
push
aad
xchg
cmp
sti
neg
rcl
sub
add
sub
adc
cmps
frstpm(287
pop
inc
xor
imul
push
adc
pop
pop
shl
in
dec
int3
jmp
jg
test
or
(bad)
push
jns
add
cmp
adc
push
fcmovbe
sbb
rcr
jne
test
inc
pop
sbb
std
nop
in
xor
fdiv
sbb
movs
jb
mov
je
and
jge
mov
inc
push
sbb
dec
lock
jne
out
dec
jg
cmp
mov
xchg
or
pop
movs
clc
jge
ss
mov
or
mov
inc
fld
adc
into
leave
fdiv
jecxz
mov
push
fist
sar
jbe
push
loop
pop
mov
inc
in
shr
mov
(bad)
and
movups
mov
arpl
adc
retf
call
in
and
data16
mov
cmp
cmps
pop
jle
(bad)
cmp
outs
or
les
fild
out
nop
or
ret
mov
xor
pusha
js
adc
inc
or
jp
and
push
arpl
mov
neg
ins
dec
dec
mov
pusha
je
iret
lea
loopne
popa
push
cwde
sahf
or
mov
shr
pop
sbb
aaa
sar
jae
xchg
out
sub
and
ja
jno
pop
pop
mov
(bad)
or
lds
xor
aas
mov
lock
inc
jbe
repz
sbb
popa
pop
or
cmps
xchg
lds
dec
xchg
addr16
jmp
les
out
xlat
(bad)
dec
push
and
test
popa
pop
ret
mov
data16
xor
sub
and
push
push
sbb
(bad)
cs
xchg
cmp
ret
data16
test
lock
adc
adc
add
cmp
sbb
(bad)
jmp
mov
sahf
ds
movs
iret
test
sub
leave
loop
inc
mov
outs
rep
enter
loop
neg
sub
mov
dec
mov
inc
icebp
jmp
mov
shr
popa
out
mov
push
fisttp
pop
cli
out
jmp
data16
xor
jecxz
push
mov
xor
in
pop
outs
fs
sub
arpl
mov
dec
mov
enter
push
jne
jl
add
pop
pop
mov
sub
mov
ins
adc
adc
std
mov
jae
dec
xchg
out
es
ror
cmp
xchg
repnz
pop
push
sbb
mov
push
add
mov
and
add
or
mov
iret
in
jbe
add
adc
mov
(bad)
sub
inc
jns
sbb
mov
cmps
pop
mov
repz
cmc
cmp
fmul
dec
outs
fcomp
pop
arpl
sbb
sub
fld
add
jmp
jbe
repnz
cmp
jp
dec
out
inc
push
xchg
or
mov
mov
mov
jb
je
hlt
fistp
xchg
or
movs
sahf
sub
adc
test
sub
push
or
stos
jge
gs
aad
cld
cwde
in
(bad)
sbb
mov
test
jg
xchg
cld
mov
xchg
xchg
dec
movs
ins
mov
sub
mov
pop
cmc
fbld
push
ret
mov
cmps
outs
sbb
sbb
push
(bad)
shl
cmp
rol
sub
addr16
dec
leave
mov
xlat
jb
xor
mov
push
shl
adc
icebp
(bad)
mov
sub
push
shr
mov
cvtps2pi
retf
push
sbb
adc
mov
cli
pushf
jns
mul
xor
sub
bound
inc
mov
add
push
(bad)
ds
sub
and
sub
mov
sbb
sahf
dec
dec
sub
adc
mov
sti
dec
clc
add
clc
sar
inc
cmp
enter
jg
fld
jb
xchg
cmp
ret
popf
mov
sahf
sub
aas
fwait
and
(bad)
call
mov
call
xor
mul
push
ret
sbb
pop
sub
jns
(bad)
ret
xchg
mov
jle
movs
push
movs
mov
jp
push
jb
(bad)
movs
fsub
xchg
push
cwde
push
pop
mov
or
mov
or
pushf
fsubr
pop
shr
sub
je
xchg
stos
dec
movs
outs
cmc
les
movs
cmp
sbb
scas
retf
pop
bound
mov
dec
mov
add
sub
jae
stos
ins
das
push
push
in
call
push
dec
int3
sbb
cmp
lea
inc
mov
mov
fistp
cmp
jecxz
pop
or
mov
aas
sbb
jmp
popa
ins
jl
cmps
out
sar
adc
push
push
and
inc
adc
in
mov
and
mov
mov
mov
xchg
or
jne
(bad)
es
enter
or
jecxz
shl
mov
pop
fmul
arpl
(bad)
shr
push
(bad)
jg
xor
push
(bad)
stos
mov
mov
pop
pop
call
push
pop
in
dec
ins
add
fistp
stc
stc
and
clc
mov
mov
popa
jb
sub
dec
push
inc
addr16
jnp
sbb
shl
pop
shl
jge
mov
(bad)
push
jp
icebp
fdiv
mov
out
neg
push
mov
call
cmp
in
and
shr
sar
mov
(bad)
ja
or
push
loop
call
ret
sar
sbb
dec
ret
call
outs
imul
mov
mov
xor
inc
jb
out
pop
pushf
dec
sub
push
jo
ins
ins
fist
in
enter
jb
les
pop
mov
inc
adc
add
rol
inc
cld
std
nop
push
sar
push
sbb
not
sub
scas
add
lea
aas
retf
scas
aas
call
xchg
pop
popf
mov
push
ins
jp
mov
push
inc
inc
pusha
loop
fnstcw
jno
pusha
pop
pop
ja
push
dec
in
cmps
sbb
outs
test
jne
lahf
aad
ins
mov
fsub
pusha
mov
outs
arpl
inc
mov
fimul
mov
rcl
adc
xchg
int3
outs
cmps
sub
pop
xchg
bound
into
les
daa
dec
mov
aaa
fcmovne
push
adc
push
pop
cwde
or
sub
test
jb
dec
(bad)
cmp
push
push
rol
sub
aam
xor
add
aam
mov
adc
jno
retf
push
cwde
cdq
das
xor
mov
es
mov
(bad)
cmp
and
jb
ss
xor
iret
rcr
push
std
mov
dec
clc
xlat
adc
frstor
jbe
das
mov
nop
push
jne
ja
in
jecxz
ins
cli
push
push
inc
xchg
aad
idiv
jno
rcr
xor
inc
mov
sbb
jl
push
pop
les
retf
and
dec
call
dec
jmp
mov
xor
pop
xor
test
jns
clc
mov
pop
inc
add
(bad)
ds
and
lods
add
and
jecxz
xor
adc
fdivr
movs
cwde
loope
mov
add
adc
mov
inc
nop
cmp
cmp
enter
dec
scas
sbb
jp
adc
dec
jp
mov
test
xchg
jl
lods
cld
ret
push
adc
mov
ror
xchg
push
loop
push
icebp
cmc
mov
mov
pop
jl
cmps
enter
arpl
mov
aam
fisttp
ss
fistp
jp
or
mov
xor
or
mov
mov
xor
dec
xchg
mov
jnp
mov
cmps
arpl
test
cli
in
pop
push
mov
stos
mov
lea
pop
xchg
je
adc
xchg
and
pop
jbe
lods
retf
pop
cdq
cmp
movs
mov
jecxz
add
mov
rol
jmp
sbb
cs
mov
add
cli
mov
mov
inc
and
scas
mov
add
sub
add
cmc
test
jnp
and
push
mov
sar
adc
xchg
bnd
in
mov
jmp
adc
or
lahf
out
jmp
sub
mov
mov
mov
or
push
cdq
cmps
stos
jne
dec
dec
into
aam
or
fdiv
fisttp
ret
mov
movs
pop
data16
mov
fidivr
cmp
loope
mov
mov
scas
leave
dec
mov
inc
sub
movs
loop
repnz
mov
rcl
xchg
add
mov
sbb
pop
jns
inc
xchg
add
popa
mov
and
mov
adc
in
gs
hlt
movs
(bad)
ret
adc
pop
fcomp
test
mov
pop
cmps
add
jo
add
pop
push
sbb
aas
adc
or
and
js
(bad)
inc
pop
and
pop
nop
push
enter
sbb
movups
jmp
js
push
call
sub
sbb
iret
add
out
ret
lds
pop
fidivr
mov
adc
mov
ret
outs
mov
mov
sahf
scas
jbe
mov
lds
daa
cmps
mov
mov
add
or
fistp
sbb
adc
xchg
popa
ds
movs
jl
or
retf
int
mov
fmul
jnp
cdq
inc
or
cwde
push
mov
shl
mov
mov
adc
inc
repnz
cmp
xchg
jl
popa
sti
rcl
xlat
adc
dec
daa
in
jmp
das
or
cmp
fsub
mov
push
sub
jmp
pop
cmps
sub
lea
mov
dec
adc
push
mov
cmps
mov
inc
adc
inc
iret
dec
out
dec
pop
adc
ds
push
in
push
inc
jns
add
in
or
mov
pusha
and
out
test
sbb
jge
or
cmp
enter
mov
in
mov
pop
int3
das
repnz
mov
nop
out
stos
cmp
jbe
mov
pop
and
and
bound
int3
stos
bound
(bad)
xchg
sub
jle
ins
cli
mov
and
ret
sbb
aad
mov
xchg
push
fistp
cmp
retf
(bad)
lds
cs
push
pop
inc
sbb
cld
pcmpeqb
addr16
cdq
sub
rcr
pop
das
enter
into
mov
fidiv
cmp
sbb
jge
repz
cli
jl
imul
pop
pop
or
push
jmp
jle
outs
xchg
pop
shl
mov
pushf
pop
inc
daa
cmp
sahf
ss
sbb
lahf
pop
test
pop
mov
aam
out
les
out
add
mov
dec
push
es
and
xor
ret
cwde
pop
ds
jg
pop
in
leave
arpl
loopne
addr16
sbb
or
neg
push
in
jno
test
stc
push
push
scas
cmps
mul
mov
out
inc
std
clc
mov
stos
sbb
out
pop
leave
xchg
(bad)
jmp
or
cmp
fs
jg
push
fisttp
or
scas
push
mov
int
or
adc
pop
loope
sub
gs
mov
cmp
mov
inc
jne
ret
dec
loopne
lds
shl
cmp
sahf
xor
add
jp
stos
inc
and
aaa
pop
cmp
mov
mov
jp
sbb
les
cmp
movs
test
not
int
cmp
ins
or
call
or
push
ins
xchg
je
add
dec
add
mov
mov
sbb
or
jmp
mov
popa
add
nop
ja
dec
push
fistp
pop
sbb
pusha
pop
jbe
push
and
cmp
scas
mov
lods
les
and
in
ins
mov
movs
mov
pop
pop
retf
(bad)
icebp
or
fiadd
xchg
pop
xchg
sub
and
sub
push
xor
ins
lods
(bad)
cmps
xchg
shr
aad
aaa
pop
(bad)
pusha
in
xchg
inc
out
push
cmp
dec
sub
xor
cmp
(bad)
rcl
cmp
mov
mov
aam
call
mov
and
mov
in
nop
push
fcom
mov
rcr
sbb
xchg
ins
sub
push
mov
inc
lods
sub
inc
push
(bad)
in
jbe
es
push
push
daa
fist
jo
add
mov
repz
cli
fsub
adc
mov
mov
sub
ror
enter
inc
popa
pop
mov
cwde
or
dec
and
xor
dec
cmp
xor
mov
mov
out
ror
inc
mov
fisttp
jecxz
pop
fdiv
rol
mov
dec
push
push
push
iret
cwde
push
jne
lods
test
mov
aas
loop
push
retf
aad
ins
cmp
push
inc
fwait
mov
push
loopne
lea
cdq
test
cmp
sbb
xor
push
mov
out
push
xchg
in
cmp
mov
or
(bad)
inc
imul
adc
fst
hlt
push
push
sbb
xchg
jmp
clc
pop
mov
jbe
xor
aas
mov
test
pop
nop
adc
dec
fistp
outs
aad
cmps
stos
scas
jp
mov
jg
jbe
add
push
ss
jmp
sbb
push
dec
(bad)
setns
mov
sbb
and
sub
sub
int3
aam
xor
retf
jmp
neg
iret
jno
pop
mov
rcpps
cmp
mov
xchg
push
mov
jmp
dec
cmp
movs
add
popa
jg
popf
es
or
jp
iret
adc
invd
out
jnp
push
jb
stos
pop
mov
xchg
xor
dec
es
data16
jmp
call
add
and
xor
cdq
adc
cmp
xchg
add
test
xchg
mov
fs
and
fsub
xchg
sub
scas
test
imul
adc
ret
sbb
add
fild
into
push
retf
outs
les
les
adc
mov
popa
or
iret
xor
or
call
jl
stc
movs
pcmpgtb
test
rcl
das
sbb
test
fs
xchg
shl
(bad)
jo
mov
loope
call
lods
add
sub
adc
inc
in
jp
mov
jg
call
in
jbe
jbe
out
xchg
jb
mov
pop
sti
sub
ja
loope
sahf
outs
sbb
sbb
repnz
fst
and
xor
cwde
jecxz
das
mov
lea
xchg
retf
jge
fdiv
xor
fistp
(bad)
ret
stos
adc
cmc
xchg
push
fistp
cmp
es
sbb
push
cmp
sbb
mov
and
pop
jge
lock
cmp
gs
pop
sub
scas
xchg
js
idiv
add
dec
jmp
and
adc
cmp
push
mov
ret
adc
stc
call
sub
popf
or
sbb
jnp
sti
jo
adc
mov
hlt
sbb
mov
push
loop
arpl
pop
popf
sbb
inc
adc
lods
cmp
adc
hlt
or
mov
cwde
xor
inc
cmps
jno
icebp
jmp
or
jg
and
pop
push
aad
movs
sub
les
xor
in
adc
ja
int
mov
pop
vmovss
adc
mov
cmp
test
mov
outs
mov
push
cmp
dec
xor
dec
mov
xor
and
push
mov
jge
(bad)
ins
jp
retf
outs
std
imul
or
pop
mov
add
and
xor
adc
sub
cmp
push
add
ror
icebp
mov
call
cmc
cmp
test
push
inc
mov
sbb
sbb
(bad)
out
pop
into
jb
and
inc
mov
sub
arpl
(bad)
inc
scas
movs
xor
rol
sti
jbe
jo
push
xchg
aam
dec
clc
xchg
test
clc
aad
push
pop
ins
pusha
jge
arpl
sub
or
mov
inc
ror
sub
adc
mov
adc
or
mov
lahf
and
adc
sub
inc
and
rcr
mov
sti
repnz
lods
dec
ret
repnz
(bad)
pop
xor
sub
push
mov
int
sub
sub
in
loopne
push
stos
xlat
call
in
ret
or
cwde
push
fdecstp
jo
stos
and
lahf
dec
pop
dec
mov
push
lds
jae
nop
retf
loopne
or
scas
mov
push
jns
mov
sub
pop
mov
jp
mov
cmc
sbb
aam
retf
ss
mov
ja
xchg
dec
mov
fst
mov
(bad)
popf
xchg
cmp
test
cmp
sub
xor
into
dec
mov
shl
loopne
and
inc
xchg
outs
push
add
js
pop
cmp
or
les
lahf
cmp
sbb
mov
inc
sub
int
mul
lock
cmps
or
inc
sahf
add
or
xchg
popa
int
xor
xchg
sub
cmp
add
int
sub
fmul
or
out
out
imul
sbb
pop
movs
fs
pop
loope
cmp
add
neg
iret
push
movs
jne
(bad)
hlt
daa
scas
pop
(bad)
xchg
mulps
mov
jne
sar
adc
retf
or
cmp
sub
movq
dec
jecxz
xchg
sbb
cmps
dec
jmp
daa
push
sbb
sub
pop
jbe
mov
or
add
inc
xor
fild
cmp
sub
retf
es
pop
mov
push
mov
aad
jge
out
loopne
retf
nop
mov
xlat
mov
sbb
(bad)
std
int
imul
fistp
inc
jge
enter
xor
jne
sub
push
in
pop
mov
push
daa
in
rcl
shl
adc
xchg
daa
inc
push
adc
or
or
inc
loop
in
addr16
mov
push
xchg
xlat
push
xchg
jae
test
lock
adc
ss
push
sbb
mov
cmp
mov
fstp
push
retf
(bad)
mov
xlat
xor
xchg
jmp
retf
jecxz
add
aas
mov
out
mov
out
test
push
adc
jl
out
xor
add
xchg
add
clc
jne
stos
fisttp
ja
(bad)
cli
pop
pop
lods
adc
in
mov
dec
sbb
imul
or
outs
cmp
les
add
arpl
jmp
push
jae
lock
shl
data16
ret
cmp
lds
or
test
dec
(bad)
iret
push
push
cs
jmp
jmp
movs
lea
xlat
inc
inc
in
xor
mov
outs
mov
sar
or
xlat
mov
xor
fst
push
test
je
push
loop
inc
cmp
jbe
inc
and
mov
push
test
sbb
dec
outs
cmp
adc
sub
or
inc
dec
cld
cmp
add
gs
out
add
mov
sbb
mov
xchg
mov
aaa
mov
sbb
stos
jmp
movs
hlt
mov
retf
pop
daa
push
push
pop
je
or
bound
pop
jg
ret
sbb
repz
xor
ja
ds
mov
sbb
xchg
lock
adc
pop
lock
out
pop
popf
jbe
adc
ror
xor
or
and
or
and
lock
sbb
cmc
iret
mov
sbb
addr16
cli
aaa
ss
fcom
sbb
jo
mov
out
call
jp
fmulp
adc
fmul
in
ret
add
add
xchg
jne
jb
pop
imul
cmp
adc
cmp
in
dec
pop
mov
jge
jnp
or
add
xor
out
cmps
push
addr16
test
or
dec
pusha
sub
xchg
ret
mov
clc
ror
xor
rcl
jp
or
lahf
popa
daa
push
jmp
mov
and
dec
sub
in
mov
into
adc
ror
inc
inc
jp
mov
lds
cmp
inc
sub
stos
inc
mov
movs
pop
sahf
popf
mov
outs
ja
cmc
cmp
stc
mov
pop
cmp
pop
imul
cwde
sbb
mov
outs
mov
fsubr
popa
cmp
jecxz
jo
mov
pop
mov
into
std
ja
or
mov
pop
cmp
dec
icebp
xlat
pop
push
sub
outs
sub
(bad)
push
mov
imul
sub
dec
sbb
gs
or
and
push
cmp
lea
test
loope
push
or
adc
lds
loope
lods
push
add
pop
pop
xchg
xor
jmp
fstp
lods
inc
jno
push
(bad)
cs
enter
cmp
or
mov
jae
mov
std
iret
sbb
jnp
sahf
lods
daa
push
mov
sub
arpl
jmp
xchg
scas
pop
xor
push
test
pop
aad
or
out
fcomp
pop
mov
and
retf
leave
inc
sbb
(bad)
sub
cmp
test
jl
xor
cmp
stos
pop
inc
out
test
aad
xor
out
mov
jnp
ss
pop
cmps
cs
cmps
movs
and
xchg
sbb
inc
mov
mov
dec
xchg
nop
fst
dec
cmps
sti
rcr
lahf
sub
and
iret
xlat
or
out
inc
scas
aaa
cmc
rol
movs
movs
jg
cmps
stos
cmps
ret
inc
jecxz
out
icebp
lods
mov
jbe
std
out
adc
jle
(bad)
xchg
or
cmc
cli
popf
out
in
ss
xlat
mov
mov
mov
and
cmc
aaa
out
or
inc
scas
daa
dec
fisttp
mov
stc
ret
inc
xor
aaa
mov
dec
sub
jo
jns
ret
addr16
push
dec
xchg
add
aam
out
fdiv
jl
pusha
push
and
push
xor
push
icebp
xor
movs
sbb
rcr
into
sub
aaa
clc
xor
cdq
ss
icebp
and
jmp
adc
push
mov
mov
hlt
shl
mov
or
mov
loope
scas
daa
imul
xor
stos
cmp
mov
enter
pop
push
dec
loop
stos
scas
daa
dec
call
outs
jnp
mov
dec
adc
mov
push
push
pusha
leave
js
aam
inc
das
mov
cmps
and
mov
rcr
leave
lahf
pcmpeqd
aaa
dec
dec
stos
mov
mov
sbb
leave
movs
xlat
icebp
mov
nop
jmp
rcr
adc
div
out
jbe
inc
sub
cmp
stos
dec
mov
mov
pop
jae
push
lock
cmp
inc
dec
sub
sbb
mov
cwde
mov
cmp
mov
dec
sbb
into
aas
sub
in
push
cs
jbe
shl
stc
fisttp
call
cwde
add
jno
pop
bound
mov
mov
inc
popf
jns
int
dec
add
sub
ins
xor
cwde
ins
jns
stc
or
pop
sbb
dec
out
inc
mov
add
inc
fistp
lods
(bad)
int3
cmp
inc
mov
retf
xchg
sub
pusha
jmp
inc
dec
push
test
js
mov
sub
pop
popa
out
pop
in
in
int3
out
push
je
movs
fadd
sbb
dec
sar
ret
pop
mov
mov
daa
ret
cmc
(bad)
cld
mov
cmp
push
pop
jne
jg
cld
lea
push
xchg
xlat
adc
(bad)
xchg
inc
jno
lea
je
imul
(bad)
jg
xor
jmp
cdq
fisttp
inc
pop
sub
mov
sti
fnstenv
cmp
or
adc
fnstcw
sub
add
mov
fsubr
pusha
xor
movs
(bad)
cli
mov
cli
adc
scas
push
sbb
popf
cmp
push
sub
mov
icebp
jg
test
movs
sub
xchg
inc
push
cmps
repz
jns
into
dec
jmp
cmps
pop
retf
and
ins
mov
sar
xchg
mov
inc
xchg
mov
mov
xchg
pop
les
xchg
or
aam
jmp
ds
pop
mov
jecxz
mov
and
jge
test
adc
xor
imul
jne
cmp
aas
fdiv
out
cmp
popa
outs
outs
loop
cmp
mov
pop
arpl
mov
cmps
outs
int
xchg
mov
test
enter
mov
sub
fcom
outs
sub
xor
fidiv
cmc
xchg
clc
cmp
fwait
sbb
push
mov
add
icebp
icebp
push
jmp
add
inc
mov
pop
mov
inc
push
and
inc
hlt
ins
inc
and
lea
cs
mov
xor
pop
xor
mov
sbb
lds
sbb
cmp
mov
stos
daa
outs
lahf
or
in
and
call
ror
aas
xchg
shl
xor
xor
fmul
cmc
js
sub
xchg
(bad)
push
jno
loop
or
loopne
adc
popa
test
outs
add
pop
jae
add
xor
jle
cmp
ficomp
pop
sbb
xchg
iret
push
sbb
leave
ins
xor
test
loope
imul
adc
(bad)
mov
jmp
or
daa
sub
aas
sub
ror
scas
xchg
lahf
dec
and
shl
jmp
push
hlt
dec
cmps
shl
ja
(bad)
sub
fst
icebp
imul
jno
iret
and
jb
out
adc
and
rol
stos
neg
mov
cmp
push
dec
aad
add
scas
(bad)
xor
popa
out
shr
sub
dec
scas
stos
xchg
out
inc
int
xor
xchg
pop
(bad)
loope
ins
jecxz
jnp
jnp
cdq
dec
and
jne
sub
xor
rcr
or
mov
aaa
test
in
push
aaa
ret
arpl
dec
outs
mov
cmps
bnd
push
into
cmp
out
ja
mov
pusha
sub
scas
jae
arpl
fidiv
movs
retf
jo
les
cmps
sub
ss
cmps
mov
push
jno
add
data16
sbb
enter
adc
pop
mov
mov
or
enter
mov
push
cmp
cs
pop
push
add
mov
inc
push
aam
mov
xor
call
cmp
jb
test
pop
jl
cmp
cmp
pop
nop
leave
call
and
retf
addr16
push
inc
pop
hlt
aad
push
sbb
loop
add
mov
scas
and
imul
aad
and
pop
rol
xor
iret
sahf
ret
out
pop
cmp
enter
push
inc
jmp
stos
call
inc
jge
je
in
xchg
mov
inc
pusha
mov
add
cwde
sbb
xor
aad
stos
test
int
mov
ja
cs
jns
iret
ins
loopne
pop
jbe
xor
movs
xchg
scas
movs
jp
adc
adc
nop
rcr
popa
scas
push
popa
lods
dec
sbb
in
rcr
dec
movs
and
add
in
mov
xchg
inc
xchg
stos
or
dec
(bad)
ins
mov
mov
sub
sbb
repnz
xchg
rol
dec
int
add
out
pop
mov
addr16
lods
test
ret
fadd
pop
push
into
cmp
pop
aad
iret
cmc
shr
imul
sti
ret
cld
sbb
and
(bad)
imul
sub
into
adc
les
cmp
cmp
popf
or
sbb
scas
and
loop
pop
inc
jmp
hlt
sahf
jmp
adc
call
mov
jmp
add
sahf
mov
loope
pop
sub
xchg
or
or
or
pop
mov
mov
lds
shl
jl
mov
cmps
ja
lock
in
pop
sahf
mov
cmp
loope
cmp
add
sahf
ins
add
jmp
retf
movs
fisttp
inc
jne
jmp
push
jbe
scas
or
es
inc
or
dec
retf
(bad)
push
push
outs
xor
jmp
enter
outs
lds
cmp
pop
xchg
sbb
xor
test
ss
pop
cmp
and
ins
push
aad
cmp
das
loope
imul
mov
icebp
push
mov
push
hlt
jne
mov
test
dec
call
xchg
cld
out
push
push
inc
xor
dec
fldenv
xchg
pop
ja
fcom
mov
scas
adc
loopne
mov
popa
add
sub
and
retf
add
rcl
inc
adc
ins
test
xchg
pop
mov
leave
push
sti
xchg
repnz
dec
je
jno
inc
xor
sub
fwait
shl
les
aas
sub
mov
rol
leave
pop
and
pop
xchg
adc
fs
jg
mov
bound
cwde
inc
or
daa
pop
mov
sub
daa
mov
xchg
xchg
or
add
iret
sub
pop
test
das
pop
adc
cli
or
mov
add
fcomp
sti
push
cmp
inc
fild
je
pop
out
nop
mov
push
mov
adc
add
mov
aaa
gs
shl
mov
loopne
clc
mov
push
mov
xchg
mov
je
stos
arpl
cmp
and
std
stos
aas
cs
xchg
cmps
sub
add
add
or
push
xor
and
and
test
sub
dec
cmp
sub
cdq
ret
pop
pushf
mov
pop
adc
(bad)
das
in
adc
cwde
rcr
push
sub
xor
pop
add
dec
hlt
repz
je
psubsb
arpl
fisubr
mov
and
mov
pushf
mov
push
sbb
xor
popf
popa
(bad)
jno
int
push
pop
std
punpckldq
retf
xchg
mov
(bad)
out
les
ror
mov
mov
cmp
push
popf
inc
nop
mov
add
ds
pop
dec
daa
push
and
ins
lock
scas
sbb
fndisi(8087
lods
pusha
sti
xchg
adc
sar
cli
push
or
int
pop
outs
gs
es
dec
repnz
mov
pop
or
jge
aas
lods
hlt
test
add
jo
mov
cmp
test
ja
inc
push
retf
ds
and
add
test
pop
out
mov
es
dec
(bad)
hlt
and
sub
(bad)
and
sub
call
mov
mov
or
xchg
in
ret
(bad)
int
add
mov
ror
cmp
pop
push
lahf
cmp
pusha
jg
lahf
sbb
outs
sub
cmp
not
mov
or
addr16
push
mov
inc
ins
and
add
fimul
iret
adc
scas
jge
inc
mov
mov
or
cld
(bad)
jg
in
jbe
or
xor
dec
data16
push
pop
repz
arpl
ja
pshufw
fstp
stc
stc
xchg
int3
and
jo
ucomiss
sub
(bad)
push
fnclex
pop
fstp
inc
cmp
mov
test
add
popf
sti
mov
inc
dec
xlat
loop
push
xlat
add
icebp
cld
scas
pop
es
cmp
sub
add
out
and
mov
and
(bad)
xchg
mov
out
pushf
sub
cli
xchg
add
imul
imul
adc
call
call
mov
das
(bad)
cmp
mov
mov
jbe
pop
adc
dec
push
push
iret
ds
(bad)
adc
adc
xchg
pop
mov
mov
jp
lahf
into
shl
int3
aas
mov
jg
shld
add
mov
outs
inc
add
aaa
xchg
sbb
stos
xor
mov
mov
sbb
aad
in
jns
test
cmp
adc
inc
mul
sub
retf
push
(bad)
add
enter
ds
push
or
loop
nop
lea
out
inc
or
in
pop
mov
fld
fwait
mov
push
add
inc
rcl
cmp
leave
push
retf
sub
arpl
aaa
push
fcomp
fistp
sbb
jmp
in
or
inc
inc
sar
outs
jg
pusha
scas
adc
xchg
add
dec
jle
cmc
lahf
sbb
js
dec
dec
imul
xor
sub
mov
push
jns
sub
hlt
int
mov
pop
cmp
into
push
adc
ds
ficomp
icebp
ds
ins
nop
or
addr16
xchg
les
jnp
div
inc
arpl
jg
xchg
xor
jmp
jmp
and
xchg
jo
push
jo
fidiv
inc
ins
inc
gs
(bad)
in
addr16
mov
xor
mov
cmp
xchg
(bad)
push
les
mul
pop
cmp
mov
cwde
or
push
test
cld
and
or
pusha
out
movs
fmul
jle
dec
pop
push
inc
cli
mov
mov
adc
sub
adc
lods
mov
lds
sub
lahf
adc
sbb
(bad)
call
sub
ds
sub
pop
mov
loop
jb
loop
xchg
les
daa
shl
mov
cld
in
push
ret
add
stos
addr16
js
jb
mov
pop
outs
iret
or
cs
iret
int3
push
add
or
jnp
bound
lea
call
pop
cmp
pop
sub
dec
in
imul
add
ss
enter
mov
jl
jl
cmps
ret
sbb
sub
jmp
lods
fistp
sub
push
xor
mov
xor
push
pop
or
mov
not
mov
scas
mov
and
or
push
in
and
adc
mov
add
nop
and
ss
jg
iret
adc
pop
xor
mov
mov
mov
push
lods
jmp
sbb
mov
mov
xlat
ret
adc
jo
push
add
pop
adc
call
data16
aaa
cmps
adc
sbb
cmp
lock
clc
fistp
inc
loopne
mov
pop
jmp
nop
(bad)
sub
cmp
not
out
push
scas
ins
push
mov
repz
ret
add
aam
jbe
call
mov
aas
inc
and
addr16
mov
and
jmp
add
lods
jg
pop
pop
push
in
rcr
push
nop
push
imul
out
sbb
int3
outs
push
or
mov
jae
cs
push
lds
push
or
cmps
es
in
sbb
mov
and
inc
adc
or
inc
sbb
(bad)
stc
jmp
dec
outs
jmp
not
and
shld
jae
sbb
popa
and
mov
sbb
fdivr
dec
xchg
cli
pop
je
scas
(bad)
popf
xchg
mov
outs
cmp
gs
lahf
ror
loopne
ss
lods
mov
cwde
sbb
data16
stos
dec
pop
push
jne
xor
mov
jb
inc
enter
sub
movs
dec
mov
pushf
in
shl
sbb
mov
bound
pop
(bad)
icebp
das
push
jmp
std
outs
or
or
(bad)
adc
rcr
mov
rcr
test
jnp
cmp
mov
adc
imul
mov
jns
and
int
and
scas
sbb
fisttp
dec
dec
mov
mov
js
mov
in
adc
push
aas
pop
(bad)
pop
outs
loope
jg
xchg
and
pop
cmps
mov
adc
cmps
adc
and
test
jmp
sub
pop
mov
repz
jo
mov
mov
cmc
sbb
xchg
ficomp
adc
shl
sbb
ret
sub
push
popa
stc
push
or
in
and
sub
inc
jbe
pop
(bad)
mov
xor
mov
test
pop
jne
ds
test
gs
mov
mov
cmp
rol
mov
push
mov
iret
es
daa
pop
inc
fwait
mov
loop
not
pop
jb
or
xchg
ins
jo
sub
xor
jg
xor
and
in
mov
sbb
mov
es
and
shl
data16
mov
pushf
retf
inc
leave
or
nop
shr
(bad)
cld
mov
ficom
out
xor
outs
mov
fild
mov
fild
push
sub
(bad)
fmul
cs
das
cmp
or
mov
jae
test
(bad)
push
sub
mov
xchg
pop
jecxz
fmul
push
xchg
jbe
(bad)
scas
(bad)
ds
xchg
add
(bad)
xchg
cmp
test
movs
in
jnp
xor
cld
lods
popf
jnp
push
mov
pop
sahf
adc
enter
xchg
or
test
pop
push
(bad)
out
jae
jp
scas
(bad)
xor
imul
test
inc
mov
adc
std
and
pop
sbb
sub
clc
add
ds
ins
xor
fdivr
lods
(bad)
cwde
dec
pop
lods
cld
test
sub
sbb
aaa
aad
std
aad
add
sub
add
dec
jns
les
jmp
dec
mov
fimul
inc
mov
cmps
repnz
inc
and
popf
cdq
mov
icebp
out
mov
mov
pop
pushf
add
push
mov
xor
sub
sti
mov
icebp
out
and
outs
out
mov
fs
cmpps
jmp
stos
mov
jno
mov
fsubr
xor
adc
jg
mov
in
sar
aam
mov
mov
(bad)
iret
fdiv
dec
and
jo
mov
(bad)
in
retf
shl
cmp
push
int
stc
fnstenv
dec
pop
mov
imul
push
dec
iret
dec
gs
lods
push
xor
push
add
call
sub
cwde
test
pushf
loopne
adc
push
xor
mov
ins
shl
out
xchg
inc
mov
test
inc
shl
inc
in
fist
xor
mov
xor
mov
int3
jge
mov
imul
bound
std
cmp
cld
addr16
add
or
test
pop
mov
sub
jnp
cwde
ret
or
out
ins
in
je
inc
and
mov
cmps
or
fistp
call
gs
xor
mov
sbb
or
adc
imul
push
and
call
pushf
jbe
sub
out
cmps
dec
or
shl
cmp
inc
aaa
cmp
out
sub
sub
inc
sbb
mov
out
scas
ret
movs
sbb
ins
call
mov
stc
cdq
rol
or
add
movs
xor
enter
mov
aas
or
add
or
(bad)
ror
xchg
fdiv
fisub
aaa
pop
outs
sub
aaa
out
or
jmp
mov
pop
jmp
jl
mov
mov
imul
stos
push
push
cdq
or
pop
enter
xor
inc
cs
jno
pop
inc
pushf
xchg
xor
jle
in
(bad)
pop
outs
ficomp
inc
ret
sbb
test
into
(bad)
mov
sub
in
outs
dec
inc
in
jmp
popa
cmps
in
pop
pusha
or
pop
std
add
and
jno
xor
aam
sti
cmp
aas
call
ss
aas
mov
xor
push
out
xchg
popa
mov
cwde
xchg
pop
ss
ja
sbb
rcl
xchg
adc
inc
out
das
pop
pushf
int
sbb
pusha
hlt
loope
cld
xor
xchg
cmps
cld
sahf
pusha
jo
xlat
cs
and
xlat
adc
cvtpi2ps
pop
mov
pop
stc
mov
popa
mov
dec
das
pop
xor
shl
retf
sbb
jecxz
sbb
dec
or
pop
loope
mov
test
mov
add
sub
push
or
imul
gs
push
jg
cmp
mov
dec
mov
xchg
cmp
push
cli
dec
cmove
pop
es
sub
retf
adc
ret
ror
sbb
sar
sti
push
imul
fisttp
inc
cwde
aas
dec
add
movs
push
lahf
push
adc
mov
neg
cmp
rol
out
hlt
jg
jmp
or
scas
vpsubsw
cmp
psubd
cmp
ror
jmp
shl
sbb
loope
push
sar
push
hlt
dec
fild
sbb
add
mov
fs
adc
xor
push
cli
in
and
cmps
sub
pop
loope
mov
addr16
dec
push
loope
bound
xor
ds
fidiv
sub
mov
jecxz
adc
in
or
push
shr
xchg
popa
mov
(bad)
test
aad
pop
pop
loopne
push
mov
fwait
fs
iret
mov
or
or
mov
into
push
or
mov
imul
pop
ds
(bad)
mov
pop
sbb
adc
movs
nop
jbe
test
xchg
mov
icebp
sbb
iret
hlt
mov
mov
scas
push
mov
paddusw
mov
cmp
adc
test
jae
push
sbb
call
dec
or
icebp
push
imul
pop
cmps
repz
retf
push
sbb
pop
jp
jg
jmp
sub
sbb
hlt
mov
add
mov
test
jnp
(bad)
in
jp
xchg
test
mov
aas
aaa
mov
hlt
adc
cmp
adc
shl
mov
lods
sub
xor
test
jmp
fimul
gs
sub
mov
jae
inc
add
in
and
fadd
aam
mov
and
dec
or
scas
mov
mov
adc
data16
sub
dec
jmp
mov
jp
dec
cs
xor
cmp
and
sti
push
mov
fstp
xor
jb
cs
arpl
iret
sub
jns
enter
sub
int
cld
and
ins
xchg
daa
dec
clc
inc
sbb
mov
xchg
jne
retf
pop
(bad)
call
pop
test
fwait
daa
fcmovu
lea
adc
adc
mov
hlt
fstp
jno
enter
js
test
iret
js
mov
and
mov
mov
std
outs
jmp
call
dec
mov
inc
test
or
cdq
sub
push
mov
sub
ret
jecxz
lds
sbb
(bad)
cmp
add
shl
add
push
retf
outs
mov
das
dec
push
jmp
mov
push
fistp
pop
fnstenv
xor
sub
jle
ret
mov
dec
jmp
or
push
repz
in
fisttp
sub
mov
mov
jmp
call
jns
and
pop
aas
ds
shr
mov
je
cdq
into
pusha
rcl
cmp
dec
mov
add
cmp
or
repnz
fs
mov
(bad)
data16
pop
inc
std
pushf
scas
aam
pop
jo
int
call
mov
xor
fiadd
xchg
stos
je
mov
es
cmp
adc
ins
sub
adc
mov
sub
pop
movs
arpl
jge
mov
jl
mov
jne
or
dec
inc
pop
outs
shl
ror
js
xor
fnstsw
sub
xchg
mov
in
add
movs
jns
mov
ins
aam
addr16
or
leave
sub
mov
add
jb
mov
mov
bound
les
gs
test
cs
repz
adc
inc
push
dec
inc
or
movs
jns
mov
xchg
add
pop
xchg
in
imul
inc
repz
daa
xchg
idiv
lods
and
addr16
push
adc
mov
sub
dec
jle
nop
gs
mov
jmp
inc
sbb
mov
ins
(bad)
adc
mov
add
xor
lahf
xchg
pushf
jmp
ret
movs
cmps
fstp
add
jge
(bad)
scas
loop
or
call
mov
popf
jecxz
mov
scas
leave
addr16
mov
and
mov
call
clc
xor
jle
cli
in
nop
(bad)
jge
retf
dec
inc
mov
mov
or
stc
rcl
push
in
push
(bad)
xor
push
hlt
ds
push
dec
adc
repz
sbb
in
mov
(bad)
jle
mov
stos
shl
cwde
aam
adc
fs
jno
call
push
imul
inc
lea
scas
and
mov
xchg
jg
pop
into
fiadd
lods
arpl
pop
and
sbb
retf
cmp
loopne
push
std
sub
add
jo
and
push
outs
test
fiadd
mul
mov
shl
xor
mov
out
imul
outs
inc
data16
fstp
stos
stos
iret
(bad)
das
data16
xchg
mov
sti
push
or
dec
mov
push
and
inc
iret
lods
scas
push
pop
jg
push
mov
gs
xchg
mov
stc
fld
cmp
in
mov
stos
mov
adc
movs
stos
cmp
xor
loop
clc
repnz
sbb
or
lock
mov
rcr
push
fcmovnb
mov
sbb
(bad)
sbb
and
fiadd
pop
xor
push
cli
adc
sub
xchg
rol
fstp
fs
aaa
xor
inc
arpl
out
into
je
mov
ins
or
mov
adc
in
pop
mov
out
(bad)
(bad)
neg
je
rcr
retf
cmps
push
push
imul
into
sbb
push
rcr
cli
cmp
or
jl
iret
daa
jb
hlt
pop
push
pop
jae
inc
sti
movs
xchg
bound
retfw
push
retf
mov
clc
mov
popf
mov
cmps
repz
push
jge
std
fist
push
mov
cli
fcomp
jl
mov
pop
dec
sbb
and
mov
loope
div
adc
push
adc
xchg
push
movs
repnz
out
outs
or
or
dec
sbb
mov
or
push
xor
jle
or
or
xchg
cwde
or
bound
pop
out
add
jge
mov
jp
xchg
push
xor
lods
inc
add
push
jnp
xlat
fwait
ja
clc
mov
add
fild
repz
sub
outs
es
push
mov
daa
popa
mov
mov
adc
adc
fisttp
pop
fptan
ja
xor
int3
pushf
data16
mov
addr16
ja
fisub
cmp
stos
cs
and
adc
js
outs
call
pop
mov
mov
mov
jecxz
mov
(bad)
cmc
std
mov
add
push
enter
mov
ret
add
aas
sub
jg
cmp
push
jecxz
lods
cmp
(bad)
mov
or
cld
dec
fmul
push
pop
cmp
inc
bound
and
ficom
xor
jl
mov
sbb
sbb
xchg
into
push
js
inc
imul
out
repz
addr16
sub
popf
test
fs
sbb
inc
push
or
add
bound
aad
push
mov
mov
jle
imul
xchg
repnz
xchg
push
arpl
mov
or
mov
das
dec
inc
mov
loop
xor
xchg
or
gs
fcom
pop
inc
jp
push
fldcw
es
jae
into
sbb
jp
or
or
mov
arpl
dec
gs
dec
enter
cmc
cwde
fisubr
mov
in
mov
xor
xchg
dec
pushf
int
jns
cwde
retf
lea
sbb
cli
dec
(bad)
xor
out
jmp
or
mov
leave
retf
push
dec
icebp
fwait
mov
test
add
push
and
dec
scas
or
jge
outs
fwait
mov
out
movs
inc
xchg
ins
cmp
cmp
xor
jge
hlt
sub
add
nop
xchg
add
xchg
test
scas
mov
mov
ret
push
loope
rcl
mov
mov
mov
movs
dec
xchg
dec
and
sub
mov
mov
xor
xor
dec
cmps
xor
aas
add
sub
add
ja
pop
mov
push
push
mov
add
or
pop
cs
mov
ds
nop
push
ins
lods
jmp
outs
xchg
out
push
sub
sbb
xor
push
pop
int
mov
or
or
ret
cmps
je
mov
mov
icebp
sti
inc
xchg
mov
scas
std
mov
dec
mov
iret
stos
or
aaa
mov
xchg
je
in
ret
add
(bad)
outs
dec
push
int3
sub
jecxz
xchg
cmp
mov
cmp
add
mov
cmp
in
inc
out
mov
imul
mov
fwait
sbb
inc
xor
sub
xchg
push
adc
or
push
ficomp
cmps
les
sbb
jo
fisub
cmp
mov
or
push
xchg
cli
mov
and
fcomp
aam
or
push
pop
or
xchg
inc
push
test
jnp
(bad)
fidiv
mov
inc
mov
clc
cmc
xor
sub
inc
cld
(bad)
push
in
mov
fwait
cmp
push
push
xchg
lock
mov
(bad)
jnp
sub
jmp
cmp
sub
pop
and
xchg
mov
ja
inc
jmp
dec
fldz
jne
xchg
stc
jge
retf
pop
xchg
dec
retf
xchg
ror
pushf
cmp
cmc
push
sub
lods
push
mov
daa
jg
push
cmps
jg
mov
push
frstor
retf
add
xor
xchg
pop
xor
out
pop
mov
test
enter
xchg
push
imul
cmp
in
xchg
or
ret
mov
push
bound
jne
mov
adc
xchg
es
enter
mov
xor
add
xchg
fimul
xchg
push
aaa
in
push
adc
inc
pushf
or
dec
mov
daa
xor
xchg
or
(bad)
iret
fadd
cmp
xchg
mov
add
jp
jge
movs
jne
into
gs
mov
dec
iret
mov
(bad)
xor
mov
inc
mov
or
arpl
pop
popa
or
loopne
fsubr
mov
adc
inc
add
nop
ins
pop
aam
lods
pop
daa
jecxz
dec
stc
mov
xchg
sub
adc
ins
jno
aad
nop
jp
sub
cmp
mov
call
mov
pop
add
aam
ins
xchg
cwde
add
or
jp
mov
push
gs
sahf
or
mov
push
data16
stos
imul
jne
aad
pop
jb
sub
(bad)
rcl
les
sub
cmps
or
popf
lock
cmps
es
mov
fisttp
aas
shrd
call
clc
xchg
jb
cmp
dec
lock
lea
aad
or
cmc
push
fsubr
mov
arpl
and
cmp
stc
aam
shl
jbe
xchg
fcomp
mov
daa
lahf
mov
into
div
into
xlat
inc
and
in
das
xor
push
sbb
in
pop
add
arpl
ins
mov
pop
mov
push
aam
or
sub
xchg
mov
(bad)
pop
inc
xchg
push
mov
test
sbb
jae
xchg
mov
xchg
neg
mov
outs
rcl
push
icebp
adc
add
call
ins
into
fs
mov
mov
lahf
out
shr
push
jmp
es
pop
movs
push
mov
mov
mov
scas
inc
outs
inc
test
pop
pop
dec
sbb
es
es
jp
xor
aas
push
and
inc
jo
inc
pop
(bad)
add
xchg
(bad)
push
aaa
jmp
ja
inc
fcom
mov
or
pop
sub
mov
mov
cmp
hlt
sti
push
rsm
mov
call
jnp
sbb
xchg
mov
push
jecxz
lods
push
mov
jmp
jmp
in
lods
out
and
mov
mov
jl
outs
or
lods
and
push
mov
xchg
dec
add
add
and
xchg
es
cmps
sub
ins
xor
sub
mov
pushf
cli
mov
add
call
cmp
icebp
movs
in
sub
sub
mov
cld
adc
fistp
test
sub
gs
adc
imul
gs
cmc
out
nop
dec
or
pop
push
adc
mov
push
out
(bad)
push
cmp
lods
jbe
adc
add
jmp
jns
lock
dec
lahf
aam
je
xchg
(bad)
out
push
aad
xor
jmp
or
sbb
pop
push
jg
mov
or
push
pop
push
push
retf
jg
push
mov
cmp
js
sub
xor
rcl
add
pusha
clc
inc
push
popf
sti
mov
popa
addr16
dec
cmp
push
es
jmp
call
arpl
pushf
inc
pop
sbb
(bad)
(bad)
adc
sbb
out
mov
fimul
xor
xchg
fwait
pop
jl
push
dec
sub
mov
enter
push
adc
ds
mov
clc
mov
stos
test
mov
push
xchg
adc
add
mov
mov
enter
lock
adc
loopne
cld
pop
jno
es
sbb
cs
jmp
cld
repnz
loopne
sbb
cmps
push
or
mov
shl
ins
push
xchg
mov
popa
out
cmp
mov
inc
mov
cli
sbb
leave
jmp
shl
jns
aaa
fadd
mov
out
aad
les
stos
and
retf
loope
mov
out
movs
mov
sbb
sti
mov
cmps
(bad)
popa
out
lds
xchg
cdq
das
push
scas
and
xchg
and
inc
mov
add
jb
jg
outs
inc
les
dec
mov
xlat
pop
sbb
je
fisttp
outs
scas
pop
mov
push
imul
mov
rol
sbb
pop
xchg
les
movs
xchg
add
push
jge
jecxz
pop
dec
js
je
push
mov
xor
mov
add
inc
shr
xchg
xchg
jmp
mov
mov
popa
lds
out
push
enter
clc
scas
mov
xchg
mov
shl
popf
(bad)
xchg
and
mov
call
xchg
xor
push
popf
shl
and
in
xchg
repnz
mov
inc
std
mov
and
add
and
add
xchg
mov
mov
pop
fcmovnb
or
cmp
imul
jg
push
adc
sub
lods
arpl
pop
mov
mov
sti
jl
sbb
pop
sbb
mov
jae
test
dec
lds
data16
pop
push
outs
bound
xchg
pop
adc
mov
push
out
push
mov
add
pop
pop
pop
into
movs
xchg
jmp
pop
adc
inc
push
ds
cmps
mov
add
cmp
addr16
stc
fisubr
xchg
xchg
cmp
inc
cmps
xor
adc
outs
lods
jp
mov
test
mov
add
adc
pop
sub
add
mov
xlat
adc
fs
hlt
push
cmps
hlt
mov
js
scas
fmul
xchg
bound
jle
mov
in
fistp
mov
mov
aaa
jmp
fisubr
mov
fld
xor
adc
sub
dec
je
iret
mov
inc
xor
cmp
pop
aas
push
popa
xchg
retf
xchg
jge
sub
es
xor
jne
jmp
int3
dec
add
lock
adc
xor
enter
out
imul
scas
cmp
xchg
push
mov
dec
(bad)
movs
xor
sahf
cmps
or
fisttp
pop
rol
mov
aaa
fidiv
mov
rol
xor
pop
xchg
cmp
(bad)
in
sbb
ror
fdivr
movs
imul
(bad)
ror
push
mov
hlt
mov
mov
cdq
sbb
iret
daa
and
jb
pop
stos
mov
shl
(bad)
push
idiv
inc
data16
mov
mov
retf
sbb
scas
out
sub
adc
or
xor
xchg
clc
fst
loope
pop
cmps
retf
adc
sti
xchg
xchg
cmp
adc
in
fsubr
pop
adc
data16
pop
aad
xchg
sub
shl
add
mov
push
mov
test
jbe
add
cmp
cld
add
lahf
fcom
jmp
dec
lahf
mov
test
sub
aad
adc
popf
dec
sbb
fidiv
pop
in
pop
sub
rcr
xchg
arpl
push
ds
sbb
aad
out
mov
mov
cmps
js
retf
or
or
mov
daa
aas
xchg
xlat
outs
ja
nop
cmp
(bad)
pop
xlat
fistp
rcl
cmp
inc
popf
aaa
dec
daa
mov
repz
aas
push
lahf
loop
and
call
mov
aas
xor
shr
repnz
lods
std
in
add
(bad)
aad
retf
mov
fucomip
test
pusha
jmp
mov
push
imul
out
ds
push
das
jnp
inc
cs
cmp
jo
cmp
nop
leave
or
add
in
ds
inc
jb
popf
inc
jge
xor
dec
out
mov
pop
and
inc
xchg
mov
push
out
call
mov
outs
(bad)
cmp
mov
inc
or
dec
popa
jmp
stos
jns
cmp
lods
mov
cmp
or
mov
push
sub
cdq
es
fisubr
pop
fcmovu
jge
hlt
arpl
stc
push
js
sub
mov
mov
jp
mov
es
pop
test
lea
jp
popa
and
cmp
popa
mov
sahf
cmp
dec
cmp
leave
cmp
out
imul
cmc
sub
out
pop
idiv
xor
push
cwde
and
pop
xor
dec
jg
outs
jbe
mov
(bad)
fist
ret
scas
jb
jmp
push
mov
jae
mov
pushf
add
bnd
arpl
add
jmp
inc
jp
lods
sbb
inc
in
adc
pop
ror
leave
xor
mov
adc
sti
mov
mov
mov
int
mov
cli
test
mov
sbb
in
mov
inc
jp
in
add
rcl
cwde
dec
jle
cdq
mov
push
cld
add
push
lods
int3
imul
or
inc
pop
pop
xor
in
adc
les
xchg
call
icebp
rol
dec
movs
jecxz
icebp
xlat
lock
aad
mov
iret
mov
xor
ins
cmp
mov
imul
push
arpl
fsubr
mov
xchg
bsf
push
outs
mov
(bad)
idiv
jmp
rol
in
mov
jno
cs
nop
in
aas
mov
shl
pusha
ins
xor
call
xor
retf
add
imul
or
adc
out
xchg
sbb
sar
mov
fnstcw
mov
call
mov
xchg
push
cld
xor
or
mov
pop
xchg
cmp
(bad)
xchg
cdq
dec
cmp
in
inc
lock
popa
rol
ins
inc
and
jae
sub
inc
sbb
and
iret
xchg
test
xor
mul
jmp
std
stos
aad
mov
add
or
adc
xor
sbb
dec
dec
test
and
int
(bad)
leave
and
mov
loopne
sub
out
icebp
cmp
out
imul
or
mov
xor
fs
dec
push
ss
inc
inc
dec
sub
call
jno
sbb
mov
ficom
pop
rol
rcl
jno
leave
out
js
pop
and
inc
aas
mov
push
xchg
sbb
imul
push
jge
lock
in
int
inc
jnp
mov
retf
jle
clc
cmps
inc
dec
ret
or
fisub
bound
pop
in
mov
or
aas
or
imul
sub
(bad)
xor
(bad)
inc
mov
cwde
xchg
ret
es
leave
or
je
enter
mov
test
pusha
pop
aam
mov
pop
repnz
test
mov
xchg
mov
xchg
retf
sti
add
in
sbb
pusha
out
dec
mov
and
and
cli
sub
add
inc
xor
out
xor
ja
mov
cmp
xchg
popf
pop
sub
or
cmp
dec
sub
jmp
jg
jb
sbb
mov
shl
xor
jbe
nop
loopne
inc
test
daa
pusha
sub
pop
pop
out
aas
or
int3
(bad)
push
int3
daa
pop
adc
out
ja
test
ins
jbe
push
jecxz
cmps
cmc
iret
(bad)
lods
jns
jl
xchg
mov
push
pop
jb
js
fbstp
push
in
pop
xchg
jecxz
ror
mov
mov
jae
or
adc
cmp
mov
push
popf
stc
es
pop
popf
sub
jae
retf
inc
enter
pop
pushf
mov
mov
test
xchg
imul
sbb
mov
mov
sub
add
pop
adc
fwait
cmp
ficomp
repz
or
sbb
or
or
int
rcl
mov
xor
int
jns
jg
test
mov
or
push
pop
imul
ret
mov
(bad)
xor
jbe
in
jo
mov
sahf
sub
jge
imul
mov
xchg
test
fst
out
add
sub
jno
clc
iret
icebp
pop
xor
jne
test
mov
sub
inc
push
call
xchg
ror
push
aaa
jecxz
es
pop
out
sbb
call
dec
or
dec
and
or
xchg
xchg
out
ins
pop
mov
mov
inc
and
jge
xor
or
fisttp
mov
(bad)
int
aam
and
jecxz
pop
jmp
(bad)
cmp
xchg
ret
and
nop
jecxz
fimul
cmp
push
inc
inc
add
and
mov
and
sub
fisubr
js
cmp
gs
xchg
shl
cmp
sahf
(bad)
dec
popf
cmp
lock
fsubp
int
cs
sbb
jmp
push
dec
outs
lods
cmp
mov
pop
not
fisubr
jp
popf
jecxz
ret
movs
lock
popa
(bad)
in
cmp
push
arpl
ds
adc
fsubr
mov
ret
push
das
inc
ret
cmp
fcom
ror
jmp
sub
shr
std
inc
daa
test
retf
sbb
test
test
mov
or
cdq
std
dec
jecxz
mov
sahf
jbe
out
test
aaa
hlt
cmp
adc
data16
jb
ror
ret
stos
pop
xor
and
in
sti
addr16
mov
dec
in
mov
adc
sbb
out
(bad)
cmp
(bad)
jno
dec
pusha
sub
cld
cmps
in
(bad)
dec
loope
fsubr
mov
pop
popa
(bad)
shr
xchg
pop
sub
jle
out
jo
mov
pop
sbb
ins
repnz
jbe
sbb
aas
add
mov
xlat
leave
clc
push
sub
call
dec
sub
pushf
push
(bad)
dec
push
scas
clc
adc
add
and
std
dec
cwde
(bad)
xchg
xlat
(bad)
xor
nop
pop
ss
in
in
test
mov
inc
pop
mov
push
xchg
ja
or
in
mov
int3
scas
adc
add
popa
pop
ror
imul
mov
repz
test
add
cmp
addr16
mov
icebp
fild
cmp
push
xor
mov
jno
jecxz
mov
js
ret
mov
push
push
sar
mov
leave
fmul
xor
pop
pushf
sbb
out
pop
cmps
aad
fmul
cmp
adc
popa
fwait
or
push
rcr
mov
add
(bad)
pop
into
sub
into
loope
push
dec
adc
add
add
xchg
sbb
nop
iret
mov
leave
mov
xchg
push
jae
pop
push
mov
cmc
xchg
imul
adc
xlat
pushf
add
out
iret
fisttp
dec
(bad)
cwde
ror
add
or
sbb
imul
sti
fs
mov
or
jo
pop
mov
ins
test
les
ret
or
sbb
xchg
mov
push
int3
inc
inc
out
aam
leave
jle
xchg
mov
mov
fucomip
ja
adc
out
inc
ror
mov
das
xlat
std
add
inc
mov
xchg
popf
pop
loop
pop
enter
or
pop
std
das
cmp
dec
add
xlat
cmp
or
sti
pushf
das
fstp
xchg
or
test
fist
or
pop
imul
pop
jbe
push
or
outs
add
push
ds
adc
lods
cli
cmp
call
out
fcom
fstp
mov
jns
mov
jp
push
pop
mov
repz
fidiv
into
popf
mov
(bad)
push
mov
loope
dec
jmp
pop
sbb
xchg
clc
(bad)
xchg
xchg
pop
jns
mov
or
push
int
hlt
xor
ror
add
cmps
xlat
(bad)
mov
and
sub
ret
dec
adc
xor
mov
mov
mov
push
test
cld
pop
pushf
fsubr
mov
aaa
push
inc
cmp
in
pop
gs
fistp
pop
mul
(bad)
pop
xor
add
push
rcr
arpl
lahf
xor
loope
xlat
inc
hlt
xchg
cmp
mov
cmps
aaa
(bad)
sahf
inc
pop
repz
or
jmp
cs
mov
cld
shl
pop
shl
test
xor
mov
retf
lea
or
add
jg
inc
aaa
pop
xchg
push
je
xchg
mov
mov
jmp
and
sbb
stos
mov
and
out
fcom
adc
movs
sub
in
mov
es
sbb
fwait
xchg
jl
outs
ret
mov
(bad)
xchg
or
repz
ret
in
popf
pushf
or
ins
nop
mul
jb
mov
paddd
push
call
inc
lea
jecxz
xchg
jmp
jns
lahf
adc
xchg
mov
cmp
pop
in
sbb
add
das
les
retf
or
fdivr
ror
les
sub
or
pushf
add
add
jo
stos
mov
sar
mov
(bad)
ficom
scas
inc
and
mov
push
mov
xor
ds
sub
sbb
test
xor
xchg
bound
dec
xor
frstor
stc
jle
popf
scas
mov
mov
test
mov
sbb
int3
cmp
mov
or
test
js
push
out
icebp
(bad)
leave
cdq
call
or
jg
push
push
jmp
cmp
imul
mov
pop
or
sub
enter
cmc
scas
fmul
shr
(bad)
rol
sbb
push
pop
jne
scas
out
shr
push
push
ins
ins
cmp
xlat
xor
std
(bad)
sbb
pop
stos
scas
xchg
sub
loopne
mov
push
pop
push
xchg
push
jo
xor
lock
xor
in
cmp
mov
sub
cmp
mov
jae
adc
push
add
pop
pop
xchg
sti
xor
aad
jge
out
out
push
mov
sbb
test
mov
pusha
rol
mov
lods
cmp
xchg
sub
loopne
xchg
test
sbb
jecxz
jmp
cmp
ret
mov
xchg
repz
dec
shl
loop
jmp
arpl
fs
cli
adc
adc
fisub
jnp
sub
test
imul
mov
inc
mov
daa
push
mov
push
mov
mov
test
popa
dec
xchg
adc
pop
(bad)
mov
arpl
jae
stos
ds
jnp
adc
xchg
pop
ins
xchg
ja
xchg
jae
addr16
fstp
dec
push
jo
push
in
psubw
cmp
aas
(bad)
push
and
inc
inc
out
add
leave
push
xchg
les
lods
stc
cs
test
jns
jmp
cld
mov
into
stos
pop
cmp
or
jbe
movs
clc
xlat
mov
sar
jg
jle
mov
mov
adc
jl
xor
lock
xchg
ret
cmp
stos
adc
stos
mov
and
cmps
dec
icebp
or
push
bound
hlt
cmp
mov
call
or
ret
ds
das
pop
int
test
aaa
repnz
leave
jmp
push
aam
(bad)
sbb
jmp
sbb
cmp
arpl
and
in
sub
lock
cmc
imul
add
push
int
mov
xor
sbb
test
mov
xor
jle
fist
arpl
fstp
add
ret
jnp
mov
lds
mov
push
rcr
push
mov
or
ja
sti
mov
dec
cmp
xchg
lods
xchg
mov
dec
mov
or
fidiv
and
mov
out
jmp
fcomp
xchg
push
or
and
mov
push
adc
into
mov
xchg
inc
or
jne
div
mov
ins
inc
xchg
stos
test
and
pop
adc
inc
lods
adc
mul
adc
jge
lea
(bad)
sub
dec
outs
add
cwde
fdivr
or
mov
dec
push
in
dec
sbb
imul
cmp
sti
push
and
lods
inc
fidiv
pop
shl
sub
loop
(bad)
push
aam
mov
mov
cmp
ror
cmp
sub
icebp
push
cmp
mov
mov
adc
add
cdq
cmp
mov
enter
in
xor
cwde
retf
push
neg
repz
cmp
sub
arpl
aam
or
add
inc
cdq
pusha
cmp
in
sahf
push
dec
mov
cmp
(bad)
loopne
neg
inc
mov
popf
push
dec
xor
pop
int3
movs
mov
test
jl
xchg
inc
jmp
shr
fwait
int3
jmp
adc
sub
pop
(bad)
fnstenv
lods
movs
push
adc
sub
sbb
out
retf
stos
cmp
dec
sbb
ja
dec
(bad)
add
clc
repz
inc
cmps
ret
and
pop
rcr
mov
mov
mov
(bad)
pusha
cli
adc
push
fwait
jno
in
enter
cmc
xchg
mov
clc
sti
add
xchg
sbb
imul
outs
fldcw
call
push
out
pop
cli
pop
int
jle
cmp
push
std
retf
pop
pop
ins
hlt
or
pushf
xchg
dec
pop
pop
(bad)
xchg
pushf
es
into
loope
retf
xchg
mov
inc
push
inc
dec
popf
push
xchg
fld
mov
mov
add
push
popa
mov
cmps
mov
in
or
fs
pusha
sbb
mov
int
cmp
and
and
mov
mov
xor
jbe
repnz
pushf
mov
mov
dec
out
scas
push
inc
outs
in
or
and
retf
mov
push
xor
imul
jg
leave
retf
addr16
and
or
rol
adc
jge
or
jo
add
popa
adc
push
out
mov
jl
mov
loop
ret
xchg
sahf
(bad)
stc
ins
dec
call
js
das
(bad)
not
pop
push
xor
mov
pop
das
ror
inc
fist
pop
and
test
ds
pop
adc
and
test
jmp
in
mov
pop
into
jo
and
mov
outs
je
lahf
jmp
(bad)
jmp
mov
addr16
jge
addr16
repnz
repnz
aam
ins
out
dec
jge
sar
repnz
sub
iret
rcr
lds
pop
lods
(bad)
scas
jmp
dec
mov
addr16
arpl
sar
sub
(bad)
sar
es
mov
mov
dec
add
or
push
fstp
mov
enter
lods
out
cmp
ret
mov
daa
inc
jae
cs
shl
and
adc
xorps
mov
inc
dec
imul
cmp
shl
xor
imul
ins
lds
mov
(bad)
dec
or
cmps
mov
mov
sbb
inc
scas
aas
fist
test
aas
push
add
es
mov
lock
or
(bad)
xor
inc
cmp
jb
fdiv
mov
xchg
pop
xchg
mov
mov
rol
outs
iret
xchg
sahf
xor
leave
mov
push
sbb
cmps
sub
retf
sub
xchg
xor
or
enter
mov
pop
cld
aaa
mov
lods
call
ret
aam
cmp
xchg
and
pop
fldcw
xchg
add
dec
push
add
jg
mov
cdq
je
xor
shr
loope
sub
and
les
popf
frstor
popa
je
cmp
cs
jmp
sub
xor
dec
push
stos
dec
mov
lea
or
lahf
sbb
pop
sbb
sub
and
loop
jmp
aas
jg
fs
fstp
call
loop
xor
int
xchg
push
fstp
je
aad
adc
jns
sub
mov
in
dec
cwde
push
dec
test
cdq
inc
dec
jae
mov
mov
inc
(bad)
sti
out
add
dec
jae
(bad)
mov
iret
add
fisub
jnp
jge
push
std
jno
mov
mov
cmp
pusha
lds
push
xor
js
test
fistp
daa
sub
in
shl
add
jg
pop
(bad)
leave
or
scas
call
fldcw
popf
mov
mov
sub
xchg
push
fidiv
add
jb
mov
inc
xchg
push
pop
stc
cdq
mov
push
xchg
mov
push
sahf
cmp
es
xchg
bound
outs
cmp
in
mov
mov
lds
test
add
jns
outs
pop
ins
jbe
dec
pop
bound
scas
jns
aas
(bad)
lea
xor
lock
jne
lods
icebp
ins
(bad)
jl
xor
and
std
imul
loope
repz
pop
adc
stc
call
shl
ins
adc
lock
arpl
test
mov
push
enter
mov
xchg
or
jb
pop
mov
or
cmps
out
jle
sbb
movs
xor
mov
sub
push
lds
int3
dec
inc
add
test
add
enter
cmps
adc
pop
test
or
adc
mov
les
ins
fwait
rol
xchg
ret
xor
add
xor
retf
arpl
pop
and
cmp
es
add
cmps
rcl
and
(bad)
stos
dec
aad
ja
sbb
sbb
xchg
fs
cmp
in
in
arpl
mov
xor
not
jmp
into
bound
scas
leave
cmp
out
scas
cld
xor
fldcw
and
xor
push
or
xchg
push
ins
outs
mov
dec
setbe
stc
imul
fimul
imul
jb
scas
cmp
xor
ss
call
adc
pop
cld
leave
sti
sbb
push
repnz
movs
cmp
sub
sti
les
js
cmp
jbe
(bad)
call
jmp
shr
mov
sub
add
push
scas
ds
or
jb
test
dec
push
push
cli
divps
jle
pushf
adc
sti
rcr
add
push
inc
mov
push
mov
cmp
adc
adc
xor
cmp
and
call
xchg
sub
pop
and
pop
sbb
sahf
pop
push
dec
add
xor
and
xchg
dec
ret
push
mov
push
xor
sbb
icebp
in
in
push
mov
(bad)
push
fild
in
xor
aad
mov
ja
pop
xchg
loop
mov
xor
jbe
lods
(bad)
push
test
mov
fst
cmp
mov
movs
ins
popa
cmps
sbb
lds
inc
mov
sahf
out
xchg
leave
imul
mov
cwde
test
pop
mov
ja
shr
ins
rcr
dec
leave
call
xchg
retf
or
or
push
daa
mov
xchg
nop
pop
outs
xchg
test
pop
add
aad
cwde
add
in
mov
or
enter
dec
scas
sbb
xlat
jmp
jne
pop
and
imul
ret
or
and
fdiv
fstp
push
out
aam
imul
test
hlt
out
xchg
mov
loopne
ins
(bad)
out
push
sbb
jge
mov
push
cmp
jb
daa
fucomp
dec
repnz
dec
pop
test
popa
mov
enter
adc
and
mov
xlat
push
mov
or
sub
dec
push
push
xchg
add
lods
mov
call
mov
xchg
imul
sbb
js
rol
sub
icebp
add
push
xor
sar
push
daa
mov
jecxz
outs
push
inc
stos
mov
adc
jno
or
cli
test
es
mov
lock
and
pop
das
call
mov
inc
imul
fwait
jns
jle
xchg
gs
and
(bad)
adc
iret
fcmovbe
cmp
mov
sub
test
lahf
mov
jecxz
push
push
or
out
out
rol
in
xlat
mov
aad
ss
xor
mov
jne
push
(bad)
sbb
pop
mov
xchg
xchg
mov
mov
adc
adc
or
(bad)
mov
js
or
repz
cwde
stos
loop
push
outs
aas
cmp
or
outs
repz
inc
jae
mov
das
add
out
in
and
retf
jl
lods
xlat
ins
mov
mov
jl
repz
pop
ds
sbb
or
lods
add
out
adc
push
stos
fcomp
jmp
push
(bad)
(bad)
fsubr
ins
hlt
xor
push
inc
nop
fcmove
enter
retf
sub
jne
push
std
dec
mov
cli
push
rcr
movs
add
mov
push
popf
neg
pop
sub
cmp
rol
retf
pavgb
mov
mov
int
push
ss
cmp
je
fcmovu
(bad)
cmps
rol
shl
daa
and
lea
jno
cdq
xor
fwait
pushf
xchg
fwait
jle
inc
mov
aam
popa
in
sub
cmp
xlat
call
pop
mov
(bad)
int3
and
and
in
jp
sbb
(bad)
ja
xchg
out
(bad)
cmp
int3
adc
mov
js
out
je
iret
fs
mov
stos
ss
pop
jp
mov
cld
push
add
mov
in
dec
into
ud2
mov
push
jl
sbb
es
mov
xor
jae
cmps
push
xlat
ret
data16
je
sub
pop
in
dec
cmp
mov
(bad)
into
mov
dec
fistp
push
pop
and
sub
add
iret
mov
pop
aas
xor
sub
jge
inc
or
pop
xchg
popa
sbb
(bad)
(bad)
(bad)
test
pop
and
push
movs
loopne
rcl
inc
movs
(bad)
leave
outs
in
mov
daa
mov
rcr
mov
sbb
xchg
fmulp
jnp
ins
pop
and
and
push
rcl
fidivr
xor
cmp
dec
or
sub
jmp
(bad)
mov
scas
mov
fst
dec
call
cmp
test
push
mov
sbb
arpl
lods
xor
(bad)
stos
movs
xchg
fwait
ret
sbb
in
sub
int
ds
push
lods
not
sar
or
call
pop
stos
push
cmp
ret
and
add
xchg
cwde
inc
mov
jmp
in
add
ret
dec
retf
pcmpgtw
test
les
jne
pop
and
sbb
xor
and
(bad)
sar
mov
lds
repz
adc
lahf
adc
push
jge
out
jmp
div
aas
fs
rcl
push
sbb
out
mov
pop
sbb
mov
or
imul
ret
ficom
xchg
xchg
ret
and
pop
retf
movs
jl
push
in
cmp
push
es
cmp
movs
loop
outs
adc
mov
nop
xchg
and
xchg
lds
push
cmp
mov
(bad)
fisubr
xlat
rcl
and
inc
or
shr
inc
xchg
imul
test
push
movs
pop
dec
pop
or
je
inc
add
cmp
lahf
ror
mov
and
and
(bad)
pusha
xor
hlt
push
inc
dec
mov
xlat
jnp
or
dec
cmp
dec
mov
and
add
add
vmovdqu
int3
push
in
or
(bad)
sub
add
fiadd
dec
loopne
aas
sbb
mov
fsub
dec
in
mov
jmp
mov
jg
jo
mov
int3
xchg
not
push
xlat
xchg
lods
in
aad
pop
lods
shl
cmp
push
test
mov
push
add
sbb
fidivr
dec
push
and
fsub
or
push
enter
ja
ins
pop
dec
pop
adc
jp
pop
pop
and
fs
int
lahf
mov
adc
jmp
mov
mov
fadd
hlt
fstp
(bad)
fld
mov
xchg
xor
or
add
sti
sti
inc
(bad)
cmc
into
shl
dec
pop
add
fs
xchg
mov
shl
jbe
inc
xor
adc
xor
push
mov
xchg
mov
add
mov
cmps
pop
xchg
movs
sub
mov
enter
mov
xchg
test
pop
aaa
scas
cmp
mov
add
dec
cdq
jb
push
jo
adc
jns
push
dec
pop
loopne
mov
add
add
inc
sbb
jns
jge
cdq
out
or
jmp
mov
call
or
and
cmp
push
aam
add
mov
mov
movs
add
adc
xchg
into
mov
cwde
push
inc
clc
je
cmc
and
adc
fisub
test
inc
mov
push
cmp
mov
cli
xchg
int
push
push
add
(bad)
jg
cmc
sub
test
int
aad
sub
cdq
jns
xchg
mov
dec
and
out
cmp
jge
jae
pop
push
mov
and
cmp
jmp
es
mov
mov
cdq
mov
test
and
sub
fiadd
mov
mov
inc
push
dec
movs
push
leave
lock
in
dec
xor
mov
ds
cmp
mov
add
in
dec
dec
xchg
push
cmp
jg
dec
xlat
icebp
mov
dec
sub
adc
mov
arpl
ins
repnz
adc
retf
adc
mov
out
sbb
xor
ins
mov
bound
xchg
mov
scas
arpl
retf
cmp
xor
inc
js
mov
dec
jo
sub
aaa
mov
test
xor
add
inc
xchg
fsubp
fs
push
dec
push
loopne
xchg
imul
pop
fs
dec
mov
mov
in
ins
mov
inc
pushf
loop
jp
sbb
or
loop
mov
cmp
fistp
xchg
(bad)
cmp
pop
xchg
in
jl
out
add
movs
mov
mov
aad
lds
test
test
rcr
fiadd
add
fbstp
add
pusha
fmul
inc
mov
(bad)
cli
hlt
push
movs
rcl
mov
ins
int3
leave
idiv
aad
out
into
jne
fiadd
cmp
ret
add
xor
xor
rcr
out
lea
cmp
movs
inc
or
jmp
jnp
pop
jge
dec
retf
out
sti
mov
bound
sub
xor
sbb
pop
in
stos
out
stc
in
mov
push
push
sar
sbb
out
add
es
stos
out
mov
add
mov
and
inc
mov
mov
fimul
xchg
mov
loopne
retf
jecxz
cmp
outs
cmps
(bad)
jae
xchg
jmp
ja
test
xor
push
jbe
retf
dec
push
dec
das
shl
jge
sbb
dec
xlat
mov
cmc
leave
or
or
jmp
pushf
mov
(bad)
sar
or
imul
adc
pop
xchg
cmps
nop
pusha
sub
inc
aaa
xor
fidiv
fsubr
dec
dec
pxor
ucomiss
cmp
jno
rol
and
nop
cmp
pop
fsubr
test
jnp
push
(bad)
rol
sahf
enter
mov
into
xor
pop
or
jnp
or
sbb
(bad)
jmp
xchg
mov
and
cmp
jne
sbb
pop
pop
test
call
dec
test
ss
cmp
mov
shr
adc
retf
push
mov
dec
in
sub
lods
pop
push
mov
xlat
push
pop
mov
cmp
inc
pop
pop
scas
pop
adc
std
cmp
jmp
sbb
outs
cli
mov
xchg
add
mov
cmps
cld
mov
xor
mov
call
imul
xor
pop
add
sbb
add
or
enter
xchg
sub
pusha
or
(bad)
repz
out
or
aaa
mov
daa
hlt
or
jle
xchg
jp
and
push
js
mov
xor
lock
cmp
inc
hlt
mov
xor
inc
fnstsw
jae
mov
jmp
fsub
jecxz
nop
add
xchg
add
lods
stc
adc
lods
cmp
mov
gs
jmp
mov
pop
imul
aas
pop
jg
mov
inc
cmp
rcr
cld
xchg
or
nop
cli
inc
push
(bad)
(bad)
pop
js
sub
jecxz
cs
mov
xchg
loope
ins
aas
in
inc
(bad)
leave
movs
mov
or
pop
xor
out
pusha
inc
fcmovbe
xor
sbb
push
std
xor
aas
stos
add
test
arpl
dec
popa
add
mov
mov
jl
add
add
popf
or
push
jbe
jo
mov
imul
mov
push
ror
xchg
sbb
lea
xchg
inc
inc
imul
pusha
ja
lock
push
ret
loopne
in
push
loopne
call
inc
add
xor
inc
mov
pop
pop
dec
ins
shr
dec
mov
or
xor
loope
into
ja
test
in
add
jns
inc
xlat
cmps
aad
pop
push
mov
jle
mov
scas
mov
adc
idiv
mul
inc
leave
outs
mov
add
sub
movs
stos
ret
out
mov
mov
jge
jnp
imul
xor
pop
sbb
mov
stc
loope
xor
jmp
js
dec
sub
hlt
cmp
or
fcom
fiadd
or
sbb
push
jl
or
test
xchg
in
loopne
cmp
imul
pop
lods
mov
imul
popa
xchg
repnz
stc
jnp
push
dec
push
mov
in
leave
jbe
fisub
adc
mov
aaa
loopne
les
xchg
aaa
ds
or
loope
sbb
mov
push
mov
mov
xchg
clc
retf
xchg
mov
xchg
out
jecxz
jb
push
dec
inc
push
mov
mov
sbb
dec
mov
aad
jmp
cmp
add
xor
das
push
loopne
pusha
adc
outs
mov
pop
and
sbb
dec
(bad)
sbb
jno
aas
sbb
dec
cs
outs
retf
or
dec
ret
nop
stc
mov
and
retf
pop
lds
push
cwde
imul
mov
lock
not
outs
mov
cmp
pop
mov
add
mov
adc
mov
pop
dec
or
cmp
les
scas
mov
retf
cli
retf
xor
and
call
dec
test
fild
pop
lds
xchg
jg
or
mov
mov
or
ss
dec
arpl
in
cdq
pop
out
lds
adc
les
mov
retf
inc
push
dec
lods
lods
mov
push
adc
out
push
cdq
out
sti
sbb
mov
into
int3
xor
out
sbb
sbb
loopne
je
stc
pusha
mov
fnsave
fstp
gs
sub
test
arpl
xchg
dec
inc
(bad)
data16
idiv
test
ds
dec
(bad)
fld
xchg
fiadd
cli
stos
mov
ja
mov
(bad)
lea
mov
bound
mov
push
add
inc
xor
and
iret
add
add
mov
and
aas
fwait
inc
in
sti
mov
mov
std
data16
(bad)
shr
pop
sar
(bad)
stos
into
lds
xor
mov
xor
iret
dec
ficom
jb
or
jmp
out
xor
xor
push
jmp
rcl
sub
pop
scas
sub
push
xchg
dec
add
fld
push
popa
js
jmp
pop
and
mov
xchg
dec
nop
imul
stos
push
mov
test
out
fld
outs
cmp
retf
add
and
jnp
dec
xor
jmp
dec
xor
sub
push
lea
icebp
aam
fbstp
and
test
leave
pop
mov
es
add
xor
mov
fisubr
mov
sub
(bad)
test
dec
cmp
or
arpl
xor
add
add
add
mov
mov
pop
cmc
(bad)
leave
mov
dec
jmp
cmc
xchg
sub
push
push
cmp
ins
loop
mov
jecxz
mov
int
ficomp
push
mov
pop
xor
dec
add
inc
or
xchg
mov
cmp
nop
xor
sbb
mov
mov
mov
addr16
xchg
xchg
xchg
icebp
ds
ret
mov
imul
fcmovbe
xor
push
pop
pop
(bad)
out
sbb
sahf
add
inc
call
rol
test
add
add
retf
jnp
ficom
add
out
xor
fsub
aaa
in
inc
mov
nop
cmps
push
xlat
fwait
test
inc
mov
pusha
jl
sub
int
das
xchg
adc
or
adc
mov
out
adc
repz
add
pop
and
sbb
popa
fdivp
xor
inc
pop
mov
mov
clc
test
scas
daa
and
or
retf
(bad)
sahf
push
ins
push
pop
(bad)
push
xchg
aas
shr
add
outs
cmp
cmp
push
xor
std
cwde
sbb
push
push
xor
push
test
cmp
mov
enter
outs
rol
mov
fnstenv
sub
fwait
sub
inc
inc
aas
fdiv
movd
outs
sub
imul
lea
xchg
cmp
in
std
lahf
xchg
push
ret
and
mov
call
xchg
shl
mov
add
inc
ins
push
or
sbb
daa
xchg
mov
pop
mov
inc
ror
pop
test
jo
ret
mov
pop
push
ja
jge
jo
xor
aad
test
xor
sbb
sub
(bad)
sub
js
mov
cmp
std
ror
adc
bound
xchg
adc
mov
sub
stos
pusha
jae
push
pop
xor
mov
xchg
push
xor
into
jmp
push
and
ds
push
sub
inc
pop
stc
aas
adc
cmp
out
pop
xor
push
in
aas
dec
sbb
adc
push
(bad)
pop
or
sub
dec
inc
lods
and
pop
loope
ds
pop
add
ss
xchg
mov
push
xchg
aaa
jno
adc
jne
fistp
stc
pop
xor
sbb
out
loopne
mov
mov
frstor
into
inc
xor
mov
and
jg
inc
popf
test
icebp
and
addr16
or
jae
pop
push
mov
imul
xor
or
mov
adc
mov
fnstsw
cmp
dec
sub
lds
jecxz
jbe
push
or
mov
xlat
push
cmp
xor
mov
mov
push
pushf
retf
cmc
pop
or
sti
in
call
dec
cmp
sub
jmp
retf
cmp
cmp
out
or
jae
add
stos
loopne
sub
dec
cli
xor
in
sub
bound
jl
arpl
pop
push
dec
xlat
enter
push
jno
inc
inc
fimul
(bad)
cmp
gs
dec
pop
gs
push
addr16
sub
xor
leave
div
push
xchg
push
xor
into
adc
sahf
in
push
mov
movs
xor
push
fisub
xchg
scas
inc
jp
jbe
mov
fwait
dec
movs
xor
jns
jmp
or
stc
pop
push
add
fwait
xchg
outs
or
cmp
sbb
retf
cmp
jno
(bad)
mov
cs
jmp
and
add
(bad)
(bad)
dec
mov
sub
xchg
add
mov
adc
cs
mov
inc
push
inc
fidivr
clc
clc
(bad)
(bad)
popf
in
mov
rcl
loopne
in
je
sub
arpl
scas
jns
pop
nop
in
es
loopne
sub
dec
fst
lods
pop
xor
int3
cmp
dec
gs
add
adc
sahf
(bad)
pop
std
jge
push
xchg
add
repnz
mov
fcmovne
(bad)
mov
rol
fsub
shl
sbb
adc
cs
adc
mov
in
test
mov
lahf
cmp
pop
push
sbb
test
ror
(bad)
imul
inc
not
cdq
aas
mov
data16
sbb
push
and
aas
xchg
pop
pop
(bad)
call
and
das
(bad)
xor
or
jecxz
and
leave
js
pop
icebp
xchg
mov
lsl
xor
ret
push
inc
iret
outs
mov
or
sub
push
xor
cli
xchg
mov
jns
clc
mov
pop
sub
lds
or
ins
retf
arpl
cmp
adc
jp
fist
loope
rcr
add
out
(bad)
jle
pop
mov
push
add
loopne
cmps
movs
in
pop
lock
sahf
clc
push
mov
adc
cmp
stos
push
mov
test
enter
dec
pop
mov
mov
and
adc
ret
retf
xor
xchg
and
lods
jg
xlat
sbb
dec
sub
mov
xchg
mov
std
pusha
jg
mov
push
fcmovne
idiv
xor
inc
mov
int
mov
(bad)
rcr
imul
pushf
(bad)
call
rcr
(bad)
xchg
test
mov
ror
fisubr
pop
addr16
sub
loope
mov
iret
and
into
pminsw
clc
jne
xor
pop
push
and
push
outs
cmp
add
xor
cmp
sbb
add
sahf
add
lods
xor
sbb
mov
enter
dec
and
sbb
mov
scas
xchg
add
mov
xor
jge
mov
scas
stos
gs
sub
mov
mov
cmp
imul
call
cmp
ds
mov
xchg
mov
cmp
out
in
cmc
mov
or
int3
cs
mov
rcl
lock
fimul
fidivr
push
adc
imul
pop
stos
inc
sahf
pop
and
xchg
inc
mov
sub
test
test
stos
add
jae
push
les
mov
js
xchg
rcl
adc
ins
pop
aad
adc
fwait
popa
and
rcl
or
push
and
out
xchg
(bad)
ins
adc
add
xchg
jb
pop
sbb
std
jp
mov
push
inc
pop
nop
iret
(bad)
jge
push
mov
scas
aaa
(bad)
sub
push
and
mov
popf
xor
adc
push
scas
clc
js
ss
xor
add
or
cmp
mov
cmp
inc
lds
mov
ja
loop
push
xor
test
bound
jmp
xor
sub
and
retf
repnz
lea
xchg
int
test
inc
xchg
scas
out
push
repnz
inc
lock
cmps
les
sub
push
push
repnz
xchg
add
dec
cmps
or
jmp
xchg
cmc
ja
or
dec
pusha
add
xor
aam
movs
dec
out
xchg
push
lea
cli
sub
rcl
mov
call
jmp
cmps
pop
rcr
fwait
push
inc
fiadd
(bad)
(bad)
mov
fs
inc
or
es
sbb
sub
mov
push
xor
jecxz
pop
ja
jb
mov
jbe
(bad)
jle
lds
jecxz
mov
xlat
enter
pop
mov
xor
mov
fmul
xchg
bound
and
std
addr16
and
inc
mov
sbb
popf
clc
hlt
ja
stos
inc
cmp
dec
test
push
rcl
or
(bad)
popa
mov
es
mov
sbb
jae
push
(bad)
jg
adc
xchg
in
jl
mov
mov
jecxz
adc
cmc
movs
pop
cmc
mov
mov
int
movs
mov
fstp
adc
ret
pop
pop
sti
std
xchg
jge
xchg
lds
cmps
popa
jecxz
scas
(bad)
inc
pusha
inc
pop
pusha
xchg
fiadd
inc
sub
popa
cdq
adc
and
xlat
js
sub
cmc
add
shr
cli
xchg
mov
push
add
sar
fadd
jne
dec
in
sub
jnp
sub
dec
in
cmps
and
ret
sbb
fimul
aas
xor
scas
add
sar
jp
out
rol
xor
or
push
jmp
jl
mov
or
inc
adc
(bad)
jl
pushf
out
mov
sub
fwait
dec
call
ss
xor
enter
mov
dec
je
xor
int3
jge
push
call
dec
loop
aad
fst
pop
push
sbb
sub
fs
std
call
sub
xor
arpl
sbb
fsub
jmp
mov
dec
inc
push
sub
clc
cmp
in
jb
dec
mov
push
repnz
imul
cmp
jmp
test
loop
mov
cmp
fild
pusha
popa
leave
push
retf
mov
out
and
pop
inc
sbb
and
sub
xor
sub
rcr
mov
sbb
cdq
sbb
call
add
in
loope
retf
push
xor
push
push
rcl
pop
lods
rcl
cmp
imul
mov
fcmovu
pop
mov
adc
pop
lock
fimul
sahf
ficom
ins
push
cmps
(bad)
or
jl
sub
xor
lock
mov
iret
push
and
int
pop
push
jb
inc
xchg
mov
and
push
add
xchg
xchg
mov
fcmovnb
mov
(bad)
mov
push
jmp
aam
lahf
idiv
jo
mov
lock
(bad)
mov
inc
lahf
add
dec
fwait
push
outs
rol
push
push
rol
imul
pop
stc
mov
sar
std
aaa
fimul
push
cwde
sbb
sbb
adc
sbb
in
jge
imul
mov
add
jp
sahf
retf
data16
sub
sub
loop
xchg
push
sahf
xlat
inc
xchg
sahf
mov
mov
mov
push
ins
gs
add
scas
cwde
jg
(bad)
or
xchg
inc
sti
and
pop
add
mov
ret
scas
je
fmulp
cmps
cmps
push
pop
pop
jg
xlat
mov
sbb
pusha
cli
loopne
inc
and
fsub
retf
das
sti
(bad)
mov
fisubr
push
jmp
cmp
mov
dec
dec
and
in
sbb
push
pushf
fldcw
ins
pushf
lahf
xchg
cdq
outs
nop
sar
loop
outs
loope
push
pop
pop
jbe
adc
int3
icebp
es
in
mov
out
push
movs
ds
or
clc
pop
pop
xor
outs
aam
retf
jge
(bad)
pop
sub
xchg
cmp
pop
cwde
sbb
mov
push
push
cld
xor
repz
add
inc
out
sbb
mov
into
add
xor
shl
add
jmp
test
arpl
iret
sbb
clc
mov
jbe
(bad)
gs
xchg
lock
mov
jns
and
clc
add
or
sub
sbb
cmps
mov
xor
popa
dec
cmc
push
dec
out
push
call
sub
mov
adc
out
adc
cmps
add
add
pop
push
inc
sub
out
ja
nop
dec
adc
hlt
loopne
jae
and
pushw
leave
and
dec
cmp
jo
cli
mov
and
mov
(bad)
scas
mov
sar
bound
or
xor
lds
adc
cwde
nop
pop
aam
repz
idiv
arpl
push
and
fcmove
push
inc
and
adc
out
cld
ins
cmps
mov
mov
pop
js
xchg
sub
fisttp
les
mov
fld
repz
jge
mov
retf
and
scas
call
stos
movs
jae
daa
add
mov
cwde
pop
adc
aam
push
push
lods
sbb
into
mov
or
leave
stc
lds
pop
jmp
shl
jno
(bad)
xlat
mov
mov
mov
out
xchg
shl
adc
loop
ret
adc
dec
in
mov
push
gs
adc
in
call
mov
mov
retf
aam
pop
test
mov
les
cmc
jnp
cmp
lods
xor
xchg
mov
cmp
ins
leave
xchg
xor
push
fucomip
mov
cmps
in
std
xor
sahf
xchg
inc
mov
lahf
add
mov
cld
add
ror
xchg
shl
inc
adc
inc
sub
jle
in
pop
inc
scas
mov
(bad)
int
outs
pop
lea
adc
imul
inc
lds
mov
iret
xor
cmps
mov
not
add
shr
(bad)
xlat
and
xchg
test
cwde
mov
adc
mov
fcomp
mov
jbe
jnp
lods
mov
ins
push
(bad)
(bad)
aas
cli
in
mul
aad
aad
add
sbb
or
ficom
push
dec
fcomp
out
push
(bad)
mov
fisttp
outs
out
push
pop
mov
std
mov
push
sub
clc
scas
jge
mov
pop
nop
cdq
inc
imul
in
xor
sub
cmp
jmp
mov
mov
sbb
push
pushf
or
xlat
je
mov
cmp
mov
dec
cld
js
pop
loope
(bad)
outs
and
fild
iret
mov
push
ja
int3
icebp
pop
adc
(bad)
ds
(bad)
pop
fiadd
cmps
test
repz
mov
jmp
movs
(bad)
test
ret
out
into
and
test
ds
xchg
cmp
shr
mov
icebp
jo
aad
add
movs
clc
sbb
and
ins
shl
mov
icebp
mov
push
mov
lea
popa
sub
sahf
cmp
xchg
(bad)
loopne
imul
movs
jp
jnp
movs
xor
inc
cmps
mov
xchg
xor
mov
jle
adc
cmp
mov
dec
cmps
push
in
sbb
rol
xchg
add
retf
(bad)
int
js
out
sub
inc
fdivr
mov
sbb
lods
call
push
addr16
cmp
mov
pop
push
mov
movs
inc
rol
ds
out
push
pop
cmp
test
test
sub
mov
out
stos
bound
sbb
pop
and
in
into
cli
sahf
mov
add
add
les
daa
cdq
mov
push
outs
xchg
push
je
pushf
mov
sbb
pop
or
pop
xor
and
push
fs
sub
stos
jmp
add
sti
lock
fadd
mov
stc
push
repz
and
ins
js
pop
push
pop
dec
push
dec
retf
push
sbb
ins
xor
jo
xchg
and
push
dec
jg
sbb
inc
xchg
(bad)
or
pusha
bound
sub
and
fidivr
xchg
and
repz
clc
lahf
pop
mov
and
adc
rcr
sub
fnstenv
test
nop
fisub
xchg
call
out
sub
cmp
xchg
repnz
mov
das
xor
mov
xor
(bad)
push
push
or
iret
sub
push
fdiv
jmp
ret
jge
xchg
add
mov
call
fisttp
into
mov
sbb
aad
xchg
add
add
xchg
(bad)
adc
test
or
jb
push
clc
sub
jmp
lods
xlat
adc
inc
push
loope
push
adc
mov
jno
fsub
mov
and
or
jnp
inc
ja
sar
scas
or
fimul
clc
xchg
pop
sub
std
(bad)
cld
and
(bad)
clc
rcr
mov
or
pop
aas
inc
int3
or
cmps
call
gs
mov
mov
mov
call
cld
clc
rcr
cmps
je
adc
neg
ja
dec
cmps
inc
stos
add
sbb
pop
and
es
shl
lods
xor
mov
lea
mov
(bad)
out
adc
xchg
es
and
jbe
out
mov
push
aaa
sbb
cwde
or
lahf
xor
nop
aad
pop
call
fwait
sti
std
movs
pop
inc
jne
lea
mov
(bad)
fild
call
mov
xor
mov
add
test
(bad)
mov
jo
cli
imul
addr16
mov
sbb
test
fistp
ret
and
push
jg
push
fsubr
jmp
add
xor
push
dec
rcr
add
movs
xlat
push
pop
adc
mov
addr16
cwde
int
inc
iret
dec
cmp
imul
nop
into
jl
dec
popf
daa
and
and
adc
inc
sbb
cmovno
xchg
mov
add
add
xchg
cmp
pop
dec
lock
cmp
inc
out
pop
(bad)
bound
enter
imul
cld
cmps
pusha
repz
mov
xchg
or
mov
jbe
pop
lods
sbb
fmul
xchg
pusha
lds
mov
jne
aam
fs
sti
mov
cs
loop
xchg
test
xor
jmp
mov
cmp
dec
inc
mov
dec
(bad)
out
pop
loope
xor
cmps
(bad)
rcr
inc
jge
ss
mov
xchg
xlat
mov
add
mov
ja
cmps
xchg
fstp
mov
pop
pop
and
pop
dec
push
dec
mov
stc
push
loop
aaa
push
and
rcl
loop
push
add
sbb
add
sub
das
and
push
mov
inc
jmp
pop
popa
(bad)
loopne
idiv
dec
fdiv
sbb
shl
pop
bound
dec
and
mov
fld
rcr
(bad)
mov
dec
(bad)
mov
(bad)
shl
jne
dec
dec
hlt
cmp
retf
mov
call
(bad)
adc
sahf
xchg
aas
out
lods
in
cld
jo
sbb
fsubr
lds
mov
and
addr16
loop
pusha
fild
cmp
push
xor
dec
mov
push
call
xor
push
mov
dec
pop
popf
xor
pop
fcomp
cmp
scas
mov
aaa
xlat
aaa
cli
push
call
outs
and
jb
arpl
xchg
push
xchg
call
mov
or
fsub
(bad)
(bad)
xor
sbb
lock
ret
into
inc
add
aam
fnstsw
fisub
popa
jmp
out
mov
inc
in
or
adc
jle
lods
inc
dec
neg
push
sub
retf
ds
psrlw
es
(bad)
mov
fdivrp
imul
idiv
in
xlat
dec
pop
into
sub
cmp
push
sbb
cmps
jo
retf
js
shl
jp
mov
jmp
pop
test
mov
pop
dec
mov
sbb
call
cmp
or
xchg
mov
cld
dec
es
xchg
iret
xchg
push
imul
sub
add
push
push
in
cmp
imul
mov
ds
push
push
mov
mov
push
(bad)
clc
fucom
dec
sti
stos
inc
shr
mov
cmp
xor
pop
fsub
fstp
sbb
es
cmp
test
(bad)
dec
fisubr
movs
imul
popf
mov
ss
ficomp
mov
lods
push
dec
mov
fwait
idiv
push
call
sbb
push
mov
jnp
jbe
xor
jne
add
mov
cmp
adc
mov
push
xchg
rcr
cli
enter
mov
fild
pusha
push
leave
mov
xchg
cmps
mov
push
xchg
(bad)
adc
jle
repz
ds
mov
mov
dec
cmps
pop
test
aam
ss
pusha
cmps
and
shr
dec
add
je
mov
mov
popf
out
xor
in
mov
call
popf
sbb
push
movs
push
sbb
jecxz
pop
jno
int
pop
movs
jnp
sub
sub
mul
sub
jnp
jo
xchg
int
aas
sbb
cli
mov
mov
jg
mov
test
add
(bad)
(bad)
cmps
jb
fstp
sahf
(bad)
xor
xchg
rol
imul
push
add
loopne
sub
inc
addr16
iret
in
jb
pop
pop
ret
xchg
mov
push
jno
xor
addr16
jmp
fwait
mov
xchg
inc
rcr
xchg
cmp
or
lds
pop
cmp
lea
mov
aas
push
inc
add
and
repz
hlt
clc
and
ins
pop
ror
lods
xchg
mov
jg
daa
lods
pop
aaa
arpl
std
lock
test
into
jl
dec
pop
test
stos
shr
fst
cld
mov
sub
fiadd
add
stc
aas
(bad)
xchg
adc
mov
push
mov
fisubr
add
in
mov
push
ja
xchg
jmp
in
test
mov
imul
adc
cmp
fiadd
cmc
jecxz
mov
dec
scas
jbe
cmp
xor
or
call
fadd
std
adc
and
test
xor
cli
in
dec
xchg
pop
cmp
mov
cld
push
rcl
in
out
xor
loope
adc
xchg
or
cmp
das
ficomp
mov
(bad)
push
out
loopne
dec
or
mov
mov
movs
or
fcomp
ja
popf
popa
in
neg
mov
pop
mov
das
jne
mov
cs
or
jp
lock
jecxz
rcr
xchg
inc
and
rcl
loopne
and
aam
movs
jmp
or
pop
sub
imul
xchg
push
cmp
jnp
sub
hlt
mov
or
cmc
jmp
(bad)
pusha
push
and
sub
sub
stc
sbb
push
std
pop
mov
dec
mov
push
das
inc
xor
sahf
scas
out
add
mov
sub
mov
inc
lods
ret
jp
push
or
mov
scas
dec
fnstenv
mov
jmp
jmp
xor
jmp
sbb
loopne
sbb
dec
das
aas
mov
imul
dec
jne
xchg
or
iret
and
in
inc
add
inc
sbb
mov
jle
fsubr
scas
inc
fist
dec
xchg
sub
into
cld
daa
scas
ficom
cdq
outs
in
sbb
push
imul
xchg
cmc
stos
fadd
xchg
outs
cld
push
test
stos
ret
mov
sahf
ret
les
push
mov
cwde
cs
sar
jae
mov
dec
shr
pop
pop
xchg
mov
jb
inc
add
lds
cmp
in
sar
xor
cmp
out
add
jo
pop
jns
pop
pop
ins
scas
xchg
rcr
mov
sub
lock
mov
ja
xor
int3
add
and
add
adc
dec
je
shl
test
pushf
(bad)
gs
push
xchg
mov
movs
mov
push
inc
jg
jb
adc
call
sbb
rcl
icebp
cmp
sub
mov
add
adc
xor
push
fcomp
or
rol
cs
mov
pop
inc
adc
or
inc
mov
cmps
mov
cli
jecxz
clc
es
dec
sti
push
ret
xor
das
adc
call
push
inc
mov
push
pop
js
mov
mov
pushf
lods
mov
int3
pop
dec
mov
push
sbb
xor
and
cdq
mov
inc
push
mov
pop
mov
pop
xchg
and
mov
ins
movs
push
and
jecxz
push
add
sbb
jecxz
pop
add
xor
sub
inc
popa
cmp
out
push
cmp
or
pop
jmp
jns
fwait
sbb
aad
xchg
ret
div
mov
nop
test
pop
jg
push
test
js
out
jmp
ds
jae
int
(bad)
fstp
sar
out
xchg
xchg
pop
dec
xchg
jne
pop
int3
mov
push
jecxz
and
mov
mov
mov
rcl
outs
cld
repz
jb
popa
test
or
rol
pop
xchg
cmps
cmp
sbb
cmp
add
inc
jbe
and
cli
int3
add
jg
(bad)
cli
test
in
sub
test
lods
imul
ret
ja
add
mov
ins
hlt
push
xor
loop
xchg
xchg
popf
or
sub
adc
and
xchg
sub
mov
fcom
and
lds
push
loopne
sub
ds
test
mov
sti
addr16
inc
pop
loopne
js
sbb
loope
fisubr
jbe
mov
shr
mov
jne
mov
fld
jecxz
js
dec
rep
jbe
ins
(bad)
sbb
push
int
in
or
imul
fimul
cmp
enter
mov
sar
xor
repnz
lahf
xchg
lea
outs
imul
sbb
xor
fistp
rol
leave
fst
ror
clc
mov
cmc
mov
mov
xchg
fdiv
stc
and
xchg
lods
and
mov
es
xchg
push
xor
daa
call
aam
out
sub
dec
ja
pop
je
ins
dec
cmp
push
repnz
dec
je
fadd
out
inc
lods
retf
sbb
pop
movs
adc
push
sub
pop
daa
lea
mov
loopne
les
and
dec
cmps
or
add
mov
xchg
push
push
jp
lds
cmc
fistp
sub
and
push
and
pop
xchg
out
dec
fdiv
mov
pusha
and
les
popa
out
mov
xchg
cdq
stos
pop
pop
cmp
add
pop
pop
adc
retf
imul
pop
pop
(bad)
aaa
movs
mov
lahf
add
dec
loop
pop
dec
loop
jne
mov
sar
pop
inc
enter
push
push
pop
scas
loop
xchg
scas
jo
cmp
popf
xchg
call
fstp
je
test
int3
cmp
stc
stos
in
cmp
dec
shr
ins
retf
div
push
xchg
mov
jge
inc
sbb
fdiv
test
sub
xchg
pop
mov
inc
pop
cmp
or
(bad)
cmp
iret
xchg
pop
xor
and
cwde
push
mov
aaa
dec
sbb
int
aad
mov
fidivr
test
sar
sar
add
cdq
jl
nop
push
(bad)
pop
or
push
popa
sbb
fcmovnbe
ja
test
inc
add
push
jae
nop
cmp
mov
pop
mov
ja
inc
and
mov
fnstcw
and
mov
adc
cdq
out
xor
(bad)
jmp
icebp
rol
mov
call
mov
cmp
and
cmp
jle
xchg
rcr
jmp
pop
sbb
addr16
push
push
sbb
xchg
push
inc
push
dec
leave
stc
push
xchg
fwait
imul
pop
(bad)
call
fist
push
clc
es
push
pushf
retf
loopne
gs
dec
or
jae
xchg
lds
xchg
or
push
outs
jmp
pop
xor
push
jmp
xchg
push
dec
(bad)
or
add
mov
push
in
scas
cmps
pop
push
cmp
aad
xor
mov
clc
(bad)
lock
imul
jp
push
mov
icebp
sub
sub
sub
std
into
jg
add
(bad)
cdq
dec
pop
cmp
ja
dec
jb
aas
mov
aam
pop
add
cli
jl
pop
adc
icebp
jmp
push
or
int
push
mov
xchg
(bad)
ja
mov
push
and
mov
sbb
inc
fiadd
lods
or
inc
sub
leave
sbb
dec
inc
daa
shr
pop
(bad)
out
retf
mov
(bad)
jl
jmp
mov
pop
leave
add
pop
fimul
hlt
push
fld
push
(bad)
ret
push
xor
pop
dec
adc
push
or
jecxz
adc
rol
retf
push
jns
xor
clc
or
adc
and
sub
xor
leave
cmp
sub
gs
sub
(bad)
push
push
inc
adc
repnz
jo
aam
push
sahf
call
jmp
and
add
cmc
loope
mov
jae
loope
cmp
mov
cmp
xchg
aad
es
jmp
ror
jle
(bad)
pushf
shl
mov
mov
shl
out
pop
add
test
dec
mov
loope
mov
imul
sub
inc
cli
cmp
(bad)
aas
int3
cmp
pusha
push
jbe
out
rcr
rcr
sub
xor
mov
das
jmp
jp
push
sbb
jbe
jl
and
pop
pop
jbe
or
adc
cld
add
cs
cmps
test
(bad)
mov
mov
mov
and
dec
test
scas
jns
daa
mov
inc
fst
cld
mov
push
push
and
pop
nop
lds
push
push
jae
mov
dec
jne
gs
jp
jo
popf
sbb
dec
mov
cmp
cli
mov
lock
out
pop
ss
push
inc
xchg
shl
mov
ins
adc
push
push
sub
pop
test
dec
fisub
out
sbb
sub
fistp
mov
jae
push
sub
push
movs
(bad)
jno
cmc
nop
popa
popf
pop
out
and
xor
sub
add
sti
add
inc
adc
mov
or
mov
xchg
and
(bad)
cwde
jne
cmp
into
fnstenv
cdq
ret
jl
aas
xor
inc
inc
in
call
jecxz
sbb
outs
fisubr
shr
dec
adc
pop
adc
pushf
fdiv
sti
in
sub
jp
adc
or
dec
mov
xor
jecxz
push
inc
push
in
push
add
ffree
aaa
mov
dec
das
rcl
or
iret
cwde
or
stc
shufps
adc
cmp
outs
sbb
push
cmp
xchg
retf
iret
xor
adc
mov
scas
and
adc
movs
enter
stos
movs
iret
xor
dec
rol
nop
and
ret
push
leave
inc
aaa
sbb
popa
(bad)
int
pop
dec
cld
lods
neg
call
xchg
test
retf
push
pop
imul
cmp
cmp
inc
jnp
xchg
cmp
cmps
popf
or
xor
lea
adc
sbb
sub
mov
adc
in
jg
(bad)
(bad)
in
dec
out
lock
jecxz
sbb
pop
push
out
mov
pop
mov
mov
mov
loop
inc
jnp
mov
sahf
push
pop
pcmpgtb
es
call
mul
repnz
lock
push
mov
ins
cmp
repnz
ret
int3
inc
retf
dec
push
cmp
push
(bad)
stc
loope
mov
fs
and
jecxz
inc
mov
pop
ffreep
sub
les
mov
stc
arpl
xchg
(bad)
cwde
mov
(bad)
(bad)
in
sqrtps
or
push
in
mov
add
mov
sub
mov
push
push
jo
sub
std
pop
pop
jae
or
push
mov
inc
mov
arpl
jmp
icebp
dec
jae
mov
cmovg
imul
test
cdq
sub
xchg
xchg
push
jae
inc
shr
pop
add
xchg
xor
jp
(bad)
ss
and
fwait
sub
jmp
xor
and
hlt
cmc
mov
(bad)
aam
xor
and
and
xchg
pop
mov
sbb
lea
pop
enter
jge
test
mov
push
mov
add
mov
dec
dec
mov
xor
call
fstp
push
in
retf
fs
ja
fwait
sub
in
inc
dec
xor
fnstcw
repz
sub
cmp
pop
fwait
cmp
aad
int3
call
mov
inc
(bad)
int3
(bad)
rol
popf
fcmove
xor
imul
bnd
fwait
test
in
dec
cdq
in
sti
cmp
add
jmp
ss
into
call
pop
push
xchg
xchg
adc
popf
and
ins
iret
inc
push
in
push
dec
mov
loopne
lahf
in
mov
enter
xor
call
lea
jle
out
inc
ds
clc
jp
and
push
out
stos
inc
xchg
loopne
pop
pop
dec
push
cwde
adc
xchg
cs
js
fsub
mov
movs
fnstenv
adc
mov
jnp
adc
hlt
movs
hlt
sbb
and
adc
jb
cmps
mov
sub
call
in
aaa
adc
out
sub
xchg
sub
cmps
xor
test
mov
imul
jmp
out
mov
dec
in
add
pop
mov
fsub
loop
mov
inc
or
bound
dec
call
test
pop
aas
dec
mov
push
pushf
dec
dec
je
mov
sbb
fsubrp
retf
movs
jae
mov
jae
xchg
(bad)
adc
arpl
gs
mov
and
les
cmps
adc
call
jo
icebp
sbb
imul
arpl
aad
jl
les
xchg
pop
xor
adc
push
jle
popf
movs
push
sub
jb
ror
mov
sbb
(bad)
es
and
jle
jg
rcr
sbb
jg
and
jge
cmp
ds
out
lds
das
(bad)
lock
push
stos
imul
xchg
cmp
ss
(bad)
dec
cmp
icebp
(bad)
sub
lods
sub
(bad)
jmp
shl
int3
pop
stc
cmp
stos
or
cld
call
cmp
scas
add
sub
loopne
sti
push
idiv
push
fwait
sub
(bad)
je
cmp
in
enter
dec
lds
or
add
inc
sbb
pop
movs
add
xchg
pop
mov
nop
jae
add
jbe
xor
pop
dec
inc
sub
push
cmp
jmp
retf
lock
ins
(bad)
aad
fwait
sub
pop
fwait
mov
xlat
adc
sub
sbb
jmp
jns
cmp
mov
out
mov
out
in
and
lahf
fbstp
pushf
and
mov
or
imul
mov
sbb
or
nop
test
xchg
repnz
and
cmp
sub
int
xor
pop
popa
dec
mul
hlt
inc
sbb
xor
push
imul
jb
aaa
push
inc
ja
or
sub
sub
(bad)
sbb
les
push
inc
pop
fsubr
sbb
xchg
pop
add
mov
jle
mov
xor
(bad)
pop
cmp
mov
outs
xchg
mov
mov
push
aad
inc
sub
jmp
icebp
jbe
or
xor
pop
mov
cmp
pop
je
jecxz
inc
mov
leave
pushf
inc
movs
pop
aad
das
std
jne
pop
or
cmpxchg
xchg
mov
jmp
fnstsw
leave
jle
add
adc
popa
inc
clc
rol
(bad)
sbb
(bad)
sar
push
cdq
xchg
push
or
movs
inc
pop
pop
cli
out
int3
inc
mov
xchg
shl
mov
in
mov
push
add
aam
outs
cmps
aad
xor
out
ror
inc
adc
or
adc
pop
mov
(bad)
imul
rcr
xchg
cmp
sbb
xchg
out
hlt
dec
push
mov
cmc
push
adc
lahf
add
dec
sbb
in
dec
or
dec
mov
outs
or
enter
mov
sbb
add
addr16
(bad)
daa
jg
popa
call
xor
dec
adc
xor
pop
push
or
or
xchg
(bad)
push
fld
cmp
out
sahf
sub
xchg
neg
mov
mov
(bad)
pop
test
or
mov
arpl
inc
hlt
mov
mov
sbb
bound
out
mov
out
pop
jge
ins
dec
hlt
push
add
cmp
push
xchg
ja
mov
movs
pop
jae
movs
scas
loop
sub
add
stc
arpl
nop
enter
or
fild
hlt
into
iret
shl
scas
stc
push
xchg
loopne
push
(bad)
icebp
scas
scas
push
jge
pop
cmps
test
mov
sub
mov
xchg
adc
and
dec
xchg
les
aad
mov
sbb
fisubr
cmp
fnstsw
out
lods
jo
inc
shr
fstp
or
sub
push
jae
mov
sahf
sub
cdq
push
aam
mov
out
xor
dec
inc
ret
lods
mov
fldenv
loop
mov
xor
int3
inc
test
lods
jecxz
loope
lods
or
mov
and
retf
mov
mov
xchg
mov
mov
adc
add
mov
cmp
xor
dec
inc
jne
sbb
stos
call
cs
cmc
sar
adc
repz
and
arpl
aad
and
pop
les
outs
xchg
aad
mov
pop
xor
cli
push
pushf
xor
sub
mov
mov
cmp
jp
ins
out
xchg
jno
call
jae
xor
jge
fcmovne
push
rcl
shl
xchg
pop
inc
cmps
(bad)
outs
jo
xor
out
jp
dec
aaa
fiadd
outs
pop
pop
shl
pop
sub
sbb
mov
pop
pop
pop
test
fstp
mov
dec
mov
pop
xchg
adc
or
add
pusha
lahf
add
ret
adc
push
jne
mov
xor
loope
cmp
xor
fidivr
js
sbb
pop
push
cmp
jae
int
push
(bad)
sbb
sub
pop
cmp
mov
cmp
cmp
jmp
add
jg
cmp
aam
xchg
xchg
xchg
jbe
dec
mov
hlt
mov
ret
mov
in
ficom
in
cmp
arpl
sub
imul
or
ss
test
ins
(bad)
xchg
lahf
jae
retf
pushw
daa
cmp
movs
nop
dec
add
int3
nop
aad
mov
outs
call
xor
inc
std
cs
jae
(bad)
lds
outs
pop
pop
fdivr
repz
jo
arpl
mov
lea
mov
iret
iret
out
xchg
pop
mov
mov
shl
mov
(bad)
fs
icebp
sahf
lock
xor
and
mov
cmp
pop
call
cmps
rol
pop
imul
jae
das
cli
test
stc
jnp
mov
push
push
adc
jecxz
sbb
inc
addr16
cmc
ja
xchg
lea
out
das
adc
iret
pop
pusha
jmp
lods
push
and
xchg
hlt
shr
out
mov
adc
sub
test
(bad)
into
lds
cmc
stos
mov
xchg
push
mov
jmp
xor
push
out
and
fwait
xchg
in
call
aad
inc
gs
sbb
mov
stc
jno
lods
cmp
xchg
xor
add
test
xchg
jno
push
js
mov
das
push
adc
inc
adc
addr16
and
cli
std
(bad)
and
ss
mov
in
or
mov
xor
push
enter
leave
ret
adc
test
dec
inc
sbb
js
add
inc
aas
xchg
ss
or
popw
hlt
out
js
xor
xchg
push
out
out
stc
aam
out
loopne
fldcw
in
xchg
retf
push
jnp
das
mov
out
ins
pop
mov
mov
aas
stos
arpl
pop
into
or
icebp
jmp
popf
stos
(bad)
(bad)
or
jb
leave
nop
mov
inc
xor
mov
mov
xchg
in
push
xchg
xor
mov
xor
lahf
mov
and
dec
xchg
sbb
jle
cmp
popf
sbb
xor
or
ja
cmps
call
push
sub
sbb
outs
es
inc
or
aam
cwde
xchg
nop
shr
jge
adc
call
pop
ret
int3
int
and
mov
in
push
iret
add
cld
adc
cmps
pop
sbb
ins
fild
sbb
lods
in
lds
mov
adc
pop
mov
imul
inc
sub
jns
mov
xor
scas
and
sub
mov
adc
outs
test
(bad)
push
iret
je
fld
lea
mov
int
in
push
pop
in
sahf
xor
into
inc
mov
mov
rep
xchg
cmp
sbb
adc
jmp
enter
jecxz
stc
imul
pop
xchg
rcl
retf
hlt
dec
enter
fucomi
hlt
xchg
loope
in
sbb
mov
je
repz
sbb
fmul
pop
mov
jge
ss
prefetchwt1
lahf
aam
inc
sar
push
loop
outs
push
test
pop
mov
sbb
lds
mov
pop
jl
out
or
std
lock
mov
and
ret
jno
fisub
test
ins
jmp
push
cmp
adc
xor
jo
mov
adc
into
jle
sub
pushf
or
sahf
dec
cmp
pop
popa
push
ret
popa
jmp
int
jo
pop
adc
movs
push
push
out
xchg
mov
pop
mov
ins
and
sub
sbb
iret
aam
xchg
mul
loope
xor
and
adc
pop
push
add
inc
lods
push
das
jns
loop
das
xor
xor
call
and
inc
add
gs
int
mov
xchg
aaa
aas
in
add
sub
adc
xchg
imul
imul
xor
repz
mov
jmp
mov
fcom
sub
pop
mov
push
ficom
stos
jns
out
mov
inc
iret
xor
cmc
add
scas
push
xlat
aad
sbb
js
scas
add
ficom
mov
gs
and
add
xor
pop
mov
adc
enter
pop
xchg
addr16
mov
leave
push
arpl
adc
cmp
sub
push
mov
stc
or
mov
in
fsubrp
cmps
add
add
das
test
fimul
scas
movs
or
in
in
in
push
mov
das
dec
sbb
sar
jecxz
stos
xchg
fs
scas
xchg
mov
cmps
test
iret
hlt
push
mov
push
xor
dec
pop
mov
jmp
push
jecxz
pop
push
sbb
push
push
jmp
mov
cwde
shl
fwait
pusha
pop
pop
es
mov
push
push
je
dec
sub
and
jle
sub
lds
sbb
ja
sub
and
add
stc
pop
xchg
pop
mov
inc
addr16
fld
outs
pop
cmc
mov
cmp
and
stos
dec
outs
es
xor
jnp
daa
cwde
sbb
mov
fucomi
ret
or
dec
xlat
ficom
mov
idiv
aas
out
mov
add
pop
sti
or
add
js
pop
add
add
xor
lods
jle
dec
jae
jbe
mov
mov
inc
call
arpl
pop
push
adc
dec
dec
mov
xchg
fdiv
add
mov
xchg
iret
js
inc
icebp
lea
jge
outs
dec
out
push
cmc
xchg
pusha
in
jmp
add
pop
and
xor
or
push
push
mov
in
ret
fst
arpl
push
push
jmp
lock
xchg
jecxz
xor
adc
cld
pushf
mov
jmp
in
add
mov
pop
xchg
repnz
inc
(bad)
jmp
sub
xchg
xchg
sub
sbb
movs
cmp
add
and
xor
push
jg
data16
cdq
add
outs
repz
push
ins
xor
jge
sbb
sub
rcl
(bad)
bound
jg
sub
jl
enter
xchg
movs
sbb
rcr
stos
cmp
sar
sti
push
out
push
scas
arpl
(bad)
fcom
xchg
movs
test
mov
mov
xchg
xor
aam
and
daa
pop
cdq
ja
dec
cmp
adc
mov
fnstcw
retf
xor
fwait
xchg
mov
(bad)
fist
loopne
xor
jns
pop
cmps
loop
dec
push
mov
adc
mov
bound
call
sub
pop
pop
mov
add
xor
inc
sbb
loop
pop
push
push
in
loop
mul
into
adc
jmp
mov
xor
sub
pusha
fcomip
jecxz
test
fs
(bad)
imul
pusha
fst
mul
test
sti
cs
mov
call
ror
daa
pop
lahf
adc
test
jp
rol
xor
xor
bound
out
out
cmp
inc
ds
and
cmp
cmp
push
mov
mov
lahf
pop
(bad)
sub
push
call
inc
mov
and
and
aaa
sar
xor
fwait
std
in
movs
cmp
push
outs
or
in
cmp
cs
and
imul
add
fst
mov
inc
fstp
cmp
cmp
leave
push
mov
mov
aad
xchg
push
dec
mov
in
push
cwde
add
mov
ficom
add
adc
sbb
or
mov
or
jne
mov
cmp
adc
es
push
out
ficomp
sahf
stc
jbe
mov
pushf
bound
xchg
xchg
sub
popa
adc
xchg
jne
addr16
jmp
dec
popa
cmps
inc
shl
xchg
lea
xabort
and
xchg
add
int3
das
aas
iret
int3
mov
jg
call
xor
cdq
mov
mov
iret
(bad)
cmp
icebp
iret
fidiv
ins
pop
push
es
rcl
mov
sti
mov
jp
pop
jecxz
lahf
fild
ins
dec
push
int
data16
jnp
mov
daa
enter
ins
dec
bound
pop
bound
in
adc
icebp
dec
pop
cmp
push
adc
jl
mov
adc
jne
xchg
adc
xchg
retf
cmps
enter
adc
push
push
cs
adc
cs
xor
mov
jmp
mov
std
add
push
icebp
xchg
pop
push
stc
jae
mov
push
add
mov
test
add
push
ds
pushaw
sbb
inc
mov
cli
cmps
data16
cmps
addr16
xchg
or
sbb
sbb
pop
mov
test
ror
pop
data16
or
mov
inc
pusha
sub
out
inc
sar
mov
cmp
or
aas
fdiv
pop
mov
sbb
cld
jnp
(bad)
into
or
add
push
out
fwait
pop
ror
rcl
or
mov
fistp
(bad)
rcl
data16
xchg
cmp
rol
in
xchg
rcr
inc
daa
xchg
push
(bad)
ins
push
icebp
cmp
fisttp
scas
mov
call
or
fisttp
mov
jge
sti
movs
add
and
sbb
call
es
jecxz
fadd
dec
daa
sbb
into
(bad)
repz
shl
daa
lahf
inc
out
sbb
mov
ret
cli
adc
lods
out
mov
imul
ret
cmps
jae
cli
mov
retf
or
jns
or
mov
mov
and
sbb
mov
jmp
retf
mov
push
(bad)
or
pop
adc
dec
popa
mov
cmp
jmp
xchg
data16
cmps
ins
or
rcl
and
jle
shr
dec
xor
or
retf
fdivr
pop
push
push
sub
loop
inc
sbb
stos
aas
test
mov
sbb
mov
sbb
add
jge
pop
or
imul
mov
or
push
jp
mov
mov
sub
data16
mov
test
and
imul
dec
jne
xchg
xchg
xchg
shr
xchg
icebp
jo
push
(bad)
sbb
mov
jecxz
cli
and
mov
add
pop
jmp
push
mov
inc
cdq
outs
aaa
push
fisttp
sub
add
ficomp
xchg
mov
add
les
mov
inc
int3
movs
sbb
ss
jo
addr16
adc
mov
out
gs
xlat
xlat
stos
mov
imul
data16
jb
mov
loop
jbe
leave
iret
jb
iret
sbb
sub
xchg
xchg
push
cdq
pop
imul
jp
jmp
into
fxtract
lahf
pop
cmp
mov
jg
adc
out
ror
pushf
shl
pcmpgtw
xor
sbb
xor
in
fdivr
loop
sub
cmp
mov
icebp
pop
mov
xor
mov
lods
pop
int
sbb
push
cld
inc
imul
mov
cmp
out
push
gs
push
fwait
stos
imul
(bad)
sahf
scas
stos
push
mov
stos
push
test
(bad)
mov
push
push
inc
push
mov
mov
sub
mov
xor
cmp
repnz
inc
jg
pop
idiv
rcr
mov
es
xor
sbb
fild
fldcw
or
je
sub
stc
push
add
pop
ja
int
into
in
add
test
push
sar
ror
enter
rcl
adc
push
sub
mov
popf
call
dec
or
pusha
jg
xor
push
sub
popa
mov
cmps
mov
lds
xchg
sbb
xor
(bad)
retf
stos
push
inc
dec
jmp
add
push
arpl
pop
das
xchg
push
cli
clc
cmp
fld
dec
add
cdq
in
mov
mov
stc
mov
sub
mov
mov
and
imul
into
retf
daa
sbb
sbb
repz
add
xor
ficomp
cmp
dec
daa
(bad)
loope
pop
adc
lds
jns
add
or
mov
(bad)
sbb
jge
(bad)
int
jg
dec
inc
pop
retf
pop
addr16
cdq
cwde
push
dec
dec
imul
jo
test
push
xor
push
xor
data16
xchg
daa
in
sbb
lock
cwde
test
ret
add
enter
jg
xchg
popf
arpl
push
loope
fmul
rol
or
es
push
cmps
fwait
popaw
mov
mov
xlat
xchg
pop
mov
pop
and
lods
fsubr
xor
xchg
ins
cmp
dec
and
call
(bad)
in
ins
rcr
call
call
dec
fsubr
das
sub
xor
xchg
rcr
shl
or
inc
adc
pop
shr
mov
cli
test
add
inc
loopne
or
dec
mov
outs
hlt
cmp
xor
jmp
scas
and
fistp
(bad)
xchg
inc
or
pop
xor
fiadd
inc
scas
adc
in
mov
leave
sbb
cmp
jnp
addr16
stos
add
xlat
adc
out
push
leave
aas
test
push
aad
or
rcl
(bad)
int
rol
jmp
dec
int3
ret
dec
pushf
data16
loopne
sbb
mov
pop
(bad)
jg
and
movs
into
and
loope
(bad)
ds
jae
sub
outs
and
pop
icebp
push
dec
jp
dec
dec
xchg
repnz
std
data16
test
jg
cmp
loopne
jl
or
ret
mov
mov
movs
xchg
sbb
mov
aad
out
inc
sti
jecxz
add
fcomp
lods
ficom
mov
ret
add
jmp
mov
pusha
int
fwait
stos
mov
scas
(bad)
movs
scas
xor
or
movs
xchg
fwait
loop
sub
xor
adc
pop
aad
fnsave
popf
repz
scas
lock
ins
int3
repz
(bad)
jge
cmps
outs
daa
mov
fs
popf
jmp
ret
jg
push
and
pop
xor
inc
inc
mov
pushf
and
dec
or
fwait
and
jmp
aas
push
push
add
xchg
dec
mov
mov
maxps
stos
lea
add
add
adc
cli
(bad)
(bad)
cwde
adc
(bad)
lahf
or
mov
btr
ret
add
xchg
sub
popa
add
test
jae
dec
mov
jnp
xchg
and
xchg
xlat
jmp
pop
lock
imul
clc
adc
xchg
push
xchg
sbb
call
aaa
xlat
mov
in
retf
or
fstp
sti
mov
sbb
ins
sbb
mov
xlat
out
jne
inc
pop
jbe
sub
push
in
and
xchg
pop
(bad)
mov
mov
cmp
mov
adc
(bad)
mov
dec
mov
fcomp
xchg
pusha
jmp
xchg
mov
jmp
cwde
nop
addr16
xlat
das
leave
cwde
xor
int3
cmps
int3
xchg
fs
mov
je
mov
imul
and
(bad)
dec
jno
mov
ret
mov
ret
lea
push
mov
push
rcl
sub
fwait
xchg
ret
scas
out
inc
ret
and
add
push
repz
fld
lods
pop
and
xor
xchg
nop
jne
dec
aas
mov
adc
(bad)
pop
jo
dec
inc
movs
or
lahf
lahf
cdq
cmp
in
fisubr
bound
data16
test
dec
mov
inc
sar
inc
cmp
paddw
mov
jecxz
lahf
outs
stos
dec
pop
cmp
mov
ret
xchg
jae
jns
imul
xchg
or
sar
jbe
loope
fs
mov
push
sub
retf
xor
clc
enter
inc
les
add
xor
adc
ret
mov
add
mov
mov
pop
sbb
in
jbe
pop
outs
loope
cmp
push
jno
aad
adc
imul
push
repz
out
inc
sub
test
cmps
fnstenv
dec
cmp
in
test
ror
mov
jne
xor
xor
dec
aad
enter
sub
cmp
jg
sbb
cs
push
cmp
sub
loope
in
ins
ja
pop
sbb
enter
mov
fild
push
mov
inc
out
popa
or
call
in
std
int3
vmptrst
call
sub
dec
jmp
frstor
mov
pushf
aad
sti
mov
lods
mov
fldz
icebp
lahf
cmp
push
ds
inc
jl
call
jmp
out
sbb
fxam
xchg
mov
cwde
jmp
pop
(bad)
ins
inc
cld
xor
fldenv
xchg
fs
(bad)
jae
loop
(bad)
sbb
lods
sub
faddp
mov
ficomp
call
push
movs
mov
aad
push
pop
lods
pop
movs
pop
push
cld
or
adc
inc
jmp
pop
xlat
lods
xor
retf
int3
cs
arpl
jnp
sub
mov
lock
sbb
push
inc
(bad)
nop
adc
cmps
aam
xchg
push
push
push
mov
mov
mov
or
mov
not
or
pusha
adc
rcr
out
cs
aaa
ret
test
fs
mov
dec
test
mov
(bad)
in
cmps
mov
out
rcr
popa
adc
ficomp
rol
jge
pop
mov
mov
std
daa
xchg
xchg
les
inc
push
pop
sub
fs
adc
xor
test
push
adc
pop
mov
dec
mov
xchg
scas
mov
or
sub
sbb
mov
call
clc
and
call
mov
ins
repz
xor
mov
pop
mov
loopne
cmp
scas
pop
and
inc
push
xchg
inc
stc
nop
adc
pushf
sbb
aaa
and
icebp
pop
(bad)
stc
and
sti
mov
stos
mov
(bad)
jae
rol
(bad)
fiadd
push
adc
xor
gs
shl
lock
ret
inc
sbb
in
call
jg
sar
retf
xor
ror
cmp
pop
jo
and
imul
in
jle
pop
adc
jmp
addr16
nop
call
shl
push
out
imul
and
int3
inc
mov
jno
daa
dec
stc
push
(bad)
jnp
mov
and
fsub
jge
pop
std
or
or
call
sti
outs
cld
adc
gs
mov
sub
je
sub
jmp
mov
in
dec
retf
sub
mov
mov
adc
into
nop
in
sbb
mov
dec
in
out
mov
arpl
js
mov
dec
mov
jge
mov
pop
push
mov
xchg
stos
adc
dec
sbb
cmps
cli
push
mov
xor
cmp
or
xor
sub
jno
xchg
dec
jb
cmp
fisub
stos
mov
or
pop
mov
mov
pop
or
je
fwait
mov
leave
outs
pushf
call
cmp
std
jns
mov
(bad)
mov
(bad)
fimul
adc
mov
sub
into
test
push
pop
mov
cs
sub
sbb
imul
or
jge
mov
or
jns
outs
dec
fldpi
pop
rcl
js
jge
into
mov
lea
push
pop
fldenv
pop
call
sbb
aas
sbb
pop
dec
pop
push
test
or
xor
in
in
outs
pusha
test
movs
lods
stos
mov
xor
jb
in
out
pop
imul
cmp
jns
out
push
and
rol
aas
mov
inc
popa
fwait
sbb
ja
nop
cld
arpl
push
or
pop
inc
loopne
cmp
mov
and
sbb
cmp
outs
adc
es
repz
mov
cwde
sbb
jnp
pop
jne
adc
sub
dec
int
adc
dec
out
jmp
mov
and
jmp
and
dec
test
xchg
push
sar
or
in
inc
bound
adc
jge
cld
(bad)
rol
fldenv
jnp
inc
cmp
nop
or
dec
mov
int
out
push
shl
ror
push
pop
sub
outs
stos
repz
mov
mov
pop
mul
jp
cmp
push
ins
pop
add
mov
hlt
xchg
enter
jge
inc
lods
jmp
(bad)
pop
mov
std
outs
mov
sub
fdivrp
push
xor
xor
mov
xchg
mov
(bad)
lock
inc
stos
popf
adc
test
mov
aam
jecxz
in
inc
xchg
mov
dec
xor
pop
push
or
sti
orps
pop
arpl
jecxz
add
pushf
sbb
adc
xchg
dec
(bad)
lahf
stos
fst
xlat
repnz
mov
xor
push
jl
sub
ret
loop
push
pushf
push
pop
test
fiadd
push
int3
sbb
and
mov
clc
cmp
mov
sbb
and
xchg
sar
add
ret
repz
test
adc
xchg
rcr
popf
sbb
rcl
pusha
movzx
inc
dec
mov
mov
ror
jmp
pusha
xor
xchg
call
mov
add
pop
mov
mov
in
mov
cmc
jns
jnp
mov
es
adc
sbb
and
daa
jo
lods
out
mov
sbb
leave
js
addr16
mov
jl
int
jecxz
inc
clc
mov
sbb
cmp
aaa
sti
pop
in
mov
(bad)
std
in
pop
sub
inc
cmps
inc
in
ss
inc
pushf
cmp
mov
call
fsubr
pop
xor
inc
and
pop
dec
jecxz
loopne
out
cmp
inc
dec
fdivr
mov
mov
test
je
xor
xor
jg
add
cmp
ss
cmps
sub
aam
mov
jno
xor
std
xor
into
pop
jmp
xlat
rcr
mov
inc
sbb
mov
(bad)
mov
sub
lds
push
into
or
imul
sub
inc
test
fild
fimul
and
gs
out
inc
sbb
fadd
pop
xchg
xor
pop
repnz
retf
jno
xchg
loop
mov
jecxz
lods
cmp
test
imul
sub
mov
jmp
adc
cmp
(bad)
and
pop
shr
cmp
adc
push
or
scas
mov
pop
pop
in
mov
js
fistp
xor
push
clc
add
jmp
xchg
mov
fisub
xor
loop
lods
cmp
mov
ret
aas
(bad)
mov
pop
mov
mov
cmps
dec
mov
inc
dec
das
imul
jp
jae
iret
inc
daa
or
mov
je
fld
mov
pop
push
lea
test
jl
(bad)
or
shl
retf
out
pop
leave
inc
jp
mov
outs
retf
lahf
sti
outs
push
or
sbb
pushf
cvtps2pi
test
out
jecxz
mov
xchg
or
or
xchg
pushf
sub
mov
dec
ins
inc
and
jmp
jne
sbb
outs
aad
int3
push
jle
and
out
(bad)
outs
adc
mov
xor
shl
cs
mov
ss
xchg
scas
test
inc
push
fld
inc
mov
test
lds
scas
or
push
xor
sti
out
jle
jecxz
mov
neg
into
or
(bad)
mov
aam
sub
inc
repz
xchg
sub
mov
es
fwait
(bad)
hlt
ror
clc
test
mov
mov
js
bound
les
lock
dec
cmp
sub
jp
daa
pushf
jne
pop
push
mov
and
mov
cmp
(bad)
push
jnp
pop
or
aam
out
and
inc
mov
icebp
and
enter
and
xchg
loope
retf
pop
jo
popa
aad
jge
aaa
push
xchg
mov
pop
std
rol
aaa
rcr
sub
sar
nop
or
scas
pop
dec
jmp
mov
mov
jo
push
mov
mov
test
jne
sub
fisubr
push
push
aam
in
movs
sub
into
std
cmp
adc
sbb
inc
or
adc
and
repnz
movs
add
push
push
psubd
gs
or
(bad)
jnp
call
sbb
xor
loope
adc
lock
jecxz
dec
or
cli
bound
xchg
sbb
push
scas
leave
fcmovu
pushf
xor
iret
adc
imul
add
xor
or
push
rol
data16
cs
xor
das
sti
jno
gs
jecxz
push
into
out
sbb
imul
repnz
push
add
(bad)
ins
nop
inc
xchg
adc
and
cs
popa
fisttp
or
sbb
xor
jmp
pop
or
gs
mov
pop
add
push
shr
xchg
or
and
sbb
mov
ins
pop
sub
movnti
(bad)
jno
push
shl
cli
(bad)
xchg
cdq
dec
and
sub
std
xchg
js
ret
test
je
inc
adc
pop
clc
mov
mov
push
jmp
and
xchg
out
dec
sub
inc
(bad)
dec
rcl
(bad)
mov
xchg
adc
sub
loope
mov
(bad)
fnstenv
inc
and
inc
leave
inc
sub
shr
push
stos
lods
rcl
(bad)
loopne
sti
sbb
pop
shl
push
fbld
cmps
in
lods
or
popf
cmp
in
add
icebp
and
jmp
enter
pop
inc
jae
xchg
int3
cmps
rcl
add
xchg
ficom
cdq
push
sub
push
lahf
sub
retf
imul
(bad)
jnp
inc
movs
dec
iret
or
ins
je
or
push
push
push
push
int
les
xor
and
stos
sbb
es
mov
add
call
sub
add
xchg
adc
mov
mov
mov
int
or
dec
inc
pop
jmp
inc
enter
or
mov
loope
xchg
pop
cmp
push
jb
in
xchg
mov
adc
xchg
pop
test
inc
and
test
jns
scas
jnp
fnsave
mov
daa
xor
dec
adc
add
cmp
adc
fidiv
sbb
in
mov
and
je
push
sbb
sbb
data16
push
test
ret
stc
loop
add
dec
jg
sub
mov
sub
jo
shr
sar
mov
push
push
sbb
push
ret
pop
xlat
sbb
cmps
pop
outs
data16
mov
mov
pop
mov
xchg
xlat
dec
sbb
fnstenv
inc
xor
xchg
mov
pusha
mov
aad
xchg
push
in
mov
jo
inc
jo
xor
ret
xlat
pop
out
lods
jmp
nop
lods
adc
xchg
fistp
inc
arpl
xchg
(bad)
pop
cmp
push
out
pushf
(bad)
mov
xchg
retf
sub
outs
jmp
push
sbb
sbb
hlt
lds
ror
data16
mov
ins
ficomp
out
cmp
out
clc
imul
std
and
in
rol
arpl
mov
jecxz
outs
push
ins
in
std
inc
repnz
in
dec
mov
cdq
jae
js
jnp
mov
ret
xchg
mov
in
xchg
jle
jmp
adc
enter
xchg
fcmovnb
loope
fadd
and
xchg
ds
cmp
pop
dec
cmp
xor
inc
adc
add
mov
xor
push
lea
jmp
sub
ret
cmp
jo
mov
aad
xor
mov
xlat
lahf
add
xchg
ret
aad
inc
xchg
cdq
mov
mov
fbstp
push
gs
cwde
repz
push
mov
jns
add
mul
jbe
fistp
shl
aad
imul
out
push
movs
dec
mov
sub
push
cld
test
std
daa
les
ins
cmps
jmp
jmp
jns
adc
sahf
(bad)
jmp
jmp
jge
shr
daa
or
or
outs
data16
repnz
push
inc
sub
dec
cmps
in
in
dec
arpl
loope
dec
pop
mov
out
mov
mov
pop
daa
imul
shr
jae
pop
scas
lods
(bad)
in
sti
dec
adc
(bad)
xor
in
sbb
enter
dec
test
sbb
jle
dec
jle
or
pop
xor
stos
lahf
das
imul
aad
cmp
inc
xor
out
push
cmp
cmp
pop
imul
add
jp
dec
sbb
pop
xchg
mov
in
dec
ret
add
mov
fisub
pop
inc
adc
js
into
(bad)
nop
pop
mov
sub
fisttp
adc
popa
test
cmc
mov
jg
ja
inc
push
mov
and
dec
lock
popf
jnp
shr
mov
jmp
shl
lods
test
loopne
xor
push
je
push
push
dec
pop
cmp
pop
jbe
ficomp
sub
in
mov
fwait
cwde
out
sbb
jl
xchg
jo
dec
movs
pop
neg
out
retf
cwde
sub
rcr
mov
jecxz
pop
xchg
jb
sub
inc
mov
add
inc
pusha
js
push
push
cmp
lods
les
jmp
push
cmp
enter
and
fwait
cwde
in
clc
adc
adc
in
jo
shl
inc
xlat
(bad)
or
mov
dec
les
retf
xor
inc
int3
cmc
call
cdq
push
adc
call
pop
daa
xchg
xchg
ins
enter
and
inc
(bad)
rol
jne
je
push
jp
add
int
mov
scas
ret
or
leave
outs
(bad)
mov
mov
retf
pop
xchg
or
jle
xchg
sub
cdq
gs
jecxz
jne
and
shl
xchg
out
int
loop
cmp
test
inc
dec
sub
or
pop
lea
aam
sbb
xor
dec
cdq
ja
scas
mov
stos
dec
std
jecxz
lods
gs
xchg
es
daa
ins
mov
pop
in
(bad)
or
(bad)
jnp
or
mov
cld
outs
shl
(bad)
jp
mov
loopne
dec
or
xor
and
(bad)
sar
sub
popf
hlt
pop
retf
mov
test
and
fisubr
xchg
inc
(bad)
xlat
in
fldenv
aad
int
sti
es
add
jmp
fmul
jae
cmps
adc
inc
mov
xchg
pop
jno
aas
mov
jg
mov
pop
lds
lahf
js
pop
push
hlt
inc
shl
pop
outs
sub
cmp
sbb
mov
gs
test
and
js
cmp
sahf
push
int
test
mov
dec
mov
out
sub
jo
xor
lock
jle
push
mov
jns
std
sub
jp
nop
dec
aad
sub
and
xchg
lods
lds
in
into
xor
test
in
jecxz
pusha
enter
loop
xor
sub
push
pop
cmp
enter
jae
jp
mov
int3
in
in
adc
mov
add
int
and
inc
adc
inc
loopne
xchg
mov
dec
test
ret
icebp
inc
jmp
adc
aam
jl
sub
out
jl
pusha
adc
mov
leave
bound
lea
das
test
fld
test
clc
xlat
adc
xchg
dec
repnz
push
jns
cmps
cmp
jmp
xchg
jo
adc
or
(bad)
sahf
cmp
mov
mov
cdq
mov
mov
and
lods
push
arpl
adc
add
or
inc
mov
cmc
and
pop
mov
cmps
pop
push
add
les
mov
out
sub
add
sbb
sub
fcom
outs
add
jle
mov
sar
imul
scas
call
mov
jge
ss
js
mov
dec
(bad)
icebp
in
fld
out
inc
cld
gs
(bad)
ds
test
mov
cmp
and
cmp
cdq
je
and
leave
fcmovu
jp
jl
scas
fcomp
ret
lea
test
xor
sub
jmp
or
jb
cmp
mov
cmp
bts
cs
sub
mov
push
mov
dec
dec
mov
pop
add
int
lods
out
and
lods
mov
fs
add
pop
jne
inc
mov
popf
sti
retf
push
retf
ja
or
aaa
inc
adc
clc
jns
je
test
call
rcr
dec
int3
imul
icebp
icebp
sbb
das
xchg
or
mul
leave
sub
sbb
or
xchg
arpl
cmp
aam
sub
pop
icebp
and
mov
inc
loop
cdq
jle
mov
pop
add
je
imul
push
push
xor
or
cli
test
mov
fdiv
sbb
cmp
call
ror
sub
jg
(bad)
icebp
test
push
idiv
sti
push
stos
inc
pop
sbb
out
loop
xchg
sub
mov
(bad)
repz
mov
(bad)
neg
fist
enter
fwait
add
cmp
mov
mov
loopne
sub
xchg
outs
push
stc
out
push
jle
and
aad
mov
mov
sbb
cmp
jmp
enter
adc
imul
cmps
adc
and
out
retf
outs
cmp
int
int3
(bad)
mov
adc
pop
(bad)
jmp
ret
mov
(bad)
mov
mov
mov
bound
fwait
loope
pop
ins
ret
dec
dec
(bad)
sbb
jb
xchg
lahf
mov
aaa
or
ror
repnz
sub
cli
pop
pop
retf
inc
and
jge
xchg
pusha
mov
call
movs
daa
sbb
mov
aaa
enter
mov
out
ret
jp
cmps
movs
sub
in
cmps
in
imul
push
mov
lahf
push
cmc
jne
dec
mov
xor
mov
scas
clc
xchg
jns
mov
mov
push
xchg
bound
out
outs
pop
(bad)
out
gs
xor
pop
adc
sub
stos
dec
fidivr
or
loopne
imul
mov
pushf
push
int3
ins
adc
push
repz
pop
pop
imul
dec
push
dec
jle
xor
daa
js
jg
fwait
rcl
lods
nop
xor
xchg
rep
push
push
adc
jmp
gs
aam
or
dec
in
push
push
stos
(bad)
inc
(bad)
sub
and
and
mov
inc
lods
pop
out
shl
sbb
inc
repnz
cmp
xchg
xchg
test
mov
(bad)
inc
sbb
sub
(bad)
shl
movs
addr16
stos
sti
iret
add
or
jae
adc
outs
add
cmp
(bad)
fbld
mov
das
(bad)
out
pop
mov
push
dec
mov
imul
enter
int
fst
pusha
xchg
sub
popf
adc
mov
ds
jmp
ins
inc
inc
movs
sbb
cmp
and
dec
or
and
pushf
xor
stc
pop
xchg
aaa
daa
sub
cmp
jmp
mov
add
add
jp
in
sbb
out
lahf
xchg
push
cmc
stc
mov
xor
inc
fisttp
neg
sub
lea
cs
pop
pop
cmp
xlat
cwde
popa
sub
and
or
(bad)
mov
jns
adc
jecxz
(bad)
fnstsw
popa
out
mov
sub
push
mov
push
daa
sbb
aaa
mov
push
jecxz
cmc
pop
stc
or
mov
stos
shr
rcr
cdq
in
mov
frstor
jl
inc
fistp
imul
push
inc
fidivr
cmps
sbb
mov
adc
ficom
popf
jg
mov
mov
mov
sub
lods
rol
addr16
shl
hlt
retf
in
cmp
mov
xor
push
and
xor
call
dec
pop
fisub
or
int
or
pop
scas
xchg
es
cmp
clc
addr16
jno
mov
fwait
loop
sub
repnz
mov
sar
in
aam
mov
xchg
mov
clc
(bad)
aas
scas
mov
and
aaa
sahf
clc
inc
test
bound
ja
mov
xor
adc
in
out
in
sbb
dec
xor
popa
retf
outs
mov
fild
add
shl
cmp
gs
mov
cmp
push
jo
shl
inc
ret
mov
std
mov
jge
xor
cmp
push
push
xchg
xlat
shl
sbb
lds
sub
pop
loopne
cdq
enter
inc
push
and
mov
fldcw
cmp
adc
add
xlat
aad
push
mov
(bad)
ja
icebp
leave
push
sbb
xor
sbb
mov
es
mov
cdq
jp
in
sub
add
push
icebp
or
push
daa
dec
outs
pop
fstp
outs
and
pop
fs
cwde
mov
(bad)
adc
jg
fisttp
push
or
out
sbb
dec
add
bound
mov
gs
(bad)
std
inc
fisub
sub
pop
and
repz
mov
cld
lahf
lea
pop
(bad)
mov
aaa
mul
repnz
adc
sbb
cli
push
mov
sub
sbb
mov
or
add
jbe
cmp
in
fisttp
stos
(bad)
or
repnz
mov
cmp
loopne
cmovg
(bad)
retf
call
ud1
add
pusha
popa
sahf
jge
loop
shl
jmp
nop
cmps
mov
xchg
sub
mov
(bad)
cdq
pushf
popw
cs
sub
ret
and
test
sub
add
mov
out
int3
adc
xchg
sub
mov
adc
repnz
push
xchg
sub
push
adc
push
cmp
daa
xchg
xchg
pop
cld
xor
in
wrmsr
aam
pop
or
aad
es
loopne
movs
add
mov
imul
push
dec
push
leave
stos
sbb
inc
or
jae
cmp
aaa
xchg
pop
push
adc
std
mov
or
xchg
jbe
sbb
dec
ss
ins
fldcw
push
jo
out
sub
xor
mov
and
cmp
and
in
adc
jl
lea
scas
lods
cmp
sti
mov
push
hlt
aam
mov
inc
hlt
adc
cwde
xchg
js
dec
mov
daa
mov
test
(bad)
cmp
sbb
scas
push
xor
xor
ss
sbb
pop
xor
cmps
std
mov
mov
ret
pop
sub
popa
and
xchg
jnp
dec
leave
mov
dec
retf
mov
jp
sub
dec
lods
pop
mov
mov
pop
push
das
xchg
jns
aad
add
inc
and
aaa
mov
imul
dec
dec
(bad)
pop
jne
sbb
repz
in
sub
dec
xor
sahf
addr16
mov
inc
cmp
or
push
mov
pop
fdivp
mov
sbb
in
test
mov
mov
sahf
ret
add
cmp
push
bound
mov
and
jp
xchg
in
push
sub
call
sub
cmp
mov
push
add
pushf
mov
shl
addr16
push
jae
imul
hlt
mov
pop
test
in
ror
xor
mov
and
add
mov
ret
mov
xor
cmp
cmp
jge
pushf
xchg
and
jmp
mov
inc
push
mov
jp
imul
sbb
bnd
stos
inc
add
je
ins
jmp
and
fcom
popf
jae
dec
mov
out
in
mov
cld
test
dec
jg
mov
(bad)
mov
adc
cmc
dec
push
inc
pop
xchg
cmps
xchg
mov
mov
arpl
jno
retf
repz
adc
fnsave
stc
cmc
loopne
imul
mov
pop
cmp
loop
xchg
ss
out
dec
or
inc
or
push
nop
in
fiadd
add
or
cmps
test
stos
mov
pop
les
push
adc
sub
dec
scas
cld
call
push
outs
(bad)
into
sbb
and
sbb
js
mov
mov
mov
mul
inc
push
or
cmp
xchg
sti
xchg
pusha
pop
fisubr
sti
cmc
(bad)
pop
scas
lods
rcr
(bad)
lahf
(bad)
stos
mov
mov
popa
jmp
iret
sahf
dec
retw
mov
mov
out
aaa
jo
enter
aam
push
shl
xchg
sbb
jle
push
(bad)
jno
jae
(bad)
jge
dec
cmp
jae
or
addr16
and
mov
adc
push
loope
inc
imul
xchg
(bad)
pop
jl
xchg
jmp
sbb
inc
dec
jne
add
fidiv
cmp
adc
sti
mov
(bad)
aas
mov
and
sub
sub
jmp
mov
in
adc
and
mov
cmp
pop
inc
mov
dec
repnz
xor
cld
sbb
icebp
xchg
ror
sbb
scas
xor
lods
xor
test
mov
mov
sub
in
fidiv
jmp
jae
add
imul
movs
pop
mov
rep
sub
nop
sub
cmp
in
sahf
xchg
sub
jmp
push
repz
cmp
or
add
push
jecxz
cmps
shr
mov
shl
pop
and
jmp
adc
aaa
scas
mov
loop
iret
iret
test
dec
ins
jb
inc
or
data16
ja
sahf
push
cmp
ficom
cmc
push
aaa
fld
stc
add
or
shl
aaa
movs
repnz
scas
call
cmc
pop
bound
or
add
jo
fnstcw
loopne
sti
sbb
loop
dec
and
mov
iret
movs
fisttp
aaa
mov
retf
inc
jle
push
lea
punpckhdq
xor
cmp
cmps
add
test
sahf
in
jg
popa
jle
pop
inc
not
or
mov
call
(bad)
(bad)
push
push
pusha
std
in
xchg
jnp
sbb
and
jb
cmp
(bad)
pop
fld
das
and
gs
cmps
lods
push
add
mov
jns
js
jmp
mov
push
add
mov
or
ja
or
ret
xchg
aas
xor
sbb
or
pop
jge
dec
inc
scas
ret
or
aam
cmp
adc
dec
mov
in
out
xchg
push
jmp
cmp
sbb
and
lods
xchg
inc
cmc
test
inc
push
popa
not
(bad)
out
push
test
imul
cmps
arpl
into
and
fcomip
push
daa
jle
sti
in
fs
ss
inc
xchg
push
xor
dec
push
cwde
dec
pop
xor
fsubr
sbb
push
add
data16
mov
xchg
jge
sub
lods
or
jp
xchg
ds
bound
cli
adc
scas
ja
inc
test
cs
adc
lock
inc
cmp
adc
(bad)
inc
aad
inc
scas
fsub
mov
fldcw
inc
mov
out
mov
sbb
push
(bad)
mov
mov
js
mov
into
cmps
mov
cs
imul
ficomp
mov
(bad)
dec
cld
sub
mov
or
mov
ret
loop
(bad)
sub
mov
mov
adc
in
inc
or
and
test
into
sbb
(bad)
push
dec
add
cs
mov
daa
xor
adc
sbb
push
adc
push
(bad)
fwait
sar
add
ret
jno
push
sar
ss
rol
mov
xor
mov
iret
inc
aad
dec
jo
cmp
fsubr
not
bound
sbb
dec
or
das
in
arpl
sub
inc
sub
xor
push
push
add
xchg
and
push
xor
xchg
cdq
ins
pusha
sub
sub
imul
movs
jbe
pop
in
inc
aad
mov
and
pop
adc
xchg
nop
sbb
fdivr
jno
adc
in
stc
mov
cmps
xor
(bad)
fcom
inc
lock
pop
popa
(bad)
xchg
sbb
xchg
mov
les
cs
push
sub
add
xchg
les
push
lock
pop
pop
mov
and
aaa
es
sub
scas
mov
xchg
or
push
cwde
gs
mov
adc
ss
lea
inc
jmp
jnp
call
sar
icebp
hlt
repnz
xchg
and
dec
lahf
in
popf
cli
xor
mov
or
dec
xor
imul
test
inc
inc
cmp
push
cs
inc
mov
add
in
test
inc
(bad)
mov
fnstsw
push
enter
mov
mov
mov
adc
outs
sub
stos
ret
mov
pusha
inc
lahf
push
sub
mov
dec
cdq
push
nop
adc
jge
fsubr
mov
rcl
fsubr
mov
adc
nop
sbb
mov
stc
push
ja
pop
mov
jle
arpl
fwait
add
sbb
xor
jns
and
inc
(bad)
mov
es
call
iret
sub
loope
cmp
dec
das
cwde
out
mov
xchg
mov
or
dec
or
xor
adc
mov
dec
pop
pop
mov
in
pusha
dec
pop
loopne
es
and
and
or
cmps
fmulp
arpl
cs
pop
xchg
cmp
pop
push
dec
in
icebp
div
add
neg
repz
xor
fnsave
push
push
push
mov
pop
(bad)
mov
jmp
pop
push
mov
xor
shl
sahf
enter
push
mov
in
cwde
or
xchg
js
test
jge
mov
or
push
aad
nop
pushf
pop
dec
aam
jne
sub
pusha
inc
call
ret
outs
cld
jnp
or
movs
data16
sbb
sub
xchg
or
mov
outs
cmp
inc
jmp
loopne
adc
in
fstp
and
(bad)
rol
call
fldenv
sbb
xor
sbb
pop
fimul
fisttp
stc
and
inc
sbb
scas
mov
out
clc
cmp
adc
cmc
pop
and
shl
sbb
pop
mov
push
retf
mov
adc
call
jne
loop
cdq
adc
retf
sub
adc
dec
sti
test
ja
mov
and
xchg
inc
int3
shl
jge
shr
mov
mov
loop
cwde
sbb
loop
or
dec
shl
mov
hlt
cmp
xchg
outs
repz
mov
sub
mov
std
out
sub
and
lock
ins
mov
out
aad
fstp
mov
fsub
repz
push
mov
inc
fbstp
aas
mov
inc
sti
push
aas
in
mov
inc
add
xlat
cmp
dec
test
bound
jle
jmp
mov
stos
or
add
loop
les
sub
shl
hlt
adc
rcr
xchg
fist
ret
in
inc
test
bound
popf
retf
fwait
lds
pop
jo
push
leave
lea
push
(bad)
lods
inc
(bad)
rcr
cmp
sbb
pop
daa
call
jns
sub
pop
mov
and
loop
mov
adc
push
jmp
jge
xlat
(bad)
mov
add
pop
movs
push
adc
xor
xor
je
inc
adc
movs
fcmovnb
mov
jecxz
out
xchg
adc
push
aam
popf
add
mov
jge
addr16
inc
fidivr
in
adc
add
xchg
shl
inc
push
(bad)
lods
(bad)
int
jg
pusha
pop
imul
out
jns
ins
ins
out
mov
jne
jl
xor
dec
inc
push
push
xlat
sbb
jp
jo
inc
popf
push
inc
les
jns
outs
nop
pop
jo
lea
scas
mov
pop
add
cmps
test
inc
dec
loope
fdiv
sub
and
movs
jmp
js
dec
repnz
lods
jnp
push
inc
cmp
push
add
adc
dec
pop
into
popa
push
out
ror
cdq
mov
(bad)
lea
imul
and
icebp
mov
xor
data16
mov
lods
rol
fsubr
outs
dec
xchg
sbb
fcom
adc
(bad)
es
push
cdq
jg
sbb
push
sub
sbb
cmps
inc
das
push
ret
pop
aam
jns
mov
retf
test
xlat
ficomp
sar
adc
mov
xchg
sub
in
push
sbb
hlt
iret
aaa
scas
mov
fsubr
