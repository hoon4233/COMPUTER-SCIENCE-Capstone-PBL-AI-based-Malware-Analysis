cwde
add
or
ins
cmp
test
sbb
loope
xor
adc
shl
push
and
out
xchg
cdq
js
xchg
mov
cmp
push
push
xchg
aad
xchg
es
pop
bound
repnz
sub
cdq
das
aam
(bad)
das
aam
addr16
mov
jb
or
mov
loopne
or
clc
xchg
lock
jbe
adc
ds
mov
inc
(bad)
or
cld
fist
fistp
dec
jae
popf
outs
int3
(bad)
outs
and
jae
aaa
push
add
push
aam
fwait
inc
push
iret
xor
(bad)
xchg
inc
push
inc
xchg
inc
push
mov
setns
xchg
mov
leave
push
adc
inc
pushf
sbb
inc
push
rcl
lds
fidivr
aam
dec
mov
push
retf
sub
inc
push
jb
(bad)
push
enter
retf
xchg
mov
arpl
sub
jne
inc
retf
mov
or
hlt
or
sbb
repnz
mov
push
xchg
inc
push
enter
fisttp
xchg
sbb
cmp
call
jmp
adc
inc
push
enter
pop
xchg
retf
xchg
jmp
push
inc
push
cmp
retf
push
sub
enter
iret
xor
push
jae
cmp
or
xor
adc
test
mov
fst
retf
mov
popa
outs
sbb
jl
and
xchg
sti
dec
add
push
les
loop
push
push
outs
mov
nop
jmp
out
cmp
adc
xchg
cmp
xor
xchg
jmp
leave
xchg
retf
pop
cmp
xchg
inc
push
inc
or
sbb
cmp
inc
add
cmps
mov
push
fwait
xchg
inc
aad
jo
cmp
xchg
in
mov
mov
push
cwde
xlat
jle
lock
xchg
push
clc
adc
or
dec
push
enter
adc
adc
fucomp
inc
cmp
inc
xor
xlat
xchg
mov
aas
xchg
lock
dec
aas
push
retf
mov
bound
loope
call
mov
lea
push
fisttp
loopne
ficomp
push
retf
dec
sub
loop
mov
push
dec
rcr
pop
sub
mov
mov
xlat
mov
sbb
inc
dec
loope
test
mov
lds
sub
xlat
outs
push
gs
add
rol
fcom
(bad)
push
add
cmp
adc
add
nop
inc
add
(bad)
mov
cwde
(bad)
aad
mov
rcl
xchg
int
(bad)
retf
stos
xchg
inc
jecxz
popa
sub
inc
push
xchg
push
js
das
outs
mov
inc
push
push
aam
pop
repz
xchg
push
stos
repnz
push
xchg
adc
adc
call
sub
or
enter
(bad)
push
inc
(bad)
int
rcl
(bad)
xor
jnp
pushf
cmp
dec
mov
test
push
mov
cmp
add
cs
pusha
ja
enter
loopne
ja
push
xchg
inc
push
dec
mov
sbb
(bad)
outs
and
jae
aaa
push
add
push
rol
mov
push
inc
xchg
inc
out
push
pop
repz
mov
inc
push
mov
sub
sti
loope
inc
inc
ds
push
jbe
dec
cmp
xchg
inc
push
lods
addr16
cmp
mov
(bad)
cmp
ds
inc
push
lahf
dec
push
pushf
lds
adc
iret
xchg
mov
(bad)
sub
out
ja
inc
push
jge
inc
out
leave
xchg
aad
push
ins
ds
inc
push
adc
inc
enter
push
cmp
ret
pop
jmp
imul
out
inc
push
stos
push
lea
(bad)
data16
retf
cmp
inc
sbb
bound
push
mov
(bad)
pop
sub
xchg
sub
out
enter
and
xchg
inc
push
or
dec
mov
dec
ds
push
mov
or
fst
inc
push
int3
cmp
aas
inc
xchg
inc
sbb
pop
sub
mov
ror
add
xchg
pop
dec
and
arpl
pop
dec
push
mov
loopne
sub
mov
les
repz
(bad)
dec
add
enter
push
and
push
pop
mov
es
mov
push
retf
mov
inc
std
push
pop
cmp
les
add
cmp
dec
mov
aaa
cmp
pop
xor
test
jl
add
pop
cmp
xchg
sbb
fidiv
xchg
aam
or
pop
cmp
push
sub
mov
mov
jp
rol
inc
loopne
sub
aaa
xlat
xor
enter
inc
xchg
mov
in
inc
push
inc
sub
push
push
aaa
cmp
push
mov
loope
cmp
inc
dec
pop
pop
add
xchg
retf
add
mov
retf
mov
cmp
pushf
cmp
sbb
and
test
push
jne
add
enter
enter
ins
pop
push
ins
ins
cwde
inc
push
inc
jmp
sub
or
dec
ins
aaa
cmp
pop
adc
out
enter
or
clc
ror
out
aas
push
cmp
int3
push
adc
repz
push
dec
or
push
ret
mov
dec
sbb
fldcw
mov
xchg
inc
push
cmp
pop
addr16
dec
cmp
repz
push
(bad)
nop
mov
sbb
jbe
enter
push
mov
push
int3
mov
es
inc
icebp
enter
cmp
push
xor
mov
pop
lock
ror
loope
test
cmp
cmp
jae
push
test
ss
jns
enter
lods
int3
sti
xor
xchg
inc
push
ret
xor
pusha
xchg
(bad)
push
mov
xchg
retf
push
inc
push
sbb
sti
add
jge
and
mov
pusha
cmps
mov
sti
add
add
xor
push
scas
mov
mov
push
pushf
dec
cwde
jl
cmp
adc
cmc
mov
add
adc
std
popa
jecxz
inc
cmp
xor
test
iret
sti
(bad)
adc
ret
xor
test
sti
cdq
xor
not
(bad)
mov
push
dec
or
xor
gs
loop
xor
retf
xor
mov
ds
jmp
add
add
test
inc
shl
xor
or
mov
cwde
aaa
inc
sbb
xchg
cmp
mov
sub
cld
movs
dec
cs
mov
lock
inc
retf
mov
in
repz
(bad)
aaa
push
gs
stc
enter
or
jl
in
div
sbb
test
scas
bound
add
enter
mov
lea
pop
mov
and
mov
pop
fist
outs
push
lahf
dec
and
or
test
sbb
jb
in
scas
mov
lds
data16
xchg
pop
fwait
jmp
cmps
pop
fdiv
inc
leave
add
lock
push
xchg
test
or
push
lea
sub
iret
in
push
dec
jb
adc
xlat
into
loop
cmp
call
repnz
test
lea
and
push
inc
inc
out
pop
jae
push
repz
ds
(bad)
adc
inc
mov
loop
je
mov
mov
movs
fisttp
jbe
repnz
out
lock
ss
iret
push
stc
jg
and
sbb
aad
mov
mov
cmp
mov
fwait
ret
cmps
out
in
jbe
mov
(bad)
jno
je
adc
push
mov
mov
sub
sbb
pop
push
ret
inc
cmc
add
bound
data16
xor
rcl
and
mov
clc
aam
mov
fist
std
mov
mov
pop
cmp
push
leave
xlat
add
rcr
ror
fxch
mov
jmp
cmc
jnp
iret
add
push
jle
add
pop
xrelease
cmps
inc
outs
out
aam
push
loope
cdq
sbb
adc
dec
push
sub
dec
pop
inc
sti
pop
data16
fnstenv
inc
das
mov
in
mov
ja
loope
xchg
mov
out
ins
jmp
std
test
imul
jle
mov
add
xchg
sbb
pushf
mov
cs
fistp
inc
stos
aas
fcomp
mov
dec
jp
(bad)
mul
xchg
pop
and
sbb
dec
ror
dec
movs
(bad)
mov
xchg
push
fldcw
inc
jo
retf
xchg
enter
or
rol
shr
cs
jbe
dec
push
stc
or
xlat
lds
scas
sub
jmp
pop
adc
dec
mov
test
push
mov
mov
cld
and
lock
pop
je
jecxz
push
mov
hlt
push
push
xchg
jecxz
push
addr16
xlat
sbb
lds
mov
or
pop
ins
cmps
xlat
jl
jg
js
adc
inc
dec
out
xchg
ja
test
sub
push
xchg
xlat
sub
pop
ja
aaa
shl
pop
loope
out
push
sbb
push
mov
mov
mov
mov
jecxz
in
adc
add
ins
jl
aas
ds
and
das
push
sbb
push
stos
mov
mov
out
mov
and
loope
push
bound
sub
sub
dec
sub
sub
out
cwde
popa
push
push
lahf
(bad)
popa
xchg
or
stos
inc
mov
or
jo
test
stos
push
adc
xlat
pusha
aad
aad
inc
and
mov
jmp
into
push
stos
cmp
test
sbb
xlat
in
stos
shl
xor
xchg
jbe
shr
inc
out
sub
inc
inc
in
loope
inc
add
pop
adc
pushf
push
movs
aas
pusha
stc
adc
fwait
push
aaa
imul
push
test
pop
and
pop
mov
leave
nop
cdq
lods
aas
ss
add
xor
aad
hlt
jbe
mov
outs
shl
cmp
mov
mov
push
add
imul
sahf
cli
dec
mov
mov
mov
loop
push
lods
sub
xor
push
test
(bad)
aad
push
pop
inc
repnz
cmp
jno
xchg
in
xor
jns
call
stc
or
xchg
or
daa
mov
retf
push
(bad)
sbb
inc
int3
fisub
dec
push
jecxz
mov
sbb
(bad)
push
imul
pop
xchg
xchg
dec
mov
jp
xchg
mov
shl
push
inc
mov
cmp
cwde
add
mov
rcr
jns
popf
cmps
add
enter
aaa
and
pop
arpl
xchg
call
push
pop
sub
pop
fbld
jo
(bad)
xchg
add
daa
xor
in
and
lock
adc
mov
enter
cmovge
inc
pop
add
in
(bad)
lahf
push
and
inc
dec
jmp
cmc
push
aaa
mov
inc
sbb
stos
les
repnz
jl
faddp
cmp
and
cdq
mov
stos
mov
push
retf
fimul
(bad)
lock
test
cmp
lahf
mov
cmps
pop
xchg
pop
inc
popa
pop
sbb
jp
cmc
adc
add
push
(bad)
test
(bad)
pop
(bad)
jg
xor
cmp
inc
(bad)
in
mov
retf
push
cmp
iret
mov
dec
mov
inc
xchg
repnz
lahf
and
aas
sbb
movs
movs
push
adc
cwde
jge
es
xchg
retf
sti
jnp
push
xchg
and
mov
jb
cmps
push
jne
push
cmp
dec
out
ins
jne
cmps
push
fcmovnb
sbb
pop
add
das
adc
jo
cmp
mov
xchg
and
les
and
push
loopne
push
aas
call
push
xor
cmps
popf
cmps
outs
fidivr
cmps
lds
daa
push
stos
xchg
or
test
dec
popf
push
mov
fiadd
jge
push
adc
rol
mov
(bad)
nop
je
cmp
push
push
dec
jne
(bad)
loop
jl
jne
(bad)
shr
sub
inc
retf
idiv
add
xor
adc
mov
mov
inc
cmp
cdq
pop
add
xchg
inc
(bad)
sar
(bad)
ret
and
test
in
xchg
(bad)
pop
clc
(bad)
or
das
loopne
or
push
mov
fs
daa
out
(bad)
xor
xor
sbb
ja
push
mov
hlt
jno
imul
dec
sbb
aas
jbe
mov
or
idiv
shl
movs
mov
sub
jmp
pop
aas
outs
inc
pop
or
cmp
add
push
jo
adc
nop
sar
sub
mov
mov
int3
or
pop
fst
out
dec
shl
push
imul
shl
shr
push
xchg
adc
(bad)
(bad)
xchg
addr16
xlat
(bad)
xchg
in
xor
xchg
inc
pushf
dec
(bad)
xlat
mov
(bad)
push
das
push
(bad)
ficom
sbb
pusha
mov
or
cmp
sbb
xchg
xor
cli
stc
inc
(bad)
mov
inc
pop
mov
outs
enter
xor
daa
jmp
mov
popa
mov
test
outs
retf
add
jns
(bad)
in
xchg
rcr
stos
cmp
or
cmp
push
mov
push
dec
mov
je
lea
pop
std
aas
jmp
xor
stc
test
stos
push
jb
jp
enter
enter
and
xchg
scas
push
sbb
shl
adc
cmp
or
push
out
ds
(bad)
outs
mov
les
ja
jns
xchg
vmptrld
fnstsw
idiv
rcr
mov
inc
enter
jmp
stos
imul
shr
xor
stos
sub
ja
inc
cmp
pop
add
mov
sti
ds
jle
nop
push
jbe
aad
push
push
mov
cmp
pop
sbb
dec
xchg
inc
xchg
je
aas
xchg
test
pusha
cmp
imul
ret
std
push
or
stos
shr
mov
and
(bad)
fcom
in
out
ja
push
and
in
cmp
fidivr
ins
daa
adc
sbb
fadd
jnp
add
hlt
aam
cmp
imul
fsincos
sbb
sbb
retf
push
push
mov
lock
sub
mov
xor
addr16
lahf
(bad)
js
popa
pop
dec
cmps
jnp
lock
(bad)
cmp
adc
inc
and
fldenv
mov
bound
inc
aad
adc
mov
push
push
ja
sbb
push
cmc
cs
cmp
adc
inc
xchg
push
(bad)
mov
mov
xchg
in
xchg
jge
push
scas
(bad)
(bad)
dec
retf
mov
xchg
xchg
in
lahf
cmp
retf
and
lahf
aas
sub
push
cld
push
pop
sub
gs
mov
jge
std
xchg
inc
fs
add
mov
out
push
jmp
arpl
(bad)
ss
push
(bad)
stos
pop
push
and
les
inc
sub
(bad)
xor
shl
fdivp
or
sub
ds
in
scas
jmp
stos
push
xchg
(bad)
pop
add
lock
push
sbb
dec
in
inc
mov
dec
or
call
mov
jge
cdq
mov
push
sahf
je
mov
or
pop
adc
(bad)
test
out
adc
pop
mov
add
out
push
push
inc
cli
js
repz
js
scas
dec
xchg
dec
add
(bad)
cmc
or
sub
push
test
push
imul
add
in
ins
test
retf
xor
gs
push
push
inc
fcom
mov
inc
jbe
lods
cmp
xor
std
mov
in
xor
dec
inc
inc
pushf
adc
xchg
repnz
sub
je
pop
loope
aam
das
xchg
retf
adc
sub
sbb
mov
adc
nop
adc
enter
sbb
sbb
sbb
sbb
enter
sub
mov
inc
repz
ret
test
ror
jg
std
aaa
add
mov
daa
int
sbb
sbb
jne
dec
aam
cli
push
(bad)
ficom
add
xchg
out
pop
ins
xchg
test
bound
mov
xchg
fmul
test
in
pop
adc
or
shr
pop
es
(bad)
xor
sbb
stos
mov
sub
in
push
hlt
xchg
xor
les
inc
adc
ror
jne
mov
add
push
rcl
inc
(bad)
mov
cmp
pop
es
push
cli
push
sbb
inc
mov
sub
aaa
repz
in
push
pop
in
dec
fild
jae
(bad)
mov
mov
jecxz
jge
push
pop
int3
sbb
(bad)
aas
or
ffree
and
sbb
adc
sbb
mov
mov
inc
lahf
popa
(bad)
mov
push
dec
(bad)
cmps
dec
loopne
stos
test
mov
movs
scas
push
in
cmps
cmc
aas
js
cwd
pusha
xor
xor
jo
mov
mov
or
sbb
and
or
jecxz
pop
add
in
mov
mov
ins
(bad)
dec
ja
add
cdq
rcr
adc
push
jbe
dec
loope
fadd
dec
and
repnz
jbe
inc
xchg
(bad)
cmp
sbb
mov
cmps
adc
fidivr
cmp
dec
mov
push
mov
dec
cmp
out
(bad)
mov
enter
mov
push
push
movs
mov
out
(bad)
or
inc
xchg
push
push
jge
sbb
jns
cmp
xor
rol
cs
iret
mov
mov
ret
enter
adc
add
pop
mov
enter
test
mov
or
pushf
cmp
mov
adc
fadd
scas
xor
dec
lods
arpl
sbb
int
ins
xor
hlt
fwait
adc
imul
xchg
icebp
xchg
cmp
push
scas
push
call
(bad)
xchg
test
xchg
fnsave
(bad)
push
cs
and
and
xchg
leave
enter
lods
repz
sub
sbb
mov
lea
jp
add
outs
push
sub
movs
push
ss
jmp
or
mov
shr
push
cmp
inc
pop
dec
xor
imul
inc
add
popa
call
loope
xchg
outs
and
adc
inc
inc
inc
inc
test
add
mov
aas
movs
mov
loop
xchg
mov
pop
mov
bound
shr
ds
jb
idiv
jmp
and
sar
mov
stos
dec
test
repnz
or
imul
cmp
aas
pop
shr
jmp
mov
jo
imul
jge
cmps
stos
retf
scas
pop
inc
ds
jnp
pop
adc
imul
inc
push
jb
mov
out
outs
je
mov
cli
(bad)
xchg
jecxz
sub
dec
repz
pusha
aad
jecxz
jmp
leave
outs
das
mov
cdq
push
fisubr
xchg
xchg
push
xor
inc
add
dec
xchg
std
xor
(bad)
push
push
jb
dec
(bad)
jl
retf
mov
cmps
test
xchg
inc
test
cli
push
mov
add
aas
mov
xchg
je
pop
ret
cmp
es
pop
add
jb
xor
cwde
cmp
loope
cmp
push
jl
aas
xor
leave
das
push
dec
sub
aas
cmp
push
inc
cmps
sti
fist
rcl
pop
xor
aas
test
push
js
dec
xchg
popf
or
loop
(bad)
nop
dec
in
add
(bad)
cli
pusha
out
or
or
dec
inc
xor
icebp
pop
pop
daa
addr16
inc
sub
cmp
xchg
mov
inc
or
rcl
fnsave
(bad)
jg
or
es
xchg
jb
pop
jno
call
dec
and
sbb
outs
mov
test
or
mov
daa
pop
inc
push
(bad)
in
stc
pop
pop
mov
add
out
sete
push
push
mov
aas
mov
lds
rcr
icebp
sbb
je
in
cmps
movs
xor
shr
aas
jo
call
fwait
inc
and
jge
or
ds
jno
pop
mov
push
pop
mov
sub
scas
cmp
add
pop
pop
mov
popf
sbb
or
test
mov
push
nop
movs
div
push
sub
loop
rcl
push
stos
movs
data16
dec
sbb
push
cmp
pop
pop
xchg
sahf
xor
xor
rcl
out
je
popf
cdq
pop
mov
adc
sti
pop
and
aam
sub
push
xchg
(bad)
test
mov
popf
test
in
(bad)
popf
sti
cmc
pop
jl
arpl
fmul
mov
ja
lahf
test
pushf
not
outs
not
add
add
jnp
loope
mov
test
jmp
mov
adc
test
adc
inc
cdq
inc
sub
test
inc
cmp
sub
cmps
sbb
popa
push
xchg
inc
loop
cmp
in
sbb
sar
ret
sbb
aam
sbb
sti
inc
sahf
or
outs
push
push
ds
add
enter
test
push
xchg
or
(bad)
adc
push
addr16
mov
lock
push
lods
mov
jnp
mov
push
mov
lds
mov
mov
xchg
and
fisubr
in
(bad)
aas
shl
aam
push
mov
xchg
(bad)
lock
inc
scas
movs
cmp
push
rol
fwait
push
fwait
or
clc
ins
mov
pop
push
shr
lods
jecxz
loopne
xor
xor
out
mov
dec
dec
push
xchg
inc
jno
mov
pop
dec
cmp
in
lahf
ins
pop
fwait
jbe
jne
and
jbe
stos
inc
or
cmps
lock
push
mov
rcr
cmc
add
(bad)
mov
or
(bad)
sti
retf
or
sub
aaa
daa
es
sbb
test
or
cmp
jmp
jg
pop
lds
movs
ret
fmul
jbe
adc
push
dec
pusha
sbb
xchg
mov
and
aaa
mov
pop
ins
bnd
jmp
leave
and
out
mov
les
jmp
aad
xor
out
mov
xor
push
pop
in
jl
ja
cmps
xchg
imul
nop
xchg
(bad)
jle
ret
adc
shl
dec
or
shl
or
test
ins
xchg
test
mov
into
inc
xchg
sahf
inc
adc
jge
jo
aas
sub
ins
inc
xor
mov
mov
(bad)
mov
xchg
add
pop
jno
fisttp
aad
add
mov
mov
dec
xchg
stos
mov
fs
(bad)
xor
push
jmp
xchg
daa
out
inc
push
add
mov
sbb
stc
lock
inc
pop
xor
leave
into
outs
out
mov
fdiv
sar
mov
ss
or
das
(bad)
outs
sub
or
mul
mov
int3
dec
mov
jns
fsubr
jle
out
xchg
jae
aas
pusha
jmp
out
adc
ds
out
xchg
push
xor
shl
mov
jmp
mov
scas
jnp
mov
test
jns
rcl
pop
sbb
fstp
outs
add
mov
pop
pop
xchg
addr16
hlt
in
inc
(bad)
dec
jmp
hlt
aam
retf
lea
jmp
aas
or
(bad)
mov
push
push
mov
push
(bad)
in
pop
dec
mov
scas
pop
dec
cmp
std
and
dec
cmp
test
inc
cmc
or
mov
adc
sub
ror
and
(bad)
pop
inc
jae
pop
das
sub
aaa
add
retf
xchg
in
(bad)
out
xchg
xchg
movs
aad
into
jo
xor
fiadd
rcl
mov
push
nop
call
adc
or
enter
fnstcw
cmp
(bad)
out
dec
xchg
or
jmp
outs
(bad)
pop
aad
mov
jg
cdq
repz
jno
jg
stos
add
loop
daa
dec
test
mov
ins
inc
nop
sahf
shl
or
xchg
daa
push
inc
push
outs
xlat
add
xchg
sub
xor
xchg
sbb
push
cmps
pop
inc
mov
out
cld
jge
loope
push
scas
es
lods
data16
xor
xor
in
test
mov
xchg
mov
movs
aam
sbb
nop
aas
sub
cmpxchg
sahf
arpl
ret
xchg
jg
je
mov
out
call
inc
xchg
test
(bad)
jbe
inc
inc
mov
dec
adc
or
mov
(bad)
aad
stos
inc
rcl
fcom
cmps
mov
ja
sbb
mov
xor
lods
xchg
dec
mov
enter
dec
ins
shr
xchg
xchg
js
or
jecxz
shr
xchg
popa
cmp
dec
mov
aaa
fimul
popa
sti
imul
aad
into
in
pop
sub
sbb
test
ror
cmp
fst
fdiv
je
mov
push
mov
sbb
xlat
xchg
mov
ja
jge
mov
or
cs
je
inc
push
loopne
jg
int3
adc
stos
enter
sbb
arpl
and
jp
popa
fist
lock
dec
jae
xchg
xchg
pop
pusha
fwait
mov
icebp
fst
adc
leave
jmp
call
or
fist
mov
out
movs
mov
and
or
aam
cli
jp
xchg
jb
mov
stos
aas
pop
cmp
scas
xor
push
push
mov
cmp
cdq
std
and
jbe
cs
xchg
les
jmp
aaa
std
in
sahf
dec
jg
push
data16
mov
ds
xlat
test
push
in
xchg
sub
xchg
(bad)
pop
retf
add
fucomi
dec
outs
test
data16
jno
jae
dec
pop
inc
rep
lahf
cmp
outs
push
push
test
jo
cwde
icebp
aad
enter
int
cld
cmps
xchg
push
in
sbb
xor
lea
mov
int3
jbe
mov
clc
push
mov
or
jb
dec
enter
dec
dec
hlt
movs
lods
pop
(bad)
xchg
adc
add
or
cmp
call
movs
(bad)
movs
add
sbb
pop
mov
pop
jl
(bad)
pop
aad
xlat
cmp
push
imul
xchg
cmp
pop
mov
mov
pop
cmp
push
xchg
sub
sub
iret
sbb
test
test
fiadd
cmp
or
cmp
pop
pop
popa
stc
call
ror
out
in
aas
sbb
jmp
pop
inc
pushf
push
push
pop
cmp
cld
mov
arpl
icebp
push
data16
aas
jecxz
inc
add
lds
mov
adc
xchg
(bad)
into
aas
jno
dec
popf
scas
jno
(bad)
movs
stos
pop
out
nop
ss
pop
inc
aad
je
sbb
dec
lock
rcl
mov
xor
adc
int3
int3
pop
adc
fwait
inc
lods
out
aaa
retf
rcl
mov
jne
les
push
cdq
sub
outs
out
out
pop
xchg
xchg
lahf
inc
inc
push
xchg
mov
push
mov
cdq
cmpxchg
mov
in
pusha
mov
dec
pop
dec
js
(bad)
rcl
mov
adc
inc
inc
fnsave
loopne
je
mov
js
inc
in
pop
mov
push
or
outs
ss
(bad)
fimul
sbb
xchg
cmp
xchg
jb
das
xchg
cmp
mov
(bad)
stc
add
jae
pop
xchg
test
inc
aas
sub
push
pushf
adc
xchg
cmp
outs
jp
xchg
repz
jb
clc
pop
push
sbb
stos
jmp
jmp
push
dec
push
div
les
js
mov
xlat
test
movs
mov
imul
cli
ja
aaa
mov
adc
fst
push
push
inc
das
cli
scas
cmc
pop
iret
pop
into
sbb
cmps
scas
inc
pop
mov
out
dec
fst
and
je
jne
cli
(bad)
pop
nop
loopne
popa
xor
xchg
arpl
dec
rol
sub
xchg
xchg
jle
jae
mov
jno
adc
adc
pop
in
sub
movs
pop
cmp
xor
or
aas
lods
outs
retf
cld
pop
jo
xchg
mov
les
gs
pop
(bad)
nop
add
repnz
outs
out
movs
rcr
jnp
sub
mov
cmp
mov
je
and
adc
xor
or
mov
test
jne
mov
sbb
pop
sbb
cmp
data16
pop
mov
ficomp
jae
daa
and
cdq
jnp
inc
(bad)
pop
mov
pop
(bad)
dec
(bad)
jnp
and
addr16
push
inc
dec
inc
test
jb
inc
xchg
add
push
sahf
pop
jmp
mov
push
xlat
xchg
push
stos
js
add
rcl
cmps
call
and
out
(bad)
push
loope
inc
enter
fmul
mov
test
cli
(bad)
push
push
mov
pop
aam
lahf
(bad)
mov
fmul
xchg
call
(bad)
push
es
and
dec
sbb
int3
push
jbe
cmp
or
aaa
adc
es
stos
jb
(bad)
stc
ret
ins
outs
dec
dec
pop
(bad)
call
das
sub
imul
cli
add
sahf
(bad)
jge
in
fninit
and
(bad)
in
xchg
stos
mov
(bad)
test
dec
ret
scas
jmp
mov
xchg
pusha
xor
iretw
mov
call
mov
push
jb
int3
cdq
(bad)
aam
bnd
movs
sahf
rcl
or
cmps
xchg
lods
jo
arpl
inc
xlat
mov
aas
inc
nop
loope
sahf
mov
sahf
ss
mov
ins
push
popf
add
shr
push
xchg
inc
mov
(bad)
loop
fisubr
xchg
dec
fbstp
mov
fwait
jmp
test
test
jo
retf
out
push
mov
rcr
cli
fsub
and
int
xor
loope
jae
push
mov
mov
add
out
xchg
in
push
xchg
inc
retf
pop
ins
jmp
cmp
nop
mov
sub
add
addr16
or
push
or
pop
mov
aad
and
push
or
inc
je
push
popf
js
jae
push
adc
les
mov
mov
add
push
int
out
xchg
pusha
iret
rol
dec
out
fidivr
arpl
inc
push
popf
(bad)
jno
(bad)
jmp
push
cmc
xchg
inc
push
xchg
inc
push
(bad)
sahf
sub
mov
icebp
add
sbb
out
dec
pop
imul
cmp
xchg
aas
mov
icebp
push
and
inc
dec
cmp
fcmovnbe
and
lea
xchg
(bad)
and
loop
dec
cmp
les
jne
dec
into
rcl
in
adc
mov
inc
sub
mov
jne
in
retf
cmp
xchg
(bad)
shl
ret
mov
stos
cmp
(bad)
mov
fcmovb
dec
cmp
or
sub
(bad)
xor
mov
sahf
cmp
(bad)
rcl
fs
mov
outs
or
xchg
sbb
and
xor
cmps
xchg
jae
xor
in
ja
data16
int
inc
push
jp
jno
dec
pop
les
in
inc
inc
(bad)
std
mov
fidivr
cmp
push
lea
cmp
or
xchg
(bad)
or
(bad)
xor
pop
pop
xchg
xchg
test
gs
ins
rcr
enter
add
or
nop
xchg
rcr
mov
dec
movs
mov
pop
shl
inc
shl
jae
fisttp
add
inc
lahf
and
ficom
add
add
mov
fwait
rol
jb
test
sbb
test
test
inc
mov
jge
pop
and
int
(bad)
pushf
mov
xor
add
and
push
cmp
adc
scas
imul
xchg
imul
or
jae
mov
mov
and
mov
retf
icebp
ds
pop
or
ret
jmp
idiv
xor
mov
or
fwait
pop
lea
lahf
xchg
mov
enter
xchg
or
push
call
movs
mov
scas
cmps
add
and
jbe
ror
jae
sbb
in
mov
call
stos
cmp
pop
sar
pop
jmp
inc
(bad)
sbb
sti
or
in
xchg
xchg
xlat
(bad)
hlt
ret
jg
mov
aam
sub
jne
mov
(bad)
in
stos
or
(bad)
and
push
pop
lahf
mov
pop
xchg
ret
movs
or
jmp
mov
fld
(bad)
in
mov
dec
pop
push
mov
add
cld
mov
and
je
in
imul
nop
or
aad
jmp
adc
inc
stos
cli
xchg
mov
mov
or
icebp
fdivr
loope
mov
hlt
sbb
js
inc
xchg
stos
dec
inc
outs
into
lods
shr
pop
sbb
or
mov
adc
mov
add
rcr
pop
es
dec
or
mov
or
outs
push
mov
mov
fild
and
popf
mov
fidivr
pop
mov
sbb
test
cld
adc
cmc
jmp
(bad)
lock
mov
inc
test
retf
add
xor
sbb
sub
xchg
loope
(bad)
mov
stos
cmps
mov
test
push
imul
xchg
imul
(bad)
jl
dec
mov
repnz
stos
sub
out
int3
push
jns
je
jl
add
mov
mov
(bad)
push
ror
das
loop
imul
adc
and
movs
push
xchg
xchg
gs
hlt
stc
or
inc
inc
mov
mov
push
mov
pop
jno
cmp
or
push
jb
aas
xchg
fs
aaa
cmps
mov
aas
mov
push
mov
pop
sub
mov
test
mov
pop
jno
cmp
rol
(bad)
fdivr
(bad)
mov
xor
test
sti
push
lds
(bad)
mov
fs
lahf
and
jns
retf
in
leave
test
inc
mov
xchg
int
loopne
push
imul
jbe
xor
push
push
loopne
retf
cmp
imul
call
outs
fisubr
dec
std
mov
adc
cmp
(bad)
jno
sbb
adc
sbb
aad
mov
loop
sub
adc
in
and
mov
jecxz
inc
add
nop
test
jno
mov
adc
lahf
and
mov
xor
dec
add
int3
dec
xchg
loopne
xchg
mov
daa
add
mov
sbb
jno
ficom
push
iret
imul
cmp
inc
jns
loopne
pavgb
ins
inc
popf
xchg
jno
xchg
aaa
mov
sbb
push
xor
inc
and
or
jbe
shr
mov
ret
lods
ror
ins
adc
(bad)
adc
and
jle
call
ds
push
mov
sub
mov
pop
pop
jp
push
xlat
xlat
retf
push
scas
cmc
xchg
or
push
push
dec
(bad)
aas
mov
(bad)
cdq
mov
pop
out
push
int
jmp
dec
pop
outs
sub
push
(bad)
dec
mov
stos
enter
adc
or
(bad)
aas
jmp
mov
push
add
sbb
sub
data16
push
xchg
(bad)
and
sub
lock
ds
xchg
or
ss
retf
inc
jmp
shl
mov
push
stc
dec
inc
mov
or
xchg
gs
int
outs
in
push
xchg
mov
and
inc
pop
mov
jge
movs
ds
jnp
xchg
inc
out
mov
jp
les
gs
adc
pop
fistp
or
daa
mov
leave
das
dec
imul
push
fsub
cmc
sti
rol
in
test
test
(bad)
pop
cmp
inc
push
inc
mov
mov
loop
addr16
shl
adc
cmp
icebp
push
(bad)
jmp
inc
stos
jmp
adc
(bad)
jecxz
mov
or
sub
sub
aas
addr16
jp
push
cwde
cmc
dec
pusha
ret
push
inc
and
inc
test
loopne
cmp
xor
in
add
xchg
jns
sahf
shl
push
out
push
int
mov
push
jge
je
mov
add
rcr
outs
leave
cli
scas
stc
retf
inc
movs
aas
push
fistp
push
bound
push
sahf
dec
cmp
adc
mov
mov
(bad)
rol
push
xchg
mov
add
and
mov
inc
xchg
dec
mov
cmp
push
push
jg
addr16
pop
xchg
jmp
popf
(bad)
std
xchg
jle
ins
in
(bad)
int
jl
sub
cmp
jle
and
fxch
fcmovnb
push
sub
mov
pop
mov
sbb
jmp
loop
jb
fcmovne
iret
mov
pusha
outs
dec
inc
pop
mov
sub
movs
test
or
dec
xchg
mov
pop
adc
jbe
xchg
je
xchg
mov
sbb
sbb
dec
push
cs
popa
dec
push
stos
in
inc
nop
mov
ret
cmp
xchg
jne
(bad)
or
fidivr
retf
xchg
jnp
jbe
sahf
in
mov
mov
push
nop
xchg
pop
(bad)
outs
xchg
(bad)
fistp
sub
out
outs
mov
push
test
push
dec
fmul
enter
(bad)
dec
mov
xor
pop
pusha
xchg
stos
pop
adc
leave
dec
aas
dec
daa
mov
xor
inc
(bad)
xchg
cmp
jle
aas
fsubr
xchg
dec
cmp
sbb
fwait
xor
add
int
cmc
lock
ins
int3
and
outs
adc
je
cmp
aam
xchg
fdiv
out
and
xor
sbb
dec
sub
fstp
or
fldenv
sti
and
pop
rcr
aam
ror
jge
inc
fdiv
pop
movs
push
adc
mov
xchg
pop
je
mov
xchg
clc
es
dec
arpl
lea
adc
lods
daa
retf
repz
push
retf
gs
call
test
fild
xchg
daa
inc
xchg
jb
les
inc
or
mov
mov
and
adc
add
repz
push
rcl
sub
div
ds
xor
mov
aas
dec
ja
imul
test
aas
jp
mov
(bad)
jno
rcl
xchg
aam
fild
dec
out
gs
inc
sti
inc
add
in
push
outs
sbb
ror
sub
sbb
mov
push
(bad)
neg
or
scas
xor
jecxz
sbb
aas
xor
bound
inc
xchg
add
adc
xchg
pop
mov
xchg
jbe
inc
cmp
pusha
sub
mov
stos
aad
mov
ret
jle
gs
dec
pop
shl
or
adc
adc
rcr
xchg
jg
retf
cmps
lahf
jmp
ja
dec
xchg
pop
cwde
aas
mov
sbb
adc
sbb
outs
mov
arpl
add
(bad)
(bad)
int3
mov
in
xchg
clc
test
push
and
sub
cmp
mov
sub
int
cmp
sub
shr
xchg
cld
mov
scas
jno
inc
mov
adc
push
or
xor
shr
push
and
cmp
and
xchg
mov
add
fwait
nop
mov
out
dec
popa
pop
(bad)
xor
call
aas
and
jge
shr
rcr
aas
sbb
jmp
xor
test
int
test
imul
cld
pusha
lea
test
jo
rcl
and
and
inc
push
into
or
gs
sub
loop
inc
adc
int
test
xchg
cs
cli
cmp
popf
xchg
daa
pop
mov
leave
shl
iret
xor
or
or
lods
jns
pop
fidiv
pop
xchg
adc
cwde
jle
aas
int
(bad)
data16
cmp
push
add
aad
sti
stos
sbb
mov
jmp
cmc
push
les
xlat
dec
pushf
aas
mov
movs
mov
mov
scas
and
push
sahf
inc
(bad)
mov
push
add
repz
out
loopne
gs
xchg
(bad)
dec
mov
(bad)
in
push
es
xchg
sbb
addr16
inc
sbb
pop
push
and
in
xchg
jae
xchg
sub
mov
les
js
addr16
pushf
daa
adc
jbe
in
aam
push
mov
ret
jl
out
fcom
dec
sub
aas
inc
jp
mov
jge
mov
cwde
not
add
out
mov
mov
xchg
mov
push
sub
mov
add
add
test
es
mov
stc
jno
js
xchg
cmp
xor
das
inc
and
inc
arpl
es
rcl
pop
and
mov
or
push
jmp
mov
loope
dec
push
(bad)
mov
dec
add
rol
pop
mov
or
dec
xchg
xchg
cmp
cdq
arpl
cmp
pushf
fidivr
sbb
mov
pop
jg
inc
xor
sbb
dec
dec
mov
ds
fiadd
dec
inc
iret
xchg
(bad)
inc
jnp
push
stc
add
cwde
mov
mov
xchg
jp
push
iret
jmp
(bad)
pop
jmp
push
sbb
sub
cmp
mov
std
fsub
int3
pop
sahf
std
cwde
push
inc
dec
daa
mov
inc
push
jbe
aaa
add
pop
jge
pusha
mov
call
retf
mov
jns
push
or
mov
xchg
xlat
pop
push
add
(bad)
out
cmp
(bad)
aam
mov
leave
jbe
inc
fbstp
dec
jmp
stos
adc
push
mov
add
cdq
jno
adc
fisttp
mov
mov
pusha
fdiv
inc
push
pop
sbb
aas
movs
sbb
push
pusha
aad
rol
cwde
dec
popf
not
lds
inc
pop
outs
ficomp
xchg
push
add
jl
retf
and
mov
xchg
call
in
inc
pop
dec
inc
shr
mov
retf
retf
push
mov
push
jle
xor
mov
lock
pop
push
jnp
hlt
daa
mov
rcr
movs
push
inc
out
imul
fist
jbe
aaa
xor
jl
test
movs
sbb
in
sbb
xchg
out
xchg
or
pop
retf
js
sbb
out
adc
adc
fiadd
int
popa
test
fist
not
push
lds
sbb
xchg
push
pop
cmc
fwait
enter
ret
jo
pop
mov
mov
jae
mov
add
or
iret
dec
loop
push
ret
jnp
lahf
xchg
mov
call
vminps
lahf
push
aad
push
addr16
in
pop
out
adc
push
fst
movs
push
push
test
movs
das
fsub
test
in
cmp
xor
icebp
loopne
ins
or
or
(bad)
pop
cs
dec
mov
das
and
mov
dec
push
or
xchg
sub
outs
xchg
aas
xchg
(bad)
pop
mov
or
xchg
jnp
and
mov
xchg
in
pushf
cmp
mov
dec
sbb
in
mov
xchg
jge
addr16
cmp
inc
andps
xlat
dec
inc
clc
inc
jns
ja
adc
sub
arpl
jae
mov
inc
aas
sub
push
ret
sbb
xchg
xchg
mov
dec
enter
lea
cmp
aam
sbb
sub
or
and
call
push
loope
xchg
inc
sub
sub
aas
push
frstor
jmp
icebp
pop
mov
jns
rcr
xor
xchg
sbb
mov
addr16
or
pop
mov
(bad)
mov
js
push
sub
fcom
ss
xchg
outs
inc
jl
mov
fisttp
sbb
xchg
je
inc
rol
dec
out
or
and
loope
pop
cli
xchg
inc
mov
jno
icebp
jno
aas
mov
cli
test
mov
xchg
cdq
bound
and
sub
jb
push
jmp
popf
pop
sar
aas
ins
call
jbe
dec
push
or
push
inc
mov
idiv
clc
in
push
cs
or
(bad)
push
fst
sar
xchg
push
xchg
sbb
adc
cmp
je
test
test
mov
shr
enter
jecxz
pop
loop
and
inc
cs
inc
js
cwde
mov
add
retf
jmp
pop
adc
bound
cdq
pop
leave
pop
mov
js
xchg
div
imul
cld
cmc
mov
cmc
daa
jae
mov
mov
out
jmp
dec
sub
retf
in
push
aam
pop
cmp
sub
inc
test
shl
lea
xor
sbb
pop
clc
aad
test
sub
mov
push
push
mov
dec
sbb
gs
push
test
inc
movs
retf
imul
in
pop
ss
adc
sahf
mov
cmps
data16
fcom
dec
push
xor
cmp
(bad)
push
mov
inc
jns
ss
cmps
fild
sub
add
in
(bad)
cmc
sar
call
jmp
ja
mov
add
(bad)
stos
xchg
enter
push
xor
iret
push
xchg
push
das
jnp
repz
aas
cli
add
mov
dec
add
mov
jl
xor
sub
xor
sub
leave
out
pusha
jge
and
or
and
sbb
jne
xchg
xor
pusha
dec
mov
mov
mov
mov
sbb
sbb
mov
jno
jae
push
rcr
jecxz
pop
xchg
jae
inc
mov
cwde
(bad)
scas
xor
test
aad
iret
xchg
shl
add
cmp
mov
ret
hlt
retf
leave
test
cmp
movs
jl
pop
jbe
fisttp
xor
push
pop
dec
out
in
pop
mov
into
loop
and
scas
inc
ds
aaa
adc
mov
les
sar
or
addr16
(bad)
fimul
xchg
jmp
je
jmp
shl
cwde
fidivr
mov
jmp
(bad)
dec
push
cmp
xor
shl
adc
and
repnz
dec
hlt
dec
ficom
xlat
pop
add
cwde
rcl
push
popf
mov
xchg
inc
out
inc
cmps
rcr
inc
sub
cmps
xchg
xchg
movs
jae
aad
clc
(bad)
lods
shl
xchg
or
pop
stos
rcl
dec
rol
sbb
xchg
scas
aam
(bad)
fsub
jmp
adc
mov
xchg
inc
xchg
xchg
mov
aas
push
ja
pusha
repz
data16
std
lock
pop
ret
mov
cmc
mov
ret
jge
fucom
cmp
xchg
xchg
test
imul
enter
adc
xor
inc
fwait
inc
mov
push
and
je
fucomi
ror
and
mov
enter
mov
dec
cdq
cmp
gs
xor
xor
xlat
ja
scas
or
xor
jo
or
out
(bad)
mov
fldenv
xor
mov
pop
pop
push
jge
aas
fidiv
rcl
push
pop
dec
(bad)
(bad)
outs
pop
jg
leave
adc
clc
test
mov
mov
bound
aaa
dec
xor
clc
(bad)
lods
jp
cdq
sub
inc
cmp
popa
inc
test
adc
cmp
dec
mov
push
(bad)
aam
test
ins
push
out
xchg
je
xlat
xor
mov
push
adc
out
dec
inc
cwde
data16
into
push
call
mov
mov
call
xlat
mov
push
xchg
call
pop
and
pushf
mov
into
stc
dec
adc
push
out
cmps
(bad)
stos
sub
cld
and
xor
push
sbb
xor
mov
test
enter
pop
sbb
adc
shr
(bad)
ja
ret
dec
xchg
jecxz
lods
shl
mov
mov
xchg
push
movs
push
and
or
bound
push
aam
mov
fs
push
pop
mov
xor
cmp
int
add
xor
ja
push
call
and
outs
xor
push
or
mov
loop
scas
xor
add
ret
push
(bad)
sub
adc
sbb
aas
xchg
push
call
pusha
push
dec
dec
daa
adc
cmp
sub
test
enter
jns
xchg
mov
fwait
lods
movzx
push
mov
jp
gs
cwde
jecxz
xchg
sbb
lods
sbb
outs
add
dec
repnz
push
dec
jmp
adc
adc
dec
cmp
mov
push
(bad)
iret
mov
daa
scas
dec
pusha
add
mul
into
push
mov
loop
xor
add
aad
test
inc
and
mov
das
inc
dec
fdiv
xchg
cmc
push
in
out
in
xchg
es
jecxz
inc
cmps
inc
cmp
imul
xchg
push
xchg
call
xchg
jbe
fcom
mov
jnp
mov
in
popf
xor
in
mov
pop
adc
iret
loop
aas
jmp
xchg
adc
push
dec
inc
(bad)
or
jae
ret
out
mov
jb
in
jg
push
inc
ja
test
mov
or
pop
or
repz
sbb
inc
xor
imul
(bad)
mov
mul
imul
adc
fld
add
mov
scas
ror
jge
xchg
ret
xchg
test
les
jge
or
cmp
pop
sub
cmp
adc
lds
outs
pusha
push
pop
cmps
push
pop
(bad)
and
cdq
jp
movs
inc
mov
(bad)
imul
movs
scas
push
dec
and
cmp
inc
cmp
test
push
daa
mov
add
cmp
jg
push
addr16
xchg
mov
xor
ror
pop
mov
jl
jbe
fs
cli
aas
aaa
cmp
pusha
add
cmps
inc
push
icebp
mov
sub
pop
push
les
xchg
outs
push
shl
js
push
jae
mov
aaa
(bad)
sub
pop
jno
push
fist
adc
add
iret
pop
dec
ret
jb
addr16
mov
push
push
mov
(bad)
adc
dec
popa
push
sbb
inc
dec
xor
or
push
dec
xchg
fprem
aas
in
jae
hlt
cdq
popa
ror
(bad)
push
sbb
adc
jne
jne
fadd
aad
shl
push
aas
add
(bad)
jbe
xchg
frstor
inc
imul
enter
pop
sub
clc
mov
mov
push
xchg
mov
push
mov
(bad)
stc
aas
sbb
xchg
adc
es
cmps
and
loope
aad
enter
retf
cmps
mov
repnz
mov
dec
xchg
stc
mov
test
cmp
adc
out
in
jmp
rcr
pop
enter
xor
jns
jae
push
pop
xchg
call
enter
dec
or
adc
leave
xchg
xchg
sbb
or
mov
mov
dec
cdq
add
add
sub
inc
enter
imul
xchg
push
pop
stos
inc
pop
and
fs
cs
cmp
cmp
mov
inc
test
and
aad
(bad)
fwait
retf
icebp
aaa
icebp
test
aam
enter
or
out
cmps
dec
int
jle
pop
adc
add
add
xchg
push
or
xchg
sti
icebp
stc
push
pop
xchg
push
scas
inc
scas
cmp
call
or
inc
out
mov
add
shl
jb
(bad)
xchg
xor
jg
jne
out
cmp
daa
push
add
test
pop
cmps
aas
xchg
iret
xchg
imul
add
mov
test
xor
adc
cmp
mov
pop
loopne
jne
mov
pop
sahf
jb
pop
xchg
fist
popa
jmp
mov
jae
sub
sbb
or
push
inc
pop
inc
xchg
inc
in
adc
sub
push
loop
adc
mov
add
mov
shr
xor
ds
adc
retf
inc
mov
jmp
imul
fmul
pop
pop
xchg
aaa
fdivr
and
pop
xchg
mov
call
aas
test
sub
out
ret
fwait
sti
jo
cmps
cmp
mov
sbb
xchg
add
ret
outs
sub
je
pop
lods
push
sbb
hlt
fcom
dec
or
xchg
je
xor
add
ret
adc
pop
xor
mov
sub
adc
or
sub
cmp
xor
push
retf
cli
xor
int
repz
aas
(bad)
lods
addr16
dec
cmp
or
test
mov
mov
in
loop
xchg
dec
xchg
inc
adc
jp
push
inc
inc
inc
out
jns
add
aad
sbb
jmp
dec
gs
inc
pop
push
popa
aam
inc
add
addr16
push
scas
das
sub
add
xor
retf
fwait
int
push
jbe
mov
push
movs
shr
fst
sbb
jle
mov
adc
fnsave
pop
rcl
cmp
pop
pop
mov
cmp
aam
sub
xchg
mov
in
scas
dec
(bad)
and
test
dec
cdq
mov
mov
xchg
mov
push
cli
push
pop
push
fstp
push
xchg
mov
rol
aas
test
leave
add
pop
jg
xchg
ja
xchg
iret
mov
xchg
mov
cli
hlt
jecxz
pop
add
adc
and
mov
jne
jb
xchg
push
int
outs
rol
(bad)
(bad)
js
push
xchg
jns
mov
dec
fbstp
jb
loopne
call
in
in
xchg
add
call
mov
xchg
push
pop
enter
add
loopne
test
inc
cmp
mov
inc
adc
movs
sbb
inc
neg
mov
jno
aam
cmp
(bad)
jmp
fwait
sub
pop
mov
inc
ss
fucom
pop
xor
(bad)
test
adc
or
pop
scas
xchg
xor
sbb
pop
cmps
pop
inc
adc
ror
cdq
lock
out
inc
pop
je
rol
and
aas
idiv
scas
(bad)
ins
dec
sbb
inc
adc
push
pop
and
(bad)
xchg
and
ins
or
aad
aad
or
jecxz
push
jns
fsub
xchg
inc
mov
(bad)
fwait
cmp
mov
fldenv
mov
xchg
push
aad
xchg
in
enter
xlat
or
or
mov
jecxz
pusha
cld
(bad)
out
sbb
in
adc
push
xchg
mov
test
retf
xor
and
sbb
pushf
call
and
cmp
pop
ss
sbb
shl
xor
mov
mov
(bad)
dec
adc
xchg
mov
xor
retf
push
mov
cwde
push
and
in
mov
ss
and
clc
loopne
inc
xchg
cmp
dec
push
cmp
cli
sub
sub
add
in
pop
mov
push
cli
cld
or
lds
or
nop
outs
aad
repz
lahf
mov
dec
sbb
mov
add
js
push
xchg
xchg
cld
xchg
sub
ds
and
in
push
jle
ret
xor
js
pop
ret
je
sbb
mul
inc
call
or
jl
cwde
aas
xchg
ret
cmps
or
(bad)
jmp
mov
sub
and
jmp
push
mov
inc
sbb
and
and
aad
mov
push
(bad)
stc
inc
cld
pusha
add
(bad)
mov
dec
mov
inc
sti
cwde
(bad)
cmp
xor
mov
push
stos
push
mov
aas
cs
or
mov
sbb
in
mov
dec
jns
sub
ficom
aam
fidivr
mov
push
popa
push
sub
fmul
pop
aad
xchg
dec
xor
pusha
inc
and
out
mov
push
xchg
xor
and
cmp
xchg
mov
jno
lea
jl
aad
(bad)
popf
xchg
or
xchg
cmps
xchg
int
clc
sub
mov
and
push
push
cmp
mov
mov
mov
and
enter
std
inc
stos
loopne
xchg
loop
jo
lods
hlt
or
jecxz
js
aad
xor
mov
or
scas
xchg
ret
mov
adc
mov
out
mov
arpl
sub
daa
addr16
sub
cmps
fwait
sbb
gs
mov
retf
mov
test
sub
(bad)
loop
cwde
ret
inc
push
push
ret
xchg
adc
cmp
inc
(bad)
popf
mov
gs
jl
inc
mov
icebp
retf
fisubr
test
dec
ret
cmp
(bad)
scas
pop
mov
cli
aaa
adc
adc
dec
stc
jno
(bad)
mov
dec
jo
lods
pushf
or
addr16
lock
mov
sbb
pmaddwd
inc
add
iret
jg
ja
pop
xor
adc
xchg
dec
je
mov
jmp
cmp
add
push
inc
or
pop
push
mov
or
ror
dec
dec
inc
iret
mov
loopne
xchg
sar
ins
lods
mov
cdq
push
xor
adc
lahf
sbb
jle
jns
push
aad
stos
test
hlt
fcom
(bad)
and
mov
nop
pop
test
pop
dec
ret
cmc
in
call
mov
ss
(bad)
sub
ins
retf
dec
(bad)
xchg
shl
aas
int3
nop
sbb
push
inc
mov
add
(bad)
pop
enter
xchg
add
inc
mov
dec
sbb
movs
ret
mov
cmp
jnp
inc
pop
and
xor
or
imul
popf
mov
loop
in
push
fcomp
fst
jb
enter
add
sbb
push
adc
jb
bound
ret
jb
add
daa
sub
rcr
xchg
dec
ror
fimul
test
inc
sub
jg
push
fcmovne
daa
mov
push
sub
sti
sbb
xchg
mov
in
mov
aaa
imul
fdivr
sub
push
push
enter
adc
inc
enter
mov
mov
ins
adc
mov
jno
sub
cmp
jo
push
xchg
call
imul
xchg
ror
and
dec
dec
push
ja
retf
loopne
(bad)
mov
push
ss
jecxz
rep
push
push
lods
or
mov
(bad)
mov
pop
daa
mov
xchg
dec
idiv
hlt
pushf
rcl
pop
imul
mov
movs
mov
(bad)
fist
mov
clc
mov
inc
aad
arpl
stc
xchg
jae
(bad)
loop
push
nop
mov
(bad)
inc
pop
fist
push
pop
test
mov
fwait
fs
(bad)
fst
(bad)
xchg
fistp
aad
jmp
xchg
hlt
mov
mov
popa
inc
bound
mov
stc
jg
jbe
xchg
inc
in
je
mov
dec
popf
xchg
inc
jbe
aas
jbe
add
jns
ret
cmp
sbb
cmp
adc
stc
stc
mov
outs
imul
push
inc
(bad)
dec
imul
cmp
mov
cwde
aam
aad
mov
mov
rcl
movs
iret
rol
ret
mov
das
push
adc
jl
push
fiadd
xchg
(bad)
repnz
mov
sbb
sbb
into
jnp
call
jecxz
mov
inc
rcr
ret
call
arpl
test
adc
adc
cmp
loop
nop
xchg
jmp
mov
cmpxchg8b
sbb
jmp
cdq
mov
xchg
data16
xchg
ins
ins
fist
gs
test
xor
div
jecxz
push
pop
fild
pop
add
cmps
xor
pop
int
in
push
jbe
mov
cmp
add
imul
inc
mov
out
lea
out
push
std
cmp
mov
xchg
bound
cli
lahf
pop
push
enter
in
pop
push
(bad)
movs
dec
push
or
repnz
xchg
mov
call
xchg
and
mov
lea
hlt
inc
fild
pop
fisttp
add
xchg
adc
stc
pop
imul
pushf
(bad)
call
lock
push
xchg
xchg
rcl
pop
popf
cli
push
pop
clc
aam
stc
xor
cs
push
retf
or
jge
inc
ds
(bad)
xor
push
(bad)
mov
mov
jge
les
daa
pop
inc
mov
dec
(bad)
push
push
ret
dec
mov
mov
popa
mov
sub
sbb
xchg
or
pop
popa
gs
mov
fbld
jmp
xchg
fidivr
dec
add
cs
and
xchg
dec
loopne
fsubr
xlat
pop
enter
push
aaa
jb
retf
imul
retf
jmp
and
(bad)
dec
frstor
add
outs
repz
mov
cmp
scas
mov
sbb
(bad)
loope
jecxz
sbb
test
pop
dec
pop
cld
push
add
iret
jne
adc
fs
lahf
adc
lds
cs
pop
inc
shl
jmp
ins
dec
xor
(bad)
ror
jg
cmp
cmp
xchg
jne
test
pop
sbb
cmp
xchg
pop
int
imul
mov
aaa
repnz
cmp
out
add
(bad)
mov
sar
outs
inc
push
imul
cmp
dec
mov
ror
push
ret
in
pushf
(bad)
sbb
cmp
adc
aas
push
aad
into
in
jge
std
push
aam
das
ja
mov
inc
pop
jmp
inc
std
dec
aad
mov
jle
sub
stos
ds
mov
je
push
(bad)
punpcklbw
dec
push
sar
ins
ins
movs
sahf
xchg
ds
(bad)
fldcw
mov
dec
mov
xchg
sahf
jecxz
sub
enter
stos
call
add
jae
out
push
xor
mov
dec
retf
pop
push
push
(bad)
(bad)
aas
shl
arpl
xchg
or
sete
or
jp
sbb
and
iret
cmp
mov
test
movs
daa
dec
or
xor
and
(bad)
mov
add
jnp
push
jmp
adc
mov
push
mov
into
mov
mov
inc
outs
cmps
arpl
mov
sti
xor
fbstp
inc
mov
(bad)
jmp
arpl
mov
test
inc
bound
mov
xchg
push
or
jecxz
jge
mov
fisubr
or
call
push
pusha
cli
lock
cmovo
dec
push
and
dec
jp
or
ins
jp
mov
dec
mov
sti
pop
(bad)
xor
sbb
outs
inc
ficomp
ja
cwde
fst
cmp
imul
ja
loopne
pop
pop
xchg
sar
push
xchg
imul
sti
xor
add
enter
mov
pusha
pop
loopne
xor
out
jg
cmp
adc
dec
repz
rcl
jne
or
mov
inc
push
push
mov
mov
enter
cwde
cmp
mov
cmp
int
xchg
ins
jg
dec
in
jecxz
aas
and
(bad)
pop
push
pop
aam
inc
push
add
inc
adc
inc
pop
inc
and
cmp
ja
pop
xchg
xor
dec
jp
mov
sahf
cmp
cmps
inc
clc
sub
rcl
call
gs
cmp
loopne
mov
loopne
arpl
xor
jg
ss
dec
jo
repz
inc
xchg
movs
mov
mov
out
test
xor
sub
inc
xor
pop
in
xchg
fild
and
int3
add
xchg
push
arpl
(bad)
daa
mov
jmp
retf
jns
mov
mov
pop
pop
cmp
mov
pop
xchg
pop
pop
sti
dec
imul
xor
shl
and
js
inc
jnp
sub
dec
std
shl
cs
or
xor
pop
ins
hlt
adc
mov
aaa
scas
sbb
ds
sub
xchg
cdq
or
mov
xchg
cmp
pop
mov
adc
lds
push
mov
push
dec
(bad)
(bad)
sbb
mov
mov
pop
jge
pop
test
into
inc
add
into
es
scas
push
adc
jl
lock
shl
jmp
ins
ss
gs
enter
(bad)
cmps
(bad)
inc
loope
xchg
sbb
mov
in
enter
dec
jg
xor
pop
fs
xchg
les
cmp
fbld
enter
iret
outs
fwait
out
dec
inc
(bad)
dec
sub
scas
xor
outs
push
sbb
xchg
out
ds
stc
in
mov
shl
push
mov
xor
adc
mov
or
jmp
sbb
adc
jge
xor
push
jne
mov
int
repz
(bad)
std
push
sbb
add
inc
stc
lea
gs
mov
cmp
nop
adc
iret
and
and
std
in
xchg
xchg
xchg
sti
ja
jae
nop
inc
push
cmp
mov
sahf
pop
loope
aas
call
pop
popa
jo
sbb
jecxz
cli
movs
pop
dec
xlat
rol
imul
add
shl
js
xor
pop
arpl
cmp
mov
loope
loopne
in
mov
sbb
outs
fsub
ror
cmps
pop
fistp
push
xchg
pop
pop
cmc
mul
push
pop
pop
aaa
inc
xchg
xchg
popa
or
dec
pop
(bad)
adc
jmp
lock
(bad)
cld
add
inc
sbb
jmp
push
sbb
xchg
pop
mov
and
cmps
rcl
fldcw
push
sar
cmps
icebp
test
rol
retf
fwait
lods
nop
mov
xor
adc
cli
xchg
cmp
test
cmp
(bad)
popf
sub
jbe
and
pop
cmp
xchg
sbb
loopne
xchg
mov
push
mov
test
or
mov
daa
sbb
xchg
fcomp
div
(bad)
ins
sbb
xchg
pushf
xlat
push
clc
cmps
aaa
(bad)
pop
inc
sub
xchg
mov
dec
mov
in
sub
lods
lods
push
repz
mov
lods
sbb
daa
sbb
jge
in
fdivr
bound
inc
add
mov
xchg
mov
xchg
push
js
std
mov
retf
mov
cmp
leave
pop
(bad)
retf
cmp
mov
sbb
or
jae
xchg
ficomp
push
pop
das
shl
inc
in
mov
(bad)
adc
out
push
pop
xor
adc
popa
push
sub
jae
aas
les
js
push
pop
adc
sbb
jge
jge
mov
fiadd
int
loop
mov
cmps
xchg
inc
push
sub
jb
fidiv
mov
cmps
xchg
mov
pop
outs
lea
aam
loope
out
aas
sub
bound
sbb
jo
and
loop
push
frstor
xchg
ja
shl
test
cmp
xchg
jo
sbb
inc
inc
cmp
ins
inc
pop
dec
cld
repz
frstor
idiv
push
push
pop
out
dec
iret
imul
inc
inc
fcom
jmp
sub
inc
popa
xlat
sbb
and
jns
push
popf
mov
sbb
stos
inc
adc
xor
mov
xchg
xor
mov
sub
jo
xchg
aaa
test
mov
jne
mov
pop
scas
rol
pop
jns
jge
in
int3
aas
inc
mov
int
mov
je
add
cmc
cmp
div
cli
(bad)
or
in
jle
pop
icebp
pop
(bad)
sub
bound
(bad)
ret
mov
xchg
cs
adc
sbb
xchg
jnp
adc
std
stos
inc
pop
jno
stos
mov
mov
call
fsub
jmp
mov
mov
je
fild
call
or
or
test
stos
inc
call
and
leave
push
push
mov
hlt
shl
ja
mov
cmp
call
cmps
pop
sbb
push
gs
out
xchg
xchg
fimul
inc
cmp
(bad)
call
outs
es
movs
call
adc
and
xor
inc
jo
sbb
out
dec
mov
sti
mov
inc
adc
aaa
adc
cmp
cmps
xchg
fisttp
jg
inc
jg
fs
push
iret
mov
push
xchg
push
aam
rol
mov
push
xchg
aam
adc
cwde
dec
add
lea
es
jno
leave
push
lock
and
ja
repz
fcomi
dec
sub
add
xchg
jns
adc
btr
mov
mov
iret
mov
je
fdiv
adc
jns
repnz
push
fist
aad
mov
inc
aad
iret
stos
xchg
push
fiadd
push
mov
cwde
scas
aaa
call
repz
mov
sbb
jae
enter
je
mov
enter
out
xor
rcr
and
and
jl
inc
ret
mul
(bad)
pop
cmp
pop
dec
push
xchg
add
aas
inc
out
xor
push
repz
push
cdq
dec
outs
stc
(bad)
and
faddp
gs
or
mov
nop
fs
or
pop
xchg
(bad)
outs
call
add
into
dec
xchg
dec
mov
or
jbe
mov
bound
push
cmp
or
arpl
push
sub
ins
fst
dec
(bad)
stc
les
mov
push
leave
lea
ficomp
xor
cwde
sbb
(bad)
pushf
sub
cs
inc
popa
sar
pop
or
lods
enter
in
rcl
pusha
inc
sub
mov
sbb
std
dec
dec
sub
aaa
jbe
sti
dec
mov
inc
sbb
dec
push
push
add
hlt
push
push
xor
dec
(bad)
ja
aad
mov
dec
mov
out
push
fld
fldcw
dec
inc
cli
stos
sbb
adc
rcl
add
fisttp
pop
jge
aaa
inc
jae
(bad)
(bad)
clc
popa
(bad)
mov
xchg
xchg
les
sub
daa
lahf
cmp
fucom
add
xchg
xchg
aam
movs
lds
mov
popf
outs
sbb
mov
imul
shl
pop
add
(bad)
ss
int3
ror
call
into
imul
mov
cmovnp
sbb
pop
(bad)
enter
jecxz
fwait
xchg
iret
mov
fimul
arpl
or
loope
cmp
in
popf
movs
ins
iret
enter
xor
dec
adc
int3
xchg
bound
outs
aas
in
fwait
cmps
out
outs
mov
xchg
mov
js
sar
mov
xchg
pop
push
inc
das
jge
mov
pop
shl
sbb
lahf
add
jl
arpl
add
lods
(bad)
push
popf
sub
ds
dec
aas
out
xchg
fs
das
pop
sbb
out
xor
pusha
enter
mov
jmp
mov
iret
(bad)
jmp
mov
xchg
in
lahf
call
dec
popa
mov
daa
and
sub
sub
push
pop
xor
nop
stos
push
jne
adc
retf
jg
cmp
ficom
call
std
jo
imul
mov
push
sbb
xor
iret
xor
jecxz
cmp
adc
xchg
mov
lea
xchg
addr16
retf
idiv
inc
xor
ins
adc
mov
jo
inc
inc
rol
push
push
xor
add
mov
and
(bad)
fisttp
mov
(bad)
and
imul
sbb
ret
cli
(bad)
fistp
nop
repz
shl
jns
test
inc
fdivr
movs
cwde
sti
bound
cmp
cmps
jmp
rol
(bad)
xor
call
sub
push
jl
push
movs
rcl
imul
sbb
mov
xchg
pop
push
sub
aad
enter
movs
xchg
push
xchg
test
xor
mov
cdq
je
arpl
mov
dec
sub
lock
and
out
jle
inc
mov
sar
jg
call
lea
sbb
adc
sub
out
enter
(bad)
mov
into
pushf
leave
inc
outs
not
or
movs
push
sub
test
adc
jmp
jl
xor
cmp
rcr
ror
cmp
push
nop
loop
push
cli
(bad)
and
pop
fcom
cwde
mov
jg
lahf
or
cmc
aas
test
mov
push
test
sbb
pushf
jecxz
in
scas
call
xchg
cdq
imul
pop
out
or
rcr
cmps
fmul
jnp
enter
mov
clc
ret
pushf
int
mov
sub
or
iret
mov
aas
or
mov
mov
jb
xchg
push
nop
je
retf
push
cmp
push
jb
adc
or
das
outs
mov
lods
dec
push
adc
pop
sub
aas
out
shl
push
out
inc
scas
fisttp
mov
cmp
and
or
cmps
fmul
xchg
sub
or
adc
test
inc
push
mov
sbb
xor
dec
les
add
cmp
int
jge
mov
cmp
adc
test
imul
inc
push
push
ins
xchg
out
shr
jmp
ret
cld
inc
mov
jo
sbb
push
(bad)
push
jmp
in
cmc
and
xor
and
aad
pop
inc
dec
jns
movs
addr16
lods
fadd
push
pusha
add
mov
je
test
push
test
retf
hlt
jne
repz
xor
mov
ins
pop
retf
xlat
xchg
cmp
jmp
sub
es
fisttp
fs
imul
loope
sbb
rcr
xchg
popa
mov
pop
push
imul
aam
xor
dec
jecxz
adc
cmp
sbb
add
mov
sahf
xor
or
dec
mov
mov
push
mov
adc
xchg
in
pusha
push
adc
test
dec
mov
jg
jge
xor
or
add
push
inc
fist
mov
mov
stos
aaa
jns
jno
sbb
dec
xor
icebp
ins
popf
aas
fidiv
(bad)
clc
jo
std
cli
mov
xchg
mov
add
push
call
popf
xchg
ror
pop
cmp
xchg
jmp
pop
sub
inc
in
loopne
add
mov
sbb
add
xlat
and
or
dec
ret
push
xor
and
sub
jge
xchg
push
adc
aas
sbb
push
test
movs
cdq
push
adc
inc
iret
mov
pop
pop
adc
or
pop
or
inc
xchg
(bad)
push
das
cmps
inc
aad
jl
lea
mov
sub
xchg
cmps
out
dec
inc
sahf
rcr
dec
xchg
adc
push
xchg
jns
or
ja
sti
xor
pop
bnd
push
push
mov
ss
pcmpeqb
ret
jge
push
iret
xchg
iret
je
call
out
sub
in
cmps
cmp
pop
cmps
sbb
adc
jne
stos
loope
mov
push
imul
add
dec
push
jae
sbb
xor
mov
loope
jecxz
daa
sbb
mov
loope
dec
call
xor
cmp
dec
ror
jbe
inc
xor
mov
jmp
push
xchg
lea
inc
ins
mov
cmp
add
push
fistp
dec
cwde
sbb
xchg
retf
push
xchg
(bad)
push
mov
fwait
(bad)
mov
pop
mov
js
and
fsubr
push
(bad)
rol
rol
icebp
pop
push
xchg
jmp
in
nop
sub
addr16
aad
outs
aam
aaa
and
fucomp
adc
mov
retf
nop
push
movs
aas
mov
cmp
push
aaa
mov
ret
xchg
push
sar
xor
push
dec
xchg
repz
stos
push
xchg
xchg
out
xlat
enter
sbb
cmovo
sahf
iret
push
jp
pop
push
sbb
into
mov
mov
retf
call
and
inc
stos
loopne
jae
mov
out
sbb
scas
(bad)
push
xchg
lock
push
bound
mov
mov
xor
leave
(bad)
and
fist
sub
mov
les
jne
jbe
mov
sub
lock
test
hlt
(bad)
sbb
xor
dec
repnz
ins
enter
and
daa
or
push
push
sar
pop
fld
xchg
out
xlat
add
inc
mov
(bad)
(bad)
cmp
cmc
(bad)
fild
stc
jne
sar
daa
rcr
loope
fisubr
stc
clc
sar
test
mov
dec
inc
inc
sbb
neg
cmp
cmps
ret
aas
gs
xchg
aas
sub
dec
aas
and
dec
out
(bad)
xchg
push
jo
lea
push
cwde
mov
push
lds
sbb
push
push
sahf
adc
inc
sub
lods
jb
setl
mov
sbb
loope
push
test
mov
inc
xor
jl
rcl
lds
inc
dec
and
xor
jl
nop
(bad)
fild
loop
sar
out
xchg
jmp
pushf
(bad)
xor
xor
sub
xchg
mov
loop
inc
out
push
pop
mov
fsub
movs
pushf
sahf
pop
arpl
cmp
adc
mov
push
and
jge
pushf
dec
shr
sub
into
xchg
popa
inc
xchg
test
push
push
test
into
xor
add
pop
pop
lods
push
and
das
mov
popf
dec
(bad)
jnp
lea
fist
jno
inc
shr
sbb
add
push
jge
add
sub
push
adc
je
mov
sbb
sub
add
jle
mov
test
push
adc
sbb
cmps
(bad)
movs
mov
jnp
mov
mov
xchg
(bad)
stos
mov
add
imul
out
rol
int
xor
dec
retf
xchg
sar
mov
sbb
xchg
clc
aas
dec
pop
rcr
ret
xchg
int3
sahf
fild
inc
inc
(bad)
jl
outs
sahf
cmc
inc
and
xchg
inc
lds
or
mov
int
and
adc
aas
jo
sbb
in
das
pusha
test
or
cmp
dec
aam
aam
xchg
popa
xchg
not
or
mov
repnz
pop
shr
push
mov
aam
daa
add
aad
cs
in
out
push
test
aaa
xor
mov
mov
jmp
mov
ret
out
and
test
mov
or
pusha
xor
add
sbb
cmps
mov
xchg
jo
adc
clc
xlat
shl
mov
hlt
and
shl
stos
pop
(bad)
cmp
inc
or
or
shl
xor
sbb
mov
mov
cmp
pop
in
in
pop
xchg
mov
inc
in
rol
xchg
unpcklps
fstp
ret
enter
(bad)
mov
dec
aam
inc
enter
adc
ficom
(bad)
neg
imul
push
adc
(bad)
mov
out
ss
pop
adc
pusha
push
push
cmp
jo
shl
push
push
dec
in
fs
ins
jbe
in
in
or
(bad)
cdq
cdq
fidivr
jecxz
xchg
cmp
jp
mov
popa
and
xlat
popf
add
aad
add
dec
and
mov
cmc
sub
xor
cmp
inc
or
mov
pop
push
ja
jae
jne
pop
jl
or
mov
xchg
and
fldenv
loopne
mov
je
xchg
cmp
ss
ror
cmp
mov
pusha
(bad)
xchg
jb
pop
pop
mov
sbb
pushf
sub
jbe
pusha
push
inc
daa
jle
(bad)
sar
xor
mov
xchg
add
(bad)
mov
xchg
jmp
xchg
in
push
xor
mov
jnp
inc
jae
pop
add
or
fs
pusha
rcl
fldl2t
shr
xor
mov
xchg
shl
jle
pop
(bad)
in
je
xchg
arpl
inc
push
cmp
cli
sub
lea
sbb
dec
xchg
lods
rcr
lahf
popa
stos
lea
das
icebp
xchg
jl
push
je
mov
sub
fild
adc
lods
ficomp
cmp
ret
aas
add
mov
cmps
and
push
push
mov
stos
dec
sti
cmc
jae
enter
add
in
test
scas
data16
jmp
xchg
jmp
xchg
repz
ret
stos
lock
sub
mov
retf
xchg
sbb
int3
test
mov
inc
or
loope
stos
inc
xchg
adc
xor
or
shr
push
cmc
sbb
jno
vpmaxsw
xchg
xchg
cmp
loope
int3
push
jne
movs
push
dec
div
imul
jne
xchg
xor
inc
imul
stc
or
and
pop
in
in
add
mov
sbb
arpl
xchg
icebp
fcmovnb
pop
test
jne
mov
or
and
ss
mov
and
inc
ret
push
cmc
(bad)
shr
or
xchg
mov
and
sub
xchg
mov
sar
fsubrp
sub
movs
mov
int
inc
inc
inc
out
push
cli
mov
cwde
dec
iret
lds
sbb
mov
cli
pop
repz
adc
test
and
(bad)
loope
xchg
(bad)
sub
push
scas
pusha
std
std
scas
aas
lea
sbb
lds
sbb
dec
(bad)
mov
dec
out
push
inc
mov
xor
mov
mov
jp
jne
xchg
add
sub
js
inc
outs
fcomp
jns
mov
pushf
jb
cmps
sbb
xlat
in
aas
fnstsw
aas
push
lods
mov
cmp
es
fist
sub
mov
sub
test
and
mov
inc
and
jb
fiadd
ja
fwait
stos
inc
sub
scas
mov
je
add
xchg
mov
or
push
dec
inc
add
jns
jno
mov
(bad)
mov
jne
retf
inc
push
cmp
icebp
jle
adc
mov
sub
pop
shl
das
bound
xchg
sbb
add
stc
jge
aas
push
loop
loopne
pop
loop
cmp
shl
add
sar
sub
jbe
je
faddp
xor
jo
mov
push
test
cmp
sbb
xlat
dec
xor
test
push
pop
imul
(bad)
sub
cwde
or
retf
repz
jl
add
pushf
cmp
inc
movs
loopne
(bad)
outs
jmp
pop
cs
inc
imul
call
scas
jmp
push
aam
fist
ror
add
les
adc
mov
and
adc
div
push
dec
push
ins
mov
rcr
adc
call
cmp
cld
sbb
jns
push
push
mov
ins
lds
and
je
jbe
push
jo
jge
stc
sbb
jb
ins
and
das
xchg
fisttp
stos
in
jbe
add
in
inc
fcom
lods
dec
enter
lods
ja
jno
scas
xor
adc
addr16
inc
jle
fidivr
aas
mov
push
add
int3
mov
lods
mov
nop
push
mov
mov
enter
xchg
jbe
ret
pop
vsqrtps
push
jle
push
fdiv
xchg
out
in
fwait
out
iret
pop
adc
mov
lea
mov
dec
xor
push
xor
sbb
dec
pop
xor
xor
xchg
aas
mov
jb
enter
neg
mov
daa
dec
gs
xchg
rol
lods
aas
sahf
adc
jnp
mov
inc
mov
lds
jge
retf
popa
fs
jle
cmp
mov
fadd
retf
int
mov
push
repnz
out
ror
and
pop
pop
(bad)
mov
cli
lfs
rol
aas
push
push
inc
sti
or
xor
xor
sub
into
cwde
sahf
inc
aaa
inc
nop
dec
lea
imul
dec
pop
or
or
xchg
adc
loope
out
jo
push
aam
inc
push
inc
mov
hlt
movs
enter
shr
dec
cmps
sub
int
pop
cld
mov
dec
sub
ret
mov
xchg
(bad)
ss
jne
mov
add
xchg
mov
inc
mov
cmps
xlat
cmp
fwait
push
sub
call
mov
ror
pop
in
enter
inc
hlt
dec
ins
and
or
jb
jle
fldenv
out
ret
inc
xchg
inc
adc
js
gs
enter
or
jle
lds
push
mov
retf
jg
(bad)
arpl
jno
adc
push
stos
int
mov
outs
jo
adc
(bad)
fnstsw
pop
pop
icebp
(bad)
mov
repz
sbb
inc
aam
mov
fiadd
xchg
jge
clc
fisubr
scas
(bad)
int
inc
dec
es
scas
out
sub
add
dec
(bad)
jle
aam
call
and
lock
mov
mov
aas
iret
je
int3
mov
dec
fnsave
xchg
ret
xor
ds
outs
int3
and
fcomp
ins
push
mov
lea
push
fcom
cld
sub
and
repnz
mov
ret
(bad)
inc
sub
pop
test
not
in
mov
xchg
sbb
int3
dec
(bad)
in
js
sub
(bad)
cmp
or
ja
fidiv
repnz
pop
mov
adc
push
pop
push
fiadd
jmp
add
jnp
mov
shr
pop
fs
sbb
or
fwait
push
xchg
mov
retf
or
sub
cmp
xchg
add
in
cmps
pop
ds
add
pusha
push
frstor
sub
fwait
js
in
arpl
mov
xchg
mov
pop
push
dec
cld
movntps
push
add
stos
ret
std
das
push
stos
jb
retf
mov
mov
jge
cli
jmp
in
jg
scas
push
fnsave
and
inc
out
inc
push
sub
fcmovb
(bad)
test
and
aad
loop
push
sub
dec
mov
out
inc
jb
pop
outs
pop
test
xor
mov
cmps
mov
fldenv
mov
sti
cwde
sub
cmps
aas
pusha
mov
xchg
inc
or
and
add
push
cs
mov
add
retf
and
adc
cmp
or
sbb
xchg
cmp
rcl
shr
cmps
inc
shl
cmp
adc
inc
push
ja
mov
pop
rol
leave
xchg
hlt
mov
mov
popa
xor
jg
jle
xchg
call
mov
adc
stos
movs
dec
popf
adc
push
cld
mov
(bad)
out
mov
mov
das
loopne
xor
or
and
add
repnz
sbb
inc
mov
push
loope
sub
xor
outs
imul
jno
or
xchg
jno
jle
bound
sbb
dec
mov
(bad)
(bad)
sti
jmp
rep
test
push
nop
loope
ja
jae
outs
test
daa
mov
xlat
jecxz
mov
shl
(bad)
mov
xchg
xchg
pop
test
nop
les
shr
es
pop
ffreep
(bad)
iret
ins
mov
and
add
pop
push
inc
adc
xor
mov
push
outs
mov
adc
jns
pop
aam
jle
xor
and
cmp
xchg
gs
xor
lods
ins
add
jmp
push
or
jno
aam
fwait
aas
stos
xchg
loopne
(bad)
push
pop
rcl
push
cmps
lea
mov
mov
sbb
push
loopne
or
bound
movs
ret
pop
stos
dec
out
out
jmp
xchg
in
fmul
or
jbe
(bad)
fwait
stos
movs
push
push
dec
test
sti
mov
fwait
push
push
mov
push
jp
mov
aas
fist
ins
das
int
dec
gs
pop
cmp
sub
sbb
push
jl
pop
push
xchg
outs
add
in
mov
shl
aas
cld
adc
out
and
ret
lock
inc
and
xor
fwait
mov
inc
ja
in
pop
adc
adc
dec
popa
int3
ins
cs
or
mov
rol
jecxz
or
push
retf
dec
(bad)
xchg
cmp
int3
and
xchg
ins
test
sbb
inc
xchg
scas
cmc
cmps
add
sar
test
xor
inc
xchg
div
and
(bad)
mov
cmp
xor
iret
das
(bad)
pushf
mov
frstor
ins
adc
sahf
add
enter
stos
add
adc
daa
inc
mov
dec
mov
mov
xor
inc
and
(bad)
dec
sbb
sub
stc
es
xor
sahf
cmps
sbb
jno
repz
jmp
(bad)
movs
add
daa
push
mov
adc
mov
mov
aad
inc
mov
add
jae
mov
sub
mov
inc
aaa
call
xchg
adc
jae
sub
movs
inc
and
mov
push
ret
dec
(bad)
dec
pop
mov
cmp
xlat
mov
xchg
aad
pop
sub
nop
mov
ds
es
mov
test
fmul
js
sbb
mov
retf
icebp
aaa
sar
aaa
pop
inc
sbb
pop
add
mov
add
jnp
xchg
adc
out
push
xor
pop
(bad)
rol
push
push
addr16
enter
add
add
xchg
add
jo
mov
pop
xor
rcr
cmp
enter
imul
and
inc
sbb
xor
mov
je
add
fwait
or
dec
pusha
mov
cmc
adc
xor
addr16
mov
loopne
into
inc
(bad)
push
loop
retf
les
(bad)
xchg
xchg
inc
or
xchg
pop
jnp
arpl
in
add
sbb
test
es
lods
ror
bound
mov
icebp
pop
(bad)
add
inc
pop
xor
bound
pop
cs
xchg
xchg
in
jmp
mov
retf
mov
xchg
aad
mov
or
out
aas
cmc
sub
push
sub
xchg
jg
xchg
ror
test
nop
std
into
cmp
push
in
scas
cli
fist
fwait
rol
ss
mov
xchg
inc
inc
add
xchg
cmp
inc
mov
or
scas
sahf
movs
enter
pop
mov
adc
test
xchg
int3
xchg
xor
jp
jmp
lea
jmp
in
jle
push
es
call
ins
shl
sub
(bad)
int3
inc
pushf
imul
scas
jmp
(bad)
es
mov
add
push
dec
mov
in
test
add
enter
mov
adc
or
lea
push
mov
push
and
mov
test
pop
enter
test
inc
cwde
shl
jl
cmp
cmp
rol
lods
inc
inc
pop
push
addr16
mov
int
cmp
call
jbe
jl
and
inc
jmp
jl
dec
test
lock
pop
leave
loop
inc
push
fadd
aam
shl
mov
aam
scas
xor
mov
cmp
mov
and
pop
inc
xchg
mov
cmp
outs
ins
xchg
(bad)
cmp
movs
cwde
and
pop
fdiv
push
push
imul
je
cmp
(bad)
ins
stos
xchg
push
or
aas
lea
inc
inc
sub
mov
or
ficom
xor
and
call
call
clc
fadd
jge
cwde
mov
mov
adc
or
xchg
mov
stos
pop
rol
and
sbb
aas
xor
(bad)
pop
xchg
pop
fbld
in
sub
dec
sub
loopne
not
or
lods
enter
adc
pop
add
and
push
jo
push
add
retf
repz
or
inc
xchg
scas
jo
aad
xor
mov
js
adc
xchg
fs
aas
adc
movs
push
pusha
enter
(bad)
neg
push
ja
rep
push
jb
enter
sbb
pop
inc
fwait
mov
cmc
(bad)
lods
jmp
sahf
inc
lods
aad
jle
push
in
xchg
adc
dec
xchg
mov
sbb
in
push
add
dec
(bad)
xor
stos
jp
inc
xchg
jge
fwait
imul
jp
mov
mov
call
pop
test
or
xchg
cmp
imul
or
lds
inc
adc
fimul
inc
mov
add
mov
ja
xchg
inc
xchg
mov
test
sbb
shl
xchg
cwde
lea
sbb
dec
sub
xor
jb
xchg
dec
pop
shl
out
out
aas
add
aad
repnz
sahf
fs
sbb
cmp
hlt
js
int
mov
xchg
add
inc
mov
movs
mov
mov
daa
bound
jecxz
sbb
cmps
sub
(bad)
pop
mov
mov
mov
push
mov
test
mov
es
fs
ins
ds
outs
fmul
or
aas
outs
add
jl
xchg
pop
ret
jo
or
xor
and
pop
pop
(bad)
(bad)
not
xchg
xchg
xor
rol
adc
aaa
clc
pop
hlt
jbe
data16
dec
hlt
jecxz
inc
sahf
xchg
jecxz
or
scas
mov
inc
push
xor
and
iret
sbb
jae
aad
jno
enter
mov
pushf
das
xor
xchg
std
and
mov
inc
xor
mov
out
cli
and
shl
mov
call
ror
sub
aam
pushf
push
cmp
fisttp
mov
cmps
aas
pop
xchg
inc
ins
sbb
xchg
(bad)
dec
xchg
add
ja
adc
sub
jmp
mov
loopne
xchg
xlat
pop
inc
(bad)
int
(bad)
adc
push
xchg
add
(bad)
data16
cli
test
inc
xchg
xchg
in
pop
inc
push
clc
add
nop
fiadd
imul
fsubr
push
(bad)
aas
adc
aam
clc
pop
(bad)
push
test
leave
jno
sbb
jg
cmp
xor
mov
jnp
mov
lahf
cli
mov
dec
xlat
aas
loop
pop
std
lea
fsub
sbb
xchg
cmp
or
dec
repz
shr
cmp
mov
or
push
xchg
xchg
xor
sub
inc
or
inc
and
adc
cld
fmulp
sub
cdq
xor
stc
add
enter
adc
icebp
push
pusha
dec
dec
mul
sbb
bound
inc
enter
cli
pushf
mov
push
fisttp
mov
fdiv
pop
(bad)
sub
fcomp
adc
push
inc
scas
scas
stos
popf
adc
jmp
or
ss
mov
sub
cmps
add
loop
pop
mov
(bad)
mov
xlat
jae
xchg
cmps
faddp
cmp
pop
jbe
xchg
enter
xor
cli
popf
sbb
xchg
ret
nop
push
push
ds
xor
mov
sub
sbb
in
jae
repnz
loopne
out
popa
in
cmps
add
adc
dec
ja
aas
fs
(bad)
(bad)
mov
out
out
mov
bound
adc
in
int
add
jmp
mov
ss
imul
push
xor
or
rcl
cmp
(bad)
lahf
scas
mov
cmp
inc
xchg
jnp
je
cmp
(bad)
fmulp
mul
in
sbb
cmp
push
cli
jecxz
into
jle
pop
mov
cld
test
lea
inc
sar
jl
(bad)
push
jne
call
or
in
xchg
dec
add
xor
xlat
leave
cmp
cmp
lods
pop
cmp
cmp
out
mov
inc
shl
fdivr
pusha
lds
gs
push
in
fmul
cmps
jmp
mov
repz
or
mov
outs
ret
and
rcr
cmp
xchg
or
pop
inc
(bad)
or
pop
arpl
in
fidiv
add
dec
sub
mov
dec
and
arpl
js
dec
or
fst
nop
(bad)
stc
cli
sub
push
call
inc
pop
cwde
inc
jg
inc
sbb
out
inc
cmp
adc
stc
test
test
pop
push
mov
add
pop
sub
add
xchg
sbb
rol
add
pop
xchg
fs
stos
rol
inc
xor
fiadd
xor
dec
push
cs
xor
inc
in
test
pop
ficom
sar
mov
add
and
dec
push
fs
push
dec
(bad)
aaa
stc
mov
push
test
iret
call
sub
xchg
fadd
stos
mov
(bad)
jmp
dec
out
xchg
sub
loop
fild
movs
xor
jecxz
sub
imul
or
call
mov
add
call
scas
or
hlt
jmp
shl
inc
xchg
sub
mov
pop
inc
sbb
xor
test
enter
jl
aaa
cdq
fisttp
jecxz
lahf
nop
loopne
dec
or
jnp
stos
and
adc
fcomp
(bad)
lods
fs
adc
sub
cmc
in
adc
pop
xchg
shl
push
fsubr
in
pop
xchg
jno
(bad)
mov
lds
fs
inc
rcl
pop
xchg
xchg
test
mov
sbb
mov
or
sbb
call
test
add
data16
out
xchg
sbb
loope
aas
in
push
sahf
mov
int3
imul
xchg
or
gs
jo
push
pop
inc
adc
cld
cmc
bound
xchg
inc
sbb
in
rcl
enter
mov
pop
lds
out
rcl
push
push
xor
test
(bad)
data16
dec
(bad)
popf
push
js
pop
loopne
adc
push
mov
cmps
stos
xchg
(bad)
sbb
stos
iret
nop
cld
std
xchg
and
pop
add
and
inc
fstp
bound
(bad)
xchg
ficomp
jb
aas
mov
leave
and
cmp
fiadd
jno
(bad)
add
add
xor
call
pop
stos
mov
xlat
adc
and
pop
xchg
mov
mov
aaa
dec
pop
or
cs
in
sub
inc
xchg
(bad)
mov
hlt
jbe
mov
mov
sub
aaa
mov
mov
aas
outs
add
call
movs
pusha
jmp
sbb
lea
adc
mov
push
inc
xchg
push
xchg
fmul
rcr
sub
jb
jge
mov
fidiv
outs
fdivr
push
xchg
clc
jae
lods
test
es
xchg
neg
rol
test
dec
jl
xlat
jmp
int
loop
rcl
xchg
and
jae
stos
sbb
pop
mov
push
dec
(bad)
mov
cmp
mov
imul
mov
out
xchg
mov
push
fwait
out
test
xchg
ss
inc
out
or
xor
add
push
ja
mov
test
xchg
ss
jmp
leave
aam
and
push
inc
adc
add
inc
(bad)
mov
scas
jle
mov
in
enter
inc
push
inc
sahf
je
add
ret
in
sub
jno
mov
js
lods
push
or
inc
add
ret
adc
gs
or
sub
jns
sbb
push
or
sbb
(bad)
out
jbe
in
dec
jl
jno
std
pop
mov
(bad)
cmp
push
inc
fwait
sbb
cwde
fldpi
jmp
xchg
test
popf
pop
jo
ror
or
scas
repnz
cmp
add
xchg
inc
mov
mov
int3
shl
ds
sbb
mov
pop
inc
push
adc
aas
inc
and
out
aad
push
int3
ficomp
test
mov
popa
add
gs
push
movs
jl
mov
push
dec
mov
mov
movs
int3
pop
push
inc
cmp
repz
out
or
cmp
aas
cmc
inc
xchg
or
mov
push
mov
cmp
pusha
in
jp
push
xchg
add
push
jle
xchg
out
push
inc
cli
dec
cmp
les
out
inc
ret
(bad)
pop
in
fs
and
push
mov
adc
inc
pop
outs
pop
repz
cmp
imul
jno
push
adc
xchg
retf
sub
sub
ret
addr16
(bad)
mov
js
imul
mov
push
std
lea
aas
sub
mov
les
mov
inc
add
movs
and
sub
outs
outs
jmp
stos
mov
add
jle
mov
xor
inc
mov
push
aad
add
popf
xchg
or
jbe
xchg
or
xchg
push
jmp
lahf
aas
ins
inc
and
pop
inc
add
pop
dec
nop
ror
mov
inc
das
je
push
fmul
retf
xor
or
fild
mov
push
xor
mov
pop
sbb
stc
mov
nop
out
mov
push
cdq
stos
cld
gs
cmc
sbb
fnstcw
and
fisttp
inc
shl
inc
dec
jge
xlat
aas
out
inc
(bad)
aad
sub
enter
pop
ror
aas
mov
jno
stos
fldcw
popa
push
jg
inc
mov
loopne
cmp
ins
or
(bad)
xchg
mov
mov
pop
popa
cmp
aam
daa
retf
xor
xor
inc
test
adc
out
mov
xchg
lahf
or
(bad)
aas
dec
aas
aaa
adc
inc
xchg
push
xchg
lds
push
std
cdq
add
pop
jbe
adc
xor
xor
iret
dec
xchg
cdq
or
(bad)
(bad)
xchg
movs
(bad)
jl
and
and
sbb
sub
push
sbb
loop
ror
int
into
shl
movs
lds
push
stos
cwde
fiadd
sar
mov
jle
pop
push
jecxz
stos
push
iret
dec
jg
mov
mov
dec
xor
in
pop
in
cmp
push
and
sub
pop
stos
fcomp
adc
shr
mov
clc
rcr
loopne
hlt
xchg
les
mov
(bad)
push
pop
out
ror
and
(bad)
retf
retf
jo
inc
push
imul
fwait
jl
mov
clc
pop
icebp
jae
xor
aad
push
pop
pop
ret
out
mov
push
sbb
int3
cmp
out
or
cmps
ss
aaa
xchg
xchg
mov
dec
and
pop
loop
xor
dec
mov
imul
jnp
out
inc
adc
xchg
mov
out
inc
xor
ss
sbb
test
sub
jae
xor
std
jbe
pop
xchg
je
xchg
cmp
inc
mov
cwde
adc
lds
sti
sti
xchg
lods
loope
jmp
sub
fcmovnb
out
add
fild
or
repz
test
mov
mov
test
rcr
mov
add
das
sub
cwde
(bad)
mov
lea
add
push
sti
pop
popa
test
mov
push
add
jecxz
adc
dec
nop
xor
sar
(bad)
fsubr
mov
xchg
add
jno
sub
not
cli
popa
(bad)
mov
xlat
sar
add
mov
call
pop
mov
mov
lods
int
xchg
cmp
inc
inc
fidivr
adc
cmp
cmp
fadd
cdq
jmp
and
test
loopne
mov
mov
or
ss
pop
mov
rcr
or
dec
jae
lds
push
ficomp
fldenv
iret
(bad)
xchg
mov
inc
das
loope
aaa
mov
inc
clc
xchg
jne
ret
std
addr16
xchg
mov
xchg
fld
(bad)
dec
push
les
dec
test
or
cmp
cwde
dec
outs
ret
bnd
sbb
push
adc
or
inc
ret
and
inc
dec
fs
loopne
call
hlt
sahf
jb
cdq
popa
push
call
push
push
stos
mov
pop
outs
inc
dec
push
xor
and
out
dec
cdq
mov
mov
(bad)
jno
iret
mov
hlt
int3
cmp
cmp
ret
(bad)
cmp
push
aad
xor
xor
dec
out
push
inc
jno
xchg
cmp
push
cmp
mov
outs
jbe
je
sub
push
fidiv
or
sbb
sub
xor
leave
xchg
jg
pusha
dec
sar
pop
inc
rcl
push
pop
leave
mov
ficom
adc
jbe
sub
icebp
enter
add
xchg
xor
ret
mov
sti
push
mov
inc
(bad)
out
pop
mov
fdivr
mov
add
mov
mov
stos
addr16
cmp
aas
call
pop
lea
cmc
jmp
das
mov
xchg
ret
cld
sub
push
or
xor
rcl
mov
dec
and
cmc
xor
jmp
inc
mov
xor
dec
in
adc
imul
dec
das
xchg
test
imul
ins
rcl
ds
leave
aas
scas
loopne
(bad)
sti
xor
js
aad
jae
mov
xor
popf
mov
ds
stc
xor
(bad)
xchg
clc
out
cld
inc
fcom
in
call
pusha
imul
sub
mov
test
xor
(bad)
addr16
push
jp
xchg
cmps
mov
in
inc
inc
mov
push
fsubr
jmp
not
retf
jne
movs
aas
xchg
push
daa
call
fnsave
xchg
es
sar
push
fldenv
ins
test
(bad)
in
div
push
es
aaa
aam
retf
jbe
cs
in
fimul
xchg
add
mov
in
enter
out
jo
lds
mov
pop
lea
xchg
(bad)
mov
fs
mov
mov
ror
lods
shl
or
pop
jmp
push
push
sahf
jg
cmp
xor
push
xor
aas
pop
xor
mov
push
stos
jle
repz
mov
les
push
cli
xor
dec
xor
imul
adc
push
ins
push
sbb
sub
pop
enter
pop
jae
jge
fsubr
jge
xchg
rcl
movs
jmp
loop
mov
push
inc
jecxz
aam
mov
jno
rcl
ins
ss
mov
cmp
sub
sbb
(bad)
push
clc
mov
or
push
push
(bad)
cmp
dec
jns
ja
inc
dec
or
xor
xor
mov
pop
inc
cmp
xor
dec
sub
shl
xchg
cmp
lock
mov
mov
add
dec
xor
icebp
adc
mov
xlat
add
mov
add
aam
ds
push
xchg
add
and
xor
(bad)
mov
aaa
jge
in
inc
pushf
(bad)
mov
call
ror
adc
jns
aad
out
xlat
inc
sub
push
push
mov
dec
mov
mov
pusha
jl
(bad)
mov
pop
fwait
outs
jg
movs
xchg
mov
in
ins
and
outs
data16
ss
aad
mov
aas
adc
fcom
jmp
psubusw
test
xchg
nop
mov
das
dec
aam
fild
xor
(bad)
stos
ret
cmp
pop
push
bound
arpl
clc
sub
pop
fwait
sti
dec
in
mov
sahf
push
inc
jmp
pop
push
fild
inc
mov
cwde
or
inc
lods
dec
or
pop
inc
or
outs
movs
jno
cmps
push
test
xchg
ja
sub
mov
xchg
inc
mov
(bad)
inc
dec
xchg
inc
sbb
in
or
cmp
enter
inc
fst
push
clc
stos
std
xchg
xchg
jb
or
mov
enter
sti
std
push
test
and
add
adc
pop
xchg
and
mov
test
xchg
adc
sub
jg
jle
add
jmp
or
mov
add
lea
lds
leave
add
loopne
jle
sub
out
aas
rcl
lods
sbb
dec
jno
jne
in
sahf
mov
cmc
call
sti
scas
sub
mov
ins
sub
cmp
pop
cmp
popf
inc
test
(bad)
adc
jns
hlt
add
jb
jecxz
pop
jbe
ss
xchg
and
cld
adc
sub
loopne
call
jnp
icebp
retf
aas
cmps
or
scas
test
adc
repnz
(bad)
mov
mov
xchg
frstor
xchg
ficomp
inc
ds
mov
mov
pushf
xchg
repz
cmps
rcl
push
aam
retf
sbb
push
stos
mov
mov
xor
push
movs
xlat
shr
or
les
pop
jl
daa
cmps
mov
and
test
mov
add
aam
mov
or
inc
pop
add
adc
retf
popa
imul
stos
xor
pop
aaa
ins
and
test
xchg
sub
xor
xchg
add
jmp
add
enter
std
push
cmp
pop
and
xchg
jmp
xor
sbb
sub
shl
mov
dec
cmc
aad
ret
icebp
aam
cmp
sbb
into
sbb
cli
rcl
xor
xchg
cli
stos
arpl
(bad)
icebp
mov
lahf
mov
inc
pop
or
add
pop
push
jmp
icebp
vpslld
inc
xchg
xor
lock
stc
push
lods
sub
idiv
(bad)
cmc
fsubrp
fsub
add
push
loopne
sahf
xchg
pop
cwde
sbb
jecxz
cmps
test
xor
pop
mov
mov
push
ret
sub
ret
out
sahf
mov
aas
enter
pop
push
xchg
call
es
xchg
adc
je
adc
cmps
adc
inc
jbe
fwait
in
sti
xor
or
movs
xchg
dec
sub
add
lea
and
xor
and
les
mov
sub
push
pushf
or
pop
(bad)
jae
mov
cld
jns
xor
mov
push
test
sbb
mov
dec
out
loop
sbb
sub
mov
push
xchg
sbb
add
adc
xchg
push
outs
cmps
out
adc
xor
xor
push
adc
out
mov
xor
mov
push
retf
push
cdq
(bad)
fucomi
cmc
pop
push
(bad)
aas
adc
xor
fcomp
leave
aas
out
push
pop
dec
out
xchg
cmp
push
cmp
sub
xchg
cmp
xchg
out
mov
jl
jg
mov
add
clc
daa
jle
fst
push
mov
lods
mov
movs
cmp
ss
cmp
or
xchg
fldenv
aas
sar
jbe
cdq
cmp
inc
repz
out
daa
aam
clc
test
ins
stos
fisubr
aam
sbb
jg
and
aas
les
iret
shl
outs
and
adc
push
xchg
mov
adc
dec
cld
cwde
pop
je
add
test
dec
push
fsub
push
lea
arpl
xchg
repnz
jmp
pop
movs
add
and
adc
add
pminub
mov
(bad)
pop
xchg
jmp
ss
ss
pop
mov
lods
call
cmp
loopne
add
aam
xchg
push
push
mov
sbb
pushf
aaa
inc
pop
bound
adc
fldcw
mov
mov
xchg
xor
lahf
push
ja
loope
rol
push
cdq
push
or
push
push
push
sub
lods
ffreep
xor
(bad)
jo
cdq
pop
lock
xchg
push
loop
imul
jb
add
scas
clc
xor
into
jo
retf
out
jmp
(bad)
mov
dec
daa
xor
pusha
xchg
les
dec
cmp
sub
in
js
mov
(bad)
jmp
retf
call
sbb
pop
push
inc
cmp
cli
pop
sbb
lds
mov
sbb
jmp
out
cmp
nop
shl
hlt
xor
cmps
push
xchg
mov
mov
adc
not
mov
push
sar
dec
lahf
or
cmps
mov
jl
sbb
fsub
xlat
cmc
mov
jecxz
jbe
sbb
and
fist
or
push
push
fisubr
sbb
mov
xchg
int
(bad)
hlt
and
ficom
inc
inc
out
(bad)
stc
or
(bad)
cmc
loop
add
loopne
sub
pop
bound
je
push
es
imul
(bad)
imul
push
sbb
push
loop
adc
mov
lods
adc
inc
and
mov
cwde
test
mov
jmp
xchg
inc
xor
xchg
jle
out
sub
leave
pushf
test
aad
cmp
mov
mov
lods
outs
and
out
in
or
cmp
aas
xchg
loope
enter
jg
fist
dec
mov
mov
jb
ja
xor
sbb
(bad)
jge
outs
arpl
jle
cmp
or
pusha
adc
cdq
mov
cdq
mov
ret
inc
icebp
sbb
cmp
sub
jnp
aam
pusha
lods
xchg
mov
fxch
mov
fstp
cwde
aas
jl
adc
lods
sbb
cs
pop
pusha
jo
ret
bound
xor
or
fistp
push
adc
aad
icebp
or
enter
enter
xchg
gs
xchg
call
lea
sub
xchg
mov
aad
repnz
xor
cmp
inc
movs
js
jo
and
push
and
(bad)
add
inc
arpl
rcl
mov
pop
adc
push
mov
xor
pusha
mov
cmp
add
mov
aad
inc
xchg
lahf
test
cmp
add
inc
popa
fcos
xchg
iret
rol
inc
fwait
xor
retf
xchg
push
or
xor
pop
cli
das
inc
scas
pop
fdivr
add
push
inc
jmp
add
push
push
icebp
mov
lods
or
mov
ss
(bad)
popf
jg
pop
cmp
mov
or
adc
add
aad
ins
or
aaa
push
mov
gs
add
outs
inc
cmp
pop
js
lea
popf
xchg
xchg
mov
rcr
shr
sbb
in
das
test
push
ret
sahf
sbb
push
jp
aad
or
cmp
jle
pop
ret
mov
xabort
dec
mov
hlt
stos
sahf
into
sbb
das
xor
mov
xchg
stc
jae
rcr
inc
cmp
jecxz
push
in
popa
dec
mov
test
push
xchg
xchg
sbb
push
jmp
les
xchg
inc
add
mov
xor
mov
movs
inc
in
sub
push
cdq
ret
xchg
sub
dec
jae
popa
sub
aaa
(bad)
cmp
hlt
mov
loopne
push
push
adc
fistp
cld
ss
or
(bad)
lods
mov
ins
(bad)
cmp
div
(bad)
(bad)
ret
mov
sub
push
fidivr
inc
lods
dec
xchg
pop
jns
cmp
sbb
clc
and
jle
iret
xor
bound
or
call
jne
and
mov
shl
add
push
ins
pop
loopne
aas
xor
mov
js
mov
mov
mov
jge
jbe
(bad)
xchg
aam
mov
xlat
push
jg
xlat
adc
push
or
cmp
shr
sub
xor
cmp
xchg
inc
sbb
push
nop
das
add
inc
mov
mov
push
xchg
jb
aam
out
jl
mov
repz
dec
mov
add
ins
sahf
push
inc
sbb
loop
push
push
lods
fcom
jae
pop
mov
push
test
lock
add
aas
lods
xchg
xchg
aaa
mov
in
or
ret
js
pop
cmp
mov
dec
xor
dec
ret
xor
sti
xchg
add
es
cmp
xchg
stos
xchg
sbb
rcr
(bad)
mov
mov
rcl
aad
fild
in
xchg
add
test
scas
adc
dec
mov
add
mov
out
xchg
xchg
jl
ins
enter
movs
rcl
xchg
int
xchg
jle
xchg
popw
mov
sar
add
mov
push
jmp
xchg
das
sub
dec
push
push
dec
leave
dec
mov
(bad)
inc
jae
hlt
outs
test
xor
mov
test
aad
lds
mov
inc
dec
inc
or
mov
dec
sub
dec
jmp
fist
add
xor
lods
push
call
mov
outs
cmp
sub
out
xor
push
repz
pop
rol
dec
push
sbb
and
ds
inc
icebp
aas
sbb
and
adc
adc
add
cmp
cmp
xchg
jne
mov
hlt
loope
xchg
jmp
add
mov
cmova
pusha
in
push
stos
pop
loope
ss
(bad)
lahf
int
ror
pushf
sbb
xchg
sub
repnz
bound
adc
sbb
push
loopne
aad
push
das
xchg
rep
pop
push
xchg
xchg
pop
xor
jecxz
sahf
dec
mul
add
xchg
enter
or
sub
call
cmp
jne
push
movs
iret
fs
in
inc
push
loop
mov
xor
cwde
push
jb
not
cmp
xchg
aad
aaa
into
lods
lahf
xchg
cmp
loope
mov
inc
out
loopne
and
shl
push
push
push
add
cmp
cmp
mov
cli
adc
popa
test
mov
mov
cs
xchg
imul
mov
jmp
or
jns
xor
xchg
fld
push
push
or
mov
push
inc
pop
jge
leave
jle
iret
push
mov
nop
je
adc
mov
jl
xor
dec
cmp
fsub
jecxz
inc
push
cmp
cmp
sbb
cmps
ficom
ret
xor
mov
clc
mov
stos
push
scas
js
scas
enter
xchg
and
mov
mov
aas
xchg
adc
jl
dec
push
out
jno
dec
adc
sar
xor
inc
jle
jp
aas
cdq
fdivr
pop
icebp
into
imul
cmc
ins
out
rol
nop
jle
fisttp
cs
or
cdq
clc
shl
sbb
push
mov
movs
push
cli
wbinvd
stos
stc
shl
inc
(bad)
pop
shl
dec
and
test
stos
xor
imul
xchg
push
inc
push
sbb
scas
out
push
arpl
neg
push
repnz
std
imul
and
mov
inc
ret
dec
inc
sbb
stos
mov
(bad)
out
sti
rcl
jmp
test
fs
lahf
mov
not
inc
test
in
inc
mov
jno
call
inc
mov
mov
(bad)
push
int
dec
add
push
fisubr
push
(bad)
in
pop
mov
push
push
dec
(bad)
sub
sbb
mov
inc
ss
mov
mov
pop
inc
stos
out
cmps
aas
fsub
outs
adc
jg
mov
aad
and
mov
fidivr
mov
adc
rsm
adc
cmp
stos
mov
inc
stc
sub
stos
and
aaa
movs
mov
cld
jno
xchg
jmp
jnp
imul
adc
push
add
pop
jle
daa
jge
inc
out
xchg
in
outs
push
mov
sub
call
dec
fnstcw
cli
shl
scas
and
outs
cmc
add
mov
arpl
xchg
fstp
neg
popa
inc
call
add
mov
and
push
or
xor
jecxz
fistp
cs
rol
test
dec
dec
inc
push
and
jecxz
xchg
mov
stc
mov
fadd
mov
fsub
mov
ror
mov
call
lods
add
xchg
retf
mov
stos
arpl
lahf
les
mov
ret
xchg
imul
call
jb
xchg
mov
or
aas
rcr
out
pop
test
push
bnd
jae
gs
xor
fmul
add
in
xchg
out
xchg
xchg
cmp
outs
xchg
dec
mov
push
lods
test
ja
in
add
sub
(bad)
or
xor
dec
mov
(bad)
ins
pop
(bad)
call
scas
mov
dec
inc
cmps
stc
std
(bad)
(bad)
aas
sub
fbld
sub
aas
push
mov
jae
test
dec
scas
jae
adc
ret
mov
std
aas
and
popa
daa
mov
or
(bad)
push
adc
scas
in
sbb
and
in
test
inc
out
jno
add
sahf
push
and
fadd
sbb
push
movs
adc
out
cmps
push
and
cmp
xchg
clc
sbb
loopne
push
cs
push
popa
(bad)
or
(bad)
sub
xchg
xor
mov
mov
xchg
push
ficomp
jmp
or
cmps
adc
loope
xchg
xor
ret
das
pop
cmp
push
mov
mov
mov
xor
lahf
xchg
fcmovnu
enter
add
cwde
xchg
sbb
sub
mov
jnp
adc
lods
inc
inc
(bad)
repnz
push
push
inc
push
test
xchg
pushf
mov
leave
movs
adc
xchg
jl
xchg
or
jge
xchg
push
test
adc
push
cmovs
or
inc
xchg
pop
jp
dec
(bad)
adc
pop
add
mov
in
pavgb
mov
push
mov
mov
pop
push
lds
mov
test
jb
imul
lods
fld
dec
addr16
fmul
loop
mov
and
mov
es
(bad)
test
jmp
scas
lods
aad
jae
fist
jb
rol
inc
popf
adc
push
push
in
mov
jb
cs
mov
pop
ins
jmp
mov
fimul
jbe
xchg
add
daa
inc
mov
test
and
fldenv
cmp
fld
pop
mov
adc
xchg
lock
cmp
pop
pop
(bad)
scas
test
jecxz
fst
je
faddp
pop
lea
gs
cmp
sbb
or
mov
shl
cwde
xor
pop
add
xchg
sbb
cs
not
call
jmp
jbe
jl
psrlw
ins
add
shl
je
sbb
mov
push
sub
sahf
sub
shrd
imul
clc
es
mov
mov
cmp
jbe
outs
into
cmp
test
dec
ret
add
scas
mov
add
test
ins
std
cld
push
xor
jb
xchg
push
cmp
(bad)
add
std
iret
xchg
(bad)
and
dec
sbb
arpl
mov
cmp
or
sub
fs
in
sbb
in
fidivr
mov
fbld
jmp
mov
xor
mov
mov
hlt
ds
in
adc
push
test
mov
mov
inc
jbe
add
nop
pop
pop
xchg
(bad)
mov
adc
xchg
fstp
inc
pusha
xchg
jg
adc
pop
loop
aas
mov
and
aam
int
in
enter
push
scas
out
cs
dec
cmps
xchg
xchg
push
inc
add
icebp
icebp
adc
loopne
stos
call
(bad)
lahf
adc
or
pop
sbb
out
sbb
adc
dec
or
inc
lods
ins
jnp
mov
or
stos
push
leave
dec
add
xchg
cmp
jg
outs
sub
cmp
cli
push
add
add
dec
xchg
and
xchg
add
or
fwait
adc
inc
imul
sbb
or
mov
ins
cmp
mov
xor
aam
adc
xchg
sahf
lods
loop
dec
xor
aas
xor
cmps
lods
mov
ret
xchg
shr
inc
jp
push
popf
mov
stos
out
nop
push
imul
retf
jecxz
inc
xchg
sbb
out
mov
sub
cmps
add
addr16
popf
xchg
and
mov
movs
fucomp
into
sar
mov
ds
adc
lds
(bad)
sub
cmc
(bad)
int
dec
inc
fwait
not
sub
and
test
fcmovnb
imul
call
jns
test
aas
sbb
ja
mov
sbb
scas
jmp
cmp
outs
aas
pop
cmp
add
or
enter
xchg
sub
aad
xor
enter
cs
cmp
xchg
jge
test
fwait
enter
pop
adc
fild
pop
inc
int3
rcl
xor
add
repz
push
push
push
and
nop
xchg
add
pop
sbb
xchg
push
scas
fist
sub
(bad)
out
ret
cld
aaa
adc
and
mov
sar
xchg
dec
xchg
or
add
test
xchg
sar
out
push
adc
mov
mov
push
cwde
jae
mov
adc
call
inc
std
jae
mov
not
pushf
mov
xchg
repnz
dec
dec
das
push
adc
jp
loopne
sar
or
outs
mov
xchg
je
mov
xor
ins
xchg
out
(bad)
adc
aam
sar
dec
lods
pop
sub
add
inc
push
push
cdq
gs
mov
mov
sbb
xchg
xor
or
inc
inc
sub
call
push
dec
jb
rol
rcl
std
jg
xor
xor
pusha
inc
mov
sub
mov
cmp
jge
imul
xchg
adc
sub
inc
(bad)
jae
into
(bad)
mov
dec
mov
xor
les
movs
lea
xor
mov
dec
or
shr
xchg
(bad)
pop
cmp
mov
ucomiss
xchg
push
inc
and
(bad)
fld
ins
dec
push
adc
cmps
mov
(bad)
loope
sub
jp
test
(bad)
cwde
dec
xchg
xchg
dec
xchg
aas
adc
fldenv
mov
fldcw
in
dec
and
sub
icebp
push
adc
aam
in
clc
stc
cmp
aas
jns
cmp
inc
push
cdq
outs
cli
ss
test
std
cmp
mov
adc
fndisi(8087
jmp
cmp
ret
neg
xor
dec
inc
push
lahf
loop
and
mov
sbb
sub
lods
loope
dec
push
lods
mov
dec
rol
imul
iret
and
push
xchg
adc
(bad)
sbb
inc
gs
push
sub
iret
cmp
mov
jecxz
xlat
mov
std
push
jge
jne
push
mov
popa
xchg
iret
jge
shl
pop
inc
mov
stc
mov
push
(bad)
sbb
sub
not
jmp
push
imul
mov
inc
(bad)
mov
adc
std
cwde
adc
xlat
jno
imul
mov
cmps
mov
add
push
cli
shr
dec
(bad)
dec
cmp
sbb
adc
mov
int
mov
call
int
dec
ins
les
mov
pop
mov
lds
test
push
push
xor
mov
push
das
stos
pop
test
xchg
jl
fld
xchg
jne
aas
ins
sbb
or
push
jae
mov
enter
outs
xchg
out
popf
xchg
inc
push
(bad)
ins
out
and
ins
push
movs
hlt
xchg
inc
dec
retf
nop
shl
mov
outs
stos
movs
ja
(bad)
mov
mov
inc
dec
add
cmp
sbb
and
sbb
pop
push
lds
inc
cmp
inc
test
lock
adc
adc
add
inc
sbb
add
add
jo
inc
and
or
or
or
or
xor
or
and
adc
push
sbb
adc
add
movs
inc
shl
test
add
pop
dec
sub
push
push
and
or
add
and
add
inc
push
add
or
je
adc
xor
in
and
or
add
test
inc
pusha
add
adc
and
mov
inc
in
add
and
add
push
and
add
outs
mov
adc
and
add
mov
xor
or
and
push
or
inc
loopne
dec
sbb
arpl
push
push
mov
adc
sub
add
test
test
add
add
xchg
inc
and
inc
adc
or
adc
add
adc
xor
inc
adc
add
nop
add
xor
and
add
pop
push
add
or
xchg
pusha
add
nop
add
mov
or
inc
xchg
mov
inc
add
cmp
push
shr
dec
nop
and
add
add
adc
lods
mov
push
test
xchg
xor
add
test
xchg
add
push
sbb
loopne
and
and
push
add
add
add
add
push
inc
or
or
push
add
sub
add
pop
add
test
inc
inc
mov
or
jno
inc
xor
xor
add
add
add
and
and
xor
and
add
or
add
and
test
dec
add
aad
add
or
jb
add
adc
mov
add
mov
add
and
or
and
or
and
les
sub
and
sbb
add
rol
sub
and
add
or
or
adc
pusha
add
xchg
inc
mov
or
pusha
add
nop
add
or
ror
mov
and
add
or
add
or
or
add
inc
adc
or
add
and
dec
xor
add
or
and
xchg
add
add
or
int3
sbb
inc
and
test
shr
mov
test
xor
inc
inc
add
inc
and
adc
add
std
test
cmp
add
nop
dec
adc
or
loopne
or
sub
or
mov
sub
loopne
adc
adc
inc
ret
add
adc
xchg
inc
dec
dec
dec
inc
add
adc
rol
add
and
add
add
add
xor
and
data16
pusha
sbb
add
adc
dec
add
adc
add
push
push
sub
add
add
and
add
add
and
and
imul
or
xchg
xchg
pusha
and
add
add
dec
adc
or
mov
xor
xor
mov
add
pop
inc
sub
add
add
or
inc
and
les
and
or
add
add
rcl
or
or
and
push
sub
add
and
adc
sar
xchg
add
adc
les
rol
adc
pusha
adc
add
add
inc
dec
inc
and
inc
pusha
inc
or
add
sbb
shl
add
icebp
add
sbb
adc
adc
sub
add
or
add
or
pusha
add
add
inc
adc
add
adc
add
inc
add
rol
add
sub
add
xor
mov
add
mov
add
add
add
add
add
add
and
add
adc
add
and
push
inc
inc
test
add
inc
adc
or
add
or
popa
ret
add
add
pop
ins
add
add
add
add
adc
jns
sub
add
add
inc
add
movs
shr
and
or
rcl
add
mov
inc
jb
call
adc
cmp
or
add
movs
jbe
mov
or
add
inc
and
inc
or
inc
inc
and
inc
xor
push
add
adc
and
sub
rol
and
dec
add
and
adc
adc
mov
add
add
add
push
add
ror
adc
mov
test
xchg
add
pop
dec
add
ret
adc
jo
and
inc
mov
les
adc
adc
add
or
add
inc
or
add
or
test
stos
add
add
add
adc
pusha
inc
out
ror
add
and
add
sub
fs
add
or
add
add
push
xor
adc
and
add
and
adc
add
push
inc
adc
and
test
add
add
inc
mov
or
xor
loope
and
call
xchg
add
push
or
push
xor
ret
test
nop
sub
mov
mov
fsub
inc
add
sub
add
and
xor
sub
push
add
adc
ins
inc
inc
mov
add
inc
daa
mov
int
or
inc
inc
push
test
add
add
or
mov
add
add
or
add
or
mov
add
add
bound
inc
adc
adc
dec
and
and
add
add
and
cmp
and
xor
popa
add
push
rcl
sbb
add
add
push
mov
mov
add
add
add
or
add
add
adc
dec
xor
test
xor
popf
push
xchg
add
add
and
and
xchg
sub
and
and
add
js
ror
add
add
adc
test
add
add
push
add
inc
add
add
dec
popa
adc
inc
mov
or
adc
add
adc
or
pop
xor
or
add
loopne
dec
xor
scas
and
shr
test
sbb
add
add
inc
mov
arpl
and
add
adc
adc
add
add
and
add
adc
add
or
or
enter
or
add
add
add
mov
pop
dec
add
and
add
and
add
add
inc
add
adc
daa
add
and
and
add
add
add
mov
add
sbb
add
add
test
inc
add
and
add
inc
lock
rol
dec
add
add
add
and
add
and
test
dec
or
cmp
and
sub
rcl
push
add
mov
test
pop
and
adc
xor
add
or
inc
add
and
or
adc
adc
test
xor
add
arpl
and
test
adc
add
in
pop
out
add
loope
mov
sub
push
or
add
inc
pusha
enter
pop
inc
xchg
or
add
add
push
or
add
add
cmp
or
pusha
out
add
add
sub
pop
add
xchg
and
xchg
inc
add
adc
push
test
sub
mov
inc
adc
sbb
adc
and
push
adc
or
mov
add
xor
inc
add
test
add
adc
pusha
pop
mov
pusha
and
adc
pop
mov
add
jno
pop
xor
xchg
add
or
adc
add
inc
or
or
push
push
adc
inc
and
add
xor
and
push
inc
dec
lods
or
or
sub
add
xor
add
and
push
sbb
pop
xchg
add
and
or
xchg
add
popa
add
add
add
stos
or
sbb
add
lods
cwde
and
mov
or
add
add
add
adc
xor
test
inc
inc
sub
push
jae
les
add
or
mov
push
sub
or
add
and
and
inc
xor
add
sub
lahf
nop
add
enter
add
add
add
add
inc
add
add
add
adc
jo
inc
and
push
and
xor
and
and
leave
add
add
xchg
and
push
sbb
sbb
and
add
adc
or
sub
sub
loopne
adc
mov
sub
or
sbb
or
add
cmp
lods
rol
or
xchg
and
push
adc
test
push
pusha
or
cmp
dec
or
sbb
or
loopne
and
and
cmp
test
ret
xor
add
test
add
xor
or
add
add
mov
add
loopne
add
inc
js
add
or
push
add
adc
adc
inc
add
dec
push
dec
mov
shl
and
or
adc
cwde
or
push
adc
add
add
inc
pop
add
adc
mov
add
jno
movs
or
or
inc
add
loop
les
pusha
sbb
or
add
or
sbb
add
adc
inc
add
add
adc
mov
test
test
push
cmp
inc
xor
or
xchg
mov
add
add
rol
test
or
add
or
adc
pop
push
adc
and
nop
xchg
push
push
nop
add
sub
daa
and
or
add
push
sbb
adc
loop
add
add
add
add
int3
pop
rcl
dec
pop
push
mov
sbb
nop
or
and
sub
rol
adc
mov
add
sbb
mov
or
add
push
test
inc
shl
adc
adc
add
ror
add
sbb
sub
mov
dec
and
add
add
lea
inc
push
test
adc
inc
sub
add
push
add
add
les
cmp
add
and
sub
push
adc
adc
add
add
ret
test
pop
ror
inc
pusha
or
add
xor
add
add
add
add
inc
xchg
inc
sbb
add
xchg
in
mov
or
or
add
mov
add
add
sub
and
push
mov
push
sbb
inc
xor
add
and
and
inc
and
add
add
test
push
adc
nop
xchg
and
add
or
add
dec
stos
rol
add
add
add
add
xor
inc
or
push
rcr
add
add
adc
test
inc
inc
out
sub
add
jp
inc
inc
inc
fadd
xchg
inc
test
add
add
jno
push
add
add
add
inc
mov
adc
adc
nop
test
add
push
pop
add
add
and
nop
add
jb
test
rol
imul
outs
and
pop
push
push
and
adc
adc
test
add
add
inc
sbb
inc
sub
mov
ret
add
or
and
and
push
dec
add
push
inc
push
push
add
cmps
dec
adc
or
ret
rol
add
(bad)
mov
mov
cmp
mov
and
add
add
inc
push
add
sub
xor
dec
pusha
and
push
add
movs
jne
add
or
sbb
and
sub
adc
or
add
test
cmp
add
inc
add
adc
or
shl
inc
add
inc
sub
add
inc
ins
add
xor
and
adc
add
add
xchg
and
adc
adc
or
add
add
add
mov
mov
cwde
xchg
add
cmp
mov
add
add
mov
cmps
nop
add
test
inc
xchg
xchg
xor
add
mov
jae
and
sbb
or
add
test
jecxz
and
adc
add
or
mov
movs
inc
sbb
adc
add
or
adc
mov
inc
inc
push
add
mov
test
dec
push
add
and
add
mov
push
xor
adc
sbb
xor
dec
add
add
fsub
adc
adc
ret
add
add
add
add
in
add
add
xor
add
add
add
movs
and
into
and
or
add
daa
and
add
or
das
daa
pushf
or
mov
movs
mov
lds
adc
add
inc
mov
add
add
inc
add
and
test
add
nop
add
inc
popa
inc
adc
pop
mov
sub
add
add
add
add
or
mov
clc
or
push
inc
sub
xchg
adc
add
xchg
rol
call
pusha
nop
mov
add
add
or
dec
adc
test
adc
pop
rol
test
add
sbb
pusha
or
xchg
add
adc
lds
add
push
inc
and
or
mov
adc
add
inc
push
inc
or
xor
inc
mov
adc
adc
or
and
add
test
and
xchg
add
out
adc
xor
add
loop
pusha
inc
mov
adc
and
adc
add
jl
adc
or
add
bound
loopne
add
add
xor
imul
add
or
adc
or
add
and
or
mov
cs
or
lods
add
nop
xchg
and
jb
add
inc
sub
test
inc
xor
or
nop
push
inc
add
add
xor
and
or
mov
and
adc
add
les
add
add
inc
adc
add
add
or
and
sub
inc
xchg
test
and
add
or
sub
dec
mov
or
adc
or
push
add
adc
add
pop
and
add
mov
cmp
and
add
xor
add
leave
add
mov
add
mov
inc
inc
dec
add
push
add
add
push
or
add
mov
add
push
add
add
inc
push
enter
or
add
and
push
dec
xchg
xor
or
lea
inc
shr
adc
xor
add
or
test
or
sub
add
lock
test
add
mov
add
push
test
add
push
or
inc
add
add
or
push
mov
mov
and
sbb
add
hlt
add
xchg
and
or
inc
inc
test
out
adc
xor
ror
fwait
add
or
or
add
or
mov
add
sbb
les
adc
and
inc
inc
add
pusha
mov
add
add
and
add
xor
or
inc
add
movs
xor
rol
sbb
and
rcl
add
sub
inc
loope
and
push
add
leave
add
mov
mov
xor
add
inc
inc
mov
adc
test
cmp
adc
adc
sub
lock
(bad)
retf
rol
inc
inc
pop
inc
adc
or
popa
mov
add
adc
and
or
add
daa
add
test
or
cdq
adc
add
add
or
add
push
or
adc
stos
sub
test
and
adc
inc
int3
add
or
add
add
or
adc
add
lock
test
adc
and
xor
inc
add
and
add
and
xchg
jge
or
add
mov
cwde
ret
xchg
dec
dec
add
inc
dec
add
add
fmul
add
add
add
sbb
inc
add
add
adc
add
or
inc
ret
or
add
add
add
add
add
and
les
es
and
adc
add
add
add
add
add
and
add
or
or
push
test
and
add
and
dec
rol
inc
and
or
and
ror
and
adc
sbb
inc
(bad)
mov
gs
and
or
add
and
or
mov
add
push
or
mov
adc
and
add
or
add
add
xchg
add
adc
or
adc
inc
and
and
add
xchg
add
push
add
xor
mov
rol
push
inc
or
add
sbb
mov
repnz
and
adc
xor
add
xor
adc
or
and
add
and
push
and
add
pusha
add
add
and
add
cdq
sub
sar
sub
add
mov
add
push
add
mov
and
inc
adc
inc
pop
and
add
or
and
cwde
push
shl
add
or
inc
adc
inc
xor
mov
test
sahf
add
inc
mov
add
inc
and
adc
xchg
and
loopne
add
mov
popa
add
nop
inc
jl
and
add
add
xchg
inc
test
lahf
mov
xchg
add
push
and
pusha
lods
add
and
cdq
add
adc
add
add
and
nop
mov
and
mov
and
add
inc
and
push
xchg
or
add
popa
adc
add
inc
add
in
cmp
add
add
push
and
mov
test
add
and
inc
add
add
adc
push
add
add
inc
add
mov
inc
and
add
add
push
dec
adc
add
inc
inc
add
push
inc
test
or
add
add
add
stos
xor
mov
inc
push
rol
add
and
add
adc
inc
test
and
inc
and
or
add
push
sbb
cwde
add
adc
add
ins
cmp
cmp
mov
or
xor
and
xor
adc
add
adc
and
or
push
or
add
dec
or
add
push
add
nop
add
add
add
add
add
and
cmp
cmp
sbb
add
inc
add
stos
adc
loopne
pop
inc
inc
add
lds
adc
rcl
js
or
and
add
adc
add
adc
test
add
cdq
inc
xor
test
dec
dec
sub
add
adc
add
add
add
or
inc
add
add
add
nop
add
dec
adc
mov
push
add
inc
ret
pop
xchg
or
and
add
pusha
add
nop
adc
and
add
or
xor
dec
pop
ficom
adc
sub
call
xor
adc
add
inc
and
mov
xchg
mov
fmul
pop
or
add
test
add
rol
add
mov
add
and
dec
test
push
push
and
xor
dec
add
mov
sbb
or
adc
add
or
mov
or
pusha
add
add
int
sub
mov
nop
mov
and
adc
add
adc
mov
and
add
rcl
and
cmp
loopne
lods
loope
cmps
inc
adc
jb
cmp
sub
ror
xor
xor
add
inc
add
adc
popa
or
sub
or
push
sbb
test
add
dec
add
dec
or
adc
mov
(bad)
add
add
xchg
add
and
imul
adc
adc
add
add
and
or
adc
adc
jb
add
inc
inc
or
adc
add
add
sbb
add
mov
nop
adc
adc
sbb
push
sbb
add
and
add
add
push
cmp
add
adc
in
adc
and
add
test
or
add
or
inc
or
or
shl
or
and
inc
lods
add
sub
and
ror
add
or
add
and
daa
mov
xlat
inc
add
or
inc
mov
cwde
out
dec
and
sbb
or
adc
xchg
add
add
les
dec
adc
adc
dec
inc
add
inc
xchg
sub
push
jo
or
push
add
xor
add
and
movs
adc
add
or
sbb
popa
and
add
and
rcl
movs
add
xor
add
inc
adc
add
add
sub
nop
add
add
inc
popa
add
add
int
adc
shl
add
add
add
mov
mov
inc
xor
and
add
add
adc
adc
and
xor
add
or
sbb
and
inc
cmp
adc
adc
inc
and
push
push
add
or
add
add
add
add
les
js
mov
add
and
and
add
adc
shr
add
push
pop
or
fs
adc
adc
add
xor
sbb
test
xor
add
adc
pop
xchg
add
or
xor
add
and
in
adc
or
add
bound
add
imul
and
xor
icebp
push
sbb
bound
mov
add
cmp
add
pop
inc
inc
or
nop
dec
add
add
pusha
and
add
add
inc
push
sub
add
sub
add
add
add
and
add
push
stos
adc
test
add
mov
mov
add
or
cs
dec
add
push
xchg
or
sbb
jb
xor
and
test
sbb
xchg
test
popa
xor
loopne
add
popa
sub
add
lahf
add
add
add
cmp
sbb
or
add
nop
adc
adc
inc
add
add
add
and
or
enter
int3
xor
aam
cmp
adc
leave
add
retf
add
xchg
dec
add
inc
nop
mov
add
or
test
pop
add
and
add
add
push
add
dec
add
pop
or
add
popa
bound
adc
add
inc
cmp
sbb
add
stos
add
add
add
mov
sub
adc
or
add
adc
mov
inc
and
add
or
pop
add
add
adc
or
rol
and
add
mov
leave
add
sbb
sub
mov
adc
xor
adc
add
add
add
test
das
sbb
or
add
inc
inc
pushf
in
sbb
add
add
push
and
inc
and
pop
imul
add
inc
add
out
rcl
pusha
and
inc
add
sbb
and
rcr
rol
add
adc
push
and
jno
test
and
nop
and
and
push
nop
adc
push
or
js
add
push
xor
inc
rcr
ins
add
or
and
inc
push
and
and
aaa
add
call
add
or
inc
add
imul
pop
add
xchg
add
or
adc
or
add
or
adc
and
pusha
test
adc
add
and
add
mov
sub
or
sbb
xchg
xor
or
test
add
add
add
add
xor
add
xor
or
push
inc
or
add
leave
ss
and
xchg
or
push
or
adc
test
adc
dec
add
or
push
mov
inc
adc
add
xor
xchg
cmp
push
rol
or
push
add
add
or
rcl
push
inc
add
add
add
into
add
push
cwde
push
push
add
bound
pop
and
mov
add
dec
nop
add
add
add
add
or
add
add
bound
mov
adc
cmp
adc
push
rcl
add
add
xchg
and
and
and
lea
or
push
add
out
daa
add
les
popa
add
sub
add
adc
add
inc
xchg
movs
enter
in
ror
dec
inc
inc
push
add
int3
or
adc
pop
nop
and
mov
test
inc
test
push
add
add
add
add
popa
pusha
or
add
and
inc
movs
and
push
add
add
scas
add
add
add
pop
ret
add
and
dec
xor
nop
adc
adc
add
add
rol
add
add
or
xor
pusha
adc
xor
add
and
add
and
pop
inc
enter
add
lods
sub
add
add
inc
add
add
add
add
inc
sub
mov
add
adc
add
push
cmp
shr
add
test
inc
add
push
rcl
adc
and
adc
or
adc
sbb
and
dec
add
mov
mov
adc
xchg
and
add
adc
xchg
push
add
add
test
add
lds
adc
dec
and
adc
bound
push
inc
xor
inc
cmps
inc
add
inc
adc
sbb
sbb
adc
pop
add
adc
add
add
inc
or
pop
mov
adc
adc
or
xor
add
and
adc
int3
test
rol
and
mov
inc
and
push
test
nop
and
inc
add
mov
or
jo
add
or
add
sub
daa
add
inc
xor
add
and
add
mov
xor
push
fmul
push
ja
add
adc
and
jl
adc
mov
or
adc
or
inc
sub
push
add
push
adc
adc
or
and
push
push
inc
and
les
and
and
sbb
add
add
push
add
adc
xor
add
inc
xor
popa
and
inc
nop
inc
add
cmp
and
and
or
add
push
fcom
and
add
pop
add
add
or
or
add
and
inc
or
and
push
iret
bound
and
add
and
dec
dec
int3
adc
or
inc
add
and
and
and
or
test
add
mov
add
inc
adc
add
nop
or
dec
adc
nop
inc
add
data16
or
add
add
adc
adc
cmp
pop
add
nop
cmp
add
or
add
xor
rcl
or
add
dec
add
and
add
lds
inc
sub
dec
add
and
daa
mov
xor
inc
push
rcl
xor
inc
adc
out
add
push
inc
or
push
inc
add
adc
and
or
adc
add
and
jno
es
inc
add
add
and
add
add
push
and
je
sbb
and
or
rcl
adc
add
push
pusha
add
inc
and
push
inc
leave
ss
test
inc
inc
mov
and
mov
add
add
add
add
adc
or
add
add
inc
add
or
adc
add
cwde
dec
add
shl
xchg
and
adc
cdq
add
add
and
xor
xor
add
mov
adc
or
add
rol
inc
mov
or
inc
add
add
adc
and
shl
mov
adc
adc
push
xchg
and
mov
je
add
add
nop
rol
adc
nop
push
sbb
mov
mov
xchg
and
test
inc
adc
inc
or
movs
adc
xor
inc
and
retf
dec
add
add
sbb
or
add
add
add
mov
adc
add
add
add
jo
cmps
inc
and
or
or
test
add
dec
add
add
lds
push
inc
adc
ret
push
push
inc
or
or
add
adc
or
pop
add
dec
adc
pop
inc
and
pop
lds
add
and
nop
shl
retf
and
add
jae
sub
inc
or
and
and
or
add
enter
add
add
inc
test
push
sub
test
sub
push
mov
test
add
xor
or
adc
popa
push
mov
or
and
dec
and
add
or
add
or
inc
xchg
jle
adc
mov
add
adc
cwde
add
add
xor
add
adc
adc
inc
add
or
add
mov
adc
add
add
and
arpl
add
daa
pop
and
push
sub
inc
or
add
loopne
pusha
inc
add
movs
inc
xor
add
mov
or
add
or
or
add
add
adc
push
sbb
dec
add
push
xchg
push
add
or
and
add
and
inc
add
add
add
or
sub
push
dec
or
mov
adc
aad
inc
inc
or
inc
inc
add
add
add
add
js
add
and
pusha
or
sar
adc
add
inc
mov
add
test
loopne
xor
add
and
pop
pop
and
push
and
pusha
test
add
mov
inc
sbb
add
and
add
aaa
push
rol
or
add
or
adc
pusha
sbb
inc
cmp
and
pusha
add
nop
pusha
inc
or
mov
mov
adc
add
add
or
add
push
adc
and
pop
sub
jp
or
and
add
or
adc
movs
sub
add
xchg
sub
adc
adc
push
inc
inc
pop
popa
add
pop
add
push
adc
push
adc
or
and
add
ficomp
and
add
push
inc
sbb
add
adc
and
mov
add
inc
and
or
and
add
and
and
push
mov
or
add
mov
nop
xor
push
sbb
add
rcl
add
or
es
add
add
add
shr
loope
add
add
sub
mov
add
inc
or
adc
and
add
and
ficom
sbb
pushf
jae
test
sub
add
push
adc
add
inc
or
and
ret
xchg
add
add
adc
and
push
add
test
pushf
add
mov
or
or
inc
inc
and
add
adc
nop
and
add
mov
pusha
adc
pusha
and
add
or
icebp
loopne
or
push
or
add
mov
push
mov
add
add
dec
xchg
mov
push
or
and
mov
mov
add
movs
jne
test
add
and
jo
mov
add
mov
push
mov
fsub
mov
adc
add
adc
sbb
or
add
test
inc
ret
sbb
adc
pusha
add
dec
add
sbb
les
add
lea
lods
add
inc
and
xor
dec
pushf
enter
mov
ret
sbb
or
pusha
and
or
ror
call
dec
inc
add
or
add
inc
inc
ins
inc
add
adc
add
add
and
mov
mov
or
add
add
inc
or
imul
or
mov
mov
add
test
movs
add
push
mov
dec
rol
add
add
or
pusha
sbb
adc
or
sub
adc
add
add
adc
cmp
adc
and
xchg
sbb
or
test
add
cmp
dec
add
pusha
pop
adc
inc
adc
scas
nop
inc
xor
push
pusha
pop
and
or
fs
popa
add
shl
add
add
inc
inc
and
or
nop
add
or
mov
sub
add
and
adc
add
sbb
inc
add
inc
add
adc
call
sbb
mov
inc
xchg
inc
add
inc
or
test
add
mov
push
add
sub
adc
adc
outs
add
mov
add
and
inc
add
ret
add
inc
xor
xchg
adc
xchg
or
pop
add
and
jb
push
add
add
dec
inc
add
adc
pop
inc
add
mov
mov
rcl
dec
sub
xor
movs
push
inc
and
inc
or
and
nop
add
add
add
add
outs
and
or
daa
inc
and
and
xor
add
mov
or
mov
adc
adc
or
add
add
and
bound
sahf
adc
ror
and
loopne
or
rol
or
in
add
add
push
or
in
mov
push
and
push
add
bound
add
push
add
add
mov
ret
test
xchg
add
retf
inc
add
add
xacquire
mov
add
adc
mov
add
push
or
inc
add
sub
or
sub
mov
add
add
adc
or
add
inc
push
add
add
shl
add
add
mov
adc
xor
fs
nop
dec
add
add
add
movs
push
xor
adc
ins
and
and
cwde
test
adc
add
jb
and
adc
push
adc
add
adc
rcl
adc
inc
add
dec
(bad)
les
add
retf
popa
dec
and
or
ins
jo
xchg
dec
adc
add
xor
test
or
fs
push
and
and
add
inc
and
sbb
add
inc
and
rcl
or
add
nop
add
add
or
dec
adc
inc
dec
or
cwde
adc
push
dec
and
in
add
add
rol
sub
mov
add
add
mov
add
add
inc
es
add
mov
or
add
fs
or
test
add
push
pusha
add
and
loopne
inc
add
add
or
sbb
push
inc
push
xchg
add
inc
pop
inc
xchg
add
add
add
and
dec
add
or
add
and
add
dec
je
add
add
add
and
push
and
add
add
test
inc
add
add
add
push
mov
cwde
sub
pop
adc
imul
or
push
rol
adc
mov
adc
push
add
add
mov
add
or
add
sbb
add
gs
or
add
add
and
bound
sub
add
mov
pop
inc
or
mov
push
in
sub
xor
sbb
add
adc
cmp
xchg
inc
pusha
loopne
or
mov
inc
add
add
and
add
or
or
add
adc
or
add
inc
dec
add
add
add
mov
add
add
sub
and
push
add
adc
cs
outs
jne
inc
add
add
add
ror
adc
and
add
and
nop
or
add
or
jns
mov
push
add
and
or
cs
add
add
mov
adc
in
add
ret
and
mov
push
mov
inc
adc
mov
adc
adc
sub
or
adc
stc
inc
mov
or
xor
add
add
mov
adc
or
or
add
push
add
add
inc
or
mov
add
or
adc
inc
add
add
push
or
or
sub
add
or
or
or
nop
movs
adc
push
adc
or
add
sub
add
leave
nop
add
rol
sbb
add
pushf
cwde
add
or
add
adc
inc
and
or
sbb
adc
inc
pusha
or
add
xchg
and
movs
dec
sub
add
and
out
add
add
and
inc
mov
rol
sbb
xchg
add
or
ror
or
test
or
mov
inc
rcr
int
leave
inc
and
nop
adc
add
and
or
ins
add
adc
cmps
sbb
add
adc
add
mov
test
int3
dec
rol
or
add
sub
cmp
add
pusha
add
mov
sub
rcl
mov
push
add
inc
jae
or
imul
rcl
add
add
push
hlt
adc
and
add
push
push
adc
sub
dec
inc
dec
xor
xchg
add
mov
ins
rol
adc
add
adc
or
sbb
and
add
popf
push
adc
inc
cmp
or
or
xor
add
add
sub
add
adc
adc
sub
jecxz
xor
adc
add
dec
pusha
nop
add
mov
adc
or
add
cwde
add
dec
xor
inc
xchg
adc
add
or
adc
popa
add
and
jo
push
enter
call
and
test
add
add
add
dec
test
mov
or
pusha
mov
es
inc
pusha
pusha
adc
dec
sub
and
jne
add
dec
mov
xchg
or
push
mov
xchg
cmp
inc
add
xchg
inc
adc
inc
out
cwde
or
jp
popa
adc
add
and
nop
inc
cmp
push
inc
es
and
inc
or
sbb
pop
sub
mov
pop
mov
add
adc
add
add
add
and
jae
dec
and
add
inc
push
or
add
dec
nop
adc
inc
dec
and
pop
add
inc
inc
or
pop
adc
es
and
or
and
add
add
inc
add
xchg
adc
cwde
sub
pop
inc
add
and
xchg
dec
adc
enter
adc
sub
add
or
add
add
or
add
sbb
add
add
add
nop
sub
and
inc
xor
mov
add
add
add
push
mov
es
add
and
adc
movs
adc
inc
sbb
or
push
and
xor
add
xor
add
mov
add
stos
movs
cwde
adc
add
add
pusha
add
add
or
xchg
or
and
or
fs
xor
add
add
adc
sbb
or
add
sbb
nop
add
add
sub
or
add
and
xor
mov
and
or
add
sub
or
add
stos
adc
xchg
imul
mov
pushf
sbb
push
add
xchg
mov
adc
or
or
or
popa
inc
add
sbb
pop
pusha
inc
inc
and
and
push
mov
add
add
add
inc
in
xor
adc
add
nop
mov
xchg
sahf
add
add
jo
and
and
pop
add
add
ret
add
add
add
add
add
add
adc
adc
mov
inc
push
arpl
add
retf
add
cwde
jae
or
add
push
addr16
dec
add
sbb
mov
add
xchg
bound
cwde
test
sbb
adc
add
xchg
xor
das
add
or
push
pop
xor
add
inc
test
daa
mov
adc
xor
add
push
ror
xlat
les
or
inc
sbb
add
sbb
add
inc
or
inc
add
xchg
nop
inc
add
add
add
and
add
and
and
add
add
add
or
adc
or
adc
xor
and
push
add
xor
dec
xor
adc
and
add
sub
add
mov
add
and
cmp
loopne
mov
movs
add
mov
add
xor
xor
push
sub
add
add
inc
add
push
mov
add
mov
adc
test
mov
call
mov
jmp
and
and
dec
xor
sub
add
inc
inc
add
nop
add
sbb
inc
push
shl
push
ins
add
test
sub
add
add
add
add
xor
and
add
xor
add
add
or
test
adc
add
cmp
test
add
xchg
sbb
xor
mov
call
mov
adc
add
inc
push
rol
add
mov
add
add
add
add
test
or
add
jo
add
rcl
fs
mov
or
add
or
ret
dec
fs
add
sbb
or
mov
mov
sub
pop
add
adc
xchg
add
adc
add
inc
adc
dec
shl
nop
inc
adc
push
add
add
add
inc
inc
xchg
sub
rcl
les
sbb
and
add
add
inc
or
inc
pop
add
inc
inc
add
add
add
cmp
ret
add
sub
adc
cdq
add
or
popa
and
retf
add
adc
and
dec
mov
inc
add
sbb
mov
add
add
xchg
adc
add
inc
add
add
and
jno
sbb
add
sub
and
xchg
inc
add
inc
add
adc
and
add
cmp
and
mov
add
and
and
movs
mov
sub
mov
mov
inc
sub
lds
ret
add
or
add
and
or
loopne
add
mov
and
push
sbb
pop
or
add
jno
and
xor
inc
add
test
mov
dec
dec
adc
xor
and
and
inc
adc
adc
add
cmp
les
mov
loopne
xor
add
sbb
add
inc
add
ret
push
inc
add
loopne
add
add
add
sub
inc
mov
or
adc
adc
or
adc
add
jmp
and
or
add
adc
add
mov
add
loope
push
push
or
xlat
or
add
add
or
add
xchg
pusha
inc
add
add
dec
or
or
sar
test
xor
pop
add
add
and
add
inc
mov
add
or
add
add
mov
push
mov
add
or
or
pusha
add
inc
inc
add
adc
or
inc
add
adc
or
pusha
and
sub
adc
xchg
inc
dec
add
(bad)
xor
push
and
or
mov
or
push
movs
and
add
add
lea
imul
push
adc
xor
adc
xor
add
inc
add
and
adc
sub
and
add
add
add
inc
add
or
and
inc
or
adc
inc
and
add
les
add
mov
inc
test
dec
xor
add
inc
dec
ret
test
dec
dec
xchg
add
and
and
and
add
and
and
add
mov
mov
add
add
xor
sub
inc
dec
pusha
inc
and
add
inc
sbb
add
or
or
add
inc
and
add
or
and
mov
xor
add
test
and
push
jle
mov
pop
add
add
add
inc
and
inc
add
add
add
add
dec
cmp
adc
push
and
xchg
add
and
adc
sub
nop
add
add
add
inc
or
retf
pusha
sub
adc
add
xchg
or
add
pop
add
add
or
or
add
pop
sub
add
inc
lds
and
add
add
fs
add
sub
pushf
test
adc
add
add
and
sub
inc
cwde
les
sbb
pusha
adc
add
and
add
add
adc
test
xor
add
sbb
pusha
add
or
dec
add
inc
add
cwde
add
and
cmp
xchg
and
mov
and
rcl
inc
push
adc
and
add
nop
inc
and
add
push
inc
or
popa
add
add
add
and
test
add
movs
add
sbb
or
or
and
and
pushf
inc
adc
xchg
inc
lds
and
sbb
adc
add
or
or
and
inc
mov
add
add
inc
adc
add
mov
add
adc
aaa
nop
adc
adc
add
sub
add
or
pop
and
inc
inc
inc
inc
xor
add
mov
mov
test
lods
loopne
xchg
mov
shl
add
push
xchg
add
dec
and
adc
adc
and
mov
add
inc
sub
xchg
adc
adc
adc
sbb
inc
add
pop
xor
or
and
dec
add
lock
add
or
mov
pusha
add
add
xchg
and
inc
push
mov
mov
adc
sbb
or
les
and
xor
xor
mov
adc
or
cwde
or
add
nop
and
adc
add
and
adc
add
inc
cmp
bound
test
test
mov
add
add
adc
xor
and
mov
or
sbb
sbb
pushf
add
sub
into
sub
or
add
or
and
add
add
xor
enter
add
test
xor
add
adc
adc
adc
and
xchg
sub
adc
sbb
add
adc
sub
add
sub
adc
adc
push
add
jno
inc
cwde
add
push
or
and
add
pusha
add
xor
rol
and
mov
inc
xchg
add
sub
inc
add
adc
and
add
inc
lods
add
add
and
cwde
xor
and
add
sbb
add
inc
enter
or
loope
add
and
mov
mov
and
and
nop
add
and
inc
adc
add
or
push
inc
movs
and
mov
mov
mov
add
push
je
add
adc
or
adc
inc
and
add
add
push
push
add
add
inc
mov
adc
or
add
inc
cwde
and
sbb
add
and
add
and
rol
and
inc
add
add
pusha
pusha
pop
and
mov
add
mov
add
and
or
adc
test
mov
and
inc
sbb
pusha
add
in
adc
add
inc
add
or
mov
add
dec
inc
mov
mov
or
and
test
or
daa
pop
adc
sub
sbb
inc
xchg
and
inc
or
sbb
test
add
nop
xor
and
sub
or
mov
add
and
xor
mov
popa
and
inc
add
or
add
and
or
add
add
sub
adc
pop
add
ret
push
or
add
dec
adc
or
daa
inc
add
mov
add
inc
xchg
add
and
xor
add
adc
and
movs
add
cmp
or
test
and
popf
add
xchg
add
rcl
and
fld
add
test
stos
adc
cmp
add
loopne
add
add
movs
adc
add
and
add
and
add
or
pop
and
or
test
xor
add
push
sub
gs
inc
and
sub
nop
mov
or
add
add
dec
and
add
add
add
and
and
push
inc
dec
or
jo
add
pusha
and
sub
add
dec
sbb
and
xchg
add
nop
add
or
sub
add
ficom
add
add
or
or
add
adc
adc
inc
add
or
add
pop
inc
adc
or
adc
add
adc
mov
adc
or
add
adc
mov
rol
dec
test
add
add
add
add
or
sub
and
test
pop
sub
sub
or
mov
inc
and
or
inc
add
inc
rol
pushf
push
rol
and
add
dec
add
add
add
popa
sub
adc
adc
or
mov
inc
and
and
and
sub
xor
add
nop
add
inc
push
and
and
add
push
test
ins
dec
adc
adc
or
add
xor
add
push
add
add
xchg
add
inc
or
sub
or
inc
mov
inc
rol
rcl
adc
xchg
add
and
add
adc
push
add
add
xor
gs
add
bound
add
add
js
adc
and
adc
xor
add
push
lahf
nop
adc
int
dec
inc
add
ret
push
movs
fcom
and
or
add
pop
mov
or
add
or
and
or
inc
adc
inc
and
or
or
dec
or
add
inc
add
dec
adc
adc
or
and
xor
xchg
adc
fsub
adc
cmp
sub
pusha
and
add
bound
inc
and
sbb
add
and
push
add
add
add
adc
gs
add
adc
mov
pop
add
cmps
pop
adc
sbb
mov
push
dec
inc
pop
adc
add
sub
or
push
add
pop
inc
add
add
dec
adc
mov
nop
xor
add
movs
sub
add
adc
xor
add
push
mov
sub
mov
mov
push
mov
mov
push
mov
push
cmp
jne
mov
cmp
jne
mov
push
push
call
mov
cmp
je
and
mov
mov
mov
mov
mov
cmp
jne
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
cmp
je
and
mov
push
call
test
jne
mov
mov
sub
mov
mov
mov
push
call
mov
cmp
jne
cmp
je
sub
mov
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
sub
mov
mov
mov
mov
xor
cmp
jne
add
cmp
je
sub
mov
cmp
jne
mov
mov
mov
mov
test
jne
add
cmp
je
cmp
jne
mov
cmp
je
mov
mov
add
cmp
je
mov
cmp
jne
mov
cmp
jne
mov
add
cmp
je
cmp
jne
mov
test
jne
add
mov
test
jne
or
test
je
sub
test
je
or
mov
mov
cmp
je
cmp
je
mov
cmp
jne
add
mov
cmp
jne
cmp
je
sub
cmp
je
mov
add
mov
cmp
je
mov
mov
test
je
mov
mov
mov
add
mov
or
mov
mov
cmp
jne
mov
sub
cmp
jne
mov
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
cmp
jne
mov
add
mov
cmp
jne
mov
mov
sub
mov
mov
cmp
je
mov
mov
add
mov
and
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
je
add
mov
mov
mov
add
mov
cmp
je
mov
add
cmp
je
mov
mov
sub
mov
cmp
je
test
jne
sub
mov
mov
add
mov
mov
mov
add
mov
mov
cmp
jne
mov
mov
mov
lea
mov
mov
push
xor
mov
cmp
je
mov
push
mov
sub
mov
mov
call
add
mov
mov
mov
cmp
je
cmp
jne
test
jne
cmp
je
mov
add
cmp
jne
sub
mov
mov
mov
shr
add
cmp
jne
xor
mov
mov
mov
cmp
jne
sub
mov
cmp
jne
add
mov
test
jne
sub
mov
cmp
jne
cmp
je
mov
mov
sub
cmp
je
mov
cmp
je
xor
mov
test
je
mov
cmp
jne
cmp
jne
sub
mov
mov
cmp
jne
mov
add
mov
cmp
jne
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
xor
cmp
jne
sub
mov
mov
sub
mov
mov
mov
mov
sub
xor
mov
push
push
push
call
test
jne
mov
add
mov
mov
mov
cmp
je
and
mov
call
sub
mov
test
je
mov
cmp
je
mov
xor
cmp
jne
xor
mov
mov
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
mov
cmp
je
xor
mov
mov
mov
cmp
je
cmp
jne
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
mov
cmp
jne
mov
sub
mov
mov
test
je
mov
test
jne
mov
sub
mov
mov
cmp
jne
xor
mov
mov
mov
pop
mov
leave
ret
mov
mov
mov
mov
push
push
push
call
mov
add
cmp
je
sub
mov
mov
mov
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
call
mov
push
push
call
mov
and
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
pop
mov
add
mov
pop
mov
cmp
jne
mov
add
mov
mov
mov
mov
mov
pop
add
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
sub
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
mov
or
mov
mov
mov
call
and
mov
cmp
je
mov
cmp
jne
add
mov
mov
cmp
je
mov
call
xor
mov
cmp
jne
xor
mov
mov
cmp
je
mov
mov
cmp
jne
mov
add
add
cmp
je
add
mov
cmp
je
mov
xor
mov
cmp
jne
mov
and
mov
test
je
add
cmp
je
sub
mov
mov
mov
mov
mov
mov
push
call
mov
or
je
sub
mov
add
mov
lea
mov
cmp
jne
mov
mov
mov
inc
cmp
jne
mov
mov
cmp
je
add
cmp
je
sub
mov
cmp
je
add
mov
cmp
jne
mov
mov
mov
mov
mov
sub
mov
cmp
jne
xor
mov
mov
cmp
je
mov
mov
xor
cmp
je
test
jne
mov
cmp
je
cmp
je
mov
test
jne
mov
test
je
mov
sub
mov
cmp
je
xor
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
test
je
mov
mov
sub
cmp
jne
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
cmp
jne
mov
mov
or
test
je
mov
mov
add
cmp
je
mov
mov
mov
sub
cmp
jne
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sub
mov
pop
cmp
jne
mov
sub
mov
cmp
je
xor
mov
pop
cmp
je
or
cmp
je
mov
xor
mov
cmp
jne
add
test
je
mov
xor
mov
mov
cmp
je
mov
test
jne
mov
mov
test
je
xor
mov
cmp
jne
mov
mov
mov
xor
mov
cmp
je
sub
mov
mov
cmp
je
mov
test
je
mov
mov
cmp
je
mov
cmp
jne
mov
mov
mov
add
mov
pop
mov
sub
mov
cmp
je
mov
mov
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
add
mov
push
mov
push
mov
mov
push
xor
mov
mov
mov
mov
rdtsc
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
xor
test
je
or
mov
cmp
jne
mov
test
jne
cmp
jne
mov
sub
mov
mov
mov
sub
mov
mov
or
mov
mov
sub
cmp
jne
xor
mov
cmp
je
add
cmp
je
mov
cmp
jne
mov
xor
mov
cmp
jne
mov
mov
mov
rdtsc
xor
mov
mov
and
mov
sub
mov
cmp
jne
mov
mov
cmp
je
mov
test
je
mov
xor
mov
mov
test
jne
mov
mov
pop
add
mov
mov
test
je
cmp
je
cmp
je
mov
cmp
jne
mov
mov
mov
cmp
je
mov
sub
mov
mov
mov
cmp
je
mov
pop
mov
pop
cmp
je
add
mov
mov
mov
cmp
jne
cmp
jne
xor
mov
mov
cmp
jne
mov
xor
mov
cmp
je
or
test
jne
cmp
jne
xor
cmp
je
cmp
jne
cmp
je
cmp
jne
add
mov
test
je
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
cmp
je
sub
cmp
jne
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
or
mov
cmp
jne
xor
mov
push
mov
mov
push
mov
cmp
je
mov
or
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
add
mov
cmp
je
mov
xor
mov
mov
mov
xor
mov
test
je
mov
mov
add
test
jne
mov
mov
mov
xor
mov
cmp
je
mov
dec
mov
sub
mov
add
cmp
je
sub
mov
neg
mov
and
cmp
jne
mov
rol
or
mov
mov
mov
test
je
mov
add
mov
add
xor
cmp
je
mov
xor
cmp
je
cmp
jne
mov
mov
mov
mov
add
sub
mov
test
je
sub
mov
mov
mov
sub
mov
jmp
cmp
je
cmp
je
or
test
je
mov
mov
cmp
je
mov
sub
mov
cmp
je
mov
sub
cmp
je
mov
add
mov
test
jne
sub
mov
mov
cmp
je
mov
xor
cmp
je
add
mov
cmp
je
sub
mov
mov
cmp
jne
xor
mov
mov
mov
cmp
je
add
cmp
je
mov
mov
mov
add
mov
add
mov
cmp
je
test
je
cmp
jne
sub
mov
mov
test
jne
mov
add
mov
mov
cmp
je
mov
mov
cmp
jne
mov
xor
cmp
jne
sub
cmp
jne
mov
mov
cmp
je
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
pop
cmp
jne
mov
pop
xor
cmp
je
cmp
je
add
mov
pop
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
cmp
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
mov
mov
sub
mov
mov
mov
add
mov
mov
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
cmp
jge
cmp
jle
jmp
jmp
mov
mov
mov
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
movzx
mov
movzx
cmp
jle
mov
mov
mov
cmp
je
mov
test
je
mov
mov
mov
movsx
cmp
jl
movsx
cmp
jg
movsx
add
mov
mov
mov
mov
movsx
cmp
jl
movsx
cmp
jg
movsx
add
mov
movsx
movsx
cmp
je
jmp
movsx
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmp
je
cmp
je
cmp
jbe
mov
movsx
test
je
mov
mov
mov
mov
add
mov
mov
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
mov
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsx
mov
movsx
cmp
jne
mov
movsx
test
jne
mov
mov
movzx
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmp
je
cmp
je
mov
mov
mov
mov
mov
test
je
mov
movsx
mov
movsx
xor
mov
mov
mov
movsx
sub
mov
mov
mov
movsx
mov
movsx
lea
mov
mov
mov
movsx
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
lds
sbb
(bad)
cmc
rol
push
and
mov
pop
in
add
mov
or
imul
loopne
xchg
mov
adc
int3
xchg
push
inc
cmp
mov
cs
movs
sbb
push
cmp
xchg
mov
lea
ins
inc
movs
pop
mov
xrelease
push
mov
jl
fnstsw
sahf
pop
je
loope
push
mov
outs
xchg
jmp
int
adc
jle
push
mov
rcr
inc
test
ror
and
inc
push
js
cmp
inc
out
int3
adc
test
arpl
vmread
enter
push
xor
push
sub
xor
dec
(bad)
mov
push
fiadd
arpl
and
mov
add
mov
xchg
call
push
ret
mov
js
pusha
frstor
xchg
xchg
dec
mov
mov
pusha
lahf
aas
cs
dec
sahf
mov
xchg
jno
mov
aad
(bad)
lahf
scas
ins
lods
pop
push
sti
in
ror
out
out
xchg
mov
ds
sbb
(bad)
aas
adc
jl
mov
dec
cmps
daa
cmp
mov
int
mov
ret
cmp
mov
pop
jbe
sub
stos
mov
pop
jge
cmp
imul
pop
sub
scas
or
xchg
sub
adc
inc
ret
cwde
pop
call
ja
pop
icebp
jne
sahf
aas
inc
int
jmp
dec
and
or
mov
or
push
(bad)
push
or
stos
push
call
adc
popa
sbb
cld
rol
push
jbe
jns
enter
jg
test
xchg
mov
(bad)
mov
push
dec
(bad)
or
mov
mov
xor
jle
xchg
fdiv
xchg
cmp
pop
popf
or
nop
mov
or
xchg
jmp
in
fucomi
cs
mov
mov
pop
mov
adc
daa
push
jbe
push
lock
mov
mov
mov
div
bound
mov
dec
sbb
sbb
cmps
inc
js
dec
inc
push
shl
cmp
sbb
and
pop
jl
lds
(bad)
mov
xchg
cli
sub
sbb
stos
jbe
sti
push
jno
and
jge
(bad)
bound
dec
sub
cli
dec
cmps
xchg
jl
mov
je
icebp
add
sub
sub
xor
fnstenv
fnstsw
sub
nop
(bad)
dec
inc
daa
(bad)
imul
xor
xor
fs
add
outs
inc
mov
das
jae
sub
dec
enter
sbb
(bad)
hlt
xor
lods
push
shr
jns
push
cmps
pusha
je
aad
out
push
outs
aas
or
(bad)
mov
fisttp
(bad)
mov
push
inc
push
adc
(bad)
xor
stos
push
stos
add
xchg
pushf
sbb
push
fist
enter
add
push
pop
mov
mov
xor
inc
push
call
fistp
inc
mov
cdq
shl
cmp
repnz
(bad)
pushf
jo
xor
outs
adc
adc
push
inc
dec
push
out
(bad)
and
ffreep
ret
sbb
(bad)
push
push
and
addr16
out
and
sbb
pop
and
out
ror
pop
mov
aam
push
cli
dec
xchg
fidiv
push
dec
jge
or
xor
sahf
jmp
jb
cld
test
add
rcr
pop
stos
pusha
rcl
xchg
ret
lods
sbb
jns
xchg
int3
sub
jmp
(bad)
hlt
jle
lea
icebp
les
aam
(bad)
loope
movs
or
neg
test
ret
mov
inc
(bad)
call
push
cli
mov
lock
xor
jmp
pop
cwde
shl
test
mov
shl
ins
outs
add
repz
inc
or
mov
jmp
and
push
std
popa
in
test
mov
mov
mov
out
cmp
movs
arpl
nop
inc
pushf
pushw
inc
call
sbb
int
sbb
lds
and
std
mov
mov
sbb
inc
mov
dec
xchg
mul
jb
sahf
mov
js
or
mov
(bad)
fstp
jbe
adc
out
add
out
les
inc
inc
std
jo
sbb
aas
js
xchg
repnz
and
xlat
repnz
bound
loope
enter
jo
mov
adc
lods
sti
ins
mov
xor
retf
pop
clc
aad
pusha
adc
enter
adc
sub
popa
nop
pusha
stos
mov
ja
xchg
jmp
lock
cmp
test
pop
sbb
stos
daa
inc
(bad)
pop
xchg
aam
cmp
xor
push
xchg
popa
and
xor
out
xchg
add
push
sbb
pop
push
jmp
cmps
lds
push
xchg
cld
mov
pushf
and
jmp
loop
dec
cmovbe
cmp
pop
aas
mov
ins
jbe
into
adc
shl
cmp
inc
jl
out
mov
repz
mov
mov
adc
xor
inc
mov
retf
imul
adc
add
xor
fmulp
or
and
jecxz
push
(bad)
out
cmp
mov
jmp
test
mov
icebp
iret
(bad)
retf
in
bound
jns
jp
and
xchg
mov
mov
test
adc
pop
dec
clc
xlat
fistp
and
cmp
pop
test
test
pop
sub
push
dec
scas
mov
mov
scas
push
cmc
aad
sub
push
arpl
sub
test
xchg
jl
mov
inc
test
test
sbb
enter
mov
add
jl
pop
je
fnstsw
xchg
jmp
fnstcw
xor
mov
xchg
cmp
mov
mov
fist
mov
mov
iret
and
movs
aas
jge
and
cmp
xor
dec
iret
aas
xchg
in
fwait
xchg
jno
xor
inc
aas
sub
cli
pop
jno
mov
mov
int
repz
and
jmp
inc
dec
sub
fisubr
mov
(bad)
(bad)
dec
ret
neg
sbb
stos
jecxz
sar
adc
add
rcr
sub
cmp
jno
dec
out
adc
cmp
sbb
pop
jns
enter
lds
in
jne
or
(bad)
iret
mov
jg
into
jno
push
fild
jae
enter
fisttp
in
or
icebp
xchg
cmps
mov
arpl
out
adc
jne
jg
sub
or
pandn
lea
nop
gs
sbb
das
xor
cli
mov
ret
fld
(bad)
jge
xchg
add
bound
mov
sbb
pop
iret
lahf
fistp
cmp
retf
mov
ret
addr16
mov
inc
push
inc
push
ror
mov
aaa
adc
xchg
retf
sbb
sub
cmp
push
or
xchg
mov
loopne
aaa
outs
mov
mov
(bad)
push
mov
add
or
pop
push
sub
mov
mov
(bad)
cmps
into
fs
jp
inc
dec
jnp
sub
popf
add
sbb
test
mov
movs
and
jae
repz
inc
adc
(bad)
fmul
scas
cmp
xchg
jmp
or
(bad)
int3
jne
pop
jg
jecxz
shr
sub
inc
loopne
and
loopne
mov
xchg
loop
(bad)
movs
test
or
jl
outs
stos
aam
xchg
js
(bad)
mov
xchg
and
lea
mov
cmp
jge
inc
add
fimul
xchg
sub
out
movs
mov
pop
mov
jl
sbb
call
dec
pushf
ins
ins
das
inc
xchg
xchg
inc
fiadd
out
sbb
jo
xchg
cli
(bad)
addr16
xor
xchg
(bad)
push
pop
sub
pop
(bad)
popa
call
jne
mov
mov
xchg
dec
push
mov
mov
or
sub
fnsave
jbe
(bad)
xchg
cmps
xor
ja
push
hlt
pop
fist
rcl
jmp
pop
inc
jns
aaa
push
xor
daa
cmp
mov
pop
mov
jnp
xchg
(bad)
cmp
xchg
or
(bad)
push
scas
bound
and
mov
call
add
loop
add
out
aas
jne
pop
rol
xchg
adc
(bad)
repnz
adc
not
dec
mov
adc
cmp
lea
mov
stos
les
ret
mov
stos
or
test
jns
(bad)
pop
daa
pop
mov
cwde
mov
sar
xchg
mov
jo
mov
arpl
jne
(bad)
out
adc
data16
in
mov
ret
fbstp
push
push
sub
imul
push
inc
cwde
sub
fcmovu
xchg
shl
nop
xor
push
jno
mov
xchg
jg
mov
xchg
(bad)
js
mov
mov
jecxz
add
or
leave
pusha
mov
iret
aas
mov
ret
add
push
xchg
call
fdiv
jg
shl
push
mov
mov
xchg
mov
in
jmp
in
inc
lods
nop
les
aaa
aas
push
add
xlat
sbb
adc
sbb
ins
outs
out
lds
(bad)
iret
sub
jns
shl
shl
push
dec
std
daa
push
or
mov
sub
popf
out
mov
leave
jg
ss
js
xchg
cmp
inc
inc
stos
sub
xor
les
aas
mov
inc
dec
data16
imul
(bad)
pop
cmp
(bad)
enter
or
sbb
shl
(bad)
out
aaa
loop
push
mov
aas
test
dec
(bad)
push
ret
stos
pop
pop
enter
push
fwait
xor
cmc
push
and
push
cmp
sahf
jo
xlat
or
retf
cmp
loopne
enter
int
push
test
sahf
xchg
or
and
and
pop
mov
jo
adc
mov
cwde
lods
jb
aam
bound
jbe
push
std
shl
and
outs
and
arpl
mov
sbb
dec
xchg
bound
pop
popa
dec
push
push
ror
fnop
aas
inc
lock
sbb
mov
js
sub
(bad)
cmps
mov
aas
jnp
stc
mov
ret
mov
out
fmul
sbb
aas
call
inc
popf
jmp
xchg
inc
int3
mov
inc
jb
fs
stos
retf
adc
mov
inc
jo
mov
add
push
inc
dec
and
(bad)
aam
sahf
mov
in
fild
iret
dec
js
mov
add
retf
lahf
retf
leave
sub
or
sub
push
aad
mov
(bad)
fisub
lds
xchg
daa
pop
xchg
inc
into
pusha
sbb
sub
gs
mov
push
fdivp
fimul
lods
mov
mov
fdivrp
xchg
mov
lds
(bad)
sub
mov
adc
aam
test
push
and
icebp
es
cli
(bad)
mov
cmps
and
nop
pop
jmp
icebp
dec
aas
mov
fdivr
je
mov
in
jl
push
test
and
sub
enter
ss
aam
sub
adc
sar
fbld
and
addr16
out
cwde
xchg
xchg
out
aas
outs
mov
mov
mov
inc
mov
call
dec
int
push
sbb
repnz
xor
pop
out
mov
push
lods
cdq
in
les
xchg
repz
retf
and
push
dec
xor
xchg
ror
add
in
lods
aaa
xchg
jno
add
xlat
inc
dec
mov
mov
pop
mov
jne
loopne
xor
addr16
push
jae
xchg
pop
mov
loop
inc
dec
inc
sbb
imul
xchg
sti
icebp
shl
fidivr
les
mov
xchg
mov
xchg
imul
daa
sbb
inc
ret
pop
cmp
cdq
into
int
or
jns
lods
mov
aas
mov
mov
xor
enter
jns
mov
jg
aas
xor
and
int
lods
rcr
out
xchg
push
xchg
cmp
xchg
pop
push
push
sub
mov
nop
xor
iret
mov
(bad)
push
cmp
cmps
sar
in
fstp
daa
les
and
and
mov
lods
rcr
jg
iret
cmp
shr
fild
std
adc
nop
push
imul
cmps
(bad)
jmp
neg
cmc
stos
aad
addr16
jle
cwde
ror
pop
leave
das
daa
or
jl
pop
ins
int3
fs
and
out
fbstp
aas
lea
mov
jg
sub
stos
icebp
gs
jg
sub
push
mov
mov
iret
ror
adc
aam
addr16
cmps
pop
xchg
inc
js
(bad)
push
xchg
sub
adc
dec
cli
rcr
jmp
add
push
lea
adc
dec
xchg
cmp
push
jno
pop
mov
pop
rol
movs
xchg
inc
out
mov
jmp
popa
push
dec
inc
movs
(bad)
pushf
push
push
pop
scas
push
dec
rcr
and
mov
sub
shl
test
call
bound
test
adc
inc
(bad)
in
mov
(bad)
repnz
inc
mov
test
bound
fcom
in
and
xchg
sbb
pop
mov
scas
xor
xchg
lods
mov
cmp
stos
adc
dec
lods
jl
aam
sti
mov
ds
xchg
sub
jae
dec
push
ins
lea
stc
mov
jge
push
int
or
add
(bad)
pushf
xor
or
jns
in
clc
pop
lahf
mov
push
cmps
sbb
sub
aam
std
nop
inc
outs
mov
xor
rcl
xor
jmp
mov
data16
jle
xor
push
movs
enter
lods
pop
in
scas
mov
lods
addr16
lods
jl
inc
and
xabort
adc
or
xchg
cmps
std
scas
repnz
ficom
mov
cmc
mov
(bad)
scas
sar
ror
loop
fs
loope
mov
dec
cmp
(bad)
or
imul
xchg
sbb
xor
sbb
mov
out
ror
xchg
(bad)
loope
sbb
int
rol
sahf
leave
xchg
shl
or
or
es
shr
pop
push
sti
add
cld
ret
or
add
aam
sub
push
mov
add
sbb
and
(bad)
push
mov
stos
jg
in
or
mov
inc
addr16
aas
dec
arpl
and
or
int3
jae
inc
scas
lea
xchg
fcom
push
aas
aas
pop
adc
cmp
mov
push
sbb
pop
adc
add
pop
jecxz
or
dec
enter
bound
imul
xchg
nop
add
neg
mov
inc
mov
push
jecxz
jge
lds
fisttp
nop
(bad)
cmc
icebp
int3
xor
jge
add
in
xor
push
dec
fsub
sub
push
push
mov
push
inc
cmp
enter
cmp
mov
enter
mov
mov
stc
xchg
xchg
mov
add
pop
push
mov
std
cmps
sbb
cmp
cmp
or
sub
test
pop
mov
cdq
and
test
cmc
mov
fmul
ror
sahf
xor
cdq
int
push
aam
push
fld
in
(bad)
lock
xchg
xchg
and
fcom
repz
popa
js
sub
xchg
jp
jnp
mov
sbb
sbb
mov
mov
mov
sbb
sti
std
stc
nop
mov
sbb
dec
and
mov
jo
out
mov
test
popf
outs
fst
(bad)
jae
and
push
push
rol
out
add
loopne
mov
pop
xchg
pop
out
push
stos
cmp
enter
stos
outs
xchg
inc
xor
and
inc
push
cmp
inc
mov
mov
adc
outs
daa
stos
inc
not
pusha
out
mov
jne
mov
push
push
hlt
mov
mov
leave
mov
sbb
scas
nop
mov
into
sbb
in
pushf
mov
adc
adc
retf
int
and
jnp
retf
push
rcl
(bad)
cmp
out
mov
mov
inc
push
ss
(bad)
mov
xor
sar
mov
xchg
xchg
add
rol
adc
pop
(bad)
sti
(bad)
mov
push
mov
popa
mov
(bad)
xlat
aas
test
inc
addr16
iret
imul
sub
jge
inc
sub
loop
mov
mov
clc
sub
and
sbb
mov
or
xchg
scas
inc
hlt
popa
push
div
add
ja
xchg
jmp
cdq
shl
dec
lods
jecxz
xor
ins
cs
test
out
dec
xor
sbb
add
sbb
push
adc
retf
(bad)
jns
ret
arpl
dec
lahf
(bad)
jnp
dec
mov
sysexit
cld
push
fnstcw
xor
inc
ss
pop
xchg
ficom
mov
and
lea
push
les
clc
dec
adc
fldenv
xor
inc
int3
out
jnp
mov
dec
rcl
mov
enter
inc
sub
inc
mov
fwait
xor
jmp
push
lods
das
xchg
(bad)
mov
ins
cli
pushf
mov
imul
enter
pushf
ror
cmp
jecxz
xlat
pop
lods
xchg
lods
xchg
loop
imul
(bad)
(bad)
sub
inc
sti
xchg
cmp
xchg
hlt
lock
xor
lahf
add
ja
cmp
cmps
mov
ror
movs
int3
xchg
adc
lahf
fdivr
pop
pop
cld
mov
push
mov
popa
and
sahf
inc
icebp
cmps
mov
push
and
adc
in
mov
xchg
fbstp
(bad)
xchg
js
dec
sub
out
in
mov
arpl
movs
xchg
pop
lea
xor
jle
loope
ret
cmp
ret
mov
pop
jmp
xchg
jl
dec
add
aas
mov
ins
shl
int
push
and
movs
sub
pushf
shl
(bad)
aad
or
ss
shl
repnz
(bad)
cmp
or
cmps
jg
push
movs
mov
push
test
mov
inc
mov
mov
fist
sub
jecxz
ret
mov
pmulhuw
mov
(bad)
xor
popf
sbb
pop
inc
fidivr
aas
stos
push
ds
mov
adc
fs
aad
add
nop
mov
aaa
and
stc
mov
hlt
pop
and
scas
xchg
xlat
dec
mov
mov
call
xor
wrmsr
inc
add
inc
dec
test
pop
(bad)
pop
test
test
push
stos
inc
inc
(bad)
xor
cdq
pop
or
pop
push
ror
ss
sahf
enter
int
lods
add
dec
std
xor
jne
cwde
push
push
ficom
push
shr
adc
inc
cld
fisttp
push
xchg
popf
sbb
mov
jne
psubsw
retf
inc
(bad)
(bad)
jmp
and
mov
push
leave
mov
cdq
ins
mov
inc
(bad)
sub
or
xchg
iret
das
lahf
or
add
and
(bad)
retf
mov
fdivr
add
aad
sti
jle
mov
xchg
pop
jg
pop
adc
pop
mov
aas
loopne
fnstenv
xor
(bad)
rcl
xchg
push
lds
xchg
cmp
jne
mov
jbe
xor
inc
sub
xchg
fwait
pop
iret
sbb
loopne
xor
fidivr
sub
lea
and
and
das
dec
push
and
lods
xchg
rcl
inc
getsec
add
cdq
mov
aas
inc
mov
cmp
retf
xor
dec
jae
mov
mov
dec
hlt
and
ret
gs
enter
inc
push
and
in
mov
dec
push
jmp
sub
pop
xchg
adc
xchg
push
mov
(bad)
push
int
mov
sbb
(bad)
lods
xchg
adc
movs
add
push
or
mov
or
ins
push
xchg
push
or
dec
sub
stos
movs
in
ins
daa
sahf
push
in
dec
pop
sub
pop
fsubr
pop
or
jg
aam
pusha
pop
jecxz
inc
jmp
pop
aas
and
nop
xchg
cmp
add
(bad)
rcl
push
sub
shl
xor
and
aas
mov
retf
lahf
bound
jbe
repz
(bad)
dec
retf
jge
jb
dec
jle
cmps
xchg
pop
mov
int3
in
mov
inc
scas
nop
and
push
fst
(bad)
cmp
push
xchg
(bad)
and
adc
rcr
inc
call
(bad)
mul
call
(bad)
jae
sub
adc
sub
mov
adc
jnp
xor
stos
js
or
xchg
invd
lea
(bad)
and
shl
or
pop
cmps
push
sbb
sub
xor
scas
outs
cmps
fwait
jae
push
hlt
into
cmp
inc
pop
pop
cld
lea
mov
dec
xor
jl
movs
scas
or
inc
jne
pop
dec
dec
and
fidivr
pop
jne
mov
inc
cmp
stos
jno
jns
push
int3
fmul
loop
xor
inc
sub
int
xchg
das
(bad)
ins
dec
xchg
lea
fs
fcomp
rol
mov
adc
inc
pop
enter
leave
jge
icebp
or
jmp
add
push
push
leave
or
loop
sbb
pusha
inc
sbb
outs
scas
loopne
pop
push
jp
movs
or
jbe
pop
scas
add
(bad)
or
in
xor
imul
fcom
adc
xchg
push
pusha
dec
push
inc
dec
(bad)
cmp
call
lahf
mov
sbb
mov
xchg
xor
mov
dec
mov
scas
and
push
add
(bad)
push
or
imul
rcl
mov
pop
test
xchg
xchg
ja
sub
or
in
aas
push
stos
sbb
lock
and
ficom
ss
inc
mov
mov
sub
movs
test
mov
shl
cmp
push
mov
sbb
bound
inc
popa
sbb
xchg
cmps
add
xchg
mov
ret
xor
cs
sub
retf
push
rcl
mov
out
xor
fidivr
inc
int
das
int3
and
repz
and
not
jp
cli
rol
out
jecxz
ficom
mov
add
(bad)
fwait
adc
sub
fwait
inc
cmps
dec
sahf
sbb
jo
jmp
leave
inc
mov
and
xchg
pop
push
dec
xor
dec
xor
test
inc
add
or
push
mov
pop
(bad)
dec
mov
mov
jo
fnstenv
test
hlt
sbb
frstor
js
rol
push
retf
jb
mov
push
xchg
and
loop
xchg
popa
cmp
and
test
push
mov
pop
ins
loope
xchg
mov
jno
pop
dec
data16
jp
jle
and
cmp
ja
push
fcom
jp
mov
sub
pop
(bad)
jg
xor
and
pushf
mov
sbb
push
jbe
pop
int3
and
int
sub
ja
mov
cmp
pop
xchg
retf
xor
cmc
out
sbb
adc
imul
sub
xor
dec
std
jns
sbb
lods
mov
push
clc
or
cmp
aad
jae
dec
fs
aad
ins
aas
test
rcr
add
jecxz
dec
jle
xchg
mov
cmp
inc
and
aas
stc
cmp
xor
mov
movs
mov
add
cmp
scas
mov
pop
mov
repz
test
test
push
sub
jmp
mov
retf
inc
push
push
dec
inc
mov
cdq
sbb
popf
daa
sar
(bad)
mov
or
(bad)
ds
movs
out
cld
in
addr16
inc
and
dec
and
imul
dec
in
dec
mov
push
xchg
xchg
sub
(bad)
mov
movs
push
add
push
and
jno
outs
fidivr
mov
mov
scas
push
jnp
ror
repz
nop
loope
lea
mov
add
push
icebp
inc
outs
and
add
scas
into
nop
ficom
rol
aas
rol
arpl
sub
xor
out
push
push
test
mov
idiv
jg
xor
inc
xor
fldz
push
movs
outs
lea
gs
jl
cli
loopne
loope
xchg
push
mov
pop
stos
mov
xor
das
cmp
dec
(bad)
sub
mov
jae
xchg
leave
mov
fnsave
ds
fmul
xchg
and
xor
ins
xchg
push
xor
mov
movs
dec
das
and
sar
sub
push
enter
dec
fcmove
aam
mov
and
rcr
icebp
jne
neg
pop
jnp
mov
call
cwde
inc
js
sub
push
mov
(bad)
sahf
inc
mov
call
loope
test
xchg
sbb
shr
and
aas
nop
es
call
jne
mov
adc
mov
sub
xchg
jno
pop
scas
sub
mov
stos
jno
xor
lods
popf
les
loope
xchg
cmp
(bad)
xor
(bad)
pusha
mov
and
jg
jbe
xchg
outs
jne
mov
xor
(bad)
xchg
jne
icebp
jg
xor
int3
xchg
(bad)
jae
call
lods
pop
push
xchg
sbb
push
int
shr
inc
les
lahf
and
dec
or
(bad)
mov
punpckhbw
fadd
pop
sbb
push
in
int
lahf
ror
xor
(bad)
(bad)
cmp
push
xchg
clc
jmp
or
jo
(bad)
lea
xchg
loop
jmp
sub
ins
lea
inc
cs
push
cli
jg
push
mov
scas
(bad)
in
xchg
jae
(bad)
imul
int3
or
sub
bound
push
fistp
clc
out
or
xor
ffreep
inc
test
or
in
enter
test
inc
mov
jle
lds
sub
retf
adc
jno
cmp
(bad)
pop
push
(bad)
xchg
xor
adc
ins
pop
das
mov
cmp
xor
adc
jb
cli
and
jbe
inc
sbb
cmc
dec
popa
xlat
(bad)
push
and
test
mov
rcl
mov
jmp
out
dec
lahf
or
movs
popf
(bad)
xchg
stos
pusha
pop
in
pop
mov
pop
scas
stos
aam
jp
call
push
inc
js
xchg
xlat
or
mov
pusha
lds
pop
int3
inc
and
stc
xor
mov
cdq
xor
xlat
push
fmul
fmul
mov
and
add
ja
mov
jmp
outs
je
and
icebp
dec
daa
and
push
pop
xchg
lahf
jnp
mov
xchg
jl
ja
je
fnstenv
mov
aas
(bad)
ins
sub
clc
mov
or
cdq
cmp
in
pop
iret
fucomi
xchg
xor
mov
imul
arpl
mov
fwait
dec
enter
xchg
inc
icebp
pop
jnp
dec
pop
jg
je
inc
and
inc
jmp
xor
push
out
push
push
inc
in
(bad)
jp
out
cli
push
inc
popf
mov
jns
sub
and
xchg
jns
xor
in
mov
dec
xchg
push
std
jmp
push
inc
xor
push
push
daa
sbb
inc
ret
pop
inc
lods
push
fs
jg
push
rcl
sbb
imul
stos
stos
xor
mov
xchg
aas
clc
jecxz
or
xor
and
pop
push
ret
push
push
push
imul
and
push
add
push
mov
leave
xor
dec
mov
jmp
jb
xchg
rcr
jp
cs
cwde
iret
mov
aas
adc
push
mov
sub
sbb
and
das
sar
xchg
or
(bad)
in
pop
scas
(bad)
jae
stc
push
test
xchg
lods
cmp
idiv
neg
in
in
xchg
pop
clc
inc
test
ret
mov
clc
mov
jne
imul
mov
pop
dec
dec
les
bound
jbe
cmps
sbb
movs
ret
pop
cwde
call
xchg
icebp
cmp
fcomp
add
(bad)
inc
enter
push
mov
repnz
stos
outs
or
aam
into
(bad)
fcomp
stos
cmp
mov
jae
add
inc
xlat
fldenv
je
call
movs
mov
push
fwait
sub
or
push
mov
push
stos
mov
enter
ins
adc
repz
lock
inc
inc
pop
(bad)
(bad)
mov
das
sbb
popf
pop
or
mov
mov
out
sahf
push
nop
fmul
push
in
push
xchg
pop
add
sub
cli
xchg
mov
imul
cmp
mov
and
and
mov
dec
cmp
jns
push
out
mov
inc
daa
jg
ror
cmp
inc
mov
mov
push
sti
pop
test
(bad)
push
call
(bad)
test
jmp
popf
out
pop
outs
jmp
pop
call
cld
iret
iret
add
mov
jl
sar
cwde
xchg
mov
xchg
inc
std
aas
sbb
jno
lock
push
sub
mov
lods
cmp
loop
pop
or
idiv
shl
sbb
aam
pop
loop
xchg
push
fnstsw
adc
add
jae
cmp
(bad)
lods
adc
mov
rcr
(bad)
arpl
lods
sub
test
dec
xchg
inc
imul
mov
sub
sti
mov
ds
ins
sub
xor
jge
cmp
push
sbb
popf
dec
fstp
xor
adc
xchg
mov
int
xor
push
mov
pop
add
cdq
push
jnp
cmp
add
(bad)
js
mov
loop
ret
pop
or
sbb
mov
outs
(bad)
pop
mov
call
jp
shr
inc
test
mov
std
sahf
cmps
aas
xchg
push
jecxz
sbb
inc
inc
pusha
sbb
adc
mov
push
push
xor
push
mov
movs
stos
pop
cdq
cmp
pop
xchg
imul
or
cmp
cdq
loop
dec
retf
dec
xchg
adc
aas
ins
mov
push
aam
mov
pop
xor
mov
lods
das
mov
shl
adc
jp
sbb
xchg
dec
out
sub
inc
pop
adc
pop
call
jecxz
push
adc
cmp
adc
xchg
mov
lahf
cmp
stos
and
jmp
push
push
ror
lock
jb
jg
in
dec
add
pop
push
xchg
lods
sahf
add
xor
jne
jmp
test
rcl
fs
sbb
rcr
inc
cmp
jbe
pop
push
push
or
retf
push
mov
jno
(bad)
aad
cli
loope
jmp
ds
pop
into
ficom
cmp
ins
xchg
lea
and
and
nop
inc
dec
(bad)
in
push
mov
mov
mov
loop
xor
push
jp
nop
jno
sbb
xor
pop
and
leave
(bad)
nop
jle
ds
push
cmps
(bad)
outs
scas
loope
fst
lea
push
or
in
sar
pop
(bad)
sbb
iret
xchg
cwde
call
xor
lods
lea
mov
gs
lea
jb
jle
lds
push
jo
pushf
les
in
jecxz
in
cmp
sub
xchg
jbe
jns
cmp
inc
inc
iret
add
add
addr16
pop
shl
and
dec
and
inc
retf
or
out
inc
and
xchg
mov
xchg
pop
mov
std
in
mov
and
pop
mov
mov
push
cdq
jle
adc
movs
mov
pop
mov
and
pop
(bad)
push
pusha
push
pop
cmp
dec
test
cdq
mov
mov
dec
cmp
aaa
sbb
icebp
call
test
jne
xor
jne
sbb
mov
test
out
dec
mov
es
sbb
mov
cmp
jns
xor
fistp
sub
xchg
(bad)
push
aam
push
aaa
lds
daa
xchg
xchg
adc
mov
jle
dec
loop
es
(bad)
pop
push
pop
cdq
sub
xchg
jl
pop
mov
add
mov
xor
mov
mov
push
dec
mov
mov
xchg
xchg
inc
test
push
aam
or
popf
retf
inc
xchg
adc
outs
and
aas
adc
fisub
or
adc
push
jle
xchg
jnp
mov
sbb
push
mov
add
(bad)
or
or
jne
mov
addps
push
and
cwde
jno
clc
ret
mov
lahf
push
xchg
add
push
repz
pop
movs
jae
lock
call
sbb
mov
push
mul
stc
ror
jne
(bad)
or
shl
in
jo
jmp
jge
dec
jmp
add
add
adc
inc
mov
aad
dec
je
mov
shl
jns
push
test
sub
push
push
mov
(bad)
jb
test
xchg
dec
add
lea
mov
rol
mov
sub
jns
dec
call
(bad)
adc
pop
mov
and
mov
push
es
fnstcw
adc
in
fld
xchg
xchg
lock
inc
shl
push
in
popf
outs
push
xor
and
mov
mov
cld
je
inc
sub
(bad)
aad
ret
xchg
call
mov
(bad)
out
add
jmp
jg
jp
pop
les
cs
xor
shl
add
jns
ins
jno
add
dec
mov
fld
aaa
mov
test
push
leave
mov
cld
ja
sub
cwde
pop
movs
push
test
(bad)
mov
(bad)
leave
into
or
rcl
(bad)
push
pop
imul
(bad)
lahf
outs
jg
push
cmp
lea
or
inc
in
push
and
aad
xchg
shr
frstor
bound
cmp
in
mov
dec
out
and
and
mov
repz
das
push
or
sbb
inc
xchg
imul
xchg
mov
push
or
inc
js
push
push
jnp
cmc
dec
push
push
sub
bound
mov
pop
test
dec
jmp
pop
cli
pop
pop
push
(bad)
call
shr
aam
popf
adc
jmp
adc
inc
and
push
dec
add
stos
add
add
pop
jbe
aas
cwde
sti
repnz
retf
dec
in
xchg
pop
add
cs
test
jno
pop
sub
xchg
jl
or
jno
xor
jg
sbb
push
xlat
push
xor
jnp
mov
mov
push
aaa
pop
mov
xor
repz
(bad)
xor
mov
ins
mov
xchg
push
pop
cli
hlt
test
adc
mov
mov
and
jb
push
std
aaa
cli
fcmovb
xchg
sahf
(bad)
dec
sub
jb
ror
pop
xchg
fistp
cmp
pop
xchg
inc
neg
and
mov
in
imul
jnp
inc
dec
sti
retf
int3
cmc
xchg
pop
adc
ins
rcr
loopne
dec
loop
fisttp
ret
sti
add
aam
int
dec
dec
push
aas
retf
dec
in
imul
jle
push
jge
(bad)
fld
xchg
jno
ja
push
stc
push
pop
jle
sbb
inc
cmps
add
call
xchg
xor
stos
aas
mov
add
jg
(bad)
dec
xor
mov
aam
fldcw
mov
dec
mov
js
sub
(bad)
dec
jg
sbb
mov
mov
add
xor
adc
adc
jg
test
cmp
or
gs
(bad)
mov
in
sub
ins
push
sub
xor
add
jae
pop
div
sbb
xchg
adc
jl
jge
mov
inc
or
pop
loopne
inc
out
ror
add
ins
int3
fisttp
les
int
inc
es
push
jae
lock
mov
int3
inc
cmc
jb
mov
mov
imul
out
push
add
aad
push
push
mov
(bad)
cmp
push
fstp
sbb
or
(bad)
je
mov
fwait
xchg
fist
scas
inc
jmp
pusha
ret
cs
xchg
fbld
fstp
jl
ins
(bad)
xchg
push
inc
retf
mov
and
pop
fld
adc
(bad)
out
fidiv
mov
dec
(bad)
xchg
push
int3
cmp
xchg
int3
jne
mov
rcr
stos
vmread
add
fnstcw
lahf
lods
scas
adc
sahf
addr16
inc
leave
(bad)
and
inc
cmp
mov
push
std
mov
sub
add
loope
xchg
cmp
mov
xchg
(bad)
aam
mov
pop
popf
pop
mov
(bad)
push
mov
mov
addr16
inc
xchg
test
mov
inc
loop
mov
movs
inc
adc
dec
cmp
scas
lahf
not
jo
retf
sbb
mov
cdq
add
xchg
test
xor
cmp
les
nop
addr16
gs
repnz
push
sub
ss
mov
dec
cmp
jl
xchg
xor
test
aas
xchg
jns
dec
(bad)
out
add
xor
inc
(bad)
fsubr
shl
adc
xor
gs
xchg
push
call
xor
and
cmps
and
aaa
mov
mov
(bad)
loop
stos
push
iret
mov
mov
mov
sahf
ret
movs
push
cwde
mov
pop
inc
pop
add
rol
jg
rcl
imul
cmp
sub
push
jo
mov
xchg
test
pop
cmc
neg
(bad)
mov
add
or
push
clc
int
xchg
shr
sub
out
sub
shr
push
aas
inc
ret
cdq
(bad)
add
movs
jmp
fistp
xchg
mov
add
push
js
jo
cmp
jbe
and
jb
fisttp
or
out
out
lods
or
cmc
arpl
cmp
push
cmps
and
push
inc
sub
test
adc
sbb
sub
xor
pop
mov
mov
(bad)
cmps
popa
sahf
cld
scas
ja
out
dec
inc
ret
sub
sub
sbb
xchg
loope
cld
push
inc
stc
jge
les
jmp
in
xchg
jnp
and
cmc
cmps
(bad)
jnp
inc
xor
lea
imul
shl
js
inc
mov
aas
push
add
jne
push
pminub
aad
sbb
or
push
(bad)
fst
add
mov
or
(bad)
cwde
adc
xchg
hlt
arpl
sub
inc
addr16
adc
cmc
and
stos
jae
add
dec
xchg
stos
clc
test
xor
sbb
out
xor
aas
and
jmp
jbe
les
lods
mov
out
mov
out
xlat
mov
push
clc
ret
(bad)
sbb
cmp
adc
sbb
jmp
add
aas
stos
leave
jl
fwait
popf
iret
mov
xlat
imul
and
sti
jecxz
push
punpckhdq
mov
mov
push
sbb
in
push
or
sub
clc
jp
and
jnp
push
inc
in
pop
adc
add
fdivr
call
cmp
cwde
dec
fldcw
and
jl
and
lea
mov
imul
xchg
jbe
jbe
std
xor
jmp
cmps
nop
inc
loope
das
push
push
fnstenv
and
(bad)
jne
loope
cmp
add
push
je
xchg
les
cdq
pop
cmp
or
sahf
or
xchg
int
xor
sub
or
ror
jecxz
(bad)
jg
adc
ds
lods
push
data16
sbb
mov
add
shr
xor
pop
inc
dec
sbb
cwde
cmp
enter
pop
test
push
dec
fsub
std
pushf
nop
add
(bad)
retf
inc
add
mov
sbb
sar
sub
ficom
fwait
stos
ds
mov
push
popa
lods
bswap
enter
es
lods
and
xchg
mov
push
(bad)
in
aas
sbb
xchg
gs
pusha
test
aas
push
and
inc
cli
jg
movs
mov
pushf
and
mov
(bad)
push
mov
xchg
jecxz
cmp
js
clc
xor
test
inc
xchg
iret
adc
mov
push
mov
lods
or
imul
into
ja
retf
test
cmp
adc
adc
popa
mov
sbb
dec
repz
pop
pop
push
jle
into
mov
adc
movhps
jle
pop
nop
out
sub
pop
fdivr
aam
repnz
xchg
fsqrt
(bad)
in
pop
cmp
cmc
sub
pop
lods
repz
std
pop
pusha
bound
std
(bad)
mov
add
sbb
xchg
mov
idiv
pop
not
fwait
inc
mov
popf
ret
cld
(bad)
stc
inc
and
push
lahf
outs
push
mov
xor
push
mov
xchg
dec
aam
rol
popa
ficomp
and
xchg
lahf
adc
lds
jo
sti
movhps
sar
lods
(bad)
arpl
je
test
cs
sub
and
pmulhw
cld
sar
or
jne
sub
imul
mov
outs
jmp
popf
mov
sub
(bad)
test
test
lds
or
leave
jmp
mov
repnz
pop
mov
mov
popa
sbb
pop
push
add
sahf
jg
mov
mov
adc
data16
js
(bad)
cmp
cmps
test
pop
or
push
dec
fist
jp
adc
in
push
loopne
inc
sbb
sbb
or
mov
push
loope
dec
or
cli
shr
adc
call
test
and
jecxz
and
and
add
jnp
cmp
xchg
fsubr
ds
imul
in
adc
pushf
xchg
ret
in
repnz
cmp
pushf
or
pop
cmc
leave
or
cmp
jnp
inc
sbb
outs
ins
push
clc
mov
int3
enter
sub
call
test
popf
ds
div
jmp
xchg
xlat
dec
sbb
pop
stos
les
movs
clc
sub
les
xor
or
(bad)
xchg
add
xchg
cmp
dec
and
adc
js
push
xor
sub
jle
cld
ja
xchg
popf
ins
sub
pushf
sub
(bad)
leave
xlat
aad
jmp
and
je
mov
(bad)
push
pop
ja
(bad)
inc
clc
xchg
test
pop
mov
ror
(bad)
das
enter
dec
rcl
mov
xchg
pop
adc
pop
cmps
cmps
loop
or
inc
xchg
std
fdivrp
push
sahf
cmp
pusha
enter
add
das
jp
inc
and
cmps
pusha
xchg
xor
inc
mov
dec
xchg
jg
push
sbb
pushf
hlt
dec
push
test
nop
enter
pop
popa
lock
xor
call
pop
push
xor
mov
(bad)
jb
push
ret
pop
sub
iret
(bad)
xor
xchg
and
xor
sbb
pop
movs
lds
sbb
mov
(bad)
jnp
and
pop
mov
mov
xchg
push
(bad)
cmp
popf
ret
mov
mov
jg
dec
adc
lds
aad
mov
je
call
push
push
xchg
push
sbb
ins
mov
mov
arpl
jns
stos
dec
rcl
movs
aas
mov
pop
pop
inc
mov
add
ret
gs
push
ret
shl
push
push
pusha
push
sub
sahf
cdq
push
sbb
dec
rol
cmp
dec
stc
in
cmp
push
dec
mov
cmps
jmp
or
dec
sub
rol
aas
movs
xor
jmp
mov
outs
(bad)
cdq
mov
imul
adc
or
out
mov
xor
pop
jns
xchg
int
mov
pop
iret
xchg
jmp
in
arpl
or
enter
and
adc
pop
mov
or
pusha
shr
popf
jg
cli
push
fcom
idiv
xchg
aas
mov
int
dec
jbe
push
mov
push
outs
fwait
dec
pop
add
and
add
fucom
imul
xor
xchg
les
call
(bad)
es
scas
sbb
nop
shl
cdq
xchg
rcl
in
(bad)
mov
pop
ss
xlat
stos
cmp
out
fsubr
push
scas
and
sbb
inc
lods
fmul
adc
push
lods
push
xchg
sub
add
ss
jbe
or
mov
int
loope
xor
dec
les
shl
push
cmp
pushf
adc
mov
sbb
enter
dec
dec
and
push
push
stos
inc
jmp
out
xchg
scas
loop
cmc
dec
mov
inc
retf
neg
xchg
cmp
mov
inc
pop
or
mov
cmp
mov
inc
in
adc
shl
pop
push
fnstsw
xor
adc
and
stos
sub
mov
xchg
int
aad
pop
cld
fisub
xor
pop
(bad)
stc
cmp
out
enter
retf
bnd
outs
scas
retf
mov
(bad)
cmp
movs
fstp
sub
pop
lds
jmp
xchg
jp
(bad)
js
or
(bad)
pop
xchg
adc
std
inc
nop
xchg
add
push
xchg
and
xlat
aas
mov
in
(bad)
add
test
xchg
dec
sti
push
iret
test
jo
push
iret
mov
fcomp
push
daa
add
jl
cld
call
xchg
rol
iret
mov
add
push
xchg
mul
cmp
es
(bad)
call
fldcw
pop
inc
ins
xchg
jg
and
lock
jg
ins
imul
sar
xchg
outs
cmp
xor
test
(bad)
cmp
dec
scas
push
mov
std
ss
adc
adc
scas
fsub
inc
xchg
out
test
test
hlt
xor
push
cmps
mov
or
sti
dec
in
add
inc
xchg
and
cmp
push
mov
cmp
enter
lods
aaa
shr
inc
mov
out
(bad)
std
cmp
add
fwait
test
pop
cld
fiadd
jns
das
lods
(bad)
jbe
mov
jne
frstor
inc
jp
retf
scas
push
mov
lea
or
fs
jb
inc
dec
inc
pop
push
shr
icebp
ret
test
pop
mov
pop
push
(bad)
sbb
or
ret
sub
sbb
retf
push
sub
nop
(bad)
mov
jns
add
mov
movs
out
jge
fwait
xchg
movs
test
jl
add
dec
and
or
xchg
jne
cmps
jge
jecxz
jo
les
jle
or
and
test
(bad)
push
in
pop
scas
pop
dec
mov
je
xchg
in
bound
pushf
add
add
fnsave
(bad)
in
daa
mov
mov
mov
push
daa
xor
outs
(bad)
int3
jle
fcmovnb
sbb
(bad)
imul
push
cdq
es
jle
inc
retf
lahf
push
dec
push
or
pop
xor
mov
inc
inc
icebp
jbe
test
scas
loopne
inc
push
add
ins
push
(bad)
mov
mov
rcr
mov
movs
mov
aad
sub
stc
xchg
push
call
aam
stos
loopne
repnz
dec
sbb
cmps
sbb
push
adc
cmp
mov
mov
add
dec
fldenv
loope
jmp
shr
dec
lahf
dec
dec
pop
jb
fwait
sbb
xlat
jle
out
test
xor
mov
cli
into
es
xor
das
add
enter
mov
je
ficom
or
xchg
lds
ins
pop
push
pushf
dec
xor
es
ins
aaa
push
ins
dec
xchg
cmp
cmp
xlat
mov
inc
in
fwait
cmps
pop
sahf
xor
lock
mov
add
bound
jns
das
adc
push
ds
aas
inc
jne
push
push
xor
mov
(bad)
pop
into
dec
mov
fwait
in
(bad)
enter
jmp
and
xor
mov
test
aas
fnstcw
jns
es
inc
and
push
aad
test
(bad)
push
ror
inc
xchg
fimul
and
(bad)
dec
enter
cmp
mov
movs
out
inc
outs
xchg
inc
push
or
imul
cmp
push
test
xlat
outs
dec
dec
dec
cmps
call
fadd
ss
and
cmp
adc
fsubr
cld
cmp
aas
sbb
in
ins
ds
sti
or
out
and
vmovd
outs
nop
cs
loope
aad
push
sar
push
jb
pop
les
mov
mov
mov
lea
out
icebp
jp
jge
mov
pop
enter
es
xor
xchg
xchg
pop
pop
sar
xchg
fs
std
fmul
dec
nop
push
push
push
cmp
inc
shl
sbb
pusha
arpl
push
out
mov
sbb
(bad)
std
jp
inc
sub
push
jb
sbb
sub
jb
rcl
xlat
mov
ss
mov
cmp
xchg
(bad)
cmp
mov
pop
imul
inc
push
mov
sbb
clc
push
mov
cmps
xchg
xchg
push
fcomp
mov
push
mov
(bad)
push
std
lds
sbb
popa
sub
push
or
cli
mov
test
idiv
jle
in
add
adc
push
(bad)
pushf
bound
push
cmp
jo
mov
ins
xchg
and
outs
mov
xchg
xlat
fmul
mov
push
or
mov
jl
xchg
pushf
fnstcw
lods
cmp
jecxz
iret
jbe
cmp
pusha
rcr
jle
aam
(bad)
(bad)
xchg
sub
scas
dec
outs
mov
jno
mov
aas
lea
movs
mov
mov
sbb
cmp
jae
or
stc
jbe
mov
scas
mov
jecxz
xor
cld
ja
mov
pusha
retf
jo
xchg
cmp
pop
adc
or
inc
adc
daa
idiv
mov
loop
xchg
test
loopne
std
in
imul
ror
push
or
sub
xchg
push
inc
and
and
xchg
fwait
sub
shr
jp
clc
cmp
lds
arpl
ret
mov
mov
aad
xchg
jge
repz
cmp
(bad)
lock
pop
mov
dec
mov
dec
xchg
fsub
mov
imul
push
or
jo
xor
dec
mov
mov
sbb
xchg
pop
fs
xchg
nop
xor
mov
mov
lock
pop
cld
push
add
pop
or
js
repz
icebp
jecxz
add
movs
(bad)
push
in
mov
ror
movs
(bad)
lds
mov
mov
mov
jmp
ret
mov
jmp
and
push
fmul
pusha
(bad)
and
mov
out
mov
xchg
xchg
retf
jbe
js
jne
lahf
adc
fbld
in
jns
stc
in
push
adc
adc
mov
mov
mov
(bad)
sahf
xchg
pop
mov
jb
cli
or
mov
outs
push
dec
sbb
ss
lds
xchg
mov
sbb
push
add
pop
or
sub
push
sbb
pop
mov
adc
jae
in
iret
lea
or
xor
jecxz
sar
lea
mov
sub
test
dec
dec
jmp
and
out
ins
pop
sahf
push
xchg
stc
(bad)
mov
add
addr16
in
into
iret
pop
sbb
xor
xchg
cmp
adc
lahf
adc
push
ja
xor
cwde
mov
movs
aas
lods
std
jecxz
xchg
movs
push
push
sbb
mov
cmp
jge
sbb
or
and
jae
in
movs
gs
test
mov
xor
cmp
or
push
(bad)
scas
shr
std
(bad)
jns
cmp
adc
sbb
mov
cmp
inc
mov
push
push
fadd
push
push
mov
adc
cmp
and
push
pusha
push
out
push
cs
mov
push
jns
mov
int3
jge
dec
(bad)
adc
inc
cmps
sbb
call
retf
dec
cmc
sub
int3
rcl
(bad)
xchg
out
(bad)
fld
and
xchg
or
dec
idiv
xlat
jg
mov
jl
div
xchg
popa
bound
imul
xchg
aas
jecxz
(bad)
in
std
vandnps
push
sbb
ss
int3
inc
lds
jp
ss
js
push
sti
not
imul
aad
dec
(bad)
test
aam
hlt
fwait
enter
xor
ret
sub
movs
fst
shl
dec
enter
aad
sub
shr
lock
and
fwait
dec
pop
push
and
mov
push
movs
imul
mov
xchg
jno
aam
mov
enter
or
rol
xchg
sbb
pop
inc
mov
ror
cld
ins
mov
scas
adc
aaa
clc
lea
inc
push
setg
and
ret
push
pop
sub
xchg
adc
arpl
mov
(bad)
inc
das
or
inc
ja
pop
int
push
mov
aas
aam
mov
cmp
aas
popa
add
cmp
jmp
fsub
aas
call
sbb
push
aam
xchg
pusha
(bad)
fcmovne
fucomi
(bad)
xchg
mov
repz
mov
movs
jae
inc
push
jge
dec
fldcw
add
shr
mov
(bad)
sbb
xor
xchg
inc
xchg
pop
xchg
in
adc
and
(bad)
push
mov
inc
pop
pop
and
add
fwait
aaa
je
xchg
enter
loopne
cmp
xchg
repz
inc
jge
test
pop
cld
shl
mov
jle
sbb
in
rol
add
mov
sbb
clc
mov
jo
cmp
es
stos
pusha
lea
(bad)
ins
inc
pushf
mov
jo
sbb
stos
and
or
and
(bad)
aas
pop
pop
adc
ds
inc
mov
ss
pop
mov
mov
mov
call
cdq
fnstcw
jecxz
mov
aas
fsub
int3
(bad)
mov
aam
pop
(bad)
not
cmp
or
(bad)
test
ss
lds
leave
rol
dec
cld
adc
retf
pop
jp
retf
mov
pop
or
(bad)
retf
sub
mov
mov
xchg
or
xchg
mov
xchg
jno
arpl
pop
add
jo
push
adc
add
(bad)
mov
in
rol
mov
(bad)
dec
(bad)
pop
in
gs
lahf
xor
mov
jl
mov
scas
sti
lock
inc
or
or
or
xchg
data16
inc
ss
push
xchg
movs
push
fdiv
fisttp
bound
pop
cmp
inc
movs
retf
stos
aas
iret
xchg
push
nop
lea
cmps
mov
call
(bad)
aas
lds
jne
adc
push
push
xchg
ja
add
pop
mov
ss
sahf
enter
push
outs
adc
mov
std
(bad)
mov
mov
xor
push
xchg
or
clc
aad
mov
call
push
cmp
mov
adc
pop
xor
sub
out
popa
xor
xlat
or
jno
push
dec
or
inc
(bad)
out
lods
or
and
cmp
xchg
push
jae
pop
in
xor
and
imul
add
add
movs
ficom
xchg
lock
rcr
xor
dec
adc
in
pop
outs
push
xchg
in
aaa
(bad)
in
loop
cli
outs
dec
lds
dec
sbb
cmp
adc
(bad)
xchg
dec
imul
addr16
inc
mov
mov
mov
aad
adc
sbb
xchg
xchg
mov
push
xor
(bad)
inc
jo
sbb
cmp
aam
xchg
pushf
pop
push
and
test
and
jmp
sbb
cwde
xlat
xchg
push
adc
icebp
add
fiadd
sbb
adc
mov
mov
pop
ret
xchg
xor
push
lods
sbb
and
in
popf
or
or
jne
inc
inc
xlat
out
movs
retf
and
gs
sub
push
out
xchg
clc
or
arpl
add
mov
push
push
sbb
pop
xchg
dec
fmul
cmp
inc
rcr
daa
hlt
std
out
movs
push
ins
mul
jge
or
jle
xlat
cmps
scas
push
stc
sbb
outs
and
dec
je
pop
pop
test
retf
push
fisttp
and
test
jge
cmps
imul
jge
mov
clc
retf
(bad)
jp
enter
pop
fs
and
or
adc
fstp
ret
aas
inc
xchg
movs
aam
movs
shl
les
mov
stos
xlat
xchg
sahf
push
test
rcl
mov
inc
xchg
dec
xchg
cmp
inc
fst
and
ss
xor
pop
out
into
xchg
imul
sbb
stos
pop
xchg
mov
movs
pop
pop
(bad)
enter
jg
jne
frstor
jmp
lahf
fucomip
and
ja
shl
rcl
pusha
(bad)
call
in
ror
std
sbb
jbe
cmp
xor
and
aam
lahf
or
adc
ds
xchg
dec
mov
cmp
mov
aam
ss
and
pop
or
pop
mov
jmp
inc
xchg
js
xor
mov
or
(bad)
pop
clc
loopne
fld
ins
stos
add
push
push
mov
sbb
rcl
push
mov
xor
nop
dec
push
mov
push
es
push
dec
or
(bad)
ja
jg
cmp
and
mov
push
adc
cmp
jne
dec
pusha
inc
loope
cmp
cmp
sub
gs
mov
arpl
mov
inc
addr16
or
mov
cmp
nop
dec
sub
inc
lods
mov
ror
fidivr
push
fwait
cs
icebp
xor
cmp
mov
sbb
enter
mov
adc
movs
xchg
std
mov
test
inc
lock
fdiv
push
(bad)
aaa
cmc
add
jge
les
and
in
loop
ja
test
cmp
jo
jl
sbb
inc
jb
shl
ror
xor
push
jecxz
jl
jle
jmp
dec
int
dec
mov
cs
leave
xchg
push
cdq
aas
dec
fdivr
sbb
pop
jp
pop
sub
xchg
push
mov
sbb
aas
pop
or
repz
fiadd
mov
sub
sbb
push
mov
pop
in
cmp
inc
cmp
cmp
ins
xchg
hlt
cmps
push
sbb
xor
mov
mov
pop
test
repz
int3
mov
xor
aaa
inc
jns
add
icebp
dec
pop
repnz
fst
ds
push
sahf
jno
loopne
stc
rcl
jo
jp
lahf
mov
xchg
xchg
xchg
mov
adc
push
sub
sahf
xchg
sbb
xor
mov
xchg
dec
movs
mov
cmp
sar
mov
gs
dec
xchg
sbb
sbb
or
enter
pop
jmp
mov
je
lea
imul
pusha
dec
fwait
aas
imul
add
sub
pop
push
loope
popa
inc
xor
xor
daa
jae
test
push
fs
jg
pop
movs
mov
add
fsub
xchg
xchg
push
std
push
nop
add
in
fdivr
add
enter
retf
pop
xchg
test
enter
clc
pop
mov
aas
popa
cdq
dec
dec
cmp
push
pop
mov
mov
jno
inc
push
adc
cmp
popa
dec
push
push
loope
xor
test
xchg
xchg
icebp
cmp
out
mov
sti
jg
inc
jne
mov
ds
mov
dec
mov
cdq
pushf
nop
retf
mov
cs
rol
push
pusha
mov
pop
inc
mov
inc
and
push
inc
inc
out
inc
mov
(bad)
mov
mov
and
fincstp
(bad)
pop
pushf
cdq
retf
pop
ret
cs
push
(bad)
jbe
cld
stos
test
adc
cmp
aad
inc
retf
xor
les
jge
fmul
out
jg
jne
or
loopne
popa
nop
push
mov
inc
adc
lods
mov
add
mov
pusha
out
add
aas
xchg
jmp
out
lds
cmc
adc
loop
jnp
pop
inc
loopne
retf
daa
mov
ds
jbe
dec
enter
push
add
or
and
nop
pop
rcr
push
adc
scas
add
jns
pop
repnz
xor
fst
push
cmp
cdq
add
cmp
out
dec
es
push
jne
aas
fwait
cmp
(bad)
fisttp
xor
xchg
aas
shl
and
jne
xor
adc
push
lahf
jo
cmp
bnd
in
pop
sub
in
and
cmp
aas
int3
ret
std
imul
and
(bad)
push
in
sbb
jb
xor
sar
jmp
lds
dec
(bad)
or
test
jo
sub
outs
add
sbb
xor
mov
aad
dec
adc
fwait
bound
call
cmp
je
aad
ret
or
xor
inc
in
ret
push
xchg
xchg
nop
inc
xchg
loop
sub
cmps
retf
out
mov
ins
xchg
sbb
inc
enter
xor
dec
mov
aaa
pushf
fidiv
test
in
cs
or
cmps
js
mov
dec
push
inc
mov
(bad)
stos
push
test
ss
dec
(bad)
and
mov
(bad)
fidivr
xchg
jmp
(bad)
sahf
cwde
push
std
es
(bad)
pop
aaa
sar
movs
dec
cli
mov
ret
inc
ins
adc
in
mov
loopne
out
mov
xor
jno
dec
xchg
and
push
rep
jl
pop
mov
mov
(bad)
popa
pop
jnp
out
aas
cmps
rol
push
jmp
in
push
mov
fdivr
out
out
add
test
jne
ins
sahf
xchg
mov
sbb
ins
jae
pop
push
mov
dec
cwde
icebp
dec
mov
pop
and
scas
dec
stos
mov
inc
lock
sub
mov
call
(bad)
xor
mov
xchg
pop
shr
or
add
jne
shl
pop
(bad)
xor
loopne
jb
scas
lahf
loop
(bad)
mov
pop
cwde
cmp
xor
aam
imul
nop
out
or
aaa
inc
sbb
aam
mov
inc
push
pop
cmp
xchg
mov
sbb
mov
add
mov
jnp
pop
pop
dec
test
mov
mov
adc
xor
cwde
fnstenv
push
pop
mov
and
inc
aaa
sbb
and
pop
fsub
fcom
adc
gs
enter
retf
stos
mov
push
les
lahf
(bad)
shl
movs
pop
aad
sub
pop
push
adc
(bad)
push
mov
imul
xor
sahf
adc
pop
mov
inc
jl
in
mov
pop
and
or
adc
ins
iret
sub
(bad)
dec
add
xor
adc
push
xchg
add
inc
push
push
jnp
mov
enter
pop
fwait
sub
mov
and
ds
repz
(bad)
jmp
inc
xchg
movs
aas
nop
(bad)
loop
pop
push
ja
hlt
mov
jge
add
cmp
sar
mov
add
pop
ss
sub
mov
add
sub
inc
mov
shl
push
mov
data16
and
cmps
imul
fcmovb
movs
mov
lods
jo
cli
outs
mov
rcl
outs
int
xor
push
int3
jnp
cwde
adc
push
dec
int
js
adc
std
jmp
rol
and
stos
cmp
out
pop
push
jp
pop
aaa
xchg
push
add
cs
jecxz
jp
lods
repz
xchg
test
jns
repnz
add
outs
push
fnstcw
loop
xlat
xchg
in
pop
jmp
inc
adc
adc
xlat
push
adc
xor
mov
jbe
dec
mov
inc
mov
or
xor
ret
rcl
aas
addr16
push
xchg
repnz
xchg
mov
repz
xchg
je
adc
cmp
adc
stos
mov
loopne
inc
shl
movs
mov
out
adc
call
sub
pop
pusha
scas
inc
or
jne
sub
dec
call
jecxz
clc
inc
jno
dec
xor
cmp
xchg
mov
outs
mov
movs
xchg
mov
lea
arpl
xchg
inc
gs
cmp
clc
mov
js
xor
sub
dec
stos
inc
dec
mov
dec
mov
push
clc
pop
and
imul
sbb
cmp
retf
sbb
pop
mov
adc
dec
adc
mov
sbb
xor
and
jne
mov
test
mov
daa
outs
imul
dec
mov
pusha
inc
dec
ret
es
xchg
push
leave
adc
rep
movs
int
push
int3
add
fchs
pop
cmp
push
mov
lods
pop
and
sahf
lahf
retf
sbb
aad
mov
dec
mov
cld
mov
iret
(bad)
arpl
push
scas
(bad)
rcl
lahf
dec
lods
scas
adc
je
into
xchg
fwait
cld
sub
inc
adc
adc
clc
jne
xchg
fwait
daa
mov
sbb
mov
rol
in
leave
aad
inc
dec
sti
sub
pop
lahf
pop
add
arpl
push
mov
add
ins
addr16
adc
inc
in
mov
lods
out
push
adc
mov
cwde
jmp
push
or
pushf
mov
aas
movs
lea
(bad)
cmp
(bad)
clc
mov
cmps
sub
frstor
test
gs
add
pop
push
mov
or
xchg
not
xchg
outs
ds
arpl
push
stc
mov
fcom
ret
ror
or
cmp
push
fmul
not
mov
add
push
jl
lea
fucomi
call
lahf
and
hlt
dec
int
pop
cmc
xchg
test
(bad)
mov
ja
lock
(bad)
cmc
mov
mov
add
sbb
pushf
and
retf
mov
scas
sbb
xlat
xchg
sub
and
dec
inc
sub
xchg
pop
xor
push
jecxz
jno
imul
stos
lock
jns
inc
retf
outs
xor
pop
inc
sub
mov
adc
mov
adc
mov
addr16
adc
fcom
inc
inc
and
xor
adc
mov
xchg
inc
es
mov
bound
iret
cmp
iret
int3
jno
inc
and
jg
add
je
idiv
xchg
xchg
or
and
xchg
xor
jae
mov
sahf
scas
adc
gs
mov
(bad)
jge
cmp
cmc
test
xor
xchg
fcmovnb
cmc
sbb
pop
mov
and
sbb
inc
jle
xchg
fdivr
xchg
mov
cmps
test
aaa
or
int
inc
lock
imul
nop
or
std
and
inc
cdq
aas
and
ins
inc
sahf
adc
repz
pop
sub
shl
mov
scas
fist
or
xchg
cmp
jl
and
mov
cmp
mov
push
pop
cmp
in
mov
inc
sub
cmp
inc
pop
dec
xchg
or
mov
test
fcom
jno
mov
add
lock
jle
dec
mov
cmp
xlat
sub
call
mov
jg
ror
mov
ins
cmp
cmc
sbb
leave
push
sbb
in
ins
cld
rcl
mov
pop
sbb
in
enter
(bad)
mov
lahf
add
ss
pop
ins
inc
xchg
sti
fadd
jecxz
dec
test
mov
or
jae
push
fadd
(bad)
iret
loop
and
mov
pop
jns
add
out
adc
mov
cmp
loopne
ds
mov
movs
sbb
aam
scas
jb
adc
sbb
out
mov
pop
ret
cmps
dec
xchg
mov
and
shl
xchg
push
repz
xchg
sub
and
ja
mov
std
(bad)
jne
push
and
(bad)
icebp
jno
jne
mov
icebp
cmp
mov
pop
push
adc
ss
out
jno
dec
jns
ret
push
jmp
sbb
push
and
cmp
ds
ins
mov
dec
dec
pop
push
mov
jg
jno
gs
scas
mov
adc
int3
enter
sbb
push
lods
iret
cmp
xchg
jle
mov
inc
mov
add
call
imul
jo
lahf
les
icebp
xchg
neg
clc
leave
dec
rcl
out
cmps
xchg
ins
scas
pusha
or
xchg
adc
outs
cld
(bad)
in
fisubr
cwde
pop
in
xor
jmp
leave
fs
fnsave
jmp
xchg
ja
call
ins
inc
lods
sub
retf
mov
cmp
and
addr16
mov
jmp
pop
sbb
aad
nop
(bad)
push
into
retf
loop
leave
test
mov
mov
xlat
aas
add
jno
sar
stos
mov
mov
and
mov
jne
aaa
jle
push
inc
int3
imul
stos
push
ins
fld
mov
adc
in
inc
imul
sub
(bad)
mov
adc
push
std
lea
not
jl
retf
movs
pusha
dec
ret
popa
mov
pushf
and
xchg
push
mov
ror
mov
cmc
shl
ins
in
jl
jo
cmc
test
test
mov
jo
sub
sub
jg
jne
movs
ror
icebp
mov
or
xchg
stos
mov
mov
div
pop
fs
lds
pcmpgtb
add
jl
and
sub
idiv
sub
xlat
inc
mov
pop
cwde
jge
jmp
jb
mov
sub
and
jno
cli
xor
sub
pushf
dec
and
movs
fs
scas
add
cmp
cmc
mov
stc
mov
inc
mov
mov
ja
(bad)
sub
cmp
outs
jb
mov
xchg
pushf
jmp
pop
into
test
out
dec
shl
push
push
scas
popa
pop
xchg
push
push
in
lea
dec
jns
pop
inc
aaa
enter
aas
cmp
xchg
push
fnstsw
dec
mov
and
xchg
loope
dec
cwde
test
(bad)
lock
adc
xchg
ss
adc
aad
loopne
test
(bad)
std
hlt
scas
cmp
xchg
xchg
lea
inc
mov
push
pusha
ficom
cmp
test
mov
cmp
pop
lea
xchg
add
pop
or
fs
js
std
aad
xchg
call
(bad)
mov
in
jmp
mov
xchg
pop
sbb
dec
fnstcw
sub
push
std
sti
fdivr
push
inc
mov
xlat
push
mov
mov
into
and
sub
dec
sub
scas
test
(bad)
mov
fsub
pop
pusha
xor
ja
fiadd
mov
cmp
pop
(bad)
dec
sbb
jns
jne
test
adc
rcr
stos
aas
pop
mov
ret
lds
push
mov
das
enter
adc
sahf
add
jmp
cmp
aaa
jle
add
add
and
mov
mov
xchg
mov
push
lock
aad
mov
hlt
out
sbb
out
stc
leave
aad
ss
pop
fidiv
es
adc
outs
lahf
jns
push
adc
(bad)
lahf
dec
lea
add
clc
sub
mov
aas
scas
cmp
(bad)
in
push
pop
sbb
(bad)
stc
rcr
int
pop
xchg
xchg
(bad)
push
mov
push
mov
shl
jmp
int3
jl
xor
aaa
aam
jl
jbe
inc
fst
pop
push
push
jg
cmp
(bad)
fiadd
(bad)
adc
neg
xchg
in
xchg
scas
push
sub
jge
sbb
sbb
or
adc
ss
jo
into
mov
pop
inc
cwde
fidivr
sbb
and
pop
call
add
cmc
adc
xchg
mov
arpl
inc
lods
movs
imul
sub
xor
push
jbe
popa
es
mov
fisttp
or
push
into
cmp
rol
ja
xchg
pop
lea
es
add
xor
xchg
lds
cld
pop
mov
repz
mov
push
inc
mov
xor
(bad)
mov
mov
mov
retf
push
xchg
push
sbb
or
sbb
das
sub
xchg
push
sub
cdq
adc
push
mov
lods
call
dec
inc
pop
jg
cmps
(bad)
fld
enter
(bad)
fiadd
out
and
or
test
mov
pop
out
pop
jge
lock
into
push
mov
push
push
into
adc
push
(bad)
cmp
ret
je
mov
imul
retf
inc
xchg
stos
cwde
mov
in
cmps
lds
xchg
daa
adc
rcl
ss
dec
(bad)
jmp
mov
lea
mov
add
dec
push
pusha
int3
shr
es
ja
rcl
stc
xchg
cmps
aad
inc
out
dec
sub
inc
es
cmp
inc
inc
sbb
movs
and
add
mov
sub
cs
fld
sbb
(bad)
aas
neg
movs
add
fs
cmp
adc
mov
shr
add
sbb
sbb
(bad)
sbb
cli
inc
jbe
xlat
xor
mov
xchg
sti
(bad)
cld
fnstcw
call
cwde
inc
or
mov
push
test
std
out
add
ins
adc
cmp
push
or
inc
jns
add
les
add
pusha
dec
sub
imul
xor
fisub
(bad)
cmc
mov
lods
sar
cs
aaa
sahf
std
sub
into
cmp
cmp
mov
push
dec
sub
jmp
jae
jo
inc
aas
loopne
and
repz
(bad)
(bad)
js
mov
or
mov
adc
push
ins
xor
mov
icebp
xor
dec
xchg
adc
arpl
and
xchg
fsub
dec
loope
mov
ins
jb
(bad)
aas
aam
push
hlt
lock
fcom
je
dec
pop
or
adc
aas
retf
cdq
cld
push
bsf
test
inc
push
add
aas
pop
popa
(bad)
div
adc
shl
jp
xchg
aam
xchg
(bad)
shl
loope
jg
xchg
cmp
imul
adc
test
xchg
mov
mov
popa
test
je
es
ss
nop
sbb
sbb
sbb
sub
imul
(bad)
sub
mov
jmp
adc
loop
test
ja
rcr
mov
push
or
mov
inc
xchg
mov
and
push
pop
cmp
pushf
mov
inc
cmp
sub
cmps
xor
shl
mov
fimul
mov
mov
imul
lock
pop
aaa
gs
ja
das
sbb
cmps
inc
jae
dec
(bad)
cdq
jb
hlt
push
ins
mov
jb
push
xchg
mov
jg
mov
mov
sbb
loop
test
ret
sbb
cdq
sub
fnstsw
fstp
xchg
into
xor
cs
jno
xchg
and
xor
cwde
cmp
jle
call
ins
(bad)
sahf
dec
push
aaa
paddsb
xchg
shl
sbb
aas
sub
neg
dec
push
jb
jmp
jo
push
stos
cmps
in
or
xor
push
jp
aas
rep
sub
inc
scas
lods
jb
lods
add
js
cmp
sub
or
and
adc
or
test
xchg
and
xor
xchg
imul
mov
xlat
test
sub
push
pop
xlat
es
or
dec
lock
sti
xchg
dec
jecxz
and
scas
aas
sub
in
ins
inc
or
mov
xchg
adc
lods
enter
pop
inc
call
adc
push
push
out
inc
ins
inc
fcom
push
movs
adc
jge
push
dec
in
xchg
enter
jle
repz
xchg
mov
xor
ret
in
inc
push
xchg
fcom
mov
mov
jmp
(bad)
out
push
cmp
test
jecxz
pop
mov
xchg
inc
pop
(bad)
in
add
jg
outs
or
out
mov
and
fistp
repnz
arpl
dec
xor
aas
ror
rcl
lds
(bad)
cmp
ins
sub
mov
or
cmp
les
scas
jne
jmp
es
jmp
xchg
clc
daa
push
pop
dec
sbb
mov
inc
mov
out
inc
not
and
sub
pop
ja
inc
neg
and
mov
mov
lea
pop
addr16
cmps
sbb
js
stos
scas
push
cdq
stos
adc
sub
xchg
mov
xor
mov
in
mov
jl
inc
std
and
ror
jno
xchg
jno
mov
retf
imul
push
scas
call
fst
adc
add
mov
mov
inc
xchg
outs
sbb
mov
pop
sub
mov
xor
in
mov
mov
pushf
outs
jae
push
xchg
dec
push
mov
stc
stc
clc
sub
mov
(bad)
fdiv
test
xchg
dec
fnsave
jp
adc
daa
ds
in
rol
inc
scas
jmp
mov
push
push
aaa
xor
jbe
sbb
std
xchg
popa
int
jl
cmp
add
push
cli
scas
out
pop
xchg
and
pop
enter
out
bound
or
aad
out
xchg
fs
add
pop
jbe
dec
lds
rol
push
loope
mov
loop
xchg
mov
jg
and
lds
inc
pushf
(bad)
lods
ins
clc
adc
jae
inc
mov
inc
ret
xchg
in
pop
repnz
pushf
mov
das
dec
dec
or
push
sub
mov
in
inc
xchg
mov
mov
push
int
sub
sub
adc
icebp
push
rcr
mov
leave
push
cmp
mov
cdq
pop
inc
mov
push
jl
sub
xor
jae
nop
scas
dec
cmp
ret
rol
dec
inc
clc
adc
xchg
hlt
call
daa
and
cmp
mov
loope
inc
test
push
lahf
xor
add
ret
pusha
pop
mov
inc
and
aam
push
lock
xchg
xchg
push
and
jle
loopne
into
mov
push
data16
outs
mov
jae
xor
cmp
rcr
enter
xor
enter
ins
xor
ffree
mov
or
in
popa
clc
xchg
inc
xchg
(bad)
adc
jbe
push
inc
mov
xor
mov
cmp
jecxz
in
enter
adc
fcomi
(bad)
shl
or
push
sar
mov
push
cmp
push
shr
xchg
pop
fst
mov
imul
add
scas
add
push
add
mov
imul
sbb
enter
xchg
pop
xchg
push
aam
sti
xor
nop
push
ds
(bad)
xchg
ja
add
pusha
(bad)
jl
inc
add
add
mov
stos
outs
pop
es
add
mov
or
rcr
aas
push
lar
push
push
ret
clc
arpl
(bad)
xchg
in
cld
dec
sahf
loope
pop
jbe
addr16
imul
fnstsw
pop
daa
pop
loope
loope
out
dec
inc
pop
in
adc
aas
jge
iret
and
mov
mov
add
(bad)
mov
scas
sti
pop
mov
push
ret
pop
xor
(bad)
movs
popf
out
mov
fcomp
sbb
je
into
cmp
ds
fstp
mov
xor
in
cdq
add
into
jp
mov
jg
mov
cs
scas
stc
push
push
lods
push
add
(bad)
or
in
addr16
sahf
push
test
std
xchg
das
sahf
mov
sbb
mov
out
lock
cmps
push
xchg
fld
movs
sbb
ins
mov
popf
jae
cs
test
jo
pusha
xor
test
jecxz
fs
sbb
sahf
jbe
push
sub
pusha
xchg
cs
jae
mov
aad
leave
add
hlt
dec
adc
inc
stos
jmp
ins
inc
or
and
push
and
cli
test
xchg
cli
jo
or
push
lods
cdq
dec
loope
repnz
aas
mov
neg
add
int3
ins
jmp
fimul
scas
cmp
jmp
ror
dec
inc
inc
test
jns
pusha
test
neg
pop
cmp
in
inc
sbb
sbb
sub
push
inc
lods
aas
mov
xchg
sti
test
xor
fisubr
cmp
(bad)
in
xlat
clc
jecxz
dec
pop
mov
xchg
lahf
jg
xchg
int
xlat
push
or
cmp
lea
(bad)
lock
push
lds
rcl
shr
sbb
push
loopne
push
call
inc
push
inc
cs
inc
xchg
push
mov
mov
ja
inc
inc
adc
std
enter
mov
jge
ss
xor
popa
dec
push
bound
stos
lahf
mov
dec
fs
lea
lahf
mov
mov
imul
test
dec
push
add
mov
ins
mov
mov
cdq
fist
sub
inc
or
pop
push
add
or
out
xchg
cmps
js
pop
jne
xchg
xchg
daa
cmps
add
inc
loop
in
dec
jbe
(bad)
mov
and
fistp
or
dec
adc
xchg
pushf
mov
ins
add
xchg
fs
xchg
imul
addr16
pop
in
xor
mov
cmc
aas
mov
mov
add
nop
dec
push
cmp
(bad)
fsubrp
jge
xchg
sub
jns
movs
shr
pop
mov
(bad)
add
pop
cmps
cmc
inc
push
pop
test
inc
add
pop
out
cmp
popa
std
shl
aas
jbe
test
xchg
mov
ja
sub
out
and
jg
dec
xchg
pop
cld
sbb
mov
mov
mov
fcom
in
les
(bad)
push
add
mov
dec
dec
sub
aas
(bad)
rcl
jne
mov
aaa
pop
mov
cwde
add
pop
(bad)
pop
mov
(bad)
rol
out
repnz
sbb
aas
adc
rcl
bound
sub
sub
mov
pop
out
add
xchg
outs
enter
jp
dec
les
sub
js
or
imul
(bad)
jb
cdq
and
and
popa
xchg
inc
jmp
adc
mov
and
pop
cmp
mov
cmp
in
jae
xor
cmp
stos
xchg
dec
not
push
cmps
adc
sub
push
cli
sbb
call
mov
jbe
cmps
mov
ror
es
iret
stos
xchg
pop
lods
push
push
jo
mov
cmc
mov
cmp
pop
pop
cmp
loopne
sbb
retf
cmps
call
mov
push
pop
sbb
push
add
jmp
clc
add
dec
push
xor
xor
popa
xor
xchg
push
push
out
push
bound
cli
cmc
xchg
pushf
(bad)
out
repz
stos
dec
jg
(bad)
pushf
push
push
cmps
push
push
div
les
xchg
xchg
sbb
mov
rol
test
cld
ret
jo
mov
lods
nop
stc
xlat
xor
pop
add
aad
std
enter
inc
jl
call
or
bound
pop
imul
xchg
loopne
loop
add
pmulhw
jbe
clc
(bad)
fadd
jg
imul
sbb
mov
pushf
sbb
and
and
(bad)
call
ror
sub
xor
push
movs
lds
push
push
mov
push
imul
push
adc
sbb
cmp
in
sbb
into
aas
std
sar
jmp
xchg
cwde
std
xor
stc
xor
pop
add
(bad)
and
sub
in
xchg
or
jmp
jge
cmp
push
mov
pop
pusha
leave
data16
out
pop
mov
sbb
push
inc
mov
mov
pop
int
mov
loope
cs
ins
inc
push
pop
in
je
lahf
data16
cmp
jecxz
sub
hlt
out
xor
test
icebp
adc
in
outs
sub
sbb
xor
cmp
and
lahf
out
dec
inc
sub
sbb
repnz
mov
push
inc
les
xchg
inc
call
mov
jne
test
test
fcomp
sahf
arpl
adc
adc
out
mov
push
sub
push
adc
outs
mov
inc
stc
(bad)
push
inc
mov
cmps
(bad)
cld
in
inc
add
pop
(bad)
std
shl
outs
js
out
fcom
push
js
cmp
xor
mov
sbb
outs
sbb
xchg
rcl
mov
aas
mov
repnz
xlat
cmp
inc
lea
inc
test
and
xchg
mul
xor
jg
jne
cmp
cmpxchg
ss
jns
xchg
bound
sub
inc
mov
xchg
pop
shl
outs
int
mov
test
and
adc
jp
dec
cmp
add
inc
xchg
sbb
sbb
icebp
dec
or
mov
push
hlt
popa
or
ror
enter
lods
ds
retf
out
pop
or
retf
inc
xchg
xchg
add
ret
push
div
aaa
cmp
ret
daa
adc
add
fdiv
mov
push
jmp
push
and
enter
mov
sti
iret
in
mov
out
sbb
xchg
inc
jmp
jb
inc
push
pushf
rcl
jge
mov
xchg
add
dec
push
jnp
ja
test
mov
sbb
aaa
mov
jno
std
aas
test
bnd
push
lea
xchg
les
jb
jmp
inc
movs
nop
xchg
fmulp
ud0
cmps
movs
aas
loopne
jecxz
xor
out
outs
(bad)
cs
(bad)
ins
mov
mov
scas
shr
fsub
loop
out
test
or
mov
sbb
add
fs
pusha
mov
xchg
cdq
rcr
xchg
mov
xchg
rcr
sub
ins
xchg
jns
in
add
test
cmp
arpl
cmps
xor
push
nop
pusha
cmp
and
sub
xchg
shr
jecxz
add
pop
(bad)
outs
cmp
ss
sub
(bad)
into
and
xchg
fstp
push
push
sub
xchg
scas
mov
mov
xchg
repnz
xor
inc
jmp
dec
add
(bad)
(bad)
out
arpl
rol
jno
std
or
enter
inc
sti
push
dec
daa
inc
shl
(bad)
pop
pusha
cli
inc
icebp
push
(bad)
dec
pop
sbb
ja
cmps
les
ins
fnstsw
sbb
(bad)
popf
xor
not
in
cs
xlat
imul
fild
sbb
add
addr16
mov
or
jecxz
clc
rol
sub
jns
shr
dec
pminsw
jge
(bad)
arpl
test
cwde
jo
not
dec
sahf
rol
inc
ja
ret
mov
push
aad
xchg
xlat
stos
ret
cmp
dec
push
cli
out
pop
out
adc
xchg
scas
lea
fwait
xchg
in
inc
xchg
fldenv
call
jno
pop
(bad)
mov
or
mov
dec
div
xchg
jmp
fbstp
pop
outs
out
ds
xchg
adc
xchg
adc
mov
or
lods
(bad)
fnsave
add
(bad)
xchg
adc
data16
push
xor
aad
mov
mov
mov
data16
adc
cmps
xor
iret
mov
inc
and
add
icebp
add
sub
or
adc
ins
gs
jne
(bad)
cmps
and
into
sahf
call
xchg
cmp
push
mov
inc
jno
dec
in
add
inc
les
cli
dec
sbb
outs
(bad)
rol
test
stos
pop
test
sbb
test
(bad)
loopne
in
scas
xor
adc
xor
adc
inc
push
sbb
imul
xchg
xor
in
add
aas
cmps
fisttp
je
loop
inc
dec
pusha
mov
cs
or
cmp
test
push
mov
add
pop
data16
ds
jmp
push
fs
out
hlt
nop
dec
dec
das
pop
lods
or
gs
pop
fimul
in
adc
aaa
xlat
sbb
push
jnp
ins
mov
inc
xor
loop
cs
xchg
jbe
sbb
jg
lds
mov
mov
dec
fcomp
nop
jl
daa
arpl
push
or
sub
hlt
outs
fsubp
inc
rcl
cmp
mov
pop
and
inc
xor
adc
(bad)
push
rcl
inc
xchg
push
pop
in
or
and
jg
or
aas
retf
push
paddsw
dec
(bad)
nop
call
imul
jns
push
dec
jge
(bad)
aad
les
push
out
and
(bad)
sub
xchg
daa
loop
je
movs
inc
ss
out
push
jl
pop
fcmovnbe
xor
stos
mov
jno
mov
gs
xchg
in
pop
mov
fist
and
je
lods
adc
pop
xor
pop
fcom
cmps
pop
push
xchg
xchg
mov
add
mov
mov
push
cdq
inc
add
mov
jg
in
adc
fisub
repnz
fisttp
cmc
lds
xor
test
(bad)
mov
loop
stc
sub
rcl
cli
xchg
mov
mov
pop
sbb
mov
sbb
enter
int3
adc
inc
xor
fld
cmp
sub
aas
xor
cmp
aas
jmp
inc
shr
daa
lods
cmp
push
pop
xor
xor
xor
fild
lods
jg
aas
jle
in
push
adc
pop
imul
mov
mov
add
(bad)
shr
mov
in
fbstp
mov
aas
and
sub
xor
push
or
dec
sbb
inc
pusha
iret
adc
push
push
(bad)
sub
icebp
shl
ss
imul
mov
lea
gs
or
push
push
cmp
mov
cmps
jl
lds
adc
popf
lock
call
ret
xor
mov
mov
adc
outs
adc
lds
mov
and
mov
pop
rcl
outs
fcmovu
or
cmp
jecxz
xor
push
aad
sbb
pop
fldenv
jecxz
fs
inc
xchg
ja
(bad)
ds
js
out
ret
inc
cli
mov
mov
jmp
mov
jb
sbb
imul
daa
addr16
pushf
and
push
sbb
push
xchg
or
scas
jne
mov
idiv
icebp
lds
jmp
retf
adc
(bad)
fwait
ret
imul
xor
xchg
daa
sahf
movs
and
lods
aas
and
or
mov
push
inc
push
imul
cmp
out
stos
clc
aad
mov
ins
fistp
fndisi(8087
iret
sbb
into
sar
pop
cmps
(bad)
iret
repz
(bad)
cmp
xor
pusha
lahf
cmp
sbb
pop
sar
dec
mov
(bad)
jno
pop
jbe
int3
mov
sbb
(bad)
sbb
pop
call
bound
cmc
gs
fmul
nop
je
xlat
sbb
in
cmp
xor
and
adc
sbb
xor
repnz
jae
fist
pushf
daa
gs
loopne
push
(bad)
mov
lods
xchg
pop
data16
push
(bad)
repnz
iret
lahf
jb
cwde
mov
in
and
xchg
mov
xor
out
imul
inc
dec
cmp
out
les
and
or
mov
or
xor
aaa
pop
push
cmp
sub
repnz
xor
jmp
push
and
lea
not
into
ret
xchg
in
xchg
mov
(bad)
xchg
call
jmp
pop
adc
push
ror
rcr
sbb
cmps
ror
xchg
fadd
fisubr
mov
mov
sub
les
je
cmp
pop
xchg
std
and
jne
stc
pop
inc
ficom
stos
shl
fsub
xchg
aam
sbb
fsub
pop
pop
cmp
and
cmp
retf
push
rcr
cmp
ins
bound
inc
pop
mov
(bad)
or
call
xor
imul
inc
test
dec
retf
cmc
lea
adc
mov
jecxz
jle
jae
xchg
dec
retf
(bad)
sbb
jp
add
out
adc
data16
xchg
sbb
adc
repz
ficom
std
loop
test
mov
pop
mov
inc
add
push
mov
jge
shr
mov
out
mov
pop
pop
fcom
movs
xchg
xchg
(bad)
mov
shl
ds
mov
mov
rol
retf
iret
push
xchg
(bad)
sar
inc
sbb
lods
retf
inc
rcl
jecxz
lods
ror
repnz
fist
scas
icebp
sub
ja
sub
cmp
xchg
xor
xor
inc
pop
imul
mov
add
pop
cmc
adc
adc
cmp
ss
cmc
add
cdq
adc
pop
repz
jno
xchg
sub
inc
sub
aas
push
addr16
sbb
cwde
int3
jle
retf
inc
bound
test
lock
adc
xor
push
jns
shl
movs
icebp
inc
(bad)
pop
pushf
and
and
xor
cs
std
push
adc
dec
mov
xlat
aas
push
jns
fwait
sbb
loope
retf
aad
ja
and
jle
adc
stc
out
add
mov
sub
mov
push
mov
fwait
daa
xchg
loop
inc
mov
cmp
sub
adc
xor
jmp
push
sbb
rcl
mov
fld
mov
mov
mov
addr16
xor
push
sbb
jge
mov
sub
ror
fwait
dec
xchg
(bad)
fld
aas
sahf
sbb
inc
pop
add
and
rcl
out
pop
cmp
fsubrp
jbe
cwde
xchg
adc
out
outs
jo
mov
lds
jae
das
orps
aad
or
inc
cmp
ftst
stos
sub
mov
jl
aad
ins
pop
jo
mov
and
cmp
das
test
mov
push
retf
mov
and
xor
push
cmp
std
not
mov
xchg
rcr
enter
pusha
lds
push
mov
jmp
stos
fucom
pop
ja
adc
adc
gs
fadd
pop
stc
push
jge
adc
ret
call
mov
mov
add
lods
inc
sahf
mov
ret
retf
mov
ret
mov
mov
loop
sub
mov
mov
or
ds
xchg
mov
jns
jp
inc
sbb
and
mov
jne
add
pop
mov
sub
or
jmp
and
test
arpl
aaa
adc
test
hlt
les
xor
push
xchg
(bad)
not
arpl
and
retf
inc
pop
mov
ffreep
in
(bad)
outs
jno
out
pushf
cli
ss
or
repz
pop
cmp
popf
aas
popa
mov
and
aas
retf
scas
and
or
loop
mov
xchg
pop
mov
mov
mov
mov
dec
into
test
sbb
loope
xchg
cli
(bad)
fcomp
xchg
lods
sub
adc
inc
mov
js
std
xor
les
xchg
pop
dec
ret
in
stos
clc
pop
test
pop
adc
push
in
adc
mov
or
sub
pop
inc
fistp
pop
rcl
xchg
arpl
inc
and
jno
add
cmp
loopne
mov
xlat
or
xchg
mov
cmp
dec
push
mov
push
in
inc
jne
adc
xchg
xor
adc
(bad)
das
inc
repnz
sbb
push
jnp
scas
(bad)
int3
dec
mov
mov
mov
xchg
inc
add
xchg
jb
dec
int3
aas
cmps
mov
dec
push
mov
jns
lock
(bad)
mov
imul
pop
jl
enter
mov
xchg
sub
out
div
popa
push
(bad)
cmps
sub
mov
loop
mov
xchg
call
pusha
cmp
mov
rol
mov
stc
imul
stos
fnstsw
dec
test
mov
push
icebp
data16
fucomp
retf
push
pop
stos
sub
in
mov
pusha
xor
pop
jae
cs
inc
(bad)
(bad)
mov
adc
mov
cmp
cmp
xchg
adc
xchg
cmps
mov
nop
inc
fsub
cmp
clc
cmp
stos
adc
mov
adc
addr16
std
sbb
xor
shl
enter
pushf
aas
fld
pop
adc
arpl
push
out
loop
jo
cmp
pop
(bad)
adc
ins
ficom
scas
dec
and
xor
sub
retf
pusha
(bad)
not
xchg
cmp
pop
cld
aas
test
popa
or
push
hlt
mov
jl
add
push
mov
pop
jmp
das
pop
xor
inc
pop
add
pop
add
clc
mov
(bad)
jmp
mov
xor
push
lods
repnz
or
inc
lods
pop
(bad)
push
std
pop
cmp
xor
pusha
mov
pop
out
nop
inc
xor
pop
leave
xor
mov
mov
xlat
(bad)
fnstenv
xchg
or
sbb
mov
xchg
imul
mov
movs
fidivr
test
xchg
ins
stos
bnd
push
out
mov
push
pop
pop
sbb
inc
loopne
ret
mov
sub
pop
mov
push
clc
popa
aaa
and
ds
test
loope
pop
push
inc
jo
mov
(bad)
push
aam
enter
es
push
inc
movs
movd
leave
mov
xchg
call
in
mov
daa
xchg
out
dec
xchg
inc
jg
ins
xor
jne
cmc
jmp
dec
xchg
js
sub
cwde
repnz
les
sub
sbb
sbb
movs
iret
int
pop
shl
sub
pop
(bad)
in
movs
mov
jl
lods
jp
xchg
inc
mov
cmp
cli
xchg
adc
retf
jg
addr16
mov
push
sbb
sub
enter
xchg
xor
push
jmp
xchg
cmp
sbb
xchg
fmulp
cmp
ins
fbstp
mov
rol
lods
(bad)
cmps
pop
psadbw
aas
jae
test
jmp
bound
or
lahf
(bad)
je
lods
dec
sub
mov
inc
jl
or
fdiv
ins
inc
bound
inc
arpl
xchg
ins
dec
mov
loopne
(bad)
imul
sbb
inc
data16
xor
and
fdivr
xor
or
aam
ins
push
sub
fs
xchg
xchg
fnstenv
out
div
xchg
adc
inc
push
cmps
pop
mov
sbb
pop
sub
add
arpl
jo
mov
(bad)
jge
out
xchg
(bad)
dec
sbb
lods
xchg
xchg
jnp
or
rcl
scas
xchg
aas
sbb
push
inc
jg
das
(bad)
sbb
adc
jle
dec
xchg
pop
stos
(bad)
mov
fldcw
test
jl
call
jnp
sub
inc
in
mov
mov
loope
and
cli
or
lods
inc
mov
js
adc
ins
xchg
into
or
test
cmp
xchg
cmp
pop
push
push
clc
push
mov
(bad)
fisttp
ss
and
xor
and
ins
aam
enter
jnp
push
sbb
xchg
outs
sub
jb
adc
pop
rcl
je
and
cmp
mov
les
sbb
add
jne
stos
lea
ret
push
pop
ds
dec
mov
aas
xor
inc
xchg
inc
push
lahf
mov
(bad)
pushf
mov
mov
add
cld
jne
fimul
xor
sti
add
test
mov
cdq
mov
aas
pop
and
xor
(bad)
push
pop
jle
lods
push
aam
not
sub
inc
cmps
mov
sbb
pushf
mov
into
ret
xchg
xor
and
push
out
je
repnz
(bad)
scas
fdivr
adc
sbb
retf
jbe
xchg
stc
adc
mov
push
or
je
js
mov
mov
pusha
mov
ins
ror
and
pop
test
cmp
mov
cmps
data16
(bad)
and
(bad)
xor
push
mov
jp
mov
cld
hlt
xchg
fnsave
and
xor
cld
push
fisttp
jmp
or
ret
not
shl
icebp
xchg
cmps
and
cmp
clc
push
adc
shl
push
repz
retf
fucomip
call
xchg
sti
mov
jo
dec
and
aam
xchg
inc
adc
jno
push
scas
pop
js
xchg
out
inc
mov
push
rcl
ret
pop
xor
stc
mov
iret
out
cmc
cmps
pop
lods
sbb
xor
mov
mov
add
xor
or
xacquire
repz
into
aas
fs
in
lods
scas
outs
sub
sti
mov
xor
cmp
(bad)
jl
or
and
imul
(bad)
mov
(bad)
pop
cmp
pop
scas
(bad)
aaa
rcr
push
push
push
and
inc
inc
xor
clc
and
sbb
int
pop
mov
jp
fbstp
cmc
adc
cmps
repz
ins
cli
xchg
cmp
ss
inc
dec
test
lods
(bad)
push
and
int
sbb
aas
out
mov
mov
mov
or
pop
jmp
inc
inc
sub
or
loop
pop
sub
test
inc
scas
stos
pop
cmp
(bad)
push
xchg
lahf
frstor
mov
out
aaa
adc
data16
push
retf
xchg
cdq
call
xlat
push
inc
xor
shl
push
push
and
out
dec
movs
(bad)
popf
push
mov
out
jle
push
cmp
hlt
enter
xchg
stc
stc
test
mov
pop
leave
or
pop
push
stos
xchg
jae
into
mov
out
(bad)
lea
dec
xchg
and
(bad)
cmp
into
jne
xchg
sar
aaa
adc
fnsave
movs
stos
jae
xchg
test
jmp
fimul
hlt
cdq
sti
dec
cmc
call
pop
cmps
rol
mov
test
in
(bad)
xchg
mov
jecxz
scas
into
nop
inc
mov
out
sbb
inc
imul
dec
(bad)
bound
mov
sbb
fnsetpm(287
mov
mov
mov
inc
aad
out
push
xchg
int
add
out
aad
cmp
sahf
xor
rol
aas
adc
ins
push
lods
sbb
(bad)
pop
xor
dec
xchg
jle
nop
cmp
fist
jmp
mov
xchg
pop
jo
outs
adc
enter
(bad)
jb
xchg
push
fdivr
out
rcl
or
aas
fnsave
jno
push
cmp
mov
fldenv
xchg
and
add
pop
or
sbb
(bad)
leave
fs
enter
std
push
adc
out
inc
stc
lock
fld1
add
and
das
(bad)
xchg
test
or
aaa
xchg
aam
pop
data16
push
repz
mov
retf
sub
inc
adc
test
lock
mov
into
addr16
popa
rcl
xor
clc
call
dec
sub
inc
inc
cmp
inc
push
(bad)
push
mov
cs
es
jge
sahf
mov
aas
into
dec
pop
jmp
fst
(bad)
pop
jp
cli
in
mov
and
fidiv
adc
mov
rcl
or
ror
inc
adc
ds
out
shl
ss
add
cmps
sbb
jne
xchg
mov
push
repz
dec
loop
push
(bad)
sbb
cmp
shl
xchg
dec
jl
lock
push
mov
in
pop
dec
daa
push
loopne
or
(bad)
pop
add
mov
jp
adc
fiadd
shl
shr
stos
daa
push
bound
fnstenv
mov
pop
ficom
das
les
aas
es
add
sbb
nop
cmp
pop
shr
icebp
pop
rcr
jmp
clc
xchg
cdq
js
dec
cmps
repz
pop
push
cmps
aas
jg
push
jo
les
push
mov
cld
xchg
je
ret
loopne
popf
mov
xchg
dec
mov
jnp
cmp
pop
aad
lods
in
jbe
lods
and
ja
push
rol
cmp
push
pop
popf
xchg
jle
xchg
popa
rol
sar
add
scas
int
int3
and
adc
retf
(bad)
mov
arpl
dec
sar
loopne
pop
cmp
mov
xor
shr
jge
out
mov
mov
mov
mov
or
pop
xor
movs
dec
fist
aaa
pop
inc
ins
push
stc
popa
cwde
cmp
into
inc
and
adc
inc
out
retf
loop
xchg
aaa
xchg
cmps
and
movs
popf
pop
xlat
or
push
ja
imul
std
xor
push
bound
cmp
or
(bad)
sub
ret
outs
push
loop
ffreep
push
rol
(bad)
pop
xor
or
sub
or
or
sbb
add
loopne
stos
ss
cmps
fisub
nop
aas
sar
dec
shl
test
gs
scas
ror
mov
nop
add
pop
fwait
mov
imul
push
frstor
sbb
call
adc
cdq
jle
inc
push
inc
in
dec
xor
ins
cs
test
or
pop
test
jns
loopne
xchg
mov
xchg
(bad)
mov
xor
and
xchg
sahf
jp
push
imul
js
imul
(bad)
cld
xchg
jb
or
push
xor
sub
push
out
inc
jl
adc
sbb
mov
sbb
add
or
(bad)
aas
xchg
adc
xchg
retf
jo
dec
sar
enter
pop
mov
ds
or
repz
pop
(bad)
push
hlt
pop
mov
jae
call
les
mov
int3
jg
not
out
out
rol
movs
shl
pop
add
jbe
cmp
pusha
xor
stos
mov
cmps
add
jg
pop
rcl
sti
sbb
adc
cmps
adc
or
or
cmp
repnz
adc
jmp
xchg
retf
gs
sbb
in
fild
jmp
mov
test
adc
loopne
(bad)
test
stos
mov
jmp
addr16
pop
dec
inc
push
adc
sbb
push
mov
jno
aam
mov
push
aas
xor
jecxz
out
dec
push
mov
int3
fadd
cmp
push
gs
out
cmc
ins
jbe
push
mov
mov
mov
sbb
jecxz
dec
ins
retf
adc
mov
dec
nop
pop
fcom
push
bnd
adc
popf
xor
int3
sub
jmp
xchg
dec
sbb
es
ins
daa
xor
push
fnstsw
out
pop
mov
sub
and
cmp
add
sub
xor
mov
add
adc
nop
outs
push
mul
mov
sub
push
popa
pusha
jecxz
cdq
push
jle
pop
and
jmp
(bad)
sub
or
sbb
jbe
inc
fist
push
prefetch
xchg
jecxz
sbb
inc
dec
adc
iret
lods
sub
add
pushf
or
xchg
push
add
frstor
inc
popa
fbstp
icebp
adc
mov
inc
enter
jmp
xor
call
lahf
dec
dec
shl
sbb
ins
push
push
xor
call
pop
in
pop
sbb
les
jmp
xchg
retf
out
add
push
push
fisub
movs
mov
add
push
xchg
icebp
in
jp
ret
xchg
xor
into
mov
xor
jg
js
push
or
lods
(bad)
mov
mov
enter
inc
jecxz
mov
inc
inc
add
(bad)
pop
sbb
and
jge
add
jnp
(bad)
je
dec
int3
mov
cmps
mov
push
test
push
mov
aam
fwait
xchg
mov
sub
inc
enter
lods
dec
ss
(bad)
es
pop
pop
enter
jmp
pop
aam
fistp
xchg
sub
or
mov
push
ins
inc
push
dec
icebp
sbb
imul
loope
push
mov
cs
jl
out
test
mov
jb
aam
fcmovu
mov
lods
dec
fcom
ss
sti
bound
xchg
jae
cmp
pop
cmps
fdivr
aas
push
bound
fcom
inc
aas
push
xchg
fwait
or
sbb
xchg
inc
out
aam
je
inc
adc
xor
xchg
fstp
pushf
sub
stos
push
repnz
mov
mov
xchg
neg
mov
shl
daa
xchg
stos
or
inc
and
hlt
ror
xchg
sbb
xchg
sbb
and
jmp
aaa
std
aas
mov
mov
jg
enter
in
rcl
mov
inc
retf
jne
std
retf
(bad)
or
push
inc
dec
jmp
into
test
inc
dec
ror
pop
push
push
movs
sbb
(bad)
pop
mov
leave
clc
call
ins
push
jb
popa
add
xchg
aad
js
aam
mov
inc
push
push
pop
mov
cld
add
test
test
and
cwde
dec
fldenv
or
fdivr
push
clc
mov
cmp
and
and
sub
cwde
inc
and
bound
and
xchg
add
xchg
mov
aad
addr16
sbb
not
or
sub
mov
sbb
enter
push
cmc
dec
sbb
adc
push
xchg
push
enter
push
es
aas
std
mov
push
rcl
dec
mov
les
fcomp
xor
ror
add
mov
xchg
and
mov
inc
push
xchg
leave
aad
inc
cwde
lea
mov
(bad)
adc
xchg
sbb
cwde
bound
xchg
xor
sub
adc
dec
adc
and
sub
loopne
out
aas
(bad)
fs
stos
or
or
cmp
jne
das
mov
xchg
and
nop
cmp
stc
daa
fnstcw
or
out
jne
adc
test
shr
out
fist
adc
(bad)
ins
ret
mov
out
daa
xchg
xchg
cmps
jl
movs
std
int
dec
test
loopne
jmp
xchg
xlat
xlat
not
or
in
xchg
es
sub
pop
push
(bad)
ss
push
jp
das
stos
fstp
shl
jecxz
push
aad
inc
xchg
(bad)
je
or
scas
mov
pop
and
dec
jno
(bad)
sub
xor
inc
xor
xchg
push
add
(bad)
stos
xor
lods
sub
das
mov
mov
xchg
daa
push
inc
daa
mov
(bad)
scas
dec
bound
xchg
cmp
add
cmps
fcmovb
xchg
push
movs
lods
mov
repz
sbb
mov
pusha
xchg
sahf
mov
adc
cdq
mov
lds
stos
shl
call
sbb
adc
adc
scas
fstp
je
call
jmp
or
xor
mov
out
xor
xor
stos
sar
ror
mov
add
in
dec
adc
sbb
repnz
ret
ss
push
push
sahf
or
fld
icebp
mov
ja
ret
add
call
jl
clc
gs
stc
and
sbb
sbb
and
push
(bad)
scas
cmp
lods
add
xchg
(bad)
mov
or
aam
pushf
test
sub
pushf
pop
mov
mov
jne
adc
lock
mov
(bad)
push
test
rcl
dec
xchg
inc
adc
mov
push
(bad)
adc
scas
lds
mov
gs
cmps
add
and
sbb
nop
cli
push
rol
xchg
mov
and
(bad)
and
jnp
jecxz
(bad)
cmc
ficomp
test
cs
ret
(bad)
xor
arpl
cmp
retf
mov
retf
rol
mov
push
xchg
xchg
jo
jp
add
leave
pop
xor
and
loope
in
clc
aam
mov
add
or
mov
(bad)
scas
into
xchg
pop
push
cmp
sbb
mov
add
xchg
mov
jmp
loopne
popa
xchg
ja
pushf
mov
outs
retf
hlt
nop
popf
sbb
dec
push
pop
push
xchg
push
fnstsw
or
imul
sbb
sbb
mov
rcl
inc
xchg
add
and
push
add
fild
xchg
enter
mov
call
es
mov
pusha
xor
push
push
jb
inc
(bad)
int3
jne
outs
cli
add
add
jae
dec
jne
adc
arpl
jge
mov
cmps
mov
lods
push
pusha
ja
idiv
(bad)
sub
movs
sbb
push
cmp
or
jmp
inc
xor
fadd
mov
lahf
push
sbb
push
aad
(bad)
and
push
loope
and
cmp
retf
pop
xor
cdq
mov
xor
inc
xchg
xchg
push
cmp
fild
addr16
std
mov
loopne
out
xchg
push
dec
xchg
mov
enter
in
mov
js
ds
xchg
sub
ins
adc
ret
fild
jmp
pop
pop
xchg
je
scas
(bad)
pop
dec
shl
sbb
xchg
inc
push
inc
mov
push
icebp
dec
stos
cmp
xchg
push
inc
jl
mov
mov
pop
mov
fst
(bad)
fs
das
pop
mov
xchg
xor
mov
dec
retf
jp
imul
inc
pop
cmp
or
test
outs
mov
bound
and
dec
cmps
sbb
push
inc
mov
mov
iret
repnz
jbe
push
push
cmp
and
ret
mov
fcomip
(bad)
push
(bad)
inc
cdq
sbb
cmp
fsubr
mov
ror
mov
(bad)
jae
addr16
mov
inc
retf
es
lock
repz
mov
push
xchg
retf
(bad)
cs
pop
mov
xchg
xchg
movs
add
jnp
mov
jne
push
test
cdq
cmp
in
push
inc
add
lods
pop
(bad)
adc
pop
push
inc
push
mov
add
fcom
inc
pop
inc
push
jp
imul
sub
jge
dec
adc
xor
pop
add
sbb
inc
jns
lahf
push
pop
jns
stc
dec
xchg
mov
sti
sar
leave
ja
mov
js
cmp
fs
inc
sbb
aas
fwait
sahf
pop
ret
xchg
ss
popf
cmp
and
mov
fst
in
test
cmp
push
add
push
xor
fnstsw
adc
imul
pop
cli
iret
imul
push
aam
dec
hlt
lds
push
push
and
adc
adc
es
or
ror
es
xlat
ja
sub
sbb
leave
or
cmps
xchg
push
int3
daa
dec
(bad)
push
cmps
xchg
div
nop
and
inc
pop
mov
leave
jle
xor
fisub
sar
or
inc
shl
mov
push
retf
stos
xor
arpl
aad
xchg
sti
sbb
xchg
mov
ins
and
inc
addr16
movs
repnz
mov
inc
jnp
std
adc
xchg
je
dec
cmp
stos
int3
lds
mov
sub
sbb
xor
dec
jne
xor
push
js
das
not
add
pop
in
cmps
sbb
pop
jno
fxam
ret
mov
fcom
rcr
sahf
inc
inc
jle
sub
adc
inc
movs
into
movs
sbb
test
ins
xchg
push
inc
pop
pop
mov
mov
aas
nop
push
push
xchg
fist
ret
in
mov
mov
xor
xchg
mov
nop
add
cmp
and
fs
push
dec
xchg
call
mov
xor
scas
iret
cmp
cmc
jne
(bad)
ror
dec
(bad)
data16
lods
dec
iret
xchg
xchg
shl
inc
inc
and
test
inc
arpl
std
mov
xchg
sti
cmps
jnp
imul
or
bound
mov
and
dec
call
and
test
dec
push
push
aam
push
sahf
cmps
mov
xchg
dec
jno
xor
jns
push
daa
cmp
pop
into
out
daa
aas
xlat
pop
push
int
outs
shr
xchg
fcom
dec
(bad)
cmp
push
mov
push
pop
rcl
pop
jo
or
jge
fidivr
push
push
push
jno
mov
out
jo
(bad)
xchg
ror
(bad)
cmp
jecxz
xchg
and
push
out
dec
push
enter
or
jmp
daa
outs
xchg
xor
cmc
push
push
data16
fs
fimul
sar
rol
test
ret
call
jae
mov
jle
jmp
inc
(bad)
push
mov
data16
pop
mov
out
cmp
les
add
and
adc
pop
sbb
sbb
enter
test
mov
sbb
sub
inc
mov
les
inc
sub
cmp
shl
(bad)
dec
and
das
mov
pusha
int3
jb
scas
xchg
cmp
xchg
dec
(bad)
icebp
in
fstp
shr
sub
mov
sbb
aam
cmc
popf
fwait
nop
mov
leave
mov
aas
dec
enter
dec
stos
jmp
xchg
(bad)
scas
in
xlat
and
(bad)
mov
xchg
out
push
inc
pop
jge
adc
cmp
iret
in
pop
sub
dec
jae
push
mov
shl
ss
mov
mov
sbb
inc
lahf
cmp
lock
inc
test
out
mov
gs
push
pop
and
add
dec
push
or
sbb
inc
push
jp
xchg
sbb
lea
cmp
popa
(bad)
push
and
(bad)
push
inc
adc
cmp
or
lock
sbb
in
aas
pop
in
cmp
mov
push
or
shr
mov
push
(bad)
popa
push
fs
test
jno
sub
jnp
and
jp
out
xchg
inc
mov
mov
cmp
and
push
inc
shl
mov
cmp
pop
cli
vpshufhw
jnp
and
aam
in
call
aam
mov
cwde
aas
ror
xor
push
mov
pop
pop
mov
mov
popf
sahf
das
loop
mov
ret
jmp
pop
mov
psraw
nop
leave
call
push
pop
push
pop
mov
mov
push
call
test
adc
fcom
mov
rcl
iret
out
adc
adc
aas
(bad)
ins
out
jle
cmc
std
push
out
jg
push
pop
mov
sbb
jl
dec
loop
xor
push
ins
scas
pop
push
stos
fimul
mov
and
xchg
dec
adc
mov
sub
and
pop
push
fisubr
(bad)
in
jle
dec
test
and
and
arpl
(bad)
adc
into
jno
sub
sbb
shr
inc
push
dec
xchg
push
in
stos
inc
scas
addr16
sub
mov
add
jle
daa
add
jb
cdq
push
sbb
(bad)
aaa
push
jmp
idiv
push
jl
ins
mov
mov
es
xchg
scas
cmp
adc
in
adc
jno
and
jnp
addr16
push
sbb
add
pop
pop
(bad)
jns
push
xor
leave
arpl
retf
jg
fadd
fsub
outs
shl
mov
fld
xlat
mov
inc
fmul
jmp
push
pop
imul
mov
xlat
cmp
ror
(bad)
stos
in
jno
mov
retf
movs
jecxz
mov
pop
jae
bound
imul
out
cmp
push
xchg
mov
mov
sbb
fwait
outs
pop
(bad)
ficom
hlt
sub
lods
pop
inc
push
stc
xchg
call
push
mov
fld
out
mov
out
pop
cmc
lds
jge
ret
(bad)
leave
pusha
push
mov
in
or
not
fisub
out
popf
pop
add
ror
mov
fdiv
xor
sub
pop
jae
stc
pushf
ins
sbb
sbb
push
aas
int3
add
inc
adc
loop
nop
jae
and
(bad)
or
out
bound
xchg
hlt
sub
in
mov
aas
fisubr
mov
push
inc
lods
jns
mov
xchg
inc
push
inc
xchg
sub
in
pop
pusha
(bad)
fdivr
fsubrp
mov
ins
pop
fimul
das
xchg
add
sti
ret
add
inc
push
sahf
push
clc
cmps
daa
ror
aam
and
lock
sbb
mov
shl
lahf
mov
cwde
mov
mov
jae
pop
rol
outs
add
out
mov
jno
xchg
stos
into
xor
mov
in
and
xchg
xor
xchg
mov
or
std
cdq
ds
inc
lods
add
lahf
mov
sbb
cmp
aas
(bad)
sti
fadd
cld
xchg
cmp
push
push
push
or
mov
rcr
sub
jno
pop
out
cmps
xchg
xchg
jle
in
scas
cmp
int
xchg
test
inc
rdpmc
out
popa
das
call
inc
popf
(bad)
adc
and
pop
loope
mov
xchg
adc
pushf
pop
add
movs
hlt
icebp
mov
and
xchg
inc
adc
adc
adc
leave
push
psubsw
dec
call
xchg
mov
cmp
inc
jmp
mov
fs
or
lea
dec
dec
xlat
aas
mov
lds
xchg
xchg
aas
push
int
into
jmp
movs
push
jns
rol
pop
xchg
inc
aam
fs
mov
xor
mov
cld
mov
inc
adc
imul
inc
dec
in
push
and
add
jae
inc
xchg
shl
mov
imul
or
or
popf
mov
sub
push
mul
scas
int
not
xchg
sub
(bad)
ja
lods
cmp
mov
sbb
xchg
add
push
adc
inc
jmp
cld
les
call
nop
out
inc
(bad)
fadd
jno
mov
mov
fnstsw
mov
mov
cmp
sub
sti
fnstenv
adc
out
cmps
cmovp
xor
cdq
cmp
pop
stos
je
mov
movs
push
es
inc
or
xchg
iret
xchg
mov
test
mov
cli
stos
call
aam
xchg
mov
xlat
cdq
push
mov
push
xchg
mov
push
sub
adc
jns
xor
push
cmp
imul
xor
xchg
mov
ins
aas
xchg
fcmovne
xor
mov
adc
stc
aas
fld
add
arpl
in
jmp
jle
pop
add
(bad)
fnsave
push
pop
inc
bound
mov
jecxz
fist
sbb
inc
add
push
into
xchg
dec
retf
push
xchg
inc
imul
jo
pop
xchg
icebp
xchg
sbb
mov
xlat
ss
sahf
cmp
xor
adc
cmp
xchg
les
xchg
in
ins
in
scas
inc
out
(bad)
mov
movs
pop
ins
cmp
(bad)
mov
xchg
aam
cmp
dec
ret
cs
call
test
mov
mov
cmp
push
fistp
fmul
ins
cmp
das
cmp
in
(bad)
lahf
push
adc
xchg
ror
loopne
aam
call
aam
jp
push
mov
(bad)
retf
xchg
loope
sub
mov
push
add
ja
lods
xchg
movs
(bad)
jl
mov
adc
cwde
mov
dec
test
adc
dec
in
inc
cdq
(bad)
sti
mov
pop
sar
lea
adc
sbb
xchg
(bad)
cld
push
(bad)
lea
jg
inc
test
inc
ficom
cmp
push
arpl
inc
pop
retf
imul
or
movs
test
test
mov
pushf
and
mov
push
repnz
mov
mov
add
daa
cmp
clc
lds
sub
in
mov
cmc
mov
iret
push
mov
mov
dec
frstor
jb
cmp
nop
xchg
dec
ror
clc
pop
push
ret
mov
dec
mov
pop
xchg
rcr
in
mov
cli
outs
jg
pop
out
clc
mov
xor
ins
pusha
or
cmps
retf
mov
data16
pop
push
popa
test
test
shl
xor
cmp
xchg
and
int3
movs
push
clc
cdq
fwait
xchg
mov
sbb
push
push
push
mov
mov
outs
pop
xor
pop
daa
sbb
imul
in
mov
inc
adc
stc
jae
or
add
mov
mul
cdq
jl
shl
loopne
xchg
xor
inc
loopne
jg
mov
cwde
cmp
push
std
pop
mov
ret
lods
ret
push
outs
push
cmp
xlat
or
push
inc
or
fld
xchg
jmp
sub
mov
dec
pop
int3
xchg
dec
push
cmp
test
add
jmp
mov
cs
cwde
xchg
test
stos
je
xor
es
cmp
leave
movs
jecxz
pop
sbb
xchg
and
jne
je
and
out
(bad)
adc
ret
test
push
adc
mov
cmp
inc
xchg
in
in
mov
cmp
push
data16
pop
lds
(bad)
mov
retf
mov
mov
xor
outs
dec
jmp
adc
loop
addr16
(bad)
out
mov
and
das
add
test
jne
xchg
and
sbb
jne
ja
aas
fwait
xchg
pop
jmp
sbb
push
mov
imul
or
inc
push
repz
repz
retf
jecxz
adc
xchg
ficom
adc
or
lods
mov
aad
inc
mov
jne
add
scas
jae
xor
sahf
xchg
add
sar
push
out
ror
push
es
shl
int3
dec
inc
pop
(bad)
js
mov
xor
push
addr16
xor
mov
pop
stc
xor
inc
call
cli
inc
rol
bound
pop
jbe
sub
sbb
push
sub
adc
aas
xchg
dec
and
xor
scas
push
inc
push
iret
fistp
fwait
outs
push
jns
sahf
sbb
or
cmp
mov
pop
clc
push
aam
fmul
stos
data16
imul
jo
lea
jg
inc
dec
xchg
test
sub
xchg
mov
push
push
mov
push
cld
sub
push
rol
das
jge
in
icebp
aas
cmps
repz
or
jmp
sbb
jne
xor
mov
bound
lock
out
nop
leave
aas
das
cmps
jb
xchg
fist
add
mov
add
aas
push
inc
cmp
pop
test
mov
jle
(bad)
xchg
cwde
shl
int3
in
out
mov
jns
cmp
or
push
sub
mov
sbb
sub
lea
mov
sti
cmp
cmps
arpl
jnp
dec
dec
aam
aam
and
inc
sbb
ret
and
jmp
int3
pop
jecxz
mov
dec
inc
inc
xor
mov
xchg
movs
or
jbe
adc
fst
jbe
sub
or
ret
mov
fdiv
inc
push
(bad)
adc
pop
xchg
hlt
(bad)
movs
inc
add
push
sbb
sbb
or
mov
mov
mov
push
mov
stc
jb
push
sub
imul
and
add
aas
bound
scas
jae
jb
ins
scas
inc
sub
jecxz
iret
xchg
jge
push
mov
popf
adc
mov
pop
ins
xor
movs
xlat
sahf
xchg
add
mov
ret
mov
xlat
or
mov
enter
scas
xchg
push
inc
dec
pop
add
adc
ret
mov
shl
mov
dec
fs
aaa
xchg
fist
xor
(bad)
sti
adc
adc
ficomp
pop
sub
aas
shl
pop
mov
inc
inc
mov
adc
xor
xor
repnz
dec
scas
push
stos
mov
push
mov
std
jp
sar
lea
repz
inc
jo
jl
sub
int
push
xchg
loopne
mov
sub
dec
and
or
loop
add
nop
mov
add
(bad)
jl
push
fisub
in
xor
test
add
retf
mov
(bad)
stos
inc
pop
mov
mov
or
xchg
movs
inc
int
xchg
push
sbb
mov
out
jns
pusha
in
cmp
dec
dec
fidivr
jnp
(bad)
in
pushf
aas
enter
fcom
cmc
(bad)
jg
inc
mov
ss
xor
pop
jb
jno
popf
inc
sbb
dec
into
mov
inc
fnstcw
and
mov
fnop
pop
out
call
ret
adc
lahf
inc
cli
cdq
ror
fadd
in
jae
adc
sbb
mov
push
cdq
mov
dec
push
xchg
xor
push
mov
xor
not
xor
and
jnp
dec
stos
push
pop
(bad)
ja
push
cwde
shl
mov
jmp
sbb
out
mov
rcl
jecxz
push
cwde
push
jp
xor
or
xchg
dec
icebp
mov
xlat
adc
pop
push
das
pop
jns
(bad)
jae
pop
sbb
xlat
jne
call
rcl
lds
(bad)
mov
fwait
mov
cmp
ja
and
in
add
push
into
push
in
retf
jg
adc
mov
xchg
pop
xchg
loope
sbb
lds
jecxz
rcl
call
les
pop
sar
js
fnsave
push
inc
std
repz
enter
les
pusha
jp
xchg
sub
aad
scas
aas
rcl
jp
xchg
push
ja
jae
rol
repnz
imul
inc
dec
mov
lahf
xlat
lds
aam
leave
inc
xchg
push
mov
lds
jne
pop
(bad)
mov
fcmovu
sub
enter
jecxz
ins
fwait
retf
push
xchg
push
push
scas
cwde
mov
bnd
cmp
mov
into
xchg
stc
xchg
(bad)
pop
(bad)
call
dec
ret
stos
add
xchg
sbb
fdivr
ds
fld
daa
sbb
mul
push
aas
push
mov
inc
sub
push
add
xchg
cmp
movs
and
cmp
mov
push
mov
push
dec
loop
es
iret
mov
fdivp
loope
fld
jb
jo
cmp
xchg
test
pop
nop
adc
fcmovu
scas
inc
pop
fdivr
fwait
mov
rcr
rcl
scas
retf
cmc
addr16
xor
push
add
jnp
add
ss
push
push
sub
aas
cmp
repz
and
jge
(bad)
int3
cmp
data16
inc
lea
push
mov
ret
dec
pop
push
add
pop
(bad)
inc
enter
js
cwde
js
pop
adc
sete
jmp
jns
xchg
movs
sbb
push
lods
icebp
aad
push
inc
adc
call
sbb
push
xchg
outs
and
mov
jg
push
pop
lds
mov
sbb
call
push
mov
int
push
fst
ins
mov
outs
xchg
adc
or
inc
(bad)
shl
arpl
out
lods
(bad)
push
test
cmp
sub
xchg
sub
std
mov
mov
inc
inc
pushf
fisttp
pop
inc
es
sub
mov
add
ins
imul
or
ror
push
popf
mov
loop
mov
sub
not
mov
lahf
add
inc
daa
fcomi
data16
and
push
stos
(bad)
addr16
lds
es
je
mov
outs
and
push
xchg
mov
pop
mov
add
cdq
fsubr
dec
pop
pop
out
cmp
add
add
loop
xchg
pushf
(bad)
into
adc
sub
xor
mov
iret
rcl
sbb
dec
jbe
inc
es
mov
xchg
fucomip
ins
pop
addr16
dec
and
movs
cmp
sahf
test
(bad)
jmp
scas
popa
pop
xchg
cld
test
ret
mov
sub
cmps
loopne
sub
retf
mov
leave
imul
pop
nop
(bad)
mov
pop
jl
shl
xchg
sub
cmp
mov
mov
shl
loop
dec
and
pop
(bad)
or
or
outs
es
aad
xchg
loop
dec
sub
mov
jg
pop
fdivr
cmc
sbb
pop
lahf
aas
and
ficom
cmp
cmp
pop
ins
leave
push
pop
mov
mov
dec
je
test
les
pusha
pop
mov
outs
dec
xor
out
push
xor
stos
retf
sar
cmp
cmp
clc
and
push
inc
data16
pop
sbb
or
cmps
mov
int
mov
push
adc
cdq
out
imul
cmp
inc
fwait
jp
push
mov
push
loopne
cmp
and
hlt
jae
lahf
aad
xchg
pop
fs
lea
cmp
scas
fild
xor
mov
retf
jae
sbb
jne
or
cs
xchg
outs
sar
loopne
xchg
and
mov
xchg
xor
aad
adc
jnp
sub
mov
pop
push
inc
pop
push
or
dec
mov
repz
fwait
dec
in
inc
mov
mov
dec
sbb
push
in
shl
lods
aas
ror
mov
cdq
(bad)
popa
scas
addr16
xchg
(bad)
fdivrp
cld
pop
xchg
jmp
sub
push
push
mov
add
cmp
clc
aad
dec
push
jg
(bad)
shl
sbb
(bad)
enter
push
xor
dec
push
pop
dec
das
jl
loope
ins
test
push
es
(bad)
jg
das
cmp
add
ret
jecxz
pop
jbe
shr
not
mov
cwde
xchg
inc
adc
or
push
mov
sub
std
dec
ret
mov
in
sbb
and
lahf
nop
cmps
test
mov
add
fdivr
ja
push
pop
xor
sub
jmp
mov
dec
mov
sbb
push
ins
ret
test
xchg
fisub
into
test
fistp
push
(bad)
fs
repz
enter
pop
sub
or
mov
mov
sub
test
add
xchg
or
sub
push
mov
aam
ds
dec
fs
mov
(bad)
and
push
rcl
stos
add
add
adc
or
push
or
add
push
inc
cwde
add
add
add
xchg
adc
add
or
add
loop
add
add
dec
add
and
add
add
popa
and
or
add
xor
add
add
xor
adc
add
push
inc
add
add
inc
and
add
pusha
and
imul
mov
pusha
es
adc
add
inc
or
or
inc
or
or
add
and
or
ret
sbb
cwde
add
adc
test
inc
add
sbb
add
add
and
and
add
add
add
adc
inc
add
jo
add
inc
add
add
and
add
add
and
add
dec
sub
sbb
adc
inc
add
or
add
or
inc
or
and
test
inc
and
daa
add
rol
mov
mov
add
inc
add
add
add
add
nop
inc
add
js
add
pusha
add
add
add
mov
add
add
and
and
add
push
adc
jo
ss
xchg
test
xor
push
and
and
push
shl
add
add
pusha
add
adc
or
enter
inc
out
add
add
add
and
adc
inc
push
and
add
add
add
pop
mov
add
add
adc
push
and
add
fsubr
add
add
add
sub
dec
add
add
inc
and
adc
add
inc
add
add
mov
add
nop
add
stos
or
adc
add
add
add
add
add
add
pop
add
adc
push
add
push
sub
fiadd
add
add
test
add
add
add
adc
add
add
and
add
inc
dec
sub
and
push
add
or
add
and
inc
and
add
or
or
add
inc
add
and
add
add
loopne
and
push
add
mov
add
xor
sub
add
adc
push
add
add
add
add
sub
retf
nop
add
or
mov
and
adc
add
mov
or
xchg
test
sbb
mov
and
inc
lods
and
inc
add
sbb
add
add
shl
add
inc
inc
inc
dec
cdq
add
push
and
add
inc
rol
adc
lds
and
mov
add
adc
sbb
and
add
nop
add
mov
add
or
adc
mov
inc
and
add
add
add
add
add
cmps
inc
add
add
cmp
inc
add
add
inc
or
add
pusha
add
add
inc
dec
inc
or
add
add
add
add
add
inc
sbb
add
add
add
cwde
or
inc
add
add
inc
nop
inc
add
push
push
add
and
add
adc
add
pushf
add
adc
add
or
add
adc
add
ret
add
dec
add
or
ret
inc
add
add
add
and
push
add
add
and
add
adc
add
adc
movs
or
inc
mov
inc
add
add
rol
inc
add
pop
add
push
sbb
add
add
adc
or
and
add
add
inc
inc
add
inc
add
pusha
add
shl
inc
add
or
rol
xor
add
and
add
inc
dec
or
add
add
add
inc
add
or
xor
adc
add
arpl
add
add
add
or
add
push
add
add
add
or
add
nop
and
or
add
add
enter
adc
inc
or
xchg
add
add
add
inc
nop
and
mov
and
add
adc
inc
pop
add
adc
and
jne
add
and
add
cmp
push
mov
inc
add
les
les
add
add
adc
push
lock
add
add
or
xor
inc
add
or
push
or
and
add
inc
mov
add
nop
and
add
add
add
and
bound
adc
sti
add
adc
test
and
add
add
or
fs
add
add
add
add
inc
in
or
add
or
adc
sbb
add
add
mov
add
sbb
add
and
add
add
sbb
pusha
inc
add
cmp
add
rol
pop
add
adc
and
and
inc
jb
inc
inc
add
add
push
add
add
add
inc
xchg
push
inc
arpl
add
add
inc
add
adc
add
add
dec
add
adc
sbb
sub
add
add
add
rol
add
inc
add
in
add
add
and
add
add
test
add
and
ins
add
add
add
add
mov
add
or
and
add
add
adc
adc
add
inc
inc
add
adc
xor
dec
push
push
add
add
add
or
test
rol
and
add
inc
add
loopne
add
add
add
les
and
es
add
add
and
inc
adc
and
and
and
into
add
mov
cmp
adc
inc
les
inc
add
iret
mov
add
add
add
inc
and
add
or
add
inc
add
add
or
inc
add
add
add
ret
inc
add
and
sbb
rol
inc
inc
adc
inc
adc
adc
add
add
mov
sub
add
add
add
mov
or
call
add
mov
add
adc
nop
add
xchg
mov
add
inc
add
ret
add
mov
add
inc
add
add
inc
add
add
adc
inc
or
add
adc
add
ss
inc
or
or
inc
add
add
and
or
adc
add
adc
push
pop
or
add
and
add
adc
test
add
mov
add
inc
push
adc
dec
inc
add
add
add
mov
add
or
add
sub
or
add
add
add
mov
inc
add
inc
adc
add
pop
add
mov
add
add
add
pusha
add
adc
adc
add
inc
adc
add
adc
sub
add
adc
adc
add
push
add
outs
or
xor
inc
adc
add
adc
sbb
rol
or
inc
pusha
add
add
add
add
add
adc
add
xchg
add
add
add
or
add
add
add
add
adc
add
or
add
add
mov
sub
or
add
add
add
inc
sldt
inc
inc
add
add
and
pop
dec
sbb
add
loop
and
or
add
dec
adc
add
and
and
adc
add
inc
inc
and
adc
add
inc
or
inc
sub
add
or
adc
sbb
add
inc
inc
mov
add
add
or
lock
or
pop
add
add
add
rol
mov
adc
and
or
int3
add
or
bound
rol
and
add
and
mov
xor
add
and
add
sub
push
xor
int3
or
add
add
pusha
add
or
or
inc
add
add
add
xchg
add
sbb
add
sub
es
and
adc
and
adc
rcl
add
test
add
add
popa
inc
add
mov
add
add
add
add
or
add
add
and
add
and
dec
add
xchg
add
rol
or
and
add
add
xchg
add
nop
add
add
add
loop
nop
and
add
or
cmp
add
and
rol
pusha
add
add
add
add
and
add
add
mov
adc
add
adc
test
nop
add
push
and
jae
add
add
adc
add
add
inc
loop
push
inc
and
add
inc
test
test
add
inc
add
nop
adc
add
add
add
inc
inc
dec
add
add
add
add
or
add
inc
sbb
xor
inc
add
mov
add
pusha
add
and
add
add
add
add
add
add
dec
and
inc
and
mov
test
or
add
add
add
add
adc
adc
les
arpl
dec
adc
add
push
adc
and
add
sub
and
or
xchg
cs
test
add
add
popa
add
or
test
push
add
adc
adc
add
sub
mov
and
and
add
inc
or
mov
add
mov
sub
add
sub
je
add
add
add
adc
rcl
add
add
mov
or
or
sub
inc
or
xor
or
and
and
add
add
inc
and
and
and
adc
popa
add
and
add
inc
or
and
add
or
adc
push
pusha
or
add
add
adc
adc
add
or
add
add
and
add
add
inc
or
cwde
and
adc
add
sub
test
pusha
add
dec
lods
or
nop
add
add
and
adc
add
add
sbb
adc
pop
and
add
add
jo
add
rol
add
adc
adc
add
or
(bad)
add
inc
retf
add
add
inc
add
aam
inc
inc
add
adc
or
nop
inc
inc
or
inc
or
xor
inc
add
movs
rol
and
adc
add
nop
adc
or
add
or
add
adc
inc
and
and
adc
add
adc
add
inc
inc
or
add
add
add
add
add
xchg
add
add
add
sbb
and
add
add
add
rol
add
cwde
add
add
test
mov
test
add
inc
sbb
add
add
les
add
mov
sub
inc
and
xchg
dec
mov
adc
or
jo
inc
shl
push
inc
add
and
add
add
dec
adc
inc
add
add
add
add
dec
sub
or
add
push
adc
loopne
add
das
and
sub
add
add
add
and
add
cmp
or
adc
xor
cmove
ret
and
inc
add
add
and
add
adc
mov
sub
pusha
add
push
add
adc
or
add
ds
and
and
push
inc
dec
and
add
and
add
inc
add
inc
add
fwait
adc
add
add
add
inc
inc
adc
dec
add
adc
add
inc
add
add
add
inc
add
and
and
add
add
add
and
add
add
sub
inc
rol
add
add
or
adc
add
add
add
add
adc
xchg
add
add
test
add
add
adc
and
lods
add
add
adc
add
inc
add
pusha
add
adc
dec
add
and
mov
mov
add
adc
add
add
add
dec
add
mov
sbb
test
add
and
jo
add
add
sub
add
add
sbb
.byte
test
