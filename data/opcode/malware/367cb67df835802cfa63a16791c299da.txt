(bad)
outs
mov
pop
sub
lods
aaa
sub
in
xor
addr16
xor
or
xor
cli
mov
pop
imul
push
cs
xor
leave
xor
cmp
mov
jbe
addr16
and
xlat
inc
or
call
xor
and
cdq
in
ins
pop
cmp
call
in
xor
mov
mov
jnp
or
outs
mov
pop
mov
dec
in
adc
xor
mov
cmps
aad
lock
lods
aad
pusha
js
mov
jbe
call
mov
jns
xor
stos
test
xor
mov
retf
movs
jl
mov
sahf
jnp
mov
shl
in
rol
jecxz
xchg
in
xor
mov
xor
mov
mov
movs
cmp
sahf
jnp
mov
lea
scas
aaa
lea
pop
jno
outs
mov
xor
mov
setle
mov
cs
adc
rol
sahf
jnp
push
adc
cmp
loopne
out
dec
les
mov
cmp
(bad)
int3
rol
outs
imul
mov
and
add
rol
adc
pop
mov
mov
jp
in
push
xor
pop
mov
mov
ror
sub
pop
ins
popa
pop
ds
adc
lods
adc
sar
sub
mov
xor
pusha
push
cmp
mov
xor
repz
sbb
sub
cmp
xor
mov
cdq
xor
cmp
xor
ror
mov
(bad)
cwde
sbb
fldenv
sahf
jnp
(bad)
in
sbb
pop
jno
rcr
dec
cmp
sub
mov
jo
fbstp
outs
push
add
jmp
das
cmp
xor
ror
sahf
jnp
pop
and
cmp
xor
sar
push
(bad)
cmp
xor
ins
gs
inc
mov
sub
cs
xor
outs
gs
(bad)
imul
jmp
in
pop
cs
les
sahf
jnp
pop
push
mov
xor
(bad)
fstp
sahf
jnp
int3
sbb
fst
sahf
jnp
mov
shr
or
(bad)
in
xor
cli
mov
in
cmp
jg
cmp
pop
cmp
pusha
js
push
lods
es
mov
mov
cs
out
pop
cs
in
pop
cs
mov
sbb
rol
cmp
lods
ret
sub
sub
inc
mov
(bad)
leave
mov
ret
popf
(bad)
adc
stos
int
int
imul
shr
fucomi
dec
in
xor
or
cmp
lds
mov
stos
or
adc
mov
xor
(bad)
in
xor
(bad)
outs
shl
mov
or
xor
fisub
ret
int3
cmps
(bad)
outs
cmc
aas
add
popf
(bad)
adc
or
jo
and
mov
xor
cld
cmps
pop
mov
xor
mov
mov
imul
pop
cs
shl
and
xchg
inc
cmp
int3
pop
xor
push
cmp
mov
inc
cmp
cmp
dec
call
int3
pop
and
inc
cmp
cdq
das
inc
cmp
inc
ds
cdq
iret
(bad)
pushf
xchg
xor
mov
int3
pop
lds
push
cmp
cmp
dec
call
mov
shr
sub
pop
aas
cmps
rcr
cmps
jl
mov
jno
and
bound
push
jo
mov
mov
pop
popa
jbe
imul
ror
adc
in
xor
cmp
adc
(bad)
cdq
daa
ror
cs
cdq
and
dec
adc
or
xor
shr
dec
cs
lds
(bad)
lds
(bad)
outs
shr
mov
jmp
ins
gs
lods
aad
pusha
js
addr16
and
gs
loope
lock
xchg
push
fidivr
outs
push
(bad)
cmp
pop
lods
pop
adc
cmps
loope
jmp
cli
adc
pop
lea
jno
jl
xor
mov
cmp
xchg
xor
xchg
or
sar
fistp
shl
cs
adc
and
jl
mov
fimul
imul
add
cmps
jl
mov
lods
icebp
adc
add
aad
pop
xchg
adc
mov
cmp
jns
comiss
cdq
retf
adc
lods
adc
ins
jne
das
cmps
fcom
cmp
fistp
mov
outs
ds
imul
cs
fnstcw
shl
jns
rol
adc
sub
jno
mov
cmp
jns
comiss
cdq
retf
call
(bad)
in
fcomp
mov
fdivr
adc
fidiv
(bad)
mov
rol
stos
or
inc
push
mov
shl
jns
rol
adc
stos
cmp
xor
(bad)
in
mov
shl
push
retf
push
mov
nop
mov
push
cmp
mov
iret
cmps
(bad)
ffree
lds
add
push
cmp
mov
arpl
bound
ret
jmp
xlat
es
jmp
cs
cmps
sub
nop
in
jl
cmc
sub
in
ins
jo
and
bound
mov
hlt
imul
adc
or
cmp
les
gs
mov
iret
pop
iret
pop
adc
cs
cmp
gs
sub
sub
repz
mov
mov
pop
fs
sbb
in
push
out
adc
pop
lea
cmc
sub
in
mov
pop
sti
data16
push
retf
push
cdq
and
vrcpps
popa
ins
jbe
jns
xor
(bad)
jmp
mov
imul
lea
add
pop
retf
addr16
ss
daa
aas
add
sub
sub
lds
stos
or
inc
or
imul
icebp
pop
sti
data16
sub
jo
and
bound
addr16
xchg
retf
das
shl
cmp
xchg
inc
and
shr
fld
jl
mov
inc
addr16
inc
rol
adc
inc
adc
add
rol
adc
out
mov
movs
fs
lods
push
xlat
push
cmps
(bad)
adc
rol
inc
cmp
xor
push
int3
pop
xor
sub
cmp
mov
jmp
mov
ins
jo
mov
jnp
or
push
movs
dec
in
cld
jge
add
cs
or
lods
add
nop
ins
cmp
inc
and
cmp
movs
jg
int3
pop
cmp
in
xchg
xor
fisub
(bad)
mov
mov
ss
mov
xor
data16
out
mov
adc
mov
mov
(bad)
movs
xor
mov
call
call
imul
pop
fsubr
xor
mov
mov
gs
mov
add
xor
cmp
stc
gs
xor
js
test
sub
mov
test
in
xor
loop
scas
out
mov
xlat
daa
stc
cdq
add
imul
ds
cs
xor
push
in
xor
stc
in
and
in
pop
cmp
rep
shl
gs
int3
shl
les
in
xor
stc
mov
jne
das
cmps
fcom
cmp
fcmovne
dec
in
xor
mov
sbb
loope
jmp
cli
ins
push
push
lea
xor
outs
push
push
lea
xchg
jbe
ss
mov
call
mov
shl
dec
jno
cmp
jno
imul
not
xor
in
mov
in
xor
adc
cs
rcl
(bad)
adc
dec
loopne
in
in
xor
ror
in
mov
shr
pop
aad
adc
sar
in
inc
and
in
xor
ins
in
xor
mov
xor
mov
mov
mov
(bad)
jle
test
arpl
mov
iret
lods
inc
sbb
and
outs
dec
sar
jecxz
(bad)
xor
add
xchg
int3
cmp
cmp
cmp
ss
lea
or
inc
pop
jno
dec
jmp
or
jno
cmp
call
jmp
loope
lock
cmp
pop
cmp
push
loope
jmp
cli
mov
imul
xor
ror
call
mov
ds
mov
cmp
xor
pushf
addr16
es
aaa
jns
ror
jns
gs
mov
in
cmp
dec
mov
xor
or
ret
jle
aam
cmp
xor
cmp
shl
sub
sbb
in
mov
shr
scas
lea
arpl
cmp
xor
dec
stc
hlt
sub
jno
(bad)
adc
cs
aas
pop
mov
cwde
jbe
add
xor
into
bts
das
mov
movs
dec
jno
cmp
jno
imul
imul
jbe
add
int3
rol
outs
push
mov
scas
xor
mov
(bad)
int
imul
in
data16
out
mov
aas
jge
mov
adc
cmps
(bad)
ffree
cmps
retf
pop
shl
pop
adc
movs
jl
mov
or
cmp
mov
xor
xor
inc
aas
(bad)
test
xor
shl
dec
gs
pop
loope
mov
sub
mov
sbb
bndstx
mov
(bad)
imul
ja
cmp
(bad)
push
sub
scas
into
jecxz
cmp
mov
xor
rol
in
pop
xor
sar
gs
pop
shl
inc
adc
pop
push
in
nop
dec
lea
retf
(bad)
gs
mov
mov
(bad)
cmc
shl
cmp
dec
call
fdivr
test
movhps
nop
dec
(bad)
(bad)
or
jmp
mov
imul
dec
(bad)
push
(bad)
and
cdq
cmp
jne
cs
pop
cmp
inc
cmps
shr
cmps
inc
aaa
inc
cmp
xor
in
lods
outs
cmp
inc
cmp
mov
inc
cmp
pop
cmp
es
mov
(bad)
lods
mov
cmp
inc
xlat
mov
pop
cs
(bad)
jg
adc
(bad)
cdq
retf
mov
mov
sub
sbb
ins
cmp
inc
(bad)
ror
cmp
ss
xor
dec
adc
adc
in
xor
mov
in
ins
gs
xchg
xchg
in
xor
ror
gs
mov
iret
jno
lock
pop
in
xor
cli
sub
cs
or
ins
cmp
inc
cmp
mov
shl
arpl
mov
in
and
gs
loope
lock
cmp
pop
cmp
fistp
mov
gs
loope
lock
mov
(bad)
adc
jle
in
iret
rol
outs
mul
mov
in
xor
ins
fcom
xor
(bad)
mov
xor
aam
jns
gs
xor
test
in
mov
shr
push
iret
jnp
mov
shr
or
sub
in
mov
and
jmp
loope
lock
(bad)
mov
xor
aam
jns
gs
xor
stos
ds
cs
mov
xchg
(bad)
adc
(bad)
and
int3
sar
stos
mov
shl
adc
scas
shl
cmp
nop
(bad)
adc
jle
jo
ins
cmp
cmps
jl
cmp
imul
rol
in
cmp
lods
out
xor
mov
adc
and
xchg
inc
addr16
into
rol
adc
sub
sub
cmps
dec
int
cmp
shl
(bad)
lock
adc
rol
in
xor
mov
jecxz
stos
mov
int
jns
mov
shr
arpl
dec
in
xor
mov
sub
sub
jb
cmp
call
pop
call
xor
cmp
das
loope
lock
cmp
jle
lods
xor
test
sub
adc
adc
cs
retf
pop
das
push
and
ins
cmp
rol
adc
jns
lahf
vshufpd
add
int3
cmp
int3
rol
in
xor
cmp
jno
push
mov
jge
(bad)
adc
sar
in
inc
or
pop
xchg
fldcw
int3
rol
mov
int3
lods
std
loopne
rol
in
xor
sub
das
cmp
xor
sahf
into
jnp
pop
jle
lods
xor
xor
sub
adc
adc
cs
retf
pop
das
push
push
shr
mov
(bad)
adc
jns
add
rol
outs
mul
add
int3
cmp
int3
rol
in
xor
cmp
jno
push
mov
stc
fcmovnb
adc
sar
in
inc
or
pop
xchg
fldcw
int3
rol
mov
int3
lods
std
loopne
rol
in
xor
sub
das
cmp
xor
cmps
into
jnp
pop
jle
lods
xor
mov
int3
sar
adc
cs
out
stos
lea
int
cmp
xor
cmp
cmps
mov
gs
cmp
jle
lods
xor
ins
sbb
sar
adc
cs
out
stos
lea
int
cmp
xor
push
in
pop
push
fldcw
jb
rol
(bad)
rol
outs
mul
add
int3
cmp
mov
jnp
mov
shr
and
(bad)
adc
sar
in
inc
xor
pop
pop
fldcw
int3
rol
mov
int3
lods
std
loopne
rol
in
xor
sub
das
cmp
xor
(bad)
in
inc
cmp
jmp
xor
(bad)
mov
int3
ja
std
cmc
sub
jno
cmp
mov
nop
dec
lea
add
cmp
mov
(bad)
adc
cs
ss
(bad)
gs
(bad)
adc
cmps
cli
popa
mov
(bad)
adc
jle
imul
movs
add
fs
test
mov
cmp
push
int3
rol
mov
int
imul
imul
jmp
loope
lock
inc
adc
and
xchg
cli
(bad)
adc
cs
xor
mov
mov
jmp
outs
mov
bound
lds
loopne
cs
sub
cmp
sub
das
cmp
xor
(bad)
mov
int
imul
jle
fmul
js
ins
fdivr
gs
xor
(bad)
mov
xor
(bad)
mov
push
cs
xor
imul
stos
jmp
addr16
(bad)
adc
jle
aam
mov
mov
iret
scas
cli
mov
cmp
repz
mov
(bad)
adc
jle
imul
movs
add
fs
mov
iret
daa
stc
cwde
sbb
xchg
xor
mov
fcmovnbe
(bad)
adc
mov
mov
or
cmp
in
mov
imul
(bad)
(bad)
xor
mov
xlat
rol
adc
mov
mov
pop
cmps
jl
cmp
imul
jl
xor
mov
adc
ror
arpl
les
int
imul
jmp
int3
cs
xor
cmp
xor
cmp
shl
(bad)
lock
mov
(bad)
adc
jle
mov
ins
cmp
rol
adc
jle
jo
cmp
cmp
mov
(bad)
adc
sub
addr16
(bad)
adc
cmps
mov
popa
mov
(bad)
adc
jle
pop
mov
ret
aam
cmp
dec
mov
sar
push
aaa
cs
ror
adc
adc
test
jmp
cli
outs
dec
sar
jecxz
pop
cmp
xor
(bad)
in
mov
shr
mov
jnp
mov
shr
or
sub
in
mov
adc
in
xor
stc
jecxz
pop
cmp
xor
(bad)
mov
int
imul
imul
jmp
loope
lock
inc
adc
and
xchg
sahf
(bad)
adc
ror
xor
ins
xchg
cs
ins
fsubr
xor
imul
mov
adc
adc
shl
arpl
(bad)
outs
fistp
mov
mov
cmp
xor
pushf
popa
xchg
adc
lods
aad
mov
cmp
xchg
movs
test
rol
mov
inc
cmps
jl
mov
in
mov
imul
mov
int
cmp
cmps
(bad)
adc
jle
pushf
shr
mov
(bad)
adc
jle
aam
cmp
xor
cmp
shl
sub
stos
and
push
mov
and
popa
mov
(bad)
adc
jle
in
int3
fwait
int
int
mov
mov
movs
add
fs
mov
iret
cmps
loope
jmp
cli
outs
dec
sar
jecxz
iret
cmp
xor
push
push
rol
adc
and
mov
adc
cs
mov
shr
xchg
adc
(bad)
xchg
pop
int3
sar
stos
mov
shl
imul
mov
adc
and
sub
das
cmp
xor
xchg
mov
mov
xor
(bad)
mov
xor
cmp
in
mov
into
rol
adc
adc
in
inc
xlat
mov
retf
rol
adc
fwait
gs
shl
arpl
(bad)
popa
mov
les
int
imul
jmp
int3
rol
mov
xor
(bad)
mov
xor
or
in
mov
adc
pop
cmp
cmp
(bad)
int
imul
mov
mov
(bad)
adc
or
gs
imul
rol
imul
shl
adc
or
gs
xchg
rol
adc
or
gs
in
int3
stos
aad
int
mov
xlat
rol
adc
stos
aad
int
outs
call
xchg
leave
adc
sar
cdq
xor
mov
in
mov
shr
add
outs
in
xchg
jmp
cwde
aas
movs
mov
mov
cmp
into
bts
das
mov
in
adc
sar
cwde
aas
movs
mov
mov
cmp
(bad)
mov
cmp
(bad)
mov
cmp
cmp
into
(bad)
adc
jle
fmul
js
add
ins
jo
and
pop
rcl
xchg
test
(bad)
cmp
xor
imul
daa
jge
mov
jbe
or
xlat
cmps
(bad)
in
int
dec
or
imul
xor
cmp
dec
push
in
xor
add
xor
pop
or
into
mov
xlat
mov
sar
in
xor
pop
sbb
rol
adc
or
test
xor
pop
add
imul
sub
push
ins
inc
bnd
xor
rol
imul
int3
rol
mov
jne
addr16
pop
dec
xor
cmp
mov
jns
push
jns
sub
retf
pop
shl
mov
in
pop
cs
xor
outs
cmp
mov
in
mov
dec
cmp
ins
in
ins
gs
lods
aad
pusha
js
mov
xchg
scas
scas
out
add
sbb
cmps
jl
mov
call
aaa
mov
clc
clc
and
cmp
cmps
lods
xor
mov
in
xor
cmp
hlt
sub
jno
cs
and
out
sub
jb
cmp
sbb
movs
cmp
mov
in
cmp
cmp
stos
outs
cmp
repz
ror
cs
cmp
dec
out
xor
(bad)
enter
scas
xor
cmp
sar
xchg
repz
pop
int3
cmp
stc
movs
mov
cmp
in
ss
cmps
lods
xor
push
out
xor
mov
in
jae
aas
aam
stos
push
out
xor
iret
jmp
xor
dec
fbstp
add
cs
int3
sub
jae
cs
sbb
mov
fisub
cmp
xor
cmp
lods
outs
cmp
int3
sub
jno
iret
jmp
and
(bad)
mov
add
in
mov
and
sub
js
xchg
ds
adc
ror
jmp
aaa
pop
ds
(bad)
sub
xor
adc
cmps
jl
mov
mov
in
aaa
(bad)
xor
jmp
cmp
(bad)
(bad)
shr
xor
mov
in
mov
and
xor
js
xchg
outs
cdq
lods
xor
fst
int3
ror
jmp
xor
(bad)
mov
mov
and
cmp
ss
xor
in
xor
lea
int3
ror
jmp
xor
(bad)
(bad)
test
xor
mov
in
mov
and
cmp
ss
lods
xor
in
xor
mov
int3
rol
jmp
int3
sub
jae
cs
in
mov
and
cs
xor
cmp
xchg
ret
xor
cmp
lods
outs
cmp
pop
icebp
gs
xor
lods
outs
cmp
(bad)
aad
jb
mov
aam
outs
cmp
xchg
push
lods
xor
cmp
mov
cs
xchg
ret
xor
cmp
lods
outs
cmp
int3
sub
jno
mov
in
xor
cmps
in
xor
mov
add
mov
mov
add
cmp
add
shl
xor
cmp
cmps
lods
xor
mov
in
mov
mov
jno
ss
ss
scas
xor
stc
nop
lods
shl
sub
enter
scas
xor
mov
lods
push
loope
in
xor
adc
stos
stc
pop
jno
mov
in
jae
add
ss
lea
fbstp
add
cs
int3
sub
jae
cs
in
mov
and
cs
and
stc
add
mov
imul
repnz
xchg
ss
lods
xor
push
mov
mov
jno
mov
add
mov
cmp
cmp
xchg
ins
cmp
repz
mov
sub
jno
mov
sbb
jl
push
out
cmp
xor
mov
ins
dec
fnstcw
xor
outs
cmp
(bad)
gs
mov
cmp
jl
push
scas
cmp
xor
dec
ja
js
xor
xor
mov
in
xor
ins
dec
fnstcw
cdq
jg
inc
sbb
es
shl
or
in
mov
icebp
(bad)
clc
gs
push
movs
lods
xor
(bad)
js
mov
ds
mov
loope
push
into
in
inc
sub
in
aaa
lods
sbb
mov
ss
jne
sub
mov
cmps
cmp
in
int3
sub
in
outs
cmp
and
ins
ret
in
xor
cmp
fdiv
mov
jne
sub
mov
cmps
cmp
in
int3
sub
aam
outs
cmp
and
adc
pop
lea
jmp
cmp
sub
lds
in
(bad)
iret
mov
(bad)
cmps
clc
mov
out
mov
fs
fs
and
sbb
add
in
int3
sub
jno
push
in
ins
cmp
jno
in
mov
ins
cmp
xor
mov
(bad)
leave
mov
iret
cmps
inc
(bad)
nop
mov
cs
xchg
jnp
gs
mov
sbb
xchg
jnp
gs
mov
xor
call
xchg
jnp
mov
cs
das
shl
addr16
mov
push
mov
add
cmp
in
xor
cmp
xchg
mov
jnp
mov
cmp
jno
(bad)
test
xor
cli
outs
push
ret
jbe
mov
ret
jmp
cmp
mov
shr
lds
xor
mov
jmp
mov
jmp
loope
cs
test
xor
jl
xor
cmp
mov
cs
rcl
cmp
xchg
jbe
cmp
xor
mov
add
mov
hlt
imul
push
xchg
cmp
xchg
mov
jecxz
cmp
xor
retf
imul
pop
cs
xor
sub
scas
outs
cmp
pop
loope
lock
cmp
mov
xor
aaa
inc
aas
adc
rol
push
cmp
mov
inc
mov
fcmovnu
pop
in
xor
cmp
xchg
xor
dec
dec
pop
cs
in
pop
sub
int3
pop
fld
dec
cmp
mov
push
cwde
xor
(bad)
cdq
xlat
(bad)
jl
xor
(bad)
jmp
mov
pop
mov
retf
fisub
fsub
add
cmps
jl
mov
out
mov
sub
jl
sbb
ins
idiv
pop
sti
data16
sbb
arpl
gs
mov
ds
(bad)
push
call
mov
imul
int3
pop
rol
inc
(bad)
adc
(bad)
stc
add
int
cmp
adc
mov
jnp
or
cmps
or
mov
add
mov
int3
sub
jno
(bad)
cdq
cmp
es
lods
xor
das
cmps
fsubr
and
movs
dec
in
jae
adc
pop
lea
test
pop
ror
cs
inc
sbb
pop
ja
cmp
int3
cs
inc
push
ss
ja
cmp
int3
cs
inc
xor
pop
ja
cmp
int3
cs
inc
ds
ja
cmp
in
cmp
xor
xor
mov
and
sub
sub
cmp
test
jecxz
sub
(bad)
ins
cmp
test
pop
aad
and
leave
fs
daa
cmp
cs
mov
xor
mov
mov
cmp
test
das
aad
pop
inc
gs
lods
shr
cmp
sub
cmp
(bad)
shr
xor
dec
mov
cwde
jl
pop
out
ss
aaa
sub
jno
imul
cwde
ins
adc
sub
push
jno
imul
jl
mov
(bad)
addr16
and
cmp
mov
cmp
adc
(bad)
cmp
test
ss
shr
mov
(bad)
cmps
sub
in
fmul
ss
jbe
push
sub
scas
add
in
xor
ins
jbe
cmp
int3
sub
jno
mov
mov
movaps
outs
fld
shl
(bad)
mov
jmp
shr
cmp
cmp
dec
nop
cmp
xor
gs
lods
shr
mov
aas
enter
xor
imul
addr16
cmp
fldcw
mov
stc
xor
cmp
mov
pop
out
inc
dec
mov
jnp
add
gs
lods
shr
mov
aas
out
inc
jg
adc
(bad)
cmp
cmp
fld
ss
aaa
sub
xor
cmp
xor
dec
ret
mov
(bad)
addr16
and
cmp
mov
cmp
outs
fld
mov
retf
movs
jl
mov
(bad)
mov
adc
cmp
movups
cdq
popa
cmps
shl
mov
mov
cmp
cmp
fld
dec
fistp
and
cwde
cmp
cs
jmp
sar
in
xor
add
jne
in
mov
cmp
shr
mov
cmp
xor
outs
test
(bad)
adc
and
mov
xor
jmp
mov
pop
mov
scas
add
stos
mov
shr
xor
dec
sbb
xor
dec
(bad)
jne
jl
push
(bad)
cmp
xor
call
xor
mov
cwde
xchg
test
sub
es
test
xor
loop
retf
das
loope
fstp
(bad)
jmp
cmp
cmp
in
xor
rcr
cs
inc
push
mov
loop
idiv
test
mov
rcr
aad
ror
fmul
mov
sub
cmp
in
mov
cmps
retf
in
jmp
das
jecxz
jecxz
jl
mov
jnp
and
cmp
sub
mov
(bad)
shr
(bad)
ret
in
jmp
sub
(bad)
mov
ins
adc
ds
jmp
mov
mov
mov
jmp
test
mov
cmp
and
fucomi
int3
sbb
(bad)
ins
cmp
rol
adc
jne
das
cmps
fcom
cmp
fild
pusha
in
xor
mov
int3
call
(bad)
in
(bad)
in
xor
cmp
xor
fidiv
int3
sar
sub
cs
in
xor
test
in
rol
in
inc
aas
ss
mov
(bad)
adc
scas
add
in
xor
ins
mov
out
int3
cs
(bad)
cmp
mov
ins
movntps
jno
cmp
test
mov
fwait
lock
adc
ss
aas
and
push
jno
push
in
mov
shl
lods
xor
(bad)
jns
rol
pop
in
popa
aas
and
push
jno
push
jns
lock
adc
sbb
stos
outs
cmp
ja
in
mov
shl
lods
xor
(bad)
in
cmp
mov
xchg
xor
scas
xor
imul
retf
sar
jecxz
mov
clc
push
xor
jns
xor
mov
jecxz
mov
clc
push
xor
js
mov
rol
jmp
mov
fidiv
int3
sar
jecxz
mov
pop
adc
jmp
(bad)
adc
sub
jno
mov
out
(bad)
adc
out
(bad)
mov
outs
cmp
fcmovbe
adc
pop
mov
inc
cmp
xor
push
cmp
cmp
mov
out
fucomip
mov
rol
stos
mov
cmp
xor
add
rol
inc
stc
mov
mov
(bad)
adc
clc
mov
cs
jmp
mov
aad
int3
sar
add
pop
rol
in
xor
mov
(bad)
(bad)
adc
(bad)
sbb
int3
sar
adc
out
dec
mov
sar
scas
scas
out
int3
lds
int3
cmps
jecxz
fldcw
push
xor
sub
add
(bad)
(bad)
adc
pop
xor
xor
dec
xor
cs
jecxz
idiv
and
cmp
scas
out
int3
lds
lock
xor
cmp
(bad)
ret
adc
ja
imul
cs
mov
rcl
int3
cs
mov
(bad)
adc
and
adc
pop
lea
in
rol
add
jns
in
fisubr
in
xor
(bad)
jns
rol
repnz
cmp
cmp
jge
cs
mov
int
int3
sar
cmps
fcmovbe
adc
out
fucomi
mov
out
fsubr
xor
addr16
aas
mov
es
out
int3
movs
lods
sbb
rol
sub
repnz
cmp
iret
das
rep
cmp
imul
xchg
int
int3
sar
call
int3
sub
jno
mov
adc
pop
bound
and
in
xor
(bad)
gs
sub
cmp
mov
sar
gs
out
int3
movs
mov
cmps
mov
adc
lods
sti
lock
imul
shl
adc
sub
imul
shl
adc
rcl
mov
shr
xchg
out
int3
(bad)
cld
mov
out
(bad)
adc
stos
test
int3
ror
stos
std
xor
shl
adc
stos
in
int3
sar
adc
pop
cli
test
cs
int3
pop
cs
xchg
(bad)
adc
les
xor
sar
push
aas
jl
loope
das
cmp
cmps
and
int3
lds
scas
xor
(bad)
jns
rol
repnz
cmp
repnz
int3
add
(bad)
gs
cmp
jns
cs
cmps
fst
adc
out
fucomi
mov
outs
cmp
fcmovbe
adc
inc
cmp
xor
imul
cmp
mov
shl
sub
stos
pop
in
xor
mov
push
mov
shl
pop
xor
shr
xor
dec
jecxz
push
xor
cmp
add
div
cmp
fcmovbe
adc
movs
sub
in
mov
(bad)
popa
ja
cmp
adc
call
(bad)
in
mov
fnsave
int3
sar
xchg
out
int3
cmps
leave
movs
mov
cmp
fld
aam
pop
daa
gs
lods
shr
mov
cmp
fld
mov
gs
lods
shr
mov
cmp
int3
sub
jno
ss
cmps
(bad)
out
int3
out
fucomi
mov
rol
ins
mov
out
int3
das
ss
xor
cs
cli
mov
cmp
shl
xlat
icebp
(bad)
adc
lods
mov
fsub
mov
mov
adc
cmp
or
rol
sahf
fisubr
(bad)
in
cmp
lods
dec
in
rol
sub
es
adc
call
add
xor
cmp
inc
push
mov
in
xor
dec
repnz
add
xor
cmp
inc
cmp
in
xor
dec
out
adc
xor
cmp
inc
sub
(bad)
(bad)
adc
out
inc
dec
mov
xor
inc
xor
pop
mov
(bad)
adc
jle
pop
out
icebp
(bad)
adc
fwait
in
xor
rcl
call
mov
adc
pop
jnp
xchg
fcmovbe
adc
cs
mov
cmp
out
shr
repnz
cmp
jle
mov
es
out
int3
cmps
cmp
add
sar
adc
sub
in
inc
inc
jmp
fiadd
lds
int3
scas
mov
in
cmp
mov
xchg
xor
scas
xor
imul
mov
mov
add
cmp
jl
cmc
xor
retf
mov
shl
cmp
jbe
cmp
retf
inc
xchg
jnp
mov
cmp
xor
popf
ins
pop
(bad)
and
xor
mov
out
or
mov
cmp
cmp
ror
js
ins
cmp
cs
ror
scas
mov
shl
cmp
cmp
jbe
cmp
and
jnp
(bad)
ja
fstp
aaa
lds
ins
jbe
cmp
sub
xor
into
mov
cmps
jl
mov
fdivr
add
mov
fadd
test
sti
imul
jp
push
out
cmp
xor
addr16
mov
xor
mov
retf
and
in
xor
mov
ins
jbe
cmp
test
gs
lods
fucomi
mov
cmp
jmp
jae
cmp
jecxz
ins
cmp
jo
stc
cdq
aas
lods
fldpi
mov
cmp
aaa
scas
jl
xor
(bad)
scas
xor
stc
in
xor
add
xor
cmp
aaa
movs
jl
mov
jnp
jecxz
sub
cmp
or
ins
jbe
cmp
ins
dec
fdiv
jecxz
jge
adc
call
das
data16
(bad)
mov
std
pop
aas
ins
jbe
cmp
cmp
inc
sbb
frstor
(bad)
mov
xor
mov
retf
and
in
xor
ins
jbe
cmp
test
mov
jne
das
cmps
fdivr
mov
jo
(bad)
mov
in
xor
fisub
shl
in
xor
in
fisttp
xor
jns
comiss
cdq
retf
pop
cmp
pop
sub
cmp
fsubr
jbe
int3
das
inc
add
imul
lock
mov
in
ins
gs
xchg
cmp
xchg
bound
cmp
(bad)
aaa
mov
in
mov
fs
xor
fisub
shl
adc
cmps
(bad)
popa
inc
and
inc
es
xor
(bad)
adc
push
mov
xor
(bad)
adc
ss
xor
mov
gs
pop
shl
addr16
fs
retf
popf
inc
push
mov
in
pop
cs
in
int3
pop
xor
xor
data16
jnp
or
jns
dec
es
ins
hlt
dec
jo
xor
mov
cmp
pop
sub
push
in
xor
mov
pushf
popa
cmp
lods
(bad)
adc
mov
jmp
or
dec
mov
(bad)
leave
mov
(bad)
cmps
inc
bound
cmp
lods
stc
cld
arpl
and
cmp
mov
sbb
in
(bad)
leave
mov
(bad)
cmps
inc
xor
addr16
mov
ret
lds
popa
jbe
mov
ret
ror
ror
(bad)
sub
xor
outs
add
jg
in
mov
scas
(bad)
and
cmp
cmps
fsubr
and
fs
mov
adc
(bad)
mov
pop
cs
ins
xor
cmp
xor
in
xor
(bad)
cdq
cmp
cld
mov
mov
(bad)
cdq
aaa
pop
stc
pop
push
xchg
inc
loope
cs
or
inc
cmp
fucomi
push
loopne
out
mov
shl
cs
adc
mov
ror
(bad)
sub
mov
sub
sbb
ins
cmp
xor
jo
cmp
(bad)
gs
mov
(bad)
cmps
(bad)
push
xor
cmp
ins
jo
and
bound
mov
push
cmps
rcr
cmps
inc
xor
push
call
pop
cs
repz
or
xor
dec
call
mov
imul
hlt
inc
cmp
fild
in
xor
jbe
imul
aas
js
push
fisttp
in
xor
stc
lods
fsubr
mov
add
mov
ins
jo
das
cmps
fdivr
inc
es
test
sbb
cmp
add
mov
fsubr
ss
aaa
adc
das
je
inc
loopne
fidiv
in
icebp
cmps
ins
adc
dec
loopne
outs
fldcw
xor
push
xlat
shr
cwde
jge
in
mov
sub
call
sub
mov
xor
lods
mov
cmp
mov
push
rcr
int3
lds
ins
movups
cdq
aaa
call
add
jbe
mov
xor
mov
iret
js
(bad)
shr
push
jge
in
mov
xor
cmps
fdivr
outs
es
aas
jmp
add
imul
jge
cmp
sbb
xor
adc
cmp
imul
lods
std
in
pop
into
sahf
fiadd
or
cs
pusha
cmp
icebp
pop
sti
data16
push
retf
mov
mov
and
cli
mov
imul
xor
pop
add
lods
pop
or
mov
mov
out
xor
cmp
xchg
cmps
loope
jmp
cli
ins
dec
cmp
shl
cmp
es
jae
mov
int3
lds
push
add
test
test
jecxz
push
sbb
jbe
mov
call
mov
jle
xor
mov
xchg
int3
cs
daa
mov
outs
cmp
ror
mov
cmc
jmp
cs
jbe
ss
ja
enter
cmp
xor
outs
pop
(bad)
cmp
cmp
cmp
jmp
cli
addr16
ss
xor
sub
jecxz
stc
xor
jnp
jecxz
in
cmp
mov
and
gs
cmp
cmp
jns
mov
jl
(bad)
mov
xor
ins
shl
loopne
cdq
jns
mov
jl
(bad)
jl
mov
jne
das
push
mov
sub
mov
lods
xor
inc
jl
out
test
ret
test
jl
mov
test
jl
mov
test
jl
mov
test
jl
mov
cmp
fsubr
and
test
lock
es
sub
mov
test
add
mov
pop
add
lock
test
mov
cs
xor
jl
mov
jns
mov
cs
jl
movs
jno
mov
es
jl
mov
test
jl
mov
test
loopne
mov
test
jl
mov
test
pop
and
(bad)
in
and
mov
inc
rol
sub
ins
cmp
and
test
in
and
jl
sub
jl
mov
cmp
dec
mov
mov
lods
xor
test
jl
mov
test
jl
mov
test
jl
mov
test
jl
mov
inc
jl
push
test
adc
mov
test
in
sub
(bad)
cmp
dec
mov
mov
fsubr
mov
out
test
mov
mov
mov
mov
fldcw
jl
mov
test
push
and
test
adc
mov
test
jl
mov
add
into
sar
das
cmps
fsubr
sbb
movs
fs
imul
jbe
or
iret
cmps
jl
mov
ret
xlat
cmps
jl
add
mov
shl
fldenv
div
test
(bad)
cs
mov
pop
adc
shl
add
fld
adc
sti
fs
xchg
enter
cmc
imul
fadd
ins
jl
cmp
inc
push
xor
cmp
cmp
ins
pop
mov
fld
repnz
jl
stos
fld
gs
cmps
ins
push
mov
pop
sub
gs
leave
lods
cmp
sub
test
(bad)
sub
test
daa
rcl
cs
inc
ds
xor
jns
test
ss
jle
adc
mov
cmps
sti
(bad)
cmps
ins
adc
push
jl
cmp
fsubr
aam
cmp
cmp
jl
arpl
mov
shl
mov
fucomi
ja
xor
jbe
imul
pushf
ja
xor
pop
in
xor
pop
adc
sar
test
aas
data16
cmp
aaa
adc
shl
push
retf
mov
mov
inc
cmps
leave
ffree
cmps
inc
pusha
cmp
mov
cmp
repz
sub
repnz
sub
mov
cmps
ins
add
cmp
add
imul
int3
pop
xor
(bad)
(bad)
adc
daa
stc
jecxz
xor
in
xor
(bad)
xchg
fsubr
fsubrp
mov
ins
cmp
daa
adc
cmp
add
and
out
int3
sbb
mov
in
sub
cmp
xor
xor
test
arpl
shl
sub
mov
iret
lds
ins
cmc
adc
xor
mov
jecxz
jnp
add
mov
and
ins
cmp
ss
scas
xor
jl
inc
neg
gs
sar
mov
movs
sub
mov
and
in
push
jno
cmp
jmp
jnp
or
sahf
in
(bad)
nop
mov
out
(bad)
cwde
mov
out
and
pop
loope
(bad)
cmp
mov
jecxz
jnp
fld
jl
fist
in
xor
(bad)
gs
and
in
cmps
add
mov
fst
jns
mov
cmp
repz
jnp
arpl
and
xor
mov
push
jno
mov
mov
add
xor
mov
jecxz
jnp
add
mov
and
ins
cmp
ss
scas
xor
jl
inc
neg
gs
sar
mov
call
leave
repnz
sub
fidivr
in
xor
loope
jno
add
in
sub
cmp
test
cmp
rcl
jmp
loopne
cmps
out
push
jmp
fdivr
(bad)
mov
mov
out
xchg
jnp
mov
sar
aaa
lods
push
add
cmps
leave
sbb
cmps
jl
mov
(bad)
imul
ins
cmp
lods
std
in
cs
in
pop
sub
in
pop
cs
in
xor
jns
inc
es
jp
cmp
retf
mov
pop
fnstcw
test
in
mov
imul
cmc
ror
fs
xor
adc
cs
rep
data16
out
mov
sub
in
pusha
js
push
inc
dec
mov
mov
stos
aad
int3
shl
pop
jno
xchg
in
xor
mov
int3
icebp
jnp
mov
fbld
mov
int3
cmps
inc
gs
mov
je
and
sub
xor
shl
in
cmp
cmps
(bad)
outs
hlt
outs
mov
mov
sar
in
cmc
imul
fadd
shr
js
cmp
test
push
loopne
pop
cld
bound
ret
jmp
xlat
es
jmp
cs
cmps
lods
ror
rol
adc
imul
cmp
sub
shl
cmp
fdivr
in
inc
and
imul
call
(bad)
fidivr
shr
mov
(bad)
scas
xor
(bad)
mov
xor
inc
xor
xor
in
xor
imul
(bad)
cmp
xor
mov
(bad)
rol
adc
call
mov
jno
imul
cs
ret
rol
adc
cmp
xor
push
adc
ins
cmp
xchg
les
int3
(bad)
movs
xor
(bad)
pop
(bad)
rol
adc
fdivr
xor
cmp
xchg
pop
repz
xor
(bad)
mov
xor
cmp
aad
adc
jle
xor
ins
cmp
rol
adc
jle
in
xor
mov
in
int3
sub
jno
push
das
in
ins
cmp
stos
(bad)
adc
shr
xor
cmp
cmp
xor
sub
cmp
sub
in
mov
xor
xor
mov
mov
in
ins
gs
jg
mov
daa
xchg
pop
cmps
xchg
xor
mov
int3
sub
jno
mov
in
mov
(bad)
imul
mov
cs
shl
and
xchg
inc
cmp
int3
pop
xor
addr16
mov
outs
mov
adc
retf
das
shl
dec
adc
inc
cmp
int3
pop
lds
addr16
int3
pop
lds
addr16
ins
jo
and
fs
push
(bad)
(bad)
mov
int3
pop
sub
in
pop
das
imul
and
dec
loopne
pop
xor
cs
mov
and
(bad)
jns
add
dec
gs
pop
shl
cmp
clc
arpl
dec
cld
int3
pop
xor
jmp
data16
jnp
or
outs
push
rol
mov
mov
out
jecxz
cs
retf
jle
test
pop
sub
out
xor
xor
inc
and
cdq
cmp
pushf
movs
xor
xor
sub
sub
sbb
cdq
sub
dec
clc
int3
pop
and
cld
int3
pop
lds
cmp
cmp
dec
loopne
pop
lds
cmp
add
sar
mov
mov
cdq
iret
(bad)
dec
movs
xor
or
jno
das
cmps
fsubr
cmp
mov
ss
gs
xchg
jbe
pop
ins
hlt
cs
in
xor
into
or
call
lds
inc
cmp
inc
and
cdq
cmp
add
sub
sub
adc
xor
inc
ds
cdq
iret
(bad)
adc
and
cdq
iret
(bad)
cmp
xor
or
ss
aam
jl
mov
(bad)
aam
xor
ss
jbe
data16
in
ins
gs
jg
mov
mov
(bad)
mov
mov
lds
jno
cmp
xor
imul
imul
iret
sti
jnp
or
cdq
sbb
shr
cmps
(bad)
(bad)
outs
rcl
pop
cs
sub
cmp
xor
xor
ror
cmp
sti
jnp
cmp
dec
call
mov
jmp
jnp
(bad)
jl
ins
jo
das
mov
daa
sub
clc
addr16
cmp
scas
xor
mov
bound
mov
mov
shl
aad
mov
iret
cmps
sti
(bad)
ins
adc
adc
loope
add
gs
das
loope
int3
pop
sub
imul
gs
pop
loope
data16
call
iret
nop
jae
xor
rcr
xor
in
pop
adc
cmp
mov
aas
out
aaa
mov
and
cmp
mov
das
in
xor
pop
adc
shl
gs
das
loope
fcmovnb
jge
xor
jo
xor
xor
inc
xor
adc
shr
jno
cmp
shl
mov
retf
lds
(bad)
lds
ins
jbe
call
out
mov
and
mov
jmp
sbb
call
cmp
mov
(bad)
fisubr
outs
xchg
clc
scas
xor
mov
(bad)
scas
xlat
lahf
popa
cs
vcomisd
test
or
pop
xor
and
pop
aaa
sbb
cmp
adc
retf
pop
sub
cmp
fsub
pop
dec
shl
pop
unpckhps
in
xor
mov
adc
xor
in
xor
push
repnz
data16
mov
pop
je
scas
xor
push
jne
cmp
cmp
jbe
ss
jbe
add
jbe
data16
out
mov
xor
add
outs
cmp
pusha
js
push
dec
push
mov
mov
mov
xor
mov
adc
lods
pushf
add
rol
in
mov
call
(bad)
adc
dec
loopne
scas
leave
adc
lods
std
in
in
xor
inc
sub
sub
adc
in
xor
(bad)
in
inc
and
aam
cmp
add
ror
cmp
cmp
inc
cmp
pusha
jo
cmp
test
int3
xchg
and
xor
into
dec
retf
rol
adc
shl
adc
loope
into
ror
cmps
cli
(bad)
adc
mov
cmp
fs
jns
mov
stos
lds
int
or
int3
rol
gs
ror
sub
in
xor
aam
xor
mov
xor
mov
mov
loop
adc
cmps
clc
outs
sti
sar
comiss
cdq
retf
xchg
movs
lods
and
rol
in
leave
jl
xchg
(bad)
rol
outs
mul
push
mov
inc
shr
jbe
cmp
es
mov
xchg
(bad)
adc
(bad)
mov
xor
mov
test
xor
cmp
xlat
mov
test
into
jnp
int3
fwait
lds
int
shl
cmp
shl
cs
stos
fld
outs
leave
sub
sbb
xchg
pop
in
xor
mov
push
iret
rol
adc
xor
outs
add
imul
mov
sub
cmp
(bad)
enter
rol
adc
cmp
cs
stos
fld
outs
leave
sub
fcompp
scas
xor
mov
int3
rol
add
imul
mov
xor
fwait
lds
int
sar
jbe
cmp
shl
ja
cmp
cs
stos
fld
outs
leave
sub
fcompp
scas
xor
mov
int3
rol
add
push
in
mov
xor
(bad)
gs
(bad)
adc
cmps
inc
push
in
mov
in
xor
cmp
adc
mov
xor
or
xlat
imul
(bad)
adc
jns
shr
ins
cmp
xor
sbb
in
mov
shr
adc
jnp
arpl
push
test
cs
test
cs
cmp
xlat
mov
test
into
jnp
int3
fwait
lds
int
rol
es
out
ins
cmp
xchg
(bad)
adc
(bad)
ins
test
cs
(bad)
inc
push
in
mov
in
xor
cmp
and
or
cs
pop
iret
rol
adc
add
in
xor
out
xor
mov
int3
rol
add
push
in
mov
xor
ins
cmp
mov
in
xor
cmp
adc
clc
scas
xor
or
xlat
imul
(bad)
adc
jns
shr
ins
cmp
xor
and
xor
shl
cmp
sub
sar
mov
(bad)
mov
xor
(bad)
mov
mov
(bad)
adc
jle
cmp
ins
cmp
lods
std
int3
(bad)
xor
mov
jmp
jo
cmp
cs
stos
fld
mov
int
outs
test
(bad)
jl
xor
mov
scas
xor
and
cmp
xlat
mov
test
into
jnp
int3
fwait
lds
int
shr
mul
mov
in
fcmovnbe
jnp
xor
mov
jmp
in
ins
cmp
xchg
(bad)
adc
(bad)
and
cmp
in
scas
xor
and
cmp
xlat
mov
test
into
jnp
int3
fwait
lds
int
rcr
jno
cmp
es
jnp
ins
cmp
inc
cmp
adc
mov
add
ins
cmp
mov
sub
in
mov
in
xor
cmp
and
xor
(bad)
pop
iret
rol
adc
pushf
jnp
xor
gs
xor
fbld
out
(bad)
adc
cmps
inc
ins
cmp
mov
in
xor
cmp
and
or
cs
pop
iret
rol
adc
push
jnp
xor
jnp
xor
mov
jmp
jno
cmp
cs
stos
fld
mov
int
outs
test
(bad)
sbb
xor
mov
int3
xor
mov
outs
xchg
xchg
(bad)
adc
shr
mov
cmp
int3
cs
in
mov
adc
inc
movs
mov
out
mov
(bad)
adc
adc
(bad)
lahf
inc
movs
test
rol
out
mov
(bad)
ror
cmps
rcl
cmp
stos
fld
outs
icebp
dec
imul
and
xor
and
out
shr
mov
shl
mov
int3
shr
imul
cmp
int3
shr
mov
jmp
cmc
sar
mov
cmp
xor
mov
adc
ror
stos
cmp
int3
shr
mov
(bad)
adc
jle
mov
ins
cmp
lods
std
hlt
fild
js
xor
mov
jmp
in
ins
cmp
xchg
(bad)
adc
(bad)
je
xor
mov
(bad)
inc
outs
cmp
mov
in
xor
cmp
and
xor
(bad)
pop
iret
rol
adc
or
in
xor
jns
xor
mov
jmp
shr
xchg
(bad)
adc
mov
xor
mov
push
int3
rol
ins
xor
cmp
mov
(bad)
adc
movs
mov
aad
xchg
(bad)
adc
and
gs
(bad)
adc
cmps
leave
in
ret
cmps
inc
mov
(bad)
(bad)
adc
(bad)
popa
in
xor
mov
adc
and
gs
pop
leave
gs
movs
jl
ss
in
xor
mov
jecxz
jnp
in
xor
(bad)
gs
(bad)
adc
ror
ja
scas
xor
(bad)
mov
xor
int
into
sar
shl
cs
adc
mov
jmp
or
cmp
cmp
int3
jle
pop
mov
(bad)
adc
mov
les
arpl
pusha
xlat
xor
mov
(bad)
rol
adc
nop
adc
sar
sbb
rol
adc
ror
fwait
leave
adc
shl
adc
pop
xor
imul
jmp
(bad)
enter
rol
adc
shl
in
xor
mov
jmp
in
ins
cmp
xchg
(bad)
adc
(bad)
cld
shl
cs
shl
cs
cmp
xlat
mov
test
lock
int3
fwait
lds
int
ror
cmp
shl
cmp
cmp
stos
fld
outs
leave
sub
fcompp
scas
xor
mov
int3
rol
add
adc
in
mov
xor
xchg
(bad)
adc
(bad)
rcl
xor
mov
in
int3
stos
int
int
mov
xor
(bad)
adc
mov
rol
mov
int3
lods
std
loopne
stos
rcl
shl
sub
stos
mov
(bad)
in
ins
cmp
xchg
(bad)
adc
(bad)
adc
xor
mov
shl
cs
cmp
xlat
mov
test
jnp
int3
fwait
lds
int
shl
or
cmp
shr
or
cs
stos
fld
outs
leave
sub
in
scas
xor
mov
int3
rol
add
adc
in
mov
xor
pop
leave
gs
(bad)
mov
out
cmp
xlat
mov
test
into
jnp
int3
fwait
lds
int
rcl
cmp
es
fsubrp
ins
cmp
xchg
(bad)
adc
(bad)
pushf
shl
cs
shl
cs
cmp
xlat
mov
add
adc
in
mov
in
xor
test
int3
rol
mov
xor
mov
idiv
rol
or
cs
stos
fld
outs
leave
sub
jae
scas
xor
mov
int3
rol
add
adc
in
mov
xor
dec
pop
in
xor
cmp
xor
and
cmp
xlat
mov
test
lock
int3
fwait
lds
int
ror
or
shl
push
cmp
cs
stos
fld
outs
leave
sub
fcompp
scas
xor
mov
int3
rol
add
adc
in
mov
xor
adc
in
mov
in
xor
cmp
adc
pushf
shl
or
xlat
imul
(bad)
adc
jns
shr
ins
cmp
xor
out
xor
mov
int3
rol
add
adc
in
mov
xor
(bad)
gs
(bad)
adc
cmps
inc
adc
in
mov
in
xor
cmp
and
or
cs
pop
iret
rol
adc
lods
add
xor
out
xor
mov
int3
rol
add
adc
in
mov
xor
adc
in
mov
in
xor
cmp
and
or
cs
pop
iret
rol
adc
fs
xor
out
xor
mov
int3
rol
add
adc
in
mov
xor
pop
leave
gs
(bad)
aam
xor
and
cmp
xlat
mov
test
into
jnp
int3
fwait
lds
int
shl
push
cmp
es
in
rol
adc
mov
mov
xor
and
cmp
rol
cmp
cs
stos
fld
outs
leave
sub
fcompp
scas
xor
mov
int3
rol
add
adc
in
mov
xor
pop
leave
gs
inc
cmp
jno
(bad)
pop
iret
rol
adc
pushf
add
in
inc
add
in
xor
mov
jmp
shr
xchg
(bad)
adc
(bad)
mov
xor
mov
shl
add
cmp
xlat
mov
mov
sub
xor
outs
addr16
(bad)
adc
jns
add
ins
cmp
xor
add
in
xor
mov
jmp
shr
xchg
(bad)
adc
mov
cs
xor
(bad)
pop
iret
rol
adc
add
in
xor
adc
call
cmp
cs
stos
fld
outs
leave
sub
fcompp
scas
xor
mov
int3
rol
add
adc
xor
adc
cmp
xor
cmp
adc
nop
xlat
xor
or
xlat
imul
(bad)
adc
jns
shr
ins
cmp
xor
in
xor
mov
int3
rol
add
adc
xor
xor
xor
in
xor
cdq
cmp
or
xor
mov
fcmovnbe
les
mov
push
out
xor
(bad)
pop
iret
rol
adc
cwde
add
xor
mov
(bad)
adc
jns
adc
ror
mov
fwait
rcl
into
rcl
les
cmp
xchg
(bad)
adc
(bad)
call
sbb
enter
rol
adc
sbb
in
mov
shl
push
retf
mov
in
fs
fs
mov
add
mov
cmc
imul
fcom
cmp
cmp
jl
arpl
xor
mov
int3
rol
adc
in
xor
push
in
pop
test
scas
xor
(bad)
mov
mov
fstp
sar
adc
movs
jl
movntps
pop
cs
aam
ins
cmp
das
cmp
mov
test
rcl
out
ins
cmp
(bad)
xor
in
xor
(bad)
outs
test
mov
ins
out
mov
scas
sub
in
pusha
js
push
mov
adc
mov
sub
xor
fisub
scas
les
int3
cmps
(bad)
outs
xchg
mov
adc
cs
cmp
stc
outs
shr
mov
mov
imul
aaa
sub
in
xor
mov
mov
(bad)
adc
jmp
xor
lods
(bad)
jmp
xor
mov
cmp
mov
xchg
rol
adc
(bad)
cs
dec
rol
adc
fwait
cdq
adc
rcl
mov
data16
dec
rol
adc
jp
in
jno
lods
je
rol
gs
pop
shl
rol
add
cmp
pop
les
int3
ror
and
cmp
mov
rol
pop
stos
rol
adc
sub
in
xor
dec
adc
shl
inc
rol
adc
jp
in
jno
lods
fs
rol
test
clc
jnp
fcmovnb
or
xor
mov
mov
adc
jle
fmul
cmp
pop
shl
mov
add
pop
cmp
pop
sub
in
xor
(bad)
mov
xor
xor
push
out
xor
mov
adc
pop
xor
(bad)
or
xor
stc
add
fstp
adc
inc
cmp
imul
mov
(bad)
mov
xor
mov
rol
adc
ror
xchg
mov
(bad)
adc
js
imul
sar
jo
rol
in
pop
xor
fild
xor
stc
add
pop
mov
scas
xor
(bad)
mov
xor
(bad)
popa
mov
les
int3
jle
imul
mov
rol
gs
les
int3
scas
(bad)
in
push
cmp
mov
(bad)
adc
jle
ror
cmp
xor
imul
inc
ins
in
xor
fisub
inc
les
int3
cmps
(bad)
sub
das
cmp
xor
imul
cs
adc
pop
and
adc
sar
in
mov
add
imul
shl
mov
les
int3
jle
imul
inc
sbb
xor
(bad)
mov
push
cs
repz
adc
(bad)
in
fbstp
cs
in
int3
fwait
lods
adc
rcl
in
ins
cmp
stos
lds
int3
shr
hlt
sbb
in
mov
sub
mov
les
int3
cs
mov
jmp
(bad)
adc
dec
xor
shr
daa
stc
cdq
sub
out
xor
shl
cmp
les
int3
das
mov
pop
rol
adc
sub
cmp
dec
xchg
inc
in
xor
push
fdiv
cs
adc
pop
xor
js
in
xor
into
or
shl
in
xor
(bad)
mov
xor
push
in
pop
inc
in
xor
(bad)
mov
int3
lods
std
loopne
rol
in
xor
outs
xchg
mov
adc
cs
xor
mov
fdivr
mov
adc
scas
(bad)
mov
cmp
xor
pushf
jo
rol
in
mov
shr
pop
sbb
in
mov
pop
mov
outs
add
sbb
(bad)
pop
xchg
rol
adc
hlt
or
xor
mov
rol
add
sbb
in
mov
rcl
jmp
data16
out
call
mov
sub
mov
xchg
sbb
leave
ss
(bad)
leave
mov
ret
cmps
(bad)
(bad)
cmps
(bad)
adc
rol
cmp
dec
mov
int
dec
loopne
hlt
or
xor
lds
inc
shl
add
cmp
dec
mov
lds
sub
cmp
dec
mov
(bad)
scas
(bad)
jne
cs
test
jecxz
jnp
in
jecxz
mov
test
popa
ja
adc
cmp
pop
stc
outs
dec
xor
jecxz
out
mov
fbld
shl
cmp
gs
outs
imul
jmp
mov
cmp
fstp
xor
dec
loopne
cdq
jl
mov
jle
lods
add
cmp
inc
ds
jbe
mov
xor
shl
adc
cmp
mov
jmp
(bad)
popa
ja
cmp
test
in
jecxz
mov
xor
call
jbe
imul
xor
and
mov
add
mov
pop
shr
mov
in
mov
(bad)
jo
xor
outs
add
pop
cmp
mov
jne
das
cmps
fcom
cmp
(bad)
mov
fisub
popa
fistp
jmp
(bad)
adc
cmp
mov
scas
xchg
xor
mov
(bad)
into
(bad)
adc
mov
mov
xor
fadd
xor
mov
cmp
ss
mov
jmp
fst
int3
(bad)
mov
xor
mov
cdq
adc
mov
rol
adc
sar
jb
in
(bad)
leave
mov
mov
(bad)
adc
lds
mov
fst
int3
outs
es
xor
(bad)
mov
int3
shr
(bad)
stc
cwde
or
cmp
int3
rcl
mov
mul
xor
xor
pop
sti
into
(bad)
adc
pop
xor
in
mov
stos
or
out
jns
aaa
lds
mov
in
ins
gs
xchg
and
inc
sbb
cmp
cmp
sub
aad
mov
gs
pop
leave
gs
jge
call
pop
push
cmp
mov
outs
mov
adc
mov
(bad)
ss
int3
sar
xor
push
sbb
in
mov
xor
cmp
(bad)
enter
icebp
(bad)
adc
shl
sbb
call
cmp
fst
int3
jle
call
mul
ror
add
cmp
cs
stos
fld
outs
leave
sub
fcompp
scas
xor
(bad)
mov
xor
xor
xor
rcl
cmp
cs
stos
fld
outs
leave
sub
mov
in
xor
mov
push
xor
(bad)
adc
xor
mov
xor
(bad)
adc
fbstp
cs
fbstp
cs
cmp
xlat
mov
test
into
jnp
mov
shr
test
cmp
mov
xor
stos
cmp
shr
mov
cmp
mov
xor
(bad)
gs
out
int3
cmps
inc
sbb
cmp
xor
cmp
daa
inc
leave
or
cs
xor
(bad)
adc
ins
fbstp
cs
fbstp
cs
cmp
xlat
mov
add
sbb
in
mov
in
xor
test
rcl
(bad)
mov
xor
(bad)
mov
xor
sub
stos
cmp
shr
adc
jnp
mov
shr
loopne
cmp
mov
sub
in
mov
in
xor
cmp
daa
inc
leave
or
cs
xor
(bad)
adc
call
sub
inc
xor
jno
mov
xor
(bad)
adc
test
xor
mov
in
popa
cmp
sbb
in
mov
in
xor
cmp
daa
inc
leave
or
cs
xor
(bad)
adc
test
xor
mov
xor
mov
xor
(bad)
adc
inc
fidiv
cs
fidiv
cs
cmp
xlat
mov
add
sbb
in
mov
in
xor
test
rcl
(bad)
mov
xor
(bad)
mov
xor
out
xor
(bad)
mov
xor
or
xor
mov
jmp
shr
mov
fst
int3
jle
in
cmp
es
sbb
mov
pop
gs
xor
(bad)
mov
xor
or
xor
mov
jmp
shr
mov
fst
int3
jle
and
cmp
es
imul
ins
cmp
fst
int3
jle
pop
add
cmp
rcr
cs
stos
fld
outs
leave
sub
fcompp
scas
xor
(bad)
mov
xor
adc
xor
(bad)
cdq
aas
mov
(bad)
mov
xor
(bad)
mov
xor
or
xor
mov
jmp
shr
mov
fst
int3
jle
test
cmp
es
in
in
ins
cmp
fst
int3
jle
fadd
cmp
xor
cmps
mov
gs
(bad)
in
xor
and
cmp
xlat
mov
test
into
jnp
mov
shr
enter
mov
xor
push
cmp
mov
cmp
xor
mov
in
mov
(bad)
mov
xor
(bad)
mov
xor
or
xor
mov
jmp
shr
mov
fst
int3
jle
dec
add
cmp
es
xor
ins
cmp
fst
int3
jle
jl
cmp
es
in
fld
in
xor
mov
jmp
shr
mov
fst
int3
jle
mov
cmp
es
add
cmp
cs
stos
fld
outs
leave
sub
and
in
xor
mov
push
xor
(bad)
adc
xor
mov
xor
(bad)
adc
fdiv
cs
xor
mov
xor
(bad)
adc
sub
xor
mov
xchg
inc
cmp
xor
cmp
cs
iret
icebp
(bad)
adc
cs
xor
(bad)
adc
sub
xor
push
in
mov
shr
mov
shr
xchg
out
int3
(bad)
aam
xor
(bad)
pop
iret
icebp
(bad)
adc
test
in
xor
stc
lods
fsub
mov
(bad)
enter
icebp
(bad)
adc
out
mov
mov
js
push
js
cmps
loope
(bad)
adc
jmp
(bad)
adc
pop
iret
ins
les
fs
(bad)
nop
shl
mov
cmp
lods
js
rol
push
outs
das
cmp
(bad)
leave
mov
mov
(bad)
adc
cmp
(bad)
sub
int3
rcl
in
cmp
add
cdq
adc
rcl
pop
cs
xchg
rol
adc
hlt
ret
push
call
mov
les
int3
jle
inc
out
ins
cmp
sub
in
mov
fwait
or
sar
jecxz
xchg
cmp
xor
in
xor
mov
iret
rol
adc
mov
mov
xor
into
or
shl
adc
shr
mov
les
int3
jle
dec
rol
outs
mul
xor
stos
inc
out
xor
push
dec
out
ins
cmp
rol
adc
jle
inc
sbb
call
iret
rol
adc
mov
pop
(bad)
rol
gs
les
int3
cmps
rol
cmps
inc
mov
(bad)
adc
jle
hlt
sbb
xor
sub
stos
adc
xor
(bad)
imul
cs
mov
mov
cwde
das
dec
(bad)
imul
cs
xor
mov
mov
shr
jecxz
(bad)
adc
mov
mov
int3
shr
xor
adc
xor
mov
(bad)
adc
jle
in
fld
in
xor
stc
jecxz
mov
mov
mov
cmp
mov
in
xor
fisub
push
ret
cmps
(bad)
adc
inc
sub
jno
push
xchg
out
ins
cmp
rol
adc
jle
inc
push
cmp
jmp
aad
adc
lds
ins
hlt
and
xor
(bad)
mov
xor
sbb
xor
mov
cmp
dec
neg
cmp
xor
push
(bad)
xor
mov
adc
movs
mov
shl
pop
icebp
in
and
test
fidivr
in
(bad)
xor
in
xor
mov
mov
js
and
cmp
pop
shl
cmp
stos
test
add
popf
(bad)
adc
sar
in
cmp
cmc
in
xor
mov
mov
jge
jge
rol
outs
mul
xor
stos
(bad)
in
xor
push
in
int3
fwait
lods
adc
shl
arpl
jo
xor
mov
scas
rol
adc
mov
rol
add
clc
(bad)
adc
add
in
int3
fwait
lods
adc
rcl
test
cmp
cmp
in
xor
out
ins
cmp
xor
dec
lds
in
xor
rol
cs
scas
rol
adc
in
cmp
pusha
ror
ret
adc
movs
mov
outs
fistp
lods
adc
rcl
cmp
rol
outs
mul
mov
(bad)
leave
mov
inc
aad
adc
push
cmp
hlt
stos
movs
adc
sar
in
xor
mov
xchg
(bad)
adc
test
xor
push
in
int3
fwait
popf
adc
rcl
aam
cmp
pop
shl
mov
rol
add
push
cmp
mov
shl
push
jnp
or
jns
mov
xchg
sbb
jmp
mov
(bad)
leave
mov
retf
cmps
(bad)
mov
xor
xor
in
mov
sub
mov
sbb
cmp
jge
add
or
in
mov
fisub
fidiv
lds
cs
cdq
aas
mov
shr
adc
cmp
xor
cmp
xor
xor
xor
xor
mov
mov
jmp
mov
xor
mov
iret
jle
add
or
in
gs
push
retf
xor
mov
iret
lds
gs
pop
shl
addr16
in
ins
gs
xchg
cmp
fs
xchg
iret
call
xor
cmps
mov
gs
inc
cmp
inc
rol
cmp
cmps
shr
cmps
(bad)
in
pop
cmp
test
and
in
mov
shr
(bad)
adc
xor
inc
and
arpl
jno
int3
sar
adc
cs
call
mov
dec
mov
cs
out
gs
mov
sub
and
(bad)
lods
aad
fs
cmp
inc
add
in
push
jmp
rol
jmp
imul
cwde
adc
xor
cmp
sbb
clc
sbb
cmp
test
outs
repz
jnp
mov
movs
adc
xor
int
pop
cs
scas
xor
cmp
push
add
les
cs
in
push
sar
cdq
jl
mov
xor
mov
jns
sub
shl
gs
pop
shl
cmp
xor
xor
xor
mov
cs
in
pop
sub
fild
adc
xor
push
fmul
sbb
pusha
sbb
cmp
mov
cmp
(bad)
adc
xor
pop
push
(bad)
fnstenv
dec
adc
xor
pop
push
(bad)
fstp
mov
in
fstp
in
xor
pop
push
(bad)
fldcw
mov
adc
xor
inc
int3
sbb
jae
cs
sbb
cmp
int3
sbb
jae
cs
sbb
cmp
int3
sbb
cld
sbb
cmp
int3
sbb
jno
shr
sbb
cmp
pop
shl
cmp
add
push
in
xor
pop
push
(bad)
fld
mov
in
fcomi
push
in
xor
pop
push
(bad)
fldenv
in
in
xor
pop
push
(bad)
fldcw
xchg
push
in
xor
(bad)
mov
in
ins
gs
jg
push
aad
xchg
clc
mov
imul
hlt
inc
lds
push
(bad)
movs
lods
xor
add
xor
call
test
in
pop
rol
(bad)
mov
in
fistp
in
xor
push
scas
cwde
scas
xor
and
xor
call
test
in
pop
rol
fnstenv
and
in
xor
inc
lods
outs
cmp
or
in
nop
or
push
cs
adc
sbb
or
ror
cmps
outs
cmp
or
in
nop
cs
push
cs
adc
sbb
sub
cmp
lods
outs
cmp
or
in
nop
push
cwde
scas
xor
push
cs
adc
sbb
jae
shl
cmp
lods
outs
cmp
or
in
nop
add
push
cs
adc
sbb
jae
rcl
das
shl
lds
push
stos
cwde
scas
xor
pusha
retf
call
test
in
pop
rol
fnstenv
pusha
pop
in
xor
das
cmps
fsubr
cmp
mov
pusha
fs
scas
inc
and
cmp
pop
xor
rol
adc
ins
cmp
int3
lods
std
cld
nop
cmps
lods
xor
cmp
adc
fisubr
fisttp
xor
inc
lods
outs
cmp
iret
add
jl
sbb
mov
pop
cmp
in
jno
push
or
xor
in
fild
pop
in
xor
push
in
int3
sbb
in
arpl
jbe
adc
arpl
daa
inc
cmp
mov
push
sub
ins
cmp
rcl
cmp
mov
in
pop
cs
fld
mov
in
pop
cs
fnstenv
js
pop
mov
jl
sbb
outs
fisttp
xchg
sub
mov
xor
aaa
jno
push
in
fist
dec
jno
push
in
pop
sub
in
pop
cs
jmp
pop
cs
in
pop
xchg
cmp
xor
xor
daa
mov
xor
mov
mov
repz
push
in
gs
or
push
sub
leave
xor
push
in
int3
sbb
in
int3
sbb
jb
push
cld
pop
sbb
in
xor
sbb
in
xor
sub
cmp
shl
(bad)
jnp
pop
cs
fld
mov
in
pop
cs
fnstenv
js
pop
ds
iret
xor
cmp
xor
cmp
inc
jecxz
jno
push
in
fstp
in
xor
push
in
int3
sbb
in
int3
sbb
jb
push
cld
pop
(bad)
cmp
xor
in
xor
push
les
cmp
arpl
ss
push
ss
(bad)
loopne
xor
call
push
adc
xor
push
sbb
adc
push
lods
xor
dec
das
cmp
pop
nop
cmp
xor
xor
cmp
inc
jecxz
jno
push
in
(bad)
jae
cs
in
int3
sbb
in
int3
sbb
jno
push
mov
push
inc
xor
cmp
mov
push
xor
ins
cmp
ror
(bad)
jecxz
xor
jo
cmp
arpl
adc
xor
push
cdq
jmp
inc
jp
xor
(bad)
(bad)
mov
in
fstp
adc
sbb
adc
dec
cdq
scas
xor
in
xor
push
ficomp
cmp
xor
xor
mov
scas
xor
ss
push
in
fld
dec
jno
mov
xor
mov
pop
cs
fld
mov
in
pop
cs
fst
jnp
pop
add
in
xor
cdq
cs
pop
cmp
xor
in
mov
push
xor
ins
cmp
shr
cmp
mov
in
fistp
ret
adc
inc
cmp
push
sbb
adc
push
lods
xor
or
in
xor
push
test
cmp
inc
jecxz
xor
aaa
jno
push
in
fld
dec
jno
mov
in
pop
cs
fld
mov
in
pop
cs
fnstenv
js
pop
ds
ins
xor
cmp
cmp
in
xor
in
xor
mov
jmp
shr
(bad)
jnp
pop
cs
fld
mov
in
pop
cs
fnstenv
js
pop
ds
mov
cmp
xor
in
xor
push
in
xor
imul
inc
cmp
or
mov
adc
sbb
adc
push
lods
xor
into
cs
pop
pop
cmp
xor
xor
cmp
inc
jecxz
jno
push
in
fneni(8087
sbb
xor
mov
xor
mov
pop
cs
fld
mov
in
pop
cs
fnstenv
js
pop
ds
mov
xor
in
xor
push
in
xor
imul
inc
cmp
or
in
nop
mov
cmp
push
sbb
adc
dec
cdq
scas
xor
pop
das
cmp
pop
mov
sub
mov
xor
ss
push
in
xor
cmp
or
in
nop
stos
cwde
scas
xor
push
sbb
adc
dec
cdq
scas
xor
mov
cmp
pop
in
cmp
xor
xor
mov
scas
xor
ss
push
in
xor
cmp
or
in
nop
xor
retf
cmps
inc
lods
outs
cmp
xchg
ins
cmp
out
cs
pop
cmp
xor
jnp
pop
das
jecxz
xor
out
xor
shl
cmp
mov
in
pop
cs
fld
mov
in
pop
cs
fst
jnp
pop
ss
mov
cmp
xor
xor
mov
scas
xor
ss
push
in
xor
cmp
(bad)
in
nop
push
cmps
lods
xor
push
sbb
adc
push
lods
xor
test
cmp
pop
xchg
in
xor
xor
mov
scas
xor
xor
fisttp
in
xor
rol
mov
cmp
(bad)
leave
mov
fbld
(bad)
adc
das
cmps
fsubr
outs
mov
pop
scas
(bad)
fwait
sub
cmp
pop
xor
fld
adc
ins
cmp
int3
lods
std
cld
nop
cmps
lods
xor
inc
lods
outs
cmp
push
cmp
mov
(bad)
aam
xor
mov
in
pop
cs
fld
mov
in
pop
outs
addr16
adc
retf
add
cmp
mov
push
xor
ins
cmp
cs
xor
or
cs
ror
lods
outs
cmp
mov
fidivr
clc
pop
cmp
xor
jnp
pop
hlt
loop
xor
mov
cmp
nop
sub
lods
or
cmp
lods
outs
cmp
xchg
outs
cmp
imul
jbe
mov
mov
xor
jnp
pop
hlt
loop
xor
or
cmp
nop
dec
cdq
scas
xor
xor
xor
xor
xor
(bad)
sub
in
pop
cs
in
pop
es
clc
fld
xchg
js
fmul
sbb
or
cmp
lods
outs
cmp
xchg
ins
cmp
daa
inc
sub
mov
xor
ss
push
in
(bad)
es
xor
mov
add
mov
pop
push
jecxz
xor
jo
cmp
int3
sbb
jno
sar
cmp
cs
scas
xor
cmp
push
(bad)
movs
lods
xor
inc
repz
mov
in
pop
pop
das
xchg
inc
cmp
sbb
jno
shl
daa
inc
cmp
xor
(bad)
(bad)
mov
in
fld
in
xor
push
sbb
adc
dec
cdq
scas
xor
in
xor
push
ficomp
push
xchg
pop
sub
in
jno
push
imul
mov
xor
call
cmp
xor
push
sbb
adc
dec
cdq
scas
xor
in
xor
push
rcr
push
inc
xor
cmp
repnz
xor
ss
push
in
fcmovnbe
daa
in
xor
rol
xor
or
lods
outs
cmp
xchg
outs
cmp
xor
push
sbb
in
xor
in
xor
mov
jmp
rcl
cmp
(bad)
jnp
mov
jmp
or
in
int3
sbb
jb
push
cld
pop
dec
push
imul
cmp
cs
arpl
ss
push
ss
mov
call
ror
lods
outs
cmp
xchg
outs
cmp
xor
push
dec
xor
cmp
xor
(bad)
jmp
cmc
jnp
pop
shr
ret
mov
in
pop
cs
fld
mov
in
pop
cs
fnstenv
js
pop
ds
mov
xor
in
xor
push
in
xor
imul
inc
cmp
xor
in
nop
mov
cmp
push
sbb
adc
push
lods
xor
xlat
das
cmp
pop
enter
inc
daa
test
cmp
inc
jecxz
jno
push
in
(bad)
and
xor
push
in
int3
sbb
in
int3
sbb
jb
push
cld
pop
sar
in
xor
in
xor
push
repnz
cs
arpl
xor
call
(bad)
mov
dec
nop
ins
cmp
lods
outs
cmp
xchg
ins
cmp
xor
push
rcr
in
xor
jnp
pop
das
jecxz
xor
out
xor
ror
mov
(bad)
cs
in
int3
sbb
in
int3
sbb
jno
push
hlt
pop
push
push
stos
pop
cmp
xor
jnp
pop
das
jecxz
xor
out
xor
ror
cs
mov
in
pop
cs
fld
mov
in
pop
cs
fst
jnp
pop
ss
mov
push
clc
pop
cmp
in
jno
push
in
jmp
sub
in
fcmovnb
and
jae
cs
in
int3
sbb
in
int3
sbb
jb
push
sti
pop
mov
in
xor
in
xor
push
repnz
cmp
fidiv
jmp
lock
call
ffree
adc
jmp
(bad)
mov
out
mov
daa
jge
mov
push
scas
(bad)
fistp
cmp
xor
push
out
pop
cs
out
pop
cs
mov
dec
in
mov
jmp
shl
push
pop
outs
add
aaa
cmp
mov
(bad)
mov
gs
cwde
cmc
xor
mov
test
xor
jl
arpl
dec
cld
pop
adc
in
xor
(bad)
outs
div
add
xor
dec
adc
loopne
xor
xor
aas
ror
sahf
fist
int3
lods
std
hlt
mov
pop
adc
jbe
imul
xchg
xor
cmp
fwait
adc
lods
std
hlt
mov
fisub
ret
ins
jo
and
mov
xor
xor
push
lea
es
scas
inc
cmp
stos
cmp
int3
shr
pusha
ss
mov
call
cmp
cs
stos
fld
gs
adc
aas
push
push
sub
cs
adc
jle
enter
ins
dec
sar
cdq
and
pop
jno
mov
xor
(bad)
adc
xor
xor
mov
std
pop
fisttp
in
int3
rol
mov
xor
cmp
cmp
pop
jno
mov
xor
(bad)
adc
loopne
xor
mov
std
pop
push
mov
int3
rol
mov
xor
sub
stos
cmp
int3
shr
cwde
cmp
in
mov
(bad)
jmp
aas
push
mov
cs
adc
jle
js
cmp
(bad)
gs
(bad)
adc
cmps
jmp
xor
jno
mov
xor
(bad)
adc
dec
sti
xor
mov
std
pop
mov
in
int3
rol
mov
xor
sub
stos
cmp
int3
shr
jo
cmp
mov
(bad)
out
aas
push
in
sub
int3
jle
shl
gs
pop
leave
gs
scas
inc
adc
pop
sub
stos
cmp
int3
shr
cmp
cmp
mov
(bad)
loope
aas
push
aad
ins
cmp
cs
adc
jle
adc
cmp
aaa
cdq
and
pop
jno
mov
xor
(bad)
adc
fdivr
xor
push
in
pop
cs
scas
jmp
in
mov
shr
xor
fst
int3
inc
add
sub
mov
in
fisttp
int3
inc
stc
retf
cmp
ror
sub
cmp
push
mov
(bad)
enter
rol
adc
rol
mov
out
call
pusha
js
addr16
xchg
mov
shl
into
mov
xor
push
xor
(bad)
adc
pop
xor
sub
cmp
aaa
cs
gs
scas
aad
cmp
cmp
jo
dec
gs
pop
leave
gs
xchg
xchg
mov
shl
scas
xor
(bad)
mov
xor
mov
xor
and
cmp
xlat
mov
rcl
adc
sar
cdq
and
pop
jno
mov
fcompp
(bad)
adc
sar
xor
mov
adc
pop
sub
stos
aam
int3
shr
cld
cmp
in
mov
call
(bad)
adc
pop
sub
stos
aam
int3
shr
pushf
cmp
in
mov
retf
sar
pop
jno
mov
fcompp
(bad)
adc
lods
stc
xor
mov
adc
pop
sub
stos
aam
int3
shr
dec
cmp
in
mov
pop
(bad)
xor
mov
adc
popf
jnp
mov
shr
push
xchg
retf
sar
cdq
and
pop
jno
mov
fcompp
(bad)
adc
js
xor
mov
adc
pop
sub
stos
aam
int3
shr
adc
cmp
mov
call
(bad)
adc
pop
sub
stos
aam
int3
shr
xor
cmp
mov
retf
shl
cdq
and
pop
jno
mov
fcompp
(bad)
adc
aam
xor
mov
adc
pop
sub
stos
aam
int3
shr
loopne
cmp
mov
stos
fstp
int3
shl
adc
shl
pop
jno
mov
fcompp
(bad)
adc
xchg
clc
xor
mov
adc
pop
sub
stos
aam
int3
shr
mov
xchg
retf
shl
cdq
and
pop
jno
mov
fcompp
(bad)
adc
inc
clc
xor
push
pushf
xchg
ins
cmp
ret
into
adc
jle
jmp
fbld
repnz
adc
cmps
inc
mov
rol
int3
sar
add
rol
ins
mov
rcl
sbb
loope
xchg
rcr
int3
sar
jecxz
sbb
in
xor
jmp
dec
es
xor
loop
xor
dec
jno
ror
icebp
rol
outs
mul
mov
(bad)
(bad)
adc
out
ss
sub
in
xor
(bad)
in
cmp
cmc
out
xor
mov
adc
and
mov
lds
int3
adc
imul
stos
(bad)
adc
sar
popa
mov
rcl
jle
fldl2e
ins
cmp
rol
adc
jle
sub
cmp
and
sbb
cmps
mov
gs
lods
test
rol
in
inc
pop
rcl
sub
cmp
mov
clc
sbb
out
ret
jmp
xlat
es
jmp
xlat
mov
rcl
and
outs
push
dec
movs
lods
xor
fistp
cwde
scas
xor
xor
iret
rol
adc
xor
xor
mov
in
pop
mov
es
iret
(bad)
(bad)
adc
enter
mov
test
sub
in
mov
shr
sub
cmp
mov
stos
in
sbb
shl
adc
shr
and
jnp
mov
shr
test
cmp
pop
sub
mov
mov
xor
lds
int3
shr
cmp
cmp
mov
sar
imul
inc
ret
xor
cs
iret
(bad)
(bad)
adc
dec
sti
xor
mov
popa
mov
rcl
jle
dec
daa
cmp
jno
mov
iret
rol
adc
mov
int3
sar
jecxz
inc
cmp
xor
(bad)
outs
repz
in
cmp
push
mov
push
mov
enter
fld
adc
(bad)
(bad)
adc
and
adc
inc
test
or
ins
cmp
rol
adc
jle
adc
cmp
ds
arpl
rol
adc
jle
shl
cmp
rol
adc
jle
shl
cmp
test
int3
lds
addr16
into
adc
scas
test
iret
rol
adc
sub
test
int3
call
(bad)
adc
lds
adc
lods
test
rol
out
inc
(bad)
mov
in
int3
fwait
rcl
mov
iret
rol
adc
out
xor
cs
iret
rol
adc
inc
cli
xor
mov
adc
rol
mov
xor
(bad)
popa
mov
(bad)
adc
jns
pop
and
cmp
dec
adc
mov
push
lods
fcomi
sub
xor
(bad)
push
xchg
adc
in
(bad)
enter
fld
adc
(bad)
(bad)
adc
mov
retf
rol
add
aas
cmp
mov
shr
pop
cmp
lds
int3
shr
mov
rcl
mov
shl
(bad)
rcl
jle
in
int3
fwait
int
int3
rcl
inc
outs
cmp
jl
cmp
arpl
lock
xor
mov
iret
rol
adc
(bad)
pop
(bad)
(bad)
adc
mov
adc
lods
std
loopne
in
xor
stos
ds
rol
pop
(bad)
(bad)
adc
jl
in
xor
cmp
add
in
xor
inc
leave
rol
mov
jne
cs
cs
gs
xchg
pop
push
rcr
cmp
aaa
repz
fsubr
jle
xor
pop
jno
push
in
pop
das
cmp
xor
sub
xor
mov
xchg
rol
cmp
dec
clc
arpl
jl
xor
push
in
fcmovnbe
sub
xor
div
dec
pop
mov
in
hlt
sub
jb
lods
in
xor
mov
in
pop
jle
lods
xor
fs
xor
push
adc
cmp
xor
in
xor
or
xor
imul
test
mov
cmp
lahf
xlat
adc
jle
cdq
cmp
lock
xor
push
in
pop
mov
mov
mov
int3
lods
std
cld
push
rol
in
xor
mov
outs
ss
lea
inc
call
jno
mov
in
(bad)
jmp
(bad)
sub
sub
repz
mov
mov
js
leave
cmps
lods
dec
(bad)
(bad)
sub
das
rcr
fild
in
xor
(bad)
push
test
(bad)
adc
jg
sub
xor
shl
in
cmp
cmps
jmp
dec
mov
mov
rol
ins
mov
aam
int3
das
mov
test
(bad)
adc
es
sub
lds
xor
jmp
ret
(bad)
adc
(bad)
sbb
xor
mov
(bad)
cdq
cmp
rol
fcomip
stos
xchg
add
ror
popa
mov
aam
int3
jle
jl
ins
cmp
stos
call
cmp
in
pop
cs
nop
ret
arpl
(bad)
mov
xor
(bad)
mov
int3
scas
retf
cmp
mov
adc
jle
push
div
push
in
mov
shr
int3
ds
mov
in
push
in
fild
in
xor
xor
cs
jl
ins
cmp
outs
cmps
lods
xor
movs
push
cs
add
mov
mov
shl
mov
cmp
xor
pop
dec
pop
call
jno
push
sub
ins
cmp
inc
sub
xor
(bad)
popa
push
push
and
xor
retf
inc
xchg
xor
cs
jl
ins
cmp
push
test
push
cs
add
mov
mov
shl
mov
pop
dec
pop
mov
scas
xor
dec
jno
push
sub
ins
cmp
and
in
xor
xchg
int3
shl
mov
cmp
xor
pushf
gs
loope
lock
cmp
xor
xor
cmp
(bad)
mov
xor
mov
xchg
xor
fisttp
push
int3
and
in
mov
stos
mov
int3
shr
je
cmp
mov
sar
shl
cs
adc
mov
popa
mov
(bad)
cdq
xchg
call
in
mov
sub
sbb
ins
cmp
inc
call
jbe
(bad)
jecxz
cs
mov
imul
cs
xchg
(bad)
adc
adc
in
inc
xlat
push
in
mov
mov
(bad)
mov
dec
and
in
pop
cs
mov
out
pop
fcompp
scas
xor
dec
pop
fild
xor
into
bts
imul
(bad)
enter
mov
shl
jnp
mov
das
loope
lock
or
test
dec
outs
cmp
out
push
in
dec
cmp
xor
mov
out
loope
jmp
cli
test
push
cmp
pop
rol
cmp
(bad)
(bad)
test
xor
mov
cmp
mov
sbb
in
(bad)
int
imul
shl
out
xor
cmp
jbe
cmp
xor
(bad)
test
xor
cli
popa
jbe
imul
cs
fld
mov
in
pop
cs
in
pop
cs
in
pop
cs
in
pop
cmp
xor
aaa
jno
push
or
xor
fsub
xor
call
mov
lods
pop
jno
push
in
pop
cs
cmp
(bad)
and
sar
loope
cs
xor
mov
xor
rcr
aas
cmp
(bad)
cmp
xor
mov
lahf
ret
(bad)
adc
shl
cmp
lahf
ret
(bad)
adc
stos
xchg
add
sar
xor
div
add
shr
mov
xlat
adc
jle
add
jnp
pop
jle
scas
xor
in
xor
(bad)
outs
div
xor
sub
in
xor
cmp
xchg
xor
cmp
xchg
adc
cs
fwait
rol
arpl
xor
pushf
jae
push
in
pop
rol
cmp
mov
(bad)
mov
pop
aad
lods
xor
xor
lock
imul
cs
sbb
cmp
lods
outs
cmp
and
in
fdiv
mov
xlat
jle
js
cmp
pop
loope
lock
test
xor
push
in
pop
cs
in
mov
add
in
xor
stc
cdq
out
addr16
in
sub
cmps
fsubr
adc
in
xor
mov
fs
xor
into
or
movs
jl
mov
sub
mov
cmp
xor
outs
retf
sub
push
fidiv
sub
xor
ss
push
cmp
and
and
cmp
cmp
inc
in
cs
xor
cmp
mov
cmp
xor
push
in
cs
in
xor
mov
test
cmc
jnp
int3
sbb
jno
shl
xlat
rol
gs
les
int3
cmps
shr
cmps
inc
fwait
rcl
int3
rcl
out
xlat
rol
outs
idiv
mov
xlat
rol
adc
shr
xchg
les
int3
(bad)
fsub
xor
xor
stos
mov
imul
ror
xchg
outs
cmp
and
in
cmp
dec
cmp
adc
rol
adc
loop
adc
add
(bad)
aad
pop
es
les
int3
add
(bad)
outs
fld
mov
jecxz
(bad)
adc
mov
add
pop
push
in
mov
rcl
imul
movs
mov
(bad)
mov
les
int3
jle
in
pop
cs
fnstenv
js
fist
in
xor
(bad)
outs
push
dec
lea
mov
dec
lea
jno
mov
add
mov
mov
pop
pop
jno
cmp
lea
int3
sbb
jno
ror
mov
dec
pop
jno
cmp
mov
ds
xor
or
xchg
imul
adc
jno
xor
mov
sbb
mov
xchg
cmps
lods
xor
jl
cmp
or
in
(bad)
xor
jmp
cs
in
lods
outs
cmp
jbe
dec
in
pop
xor
and
in
mov
stos
rcl
int3
shl
in
xor
int
int3
sar
in
or
test
test
sub
jno
dec
ror
sub
jne
cs
fmul
sub
jno
cs
ror
lods
dec
jno
dec
enter
dec
jno
dec
lock
cdq
dec
jno
dec
clc
or
xor
loopne
sub
imul
(bad)
mov
xor
mov
(bad)
rol
adc
sub
jno
dec
cld
or
cdq
dec
jno
dec
in
sub
loope
sahf
sub
xor
dec
cld
(bad)
adc
cs
cdq
and
dec
loopne
cs
in
mov
loope
int3
sar
outs
xchg
repnz
int3
cs
jmp
(bad)
adc
push
loopne
cs
xlat
rol
adc
adc
in
xor
inc
stos
les
int3
shr
push
(bad)
movs
lods
xor
hlt
out
cs
adc
pop
sbb
pusha
idiv
pop
cs
cmp
cmp
push
(bad)
movs
lods
xor
fsub
xor
shl
ss
rol
adc
cmps
mov
sub
cs
in
xor
mov
test
cs
mov
shr
push
stos
cwde
scas
xor
push
out
cs
into
rol
adc
adc
in
inc
xlat
mov
xchg
inc
addr16
into
rol
adc
lds
sar
adc
cs
int3
pop
cs
in
pop
sbb
cmp
and
in
int3
sbb
mov
cmp
mov
in
xor
fisub
retf
int3
cmps
(bad)
popa
mov
(bad)
adc
jle
imul
inc
adc
jno
mov
ret
adc
push
loopne
cs
in
xor
mov
into
rol
adc
or
cmps
outs
cmp
daa
cmp
mov
les
int3
sar
cdq
adc
xor
xor
cs
in
fist
xor
xor
or
cmps
outs
cmp
daa
cmp
fcmove
cmp
adc
rol
outs
sti
sar
comiss
cdq
retf
cld
inc
push
push
in
pop
cs
or
ins
cmp
xor
(bad)
fldcw
mov
xor
xor
xchg
call
iret
rol
adc
lds
test
mov
ss
adc
adc
nop
aaa
adc
xchg
adc
xor
cmp
push
in
fnsetpm(287
xor
xor
or
cmps
outs
cmp
daa
cmp
ficomp
in
xor
(bad)
in
mov
rol
sbb
cmp
mov
shr
mov
les
int3
jle
shr
cmp
ffreep
adc
jle
nop
cmp
cmp
ds
adc
cmp
rol
adc
jle
fnstenv
enter
scas
test
int
(bad)
in
inc
push
push
in
pop
cs
sub
ins
cmp
xor
(bad)
fnstenv
shl
in
xor
into
out
xor
mov
into
rol
adc
mov
mov
xor
(bad)
mov
xor
cmp
xor
(bad)
mov
jb
shr
cmp
(bad)
adc
cs
int3
pop
cs
in
pop
xchg
scas
xor
fsub
cmp
int3
sbb
jo
cmp
mov
sti
int
cs
into
rol
adc
mov
mov
xor
(bad)
mov
xor
cmp
xor
(bad)
mov
jb
shl
cmp
cmp
(bad)
adc
cs
int3
pop
cs
in
pop
inc
out
scas
xor
mov
cmp
int3
sbb
jae
cs
cmp
cmp
mov
sar
shl
cs
adc
adc
xor
cmp
push
in
fstp
xor
or
lods
outs
cmp
sub
in
fcmovbe
cmp
xor
mov
in
fcom
ss
mov
(bad)
adc
movs
mov
adc
push
inc
call
pop
cs
in
pop
add
scas
xor
and
cmp
int3
sbb
jae
shr
cmp
mov
ret
sar
data16
(bad)
adc
adc
sahf
mov
cmp
rol
adc
jle
imul
inc
adc
jno
mov
ret
adc
cld
in
cs
in
xor
mov
into
rol
adc
or
lods
outs
cmp
sub
in
mov
les
int3
sar
cdq
adc
xor
cmp
push
in
(bad)
int3
lods
outs
cmp
sub
in
fisubr
in
xor
mov
in
fcom
ss
mov
(bad)
adc
movs
mov
adc
push
inc
call
pop
cs
in
pop
shr
xor
push
sbb
jae
cs
xor
cmp
mov
ret
adc
sar
popa
mov
lods
icebp
adc
add
jecxz
mov
add
inc
xchg
in
mov
shr
mov
les
int3
jle
shr
cmp
ffreep
adc
jle
adc
cmp
add
cmps
mov
addr16
les
int3
cmps
inc
aaa
inc
cmp
xor
lods
lods
outs
cmp
sub
in
mov
rcl
pop
cs
in
int3
fwait
leave
adc
rcl
jl
cmp
lea
mov
cs
shl
cs
adc
mov
shr
pop
push
mov
sbb
rol
add
sub
in
pop
cs
(bad)
(bad)
adc
cmp
fwait
leave
adc
rcl
inc
ss
ffreep
adc
lods
icebp
adc
add
xchg
mov
(bad)
mov
into
rol
mov
int3
rcl
ins
ss
into
rol
mov
shr
xchg
(bad)
adc
(bad)
pop
jmp
ret
rol
adc
sar
in
xor
or
xchg
outs
cmp
sub
in
pop
cs
in
pop
sub
pop
cs
in
xor
jns
adc
cmp
sbb
rol
gs
pop
shl
cmp
xchg
(bad)
adc
(bad)
xchg
call
mov
out
lods
mov
cmp
inc
xlat
mov
pop
cs
(bad)
(bad)
adc
push
jl
ins
cmp
xchg
(bad)
adc
(bad)
aam
xor
push
in
mov
shr
xor
cmp
(bad)
pop
ret
rol
adc
cld
cmp
(bad)
cmps
(bad)
adc
(bad)
pop
out
xor
(bad)
jmp
xor
cmp
pop
sub
pop
inc
lea
jno
push
mov
xor
cmp
mov
int3
lods
std
hlt
pop
sub
fnstcw
mov
in
fneni(8087
cmp
xor
inc
and
dec
clc
int3
pop
sub
inc
and
cdq
cmp
fsubr
xor
data16
out
cld
xor
or
jns
cdq
cmp
mov
xor
mov
mov
das
cmp
cmp
call
xchg
and
ss
sbb
out
sbb
jno
ror
cmp
aad
in
xor
cmp
xchg
ins
cmp
sub
in
or
mov
out
sbb
cwde
aaa
cs
push
add
adc
xor
xor
add
das
mov
(bad)
fstp
mov
in
(bad)
in
xor
jl
mov
mov
in
inc
and
js
fistp
int3
lods
outs
cmp
xchg
inc
and
js
fstp
cmp
int3
lods
outs
cmp
xchg
inc
aaa
(bad)
fnstenv
aam
in
xor
xor
in
(bad)
leave
mov
(bad)
cmps
(bad)
fucomp
adc
cmp
cmps
outs
cmp
push
scas
cwde
scas
xor
adc
cmps
rol
cmps
(bad)
xlat
push
add
or
adc
cmp
mov
push
cmps
lods
xor
addr16
cwde
scas
xor
cmp
stos
outs
cmp
push
stos
cwde
scas
xor
xor
daa
loop
and
dec
clc
int3
pop
sub
inc
and
fistp
in
xor
aas
gs
pop
shl
addr16
in
sub
xor
cmp
push
es
mov
cmp
push
and
scas
xor
cmp
push
ds
mov
cmp
push
cmp
scas
xor
cmp
push
push
retf
mov
cmp
push
add
scas
xor
cmp
push
push
retf
mov
cmp
push
sbb
scas
xor
cmp
fist
(bad)
ins
or
dec
iret
pop
or
adc
jle
mov
mul
mov
iret
daa
stc
cwde
sbb
jle
or
dec
push
fdiv
jle
lea
xor
sub
pop
xor
push
xor
stc
cwde
lods
ror
fst
fucomi
cmp
xor
pop
imul
ret
xor
adc
and
cmp
or
and
cmp
aaa
or
or
or
(bad)
xchg
(bad)
adc
sar
xor
ja
xor
push
sbb
imul
jge
aaa
in
xor
xor
cmp
push
outs
retf
mov
cmp
push
push
scas
xor
cmp
push
retfw
mov
cmp
push
(bad)
retf
mov
cmp
push
jle
scas
xor
cmp
push
jp
scas
xor
cmp
push
jbe
scas
xor
cmp
push
jb
scas
xor
cmp
push
dec
retf
mov
cmp
push
dec
retf
mov
cmp
push
inc
retf
mov
cmp
push
inc
retf
mov
cmp
push
pop
retf
mov
cmp
push
pop
retf
mov
cmp
push
push
retf
mov
cmp
push
push
retf
mov
cmp
push
scas
retf
mov
cmp
push
stos
retf
mov
cmp
push
cmps
retf
mov
cmp
push
mov
test
adc
mov
test
adc
mov
test
adc
mov
scas
xor
cmp
push
mov
scas
xor
cmp
push
mov
scas
xor
cmp
push
mov
scas
xor
cmp
push
xchg
scas
xor
cmp
push
or
xor
cmp
push
sahf
retf
mov
cmp
push
call
xor
cmp
push
xchg
retf
mov
cmp
push
xchg
retf
mov
cmp
push
out
retf
mov
cmp
push
jmp
xor
cmp
push
out
scas
xor
cmp
push
loop
scas
xor
cmp
push
dec
scas
xor
cmp
push
cli
retf
mov
cmp
push
test
xor
cmp
push
repnz
mov
cmp
push
into
retf
mov
cmp
push
retf
xor
cmp
push
(bad)
retf
mov
cmp
push
ret
xor
cmp
push
(bad)
retf
mov
cmp
push
ror
scas
xor
cmp
push
cs
xor
cmp
push
sub
scas
xor
cmp
push
es
xor
cmp
push
and
scas
xor
cmp
push
ds
xor
cmp
push
cmp
scas
xor
cmp
push
ss
xor
cmp
push
xor
scas
xor
cmp
push
push
int
xor
cmp
push
or
scas
xor
cmp
push
push
int
xor
cmp
push
add
scas
xor
cmp
push
push
int
xor
cmp
push
sbb
scas
xor
cmp
push
push
int
xor
cmp
push
adc
scas
xor
cmp
push
outs
int
xor
cmp
push
push
scas
xor
cmp
push
data16
xor
cmp
push
(bad)
int
xor
cmp
push
jle
scas
xor
cmp
push
jp
scas
xor
cmp
push
jbe
scas
xor
cmp
push
jb
scas
xor
cmp
push
dec
int
xor
cmp
push
dec
int
xor
cmp
push
pop
int
xor
cmp
push
pop
int
xor
cmp
push
push
int
xor
cmp
push
push
int
xor
cmp
push
scas
int
xor
cmp
push
mov
test
adc
mov
test
adc
mov
test
adc
mov
scas
xor
cmp
push
mov
scas
xor
cmp
push
mov
scas
xor
cmp
push
mov
scas
xor
cmp
push
xchg
scas
xor
cmp
push
or
xor
cmp
push
xchg
int
xor
cmp
push
xchg
int
xor
cmp
push
out
int
xor
cmp
push
jmp
xor
cmp
push
out
scas
xor
cmp
push
loop
scas
xor
cmp
push
dec
scas
xor
cmp
push
cli
int
xor
cmp
push
test
xor
cmp
push
repnz
xor
cmp
push
into
int
xor
cmp
push
retf
xor
cmp
push
(bad)
int
xor
cmp
push
ret
xor
cmp
push
fmulp
scas
xor
cmp
push
fcmove
scas
xor
cmp
push
(bad)
int
xor
cmp
push
ror
scas
xor
.byte
