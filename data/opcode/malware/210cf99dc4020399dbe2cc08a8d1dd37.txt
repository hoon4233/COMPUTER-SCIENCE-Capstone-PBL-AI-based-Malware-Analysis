xor
inc
call
adc
call
jb
ret
(bad)
sub
in
int3
sub
add
add
add
add
inc
add
add
cmp
jb
xor
cs
in
rol
mov
popa
mov
out
mov
cs
aas
push
jbe
test
jmp
repz
cmps
and
and
xor
jne
and
gs
outs
ins
arpl
or
sbb
mov
push
xchg
icebp
jne
fcomp
mov
xor
or
jo
popa
outs
arpl
push
pop
push
mov
push
xchg
adc
arpl
inc
jne
xchg
(bad)
xor
push
dec
test
sub
sbb
inc
cmp
push
cmp
cld
fs
into
push
dec
jne
inc
mov
test
or
sub
and
call
jo
inc
or
int3
xor
inc
js
mov
sbb
adc
repnz
mov
push
idiv
cmps
fs
jae
push
adc
fucom
cmc
dec
inc
bnd
inc
movs
adc
popa
ins
adc
push
and
dec
jmp
pop
inc
sub
add
xchg
xchg
fistp
aaa
sub
pop
add
xchg
adc
pop
jae
sahf
lfs
inc
mov
sti
jmp
mov
aaa
test
pop
xchg
ins
jo
div
cmps
movs
inc
push
add
push
outs
mov
push
dec
data16
cmp
in
fwait
jbe
cmc
push
cmp
scas
sub
sbb
jp
or
mov
retf
mov
dec
sbb
retf
jne
loop
bound
jb
xchg
ds
mov
into
shr
addr16
pop
sti
cld
cmc
adc
outs
js
push
jmp
out
movs
dec
pusha
pop
push
jbe
jo
lods
dec
cmp
ss
ret
mov
xchg
jo
inc
cwde
popa
jne
lods
inc
adc
jae
popf
sbb
data16
adc
cwde
adc
adc
bound
or
arpl
in
dec
xchg
(bad)
cwde
inc
ss
shl
or
push
sub
pop
cmps
mov
sub
dec
push
shr
pop
ins
imul
outs
ja
lahf
test
js
(bad)
jns
mov
popa
push
jmp
sub
mov
dec
bound
arpl
mov
adc
lods
ja
and
test
mov
jae
inc
mov
sub
jl
inc
test
adc
cvtdq2ps
das
xor
sbb
(bad)
hlt
cmps
xor
nop
gs
cmps
jbe
sub
cdq
add
les
xchg
push
movs
pushf
push
inc
xchg
cld
jle
dec
jae
mov
cmc
cmp
push
mov
test
push
int
and
cmovl
mov
push
dec
sub
call
mov
sub
inc
push
fist
das
ror
sub
cs
or
and
dec
cmp
jne
jle
inc
jb
dec
push
ins
sub
retf
retf
leave
push
add
push
movs
xor
push
and
push
addr16
(bad)
not
mov
stc
add
and
mov
jl
leave
test
cs
or
fisub
inc
push
jae
mov
arpl
xor
cmps
aas
dec
inc
cmp
mov
adc
inc
sbb
xchg
lahf
leave
addr16
push
pop
push
xor
clc
movs
inc
xor
xor
loop
pop
sbb
addr16
inc
jg
dec
cmps
jmp
xchg
sbb
adc
imul
mov
push
mov
fild
sbb
jbe
movs
push
cmp
mov
aam
jns
sub
arpl
push
aam
ja
popf
outs
fwait
add
sub
jecxz
xor
and
push
and
push
jbe
gs
xor
mov
mov
add
sub
dec
sub
lea
fiadd
test
stc
and
push
and
outs
or
jb
mov
adc
dec
or
popa
pop
inc
idiv
jae
adc
out
ret
(bad)
loope
mov
loope
cmps
mov
movs
push
adc
ja
imul
pop
pop
push
inc
dec
jmp
adc
cmp
imul
dec
retf
adc
mov
ror
push
ins
imul
add
xchg
inc
not
sti
je
fs
and
call
aad
inc
dec
bound
arpl
out
dec
jns
jnp
and
inc
or
or
push
adc
in
sub
je
inc
mov
sub
scas
adc
pusha
sahf
retf
and
adc
jp
mov
hlt
jbe
dec
in
sub
adc
or
inc
mov
push
dec
mov
mov
inc
inc
xor
sete
movs
sahf
or
inc
xchg
and
mov
shr
sbb
jg
sbb
push
punpckhbw
in
imul
dec
imul
sub
dec
cmps
aas
inc
out
jae
xchg
cmp
or
adc
or
(bad)
imul
jbe
cmps
lds
push
in
scas
mov
adc
add
outs
outs
pop
pop
cs
fisub
dec
pop
fisttp
adc
cmc
lea
movs
adc
mov
and
mov
dec
xor
test
xor
fs
pop
imul
sbb
adc
inc
jb
xchg
sbb
inc
cmp
inc
xor
cmps
push
fs
(bad)
arpl
addr16
push
(bad)
cwde
xchg
retf
adc
push
inc
jae
push
pop
repz
push
jb
aad
ins
jno
inc
adc
mov
arpl
cli
test
push
jo
pop
push
outs
xlat
dec
and
cmps
cs
jge
xchg
outs
(bad)
push
(bad)
push
ja
nop
or
dec
arpl
pop
inc
dec
adc
dec
retf
fs
inc
jae
adc
xlat
(bad)
jb
pop
inc
cdq
sub
imul
fld
mov
out
aas
jmp
and
mov
push
(bad)
lds
imul
dec
and
jmp
gs
add
dec
inc
adc
jmp
sub
jne
pxor
xchg
mov
test
mov
pop
lods
les
movs
jbe
sub
adc
pop
mov
gs
imul
sub
mov
push
and
mov
mov
push
cmp
push
nop
push
push
gs
mov
dec
push
imul
jl
cmc
xor
retf
push
sub
adc
cmp
sub
jmp
imul
pop
data16
call
jle
dec
dec
jae
test
jo
cmp
sbb
in
xchg
dec
dec
push
push
sub
mov
dec
inc
sahf
mov
or
jle
adc
je
(bad)
dec
arpl
rcl
lods
push
int3
sbb
cld
jecxz
test
dec
jae
mov
adc
test
adc
xor
rcr
or
repnz
jno
sar
or
or
addr16
cs
add
jbe
inc
scas
dec
leave
addr16
and
ds
and
retf
jb
or
jg
repz
ins
push
ss
rcl
sar
mov
popf
and
adc
or
movs
hlt
and
enter
cmps
bswap
add
or
es
rol
jle
aas
fdiv
mov
jae
pop
cdq
aad
sar
nop
gs
daa
mov
adc
sbb
jno
dec
cmovp
les
dec
call
fcmove
test
aaa
jmp
xchg
imul
adc
adc
cmps
push
adc
jle
push
addr16
jae
repnz
into
test
pushf
pop
int
cmp
inc
push
ficom
in
dec
adc
movs
push
pop
(bad)
popa
xchg
push
inc
mov
pushf
pop
mov
ins
sbb
jae
outs
arpl
(bad)
inc
xchg
inc
les
dec
jmp
xlat
cs
and
das
mov
mov
and
jmp
push
mov
arpl
imul
into
sbb
dec
or
lods
sti
jns
xlat
mov
push
sub
or
mov
fisubr
xchg
shl
add
inc
les
xchg
mov
(bad)
mov
imul
xchg
and
sub
sub
dec
jb
adc
dec
mov
mov
punpckhwd
fstp
or
jne
adc
sahf
sbb
sbb
inc
and
test
imul
and
mov
xchg
out
adc
inc
or
outs
cmp
or
jo
jne
cmps
adc
or
push
jo
sbb
or
fs
push
pop
and
adc
mov
jge
imul
out
push
sbb
mov
xor
mov
lods
inc
adc
mov
and
dec
sub
and
mov
idiv
xchg
in
aam
and
imul
or
push
in
test
sahf
sub
xchg
or
lock
popf
mov
inc
dec
pop
push
not
imul
jno
outs
jae
hlt
jl
adc
call
push
movs
or
adc
repz
gs
xor
call
dec
imul
call
stc
daa
dec
test
inc
inc
in
or
inc
cmp
pop
pop
push
xchg
and
out
mov
and
and
clc
aas
test
rcl
sbb
in
fstp
adc
sahf
jmp
lea
jo
fnstsw
sbb
mov
lods
or
loope
dec
mov
or
lds
sbb
je
cmp
and
xchg
and
in
sub
xor
shl
jno
cli
(bad)
jg
or
mov
data16
icebp
adc
dec
mov
(bad)
fwait
xor
addr16
movs
loop
jle
repnz
test
and
inc
call
inc
ss
inc
push
mov
shl
ins
out
adc
pop
aam
imul
fsub
add
int
add
add
call
push
mov
adc
add
or
out
movzx
cmp
test
add
pop
pop
ret
push
xor
xor
push
mov
or
push
push
icebp
fcmovbe
out
enter
(bad)
jb
sub
or
or
adc
out
sub
test
std
inc
add
pop
mov
inc
mov
test
(bad)
movzx
shr
fsubr
or
clc
jae
mov
ins
data16
jo
mov
sar
add
mov
mov
cmp
or
cmp
mov
adc
aaa
clc
and
push
fld
(bad)
mov
sub
pop
cwde
or
push
push
push
cdq
fcmovb
sbb
(bad)
orps
or
ds
add
aam
cld
sbb
pop
inc
mov
add
shl
pop
sub
leave
in
loope
cmp
mov
clc
xor
cmp
cmp
cld
sbb
push
js
inc
inc
or
call
iret
dec
adc
shl
or
xor
dec
jl
pop
bound
inc
push
push
mov
out
pop
shl
nop
pop
or
mov
add
dec
sbb
retf
mov
adc
cmp
ret
inc
add
fiadd
xchg
pop
call
jmp
mov
jge
ins
dec
and
in
call
or
ret
pop
jle
push
(bad)
enter
arpl
test
jne
cli
inc
sbb
push
xchg
adc
pop
lea
xor
jecxz
jmp
mov
ds
add
aas
and
push
jne
dec
adc
mov
add
push
mov
call
test
jecxz
inc
inc
push
lods
mov
fdivr
jne
mov
mov
test
or
sbb
aam
push
lock
cmp
dec
fwait
sbb
loope
adc
sti
add
stos
pop
xor
adc
in
push
lock
loopne
xor
jbe
nop
push
jae
add
and
lea
sar
add
enter
repz
call
jae
dec
or
cmp
pop
and
mov
ins
push
shr
dec
hlt
jge
sbb
in
aam
add
retf
or
sti
jo
sub
add
sub
mov
lahf
mov
xchg
push
jmp
push
push
es
mov
mov
rol
int3
call
adc
in
mov
xor
inc
call
mov
cld
adc
pusha
std
test
cwde
mov
shl
test
fld
add
and
inc
call
imul
setge
mov
clc
or
mov
ror
jmp
mov
jg
jne
test
jmp
and
adc
sbb
ss
test
mov
in
aad
addr16
mov
cdq
push
fist
inc
adc
jmp
test
ins
fadd
or
lods
and
push
daa
jl
fs
fistp
and
jbe
rcl
jl
xor
xchg
fnstenv
push
push
out
call
push
dec
mov
pop
adc
mov
add
iret
add
ret
sub
jge
or
push
sub
or
pop
add
pop
jmp
lea
cdq
cld
dec
sti
aam
xor
movs
push
push
stos
test
xchg
adc
dec
js
jle
test
sub
jmp
loopne
jae
sub
inc
in
hlt
push
scas
sti
jbe
sar
add
fld
jb
or
lods
leave
ret
add
add
add
imul
fsub
add
adc
jns
pop
add
add
add
mov
push
or
jle
push
inc
scas
clc
(bad)
int3
jmp
and
or
pop
pop
mov
(bad)
adc
add
mov
loop
fistp
inc
movaps
add
and
iret
or
or
dec
retf
in
mov
dec
rcr
hlt
test
ds
and
dec
inc
and
sahf
sar
pop
and
call
fisub
cmp
pop
test
cmps
mov
sub
inc
(bad)
daa
gs
scas
pop
mov
cmps
sub
cmp
and
sbb
test
pop
xor
or
pop
cmovp
test
arpl
cmps
push
or
jns
xchg
out
test
inc
ret
shl
loopne
lds
jmp
xchg
sbb
jae
jno
test
mov
lock
arpl
stc
nop
mov
push
sbb
repz
adc
(bad)
xchg
jmp
into
mov
stos
stc
sbb
sbb
rcr
and
cdq
mov
dec
add
(bad)
dec
test
lods
cwde
daa
adc
dec
(bad)
out
fld
lods
pop
repz
xchg
pusha
push
add
mov
loop
loop
sbb
pushfw
cwde
pop
inc
pop
jl
scas
ja
cmp
cmp
mov
pop
inc
movs
outs
leave
xor
inc
ja
xchg
aam
pusha
call
mov
mov
xor
mov
push
addr16
mov
imul
xor
dec
push
js
adc
jne
xor
jl
lds
mov
inc
(bad)
pop
clc
and
xchg
xchg
clc
gs
mov
(bad)
sub
lods
dec
cdq
mov
push
cmps
test
cmp
mov
jno
addr16
int
dec
mov
push
out
out
xchg
into
and
cli
icebp
mov
adc
pop
outs
push
mov
sar
int3
inc
arpl
xor
pop
dec
push
sub
sbb
push
inc
push
inc
and
enter
call
iret
push
cmp
adc
mov
pushf
retf
pop
push
or
mov
push
and
sub
out
sbb
repnz
push
daa
cmps
mov
cs
imul
mov
xor
mov
mov
div
daa
mov
pop
frstor
mov
in
jp
inc
push
mov
out
rep
call
push
adc
mov
rcr
mov
xor
sbb
leave
call
out
dec
jge
add
inc
inc
jmp
into
xor
rol
mul
and
leave
pop
sub
push
mov
xchg
adc
mov
jbe
sbb
push
push
push
retf
sub
movs
mov
ja
das
stc
xor
rcr
(bad)
nop
sbb
jo
fdivr
push
inc
aaa
pop
nop
sbb
or
into
rcr
cmp
out
sahf
adc
add
or
or
into
cmps
int3
fxch
add
xchg
jmp
or
mov
mov
ja
ret
int3
xlat
jl
mov
ins
in
test
mov
or
dec
cmps
xchg
push
test
mov
fcomp
jge
and
cmp
retf
jbe
sub
cmp
cli
icebp
ret
adc
push
lock
movs
jg
add
test
add
lea
ret
or
mov
jmp
aas
sbb
jae
cmp
mov
iret
push
mov
pop
data16
adc
inc
inc
enter
(bad)
mov
shl
push
jmp
shl
fistp
sub
xchg
dec
push
call
jns
nop
and
lock
pop
sar
stc
push
scas
jmp
(bad)
xchg
je
inc
pop
scas
mov
movs
retf
(bad)
fwait
notrack
cmps
in
data16
inc
mov
les
push
cmp
jo
imul
sub
and
fadd
xchg
inc
into
cmp
mov
mov
pop
add
(bad)
leave
js
out
jnp
imul
dec
ins
push
inc
sub
cmp
popf
arpl
cwde
retf
mov
mov
stos
cmp
out
ja
enter
fdiv
scas
pop
sbb
std
inc
inc
arpl
(bad)
dec
dec
push
or
lods
(bad)
jp
pop
or
lock
jne
xchg
jp
rcl
pop
cwde
push
mov
jnp
inc
mov
jp
push
fcomp
xchg
ret
dec
sbb
xchg
repnz
shl
dec
int3
adc
sbb
mov
cmp
lods
cmp
(bad)
inc
mov
lahf
jno
outs
fisttp
shr
rcl
dec
jne
arpl
dec
(bad)
aas
jae
push
cmc
scas
add
dec
jg
loop
and
push
jns
add
pusha
out
ror
sbb
jecxz
adc
xor
outs
pop
cmp
mov
xor
pop
ret
and
xor
adc
sahf
inc
pop
mov
scas
pop
loopne
pop
mov
fld
std
repz
outs
and
jle
mov
and
lds
adc
fcom
or
scas
mov
dec
loop
add
arpl
xchg
loop
cmpps
adc
and
in
(bad)
in
and
mov
fsub
aam
enter
ins
data16
call
mov
mov
loop
jbe
sbb
xchg
jle
stos
out
jle
rol
rcl
iret
mov
dec
mov
sti
mov
mov
call
sub
aas
sbb
dec
call
ja
pusha
mov
jmp
and
ret
ficom
cmc
inc
mov
fcomp
std
mov
pop
ja
sub
jge
pop
and
bound
mov
pop
jno
mov
clc
(bad)
pusha
and
push
test
in
popf
sub
out
pop
xor
fisub
mov
cmp
cs
xchg
cld
add
nop
shr
mov
add
popa
xchg
cmp
push
fsubr
stos
add
xchg
xor
dec
out
xchg
push
clc
adc
pop
mov
fsubr
imul
xchg
test
ret
xchg
and
push
imul
js
push
retf
mov
sub
dec
jge
mov
dec
pushf
sub
ret
je
ins
aaa
sub
pop
cwde
bound
fild
jae
cdq
add
mov
ja
adc
inc
leave
pusha
fmul
(bad)
scas
cmp
loope
mov
inc
inc
push
add
sbb
cld
pop
scas
shl
inc
call
pop
je
cmp
sub
sub
push
test
aam
sbb
dec
icebp
clc
xchg
xor
cli
jge
lods
mov
int
(bad)
int
push
dec
pop
das
and
movs
cmp
and
sahf
sbb
outs
pop
and
add
sub
and
data16
sub
in
les
mov
enter
jae
mov
push
aaa
dec
es
add
cmps
repz
in
int
push
sti
jmp
movs
inc
mov
xor
ds
int
shr
or
jmp
lds
xlat
jae
push
lods
lahf
ds
nop
push
ror
xor
rcl
pusha
in
dec
mov
ret
popa
jecxz
outs
add
or
inc
popf
cmp
cmp
push
jecxz
pushf
push
mov
test
in
(bad)
out
iret
retf
pop
cdq
xchg
shl
ret
mov
imul
jnp
xor
or
push
push
jp
retf
(bad)
mov
sti
adc
iret
jo
cdq
push
mov
sub
movs
pop
add
push
mov
pusha
imul
mov
pop
push
mov
loopne
mov
xchg
inc
mov
push
or
pop
nop
dec
add
arpl
mov
scas
add
mov
mov
pushf
fsubr
or
cmps
dec
mov
or
jmp
bound
movs
pop
sbb
ins
shl
in
repz
cmc
daa
sbb
fwait
mov
jle
pop
push
lock
cwde
test
mov
xlat
xchg
lods
pop
cmp
cwde
sub
jns
scas
inc
stos
mov
and
sub
mov
jno
les
xor
cwde
mov
push
sub
mov
mov
mov
mov
pop
gs
push
jns
je
cmp
adc
pop
dec
mov
add
cmp
out
xor
xor
sti
movs
adc
adc
fnstenv
ins
jbe
sbb
sub
sub
repnz
sub
jg
xchg
mov
pop
(bad)
add
push
inc
clc
lock
jmp
arpl
bound
jecxz
das
jmp
mov
mov
call
pop
xor
out
and
aaa
dec
push
jle
sbb
mov
lock
sub
jmp
xchg
jae
mov
ret
loopne
adc
mov
xlat
imul
stos
adc
pop
jo
adc
movs
or
pop
bound
ror
pop
sbb
or
dec
fild
aam
mov
and
repz
mov
addr16
in
xor
in
mov
dec
mov
push
in
or
cs
scas
jae
js
mov
cmp
mov
retf
pop
dec
fwait
adc
lea
iret
xor
add
inc
xor
test
out
or
hlt
inc
mov
dec
stc
sub
sahf
and
adc
je
or
pushf
dec
popa
data16
inc
or
das
(bad)
add
mov
jnp
and
push
cmp
jns
dec
mov
fild
sub
sar
push
mov
(bad)
cmp
cmc
mov
(bad)
out
gs
clc
cmp
es
jo
mov
push
arpl
jg
sti
test
ins
push
into
in
popa
jne
adc
leave
cmp
fist
std
cmps
stos
cdq
mov
sub
mov
pop
enter
push
jmp
sub
into
icebp
lea
or
sbb
stc
rcl
adc
add
xchg
add
push
push
pop
mov
mov
je
xchg
cmp
pop
loope
fcomp
push
mov
hlt
cmp
pop
jge
push
xchg
inc
cmp
push
xchg
mov
arpl
fsub
push
inc
cmp
add
sub
jne
lea
in
xchg
push
cmp
ins
jge
mov
mov
fst
inc
addr16
pop
mov
mov
pop
out
and
inc
retf
call
lods
jp
sub
jmp
ja
or
in
cli
jne
aad
hlt
retf
jnp
(bad)
jle
mov
sbb
adc
mov
not
xchg
ja
shl
push
xor
outs
and
lahf
xor
int
dec
jno
mov
std
and
mov
in
popf
mov
add
stos
mov
inc
cmps
cmp
cdq
lods
push
int
nop
mov
mov
mov
cmp
addr16
dec
sub
push
neg
add
xchg
jns
fisubr
inc
inc
ret
push
out
enter
xor
mov
cli
aas
jmp
cmp
test
pop
fs
enter
and
rcl
mov
jmp
pop
fwait
xor
fistp
lods
lea
jl
cld
push
dec
pusha
fiadd
sub
sbb
mov
cdq
aas
(bad)
and
sub
mov
mov
push
xchg
pushf
pop
out
jg
xor
push
pop
or
jae
retf
push
not
dec
mov
pop
or
push
xchg
sub
push
xor
add
(bad)
int
retf
outs
aas
loopne
xor
pop
add
inc
dec
rcr
mov
and
test
and
movs
jecxz
or
jno
js
xor
popa
jge
rcr
iret
js
sbb
pop
fcom
(bad)
or
vmovdqa
shl
or
ret
adc
(bad)
jno
cmp
mov
iret
fistp
add
shl
adc
prefetch
or
xor
rcr
(bad)
fbstp
push
inc
test
jmp
mov
loop
(bad)
es
or
pop
fisubr
add
xor
aaa
add
or
lods
push
int3
pop
pop
sub
out
sbb
es
xor
retf
jl
jg
pop
out
repnz
test
cmps
push
sbb
movs
pop
bnd
cmp
pop
call
xor
bound
cli
xchg
in
into
imul
mov
enter
push
rol
sbb
cmp
cmp
xchg
jge
arpl
jbe
retf
in
jno
mov
pushf
jo
(bad)
pop
pop
in
fisub
cdq
pop
leave
data16
dec
pop
stos
mov
sbb
movs
dec
mov
mov
shl
or
mov
adc
fdiv
pop
in
stos
ja
pop
push
nop
loop
xchg
movs
call
xor
mov
dec
or
adc
mov
aam
(bad)
sub
fcmovbe
enter
nop
in
mov
test
rcl
stos
div
scas
fidivr
sbb
sub
sub
in
outs
dec
and
mov
bound
dec
adc
push
sbb
mov
pop
and
and
sti
out
cmp
adc
mov
retf
jge
mov
or
adc
mov
adc
inc
xor
inc
jns
xor
imul
aam
leave
inc
jg
push
xchg
mov
fsubr
mov
push
sub
(bad)
retf
xchg
in
lock
add
test
jmp
enter
jecxz
and
push
cmp
ja
retf
mov
nop
add
(bad)
sbb
push
xor
daa
call
adc
lock
jae
inc
mov
ins
lds
sti
mov
mov
das
jl
cs
ins
jl
in
sti
pop
pop
out
fwait
xchg
push
xlat
or
fwait
sub
mov
mov
pusha
mov
adc
lds
sbb
popf
xor
jle
ret
adc
mov
push
cmp
cld
or
jmp
pop
sbb
push
dec
lahf
jo
inc
rcr
sar
xor
mov
xchg
js
mov
fdivr
rcr
sbb
popa
ins
cmp
sar
(bad)
xchg
leave
dec
push
jmp
push
fs
into
xor
movs
out
popf
scas
cmp
mov
pop
je
and
inc
daa
push
adc
adc
aas
jecxz
imul
jmp
cdq
jmp
xchg
arpl
fsubrp
ficomp
(bad)
lea
fmul
std
xchg
cmps
popf
and
push
mov
xor
and
daa
push
mov
aas
inc
aaa
movs
and
ja
or
mov
lods
mov
out
xor
inc
cli
cmp
cwde
scas
push
dec
mov
push
aam
sub
into
sub
cmps
xor
mov
cmc
dec
sbb
fcomi
xchg
(bad)
push
xor
mov
jge
lds
rcr
aas
inc
ss
sbb
dec
mov
out
fisubr
jecxz
icebp
and
les
retf
lods
inc
or
add
add
mov
repnz
xchg
mov
add
popf
inc
pop
fisubr
xor
add
jecxz
jge
in
ds
adc
shl
xchg
inc
sti
push
(bad)
cmovo
sub
mov
not
adc
or
dec
fwait
into
js
test
frstor
xlat
push
mov
ds
add
pop
cmp
xchg
mov
fidiv
les
movs
rcr
or
push
ret
mov
(bad)
pushw
push
mov
xlat
pushf
fsubr
or
or
mov
or
imul
stos
adc
jo
(bad)
neg
or
test
jl
rcl
dec
outs
retf
xor
xor
out
mov
or
push
fisttp
mov
push
sub
fwait
mov
jl
cmps
popf
dec
fistp
and
pop
inc
inc
push
div
adc
jg
pop
arpl
int
or
dec
dec
cmp
and
clc
mov
call
and
bound
add
push
sub
mov
cli
add
pop
fs
call
dec
test
sti
mov
cmp
xchg
aam
mov
inc
pop
inc
and
mov
adc
and
je
xchg
sub
arpl
push
push
fsub
movs
ss
(bad)
int
mov
xchg
inc
hlt
mov
xor
add
shl
mov
rcr
lds
out
pop
fstp
dec
retf
push
(bad)
pop
mov
inc
popf
adc
add
jno
fld
les
stos
push
fisub
les
mov
pusha
pop
in
dec
adc
jae
ret
xchg
xor
or
push
std
(bad)
jge
dec
jmp
jne
xchg
stc
out
push
sbb
xor
sub
mov
inc
out
sub
aas
push
xchg
imul
mov
jl
cmp
jns
int3
sub
mov
and
fwait
lods
adc
mov
adc
jo
adc
in
addr16
fs
nop
loop
add
pop
nop
sub
pushf
mov
mov
xchg
adc
mov
push
pusha
inc
add
jmp
in
and
fild
mov
ins
add
mov
mov
lahf
mov
jl
in
jmp
loop
je
mov
repz
sbb
mov
lock
js
add
loope
call
lea
adc
push
gs
adc
in
movs
imul
inc
adc
adc
jae
rcl
adc
into
pushf
xor
sbb
jo
test
xor
aas
mov
dec
jmp
adc
adc
imul
adc
xchg
fstp
imul
sar
fwait
add
jae
shl
cmp
sti
mov
fdiv
push
test
mov
repnz
int3
enter
jmp
xchg
xchg
jno
cs
mov
fwait
sbb
ja
in
push
push
test
out
pop
(bad)
xchg
mov
jmp
dec
jae
or
bound
jl
push
pop
psllw
xlat
push
retf
mov
jmp
dec
jge
jecxz
enter
popa
loope
scas
dec
mov
shl
mov
mov
ror
popw
xor
cmp
jl
aad
(bad)
cli
fidivr
pop
sub
stc
pop
(bad)
pushf
and
cmp
test
aad
repnz
fbld
pop
(bad)
xor
out
adc
push
repnz
(bad)
mul
popa
and
aaa
rcl
je
out
or
stos
iret
or
mov
push
xor
and
xchg
sar
or
loop
push
loope
pop
sub
push
lods
fwait
out
hlt
retf
mov
xchg
(bad)
iret
mov
or
pop
xchg
fsub
mov
sub
mov
int3
das
nop
ret
retf
cdq
xchg
(bad)
fwait
inc
inc
jge
xchg
inc
fmul
inc
(bad)
ds
pop
call
test
hlt
retf
pop
out
xchg
rcr
sbb
les
sbb
pop
stos
jp
and
add
cmp
imul
jae
(bad)
add
and
jbe
sbb
lods
push
or
xchg
aad
test
cwde
jmp
fnstsw
xor
pop
movs
mov
push
push
pop
repnz
popa
mov
xchg
call
jge
cmps
or
jg
int
fcom
out
movs
inc
xchg
cmp
cmp
(bad)
icebp
xor
mov
push
mov
aas
adc
hlt
jle
pop
xchg
sub
gs
pop
test
xor
push
dec
jae
cmp
jo
adc
in
cld
push
mov
fwait
int
inc
or
mov
mov
in
outs
test
dec
cmps
lds
rcl
clc
and
xchg
test
(bad)
outs
rcl
or
nop
test
jmp
sbb
mov
pushf
arpl
ror
or
or
mov
shr
add
push
fwait
push
add
add
xchg
hlt
mov
jne
and
jecxz
inc
push
xchg
repnz
push
mov
cmp
cmp
fidivr
movs
push
repnz
pop
adc
sbb
sub
sub
or
mov
out
and
mov
outs
ins
in
test
xchg
sar
jns
sbb
jne
(bad)
repnz
call
xchg
lods
sbb
in
jb
mov
push
adc
sar
(bad)
out
jmp
xlat
or
mov
shl
rcr
add
add
mov
dec
mov
lods
retf
in
mov
xor
cld
data16
in
fmul
mov
xchg
xchg
mov
fdiv
fdivp
in
cmc
add
add
inc
jmp
xor
outs
push
cmp
mov
inc
sub
aas
jg
pop
or
adc
data16
fimul
xor
lods
mov
mov
dec
sbb
xchg
cmp
mov
xor
push
rol
fdivr
sub
xchg
xor
push
sahf
test
loope
push
inc
mov
rcl
push
hlt
outs
stc
scas
enter
and
inc
ffreep
pop
mov
xor
inc
cwde
pop
leave
int3
aad
push
sub
movs
xchg
icebp
and
xchg
sub
xor
ficom
popf
cmp
cmp
out
jbe
je
inc
in
outs
aaa
outs
push
mov
xchg
add
add
shl
xor
cmp
test
(bad)
add
stos
sub
mov
adc
push
or
cld
ins
lods
mov
in
push
sub
mov
add
aaa
int3
cli
call
xor
mov
jo
sub
jmp
xor
add
xor
inc
dec
push
ficom
sbb
gs
js
test
movs
rcl
sub
shr
jl
pop
out
push
mov
outs
stos
push
or
sub
pop
lock
adc
int
fstp
ss
dec
xchg
xor
xchg
fimul
sar
jb
mov
je
stos
mov
aad
call
jnp
pop
adc
outs
sub
pop
in
jo
dec
lods
xor
nop
outs
inc
pop
mov
js
fld
cmp
je
and
sbb
add
mov
jl
pop
shl
mov
jb
aad
dec
xchg
mov
je
(bad)
dec
mov
jmp
cs
sbb
cmp
call
out
ins
inc
xchg
cmps
push
into
f2xm1
rol
jg
mov
mov
sub
add
ret
jg
jmp
xor
call
adc
aam
add
and
out
jbe
xchg
aas
mov
stos
jo
mov
pavgb
clc
lock
aam
jl
out
xchg
neg
jae
sub
inc
mov
ins
outs
lock
mov
inc
fistp
xchg
dec
retf
loop
(bad)
pop
jnp
cmp
mov
cs
or
mov
jns
aas
fwait
out
cmp
dec
mov
fild
jo
stc
in
sti
adc
push
movs
fstp
movs
dec
xchg
dec
movs
cdq
retf
pushf
or
fbstp
xor
popa
es
mov
sbb
or
add
test
mov
xor
in
sub
js
call
push
push
or
out
leave
or
daa
fidiv
pop
push
lods
inc
pushf
aam
push
xor
adc
mov
adc
stos
pop
repnz
sub
push
push
cwde
jnp
mov
jmp
mov
jp
pop
mov
inc
addr16
inc
jg
inc
test
mov
dec
cmps
and
ins
and
pushf
bound
dec
sar
xchg
or
inc
enter
or
jmp
mov
in
out
fst
imul
add
xor
mov
xor
inc
pop
cmps
push
push
or
leave
mov
dec
shl
cdq
fisttp
pop
lahf
jmp
sbb
mov
dec
or
sub
out
jns
pop
test
in
lahf
in
add
sti
daa
stos
mov
jmp
sub
cli
mov
jg
push
arpl
xchg
push
popa
sbb
cmp
sar
in
sbb
loopne
mov
arpl
push
bound
clc
(bad)
js
ficomp
(bad)
cmp
and
mov
(bad)
das
call
xchg
inc
inc
leave
jne
mov
(bad)
(bad)
lds
mov
retf
pop
retf
sub
jno
stos
xchg
ins
or
addr16
test
fsub
sti
cmp
retf
icebp
sub
in
jmp
xadd
mov
inc
push
imul
les
shl
mov
jmp
bound
sub
pop
and
dec
fstp
pop
mov
es
repnz
hlt
in
jo
call
je
movs
lock
jge
xor
xlat
mov
adc
test
sahf
mov
arpl
sbb
mov
add
cmp
jmp
rcl
or
mov
push
xchg
mov
or
outs
(bad)
int
cmps
dec
push
inc
mov
das
int3
cdq
jo
jne
dec
push
mov
pushf
int3
les
pop
jbe
jecxz
sub
dec
ins
mov
inc
div
shl
scas
xchg
and
mov
ds
ins
sub
loop
xchg
pushf
mov
mov
push
in
sbb
mov
arpl
xchg
pop
mov
inc
and
stos
loope
int3
icebp
or
dec
pcmpgtd
adc
es
inc
and
pop
push
(bad)
sti
js
xchg
adc
or
lock
js
mov
imul
mov
adc
movs
inc
mov
adc
pop
pusha
xchg
mov
xchg
dec
xor
jns
push
sbb
dec
sub
mov
in
retf
inc
sub
std
mov
cwde
(bad)
(bad)
xor
lods
shr
arpl
ret
iret
data16
pushf
inc
int3
idiv
pop
repnz
pop
inc
movs
jp
inc
sti
cmp
dec
or
in
stos
xor
jecxz
jg
sar
pop
mov
rcl
push
mov
and
scas
xchg
std
test
scas
xchg
mov
mov
fcomp
sahf
bound
test
dec
lds
mov
or
mov
cli
fdiv
sbb
icebp
scas
sub
ror
or
popf
mov
rcr
add
mov
or
(bad)
repz
mov
shl
jns
into
jle
lods
test
dec
mov
pusha
cmp
bnd
fistp
add
aad
and
jmp
retf
int
aam
adc
aad
in
sti
adc
test
mov
imul
mov
fcmovu
fadd
jmp
and
inc
xor
out
(bad)
cmps
pop
xor
iret
es
imul
cmp
or
adc
daa
pop
gs
jecxz
les
pop
cli
mov
(bad)
in
mov
jo
rcl
pushf
rsm
jae
xlat
jg
in
(bad)
pop
aaa
dec
nop
movs
push
push
(bad)
adc
movs
outs
mov
adc
ins
mov
(bad)
jl
aaa
inc
sbb
pop
jp
jecxz
push
movs
clc
push
cmp
in
adc
cmc
(bad)
jle
into
hlt
pop
outs
fmul
shl
pop
addr16
mov
fsubr
imul
inc
adc
(bad)
outs
in
cld
or
add
out
pop
stos
cmp
(bad)
sti
dec
adc
xor
inc
sti
xchg
call
push
jl
outs
out
mov
lahf
sub
xchg
out
jge
je
les
and
push
popa
mov
sbb
sub
test
xchg
mov
(bad)
jo
cs
adc
loope
sub
cmp
fistp
cmp
mov
call
inc
dec
rol
test
inc
in
push
test
or
movs
xchg
aad
in
inc
ret
cmp
push
nop
adc
jbe
add
dec
mov
gs
push
test
sub
les
xchg
sbb
push
push
bswap
xchg
xchg
dec
lock
pop
pop
push
pop
mov
sbb
jle
loop
shl
mov
sbb
cdq
jg
mov
pop
sbb
xchg
xchg
aas
dec
inc
add
into
dec
push
movs
stos
popf
inc
mov
(bad)
pusha
clc
call
add
sub
add
stos
and
sbb
cld
inc
or
gs
mov
in
movs
mov
in
pop
fnsave
(bad)
into
dec
cmp
adc
out
sahf
stc
(bad)
push
ds
ret
shl
jmp
cmp
sbb
das
ret
add
cdq
or
popf
xor
lods
jno
dec
mov
cmp
int3
jg
lock
test
adc
sub
inc
dec
dec
inc
adc
daa
sub
jae
jbe
add
adc
std
adc
fwait
dec
addr16
add
sub
les
or
das
test
push
mov
retf
xor
xor
push
and
xlat
xor
add
mov
sahf
sub
aam
xchg
daa
icebp
mov
push
pop
retf
inc
aam
push
enter
fisub
add
xchg
cmps
cmp
addr16
repz
fsubr
xor
mov
inc
call
rcl
xor
mov
mov
jbe
inc
pop
call
fstp
push
vpaddd
inc
shr
xchg
sbb
xchg
pop
mov
stc
jns
or
and
jmp
or
dec
sbb
sahf
ret
mov
adc
shr
retf
mov
or
and
sbb
cmps
(bad)
or
jp
push
dec
test
repnz
sbb
pop
frstor
fs
gs
cmp
adc
in
sub
vpsubb
or
or
mov
xchg
xlat
mov
sub
lods
imul
sbb
cwde
sbb
fist
or
or
adc
push
mov
push
pop
and
outs
repz
mov
test
sub
xchg
cmp
fld
mov
jbe
mov
dec
mov
fwait
aad
dec
mov
jmp
not
mov
cld
push
(bad)
call
mov
cmp
or
adc
std
dec
fsub
and
add
test
jmp
jne
stos
bound
jb
test
dec
ja
jecxz
mov
push
dec
mov
push
jl
les
jne
xchg
stos
sub
stos
pop
out
stos
add
cmp
and
jno
sub
xor
outs
iret
cmps
sbb
ror
xor
popa
pop
xchg
inc
xchg
jp
xor
add
sbb
leave
call
inc
mov
pop
retf
out
das
push
inc
std
cld
pop
das
fs
mov
jae
push
push
dec
loope
xlat
inc
pop
jmp
cmps
shl
lock
(bad)
sahf
outs
ret
cmc
fistp
mov
xor
retf
div
mov
fcmovnu
sub
jp
hlt
push
sbb
xchg
xor
retf
cmp
mov
inc
retf
dec
mov
cs
cmp
fldlg2
out
std
push
cli
push
jmp
daa
pushf
push
test
clc
adc
stc
(bad)
inc
mov
fisttp
or
sub
pop
(bad)
hlt
add
sbb
mov
shl
and
inc
inc
out
and
ins
add
or
inc
jecxz
stc
in
int
xor
icebp
ja
es
xchg
push
mov
push
leave
faddp
imul
add
inc
int3
dec
add
dec
mov
add
jb
or
daa
scas
mov
or
lock
push
fmul
add
sub
scas
sbb
cmp
(bad)
pop
inc
rsm
js
mov
stos
push
sbb
sub
add
je
sbb
sub
adc
gs
mov
lahf
imul
jle
ffree
inc
pusha
xchg
inc
fidivr
pop
jmp
adc
pop
dec
xchg
out
outs
jb
fwait
popf
cwde
pop
inc
xor
imul
js
xchg
in
loopne
inc
out
ss
out
mov
push
inc
push
mov
xor
xchg
cmp
stos
and
sub
cmp
push
and
pusha
hlt
gs
scas
dec
nop
xchg
(bad)
outs
xlat
push
hlt
enter
mov
aas
dec
das
mov
jg
mov
cmp
mov
mov
or
repz
add
in
pop
sbb
mov
jge
mov
bound
pop
nop
and
push
sub
jne
dec
and
pusha
in
mov
jns
push
or
dec
sbb
pop
daa
cmc
das
sub
add
mov
and
fild
push
lods
daa
xchg
in
mov
mov
and
and
pop
in
xchg
enter
xor
dec
in
pushf
xchg
cmc
loope
imul
and
aaa
adc
sub
mov
xlat
mov
test
in
repnz
jge
xor
in
add
popa
lahf
sub
clc
mov
cmps
mov
mov
jne
sbb
loope
adc
mov
pop
mov
inc
aad
repz
pop
imul
inc
je
xchg
push
mov
(bad)
fld
imul
inc
add
fidivr
xchg
dec
push
(bad)
out
mov
xchg
mov
stos
movs
(bad)
adc
daa
pop
sbb
cmp
xchg
movs
fnclex
gs
bnd
or
mov
sbb
es
mov
loop
fdivr
daa
push
dec
test
or
in
push
adc
mov
fadd
cmp
cmp
adc
cmp
ror
dec
repz
push
shr
xor
mov
pushf
and
test
neg
mov
call
nop
cmc
lods
addr16
or
fsubr
mov
call
mov
jl
xchg
pop
lea
adc
pusha
(bad)
fbld
movs
call
test
sub
aas
xor
sub
pushf
mov
cdq
push
lods
cmp
jne
inc
mov
fincstp
(bad)
jmp
out
jle
sbb
mov
mov
hlt
arpl
mov
mov
pop
pop
pop
xchg
inc
fiadd
mov
inc
mov
aas
xor
scas
ss
xchg
mov
jno
das
jmp
popf
or
mov
mov
or
(bad)
cld
cmp
xor
add
mov
xchg
or
inc
dec
mov
lods
pop
inc
cmp
push
xchg
js
fiadd
ins
jnp
mov
mov
call
aam
xchg
mov
test
inc
test
push
mov
pop
pop
out
loopne
xchg
and
push
int
clc
inc
in
out
jecxz
scas
gs
(bad)
in
fistp
sbb
jnp
cmc
sbb
lock
and
data16
std
int3
or
pusha
ss
jno
fs
or
fisubr
jb
sbb
cmp
test
sub
fsubr
mul
outs
outs
aaa
sbb
add
jae
cs
and
add
add
mov
or
xor
stos
mov
jmp
addr16
ret
mov
sbb
sahf
iret
jb
lahf
imul
dec
in
mov
jo
jecxz
jmp
xor
lds
mov
dec
fst
cmp
scas
aas
ins
cmc
pop
pop
popa
dec
add
cld
outs
sahf
inc
sub
push
xor
sahf
mov
adc
inc
cmp
pop
pusha
sub
cdq
ss
xlat
(bad)
scas
loope
les
arpl
push
sbb
mov
mov
mov
and
mov
xchg
sbb
ror
pop
push
mov
lahf
or
ss
cwde
stos
inc
in
jle
cmp
out
bound
push
or
retf
jae
int
movs
cmp
mov
rcl
nop
pop
xchg
es
imul
sbb
test
jne
mov
mov
(bad)
lods
mul
fldcw
imul
xor
test
loope
outs
mul
pop
int3
fwait
pusha
mov
jge
xchg
addr16
sbb
lock
sub
xchg
mov
arpl
xlat
adc
imul
cmp
sub
aam
push
mov
dec
adc
adc
pop
mov
sub
pushf
int
pop
and
outs
add
data16
call
inc
add
out
not
das
xor
and
cld
pop
xchg
add
or
mov
add
call
call
add
dec
push
xor
ds
movs
or
jmp
mov
aaa
in
xchg
mov
sti
xchg
in
or
jnp
jecxz
mov
in
xor
jno
out
adc
sbb
mov
push
mov
mov
fsubr
idiv
adc
(bad)
fdivr
cmps
jno
test
out
sbb
enter
and
popf
dec
in
push
pop
cmps
adc
xor
sub
movs
jle
cmps
jmp
sub
and
fcomp
clc
jecxz
cmps
push
sar
aas
xchg
mov
sbb
jo
xor
dec
ror
push
cli
mov
cwde
mov
sub
push
adc
pop
sub
pop
push
mov
pop
shl
adc
add
xchg
mov
aam
scas
pop
xchg
jae
cmp
sbb
jp
pop
std
xor
(bad)
int
inc
lods
xchg
sub
xor
imul
int3
sahf
aaa
pop
leave
mov
and
lods
pop
xchg
test
jmp
fist
add
cmp
cld
ds
fmul
out
add
(bad)
sub
cld
stc
pop
leave
adc
xchg
pop
mov
jle
adc
leave
and
jae
in
mov
aas
or
pop
cwde
jo
popf
aad
scas
pop
ja
mov
add
cmps
popa
(bad)
xchg
out
jp
pop
call
aad
aaa
inc
call
mov
add
jge
aad
dec
fsubp
loop
pop
(bad)
mov
lds
adc
hlt
movs
mul
xchg
cmc
add
in
scas
or
pushf
jmp
(bad)
imul
jl
mov
xchg
inc
loope
dec
addr16
in
xor
xchg
push
pop
and
out
sar
pop
aad
inc
ds
jg
test
and
lock
std
test
call
test
pushf
enter
jno
mov
popf
outs
lds
lods
lahf
int
push
cdq
and
mov
sub
clc
or
fucom
or
and
jnp
jno
sbb
int3
test
sub
inc
cs
das
mov
sub
xor
or
pop
repnz
js
xchg
and
add
xlat
popa
rol
data16
sahf
mov
iret
sbb
inc
pxor
add
jle
fwait
cmp
xchg
pop
test
adc
lahf
mov
push
dec
pushf
mov
fidiv
and
mov
push
rcl
mov
jns
dec
and
mov
imul
inc
div
cmp
adc
(bad)
xchg
or
mov
mov
sub
fistp
fdiv
stos
cmp
adc
ja
repnz
push
and
add
fs
cmps
jmp
test
cmc
jp
lods
out
pop
pop
cmp
add
and
cs
dec
xchg
pusha
ins
cli
pop
repz
shr
xor
shl
pop
xor
cdq
inc
cmc
clc
xchg
jecxz
and
daa
arpl
pop
clc
pop
xchg
xchg
iret
sub
test
gs
cmps
sahf
pop
push
mov
(bad)
aaa
adc
leave
imul
aam
sub
jecxz
int
sbb
pop
loop
push
lock
add
mov
cmps
or
(bad)
sbb
aaa
mov
mov
mov
adc
pop
mov
mov
aam
icebp
imul
xor
sar
jo
xor
test
add
cdq
jo
xor
push
int
xor
mov
(bad)
cld
mov
add
int3
sbb
lods
mov
lods
or
cmp
in
loopne
(bad)
inc
xor
outs
aad
sahf
pusha
or
stos
or
in
mov
or
mov
jg
adc
sub
popa
adc
out
xor
xchg
hlt
sub
dec
scas
mov
mov
outs
ficom
stos
pop
and
scas
repz
cmp
cs
sbb
or
dec
dec
hlt
gs
cmps
push
mov
push
jecxz
mov
aad
repnz
push
cwde
sbb
jae
(bad)
enter
xchg
out
cmp
data16
sub
mov
inc
add
add
pop
pop
imul
add
inc
push
and
into
retf
jb
aad
jmp
jge
push
sub
iret
pop
pop
rcl
sti
adc
add
cmp
cmc
(bad)
shr
and
mov
dec
js
scas
popa
stc
cmp
ror
icebp
fidivr
int
jmp
xchg
out
bound
jnp
mov
aas
stc
(bad)
jg
xchg
lods
cmp
cmps
stos
inc
ja
dec
push
pop
sbb
ret
cmp
(bad)
pop
call
scas
sub
push
fwait
sub
(bad)
test
pop
mov
mov
call
fnstenv
je
xor
pop
arpl
jae
adc
adc
mov
test
add
cmp
or
xor
xchg
jns
sbb
in
ins
sahf
inc
pop
in
and
in
cmps
dec
ja
lock
retf
lods
and
mov
test
movs
nop
loopne
and
jae
cmp
shl
push
inc
or
or
mov
(bad)
in
mov
(bad)
scas
test
xor
test
pop
adc
jmp
xchg
nop
test
lahf
rol
mov
push
icebp
xchg
cs
adc
shr
jl
sub
add
mov
dec
comiss
leave
dec
adc
cmc
and
mov
test
cmp
mov
xchg
clc
(bad)
push
imul
push
sbb
lea
jl
das
jle
cmp
sahf
sub
pop
fidivr
push
jg
rcl
adc
mov
repnz
pop
add
sub
int
int3
adc
inc
ds
dec
sbb
mov
js
sar
pop
pop
(bad)
movs
mov
inc
xchg
or
and
add
repnz
inc
mov
ficomp
das
mov
cmps
movs
or
add
sbb
stos
pusha
mov
add
and
mov
add
push
mov
cmp
mov
and
in
xchg
jne
ror
out
jg
jno
jae
push
mov
into
not
pop
mov
dec
cmp
test
cmp
cmp
sub
outs
push
rcr
fs
pop
es
and
xor
(bad)
hlt
inc
cmp
test
add
sbb
and
jns
jmp
test
sub
lods
and
sbb
scas
adc
shl
loope
adc
data16
outs
movs
cli
aaa
fsub
push
call
aam
cmp
and
neg
loope
xchg
xchg
push
dec
popf
dec
ss
jo
xchg
dec
mov
loop
sbb
iret
mov
jbe
xor
loop
xchg
mov
hlt
cld
out
sub
imul
int
add
mov
push
add
loop
lds
dec
mov
and
lods
lock
in
addr16
das
mov
mov
retf
(bad)
lock
lods
jne
jmp
cmc
and
pop
add
out
aam
jo
jbe
cmps
mov
xor
rcr
xchg
mov
mov
not
add
push
js
out
jmp
push
mov
leave
(bad)
dec
mov
mov
push
or
fadd
data16
idiv
xchg
and
jnp
inc
adc
dec
mov
gs
jns
push
jmp
repnz
mov
jno
leave
jae
lods
mov
mov
xchg
jle
repz
xor
push
cmp
or
out
or
idiv
ret
ror
sub
xchg
sub
ror
or
dec
and
std
dec
test
add
clc
mov
dec
and
(bad)
sbb
sbb
cwde
mov
retf
push
(bad)
out
inc
pop
mov
mov
int
rol
adc
pop
pop
pop
push
enter
and
stos
daa
sti
out
(bad)
mov
add
add
test
inc
fstp
(bad)
lods
push
fmul
xchg
or
adc
mov
(bad)
movs
sahf
xor
retf
inc
aas
in
icebp
jmp
cs
cmps
shl
mov
out
cmp
icebp
out
fwait
xchg
(bad)
sbb
hlt
mov
out
mov
xchg
fbstp
pushf
jmp
sub
mov
sub
jmp
xchg
or
pop
sub
mov
or
ret
sbb
push
jbe
cmp
mov
xor
fsubr
sbb
stos
add
loop
stc
adc
sbb
outs
pop
cli
add
in
fsubr
pusha
or
and
movs
movs
data16
into
and
and
push
daa
sbb
adc
fcmovb
and
sahf
cmp
inc
mov
loop
mov
icebp
cmp
sub
ja
lods
(bad)
out
and
mov
jnp
fldenv
adc
sbb
shr
cmp
push
xlat
mov
or
call
sbb
inc
sbb
out
frstpm(287
xchg
push
jge
pop
mov
int3
push
mov
retf
mov
leave
in
pop
jp
inc
and
sub
(bad)
dec
pop
seto
mov
test
retf
pop
jne
adc
push
rol
call
dec
add
loop
into
xchg
cmp
ret
cmp
sahf
fidivr
xchg
aas
jns
rcr
mov
int
paddusb
mov
mov
pushf
add
stos
in
lods
std
sub
inc
or
mov
mov
gs
and
ds
push
daa
push
push
xor
pushf
jle
(bad)
clc
cmp
clc
rcr
adc
xor
shr
movs
dec
in
or
adc
dec
adc
lods
pop
push
xchg
clc
inc
mov
dec
sub
xchg
fcmovu
xlat
dec
xor
sub
jae
shl
stos
inc
sbb
movs
mov
inc
(bad)
retf
pop
lds
scas
vpsubd
mov
cmp
jnp
call
jmp
push
cmc
push
add
aas
inc
outs
ja
into
xchg
aaa
jle
out
dec
ja
jmp
mov
inc
lahf
lahf
push
call
xor
pop
gs
jmp
fmul
mov
adc
cmp
out
pop
hlt
adc
bound
sub
popa
scas
mov
scas
mov
retf
mov
movs
mov
add
jp
and
and
dec
dec
(bad)
pop
lds
sub
xor
cmps
int3
or
shl
aad
gs
mov
cdq
ss
enter
sub
in
and
dec
cld
jns
out
sub
scas
jge
add
add
and
test
cmp
stc
dec
fsubr
sbb
das
mov
fs
mov
pop
jmp
daa
daa
mov
add
scas
iret
inc
mov
xchg
imul
xchg
push
dec
dec
(bad)
das
adc
push
and
into
sbb
and
cli
push
jne
sub
push
mov
push
lods
out
repnz
xchg
fwait
into
dec
fmul
addr16
js
outs
add
rol
fnstcw
sbb
jae
enter
sbb
dec
dec
pop
pop
jne
dec
cld
mov
sbb
lea
lods
inc
inc
daa
mov
mov
pop
dec
lods
std
xchg
mov
jno
xchg
pushf
ss
dec
jle
mov
adc
push
rol
xor
cmp
popf
xor
adc
sub
push
les
ffree
rcr
sub
fmul
(bad)
aam
add
movs
aam
outs
and
add
xor
pop
hlt
fwait
dec
mov
outs
cld
cmps
dec
loope
push
jo
(bad)
xchg
mov
nop
sbb
(bad)
mov
cmps
fisttp
and
mov
aaa
gs
cmp
push
fdiv
xor
ins
movs
sbb
sub
data16
dec
xchg
cmp
in
xchg
gs
fnstcw
push
test
sbb
rcr
sbb
shr
fimul
aam
popf
retf
in
add
aaa
std
xor
cmp
test
dec
retf
jno
xor
repnz
cmp
xor
mov
mov
bnd
mov
out
ja
test
fiadd
xchg
xchg
les
loopne
mov
movs
adc
cmp
dec
xchg
pop
test
(bad)
sbb
add
or
addr16
pop
sar
push
data16
pop
inc
add
xor
ins
push
mov
push
cwde
out
mov
fcomp
pop
xlat
xchg
pushf
std
loop
sub
mov
cdq
sub
and
xchg
xor
xchg
add
ja
sub
outs
bswap
daa
sbb
xchg
jns
mov
es
fnop
jnp
lods
shl
add
arpl
stos
popf
loopne
push
mov
push
lahf
shr
adc
dec
jge
ror
add
pushf
cwde
cwde
push
std
pop
jg
retf
out
sub
repnz
xor
jae
push
sub
fucomip
cmps
xchg
mov
cwde
xor
stos
cs
sbb
mov
addr16
sub
mov
add
scas
cmp
pop
ds
lods
mov
and
(bad)
inc
fcmovbe
repz
jno
mov
mov
push
repnz
sbb
sbb
mov
sub
frstor
call
push
push
mov
dec
jecxz
xchg
mov
mov
jne
sbb
mov
adc
sub
add
sbb
mov
pop
clc
fwait
push
dec
adc
xor
sar
imul
or
fcomp
mov
or
cli
fisttp
sub
scas
pop
adc
cmp
inc
mov
or
pop
mul
mov
adc
gs
icebp
add
pop
xchg
out
xor
icebp
out
mov
lds
fcom
mov
imul
std
push
jl
or
mov
lock
repnz
and
jecxz
sbb
hlt
and
inc
out
adc
push
out
sub
cs
aam
or
mov
pop
repz
dec
adc
inc
adc
and
pushf
push
jbe
out
sub
cdq
popa
inc
inc
jg
adc
jmp
icebp
jmp
and
add
pushw
ret
js
imul
xchg
mov
(bad)
shr
or
xlat
cmp
outs
mov
ret
loop
movs
dec
dec
cdq
jns
jo
pop
mov
lods
clc
inc
add
je
enter
jbe
mov
es
jbe
add
int
add
fmul
bnd
loope
test
jbe
jns
movs
rcl
inc
sub
mov
mov
or
jecxz
push
pop
les
pop
cs
(bad)
mov
movs
xchg
jae
adc
adc
mov
xchg
cli
jge
mov
fcmovu
add
pusha
sbb
jg
xchg
mov
data16
push
add
mov
xchg
call
aad
sub
push
sar
push
retf
cmp
mov
mov
cmp
sbb
sahf
jnp
and
push
rcl
mov
inc
mov
mov
outs
pop
lods
xchg
(bad)
push
rcl
push
iret
jmp
loope
mov
and
retf
test
imul
sub
inc
push
lea
push
xor
(bad)
and
movsx
std
adc
popa
ret
or
cmp
lods
nop
xor
pop
mov
mov
out
adc
sbb
aas
in
xor
test
push
fimul
xchg
adc
sub
dec
xchg
inc
and
dec
daa
or
(bad)
xlat
lea
dec
dec
push
cs
add
cmc
cdq
test
cmps
enter
jmp
pop
push
fs
into
mov
fmul
ret
xchg
jecxz
test
cmps
inc
stos
push
push
nop
iret
out
mov
sub
icebp
ds
mov
mov
cmp
jle
fld
push
cmps
cmp
(bad)
test
gs
aad
pop
mov
popf
cmps
adc
lods
jns
cwde
add
push
pop
mov
(bad)
dec
fimul
mov
add
push
mov
push
sub
mov
je
mov
repz
inc
xor
iret
arpl
out
adc
push
inc
popa
push
aas
jo
jl
mov
and
lds
repz
(bad)
sub
shl
outs
in
lahf
lock
and
lods
mov
jbe
cmp
shl
data16
add
add
push
rcr
scas
addr16
and
and
scas
pop
adc
sar
test
sbb
xchg
jmp
mov
int
cmp
ja
xchg
fiadd
pushf
out
ret
lock
rcl
in
inc
and
rcr
cmp
xor
mov
or
out
clc
push
adc
mov
jnp
test
lds
es
xor
and
pop
(bad)
movs
cmp
dec
add
dec
cmp
dec
jb
push
push
je
mov
mov
mov
mov
out
mov
aaa
inc
jne
jmp
and
dec
or
xchg
mov
pop
pop
sub
je
movs
out
xchg
ins
add
xor
cmc
add
imul
sub
mov
cs
jmp
xchg
sbb
and
adc
xor
mov
mov
jge
mov
pop
push
mov
int
fwait
imul
cli
fisttp
pop
mov
sbb
mov
iret
add
xchg
jns
jne
add
and
aas
pushf
int
sub
in
xchg
sahf
cdq
popf
or
cmps
xor
inc
ret
nop
fnstsw
jns
fsub
nop
lock
xchg
hlt
cmp
xor
sub
in
cdq
mov
lea
add
pop
imul
lods
mov
mov
cwde
cmp
std
mov
sub
call
pop
cmp
and
cmp
data16
movs
ret
inc
adc
add
push
call
lea
pop
mov
xor
mov
push
xchg
ja
loopne
dec
dec
out
add
sub
or
cmp
dec
pop
cwde
adc
jo
add
ret
jp
fcom
aas
or
mov
or
arpl
mov
or
loopne
xor
dec
lods
adc
add
lahf
xor
pop
adc
cmp
jg
pop
repz
mov
jp
sbb
(bad)
pop
out
push
mov
cmp
xchg
sub
adc
dec
ins
nop
xor
xchg
xchg
jmp
sbb
aad
jns
jbe
jle
cs
pop
inc
or
mov
mov
mov
unpckhps
shl
inc
daa
iret
addr16
jg
bound
push
add
mov
test
pop
in
cdq
mov
cmp
inc
leave
mov
inc
movs
les
add
cmp
pushw
js
pop
sbb
loope
jl
lahf
test
jno
jle
mov
retf
out
inc
mov
mov
ja
mov
das
cmps
sbb
sahf
inc
pusha
jl
inc
lods
lods
retf
cmp
int
adc
test
rcl
mov
jmp
int3
in
in
imul
movs
pop
push
neg
sbb
dec
ss
hlt
ins
add
push
shl
pop
adc
ret
push
pusha
jae
or
pop
add
sahf
add
push
sbb
xor
scas
mov
js
pop
jbe
shl
xor
pop
mov
repnz
sbb
dec
dec
push
mov
dec
dec
and
xor
pushf
(bad)
outs
fs
pusha
and
jno
adc
pop
cmp
daa
dec
test
loope
neg
call
mov
stos
dec
(bad)
retf
scas
jb
add
and
ins
loop
lods
nop
lods
mov
movs
sub
or
xor
xchg
dec
rcl
lahf
aas
neg
ins
jns
ficomp
imul
rcl
cs
add
loope
sbb
sar
pop
gs
popf
(bad)
loopne
ret
(bad)
hlt
dec
push
adc
nop
fidivr
shl
sub
pop
pop
scas
jmp
(bad)
arpl
jmp
sbb
xor
pop
mov
dec
test
movs
gs
sar
stc
movs
inc
xchg
retf
cmps
bound
in
ret
and
arpl
add
test
xor
(bad)
out
sub
in
mov
es
push
mov
jp
add
mov
or
test
or
fisttp
mov
ds
imul
jb
movs
rcl
mov
jns
cmps
cli
add
jg
mov
push
mov
in
or
mov
xchg
push
lods
arpl
fnstenv
cwde
adc
adc
cmps
cmp
jl
dec
scas
(bad)
ficom
xor
and
aas
loope
fbstp
cwde
xor
or
add
out
sbb
inc
add
mov
mov
mov
pop
outs
and
jp
xor
aaa
mov
dec
sbb
sub
or
xchg
push
aas
sbb
adc
(bad)
and
pop
xor
in
in
test
popf
imul
out
jmp
rol
and
inc
imul
out
fs
or
cwde
fwait
cmp
lahf
std
cmps
call
imul
sub
xchg
push
pop
push
lods
gs
std
mov
cmp
shr
push
iret
ffreep
ds
jecxz
into
dec
add
stc
fsubrp
mov
sub
jecxz
test
enter
mov
cli
adc
sub
popf
aas
leave
int
jno
(bad)
jmp
sbb
pusha
adc
or
mov
xchg
ds
call
xchg
stc
and
mov
jae
test
lea
int3
iret
dec
scas
mov
into
scas
mov
mov
xchg
in
fs
fnstcw
movs
ficom
jge
xor
mov
ja
ret
aas
adc
lea
sar
mov
mov
add
imul
mov
jg
mov
je
mov
fs
aam
jne
pop
arpl
cmp
sbb
sbb
push
mov
push
push
mov
(bad)
add
add
lods
dec
inc
inc
loope
movs
add
call
ret
stos
xchg
lea
cmps
(bad)
in
daa
and
pop
out
nop
inc
mov
leave
popf
cmp
and
xor
mov
arpl
lods
bound
jp
jg
cmp
pushf
jp
fisttp
fwait
jnp
leave
and
and
(bad)
cmc
fcmovbe
inc
mov
popa
(bad)
cmp
and
(bad)
xor
stc
cwde
pop
pop
push
mov
pop
rcr
cmc
push
int3
sub
adc
nop
jo
sbb
xchg
(bad)
jmp
xchg
mov
sub
rcl
cli
cmp
xor
retf
popf
xlat
cmp
gs
mov
jle
repz
mov
inc
fs
sbb
cmp
jl
mov
lea
or
xor
or
sub
fsub
enter
mov
jo
sbb
jns
jmp
aam
or
cmps
dec
inc
dec
add
(bad)
rol
lods
xor
sbb
ret
sub
xor
or
mov
(bad)
push
sar
sub
push
clc
popa
adc
test
or
jmp
retf
dec
and
fld
mov
(bad)
arpl
std
lods
nop
inc
cmp
xlat
or
pop
pop
repz
imul
shl
xchg
xchg
xlat
or
(bad)
mov
pop
mov
jae
ja
sbb
sub
stc
sub
sar
push
scas
xor
jae
stc
or
xchg
std
fdivr
add
xchg
(bad)
or
pop
icebp
mov
push
div
mov
xor
das
mov
dec
dec
push
(bad)
out
imul
sub
lock
xchg
sbb
shl
aas
(bad)
bound
sbb
es
sti
daa
inc
mov
jecxz
aad
ror
mov
add
inc
sub
mov
retf
add
popf
mov
fisttp
mov
lds
cld
clc
test
data16
mov
popa
outs
and
retf
push
jnp
arpl
test
test
mov
in
mov
sbb
cmps
lea
lds
seta
jmp
js
loop
into
js
jmp
add
and
dec
xor
or
jae
mov
inc
cli
(bad)
jmp
(bad)
mov
ja
inc
mov
loop
inc
mov
aad
int
jae
sbb
cmp
int
xor
mov
jle
and
push
test
shl
(bad)
les
mov
daa
push
aad
pop
cmc
aam
inc
scas
mov
nop
jns
js
cdq
or
or
inc
lahf
daa
imul
pop
or
(bad)
sub
js
jge
pop
(bad)
mov
test
jecxz
lods
leave
push
add
dec
out
ficomp
adc
(bad)
push
mov
jo
push
test
in
dec
pop
aad
icebp
mov
repnz
test
sub
mov
movs
sbb
fndisi(8087
clc
aam
jo
out
mov
and
sub
jb
out
aas
pop
popa
inc
mov
xor
test
out
jecxz
jmp
pop
cwde
or
jecxz
xor
mov
sub
addr16
mov
sbb
cld
mov
jle
adc
mov
mov
or
movs
ret
clc
sbb
(bad)
adc
lods
inc
sub
fistp
xchg
dec
aam
xor
mov
sub
out
in
mov
add
pop
jb
inc
cmp
mov
xchg
mov
in
mov
(bad)
cmp
sub
xchg
xchg
pop
push
out
leave
cmp
in
adc
popa
push
lock
std
mov
add
clc
jne
dec
push
rcr
mov
jmp
test
and
jg
mov
fs
cmps
out
xchg
mov
sbb
jl
push
loop
dec
jmp
aad
int
retf
push
shl
xchg
jle
mov
add
adc
cmp
jle
loop
in
jne
jmp
imul
xchg
xor
add
cmp
retf
push
clc
in
lods
aaa
xchg
imul
xchg
mov
jmp
xchg
cmp
sbb
and
jne
cmc
and
lods
and
movs
sbb
cmp
push
js
push
jo
inc
dec
aaa
dec
add
inc
fcmovnbe
mov
dec
sbb
gs
push
cmp
ds
sbb
push
jnp
fcom
(bad)
daa
sbb
cmc
or
jmp
dec
movs
and
pusha
lds
test
adc
cmp
imul
adc
mov
xor
xor
jb
xor
jmp
sub
out
nop
sbb
pop
stos
je
mov
(bad)
leave
xrelease
xlat
mov
mov
xchg
add
mov
data16
cmps
jb
xchg
inc
mov
sub
enter
lock
outs
jb
cmps
outs
rcr
retf
enter
clc
fwait
jmp
add
pop
(bad)
fistp
sbb
dec
nop
int3
lock
and
push
dec
pop
fsubr
mov
mov
cmps
jmp
in
add
mov
xor
push
pop
cwde
mov
xchg
gs
ret
fucomi
mov
jno
mov
adc
daa
outs
enter
test
pop
adc
ds
pop
es
or
xchg
push
cmps
test
sti
pushf
loop
mov
pop
lds
cmps
adc
(bad)
mov
xlat
dec
adc
int
mov
dec
pop
adc
dec
pop
jl
mov
xor
retf
stos
cli
das
pop
dec
jae
pop
inc
cmp
mov
(bad)
or
or
push
sub
sbb
clc
push
lds
outs
dec
lods
into
(bad)
ins
out
imul
retf
mov
xchg
(bad)
push
mov
sbb
(bad)
jmp
jnp
add
lahf
pop
mov
mov
je
mov
or
fild
fs
push
xchg
stos
xchg
mov
sbb
scas
bnd
repnz
clc
dec
cs
cmp
cmps
hlt
mov
sbb
int
pop
cmp
loop
cwde
sbb
cli
in
mov
ins
or
cmc
arpl
push
daa
movs
js
icebp
pop
dec
or
pushf
inc
scas
ret
scas
mov
adc
jnp
movs
into
loop
jge
in
sbb
mov
imul
cmp
push
out
sti
mov
xor
movs
xchg
mov
lods
dec
cmp
xchg
fisttp
sub
cmc
xchg
aad
pusha
dec
sar
out
push
or
pop
imul
pop
add
push
retf
pop
jle
call
sbb
push
push
xor
jns
stos
inc
je
ficomp
push
sahf
rcr
sbb
jmp
sub
stc
sub
(bad)
test
xchg
push
or
xor
sub
scas
or
adc
push
(bad)
cmp
mov
popa
xor
push
mov
stc
rcr
dec
jle
and
les
mov
shl
mov
movs
cmp
shl
cmps
xor
js
sti
jns
js
cmps
hlt
outs
call
push
push
push
xor
xor
adc
test
mov
les
push
movs
push
add
stos
je
in
loope
adc
sub
fcom
sub
stc
or
imul
inc
or
(bad)
data16
loope
sub
mov
xchg
pop
jne
xor
outs
lods
test
and
test
cmps
das
ficomp
clc
retf
jnp
sbb
mov
jns
mov
call
sub
nop
jle
jnp
cmp
cmp
cmp
mov
stos
sub
dec
pop
pop
mov
loop
mov
xor
mov
call
in
jno
jns
xor
add
es
mov
outs
loop
bound
xchg
call
ins
lds
aaa
mov
mov
inc
pusha
arpl
inc
retf
push
pop
lods
fadd
cli
cmp
sub
mov
push
(bad)
xchg
add
outs
outs
in
dec
and
lods
jno
and
pop
popa
mov
cwde
std
mov
sbb
movzx
push
jns
mov
div
lahf
shl
push
mov
cmp
or
mov
and
std
xor
sub
mov
loopne
sub
scas
(bad)
pop
pop
inc
xor
shl
jo
dec
fisubr
push
sti
popf
jle
sub
push
ss
ins
mov
loop
jle
pop
data16
hlt
or
sbb
dec
dec
dec
mov
push
lock
add
mov
pop
dec
xor
adc
fcmovbe
xchg
jp
ins
and
jns
jmp
dec
int
dec
mov
mov
addr16
in
mov
icebp
and
jmp
push
mov
sub
rol
aad
out
xlat
inc
fstp
in
sub
les
xor
shl
mov
push
pop
retf
sbb
(bad)
and
loop
and
inc
jge
(bad)
xchg
imul
mov
movs
imul
xchg
cwde
(bad)
cwde
fs
jmp
and
sar
pop
out
mov
pop
jo
out
stos
imul
jp
inc
aad
les
dec
aas
cdq
aaa
pop
lea
inc
cmp
movs
mov
jbe
or
mov
outs
xchg
mov
xor
pop
fidivr
pop
cli
cld
ins
fmulp
and
xor
fiadd
xor
push
daa
mov
sbb
xchg
or
xchg
cmps
inc
mov
arpl
arpl
push
pop
ror
xchg
pop
mov
ret
mov
aaa
icebp
push
or
stc
push
push
inc
jmp
jle
div
push
scas
push
pop
fldcw
add
into
dec
mov
adc
add
(bad)
jp
xor
lods
sub
jl
frstor
aas
dec
xor
outs
imul
fwait
xchg
in
push
mov
add
pxor
adc
jbe
outs
shr
test
jo
xor
sbb
xchg
mov
ror
and
push
rol
mov
fist
mov
adc
add
push
adc
std
repnz
push
xchg
xor
sbb
int
lahf
das
retf
mov
pop
mov
outs
xchg
push
lahf
mov
mov
rcr
xor
cld
test
es
int3
test
xor
adc
inc
fadd
push
pop
dec
ja
ds
cmps
in
mov
mov
ja
not
cmc
sti
lock
mov
cmps
or
push
xchg
pop
mov
xor
dec
gs
xchg
sbb
push
adc
jns
int
adc
fs
pop
scas
cwde
cld
aam
jo
sub
pop
add
cdq
jge
(bad)
(bad)
ins
pop
je
icebp
adc
inc
inc
mov
enter
mov
push
icebp
push
mov
stc
popa
jnp
aaa
lds
pop
(bad)
scas
xchg
add
(bad)
jle
add
les
repz
fild
mov
lds
stos
or
(bad)
movs
pop
cdq
pop
adc
lock
xlat
out
in
dec
fnstcw
bound
xchg
shl
(bad)
dec
pop
mov
jmp
and
fmul
and
nop
xor
mov
bound
pop
mov
mov
out
data16
mov
mov
xchg
repz
dec
pop
xchg
out
adc
cmp
scas
call
and
lea
mov
add
out
or
push
sub
stos
test
pop
loop
add
xchg
push
sub
ins
je
gs
mov
xlat
jp
call
add
jecxz
sub
dec
(bad)
dec
pop
pop
xchg
sbb
push
xchg
jns
lahf
ffreep
dec
test
in
popf
push
or
gs
(bad)
test
push
or
gs
in
(bad)
shl
mov
jmp
es
sahf
or
mov
push
cmovs
(bad)
pop
jnp
pop
jl
sbb
mov
mov
fldenv
or
(bad)
jne
jbe
idiv
adc
test
inc
addr16
ja
and
call
mov
loope
push
mov
inc
hlt
ficomp
lahf
fwait
xor
jae
test
and
arpl
xchg
stos
mov
mov
cmp
mov
retf
(bad)
mov
cmp
(bad)
(bad)
arpl
retf
adc
xchg
mov
das
or
dec
stc
mov
movs
adc
sub
cmp
mov
and
add
xchg
outs
push
mov
inc
icebp
sub
cmp
mov
call
jp
xchg
cmp
xchg
push
sahf
imul
sahf
mov
dec
adc
sub
dec
sahf
call
lods
popa
retf
ins
cmp
jmp
and
fild
aad
inc
jmp
sbb
cmp
outs
push
daa
pop
mov
stos
pop
int
pop
imul
nop
bound
arpl
pop
jge
and
cmps
lods
stos
aaa
pop
scas
ror
jg
inc
push
xchg
fs
add
ins
fisubr
(bad)
push
in
sahf
inc
and
mov
icebp
inc
mov
push
sub
mov
retf
mov
mov
ins
jb
jmp
ins
inc
push
inc
sub
inc
(bad)
in
cdq
dec
jb
cmp
dec
fcmovb
and
xor
xchg
ret
inc
js
jmp
mov
das
adc
mov
pop
push
jl
pop
xchg
sub
add
add
movs
js
xchg
div
lds
clc
jns
repnz
mov
mov
dec
pop
cmp
les
push
out
shl
dec
inc
mov
add
sahf
jbe
(bad)
movs
mov
ret
adc
(bad)
pop
pusha
dec
push
stc
push
xlat
cmp
add
gs
mov
aaa
inc
into
into
add
out
adc
mov
mov
xchg
int
mov
mov
loopne
jmp
jle
out
lahf
aaa
adc
adc
inc
clc
lods
xor
mov
mov
fistp
and
push
pop
fild
and
mov
aam
dec
jb
sbb
(bad)
fst
inc
ins
inc
jbe
jle
xor
or
pop
lea
xor
retf
cmp
pop
hlt
inc
addr16
aam
aad
pop
int
icebp
jecxz
xor
loop
mov
imul
xor
pop
in
push
cmp
or
mov
loop
fldenv
fmul
dec
retf
clc
jge
push
dec
mov
xlat
dec
mov
mov
loope
mov
repnz
fld
jbe
or
dec
sbb
leave
(bad)
pop
push
js
stos
inc
repnz
leave
mov
ds
or
pop
or
ss
cld
(bad)
xor
sub
movs
adc
jmp
add
sbb
xchg
sbb
ret
pop
shl
mov
mov
mov
clc
(bad)
push
test
jge
ss
cs
loop
xor
pop
mov
ret
push
sub
pop
jl
aam
mov
aas
fidivr
not
mov
shl
stc
test
stc
cmp
or
test
test
xchg
idiv
leave
out
dec
mov
aad
je
gs
push
repz
cmp
dec
fld
or
push
ret
ins
and
movs
test
or
imul
jecxz
lds
loopne
mov
sub
sbb
aaa
xor
cmps
mov
jnp
xlat
pop
mov
dec
or
imul
das
sub
iret
not
repz
out
dec
add
mov
iret
ss
mov
inc
out
js
pusha
popa
(bad)
xor
push
fadd
xlat
and
gs
dec
cld
cmp
mov
adc
push
push
add
push
lahf
das
sub
sub
dec
mov
(bad)
xchg
push
xlat
push
mov
in
add
and
cmps
lods
loop
adc
and
pop
xor
mov
cwde
mov
mov
mov
gs
xor
add
mov
sbb
jbe
xchg
ret
cmp
fldenv
mov
sub
cli
hlt
int3
add
fldz
cmp
jno
cmp
into
mov
fs
sub
jecxz
cmp
fidiv
xchg
lods
mov
(bad)
sti
pop
xor
sub
fwait
in
add
(bad)
dec
(bad)
stc
and
and
cld
xchg
pop
mov
mov
or
inc
test
inc
shl
cmc
xor
popf
out
hlt
shr
repnz
push
xchg
in
sub
adc
adc
das
retf
mov
xor
push
or
outs
arpl
inc
mov
ror
test
test
sbb
jbe
test
call
sahf
js
jmp
pusha
aam
(bad)
sbb
pushf
xchg
mov
lods
inc
or
enter
push
pop
adc
(bad)
int
push
stos
xchg
xchg
adc
cmp
mov
or
push
aaa
mov
hlt
dec
push
mov
popa
xor
outs
xlat
jnp
mov
ja
push
pop
int
jne
adc
sbb
xchg
dec
dec
add
ins
mov
(bad)
sbb
push
sti
mov
xchg
push
pop
mov
push
dec
jne
aas
repz
push
or
retf
mov
xor
mov
push
hlt
mov
jns
into
test
and
aaa
sub
and
cmp
loop
mov
sar
ins
std
mov
fcmovnbe
jg
cmp
xchg
pop
(bad)
out
nop
sub
or
mov
call
outs
out
pop
cmp
iret
mul
jecxz
inc
pop
cwde
mov
mov
in
sub
mov
jb
jae
fwait
xchg
inc
xor
fsub
sar
mov
sbb
or
or
test
sub
mov
les
sbb
scas
jo
jecxz
out
jo
push
mov
popa
lods
dec
jnp
mov
clc
pop
push
and
sbb
popa
adc
lea
jno
mov
pop
sbb
mov
sahf
inc
push
mov
(bad)
clc
pop
loope
(bad)
mov
pop
scas
leave
xor
push
jnp
jmp
sub
dec
nop
into
sar
ret
gs
jmp
dec
sbb
sub
loopne
xchg
ret
push
jne
shl
add
mov
pop
cmc
stos
test
push
add
inc
push
aas
add
int3
lods
lahf
pop
rcl
loopne
movs
ins
and
mov
ror
sbb
inc
repnz
mov
push
xchg
stos
mov
shr
test
or
cwde
adc
mov
(bad)
xor
in
pop
les
je
out
aam
sti
fiadd
iret
pop
xchg
cmp
mov
mov
lock
jg
mov
jp
call
jmp
adc
inc
sti
cmps
js
pop
pop
ret
pop
jmp
cli
add
jb
out
out
push
mov
dec
sar
out
inc
ret
sub
inc
lods
into
ins
xor
mov
rcl
dec
(bad)
cmp
fld
das
sbb
pushf
cmp
xchg
cld
add
add
pop
nop
inc
loope
pop
jbe
mov
sub
sbb
inc
push
stc
out
enter
sub
into
jecxz
sbb
push
scas
add
mov
imul
test
popa
dec
inc
cmp
lea
bound
or
stos
mov
mov
lock
sbb
ret
inc
lgs
test
inc
mov
add
mov
inc
ror
inc
xchg
jle
cmps
inc
mov
std
pop
mov
lock
call
sub
cmp
and
sub
idiv
pop
add
mov
(bad)
mov
fild
int3
outs
sahf
pop
rcr
sub
adc
rol
cdq
xor
push
in
imul
push
or
inc
aad
ficom
lods
neg
adc
cmp
iret
test
mov
sbb
xlat
and
nop
add
ss
int
setb
jg
lock
test
pop
xchg
adc
pop
mov
sbb
mov
dec
fcmovbe
push
repnz
hlt
and
fist
test
add
mov
ins
pop
or
or
inc
cmps
mov
jbe
and
xchg
cli
les
cdq
jmp
dec
jg
cmps
leave
mov
fwait
pop
scas
leave
or
into
cmps
inc
shr
jae
sub
popf
jne
lods
sub
mov
add
mov
or
sbb
adc
inc
cmp
aad
push
jb
jae
jg
adc
out
test
ret
and
jge
xchg
loope
jecxz
mov
xor
aam
das
lods
leave
mov
call
out
adc
sbb
cmp
adc
xadd
push
lock
fld
in
adc
xchg
test
jo
jp
lahf
push
test
call
(bad)
xor
inc
fiadd
dec
rcr
mov
cmp
sbb
fild
cli
mov
push
adc
fcomp
inc
lds
jb
fisubr
mov
or
push
mov
inc
inc
adc
mov
dec
out
clc
imul
pop
mov
nop
jp
add
cmp
cmc
jmp
dec
stos
jo
inc
mov
fnsave
int
mov
daa
movs
lds
jne
mov
in
mov
int3
shr
xchg
retf
sub
pop
loope
pop
mov
test
and
ja
xlat
cli
dec
xchg
ins
add
adc
mov
pushf
outs
repz
sbb
mul
adc
mov
out
imul
aad
mov
fsub
stc
push
sub
add
push
popa
mov
cwde
mov
imul
xchg
add
mov
xchg
push
push
push
mov
sbb
or
jns
stc
jae
repnz
pop
sub
xchg
movs
pusha
out
pop
fnstsw
mov
pop
scas
aam
fsubr
shr
mov
lods
dec
and
adc
xlat
mov
scas
mov
push
xor
mov
call
jo
jns
dec
test
sbb
fidivr
push
cmp
psubusw
cmps
hlt
inc
outs
jbe
ins
js
aad
mov
pusha
jecxz
aas
hlt
mov
and
in
push
dec
inc
pop
lods
stc
es
or
les
push
jle
pop
cmp
xor
stos
sbb
push
in
sbb
jb
rol
xor
xor
call
cmp
aad
sti
mov
aam
retf
or
into
cdq
adc
mov
pop
aad
fdivr
sub
sbb
and
pop
into
bound
xchg
ret
rdpmc
lods
and
jmp
mov
push
aad
aad
inc
sbb
rep
xor
inc
out
jns
retf
daa
cmp
addr16
jg
pop
mov
pop
cmp
or
cs
stc
enter
xor
xor
dec
lods
mov
out
and
call
push
dec
add
(bad)
sub
in
mov
xor
cld
mov
fisub
das
mov
push
test
shl
inc
outs
sub
jnp
adc
or
pop
repnz
jo
inc
shr
in
adc
inc
rcr
mov
fbstp
pop
sbb
xor
cli
rcr
push
sub
push
hlt
xchg
xor
movs
mov
pop
fsub
into
loopne
aad
movs
scas
sbb
sub
addr16
das
leave
aaa
xchg
mov
add
pop
and
out
out
adc
mov
fst
ins
jmp
inc
xchg
xchg
sbb
jg
dec
sub
jge
pop
dec
(bad)
mov
fcomp
xchg
imul
sub
repnz
mov
dec
sar
dec
mov
cld
fsub
call
mov
push
adc
aaa
jle
jmp
adc
neg
mov
retf
shl
add
(bad)
int
and
push
ds
pusha
sub
stos
xchg
sbb
inc
fimul
adc
jmp
call
sahf
pusha
mov
mov
mov
xchg
mov
dec
mov
add
ret
pop
cmc
xor
push
mov
arpl
lods
sub
popf
jmp
mov
adc
pop
cmps
pop
clc
mov
pop
sub
data16
das
or
mov
lods
push
addr16
rcr
jmp
stos
add
cmc
push
iret
popa
loop
retf
outs
adc
aam
lods
daa
hlt
or
jge
(bad)
pop
sub
inc
or
jnp
jecxz
xchg
(bad)
jmp
push
fdivp
retf
(bad)
or
jmpw
mov
pop
jne
ret
test
lock
daa
imul
push
inc
push
pop
std
(bad)
dec
adc
mov
repnz
jnp
cmps
push
sbb
jne
pushf
cmc
push
arpl
cmp
dec
adc
push
xchg
scas
lock
mov
icebp
xchg
xchg
xchg
fdiv
and
push
lods
ds
shr
sbb
push
test
inc
dec
pop
sti
jb
cdq
div
fucompp
ins
add
cmps
push
rol
mov
in
push
aam
add
dec
shl
leave
mov
adc
dec
test
xlat
mov
cli
je
fadd
in
sbb
mov
ficomp
dec
repnz
adc
push
sbb
pop
sahf
data16
std
jns
xor
push
ret
cmp
jae
cs
xchg
das
cmp
in
loope
out
dec
push
ficom
sahf
clc
popa
mov
imul
push
xor
xor
push
mov
add
sub
mov
mov
xchg
cmp
leave
fstp
pop
aam
pop
xor
ror
adc
dec
ja
sub
cs
lahf
out
mov
mov
icebp
in
xchg
cmovg
jnp
jno
dec
ror
outs
push
(bad)
mov
inc
jns
xchg
pop
push
cmp
sbb
fisttp
clc
mov
scas
sub
push
gs
mov
mov
in
push
cdq
shr
rcr
loop
mov
dec
pop
mov
push
aad
mov
hlt
or
inc
add
jmp
in
sub
push
cmp
cmp
stos
ror
jnp
jo
mov
mov
add
xor
rcr
cld
imul
into
xor
sub
pop
or
retf
outs
cmc
aam
add
call
add
retf
retf
(bad)
cdq
shl
sbb
sub
sahf
pop
mov
out
outs
or
or
mov
gs
bound
sbb
or
pop
mov
ds
call
popa
or
push
ja
pushf
sbb
movs
sub
popa
out
dec
rcl
jne
cwde
jne
push
lds
push
(bad)
pop
jnp
loope
pop
jmp
movs
sub
rol
nop
add
pop
outs
cmps
xor
jo
stos
ins
pop
jmp
retf
icebp
and
push
adc
ret
mov
and
int
xchg
ret
lea
push
mov
xchg
xor
test
and
push
adc
or
fs
lea
jmp
cmp
shr
jge
and
push
dec
bound
pop
pop
inc
(bad)
xor
xor
stc
mov
or
into
mov
sub
in
ins
cmps
jmp
ja
or
mov
or
push
or
hlt
jbe
sahf
(bad)
ror
loopne
(bad)
mov
fld
inc
push
ds
xchg
sub
movs
jne
or
std
clc
xor
mov
icebp
loope
push
adc
push
and
cmpxchg
cmp
pop
bound
pop
gs
cmp
xor
test
push
xchg
lds
mov
out
pop
mov
out
and
pop
xor
cld
or
fadd
or
dec
int
inc
mov
xor
push
(bad)
cli
sbb
not
int
push
lock
dec
pop
sub
out
mov
cwde
imul
stos
imul
push
arpl
neg
sbb
add
rol
daa
rol
push
inc
enter
mov
imul
int3
mov
cwde
mov
sbb
lds
lods
and
out
jb
mov
sub
sub
stc
sub
inc
sub
out
clc
es
or
inc
sbb
mov
xor
retf
pusha
push
xor
mul
xor
fsubrp
and
mov
cmp
aaa
es
ret
mov
(bad)
push
dec
sub
icebp
xchg
cs
fwait
mov
clc
or
mov
xchg
xchg
scas
cmp
retf
cli
aas
dec
jo
dec
das
or
xor
jecxz
cmp
sahf
jno
push
push
sbb
call
and
xchg
int3
xor
lods
push
pop
push
aas
mov
imul
mov
push
(bad)
xchg
data16
mov
lods
jl
fisttp
and
lods
push
mov
adc
fbld
in
movs
push
popa
push
repnz
push
sar
ficom
shl
not
in
sub
pop
sbb
iret
push
cmps
or
imul
retf
jmp
retf
mov
cmp
mov
cmp
cmp
add
add
cmps
clc
pop
aaa
sti
(bad)
cs
(bad)
mov
or
mov
pop
xchg
cwde
xchg
xor
mov
sbb
aad
xchg
pop
inc
das
pop
retf
push
push
lods
pop
pop
add
je
out
adc
xor
(bad)
sti
mov
outs
jo
clc
je
and
gs
xchg
fs
fiadd
cmps
pop
add
mov
mov
adc
dec
mov
aas
xchg
mov
je
cs
lods
pop
sahf
jge
mov
cvttps2pi
cmps
add
adc
ffreep
or
imul
popa
repz
adc
inc
stos
xchg
adc
adc
mov
inc
cdq
mov
cld
jno
or
(bad)
ds
mov
xor
inc
mov
imul
shl
outs
repz
push
(bad)
cmc
(bad)
into
sbb
jnp
jg
jp
outs
gs
int3
test
dec
jno
fnsave
retf
xchg
in
jmp
mov
mov
sbb
sbb
hlt
adc
and
sub
jmp
data16
xor
mov
out
jp
or
xor
shl
(bad)
push
inc
pusha
pop
das
jp
and
shl
(bad)
(bad)
lahf
mov
(bad)
adc
sub
mov
test
lock
pop
int
mov
xchg
inc
das
idiv
add
sahf
ds
adc
jmp
push
cmps
pop
popf
ds
cmp
xor
push
je
rcl
pop
jae
ret
in
inc
pusha
jb
xchg
or
cmp
jmp
aas
popa
push
cld
adc
mov
jae
xchg
push
mov
lods
pop
mov
inc
xor
stos
jmp
call
clc
es
cli
lahf
call
ficom
cmp
xchg
and
shl
test
mov
scas
cmp
or
mov
sub
xor
mov
imul
call
cmc
mov
pop
ja
xor
dec
icebp
or
add
fwait
out
xchg
(bad)
aad
pop
mov
push
push
inc
leave
or
dec
dec
mov
mov
cmp
cld
in
sub
sti
repnz
jmp
jmp
cs
sub
jne
sub
iret
jb
cmps
(bad)
dec
(bad)
shl
pop
loopne
and
push
mov
or
bound
push
rcl
fld
mov
cdq
repnz
aam
add
ins
mov
ins
(bad)
sbb
jnp
mov
push
cmp
inc
pop
mov
jecxz
sti
dec
ror
push
pop
cmp
mov
ins
pushf
mov
sub
xor
xchg
lock
call
cld
sub
push
add
stos
mov
cmp
loop
in
cmc
inc
movs
mov
mov
test
sbb
in
push
sbb
adc
std
push
scas
sbb
in
sbb
leave
retf
pop
shr
loope
mov
sahf
push
sub
pop
ficomp
enter
cmp
fisttp
jbe
add
enter
test
rol
dec
mov
jecxz
cwde
ficomp
test
test
xlat
test
xor
cdq
test
dec
jmp
ins
add
rol
clc
mov
add
ss
out
(bad)
jmp
in
add
mov
(bad)
push
add
jne
or
cmp
add
fdivr
mov
sbb
cmps
and
frstor
jecxz
dec
sbb
xor
out
aad
ds
(bad)
fmul
push
push
fidivr
leave
inc
lahf
in
mov
stc
inc
sub
sub
jmp
imul
clc
shl
retf
test
repnz
hlt
clc
test
mov
dec
in
lods
jg
pop
stos
(bad)
dec
inc
add
(bad)
test
push
mov
cmp
hlt
pop
ret
cwde
mov
push
add
adc
push
pop
jmp
xor
jb
push
sbb
rol
dec
cmc
or
sahf
shl
sahf
push
mov
add
or
add
ins
dec
repz
ins
push
ins
add
and
ins
inc
sbb
sahf
mov
mov
fsub
dec
push
cmc
push
int3
dec
push
and
iret
hlt
inc
cwde
push
pop
sub
mov
cmp
fidiv
xchg
mov
or
and
fadd
(bad)
mov
fldz
adc
push
pusha
test
mov
adc
mov
mov
or
inc
sub
jl
cmp
ds
punpckhwd
pop
xlat
xor
inc
and
scas
sbb
pop
pop
in
mov
mov
cmc
pop
mov
mov
dec
add
neg
loop
cmc
xlat
push
stc
cmp
or
in
mov
inc
imul
mov
cmp
mov
scas
mul
ret
and
push
and
arpl
cmps
pop
out
jnp
inc
mov
sbb
xchg
sbb
jecxz
pop
das
add
clc
mov
ds
mov
in
(bad)
mov
outs
popa
pop
jnp
icebp
inc
loope
aaa
add
dec
xlat
jge
or
sbb
jp
and
cwde
cmc
add
js
jl
pop
int3
scas
test
adc
movs
pop
sub
call
mov
call
sbb
fstp
adc
pop
add
dec
adc
jmp
sbb
xchg
pop
popa
mov
or
loope
jno
mov
dec
push
mov
inc
retf
cli
adc
pop
xchg
push
das
(bad)
jg
cmps
scas
xchg
loopne
ja
test
mov
std
xchg
mov
test
sbb
sahf
jg
inc
adc
xor
movs
(bad)
jle
sub
or
retf
cmp
out
loop
outs
jbe
and
(bad)
xlat
xchg
cmp
mov
xor
in
xchg
cwde
sbb
sub
sbb
jbe
mov
push
out
stc
sbb
add
cmp
test
jb
addr16
inc
int3
in
cld
mov
inc
and
xor
pop
(bad)
movs
push
push
sub
cmp
jnp
xchg
sbb
xchg
cs
push
xor
xlat
aaa
and
test
inc
fstp
icebp
cld
fist
inc
and
cli
mov
xchg
out
pop
adc
mov
xlat
jmp
xor
mov
(bad)
outs
add
aaa
inc
data16
sbb
sbb
cmp
or
(bad)
sub
call
push
mov
jp
pop
dec
fimul
push
jo
mov
call
dec
mov
test
outs
mov
outs
jb
sti
lea
cdq
xchg
movs
inc
movs
lock
pop
xor
(bad)
dec
imul
push
or
push
not
(bad)
imul
sbb
mov
stos
lahf
sub
nop
sbb
add
in
mov
and
adc
xchg
adc
retf
imul
xor
xchg
jp
aam
mov
call
xchg
inc
(bad)
dec
retf
push
and
sar
in
addr16
movs
inc
adc
movs
or
mov
fwait
rcr
iret
nop
add
and
aad
out
inc
inc
sbb
push
pop
arpl
inc
cmc
not
imul
enter
dec
test
(bad)
sbb
frstpm(287
cmp
pop
and
test
cs
or
mov
jecxz
and
inc
pop
popf
fnstcw
push
adc
add
sub
shr
imul
dec
add
push
stc
cmp
or
push
(bad)
lods
daa
jo
mov
leave
xchg
bound
push
inc
lds
cmp
aam
movs
cld
icebp
out
cmp
fld
or
pushf
stc
pusha
in
das
sub
dec
aad
movs
popf
xor
sbb
cmp
cmp
fnstcw
(bad)
xor
inc
test
xchg
push
xlat
test
add
fidiv
js
fistp
add
cmps
scas
aad
jecxz
xlat
inc
add
xor
imul
jl
(bad)
lea
jp
xor
xchg
lahf
dec
mov
(bad)
xor
test
ja
xor
sbb
arpl
sub
mov
xchg
jp
stc
imul
adc
jno
inc
int
sahf
lahf
or
add
div
pushf
mov
or
jg
pop
fld
cmps
jge
sub
and
pusha
push
cld
sub
jne
pop
add
aas
outs
imul
sub
push
mov
ins
call
or
js
popw
sub
xor
cld
mov
idiv
pop
repnz
xchg
out
or
and
and
xor
mov
pop
dec
(bad)
stos
arpl
cmps
add
pushf
outs
mov
sbb
mov
nop
or
dec
or
or
stos
aad
jge
inc
imul
xchg
nop
in
pop
mov
xchg
or
dec
dec
daa
pusha
or
paddusw
pop
test
mov
xor
arpl
xor
mov
aad
xchg
or
mov
popa
push
inc
test
jge
sbb
push
aaa
loopne
mov
aas
retf
cmc
cmp
repnz
or
sbb
mov
sub
adc
cmp
fild
jo
pop
pop
add
imul
arpl
xchg
popf
push
jecxz
sub
push
out
pushf
or
hlt
push
loopne
gs
xchg
cmp
jmp
dec
addr16
movs
push
fnsave
leave
fsub
rcr
(bad)
fld
jg
test
test
(bad)
xor
mov
movs
arpl
sbb
and
js
push
out
dec
sbb
jg
stos
(bad)
shl
pop
rcl
push
cmp
xor
sbb
add
pop
cmps
sbb
out
sbb
dec
push
cmp
jecxz
(bad)
clc
xor
adc
les
push
dec
xchg
jmp
mov
out
rcr
cmps
pop
iret
jmp
mov
mov
(bad)
movs
fisub
sbb
xchg
push
sub
mov
mov
or
jl
repnz
mov
jo
sub
lock
mov
loope
das
(bad)
not
xchg
sbb
mov
imul
sti
pop
xor
bound
xor
mov
xor
imul
mov
add
loopne
cmp
mov
dec
(bad)
shl
and
inc
jle
not
jbe
xchg
sub
push
fdiv
sti
xchg
dec
and
push
into
add
and
jnp
popa
aas
(bad)
outs
fwait
sbb
cmp
dec
dec
test
repnz
mov
aam
mov
stc
jg
or
and
and
xor
push
es
test
pop
adc
iret
loope
add
xchg
cmp
iret
push
pop
(bad)
aam
cmc
jmp
lds
fst
retf
mov
push
mov
mov
sbb
cmps
or
push
(bad)
arpl
xchg
nop
cmp
mov
mov
ins
ss
pop
int
jns
cmps
pop
fst
fisub
movs
ficom
pusha
and
ret
push
gs
add
xchg
call
and
cmps
cmp
or
cmp
push
inc
xchg
dec
loop
pop
outs
test
mov
int
mov
test
cmps
loope
dec
shl
and
imul
xor
add
data16
pushf
ret
dec
aam
xchg
jge
add
xchg
js
and
sub
pop
xchg
xchg
mov
dec
push
xor
outs
add
push
je
jne
adc
jg
xor
xchg
call
jg
ss
jmp
(bad)
sbb
leave
shl
clc
lock
xchg
into
sub
jb
xchg
(bad)
pushf
das
cli
(bad)
(bad)
jnp
dec
in
ficom
and
sbb
lds
jnp
fstp
arpl
jns
pop
mov
adc
and
int3
cmp
and
jge
sahf
sbb
xlat
scas
and
ficomp
xor
mov
fldenv
push
push
push
mov
mov
and
(bad)
dec
xor
or
pop
dec
movs
pusha
mul
sub
cmp
ins
mov
mov
xchg
fwait
push
je
lds
clc
sbb
je
xrelease
ins
pop
repz
push
addr16
xlat
and
out
in
jb
(bad)
std
jmp
jns
lds
fld
push
into
sub
daa
push
adc
arpl
rcl
xchg
sub
stos
inc
js
adc
aas
out
sub
cwde
ror
xchg
adc
xchg
pop
cmp
(bad)
and
mov
into
xor
xor
sbb
rcl
adc
out
xor
jb
(bad)
mov
or
ds
retf
jecxz
mov
cmp
push
jmp
pusha
es
jb
ror
std
pop
mov
jb
dec
push
mov
push
cdq
pop
fimul
mov
ins
jmp
loop
sub
rcr
xchg
out
mov
pop
add
mov
cmp
(bad)
gs
xchg
inc
bound
push
mov
ins
mov
ror
xchg
mov
gs
cdq
adc
and
sar
mov
shr
nop
adc
mov
pop
retf
das
sbb
jb
fwait
mov
rcr
lods
mov
and
dec
pop
mov
jmp
jnp
inc
inc
push
push
test
sbb
inc
aas
or
fwait
pop
xor
pop
sbb
into
scas
ins
ss
(bad)
xor
(bad)
cld
mov
outs
jmp
and
sahf
int
arpl
push
fwait
xor
(bad)
push
inc
push
adc
nop
sbb
mov
es
leave
and
xchg
fcmovu
test
cmp
and
ins
sub
add
or
add
push
adc
cld
imul
inc
adc
inc
dec
loope
sub
pop
stos
sub
adc
loopne
sub
int3
mov
loop
fs
jnp
xor
and
sbb
out
in
xchg
popa
jecxz
xor
cmps
adc
cmps
retf
fistp
adc
js
jno
pop
xor
cli
sbb
ror
retf
fsub
mov
inc
aaa
inc
xchg
loope
pushf
stos
push
sbb
mov
push
stc
icebp
enter
mov
xlat
inc
mov
mov
enter
jle
sub
test
mov
pushf
cmp
int
loope
jmp
mov
add
push
retf
cmps
sub
sub
aad
ja
push
rcr
pusha
loope
mov
sub
aad
pop
or
fdivr
mov
jbe
in
mov
aaa
xor
inc
sbb
out
outs
dec
adc
dec
mov
aaa
xor
ss
mov
cmp
cdq
fwait
test
mov
addr16
dec
mov
fsubr
pop
addr16
inc
lea
inc
shr
cld
mov
mov
stos
and
adc
jb
and
out
cmps
lea
and
mov
icebp
data16
xchg
(bad)
mov
not
les
inc
loopne
in
adc
or
test
(bad)
aaa
cmp
mov
xor
or
std
not
jmp
dec
push
or
(bad)
cdq
sub
dec
popf
add
(bad)
mov
lock
cwde
dec
or
jb
mov
or
dec
nop
retf
mov
sub
xchg
push
push
xor
(bad)
fidivr
push
popa
movs
or
dec
inc
pop
arpl
inc
pop
je
mov
sti
xor
in
out
cwde
jle
push
ret
mov
scas
(bad)
fldenv
gs
scas
bound
cmp
test
inc
xchg
shr
mov
sar
dec
loope
fld
cwde
nop
fwait
push
movs
(bad)
ins
or
shl
jp
xor
mov
ss
mov
fcmovne
scas
add
adc
inc
aad
es
or
cmp
mov
mov
sbb
lds
xchg
xchg
sbb
jnp
xchg
sar
ret
lea
aas
repnz
loop
inc
push
jl
ins
sub
movs
xchg
int3
fwait
test
das
rcr
jne
xchg
ins
out
mov
jnp
jae
movs
cmp
stos
jmp
sbb
outs
movs
daa
adc
jle
test
cmps
mov
ret
mov
mov
xchg
dec
cmp
int
in
imul
push
adc
or
mov
sub
ja
dec
xchg
xor
xor
jo
dec
ss
(bad)
lahf
inc
or
pusha
mov
dec
sbb
fcom
pop
fwait
xor
outs
xor
jecxz
mov
in
xor
or
loop
test
sub
and
(bad)
sub
xchg
mov
adc
dec
pop
xchg
mov
xchg
pusha
jne
jno
aam
xor
test
(bad)
or
fnstenv
mov
cmps
loopne
rcr
aad
ret
mov
push
push
mov
jae
mov
push
(bad)
xor
jecxz
xchg
into
cli
fld
jns
mov
in
xor
xor
retf
gs
retf
add
(bad)
movs
std
mov
mov
mov
inc
inc
fstp
repz
jno
dec
cmc
sub
adc
(bad)
and
pop
mov
jbe
scas
rol
inc
test
aam
outs
or
jle
test
push
add
clc
push
jnp
cmp
sub
sbb
arpl
fild
mov
out
pop
or
xor
add
push
and
mov
aas
test
jnp
add
lock
das
cmps
mov
pop
or
cmp
push
loop
push
adc
enter
and
outs
push
js
sub
cmp
pop
cld
cmp
jmp
push
mov
retf
sbb
sbb
repnz
pop
je
fld
ds
cld
shl
cwde
fstp
mov
xchg
or
call
jg
ret
push
ret
inc
add
rcr
and
sar
bswap
ret
scas
enter
cli
add
xor
cmp
inc
push
sub
popa
sbb
mov
add
cdq
cmp
popa
mov
or
mov
into
mov
sub
inc
fimul
sub
xor
test
lock
jmp
inc
cmp
mov
sub
call
leave
mov
retf
es
push
inc
cmps
cdq
int
(bad)
cld
nop
call
sahf
mov
xchg
les
in
shr
sbb
jmp
das
das
inc
stc
xchg
shl
cmp
(bad)
loope
jle
scas
cmp
movzx
int
jns
retf
or
dec
xchg
lsl
pop
jno
jl
jge
pop
inc
push
add
sub
loope
int3
shl
mov
fild
push
sar
ds
fnstenv
fild
cmps
call
popf
retf
adc
out
mov
lock
dec
pop
dec
(bad)
and
or
vcvtps2pd
cli
jne
adc
jae
push
sbb
pop
pop
lea
jne
mov
mov
rol
sbb
ja
mov
call
pop
pop
sbb
and
dec
jl
cwd
mov
adc
hlt
mov
int
mov
jecxz
sub
std
pop
ficom
sub
out
jb
add
(bad)
mov
neg
ins
and
mov
jmp
ror
mov
pop
sub
addr16
and
stc
adc
(bad)
mov
sbb
mov
sbb
sbb
xor
sar
dec
sbb
xchg
jcxz
add
dec
mov
push
sub
ins
add
push
(bad)
cmp
pusha
jae
mov
shr
sbb
and
call
push
jg
pop
xor
mov
es
dec
sbb
cmp
push
add
inc
fadd
outs
add
cmp
(bad)
xor
xor
aad
push
mov
push
xchg
icebp
or
cdq
cmps
pop
scas
cwde
or
int
mov
fdivr
add
retf
and
xor
ins
cmp
movs
pop
movs
inc
or
xchg
sub
addr16
mov
sbb
push
stos
mov
cwde
sub
inc
data16
sub
in
cmc
loop
xor
lods
mov
push
add
inc
fld
out
mov
jecxz
mov
add
push
mov
push
mov
jg
pop
and
mov
or
add
pusha
fsubr
xchg
mov
test
inc
cli
test
mov
loop
stos
pop
cld
sub
and
xor
push
mov
pop
cmp
and
pop
inc
and
mov
movs
data16
jne
je
aad
pop
cwde
retf
push
push
shl
idiv
mov
lds
loope
jns
out
out
adc
popa
push
out
out
shr
cmp
jo
fdiv
push
out
inc
je
call
pop
pop
mov
(bad)
cmp
daa
scas
pushf
inc
ds
xor
nop
mov
mov
and
rcr
jg
loopne
lods
inc
out
lahf
sub
sti
inc
xchg
jge
lock
sti
xchg
hlt
test
jne
mov
mov
sbb
sbb
sub
pop
sbb
aam
pop
pop
ins
push
cmc
inc
ficomp
push
push
imul
dec
sbb
in
call
mov
cli
add
jle
dec
daa
add
adc
das
mov
pop
mov
ja
add
ins
inc
xchg
imul
add
dec
out
or
pop
and
fucom
cdq
shl
out
adc
pop
push
push
aas
pop
mov
rcr
push
mov
jecxz
pop
repnz
movs
pop
xchg
pop
mov
pop
jl
(bad)
jae
sbb
fisubr
sahf
push
lahf
add
shl
shl
movs
mov
jl
ret
fst
sbb
ficomp
sbb
rsm
leave
xchg
dec
popf
sbb
add
cmps
dec
icebp
push
out
pop
repnz
lods
rcr
in
fwait
pusha
out
cmp
pop
(bad)
xchg
mov
mov
pushf
test
dec
arpl
and
scas
cli
xor
mov
test
sbb
cmp
pop
and
lods
or
and
mov
and
sahf
movs
adc
enter
jo
iret
dec
mov
sub
ja
dec
shl
enter
sbb
jbe
(bad)
sbb
xchg
jecxz
in
das
fs
aad
int3
sub
or
push
or
adc
lahf
xchg
inc
xchg
cdq
popf
or
(bad)
loopne
(bad)
ins
lods
xor
cmp
mov
xchg
dec
and
xchg
clc
xchg
ins
sbb
sub
std
jmp
push
jb
(bad)
jnp
(bad)
shr
push
inc
cmp
push
mov
sbb
je
aas
pop
cmp
inc
sub
call
xor
daa
and
pop
test
mov
gs
in
in
mov
cli
mov
sti
xchg
push
xor
je
outs
imul
(bad)
pusha
xchg
cmp
xor
(bad)
jp
adc
call
mov
sahf
test
cmps
adc
in
pop
mov
fist
sub
cmp
clc
inc
call
mov
shl
mov
inc
cld
sbb
mov
cmps
cmc
in
ret
sbb
fadd
cmp
add
(bad)
(bad)
and
inc
movs
fpatan
sbb
push
push
inc
inc
mov
ret
jl
pop
sbb
jge
hlt
sbb
je
sbb
xchg
inc
neg
gs
test
cmc
enter
or
xor
fcmovbe
and
fucomi
inc
xchg
fcomp
mov
sbb
sbb
popa
and
and
pop
out
fsubr
adc
bound
xor
sbb
inc
fdivr
pop
cmp
lahf
cmps
sbb
imul
aas
loopne
les
ss
pushf
and
sbb
shl
sahf
adc
mov
sub
scas
out
push
dec
inc
cmps
fwait
xchg
pushf
sbb
mov
push
pop
mov
aas
sub
(bad)
(bad)
pop
jne
test
inc
and
mov
adc
pop
mov
dec
pusha
mov
ds
mov
xchg
sbb
lods
ja
call
or
test
jb
call
inc
jg
leave
mov
call
fdiv
jmp
fsubr
and
cs
dec
adc
adc
sub
repz
cmp
je
ficom
retf
ss
sahf
sbb
adc
xor
push
out
shl
adc
lock
fidivr
xchg
daa
and
(bad)
push
int
mov
jae
cld
mov
inc
cld
pop
push
mov
shl
sbb
in
mov
jp
pushf
ins
and
hlt
mov
mov
mov
test
(bad)
scas
data16
push
or
xchg
xchg
pop
ret
lock
sbb
shr
mov
bound
data16
test
push
cmp
pop
jbe
jmp
std
or
es
dec
inc
test
adc
dec
pop
xlat
loop
cld
pop
push
shl
inc
int3
push
bound
lds
push
fst
fwait
xor
jp
jbe
hlt
jnp
rol
push
je
stos
rol
dec
xchg
and
sar
(bad)
in
mov
shl
add
push
mov
sub
mov
dec
push
pop
dec
inc
inc
push
sbb
es
and
pop
cmps
pop
mov
int3
mov
cmp
push
fcom
loop
adc
pop
mov
jne
inc
fidivr
mov
sub
lods
cmp
iret
int3
sub
sbb
(bad)
(bad)
xchg
fwait
adc
cmps
clc
faddp
into
dec
arpl
xchg
ret
(bad)
sbb
repnz
push
and
push
mov
sbb
push
push
hlt
pop
xchg
and
aad
mov
sbb
into
call
xchg
fstp
xor
and
pop
mov
dec
sahf
pop
cmps
loope
popf
xor
sahf
dec
in
xlat
test
fwait
cmp
or
popa
ret
in
movs
sar
mov
retf
jp
jne
adc
nop
adc
loope
xor
fimul
das
mov
ret
ins
mov
xor
push
inc
pop
mov
or
pop
xchg
sar
dec
xor
imul
jl
scas
sahf
dec
adc
adc
and
lahf
xchg
call
pop
xchg
or
xor
or
xchg
cmps
test
fist
mov
sbb
addr16
add
sbb
jbe
sub
imul
imul
retf
gs
push
add
and
mov
sbb
ret
and
xor
loopne
xchg
jae
sar
cmp
call
sub
or
xor
into
hlt
adc
and
stc
or
mov
jo
in
jecxz
sahf
lock
pop
adc
cdq
xchg
jno
inc
cli
lods
aad
sub
mov
xor
idiv
and
add
dec
add
in
xor
pop
shl
xchg
outs
es
jns
sahf
daa
dec
add
scas
mov
push
dec
fidivr
mov
add
gs
jl
pop
fmul
or
dec
fmul
or
pop
push
xlat
into
mov
dec
xchg
in
jae
(bad)
(bad)
or
cmc
push
sti
les
jle
scas
(bad)
leave
test
mov
jp
shl
adc
test
pop
push
inc
ror
loopne
lock
dec
loop
pop
push
pop
setg
xchg
cwde
jne
pop
aas
jno
lock
mov
lahf
aas
adc
jne
out
mov
(bad)
add
inc
popf
sbb
ins
cld
inc
in
dec
sti
cld
mov
and
adc
fistp
das
loope
mov
fld
js
xchg
or
shl
pushf
test
out
mov
call
pusha
daa
(bad)
mov
ins
xchg
dec
rcr
adc
adc
imul
ret
pop
bound
dec
mov
inc
int
pop
push
xchg
sahf
(bad)
xor
push
pop
enter
inc
test
cmps
call
mov
repz
push
mov
fist
jno
pushf
test
jl
dec
jbe
xchg
sbb
cmps
mov
push
jmp
pusha
(bad)
sahf
add
dec
scas
fwait
cdq
and
lock
out
pop
out
ja
mov
ins
test
lods
and
push
add
jp
je
mov
test
mov
(bad)
rol
pushf
sbb
ja
add
cmp
push
loopne
fmulp
adc
mov
mov
mov
or
sub
call
loope
(bad)
movs
fwait
pop
fidivr
ret
mov
jb
mov
mov
nop
nop
test
xlat
or
jecxz
pop
(bad)
pop
push
hlt
jmp
pop
outs
mov
lock
cs
lods
imul
popa
out
ret
inc
and
movs
js
add
lods
push
fidivr
dec
fimul
cmp
fistp
mov
sbb
add
ins
cmc
sahf
cwde
xchg
imul
sub
test
cmps
ret
neg
or
jl
dec
adc
jbe
and
(bad)
mov
inc
inc
sub
pop
test
hlt
movs
sub
push
dec
icebp
ds
xor
in
jmp
fs
mov
mov
xor
and
xor
das
repnz
out
sbb
jno
pop
popf
loope
sub
les
fst
scas
pop
pop
movs
sub
jl
shl
and
mov
ins
push
pop
cmps
scas
fldenv
lods
not
dec
add
push
fldcw
add
mov
xor
out
call
pop
leave
aad
push
push
inc
loope
add
xchg
mov
add
movs
sub
adc
inc
test
sar
popf
xchg
dec
(bad)
icebp
int3
xchg
jns
rol
test
dec
sbb
push
pop
xchg
mov
or
outs
adc
xchg
in
add
div
cs
mul
out
(bad)
mov
retf
push
mov
pop
fstp
mov
bound
push
popa
outs
xor
retf
scas
add
jb
out
mov
and
cmps
dec
jmp
push
xor
mov
repz
div
add
in
push
iret
(bad)
pusha
ret
repz
cmp
cmp
push
sub
in
or
jbe
(bad)
movs
jnp
mov
fisub
lds
push
fnstenv
aas
xchg
add
cmc
xchg
stc
jno
mov
pop
bound
add
js
dec
(bad)
fcom
mov
out
call
mov
dec
ss
or
jp
imul
mov
pop
jno
fld
daa
pushf
pusha
mov
xchg
out
out
dec
xchg
dec
mov
in
xchg
(bad)
sub
in
scas
lods
lds
sar
cld
cmp
push
cli
mov
movs
push
in
pop
adc
push
dec
pop
and
push
js
push
push
xor
sub
jno
mov
push
and
push
cmp
jne
cmp
mov
push
ffreep
out
enter
gs
cmc
xchg
scas
cmc
sbb
test
sub
xchg
stc
xor
pop
cmp
enter
dec
or
cmp
or
lds
inc
in
outs
cmc
sbb
(bad)
mov
sti
mov
(bad)
pop
mov
jge
dec
or
jecxz
sub
mov
sub
pop
dec
loopne
(bad)
cmps
retf
lods
dec
retf
dec
xor
ret
sbb
adc
mov
mov
mov
sub
dec
cmp
xlat
out
stos
mov
pop
add
jge
aam
jnp
xor
mov
shr
and
xchg
lea
xlat
mov
sbb
dec
jae
sbb
push
cmp
jae
dec
mov
mov
sub
jo
mov
cmp
sbb
bnd
push
int
clc
xchg
cmp
pushf
mov
sbb
add
pop
sub
jne
xchg
mov
rcr
ja
mov
sub
or
std
mov
xor
add
or
scas
shl
inc
arpl
xchg
mov
dec
jl
mov
push
xchg
outs
popf
sar
mov
adc
jmp
(bad)
mov
das
xor
das
popf
sar
pop
fisubr
mov
ret
imul
sbb
sub
scas
pop
popf
adc
call
push
mov
loop
ja
sub
sbb
inc
jne
idiv
imul
hlt
ret
mov
fsubrp
push
jmp
sub
pop
mov
jge
dec
pop
loope
inc
xchg
ins
js
mov
cmp
ds
xchg
daa
xchg
mov
retf
mov
(bad)
stc
out
fcom
inc
dec
out
jmp
jp
jmp
xor
not
push
sub
push
aam
push
mov
adc
std
outs
and
dec
cmc
(bad)
lods
mov
or
mov
lock
outs
pop
dec
jl
mov
xor
(bad)
xor
xchg
cli
or
mov
cdq
bsf
sub
fwait
aas
xchg
pusha
leave
mov
shl
(bad)
imul
cmc
int
sahf
je
or
add
jl
jbe
add
add
inc
cmp
xchg
xlat
push
cmps
mov
mov
ins
dec
loopne
xor
cmp
aaa
push
daa
aad
jmp
and
out
and
jns
push
mov
inc
fcomp
ja
cwde
fcmovnbe
daa
jae
push
mov
push
inc
ret
je
sti
(bad)
ins
sub
data16
xor
jge
xchg
lods
add
xor
daa
lds
ror
ret
test
out
inc
push
iret
in
mov
hlt
add
dec
pop
pop
xor
add
pushf
cmps
shl
lds
es
mov
dec
dec
inc
sub
imul
sahf
sar
mov
(bad)
inc
mov
inc
sbb
jbe
or
call
js
in
div
lea
(bad)
jo
outs
imul
ins
iret
sahf
outs
mov
adc
out
dec
cmps
jg
ret
or
mov
rcl
push
xlat
sub
stc
je
pop
(bad)
sub
adc
pop
and
and
clc
aas
xchg
mov
xor
cdq
ins
pop
pop
dec
adc
cmp
mov
in
inc
push
xor
mov
push
(bad)
movs
jns
imul
shr
mov
in
ja
mov
pop
mov
jae
jne
mov
bound
xor
lock
xchg
sbb
into
push
or
mov
inc
std
mov
in
jnp
aaa
or
cmp
add
(bad)
pushf
push
ret
hlt
fimul
adc
pmaxub
das
in
aam
js
push
cmp
sub
popf
and
js
inc
(bad)
das
mov
xor
mov
mov
sahf
jg
push
das
(bad)
mov
jmp
mov
push
fcomp
pop
push
out
das
ret
cwde
rol
sbb
push
sbb
cmp
cmps
mul
stc
es
adc
inc
adc
pop
pop
push
mov
enter
fldcw
push
mov
test
mov
les
in
fld
fnstenv
int
or
test
int
cmp
out
inc
xchg
iret
mov
bnd
ss
cmp
adc
cdq
(bad)
cmps
add
jbe
lods
jnp
cmps
add
fcomp
and
mov
ds
rcl
jle
cmp
inc
aad
adc
jl
jg
aad
lods
push
in
les
lds
mov
stc
and
outs
je
aam
ss
mov
aad
(bad)
sti
mov
(bad)
cs
adc
mov
jne
aad
sub
int
aam
xor
push
bnd
xchg
test
and
mov
int
mov
pop
inc
cmp
xchg
in
out
test
inc
sbb
popf
mov
movs
mov
push
push
out
imul
ins
fsub
xor
lods
and
fs
xchg
xchg
test
push
rcr
std
jns
jnp
xor
test
sahf
add
sub
mov
leave
mov
out
xlat
mov
bound
mov
aas
imul
push
jno
ror
pushf
jp
sub
mov
xchg
sahf
(bad)
xor
pop
jbe
mov
lds
mov
inc
scas
and
push
scas
stos
leave
les
sbb
inc
test
jg
loope
jmp
outs
mov
lods
cwde
ret
out
or
push
mov
test
hlt
mov
inc
cmp
xchg
jb
mov
cmc
call
shl
add
cmps
in
cmc
neg
dec
sbb
out
pop
repz
xchg
pop
sub
in
xor
inc
shr
out
mov
push
mov
outs
arpl
cmp
test
(bad)
shr
mov
jae
(bad)
push
cmps
mov
adc
sbb
scas
leave
adc
xchg
leave
pusha
test
in
mov
jl
lahf
mov
add
in
or
jmp
stos
mov
xchg
icebp
cmp
popa
jne
add
mov
repnz
xor
movs
movs
mov
mov
dec
push
mov
shr
dec
(bad)
mov
movs
daa
mov
cmps
cmp
test
cmps
in
imul
mov
add
sti
add
(bad)
cmps
add
pop
leave
xchg
dec
aad
shl
mov
sbb
in
out
test
pusha
les
mov
xor
or
mov
inc
xlat
jns
add
or
cmp
sbb
xchg
sub
ret
stos
cs
retf
mov
and
push
add
fisttp
repnz
sub
arpl
mov
imul
(bad)
pop
sub
push
call
push
mov
fbld
mov
loope
inc
sbb
aaa
jbe
xor
scas
adc
cli
pop
add
sbb
or
mov
imul
jl
xor
rcl
movs
cwde
xor
repz
aad
in
pop
mov
dec
pop
icebp
xor
fdiv
das
jl
inc
shl
cmp
xchg
mov
push
mov
fstp
lea
cmp
pop
cmc
xchg
clc
in
jle
mov
adc
mov
fdivr
lds
test
data16
loope
stos
js
add
or
mov
ret
call
movs
cli
popa
cli
pop
lock
enter
or
xor
or
cmp
iret
mov
fs
add
fdivp
cmps
add
or
ret
clc
pusha
push
std
loop
aam
cli
out
cmp
push
pop
push
iret
mov
or
push
xor
das
mov
int3
mov
in
cmp
outs
or
push
enter
bound
cmp
mov
mov
popf
cmp
jae
loopne
xchg
iret
xor
push
repnz
mov
or
hlt
stos
inc
jbe
dec
arpl
mov
sub
cmp
js
popf
mov
call
adc
mov
sti
call
dec
(bad)
(bad)
cmp
add
pop
(bad)
stc
scas
mov
pop
add
lods
bound
add
les
popa
xchg
addr16
mov
mov
push
push
nop
out
push
dec
xchg
cmps
mov
shr
xor
sbb
cmps
inc
sbb
pop
pusha
arpl
repz
fbld
mov
fdivp
jge
pop
mov
(bad)
add
fdiv
popa
mov
sahf
pop
and
jl
push
bound
push
iret
xchg
popa
aam
cs
(bad)
dec
(bad)
mov
push
xchg
adc
jmp
loop
int3
pop
and
and
imul
inc
jne
mov
sub
push
push
mov
adc
(bad)
(bad)
pop
inc
inc
cwde
push
lods
loop
out
push
leave
cmps
or
dec
or
es
shl
fs
pushw
dec
sbb
cmps
dec
pop
mov
dec
dec
sahf
cmp
mov
jnp
mov
pop
mov
add
dec
loop
lds
adc
jmp
xor
adc
adc
js
enter
fwait
enter
mov
xor
loop
fist
xchg
mov
sti
or
ret
call
push
mov
xor
xor
dec
out
dec
pop
sbb
pop
test
pop
popf
push
push
mov
(bad)
xlat
rcl
pop
jnp
xor
test
push
in
fsubr
int3
and
push
std
(bad)
loop
cmp
cmp
test
ror
add
popf
call
fdivr
or
sahf
inc
lods
shr
lock
adc
ins
into
xchg
fcmovne
push
pop
sub
pop
mov
movs
pop
xchg
pop
out
mov
pop
mov
fstp
hlt
dec
pop
sub
mov
xor
cmp
sar
(bad)
aaa
sti
sbb
fistp
aas
repz
into
or
shl
cmp
frstor
shr
mov
out
aad
std
jne
xchg
ins
xlat
mov
and
enter
sub
fcomp
push
daa
sahf
xor
cmc
jbe
or
mov
sbb
inc
dec
and
(bad)
cmp
popf
inc
xchg
and
je
imul
aas
dec
into
mov
mov
mov
cmp
jo
je
push
leave
fwait
ss
dec
push
mov
out
call
cdq
pusha
iret
repz
jae
loope
xchg
lods
xchg
mov
ret
out
lock
mov
popf
inc
sahf
(bad)
nop
imul
adc
pop
sbb
inc
xchg
add
mov
sar
pop
in
mov
pop
dec
mov
retf
sub
test
call
(bad)
iret
mov
loop
xchg
cmp
xchg
mov
cmp
jno
rol
mov
push
repnz
adc
or
adc
fsub
xchg
jne
cmp
arpl
call
push
jmp
int
add
inc
fdiv
xor
sub
dec
jae
rol
jg
mov
fist
retf
data16
mov
cld
cmps
test
add
cmp
fucomp
int
mov
sahf
mov
cli
pushf
mov
scas
and
enter
cmp
hlt
fwait
outs
ret
jae
pop
xlat
cmc
xchg
(bad)
dec
repnz
mov
repnz
push
jl
inc
(bad)
xchg
sub
and
loopne
dec
mov
shl
push
in
xor
stc
dec
push
jae
jecxz
out
dec
sub
xlat
jae
outs
ds
(bad)
sub
std
jp
add
or
call
call
xor
pop
cli
sbb
mov
jecxz
sub
call
jecxz
jmp
sbb
rol
(bad)
push
dec
repnz
xor
pop
sbb
sahf
enter
popa
out
aaa
mov
adc
je
sbb
mov
les
push
hlt
or
outs
mov
xchg
xor
daa
dec
adc
les
dec
aas
xchg
pop
push
aas
lahf
sbb
xor
in
iret
cmps
xlat
push
movs
pop
enter
cli
jbe
push
or
bswap
imul
mov
test
retf
mov
lods
loopne
inc
sbb
fwait
cdq
sbb
addr16
push
pushf
sub
das
cmp
call
call
das
call
xchg
mov
inc
sub
test
mov
sub
daa
imul
rcl
outs
js
test
(bad)
add
ins
xor
dec
imul
jmp
jb
mov
mov
add
cmp
or
inc
cmps
sub
scas
push
mov
sub
xor
push
sub
imul
jbe
int3
jmp
dec
loopne
sbb
mov
push
push
inc
gs
push
and
mov
ss
xor
adc
les
inc
xlat
shl
cmp
leave
mov
and
addr16
and
lock
sbb
mov
mov
xchg
aas
clc
mov
add
test
mov
mov
sbb
hlt
in
jns
in
jne
cwde
loopne
ins
cmp
mov
mov
test
aaa
mov
and
leave
jne
clc
xor
mov
test
and
inc
xchg
xchg
ins
add
pop
fimul
shr
sub
int3
scas
nop
push
lock
pop
sbb
xchg
ja
sbb
test
stos
(bad)
std
arpl
int3
sbb
xchg
ins
fadd
out
pop
scas
in
(bad)
sbb
push
mov
xor
jmp
and
cwde
imul
fdiv
jle
dec
test
adc
(bad)
push
push
nop
daa
or
ins
icebp
aam
sbb
fist
je
jae
ja
movs
xchg
pop
dec
gs
daa
(bad)
dec
(bad)
xchg
dec
mov
(bad)
push
mov
add
mov
loopne
neg
adc
repnz
push
add
xchg
push
aad
movs
jb
jae
test
jmp
pop
dec
mov
push
mov
push
cmp
or
ja
sub
bnd
fwait
jbe
adc
sbb
rol
xchg
mov
sti
es
sub
es
fst
mov
ds
cmp
dec
mov
dec
push
inc
mov
xchg
mov
ror
leave
sbb
inc
fild
mov
inc
loopne
push
and
arpl
bound
das
pushf
or
bound
xor
dec
xchg
mov
push
cdq
cld
push
add
inc
mov
mov
sub
out
test
cmc
ret
adc
mov
mul
in
sub
mov
xor
out
(bad)
push
adc
leave
inc
sbb
mov
sub
lds
mov
call
inc
rol
js
sbb
jp
imul
(bad)
dec
js
and
or
outs
push
aas
mov
jno
xor
mov
es
inc
arpl
jp
cld
data16
cmp
cmp
jno
movs
neg
xor
xchg
and
ins
and
pop
test
sub
loope
and
leave
adc
xchg
push
pop
aaa
out
test
xor
fcom
test
stos
(bad)
fwait
inc
iret
pushf
stc
xchg
test
fadd
pusha
xor
pop
dec
inc
fcmove
test
enter
enter
jmp
cmc
xor
mov
fwait
mov
and
ins
(bad)
in
in
fisttp
call
dec
add
popa
sub
xor
(bad)
fiadd
mov
addr16
icebp
ret
mov
pop
sbb
jns
sub
and
pusha
clc
cdq
sbb
mov
push
mov
loop
jo
jae
xlat
mov
rol
jge
enter
call
cmp
pusha
cmp
add
adc
fldcw
xor
nop
mov
movs
mov
xor
sub
sub
in
jae
mov
in
cmp
stc
fild
fcomp
fnstcw
and
push
or
xlat
nop
in
clc
sti
xor
nop
jp
push
sub
arpl
clc
mov
pop
inc
jnp
jns
sub
add
pop
fs
stc
in
test
mov
fwait
(bad)
fsubr
psubusb
fcom
test
mov
mov
cli
call
xchg
imul
mov
push
stos
imul
mov
dec
and
(bad)
iret
pushf
sub
lahf
cmp
jmp
mov
jae
and
add
jp
in
js
nop
dec
xor
sub
pop
out
cmc
push
xlat
fdiv
jns
jmp
dec
data16
sbb
fimul
cld
xor
call
paddb
movs
add
scas
add
stos
ins
mov
data16
push
les
mov
inc
mov
pop
test
stos
cli
cmp
fwait
stos
mov
cdq
add
fxch
inc
mov
pop
mov
pop
addr16
cli
ret
stos
xchg
mov
test
push
jg
and
cmp
iret
repnz
mov
mov
adc
pop
test
jbe
fsubr
fwait
or
loop
dec
mov
mov
and
push
push
es
imul
mov
sub
add
rcr
aam
inc
movs
loope
mov
and
fdiv
(bad)
gs
call
ss
mov
(bad)
mov
je
mov
ret
mov
out
adc
gs
leave
stos
ds
loopne
push
hlt
jno
jl
das
add
or
and
pop
les
push
pusha
inc
adc
call
lods
xchg
mov
out
pminub
cwde
dec
stos
sbb
mov
out
jle
and
ret
mov
add
mov
lods
(bad)
ror
les
ror
mov
in
pop
movs
mov
push
popa
pop
xor
xor
add
add
inc
shl
mov
retf
mov
add
test
or
and
fimul
cld
sub
mov
inc
fwait
or
mov
lock
xchg
icebp
fs
test
enter
out
inc
xchg
mov
jbe
cmp
jne
ja
int
fsub
dec
and
push
(bad)
pop
in
xchg
dec
xchg
inc
enter
sbb
imul
or
or
mov
cs
stos
cmp
shl
mov
jo
and
sbb
dec
xor
add
imul
outs
mov
mov
retf
std
sti
inc
or
or
fstp
das
das
and
push
inc
mov
xor
jno
dec
cli
mov
mov
jb
mov
pop
ss
xor
out
fld
arpl
pop
out
dec
data16
fidiv
out
sar
outs
aaa
out
xor
sbb
or
scas
lock
stc
mov
aam
popa
mov
sub
or
repnz
sbb
cmc
mov
aaa
retf
je
test
cmps
sbb
ret
loope
push
sahf
push
sub
popa
xchg
scas
and
jg
mov
xchg
hlt
and
stos
sbb
test
jb
pushf
stos
add
mov
scas
(bad)
test
loopne
pop
js
popa
push
inc
outs
dec
mov
test
and
cwde
jnp
(bad)
addr16
add
repnz
cmp
jecxz
push
iret
mov
mov
jmp
xchg
mov
xchg
fist
test
aaa
imul
aam
jg
jo
inc
lds
cmps
add
cli
sbb
(bad)
inc
pop
jecxz
xchg
mov
ins
xor
xchg
into
inc
jo
mov
cmp
xchg
mov
adc
neg
cmp
ds
outs
loop
add
jp
test
inc
lahf
pop
test
daa
mov
jmp
jbe
lahf
fwait
mov
push
rcr
stos
js
fld
mov
inc
and
push
jbe
xor
pop
arpl
cmp
xchg
sbb
sbb
jecxz
retf
ror
rol
outs
inc
in
xchg
out
adc
lds
js
call
ds
sub
in
sub
or
fdiv
sbb
scas
push
lods
test
scas
mov
pop
mov
loopne
jp
movs
cdq
stc
data16
arpl
outs
or
push
dec
movs
xor
xor
leave
xlat
scas
repnz
cld
xlat
push
or
xchg
in
xor
or
xchg
hlt
sub
pop
xchg
clc
mov
ret
out
je
int
inc
cmp
fcom
xchg
mov
dec
or
add
ds
sbb
shr
or
cmc
les
mov
mov
mov
cmp
xchg
dec
adc
pop
push
inc
arpl
cmp
xor
sar
popf
mov
sbb
cmp
xchg
std
xchg
lahf
test
sub
mov
sbb
mov
sub
pop
xchg
movs
das
retf
aam
rcl
xchg
add
rcr
pop
sbb
mov
add
ret
call
retf
xor
xchg
push
cmc
dec
adc
push
adc
cmp
xor
test
or
sbb
movs
jne
in
adc
dec
cmp
add
test
pushf
add
es
jp
adc
shr
sub
inc
xchg
cmp
sub
call
ficomp
dec
push
xor
fwait
enter
std
cmp
outs
imul
arpl
pop
lds
rcl
rcl
xor
into
inc
pop
mov
sbb
aad
pop
mov
cwde
dec
inc
movs
mov
pop
pop
mov
ror
push
jne
dec
mov
push
leave
fadd
ficomp
push
retf
ins
push
dec
jle
(bad)
jns
cld
mov
xchg
sub
mov
ja
in
bound
sub
mov
add
retf
xchg
es
and
pop
mov
loope
sub
or
std
push
test
ja
jb
js
es
sysenter
scas
ss
mov
jbe
pop
lods
jp
push
popa
int
out
jmp
ror
mov
mov
inc
fidivr
adc
sti
icebp
adc
jb
add
das
addr16
in
cdq
retf
fs
mov
stos
xchg
lahf
popf
adc
jmp
push
dec
std
add
sub
fs
mov
dec
pop
xchg
sbb
mov
cld
aam
cmps
xor
add
jo
cmp
loope
xor
ins
(bad)
mov
cmp
outs
jne
xchg
div
xchg
mov
out
sub
test
loope
cmp
ret
stos
data16
mov
pop
(bad)
jg
sub
jmp
icebp
xchg
in
fcomp
jmp
xchg
mov
xchg
push
test
shl
fcomi
add
push
mov
dec
mov
sbb
sbb
daa
js
repnz
jge
mov
cdq
or
imul
arpl
stc
aad
adc
mov
xor
adc
xor
add
mov
(bad)
xchg
cmp
and
xchg
sbb
cli
mov
xchg
mov
inc
add
dec
inc
call
cs
in
cmps
jge
inc
mov
test
outs
mov
fild
mov
xor
or
mov
xor
cli
mov
push
bound
bound
jbe
mov
and
arpl
add
cmp
maxps
inc
out
add
jb
pop
jp
je
add
ret
(bad)
inc
mov
and
push
mov
sbb
push
mov
bound
jle
inc
xchg
mov
add
jp
inc
pop
arpl
fwait
jecxz
scas
jne
mov
in
adc
or
aas
imul
sub
sbb
cs
enter
mov
loopne
fwait
aad
mov
add
test
jno
and
and
adc
mov
in
lahf
xchg
out
in
(bad)
in
loop
test
(bad)
jmp
cmp
jecxz
mov
and
mov
lahf
jl
sahf
mov
test
cmp
add
retf
mov
aad
cmp
cmp
ret
loop
fldenv
jae
sub
arpl
mov
ds
cmp
pop
das
xchg
push
xor
sbb
cld
add
or
jae
cmp
fisttp
movs
mov
sub
xor
sub
out
daa
jge
out
cmp
add
or
(bad)
in
push
xchg
int3
popf
xchg
inc
adc
xor
pop
add
mov
or
mov
add
push
mov
fimul
sbb
mov
stos
movs
jne
iret
xor
out
mov
mov
pop
pop
jmp
and
ins
push
loopne
repz
mov
cmps
mov
mov
inc
mov
dec
pop
sti
and
xor
jae
mov
pusha
mov
rcl
std
or
leave
mov
mov
cs
cmps
in
and
or
jno
dec
mov
fldenv
movs
(bad)
cmp
repnz
pushf
aad
es
in
out
xchg
cwde
xor
push
cs
inc
mov
mov
inc
push
lea
adc
pop
cmp
inc
test
pop
enter
in
add
in
arpl
in
js
sub
xor
retf
leave
jg
mov
push
shr
out
js
mov
jnp
ja
push
add
std
enter
cmps
pop
push
mov
mov
push
clc
dec
fucom
arpl
ret
scas
or
push
dec
lahf
sub
push
iret
imul
test
addr16
ins
imul
jbe
cmp
cmp
adc
paddw
mov
fisubr
push
loope
cmp
adc
div
stos
(bad)
push
jp
call
leave
in
dec
les
mov
ss
dec
(bad)
retf
aad
test
adc
(bad)
jnp
arpl
adc
pushf
xchg
dec
jle
out
lods
cmp
add
jae
popf
addr16
cli
cmp
pop
(bad)
mov
xor
clc
cmps
(bad)
sar
stc
stos
add
addr16
cmp
dec
leave
ret
ret
adc
lods
adc
retf
mov
xchg
mov
aad
push
xchg
mov
xor
daa
mov
push
push
add
mov
jno
push
and
or
in
add
jno
mov
inc
adc
sub
scas
sbb
xlat
lds
js
xchg
(bad)
fisttp
or
dec
daa
sbb
add
cmp
repnz
in
push
cmp
sbb
cmp
(bad)
mov
xor
sahf
mov
sbb
sub
sar
in
ret
dec
jmp
mov
std
push
sbb
scas
ret
mov
mov
jns
cmp
sahf
push
scas
cmp
call
imul
pop
pop
fst
xchg
sub
and
add
inc
fidiv
loopne
adc
std
sub
cmp
dec
sub
mov
cmp
pop
push
xchg
popf
pushf
cmps
push
iret
mov
adc
pop
sbb
cmps
and
push
pop
mov
inc
out
pop
dec
adc
test
xor
pop
push
ficomp
inc
aad
jbe
pop
cdq
add
mov
inc
popf
loop
cmc
mov
sub
in
inc
and
lahf
pop
cmp
pcmpeqw
dec
and
fldcw
dec
ja
pop
icebp
ins
jmp
cmp
fisttp
adc
xor
fistp
fisttp
mov
pop
call
fcomp
ss
add
inc
jl
add
lock
sahf
lods
popa
jl
cmp
cs
sbb
scas
into
dec
test
std
add
sbb
shr
fs
into
add
push
or
scas
leave
jg
inc
xchg
pop
aad
dec
addr16
mov
pushf
jb
and
inc
cdq
(bad)
and
mov
dec
movs
popf
inc
xor
outs
xor
adc
fidiv
mov
mov
mov
(bad)
mov
push
fiadd
lock
jb
nop
and
xchg
in
pop
push
retf
jg
dec
sahf
pusha
ror
jl
inc
fdiv
loope
rol
mov
push
xchg
dec
adc
stos
mov
cmp
pop
or
push
add
enter
push
push
sub
xchg
or
ins
mov
js
lods
mov
sbb
sbb
sub
and
jb
ror
stos
or
xchg
enter
or
pop
(bad)
stc
jge
ror
mov
mov
pop
mov
daa
hlt
jnp
add
fistp
adc
shl
popf
dec
fidivr
ficomp
fmul
dec
xor
mov
inc
sbb
dec
xlat
sbb
jp
arpl
neg
mov
aas
popa
out
xor
rep
xchg
mov
or
popa
aaa
mov
mov
pop
call
fmul
add
imul
hlt
jmp
mov
in
jle
push
movs
into
call
inc
sbb
test
retf
sti
pop
mov
inc
int
xchg
mov
xor
and
in
xchg
mov
cwde
xor
adc
imul
jnp
mov
xchg
in
mov
cmp
cmps
fadd
(bad)
push
test
mov
sub
movs
data16
pop
jmp
cmps
and
push
lds
jmp
icebp
mov
push
inc
rsqrtps
das
pop
cdq
pop
aam
es
xchg
adc
mov
jg
push
mov
cmp
ds
nop
sbb
lds
or
xchg
repnz
adc
fwait
xchg
rol
lock
paddusw
pop
mov
dec
aas
in
or
rcr
dec
scas
jb
mov
pop
mov
(bad)
aas
xchg
ss
movs
retf
scas
sub
and
pop
loop
cmps
xor
sbb
dec
fs
(bad)
loop
(bad)
sub
jns
out
dec
fisttp
dec
or
or
mov
mov
into
hlt
in
and
jnp
mov
mov
sbb
movs
pop
lods
sub
hlt
pop
cmps
jp
add
cmp
(bad)
mov
mov
push
xor
jecxz
fs
adc
fucomi
int
popa
xchg
pop
cwde
pusha
xchg
jae
rcr
and
inc
bound
cmp
ins
or
es
aam
loope
stos
cmp
ja
push
adc
inc
into
dec
cdq
cmp
cmp
pop
scas
and
mov
and
cdq
add
fcom
scas
jp
pop
daa
adc
outs
mov
mov
and
sub
xchg
push
inc
cmp
pop
stos
jecxz
mov
rcl
adc
ins
xchg
test
jmp
sbb
das
imul
mov
clc
nop
push
imul
iret
xlat
nop
aam
cmps
out
(bad)
pop
sub
repnz
inc
jl
aam
dec
xchg
adc
aaa
cmp
fisub
mov
data16
dec
test
add
arpl
or
test
iret
sub
add
clc
sub
sub
mov
push
mov
xchg
push
aaa
cld
adc
cmp
jecxz
lahf
(bad)
stos
xchg
int
mov
repnz
dec
jns
sub
imul
pop
or
(bad)
out
and
push
(bad)
sti
xchg
xor
push
inc
pop
unpcklps
inc
sub
aaa
xchg
out
cmp
push
daa
rcr
and
sub
pop
fidiv
jnp
xor
ins
shr
inc
pop
movs
sahf
xchg
mov
mov
sbb
or
xchg
das
jae
sub
xchg
lods
inc
sbb
in
test
dec
stos
add
and
add
(bad)
imul
aad
call
out
jmp
loopne
xchg
fild
in
inc
std
movs
mov
sub
xchg
scas
dec
and
(bad)
test
xchg
cmp
js
pop
or
ret
out
mov
stos
adc
popa
jl
dec
icebp
and
push
xor
jmp
jae
and
or
loope
push
fisub
inc
xor
enter
xor
add
mov
test
popf
cmps
retf
call
sbb
scas
cmp
cwde
cmps
aad
(bad)
add
pop
xchg
fsubr
mov
sub
push
add
jb
inc
pop
es
test
or
lds
or
imul
xor
std
inc
imul
push
mov
jmp
pusha
xchg
and
inc
push
aam
jnp
mov
inc
add
icebp
call
ret
jbe
or
mov
(bad)
pop
fldcw
adc
push
(bad)
aaa
popw
jns
xor
mov
arpl
pop
dec
jg
aad
iret
in
ins
mov
jge
mov
push
xor
push
cmp
fmul
pop
jns
pop
cmc
jmp
and
fmulp
movs
mov
or
cdq
bound
clc
add
push
mov
sub
inc
inc
mov
cdq
stos
inc
lods
add
adc
in
out
aaa
fs
loopne
mov
cmp
fcom
ins
inc
jae
outs
das
xor
psrld
jbe
mov
push
retf
pop
fadd
mov
arpl
sbb
xchg
fdivr
cmp
mov
nop
cmp
mov
inc
test
jb
inc
adc
stc
mov
mov
xchg
pushf
fsubr
ins
sbb
jmp
dec
or
mul
aas
xor
ins
out
stos
mov
imul
retf
adc
loope
sbb
mov
stos
sbb
arpl
ret
popf
int3
out
xor
inc
mov
out
adc
xor
neg
mov
mov
jmp
mov
scas
jbe
xchg
arpl
mov
mov
loope
inc
xlat
outs
and
scas
mov
xchg
pop
push
int
bound
pusha
(bad)
push
sbb
xchg
mov
dec
jne
jnp
hlt
arpl
adc
adc
enter
stos
sar
add
add
xor
sub
cs
fsub
jp
outs
mov
push
enter
mov
inc
in
push
cmp
nop
stos
nop
xchg
sub
and
jecxz
(bad)
push
outs
pop
stos
cs
or
shr
mov
mov
ds
xchg
or
xchg
aad
xor
cdq
mov
lods
mov
aaa
xchg
jge
jge
ror
push
out
or
dec
mov
lahf
inc
cmp
pop
shl
mov
sub
xchg
iret
ds
mov
jae
repz
cld
lea
ret
inc
dec
inc
jmp
pop
movs
(bad)
and
push
mov
mov
(bad)
rol
clc
cdq
cmp
pop
les
xchg
neg
sub
in
sbb
cmp
arpl
in
inc
inc
mov
mov
jmp
jmp
fdiv
mov
or
test
call
push
xor
jae
inc
mov
push
call
inc
add
sub
ja
adc
les
repnz
(bad)
icebp
retf
fist
adc
loopne
push
push
push
push
or
ret
je
into
enter
in
movs
mul
dec
mov
sub
dec
into
pop
(bad)
int3
pusha
lods
push
xor
mov
push
inc
mov
test
dec
repnz
sar
dec
(bad)
xor
xchg
pop
inc
lods
ins
mov
pop
sbb
std
xor
in
dec
inc
fmul
jb
sbb
mov
mov
shr
loopne
inc
xchg
dec
aad
(bad)
(bad)
push
pushf
pop
add
js
mov
xchg
std
lods
nop
out
xchg
or
jbe
ret
add
dec
push
cmp
cmc
jnp
adc
test
aad
dec
push
shr
outs
xchg
mov
jno
ss
and
ret
jne
pop
loopne
lahf
leave
or
sub
fucomp
mov
xor
mov
add
shr
ds
jg
pop
xchg
jne
xchg
shr
adc
dec
call
cmp
dec
int3
fwait
out
jecxz
pop
and
mov
setne
inc
inc
jno
test
pop
ins
mov
add
or
dec
xchg
mov
xor
int
xchg
call
and
dec
mov
cld
xor
sbb
test
pop
call
jmp
jae
mov
scas
cli
pushf
jo
inc
sbb
cmp
pop
mov
lss
inc
xor
not
add
cmps
mov
je
jb
mov
fs
mov
popa
int3
ss
inc
mov
or
cmp
sar
leave
pusha
and
or
xchg
ins
dec
inc
xchg
mov
leave
movs
std
xchg
(bad)
cdq
(bad)
jmp
cmp
stos
sbb
dec
dec
ins
or
xor
aas
or
aad
xor
loopne
lahf
dec
pop
(bad)
jne
shr
push
mov
pop
adc
lods
mov
ret
dec
inc
cmp
jle
mov
inc
(bad)
rcl
fstp
xchg
shl
(bad)
neg
loopne
mov
adc
mov
mov
neg
inc
arpl
xchg
out
or
movaps
movs
xor
mov
adc
adc
in
cdq
adc
movs
and
push
call
add
std
adc
enter
stos
push
jl
loopne
dec
idiv
xchg
add
test
mov
pop
in
repz
arpl
mov
or
vpcmpgtb
jg
push
test
adc
inc
cli
push
aaa
dec
popf
mov
pop
pop
add
jbe
inc
xor
jmp
pop
add
clc
pop
mov
or
xor
mov
or
jge
xor
sub
jmp
dec
call
push
cld
aas
fiadd
cmp
pop
push
fdivp
outs
dec
push
lods
xor
add
enter
in
sub
scas
add
cmp
jae
cld
cmp
cmp
clc
or
loopne
xlat
or
xchg
and
fcom
adc
in
sub
std
ss
mov
xchg
sub
jns
pushf
arpl
push
in
sbb
jmp
aaa
fcmovbe
shl
mov
arpl
mov
rcr
push
rcl
retf
stos
fs
cmp
jns
mov
in
les
out
xchg
lock
fistp
push
pop
loopne
movs
fwait
mov
dec
xor
stos
aad
fdivp
push
mov
inc
cwde
xor
repz
mov
push
addr16
cli
jno
je
std
mov
push
repz
xchg
mov
fsubr
lea
in
jp
mov
clc
adc
out
xchg
inc
add
popa
or
test
add
pop
dec
sub
movs
js
mov
mov
test
daa
stos
scas
xor
dec
(bad)
bound
xor
lahf
add
cmps
push
add
jbe
xchg
scas
mov
test
pop
add
ret
call
adc
fbstp
cmp
fidivr
cmp
fldenv
test
mov
test
mov
inc
shl
in
sbb
add
imul
sbb
jns
mov
cli
in
jl
jo
fwait
mov
in
ret
cmc
or
jno
adc
rcr
aas
xchg
adc
lods
cwde
pop
imul
arpl
jmp
ins
ja
jno
ins
dec
into
dec
mov
imul
call
clc
cmps
ret
leave
js
jecxz
clc
ins
lock
add
inc
cmps
jns
leave
movs
fisttp
sub
and
fcomp
scas
pop
mov
mov
cs
add
pop
xor
xchg
and
mov
sbb
dec
and
push
dec
jne
push
outs
cmps
push
movs
rcr
scas
mov
out
int3
(bad)
aam
jp
stos
adc
fist
pop
aas
fist
fisub
loope
add
mov
clc
out
jle
push
inc
icebp
sbb
lds
mov
dec
jne
enter
test
cmps
pop
enter
mov
lods
lods
xor
push
jmp
xchg
push
cmps
cmp
leave
mov
setno
and
push
push
sbb
mov
sar
push
add
nop
xchg
(bad)
out
mov
out
mov
add
sbb
shl
fsubr
or
cwde
out
sub
add
dec
ds
std
scas
test
ja
pop
or
sar
movs
and
shl
cmp
jg
mov
int
add
pop
pop
sahf
mov
dec
jnp
test
ins
clc
jae
(bad)
arpl
imul
sub
mov
or
pop
add
ret
dec
icebp
(bad)
jp
mov
rol
xchg
dec
scas
sub
in
add
out
movs
movs
movs
in
cmp
push
into
and
jl
es
outs
call
fistp
pop
dec
hlt
or
mov
popf
out
xor
cli
sub
shr
imul
sub
add
sub
jae
mov
pusha
pop
imul
jp
jg
pop
jp
ja
ror
mov
scas
fadd
add
mov
adc
sbb
add
adc
mov
mov
sbb
popa
jmp
pop
ficomp
int3
rcl
jno
(bad)
or
cli
mov
sbb
repnz
sbb
loop
imul
sbb
push
ja
jmp
ds
sbb
ror
cmp
xor
adc
mov
stc
xchg
(bad)
std
push
push
and
cmp
mov
pop
test
sub
inc
out
nop
jnp
test
in
lock
push
cdq
add
lock
push
dec
jno
push
cmc
mov
push
mov
outs
and
mov
push
sbb
xor
ja
call
pop
mov
pop
cmp
out
dec
push
mov
clc
data16
sbb
cmp
mov
jp
xor
mov
ret
ins
jp
mov
inc
outs
cs
loope
fcmovb
ins
mov
and
pop
lods
add
add
jo
and
inc
jnp
mov
mov
or
dec
dec
test
and
xor
sub
push
mov
jg
push
xchg
jbe
mov
push
sub
jns
outs
aad
xor
or
sub
xor
scas
jae
popa
sbb
dec
mov
inc
inc
jmp
(bad)
push
lock
enter
arpl
aam
inc
out
rcl
jecxz
pop
leave
mov
je
(bad)
xacquire
out
push
cmp
sbb
loopne
xchg
shl
bswap
dec
jecxz
std
loopne
mov
fild
lods
inc
pop
sub
int
mov
stc
mov
add
inc
cld
or
xor
shl
sub
loope
int
jae
or
xchg
dec
nop
inc
(bad)
int
add
add
loope
push
mov
rol
or
ins
rcr
sub
push
in
xchg
cmp
pmulhuw
cmp
adc
jle
cmp
addr16
test
test
cmc
xor
aad
aas
inc
add
sbb
adc
mov
fsub
adc
mov
(bad)
mov
or
stc
cmp
fdivr
popf
repnz
inc
xchg
shl
inc
fadd
mov
mov
cwde
sub
jmp
outs
popa
sbb
cmps
and
xchg
inc
xlat
lea
sub
fisubr
retf
push
outs
je
mov
mov
add
pop
lea
push
sub
ret
mov
adc
imul
push
cmp
and
lock
cmp
pop
push
pop
jle
add
out
inc
cmc
pop
push
test
jle
mov
(bad)
xchg
ror
or
jp
dec
push
push
shr
sbb
dec
or
cmps
(bad)
ror
cwde
call
push
xchg
xor
ds
mov
mov
sbb
int3
int3
mov
xchg
push
push
into
mov
aas
popf
pop
xor
or
in
(bad)
dec
(bad)
fs
cs
mov
mov
or
sbb
push
add
add
mov
add
adc
pop
add
jmp
mov
xchg
push
cs
sub
and
out
and
mov
popa
dec
js
push
sbb
xor
int
shl
push
aas
mov
and
int3
(bad)
out
cs
lock
or
push
xchg
out
fwait
stos
outs
cmp
out
jae
test
fimul
and
out
lods
lock
push
mov
inc
jbe
jle
lock
popa
push
sub
stc
jle
fcmovu
iret
push
sbb
popf
mov
pop
xchg
ror
ins
repz
sahf
outs
clc
jmp
scas
and
movs
fidivr
xor
xor
add
xchg
add
xor
fs
scas
fdiv
xchg
pop
mov
mov
dec
inc
imul
jno
mov
in
mov
pop
stos
lds
jecxz
sbb
ror
les
pop
outs
aas
call
mov
cmps
push
pusha
fst
in
sar
push
push
jge
data16
out
hlt
pusha
int
arpl
inc
es
push
cld
lods
pop
(bad)
mov
popa
dec
cdq
sbb
mov
jae
mov
pop
mov
pop
mov
out
sti
add
sbb
sub
adc
(bad)
outs
stos
xlat
dec
call
jecxz
cwde
add
jnp
lods
ror
fdiv
dec
xchg
sti
xchg
add
xchg
cmps
and
sbb
adc
mov
pop
sbb
add
repnz
ret
dec
jp
inc
mov
xchg
loopne
into
enter
sbb
jae
push
mov
icebp
push
dec
sub
out
xlat
ds
mov
inc
dec
inc
dec
and
dec
xchg
sub
je
cli
stos
sbb
xchg
ret
ja
mov
dec
cwde
inc
je
pop
add
jle
jmp
(bad)
lea
jecxz
imul
lods
mov
adc
mov
xor
out
mov
xor
mov
fldpi
push
pop
mov
mov
sbb
push
or
std
out
add
std
out
mov
(bad)
cli
jge
mov
fmul
aam
call
mov
fst
mov
pop
lock
xor
lods
ins
xchg
mul
dec
sbb
dec
out
clc
addr16
test
in
stos
test
daa
cmp
xchg
sbb
mov
addr16
cmp
test
lods
jp
or
lods
out
pop
test
stos
lods
mov
cmps
enter
lods
fs
pushf
jp
fs
fcom
push
lock
inc
mov
fnsave
cmp
mov
mov
sahf
or
cmps
lds
js
mov
xchg
out
imul
sahf
mov
ins
and
cdq
mov
sub
push
std
sub
jne
sbb
jns
repnz
les
fdiv
lahf
mov
xchg
push
cs
repnz
xchg
mov
mov
fwait
inc
add
mov
movs
test
sbb
push
dec
shl
ins
jno
mov
cmp
sbb
arpl
mov
loopne
pop
push
lds
ffree
adc
cmps
daa
iret
fcomip
xchg
xlat
and
ss
test
or
jae
(bad)
adc
mov
xchg
pop
out
add
mov
cmps
mov
add
es
pop
pop
fcomip
addr16
call
inc
pop
ret
jbe
test
fmul
sbb
outs
mov
xchg
loopne
(bad)
adc
xchg
movs
mov
mov
or
in
retf
ffreep
loop
movs
pop
dec
test
loopne
adc
shl
dec
pop
jle
pop
pop
xchg
dec
mov
mov
cmp
mov
fdivrp
js
adc
xchg
pop
in
mov
dec
(bad)
xchg
mov
jne
sbb
(bad)
xchg
push
and
mov
dec
xor
inc
pushf
add
popa
fdivr
cmps
cs
repz
pop
cmp
mov
(bad)
repnz
cmps
mov
in
lods
shr
xor
dec
mov
sbb
cmps
into
aam
push
outs
mov
push
in
sub
push
cmp
call
cmp
sub
push
mov
mov
sbb
addr16
(bad)
pushf
ds
mov
mov
or
pop
dec
pushf
nop
ins
(bad)
icebp
lock
aaa
sbb
pop
mov
push
cmp
je
call
jle
mov
pop
cwde
push
push
sub
ja
lds
cdq
gs
pop
sub
dec
cmp
sti
inc
dec
pop
pop
(bad)
repnz
fwait
adc
dec
adc
lea
stos
arpl
in
(bad)
addr16
in
jp
jge
jge
cdq
dec
mov
push
push
loope
push
jecxz
in
mov
sbb
int3
in
xor
mov
jge
mov
scas
sbb
jnp
fwait
in
test
inc
and
int
push
rcl
push
pop
retf
sti
push
sahf
add
push
xlat
mov
popa
call
dec
inc
in
lods
push
fidivr
mov
add
aam
loop
or
retf
pusha
and
sub
lea
clc
vmwrite
jl
aaa
pop
rol
mov
jns
sahf
add
or
inc
inc
test
ins
push
aad
ret
cld
mov
cwde
sub
sbb
ins
aaa
ror
add
cmp
lds
or
fidiv
sub
xchg
aas
push
cmps
hlt
std
jns
jmp
jb
lods
pop
movs
in
pop
pop
push
(bad)
inc
push
pop
and
add
pop
pop
sub
xchg
pop
imul
jg
(bad)
pop
sub
lahf
clc
retf
mov
fimul
push
sub
es
cdq
fwait
sub
pusha
xabort
lods
cmovl
mov
loope
cdq
pop
shr
scas
sbb
mov
xor
cwde
add
xor
pop
cmp
pop
xor
or
neg
retf
rol
retf
ins
cmp
jecxz
xchg
idiv
xor
or
pop
dec
pop
or
add
jl
int
mov
ficomp
adc
ror
add
xchg
add
aad
(bad)
(bad)
xchg
mov
mov
mov
sbb
inc
outs
push
out
inc
call
xlat
and
dec
in
retf
sbb
jg
ss
mov
mov
(bad)
clc
es
aam
dec
jmp
mov
xchg
push
lea
sbb
mov
outs
mov
shr
(bad)
popf
lods
mov
and
adc
dec
imul
sti
mov
arpl
sar
cmp
push
xor
xchg
shl
mov
data16
pushf
jg
or
jns
inc
stos
clc
lock
or
(bad)
fisub
mov
cmps
stos
dec
sub
mov
adc
fmulp
inc
xchg
es
imul
aas
push
xchg
mov
call
xchg
jb
dec
std
je
pop
ins
dec
lods
push
ret
(bad)
mov
sub
cmp
dec
mov
scas
or
popa
daa
ja
jnp
mov
jecxz
mov
lods
add
movs
(bad)
lahf
adc
movs
iret
mov
in
scas
icebp
in
in
movs
xchg
idiv
fmul
lods
loop
ror
sbb
cmp
sbb
test
ins
mov
xor
call
mov
fimul
aas
aas
ds
into
mov
loop
mov
adc
add
pop
inc
pop
xor
mov
pop
std
shl
iret
(bad)
out
mov
sbb
out
add
jae
sbb
clc
xor
pushf
in
xchg
or
inc
int3
and
mov
(bad)
aad
retf
cmp
mov
mov
mov
popa
movs
shl
and
or
lods
dec
js
in
and
outs
cmp
cs
push
(bad)
fdivr
sbb
out
add
scas
dec
or
or
mov
xchg
xchg
iret
pop
repz
pop
jno
fadd
xor
cwde
jle
sbb
cli
jp
mov
sar
sub
cmp
and
inc
or
mov
aaa
inc
aam
(bad)
out
lahf
jg
jo
jo
pop
stc
call
sar
mov
loop
push
jl
mov
mov
sub
(bad)
xchg
xor
jns
adc
icebp
es
(bad)
pop
xor
pop
mov
cmp
retf
lock
inc
enter
dec
inc
jne
(bad)
mov
loope
jl
sub
push
outs
aam
in
cdq
aas
or
or
inc
div
fdivp
fild
jbe
retf
sbb
dec
outs
push
(bad)
in
dec
dec
enter
retf
cld
and
pop
test
rol
xchg
mov
jge
xchg
out
les
jl
loope
ins
fs
cs
popf
(bad)
mov
push
push
lds
pop
jmp
push
repz
inc
push
xchg
fdivr
sub
push
push
pop
or
xchg
jge
scas
mov
sti
fwait
cmc
jge
jmp
xchg
leave
dec
std
xchg
push
cwde
stc
icebp
scas
or
(bad)
xchg
jbe
mov
and
mov
mov
push
call
cmc
dec
shl
cmp
sub
sub
fidiv
mov
sub
inc
cmp
jnp
push
mov
inc
adc
pop
ret
rcr
jmp
stos
dec
lds
sete
mov
cwde
push
or
push
not
dec
in
aad
jo
pop
add
inc
push
lods
cmps
lahf
pop
fcom
add
lahf
pop
ins
pop
dec
fs
cmp
cmps
push
ret
mov
popf
(bad)
loop
repz
ss
jo
sahf
sbb
and
aas
movs
push
mov
and
jno
cmc
pop
xchg
add
ds
push
mov
pop
pop
adc
mov
or
aad
pop
rep
xchg
pop
xor
cmps
lds
inc
mov
pop
loop
mov
imul
and
pop
add
or
aas
in
cmps
sbb
and
pop
xor
cli
imul
or
ret
test
or
xchg
lock
out
cmp
or
or
pop
sar
dec
or
fcom
mov
mov
mov
dec
cmc
cmp
in
stos
int
loope
mov
mov
add
int
jmp
fisubr
in
jnp
jnp
sti
sti
adc
loopne
arpl
(bad)
inc
mov
(bad)
cmps
push
sbb
and
jno
fs
xchg
out
(bad)
pop
popa
and
mov
jp
hlt
rcl
mov
xchg
push
leave
mov
stos
inc
inc
cmp
mov
rcr
stos
out
xor
mov
ds
mov
mov
push
outs
fsub
cs
(bad)
scas
into
xchg
sti
inc
imul
lods
xchg
repnz
push
mov
sbb
jb
in
and
ret
push
daa
inc
nop
add
aad
and
es
mov
in
std
jle
cmp
in
push
push
(bad)
add
and
or
test
dec
test
xchg
jmp
repnz
push
movs
rcr
push
(bad)
cmp
mov
ret
mov
add
test
adc
mov
pop
sbb
cdq
and
mov
fstp
retf
xchg
mov
or
hlt
shr
add
(bad)
mov
ficomp
js
jmp
jecxz
fscale
mov
sub
xor
sub
hlt
dec
jne
or
adc
mov
lods
sbb
jecxz
lods
sbb
sub
sahf
adc
cmp
mov
xchg
jns
gs
jmp
pop
mov
outs
push
(bad)
stc
jmp
ins
or
pop
mov
jmp
or
xchg
cli
mov
daa
xchg
ror
lods
sub
shl
jae
(bad)
mov
je
mov
outs
sub
fnstenv
ret
inc
mov
sbb
mov
and
xchg
sti
test
mov
mov
jmp
dec
or
gs
xchg
jmp
sti
xchg
sbb
cmp
or
iret
lods
mov
popf
xchg
jl
ja
dec
mov
ds
push
cmp
or
mov
sti
pop
(bad)
jge
jecxz
bound
add
loopne
and
adc
xchg
pop
hlt
movs
cmp
(bad)
rcl
in
xor
or
jae
mov
sub
xchg
cmp
ins
mov
out
xlat
pop
sbb
(bad)
mov
ja
add
(bad)
push
outs
mov
(bad)
das
mov
cmp
shl
and
ficomp
sub
addr16
adc
add
hlt
sahf
xlat
rcl
jb
pop
lds
or
daa
jnp
pop
ins
in
out
(bad)
loopne
sbb
sbb
mov
pop
sbb
hlt
stos
inc
xchg
inc
mov
or
mov
pop
cdq
cmp
jbe
mov
dec
xchg
jl
hlt
das
jmp
mov
pop
out
test
add
push
pop
dec
call
mov
pop
inc
xchg
push
adc
aam
jmp
push
pop
sar
test
dec
js
dec
data16
inc
enter
mov
pop
adc
fwait
shl
sub
add
shr
out
scas
inc
cmp
jnp
adc
lahf
loope
xor
xchg
dec
std
jbe
or
and
sub
add
ins
sbb
imul
xchg
adc
jo
outs
shl
xlat
stos
push
out
mov
mov
push
push
movsx
out
cmp
jp
jo
pop
pop
jge
imul
sub
add
(bad)
and
jle
lock
(bad)
and
or
into
add
loope
popa
js
xor
and
mov
mov
out
add
cmp
out
mov
and
jb
xor
cmp
rol
mov
lahf
repz
test
mov
jbe
jg
gs
inc
ins
aam
cmp
push
dec
or
aad
mov
push
dec
xor
lds
mov
sar
lahf
jo
adc
pop
adc
inc
mov
rol
push
popa
add
sahf
mov
ds
stos
dec
popf
push
mov
mov
sbb
cdq
movs
add
dec
mov
retf
add
in
xlat
sbb
push
push
jae
mov
adc
pop
aaa
movs
sbb
jnp
jmp
aam
out
pop
stos
mov
push
mov
mov
adc
mov
int
mov
in
mov
inc
daa
loope
sub
sub
xor
xchg
std
push
jno
sbb
movs
out
dec
sbb
push
cmp
jae
and
mov
movs
push
xlat
xchg
loope
and
dec
bound
repnz
adc
push
dec
jb
mov
push
xchg
mov
xlat
pop
not
pop
mov
mov
in
out
test
dec
je
mov
inc
in
mov
jb
jno
xor
jae
daa
or
paddq
mov
test
jg
nop
movs
mov
dec
cmp
or
push
pop
bound
sub
cwde
push
out
rol
ins
bound
and
inc
sub
cmps
mov
fimul
mov
mov
push
jle
push
or
adc
out
push
adc
sbb
and
lahf
ins
(bad)
std
jl
xchg
adc
pop
(bad)
call
fwait
push
xchg
retf
inc
mov
retf
mov
imul
push
adc
call
xor
sub
mov
adc
adc
retf
aam
outs
ret
fs
push
add
xchg
sub
pop
fwait
fwait
call
popa
xchg
mov
das
lods
in
adc
aaa
cmc
loop
lock
js
outs
push
repz
call
dec
push
lds
jg
stos
mov
iret
cdq
sbb
xor
xchg
cdq
ret
mov
xchg
inc
cmc
ja
jge
adc
call
les
mov
retf
pop
push
and
and
adc
add
dec
je
sub
and
jno
clc
stos
iret
ficomp
cmp
inc
das
stos
stos
(bad)
mov
lds
aam
xchg
push
loope
popf
inc
xor
mov
or
jo
(bad)
out
in
jmp
pop
clc
xchg
or
and
mov
sbb
pop
dec
stos
adc
xor
mov
movs
adc
sub
jmp
add
(bad)
jmp
leave
dec
imul
xor
call
mov
xchg
call
push
fs
pop
xchg
(bad)
mov
sub
call
push
std
cmp
(bad)
cmc
repz
pop
inc
and
and
or
push
pop
loopne
mov
daa
add
inc
ss
(bad)
in
loopne
arpl
test
repnz
fisttp
add
mov
popa
pop
adc
dec
rol
fidivr
and
ja
call
xor
test
cmc
sbb
jmp
dec
pop
lea
in
mov
js
mov
pop
hlt
add
mov
aam
pop
or
(bad)
outs
pop
xor
out
in
test
pop
mov
xor
mov
into
aaa
push
mov
adc
mov
pop
in
sub
and
loopne
dec
aaa
mov
mov
inc
xchg
ja
fcom
mov
scas
loopne
(bad)
and
cmps
call
enter
xor
cmps
mov
dec
int3
ret
ins
jp
adc
loope
add
call
or
mov
push
inc
stc
bnd
xor
cs
dec
xchg
adc
dec
int
cmp
xchg
fadd
cmp
adc
push
lock
ins
inc
cs
push
or
popa
jmp
call
test
inc
mov
ficom
cs
cs
push
adc
lods
pop
dec
push
jbe
mov
test
out
add
cli
rcr
pop
in
loopne
(bad)
or
add
push
inc
test
pop
mov
adc
adc
add
repnz
mov
and
scas
in
pushf
pop
cmps
test
dec
ret
scas
jmp
inc
cmp
pop
stos
xchg
mov
popf
bound
ins
mov
jno
mov
jmp
cmp
hlt
stos
cld
test
xchg
dec
std
sbb
push
ja
mov
mov
inc
sub
cli
xor
mov
push
pop
xchg
adc
and
int3
imul
cmp
push
je
ror
enter
xchg
fs
stos
movs
xor
scas
cmp
test
into
test
push
ja
fisttp
sbb
in
pop
add
xor
add
scas
enter
sub
pop
call
xor
lahf
mov
lods
enter
xchg
xchg
inc
mov
push
loope
dec
ds
and
out
jg
std
aaa
shl
jmp
xor
arpl
jbe
fstp
pop
or
push
aam
mov
lahf
fprem
ficomp
push
lods
outs
push
call
fwait
retf
pop
jb
ins
cmp
outs
mov
sbb
xor
pop
cdq
push
cmps
in
adc
add
push
add
mov
scas
xor
sbb
icebp
es
adc
int3
jno
jmp
jns
test
and
jmp
or
js
push
adc
rol
aas
inc
add
cdq
iret
(bad)
fcmovbe
xor
imul
mov
nop
sbb
out
pusha
jg
dec
fcom
mov
in
xchg
loop
adc
ficom
mov
sbb
mov
and
ror
test
mov
arpl
les
sar
add
out
call
jne
push
mov
or
or
repnz
pop
jno
jp
sbb
jae
adc
daa
xchg
les
ds
les
fdivr
enter
push
fs
mov
or
cmp
dec
cmp
stos
mov
pop
sar
sbb
mov
xor
xchg
and
push
mov
out
pop
add
inc
shl
and
push
jns
fyl2xp1
mov
mov
push
shl
xor
xchg
imul
mov
invd
jecxz
mov
or
pop
call
sti
add
or
cmp
pop
dec
gs
mov
push
(bad)
and
fsub
and
xor
sti
maxps
push
mov
xchg
pop
aas
pop
(bad)
out
jno
data16
xchg
das
mov
or
arpl
mov
in
inc
mov
test
mov
icebp
jg
fstp
fadd
lea
xor
mov
sbb
ja
inc
sub
xchg
sbb
and
sti
cmps
jg
pmulhuw
and
(bad)
cdq
sbb
mov
loop
cld
push
sub
fmulp
xor
inc
inc
cmp
ins
iret
cmp
and
dec
std
je
adc
dec
pop
push
jno
cld
fmul
add
in
sbb
iret
lea
or
jno
mov
and
jmp
cmp
loopne
xor
push
sar
rcr
aas
cmp
xchg
stos
pop
jo
stc
push
inc
jle
pop
(bad)
mov
dec
add
xchg
push
mov
dec
jecxz
or
nop
push
xchg
cld
inc
cmp
out
sub
mov
xchg
stos
fs
add
sbb
jnp
fucom
ret
loop
inc
or
icebp
xor
and
scas
(bad)
div
out
push
dec
aad
out
mov
jns
sub
and
xchg
leave
xchg
dec
in
addr16
pop
add
lahf
cld
mov
xor
pop
test
xchg
or
inc
inc
enter
add
nop
jle
lock
adc
ror
sbb
outs
stc
(bad)
test
xchg
cld
test
pop
pop
push
sbb
stc
cmp
sahf
push
xchg
out
or
mov
repnz
sahf
inc
loope
or
pop
xchg
and
adc
add
pop
mov
outs
pop
pop
int
dec
aaa
mov
push
dec
or
fild
fcom
pop
push
out
cld
inc
cmps
jecxz
xor
je
add
adc
mov
or
mov
pop
jo
mov
or
sti
repz
inc
inc
push
xacquire
stos
mov
(bad)
mov
ret
cmp
das
ret
sbb
add
(bad)
pop
int3
mov
sub
sbb
sbb
(bad)
call
je
adc
and
sub
mov
fsub
adc
ja
and
jl
mov
jg
or
mov
jl
dec
(bad)
ds
inc
int3
frstor
and
mov
rol
bound
dec
loop
pmuludq
xchg
inc
mov
loop
call
enter
dec
icebp
icebp
sti
bound
inc
push
fdiv
ror
sahf
pop
xchg
movs
pop
pushf
xor
inc
mov
jne
les
pop
cmps
adc
ficomp
imul
ins
icebp
scas
hlt
rcr
inc
aas
xor
mov
popa
cmp
lds
loopne
iret
xor
sbb
jl
sahf
xor
and
cmc
cs
push
rcr
push
xchg
or
(bad)
push
es
or
push
lea
ja
inc
cmp
xchg
sbb
add
not
mov
jae
push
cmp
pop
ret
(bad)
ins
std
mov
mov
(bad)
in
leave
iret
or
into
inc
call
xchg
xchg
adc
aas
std
ins
in
or
test
repnz
std
sub
in
cdq
mov
jns
mov
imul
rol
pop
mov
xor
int3
sub
cmp
inc
cmp
inc
mov
cwde
inc
push
popf
repz
jno
push
cmps
jmp
add
push
pop
mov
ret
aaa
fwait
dec
mov
(bad)
sti
sbb
shl
fidiv
and
outs
xor
mov
fsubr
pop
dec
adc
sub
jns
sbb
mov
xor
in
repz
xor
xor
fiadd
std
movs
adc
push
aad
sub
cwde
adc
dec
adc
xor
sub
retf
pushf
fmul
ja
inc
repz
mov
xor
mov
push
fs
les
ja
inc
iret
push
sub
sub
mov
sbb
xchg
mov
jns
stc
pop
xlat
(bad)
mov
mov
push
pop
imul
lods
mov
sahf
mov
ficom
sub
out
mov
hlt
js
sbb
scas
repz
mov
pop
pop
push
cmp
mov
dec
cwde
jle
cld
and
in
mov
mov
xchg
mov
push
add
pop
inc
and
stos
popa
push
mov
scas
cwde
add
sub
clc
js
call
adc
into
(bad)
xor
sub
scas
int3
jo
xchg
xchg
fxam
inc
imul
dec
sub
push
loope
fwait
push
sub
mov
fbstp
daa
loop
dec
pushf
pop
mov
std
ret
sub
lods
or
inc
(bad)
adc
nop
pop
in
jae
cld
or
and
fwait
add
sub
push
sub
push
fild
xchg
sar
mov
dec
in
lea
fldcw
das
(bad)
pop
sti
push
jbe
fst
aad
push
cdq
repnz
sti
mov
nop
rcr
rcr
push
out
out
fist
mov
sub
mov
(bad)
cmps
pusha
pushf
sbb
ins
or
push
stc
adc
mov
movs
(bad)
clc
bound
or
popa
pop
call
cli
and
cdq
push
inc
adc
and
fnstsw
stos
lea
aad
pop
jg
and
adc
stos
inc
int
inc
ss
sub
and
iret
add
in
pop
push
gs
or
es
mov
jno
adc
jle
popa
into
or
imul
rol
ret
js
outs
fcmovbe
or
or
cmp
mov
not
fsub
xor
stos
ror
mov
pop
push
lds
push
cmp
sub
mov
fwait
popa
adc
je
cwde
(bad)
in
shl
int3
idiv
arpl
push
xor
aad
out
xchg
lock
add
(bad)
es
add
sub
(bad)
mov
inc
mov
sbb
jmp
push
mov
pop
add
sbb
mov
arpl
in
xor
aaa
popa
xor
cli
pop
lahf
outs
loop
jmp
rcl
jmp
int3
test
int3
dec
retf
push
int3
mov
or
mov
aaa
mov
xchg
cmps
fs
jb
mov
jmp
push
mov
data16
sar
(bad)
fcomp
mov
loop
sbb
sbb
xsaveopt
and
xlat
shr
push
cmp
xchg
push
xchg
push
jecxz
enter
mov
jo
shl
ret
push
sub
push
or
jne
and
les
bound
imul
fwait
nop
xor
fwait
mov
retf
mov
dec
movs
cli
jbe
stos
(bad)
and
ror
pop
out
sahf
or
outs
dec
add
enter
xchg
pop
push
jb
in
cwde
adc
push
mov
(bad)
imul
push
mov
inc
mul
xchg
in
and
xor
fs
fnstcw
mov
or
jl
aas
cmp
les
add
(bad)
sub
aam
pushf
or
movs
cwde
inc
imul
push
pop
(bad)
ret
push
in
inc
dec
jno
stos
mov
lahf
sub
stos
jnp
fcomp
test
sub
sbb
push
cwde
fnsave
out
jae
inc
pop
test
dec
adc
je
or
push
pop
bound
or
jnp
adc
add
movaps
inc
out
xchg
xor
xchg
movs
mov
cmp
or
ja
inc
jge
sti
int
je
les
xchg
icebp
imul
enter
xchg
push
xor
add
mov
xor
cmps
cmp
mov
jg
jo
inc
test
enter
test
inc
or
push
adc
mov
mov
inc
lds
xor
mov
push
outs
xchg
jnp
pushf
imul
sub
bound
jbe
repz
pop
pop
pop
ja
push
fld
sbb
sub
ficom
push
fldenv
call
mov
popf
loop
pop
arpl
lahf
jmp
cmp
aaa
pop
call
fsub
out
les
imul
ds
xchg
rcl
arpl
fs
jp
xchg
sbb
pop
(bad)
popf
pop
(bad)
fcomp
xchg
mov
lahf
lds
sbb
or
nop
test
dec
and
xor
int
movs
cli
lods
jns
test
xor
dec
adc
test
repnz
sub
rol
xor
cld
inc
sub
neg
aaa
call
push
add
dec
out
cmp
shl
sub
mov
es
push
pop
pop
xor
shr
enter
fwait
cmc
mov
fdivr
cmp
(bad)
cmp
sbb
push
sub
jae
ja
push
sbb
mov
cli
cmps
or
cli
popa
(bad)
and
push
stc
arpl
xchg
inc
add
imul
dec
out
jno
test
mov
mov
cs
adc
lea
rcl
popf
cmc
dec
scas
loop
dec
fistp
mov
movs
mov
stos
pop
jnp
rol
adc
add
shl
and
mov
lock
(bad)
sbb
setae
xchg
iret
pop
stos
sahf
cmps
mov
into
stos
(bad)
aad
xor
inc
lock
push
xor
imul
adc
sub
out
mov
xor
adc
mov
movs
xor
rcr
mov
(bad)
pushf
ins
and
inc
jle
inc
loop
push
out
daa
mov
cmp
and
nop
push
jb
adc
mov
adc
jae
pop
daa
(bad)
ret
ret
test
dec
push
sahf
scas
push
es
pop
pop
sbb
idiv
jge
push
xchg
pop
push
push
push
xchg
fwait
lods
fld
(bad)
sbb
and
test
jbe
fs
jns
and
inc
stc
push
pop
cmp
mov
mov
xchg
pop
mov
jle
dec
mov
icebp
adc
loop
or
js
enter
ror
add
rcl
jmp
xor
sub
push
fst
test
scas
inc
push
enter
movs
cmp
xor
mov
sti
mov
cmp
mov
adc
ret
xchg
jmp
cmp
sub
adc
push
ret
jbe
out
(bad)
int3
jecxz
and
(bad)
mov
sbb
shl
out
jns
ins
sbb
pop
mov
lahf
push
and
mov
mov
dec
js
mov
dec
sbb
mov
cs
xchg
les
cmp
aad
inc
xchg
add
aad
xor
into
adc
aam
(bad)
cmp
enter
gs
mov
dec
xor
lahf
daa
ror
jae
test
out
xchg
into
add
ret
jge
pop
sahf
push
mov
jae
xor
jno
not
pop
adc
or
fsubr
push
outs
sub
mov
inc
pusha
jmp
jae
cmp
in
jle
lahf
out
retf
lock
fsubr
shl
xchg
and
fcomp
mov
shl
sub
add
jno
movs
rcr
xor
(bad)
test
xchg
cld
xor
in
ret
test
push
fidiv
les
or
mov
mov
in
sub
dec
iret
or
mov
mov
repnz
aad
shr
pop
add
and
sti
je
inc
(bad)
repz
inc
xchg
cmp
xor
movs
outs
fld
popa
daa
mov
leave
xor
mov
push
imul
clc
aaa
fst
loope
mov
pop
push
cwde
or
push
xchg
pop
jnp
aas
jmp
test
retf
inc
adc
(bad)
fisubr
sub
adc
push
jns
icebp
jne
ja
mov
retf
mov
dec
add
inc
and
pop
data16
push
leave
aam
and
add
mov
mov
mov
jne
lock
adc
mov
fcmovnbe
cmps
icebp
pop
mul
xor
ja
inc
inc
rcr
adc
mov
sub
inc
and
das
aam
mov
mov
cmp
imul
sahf
adc
fstp
and
je
aad
mov
es
fisttp
popf
and
clc
and
jp
or
xchg
pop
sub
or
stos
fldenv
mov
jp
imul
sti
out
xor
jge
out
bound
pop
cs
add
push
adc
jl
retf
or
inc
dec
and
pop
(bad)
cmp
mov
sub
and
dec
xchg
ins
lds
jp
test
imul
jle
jle
mov
jecxz
add
inc
(bad)
or
std
cmps
jmp
xor
outs
js
cmps
push
sub
call
nop
imul
lahf
inc
stc
adc
ret
jp
call
(bad)
cmps
pop
inc
mov
push
packssdw
pop
retf
sbb
pop
mov
stc
or
cs
fs
push
pop
bound
cs
repz
or
sub
xor
xor
add
js
stos
cmp
dec
jno
or
push
lea
sub
xchg
and
push
js
xlat
ret
or
idiv
jnp
out
mov
and
(bad)
adc
jge
cmc
repz
call
cdq
mov
push
jb
jmp
(bad)
and
fs
out
sbb
dec
add
mov
sbb
or
imul
pop
jbe
(bad)
jnp
popf
scas
adc
push
or
fstp
icebp
inc
mov
sbb
add
xchg
mov
add
adc
dec
sub
lods
mov
adc
add
pop
and
add
lea
xchg
pop
jnp
jle
div
rcr
aas
xor
fild
dec
cmps
jg
push
add
lods
scas
sub
out
jl
pop
in
mov
daa
push
ds
mov
ins
mov
stc
mov
aad
mov
and
shl
(bad)
retf
test
xchg
or
loope
cmp
and
or
shr
scas
mov
sbb
mov
adc
pop
add
test
xchg
lods
add
loope
xchg
push
mov
cmp
or
fdiv
lds
xchg
popf
pop
sbb
gs
mov
pop
xchg
xchg
rcl
or
(bad)
jo
les
pop
clc
pop
mov
aaa
imul
(bad)
outs
mov
xlat
sbb
xchg
sbb
cmp
sar
inc
lock
mov
jmp
inc
loope
test
dec
fsub
sub
es
and
fbstp
xor
push
dec
into
and
cmp
xchg
push
xchg
jmp
dec
cwde
cld
ja
ins
add
ss
xchg
xchg
shr
stos
jp
stos
cli
mov
jb
xor
pop
enter
and
loop
cmp
jp
adc
mov
dec
mov
add
sub
mov
mov
pslld
cmp
cmp
popa
(bad)
xchg
fs
dec
cmp
sti
pop
mov
call
pop
xlat
test
ficomp
ins
sbb
retf
pop
xor
dec
sbb
gs
dec
cmp
cwde
clc
xor
fsubp
out
and
mov
cmp
test
sbb
or
adc
mov
mov
push
aam
jp
xor
movs
jecxz
sbb
daa
out
jge
fadd
push
mov
lods
fisub
add
jnp
out
imul
sub
or
outs
push
dec
pop
clc
jle
dec
jno
or
pop
adc
sbb
aad
cmp
pop
test
test
and
pop
inc
or
pushf
bound
aam
(bad)
mov
xchg
lahf
scas
xor
ja
cmp
adc
fisttp
jae
jo
sbb
into
je
push
mov
out
xor
mov
push
push
sbb
cs
ret
xor
and
xchg
test
or
sahf
icebp
xchg
hlt
sahf
loope
fistp
mov
mov
add
jmp
mov
sub
mov
neg
jecxz
lds
jae
jmp
or
fadd
or
jns
fdivr
pop
add
leave
hlt
adc
or
sub
mov
aas
pop
jecxz
jbe
leave
loope
je
jne
hlt
shl
jne
aaa
enter
jnp
cmc
mov
xor
les
dec
not
mov
int3
dec
or
cmp
xor
imul
out
rol
push
mov
dec
fidiv
cli
aaa
enter
pop
push
sub
mov
mov
cdq
aaa
cld
jns
jno
push
sbb
xchg
sub
push
cmp
mov
mov
in
stos
push
sub
xchg
lahf
sbb
in
pop
pusha
popf
dec
ret
xchg
xchg
call
cmp
fisub
lahf
and
cmps
inc
cmps
mov
mov
pop
out
jecxz
push
push
repnz
add
in
jae
neg
outs
adc
push
inc
dec
xchg
push
or
shl
push
int
add
aaa
lea
push
xor
dec
popa
lds
push
out
mov
push
push
sti
shl
xchg
add
jbe
dec
(bad)
std
int
int3
jle
jns
cmp
inc
xchg
mov
push
movs
inc
jb
mov
pop
out
inc
int3
sub
fist
jge
push
jl
xchg
sar
imul
bound
sbb
push
lods
rcr
dec
mov
cdq
pop
popa
stos
mov
movs
xchg
mul
aaa
inc
xor
ror
pop
fbld
add
mov
clc
jle
jns
inc
loope
cmps
repnz
inc
mov
ins
ficomp
cmp
adc
test
loop
inc
movs
cdq
or
push
inc
push
pop
icebp
jecxz
jb
addr16
out
pop
fcomp
mov
int3
sub
in
test
jle
enter
push
arpl
add
test
xor
ins
mov
add
loopne
xchg
mov
or
scas
xor
xchg
or
sar
cwde
inc
add
jo
sub
xlat
pusha
fist
push
stc
inc
adc
das
out
sti
jp
es
cmp
dec
popf
out
jmp
cld
jmp
mov
fs
loope
fidivr
lds
mov
test
mov
sbb
xchg
bound
clc
sub
xor
pop
adc
aaa
js
cmp
xchg
push
out
mov
jl
ins
scas
push
pop
shr
mov
shr
std
mov
mov
sbb
(bad)
cvtdq2ps
cwde
xchg
push
dec
pusha
sar
lock
jmp
out
cmps
ret
push
and
cdq
ins
call
mov
sub
mul
cmp
mov
mov
outs
shl
ja
shl
xor
test
inc
out
in
jns
push
sti
sub
sub
dec
xor
test
adc
and
dec
dec
hlt
cmps
aas
fwait
and
fisubr
jo
mov
ins
sbb
mov
xor
mov
ficomp
scas
mov
mov
jne
mov
sub
push
cmps
arpl
imul
mov
adc
cmp
xor
sbb
test
mov
hlt
nop
imul
les
fist
cmp
or
fwait
dec
fdivr
and
push
(bad)
jmp
dec
push
call
ja
aam
mov
or
sar
mov
scas
mov
xor
adc
mov
inc
jp
call
xor
das
jno
test
out
leave
mov
inc
sbb
cmp
scas
jmp
mov
lock
cmp
in
jne
xor
ret
mov
add
xor
icebp
out
inc
fcmovnb
mov
pushf
cmp
mov
cdq
adc
jno
out
xchg
jne
inc
inc
jae
icebp
js
jbe
mov
leave
xor
pop
mov
adc
cmp
pop
and
rcr
sbb
push
in
pop
xor
mov
dec
cmp
out
pop
cmp
pop
mov
cmp
mov
fisubr
aaa
xor
das
(bad)
mov
shl
sbb
nop
pop
scas
pop
lock
adc
xchg
lea
xchg
jmp
imul
xchg
adc
pop
sti
scas
arpl
xlat
lea
mov
out
push
adc
xor
ror
push
test
mov
stc
mov
sub
mov
pop
sub
out
addr16
pop
call
ret
cmc
ret
and
sbb
fistp
(bad)
(bad)
mov
sbb
cs
cli
mov
xchg
out
adc
mov
adc
jo
scas
xchg
ins
pop
cdq
sub
pop
mov
test
cld
arpl
jo
inc
call
call
mov
loope
ret
sbb
lods
arpl
test
mov
mov
or
mov
cmp
jae
inc
inc
mov
jg
sub
mov
sub
inc
fwait
sbb
mov
adc
push
daa
jmp
mov
pop
mov
popf
imul
pop
add
cmp
outs
adc
cmp
(bad)
push
pop
pop
dec
push
inc
mov
retf
xor
mov
imul
adc
call
mov
push
inc
ret
addr16
imul
repz
ins
cmp
popf
pop
fsub
ins
mov
aam
out
pop
pop
jo
sbb
or
test
movs
cwde
test
(bad)
(bad)
add
cs
pop
inc
sbb
pop
imul
jmp
call
lods
xchg
or
sbb
jg
int3
shl
sbb
jmp
add
sahf
lock
icebp
rol
addr16
pop
mov
sub
shr
shl
push
and
imul
cwde
inc
add
push
inc
xor
add
push
lods
rcr
repnz
out
mov
add
xor
push
sbb
or
mov
das
sbb
jb
div
adc
cmps
jecxz
loope
fist
fisubr
mov
push
mov
pushf
(bad)
adc
daa
int3
mov
pop
sub
add
mov
and
nop
push
jmp
add
cmp
mov
fisub
retf
std
dec
fstp
sub
adc
jno
cmps
sbb
add
cwde
sti
nop
or
push
gs
enter
jno
rcr
xchg
sub
enter
adc
test
jg
jecxz
gs
popa
adc
call
jg
dec
fmulp
mov
jmp
xlat
idiv
xor
xchg
inc
loope
inc
data16
imul
add
jmp
retf
shl
adc
push
push
sahf
adc
sti
mov
into
cmp
in
in
sub
clc
(bad)
into
pop
xchg
and
shl
mov
mov
imul
mul
mov
xchg
mov
cmps
mov
ds
dec
call
test
pop
xchg
adc
jl
aam
inc
jne
icebp
inc
div
cwde
jmp
lods
dec
ja
imul
jo
push
in
dec
sahf
std
arpl
xor
je
daa
cmp
xchg
ss
out
jne
xchg
jecxz
dec
cmp
push
sub
sub
jnp
mov
leave
sub
push
sar
jp
aas
imul
xchg
idiv
push
cmp
bound
push
xchg
pop
fmul
js
stc
and
jg
xor
sbb
fsubp
stc
mov
add
div
loopne
jl
imul
or
fs
popa
ret
sub
inc
jle
fsubrp
xchg
out
pop
jp
pusha
dec
shl
test
and
inc
fsubr
stos
add
call
xchg
mov
push
pop
or
into
mov
repz
add
add
(bad)
test
repz
add
push
xchg
(bad)
push
out
test
daa
fwait
rcl
fcomp
je
xor
gs
mov
add
ret
pop
sbb
xor
xor
out
imul
fst
rcl
sti
sbb
les
loope
xor
mov
daa
inc
inc
ins
cmp
repnz
data16
mov
inc
dec
out
xor
(bad)
in
pop
jl
cmp
or
hlt
push
ror
popa
inc
mov
(bad)
jmp
loopne
ins
cmp
sar
dec
inc
pop
js
aad
out
loopne
dec
xchg
xchg
aas
mov
das
test
leave
xchg
clc
or
xor
jne
inc
add
idiv
inc
xor
(bad)
push
sbb
(bad)
mov
je
or
frstor
add
fist
or
mov
inc
std
rol
adc
and
mov
cmps
cwde
add
or
jmp
mov
aaa
push
sbb
mov
jo
pop
sub
cli
jp
pop
mov
sbb
retf
int
xchg
or
movs
xchg
call
enter
fld
sbb
mov
xchg
mov
btr
jecxz
jns
push
enter
push
mov
push
fwait
xchg
push
in
cmp
mov
cli
mov
retf
adc
or
hlt
test
lds
xor
jo
inc
xchg
(bad)
popf
mov
retf
loope
sbb
add
mov
clc
aaa
inc
push
push
mov
xchg
add
inc
push
imul
in
cvtps2pi
xchg
test
xchg
pop
push
sbb
stc
cwde
inc
inc
pop
repnz
lea
add
xlat
mov
add
lock
pop
addr16
call
mov
pop
lahf
jno
or
xor
mov
jle
popf
outs
jecxz
fistp
les
test
mov
dec
push
pop
xchg
movs
dec
pop
xor
btr
jne
cdq
and
cs
out
fsub
mov
adc
xchg
xchg
(bad)
scas
rcl
gs
ds
add
pop
dec
cs
scas
mov
std
cs
adc
lods
xchg
sbb
call
xchg
push
xor
popf
imul
sbb
mov
pop
xor
xchg
cmps
leave
and
or
icebp
movs
test
andps
ins
mov
push
call
enter
and
inc
fs
fisub
or
xor
fs
mov
mov
in
fwait
iret
adc
push
sub
cld
aam
sahf
cld
fcomp
popa
js
mov
fnstcw
push
jmp
call
mov
mov
in
aam
push
xchg
cbw
mov
cmp
jl
mov
xor
js
mov
movs
pushf
push
mov
pop
add
pop
inc
mov
bound
inc
je
cld
fsub
xchg
cdq
sbb
inc
xchg
dec
daa
sbb
call
adc
adc
sahf
pusha
imul
nop
sti
out
jo
scas
jae
repnz
sar
cwde
adc
shr
xor
push
aaa
mov
int3
inc
imul
mov
dec
pusha
in
out
and
jecxz
or
cmp
sub
cld
adc
xor
mov
push
sub
sbb
in
arpl
sbb
jmp
add
pushf
mov
push
sub
inc
ss
retf
xor
or
sub
add
mov
jecxz
xor
jl
sbb
(bad)
jbe
ins
retf
xchg
xor
push
ret
rcl
fucom
sub
jo
lds
pop
ret
add
cmps
out
test
or
pop
dec
das
jns
push
mov
dec
les
pop
leave
mov
and
fld
ret
dec
icebp
or
jecxz
xor
dec
push
popf
inc
add
and
jmp
stos
jecxz
sahf
xchg
out
dec
xchg
push
pop
out
xor
pop
bound
xor
pop
movs
mov
lods
pop
xchg
ror
xchg
push
mov
mov
add
and
arpl
loope
mov
sub
(bad)
test
out
xor
mov
dec
(bad)
imul
fistp
inc
mov
imul
data16
hlt
mul
imul
push
loope
sub
push
cmp
dec
shl
sbb
jb
jno
mov
sbb
push
hlt
pop
out
add
add
inc
popa
pop
hlt
mov
addr16
mov
pop
mov
mov
xor
dec
inc
cmc
scas
(bad)
fidiv
inc
fwait
test
mov
dec
mov
jl
sub
test
or
js
xrelease
imul
aad
pop
retf
xor
pop
call
xchg
loope
push
push
pop
inc
fdivr
adc
pop
nop
(bad)
fmulp
ret
test
xchg
sub
jecxz
fld
xchg
(bad)
sbb
sub
sbb
push
aaa
xor
call
add
loope
mov
xor
dec
xlat
sub
mov
jae
cmp
cld
ret
fdiv
push
dec
test
xlat
push
sbb
mov
push
push
fsubr
sub
xchg
in
mov
shr
jmp
jp
les
rcl
stc
jbe
test
inc
ja
sbb
xchg
sbb
jnp
inc
out
movs
sub
cmp
xor
pop
mov
inc
imul
out
fistp
xor
js
inc
mov
adc
(bad)
cmp
adc
and
add
mov
push
bound
inc
sub
loopne
push
xor
jno
cmp
jno
or
mov
xor
cdq
jecxz
mov
mov
pop
imul
mov
cli
cmp
das
ret
jbe
clc
out
retf
outs
lock
test
xchg
fmul
push
rcr
cmp
mov
adc
pop
pop
push
mov
fnstcw
test
nop
leave
mov
add
mov
or
mov
in
popf
cmp
aad
xchg
(bad)
mov
jg
add
sub
and
or
mov
mov
mov
mov
cmp
add
jge
jae
int3
lods
push
ficom
mov
shl
cmp
out
outs
cmp
lods
fs
and
pop
arpl
or
ret
leave
into
pop
icebp
xor
and
shl
add
dec
push
xchg
or
outs
adc
daa
mov
or
pop
call
mov
mov
mov
retf
retf
std
mov
fwait
jne
inc
cmp
(bad)
hlt
aas
sbb
sub
into
shl
mov
movs
sti
or
in
les
mov
outs
ret
daa
xchg
cmps
xchg
and
in
push
cs
(bad)
jmp
jg
imul
adc
sahf
cmps
in
(bad)
pop
cmps
ret
cli
jmp
out
out
pop
cld
xchg
pop
cmp
not
mov
xchg
push
add
sti
mov
sbb
sub
push
xor
push
mov
rol
xchg
jmp
jne
and
mov
test
sub
(bad)
cmp
jp
loopne
adc
xchg
or
pusha
mov
pushf
call
ficom
inc
frstor
adc
das
arpl
shr
and
fstp
xchg
push
loopne
pop
test
stc
sbb
push
mov
sbb
jne
in
mov
lods
in
ins
inc
sub
addr16
or
fmul
jp
or
test
xor
(bad)
fild
dec
push
loope
fisub
push
mov
dec
jg
push
in
call
out
sbb
outs
cli
iret
sbb
mov
inc
lahf
and
fsubr
repnz
mov
and
dec
rcr
sbb
in
int
movs
rcl
test
xchg
fild
mov
pop
push
lods
lods
ss
inc
inc
xor
sub
pop
test
nop
and
mov
in
add
outs
test
(bad)
mov
mov
or
ficomp
pop
pusha
loopne
pushf
push
xchg
call
popa
or
pop
and
retf
rcl
faddp
lods
xchg
(bad)
aas
fwait
xlat
(bad)
jb
add
call
sub
test
pop
mov
push
aam
sahf
adc
mov
jmp
xor
out
xchg
jnp
into
lds
jo
stos
pop
cs
add
mov
jbe
mov
test
retf
js
add
dec
mov
mov
aas
(bad)
lahf
cmps
push
pmuludq
js
fistp
(bad)
popa
sbb
stos
stos
mov
scas
lahf
ret
(bad)
mov
hlt
fisubr
sbb
mov
in
test
in
ins
test
xor
test
mov
stos
adc
out
push
push
inc
pop
pop
xchg
das
mov
das
adc
sbb
ins
arpl
mov
sbb
dec
popa
call
push
mov
sbb
arpl
push
es
retf
test
adc
mov
jo
mov
mov
mov
loop
mov
jae
xchg
lock
adc
stos
loope
or
dec
and
enter
out
(bad)
ret
sbb
movs
push
test
push
pusha
pusha
test
mov
dec
or
lahf
rol
jmp
mov
add
mov
fst
push
jmp
mov
hlt
ror
dec
push
cmp
bound
or
push
stc
xor
xor
call
dec
dec
sbb
mov
ja
push
push
ror
mov
xchg
xchg
mov
cmp
cmp
fiadd
xor
out
mov
loop
or
in
inc
call
out
mov
push
pushf
fidivr
mov
leave
and
push
movs
mov
ret
sbb
or
xor
pusha
sti
push
mov
xor
fisubr
adc
pusha
xor
or
stos
fucom
pop
fdiv
out
gs
outs
sub
fs
adc
retf
adc
pop
sub
ins
into
cmc
mov
(bad)
jmp
arpl
push
imul
fstp
les
push
enter
adc
push
jmp
lds
push
jmp
pop
dec
clc
repnz
sub
push
xchg
loopne
js
xchg
mov
xor
pusha
sbb
dec
in
dec
cmp
loop
sub
sub
fnstsw
mov
scas
lods
dec
call
lock
int
repz
mov
leave
icebp
fadd
dec
adc
push
inc
jmp
pushf
inc
mov
aam
jg
pop
aam
repz
enter
mov
icebp
adc
mov
fist
jnp
fwait
push
inc
inc
pop
ret
sbb
xchg
push
in
enter
sti
mov
cli
add
dec
(bad)
call
shl
pop
(bad)
ja
mov
jo
dec
adc
xchg
jge
xchg
ss
xchg
cmp
mov
add
jae
mov
sbb
in
jns
cld
mov
inc
imul
jle
aad
sub
adc
adc
or
ds
inc
and
mov
add
dec
or
bound
xchg
lods
jb
or
movs
pop
push
pop
push
scas
in
rol
int3
popa
dec
and
jmp
push
loope
movs
jbe
outs
fdiv
mov
sub
xor
out
sub
in
pop
loopne
cmp
adc
in
and
ret
mov
adc
xor
mov
jg
sub
mov
data16
data16
hlt
out
rcr
or
movs
ss
cmps
sub
into
imul
arpl
into
push
lods
mov
aas
(bad)
rol
sub
dec
jnp
mov
fld
mov
pop
fsub
popa
jbe
xlat
gs
adc
and
mov
mov
push
retf
mov
pop
xlat
jno
aad
out
adc
xor
mov
sub
pop
mov
cmp
xor
and
out
pop
(bad)
arpl
inc
mov
jae
pop
sti
sbb
sar
cmp
repnz
dec
sar
ins
daa
pop
push
mov
imul
cmp
std
fist
and
retf
adc
outs
xchg
xchg
ins
push
inc
jb
push
sub
(bad)
mov
imul
dec
pop
xchg
and
dec
push
dec
scas
add
in
sub
in
dec
aaa
shl
(bad)
jb
pushf
dec
jmp
cmp
and
rcr
dec
push
cs
aas
cs
rol
sub
outs
xchg
inc
out
fistp
mov
imul
cmc
mov
sbb
mov
jp
sub
enter
inc
aam
mov
pop
loope
(bad)
dec
outs
int3
jmp
lock
add
jle
sub
lea
jae
pop
jne
popa
jne
jbe
push
cmp
outs
mov
push
arpl
(bad)
dec
cs
jbe
imul
cmp
xchg
or
sti
dec
jge
or
xor
fwait
push
jge
sub
fsubr
daa
mov
mov
cdq
ss
test
stos
inc
cli
or
cmp
dec
push
xchg
sar
adc
iret
push
ret
int3
xor
jge
sub
(bad)
inc
cmp
in
add
clc
(bad)
jge
stos
mov
pop
call
sub
or
shr
call
(bad)
jae
das
mov
data16
and
movs
call
add
pusha
push
leave
loopne
sbb
popf
fld
(bad)
clc
sbb
or
adc
and
pop
inc
push
imul
jge
es
sub
xchg
pop
mov
add
or
dec
cmps
pop
lods
int3
pop
loopne
mov
xor
or
movs
and
ds
gs
fcomi
int3
imul
mov
cli
xadd
push
mov
and
jb
pusha
hlt
enter
pop
sbb
pop
add
cmp
jno
gs
je
xchg
adc
je
pop
les
jecxz
call
popa
and
repz
sbb
sti
das
sub
int3
cdq
into
push
add
pop
pop
arpl
in
adc
and
mov
clc
xchg
dec
(bad)
cli
clc
cld
jl
call
mov
rol
enter
sub
sub
adc
dec
or
adc
sub
(bad)
cs
scas
jp
mov
xchg
adc
enter
mov
jno
ficomp
out
push
cwde
xor
pop
and
push
inc
fwait
arpl
xor
or
test
es
mov
data16
mov
leave
fstp
fcmovnb
lds
dec
cmps
loope
adc
sub
call
and
int
jg
xchg
sbb
repnz
stos
jp
inc
retf
lods
ret
inc
ficomp
mov
jbe
xchg
jae
xchg
mov
add
xlat
jbe
pop
push
and
pop
stos
pop
stc
push
mov
retf
jg
gs
pop
ds
ja
shr
push
sub
enter
or
ins
push
pop
ret
pushf
mov
pop
dec
or
xor
jae
dec
or
div
push
iret
cli
lea
loopne
mov
int
test
ret
out
(bad)
in
mov
popf
test
retf
mov
mov
enter
inc
sbb
jecxz
retf
sub
scas
mov
inc
ret
adc
adc
push
cmp
pop
fxch
(bad)
and
test
loopne
pop
ins
adc
push
loop
outs
fsub
mov
lds
je
cmp
cmps
ret
mov
stos
add
js
test
pop
jne
pop
into
sar
dec
cmp
push
lock
xchg
loopne
out
sub
push
xchg
and
mov
test
and
shl
iret
nop
in
outs
jecxz
pop
sbb
dec
xchg
js
in
mov
mov
or
mov
mov
fs
pop
les
lock
jo
cdq
stc
xchg
push
pop
pop
mov
jg
xor
nop
jb
xor
lock
bound
inc
mov
add
mov
sub
inc
out
cwde
fadd
lahf
in
dec
out
bnd
sbb
in
jecxz
mov
enter
cmps
xchg
cld
add
es
mov
gs
mov
cmps
(bad)
rcl
cwde
lea
fcom
in
mov
xor
pause
rcr
ret
and
pop
sub
arpl
ss
inc
std
adc
rol
shl
inc
enter
cmps
test
(bad)
iret
ficom
xchg
retf
jbe
out
cli
sbb
sub
sub
inc
and
lods
aam
xchg
push
inc
adc
lods
cmps
or
fnsave
adc
jmp
(bad)
mov
add
mov
das
bsr
or
inc
pushf
icebp
pop
sbb
push
retf
dec
mov
sub
mul
cmp
xchg
dec
add
out
jg
pop
mov
sub
xor
inc
rol
fwait
dec
mov
mov
enter
retf
or
jle
cmp
or
jecxz
data16
repz
sub
inc
js
jbe
mov
mov
pushf
add
es
call
jnp
movs
ja
sbb
dec
shr
adc
call
adc
in
cmp
es
std
push
fcomip
repz
ss
dec
test
xor
aad
jg
lds
pop
cmp
pushf
cmp
cmps
mov
xor
xor
push
fnstsw
mul
rcl
xchg
mov
mov
inc
clc
ficomp
not
mov
dec
jg
adc
xor
xor
sub
out
add
lods
repz
xor
scas
jmp
pop
push
cmp
rol
mov
test
mov
fldenv
dec
adc
adc
xchg
leave
mov
add
dec
ret
loopne
mov
popa
xchg
mov
ror
pop
push
sti
xchg
or
loop
jg
push
sub
push
stc
mov
add
cmp
dec
(bad)
ss
fs
test
mov
pop
adc
push
movs
push
into
pop
sar
stos
xchg
pop
pop
mov
push
test
jmp
sub
rep
push
in
(bad)
test
data16
(bad)
out
mov
sahf
outs
les
push
adc
mov
pusha
xor
sbb
pop
sbb
ficom
push
loopne
or
jns
cmp
dec
(bad)
in
push
mov
jmp
rol
jb
jno
jge
ss
int3
xor
into
aas
sub
rcr
xchg
fidiv
xor
(bad)
shl
xchg
dec
dec
cmps
ins
mov
xchg
sub
popa
push
sbb
pop
call
dec
fisub
jg
fbld
stos
fistp
xchg
mov
cmp
sbb
push
inc
push
pop
sub
add
mov
xchg
gs
push
and
out
xor
push
daa
jg
repnz
hlt
repz
shr
sahf
aas
call
outs
(bad)
jo
xchg
aas
push
jmp
inc
sbb
mov
mov
es
sbb
ins
icebp
stos
loope
(bad)
cmps
int
mov
inc
sub
retf
out
sbb
pop
adc
cld
mov
sub
mov
sub
sub
fldenv
sbb
jnp
int
cmp
or
ins
outs
xor
push
enter
popf
neg
pop
outs
(bad)
xchg
xor
jno
sub
loop
fisub
push
sbb
jmp
or
add
jmp
lds
push
jne
fidivr
push
mov
shr
out
xchg
xchg
dec
(bad)
fistp
mov
popa
push
sbb
add
adc
ret
inc
fild
movs
mov
into
in
ds
pushf
push
lock
and
sbb
les
pop
fisubr
push
in
into
cmps
push
sbb
fwait
test
mov
fisub
adc
ror
add
push
mov
push
jmp
or
cmp
sub
fisub
pop
sub
mov
lock
mov
(bad)
push
push
dec
fdiv
bound
(bad)
cmp
cwde
in
cmp
sti
mov
push
xchg
pop
pop
adc
mov
in
lea
arpl
in
or
data16
sub
int
bound
aam
addr16
aas
xor
pusha
mov
or
adc
ss
es
rcr
add
fnsave
nop
rcr
pop
in
mov
daa
xchg
add
sti
adc
stc
xchg
sbb
pushf
mov
push
pop
mov
das
mov
(bad)
movs
out
cmp
dec
pop
bound
sub
inc
or
aas
cmc
pop
xchg
mov
les
test
into
sahf
cli
jmp
fiadd
cmp
lods
sahf
jp
or
pop
push
adc
retf
out
stos
test
into
jns
dec
dec
int
sbb
pop
dec
lahf
xchg
popa
cdq
rcr
push
imul
lea
xor
in
inc
and
and
xor
cli
ss
push
rcr
fwait
int
mov
pop
out
daa
dec
pusha
pop
imul
sub
add
mov
sbb
push
mov
add
cli
pop
xor
pop
fld
fisubr
outs
retf
push
xor
cmp
mov
jecxz
ds
add
jmp
push
ins
jecxz
pop
fcom
sub
inc
int3
sbb
fcmovb
mov
push
mov
cld
pusha
inc
pop
pop
mov
sbb
jecxz
aaa
dec
jmp
jae
add
es
dec
mov
inc
fidiv
adc
xchg
aam
mov
fsub
xor
lock
push
loop
xor
mov
jae
xor
retf
outs
mov
out
pop
mov
dec
sbb
sahf
fdivr
inc
nop
mov
dec
add
push
ret
pop
cs
and
mov
cmp
adc
push
test
xchg
cmps
cmp
aaa
push
stos
outs
lods
stos
and
push
or
mov
pop
mov
outs
jmp
xor
mov
and
cmp
movs
adc
shr
jno
enter
out
xor
fwait
pop
mov
mov
dec
dec
dec
pusha
ja
outs
or
pop
push
inc
xchg
adc
or
imul
dec
mov
out
(bad)
dec
pusha
add
mov
sbb
sar
inc
or
std
std
xor
inc
and
in
cdq
das
and
and
pop
adc
push
push
pop
sub
sub
xor
scas
push
movs
sar
ret
scas
ret
ficomp
inc
adc
push
mov
and
lahf
jo
lock
test
cmps
cld
inc
ds
dec
mov
pusha
dec
nop
fistp
pushf
mov
cmc
movs
cmp
and
fldcw
add
sub
xchg
cmp
movs
mov
sbb
jg
push
ins
lahf
cmps
mov
sbb
(bad)
cli
jp
jp
or
push
(bad)
mov
loope
mov
mov
test
push
stc
inc
xchg
sbb
add
dec
adc
pop
in
iret
lds
fcmovu
cld
push
imul
and
gs
jmp
test
lock
pop
(bad)
ror
sbb
or
mov
cmp
inc
mov
mov
call
mov
push
scas
xlat
(bad)
push
lahf
and
mov
add
mov
mov
inc
push
mov
test
sbb
fs
inc
lea
and
arpl
lods
mov
xchg
sbb
hlt
lahf
das
pop
add
les
imul
sub
mov
pop
ja
aas
or
clc
retf
in
out
inc
ins
int
aas
sbb
pop
mov
pushf
jbe
jl
jne
and
mov
shr
push
aaa
pop
and
cmp
int3
(bad)
mov
dec
mov
inc
sbb
push
fwait
add
sub
lock
ins
aas
in
lea
fdiv
scas
sbb
mov
add
xor
adc
pop
push
les
(bad)
stc
mov
es
add
and
xor
retf
mov
or
hlt
xor
mov
pop
sub
sub
sub
test
inc
push
jns
push
les
repz
add
in
inc
xlat
sub
jl
(bad)
mov
test
mov
sub
mov
sbb
or
popa
fstp
ds
lock
jmp
push
mov
stos
dec
clc
push
xor
hlt
add
out
push
adc
stos
cmps
ret
imul
sub
push
push
ins
dec
stos
push
ss
dec
jp
pop
jl
enter
mov
sbb
mov
in
sbb
jno
test
cmps
mov
fnsave
sub
or
xchg
or
mov
mov
or
std
fisttp
sbb
push
cmp
xchg
rcr
fwait
mov
leave
sbb
dec
cdq
jae
push
push
bound
lods
in
stos
dec
data16
xor
xchg
aaa
into
or
xor
sub
test
inc
sub
aam
hlt
pop
(bad)
cld
dec
xchg
xchg
sbb
repz
imul
push
test
adc
push
ficom
add
int
xlat
cmps
jmp
int3
sbb
inc
push
std
push
data16
xor
dec
(bad)
jge
cmp
dec
or
leave
addr16
out
cwde
movs
ficomp
mov
inc
pushf
cmp
jb
cwde
xchg
pusha
pusha
add
aad
mov
cwde
scas
inc
dec
push
gs
pop
mov
add
pushf
movs
popa
js
xchg
pop
sbb
pushf
push
jmp
jecxz
movs
xchg
shl
lock
cmp
ins
stc
daa
jg
jns
jg
sub
cld
fimul
push
pop
push
push
jnp
out
pop
aaa
mov
add
lea
sahf
imul
clc
movs
dec
data16
sub
jno
add
(bad)
or
(bad)
push
rol
add
(bad)
sti
movs
and
fwait
push
cmc
or
jl
jecxz
and
fsub
or
xchg
pop
xor
retf
call
sub
mov
or
fldenv
leave
sar
dec
lds
(bad)
cwde
addr16
shr
int3
out
movs
adc
xchg
mov
loopne
mov
ja
cmc
mov
xchg
dec
movs
ins
rcl
inc
clc
mov
jmp
mov
xchg
xor
push
dec
xor
jmp
lock
xchg
test
add
or
arpl
mov
add
sbb
mov
lods
stc
mov
sub
or
pop
(bad)
cs
(bad)
nop
mov
loop
clc
clc
jecxz
(bad)
int
adc
xchg
cmp
je
outs
or
push
in
fld
or
call
jp
jae
xchg
imul
push
cmp
pop
xor
in
and
ret
sar
cli
inc
mov
lock
sti
pop
pop
and
stos
mov
das
and
nop
xchg
mov
jge
jg
popa
loope
jmp
shl
dec
xchg
ror
pop
adc
(bad)
xchg
jnp
sbb
mov
pop
outs
lds
xchg
popf
repz
cmp
sub
scas
ja
movs
pop
cdq
rol
sbb
pop
lods
lods
pop
cmp
mov
dec
adc
push
outs
xor
xor
(bad)
and
inc
cs
xlat
sbb
cmp
adc
push
adc
or
fbstp
jno
or
sbb
jmp
push
daa
ret
ss
js
mov
outs
xchg
ins
popf
jo
push
std
xchg
nop
dec
imul
imul
retf
xchg
into
jge
out
leave
ss
mov
xchg
iret
add
xor
dec
xchg
leave
std
cwde
dec
inc
mov
xchg
push
sub
dec
(bad)
cli
sbb
xchg
add
or
fwait
and
xchg
xor
sti
test
popa
movs
push
add
add
sbb
bound
mov
push
inc
repz
bound
iret
fisub
scas
leave
jmp
mov
ins
jp
jbe
in
fistp
mov
dec
push
push
add
xor
jne
repz
repnz
jecxz
cmc
and
or
mov
jge
inc
mov
pop
push
neg
bound
cmp
inc
cmp
and
mov
sub
jle
or
(bad)
mov
fidivr
(bad)
jno
dec
lods
push
jle
retf
add
xchg
xor
(bad)
pop
mov
mov
arpl
sahf
xchg
or
(bad)
push
pop
aas
call
dec
popf
out
(bad)
fdiv
leave
in
and
imul
mov
fdivrp
mov
test
jle
xchg
(bad)
push
nop
pop
jge
cmp
jge
cmp
jl
mov
cwde
dec
gs
mov
test
dec
out
adc
scas
and
mov
add
adc
cdq
sbb
inc
xchg
xchg
add
je
push
pop
popa
std
(bad)
fcomp
inc
and
or
sbb
pop
inc
and
ins
not
outs
test
xor
add
hlt
retf
xor
jne
push
mov
enter
fild
sub
adc
xchg
arpl
and
adc
jmp
popf
js
push
sbb
jbe
push
push
dec
add
fisub
data16
mov
and
mov
jle
inc
inc
add
mov
call
lahf
xor
xchg
pop
xor
jnp
outs
in
mov
push
popa
mov
popf
lahf
jbe
adc
sub
pop
gs
cmp
retf
dec
push
xchg
jns
cmp
jge
pushf
pop
cwde
inc
add
xor
in
je
pop
js
out
fadd
lahf
pusha
push
mov
add
xchg
xor
fistp
mov
jecxz
imul
lods
mov
adc
and
addr16
mov
or
out
call
test
pop
push
or
cs
(bad)
jmp
xchg
jnp
or
xchg
imul
js
nop
aam
and
fidiv
fwait
lods
fnop
sbb
clc
(bad)
mov
inc
xor
stos
pop
test
push
or
jl
fisubr
js
out
nop
in
imul
dec
xlat
mov
ss
jb
fild
and
or
sahf
and
inc
xor
or
leave
sbb
hlt
sbb
jb
ret
mov
mov
shl
or
shl
movs
push
mov
add
ret
inc
retf
pop
jbe
and
fs
inc
je
adc
fdivr
hlt
iret
rol
or
test
adc
inc
mov
mov
shl
icebp
cld
xlat
iret
scas
ror
fisub
or
push
out
loopne
sbb
(bad)
hlt
fs
mov
cmp
jo
and
(bad)
pop
cwde
dec
xor
xor
jo
test
icebp
pop
adc
(bad)
jne
fst
inc
loopne
fsin
sti
rcr
addr16
sti
clc
fs
and
inc
cmp
nop
popa
jecxz
pushf
inc
mov
dec
ja
movs
loope
je
adc
cwde
add
pop
or
pop
pop
mov
inc
push
sahf
pop
mov
fist
call
cwde
sbb
xchg
stos
repz
ja
cwde
adc
push
pushf
xchg
xor
sub
(bad)
jmp
sub
js
aaa
idiv
push
in
sbb
enter
cmp
sub
mov
push
mov
cdq
imul
xor
mov
jg
loop
and
sub
jbe
push
pop
xchg
mov
out
inc
aaa
cmp
ins
xchg
out
xor
aam
dec
loop
xchg
push
adc
or
(bad)
adc
test
ret
adc
stos
pop
xor
inc
clc
push
push
loope
and
clc
sub
mov
(bad)
or
ja
lock
dec
add
into
mov
shl
es
div
sub
test
cmp
je
jne
fs
inc
mov
cwde
iret
mov
arpl
jne
jnp
leave
movs
add
mov
pop
push
xchg
jp
retf
call
mov
jno
adc
mov
lods
mov
push
das
add
fsub
popa
mov
push
jae
mov
mov
push
and
push
push
pop
clc
out
or
dec
out
int3
or
mov
js
or
xchg
sbb
cmp
adc
nop
push
je
fisubr
jecxz
ins
inc
cmps
sub
mov
sbb
retf
stos
cwde
xor
rcr
xchg
dec
or
jae
push
or
das
retf
jns
cdq
or
(bad)
mov
push
shl
pusha
stos
pusha
xor
sub
std
mov
and
and
cmc
xor
popa
or
test
jle
aad
xor
ss
into
loope
push
repz
xchg
push
inc
ret
pop
cwde
dec
les
xchg
push
push
xchg
cwde
cmp
sbb
les
and
addr16
int
pop
mov
test
shl
dec
dec
clc
adc
pop
xcrypt-ctr
cmps
cwde
(bad)
push
ret
inc
dec
fwait
cwde
push
call
jbe
in
lods
movs
push
inc
les
push
dec
in
jae
add
mov
loopne
mov
je
mov
lods
nop
mov
fimul
mov
and
je
out
inc
scas
dec
in
push
inc
xchg
pop
lods
pop
inc
mov
push
or
jl
mov
jns
inc
(bad)
aaa
test
or
or
in
loop
es
gs
cmp
sbb
cli
in
xor
popf
add
jne
(bad)
or
ret
or
outs
pop
pop
addr16
sbb
(bad)
or
xor
mov
ins
mov
dec
xor
js
jns
retf
jg
ret
ins
mov
and
mov
ficom
popf
ins
inc
mov
adc
inc
sub
inc
and
mov
mov
mov
dec
popf
sub
mov
div
stos
ret
sub
inc
fcmovb
mov
pop
adc
dec
adc
sub
or
les
add
loopne
jmp
pop
ss
mov
jecxz
adc
push
mov
inc
fisub
ds
cmp
fadd
aaa
fbstp
sbb
cdq
fdiv
leave
out
jnp
pop
fld
loop
sub
sbb
pop
xchg
pop
mov
icebp
lock
lds
and
dec
push
jl
(bad)
(bad)
loopne
inc
push
pop
or
test
loop
adc
hlt
jns
mov
sbb
movs
cmps
mov
cld
push
into
(bad)
or
push
jg
push
fild
jmp
js
push
sbb
movs
sahf
xor
(bad)
icebp
test
jmp
or
jne
arpl
jno
xchg
icebp
rol
xor
imul
ins
pop
movs
and
jmp
cmp
add
sbb
mov
jno
imul
fmulp
add
in
mov
pop
fnsave
cmp
dec
addr16
or
or
pop
xchg
cmp
in
(bad)
push
pushf
call
sub
sbb
dec
add
in
xchg
sub
inc
test
sbb
mov
dec
push
sahf
sub
inc
fwait
movs
mov
push
lods
lods
pop
and
push
test
fsubr
mov
movhlps
lea
dec
dec
dec
or
cwde
aad
xor
js
jne
(bad)
add
(bad)
xchg
mov
enter
mov
iret
pop
les
mov
ret
ror
out
mov
mov
dec
xor
pop
jmpw
mov
jmp
xchg
lea
in
push
xor
pop
sbb
out
and
adc
push
inc
sbb
dec
out
cmp
mov
dec
in
clc
push
pop
inc
or
jp
push
add
or
mov
mov
outs
dec
fidivr
loope
xor
shl
mov
aam
mov
jle
cmps
aas
outs
dec
lds
cmps
scas
inc
icebp
xchg
stc
push
push
lods
sbb
inc
add
es
sbb
sub
neg
push
lods
mov
ja
scas
(bad)
sub
pop
and
loopne
ficom
in
add
jmp
push
dec
lea
hlt
sbb
cmp
ror
(bad)
dec
out
or
sub
imul
and
push
gs
push
ret
pop
(bad)
jl
je
push
push
adc
sub
jmp
xchg
stc
pop
aam
into
outs
inc
sysexit
mov
out
jp
movs
add
dec
lods
fldl2t
mov
dec
fiadd
xchg
dec
aad
(bad)
pusha
xchg
(bad)
shr
sub
in
sub
(bad)
sahf
shr
out
inc
xlat
jae
mov
(bad)
xor
in
out
(bad)
adc
push
xor
test
push
add
xchg
inc
push
pop
adc
cmps
call
mov
jle
jne
mov
mov
sbb
int3
jne
mov
push
in
shl
adc
iret
mov
orps
xor
or
loope
fs
ss
dec
cmps
stos
scas
push
cmp
ret
in
cs
mov
mov
xchg
test
push
imul
push
cld
in
sub
rcr
in
xchg
mov
adc
int3
cmp
es
ins
adc
lds
xchg
ret
add
ror
sbb
or
mov
and
xchg
in
adc
xor
xchg
xor
int3
cwde
mov
cmp
sbb
and
movs
lods
and
aad
mov
mov
iret
retf
jle
add
cmc
mov
push
ins
iret
add
cmp
div
fcom
push
sti
push
ds
les
pop
popf
adc
cmp
ret
xchg
jmp
xchg
and
iret
push
or
xor
cs
adc
push
mov
mov
add
mov
in
add
int
pop
push
push
pop
dec
inc
push
dec
mov
mov
loop
int3
cld
adc
inc
sar
rcr
cmp
dec
loopne
je
pop
mov
cmp
or
pushf
cli
mov
pop
sar
push
scas
lds
sar
aas
imul
jns
xor
mov
sub
mov
mov
hlt
xlat
cli
mov
(bad)
out
leave
pop
imul
dec
sbb
xchg
mov
ds
pushf
mov
fld
or
lock
jb
or
test
sahf
es
dec
jecxz
sub
mov
pop
sbb
mov
iret
ss
lock
ret
sti
(bad)
(bad)
(bad)
idiv
arpl
mov
sub
shr
fisttp
lods
pop
lahf
mov
mov
mov
call
cwde
or
test
push
xchg
xchg
push
xor
addr16
xchg
jmp
(bad)
mov
sbb
mov
retf
sub
js
nop
mov
jle
test
pop
mov
clc
fisub
cmp
sub
fsub
xchg
lods
aas
jle
inc
popa
and
pop
adc
push
mov
mov
adc
out
mov
mov
es
and
push
xor
adc
popa
mov
stc
cdq
js
dec
pop
lock
sbb
iret
sub
out
cwde
xchg
scas
stc
jecxz
xchg
test
lahf
test
and
aad
jae
add
fst
pop
leave
xchg
frstor
push
mov
clc
xlat
inc
add
xchg
jmp
leave
ret
fsub
push
(bad)
jge
jmp
shl
cmp
das
xor
adc
mov
sub
push
and
jo
stos
mov
mov
jp
cld
push
push
nop
adc
icebp
jecxz
mov
lods
fstp
inc
(bad)
inc
ficom
das
mov
mov
mul
push
ret
test
fdivr
push
sbb
and
rol
stos
pop
outs
push
mov
int3
xor
cld
retf
test
aas
sbb
jae
mov
or
dec
aas
xlat
mov
scas
popa
or
mov
mov
sbb
(bad)
xchg
inc
adc
stos
mov
xchg
add
jmp
pop
(bad)
shr
cdq
jo
shl
sbb
lea
add
std
cli
mov
cmp
or
cdq
adc
sub
pop
xor
cmp
pop
and
lds
inc
xor
xor
int
xchg
sbb
or
aas
xor
mov
je
ficomp
jo
dec
dec
(bad)
(bad)
push
cdq
dec
out
push
mov
sub
cs
rol
outs
daa
lods
call
bound
pop
rcr
push
cmp
jo
cmp
sbb
not
pop
mov
push
and
mov
leave
lahf
sub
add
ret
in
or
dec
sar
cmp
repz
mov
repz
test
pop
fistp
add
mov
test
out
lock
arpl
xor
dec
mov
scas
imul
jmp
push
cmp
sub
xchg
pshufw
(bad)
push
std
adc
in
out
push
inc
out
in
add
dec
icebp
cld
test
fadd
mov
pop
mov
mov
adc
xchg
pop
jp
std
push
mov
lods
fst
mov
icebp
jne
sbb
scas
pop
cmps
nop
and
fstp
retf
xchg
aam
test
jl
rol
push
mov
and
inc
fidivr
(bad)
and
sbb
dec
adc
push
sbb
or
cli
repnz
retf
mov
movs
in
shl
lds
adc
jmp
fwait
xchg
cmp
arpl
mov
pusha
outs
icebp
and
jp
sar
dec
iret
icebp
mov
mov
shl
xchg
loop
mov
mov
jb
stos
aaa
dec
add
std
push
addr16
sbb
sti
enter
aas
push
in
mov
sbb
jb
mov
sbb
add
(bad)
cmps
or
and
arpl
adc
push
loopne
movs
sub
xor
loop
xor
(bad)
mov
inc
dec
cli
push
pop
xchg
loopne
je
in
add
mov
sub
cmp
mov
pop
jmp
xchg
cdq
retf
or
mov
enter
and
ficom
and
loopne
mov
push
clc
cmp
cmp
dec
aad
sar
or
inc
xchg
xchg
lds
fisub
or
test
jne
sbb
movs
ss
add
dec
js
loope
mov
in
je
and
sahf
add
loop
sub
test
psraw
fcomip
je
pop
jle
mov
shl
jbe
ja
lds
fcmovne
movs
adc
fdivr
mov
mov
push
hlt
adc
cmps
adc
sub
(bad)
jnp
jne
pusha
or
or
push
xchg
cld
mov
es
sbb
sbb
mov
push
dec
sbb
and
push
cmp
popf
stos
rcl
sbb
iret
enter
stos
test
xchg
cmps
in
fst
dec
call
in
cmp
fnsave
fcom
jge
jae
sahf
adc
jnp
outs
out
pushf
or
ins
lock
xchg
and
rcl
inc
xor
aaa
sbb
in
fidivr
and
cld
fcmovnb
xchg
xor
imul
pop
call
popa
inc
fdivr
or
shr
mov
sbb
inc
mov
sub
sahf
outs
adc
jno
loope
out
sbb
mov
ins
aaa
iret
rcr
shl
enter
cmp
xor
les
cs
int3
add
fbstp
push
test
fnstsw
or
push
push
jl
xor
adc
inc
lds
addr16
cwde
add
mov
out
lock
mov
pop
test
push
(bad)
pavgb
push
int
inc
sub
jno
pop
inc
add
inc
push
sub
fadd
push
mov
fsubr
push
sahf
out
mov
or
int3
fld
mov
inc
mov
rcl
cmp
push
imul
inc
lds
or
fs
loop
fwait
pop
cmp
sub
loope
dec
jb
dec
iret
xor
sub
cmp
mov
pop
call
inc
shl
cdq
in
pop
and
sub
mov
inc
inc
retf
dec
and
les
sbb
push
fldcw
outs
mov
xchg
mov
retf
cmps
sub
into
adc
stc
mov
lods
aam
cmps
fs
out
mov
adc
icebp
cwde
jnp
inc
pop
popa
(bad)
push
ror
and
jnp
mov
xchg
cs
clc
add
lods
pop
and
mov
ja
mov
add
in
int
addr16
leave
mov
data16
test
mov
cmps
xchg
lods
ins
jg
lds
xor
or
xor
or
inc
rol
outs
sbb
push
jnp
ja
jb
sbb
mov
pop
pop
sar
xchg
mov
jle
cmp
ins
jb
out
das
jns
push
fnstsw
pop
ds
and
xchg
xchg
or
push
or
push
sub
in
in
pop
in
addr16
iret
gs
and
sub
mov
gs
movs
jp
shl
out
test
lds
inc
mov
push
xor
repz
jae
pop
add
imul
sub
fadd
(bad)
sub
or
sbb
add
(bad)
jl
aaa
(bad)
add
dec
cmp
rcr
xor
(bad)
outs
and
cmp
mov
inc
cmp
ins
outs
fadd
in
mov
sbb
mov
lods
xchg
sbb
fldenv
in
jg
rcl
pop
mov
out
adc
shr
loope
cmp
push
ret
outs
les
fucomp
(bad)
iret
fbstp
into
cs
jno
mov
lea
xchg
pop
xor
mov
jg
mov
mov
icebp
add
frstor
push
add
sar
mov
jnp
aad
test
push
aad
mov
sub
ins
loopne
mov
mov
pop
in
xchg
jo
fcmovnbe
pop
or
cmp
jno
pop
out
test
das
cld
hlt
arpl
sub
fstp
sbb
cdq
stc
out
je
fistp
(bad)
fnstenv
mov
int
mov
bound
icebp
loope
movs
sbb
in
ror
es
lock
(bad)
loop
pop
dec
test
movs
mov
clc
inc
fcom
mov
inc
gs
cmps
or
sub
jns
xchg
xchg
cs
repz
addr16
lock
push
out
aam
int
loope
dec
adc
and
stos
dec
jg
mov
cmp
addr16
adc
add
sub
or
jp
pop
push
inc
jle
mov
bound
inc
or
xor
not
out
or
or
clc
push
sub
and
push
mov
dec
jp
(bad)
ins
xchg
gs
mov
repz
in
imul
jmp
dec
add
(bad)
ficom
xor
jb
push
dec
jne
loop
bound
xchg
shr
mov
leave
xchg
xchg
add
(bad)
xchg
mov
jb
scas
into
data16
shl
mov
enter
fwait
arpl
not
pop
or
pmulhuw
movs
or
ret
pop
mov
xor
test
loop
push
and
(bad)
bnd
neg
in
ins
aaa
es
mov
xchg
push
call
inc
fnstcw
add
mov
pop
cmp
cwde
or
sub
jmp
leave
jno
mov
div
jp
ror
mov
cs
push
shr
and
ds
test
xchg
shl
inc
aaa
movs
inc
sbb
cwde
popa
xor
movs
mov
xlat
xchg
sbb
sbb
mov
sub
pop
sub
std
mov
(bad)
in
sub
mov
sbb
jns
clc
cmps
jae
ror
sub
popf
adc
sub
or
outs
xchg
dec
jne
dec
jecxz
bound
ss
mov
in
dec
xchg
leave
fcom
jl
xor
xlat
push
icebp
push
jmp
jge
adc
iret
jle
cmps
jecxz
out
jecxz
push
pop
dec
bound
sti
push
push
dec
sti
aad
repnz
into
je
out
xchg
sub
hlt
(bad)
pop
hlt
and
sbb
fbstp
cmps
out
arpl
test
jmp
into
outs
lock
out
jo
out
cmc
nop
adc
xor
push
jns
push
sar
(bad)
repz
mov
out
imul
int
jp
cmp
and
sub
repnz
retf
lods
push
out
and
ret
stos
call
sahf
mov
(bad)
lock
pushf
js
out
pop
mov
or
adc
sub
or
dec
jmp
add
popf
mov
mov
loop
inc
push
dec
nop
les
pop
loopne
push
cwde
xchg
(bad)
out
loope
(bad)
bound
dec
cmps
(bad)
stos
mov
gs
dec
popa
dec
lods
inc
xchg
and
loop
test
jb
neg
xchg
call
repnz
loope
xor
rol
mov
adc
sub
sub
sti
out
icebp
dec
dec
xor
and
push
push
inc
lods
loope
ins
clc
mov
add
outs
push
jno
pop
push
cli
pop
mov
dec
adc
xlat
mov
cmp
out
int3
jnp
fsub
inc
ret
mov
mov
fnsave
loop
xor
cmps
daa
ret
fidiv
stos
retf
and
mov
xor
and
nop
adc
push
icebp
test
js
das
fdivr
or
jge
inc
push
pop
jnp
sbb
(bad)
stos
(bad)
ds
cli
out
vmovntps
outs
or
test
sbb
pushf
jo
daa
inc
jmp
push
sbb
into
xor
push
cmp
jno
cld
cdq
jno
adc
aad
xor
imul
shl
xor
retf
fldcw
rcl
mov
out
mov
lds
je
xchg
div
jmp
clc
mov
add
es
lock
ss
pop
ds
sub
dec
dec
int
pop
pop
xor
leave
sti
dec
popa
push
pop
lds
dec
mov
mov
jle
sbb
push
mov
xchg
aaa
rol
xor
or
sbb
pop
push
in
cmp
add
jle
stos
adc
sub
or
push
pop
mov
adc
enter
pop
push
xor
or
inc
aam
lock
idiv
sbb
inc
gs
inc
aam
ss
call
int3
dec
pop
add
shr
ror
lock
test
jns
and
jmp
jp
int
lea
add
jne
pop
nop
push
pop
jg
push
sti
mov
cmc
sub
sbb
rcr
jns
xchg
mov
int3
adc
jmp
in
dec
in
or
or
or
cmp
add
pop
sbb
mov
push
cs
pop
push
mov
iret
xor
dec
nop
pop
adc
fstp
push
xor
cmp
or
xor
scas
push
pop
add
jp
inc
mov
movs
mov
cli
mov
adc
xor
sbb
push
aas
push
jbe
dec
mov
jmp
mov
(bad)
cmc
push
imul
sbb
sbb
rcl
jne
inc
mov
ret
push
push
or
sti
ds
mov
lods
stos
xchg
mov
mov
repz
and
cmp
retf
call
(bad)
add
fwait
xchg
jge
mov
into
mov
out
push
in
into
adc
leave
in
add
or
loopne
push
das
jmp
xor
shl
push
movs
jae
or
pop
leave
dec
nop
aas
outs
shl
jg
jp
loope
add
sub
frstor
rol
mov
hlt
xor
das
jnp
push
lods
pop
outs
not
jecxz
pop
pop
sub
(bad)
aad
js
jmp
cmovg
arpl
outs
pop
sbb
data16
jmp
xchg
pop
std
dec
dec
xor
mov
ret
or
cmp
add
sbb
push
mov
enter
jle
out
add
jp
mov
int
adc
sbb
xlat
and
inc
push
or
xlat
pop
xchg
in
adc
dec
mov
push
jo
mov
ret
push
(bad)
sub
pop
adc
cwde
mov
sub
fld
into
test
mov
mov
loop
jp
mov
sar
sub
es
dec
sbb
outs
xor
xchg
xchg
out
je
dec
mov
fistp
scas
popf
fiadd
and
sub
add
cdq
push
outs
or
and
pop
dec
xchg
mov
aad
xor
mov
cmp
xchg
pop
dec
adc
jmp
push
or
pop
mov
inc
push
xchg
sbb
add
int3
add
mov
and
int3
(bad)
je
mov
stc
je
fild
call
pop
call
push
aad
cmp
cmp
inc
pop
jle
cli
inc
into
aam
nop
push
jmp
jge
xchg
data16
or
jo
inc
or
aam
mov
mov
xchg
shl
jne
(bad)
div
inc
dec
inc
ins
fadd
adc
xchg
mov
dec
inc
jl
neg
loopne
dec
xchg
mov
sbb
mov
xlat
xor
scas
mov
dec
adc
jmp
inc
sbb
dec
inc
(bad)
xor
push
jbe
xor
or
repz
mov
aad
mov
push
push
jnp
dec
stos
adc
fwait
sar
mov
dec
sbb
mov
push
xor
aas
pushf
inc
pusha
clc
(bad)
lds
sar
adc
sub
repz
outs
or
push
into
adc
mul
call
fidiv
in
mov
inc
in
jbe
lods
leave
or
int3
ret
bound
add
dec
(bad)
jg
das
or
cmp
jecxz
ins
xchg
shr
int3
sbb
lahf
int3
(bad)
push
fist
mov
shl
dec
jl
inc
int3
movs
pop
sub
jne
clc
test
cmp
out
hlt
mov
sub
fs
repnz
cmc
inc
loope
das
aad
movs
jb
push
lahf
jbe
adc
mov
jmp
clc
daa
std
mov
pusha
js
inc
sbb
stos
out
mov
xchg
(bad)
aaa
or
pop
fxch
sub
mov
jne
imul
mov
push
clc
or
aas
bound
hlt
ds
in
aad
adc
xchg
xchg
push
mov
mov
stc
test
mov
mov
push
adc
sbb
push
shl
dec
shl
mov
pusha
out
ds
popf
ss
loope
movs
(bad)
sbb
jmp
adc
aaa
test
push
cmp
push
cmps
out
jmp
(bad)
mov
leave
call
mov
pop
add
cmp
jnp
jl
fwait
rcr
out
fwait
mov
je
shl
mov
add
jb
fcmove
jmp
dec
adc
jmp
pop
mov
in
loopne
xchg
jne
adc
repnz
test
gs
jle
jno
pop
dec
pop
bound
xchg
aas
sub
mov
lock
int
xchg
stos
pop
je
dec
cmp
mov
mov
xor
jbe
mov
bnd
mov
aaa
adc
aaa
stos
pop
or
add
jmp
dec
jns
dec
sbb
adc
xchg
rcr
sbb
pop
inc
mov
fwait
dec
mov
lods
repnz
aaa
out
inc
cmp
arpl
jne
bound
sahf
aad
dec
dec
add
aas
fs
pushf
jmp
outs
jmp
or
mov
(bad)
in
dec
jnp
fdiv
or
es
in
push
cmp
pop
bound
mov
push
mov
dec
popa
ins
add
xchg
mov
shl
mov
push
movs
adc
fadd
adc
sahf
xchg
pop
mov
loope
dec
inc
jg
arpl
mov
pop
jmp
pop
push
jno
pop
mov
test
push
dec
pop
loope
sbb
push
data16
or
xchg
out
ret
sbb
sahf
xchg
shl
ror
popf
or
mov
call
mov
dec
lahf
fist
ss
fwait
add
cmps
cmc
jmp
jae
dec
cwde
sub
mov
test
inc
rcl
xlat
dec
clc
jg
lds
sub
sbb
mov
mov
pop
jnp
enter
stos
or
lods
call
jne
xchg
enter
aas
push
push
cmps
mov
jle
mov
sub
push
inc
mov
push
xlat
sbb
aam
in
jecxz
xchg
and
dec
jmp
retf
push
sub
dec
jae
sbb
xor
test
mov
jo
sahf
mov
push
fadd
and
(bad)
in
cmp
cmp
loope
lock
push
stos
out
out
sbb
mov
es
xchg
imul
outs
les
fmul
dec
sbb
fs
adc
adc
fisub
nop
in
sub
and
xor
inc
cmc
dec
hlt
mov
outs
cmp
mov
imul
ret
ss
cmp
sbb
lods
mov
fst
dec
xor
loope
pop
sub
jge
pop
(bad)
fstp
mov
mov
xchg
ds
cwde
add
lock
dec
pop
dec
shl
push
jecxz
lock
pop
fisubr
jle
cdq
mov
mov
push
mov
mov
aaa
dec
jno
rcr
lock
in
cli
fwait
lahf
(bad)
or
loop
xchg
push
fidivr
sub
xchg
sub
test
inc
jp
jp
cmps
xchg
sbb
cmp
pop
ins
dec
imul
mov
jecxz
jns
lods
add
bound
and
adc
mov
and
loopne
(bad)
lock
adc
in
jnp
push
sub
jle
xchg
pop
loope
xchg
movs
xor
imul
jne
and
jns
pushf
ins
xor
pop
test
mov
adc
mov
jo
movs
in
sahf
xor
or
or
int3
into
jnp
mov
aam
jno
movs
mov
and
shl
aas
xor
mov
retf
adc
pop
sub
fisub
ret
add
mov
xor
stos
and
std
in
cmps
shl
sbb
cmps
xchg
scas
adc
test
fdivr
add
adc
xor
inc
or
mov
xchg
(bad)
sti
mov
lods
(bad)
sbb
cdq
xor
jno
jns
in
popf
mov
and
xchg
xchg
dec
sub
popf
sbb
mov
outs
mov
pop
add
cmp
jl
sbb
mov
test
mov
inc
pop
gs
lahf
push
retf
dec
jb
mov
mov
lds
mov
(bad)
sbb
jge
cmc
adc
std
fisttp
test
jns
sar
test
retf
jecxz
ret
mov
adc
inc
pushf
fmul
sbb
lahf
mov
lods
inc
cli
sub
(bad)
or
pop
nop
into
test
stc
test
scas
data16
repnz
inc
out
pextrw
cmc
fwait
pop
mov
fcmovu
jl
sahf
mov
inc
not
mov
jmp
dec
sbb
push
out
push
imul
inc
xchg
and
jle
inc
add
fucomi
mov
popf
dec
(bad)
inc
pusha
test
sub
xchg
push
xor
push
mov
mov
dec
inc
loop
jns
xchg
arpl
add
cmc
xor
dec
push
cmc
mov
sti
outs
or
adc
cmp
dec
lods
mov
jae
push
mov
outs
push
stos
pushf
rcl
push
add
mov
mov
push
stc
aas
stos
and
push
test
dec
jle
inc
rcl
mov
lahf
mov
jne
inc
dec
dec
ret
in
mov
xchg
lods
or
lahf
push
mov
clc
stc
jp
cmps
ds
loop
pop
ja
and
jp
push
dec
sub
retf
pop
test
and
dec
enter
test
cmp
or
inc
adc
nop
xlat
scas
pop
xchg
jl
or
sbb
sahf
(bad)
fmul
or
mov
addr16
mov
das
cmp
xor
xchg
jle
jnp
xchg
ins
sbb
mov
in
xor
xchg
dec
(bad)
mov
enter
test
dec
mov
pop
loop
out
mov
mov
mov
inc
sub
jmp
test
enter
cli
jb
dec
dec
call
mov
sub
pop
icebp
jle
int3
jno
xchg
push
xor
cmp
hlt
dec
cmp
cmc
(bad)
jne
leave
sbb
or
call
pop
int
sbb
mov
adc
xchg
push
and
bound
fst
mov
or
(bad)
loopne
add
mov
or
mov
push
ret
push
in
dec
mov
and
mov
dec
jne
fbstp
lahf
jp
out
pushf
xchg
iret
aad
imul
add
pop
les
add
or
ret
xor
imul
call
jbe
cmc
aas
pop
loopne
pop
mov
test
or
js
imul
and
fsub
(bad)
jbe
(bad)
or
std
and
dec
lahf
xor
jg
js
(bad)
or
inc
and
pop
aaa
adc
jbe
jne
popa
lods
lds
pop
dec
mov
jge
add
repnz
(bad)
inc
fistp
add
adc
cmp
mov
xchg
cld
jl
mov
inc
nop
out
sub
jb
or
mov
stos
inc
(bad)
mov
dec
aas
pop
cmp
cld
cmp
cmp
xlat
jmp
mov
or
sbb
mov
cli
es
adc
pop
in
mov
fimul
push
adc
mov
pop
test
push
pop
mov
rep
fisubr
xchg
cmps
hlt
pop
ret
inc
xor
dec
arpl
in
mov
mov
dec
js
inc
cs
push
jmp
sub
in
pop
gs
push
mov
push
xchg
repnz
xor
cmp
imul
jmp
ins
pop
js
cmp
sub
sbb
cmp
pop
xor
fnstcw
loope
sahf
push
sbb
out
fdivrp
daa
nop
ret
adc
neg
stc
push
xor
sbb
inc
sub
mov
repnz
and
cld
mov
jo
test
xchg
and
and
int3
(bad)
jmp
adc
sub
rol
xor
std
rep
lahf
inc
ret
mov
adc
aad
push
call
jb
inc
(bad)
int
aam
in
adc
push
mov
ret
dec
test
frstor
in
push
mov
mov
mov
arpl
jno
mov
rcr
cwde
push
fistp
xchg
sub
das
pop
jnp
or
push
(bad)
mov
mov
pop
mov
jae
fldenv
stc
std
mov
test
xchg
inc
jb
mov
(bad)
repz
xchg
cmp
inc
in
mov
jge
mov
ret
cmps
(bad)
sbb
pop
adc
or
sbb
daa
pushf
repnz
hlt
shl
xchg
out
mov
stos
jecxz
int3
or
cmps
pop
pushf
mov
cmps
inc
cmp
add
ror
inc
out
fnstsw
ins
pop
imul
mov
or
shl
add
adc
test
inc
mov
js
and
mov
mov
ss
popf
ja
mov
sub
sbb
mov
mov
mov
scas
push
(bad)
inc
cld
loopne
and
xor
sbb
mov
cli
retf
int
and
and
xor
push
scas
ins
loope
retf
pop
pushf
xchg
inc
in
jecxz
xchg
cdq
out
jle
sbb
xchg
sub
rol
xchg
pop
out
inc
mov
sar
mov
retf
in
jnp
xor
lods
retf
mov
daa
and
fs
cmp
lea
pop
cmp
jno
stos
adc
addr16
popf
xchg
arpl
sbb
adc
push
dec
dec
fcomp
jmp
sub
js
div
scas
mov
iret
repnz
cmp
sbb
xchg
imul
xchg
jle
pop
int
xchg
(bad)
out
in
adc
xchg
clc
mov
shl
(bad)
xchg
sub
jno
xchg
cmp
mov
pop
add
test
shl
cmp
pop
mov
and
mov
pop
dec
aam
add
cmp
test
test
cld
movs
add
ficom
sbb
jae
pushf
pop
and
hlt
in
imul
jbe
fidivr
sub
or
adc
retf
xor
jg
push
and
xchg
daa
in
or
sub
pop
stos
js
pop
mov
pop
jnp
mov
mov
jmp
xor
aaa
inc
sbb
cmp
add
(bad)
mov
mov
hlt
ss
cmps
mov
out
in
adc
fcmovnb
cmps
scas
call
(bad)
sbb
data16
div
push
pop
xchg
dec
cmps
push
add
sbb
sub
movs
fwait
xlat
scas
out
std
mov
sub
(bad)
fbld
sub
mov
xchg
inc
lods
ins
add
cli
cwde
mov
movs
lds
mov
repz
scas
imul
std
cwde
push
mov
cmc
sar
and
das
inc
sar
mov
bound
ror
sbb
push
les
mov
bound
cmps
hlt
jne
std
leave
xchg
movs
arpl
or
jmp
loop
sub
stc
mov
imul
add
mov
out
pop
enter
cmp
push
dec
wrmsr
jmp
pop
pushf
out
test
cld
imul
pop
dec
(bad)
out
gs
adc
call
popf
dec
clc
mov
xchg
jg
dec
imul
xchg
sbb
xor
adc
or
fmul
xor
xor
pushf
lods
add
add
leave
pop
xor
and
popa
pushf
dec
push
push
pushf
fistp
sbb
pop
sbb
push
(bad)
mov
imul
add
and
mov
mov
lods
(bad)
xchg
xchg
cmps
(bad)
cwde
sbb
data16
jb
rcr
xchg
pop
mov
pop
les
push
loope
add
out
lods
lods
and
cmp
bound
iret
sti
sti
xor
std
adc
retf
xor
mov
pop
int3
add
loop
es
add
hlt
ins
and
xor
and
fsubr
adc
inc
rcl
retf
mov
push
push
aaa
cmc
sbb
mov
(bad)
xor
mov
imul
xchg
gs
fs
inc
jmp
mov
(bad)
jns
cs
mov
push
and
stos
sub
adc
pop
sbb
adc
mov
pop
jno
or
fsub
or
sbb
dec
cmp
iret
(bad)
xor
push
popa
fild
xchg
and
repz
jl
sar
inc
imul
je
mov
fwait
ds
imul
mov
dec
es
in
nop
adc
test
lea
mov
xchg
lea
pop
adc
jmp
jno
(bad)
fidiv
xchg
iret
mov
inc
sub
fwait
add
sti
adc
test
leave
jbe
imul
xchg
or
mov
test
jmp
xor
cs
mov
retf
daa
xchg
daa
dec
sub
popf
cmps
clc
pop
push
shr
pop
mov
rcl
sbb
mov
mov
mov
lock
rcl
inc
icebp
std
adc
iret
sub
pusha
mov
push
pop
sti
loopne
(bad)
fisubr
lahf
push
mov
mov
call
xor
fnstcw
mov
inc
mov
or
jecxz
add
loope
je
push
(bad)
sbb
(bad)
mov
lods
shl
and
xchg
jne
mov
jle
xchg
inc
js
xchg
xchg
jmp
xor
enter
loopne
xchg
mov
and
push
mov
add
dec
jl
xchg
cmp
ins
mov
adc
jae
dec
daa
addr16
aad
jge
les
inc
xchg
sbb
or
sub
ffreep
hlt
(bad)
jnp
imul
xor
movs
and
(bad)
(bad)
and
and
push
fnstsw
shr
icebp
loop
xchg
(bad)
sbb
ja
sub
mov
cmp
pop
daa
jp
cli
jmp
mov
add
lock
jae
test
popa
jl
mov
mov
mov
sbb
sub
outs
dec
jp
loop
or
outs
jge
int3
pop
sbb
mov
call
sub
mov
jae
test
les
jno
mov
pop
inc
imul
cmp
scas
push
lock
sbb
cs
leave
sti
jg
enter
cmps
je
cmp
fsubr
push
imul
sti
gs
mov
push
sbb
outs
rol
add
adc
in
addr16
stc
inc
dec
pop
jb
adc
scas
sub
cld
faddp
mov
mov
jle
jl
xchg
fidivr
fstp
fcmovne
movs
into
pop
nop
cmps
repnz
fstp
jns
(bad)
mov
test
test
shr
pop
retf
push
(bad)
jne
movs
and
push
jb
aas
pop
test
adc
jb
inc
test
xor
outs
outs
pop
push
xchg
inc
out
dec
add
add
sub
pop
xchg
or
fs
add
ds
xor
je
xor
dec
sub
jmp
(bad)
out
inc
jmp
mov
ja
mov
jbe
out
ror
cmps
aaa
xchg
cmp
(bad)
pusha
sbb
loope
cli
iret
push
mov
push
es
pop
inc
lock
add
jp
push
lods
xchg
sub
sar
mov
scas
mov
push
sar
call
sub
and
add
xchg
lea
jmp
and
xor
(bad)
or
dec
pop
bound
in
push
mov
push
adc
mov
or
push
dec
inc
cdq
xor
pusha
fwait
(bad)
ficomp
adc
dec
and
lea
dec
loopne
sub
sub
jecxz
arpl
mov
inc
arpl
pop
in
stos
retf
popa
sub
std
cmp
repz
loopne
outs
and
jmp
dec
push
mov
or
stc
aaa
dec
jmp
cdq
shr
into
pushf
mov
lea
mov
sub
out
pop
ss
dec
jo
movs
fcomp
aam
int
lock
jns
xchg
outs
stc
xor
xor
jbe
cli
pop
xchg
js
and
mov
aaa
pop
push
pop
scas
mov
pop
mov
in
sti
out
call
jbe
push
test
iret
jmp
inc
inc
test
ss
arpl
jle
retf
adc
aam
adc
fwait
mov
inc
cmps
xchg
push
add
sahf
xchg
in
jne
and
xor
pop
frstpm(287
arpl
or
sub
fidiv
mov
cmps
push
(bad)
mov
cmc
mov
adc
cs
nop
in
jge
mov
enter
call
ja
aad
lahf
(bad)
sti
movs
(bad)
in
fcmovne
fisubr
out
mov
(bad)
push
stc
pop
xchg
gs
and
push
jmp
sbb
cmp
add
adc
scas
dec
scas
push
mov
and
sbb
mov
cdq
sbb
frstor
ret
sbb
add
and
and
in
ret
xchg
jbe
cmp
repnz
(bad)
fxch
cmp
jbe
lahf
cld
mov
out
push
sbb
jnp
dec
push
mov
jmp
test
xor
loop
les
shl
mov
sbb
arpl
(bad)
xor
xchg
dec
push
cld
bound
mov
dec
test
or
push
cmp
out
(bad)
mov
adc
cmp
jno
movs
sahf
sbb
adc
fsub
(bad)
in
jecxz
stc
mov
into
push
loopne
mov
jle
ins
fistp
inc
ss
mov
jg
mov
xor
mov
sub
cwde
xchg
dec
outs
sub
and
sub
jmp
xlat
xlat
or
cdq
xchg
test
adc
dec
push
mov
or
cmp
cmp
lock
dec
call
mov
js
mov
cmp
mov
movs
sbb
icebp
cmps
dec
jb
test
cs
pop
inc
in
mov
xlat
lea
(bad)
cmp
push
mov
cmps
adc
out
clc
dec
jl
jne
or
out
enter
adc
and
push
lods
mov
int3
fmul
mov
mov
or
or
repnz
sbb
jns
adc
scas
cwde
loop
sub
add
pop
xor
pmullw
movs
adc
aad
add
adc
imul
or
xor
jb
cmp
xlat
mov
fstp
outs
mov
test
int
mov
sbb
ret
and
mov
or
hlt
loop
rol
push
adc
aad
addr16
inc
nop
pop
dec
fild
int3
dec
into
and
jnp
cmp
xor
inc
mov
fld
fnstenv
(bad)
mov
nop
pop
xchg
dec
test
jge
ror
inc
jno
and
mov
xor
sbb
cs
cmps
fwait
adc
enter
fwait
xchg
mov
mov
push
(bad)
pop
mov
out
xor
aaa
std
test
push
jmp
cmp
inc
outs
js
pop
xlat
daa
and
inc
ins
int3
(bad)
mov
dec
inc
fdivr
adc
out
aaa
jno
inc
mov
pop
jle
sti
sbb
mov
xchg
jg
gs
ficom
arpl
push
(bad)
aad
(bad)
cmc
mov
(bad)
ins
in
inc
push
cmps
out
sti
xchg
int
mov
cmp
xchg
imul
xlat
shr
inc
pop
pop
jecxz
imul
pop
xchg
mov
imul
push
movntq
adc
sbb
retf
dec
xor
sar
sbb
mov
push
hlt
mov
test
push
dec
and
(bad)
ss
jl
and
pop
out
mov
mov
jo
jo
xchg
(bad)
sbb
cli
or
or
push
jecxz
xor
enter
add
fcmovnb
mov
add
jnp
fsub
dec
(bad)
repnz
or
hlt
aad
pop
inc
mov
mov
xor
outs
jae
mov
push
mov
ret
jge
daa
or
cmp
(bad)
(bad)
loopne
jle
xor
xchg
and
lock
mov
xor
xor
inc
loopne
out
shl
pushf
jno
xchg
cmps
ret
mov
push
lea
out
fcomp
daa
sub
cmp
or
dec
movs
out
mov
push
lods
dec
push
lods
push
xchg
or
lahf
jmp
shl
xor
shr
or
adc
dec
or
cdq
inc
mov
inc
push
inc
bound
add
push
mov
sahf
js
or
push
cs
int
dec
arpl
and
and
cmp
jno
sahf
jnp
add
inc
xchg
xchg
pushf
pop
push
(bad)
add
sub
stos
xchg
in
cwde
add
das
sbb
cmc
outs
xor
mov
push
daa
mov
jl
stos
push
and
imul
pop
mov
lds
hlt
sub
pop
xchg
bound
movs
iret
sbb
and
cmc
lahf
cli
add
sub
loop
sub
retf
cli
aas
and
sub
add
mov
sar
shl
mov
clc
sbb
sbb
pop
cwde
bound
pop
push
inc
shl
push
push
out
jmp
das
or
dec
mov
fistp
push
in
ss
or
xor
(bad)
mov
xor
mov
retf
sbb
xor
repz
loopne
(bad)
add
push
mov
xchg
adc
into
stos
pop
ins
mov
fiadd
shr
lods
ror
shr
or
push
sub
or
cmc
mov
lea
std
adc
fistp
inc
mov
(bad)
popf
adc
cmc
je
iret
dec
mov
ins
dec
xor
(bad)
pop
adc
xor
xchg
cmc
xchg
jmp
mov
cmc
xchg
xchg
or
push
dec
add
je
retf
jle
fsubr
ret
cli
daa
rcl
jmp
pushf
xor
mov
std
aam
out
mov
jg
inc
test
mov
mov
aaa
cmps
inc
cdq
mov
mov
xchg
ficom
sahf
mov
add
jno
xor
shl
or
or
into
outs
aaa
inc
aas
popf
lods
cli
in
adc
cdq
jne
cmps
ret
jg
gs
adc
inc
sbb
sbb
xchg
push
xchg
dec
add
jmp
dec
adc
dec
mov
xchg
mov
xchg
addr16
aam
push
fild
cmp
and
jnp
into
sub
pop
cmp
popf
outs
jecxz
popf
mov
arpl
sbb
clc
je
dec
aas
shl
pop
cmp
cdq
xchg
push
inc
cmp
jnp
in
sub
lahf
mov
repnz
repnz
jo
jo
xor
fldl2t
pop
cwde
outs
loop
outs
ins
push
clc
dec
std
mov
jmp
jl
adc
fcomp
test
in
repnz
mov
add
ins
dec
arpl
jno
mov
cmp
call
pop
das
aaa
mov
add
sbb
clc
and
or
push
aam
retf
pop
shr
(bad)
jmp
movs
mov
das
jbe
sbb
pop
into
aam
jg
mov
cmps
push
push
adc
leave
call
add
fcmovb
sbb
cli
adc
push
mov
daa
shl
or
push
ins
fmul
dec
cld
mov
loop
mov
imul
sbb
aaa
pop
cmp
loop
fisttp
pop
repnz
repnz
stos
(bad)
or
out
jb
ds
loope
adc
pop
xchg
inc
stc
inc
or
sbb
or
loop
in
fidivr
sbb
or
dec
pop
fcmovb
cmp
cld
xor
and
test
add
retf
cmps
cmp
xchg
mov
data16
in
push
mov
mov
rol
nop
jbe
dec
pop
test
icebp
mov
and
sbb
test
lea
bswap
ret
push
shl
dec
adc
cmp
adc
jno
icebp
js
xor
xor
sub
push
les
jecxz
add
push
js
fmul
sbb
or
cs
and
or
shl
or
pop
test
repnz
jmp
fwait
inc
and
pop
ja
cmps
mov
mov
mov
mov
pop
retf
int
enter
sbb
inc
adc
daa
fisttp
in
repnz
call
call
push
push
retf
nop
into
std
inc
mov
fcom
push
loopne
stos
sbb
jmp
ins
sub
ins
ins
mov
xchg
mov
pop
cwde
or
int3
mov
scas
stc
lahf
es
scas
or
ss
and
mov
xchg
mov
or
jmp
outs
push
sbb
movs
mov
and
adc
dec
mov
inc
mov
in
pop
and
mov
call
xchg
scas
idiv
aas
test
hlt
inc
dec
adc
pushf
(bad)
enter
dec
outs
clc
mov
test
call
jp
cmp
pop
jmp
cmp
ret
sub
aam
xchg
push
jae
sbb
fild
jl
ror
sbb
pop
(bad)
outs
mov
jecxz
inc
mov
push
das
sbb
addr16
stc
inc
mov
(bad)
fisttp
stos
mov
dec
dec
js
aam
xchg
xor
sbb
ret
dec
pop
jno
xchg
adc
pop
rcr
and
rcl
pop
pop
(bad)
pop
and
lahf
leave
mov
ret
cmp
scas
stos
imul
mov
out
sub
(bad)
hlt
(bad)
mov
and
rcl
nop
push
in
(bad)
scas
rcr
mov
inc
mov
cmp
cmp
and
pusha
fcom
push
jge
add
movs
loopne
loopne
iret
push
retf
adc
not
cld
clts
add
sub
adc
shl
push
test
fidivr
dec
test
(bad)
cmp
fadd
mov
pop
loopne
xchg
push
xor
dec
mov
mov
cdq
ins
rcl
mov
cli
sbb
loopne
ja
call
fisttp
out
popa
call
(bad)
(bad)
dec
adc
mov
gs
lea
movs
test
sub
xchg
xchg
out
ins
fs
scas
into
sbb
jns
cdq
xchg
shl
jb
sbb
mov
mov
cmp
xor
xchg
fs
pop
xchg
xchg
cmc
or
out
mov
es
enter
ja
ja
cmp
fucomi
sub
mov
in
dec
dec
sub
in
daa
jmp
scas
xchg
mov
fsubr
lock
pop
aas
mov
mov
dec
shl
ffreep
ret
jbe
mul
adc
add
adc
into
imul
cmp
jl
movs
mov
test
pop
and
mov
add
in
cs
pop
add
mov
pop
xchg
xlat
stos
inc
ds
fdivr
push
push
mov
inc
cmps
add
sahf
retf
jmp
out
xchg
mov
add
and
adc
xor
push
push
add
xlat
pop
mov
pop
sti
jae
add
(bad)
mov
cmp
mov
das
leave
js
dec
or
push
fist
fst
and
dec
push
ror
imul
adc
inc
iret
lods
and
mov
daa
out
cmp
sbb
sub
mov
fiadd
push
or
pop
daa
push
(bad)
sbb
fst
mov
push
in
out
mov
lods
inc
fsubr
jmp
mov
cdq
jp
fbstp
cmp
cs
xchg
add
outs
into
inc
daa
mov
loop
repnz
hlt
sar
sbb
idiv
sub
aas
scas
mov
pop
sub
xor
retf
std
pop
and
dec
push
inc
ds
test
hlt
jle
inc
iret
cmp
pop
sub
xchg
shr
int3
inc
fwait
repnz
adc
cwde
push
and
ror
jg
pop
dec
sar
push
push
jl
cli
in
stc
js
jmp
ffree
stos
mov
es
and
out
bound
adc
fwait
dec
aaa
xor
cs
pushf
std
out
loop
pop
push
cwde
push
mov
int
and
mov
mov
pop
and
or
pushf
xchg
and
pop
sbb
outs
es
and
push
neg
fdivrp
jle
lds
mov
fbstp
adc
hlt
mov
dec
movs
pop
cs
outs
add
dec
adc
inc
mov
mov
cmp
les
mov
push
sahf
xor
fisubr
mov
leave
shl
pop
in
fst
add
mov
or
cli
lods
xchg
scas
sbb
jg
jmp
adc
inc
mov
test
mov
(bad)
xchg
ret
in
push
cmc
ins
jbe
in
add
xchg
lock
loopne
test
mov
jno
cmp
ins
clc
imul
inc
mov
sbb
pop
cli
(bad)
jb
jp
rol
stos
xor
sub
sti
sub
inc
scas
fisub
out
sar
cld
jne
or
cmps
and
rcr
push
add
cld
fdiv
addr16
test
and
mov
sbb
push
mov
or
jbe
cld
sub
fnstsw
or
jmp
adc
inc
inc
imul
pop
pushf
mov
das
inc
out
mov
retf
(bad)
and
dec
pushf
mov
and
into
outs
and
jl
outs
mov
retf
mov
pop
js
sub
aam
fsubrp
pop
xlat
push
mov
mov
xchg
inc
stos
or
push
test
fnstcw
loop
pop
adc
sub
sbb
and
mov
mov
or
cwde
mov
stos
pop
lods
cli
in
mov
retf
in
pop
into
and
iret
popf
xor
and
push
jo
mov
pop
pop
cmc
or
mov
mov
inc
and
push
cmp
je
call
cwde
sqrtps
es
add
mov
mov
mov
adc
shr
dec
push
(bad)
repz
add
jg
mov
sti
jb
stos
inc
(bad)
mov
repz
adc
scas
xor
mov
rcl
mov
xor
mov
pop
dec
xchg
mov
retf
push
push
jmp
push
lahf
pop
sub
cmp
neg
imul
inc
sub
out
mov
cmp
dec
push
call
das
imul
loop
imul
pop
cs
lds
dec
leave
ret
movs
xor
sahf
retf
xchg
call
ficomp
retf
cmp
loopne
xchg
mov
pop
sbb
pop
out
movs
dec
xor
xchg
sub
mov
xor
jle
sbb
adc
mov
inc
shl
aas
jle
test
or
pop
add
xor
xchg
and
mov
je
jge
mov
xchg
xor
loope
pop
add
test
mov
xchg
cwde
mov
ss
aas
je
lods
push
add
mov
js
fwait
pop
or
sub
iret
test
jle
(bad)
cmp
bound
mov
shr
sti
xlat
or
xchg
sbb
or
ret
div
adc
dec
push
inc
(bad)
jnp
push
mov
jp
sub
enter
retf
leave
mov
push
jnp
dec
mov
imul
mov
fldenv
stc
xchg
inc
dec
jne
or
pop
cdq
xchg
shl
imul
aaa
or
je
popa
push
fdivr
stos
lods
(bad)
test
sub
out
add
sbb
xchg
jle
inc
xor
lods
clc
push
cmps
imul
in
xor
sbb
mov
neg
pusha
hlt
test
dec
test
push
lea
pop
pop
mov
lahf
int
popa
gs
in
push
dec
(bad)
and
adc
je
xchg
xchg
hlt
test
bound
push
and
add
or
jle
mov
add
sbb
mov
lea
dec
mov
xchg
xor
mov
movs
mov
daa
out
pop
xchg
add
inc
mov
adc
(bad)
in
jne
clc
cli
imul
test
fisub
pop
inc
bound
mov
ds
stos
popf
inc
addr16
out
inc
mov
xlat
adc
xor
mov
jno
xchg
ss
pop
push
cmp
cmps
retf
sub
mov
into
mov
adc
push
add
addr16
out
sub
xor
jmp
std
pop
cmp
sub
push
sbb
mov
xchg
call
aam
xor
stos
aas
mov
pop
jp
mov
and
lods
ret
mov
mov
call
out
mov
test
add
mov
push
or
cmp
fbld
mov
nop
mov
lods
xchg
arpl
sbb
dec
lods
bound
add
push
mov
fcom
cmp
pop
jle
daa
fdiv
imul
ret
sar
adc
std
sbb
and
push
loopne
adc
sub
out
push
mov
dec
in
je
loope
popa
cwde
ret
sbb
fcomip
pop
push
(bad)
inc
les
fbstp
mov
adc
xchg
je
dec
call
pop
mov
pop
mov
lea
push
mov
leave
inc
sahf
arpl
inc
shl
sub
add
xchg
mov
xor
and
enter
lahf
mov
jle
xchg
cmp
mov
(bad)
xchg
pusha
movs
xor
and
imul
test
es
rcl
ins
or
sahf
inc
fidiv
or
cmp
fwait
adc
xchg
sub
inc
outs
je
push
cli
pop
(bad)
cwde
adc
sub
adc
mov
pushf
lahf
push
sti
nop
es
repz
xor
test
aam
mov
imul
test
(bad)
ficom
aad
mov
pop
dec
xchg
sbb
mov
adc
aas
lea
retf
sbb
leave
hlt
mov
dec
shl
mov
mov
dec
das
xlat
pop
mov
out
mov
daa
pop
add
outs
pop
sub
mov
enter
xchg
mov
outs
pop
push
cmp
cmp
jmp
adc
pop
lods
rol
nop
das
push
pop
enter
gs
xchg
xchg
loope
es
clc
fnclex
pop
and
loop
pusha
xchg
dec
cld
dec
nop
push
cmp
dec
in
lock
mov
mov
int
lea
lds
jnp
ret
cdq
sbb
clc
cmp
xor
push
xlat
lods
lock
xchg
jecxz
adc
mov
push
xor
test
mov
xchg
test
cmp
je
inc
adc
je
pop
lahf
out
and
rcr
fimul
fidiv
xchg
jbe
shr
lea
pop
jns
xor
xchg
(bad)
gs
jg
imul
inc
dec
adc
(bad)
and
mov
test
cmps
inc
xchg
cmp
cs
cld
pop
cli
(bad)
or
outs
sbb
dec
push
cmp
push
push
xchg
scas
push
sub
add
les
push
mov
adc
inc
or
mov
inc
lods
lock
(bad)
imul
scas
dec
and
jmp
or
mov
mov
inc
cmps
xor
cli
shr
fwait
stos
jne
push
mov
loope
cmp
push
gs
stos
movs
mov
jae
or
mov
mov
lods
sbb
mov
ins
mov
push
in
sbb
dec
sbb
xor
push
shr
xchg
inc
inc
adc
shl
or
pop
fld
jns
adc
call
or
out
gs
pop
mov
mov
xchg
jecxz
add
test
cdq
sar
fwait
int3
xor
out
popa
xchg
sti
add
pop
xchg
jbe
test
inc
mov
jno
data16
daa
xchg
out
and
inc
sbb
mov
inc
or
cs
xor
pop
jl
test
test
lods
ret
jp
xchg
cmp
sub
adc
sbb
jns
pop
or
xor
popf
mov
and
or
or
pop
fiadd
push
lds
mov
pop
iret
aad
clc
adc
push
popf
jo
shl
neg
xor
movzx
and
push
sbb
jg
or
dec
mov
jmp
sbb
cmps
ss
(bad)
loop
and
cli
sub
aad
cmc
mov
or
mov
inc
test
adc
xchg
mov
sub
adc
fdivp
mov
call
inc
pop
shl
adc
mov
ds
pop
sbb
fnstcw
mov
sub
stos
sub
jne
(bad)
mov
es
rcr
lods
pop
fldcw
adc
ja
bound
iret
xor
ins
movs
lock
cli
pop
adc
lea
mov
mov
cmp
pop
inc
aaa
fisub
push
mov
in
jno
push
mov
xchg
inc
jmp
inc
jl
jp
stos
inc
add
stos
and
mov
test
test
stc
inc
inc
inc
loopne
mov
ret
sbb
daa
push
popf
stos
imul
pop
mov
mov
mov
xchg
jb
pusha
fiadd
(bad)
pop
mov
sbb
dec
nop
xchg
cmc
outs
loopne
mov
test
mov
adc
dec
inc
aas
xor
pop
(bad)
and
mov
in
pmulhw
cwde
adc
jl
mov
fld
das
adc
cld
mov
cmp
and
inc
in
dec
je
fwait
ds
loop
jno
xor
push
sahf
xor
mov
adc
mov
cmc
xchg
pop
js
retf
in
jp
fwait
mov
mov
xchg
mov
xchg
pop
(bad)
or
or
in
xor
retf
les
and
xor
pop
add
cld
dec
adc
adc
(bad)
daa
xchg
xor
sub
jnp
stc
push
arpl
int
scas
(bad)
fsub
add
nop
jge
add
inc
inc
push
push
rcr
pop
push
shl
xor
test
xor
nop
int
push
sbb
into
pop
and
mov
cmp
je
(bad)
xchg
cmc
xor
inc
mov
or
outs
rcr
sbb
fisub
ins
pop
xchg
les
scas
jl
jo
and
mov
int
retf
out
in
cmp
and
add
push
xchg
stos
repz
ret
iret
fidivr
fcom
dec
into
in
test
mov
xchg
adc
aad
push
pop
movs
xchg
mov
gs
clc
jno
rcl
cmc
mov
mov
scas
xchg
sbb
inc
inc
pushf
rol
ins
xlat
pusha
retf
cmps
pop
jmp
cmp
mov
stos
gs
sub
mov
xchg
fsubr
pusha
ret
mov
idiv
jne
aam
fs
mov
rcl
mov
mov
pshufw
adc
jl
push
sar
call
test
push
xor
sub
scas
jmp
mov
cmp
sbb
enter
mov
jmp
push
xor
outs
dec
out
adc
test
int
in
adc
in
enter
aam
shl
adc
mov
lea
in
xchg
call
jo
xchg
shr
pop
shl
pushf
mov
jne
cdq
fwait
xor
shl
jle
je
pop
call
pop
jmp
or
adc
retf
mov
cmp
scas
inc
dec
jmp
push
mov
xchg
or
push
repz
pop
jge
pop
jnp
sbb
lahf
xlat
in
mov
stos
mov
aas
pushf
and
mov
sub
xor
(bad)
adc
outs
push
repz
iret
and
adc
shr
push
mov
(bad)
cs
(bad)
xchg
ss
and
xchg
dec
fistp
out
ss
out
jp
add
xchg
lahf
jge
or
xor
xlat
mov
iret
mov
icebp
pop
bound
imul
cli
or
sahf
jno
cdq
test
xor
nop
scas
sub
xor
popa
xchg
push
jae
call
mov
das
enter
fnstenv
xchg
iret
popa
arpl
(bad)
stos
sbb
aam
jmp
stos
pop
cs
cmp
jae
std
ss
xor
mov
fadd
inc
rcr
xor
push
into
jb
sbb
mov
hlt
pusha
out
mov
push
pop
dec
lods
cmps
stos
jl
shr
retf
into
call
dec
adc
cmp
mov
push
pop
arpl
or
and
stos
inc
xor
dec
adc
loop
push
syscall
jl
pop
or
push
lods
das
push
sub
dec
push
into
shr
ja
les
mov
scas
add
jg
push
jbe
mov
or
fdivp
pop
jae
retf
ins
sti
sbb
xlat
mov
xchg
(bad)
scas
aaa
enter
aad
jecxz
daa
mov
inc
int
dec
movs
dec
pop
icebp
mov
fiadd
test
jmp
fstp
outs
jnp
ins
sub
nop
sahf
cmp
or
cmp
inc
push
cdq
sub
sub
sbb
mov
js
xchg
movs
fldenv
js
sbb
in
les
push
aad
adc
ds
adc
add
pop
dec
pushf
xchg
push
jle
and
xchg
inc
fild
pop
mov
popf
scas
arpl
or
popa
jl
jo
sub
add
jne
inc
movs
pop
adc
mov
outs
mov
fs
inc
ins
and
pop
mov
arpl
nop
js
sbb
sbb
out
ss
jg
add
cmp
out
xor
xchg
call
test
imul
sbb
mov
sub
in
dec
jg
out
imul
sbb
mov
leave
ret
cmp
pop
es
cmp
test
ja
iret
sbb
mov
outs
hlt
sbb
call
add
pushf
mov
adc
xor
outs
jbe
data16
je
xchg
popf
das
xchg
mov
xchg
popf
and
test
mov
pop
sbb
pop
push
jne
arpl
leave
pushf
in
jg
mov
xchg
ror
sub
pop
sbb
(bad)
in
out
sub
mov
in
dec
pop
mov
mov
mov
pop
outs
fldln2
mov
and
xor
mov
into
jecxz
stos
in
and
inc
cmc
mov
(bad)
cmp
inc
int
dec
jmp
mov
xchg
cmp
bound
ss
push
sub
jne
rol
imul
dec
in
cmp
outs
aad
xlat
fdivr
or
pop
les
(bad)
out
enter
lea
inc
hlt
mov
iret
stos
add
(bad)
xor
add
adc
into
cmp
cmc
test
fdivp
mov
pop
sbb
jns
es
add
call
les
mov
aaa
mov
xchg
ja
pop
xor
out
mov
sbb
mul
out
push
loopne
and
jbe
cdq
scas
mov
push
(bad)
and
sub
lds
aam
and
ss
pop
adc
inc
cmp
sub
mov
test
out
(bad)
jg
out
mov
mov
inc
pop
jbe
imul
cld
xor
lods
inc
jae
call
mov
rol
test
xor
pop
cli
rcr
xchg
jbe
pushf
(bad)
mov
scas
xchg
sub
jmp
pop
mov
retf
test
sub
js
in
jnp
sub
mov
or
int
inc
push
mov
or
shl
sub
pop
rcl
mov
mov
push
ret
jmp
xchg
mov
adc
sbb
push
out
sbb
popf
sub
cmp
(bad)
rcl
mov
add
sub
cli
jmp
mov
ins
into
retf
mov
enter
mov
jp
cmps
into
push
add
mov
xchg
jl
add
movs
pop
inc
aaa
and
adc
jb
push
addr16
and
xchg
and
cmps
repz
dec
dec
imul
clc
test
adc
fdivr
mov
mov
iret
stc
jmp
outs
push
in
xchg
pop
and
dec
xor
jns
mov
pop
cmp
sbb
adc
cli
loop
or
movd
push
iret
cwde
xchg
stc
pop
add
int3
test
mov
fcom
movs
mov
retf
mov
push
(bad)
arpl
jno
pop
stc
mov
shr
jnp
std
popf
scas
outs
fcomp
push
push
jl
adc
hlt
cmc
cli
xchg
fwait
or
adc
bound
in
jae
cmp
icebp
shr
and
in
mov
push
and
push
pop
jne
or
or
and
jb
aas
mov
aad
push
scas
ss
jl
leave
jg
(bad)
mov
push
mov
xlat
jnp
mov
xor
ss
cmps
ds
xchg
mov
test
test
cmp
jp
sub
and
mov
mov
add
inc
push
inc
dec
clc
icebp
and
push
inc
adc
sahf
jmp
icebp
and
nop
stos
mov
and
cmps
sbb
mov
test
inc
retf
cmp
rcr
cli
cld
pop
pop
or
dec
sbb
jns
das
xchg
jae
retf
mov
jl
mov
push
cmp
mov
cdq
adc
sbb
pop
cmps
int3
jb
mov
js
dec
xchg
retf
mov
std
iret
pop
out
in
idiv
cmp
test
push
retf
xchg
and
mov
aad
push
lock
in
sbb
push
movs
stos
pop
int3
and
je
inc
imul
imul
mov
mov
and
xlat
pop
xor
adc
ins
push
xor
out
mov
dec
inc
(bad)
std
iret
js
add
iret
add
stos
xor
sbb
jno
cli
pushf
sbb
and
xor
xor
jno
rol
sbb
rcr
out
aas
xor
add
mov
push
sub
jl
les
dec
leave
inc
sbb
ss
ficomp
push
fcomp
mov
pusha
fcmovb
out
pop
gs
mul
int
je
inc
cmp
cs
and
fild
imul
jbe
jecxz
dec
daa
xor
inc
aaa
(bad)
test
dec
pop
mul
sub
test
pop
jnp
loope
cmc
test
imul
jnp
push
cmp
inc
cli
push
pusha
aam
cld
cmp
in
aas
hlt
retf
push
shr
scas
out
pop
sub
push
ja
add
daa
(bad)
inc
aaa
push
mov
dec
dec
dec
sbb
shl
jnp
or
cs
pop
adc
jg
fimul
mov
iret
push
cli
or
inc
add
movs
xchg
or
cmp
mov
mov
stc
dec
mov
push
pop
push
mov
pop
mov
movs
repnz
arpl
sbb
pop
and
mov
adc
popf
cli
jo
in
and
or
dec
lds
sahf
jmp
pop
mov
fidivr
hlt
push
sbb
adc
hlt
in
jo
(bad)
movs
fsubr
call
sar
mov
gs
pop
pop
cdq
mov
test
cmp
mul
jge
add
sub
cs
and
xchg
push
scas
push
test
or
jo
mov
nop
jle
cs
adc
dec
out
jo
repz
and
mov
imul
pusha
aam
mov
jne
lds
inc
inc
cdq
pop
sbb
call
mov
std
fbld
jmp
into
int
push
mov
pusha
scas
jo
cmp
mov
jmp
xor
dec
ins
sub
sbb
outs
in
sti
push
outs
jle
mov
outs
addr16
sbb
mov
sub
xor
stos
and
dec
cdq
stos
int3
cmp
push
gs
sar
adc
mov
sar
inc
pop
add
xchg
pop
add
adc
lock
jl
pop
jg
dec
ins
das
add
cmp
cmp
aaa
cmp
pusha
(bad)
jg
stos
add
inc
pop
xor
mov
outs
mov
jno
xchg
sahf
bound
movs
mov
and
gs
in
dec
cs
pop
add
push
lods
push
add
js
je
mov
xlat
ins
mov
jbe
bound
push
xor
shl
out
sbb
test
fisub
sbb
stc
sub
ficomp
js
pop
setno
rol
add
ror
push
xchg
xchg
loope
aas
add
xchg
and
pop
xor
mov
aaa
sar
mov
jne
popf
lahf
adc
in
jmp
shr
mov
aas
jl
imul
fs
jmp
inc
jmp
mov
fsubr
mov
js
mov
in
repnz
inc
push
add
mov
cmps
out
ror
movs
sbb
cdq
int
(bad)
adc
hlt
fld
or
lods
cmp
jbe
xor
gs
ins
das
daa
cld
dec
and
dec
fcomp
int3
(bad)
sahf
lods
ja
adc
cmp
push
xor
mov
mov
inc
out
cli
sbb
loop
push
mov
sbb
or
aam
pop
mov
iret
aam
shl
push
cmp
and
push
repnz
cmps
into
daa
sub
adc
loop
(bad)
jg
sahf
xor
and
mov
test
sbb
scas
pop
or
mov
nop
daa
scas
xchg
inc
mov
adc
(bad)
mov
sbb
sbb
loopne
jmp
cmp
scas
outs
ror
fwait
sbb
or
fcomp
aad
test
add
adc
xchg
sub
fistp
mov
mov
inc
int
js
add
jno
sub
pop
out
movs
sbb
dec
test
int
cmps
add
rol
sub
cmp
aad
test
cld
imul
loop
xor
mov
add
pop
mov
and
mov
push
(bad)
iret
push
pop
jge
(bad)
retf
pop
fcom
sbb
dec
inc
inc
(bad)
or
fdivr
push
fadd
xor
sub
js
outs
sbb
test
in
pop
push
scas
in
jb
dec
pusha
enter
call
idiv
pop
ins
movs
data16
and
loop
imul
in
mov
cwde
mov
mov
mov
mov
mov
retf
sub
mov
sub
cdq
pusha
cmp
xchg
aad
mov
mul
push
clc
pop
out
push
popa
cwde
and
xor
fstp
test
mov
repnz
in
xor
enter
inc
add
cmp
cmps
xor
pusha
out
or
test
lods
pop
and
dec
retf
pop
jp
xor
add
call
je
aaa
js
(bad)
loopne
dec
pop
(bad)
loop
inc
pop
mov
aam
or
loope
inc
loop
push
cmp
fldcw
push
pop
jo
cmp
ja
std
dec
nop
repnz
cmp
adc
repnz
mov
add
push
xchg
dec
std
pop
test
sar
nop
pop
mov
imul
add
push
into
adc
jge
inc
std
btc
loope
inc
rcl
sub
mov
or
jb
adc
xchg
data16
shl
sbb
xchg
gs
cmp
jmp
mov
push
push
loopne
xchg
lea
stos
xor
push
les
in
or
xchg
test
xor
das
inc
add
mov
jp
in
imul
add
out
fdivr
mov
sbb
stc
(bad)
out
and
cli
mov
outs
push
mov
dec
mov
adc
sub
or
mov
scas
sub
icebp
loope
mov
outs
mov
movs
sub
mov
xor
jle
cmp
or
dec
push
movs
ret
adc
push
das
pop
js
sbb
dec
and
clc
inc
push
sahf
xor
mul
dec
and
and
pushf
pop
mul
cmp
cmp
fnstsw
retf
sub
jno
jmp
fistp
push
aaa
iret
jno
rcl
mov
in
mov
sub
cld
mov
call
jecxz
jge
mov
inc
arpl
mov
xchg
rol
push
mov
mov
pop
xchg
fst
dec
or
sub
sub
fmul
push
jne
or
adc
fwait
dec
ja
cs
leave
retf
adc
les
jmp
fdivr
inc
and
mov
fild
dec
xor
mov
jmp
pop
push
push
add
xchg
test
mov
dec
and
cli
xor
in
(bad)
in
ret
(bad)
scas
mov
add
repz
(bad)
pop
stc
jle
xchg
(bad)
push
or
jg
jg
jno
jae
and
gs
jge
sub
mov
mov
loope
and
clc
aaa
or
test
arpl
cmp
xchg
add
pop
hlt
pop
sub
sbb
pop
inc
cmp
xchg
in
pop
mov
jg
push
add
faddp
add
stc
inc
sub
out
pop
add
xchg
arpl
cmc
cmp
into
gs
in
jae
add
inc
hlt
je
sub
test
retf
sar
aad
xchg
test
mov
fistp
mov
cs
adc
cmp
inc
shl
cdq
push
add
imul
add
pop
mov
je
out
and
adc
popf
ds
jbe
stos
mov
pop
add
xor
cwde
cmp
mov
push
mov
mov
and
xchg
pop
pop
add
xchg
mov
shl
push
mov
pop
sbb
xchg
sbb
or
jp
fwait
xchg
jns
pop
xchg
lock
inc
hlt
rcr
jmp
out
mov
add
cmp
loope
push
fcmove
push
dec
pop
ror
test
shr
aam
in
lods
mov
pop
jmp
mov
(bad)
repz
mov
mov
cmp
pop
(bad)
js
inc
gs
repz
clc
push
push
xchg
dec
pop
adc
mov
fptan
adc
or
sub
adc
xchg
push
out
mov
cmp
test
ret
sbb
cmp
mov
xchg
sahf
imul
and
shl
lahf
add
sub
stc
mov
mov
mov
mov
rol
pop
jnp
ss
pusha
jl
enter
pop
mov
and
xchg
fcomp
ins
jl
fstp
rol
jmp
dec
mov
xchg
aad
int
jle
sub
sbb
or
mov
ss
mov
ins
mov
fdivr
(bad)
or
adc
push
repz
mov
jg
ficomp
jno
lods
jmp
or
std
xchg
inc
jl
not
iret
mov
dec
imul
cs
and
cmps
scas
xchg
mov
jecxz
adc
and
mov
stc
push
and
stos
scas
jno
stc
push
push
test
jno
ins
in
push
mov
outs
not
arpl
add
data16
adc
bound
inc
cld
(bad)
dec
or
call
sbb
mov
xor
and
and
pop
in
mov
push
movs
clc
jnp
or
or
hlt
(bad)
fstp
pop
push
ins
cmp
stc
or
xor
jmp
dec
pusha
mov
imul
pop
sti
cld
mov
lea
iret
cmp
das
repnz
inc
mov
(bad)
out
add
movs
inc
icebp
push
xor
cmp
ret
loope
cld
inc
add
data16
je
xchg
xchg
je
in
retf
jge
call
nop
out
jg
ficomp
cmps
enter
or
inc
sbb
push
pop
jbe
add
bound
pop
int3
pusha
mov
retf
retf
fmul
repz
jbe
fadd
pop
push
fisttp
leave
aam
ss
push
(bad)
dec
sub
nop
js
adc
adc
daa
push
xchg
adc
xor
daa
mov
mov
or
and
adc
in
jmp
mov
jae
xor
add
imul
repz
pusha
rcr
and
mov
sti
mov
jb
mov
cdq
and
push
or
push
repz
std
cmps
sub
jmp
sub
mov
arpl
push
or
int
scas
push
xchg
movs
mov
push
lods
push
sbb
vfnmsub231ss
shl
or
pop
lods
sbb
xchg
fs
fldenv
jnp
lods
push
pop
repnz
ror
lock
push
lds
(bad)
push
pusha
mov
mov
or
pop
std
xor
cmp
inc
jae
or
bound
push
inc
push
cmp
cmc
stc
js
dec
sub
xchg
test
mov
sub
repz
adc
gs
xchg
out
out
add
pusha
int3
xchg
cmp
lods
add
les
(bad)
sbb
mov
xor
enter
xor
xchg
test
push
jl
jne
pop
pop
or
popa
aam
or
cmps
xchg
dec
mov
mov
fsubr
shl
and
jbe
imul
xchg
mov
mov
jno
and
cmp
mov
(bad)
int
shr
mov
imul
mov
pop
sbb
adc
out
ss
adc
test
cmc
add
lock
xor
mov
xor
(bad)
xchg
cwde
pop
jle
push
pop
jp
jae
jmp
mov
(bad)
loopne
outs
lea
jo
mov
cdq
and
push
mov
sbb
cli
cmps
adc
ja
sub
push
pop
fwait
xchg
mov
cmc
inc
mov
outs
and
mov
ins
adc
xchg
sub
xlat
pop
mov
in
push
mov
mov
push
sbb
into
fisubr
pushf
cwde
lds
push
pop
cmp
sbb
jne
inc
ret
xchg
fisub
xor
lea
cmps
push
es
mov
sbb
inc
add
and
movups
nop
cmp
inc
push
cwde
xor
mov
iret
shl
push
jmp
and
cli
ret
jle
or
inc
xchg
push
aad
fisubr
mov
repz
jnp
inc
mov
jecxz
mov
mov
lahf
dec
movs
repnz
mov
cs
(bad)
(bad)
xchg
or
pushf
leave
jmp
pop
call
fwait
push
leave
mov
xlat
inc
shr
adc
xchg
(bad)
sbb
and
aaa
shr
je
jge
(bad)
xor
(bad)
mov
nop
scas
cmc
cs
sbb
add
fbstp
add
cdq
dec
addr16
clc
dec
jl
stos
jecxz
(bad)
dec
fwait
scas
leave
jle
repnz
push
stos
inc
pop
xchg
mov
lea
xchg
sbb
mov
push
inc
pop
ret
push
mov
les
push
and
cmp
hlt
test
xor
rol
dec
into
in
(bad)
clc
inc
fdiv
jb
cmp
lods
or
sti
pop
test
mov
push
add
dec
pop
in
in
movs
das
add
xchg
pusha
mov
mov
mov
cld
psubusb
shl
sub
xchg
pop
pop
std
fwait
jne
cmp
mov
mov
xor
(bad)
fwait
fs
push
adc
fistp
xchg
mov
outs
cmp
or
imul
sti
out
addr16
jmp
call
jbe
cmps
imul
fst
es
push
ret
pop
dec
push
mov
sar
dec
push
call
adc
sub
jb
inc
mov
sub
inc
outs
mov
jmp
push
adc
mov
aaa
push
xchg
push
cmp
repz
jb
adc
jl
mov
jae
mov
ror
jne
fild
mov
pop
xchg
xchg
imul
push
dec
xor
push
(bad)
and
jb
xor
mov
xchg
test
mov
mov
mov
mov
test
(bad)
in
std
push
cmps
jmp
xchg
outs
xor
in
sahf
outs
and
(bad)
sbb
xor
pop
xlat
lods
lock
jmp
outs
(bad)
popf
dec
(bad)
or
pop
adc
pusha
aaa
sub
mov
pop
movs
imul
data16
add
mov
clc
loop
inc
xchg
inc
daa
mov
sub
lahf
inc
dec
cmps
dec
jp
inc
mov
jp
xor
push
fs
aad
jnp
sar
mov
mov
je
jge
sbb
mov
out
pop
add
(bad)
and
mov
and
pusha
shl
mov
inc
data16
mov
mov
xchg
and
mov
inc
mov
sub
cmc
xor
and
ins
into
cdq
xchg
mov
popf
mov
ja
pop
pusha
xor
out
xor
cmp
ins
sub
jns
xor
in
push
ds
icebp
into
jl
(bad)
xchg
pop
(bad)
lahf
cli
shl
not
pop
scas
mov
mov
outs
push
jg
mov
sub
pop
inc
retf
scas
jge
aaa
retf
rcr
iret
test
push
add
mov
data16
pushf
(bad)
jp
loop
outs
fs
cli
ins
adc
pop
xlat
xchg
pusha
dec
loope
and
adc
sub
xor
xchg
pop
outs
scas
leave
sbb
cmp
movsx
(bad)
rcr
ret
and
mov
mov
sbb
fmul
dec
inc
inc
mov
loopne
jae
popf
mov
mov
jg
inc
ds
push
inc
call
bound
ficom
mov
or
xor
inc
nop
or
cmps
scas
mov
pop
(bad)
dec
cmp
outs
pop
mov
cmps
mov
in
pop
sub
(bad)
fst
enter
xor
cld
mov
pop
jle
test
popf
jae
aam
jle
mov
add
jnp
or
cmc
dec
mov
mov
mov
test
push
pop
lods
inc
mov
mov
sti
xor
jmp
push
pop
(bad)
jecxz
frstor
frstor
mov
cmp
daa
(bad)
popa
jne
test
mov
imul
ja
pop
aas
push
add
imul
test
dec
xor
repnz
cmp
sbb
xrelease
or
pop
push
mov
pop
int3
into
sub
mov
icebp
or
out
mov
xchg
movs
or
addr16
cmp
es
and
jne
push
pop
xor
enter
mov
dec
mov
int
push
inc
jns
ret
ret
lea
(bad)
cmp
ins
loope
pop
bound
dec
sub
in
(bad)
in
lock
sbb
shr
std
lods
xor
dec
sbb
xchg
push
xchg
mov
dec
gs
mov
fwait
ins
lods
fisubr
push
mov
push
or
cmc
icebp
or
dec
jmp
sub
add
sub
or
lods
dec
push
ret
push
dec
daa
pop
addr16
mov
lods
mov
aaa
mov
ja
adc
pop
in
movs
cld
aaa
shl
sub
xor
gs
cmp
push
mov
push
sub
aam
pop
popa
mov
lds
loop
or
jl
sub
push
xchg
sbb
loop
int
sbb
or
or
pop
fidiv
sbb
loope
(bad)
mov
mov
sub
mov
and
dec
adc
std
rcl
mov
inc
xchg
dec
cmp
dec
dec
adc
sbb
fstp
mov
sub
xchg
jne
inc
adc
xor
ds
ins
imul
std
and
(bad)
aas
dec
bnd
cs
jbe
pusha
xchg
and
movs
inc
movs
jne
loope
stos
adc
jmp
shl
pop
xor
adc
push
adc
or
and
pop
loop
dec
fild
aad
mov
out
call
(bad)
nop
and
repnz
stos
adc
or
push
mov
nop
jge
pusha
outs
xchg
mov
es
add
mov
push
pop
cmp
mov
js
(bad)
push
lahf
sbb
dec
add
(bad)
inc
and
dec
mov
neg
lds
outs
ret
movs
out
stos
push
pop
jl
shr
xor
sbb
xor
xchg
repz
adc
sti
cmps
mov
mov
sbb
dec
mov
int3
mov
fmul
sub
(bad)
pop
push
dec
rcr
bound
fdiv
or
aas
push
ins
xchg
addps
jmp
mov
dec
or
inc
into
and
adc
push
dec
inc
xor
test
std
stos
push
push
cdq
pusha
dec
and
push
test
arpl
mov
repz
add
lock
movs
jns
mov
daa
loop
mov
(bad)
aas
lea
push
jne
inc
inc
cli
fisttp
shr
inc
xchg
ja
and
pop
rcr
(bad)
xor
xor
inc
out
clc
jmp
sub
jmp
or
std
xchg
lock
add
add
push
out
cmp
stos
fimul
and
jecxz
loope
fwait
clc
push
jg
mov
mov
adc
test
fcom
push
call
inc
(bad)
cmps
neg
bound
(bad)
fnstcw
mov
jle
fdiv
mov
fadd
ja
fimul
add
enter
fiadd
outs
sbb
push
mov
test
imul
scas
(bad)
push
push
cmp
(bad)
shl
js
pop
inc
cmp
fs
pop
sub
fwait
rcl
jnp
sbb
inc
cmc
ds
mov
add
sub
mov
and
mov
jae
xchg
lahf
inc
sub
hlt
data16
adc
cmp
sub
inc
fwait
jge
add
jno
sbb
scas
sbb
lahf
add
mov
mov
cmps
popf
xor
push
cmp
or
xlat
mov
scas
jae
pop
ins
popf
cmps
pop
cmp
(bad)
mov
sbb
pop
or
mov
adc
in
mov
jle
cld
or
sub
fidivr
out
cmp
cli
fucom
xchg
mov
push
sbb
jp
inc
(bad)
xor
jno
jmp
dec
mov
cmps
arpl
adc
mov
and
ja
sbb
lea
jmp
inc
clc
or
rcl
xlat
xchg
mov
dec
cmps
das
mov
call
iret
pusha
mov
xor
pop
or
adc
sbb
push
mov
mov
das
mov
mov
xor
add
mov
ds
outs
retf
mov
sbb
pop
mov
push
aas
call
call
jno
pop
es
popf
lahf
dec
rcr
imul
dec
addr16
jmp
sub
mov
jne
jecxz
fisttp
sub
xchg
repnz
mov
inc
imul
repz
fwait
gs
div
add
or
ret
mov
adc
mov
xor
call
xor
cli
fcomp
cmp
sti
adc
push
fstp
retf
out
lods
icebp
nop
push
je
int3
push
mov
xor
or
(bad)
jmp
mov
cmp
(bad)
in
aas
add
adc
imul
sub
in
fwait
sbb
sub
add
jg
arpl
sub
xor
retf
dec
add
arpl
addr16
ret
sub
in
xor
push
pushaw
or
push
cmps
clc
cmp
add
add
jns
in
push
retf
push
out
add
xchg
sbb
sub
pop
add
scas
nop
daa
outs
xchg
in
cmp
xchg
fs
out
xor
mov
pop
add
xchg
stos
test
js
and
mov
cmp
sbb
cmp
mov
adc
sti
or
mov
aam
sbb
jne
mov
dec
sub
mov
jl
or
xchg
cmp
out
ins
cwde
and
sbb
mov
(bad)
and
aaa
dec
loopne
nop
and
(bad)
jle
lods
cmp
mov
pop
lds
push
in
push
std
neg
inc
pop
xor
test
or
leave
cmp
jae
fadd
add
rol
sub
je
outs
cli
pop
dec
outs
sub
mov
stos
outs
inc
or
nop
lods
mov
aam
jecxz
cdq
in
mov
pop
stc
mov
(bad)
idiv
fldcw
adc
cmp
mov
cmc
test
cmp
mov
in
xchg
push
mov
xchg
aam
pop
sub
enter
mov
addr16
int3
pusha
push
lock
je
push
sub
xor
jb
call
dec
lods
dec
cmc
dec
cwde
cmps
fiadd
stos
pop
push
shr
mov
movs
sub
dec
movs
sub
pop
(bad)
sbb
and
adc
cmp
(bad)
cmps
xor
call
nop
dec
push
push
hlt
data16
pusha
adc
ja
jae
out
sbb
in
jl
nop
je
mov
mov
cmc
add
jbe
mov
je
jl
push
rol
xor
cmp
adc
outs
and
push
repnz
outs
fwait
xor
mov
sbb
or
daa
test
sub
jg
mov
lods
lock
or
mov
retf
xchg
arpl
jnp
mov
jecxz
aam
test
dec
aaa
imul
repnz
mov
les
jp
not
or
mov
and
dec
nop
jecxz
pop
ss
dec
push
les
jb
cmp
retf
pushf
xchg
mov
retf
scas
mov
xchg
jmp
call
call
adc
push
les
pop
fisttp
call
or
stos
jnp
xchg
mov
clc
adc
rol
cmp
push
xchg
repz
mov
je
or
mov
sbb
dec
jmp
pop
xchg
inc
add
repz
cmp
cmps
cmp
push
xlat
mov
sub
xor
add
or
push
ja
(bad)
stc
pop
adc
aad
mov
stos
repnz
pop
mov
cdq
cwde
leave
aas
mov
test
inc
jno
or
cmps
xor
sub
sub
sti
call
lea
pop
fld
test
scas
retf
adc
sysenter
out
jl
mov
jns
cmp
mov
cmp
push
mov
fs
cs
and
into
pop
sbb
xor
sub
pop
inc
jge
mov
jmp
pop
dec
push
sub
cmp
cmp
and
and
aas
repz
inc
ror
push
mov
lds
aad
mov
xlat
inc
inc
mov
pop
jo
out
mov
cmc
xlat
stos
ss
inc
loopne
aad
push
push
push
sbb
inc
int
sbb
loope
jmp
cmp
adc
stc
int
scas
and
sbb
cmp
xchg
mov
jb
xchg
push
pop
idiv
dec
cmp
xor
jecxz
add
sahf
cmp
and
bound
pop
sub
and
imul
and
pop
call
jnp
arpl
push
mov
mov
xor
push
ret
lahf
test
sbb
and
mov
mov
pop
and
xlat
xchg
xchg
sub
call
enter
std
push
ds
pop
inc
or
inc
movs
mov
add
in
xor
cmp
add
xchg
test
jg
push
dec
add
(bad)
or
jae
sub
sbb
xlat
sub
sub
enter
add
(bad)
or
scas
xchg
jge
popa
adc
jecxz
js
or
sbb
jb
cmp
cmp
test
out
das
enter
in
xchg
jbe
loope
jecxz
mov
loop
(bad)
add
cmp
cmps
out
stos
mov
jo
cmps
mov
xchg
jo
dec
jmp
cs
stc
mov
js
popa
push
into
jae
jno
pop
mov
fnstsw
addr16
pop
mov
(bad)
or
lods
out
mov
paddsb
jnp
in
add
lahf
dec
adc
adc
mov
outs
out
stos
rcl
sar
out
jbe
xor
out
in
mov
push
jp
pop
iret
mov
aaa
mov
add
pusha
and
adc
inc
xchg
lock
pop
out
cmp
jb
aam
scas
jle
scas
or
jnp
scas
pop
(bad)
pop
or
mov
ret
pop
add
jns
cmp
sub
outs
repz
inc
pushf
add
imul
hlt
vphaddwq
shl
mov
xchg
cld
mov
adc
sub
scas
push
push
test
rcl
or
sbb
dec
test
in
and
jge
enter
movs
cmps
and
test
sbb
dec
inc
pop
sub
mov
sar
call
push
int3
sub
aad
ds
mov
add
sbb
add
cmps
sub
fidivr
fild
fld
cmp
jbe
adc
push
dec
inc
out
stos
xchg
sbb
and
add
stos
adc
enter
imul
jne
push
test
xlat
mov
jo
fiadd
shr
fmul
push
into
ret
mov
scas
push
xor
popf
leave
lahf
stos
hlt
jmp
adc
or
cmp
mov
(bad)
cdq
pop
inc
or
sbb
in
ss
inc
mov
mov
out
pop
adc
scas
dec
ja
test
push
lods
pop
or
xchg
movs
daa
sti
add
test
in
cmp
pop
(bad)
outs
in
mov
push
jnp
and
cmp
movs
leave
xchg
pop
mov
(bad)
push
or
es
xchg
push
jecxz
ret
das
jnp
imul
cmp
pop
jmp
in
cs
fs
jno
jno
cmps
ds
cmp
lds
fwait
mov
adc
into
sahf
pusha
dec
test
sti
mov
(bad)
sbb
mov
jns
mul
out
cmps
(bad)
cmp
cld
mov
and
jae
sub
cdq
retf
add
mov
(bad)
adc
daa
test
daa
dec
dec
hlt
jp
push
arpl
popa
jb
jge
or
mov
icebp
in
push
mov
movs
push
(bad)
fwait
push
stos
jo
sar
aad
jg
ret
push
test
dec
fist
cmp
lods
push
sar
inc
repz
ins
dec
adc
and
leave
xchg
push
inc
outs
mov
or
in
icebp
cli
or
(bad)
scas
mov
clc
in
jmp
cmp
leave
add
fstp
ror
adc
jp
ins
or
add
dec
and
leave
jmp
fs
add
add
pusha
xchg
xlat
jno
push
gs
out
ins
sbb
sar
push
in
in
ret
dec
xchg
mov
(bad)
iret
sbb
add
(bad)
inc
jb
fs
xchg
xor
enter
aam
adc
pop
and
cmps
fisttp
(bad)
xor
add
mov
aad
pop
dec
mov
jnp
pop
mov
pop
xchg
mov
or
push
push
xchg
in
out
jle
enter
sbb
int
add
stc
ss
call
sbb
add
and
sbb
mov
dec
test
jle
cwde
idiv
dec
mov
add
add
mov
cmc
cmps
out
dec
cmp
std
cld
mov
sub
dec
pop
inc
sbb
and
dec
mov
sti
mov
sub
retf
push
add
sbb
sbb
cmp
xor
imul
mov
jb
sub
add
jecxz
in
jmp
je
pop
jge
cmp
fldenv
movs
push
test
cmps
mov
ror
mov
cmp
icebp
mov
adc
inc
call
cwde
inc
inc
mov
add
in
aad
(bad)
std
dec
lds
inc
imul
xchg
sti
stc
rcr
inc
aas
out
cmps
jmp
div
xor
cs
pop
xor
inc
xchg
push
mov
mov
rol
outs
push
jns
pop
inc
jecxz
xlat
inc
mov
dec
mov
fild
in
not
cld
pop
push
repnz
jo
sbb
inc
add
ror
imul
xor
mov
cli
and
mov
scas
adc
lahf
mov
ss
inc
push
push
add
call
mov
sub
bound
out
xchg
ret
aam
int3
loope
sbb
jle
and
push
push
jle
cli
test
jmp
ret
popa
add
ds
in
stos
mov
push
pop
pop
sahf
retf
addr16
or
fwait
adc
adc
or
sub
jmp
adc
aad
cmp
pusha
adc
push
mov
test
inc
dec
sbb
dec
dec
adc
pop
fcmovnb
or
xlat
stos
mov
nop
iret
dec
loop
dec
les
jg
dec
out
adc
mov
dec
jnp
iret
(bad)
call
test
mov
es
into
rcl
jae
mov
lods
push
enter
sbb
mov
cdq
and
in
test
jnp
jo
addr16
inc
ss
lods
inc
lds
dec
arpl
movs
mov
jno
xchg
lods
cmps
mov
xor
rcr
sbb
adc
adc
sbb
mov
cmps
enter
aaa
arpl
xor
out
jmp
xchg
ret
out
fwait
outs
aad
pusha
cdq
fild
shr
setp
fmul
psrad
mov
popa
sar
add
in
icebp
retf
mov
jae
jno
mov
mov
fild
cmp
or
fld1
sbb
ds
das
dec
cld
xor
lea
inc
lock
pop
jmp
bound
test
shl
inc
retf
in
xor
pop
out
scas
cmp
dec
ror
cmp
jne
arpl
or
das
push
out
sub
jns
push
arpl
adc
pushf
shr
fs
fdivr
xchg
xchg
cli
je
inc
mov
xor
int
popf
enter
or
ret
in
adc
cmp
cmp
lods
lods
imul
jbe
rcr
mov
dec
cmp
jbe
mov
dec
ficomp
xchg
(bad)
fistp
mov
leave
add
sub
and
out
sub
inc
mov
inc
movs
dec
sub
sbb
ret
mov
dec
pop
ror
imul
cmp
retf
adc
inc
retf
loope
sbb
push
jb
push
mov
clc
add
jmp
repnz
addr16
popa
mov
cmp
(bad)
rcpps
xchg
pop
arpl
xchg
dec
sbb
mov
cmp
pop
aaa
aad
fnsave
cli
repz
mov
loope
xor
push
stc
(bad)
inc
paddsb
jne
pop
addr16
mov
xchg
test
add
pushf
aaa
sahf
ja
adc
js
out
enter
pop
jb
movs
clc
fild
enter
mov
adc
pop
ret
fisub
cmc
in
in
push
push
add
das
push
push
adc
mov
mov
sbb
lock
rol
fnsave
xchg
sbb
cmp
jge
cmp
jmp
bound
out
add
in
push
rcl
xor
adc
adc
gs
call
sbb
pop
jae
or
or
push
push
dec
sti
pushf
sbb
neg
cmc
and
dec
sub
jg
mov
cmp
or
jno
mov
mov
xchg
mov
jbe
not
mov
cmp
sub
fs
(bad)
lds
test
sbb
xor
and
adc
imul
push
pop
iret
and
dec
adc
push
and
test
dec
test
neg
and
movs
dec
fnstcw
add
jmp
mov
cdq
mov
and
sbb
cld
enter
(bad)
xchg
fs
scas
sub
adc
xchg
xchg
pop
xchg
xor
jg
bswap
add
enter
mov
push
imul
sub
cld
xor
or
ja
cdq
gs
dec
nop
xor
cmp
fbstp
push
and
and
clc
push
mov
pop
or
call
imul
xor
ret
bound
xor
jg
ja
mov
add
fimul
jmp
inc
pop
xor
call
pop
xchg
int3
add
sbb
loopne
jmp
daa
ins
gs
push
xor
xchg
push
aas
xchg
dec
repz
adc
jnp
xor
sti
fs
inc
int3
iret
pop
inc
retf
sub
xlat
mov
popa
rol
ret
mov
ret
loop
shr
nop
lea
cmp
into
repnz
pop
in
push
or
repz
cwde
jae
dec
inc
sbb
pop
scas
aas
jae
add
adc
bound
scas
dec
dec
popa
sahf
jno
mov
mov
cwde
adc
mov
jecxz
push
xchg
out
shl
popa
test
fld
loopne
mov
fidiv
aaa
cmp
jo
mov
dec
jle
mov
aas
or
popf
pop
jmp
push
retf
sub
xchg
add
nop
sub
jbe
mov
pop
xchg
and
imul
daa
cmps
cli
imul
pop
lock
addr16
loop
sbb
repnz
cmc
aam
pop
ret
or
mov
(bad)
xchg
sub
push
fld
sub
(bad)
div
inc
vmovaps
and
jmp
jnp
ror
(bad)
and
call
inc
les
cmc
cdq
test
repz
dec
cmp
sbb
scas
fisttp
dec
or
dec
jae
push
or
sbb
inc
add
scas
mov
xchg
mov
(bad)
or
pop
mov
push
in
dec
sbb
and
mov
hlt
adc
pop
sub
outs
sub
inc
sub
std
cmp
das
es
pop
mov
int
pop
mov
ret
pop
mov
mov
inc
inc
gs
in
add
inc
xchg
mov
and
data16
push
sbb
pop
adc
pop
popa
popa
stos
sub
movs
or
ins
and
and
div
jne
add
aad
imul
daa
stc
xchg
push
or
add
adc
xchg
cmp
fild
outs
and
or
loope
fcomp
or
(bad)
cli
mov
inc
clc
jmp
inc
inc
dec
jg
dec
popa
inc
inc
cmp
js
cmp
inc
push
inc
sub
add
fnstsw
pop
mov
inc
mov
loope
arpl
push
dec
sar
das
add
push
cmp
fisttp
inc
or
mov
retf
fcom
jg
jns
cmp
jle
adc
aas
pop
mov
dec
mov
jns
mov
mov
push
dec
rcr
pop
add
sbb
push
and
add
ja
adc
mov
retf
ret
dec
loope
dec
mov
mov
gs
mov
imul
inc
daa
fsubr
push
mov
(bad)
fcom
mov
loope
data16
cmps
fs
lods
xchg
cmp
data16
inc
mov
popa
mov
je
inc
cdq
mov
mov
(bad)
aas
stos
mov
js
fstp
inc
push
aas
cmp
xor
mov
inc
xlat
cld
xchg
push
sub
sbb
jnp
inc
xchg
mov
add
mov
mov
les
test
mov
outs
repnz
es
add
shl
icebp
loopne
outs
je
xor
xchg
cmps
cmc
xchg
int
jecxz
push
bswap
fst
mov
sbb
and
jmp
sar
mov
and
push
shl
sbb
ret
lahf
icebp
call
cs
out
jmp
int
push
jg
cmp
jns
cmp
adc
ror
(bad)
mov
xor
or
sbb
push
popa
push
fiadd
inc
jbe
mov
cmps
das
push
mov
gs
cmc
mov
add
loopne
pop
into
cmp
stos
fist
xchg
stc
xor
xchg
jmp
xchg
data16
movs
jne
stc
lods
mov
fistp
ins
lahf
xchg
mov
popfw
addr16
or
push
sub
sub
scas
sub
or
scas
push
out
jae
mov
push
inc
or
fidivr
loop
jno
hlt
mov
pop
dec
mov
stos
xchg
inc
rep
push
sub
xchg
mov
sub
rdpmc
in
in
(bad)
arpl
(bad)
fisub
(bad)
call
scas
mov
sbb
jge
sbb
sbb
ins
push
rcr
movs
aas
scas
jmp
(bad)
loopne
ror
push
ss
dec
push
or
or
mov
ss
sbb
cmp
aas
jge
cdq
cld
inc
push
int
mov
mov
or
(bad)
cld
pop
cli
xor
fnsave
call
xchg
imul
pop
popfw
and
adc
nop
xchg
xchg
mov
std
mov
ret
test
std
test
xor
in
sbb
add
imul
iret
cmps
fcomi
or
sbb
add
sbb
outs
fidiv
lds
cmp
xchg
mov
mov
cwde
pop
scas
add
push
je
(bad)
or
xchg
rcl
add
jp
dec
pop
dec
push
call
pop
jmp
in
and
int
dec
adc
pop
call
cs
loop
pop
outs
xor
cld
xchg
xchg
test
sub
shl
xor
mov
fisub
aad
jno
xchg
test
not
and
xchg
push
sub
or
or
ins
xchg
sub
in
mov
mov
daa
scas
mov
push
fisub
int3
jb
movs
retf
lods
dec
stos
push
cmp
push
jle
cwde
xchg
stc
xor
add
adc
pop
sti
push
push
mov
sbb
jmp
push
movs
or
jge
inc
or
cmp
add
lock
cmp
aas
rcl
cmps
pusha
cdq
jge
push
scas
hlt
adc
ins
(bad)
enter
adc
loope
or
jae
dec
clc
mov
pop
sbb
mov
ret
das
movs
push
pop
in
cmc
test
inc
int
iret
dec
ds
rcr
outs
xchg
or
rcr
add
sub
and
sub
or
std
or
repz
xor
xor
push
stos
xchg
push
int3
pushf
pop
stc
pop
xchg
jb
mov
cmp
add
test
push
rcl
or
jae
and
fs
push
imul
cwde
dec
adc
mov
outs
mov
fisttp
js
inc
out
lods
push
imul
adc
adc
pop
mov
sub
call
jecxz
jb
retf
and
test
pop
pop
xor
or
mov
popf
jnp
mov
imul
out
fcmovnu
xchg
cld
xchg
mov
enter
cmp
rol
int3
add
xchg
xor
cmp
mov
xlat
adc
inc
outs
inc
repnz
(bad)
jle
hlt
pop
je
xchg
and
jnp
jmp
frstor
imul
in
and
inc
pop
fdivp
sahf
add
ss
out
mov
ins
cli
aam
mov
jecxz
cmp
add
or
jp
sbb
add
jns
out
call
add
sbb
jecxz
clc
jb
dec
outs
(bad)
mov
jmp
mov
fsubr
fld
jg
lods
jne
xchg
cmps
jne
aas
frstor
cmp
ds
adc
lea
cmp
lahf
addr16
push
out
je
push
loop
and
push
inc
xchg
inc
push
mov
scas
jmp
outs
cmps
fbld
pop
nop
mov
and
add
loope
lock
dec
fisubr
out
inc
sub
pop
iret
sub
into
add
sti
xor
dec
dec
arpl
fsubr
jmp
sbb
sub
and
icebp
cmps
dec
sub
adc
iret
mov
pop
pop
xchg
dec
adc
mov
sahf
dec
fisttp
arpl
xor
ret
out
ficom
or
sub
mov
ds
ins
push
xor
mulps
ret
xchg
pop
int
(bad)
push
and
jge
sbb
sub
mov
rol
mov
xor
mov
test
jb
les
mov
(bad)
mov
xor
sub
gs
mov
scas
or
imul
push
jp
pop
sub
push
dec
dec
call
mov
ja
adc
or
es
stos
nop
retf
and
int
and
jl
fadd
shr
std
fst
mov
jmp
clc
adc
xchg
imul
mov
sbb
jecxz
aaa
jl
mov
mov
xlat
in
fstp
adc
in
cmc
or
add
mov
or
movs
dec
and
int3
gs
rcr
sub
dec
scas
mov
push
adc
add
dec
mov
mov
sbb
fs
cdq
mov
xor
lock
fwait
sub
adc
dec
cmps
dec
cmc
pop
and
jle
(bad)
loopne
jne
push
xor
ds
dec
std
ins
sbb
ret
xchg
add
iret
mov
shl
cmp
fnstsw
xchg
cmps
mov
loope
leave
fmul
das
dec
xor
enter
ret
pop
or
mov
aam
jmp
sbb
mov
test
(bad)
mov
repz
fdivr
and
shl
imul
movs
dec
jl
xchg
sub
xor
fsub
out
add
add
movs
sub
sti
leave
daa
or
sub
mov
jb
dec
push
mov
aad
cwde
sub
mov
fistp
push
movs
or
imul
loopne
dec
push
mov
ficomp
push
in
cmp
ret
xchg
in
mov
ds
mov
fild
int3
and
adc
jl
sbb
dec
repnz
stos
sbb
jmp
add
xor
lock
or
dec
ror
repnz
int3
(bad)
test
out
mov
push
mov
adc
pusha
rcr
jno
xor
stos
ja
(bad)
idiv
das
push
repz
outs
shr
icebp
add
das
push
push
mov
js
push
(bad)
add
(bad)
xor
fcmovu
or
or
or
or
add
clc
ins
loopne
xchg
inc
inc
xor
pop
or
call
push
xchg
sbb
daa
dec
aad
int
mov
push
shr
push
add
mov
xchg
test
aas
retf
xchg
inc
push
add
xor
lahf
cmp
stc
xchg
cmp
sbb
xchg
pop
cmc
dec
arpl
adc
xor
out
xchg
jno
jno
std
cmp
jno
aas
pushf
int3
mov
and
ins
inc
aas
popf
sub
adc
jl
lea
mov
dec
cdq
xchg
aas
sub
xor
sahf
jmp
xor
mov
push
sbb
repz
mov
popf
(bad)
cmc
(bad)
adc
push
xor
adc
jecxz
ins
rcr
adc
inc
mov
out
fucomip
pop
push
pop
cmps
lahf
dec
retf
movs
fistp
add
(bad)
pop
rcl
xchg
ins
bound
push
adc
xchg
sub
cmp
pushf
imul
jmp
jmp
xchg
leave
ins
test
(bad)
in
aaa
sbb
or
push
inc
jg
pop
dec
and
pop
jb
test
ret
pusha
in
lods
pop
test
sub
cmp
xchg
aas
imul
aam
out
test
loop
inc
mov
or
xor
push
xchg
jo
(bad)
js
cmps
fs
xchg
imul
sbb
mov
clc
sahf
ror
mov
loope
jns
or
adc
sub
push
jl
push
sub
mov
in
mul
mov
dec
inc
mov
pop
or
jb
fmul
and
cmps
xchg
clc
std
inc
push
inc
repnz
xchg
in
std
sub
xchg
add
arpl
aaa
test
pushf
neg
pop
ins
pop
pushf
mov
fdiv
das
mov
xchg
movs
mov
cmp
js
adc
add
ins
stos
out
and
jge
xchg
test
(bad)
sub
or
ins
into
je
push
jmp
popa
adc
nop
mov
ror
or
jge
push
xor
mov
out
jmp
pop
rcr
ret
test
sbb
test
stc
imul
xor
push
add
stc
sbb
inc
in
cmps
push
cli
icebp
xor
bound
dec
push
ins
imul
cld
aaa
in
mov
mov
xor
pop
mov
push
add
mov
jle
inc
loopne
push
cmc
ds
xchg
shl
pop
sbb
fimul
loope
or
mov
mov
fwait
xchg
leave
dec
cmc
dec
or
hlt
ror
cdq
push
mov
mov
xlat
pop
and
pop
stc
inc
retf
sbb
daa
sub
xor
adc
addr16
frstor
add
fsubr
and
stos
push
xchg
repz
xchg
add
sbb
test
xchg
adc
dec
stos
sub
push
push
adc
push
xchg
lods
inc
inc
out
call
sub
ror
cld
sbb
add
sub
xchg
daa
inc
(bad)
inc
cmp
movs
ins
mov
inc
and
(bad)
call
cmps
mov
or
aaa
jns
mov
mov
or
sbb
out
movs
sub
lahf
xchg
bound
outs
arpl
cmp
adc
or
mov
and
fidiv
sub
cld
movnti
sub
mov
addr16
iret
jle
xchg
cmp
cdq
repnz
ss
and
jg
adc
and
into
gs
sub
lods
fild
mov
stos
push
es
xchg
mov
xchg
shl
and
xor
sbb
lock
add
out
sbb
stc
sbb
ror
mov
aad
sub
xchg
push
pusha
fsubr
mov
push
mov
sub
aam
aas
ret
or
mov
mov
inc
jg
xor
cwde
mov
ret
sahf
jnp
pop
call
int
cdq
xchg
lahf
mov
pop
jle
ja
pop
jecxz
movs
aad
xchg
xchg
inc
push
lahf
bound
jae
xchg
sub
inc
(bad)
addr16
push
xor
shl
stc
(bad)
xor
and
rcl
ins
sub
sbb
or
or
(bad)
push
inc
or
outs
sti
pop
mov
dec
(bad)
push
movs
(bad)
test
fistp
pop
add
out
mov
xchg
sub
aaa
leave
adc
icebp
sti
cmovl
xchg
(bad)
push
aad
ror
sub
add
mov
xor
fmul
shl
test
loopne
jmp
aad
fwait
xchg
in
cmp
and
lea
sub
cmp
xor
sbb
inc
out
test
mov
or
in
mov
(bad)
cmp
stos
(bad)
mov
pusha
aad
jmp
arpl
adc
cmps
pushf
imul
jbe
mov
or
dec
clc
(bad)
sbb
xor
stos
sub
shr
ret
cmp
jge
imul
cmp
fdiv
(bad)
mov
adc
test
ss
pop
cmp
xor
sub
loop
clc
rcr
mov
iret
cmp
push
mov
addr16
adc
mov
in
jg
stc
mov
pop
sbb
pop
mov
pop
loope
loop
dec
mov
dec
add
inc
cmp
mov
push
pop
mov
push
mov
mov
xchg
fmul
enter
scas
inc
and
sub
or
xchg
jecxz
xor
jmp
lea
jnp
inc
cmp
push
outs
push
jmp
cdq
call
jo
mov
inc
adc
jge
mov
movs
out
xchg
mov
frstpm(287
adc
cmp
add
out
jae
ins
es
xor
aad
outs
jmp
mov
pop
repz
inc
sti
jecxz
lock
adc
mov
imul
push
or
dec
mov
or
test
xchg
cmp
mov
fst
sub
aaa
fimul
sub
mov
dec
mov
pop
rol
mov
xor
stc
es
cmp
imul
jo
loopne
imul
sbb
sub
out
je
enter
jle
aas
cmc
lahf
inc
cmp
adc
mov
pop
cmp
jle
add
jmp
or
rcl
lods
jp
lahf
lods
ins
fwait
xor
pop
in
mov
adc
cwde
add
or
push
dec
iret
xlat
fidiv
mov
test
sbb
fs
shl
mov
cmp
xchg
in
sbb
mov
mov
fimul
xchg
sbb
adc
xor
cmp
pushf
adc
xchg
lods
es
inc
pop
stos
in
call
sbb
call
scas
cwde
fistp
add
fwait
xchg
(bad)
icebp
push
push
pop
mov
add
dec
mov
adc
mov
mov
(bad)
mov
xchg
shr
test
inc
inc
dec
in
jmp
es
ds
or
sub
repnz
mov
push
out
adc
stc
retf
fwait
or
pop
sub
pushf
mov
(bad)
out
sub
push
mov
jle
xchg
xor
dec
xor
mov
xchg
and
mov
and
pmaddwd
not
mov
jo
nop
jo
out
or
fsubp
adc
retf
outs
int
popa
mov
loope
mov
sbb
lods
sahf
xor
call
pop
in
jns
fldcw
xchg
gs
mov
ins
test
jl
jne
lea
xor
aam
fnstenv
sub
or
jns
mov
shl
dec
and
nop
jae
in
and
and
mov
jmp
cmp
mov
cmps
push
xchg
jno
aaa
xor
mov
jno
gs
mov
mov
test
push
clc
xchg
cmp
(bad)
sub
sub
cmp
ret
push
je
sbb
fwait
add
xchg
cwde
out
sub
push
lea
shr
rdmsr
ret
std
or
mov
push
dec
(bad)
repnz
dec
pushf
arpl
adc
aas
push
fisubr
jecxz
mov
retf
clc
mov
xor
jecxz
xor
and
out
aas
in
enter
scas
push
in
js
arpl
and
mov
cmp
sub
fwait
xlat
cs
mov
cmp
popf
loop
into
loope
inc
cmp
jle
bound
jb
mov
ins
out
(bad)
or
ret
inc
lahf
call
fcmovu
mov
ror
jle
inc
push
push
push
out
push
push
call
adc
xor
xor
jae
out
inc
lds
mov
scas
ds
dec
add
iret
jg
mov
(bad)
dec
test
adc
stc
push
adc
cmc
inc
rcr
aas
jg
and
jne
add
popf
aad
cmps
sbb
add
movs
cmp
sbb
int3
fs
ins
stos
add
(bad)
sahf
retf
std
xchg
hlt
pushf
xchg
cmps
sar
mov
sub
jbe
cmp
sub
div
push
cmp
xchg
loopne
ficomp
mov
adc
cdq
inc
ds
jl
push
sub
jne
movs
shl
movs
or
and
cmp
jne
push
push
in
pop
and
push
pop
loop
out
sub
fs
popa
sbb
leave
addr16
lahf
push
inc
push
lods
popa
icebp
sub
ret
dec
fucomip
sub
ins
mov
scas
sbb
add
scas
cld
outs
jne
mov
xor
pop
mov
cmp
(bad)
mov
mov
mov
ins
fcmovb
lds
jge
mov
sub
outs
nop
mov
call
stos
mov
jle
xchg
movs
xor
add
push
xchg
pop
jmp
jns
jne
in
loopne
cmp
jnp
mov
dec
repnz
mov
mov
push
cld
mov
bnd
mov
mov
push
jns
in
add
fisubr
push
je
loope
and
pushf
out
fwait
add
push
xchg
test
push
pop
pop
cmc
pop
movs
inc
test
mov
mov
movs
icebp
sbb
jmp
add
jl
or
ror
mov
mov
shr
mov
sub
aas
test
pop
(bad)
loop
mov
dec
into
push
push
dec
mov
sub
ror
rcl
retf
mov
sar
jecxz
in
push
mov
repnz
lods
mov
mov
sub
mov
clc
(bad)
in
mov
or
push
inc
jle
inc
into
pop
popf
(bad)
nop
mov
std
jb
js
test
outs
jg
sbb
jne
daa
out
cmp
mov
test
cli
pusha
dec
mov
or
int
jno
mov
int3
test
add
fs
inc
retf
cld
mov
mov
sub
fistp
sti
iret
imul
push
outs
cmp
sbb
fistp
inc
and
inc
xchg
scas
fldcw
sahf
sahf
add
inc
mov
pop
scas
add
mov
hlt
mov
(bad)
(bad)
nop
inc
xor
jb
loopne
popa
lds
mov
les
lods
(bad)
aas
dec
mov
pop
pop
mov
mov
dec
ret
mov
out
push
sar
cmp
jge
iret
cs
dec
leave
dec
pushf
and
js
sub
mov
in
or
je
call
shl
loope
scas
fiadd
mov
xchg
or
jo
push
add
mov
mov
outs
test
pop
shl
sbb
mov
loop
test
fiadd
pop
mov
mov
jmp
add
mov
int3
adc
lds
xor
xchg
mov
mov
cmc
dec
loope
mov
lds
sti
vrsqrt14pd
inc
cmps
cmc
and
in
mov
push
fs
jl
dec
stos
shr
ja
das
pop
les
xor
sbb
fimul
mov
xor
pop
sub
out
and
xchg
inc
ret
adc
add
push
popf
ss
cmp
aam
mov
js
fsub
shr
dec
repnz
sar
repnz
aam
inc
pop
dec
retf
lock
xchg
sub
call
cmps
not
mov
cld
jae
mov
jbe
leave
push
cs
cmps
fsubr
inc
call
dec
mov
out
pop
push
inc
(bad)
fsub
cmp
(bad)
adc
adc
ss
(bad)
push
mov
nop
sbb
dec
lea
mov
neg
push
scas
and
outs
push
push
test
adc
mov
or
sbb
fdivr
dec
and
dec
jno
pusha
cmp
inc
xchg
pop
and
imul
mov
jo
pusha
or
jp
jg
hlt
pop
lock
callw
test
(bad)
sub
(bad)
pop
cdq
loopne
movs
test
js
push
(bad)
out
jecxz
pop
adc
mov
scas
imul
or
fnstsw
std
fldenv
pop
xchg
mov
dec
push
jmp
adc
push
(bad)
outs
and
fsubr
add
int3
gs
mov
mov
jb
ins
outs
dec
int3
in
and
jle
mov
push
xor
push
repz
iret
pop
and
rcl
jnp
retf
mov
pop
daa
cmp
pop
jno
adc
(bad)
(bad)
clc
xchg
(bad)
xchg
outs
xor
ds
dec
fst
pop
mov
lds
pop
xchg
sbb
lds
jno
cmps
leave
cmp
mov
push
dec
adc
int3
inc
ins
mov
ret
sbb
push
inc
push
inc
loop
int
or
mov
dec
push
sbb
aam
test
dec
add
sub
xlat
(bad)
xchg
mov
cli
or
adc
int3
rcr
xchg
jo
mov
repnz
push
scas
out
sbb
dec
stos
mov
sbb
lock
dec
addr16
sub
lds
repnz
les
sub
pop
mov
mov
cdq
not
xor
call
call
mov
jbe
push
(bad)
mov
aas
mov
dec
rcl
lahf
xchg
sahf
into
and
daa
push
sbb
adc
jge
pop
cmp
jno
push
xchg
mov
dec
dec
in
or
mov
iret
icebp
sub
enter
jle
outs
push
aad
cmps
sbb
gs
mov
push
xor
sub
sub
call
es
push
mov
fadd
(bad)
xlat
call
mov
and
rcl
das
test
or
lock
xor
fbld
in
inc
xchg
clc
popa
inc
adc
iret
fdiv
retf
lahf
pop
rcr
inc
xchg
test
add
das
(bad)
push
imul
pop
cld
and
or
and
pop
xlat
in
das
lock
jno
(bad)
neg
and
(bad)
push
xor
(bad)
mov
cmc
cmp
popa
mov
pop
xchg
push
(bad)
sub
jo
inc
jmp
outs
je
push
lods
ss
cmp
call
aaa
xor
jo
scas
xor
dec
and
dec
fs
pop
loopne
add
movs
fisttp
mov
lds
shr
or
cdq
or
mov
jo
out
arpl
xlat
and
mov
xor
mov
pop
push
jp
daa
cmp
test
mov
loop
je
ins
jg
ins
sub
mov
lock
psrad
je
add
xlat
les
dec
add
icebp
cmp
repz
int3
xlat
daa
or
jae
mov
jae
arpl
mov
icebp
(bad)
jge
(bad)
dec
lahf
mov
ins
repnz
mov
mov
sahf
pop
mov
fbstp
fldenv
shl
xchg
daa
add
fild
loopne
or
adc
repnz
sbb
jmp
arpl
adc
jp
lahf
fsub
xor
and
cwde
lds
adc
mov
in
mov
mov
push
jl
inc
call
pop
aas
dec
ins
not
(bad)
jecxz
add
push
xchg
test
jnp
sub
pop
test
xor
push
push
hlt
and
stos
dec
repnz
repnz
cmp
in
retf
in
call
mov
daa
adc
(bad)
ret
jl
cmp
dec
cwde
inc
fcmovne
jae
fnsave
aam
push
fdecstp
cmp
(bad)
shl
adc
cwde
fst
dec
xor
push
push
shl
aam
mov
imul
stos
and
outs
xchg
xchg
pop
and
fwait
inc
push
and
out
shr
cwd
cmp
jns
pop
pop
mov
xchg
mov
push
mov
jmp
push
bound
xlat
stc
pop
lahf
or
dec
mov
in
inc
push
movs
mov
addr16
loopne
fimul
lahf
mov
aad
scas
and
addr16
mov
ds
sbb
loope
and
jge
xor
lds
ins
sub
lods
pop
jo
jmp
call
fild
xchg
jmp
pop
add
call
sub
fwait
daa
inc
stos
(bad)
cmp
out
adc
push
cmp
and
mov
rcl
and
in
adc
shl
push
and
xchg
jns
mov
sub
adc
repnz
inc
sar
hlt
jb
(bad)
mov
fwait
pop
test
cmp
(bad)
sbb
retf
mov
test
mov
or
pop
mov
mov
mov
xchg
push
test
xchg
sbb
popf
add
cld
shl
pop
push
fwait
add
pop
inc
test
add
add
test
jl
(bad)
cld
dec
adc
nop
cmp
mov
inc
mov
sbb
xor
mov
fsub
cmps
dec
into
mov
test
bound
outs
jmp
addr16
in
cli
aas
inc
(bad)
aas
or
js
lds
jp
mul
pushf
adc
pop
movs
add
push
inc
out
push
jle
mov
nop
stos
pushf
cmps
push
stc
(bad)
lahf
xchg
aas
pcmpeqw
bound
fisttp
dec
mov
and
cmp
xchg
lahf
xchg
sub
das
fwait
pop
or
daa
fsubr
aaa
inc
inc
pop
aas
push
aad
shr
jle
test
inc
dec
aas
adc
leave
mov
jae
add
in
push
sbb
and
mov
and
mov
aam
hlt
add
cmp
nop
leave
je
sbb
aaa
nop
mov
push
pop
mov
out
into
mov
jmp
outs
fwait
push
call
sti
arpl
dec
xor
(bad)
pop
pop
push
and
push
or
jns
xchg
inc
aaa
adc
stos
inc
js
loopne
cmp
jmp
add
stos
ja
mov
xor
pop
pop
ror
pushf
aas
cmps
fistp
xchg
xor
retf
hlt
jge
sbb
call
or
aas
push
cmp
cmp
arpl
xchg
ins
std
enter
outs
sti
cmp
in
fmul
or
push
mov
mov
test
loopne
inc
pushf
push
retf
jge
retf
test
adc
cdq
mov
push
cmc
fwait
xchg
ret
out
sbb
pcmpeqd
das
jmp
aaa
jmp
dec
sub
jge
mov
jo
pop
shr
inc
sti
xchg
popf
jg
xchg
inc
inc
inc
adc
or
inc
retf
fiadd
mov
stos
dec
jbe
shr
pop
cmp
(bad)
adc
xchg
mov
pusha
popf
mov
xchg
fnstenv
mov
xchg
cdq
push
call
xchg
jae
vmovmskps
nop
cmp
sbb
dec
or
sbb
shl
icebp
jmp
outs
cmps
xor
pop
lahf
or
sar
pusha
addr16
and
lahf
daa
popa
fcomp
sub
mov
jne
mov
push
mov
mov
xor
ror
aas
sti
inc
outs
push
mov
mov
into
repz
or
fnstsw
inc
aam
jp
push
jbe
out
imul
imul
mov
movs
xchg
pushf
aad
adc
push
enter
pop
inc
mov
push
iret
xor
(bad)
cli
mov
jo
jg
rol
xor
sbb
aam
es
jbe
imul
cmp
sbb
or
nop
movs
sub
push
jae
fnstenv
inc
int
push
cmp
mov
cmp
iret
and
jne
rcl
jb
jns
mov
pop
idiv
loopne
mov
test
sbb
test
mov
cmp
(bad)
mov
pop
icebp
iret
cmp
xchg
lods
dec
push
and
jnp
mov
retf
cwde
loop
addr16
sub
bound
pop
or
(bad)
call
fwait
mov
(bad)
in
inc
jne
inc
push
or
(bad)
jnp
sub
test
test
or
pushf
cmp
dec
stc
cmp
mov
jns
inc
(bad)
test
out
jo
inc
repz
sub
jae
xchg
aaa
mov
mov
cwde
xchg
jnp
or
xchg
fwait
iret
iret
xchg
adc
aad
popf
out
aas
sub
sbb
sar
mov
mov
jns
gs
pop
jl
les
add
pop
pop
push
pop
push
sub
jbe
faddp
fisubr
add
add
dec
jnp
(bad)
lea
xchg
sub
xor
stos
pop
sub
mov
xor
jae
inc
ja
retf
jl
or
mul
in
mov
jnp
cmps
sub
sbb
push
mov
and
dec
mov
dec
jg
mov
fs
adc
(bad)
(bad)
lea
push
arpl
and
repz
xchg
bound
inc
or
add
fmul
in
xor
adc
(bad)
(bad)
in
(bad)
in
pop
push
dec
cs
fs
sbb
imul
mov
and
fst
cmp
fild
in
mov
stos
popf
mov
test
add
pop
int3
js
aaa
pop
fs
and
inc
test
popa
aaa
add
femms
xor
imul
mov
adc
inc
fsub
aaa
or
sbb
jle
loop
fcom
xchg
xchg
ret
pop
repz
cmps
push
mov
pushf
xor
or
stos
mov
stos
test
ds
ins
dec
push
add
gs
pop
xchg
clc
xchg
pushf
adc
lods
mov
pop
mov
ins
inc
and
xchg
shl
pop
push
shr
call
sbb
les
sub
sti
xchg
jmp
pusha
or
jns
jbe
cs
shr
push
inc
xor
adc
into
stos
push
mov
rcr
push
aas
out
dec
mov
data16
in
adc
pop
and
js
inc
in
mov
mov
lds
in
cmps
mov
dec
mov
popa
jl
pusha
adc
enter
cmp
or
add
jmp
retf
xchg
push
xchg
sub
mov
sbb
cs
ud1
inc
push
push
push
test
push
mov
push
hlt
pusha
mov
test
mov
cmp
push
pop
(bad)
xchg
adc
push
fisub
sub
(bad)
jge
inc
pop
xchg
adc
dec
push
outs
mov
push
sbb
aad
mov
loop
ins
out
xor
scas
jl
jns
je
imul
xor
fiadd
xor
les
rep
sbb
mov
pop
cs
sar
in
icebp
xchg
push
sti
pop
inc
or
cs
rcr
sti
sub
(bad)
popa
(bad)
in
js
ins
xor
mov
add
rcl
pop
cli
mov
iret
jae
cs
inc
call
fdivr
sbb
inc
pop
push
cli
and
mov
dec
jecxz
push
mov
push
push
mov
sub
pop
fucomi
and
and
out
mov
dec
repnz
push
or
call
pop
loope
sahf
retf
sahf
test
test
or
mov
leave
std
lock
pop
gs
bound
sahf
xchg
or
out
mov
push
lods
push
mov
ja
xchg
xchg
ds
popa
hlt
add
movs
ins
lea
jp
or
jns
mov
mov
mov
pop
push
cmc
pop
jae
inc
pop
pusha
daa
ja
out
sti
es
pop
xor
mov
sbb
scas
xor
sbb
pop
in
pop
pop
adc
leave
pop
bound
pop
(bad)
nop
jno
mov
(bad)
je
scas
mov
data16
mov
dec
push
mov
adc
lods
dec
adc
mov
pop
sahf
and
mov
sbb
fwait
scas
bswap
adc
push
out
mul
cmp
mov
mov
cwde
(bad)
mov
inc
and
cli
mul
pop
nop
mov
pusha
dec
sub
mov
adc
not
aaa
ja
popa
ror
adc
cli
ja
or
rol
xchg
sbb
cs
xchg
mov
fwait
ret
in
das
adc
enter
pop
xlat
jg
les
pop
add
cli
pop
or
push
jp
sbb
push
or
sub
std
sub
add
idiv
cmp
jnp
sbb
and
enter
aas
in
sbb
ficom
je
into
push
cmp
ds
mov
adc
inc
jae
out
sub
xchg
and
in
fbstp
xor
mov
mov
jb
pop
xor
pusha
jns
cmc
stc
xor
clc
push
imul
push
and
mov
mov
jg
pop
jp
and
cwde
mov
add
fistp
leave
fdivr
inc
jae
jle
dec
inc
(bad)
arpl
xor
mov
fs
pushf
dec
xchg
inc
mov
sbb
adc
jae
(bad)
cmc
jae
(bad)
sbb
mov
neg
es
push
aam
scas
jecxz
mov
ds
inc
fnsave
ins
mov
pop
push
mov
mov
and
call
pop
cmps
cmp
dec
add
icebp
fist
push
sahf
in
mov
pop
xchg
lock
mov
rol
fsub
inc
jae
lds
cli
les
retf
(bad)
and
(bad)
xchg
and
(bad)
pop
repnz
mov
cmp
cmp
jmp
xchg
cmp
pop
or
in
add
lds
movs
push
adc
punpckhwd
sub
iret
fstp
aam
outs
sub
dec
mov
xchg
xchg
(bad)
and
lahf
ds
gs
pop
push
ja
and
push
and
pop
in
out
neg
push
xchg
stc
outs
inc
dec
pop
(bad)
enter
pushf
pusha
(bad)
mov
mov
fdivr
dec
mov
dec
dec
ins
movs
mov
sub
push
outs
ret
into
fisttp
(bad)
mov
sahf
add
mov
xor
add
jb
cli
mov
es
call
cmps
test
adc
mov
jbe
fcom
test
cmp
fs
and
inc
ins
jnp
dec
cmp
jno
icebp
and
int
add
ja
loopne
cmp
sub
jge
aam
xchg
iret
or
mov
push
jbe
inc
mov
mov
and
(bad)
sbb
jae
adc
in
xor
xchg
inc
lea
call
add
mov
ja
xor
je
pop
pop
test
sbb
test
(bad)
shl
in
mov
dec
push
inc
loop
repz
xor
nop
sahf
stc
daa
mov
or
add
fsubr
mov
int3
sub
mov
or
or
repz
pop
xchg
stc
loop
sbb
and
inc
xor
push
inc
das
(bad)
popa
retf
lods
push
hlt
or
xchg
neg
into
les
scas
fwait
cmp
and
call
sub
mov
add
imul
add
inc
cld
mov
sub
les
addr16
fs
jecxz
(bad)
loopne
pop
cdq
cmp
xchg
lea
fld
jecxz
or
outs
jmp
fbld
jecxz
loope
popa
push
std
mov
(bad)
cmp
add
fcom
inc
mov
dec
cmc
jnp
or
clc
add
mov
xor
int
outs
(bad)
cmps
dec
pop
out
cli
jne
retf
mov
xor
sub
sbb
or
jecxz
mov
pusha
mov
xchg
ss
and
(bad)
loopne
jle
and
add
int
push
jge
push
retf
xchg
pop
xor
or
jns
jmp
add
sbb
sub
pop
ja
ficom
mov
jb
jle
jp
sbb
ss
or
and
jne
aaa
jg
push
jbe
adc
fst
pop
adc
in
aaa
movaps
gs
cmp
dec
mov
cmps
inc
cmp
push
push
jmp
pop
xor
cld
xchg
rcr
fnstsw
and
aam
pop
cld
adc
inc
add
sub
and
hlt
and
jne
and
pop
lahf
cmps
or
in
dec
into
daa
pop
(bad)
repz
and
inc
xchg
xchg
jnp
outs
lods
sbb
call
dec
iret
xor
ja
les
and
cmp
test
or
(bad)
jp
ins
into
push
mov
test
or
out
mov
out
add
add
leave
(bad)
loop
jbe
sub
pop
repnz
imul
aas
in
xchg
pop
movs
cmp
push
sar
cli
sbb
jmp
popa
jno
repnz
in
aam
shl
neg
scas
mov
cmp
ins
imul
add
xchg
jnp
clc
xchg
xchg
cmp
in
ins
mov
sti
cmps
cmp
icebp
aas
arpl
push
jmp
pop
fwait
mov
(bad)
mov
jnp
inc
or
imul
imul
fwait
enter
sbb
int3
jp
inc
outs
aas
mov
lods
or
mov
icebp
in
stos
pop
sbb
popa
pop
out
call
pop
add
pushf
jns
fist
xor
popa
dec
jno
sbb
repnz
or
addr16
xor
pop
cld
mov
in
ja
jbe
out
enter
call
fwait
cmps
outs
not
fimul
fnstcw
jne
cmp
test
inc
jmp
out
fimul
int
in
dec
cmps
dec
jp
cmp
mov
push
in
(bad)
cdq
push
cli
daa
retf
push
hlt
adc
lods
sub
xor
push
mov
mov
mov
inc
in
stc
sub
cmp
adc
xor
imul
ins
test
jmp
fidiv
cli
rol
xchg
xor
jp
xor
jmp
xchg
push
xchg
mov
fmul
hlt
add
scas
mov
and
jne
pop
inc
vunpckhps
lock
xlat
fnstcw
sub
xchg
call
sbb
pop
push
ins
adc
cli
mov
icebp
dec
das
ud2
add
and
push
inc
pop
sbb
fdivr
sar
bnd
ret
jmp
mov
sti
ret
aad
pop
and
add
dec
mov
pop
sbb
sbb
cmp
push
scas
gs
popa
inc
sub
pop
add
imul
ror
jg
cmp
xchg
sahf
xchg
mov
popa
inc
sbb
movs
or
push
shl
or
adc
ret
sbb
lds
adc
dec
mul
pop
add
pop
mov
rol
les
shl
pusha
mov
push
ja
pop
retf
out
scas
out
hlt
mov
push
cld
and
sub
loop
cdq
fisub
stc
int
xor
les
xchg
pop
jno
les
mov
mov
dec
inc
xchg
int
leave
lea
das
jno
cs
mov
test
in
or
xchg
jle
adc
and
mov
and
(bad)
sti
adc
fisttp
lods
cmc
pop
cmp
mov
xchg
imul
or
jl
sub
adc
and
test
sti
dec
popf
add
inc
inc
aam
lods
enter
jmp
out
cmp
mov
loop
imul
xchg
imul
mov
hlt
sub
xor
imul
jnp
cmp
xor
fadd
int
sbb
lods
sub
sbb
mov
or
jmp
popw
mov
jecxz
jl
pop
sbb
pop
imul
nop
pop
xor
aaa
int3
daa
cmp
add
jge
ficom
add
cwde
cld
fs
jbe
icebp
jge
jbe
push
sbb
push
stc
dec
mov
pop
and
pop
inc
jl
imul
cli
pop
shrd
icebp
js
scas
call
pop
dec
jg
fld
mov
cwde
push
xlat
and
into
mov
push
fiadd
inc
mov
pop
aam
push
ret
test
dec
call
into
cli
in
jl
mov
ja
mov
push
add
les
dec
sub
bnd
xlat
movs
out
sub
or
and
nop
mov
das
outs
inc
in
and
xor
xchg
push
mov
pop
das
leave
ins
(bad)
adc
cwde
add
inc
into
mov
pop
mov
mov
lods
mov
adc
das
ret
movs
jnp
mov
jg
xchg
and
pop
add
dec
cmps
rcl
and
xchg
test
xor
(bad)
data16
pop
(bad)
mov
into
xor
mov
sti
xor
js
enter
mov
(bad)
std
pop
lock
inc
shl
cmp
rcl
sbb
mov
pop
sbb
lea
ss
add
mulps
aam
out
jmp
add
mov
mov
inc
push
cmps
mov
jecxz
or
adc
fsubr
xchg
and
int
jmp
sahf
shr
pop
rdtsc
stos
je
mov
movs
jg
das
mov
adc
pop
cmp
and
aas
xchg
pop
scas
push
das
sbb
data16
int
fwait
jmp
xchg
or
shr
pop
jnp
lock
test
arpl
inc
jmp
sub
shl
cmc
mov
popa
mov
sub
add
xchg
ins
add
adc
(bad)
and
add
addr16
lods
repz
sub
adc
enter
repz
xchg
and
pop
push
mov
movs
cmp
(bad)
mov
int3
mov
cld
cmp
sub
mov
call
mov
shl
push
mov
xchg
jno
nop
add
add
mov
call
mov
and
xor
fptan
fsub
cli
add
mov
int
cdq
mov
add
pusha
sub
fisttp
or
mov
xor
daa
xchg
adc
into
and
xlat
or
xchg
sbb
(bad)
out
call
adc
nop
mov
out
ret
inc
lods
popa
cmp
outs
stos
jmp
ins
sub
or
mov
jae
xchg
push
imul
add
nop
push
sbb
add
adc
idiv
out
mov
lods
outs
pop
push
cmp
lods
push
pop
pop
inc
mov
push
sub
mov
loop
(bad)
dec
adc
ss
xchg
or
mov
mov
fist
mov
mov
jo
test
mov
popf
jl
dec
adc
jmp
inc
lea
(bad)
arpl
pop
xor
mov
and
sub
xlat
pusha
cmps
aad
xchg
add
mov
cs
and
sub
cdq
push
out
adc
xor
xor
(bad)
cmp
enter
cmp
je
inc
xlat
sbb
fst
inc
ror
lahf
xchg
jae
inc
cmp
sbb
es
add
ja
(bad)
cmp
jge
aas
inc
or
(bad)
idiv
fmul
stc
mov
pop
es
nop
mov
dec
addr16
mov
aam
adc
lahf
pop
or
dec
add
cli
and
xchg
stc
out
push
dec
(bad)
push
outs
ror
pop
fsubr
mov
int
neg
mov
xchg
and
mov
dec
retf
inc
jb
push
push
jmp
outs
inc
add
pop
cmc
dec
sub
xor
pop
mov
call
(bad)
sbb
inc
mov
jp
push
and
mov
repz
lds
jae
cld
jnp
dec
repnz
xchg
movs
xor
sbb
push
lock
hlt
imul
and
and
ret
dec
push
dec
and
pop
cmp
je
cs
cmps
ds
bound
dec
mov
ret
fcom
inc
(bad)
(bad)
repnz
and
imul
dec
(bad)
iret
mov
in
pop
popf
imul
mov
outs
(bad)
add
push
push
and
or
mov
js
out
std
jge
loopne
lds
(bad)
call
mov
or
lods
(bad)
jg
push
ret
sub
rol
test
enter
je
xchg
aam
inc
lods
push
(bad)
fwait
cmps
mov
push
sbb
popf
xchg
ins
repnz
cmp
push
cmp
inc
add
cmp
jmp
jecxz
repnz
xor
dec
sub
xor
aam
xchg
and
and
jae
sti
scas
sub
push
and
mov
into
or
add
or
jmp
push
ret
arpl
or
ss
jle
push
dec
lock
mov
or
popf
cmc
aaa
xchg
inc
in
in
test
add
sub
pop
imul
cmps
pushf
sbb
sbb
loop
cli
sar
fdiv
xor
and
or
lods
push
retf
popa
sub
adc
fyl2x
shl
xchg
xchg
mov
xlat
cmp
and
xor
adc
data16
imul
cmp
pusha
or
mov
ret
leave
pop
mov
sbb
add
arpl
xor
jne
movs
sbb
loopne
jmp
out
int3
cmps
repz
dec
les
fisttp
dec
das
push
xlat
ret
cmp
adc
clc
sub
push
inc
and
std
mov
out
inc
lock
push
cmp
mov
push
sar
in
sbb
mov
scas
adc
js
sub
sub
fnstenv
hlt
xchg
(bad)
mov
or
dec
jmp
push
cli
sbb
jp
cmp
fwait
or
idiv
adc
sbb
inc
hlt
dec
sbb
aaa
out
mov
sahf
cs
mov
lods
daa
(bad)
cmp
dec
adc
icebp
mov
aad
inc
sbb
fbstp
push
pop
dec
and
stc
imul
mov
iret
dec
mov
xlat
jae
imul
push
or
lock
leave
mov
adc
retf
jmp
push
or
lds
sub
or
fs
je
(bad)
sub
or
jbe
xor
jo
cmps
pop
jl
cli
jne
(bad)
fnstenv
sbb
xchg
fstp
mov
in
push
jnp
stos
retf
jns
sub
loopne
inc
mov
cmp
(bad)
sbb
dec
mov
jl
push
movups
inc
imul
pop
mov
sub
sbb
test
es
shl
inc
loopne
pop
or
xor
out
in
sub
pop
or
sti
dec
das
stos
(bad)
mov
shl
push
xchg
cs
sbb
cmp
adc
push
pushf
retf
mov
repz
shl
cdq
movs
or
popa
inc
mov
mov
shr
aaa
sbb
jmp
imul
iret
imul
std
push
jb
enter
in
pop
ss
inc
in
fistp
mov
pop
sets
cmps
push
popa
je
call
or
adc
xchg
sahf
add
fsub
rol
scas
popf
fbstp
movs
outs
cmc
lock
or
xchg
jo
sahf
xchg
adc
rcl
pop
in
push
mov
call
nop
add
sahf
aam
xchg
jle
sub
mov
cmp
xchg
mov
shl
fwait
aad
dec
rcr
ins
and
loop
sbb
jo
jbe
xor
mov
daa
push
fwait
add
stc
rol
movs
jmp
inc
mov
push
add
xor
mov
or
push
mov
jmp
mov
push
pop
or
into
pop
xchg
outs
mov
inc
sub
or
sub
jecxz
xor
dec
gs
dec
mov
push
add
mov
sub
(bad)
xor
xor
arpl
(bad)
mov
in
jecxz
and
mov
jae
sub
loopne
mov
add
add
das
mov
mov
inc
(bad)
sbb
loope
sub
inc
xor
push
pop
(bad)
pop
out
outs
in
mov
xor
loopne
xchg
pusha
adc
add
lods
dec
js
out
xchg
lahf
inc
pop
call
inc
jle
or
test
retf
push
jl
sub
fwait
iret
mov
mov
pop
mov
adc
mov
mov
fstp
in
icebp
mov
mov
pushf
fisttp
push
push
push
(bad)
neg
pop
inc
sub
popf
mov
xor
pop
cld
push
jo
mov
jb
adc
mov
xor
cld
sub
dec
lods
xchg
scas
aaa
lds
mov
push
rcl
test
ret
jecxz
lods
pop
sahf
in
sahf
fwait
cli
call
ja
loop
push
(bad)
(bad)
jecxz
idiv
cmp
pop
cmp
sub
nop
mov
ret
mov
hlt
dec
push
add
(bad)
sahf
cs
jb
(bad)
je
mov
jmp
daa
mov
mov
jb
push
dec
aad
mov
sti
repnz
and
(bad)
std
mov
mov
jmp
xchg
cmp
cli
mov
scas
fs
cmp
scas
mov
sub
fisttp
sub
shl
mov
mov
inc
scas
in
movs
or
cmps
and
pop
or
inc
sub
sbb
xlat
fistp
data16
xchg
push
sahf
add
inc
movs
xchg
jnp
mov
test
adc
sub
push
push
and
fstp
daa
retf
fcmove
lock
mov
ret
and
repz
dec
gs
xchg
and
add
dec
inc
scas
call
sbb
xchg
cmp
add
iret
push
jmp
add
ret
ins
jo
in
jle
pop
and
push
dec
ret
scas
cs
or
mov
sub
push
lea
cmc
push
imul
aam
rcr
xor
fucomp
inc
push
mov
loopne
fsub
(bad)
mov
or
cmp
xor
movs
jbe
sahf
adc
les
mov
mov
rcr
dec
lock
pop
popa
or
pop
xchg
mov
sub
arpl
inc
sar
dec
imul
cmps
push
mov
xchg
push
lods
shl
jns
lea
shl
or
add
imul
cs
aad
dec
add
fcom
fistp
loopne
and
hlt
add
int
xor
pop
sahf
xchg
test
(bad)
pop
fnsave
scas
cmp
pop
call
xchg
cmp
push
outs
fwait
mov
pusha
cmp
xchg
mov
pop
cld
dec
mov
and
test
in
addr16
push
stos
sub
es
xor
mov
push
pop
sub
jnp
sbb
aas
push
leave
cli
scas
pusha
mov
mov
push
stc
dec
aaa
pop
fs
das
and
cld
add
push
adc
adc
js
ret
mov
pop
aad
mov
sbb
pop
jbe
lds
outs
rcr
push
sub
in
mov
fidivr
es
pop
retf
cli
shr
xlat
ins
jle
dec
inc
in
xor
sbb
push
out
xor
jno
ret
stos
pop
mov
mov
adc
push
addr16
into
xor
push
dec
leave
mov
xchg
mov
add
mov
jnp
cmp
dec
repz
and
dec
(bad)
mov
fucom
out
inc
std
sub
xchg
rcr
and
jmp
jmp
inc
jge
outs
add
(bad)
jecxz
ins
mov
cdq
push
xchg
jl
push
lods
inc
enter
xor
push
jbe
call
push
test
les
pop
mov
cwde
mov
jge
lahf
xor
or
rol
jg
outs
and
cwde
mov
lods
out
cmc
sahf
sub
mov
pop
icebp
gs
pop
sub
ret
lahf
adc
jp
cmps
iret
jbe
xor
sbb
adc
or
cmp
push
into
cmp
out
inc
pop
lods
xchg
int
jecxz
lea
fisub
test
fisubr
mov
ins
in
inc
fild
movs
and
cdq
js
mov
inc
mov
imul
inc
hlt
sub
mov
and
push
push
cdq
ins
add
push
retf
shl
test
push
dec
daa
push
push
xchg
jb
imul
iret
jecxz
call
adc
add
inc
gs
adc
icebp
jo
jp
xor
cli
fdiv
rcr
sbb
(bad)
pop
sbb
aam
inc
and
xchg
lock
xchg
pop
mov
cmp
jmp
repnz
rcl
xchg
xor
pop
fnsave
cmps
push
shr
aad
ja
push
inc
cmps
not
mov
cmp
sbb
mov
jecxz
into
jl
aaa
xor
daa
adc
pop
xor
out
stos
xchg
mov
and
inc
fidiv
rol
sbb
lods
arpl
cmp
adc
inc
mov
and
fwait
(bad)
into
pop
call
fisub
sbb
les
lea
retf
fcom
mov
adc
dec
dec
pushf
pop
test
int
test
xor
or
adc
jns
repz
dec
pop
push
pushf
mov
(bad)
dec
sub
push
sub
sub
pop
nop
jnp
mov
fmul
mov
cmp
ret
ror
pushf
push
or
bound
rol
in
push
push
jne
cmp
outs
cwde
pop
ins
fnsave
mov
push
sbb
or
adc
cmp
push
in
or
sub
xchg
inc
daa
mov
pop
sbb
push
pop
nop
imul
sahf
jp
cdq
inc
mov
aam
or
call
mov
les
ins
sti
iret
js
call
into
out
(bad)
adc
push
sbb
adc
pop
cmp
cs
div
aas
jle
ja
into
fnstsw
enter
rol
shr
and
cmp
(bad)
clc
adc
loopne
pop
xor
xchg
jbe
inc
or
and
mov
fwait
or
mov
call
lods
fidiv
fucom
(bad)
push
popa
mov
dec
ret
inc
and
daa
push
test
sti
scas
jns
fsub
jno
sub
fld
stos
imul
dec
rol
test
call
fstp
call
popf
mov
cwde
cmps
or
add
pop
cmp
ror
mov
outs
xchg
cli
dec
je
test
in
mov
loop
add
jnp
push
cmp
int3
call
cdq
mov
les
retf
ins
mov
cmp
test
adc
dec
inc
pop
adc
sbb
jmp
or
adc
sbb
pop
push
inc
dec
stos
cld
push
mov
shr
and
jl
movs
cld
mov
aas
lods
sahf
and
iret
stc
ds
clc
cmp
stos
push
jge
mov
push
sbb
les
or
cdq
lea
aad
pop
mov
xor
jae
sbb
shl
sysret
sub
aad
jbe
xchg
ins
mov
jecxz
xchg
cmc
inc
xchg
repz
repnz
dec
fwait
adc
ss
and
or
std
in
aad
xchg
mov
addr16
cdq
call
mov
jg
inc
mov
mov
xchg
jl
das
dec
popa
pusha
push
xchg
pop
inc
push
imul
(bad)
das
xor
sbb
stc
pusha
pop
inc
push
inc
gs
jae
stos
je
rol
mov
arpl
ins
adc
fdivr
jo
popa
jno
out
mov
aaa
loop
cdq
pushf
sub
clc
and
and
outs
stc
jbe
in
ds
(bad)
daa
inc
pop
jl
or
add
or
outs
inc
jne
inc
or
mov
les
std
sub
mov
push
stc
daa
push
rol
ror
push
cmc
hlt
inc
loope
nop
mov
daa
cmp
sbb
pushf
imul
dec
push
scas
arpl
adc
adc
push
outs
mov
add
jg
xchg
cmp
mov
call
(bad)
push
(bad)
sub
push
jmp
and
push
aad
dec
cmc
pop
or
rcr
dec
test
ins
inc
es
fldenv
jbe
xchg
dec
mov
dec
sub
pop
adc
jmp
pushf
sub
scas
pop
push
or
push
les
or
nop
ins
mov
mov
hlt
add
dec
sub
add
test
les
dec
stos
imul
mov
(bad)
jns
xor
stos
mov
mov
xchg
sahf
dec
xlat
idiv
imul
mov
aam
test
in
aam
cmp
push
cmps
in
dec
retf
mov
neg
xchg
(bad)
ds
(bad)
xor
jmp
add
hlt
dec
xchg
scas
stc
push
loop
xchg
jo
sahf
mov
adc
push
dec
push
dec
ja
cwde
(bad)
ins
fcomp
fs
and
aad
out
out
mov
and
mov
cld
shr
push
xchg
mov
retf
loope
out
mov
sbb
cwde
sub
ds
or
xor
xchg
mov
dec
shl
bound
jmp
fld
push
(bad)
sub
scas
loop
enter
xor
(bad)
rcl
xchg
sbb
iret
mov
lahf
dec
cs
out
jae
movs
push
lods
pop
ja
mov
xchg
inc
hlt
xchg
std
aas
mov
adc
sti
lods
outs
xchg
inc
sahf
push
enter
daa
shr
or
jne
or
mov
push
dec
or
(bad)
into
das
aam
fwait
mov
and
adc
mov
adc
in
cmp
push
xor
mov
repz
aaa
inc
dec
xor
sub
xor
and
loope
ja
jg
fucomp
cmp
mov
sbb
push
aam
ins
mov
into
or
mov
int3
mov
and
outs
push
dec
pop
xor
pop
inc
icebp
push
rcl
sbb
sub
(bad)
pop
inc
mov
jecxz
xchg
add
or
cmp
mov
mov
and
lahf
or
fs
aad
out
mov
ror
cmc
mov
or
movs
and
and
xchg
push
mov
call
test
loope
fsubr
dec
mov
cmp
test
adc
jg
pop
adc
push
adc
stc
adc
add
or
jnp
fisubr
cmp
fcmove
(bad)
in
retf
nop
add
xchg
add
loopne
(bad)
pop
(bad)
sub
or
add
imul
das
cmps
das
ror
jnp
lds
adc
fist
push
out
mov
or
jp
push
pusha
fwait
lahf
xchg
mov
push
mov
repnz
rcr
and
rol
ret
mov
ins
sub
arpl
adc
mov
jecxz
mov
fist
mov
jle
mov
fisub
adc
ins
jg
in
sbb
(bad)
inc
jg
sbb
dec
or
retf
rol
aas
xor
(bad)
cmp
retf
pop
jge
cmp
(bad)
shr
cmp
sub
in
jmp
xor
into
inc
mov
(bad)
push
inc
fiadd
adc
push
jl
bound
dec
push
and
add
mov
out
adc
and
fwait
je
mov
adc
in
out
pop
stc
test
(bad)
out
dec
xlat
dec
jl
repnz
mov
xchg
xor
and
iret
dec
sub
add
and
call
dec
popf
shr
repz
(bad)
sar
hlt
fistp
cs
fisttp
call
mov
xor
neg
xor
pop
jp
mov
xchg
jmp
nop
shl
cmp
pop
cli
xor
int
std
clc
push
int
pusha
movs
dec
in
lds
mov
fcomp
jl
sbb
inc
jl
and
mov
not
pop
rcl
hlt
fiadd
xchg
int3
add
retf
or
inc
call
mov
cmps
mov
add
(bad)
les
xor
cs
push
mov
lock
mov
ret
or
nop
add
xchg
mov
ja
ret
xchg
in
gs
stc
mov
fld
retf
ds
test
arpl
cwde
xchg
lods
out
pop
fadd
mov
add
mov
mov
pushf
fidiv
xor
rcr
dec
sub
lea
div
mov
arpl
mov
mov
sub
jp
test
mov
mov
push
xor
jbe
adc
and
mov
xchg
add
cmp
call
inc
es
or
movs
cmp
xchg
jp
mov
in
shl
out
mov
jmp
hlt
mov
ficom
inc
hlt
and
push
pop
(bad)
adc
mov
add
push
leave
movs
mov
ss
les
fcmovu
jae
scas
scas
xor
pop
hlt
loope
jmp
sub
repnz
mov
dec
bound
cmp
or
and
adc
outs
pop
cmp
push
sbb
test
push
push
lea
cs
or
add
jge
sub
cmps
shl
bound
mov
or
or
mov
lahf
sub
adc
or
cmp
and
call
fidivr
jb
std
and
and
xchg
stos
inc
inc
sbb
retf
push
lahf
adc
cmp
dec
pop
sub
bound
clc
int3
add
fcomp
xchg
jmp
push
pusha
push
xor
push
test
mov
pop
int
jecxz
clc
xchg
mov
xor
ret
pushf
jo
scas
mov
clc
shl
sbb
iret
sub
jg
lock
jno
fisubr
push
mul
pop
adc
sub
dec
jecxz
adc
push
mov
add
mov
out
jb
xor
pop
lock
cmp
daa
(bad)
or
mov
fwait
pop
fs
mov
push
sar
pop
push
jle
sbb
inc
jmp
or
sahf
inc
mov
push
xor
not
sbb
mov
adc
test
aad
not
mov
test
xchg
inc
and
imul
div
aaa
in
adc
sahf
sar
icebp
in
(bad)
adc
lds
fdiv
add
adc
mov
sbb
sar
rcr
jmp
sub
ss
aad
je
mov
dec
mov
pop
imul
movs
loopne
xor
aas
jecxz
loope
cmp
das
mov
and
in
push
sahf
push
ins
push
jp
and
xchg
and
xchg
jb
dec
into
sbb
inc
test
ja
test
(bad)
push
xor
loop
inc
mov
mov
call
push
enter
das
xchg
and
pushf
xor
jno
out
or
pop
xchg
mov
cmp
jmp
push
and
adc
test
adc
repnz
pusha
jnp
in
mov
out
add
imul
push
aad
cld
push
test
in
cmps
sub
push
dec
loop
and
test
or
repnz
add
arpl
push
sbb
int3
(bad)
xor
mov
pop
pop
inc
inc
pop
jmp
shr
iret
(bad)
mov
mov
xchg
cmc
int
fmul
cli
cmc
adc
push
jge
push
push
sahf
ins
jo
pusha
cmp
daa
in
cmp
jmp
(bad)
push
pop
mov
pushf
stos
call
movs
mov
xor
pop
adc
and
pop
dec
in
jle
lods
sbb
xchg
out
pusha
pop
add
and
sbb
mov
(bad)
cmp
inc
fs
jo
inc
sti
dec
add
and
dec
cmp
add
je
loopne
xor
or
mov
call
sub
xor
xchg
sbb
stc
inc
push
push
inc
lea
push
test
sbb
sahf
and
inc
xor
adc
dec
jg
push
imul
imul
xchg
les
inc
fsubr
jge
addr16
pushf
pop
inc
sbb
aas
mov
mov
sub
and
(bad)
mov
push
jg
cs
jmp
sub
jl
call
and
das
push
movs
ror
mov
popa
adc
movs
sbb
lods
mov
loopne
mov
cdq
ret
mov
xchg
mov
ds
retf
inc
sub
loope
sub
push
fbld
jecxz
(bad)
(bad)
dec
jae
cmp
call
fdiv
into
mov
lock
stos
sti
lds
in
ins
jnp
sbb
out
call
ja
mov
cli
mov
(bad)
mov
add
mov
dec
push
dec
imul
retf
xor
mov
out
mov
mov
cmp
xor
into
sub
mov
out
mov
xor
fsub
pop
xor
test
out
pop
xchg
xor
cmps
cli
push
fwait
hlt
je
aam
or
add
inc
xchg
push
add
(bad)
xchg
jne
sub
movs
lods
xor
xchg
inc
movs
test
push
add
mov
mov
push
xor
movs
push
add
movs
sbb
test
test
imul
jp
rcl
push
inc
repz
(bad)
stc
fsubr
or
(bad)
lock
cmp
daa
xchg
sbb
jmp
mov
push
mov
xchg
mov
in
scas
mov
jmp
test
into
(bad)
adc
jb
jb
cwde
mov
test
push
rcl
add
xchg
jnp
test
imul
push
push
std
inc
lea
push
test
pop
xchg
leave
jno
jmp
pop
inc
xchg
and
or
cld
je
arpl
cwde
imul
ins
xor
jg
outs
les
pop
ror
push
je
sub
push
out
frstor
sbb
sub
in
ficom
out
lds
or
lods
js
arpl
shl
dec
sub
mov
fwait
and
fwait
rep
enter
outs
and
std
jne
call
in
jne
inc
iret
cwde
and
retf
dec
cmp
jl
out
or
cmp
in
es
ins
dec
iret
leave
les
pop
lea
push
in
lea
push
inc
arpl
mov
ficomp
xchg
jg
cli
cmp
ss
call
mov
sub
sub
out
jge
jg
fcom
push
cli
cmp
lahf
mov
sub
cli
and
mov
ss
sub
rcr
sub
cmps
pop
(bad)
fisttp
out
push
jmp
dec
add
loope
ret
inc
add
aaa
mov
retf
pop
repz
mov
sub
and
push
es
adc
shl
pop
mov
xor
xchg
out
jp
xchg
fwait
pop
mov
add
clc
push
push
jno
mov
fcmovnu
inc
add
dec
dec
and
scas
mov
and
test
or
jmp
adc
cdq
(bad)
pop
mov
sub
cli
cmps
aad
lods
and
dec
dec
fisubr
(bad)
push
and
pop
xor
xor
(bad)
js
add
cmc
mov
repz
enter
or
adc
mov
std
push
cmp
push
aam
push
imul
mov
cmp
mov
mov
dec
leave
push
mov
pop
rcl
pop
gs
xor
mov
jae
jmp
xlat
push
xchg
or
xchg
iret
lods
push
je
push
ins
xchg
(bad)
hlt
in
das
out
push
out
retf
sub
mov
pop
loopne
dec
add
test
ret
in
push
jae
ds
dec
rcl
sub
pop
stos
imul
xchg
adc
push
jl
xlat
cmp
mov
add
xchg
dec
dec
mov
dec
jbe
xchg
xchg
and
loop
xchg
push
mov
mov
xchg
jno
stos
xlat
or
jg
test
scas
pushf
iret
adc
mov
xchg
or
mov
mov
fs
test
inc
aaa
mov
mov
test
xchg
shl
fdivr
mov
jo
mov
push
push
retf
cmp
addr16
mov
call
fidiv
inc
mov
test
les
push
sbb
jg
ficomp
mov
xor
lahf
mov
pop
in
out
adc
(bad)
mov
mov
mov
xlat
bts
test
ss
int3
rcr
push
jae
xor
pop
stos
cmp
add
push
sbb
sbb
loope
in
cmp
jnp
push
call
xchg
pop
add
aas
sub
(bad)
xchg
aad
retf
add
push
xchg
sbb
(bad)
int
ror
je
adc
add
stc
xchg
dec
mov
jb
dec
cmps
or
or
scas
les
pop
jns
imul
loopne
jns
mov
aas
push
popa
pop
sbb
stos
iret
push
shl
cwde
push
loop
sub
clc
fidivr
inc
dec
sub
dec
pop
(bad)
popa
aad
xchg
out
sbb
sbb
inc
mov
or
push
mov
popf
repz
dec
stos
jmp
test
dec
mov
mov
mov
lds
inc
mov
std
pop
adc
mov
sub
cli
inc
jne
mov
and
shl
dec
stos
and
add
addr16
shl
jo
dec
jne
jmp
cmp
adc
adc
nop
movs
fimul
rcr
or
rcr
and
test
cs
call
ds
scas
data16
adc
repnz
mov
out
sbb
rcl
mov
call
outs
xor
(bad)
dec
xchg
fcomp
xor
and
(bad)
in
mov
je
pop
imul
cmc
data16
shl
test
mov
pop
nop
cmp
and
movs
into
and
xchg
jo
fistp
mov
mov
xchg
xor
cmp
sahf
arpl
fstp
lds
(bad)
ins
sub
in
ds
sub
(bad)
fcmovnb
cmp
jecxz
arpl
push
jno
cmp
jp
es
faddp
xchg
int
hlt
jecxz
mov
movs
pushf
bound
aaa
aam
xchg
in
in
xor
cmc
sub
aad
in
xchg
aad
mov
inc
sub
js
mov
sbb
jl
add
(bad)
imul
iret
cmp
or
xor
cmps
push
pushf
les
push
push
sbb
xor
add
int
fst
xchg
cmp
in
mov
movs
sahf
cmp
retf
add
add
jp
adc
in
mov
push
add
sahf
cmp
xor
daa
inc
adc
mov
int
cdq
movs
or
cwde
sar
fild
ss
sub
test
lock
hlt
lods
das
adc
out
mov
jo
fisttp
xor
shl
inc
dec
pusha
dec
cmps
cld
and
xchg
inc
scas
(bad)
xchg
jb
ret
jb
push
inc
frstor
or
loopne
mov
in
(bad)
or
or
dec
fbstp
or
mov
mov
gs
adc
pop
adc
jl
fist
iret
dec
inc
pusha
ficomp
rcr
or
scas
dec
dec
cmp
(bad)
inc
add
(bad)
aaa
jmp
mov
sub
add
cli
out
or
out
daa
pop
lods
les
xchg
inc
mov
repz
add
xor
or
inc
(bad)
shl
in
cdq
dec
sbb
iret
aas
inc
push
dec
cmp
es
mov
fiadd
inc
jp
loope
pop
push
(bad)
jmp
dec
cmp
mov
(bad)
stos
cld
movs
mov
or
mov
dec
(bad)
iret
push
leave
and
mov
jge
idiv
lahf
or
push
mov
lods
rol
cmc
bnd
push
jbe
out
out
lods
das
inc
pushf
sar
sub
ror
adc
imul
enter
adc
or
loopne
movs
push
stos
sbb
ins
movs
jg
clc
fistp
test
adc
and
jmp
(bad)
stos
test
das
cs
sub
pop
shl
pop
cdq
ins
clc
test
in
cmp
rcr
push
shl
bound
and
or
xor
call
mov
cmps
das
test
bound
ret
mov
fsubr
sbb
mov
xor
jmp
push
add
add
sti
xchg
mov
mov
cmp
mov
ret
push
(bad)
es
or
jge
aam
into
in
mov
pop
and
xchg
imul
or
lea
jmp
into
push
sbb
jmp
fs
sbb
inc
cmps
dec
loope
pop
adc
pop
jnp
nop
lds
ret
add
in
rcr
push
imul
xor
pop
aaa
push
inc
xor
add
aam
mov
mov
cli
or
fld
pop
dec
ret
adc
aam
dec
sti
mov
sahf
das
rol
add
gs
lods
test
(bad)
cmp
js
enterw
out
fcom
(bad)
cld
retf
push
aad
push
cwde
mov
push
test
sbb
aaa
mov
xchg
call
or
xchg
jmp
retf
pop
addr16
push
test
inc
sub
jne
or
clc
ret
imul
js
dec
scas
fstp
fadd
cs
(bad)
in
jnp
mov
cmp
adc
mov
(bad)
out
movs
lods
mov
xlat
mov
stos
fwait
movs
xlat
mov
add
sahf
fcom
pop
sbb
jnp
cmps
adc
xor
call
cmp
test
pop
repz
in
sbb
pop
outs
xor
int
adc
cmp
mov
jp
mov
(bad)
lock
xor
xlat
jmp
add
(bad)
outs
or
mov
sbb
ss
cmps
sub
sub
jle
push
and
add
movs
add
inc
std
daa
mov
or
fsub
adc
add
in
xchg
xchg
out
adc
ins
ret
std
mov
pop
push
push
push
mov
adc
xor
push
or
push
aas
enter
cmp
adc
fld
sbb
int
call
mov
cmc
stos
mov
push
in
pop
dec
push
hlt
inc
push
(bad)
add
xor
xor
fdiv
push
shr
pop
xchg
daa
add
pop
in
adc
iret
xchg
aad
rol
jl
(bad)
mov
arpl
xor
mov
push
or
xor
pop
out
dec
sub
jl
mov
xor
cmp
inc
shl
xor
popa
mov
pop
and
test
jae
call
ret
enter
jo
or
jns
lods
(bad)
ja
jp
dec
xlat
and
mov
xchg
cmp
outs
je
xchg
pop
movs
cld
test
mov
or
fldcw
inc
jmp
(bad)
in
movs
mov
xor
idiv
rol
lahf
fsub
scas
cmps
loop
xchg
scas
in
fcmove
sub
and
mov
mov
(bad)
pop
fmul
push
clc
dec
inc
shl
pop
fldenv
ret
shl
pusha
jmp
mov
sub
xchg
push
push
movs
add
ja
sbb
inc
sub
out
mov
mov
(bad)
ret
pop
pusha
cwde
cli
lea
call
and
into
xor
inc
es
jp
cmp
jno
not
inc
mov
xchg
push
sub
test
rcl
test
cld
cmc
gs
cld
or
ret
mov
fisttp
out
call
sub
shl
(bad)
repz
out
sub
fs
jne
cmc
ret
fcomp
ror
cdq
lds
mov
and
cmp
out
push
ret
inc
imul
repz
in
dec
js
imul
push
rol
imul
loopne
pop
inc
or
out
out
es
out
scas
dec
test
and
mov
or
adc
fwait
xchg
adc
dec
nop
and
imul
inc
cmp
xchg
int
mov
aas
jns
mov
jecxz
pop
int3
imul
fldcw
add
call
popf
nop
sbb
sbb
jo
push
neg
jnp
int
pop
ss
(bad)
popf
rol
std
jmp
sar
add
and
mov
adc
dec
jp
xor
adc
cwde
loop
jb
cmc
push
mov
not
hlt
iret
inc
and
scas
daa
mov
push
sub
pop
fwait
in
adc
(bad)
cmp
inc
ror
or
in
xor
icebp
push
fidiv
sub
cli
push
loopne
mov
push
or
es
sbb
sar
push
rcl
(bad)
repz
into
mov
mov
out
dec
pop
imul
sub
push
movs
xor
retf
adc
sti
sub
mov
xchg
pop
fiadd
mov
xor
test
int
ror
cwde
mov
sub
and
jo
jp
(bad)
in
add
shr
jmp
aam
sub
adc
in
xchg
xor
imul
in
aas
addr16
jbe
lods
arpl
gs
push
imul
(bad)
mov
dec
mov
ins
leave
and
fdiv
outs
xchg
mov
push
call
stos
pop
push
jo
cmp
gs
ret
mov
pop
repnz
pop
jp
mov
add
sub
shl
imul
fs
(bad)
(bad)
jge
jge
inc
loop
fadd
out
jb
aam
inc
cdq
and
and
loope
push
xchg
jno
xchg
test
push
(bad)
sub
add
cmp
fstp
cs
mov
ficomp
mov
(bad)
sbb
rcr
push
stc
ds
(bad)
mov
inc
or
push
cmp
js
movs
test
or
retf
int
jo
rcl
xor
(bad)
test
pop
and
mov
ss
pop
cmp
out
jl
in
ins
add
in
xchg
iret
dec
cmp
ret
fbld
mov
jle
push
inc
mov
cs
mov
call
push
jmp
data16
(bad)
add
loopne
fbstp
ins
push
stos
mov
dec
mov
and
ins
sbb
mov
dec
dec
xor
pop
push
mov
sbb
inc
or
rol
jo
mov
cmp
arpl
ss
push
into
ja
leave
jns
cmc
leave
and
test
int3
adc
sbb
ret
scas
mov
add
sar
pop
outs
int
stos
fisttp
jbe
pop
jae
xchg
adc
sahf
ja
ja
lahf
dec
lea
or
loope
or
jbe
lea
add
sbb
xchg
cmp
retf
mov
sti
aas
aad
pushf
ficomp
pusha
xchg
lock
mov
or
mov
adc
rcl
into
inc
sbb
inc
repnz
leave
and
rcl
dec
push
test
push
pop
loop
push
sbb
mov
out
xor
in
or
lods
push
pop
(bad)
xchg
xchg
mov
aam
ret
inc
push
cdq
pop
jnp
stos
push
push
cmp
cs
sub
(bad)
adc
jmp
xor
pop
es
nop
push
dec
cli
sbb
jmp
fimul
sbb
fldcw
scas
mov
enter
jg
sar
cmp
cmp
xchg
adc
iret
cdq
push
mov
test
xor
lahf
(bad)
sar
sub
xchg
mov
sbb
sti
aas
(bad)
call
lea
sub
pop
jmp
cmp
popf
jb
mov
rol
ror
fldcw
addr16
cmp
push
and
xor
sbb
mov
dec
pop
sbb
xor
movs
sbb
jmp
mov
adc
mov
repz
jb
js
iret
push
dec
push
adc
sar
pop
in
fadd
xor
sbb
mov
xchg
mov
fnstcw
ret
jo
xchg
repnz
mov
xchg
aas
out
or
popf
mov
pop
jecxz
dec
jmp
out
mov
fwait
inc
push
or
dec
ror
xor
outs
sbb
mov
repnz
mov
jp
inc
outs
in
jmp
imul
xor
mov
sbb
enter
jecxz
xchg
ja
ror
mov
pop
lea
into
aad
leave
retf
inc
loopne
(bad)
mov
xor
fisub
adc
outs
inc
and
stos
cmp
aam
cmp
iret
sbb
and
sbb
xchg
jmp
dec
cmp
int3
push
retf
inc
jle
data16
arpl
imul
scas
sub
mov
sahf
push
test
test
pop
cmp
adc
jmp
aad
mov
pop
dec
and
inc
iret
sbb
push
add
cmp
sbb
out
adc
and
adc
jge
scas
mov
mov
ja
jg
(bad)
push
mov
push
sbb
lods
inc
push
test
div
jmp
jge
jmp
xor
into
in
repnz
xchg
std
(bad)
lds
jo
(bad)
adc
scas
into
in
push
lock
dec
push
enter
fbstp
adc
mov
js
sahf
jl
dec
pop
pusha
jno
leave
ret
aam
sub
fs
xlat
xor
ret
arpl
stc
ins
lds
ins
inc
xor
scas
sub
add
das
fistp
call
pop
jnp
adc
loop
push
xor
push
xchg
cmp
sub
adc
fwait
push
out
imul
bound
clc
push
inc
test
fsub
jbe
push
push
sbb
dec
xchg
fs
pop
cld
inc
xor
add
nop
(bad)
pop
xchg
stos
enter
sbb
jg
jp
adc
js
ret
jg
add
xor
test
cli
push
cld
fnstcw
sbb
push
je
dec
popf
pop
out
les
sub
scas
inc
movs
xlat
ficom
loop
jecxz
ret
add
retf
sbb
sub
mov
sar
xor
gs
push
xor
sbb
movs
sar
gs
scas
dec
pop
and
push
jns
fwait
inc
rol
sub
in
mov
push
aaa
lods
retf
pop
cdq
int
outs
lea
inc
aaa
push
loope
jg
pmaxub
mov
fidiv
scas
push
jno
xor
xchg
daa
mov
(bad)
jmp
into
jo
mov
or
mov
adc
sub
adc
mov
(bad)
jl
test
add
push
pop
mov
sti
dec
pop
xor
pop
aaa
enter
cli
mov
xchg
dec
xor
jb
mov
cdq
mov
addr16
mov
rcr
les
mov
xor
popa
mov
je
adc
sbb
stos
xchg
cwde
mov
sub
jns
ins
repz
jno
jmp
(bad)
push
fadd
push
(bad)
and
fidiv
ficom
arpl
imul
scas
scas
mov
mov
cli
arpl
fadd
rol
mov
inc
sub
nop
push
not
pop
in
adc
sub
stc
xchg
dec
test
fsub
pop
push
jmp
inc
add
or
push
enter
addr16
cld
aam
and
je
lds
fwait
retf
js
and
les
inc
pop
pop
arpl
pop
mov
jne
es
or
cs
adc
mov
inc
push
popf
adc
mov
cmp
xchg
data16
sub
out
nop
sub
repz
fdiv
pop
test
ret
ja
jae
movs
aas
sub
outs
add
sbb
jb
add
bound
in
cld
or
sar
mov
adc
mov
push
push
shr
repz
inc
cmp
sbb
mov
pop
or
aad
jns
loope
mov
pop
jl
pop
mov
sar
adc
retf
dec
outs
gs
push
(bad)
xchg
fidivr
mov
push
mov
fld
pop
aaa
add
jp
mov
or
mov
push
adc
dec
add
or
xchg
(bad)
sbb
fsin
push
mov
pop
adc
pushf
pop
(bad)
jle
lock
add
faddp
lods
cli
dec
or
pop
cmp
stc
or
pop
dec
add
inc
nop
mov
dec
std
sbb
sti
in
cwde
mov
je
adc
mov
jge
add
data16
xchg
ss
in
cmps
shr
sbb
inc
xchg
pop
add
sbb
cwde
pop
adc
xchg
mov
xor
leave
mov
mov
mov
imul
adc
push
jle
push
jbe
or
sub
movs
push
push
jb
lock
xchg
je
cmp
rol
push
or
mov
jecxz
sbb
sub
cmp
add
or
dec
cmp
addr16
cmp
mov
lahf
cmp
shl
mov
mov
jnp
js
fsub
mov
mov
into
inc
pop
cmp
into
mov
movs
pop
mov
aas
in
jno
jbe
ins
xor
jns
pusha
adc
jge
xchg
mov
dec
cwde
or
out
inc
cdq
adc
jne
pop
(bad)
cdq
cli
ins
or
(bad)
adc
dec
lods
mov
leave
push
and
icebp
mov
push
test
push
inc
mov
pusha
mov
add
fimul
pop
(bad)
jg
pushf
push
fdivr
and
out
sbb
and
xor
clc
push
cdq
push
mov
xor
aas
push
imul
xor
dec
pusha
push
mov
das
adc
cmps
mov
pop
pusha
bound
adc
adc
add
sub
movs
mov
aaa
inc
out
addr16
(bad)
jmp
dec
jo
cmp
pop
adc
push
nop
cmp
test
data16
cmps
dec
mov
icebp
or
movs
cli
cli
mov
add
fisubr
mov
push
das
and
fcomip
jmp
stos
stos
pop
jmp
mov
out
lea
in
frstor
jbe
les
xchg
pop
push
ret
dec
jbe
inc
ss
inc
push
push
mov
in
imul
(bad)
clc
into
jns
lods
(bad)
repz
fadd
mov
and
sub
loope
mov
cmp
pop
lahf
jg
retf
mov
mov
sahf
mov
sbb
sub
enter
or
out
cmp
xchg
or
fnstsw
sub
retf
pop
mov
jl
or
ds
iret
mov
js
loope
pop
stos
mov
sbb
inc
retf
jae
mov
inc
or
push
sub
push
fst
pop
adc
rol
inc
scas
pop
bound
sub
(bad)
fisttp
inc
xchg
loope
es
pop
inc
or
into
(bad)
jb
xchg
test
shl
cmp
ja
out
test
xor
xlat
lods
inc
mov
fmul
mov
fcmovne
pop
cwde
lahf
cmp
mov
and
fisttp
stos
xor
out
mov
xor
dec
sub
push
or
aas
sbb
add
jecxz
xchg
sbb
fsubr
mov
mov
pop
cmp
add
cmp
ins
adc
pop
adc
repz
hlt
dec
sub
icebp
mov
fidivr
mov
sub
jmp
sub
ficomp
push
mov
lds
imul
lock
sbb
mov
push
ja
retf
bnd
fs
push
jge
popf
ins
inc
cmp
cmps
loope
mov
int3
push
cdq
cmp
or
cmp
push
inc
stos
or
ins
inc
pop
cmp
scas
loop
ds
lods
xlat
aam
jge
xchg
adc
lahf
push
mov
jo
std
imul
dec
ins
or
jle
push
and
icebp
lahf
das
pop
sbb
cmp
inc
adc
sbb
leave
fcom
fadd
addr16
pop
out
push
test
(bad)
pusha
(bad)
int
inc
imul
scas
add
loope
cmc
movs
mov
inc
sub
xor
sar
hlt
push
push
fisub
add
cmc
sub
cli
mov
xchg
test
pop
xor
repz
mov
idiv
fcomp
mov
sbb
pop
arpl
inc
in
xor
ins
xor
jbe
enter
jns
sub
fild
push
scas
xchg
xlat
loope
sti
ret
(bad)
mov
fiadd
lock
stc
sub
int
data16
pop
(bad)
int3
dec
ret
ret
sub
cmp
push
int
inc
add
mov
lock
sub
js
lahf
sbb
dec
mov
dec
lods
push
fdivr
pushf
out
aad
cdq
jl
aaa
(bad)
in
sbb
popa
jg
mov
mov
pop
rcl
sub
mov
sub
add
enter
repnz
lock
mov
adc
std
xor
dec
sub
std
mov
je
es
jle
push
dec
xlat
iret
dec
rol
cs
mov
add
dec
cmp
in
xchg
push
pop
jp
mov
add
inc
movs
outs
add
repz
scas
sbb
mov
mov
icebp
pusha
sti
or
mov
pop
cmc
sbb
loopne
inc
fstp
cmp
jae
mov
bnd
dec
clc
or
fstp
mov
xchg
jmp
test
xchg
cwde
retf
fdivr
cld
mov
ins
mov
lahf
popf
push
cli
scas
sbb
imul
loop
sbb
repnz
sbb
sbb
lea
ds
scas
push
ja
inc
jo
xchg
inc
push
sahf
xor
fist
xchg
bound
mov
mov
inc
loop
mov
mov
mov
mov
fcmovbe
inc
test
sub
cwde
push
retf
or
fstp
(bad)
and
outs
ja
push
push
leave
(bad)
adc
addr16
(bad)
ja
adc
in
push
ja
xchg
rcr
(bad)
pushf
jmp
inc
leave
loop
mov
jp
xchg
add
mov
retf
jo
pusha
push
nop
and
add
mov
and
dec
retf
push
adc
in
fsub
adc
and
push
pop
dec
pushf
add
inc
sbb
lods
or
push
pusha
mov
pop
pop
int3
inc
push
pop
xchg
popa
data16
sahf
cmp
fisttp
dec
das
mov
or
ret
(bad)
repz
(bad)
cmps
pop
dec
xor
gs
test
mov
xor
hlt
push
mov
imul
test
dec
xchg
mov
std
nop
jno
popa
push
pop
cmp
sbb
bnd
add
adc
in
adc
test
xor
mov
inc
or
mov
pusha
test
dec
jge
and
ds
sbb
int3
jle
retf
lods
or
add
test
inc
inc
in
cmp
lahf
inc
repz
fsubrp
lds
sub
cmps
add
aad
jmp
ins
sub
cwde
jo
mov
shl
pop
dec
xchg
test
icebp
(bad)
clc
sub
std
mov
push
xchg
dec
mov
loop
aad
fisttp
loop
pusha
or
mov
pop
(bad)
sbb
cli
push
dec
inc
les
sub
ins
push
adc
out
push
adc
shl
mov
mov
int3
pop
and
adc
push
out
xor
scas
test
neg
cwde
enter
in
mov
sbb
xor
mov
iret
mov
in
mov
retf
mov
xchg
mov
leave
xchg
inc
xor
inc
loope
fisub
sahf
adc
dec
and
sub
(bad)
jne
(bad)
sub
lea
jb
xchg
push
add
mov
xlat
push
push
(bad)
jmp
shl
jmp
mov
add
sbb
or
jmp
sub
icebp
hlt
dec
retf
es
jge
push
aam
in
dec
add
adc
pop
xor
enter
je
mov
cmp
fwait
into
aad
push
jecxz
fucomip
push
ds
xor
gs
add
fidiv
stos
ret
add
not
mov
pop
jno
jo
fadd
ss
xchg
sub
rcl
fs
sbb
or
sub
jl
mov
ror
aas
in
mov
and
push
retf
sbb
or
cdq
mov
repz
rcr
loop
jb
aaa
add
in
mov
mov
sbb
sbb
push
movs
mov
cld
shl
dec
jmp
ss
cs
je
mov
cmp
mov
inc
sbb
scas
imul
or
imul
dec
in
sub
jno
and
out
pop
(bad)
or
cmps
inc
dec
test
mov
xchg
push
or
(bad)
xchg
xchg
test
xchg
test
or
xchg
adc
pushf
add
fisttp
and
test
adc
mov
imul
or
fiadd
inc
inc
lods
or
shl
or
outs
xchg
mov
scas
cmp
stos
lods
test
mov
jo
in
or
cmps
(bad)
ror
push
or
inc
out
cmp
push
adc
inc
jno
pop
xor
sar
or
cmp
jge
sbb
jmp
add
je
aam
xchg
add
sbb
fsubp
enter
pandn
rcr
mov
int3
aad
mov
sbb
cdq
dec
push
xchg
ds
xor
test
push
adc
cmp
mov
ss
call
sbb
jae
cmps
mov
fbld
rcl
push
cmp
cmc
or
mov
adc
mov
iret
mov
and
sbb
fst
arpl
lea
ins
cli
and
leave
retf
cs
sbb
bound
xor
jae
movs
inc
pop
es
push
in
lahf
cld
mov
leave
pop
sub
cld
mov
mov
cmp
sub
pop
outs
adc
stos
push
test
pop
inc
inc
movs
sbb
push
mov
popf
lea
test
and
stos
imul
aaa
sub
ss
out
ret
into
mov
jge
mov
(bad)
stc
hlt
cmp
scas
add
imul
retf
or
(bad)
adc
cdq
dec
ror
inc
cmps
shl
xchg
shl
xlat
in
loope
stc
and
sbb
push
cmp
shl
xchg
inc
(bad)
sbb
push
jmp
jns
cld
cmp
jae
push
test
jg
cmps
test
cmp
mov
xsaves
rcr
sbb
outs
push
mov
and
imul
into
inc
or
cmp
mov
pop
xor
push
pop
cmp
sub
bound
imul
sbb
daa
xor
inc
les
xor
pusha
movs
pop
lods
sbb
and
std
jmp
inc
inc
mov
or
jbe
inc
xchg
(bad)
dec
add
in
das
ins
and
jns
add
and
xchg
int
ins
xor
cmp
retf
aaa
call
movs
out
daa
lahf
cmp
add
in
and
xor
imul
dec
push
sub
push
mov
jmp
add
jns
cmp
jbe
cmps
inc
or
(bad)
push
lea
(bad)
lea
mov
test
aam
sub
aam
fs
adc
fdiv
xchg
sub
add
inc
jle
sbb
push
loope
ins
pop
and
sbb
adc
add
add
leave
dec
mov
stos
(bad)
cld
lea
scas
inc
sub
cmp
js
jnp
push
pop
aam
or
inc
lahf
ins
jne
xor
aaa
jns
sub
addr16
movhlps
inc
fmul
lea
test
mov
or
push
jo
loop
xlat
test
stos
lahf
sbb
jne
pop
ret
dec
push
aaa
shl
inc
push
fnsave
ins
popf
in
in
or
inc
pop
mov
cwde
xor
out
cmps
ret
push
add
loop
imul
sar
cmp
lds
jmp
mov
or
enter
mov
jmp
push
fistp
loope
pushf
jbe
aaa
jns
add
or
hlt
push
xchg
mov
ret
addr16
ds
aas
mov
aas
in
or
and
data16
or
or
adc
dec
and
inc
daa
(bad)
lock
sub
xchg
loop
aad
fisttp
imul
xor
rcl
mov
cwde
leave
push
jmp
pop
mov
lock
mov
mov
sub
dec
lock
mov
mov
mov
sahf
cmp
push
xchg
dec
sbb
arpl
and
inc
sbb
mov
sub
mov
sub
test
sahf
push
rcr
bound
xor
adc
sahf
xor
clc
sub
mov
sub
pop
nop
cmp
mov
loope
stos
mov
add
xor
cmp
call
and
cwde
push
and
outs
or
jge
sbb
xchg
hlt
outs
mul
dec
dec
inc
pop
mov
fcomp
cld
sbb
dec
sub
movs
movs
inc
pop
mov
js
popf
or
jmp
pop
push
rcl
(bad)
xor
push
aaa
push
xchg
in
loop
or
mov
repnz
jae
sti
inc
sbb
mov
out
pop
je
jno
cwde
ins
dec
push
push
outs
xchg
pop
out
(bad)
iret
push
int3
test
inc
or
adc
jl
dec
rcl
mul
out
fidiv
adc
jns
xchg
clc
loopne
pop
pusha
aam
pusha
psrlq
std
sti
fsubrp
loope
mov
ins
dec
push
test
test
sbb
imul
mov
call
inc
inc
imul
mov
dec
ror
inc
xor
jle
mov
adc
sub
jnp
jl
(bad)
xor
xor
aad
arpl
jl
adc
mov
and
scas
ins
sahf
adc
xchg
xchg
sbb
xchg
cmps
ss
sbb
imul
fsub
sbb
mov
xor
js
in
out
(bad)
out
call
sbb
push
jmp
sbb
adc
xchg
jmp
arpl
inc
lea
mov
adc
shr
mov
pusha
fs
rcl
inc
push
pxor
pop
inc
fwait
or
clc
mov
mov
mov
js
adc
popa
cmp
mov
jo
pop
jmp
pop
ins
and
(bad)
cdq
fwait
ror
call
or
sbb
push
(bad)
jnp
std
sti
dec
pop
fnsave
cli
mov
jge
mov
pmaxub
dec
pop
fbld
pop
mov
mov
cs
xchg
and
pop
push
mov
inc
test
push
mov
push
aad
sbb
adc
mov
sub
adc
ss
dec
imul
shl
loopne
jo
retf
icebp
cmps
(bad)
xchg
fmul
xchg
call
jae
imul
dec
xchg
shl
not
daa
mov
inc
ds
mov
aad
xlat
mov
jbe
mov
mov
fwait
xor
out
mov
test
dec
sub
mov
fwait
jae
and
cld
lea
mov
outs
mov
sahf
mov
lods
adc
clc
or
mov
adc
inc
jmp
fcmovnb
add
adc
and
xor
add
sbb
adc
mov
mov
stos
jb
push
sahf
mov
dec
lahf
outs
ds
and
pop
rep
cmc
pusha
or
outs
push
mov
je
les
outs
sub
jle
fisub
xor
add
cmp
xchg
(bad)
icebp
and
jno
test
lods
mov
jmp
outs
scas
cmps
add
mov
(bad)
dec
in
ret
ja
dec
fiadd
cmps
stos
xor
shl
mov
adc
jb
mov
outs
(bad)
sub
call
fcomp
mov
xchg
pop
je
push
mov
push
jl
or
xlat
mov
xor
test
xchg
out
pop
adc
(bad)
(bad)
mov
xchg
cwde
or
cmp
and
gs
xor
mov
imul
add
xor
push
and
sub
mov
mov
sbb
sub
punpcklwd
cmp
daa
clc
and
rcl
fcomp
popf
sub
nop
xor
add
adc
and
mov
int3
push
and
mov
mov
pop
dec
mov
cli
inc
shl
jle
test
sbb
nop
mov
sbb
add
fndisi(8087
(bad)
pop
iret
dec
xor
xchg
jnp
xchg
sbb
push
fldcw
mov
fcmovbe
cmc
pop
pop
lea
(bad)
or
xchg
es
shl
cs
sub
cdq
push
pop
pop
cmps
addr16
sub
sub
popa
and
mov
rcl
jb
pop
jbe
(bad)
ins
movs
mov
sti
add
jbe
dec
pop
jp
and
nop
lea
in
sbb
lea
fld
outs
jmp
cs
push
xor
aam
sub
push
adc
inc
pop
sti
sub
ss
cmp
cdq
ror
xchg
repnz
xchg
inc
xor
mov
push
jne
pop
sub
lock
popa
sbb
loope
cmps
in
mov
shl
dec
dec
outs
call
jo
adc
jmp
adc
cmp
pop
imul
outs
adc
mov
and
jnp
xchg
test
mov
push
sub
add
or
pop
xor
pop
mov
(bad)
data16
mov
dec
(bad)
stos
sub
cmp
ret
dec
inc
dec
vmovaps
pusha
or
dec
pop
inc
push
adc
js
inc
mov
xchg
in
in
ins
mov
jmp
push
aas
repz
xchg
mov
xlat
xor
popa
add
sub
les
aas
adc
(bad)
pop
ins
movs
xor
or
or
mov
mov
shl
jmp
clc
in
and
pop
add
xchg
mov
in
arpl
ins
enter
mov
mov
lock
out
sub
dec
fs
sub
out
mov
icebp
pushf
xchg
mov
sar
in
push
ficom
outs
inc
retf
ret
mov
(bad)
cli
outs
int3
(bad)
sbb
push
popf
call
ret
mov
xlat
(bad)
ins
repz
int
cmp
xchg
pop
xor
dec
pop
dec
sbb
retf
ja
gs
push
add
cmp
in
mov
cwde
pop
das
retf
xor
lock
inc
mov
adc
xchg
push
leave
lods
push
js
hlt
imul
ins
dec
test
xchg
push
repnz
out
addr16
outs
mov
xlat
xor
rcl
dec
scas
retf
dec
out
xor
push
out
(bad)
std
add
jae
dec
ffree
mov
imul
not
or
mov
pop
ror
cmp
pusha
fidivr
cmp
pusha
not
or
data16
or
hlt
jg
aad
sub
cld
popa
and
rcl
ret
punpcklbw
ss
inc
std
daa
imul
in
dec
adc
adc
lea
mov
jbe
jne
pop
dec
call
push
and
or
and
xchg
push
or
mov
scas
loope
add
loopne
scas
addr16
retfw
loopne
inc
retf
push
mov
mov
sub
mov
cwde
loop
xor
push
ss
nop
push
pushf
hlt
lock
call
dec
call
shl
outs
fld
mov
leave
xor
ins
cmps
(bad)
enter
lods
(bad)
dec
sti
(bad)
ins
je
aam
mov
cmps
mov
dec
mov
mov
int3
ret
pop
and
inc
push
mov
push
or
dec
and
xchg
push
mov
sbb
nop
push
fisub
pop
sub
and
pop
push
mov
inc
bound
test
and
sbb
cwde
mov
arpl
mov
aam
mov
bndldx
jmp
add
and
test
sbb
xchg
std
jbe
out
lods
dec
mov
das
mov
inc
cld
ror
loop
(bad)
fld
ins
dec
fimul
xchg
inc
out
mov
push
call
test
and
sbb
inc
mov
mov
mov
and
add
push
xor
fnstcw
xchg
mov
cmps
sti
xchg
jb
jns
or
jae
pop
dec
mov
mov
xchg
enter
je
test
movs
loope
sub
into
xchg
dec
std
(bad)
lock
(bad)
cli
aam
ins
mov
cwde
xchg
or
ss
les
pop
test
xor
pop
jle
test
or
mov
fldcw
jle
dec
sub
outs
and
adc
xchg
jge
mov
out
(bad)
in
push
push
xchg
add
pusha
imul
push
stos
dec
push
xchg
xor
push
jo
dec
sub
out
mov
add
aaa
test
xor
inc
mov
jge
test
jo
xor
(bad)
aas
mov
dec
dec
leave
and
xor
fdiv
jmp
test
mov
dec
or
mov
ja
test
fldcw
dec
popf
nop
cwde
inc
(bad)
pop
and
push
or
or
ffreep
jbe
mov
push
fwait
cwde
movs
pop
nop
movs
pop
xlat
jp
dec
xor
mov
mov
fwait
mov
imul
or
xor
dec
xlat
popf
jae
fcmovnu
cmp
out
mov
mov
xchg
xchg
xchg
cmp
inc
mov
sahf
push
push
mov
imul
jae
dec
adc
jg
mov
dec
enter
add
mov
pop
sbb
sti
pop
push
rol
lods
lds
es
cmp
fdivr
(bad)
cdq
call
iret
ins
fnstenv
jae
and
in
or
shl
inc
fnstenv
sbb
add
mov
lods
mov
pop
mov
jmp
fwait
and
jno
enter
retf
xchg
call
fstp
push
and
push
imul
int
mov
scas
iret
xchg
or
in
sub
and
rcr
rcl
push
push
test
mov
out
inc
dec
hlt
and
adc
push
adc
movs
add
fs
push
mov
in
inc
mov
stc
xor
or
in
pusha
call
cli
mov
es
xchg
aas
iret
fadd
out
xchg
shl
inc
out
sar
mov
dec
lods
in
stos
or
push
in
addr16
mov
sbb
cwde
xchg
rol
fimul
enter
inc
push
loopne
xor
nop
or
jmp
mov
push
loope
(bad)
mov
add
mov
sbb
mov
lods
jg
pop
cld
mov
push
out
pop
cmps
neg
adc
pop
imul
rsqrtps
das
cmp
xor
enter
popf
ins
ja
dec
call
or
and
cdq
sbb
(bad)
push
or
add
push
lock
retf
xor
cmove
push
fadd
rol
daa
inc
jno
pop
(bad)
hlt
mov
cli
mov
lods
or
aam
or
int3
arpl
jmp
adc
lahf
and
add
sbb
and
int
adc
dec
add
out
aad
dec
repnz
inc
inc
jmp
cmp
fadd
and
lock
add
imul
lea
ins
cmp
or
movs
and
or
sbb
mov
jnp
popf
call
fsubr
sahf
dec
dec
cmp
push
push
cmp
iret
mov
call
hlt
add
push
data16
pop
cld
pop
push
(bad)
cmp
cwde
test
pop
push
ds
adc
fiadd
xchg
mov
xchg
cmp
mov
push
movs
fidivr
push
xor
aam
cld
pop
das
xchg
sub
callw
dec
test
xor
shr
sbb
xor
int3
pusha
or
adc
fwait
stos
inc
adc
ss
rcl
ins
retf
push
sti
popa
movs
xor
jmp
test
pop
mov
mov
mov
xchg
jl
pop
jp
icebp
adc
dec
pop
ret
outs
adc
mov
and
mov
ja
ja
std
test
pop
jmp
fsub
pop
gs
or
add
push
loopne
push
arpl
rcl
repz
lock
(bad)
jbe
in
push
jp
inc
jmp
shr
cdq
push
jl
out
mov
pop
(bad)
cli
jno
mov
or
out
(bad)
mov
lods
cmp
bswap
fnsave
pop
adc
jnp
movs
push
jmp
sub
inc
sub
dec
hlt
dec
rol
or
cmp
and
pop
sbb
(bad)
cmp
xchg
das
jmp
sbb
pop
(bad)
scas
fwait
jmp
repnz
das
rol
cdq
sahf
mov
cdq
push
jns
not
cld
inc
repnz
pushf
pushf
out
ret
lods
test
add
xchg
sahf
add
test
push
jmp
iret
or
out
mov
into
and
pushf
stc
push
les
sbb
sbb
lock
pop
mov
mov
shl
imul
mov
(bad)
ins
into
(bad)
loope
inc
aaa
dec
sbb
aas
lock
dec
fild
lods
push
fisttp
in
shr
sbb
or
fdivr
sub
imul
inc
stos
or
aas
jmp
add
mov
mov
cdq
pop
push
or
mov
inc
aad
xchg
dec
(bad)
sub
mov
aaa
or
push
jp
je
dec
cmps
xor
repz
sbb
push
mov
or
movs
call
in
mov
adc
and
ret
xchg
cmp
sar
xor
and
mov
add
xor
jg
and
or
mul
cmp
mov
sahf
mov
js
ins
ficom
mov
mov
leave
pop
test
and
int
push
imul
int3
clc
sbb
mov
arpl
ror
xchg
pop
sub
push
push
push
mov
sbb
xor
mov
push
das
popf
jecxz
fcom
clc
scas
lea
idiv
push
mov
idiv
mov
stc
je
cmp
lods
ja
fisttp
mov
out
(bad)
test
retf
push
sub
scas
mov
scas
sub
cli
mov
mov
add
push
push
jmp
push
es
(bad)
hlt
jp
lea
sub
ret
(bad)
xlat
add
ins
mov
(bad)
push
arpl
ficom
mov
fadd
and
call
mov
jns
xchg
sbb
stos
xor
sti
mov
lods
sar
mov
jecxz
imul
push
lods
adc
out
je
int
sar
movs
cwde
ret
add
cli
sbb
ja
in
pop
jno
mov
jmp
shl
inc
or
rol
mov
or
jno
pop
bound
loope
out
mov
out
(bad)
test
in
inc
fiadd
lahf
out
sti
and
sub
test
pop
xchg
mov
and
mov
pop
xor
push
pop
pushf
jmp
adc
fcomp
push
mov
cs
daa
push
(bad)
lock
sub
pop
xchg
ret
imul
xchg
mov
arpl
cmp
mov
into
jecxz
cmc
mov
outs
xchg
mov
xlat
test
das
gs
xchg
sub
popf
movs
test
fldenvw
jmp
popf
iret
sbb
or
pop
cdq
repz
test
rol
xchg
mov
jb
mov
mov
mov
mov
add
mov
in
test
push
aad
into
cmp
outs
mov
cmps
mov
mov
or
dec
pushf
pop
enter
adc
(bad)
xor
lods
fdiv
xor
dec
cmc
imul
and
cmps
add
jnp
int3
arpl
hlt
mov
sahf
ficom
sub
sahf
xor
jge
or
fsub
(bad)
mov
lea
pop
in
test
enter
out
push
xchg
cmp
inc
xlat
ror
mov
mov
inc
or
int3
mov
push
inc
loop
xor
xor
in
sbb
ja
int3
lods
in
out
xchg
jmp
dec
pop
jle
adc
mov
(bad)
scas
jns
(bad)
out
cmps
repnz
mov
loopne
push
ficomp
push
adc
inc
mov
dec
jne
cdq
adc
xor
loop
adc
lods
dec
jge
jbe
push
in
pop
addr16
mov
cmp
cmps
stos
and
icebp
fs
call
mov
jp
cmps
pushf
test
push
sub
xchg
mov
fisub
mov
mov
push
mov
pop
loope
not
mov
sti
sbb
daa
jae
jmp
(bad)
aas
xchg
sbb
int
xchg
loopne
mov
or
xchg
in
mov
ja
daa
out
cmp
mov
or
sub
neg
pop
movs
jns
push
jo
in
jecxz
or
push
sbb
dec
or
repz
cmp
aam
pop
sub
les
inc
mov
pop
inc
mov
(bad)
call
(bad)
(bad)
lea
in
add
add
and
ja
add
dec
pop
ret
das
jne
dec
ins
pop
push
or
in
sub
adc
(bad)
jo
fcom
inc
adc
adc
fdivr
jbe
cld
mov
push
jbe
xchg
push
push
sbb
xor
cld
dec
adc
movs
xor
or
xor
dec
ror
pop
mov
and
mov
and
sar
lds
sub
enter
test
lods
sub
cs
sub
loopne
enter
sub
adc
sub
and
adc
outs
icebp
jne
adc
inc
sub
adc
mov
inc
imul
ins
mov
fwait
icebp
dec
into
mov
leave
cmp
adc
(bad)
xor
popa
add
cld
test
jnp
mov
ficomp
mov
push
mov
adc
in
sbb
std
mov
stos
les
cmp
pushf
clc
daa
push
les
sub
dec
imul
mov
dec
out
mov
lods
mov
pop
in
and
sbb
cmps
jmp
clc
push
mov
iret
and
movs
out
mov
(bad)
sub
pop
(bad)
fsubp
adc
in
adc
out
xor
mov
sub
xchg
cmps
mov
mov
scas
jns
jmp
jg
fwait
sbb
dec
xlat
jge
push
(bad)
sahf
jb
icebp
cmp
sbb
mov
push
sar
out
loopne
and
in
repz
sahf
(bad)
jns
iret
ins
in
cmp
inc
hlt
and
fisttp
mov
into
cld
test
sbb
cmps
aam
xchg
and
data16
adc
sub
pop
jb
ret
arpl
ja
lods
leave
mov
scas
and
add
mov
mov
mov
xchg
adc
adc
fld
into
xor
das
xchg
out
iret
add
cdq
aas
inc
in
loop
test
xchg
fst
pop
in
push
fstp
jl
(bad)
mov
in
bound
sub
adc
add
cmp
lahf
jg
call
mov
cmp
pop
pop
pop
pop
inc
dec
push
push
jmp
out
inc
jbe
lock
lds
fsub
(bad)
jb
mov
xchg
lods
xchg
xlat
pop
cmp
imul
bsr
aam
cdq
xchg
jo
jb
xchg
mov
lea
mov
xchg
cs
idiv
es
xlat
lea
test
mov
add
pushf
jae
stos
mov
xlat
sbb
cmp
je
addr16
inc
in
xchg
push
and
(bad)
popa
and
or
dec
out
iret
cli
xchg
push
in
mov
dec
dec
sbb
cdq
dec
xchg
mov
gs
adc
loope
add
push
and
jge
or
loopne
(bad)
jns
sbb
jecxz
push
jne
(bad)
mov
sub
loopne
and
loope
xchg
push
rol
jb
pop
dec
jo
push
or
pop
lock
fnstcw
gs
jbe
jecxz
mov
ja
push
sub
xchg
repz
lods
and
out
(bad)
or
mov
js
in
shl
xlat
stos
jb
pop
cld
imul
push
and
cli
aas
adc
ret
inc
int3
popa
sub
mov
es
les
cld
xor
fidivr
or
sub
mov
jbe
arpl
mov
ins
jnp
lahf
ret
adc
out
bound
xor
fidivr
test
out
ret
(bad)
stc
das
shr
push
arpl
ds
(bad)
xor
sbb
pop
sub
sbb
mov
pop
sti
icebp
cli
and
xchg
sbb
mov
std
(bad)
jne
cwde
retf
xchg
jl
outs
sub
rol
and
pushf
test
sahf
cli
outs
sbb
addr16
push
jo
inc
out
sub
pop
into
mov
lods
cmps
ret
js
mov
xchg
(bad)
outs
or
enter
cmp
dec
in
ficomp
mov
jmp
aam
sub
je
push
adc
pop
pop
aam
test
dec
dec
add
cmp
add
xor
cmp
mov
rcl
cmp
cmc
out
jg
inc
mov
mov
and
or
adc
mov
(bad)
aad
ficomp
sub
jmp
shl
mov
xchg
cld
mov
add
cdq
out
xlat
push
mov
and
push
sub
mov
leave
sar
mov
xlat
xor
ds
pop
retf
xor
mov
jno
ins
outs
xchg
clc
sahf
fld
inc
cmc
dec
sbb
adc
adc
mov
lods
mov
xchg
xabort
arpl
pop
scas
push
fwait
inc
mov
test
mov
ret
popf
rcl
sbb
xor
pop
xchg
cmp
mov
imul
fisub
int
maskmovq
test
jae
mov
in
and
aam
jg
cmp
and
pop
sub
jp
ret
and
popf
mov
loopne
arpl
mov
xor
ficomp
dec
sti
gs
jp
sahf
arpl
cld
in
mov
pop
cld
mov
ret
pop
jmp
inc
je
xchg
xchg
sub
mov
sahf
cmp
arpl
xrelease
adc
arpl
das
add
jp
icebp
inc
sub
jmp
inc
mov
inc
adc
push
sbb
add
adc
call
in
test
out
pop
jecxz
fwait
ret
xor
sbb
mov
test
int3
inc
and
scas
xor
mul
xor
jns
jo
int
mov
fisubr
cld
xor
jle
jmp
sbb
ret
push
sti
shl
cmp
stc
jne
bnd
int
(bad)
mov
loopne
dec
and
stos
call
add
push
popa
shr
aam
ins
fldcw
das
jo
and
adc
push
mov
ficom
inc
cmp
xor
pop
push
ss
jne
ins
retf
adc
jno
sahf
push
popf
push
arpl
cdq
call
pop
daa
mov
sahf
cwde
in
and
cld
xchg
jmp
int
jno
mov
mov
jp
mov
jae
call
or
jbe
fidiv
lea
movs
imul
mov
fwait
push
sahf
mov
pop
in
neg
cli
xor
pop
inc
jmp
lods
pop
scas
adc
aas
fnstcw
les
xchg
push
mov
adc
xchg
jle
jb
add
xor
cmps
mov
sub
sub
gs
jmp
mov
dec
rep
ja
repnz
add
in
sbb
cli
(bad)
js
jp
pop
scas
jle
sub
sub
sub
data16
repnz
dec
jb
inc
jno
push
mov
push
stos
test
sub
jl
dec
push
into
push
out
daa
add
retf
ret
push
into
(bad)
ins
fs
adc
cmps
popa
fidiv
pop
loopne
add
das
clc
shr
sbb
or
cmp
loopne
into
loopne
hlt
or
retf
push
jmp
(bad)
scas
push
xor
jl
sbb
stos
or
nop
ret
repnz
daa
pop
into
sbb
sbb
lahf
mov
or
inc
xchg
dec
push
movs
loope
out
aam
into
ret
dec
rcr
lods
push
cmp
stos
lds
sar
rcr
cld
scas
movs
add
pop
mov
mov
push
test
stc
push
or
or
adc
add
adc
fsubp
shl
scas
mov
das
mov
lock
or
xchg
cmp
(bad)
push
pop
mov
lods
ret
(bad)
sub
imul
js
jae
and
inc
jl
mov
imul
fild
out
add
movs
add
mov
scas
push
add
or
cdq
and
mov
sub
dec
ret
rcr
xlat
addr16
push
inc
hlt
repz
aam
outs
lods
pop
fmul
call
movs
dec
mov
mov
clc
popa
leave
cmp
scas
and
inc
cmp
sahf
in
sbb
or
and
mov
add
jecxz
fadd
add
dec
pop
std
xchg
cmp
dec
mov
ds
cli
sub
mov
enter
mov
jo
cwde
dec
mov
lock
ins
stos
xor
inc
adc
out
leave
out
movs
cmp
mov
cmps
lock
pop
lds
stos
mov
sti
hlt
jl
daa
int3
add
(bad)
jae
std
aam
mov
mov
daa
retf
adc
push
add
or
mov
daa
in
sub
jae
push
icebp
scas
dec
push
push
sub
cmp
mov
pop
cmp
xor
mov
ins
ret
ja
inc
jae
in
hlt
lea
jb
stc
dec
dec
ss
push
imul
nop
jmp
aad
cmp
jne
jmp
pop
hlt
push
das
xor
inc
mov
jp
retf
xor
in
iret
cmps
scas
adc
js
rcl
pcmpgtd
push
xor
pop
cli
inc
out
mov
mov
add
repz
xor
call
sbb
mov
xchg
sbb
cli
test
rcl
mov
pop
dec
mov
mov
add
rcr
adc
mov
ja
mov
sbb
adc
sub
leave
inc
push
sahf
ror
jns
scas
retf
xchg
popa
push
aaa
add
enter
fwait
(bad)
push
(bad)
push
ja
shl
jae
xor
sub
fist
popf
cli
frstor
sbb
nop
push
xchg
inc
into
dec
outs
sbb
sub
xor
pop
(bad)
adc
lock
das
rcr
mov
fnstenv
mov
addr16
cmp
inc
xchg
inc
scas
mov
mov
jns
pminub
inc
lock
pop
ret
loop
test
push
loop
icebp
stos
cmp
daa
jmp
mov
leave
loope
out
clc
mov
mov
imul
lods
ins
xchg
mov
push
out
shr
jmp
imul
inc
int
test
stc
lahf
push
jns
arpl
sahf
and
out
mov
mov
and
rol
push
and
sub
out
int
cmp
pop
ins
outs
call
and
clc
jae
adc
and
loope
aas
push
dec
lods
std
adc
adc
pop
pop
sub
mov
pop
lods
mov
mov
out
pusha
sahf
cmps
call
adc
push
mov
mov
fnstcw
sub
xchg
adc
mov
push
sub
pop
jbe
mov
(bad)
ss
push
stos
data16
sbb
xchg
dec
ret
ficom
aam
sbb
aad
cmp
xor
push
jns
cmc
adc
cmp
frstor
sbb
cmps
loope
out
int
call
in
mov
dec
aas
xchg
and
jmp
xchg
(bad)
lods
out
push
bound
adc
cli
mov
dec
out
test
xchg
xor
add
clc
mov
(bad)
push
int
fucom
test
or
sahf
call
mov
jae
dec
push
push
ret
push
xchg
or
inc
sub
xchg
adc
cmp
in
mov
retf
mov
cmp
in
adc
aad
jne
push
cmp
es
pop
retf
jge
mov
pop
sti
fstp
or
inc
mov
and
in
dec
outs
daa
jl
inc
inc
lods
sti
mov
(bad)
and
cmp
xor
jno
xor
pushf
cmp
jecxz
push
push
add
jle
inc
test
repnz
push
outs
ret
outs
mov
out
add
std
aad
inc
ret
imul
cmp
std
not
mov
xlat
in
fcmovu
sbb
fisub
push
and
test
adc
mov
push
into
xchg
or
cmp
int3
aad
fild
jb
pop
pop
lods
or
xor
outs
mov
and
mov
xlat
sub
loope
iret
mov
pusha
sbb
cmp
loope
xchg
sbb
mov
sbb
xor
sbb
repnz
push
arpl
cmp
cli
je
pop
movs
pop
push
fprem1
mov
mov
out
shl
mov
fwait
push
jge
push
sub
popf
mov
ins
inc
(bad)
sub
in
and
dec
sub
inc
sub
pop
cmp
out
dec
mov
call
push
mov
inc
(bad)
mov
sbb
pop
xor
movs
out
adc
xchg
repz
adc
mov
inc
aaa
push
cld
add
inc
mov
ret
movs
pop
(bad)
cs
imul
add
lods
fild
dec
sahf
adc
jbe
mov
adc
inc
sbb
les
out
mov
ds
mov
test
lahf
mov
mov
mov
inc
lock
inc
and
adc
imul
xor
rol
add
jl
fistp
ins
clc
mov
push
sub
in
mov
loopne
ficomp
enter
stos
xor
test
popf
fldcw
pop
pop
mov
dec
add
inc
or
retf
clc
and
ror
add
jns
mov
ret
add
arpl
ins
nop
and
jmp
icebp
adc
dec
dec
cmp
adc
adc
push
ret
ret
lds
xchg
pop
jne
xchg
pushf
pop
and
mov
xchg
pop
ret
imul
(bad)
dec
lahf
clc
push
sub
jne
stos
into
and
pusha
(bad)
addr16
std
pop
call
or
(bad)
xor
sar
push
mov
test
out
sub
inc
dec
mov
xchg
shl
neg
out
push
mov
sub
mov
std
jmp
jmp
call
stos
add
stos
dec
mov
in
lea
mov
xlat
es
(bad)
jecxz
push
pop
add
jmp
cli
es
in
stc
push
test
(bad)
mov
lea
ins
out
mov
call
mov
mov
add
rol
lods
in
and
int
loopne
aas
das
scas
(bad)
mov
lods
call
inc
mov
repnz
pop
lods
push
xchg
sub
scas
mov
sub
cld
and
push
inc
aad
outs
pop
push
int3
and
mov
aad
xchg
into
dec
push
xor
mov
lea
out
lods
pop
fmulp
inc
jo
iret
fidivr
and
ror
nop
aas
inc
xchg
dec
lea
cs
scas
mov
fs
fcmovnbe
adc
cwde
in
popf
jmp
out
push
inc
xchg
lea
or
mov
mov
das
mov
div
jmp
test
js
pop
data16
fucom
aam
pop
and
sbb
popf
popf
clc
out
fisub
add
mov
xor
mov
sbb
imul
aaa
mov
add
pop
out
fs
push
dec
cs
sti
lock
dec
ds
sahf
and
int3
add
xor
adc
xor
adc
inc
clc
sbb
inc
adc
int
test
ror
das
or
nop
aam
push
lahf
int3
in
neg
pop
jg
ins
pop
and
cmp
loope
(bad)
adc
or
fs
dec
pop
pop
mov
out
jmp
out
fmul
sar
mov
addr16
inc
add
or
shr
(bad)
cwde
ret
push
lea
jae
sbb
inc
ret
and
pop
aaa
jae
mov
jmp
in
cs
push
popf
and
test
mov
ret
es
push
lods
fcmovu
in
rcl
xchg
xor
inc
js
fnsave
and
in
mov
or
sbb
pop
repnz
inc
sub
xor
cld
dec
dec
pusha
cs
mov
sar
cli
push
sbb
mov
push
in
scas
jo
inc
outs
fdiv
cmp
mov
push
mov
cmp
xor
jge
imul
adc
adc
mov
int
push
sub
cmp
push
adc
or
fisttp
cmp
and
in
sbb
test
call
or
mov
pop
rcr
mov
push
and
out
cmp
cmp
ins
leave
inc
xor
scas
data16
or
(bad)
lea
jp
les
pushf
jmp
or
or
pop
lahf
mov
hlt
jecxz
adc
xchg
pop
fld
adc
mov
push
dec
ins
mov
push
dec
ss
add
shr
jno
bound
pop
cmps
jbe
push
sbb
cmp
arpl
pop
and
cmp
pushf
adc
sbb
outs
sub
sub
gs
sahf
mov
xchg
sub
lods
add
push
add
mov
in
cwde
sub
outs
pop
sbb
stc
push
inc
inc
xchg
jmp
mov
cmp
in
or
pop
lds
jns
inc
adc
gs
xor
add
test
inc
repz
dec
push
(bad)
addr16
jo
mov
mov
push
pushf
jp
daa
push
pushf
repnz
sub
scas
jmp
sbb
fist
int3
adc
inc
and
movs
movs
push
pop
xor
push
arpl
mov
adc
cld
mov
or
mov
and
and
jl
fimul
gs
and
push
xchg
dec
fsubp
xor
adc
and
jecxz
pop
mov
movs
xchg
mov
out
sub
enter
repz
sbb
mov
in
arpl
retf
pop
stc
jne
rsqrtps
cs
ja
push
add
push
fwait
adc
(bad)
mov
les
xor
cmp
mov
stos
pop
out
ds
arpl
aam
mov
mov
ret
call
cmc
leave
or
(bad)
in
push
add
es
ffree
out
loopne
or
in
pop
les
lahf
cmp
xor
leave
shr
xchg
in
nop
test
fnstcw
stos
add
fmul
inc
inc
aam
sub
jg
mov
push
inc
cmp
mov
mov
movs
mov
push
ret
add
mov
call
jge
inc
(bad)
adc
pop
add
xor
es
js
daa
mov
icebp
sbb
jne
inc
jle
in
dec
in
jmp
pop
js
repz
jo
enter
leave
cdq
hlt
fdiv
adc
pop
jmp
xor
xchg
ret
xchg
out
not
idiv
add
xchg
jle
into
in
sub
mov
xor
rol
and
adc
adc
mov
lods
daa
jge
mov
fisubr
mov
mov
jmp
cmp
inc
daa
into
dec
jnp
add
dec
pop
dec
dec
push
xor
inc
jmp
(bad)
(bad)
iret
cdq
outs
jle
add
xor
push
aas
out
in
test
out
sbb
ins
mov
(bad)
in
push
ret
icebp
inc
lds
push
push
xchg
inc
jo
mov
xchg
and
das
jp
mov
sub
ds
repz
fwait
stos
lea
or
fdivr
adc
xchg
aam
inc
lahf
mov
or
in
and
cdq
clc
add
lods
and
rcr
jp
(bad)
jmp
sub
int3
push
lods
xor
or
cmp
xor
and
sahf
imul
in
leave
sub
xor
fdiv
inc
mov
rcr
(bad)
jnp
fstp
and
mov
call
movs
jnp
test
or
mov
arpl
mov
push
sub
jb
aam
sahf
mov
das
lods
xchg
sub
push
aas
xchg
adc
inc
gs
pop
push
push
jnp
movs
cdq
shr
push
std
mov
push
call
pop
les
dec
popa
jno
inc
test
sbb
dec
int3
adc
jmp
out
push
pop
mov
je
movs
jle
ins
out
mov
fiadd
movs
and
add
xor
jg
inc
icebp
bound
push
jl
pcmpeqw
cmps
sbb
scas
push
or
pop
push
ds
lock
shl
add
iret
ror
inc
repz
or
dec
push
(bad)
test
xchg
cdq
inc
push
loopne
jne
ficom
jbe
mov
adc
in
add
xor
sub
pop
inc
cdq
mov
(bad)
jle
ret
jmp
ficomp
mov
xchg
test
add
das
xor
outs
das
in
shl
out
leave
mov
int3
adc
fucom
push
jno
mov
cmp
jge
sbb
lods
in
stos
jno
or
mov
cmp
inc
mov
inc
ins
cmp
imul
adc
mov
sub
(bad)
dec
cmp
mov
jecxz
dec
(bad)
fcomp
sti
sub
and
fisubr
call
push
mov
cmc
sbb
ret
retf
jle
or
xchg
pop
clc
xlat
ror
lods
icebp
aas
cmp
mov
loope
xchg
jnp
inc
sub
leave
sahf
xlat
inc
(bad)
add
pop
sahf
(bad)
adc
inc
rcr
add
das
cmp
es
adc
and
mov
es
and
mov
imul
lds
aad
iret
pop
cmps
jge
clc
mov
xlat
jg
das
xchg
nop
jnp
xchg
mov
test
inc
aad
mov
mov
mov
mov
pop
movs
xchg
add
movs
fisttp
dec
adc
shr
stc
pushf
inc
jb
aas
mov
adc
mov
iret
dec
dec
leave
adc
sub
outs
cli
lock
(bad)
sbb
js
jg
out
loope
loop
push
mov
cmps
mov
jmp
xor
adc
jbe
mov
out
aaa
les
and
ss
push
les
pandn
push
mov
jmp
sub
int3
ds
cmp
jg
push
cld
or
cs
fild
shl
mov
add
xor
xchg
iret
repz
ds
mov
lods
mov
sub
mov
jb
test
push
jle
pop
sub
jno
ret
dec
pop
adc
ss
jl
test
mov
shl
dec
mov
cmp
retf
dec
dec
sbb
je
jmp
sbb
stos
push
push
mov
cdq
(bad)
dec
js
ret
xor
and
and
sub
test
push
mov
jmp
enter
xchg
ja
pop
adc
scas
xor
jl
fsubr
lea
cmps
jmp
mov
je
add
mov
xor
call
inc
jns
and
mov
movs
push
cli
jmp
jbe
push
add
dec
icebp
push
test
cmp
inc
push
mov
or
ins
and
and
pop
inc
or
pushf
aad
pop
(bad)
js
push
adc
xor
cmp
(bad)
loopne
inc
xchg
repnz
mov
mov
xchg
fcom
sbb
aam
fdiv
ror
jno
jbe
mov
ror
jo
pushf
push
les
loope
clc
jb
sahf
and
sbb
into
sbb
lods
les
sbb
pop
ja
mov
mov
pop
les
scas
xchg
loop
cdq
push
add
mov
ds
loopne
fwait
push
jp
fisubr
ss
push
out
cld
stos
push
cmp
push
adc
push
aad
jmp
leave
sbb
mov
cwde
add
or
(bad)
movs
mov
mov
dec
popf
imul
sub
cmp
std
arpl
cmp
sub
inc
jb
(bad)
sub
pop
stos
adc
in
inc
and
stos
mov
clc
into
adc
push
jns
add
aam
xchg
mov
or
xor
push
or
nop
or
(bad)
or
(bad)
xlat
or
pop
inc
ret
and
add
and
ss
ins
dec
sbb
mov
std
retf
mov
mov
sub
shl
aas
fcomip
mov
xchg
xchg
fsub
push
cli
fwait
mov
and
mov
mov
cwde
mov
mov
pop
mov
xchg
sub
pop
imul
sar
jmp
pop
sub
cmp
push
push
(bad)
(bad)
fucomip
(bad)
jne
fmul
add
mov
pop
jecxz
jecxz
leave
xchg
sub
xchg
retf
and
mov
inc
mov
stos
jmp
or
cmps
jp
xor
inc
push
sub
fs
fstp
(bad)
js
(bad)
push
pop
pop
div
adc
rol
je
jmp
(bad)
jmp
lock
retf
push
retf
adc
gs
adc
pop
mov
lds
pop
sub
cmp
nop
push
in
ror
inc
retfw
test
and
lods
scas
add
or
(bad)
in
push
icebp
mov
fwait
and
not
and
mov
sbb
add
clc
mov
gs
(bad)
pop
rcr
pop
mov
fs
fst
dec
pop
clc
sar
sub
jo
xlat
inc
mov
shr
sbb
mov
(bad)
fsubr
leave
push
loopne
jecxz
outs
ins
call
adc
mov
test
and
scas
sbb
int
fcmovnbe
movs
(bad)
adc
stos
jo
jbe
ror
add
cld
sub
dec
cld
mov
popf
jecxz
test
stos
call
jo
outs
sar
out
int
mov
scas
cli
stos
outs
inc
cs
pop
icebp
(bad)
out
push
call
fwait
icebp
mov
ret
shl
cmp
int
sbb
icebp
fmul
unpcklps
push
inc
jae
mov
enter
jp
fs
dec
adc
adc
xchg
xchg
pop
pop
mov
nop
les
xchg
xchg
test
inc
mov
ret
rol
mov
inc
lods
mov
rcl
mov
hlt
mul
mov
push
ret
cmp
fwait
dec
gs
aad
sbb
cdq
push
xchg
cwde
test
aad
ret
loop
test
(bad)
cmp
or
and
mov
dec
mov
div
mov
inc
retf
loopne
inc
sbb
fist
mov
std
push
call
sbb
adc
lods
lea
pop
(bad)
push
mov
xor
cmp
sbb
cmps
mov
cdq
mov
add
jb
test
jl
scas
(bad)
and
out
dec
cmps
cwde
loope
out
jb
ret
mov
mov
mov
leave
mov
shl
mov
cmp
fld
mov
ds
and
adc
addr16
pop
and
popa
int
sbb
je
xchg
mov
sbb
inc
pop
push
adc
sbb
imul
adc
mov
mov
rol
jno
sub
and
xchg
pop
std
lds
dec
mov
push
lods
(bad)
lods
out
cs
es
xchg
xchg
or
pop
mov
repnz
cdq
and
in
mov
sbb
or
mov
(bad)
mov
movs
addr16
push
sub
jg
(bad)
mov
xor
out
pop
stos
push
sub
or
inc
sbb
popa
mov
jbe
(bad)
mov
repz
ror
out
add
call
out
scas
ret
inc
inc
cdq
jge
fistp
outs
xchg
cmc
inc
(bad)
mov
faddp
nop
add
ins
aas
lods
cmp
inc
jbe
xchg
(bad)
call
push
jnp
push
xor
cmp
pushf
pop
mov
jmp
pop
mov
(bad)
jp
jbe
outs
push
in
rcl
mov
push
xor
push
lods
sahf
mov
data16
fcmovnu
xchg
jb
daa
mov
mov
sub
test
push
daa
inc
cld
mov
ins
imul
jmp
stc
jns
add
loop
call
nop
xchg
aam
and
cmps
std
lods
stos
ja
in
adc
xchg
add
jo
xchg
loop
jecxz
sub
adc
sbb
mul
clc
add
mov
js
je
out
fisub
cwde
jo
cs
ffreep
inc
push
add
inc
std
shr
mov
cmp
faddp
xlat
aad
mov
xchg
jge
dec
xor
movs
in
das
and
mov
xor
dec
mov
fldl2e
fist
jmp
ins
stos
in
mov
or
inc
dec
sahf
stos
push
mov
mov
sahf
xchg
test
mov
scas
xor
or
sbb
push
bound
pop
jb
aaa
fldcw
jo
xor
xchg
jb
test
bound
sub
or
xchg
add
dec
sbb
test
rcl
fsubr
popa
add
sub
jle
cwde
sub
icebp
jae
mov
lea
movs
jle
xlat
pop
in
mov
dec
scas
adc
inc
xchg
cmp
mov
add
jns
ficomp
cmp
jb
(bad)
loope
enter
inc
mov
sahf
scas
push
push
outs
and
ss
clc
push
out
sahf
jno
aaa
test
movs
rcl
mov
push
add
in
fwait
pop
ins
sub
cmp
mov
ret
and
push
or
dec
in
movs
push
retf
(bad)
fisttp
fst
arpl
add
xlat
add
sub
xchg
push
inc
out
std
pusha
movs
leave
nop
mov
outs
call
inc
push
shl
test
xchg
push
loope
mov
loopne
dec
loop
pop
xchg
leave
rol
nop
mov
xchg
imul
stc
jecxz
js
les
pushf
jnp
push
(bad)
test
mov
push
sub
jmp
cmp
lock
shl
mov
stos
add
div
movs
sub
cmp
xchg
cli
mov
jns
sahf
scas
imul
ret
in
movs
and
sub
movs
cli
lock
xor
popa
and
pop
aaa
sbb
mov
cmp
iret
xor
push
add
out
sbb
out
cmp
outs
sub
shl
and
std
adc
popf
cmp
push
repz
and
aaa
in
mov
loope
mov
inc
pop
adc
test
dec
dec
sar
imul
daa
mov
daa
out
imul
dec
inc
xchg
call
jge
and
and
push
shl
(bad)
sub
dec
or
jb
sti
scas
add
add
je
jnp
movs
mov
enter
inc
cli
(bad)
leave
push
(bad)
or
sar
add
add
das
adc
jo
push
jb
cld
xor
add
xchg
sbb
lds
scas
aad
mov
and
push
outs
cdq
ja
fwait
mov
out
xor
mov
adc
arpl
and
add
or
push
arpl
push
fcom
cmp
stos
mul
jne
clc
neg
sbb
rcr
add
jp
inc
nop
(bad)
in
cmc
xchg
std
out
mov
pop
pop
out
pop
sub
jle
pop
xlat
adc
add
add
add
ins
pusha
adc
imul
xchg
inc
ss
test
push
stc
out
scas
pop
sub
dec
(bad)
lea
xor
or
adc
std
cli
push
lea
icebp
mov
mov
fcmovu
js
inc
idiv
push
mov
inc
(bad)
out
cmps
iret
(bad)
daa
mov
cmp
or
push
push
gs
cmp
dec
xor
cli
ror
push
cdq
test
sub
inc
mov
pop
mov
ja
fdiv
xor
mov
cwde
inc
jecxz
popa
mov
jb
fnstsw
test
call
ja
xor
in
ficom
or
call
cmp
push
xor
xchg
adc
movs
add
icebp
mov
inc
and
jl
push
in
neg
test
cmps
ss
retf
stos
sbb
daa
sbb
outs
jp
jl
pushf
movs
fiadd
jb
cld
mov
(bad)
cmp
or
xor
std
stos
xchg
push
mov
and
pop
fbld
pop
push
mov
ss
dec
int
xlat
add
pop
out
aam
push
leave
inc
jle
jmp
and
out
popa
jbe
lahf
(bad)
ds
or
inc
frstor
mov
repnz
xor
mov
aaa
popa
pop
cmp
cmp
leave
into
pop
sbb
in
pop
jae
push
mov
jae
test
jmp
pushf
and
aam
(bad)
xlat
adc
cmp
inc
xchg
repz
xchg
jnp
or
xor
add
rcr
mov
ficomp
xchg
fld
fmul
popa
ins
bound
mov
test
cmc
(bad)
jne
(bad)
dec
sbb
arpl
out
or
in
mov
jge
out
push
mov
cld
in
adc
out
ror
jecxz
or
test
mov
scas
lds
cmp
sub
mov
inc
stos
in
pusha
push
repnz
mov
xor
sbb
sar
mov
sar
movs
fst
adc
inc
xor
pop
pop
stc
cmp
jmp
test
jae
adc
and
and
sub
movs
test
pop
imul
int
or
sti
pop
enter
out
ins
or
jg
scas
stos
fild
inc
cs
inc
mov
xchg
daa
inc
clc
xchg
jns
xchg
out
call
pop
pmullw
(bad)
jb
shr
into
inc
ficom
loop
mov
xor
(bad)
lods
jmp
int3
fcom
mov
cmp
xchg
jnp
pop
arpl
es
or
mov
pop
mov
shl
jle
pop
jmp
sbb
adc
mov
loopne
push
cmp
dec
dec
mov
aaa
mov
idiv
mov
or
int3
and
loopne
sbb
push
inc
aam
adc
(bad)
xchg
push
mov
movs
(bad)
mov
dec
icebp
(bad)
mov
jmp
js
add
push
xchg
push
sub
or
add
dec
pop
pop
lods
jg
js
data16
(bad)
dec
xlat
xchg
pop
pop
cmp
inc
sub
sub
jmp
pop
cmc
xor
mov
cmp
mov
repnz
pop
dec
lahf
jmp
popa
jmp
push
inc
mov
push
fdivr
mov
fsub
outs
lock
sub
cwde
adc
sbb
imul
mov
fild
leave
shl
push
icebp
pop
sbb
pop
test
cmps
dec
jp
lods
or
in
test
xor
ins
cmp
lea
aam
ins
inc
sub
hlt
xor
fwait
mov
mov
push
iret
shr
addr16
sti
imul
push
in
mov
je
iret
mov
and
fistp
fild
mov
int3
cmp
les
sub
dec
clc
ds
cmp
icebp
ins
mov
push
pusha
outs
xchg
popa
call
les
loope
mov
add
test
inc
cmp
push
xchg
sar
shr
repz
pop
seta
scas
cmps
je
or
cmps
jb
outs
ja
push
jnp
int3
mov
mov
lea
pop
fs
(bad)
jno
push
cld
(bad)
mov
inc
or
test
test
lds
aad
int
dec
dec
cmp
push
or
test
iret
sub
repz
ins
shl
scas
mov
aam
xchg
jmp
adc
jne
loop
jp
fisttp
call
in
inc
jmp
sbb
iret
xchg
sub
dec
ret
ret
or
mov
enter
sar
and
dec
aad
xchg
shl
dec
addr16
xchg
lea
jle
dec
or
sub
cmp
imul
mov
fadd
push
mov
outs
add
jmp
pop
sbb
inc
or
adc
pop
mov
push
add
mov
lock
mov
call
sub
(bad)
mov
(bad)
xchg
adc
sbb
(bad)
adc
ins
js
add
or
xchg
iret
push
mov
in
cmp
mov
mov
pushf
das
xchg
(bad)
out
or
or
dec
lock
mov
stc
adc
pop
dec
mov
call
xchg
pop
mov
ror
mov
xor
or
jmp
lock
mov
pusha
cmps
mov
fsub
mov
sbb
fcomp
imul
out
inc
aam
push
in
sub
pop
or
and
mov
call
iret
xor
out
mov
call
ins
dec
sahf
shrd
pop
sbb
bound
jg
mov
ret
push
xor
mov
cmp
das
mov
or
fmul
fwait
in
pop
jp
inc
sub
xor
mov
or
addr16
cs
fcmovnu
jne
jb
dec
ds
add
imul
mov
dec
push
push
jnp
addr16
mov
pop
cdq
cmp
icebp
push
scas
cdq
js
(bad)
mov
dec
sbb
adc
xor
or
xor
mov
jnp
cmovae
jmp
(bad)
inc
sahf
dec
or
xchg
inc
mov
cli
mov
mov
mov
test
sar
in
mov
aas
cmps
inc
(bad)
fsub
sahf
adc
add
nop
(bad)
cmp
cmp
push
(bad)
out
add
cmp
stc
lea
xchg
sbb
xor
scas
out
test
ds
jne
retf
add
aad
cmps
sahf
push
push
xor
dec
xor
sbb
xor
leave
mov
call
mov
cdq
push
dec
or
push
mov
fist
adc
mov
test
jns
inc
lea
dec
mov
mov
enter
addr16
movs
pop
(bad)
std
popf
sub
jb
xchg
xor
mov
jg
inc
ss
pop
cmp
mov
hlt
ins
test
(bad)
bound
mov
cmp
aam
mov
fld
jecxz
dec
ret
sar
jecxz
in
nop
pop
push
mov
sbb
jle
sbb
mov
push
int3
jmp
push
pop
mov
dec
cld
and
xor
jo
mov
sbb
cmp
xchg
lds
push
jge
jae
int3
adc
push
pop
lock
sub
push
push
repz
pop
cld
sbb
pop
cmps
mov
aam
adc
stc
mov
inc
inc
test
mov
dec
outs
sub
es
fst
jbe
repz
push
loop
mov
push
fs
and
cmps
fmul
lahf
into
movs
mov
sbb
(bad)
(bad)
and
jo
push
ja
add
loope
inc
arpl
push
cli
xor
addr16
pop
xor
xchg
scas
inc
dec
sbb
jle
(bad)
es
sub
mov
mov
in
enter
cdq
mov
mov
aam
test
gs
mov
and
jne
sub
dec
xor
inc
test
push
jo
adc
fimul
rcl
aaa
popf
test
ins
out
push
ins
jne
int3
pop
(bad)
mov
xor
adc
dec
loopne
repz
and
cmp
test
mov
pop
lock
mov
es
lahf
mov
test
sbb
push
jmp
cmc
out
cmp
push
iret
(bad)
cli
sbb
jb
outs
lds
mov
scas
lods
lahf
stos
push
or
scas
sbb
dec
loopne
cmp
test
stc
cmp
fnstcw
xchg
call
or
mov
inc
mov
dec
sti
mov
aad
fwait
push
fld
or
and
adc
retf
ss
pop
jmp
(bad)
in
daa
add
add
xor
jge
sar
pop
pop
xchg
push
lahf
dec
mov
imul
push
icebp
xchg
mov
lahf
(bad)
(bad)
cld
inc
pop
sub
call
and
pop
ret
aad
mov
cld
add
adc
sub
and
(bad)
bound
jb
inc
dec
pop
loope
mov
imul
sbb
ds
(bad)
aaa
rcr
mov
sbb
inc
mov
push
xlat
cs
fnstenv
jb
xchg
push
(bad)
push
jb
xor
push
sub
mov
or
cwde
mov
xor
push
or
pop
xlat
call
or
fdiv
pop
mov
in
sub
mov
test
adc
cmc
push
test
sub
jl
cwde
cmp
jp
push
or
xchg
cmp
jmp
ds
fimul
xor
xor
or
imul
lods
add
jo
adc
call
scas
cmp
xchg
mov
repz
out
retf
sub
dec
adc
cli
std
push
add
iret
fadd
pop
fild
sbb
dec
add
(bad)
fidivr
sbb
mov
je
ret
sub
push
cli
popf
call
mov
std
loope
sbb
adc
ja
pop
jp
or
mov
enter
arpl
xor
adc
push
jp
data16
das
(bad)
xchg
repnz
adc
nop
push
icebp
outs
sub
push
and
push
mov
push
or
out
mov
mov
test
add
(bad)
outs
aam
fs
jmp
jb
movs
test
out
sahf
mov
imul
jmp
push
add
fld
ret
test
or
inc
sbb
push
into
and
mov
mov
clc
cmps
pop
cmp
in
pop
pop
push
dec
call
jge
mov
add
fst
daa
test
jbe
int3
or
(bad)
cwde
enter
fidivr
es
pushf
mov
pop
sub
sub
or
adc
dec
inc
fistp
popa
xchg
dec
out
sbb
jg
aaa
xlat
mov
imul
push
mov
adc
dec
adc
ins
call
inc
xchg
mov
loope
stos
daa
push
pusha
aad
or
pop
out
test
aam
inc
inc
mov
sti
sbb
scas
jl
clc
xchg
lods
out
(bad)
fucom
dec
sbb
jnp
pop
sbb
push
mov
mov
scas
cdq
adc
mov
ins
pop
and
stos
pushf
out
push
ss
or
xchg
(bad)
mov
mov
outs
pop
dec
push
cdq
adc
and
sub
inc
or
mov
sbb
jnp
ds
jb
out
sbb
mov
jns
xchg
xor
mov
xchg
add
clc
xor
call
(bad)
jmp
jmp
cmp
enter
sub
and
or
mov
add
dec
sub
jno
(bad)
int
ret
mov
test
mov
adc
mov
sbb
dec
push
and
xchg
(bad)
mov
dec
mov
in
mov
mov
or
fcmovnbe
cli
sahf
repz
cmp
adc
dec
dec
outs
pop
or
mov
or
push
nop
enter
add
mov
ja
sbb
icebp
call
push
add
out
mov
cmp
dec
sbb
(bad)
dec
fistp
jne
pop
icebp
inc
sti
inc
mov
arpl
xor
neg
jp
push
sbb
pop
sub
test
cmp
loopne
mov
or
xchg
lock
cmp
outs
std
int
outs
ds
in
xchg
imul
test
and
sub
popa
dec
xchg
fsubr
retf
sbb
das
lock
fs
pop
mov
cmc
mov
in
or
std
lahf
ret
scas
repz
push
fnsave
inc
xchg
test
call
retf
test
(bad)
inc
stos
add
mov
and
cmps
popf
in
pushf
dec
loopne
mov
ins
inc
mov
frstor
mov
jns
xlat
fs
(bad)
movs
mov
mov
xor
mov
mov
inc
mov
in
pmulhuw
inc
pop
scas
cwde
rol
dec
dec
sbb
cmp
inc
xor
dec
fsubp
mov
(bad)
in
shl
mov
sti
aam
lock
push
inc
push
push
hlt
xor
adc
mov
aad
call
cs
cmp
sub
aam
jbe
xor
inc
pop
adc
in
in
jl
std
cmp
es
gs
pop
xchg
rcr
cmps
cmps
jp
out
push
and
jns
push
mov
into
arpl
xor
fdivr
jp
mov
sbb
mov
xor
sub
lods
ret
jp
xor
sub
add
movs
pop
jbe
push
out
push
pop
mov
mov
retf
lahf
into
xchg
mov
push
or
pop
ja
sbb
adc
mov
adc
cdq
mov
lea
xor
mov
ins
cs
cmp
cwde
jo
leave
jl
shl
retf
mov
adc
mov
loop
rcl
or
sahf
push
sti
in
lock
push
inc
popf
sub
inc
scas
push
cmps
ret
or
aam
push
sbb
int3
dec
shl
xchg
dec
xor
jae
cmp
adc
inc
fwait
(bad)
jnp
adc
add
xchg
(bad)
sub
inc
mov
cmps
adc
push
mov
(bad)
xchg
xor
jae
leave
dec
inc
mov
push
dec
and
sbb
ret
adc
cmp
das
sub
jp
and
scas
cli
xchg
push
mov
sub
mov
pop
and
out
call
lods
int3
std
and
pusha
and
sub
jo
xchg
and
hlt
sub
xor
call
mov
js
pop
adc
movs
add
mov
ss
push
out
sar
mov
test
jno
cmp
push
and
add
sahf
js
aad
xchg
sti
add
addr16
lods
pop
addr16
push
inc
xor
cmp
out
jecxz
jle
push
fisubr
inc
mov
jge
xor
in
retf
popf
dec
sbb
jbe
movs
mov
pop
ins
ss
cld
mov
neg
dec
outs
and
imul
adc
stc
push
sar
pop
ror
vmovntpd
out
xor
pop
outs
jne
gs
jmp
shl
xor
shl
in
and
je
fdivrp
or
add
or
test
sub
dec
adc
aam
sahf
sub
pop
mov
les
push
inc
cmps
jb
mov
and
jmp
jmp
inc
push
fldcw
loop
imul
scas
aam
int
fwait
leave
cli
loop
pop
loope
daa
mov
cmp
add
shl
fmul
mov
test
cdq
xchg
or
stos
add
inc
(bad)
ror
jl
jbe
mov
aad
sub
mov
sub
push
movs
fisub
sub
repnz
xchg
push
arpl
jle
cs
movs
or
cmp
or
mov
cdq
stos
add
hlt
xor
(bad)
push
not
lahf
mov
jne
arpl
add
jp
mov
sub
mov
aaa
int3
outs
cmp
jecxz
and
addr16
mov
cmp
or
out
or
jbe
mov
iret
pop
mov
mov
or
mov
or
dec
cmp
(bad)
sbb
xor
idiv
out
jno
mov
fst
or
dec
inc
mov
mov
sub
inc
fnstenv
xor
popf
out
mov
jne
ret
outs
(bad)
mov
movntq
in
mov
test
sub
cmps
out
jne
xchg
(bad)
lock
jo
dec
jmp
outs
jecxz
into
arpl
loope
stos
cmp
add
(bad)
jbe
push
or
or
cmp
nop
fxch
push
cmps
addr16
test
rol
int3
sbb
pop
and
scas
push
push
fucomp
sbb
xchg
cmp
adc
cwde
cmp
inc
bound
push
xor
fld
cmps
sbb
(bad)
repnz
mov
inc
xor
ret
xchg
mov
ret
cmp
fwait
repz
and
(bad)
test
mov
call
call
mov
adc
jae
or
lods
cmp
adc
sahf
push
call
jecxz
sbb
or
ja
es
push
mov
xor
xor
or
or
xchg
adc
inc
add
js
jge
cs
add
imul
mov
pop
nop
add
xchg
mov
inc
cmp
jp
mov
ins
retf
push
enter
retf
cmp
stc
outs
mov
pop
ins
sub
jne
scas
add
test
dec
adc
in
ins
mov
cmp
pop
jg
push
inc
sub
mov
icebp
mov
sub
xchg
sbb
sub
lods
and
cmp
mov
add
mov
mov
daa
sbb
jmp
pop
into
xor
and
sahf
adc
out
push
mul
dec
out
mov
inc
mov
js
in
fwait
stos
ins
fst
and
fist
push
jmp
dec
(bad)
push
iret
dec
jbe
int
scas
hlt
and
icebp
xchg
leave
mov
fisttp
sbb
push
sbb
test
outs
hlt
popa
sub
adc
fs
adc
lock
(bad)
repnz
jns
popa
mov
test
xor
in
pop
sbb
xchg
inc
and
loopne
sbb
inc
out
xchg
out
xchg
out
inc
mov
aad
jle
xor
lods
in
cmp
mov
pshufw
fdiv
cmp
and
repnz
mov
dec
retf
inc
(bad)
lahf
sti
mov
retf
adc
inc
jle
das
enter
pop
lods
iret
jne
lods
mov
pop
cmp
aam
jg
inc
sub
xchg
jecxz
movs
int3
retf
cmc
mov
mul
fwait
rcl
sub
lock
leave
jne
add
cmps
(bad)
mov
jne
push
dec
xchg
inc
mov
mov
scas
mov
jns
iret
push
xor
div
dec
adc
sbb
push
add
mov
(bad)
push
cmp
lods
inc
imul
xor
and
pop
mov
fmul
jmp
inc
push
push
pop
in
and
ret
shl
ss
mov
dec
clc
fiadd
xchg
int
xor
and
push
push
aam
pushf
mov
arpl
or
mov
or
mov
mov
push
fisttp
jp
mov
or
imul
sti
jmp
scas
lahf
push
enter
push
pushf
retf
or
jl
scas
add
and
xchg
je
mov
mov
sbb
popa
daa
out
cmp
ret
cmps
popf
mov
es
pop
jmp
pushf
clc
pop
clc
movs
xor
inc
inc
ds
xchg
sub
inc
push
(bad)
push
mov
mov
xlat
call
inc
add
push
shr
in
xchg
mov
xor
mov
scas
enter
fsubr
xor
fs
repnz
or
fcmovb
dec
jbe
pop
sbb
sbb
push
out
(bad)
xor
ror
cmp
pop
rcr
mov
add
pop
dec
sub
inc
stos
call
in
lods
xchg
mov
pop
imul
fstp
shl
mov
scas
inc
pushf
push
aam
out
xchg
jmp
(bad)
les
popf
repnz
test
xor
cmps
rcl
lods
data16
ret
dec
jl
mov
dec
dec
dec
mov
fiadd
mov
jnp
fisttp
mov
sbb
test
mov
jecxz
adc
mov
fsubr
scas
cmp
fwait
ror
xchg
mov
daa
xor
adc
stos
in
inc
nop
adc
xor
in
ficom
data16
inc
push
loop
xor
std
push
sub
jmp
mov
mov
jge
sbb
and
add
push
pop
call
pushf
out
clc
and
or
daa
aam
inc
mov
dec
loop
push
or
push
stos
push
in
mov
or
pop
out
or
add
xor
sub
sub
xor
retf
push
xlat
movups
mul
or
push
fwait
sub
jg
sahf
inc
lods
cmp
dec
mov
bound
mov
repnz
pop
adc
fimul
fs
dec
std
xchg
mov
lahf
pop
out
push
call
push
(bad)
sbb
jne
adc
call
das
(bad)
and
das
daa
popa
idiv
xor
xchg
xchg
jecxz
sub
popf
and
mov
mov
jmp
xor
adc
popf
pop
mov
push
cmp
(bad)
das
or
clc
test
out
dec
or
jns
mov
sbb
xchg
dec
gs
mov
movs
xchg
sbb
fsub
je
into
pusha
xchg
mov
xchg
jb
sar
and
popa
push
sub
pop
lahf
fnop
xchg
out
aas
sbb
packsswb
cmp
scas
in
clc
add
xor
scas
xchg
or
sbb
fisub
cmp
add
int
add
dec
int3
jp
outs
pop
sbb
xchg
jmp
and
jno
or
pop
lea
push
mov
aas
test
push
es
dec
bound
imul
cmc
push
movs
add
or
xor
stc
sub
int
sti
sahf
pop
mov
add
out
or
mov
and
jb
sub
in
imul
inc
pop
pop
test
mov
adc
sti
enter
cmp
and
movs
into
fild
js
mov
xchg
mov
xchg
scas
dec
jne
and
mov
(bad)
hlt
pop
xchg
jno
add
dec
or
cmp
(bad)
ds
rcl
call
sub
gs
push
cli
push
cmp
outs
dec
xor
pop
inc
aam
call
stos
stos
push
std
js
or
or
pop
sbb
push
adc
mov
repz
sbb
ds
inc
fiadd
sbb
(bad)
add
arpl
mov
pop
std
cmc
cmps
shr
xor
ins
xchg
cmp
mov
push
hlt
call
cmp
in
mov
icebp
test
jle
in
cmp
rcl
mov
mov
or
in
aaa
mov
jg
sub
lock
xor
(bad)
jo
movs
sub
rcr
sti
inc
gs
cmp
xchg
push
cmp
adc
jmp
or
out
and
xor
out
add
xlat
xchg
sbb
mov
add
fldenv
sar
or
inc
or
mov
in
dec
sbb
push
cwde
lahf
outs
loope
push
test
cs
in
sbb
mov
int3
call
das
jle
mov
dec
into
lock
lods
jne
imul
jae
popa
cmps
fwait
mov
and
mov
push
in
inc
inc
mov
cmp
push
sahf
aam
das
jne
imul
xor
jns
and
cld
iret
lods
mov
je
cld
sub
inc
inc
push
mov
add
shr
popa
ret
inc
repnz
pushf
sbb
jb
push
jb
ret
pop
fstp
sbb
lahf
adc
iret
xor
sbb
adc
adc
in
pusha
fsubr
xchg
mov
arpl
aas
jns
mov
mov
push
lahf
jne
push
pop
or
into
enter
sbb
out
rcr
mov
clc
xor
cmp
pop
sbb
call
fisttp
adc
push
(bad)
sbb
lea
mov
xchg
mov
rol
(bad)
push
mov
or
or
jae
mov
leave
ret
sbb
fs
sub
mov
sub
dec
aas
retf
jl
inc
adc
mov
jecxz
and
pushf
sub
xchg
imul
sar
dec
sbb
test
out
cmps
inc
div
sbb
addr16
sbb
sub
mov
ror
outs
lds
in
sahf
ret
or
sbb
cmps
dec
outs
lods
aam
add
and
or
je
movs
push
mov
daa
into
jb
xor
mov
ja
scas
pop
int3
enter
out
or
fwait
mov
stos
cmp
or
and
jp
call
pusha
popf
pusha
hlt
pop
movs
jnp
xchg
cmp
pop
fs
jns
call
(bad)
sub
mov
or
pop
pop
jge
jl
push
pop
dec
pop
jecxz
sub
mov
cwde
enter
sbb
cmc
out
cld
fistp
pop
pop
or
cmp
cwde
xor
rol
push
ror
xchg
test
fcom
(bad)
push
xor
inc
inc
cwde
scas
retf
mov
bound
popa
mov
push
imul
fs
and
or
test
call
adc
int3
xor
adc
push
aas
xchg
jmp
sub
addr16
fisttp
fstp
cdq
rcr
mov
push
jb
lock
loop
leave
fisttp
jb
xchg
hlt
fsub
shl
fnsave
adc
sahf
xchg
jno
in
aad
pop
cld
inc
loopne
aas
das
push
or
int3
add
mov
outs
jge
pop
inc
cli
lods
xor
test
mov
mov
hlt
ins
ficomp
loop
lods
xchg
ret
dec
out
loop
test
jp
test
add
inc
iret
mov
ss
retf
ins
mov
add
mov
std
adc
and
jecxz
ja
push
xor
mov
sahf
int3
sub
fidiv
mov
int
mov
jne
shl
and
mov
xor
xchg
xchg
wrmsr
scas
pop
xor
fsubr
xor
sbb
cli
mov
adc
push
sub
mov
adc
and
dec
sub
repnz
dec
jns
dec
fnstsw
fild
jp
mov
lods
mov
int
xchg
xchg
xchg
mov
jge
(bad)
and
hlt
imul
in
int3
jnp
mov
mov
push
xchg
or
mov
ja
aaa
into
jae
sbb
ret
ret
sbb
mov
mov
jp
dec
sub
jnp
shr
mov
idiv
cwde
test
fistp
dec
aad
or
outs
add
dec
mov
fwait
adc
in
push
pop
lods
lods
ds
mov
and
mov
jle
xor
and
repnz
mov
leave
add
jns
pop
lock
(bad)
retf
push
or
pop
movs
push
xor
popf
aas
push
xor
dec
inc
jp
mov
push
xchg
mov
and
xchg
loopne
in
cdq
add
and
push
push
stos
ins
pop
cmc
mov
jns
dec
in
mov
mov
sub
es
jae
retf
test
mov
xchg
pop
das
xchg
sub
cmp
arpl
push
jge
dec
adc
ficom
retf
or
jno
or
(bad)
cmps
inc
sub
sub
xor
cmp
xor
add
ficom
push
jne
dec
loop
pop
pusha
nop
sbb
gs
pusha
test
out
fild
shl
dec
cmp
in
xchg
sub
lods
sbb
fisubr
xchg
cmp
or
push
repnz
adc
push
ret
popa
adc
int
push
movs
jp
inc
inc
sub
fldcw
(bad)
inc
push
or
pop
and
cdq
imul
aam
mov
bound
adc
or
mov
jmp
inc
sub
xchg
sbb
fisub
mov
fcomp
loop
mov
stos
xchg
bound
fiadd
dec
or
fldcw
jnp
in
cld
jmp
or
fwait
shl
add
cmp
es
add
js
mov
ret
repz
rcl
or
mov
xchg
std
movs
out
neg
call
mov
test
fsubr
mov
popf
mul
inc
in
cdq
add
cmp
frstor
mov
inc
aas
mov
mov
sub
and
pop
adc
mov
test
arpl
shr
nop
pop
std
and
sub
mov
adc
test
push
sub
nop
mov
in
test
lahf
in
loop
shr
or
ja
cwde
xchg
out
mov
in
ret
aam
popa
data16
jp
xor
std
mov
mov
pop
fnsave
cmp
les
aas
pop
push
inc
jns
fsubrp
mov
pop
and
cmp
les
inc
pop
test
pusha
scas
(bad)
cmp
stos
inc
(bad)
maskmovq
test
stc
test
pop
xchg
ret
fs
dec
jmp
leave
fst
push
scas
push
pop
or
xchg
pop
cmp
leave
xor
sbb
test
xchg
enter
leave
xchg
pop
jle
pop
mov
aad
in
out
lods
(bad)
xlat
sbb
ins
ret
ficom
push
mov
dec
and
fsubr
adc
in
lds
(bad)
leave
inc
mov
inc
jbe
cmps
sti
push
pop
cmp
repnz
(bad)
cmp
xor
inc
adc
add
push
pusha
cmps
inc
jb
or
repz
jmp
sti
or
movups
xor
mov
fsub
data16
lahf
cmp
push
push
rcr
adc
daa
(bad)
imul
mov
pusha
xchg
pop
je
repz
aaa
(bad)
push
lock
rcr
or
sbb
shl
loopne
or
mov
cmp
jecxz
nop
and
jmp
icebp
repz
jns
ss
and
sub
jno
loop
nop
ror
xchg
cmp
fild
test
push
cmp
stos
pop
popa
loop
loopne
gs
int3
adc
and
pop
sbb
mov
dec
jno
xchg
scas
push
pusha
outs
ins
inc
arpl
test
push
dec
sub
xchg
pop
ret
xor
adc
push
fwait
cmp
int3
pop
mov
(bad)
push
push
push
jmp
pop
pop
dec
leave
inc
jmp
cdq
out
dec
pop
(bad)
xchg
cmps
mov
pop
jp
lahf
mov
adc
or
scas
aas
iret
xor
add
call
pop
add
jb
add
mov
add
push
popa
sub
sbb
mov
into
sub
adc
sti
ins
cld
fwait
dec
or
je
cmp
into
mov
pop
sbb
dec
mov
outs
mov
outs
mov
mov
outs
pop
mov
gs
cmps
test
or
sbb
loop
call
push
dec
rcl
(bad)
xlat
jae
popf
inc
xchg
bound
mov
cmp
pop
ds
fnstcw
lea
jbe
repz
add
xchg
add
sub
xor
or
and
enter
mov
repz
pop
add
pop
lahf
lods
cdq
out
push
sbb
inc
dec
jmp
fmul
and
fmul
pop
shr
and
out
popf
aad
mov
adc
mul
sub
out
cmp
shl
push
cmps
mov
leave
xor
xchg
ins
rol
cs
icebp
clc
stc
push
adc
repnz
cmps
xor
mov
mov
sti
push
addr16
pop
xor
jae
ins
lea
(bad)
movs
adc
jle
aam
xlat
mov
add
mov
dec
dec
(bad)
or
mov
jns
aam
rol
sbb
daa
dec
imul
mov
(bad)
outs
bound
ficom
xchg
sub
mov
cmps
and
movs
push
xchg
cmp
les
cmp
xchg
shl
das
dec
cmp
pop
ret
movs
mov
icebp
push
push
stos
inc
add
(bad)
cli
ss
sbb
dec
ret
push
jge
push
dec
sahf
xchg
push
lods
pop
xor
jne
rol
call
out
cmp
and
rol
scas
imul
sub
retf
je
bound
fsubr
ds
into
sbb
out
call
xchg
xchg
or
aad
aad
pop
fnsave
and
mov
fcom
iret
cwde
retf
pop
jmp
xor
mov
add
xchg
(bad)
ins
ror
fstp
imul
movs
dec
cmps
add
lds
enter
jbe
ins
xchg
fdivr
outs
call
adc
outs
in
jae
aad
mov
push
push
ret
hlt
mov
pop
jnp
cdq
idiv
jnp
addr16
mov
push
lock
test
mov
dec
sub
sub
and
fild
inc
jge
mov
cdq
xor
jno
arpl
retf
inc
sahf
pop
or
jmp
test
pop
loopne
in
and
mov
sbb
and
rcl
std
in
loope
repz
cmps
cmp
adc
cmc
xor
xor
mov
mov
out
aaa
xchg
out
popf
adc
pop
sbb
sub
outs
pop
scas
adc
pushf
fbstp
and
xchg
push
outs
pop
lods
pop
inc
push
sti
(bad)
fsub
adc
pop
mov
dec
cs
dec
sahf
cdq
sahf
aad
mov
aad
sbb
popa
pop
pop
cmp
les
outs
loope
xchg
xor
and
push
or
jno
and
enter
iret
lods
xchg
jno
adc
add
xchg
xchg
mov
push
adc
sbb
pop
test
adc
and
sub
gs
or
mov
dec
je
imul
jl
retf
adc
je
push
scas
jnp
dec
lock
cdq
repnz
je
mov
pop
stos
cwde
sub
movs
push
push
jnp
jmp
adc
(bad)
retf
fwait
jl
mov
popa
stc
sar
inc
and
jle
adc
xor
xchg
push
mov
mov
fnstcw
imul
les
fld
test
push
daa
xchg
jmp
fild
and
mov
cmps
lods
mov
lds
pop
jne
adc
in
cdq
mov
les
sub
pop
and
xchg
sub
sub
ins
pusha
sbb
jl
dec
shr
jl
dec
sbb
mov
jecxz
fnsave
or
push
pop
xchg
sub
movs
mov
inc
or
fidiv
or
mov
loope
arpl
inc
inc
out
cmp
outs
ins
mov
push
xchg
aam
mov
mov
repz
data16
lea
and
mov
mov
cmp
sub
mov
xor
ret
fneni(8087
pop
adc
icebp
mov
(bad)
icebp
in
pop
push
test
push
pop
std
jl
sub
int3
inc
lods
adc
dec
in
fisttp
jecxz
stos
fstp
mov
cmc
jns
or
pop
pop
jnp
or
pop
jne
bswap
loopne
sub
mov
mov
not
clc
stc
retf
dec
scas
mov
pop
fstp
jp
aam
idiv
out
jb
jae
shl
out
mov
push
mov
rcl
adc
sar
sti
leave
imul
popa
lds
jmp
pop
mov
mov
shr
fcomp
lods
and
mov
push
jmp
and
fwait
push
sub
loopne
push
repz
mov
aas
adc
jne
stos
inc
ror
jae
es
pop
dec
in
jmp
fidivr
push
dec
pop
mov
push
ficom
scas
shr
pop
loope
(bad)
pop
data16
pop
mov
push
push
jbe
ins
cmp
dec
dec
add
adc
xchg
push
jg
call
addr16
shl
addr16
mov
popa
mov
sub
sub
dec
scas
and
ins
test
xchg
or
call
lds
into
add
jge
and
inc
daa
cmp
pop
ja
mov
cld
push
leave
int3
lods
ins
mov
xchg
sub
xor
loop
cmps
mov
enter
dec
cmps
push
mov
out
mov
out
in
jmp
push
cs
pop
movs
scas
mov
or
sub
cwde
push
sub
popa
xlat
sbb
add
hlt
add
loope
pop
pushf
ret
inc
leave
add
js
in
lock
lods
(bad)
jg
xchg
hlt
test
mov
add
outs
pop
gs
cmp
sub
fistp
gs
push
adc
or
dec
test
(bad)
jle
loope
stos
or
dec
mov
adc
dec
adc
or
jg
mov
int
mov
ds
cmps
jne
xor
outs
pop
cdq
mov
add
cmp
xor
or
fnsave
(bad)
jecxz
fldcw
inc
mov
(bad)
mov
shr
rcl
push
test
cmp
(bad)
mov
mov
mov
push
test
(bad)
ins
popa
push
jmp
add
retf
repnz
into
jns
push
je
dec
pop
dec
or
mov
xchg
fisttp
or
(bad)
mov
xor
push
hlt
xor
clc
cwde
mov
xchg
ins
xor
xchg
sub
inc
in
pop
or
xchg
cmc
and
pop
push
jmp
cmp
xchg
test
xchg
cdq
pop
jb
pop
fwait
add
or
gs
call
jo
cmp
lds
push
into
idiv
not
xchg
and
jns
mov
aaa
out
push
mov
pop
and
xor
out
mov
loope
jo
rol
into
mov
call
push
outs
jp
add
fist
jg
out
retf
iret
mov
push
jecxz
ins
outs
and
imul
inc
mov
pop
and
movs
stos
or
push
ds
or
test
cmps
xchg
not
out
push
scas
aad
addr16
jne
imul
add
stos
(bad)
and
inc
push
ficomp
clc
(bad)
nop
popf
mov
push
sbb
adc
xor
retf
xchg
pop
in
(bad)
jmp
repnz
aam
xchg
or
fcmovnb
hlt
adc
xchg
jmp
cdq
add
stos
data16
and
clc
or
aaa
std
mov
sbb
jp
hlt
mov
ror
inc
push
add
cmc
sub
in
popa
jbe
fwait
add
or
sub
rol
popf
dec
lds
(bad)
pop
add
fld
das
leave
cmp
push
sbb
pop
inc
add
mov
dec
and
jns
fst
loopne
scas
mov
mov
xchg
popf
call
enter
jp
shr
xchg
mov
rcr
stos
call
lahf
or
add
jle
and
je
xchg
pop
retf
mov
shl
dec
sbb
mov
jae
adc
mov
pop
jne
rol
loop
mov
add
or
stc
lea
xor
lock
sub
cmp
jp
fbstp
push
int
push
ret
mov
jle
push
in
push
pop
vmovddup
daa
pop
inc
lds
cmp
fstp
mov
mov
shl
jmp
mov
jle
mov
add
xor
or
mov
and
inc
sbb
and
inc
dec
call
sub
add
jge
(bad)
fmul
add
lods
fsub
repnz
sbb
jge
sahf
cli
lahf
(bad)
retf
lods
mov
inc
adc
push
loope
and
ret
jg
in
mov
(bad)
outs
push
cmp
test
cmp
and
mov
aas
inc
neg
mov
aaa
dec
push
fild
jno
out
inc
sbb
out
into
ja
je
ins
test
cmp
inc
and
jecxz
out
push
fs
inc
test
or
push
sub
sahf
fild
cmp
mov
call
mov
imul
pop
js
das
cs
mov
mov
mov
jae
or
pop
mov
pop
adc
(bad)
cmc
xchg
mov
xor
out
mov
cmp
imul
stc
pop
cmps
inc
jb
inc
xor
push
leave
dec
hlt
fnstsw
pusha
std
mov
(bad)
mov
ja
dec
fsubp
test
mov
xchg
xor
pop
dec
sub
jne
push
neg
fstp
ret
mov
pop
xchg
aaa
sbb
(bad)
jmp
xor
and
into
mov
xchg
jns
cmp
mov
sbb
call
xor
sub
dec
int
iret
outs
int
dec
xchg
aad
aaa
and
add
js
mov
and
fstp
call
xor
into
pop
lods
jbe
or
mov
movs
sub
iret
mov
cmps
out
(bad)
ja
jmp
je
jmp
lea
cmp
(bad)
sub
rcr
test
and
fs
icebp
nop
and
sbb
sub
dec
and
add
fist
push
aad
inc
inc
push
out
mov
mov
gs
xchg
imul
es
pop
div
fild
cmp
mov
jp
hlt
ds
or
je
push
xor
xchg
pop
xor
dec
enter
pop
mov
xchg
adc
pop
ja
stc
(bad)
clc
ds
dec
or
movs
out
sub
adc
push
mov
inc
cmc
loope
inc
popa
pop
sub
sbb
push
mov
addr16
in
adc
(bad)
cmc
push
ins
push
rol
xchg
out
in
dec
pop
jp
fs
pop
mov
lea
mov
xchg
fdiv
imul
sub
sbb
mov
mov
jecxz
pop
sbb
(bad)
repz
add
fld
ins
mov
(bad)
and
dec
test
jle
pop
int3
mov
fadd
mov
fidivr
imul
adc
pop
jl
push
push
add
sub
sub
and
inc
mov
pop
sbb
jg
int
pop
js
outs
mov
mov
jno
sbb
push
retf
push
mov
scas
mov
scas
cmc
add
sub
add
inc
sub
gs
and
mov
inc
repz
in
mov
push
sub
mov
aas
mov
adc
mov
or
xchg
push
(bad)
or
retf
sub
add
mov
inc
test
inc
jnp
cmp
mov
cmp
mov
fsubr
add
test
in
xor
fiadd
pop
dec
popa
pop
cmp
fild
inc
xchg
ja
push
cs
cmp
movs
push
rdtsc
mov
test
inc
enter
mov
mul
leave
fild
mov
out
pop
push
arpl
inc
mov
cmp
jnp
daa
jp
xchg
xchg
lds
int
out
cs
inc
(bad)
shl
shr
outs
int3
daa
pop
lock
pop
(bad)
push
jmp
mov
push
rcl
dec
sub
add
push
dec
jne
cld
and
repnz
or
cmps
push
jmp
lahf
sar
repz
inc
addr16
push
inc
jle
movs
xchg
pop
(bad)
xchg
icebp
enter
mov
cli
mov
popa
xor
mov
(bad)
cmp
mov
push
(bad)
xor
popf
ds
loop
les
or
hlt
mov
sub
push
in
add
or
mov
je
push
data16
outs
sbb
jge
pushf
sub
pop
fld
ret
arpl
movs
adc
or
pusha
sub
retf
dec
sti
xor
stos
mov
int3
daa
sbb
cmps
pop
retf
add
xchg
les
out
adc
mov
mov
xor
xchg
sar
pop
or
or
ds
xchg
xchg
push
sub
dec
and
sbb
push
(bad)
and
stc
jg
hlt
loope
sbb
pusha
lds
cwde
adc
std
push
cwde
jnp
mov
mov
outs
inc
mov
xor
pop
aad
cs
or
jo
arpl
jo
aas
jge
in
cld
sbb
addr16
(bad)
jo
push
(bad)
push
dec
jae
mov
scas
jg
pop
fnsave
call
dec
adc
popf
ja
les
jbe
bnd
xchg
xor
mov
mov
outs
in
sbb
pop
imul
cmp
sbb
dec
push
sbb
movs
cmp
aad
repz
xor
xchg
idiv
or
and
pop
push
clc
jnp
fld
push
je
xor
xor
pop
or
cmc
lahf
and
pop
shl
add
xchg
cmp
into
xchg
inc
in
jne
mov
mov
imul
mov
ja
xor
je
pop
or
xchg
mov
xchg
inc
push
dec
mov
popa
or
xchg
xor
nop
inc
nop
imul
inc
and
shl
(bad)
out
push
xor
sahf
nop
push
jmp
push
popa
add
mov
add
push
arpl
call
rcr
test
test
adc
and
jo
fist
gs
in
test
out
jbe
push
pop
out
and
icebp
and
sbb
inc
fsubr
lahf
mov
scas
cmc
and
ins
fsin
sub
cmc
call
add
lds
int
or
lahf
add
int3
xchg
std
hlt
add
push
in
push
cmp
dec
js
jge
adc
sbb
in
xchg
bound
inc
repz
mov
out
dec
in
hlt
sar
out
addr16
loopne
aam
cli
jb
cwde
fdivrp
cmc
adc
dec
jnp
and
adc
call
mov
ficomp
mov
fstp
mov
xchg
jle
pop
xchg
mov
jns
push
cmp
clc
nop
popf
inc
adc
mul
lods
out
pop
std
pop
push
lods
test
jne
mov
mov
mov
xor
es
addr16
fwait
inc
xor
add
cld
push
mov
js
mov
or
cmp
dec
adc
adc
mov
cmp
movs
cmp
bound
scas
mov
rcl
in
jns
fsubrp
push
xchg
jmp
jns
or
and
int3
das
push
fst
outs
jmp
retf
lds
sub
xchg
mov
fucomip
(bad)
xor
movzx
mov
pop
sti
repnz
xchg
call
mov
(bad)
out
sbb
idiv
xchg
xchg
and
adc
xchg
pop
xor
pop
mov
add
fwait
jae
xchg
jns
inc
(bad)
adc
shl
or
pop
or
cmp
pop
loope
hlt
fadd
fxch
and
movs
je
pop
test
nop
push
sbb
inc
and
adc
adc
jg
mov
aad
cmps
mov
fprem
cli
std
inc
jmp
jecxz
lahf
sbb
sub
mov
and
fcmove
cdq
call
mov
adc
jp
into
(bad)
xlat
icebp
ret
jo
lahf
add
pop
pop
test
int3
cmp
and
shr
out
sbb
jno
aad
fsub
sti
lock
jmp
(bad)
movs
enter
pop
ror
pop
adc
inc
retf
rcr
out
or
jecxz
test
mov
sub
loop
sbb
pushf
dec
gs
mov
push
and
cmp
pop
adc
adc
mov
nop
push
fs
mov
xchg
pop
in
in
push
ss
gs
pop
cmp
jae
xlat
sbb
popf
sbb
and
fs
xchg
(bad)
shr
push
xchg
xchg
arpl
dec
ret
outs
aam
and
pushf
sar
les
sub
dec
jecxz
sbb
or
enter
adc
(bad)
int3
mov
mov
out
jno
std
sub
fsubr
or
mov
loopne
outs
loopne
mov
test
push
xor
cld
cdq
xchg
and
and
ficom
pop
int3
cmps
ror
out
lahf
push
or
cmp
(bad)
rcl
lock
adc
jmp
stc
cmps
sub
add
and
fist
push
jp
sbb
std
sub
xlat
hlt
xchg
cmps
and
push
jae
fisub
inc
and
fucom
(bad)
mov
aas
fcomp
mov
pop
retf
call
out
xor
inc
xchg
in
ret
aad
jo
xchg
outs
stc
mov
nop
add
popa
and
jl
rcl
call
xchg
inc
pop
mov
(bad)
(bad)
push
call
mov
pushf
lds
sbb
out
jg
imul
and
xor
jno
imul
outs
outs
fsub
dec
rcr
clc
leave
xchg
mov
xchg
sahf
in
ja
shr
xor
(bad)
jmp
jne
pop
sub
inc
push
data16
sti
shl
leave
loop
fcmovne
cmp
popa
add
mov
pop
mov
pop
jmp
adc
push
adc
gs
mov
or
cmc
js
(bad)
fiadd
mov
mov
push
xchg
test
retf
clc
fnsave
cwde
stos
enter
and
pusha
ds
jo
push
aaa
sub
sahf
pop
xor
sti
aad
jl
ror
in
movs
jno
mov
mov
cdq
sbb
repz
pop
imul
xchg
jae
ss
push
and
cmp
xchg
or
lds
jmp
retf
cmp
xor
add
mov
ss
add
fld
fldcw
dec
xchg
ficomp
sub
xchg
push
repnz
js
add
lock
(bad)
bound
xchg
and
imul
jmp
mov
scas
push
mov
sbb
ins
pop
cdq
leave
mov
scas
mov
int
jbe
cmc
in
jnp
test
or
jbe
adc
push
(bad)
mov
stc
lock
popa
(bad)
jnp
jle
cmc
and
int3
mov
dec
(bad)
in
mov
neg
adc
cmp
jnp
fdivr
fimul
or
je
cmp
sbb
repz
pop
mov
sub
gs
outs
dec
jg
imul
(bad)
call
xchg
lods
push
adc
xchg
ss
call
pop
adc
or
(bad)
ds
shl
mov
sbb
std
(bad)
pop
jmp
pop
pusha
pop
inc
int3
jge
imul
inc
popf
xor
cmp
xchg
cdq
cmc
or
iret
sub
mov
adc
retf
retf
fild
sbb
iret
mov
dec
imul
in
outs
push
jae
xchg
shl
cdq
xchg
movs
pusha
test
cmp
xchg
pop
jl
iret
mov
pop
pop
add
adc
mov
or
xchg
in
inc
inc
mov
mov
cmp
sbb
push
mov
inc
fstp
pop
sar
cli
mov
retf
add
test
xchg
dec
loop
shl
js
fs
xchg
xchg
stos
inc
inc
sbb
in
and
test
xchg
and
out
sbb
and
mov
nop
nop
pop
enter
xor
jnp
aas
and
mov
test
lds
in
pand
jl
cmc
shl
add
imul
lea
sar
fcom
sbb
retf
xchg
add
jne
push
fbstp
adc
in
lods
in
jo
mov
or
dec
adc
aam
inc
pusha
fcom
sbb
sti
mov
movs
push
sub
cwde
cdq
pop
retf
cmps
loopne
enter
sub
sub
sub
movs
sbb
fisttp
push
cmc
mov
inc
pop
ret
nop
lahf
lods
imul
pop
clc
fcomp
mov
xchg
and
das
pusha
rcr
ret
adc
cs
cmp
lahf
sbb
jmp
jns
jmp
and
adc
dec
ror
std
adc
test
add
xor
adc
stos
dec
(bad)
dec
push
shl
jns
cmp
xchg
jno
les
jg
loope
leave
mov
cmc
xchg
xor
xchg
add
push
push
jno
and
jno
add
xchg
js
and
fs
gs
ffree
jmp
mov
xchg
mov
mov
(bad)
push
std
lods
int3
sbb
jo
add
(bad)
push
sti
(bad)
popa
jge
push
sub
mov
push
mov
mov
rcl
hlt
mov
cmp
aas
pop
out
mov
cmp
push
xor
ficomp
out
fisubr
lock
cmps
xchg
lahf
movs
xchg
popf
loop
cwde
mov
xchg
push
aas
cdq
cdq
stc
cld
dec
hlt
ja
xchg
mov
sub
add
or
pop
call
and
jo
aaa
adc
in
loopne
pop
cmp
lds
push
ss
(bad)
and
mov
imul
call
sahf
sub
retf
jecxz
push
ins
imul
pop
adc
out
cmp
adc
mov
inc
mov
mov
mov
(bad)
movs
cmp
jge
ss
or
stos
and
sub
cld
add
ret
fmul
or
xchg
pop
test
cmps
cmp
outs
adc
fdivr
shl
popf
push
dec
sub
out
out
je
fldcw
loop
cmp
fldcw
in
sub
stc
xchg
adc
pop
jge
mov
fwait
std
pop
sbb
or
sahf
mov
sub
sub
pop
out
ins
add
test
push
bound
inc
mov
push
fstp
repz
movs
cmps
fisub
mov
cmp
push
mov
cmps
int3
push
push
test
sub
in
fist
inc
inc
jne
mov
mov
adc
clc
xchg
mov
ins
jns
cmp
movs
xchg
or
mov
into
dec
adc
or
add
pop
sbb
retf
enter
cmc
bound
out
jmp
fcomip
push
imul
mov
add
jbe
and
mov
inc
pop
call
popf
pop
es
pop
iret
pop
imul
and
cmc
rol
jno
pushf
cmp
jo
arpl
mov
jle
lock
hlt
(bad)
call
pushf
adc
outs
xchg
shl
xchg
les
fadd
fucom
loope
adc
inc
dec
adc
shr
inc
ins
leave
push
xchg
sbb
sub
cmc
stos
adc
mov
xor
adc
adc
or
jbe
inc
sub
fidivr
adc
pop
out
sbb
push
xchg
in
(bad)
mov
test
inc
push
inc
sub
dec
(bad)
adc
adc
jb
clc
dec
pop
stc
movs
xchg
adc
es
repnz
inc
dec
leave
cmc
imul
iret
sbb
aas
(bad)
jnp
gs
adc
int
call
mov
loope
mov
not
retf
or
xor
dec
inc
jb
shl
(bad)
jno
mov
in
pop
movs
xchg
adc
sub
jnp
aam
shl
jbe
adc
inc
inc
neg
call
test
and
mov
(bad)
call
bound
ja
jg
pop
sahf
xchg
in
mov
fisttp
adc
jmp
cmp
mov
dec
popf
bound
jp
cld
cli
sub
mov
retf
dec
push
and
pop
inc
add
dec
and
call
xor
push
(bad)
push
add
dec
adc
rcr
mov
fs
add
or
xor
inc
stc
add
cmc
and
(bad)
loopne
aaa
test
sub
mov
test
popa
mov
or
cmp
mov
sub
scas
cmps
stc
fld
sub
outs
mov
pop
sub
mov
fiadd
test
add
call
mov
imul
mov
scas
sbb
sub
xchg
jmp
cdq
retf
iret
mov
or
mov
imul
movs
ja
mov
xor
cmp
xor
xor
jo
in
sbb
rcr
jg
div
or
jmp
xor
add
inc
and
sar
jge
aas
pop
sub
sbb
data16
loope
hlt
lods
or
push
inc
jns
pop
cli
mov
fnstenv
lea
dec
sbb
fmul
scas
cmps
iret
jg
fwait
movs
inc
in
add
shl
xchg
mov
call
inc
adc
adc
fisttp
sbb
movs
jmp
fcmove
sub
mov
push
lods
and
mov
popa
jge
popf
fimul
(bad)
mov
push
sub
imul
xchg
xchg
sub
scas
mov
pop
and
mov
out
pop
xchg
mov
and
mov
xchg
mov
es
xor
test
out
cdq
add
sub
dec
aas
xor
mov
out
rol
adc
dec
mov
cs
jge
inc
sub
icebp
icebp
pop
rol
jmp
clc
xchg
lods
sub
pop
mov
aas
mov
or
retf
jmp
cmp
xchg
add
(bad)
mov
or
xor
cmc
fidivr
mov
stos
sub
push
(bad)
cld
jmp
data16
cdq
adc
add
sbb
and
test
sbb
xor
call
stc
enter
lods
mov
sub
push
push
pop
out
lahf
cmp
(bad)
mov
test
mov
dec
sar
lock
mov
ins
jb
out
mov
fs
std
xchg
lds
loopne
call
push
shr
test
icebp
fcmovne
mov
mov
stos
test
jge
fdivp
push
ins
cmc
cmp
jge
mov
(bad)
lods
cmp
(bad)
mov
fstp
shl
cmp
mov
or
push
xor
cmp
in
aaa
rcr
inc
neg
das
sub
lods
fst
in
repnz
scas
popa
ret
rcr
fs
cmp
(bad)
das
cmps
inc
es
mov
lds
ror
dec
lahf
add
(bad)
out
dec
fisubr
sub
pop
adc
jb
clc
lods
cmps
in
and
push
mov
in
jno
mov
aam
dec
cmc
add
inc
pop
dec
or
dec
sub
in
and
in
lock
in
test
jo
fwait
dec
push
cmp
inc
jl
jno
ins
(bad)
jmp
jmp
shr
(bad)
pusha
mov
add
(bad)
cmp
cli
adc
loope
and
fs
xchg
inc
add
stos
mov
fwait
jae
mov
cmps
add
and
dec
iret
mov
pop
stc
push
clc
scas
stos
ja
xor
enter
pop
pop
jb
cmc
inc
sbb
int
mov
nop
dec
pop
cmp
scas
mov
adc
ror
call
dec
pop
aas
or
mov
mov
jp
cdq
fild
out
push
loop
lahf
mov
sti
or
pop
test
and
xor
mov
repz
test
cmp
inc
in
add
stos
lds
sub
cmp
and
mov
add
idiv
mov
sbb
pop
or
xchg
jno
pop
(bad)
fistp
arpl
aas
repnz
outs
js
sub
retf
push
out
inc
jge
aas
loope
imul
shr
pop
xor
cld
sub
gs
rol
xchg
xor
sbb
xchg
cmp
jmp
test
pop
sub
mov
xorps
pop
or
and
inc
loope
sbb
push
mov
cmc
mov
and
loope
push
pop
test
push
inc
add
scas
xlat
sub
jno
stos
pmaxub
stos
mov
push
cdq
dec
push
push
xchg
fld
retf
cmp
mov
das
pop
stc
retf
cld
iret
out
push
jg
xchg
push
mov
pushf
sub
repz
jne
fcomp
(bad)
push
xor
nop
retf
in
mov
mov
pop
loop
in
popf
ret
mov
xor
xor
sbb
dec
sub
or
arpl
mov
nop
cmc
mov
push
in
mov
cmp
imul
and
adc
(bad)
fs
dec
imul
mov
lock
(bad)
daa
cs
xlat
mov
adc
mov
mov
cmps
add
add
ja
js
clc
dec
dec
sti
xor
jle
out
push
loope
cs
pop
mov
les
push
aam
aam
test
sub
mov
movs
movs
xor
out
fidiv
sti
in
outs
mov
jg
dec
push
ins
xor
pop
cmp
pop
inc
add
xor
pop
adc
inc
pop
sub
mov
mov
sub
add
(bad)
jnp
repnz
dec
int
dec
imul
jecxz
test
lea
sahf
add
jbe
shr
rcl
add
aad
pusha
mov
clc
sti
sbb
jno
call
(bad)
(bad)
xchg
in
ja
inc
mov
rcl
jp
add
jmp
inc
cmp
in
aad
xor
xchg
in
rol
dec
push
movs
adc
mov
pop
adc
push
xchg
push
mov
push
sar
jle
add
aas
test
pop
jo
jnp
mov
or
xchg
jle
adc
and
out
cli
sub
in
enter
loop
mov
clc
adc
cmp
cmp
retf
mov
mov
in
test
aad
jg
mov
xor
adc
in
xchg
int3
lds
sbb
cmp
gs
cmp
and
cmc
or
cmp
test
cli
sub
sub
scas
jns
mov
push
and
ret
cmc
fisttp
xchg
cmp
push
cmp
mov
(bad)
out
aas
xchg
jg
pop
sbb
fwait
pop
cmp
pop
iret
ret
sbb
hlt
push
shr
jmp
jb
and
xor
or
dec
div
sbb
and
das
clc
in
imul
and
mov
adc
out
cmp
xlat
mov
test
(bad)
jmp
outs
dec
(bad)
popa
loop
push
mov
mov
adc
dec
or
sbb
imul
xchg
inc
loop
cmps
div
fs
pop
cs
ins
pop
rol
mov
jg
push
hlt
inc
push
dec
push
fmul
adc
test
mov
sbb
jg
sbb
pop
icebp
fisubr
pop
out
dec
inc
mov
ret
call
fcmovnb
jns
sbb
jno
lods
push
jle
push
xchg
repnz
sbb
fimul
addr16
jmp
aad
(bad)
aaa
mov
push
and
or
xchg
ins
dec
in
sub
add
pushf
das
cmp
push
cmp
jl
in
inc
push
in
pop
cmp
in
je
les
mov
pop
dec
lahf
mov
inc
ins
jns
mov
pop
fadd
movs
les
or
fwait
retf
retf
mov
ds
mov
imul
imul
or
adc
cmps
add
pop
mov
dec
cmps
sbb
pusha
push
int3
push
and
jae
and
out
sbb
loope
pop
xor
fcom
(bad)
bnd
fs
sub
test
mov
and
fldenv
mov
add
fwait
adc
cmp
add
repnz
rol
xor
cmp
xor
sbb
jmp
dec
js
mov
cwde
je
pop
(bad)
clc
pusha
imul
sbb
push
ja
or
push
mov
rcr
test
adc
es
mov
dec
fadd
xor
test
lods
mov
aas
lock
inc
add
push
das
sbb
dec
dec
or
sar
jo
(bad)
imul
mov
adc
inc
stc
xchg
cmp
fisttp
sub
add
dec
xor
out
xchg
mov
mov
sub
jle
and
push
xor
mov
push
cmp
inc
sbb
int3
mov
(bad)
mov
mov
fisttp
mov
pop
nop
jecxz
les
stos
jg
call
mov
jmp
lods
lods
sbb
xchg
(bad)
xchg
xor
jne
xor
call
imul
pop
imul
stos
lea
lods
mov
pop
les
(bad)
lods
cdq
icebp
jge
mov
xchg
shl
jmp
pop
ret
dec
ins
stc
pop
call
stc
pop
or
cmp
and
(bad)
inc
dec
mov
ret
leave
rcl
scas
aad
adc
jp
out
dec
cmp
inc
jmp
xchg
mov
shl
(bad)
imul
or
sub
cvtps2pi
ins
cmp
mov
dec
hlt
pop
mov
jmp
jbe
xchg
nop
outs
(bad)
sub
inc
(bad)
cdq
aas
vpmaxsw
inc
int
mov
xchg
stc
sub
or
in
jge
ret
mov
and
mov
fwait
and
lods
popa
push
test
pop
mov
out
mov
dec
xor
fstp
mov
lods
xchg
adc
(bad)
ret
add
es
adc
les
adc
(bad)
jl
pop
repnz
mov
adc
loope
or
inc
and
in
cmps
xor
shr
les
jae
xor
fs
or
fstp
push
sub
loop
arpl
or
aad
fild
adc
retf
pushf
add
xor
xor
and
mov
(bad)
xor
fsubr
into
popf
sub
sbb
and
fadd
cmp
hlt
lea
ficom
pushf
fidivr
jne
movs
sar
cmps
mov
sub
stc
jg
add
ret
aam
pop
xor
retf
imul
mov
push
inc
add
push
fs
fisubr
push
xchg
sti
jp
jae
xchg
scas
xor
sub
push
inc
mov
jmp
add
stos
test
test
(bad)
mov
mov
(bad)
loop
jp
mul
inc
arpl
jmp
add
shl
mov
scas
loope
cli
mov
arpl
cmc
fbld
jg
xchg
mov
xchg
daa
test
mov
and
int
mov
rol
jmp
xchg
and
adc
(bad)
shl
bound
add
sbb
out
xor
ret
test
jne
adc
sbb
or
popf
cmp
or
jnp
(bad)
iret
cld
pop
jecxz
inc
or
loopne
(bad)
(bad)
loopne
mov
xor
rcr
fldenv
leave
push
mov
push
fcom
gs
imul
gs
out
cmps
mov
gs
sbb
out
dec
sub
xor
mov
shl
clc
push
retf
ds
add
push
dec
lock
dec
push
push
xor
inc
ret
sub
push
(bad)
inc
jnp
jae
mov
dec
cmp
rol
or
lock
lds
pop
test
xchg
loopne
dec
lods
push
sbb
xor
jno
cmc
movs
pop
jmp
push
rol
mov
mov
int3
ins
imul
into
addr16
mov
in
push
sti
mov
adc
leave
cmp
inc
adc
xchg
fsub
mov
xchg
movaps
adc
(bad)
pop
and
call
popa
sbb
scas
push
scas
sbb
xlat
mov
fwait
add
add
test
aas
push
sub
inc
pop
test
sti
cmp
sbb
mov
dec
sbb
add
mov
jp
pop
or
outs
sahf
sub
cmps
xor
or
cld
pop
loop
adc
xlat
mov
(bad)
call
sub
push
push
lds
jae
cvtdq2ps
mov
fstp
out
retf
nop
sub
push
adc
aad
pop
ret
aaa
icebp
cmp
das
stc
shl
jno
lock
es
je
lock
push
pop
xchg
test
jge
imul
cmp
dec
adc
(bad)
repz
hlt
xor
(bad)
pop
movs
sub
repz
and
push
out
push
sbb
mul
push
mov
fidivr
aaa
push
ror
sub
movs
sbb
mov
pop
or
hlt
fidiv
fs
add
lods
push
in
out
cmp
loop
fs
fsubr
enter
sbb
test
es
sbb
ret
in
mov
scas
xchg
popf
push
outs
imul
imul
ret
mov
(bad)
jo
mov
retf
inc
dec
nop
xlat
popa
push
dec
push
jle
dec
inc
pop
pop
ror
pop
inc
js
js
jne
push
adc
and
mov
mov
dec
cmp
pushf
loopne
mov
ja
jbe
jnp
inc
jae
dec
int
outs
cmp
repnz
jne
push
xchg
cmps
ja
mov
cwde
pop
xchg
sbb
and
js
push
push
inc
add
push
bound
fnclex
sbb
das
cmp
mov
add
ret
lock
mov
sub
addr16
push
mov
mov
fcmovb
outs
not
pop
icebp
and
dec
rcr
iret
popf
push
sbb
fiadd
aas
mov
mov
jg
iret
das
pop
push
es
fistp
sti
(bad)
test
mov
call
retf
pop
pop
dec
sar
and
jae
push
(bad)
fstp
repz
out
and
lea
or
loopne
(bad)
fisubr
imul
scas
inc
xchg
push
inc
sbb
rcl
cmp
cdq
sub
js
aad
mov
sahf
inc
aad
push
push
stc
dec
jbe
pop
jnp
dec
retf
push
mov
or
sub
stc
iret
loopne
lods
std
cmp
jno
out
and
mov
das
jae
imul
lock
arpl
inc
inc
sub
enter
sbb
sar
adc
cwde
scas
scas
xor
add
xor
lods
arpl
adc
retf
adc
dec
(bad)
jl
sahf
xchg
mov
mov
jl
adc
pushf
sti
push
scas
std
adc
mov
cmp
or
popa
cmp
push
mov
adc
cdq
bound
lods
test
lods
mov
in
inc
add
xor
cmp
xchg
(bad)
loop
fs
inc
mov
mov
enter
jnp
mov
shl
repz
and
push
jnp
mov
push
fmul
dec
lahf
jp
movs
outs
push
fidiv
xor
retf
fldenv
xchg
add
sahf
adc
addr16
add
xor
xlat
jne
xchg
dec
jp
pop
imul
inc
ins
inc
pop
(bad)
(bad)
mov
mov
push
repz
adc
cmps
sub
jge
test
in
and
gs
(bad)
cmp
push
or
push
out
mov
inc
mov
xor
and
jmp
push
dec
sbb
ret
cmp
cmp
jbe
or
in
mov
push
dec
mov
out
in
shl
pop
push
je
shl
(bad)
and
cmp
or
xchg
rcl
mov
lods
pop
shl
ins
cmps
in
mov
and
or
jno
ret
out
push
dec
push
int3
cmp
test
jp
dec
xor
inc
xor
xor
aad
mov
pop
jle
mov
ret
jae
mov
mov
pop
pop
aaa
mov
rcr
xor
loope
push
or
mov
sub
cmp
ret
outs
call
xlat
jnp
int3
retf
stos
call
test
inc
mov
mov
adc
popa
push
call
das
scas
sahf
mov
mov
cmp
xor
pop
int
sub
xor
sub
int
cmps
in
xchg
call
int
inc
pop
xor
fist
lfs
sbb
cmp
push
ins
js
push
xor
or
add
and
inc
and
lds
push
je
icebp
adc
fstp
repnz
bound
stc
icebp
ds
movs
test
in
out
enter
stc
mov
mov
iret
dec
out
xlat
ins
cmc
or
pop
fwait
xchg
jno
jmp
movs
cmps
mov
cli
neg
mov
xchg
and
call
sbb
jb
xor
imul
add
(bad)
push
ins
das
sbb
or
repnz
(bad)
push
neg
pop
sub
clc
mov
ins
and
ret
out
test
test
cli
push
loop
add
lds
ror
int3
js
aas
fs
push
fcom
(bad)
jb
adc
bound
test
loop
out
loope
sub
jecxz
push
pop
ss
das
cmp
fstp
mov
dec
sbb
dec
mov
xlat
sti
(bad)
(bad)
fild
mov
sub
repz
xchg
mov
ret
jecxz
ins
call
scas
mov
dec
sub
int
loopne
scas
call
ins
push
push
call
add
cmp
cmps
sti
test
cmp
icebp
xor
and
jns
out
cmps
mov
loope
in
dec
call
pop
jne
pop
fxch
pop
mov
inc
sub
xlat
dec
mov
hlt
add
mov
mov
call
dec
movs
mov
mov
popa
mov
xchg
mov
pop
iret
fs
out
mov
or
or
cmp
stc
pop
lds
imul
outs
stc
fld
sbb
fild
push
lods
ss
outs
das
cmp
push
test
mov
push
fwait
or
and
sbb
push
pop
inc
dec
xchg
pop
and
fs
lds
fist
aad
xor
cmp
push
and
add
adc
std
cmc
sub
movs
pop
jecxz
or
out
dec
push
jle
push
cwde
dec
add
repz
inc
mov
push
ins
adc
sahf
cmp
xchg
stc
retf
repz
xchg
stos
xor
pop
mov
std
lahf
and
sub
sar
jns
mov
push
cmp
das
popf
add
cmp
mov
adc
mov
xchg
pop
and
push
out
imul
pop
jge
push
xchg
fmul
clc
add
fnstsw
inc
jl
add
sub
cmp
mov
mov
add
pop
shl
and
mov
outs
dec
fbld
ret
leave
loopne
jno
lods
repnz
ins
and
stos
test
mov
jmp
xchg
clc
(bad)
mov
ins
push
loope
movs
mov
(bad)
hlt
mov
sbb
(bad)
stos
mov
mov
(bad)
iret
adc
xor
fimul
mov
xchg
sub
mov
movs
cdq
sbb
xchg
and
add
lea
(bad)
imul
jmp
lods
into
jb
jb
mov
jle
cmp
xchg
fnstsw
(bad)
pop
jle
push
dec
jne
or
imul
mov
imul
add
fnsave
xchg
cli
fisubr
movs
pop
mov
neg
cli
loope
jnp
fist
fwait
mov
xchg
xchg
adc
cmps
mov
push
pop
ja
sbb
movs
popa
xor
fsub
int3
(bad)
mov
pusha
or
into
inc
inc
repz
jge
cmp
fld
into
inc
mov
and
push
fwait
xchg
jg
dec
arpl
mov
jae
xor
aas
loopne
mov
lock
or
xlat
test
ds
xor
ss
mov
mov
lahf
into
mov
ror
dec
(bad)
push
jbe
add
sbb
lock
jbe
(bad)
sbb
cmp
mov
gs
retf
inc
clc
add
mov
add
add
cwde
xchg
repz
mov
xchg
mov
pop
mov
loopne
fsubr
leave
push
mov
mov
dec
stc
adc
jns
mov
pop
mov
cwde
mov
pop
call
aaa
(bad)
(bad)
dec
mov
pop
xor
add
iret
sub
int
jbe
mov
imul
jns
sbb
add
push
fidiv
cmc
mov
jns
sub
mov
outs
loopne
adc
mov
cs
mov
dec
cmp
es
clc
pop
aad
pop
jg
out
push
push
stc
xor
sub
mov
in
adc
sahf
jns
icebp
shl
xchg
fwait
sbb
mov
cs
ins
in
ret
cwde
fisttp
lds
out
mov
adc
fisubr
sub
sbb
out
(bad)
stc
hlt
add
mov
jge
xchg
(bad)
and
xchg
test
xor
xor
sti
mov
fsubr
push
pminsw
bound
nop
cmp
mov
repz
push
(bad)
pushf
jecxz
add
js
dec
nop
or
gs
outs
imul
ret
mov
xor
ds
pop
mov
in
cld
xor
repz
shl
ficomp
in
sahf
ss
ret
data16
add
xchg
sti
sbb
in
sub
lods
push
sbb
mov
imul
jg
inc
pop
sbb
std
sub
dec
pop
or
mov
lea
mov
sti
mov
in
mov
mov
jmp
sub
sub
int
cmps
cmp
cld
xor
fscale
pop
and
push
mov
xchg
xor
test
and
imul
test
sub
frstor
outs
dec
fdiv
movs
popf
sub
mov
int
xchg
mov
mov
jb
dec
or
int3
or
scas
mov
jmp
call
je
in
pop
inc
cmp
cmp
xlat
hlt
(bad)
(bad)
xlat
lds
das
ja
mov
imul
or
or
dec
mov
mov
das
xchg
or
fdivrp
jns
inc
pop
jmp
fcmovnbe
sahf
lds
and
aad
sbb
or
je
jge
pusha
cmc
rcr
mov
addr16
dec
repz
xchg
pop
dec
xor
xor
sub
sub
scas
sbb
enter
mov
outs
call
mov
xor
shl
push
and
cmp
jne
mov
ja
mov
jno
adc
sub
dec
jns
cli
(bad)
mov
in
std
xchg
cwde
mov
adc
mov
xor
mov
mov
xor
das
or
clc
jne
inc
mov
and
fst
push
int
and
ss
ret
fwait
jbe
imul
cwde
or
fst
mov
inc
dec
ret
lock
mov
sub
xchg
mov
ins
or
bound
mov
pop
add
and
lds
fdivp
int
inc
das
repnz
xchg
xchg
mov
add
adc
jbe
ret
xchg
add
push
jl
imul
cs
adc
std
jecxz
pusha
cmps
inc
into
call
stos
pop
dec
(bad)
jg
mov
into
sub
push
out
data16
fisubr
ffreep
imul
mov
and
push
jmp
popa
std
and
xor
fmul
mov
and
cli
cmps
push
hlt
mov
pusha
push
xchg
cmp
push
or
cmc
add
fcmovb
adc
mov
mov
cmps
mov
jmp
sahf
ret
inc
jge
mov
pop
push
cmp
test
push
push
aam
sbb
cmps
loop
movs
sbb
add
jns
aam
dec
dec
adc
add
push
call
xchg
std
dec
xchg
shl
cli
jno
dec
mov
jmp
pop
rcl
mov
aas
add
es
push
mov
stc
call
sahf
push
cmp
repnz
inc
pop
dec
xchg
out
sbb
clc
mov
mov
aas
lods
pop
jns
into
fdiv
in
xchg
mov
ds
sub
or
les
(bad)
repnz
int
pop
add
mov
jp
js
push
push
test
pusha
lea
cmps
mov
push
retf
lea
mov
mov
std
icebp
out
(bad)
jp
xchg
fistp
shl
xchg
jnp
or
xchg
and
int3
dec
mov
inc
lea
loopne
das
rcr
call
into
je
div
jl
in
mov
sbb
fmul
(bad)
ret
cmps
pop
cmp
cmps
scas
mov
push
push
cmp
inc
les
stos
test
cmp
test
ins
jmp
inc
jge
mov
pop
jmp
(bad)
sub
push
leave
xchg
bound
or
retf
fcom
adc
add
ins
mov
ins
mov
call
lea
inc
or
push
pop
push
xchg
imul
jo
dec
sar
lods
push
mov
jbe
aad
stc
rcl
addr16
sbb
xor
aas
leave
test
aas
adc
ins
popa
mov
cmps
outs
dec
out
xchg
dec
dec
or
movs
jp
sbb
push
rcr
out
or
push
das
add
sub
inc
inc
mov
xor
jmp
shl
lods
jns
inc
mov
pop
add
in
mov
sar
push
std
dec
fwait
or
aas
fisttp
sub
or
icebp
stc
movs
and
sub
fist
mov
fadd
mov
clc
fstp
add
dec
cmp
push
add
retf
es
dec
add
mov
retf
jecxz
int3
lods
ror
je
test
fmul
push
or
pop
jbe
pop
les
movs
sbb
in
sub
cmp
aam
cmp
inc
cs
push
fadd
fiadd
cmp
repz
add
jg
hlt
cld
cmps
mov
test
fcomp
xchg
fidiv
pusha
dec
mov
adc
dec
(bad)
lock
jnp
jp
inc
idiv
jnp
bnd
retf
add
adc
lods
cmp
cmp
dec
and
pusha
xor
push
jecxz
and
rol
leave
or
int
mov
out
pusha
icebp
ins
dec
sub
cmps
adc
int3
sbb
jge
mov
into
push
and
jb
push
daa
cmp
imul
call
bound
dec
push
or
aad
push
jbe
outs
inc
jecxz
jecxz
jl
cmp
sbb
push
mov
jle
mov
mov
stc
xor
(bad)
cld
adc
shr
xchg
addr16
mov
dec
out
dec
mov
pop
and
rcl
lds
test
sbb
imul
dec
sti
xchg
inc
scas
mov
xchg
lahf
xchg
(bad)
mov
inc
mov
jae
cmc
mov
push
test
ds
jle
and
sbb
sbb
and
mov
mov
add
mov
mov
mov
add
sbb
push
ret
in
mov
fidiv
cmps
cld
mov
lock
jmp
outs
or
dec
gs
xchg
mov
fdiv
dec
pusha
into
daa
stos
mov
aad
scas
cld
cdq
cmp
out
mov
jns
jno
xor
test
call
inc
pushf
xchg
ror
inc
repz
jp
scas
xchg
mov
pop
mov
bound
add
push
mov
mov
xchg
pop
cmc
xor
add
test
mov
jp
fld
icebp
dec
and
push
into
pop
movs
cmp
and
ja
adc
aam
push
lods
ins
mov
mov
mov
icebp
sbb
cmp
dec
inc
xchg
movs
jge
fcomip
jns
mov
fnstsw
js
pop
mov
and
dec
cs
add
sbb
push
fs
dec
out
lock
cmp
popf
ret
cmc
or
fcom
xor
addr16
icebp
cmp
lds
cmp
ss
pop
or
sub
mov
and
sub
add
in
loop
iret
leave
cmp
add
stos
popf
mov
(bad)
daa
xor
cmps
outs
pop
ret
cmp
xor
movs
in
sub
push
or
js
adc
cmps
xchg
retf
in
enter
pop
jp
iret
cmp
fdiv
seta
ficomp
or
aam
xor
jo
stos
imul
jno
movs
je
sub
jns
leave
cmp
adc
jle
pusha
push
sbb
ja
cmp
out
xchg
in
sub
(bad)
sbb
clc
cmp
jnp
shl
aas
pop
std
mov
add
ret
test
mov
les
add
adc
cmp
popa
dec
pop
dec
or
sar
and
ins
xor
lods
in
cmp
cdq
ret
into
outs
add
sti
arpl
aaa
ja
cmp
popf
inc
pop
add
outs
dec
fcmove
lods
pop
sub
aam
pcmpeqb
jne
add
sbb
cli
sub
cld
jae
clc
sbb
pop
fnstsw
push
test
(bad)
and
add
das
aas
cmc
dec
ins
xor
data16
fldenv
aam
mov
sub
jb
inc
mov
sahf
test
add
jmp
idiv
mov
xor
cli
int
call
icebp
pop
xchg
xor
test
xor
jnp
repnz
sbb
lahf
cmp
out
mov
add
lods
retf
push
pop
pop
xor
pop
or
pop
leave
mov
and
jp
(bad)
lods
out
mov
and
inc
sub
outs
cmp
ds
sbb
clc
jle
les
ins
imul
fistp
fdiv
into
add
loop
out
inc
jge
sbb
sbb
inc
test
pop
mov
dec
in
mov
cs
nop
adc
push
fisttp
call
ins
jle
arpl
(bad)
adc
gs
jge
sub
pushf
(bad)
adc
pop
shr
push
mov
cmp
test
pop
call
add
data16
mov
xor
in
clc
push
fisub
inc
aas
jnp
jl
adc
aas
sub
cli
jb
jbe
popa
jmp
clc
jecxz
sbb
sub
das
xchg
jge
mov
ds
loope
mov
sbb
bound
sti
pop
mov
aas
cli
outs
jne
nop
mov
pop
cli
lods
retf
stos
mov
jmp
mov
pushf
push
xchg
push
outs
sub
clc
shl
adc
aad
aam
cmp
push
movs
sub
jmp
(bad)
pop
jae
in
jmp
int3
push
mov
lds
push
or
cld
mov
mov
ja
(bad)
cld
inc
xlat
inc
movs
mov
shr
dec
push
loopne
cmp
loopne
ds
mov
in
push
imul
and
mov
dec
push
pop
push
(bad)
cmp
and
and
sbb
fsubp
enter
(bad)
aas
cmp
jo
sub
push
sbb
loopne
jg
jecxz
stos
loopne
or
sbb
and
pop
cdq
xor
adc
iret
js
push
xchg
test
and
nop
dec
mov
cmp
cmp
in
stc
lahf
test
(bad)
enter
out
inc
mov
in
mov
push
int3
bound
sbb
call
mov
sub
les
sbb
out
ss
cmps
pop
aas
sbb
sub
pop
mov
daa
ins
fistp
stc
jno
cmp
lods
inc
pop
test
(bad)
jmp
jecxz
sub
add
arpl
mov
xchg
ds
mov
hlt
mov
mov
daa
mov
jne
ret
add
out
inc
sbb
in
or
sub
iret
out
add
stos
xchg
jle
(bad)
cmp
jae
jl
jp
(bad)
push
pusha
dec
pop
mov
add
add
jb
outs
mov
mov
int
dec
jg
adc
xor
scas
aas
jmp
pop
loope
aas
dec
pop
mov
mov
and
jo
or
inc
vpandn
mov
dec
fmul
shl
xchg
mov
ds
mov
xchg
gs
xor
int
xor
xchg
leave
arpl
and
adc
mov
add
sub
jecxz
jecxz
sti
sahf
mov
mov
aas
push
mov
inc
ds
stc
cmp
lods
ret
out
movs
dec
rcr
mov
add
or
cwde
mov
lods
push
adc
pop
icebp
cdq
push
push
rcl
pop
sub
or
imul
push
pop
and
xchg
enter
sub
pushf
pop
fist
inc
jo
xchg
pop
sub
mov
or
test
rcl
sub
call
cmps
loope
fistp
fs
jmp
push
mul
cmps
jno
push
sbb
ja
cmp
push
jae
(bad)
bound
hlt
ss
(bad)
and
pop
mov
fiadd
aas
test
cwde
in
cmp
adc
stc
fidivr
push
mov
clc
sub
jns
jle
push
fcmovnb
mov
push
fnstenv
dec
movs
xchg
imul
xor
jge
shl
push
cmp
adc
aaa
ret
out
push
sbb
lahf
add
popf
cs
pop
jmp
mov
jbe
(bad)
xlat
arpl
mov
mov
pusha
js
push
push
jp
imul
pushf
fistp
je
cmp
aaa
jo
movs
xor
mov
loope
adc
lea
repz
pop
push
fld
into
lea
mov
cmp
data16
jp
pop
fist
cld
inc
sbb
xlat
adc
sar
jns
add
and
push
idiv
dec
jns
loope
repnz
xchg
cmc
out
not
outs
frstor
(bad)
pop
test
scas
scas
adc
xchg
out
test
imul
jmp
mov
aad
sahf
adc
add
adc
add
push
add
(bad)
push
or
xchg
daa
inc
not
dec
inc
dec
in
adc
lods
mov
mov
mov
or
and
mov
fidivr
out
in
sbb
lds
cmp
rcl
sti
pop
xchg
push
xchg
or
call
add
xchg
dec
cmp
test
pop
aam
shl
sub
cmp
mov
xor
cmps
jp
ror
adc
pop
pop
add
or
fs
outs
dec
in
xchg
das
xor
clc
jns
push
inc
sahf
shr
in
mov
movs
mov
xchg
cmp
aaa
mov
cmp
add
mov
fcom
out
xchg
cld
cli
ins
mov
mov
dec
xchg
adc
iret
cli
sbb
or
sbb
enter
popf
repnz
(bad)
fwait
dec
xor
loop
sub
leave
jecxz
or
out
add
pop
popf
test
adc
call
xchg
mov
mov
aas
fwait
in
jb
dec
push
aas
and
out
xor
pop
adc
push
je
iret
mov
out
in
push
cwde
jg
cmp
cmp
stos
retf
sbb
add
out
out
fisubr
ins
sbb
xchg
inc
rcl
sbb
jge
lods
jo
aam
aad
cld
mov
xor
mov
dec
imul
ret
cmp
iret
cmp
xlat
(bad)
ins
ja
retf
dec
pop
call
test
imul
and
or
jmp
loop
in
sbb
int
mov
js
(bad)
add
mov
or
test
jne
mov
dec
push
pop
fistp
xor
(bad)
xchg
push
lahf
jp
dec
outs
cdq
mov
bound
or
inc
push
cwde
mov
pop
push
sub
dec
pop
pop
jmp
jg
xchg
cmps
jnp
and
sahf
xchg
(bad)
mov
jle
push
in
scas
dec
inc
and
xchg
cld
xchg
cld
sub
(bad)
daa
ja
xchg
ret
dec
mov
imul
aaa
imul
shl
push
adc
nop
pop
sub
sub
mov
sbb
mov
bound
xchg
sar
push
mov
pop
neg
(bad)
xlat
xchg
sar
sbb
test
jb
int
movs
(bad)
cmp
pop
aam
pop
sub
ins
and
adc
(bad)
lods
mov
push
std
stos
ret
popf
dec
fdiv
pop
mov
dec
call
and
jl
loopne
fstp
pop
xor
jecxz
gs
retf
mov
xchg
add
stc
cmp
xor
dec
out
movs
outs
daa
fcmove
cmc
jnp
jl
rol
inc
xchg
iret
add
mov
jmp
lock
imul
aad
pop
mov
pushf
xchg
pushf
xchg
xor
or
or
sub
cmp
loope
fdiv
aas
movs
jne
cmp
lods
xchg
fwait
int
enter
mov
cmc
xchg
xor
jle
movs
sub
(bad)
icebp
xchg
pop
shl
jo
mov
cmp
call
scas
(bad)
sub
xchg
mov
push
mov
xchg
mov
jo
inc
ud0
mov
mov
inc
and
imul
push
xlat
dec
cmc
jge
(bad)
fcom
retf
fs
and
sub
or
sub
xchg
push
pop
(bad)
xor
ds
sub
push
mov
std
call
add
xchg
call
inc
mov
xor
aad
and
retf
mov
mov
mov
scas
sub
mov
aaa
imul
pop
loop
add
and
imul
mov
jae
mov
pop
out
push
xor
xchg
jnp
outs
loopne
cdq
cwde
cmp
mov
dec
lahf
ja
call
adc
mov
sbb
mov
push
xchg
cld
clc
xchg
cld
arpl
test
fild
cs
imul
retf
loop
sahf
sbb
test
mov
dec
push
loop
and
jmp
sar
mov
mov
out
scas
sub
imul
cmp
adc
ins
stos
ja
cmc
out
inc
iret
out
mov
dec
lods
sub
ret
sbb
adc
and
retf
lea
push
enter
push
loop
(bad)
adc
leave
lahf
ins
and
out
repz
retf
mov
ja
movs
sub
mul
pop
lahf
shr
mov
pop
mov
data16
sub
and
das
stc
push
pop
adc
out
leave
leave
xor
add
mov
mov
dec
cmp
arpl
adc
xchg
enter
test
adc
and
test
mov
mov
lods
outs
jne
mov
(bad)
xor
enter
xchg
jb
leave
daa
adc
mov
jnp
test
adc
jl
loopne
in
movs
stos
push
jp
xchg
sub
add
in
pushf
or
nop
pop
inc
inc
scas
jle
jo
xchg
jmp
movs
xchg
cmp
pop
mov
push
dec
cld
int
(bad)
adc
push
add
inc
add
or
jo
cmps
cmp
push
sub
not
push
xor
sbb
gs
add
pop
popf
push
les
sub
je
push
mov
addr16
mov
pop
test
ins
jle
cmps
pop
outs
jb
jmp
jge
or
mov
or
xor
loope
cmps
add
fcomi
mov
xor
xchg
in
aad
out
in
pop
dec
jmp
lds
loopne
jno
int3
cmps
push
mov
retf
loopne
sub
mov
fld
imul
cmp
cwde
out
popa
adc
dec
sar
add
pop
addr16
push
mov
clc
jns
adc
cmp
xchg
and
ins
repz
mov
mov
mov
movs
imul
pop
and
add
leave
sub
cs
sub
vmovdqa
push
xchg
dec
add
call
rol
push
movs
pop
adc
shl
repnz
jle
shr
dec
(bad)
cmp
mov
jl
cmp
(bad)
call
jp
jecxz
or
jg
jno
shr
add
loopne
shl
shr
lods
jnp
xor
pop
add
pmulhuw
push
bound
cdq
xchg
jns
dec
cmp
adc
pusha
xchg
inc
xlat
rol
je
jo
out
sub
mov
jecxz
jecxz
pushf
inc
mov
ret
or
push
xchg
(bad)
fmul
cmp
mov
fwait
xadd
loope
leave
xchg
push
push
enter
test
push
ins
adc
xchg
ds
and
cdq
aad
test
mov
xchg
hlt
jl
test
and
cmp
lods
sbb
xlat
add
sub
mov
and
out
and
sub
push
fidiv
(bad)
fidiv
push
scas
sub
arpl
cmp
mov
pusha
xchg
outs
(bad)
jmp
rol
(bad)
or
sbb
scas
movs
mov
inc
adc
js
fucomip
(bad)
mov
dec
mov
lahf
je
fwait
lds
out
jne
ror
clc
pop
rol
in
ds
cmps
jmp
add
out
repz
cs
add
loop
pop
adc
test
and
adc
ror
cmp
lods
push
lods
out
xchg
or
aad
cli
dec
sbb
jge
lahf
or
sar
pop
xchg
ins
retf
retf
sar
jbe
pop
outs
push
in
or
push
rol
sub
sahf
and
loopne
scas
add
and
jmp
pop
jmp
aam
xchg
mov
mov
outs
call
adc
aas
mov
aad
fimul
fst
inc
mov
(bad)
dec
(bad)
xchg
in
mov
sbb
sbb
sbb
xor
pusha
adc
push
adc
fcomip
pop
mov
adc
lock
dec
sub
test
mov
mov
pop
popa
jb
push
mov
push
bound
pushf
or
dec
jp
js
lods
push
mov
popf
pop
and
pop
cwde
pop
sbb
jecxz
mov
mov
jmp
and
cdq
push
or
pop
std
test
dec
out
mov
mov
loope
int3
mov
push
jecxz
imul
jle
adc
dec
push
mov
mov
(bad)
xchg
or
push
dec
pop
ret
mov
enter
bnd
fist
stos
sub
repnz
fistp
add
ret
int3
xor
ficomp
(bad)
push
inc
mov
enter
pop
(bad)
and
sub
add
outs
in
jmp
aad
(bad)
rcr
push
call
mov
mov
out
lahf
jp
(bad)
aas
shl
cld
(bad)
iret
imul
push
(bad)
xor
or
adc
imul
inc
lods
inc
fidiv
lock
push
add
mov
jp
cmp
xchg
mov
push
ror
dec
ret
adc
pop
hlt
pop
xor
sahf
xchg
rcpps
mov
dec
or
jmp
imul
loop
mov
lods
cmps
mov
mov
xchg
jo
fist
lods
adc
push
lock
jg
scas
dec
xor
das
std
gs
adc
out
stos
imul
or
movs
arpl
ja
mov
rcl
add
adc
movq
cmps
sub
retf
inc
mov
fwait
push
or
loop
ja
ja
jb
test
mov
(bad)
mov
inc
mov
enter
cmps
ins
sbb
mov
cmp
js
and
add
inc
xchg
fidiv
nop
ret
inc
cmp
cmp
dec
loopne
aas
jnp
or
push
push
stos
mov
iret
or
and
adc
or
inc
stos
retf
out
xlat
and
cli
sub
in
xchg
lods
sub
aaa
cmp
sub
scas
inc
ja
jae
fs
ret
fbld
jnp
ficomp
sbb
mov
icebp
addr16
cld
bound
outs
mov
fisttp
jno
or
aad
stos
sub
rcr
cwde
js
sub
pushf
cwde
scas
retf
test
jge
jg
lock
adc
test
ins
lds
mov
xchg
sub
cmp
mov
(bad)
ja
(bad)
lds
jecxz
jae
mov
pop
test
cli
cmp
and
xchg
sub
cmp
sbb
sub
pop
mov
push
fdiv
mov
les
jmp
arpl
movs
inc
cmps
jp
push
pop
add
icebp
test
sub
pop
mov
jmp
push
dec
pop
jmp
xchg
cld
xchg
in
xor
in
push
je
in
jge
xor
xlat
mov
inc
outs
(bad)
push
call
sub
mov
pop
lods
mov
add
call
xor
push
mov
pop
int3
jle
cdq
add
pop
sahf
sti
mov
lahf
and
mov
jecxz
xor
xchg
xchg
sub
je
cmp
int
clc
pop
jne
cmp
and
sbb
push
jnp
push
jne
sub
cmps
lods
popa
pop
jmp
dec
imul
fstp
loope
mov
inc
fdivr
fs
bound
and
jnp
cmp
mov
mov
xchg
test
dec
mov
aas
add
test
or
cli
jae
and
aad
lahf
test
and
jmp
(bad)
xor
push
mov
xchg
jecxz
xor
sbb
loopne
loope
pop
xchg
lods
lock
retf
rep
repnz
call
lea
ja
mov
ss
sahf
je
ins
mov
outs
mov
cmp
outs
or
in
and
mov
outs
imul
mov
push
movs
mov
inc
mov
neg
fsub
mov
jle
push
daa
mov
shl
mov
jb
jmp
aas
fdivr
or
jnp
mov
test
mov
aaa
clc
out
lods
pop
fmul
jmp
push
mov
retf
jb
mov
mov
inc
mov
sub
das
and
lods
(bad)
adc
adc
jae
jmp
and
or
mov
mov
js
dec
scas
(bad)
xor
(bad)
out
mov
fmul
in
jo
sbb
pop
or
lds
movs
leave
mov
and
out
fild
(bad)
aad
fidivr
mov
daa
inc
mov
aad
jmp
into
dec
fwait
push
adc
and
mov
or
pop
and
nop
jae
sub
cmp
xor
out
or
or
pop
cwde
push
aam
dec
out
mov
lods
push
or
push
movs
mov
push
sti
ss
addps
xor
pop
mul
mov
loope
shr
ja
in
push
js
out
xchg
cwde
adc
inc
dec
pop
in
xchg
xor
cmps
outs
dec
add
outs
fisttp
dec
mov
(bad)
int3
sahf
int
add
fisub
neg
cmp
(bad)
adc
es
test
jns
push
or
xchg
into
js
dec
cli
cdq
cs
sbb
mov
mov
push
int
dec
pusha
mov
arpl
jb
fwait
in
ret
test
dec
jmp
scas
mov
loope
push
xchg
inc
std
sub
add
and
stos
frstor
daa
jecxz
(bad)
and
sbb
xchg
cmp
mov
push
retf
inc
imul
lea
(bad)
cli
push
mov
cmp
outs
dec
or
xchg
or
mov
aas
jecxz
cmp
fwait
inc
mov
sbb
adc
jno
add
push
jg
cmp
sbb
or
repz
inc
cmps
jmp
cmp
hlt
mov
popa
mov
jae
inc
cmp
imul
mov
mov
xchg
scas
mov
jne
aam
add
inc
bound
mov
xchg
jmp
mov
(bad)
aas
xor
mov
jmp
aas
xchg
mov
mov
xchg
lahf
jno
xlat
int
jnp
icebp
pop
mov
mov
push
sbb
dec
dec
dec
test
push
lahf
and
cmps
lods
mov
cdq
test
or
push
out
clc
or
pop
push
popf
mov
pop
cmp
loopne
add
std
push
retf
adc
add
pop
mov
fst
(bad)
jb
fbstp
stos
lds
lahf
pop
mov
cmp
xor
sti
mov
mov
clc
cmp
and
loopne
mov
ds
push
outs
aas
stos
or
xor
test
mov
rcr
and
cli
les
xor
jno
and
scas
cwde
jbe
and
push
and
cmc
inc
add
dec
push
dec
cdq
sbb
mov
mov
ds
mov
aaa
int
xchg
pop
jno
je
push
int3
adc
push
scas
xchg
adc
cmp
add
(bad)
mov
mov
(bad)
pop
sub
ss
add
sub
into
in
outs
jmp
(bad)
ss
fbld
pop
xor
daa
jmp
(bad)
fisub
sub
in
jbe
cmp
jmp
fimul
aam
das
cmp
push
jnp
sbb
mov
adc
jo
inc
push
sbb
lods
dec
and
inc
dec
ds
cmps
lds
xor
push
inc
adc
xchg
and
js
push
cmp
sbb
call
mov
into
push
sub
push
imul
(bad)
mov
xlat
aas
int
fidivr
push
ds
retf
data16
pop
pop
stos
fs
daa
popf
mov
xchg
sbb
mov
mov
xchg
pop
adc
ror
cli
xchg
pop
dec
hlt
jmp
dec
aad
inc
test
lods
lods
lods
sbb
or
ins
(bad)
mov
and
xchg
jnp
hlt
inc
xchg
mov
test
nop
out
dec
mov
jbe
inc
mov
xchg
xor
js
movs
es
cs
and
lahf
cdq
push
ret
push
adc
in
jns
mov
adc
pop
scas
popf
push
mov
mov
adc
mov
cli
xor
jge
mov
mov
leave
call
mov
mov
sub
gs
data16
adc
inc
sbb
inc
(bad)
xor
movs
ss
in
shr
loopne
or
es
fist
jg
imul
(bad)
aad
cmp
into
add
mov
mov
pop
pusha
mov
fwait
scas
stos
cmp
int
xor
and
mov
jbe
push
mov
fisubr
jmp
idiv
sub
cdq
out
jge
pop
outs
jmp
push
sub
adc
stc
leave
sbb
xor
mov
dec
push
xor
pop
or
pop
icebp
es
sbb
cmp
sbb
push
sub
adc
mov
push
sub
dec
into
mov
or
push
cdq
and
fwait
ins
test
fisubr
mov
dec
in
mov
mov
shr
dec
add
add
push
push
or
cmp
(bad)
or
fs
outs
int3
push
out
xchg
and
sti
xchg
icebp
mov
jne
cmp
cmps
sbb
retf
pop
cmp
out
xor
sahf
dec
jae
add
lods
cmp
sbb
(bad)
(bad)
dec
stc
xor
popf
xchg
mov
into
lock
push
call
inc
dec
inc
popa
test
inc
xchg
jb
fild
and
mov
adc
and
push
push
and
xlat
pushf
or
mov
bound
jne
jg
mov
xor
jp
inc
mov
iret
fwait
xchg
inc
(bad)
cmps
call
pop
push
fnsave
lds
inc
inc
cmp
jbe
mov
and
mov
mov
push
sub
dec
movs
or
icebp
outs
std
mov
je
jg
mov
inc
aam
test
ss
(bad)
out
mul
xor
sub
add
rol
add
mov
daa
pop
js
and
cmp
(bad)
jecxz
mov
push
ficom
inc
stos
mov
cdq
inc
rol
aad
push
das
xchg
cwde
outs
jp
popf
push
mov
leave
adc
lock
cmp
push
sbb
repz
aam
sti
mov
mov
sbb
ret
xor
sbb
pop
sub
call
cs
cmc
cmp
push
mov
and
mov
into
mov
add
push
adc
shr
add
lods
mov
std
add
or
pusha
push
enter
xchg
jb
into
inc
repz
fldcw
or
mov
cmps
mov
aas
neg
inc
push
iret
out
dec
(bad)
mov
cmp
xor
pop
rcl
int3
jp
cmp
mov
push
mov
mov
or
lods
xchg
mov
(bad)
out
push
scas
int
or
(bad)
inc
adc
shl
mov
or
jmp
pop
cmp
loop
inc
lods
aad
jg
dec
cli
lea
ja
cmc
jge
sub
mov
outs
repnz
aas
cmps
mov
stos
stos
repnz
and
out
xchg
inc
push
test
outs
dec
cmp
dec
neg
mov
stos
je
xchg
jbe
pusha
add
stos
int3
test
in
ficom
lock
inc
test
fisubr
sub
mov
and
in
add
inc
test
aad
data16
into
adc
jge
mov
and
fxch
lock
and
xchg
test
ficom
jmp
mov
out
inc
jg
(bad)
icebp
jge
lods
std
movs
add
push
cmps
inc
es
movs
std
dec
cld
inc
(bad)
xor
popa
imul
aas
push
inc
push
es
sub
cmp
aas
push
jl
rol
cmp
sub
outs
jl
or
in
pusha
jmp
inc
out
push
adc
add
xchg
xchg
in
or
cld
push
mov
xor
pushf
scas
test
leave
pop
jmp
icebp
push
xlat
mov
stos
pop
jno
jmp
or
lea
cmp
push
and
or
mov
into
cmc
imul
loopne
popa
arpl
xchg
out
cmc
(bad)
or
dec
inc
jge
test
and
jb
xor
pop
inc
dec
mov
sbb
cmp
xor
repnz
push
int3
daa
pop
sub
fwait
pop
cs
ins
and
jnp
pop
push
xor
pop
rcr
mov
aaa
sbb
shl
sbb
jge
pop
adc
mov
js
outs
mov
jo
sub
mov
sub
push
data16
jo
pop
in
fimul
aas
outs
push
sahf
cmc
sub
inc
and
or
push
in
and
xchg
lea
pop
sti
inc
mov
xchg
push
xchg
cwde
sub
daa
out
xlat
test
push
pop
int
shld
lahf
retf
mov
push
ror
div
jnp
inc
and
mov
inc
fidiv
add
jne
mov
mov
xchg
sub
dec
xor
mov
sbb
(bad)
shr
sub
pop
je
mov
pop
push
adc
(bad)
in
fld
push
mov
aad
cmps
xor
arpl
xchg
sub
push
int3
xchg
not
idiv
mov
cmc
dec
and
mov
or
sub
lock
xor
test
mov
out
jnp
jmp
call
in
and
push
and
ret
dec
cmp
adc
imul
inc
pop
sti
push
shl
addr16
and
push
rcl
xlat
imul
imul
nop
inc
int3
cmps
aam
dec
and
fwait
push
dec
jmp
hlt
jle
nop
mov
ins
jnp
push
cmp
xchg
adc
out
pop
push
ja
xchg
out
mov
push
push
add
lock
jo
xlat
pop
es
repnz
mov
add
mov
inc
bound
mov
mov
inc
call
pop
repnz
fwait
lods
les
aad
inc
stc
sub
adc
retf
retf
in
adc
bound
or
pop
rcl
std
cmp
scas
rcr
retf
test
dec
sub
mov
cmp
push
pop
or
jne
xor
out
mov
xchg
aam
outs
fcom
in
pop
pop
mov
daa
and
or
or
sbb
fst
cmp
mov
outs
cmp
ss
dec
pop
sub
mov
sbb
push
push
mov
mov
add
jno
mov
cmp
push
in
in
cmps
dec
mov
or
dec
aas
add
dec
and
jmp
dec
cmp
popf
loopne
add
aam
ret
enter
in
adc
cmp
ds
sub
xchg
mov
dec
dec
(bad)
cmp
sub
sub
jae
seto
call
lods
xor
lods
mov
(bad)
sub
hlt
js
jmp
shr
cs
mov
pop
sahf
scas
inc
sbb
pop
mov
jl
in
sbb
xchg
jb
cmp
mov
sbb
adc
xchg
pop
dec
pop
or
mov
xor
jmp
cmp
aam
pop
inc
es
pop
stc
jb
jge
cwde
mul
loope
dec
push
test
leave
nop
ret
int
and
mov
nop
xchg
push
cmp
dec
xor
es
jle
inc
xor
imul
inc
xor
push
push
add
jno
aad
xor
mov
push
jl
and
out
push
call
test
jbe
or
mov
mov
push
cld
push
data16
shl
push
stc
cwde
jmp
ret
jae
stos
pusha
push
and
push
jnp
xlat
mov
loopne
cld
sub
aad
hlt
mov
(bad)
jae
call
mov
inc
call
movs
dec
gs
cmp
repnz
push
jnp
scas
pop
aas
popa
test
addr16
jnp
sti
pop
adc
and
jnp
xor
dec
push
xchg
adc
retf
dec
mov
in
sbb
int3
dec
out
add
cdq
test
shr
hlt
sbb
shl
mul
shr
xor
inc
or
jnp
test
mov
call
bound
jbe
sub
lds
mov
and
vmovd
add
mov
enter
push
jne
xor
jne
(bad)
outs
mov
aaa
lds
adc
stos
jecxz
lds
dec
call
jl
mov
adc
xchg
push
adc
cmps
dec
mov
call
retf
div
adc
rcr
std
mov
cmps
sub
popa
cmp
xor
xor
mov
pop
add
lods
mov
xlat
int3
lea
sub
adc
cld
cmp
jmp
mov
jmp
popa
adc
retf
movs
jle
inc
pop
or
lods
sbb
std
test
leave
pop
out
repnz
imul
jg
and
ins
retf
pop
dec
pop
call
pop
je
fisubr
push
lods
and
stos
lahf
test
ret
xor
lods
ins
loop
out
mov
mov
adc
xor
dec
int
aad
mov
push
pop
lds
fmul
xchg
movs
mov
into
cmc
adc
xchg
dec
add
jo
add
into
ret
addr16
sub
inc
scas
push
or
cmp
outs
ins
in
pop
enter
mov
mov
aam
out
mov
hlt
add
jge
shl
data16
mov
cmp
loope
(bad)
aad
clc
call
xchg
adc
imul
aam
push
xor
test
daa
lods
sub
rol
shl
retf
imul
test
cmovp
(bad)
shl
sub
jl
mov
arpl
test
data16
enter
mov
cmps
mov
and
or
jbe
sti
stos
add
mov
mov
out
adc
test
add
pop
(bad)
fwait
leave
(bad)
movs
lahf
shr
pop
ffreep
xor
push
jmp
cmp
lods
lock
cmp
mov
add
pop
test
dec
out
scas
jge
push
inc
mov
(bad)
icebp
cmc
fldenv
add
jae
psrlq
xor
mov
sub
jnp
inc
in
(bad)
pop
fnsave
mov
cmp
movs
cmp
dec
sub
add
mov
add
bound
push
sbb
sete
inc
lock
imul
inc
mov
scas
lahf
int
ret
and
xchg
and
jae
xlat
mov
jmp
popf
mov
sub
(bad)
icebp
or
pop
scas
int3
sub
xchg
cmc
pop
ret
movs
and
in
(bad)
mov
adc
cmc
xchg
je
jecxz
repnz
add
mov
mov
mov
daa
leave
nop
retf
test
imul
inc
inc
push
mov
cmp
adc
cs
mov
fidiv
daa
or
movs
clc
pop
jne
enter
cwde
in
enter
cmp
rcr
bound
and
pushf
repz
sbb
cmp
cmp
rcr
mov
jle
sub
adc
xor
jmp
xor
mov
lods
xor
lea
inc
adc
in
dec
cmp
fiadd
push
inc
stos
mov
loopne
cmp
mov
les
mov
in
es
xchg
jns
test
movs
mov
xchg
sbb
arpl
out
cmps
jl
jl
call
jp
xchg
sahf
pop
pop
inc
cmp
out
mov
jle
xchg
xor
daa
pop
mov
push
pop
cmps
leave
lds
pop
and
mov
in
cmp
mov
sub
in
xchg
imul
pop
jne
sar
adc
sub
sub
cmp
add
fs
sub
fnstenv
jmp
mov
jg
sbb
movs
mov
adc
stc
mov
sar
push
lsl
dec
dec
jbe
fdivr
dec
inc
cld
dec
adc
sub
call
ficom
loop
add
sub
cmp
mov
xlat
mov
lock
mov
push
iret
xchg
test
add
xchg
xor
and
addr16
imul
lea
jmp
fs
stos
lds
(bad)
push
fimul
push
mov
mov
or
sub
outs
push
jmp
daa
out
and
mov
sbb
ins
and
into
mov
pop
call
cli
(bad)
stc
(bad)
and
mov
fst
adc
mov
dec
repz
mov
adc
fidivr
out
or
sti
jae
fisub
mov
stos
jmp
cwde
mov
fwait
pop
hlt
aad
cmc
sbb
sbb
in
rol
jmp
add
(bad)
(bad)
into
imul
ja
push
clc
inc
hlt
or
or
push
and
mov
add
push
dec
sbb
jmp
vmwrite
mov
lds
mov
adc
jbe
ror
rol
or
xor
int3
int3
cmp
cmc
out
lds
or
sub
push
aam
hlt
xchg
mov
(bad)
out
scas
push
mov
xchg
(bad)
mov
jmp
pop
sbb
xchg
push
sahf
ins
jl
outs
jmp
mov
add
inc
ror
jmp
sub
xor
addr16
movs
push
sub
mov
inc
int
or
adc
das
dec
mov
or
loop
xor
dec
aaa
jmp
sub
dec
or
sbb
cmp
ret
push
das
mov
dec
test
and
mov
ficomp
adc
mov
or
cmps
(bad)
fistp
sbb
push
iret
ror
adc
imul
push
push
mov
out
dec
mov
rcl
dec
inc
iret
mov
xor
xchg
jg
inc
jmp
iret
bound
sahf
pop
out
fwait
jle
xor
rol
stc
cmp
in
inc
std
ret
sahf
mov
sbb
xchg
jno
movntps
ins
movs
std
fstp
bound
pop
jae
xchg
call
cdq
shr
out
push
xlat
xor
outs
mov
bound
or
push
jno
cmp
jmp
pushf
sbb
dec
or
push
fstp
mov
fcmovnb
and
mov
cdq
fnsave
pop
mov
mov
setge
sub
sbb
(bad)
iret
aam
inc
cwde
aad
mov
mov
les
jnp
aaa
js
cwde
sar
popf
sub
mov
sar
dec
dec
fiadd
and
push
repnz
test
pop
adc
xor
xchg
cmps
fwait
retf
in
shl
add
xchg
sar
scas
mov
sub
mov
xor
fs
sbb
mov
in
mov
jle
xchg
sbb
mov
movs
outs
(bad)
xchg
pushf
pop
fs
adc
cwde
call
dec
dec
sti
lds
pop
js
fcomp
pusha
jo
inc
xchg
dec
add
int3
xchg
mov
(bad)
or
aas
push
push
or
retf
ins
jl
rcr
or
stos
pop
mov
add
add
jecxz
adc
inc
xchg
lahf
mov
shl
or
xchg
xchg
mov
mov
inc
imul
add
cdq
sub
cmp
push
dec
sub
pop
sub
(bad)
sbb
aad
nop
scas
xlat
sub
push
int3
ins
jno
pop
nop
repz
sbb
and
addr16
stos
repnz
into
mov
mov
test
add
movs
jmp
shr
xor
dec
sbb
mov
pop
retf
push
mov
xor
shr
call
xchg
inc
add
dec
fisub
adc
push
inc
mov
shl
pop
cmp
outs
xor
jo
repz
fcmovnu
jne
xor
mov
pop
pop
dec
lods
sbb
rol
mov
mov
sbb
sub
inc
mov
lahf
call
loopne
and
mov
inc
pop
cwde
mov
cwde
ror
push
mov
movs
adc
or
in
mov
push
mov
mov
sub
out
add
pop
jns
inc
jo
sar
aas
mov
push
fiadd
neg
aam
sub
mov
fld
xchg
push
(bad)
sar
cmps
xorps
push
xchg
call
push
ret
jmp
lock
jae
and
adc
clc
adc
and
jp
and
in
and
cmp
pop
adc
test
fidivr
push
fs
cmp
shld
imul
mov
dec
mov
sub
push
out
dec
or
add
xlat
outs
and
inc
cli
ror
xchg
enter
pushf
xchg
inc
sbb
fwait
mov
mov
test
sub
xor
mov
js
cmp
push
add
jmp
push
xchg
out
mov
inc
loopne
or
cwde
(bad)
iret
shl
fst
and
mov
rol
sub
std
popa
and
push
sub
popa
lods
cmp
push
add
mov
jae
(bad)
fst
js
int
pop
cmps
inc
mov
jno
call
cmps
sub
sbb
fdivp
jecxz
fisttp
pushf
pushf
not
and
aam
out
fwait
sub
ds
clc
and
sub
adc
jns
jmp
push
fadd
sub
in
push
retf
cli
add
in
out
mov
cmp
mov
inc
add
fstp
dec
jmp
hlt
dec
stc
dec
out
add
movs
popf
out
jne
xchg
mov
or
inc
stc
mov
xchg
popa
add
mov
xor
adc
sub
retf
into
sbb
sub
and
sets
inc
sbb
dec
rcl
leave
popf
das
pop
and
cmp
jno
fcomp
xchg
repz
jae
xor
sbb
(bad)
xchg
jg
mov
cmp
xchg
add
xchg
cmp
push
mov
push
sti
xor
stos
push
sbb
sub
sub
idiv
inc
iret
mov
dec
inc
out
or
add
test
adc
lahf
retf
aam
xchg
dec
into
adc
pop
pushf
lods
push
sbb
jnp
daa
and
xchg
or
rol
ds
push
mov
add
jp
cmp
in
stos
cmp
sub
stos
addr16
aad
adc
pop
mov
xor
fisub
jnp
rcr
hlt
jmp
xchg
sub
shr
mov
mov
ror
inc
pop
xchg
push
scas
and
cmp
test
push
ds
iret
and
shl
or
mov
inc
rcr
cmp
cmps
xchg
scas
xor
addr16
lods
and
cli
mov
test
pop
sbb
imul
push
outs
rcr
dec
adc
inc
mov
push
ror
outs
xchg
lahf
movs
push
repnz
cmps
inc
jmp
pusha
sub
std
push
(bad)
fild
setg
lods
ss
test
cld
shr
(bad)
adc
not
push
sbb
retf
addr16
fldenv
mov
mov
int
sti
int3
loope
std
(bad)
jmp
daa
loop
pop
nop
out
cmps
pushf
pop
or
jmp
leave
mov
neg
mov
stc
rol
ret
and
or
clc
inc
frstor
cmps
mov
stos
pop
mov
adc
pop
push
gs
in
imul
xchg
push
mov
imul
stos
inc
cmp
cdq
icebp
mov
retf
jg
push
int3
and
out
bound
inc
mov
out
xchg
std
xor
in
shl
inc
xor
(bad)
stc
push
stos
push
sahf
adc
mov
out
lahf
lods
jns
inc
xchg
pushf
dec
daa
xor
pop
and
call
sub
jno
arpl
fldenv
push
hlt
scas
scas
and
or
loop
xchg
out
sub
add
jg
pushf
stos
lahf
push
cmp
clc
and
fsubr
pusha
pop
pop
sub
mov
lods
sbb
out
test
js
retf
mov
jg
xchg
add
inc
pop
shr
and
out
sub
xlat
ja
enter
test
sar
in
or
pop
xchg
ror
fnstcw
and
push
mov
ret
popa
retf
sbb
(bad)
fs
cmps
and
push
(bad)
in
mov
xor
stos
scas
jb
rol
or
jmp
or
jmp
aam
mov
scas
mov
(bad)
sub
sar
inc
dec
mov
in
and
add
xor
rcl
and
jae
fdivr
in
pushf
jbe
sbb
sub
lods
mov
push
fldcw
test
mov
adc
or
mov
mov
mov
sbb
repz
sub
inc
and
add
add
mov
ins
push
push
jae
sbb
or
cmp
es
js
outs
xchg
call
sub
dec
sbb
sub
sbb
sub
or
mov
xor
pop
push
pop
iret
cmp
lods
xchg
outs
scas
arpl
retf
ror
mov
repnz
push
and
lahf
int3
les
sbb
inc
xchg
dec
dec
retf
add
scas
xor
out
dec
xchg
add
call
cmp
fdivp
call
call
pop
pop
fsub
int3
xor
push
sub
jp
and
jecxz
adc
jnp
int
pusha
mov
mov
sub
xor
das
xor
int
adc
mov
repz
cmp
mov
pop
cli
and
rcl
and
and
ds
sbb
mov
push
add
test
jne
sub
mov
cmps
mov
cwde
enter
xor
scas
shl
sub
mov
and
pusha
xchg
ja
imul
sbb
inc
add
outs
hlt
pop
cmp
call
mov
sbb
jmp
ficomp
mov
fidiv
pop
in
sbb
out
(bad)
out
(bad)
sbb
daa
mov
scas
ret
daa
out
push
inc
clc
scas
and
retf
nop
scas
inc
and
enter
pop
mov
aad
push
xor
xchg
push
loope
jecxz
aas
xchg
pop
inc
adc
add
data16
fstp
ins
xchg
mov
repz
adc
jae
(bad)
xchg
cmp
xlat
movs
hlt
xchg
in
jne
jmp
test
dec
lds
jno
clc
jo
shl
inc
inc
jmp
call
push
fldl2t
shl
(bad)
lahf
das
jbe
and
jo
or
push
sbb
je
in
fdivr
cmp
(bad)
out
pminub
mov
iret
(bad)
cli
outs
(bad)
cmps
(bad)
pop
jmp
pop
inc
or
sub
jmp
adc
jecxz
cli
lods
inc
xor
sbb
pop
pusha
rcl
idiv
push
and
lods
fbstp
adc
pop
and
gs
(bad)
in
js
and
sub
jne
cmps
sbb
std
push
into
pop
push
into
adc
add
scas
xor
pop
lods
dec
inc
mov
sbb
mov
mov
cmc
push
or
inc
xchg
xchg
(bad)
jnp
test
jns
(bad)
xor
fcomp
repz
jg
arpl
scas
sbb
out
arpl
jns
push
cmps
pop
arpl
leave
cdq
sbb
add
stos
lods
hlt
in
adc
and
xor
mov
in
jne
mov
pop
pop
test
mov
int
pop
dec
jo
mov
mov
mov
mov
inc
dec
sbb
int
sbb
jl
out
mov
movs
cli
cmps
jecxz
aaa
outs
xchg
pop
(bad)
push
jmp
mov
sbb
push
stos
cmp
sar
les
pop
mov
dec
jg
stos
loope
bound
bound
test
pop
scas
inc
stos
aaa
mov
inc
mov
push
shl
call
dec
cmp
pop
xor
mov
add
and
js
lock
pop
jmp
adc
es
imul
add
repnz
cmp
rcr
es
add
lds
test
xchg
lods
xchg
lds
dec
cwde
push
fbstp
das
mov
loop
push
inc
adc
pop
xchg
mov
dec
mov
jp
pop
pop
loopne
es
jge
test
sub
out
idiv
paddsb
ss
test
aaa
xchg
push
aad
push
xchg
retf
push
es
loopne
push
or
loopne
adc
pop
xchg
pop
cmp
jle
(bad)
mov
jl
xchg
ds
out
cmp
ins
je
imul
in
rol
adc
pushf
movs
jns
and
je
xor
adc
lods
call
push
(bad)
dec
call
xor
(bad)
sub
push
stc
cmps
(bad)
std
outs
gs
mov
sbb
mov
dec
jae
repz
ret
or
xchg
pop
sub
int
pop
call
cdq
das
mov
scas
test
mov
outs
mov
sbb
fwait
out
pop
mov
ror
mov
icebp
nop
leave
dec
cli
or
ret
rcl
daa
icebp
cmp
mov
mov
sahf
mov
call
daa
mov
inc
imul
sbb
cmps
test
sub
and
fisttp
repz
repz
and
sub
adc
mov
inc
jge
imul
test
xchg
sub
mov
mov
inc
sar
loopne
fnstcw
push
popf
shr
sbb
adc
pop
jae
test
movs
adc
sbb
es
test
mov
or
mov
sub
cs
pop
or
sub
xchg
rol
fcmovb
dec
sbb
add
or
gs
ss
mov
sbb
pop
add
fwait
aas
mov
inc
pop
movs
push
retf
sbb
mov
push
(bad)
or
add
jae
push
jmp
enter
shl
inc
ror
cmc
pop
mov
ins
pop
jge
repnz
fsub
xor
jp
in
leave
mov
pop
jmp
loopne
mov
ret
or
cwde
mov
fcomp
cwde
outs
and
add
pop
mov
xchg
popf
imul
fcom
and
xor
clc
movs
sbb
add
xor
jmp
inc
lahf
fdiv
xor
movs
clc
aas
addr16
mov
outs
in
mov
push
jecxz
sub
jnp
lods
fnstsw
ret
xchg
(bad)
mov
cmp
ins
popf
and
addr16
(bad)
repz
retf
test
xor
stos
push
enter
in
pop
and
push
ficomp
xchg
add
xchg
fcmovb
pavgw
adc
push
push
dec
adc
mov
out
arpl
inc
jecxz
shl
add
cmp
xchg
mov
mov
inc
adc
add
rcl
int3
mov
fimul
in
or
pop
push
inc
add
(bad)
mov
cmc
pop
cmp
jb
push
(bad)
stc
or
jle
test
(bad)
adc
inc
std
pop
mov
rcl
leave
add
or
or
xor
sbb
mov
push
sub
dec
cmps
fdivr
mov
js
mov
nop
push
lea
fmul
aad
inc
mov
loop
mov
imul
dec
sbb
(bad)
fld
js
retf
mov
jp
sbb
cld
sub
pop
shl
int
mov
cmp
jl
adc
js
mov
pop
or
lods
xor
adc
aad
or
and
daa
xchg
or
and
(bad)
imul
cmp
mov
cmps
add
pop
mov
(bad)
ja
push
mov
xor
test
cmp
pop
or
mov
icebp
(bad)
(bad)
xchg
xchg
imul
test
push
inc
add
pop
ja
mov
inc
pushf
jg
add
and
fwait
cmp
fisttp
adc
popa
mov
out
movs
rol
jp
repnz
mov
ds
js
popf
pop
and
dec
push
jnp
cmp
into
cdq
out
popa
inc
mov
out
sbb
(bad)
jno
adc
add
test
ss
das
cmps
pop
push
cmps
dec
cmp
stos
test
cmp
cs
lods
loope
adc
dec
mul
and
or
(bad)
cwde
in
jp
fcmovnbe
rcl
jb
out
jmp
out
loope
addr16
test
add
imul
imul
call
sqrtps
pop
or
mov
fstp
mov
inc
sub
int3
mov
mov
mov
push
ja
bound
rcl
stos
sahf
in
aad
or
cdq
loop
xor
(bad)
dec
sub
and
jmp
xchg
call
push
gs
add
fcom
jb
ins
jecxz
sbb
xor
add
aad
popf
loope
or
cld
lea
(bad)
popf
adc
jns
pushf
call
shl
popf
push
push
or
adc
xchg
pop
(bad)
rcl
fiadd
and
pop
inc
call
lock
fcomip
out
sub
xor
and
jmp
push
(bad)
ror
xchg
sbb
push
dec
mov
je
daa
ds
fstp
xchg
shl
or
mov
jbe
jl
pop
aas
xchg
sbb
in
mov
ret
push
aas
mov
inc
pop
lahf
mov
lahf
rcl
adc
or
les
mov
adc
mov
pop
sub
nop
push
lea
es
cmp
aas
push
jge
pushf
fcmovu
dec
xor
push
fsubrp
cmc
mov
sub
iret
fwait
ret
and
test
lods
and
rol
enter
inc
rcl
jg
data16
les
mov
push
loop
pop
mov
mov
cmp
xchg
xchg
ins
out
jnp
in
into
das
and
jle
enter
(bad)
es
stc
retf
jp
inc
inc
ja
sbb
outs
jo
mov
inc
and
add
inc
jle
pop
dec
inc
test
test
sub
push
clc
jl
scas
pop
or
aas
xor
js
ins
sub
or
movs
mov
sub
stc
mov
and
and
scas
fnstsw
outs
push
mov
inc
pop
loope
aaa
fisubr
inc
ds
mov
xlat
sbb
cld
mov
cmp
(bad)
push
xchg
pushf
adc
js
sbb
jns
mov
test
cmc
mov
push
xchg
inc
jmp
xor
or
jmp
sbb
jge
pop
xor
jp
push
jmp
shl
(bad)
inc
shl
xor
sbb
fld
fstp
or
cmps
call
jmp
pusha
adc
cmp
in
add
fiadd
mov
ret
dec
xor
(bad)
bound
and
mov
adc
call
fisubr
imul
xor
adc
test
test
test
pop
fnstcw
lods
mul
jae
and
call
dec
inc
aaa
fstp
xchg
(bad)
mov
jg
jle
jns
not
stos
lahf
jl
sbb
leave
and
adc
push
mov
imul
dec
rol
cmp
out
jp
cwde
das
push
mov
ror
fwait
aad
jmp
out
mov
cs
test
das
stc
sbb
or
push
repnz
push
pusha
out
leave
and
fs
neg
push
mov
cmp
inc
test
dec
jmp
xchg
rcr
jne
xlat
jmp
sub
adc
int3
jmp
imul
stos
lods
hlt
jl
or
test
jmp
xchg
jno
jo
or
rcr
push
jbe
push
dec
repnz
xor
or
dec
or
aad
enter
fwait
push
push
das
(bad)
mov
cli
xchg
movs
loope
adc
out
cmps
and
test
dec
in
xchg
inc
adc
cmp
sub
mov
mov
aas
add
add
out
push
hlt
cmp
cmp
sbb
pop
sbb
sbb
addr16
mov
mov
mov
cdq
out
mov
test
mov
sub
ret
jmp
hlt
loopne
aas
(bad)
cwde
cmp
clc
xchg
mov
jae
jmp
inc
jge
(bad)
dec
inc
jb
fwait
popa
jnp
xor
(bad)
(bad)
mov
cmp
xchg
imul
mov
movs
dec
out
push
or
xor
sub
xchg
popa
pop
imul
sub
into
jp
pop
std
popa
aam
sbb
cmp
jae
loope
xchg
jo
jg
(bad)
clc
sbb
stos
btc
fs
pop
bound
mov
pushf
leave
mov
mov
jns
cmp
pop
outs
ins
push
mov
cli
es
lock
sub
xchg
and
cwde
stos
(bad)
jb
inc
popf
sbb
in
fistp
scas
js
mov
jne
sbb
js
mov
and
in
adc
dec
mov
xchg
aas
icebp
test
stc
mov
sub
scas
and
cmp
int3
aas
lock
push
fwait
outs
mov
clc
or
(bad)
pop
push
fisttp
andps
mov
inc
add
call
imul
sub
(bad)
cli
outs
into
mov
sar
xor
xor
fwait
mov
in
and
lahf
js
push
rcr
mov
into
mov
sub
call
inc
mov
outs
and
int
pop
std
les
sub
push
jo
sbb
das
or
jecxz
adc
sub
(bad)
or
xchg
xor
int
enter
xor
dec
in
push
pop
jo
mov
test
outs
mov
pop
test
jle
pop
inc
aam
retf
mov
xcrypt-ctr
cmps
fucom
mov
int3
xor
jb
aas
fcmove
(bad)
in
mov
je
inc
iret
sbb
stc
scas
add
cmp
mov
mov
fild
cmp
jmp
xchg
aad
mov
sbb
(bad)
mov
out
popf
sbb
ins
jmp
xchg
pop
mov
ja
push
ds
dec
out
(bad)
push
popa
mov
clc
cmp
xor
retf
fidivr
aad
repz
cmp
arpl
inc
arpl
add
push
push
add
cwde
pop
cmp
out
imul
dec
ss
bound
mov
out
stc
hlt
adc
or
(bad)
mov
dec
mov
ficom
adc
lea
int
inc
cld
xchg
mov
or
xchg
xchg
pusha
aas
push
add
mov
repz
lea
mov
cmp
cmc
test
pop
fimul
push
repz
test
xor
xchg
lds
push
cs
push
or
mov
in
pop
je
and
mov
fdivp
std
pop
retf
sub
mov
xchg
lds
dec
mov
push
xchg
dec
jecxz
push
cmp
mov
push
arpl
adc
iret
in
pop
test
stos
icebp
sub
cmp
mov
stos
xchg
jle
jp
xchg
sbb
mov
sbb
mov
mov
inc
push
div
scas
inc
jle
xchg
(bad)
mov
enter
cli
(bad)
shl
or
call
out
in
enter
cmp
sub
jmp
push
fist
pop
in
pop
imul
sahf
aaa
push
cdq
mov
int3
push
mov
inc
ja
or
cld
into
sti
adc
xor
inc
xchg
sbb
imul
dec
adc
hlt
retf
(bad)
dec
sbb
outs
scas
addr16
mov
sub
mov
mov
mov
imul
out
mov
jno
pop
pop
or
inc
push
cmc
mov
bound
push
cmp
cdq
or
jnp
inc
aaa
mov
and
lds
lahf
loop
sbb
sub
inc
push
adc
sub
mov
int
out
mov
mov
and
lahf
or
data16
adc
adc
ja
xchg
push
(bad)
jae
dec
hlt
and
jmp
mov
test
out
mov
jmp
push
je
aad
sub
push
pop
stos
fcomp
mov
test
or
jns
cmp
or
fbstp
out
retf
adc
push
call
cs
adc
cli
dec
mov
test
cmpps
(bad)
dec
in
ret
xchg
call
clc
shr
mov
fisub
cmp
xor
mov
mov
dec
and
jo
dec
je
push
shl
es
cli
jmp
xchg
xor
push
push
lds
xchg
mov
pop
loop
pop
lods
call
mov
jb
icebp
mov
jge
call
retf
aas
mov
pop
stos
inc
ja
inc
mov
jp
jmp
mov
xor
sbb
test
xor
nop
pop
mov
push
sub
and
sar
and
test
cmp
jb
fbstp
out
add
jle
sahf
(bad)
lods
jmp
cmc
lock
adc
adc
xor
movs
mov
mov
jge
test
ffree
or
mov
les
outs
sub
mov
gs
ins
fucomp
push
les
xchg
inc
unpckhps
fxch
mov
inc
(bad)
mov
out
sub
mov
jno
pop
ret
lock
jmp
cmp
cmc
sbb
and
inc
mov
xor
leave
in
dec
cmc
outs
sbb
jno
dec
das
adc
jno
pop
sbb
retf
cvtpi2ps
pop
inc
mul
outs
cmps
add
jne
push
scas
movs
jo
repz
inc
iret
adc
test
and
out
jl
xor
xor
mov
cmps
out
int
mov
inc
jbe
mov
inc
push
ins
outs
mov
adc
jp
adc
or
or
pop
(bad)
jmp
es
or
mov
add
fcomp
xchg
imul
call
loope
pop
js
push
repnz
int
mov
xchg
test
or
inc
cmp
push
push
mov
es
jmp
add
jecxz
jecxz
add
adc
movs
jecxz
leave
and
or
mov
pusha
std
aad
sar
xchg
push
ficomp
rol
icebp
loop
xchg
iret
dec
sahf
out
push
jecxz
cmps
xor
push
xor
dec
jae
hlt
adc
into
sti
add
xchg
icebp
lock
mov
stos
scas
inc
mov
mov
jb
adc
jmp
daa
sub
or
les
sbb
dec
test
(bad)
ins
dec
ret
push
leave
aas
nop
cmp
sbb
dec
jecxz
iret
int
out
jg
daa
scas
xchg
das
mov
leave
leave
mov
loopne
sub
mov
ins
imul
pop
je
push
add
mov
call
jo
mov
cdq
push
sub
es
hlt
mov
iret
es
and
dec
adc
(bad)
cmp
repz
(bad)
cmps
mov
xchg
inc
jbe
jge
shl
hlt
enter
adc
jmp
test
push
movs
or
int3
ss
mov
enter
push
and
add
ret
test
cdq
jmp
push
or
cwde
push
nop
xchg
sub
test
outs
add
or
imul
inc
add
je
stos
add
mov
pop
addr16
inc
xchg
mov
add
lock
int3
out
jae
add
xchg
cmp
popf
cld
mov
mov
shl
lds
enter
inc
push
test
dec
cmp
fxch
dec
or
mov
push
xchg
call
mov
xchg
mov
int3
mov
mov
addr16
mov
dec
push
jmp
shl
dec
inc
or
test
aaa
mov
jnp
(bad)
int3
fcomp
xchg
mov
pop
push
rcr
pusha
inc
scas
sti
scas
aad
push
std
fst
sub
jl
mov
mov
jmp
jno
scas
in
loope
loop
daa
xchg
cmp
shl
sub
push
sti
clc
push
out
inc
push
sbb
test
xchg
dec
loopne
fstp
xchg
xor
stc
test
xor
mov
sub
mov
adc
test
mov
jp
std
mov
mov
fnstcw
nop
arpl
push
int
sub
push
mov
and
sbb
inc
xchg
fwait
jl
sbb
addr16
dec
dec
jno
movs
int
add
das
sbb
pop
push
div
js
outs
movs
es
sub
inc
ins
repz
movs
pop
jno
movs
cs
push
icebp
leave
je
sbb
outs
fcomp
cwde
and
stos
add
jnp
ficomp
cmps
scas
sar
xor
dec
ror
scas
popf
pop
mov
out
ins
fbstp
mov
inc
sub
sub
loopne
outs
lds
and
rol
pop
mov
inc
cs
dec
inc
stos
cmps
inc
add
cmp
mov
mov
lods
fwait
and
call
cs
retf
mov
outs
add
jns
sbb
pop
mov
ret
lds
loope
fcom
lods
add
call
pop
add
lds
inc
retf
cmp
cmp
jne
ret
mov
jmp
adc
stos
fstp
inc
pop
pop
xchg
(bad)
cmps
pop
out
adc
pop
movs
dec
aad
jne
xchg
aaa
adc
mov
aaa
jmp
or
lock
xchg
dec
and
xor
sbb
arpl
jle
jae
sub
sub
rcl
fcmovnbe
mov
sub
daa
sbb
popf
out
xchg
mov
cwde
xor
push
cdq
in
mov
jb
sbb
jmp
adc
push
push
icebp
jnp
call
push
mov
push
pop
leave
xchg
ins
mov
test
push
in
mov
test
retf
aam
mov
adc
js
dec
sub
and
ds
(bad)
out
jnp
and
mov
add
scas
ror
adc
jmp
pushf
pop
sub
out
inc
pop
data16
adc
pop
repnz
cmp
mov
ror
mov
inc
push
popa
test
rcr
ins
scas
mov
mov
enter
mov
sar
adc
inc
pop
mov
mov
xchg
adc
push
je
call
cmp
dec
repz
adc
out
push
push
sub
jbe
cmp
test
jno
jp
cwde
mov
stos
pop
pop
sub
xchg
dec
(bad)
xor
mov
mov
mov
mov
cmp
cmps
add
daa
inc
xor
ret
xchg
mov
mov
in
xlat
jmp
pop
loope
sbb
arpl
jg
push
or
inc
adc
ss
xchg
push
dec
lods
stos
add
cmp
jne
fst
push
fst
(bad)
fadd
ins
cmps
call
mov
sahf
add
lods
neg
push
xchg
mov
mov
xor
lock
cmp
popf
stos
mov
in
movs
pop
jmp
fild
loope
lods
in
sub
outs
ins
push
xor
mov
mov
dec
jns
xchg
push
jno
je
movs
int
sub
int3
mov
ret
iret
neg
adc
idiv
cld
or
data16
push
jae
or
imul
pop
adc
dec
sub
jae
cmc
out
mov
pop
ret
or
sbb
test
cmp
mov
sti
ins
cld
pop
jb
adc
cmp
mov
push
mov
scas
imul
sbb
pushf
loopne
jno
dec
retf
pop
push
mov
or
imul
mov
add
out
ret
dec
out
test
sbb
pop
xchg
ficom
jp
cmp
std
or
inc
cld
jge
popa
sahf
aaa
mov
or
xchg
out
inc
mov
sahf
or
cld
retf
sub
dec
xor
and
mov
mov
mov
xchg
sar
imul
call
xchg
pushf
fstp
and
fldenv
leave
and
ja
mov
xor
xor
sahf
ins
aas
jo
adc
mov
mov
jl
das
pop
jb
aaa
inc
jae
pop
dec
dec
and
fucomi
ds
call
nop
int
sbb
out
adc
jmp
dec
(bad)
pop
shl
jge
out
jg
inc
xchg
xor
inc
sub
add
sbb
mov
pop
out
sbb
ins
daa
ins
daa
rcl
jg
push
jae
leave
add
jmp
cmp
mov
or
mov
jg
(bad)
out
jne
repnz
push
rol
fstp
popf
retf
aas
xchg
and
out
addr16
adc
adc
je
iret
lahf
inc
ins
mov
bound
jo
xlat
out
outs
jne
and
adc
and
push
(bad)
lods
call
dec
inc
push
das
add
cmp
mov
mov
aam
aaa
ja
(bad)
add
xor
cdq
mov
fistp
sbb
pop
cli
pop
or
xchg
in
adc
and
call
xchg
jp
retf
hlt
jecxz
lock
mov
rcl
out
xor
mov
xlat
xchg
adc
cld
mov
call
jp
adc
fidiv
pop
xchg
adc
repz
xchg
adc
xchg
fwait
pop
mov
shl
mov
stos
add
lds
adc
lods
pop
cs
int3
jle
inc
call
pop
jl
inc
sub
jmp
and
mov
pop
and
mov
scas
or
leave
and
push
lock
mov
push
mov
inc
mov
push
aas
bound
xor
fdivr
jge
dec
out
mov
cmc
xor
push
jmp
push
rcl
cmp
sub
test
pminsw
fdivr
pushf
jb
aas
fistp
sub
mov
je
sub
js
xchg
outs
in
and
ins
fidiv
repnz
mov
out
push
and
lahf
mov
cmp
sbb
into
and
int3
(bad)
adc
jmp
outs
call
pop
or
lock
test
rol
data16
mov
cmps
sub
loope
xlat
cli
mov
and
repz
cli
test
ficomp
sbb
(bad)
rol
jp
jno
xchg
les
imul
push
jnp
lods
sahf
call
jne
retf
xor
sti
call
fdecstp
inc
ret
inc
outs
lahf
or
ds
clc
jbe
retf
sbb
js
(bad)
ror
ins
cmc
repz
jae
or
call
ss
btr
test
iret
dec
cmp
jns
pop
fdiv
cmps
sub
xchg
pop
sahf
fldcw
pop
xchg
and
jmp
(bad)
sti
pop
xchg
leave
mov
pop
test
sub
push
popa
add
xor
in
mov
int3
mov
mov
sub
lock
push
xor
cwde
scas
ss
jge
or
jnp
retf
add
push
xor
arpl
sbb
aaa
gs
push
jbe
xor
fdivrp
ss
das
retf
call
(bad)
dec
pop
pop
nop
in
adc
stos
stc
pop
fs
mov
lock
iret
icebp
fdivrp
and
dec
or
nop
pop
test
aaa
dec
out
das
cmps
dec
inc
cli
mov
push
pop
mov
add
adc
mov
jnp
cmp
shr
call
jno
clc
pop
fist
cdq
retf
(bad)
pop
lds
sub
mov
retf
xchg
xor
cwde
loop
jmp
pop
mov
jp
mov
jns
xor
sbb
aas
adc
popf
cmp
mov
mov
ins
sub
cld
lds
mov
ret
pop
or
sub
xor
loopne
and
xchg
fs
aas
cld
arpl
pushf
sti
mov
fstp
dec
dec
add
into
xchg
pop
dec
add
pusha
inc
mov
rcl
adc
xchg
in
mov
jecxz
dec
leave
jecxz
out
dec
or
scas
xor
int
fcmove
mov
inc
out
test
and
push
xchg
int3
fcomp
sub
pop
or
pop
xchg
cdq
dec
mov
cmp
adc
pushf
mov
push
inc
jecxz
add
push
fild
sbb
xchg
xchg
loopne
call
and
nop
fcmovne
sub
push
mov
mov
inc
cmp
div
in
ret
fdivrp
in
push
lahf
cs
pop
popf
enter
add
push
ss
mov
sahf
repz
lahf
inc
inc
mov
mov
sub
pop
or
mov
pop
jecxz
mov
je
or
popf
jecxz
loope
jbe
out
or
mov
out
jo
es
push
leave
jo
sbb
(bad)
rol
adc
pusha
shr
jl
cmp
adc
mov
lock
jmp
gs
sbb
mov
cld
movs
mov
push
sub
mov
aas
pop
jno
adc
stos
lds
rcr
lea
ss
mov
adc
xor
jmp
sbb
push
stos
mov
push
cmp
test
cmps
ret
stc
cmp
xchg
mov
std
retf
cmc
jbe
inc
dec
mov
xchg
push
adc
mov
push
imul
or
and
mov
sub
ins
pushw
or
stc
pop
fisub
pop
mov
lahf
ins
xor
not
std
sub
stos
pop
jbe
test
cdq
(bad)
push
in
adc
(bad)
jne
ins
mov
lods
pop
cli
enter
xchg
out
inc
inc
test
adc
cs
mov
outs
div
jg
mov
sti
ror
push
jp
fisubr
cli
(bad)
sbb
mov
mov
inc
sbb
mov
lahf
sub
shl
jmp
cli
pusha
push
fadd
iret
das
sti
inc
shl
xchg
adc
iret
pop
xchg
jae
pop
dec
pop
rol
mov
cmps
mov
movs
push
mov
sbb
rcl
pop
(bad)
ror
ds
sti
jl
push
popf
ds
cmp
retf
mov
call
add
mov
(bad)
cmp
jo
sbb
add
push
xlat
mov
inc
ret
sbb
(bad)
jnp
or
jmp
cmps
mov
(bad)
lock
pushf
cmp
xchg
imul
(bad)
adc
or
cli
jne
inc
jg
std
jbe
popa
xchg
fwait
rcl
and
push
bound
fild
dec
fiadd
jp
inc
ss
mov
mov
ss
mov
sbb
aam
mov
cmp
sti
jp
int
arpl
mov
jp
jae
inc
dec
sub
cmps
shl
ret
inc
dec
sbb
cmps
(bad)
xor
out
pushf
shl
jb
cmp
sbb
stc
dec
(bad)
sub
movs
push
dec
add
mov
xchg
xchg
int
lds
loopne
aam
adc
cmp
cmps
or
repz
dec
loope
and
imul
call
xlat
fsubr
push
ins
in
shl
stos
test
lock
popf
sub
dec
xchg
adc
jae
fcmovnb
mov
add
jnp
in
imul
inc
push
fist
push
shr
adc
int
imul
(bad)
stc
outs
mov
sub
jecxz
jecxz
ds
jge
lock
dec
sub
das
cmp
int3
inc
sbb
and
rep
xchg
jns
pop
sbb
icebp
xchg
sbb
aad
popf
dec
cdq
sub
int
mov
shl
adc
sti
cmps
mov
adc
repnz
jb
aaa
fisub
pop
push
cmps
or
call
loopne
test
push
pop
cmps
leave
jg
lds
mov
lea
fisub
xchg
mov
add
test
mov
dec
dec
xchg
sub
xchg
mov
ror
aaa
jnp
out
bound
fnstenv
aas
add
lock
sub
or
out
cmp
(bad)
jmp
inc
(bad)
(bad)
jns
les
nop
sbb
xchg
xchg
ret
lock
retf
xchg
xor
sbb
jmp
inc
outs
lock
xchg
add
sbb
test
xchg
xor
or
mov
pop
pop
ret
inc
das
loope
shl
pushf
cwde
mov
sub
mov
test
mov
scas
arpl
repz
inc
lods
sub
or
pop
sar
jmp
add
xor
pop
jae
mov
jbe
mov
adc
dec
pop
inc
dec
aad
jno
call
retf
arpl
cld
pop
push
mov
fwait
pop
push
adc
jecxz
sub
mov
adc
test
sbb
cmp
std
pop
mov
pop
cmp
mov
ret
mov
sbb
fwait
cmp
add
sbb
ss
fldenv
leave
in
mov
repnz
fimul
jne
sub
stos
repnz
rol
and
inc
ss
sbb
test
ins
out
or
mov
inc
hlt
or
jp
mov
push
stc
cmp
xchg
jo
jl
push
mov
in
cmc
and
mov
cmps
inc
mov
jmp
push
mov
mov
add
adc
ins
ret
rcr
bound
data16
mov
ins
(bad)
or
aad
xchg
lds
mov
shr
aam
xchg
push
fmul
fwait
dec
and
sbb
mov
rol
pop
(bad)
dec
and
out
dec
mov
aaa
push
out
call
add
mov
pop
cs
or
iret
xor
or
sbb
adc
and
out
dec
sahf
sub
fstp
outs
xor
xchg
mov
cs
in
call
inc
jns
sahf
push
repz
add
adc
mov
je
and
mov
mov
repnz
push
gs
(bad)
mov
test
adc
jmp
call
mov
or
mov
ficomp
jle
add
test
outs
outs
dec
mov
and
sub
scas
cli
out
inc
mov
push
push
sbb
daa
js
sbb
enter
pop
mov
cdq
mov
or
and
(bad)
or
adc
(bad)
pop
mov
dec
xchg
push
fwait
sbb
or
sar
in
in
mov
push
and
xchg
stos
jbe
adc
push
inc
xlat
mov
sahf
fdiv
adc
and
mov
jg
cli
mov
xchg
sub
int
iret
xor
mov
adc
cmp
sbb
int
in
add
mov
mov
jle
xor
sub
mov
adc
xor
sbb
cli
jmp
ss
enter
in
fcom
pushf
add
ret
jle
fcomip
pop
sub
sub
adc
adc
cmp
mov
pushf
mov
pop
fdivr
adc
push
test
int
adc
xchg
stc
cmp
mov
mov
into
cmp
jmp
pop
rcr
inc
fwait
cmp
cmp
push
fcom
(bad)
push
adc
icebp
fisttp
cs
loope
and
jae
movs
jp
mov
dec
sbb
imul
repz
mov
mov
popa
inc
sbb
add
pusha
dec
test
cmp
xor
adc
movs
pop
fbld
(bad)
inc
fild
fs
xchg
sbb
inc
jp
mov
inc
mov
inc
push
arpl
inc
mov
(bad)
cmp
xchg
lock
retf
rcl
imul
out
retf
clc
adc
aas
push
repz
mov
xchg
hlt
jns
cdq
popf
push
std
adc
mov
jbe
in
je
push
adc
or
(bad)
ret
fisttp
test
lods
jmp
dec
push
cmc
fstp
xor
shl
imul
outs
retf
in
(bad)
dec
add
dec
jmp
push
clc
pop
adc
in
push
jo
retf
inc
cmp
pop
sbb
retf
inc
scas
xchg
add
in
scas
or
adc
cmp
je
mov
inc
add
xor
movs
xlat
push
rcr
push
std
shl
imul
sbb
mov
ja
jmp
dec
mov
(bad)
jecxz
stos
pusha
push
xchg
xor
mov
int3
xchg
daa
xor
xchg
fdivr
nop
ds
push
scas
stos
and
fld
push
pop
neg
fs
mov
popf
into
dec
cmp
rcl
jbe
arpl
sbb
and
loop
fsub
fwait
adc
xor
aad
movs
adc
and
mov
(bad)
jecxz
adc
cmp
loope
mov
fadd
xor
loop
dec
sar
shr
rcl
fmul
sub
or
(bad)
jno
adc
jns
push
pop
outs
clc
adc
cmc
push
je
mov
out
mov
xor
mov
popf
movs
hlt
fisub
jp
fild
repnz
ret
pop
test
inc
sbb
jmp
icebp
(bad)
sbb
inc
mov
mov
rol
neg
(bad)
pop
pusha
jns
push
push
popa
fsubr
mov
sub
mov
mov
inc
mov
mov
mov
enter
sub
aam
aad
bound
dec
dec
lods
sub
inc
in
dec
or
es
xor
sbb
mov
outs
mov
loope
mov
shl
mov
jecxz
mov
xchg
fwait
jno
sbb
scas
call
push
int
jb
jne
inc
mov
inc
inc
call
sahf
mov
mov
shr
mov
jmp
xlat
aas
pop
xchg
add
or
sbb
outs
xor
cmps
gs
std
lea
dec
and
sbb
lods
and
pop
add
push
mov
call
cmp
cmp
cs
(bad)
fidivr
mov
mov
push
out
scas
sub
push
xor
xchg
repnz
imul
xchg
std
inc
jae
or
sbb
or
push
mov
push
arpl
xor
jno
lods
mov
loope
xor
mov
imul
std
xchg
inc
cdq
mov
je
sti
pminsw
mov
stos
sub
add
repnz
add
call
push
int
adc
push
pop
stc
mov
push
js
push
shl
out
push
fs
(bad)
aas
fimul
test
cmp
mov
cli
test
push
out
cdq
mov
dec
dec
leave
out
popa
jne
scas
sti
pop
mov
loope
pop
sbb
into
icebp
add
arpl
jbe
out
cmp
fisub
shl
or
xchg
jmp
ja
inc
dec
mov
int3
add
dec
stos
sbb
ds
xor
cwde
lods
pop
retf
popf
jbe
pop
mov
in
mov
imul
sahf
add
mov
push
adc
lods
jecxz
sbb
cmp
inc
neg
pop
jne
dec
scas
data16
cmc
xchg
arpl
outs
iret
xor
arpl
xchg
int3
jo
mov
xchg
sub
imul
call
js
outs
ret
fisub
sub
popf
aaa
test
sub
lar
icebp
ins
(bad)
das
push
xor
inc
jmp
add
inc
repnz
mov
out
lods
clc
mov
rcr
push
add
cdq
pusha
jmp
jp
inc
xchg
ds
mov
idiv
xchg
in
xor
fild
ss
and
jmp
jno
cld
add
dec
arpl
dec
repnz
cmp
int3
xchg
ret
push
(bad)
out
sbb
aad
loopne
xchg
jp
inc
in
mov
sti
adc
cmp
jno
jmp
lock
xchg
rcr
inc
adc
mov
cld
(bad)
pop
pop
lock
xor
pop
lea
or
ss
loopne
sbb
nop
dec
jecxz
test
and
scas
cmp
xor
(bad)
ror
fdiv
in
xor
mov
sbb
leave
inc
push
and
sub
js
mov
pop
xor
or
inc
fstp
out
in
mov
scas
lods
inc
xor
loopne
fisttp
add
lock
pusha
jae
mov
imul
sahf
cdq
(bad)
aad
out
inc
jmp
mov
sbb
clc
retf
or
data16
sbb
mov
pop
je
mov
push
push
add
icebp
fbld
leave
push
call
aad
outs
ins
jecxz
retf
ror
mov
rol
mov
or
hlt
mov
inc
shl
sbb
nop
loope
cmp
or
cmps
inc
iret
jmp
pop
das
jb
jne
jmp
out
cmp
sub
lahf
dec
inc
aaa
mov
int3
ja
cmp
or
shl
popa
inc
lods
pusha
icebp
sub
lods
xchg
mov
scas
sbb
arpl
mov
sub
stos
xor
aam
sbb
f2xm1
dec
sub
sbb
mov
cmp
xchg
ror
movs
sbb
ds
mov
push
add
push
(bad)
xor
hlt
push
push
outs
(bad)
movs
add
aaa
aam
dec
(bad)
sti
add
pop
sub
(bad)
cmp
pusha
cld
cs
pop
lock
test
jle
dec
rcl
xchg
jg
inc
dec
popa
push
aad
pop
fbstp
xor
mov
jo
sub
xchg
out
lahf
and
cmp
mov
xor
cld
(bad)
cdq
xchg
ds
jae
push
and
cld
mov
inc
test
out
add
sub
sub
cmc
mov
out
icebp
scas
push
inc
mov
pop
ud1
pop
cmp
mov
mul
fist
xchg
icebp
in
sahf
sbb
dec
xor
mov
ja
imul
retf
bswap
addr16
jb
jle
jbe
shr
jle
dec
xchg
jo
mov
les
mov
mov
jmp
(bad)
push
mov
sbb
mov
cmps
stc
mov
out
scas
inc
jnp
sar
dec
cmp
mov
mov
push
mov
cmp
or
dec
dec
mov
repnz
dec
pop
cdq
hlt
outs
mov
mov
in
in
loope
jb
jg
mul
ins
loopne
sbb
jmp
push
cmp
xor
ins
push
jl
dec
in
retf
mov
push
xchg
pop
pop
add
test
xor
xor
lds
call
mov
loop
add
fmul
and
call
or
cmp
cmp
(bad)
jp
pop
sbb
(bad)
js
sub
imul
dec
sub
xor
(bad)
test
sub
mov
cli
retf
(bad)
sub
popf
mov
loopne
in
jbe
sbb
adc
cwde
addr16
in
add
or
xchg
xchg
xchg
add
xchg
ja
sar
inc
dec
jbe
mov
addr16
imul
ror
xchg
mov
inc
dec
ds
ja
out
int3
pop
gs
out
mov
movs
std
pusha
pusha
pop
pop
pop
lods
dec
inc
cwde
arpl
movs
mov
mov
mov
push
outs
popf
mov
push
dec
pop
pop
xor
push
pop
and
jo
or
int3
mov
es
movs
pushf
jl
call
lock
daa
mov
xchg
mov
sbb
push
cli
nop
jp
jecxz
test
jl
daa
shl
push
pop
add
mov
js
test
sbb
sub
mov
outs
dec
jns
fdivr
inc
xor
or
mov
mov
mov
es
cmp
xor
jle
cmp
mov
retf
getsec
adc
jne
mov
mov
xchg
(bad)
pop
or
xor
mov
lahf
lea
pop
loope
cmps
ss
sub
dec
cld
pop
mov
and
xchg
jle
and
sbb
aam
daa
out
jle
adc
cmc
leave
xor
jge
out
mov
inc
jle
xchg
fst
fsub
sbb
xor
sub
fbstp
add
jg
add
mov
lock
daa
sub
movs
jl
sbb
hlt
(bad)
int
and
test
sbb
cmp
push
pop
int
dec
lahf
mov
push
xor
call
adc
stos
std
icebp
rol
xchg
in
mov
mov
mov
loope
test
ds
fisub
and
xor
movs
mov
mov
in
sbb
and
adc
iret
pop
fisttp
xchg
or
fdiv
jl
out
imul
adc
fld
push
dec
push
jg
sub
push
mov
sub
dec
cld
cdq
mov
add
je
loopne
pop
pop
push
or
sahf
mov
pop
xor
adc
loop
pop
pop
rcl
outs
retf
leave
lea
xchg
adc
int
sar
inc
push
into
shr
xlat
inc
push
std
push
call
les
xor
cwde
jno
jg
dec
pop
mov
(bad)
int3
test
daa
pop
(bad)
push
dec
pop
sub
push
inc
jle
hlt
xor
nop
mov
mov
fimul
inc
pop
mov
dec
cli
leave
out
xchg
lea
pop
ins
add
mov
mov
clc
adc
jg
pop
scas
inc
xchg
jle
sub
pop
iret
inc
jmp
or
xchg
fdiv
adc
jo
neg
fldenv
cdq
into
or
inc
enter
mov
mov
outs
sbb
xor
mov
stos
outs
lods
dec
pop
int
jae
xor
xchg
pusha
cmp
xchg
jl
mov
sub
test
pop
jg
out
jmp
(bad)
mov
sbb
mov
cld
aam
ud2
out
xor
outs
jno
jne
pop
add
inc
loope
in
lds
mov
mov
sbb
sbb
(bad)
ins
inc
(bad)
jb
loopne
and
daa
in
adc
mul
cmp
sub
fdiv
out
or
dec
cmp
or
pop
adc
scas
test
aad
sub
or
iret
and
mov
stos
in
dec
ror
inc
not
dec
ret
neg
imul
push
test
loope
mov
sti
call
in
nop
ins
mov
push
int
ficom
lods
nop
dec
lds
outs
ret
in
jmp
sub
cmp
mov
mov
pop
test
adc
pop
sbb
bound
inc
mov
loope
push
mov
cmps
stos
adc
xchg
ds
test
mov
out
call
mov
bound
cli
call
add
ror
daa
jp
div
add
jecxz
mov
lahf
mov
dec
in
imul
jp
inc
cld
pop
nop
jb
loop
outs
pop
cld
sbb
push
jno
pop
not
or
daa
dec
jl
dec
push
loopne
call
xchg
jne
out
inc
add
mov
dec
inc
inc
sub
ds
add
sub
(bad)
lds
adc
cld
fsub
(bad)
sbb
pop
jmp
mov
or
aad
sub
dec
mov
lahf
cmps
repz
iret
adc
jle
sti
hlt
mov
fidiv
mov
jae
pop
movs
retf
xchg
stos
enter
in
out
mov
adc
mov
int3
sub
jns
xchg
cwde
push
sbb
hlt
jecxz
sub
fs
add
pop
stos
movs
movs
lods
fadd
jo
(bad)
xor
push
add
inc
pushf
dec
inc
retf
mov
repnz
sub
popf
into
sub
cmps
and
jns
or
mov
call
ja
dec
int
cli
mov
push
and
sub
cmp
adc
mov
mov
(bad)
sub
mov
cmps
mov
shld
shl
xor
push
neg
ss
cmp
hlt
and
aaa
cli
jb
cli
retf
out
and
xchg
fbstp
cmc
sbb
pop
push
pop
es
inc
jo
push
cmp
aaa
cmp
repz
and
out
inc
pop
dec
jmp
inc
xor
sbb
adc
std
dec
aaa
mov
jl
fst
data16
jbe
enter
mov
pop
cmp
inc
jge
mov
inc
ror
add
movs
in
lods
cld
xor
mov
fiadd
adc
mov
outs
in
das
dec
xor
mov
loope
stos
loopne
rol
jo
repz
(bad)
mov
out
clc
and
xchg
aam
(bad)
out
fsub
add
fwait
loopne
and
(bad)
jns
frstor
lods
cmps
test
or
cmp
mov
dec
dec
cmp
and
jg
push
mov
pushf
into
out
int
or
mov
xor
jb
icebp
sbb
cmp
sbb
shr
mov
cmc
sbb
push
popf
aaa
jmp
data16
jns
push
mov
daa
or
cmc
jno
lods
sbb
pop
leave
data16
int3
xor
jg
stos
sbb
bound
pop
xchg
or
mov
popf
out
mov
arpl
or
pop
push
add
push
out
ror
mov
movs
cmp
cwde
sbb
mul
mov
mov
xchg
sub
(bad)
shl
pop
mov
leave
xlat
and
jecxz
push
or
and
pushf
add
cmp
cmp
imul
repnz
(bad)
je
mov
fwait
mov
push
int
fiadd
repz
xchg
or
cdq
test
and
es
mov
pop
call
fiadd
in
bound
sbb
outs
mov
mov
sti
xlat
pop
div
push
jmp
orps
loop
cmp
adc
cwde
dec
fwait
adc
neg
push
sub
mov
das
stos
lahf
dec
inc
jbe
mov
mov
mov
stc
sbb
cmp
mov
das
es
int3
mov
or
dec
leave
neg
sbb
mov
movs
or
mov
inc
(bad)
mov
cmc
retf
adc
cmp
or
xchg
jmp
cmc
(bad)
in
jbe
daa
shl
ret
aam
(bad)
mov
ret
mov
xlat
movs
pop
xor
ss
and
sub
sbb
mov
fwait
adc
sbb
mov
dec
xor
scas
lea
sub
mov
inc
mov
sub
into
loop
push
sbb
dec
mov
mov
xlat
nop
mov
xchg
push
mov
xchg
mov
add
rcr
pop
mov
ss
push
(bad)
cmp
push
out
push
pop
outs
fcmovnb
outs
inc
das
mov
out
repnz
int
icebp
inc
int3
pop
or
dec
ins
je
test
pusha
iret
or
mov
icebp
xchg
jp
cmp
(bad)
inc
or
nop
movs
mov
jnp
out
pop
mov
fcomp
xor
std
jmp
mov
(bad)
mov
xchg
mov
xor
out
push
xchg
ins
fdivr
sti
jl
sbb
and
or
cmp
push
retf
stc
out
inc
xchg
outs
retf
cmp
fs
sti
test
in
pop
(bad)
in
pop
sahf
xchg
mov
div
loope
ins
pop
neg
mov
fisttp
sbb
fistp
nop
lds
add
add
adc
fwait
es
xor
cmp
loope
and
xchg
int
push
inc
bound
xor
xor
test
pop
mov
or
aad
cwde
repnz
(bad)
ds
dec
rcl
cs
dec
ins
rcr
into
xchg
fldl2t
xchg
inc
mov
pop
(bad)
push
mov
lods
mov
cmp
jo
mov
cmp
fldenv
aam
clc
js
ds
pop
test
call
daa
clc
pop
jae
and
dec
icebp
mov
add
mov
jmp
mov
sub
clc
adc
jecxz
and
cmp
fdivp
jp
cmp
inc
movs
addr16
cdq
adc
and
gs
ss
stos
mov
rol
dec
mov
sub
pop
inc
adc
adc
or
aas
pop
mov
out
mov
inc
sbb
or
arpl
cmp
mov
jmp
cmps
push
dec
fdivr
into
jmp
adc
sbb
sub
pop
mov
div
xchg
(bad)
and
adc
int3
ja
xchg
shl
jmp
dec
push
out
pop
not
inc
pop
lds
imul
cmps
push
cmc
shl
dec
mov
outs
push
cs
fst
push
daa
sub
mul
adc
lods
and
les
in
(bad)
and
mov
dec
repnz
ins
inc
call
xor
(bad)
aad
mov
(bad)
mov
push
ja
addr16
mov
enter
enter
sbb
cmp
xor
pop
inc
nop
fldcw
add
cdq
movs
popa
cmp
mov
je
fwait
daa
pop
call
sti
inc
cdq
lods
mov
sbb
cmp
add
cmps
xor
iret
inc
sub
jmp
(bad)
mov
movs
jmp
jmp
es
(bad)
or
inc
pop
stc
push
xor
jns
mov
dec
lock
aam
cmp
sub
pop
inc
(bad)
scas
sub
jge
jmp
mov
mov
ins
cwde
(bad)
in
sti
in
mov
iret
cwde
add
or
test
test
ins
mov
push
jmp
ins
sti
fldcw
lock
adc
jmp
test
lods
sbb
retf
mov
cmps
fistp
push
in
adc
and
fnstenv
in
add
aas
cmp
cli
xchg
pop
sbb
dec
inc
idiv
sub
mov
dec
xor
loopne
cmps
xchg
inc
adc
pop
fist
call
stc
pop
adc
xor
int3
and
dec
pop
ss
push
mov
add
push
inc
inc
sbb
int
loope
scas
in
ins
pop
dec
jmp
(bad)
xchg
loopne
jle
cmps
int3
sub
aam
fmul
pop
fstp
jno
outs
mov
push
int
xlat
cli
test
outs
jl
inc
(bad)
jmp
ror
pop
out
add
xlat
inc
inc
sub
repnz
lahf
sub
xchg
pop
add
inc
das
movs
gs
sbb
cld
imul
and
cs
and
cmp
jmp
adc
dec
mov
or
leave
fsubr
add
bound
les
movs
bound
xlat
out
aam
jecxz
fstp
jle
fadd
jge
pop
cmps
lods
ret
inc
jg
xchg
jg
les
jecxz
call
cmps
lock
xor
test
add
jl
enter
fld
mov
xor
dec
push
or
out
inc
dec
dec
xchg
cmovs
shl
dec
push
leave
jg
je
mov
out
fidiv
dec
push
in
ret
xchg
jmp
lods
test
pop
mov
pop
dec
into
mov
popa
neg
sar
and
push
fwait
repnz
aam
xor
pop
xchg
cmp
loope
leave
(bad)
mov
sahf
pop
pop
lds
sbb
repnz
mov
cli
lds
and
pop
lock
rol
loopne
push
push
(bad)
lds
jl
xchg
cmp
jge
add
loope
push
int
hlt
enter
pop
imul
sahf
xchg
mov
dec
cmp
into
mov
mov
movs
jecxz
data16
mov
add
inc
leave
cmps
sub
xchg
pop
cmp
bound
out
in
leave
gs
mov
xor
call
jmp
test
int3
adc
sbb
cmp
retf
stc
xchg
daa
adc
mov
pop
jp
pop
call
ret
inc
popa
add
jbe
inc
sub
dec
es
into
imul
adc
or
jl
cdq
popf
mul
mov
loopne
in
outs
(bad)
test
push
pop
mov
(bad)
aad
push
je
retf
add
push
repz
pusha
cmp
std
inc
sub
sahf
lahf
fild
retf
test
arpl
push
pop
jmp
jne
push
test
inc
xchg
retf
and
repnz
push
dec
jo
(bad)
stc
adc
sbb
es
add
arpl
outs
fdivr
mov
mov
clc
stc
daa
shr
sub
mov
hlt
push
mov
out
jge
les
sub
lds
push
and
mov
cli
push
jle
outs
push
and
ja
movs
xchg
xor
(bad)
or
out
fidivr
cmp
scas
std
mov
inc
cmp
and
or
push
jge
and
xchg
push
dec
out
inc
(bad)
call
imul
cmc
push
in
popf
adc
and
std
outs
cs
cmp
pushf
push
jnp
mov
add
cmp
jbe
pop
cmc
jo
test
es
xchg
add
xchg
fwait
xor
xor
mov
in
sub
xchg
pusha
das
and
sti
rol
pop
cmp
mov
test
mov
pop
ja
pop
sbb
xor
mov
ror
pushf
(bad)
out
in
faddp
sbb
cld
movs
pop
jmp
lds
test
retf
or
stos
mov
clc
out
and
test
test
ins
imul
push
fwait
cwde
leave
pop
cmp
ins
jl
icebp
cmp
fisub
xor
push
gs
ficomp
dec
test
movs
lds
arpl
xor
or
ror
sbb
aaa
sub
ins
jo
xchg
mov
movs
jbe
fbstp
pop
xchg
out
(bad)
mov
mov
rcr
outs
lods
(bad)
mov
mov
and
dec
sar
sbb
loopne
fmul
or
and
pop
inc
add
(bad)
sub
ss
and
retf
cmp
inc
adc
scas
mov
std
test
cmp
cmps
fnstsw
fcom
mov
mov
daa
sti
imul
bound
int
xchg
add
into
mov
das
data16
add
xor
dec
in
jb
and
push
pop
mov
xchg
inc
jecxz
fistp
xor
sub
inc
mov
shl
clc
test
pop
lds
xchg
mov
dec
pop
mov
iret
fs
lods
cmp
(bad)
jns
cmps
test
sub
inc
test
xchg
inc
cmp
push
xchg
or
pop
adc
mov
sbb
mov
xor
inc
aas
lea
adc
or
imul
mov
aas
outs
arpl
lahf
fdivr
cdq
mov
pushf
or
jns
add
adc
adc
shl
data16
dec
arpl
sbb
lods
call
cld
push
pop
popf
jl
lods
jmp
rcl
call
(bad)
sbb
popf
call
sbb
adc
out
popa
xchg
sub
add
loopne
push
retf
push
ss
jg
(bad)
ds
popa
and
jl
std
outs
iret
xor
jp
inc
mov
fsubr
jmp
mov
lock
inc
std
jmp
dec
cmc
add
rcr
aam
adc
jmp
lea
mov
adc
int3
cmc
mov
lock
pop
mov
inc
fld
clc
sahf
push
or
pop
mov
xchg
lods
retf
mov
jle
or
xchg
ret
leave
cmp
sbb
clc
sar
dec
mov
sub
test
lea
jne
add
xor
jp
popf
or
neg
sbb
dec
sbb
repnz
vmovss
adc
sti
mov
push
lgs
clc
sbb
xor
pop
dec
stc
in
gs
jno
sub
into
push
stos
inc
push
enter
sbb
mov
lds
ficom
jmp
loopne
in
cmp
shl
ficom
xor
aas
test
test
mov
mov
mov
sub
cdq
add
(bad)
jo
pusha
outs
stc
ins
push
dec
xlat
adc
iret
push
mov
push
call
jmp
push
jle
dec
mov
out
cmps
nop
and
push
xchg
sar
iret
adc
ja
sahf
rol
fstp
enter
dec
cmc
jo
push
or
sub
and
cld
imul
pop
sbb
outs
and
scas
out
and
pop
sahf
(bad)
rcr
push
sahf
inc
arpl
(bad)
dec
fsubr
mov
pop
fwait
and
bound
test
pop
(bad)
repnz
dec
test
cmp
pushf
sar
xchg
std
jecxz
push
dec
sbb
dec
sub
call
retf
jmp
inc
out
sub
(bad)
(bad)
pusha
lds
outs
into
ret
mov
and
ds
inc
enter
push
push
add
xor
loopne
sub
xchg
cs
stos
ret
xor
add
dec
inc
and
adc
aam
lds
sar
sbb
inc
sbb
pop
in
mov
lods
cdq
fdivr
mov
or
sahf
jne
(bad)
imul
add
call
aam
cmp
adc
cmc
xchg
push
sbb
div
fld
ret
call
add
les
mov
dec
jle
test
mov
cli
mov
rcl
inc
jp
and
enter
add
in
mov
dec
(bad)
and
mov
movs
inc
fs
and
mov
mov
in
fnstcw
mov
loop
and
xor
int
test
outs
das
sub
or
xor
sub
aaa
leave
push
lea
inc
dec
xor
ret
loope
cmp
test
mov
sbb
cmp
push
push
stos
mov
icebp
cld
in
ins
jl
dec
add
jecxz
sti
pop
cld
out
push
call
in
adc
sub
loope
push
push
xchg
sbb
jmp
mov
cmp
repz
inc
(bad)
(bad)
jno
cmps
bound
mov
enter
dec
inc
jo
fmul
arpl
pusha
fwait
jns
xchg
sbb
rcl
sub
jl
(bad)
lods
std
sub
arpl
popa
add
hlt
and
test
lods
sahf
ficom
dec
or
iret
adc
xor
mov
add
inc
inc
inc
sbb
push
imul
push
push
pop
loope
stos
jg
xchg
add
retf
aas
inc
repz
add
mov
int3
push
push
scas
pushf
adc
bound
jae
inc
sub
outs
or
xchg
adc
mov
cld
lods
adc
aaa
xor
fmul
jmp
jne
shl
fs
fwait
push
adc
pop
aas
leave
sub
enter
push
aam
add
push
jae
jecxz
outs
jge
pop
cmp
mov
push
pop
test
push
dec
mov
lds
jno
out
mov
call
cmp
cmps
fwait
push
test
dec
es
mov
(bad)
xlat
xchg
and
arpl
aad
mov
sub
xchg
(bad)
icebp
in
mov
xchg
ret
jmp
xchg
into
clc
jp
ficomp
cmps
and
rep
fistp
in
dec
pop
retf
sub
js
pop
and
es
sar
clc
dec
mov
fsub
imul
fcomp
loopne
or
pop
sub
dec
push
(bad)
cwde
jo
(bad)
lods
mov
mov
test
shr
inc
mov
out
(bad)
arpl
rol
ins
loopne
mov
pop
loopne
mov
mov
fidiv
or
imul
cdq
jmp
and
jmp
or
scas
pop
xor
sbb
add
jle
and
paddsb
popf
pminub
mov
retf
or
xchg
sbb
shl
fwait
(bad)
xchg
nop
stos
and
(bad)
jge
mov
ja
jnp
push
fldcw
mov
sbb
and
cmp
imul
fmulp
push
sbb
jg
out
mov
inc
and
shr
loope
and
fld
cmp
ja
xchg
retf
sbb
mov
test
or
add
sub
xor
push
jge
mov
dec
jg
into
nop
xor
jnp
mov
push
mov
lock
stc
int
sub
shl
dec
jmp
test
add
fstp
sbb
js
ds
mov
mov
jge
mov
(bad)
rcl
jae
adc
or
and
mov
or
sbb
jne
push
cwde
adc
and
vmovd
xlat
adc
movs
jbe
cmp
pop
loopne
add
sbb
mov
iret
outs
std
jne
xchg
push
mov
pop
shl
cdq
out
pop
aam
mov
scas
test
sub
and
pushf
dec
pop
aas
jno
(bad)
retf
cs
popf
push
(bad)
outs
sbb
jb
inc
iret
(bad)
mov
push
add
add
std
add
xlat
es
xlat
(bad)
scas
js
cld
mov
idiv
outs
cmp
imul
sti
cmc
call
lahf
ret
mov
movs
add
leave
cwde
imul
jbe
mov
and
sar
pop
(bad)
push
mov
jo
nop
push
or
in
sub
sub
aaa
lods
add
sar
dec
adc
cli
pop
push
dec
mov
bound
ins
loopne
loop
mov
repnz
push
push
jmp
mov
scas
push
mov
jp
push
mov
sub
movs
or
jae
sub
fdivrp
mov
loop
xor
jecxz
bnd
jmp
dec
lahf
mov
in
push
sbb
pusha
inc
xor
inc
dec
mov
inc
jle
clc
mov
gs
arpl
(bad)
xchg
xchg
popf
test
mov
mov
cmps
push
adc
inc
std
lds
xlat
add
or
jbe
loopne
xchg
inc
and
lahf
jbe
pop
add
clc
clc
aas
fisub
outs
or
arpl
lea
pop
femms
retf
rcl
adc
(bad)
mov
movsx
adc
pop
sub
fmul
in
out
in
imul
(bad)
retf
ss
and
mov
xchg
ds
push
gs
xchg
fwait
sar
pushf
add
js
aam
ins
push
push
lock
dec
mov
or
adc
out
mov
shr
pop
clc
outs
retf
pop
cmps
or
sub
mov
ret
cmp
and
jbe
adc
push
dec
jno
(bad)
adc
iret
xchg
ins
iret
aaa
cs
imul
mov
out
or
sbb
in
in
xchg
mov
in
cmps
test
mov
cli
dec
imul
or
(bad)
std
add
adc
ret
sbb
dec
icebp
xchg
add
or
vunpcklps
retf
shl
cmp
sbb
cmp
test
mov
xchg
jo
xchg
or
mov
shl
lock
pop
daa
push
inc
es
jb
retf
fucom
test
sbb
mov
aaa
dec
inc
test
mov
fidivr
add
ins
js
xchg
pop
ja
gs
adc
imul
inc
jl
or
out
rol
outs
fist
pusha
cs
mov
das
sbb
adc
push
cmp
int
ror
mov
push
add
es
jmp
sbb
dec
mov
ud1
out
jge
jle
in
gs
cmp
push
call
(bad)
das
in
out
cmp
push
(bad)
sbb
sub
es
mov
fild
inc
xchg
sti
mov
inc
les
xchg
mov
dec
or
outs
and
je
sub
leave
dec
ins
(bad)
push
jp
pop
xchg
scas
cmp
test
enter
pop
test
and
mov
mov
inc
push
add
pop
xor
jmp
dec
cmp
xor
or
dec
pop
and
or
xlat
mov
popf
lahf
retf
and
sahf
adc
bound
mov
adc
shl
test
repnz
ja
loope
sub
cmp
sbb
xor
nop
cmp
add
sub
imul
jl
sar
imul
ret
loope
lods
jmp
(bad)
push
push
cli
pop
mov
jmp
adc
mov
pop
aad
fwait
adc
inc
inc
daa
sbb
int3
retf
jne
cmp
imul
stc
or
cld
pushf
adc
shr
jecxz
sbb
fucomip
xlat
ss
push
inc
cmp
fsubrp
pop
test
lods
add
fldenv
or
push
imul
sbb
(bad)
push
jge
enter
xlat
aad
inc
push
push
mov
fimul
icebp
nop
repz
cmps
mov
cmp
jae
push
jne
retf
xlat
push
pusha
xor
jnp
dec
leave
mov
pop
pop
add
inc
mov
inc
cld
shl
adc
call
pop
mov
out
js
call
add
mov
jle
sub
iret
sub
jb
js
bound
xchg
cmp
mov
push
and
or
xor
fwait
aam
push
ins
mov
pop
fisubr
sbb
aam
arpl
sbb
ror
retf
ret
lock
adc
dec
xor
hlt
popa
inc
and
mov
data16
int3
mov
loop
sub
push
scas
sbb
ror
cdq
xchg
mov
pop
xor
jecxz
aaa
jle
rcl
fbld
fstp
mov
pusha
js
add
pusha
xchg
mov
arpl
adc
and
inc
add
popf
je
add
repz
or
out
or
cmp
repz
call
stc
mov
into
(bad)
call
in
dec
sar
pop
inc
xor
push
inc
mov
out
ret
jnp
jbe
and
mov
xchg
icebp
inc
cld
cs
cmp
xor
dec
mov
push
sub
hlt
cmp
adc
push
jns
xor
lds
cvtdq2ps
push
jp
pop
dec
pop
and
push
stos
jmp
inc
into
xchg
mov
imul
popf
or
or
rol
add
outs
addr16
cmp
add
cmp
pop
and
pop
sub
sbb
aas
imul
mov
sbb
data16
iret
xchg
lock
movs
xchg
cmp
popf
add
test
packssdw
sbb
jg
es
inc
cmp
js
sbb
ss
mov
xchg
mov
xor
push
xchg
cs
ror
inc
neg
movs
mov
fs
and
test
(bad)
repz
sbb
push
push
push
or
dec
add
scas
aad
sub
frstor
sub
add
pop
rcl
jo
lock
mov
pop
inc
jns
cmp
lahf
cmc
enter
daa
fbld
add
scas
fs
mov
repz
mov
sar
push
sahf
add
mov
jbe
push
and
mov
xchg
data16
popf
test
mov
xchg
xchg
sub
sub
dec
add
ret
retf
push
sar
or
(bad)
ud1
popa
ja
push
pop
inc
add
movs
(bad)
call
add
fcom
fimul
aad
les
cmp
imul
xor
ret
and
pop
clc
inc
(bad)
loope
jg
xchg
inc
hlt
fdiv
icebp
jmp
cmp
jle
out
push
retf
cmp
add
mov
aas
inc
ret
leave
in
shl
es
jp
cmps
push
outs
sbb
jecxz
pop
sahf
mov
sti
ds
(bad)
dec
or
jne
sbb
mov
mov
sub
dec
xchg
push
mov
add
jne
mov
in
bnd
jbe
fcmove
xchg
jmp
adc
jnp
ret
ins
outs
pop
add
imul
sub
pop
mov
cmc
xor
mov
or
push
mov
or
cli
xchg
mov
mov
dec
lods
adc
inc
xor
mov
dec
les
iret
push
dec
push
xor
inc
mov
jne
mov
out
sbb
das
popf
mov
in
not
and
jne
xchg
pop
or
iret
push
mov
imul
jo
outs
loope
aas
mov
mov
je
xor
sub
ins
lds
sub
daa
not
cmp
push
dec
mov
push
lods
faddp
dec
inc
cmc
push
or
and
mov
dec
and
je
popa
dec
cli
cld
inc
out
bnd
adc
repz
push
nop
cld
dec
test
shr
in
pop
adc
test
push
lock
inc
inc
mov
cmc
add
push
or
(bad)
gs
loope
fdivr
nop
in
popf
test
push
mov
or
ds
sbb
cmc
jnp
sbb
or
outs
cmps
xor
jg
les
int3
mov
cmp
lea
lahf
pop
retf
push
cmp
add
icebp
call
sub
jmp
sbb
jno
repnz
jmp
cli
push
mov
mov
xor
das
sub
pop
les
call
lds
shl
movs
jno
rcr
jl
imul
out
sub
mov
and
fcom
jnp
outs
sbb
cmps
clc
and
pop
retf
jno
jg
push
jecxz
in
fadd
or
sbb
test
(bad)
loop
and
stos
xor
in
mov
dec
xchg
mov
xchg
or
cmp
pop
dec
mov
dec
inc
cmp
sahf
ds
mov
xlat
push
jecxz
dec
sbb
dec
in
call
sbb
pop
ds
cmc
cmp
mov
cmp
push
scas
fbstp
ret
imul
sub
and
into
imul
enter
cmp
hlt
xlat
inc
div
cmp
je
pusha
mov
push
push
fcom
popf
pop
jo
pop
push
das
clc
(bad)
repnz
ror
repz
jl
inc
popf
out
inc
scas
push
inc
xlat
aaa
in
xchg
push
lock
mov
movs
popa
xor
js
inc
neg
rcr
mov
ss
js
and
test
and
jle
(bad)
xchg
adc
mov
adc
adc
mov
cmps
xchg
std
pop
(bad)
mov
(bad)
in
xchg
mov
cmps
stc
test
add
add
mov
fnsave
mov
pop
sub
call
repz
call
xor
sbb
jmp
fsubr
repnz
repz
ja
cmps
and
mov
mov
test
repz
pushf
sub
xor
jmp
mov
mov
fdiv
nop
nop
mov
hlt
ins
arpl
mov
(bad)
xlat
pop
or
sub
sbb
repz
fbstp
cdq
jp
cwde
dec
inc
lds
mov
xchg
dec
mov
mov
call
in
popf
dec
add
test
jecxz
data16
xlat
jb
add
fstp
fwait
idiv
movs
adc
movs
add
lock
in
aad
push
ret
dec
in
inc
retf
cwde
stos
xchg
rcl
jbe
cmps
push
retf
fidiv
das
loop
push
in
(bad)
(bad)
push
sbb
jmp
dec
aad
ins
xor
sbb
sub
mov
mov
shr
mov
retf
cmp
loop
mov
sbb
sbb
sti
cli
mov
xor
pop
jo
sti
push
inc
loopne
mov
xor
dec
or
(bad)
repz
jg
add
in
push
jno
ins
fst
and
jmp
xor
lea
js
pop
enter
loopne
inc
(bad)
sbb
outs
rol
sub
mov
pop
enter
lahf
ins
push
ret
push
cwde
repnz
sub
and
xor
mov
cmp
and
int3
shl
mov
lock
stos
dec
dec
jle
mov
call
jbe
cwde
and
(bad)
enter
adc
push
arpl
pop
clc
inc
cmc
adc
daa
add
mov
mov
sar
jbe
js
dec
lahf
cld
call
jbe
aam
popf
cli
(bad)
jae
jne
mov
xchg
fdivr
retf
inc
mov
and
aad
jl
and
sbb
(bad)
cmp
adc
mov
movs
test
popa
mov
pop
mov
out
test
xor
jo
mov
lock
cmc
push
imul
cmp
or
dec
daa
arpl
mov
push
inc
cdq
push
fs
inc
addr16
xor
ja
cs
comiss
fmul
(bad)
(bad)
aam
add
mov
into
aaa
or
cwde
out
add
shl
sbb
ror
ss
jnp
(bad)
sti
imul
sub
mov
mov
sbb
xchg
test
test
(bad)
imul
popf
and
jp
push
fcmovne
dec
pop
mov
inc
movs
loopne
push
mov
mov
pop
stc
push
hlt
cmp
and
push
jae
adc
int
pop
mov
push
mul
push
retf
or
lds
inc
rcl
fbld
push
daa
enter
leave
nop
add
loop
mov
loopne
cdq
popa
mov
or
dec
and
outs
dec
push
xchg
repz
lods
loop
cmps
mov
mov
mov
dec
jae
es
ret
adc
jl
popa
fwait
add
push
sar
push
xor
jo
jp
jne
mov
shl
lock
push
in
enter
cli
and
mov
mov
fimul
push
sar
retf
fidivr
or
cli
pop
push
dec
xor
pop
stc
bound
jno
xlat
out
mov
sbb
cmps
jne
cwde
push
push
inc
cld
mov
out
fidivr
dec
sub
sub
sub
je
mov
arpl
(bad)
fucom
xlat
xor
sbb
lds
pop
and
jo
ret
pop
outs
shl
into
jecxz
cmps
lea
in
push
pop
mov
addr16
repnz
xor
stos
jmp
inc
and
or
or
iret
xor
movs
stos
in
xchg
sub
out
pop
push
pop
inc
out
push
cmps
in
xor
iret
and
movs
stos
cli
retf
adc
inc
scas
jmp
add
cmp
xchg
cdq
push
hlt
dec
aas
xor
push
mov
inc
or
(bad)
aaa
(bad)
xchg
outs
sbb
ret
mov
fwait
xchg
adc
out
aam
enter
std
inc
sbb
or
loope
dec
mov
jge
adc
aam
xchg
sbb
or
popf
and
sbb
cmps
pop
inc
sub
pushf
sti
js
add
push
hlt
xchg
push
aas
iret
inc
movs
mov
jb
xor
lea
fwait
cmp
jp
xor
inc
bound
call
sbb
adc
shr
outs
sbb
mov
jmp
sub
mov
xchg
retf
shr
fld
sbb
in
(bad)
sbb
inc
out
ins
dec
call
or
mov
fiadd
pop
push
hlt
pop
daa
push
cwde
ins
push
jl
sti
test
add
push
xchg
jbe
mov
in
inc
popa
movs
cmp
cli
jecxz
(bad)
leave
(bad)
push
add
mov
shl
adc
ret
mov
enter
xor
dec
mov
xchg
and
mov
in
and
sub
xchg
dec
fimul
(bad)
in
fadd
mov
imul
(bad)
dec
daa
es
(bad)
mov
dec
in
sub
push
xor
push
ss
inc
or
or
mov
movs
arpl
ror
outs
in
xor
arpl
xchg
popf
add
mov
fcomp
ss
jmp
out
pop
std
xchg
cwde
or
cmps
stos
adc
jmp
movs
lods
cmp
mov
stc
sti
and
jecxz
shl
enter
jecxz
pop
sub
rcl
sar
stos
mov
inc
bound
in
jecxz
pop
jns
enter
retf
test
outs
adc
xchg
jecxz
mov
retf
popa
in
or
movs
repnz
pop
inc
into
daa
cli
nop
or
xchg
inc
pop
inc
jo
xor
jb
xchg
push
bound
mov
scas
pop
mov
dec
ss
jg
and
mov
mov
cmps
or
ds
(bad)
movs
dec
sar
call
jae
mov
jns
(bad)
xor
cli
inc
push
js
and
ret
leave
movs
cmp
mov
cmps
inc
xlat
retf
fidiv
repz
mov
add
hlt
mov
arpl
push
mov
hlt
or
shl
je
stos
sbb
pop
inc
div
loopne
fstp
jmp
cli
or
cwde
cmp
aad
push
xor
test
fwait
jns
and
inc
pop
mov
out
inc
sti
dec
mov
xchg
ret
mov
test
push
aaa
outs
out
pusha
push
pop
jmp
jge
call
mov
push
retf
dec
or
sub
dec
pop
mov
mov
push
aas
adc
and
or
es
lds
ins
xor
outs
sub
and
push
jle
xchg
inc
outs
xchg
pushf
cdq
std
xor
and
jne
jo
in
mov
sub
add
jle
imul
inc
and
xor
dec
repz
mov
(bad)
test
dec
movs
jb
jmp
mov
add
mov
test
shr
xlat
in
enter
ror
outs
and
mov
jno
dec
jg
fsub
mov
call
xchg
test
mov
addr16
xchg
mov
xchg
xchg
mov
mov
cmp
xor
jnp
sti
ja
jo
ds
pop
hlt
iret
ins
aam
ins
cmp
ret
adc
ins
push
mov
stc
xor
adc
or
xor
repz
loope
test
stc
loope
enter
xchg
cmp
cmp
hlt
inc
inc
xor
loop
and
test
retf
aad
cmp
lods
inc
addr16
sub
add
sahf
push
ror
pop
ja
mov
out
mov
gs
jmp
mov
dec
inc
cmp
inc
and
jbe
test
adc
popa
cmps
sub
sub
push
adc
mov
add
jge
push
cmps
je
nop
lahf
sbb
or
and
xchg
dec
daa
add
pop
mov
push
scas
int
pop
sbb
out
retf
mov
and
xchg
mov
shr
jmp
fisubr
mov
adc
test
pushf
popa
test
lea
fcom
dec
pop
xchg
addr16
(bad)
ins
adc
lods
cmp
call
loopne
in
jp
cmps
xor
inc
sbb
push
sub
dec
sbb
imul
push
mov
in
movs
ret
mov
add
adc
in
fsub
hlt
push
mov
add
retf
adc
sub
frstor
pop
sbb
test
(bad)
(bad)
call
cmps
inc
in
icebp
fldcw
icebp
daa
xor
jo
mov
retf
icebp
ficomp
(bad)
imul
lock
into
dec
mov
sbb
and
mov
add
xor
popa
fstp
inc
imul
cs
test
pushf
sbb
mov
push
push
sti
mov
xchg
(bad)
fisubr
inc
mov
lea
fwait
imul
repz
dec
pop
daa
cmp
mov
les
push
stc
push
sub
xchg
movs
test
inc
add
xor
out
dec
(bad)
cld
call
pop
jmp
dec
or
and
sub
mov
lods
daa
hlt
and
adc
pop
mov
or
out
ffree
mov
push
jmp
mov
(bad)
ret
mov
xchg
es
jns
retf
xor
loope
aad
enter
out
aad
(bad)
daa
xchg
ficom
mov
mov
pop
or
mov
or
scas
cmp
enter
sub
btc
and
fiadd
(bad)
fmul
sub
push
pusha
xor
pop
xchg
push
inc
mov
adc
scas
or
sbb
sub
cdq
popf
inc
push
and
cmp
dec
pushf
jle
call
and
push
adc
mov
inc
or
loop
pop
lods
dec
sbb
ret
rol
xchg
jl
or
nop
cmp
jb
(bad)
shl
dec
mov
adc
add
jo
xor
fs
mov
jmp
ret
call
clc
xor
sub
push
shl
mov
add
scas
mov
inc
hlt
daa
into
ds
add
jns
sbb
mov
shl
add
out
inc
dec
mov
sti
mov
test
jp
dec
push
std
and
rcr
inc
pop
ins
pop
lods
repnz
jns
push
add
mov
jno
ror
pop
sbb
aam
fisubr
fmul
jno
mov
aad
js
popf
ins
xchg
pushf
sbb
retf
ror
and
inc
fistp
jle
loope
push
inc
mov
jp
pop
sti
pop
mov
jl
adc
ret
sub
jnp
ins
pop
jle
xor
pop
jbe
retf
add
ret
xor
mov
fist
lods
test
sbb
ins
jmp
push
add
push
and
pop
push
mov
adc
rcl
add
mov
xlat
lahf
cs
data16
and
dec
cmp
add
cmp
jg
sbb
and
ja
and
cmps
xchg
rol
xor
dec
arpl
fs
push
jg
and
neg
(bad)
sti
inc
sub
jo
mov
out
ror
mov
pop
fmul
stc
lods
mov
pop
movs
xor
repz
aaa
push
pop
or
push
mov
ret
push
ret
leave
and
pop
add
pop
xor
retf
dec
ret
push
ins
cmp
pop
rol
fst
cmps
jmp
retf
jp
stc
sub
cmps
(bad)
(bad)
jecxz
jp
or
push
cs
xchg
and
or
sbb
inc
ret
out
jmp
jne
push
xlat
adc
popf
mov
stos
sbb
cmovb
or
mov
push
cwde
loop
leave
mov
mov
mov
mov
adc
cld
in
loopne
dec
add
mov
xor
jmp
mov
ins
ja
fadd
sub
in
push
or
adc
in
addr16
mov
repz
test
dec
out
push
inc
int3
pop
dec
fnstcw
cmc
mov
aaa
add
inc
and
inc
jecxz
inc
xchg
fnstsw
push
retf
aam
pop
and
(bad)
jg
add
shr
repnz
into
and
mov
ins
outs
xchg
cmp
sbb
push
sbb
gs
adc
cmp
(bad)
sahf
lock
iret
addr16
xchg
test
sahf
inc
lock
in
inc
in
in
ins
out
and
cmp
lahf
xchg
cmps
shl
and
loop
inc
retf
lock
and
into
push
add
mov
mov
jno
loope
jecxz
fist
(bad)
stc
dec
or
jle
adc
pop
xor
sub
fdiv
dec
lahf
arpl
pop
mov
nop
pop
dec
jg
pushf
jmp
jmp
mov
push
or
repz
pusha
(bad)
retf
cmp
in
xchg
dec
mov
push
mov
fldcw
fwait
pop
jmp
mov
adc
or
mov
stos
inc
addr16
mov
ss
addr16
imul
inc
inc
sbb
mov
and
jecxz
xchg
xchg
sbb
js
je
cmps
stos
adc
movs
and
mov
popf
icebp
adc
test
mov
jmp
sub
ret
retf
ja
mov
mov
jo
retf
xchg
and
in
dec
fdivr
push
scas
cmp
mov
ror
movs
test
pop
rcr
vblendvpd
test
adc
lock
pop
dec
dec
shl
jg
jne
cli
iret
push
mov
ficom
cs
jl
pop
test
xchg
addr16
sub
in
dec
sbb
sub
imul
push
mov
jmp
jo
ficomp
dec
int
mov
or
sbb
sbb
sub
mov
dec
and
hlt
dec
and
and
fs
sbb
xchg
jl
mov
and
mov
sub
adc
inc
xor
retf
sub
(bad)
sbb
xor
fst
int3
in
(bad)
fsub
pop
mov
cmps
inc
lods
ds
repz
imul
int3
pop
fwait
mov
sti
dec
cmp
sub
dec
scas
lods
sbb
(bad)
repnz
xor
or
in
data16
jnp
mov
or
aas
pushf
retf
jbe
and
cmp
cli
(bad)
aas
mov
cmp
dec
das
fucomp
call
push
jmp
push
je
mov
jp
(bad)
data16
ss
mov
sub
loopne
jmp
inc
mov
mov
ret
into
scas
mov
out
cmp
inc
(bad)
push
jne
fnstsw
pop
or
pop
(bad)
enter
test
and
sbb
bnd
loope
js
push
int3
test
icebp
inc
movs
jmp
jecxz
mov
xchg
aad
mov
clc
mov
dec
and
xor
repnz
pop
inc
and
in
nop
ds
jmp
cmp
sub
leave
ins
imul
or
xor
inc
rcl
aam
pop
sbb
push
imul
pop
mov
jno
adc
outs
aas
pop
fwait
test
inc
rcl
ror
pop
xchg
add
mov
mov
and
test
cmps
pop
sbb
xchg
xchg
or
sahf
adc
xor
jne
and
push
out
pop
ret
and
dec
and
mov
mov
jns
lahf
cmp
sub
jnp
cli
mov
adc
mov
jp
cmc
jg
jnp
xchg
cmp
outs
pop
je
fidiv
bound
add
mov
popa
adc
movs
push
push
cdq
xchg
ins
mov
je
dec
xchg
mov
int
das
jnp
(bad)
mov
cmp
call
cmp
mov
call
lea
stos
push
jle
cmp
lods
cmc
mov
cld
stos
mov
jae
or
imul
ins
nop
or
push
out
mov
jb
(bad)
out
or
push
ret
mov
nop
mov
dec
mov
(bad)
fsubr
and
das
jle
movs
and
jae
outs
push
pop
push
retf
xlat
shr
rol
popf
loopne
dec
add
or
dec
loope
sbb
mov
in
xor
sub
or
dec
pop
in
pop
cmp
jno
lock
jle
lock
jge
aam
call
fisub
push
cmp
pop
and
test
lahf
pop
fistp
add
xchg
or
pop
mov
inc
jno
popa
dec
xor
or
(bad)
and
dec
nop
mov
pop
sbb
scas
jp
js
sub
jae
test
pusha
push
xchg
movs
mov
lods
mov
jbe
out
in
test
mov
leave
test
mov
test
mov
shl
cmp
fs
lahf
mov
xor
aaa
dec
or
sbb
aam
sub
fsubr
cmp
cli
jnp
lods
lds
sar
push
stos
and
outs
pavgb
inc
mov
js
iret
fdivr
jnp
fcom
fnstenv
inc
out
and
fs
repnz
sbb
sbb
scas
fadd
ja
dec
xor
mov
and
mov
sub
mov
jl
dec
lods
test
loope
test
pusha
push
stc
daa
or
les
push
out
cmp
es
xor
pop
(bad)
jmp
push
mov
xchg
sti
(bad)
mul
in
jmp
sub
inc
jge
mov
xlat
push
xchg
mov
or
mov
cmp
rol
sbb
fwait
xor
fdiv
xor
jmp
and
jo
outs
stos
adc
cmp
xor
movs
fwait
jle
and
inc
mov
jne
push
sub
pop
lods
pop
ins
leave
push
in
cmps
xor
cmp
pop
mov
pop
cmp
jl
mov
aad
sub
movs
add
test
xor
mov
scas
pop
xchg
xchg
or
pop
cmp
inc
push
test
jmp
dec
dec
push
ret
sub
hlt
sub
mov
dec
enter
push
mul
fs
push
and
and
pop
nop
and
cld
jns
inc
mov
fwait
cmp
stc
dec
adc
mov
xchg
mov
dec
dec
adc
add
loop
out
sbb
dec
jle
jb
mov
pop
pop
test
and
(bad)
pop
or
adc
(bad)
popf
xor
movaps
inc
sub
sub
inc
mov
test
mov
imul
cmp
or
int
clc
xchg
in
loop
push
out
inc
jg
mov
push
push
jge
xor
mov
mov
cmps
daa
pop
xchg
or
es
sbb
cmp
fwait
cmc
hlt
mov
sbb
gs
and
dec
and
ficomp
js
mov
inc
popa
cmps
gs
push
lahf
les
loopne
and
shl
fsubr
popw
pop
xchg
inc
fidivr
ret
bnd
xor
loope
fcom
jmp
dec
xchg
xchg
cmps
inc
and
test
pop
ds
mov
sbb
push
lea
jo
mov
out
jb
out
mov
bound
stos
ret
push
jne
add
jmp
xor
mov
cmp
in
out
mov
mov
mov
inc
ins
fidivr
or
retf
scas
cdq
mov
push
shl
mov
stos
mov
lds
mov
into
div
cmp
mov
cmps
repnz
sub
and
add
adc
jle
sub
ins
iret
jge
sub
daa
scas
mov
jmp
test
aas
xor
jmp
mov
enter
and
push
int
mov
imul
and
xor
adc
iret
pop
mov
enter
fisubr
sub
sbb
shr
push
sub
push
lods
enter
jmp
add
fdivr
jae
jl
mov
mov
jno
xchg
stos
clc
jnp
out
cdq
iret
push
scas
addr16
test
dec
sub
cs
add
dec
leave
daa
or
shl
pop
dec
jae
cmp
inc
mov
iret
outs
daa
iret
jns
fadd
dec
test
lods
(bad)
mov
ret
aaa
jbe
imul
hlt
test
inc
dec
mov
sub
sti
sub
fs
mov
ins
and
sbb
cmp
fadd
arpl
xor
xor
push
cmps
sub
pop
mov
mov
adc
push
push
adc
les
fldcw
and
outs
mov
xchg
push
ins
sahf
call
xor
loop
dec
dec
gs
push
mov
add
ret
test
test
sbb
fimul
ss
data16
pop
not
pusha
push
test
jmp
mov
fs
cmp
dec
fwait
pop
lahf
cs
sub
or
adc
inc
cwde
mov
pop
jle
jmp
mov
push
mov
out
call
aam
aam
(bad)
stos
lea
cmp
mov
push
bound
xchg
lock
out
add
gs
aam
xchg
shr
mov
mov
cli
test
pop
push
data16
pusha
xor
or
loop
sbb
jb
mov
mov
(bad)
xchg
pop
call
mov
ds
rcr
push
xchg
and
mov
call
call
xchg
mov
xor
dec
fcomip
(bad)
jmp
jns
out
cmp
shl
mov
xchg
mov
in
pop
pand
push
stos
or
shr
bound
push
mov
and
popf
ret
xchg
lods
rcl
xchg
test
in
jmp
pop
ja
push
loope
cmp
pop
sub
fsub
adc
and
sahf
or
dec
pusha
(bad)
dec
lods
stos
lods
xchg
adc
xor
push
xchg
popf
cmp
les
xor
mov
ss
mov
rol
int
inc
scas
mov
pshufw
fsub
imul
jle
inc
cmp
outs
add
jne
jmp
adc
jge
adc
out
add
jmp
push
xor
out
adc
xchg
imul
pushf
pcmpgtw
rcl
push
aam
dec
(bad)
cs
inc
xor
cmp
rcl
in
push
int
(bad)
stos
push
and
leave
vpshaw
andps
cwde
sub
adc
jg
popf
or
(bad)
frstor
out
out
test
aad
lds
xchg
dec
mov
cmp
adc
push
cmp
mov
sbb
jmp
loopne
aam
test
sti
lods
dec
aas
imul
xor
mov
pop
sub
test
aas
shr
adc
icebp
pusha
mov
sbb
sbb
into
lods
dec
jmp
inc
dec
jns
xchg
and
mov
fidiv
sti
stos
adc
lds
icebp
dec
xchg
xchg
pop
test
icebp
movs
pushf
sub
push
loop
repnz
fisttp
mov
xor
outs
lahf
je
stos
push
add
adc
or
pop
ret
jb
scas
push
inc
mov
outs
cli
stos
imul
scas
(bad)
(bad)
rcr
scas
xor
int
(bad)
daa
out
stc
arpl
jmp
icebp
test
xchg
popf
mov
push
iret
pop
push
ret
test
and
and
nop
test
mov
mov
les
lds
cdq
inc
sbb
adc
inc
test
rcr
pop
mov
adc
inc
mov
adc
pop
jmp
or
test
(bad)
loop
enter
aam
pop
pop
mov
inc
push
push
lods
mov
add
ror
pop
pop
(bad)
les
repnz
push
push
rcl
inc
xlat
mov
imul
or
add
je
in
mov
xchg
out
inc
dec
fld
std
or
imul
adc
shl
and
int
fld
push
test
and
shr
mov
out
test
rcr
pop
in
into
cmps
cmps
imul
xor
ror
mov
sahf
das
in
add
es
add
lock
outs
adc
mov
adc
lock
pop
push
adc
call
or
xchg
or
js
adc
outs
sub
or
and
fisub
adc
push
pop
fistp
fwait
pusha
repz
sbb
sub
cmp
mov
lea
inc
pusha
call
dec
retf
ja
fild
(bad)
mov
jmp
jle
call
mov
mov
push
xchg
mov
jmp
rcr
sub
sub
lahf
test
xor
cmp
pop
popa
test
loop
xchg
(bad)
and
and
cmp
xchg
add
mov
jge
cmp
and
(bad)
(bad)
sub
and
psraw
imul
push
stc
xchg
xchg
jecxz
push
pop
fcom
(bad)
scas
jg
sbb
jne
es
xchg
pop
xchg
lea
cli
pop
adc
mov
outs
cmp
enter
xlat
mov
ins
mov
xchg
push
or
xlat
mov
ror
(bad)
fadd
or
fucomp
add
add
mov
int3
jbe
jns
or
ret
mov
dec
aad
div
and
push
or
add
inc
xchg
mov
jmp
into
sahf
add
into
lahf
cmp
int
dec
rol
fwait
push
retf
xchg
out
ins
mov
je
adc
dec
in
js
add
dec
mov
pushf
cmp
dec
jno
repz
jmp
dec
mov
pop
popa
test
add
fcmovu
in
inc
ret
adc
jp
dec
dec
mov
imul
pop
test
and
push
imul
test
shl
jge
scas
out
les
icebp
fldenv
out
in
pop
inc
shl
push
or
jae
daa
sub
repnz
sbb
push
(bad)
jb
out
clc
push
or
mov
add
retf
cmp
int
jle
add
dec
es
mov
dec
outs
arpl
dec
jg
in
cmp
cld
fwait
popf
dec
je
les
pop
push
sahf
push
xchg
(bad)
and
jl
jns
push
ror
push
es
cmp
push
adc
add
shl
jae
mov
mov
outs
or
push
fsub
cmp
ja
cmp
leave
rcl
pop
mov
js
mov
jmp
retf
les
out
test
jg
div
push
ror
pusha
jne
out
mov
sub
and
xchg
repnz
xchg
lds
ss
and
cmc
rep
and
btr
mov
imul
jecxz
sbb
sbb
pop
add
fisttp
cmps
or
sahf
cmc
test
or
pushf
int
push
inc
jo
cmp
jmp
mov
iret
xor
sbb
aad
xchg
int3
(bad)
retf
sub
mov
add
mov
sti
add
(bad)
stos
mov
push
stos
mov
enter
xor
dec
ficomp
sub
fisttp
cmp
repnz
adc
mov
and
xor
xlat
fild
scas
mov
adc
inc
mov
ja
or
dec
xchg
and
mov
pop
inc
pop
ficom
add
aam
cwde
int
or
mov
out
out
call
es
cmp
sbb
ja
push
add
jmp
enter
mov
xor
xor
les
sar
jnp
idiv
imul
popf
pop
ds
cmp
popf
clc
leave
cli
xchg
cdq
retf
cmc
popf
dec
jnp
mov
sti
xchg
mov
inc
pusha
push
adc
mov
mov
xor
mov
in
test
int3
xchg
iret
lds
jmp
inc
or
lea
sbb
mov
sub
int
jp
xchg
arpl
xor
and
fwait
pop
push
aad
bound
add
or
nop
xchg
enter
in
cmps
add
test
pop
lea
mov
(bad)
pop
int
adc
mov
xchg
add
rol
or
mov
(bad)
fwait
mov
fisub
jmp
lahf
popa
fdiv
or
in
push
cmp
das
test
in
lahf
aad
les
jmp
ja
je
sbb
sbb
xchg
adc
mov
push
cmc
fstp
dec
mov
pushf
cmc
mov
in
std
jne
add
or
stc
add
add
xchg
sar
cmp
std
mov
jbe
add
ins
mov
sub
sub
lea
nop
repnz
call
jae
and
scas
mov
adc
aas
cmc
cmp
imul
ins
mov
sub
jmp
imul
and
cmp
inc
aad
jge
sbb
mov
jmp
daa
or
xlat
mov
sbb
pop
test
push
push
sahf
outs
sub
pushf
add
ss
push
ret
mov
sbb
cmp
add
pushf
mov
jmp
mov
xchg
dec
sub
and
nop
lods
cmp
iret
shl
pop
lods
(bad)
bound
mov
mov
fucomip
and
popa
pop
xlat
push
xlat
mov
(bad)
pop
push
xor
shr
pushf
rcl
int3
int
and
movs
sub
das
dec
and
adc
retf
sbb
sahf
out
rol
mov
std
inc
(bad)
(bad)
jne
leave
jo
movs
sbb
mov
enter
sti
aam
fstp
in
imul
lods
sbb
pop
lods
out
dec
sbb
dec
inc
aad
inc
cs
jne
arpl
mov
(bad)
ins
mov
imul
push
jp
popw
(bad)
loope
xchg
adc
mov
cmp
push
popf
xchg
mov
scas
pop
popa
aad
push
(bad)
shr
add
add
cmp
scas
and
mov
fild
mov
or
and
jnp
inc
pop
in
scas
cdq
leave
jg
xchg
mov
aam
xor
enter
repnz
or
repz
mov
mov
sub
or
sbb
das
stos
and
mov
idiv
daa
test
adc
inc
mov
adc
sbb
test
rcr
jne
fwait
push
xchg
dec
lods
(bad)
ret
ss
lahf
addr16
out
mov
inc
nop
std
adc
scas
lds
xor
leave
enter
pop
pusha
(bad)
rcl
mov
jne
push
mov
sub
inc
inc
pop
pop
sub
ror
mov
push
lds
test
cmp
push
add
pop
xchg
xlat
jns
mov
adc
pop
inc
cmp
ss
dec
ja
jg
cmp
sbb
pop
pop
sti
inc
cmp
push
je
imul
adc
inc
mov
scas
pop
xchg
add
repnz
cmp
call
shl
into
jl
ss
clc
mul
(bad)
(bad)
loop
jo
das
sub
sbb
arpl
outs
xchg
lahf
repnz
scas
jnp
pop
xchg
mov
pop
fimul
lahf
mov
stos
call
fsubr
or
push
(bad)
xchg
push
ror
pop
xchg
pop
inc
push
in
add
leave
pop
nop
test
fsub
xchg
and
and
jo
ret
sub
push
cmp
mov
in
add
mov
lods
cmps
(bad)
push
mov
mov
(bad)
or
ss
shl
jmp
test
daa
inc
cwde
or
hlt
daa
iret
shl
inc
xchg
repnz
ret
adc
pop
jl
mov
(bad)
pusha
jmp
dec
push
int3
dec
pop
es
adc
imul
scas
cmp
hlt
(bad)
aam
sbb
mov
push
pop
rcr
adc
ja
fs
mov
sbb
js
repnz
push
sbb
and
and
bound
adc
jle
xchg
add
scas
bound
jnp
xchg
or
into
aam
and
xchg
ror
(bad)
std
aaa
je
or
addr16
push
out
dec
aaa
pop
movs
(bad)
dec
and
ficomp
int
daa
loope
stos
sar
jge
cmp
sub
popf
sbb
push
test
cwde
adc
in
sar
push
push
sub
mov
mov
xor
enter
xor
rol
dec
mov
adc
jne
jo
xchg
retf
add
add
pop
imul
sub
cli
in
cmc
dec
cmps
or
sub
in
push
in
xchg
dec
(bad)
jnp
pop
iret
lock
mov
aas
mov
cmp
scas
add
mov
adc
inc
sub
int
pop
add
mov
hlt
and
pushf
push
addr16
sub
(bad)
mov
mov
jge
shr
retf
sub
ss
cmp
mov
cmp
(bad)
in
adc
leave
popf
stc
push
sub
test
pop
inc
pop
test
je
and
dec
call
sbb
dec
jne
jne
in
push
mov
ret
push
lea
jmp
jmp
retf
lock
push
fwait
(bad)
sub
(bad)
je
inc
shl
fdivr
in
push
mov
mov
mov
lds
mov
int
fwait
pusha
fdiv
and
dec
pusha
std
push
and
pop
inc
cmp
ret
test
inc
push
jae
dec
hlt
jbe
add
leave
inc
out
mov
fimul
dec
push
aaa
shl
scas
xor
xchg
outs
mov
add
cmp
and
xchg
montmul
cmps
ret
cmc
mov
out
mov
sti
add
jmp
jl
cmp
nop
clc
retf
sbb
repz
mov
out
or
loopne
xchg
pop
xchg
out
push
ja
inc
rol
popf
inc
push
and
es
lahf
neg
dec
shr
cmc
cmp
(bad)
pop
cwde
pop
pop
sti
fwait
(bad)
jp
ss
daa
arpl
aas
jbe
aam
std
and
call
outs
into
mov
sbb
dec
outs
add
js
ins
and
xor
je
jmp
out
fistp
je
sahf
adc
or
push
xchg
(bad)
fs
jg
pop
sub
inc
push
fidiv
stos
ret
rol
jg
popa
cmp
pmulhuw
loopne
sbb
xor
mov
mov
mov
push
xor
retf
mov
pcmpgtd
cmp
out
adc
dec
mov
test
jmp
push
nop
lahf
pop
mov
mov
or
gs
dec
shl
mov
jp
imul
fild
sbb
pop
dec
and
jmp
out
add
jecxz
test
pushf
ror
aas
pop
xchg
adc
jbe
mov
test
rcr
inc
inc
push
punpcklbw
xor
(bad)
jno
sbb
mov
sbb
fwait
and
test
adc
repz
jmp
cmp
loop
push
daa
enter
mov
hlt
aad
mov
inc
aam
or
pop
xchg
cld
add
test
cmc
ins
dec
jg
sub
(bad)
ds
mov
pop
loope
fnstcw
(bad)
pop
int3
neg
imul
stos
jg
scas
inc
aam
dec
test
sub
cmps
mov
inc
pop
mov
fcmovnbe
push
shl
ficom
sahf
rol
out
push
aam
cdq
and
jno
push
outs
stc
inc
push
sub
cli
mov
sub
xlat
xor
jbe
mov
or
xor
lods
xchg
movs
aaa
hlt
and
mov
outs
mov
cmc
sub
(bad)
mov
cmp
xchg
(bad)
fwait
pop
les
pop
sbb
push
ins
rcl
call
rcl
add
shr
dec
adc
idiv
pop
enter
add
movs
mov
in
(bad)
ins
out
retf
nop
cmp
fst
pop
dec
jmp
adc
loope
mov
jl
pop
or
dec
or
jns
(bad)
(bad)
mov
rcr
inc
mov
dec
pusha
adc
stc
xor
test
ds
dec
leave
mov
ror
pop
test
or
adc
sub
scas
jmp
repz
cmps
(bad)
dec
data16
sub
pop
into
push
aaa
add
sub
sub
push
pop
adc
add
sbb
inc
pusha
icebp
test
js
push
mov
fxch
in
jnp
or
mov
push
mov
jmp
aas
dec
xor
sbb
mov
(bad)
jo
and
push
sub
(bad)
fild
enter
mov
shl
cmp
iret
or
imul
cmp
scas
pop
inc
dec
ret
xchg
or
jge
imul
mov
aam
out
and
in
mov
dec
sti
jmp
sub
and
outs
pop
xor
mov
push
mov
pop
cdq
sub
call
xchg
sub
or
aaa
fwait
inc
mov
dec
fxch
les
xor
mov
push
scas
rcr
cmp
ret
cs
fidiv
icebp
sbb
add
std
fld
and
clc
add
int
xchg
in
jmp
xor
push
xchg
jl
scas
outs
sar
sub
loopne
add
out
mov
push
cdq
cld
adc
mov
mov
enter
jle
pop
inc
push
mov
dec
jmp
ds
pop
push
dec
lods
loop
push
jp
fs
neg
jno
in
xchg
mov
data16
fisubr
dec
das
dec
xchg
pop
enter
xor
pushf
cmp
(bad)
outs
or
lods
xchg
jle
adc
lods
pop
(bad)
mov
std
retf
movs
pop
ror
rcr
mov
mov
xlat
add
out
push
and
out
jge
push
and
and
stos
adc
enter
jne
push
push
ja
shl
shl
dec
or
loope
frstor
loope
push
daa
jno
(bad)
clc
dec
mov
mov
inc
dec
mov
popa
jbe
(bad)
mov
in
repz
pushf
sub
fistp
dec
mov
std
mov
(bad)
in
int3
dec
lock
ins
mov
imul
jmp
ds
or
cwde
call
shl
jne
repnz
push
mov
mov
int3
push
stc
in
mov
adc
cmc
inc
inc
sub
fisubr
vrcp14pd
jecxz
jp
xchg
mov
pop
dec
lahf
xchg
in
test
sbb
mov
mov
in
adc
scas
(bad)
fnsave
pop
xor
cmp
dec
inc
cld
jecxz
cmp
test
inc
popa
stos
into
jmp
into
aas
xchg
dec
xchg
jae
or
pop
push
mov
into
jno
sub
outs
repnz
inc
stos
xor
mov
add
call
jne
imul
cmp
jg
enter
xor
mov
mov
mov
and
aas
in
xchg
pop
push
inc
xchg
cs
stos
xchg
in
outs
add
pop
ret
mov
sti
je
sub
div
jmp
adc
add
pusha
xor
cld
push
idiv
cmp
sti
outs
(bad)
(bad)
sub
movntps
and
dec
rol
mov
jno
pop
and
sbb
cld
movs
pop
push
(bad)
lods
mov
(bad)
in
movs
jbe
clc
clc
pop
addr16
xlat
cmp
fwait
ins
test
push
mov
cdq
ds
mov
scas
sbb
sbb
addr16
ins
fsubr
push
mov
fldenv
cmps
mov
fs
ret
xor
dec
and
call
arpl
addr16
(bad)
ins
xlat
iret
shl
or
and
and
jp
xchg
dec
inc
ficomp
add
cmp
jecxz
sub
mov
test
mov
adc
int
je
jg
dec
dec
mov
cmp
stc
retf
popa
fst
jb
sbb
jne
cwde
adc
sub
mov
add
dec
repz
je
xlat
xchg
pop
adc
xchg
retf
lahf
sbb
cmp
or
lock
arpl
sbb
cmc
pushf
retf
or
ins
xchg
arpl
stos
movs
std
and
mov
in
cmp
ds
mov
fild
jle
mov
int3
(bad)
cmp
pop
jno
sti
inc
pusha
in
mov
add
test
(bad)
mov
sub
imul
int
cmp
cmp
jb
mov
pop
aam
sbb
lahf
mov
xchg
fwait
popf
jge
pop
push
adc
xchg
imul
add
icebp
scas
ret
cmp
dec
pop
adc
popa
out
adc
(bad)
push
(bad)
and
mov
add
push
out
xchg
js
jp
sbb
stos
mov
sub
das
sbb
ret
out
xchg
and
mov
pminsw
lea
add
or
jnp
in
adc
imul
cmp
retf
mov
out
and
inc
fadd
xchg
lahf
or
sub
loope
mov
dec
daa
add
inc
dec
mov
mov
and
mov
xor
je
add
stc
add
stos
mov
dec
arpl
xchg
xlat
jne
(bad)
aad
int
sub
and
aaa
push
in
pushf
in
lods
mov
ins
add
out
sbb
add
dec
arpl
jns
mov
sbb
std
cmc
mov
cwde
movs
sbb
add
push
mov
pusha
xchg
in
adc
in
and
cdq
sub
repnz
mov
mov
in
mov
(bad)
sar
add
push
push
push
push
mov
jmp
jb
jle
or
pop
das
rol
imul
mov
push
dec
adc
cdq
and
fidiv
push
inc
and
cmc
outs
sbb
imul
pop
mov
pop
adc
scas
aaa
lods
(bad)
mov
mov
mov
fadd
adc
enter
or
in
dec
rcr
dec
shl
stos
and
(bad)
mov
xchg
(bad)
out
scas
xor
jecxz
repnz
cmps
mov
enter
jnp
dec
mov
ja
mov
dec
fisttp
scas
mov
lea
xchg
jns
loope
pusha
fstp
loope
ret
or
cli
adc
xchg
cmp
in
push
or
movd
dec
inc
(bad)
not
push
scas
mov
cmp
movs
or
dec
adc
dec
pop
sub
mov
cmps
jb
call
lahf
mov
and
lahf
pushf
mov
pusha
mov
pusha
cwde
cdq
fsincos
fimul
cdq
clc
fdivr
in
mov
and
jp
mov
push
xor
mov
sahf
mov
ficomp
or
hlt
jmp
sbb
adc
retf
jecxz
fstp
mov
sbb
lahf
pop
sub
lods
sub
stos
cli
xchg
sbb
pusha
retf
xor
cmp
pop
dec
push
push
mov
mov
fs
xlat
popa
leave
movs
sahf
call
movs
(bad)
pop
mov
push
jg
(bad)
repz
push
adc
test
(bad)
in
popf
sar
xlat
sti
xor
xchg
pop
push
mov
sub
shl
test
jmp
xor
mov
inc
jae
jp
mov
xchg
sbb
jbe
popf
(bad)
cmp
cmp
pop
retf
cmp
stc
push
mov
repz
adc
pop
dec
push
cmps
jno
out
outs
fist
jp
jns
sub
clc
adc
(bad)
ror
jnp
push
mov
xor
mov
cmp
sbb
push
push
inc
pop
mov
rol
pop
xchg
mov
ret
dec
adc
pusha
test
int
jns
dec
dec
test
dec
syscall
mov
cmps
and
and
mov
mov
mov
jae
sbb
xlat
fistp
in
mov
mov
pop
mov
add
shl
out
aam
aad
pop
in
xor
mov
jp
sti
(bad)
(bad)
sahf
mov
add
shl
cmc
into
(bad)
cmps
lock
loopne
xchg
fidiv
pop
stc
iret
imul
xchg
dec
pop
addr16
pushf
adc
jb
cdq
loopne
ror
(bad)
das
gs
adc
cmp
lahf
ret
dec
mov
pop
inc
repnz
push
inc
mov
cmps
inc
cmp
lds
fcomp
jne
dec
ret
jl
dec
pusha
jnp
adc
leave
mov
push
test
mov
cmp
das
pop
sbb
xchg
sahf
les
mov
sub
into
lds
test
pop
xor
jns
mov
rcl
pop
clc
xor
lahf
mov
int
sub
out
aad
mov
rcl
aas
sub
cmp
pop
hlt
inc
jg
ja
adc
ror
(bad)
das
popf
adc
mov
cmp
ror
push
aas
aaa
ret
push
xchg
int
sahf
cmps
ins
xor
xchg
stos
icebp
push
jg
movs
dec
mul
pop
push
jecxz
ins
pop
addr16
scas
pusha
mov
jmp
sar
xor
dec
nop
dec
push
rcr
loopne
push
je
mov
xor
pop
jb
jnp
retf
ret
fisub
adc
fnstcw
test
jmp
cs
(bad)
or
xchg
je
nop
cdq
pop
and
es
mov
and
test
mov
inc
scas
cmp
shr
adc
int
mov
scas
cmp
dec
xchg
aas
xor
or
or
xchg
fdiv
adc
jnp
sahf
mov
mov
cmp
xchg
add
inc
inc
add
loop
mov
sbb
(bad)
adc
xchg
test
or
loope
fiadd
out
pop
xor
scas
out
push
ss
popf
mov
xchg
dec
push
fidivr
xchg
retf
push
or
enter
jmp
sahf
das
pop
mov
add
xchg
(bad)
ret
cmp
push
int
mov
mov
jmp
jns
sbb
mov
dec
std
cmc
or
sub
or
(bad)
loope
jecxz
cmps
push
mov
dec
(bad)
mov
inc
cmp
cmp
lock
ficomp
(bad)
outs
xor
xchg
jnp
xchg
inc
std
push
mov
out
sub
xor
nop
pop
jle
cmp
adc
pop
fisttp
pop
pop
enter
scas
mov
inc
ja
ret
add
adc
cmp
and
push
sub
outs
pop
rol
mov
mov
sbb
scas
test
hlt
jl
fidivr
push
lods
div
xchg
test
mov
jne
das
dec
ss
inc
mov
jmp
iret
movs
loope
mov
mov
mov
pop
jbe
mov
sbb
cmp
add
and
jp
in
jb
pop
pop
ret
icebp
adc
sub
(bad)
rol
(bad)
jle
stos
push
jecxz
ins
sub
mov
sub
mov
sub
mov
xchg
push
jecxz
sbb
sub
jnp
std
enter
adc
pop
rcr
mov
dec
sbb
adc
mov
sar
xor
cs
scas
outs
out
dec
jl
sbb
rol
jl
push
adc
ds
cmps
push
pop
daa
test
stos
push
xchg
cmp
xchg
mov
sbb
sbb
(bad)
push
dec
data16
dec
cmps
push
pop
or
push
sahf
pushf
or
inc
std
aas
sbb
mov
cs
shl
adc
xor
add
pop
adc
or
or
xchg
jle
fadd
cmp
test
dec
push
pop
stos
mov
xchg
je
retf
inc
cld
into
adc
daa
imul
(bad)
sub
mov
ret
inc
pop
dec
fiadd
jbe
cmps
or
cld
enter
push
aaa
add
ins
daa
(bad)
jl
push
enter
sub
imul
xchg
(bad)
jbe
xchg
xchg
add
popa
inc
xchg
cmp
dec
push
adc
out
repz
paddw
gs
pop
lods
not
lods
pop
popf
mov
or
pop
cmps
mov
fisubr
adc
push
imul
mov
jle
sar
inc
mov
popf
sub
jmp
imul
gs
mov
jo
imul
push
dec
mov
push
push
rcl
popf
jg
jmp
shr
std
int3
loop
sub
daa
sbb
sub
jbe
test
dec
mov
pop
cmp
sbb
and
xchg
add
jne
jp
sub
mov
xor
and
test
ja
push
pop
(bad)
adc
hlt
add
jmp
retf
div
pop
les
inc
in
aam
stc
mov
outs
xchg
push
or
enter
jg
push
pusha
loope
xor
mov
mov
imul
(bad)
xor
pcmpeqw
sahf
outs
push
outs
mov
dec
adc
xor
test
iret
inc
outs
cs
xlat
pop
pop
(bad)
int
or
sub
cdq
mov
cmp
xor
das
and
es
test
adc
adc
adc
cwde
imul
sub
sahf
jns
dec
scas
dec
pushf
mov
je
stos
std
out
ja
mov
jne
cmps
repnz
ins
(bad)
lock
sub
fwait
adc
lods
push
pop
mov
mov
cmc
adc
push
mov
fcmovnb
movs
cwde
into
repz
fnop
out
inc
lods
xchg
push
scas
sub
and
cmp
add
(bad)
int3
(bad)
(bad)
stos
lock
mov
fld
shl
add
inc
push
aam
jne
pop
mov
das
stos
stos
jno
sub
mov
retf
sar
ja
(bad)
or
mov
dec
call
icebp
or
mov
jmp
scas
rol
or
fs
sar
(bad)
das
mov
cmp
sbb
fxch
mov
(bad)
je
aas
sbb
cmp
mov
jb
add
xchg
sbb
ficom
sbb
ins
jae
pop
pusha
pop
jb
in
mov
test
mov
xor
mov
sub
fidiv
and
fstenv
pushf
mov
int3
jmp
xor
pop
xchg
dec
xchg
or
and
xchg
dec
popf
outs
pop
shl
(bad)
jge
pop
xchg
sbb
inc
mov
sub
lock
fimul
dec
js
jmp
(bad)
sub
in
dec
sar
in
stos
(bad)
mov
sub
xlat
mov
ret
fwait
xchg
cmp
lds
ret
push
fcomp
std
repnz
mov
or
or
(bad)
dec
mov
push
in
cli
lahf
dec
ins
rol
imul
push
or
shl
loopne
xchg
mov
imul
not
(bad)
ss
ins
jg
pop
idiv
hlt
mov
sub
dec
cli
and
xchg
cmp
jno
fistp
loopne
jae
jecxz
and
or
test
or
pop
cmp
pop
ja
mov
add
and
jo
cmps
sti
shr
xor
cmps
fst
pusha
and
pushf
test
mov
scas
sbb
sub
call
jno
sbb
js
add
popa
and
cmp
jg
loopne
movs
test
mov
bound
sub
fcmovnbe
sbb
lods
sub
xor
jnp
mov
mov
mov
jno
cmp
mov
fild
and
adc
dec
cwde
and
xchg
inc
out
imul
pop
add
jp
sub
sbb
ja
pop
add
ja
pop
div
mov
inc
dec
(bad)
mov
ss
std
mov
les
sbb
mov
scas
(bad)
mov
repz
or
sub
or
dec
leave
mov
pop
test
push
pop
mov
int
mov
enter
sub
add
rol
inc
xchg
mov
inc
nop
ins
mov
iret
das
or
pop
rcr
mov
add
push
push
shl
std
mov
repnz
pop
dec
fsub
icebp
sbb
and
pop
sbb
(bad)
retf
(bad)
cli
or
fmul
mov
mov
mov
mov
pusha
cs
push
daa
mov
pop
test
add
lds
push
jbe
bound
stc
push
xchg
add
cmps
movs
inc
inc
addr16
or
jno
sti
(bad)
push
lods
pusha
inc
jle
(bad)
push
adc
retf
push
(bad)
xor
jne
out
aam
add
fnsave
cmc
shl
cmps
pop
adc
push
jo
add
scas
cmp
out
add
movs
xchg
scas
enter
xchg
fisttp
jo
psubsw
(bad)
lea
pushf
jmp
addr16
cs
add
sbb
sub
cmp
out
cli
sub
imul
test
jb
out
int
add
mov
sbb
jg
sub
stc
jae
sbb
or
enter
outs
add
push
adc
push
and
mov
imul
add
neg
popa
xchg
mov
cmc
add
out
cwde
and
aaa
fcomp
push
pop
pop
arpl
push
(bad)
add
ror
push
jp
add
in
pop
mov
ja
xlat
dec
inc
mov
cli
(bad)
ret
daa
cmps
inc
mov
call
sub
es
xchg
adc
inc
in
repnz
jmp
mov
and
mov
or
out
pushf
fcomp
adc
scas
add
mov
(bad)
push
push
arpl
jp
cmp
call
sbb
mov
pop
push
inc
add
adc
idiv
lods
sbb
mov
mov
sub
enter
fwait
sub
sub
or
or
mov
(bad)
jns
cmp
stos
repnz
sub
fidiv
sbb
std
je
fbstp
in
enter
mov
cmp
push
arpl
lea
jmp
(bad)
mov
push
mov
sub
ror
jle
call
gs
add
(bad)
adc
inc
and
(bad)
lock
jmp
sahf
into
pop
push
mov
cli
mov
jmp
adc
jle
in
loope
add
mov
jmp
cli
popf
jno
xor
or
push
pop
pop
ja
ret
sub
jb
push
cmp
jnp
cwde
dec
leave
in
aas
in
inc
xor
mov
dec
mov
movs
xchg
or
aas
cmp
jmp
xor
cli
aaa
xlat
sub
xchg
xor
loope
cmps
in
sti
mov
xchg
and
sbb
add
adc
dec
xor
cld
mov
sbb
mov
cmp
mov
xchg
ins
aad
adc
jae
sub
or
cmp
jno
ds
jp
loope
inc
or
enter
sub
lea
xor
cli
dec
dec
sbb
mov
xchg
or
mov
mov
xchg
mov
or
(bad)
mov
mov
jmp
push
shl
in
aaa
je
arpl
adc
fnstsw
cld
push
mov
sbb
test
hlt
mov
jge
in
xchg
repz
shl
xchg
js
add
mov
mov
popa
cdq
int3
sbb
fisub
dec
fs
dec
jecxz
das
mov
movs
jne
lods
movs
and
lahf
add
add
in
dec
ja
pop
push
and
or
test
mov
fist
dec
add
ja
cld
popa
ret
mov
pop
mov
cld
cmp
leave
fwait
or
pop
fcomip
movs
(bad)
pushf
mov
setle
mov
aad
inc
ins
ja
fimul
or
inc
outs
ja
mov
stos
cmps
xchg
rcl
and
int3
cmps
shl
ficomp
inc
sbb
cmp
xor
xchg
movs
fnstenv
inc
xor
rcl
sub
rol
sbb
jecxz
jo
push
outs
out
or
ss
shl
test
xchg
test
push
nop
scas
lahf
xchg
mov
mov
loop
test
pop
cmp
or
ret
out
xlat
movs
sub
jecxz
inc
sbb
sti
jp
fmul
and
scas
xchg
pop
xchg
adc
gs
bound
add
aaa
and
pop
jmp
push
mov
mov
push
add
pop
in
xchg
ret
mov
aaa
and
pop
mov
jl
pushf
push
pop
mov
pusha
mov
(bad)
ret
popa
mov
pop
ret
test
outs
pop
hlt
lods
aad
(bad)
imul
dec
add
fld
mov
pusha
dec
mov
inc
call
lock
in
fisttp
(bad)
mov
xchg
add
mov
dec
push
jl
bound
aas
jmp
lods
sub
and
pop
sbb
mov
(bad)
mov
push
(bad)
cmp
ja
jae
add
sub
push
in
and
lahf
xchg
or
dec
mov
leave
jle
inc
mov
shr
cmp
sub
outs
jmp
add
xchg
daa
xor
jae
mov
mov
and
push
daa
iret
jle
push
xor
cdq
jne
xchg
pop
inc
mov
in
push
inc
bswap
call
(bad)
lock
and
xor
bound
pop
scas
adc
pop
sub
lods
or
inc
pop
icebp
in
fidivr
dec
arpl
xor
(bad)
xchg
daa
sub
call
inc
jne
jle
ja
and
dec
ss
mov
cli
mov
push
jge
add
cmp
popa
mov
das
sub
test
addr16
scas
ret
sbb
adc
push
push
dec
lea
pop
and
mov
adc
sbb
inc
pop
call
pop
dec
arpl
push
and
mov
or
cmc
sar
(bad)
js
clc
bound
cmp
popf
lea
push
les
std
mov
jno
sub
(bad)
aaa
frstor
jecxz
sar
enter
push
scas
mov
std
ins
sahf
stos
stc
xor
pop
jb
and
cmp
out
and
call
jns
or
cmps
inc
cmp
add
adc
cs
retf
lock
into
mov
mov
ror
lds
push
adc
js
sbb
call
lock
push
outs
adc
je
je
(bad)
mov
ds
aam
adc
sbb
in
mov
sbb
iret
les
adc
(bad)
lds
push
cmp
inc
sub
sahf
xor
and
xor
push
push
dec
fcomp
sbb
dec
pop
repnz
or
nop
and
mov
test
push
bound
movs
loopne
call
xchg
adc
enter
dec
sub
repnz
add
or
or
push
ss
cld
cli
jge
dec
fcomi
popf
xchg
push
fwait
out
pusha
daa
ret
mov
call
ins
push
push
bound
xchg
pop
fs
pop
call
jns
inc
jmp
push
dec
iret
shl
dec
sub
push
loope
out
sbb
das
sbb
das
int3
dec
mov
cdq
and
push
and
rol
in
mov
add
repz
jns
ror
dec
mov
sti
mov
mov
xchg
movs
imul
pop
xchg
les
push
pop
cmp
shl
cli
add
mov
cmc
inc
xchg
mov
not
(bad)
and
cmp
sub
push
push
sub
clc
jp
xor
cmps
out
outs
jmp
out
popf
mov
jge
push
fimul
sbb
mov
fs
xchg
cmp
mov
sbb
jecxz
imul
and
mov
clc
xor
add
aad
(bad)
sti
retf
jmp
mov
fisttp
push
jne
xchg
loope
push
xchg
icebp
push
or
adc
leave
xchg
ret
fcomi
pop
inc
call
int3
aad
dec
clc
int3
nop
cwde
mov
add
das
dec
jae
or
or
mov
out
jns
lods
jb
call
dec
pusha
sub
inc
call
sbb
fwait
jl
jmp
fist
rcr
in
cmp
aad
test
inc
and
adc
sbb
dec
pop
sbb
outs
xchg
sub
sbb
hlt
jge
or
sar
jmp
cmps
test
pusha
sub
lds
movs
pop
xor
xor
rol
or
pusha
and
les
stc
dec
test
xor
shl
or
popf
sub
pop
cli
outs
rcl
jae
js
int
mov
(bad)
add
mov
imul
sbb
in
sar
fcom
stc
arpl
mov
and
ins
mov
jmp
cdq
setnp
or
fimul
out
pop
adc
xor
or
jno
sbb
jno
into
mov
pop
sbb
lahf
aas
data16
and
pop
lahf
nop
fstp
xchg
mov
sub
mov
mov
cvtps2pi
inc
rol
sbb
mov
in
pop
movs
fsub
ds
sub
pop
adc
and
push
lea
inc
stc
pop
jge
clc
or
xchg
jle
and
movs
ins
xchg
pop
mov
cmc
lea
pop
aas
add
sub
xor
fwait
or
sbb
arpl
test
sub
mov
fwait
pop
adc
sbb
scas
push
sub
fist
std
ret
sbb
(bad)
je
call
add
push
inc
lea
inc
inc
sub
inc
call
xor
xchg
imul
xchg
inc
sub
sub
cmp
fnstenv
adc
cmps
add
sbb
out
shr
dec
out
jb
je
xor
(bad)
and
pop
cwde
cmps
lahf
mov
mov
pushf
jge
cli
hlt
inc
xchg
push
lahf
mov
scas
and
dec
lds
cwde
out
dec
pop
(bad)
dec
pop
adc
arpl
dec
cmp
pop
and
rol
lods
arpl
pop
loopne
fnstenv
mov
(bad)
cmp
jmp
clc
inc
loop
jne
outs
imul
mov
add
mov
inc
inc
fistp
test
(bad)
fisub
inc
int
pushf
jo
and
ret
mov
mov
inc
sbb
ret
sub
loopne
cdq
ins
push
hlt
or
mov
out
in
(bad)
cwde
mov
cmp
enter
bswap
test
test
mov
movs
repnz
dec
stos
inc
ins
mov
repz
mov
cmp
push
xor
sub
xor
xor
out
out
imul
inc
pop
retf
aam
clc
mov
leave
mov
dec
xchg
fdiv
adc
cld
ins
cmp
clc
ins
fdivr
in
repnz
cmp
dec
sti
jne
jne
jae
cmp
aaa
loop
test
xor
test
js
dec
not
adc
neg
fdiv
xor
xor
sub
jo
out
inc
aad
inc
sub
xchg
ins
or
sbb
jne
test
inc
mov
mov
leave
ins
sahf
in
cmp
mov
cld
in
cmps
pop
maxps
out
aad
add
adc
add
pop
addr16
sbb
mov
imul
mov
jge
pop
adc
das
push
in
push
xor
push
in
dec
mov
inc
mov
lds
sub
cmp
hlt
test
jl
nop
xlat
(bad)
jne
mov
aam
arpl
test
jno
mov
outs
dec
enter
ins
loop
test
cs
dec
cmc
ret
call
bound
or
jbe
fadd
maxps
add
and
je
into
xchg
out
jbe
sbb
cdq
jns
pop
ficom
pop
cmp
or
adc
pusha
sub
out
retf
stos
add
sub
add
ficom
inc
push
jo
mov
nop
mov
lods
inc
sahf
xchg
sbb
inc
sbb
ds
fist
mov
jmp
pop
mov
push
icebp
movs
mov
xor
gs
data16
leave
repnz
xchg
and
sub
mov
jbe
push
lahf
sbb
xchg
in
ins
int3
out
les
ds
imul
daa
or
xchg
es
cmc
sub
inc
xchg
in
adc
jbe
xchg
mov
push
xor
pop
daa
mov
in
jae
iret
movs
xchg
jnp
sub
pop
pop
push
sahf
jmp
dec
mov
add
aas
xor
jecxz
adc
cmp
ss
(bad)
pop
imul
pop
add
movs
(bad)
cli
(bad)
cmp
pop
inc
lods
push
mov
les
out
mov
sbb
mov
add
sub
dec
out
in
rcl
mov
repz
fs
call
dec
xchg
stos
jmp
stos
stos
sbb
rcr
std
pop
ins
aas
dec
in
inc
push
data16
lahf
sti
xchg
jb
pop
jnp
stos
xor
push
popw
retw
test
jno
push
lea
outs
inc
sub
ret
ins
dec
add
ins
mov
push
retf
(bad)
pop
frstor
jg
or
fidivr
xchg
mov
xor
adc
pop
arpl
xchg
xlat
sahf
div
jne
cli
int3
pop
div
mov
add
xor
stos
fdiv
scas
adc
and
test
cmp
cmp
shl
mov
fiadd
dec
mov
in
xchg
xlat
lock
sub
imul
xchg
dec
dec
test
pop
nop
push
dec
pop
scas
mul
jg
or
jle
in
ret
inc
aas
and
ret
xor
ja
cmp
fld
xchg
xor
int
pop
popf
cli
popf
jbe
inc
ins
sbb
(bad)
dec
sbb
cdq
movs
push
sahf
push
or
push
dec
gs
outs
mul
std
call
daa
or
ss
jmp
(bad)
pop
imul
adc
xor
out
jne
(bad)
test
(bad)
pop
pop
loop
mov
lds
and
mov
mov
das
pop
cmp
not
mov
mov
push
xchg
jp
pop
jle
add
xchg
sbb
imul
push
xchg
add
adc
stc
adc
jbe
(bad)
repz
dec
mov
dec
sbb
int
xchg
add
jno
xor
cwde
pop
outs
dec
inc
xchg
leave
fs
or
adc
(bad)
cli
jl
add
js
pop
cmp
outs
les
inc
cmp
and
cs
lods
dec
mov
fcmovne
xchg
xor
mov
xchg
rcl
sbb
pop
mov
mov
or
mov
cmp
mov
rcr
bound
and
arpl
xchg
pushf
sbb
sti
and
xor
jp
repz
out
jno
sbb
mov
adc
movs
fcom
scas
inc
and
or
xchg
jae
adc
jmp
xor
and
fisttp
jae
mov
cmps
push
mov
in
loope
add
xchg
mov
scas
push
in
xor
fdivr
push
mov
push
cmp
or
dec
test
and
jns
repz
test
(bad)
mov
mov
retf
ret
aam
call
push
cld
stc
sub
dec
enter
scas
cdq
dec
cmps
sbb
sbb
mov
mov
inc
cs
sub
test
jno
sub
add
clc
xor
ret
iret
adc
(bad)
cmp
ja
rol
je
cmp
add
dec
fwait
add
ja
in
outs
add
ret
jg
shr
ffreep
(bad)
(bad)
xchg
push
push
jno
lods
inc
inc
add
push
iret
adc
mov
and
xor
(bad)
fs
test
push
mov
xor
adc
add
jmp
xlat
jnp
test
mov
int3
push
hlt
cmc
and
in
push
das
(bad)
pop
std
(bad)
(bad)
and
add
imul
(bad)
and
inc
mov
nop
and
xchg
bound
movs
jg
repnz
imul
retf
out
call
xor
js
fadd
xchg
xchg
xchg
dec
aas
ret
pop
lods
(bad)
mov
dec
pop
jge
arpl
mov
daa
add
shr
out
and
xchg
scas
push
mov
call
inc
movs
aam
enter
push
sub
icebp
inc
ret
fimul
rcr
fbstp
jmp
cmp
pop
mov
ffree
mov
xchg
aad
add
movs
mov
cmp
xor
xor
dec
cmps
mov
mov
loopne
or
aaa
xchg
mov
iret
mov
sbb
xchg
in
pop
fisubr
or
jmp
mov
int
or
mov
retf
dec
and
mov
mov
mov
in
test
sbb
sbb
ins
js
or
sbb
fs
nop
xor
das
stos
aaa
adc
int3
fisub
call
jge
jg
fdivp
sbb
inc
mov
mov
mov
jl
xor
out
mov
adc
push
clc
pop
pop
bound
cmovne
sti
pop
cmp
mov
imul
mov
in
inc
xchg
lods
add
jmp
je
inc
aad
nop
fucom
outs
push
cmp
test
rcr
and
and
repz
out
daa
scas
sbb
fistp
scas
je
pop
push
jno
cmp
lock
into
pop
out
in
pushf
inc
pop
cmp
(bad)
add
pop
ja
fidivr
add
mov
mov
fmul
data16
(bad)
fldenv
enter
fwait
mov
rcr
push
sub
pop
repz
cmp
jmp
lock
pop
inc
addr16
outs
jecxz
scas
mov
int3
fst
pop
xchg
sub
je
fnsave
ror
scas
mov
std
push
jmp
jg
mov
fdivr
test
leave
mov
(bad)
pop
inc
mov
ficom
or
mov
push
jp
js
adc
rcr
leave
in
adc
and
fwait
inc
fdivr
jl
push
mov
mov
push
jo
ins
sbb
adc
popa
xchg
das
inc
frstor
jg
pop
fisttp
mov
jne
push
fild
fwait
mov
sbb
imul
jge
push
xor
or
xchg
ds
xchg
dec
inc
shl
test
jge
psadbw
cmp
cmc
or
xor
outs
jne
shl
xchg
sbb
xchg
or
loope
daa
test
pusha
call
sub
push
sbb
or
les
mov
adc
icebp
iret
dec
(bad)
mov
mov
jno
(bad)
jne
push
mov
cmp
inc
pop
push
mov
add
and
mov
gs
push
imul
mov
inc
fwait
mov
movs
ss
mov
sub
ret
xchg
sti
dec
out
aam
fld
and
xchg
stos
and
or
mov
sbb
das
sub
xchg
ss
loopne
jno
pop
sub
sti
adc
ret
sbb
jmp
pop
test
inc
in
sbb
cmp
mov
add
cmp
aas
or
dec
pop
test
xlat
sub
lods
in
popa
cs
mov
ret
ins
cld
xor
ret
leave
sbb
gs
rcl
add
lahf
or
pop
dec
rol
retf
xor
lea
dec
adc
add
xchg
jmp
in
xrelease
dec
in
retf
fmul
fldenv
test
sbb
jns
addr16
fldcw
adc
sub
jecxz
loop
(bad)
clc
or
inc
pop
lods
leave
and
pop
mov
jmp
mov
mov
xchg
ss
ds
jecxz
push
xor
sbb
fwait
mov
cmp
in
jmp
iret
inc
or
mov
and
sub
out
jg
repnz
(bad)
push
mov
or
(bad)
xor
sahf
jle
retf
popa
pusha
inc
test
fadd
shr
dec
ror
div
stos
aam
shl
and
sub
pop
xor
das
clc
sub
xor
and
and
mov
sti
aaa
adc
cdq
(bad)
fsubrp
cmp
mov
add
sti
cmps
(bad)
mov
pop
mov
in
dec
or
push
fdiv
jmp
xchg
inc
sub
inc
jae
and
mov
in
mov
repz
cwde
dec
imul
inc
jmp
sub
ja
call
sahf
outs
test
test
sbb
fnstsw
daa
iret
test
jne
mov
test
aam
sbb
jns
fs
pop
mov
xchg
add
sbb
xchg
outs
sub
xchg
xchg
shr
gs
adc
cli
push
mov
mov
fcom
pop
in
retf
xchg
in
sbb
or
sub
sub
lahf
push
(bad)
popa
movs
rcl
sbb
mov
lahf
inc
mov
sub
push
retf
add
into
jmp
mov
mov
sub
es
pop
repz
xor
data16
mov
hlt
iret
mov
push
nop
into
mov
popf
push
adc
nop
adc
imul
mov
mov
mov
mov
in
(bad)
int
dec
mov
mov
xchg
test
ds
adc
dec
xor
pop
adc
rcr
lds
mov
cld
xchg
xchg
add
or
push
and
and
jmp
stos
stos
mov
fmul
cmp
dec
mov
adc
cmp
in
aaa
pushf
repnz
mov
aaa
and
icebp
ret
cs
aam
or
mov
inc
or
push
cld
add
or
rcl
aam
lahf
mov
in
fwait
jl
pop
xchg
cmp
leave
aaa
cmp
(bad)
mov
mov
lods
out
mov
dec
shr
dec
cli
es
fwait
dec
fcomp
xchg
jbe
pop
rol
bound
iret
and
inc
outs
mov
xor
sub
std
bndstx
ins
fs
test
pop
mov
push
push
fwait
stc
iret
mov
adc
or
rcr
dec
aas
push
push
paddw
sub
outs
cmc
cmp
ret
sbb
(bad)
ds
mov
mov
cld
mov
mov
mov
adc
lock
sub
jmp
idiv
jle
and
pop
sete
ror
pop
scas
stos
adc
cmp
cmps
cmp
dec
push
pop
scas
aas
mov
cmps
retf
mov
ins
ret
cdq
sahf
push
add
mov
add
dec
jae
jl
test
ret
fidiv
mov
pop
inc
and
mov
iret
adc
jge
adc
cmp
pop
int
shl
add
and
ret
pop
cwde
enter
mov
mov
in
or
mov
stc
xchg
pop
xchg
mov
xchg
pop
fst
dec
gs
push
sub
es
in
dec
cmp
fcmovnb
adc
pop
test
xchg
xor
mov
fneni(8087
pushf
rcr
fisttp
(bad)
shl
or
mov
lahf
out
fldl2t
js
mov
and
mov
repz
jmp
or
jae
pop
lods
retf
inc
mov
dec
pop
ja
loope
push
outs
cmovbe
scas
clc
in
xchg
shl
mov
les
call
imul
mov
cmps
sub
xchg
pop
pop
xchg
test
jnp
xchg
int
repz
xor
das
fisttp
pop
jae
push
stos
push
adc
sub
int3
std
test
push
mov
nop
out
sub
or
add
xchg
ja
and
mov
(bad)
jge
cmps
loop
pushf
xor
lods
inc
and
popf
push
xor
pop
push
push
mov
cmc
aas
dec
les
(bad)
xchg
jb
popf
ds
jo
mov
push
in
loopne
idiv
xchg
rcr
pop
jp
push
aaa
mov
mov
movs
outs
gs
lea
push
pushf
stos
lds
add
sbb
xlat
mov
pop
jecxz
xlat
inc
pop
dec
cmp
dec
mov
ds
xor
enter
pop
cdq
pop
fs
add
or
pop
adc
add
popa
test
cmp
test
leave
pop
jmp
bound
popa
sahf
(bad)
retf
mov
int3
jo
jge
gs
pop
js
add
mov
ins
(bad)
stos
ds
mov
push
mov
int
repz
add
(bad)
data16
ret
mov
push
add
shl
popf
sbb
call
je
jg
jp
inc
ins
mov
jnp
in
and
jbe
add
pop
jns
(bad)
dec
sbb
loope
inc
nop
sub
mov
jecxz
jl
mov
add
das
add
mov
xor
imul
out
pop
outs
lods
cmp
test
xor
call
lods
clc
push
mov
cld
inc
lods
xor
test
pop
jge
sbb
adc
inc
mov
push
or
mov
leave
mov
sar
jmp
pop
add
ror
into
adc
lods
fs
fbld
js
in
or
push
int3
sbb
hlt
cli
icebp
cld
(bad)
jge
mov
push
xchg
add
mov
ret
jmp
mov
movs
stos
sahf
and
shr
ror
ds
push
mov
adc
pop
pop
mov
pop
push
lods
mov
int
mov
std
jmp
nop
or
xor
push
(bad)
shl
pusha
es
xchg
shl
sub
mov
div
sbb
mov
mov
out
(bad)
mov
xor
(bad)
in
test
mov
lods
sub
(bad)
fimul
std
or
cmp
pop
push
sbb
int3
xor
and
sub
jae
xor
ret
movs
arpl
push
mov
outs
fidiv
repz
jns
push
or
daa
ins
push
cmp
or
cmp
sbb
test
jo
and
pop
sahf
in
mov
mov
jbe
fisttp
daa
cmp
imul
call
les
add
and
jns
cli
cmp
mov
outs
test
jecxz
dec
out
(bad)
(bad)
pushf
push
or
repnz
retf
or
dec
out
mov
sbb
push
inc
and
aad
movs
mov
div
sti
aas
fsub
pop
mov
jbe
cmp
inc
mov
test
inc
hlt
cwde
sbb
scas
lods
clc
jmp
push
lahf
out
cmp
mov
ret
out
fimul
dec
int
mov
test
daa
pop
and
ds
call
lahf
adc
or
aas
hlt
les
cmps
fcmovbe
jl
cld
stos
icebp
cmp
adc
mov
cmp
sbb
dec
(bad)
dec
push
dec
dec
call
mov
sbb
mov
xor
xor
aas
pop
and
inc
loope
hlt
mov
mov
daa
iret
adc
ins
inc
cld
retf
jno
cmc
pop
mov
sub
imul
xchg
cld
push
jnp
add
imul
or
and
inc
fdiv
jl
inc
xchg
daa
jae
cmps
sub
jb
retf
(bad)
outs
movd
mov
add
in
sti
aas
jg
or
(bad)
loope
int
jae
stos
aas
into
mov
and
pop
cs
xchg
outs
fcom
lods
fcomp
jmp
dec
adc
dec
addr16
cmp
jmp
leave
(bad)
inc
iret
mov
das
cmp
popa
movs
xchg
into
imul
jle
dec
pop
pushf
test
repnz
jo
ja
btc
xchg
shl
sub
add
lahf
sub
inc
pushf
test
sti
add
loop
btr
pushf
jns
out
cmp
retf
in
daa
xchg
out
dec
xor
jae
ror
add
inc
fdivr
jp
icebp
lock
xchg
cmp
cmp
pop
mov
jne
loopne
cmp
addr16
imul
jg
and
mov
mov
add
in
jo
inc
sub
or
cmp
mov
dec
pop
xchg
cli
call
mov
or
sub
push
mov
dec
scas
int
push
or
xchg
leave
xchg
jbe
(bad)
or
adc
mov
push
mov
sbb
in
lods
sbb
pop
das
inc
(bad)
and
ror
(bad)
pop
pusha
dec
sti
(bad)
push
xchg
(bad)
retf
or
mov
fstp
pop
xchg
push
cld
mov
out
pop
xchg
loopne
in
lods
(bad)
cmp
and
sub
sti
mov
enter
mov
inc
jle
xor
daa
dec
mov
xchg
mov
cmp
hlt
xchg
cmp
cmc
mov
sbb
pushf
cmp
jecxz
adc
aam
inc
jnp
mov
stos
std
mov
or
es
ret
cmp
and
cmp
rcl
fild
mov
xor
out
popa
jne
cmp
xor
inc
mov
jbe
leave
aaa
loop
aas
mov
or
in
sub
add
or
inc
and
xchg
ror
sbb
fidivr
xor
dec
dec
pop
mov
lods
adc
xchg
xor
sbb
aad
ret
aad
ja
pop
or
mov
add
jnp
enter
adc
add
sub
ror
pop
ins
fimul
add
pop
stos
les
cmp
cwde
movs
push
mov
jge
rcr
push
gs
std
cdq
adc
jno
pop
mov
xor
pop
movs
scas
into
repnz
test
sub
je
jo
lock
cmp
pop
addr16
adc
jno
int
jb
test
xchg
in
nop
enter
(bad)
shr
xchg
pop
lock
adc
arpl
adc
shr
and
sub
push
das
enter
jmp
mov
or
(bad)
push
bound
dec
adc
int3
fidivr
push
arpl
test
pop
xor
cmps
ds
lock
lods
dec
pop
movs
jecxz
popf
mov
lods
dec
xchg
push
cmp
data16
sti
add
popa
sbb
sbb
sub
jmp
xchg
int3
inc
movs
fmulp
ins
pusha
nop
js
mov
pop
and
sti
push
jno
lds
(bad)
sub
cli
cmp
sbb
ss
out
js
mov
xor
fisubr
lods
in
ret
pop
xchg
int
xchg
fnstsw
mov
mov
fsubrp
push
nop
cmps
out
mov
or
jo
sub
pop
ins
sti
sbb
push
into
mov
out
out
aad
sub
xchg
cld
jecxz
dec
test
aas
adc
xor
dec
pop
push
es
mov
bnd
sub
cld
and
imul
pop
in
test
xor
int3
sub
xor
adc
loope
dec
push
adc
xchg
mov
mov
sub
mov
cmps
xor
inc
test
repnz
cmp
push
aaa
adc
lahf
test
cmps
(bad)
sbb
mov
push
add
retf
or
mov
jno
arpl
enter
or
jle
fucom
xchg
jbe
and
movs
mov
ret
cmp
je
ficom
out
push
dec
addr16
xchg
cmps
adc
std
dec
out
cmp
jns
cdq
(bad)
dec
xchg
sub
pop
mov
pop
xor
call
xchg
xchg
cld
inc
push
jp
ja
(bad)
ins
sahf
sub
adc
scas
test
call
(bad)
call
jmp
popf
pop
call
jle
(bad)
fiadd
outs
popa
popa
lock
(bad)
mov
jecxz
mov
repz
jo
sbb
and
std
xor
xchg
xchg
dec
xchg
sbb
jns
dec
and
fistp
push
add
data16
mov
shl
pop
add
bound
push
sti
mov
inc
inc
xor
aam
inc
cmp
fiadd
(bad)
mov
or
xchg
call
or
sbb
clc
js
das
add
sbb
stc
mov
js
mov
mov
arpl
push
psubq
fistp
sbb
jle
jecxz
jae
mov
pop
dec
inc
jb
dec
ss
mov
cli
hlt
jno
mov
push
and
in
(bad)
int
cld
int
pop
fstp
or
dec
xlat
push
data16
sub
nop
pop
ja
fwait
push
mov
mov
xchg
xlat
xchg
mov
(bad)
int
adc
fstp
jno
test
sbb
ffreep
lods
sar
mov
xchg
mov
mov
jns
stc
cmp
inc
jg
adc
mov
ret
rol
xlat
in
mov
in
enter
pusha
cdq
mov
jle
add
stc
inc
(bad)
mov
(bad)
(bad)
neg
cmps
loopne
bound
dec
mov
jbe
rol
add
dec
imul
sbb
jecxz
out
mov
cmp
pop
rcl
call
outs
fsub
rcl
jl
lods
fcmovb
adc
data16
sbb
cmp
jns
out
test
retf
in
ja
mov
sbb
ffree
and
(bad)
test
popf
loope
out
loope
jmp
sbb
fs
adc
call
inc
mov
retf
(bad)
in
fisub
jl
call
jno
ret
dec
out
push
ja
mov
ins
int3
std
data16
jne
cwde
fucomp
fadd
test
call
mov
dec
dec
test
sbb
ins
test
arpl
pop
test
sti
pusha
sub
pop
push
retf
jmp
shr
retf
popf
xlat
and
jae
rol
jmp
mov
movs
xchg
hlt
(bad)
hlt
sbb
cmps
ffree
iret
jl
out
pop
xchg
inc
xchg
xor
push
js
out
cmp
sbb
dec
cmp
cs
dec
mov
push
ficomp
or
retf
dec
sbb
cwde
lods
cmp
imul
rol
push
cmp
pop
movs
xchg
add
iret
pop
outs
xor
adc
shr
sub
xor
aam
xor
lds
(bad)
or
test
popf
fsub
xchg
mov
sub
push
cmp
jp
mov
xor
pop
jg
jo
mov
cmp
mov
dec
jg
rcr
adc
pushf
fwait
sti
stos
or
or
aam
scas
retf
(bad)
fistp
shl
and
xchg
mov
sub
cwde
push
dec
dec
adc
out
lds
into
cmp
and
js
sbb
sub
xchg
aam
push
fild
sbb
pop
not
or
sub
ja
dec
xlat
in
into
ins
inc
push
movs
das
imul
jmp
or
ret
test
pop
cmc
jp
xchg
mov
movs
mov
cmps
push
xlat
or
ret
inc
push
adc
bound
stc
outs
in
dec
jbe
xchg
js
xchg
fdivr
daa
les
jae
and
sbb
jge
jns
nop
cld
outs
adc
icebp
sar
cmp
cmp
outs
in
les
mov
push
xchg
(bad)
mov
je
push
std
mov
adc
fcomp
ss
cmc
ins
int
sbb
movs
jae
jmp
mov
inc
bound
neg
test
hlt
gs
retf
ss
shl
add
adc
inc
movs
test
jo
fld
lods
neg
jle
xchg
mov
mov
aas
push
ds
jnp
push
cmps
addr16
icebp
mov
push
in
sbb
xor
call
lahf
bound
push
(bad)
(bad)
mov
inc
add
ins
push
js
jb
mov
repz
je
cmp
or
rcl
cdq
sahf
jnp
jmp
scas
js
ret
lods
xor
xor
cld
mul
or
add
jge
retf
sbb
movs
ret
scas
or
xchg
push
dec
dec
popa
ds
lahf
add
cmp
outs
cmp
jae
test
pop
aas
dec
push
jl
cmp
shr
out
and
and
dec
addr16
enter
mov
mov
mov
scas
sub
cdq
lahf
dec
mov
sub
and
jnp
and
jp
(bad)
jge
test
cwde
inc
sbb
xor
inc
jbe
leave
sbb
ins
jb
xchg
adc
xchg
jge
fild
cs
inc
fnstenv
fsubrp
data16
cmp
add
mov
je
push
stc
cmps
adc
shl
popa
mov
xchg
jp
and
shl
jle
retf
xchg
sub
mov
jno
rcr
imul
inc
imul
sub
retf
push
outs
sti
or
std
je
cdq
mov
mov
(bad)
fldcw
mov
call
cld
push
mov
clc
(bad)
shr
leave
sub
add
out
mov
jns
mov
xlat
imul
adc
pop
jno
mov
cmps
cmps
xlat
daa
jbe
mov
rcr
pop
mov
shl
test
sti
lods
(bad)
or
lock
mov
leave
sub
sbb
xor
in
out
sub
jg
inc
add
ret
sti
and
xlat
mov
mov
out
adc
xchg
das
rol
nop
push
cmps
and
add
mov
cmp
nop
jnp
add
mov
lahf
pop
mov
iret
jns
(bad)
push
mov
add
(bad)
sbb
fsubr
loop
sub
sub
pusha
cdq
mov
mov
mov
je
outs
retf
repz
ret
dec
retf
ins
aaa
add
cli
jecxz
and
xchg
xchg
lods
cmp
fs
clc
mov
pop
cmps
movs
aas
mov
test
repz
xchg
repz
cli
jl
jl
adc
lods
sar
cld
mov
mov
nop
ds
(bad)
sub
shl
call
icebp
psrad
sbb
push
dec
xor
les
out
pop
inc
movs
mov
cmp
dec
cmp
inc
sub
mov
push
xlat
retf
mov
aam
cmp
mov
or
dec
add
scas
xor
lock
pop
cmps
mov
add
outs
sahf
outs
and
neg
xchg
ret
push
jl
mov
data16
mov
or
pop
icebp
xlat
and
add
jmp
js
sbb
xor
jo
cmp
xchg
retf
push
jmp
call
jo
mov
cmp
fidiv
adc
sbb
sub
cmp
dec
push
push
ds
aaa
pop
in
or
mov
test
cmp
sti
or
stos
adc
mov
mov
sub
push
push
shl
fdivr
jp
jbe
pop
ret
inc
out
je
jle
fldcw
addr16
mov
imul
pop
adc
and
and
(bad)
outs
aam
repz
and
sub
cwde
xor
(bad)
push
mov
test
out
sub
lahf
mov
push
or
jnp
sar
adc
cmp
(bad)
ds
xor
xor
pop
mov
pop
fist
shl
jnp
arpl
iret
and
movs
push
arpl
(bad)
call
(bad)
sub
imul
push
dec
mov
ja
xchg
imul
push
push
mov
jne
lods
rcr
es
dec
nop
pop
aas
test
fcom
add
(bad)
dec
fwait
adc
pop
out
fldenv
inc
(bad)
cmp
xchg
fxch
fistp
pop
dec
xor
mul
or
push
out
sub
push
in
pop
mov
push
and
mov
push
cmp
ja
sbb
jns
jecxz
jne
mov
sub
test
sub
add
jl
and
std
mov
idiv
dec
lds
xor
dec
ja
mov
into
fdivr
sti
ins
daa
iret
loopne
rcr
mov
(bad)
dec
cmp
xchg
push
mov
stc
(bad)
popf
pop
add
rol
sar
pop
xor
jae
stos
stos
inc
jmp
fcmovnb
add
push
jg
std
jmp
adc
test
sbb
(bad)
and
dec
cwde
mov
ins
mov
dec
ins
sbb
sub
jl
xor
push
call
in
inc
pop
test
cmp
jmp
jnp
and
in
jnp
xchg
and
pop
mov
stc
pop
push
imul
addr16
cmp
rol
push
sub
adc
or
xlat
push
fcom
xchg
(bad)
fstp
push
push
(bad)
jb
aam
imul
in
sar
cwde
mov
sub
push
mov
inc
(bad)
jmp
adc
ins
mov
(bad)
sbb
add
fnstenv
jg
fld
lock
inc
mov
pop
rcr
addr16
in
adc
lods
pop
mov
add
aad
fwait
adc
loop
xchg
mov
and
xlat
add
push
xchg
lods
jno
and
and
sub
jbe
out
dec
ret
push
xchg
pop
mov
push
mov
dec
ss
or
mov
push
pop
inc
adc
rcr
ja
or
push
imul
cmp
in
cmp
jecxz
push
jge
rcl
mov
jns
pop
dec
sti
add
mov
shl
mov
xor
xchg
out
dec
jno
shl
jp
xor
cmps
add
pusha
inc
inc
(bad)
(bad)
or
pop
cs
inc
pop
mov
and
mov
sbb
mov
cmps
or
retf
ds
dec
mov
aaa
sub
outs
out
xor
dec
sbb
(bad)
aas
js
mov
loopne
fs
dec
sub
sbb
call
push
push
pop
scas
cmp
xchg
sub
jmp
arpl
add
adc
ins
mov
pop
js
fldenv
sub
cs
and
out
xchg
ret
mov
pushf
out
pand
jmp
xlat
dec
movs
mov
dec
sbb
pop
dec
and
mov
shl
fbstp
push
dec
inc
and
push
mov
or
outs
js
in
jmp
and
mov
repz
repnz
jno
ja
push
jnp
(bad)
imul
out
int
mov
inc
sti
xor
mov
ret
xlat
(bad)
mov
cdq
mov
cmp
adc
inc
stos
retf
fdiv
test
and
jge
nop
add
adc
push
add
aam
jae
popa
add
retf
mov
add
inc
out
mov
popf
xchg
push
mov
push
inc
js
pop
movs
js
data16
pop
movs
pop
scas
les
std
or
xor
pop
or
pop
nop
xchg
cwde
cmp
push
cmp
mov
out
jle
neg
xchg
mov
mov
sub
or
xlat
rcr
inc
iret
fs
frndint
mov
arpl
in
jmp
push
ret
jb
dec
sar
imul
dec
call
pop
sub
or
mov
push
add
pop
stos
imul
mov
and
test
add
jbe
jne
pop
nop
mov
add
cmp
lds
js
adc
in
cwde
sub
stos
aas
outs
mov
in
xor
fcom
aad
rcl
xchg
in
aas
pop
lods
daa
lea
les
call
vandps
les
xchg
mov
sbb
arpl
aas
adc
sub
ja
stos
cmps
scas
jge
std
xor
mov
sbb
push
xor
xor
xor
mov
popf
mov
int3
xor
inc
out
push
mov
(bad)
pop
fs
cld
ret
add
push
push
and
cmp
pop
pop
inc
call
jo
cmp
xor
xlat
mov
and
sub
stos
sub
and
add
(bad)
scas
fwait
push
inc
dec
ja
pop
pushf
in
loope
mov
stc
(bad)
repz
test
int
and
mov
cwde
dec
inc
(bad)
and
outs
lahf
outs
mov
ret
nop
sbb
xchg
int3
setge
jmp
mov
xor
or
add
sbb
dec
shl
rcl
xor
dec
cmps
pop
mov
mov
add
arpl
mov
pop
xlat
les
jmp
mov
aam
xor
or
push
xchg
xchg
or
xchg
jecxz
sbb
push
loop
dec
data16
dec
dec
into
push
into
(bad)
pop
cmp
pop
imul
jo
sub
push
cmp
inc
mov
into
cld
das
pop
cmp
xor
xor
xchg
jb
pop
push
push
xor
inc
shr
mov
mov
push
cli
xchg
cmp
add
out
add
outs
push
out
sbb
and
sub
out
(bad)
xchg
loope
sub
jnp
js
mov
and
scas
daa
jp
push
fwait
das
add
lods
jge
repnz
scas
xor
pop
pop
jb
xor
outs
movs
sub
xor
mov
or
out
stos
mov
xchg
imul
and
xchg
inc
clc
shr
mov
das
push
and
mov
sub
cmp
mov
or
jbe
popa
pushf
jmp
cmp
or
adc
and
mov
xchg
pusha
stos
sub
dec
mov
xor
push
pop
jp
mov
sub
sub
stos
and
movs
mov
aad
cmp
jp
cmc
add
leave
cmp
xchg
xor
mov
mov
(bad)
aad
mov
ja
cmps
pop
push
icebp
out
aas
sahf
adc
cwde
cdq
fsubr
mov
sbb
enter
(bad)
lock
in
jge
test
mov
fcomp
inc
in
xor
sahf
xor
mov
in
mov
inc
retf
pop
mov
xor
xor
loope
out
pop
nop
pushf
retf
sbb
pop
dec
push
adc
cmp
jno
es
or
dec
inc
leave
fisub
inc
cdq
push
add
xchg
ds
ret
test
nop
jecxz
cwde
fcom
(bad)
jmp
xchg
xor
xor
or
cmp
lock
push
ficomp
mov
or
fwait
pop
icebp
pop
gs
call
fsubr
jmp
xchg
stc
ja
mov
pop
adc
enter
mov
popf
or
push
retf
scas
jg
pop
stos
push
adc
cld
ret
mov
mov
es
sbb
jecxz
or
mov
bound
sbb
pusha
popa
push
iret
int
pop
cli
inc
lock
inc
jb
imul
xchg
add
lea
mov
jecxz
aam
fwait
or
aam
push
cld
and
arpl
pop
mov
test
cs
retf
push
jo
jbe
inc
jl
inc
push
push
dec
pop
dec
rcr
pop
mul
aas
jbe
sbb
push
cmp
mov
sub
fcmovnb
stos
test
shl
jmp
retf
pop
mov
mov
pop
and
or
add
mov
jmp
loope
js
push
jae
arpl
in
adc
fisubr
pop
xor
retf
cmp
pop
aam
jb
arpl
aad
cs
pop
sti
adc
movs
jnp
xchg
fbstp
pop
add
fwait
aas
outs
aad
mov
leave
iret
inc
sbb
retf
adc
jmp
imul
jl
xchg
fs
pop
xchg
addr16
into
je
sub
jmp
sub
mov
xchg
out
push
mov
inc
xchg
js
icebp
xchg
cs
les
pop
(bad)
add
dec
cld
cmp
aam
data16
xchg
cmp
int
sbb
pop
fs
adc
lods
clc
mov
mov
adc
pusha
pop
cli
(bad)
cmp
(bad)
loop
push
call
clc
jns
out
in
inc
mov
xor
aas
out
cmc
xchg
sbb
fcom
jns
sbb
xchg
outs
test
pop
sub
mov
stos
lea
les
mov
bound
cbw
adc
cmp
out
mov
pop
adc
aaa
cdq
and
jne
inc
pop
push
fisttp
cmp
cmp
jns
xlat
adc
fst
mov
out
ret
fmul
in
inc
xor
push
push
xchg
cmps
jmp
or
out
ror
popf
sahf
fisttp
cmp
pusha
dec
lock
rcl
cs
in
bound
scas
out
cs
out
cld
das
loop
clc
add
movs
adc
retf
dec
sub
nop
daa
test
mov
dec
pushf
sub
ins
adc
jecxz
cmp
ret
popa
mov
dec
or
das
cmp
aaa
pop
stos
popf
pop
jne
call
(bad)
arpl
pop
nop
test
lods
push
loop
aam
cmp
push
mov
imul
in
pusha
jmp
pop
jge
stc
std
push
pusha
push
icebp
std
ss
mov
xchg
push
add
mov
or
aaa
idiv
mov
xchg
es
jbe
les
loop
or
xor
or
jg
int3
jo
xor
push
(bad)
inc
xor
cmp
test
xchg
fs
das
dec
cmps
gs
mov
inc
inc
int3
arpl
fmulp
dec
bound
aaa
pop
pop
pop
sti
(bad)
ror
mov
call
lock
lock
mov
sbb
test
or
dec
enter
repnz
pop
(bad)
pop
arpl
dec
pop
test
jmp
stos
mov
aaa
and
push
dec
xchg
jnp
xchg
loopne
(bad)
rep
jnp
(bad)
mov
ret
jmp
push
fs
pop
inc
pop
lock
mov
movs
mov
adc
mov
pop
ds
sbb
adc
call
inc
xor
repnz
inc
jle
out
adc
sbb
sub
xchg
push
and
aas
pop
int3
push
jge
add
mov
mov
es
jnp
clc
inc
sub
lahf
push
add
adc
xchg
mov
adc
(bad)
mov
mov
jge
jmp
sbb
or
inc
js
cwde
add
enter
pop
(bad)
pop
(bad)
mov
sbb
scas
add
add
push
ds
loope
sar
push
std
test
popa
test
je
cdq
es
scas
or
bound
test
add
jge
test
lock
out
(bad)
out
xor
and
scas
enter
cwde
and
cwde
out
cwde
in
fwait
retf
add
mov
out
cmp
outs
fwait
loope
test
jo
pop
mov
or
and
push
mov
and
scas
pushf
shl
mov
dec
test
das
(bad)
std
pop
sub
movs
test
icebp
mov
pop
retf
add
mov
out
cwde
sbb
xchg
adc
rdpmc
mov
or
lahf
in
dec
adc
outs
(bad)
stc
mov
lods
adc
das
aaa
sti
idiv
pop
add
sbb
cmps
(bad)
pop
in
mov
pop
stc
jmp
bound
scas
or
push
cmp
js
fisttp
jge
push
sbb
push
or
push
cmps
push
(bad)
shl
sub
pusha
pop
push
add
aam
aas
mov
jo
shr
std
addr16
mov
out
repz
pop
sub
jmp
dec
xchg
jmp
imul
mov
mov
mov
sar
inc
js
pop
xchg
mov
sahf
out
stos
popf
test
xchg
gs
adc
dec
xchg
les
cmp
sub
std
pop
enter
mov
mov
inc
lock
or
pop
and
sub
addr16
cwde
inc
fstp
push
adc
xchg
nop
(bad)
jl
int3
xchg
push
mov
mov
adc
imul
add
pop
sub
call
imul
movs
mov
out
mov
push
movs
scas
shl
call
scas
sbb
lods
jmp
dec
nop
xchg
inc
add
sbb
inc
inc
push
imul
sbb
mov
cmp
test
cdq
push
xchg
rcl
popf
inc
(bad)
pop
jmp
adc
sbb
mov
cmc
fnstsw
xor
dec
push
cmp
stos
push
push
dec
sbb
jl
sar
aas
and
mov
push
into
(bad)
aad
sub
and
daa
idiv
outs
jae
and
xlat
jo
ja
mov
call
retf
aaa
mov
jp
or
xor
adc
test
rcl
arpl
push
sbb
xlat
test
test
outs
inc
stos
retf
dec
outs
cli
hlt
pop
aam
mov
xchg
adc
outs
cld
rcl
in
pusha
xchg
scas
adc
fstp
jle
cmc
pop
dec
imul
push
adc
mov
xor
sub
fs
mov
enter
pop
ror
jnp
mov
fistp
fsub
sub
vplzcntd
loop
xor
jge
stos
addr16
xchg
mov
bound
sub
mov
in
movs
xchg
push
(bad)
mov
gs
les
pushf
inc
jno
mov
xchg
and
jmp
test
jecxz
mov
fist
ins
enter
in
xchg
push
add
cs
inc
mov
div
adc
jl
mov
ins
ins
sub
loope
mov
xor
dec
fstp
cmp
mov
cs
sub
dec
jl
stos
ss
imul
mov
test
xor
mov
jg
lock
lods
push
fisttp
mul
retf
inc
fsubr
dec
icebp
out
ret
mov
pop
dec
sub
jno
mov
xor
push
pop
xchg
mov
mov
pop
jno
lock
or
clc
mov
repnz
ds
cdq
add
sbb
ins
scas
mov
scas
jle
cmp
mov
mov
outs
dec
cmp
mov
dec
xchg
lahf
pop
and
scas
pop
data16
test
inc
jnp
jl
dec
int
jle
outs
sbb
retf
mov
fwait
push
dec
pop
test
(bad)
loopne
in
inc
je
test
lods
jns
push
sbb
enter
sub
mov
mov
sbb
jbe
adc
ror
test
dec
sti
push
scas
adc
mov
or
adc
imul
aaa
mov
fimul
mov
mov
jmp
ja
jb
bound
(bad)
push
imul
dec
xchg
loop
movs
arpl
inc
push
(bad)
adc
sbb
adc
in
por
cld
xor
sub
ins
mov
jp
mov
hlt
lods
push
fcom
enter
fcomp
(bad)
mov
inc
push
pop
add
pop
sbb
push
pop
push
pop
or
clc
dec
rcr
loopne
sbb
in
call
lahf
es
inc
mov
das
dec
pop
pop
into
bound
xlat
ja
or
or
pop
mov
(bad)
into
push
dec
fild
shl
mov
add
and
mov
jl
inc
int3
mov
add
(bad)
mov
push
hlt
dec
icebp
mov
out
scas
(bad)
xchg
das
jle
outs
mov
pop
mov
xchg
sbb
fsub
fwait
and
push
dec
sub
aaa
cmp
aaa
dec
ror
clc
(bad)
ins
mov
loopne
shr
retf
jg
mov
jle
mov
aam
adc
in
outs
xor
int3
or
retf
fcom
retf
jo
adc
adc
sbb
mov
jg
dec
jno
xchg
inc
dec
push
push
dec
jge
pop
popw
out
js
inc
and
jb
cwde
cmp
push
dec
sbb
pop
and
out
adc
pop
cmp
pop
xchg
mov
push
fstp
mov
fsubr
push
ja
and
arpl
sub
jno
mov
mov
pop
mov
inc
mov
pusha
jmp
int3
enter
adc
test
and
dec
into
test
std
jl
push
jp
or
loope
sbb
jns
aam
mov
xor
ret
mov
iret
int
pop
push
cmp
xchg
jne
ret
mov
nop
xor
push
addr16
add
pushf
push
add
cwde
int
mov
ss
mov
int
lahf
xor
scas
mov
cli
and
cs
leave
mov
or
cmp
(bad)
dec
adc
pusha
add
retf
jnp
pop
pop
pop
or
addr16
push
or
jbe
push
and
adc
push
imul
fwait
cli
dec
sbb
lahf
in
loopne
jle
into
sub
hlt
pop
loope
addr16
adc
mov
iret
dec
cmp
arpl
mov
mov
add
push
fdivr
lds
call
call
aaa
add
or
sbb
(bad)
fiadd
aam
out
es
bound
or
xlat
adc
sar
or
and
or
fs
mov
test
mov
loop
out
(bad)
cmp
pushf
retf
ret
adc
jno
add
sbb
sub
push
cmp
test
pop
xchg
push
and
icebp
xor
sub
and
and
jnp
jno
adc
sbb
ins
pop
aad
and
push
pop
push
mov
pop
mov
aad
mov
std
test
dec
mov
push
and
loop
and
leave
cs
not
hlt
jp
sar
nop
cmp
mov
pop
scas
mov
dec
in
fdiv
outs
sub
and
cmp
bound
lahf
xlat
mov
xor
pop
(bad)
mov
cwde
push
xchg
xchg
test
adc
das
pushf
jae
pop
cdq
cmp
test
sbb
xchg
jmp
loope
cmc
in
mov
mov
push
fsub
xor
cmp
sub
(bad)
test
aam
enter
fistp
dec
js
inc
popf
push
xlat
and
or
ret
jne
mov
sbb
lea
add
add
mov
iret
shl
sbb
inc
(bad)
retf
inc
jb
stc
xor
fwait
push
sbb
ret
cmps
ins
pop
add
(bad)
iret
and
pusha
outs
xchg
push
inc
adc
xchg
or
xor
fs
push
push
mov
pop
or
into
fnstcw
movs
ret
fs
scas
cdq
cli
cmps
xor
in
sbb
cdq
jne
or
scas
je
jmp
movs
mov
cli
movs
jecxz
aam
outs
add
mov
adc
and
xchg
fs
xchg
out
inc
xor
adc
scas
xor
add
jg
push
lock
fidivr
inc
jl
aaa
mov
jo
push
pop
cmp
pop
cwde
into
and
dec
outs
and
mov
xchg
sub
mov
in
and
inc
test
mov
jmp
mov
inc
adc
xchg
cmc
ror
jp
jnp
out
bound
xchg
sar
ins
fs
ss
mov
xor
inc
cmp
pop
fwait
cld
icebp
std
push
xor
test
pop
(bad)
int3
popf
xor
add
std
adc
jl
dec
sbb
jbe
mov
arpl
call
xchg
add
popf
imul
in
sub
mov
out
cmps
xor
push
repnz
lods
xor
jnp
push
out
and
std
sti
ja
enter
xchg
push
sub
cld
popa
hlt
and
mov
dec
sub
xor
js
outs
(bad)
sti
shl
test
stc
cmps
je
es
jl
dec
sub
push
shl
push
jmp
pop
inc
gs
std
mov
rcr
jg
out
cmp
arpl
hlt
sbb
and
in
adc
int3
fidivr
movs
bound
movs
pop
cmp
or
imul
jmp
cmp
les
aaa
xchg
add
stos
lods
out
mov
or
dec
cwde
cmp
popa
pusha
imul
xchg
imul
jl
cmc
loop
inc
sbb
ss
cs
inc
mov
ja
jnp
scas
fimul
fwait
mov
shl
cmp
add
stos
mov
dec
popf
add
imul
dec
pop
stc
bound
int
xchg
adc
mov
and
mov
and
psadbw
hlt
add
push
scas
pop
sbb
jo
pop
sub
mov
bound
cmp
adc
add
aaa
xchg
push
int3
pop
pusha
push
xor
jns
int
fnstcw
(bad)
mov
packsswb
jp
jg
sub
add
xor
jns
pop
push
pop
adc
and
lods
std
inc
into
pop
pop
je
or
test
in
test
jae
ja
jb
mov
fisubr
and
adc
push
jl
sub
jle
pop
iret
pop
enter
daa
imul
test
les
imul
pop
mov
push
test
sbb
mov
mov
mov
(bad)
push
fadd
je
addr16
daa
mov
iret
fistp
pop
lock
and
in
add
sbb
xor
inc
arpl
dec
dec
mov
cwde
dec
push
int
inc
sub
addr16
cmp
xlat
push
ret
bound
cld
fcmovne
stos
popa
or
mov
arpl
pop
imul
int3
iret
test
push
jg
add
mov
cmc
and
xchg
add
out
leave
popa
sub
adc
mov
pop
mov
call
(bad)
call
push
test
fwait
xchg
xchg
add
cld
push
movs
mov
ins
es
xchg
jo
sbb
push
iret
sub
sbb
loop
push
push
dec
ret
je
pop
fnsave
pop
mov
mov
mov
push
cmp
leave
test
fimul
cmp
or
outs
mov
fdivrp
mov
ins
push
lods
mov
dec
test
jo
test
rcl
jmp
dec
mov
enter
(bad)
addr16
retf
mov
sub
leave
icebp
cmp
mov
mov
loop
fldcw
xchg
(bad)
retf
dec
in
sbb
mov
clc
mov
sbb
pusha
inc
lahf
lahf
jle
mov
and
pop
jge
jl
dec
(bad)
stos
sub
pop
inc
sub
and
mov
cmp
mov
pop
xchg
mov
shl
into
cmp
jmp
xchg
dec
push
ins
cmp
pop
pop
popf
fisttp
cli
(bad)
mov
fnstsw
adc
mov
sbb
or
inc
imul
push
inc
push
aam
push
nop
scas
pop
test
pop
cmp
and
(bad)
cmps
arpl
dec
jnp
loope
loopne
mov
int
in
xor
or
pop
enter
mov
push
ds
ins
in
repnz
mov
jae
repz
xchg
(bad)
(bad)
dec
fiadd
cmp
mov
push
clc
dec
daa
mov
pop
add
or
jmp
mov
mov
dec
or
into
cmp
add
jbe
imul
add
mov
sar
aam
inc
mov
rcl
aam
add
fild
mov
sbb
mov
test
push
leave
cmp
out
stc
mov
fwait
cmp
push
scas
test
inc
cwde
aas
jmp
jmp
cli
lods
push
dec
loopne
imul
add
adc
inc
jne
xor
shr
les
sar
outs
ret
mov
repnz
xor
std
aaa
call
out
mov
mov
pop
in
adc
xchg
inc
aaa
or
and
mov
test
jmp
test
cmp
js
and
inc
inc
(bad)
pop
ficomp
retf
fcom
in
add
(bad)
xor
add
popa
(bad)
repz
loop
data16
clc
sti
push
into
lahf
scas
xor
test
mov
dec
adc
test
or
addr16
adc
add
mov
adc
mov
aad
xor
addr16
push
xor
adc
(bad)
into
fs
mov
mov
pop
aad
inc
fldcw
mov
mov
out
add
mov
mov
cwde
push
lahf
leave
add
pop
pop
stc
repnz
fidiv
adc
rcl
imul
pop
(bad)
dec
push
je
mov
pop
and
retf
push
pop
push
in
or
enter
rcr
stos
push
mov
push
(bad)
(bad)
(bad)
rol
mov
xlat
dec
jne
cmc
push
sub
pop
push
jl
lea
and
sub
(bad)
cmp
inc
std
imul
push
call
test
hlt
pminub
adc
ret
(bad)
out
div
imul
ds
test
jns
add
into
sub
xlat
pmaxsw
movs
sar
mov
cmovp
lods
cmp
push
sahf
std
imul
adc
dec
stc
aam
inc
mov
cmp
pop
xor
jl
adc
lods
scas
pusha
push
cmp
pushf
int3
ja
jno
outs
and
sub
sbb
jle
mov
sbb
shl
test
push
and
xchg
lahf
mov
xchg
stc
xor
add
mov
sub
push
jo
test
push
mov
leave
mov
int
jbe
pop
mov
(bad)
xor
into
aas
int3
or
push
jb
sub
sub
add
sub
cmp
ret
adc
js
(bad)
adc
or
into
rcl
add
xlat
and
pop
or
jp
xchg
push
out
in
loopne
in
jb
minps
fnstenv
pushf
push
dec
pop
push
retf
jmp
push
cld
cld
lods
loop
aad
pop
or
pop
cmp
pop
arpl
js
cmp
adc
cli
std
cmps
repz
lods
imul
(bad)
xor
inc
sbb
push
stos
ds
xchg
ja
int
xchg
mov
mov
cmp
iret
fdivrp
aam
retf
inc
jmp
cs
fs
fs
and
scas
xchg
sub
mov
sub
rcl
dec
clc
and
cmp
inc
or
ins
outs
(bad)
dec
dec
imul
addr16
int3
rcl
jmp
sbb
inc
xchg
pop
shl
(bad)
mov
ins
pop
fld
sar
imul
inc
pop
lods
out
add
test
ins
push
stos
jo
sub
pop
not
daa
pop
imul
lods
mov
adc
stc
mov
push
sub
ja
push
jo
(bad)
in
retf
xor
es
cmps
push
push
ja
out
nop
push
test
add
fistp
cli
mov
cs
mov
pop
add
cdq
test
xor
cmp
out
and
dec
xchg
pop
repz
cmp
pop
mov
pop
sub
ss
pop
dec
rcl
cmp
push
inc
test
das
cdq
sbb
dec
mov
bswap
add
outs
mov
jmp
inc
lods
lea
pop
mov
hlt
jbe
(bad)
mov
fcomip
rcr
jmp
xor
mov
mov
movs
cmp
pop
mov
mov
les
out
test
adc
mov
ins
pop
cmp
mov
mov
fidivr
adc
mov
mov
ret
stos
jne
out
getsec
ds
sbb
and
pop
xchg
pop
mov
inc
or
int3
lods
jmp
cmp
popf
inc
cmc
aam
cld
test
or
fs
in
clc
push
cmc
xor
and
fdivp
sti
call
call
mov
inc
mov
xchg
aad
sub
cmp
pop
in
mov
popa
mov
fwait
cmps
push
into
lods
xor
popa
jne
lock
mov
mov
sub
inc
popf
dec
xchg
aam
imul
dec
xchg
int
add
idiv
dec
mov
jecxz
jge
sub
cli
dec
daa
icebp
sbb
xor
aam
push
mov
dec
jmp
into
mov
push
pusha
pop
imul
sub
xor
mov
pop
sub
mov
xchg
test
addr16
call
add
ins
inc
movs
cmp
xchg
stc
inc
in
stos
adc
or
sbb
rcr
cld
imul
mov
jnp
test
pusha
repnz
pop
mov
jnp
xchg
ins
ficom
int3
aas
mov
or
fld
je
call
cmp
cmps
sbb
cmp
loope
jle
stos
push
mov
and
inc
daa
int3
retf
clc
loopne
or
std
and
inc
cwde
push
ret
jmp
loopne
xchg
dec
cmp
xchg
sbb
rcl
cmp
jns
outs
into
ja
or
aam
push
mov
pop
or
lods
movs
pop
sbb
icebp
cmps
mov
loopne
add
sub
stc
bound
push
sub
shl
outs
mov
mov
shl
cmp
jg
inc
fidiv
in
pop
jle
jb
pop
movs
jmp
(bad)
mov
jae
lahf
mov
adc
mov
mov
xchg
ror
cmps
leave
and
adc
into
adc
cs
mov
int3
(bad)
fsubr
pop
lea
push
fs
dec
lea
xchg
push
or
sub
add
cmp
xchg
sub
es
push
test
sub
and
inc
outs
pusha
jp
sub
test
sbb
jecxz
mov
lahf
outs
sbb
dec
stos
xchg
mov
leave
loopne
aas
and
jne
call
rol
inc
mov
adc
adc
cmps
or
push
or
push
adc
jl
fnstsw
push
or
or
shl
retf
jl
lea
or
test
loope
jmp
sub
jmp
or
daa
push
push
movs
ss
push
shl
stc
adc
jb
movs
dec
call
sti
es
cs
ffree
fiadd
mov
rcl
(bad)
jo
sahf
pop
sahf
outs
mov
and
dec
or
push
sub
das
icebp
dec
cmp
ins
sub
or
jae
out
push
adc
loopne
xchg
stos
dec
enter
sub
fsubp
stos
push
and
not
mov
imul
cdq
in
pop
xor
sbb
xlat
xor
cmp
into
fdivp
sub
or
test
repnz
or
retf
test
adc
fistp
imul
jo
and
fld
jns
inc
inc
push
imul
sbb
jmp
mov
mov
xor
pop
repz
add
ds
mov
inc
mov
popf
call
inc
pop
lods
xchg
jbe
jno
jge
gs
ja
pop
adc
lahf
push
mov
je
lsl
add
adc
mov
inc
sbb
adc
in
xor
rol
jbe
push
add
mov
pop
sbb
inc
mov
mov
and
mov
cmp
push
in
hlt
add
sti
rcr
in
pop
aas
jbe
jo
in
cmps
mov
xor
into
(bad)
neg
adc
pop
push
add
data16
pop
add
mov
test
repnz
dec
imul
cmp
pop
test
xor
or
xor
pop
dec
mov
cld
inc
adc
aas
dec
je
cmp
xchg
sub
pop
jo
jecxz
imul
and
cmps
jmp
in
out
cmp
add
jmp
outs
mov
dec
and
fist
popa
push
or
stc
(bad)
and
push
cmp
adc
mov
scas
mov
or
call
ret
jl
shl
jle
fistp
sbb
cld
add
push
jecxz
jne
fucomp
cmps
test
clc
loopne
outs
daa
dec
mov
test
out
repz
mov
jno
sub
sahf
inc
arpl
jle
push
stos
fidiv
call
sar
test
dec
pop
xchg
std
clc
rcr
add
xchg
dec
movs
jp
push
adc
mov
jle
sbb
arpl
mov
xor
add
sub
or
pop
pop
sub
mov
inc
(bad)
cmp
adc
xchg
cld
dec
xor
xlat
mov
(bad)
adc
or
fidiv
push
xchg
or
sub
pop
ficom
mov
mov
aam
in
or
fwait
sbb
jmp
fist
stos
cmp
aaa
push
mov
cdq
idiv
shr
push
popf
sbb
in
add
pusha
jle
ficomp
outs
pop
loop
enter
cs
xor
call
cmps
je
mov
dec
gs
(bad)
js
jnp
cld
sub
pop
leave
and
xlat
mov
jnp
jo
jno
adc
js
retf
leave
mov
sbb
or
xchg
das
imul
out
loope
dec
cmps
sar
stos
xor
out
mov
xchg
xor
or
in
push
push
or
gs
xchg
lods
(bad)
fs
mov
pop
sahf
add
in
mov
mov
mov
shl
ds
mov
jp
or
cmp
adc
hlt
push
stc
js
inc
int
mov
pop
jnp
adc
movs
xor
test
ss
xor
test
pop
or
fldcw
mov
jbe
adc
pop
adc
or
mov
push
cmc
push
jle
push
mov
push
jmp
sbb
and
cs
call
scas
xor
add
mov
popf
gs
cmp
and
movs
js
mov
inc
or
jecxz
test
rol
mov
push
add
outs
(bad)
and
lods
fld
push
in
scas
scas
movs
jae
cmps
add
xchg
movs
ins
int
push
dec
nop
shl
pop
sbb
push
push
test
sar
mov
sbb
sbb
dec
shl
ja
jp
movs
rol
cs
mov
jbe
push
and
imul
sbb
cmp
push
fidivr
js
jmp
fsubr
stos
retf
inc
aam
sbb
pushf
in
mov
lods
out
mov
sbb
test
enter
arpl
xor
fwait
jae
mov
xor
sbb
mov
out
push
mov
pusha
xchg
mov
pop
aad
ds
ficom
mov
jmp
mov
ds
movs
(bad)
shl
xchg
cmps
pop
or
add
(bad)
int3
sahf
ss
lods
out
bound
retf
in
call
call
imul
xor
xor
repz
mov
cmp
push
or
shr
xlat
xchg
jb
lahf
shr
adc
push
sahf
(bad)
icebp
fimul
lods
add
das
(bad)
cld
sub
ds
xor
sbb
bound
ds
dec
test
cmps
mov
outs
shl
arpl
or
sahf
and
push
sahf
push
push
lds
push
rcr
and
add
adc
push
aam
mov
sbb
push
pop
inc
out
sti
cdq
ins
rol
xor
xchg
dec
xchg
rcl
inc
stos
fist
push
outs
mov
dec
mov
outs
and
push
in
in
dec
cdq
test
jnp
pop
jl
jne
cdq
in
adc
xor
mov
cmp
xor
push
(bad)
cli
gs
mov
xchg
mov
hlt
inc
or
dec
sbb
inc
stos
add
or
push
std
test
fs
xchg
iret
out
or
shr
aaa
arpl
jae
dec
fnstenv
or
and
aad
lods
adc
xchg
aam
jl
xchg
loop
cli
not
enter
mov
pushf
jmp
pushf
or
fidivr
popa
mov
jp
push
pop
mov
inc
call
cmp
out
dec
ret
mov
je
sub
pushf
mov
xchg
push
dec
test
sbb
push
inc
xor
inc
fnsave
mov
push
call
xchg
sbb
jle
je
ret
loope
pop
jg
bound
stc
xor
mov
movs
bound
cmp
mov
adc
pop
jo
iret
adc
call
pop
jbe
mov
lods
fmul
mov
mov
mov
lods
nop
xlat
pop
push
add
inc
xor
pop
into
ins
mov
and
repz
and
aam
mov
fnsave
add
xchg
shl
in
xchg
pop
or
xlat
mov
sub
mov
xor
das
inc
jmp
outs
cmp
inc
jle
pop
adc
add
outs
lds
mov
sub
push
mov
cmc
leave
in
inc
out
in
xchg
popf
dec
mov
aas
jl
xor
clc
cmp
lahf
pushf
arpl
add
clc
test
xchg
hlt
cmp
add
leave
sbb
mov
sbb
or
or
and
pop
jno
inc
(bad)
faddp
or
jl
in
mov
mov
sub
dec
dec
cli
pushf
push
repz
xchg
xlat
aas
jbe
xchg
retf
fadd
mov
pop
mov
pusha
pushf
rcr
lock
lods
aas
popa
test
sti
lock
(bad)
fs
lods
(bad)
jmp
setbe
jbe
add
add
mov
or
lods
or
fisttp
ud1
sti
ffreep
mov
mov
leave
sbb
out
ins
xchg
call
sub
bswap
inc
or
mov
loope
inc
lea
xor
xchg
adc
sahf
sbb
test
iret
lahf
mov
push
jp
pop
adc
mov
retf
in
jle
imul
pop
outs
repnz
movs
mov
push
or
jae
jge
inc
jb
xchg
jl
icebp
jg
dec
dec
jnp
shl
and
inc
jle
jle
(bad)
and
cdq
fisubr
mov
bound
jg
xor
mov
lock
(bad)
lds
ins
or
pop
mov
mov
ret
inc
mov
inc
mov
and
inc
in
sar
(bad)
loop
icebp
scas
out
outs
loopne
loopne
xchg
lock
sbb
repnz
je
gs
fld
and
clc
rcr
nop
mov
movntq
imul
add
fiadd
call
rcl
cdq
pop
push
inc
sbb
inc
mov
add
xchg
xor
test
imul
fimul
inc
push
and
shr
aaa
rcl
push
xchg
push
jo
fiadd
push
das
fidiv
pop
imul
xor
cdq
pop
test
inc
mov
retf
mov
scas
jbe
pop
add
jno
fiadd
lods
cmp
ds
repz
daa
sub
lds
or
(bad)
sbb
imul
push
mov
pop
jle
xchg
imul
add
into
and
jne
cmc
imul
out
mov
jnp
imul
xor
scas
pop
cwde
or
cmp
out
fist
or
xchg
out
(bad)
retf
pop
fld
mov
data16
outs
jl
fcmove
xchg
aas
adc
sub
adc
pop
imul
push
test
aaa
aad
cwd
movs
imul
or
mov
sbb
dec
pop
jo
stc
inc
cli
xchg
mov
mov
jae
mov
fcmovnu
std
pushf
xor
mov
test
call
repz
mov
mov
ret
leave
test
and
lock
int
sub
repz
dec
call
dec
fs
mov
jb
repnz
jle
js
push
push
stc
sbb
test
icebp
imul
or
mov
jle
lds
xor
test
pop
test
and
adc
lods
xchg
scas
ins
retf
dec
pop
adc
out
jmp
inc
in
lods
push
hlt
jle
mov
(bad)
mov
mov
rcr
sbb
dec
data16
outs
loop
rcr
dec
or
sbb
cwde
aam
adc
inc
in
(bad)
jmp
adc
jg
push
sti
movs
test
stc
or
inc
sub
xor
outs
dec
inc
repz
xlat
or
pop
push
cmp
cs
popa
xor
inc
or
xchg
aad
and
fiadd
fsubr
out
jge
dec
push
lock
outs
pop
xor
dec
pop
lods
stos
pop
addr16
push
rol
aas
in
xchg
add
mov
adc
and
and
cmp
jge
mov
je
jns
inc
std
pop
mov
cwde
dec
jge
in
data16
popa
cmp
repnz
ficomp
fdivr
sub
jns
test
and
add
add
add
jno
inc
adc
sbb
cld
into
or
call
dec
dec
shl
sub
xchg
mov
jo
cmp
xor
loopne
loopne
leave
adc
ror
pop
lods
fist
add
pop
out
mov
sub
rcl
or
pop
inc
ds
xchg
pop
dec
out
inc
outs
or
and
add
mov
imul
rol
pop
rcr
bound
mov
xor
gs
loopne
jle
lea
push
shr
enter
les
jbe
pop
push
retf
jge
pop
push
scas
mov
mov
ret
mov
mov
mov
push
sub
or
push
jae
sbb
in
mov
(bad)
add
pop
bound
jb
shr
mov
xor
ja
out
std
loop
or
cmp
(bad)
loopne
ja
cmp
add
ret
fdivr
sub
push
jae
xchg
out
mov
pop
mov
inc
rol
dec
ret
fwait
aas
xchg
daa
jg
pop
ror
pop
or
or
aaa
pusha
pop
and
cwde
sbb
cmc
push
xlat
pop
test
cmps
(bad)
icebp
out
ss
cdq
daa
mov
pushf
lea
dec
inc
jno
cmps
ds
pop
gs
push
adc
mov
sahf
xchg
and
repnz
inc
rol
pop
ins
jb
cwde
fs
ds
ss
mov
pop
sbb
mov
jmp
jne
fdivr
and
out
(bad)
mov
pop
(bad)
cdq
push
xlat
adc
xchg
int
jne
sub
mov
imul
jg
fcmovu
clc
in
xchg
inc
and
jmp
das
test
ss
loopne
mov
ins
loope
jmp
imul
fbld
inc
fucompp
aaa
iret
int3
test
cvtps2pi
mov
test
xchg
(bad)
ret
ss
xor
mov
and
jmp
(bad)
into
fsubr
cdq
movs
fwait
pop
pop
scas
sub
xchg
mov
dec
dec
mov
pop
ret
test
dec
aas
faddp
ror
fsub
or
int3
jb
add
inc
or
int
popf
loop
ret
pop
popf
pop
inc
cmp
scas
loop
or
push
push
fistp
jmp
test
jnp
stos
cmp
scas
pop
xor
xchg
cmp
xor
xor
mov
mov
pop
push
clc
jle
mov
jnp
mov
jo
bound
repnz
pop
iret
inc
jnp
or
call
jmp
inc
fist
aas
ror
dec
daa
sbb
(bad)
iret
mov
aas
adc
ins
jmp
sbb
pop
xchg
retf
(bad)
jp
dec
jo
ficom
lds
mov
mov
mov
sub
pop
pop
cdq
scas
fstp
cmp
adc
xchg
(bad)
jmp
test
jno
and
out
dec
add
retf
jl
les
test
loopne
test
sub
imul
arpl
ss
sbb
push
mov
ja
mov
pushf
xchg
xchg
jmp
mov
sti
adc
stos
div
(bad)
mov
mov
mov
push
add
jmp
cwde
out
int3
jae
fwait
mov
mov
(bad)
inc
inc
xchg
mov
pop
jno
in
sbb
add
into
jg
repnz
popa
out
mov
lods
sbb
pushf
loop
jp
add
ins
ja
xor
cli
dec
add
pop
push
sbb
add
fsubrp
cmc
dec
pop
sbb
inc
daa
xor
hlt
pop
mov
(bad)
popa
mov
mov
dec
jb
sub
xchg
aad
loope
inc
xor
lods
or
dec
and
push
pusha
xchg
imul
mov
inc
inc
jno
jae
and
stos
imul
leave
popa
scas
lahf
mov
outs
ins
rcl
xlat
or
rcl
popa
repnz
pop
mov
and
rcl
sbb
jbe
(bad)
inc
or
pusha
loopne
(bad)
jne
sbb
popf
stc
mov
aad
pop
push
sub
sar
repz
adc
fld
xchg
out
jp
xor
mov
shr
xchg
cmp
or
xchg
pop
mov
adc
xchg
sbb
xor
xchg
lock
cmp
adc
popf
dec
lahf
inc
push
sbb
test
mov
cmps
add
adc
mov
addr16
adc
adc
or
nop
out
outs
(bad)
inc
outs
imul
stos
lahf
add
adc
out
js
push
gs
clc
retf
iret
fdiv
mov
fistp
imul
aas
mov
iret
imul
(bad)
sub
outs
loopne
outs
mov
dec
rep
movaps
aad
loopne
pushf
or
shr
rcr
pop
loop
cmp
cmp
imul
das
in
pop
clc
xchg
push
pop
mov
add
sub
jnp
mov
mov
repnz
xchg
mov
leave
mov
jmp
(bad)
xlat
jmp
scas
push
call
mov
and
inc
or
cmc
movs
repz
mov
dec
fmul
rcr
jnp
repnz
jae
ret
mov
test
call
sbb
idiv
(bad)
push
(bad)
aam
add
movs
add
mov
xor
loopne
leave
ins
bound
jmp
addr16
mov
mov
mov
popa
not
and
adc
(bad)
shl
lahf
pop
aaa
inc
lea
sbb
xchg
ret
and
xchg
pop
iret
push
loop
xchg
clc
jae
adc
mov
pusha
add
dec
cmp
aas
add
sahf
cdq
pushf
push
and
cmp
add
ins
or
popa
lds
cmp
jbe
sbb
mov
(bad)
add
enter
push
push
xchg
xor
dec
xor
bound
cmp
dec
je
mov
or
inc
call
add
mov
mov
clc
jp
enter
lahf
daa
lds
push
mov
pusha
stc
dec
sub
and
or
cmp
pop
xchg
jmp
popf
les
mov
(bad)
sub
inc
push
push
out
dec
sbb
mov
inc
jl
pop
icebp
imul
test
int3
mov
push
cmp
lea
test
dec
and
and
fisubr
cmp
sbb
sbb
or
adc
es
into
ret
pop
cmp
xchg
repnz
je
clc
sbb
dec
movs
xchg
and
retf
ss
inc
out
cmp
pop
(bad)
ds
cwde
movs
pushf
xchg
outs
dec
ss
je
adc
mov
nop
add
pop
adc
(bad)
dec
icebp
add
pop
push
fcomp
mov
enter
push
mov
(bad)
push
fst
in
(bad)
sti
fs
movs
dec
aas
lods
mov
adc
loopne
pop
int
mov
lods
xchg
mov
out
scas
call
inc
mov
dec
adc
(bad)
xor
retf
test
or
retf
xchg
pop
rcr
push
cmp
popf
cmc
outs
dec
pop
loope
not
and
call
push
je
stc
outs
mov
arpl
cwde
dec
cmp
add
adc
lahf
test
outs
push
or
call
call
mov
mov
movs
pop
out
mov
lods
clc
inc
popa
imul
push
lock
dec
gs
inc
xchg
adc
repnz
int
or
ds
into
cld
fmul
or
jecxz
or
mov
js
xchg
mov
idiv
popa
and
pusha
test
pop
scas
(bad)
(bad)
fwait
leave
cld
mov
push
mov
mov
cmp
std
loope
es
fcmovnb
push
add
cmp
or
push
cmc
cld
js
jae
mov
frstor
jbe
ds
sub
or
fistp
mov
jle
adc
and
lods
mov
lods
mov
jge
ds
cmp
or
push
stos
aaa
add
push
addr16
sub
mov
popf
out
sbb
mov
dec
lea
jbe
jg
cmp
mov
xchg
aam
add
add
test
loopne
xchg
add
mov
sub
out
adc
pusha
sbb
pop
cmp
mov
mov
lock
pop
push
iret
mov
clc
push
dec
mov
sbb
push
cmp
and
mov
gs
mov
dec
(bad)
push
xor
and
mov
stc
ffree
sub
jl
cmp
and
mov
and
arpl
mov
sbb
cmps
scas
(bad)
cmc
sar
fst
mov
inc
lods
inc
mov
push
ins
adc
pop
or
or
dec
add
xchg
pop
jecxz
xchg
cmps
sahf
mov
push
mov
enter
sub
add
mov
push
adc
pusha
icebp
mov
sub
mov
push
outs
xchg
out
pop
pop
inc
xor
jle
scas
mov
mov
loop
fld
jae
or
(bad)
jmp
hlt
call
clc
cli
jno
fwait
mul
iret
sbb
ja
out
aad
cmp
cs
mov
fwait
mov
jnp
rcl
test
jmp
pop
inc
outs
cmp
cdq
push
mov
into
(bad)
mov
mov
test
cdq
imul
sahf
in
sbb
(bad)
(bad)
push
push
adc
fist
std
xchg
xchg
in
dec
ror
aam
push
loope
mov
sbb
retf
(bad)
rol
aad
outs
pop
movs
pusha
jo
mov
add
adc
sub
outs
xor
push
(bad)
mov
arpl
lahf
idiv
and
push
fcomip
std
int
retf
jg
jns
ror
ins
mov
or
outs
mov
cs
daa
jecxz
adc
cmp
sub
ins
addr16
ins
lahf
gs
xlat
lahf
mov
or
xchg
jb
lock
mov
imul
clc
jne
cmp
mov
lea
mov
mov
push
stos
sub
or
xchg
shr
pop
in
xchg
shl
fld
add
ret
fild
push
pusha
iret
jns
sub
aaa
sub
mov
pop
stc
rcr
pusha
jns
cmp
mov
in
sub
adc
push
cmp
add
cmps
cmp
pop
das
lea
mov
lds
pop
arpl
cmc
cmps
jmp
mov
xor
out
push
fcomp
cs
cmp
inc
out
lea
call
adc
sub
ret
imul
xchg
jae
mov
add
xlat
dec
push
sbb
push
pop
or
cmp
call
and
mov
stos
pop
out
aaa
pop
jae
data16
add
mov
xchg
shr
mov
imul
js
shl
addr16
fdivr
mov
sub
sub
dec
call
adc
jle
jae
cli
inc
xor
sub
lods
mov
or
clc
pusha
les
ret
data16
ds
aad
aam
pop
push
retf
aad
cmp
add
xchg
in
test
int
jno
push
xlat
jns
mov
rep
sbb
data16
jl
or
out
ja
mov
inc
or
dec
je
fldcw
movs
jmp
ins
call
pop
fmul
fwait
js
push
fcmovne
mov
outs
mov
(bad)
cdq
xchg
add
dec
ds
aas
rcr
lds
push
ds
icebp
mov
popf
loope
inc
add
mov
lahf
aas
and
not
xchg
popf
inc
xor
test
cli
sti
aad
ret
jns
push
shr
mov
ficom
add
lods
ret
stc
stc
xchg
xlat
sub
adc
test
jb
movs
or
cmp
in
mov
not
sub
push
inc
inc
pop
daa
add
mov
sahf
shl
mov
jecxz
pop
and
stos
rol
jl
js
push
sub
jns
xchg
xor
mov
bnd
lock
aas
sub
xchg
inc
hlt
mov
ror
sub
push
or
lods
adc
cmp
push
xchg
mov
outs
jae
jmp
cmps
arpl
iret
mov
mov
scas
(bad)
aad
dec
jg
mov
into
or
mov
sbb
xor
xor
packsswb
push
sti
mov
dec
dec
mov
xor
xchg
mov
mov
ja
mov
bound
lods
in
fnsave
data16
xor
add
xor
pop
sahf
and
sbb
add
mov
repz
sub
add
push
sub
pop
loope
sbb
jge
mov
mov
mov
in
mov
or
mov
dec
cwde
loop
dec
xchg
repz
paddusw
sbb
sbb
ror
add
test
mov
sub
push
ror
pusha
adc
pop
pushf
cmp
dec
inc
(bad)
stos
adc
and
popa
dec
sub
sbb
push
add
sub
(bad)
out
sbb
add
xchg
push
pop
xor
stos
inc
int3
jb
lahf
cmp
test
or
stos
inc
(bad)
dec
jecxz
fcomp
pop
jns
ja
inc
aaa
test
mov
or
jns
cmp
fstp
pop
xor
je
ja
jl
sub
ds
(bad)
push
inc
xchg
mov
push
inc
inc
mov
or
ja
lea
xchg
(bad)
cld
pusha
jno
push
mov
lahf
aad
ds
cld
dec
outs
sub
mov
addr16
jno
les
mov
add
(bad)
loopne
mov
add
mov
aas
adc
inc
push
sbb
xchg
pop
inc
pop
ffreep
mov
js
adc
adc
xchg
mov
xor
ds
addr16
imul
or
and
call
cmp
addr16
fnstcw
(bad)
and
loopne
xlat
mov
add
loope
mov
adc
mov
xor
or
xlat
out
xor
adc
leave
pop
or
aam
out
outs
cli
(bad)
jne
mov
sub
dec
dec
jge
outs
pop
mov
xchg
xor
in
aas
out
sub
in
fld
fbld
mov
push
lahf
movs
inc
xor
jo
mov
nop
dec
push
mov
sub
sbb
jae
mov
scas
in
cmp
out
pop
lock
mov
lods
pop
shl
into
in
dec
fild
lods
std
popa
pop
pop
inc
out
pop
cmp
add
dec
cmp
and
pop
or
dec
jne
sub
add
xor
cwde
retf
js
mov
or
mov
(bad)
or
(bad)
mov
xchg
dec
gs
pop
(bad)
rep
mov
scas
outs
or
cmps
inc
cld
jnp
cmp
adc
pop
sbb
xor
ret
add
push
xor
aaa
sub
mov
jb
js
sbb
jnp
and
xchg
sub
fisub
(bad)
sub
dec
stc
clc
jle
lahf
or
repnz
xlat
mov
inc
and
mov
(bad)
mov
and
xlat
shr
jmp
sub
mov
xor
imul
test
add
mov
inc
jne
(bad)
cli
call
cmp
and
jno
cmps
xchg
(bad)
mov
std
fwait
pop
enter
out
je
adc
fneni(8087
sbb
xor
xchg
js
xchg
icebp
jno
mov
out
retf
cdq
in
into
scas
dec
push
pop
ins
push
adc
loop
push
mov
pop
add
inc
cmp
aas
(bad)
mov
xor
xchg
push
in
mov
jecxz
stc
sbb
dec
dec
xchg
mov
push
pusha
loope
aas
push
inc
test
jg
or
jle
fisttp
pop
xor
imul
jmp
push
mov
inc
outs
fwait
or
loope
stos
sub
jb
lds
retf
iret
push
sub
in
sub
jmp
int
out
jno
leave
std
fadd
cmp
mov
cmps
mov
jnp
adc
adc
das
pop
mov
mov
cmc
cwd
mov
shrd
mov
ins
aam
dec
sbb
sbb
out
sbb
pop
push
stos
pop
dec
movs
outs
mov
pop
xor
fmul
imul
cmc
mov
pop
bound
les
jb
push
cvttps2pi
dec
add
fist
pushf
mov
sub
cmp
sti
xor
aad
mov
js
inc
inc
jecxz
add
jno
enter
call
cmp
cld
imul
and
hlt
dec
movs
pop
dec
loopne
sub
jmp
sub
lods
mov
add
mov
and
and
push
retf
xchg
xor
call
and
xchg
out
or
adc
xor
inc
rcr
retf
repz
ds
mov
imul
dec
jmp
pop
lock
and
jbe
xchg
iret
in
loop
xor
fild
cmp
div
popf
repnz
test
jno
pop
mov
inc
repnz
cdq
dec
or
push
push
dec
mov
push
xor
bound
sar
pop
imul
scas
out
je
sahf
mov
push
out
dec
(bad)
repnz
sub
jne
push
push
pop
adc
rcl
(bad)
enter
mov
add
dec
std
int3
aad
mov
enter
sbb
cwde
lds
pop
xor
mov
dec
inc
inc
aad
xchg
or
popf
jmp
xchg
imul
pop
push
adc
test
inc
iret
xchg
push
mov
pop
adc
jmp
mov
int
and
jno
pop
lds
and
cmps
xchg
lds
mov
dec
cmp
rcl
push
das
pop
in
xchg
pop
push
in
or
ret
cmp
xchg
push
adc
ins
(bad)
fidiv
pop
test
setnp
ins
jmp
dec
push
pushf
pop
jns
imul
push
jmp
pop
mov
sub
mov
adc
(bad)
loopne
(bad)
arpl
push
hlt
je
jnp
cs
sub
sti
sbb
arpl
mov
mov
(bad)
fisttp
pusha
mov
dec
sub
xchg
mov
mov
xchg
mov
add
or
inc
mov
and
mov
loopne
out
je
fist
scas
out
sub
mov
imul
jns
push
xor
inc
jp
cmc
aam
and
(bad)
(bad)
outs
das
pusha
int3
cs
aam
lea
mov
js
pop
fs
out
call
mov
inc
xor
lods
movs
sbb
add
pop
aaa
shl
xchg
dec
aas
pop
mov
add
dec
in
xchg
retf
push
lahf
mov
xchg
mov
push
jle
push
mov
add
mov
outs
ficomp
adc
sub
lods
cld
dec
cmc
push
scas
(bad)
mov
mov
cmp
inc
lods
jnp
jmp
daa
es
cmps
cmp
sbb
xchg
or
xchg
ret
test
push
fs
pop
daa
sbb
lods
in
push
(bad)
jp
xchg
dec
(bad)
(bad)
fucom
sbb
fist
dec
outs
xchg
movs
cmc
inc
dec
loop
gs
test
les
je
and
lods
fcomip
out
out
inc
out
les
push
add
dec
mov
jl
mov
fidiv
mov
loopne
jg
inc
push
inc
out
add
dec
or
cmp
mov
imul
lea
daa
xchg
inc
jg
lock
push
leave
dec
scas
and
push
fcomip
call
adc
outs
mov
mov
aam
mov
out
mov
add
imul
shr
push
es
pop
into
fwait
clc
jno
sub
sub
in
mov
xor
hlt
mov
dec
add
cmc
(bad)
out
add
push
addr16
in
mov
les
imul
and
dec
mov
dec
popa
ds
add
test
pop
inc
sbb
clc
daa
loopne
cmp
sbb
jge
jno
(bad)
xchg
jg
pop
daa
ror
mov
mov
std
add
xor
mov
xlat
inc
sbb
cmps
rol
cmp
sar
shr
jp
imul
mov
inc
mov
not
jns
xor
cwde
aaa
dec
cmp
xchg
mov
dec
cdq
(bad)
retf
lods
call
sbb
ja
das
sbb
dec
sbb
xchg
movs
xor
sbb
shl
and
std
and
xchg
mov
repz
mov
ret
ret
mov
mov
out
(bad)
std
jle
mov
pushf
and
fistp
mov
inc
cwde
ffree
cld
ins
dec
jp
mov
push
fst
cmp
jns
dec
pop
xchg
ins
cli
jle
or
ins
cld
sbb
mov
sti
rcr
jle
adc
addr16
sahf
aas
push
xor
adc
aam
or
fmul
std
pop
push
imul
nop
addr16
xchg
mov
or
test
std
repnz
cmc
mov
shl
and
daa
adc
jl
jb
lahf
stos
add
fwait
push
loope
fdivr
dec
cwde
dec
icebp
jmp
inc
repz
ret
push
add
mov
add
add
sbb
inc
mov
mov
xchg
es
jae
dec
outs
lahf
or
mov
int3
xchg
es
sbb
sbb
cld
lock
mov
sbb
pop
push
pop
es
mov
mov
pop
cmp
call
je
mov
ror
repz
push
dec
mov
aad
into
jnp
jge
dec
push
inc
add
xor
cdq
push
mov
jb
call
test
lds
mov
push
nop
test
fs
dec
cmps
ins
imul
xchg
push
dec
(bad)
and
xchg
cmp
cmp
shl
or
xor
adc
xor
jns
pop
xchg
cwde
push
lods
fwait
ins
dec
lds
sub
neg
dec
retf
jno
xchg
push
or
inc
jo
not
retf
and
sti
jo
or
daa
es
rcr
dec
pop
int
sti
shl
out
outs
int3
dec
add
repz
jmp
jg
ss
mov
jns
mov
sbb
outs
(bad)
pop
cwde
rcr
dec
jne
in
fcomi
mov
test
stos
(bad)
xchg
ret
mov
sbb
adc
into
cdq
push
jne
cli
add
mov
shr
fidiv
std
dec
jecxz
sbb
xor
repnz
sbb
xchg
dec
imul
fnstenv
shr
sub
mov
push
nop
sub
mov
xchg
addr16
add
pop
leave
sbb
mov
test
mov
aam
add
aaa
xor
or
int
in
mov
(bad)
dec
js
and
sbb
adc
push
mov
sar
retf
mov
test
out
scas
jo
pop
push
and
ins
mov
push
mov
xchg
or
fs
dec
adc
and
sub
fwait
arpl
pop
mov
push
clc
sbb
int
aas
push
mov
adc
js
mov
sbb
not
inc
imul
addr16
cs
out
push
or
test
dec
shl
add
aad
and
call
mov
bound
movs
cmp
or
gs
aad
add
pop
xchg
mov
movs
fild
es
fisub
mov
inc
in
lods
inc
mov
xor
movs
cmp
or
lahf
sbb
xor
cmp
or
shl
add
int3
xchg
mov
or
fldenv
inc
test
(bad)
lahf
lock
popf
push
xchg
ficom
(bad)
iret
sub
xchg
xchg
cmovae
or
push
mov
ret
inc
sbb
sahf
cmp
call
fwait
pop
pop
push
dec
loope
jl
in
retf
div
bound
test
add
bound
pop
and
loopne
outs
cdq
pop
add
adc
aas
and
test
add
iret
not
pop
popa
enter
rol
daa
pushf
es
xchg
sbb
add
xor
adc
and
mov
mov
add
adc
push
cmp
push
je
jecxz
fld
and
hlt
dec
fs
inc
movs
int
push
in
dec
jecxz
dec
xor
xor
adc
hlt
jmp
nop
movs
cwde
shl
data16
sbb
es
ds
(bad)
add
sbb
adc
lahf
stc
xchg
es
in
xor
js
mov
das
(bad)
add
scas
imul
xchg
and
inc
lods
sub
fistp
cli
mov
sub
in
mov
(bad)
dec
lods
pop
jo
xchg
sbb
jmp
(bad)
js
sahf
loope
into
stos
mov
repnz
(bad)
cmp
inc
in
aad
into
xchg
hlt
lahf
mov
or
or
das
fld
xchg
ins
pop
dec
xchg
mov
adc
xor
adc
imul
push
mov
out
jns
imul
pop
mov
das
das
fistp
sbb
jo
xchg
and
cdq
mov
scas
imul
xchg
inc
xor
fsub
jns
cmc
test
add
ret
xor
mov
stos
test
or
arpl
retf
sub
mov
mov
repnz
ret
pop
push
shl
pop
call
inc
jge
call
mov
fistp
out
mov
dec
dec
and
scas
loopne
sahf
pop
sahf
(bad)
in
jecxz
pop
mov
rsqrtps
cmp
mov
inc
iret
mov
fiadd
int
sub
mov
mov
mov
sub
push
mov
imul
mov
je
inc
pop
xor
pushf
inc
cs
ror
xchg
add
fbld
jp
fs
mov
repnz
mov
dec
(bad)
mov
xor
mov
pop
jecxz
sbb
sahf
mov
arpl
lods
push
mov
adc
outs
jmp
scas
fidivr
fisubr
lods
(bad)
dec
push
mov
and
inc
jo
inc
mov
dec
out
sbb
les
pop
(bad)
ja
or
movs
lods
and
jbe
or
js
sahf
cdq
dec
lahf
popa
inc
dec
sbb
xlat
test
jb
lahf
push
sar
add
mov
mov
fsubr
and
and
push
sub
lods
mov
sub
aad
addr16
inc
lods
ds
ss
in
fs
icebp
int
arpl
sbb
aaa
repz
imul
xchg
push
(bad)
push
cmp
push
aam
nop
div
add
xchg
ret
dec
mov
mov
ins
pop
push
hlt
xor
add
fistp
xchg
dec
sbb
ficom
sbb
bound
xor
cmp
push
jmp
jle
xchg
xchg
dec
jns
add
in
(bad)
and
mov
xlat
sar
sti
ja
(bad)
movntq
out
xchg
pop
sub
cmc
add
push
add
push
test
pop
jge
mov
adc
inc
push
rcr
mov
into
sbb
outs
xchg
and
add
sub
mov
test
and
data16
int3
mov
mov
jmp
shl
iret
inc
dec
mov
fst
retf
hlt
cmp
mov
xor
(bad)
adc
sub
out
add
pop
test
mov
dec
out
jp
or
pushf
ins
pop
sahf
jmp
jne
jecxz
mov
sub
pop
or
into
sbb
fsubr
dec
in
inc
push
sbb
es
and
mov
cld
add
out
xchg
rcl
xlat
(bad)
ins
sahf
or
test
pop
sub
mov
ds
push
stos
mov
int3
sti
imul
xchg
dec
xchg
sub
shl
scas
repnz
push
mov
aas
stc
cmp
inc
out
inc
aas
jmp
test
inc
and
outs
rep
xchg
test
imul
ins
pop
sub
xchg
out
inc
scas
out
xor
xor
das
xchg
int3
and
sbb
push
jne
std
fs
out
(bad)
pop
pushf
inc
ds
les
retf
push
xchg
in
je
adc
retf
xor
mov
std
push
ficomp
nop
lds
sbb
cli
movs
lods
and
xchg
push
mov
loope
aam
in
call
mov
in
or
mov
xchg
pop
or
xchg
mov
fucomp
adc
or
repnz
xor
sub
ins
cmps
sub
fild
retf
sub
push
sub
xor
popf
shr
push
pushf
xor
std
les
mov
xor
jmp
mov
js
dec
jl
sub
cmp
aaa
in
bound
out
xor
sub
pusha
pop
mov
xchg
push
sti
pop
push
xor
in
sahf
mov
scas
ja
mov
mov
cld
jg
add
mov
cld
(bad)
retf
mov
cld
xchg
outs
mov
mov
or
jp
stos
test
jge
shl
sub
sub
cmp
jl
jge
and
neg
imul
sbb
std
xchg
push
inc
mov
rcl
(bad)
xor
lods
push
or
ins
out
cmp
jp
and
cmp
mov
mov
pop
jecxz
push
mov
xchg
and
inc
mov
outs
lds
push
pop
clc
xor
scas
mov
pop
mov
call
test
xor
outs
aas
dec
call
mov
dec
mov
ins
loopne
add
sub
fild
xlat
(bad)
test
ficomp
out
adc
stos
push
jbe
sahf
cdq
icebp
ja
(bad)
jbe
adc
cmps
push
(bad)
cmps
std
les
or
cmp
test
sub
inc
and
push
xchg
fwait
xchg
mov
pop
and
cdq
xlat
iret
je
mov
and
push
test
adc
mov
in
lods
jno
rol
outs
enter
retf
pop
dec
xor
push
pushf
push
cmp
(bad)
cmp
xchg
inc
fwait
test
and
aad
jnp
pop
and
pop
mov
pop
jecxz
outs
sar
xchg
fs
cmps
ss
pop
xchg
jg
scas
lods
in
(bad)
loop
lea
repz
sub
adc
aad
xchg
pop
or
mov
icebp
dec
in
jecxz
lds
addr16
mov
mov
int3
pop
ret
mov
pop
push
das
cs
xor
and
adc
out
sbb
dec
mov
mov
retf
sbb
xchg
inc
or
pop
push
cmc
xchg
movs
idiv
ret
fiadd
fwait
stos
sub
(bad)
sbb
sbb
sbb
jb
std
and
jge
popf
adc
lods
mov
inc
sbb
movs
and
mov
out
jo
jmp
xchg
pop
leave
mov
inc
jecxz
mov
lock
addr16
mov
stos
pop
arpl
add
outs
pop
por
sub
pop
(bad)
fadd
mov
xor
aam
xchg
xchg
mov
cmps
movs
adc
mov
ss
sbb
aaa
xor
movntq
out
rcr
sbb
add
jns
xchg
lods
aam
mov
rcl
pop
pop
and
adc
lods
inc
sub
cs
mov
stos
outs
mov
adc
jge
mov
mov
inc
fcomp
sar
mov
fst
dec
ret
sti
fsub
mov
mov
jno
cmp
cmp
imul
adc
mov
adc
cli
outs
rcr
hlt
push
xchg
jg
mov
inc
(bad)
inc
shl
scas
mov
xchg
sbb
xchg
aam
push
movs
add
cmp
ror
(bad)
std
mov
add
inc
adc
mov
mov
call
mov
push
xor
pop
in
cmp
imul
sbb
dec
cmp
stos
mov
add
mov
call
iret
fucomp
pop
sbb
xchg
int3
into
mov
cmp
lods
dec
clc
jl
xor
xchg
mov
cdq
je
inc
daa
adc
jp
in
mov
push
fs
and
fbld
(bad)
aas
sbb
xchg
sti
dec
es
jmp
aad
mov
adc
dec
sbb
push
cwde
movs
data16
cmp
cmps
test
loope
pop
mov
cdq
imul
addr16
sar
cmp
nop
push
iret
imul
mov
cmp
inc
out
lock
nop
mov
sub
sbb
sbb
xor
inc
aam
inc
pop
sub
sti
loope
lods
push
leave
push
jno
jmp
mov
retf
mov
sbb
xor
jns
add
out
pop
and
stc
push
mov
xchg
imul
ds
jmp
(bad)
push
push
iret
dec
dec
mov
retf
jbe
mov
pop
mov
xor
fild
inc
and
arpl
xor
addr16
ds
das
fs
add
imul
ja
pop
out
stos
es
xor
or
push
adc
dec
aaa
xchg
jo
out
mov
push
cmp
adc
mov
das
xchg
cmps
and
mov
fdiv
push
ss
xor
and
add
bound
out
(bad)
ds
shl
test
aam
in
dec
mov
mov
push
inc
lahf
std
cld
mov
les
push
jno
pusha
js
jl
lahf
imul
pop
out
and
lahf
les
mov
jge
gs
test
mov
sub
arpl
add
and
mov
jmp
cli
nop
adc
(bad)
stos
dec
repz
jg
dec
loop
sbb
cmp
jge
mov
cwde
adc
clc
cwde
fucom
cwde
xchg
pop
sbb
aad
xor
in
repz
retf
cmp
inc
add
xchg
or
das
jmp
stos
xchg
popf
push
add
call
icebp
ins
sbb
inc
sub
mov
cmp
sbb
adc
gs
(bad)
jp
out
push
xor
mov
pop
xor
sub
pop
std
pop
xchg
xor
or
rcr
sub
inc
call
push
pusha
or
fild
(bad)
pop
sub
inc
mov
xor
add
xor
arpl
inc
or
pop
cmp
je
cmps
cmp
scas
stc
jbe
jg
cmps
shl
(bad)
aaa
mov
ror
ror
mov
sbb
push
ja
in
xor
out
push
dec
(bad)
and
stos
test
cmp
xor
inc
int3
sub
movs
sbb
(bad)
mov
and
call
push
lock
and
scas
pop
xchg
mov
adc
test
mov
fmul
cmp
cmp
mov
int
daa
adc
xor
out
pop
jg
mov
dec
pop
add
or
fcomp
cmp
mov
lods
fbld
pop
sbb
mov
cmp
sub
loope
mov
ficom
adc
adc
rcl
repz
jp
mov
xchg
scas
cdq
sti
xor
icebp
popf
xchg
mov
lods
mov
imul
lock
ins
adc
mov
scas
ds
lahf
icebp
push
sbb
retf
inc
aad
xor
fist
dec
dec
mov
push
xchg
arpl
adc
fidivr
cmp
or
push
test
imul
dec
mov
out
iret
or
push
inc
inc
ja
push
or
data16
test
jl
mov
xor
fidiv
inc
or
jno
add
sub
or
or
adc
fistp
repnz
or
add
ror
adc
add
mov
xchg
cmp
sahf
loop
outs
cmps
cli
ins
and
pusha
mov
or
pop
xchg
add
cmp
sub
jle
dec
retf
cmc
iret
jnp
pop
xor
lds
pop
stc
xchg
adc
push
call
inc
rcr
icebp
xor
arpl
sbb
fs
mov
jae
cld
xor
push
cmp
ret
shl
add
inc
leave
test
aad
pusha
pop
scas
or
jg
and
cmp
add
inc
push
push
inc
sbb
jo
add
sbb
test
sub
add
adc
fwait
xor
sub
or
data16
inc
xor
mov
in
xchg
ins
xor
inc
js
xchg
imul
(bad)
adc
adc
cmc
test
enter
imul
jbe
lods
ins
jmp
iret
(bad)
(bad)
fiadd
hlt
aaa
or
out
xchg
test
clc
xchg
mov
pop
jle
pop
dec
pop
(bad)
mov
inc
mov
mov
xchg
inc
int3
dec
jl
sbb
in
xor
into
mov
out
xor
and
xor
push
jb
dec
pop
fcmove
jbe
cli
fild
xchg
pusha
sar
jp
xor
lock
jne
push
xlat
sar
cwde
xor
into
lods
sbb
dec
mov
add
mov
fisub
and
daa
sahf
aaa
xlat
cmps
(bad)
bswap
pushf
(bad)
daa
movs
cdq
pop
dec
leave
cmp
mov
inc
pop
shr
ret
or
ret
mov
mov
mov
pusha
mov
test
mov
jmp
cmc
mov
leave
rcr
cmp
mov
fadd
inc
call
xchg
sahf
adc
jp
rcr
in
jb
sbb
stc
mov
iret
dec
xor
xchg
or
mov
xor
push
cs
std
retf
sbb
jns
retf
jl
adc
mov
or
into
inc
inc
sar
dec
jo
test
pushf
iret
mov
cmp
int
jae
outs
pop
(bad)
fdiv
not
xchg
or
ret
mov
out
(bad)
mov
lods
sbb
hlt
test
shl
stc
jne
and
dec
jne
retf
and
sahf
jp
add
adc
jl
mov
cmc
jno
(bad)
icebp
scas
mov
mov
inc
sbb
mov
push
mov
inc
xchg
fst
pop
setge
jp
xlat
repz
mov
mov
inc
je
push
(bad)
lea
loopne
retf
lods
test
jl
jnp
mov
adc
daa
add
dec
jnp
cmps
imul
xchg
test
inc
out
sub
jle
push
iret
fldcw
cwde
or
jmp
xchg
mov
popf
and
xchg
push
add
imul
shl
js
imul
repz
mov
jne
scas
add
xor
mov
rdtsc
test
add
add
mov
cmps
ss
jae
jecxz
jne
int
inc
cmp
dec
add
movs
es
fsubr
mov
mov
sub
jb
movs
jg
pop
cmp
push
mov
xor
xor
add
jae
xor
pop
mov
mov
data16
lods
or
mov
push
fwait
cld
cmps
mov
gs
iret
lock
push
push
in
mov
sahf
adc
cli
sti
jmp
pop
cmp
cwde
fimul
nop
out
out
sub
test
fidiv
pop
aam
pop
xchg
pushf
dec
and
sbb
enter
loope
xchg
ja
outs
adc
push
cmp
shl
inc
sbb
ret
(bad)
push
push
cdq
push
xor
call
mov
cmps
cmc
sbb
aaa
and
mov
int
ret
loop
pop
loope
outs
aaa
or
or
call
fldcw
xlat
out
add
inc
std
fldenv
dec
das
inc
xchg
loopne
push
movs
and
sbb
jg
or
out
sti
(bad)
mov
test
es
add
push
dec
(bad)
jge
cld
cld
dec
push
sbb
jge
xchg
xor
xor
sti
rcl
ins
dec
(bad)
shl
sub
pop
xor
sub
and
dec
sbb
dec
dec
jmp
xchg
std
cwde
push
push
rcl
adc
sti
mov
dec
es
iret
in
(bad)
mov
test
and
sbb
adc
inc
sub
mov
push
jbe
ins
xor
scas
icebp
test
daa
xlat
sar
(bad)
rcl
mov
xor
sbb
and
add
into
icebp
xchg
in
movs
add
sahf
fmul
sub
mov
fisub
add
pop
into
sbb
int
or
xchg
mov
push
sbb
movs
ins
xchg
push
movs
pop
loop
push
in
jmp
aam
dec
rcl
add
addr16
in
test
xor
jle
sub
dec
mov
adc
dec
inc
xor
xchg
in
(bad)
mov
sub
inc
xchg
stos
cmp
ror
inc
mov
pop
call
lods
jae
pop
test
mov
push
call
cwde
add
mov
pop
call
rcl
adc
cmp
cli
loop
stos
push
hlt
outs
stc
inc
mov
imul
mov
or
mov
xor
test
imul
sub
add
mov
push
xor
mov
jge
popf
or
mov
std
sub
adc
sub
das
adc
or
jl
sbb
je
(bad)
inc
jge
add
test
fiadd
push
xor
cmp
push
cmc
aaa
mov
mov
add
jae
inc
push
das
sub
div
out
mov
mov
dec
xchg
in
pop
out
push
lds
lods
in
aad
arpl
inc
adc
mov
jge
jl
leave
sub
push
outs
fdivr
inc
adc
ins
mov
sub
out
mov
(bad)
and
push
aaa
sbb
push
push
es
in
xchg
jg
(bad)
pop
mov
jl
sbb
call
push
imul
mov
in
cmps
pop
lods
(bad)
les
mov
mov
test
inc
cmp
dec
ret
inc
lds
adc
jns
vmovaps
push
dec
push
(bad)
repnz
inc
mov
daa
and
lds
out
aad
push
(bad)
mov
cwde
and
ret
push
dec
xor
imul
outs
fnsave
xchg
enter
pop
ror
test
aaa
push
push
lods
inc
mov
pop
out
dec
mov
and
cmp
mov
xchg
and
push
jecxz
sti
retf
repnz
pop
xchg
jo
dec
pop
sbb
add
cmp
and
mov
pop
pop
sub
fimul
out
and
aaa
in
ss
ret
ret
adc
xor
(bad)
aam
les
mov
pop
rcl
inc
pop
call
pusha
mov
jmp
cmps
cmps
or
enter
mov
leave
mov
movs
into
adc
push
dec
mov
lods
cmps
in
mov
pop
je
rcl
pop
or
or
ret
(bad)
iret
push
in
xchg
repnz
jmp
neg
sbb
mov
xor
loop
arpl
jb
cmp
movs
das
or
hlt
inc
nop
xchg
in
or
push
sub
out
add
mov
aam
pop
xor
push
sti
jns
repz
mov
das
xor
popf
fadd
imul
in
bound
int3
and
outs
cmc
adc
pop
daa
rcr
jmp
adc
cdq
or
fistp
(bad)
cmp
or
cmp
test
add
xchg
maskmovq
imul
hlt
fidivr
jmp
cmp
jae
jge
sbb
addr16
iret
cmp
jl
add
(bad)
mov
daa
dec
cmps
inc
repz
cs
sbb
fist
fldpi
xor
fldenv
or
cmps
pusha
dec
push
add
mov
adc
pop
fdivr
xchg
jb
fnstcw
test
imul
xchg
sub
ins
popa
jp
mov
or
outs
cmps
mov
adc
cmp
(bad)
jmp
jg
bound
and
xchg
cmp
fimul
inc
dec
inc
xlat
pop
xchg
xchg
imul
add
(bad)
frstor
adc
imul
leave
add
jle
movs
xor
imul
sbb
call
leave
pop
mov
mov
dec
xlat
pop
sub
ja
sahf
jne
fwait
push
add
lods
push
arpl
or
stos
ret
add
mov
aad
xor
sub
(bad)
mov
enter
mov
pop
popf
sti
into
iret
cmps
jne
fistp
enter
int3
out
add
mov
inc
push
jecxz
inc
nop
bound
push
(bad)
fsub
mov
arpl
pop
and
pop
add
jmp
call
add
and
into
add
stos
jb
inc
push
fmul
mov
mov
out
pop
daa
popf
retf
add
(bad)
pop
add
jnp
out
cwde
and
int3
pop
xchg
rcr
fdivr
push
xchg
jecxz
cmp
movs
(bad)
cli
in
imul
js
push
push
outs
es
xor
movs
mov
mov
scas
leave
fld
retf
jmp
cmps
cwde
in
jmp
pop
int3
jl
fdivrp
mov
jb
pop
in
mov
stos
inc
ins
or
retf
mov
jge
into
scas
in
pop
adc
add
jnp
pop
or
loope
cmps
inc
cmp
sbb
mov
push
(bad)
push
cli
mov
lea
adc
push
jno
hlt
icebp
dec
nop
fwait
jno
cmp
adc
mov
xchg
and
mov
int
in
push
cmp
out
not
and
and
lahf
sti
xor
sub
mov
out
loopne
cmps
push
in
cwde
in
jg
push
mov
fsubp
js
movs
xor
sub
adc
stos
sub
aam
and
cmpxchg
repz
lods
sbb
enter
add
inc
add
xchg
int
in
push
popf
adc
add
adc
aaa
mov
dec
mov
in
cwde
out
mov
add
xor
scas
pop
stos
mov
(bad)
cmc
sub
out
xchg
ja
pop
sbb
mov
fucomip
mov
push
inc
addr16
mov
cmp
scas
addr16
dec
cmp
out
mov
std
and
pop
icebp
sbb
pop
fsub
pop
sub
shr
mov
subps
call
repnz
mul
xchg
mov
dec
add
ret
hlt
mov
daa
push
into
dec
pop
mov
and
cmp
sbb
xor
jnp
mov
sar
mov
bound
cli
or
stos
std
add
mov
mov
cld
inc
mov
and
repnz
jmp
scas
sub
lods
jge
xor
mov
icebp
sub
popa
mov
add
jle
push
fdivr
movs
icebp
pop
(bad)
mov
scas
fisubr
mov
sar
mov
sub
fs
mov
pop
mov
dec
mov
cmp
fld
js
jo
pop
push
pop
lods
jb
(bad)
push
mov
shl
or
jg
pop
mov
test
and
sub
push
jg
icebp
or
sbb
pop
cmps
sbb
and
inc
sbb
mov
shl
fisubr
push
or
fwait
dec
mov
ss
out
cs
and
add
fadd
mov
fs
mov
xlat
mov
mov
mov
xchg
push
cmc
add
cmp
cwde
mov
in
lods
jo
les
adc
add
int
mov
sbb
in
movs
js
outs
setns
call
xor
mov
xor
retf
cmp
push
stos
retfw
lds
or
popf
sbb
add
cmps
fwait
rcpps
enter
pop
cmps
jbe
cwde
mov
push
cmps
jo
cmps
and
sbb
push
jmp
popf
ins
jmp
inc
jp
and
pop
movs
push
aas
xor
outs
ins
test
jnp
data16
xor
in
jmp
dec
loopne
pop
movs
inc
or
jmp
jmp
mov
inc
mov
sbb
and
inc
rol
es
pop
xchg
cmp
xlat
fcom
daa
push
aam
mov
xchg
jecxz
sub
xchg
(bad)
enter
xchg
cmps
call
mov
sbb
fist
or
lods
cs
outs
or
fisub
cs
lea
add
xchg
fcomp
sub
add
xchg
dec
cmp
dec
jo
sub
and
icebp
dec
or
shr
or
je
sbb
lds
in
lea
mov
scas
shl
inc
movntq
jmp
xor
jg
push
lods
xchg
xor
jb
mov
ins
(bad)
mov
jmp
jmp
mov
push
add
jmp
aas
movs
pop
jg
push
adc
das
iret
push
inc
bound
or
inc
cmps
fdiv
jl
and
dec
lahf
icebp
addr16
push
imul
or
push
pop
rol
(bad)
retf
mov
int3
mov
shl
sahf
lods
je
aad
adc
xor
push
pop
dec
movs
add
scas
add
and
or
dec
inc
scas
add
addr16
mov
(bad)
cmp
aas
pop
lods
push
pop
test
mov
seto
stc
pop
push
shl
dec
es
ins
or
lea
les
pop
ror
imul
mov
cmp
mov
adc
arpl
sub
mov
data16
mov
add
shr
jo
jmp
xchg
dec
lods
xlat
leave
stc
cs
pop
gs
inc
inc
pop
jnp
adc
fisubr
inc
jno
in
push
or
cli
xchg
or
aam
cld
inc
ret
xchg
jo
stc
xor
sub
push
sahf
lods
(bad)
sub
mov
imul
fild
sti
mov
push
in
push
xchg
mov
or
mov
jle
xchg
int
mov
mov
inc
adc
ins
dec
or
push
cli
repz
cld
xchg
mov
int3
push
pop
mov
int3
fnstcw
int
push
fstp
sub
popf
add
jb
cmp
pop
pushf
cmc
cmps
fcomip
push
je
out
test
sti
dec
jmp
mov
pop
aas
cmp
setge
fimul
in
js
shr
loop
test
pop
mov
dec
ret
mov
call
sub
loope
ds
jp
and
neg
cmp
sbb
add
cmp
fnstenv
leave
mov
stos
add
movs
fstp
mov
push
pop
pop
sbb
outs
mov
leave
add
jg
pop
ret
retf
call
dec
push
out
push
fldcw
repz
dec
push
push
cdq
aaa
push
jg
lds
xor
or
jae
sbb
add
pop
fwait
and
rcl
inc
mov
inc
ss
out
call
dec
xor
in
call
xor
push
pop
pop
mov
cmps
popf
enter
leave
add
mov
jae
push
call
inc
xchg
out
pop
jnp
call
out
ja
mov
js
das
scas
(bad)
mov
sahf
movs
or
mov
dec
or
or
icebp
dec
imul
pop
shr
outs
cs
shl
dec
cmp
idiv
imul
xchg
test
bound
ret
adc
sub
fldcw
in
xchg
addr16
scas
push
pop
call
mov
in
and
lods
popf
in
movs
pop
std
push
jecxz
(bad)
or
neg
int
into
adc
xchg
rcl
push
and
and
fisttp
es
xor
stos
add
int3
nop
(bad)
xchg
ins
fild
mov
push
je
pushf
nop
jae
sbb
dec
push
je
pop
pop
or
and
repnz
fbld
pop
mov
fucomip
mov
sub
mov
jg
jmp
jecxz
xor
repz
call
neg
push
hlt
adc
jno
aad
fsubr
sub
fsubr
das
sbb
or
pushf
push
dec
cmp
cmps
fdivrp
jge
lds
push
out
mov
xchg
mov
sbb
inc
push
pop
jne
ins
pop
out
sbb
(bad)
imul
call
js
sub
push
cmp
fld
ret
pop
or
iret
mov
js
ss
mov
dec
sub
pop
cmp
mov
cmc
stc
mov
rcl
iret
fadd
dec
cmp
inc
or
test
mov
dec
mov
iret
pop
and
push
(bad)
nop
cmp
lock
faddp
cmp
loope
nop
sub
and
adc
xlat
arpl
je
xor
aad
mov
popa
frstor
int3
ins
xchg
mov
push
or
pop
inc
mov
dec
adc
aas
add
repnz
dec
fadd
sti
enter
xchg
push
lods
cmp
cmp
mov
(bad)
in
mov
and
sbb
js
cmc
lods
mov
jle
jg
lahf
sbb
inc
jle
inc
das
cmps
ret
(bad)
add
and
out
push
popa
pop
mov
pop
xlat
cmp
pop
mov
xchg
pop
retf
sbb
sub
mov
xchg
add
icebp
pop
and
int
cmp
add
push
les
inc
fsub
sub
outs
les
pusha
xchg
xchg
inc
mov
jl
xor
aad
and
adc
imul
sub
cmp
jge
mov
mov
data16
sub
ins
popa
adc
xchg
or
jnp
lods
dec
or
into
sbb
or
mov
adc
sub
pop
and
aad
pop
sbb
xor
xchg
test
add
push
pop
popf
push
jo
mov
fdiv
lods
cwde
cld
je
or
sti
sahf
sbb
in
pop
outs
fsubrp
test
and
push
sbb
rcr
cli
movs
scas
out
and
loopne
stos
mov
enter
loope
mov
dec
pop
xor
inc
shr
ficom
or
movs
adc
popf
mov
jmp
lods
push
dec
(bad)
rcr
stos
mov
pop
shr
mov
data16
cmp
int
push
cmc
xor
rol
mov
inc
(bad)
mov
jp
jge
dec
cwde
movs
arpl
lods
cmp
jbe
push
cli
cmp
jnp
jne
jno
adc
outs
(bad)
jle
scas
jmp
into
fdiv
jbe
or
mov
dec
fisubr
mov
add
xchg
not
data16
rcr
sub
mov
xchg
test
add
xor
pushf
mov
imul
cmc
sbb
loopne
in
and
mov
retf
xlat
xchg
inc
cmp
test
jb
push
push
xchg
ja
nop
adc
retf
push
adc
and
out
adc
push
mov
loop
mov
xor
rol
cmp
add
jp
mov
loop
pop
adc
clc
out
mov
xlat
scas
hlt
gs
cmp
adc
dec
pop
dec
jl
ficomp
push
aam
pop
je
sbb
retf
out
ss
cmp
fbld
ss
lahf
lods
repnz
scas
pusha
retf
clc
xchg
xchg
xlat
adc
aad
fistp
add
adc
popa
jb
push
adc
push
out
(bad)
and
cwde
out
xor
sbb
adc
adc
int3
inc
mov
jp
pop
stos
and
test
xlat
movs
mov
movs
cmc
jae
push
repz
cs
pop
int3
sbb
test
push
jp
add
(bad)
fbstp
cmps
aaa
adc
aas
adc
addr16
clc
cwde
retf
push
push
enter
cmp
fcom
sbb
movs
(bad)
push
stos
shl
sub
jecxz
in
and
outs
push
pusha
gs
sbb
inc
lahf
popf
push
and
jl
popf
mov
lock
loop
xchg
clc
xchg
retf
mov
jmp
imul
(bad)
pop
or
sub
ror
cmp
fcmovu
cld
sahf
push
fs
mov
mov
out
repnz
cmp
(bad)
xor
pop
mov
ds
arpl
mov
mov
jnp
add
xchg
aad
addr16
xchg
mov
in
shl
shl
scas
fcom
(bad)
xchg
sub
xchg
jmp
repnz
xor
stos
adc
jge
(bad)
ror
adc
xchg
dec
jmp
mov
in
sub
sbb
sahf
sub
ss
addr16
sbb
gs
add
cmp
adc
rcr
mov
cmc
adc
shl
or
into
addr16
test
adc
and
sub
hlt
ja
inc
sub
out
add
stos
cmps
pop
ja
jb
dec
pushf
outs
fisttp
push
int3
push
mov
into
fs
int3
repnz
dec
jmp
cmps
cmp
in
ficomp
cwde
inc
lods
mov
fst
xchg
pop
fst
xchg
xchg
xor
(bad)
aas
adc
imul
or
inc
ror
dec
xchg
pop
loope
dec
push
pop
imul
mov
jmp
mov
popa
fisttp
into
outs
sub
inc
sti
hlt
add
xchg
mov
pop
shl
addr16
clc
adc
sahf
outs
or
(bad)
sbb
test
mov
repz
out
mul
fisub
imul
jg
outs
les
xchg
inc
(bad)
sub
(bad)
stos
sub
aaa
retf
jne
rol
sar
mov
jmp
data16
push
pop
jno
in
(bad)
sahf
out
inc
jge
sub
out
(bad)
ret
bound
sbb
sbb
aam
hlt
mov
in
inc
(bad)
enter
ret
mov
cdq
icebp
jg
add
clc
push
mov
add
shl
test
mov
repz
and
pop
(bad)
arpl
mov
fwait
loopne
popa
xchg
or
dec
cdq
xor
xor
adc
mov
mov
mov
inc
and
inc
mov
xor
pop
cmp
sub
pop
inc
aas
mov
std
gs
ret
and
in
mov
stos
xor
or
fisttp
inc
inc
pop
not
mov
sub
jmp
push
movd
lds
fnsave
push
sub
int
xchg
leave
imul
xor
fwait
cmp
mov
test
xchg
maxps
pop
or
call
popf
sub
dec
push
dec
mov
cld
push
gs
or
push
xor
or
push
dec
ja
dec
adc
xor
sub
jo
cwde
lea
in
sub
xchg
xor
and
inc
popa
inc
mov
xlat
int3
mov
je
icebp
movs
lea
or
push
pop
mov
sbb
or
inc
je
push
mov
int
jp
mov
pop
mov
cmps
imul
das
mov
mov
sub
mov
cwde
adc
xchg
pop
mov
mov
mov
addr16
and
(bad)
test
hlt
pop
and
mov
ss
shl
push
scas
pop
call
xor
inc
out
daa
sub
jg
lea
rcr
imul
add
out
sub
mov
jne
push
std
push
mul
mov
mov
sub
(bad)
pop
enter
jp
cs
dec
and
stc
and
ss
pop
or
mov
fadd
cmp
jne
out
mov
push
(bad)
cmc
add
fistp
clc
mov
ret
mov
out
out
mov
mov
ror
fcom
imul
les
jo
(bad)
retf
push
or
stos
and
inc
mov
inc
push
pop
aas
loope
xchg
das
scas
adc
fisub
lea
push
xchg
or
ret
aad
sbb
pop
mov
shr
inc
out
push
stos
outs
sbb
push
mov
shr
adc
add
test
retf
ins
and
inc
ret
mov
test
daa
fs
inc
push
ret
inc
int3
gs
cmp
xor
pusha
cdq
pop
loopne
loop
adc
clc
pop
lods
cld
jmp
movs
push
sbb
dec
mov
add
pop
cmps
dec
gs
add
xchg
jnp
hlt
inc
cmps
push
mov
and
movs
add
push
xchg
fs
scas
push
repz
stos
gs
sub
and
cmps
add
dec
jle
fwait
sub
mov
push
fmul
inc
xchg
sbb
add
ins
mov
pop
aaa
inc
jecxz
pop
xor
jmp
xor
aad
test
fcom
rcl
(bad)
adc
or
imul
dec
ins
xor
(bad)
ret
sbb
xchg
jp
push
and
pop
adc
ins
push
push
fmul
xchg
cwde
ss
push
sub
loope
fs
out
adc
cmp
inc
cmp
and
adc
das
test
add
mov
and
mov
jmp
enter
jp
sbb
enter
repnz
push
jl
aaa
retfw
cld
jns
shl
add
inc
adc
aam
or
or
std
sar
xor
mov
loope
es
jge
dec
ins
test
shl
cmp
fidiv
xchg
sar
or
mov
cmps
ins
in
pop
nop
add
ret
adc
sar
loopne
push
js
popa
(bad)
(bad)
call
sbb
jp
movs
add
leave
scas
sbb
cmp
mov
(bad)
push
(bad)
or
push
pop
out
dec
cli
jmp
jmp
icebp
push
out
sbb
add
fisub
mov
mov
fmul
popa
aam
lahf
add
cmp
mov
xor
xchg
sub
in
jno
fld
cmp
test
xchg
out
dec
xchg
sbb
jmp
sahf
or
inc
and
psubusw
sbb
fist
and
mov
pop
mov
sbb
gs
lahf
sbb
ffreep
xchg
push
popa
sub
repnz
je
popa
loop
movs
dec
pop
les
adc
xor
xchg
es
pop
out
std
(bad)
jbe
push
jmp
push
mov
pop
stos
icebp
xor
add
jae
sub
pop
inc
sbb
lahf
sub
cmp
sbb
repnz
and
outs
mov
out
dec
out
sub
xor
fcomp
test
cmps
rol
pusha
pop
xchg
das
(bad)
mov
xchg
jp
mov
add
jecxz
out
in
pop
in
sub
call
sahf
mov
int
sbb
aam
add
ins
outs
and
ja
push
inc
dec
sub
pop
mov
bound
ffree
inc
das
and
cld
push
cmc
ret
jmp
xor
mov
sti
mov
sbb
mov
sahf
jno
jbe
or
xchg
xor
mov
sti
mov
mov
sub
xor
jo
lahf
or
push
push
adc
pop
sahf
std
inc
fld
adc
or
add
mov
inc
neg
mov
dec
test
pushf
retf
dec
or
popf
aam
cwde
sbb
rol
mov
iret
push
ds
fwait
jge
repz
cld
xor
fiadd
pop
pop
jno
jno
push
sbb
adc
test
mov
lds
cdq
jo
pusha
scas
jno
cmp
sub
or
add
add
mov
sbb
in
leave
repz
jl
jmp
mov
inc
test
mov
neg
mov
inc
call
test
iret
and
xor
fdiv
jecxz
ret
sub
(bad)
jg
mov
jno
push
sbb
mov
cmp
xchg
xchg
mov
lock
jecxz
or
lea
mov
in
out
ret
shl
popa
mov
aaa
sub
out
scas
out
jmp
or
xchg
bound
push
jnp
test
(bad)
std
sub
movs
mov
and
jl
mov
lea
cli
xchg
adc
fiadd
fmulp
test
mov
ret
jmp
mov
xor
pushf
les
or
mov
jb
loope
sbb
cmps
jl
add
cmp
push
hlt
fnstcw
fild
pop
mov
sub
mov
push
das
fistp
fld
call
rol
out
hlt
xor
add
xor
jmp
(bad)
not
ds
lock
movs
or
cmp
in
std
jb
les
dec
cmp
cmp
rcr
pop
add
sti
out
xchg
data16
dec
adc
add
or
in
or
dec
xchg
xchg
add
add
test
ret
pop
nop
or
shr
les
fstp
mov
test
xchg
pop
cs
addr16
jge
sub
outs
and
or
movs
imul
mov
sub
pop
cli
fcomp
ins
jns
jne
add
inc
adc
sub
loope
imul
pop
sub
outs
(bad)
shl
cdq
mov
dec
xor
adc
xor
mov
iret
ror
jecxz
iret
mov
adc
inc
mov
mov
fmul
test
hlt
test
imul
push
mov
je
pop
xor
rol
dec
sub
test
sub
sbb
cwde
adc
ret
pop
jns
shr
push
cli
lds
loope
cmp
(bad)
pop
test
stc
sahf
inc
rcr
push
(bad)
push
or
in
ja
fst
sbb
in
mov
sub
jp
out
and
(bad)
repz
out
fst
add
lea
add
xor
pop
cmp
js
fidivr
out
adc
add
xchg
inc
pop
cmp
mov
mov
mov
enter
outs
jnp
movs
adc
pop
ds
jl
test
lea
nop
repnz
fcom
scas
imul
push
mov
add
mov
int
dec
inc
xlat
jo
ret
sbb
lahf
das
lock
jnp
add
daa
cmp
je
ficom
mov
test
ficomp
jne
add
inc
pop
hlt
mov
pop
(bad)
ss
lahf
or
inc
cld
xor
pop
mov
xchg
push
test
stos
fidivr
test
xor
mov
ins
gs
xor
sahf
cmps
popa
(bad)
cmps
add
pop
jmp
inc
cdq
add
das
cmp
xchg
inc
mov
pop
les
cmp
jge
inc
lock
pop
popa
pop
xor
iret
gs
sub
cmp
icebp
cli
in
repz
dec
stos
scas
nop
ficom
mov
fsub
pushf
push
push
out
xor
mov
fst
dec
call
ret
je
push
out
xchg
test
xchg
test
mov
xchg
stos
mov
ss
dec
in
lods
mov
push
sti
in
jbe
(bad)
ss
outs
mov
inc
mov
icebp
mov
cs
push
xor
rcr
xchg
and
and
addr16
mov
fisttp
mov
fidiv
imul
fisttp
add
mov
sub
or
push
sbb
inc
mov
adc
inc
sub
nop
pop
call
sub
js
mov
push
mov
jmp
add
not
sub
dec
sub
sub
dec
pop
sub
sub
je
add
fsubr
mov
push
stc
jnp
push
lea
inc
movs
mov
inc
data16
jnp
mov
ja
outs
call
inc
aaa
sbb
mov
lahf
repz
aaa
jl
into
movs
rcr
(bad)
mov
and
lea
xor
fidiv
out
xchg
sar
jne
pop
ins
pop
lea
mov
and
xor
ins
call
xchg
add
idiv
mov
rol
mov
adc
sbb
xor
push
fnstenv
je
xchg
out
movs
mov
cdq
sti
mov
pop
inc
pusha
sti
clc
or
shr
jbe
rcl
inc
mov
(bad)
pop
rol
or
push
cmp
mov
and
out
mov
and
xchg
js
sbb
pmuludq
or
sbb
sahf
retf
inc
pop
jmp
retf
call
mov
and
das
mov
cdq
neg
mov
rcl
(bad)
jl
mov
xchg
xchg
xor
addr16
add
add
retf
jae
ds
jge
cdq
sbb
cmps
xor
push
hlt
cmovl
xchg
movs
dec
mov
cmp
aad
mov
lods
pop
(bad)
pop
fcmove
leave
scas
cmps
fs
lds
inc
ret
stos
jmp
inc
into
ds
or
les
push
inc
add
adc
mov
outs
mov
xchg
int
(bad)
sbb
mov
retf
shr
xor
ss
adc
addr16
(bad)
mov
and
ror
jbe
pop
adc
pop
sub
stos
into
push
push
in
mov
js
bound
dec
xor
dec
rcl
aaa
pop
out
mov
movs
dec
xchg
ins
jnp
mov
in
cmp
(bad)
jle
pop
(bad)
jae
cmp
aam
xor
jecxz
jns
ins
pushf
mov
(bad)
ffreep
ss
test
nop
add
jp
push
dec
push
add
lock
mov
dec
xor
pop
and
mov
mov
cld
pop
test
lds
inc
ds
and
jnp
retf
ror
seta
icebp
fidiv
out
sti
or
jne
leave
and
jle
or
push
cmp
out
stc
and
xchg
inc
neg
sbb
add
loope
pop
out
cmp
xchg
push
in
fld
leave
test
pop
xchg
mov
retf
push
cmps
or
out
aas
sub
or
dec
adc
sbb
out
out
popa
call
lock
cmps
push
mov
jne
and
imul
lds
jle
(bad)
add
push
adc
(bad)
mov
dec
shl
lds
mov
out
dec
cdq
sbb
push
scas
dec
sbb
stc
fwait
pop
popf
push
sti
(bad)
sbb
push
add
mov
mov
jnp
push
mov
xchg
and
pop
popf
cmp
mov
mov
inc
ins
cmps
clc
push
dec
gs
int3
mov
pusha
aad
mov
aam
mov
inc
fs
xor
and
lea
or
xor
adc
inc
enter
or
mov
cmp
jmp
add
(bad)
and
pop
push
pop
cs
jle
and
ret
js
imul
jle
fld
sub
retf
mov
sbb
sbb
ficomp
push
aam
pushf
fwait
sti
xchg
add
sub
mov
jge
in
out
push
jg
sbb
mov
cmc
in
jecxz
clc
popa
out
sti
cmps
mov
inc
ins
add
cmps
das
cmc
push
sbb
xchg
repz
sbb
ficom
(bad)
es
xchg
sub
and
retf
cmps
sub
xor
retf
cmps
jge
push
lods
add
in
imul
mov
push
dec
test
sub
mov
mov
aam
sbb
ins
sub
test
retf
jbe
or
mov
iret
test
outs
sbb
aaa
test
mov
sub
inc
and
outs
dec
push
or
inc
jns
xor
xor
lods
push
js
enter
(bad)
je
pop
cmp
jne
push
jecxz
icebp
sub
test
cmp
fistp
gs
add
mov
inc
repnz
das
into
mov
in
jmp
(bad)
and
mov
lea
sar
jb
ret
fld
mov
cli
inc
jb
and
dec
jno
jno
mov
jbe
mov
mov
pop
enter
arpl
or
fimul
pop
sub
fisubr
int3
sbb
mov
xor
test
jge
out
loop
in
and
(bad)
stc
sub
push
lods
dec
push
dec
xchg
adc
mov
lock
fcmovb
in
mov
clc
outs
xor
and
mov
or
cmc
xchg
dec
hlt
jns
inc
outs
add
fild
mov
in
out
mov
out
sbb
and
mov
(bad)
jle
sbb
iret
cmps
addr16
xor
ins
ds
xor
pop
mov
and
ds
adc
jmp
cs
dec
mov
xor
daa
mov
adc
ins
lods
int
jge
mov
push
and
sbb
in
test
aad
stos
add
push
mov
push
hlt
or
and
jb
jge
ins
push
fld
repz
and
sbb
cdq
xlat
jp
xchg
jne
stc
daa
sar
mov
loopne
sub
into
add
jo
aad
adc
jl
sbb
push
mov
call
cmp
(bad)
imul
mov
sbb
leave
loope
xor
daa
push
test
pop
fdiv
loop
push
add
mov
call
or
int3
mov
retf
les
je
xchg
mov
(bad)
jmp
sbb
cmp
fsub
inc
test
jmp
dec
or
lahf
imul
arpl
cmc
lods
mov
fsubr
dec
(bad)
cmc
and
in
call
sbb
xor
ds
cdq
add
cmc
stc
repz
ja
icebp
in
fidivr
out
sar
push
xor
cmp
cmc
push
cli
pop
xchg
adc
pusha
iret
movs
cmp
mov
(bad)
mov
ret
stos
lods
leave
movs
imul
push
xlat
adc
xchg
aad
mov
ins
xchg
lods
inc
popa
xor
ss
test
stc
ins
sti
fcmovu
ret
(bad)
int3
sub
scas
gs
out
out
dec
lods
cmp
mov
popf
enter
rcr
(bad)
cld
jl
inc
mov
push
sbb
inc
aas
loope
xor
pusha
mov
mov
in
aaa
outs
popf
gs
and
adc
(bad)
sahf
and
jbe
gs
mov
popa
dec
mov
dec
mov
jbe
xchg
stc
sbb
in
xchg
pop
arpl
cld
push
(bad)
cmp
or
mov
iret
jmp
loop
dec
push
push
in
enter
pop
fwait
inc
inc
xor
stc
ret
add
xor
adc
cmp
dec
fdivr
fst
dec
cmp
adc
jnp
aam
(bad)
push
add
ds
in
mov
stos
push
sahf
call
cmp
adc
lea
aam
add
hlt
add
adc
jo
pop
push
out
nop
dec
movs
sub
test
adc
test
call
fcmovb
mov
push
enter
add
push
mov
push
(bad)
lock
mov
ins
test
repz
test
ja
cmp
imul
mov
aad
and
sbb
or
or
cmp
jmp
gs
out
hlt
xchg
mov
cmp
sub
out
imul
pop
sbb
adc
and
sub
arpl
or
jp
mov
push
and
das
jne
mov
jae
mov
daa
mov
cld
jns
xchg
push
mov
cmc
mov
cmps
or
cmp
out
fisttp
jmp
add
icebp
xor
(bad)
test
retf
aas
cdq
jmp
inc
push
mov
pushf
imul
xor
cmc
loop
leave
pop
mov
inc
xchg
dec
push
mov
mov
mov
pop
and
sti
add
retf
call
ins
sub
adc
int3
push
xchg
stos
ret
jl
push
dec
mov
pop
in
bnd
lods
sbb
sbb
pop
pop
lahf
inc
cwde
adc
call
mov
cmp
jmp
mov
mov
(bad)
sub
mul
test
xchg
js
test
and
jecxz
pusha
dec
leave
addr16
sbb
jb
and
mov
ins
pop
inc
jl
or
xor
movs
call
scas
sub
push
ret
(bad)
ficomp
mov
push
mov
xor
stos
adc
stos
dec
jne
mov
jnp
cld
push
dec
jmp
popa
cmp
xchg
fld
mov
test
fs
popa
leave
xchg
jnp
retf
pop
repnz
or
aam
loopne
inc
mov
fs
movs
xchg
je
sub
mov
mov
(bad)
stos
int3
inc
sbb
mov
dec
addr16
ficom
inc
outs
jb
cmp
sub
mov
lea
mov
and
in
and
jns
fiadd
aam
push
cmc
xor
or
mov
shl
mov
mov
dec
jb
repz
jb
mov
and
or
inc
pop
les
jmp
fld
cmp
sub
call
sbb
xchg
mov
adc
imul
std
imul
cmps
test
iret
out
imul
xchg
and
call
xor
pop
jge
sbb
adc
pop
mov
sub
ds
sub
sub
iret
sub
push
inc
adc
iret
push
fadd
daa
xor
arpl
fs
je
adc
push
fwait
call
je
mov
and
int3
add
mov
jns
pop
sbb
cmp
and
in
cmp
outs
movs
fsub
lods
nop
imul
push
jne
jl
xchg
fcom
xchg
xor
pop
jb
cs
in
cli
ins
(bad)
test
sub
or
adc
hlt
adc
cwde
ret
enter
imul
xchg
(bad)
(bad)
pop
lods
arpl
push
xchg
and
or
les
mov
out
pop
fidivr
xlat
daa
jbe
cmc
scas
enter
dec
lea
inc
sub
mov
inc
push
adc
leave
dec
pop
pop
test
mov
dec
mov
popf
cs
pop
loop
(bad)
cmc
setl
adc
mov
out
scas
xlat
or
xor
cwde
pop
rol
mov
dec
rcr
xor
fild
into
clc
push
mov
in
jmp
or
idiv
in
mov
lods
dec
js
push
inc
(bad)
iret
fistp
sar
cmp
repnz
and
movs
mov
lods
mov
jge
cmp
loope
mov
jecxz
jbe
xor
xor
leave
xor
not
add
and
out
jmp
jle
xor
pop
shl
ds
sub
rcr
cdq
mov
add
jge
mov
(bad)
je
push
inc
retf
fiadd
not
mov
stc
repnz
add
dec
inc
jmp
call
aam
mov
lahf
xor
dec
xchg
xchg
aam
jnp
sub
or
push
jnp
ins
cld
lock
push
call
adc
sahf
lods
mov
retf
test
adc
xor
enter
push
gs
dec
push
std
div
add
outs
inc
clc
cmps
mov
aaa
cmp
cmps
xor
imul
mov
xchg
aaa
ins
adc
test
fnstcw
gs
xchg
daa
pop
mov
xchg
sar
add
push
loope
pop
sbb
movs
shr
outs
retf
lods
(bad)
push
shl
mov
dec
repz
(bad)
ds
pop
xor
les
push
or
xor
mov
mov
inc
xchg
push
pop
inc
div
repnz
xor
out
sbb
jp
test
int
and
xchg
push
inc
(bad)
jl
mov
mov
sub
jmp
call
pop
fdiv
pop
retf
mov
scas
div
sbb
dec
xchg
mov
push
sbb
stos
retf
ins
add
mov
lock
and
or
ins
jle
push
jnp
std
sar
shr
cmp
add
cmp
xchg
dec
cmp
pop
jecxz
imul
stos
sbb
jecxz
jo
push
mov
xor
movs
mov
out
mov
add
jg
and
mov
sub
repnz
movaps
cld
jg
popa
or
imul
add
repz
out
mov
mov
fucomp
push
popa
xchg
gs
inc
and
dec
pushf
cmc
cmp
idiv
inc
mov
dec
dec
mov
inc
sub
jo
add
out
out
imul
pop
pop
and
pop
mov
pop
retf
xor
(bad)
cwde
cmps
ins
sub
or
inc
outs
scas
ffreep
adc
out
test
add
ret
mov
push
ss
lods
outs
pop
push
jmp
ins
ret
sbb
mov
outs
mov
shr
rcr
outs
jl
inc
adc
push
fidivr
xchg
push
inc
jae
inc
(bad)
pusha
data16
fld
adc
daa
mov
enter
enter
jmp
aaa
mov
or
and
add
jmp
xor
dec
cmp
push
or
push
lods
aas
dec
ret
lods
adc
(bad)
and
push
loop
jg
pop
pavgb
jmp
add
dec
pop
popa
jmp
jne
ja
(bad)
cmps
fisub
inc
inc
xor
sbb
test
sti
ret
imul
and
mov
mov
int
mov
push
add
and
fisttp
cmp
rcl
repz
daa
idiv
je
mov
xchg
leave
ins
mov
mov
repz
xchg
push
jge
iret
bound
repnz
adc
or
test
ins
icebp
push
and
inc
sbb
pop
arpl
arpl
ins
scas
in
icebp
in
push
sahf
sub
into
std
pop
sub
(bad)
mov
sbb
repz
adc
mov
(bad)
mov
mov
jmp
xrelease
fcomp
sbb
fwait
mov
cmps
inc
mov
cmc
repnz
xor
cmp
(bad)
mov
daa
js
pop
test
lds
or
cmp
push
out
sub
mov
jmp
ret
and
inc
lea
and
fs
retf
mov
jl
jno
lea
ins
push
ret
push
adc
jno
stos
pop
ficomp
or
test
and
mov
inc
or
and
movs
int3
sbb
xor
jmp
mov
pushf
mov
xchg
inc
dec
and
mov
sub
dec
push
adc
popf
xchg
and
inc
push
jns
sahf
pop
ins
hlt
aaa
lds
cmp
pop
push
pop
adc
(bad)
adc
cdq
repz
ins
and
lea
aad
(bad)
stos
sbb
mov
lea
dec
pop
add
rcl
aas
push
and
xor
movs
in
shl
std
jmp
popa
clc
dec
dec
scas
sub
jge
ret
xchg
jne
les
ins
repz
xchg
pop
sti
rcr
dec
iret
mov
pusha
and
movs
cmps
lods
and
pop
jnp
lock
fwait
and
retf
pop
and
je
and
ficomp
inc
fucomip
sub
ficom
lods
mov
out
push
jns
push
push
fisubr
mov
and
and
mov
out
je
fisubr
test
test
jg
mov
inc
loop
jbe
jmp
cmc
adc
jmp
imul
jp
push
cs
cmp
xchg
scas
mov
les
jmp
out
div
or
xchg
adc
popf
call
daa
(bad)
mov
push
mov
dec
inc
minps
ror
mov
and
int3
mov
dec
or
mov
sub
mov
add
movs
xchg
repnz
not
and
test
pop
jmp
(bad)
ins
pop
adc
sub
retf
pop
and
shl
add
dec
add
sub
mov
inc
jp
loope
inc
stos
ds
push
test
icebp
in
mov
rcr
sbb
pop
data16
pusha
sbb
pop
mov
adc
test
xor
sub
frstor
mov
jg
ins
test
dec
jmp
lods
retf
in
imul
xchg
scas
sbb
fisub
inc
xor
mov
xchg
dec
aad
adc
mul
pop
xchg
fnsave
mov
pushf
imul
mov
pushf
faddp
daa
jmp
pop
add
movs
dec
push
int
jo
arpl
gs
inc
fbstp
rol
call
inc
test
and
outs
rcl
push
adc
imul
rcr
cli
add
inc
jmp
scas
(bad)
cmp
lods
repz
and
or
mov
fistp
xor
inc
sub
push
test
mov
in
sbb
sbb
and
rol
cmp
inc
sub
mov
es
dec
daa
mov
pop
sbb
adc
in
fmul
and
neg
inc
mov
dec
pop
ret
cld
imul
add
imul
pop
popa
xor
loop
and
mov
add
mov
sar
xchg
aas
pop
dec
pusha
sbb
mov
int3
xchg
sbb
xchg
sbb
mov
arpl
add
push
dec
sbb
mov
cmp
inc
mov
push
push
mov
mov
jp
bound
mov
add
sbb
ret
das
sbb
(bad)
xchg
cmp
jns
cmp
(bad)
ret
inc
xchg
(bad)
jne
js
mov
aad
jb
jnp
outs
cmps
fcomi
xlat
jbe
test
xchg
push
mov
lds
pop
out
inc
in
mov
std
jae
push
mov
daa
jbe
xor
cmps
test
inc
lods
mov
dec
outs
and
jnp
push
mov
imul
inc
xchg
and
mov
sbb
sahf
sub
jmp
lea
call
(bad)
iret
cwde
nop
xchg
sub
push
aam
mov
loopne
sbb
add
ret
pop
sar
mov
imul
rol
inc
jo
out
mov
out
test
out
ss
aad
inc
jge
stos
cmp
inc
adc
xchg
or
iret
mov
lods
xor
sbb
icebp
lock
cdq
fs
cmps
lods
outs
sub
jbe
int3
xor
pop
jp
jle
out
cmp
sub
pop
cld
sahf
mov
cmp
cmp
adc
cmp
xchg
adc
and
xchg
mov
xchg
outs
mov
push
jg
lea
jle
in
loop
cs
call
iret
sar
push
pop
cmps
mov
aas
add
push
and
cdq
out
lods
loop
retf
sti
(bad)
in
fsub
hlt
cwde
mov
pop
lods
or
shr
cmps
adc
icebp
ss
sub
jl
cs
fwait
cmp
push
data16
aam
push
aam
push
(bad)
adc
sbb
dec
jb
xchg
shl
adc
(bad)
mov
sub
or
mov
mov
fnsave
push
ja
call
push
shr
push
add
jge
fidiv
jge
mov
xchg
dec
cld
sub
jno
sub
fwait
mov
pop
shl
lahf
xchg
sti
je
lock
call
nop
int
or
xchg
call
xor
fsub
stc
or
test
xchg
test
fs
pusha
neg
cmp
mov
cwde
neg
mov
and
lea
in
sahf
xchg
pop
or
enter
inc
loop
in
mov
xchg
sti
or
stc
pop
cmp
cdq
jno
add
mov
xor
clc
not
or
dec
cmp
and
pop
daa
add
or
jmp
stos
and
movs
(bad)
stos
loopne
inc
in
xor
lahf
jge
in
cmp
pop
sub
dec
fisubr
mov
xor
and
cmp
sbb
sub
cwde
sub
shr
fwait
ja
cmps
cld
retf
sti
sub
mov
adc
repz
inc
cdq
outs
cmp
push
xchg
sub
call
es
imul
push
ss
lds
fisttp
jae
inc
pushf
sbb
imul
xchg
fwait
mov
add
push
fidivr
xchg
fs
paddusw
pop
xchg
dec
or
jge
sti
add
std
cwde
in
fnstsw
inc
in
sub
push
pop
dec
xchg
movs
ret
lea
sbb
sbb
pusha
(bad)
rol
test
cld
dec
jge
enter
lods
nop
dec
pop
push
xchg
pop
retf
push
jmp
sahf
jns
xchg
lds
mov
icebp
rcl
ds
pop
pop
loop
jmp
dec
adc
xor
out
ficomp
aaa
dec
jg
ror
dec
sbb
push
mov
sbb
adc
mov
pop
jg
clc
mov
pop
jb
pop
lods
sub
xchg
data16
mov
adc
xor
sar
jmp
xchg
mov
sbb
call
ds
sub
pop
inc
mov
push
sub
and
imul
xor
movs
mov
xchg
sub
lds
fiadd
xor
out
imul
rcr
test
mov
and
xor
ret
xchg
ins
pop
inc
mov
outs
popf
icebp
hlt
xor
push
pop
jmp
cmp
add
or
jbe
cmps
ud2
stos
pusha
add
push
icebp
push
cmp
ror
xor
jb
jae
mov
adc
cmp
je
pop
push
or
adc
enter
jp
jb
add
stos
mov
movs
and
jle
mov
ins
scas
sahf
fst
es
popf
stos
mov
mov
cmps
inc
and
imul
movs
stc
sub
in
and
test
xor
cdq
mov
aaa
lahf
xor
push
or
pop
hlt
aad
jnp
repnz
(bad)
and
loope
inc
(bad)
push
aad
scas
sbb
and
gs
(bad)
mov
daa
pop
or
and
mov
retf
pop
mov
int3
mov
or
popa
stc
inc
push
mov
jne
pop
mov
jecxz
jg
mov
mov
(bad)
sbb
add
sbb
mov
fiadd
sbb
xor
adc
pop
in
nop
mov
mov
cs
pop
mov
sub
add
inc
test
mov
cli
in
jb
mov
xlat
dec
xchg
sbb
sbb
pop
adc
xchg
mov
sub
push
jns
jnp
sahf
in
sbb
dec
pop
arpl
mov
xor
push
addr16
sub
ror
repz
xchg
out
inc
jle
push
test
sbb
hlt
jmp
call
out
fidivr
jle
scas
inc
lahf
mov
xor
ins
sbb
sub
ss
pop
enter
cmp
sbb
mov
pop
dec
xchg
jne
add
cli
pop
pushf
mov
pop
cmp
xchg
bound
shl
mov
call
adc
mov
sub
jne
(bad)
mov
add
pop
xor
clc
cld
retf
xchg
pushf
leave
mov
add
(bad)
into
sub
rol
and
pop
enter
cmc
xor
ss
outs
retf
dec
mov
je
or
movs
in
mov
ins
mov
sbb
out
or
xlat
lea
mov
sub
movs
cmp
outs
add
sbb
mov
mov
push
lds
fimul
dec
mov
cmp
(bad)
popa
jno
movs
push
mov
add
pop
pop
or
cwde
xor
jne
ficom
movs
jle
gs
push
and
sub
xchg
div
stos
or
jp
mov
inc
mov
add
jne
cmp
mov
pop
inc
push
in
test
mov
retf
adc
inc
dec
cmp
in
or
sbb
push
dec
(bad)
pusha
xchg
jbe
cmp
dec
and
push
je
neg
sbb
mov
cmps
out
xchg
dec
ret
clc
cmp
in
jns
jmp
gs
sub
popa
stos
push
movs
in
call
xchg
push
jle
adc
jg
cmp
lar
cmc
fcmovnb
pop
bound
mov
pop
sub
imul
(bad)
push
jmp
(bad)
add
xlat
or
sub
ret
mov
mov
jns
xchg
out
cmp
repz
out
ffree
test
and
and
aad
cmps
push
scas
pop
jb
scas
repnz
repz
cmp
jbe
push
jne
clc
lahf
idiv
sbb
xchg
fnsave
test
sub
fwait
inc
or
aad
outs
dec
xchg
pop
outs
(bad)
sub
push
mov
movs
psubsw
imul
mov
stc
jp
sti
pop
and
test
mov
ds
pop
sar
lea
dec
repnz
nop
lds
into
js
pushf
pop
adc
outs
pop
add
mov
push
dec
in
push
int3
nop
div
inc
sets
retf
or
push
shr
push
push
xchg
cmp
adc
push
push
pop
ins
xor
cmp
xchg
loopne
jb
inc
ficom
les
jmp
inc
cld
pop
or
mov
push
movs
sub
dec
outs
mov
jl
dec
imul
and
test
data16
xchg
add
sbb
(bad)
xlat
jp
scas
fndisi(8087
fidivr
das
hlt
add
and
mov
aaa
pop
test
bound
mov
mov
stos
xor
cmp
add
test
cs
cs
mov
dec
bound
mov
pusha
(bad)
push
stos
movs
outs
push
sbb
sbb
fld
pop
movs
jne
test
mov
loop
and
into
data16
push
dec
jl
mov
sbb
pop
or
mov
fbstp
mov
sbb
gs
jg
sti
ja
mov
test
and
call
inc
call
cmp
(bad)
aam
xor
call
clc
in
xor
jg
pop
mov
dec
lds
xchg
inc
pop
rcl
into
dec
int3
mov
pop
sub
jbe
and
xchg
addr16
(bad)
clc
in
xchg
sub
jl
iret
outs
add
(bad)
adc
adc
cmp
jne
adc
push
ret
rcr
adc
in
lock
adc
(bad)
adc
addr16
adc
into
movs
aam
sbb
and
rol
mov
out
nop
mov
les
jmp
enter
cmp
mov
rcr
xchg
sbb
jnp
or
sub
xor
mov
and
int
fimul
iret
in
pop
jmp
outs
mov
xchg
adc
out
call
movs
fcom
sub
mov
mov
sub
enter
dec
xor
or
and
mov
pop
mov
in
jecxz
std
add
imul
xchg
mov
arpl
sbb
cwde
and
and
inc
scas
imul
adc
pop
mov
fldenv
xor
test
jg
idiv
cld
sub
sbb
push
test
and
inc
mov
iret
ret
jmp
pop
stos
pushf
(bad)
mov
jb
loopne
or
and
cmp
sbb
sub
pop
inc
adc
xchg
lock
ins
jle
jbe
aas
mov
xchg
fdiv
adc
ins
push
mov
sbb
(bad)
neg
push
mov
dec
cld
inc
mov
test
das
dec
jns
xor
cmps
pop
add
inc
call
dec
push
xor
pop
sbb
pop
cld
xor
popf
push
jne
fnsave
push
xor
aam
xchg
lahf
adc
xlat
add
mov
inc
test
xchg
cli
mov
mov
sti
ins
pop
jno
sbb
or
push
daa
dec
cmp
into
sub
dec
fnstsw
int
addr16
ds
mov
jae
mov
adc
dec
(bad)
rol
lahf
sub
jo
add
repz
outs
push
sbb
test
xor
(bad)
dec
lock
shr
and
ficomp
push
cmp
cmps
call
push
imul
retf
push
push
cmps
push
xchg
jge
mov
push
aas
loop
xor
out
sub
test
add
xchg
adc
aad
dec
xchg
mov
shr
jp
sbb
cdq
pop
xchg
mov
(bad)
jle
repnz
fstp
push
dec
push
xchg
fadd
pop
outs
sub
pop
pop
call
retf
pop
cmp
push
cmp
or
in
mov
jl
ja
mov
lods
pushf
push
sbb
std
retf
jns
(bad)
bnd
pusha
or
sub
fld
fmul
mov
push
fwait
ss
or
call
loope
dec
mov
scas
jns
add
inc
(bad)
pop
outs
sbb
loop
dec
cmp
xor
ss
sbb
fwait
push
pop
gs
cmp
sahf
jb
and
ins
pop
call
cmps
ss
shr
sub
pop
adc
cld
mov
cmp
push
cwde
rol
pushf
inc
lods
jne
adc
add
out
jbe
int
enter
(bad)
mov
pop
std
xchg
push
pop
or
mov
nop
(bad)
mov
mov
fcomp
push
dec
jmp
into
pop
and
into
sbb
mov
ret
dec
call
leave
movs
(bad)
in
int3
mov
rol
gs
test
arpl
mov
ja
ret
jbe
pop
stos
fwait
add
fucom
inc
and
jecxz
mov
jmp
mov
(bad)
imul
dec
adc
jne
movs
xchg
sub
mov
xchg
mov
mov
pop
mov
ins
jmp
test
icebp
cmp
mov
retf
and
movs
nop
push
jle
cmp
cmp
jmp
outs
retf
push
in
mov
xor
dec
pop
inc
int
mov
pop
cmps
retf
enter
iret
pushf
push
push
inc
inc
push
add
add
push
popf
sub
std
adc
fist
inc
add
cmp
jmp
fmul
adc
jne
mov
add
dec
arpl
lahf
jmp
cmps
adc
xchg
inc
sahf
inc
outs
xchg
imul
fsubr
pop
push
cs
dec
add
fidiv
pop
xchg
leave
inc
pushf
dec
jecxz
(bad)
and
es
out
dec
push
sub
jb
or
cdq
dec
mov
push
test
jbe
outs
enter
mov
shl
fist
jb
icebp
or
and
lods
inc
hlt
(bad)
mov
mov
lea
int
mov
jae
xor
mov
mov
mov
aas
dec
add
clc
arpl
std
add
pushf
pop
ins
sti
sub
in
adc
in
adc
mov
mul
out
outs
daa
jbe
dec
ja
pop
test
shl
test
loopne
sti
and
pop
inc
sahf
clc
loopne
ret
(bad)
arpl
int
pop
mov
xchg
sbb
adc
push
sbb
mov
pop
sub
and
ret
xchg
dec
ret
push
cmp
lds
jle
nop
push
pop
sti
mov
jmp
cmps
cdq
inc
cmp
sbb
retf
sbb
mov
sub
mov
sub
inc
sar
(bad)
hlt
fcom
push
jmp
lahf
fxch
and
clc
pop
in
mov
cld
(bad)
jle
cwde
or
sub
shl
xchg
ja
out
jge
xchg
mov
add
jge
out
mov
es
jl
xchg
in
popf
pop
xor
pop
cmp
or
fdivr
adc
ret
dec
imul
repz
mov
dec
dec
in
push
call
retf
outs
jae
pop
push
add
call
pusha
outs
pop
ret
stos
jo
pusha
aad
inc
dec
pop
pop
(bad)
mov
cdq
jg
scas
bound
hlt
shr
hlt
push
cs
jmp
rcl
test
(bad)
out
je
rcr
pop
bound
out
xchg
jno
loope
jecxz
in
and
jb
mov
and
cmp
and
mov
adc
mov
xchg
fstp
stos
jl
enter
aas
pusha
jge
mov
mov
cwde
jno
inc
and
aad
jmp
dec
or
addr16
test
out
lahf
stos
ret
enter
sbb
inc
mov
std
imul
add
mov
sar
gs
loopne
popa
mov
or
sahf
mov
cmps
add
aaa
xchg
ins
ja
push
jl
xchg
ins
inc
mov
jge
loopne
jp
dec
shr
jle
and
sub
fdivp
adc
popf
pop
fld
je
cmp
jno
and
or
xor
sbb
or
mov
jo
(bad)
das
mov
stos
pop
ss
xchg
daa
es
nop
mov
hlt
jl
das
dec
add
fisubr
jo
addr16
inc
and
mov
loopne
cdq
add
inc
shr
lods
jl
dec
or
out
popf
aam
shl
pop
aam
hlt
sbb
sbb
fdiv
mov
test
test
out
dec
fnsave
sbb
inc
(bad)
retf
inc
xabort
xor
inc
cwde
and
ror
retf
mov
pop
or
and
cmp
int
add
jb
xor
mov
(bad)
push
push
xor
mov
mul
xor
rcl
xchg
mov
test
add
push
test
sbb
push
mov
shl
movs
test
mov
add
cmp
aas
gs
cmp
mov
es
call
or
test
pop
(bad)
test
(bad)
fadd
int3
inc
(bad)
mov
pop
xor
out
stos
call
movs
(bad)
and
in
jae
or
movs
mov
push
adc
loop
fadd
rcr
mov
popa
je
sbb
mov
fcom
pop
xor
imul
fistp
mov
and
jecxz
inc
mov
xchg
xchg
call
dec
mov
inc
shl
shr
mov
ss
push
sub
inc
push
dec
and
rol
add
jne
xor
inc
push
inc
adc
inc
jnp
dec
sub
inc
mov
cmps
mov
pop
cmps
leave
addr16
les
and
out
rcr
fs
lahf
loopne
icebp
mov
push
stc
mov
push
jmp
mov
fld
jmp
inc
add
and
mov
stos
pop
mov
inc
add
jae
sub
fucomp
pop
mov
jge
outs
push
sbb
addr16
push
fsub
push
and
mov
and
sbb
imul
(bad)
jmp
and
push
pushf
je
mov
inc
scas
pop
nop
imul
imul
movs
lods
movs
imul
lea
xchg
mov
rcl
jge
add
mov
mov
out
ret
clc
ins
pusha
xchg
hlt
stos
xchg
addr16
push
loop
mov
jg
out
xchg
pop
xor
cmp
xchg
push
shr
xor
pusha
sbb
lods
jno
test
adc
sbb
push
loope
sub
xor
ins
lock
adc
inc
outs
fisttp
xchg
jo
iret
test
adc
daa
push
or
je
std
mov
ja
in
out
fmul
cmp
mov
test
sub
and
and
loope
mov
dec
outs
jns
inc
repz
call
add
adc
cmp
xor
cmp
fs
fild
pop
scas
daa
or
mov
popf
pop
cmp
call
dec
push
(bad)
cmp
ss
inc
mov
das
adc
add
mul
loope
loop
clc
shl
sub
sbb
xchg
sub
into
cdq
test
rol
inc
mov
and
pop
sar
adc
jb
xchg
jne
mov
xchg
lods
leave
jno
and
int
int3
mov
dec
mov
sub
jl
movs
xor
fwait
mov
adc
sar
fdivp
sbb
shl
fiadd
and
ficom
fnsave
inc
ja
adc
cmp
outs
dec
gs
das
fdivr
pusha
add
inc
mov
out
pusha
pop
(bad)
mov
or
push
das
lea
mov
mov
and
and
pop
jmp
xor
les
int3
std
fucomp
sbb
xlat
imul
xchg
std
jp
sub
push
mov
call
xlat
call
jg
mov
in
cmp
jmp
mov
in
punpckhdq
sbb
xor
shl
jne
nop
inc
das
repz
xor
jge
das
ins
aad
pop
cmp
adc
lahf
xchg
arpl
movs
xchg
sub
xor
arpl
mov
jnp
(bad)
aaa
sti
or
std
sbb
sar
loopne
pop
imul
add
popa
fdivrp
js
inc
xor
xchg
mov
or
daa
aas
add
jbe
xchg
mov
or
aad
test
sub
mov
(bad)
push
sub
fsub
lds
mov
sti
sub
mov
and
lods
nop
rcr
jno
inc
(bad)
mov
jg
mov
jmp
scas
add
and
sub
cwde
rcr
sub
loop
pop
lock
and
add
sbb
or
xor
je
jns
cdq
jo
pop
xchg
adc
mov
jmp
mov
iret
xor
xor
add
jle
fsubr
mov
inc
in
shr
stos
stc
fwait
sbb
sub
jo
mov
cmp
mov
loopne
ins
fild
mov
std
sub
sbb
out
sub
jmp
ffreep
cwde
push
or
repz
icebp
mov
jmp
xchg
jl
dec
push
addr16
int3
retf
loop
enter
cwde
test
into
push
xchg
and
push
movs
ss
in
pusha
aas
int
sub
inc
iret
gs
sbb
repnz
sar
push
int
xchg
stos
or
adc
addr16
fmul
stos
(bad)
mov
es
cmp
pop
in
out
lds
cmp
pop
mov
ret
mov
scas
dec
sti
loop
cwde
sbb
jl
jo
xchg
inc
add
inc
out
js
pushf
sbb
icebp
xchg
adc
inc
or
mov
test
aas
mov
stos
fcmovnb
outs
jle
(bad)
mov
bound
out
and
xchg
int3
jb
mov
aas
call
pop
scas
mov
mov
push
jns
repnz
add
ds
jbe
pop
(bad)
retf
xchg
adc
scas
push
aaa
retf
pop
addps
pop
outs
adc
lahf
sti
outs
sub
xchg
clc
lds
loop
mov
cmp
sub
in
add
in
mov
int
mov
arpl
or
(bad)
xor
add
adc
or
add
in
push
cmp
ins
xor
imul
out
retf
into
or
pop
stos
mov
aaa
pop
pop
mov
sbb
jo
stc
ins
(bad)
cmp
imul
fs
xchg
jns
adc
retf
lods
dec
cmp
sbb
lahf
jb
adc
add
jnp
cmp
push
sbb
in
std
push
add
sbb
not
mov
aas
mov
repnz
or
in
sub
cld
dec
retf
push
adc
idiv
(bad)
xchg
jl
jbe
mov
jle
(bad)
mov
outs
test
xor
xchg
cmp
icebp
pusha
clc
bnd
fcomip
retf
xchg
jmp
mov
xchg
push
repnz
xor
mov
outs
jp
sub
les
(bad)
loope
inc
outs
adc
mov
mov
dec
jo
test
into
cld
aaa
cmps
lods
shl
push
adc
(bad)
or
movs
mov
repnz
mov
adc
in
out
out
add
dec
sbb
inc
adc
hlt
rol
(bad)
out
aad
push
push
mov
mov
enter
rcr
shr
xor
pop
add
mov
pop
call
cmps
and
pusha
push
stos
dec
mov
out
mov
ds
mul
sub
(bad)
in
xor
pop
jne
stos
std
test
inc
mov
pusha
push
adc
adc
push
aad
pop
test
out
ins
cdq
fmul
shr
lahf
or
bound
and
inc
cs
jb
mov
and
fadd
inc
xor
stos
je
lods
sbb
inc
cmp
cmp
mov
jbe
lds
mov
dec
popa
or
add
push
ins
adc
int
retf
rcl
retf
pushf
xor
push
push
leave
ins
inc
sbb
or
mov
mov
rep
test
sub
jmp
jge
xchg
mov
in
aas
inc
test
mov
ins
pushf
arpl
scas
fsubr
xor
fsubp
(bad)
dec
mov
aaa
sub
lahf
push
sbb
push
fnstenv
bound
ficomp
in
adc
add
std
xor
sbb
inc
inc
pop
push
stos
adc
ror
jg
dec
std
push
stos
cmps
loope
popf
out
jo
cwde
ds
arpl
xor
add
mov
xchg
inc
pop
sub
out
jle
(bad)
pop
aaa
push
repnz
or
add
arpl
and
movs
pop
and
push
and
shl
dec
pop
mov
in
xor
loopne
les
scas
aad
enter
fmul
mov
pop
ja
adc
inc
enter
(bad)
outs
mov
leave
push
mov
fidivr
test
xchg
or
lock
add
dec
fimul
or
mov
out
into
add
mov
inc
or
xor
push
pop
push
xor
inc
pop
xor
and
jle
mov
sub
mov
test
test
leave
bound
pop
in
fwait
inc
mov
adc
adc
jae
add
retf
mov
sub
sub
xlat
xchg
(bad)
repnz
and
mov
jmp
xchg
dec
shr
dec
jmp
mov
call
and
pop
fs
loopne
int3
mov
cmp
sbb
add
icebp
pop
dec
dec
mov
jge
jle
pop
inc
stc
data16
stos
and
lods
push
sub
pop
or
sbb
pop
repz
xchg
mov
jp
pop
ins
mov
inc
dec
xchg
xchg
outs
push
popa
inc
(bad)
enter
aad
pop
imul
enter
hlt
push
ficom
jns
ret
das
dec
popa
jecxz
movs
mov
ror
cmp
xchg
push
mov
adc
test
js
push
std
pop
and
push
jp
jne
enter
cmp
mov
dec
(bad)
in
idiv
jnp
scas
or
dec
sbb
jno
push
mov
dec
movs
add
cmp
pop
mov
xor
stc
inc
push
out
fwait
push
mov
pop
mov
bound
cmp
sub
sub
out
and
lahf
mov
test
pop
xchg
push
mov
in
ss
lahf
sbb
or
je
sbb
mov
ins
cmp
add
adc
in
xchg
and
xor
xchg
jae
mov
and
inc
pop
sbb
pushf
retf
(bad)
fild
inc
add
pusha
pop
(bad)
not
dec
push
sbb
mov
mov
sti
xchg
push
pop
inc
pop
call
fsub
repnz
add
sub
ret
push
push
ds
fs
test
mov
lea
(bad)
add
aaa
out
rcr
mov
hlt
popf
or
mov
clc
repz
das
xchg
jge
fnsave
cmp
inc
lods
fisub
movs
cmps
into
les
pop
jno
xchg
(bad)
jle
aaa
pop
aas
sar
xor
outs
mov
fldcw
out
or
pop
push
jmp
es
shl
dec
cmp
scas
sbb
in
fwait
cmc
scas
lds
test
xor
or
sub
repz
cmc
mov
push
aas
(bad)
xchg
sub
out
xor
jmp
mov
jp
push
mov
mov
daa
sbb
je
mov
data16
adc
xchg
pushf
and
in
sub
(bad)
or
in
jg
mov
jmp
inc
repnz
imul
call
ins
les
pushf
ds
sub
adc
out
sbb
push
sar
push
push
(bad)
xor
movs
or
xchg
arpl
push
sahf
inc
fdiv
retf
pop
jns
clc
(bad)
in
sub
pushf
out
mov
xchg
stos
std
push
mov
or
(bad)
bound
adc
pushf
push
stc
xchg
cwde
sub
add
cmp
xor
fistp
push
push
cmp
jg
out
mov
ret
or
fnstcw
rol
jmp
mov
mov
lds
push
add
loopne
out
lds
cmc
out
and
mov
cli
and
in
enter
adc
and
jecxz
stos
icebp
and
mov
push
push
hlt
pop
sub
bnd
or
shl
jne
mov
lods
or
cmp
enter
popa
pop
shr
dec
fisub
sub
pop
inc
fbstp
inc
imul
xchg
sub
jmp
inc
jbe
jb
mov
repnz
pop
(bad)
mov
xchg
sbb
push
and
cwde
repz
dec
sub
rcl
mov
dec
gs
aas
retf
ror
sub
leave
pop
lds
js
cmc
test
jns
sbb
jmp
cmps
daa
pusha
cmp
mov
dec
out
mov
mov
mov
jns
(bad)
repz
mov
(bad)
adc
fadd
(bad)
repz
mov
lock
mov
jecxz
dec
mov
sub
mov
repnz
push
adc
xchg
cmps
mov
cmp
aaa
inc
outs
nop
cmp
hlt
add
icebp
push
sbb
mov
cmp
lods
rcr
mov
lods
aam
leave
xchg
sub
cmp
test
retf
and
ret
sbb
(bad)
lods
mov
or
mov
rcr
dec
sub
inc
mov
nop
push
cmp
aad
imul
sbb
xchg
jb
mov
pop
push
dec
enter
and
mov
scas
imul
stos
jl
mov
inc
scas
ins
enter
xchg
push
cmp
xor
div
xor
imul
dec
or
scas
jmp
mov
jecxz
push
retf
mov
sti
jge
pop
shl
pop
mov
mov
out
jge
test
rcl
ss
(bad)
pop
pusha
cmp
loopne
push
xor
or
xchg
xlat
jge
sbb
test
sub
xchg
push
hlt
aas
cld
xchg
iret
push
clc
adc
test
or
mov
ret
ret
shl
in
inc
and
or
fucomp
sub
adc
pop
xor
and
or
push
dec
cmps
out
in
repnz
sbb
ficom
ret
popa
pop
xchg
pop
pop
sbb
jb
inc
clc
mov
stc
inc
mov
push
sbb
adc
push
jge
mov
repz
xchg
mov
pop
sub
lds
sbb
push
cld
(bad)
aaa
dec
push
adc
cmc
cmp
inc
sbb
cmp
out
(bad)
and
icebp
test
xchg
dec
aaa
out
xor
push
xchg
int3
sub
jae
loop
xor
out
mov
xchg
push
gs
(bad)
repnz
movs
mov
mov
jmp
ret
sbb
daa
push
fst
lock
push
xor
push
adc
loop
out
ret
test
retf
shl
xor
pop
dec
mov
jbe
stc
pop
inc
push
cmp
pop
and
lock
cmps
adc
push
jg
sbb
daa
xor
popf
aam
jmp
push
outs
cdq
pop
mov
hlt
cli
sub
cli
cmp
push
push
jo
xor
cmp
xor
pop
(bad)
movs
fld
cdq
jb
mov
inc
and
scas
push
pop
mov
push
aas
sub
push
loope
adc
mov
push
(bad)
das
jl
(bad)
pop
sbb
or
ins
repnz
fcmovnb
sub
outs
sbb
mov
dec
out
shr
pop
loopne
sbb
fs
movs
jbe
outs
mov
xor
sbb
pushf
xlat
add
std
add
xchg
pop
xlat
sbb
jge
push
in
addr16
mov
les
(bad)
clc
nop
mov
gs
imul
or
in
jmp
mov
push
push
inc
mov
sahf
mov
add
hlt
xchg
push
lock
xchg
pop
dec
(bad)
adc
pop
imul
pop
push
ins
movs
fstp
fld
xchg
mov
stos
sub
js
dec
mov
das
ins
mov
mov
mov
add
addr16
clc
mov
fcomip
jge
in
jmp
mov
cmp
jecxz
test
adc
add
xchg
or
add
std
enter
outs
retf
mov
std
adc
or
imul
js
lock
dec
pop
mov
out
sbb
movs
mov
and
fnstenv
retf
cmp
dec
inc
(bad)
(bad)
mov
sahf
iret
test
push
rol
fninit
jge
adc
dec
ret
sbb
pop
mov
xor
push
icebp
jge
test
or
fs
push
or
test
repz
fs
(bad)
cmp
stos
push
invd
mov
inc
fild
(bad)
jp
dec
stos
sbb
inc
mov
cs
inc
call
test
adc
ret
pop
leave
in
cmc
mov
jge
(bad)
shr
mov
aad
hlt
cmps
xchg
mov
jl
inc
adc
inc
sub
aad
inc
retf
jae
ja
pop
sbb
xchg
pushf
xchg
mov
inc
(bad)
or
(bad)
jbe
lahf
dec
int
mov
xor
or
div
popf
popf
jne
lahf
jbe
stc
(bad)
fs
or
cmp
cmp
inc
into
or
jp
jnp
movs
xor
ret
mov
les
sub
fld
add
aad
push
popf
(bad)
int3
ss
cld
lahf
or
je
js
or
sub
shr
jno
pop
aad
lods
push
sub
xchg
xor
bound
mov
pop
inc
loopne
movs
mov
scas
mov
leave
pop
xchg
daa
mov
(bad)
fs
ret
outs
popa
shr
fwait
test
inc
in
pop
rol
push
idiv
call
nop
retf
jmp
es
adc
xor
outs
outs
dec
cmc
(bad)
int
movs
cmp
xchg
and
and
cli
pusha
cmc
arpl
xchg
xchg
xlat
fwait
imul
push
adc
mov
xchg
retf
not
adc
adc
shr
aas
or
adc
int
lds
cwde
push
xor
xor
mov
(bad)
pop
dec
push
js
pop
in
add
das
add
cmp
js
jmp
mov
retf
(bad)
cmp
adc
fmul
sahf
cmps
mov
sbb
rcr
ds
and
ja
call
rol
inc
sbb
stos
repnz
mov
sub
xor
dec
arpl
mov
(bad)
jmp
push
mov
jae
fld
adc
or
rcr
sbb
popf
jl
(bad)
xchg
stos
test
push
jge
test
dec
and
bound
test
cmp
xchg
xchg
jle
lock
iret
and
mov
xchg
(bad)
hlt
dec
jg
aas
cmp
dec
xor
xchg
jp
inc
jle
mov
sbb
lock
or
mov
inc
aas
sub
in
pop
or
push
rol
inc
pop
pop
sub
sbb
xchg
(bad)
ins
mov
aaa
mov
sbb
data16
push
mov
movs
jne
addr16
adc
mov
(bad)
pop
sub
mov
xchg
outs
xchg
out
mov
(bad)
iret
push
pop
adc
push
repz
sub
test
xor
jnp
mov
(bad)
stc
popf
adc
push
shl
dec
sub
mov
les
mov
in
test
adc
xor
sub
push
cmps
push
fs
mov
cmp
xor
push
outs
adc
rol
cmps
xor
inc
sub
cmps
call
ret
retf
mov
mov
mov
daa
jnp
inc
jmp
sub
out
call
in
mov
add
int
shl
sub
fwait
outs
mov
and
ffreep
push
inc
mov
and
das
shr
and
pop
xchg
retf
inc
nop
repz
push
stc
sbb
xchg
fild
adc
daa
rcr
adc
and
push
aad
inc
jp
jbe
push
push
adc
jmp
jmp
jecxz
or
(bad)
faddp
push
and
push
fist
enter
les
adc
(bad)
ins
in
sbb
cmp
bts
ror
mov
scas
add
adc
leave
dec
mov
mov
adc
sbb
aad
or
inc
cdq
sub
dec
jle
mov
(bad)
data16
pop
rcr
loop
jns
jg
or
ds
scas
dec
cmp
jg
pop
mov
into
int
cmc
pop
inc
into
push
call
popa
jbe
xor
ja
jae
ins
std
cmp
shl
and
mov
inc
ins
repz
dec
jmp
lock
js
clc
push
hlt
jmp
leave
stos
outs
or
iret
ins
cmp
mov
adc
sub
(bad)
outs
inc
ret
arpl
inc
cli
adc
(bad)
and
mov
jns
retf
pop
adc
(bad)
das
xor
movs
xchg
(bad)
pop
mov
cmp
sbb
inc
xor
js
and
pop
sar
add
jle
rol
cmc
dec
scas
add
xor
hlt
cwde
mov
lods
movs
rol
and
adc
xchg
std
xchg
inc
lahf
cld
sbb
(bad)
mov
pop
fadd
cwde
lea
mov
xchg
ins
clc
mov
aas
xor
cli
xchg
fcom
push
mov
lods
test
loop
mov
bound
push
popf
mov
fisttp
inc
int
bound
mov
adc
push
sar
pop
mov
sbb
stos
out
mov
lahf
cs
rol
or
add
push
jle
fimul
and
mul
sar
aam
(bad)
jno
cwde
mov
loopne
push
dec
sub
out
xchg
icebp
push
sar
jmp
cmps
dec
sbb
cmp
rep
fimul
stos
loopne
retf
xor
sar
inc
add
xchg
push
ins
loopne
lea
nop
or
inc
push
into
jecxz
test
in
and
jle
je
cmc
jle
std
xlat
mov
xor
ja
pop
add
pop
sahf
stos
idiv
mov
retf
bnd
or
mov
push
retf
cmps
pop
mov
cld
add
xrelease
daa
fld
mov
pusha
movs
dec
mov
xor
pop
inc
cmp
mov
iret
dec
push
mov
mov
jmp
inc
inc
adc
pushf
outs
stos
xchg
sub
jge
imul
sar
pop
jp
pop
fwait
es
(bad)
pop
in
ins
and
xchg
cli
es
in
mov
jae
test
mov
push
gs
out
or
gs
rol
and
std
ss
mov
and
(bad)
loopne
jmp
les
xor
les
and
stos
popa
loop
iret
movs
jo
ins
xchg
or
mov
icebp
cmp
inc
jnp
pop
or
fsave
jmp
mov
leave
adc
les
mov
push
std
pusha
push
inc
mov
(bad)
pop
xchg
stos
mov
push
sub
scas
inc
jb
mov
rol
in
xchg
sti
repnz
mov
lock
outs
mov
pusha
sar
push
jg
and
pop
jmp
sbb
push
dec
push
jno
jmp
fisubr
xor
or
in
imul
int3
fdivp
loopne
lea
cdq
jge
adc
pop
fcmovu
inc
fild
xchg
clc
or
xchg
sar
xrelease
pop
dec
or
sbb
mov
arpl
outs
movs
xor
inc
hlt
fdiv
(bad)
mov
cmp
scas
inc
das
mov
or
int3
mov
add
add
(bad)
sub
in
pop
sub
or
ss
xor
or
mov
mov
jae
mov
je
add
xchg
pop
push
sti
leave
bound
call
test
scas
(bad)
mov
aas
fwait
shr
jp
cmps
cmp
in
test
mov
scas
xchg
cmps
mov
movs
stos
and
popf
enter
iret
int
jo
int
xchg
mov
ss
mov
aad
cmc
ss
add
dec
(bad)
xchg
inc
fisttp
call
cs
stc
add
cld
lds
cmp
test
imul
cmps
xchg
fwait
clc
sub
nop
xor
pushf
xchg
xchg
je
mov
push
lahf
xor
push
jbe
test
pop
add
imul
pushf
sub
sar
lock
rol
pop
ins
out
and
jbe
and
shl
cmc
into
in
bsr
dec
mov
push
fstp
jge
aaa
je
(bad)
cmps
idiv
std
jl
ds
test
xor
xchg
je
fwait
(bad)
hlt
mov
xor
mov
icebp
test
and
(bad)
inc
dec
dec
cwde
popa
cmp
jae
and
sbb
arpl
mov
jecxz
movs
or
mov
sar
sbb
frstpm(287
popa
cmp
fld
aaa
jmp
cmp
in
pop
cdq
shr
loop
fucomi
shl
add
bound
ds
(bad)
hlt
lods
xor
sub
ret
sti
ins
lods
(bad)
pop
and
es
ds
arpl
clc
mov
in
iret
dec
xlat
mov
stos
mov
sub
aaa
cmp
mov
xor
pop
mov
mov
pushf
enter
sbb
and
xor
add
(bad)
xlat
cdq
bnd
add
push
or
adc
dec
retf
in
fld
(bad)
jmp
mov
nop
mov
xchg
and
push
and
repz
mov
shl
pop
in
cwde
jl
not
cld
loopne
mov
add
bound
sub
aas
lock
dec
mov
jle
nop
loope
add
mov
or
loope
sub
push
add
inc
out
push
test
dec
movs
dec
outs
mov
push
xor
jmp
addr16
mov
jne
mov
dec
mov
jmp
cmp
jmp
pushf
push
out
mov
ins
cmp
movs
mov
cmp
ficom
pop
(bad)
and
imul
pop
test
adc
loop
and
int
mov
pop
mov
int3
nop
jmp
xor
fcom
rcr
mov
imul
mov
jno
rcl
push
loope
mov
pop
sub
cmp
add
cdq
adc
stc
xchg
cmp
ins
call
adc
and
ins
repz
mov
xor
sub
test
dec
inc
retf
mov
add
jo
mov
dec
shl
sub
inc
jb
test
sahf
retf
mov
(bad)
push
repz
xor
shl
pop
inc
sub
fsub
movs
dec
push
mov
mov
pop
data16
je
jae
les
sub
cmp
mov
sub
sbb
fsub
xchg
sub
mov
inc
ret
jle
jnp
add
jmp
xor
std
push
sub
adc
add
ja
xchg
jns
arpl
jle
fs
mul
push
retf
test
or
push
inc
fnstsw
out
cdq
cs
ins
mov
sbb
cmp
push
cmc
add
jle
xor
pop
mov
lods
retf
xor
mov
clc
ret
outs
pop
popa
mov
aas
repnz
adc
mov
cli
(bad)
mov
sub
shr
jle
cmps
cmps
pop
cwde
and
or
jne
mov
sbb
lock
pop
data16
pusha
test
dec
xchg
iret
outs
xchg
test
out
and
jl
adc
hlt
sub
icebp
push
sub
xchg
jbe
mov
mov
popf
inc
popf
inc
adc
outs
pop
clc
scas
mov
rcr
outs
jne
cmp
out
inc
sar
pop
xchg
dec
imul
mov
or
add
test
dec
add
int3
inc
loop
aaa
shl
push
rol
ret
sti
cmps
sbb
mov
or
ds
lahf
adc
cli
add
sbb
and
adc
jp
mov
jmp
xchg
xchg
jno
xor
cmp
stos
or
fs
cmp
int
mov
mov
sbb
pop
xchg
outs
mov
sbb
fist
sahf
(bad)
retf
and
adc
call
xchg
inc
push
mov
scas
mov
mov
bound
push
or
cmp
pop
xchg
mov
iret
sbb
or
mov
ins
test
cli
add
push
or
jo
xor
stos
push
or
xor
mov
retf
test
xchg
les
and
add
sub
retf
sub
jp
sbb
pop
push
inc
lods
mov
outs
push
scas
rol
cmp
xor
pop
gs
movs
sub
dec
mov
das
ds
adc
out
sbb
xchg
aaa
ins
imul
frstor
or
push
sbb
mov
rol
inc
movs
mov
push
add
push
mov
scas
mov
scas
mov
dec
les
outs
cmp
cvtpi2ps
xor
mov
pop
push
test
dec
inc
mov
lea
mov
cmp
daa
push
pop
xchg
push
or
fimul
popa
xchg
jmp
dec
(bad)
sub
add
(bad)
pushf
lods
push
inc
popf
cmp
aas
mov
push
lea
lods
jo
or
mov
push
cmp
cmp
mov
pushf
mov
(bad)
inc
mov
(bad)
jecxz
push
in
mov
rcl
sub
(bad)
sbb
(bad)
rcl
xchg
dec
cmp
pop
mov
jecxz
pop
and
shl
xchg
adc
mov
cli
jecxz
push
cmp
dec
test
push
pop
icebp
out
or
push
adc
dec
xchg
mov
cmps
loopne
fistp
rcr
(bad)
ins
daa
iret
xchg
push
jmp
cli
imul
add
xchg
xchg
cmp
js
hlt
(bad)
push
enter
jp
add
in
test
adc
in
gs
ret
sbb
mov
inc
adc
stos
and
pop
push
rcl
daa
inc
es
dec
jle
pushf
jmp
mov
outs
sbb
sub
shl
in
ror
sub
jbe
out
mov
(bad)
dec
cmp
or
(bad)
mov
dec
movs
int3
rcr
clc
fcmovu
cs
imul
adc
and
sbb
sub
inc
or
lods
or
nop
shr
pop
inc
cmp
dec
xchg
jbe
dec
nop
out
lahf
pop
jae
or
stos
jp
fst
xchg
jb
leave
and
mov
leave
mov
bnd
bound
movs
adc
mov
cld
cmp
xchg
ja
mov
fldcw
aam
inc
push
fstp
mov
inc
cmp
popf
fwait
pop
stos
xor
mov
push
test
sbb
pop
aam
test
mov
in
or
dec
neg
xchg
jb
arpl
push
mov
xchg
fld
stos
jmp
and
mov
arpl
mov
ins
and
pop
xor
fwait
jnp
jno
sub
jae
and
and
fsub
(bad)
inc
imul
add
adc
(bad)
sbb
arpl
cmp
and
fbld
ins
add
inc
sub
jne
nop
jnp
outs
sar
pop
mov
fiadd
enter
pop
popf
pushf
cs
jmp
xchg
in
mov
jne
retf
push
enter
xchg
(bad)
sub
pushf
and
jp
(bad)
mov
movs
xchg
mov
imul
dec
es
imul
sar
fld
jne
stos
sub
lods
retf
mov
cmp
popa
(bad)
out
scas
pop
loope
inc
ins
inc
loop
movs
cmp
sub
mov
sbb
mov
add
(bad)
push
data16
jbe
jne
or
pop
mov
xor
lahf
test
mov
or
hlt
in
xchg
daa
lods
cmps
push
sbb
daa
nop
cmp
clc
leave
dec
push
nop
mov
mov
xchg
xlat
and
das
out
fwait
or
test
or
es
in
cli
stos
cmps
xchg
es
test
mov
push
outs
dec
fcmove
stc
push
movs
add
inc
sub
dec
xchg
call
fadd
and
mov
fiadd
mov
mov
mov
pop
leave
dec
stos
sub
pop
std
push
cdq
fsubr
xor
dec
mov
inc
jl
mov
ds
scas
into
sbb
cmps
push
mov
ret
mov
and
push
dec
sub
jecxz
ins
pop
les
(bad)
imul
fidiv
fisttp
push
jne
lods
aas
lock
push
cli
test
lods
push
mov
cmp
pop
jb
jge
jbe
mov
loop
retf
and
push
sub
xchg
add
daa
pop
mov
cs
mov
add
outs
mov
cs
(bad)
bound
ror
add
ja
push
jbe
push
stos
addr16
dec
xchg
stos
mov
pop
or
(bad)
adc
lods
jecxz
aaa
jle
dec
or
scas
or
in
xchg
and
dec
mov
add
repnz
sbb
pop
cmp
push
int3
je
(bad)
sub
jmp
mov
(bad)
enter
inc
fstp
mov
jbe
mov
jecxz
ret
je
clc
in
sbb
leave
mov
lds
movs
shl
push
clc
add
imul
mov
hlt
dec
add
pop
stos
lea
movs
cmp
(bad)
xor
adc
pop
push
jo
shr
inc
push
call
sbb
xchg
inc
aaa
imul
or
addr16
mov
aam
pusha
sub
push
push
rcr
rcr
or
out
lods
ins
rcr
and
neg
cld
cdq
lahf
outs
in
jb
jmp
mov
xchg
ss
push
add
mov
cmps
fstp
stos
nop
and
mov
xor
popa
popa
sahf
fcmovu
ins
lahf
loopne
movs
inc
mov
ins
push
xor
add
or
dec
cdq
fsub
retf
ret
js
sbb
and
cmp
push
cmc
dec
lods
jae
pop
imul
push
pop
push
xlat
lock
push
xor
imul
push
stos
and
sti
dec
add
or
shr
shl
cmc
out
jb
xchg
ret
jmp
xlat
mov
test
jnp
push
push
fs
test
shr
std
push
dec
(bad)
cld
in
dec
sub
cmps
int3
daa
sti
popa
repz
jmp
jb
xor
add
sahf
sbb
int
push
loop
adc
push
or
mov
xchg
adc
jle
push
cmp
movs
or
inc
fisttp
jle
iret
hlt
mov
pop
enter
call
sbb
stc
inc
test
loopne
mov
dec
popa
xchg
push
adc
in
icebp
fdivr
xchg
sahf
mov
sub
fdiv
and
in
and
shr
lahf
aaa
sub
in
sbb
xor
leave
push
push
mov
add
dec
repz
sub
retf
neg
gs
inc
lahf
fst
in
adc
xchg
sahf
lea
pusha
sub
mov
jbe
fsubr
cmp
adc
adc
and
js
lods
dec
push
repz
jg
fist
ins
xchg
mov
mov
repnz
sub
mov
xlat
into
jp
bound
out
stos
and
mov
adc
jmp
cwde
inc
pop
js
xor
arpl
mov
icebp
hlt
jle
jbe
sub
sub
add
push
push
push
xchg
xchg
aam
cmc
les
and
scas
mov
mov
inc
fist
loop
cmp
ins
or
test
xor
and
or
sbb
mov
or
retf
pop
shl
push
mov
cmp
or
outs
xor
dec
enter
and
sbb
mov
adc
mov
mov
xchg
lahf
pop
xchg
call
lods
jo
and
int3
(bad)
icebp
jbe
aas
(bad)
mov
ss
pop
jae
jns
popa
xchg
dec
fwait
gs
cdq
push
fprem
adc
jp
xor
dec
inc
std
pop
enter
rcl
and
shl
jbe
or
into
in
cmp
pop
stc
std
xor
jg
rcl
fdiv
dec
movs
mov
cmp
or
pop
pop
mov
imul
fdivp
and
push
xchg
cmc
jp
int3
call
mov
aaa
push
xor
mov
fld
je
bound
(bad)
imul
shr
pop
cmps
es
or
jae
pop
push
jmp
in
fst
cli
mov
add
hlt
ins
xor
and
fs
ror
stc
in
sub
mov
out
daa
int3
cmp
sub
cmps
dec
movs
push
xchg
push
sbb
sub
js
add
shl
rol
dec
int3
lods
repz
push
scas
adc
lds
inc
pop
add
mov
ss
cli
add
or
jg
pop
dec
dec
xchg
fstp
pusha
and
jae
mov
vcvttpd2qq
xchg
iret
xlat
fwait
lods
dec
ss
lods
fdivr
dec
xlat
pop
sti
in
mov
inc
mov
je
repnz
inc
mov
call
mov
dec
inc
xlat
push
dec
xlat
xor
adc
aam
or
jno
ror
addr16
cli
push
push
ret
ret
les
pop
pop
sub
in
jo
call
xchg
clc
cmp
lock
mov
loopne
inc
bnd
(bad)
cli
sbb
test
cmp
sbb
sub
mov
adc
in
sbb
bound
mov
xor
inc
leave
xchg
(bad)
(bad)
out
aaa
rcr
sub
pop
fnsave
idiv
adc
mov
jnp
jae
pop
sbb
(bad)
es
outs
jb
ds
enter
ds
pop
xor
dec
jg
lock
mov
sub
data16
mov
clc
std
jp
rol
(bad)
in
xchg
frstor
dec
xchg
push
inc
cmp
push
dec
iret
out
aad
push
pop
out
mov
mov
ds
(bad)
call
mov
jg
cdq
lahf
icebp
pusha
cmps
mov
jecxz
adc
dec
push
sub
xchg
xchg
xchg
ret
sahf
int3
pop
sti
jl
aas
mov
popf
xchg
mov
sub
mov
aas
add
loope
out
xlat
or
mov
je
mov
js
shl
rcl
bound
cli
add
push
inc
push
xor
loopne
cmp
sbb
stos
mov
fnsave
push
iret
pop
xchg
test
data16
cmp
jbe
popa
ret
retf
(bad)
leave
dec
in
pop
adc
daa
dec
hlt
lock
lea
pop
test
pop
std
aaa
mov
aam
fsubr
xlat
mov
adc
mov
enter
std
sar
mov
inc
fisubr
aam
rcr
dec
and
pop
push
push
mov
fwait
aaa
lods
pop
imul
data16
or
pop
(bad)
pop
jne
push
fwait
ins
dec
and
test
int
adc
mov
and
adc
aad
and
inc
ins
jmp
push
and
popa
xor
and
loopne
cwde
lock
push
cdq
push
cmps
sbb
cld
pop
xor
cmc
adc
call
das
jmp
cmp
std
mov
cmp
add
(bad)
fnstcw
aaa
push
(bad)
and
mov
daa
push
mov
xchg
pop
pop
dec
addr16
in
xchg
add
pop
adc
imul
jbe
mov
jmp
jne
add
push
leave
enter
cwde
aad
sub
adc
mov
pop
jge
aas
out
call
xchg
shl
stc
cdq
gs
cmp
inc
repz
outs
imul
imul
fild
adc
mov
bound
jmp
jae
call
out
adc
push
mov
cmc
inc
sub
test
mov
xchg
rcl
gs
call
xchg
lods
cli
jb
iret
ror
mov
mov
cdq
xor
icebp
or
jle
lock
les
and
cld
sbb
mov
into
mov
icebp
mov
jns
iret
mov
inc
mov
sbb
jb
rcr
leave
add
test
sbb
stos
mov
nop
in
xor
sub
pop
fwait
movs
mov
mov
pushf
(bad)
and
xchg
xchg
mov
jbe
dec
cmp
mov
mov
adc
stos
dec
inc
pushf
sbb
popa
in
mov
mov
scas
inc
cmps
sbb
pop
bswap
adc
fsub
movs
mov
sub
or
push
cwde
push
cmp
fwait
xor
sub
or
loope
fldenv
mov
adc
dec
popa
adc
(bad)
repz
sub
lahf
jg
mov
sbb
hlt
mov
dec
jg
cmp
out
inc
(bad)
mov
clc
std
xchg
(bad)
cmp
inc
ret
mov
cdq
mov
jmp
aas
getsec
pop
xor
sub
jg
jl
ss
adc
inc
xchg
xlat
mov
mov
movs
(bad)
sub
sub
int
lahf
into
add
div
sbb
lods
es
movs
jle
pop
xchg
add
rcr
sti
push
xchg
mov
mov
sub
cwde
scas
icebp
cmp
xchg
mov
xchg
sbb
sbb
jecxz
mov
mov
push
test
inc
pushf
jne
call
aad
mov
add
pushf
(bad)
das
adc
out
mov
mov
pop
(bad)
shl
call
ja
lea
cmp
mov
sbb
mov
pop
in
fsubp
fwait
add
jecxz
mov
loope
mov
out
or
lds
jbe
xor
pop
xchg
call
rcr
loopne
xchg
int3
clc
xchg
stos
pop
or
jo
js
mov
jnp
push
(bad)
adc
test
test
inc
xchg
push
ret
lahf
lock
adc
enter
es
shl
cmc
bound
push
xchg
adc
inc
push
mov
add
sbb
pop
repz
xchg
repnz
jae
jp
adc
and
ss
nop
xchg
stos
aam
(bad)
ficom
cwde
push
call
pushf
pop
fxch
sub
js
mov
jle
fcom
push
dec
iret
jl
cli
inc
icebp
xlat
cmp
push
ret
dec
aas
or
jge
jge
sub
ret
adc
add
neg
in
pushf
cwde
data16
push
mov
sbb
fsin
cmp
test
jb
aad
pop
in
fsubr
ficom
mov
add
les
mov
sub
movs
sub
sub
ins
jge
cmc
js
in
mov
sar
mov
in
jmp
(bad)
stos
fadd
and
pmaxsw
sub
inc
lods
lods
jne
xchg
add
inc
sti
add
adc
dec
in
(bad)
mov
sbb
mov
jo
mov
out
loop
add
jl
popf
dec
daa
add
adc
or
adc
cld
mov
push
cmp
cld
cli
out
sbb
scas
sahf
xor
das
push
xchg
jb
pop
jge
push
fcom
out
xchg
and
mov
mov
cmp
mov
fiadd
repnz
iret
adc
and
pop
lods
push
jge
(bad)
(bad)
xchg
rcr
or
mov
jo
(bad)
mov
cmp
and
cmc
cmps
(bad)
dec
pop
aad
sahf
pushf
xor
inc
in
cmps
int
xor
fcom
adc
xchg
xchg
or
jmp
out
jg
pop
fsub
xor
xor
sub
sub
mov
xor
repz
retf
cdq
mov
push
test
sub
push
jmp
jo
adc
(bad)
int
push
rcr
jle
aam
sti
(bad)
and
push
mov
lock
cwde
pop
lods
mov
in
pop
in
jg
rol
adc
add
push
and
mov
icebp
jg
jo
aad
stos
retf
inc
mov
or
or
in
mov
outs
push
jo
push
test
pop
jg
lea
data16
and
bound
pop
mov
and
inc
nop
and
or
in
sbb
mov
mov
lds
sub
enter
iret
call
dec
sbb
mov
imul
daa
or
pop
movntps
cmp
ins
adc
test
jp
xor
mov
inc
imul
and
enter
call
jmp
pushf
jecxz
mov
pop
fisub
cmc
pop
jmp
dec
or
aad
xchg
lods
je
test
(bad)
hlt
stos
in
inc
inc
jae
xor
push
mov
mov
pop
(bad)
imul
inc
pop
inc
mov
arpl
mov
and
adc
retf
into
loopne
sbb
js
cmp
out
xchg
or
retf
pop
call
icebp
cli
lods
mov
mov
xchg
xor
mov
xor
sbb
add
and
mov
pop
scas
xchg
dec
sbb
inc
cmp
pop
in
mov
sbb
push
xor
loop
(bad)
pushf
imul
mov
sub
call
nop
cmp
dec
push
stc
fnsave
pop
mov
xor
mov
cmps
mov
push
out
mov
mov
push
dec
sbb
pop
push
or
jecxz
iret
push
inc
jae
xor
mov
cmps
cmp
outs
sbb
push
jmp
pop
retf
repz
push
(bad)
xlat
neg
inc
int3
ret
rcr
and
adc
cli
addr16
out
xor
inc
vpsllq
push
repnz
sub
jo
call
inc
pop
pop
pop
cmps
mov
das
test
aad
mov
(bad)
lock
cmp
das
es
add
push
xchg
or
test
mov
or
cmps
push
mov
mov
dec
xor
add
xchg
int3
sbb
ror
daa
xlat
ret
inc
int
sbb
mov
out
movs
fbld
adc
or
dec
dec
sub
push
scas
imul
out
pusha
imul
rcr
dec
call
aaa
sahf
daa
test
loopne
xor
icebp
jg
mov
jmp
pop
pushf
rcl
lahf
inc
sti
or
rol
imul
xchg
in
add
or
jno
mov
sbb
jmp
inc
mov
push
leave
sub
(bad)
push
xchg
add
gs
sub
push
mov
scas
and
add
in
cmp
jne
(bad)
and
push
cmc
sub
aad
push
inc
ror
cmp
cmp
add
popf
in
sbb
mov
stos
mov
bound
pop
mov
and
jg
push
ds
das
jmp
loopne
xchg
jae
rol
cmp
test
enter
cmp
push
fsubr
out
and
out
push
das
fld
cld
mov
test
nop
and
je
call
pop
xchg
inc
js
add
retf
sbb
mov
or
push
xor
and
aaa
and
mov
jnp
dec
ret
jle
loop
in
sub
repz
jl
lds
xchg
jne
inc
pushf
lahf
dec
sub
mov
add
xchg
adc
ja
loopne
sar
dec
push
adc
jae
fisubr
mov
loop
ss
cmp
fidivr
rcl
xor
pop
and
fiadd
shr
loopne
jb
dec
call
xor
lds
dec
jmp
inc
loop
mov
icebp
ret
int3
enter
sub
lock
push
fmulp
xchg
or
adc
inc
inc
fnstenv
retf
push
neg
psrlq
add
es
inc
push
stos
mov
sub
cmp
xor
jle
bound
mov
arpl
mov
(bad)
cmp
mov
mov
out
fdivr
mov
push
push
xchg
(bad)
cmp
js
push
and
push
jmp
rcl
fs
lahf
jl
ror
xor
addr16
jo
ret
popf
push
xchg
jp
daa
vmovss
push
test
mov
jge
les
and
dec
loopne
cmp
jmp
(bad)
cdq
lahf
cmc
and
scas
inc
or
arpl
fnstenv
push
push
lock
es
repnz
pusha
inc
inc
out
out
mov
icebp
rcl
jns
push
out
jns
mov
jge
test
adc
inc
sbb
loopne
scas
cmp
imul
adc
test
sub
or
outs
add
lea
pop
xchg
pop
fidivr
fiadd
xor
out
cmp
xor
scas
dec
push
jo
inc
and
leave
push
jae
xor
movs
outs
fdivp
add
mov
cwde
iret
adc
jnp
mov
fs
out
adc
in
jmp
sub
xchg
push
mov
xchg
cld
add
add
mov
xor
dec
rcr
loopne
test
dec
cmp
and
dec
push
mov
sahf
test
out
pop
xor
and
sbb
xchg
and
into
xchg
in
dec
push
jne
inc
add
or
and
(bad)
pop
leave
xchg
mov
lds
sub
int3
neg
sub
xlat
sahf
test
je
mov
xlat
jge
cmp
xchg
daa
retf
(bad)
and
call
lods
retf
push
ja
dec
arpl
mov
inc
movs
cmps
dec
dec
ins
(bad)
std
cmp
js
je
cld
sub
mov
add
push
mov
test
jmp
in
das
enter
in
shl
fst
and
lahf
jbe
push
mov
mov
mov
mov
xor
scas
test
sub
and
cli
adc
mov
sahf
mov
dec
out
adc
not
fs
and
mov
movs
pushf
mov
call
popa
ins
add
add
addr16
nop
(bad)
repnz
pop
mov
in
jbe
and
retf
mov
inc
imul
aad
call
bound
pop
adc
pushf
das
cmps
in
sub
pop
dec
data16
test
imul
pop
mov
push
or
ror
push
cmp
out
aad
adc
mov
mov
jmp
or
or
sbb
enter
sub
or
inc
outs
push
sub
(bad)
push
stc
pop
sub
push
fistp
test
xor
or
cmps
cmps
daa
push
loope
fidiv
xchg
andnps
push
sub
mov
lea
push
(bad)
sbb
into
repz
sub
mov
mov
xchg
jnp
mov
jp
inc
or
xchg
inc
or
lods
add
mov
push
pop
sbb
and
test
aam
stc
icebp
dec
and
mov
mov
dec
outs
mov
mov
jb
xlat
loope
xchg
mov
fmulp
neg
bound
dec
retf
or
adc
adc
or
pushf
push
push
test
imul
shl
and
push
jnp
mov
fldcw
adc
xor
add
ins
retf
je
(bad)
cmps
popf
xchg
or
mov
imul
dec
rdpmc
js
dec
add
or
add
or
inc
imul
sbb
lock
stos
mov
cdq
pop
adc
std
and
xor
pop
add
aam
xchg
jo
dec
and
jns
aam
out
mov
jg
inc
sbb
rcl
aad
mul
mov
aaa
pushf
push
das
(bad)
test
push
add
pop
stos
int3
push
ret
sbb
jb
cli
jae
cmps
arpl
cmp
xor
jg
mov
jecxz
pop
push
movs
scas
cmp
cmp
xchg
into
shl
cmp
sti
adc
rol
push
and
cmps
or
sub
mov
rcl
mov
adc
inc
(bad)
cld
jnp
xchg
in
jnp
in
jae
mov
popf
test
pusha
jle
mov
adc
pop
push
les
inc
jno
pop
lods
(bad)
rcl
mov
cmp
pop
xchg
(bad)
scas
popf
test
xchg
sbb
(bad)
cmc
mov
or
pop
dec
rep
imul
movs
jl
sub
loopne
or
cmps
lods
jnp
and
scas
push
dec
imul
xchg
int3
call
cwde
jns
js
or
adc
scas
sub
cmp
sub
arpl
imul
lds
iret
(bad)
dec
sbb
repnz
push
dec
pop
or
and
pop
add
mov
pop
imul
jge
cmp
mov
xchg
(bad)
retf
cmp
cmp
test
dec
fdivrp
rdtsc
xor
movs
test
push
xchg
popf
and
ficomp
sub
das
sar
add
dec
push
sbb
(bad)
into
fst
sub
sub
cs
fsubr
daa
jb
xchg
cdq
sub
mov
sbb
mov
add
jle
in
inc
pop
loope
fistp
retf
fcomp
pop
jnp
jl
fstp
ja
je
cld
inc
dec
cmp
mov
or
retf
jb
fist
jbe
jno
in
add
adc
dec
and
arpl
inc
inc
push
inc
(bad)
mov
mov
and
or
(bad)
mov
cwde
rcr
or
cmp
aas
cmps
xchg
mov
test
mov
repnz
outs
cwde
(bad)
hlt
lds
pop
test
dec
ret
scas
add
inc
retf
mov
rol
pop
in
xchg
leave
retf
mov
pusha
or
jl
ret
push
dec
loope
add
test
mov
sbb
push
(bad)
jbe
ds
mov
call
(bad)
pushf
pop
mov
or
mov
add
jecxz
loope
ss
mov
add
imul
cli
in
pop
mov
data16
in
in
fdivr
pop
inc
call
test
mov
pop
call
xchg
idiv
outs
mov
fisttp
and
outs
dec
loopne
cmp
dec
pushf
fwait
outs
pop
int3
mov
pop
jmp
cdq
iret
pop
xchg
add
sbb
inc
gs
jae
movs
ret
out
lock
cmp
inc
pop
rcl
cmp
jmp
call
inc
jae
jmp
adc
repz
(bad)
in
adc
adc
pop
push
mov
sahf
cmp
ret
jg
jno
or
and
and
adc
sub
addr16
aad
aaa
xchg
outs
pusha
adc
inc
push
sub
dec
data16
push
and
cmp
int3
jnp
xchg
mov
mov
mov
mov
jle
xor
(bad)
and
stos
pusha
enter
in
push
daa
pop
popa
iret
pop
sub
cs
fwait
call
inc
pop
sbb
jnp
mov
inc
adc
enter
or
idiv
push
push
sub
fdiv
je
into
(bad)
inc
rcl
mov
(bad)
stos
mov
sub
add
dec
jae
aas
fcomp
shr
arpl
sbb
dec
mov
mov
enter
mov
cmc
hlt
out
mov
(bad)
in
pusha
in
pop
xor
adc
cwde
adc
inc
mov
mov
mov
mov
or
xchg
fnsave
or
popf
mov
int
aaa
in
aad
scas
movs
out
icebp
test
adc
imul
push
mov
mov
retf
retf
fdivrp
inc
fwait
xor
inc
popa
gs
dec
pop
movs
mov
or
pop
ja
cmps
retf
mov
adc
pop
xchg
gs
popf
mov
push
fs
dec
aaa
test
mov
cmp
aas
outs
(bad)
or
loopne
xchg
jno
cwde
xor
dec
xchg
mov
je
jmp
ss
(bad)
push
jle
or
pop
pop
fwait
aam
in
call
mov
rcpps
cdq
sbb
jno
add
ins
xchg
cmps
push
rep
and
daa
xchg
and
push
cmps
mov
retf
xchg
dec
jecxz
mov
repz
aas
push
inc
xchg
aad
or
dec
test
pop
adc
arpl
xchg
mov
dec
arpl
ins
mov
jge
push
dec
nop
call
or
jg
inc
retf
pop
xchg
or
ret
out
nop
into
(bad)
sbb
bound
into
aas
jo
add
into
les
iret
push
test
push
daa
dec
and
mov
xchg
and
xchg
aad
aad
push
inc
(bad)
int3
or
mov
dec
inc
xchg
sbb
pop
inc
sub
jmp
lahf
add
mov
pop
and
shr
inc
pop
mov
adc
lock
jle
(bad)
shl
xchg
and
cmp
hlt
pop
dec
sahf
and
movs
jmp
mov
mov
push
pop
out
ret
jmp
(bad)
repnz
rcl
test
(bad)
aad
inc
sub
mov
lahf
jecxz
(bad)
(bad)
cmp
(bad)
cmp
enter
ins
pop
and
pop
js
sub
sbb
pminub
adc
adc
test
sub
mov
jmp
dec
in
retf
aad
cmps
mov
or
dec
leave
push
sub
add
xor
xchg
push
ja
pushf
xchg
push
and
mov
cs
test
dec
push
fnstcw
aaa
xchg
sahf
cmp
or
test
adc
jae
cli
je
(bad)
and
repnz
gs
out
add
adc
sub
or
add
push
mov
sbb
jbe
mov
xchg
pop
stos
(bad)
adc
mov
jmp
in
push
popf
dec
mov
fadd
or
outs
movs
push
sub
(bad)
out
pop
jns
aam
add
test
fld
dec
mov
fstp
mov
sbb
jle
mov
dec
popf
mov
jbe
and
xchg
call
push
popf
add
mov
and
aas
and
aas
pop
lahf
les
shr
xchg
cmp
dec
movs
retf
jg
adc
sub
inc
and
data16
pop
push
pop
xor
(bad)
loopne
outs
cmovp
push
sbb
sbb
xchg
mov
inc
test
fsubr
scas
call
popf
repz
sub
sbb
inc
stos
xchg
mov
cmps
imul
fnstcw
iret
push
imul
nop
fmul
frstor
fst
pusha
push
shl
mov
bound
add
sbb
ss
adc
jmp
pop
and
jmp
jae
or
xchg
push
popa
lahf
iret
push
inc
mov
cmps
pop
jno
popf
or
jae
jl
sub
xchg
test
movs
das
inc
lds
cmp
push
inc
cmp
adc
mov
mov
aam
sbb
mov
je
fisubr
mov
inc
js
into
push
jp
jne
jmp
inc
shl
push
les
xor
mov
cmc
sub
mov
lock
aas
pop
mov
ret
pop
lock
cmp
data16
and
jl
mov
out
inc
and
mov
jp
jne
sbb
pop
jbe
pushf
xor
out
in
dec
rcr
data16
pop
xchg
(bad)
jmp
fnstenv
jb
adc
dec
sub
call
mov
mov
push
aaa
jo
xlat
adc
push
mov
sub
popa
inc
mov
inc
push
(bad)
neg
xchg
and
xchg
jl
add
add
es
mov
fwait
inc
and
mov
(bad)
cmc
pop
push
mov
sub
dec
into
loop
iret
jecxz
mov
shl
inc
dec
data16
dec
adc
jmp
dec
pop
push
pop
and
out
es
test
dec
test
xor
outs
cmp
xchg
mov
adc
pop
xor
mov
sub
fisttp
jl
test
dec
jmp
das
movs
mov
or
mov
stc
adc
xchg
pop
xchg
fsubr
xor
push
adc
cwde
aam
imul
dec
shl
xor
in
repnz
daa
mov
fadd
mov
push
xor
cmp
out
pop
mov
jne
and
fcom
call
fstp
pop
out
pop
fidiv
pop
dec
fs
(bad)
sbb
push
sub
add
pop
ds
cmp
mov
inc
and
mov
sub
ror
pop
jp
shl
shl
sti
lds
xchg
lods
push
add
gs
ss
adc
call
mov
cmc
in
or
cmps
jmp
(bad)
fidivr
pop
push
scas
sub
lock
jne
inc
sub
(bad)
mov
pop
popa
mov
scas
ret
lods
cmps
push
push
leave
push
ss
adc
dec
test
in
addr16
cmp
retf
pop
pop
xchg
push
das
jb
inc
inc
daa
xor
iret
loope
sub
or
stos
int3
pop
xor
icebp
sbb
shl
xor
shl
add
int
outs
push
in
mov
sub
sbb
movs
mov
ss
xchg
or
pop
imul
mov
mov
cmp
fld
and
das
and
sar
jmp
lods
mov
jge
add
sub
mov
pop
jns
mov
sub
cs
push
int3
cmps
adc
xchg
mov
sbb
xchg
add
mov
sub
aas
xor
push
dec
stos
xchg
mov
dec
jg
in
cwde
xor
push
or
aad
icebp
sub
pop
shl
loope
push
push
pusha
sub
xchg
retf
adc
(bad)
sar
call
les
sub
push
pop
or
xchg
fdivr
fnstcw
ja
jg
push
pop
test
xor
fcomp
pop
hlt
rol
jns
ficom
ret
clc
int3
xor
popa
jp
jmp
ret
lock
ins
and
mov
dec
and
push
retf
stos
mov
xchg
daa
sbb
push
push
mov
test
jno
or
fiadd
int
sti
int3
adc
hlt
adc
jl
xor
push
and
enter
in
mov
dec
dec
ret
(bad)
cs
mov
jae
xchg
xor
mov
dec
adc
test
pop
data16
mov
adc
ja
cld
mov
push
xor
outs
clc
pop
movs
mov
nop
sbb
leave
sbb
sbb
fst
xchg
mov
push
mov
bound
mov
leave
icebp
mov
repnz
pop
mov
(bad)
sbb
mov
inc
aaa
mov
imul
push
fild
fwait
add
fisubr
and
add
xor
xor
imul
pop
arpl
idiv
fstp
out
cmp
mov
xor
repnz
push
iret
iret
sub
pop
call
neg
mov
stos
retf
dec
xor
and
nop
aas
push
xchg
mov
(bad)
out
hlt
(bad)
rcl
pop
aam
mov
fdiv
inc
stos
push
adc
hlt
jecxz
cmp
ror
or
out
mul
adc
inc
mov
retf
mov
lods
jecxz
push
jnp
push
(bad)
and
dec
mov
les
loop
jae
mov
adc
mov
pop
call
sub
call
xchg
shr
out
ins
pop
aad
inc
ins
xchg
inc
xchg
pop
adc
or
mov
mov
aas
and
add
adc
out
push
mov
stos
and
int
and
cwde
lds
shl
retf
adc
inc
and
mov
jp
rol
ret
xchg
(bad)
lea
outs
cmps
xchg
pop
mul
mov
lahf
mov
mov
inc
or
adc
jmp
aam
enter
(bad)
movs
popa
call
pop
aad
rcr
ret
dec
icebp
sbb
movs
xchg
cdq
mov
in
mov
frstor
xchg
xchg
ud0
push
add
xchg
add
sbb
es
jg
in
mov
push
je
cmp
add
fmul
std
mov
sbb
xor
(bad)
stos
jg
dec
mov
test
cmp
gs
or
sahf
inc
add
push
mov
fsubr
neg
or
mov
fld
inc
add
dec
leave
nop
jbe
xor
outs
pop
call
(bad)
icebp
push
xor
sbb
dec
dec
popa
xchg
mov
ins
out
dec
dec
imul
dec
rcl
xor
pop
ret
les
in
xlat
xor
cmp
ss
push
and
out
nop
sbb
mov
mov
mov
pop
mov
jp
arpl
xlat
lods
mov
mov
xor
inc
test
jmp
ret
outs
cmp
leave
sbb
mov
cmp
icebp
mov
add
sub
pop
les
das
leave
cmc
inc
out
dec
or
js
dec
cmp
ret
lock
rol
xor
loop
icebp
in
sub
nop
inc
daa
sbb
adc
dec
lods
jecxz
sbb
(bad)
in
and
jmp
movs
push
(bad)
or
pushf
sbb
repz
ror
(bad)
daa
and
cmps
cmc
ins
jge
(bad)
out
xor
in
lds
ins
cli
popf
and
mov
pop
ror
push
sub
cmps
sahf
mov
or
bound
das
inc
fidiv
jnp
mov
mov
mov
push
into
xor
jg
ror
arpl
pop
shl
int3
sbb
and
fisttp
ret
jnp
leave
pop
inc
outs
jecxz
pop
inc
mov
xchg
shr
fiadd
nop
xchg
call
fadd
mov
jno
(bad)
pop
and
aas
cmps
push
cmps
pop
cwde
ins
push
dec
inc
les
addr16
sbb
xchg
out
das
add
xchg
lods
mov
ja
imul
rol
xchg
test
retf
retf
lods
test
fbstp
push
jecxz
push
std
mov
dec
in
cmp
(bad)
cmp
adc
dec
outs
(bad)
mov
loop
fwait
push
int3
ins
pop
pop
mov
daa
aam
gs
ret
xor
faddp
inc
aad
mov
cmp
clc
daa
cmp
sbb
imul
add
test
mov
repz
or
dec
mov
and
test
retf
ins
pop
fwait
jnp
mov
pop
add
iret
pop
pop
xacquire
test
and
sti
sub
sar
scas
mov
es
popa
xor
adc
popf
test
or
mov
jmp
push
mov
add
jge
fistp
jmp
es
(bad)
scas
cmp
int
sbb
inc
sbb
pop
add
adc
xchg
mov
push
xlat
in
int
cmp
mov
or
inc
sti
push
sbb
jecxz
xchg
cdq
lock
out
mov
loopne
ins
es
dec
push
pusha
ficom
mov
in
jmp
imul
adc
and
cmp
add
sbb
retf
jl
mov
aam
dec
aas
int
mov
mov
jmp
jmp
loop
or
fwait
sbb
jge
sbb
int
stc
jl
fwait
dec
jno
jp
adc
add
jne
mov
sub
mov
leave
fidivr
ja
push
xchg
add
jnp
and
inc
add
inc
aaa
xchg
stos
cli
and
inc
dec
(bad)
mov
outs
je
mov
jp
mov
pop
jg
jmp
sub
mov
add
iret
mov
pusha
lahf
(bad)
fstp
pop
sbb
sub
mov
jo
call
fwait
xchg
popa
in
push
dec
addr16
mov
mov
aaa
xchg
inc
sbb
mov
scas
repz
inc
enter
fimul
dec
jg
cld
sti
movs
cmp
sub
(bad)
in
sbb
dec
push
fsubr
cmps
aad
test
sub
movs
or
dec
in
cli
sbb
mov
clc
cmps
add
retf
jp
nop
cmp
mov
loope
jle
test
mov
add
dec
mov
fcom
adc
push
lods
pop
(bad)
sub
xor
pop
addr16
ror
cmp
cmp
xor
(bad)
in
adc
push
leave
sub
mov
add
mov
jbe
jge
adc
mov
jns
aaa
sbb
iret
jmp
cld
fld
sbb
jg
dec
mov
adc
dec
pop
icebp
add
in
lahf
sbb
aam
ins
mov
push
aas
jne
jae
fnstenv
test
xor
jbe
ss
push
cmp
hlt
xchg
dec
movs
mov
pop
xchg
mov
dec
mov
push
jmp
mov
xchg
xor
test
push
inc
call
test
aad
sub
in
cmp
and
or
shl
jae
scas
fidivr
stos
add
data16
and
cmp
xchg
mov
and
and
mov
(bad)
fisub
retf
dec
in
(bad)
(bad)
das
(bad)
jbe
adc
lods
dec
mov
es
push
in
dec
dec
xchg
mov
rcl
jne
push
and
mov
imul
jecxz
sub
cmp
repnz
imul
lds
scas
pop
sub
mov
(bad)
test
hlt
out
pusha
jl
mov
pushf
or
push
push
jle
(bad)
hlt
in
mov
push
scas
lods
jge
mov
xchg
test
loope
(bad)
enter
cmp
jo
test
jne
scas
repz
jle
sbb
nop
xchg
jecxz
sub
and
add
pop
sbb
or
adc
adc
mov
retf
in
movs
popf
(bad)
icebp
mov
sahf
inc
jno
jecxz
mov
and
mov
push
jb
and
inc
movzx
mov
(bad)
ret
jl
jb
sub
mov
lea
sahf
mov
jl
add
adc
add
pop
push
add
cmp
sub
and
or
fistp
adc
and
or
aad
ins
mov
pop
test
ds
lahf
jp
pop
mov
aad
add
inc
fmul
inc
mov
inc
dec
jae
imul
mov
pop
jle
cmps
and
or
push
mov
lea
inc
mov
sti
add
jb
lods
pop
pushf
adc
fnstenv
gs
lods
movs
stos
cmps
cld
lea
and
inc
mov
xchg
(bad)
js
movs
nop
in
arpl
sbb
ds
test
call
cmp
je
dec
xor
sbb
xbegin
mov
push
xchg
test
(bad)
xor
or
mov
clc
out
mov
xor
jb
sub
xchg
imul
in
in
retf
popa
mov
fidivr
sbb
les
test
icebp
call
sti
cdq
xchg
push
cwde
pop
(bad)
jns
in
fnsave
mov
mov
outs
leave
or
inc
sbb
repnz
mov
(bad)
int3
mov
out
pop
xchg
dec
pop
xor
and
inc
adc
pop
movs
das
arpl
mov
in
lods
jg
loopne
scas
sbb
add
add
add
in
push
adc
mov
mov
icebp
xlat
xchg
out
push
cmp
aad
mov
jmp
fwait
inc
or
fnstcw
mov
sub
jp
out
pop
and
pop
mov
adc
sub
mov
jae
push
push
push
push
leave
repnz
jnp
lahf
add
fwait
jne
ja
sti
in
ret
outs
repnz
ror
out
and
add
sbb
loop
pop
mov
sub
jbe
bound
push
mov
push
cmp
jne
int
cmps
cmps
(bad)
int
(bad)
cld
cdq
mov
ja
push
add
pop
ja
pushf
dec
mov
mov
mov
mov
and
cld
lea
mov
jns
in
vcmpsd
xor
retf
fmul
add
(bad)
mov
cmp
push
or
fild
stos
and
stos
lods
ds
xchg
mov
mov
vunpcklpd
mov
mov
dec
out
xor
(bad)
inc
push
pop
mov
and
out
mov
xlat
call
push
or
test
sub
jp
push
xlat
xchg
loope
out
mov
xchg
mov
cli
xchg
pushf
mov
add
pop
dec
icebp
sbb
in
mov
aas
in
xor
mov
out
adc
jb
aas
outs
call
rcl
xchg
push
iret
(bad)
mov
xor
dec
sbb
jp
adc
cmp
cwde
outs
pushf
inc
fscale
and
add
xchg
popf
cmp
stos
sbb
mov
dec
mov
xor
icebp
adc
lods
loop
cdq
sbb
js
push
ins
mov
pop
jno
rol
add
nop
mov
popa
push
aaa
fist
push
jge
lea
mov
(bad)
mov
pop
out
push
jge
add
sub
inc
or
aad
mov
dec
push
add
jno
mov
fdiv
cmp
(bad)
mov
(bad)
dec
cmp
mov
sub
(bad)
lock
pop
inc
dec
xor
and
xchg
out
icebp
not
hlt
test
mov
sbb
pop
inc
mov
fwait
not
sti
outs
int3
stos
mov
jmp
sub
xor
and
lods
repnz
push
frstor
cmp
inc
pop
sub
loop
and
test
sub
stos
add
adc
outs
xor
data16
cmp
push
ins
or
dec
mov
hlt
adc
outs
aas
fdiv
aam
arpl
retf
xchg
retf
dec
xor
or
cmp
jl
xchg
jns
popa
sub
xchg
sub
mov
in
mov
and
sub
sbb
sbb
inc
data16
ss
loopne
dec
cmp
push
and
test
sbb
xchg
mov
mov
and
jae
pusha
cmp
jnp
out
stos
xchg
xor
fist
ja
scas
mov
add
xor
das
mov
mov
add
fwait
push
fldcw
les
sub
mov
aad
jmp
mov
lea
mov
repz
jg
mov
xchg
jmp
popa
sub
lds
les
jl
imul
adc
stos
shl
sub
mov
or
enter
mov
ret
es
sbb
test
jmp
ret
jge
push
inc
xchg
rol
jmp
mov
xchg
mov
imul
ins
vpmuludq
(bad)
pop
sahf
and
enter
out
dec
stos
pop
hlt
rol
jo
(bad)
sub
pop
sti
retf
arpl
aas
aad
(bad)
fs
xor
fld
push
inc
inc
loope
mov
test
dec
pop
data16
inc
mov
fdiv
mov
push
dec
mov
xchg
arpl
cmps
sahf
pop
div
add
cmc
inc
inc
jne
jle
sbb
inc
out
nop
lods
pop
mov
popa
sets
scas
mov
popa
cli
pop
xchg
(bad)
es
add
jmp
adc
mov
popa
pop
stos
arpl
cmps
scas
push
mov
sbb
out
inc
icebp
add
cli
xchg
jae
jge
inc
jl
shl
pop
add
and
leave
add
jecxz
mov
add
pop
xlat
scas
mov
or
pop
shr
fcom
pop
add
int3
sti
mov
jmp
adc
sub
jno
push
rcr
outs
jecxz
pop
das
into
sti
mov
jg
leave
inc
mov
lock
add
iret
ins
in
dec
(bad)
jno
lods
sbb
and
mov
aad
(bad)
jecxz
adc
fsubp
aas
sbb
movzx
cmp
jle
cmp
and
mov
mul
inc
fiadd
sbb
push
jns
inc
add
sbb
pop
mov
test
mov
rol
xchg
rcr
jbe
out
je
cmp
adc
xchg
rcl
outs
lahf
cli
dec
shr
cmp
mov
xor
fldenv
test
frstor
imul
mov
cmps
inc
add
push
adc
inc
and
sub
jae
sahf
sub
sahf
ret
jle
or
xchg
or
and
mov
daa
mov
dec
(bad)
cs
add
cmp
jecxz
and
(bad)
(bad)
pop
std
retf
das
pop
(bad)
fisubr
add
mov
in
sub
xor
int3
mov
xor
shl
and
out
iret
sub
xchg
sub
cmp
pushf
push
into
iret
dec
pop
movs
aam
fimul
in
jmp
retf
dec
pushf
mov
cmp
cmp
mov
jle
cmp
test
sub
cmp
lea
sub
test
loope
sub
stos
jae
(bad)
cld
stos
fstp
in
rol
jne
(bad)
call
and
adc
push
push
or
arpl
ficom
inc
push
sub
jb
pushf
daa
jle
fdivr
leave
xchg
or
mov
push
inc
xchg
jb
out
ret
xchg
idiv
xor
add
cmps
inc
fcmovu
mov
loop
retf
icebp
jmp
cmps
aas
mov
mov
retf
inc
xchg
inc
mov
dec
popa
imul
(bad)
mov
out
cli
scas
xchg
xlat
and
leave
call
stos
popa
es
fsubr
or
or
push
call
aad
xchg
loop
push
test
scas
inc
pop
cmps
(bad)
dec
pop
out
(bad)
js
in
cmps
push
lods
mov
jb
cld
sti
xlat
sbb
jmp
pushf
mov
mov
nop
retf
sbb
jl
cdq
inc
mov
je
pusha
push
and
mov
and
lock
lock
jnp
fimul
or
(bad)
mov
stos
rcr
cmps
dec
xchg
xchg
mov
(bad)
shr
int3
aaa
jae
loope
jp
cmp
add
mov
cmp
aad
mov
and
stos
shl
jle
jnp
or
mov
sub
in
retf
call
add
retf
jns
push
pop
js
popf
fwait
call
cwde
gs
xor
adc
ret
jecxz
loop
xor
or
xchg
out
jne
add
test
cmps
jp
jnp
pop
test
in
or
sbb
ret
(bad)
(bad)
int3
jae
cmp
outs
test
bound
xor
loop
dec
dec
movs
sbb
ss
les
fst
loop
jmp
jmp
neg
mov
xlat
adc
js
ss
sbb
in
scas
stc
fs
fbld
outs
outs
mov
xchg
adc
jmp
not
fbld
test
pop
out
mov
sub
pop
sti
fstp
aaa
or
ffree
xchg
jnp
test
in
cmc
and
outs
imul
out
iret
mov
sbb
jmp
outs
into
(bad)
mov
push
jno
pop
adc
sar
pop
movs
daa
je
pop
push
das
adc
xchg
scas
cmps
dec
dec
lods
or
sbb
and
dec
dec
sbb
loopne
sub
mov
aad
jae
add
retf
mov
cmp
jecxz
push
sbb
scas
test
jmp
push
out
adc
or
pop
cmp
cmps
lods
pop
cwde
or
aas
scas
test
stos
xchg
sbb
mov
enter
fnstenv
xchg
es
cmp
push
pusha
mov
sbb
(bad)
in
sbb
dec
fnstsw
cmp
xchg
sbb
repnz
pcmpgtd
sbb
stos
inc
stos
int
push
dec
mov
sbb
jb
fs
cmp
mov
or
cwde
sub
test
mov
in
nop
out
xchg
es
test
mov
mov
sar
inc
bound
push
sbb
mov
add
sub
add
mov
xchg
aam
outs
js
test
shl
test
jo
sub
(bad)
cmps
je
jno
or
and
leave
mov
and
cmp
add
mov
icebp
daa
fldenv
sub
repz
dec
rol
and
dec
add
iret
sbb
aad
adc
lock
dec
jnp
adc
xlat
dec
jecxz
adc
retf
ins
imul
add
mov
inc
iret
fidivr
rcl
fnstsw
sbb
rol
mov
dec
or
stc
add
fnsave
and
adc
dec
repz
imul
xchg
inc
imul
fisubr
(bad)
int3
ins
jne
sahf
sar
xchg
jnp
push
aas
push
out
ficomp
fwait
jo
add
cmps
in
nop
movs
xor
lods
popf
std
and
aaa
lods
loop
enter
out
mov
mov
sub
sub
pop
(bad)
outs
les
adc
jecxz
adc
repnz
or
sbb
xor
inc
sbb
lds
jo
push
subps
adc
jge
nop
lods
lock
nop
inc
adc
push
mov
adc
shr
cdq
push
loope
dec
clc
mov
les
add
(bad)
ins
add
out
test
in
in
pop
imul
stos
sbb
xchg
call
mov
aas
test
jle
push
sbb
sub
fistp
or
(bad)
ror
push
mov
stc
xchg
retf
ja
popa
daa
xchg
xchg
sti
mov
cmp
and
test
stc
and
pop
sub
adc
into
add
dec
gs
cmp
xchg
fisttp
pop
mov
sub
and
shr
call
push
dec
in
jmp
mov
ror
lods
push
push
mov
(bad)
fwait
adc
mov
sub
(bad)
push
jecxz
(bad)
xchg
dec
push
test
lea
imul
jae
mov
cdq
mov
cmp
pop
test
scas
xor
jg
mov
vhaddps
ja
ret
and
pop
adc
cwde
hlt
sub
in
dec
dec
fild
bound
cmp
fsubr
ror
(bad)
sub
hlt
movs
push
and
mov
(bad)
dec
and
cmp
addr16
test
mov
cli
(bad)
adc
je
mov
mov
cwde
leave
mov
js
dec
push
xchg
cmps
call
jle
pop
addr16
or
shl
call
imul
aas
pop
stos
sub
mov
call
xchg
outs
jp
mov
es
ds
fisubr
and
shufps
cwde
mov
bound
fwait
das
fisub
mov
inc
dec
sbb
pop
(bad)
in
mov
outs
retf
mov
test
pop
call
xor
jmp
or
mov
fs
scas
push
inc
loopne
pop
adc
cmps
mov
mov
sub
ins
push
leave
out
outs
mov
xchg
mov
test
xor
adc
aad
dec
in
mov
nop
jg
pop
loop
dec
xor
jns
and
(bad)
clc
mov
jo
push
xor
fidiv
xor
ins
aam
cmp
shr
mov
pop
push
jecxz
into
prefetch
(bad)
xor
push
stc
adc
test
pop
mov
jmp
mov
mov
aam
sub
test
(bad)
cmc
mov
and
dec
or
jmp
jge
jnp
jg
jno
or
adc
push
xchg
sbb
add
out
cmp
pop
pop
mov
sbb
cwde
inc
inc
sti
loope
xchg
sti
popa
xor
sbb
pop
loope
jne
aad
jecxz
fs
inc
lea
add
jno
rcl
std
ret
stos
cmp
js
retf
movs
fucomip
cdq
in
sub
and
retf
add
inc
sbb
mov
dec
adc
pop
mov
and
cs
(bad)
lock
or
and
nop
and
addr16
mov
les
sahf
hlt
leave
jns
test
inc
cvttps2pi
inc
cmp
sar
loopne
pushf
in
mov
inc
sub
loop
call
std
repz
pop
imul
repnz
pushf
xchg
pop
bnd
gs
ror
out
sbb
das
add
xor
jmp
sar
ror
sub
ins
je
stos
cmp
imul
jo
mov
add
retf
adc
out
sub
out
fld
dec
cmp
mov
pop
push
(bad)
in
jg
mov
je
dec
test
arpl
and
push
or
jl
loop
hlt
jmp
enter
push
sbb
test
or
out
sbb
pop
and
and
aaa
mov
lods
push
jecxz
and
sbb
mov
jo
cdq
sub
xor
jo
loop
adc
adc
(bad)
fstp
and
aam
inc
mov
xchg
jo
cdq
inc
add
dec
jmp
test
jmp
push
push
adc
stos
xor
push
loop
mov
jecxz
add
cmp
test
outs
out
int
adc
mov
jbe
imul
adc
pop
cmp
(bad)
test
into
jg
mov
mov
sub
adc
dec
add
or
push
pop
std
push
pop
mov
cmps
sub
mov
enter
int3
js
in
aad
push
cmp
add
xor
add
scas
out
xchg
xchg
jnp
mov
call
mov
pusha
outs
and
sahf
repz
outs
inc
jnp
pop
cmp
sbb
push
xchg
inc
jno
mov
gs
sbb
push
popa
sub
lock
popa
(bad)
gs
and
test
or
(bad)
out
jecxz
cmps
loopne
add
mov
xchg
or
outs
inc
add
and
fisub
popf
jns
inc
push
ins
sub
call
xchg
repnz
sbb
adc
pop
xor
sbb
adc
inc
enter
jb
shl
push
mov
mov
xor
inc
mov
fisttp
aas
test
xor
stos
add
jge
or
rol
cmps
icebp
cmp
lock
iret
clc
in
mov
push
mov
fstp
adc
jp
xor
cmc
lods
sub
dec
push
xor
hlt
push
pop
out
sbb
xor
ss
arpl
jge
sbb
and
test
(bad)
loopne
or
retf
pop
push
inc
mov
es
mov
aam
jo
jle
push
loope
clc
popa
mov
aaa
inc
cmp
(bad)
int
lea
or
dec
and
push
mov
dec
sub
outs
cmp
clc
cdq
mov
mov
lods
retf
add
add
dec
out
mov
push
rcl
pop
xor
mov
mov
or
inc
cs
cmps
call
test
xor
popa
stos
pop
arpl
adc
sti
or
in
out
mov
fs
out
frstor
lods
push
mov
vmovaps
adc
push
jb
xor
inc
mov
mov
popa
lahf
add
sub
stos
addr16
nop
push
bound
out
xchg
push
inc
scas
fwait
loop
sbb
push
test
pop
push
mov
push
fild
int
sbb
jp
in
dec
jmp
mov
jl
push
ror
rol
adc
dec
sub
sbb
pusha
or
add
mov
sbb
and
lahf
mov
inc
jg
push
pop
cld
cmp
xchg
mov
ret
movntps
push
fmul
inc
shl
push
xchg
(bad)
dec
cwde
and
jmp
xchg
add
and
cmps
pushf
gs
cmp
stc
daa
retf
add
frstor
inc
shr
ds
xor
les
int
mov
out
sbb
ret
call
sbb
pop
dec
scas
sbb
mov
es
sbb
mov
add
or
sar
jmp
or
or
sbb
rcr
cli
aad
inc
std
dec
sbb
or
dec
sub
jb
pop
test
cmp
mov
cmp
sbb
xchg
ret
je
inc
xor
cmp
ret
push
xor
inc
addr16
int
jnp
and
sbb
ins
js
add
or
or
cmc
retf
inc
xadd
cmps
and
jbe
xor
pushf
or
add
cmp
and
lock
or
sbb
std
sbb
cmp
rcr
movs
xor
lock
or
pop
dec
or
pop
popf
push
mov
mov
pop
pop
ins
mov
and
(bad)
ret
pop
jb
call
in
pop
sub
lods
adc
shr
pop
mov
int3
add
daa
lock
mov
inc
das
push
cwde
adc
or
repz
cmp
push
sub
out
cdq
je
push
xchg
das
dec
mov
das
je
enter
cmp
adc
mov
pop
gs
fwait
jmp
pop
pop
ja
push
mov
mov
mov
push
scas
or
lods
xchg
(bad)
hlt
je
jg
arpl
xlat
sub
(bad)
dec
nop
mov
mov
sbb
stc
test
test
add
jo
mov
mov
jb
mov
les
or
outs
or
out
cmps
cmp
mov
pop
adc
dec
cdq
lods
xor
movs
sti
bnd
inc
pop
jle
mov
outs
xchg
jne
arpl
mov
adc
xchg
xor
aas
add
lock
and
add
stos
xor
jo
shl
cmp
repz
sbb
popf
xor
mov
adc
pop
lds
out
clc
dec
mov
hlt
mov
or
hlt
cmp
cmp
sbb
ror
and
scas
pop
cwde
repz
leave
and
mov
arpl
hlt
aam
pop
fwait
adc
pop
inc
addr16
jge
pusha
lea
div
push
dec
cmp
push
mov
std
mov
inc
push
sbb
rep
movs
sbb
mov
jbe
lods
in
jp
push
mov
(bad)
sbb
fistp
jge
pop
int3
adc
shl
stos
inc
loope
test
push
cmp
dec
or
aas
aad
in
mov
add
sbb
or
(bad)
test
fwait
or
pop
adc
clts
jmp
(bad)
push
ret
xor
mul
jb
lock
pop
jecxz
in
pop
and
repz
cmp
jno
ror
imul
sar
mov
js
aas
sbb
xchg
cmp
jbe
(bad)
in
fisub
iret
arpl
stos
or
mul
mov
shr
daa
inc
sub
test
xor
std
inc
int3
pop
sub
or
pusha
cmp
mov
pop
ss
(bad)
out
mov
dec
sbb
sbb
add
mov
inc
dec
mov
retf
fwait
mov
add
jb
lahf
repnz
pusha
inc
lock
fcom
shl
mov
dec
data16
sbb
aam
add
bnd
or
in
sbb
cwde
adc
mov
adc
mov
jns
xchg
mov
pusha
lods
adc
dec
adc
or
cs
les
pop
push
inc
int3
aaa
xchg
leave
mov
add
je
adc
pop
fnstsw
retf
sub
stos
cmp
aam
and
sbb
sti
jp
xor
sbb
mov
adc
mov
inc
push
mov
fwait
outs
xchg
ins
xor
jecxz
ja
mov
push
jno
xchg
add
mov
scas
mov
inc
push
sbb
je
out
adc
xchg
push
add
mov
pushf
lock
sti
sbb
add
ror
push
unpckhps
dec
xchg
jno
pusha
aaa
push
sub
and
clc
jae
push
dec
push
adc
cdq
inc
push
sbb
or
(bad)
sbb
inc
push
je
xchg
cs
icebp
push
xchg
stc
add
(bad)
mov
fistp
(bad)
loopne
lahf
mov
cmps
popa
outs
jg
leave
test
aad
ret
cli
push
div
xchg
mov
mov
push
push
jmp
imul
icebp
jle
mov
sti
or
mov
xchg
push
lds
aad
and
mov
dec
add
lahf
jne
pop
mov
cs
jno
push
add
lods
inc
(bad)
adc
retf
pop
xor
loope
dec
cmp
cli
out
mov
mov
xor
mov
outs
adc
scas
jns
sbb
mov
or
loop
scas
mov
xor
pop
(bad)
dec
scas
cdq
jbe
mov
rol
mov
and
stc
pop
std
and
rcr
leave
xchg
push
pop
mov
clc
dec
cld
dec
and
and
shr
cmc
mov
clc
pusha
push
sub
push
shr
int3
push
(bad)
fdivr
mov
mov
div
je
aas
pop
lock
fs
aam
pop
and
imul
pop
push
jo
push
sbb
jecxz
mov
sbb
or
xor
jg
xor
jle
or
cmps
aaa
cmp
loopne
or
fldenv
pop
cmp
sub
push
xor
xchg
adc
(bad)
(bad)
push
jle
sub
sub
and
rcl
mov
push
jge
stc
sti
push
cld
lock
out
stos
in
out
sbb
ror
ds
(bad)
enter
cmp
sbb
jae
sbb
clc
das
out
add
por
(bad)
cmps
mov
xchg
leave
xor
dec
pop
xchg
int3
scas
in
ret
int3
jl
mov
scas
xchg
adc
mov
nop
sub
xchg
lea
jne
retf
test
cmp
cmp
(bad)
(bad)
cmp
and
dec
pop
xchg
cmp
jnp
mov
mov
xchg
jo
bound
jae
cli
es
push
dec
cmp
ins
fidiv
mov
adc
xchg
adc
cmp
or
(bad)
popf
cmp
enter
bound
mov
imul
sti
push
call
and
or
fild
or
dec
sahf
in
shl
sar
cmp
test
pop
xchg
fsubr
jmp
sahf
ret
add
mov
xor
pusha
mov
icebp
cli
ret
fwait
sub
sub
(bad)
pop
xchg
and
cmps
push
xor
fmul
xchg
stc
sbb
aas
or
sbb
mov
(bad)
sbb
test
int3
popa
cmc
rol
xchg
out
les
not
clc
mov
out
aam
jb
add
aaa
fldenv
and
shl
xor
push
mov
add
mov
addr16
mov
mov
lods
lea
mov
(bad)
dec
mov
push
fwait
stc
inc
rcr
sub
repnz
icebp
mov
mov
push
xchg
mov
jle
and
xor
retf
dec
bound
mov
inc
mov
adc
inc
push
jne
aad
sti
cdq
stc
sbb
push
push
add
scas
pop
ret
inc
lods
stos
lods
mov
push
dec
inc
(bad)
jne
jb
movs
aad
cdq
xchg
lods
dec
mov
stos
add
push
je
pop
jmp
mov
sbb
push
mov
push
xchg
fsub
cmp
xchg
jge
sahf
inc
sbb
mov
mov
into
(bad)
rcr
movs
cmp
aas
adc
les
jp
jl
jge
sub
jecxz
test
or
test
adc
ret
ins
and
mov
push
fadd
test
out
dec
xchg
sub
es
iret
xchg
mov
movs
xchg
mov
mov
inc
inc
inc
cdq
dec
jp
rcr
(bad)
cli
lods
(bad)
mul
cmp
test
mov
xor
rcl
int3
sub
icebp
adc
xchg
inc
sbb
fidiv
push
fist
jle
je
retf
sbb
iret
pop
or
sbb
out
loope
xchg
ret
out
sub
xsaveopt
lods
dec
test
ds
lods
pop
mov
jae
sub
dec
dec
mov
iret
add
or
daa
aas
sub
test
sub
dec
ds
lock
popa
sahf
rol
int3
pop
xchg
pushf
pop
xchg
adc
add
int3
leave
(bad)
int
add
sub
cmc
into
in
loopne
pop
dec
add
out
out
adc
dec
adc
ret
repnz
xor
stos
and
mov
popf
sub
fild
push
ins
aaa
push
add
push
stos
mov
jl
ss
push
neg
out
push
adc
xchg
aas
hlt
pop
dec
or
(bad)
xlat
inc
sbb
(bad)
push
adc
jmp
scas
stos
and
js
jno
in
fucomip
and
xor
std
leave
div
stc
fwait
mov
mov
(bad)
mov
(bad)
push
xor
arpl
test
and
sbb
inc
lock
movs
jmp
inc
and
mov
jbe
je
and
inc
pop
pop
push
push
es
pop
jg
out
out
addr16
dec
mov
test
movs
push
enter
jmp
xor
shl
inc
call
or
xchg
dec
mov
mov
add
pop
(bad)
cmps
stc
out
add
fimul
cmp
inc
or
add
mov
(bad)
and
push
xor
fistp
ret
stc
and
repz
adc
(bad)
lock
fstp
gs
stos
lods
stos
arpl
sub
popa
cmp
pop
xlat
pop
ss
xchg
adc
jno
or
cmps
int
mov
mov
imul
jbe
sahf
cmc
and
sti
mov
xchg
adc
out
imul
push
mov
fcmovnu
wrmsr
mov
in
popa
enter
mov
fdivr
cwde
xor
daa
ins
mov
cld
(bad)
rol
test
sbb
cli
mov
mov
mov
jmp
add
push
xchg
cs
mov
jl
test
and
ret
cli
popa
repnz
repz
jmp
imul
xlat
rcl
jmp
push
test
pop
mov
cmp
xor
jmp
and
push
or
mov
mov
out
out
xchg
mov
pop
push
outs
in
mov
repnz
sub
(bad)
arpl
adc
scas
mov
pop
pop
fimul
pushf
and
jecxz
sbb
std
sub
xchg
sbb
sbb
jge
inc
imul
popf
aad
mov
mov
pop
jl
inc
inc
(bad)
imul
push
sub
ret
(bad)
jbe
enter
mov
out
(bad)
div
aam
cmp
xor
fsin
xor
jp
add
mov
sbb
cwde
mov
xor
in
xchg
lods
addr16
adc
mov
jns
sbb
dec
fdiv
xor
cmp
addr16
daa
shl
mov
and
nop
movs
push
add
add
xchg
int3
jl
es
pusha
adc
xlat
popf
mov
jnp
xchg
fst
sub
sub
xchg
jmp
dec
dec
mov
aam
pop
into
out
push
cmp
pop
adc
mov
imul
int
push
add
icebp
mov
mov
lea
pop
jb
mov
jg
cmps
test
pop
push
xchg
js
cli
ja
int
imul
es
lds
sti
cdq
sbb
and
jnp
mov
mov
cmp
xchg
inc
pop
mov
js
loop
pop
xchg
dec
retf
pop
xchg
ret
and
or
sub
shl
fisub
mov
mov
jmp
mov
xlat
das
scas
push
xor
pop
stos
mov
aaa
scas
pushf
scas
push
fidiv
aam
mov
mov
inc
clc
mov
lods
push
clc
aad
mov
dec
daa
lods
repnz
jmp
and
shl
add
mov
iret
add
(bad)
outs
xlat
pop
aam
mov
sti
push
push
adc
or
sar
movs
xor
test
loopne
data16
(bad)
(bad)
aad
mov
pop
outs
mov
hlt
adc
pop
shl
mov
inc
mov
pop
dec
call
out
in
inc
cmps
jecxz
mov
cmps
lods
mov
loope
push
mov
arpl
sbb
cmp
cmp
adc
jae
mov
xchg
daa
jo
add
aaa
pushf
pop
(bad)
push
loopne
dec
push
ins
sub
mov
(bad)
push
(bad)
shl
aas
ins
cli
xchg
mov
cdq
inc
cmc
movs
cmp
pop
es
jecxz
pop
movs
xchg
inc
mov
test
addr16
push
int3
pop
fisubr
mov
xlat
add
dec
push
sub
mov
rol
mov
(bad)
jmp
addr16
retf
adc
das
les
push
pop
cmc
fxch
xchg
dec
loope
push
lods
stc
mov
cmp
jmp
popa
jg
mov
mov
add
push
inc
imul
inc
punpckhbw
shl
pop
xchg
push
mov
(bad)
mov
bound
sub
jnp
dec
mov
imul
inc
pop
loop
out
add
adc
fisttp
add
xor
pop
call
dec
or
cmp
fld
dec
jl
cmp
inc
ficomp
cs
ja
add
xor
cmc
push
sbb
adc
inc
mov
imul
jl
or
fisttp
js
in
cmps
fisubr
test
xchg
aas
and
mov
ret
stos
xor
pop
pop
or
repnz
cwde
xchg
xor
clc
push
dec
outs
mov
push
lea
pop
mov
leave
add
call
nop
add
or
sar
int
lds
add
pop
fistp
stc
cmp
push
cmps
mov
mov
sbb
xlat
rcr
push
iret
js
fs
(bad)
rcr
jge
or
sub
fldcw
xchg
aas
cmps
or
push
mov
or
dec
add
aaa
jbe
push
repnz
xor
imul
jno
mov
sub
popa
js
xor
mov
movs
xor
add
sbb
sub
sub
pop
das
loope
in
push
mov
call
add
sub
cdq
shl
mov
(bad)
jmp
aaa
ret
nop
inc
adc
jmp
call
pushf
push
test
or
mov
pop
dec
retf
stos
stc
adc
js
dec
je
inc
mov
arpl
xchg
cmp
and
pop
jl
bound
es
ficomp
mov
loopne
inc
cmp
jge
push
sbb
jns
sbb
imul
or
sub
xor
in
jo
ins
sti
dec
fstp
xor
jae
add
jmp
push
push
loop
sar
mov
add
mov
and
lahf
enter
arpl
ficomp
push
xor
aas
xchg
mov
sbb
jge
bound
inc
xchg
fiadd
and
pop
sub
jl
mov
push
push
and
or
xchg
aaa
mov
(bad)
faddp
jnp
and
es
int
call
es
push
outs
into
fcomp
shl
sbb
xchg
test
cdq
jp
les
sub
sub
(bad)
jg
shl
mov
mov
cmp
inc
pushf
leave
jge
inc
test
cs
test
cmps
adc
xchg
or
test
out
inc
cmp
xor
jmp
cli
push
pop
std
xchg
lea
(bad)
nop
push
inc
mov
push
sbb
mov
fsubr
pop
mov
push
lock
jo
dec
mov
push
aad
push
xor
dec
(bad)
add
push
(bad)
sbb
outs
mov
les
dec
rol
cmp
pop
xchg
pop
ret
cmp
mov
outs
mov
(bad)
leave
je
inc
mov
ss
dec
pop
mov
push
and
xchg
jge
xor
(bad)
dec
(bad)
cmp
push
push
dec
cmp
mov
daa
in
jnp
sbb
mov
xor
arpl
and
jg
test
jge
ret
test
pop
jle
aaa
and
ficomp
mov
mov
cmp
in
mov
dec
hlt
inc
dec
push
daa
push
cmp
add
ss
lds
dec
mov
add
xor
push
sar
mov
call
out
mov
int
dec
repz
pop
fs
mov
fbstp
loope
inc
stos
jp
pop
pop
cmp
and
(bad)
nop
push
fcomp
retf
aaa
mov
dec
ins
in
mov
mov
pop
les
pushf
jae
call
jns
pop
dec
cdq
jl
(bad)
xor
fsub
sbb
sbb
fnstcw
xchg
xor
mov
sbb
pop
mov
mov
(bad)
jle
xor
nop
pop
push
shl
cmp
rol
add
frstor
sbb
aad
sbb
retf
outs
pcmpgtw
jl
xor
test
and
enter
pop
inc
jg
aas
sub
sub
inc
loope
cli
test
icebp
cwde
pop
lahf
pop
or
mov
jbe
jno
test
data16
add
es
jmp
sub
mov
pop
xlat
loop
adc
iret
inc
push
pop
scas
ja
mov
(bad)
inc
pushf
shr
mov
mov
adc
mov
dec
and
xchg
test
or
xchg
scas
into
dec
dec
and
loop
mov
mov
pop
mov
stos
pop
int
adc
pusha
mov
xor
shl
sub
(bad)
pop
xchg
int
aas
in
clc
loopne
jnp
popa
mov
call
adc
repz
loopne
jb
ret
repnz
xchg
sub
out
sub
aam
loop
dec
sub
inc
inc
and
mov
xchg
aam
in
xor
popa
shl
into
push
lods
sbb
xor
cmp
add
jmp
call
inc
in
pop
add
add
pop
popa
mov
in
ins
and
jo
test
cmp
lods
push
sub
cmp
mov
push
imul
mov
(bad)
pop
or
stos
mov
shl
xchg
jbe
mov
(bad)
loop
shr
dec
jbe
addr16
dec
pushf
loopne
popf
out
add
mov
jmp
add
mov
mov
add
movs
adc
lods
push
xchg
adc
pop
sbb
xor
leave
jbe
stos
mov
mov
push
push
fst
mov
mov
retf
jnp
icebp
outs
sar
xor
ret
xor
gs
inc
test
sbb
addr16
enter
clc
sbb
bound
mov
pushf
imul
add
(bad)
inc
push
imul
fsub
aam
jb
or
call
outs
mov
rcl
xor
dec
jo
fs
mov
loopne
enter
xor
popf
icebp
cmps
or
push
adc
add
in
neg
int
nop
leave
xchg
hlt
mov
test
add
(bad)
es
add
movs
inc
sub
lea
dec
dec
add
mov
in
and
aad
dec
(bad)
inc
mov
xchg
jp
jae
icebp
sbb
or
aad
movs
pop
xchg
ret
push
scas
imul
jbe
outs
cmp
and
and
add
fcmovu
imul
lahf
daa
add
pop
leave
movs
clc
jae
(bad)
loopne
popf
ret
clc
out
repz
fisttp
xor
pop
jne
mov
or
mov
sbb
inc
pop
pop
test
inc
xchg
mov
js
in
in
std
pusha
ss
fldcw
scas
dec
ficom
imul
retf
xchg
xchg
outs
dec
mov
(bad)
mov
or
cmps
imul
jmp
inc
sub
add
nop
mov
or
fmul
(bad)
retf
mov
pop
and
sbb
push
push
stc
pop
arpl
or
mov
pop
aaa
inc
xchg
enter
xor
xor
and
or
push
xor
adc
iret
outs
adc
in
xchg
(bad)
push
fisttp
scas
in
pop
cmp
arpl
cmp
cld
ret
mov
pop
mov
or
call
dec
add
sbb
int3
or
movs
mov
rol
scas
xor
mov
stos
arpl
sbb
imul
out
stc
sub
in
call
sub
daa
inc
adc
pop
scas
outs
xchg
xor
adc
mov
inc
lea
ins
scas
fdivr
or
jb
mov
xchg
sar
ins
mov
dec
sub
(bad)
jae
cmp
outs
jle
sub
xor
ret
and
add
fist
test
test
or
mov
xor
dec
mov
arpl
ret
cmp
addr16
and
bound
mov
adc
retf
xchg
in
add
jp
outs
cmc
pop
cmp
xor
stc
jg
outs
repnz
pop
and
add
and
add
ds
fstp
xchg
push
test
popa
add
hlt
cld
jae
test
adc
repnz
inc
add
in
cmp
add
rol
mov
into
or
cld
cmc
mov
mov
mov
jecxz
inc
dec
sub
adc
das
fmul
dec
xlat
mov
xor
dec
gs
sahf
mov
mov
mov
popa
sbb
ret
mov
adc
(bad)
jmp
pop
mov
rol
cs
movs
add
hlt
mov
inc
mov
popa
add
(bad)
mov
stos
or
xchg
jb
or
jb
hlt
add
sbb
cmp
sbb
and
stos
sub
inc
fldenv
fs
aas
pop
imul
lahf
out
sub
lds
and
push
inc
adc
inc
popf
mov
mov
and
lds
mov
sub
pushf
enter
sub
add
mov
daa
mov
xchg
lods
xlat
jns
sub
jmp
js
aas
ror
or
rcl
xchg
xor
inc
dec
dec
xchg
hlt
mov
and
pop
vpackssdw
inc
inc
mov
and
mov
pop
xchg
dec
or
and
inc
test
leave
movs
sub
push
in
fs
xor
cs
out
nop
jbe
adc
jo
push
and
and
dec
pop
(bad)
imul
in
ret
xchg
mov
ror
je
movs
sub
out
int
bound
xchg
jmp
sub
inc
cmp
sub
mov
cmp
mov
jae
and
mov
iret
test
daa
in
movs
dec
cmp
pop
cmp
push
loopne
test
imul
fldcw
shl
std
test
es
mov
retf
(bad)
cld
lea
ja
add
xor
inc
xor
js
jo
mov
add
inc
cmp
out
and
test
inc
or
test
xor
and
xor
mov
shr
jl
and
jmp
dec
in
daa
into
adc
cmps
fs
xor
mov
sbb
out
xor
sbb
test
retf
popa
shl
add
js
mov
test
clc
aam
dec
push
or
and
cmp
jne
data16
mov
fdivr
imul
mov
xchg
repnz
lea
nop
cmp
fstp
out
lods
test
outs
ins
add
jecxz
push
imul
outs
mov
and
adc
inc
fimul
cmp
or
fwait
popa
aas
pop
cmps
out
cmp
mov
lahf
sub
aas
inc
mov
stos
xchg
mov
movs
inc
inc
cmps
test
stos
outs
dec
and
mov
sar
adc
sbb
sub
shl
in
ret
sub
cmp
dec
hlt
jge
push
ret
dec
lea
sub
imul
fsub
and
inc
and
shl
mov
inc
cmp
and
or
rcr
lahf
es
xchg
jp
test
mov
test
sub
clc
imul
ror
mov
out
in
jle
cmp
popf
ret
mov
sub
out
(bad)
jmp
add
mov
jns
jno
cli
rcr
mov
cmp
js
lahf
and
sbb
jge
je
add
jb
adc
adc
and
jae
xchg
clc
or
cmp
test
pop
xchg
je
fimul
and
rcl
nop
pop
daa
pusha
dec
icebp
stc
sub
lds
out
add
pop
pop
mov
mov
ret
jne
push
and
dec
stos
iret
and
es
add
and
int3
or
jnp
lahf
xchg
retf
movs
(bad)
cmp
jo
js
in
fs
out
add
pop
cwde
sbb
jmp
addr16
mov
jg
cmp
jl
cmps
inc
pop
outs
cmp
outs
xor
or
jle
push
sahf
test
dec
enter
push
mov
fmul
cmp
mov
fild
daa
jl
pop
fsubr
ja
in
bound
cmp
fs
add
jp
call
and
outs
fsubr
pop
add
into
es
jo
mov
dec
mov
cli
fist
jp
ja
ja
pushf
xor
jmp
adc
cmp
in
cwde
(bad)
stos
cmps
mov
cmps
jecxz
leave
mov
stc
and
dec
sub
mov
push
outs
lock
lods
jne
jg
mov
jne
int
cmp
dec
mov
pop
mov
dec
int3
data16
out
sbb
mov
cmps
add
das
jne
fadd
or
fwait
scas
mov
sub
add
and
lahf
sbb
push
scas
(bad)
out
arpl
clc
aas
(bad)
int3
fmul
and
or
push
ret
push
push
or
jne
push
xchg
pushf
or
psubw
ins
sbb
sub
and
ins
pop
daa
shl
inc
adc
mov
ins
and
cmp
shl
cmp
cmp
das
push
xor
clc
pop
or
sar
push
sub
les
push
adc
shl
pushf
adc
or
loopne
and
jg
jno
popa
loop
in
daa
and
retf
or
idiv
push
or
sbb
loope
mov
mov
pop
pop
fcmovbe
mov
fisttp
mov
icebp
jne
or
retf
inc
(bad)
mov
stc
(bad)
js
xor
or
inc
pop
adc
mov
cdq
adc
movs
ds
pop
movs
in
int
xchg
repz
mov
cmps
cmp
lds
jnp
cmp
jle
aad
push
leave
push
mov
mov
sti
ss
shl
push
pushf
pop
pmaddwd
js
into
ins
jl
or
out
cmp
call
sbb
push
call
sbb
jp
sbb
and
pushw
mov
inc
jg
fdivr
jnp
sub
cmc
xor
push
mov
test
pop
data16
int3
lods
sbb
mov
(bad)
ins
dec
clc
fst
pop
out
dec
jo
or
and
xchg
int
push
leave
or
fisub
sgdtd
jae
and
fstp
and
jne
in
es
add
jae
cwde
scas
inc
xor
push
popa
das
mov
cmp
(bad)
ror
or
xchg
push
neg
pop
ret
ret
jge
(bad)
dec
and
cmps
sub
(bad)
ds
or
cmovs
test
fyl2xp1
rcl
mov
xor
mov
out
lea
hlt
ins
aad
(bad)
inc
rol
mov
fs
pop
mov
das
and
and
ja
cwde
jo
adc
jp
pop
dec
xchg
test
inc
mov
inc
cmp
push
add
and
fsub
(bad)
pop
pop
and
pushf
or
adc
mov
add
fcmovnu
push
sbb
xchg
sar
jecxz
(bad)
jmp
arpl
test
mov
mov
cmps
inc
clc
pop
enter
aas
inc
lods
inc
clc
mov
fs
pusha
mov
aad
mov
and
(bad)
out
adc
adc
loope
sub
repz
dec
push
xchg
dec
cmp
bound
pop
int
es
sbb
inc
sub
inc
pop
push
sub
or
test
inc
mov
(bad)
mov
jno
inc
repnz
adc
sub
and
mov
daa
movs
js
jle
dec
jge
cmp
jns
jo
adc
add
inc
ins
int3
inc
ds
and
jmp
push
sub
push
or
nop
mov
ds
ss
in
sub
scas
jo
call
outs
test
fst
mov
or
lds
and
fidivr
add
jne
mov
dec
(bad)
daa
test
aas
cld
sbb
enter
fisttp
push
mov
push
push
stos
cmp
sbb
out
add
movs
cmp
dec
in
cmp
mov
fsubr
ins
iret
jno
jno
inc
aad
not
dec
mov
push
int
dec
popf
scas
adc
adc
mov
clc
sub
dec
mov
cmp
fs
xor
aas
ret
pop
sub
dec
ror
sbb
push
lods
fsubr
or
inc
movs
test
cmps
add
jno
in
push
pop
jb
arpl
lahf
retf
jae
dec
cs
xor
pop
jp
push
shl
icebp
popf
or
pop
scas
out
repz
or
push
daa
retf
or
adc
outs
jg
dec
data16
punpckhdq
push
std
sbb
or
test
pop
jg
mov
push
pop
add
jl
cmp
or
sub
pop
imul
xchg
int3
fist
adc
jg
push
cmps
imul
or
jo
imul
add
dec
add
push
leave
xchg
sti
test
lds
gs
mov
push
dec
out
jle
cmp
and
enter
cmps
xchg
push
hlt
adc
pop
aam
icebp
adc
out
iret
mov
jmp
mov
push
push
xor
mov
lds
pop
sbb
pop
add
or
sbb
lods
fptan
push
inc
inc
addr16
div
fisttp
lahf
sbb
sbb
push
cld
dec
shl
push
movs
cmps
sub
test
xlat
jae
mov
sub
dec
fst
movs
jo
das
std
push
xchg
inc
sahf
(bad)
addr16
out
mov
dec
xchg
mov
xchg
test
mov
xlat
pop
les
pop
out
ins
out
cwde
push
and
push
cmp
and
dec
xchg
jle
xchg
pop
jb
dec
jno
wbinvd
or
adc
xchg
push
xchg
inc
fnsave
cmc
icebp
addr16
sub
jmp
std
popa
addr16
iret
nop
fs
in
inc
mov
ds
pop
or
in
retf
imul
scas
leave
push
call
dec
idiv
dec
loop
mov
or
xor
xor
cmc
outs
xor
mov
add
kmovb
cld
ja
cmps
push
repz
int3
cwde
pop
jno
sbb
adc
jb
loop
into
xchg
adc
cmp
mov
popf
stos
xchg
xchg
cs
aad
(bad)
in
mov
lahf
shr
in
inc
push
fmul
daa
mov
mov
fstp
or
rcr
sub
sbb
sbb
sbb
(bad)
ror
inc
aam
scas
mov
aas
cmp
cmp
pop
push
mov
dec
xor
add
dec
les
jmp
push
fsubr
out
mov
fs
mov
imul
ret
pop
mov
pop
loop
cmps
push
lahf
cdq
inc
dec
and
mov
(bad)
push
pop
add
push
push
std
and
mov
mov
jle
in
mov
stc
adc
test
adc
jle
mov
cmp
adc
cmc
aam
fwait
jmp
ficomp
stc
mov
xchg
mov
retf
popf
iret
inc
jnp
pop
mov
fnsave
pop
and
div
dec
cdq
jg
mov
or
mov
sti
sti
test
in
call
arpl
push
cmp
adc
sub
cmp
stos
test
pop
std
cmp
movs
mov
ss
movs
jp
adc
loope
mov
je
imul
xchg
test
dec
(bad)
pop
imul
add
xchg
bound
mov
sbb
push
test
repnz
pop
movs
out
ror
div
outs
fs
repz
push
hlt
or
daa
cmp
repz
xor
lock
fmulp
adc
sub
inc
call
xchg
add
inc
xchg
js
in
dec
sahf
jecxz
inc
in
(bad)
fist
addr16
jecxz
add
xchg
push
mov
and
mul
mov
clc
push
shl
into
xor
daa
cmp
xchg
sub
mov
pop
or
mov
imul
dec
pop
inc
push
das
mov
sbb
jmp
sbb
add
inc
mov
fild
mov
push
int3
add
ss
mov
inc
push
dec
sub
call
jb
neg
imul
cld
cmc
sub
push
lods
(bad)
not
or
fnstsw
inc
push
aam
or
jb
stos
dec
push
cmp
sub
and
add
mov
repz
adc
imul
mov
jae
dec
retf
sbb
int
arpl
add
inc
and
mov
retf
repnz
push
push
leave
mov
mov
xor
std
lods
loop
out
lea
jo
mov
icebp
clc
leave
pusha
pop
jmp
loop
xchg
loop
and
inc
dec
(bad)
nop
mov
adc
int
dec
sbb
xchg
mov
add
aas
stos
jmp
xor
dec
mov
pop
cmc
push
pop
daa
pop
pop
sahf
or
xor
call
loope
imul
push
xlat
mov
mov
shl
pop
jmp
movs
pop
bound
and
cs
pop
adc
xor
pop
shl
xor
jae
or
out
aam
add
xor
cmp
mov
cdq
mov
dec
add
push
sbb
mov
leave
push
push
mov
inc
fs
cli
ins
xchg
or
adc
push
jl
xor
pinsrw
out
cld
in
imul
std
inc
adc
fisubr
fistp
inc
cmp
jmp
cmp
imul
inc
ret
lock
xor
icebp
jl
push
call
xor
mov
std
add
pop
jle
lahf
cmp
repnz
(bad)
loope
out
sub
or
adc
mov
daa
xchg
mov
shl
sub
dec
jns
dec
jns
sub
int
mov
inc
add
(bad)
mov
cwde
pop
xlat
jb
out
mov
ins
jmp
xor
(bad)
mov
lods
inc
and
shr
add
dec
mov
mov
pop
inc
push
and
cwde
(bad)
fcomp
push
ret
stos
jle
lock
in
jmp
and
sbb
sahf
pop
daa
jbe
es
aas
out
in
retf
cmp
pop
sbb
push
rcr
call
fstp
imul
inc
cmp
inc
ja
scas
dec
jo
pop
arpl
out
sbb
test
je
push
xchg
jmp
daa
sti
jae
inc
loop
pop
gs
std
and
aam
mov
fist
and
loope
sub
mov
pop
rcl
lods
sbb
sbb
pop
inc
mov
jno
loopne
loop
sbb
cmp
push
cmp
mov
mov
fwait
sar
dec
ss
fld
xor
adc
pop
or
jae
or
imul
cmp
pop
mov
outs
aaa
jo
mov
cwde
jmp
lea
sub
xor
ja
mov
xor
out
dec
int
scas
ror
movs
push
push
out
sub
mov
mov
iret
mov
cdq
pop
sahf
pusha
mov
inc
cmp
jg
test
int3
aaa
sbb
or
pop
cmps
fldcw
cmps
int3
stos
push
sub
sbb
add
lds
lock
push
das
sub
or
nop
jle
xchg
out
outs
xor
imul
in
and
test
xchg
pop
cmp
xchg
aam
jnp
cmp
add
jnp
retf
into
and
lods
inc
pop
js
mov
into
jb
je
div
sub
fisubr
push
push
push
cli
fs
js
cld
in
daa
rcr
ret
mov
nop
ret
cmc
std
jl
push
rcr
dec
scas
lods
out
mov
lea
mov
sbb
jmp
outs
pop
adc
daa
jo
and
stos
popa
add
inc
scas
pop
fld
sub
xchg
jle
imul
mov
jg
sbb
lods
ins
push
mov
jp
or
hlt
ret
rcl
mov
add
out
jnp
(bad)
cld
pop
cmp
dec
cmp
cs
mov
mov
retf
fild
dec
cdq
enter
ja
ds
xchg
imul
leave
and
inc
div
and
jl
jbe
sahf
shl
arpl
mov
(bad)
fcomp
gs
fstp
cmp
jle
in
push
call
sbb
cmp
or
fwait
add
cmp
clc
test
mov
enter
mov
inc
xor
mov
(bad)
into
lods
arpl
xchg
sahf
and
test
ret
jmp
sub
sbb
inc
xchg
xor
(bad)
(bad)
fnstsw
jmp
jo
and
dec
dec
ds
daa
cmp
(bad)
jno
xchg
sar
mov
cmp
cmp
dec
pop
pop
mov
in
and
add
and
jns
dec
iret
dec
cld
xor
into
inc
mov
sar
or
ins
fisttp
adc
call
into
ret
aaa
xchg
add
bnd
and
mov
enter
shl
daa
mov
mov
loopne
sbb
fidivr
adc
pop
test
push
imul
mov
dec
in
sub
xchg
ror
mov
std
jecxz
push
scas
pusha
aas
pop
hlt
mov
xlat
leave
bound
out
rcl
in
call
imul
mov
inc
xchg
and
jmp
jbe
mov
test
enter
fwait
je
jg
jns
add
inc
sub
push
jmp
dec
push
ret
adc
bound
sbb
loope
inc
jne
in
mov
add
clc
mov
arpl
(bad)
dec
xor
adc
imul
and
std
rcl
inc
div
outs
(bad)
fidiv
mov
(bad)
xchg
pushf
and
ss
jne
imul
cmp
jmp
dec
pop
mov
jle
dec
sbb
ret
mov
cmp
leave
hlt
push
sub
mov
sti
(bad)
jmp
mov
push
lods
push
aad
icebp
pushf
jp
cmp
jmp
cmc
fcmovbe
stos
pop
inc
sbb
cmp
or
clc
add
scas
pusha
sbb
push
rcl
cmp
bound
les
aas
xor
cld
lea
daa
jmp
call
push
int
(bad)
ret
mov
xchg
(bad)
mov
rcr
fidiv
mov
cmp
je
out
test
jnp
rol
lock
inc
aad
test
cdq
inc
cmp
mov
jl
mov
fcomp
or
or
inc
mov
adc
inc
bound
imul
sti
and
sbb
inc
scas
fcmovnbe
sub
mov
movs
pop
mov
lock
mov
pop
nop
and
mov
popa
mov
xchg
in
test
icebp
ins
cmp
test
dec
add
mov
push
fiadd
xor
jno
int
jmp
xchg
sar
inc
cwde
or
gs
rcr
xor
stos
jnp
mov
jne
sti
mov
loop
shl
xchg
dec
push
lea
jmp
pslld
imul
ret
test
push
and
sbb
xlat
xlat
in
mov
nop
push
push
mul
mov
out
push
mov
adc
jmp
inc
cmc
cmp
pop
cmp
xor
mov
into
xchg
fwait
sub
inc
sti
jl
(bad)
lahf
shl
sbb
es
mov
jle
sub
pop
rol
jno
xor
adc
jecxz
xchg
xchg
cmp
pop
jae
jae
in
enter
cmps
mov
shl
dec
pusha
into
xchg
inc
inc
cmp
ret
jg
mov
mov
adc
call
retf
in
xor
into
xor
add
(bad)
and
sbb
sbb
and
pop
mov
lock
xchg
cmps
mov
(bad)
sub
mov
clc
fist
repnz
movs
bound
jp
imul
xchg
popf
aad
lds
xchg
imul
fadd
add
retf
out
inc
adc
rep
aas
mov
xchg
test
nop
std
pop
or
addr16
mov
push
fstp
ins
fisub
sbb
cwde
pop
lds
pop
mov
cdq
jne
and
xchg
jno
xlat
and
call
pop
jecxz
adc
or
stos
(bad)
adc
addr16
lods
or
or
xchg
sahf
in
dec
add
mov
int3
push
lods
out
out
test
call
scas
(bad)
iret
xchg
jno
add
mov
jns
sub
cdq
xchg
pop
enter
adc
mov
out
mov
pop
pop
mov
cli
fcmovnb
fdiv
sub
push
add
mov
aas
jmp
lds
test
fidivr
out
push
push
xchg
xor
inc
cmp
cmp
es
and
add
and
inc
rol
icebp
inc
lds
daa
test
(bad)
(bad)
jns
les
hlt
cmc
pop
inc
mov
retf
cmp
rcl
stc
pop
sub
movs
dec
dec
or
jae
xchg
xchg
push
in
ja
lds
outs
push
mov
lds
mov
push
xlat
(bad)
dec
call
pop
pop
test
nop
cmps
add
cmp
lea
sub
push
xor
jo
lods
jecxz
add
movs
shl
ja
stc
pop
dec
sub
jmp
mov
mov
push
jmp
fwait
pop
dec
add
pop
push
push
sbb
in
push
xchg
add
xlat
cld
popf
(bad)
adc
lods
gs
(bad)
aas
push
xchg
loopne
in
mov
rcr
int
stc
and
(bad)
in
jl
dec
mov
pop
scas
xchg
fcom
cmp
cmp
call
inc
rcl
dec
inc
cmp
loope
mov
push
sbb
sti
and
lods
cmp
shl
push
mov
xchg
xchg
sbb
mov
mov
shl
ffree
jmp
dec
lods
pushf
loopne
adc
xchg
jecxz
test
cmp
aas
inc
lock
cmp
add
dec
(bad)
into
mov
add
sub
(bad)
dec
jno
in
leave
es
pop
jns
das
xlat
lods
jecxz
cmp
ror
pop
leave
xchg
adc
xchg
push
add
call
fs
push
and
scas
jg
jmp
js
xchg
aam
mov
ret
pop
rcr
pop
cmp
cmps
xchg
or
pop
and
inc
push
mov
nop
cs
dec
mov
scas
movs
push
test
sub
jne
pop
pop
pop
jae
cmps
into
jnp
and
sub
scas
mov
push
gs
int
xlat
add
adc
call
addr16
mov
pop
into
mov
movs
pop
or
push
or
in
and
aaa
and
and
shl
sbb
adc
sub
xor
inc
xor
mov
scas
xchg
pop
xor
jo
pop
inc
js
lahf
inc
sbb
sub
inc
stos
jmp
mov
push
sti
test
push
pop
je
dec
add
call
jo
pop
jne
jo
push
cmc
dec
es
(bad)
xor
ins
push
xchg
push
daa
xor
fild
mov
movs
in
outs
add
test
sub
ret
daa
pop
cmp
push
xor
test
lods
call
xchg
ret
ins
fbld
rol
neg
sub
mov
jge
xchg
pop
adc
sub
inc
add
pop
dec
mov
cli
mov
xchg
retf
sbb
mov
cmps
add
sar
loop
in
daa
jbe
mov
push
test
xchg
dec
mov
fwait
retf
scas
sub
add
and
adc
loope
sub
or
(bad)
pop
mov
bound
outs
jno
(bad)
int3
inc
cld
dec
adc
sbb
out
repz
mov
into
mov
je
mov
and
mov
inc
xchg
sahf
push
xchg
sti
test
stos
fnstenv
add
fisttp
fs
push
add
mov
jp
jno
pop
dec
test
xor
cwde
adc
add
cmp
mov
retf
inc
movs
fbld
mov
mov
adc
fs
push
test
push
data16
jo
jmp
mov
(bad)
loop
mov
jp
add
stc
and
lahf
leave
sbb
add
push
loopne
mov
test
imul
mov
push
clc
sub
aad
jbe
and
pop
fs
clc
sbb
xchg
inc
inc
sbb
sbb
pop
push
stos
call
mov
stos
fld
xor
int
cdq
popf
mov
arpl
sub
cmp
mov
cmps
out
(bad)
div
pop
pop
mov
cdq
jmp
sub
(bad)
push
adc
inc
pop
out
scas
sbb
in
jno
mov
aaa
mov
aaa
pop
adc
cmp
pop
addr16
jb
test
jo
push
xchg
mov
or
mov
cmp
(bad)
aam
add
xchg
into
imul
mov
add
cs
sub
test
ds
mov
icebp
cmp
push
add
push
jmp
push
pop
add
movs
push
jo
jns
sub
jae
daa
cdq
jp
push
or
ret
dec
aaa
test
popf
test
sub
idiv
or
and
xor
and
push
movs
inc
cmp
pusha
xchg
repz
call
shr
and
neg
pushf
std
xchg
pushf
xchg
push
cmp
push
push
(bad)
loopne
bound
push
add
inc
inc
pop
sbb
outs
std
cmp
mov
push
mov
aaa
inc
pushf
jle
mov
pop
outs
sbb
sbb
loope
mov
mov
inc
sbb
dec
adc
test
xchg
aam
sbb
adc
pushf
enter
mov
jp
inc
in
adc
mov
int
hlt
mov
std
push
push
rcl
mov
jecxz
add
clc
leave
cmp
out
mov
pop
enter
cmp
enter
sub
mov
shl
cmp
hlt
ret
daa
ja
xor
out
sbb
fimul
enter
sub
stos
mov
and
fistp
rcr
dec
call
clc
inc
dec
adc
cs
push
cmp
(bad)
out
test
shl
inc
into
repz
inc
(bad)
(bad)
and
xor
dec
lock
inc
sti
in
stos
push
cmp
and
jmp
aaa
popa
cwde
in
bound
sbb
fsubr
hlt
cmps
and
lods
sub
adc
xchg
aad
lahf
inc
inc
jg
xchg
mov
push
mov
lahf
jns
sub
loop
jecxz
mov
bound
iret
ins
mov
mov
dec
dec
and
mov
adc
clc
in
js
push
sub
push
adc
xor
movs
loop
lea
add
ficom
lahf
or
cmp
push
clc
fcom
dec
or
and
retf
jl
or
mov
add
pushf
call
pushf
ja
xchg
jae
stos
sahf
lods
sbb
add
outs
mov
pop
add
(bad)
push
lods
or
hlt
adc
je
div
in
mov
dec
fadd
ins
sbb
nop
jnp
pop
imul
(bad)
cmp
sbb
into
push
and
push
loop
rcl
push
repz
push
and
xchg
movs
ss
outs
add
gs
cmp
popf
push
and
inc
jle
xor
hlt
xchg
mov
rcl
out
inc
call
cmp
and
gs
lds
repz
stos
xor
jmp
int3
fist
cwde
ins
sub
xchg
(bad)
aas
loop
dec
xor
cmp
nop
xor
test
sbb
sbb
jb
cld
adc
pop
push
retf
call
dec
int3
sbb
jp
into
repnz
jg
cmp
rcr
iret
mov
out
adc
mov
movs
retf
iret
in
xor
aad
sahf
in
fisttp
inc
jmp
mov
dec
out
faddp
mov
movs
xchg
push
xlat
inc
and
(bad)
fbld
dec
loop
neg
fisttp
in
xlat
and
push
daa
mov
cwde
pop
adc
fnstenv
in
and
int
mov
cmp
push
and
xchg
mov
aam
and
push
mov
jle
mov
ret
loop
inc
loope
cmp
vmovaps
out
es
sub
fwait
mov
and
or
movs
xchg
pushf
jmp
cmp
push
xor
addr16
jae
aad
out
fbstp
ja
pop
retf
jo
ret
(bad)
mov
gs
mov
cmp
add
pop
cmc
daa
and
gs
adc
jae
adc
push
aam
fcom
addr16
(bad)
or
inc
movs
ret
(bad)
cwde
add
pop
push
dec
ret
pusha
xlat
adc
test
sub
addr16
pop
and
mov
xor
dec
xor
aam
inc
sti
push
fmul
pop
mov
mov
add
push
xchg
rcl
ins
inc
sub
cmp
mov
adc
jmp
pop
cmp
mov
xchg
jecxz
cli
mov
xor
fisttp
imul
ins
mov
sbb
dec
inc
pusha
jge
pop
int
lods
in
mov
mov
lahf
arpl
mov
push
aaa
popa
jle
test
xchg
out
jne
or
push
adc
retf
aas
shl
mov
push
imul
popa
gs
push
aas
pushf
xchg
inc
loop
push
sbb
and
icebp
std
in
cdq
test
pop
or
sub
jp
pop
scas
jo
(bad)
outs
std
rcr
sub
enter
ins
cmc
daa
call
mov
js
js
mov
cs
fisub
fbld
inc
dec
cli
ret
sub
mov
xchg
into
mov
xor
xchg
inc
sbb
sbb
nop
(bad)
xchg
scas
adc
aaa
sbb
jmp
inc
repz
dec
adc
adc
inc
xor
mov
cli
ror
inc
dec
shl
into
repz
pusha
hlt
dec
dec
imul
mov
les
pop
adc
mov
rcl
hlt
es
xchg
inc
mov
mov
cmps
dec
push
rcl
sub
inc
mov
mov
into
std
scas
popa
jmp
pop
shl
int3
push
xchg
mov
pop
xor
sub
cmp
cmps
jp
jb
in
cmp
div
pushf
mov
jecxz
cmp
push
in
punpcklwd
push
pop
mov
or
addr16
outs
or
jmp
fwait
mov
jecxz
pop
popa
out
push
adc
retf
adc
gs
mov
data16
push
ins
mov
fcmovb
sub
mov
retf
cld
or
out
or
out
cmps
add
iret
cmps
mov
xchg
std
mov
out
pushf
sub
movs
into
outs
js
jmp
fild
mov
iret
xor
mov
call
and
mov
stos
cmp
lock
lea
sub
add
pop
jmp
outs
in
sub
cmp
add
sub
lds
sti
cmps
push
lea
dec
in
clc
mov
dec
repz
push
ret
mov
int
in
daa
scas
dec
dec
jmp
fst
or
nop
test
addr16
push
cmp
sub
bound
and
das
cmps
in
sbb
outs
add
ds
xchg
stc
push
sbb
inc
push
test
loopne
adc
cmp
mov
or
sbb
lea
mov
push
mov
clc
movs
adc
addr16
fld
push
mov
sub
(bad)
sub
cmp
loope
sar
or
ja
lahf
mov
(bad)
sbb
or
jg
push
arpl
pop
mov
stos
sbb
test
arpl
mov
lds
adc
mov
sub
in
cmp
popf
sti
fnstcw
dec
mov
loop
ins
dec
sar
cmp
nop
(bad)
dec
daa
cmps
in
adc
cmp
xchg
jle
cmps
xor
fisub
out
adc
lds
jne
out
adc
mov
add
ins
sti
(bad)
xchg
fild
cld
fstp
imul
imul
imul
(bad)
pop
call
fidiv
xor
xor
popf
(bad)
rcr
add
jnp
int3
xor
mov
sahf
lock
sbb
adc
pop
pop
push
clc
imul
and
jne
jne
cli
pop
pop
xchg
(bad)
loopne
xchg
cmp
cmc
stos
add
in
dec
jmp
mov
push
mov
imul
push
xor
add
and
ins
xlat
inc
or
xor
out
add
stos
push
icebp
mov
jno
imul
pop
push
inc
mov
rol
hlt
sar
ja
xchg
sbb
pusha
or
sti
fwait
call
xchg
aaa
and
and
push
add
repnz
loopne
(bad)
shl
shl
outs
es
retf
dec
out
xchg
inc
mov
(bad)
or
or
cmp
sub
adc
out
pusha
mov
xchg
test
or
fisttp
jle
jle
add
cmp
shl
fsub
adc
cmp
int
je
leave
nop
fdiv
and
jne
or
pop
and
inc
outs
mov
sti
add
mov
out
into
sbb
dec
jge
xor
sti
mov
pop
sub
add
arpl
rcl
stos
sbb
or
stos
xor
enter
std
push
cld
js
in
xor
lock
mov
pop
pop
sub
test
retf
sahf
mov
ins
adc
imul
or
inc
idiv
sti
jp
sbb
dec
xchg
daa
inc
iret
mov
cli
mov
bound
lods
or
sbb
cmp
dec
iret
and
daa
and
and
inc
sbb
xchg
shl
sbb
mov
xlat
bound
sbb
jne
jne
into
std
pop
aaa
or
aaa
lods
sbb
jb
sar
cld
pop
jne
sub
in
std
cmc
inc
sub
push
out
sbb
(bad)
pushf
jbe
call
aad
add
pushf
jmp
mov
leave
push
jp
jl
cmp
lods
inc
jl
scas
jg
pop
seta
adc
test
sahf
popa
jl
daa
sbb
aad
out
push
sbb
imul
call
(bad)
sbb
js
das
push
push
jl
aaa
out
das
mov
xchg
stc
ret
push
mov
inc
mov
bound
test
xchg
push
pop
stos
bound
jg
sbb
loopne
pop
sbb
dec
add
neg
outs
cli
outs
sbb
xor
pop
inc
ret
enter
mov
int
mov
je
xor
inc
xchg
xor
inc
aaa
cmp
jecxz
inc
mov
pop
mov
enter
jecxz
(bad)
mov
ficomp
iret
loopne
lods
mov
call
scas
nop
adc
cdq
inc
stos
mov
fisubr
sbb
pop
(bad)
mov
(bad)
mov
dec
push
cmp
pop
mov
int3
mov
ja
out
or
jo
rcr
cmp
retf
fild
inc
and
dec
cmp
cli
addr16
popa
movs
in
addr16
es
movs
jg
(bad)
test
cli
mov
aaa
jno
outs
mov
pop
in
clc
loop
and
out
mov
or
pusha
mov
mov
xlat
fcmovnbe
ror
ins
imul
movs
les
dec
stos
rol
and
std
imul
sbb
out
(bad)
lods
loope
mov
in
fiadd
dec
cmp
lds
pop
div
or
bound
xor
fistp
sub
movs
adc
xor
stos
imul
mov
ds
ror
or
rol
xor
(bad)
es
fs
xchg
loopne
mov
fnstenv
ror
sar
jp
popa
movs
in
int
sti
add
jecxz
add
add
push
repnz
adc
stos
out
bound
ja
mov
xor
or
cmps
add
shl
inc
and
pop
out
ds
sub
add
mov
sbb
xor
and
(bad)
fcom
js
ins
stc
jae
jmp
test
mov
sar
dec
ret
xchg
enter
arpl
fst
dec
retf
ds
and
aas
and
outs
mov
retf
and
sbb
dec
xchg
in
dec
lods
imul
and
and
push
pop
sub
mov
in
jmp
ins
dec
push
pusha
sub
mov
jge
scas
and
and
inc
ror
jb
aas
cmp
popa
xor
neg
into
xchg
push
push
or
aad
aaa
idiv
stos
leave
(bad)
mov
push
shl
ins
loope
movs
pop
push
jp
daa
and
xor
mov
inc
jmp
in
loopne
pop
inc
sbb
sub
sti
mov
or
outs
repnz
jmp
das
rcr
xchg
out
in
push
cmp
cmp
xor
cmp
icebp
popa
pop
dec
stos
bound
mov
mov
add
cmp
dec
test
adc
inc
cld
leave
aam
or
ret
shl
fldcw
push
jge
adc
lahf
jge
xor
in
push
ins
stos
test
js
cmp
mov
into
sar
xor
pop
sbb
scas
push
mov
xchg
loop
fisubr
jge
push
cmp
mov
enter
cmp
dec
fs
dec
ins
and
sbb
repz
dec
pushf
fidivr
push
mov
stos
cmp
mov
xor
dec
xchg
mov
cmc
(bad)
and
dec
jp
or
ss
sub
adc
out
sub
add
movs
fisub
ins
pop
inc
mov
fcmovbe
xor
ds
jb
mov
inc
xchg
ret
sahf
rol
add
mov
icebp
repz
xor
xchg
iret
pop
jbe
hlt
lea
inc
lods
push
sbb
xchg
push
rol
rcl
push
icebp
pushf
pop
xor
add
dec
mov
jg
pop
xor
sar
jmp
or
data16
scas
fisubr
movs
dec
sti
jl
aaa
data16
rcl
xchg
adc
test
add
jmp
xchg
jno
cwde
into
mov
dec
fcom
daa
and
push
outs
mov
jge
in
and
xchg
cwde
stos
das
out
adc
jb
fld
pop
imul
js
adc
int3
into
push
xor
add
ret
cs
outs
pop
stos
mov
aam
aad
jl
fiadd
xchg
add
xor
push
xchg
je
stos
mov
mov
sti
mov
inc
sbb
push
jb
stos
sti
and
mul
in
lods
iret
fsub
hlt
and
test
xor
mov
retf
into
and
inc
and
pop
inc
mov
add
jg
lock
fild
retf
pop
push
add
or
dec
sub
aas
xchg
test
cmp
ds
xchg
sub
mov
adc
sbb
adc
add
adc
sub
cld
inc
mov
mov
push
jno
xchg
pop
or
dec
sbb
or
or
jecxz
outs
xchg
sbb
cmp
xor
adc
inc
fcomp
mov
add
jle
int
add
add
lods
push
sbb
not
inc
mov
xor
fisubr
jnp
arpl
enter
jmp
test
mov
repz
arpl
adc
or
mov
add
sub
mov
lea
pop
adc
dec
loope
and
ins
(bad)
sbb
movs
push
inc
push
mov
pop
push
mov
adc
xor
xor
lods
adc
frstor
popa
shr
adc
retf
iret
(bad)
jo
(bad)
push
sar
lods
dec
in
lods
jg
mov
add
call
push
mov
mov
xchg
lea
and
fxtract
daa
repnz
add
mov
pop
or
ret
nop
sahf
das
mov
sbb
push
mov
cmp
xor
jecxz
fisubr
repnz
fild
add
xchg
jmp
xchg
mov
xchg
mov
test
cmp
lods
adc
aad
stos
push
push
pop
dec
cld
push
pop
std
jle
sbb
inc
fisttp
mov
cmp
jmp
dec
das
jle
cdq
ss
cmp
inc
mov
sub
(bad)
(bad)
mov
and
jecxz
add
aas
lock
mov
pop
mov
xchg
mov
mov
data16
or
cmp
xor
dec
mov
push
retf
fucom
xchg
inc
retf
push
jge
lock
or
jnp
(bad)
and
std
pop
adc
jecxz
xchg
ds
loop
xor
sbb
add
hlt
dec
mov
dec
je
in
ja
dec
push
and
rol
addr16
pop
rol
and
(bad)
nop
leave
loope
adc
cwde
sbb
pop
add
call
movs
xor
sbb
mov
cmovno
sub
sbb
retf
and
into
xchg
stos
mov
inc
inc
ins
sub
pop
cmp
lock
mov
mov
mov
and
cmc
and
lahf
arpl
ficomp
pop
xor
cmps
xchg
ins
stc
int
mov
out
fsubp
xor
repz
retf
clc
xor
loope
cs
retf
cmp
daa
add
and
sahf
pop
pop
push
xor
sbb
push
test
cmp
push
sub
fidivr
test
adc
push
cmps
cmps
dec
mov
sub
push
sbb
shl
sti
cmps
mov
movs
xor
punpckldq
ins
fcmovb
cmc
jmp
add
stc
pop
cdq
bound
xor
adc
je
cld
cmc
rol
int3
pop
inc
xchg
cmp
test
popf
daa
mov
rcr
pop
pop
jb
daa
ins
adc
push
(bad)
std
imul
mov
xchg
sbb
mul
js
test
or
cmp
les
adc
dec
sar
pop
and
addr16
dec
sub
std
js
adc
mov
retf
xchg
aas
mov
xchg
xchg
in
xor
call
(bad)
jge
pop
imul
(bad)
xchg
mov
mov
fs
into
mov
push
std
xchg
add
cmp
cmp
sti
mov
mov
or
fbld
xchg
push
(bad)
inc
lds
jle
btr
sub
dec
adc
xchg
sbb
mov
adc
dec
pop
stos
jle
rcr
pop
fndisi(8087
and
mov
div
xchg
aas
sti
outs
sub
mov
xlat
or
pop
cmp
hlt
dec
pmulhw
ret
je
sbb
jmp
das
jne
jmp
mov
and
pushf
mov
sbb
jp
mov
into
jnp
and
ja
sbb
les
retf
mov
ss
jle
repnz
ror
icebp
sub
inc
retf
data16
pop
add
fisttp
xor
add
in
or
add
mov
stos
push
sahf
and
jle
lea
mov
and
icebp
sti
lahf
daa
pop
or
dec
mov
jp
stos
push
inc
mov
mov
sbb
mov
cdq
imul
fucomip
sahf
icebp
mov
mov
xor
dec
out
popf
or
mov
dec
(bad)
aam
mov
ds
cli
mov
cmp
cmp
test
and
xchg
adc
xor
push
scas
push
fbld
shl
lods
and
cmp
cmp
xchg
dec
aas
pop
sub
mov
xor
jge
or
jge
mov
sub
test
xchg
add
pop
and
jmp
adc
mov
pop
arpl
test
ss
rcl
pop
cmp
ret
mov
cmp
cli
scas
mov
fxsave
stos
sub
push
out
shl
adc
sbb
jne
and
movs
(bad)
mov
ins
addr16
movs
ss
je
dec
xor
mov
xor
pop
lahf
enter
loope
jbe
jo
pop
add
dec
mov
mov
(bad)
cwde
cld
jmp
and
adc
xchg
dec
aas
add
das
shl
ret
xchg
push
(bad)
cmps
sub
aaa
ins
das
(bad)
js
das
cmp
gs
add
pop
out
lock
push
frstor
retf
cwde
or
loope
xchg
push
repz
cs
repnz
les
mov
loope
loope
aaa
or
push
repz
cld
fmul
addr16
cmp
push
push
mov
dec
in
leave
push
push
xchg
sbb
ror
(bad)
ins
xchg
lods
xor
dec
mov
movs
repnz
pushf
pop
dec
fist
es
test
mov
dec
sub
idiv
mov
pop
and
movs
add
mov
mov
test
dec
mov
xchg
pusha
ins
scas
jbe
mov
outs
mov
(bad)
cwde
(bad)
in
mov
xchg
xchg
cmp
xor
xor
ds
add
pop
ds
jae
cmps
and
pop
out
cmp
fistp
aad
stos
stos
int3
xor
mov
repnz
pause
les
dec
cmp
aaa
mov
inc
xchg
out
psubb
fadd
fild
push
cdq
add
es
jmp
data16
test
pop
inc
in
fild
outs
(bad)
cmp
add
adc
shr
xchg
(bad)
popf
retf
cdq
sbb
add
dec
into
and
jecxz
add
aaa
xor
cwde
sbb
jecxz
aas
les
xlat
inc
pop
mov
xchg
loope
loopne
jo
mov
out
xor
mov
ins
jle
sub
add
cmp
fcmovu
xor
dec
adc
fbstp
sti
pop
cmp
inc
call
dec
add
xor
rep
mov
imul
(bad)
xlat
lock
pop
imul
rcr
pop
xchg
outs
mov
cmp
lock
mov
sub
mov
or
(bad)
or
out
sahf
mov
and
mov
cmp
fs
dec
add
(bad)
cmp
pop
stos
mov
and
fild
mov
dec
mov
inc
push
mov
imul
mov
(bad)
jge
mov
and
inc
out
(bad)
jae
dec
aaa
sub
loopne
inc
dec
sub
push
jnp
push
(bad)
in
sahf
addr16
inc
movs
shl
je
movs
loopne
fistp
call
sbb
dec
js
inc
out
inc
mov
mov
loop
dec
stc
sbb
jne
pusha
cld
cmp
jecxz
or
imul
inc
adc
cmp
ret
cmps
jo
shl
movs
push
jmp
(bad)
cmps
sub
addr16
xor
jae
ds
pop
cdq
fwait
mov
sahf
jecxz
pop
sub
sbb
in
out
ins
test
movs
out
frstor
ins
aad
adc
cmp
jo
push
push
test
int3
repnz
loopne
pop
test
mov
push
sar
and
fadd
push
sbb
or
fs
sub
pop
mov
fisttp
or
sbb
dec
test
jge
ds
in
add
call
pop
jge
jle
inc
leave
push
ins
sub
addr16
xchg
pop
push
xchg
out
mov
jbe
xor
mov
scas
(bad)
test
adc
adc
jg
popf
adc
ret
in
jl
push
xor
sbb
daa
cmc
and
mov
repnz
ins
pushf
xor
cmp
sbb
fldcw
pop
lds
(bad)
iret
sbb
call
pop
and
dec
jmp
lods
sub
div
mov
movs
jg
jmp
movs
jg
pop
shr
stc
push
out
pop
jnp
fwait
mov
pop
jno
xchg
pop
scas
and
cmp
shl
add
xor
iret
fbstp
and
(bad)
and
scas
dec
mov
test
jle
fwait
clc
and
(bad)
(bad)
and
mov
ins
mov
lahf
mov
mov
rol
aaa
pop
stc
mov
pop
pop
xchg
in
push
xchg
fmul
test
cmp
or
mov
sbb
add
push
add
out
(bad)
retf
xchg
jp
clc
mov
mov
jg
pusha
jnp
sbb
fisub
inc
leave
jmp
xchg
mov
lahf
sub
push
or
mov
xor
and
adc
(bad)
dec
xlat
add
les
jecxz
das
movs
hlt
push
xor
xchg
push
mov
inc
push
push
jmp
sub
icebp
jne
mov
test
ins
sbb
cmp
dec
adc
cmp
js
inc
out
gs
cmps
dec
std
and
pop
jno
cmp
jle
hlt
call
dec
test
dec
fcom
out
test
daa
jo
dec
pop
in
sbb
mov
sbb
cli
jns
pop
cmp
or
jns
mov
mov
and
popa
into
jbe
jle
xchg
add
sti
mov
push
pop
cmp
xchg
gs
stos
mov
sbb
js
in
push
imul
dec
pop
mov
fcompp
push
loopne
cmp
arpl
sbb
pop
jbe
cmp
push
jecxz
jno
inc
outs
(bad)
xchg
mov
jb
nop
int3
or
dec
or
push
dec
add
mov
aas
xchg
xchg
popf
fadd
out
or
mov
add
scas
xchg
int3
push
xchg
fcmovnu
mov
fild
int
outs
ja
inc
out
xor
mov
mov
lock
jb
push
dec
jo
aad
(bad)
mov
in
mov
(bad)
jnp
push
mov
lds
aaa
dec
cld
or
bound
adc
(bad)
aad
jmp
sub
loopne
xor
jae
xor
cwde
dec
test
jb
lahf
adc
imul
fimul
cwde
xchg
dec
pusha
jae
jmp
outs
fcmovnu
fisttp
fwait
mov
int
mov
(bad)
jge
cld
mov
outs
movs
rcl
push
cmp
call
and
call
retf
adc
into
icebp
xchg
test
push
cmp
aas
stos
xchg
in
mov
adc
ins
adc
push
adc
mov
rol
bound
imul
dec
pop
xchg
scas
popf
aam
adc
pop
cmps
pop
push
push
data16
sahf
sub
jne
mov
cld
jnp
mov
push
popa
inc
pop
ret
fs
retf
addr16
shl
iret
stos
sub
enter
pop
xchg
xor
les
imul
gs
mov
mov
sub
pop
mov
dec
push
pop
cmp
cwde
scas
sub
jns
(bad)
ss
in
sub
mov
test
(bad)
popf
xor
mov
dec
stc
dec
adc
sbb
add
pop
and
in
inc
add
cs
mov
push
or
xchg
into
or
push
jg
inc
cs
mov
push
sbb
fistp
mov
shl
sub
mov
pop
adc
test
mov
es
jp
ret
and
jp
sub
dec
pop
inc
jge
push
push
cmp
icebp
les
jb
push
fsubp
cmp
mov
addr16
mov
jmp
pop
mov
adc
popw
out
xchg
cmps
movs
scas
xchg
icebp
add
rcr
cmps
sbb
pop
cdq
repz
inc
cvtps2pi
jmp
push
xchg
fistp
pop
div
pushf
ret
add
mov
cmp
(bad)
or
jl
jp
jle
lds
scas
push
outs
jle
ss
mov
mov
push
das
pop
mov
inc
push
push
je
dec
pop
jmp
jb
sub
fist
dec
movs
and
imul
retf
pop
std
rcr
popf
pop
mov
cs
mov
push
jne
or
inc
nop
popf
fcmovnbe
pop
mov
jbe
xor
xchg
pop
cmps
das
(bad)
and
out
xchg
add
push
cmps
clc
xor
jmp
pop
cli
or
push
or
mov
cmp
nop
dec
mov
lods
xchg
call
cmp
push
cdq
xchg
repz
repz
test
mov
outs
adc
ret
mov
das
add
call
lea
scas
rol
push
jge
clc
cmp
repz
mov
pop
fidiv
rcr
adc
cwde
out
loopne
push
mov
and
ins
aaa
push
ror
mov
cmp
lds
dec
scas
fcom
pop
cwde
fcomip
loope
pop
(bad)
push
ja
mov
mov
dec
inc
shr
(bad)
lahf
add
mov
sub
and
inc
lea
jp
adc
xchg
cmps
cli
neg
mov
and
inc
iret
aaa
cmp
xor
mov
fsubrp
rcr
dec
cmp
sub
mov
xor
adc
popf
mov
push
popa
jge
pop
in
xchg
and
ins
jae
sbb
inc
push
mov
lahf
xchg
xor
and
cwde
in
inc
mov
dec
or
enter
adc
pop
mov
mov
or
shl
xor
imul
aad
mov
or
lods
inc
sub
jmp
lods
adc
repz
aaa
dec
js
(bad)
dec
inc
hlt
xchg
call
pop
cld
in
int3
sub
in
imul
jmp
jno
test
mov
pop
and
fimul
mov
mov
cmp
and
imul
inc
xor
mov
ins
ins
xchg
lea
dec
mov
mov
fs
test
ins
cmp
mov
and
sti
int3
in
mov
push
xchg
fidiv
adc
sbb
ror
pop
enter
cmps
add
push
movs
push
cs
adc
mov
aaa
cmp
inc
mov
adc
aam
push
mov
and
shl
clc
xor
lds
je
sbb
inc
hlt
jmp
outs
addr16
out
fisub
jb
out
mov
inc
pop
lods
das
je
inc
mov
jmp
xchg
mov
jo
push
fwait
bound
call
popa
or
retf
(bad)
xchg
in
adc
xchg
scas
mov
jle
xchg
scas
jle
data16
jmp
push
inc
adc
dec
mov
enter
adc
sbb
mov
dec
jns
int
loop
xchg
push
jl
push
mov
xchg
int3
setnp
imul
inc
je
in
jp
ins
push
push
sar
fisub
or
loope
push
mov
into
and
pushf
push
sbb
cmp
push
fld
repz
mov
adc
cdq
gs
and
cdq
test
aam
inc
xchg
jnp
repnz
add
imul
cs
xor
ds
add
add
test
scas
(bad)
das
ret
rcr
jno
mov
push
cmp
rcl
sar
mov
shl
je
inc
mov
stos
fldcw
aam
jmp
pop
ins
inc
pop
inc
push
out
lods
cmp
xchg
mov
lods
lods
sbb
pushf
ja
dec
pop
icebp
adc
test
out
(bad)
xor
xor
out
jne
(bad)
hlt
cli
int3
mov
retf
jmp
es
fs
xchg
lods
test
fld
stc
neg
mov
popf
jg
cmp
arpl
mov
es
dec
in
push
inc
out
test
movs
out
xchg
mov
imul
out
ret
or
xchg
inc
mov
adc
pop
in
ins
(bad)
in
jbe
xchg
repz
push
mov
xchg
das
in
push
daa
or
cmp
je
in
nop
sub
mov
out
int3
and
and
ins
pop
pop
xor
outs
sbb
clc
inc
inc
rol
cs
dec
retf
sbb
push
pop
aam
add
add
aam
inc
push
and
push
cli
pop
xor
aaa
xchg
dec
sub
js
jmp
sbb
or
xchg
arpl
lea
popa
jecxz
lds
aam
repnz
jns
push
les
bound
xor
inc
jo
or
rcr
mov
or
std
xor
fdivr
pop
sub
scas
dec
sbb
and
or
fcmovnu
mov
jp
dec
add
xchg
push
out
je
dec
inc
hlt
or
jae
add
or
fimul
and
in
sub
jge
mov
pop
cmp
pusha
rol
pop
push
dec
dec
test
ins
enter
outs
cmp
mov
xchg
cmc
dec
mov
sub
shr
jp
sub
call
dec
mov
addr16
cld
adc
add
pop
push
retf
adc
push
fld
or
adc
iret
inc
adc
jl
leave
push
repz
(bad)
and
sub
xor
xchg
xchg
dec
mov
gs
movs
mov
cmp
push
sbb
lods
out
lods
dec
or
mov
mov
out
dec
mov
call
dec
mov
(bad)
repz
xor
loopne
jl
sub
xlat
jmp
pop
push
jo
push
sbb
inc
inc
mov
popf
xor
sti
daa
pop
inc
mov
(bad)
out
mov
out
cmp
fst
dec
adc
pop
mov
mov
in
in
and
out
movs
mov
adc
sub
stos
pop
cmp
gs
lds
out
inc
jno
sub
dec
movs
mov
xchg
iret
shl
int3
xchg
cmps
push
jmp
repz
mov
pop
dec
shl
or
leave
lds
cmp
pop
mov
or
div
test
aam
(bad)
jp
mov
fadd
adc
inc
inc
(bad)
and
bnd
pop
mov
pop
movs
jecxz
(bad)
cli
fisub
inc
mov
xor
mov
sbb
and
stc
shr
(bad)
xchg
push
add
or
out
dec
sbb
retf
stos
shr
pop
mov
mov
popa
addr16
mov
adc
sar
mov
push
xor
mov
cli
enter
mov
repz
and
cmp
and
out
pop
test
sbb
ror
lahf
out
enter
lea
push
cmps
pusha
mul
inc
jne
dec
or
push
jno
sbb
cmp
sub
pop
and
or
or
jle
enter
repnz
xor
ror
bound
not
cld
xchg
sbb
xor
pop
jmp
cdq
add
fnstenv
xor
sar
jno
fwait
cmps
je
cmc
int3
push
aaa
xchg
in
out
retf
test
(bad)
cmp
mov
cmp
aad
sar
arpl
mov
pop
pop
mov
retf
(bad)
inc
into
inc
cmp
mov
mov
fistp
mov
dec
cmp
sahf
ins
push
push
rcr
int3
clc
lock
push
(bad)
das
(bad)
adc
add
movs
dec
neg
sbb
into
or
inc
frstor
adc
sbb
sbb
push
push
mul
test
je
mov
pushf
arpl
xor
in
shl
in
test
cdq
mov
iret
jg
mov
push
push
cmp
test
shl
and
shl
lea
pop
sub
mov
dec
cmp
idiv
push
inc
addr16
shr
add
dec
adc
xchg
movs
lock
das
mov
mov
pop
push
pushf
popf
sub
push
(bad)
aaa
adc
mov
arpl
ja
ffree
jmp
sub
push
sti
dec
cli
js
fidivr
add
repnz
mov
sahf
and
fstp
xor
cmp
pushf
in
into
fs
jne
lock
mov
movs
jmp
pushf
push
dec
add
jbe
push
push
push
sub
push
mov
cmp
bound
retf
cmp
pop
bts
cmp
cmp
push
test
push
xor
adc
lahf
ins
sbb
data16
mov
cmp
test
jmp
je
ror
mov
aas
test
adc
mov
retf
cmp
mov
add
test
dec
push
imul
push
jae
test
das
fxch
scas
mov
pushf
(bad)
iret
adc
inc
enter
je
iret
cdq
fiadd
cmp
pop
add
cmp
fs
sti
push
repz
and
mov
fdivr
jmp
ins
data16
cmp
and
and
mov
ficomp
bnd
dec
stc
xor
(bad)
xchg
jae
lahf
aas
mov
dec
mov
adc
out
fldenv
mov
mov
push
(bad)
bnd
dec
aaa
pushf
and
add
fldcw
sub
popf
push
add
jp
stos
rcr
mov
or
lods
in
shl
xchg
and
daa
in
jb
fadd
sbb
stos
xor
sub
out
popa
pusha
(bad)
das
cmp
lods
into
ins
or
jmp
and
add
bound
pusha
adc
xchg
cmp
jmp
test
ja
mov
rcl
movs
xchg
sub
hlt
adc
call
into
pop
jb
mov
sbb
jne
jno
sti
push
xchg
add
outs
sub
gs
lock
xor
adc
test
sbb
ja
jmp
out
hlt
(bad)
mov
push
or
in
repnz
or
in
dec
dec
xor
daa
daa
inc
inc
loopne
addr16
dec
mov
lock
scas
add
xor
(bad)
pop
scas
std
push
inc
sub
test
retf
cmc
dec
mov
(bad)
dec
(bad)
out
sub
pop
adc
(bad)
xchg
mov
ja
lods
scas
mov
pop
fwait
inc
and
sub
aad
add
test
shr
jl
(bad)
loope
stos
sub
data16
dec
adc
lods
xchg
pusha
push
mov
loopne
into
rol
mov
sbb
shl
ss
rol
pushf
das
aad
push
ins
mov
mov
imul
ror
mov
shr
aaa
mov
adc
mov
add
and
sbb
test
cmp
adc
sub
(bad)
clc
ret
sbb
mov
sti
ss
int
push
(bad)
cmp
lds
cli
inc
push
arpl
in
outs
lds
mov
xchg
push
repnz
jg
std
ins
int3
or
adc
and
mov
push
jnp
cmp
cmps
xor
jno
dec
or
retf
mov
xchg
cmp
loop
repz
pusha
jecxz
jno
aas
jbe
mov
in
repz
or
pop
jle
xchg
adc
pop
push
pop
icebp
cmp
inc
retf
dec
iret
sub
leave
mov
sbb
add
xchg
popa
pop
shl
es
or
and
shl
fsub
xor
aaa
enter
inc
xor
lods
movs
inc
(bad)
fwait
pop
mov
push
pop
out
mov
ds
push
push
out
int3
jbe
mov
inc
enter
sbb
lods
add
fcmovnu
je
dec
and
push
mov
iret
push
(bad)
dec
lahf
rcl
cmp
gs
add
loop
inc
push
out
sbb
sub
mov
push
pop
jo
ret
int
mov
bound
xor
cli
pop
jnp
mov
int3
cwde
cli
dec
xchg
and
movs
push
enter
repz
sbb
and
scas
xor
and
xor
xor
gs
aad
pushf
data16
mov
pop
retf
cld
fs
in
movs
push
jb
mov
imul
test
jg
pop
ds
sub
push
aaa
xor
mov
dec
pop
hlt
mov
mov
mov
jl
jbe
pop
dec
mov
lock
mov
and
pop
mov
aas
rcl
jp
and
inc
loop
add
out
sahf
sub
rcl
cmps
mov
ret
push
js
jns
mov
cli
mov
scas
mov
mov
sahf
ins
ins
bound
in
mov
(bad)
push
(bad)
outs
inc
sub
sbb
xor
loope
iret
mov
xchg
popf
scas
and
scas
cmps
mov
mov
clc
aas
adc
push
xor
sahf
repz
sub
in
push
loop
out
inc
shr
rcr
in
cmp
add
stos
xchg
pop
mov
aad
(bad)
call
adc
push
xor
nop
repz
sub
xchg
jmp
jge
dec
add
or
cwde
xor
mov
push
sbb
sub
jl
xor
adc
mov
outs
xchg
pushf
add
jne
pop
nop
aas
sbb
adc
cmp
cmps
mov
push
bound
push
cmps
sti
mov
rcl
icebp
xor
scas
or
mov
or
pushf
xchg
loopne
stos
cmp
sbb
mov
ror
xchg
rcl
jge
sti
in
je
cld
das
mov
pop
sub
push
pop
xor
test
jecxz
les
movzx
mov
sti
cmps
mov
scas
ja
enter
cmps
and
std
addr16
loop
cmp
push
js
adc
push
sar
imul
cmps
adc
sub
dec
or
push
enter
add
pop
(bad)
fnstcw
lds
mov
jae
and
sub
pop
xchg
movs
mov
cdq
push
mov
add
or
das
pop
leave
iret
mov
xchg
popa
rcr
aaa
push
outs
jo
adc
push
xchg
xor
rcl
sbb
mov
mov
into
icebp
adc
lds
lds
(bad)
jmp
mov
mov
inc
data16
xchg
call
cmp
mov
xor
mov
imul
lock
adc
test
lock
cdq
aas
shl
mov
fild
data16
int3
xchg
sub
inc
stc
push
jmp
das
bound
int3
cli
push
out
jae
mov
mov
push
bound
pop
adc
sbb
sahf
xlat
out
mov
jge
sbb
mov
nop
sub
jbe
pop
or
xchg
mov
jnp
cdq
sub
xor
push
mov
repnz
js
inc
add
pop
jo
repz
sbb
add
cmp
stc
int
push
jns
cwde
xchg
inc
mov
stc
jg
and
std
and
lahf
mov
xchg
sbb
repnz
and
inc
les
hlt
repz
es
sub
test
stos
mov
enter
clc
(bad)
clc
jmp
sbb
je
xchg
in
shr
cmc
lahf
nop
xchg
or
pushf
xchg
sar
inc
jecxz
lods
cmp
inc
iret
xor
xchg
mov
xchg
jae
shr
cli
cli
js
js
mov
enter
adc
jge
hlt
xor
adc
cmp
sub
add
cmp
inc
mov
je
cwde
and
std
mov
js
mov
xchg
inc
cmp
pop
fstp
pop
xor
cmps
gs
jmp
mov
dec
jl
das
and
pop
and
(bad)
push
out
out
jbe
mov
out
call
scas
pop
xor
or
add
mov
nop
jp
mov
sbb
std
repz
ficom
xor
int
adc
imul
stos
xchg
fidivr
rcl
out
pop
jge
xor
bound
cdq
cmp
pop
sub
clc
jmp
cmp
xchg
fsubr
mov
push
add
dec
cli
retf
jmp
repz
push
imul
les
dec
mov
cld
sub
jp
inc
or
(bad)
xor
fistp
pusha
xor
in
mov
mov
jne
test
pop
aad
(bad)
aad
ds
inc
mov
mov
fisub
mov
in
cmps
psrad
or
mov
test
shl
mov
ins
ss
aam
ret
add
pop
inc
fwait
dec
mul
pop
jmp
cdq
pop
(bad)
mov
shl
aad
xchg
stc
add
into
mov
loope
pop
xchg
add
mov
mov
bound
jmp
jb
add
jnp
jns
or
xor
add
lock
mov
sbb
jle
adc
xchg
fild
test
or
sub
nop
adc
jae
ficomp
push
movs
push
out
jp
pop
lea
xlat
add
add
pop
jl
cmp
inc
ret
not
scas
mov
add
sub
jb
arpl
sahf
movs
mov
xor
aam
push
jae
imul
mov
mov
cdq
out
repnz
addr16
lea
lock
retf
adc
ror
xor
mov
(bad)
out
mov
jbe
inc
pushf
js
jmp
lea
pop
inc
push
add
les
dec
aas
jbe
cmps
xchg
jg
mov
into
ret
mov
pop
cmp
bound
push
mov
stos
push
sub
jmp
push
xor
neg
js
cmc
xchg
je
and
rcr
or
push
or
cli
xchg
xor
sahf
xor
push
inc
pop
ficom
xor
rol
sub
xchg
cmc
jp
add
xor
(bad)
dec
mov
not
push
stos
lock
stos
or
mov
pop
inc
pusha
sbb
xor
push
pop
and
xor
pop
inc
mov
(bad)
pop
or
cdq
mov
mov
ins
jb
mov
or
lods
(bad)
cdq
ror
inc
push
fimul
pusha
loope
sub
stos
adc
popa
push
loope
std
stc
cmp
sub
retf
push
jns
mov
pop
mov
pop
sbb
xor
cdq
cwde
jmp
mov
dec
push
push
dec
fcomip
cmp
push
dec
mov
iret
je
jp
sbb
fisubr
xchg
cld
cs
scas
sub
xchg
jmp
dec
sbb
sbb
pop
inc
push
sub
jl
add
jne
loopne
inc
lea
mov
test
xor
call
outs
mov
and
cwde
bound
fnstcw
inc
inc
cs
mov
pop
dec
fwait
jecxz
mov
push
aas
push
scas
push
scas
jmp
fwait
into
fs
sbb
mov
jae
cmc
dec
loope
xchg
(bad)
dec
adc
cmp
(bad)
and
repz
jne
sbb
xlat
sbb
jbe
lahf
in
jl
sbb
or
call
sbb
in
rol
cmps
adc
push
scas
dec
mov
arpl
push
repz
imul
add
xchg
ins
mov
je
dec
xchg
xor
test
xchg
cmp
sbb
xchg
dec
sub
lahf
xchg
(bad)
inc
fld
mov
mov
xchg
add
adc
mov
cmp
adc
sub
add
xchg
or
add
ins
push
div
out
addr16
xchg
ds
repnz
push
aaa
(bad)
enter
jno
add
dec
clc
jno
neg
mov
addr16
and
add
(bad)
ins
sub
or
and
test
sbb
sbb
mov
sub
cmps
fild
mov
pop
mov
fisub
outs
push
jno
out
cmp
add
mov
push
add
lds
ret
fnsave
ret
sahf
or
jle
ins
cmp
xchg
daa
pop
aad
pop
test
xor
retf
stos
mov
retf
movs
hlt
in
out
fisubr
mov
fcomp
jle
sub
jne
mov
xor
xlat
and
or
out
pusha
fcmovu
jl
push
call
lods
jne
ficomp
leave
out
fiadd
test
jge
enter
dec
into
(bad)
sub
into
or
mov
push
dec
sbb
mov
(bad)
xchg
out
lods
das
mov
(bad)
aam
dec
push
pop
cmp
jp
dec
xlat
es
sbb
and
pushf
adc
mov
mov
jge
mov
shl
pop
clc
outs
sbb
jne
cmp
xchg
hlt
adc
aas
xor
rcr
fldenv
sbb
mov
jns
fdivr
pushf
or
out
cmp
mov
sbb
cdq
out
or
cmc
and
pop
xor
and
mov
out
jno
mov
ins
mov
loop
lds
test
adc
int3
ret
outs
std
xchg
iret
xchg
les
jl
dec
cmps
adc
pusha
data16
jo
imul
arpl
sbb
push
pop
mov
sub
jmp
imul
xchg
push
or
xchg
jecxz
leave
cmp
jecxz
test
mov
stc
cmps
sub
ins
in
into
sbb
mov
leave
stos
push
cmp
pushf
imul
sar
lahf
hlt
(bad)
pop
jns
fwait
push
add
mov
jl
mov
aaa
jno
(bad)
inc
sbb
lahf
mov
movs
(bad)
dec
dec
pop
inc
fwait
test
stos
lea
jo
mov
inc
push
arpl
stos
pop
daa
mov
jns
xchg
xor
push
dec
sub
(bad)
aam
imul
and
adc
ja
jmp
pusha
stc
sbb
pop
lods
mov
mov
mov
addr16
leave
call
mov
enter
inc
movs
jno
pop
sbb
jl
repnz
fwait
xchg
dec
leave
stc
sahf
mul
jb
scas
imul
jle
sbb
mov
sbb
push
jg
scas
iret
fcom
xor
sahf
imul
pusha
add
lds
fs
adc
pushf
push
jmp
(bad)
iret
xchg
js
mov
inc
sub
leave
pop
aaa
push
test
(bad)
in
push
or
(bad)
out
sti
dec
cmp
call
movs
xor
add
mov
cmp
rcr
fadd
pop
daa
mov
loopne
inc
ss
gs
cmps
int3
mov
mov
loop
xlat
jno
lahf
retf
loopne
or
mov
(bad)
fiadd
sahf
cmp
adc
or
daa
loope
and
gs
imul
sbb
mov
mov
sbb
iret
test
in
movs
lods
pop
sub
test
repnz
pop
or
dec
or
popf
int3
adc
sbb
mov
sbb
mov
scas
outs
ds
mov
dec
sbb
inc
xor
jnp
cmc
data16
scas
cmps
push
cmps
xchg
xchg
aas
and
in
in
imul
std
dec
in
fs
stos
jmp
int3
(bad)
out
xchg
cmp
out
sbb
movs
xor
cmp
repnz
pop
rcl
inc
sub
or
jne
scas
daa
shl
jnp
sub
cwde
inc
add
lods
xchg
or
fdivr
xchg
pop
mov
cmps
or
loope
nop
sbb
and
out
jl
push
bound
sbb
pop
hlt
xchg
xchg
jb
cdq
push
call
add
cmps
cmp
xchg
dec
push
mov
add
retf
xor
add
(bad)
adc
jns
or
bound
lods
std
mov
jb
push
push
push
mov
add
(bad)
(bad)
push
mov
test
cdq
mov
adc
sub
add
int
pushf
leave
addr16
daa
fcom
add
mov
push
test
jnp
fmul
call
test
imul
add
adc
mov
inc
push
sub
add
ror
jo
push
(bad)
out
xor
les
dec
dec
lahf
adc
xchg
and
push
mov
push
jne
xchg
cmp
stc
rep
xchg
or
sub
cld
(bad)
scas
add
inc
pushf
push
push
and
and
popf
push
in
loopne
sub
add
mov
test
mov
push
addr16
jne
leave
popa
jl
xor
retf
dec
xchg
jmp
bound
push
xor
push
fcomi
mov
mov
mov
mov
and
sub
inc
and
test
add
pop
(bad)
loop
sub
push
out
sbb
lds
mov
pop
sbb
and
and
dec
inc
ins
inc
xchg
push
xchg
xor
mov
sub
sub
call
mov
dec
dec
dec
xchg
cs
loop
fwait
lods
mov
or
aas
out
ds
cmp
(bad)
enter
push
ds
leave
jno
push
js
in
jmp
iret
enter
pmullw
xor
mov
pop
add
sub
add
pushf
cmc
push
pop
push
push
cmp
into
push
enter
cdq
mov
add
cdq
pop
pop
sub
mov
in
xor
mov
leave
aas
int3
or
je
shr
mov
jmp
movs
stos
inc
dec
std
repnz
ds
xchg
fst
ss
into
fiadd
jecxz
jb
xor
mov
xor
not
pop
push
push
sbb
pushf
cmp
mov
xchg
jnp
xchg
retf
push
or
xor
ret
mov
sahf
xor
push
add
mov
cmp
and
push
test
and
std
dec
mov
ins
jo
add
cs
cmps
mov
(bad)
loopne
mov
add
call
outs
pmullw
add
test
test
mov
mov
pop
mov
rcr
call
mov
stc
sbb
pop
inc
push
aad
ins
hlt
push
jb
ficomp
and
sbb
fsubr
or
cmp
int3
inc
fst
aad
ss
stc
lods
out
out
push
loop
xchg
adc
mov
jno
mov
jae
enter
popf
sar
inc
cmp
or
xchg
inc
pop
xchg
pop
dec
popa
jmp
pop
cmps
jo
sbb
pushf
out
or
retf
sbb
dec
mov
mov
or
popa
jg
push
cs
inc
adc
cmp
jg
(bad)
jbe
dec
mov
es
movs
shr
lods
and
and
outs
test
ja
inc
loop
push
fwait
cld
xchg
rcr
add
loopne
dec
lds
sub
shl
cmp
lahf
cmp
and
aam
and
repz
push
jl
lods
lock
mov
hlt
jo
jmp
pop
sub
jp
sar
pop
fwait
lods
mov
xchg
leave
or
fisubr
sbb
xor
scas
inc
call
sar
adc
sbb
inc
imul
jns
aaa
mov
mov
std
repnz
(bad)
enter
inc
lds
push
in
sbb
stos
aad
jns
mov
outs
aad
int3
cmc
add
sbb
retf
pop
sub
push
outs
sub
and
les
add
or
pop
mov
xor
fwait
scas
aas
inc
ss
test
repz
imul
pop
js
or
outs
imul
xor
loop
xlat
(bad)
mov
cmp
mov
push
dec
pop
call
in
div
sbb
test
clc
sub
retf
into
in
mov
call
loope
sub
jmp
rol
int
and
mov
loop
xchg
fld
bound
cmps
js
and
ror
mov
aam
pop
sub
mov
xchg
adc
adc
push
push
pop
sbb
ins
xchg
dec
and
hlt
lock
dec
xlat
popa
xor
sbb
pop
pop
sub
dec
mov
cdq
jnp
ss
pop
retf
aas
dec
cmps
repz
lds
es
loop
out
xor
pushf
lds
cmp
sti
inc
call
jne
jno
cmp
nop
cwde
cmps
cmp
cli
pop
pusha
pop
jb
mov
mov
cmps
into
inc
call
ret
xchg
xchg
and
dec
dec
cld
sbb
jno
lods
jp
add
xchg
inc
sbb
pusha
sub
popa
adc
push
sbb
and
retf
push
mov
sbb
mul
ins
or
jb
mov
(bad)
dec
popa
nop
mov
add
pop
pop
stos
cmp
push
mov
icebp
in
lahf
popa
dec
icebp
cmp
sbb
sbb
addr16
mov
iret
(bad)
or
xor
rcl
jmp
mov
fcom
jg
jns
fstp
lods
xchg
pop
pop
(bad)
dec
addr16
aaa
push
in
jg
cmp
adc
mov
adc
mov
mov
ins
push
push
adc
push
pop
mov
cli
clc
mov
lods
aaa
into
cmps
sub
push
xor
daa
outs
pop
xchg
call
mov
test
add
jmp
lods
add
and
retf
push
inc
xchg
xchg
or
dec
(bad)
loop
je
clc
fld
fdivr
cmc
int3
push
sar
movs
enter
data16
daa
mov
ja
adc
jns
xchg
scas
cvtpi2ps
push
aas
sub
mov
jne
jl
or
add
mov
sub
(bad)
mov
mov
imul
movs
pushf
in
dec
xchg
jg
shl
lods
mov
lods
pop
inc
cmps
or
ret
mov
fwait
in
enter
cmp
dec
clc
or
movs
and
leave
push
aad
nop
add
add
xor
adc
jmp
movs
frstor
sbb
jmp
push
jb
inc
xor
xchg
or
mov
adc
popf
xchg
scas
mov
imul
pop
xor
and
push
dec
pop
bound
std
push
pop
hlt
pop
test
adc
ja
not
pusha
mov
push
idiv
sbb
jae
sub
and
sub
push
dec
scas
mov
jo
sbb
jg
jp
mov
lahf
xchg
rol
mov
push
call
xchg
cmps
popf
aam
dec
addr16
daa
mov
mov
or
inc
aas
sbb
mov
nop
lods
push
out
iret
ret
sbb
jno
add
pop
mov
push
lods
xchg
(bad)
pop
(bad)
sub
shl
popf
mov
sub
lea
fwait
jae
push
cdq
inc
xor
(bad)
pushf
lock
or
jp
fwait
xchg
jne
mov
pop
imul
mov
xor
nop
push
pop
es
adc
ds
je
adc
ins
adc
mov
fsubr
sub
mov
in
sub
nop
div
mov
cmp
(bad)
imul
adc
mov
sub
pop
loope
lds
pop
fistp
aam
into
fild
pop
ins
call
mov
sub
jecxz
(bad)
jno
xcrypt-cbc
cmps
aad
leave
xchg
(bad)
popf
jbe
outs
aas
mov
mov
push
xchg
sbb
popf
es
addr16
retf
dec
mov
int3
imul
cmps
std
sbb
ins
and
imul
and
cmp
add
stos
cdq
dec
nop
mov
clc
xchg
push
aas
(bad)
adc
stos
push
sahf
jne
dec
cdq
sbb
jno
xchg
push
push
ins
add
not
cdq
mov
bound
es
stc
cmp
mov
test
shl
out
xchg
outs
popa
dec
ffreep
pop
es
push
addr16
or
add
dec
sti
sar
mov
icebp
push
cmc
jns
pusha
or
test
fucomi
fnstcw
xchg
shr
not
daa
outs
rcl
arpl
jbe
jae
mov
sbb
iret
cmp
xchg
daa
pop
pop
inc
xchg
jge
popa
and
push
mov
pop
dec
jns
je
std
and
dec
sub
dec
les
in
push
loope
fwait
pop
iret
in
in
cld
mov
shl
mov
in
cmps
inc
in
sub
jnp
jecxz
dec
mov
inc
into
mov
scas
push
sub
push
adc
add
pusha
movs
or
lock
cdq
ss
push
jb
jbe
je
loopne
cmps
out
into
icebp
lea
rol
cmp
lods
js
sbb
push
repnz
movs
or
repnz
or
aad
pop
jnp
in
and
pop
sub
out
sbb
cmp
sub
aas
sbb
fild
pop
fcmovnbe
sub
push
in
push
ret
ret
cmp
cmp
jp
jae
pop
jo
mov
xchg
or
mov
cmc
repz
xchg
out
fs
lea
iret
jmp
hlt
xchg
call
leave
mov
loopne
jne
outs
shr
fsubr
test
adc
mov
xor
add
js
bound
mov
outs
sbb
sub
out
retf
mov
into
sahf
xor
inc
inc
jae
ret
inc
int
cmp
jbe
jmp
pushf
pop
mov
shl
ret
loop
aas
xor
nop
inc
mov
jle
mov
ins
push
shr
add
jl
int
(bad)
lds
xor
iret
pushf
and
xor
enter
cli
lods
jge
(bad)
cmp
in
xor
mov
bound
sbb
(bad)
mov
sar
sbb
and
dec
mov
sbb
jbe
push
js
cmp
pop
imul
jno
cmp
dec
(bad)
std
call
or
es
jae
mov
add
in
data16
lods
(bad)
fist
sub
cmp
pop
inc
cmp
dec
inc
xor
xlat
jmp
inc
std
dec
adc
leave
xchg
fsub
enter
cmp
mov
into
mov
xor
mov
sub
inc
hlt
sbb
cmc
sbb
xchg
jp
inc
or
(bad)
and
xor
movs
add
add
mov
aam
jns
out
pop
mov
call
jnp
add
push
and
fild
mov
mov
in
(bad)
repnz
xchg
or
je
je
mov
pop
adc
dec
and
in
or
(bad)
aad
add
mov
popf
adc
mov
mov
xchg
add
inc
fsubr
jecxz
jmp
xor
jmp
test
push
and
dec
popa
retf
xchg
in
mov
add
jbe
aad
mov
in
fistp
push
scas
adc
dec
das
repnz
xor
xor
repnz
and
dec
adc
outs
stos
(bad)
lods
(bad)
mov
inc
push
into
cdq
xor
int3
adc
sub
or
bound
and
stos
in
call
inc
dec
ja
cwde
test
and
shl
sub
popf
xchg
pop
retf
not
mov
push
test
push
pop
pop
sub
bound
ss
mov
imul
sub
jne
inc
add
mov
ins
sbb
push
push
loopne
popf
icebp
sub
ss
(bad)
jp
in
in
scas
inc
fs
add
mov
fiadd
sti
inc
movs
stos
jne
or
fmul
mov
gs
scas
out
clc
stos
test
or
mov
and
jl
aaa
in
xor
retf
pop
out
sub
xor
arpl
mov
inc
scas
shl
stc
leave
movs
xlat
rol
xor
loope
mov
push
lods
pushf
push
loop
outs
test
and
adc
or
rcl
test
mov
das
and
mov
iret
shl
stos
outs
jle
mul
in
xchg
int
add
mov
outs
jne
inc
pop
adc
retf
jnp
fisub
movq
test
(bad)
adc
out
inc
test
lahf
cmp
dec
jp
fisubr
and
pop
out
mov
and
xchg
mov
inc
inc
daa
test
(bad)
fs
sub
jle
(bad)
lods
jbe
sub
adc
dec
je
mov
inc
je
sub
mov
sub
js
or
xchg
push
stos
xchg
imul
jae
sti
or
or
int3
adc
das
mov
in
jecxz
test
xchg
arpl
mov
imul
cmp
hlt
div
loope
or
pushf
mov
and
adc
aad
and
cwde
dec
pop
ds
hlt
pop
or
xchg
call
daa
ret
add
stc
or
and
fbstp
and
iret
out
sbb
lock
sbb
int3
adc
das
aad
push
jae
sbb
out
rcl
pop
xchg
push
leave
xchg
std
pop
add
in
movs
mov
cmp
sbb
cmc
mov
sti
mov
aad
pop
arpl
rcr
sbb
and
sub
xchg
jge
div
mov
cli
push
movs
mov
iret
sub
ror
(bad)
sahf
pop
(bad)
std
sets
pop
pop
xor
adc
or
dec
retf
add
jmp
popf
js
xchg
pop
sbb
dec
shl
push
bound
push
jge
(bad)
jmp
inc
cmps
dec
in
enter
xor
mov
cmp
idiv
fxch
or
gs
push
pop
test
aad
dec
and
add
ins
mov
sbb
add
pushf
pushf
adc
mov
push
das
jl
and
jno
aad
and
shl
out
and
shr
jmp
adc
push
or
jnp
push
fs
arpl
mov
fidivr
js
(bad)
(bad)
pop
add
repnz
adc
inc
jl
dec
dec
sub
repnz
in
jne
push
stc
mov
inc
xor
push
adc
xlat
out
or
mov
mov
push
adc
jne
pcmpgtb
(bad)
fist
adc
cdq
outs
mov
outs
cmps
jecxz
sahf
les
in
imul
push
outs
stos
push
dec
dec
repz
ins
ins
pop
push
aam
(bad)
mov
cmp
and
mov
scas
rol
cdq
xor
push
push
mov
add
inc
mov
sbb
xor
sbb
loope
adc
and
iret
adc
fcomp
xchg
int
stos
xor
cmp
mov
ins
ret
jp
shl
and
sub
popa
in
jecxz
xor
pop
mov
jnp
xchg
aas
jge
pavgw
pop
sub
bound
and
jno
sub
iret
loop
or
pop
inc
mov
outs
js
(bad)
(bad)
and
pop
ror
push
or
cmp
and
loope
scas
push
sub
mov
sar
push
jne
nop
mov
clc
into
adc
inc
outs
fstp
push
xor
enter
push
xchg
jmp
hlt
rcr
(bad)
mov
xor
int
fnstenv
xchg
popf
ficom
scas
aad
pop
test
fsub
jmp
add
add
rcl
jno
bound
icebp
in
xor
xor
mov
aas
cmp
sub
stos
fwait
pop
in
test
pop
test
loope
pushf
outs
push
xchg
and
loop
push
not
xchg
loopne
dec
addr16
sbb
mov
(bad)
cs
repnz
je
pop
jbe
rol
sub
lods
pop
sub
jmp
xchg
outs
xchg
sbb
dec
mov
aad
fisttp
push
dec
popa
into
int
(bad)
outs
int
jb
mov
aaa
xchg
shr
in
(bad)
lods
push
jnp
add
xor
lods
push
cdq
dec
add
cmp
add
cs
cmc
xchg
push
add
xchg
shl
data16
inc
cmp
dec
inc
mov
call
cmp
push
mov
imul
fdiv
imul
sti
retf
adc
or
xchg
movs
jge
outs
xor
mov
cdq
or
mov
mov
shr
adc
dec
(bad)
and
pop
cmp
push
push
and
fdiv
test
dec
sar
mov
lods
mov
xor
jb
xlat
add
mov
cmc
into
leave
push
mov
mov
mov
fld
cld
dec
jge
pop
pushf
and
jp
xchg
sub
jg
js
in
inc
mov
dec
mov
and
add
in
ret
xor
outs
or
jno
sbb
bound
ins
stos
hlt
mov
jno
scas
sbb
mov
ins
pop
stos
mov
and
and
ja
or
sub
jecxz
inc
lea
loope
mov
cmp
stos
scas
int3
je
icebp
pop
clc
mov
retf
or
jbe
std
sbb
je
sub
jnp
movs
and
xchg
push
push
jecxz
jae
inc
ficomp
pop
sbb
mov
cmp
iret
and
(bad)
sub
clc
pusha
in
dec
cmps
retf
jbe
pop
jae
adc
cmp
aam
movs
fdivr
inc
mov
xchg
cmc
mov
xor
fcmovbe
xchg
fisttp
push
xor
fwait
jmp
mov
rcr
mov
xchg
mov
jmp
cmc
or
mov
mov
das
mov
das
fwait
test
ror
push
imul
scas
test
xchg
repz
(bad)
dec
ret
and
cmp
cmp
adc
xchg
fmul
cmp
retf
jmp
int3
mov
fsubrp
mov
mov
les
and
mov
mov
xchg
jecxz
cld
sub
adc
push
aam
add
dec
fsub
xchg
and
imul
add
cmp
test
cmp
rol
je
inc
cmps
mov
(bad)
test
sub
adc
jo
push
jnp
pusha
ja
push
popa
rcr
dec
pop
ins
aas
and
popa
inc
je
das
and
loop
cmp
cmps
(bad)
xor
imul
dec
or
push
leave
add
into
pop
dec
cmp
xchg
rol
(bad)
push
hlt
int
inc
push
xlat
jo
nop
mov
(bad)
data16
icebp
xor
inc
xchg
jmp
sbb
out
mov
nop
push
or
mov
out
fs
hlt
repnz
enter
xchg
and
inc
mov
push
ret
jno
test
call
adc
jno
push
cli
xchg
add
add
xchg
test
out
add
add
push
inc
aad
out
cmp
cmp
rcr
xchg
mov
push
jbe
cli
sbb
es
xor
jae
pop
xchg
push
mov
out
cmp
cli
sbb
add
inc
xchg
and
mov
daa
pop
mov
cmp
mov
xchg
push
(bad)
out
dec
or
sub
push
cmp
mov
sub
mov
jecxz
cmc
add
mov
xchg
(bad)
ds
inc
or
aam
jmp
lods
fcmovu
and
xchg
mov
(bad)
mov
add
push
mov
out
cmp
out
(bad)
mov
int3
das
(bad)
mov
mov
stos
repnz
and
out
xor
shl
(bad)
xor
add
stos
and
rol
mov
cdq
stc
xchg
pushf
dec
cmp
jbe
in
rol
dec
cmps
add
addr16
push
lock
xchg
add
sub
cwde
(bad)
sti
pop
leave
in
imul
mov
pop
out
sub
pop
aam
mov
call
aas
dec
call
sbb
push
cmp
iret
sub
das
js
cmp
sahf
cmp
inc
add
in
les
push
ret
cmp
stos
adc
daa
fst
jp
dec
f2xm1
xchg
dec
loope
and
jmp
(bad)
iret
sub
mov
cmp
ins
sahf
push
out
je
xchg
adc
xor
adc
push
test
leave
cmp
retf
inc
rcl
or
je
cld
mov
xchg
ins
pop
leave
xchg
push
jbe
cmp
cmp
lds
adc
pushf
bswap
dec
mov
repnz
out
test
dec
in
mov
sahf
cli
inc
loope
(bad)
sti
adc
test
adc
xor
add
push
aad
sub
mov
in
add
mov
repnz
or
stos
mov
imul
jmp
aam
or
adc
gs
add
aas
sbb
aas
push
push
inc
cmc
and
or
in
das
mov
stos
and
push
push
(bad)
jge
stc
test
jg
mov
xor
popa
gs
daa
dec
lds
dec
xchg
and
push
push
ja
inc
adc
cmp
inc
xor
fwait
adc
jno
and
outs
xchg
sub
push
lds
sbb
xor
dec
and
bound
push
mov
and
movs
rol
add
or
adc
dec
fnsave
test
shl
neg
mov
mov
sbb
sub
outs
mov
inc
add
sub
push
imul
mov
adc
mov
and
xor
addr16
xchg
jmp
xor
cdq
ror
inc
test
push
ja
inc
dec
inc
aam
lea
imul
push
add
sbb
in
sub
mov
pop
sbb
sqrtps
or
enter
push
imul
jg
les
popa
das
push
cmp
out
mov
and
outs
lods
fiadd
call
ds
jg
mov
cmps
aas
(bad)
fistp
ror
iret
xchg
ret
int
jbe
jp
jl
aaa
test
stos
xor
add
test
stos
push
xor
and
dec
test
fnstenv
dec
cli
ins
nop
mov
fadd
xlat
cli
add
pop
popf
push
jno
cs
or
popa
and
xor
cmp
retf
mov
xor
pop
inc
pop
into
jecxz
cmp
dec
xchg
push
pop
pop
add
and
test
clc
xchg
mov
ins
xchg
fs
xor
xor
outs
aad
xchg
in
imul
adc
fisubr
push
push
imul
sbb
pop
(bad)
call
dec
dec
jno
je
test
dec
inc
test
jns
sub
cmps
out
(bad)
js
aam
aam
mov
push
push
add
imul
outs
pop
adc
outs
sar
mov
ds
adc
retf
and
pop
adc
push
sbb
dec
test
leave
rcl
iret
push
inc
adc
dec
jmp
mov
jnp
or
loopne
and
jnp
pop
jg
movs
jnp
sahf
aad
dec
sbb
and
shl
fwait
sbb
or
in
out
call
ficom
push
adc
and
pop
cmp
pop
retf
fild
sbb
rcl
cmps
dec
lahf
xchg
inc
hlt
adc
sbb
test
(bad)
push
mov
fist
jmp
mov
push
call
ss
jne
pushf
(bad)
sub
mov
mov
xchg
mov
mov
mov
mov
pop
in
sub
xchg
test
pslld
or
mov
fdivp
outs
xchg
add
sahf
push
cwde
clc
imul
or
std
and
rol
std
mov
out
pop
push
addr16
jnp
mov
outs
mov
or
cmp
mov
aas
loop
ja
cmp
dec
in
push
stos
push
push
xor
ja
mov
(bad)
mov
in
push
fptan
imul
xchg
cmp
enter
dec
jo
adc
lahf
pop
push
xchg
jecxz
fnstcw
icebp
xor
xchg
mov
mov
xor
sti
jmp
mov
pusha
pop
jmp
outs
rol
out
dec
fstp
xor
mov
les
hlt
mov
movs
hlt
lods
xor
push
loope
sbb
cld
enter
jle
push
enter
outs
in
xchg
into
inc
out
adc
cld
bound
repnz
xor
dec
jge
inc
mov
sahf
add
in
and
ficom
pop
sub
fstp
push
jne
mov
in
rcr
idiv
fistp
and
push
jns
outs
scas
sub
fsub
popf
inc
or
in
test
call
fisub
add
mov
pop
mov
jne
and
cmp
jno
ins
sbb
jo
push
mov
ds
pop
add
scas
add
add
mov
lds
mov
mov
fwait
ret
sbb
push
inc
jp
hlt
fsub
sub
adc
cmp
pop
in
cld
mov
mov
cmp
xchg
xchg
pop
mov
in
movs
and
xchg
push
mov
cwde
and
gs
push
ins
out
add
imul
arpl
sub
imul
fdivr
jp
mov
sub
dec
imul
mov
lock
dec
ds
push
aaa
sahf
stc
pop
cmps
mov
jno
jo
lds
jmp
pop
sub
jl
adc
fadd
jo
scas
add
mov
jns
sbb
call
pushf
add
data16
pop
jo
out
push
sub
pushf
sbb
cmp
jmp
outs
inc
sbb
lods
pop
mov
jecxz
pop
rcr
pop
dec
fldenv
adc
(bad)
les
vpcmpgtb
dec
ins
movs
cs
das
push
xchg
fst
adc
add
pop
xchg
pushf
mov
and
(bad)
shl
sbb
push
mov
jns
sbb
jl
jo
sbb
push
sub
call
hlt
movs
mov
cmp
adc
psadbw
xchg
in
add
add
or
clc
ds
pop
jge
test
(bad)
lock
ja
inc
and
lods
and
and
jecxz
add
movs
setno
mov
pop
loopne
add
dec
mov
fwait
cwde
fisubr
(bad)
push
mov
int3
in
scas
mov
mov
jmp
dec
into
test
fisubr
jp
std
sbb
adc
aad
or
xchg
scas
cmp
in
(bad)
pop
mov
mov
popf
test
inc
push
mov
add
mov
inc
int
fadd
rol
adc
adc
jnp
dec
int3
and
gs
jnp
out
inc
mov
mov
pusha
or
fadd
jecxz
shr
sub
push
lods
cmp
aas
call
icebp
inc
jecxz
mov
call
or
mov
and
and
pop
mov
vcvtps2pd
push
test
sti
pop
ss
jb
in
ja
mov
sbb
test
sbb
mov
xor
pop
outs
les
mov
xchg
call
mov
push
cwde
mov
push
in
inc
and
out
popf
shl
xchg
add
out
mov
and
fidiv
stc
(bad)
jecxz
ss
aad
cmp
imul
out
push
inc
adc
mov
out
cdq
out
repz
fidivr
push
retf
adc
mov
xchg
xor
jg
add
jecxz
(bad)
xor
repnz
enter
or
fld
xor
xchg
push
xchg
test
fisttp
jns
bound
inc
fld
bnd
or
inc
ins
mov
loop
inc
pop
lds
xchg
xor
cdq
stc
inc
lods
push
mov
adc
fsubrp
add
(bad)
or
inc
sub
ins
enter
out
popf
loop
mov
or
and
pop
jne
push
push
jb
movs
addr16
inc
jnp
jb
push
push
cmc
and
repnz
mov
xchg
std
adc
sbb
shr
cmps
out
jb
mov
sbb
push
dec
inc
fst
add
sub
or
jb
pushf
adc
das
xor
iret
outs
add
cmp
dec
push
cmp
aam
nop
cmp
sub
in
popf
lock
(bad)
popf
stos
repz
int
pop
mov
int
jo
je
out
dec
dec
mov
pop
lahf
ret
mov
lods
and
(bad)
fild
mov
in
xchg
rol
jecxz
scas
std
lock
dec
das
into
aam
inc
pop
jmp
and
pop
and
lds
rcr
sti
xchg
lock
bound
push
dec
xchg
or
adc
jmp
in
stos
adc
jle
les
push
pop
xor
and
sbb
jl
lods
cmps
movs
pop
repz
mov
inc
fisub
sbb
lea
test
ins
gs
push
or
cwde
jmp
(bad)
mov
pop
pop
inc
mov
push
and
sbb
jle
cli
clc
pop
sti
jnp
cmp
push
and
or
nop
fild
jnp
outs
dec
mov
test
cwde
cmp
cmp
and
sub
push
repz
and
ss
mov
fldenv
and
or
stc
mov
push
hlt
inc
sbb
jne
das
popf
nop
(bad)
int
es
cdq
icebp
and
movs
pop
lea
mov
inc
lods
in
xor
les
and
mov
cmp
mov
cmp
xor
inc
xor
icebp
(bad)
js
pop
popa
push
ins
or
cmp
das
dec
xchg
leave
jg
aaa
cmps
in
add
addr16
inc
int
push
(bad)
xor
adc
pop
lds
inc
mov
out
js
repz
inc
call
cmps
test
mov
pop
(bad)
or
fmul
fs
sub
push
add
imul
in
cmp
scas
dec
fsub
add
stos
cmp
into
jle
pop
jno
daa
lock
jl
or
adc
popf
sbb
mov
(bad)
mov
mov
jmp
push
dec
repz
lds
inc
iret
xchg
dec
(bad)
xchg
dec
pop
mov
cli
jb
arpl
adc
jmp
sub
xchg
fst
push
inc
mov
or
nop
inc
sbb
pusha
inc
js
sar
push
out
out
and
mov
loopne
sbb
movs
mov
mov
call
or
loope
ror
hlt
push
fcom
js
adc
(bad)
xchg
jg
jmp
pop
dec
mov
outs
jbe
iret
movs
rcr
add
add
es
push
xor
cmp
jmp
imul
test
adc
add
jge
mov
ror
mov
mov
and
hlt
(bad)
mov
xchg
ud2
push
sbb
pop
lds
cli
(bad)
add
cld
jae
out
add
popa
jge
mov
mov
mov
(bad)
cmp
ins
dec
repz
xchg
jg
mov
cli
pop
xchg
and
add
push
jb
mov
mov
jmp
cmps
xor
or
xor
xchg
adc
ja
imul
inc
xor
mov
sbb
fist
xor
sbb
aaa
or
adc
das
mov
mov
push
push
es
mov
adc
pop
in
add
mov
sti
sti
stc
repz
pop
js
fisub
movs
out
dec
sbb
inc
popf
sbb
add
cmp
imul
sub
ret
xchg
mov
jl
mov
call
movs
call
rcr
aam
jg
or
push
xchg
pusha
sbb
adc
mov
xchg
xchg
leave
cmps
fdiv
pop
mov
aam
push
jbe
mov
test
test
lods
aas
xor
rcl
mov
sbb
push
int
aam
jmp
jl
repz
pop
jae
repz
inc
ret
arpl
pop
push
ficom
loop
call
mov
cmp
or
(bad)
xchg
retf
stos
mov
inc
mov
cdq
rcl
inc
push
pushf
jecxz
test
push
jb
mov
jmp
pop
push
jmp
pop
push
and
out
xchg
repz
in
xor
popa
push
pop
mov
or
sub
or
adc
jp
repz
(bad)
iret
xor
xchg
(bad)
int3
and
mov
andps
push
enter
mov
cmc
movs
aaa
cld
movs
scas
and
icebp
sti
int
cs
and
fwait
test
add
adc
shr
pop
jmp
inc
popf
and
cmps
popa
sbb
mov
aad
shr
lock
sbb
arpl
add
mov
jmp
dec
in
pop
mov
aas
lods
test
cwde
cwde
push
mov
mov
out
out
ins
adc
push
(bad)
jle
rcr
(bad)
mov
inc
mov
push
fs
inc
push
into
test
sti
test
sub
and
xor
and
cmp
push
fcomp
div
imul
and
adc
aaa
iret
sub
cwde
and
fsubr
jp
push
jno
and
fiadd
dec
mov
pushf
(bad)
shl
test
inc
test
aam
pop
addr16
mov
arpl
and
mul
je
je
call
pop
xor
push
cmp
js
in
repnz
inc
sahf
xchg
push
jns
mov
mov
or
pop
cmp
push
or
in
cmp
fdivr
xchg
ds
out
loopne
push
mov
ja
mov
shl
out
rol
push
loop
cmp
jp
mov
xchg
lds
xor
push
sahf
or
pop
mov
int
mov
xchg
mov
call
enter
jge
mov
es
shr
adc
fwait
ror
sub
es
loopne
lods
and
xlat
xchg
sahf
fstp
dec
or
xor
fimul
xlat
inc
mov
call
push
mov
jl
add
inc
enter
repz
sub
ficomp
(bad)
sbb
fstp
repnz
sbb
int3
repz
push
jmp
sub
mov
adc
out
mov
int3
cmp
xchg
mov
jnp
mov
jmp
jnp
test
sub
call
scas
pop
shl
sub
call
pop
pop
push
push
(bad)
retf
aam
mov
and
pop
clc
call
fstp
jp
push
xor
dec
xchg
xor
or
cmp
cmp
xchg
cmps
add
add
cmps
xchg
in
push
push
mov
cmp
mov
out
inc
shr
jl
clc
jb
inc
lea
push
sbb
cdq
test
ja
jl
sbb
mov
ds
(bad)
cmp
and
add
push
push
les
push
fiadd
sbb
outs
rcl
mov
add
je
lahf
inc
in
test
dec
movs
xor
lea
xchg
in
xchg
pusha
lahf
sub
std
or
fidiv
or
and
mov
mov
xchg
jmp
and
adc
push
add
inc
jp
adc
jmp
mov
cmp
dec
movs
imul
ds
lock
or
xor
inc
hlt
add
mov
lds
cmps
aas
hlt
retf
imul
mov
fidiv
dec
scas
stos
add
sbb
sbb
sbb
rcl
cld
inc
test
and
fcomp
fsubr
push
call
test
jmp
iret
cmp
cld
pushf
sbb
std
xor
outs
inc
sbb
ds
push
push
jp
call
out
jmp
sbb
ficomp
sbb
pop
push
cmp
icebp
xchg
xor
retf
mov
repnz
pop
sbb
loop
fdivr
pop
cmc
daa
popf
xchg
inc
dec
dec
test
jecxz
jmp
push
push
jp
mov
popf
loopne
(bad)
and
in
ins
adc
fs
and
imul
ret
jns
mov
ins
mov
stos
jnp
fdivr
mov
lahf
cmps
xchg
adc
lea
or
pusha
loop
movs
jge
leave
cli
outs
push
aad
mov
sub
scas
in
sbb
dec
xor
inc
fild
cmps
cli
stos
sti
dec
jmp
xchg
fist
fs
xor
test
mov
sbb
ret
adc
mov
mov
fldcw
mov
add
pusha
std
mov
xchg
xchg
mov
loopne
add
or
ror
xchg
adc
sbb
mov
jo
or
jbe
fwait
int3
in
lock
jmp
dec
sub
xchg
loope
retf
mov
aas
fst
imul
pop
mov
dec
mov
adc
leave
in
jp
(bad)
(bad)
mov
cwde
test
mov
jp
inc
xor
fdivr
mov
jb
lds
cli
mov
(bad)
and
scas
mov
or
ror
pusha
rol
adc
aad
aaa
dec
adc
hlt
inc
sub
rcr
mov
test
imul
dec
mov
fsub
xor
fsubr
les
adc
mov
sbb
jp
cmc
fucom
popf
xor
fcmove
sub
(bad)
fsubrp
and
sar
push
pop
add
fmul
jp
fdiv
push
jle
adc
adc
cmp
into
sbb
hlt
mov
pop
mov
addr16
jle
jmp
es
aaa
sti
cld
std
push
push
sub
mov
fucomi
sbb
fidivr
out
pop
pusha
cwde
sub
out
fisttp
mov
je
cmps
mov
adc
int3
ds
in
xor
xor
and
in
popf
es
mov
and
nop
js
call
fcomp
dec
or
add
mov
cmp
scas
inc
test
xchg
cmp
outs
(bad)
enter
stc
daa
pop
cmp
not
dec
sub
into
enter
xchg
pop
les
xor
sbb
test
jno
adc
mov
(bad)
jb
mov
add
cwde
mov
dec
stc
stos
jmp
adc
xchg
inc
movs
inc
xor
jmp
out
inc
cmps
in
push
dec
sbb
loope
or
fidivr
ret
rol
xchg
adc
rcl
push
in
jo
fsub
xor
and
cmp
and
ds
dec
shr
sbb
mov
mov
sbb
shl
sbb
mov
idiv
ds
push
xor
fcmovne
xchg
lods
and
add
or
add
ins
pushf
jns
popf
pop
add
sbb
xor
out
pop
ret
or
mov
lock
xchg
mov
pop
ins
sub
add
sub
daa
add
sbb
das
sbb
and
or
outs
push
lods
xor
in
sub
dec
mov
sub
mov
ror
push
adc
sbb
jns
sub
imul
adc
div
dec
aas
sbb
inc
ss
jb
fsubr
xchg
scas
out
inc
sub
sub
fisttp
rcl
dec
xor
mov
sub
jbe
(bad)
fsubr
loope
test
mov
jmp
pop
int
outs
cs
sbb
test
rcr
jmp
daa
mov
out
out
dec
or
gs
add
add
data16
inc
ins
xchg
fwait
mul
int
sahf
dec
in
pop
shr
in
bound
(bad)
and
lods
ins
dec
xor
(bad)
cs
sbb
inc
test
bnd
enter
xor
ret
dec
pop
bound
sub
mov
dec
or
push
add
sti
popa
xchg
in
mov
call
je
xchg
iret
add
mov
cmps
hlt
aad
retf
mov
bound
jmp
jno
mov
xchg
sbb
hlt
push
popa
push
and
fwait
pop
mov
mov
jecxz
xchg
dec
lods
(bad)
push
aam
fst
dec
or
add
push
adc
ins
dec
js
push
sub
mov
jnp
retf
cmp
clc
stos
mov
icebp
mov
cdq
ins
popf
das
cmc
inc
xlat
xor
mov
fdiv
call
jecxz
mov
stc
aam
xchg
out
mov
dec
xchg
sbb
imul
adc
xchg
ss
cmp
loopne
cmp
inc
js
repnz
add
mov
stos
enter
jne
xchg
inc
popf
xchg
push
(bad)
mov
pop
icebp
mov
jo
xor
sub
xchg
test
in
nop
outs
addr16
das
mov
pop
(bad)
repnz
(bad)
clc
mov
xor
es
repnz
pusha
dec
lods
aad
or
cdq
stos
jge
inc
sahf
lods
sti
and
mov
int
pop
outs
and
fisttp
(bad)
mov
jo
mov
fst
repz
js
jmp
lock
inc
sbb
mov
gs
jp
mov
movs
out
lea
retf
pop
sub
loope
push
enter
dec
xor
cwde
push
xchg
cmp
pushf
cwde
(bad)
cmp
(bad)
clc
pop
cmps
loope
jl
push
shr
jnp
push
fimul
rol
add
(bad)
repnz
fisub
(bad)
loope
stos
pop
(bad)
stos
inc
xor
add
sbb
push
ja
test
or
mov
sahf
or
and
jnp
sbb
call
inc
fdiv
or
inc
and
mov
popf
imul
mov
jno
addr16
inc
dec
sbb
arpl
aaa
mov
push
mov
rcr
sahf
ds
xchg
out
add
adc
aad
test
into
mov
pop
sahf
sub
js
imul
(bad)
and
fs
and
and
inc
data16
add
test
(bad)
movs
sub
dec
mov
jge
or
jg
imul
cwde
jnp
das
lahf
je
mov
int
outs
or
mov
(bad)
(bad)
push
repz
mov
daa
jmp
xchg
xchg
rcl
and
mov
add
mov
mov
cmp
in
cmp
repnz
jbe
les
hlt
cmp
nop
jg
and
call
adc
mov
stos
and
in
jnp
push
cmp
aas
or
cmp
scas
xchg
ret
movups
out
fsubp
dec
inc
sar
add
xchg
mov
fistp
xor
jmp
loope
enter
sbb
iret
mov
repnz
adc
rcl
sar
sti
mov
pop
das
icebp
test
jb
outs
rcl
ror
ror
jns
sbb
cdq
cwde
test
adc
sub
cmp
and
xchg
loop
ror
jl
pusha
jmp
mov
movs
loope
mov
add
adc
iret
test
(bad)
mov
pushf
icebp
(bad)
sbb
pop
sub
out
call
fcom
gs
mov
cld
mov
mov
iret
pop
jecxz
cli
mov
pop
in
fisttp
(bad)
shl
or
(bad)
in
(bad)
shl
lahf
xchg
xchg
push
add
mov
push
push
mov
or
xor
push
pushf
es
out
and
cmp
ficom
movs
pop
mov
js
js
sti
mov
lea
arpl
fimul
inc
dec
jmp
arpl
pop
cmc
mov
cld
hlt
cmps
bound
loopne
sub
nop
dec
lea
mov
pushf
hlt
push
std
xor
and
add
(bad)
push
dec
dec
dec
repnz
mov
sti
dec
push
fnstenv
mov
test
jmp
cmc
or
mov
dec
mov
fist
xchg
dec
fimul
adc
push
mov
neg
lea
cmp
adc
sub
clc
add
ficom
retf
cld
in
or
ins
xchg
adc
ins
push
imul
xlat
ficom
lds
cmp
sbb
out
(bad)
fcmovnb
in
dec
inc
iret
retf
jmp
sub
imul
shr
dec
inc
sbb
xchg
das
push
inc
push
retf
mov
jg
mov
lock
stc
xchg
(bad)
lods
out
mov
adc
pop
sub
mov
test
dec
mov
inc
fnsave
jecxz
test
xlat
dec
jbe
adc
inc
fucomp
inc
cmps
push
(bad)
adc
cmp
cmp
mov
std
inc
out
movs
fsubr
int
iret
aam
repnz
sbb
xchg
adc
jbe
mov
jp
(bad)
mov
dec
ss
stos
push
je
mov
outs
mov
sub
pop
xlat
push
dec
jnp
add
jmp
cwde
adc
jo
xchg
xchg
scas
sbb
shr
cmp
inc
in
daa
mov
(bad)
mov
into
cmc
or
xchg
xchg
aaa
push
jnp
pop
fmulp
cmc
jmp
mov
in
stos
mov
in
mov
cmp
xchg
adc
sub
dec
(bad)
mov
xchg
inc
cmp
push
imul
sbb
jb
jnp
repz
xchg
jl
out
push
test
jb
ja
pop
sub
ffree
out
cs
mov
jne
repz
cmp
(bad)
cwde
ror
or
ss
mov
jmp
mov
int3
cmp
sub
(bad)
mov
push
dec
movs
mov
stos
test
mov
xor
stos
adc
idiv
cmc
sub
(bad)
stos
fld
ins
or
dec
imul
jmp
pushf
into
jmp
or
and
test
mov
sub
fs
je
in
jge
dec
leave
xchg
or
aam
call
cmps
xor
jb
(bad)
cmp
ficom
push
sub
mov
out
or
in
and
xchg
shl
mov
cmp
mov
sub
cmp
cdq
push
add
bound
outs
fild
shl
add
ret
div
jg
icebp
popa
(bad)
xor
cld
out
inc
xor
push
ret
and
in
pop
ins
fisttp
and
fwait
xchg
fist
ret
sub
inc
pop
pop
mov
inc
jne
loope
daa
and
test
fnstsw
inc
pop
mov
test
imul
pop
repz
dec
bound
mov
cdq
lods
add
jb
outs
mov
test
rol
retf
sub
repz
mov
cli
adc
in
or
mov
imul
dec
push
inc
cmp
in
dec
loopne
mov
rol
ret
lods
push
xor
jns
cli
push
(bad)
call
inc
mov
scas
ret
push
push
mov
jmp
gs
fldcw
mov
into
pop
int
ror
shl
fisub
jns
fnstsw
call
push
push
scas
cmc
xchg
sti
jmp
mov
push
dec
jnp
ja
test
add
push
push
sahf
inc
icebp
jle
aaa
ret
test
ins
bound
push
sub
xchg
or
sbb
fwait
add
push
movs
xor
inc
das
adc
sbb
cs
ret
outs
iret
(bad)
mov
leave
test
dec
jb
adc
add
xchg
adc
outs
push
mov
sub
jns
pop
adc
push
cmp
jae
mov
bound
fisttp
ss
fcomp
push
pop
xchg
ja
out
xor
jae
jmp
sub
call
xor
dec
push
mov
and
lods
popf
imul
ins
xor
scas
adc
test
push
fld
pop
mov
fs
test
add
sub
or
lock
iret
imul
ficomp
cld
bound
ds
mov
adc
jmp
add
sar
in
setae
jge
adc
xor
aas
out
dec
push
outs
jbe
in
xchg
(bad)
cmps
mov
inc
jne
add
shr
mov
sbb
and
cdq
dec
mov
dec
cli
outs
xor
inc
mov
xchg
cs
adc
jo
jp
ins
std
loop
stos
inc
mov
sti
mov
ror
and
inc
push
sbb
fstp
xchg
movd
in
in
stos
lods
sub
sbb
mov
aas
pop
and
aam
jl
or
cmp
iret
dec
inc
aad
sti
sahf
ds
mov
in
mov
mov
imul
cmp
stos
or
add
lds
add
or
dec
ja
jecxz
sti
mov
aam
lahf
outs
int3
push
mov
sbb
jbe
mov
loopne
xchg
rcl
cdq
in
mov
and
lock
cdq
sub
mov
or
push
inc
sub
fdivr
cli
cmp
or
inc
out
ja
push
jcxz
loop
or
dec
les
dec
leave
hlt
xor
jb
inc
sahf
or
sub
ret
push
add
add
stos
mov
arpl
mov
or
ins
or
mov
push
shl
jl
or
dec
scas
icebp
jmp
in
cmp
xchg
shl
mov
push
dec
(bad)
mov
mov
adc
idiv
mov
and
pop
inc
iret
push
pop
inc
inc
pop
idiv
cmp
jmp
sar
xor
cli
inc
cmp
dec
mov
int
pop
push
or
mov
retf
(bad)
pop
(bad)
aas
fdiv
sbb
add
pusha
pop
fisttp
pop
inc
out
mov
rol
pushf
lea
mov
fist
out
lahf
shr
mov
xlat
xlat
xchg
and
(bad)
mov
pop
mov
jb
mov
pop
rcr
sbb
cld
ds
ins
xor
jecxz
jo
pop
pop
in
aas
fcom
adc
imul
dec
lds
cli
popa
add
cwde
jmp
out
cmp
pusha
add
xchg
sub
mov
(bad)
stc
mov
push
lods
(bad)
cmc
pop
out
fcomp
xchg
fld
aas
and
addr16
or
std
mov
sbb
in
jecxz
das
movs
cmp
mov
fld
out
sti
pop
fisttp
jnp
dec
cld
int
movs
pop
push
addr16
xor
cmp
add
int
add
movs
sbb
retf
fucomip
cwde
push
sbb
adc
mov
loope
outs
jecxz
imul
test
(bad)
jle
rol
mov
in
jno
(bad)
mov
out
popa
jne
cmp
es
xchg
fadd
ins
xor
or
jnp
std
cmp
ret
shr
mov
iret
repnz
pop
push
and
(bad)
pushf
in
mov
ror
fst
adc
cli
cmp
jo
ins
adc
xchg
mov
adc
shr
test
push
sbb
sbb
xchg
sub
xor
scas
mov
or
nop
pop
je
movs
aas
sbb
xor
jle
(bad)
test
test
and
pop
sbb
jb
xchg
addr16
xchg
gs
sub
out
push
xchg
(bad)
cmp
shl
sub
mov
pop
outs
and
xchg
or
fidiv
or
into
sub
addr16
int3
dec
cmp
(bad)
pusha
cmp
pop
xchg
mov
inc
cmp
clc
rcl
adc
inc
or
mov
inc
push
ja
in
imul
push
sbb
lea
lods
lds
cmp
fcom
loop
push
pop
xchg
ins
push
push
test
ret
loope
dec
stos
xchg
inc
push
or
mov
popa
imul
out
mov
hlt
push
sbb
rcr
jne
jno
and
add
(bad)
push
inc
pop
(bad)
mov
pop
aad
fst
xor
das
inc
pop
jb
ja
ud1
mov
xchg
fisubr
fisub
add
jle
popa
aas
stos
imul
pushf
mov
cmp
add
ret
or
cmps
dec
or
sub
dec
jo
mov
xor
je
mov
push
sahf
mov
pop
cs
repz
or
gs
cli
jmp
stc
xchg
mov
test
cwde
shl
xor
loope
clc
pop
sub
cmp
ss
mov
xchg
ret
les
(bad)
hlt
ror
or
retf
test
lahf
ds
out
sbb
cs
popf
pop
pop
(bad)
cwde
int
add
jle
push
sbb
mov
jle
sbb
add
cmps
cmp
push
in
jp
aaa
into
clc
sub
push
push
fimul
mov
pop
jne
xchg
mov
test
mov
aas
data16
or
daa
mov
push
pop
(bad)
mov
pop
imul
adc
aaa
scas
test
aaa
aad
sub
out
mov
lea
sub
sbb
pop
mov
ins
mov
jo
repz
je
jb
mov
cs
mov
shr
sbb
mov
xchg
xchg
jg
adc
push
stc
fld
mov
push
outs
jo
mov
sub
lods
cmps
shr
mov
jmp
and
int
mov
jbe
ror
jmp
xlat
pop
aad
in
imul
jb
mov
add
sar
inc
or
lods
push
(bad)
pop
(bad)
aad
pop
jo
mov
mov
ret
addr16
test
cdq
movs
and
push
xchg
je
arpl
sub
cmp
scas
inc
psubsb
popf
sbb
retf
push
mov
into
sahf
sub
and
pop
pop
mov
sbb
xlat
cs
jmp
sbb
sbb
or
fisubr
dec
daa
cmp
jns
xchg
call
mov
lahf
mov
pop
pop
and
xchg
push
lea
fcmovne
repz
dec
xor
int3
js
mov
and
add
lds
and
push
mov
inc
arpl
cmps
push
aaa
mov
retf
jne
sbb
push
cmp
aad
jns
in
jmp
idiv
neg
ss
pusha
fs
mov
jo
push
dec
xor
ss
repnz
pusha
sub
inc
les
lods
adc
mov
div
mov
cmp
push
jnp
jmp
retf
fs
cwde
mov
xor
add
(bad)
addr16
pop
add
cmc
ror
cmps
xor
ss
nop
retf
cmp
(bad)
mov
aad
mov
ja
out
mov
sub
sbb
scas
aas
jp
xor
and
jecxz
imul
or
jmp
stos
dec
sub
mov
xchg
cwde
xchg
loopne
mov
in
jae
out
jp
xor
cmps
icebp
xchg
cwde
mov
sub
mov
lea
cmp
int3
mov
test
xor
jnp
test
add
imul
add
inc
fsubr
pop
mov
mov
hlt
pop
sub
and
jmp
nop
cld
cwde
lods
int
inc
daa
pop
inc
movs
ins
or
(bad)
sbb
add
mov
sbb
aas
int3
xchg
xchg
sbb
ins
xchg
pop
pop
xor
and
je
in
cmp
rol
add
les
dec
mov
sti
jae
lea
mov
adc
ret
(bad)
call
xchg
add
adc
push
stos
xsha256
cmps
push
adc
and
mov
push
ja
test
push
daa
rcl
test
push
ja
pop
mov
rcl
icebp
dec
sub
into
ds
jge
xchg
outs
dec
data16
xor
add
sbb
ror
mov
rcl
pop
and
cdq
sahf
dec
push
test
pushf
(bad)
ror
xlat
out
lods
jbe
iret
cs
movs
jmp
int
mov
(bad)
fist
pop
das
push
sbb
cmps
sub
jge
stos
xchg
mov
push
sub
push
gs
add
stos
test
pop
push
pop
pop
jno
cmp
loopne
mov
test
mov
push
sub
pop
les
pop
(bad)
mov
jmp
mov
cmps
stos
cmp
sub
(bad)
loope
sbb
pop
in
call
rcl
stc
adc
sti
xchg
pop
inc
mov
dec
daa
jno
sub
push
xor
mov
cs
adc
mov
xchg
mov
js
mov
mov
pop
jg
push
or
push
pop
inc
pop
jne
xor
dec
xor
fidiv
jns
repnz
sbb
jmp
pop
push
lds
mov
repz
add
and
cs
aaa
std
cmp
sbb
sbb
inc
repnz
cmp
jl
mov
add
aas
mov
sub
mov
cmp
or
popf
xchg
mov
dec
stos
test
sbb
mov
ss
or
sbb
and
sbb
pop
int
in
sub
jo
jecxz
adc
fcomip
not
or
inc
adc
lds
pop
popf
repnz
nop
pop
push
pusha
or
not
clc
cmc
dec
push
(bad)
and
jae
cmp
pop
stos
mov
fstp
fcom
add
mov
pop
dec
add
xchg
retf
retf
jecxz
or
test
scas
repnz
push
es
loop
(bad)
xor
adc
dec
movs
adc
arpl
out
mov
je
loopne
lods
mov
mov
nop
mov
xchg
ret
sub
mov
jbe
fcom
popf
ins
movs
leave
adc
mov
movs
mov
mov
aam
int3
dec
test
(bad)
dec
inc
test
int
and
xchg
test
inc
shl
fcom
das
jp
mov
std
or
xlat
shl
fdiv
adc
adc
bound
dec
adc
outs
inc
inc
arpl
xchg
jbe
repz
mov
imul
lahf
aas
push
cmc
dec
retf
xchg
dec
stos
sub
(bad)
jo
dec
dec
xchg
and
lock
or
sbb
and
mov
jae
jle
jge
cmp
lods
jmp
aaa
and
(bad)
adc
push
ins
sub
(bad)
loop
imul
dec
enter
ret
sub
pusha
xchg
outs
adc
iret
(bad)
and
jne
aas
sub
jae
(bad)
fs
mov
jle
std
(bad)
and
jp
js
mov
jmp
mov
stos
in
mov
jmp
data16
add
jmp
inc
add
jmp
call
jb
repz
idiv
pop
mov
cwde
dec
cmp
adc
jo
leave
jg
imul
adc
(bad)
dec
cmps
xor
cld
dec
mov
jae
mov
fstp
pop
into
sub
dec
push
inc
call
rcl
push
loopne
ror
scas
in
push
jae
scas
mov
pusha
xchg
push
sub
or
nop
aad
push
mov
cwde
retf
or
jp
cli
rcr
cmp
fsubr
js
es
dec
ds
cli
aas
(bad)
lahf
sbb
sbb
cmp
cmp
sbb
jge
and
popa
les
sbb
sbb
jl
mov
add
jmp
mov
loop
dec
lds
adc
or
cld
cmp
push
das
jle
mov
stos
inc
in
iret
div
dec
sbb
and
xlat
cmps
movsx
mov
call
cmp
and
(bad)
mov
test
or
sbb
js
xchg
(bad)
jecxz
sbb
mov
and
xor
outs
mov
in
pop
pop
inc
rcr
inc
mov
clc
ret
mov
fsubr
ss
pop
xor
imul
cmp
test
mov
pop
push
cwde
arpl
fld
mov
ss
lock
into
add
inc
mov
(bad)
pop
popf
pop
arpl
sar
jmp
dec
inc
dec
into
dec
and
add
adc
std
push
fisttp
test
jno
leave
lds
dec
sub
sbb
retf
dec
sti
xor
int
pusha
add
inc
inc
push
xor
mov
jnp
stos
repnz
sbb
stos
lods
ins
adc
adc
adc
rol
xchg
and
adc
xchg
xor
sub
inc
imul
das
pop
pop
fwait
xor
cmp
popf
fnstcw
lds
or
mov
in
mov
cli
and
dec
mov
mov
(bad)
inc
mov
lds
rcl
shl
push
iret
mov
loopne
(bad)
std
xor
out
dec
mov
dec
jb
movs
sub
test
adc
xor
xor
xchg
sbb
mov
adc
cmp
pop
cld
(bad)
rcr
xor
xlat
pop
add
mov
in
sub
loope
inc
sub
pop
cs
pop
call
fst
jns
ins
ins
lods
xor
retf
xor
out
jae
mov
mov
ret
push
jns
ins
neg
shl
in
lahf
xchg
sbb
add
mov
adc
pop
mov
mov
adc
cmc
repnz
cmp
push
scas
repnz
imul
(bad)
and
stos
arpl
sub
lock
cwde
lods
(bad)
clc
out
pop
add
push
dec
call
cmp
lock
pop
add
lahf
aas
dec
mov
cli
sbb
repz
imul
mov
and
scas
inc
fstp
adc
je
xchg
cmps
stc
cmp
fst
dec
repnz
jle
jo
icebp
aaa
shl
fdiv
pusha
or
push
dec
fdiv
cmp
add
or
fs
hlt
sbb
clc
mov
cmp
mov
sub
and
cwde
cmp
popa
cs
(bad)
dec
in
arpl
jg
dec
inc
jno
shr
daa
lea
sbb
jecxz
push
pop
or
out
xchg
add
add
(bad)
fst
es
scas
das
int3
pop
mov
pop
xor
lods
cmp
mov
sbb
push
push
lea
xor
mov
mov
mov
inc
fistp
sti
jg
jnp
pop
mov
pop
push
int3
(bad)
in
sub
sbb
jecxz
xor
mov
fld
adc
aaa
jae
dec
ret
lds
(bad)
push
adc
dec
into
xor
adc
xchg
push
or
(bad)
or
daa
jecxz
je
mov
idiv
test
sbb
pop
les
ins
add
xchg
pop
repz
arpl
out
and
pop
aam
icebp
cmps
sahf
icebp
iret
sub
or
aam
cs
xchg
out
dec
sub
sub
or
jle
in
pop
add
adc
adc
and
adc
push
jne
ds
js
popf
or
add
mov
jmp
lock
stc
int3
not
cmc
sbb
test
call
mov
pop
fimul
sbb
pop
loop
push
retf
pop
mov
dec
xlat
and
js
sub
and
daa
or
and
cmc
jmp
adc
push
(bad)
enter
mov
jns
xchg
cli
neg
xlat
movs
cli
fldcw
mov
repnz
iret
hlt
rol
out
mov
sub
mov
aad
sbb
and
in
pop
lods
cmp
mov
inc
pop
add
ins
test
inc
mov
xchg
push
hlt
imul
stc
rol
repz
or
rcl
bound
js
mov
jmp
mov
fist
(bad)
or
addr16
cmp
mov
bnd
dec
mov
stc
cmp
pop
loop
push
pop
test
int3
jbe
sahf
not
cmp
pop
out
repz
mov
jecxz
dec
outs
xor
adc
ret
inc
push
in
sbb
pop
sub
mov
dec
jb
popf
mov
xchg
add
push
int3
pop
xor
or
xlat
out
fs
rol
bswap
add
daa
sub
jle
pop
sbb
add
retf
adc
mov
dec
or
pop
inc
lods
jmp
sbb
push
test
xor
je
rcr
push
xor
mov
scas
pop
out
(bad)
hlt
pop
fild
out
es
xchg
sub
push
mov
add
mov
pop
les
gs
xor
xlat
js
and
pop
sar
pop
sub
sub
retf
enter
lock
mov
inc
pop
gs
fst
or
data16
pop
gs
mov
test
jb
in
inc
mov
dec
mov
and
sub
lds
leave
scas
retf
mov
xlat
and
mov
fwait
adc
or
les
je
sub
rol
mov
mov
outs
sbb
mov
cs
in
jno
push
cmc
add
inc
push
mov
in
cmps
outs
xchg
sbb
cli
imul
pop
cmp
dec
sbb
jg
mov
cmp
and
rcl
pop
mov
sub
sti
outs
or
jge
outs
and
sar
inc
xchg
fstp
pushf
repnz
adc
popf
or
ret
fwait
out
(bad)
xlat
out
pop
cmp
xor
imul
and
ss
imul
jg
add
or
nop
daa
sbb
aad
mov
push
xor
fild
xchg
test
popf
int3
mov
mov
jmp
cmp
inc
movs
aam
test
daa
mov
inc
mov
imul
sub
jae
stc
mov
or
jne
cmp
sbb
lods
test
jg
(bad)
mov
mov
or
dec
in
aas
push
jmp
test
lds
or
push
cmp
outs
ins
or
pop
loop
je
loop
pop
xchg
scas
icebp
dec
popf
dec
xor
jle
fsub
mov
in
add
fdivr
loopne
les
movs
jl
sti
jnp
sbb
ins
xchg
add
or
sub
push
or
not
pop
retfw
les
push
mov
sar
test
push
ret
(bad)
pop
xor
push
(bad)
mov
fcom
js
bound
adc
dec
mov
push
pop
add
loop
movs
adc
inc
jo
jnp
fst
add
lods
popf
(bad)
jb
das
mov
sub
in
out
pop
scas
inc
cmp
ja
ret
jo
pop
push
mov
and
ret
(bad)
push
fwait
sub
retf
dec
and
mov
mov
mov
ins
push
adc
inc
sbb
inc
mov
into
pop
mov
int3
jmp
es
cmp
call
sub
scas
pusha
add
mov
jno
sbb
faddp
not
cmc
sub
xchg
cmp
dec
sub
xchg
pop
pop
enter
std
jno
mov
cwde
push
ds
jle
xchg
repnz
xor
loope
add
stos
mov
in
and
sub
dec
sahf
cs
mov
pop
test
push
les
sub
cmp
lds
mov
xchg
les
sub
repnz
popf
sbb
xor
pushf
dec
mov
nop
xchg
jmp
dec
jno
jmp
or
inc
je
mov
and
hlt
test
stc
cmp
(bad)
outs
hlt
adc
mov
icebp
vaesdeclast
out
xchg
daa
ret
lea
mov
mov
pop
jbe
push
push
punpckldq
sub
popf
mov
and
mov
test
push
stos
jge
test
xor
jmp
sub
add
inc
gs
add
(bad)
imul
mov
mov
push
dec
scas
ds
or
and
lahf
mov
fadd
imul
ficom
mov
mov
and
rcr
(bad)
push
ret
les
lods
lock
xchg
lods
jo
mov
retf
push
cmovs
(bad)
cdq
dec
push
dec
iret
mov
dec
aaa
out
js
pop
frstor
adc
clc
inc
ror
or
fwait
or
movs
aas
sahf
(bad)
call
dec
mov
sbb
mov
push
clc
ss
inc
jbe
out
daa
jecxz
std
cdq
mov
or
call
mov
mov
pcmpgtw
es
adc
stc
push
jp
sbb
sub
sub
cmp
inc
dec
in
pop
int
dec
jo
pop
mov
js
xchg
xchg
inc
pop
pop
stos
cmps
mov
ss
xchg
je
xor
(bad)
mov
mov
pusha
mov
int
or
pop
loope
in
jg
out
xor
jbe
loope
dec
pop
dec
mov
outs
mov
add
mov
adc
adc
jb
gs
frstor
sbb
lods
push
cli
leave
repz
xchg
mov
xor
pushf
or
jns
enter
dec
loop
in
sbb
inc
pop
sbb
ja
aam
ret
adc
int
push
xchg
nop
or
daa
jle
dec
pop
imul
(bad)
pop
inc
pop
cmc
jo
push
dec
std
and
sbb
pop
cmps
pop
lea
sbb
push
imul
jmp
and
stos
arpl
xchg
dec
mov
sbb
mov
(bad)
mov
aas
sbb
(bad)
dec
pop
push
mov
or
popf
jge
mov
loope
enter
xchg
dec
ins
leave
movs
cmp
xor
mov
jg
mov
stc
or
add
imul
test
stos
test
cmc
mov
mov
adc
gs
gs
inc
imul
outs
jl
mov
fadd
sar
test
mov
je
push
push
mov
addr16
xchg
adc
push
scas
mov
push
les
icebp
push
dec
or
ds
(bad)
xor
lods
addr16
push
jl
int
lods
fimul
leave
adc
das
and
jne
in
mov
pop
push
mov
mov
sahf
cmp
int3
xor
xor
xchg
or
(bad)
scas
pop
in
test
icebp
push
fidivr
cwde
data16
add
sub
ja
stos
test
movs
push
loope
ins
(bad)
jo
ins
movs
xchg
mov
mov
sbb
xchg
(bad)
xor
cli
addr16
mov
jmp
int3
push
pop
xor
jns
jecxz
cmp
in
data16
pop
std
pop
xor
mov
pop
ror
out
pop
add
jle
sti
mov
imul
(bad)
mov
ja
popa
int3
iret
push
enter
cmp
popf
retf
cmp
mov
stos
lods
movs
sub
cmp
mov
and
jmp
gs
arpl
and
push
inc
jne
xor
gs
xor
or
sub
cmp
mov
sbb
sub
and
popa
ja
fidiv
jo
ds
pop
lahf
movs
leave
sbb
jecxz
cld
or
(bad)
xchg
popa
cld
cmps
leave
imul
cmp
lds
mov
jg
mov
int3
and
outs
pop
pop
pop
jmp
aaa
rcr
rcl
test
cs
les
sub
cmp
cdq
out
rcr
pop
imul
stos
push
les
jmp
lods
or
pushf
pop
movs
into
mov
in
mov
and
bound
cmp
jb
push
mov
push
push
cs
leave
adc
outs
dec
dec
jmp
cmp
pop
jl
imul
sub
aad
push
iret
mov
ja
sar
push
cmps
out
and
es
stos
lds
inc
arpl
cld
jne
mov
push
add
ror
xor
cdq
and
mov
push
push
fsub
shr
ror
lahf
jo
test
aaa
movs
leave
in
push
push
arpl
(bad)
out
outs
mov
test
adc
mov
mov
fistp
ret
test
inc
jle
xlat
dec
mov
daa
add
and
inc
inc
adc
inc
pop
imul
aad
pushf
or
pop
push
bound
inc
in
push
adc
cmp
idiv
adc
inc
psubb
ds
mov
addr16
hlt
sub
(bad)
shl
xor
mov
or
mov
jmp
(bad)
pop
test
std
xchg
and
mov
sahf
push
ja
lahf
out
stc
(bad)
mov
push
or
enter
mov
sbb
(bad)
sar
test
xchg
jne
lds
jmp
push
jg
int3
push
inc
push
repz
aam
inc
mov
movs
xlat
ficom
adc
loopne
cmp
fwait
dec
jnp
retf
imul
and
loopne
jl
out
stc
mov
loop
mov
fidiv
fcom
loop
cmc
jno
xchg
and
test
mov
(bad)
and
sub
xchg
repnz
adc
mov
xor
add
popf
sub
pop
retf
in
cmp
pop
inc
add
inc
hlt
mov
mov
sbb
inc
aas
xchg
mov
cmp
sbb
dec
cmp
mov
cmc
cmp
not
push
sbb
iret
stos
push
rol
test
(bad)
jg
add
jp
ret
or
cmps
mov
adc
ror
cli
adc
mov
inc
js
inc
jbe
pusha
enter
add
jge
jle
out
xchg
add
pop
push
jnp
nop
xchg
out
(bad)
push
out
inc
jae
mov
mov
mov
mov
jle
mov
add
cmp
int
test
mov
dec
push
push
jmp
fld
dec
fcomp
add
push
jnp
js
add
jmp
jo
cmp
(bad)
repnz
pop
retf
int3
movs
in
(bad)
bound
leave
fimul
push
xor
cdq
(bad)
movs
sar
(bad)
dec
xchg
jle
in
in
rcl
xchg
push
sbb
iret
mov
add
inc
fisubr
jbe
fld
jg
mov
cmp
bound
lock
sbb
lods
jp
adc
xor
test
sub
dec
push
inc
inc
pop
xchg
cld
and
sbb
mov
xchg
cld
ins
mov
pop
scas
push
cmps
adc
loopne
sub
dec
mov
inc
cwde
mov
int3
out
pop
cs
addr16
sbb
jg
das
cwde
mov
or
retf
rcr
pushf
adc
adc
lods
pusha
les
jl
inc
fwait
inc
fcomip
pop
in
lods
sbb
aad
scas
jmp
dec
adc
out
lods
jbe
cmova
mov
cs
or
popf
in
leave
jle
xchg
je
cmp
sti
adc
adc
jecxz
jmp
and
xchg
(bad)
aas
test
xchg
(bad)
and
lock
loope
pop
(bad)
and
call
push
inc
xor
out
jl
std
ja
xchg
jecxz
lds
div
sbb
in
cmp
aas
(bad)
jmp
push
in
pop
push
mov
iret
outs
scas
daa
jge
pop
test
clc
and
dec
fwait
sbb
pop
jns
pop
clc
push
mov
mov
or
dec
lahf
aam
pop
mov
sub
bound
std
dec
popa
cmp
shl
xor
repnz
loop
sbb
dec
test
(bad)
(bad)
(bad)
push
pushf
lds
fucomip
pop
pop
dec
add
adc
cwde
test
push
add
mul
lahf
movs
call
stos
sbb
movs
or
jge
adc
add
cmp
push
xchg
dec
or
(bad)
(bad)
out
sbb
cmp
pop
repnz
test
sbb
cmps
xchg
out
pop
push
mov
fs
mov
das
(bad)
mov
loop
pusha
push
and
loope
(bad)
out
push
sbb
add
jp
sub
xchg
push
call
mov
sub
lds
pop
jo
iret
inc
ins
jmp
sar
into
push
in
push
inc
pop
je
lods
pop
fs
inc
xchg
test
mov
xchg
inc
mov
sub
sti
inc
mov
xchg
out
in
popa
mov
sbb
jb
ins
sub
ds
lods
shl
dec
cmp
inc
cmp
dec
xlat
ds
inc
xor
test
jb
scas
(bad)
mov
icebp
xchg
je
rcl
mov
inc
jecxz
loopne
movs
or
jae
mov
sub
movs
(bad)
mov
mov
push
sbb
xor
push
sub
in
fs
add
sub
mov
sbb
test
cmp
push
test
pusha
fmul
xchg
inc
or
retf
loope
rol
adc
lahf
(bad)
mov
jbe
push
out
sahf
mov
jge
(bad)
in
popf
dec
stc
add
xor
and
or
addr16
mov
xchg
cmps
shl
sar
cdq
std
jecxz
jecxz
data16
push
nop
leave
push
lea
sti
xchg
outs
pop
add
hlt
(bad)
pop
lods
pop
sbb
das
cli
jns
fsub
xchg
imul
ins
jae
sbb
cmp
and
inc
push
adc
imul
loope
cmc
push
push
lahf
std
mov
hlt
or
jae
out
add
ja
les
add
sbb
or
dec
retf
icebp
push
jb
sbb
aam
push
lea
push
shl
shr
pop
ins
adc
ror
sub
xor
das
fisttp
cmp
jg
xor
inc
test
jmp
inc
push
fbstp
stos
lea
inc
xchg
outs
jno
data16
xchg
adc
arpl
std
aad
int3
cwde
ror
add
popa
fist
cmps
or
sub
out
mov
in
adc
lock
mov
jp
xchg
dec
push
mov
xchg
jge
pop
lock
mov
and
movs
jae
hlt
mov
icebp
aam
jp
mov
neg
fsub
aam
or
push
pop
xchg
scas
fucomi
into
into
cmc
inc
mov
in
dec
imul
es
or
ins
(bad)
repz
jmp
xor
xor
(bad)
clc
cmp
out
lds
xchg
fild
jns
push
adc
jp
and
xchg
aas
cmps
lock
mov
add
pop
repz
add
fnstsw
test
push
mov
daa
(bad)
mul
ror
mov
jnp
jle
ss
sub
mov
pushf
imul
mov
dec
mov
sub
call
aaa
add
out
dec
lods
and
imul
enter
cs
mov
inc
sbb
add
push
test
jge
sbb
xchg
cmps
push
and
inc
push
mov
mov
xchg
jo
mov
sbb
and
mov
in
add
mov
rcl
lods
xchg
sbb
mov
es
lea
shl
push
jmp
mov
sar
pop
dec
mov
xchg
es
jo
pop
sti
sti
mov
in
push
jae
add
sti
fwait
jl
ss
dec
cmp
rol
ret
popa
inc
xor
and
cwde
adc
je
repnz
mov
fiadd
push
lahf
lahf
add
scas
js
je
into
pop
jns
sub
jbe
inc
fwait
retf
xor
mov
xchg
xchg
cli
popf
fsubrp
adc
aam
mov
push
lds
jmp
daa
add
in
aad
ds
add
shr
push
or
or
sbb
js
and
inc
das
scas
imul
(bad)
xchg
xlat
xor
mov
mov
xor
sbb
mov
push
xchg
adc
ret
sub
fist
mov
pop
mov
mov
sbb
out
movs
cld
retf
into
cmps
aad
jnp
mov
mov
test
xchg
and
push
xchg
mov
jnp
arpl
mov
outs
test
jl
dec
sar
mov
sub
das
hlt
dec
mov
sub
mov
push
pushf
add
cmp
or
test
enter
in
pop
inc
stos
nop
mov
jmp
push
and
leave
add
sub
sbb
adc
jecxz
sbb
push
gs
imul
jp
cmp
pop
loope
in
mov
xlat
call
test
mov
aas
pop
xchg
shl
out
mov
cmps
adc
(bad)
sub
sub
push
pop
add
test
les
mov
rcr
loop
xchg
dec
adc
sysenter
mov
retf
mov
arpl
push
pop
xchg
mov
dec
push
mov
mov
push
mov
es
cli
xchg
lods
add
xor
aaa
dec
ins
lods
cvtpi2ps
call
js
sub
pop
xchg
int3
pop
dec
adc
sub
stos
xchg
ret
call
out
cmc
mov
sub
sub
sub
jecxz
(bad)
cli
imul
popf
lds
jl
xchg
jb
push
mov
pop
mov
push
cld
mov
jae
ror
inc
push
pusha
mov
es
xchg
retf
repnz
in
sub
push
mov
sbb
stos
cwde
push
imul
mov
ret
lea
mov
fnstcw
daa
adc
inc
shr
in
inc
adc
cs
dec
or
in
shl
adc
cmp
jnp
xchg
or
push
cmc
adc
xor
xchg
in
pop
sar
sbb
lds
popf
adc
push
adc
mov
jp
add
jnp
repnz
pop
ja
xchg
test
out
mov
mov
mov
aaa
clc
mov
mov
(bad)
(bad)
addr16
out
(bad)
dec
iret
popa
leave
and
into
out
xor
inc
push
mov
jle
pop
mov
fcmovne
faddp
and
dec
pop
push
mov
cs
lods
or
jg
pusha
add
out
dec
in
mov
out
xchg
sbb
mov
mov
aas
dec
jg
in
add
and
pop
jmp
fild
sbb
xor
enter
cmp
mov
scas
pop
ss
dec
xlat
inc
shl
xlat
push
mov
jl
movs
adc
lods
jns
jp
sbb
sub
sub
dec
test
xchg
cwde
and
inc
mov
cmp
(bad)
jecxz
xchg
cli
retw
int
test
pop
test
jbe
dec
jo
cmp
jl
das
dec
cdq
adc
mov
stos
sbb
xlat
(bad)
ins
sub
cmp
xchg
nop
enter
scas
out
lods
cmp
aaa
sub
mov
push
inc
inc
add
add
lds
cli
sbb
cdq
std
loopne
stos
aad
pop
iret
push
and
sbb
ret
fsubp
push
int3
stos
pop
xor
push
xchg
aas
scas
inc
icebp
pop
jb
mov
cmc
push
and
and
in
add
or
mov
daa
xor
outs
cs
or
jb
mov
mov
mov
inc
jle
add
fwait
in
or
fistp
and
cmp
xchg
jg
mov
adc
js
ds
ins
jl
sbb
enter
pusha
ins
or
pusha
xchg
adc
jae
pop
aaa
pop
cs
repz
stc
xchg
xor
mul
sbb
mov
xor
adc
add
int3
cmp
loopne
mov
or
out
ret
lahf
or
jb
fs
and
out
mov
pop
adc
jns
pop
adc
jbe
ffree
jbe
cmp
shr
sub
dec
mov
xor
dec
loope
call
(bad)
push
dec
inc
fdivr
stos
cs
pop
jmp
push
clc
push
lods
cmp
or
jno
xchg
jp
pop
scas
dec
mov
lods
and
jno
hlt
repnz
repz
stos
or
xchg
(bad)
nop
or
xrelease
add
cwde
cmp
test
data16
sahf
loope
das
fwait
dec
pusha
jge
xchg
jne
jp
fsub
xchg
xor
xor
scas
test
je
mov
push
mov
shl
pop
aas
xor
js
push
loope
fbstp
mov
(bad)
ins
xlat
jecxz
mov
mov
xor
or
jnp
js
pop
jb
call
(bad)
fiadd
mov
sub
lods
pop
lahf
dec
push
bound
out
push
not
sbb
cmps
cmp
stos
fst
xchg
dec
sbb
push
scas
jmp
les
xor
xor
cmp
adc
repnz
push
into
sbb
sub
jmp
mov
push
daa
and
jmp
std
inc
and
shr
mov
les
dec
daa
mov
xor
cmp
jmp
fwait
push
retf
lods
outs
loop
jb
data16
jg
mov
test
jns
jge
xlat
push
fisubr
fadd
cs
mov
jne
pop
push
and
mov
cmp
xor
sar
outs
dec
js
stc
lahf
cmps
lds
xor
popf
xor
fldenv
sub
fild
mov
mov
and
clc
dec
xchg
(bad)
(bad)
pop
dec
mov
mov
int
xchg
pop
mov
mov
adc
cmp
jb
xchg
movs
pop
dec
aam
xchg
or
and
fdiv
movs
mov
fcomp
popf
xchg
in
mov
sbb
popa
add
daa
xchg
in
mov
mov
mov
jmp
sbb
add
dec
inc
and
daa
dec
pop
sub
(bad)
and
mov
addr16
mov
pop
and
add
aaa
imul
mov
jb
sbb
loop
std
pop
xor
jb
mov
adc
rol
xchg
aas
sub
push
retf
int3
sub
lea
xchg
adc
fstp
jno
(bad)
xlat
cmp
mov
push
ds
test
mov
mov
and
shl
sbb
pop
div
cmp
clc
xchg
add
mov
xchg
outs
adc
retf
sti
dec
sbb
cmp
xor
pop
sub
enter
ror
and
rol
sub
sub
fidiv
pop
loopne
test
das
cld
cmp
jge
pop
add
mov
pop
pop
ins
aaa
(bad)
push
inc
hlt
es
xchg
inc
mov
test
cmc
xchg
aam
retf
movs
das
in
int
ds
xchg
push
lea
sub
(bad)
mov
into
(bad)
shl
les
shl
(bad)
ja
push
xchg
or
pop
scas
mov
push
call
scas
xchg
outs
lods
adc
in
or
and
test
inc
scas
mov
sub
mov
jmp
sar
mov
(bad)
je
xchg
mov
xchg
mov
ror
out
sar
clc
repnz
les
jmp
and
pop
popf
daa
mov
pop
push
or
push
in
sbb
jge
jmp
sbb
mov
cmp
jnp
mov
bound
data16
(bad)
adc
pop
xchg
dec
add
adc
fld
mov
retf
mov
xor
rol
loope
xchg
xor
xor
or
ss
xor
push
aas
lar
dec
call
ret
fucom
xlat
cdq
jb
lahf
or
inc
dec
xchg
sub
jno
pop
(bad)
lock
js
repnz
lds
das
les
rcl
jl
(bad)
cmp
leave
fsubr
xchg
jmp
aas
adc
sbb
mov
outs
add
dec
aas
fmul
sub
addr16
adc
push
fstp
mul
pop
push
bound
leave
mov
mov
push
sbb
adc
mov
pop
jge
paddusw
and
inc
mov
pusha
xor
dec
ins
jae
xchg
inc
retf
dec
jae
push
ror
leave
outs
fsub
inc
popf
(bad)
rcr
pop
daa
push
sar
hlt
je
mov
aam
enter
jno
test
sbb
sti
gs
inc
push
ja
(bad)
push
push
je
mov
or
dec
loope
and
test
call
or
adc
aas
jmp
in
shr
sub
imul
mov
fidiv
xchg
cdq
sbb
test
(bad)
retf
mov
mov
cmp
popa
sahf
push
cld
lds
movs
jp
retf
and
jle
xor
inc
sbb
cs
dec
shl
sbb
mov
shl
jne
fwait
aad
inc
(bad)
cmp
dec
pop
in
mov
mov
stos
mov
int
sbb
adc
sub
push
mov
push
cmps
in
jns
mov
out
call
cmp
jbe
aad
stos
and
push
add
pop
mov
call
add
mov
pop
icebp
cmp
ror
pop
sbb
pop
movs
addr16
pop
mov
pop
cs
mov
lahf
xchg
sub
out
xlat
mov
ins
das
das
sub
inc
mov
inc
mov
push
sbb
out
jnp
retf
pop
frstor
ret
dec
into
fcmovnu
and
pop
enter
(bad)
mov
loopne
mov
out
stc
xchg
mov
std
sbb
push
jbe
xor
fstp
cmps
imul
fnsave
mov
dec
rcr
popa
sbb
add
add
jns
push
rcr
in
jp
dec
test
push
jmp
or
sbb
cmp
dec
sbb
mov
pop
nop
push
popa
rol
(bad)
mov
data16
push
jmp
stos
inc
(bad)
outs
mov
sbb
or
jb
mov
add
int3
mov
jno
mov
xchg
jg
xchg
loopne
and
mov
push
iret
inc
cli
bound
int
sbb
int
xchg
test
stos
jecxz
jo
leave
stos
inc
fcomip
adc
movs
std
(bad)
or
ds
xor
ficomp
fs
retf
sbb
out
out
aaa
cmps
leave
xor
pop
sub
fwait
mov
in
add
hlt
pop
mov
add
push
fdiv
push
push
push
(bad)
push
mov
mov
adc
cld
lock
xchg
aas
icebp
icebp
mov
jns
dec
pop
push
imul
mov
adc
jmp
jmp
mov
out
xchg
mov
cli
mov
pop
popa
mov
dec
stos
or
imul
shl
adc
mov
js
ss
pop
mov
and
mov
dec
add
je
sub
cld
xor
lods
pop
pop
loopne
push
pusha
rcl
loopne
jg
dec
(bad)
push
xchg
retf
cs
xchg
dec
sub
pop
test
mov
inc
jne
adc
or
mov
test
icebp
clc
dec
inc
adc
jle
aas
test
sbb
movs
test
out
les
sub
retf
std
adc
sub
dec
push
mov
add
leave
scas
push
mov
lahf
(bad)
enter
popf
or
cmp
push
fisubr
mov
das
sti
jns
or
(bad)
loopne
jno
sub
and
jp
fsubp
sti
cli
in
push
sbb
or
pop
clc
jne
repz
aam
inc
fwait
sar
sbb
jecxz
pop
fcomp
call
ja
popf
dec
mov
shr
mov
jmp
icebp
into
into
loop
ror
fnstsw
into
shl
arpl
ins
mov
lock
fwait
jnp
adc
div
jp
xchg
mul
dec
and
fcom
push
leave
push
js
in
push
mov
jae
mov
mov
rcr
jno
jbe
and
fmul
sub
xchg
je
ret
mov
ins
xor
mov
sub
or
mov
add
lods
and
lea
cmp
pop
xor
fimul
adc
sbb
mov
adc
dec
cmps
inc
int3
loopne
leave
outs
ret
loop
xchg
adc
jg
ins
xchg
addr16
(bad)
aam
test
push
sub
out
sub
leave
jbe
xchg
add
test
jns
pop
in
xor
das
ins
ds
mov
adc
mul
add
cmp
inc
popa
mov
push
jmp
add
sbb
scas
mov
inc
arpl
xchg
sub
ja
cmp
xor
dec
mov
in
sbb
stc
sub
jg
jno
jmp
lods
mov
mov
scas
fwait
div
aas
and
adc
mov
sar
dec
lea
xor
mov
loope
inc
cmp
push
out
mov
pop
dec
add
mov
push
push
sbb
mov
jmp
pop
sub
xchg
test
adc
push
cmp
or
retf
fidivr
xor
icebp
test
pop
inc
(bad)
sbb
or
ins
cmp
mov
add
push
xor
stos
adc
test
int3
add
mov
mov
mov
dec
in
rep
into
sbb
loope
stos
mov
mov
xchg
test
push
test
push
push
(bad)
lock
fld
push
jb
shl
cmp
mov
ror
push
sbb
fld
mov
add
inc
jb
repz
popf
outs
and
loope
div
int3
xchg
adc
out
adc
mov
fst
outs
inc
cmp
mov
add
arpl
test
out
and
daa
mov
das
pop
mov
fst
push
push
jbe
or
dec
jmp
fdiv
cmps
das
mov
push
cmp
in
pop
(bad)
aad
sbb
xchg
cmp
test
fs
mov
out
push
ins
loopne
mov
cmp
mov
(bad)
mov
gs
les
push
jo
push
push
aad
iret
push
dec
mov
out
mov
mov
xor
xchg
cmp
out
pop
mov
fdivr
pop
or
outs
imul
inc
out
int3
fwait
dec
enter
mov
repz
and
(bad)
lods
and
cli
repnz
lahf
fcomp
push
sbb
pop
(bad)
mov
(bad)
push
ins
sub
dec
rcr
(bad)
ror
and
mov
loopne
or
sbb
pop
and
bound
adc
fistp
iret
(bad)
or
loope
dec
retf
je
pop
lods
cmc
clc
mov
ret
bound
mov
inc
sub
jp
mov
jns
fnstenv
mov
sar
test
retf
mov
xchg
inc
cs
push
pop
push
in
loop
ins
les
mov
aad
inc
and
push
mov
pusha
dec
std
xchg
dec
cwde
call
adc
ja
not
inc
push
mov
jns
popf
ins
cdq
frstor
je
push
xor
adc
adc
mov
(bad)
pushf
jmp
in
mov
les
repnz
(bad)
fisttp
sbb
outs
xchg
in
add
xchg
es
frstor
into
push
test
ss
and
outs
enter
push
inc
push
hlt
jl
inc
pop
mov
sub
inc
mov
jp
leave
push
sub
adc
push
scas
fimul
scas
sbb
arpl
pop
xchg
rep
mov
in
iret
in
(bad)
mov
mov
and
rcl
movs
xchg
bound
push
int3
pop
or
push
test
sahf
adc
jmp
fcomp
pop
sar
inc
sbb
je
sbb
mov
or
sub
in
ss
dec
jns
adc
xchg
mov
test
arpl
ss
add
or
js
mov
mov
mov
xchg
(bad)
sbb
fstp
int3
es
in
(bad)
shl
inc
pcmpgtw
in
lock
aam
pop
mov
nop
cmps
ja
loop
es
fcmovbe
xchg
pop
and
mov
lods
and
sub
jmp
mov
inc
(bad)
sar
inc
jecxz
mov
enter
pop
lahf
jl
and
ins
mov
mov
jbe
mov
stc
xor
pop
mov
aad
jo
cmp
mov
mov
(bad)
mov
repnz
stc
adc
adc
inc
ins
int
push
and
jp
add
sub
lods
aaa
call
daa
popa
xor
mov
fs
sar
je
stos
jnp
data16
pusha
fwait
dec
xchg
in
push
popa
jle
in
aad
xchg
jnp
mov
(bad)
dec
test
mov
loope
jge
mov
xchg
sti
aas
fdiv
lds
mov
inc
cdq
mov
mov
mov
popf
cs
xor
mov
out
int
jmp
(bad)
mov
nop
adc
(bad)
rol
dec
jo
(bad)
inc
push
sti
retf
mul
(bad)
inc
mov
into
pop
out
push
mov
loopne
inc
pushf
and
cs
xor
push
lods
push
popw
mov
cmp
pop
ror
inc
imul
pop
(bad)
mov
fild
pop
in
stos
leave
push
and
mov
jecxz
and
into
sub
add
add
push
imul
call
addr16
(bad)
mov
mov
fild
push
ins
ins
mov
sbb
xor
sub
add
and
les
or
add
sbb
outs
outs
adc
in
arpl
lea
push
imul
sub
lahf
xchg
out
and
or
add
in
scas
rcl
mov
xchg
fild
jnp
iret
iret
mov
mov
jns
stos
ud0
subps
mov
(bad)
or
out
jmp
shr
inc
lock
push
xchg
inc
cli
ror
bound
imul
rcr
mov
stos
int3
(bad)
sub
outs
hlt
xchg
sbb
sbb
mov
fild
leave
sbb
xor
dec
stos
outs
add
dec
jns
test
inc
jmp
das
fidiv
ss
aaa
std
mov
add
out
cmps
and
push
fisubr
and
shr
cmp
jno
push
sbb
loope
sub
hlt
fist
sub
and
add
fs
xor
xchg
adc
jb
ds
neg
jle
mov
lds
jae
mov
push
and
dec
test
rol
popf
js
test
repnz
cmp
lea
ja
mov
xchg
repnz
pusha
or
and
outs
pop
repz
aaa
mov
sub
js
jecxz
sbb
nop
push
jae
mov
imul
add
adc
adc
mov
push
cmc
rcl
dec
xor
ja
test
out
dec
pop
mov
into
and
jmp
fbld
lock
add
and
mov
mul
ja
into
add
stos
jecxz
mov
xchg
jno
mov
cmps
jbe
mov
retf
jp
xchg
cmp
bound
lahf
js
leave
(bad)
repnz
lock
imul
or
mov
repz
fiadd
rcl
enter
frstor
mov
inc
cmp
js
sbb
clc
rcr
repz
dec
movs
sub
mov
inc
pop
scas
mov
and
sub
xchg
les
sbb
enter
inc
pop
ror
dec
lea
cwde
cmp
jge
pop
lods
lods
aam
sbb
or
jp
fsubp
push
jge
and
(bad)
int3
cwde
lods
mov
fwait
xchg
mov
cmp
cli
jnp
int3
xchg
xor
push
inc
jmp
stos
xchg
cmp
pop
ja
cli
or
into
fiadd
push
mov
jl
retf
sub
test
dec
or
rcl
(bad)
xor
add
push
mov
int
popa
dec
pop
and
mov
gs
mov
icebp
and
adc
and
test
sub
mov
sub
mov
pop
nop
fwait
push
xlat
loop
jg
shl
loopne
mov
pop
int
add
mov
sti
shl
and
mov
icebp
dec
xor
jecxz
jo
pop
dec
xchg
mov
sti
cmp
aad
mov
ss
call
mov
dec
ja
mov
push
mov
shl
scas
cmp
pop
sbb
pop
adc
mov
push
std
add
push
sti
mov
ja
push
cmps
xchg
popa
ds
xchg
mov
push
repnz
mov
adc
cmp
mov
adc
fcomp
movs
mov
mov
jle
and
movs
movs
mov
je
and
adc
mov
push
xchg
mov
nop
mov
inc
shl
push
jb
sbb
rol
in
shl
lock
inc
mov
mov
sbb
fnstenv
ja
cs
jnp
xor
add
ds
adc
dec
fwait
jg
mov
jbe
xchg
je
imul
dec
aam
sar
xor
dec
scas
gs
jl
sahf
test
xchg
sub
fld
jl
pusha
dec
jno
movs
push
push
popf
add
test
jp
stos
in
add
pop
push
or
sbb
inc
lea
dec
leave
jmp
rcr
dec
(bad)
cmp
popa
xadd
imul
call
pop
addr16
adc
outs
push
sbb
in
cmp
fidivr
pop
cli
js
dec
lock
inc
std
sbb
xchg
inc
jbe
lahf
repnz
sbb
ds
js
mov
je
fisubr
imul
stos
dec
ss
xchg
ins
test
cmp
mov
cmp
cmc
xor
adc
fdivr
adc
dec
bound
fiadd
xchg
pop
jo
rcr
add
das
jns
mov
xchg
mov
outs
lds
fwait
pop
scas
cmp
and
mov
fstp
mov
fild
cmc
pop
xchg
ficomp
shr
es
adc
sub
push
xchg
lds
push
pop
jg
dec
sbb
int3
les
iret
xor
lea
cli
sub
mov
mov
jge
test
jl
xchg
sbb
mov
int3
std
inc
leave
call
xchg
jge
stos
shl
pop
fiadd
test
add
cdq
cmp
cli
loopne
sub
enter
inc
fiadd
repnz
cdq
push
jno
jbe
push
jg
shl
pusha
std
dec
inc
jmp
ds
jl
fmul
call
push
retf
stos
push
sub
pop
ja
push
stc
jecxz
xchg
mov
test
pop
test
mov
or
pop
jge
cmp
ins
fmul
pop
add
cmp
mov
jne
cmp
aad
push
mov
jl
out
mov
sbb
fisttp
call
sub
lahf
jmp
inc
scas
aad
adc
jl
mov
or
pop
repz
(bad)
push
pop
(bad)
ss
and
mov
pop
adc
and
mov
mov
(bad)
aaa
int
jle
mov
rcl
push
cmc
fisub
sti
adc
fwait
mov
pop
pop
sub
enter
or
pusha
add
jb
xor
and
(bad)
pop
sbb
sub
test
(bad)
shr
ins
inc
mov
stos
mov
push
push
xchg
sbb
mov
mov
push
sub
(bad)
cmp
add
pop
call
sbb
in
cdq
ret
fst
(bad)
mov
push
scas
aaa
xchg
pop
(bad)
jl
sti
mov
mov
aas
popa
jp
popf
ficom
(bad)
out
xchg
ss
psllw
push
enter
pop
(bad)
jnp
rcr
sub
test
hlt
mov
inc
mov
gs
dec
cld
loop
xchg
mov
xor
cwde
xchg
add
or
bound
sub
push
push
push
sub
pop
or
shr
bound
daa
and
cmps
mov
sbb
gs
cmp
call
pop
mov
and
dec
mov
adc
loope
jb
mov
or
mov
rcl
pop
mov
gs
mov
neg
xchg
mov
sti
or
sub
aas
sbb
dec
mov
pop
or
xor
add
inc
neg
dec
sbb
push
sub
lea
or
sahf
test
out
(bad)
out
mov
(bad)
call
rcl
dec
pop
and
imul
(bad)
inc
mov
adc
and
jnp
push
ss
jbe
adc
fwait
sub
mov
sub
and
jne
sub
jecxz
hlt
sub
mov
or
dec
in
fdiv
int3
ss
cmp
jo
(bad)
gs
push
cdq
pusha
aas
and
movs
or
and
or
loope
mov
je
jmp
push
movs
xchg
push
adc
sub
scas
xchg
xor
mov
fs
xchg
arpl
shl
mov
xchg
jge
ret
icebp
push
push
leave
mov
outs
scas
leave
neg
fisttp
or
in
cmp
ficomp
sub
call
mov
and
mov
bound
dec
out
lds
aam
xchg
jmp
adc
(bad)
rcl
outs
add
xchg
stos
(bad)
mov
nop
push
and
and
or
sbb
push
and
pop
xchg
inc
repz
push
out
push
adc
int3
sbb
mov
pusha
ret
arpl
call
pop
scas
ds
mov
jo
ficomp
push
fs
cli
push
or
dec
les
mov
jp
outs
pop
xchg
jmp
inc
xor
xor
into
or
inc
mov
fsubr
cwde
jne
call
mov
gs
jns
and
inc
imul
inc
cmp
xlat
int3
das
add
imul
ja
sahf
cli
in
jg
daa
push
shl
sti
pop
aam
dec
and
test
test
out
dec
mov
pop
inc
jb
xor
and
push
lods
sub
jnp
in
out
out
daa
xor
mov
lock
data16
adc
fs
shl
test
and
or
lock
lahf
push
js
sub
ret
inc
mov
call
loope
call
mov
ds
adc
inc
sub
test
jmp
cmp
(bad)
jo
and
cwde
cwde
idiv
push
stos
push
sti
js
(bad)
(bad)
and
loop
xchg
sbb
xchg
jmp
jl
sub
push
pop
dec
sub
mov
into
(bad)
sbb
dec
cdq
cwde
pop
popa
sub
cmp
pop
xor
mov
push
(bad)
retf
dec
movs
pop
test
retf
xor
add
arpl
in
daa
vpmaxub
add
push
popa
arpl
std
add
fcmovu
adc
(bad)
lock
iret
or
cmc
push
xlat
inc
idiv
mov
dec
int3
outs
mov
cmc
and
pusha
cmp
leave
sub
jae
inc
fimul
je
sbb
cs
dec
xchg
sub
or
mov
popf
ret
adc
loopne
(bad)
imul
xor
inc
cmp
pop
mov
and
inc
xchg
lock
push
inc
scas
add
mov
jg
or
xchg
add
inc
stos
mov
add
rcr
sub
repz
push
repz
and
pusha
outs
xor
jecxz
mov
bound
adc
sub
and
jno
push
jo
mov
ret
adc
lods
jb
mov
push
cmp
xchg
pop
fadd
cmp
mov
dec
outs
test
inc
cmp
mov
ja
into
sbb
aaa
stos
adc
inc
mov
sub
adc
xor
clc
cmp
sub
mov
gs
sub
xor
or
fimul
sahf
sbb
cmp
pop
scas
mov
xor
mov
je
shr
cmc
jecxz
lahf
mov
lods
add
fs
or
stos
ror
add
or
adc
inc
shr
outs
jp
mov
mov
mov
push
outs
nop
das
mov
push
cmp
xchg
nop
cmp
mov
sbb
sub
mov
stos
or
pop
cmps
and
ror
add
das
stos
jge
test
adc
mov
les
and
mov
xchg
sub
test
jns
cmps
xchg
test
pop
outs
inc
ror
sbb
cld
mov
mov
pop
repnz
xor
mov
dec
das
adc
(bad)
jnp
fnstsw
sbb
stos
pop
mov
jle
cmc
std
push
icebp
push
or
push
mov
xchg
xor
push
mov
cmp
sub
imul
test
mov
xchg
jmp
mov
das
stos
or
dec
or
xor
fwait
es
hlt
je
rol
sub
rcr
or
repz
jno
or
mov
in
test
adc
push
or
or
or
mov
fbstp
out
(bad)
push
pop
and
pop
mov
fild
and
les
add
and
jns
mov
adc
push
dec
jl
xor
fcmovnu
test
or
call
arpl
or
(bad)
cwde
and
(bad)
repz
mov
repnz
cmp
pop
inc
and
xchg
jae
inc
xchg
jle
mov
shr
mov
add
inc
(bad)
retf
push
in
retf
mov
or
lock
cwde
xor
mov
pop
inc
inc
cmp
inc
out
push
mov
push
into
mov
neg
call
aam
retf
sbb
test
push
cmp
adc
mov
or
int
mov
xor
xchg
jl
int
ret
jmp
and
push
test
hlt
dec
(bad)
xchg
data16
enter
dec
bound
daa
jns
bound
imul
loopne
push
ret
mov
test
lea
aaa
mov
jbe
pop
outs
mov
in
sbb
lock
in
xor
pusha
dec
sbb
ds
jo
iret
jbe
dec
not
push
lods
adc
xchg
loop
(bad)
mov
push
cmp
xchg
jo
inc
repnz
retf
loop
js
pushf
out
arpl
pop
lock
or
add
inc
pop
rcl
inc
sbb
add
je
add
and
mov
test
fnsave
sub
add
cmps
and
and
push
inc
inc
outs
ret
push
rcl
add
loop
mov
out
sub
mov
cmps
push
pushf
push
adc
sbb
and
adc
fisub
fidiv
js
mov
lds
cmp
or
pop
in
pop
pop
push
imul
fidivr
in
jnp
cmp
test
sbb
mov
nop
fwait
in
cs
test
push
xchg
pop
dec
mov
dec
pop
gs
mov
int
pop
and
jb
mov
das
rcr
xor
hlt
mov
jg
cwde
out
jecxz
pop
retf
jbe
jmp
and
dec
out
mov
fld
push
nop
jmp
and
fsubr
jmp
add
jecxz
push
jmp
imul
pop
mov
aas
xchg
xchg
mov
lods
lds
pop
sub
adc
cmps
mov
push
sti
out
jmp
pop
push
push
or
xor
das
cmp
into
mov
not
xor
sub
push
out
pop
shr
bound
sahf
ret
gs
or
rol
push
imul
dec
aaa
imul
mov
xor
mov
repz
(bad)
cmp
pop
adc
jmp
repz
pop
and
jne
fmul
shl
cmp
xchg
xchg
adc
and
mov
or
xchg
mov
cdq
popf
adc
jb
out
imul
mov
stc
lea
sets
fdiv
push
or
sub
fs
add
stos
adc
mov
and
and
clc
loopne
cmp
sahf
and
xor
sub
mov
xchg
pop
inc
push
xor
push
jle
mov
loope
std
and
mov
pop
xchg
or
loop
in
lods
sub
push
ja
loop
test
sbb
lahf
imul
js
std
iret
mov
cmps
add
mov
fwait
inc
mov
mov
dec
inc
xchg
sub
push
or
pop
xor
ins
in
js
jb
aas
cwde
pop
mov
je
cdq
inc
test
scas
leave
dec
stc
sub
(bad)
mov
bound
jbe
js
push
ds
cmc
sbb
adc
retf
enter
movhps
fcomp
sbb
ret
adc
retf
jo
or
add
pop
mov
dec
push
adc
loop
out
mov
push
xchg
or
ret
cmp
test
jne
push
movs
sti
je
ins
test
inc
push
jecxz
es
jmp
mov
ins
out
call
xor
les
push
dec
sbb
in
loop
and
lahf
test
mov
adc
add
mov
jno
dec
ds
mov
mov
int3
iret
mov
mov
mov
retf
xchg
in
stos
xor
xor
xchg
cmps
sub
repz
(bad)
mov
lds
sub
lock
push
les
push
push
repnz
mov
xchg
sbb
fcmovnbe
and
call
adc
movs
stc
jo
jo
in
jns
jecxz
dec
push
push
push
adc
out
gs
dec
add
mov
dec
fs
jmp
jne
retf
lods
mov
adc
movs
(bad)
mov
fstp
or
xchg
pop
jmp
scas
xchg
xor
jne
movs
icebp
sbb
icebp
push
nop
jecxz
mov
rol
test
ins
and
mov
or
out
pop
mov
ret
dec
mov
popf
lods
sar
and
stos
lock
sbb
test
mov
data16
popa
jae
in
jno
push
rcl
fucom
add
pushf
and
ror
cmps
lahf
cs
dec
dec
test
sbb
std
and
jno
sbb
out
movs
test
ss
cli
dec
pop
das
push
push
jb
les
adc
and
movs
les
xor
retf
mov
outs
enter
aam
loop
sar
dec
repnz
stc
dec
xchg
ficom
add
ss
shr
arpl
push
push
pusha
das
mov
xor
popa
lea
loop
scas
cwde
or
add
xlat
jp
int
adc
fdiv
cmp
inc
mov
test
mov
xchg
push
sub
adc
jl
and
add
cmc
or
sub
idiv
clc
ror
ret
aaa
in
xchg
dec
fisubr
jae
push
int3
rcl
sub
xor
dec
xchg
cmps
mov
sbb
push
inc
lahf
mov
push
in
(bad)
call
rol
out
pushf
in
pusha
push
mov
cmps
sub
mov
or
push
mov
cmp
ret
add
aad
jno
stc
mov
dec
stos
stos
cmp
inc
sbb
cld
sbb
inc
xchg
mov
fistp
shr
movs
bound
sub
mov
cmp
and
lods
hlt
sub
shr
stc
jg
inc
fs
(bad)
mov
mov
imul
lahf
inc
xor
sbb
in
sti
push
mov
mov
sub
and
stos
mov
ficomp
ins
cmps
vunpcklps
and
mov
cli
lahf
in
imul
(bad)
xlat
add
fidiv
movs
jbe
sbb
mov
stc
stos
call
lods
into
lods
sahf
xor
loope
or
or
aad
xor
pop
sub
mov
outs
inc
fld
pop
(bad)
mov
mov
sbb
mov
cmp
mov
mov
int
add
xchg
mov
dec
mov
and
dec
xchg
xor
push
or
push
cs
add
xchg
out
daa
in
sbb
clc
mov
test
jmp
ja
push
movs
cmp
movs
adc
pop
mov
mov
cli
cmp
lahf
adc
xchg
inc
push
outs
mov
addr16
adc
jecxz
(bad)
mov
inc
push
adc
push
jle
dec
(bad)
dec
stos
ja
les
jmp
scas
push
aaa
pop
and
imul
jnp
pop
nop
retf
pop
jns
retf
je
das
inc
cld
inc
test
call
jl
clc
movs
fcomp
cmps
or
mov
sbb
adc
inc
aam
xor
popa
fs
push
sub
mov
in
fcom
jl
pop
faddp
mov
pop
mov
pop
je
sbb
imul
cli
inc
retf
into
mov
xchg
mov
test
cmp
mov
sbb
inc
daa
ror
(bad)
mov
retf
jb
shr
xchg
out
cmc
pushf
cmp
dec
and
mov
adc
mul
loop
or
mov
push
int3
push
push
(bad)
adc
shl
inc
xchg
fild
jl
stos
arpl
adc
xor
jecxz
std
sahf
jne
inc
mov
xchg
or
rol
mov
pusha
icebp
sub
adc
std
addr16
mov
adc
loope
push
fst
jno
loopne
jne
mov
push
jmp
pop
dec
int3
and
out
fadd
adc
popa
mov
inc
shl
fist
xor
test
sub
cmp
mov
cwde
mov
popa
mov
call
mov
out
mov
inc
mov
mov
retf
(bad)
push
dec
adc
xchg
push
inc
sbb
inc
inc
add
push
mov
test
call
pop
fldlg2
push
pusha
mov
repz
mov
and
lods
sbb
pop
xchg
push
out
ja
scas
sub
shl
repz
push
push
mov
add
sub
scas
sbb
push
es
lahf
add
test
mov
sbb
loop
stos
inc
cmps
and
jo
inc
cmc
fisub
inc
mov
cmp
outs
push
xchg
ret
ins
mov
fstp
jne
sub
cmp
push
ja
scas
push
and
ja
sub
test
jne
data16
xchg
fimul
xrelease
mov
inc
xor
push
test
call
ss
jns
pop
pop
daa
mov
lods
add
rcl
test
adc
xor
sbb
imul
jb
and
pop
push
out
sti
pop
inc
mov
nop
jbe
xchg
push
xchg
test
xchg
cmp
test
jle
std
sbb
jb
lods
cmp
cmp
or
xlat
rcr
mov
xor
add
popf
ja
ss
xchg
push
clc
jno
test
push
add
push
mov
dec
hlt
stc
mov
or
not
pop
cmp
ins
sub
repz
dec
inc
stos
sbb
sahf
pop
xor
inc
sti
popa
and
jmp
push
pop
xchg
mov
stos
cdq
aaa
push
fwait
add
pop
ror
inc
or
movs
mov
fist
jmp
jp
pushf
push
stos
in
push
sbb
mov
mov
cmp
jge
dec
cld
test
and
sahf
xchg
das
test
in
bound
das
and
scas
lods
inc
jp
jo
jo
(bad)
iret
lock
sbb
stos
pop
add
xchg
test
test
scas
cmp
pop
adc
mov
popf
cmps
int3
xchg
(bad)
mov
adc
pop
cdq
clc
std
out
add
mov
in
popf
cli
sub
add
leave
test
dec
stos
xor
(bad)
xchg
push
jno
sbb
xchg
mov
bound
jne
movs
(bad)
in
repz
mov
mov
push
stc
setb
test
jb
movs
pop
scas
gs
(bad)
fucom
jnp
repz
das
lock
mov
xchg
cmps
push
jle
add
add
in
pop
dec
sub
dec
jae
das
dec
jg
ficomp
mov
cmps
jmp
mov
lock
cmp
int
sbb
test
fucomi
shl
aam
mov
dec
out
sub
jo
mul
ja
and
movs
jecxz
lods
jecxz
xor
inc
retf
xchg
not
add
inc
xor
xor
in
and
stos
xcrypt-ofb
cmps
jmp
pop
ret
jl
int3
sub
shl
in
je
pop
mov
mov
arpl
sbb
sets
call
retf
outs
or
mov
ins
scas
stc
xchg
add
sub
xchg
popf
lock
mov
aaa
(bad)
cdq
mov
popa
(bad)
or
sub
ins
bnd
jae
in
mul
outs
mov
sti
leave
leave
mov
push
(bad)
cmp
lods
pop
mov
mov
xchg
sbb
aaa
push
sub
or
(bad)
pop
out
mov
test
unpckhps
add
jl
pop
call
inc
(bad)
fdivr
cmp
loope
sub
iret
or
mov
xchg
addr16
push
ins
push
test
mov
pusha
xor
movs
sbb
jmp
mov
xchg
fwait
test
mov
pop
mov
in
dec
shr
mov
or
es
push
pop
and
pop
xchg
stc
sub
mov
(bad)
jo
inc
cmp
(bad)
pop
inc
and
cmp
xchg
les
xor
push
inc
mov
cmp
sub
push
in
cwde
push
addr16
and
dec
sub
js
popa
push
dec
xor
mov
es
mov
pop
mov
das
test
adc
xor
mov
fmul
popa
jl
pop
je
je
push
inc
(bad)
mov
arpl
xchg
loopne
repnz
or
sbb
cmp
mov
inc
push
sbb
(bad)
retf
xchg
jne
or
and
pop
ss
dec
popa
loop
push
sub
or
sub
mov
and
sahf
sub
add
ins
jp
mov
mov
adc
dec
arpl
mov
mov
inc
mov
jbe
pop
cld
adc
cld
dec
push
cmp
jmp
mov
in
xor
hlt
push
je
cwde
push
retf
jno
push
xchg
jp
push
in
es
retf
jle
ret
stos
in
xlat
jg
or
inc
dec
jnp
aam
(bad)
sbb
pop
add
into
ins
out
fstp
stos
lods
cs
(bad)
mov
in
cmps
inc
jnp
cmp
xchg
mov
mov
repnz
popa
push
scas
jecxz
xchg
mov
mov
movs
mov
in
sub
inc
ss
and
push
mov
popa
sub
ja
inc
mov
inc
out
adc
test
imul
add
adc
push
inc
adc
jns
sbb
dec
mov
push
mov
retf
loop
scas
test
sub
(bad)
neg
out
or
out
push
movs
repnz
mov
xchg
inc
push
jmp
xchg
pop
fwait
inc
popf
adc
repnz
jns
shr
loope
out
xor
sub
cmps
in
std
sbb
jns
in
cmp
ss
mov
push
js
cdq
xchg
add
or
inc
int3
or
mov
jae
mov
adc
fisubr
retf
jnp
cmp
mov
icebp
pop
mov
mov
mov
repz
mov
les
out
fcmovnu
loope
mov
cmps
mov
jge
inc
sub
shufps
add
movs
and
ret
sti
mov
cwde
icebp
cli
mov
cmp
cmps
lods
add
xchg
nop
adc
dec
in
push
push
js
and
push
adc
mov
hlt
cmp
test
jmp
addr16
das
shl
hlt
rcr
cmc
sub
shl
test
push
pop
adc
xor
popf
test
adc
pop
push
(bad)
sar
inc
xor
sbb
mov
inc
lock
(bad)
sub
cld
or
ss
push
mov
add
je
adc
push
sbb
sub
dec
and
pop
mov
jo
mov
fwait
test
ror
call
retf
xchg
xor
rcr
arpl
fcom
call
pushf
fmul
lods
icebp
xor
cmp
dec
out
fnsave
and
jmp
pop
inc
xchg
addr16
and
lahf
pop
test
out
and
push
jns
sar
and
mov
or
call
xor
dec
adc
sahf
xlat
std
(bad)
adc
mov
mov
loop
pushf
and
pop
fsubr
sbb
push
sub
jae
jnp
out
xchg
ins
je
push
hlt
in
jnp
jnp
sti
sub
adc
pop
das
add
xor
fimul
ja
fdivr
or
jns
aas
sub
xor
(bad)
sbb
jns
sahf
pop
(bad)
les
test
add
mov
cli
xor
inc
jmp
cmc
mov
mov
in
push
test
cdq
int3
sub
mov
(bad)
fsub
mov
int3
pop
cmp
xor
neg
mov
popf
inc
mov
mov
sar
repz
(bad)
imul
(bad)
rcl
in
push
sti
cmps
jnp
and
xchg
mov
sbb
xor
push
lahf
pop
std
popa
int3
jge
lods
(bad)
mov
pop
mov
dec
ret
lea
(bad)
scas
leave
aas
adc
fidiv
stos
(bad)
pop
mov
pusha
or
pop
fisub
ret
xchg
aas
dec
test
fmul
aas
loopne
arpl
es
sar
jmp
push
mov
loop
sub
pop
or
out
out
dec
test
pop
mov
leave
lods
cmp
ror
aad
jmp
retf
lods
sbb
arpl
sbb
push
sbb
ret
jne
(bad)
sub
jns
inc
xchg
retf
jmp
int
jb
add
xchg
jns
add
adc
add
daa
and
ret
jg
stc
ins
daa
ins
lods
xor
pop
mov
xor
mov
sti
imul
stos
and
movs
cmp
or
pop
mov
xchg
mov
ins
movs
adc
repz
jle
out
test
sub
sub
add
xchg
sbb
sub
or
and
mov
add
(bad)
out
lock
ss
sub
stos
and
fistp
push
adc
in
or
rcr
daa
mov
jmp
call
push
fbld
outs
dec
das
aad
and
add
xchg
arpl
add
out
jge
dec
inc
push
cdq
mov
jmp
mov
out
stc
adc
ins
push
mov
std
jg
pusha
loop
into
pop
and
or
ja
movs
cdq
into
pop
pop
stos
call
mov
ror
int3
mov
cmp
mov
adc
sbb
cld
in
xor
sbb
push
xchg
xchg
cmp
cs
inc
mov
rcr
mov
(bad)
push
push
xor
mov
pop
xchg
fst
fdiv
leave
push
fild
inc
cmp
push
mov
and
mov
stos
ret
mov
js
addr16
stc
retf
ret
ins
adc
(bad)
sbb
and
inc
mov
lock
imul
sub
sbb
call
enter
pop
mov
add
jp
push
adc
and
add
es
std
pushf
adc
mov
dec
jmp
cld
fistp
hlt
repnz
(bad)
sbb
in
inc
jmp
cs
push
into
cli
mov
push
sbb
in
mov
mov
outs
lods
pop
daa
mov
fsub
ret
jo
inc
dec
push
aam
push
dec
test
lods
inc
xchg
push
call
dec
adc
ret
cmps
sub
xor
not
add
lea
iret
cwde
pop
test
dec
out
dec
mov
lock
mov
or
sub
push
fidivr
mov
pop
fst
lods
mov
push
dec
in
mov
(bad)
and
cmp
popa
test
idiv
je
adc
mov
and
pop
push
pop
cwde
cmc
mov
xchg
mov
inc
jb
jmp
sub
leave
jle
push
cmps
adc
adc
xchg
repz
enter
fwait
pop
or
inc
(bad)
(bad)
mov
xchg
dec
pop
lock
adc
test
int
sub
push
add
sub
cmc
mov
and
cmp
xchg
mov
rcl
push
jae
mov
cmp
xor
and
jl
jle
fistp
cmp
inc
pop
cmp
or
cvtpi2ps
pop
jns
xchg
(bad)
scas
push
pusha
mov
sbb
adc
fidivr
mov
jns
dec
repz
push
out
rol
lods
pop
adc
mov
out
mov
or
pop
pop
jno
add
jo
loopne
add
mov
xor
int
mov
or
in
adc
sbb
adc
clc
inc
pop
sub
sahf
inc
pop
scas
cmp
scas
and
shr
fucom
add
inc
push
xchg
pop
daa
jns
mov
inc
cli
retf
and
xchg
(bad)
stc
inc
ds
lods
fst
jo
test
out
xor
lds
test
mov
mov
mov
test
cmp
mov
sub
sub
inc
add
xchg
ret
cmps
jmp
add
(bad)
cmp
stos
and
push
push
mov
mov
call
jmp
icebp
inc
and
jno
xor
dec
out
popa
sub
int3
mov
inc
(bad)
jmp
xor
mov
and
sub
clc
xchg
jg
fptan
push
int3
popa
daa
sbb
dec
jno
inc
adc
fwait
addr16
lods
xor
pop
(bad)
mov
fwait
cmps
inc
sub
repz
adc
jb
inc
enter
add
cmps
lock
add
cs
data16
hlt
movs
pop
pop
clc
cwde
fsubr
ret
scas
jne
cs
and
cmp
sbb
xor
cmp
mov
into
xchg
hlt
dec
jp
sbb
mov
ins
xor
std
out
mov
das
jle
adc
push
pop
lods
xchg
bound
cmp
loope
inc
fdivrp
push
or
les
shr
adc
xor
jmp
ret
retf
fdiv
jge
sub
adc
sahf
inc
add
mov
jne
out
or
pop
adc
pop
xchg
jnp
xchg
dec
arpl
cmp
add
jl
in
pusha
clc
lahf
pop
imul
cmp
fadd
inc
add
or
jg
xor
pusha
inc
sbb
xchg
cmp
jne
fstp
dec
xchg
dec
rol
and
and
mov
mov
ss
push
mov
stc
fs
jmp
bound
loope
and
bound
pop
in
test
dec
xchg
pop
mov
push
xor
je
inc
cmps
rcl
jo
xor
cmp
xlat
rcl
daa
mov
jae
mul
xchg
pop
call
jmp
shr
mov
inc
cmp
hlt
mov
mov
push
loop
ja
pop
cwde
add
pop
jnp
add
ins
adc
jbe
jne
(bad)
mov
add
das
adc
repz
fistp
pushf
pushf
mov
jmp
jmp
iret
or
lods
mov
enter
xchg
ret
sub
fcmovnu
mov
mov
lods
faddp
fcomp
popa
dec
dec
push
push
inc
add
stos
fld
mov
sub
rcl
or
daa
stos
jae
dec
or
sub
cmps
int3
das
xchg
push
cmp
jle
cmp
or
xor
adc
mov
or
sbb
mov
cld
arpl
pop
xchg
test
and
pop
adc
outs
out
retf
retf
inc
adc
pusha
sub
movs
jge
dec
adc
loop
popf
mov
lods
bound
daa
in
lods
ftst
cmc
fdiv
(bad)
in
hlt
xchg
sti
dec
mov
repnz
rol
aas
(bad)
adc
loope
inc
mov
pop
inc
add
cmc
pop
in
cld
rol
sbb
gs
push
pop
test
out
imul
int
retf
loopne
sbb
inc
mov
sub
sti
jb
shr
push
aas
enter
push
jns
push
pop
sbb
or
test
jle
fadd
rcl
addr16
ds
and
daa
es
add
cdq
sub
jle
jl
mov
pop
dec
xchg
loopne
pop
pop
icebp
mov
test
je
(bad)
push
lock
pop
cmp
js
jne
push
mov
ret
cli
xchg
mov
jp
js
stos
cmc
hlt
arpl
cli
in
dec
lods
ja
popf
aad
popf
int
sbb
jae
out
and
mov
sbb
ret
sub
pop
daa
outs
xor
cdq
test
jle
mov
sbb
push
ins
sub
xor
inc
lods
fsub
xor
jp
dec
daa
xor
sti
adc
arpl
leave
popf
mov
clc
js
jp
pop
fwait
push
cmps
sbb
gs
inc
dec
cmp
sar
xchg
mov
dec
mov
xor
and
mov
xchg
inc
dec
mov
not
jmp
push
mov
pop
sub
mov
inc
sbb
mov
inc
push
sbb
or
cmp
sbb
repnz
cmp
and
pop
sahf
popa
pop
std
cmc
sahf
pop
push
push
xchg
dec
clc
(bad)
xlat
sbb
or
or
(bad)
mov
cmp
push
sbb
in
mov
fistp
dec
and
xchg
scas
div
enter
js
dec
ja
jns
shl
cwde
jmp
test
and
push
out
je
(bad)
pop
cwde
int
repz
sbb
mov
cs
cdq
xchg
imul
dec
out
test
push
loop
int
rcr
ret
adc
leave
adc
push
xchg
push
adc
jbe
inc
lds
mov
jnp
push
in
gs
or
repz
dec
mov
test
fsubr
std
pop
pop
fidiv
loop
in
pop
leave
cmp
nop
je
mov
or
push
gs
inc
aam
or
dec
stos
ret
jle
pop
inc
clc
or
add
jmp
sub
fadd
cmps
inc
nop
xor
dec
mov
cmps
repnz
push
loopne
mov
clc
mov
mov
sbb
popf
pusha
pop
push
out
push
or
(bad)
call
lds
add
icebp
adc
out
xchg
es
(bad)
ds
mov
inc
data16
add
adc
popf
jle
mov
sub
add
add
inc
or
mov
jbe
movs
lahf
pop
mov
adc
push
jg
addr16
retf
inc
sub
mov
cmp
push
jg
dec
in
(bad)
mov
mov
sti
jmp
imul
jmp
or
mov
test
into
ror
xor
daa
clc
int3
iret
popa
sbb
mov
(bad)
out
(bad)
in
(bad)
std
sbb
xchg
inc
pop
cmps
push
or
shr
sbb
sbb
aas
icebp
xor
xor
int3
movs
xchg
fmul
nop
dec
movs
inc
lods
icebp
push
fisttp
jbe
push
popf
cmp
push
popa
dec
xor
aaa
xchg
jb
jne
mov
push
inc
mov
jns
and
ret
stos
mov
jmp
jg
repnz
adc
xor
hlt
add
sub
xor
xchg
mov
loope
in
dec
jecxz
sbb
mov
stc
movs
sub
add
sub
mov
adc
retf
out
stos
lahf
bound
adc
mov
in
xchg
cwde
lods
fdiv
hlt
nop
xchg
dec
aas
adc
mov
pop
(bad)
imul
test
pop
or
cmps
lea
bound
(bad)
cs
(bad)
jmp
gs
add
inc
clc
fcomp
sub
cld
xlat
inc
imul
into
cmp
sub
mov
loop
inc
xor
push
aam
sub
or
mov
xchg
repz
inc
mov
pop
std
xchg
dec
sbb
and
loopne
ss
mov
cmp
in
mov
mov
sti
add
xor
mov
ins
push
cwde
sub
mov
mov
ret
lods
aas
out
mov
push
clc
cs
xor
mov
adc
cwde
loopne
(bad)
jp
pop
mov
loop
dec
jl
loop
jb
sbb
dec
jecxz
mov
xchg
daa
data16
ror
sbb
jge
inc
jge
cmps
push
js
arpl
sub
mov
outs
add
jl
cmc
adc
cld
push
mov
xor
xchg
div
jmp
push
scas
push
and
pop
jp
pop
sub
addr16
dec
mov
sbb
popa
lea
adc
repnz
and
inc
fidivr
xchg
out
mov
out
push
int3
pop
pop
xor
or
pop
adc
repnz
sub
mov
xor
lea
out
popa
and
retf
jbe
(bad)
cs
mov
and
out
mov
or
in
sbb
cmp
dec
test
cmp
in
inc
or
jmp
push
mov
inc
xor
frstor
and
and
imul
int3
sbb
mov
jl
xor
xchg
inc
mov
aaa
(bad)
(bad)
add
pop
and
inc
les
and
fsub
rcr
or
cmp
pusha
pop
mov
iret
arpl
pop
mov
pushf
call
xor
test
daa
loop
pop
in
cs
rol
mov
push
scas
or
mov
neg
out
leave
xlat
fist
mov
xchg
imul
sub
outs
add
cmp
push
xchg
or
in
push
and
and
cld
sbb
jl
and
test
add
stos
iret
pushf
jmp
mov
dec
jnp
inc
dec
xchg
out
add
mov
rol
lea
mov
stc
scas
lds
inc
and
rcl
je
nop
(bad)
xor
stos
(bad)
xor
jg
sub
xor
or
fld
adc
pop
ror
add
in
jae
jo
mov
mov
sub
fistp
loopne
ss
adc
cmp
lock
test
stos
adc
add
cdq
or
xchg
jle
das
pop
es
or
addr16
fwait
pushf
xchg
xchg
imul
sahf
pop
push
sub
cwde
rcr
add
xor
sub
ja
dec
xor
pop
sub
cmps
fstp
mov
(bad)
out
es
push
scas
les
or
popf
ja
gs
lods
retf
out
xlat
inc
inc
rcl
xchg
mov
icebp
inc
xor
outs
xchg
jmp
movq
adc
cs
loopne
fs
outs
shl
(bad)
push
aam
push
sub
adc
or
sub
sub
mov
mov
data16
jb
push
stos
mov
xor
or
xor
arpl
scas
push
adc
mov
mov
mov
test
imul
pop
inc
sub
out
mov
xchg
hlt
cmps
add
sbb
cmps
adc
mov
push
push
mov
dec
add
dec
add
mov
xchg
stc
js
push
rcr
xor
push
push
jp
and
bound
and
into
fimul
dec
(bad)
mov
xor
sti
dec
fisttp
xchg
repz
js
push
(bad)
jp
into
push
xchg
retf
mov
cmps
fnstsw
call
ins
in
fild
mov
fld
sub
push
fidiv
adc
jmp
aam
mov
xor
int
es
enter
fdivr
or
mov
inc
jecxz
outs
xor
(bad)
mov
cmp
mov
int3
cmp
jno
push
mov
mov
sbb
push
js
dec
js
stc
lahf
aam
fild
adc
jmp
add
pop
inc
pop
out
test
sub
xor
stc
addr16
stos
enter
sub
arpl
test
mov
clc
push
or
leave
pop
inc
ds
inc
retf
retf
movs
sub
movs
in
ror
aam
sahf
lods
sar
lock
xor
shl
push
or
push
cli
sub
or
jo
dec
pop
mov
hlt
sub
idiv
mov
pop
cs
jge
jmp
(bad)
mov
xor
sub
fnstenv
ins
aaa
or
xchg
in
fld
pop
shl
sbb
scas
or
es
enter
add
inc
(bad)
rcr
popa
inc
retf
pop
ficomp
push
adc
cld
xchg
pop
dec
jg
(bad)
(bad)
mov
push
xchg
clc
dec
in
adc
aad
sub
adc
xor
mov
adc
ret
pop
mov
jno
shl
aad
push
jp
xchg
xchg
pop
inc
fwait
ja
pop
test
dec
inc
xchg
mov
pop
(bad)
and
sbb
shl
push
imul
bnd
sbb
out
or
cmp
adc
shl
inc
dec
and
jnp
mov
test
sbb
dec
or
movs
(bad)
sub
scas
call
push
push
sbb
fst
cmp
mov
mov
js
mov
sti
sar
and
lahf
add
(bad)
or
or
xchg
aaa
arpl
and
and
stos
add
repnz
inc
inc
cdq
xchg
cmp
call
dec
mov
dec
adc
mov
bnd
sbb
test
xor
(bad)
aas
or
mov
and
test
aam
jne
inc
sahf
das
loop
rcl
aad
in
test
sub
shl
inc
(bad)
fild
jb
sub
cwde
sbb
jnp
in
je
retf
sub
push
mov
push
xchg
aam
pop
jmp
ins
ins
or
lods
ret
stc
add
inc
push
loope
stos
push
mov
mov
ficom
test
push
ins
push
add
inc
push
ret
add
push
or
xor
js
inc
lods
dec
ins
mov
loope
mov
pusha
mov
push
retf
pop
ins
mov
aam
dec
xchg
mov
mov
or
popf
inc
test
ficomp
mov
fmul
push
and
in
xchg
(bad)
out
fidivr
shl
pop
sbb
mov
les
aaa
lods
and
add
dec
shl
mov
add
pusha
arpl
cmp
pop
sub
jecxz
fisub
push
xlat
test
lahf
loop
sbb
push
outs
aad
in
mov
movs
int
or
mov
inc
mov
jnp
mov
test
retf
cmp
and
xchg
push
(bad)
jne
fstp
xchg
dec
loope
jo
cmp
cmc
push
jne
push
pusha
push
jbe
inc
ror
xlat
enter
push
nop
sar
arpl
mov
(bad)
js
pushw
mov
ds
fcom
and
xchg
pop
enter
(bad)
xchg
mov
mov
xor
rol
popa
call
cli
xchg
(bad)
repnz
test
lock
popf
cmp
sbb
jo
lahf
sub
sbb
or
dec
out
rcl
addr16
out
and
pop
jae
cmp
and
stos
loope
out
(bad)
int3
mov
mov
ja
fist
fdivr
test
xlat
lock
(bad)
arpl
clc
jne
(bad)
movs
xor
lods
cld
push
adc
dec
pop
push
jg
xor
and
pop
pop
xor
jmp
inc
lea
sub
lea
mov
dec
xor
jmp
fs
mov
jno
retf
cmps
jmp
in
(bad)
ss
cmp
or
inc
lock
loope
lods
mov
ret
adc
pop
movs
push
stos
rcr
(bad)
jg
cld
xchg
clc
add
sbb
cld
mov
repz
dec
jae
add
sahf
add
shr
mov
mov
dec
scas
int3
cs
jmp
cmp
or
fwait
pop
sub
pop
cmps
pop
adc
and
push
sbb
pop
cld
test
xor
mov
cmp
imul
fsub
add
(bad)
mov
add
shr
mov
xor
ret
jae
enter
ja
sub
xor
lds
mov
mov
dec
xchg
inc
ds
add
(bad)
cmc
imul
pop
jge
adc
sti
sti
test
pusha
sbb
frstor
push
js
push
pop
popf
sbb
sbb
add
jnp
jo
mov
call
iret
push
mov
iret
daa
push
mov
ja
or
xor
mov
rcr
adc
ja
rol
push
pop
sar
iret
cmps
jl
clc
sahf
aas
sbb
jp
into
loopne
inc
sub
inc
adc
jl
and
xchg
(bad)
pop
daa
nop
xchg
sub
cdq
(bad)
push
pop
shl
popa
dec
daa
out
(bad)
push
cmp
outs
mov
ret
xor
adc
(bad)
lods
das
pusha
cs
cs
push
pop
dec
ins
adc
jno
(bad)
(bad)
pusha
ror
stc
cmc
daa
push
xchg
sub
cmp
das
inc
(bad)
ja
hlt
add
inc
movs
retf
or
loop
mov
test
cmps
mov
mov
fadd
lods
add
sbb
and
scas
push
jl
fdiv
mov
lods
xchg
lds
sub
cmps
stos
sub
sbb
popa
jne
sbb
jl
cld
loop
(bad)
mul
sar
cmp
scas
sti
test
jo
mov
xchg
mov
xor
retf
push
push
jno
dec
test
movs
or
mov
ins
(bad)
(bad)
in
xchg
shl
add
pop
addr16
aad
pop
inc
mov
ja
popf
jp
iret
inc
sbb
test
ja
int
xor
sbb
pop
cmc
scas
dec
jl
aam
(bad)
out
rdtsc
(bad)
push
mov
imul
leave
les
cmp
ret
add
sbb
test
sub
sub
xor
je
mov
adc
pop
ret
xchg
sub
and
inc
xor
repz
test
pop
clc
dec
xchg
push
cmps
dec
xor
jne
dec
jle
inc
aas
push
leave
call
xchg
sub
and
(bad)
neg
(bad)
cmps
push
les
jbe
or
jns
mov
pop
adc
pop
sub
ja
cmp
xor
or
mov
loopne
and
das
cmp
mov
outs
addr16
test
or
pop
pop
mov
mov
bnd
rcr
add
jl
xor
cmp
loope
mov
fs
push
push
rcr
shl
xchg
push
inc
pcmpgtd
cs
ins
fsub
les
fisub
outs
out
sbb
xchg
xchg
push
iret
add
movs
cmps
ror
pop
sbb
xor
out
aad
rcl
mov
xor
pop
adc
jnp
pop
outs
xor
fcomp
mov
mov
mov
(bad)
adc
jae
popf
add
mov
mov
xor
dec
dec
xchg
sbb
(bad)
ret
mov
popf
ss
dec
ss
(bad)
imul
xchg
jmp
test
fisubr
push
or
sbb
xchg
clc
sbb
daa
test
pop
lahf
xchg
xchg
cmc
scas
mov
cmp
adc
enter
mov
push
lock
add
mov
in
sub
movs
(bad)
and
add
pop
jp
adc
pop
out
add
mov
cmp
mov
ffree
xchg
pushf
into
imul
test
add
retf
mov
nop
lods
sbb
jmp
mov
shl
mov
(bad)
lahf
shr
mov
stos
invd
or
sub
cdq
addr16
push
ret
stos
mov
push
jo
xor
sbb
aad
sub
fst
lahf
and
mov
scas
and
and
nop
sbb
loopne
inc
mov
call
xor
ret
stc
rol
pop
dec
scas
imul
jne
add
fmulp
xchg
xchg
and
xchg
lods
jns
dec
fisttp
out
or
mov
add
xchg
dec
and
add
dec
ins
int3
push
test
stos
mov
sbb
lods
dec
and
daa
mov
jnp
mov
cli
add
ficom
sub
ret
fiadd
fcom
imul
sar
dec
daa
or
mov
adc
ja
arpl
jns
sub
cld
inc
cmp
push
mov
stos
mov
fdivr
push
inc
jno
cmp
pop
fild
(bad)
popa
mov
sub
out
inc
push
in
loopne
leave
jnp
mov
mov
inc
jmp
call
mov
pop
fldpi
xor
mov
jge
mov
mov
sti
into
outs
fsub
cmc
inc
and
jbe
cmc
mov
scas
(bad)
in
and
jae
shl
add
fldenv
jno
repnz
js
jecxz
and
(bad)
test
or
ror
push
dec
fisttp
call
xchg
or
(bad)
push
jb
adc
mov
nop
lods
out
inc
xor
sahf
hlt
(bad)
test
iret
mov
mov
and
out
mov
enter
out
and
fiadd
sbb
out
in
loop
push
ds
mov
inc
and
pop
data16
or
sub
in
rcr
clc
dec
movs
or
ins
pop
xor
ror
outs
leave
xor
retf
in
not
aas
ficomp
fstp
xchg
inc
push
dec
jl
outs
jne
jae
gs
sahf
mov
(bad)
adc
add
call
jns
popa
mov
xchg
jo
aaa
fsubrp
pop
loope
sub
mov
std
add
inc
fsub
inc
adc
cmp
pop
cmp
sbb
imul
push
mov
icebp
sbb
mov
and
cmp
or
neg
xchg
push
out
pop
hlt
dec
push
inc
xchg
ds
(bad)
adc
pop
add
fild
mov
xor
xchg
pusha
cmp
xor
out
sub
adc
sub
pop
ret
jnp
jnp
dec
mov
inc
shr
or
sbb
mov
add
push
ds
out
mov
call
jno
(bad)
cmp
push
out
dec
(bad)
(bad)
jmp
mul
pop
hlt
rol
push
mov
inc
jmp
dec
(bad)
xchg
repz
clc
push
xor
fsub
fwait
mov
pop
sub
add
call
mov
cmp
scas
loopne
out
xchg
pushf
dec
sbb
js
aam
push
xchg
push
sub
fsub
loope
sub
stos
or
aam
push
je
xlat
cmp
(bad)
je
sub
out
adc
sbb
jo
out
jo
pop
pop
fbld
pop
sub
imul
nop
mov
lods
sub
push
inc
dec
pop
inc
repnz
xor
fxch
out
es
dec
es
mov
dec
push
sbb
test
jae
xchg
dec
jecxz
push
and
jae
mov
pop
outs
sub
jmp
into
mov
mov
fist
or
xchg
xchg
in
(bad)
shl
sub
gs
xor
or
cli
sbb
int3
imul
aam
jge
mov
mov
dec
mov
sbb
and
jmp
sub
add
jno
jbe
sbb
ret
jnp
mov
pop
dec
jmp
fidivr
mov
push
jbe
sub
xor
jo
clc
adc
add
mov
dec
cmps
test
or
(bad)
or
cwde
fimul
dec
and
mov
fist
and
xchg
mov
cmps
jmp
not
dec
cli
or
and
add
cs
int3
and
sub
rcr
mov
mov
daa
dec
xchg
std
cmps
icebp
mov
cmps
adc
bnd
icebp
fnstsw
or
push
xchg
fiadd
jnp
(bad)
ds
xchg
pop
ss
fldenv
ret
sub
cmp
mov
push
dec
jmp
lods
cli
jae
mov
mov
push
add
adc
push
xor
jl
repz
into
arpl
es
adc
loop
add
leave
add
or
jne
test
cli
jns
lahf
lahf
mov
dec
push
pop
int
or
hlt
push
mov
iret
fwait
movs
lahf
jmp
push
repnz
push
jmp
outs
comiss
das
popf
pop
add
es
xchg
fld
enter
push
or
adc
add
loop
pusha
sub
(bad)
push
je
xor
aam
cmp
js
and
ss
jmp
test
int3
jge
lds
adc
rcr
test
push
imul
es
push
fcmove
or
out
xor
cli
jns
sti
icebp
xchg
jl
gs
jmp
pop
mov
std
dec
xchg
mov
sahf
js
inc
adc
arpl
xchg
push
jmp
clc
push
inc
ficomp
dec
(bad)
pop
jge
call
xor
mov
mov
pop
out
adc
aas
sahf
adc
mov
aad
(bad)
jmp
xor
call
mov
jns
pop
pop
sti
inc
scas
inc
mov
and
mov
jmp
mov
iret
mov
mov
data16
jnp
sub
xchg
jae
test
or
add
add
movs
lahf
dec
mov
stos
sbb
jmp
cmp
add
ins
loope
jle
mov
dec
lods
arpl
xchg
sub
jno
xchg
fdivr
jnp
cld
inc
or
sar
dec
ja
xchg
mov
cmp
enter
sub
imul
adc
xchg
and
ds
xchg
dec
(bad)
cmp
stc
mov
icebp
loopne
xor
mov
mov
dec
ror
test
pop
mov
and
pop
dec
and
lods
arpl
pop
(bad)
out
mov
ret
inc
mov
xor
or
push
add
mov
jns
jge
test
push
and
cmc
inc
jne
sahf
shl
mov
pop
xchg
mov
xchg
fdivrp
(bad)
and
popf
fnstsw
imul
sub
dec
dec
hlt
stos
cmp
int
adc
pushf
mov
or
xor
mov
in
scas
and
add
gs
out
in
pop
jb
inc
mov
jno
lods
and
sbb
sub
js
xor
pop
out
data16
xchg
jge
push
and
stos
mov
ror
xor
pop
and
sti
cmp
push
adc
ret
xor
dec
mov
ja
sbb
pop
add
cmp
inc
frstor
cmc
ret
ret
and
gs
aas
outs
jg
jmp
je
jae
int
fadd
fcmovnu
jo
scas
das
outs
test
jmp
out
ret
xchg
xchg
out
mov
inc
movs
in
sub
dec
div
outs
pop
pop
mov
ret
ins
push
daa
xor
jecxz
inc
outs
cmp
dec
loope
mov
data16
jbe
jl
imul
pushf
sbb
imul
adc
out
or
fsubr
sar
loopne
push
pop
in
or
mov
xor
pop
outs
and
rcl
sub
hlt
dec
retf
inc
gs
push
sahf
push
xchg
jnp
pop
pop
dec
or
jg
xlat
adc
or
mov
jmp
(bad)
push
fld
scas
test
push
pop
adc
test
aas
outs
inc
sbb
fnstsw
addr16
pusha
(bad)
(bad)
or
fucomip
movs
lea
in
(bad)
call
sbb
fstp
retf
lahf
xor
xor
lods
loop
ss
sub
mov
cmps
inc
out
ins
cdq
ret
mov
mov
jge
push
mov
and
jle
sahf
outs
outs
xor
and
xor
and
sub
pop
mov
arpl
mov
shr
cmp
adc
scas
les
xor
and
test
jl
push
add
in
jmp
(bad)
and
int
sub
(bad)
sub
out
sub
inc
popa
or
adc
je
nop/reserved
inc
rcl
enter
xchg
push
or
push
jns
and
stos
(bad)
fdivr
pop
lock
ja
fadd
into
mov
leave
jge
add
pushf
inc
or
xchg
push
cli
or
into
xor
jnp
imul
and
(bad)
sub
fisttp
or
jle
and
and
js
jnp
mov
imul
cmp
cmp
ins
lods
hlt
daa
mov
jl
adc
(bad)
mov
jne
(bad)
lock
and
mov
sbb
add
jmp
cmp
jmp
add
icebp
retf
in
lods
lea
and
push
inc
or
jnp
addr16
inc
jno
icebp
adc
mov
fpatan
xor
jecxz
jmp
ja
fs
aas
repnz
jmp
fistp
sub
call
js
sbb
popa
cmp
add
and
cwde
inc
jmp
or
cmp
push
pop
sbb
fnstsw
push
iret
cmp
test
jns
adc
(bad)
mov
loop
loopne
dec
sahf
cwde
push
call
jne
add
mov
lods
out
mov
mov
xchg
(bad)
bound
setno
test
xchg
inc
jne
popf
stos
and
dec
ins
xlat
xor
shl
or
adc
sub
fwait
mov
mov
pop
dec
jmp
mov
ret
popa
je
cmp
hlt
push
push
mov
jl
xor
ins
mov
cmp
xchg
or
in
in
pushf
mov
mov
xchg
mov
cmp
mov
fucomip
in
sar
int
inc
cmp
and
xchg
ins
push
and
leave
sahf
gs
mov
test
loope
jno
sbb
call
lds
test
sub
loop
pop
adc
mov
mov
inc
jbe
pmaxsw
xor
frstor
bound
es
aaa
sbb
or
fs
enter
aaa
push
push
inc
daa
jns
fild
xchg
cmp
retf
push
retf
test
push
pop
push
ins
and
dec
pop
mov
pop
dec
mov
jno
idiv
pop
fwait
xchg
mov
test
jbe
inc
or
jl
adc
sbb
xor
in
or
in
call
out
xor
inc
addr16
aad
scas
call
lock
rol
mov
clc
repnz
shl
scas
or
in
sbb
jecxz
icebp
retf
(bad)
shl
arpl
imul
sbb
mov
fld
mov
rcr
xchg
retf
in
sub
mov
imul
sti
xchg
out
ret
fidivr
js
or
out
sub
push
sub
js
scas
push
pop
jmp
fidivr
sar
test
lahf
xor
mov
retf
mov
cmp
inc
mov
adc
mov
adc
retf
es
lods
or
jb
outs
scas
jmp
mov
pop
push
ja
cs
xor
lods
pop
push
rol
outs
cmp
sub
(bad)
stc
jmp
gs
mov
xchg
adc
lea
cmp
mov
jbe
rcl
inc
test
test
out
pop
add
ins
lods
inc
dec
inc
imul
pushf
mov
mov
iret
fld
jmp
mov
pop
in
loopne
loope
in
push
xchg
ss
out
sar
rcr
shl
stc
jne
mov
ins
mov
add
cmp
test
pop
cmp
movs
test
stos
ror
stos
pop
push
call
pop
ret
(bad)
mov
sub
push
outs
cdq
out
lods
adc
call
retf
ret
mov
xor
push
and
mov
lods
fs
and
js
movs
dec
mov
xchg
sahf
ret
cmps
aam
fldcw
mov
clc
dec
mov
mov
es
maskmovq
cmp
inc
mov
and
mov
sub
mov
leave
cmps
int3
cpuid
mov
mov
repnz
mov
sbb
iret
iret
mov
cmp
retf
rol
clc
jne
jp
cli
div
cs
imul
push
ret
inc
mov
sbb
lock
cmps
mov
jle
jo
inc
lods
sub
repz
jg
in
inc
mov
jmp
pop
add
fwait
push
xchg
fdiv
mov
cmp
dec
mov
adc
mov
add
dec
mov
jl
xchg
cs
movq
mov
clc
push
out
push
retf
and
sar
inc
cmps
pop
out
mov
retf
mov
adc
es
push
fadd
pushf
xchg
sbb
bound
lods
jmp
dec
lods
inc
sbb
test
icebp
or
jecxz
xlat
jbe
enter
mov
push
cdq
inc
jo
call
es
and
mov
pop
push
add
test
push
xchg
test
pushf
fcmovnb
imul
mov
inc
add
icebp
cmp
push
add
sbb
lahf
and
mov
xchg
shl
xchg
popf
daa
js
or
cmp
popa
stos
push
stos
out
xchg
lock
or
mov
cmp
and
sub
xor
sbb
shl
inc
xor
push
push
adc
enter
xor
cmp
cli
sub
dec
xchg
popa
shl
xchg
push
fdivr
fs
cmp
je
xchg
sbb
mov
lods
scas
cmp
enter
leave
jb
push
inc
std
aad
div
stos
daa
test
lea
cmp
adc
push
fld
mov
push
sar
adc
jmp
mov
data16
jg
test
outs
lock
pop
iret
sub
mov
sub
inc
xchg
lock
or
stos
nop
or
out
daa
(bad)
arpl
sub
or
mov
dec
push
inc
mov
rol
jmp
pop
cmc
push
jae
add
sub
test
xchg
shl
repz
pop
mov
aaa
call
in
stc
es
loopne
out
xchg
repnz
pop
mov
test
add
push
aam
sbb
mov
ins
xchg
adc
jae
mov
(bad)
dec
dec
test
fwait
mov
xchg
pusha
adc
jo
mov
adc
repnz
or
gs
sahf
inc
dec
ret
push
dec
jmp
mov
and
push
mul
dec
pop
mov
icebp
jmp
push
add
fst
jecxz
mov
sub
enter
jno
fwait
ins
cmp
ins
xchg
test
mov
pop
cli
ror
rcr
dec
retf
inc
in
repnz
sub
sbb
sbb
fwait
mov
iret
dec
(bad)
xchg
mov
call
inc
outs
mov
push
mov
or
fdivr
fadd
dec
jmp
and
push
mov
pop
jbe
fstp
cmp
scas
or
or
sbb
mov
inc
stos
pushf
mov
popf
hlt
xor
in
pop
and
mov
inc
add
sar
ins
xchg
push
xchg
lods
fisttp
or
push
push
and
jle
pusha
xchg
inc
sbb
push
icebp
dec
fdivr
cld
bound
out
fs
push
jmp
loop
dec
imul
sub
add
setne
lahf
les
mov
repnz
nop
ret
adc
(bad)
mov
aam
in
int
stos
and
mov
repz
icebp
icebp
fs
add
mov
jmp
inc
sbb
icebp
(bad)
and
ss
test
cmp
cli
sub
cmc
adc
(bad)
cld
fld
mov
(bad)
cli
sbb
xchg
shr
adc
fist
xchg
cs
aad
cmp
ret
xor
(bad)
js
pop
pop
ror
movs
les
jnp
mov
in
ja
add
sub
stos
push
ficomp
xlat
sbb
(bad)
pushf
adc
scas
and
shl
arpl
imul
les
and
push
mov
sar
fisttp
add
cli
mov
inc
enter
xchg
test
jb
cmps
lods
xor
jno
pop
imul
fcom
out
pop
adc
mov
push
xor
rol
mov
(bad)
test
lock
inc
jbe
sub
xlat
popa
std
ficom
or
dec
loop
out
pusha
jns
fist
dec
cmp
pop
call
pop
dec
sub
mov
std
das
scas
cmp
mov
loop
add
inc
pop
loop
xor
adc
pushf
xchg
popa
mov
(bad)
mov
lods
ret
lds
cld
cld
push
aad
fdivr
xchg
(bad)
jb
mov
mov
push
retf
cmps
imul
iret
fwait
retf
xchg
adc
ss
xor
mov
xchg
dec
enter
mov
sub
nop
aaa
inc
mov
les
shl
aam
(bad)
mov
mov
rcr
push
adc
shl
les
rcl
xchg
lods
sbb
mov
mov
pop
xchg
xlat
inc
or
cmps
leave
dec
mov
push
lea
push
test
xchg
lds
xchg
rcr
dec
loopne
or
mov
and
repz
not
inc
pop
loope
or
pop
xlat
push
fcmovb
push
xor
fldcw
pop
aaa
rol
xchg
mov
pop
mov
pushf
push
pop
xor
inc
jns
push
(bad)
cwde
sbb
inc
scas
xor
adc
ds
dec
aad
into
cmp
jle
popw
(bad)
in
inc
inc
fs
xor
into
mov
loop
outs
retf
add
outs
push
rcl
jg
sti
push
das
mov
inc
jecxz
stc
mov
jno
cmps
call
mov
arpl
cmp
jp
pop
xlat
and
xor
mov
test
fist
fistp
aad
mov
mov
mov
leave
aad
cmp
ret
inc
push
sub
dec
pop
aaa
pop
push
jnp
ja
mov
pop
lea
hlt
add
js
cld
test
out
sbb
xchg
mov
iret
sbb
xchg
push
cli
and
xchg
aaa
out
xchg
sub
mov
(bad)
(bad)
jae
fcomip
sar
sbb
mov
in
push
or
add
ins
daa
mov
sub
xchg
jbe
shr
retf
loope
sbb
xor
xchg
mov
(bad)
rol
inc
nop
in
cmp
or
sahf
int3
aad
in
rcl
cdq
jmp
pop
jecxz
movs
pop
or
push
fwait
gs
mov
mov
jge
push
and
mov
and
mov
shl
rcl
call
test
jmp
scas
popa
push
sbb
loop
add
mov
mov
ret
push
push
(bad)
sbb
push
imul
sbb
paddw
inc
jns
sti
xchg
shl
pop
das
gs
xchg
inc
and
adc
xchg
sub
inc
mov
loopne
ins
xchg
(bad)
mov
das
cwde
adc
cmp
arpl
inc
jnp
ins
test
mov
xor
jecxz
jmp
das
push
cwde
iret
bnd
vpavgw
push
arpl
loopne
in
aam
sbb
dec
dec
test
xchg
idiv
push
and
pop
or
pop
cli
sub
and
fild
cmps
(bad)
cld
stos
aaa
or
add
cmp
cdq
sub
jo
inc
adc
popa
cmp
pop
imul
jle
pop
popa
jg
pop
mov
adc
dec
loopne
ins
or
jp
xchg
dec
stos
lods
imul
mov
sub
scas
dec
xchg
inc
cmp
fsubrp
cmp
pop
fwait
mov
lock
cmp
lahf
(bad)
mov
ja
push
xchg
push
add
cmp
addr16
fiadd
dec
(bad)
sahf
and
sub
add
pop
push
in
xchg
adc
icebp
rcr
cwde
rcr
pop
adc
sub
imul
(bad)
nop
(bad)
adc
adc
repz
jge
pop
inc
jae
outs
cmps
sbb
pop
(bad)
lods
add
adc
ins
inc
and
xor
push
dec
xor
mov
mov
cmps
mov
rcl
pop
fst
mov
(bad)
adc
sub
jmp
cwde
and
push
sub
enter
int
ins
call
xchg
lock
or
dec
add
int
leave
lahf
xchg
or
cmp
inc
push
push
xchg
push
jb
push
jp
push
inc
adc
fs
pop
jmp
xor
pusha
outs
inc
ins
out
cmp
mov
movs
das
popa
cmp
and
movs
mov
into
push
adc
sub
xor
aaa
(bad)
outs
std
lock
fldenv
pop
fcomi
sub
or
dec
out
cmps
or
cli
xor
dec
and
movs
ds
aas
in
ret
movs
fs
loope
std
jmp
in
pop
sbb
cmp
push
scas
cmps
call
sub
inc
inc
pop
(bad)
push
xchg
retf
in
inc
adc
(bad)
xchg
pushf
jbe
or
push
call
repz
fist
sbb
sub
aad
pop
add
cmp
repz
in
fisub
fdivr
ja
in
in
inc
dec
int3
mov
push
dec
adc
shr
ret
inc
adc
dec
ja
jge
nop
sbb
bound
push
cmp
fstp
(bad)
in
push
push
loop
jmp
inc
lds
loopne
adc
inc
loope
dec
iret
(bad)
mov
stc
adc
fcomip
je
add
fwait
test
mov
or
jne
into
cmps
and
arpl
add
jnp
push
jae
out
add
scas
mov
inc
(bad)
mov
enter
mov
shl
xchg
jecxz
(bad)
and
scas
xlat
mov
dec
imul
lock
sar
xchg
dec
lock
jp
lds
or
and
jmp
adc
cmp
mov
mov
ins
pop
pop
sub
adc
aam
int
loopne
jg
das
cld
adc
mov
or
fwait
scas
push
cmp
xchg
pop
mov
pop
js
mov
cmp
leave
clc
sbb
sti
clc
mov
jne
add
jmp
mov
add
sub
jo
stos
ins
test
rcr
stos
push
dec
and
neg
test
and
js
clc
scas
ins
fild
sub
loope
js
test
dec
loop
int
retf
repz
mov
ss
clc
mov
push
sbb
mov
pop
xor
scas
jg
nop
dec
push
cld
js
add
xor
fadd
jmp
xlat
adc
xor
and
mov
mov
inc
icebp
push
test
mov
fist
adc
push
pop
(bad)
enter
loope
xor
in
cmp
test
lea
iret
xor
push
xlat
xchg
icebp
mov
fidivr
xor
xor
push
push
clc
or
shl
ret
sub
popa
mov
icebp
idiv
js
xchg
cwde
lods
xchg
add
test
aaa
je
jb
push
enter
aas
out
mov
mov
cdq
les
inc
pop
jmp
fist
or
icebp
inc
adc
jmp
pusha
lock
or
je
pushf
ret
jb
cli
and
jns
sub
add
xchg
jp
sbb
fst
cmp
dec
js
cmp
sub
out
inc
sbb
aam
int3
pop
pop
js
xor
xchg
imul
xchg
add
pop
and
mov
retf
jmp
add
shl
fs
popa
mov
neg
mov
mov
jl
mov
mov
jle
xchg
jno
or
cwde
jae
mov
test
je
xlat
loop
leave
cmp
ss
data16
lahf
dec
sub
jnp
push
xchg
add
fist
dec
loop
xor
sbb
into
jae
mov
fisub
int3
arpl
dec
and
dec
sub
fwait
loope
push
cli
xchg
or
out
js
pusha
pop
jg
out
inc
push
test
xor
(bad)
retf
imul
outs
stc
repz
xchg
xchg
and
(bad)
adc
iret
ret
jb
loop
movs
(bad)
out
sub
sbb
add
xchg
sbb
rcl
mov
test
cmp
or
dec
icebp
std
add
fld
mov
ret
out
(bad)
pop
and
mov
rol
test
ins
(bad)
aam
and
push
mov
ins
sbb
cmp
jb
mov
(bad)
lahf
push
in
call
mov
shl
fld
test
cmp
push
fnstcw
jmp
push
jno
dec
jmp
xchg
inc
daa
adc
or
ja
mov
out
sub
mov
adc
mov
pop
fisttp
lahf
dec
inc
mov
dec
rol
mov
adc
xlat
mov
pop
sub
int
pop
repnz
rcl
cmovb
lea
pop
gs
push
popf
add
test
push
inc
or
cmp
pop
dec
jmp
cmp
setge
push
lea
add
sbb
ret
and
aaa
pop
out
or
mov
lods
outs
mov
pop
pop
shl
dec
lahf
xchg
xchg
rol
jne
retf
stc
arpl
adc
leave
test
rcl
icebp
ficom
movs
out
bound
xor
push
push
sub
dec
lea
or
ds
aad
pop
out
daa
retf
outs
mov
aam
rcr
adc
mov
push
adc
sbb
xor
loope
in
lods
mov
mov
jmp
stos
xchg
xor
sar
out
mov
es
jg
add
sbb
and
das
mov
xor
sbb
jne
movs
in
adc
add
xchg
inc
aaa
in
xchg
div
out
loopne
out
mov
lds
sub
mov
rcl
enter
(bad)
sub
push
stc
ficomp
jmp
adc
sahf
xchg
clc
popf
test
shl
in
(bad)
lahf
cmp
or
dec
out
adc
jl
inc
movs
adc
rcl
cwde
in
mov
lahf
inc
shr
xlat
mov
and
es
sub
xchg
pop
add
jmp
dec
xor
repz
mov
sbb
push
cmp
sbb
pop
cld
fimul
(bad)
fdivr
rol
aad
jecxz
jl
dec
mov
and
push
sub
mov
imul
fmul
je
jno
mov
xchg
test
xor
pop
cmc
push
fimul
pushf
pop
test
xchg
pop
movq
inc
mov
xchg
sbb
dec
push
inc
and
out
pop
or
in
mov
cmp
mov
xchg
aaa
and
pop
pop
mov
test
mov
pop
cmps
xchg
jbe
shl
popa
repnz
cs
(bad)
lods
sbb
fsubr
mov
ins
jae
pop
add
mov
dec
cmp
xchg
pushf
pop
push
adc
dec
ja
sbb
bound
cmp
xchg
mov
adc
add
inc
push
xchg
scas
fiadd
jmp
dec
push
scas
mov
aas
or
test
mov
pop
or
in
pop
imul
arpl
mov
or
sahf
dec
jno
hlt
dec
fwait
cmp
scas
ins
mov
mov
into
jne
sbb
or
cmp
in
repnz
inc
or
xor
outs
sub
xchg
(bad)
cmc
mov
enter
into
add
mov
movs
inc
cmp
or
pop
xchg
jl
dec
add
hlt
fidivr
pop
fnsave
mov
sub
add
mov
or
jno
scas
and
data16
jg
add
into
sub
or
popa
cli
dec
xor
hlt
mov
or
pop
xchg
mov
xchg
fwait
xchg
xor
lock
dec
jo
(bad)
pop
push
fnsave
jge
in
sti
xchg
outs
add
mov
mov
in
ror
fwait
or
or
mov
fisubr
cmc
sbb
cs
jp
popf
inc
retf
int3
sub
lods
hlt
daa
lods
mov
mov
dec
add
cmc
lds
and
ret
mov
inc
call
inc
fcom
sbb
xchg
xchg
push
cmc
push
popa
shl
xor
inc
xor
or
gs
jmp
xor
mov
sub
(bad)
sbb
sbb
xchg
cld
scas
xor
jmp
mov
sbb
pop
aas
stos
test
mov
adc
xchg
ret
push
mov
dec
stc
pop
stc
leave
adc
xor
inc
imul
push
gs
adc
add
clc
mov
call
retf
mov
into
fadd
popa
mov
icebp
sti
mov
test
ret
popa
push
outs
mov
push
xor
jecxz
cmp
test
stos
aaa
call
jb
xchg
imul
inc
add
idiv
outs
sub
push
xor
lds
jno
into
sar
xor
and
retf
fcom
sbb
pop
or
lea
mov
pop
jge
sub
lock
mov
push
jns
icebp
imul
or
test
test
cwde
sahf
mov
pushf
int3
ja
jb
fst
dec
je
lods
add
cmps
push
jp
daa
mov
sbb
jb
xchg
mov
adc
sub
add
or
and
sub
or
(bad)
xor
or
mov
fs
and
fs
pop
shl
pop
jp
xchg
ins
sbb
xchg
test
mov
mov
or
out
int3
fs
stos
fcomp
xor
pop
dec
repz
(bad)
jmp
outs
rcl
xor
cmps
daa
sub
pop
mov
loopne
pop
rcr
cmp
scas
fwait
pop
mov
ss
xor
mov
aas
(bad)
adc
push
std
and
rcr
fabs
and
push
scas
mov
pushf
repz
ror
pushf
jne
cdq
jne
loop
fstp
sti
mov
adc
or
xchg
xor
cmps
push
cmps
jge
(bad)
outs
mov
mov
xchg
mov
ja
fld
jmp
fsubr
adc
inc
faddp
in
addr16
sti
clc
and
push
fs
jnp
cmp
cmp
sbb
mov
fadd
mov
jmp
nop
imul
add
push
test
in
and
call
in
and
out
fdivr
mov
sub
aas
xchg
push
mov
cmp
mov
jnp
xor
mov
jae
cmps
jg
mov
mov
les
pop
or
jmp
inc
inc
cmp
mov
cmp
punpcklwd
mov
inc
xor
mov
add
push
shl
push
xchg
les
clc
cmp
add
inc
nop
mov
push
ins
jne
inc
inc
push
shl
mov
test
xchg
push
cdq
pop
add
mov
in
sti
xchg
lods
popa
mov
adc
pushf
(bad)
or
fdivr
pop
add
cmp
pop
mov
aaa
cmp
xlat
mov
ds
lods
(bad)
cwde
(bad)
jne
dec
pop
or
arpl
inc
popf
pop
mov
mov
push
or
mov
push
(bad)
fidiv
imul
inc
mov
mov
push
mov
push
dec
jp
cmp
cmps
jecxz
popa
push
mov
sbb
imul
(bad)
fmul
cmp
(bad)
and
mov
lahf
mov
out
mov
ror
mov
and
jns
fucomi
fnstenv
stc
mov
jl
push
lods
mov
aaa
es
arpl
enter
xor
cmc
jle
or
pop
aam
nop
and
or
mov
ffreep
mov
xchg
jp
lods
inc
clc
pop
hlt
addr16
dec
les
enter
inc
arpl
mov
leave
cmp
inc
mov
jl
push
xchg
jns
leave
pop
std
inc
jp
xchg
mov
test
cmc
sub
jle
push
imul
jne
mov
jmp
data16
push
js
faddp
pop
test
dec
div
sbb
aas
mov
push
loop
leave
xchg
cmp
gs
ja
dec
and
mov
mov
dec
jno
and
inc
(bad)
arpl
shr
mov
out
dec
jg
call
retf
sbb
pop
xchg
mov
dec
fdiv
push
mov
mov
popa
sub
mov
jno
jg
test
and
out
in
dec
push
call
pop
adc
jmp
inc
sbb
mov
out
jge
push
xchg
das
iret
add
jns
pusha
xor
push
fld
pop
cld
nop
lock
aam
cwde
stc
jne
fdivr
iret
punpckldq
sar
mov
dec
repz
jp
mov
sub
stos
mov
jb
sub
mov
dec
in
es
cmp
ret
test
sub
pop
movs
repz
(bad)
mov
or
(bad)
dec
into
sub
sbb
push
jp
out
xchg
or
cld
iret
mov
sbb
mov
lock
add
mov
aas
xchg
xlat
into
lock
test
adc
adc
(bad)
xlat
jle
pop
dec
fisub
mov
aaa
test
mov
call
sbb
and
jne
in
aaa
imul
add
scas
push
inc
mov
stc
(bad)
clc
sbb
retf
xor
cmp
add
sar
leave
cs
daa
mov
xor
aas
xchg
stos
out
movs
jge
inc
and
loop
jp
jb
sbb
jl
popf
mov
pushf
mov
xchg
and
jl
test
arpl
push
sbb
pop
mov
lods
push
pusha
icebp
xchg
mov
pop
push
je
(bad)
push
cmp
and
sub
int3
call
add
pop
mov
pop
mov
cs
in
jge
cmp
scas
mov
pusha
sbb
arpl
js
and
fucomi
imul
jae
pop
dec
stos
int
mov
ffreep
hlt
in
stos
lahf
les
jl
cmps
sbb
cmp
and
data16
xchg
mov
xlat
adc
das
and
ins
or
cld
nop
scas
out
cli
xor
stos
adc
sbb
jno
movs
jecxz
clc
aas
pop
add
add
es
fs
pop
sbb
mov
pop
(bad)
mov
jns
add
(bad)
nop
jns
jecxz
je
icebp
pop
mov
loop
mov
sbb
rol
lds
nop
dec
ss
dec
xor
pop
mov
or
jo
dec
stos
bound
jl
pop
sbb
and
push
cwde
jae
int3
xlat
mov
inc
sub
fwait
or
sahf
mov
adc
jmp
pop
ss
add
aad
lods
sub
ja
adc
xchg
idiv
jmp
jmp
sub
lods
jnp
gs
jb
add
mov
xchg
mov
cdq
sub
xchg
cdq
test
mov
mov
sti
adc
inc
jmp
ins
lods
sub
ss
mov
push
add
push
fs
fyl2xp1
pop
push
fcomp
inc
stos
jle
arpl
aam
xchg
jle
call
and
sub
aaa
dec
sbb
jge
mov
xchg
pushf
pop
inc
add
lock
(bad)
les
inc
or
xor
adc
jo
pop
sub
cmp
xor
and
js
call
jge
imul
push
fist
out
fst
mov
popa
cli
pop
mov
stc
dec
jle
aas
int3
daa
jp
fs
rcr
mov
mov
xor
xchg
loope
and
pop
dec
call
add
add
mov
sti
cli
call
scas
xor
loope
icebp
cmp
dec
into
mov
adc
add
inc
es
shr
and
pop
test
pop
dec
adc
outs
pop
je
addr16
push
daa
push
test
or
daa
and
sahf
push
cmp
dec
lods
push
xor
mov
push
xchg
repnz
xor
jae
or
repnz
cdq
ins
sbb
pushf
mov
pop
pusha
movs
icebp
xor
imul
xor
and
enter
movs
data16
icebp
stos
lods
in
test
repz
into
loope
mov
addr16
push
cld
in
imul
das
les
nop
test
pusha
lods
mov
fadd
xor
or
add
iret
cmp
shl
je
outs
and
dec
jo
(bad)
sbb
shl
dec
inc
cmps
fs
push
out
mov
mov
dec
and
xor
(bad)
or
data16
pop
mov
jmp
pop
jno
mov
loope
mov
loopne
inc
mov
fwait
nop
jmp
push
call
mov
push
sbb
inc
mov
jb
jbe
vcomiss
movs
sahf
call
pop
fs
out
das
dec
in
shr
inc
inc
sbb
ds
inc
jg
inc
(bad)
cmps
pop
add
les
and
jmp
int3
jns
sbb
test
daa
sub
add
jns
fst
sbb
fimul
dec
jo
pop
xchg
add
adc
shr
fisub
cmp
dec
push
push
xor
leave
in
loope
mov
cmp
ret
out
adc
outs
xchg
mov
jmp
movs
sbb
mov
dec
inc
(bad)
scas
mov
icebp
std
in
rcr
call
jl
imul
jle
mov
icebp
icebp
call
aas
loope
or
dec
or
loop
ret
aaa
xchg
lock
jb
xchg
or
sbb
fimul
fcomp
in
sbb
dec
mov
loop
pushf
or
xor
loop
lock
xlat
xchg
punpckhbw
cmp
(bad)
fsubr
fbld
adc
enter
sbb
fs
mov
add
test
sbb
aaa
cwde
jbe
in
add
mov
or
pop
adc
int3
dec
js
sub
push
repz
iret
mov
cmp
test
mov
cld
push
xor
mov
cmps
call
push
mov
push
jbe
rcr
dec
into
and
xchg
mov
add
mov
ficomp
repnz
sub
aaa
jl
leave
mov
cs
(bad)
fiadd
sub
jp
pop
loop
mov
aas
rcl
fistp
sahf
shl
xlat
mov
imul
and
rcl
inc
adc
pop
popa
rcl
gs
adc
sbb
mov
add
rol
or
(bad)
int3
cs
xor
js
add
mov
cmp
mov
jmp
into
cmps
sub
inc
ins
out
stos
lea
inc
inc
add
outs
cmp
xchg
inc
mov
adc
dec
push
or
xchg
sub
or
jbe
jecxz
inc
movs
mov
daa
cdq
out
jne
into
aad
dec
inc
mov
sub
out
adc
ror
fistp
in
popf
sub
adc
loope
push
and
shl
(bad)
scas
sti
adc
sbb
enter
aaa
mov
test
sub
push
sub
pop
sahf
or
aaa
mov
test
inc
je
inc
arpl
sub
adc
ret
mov
and
adc
push
adc
lods
xchg
add
mov
adc
add
or
jecxz
mov
ins
inc
mov
loop
leave
xchg
lock
push
xchg
icebp
test
ret
outs
arpl
xchg
iret
pop
or
adc
mov
repnz
xchg
jb
pop
fsubr
cmp
add
je
mov
add
jbe
sub
cld
xchg
cmp
ins
les
cmps
fistp
or
jno
and
inc
lea
jb
ja
repz
rcl
jmp
aaa
dec
lds
add
push
dec
movs
aas
daa
sub
sub
adc
mov
xlat
cs
xchg
rol
pop
pop
sub
mov
pop
or
lgs
mov
push
add
mov
je
les
fild
rcr
sti
aas
retf
jbe
aaa
cmc
cmp
fcomip
jge
mov
add
xchg
mov
fistp
jns
div
in
test
enter
ins
(bad)
sahf
jg
out
bound
leave
cmp
jae
mov
nop
lds
in
ror
int3
pop
test
mov
dec
ss
pop
stc
xchg
les
sahf
retf
push
shl
jno
mov
fnstcw
pushf
sahf
aaa
cld
es
lahf
div
mul
out
push
hlt
jb
jge
adc
and
jg
cmp
jmp
shr
cmps
repnz
ret
and
sbb
sub
mov
xchg
jge
mov
mov
push
inc
fstp
popa
arpl
xor
sub
fiadd
mov
out
mov
std
cmp
mov
xchg
pushf
cdq
popf
ins
mov
mov
add
jp
add
popa
stc
icebp
popa
(bad)
int
stos
mov
jnp
or
jne
popf
aas
mov
into
nop
imul
push
mov
and
sahf
sub
cmp
jo
push
mov
call
dec
repnz
and
push
jp
pop
pop
ret
fidiv
loopne
sbb
push
inc
in
movs
pop
call
scas
mov
jno
aaa
aad
adc
lock
cli
mov
inc
jmp
pop
or
mov
and
lea
mov
xor
mov
pop
popf
sub
sbb
fadd
lds
mov
gs
inc
mov
jns
and
pop
add
mov
or
test
out
out
out
push
add
in
add
ss
mov
mov
mov
mov
xchg
gs
jns
cmp
mov
cmps
scas
out
repnz
or
dec
mov
or
leave
imul
je
inc
fsubr
jge
retf
cmp
iret
pop
rcr
out
neg
sub
fbld
arpl
shr
es
enter
push
mov
pop
add
jno
sub
nop
xchg
mov
movs
sub
mov
addr16
jo
(bad)
in
lds
cmp
cld
xchg
test
pop
shl
enter
test
stc
fnsave
je
std
sub
push
fsubr
scas
or
out
setns
call
dec
jp
and
mov
or
mov
aad
pushf
sbb
adc
(bad)
jg
adc
out
xor
(bad)
stos
mov
xor
xchg
jg
ret
push
push
and
sub
mov
push
ja
das
pop
pusha
loop
(bad)
cmp
ins
push
imul
cli
lock
pop
stos
sub
xor
sub
popf
xchg
push
stc
dec
sbb
push
call
icebp
add
sbb
jns
in
addr16
shl
mov
or
adc
rcl
(bad)
mov
pop
push
inc
and
inc
jb
(bad)
jns
shl
dec
test
les
dec
push
push
rcr
loop
aas
mov
mov
push
mov
mov
mov
adc
mov
mov
jbe
and
stos
dec
bound
jne
jmp
(bad)
and
and
dec
(bad)
fidivr
pushf
fnsave
stos
xlat
mov
mov
shr
in
into
mov
stos
pop
dec
addr16
pop
test
(bad)
(bad)
loopne
mov
es
int
ret
ins
fcomi
mov
lahf
jmp
repz
adc
sbb
lock
dec
fwait
std
fs
popf
jne
and
inc
lahf
sbb
pop
sub
mov
add
dec
push
test
in
das
adc
adc
in
jl
add
aaa
jbe
mov
mov
icebp
adc
jle
mov
int
fyl2x
xor
in
cdq
xchg
push
dec
hlt
cmps
ins
add
inc
(bad)
out
call
xor
cmc
add
arpl
push
cmp
aaa
loopne
fwait
sub
clc
push
fsubr
xor
inc
lea
aas
lea
push
dec
dec
fwait
hlt
cmp
imul
sar
into
les
daa
aaa
jb
push
inc
xchg
mov
sbb
dec
pop
imul
test
repnz
mov
in
mov
icebp
cmp
sbb
sub
in
repnz
jle
jnp
sub
push
or
out
cmp
add
pop
push
dec
xchg
sbb
xor
popa
push
dec
daa
sbb
mov
adc
pop
fadd
xor
outs
and
xchg
(bad)
test
cli
sbb
jmp
imul
adc
retf
add
mov
pusha
mov
dec
cmp
xor
shl
sub
inc
jne
inc
(bad)
cmp
int3
je
test
mov
jl
jno
retf
inc
cmps
xor
idiv
or
sbb
retf
fcmovne
sub
sub
pop
int
xchg
and
sub
jne
pop
repnz
mov
or
push
push
pop
jbe
ficom
pop
mov
xchg
cmp
cmp
test
xor
add
pop
pop
mov
imul
icebp
fs
mov
pop
ret
sbb
mov
sbb
fidiv
test
rcl
ss
ds
pmaxsw
cmps
jo
fnstenv
test
add
fcmovbe
ret
(bad)
out
add
or
imul
fmul
or
jle
cmp
mov
fidiv
shl
mov
push
repz
or
in
push
dec
cli
(bad)
scas
jmp
pop
unpckhps
(bad)
cmp
sbb
imul
cmp
out
xchg
(bad)
(bad)
xor
xchg
ret
mov
into
inc
(bad)
jp
arpl
das
xchg
pop
jno
(bad)
mov
mul
clc
retf
je
ret
sbb
xor
mov
dec
add
punpckhdq
movs
xor
and
push
jns
stos
push
add
xchg
out
pop
repnz
dec
dec
cdq
or
lods
push
in
repnz
ret
test
pop
sbb
jne
in
ds
test
div
inc
jmp
jno
inc
je
jge
(bad)
cmp
leave
sar
mul
mov
test
or
push
add
mov
jg
out
cmp
das
ja
addr16
push
outs
push
jmp
cmc
xchg
nop
mov
dec
and
fdiv
xchg
mov
sub
sbb
add
mov
outs
ds
pusha
sbb
retf
mov
adc
add
pop
in
push
pushf
ret
shl
arpl
gs
mov
or
mov
scas
xchg
cmp
out
lock
nop
jb
ret
mov
fdiv
out
jae
mov
xlat
in
mov
cwde
cwde
xor
cmp
xor
pop
aam
sub
sbb
outs
call
pop
push
jg
adc
nop
imul
jnp
enter
jmp
in
icebp
iret
test
aam
pop
arpl
xchg
adc
sub
pushf
cli
inc
sub
out
or
sbb
fidivr
mov
pop
sub
(bad)
cli
inc
jmp
xchg
sti
sbb
enter
mov
xchg
loope
jp
cmp
adc
add
sub
adc
outs
inc
push
add
inc
jns
xchg
test
mov
das
push
outs
not
dec
ss
pushf
lahf
adc
(bad)
fstp
mov
mov
mov
clc
in
lods
(bad)
jno
and
repz
fabs
pop
sub
(bad)
and
push
mov
jo
inc
test
es
rcl
ds
fisub
adc
add
fstp
jg
(bad)
jae
and
and
push
pop
jl
popa
lods
je
sbb
push
enter
cmc
mov
mov
aad
xor
jne
(bad)
(bad)
ins
xchg
inc
jns
mov
clc
cmp
jns
pop
mov
mov
repz
in
xchg
mov
data16
xor
int
xchg
inc
sub
mov
jg
pusha
movs
push
add
loop
xor
mov
push
aaa
arpl
in
outs
inc
push
popa
and
rcl
into
scas
iret
or
add
(bad)
fist
aad
fnstenv
mov
cli
mov
mov
ret
out
mov
sub
addr16
cs
movs
hlt
pop
fdivr
pop
jmp
add
dec
fdiv
jp
dec
or
push
cs
fimul
out
sar
rol
or
repz
js
adc
cmp
in
loope
(bad)
mov
pop
or
or
pusha
leave
shl
call
sti
fmul
addr16
sub
mov
bound
add
xchg
sbb
push
shl
push
sub
or
push
xor
or
cli
sar
jne
ja
pop
sbb
pop
xor
adc
mov
retf
icebp
dec
mov
call
push
ficom
call
stos
xchg
mov
sbb
les
into
add
dec
or
dec
jp
mov
(bad)
and
enter
inc
xchg
mov
imul
lods
dec
mov
inc
cmp
out
ss
pusha
sar
mov
or
test
or
mov
sub
inc
push
fstp
mov
mov
dec
gs
jae
in
inc
fs
xchg
sub
popf
add
mov
outs
in
add
mov
push
xchg
push
xchg
mov
inc
jg
test
sub
xchg
out
mov
in
or
neg
and
mov
popf
mov
test
cmp
xchg
(bad)
sahf
fldcw
aam
and
lods
sti
sub
bnd
and
pusha
and
and
or
or
movs
push
mov
mov
jno
pop
ins
(bad)
jnp
das
and
jmp
ins
aaa
push
mov
iret
ror
sub
lock
ret
mov
sub
mov
xor
pmaddwd
pushf
repnz
aad
sbb
pop
xor
aas
xchg
add
imul
xchg
jnp
or
mov
jne
arpl
lods
in
mov
addr16
iret
adc
int
mov
and
out
mov
dec
in
and
div
mov
mov
and
and
xor
jle
push
lds
push
ficom
mov
lods
arpl
fdiv
mov
pop
jo
les
test
or
mov
mov
test
out
inc
jg
sahf
mov
inc
mov
adc
xlat
dec
cdq
dec
lds
sub
pop
je
dec
imul
cdq
mov
inc
test
push
fmul
fmul
(bad)
jnp
mov
mov
jl
mov
ss
shl
loope
ror
(bad)
or
xchg
xchg
sub
out
mov
int
push
lahf
leave
or
cmp
add
dec
aam
sub
mov
cmp
aas
inc
jmp
or
fs
test
mov
into
jnp
sub
push
test
inc
or
daa
mov
and
adc
test
xor
sbb
cmp
(bad)
rcr
sbb
(bad)
stc
push
add
cmp
and
cmps
scas
adc
sbb
mov
add
pop
lods
mov
sub
mov
test
push
mov
adc
mov
cmps
cmp
in
int
mov
add
clc
mov
leave
pop
jl
fcomp
lahf
lahf
jp
dec
adc
jns
adc
jge
and
fisub
push
movsx
pop
or
xchg
jl
mov
rcr
(bad)
push
mov
fdivr
and
sub
icebp
xchg
mov
cmp
cwde
xchg
fwait
out
test
inc
lea
mov
jnp
(bad)
pushf
je
std
dec
sbb
mov
cmps
popf
es
or
jne
dec
fdivr
call
das
and
sbb
lahf
pop
(bad)
and
aad
mov
scas
push
pop
in
xchg
fcomp
xchg
fcomp
sub
xchg
(bad)
repnz
mov
pop
and
lock
ficom
mov
add
(bad)
sbb
std
jmp
or
add
sub
or
push
mov
call
cmps
xchg
xchg
idiv
inc
xchg
and
or
leave
out
mov
outs
outs
mov
xchg
xchg
ja
push
sub
xchg
mov
xchg
shr
ds
scas
sbb
add
mov
mov
or
and
jae
jne
adc
or
stos
mov
in
adc
pop
sub
adc
push
dec
jns
pop
cld
call
xchg
mov
xchg
jne
push
adc
sbb
dec
pushf
mov
inc
jl
jb
cwde
movs
addr16
retf
sub
int3
mov
psrlw
fld
sahf
out
aad
pusha
jae
fdivrp
in
jle
mov
fistp
and
mov
rcl
data16
xchg
dec
or
fcomp
mov
sbb
add
cmp
inc
jo
push
cdq
adc
(bad)
pop
and
jmp
shl
call
cmp
xchg
jno
sbb
dec
arpl
fidivr
adc
mov
xchg
lock
int3
inc
mov
cmp
rcr
jmp
push
push
fnstenv
fnstsw
push
ficomp
push
push
imul
scas
pushf
shr
mov
mov
jnp
sub
sbb
mov
xchg
fst
fisubr
dec
adc
pop
sbb
or
jbe
lods
jnp
jo
jp
xchg
pop
sbb
jle
jno
loop
sbb
mov
or
test
repz
les
pop
and
fadd
sahf
and
add
sub
or
call
push
lahf
imul
or
cmc
mov
xchg
scas
pushf
pop
add
push
xor
inc
addr16
imul
cs
(bad)
jecxz
add
sbb
outs
(bad)
fstp
jo
or
(bad)
and
sbb
cld
pusha
out
sub
pop
push
mov
push
inc
repz
jne
rcr
jl
ret
cmp
inc
stc
int
and
xor
sub
or
add
popa
mov
cmp
push
lods
push
xor
hlt
jns
movs
pop
clc
imul
das
out
dec
push
inc
shl
add
cld
aad
cld
test
xor
pusha
mov
xchg
inc
popa
push
push
inc
mov
cmp
fxch
cmp
jae
cmp
pusha
ret
lea
enter
push
sbb
das
clc
pop
inc
outs
sbb
mov
(bad)
ins
and
clc
retf
ret
lods
sbb
cmp
cdq
jecxz
sub
sub
xor
jle
xchg
shr
cli
push
test
mov
mov
sub
sub
push
inc
cli
out
cdq
or
add
mov
lea
test
fwait
lods
adc
call
cmc
repnz
pop
pop
fwait
popa
in
(bad)
das
and
mov
stos
cmp
mov
cmp
sbb
outs
cmp
fmul
mov
mov
jecxz
retf
and
sbb
jmp
xor
nop
mov
add
cmp
push
mov
adc
repz
mov
pop
cmp
ins
sub
push
in
in
xchg
dec
shl
jmp
test
xor
mov
or
mov
fwait
js
xor
sub
push
cwde
mov
mov
mov
sahf
shl
fcomip
add
cs
inc
inc
xchg
mov
std
sbb
in
sub
xor
mov
mov
stc
jns
iret
jg
sub
cs
daa
inc
cmps
fimul
in
jle
cmc
inc
mov
pop
sub
pop
not
push
xchg
mov
pop
in
stos
pop
out
or
mov
cli
mov
cmps
imul
inc
rcl
and
mov
aam
sub
sub
sub
xchg
enter
mov
cmp
pop
gs
jmp
aad
sub
jbe
mov
jnp
loope
jns
xchg
mov
xor
mov
outs
stos
(bad)
out
inc
in
push
and
mov
add
or
mov
std
adc
(bad)
cmps
ds
xchg
retf
xchg
lods
inc
xchg
pop
and
(bad)
addr16
loop
and
shr
ret
mov
sub
outs
mov
and
in
dec
dec
mulps
jmp
sbb
or
jle
(bad)
xchg
pusha
test
mov
lds
mov
mov
rcr
retf
jno
outs
cmps
and
mov
daa
jmp
xchg
or
xor
cmp
fdivr
and
sub
jecxz
and
jnp
or
mov
jb
aam
mov
sbb
clc
jbe
push
mov
push
bound
mov
hlt
dec
jns
mov
mov
std
or
jp
iret
jle
pop
pop
pop
sbb
ret
fcomp
xor
sar
sar
cmp
out
sbb
adc
stos
es
push
push
pop
or
not
(bad)
sub
cmc
aas
bound
mov
dec
xchg
inc
imul
adc
mov
cdq
push
add
push
add
add
adc
cmc
jmp
add
add
(bad)
mul
adc
or
popf
mov
add
outs
xor
in
in
push
xor
call
push
dec
(bad)
aad
test
or
and
push
mov
aam
adc
(bad)
popf
xor
or
test
push
xchg
fs
jns
pop
mov
sub
fsub
mov
out
mov
test
pop
mov
shl
neg
stos
out
inc
js
push
push
inc
out
(bad)
fsub
cs
push
adc
repz
std
sbb
mov
loope
mov
push
daa
push
add
out
fbld
cmps
mov
add
das
out
xchg
out
cmp
ja
mov
loopne
std
sbb
jne
stos
jnp
sbb
sbb
sub
add
ror
cmp
ret
and
and
xor
ins
inc
mov
xor
inc
ja
addr16
mov
in
adc
mov
or
mov
addr16
cdq
js
arpl
lds
mov
cmp
inc
add
ret
lock
test
inc
sbb
jae
sub
inc
adc
dec
popa
mov
lds
leave
data16
pop
bound
cli
sub
mov
enter
mov
std
sub
or
fmul
lods
mov
and
addr16
jp
push
mov
xchg
jg
fdivrp
mov
cmps
sbb
pop
mov
mov
test
mov
cmps
dec
shl
out
xchg
push
daa
sbb
pop
in
adc
push
push
loope
xor
sbb
xor
in
cmc
mov
pop
stos
fisubr
push
leavew
(bad)
mov
fwait
and
cmp
mov
inc
jl
mov
adc
dec
mov
in
movs
cmps
jne
xchg
sbb
loop
stos
int
sub
mov
jp
dec
push
fadd
add
push
push
in
shl
pop
jae
xor
dec
jnp
push
sub
je
dec
repnz
movs
pop
push
movs
ds
ficom
sub
sbb
adc
mov
dec
lods
cwde
adc
pop
not
test
cmp
fsub
aaa
out
mov
fucomp
pop
jns
sar
imul
sbb
mov
movs
mov
jle
repnz
ret
fimul
jbe
pop
stc
push
jg
ins
or
aas
aad
adc
fs
push
adc
cwde
ins
(bad)
rep
sti
sbb
adc
xor
mov
sti
cmps
or
and
cwde
pop
sbb
outs
mov
mov
repnz
(bad)
data16
add
lods
mov
movs
sbb
mov
mov
stc
sbb
int3
movs
sbb
ret
icebp
outs
dec
xor
mov
mov
sti
movs
shr
inc
ror
mov
and
dec
xor
cmc
adc
out
push
pop
cdq
cld
mov
test
pushf
data16
call
cmp
imul
push
in
xor
xchg
in
push
sub
add
test
xchg
sbb
add
xchg
add
sub
pop
dec
ss
pop
in
mov
mov
or
vcvtsi2ss
loope
pop
mov
jmp
cmp
in
test
fsubr
inc
(bad)
mov
shl
pop
(bad)
enter
jle
inc
jecxz
sti
outs
mov
mov
sub
pop
inc
or
jne
push
iret
push
hlt
(bad)
pop
pop
and
mov
fadd
inc
shr
inc
(bad)
mov
icebp
cmp
cwde
loop
rol
(bad)
stc
push
scas
xchg
pusha
aam
or
push
pop
ja
inc
add
bound
sbb
push
imul
lea
shl
mov
movs
dec
jnp
gs
mov
and
lock
fidiv
mov
std
dec
and
push
les
xchg
out
cmp
iret
rol
les
jo
pop
je
adc
les
cmc
imul
cld
test
jg
nop
sbb
push
xlat
clc
shr
add
mov
sbb
and
rol
aaa
es
loope
jnp
call
cld
inc
cmps
jnp
pop
lock
jmp
jae
ror
mov
call
xor
test
inc
pop
dec
push
jp
xchg
sar
inc
sub
sbb
adc
sbb
mov
pop
push
add
outs
aad
push
into
and
cmp
out
xor
jns
sub
or
retf
scas
mov
and
pop
scas
sar
adc
das
je
jno
dec
xor
out
pop
lahf
dec
out
ss
pop
frstor
lods
cwde
xchg
cs
int
test
pop
sub
jnp
stos
shl
xor
mov
inc
imul
outs
je
xchg
stos
push
xor
fs
mov
shl
dec
pop
push
scas
fisttp
fsub
and
jmp
rcl
fwait
xor
neg
fmul
add
pop
in
jno
pop
xchg
repnz
data16
push
dec
add
ret
jno
sub
repz
rol
jo
pop
push
sahf
push
in
int3
push
inc
jp
shr
rcl
movs
in
shl
jo
fldenv
cmp
cmp
std
out
out
and
in
jg
inc
pop
mov
movs
push
jle
inc
mov
pop
retf
inc
sbb
jns
rcl
and
imul
pop
xchg
enter
mov
rcl
sbb
mov
and
popa
mov
ins
or
popf
push
push
ds
daa
dec
add
and
imul
cmp
gs
aad
mov
dec
adc
and
mov
and
push
and
js
ror
rcr
pop
mov
sub
jae
add
jle
aaa
sar
jnp
lock
loop
call
push
cld
mov
pop
jg
lea
nop
pop
pop
cli
inc
aas
sub
lods
out
das
xor
bound
aam
and
leave
js
sbb
mov
retf
rol
mov
sbb
adc
iret
gs
pop
mov
shl
aad
mov
cli
retf
mov
xchg
stos
jb
fst
adc
div
mov
out
aas
data16
cmp
pop
mov
and
fidivr
(bad)
mov
pop
mov
imul
sbb
fsub
dec
and
hlt
cmp
in
inc
adc
xlat
in
dec
mov
fldcw
sub
fstp
mov
inc
retf
pop
(bad)
jnp
mov
sti
ror
xor
pop
popa
shl
mov
in
push
and
xchg
jne
es
xchg
cmp
retf
sub
int
clc
(bad)
popa
mov
cmp
push
out
adc
mov
mov
add
xor
xor
mov
scas
mov
and
into
fs
sbb
push
xchg
adc
jge
pop
push
add
pop
push
mov
fs
aam
xchg
pusha
fs
outs
mov
imul
or
aaa
cmps
jle
(bad)
in
sub
push
jae
add
mov
jo
or
xchg
stc
pop
pop
and
and
pop
mov
into
icebp
cdq
repz
fild
scas
dec
sub
xchg
ret
or
sbb
or
add
out
jno
shl
sbb
pop
popf
test
and
outs
call
sub
fmul
inc
xor
into
add
cmp
int3
loopne
pop
or
jae
lock
ins
sbb
lds
es
mov
pop
fist
cmp
ret
jl
test
mov
cmps
sbb
hlt
dec
mov
movs
dec
push
in
xchg
add
imul
rcl
call
or
and
and
mov
in
push
popa
push
add
cmp
movs
loope
into
inc
ja
data16
jge
inc
je
inc
pop
arpl
adc
dec
pop
sub
xor
inc
mov
mov
and
fimul
push
mov
jo
inc
out
lods
cmp
sub
call
mov
movs
xchg
mov
cmp
imul
xor
push
cmc
pusha
lahf
cdq
mov
cld
mov
cld
xchg
pop
outs
jbe
push
dec
in
sti
jmp
mov
push
mov
aaa
movs
cli
daa
sbb
xchg
cmp
jge
push
and
mov
aam
movs
xor
or
xchg
xchg
xchg
push
xchg
outs
aam
dec
imul
dec
inc
cmp
pushf
and
fwait
mov
out
(bad)
cmp
scas
push
into
cld
cmp
and
ins
sbb
push
repnz
cmp
shl
xchg
lods
inc
adc
jmp
pushf
jg
push
sar
adc
pop
mov
or
inc
add
sub
pop
xchg
inc
daa
pop
imul
push
cmp
pusha
ror
test
nop
into
jge
cli
movs
stos
inc
psubw
pop
cmps
repz
leave
rol
stc
xor
pop
scas
inc
and
xor
test
outs
mov
(bad)
fmul
and
and
(bad)
out
mov
(bad)
jge
sbb
cmp
push
adc
mov
outs
cld
pop
dec
out
mov
retf
or
adc
test
outs
sub
pop
or
push
xchg
gs
mov
(bad)
adc
and
in
stos
lods
push
sar
lahf
es
leave
push
add
inc
sbb
icebp
sub
sar
jl
gs
scas
cdq
jnp
enter
imul
stc
inc
mov
xchg
sub
and
push
in
or
imul
jg
cmps
out
(bad)
jns
adc
mov
out
movs
xor
and
inc
xor
jmp
lds
jno
inc
or
(bad)
fbstp
mov
aad
sub
stos
dec
xor
scas
mov
adc
sub
push
mov
in
jne
std
scas
inc
(bad)
rcr
dec
mov
inc
jge
jmp
fst
rcl
je
loope
repz
adc
or
cmp
retf
into
lods
mov
outs
adc
and
push
jge
pop
shl
mov
or
jne
pop
into
mov
int
cmps
fs
ds
or
mov
cmps
iret
aas
sub
lods
pop
cmc
std
mov
fadd
scas
mov
sahf
mov
and
fcmovnu
and
or
inc
add
inc
repz
push
movs
addr16
data16
pop
pop
addr16
fcom
add
mov
mov
xchg
movs
pop
rol
mov
jnp
(bad)
adc
or
in
dec
push
and
cli
pushf
push
stos
sbb
push
jo
test
pop
xor
(bad)
push
sbb
jg
adc
dec
add
sbb
scas
ins
ficomp
dec
sbb
adc
pusha
cmp
mov
pop
(bad)
pop
rcr
in
push
into
mov
in
pushf
pop
ret
loopne
(bad)
out
dec
inc
push
retfw
daa
in
dec
mov
mov
xor
inc
call
push
dec
sbb
add
pop
ins
fadd
cmp
fadd
xor
shl
aam
xchg
mov
and
leave
push
les
lahf
sub
outs
mov
pop
in
ffreep
aaa
push
pop
enter
inc
ja
in
ret
fs
sbb
sub
push
stc
inc
jae
lea
pushf
pop
push
jns
iret
pop
fcomp
(bad)
pop
sbb
les
out
mov
pop
mov
dec
mov
push
dec
in
or
shr
pop
cmp
jne
loop
inc
sbb
test
mov
mov
js
aas
cmp
jl
cwde
push
addr16
mov
scas
pop
stos
ds
jae
test
pop
mov
ret
cwde
sub
int3
push
jb
std
bound
call
repz
jl
(bad)
and
xchg
inc
jo
std
jmp
xchg
fstp
push
dec
pop
pop
or
sub
jbe
mov
psrld
ins
cwde
stc
shl
mov
ins
jo
mov
imul
ins
add
dec
outs
and
scas
mov
jmp
add
xor
out
xchg
dec
add
pop
in
stos
xchg
test
or
mov
icebp
jb
and
jmp
and
mov
fwait
mov
fnstsw
nop
addr16
inc
push
daa
shr
arpl
out
jb
and
test
sub
ss
enter
inc
jle
xchg
mov
cmp
cmc
inc
pop
or
jmp
mov
cmp
adc
adc
pop
or
movs
xor
loopne
loopne
scas
dec
jmp
popa
iret
in
jecxz
stos
je
ret
cdq
in
push
sub
push
sub
mov
mov
sbb
sub
pop
scas
out
jns
ss
inc
imul
fs
imul
fcom
stos
xor
or
jg
dec
pop
cld
or
pop
nop
dec
and
or
and
mov
call
jg
fcomip
adc
loopne
or
int
(bad)
mov
add
retf
xchg
push
es
and
aad
stc
or
pusha
or
lock
ficomp
cmp
dec
popf
cmp
leave
fwait
pop
in
adc
icebp
pop
stc
fucomi
mov
push
iret
xor
add
inc
push
jae
pop
mov
out
int
sub
outs
or
push
mov
sub
arpl
mov
inc
fcom
sbb
pop
inc
cs
movs
inc
not
in
pop
hlt
and
inc
ficomp
ja
ficom
int3
jo
inc
fsubr
int
fiadd
loopne
mov
adc
mov
xchg
adc
dec
jp
mov
push
add
mov
jle
add
fdivr
stos
xchg
mov
iret
sub
fld
push
xchg
dec
cwde
xchg
imul
push
stos
cld
mov
mov
sti
inc
mov
sbb
cmc
mov
repz
or
out
xchg
jecxz
repnz
ins
sub
xchg
xchg
mov
jmp
mov
xlat
les
repnz
fmul
lea
adc
div
aaa
cmp
dec
aaa
jecxz
jp
xchg
ret
(bad)
cdq
mov
retf
idiv
(bad)
call
int3
aad
movs
pushf
ret
cld
pop
aam
hlt
xchg
jg
rol
cmp
fiadd
in
pop
push
inc
xchg
call
jae
arpl
dec
out
idiv
cmps
cmp
dec
ror
movs
retf
aad
jne
call
sbb
les
mov
cmp
sub
nop
jg
test
out
sbb
shl
cmc
loope
stos
imul
xor
ins
push
jge
jmp
push
mov
cmc
test
dec
pushf
sahf
(bad)
(bad)
or
test
pop
out
and
aam
and
inc
movs
outs
jg
mov
in
sbb
stc
loope
xchg
jmp
sub
xchg
sar
cmp
(bad)
scas
xor
add
movs
cs
ret
fdiv
cmp
sbb
arpl
xor
call
or
hlt
aaa
cdq
fild
mov
inc
sbb
pop
mov
fsubr
pop
inc
retf
rcl
outs
outs
rcr
pushf
mov
aaa
lock
dec
test
sti
ds
xor
rol
mov
cmp
push
cmp
jge
sbb
fisubr
mov
js
mov
stos
push
loopne
cmps
movs
jbe
int3
outs
pushf
pop
out
pop
add
dec
mov
mov
in
push
push
push
retf
in
and
loope
retf
jecxz
daa
inc
out
mov
cwde
test
sub
dec
addr16
ficomp
dec
sti
stos
int3
add
(bad)
mov
ins
push
nop
cmps
adc
mov
popf
scas
jp
xchg
std
repz
pop
sbb
push
ret
jl
pop
sbb
loopne
push
and
cmp
dec
mov
pop
mov
test
(bad)
ss
lock
shl
cmp
scas
adc
cs
dec
popa
and
add
shl
arpl
mov
xor
test
aad
nop
dec
mov
pusha
clc
cmp
cmp
rcl
leave
pusha
dec
rcr
les
lds
call
and
push
shl
jb
(bad)
jge
outs
icebp
lods
fldcw
shl
ins
mov
and
sbb
cmp
jnp
jae
push
and
push
popa
ret
cmp
push
dec
xchg
xor
btc
inc
push
sbb
shl
sar
ja
pop
in
adc
mov
fld
jb
in
stos
lahf
cmp
sub
bnd
push
scas
xor
test
pop
jle
cmp
push
mov
jo
cwde
pop
inc
iret
test
jp
mov
push
cs
aas
rol
inc
fsub
sub
and
mov
cdq
std
push
in
dec
or
xchg
adc
jmp
mov
adc
inc
shl
or
mov
movs
xchg
and
adc
push
adc
leave
mov
mov
sub
out
mov
push
mov
xchg
sbb
add
jecxz
daa
pop
mov
adc
js
mov
xchg
add
xchg
test
mov
push
inc
lock
movs
xchg
lea
jge
sbb
sub
sub
call
(bad)
stos
rol
loope
sub
rcl
fstp
and
jg
xchg
xchg
dec
jae
push
inc
xchg
and
pop
and
stos
lahf
fild
(bad)
xor
and
mov
push
out
mov
cmp
cmps
clc
(bad)
adc
(bad)
dec
les
bound
pop
imul
pop
out
mov
into
inc
adc
es
adc
ins
jg
add
mov
ror
test
adc
cmp
cmp
inc
pushf
sbb
inc
cmp
div
in
out
jl
movs
push
popa
inc
pop
loopne
aam
sub
pop
adc
enter
nop
jo
lds
cmp
imul
cmp
aas
sub
call
pop
pop
outs
scas
cmps
dec
xor
cmp
arpl
inc
push
sub
mov
mov
push
repnz
sbb
retf
pop
aas
jg
adc
inc
(bad)
and
sbb
add
fwait
jg
ds
sub
cs
jb
and
jmp
adc
push
add
js
aas
adc
push
fucom
jae
pcmpgtb
cwde
add
dec
rcr
scas
xchg
mov
xor
and
fwait
test
xchg
push
cmc
mov
cmp
or
add
add
lods
xor
mov
gs
call
leave
dec
inc
dec
pop
das
push
fs
out
pop
inc
add
dec
mov
xchg
retf
pop
jg
clc
xor
pushf
xor
leave
lods
(bad)
ror
mov
(bad)
and
rol
(bad)
push
fisubr
sub
xchg
rcr
dec
xchg
out
pop
inc
inc
pop
add
jl
push
fidivr
mov
jne
or
sbb
mov
jmp
cmp
ins
sbb
pop
jno
sahf
ja
in
mov
pop
test
test
cmp
fst
sub
push
stc
jmp
fwait
jno
bnd
imul
pop
lahf
add
push
push
sbb
pop
in
mov
cmp
dec
jle
int3
mov
out
inc
jecxz
add
adc
sti
gs
aad
out
mov
sbb
inc
lock
push
jecxz
or
dec
dec
out
popf
pop
add
xor
pop
int3
nop
pop
mov
retf
pop
or
dec
(bad)
jbe
test
test
mov
sub
cmp
and
or
adc
test
je
adc
xchg
xor
xchg
das
push
xchg
sub
add
mov
stos
jmp
js
repnz
push
ds
sbb
mov
(bad)
lods
dec
sbb
stc
and
pop
outs
iret
leave
into
repz
out
push
mov
push
xchg
xor
sub
gs
es
nop
loope
push
cmps
lods
aaa
(bad)
pop
push
jmp
lds
loop
call
mov
ds
je
int
cmp
add
cdq
movs
dec
mov
sub
pop
mov
(bad)
cmp
pop
xor
sbb
mov
fcmovnbe
stos
mov
repnz
gs
mov
dec
push
jo
push
and
test
pusha
inc
loop
xor
inc
jmp
out
rol
jmp
cmc
fidivr
bound
test
jecxz
sbb
push
repnz
test
add
in
jg
cmp
mov
mov
iret
and
cmc
inc
sub
pop
add
sub
or
pop
dec
idiv
mov
xchg
cmp
jle
jge
cld
pusha
pusha
xor
fist
cmps
mov
in
mov
into
rol
ins
rcr
bound
mov
psadbw
xor
push
cmp
stos
xchg
push
add
xor
add
adc
add
mov
rcl
les
adc
jge
push
in
nop
ins
push
ret
pusha
add
test
cmps
xchg
mov
pop
ficom
cdq
mov
imul
pop
sub
jmp
adc
div
repnz
les
mov
dec
adc
push
and
ret
pop
jecxz
add
(bad)
out
sub
daa
jg
(bad)
scas
stos
jge
movs
push
(bad)
fbld
mov
inc
and
add
push
imul
fs
jb
sbb
sar
dec
sub
fidivr
add
dec
movs
cmc
les
call
call
scas
mov
adc
imul
sub
cld
xchg
push
repz
and
push
aad
pop
xchg
sub
pop
jle
popf
cs
test
fld
dec
jl
out
gs
mov
inc
dec
into
in
scas
scas
dec
or
mov
pop
pushf
pop
out
xchg
cmp
or
push
pop
(bad)
mov
aaa
jmp
push
jmp
jmp
push
enter
iret
inc
mov
push
xchg
cmps
dec
div
inc
xchg
retf
dec
xchg
pop
xchg
fisub
jg
into
mov
xchg
scas
cmp
lock
into
mov
or
js
mov
xchg
push
rol
jecxz
ds
jp
add
adc
dec
sbb
mov
xlat
dec
addr16
repz
cmp
ins
enter
mov
nop
add
shl
xor
outs
push
cli
pop
jmp
imul
xchg
xor
inc
movs
repz
adc
add
pushf
lods
xor
shr
pop
xor
shl
add
push
mov
xor
add
sub
sub
dec
fcmovnu
cmps
or
push
adc
loopne
mov
pop
adc
rol
mov
dec
push
xchg
mov
fisttp
sub
dec
ins
xlat
jnp
sahf
fnstenv
div
daa
pop
icebp
nop
add
js
outs
mov
ret
xchg
jbe
add
(bad)
repnz
cmp
neg
test
call
retf
xlat
jmp
pop
add
push
stc
push
jae
or
mov
or
sti
fmul
dec
dec
xor
jp
add
mov
mov
mov
cmp
ds
xchg
popa
xchg
int3
hlt
add
mov
pop
add
lea
aaa
ins
push
call
cmps
add
pop
add
adc
add
daa
jbe
lea
push
jae
dec
dec
pop
or
idiv
jns
arpl
mov
mov
cmp
jge
dec
cmp
sbb
rcr
and
xchg
inc
call
outs
lods
sub
cmp
nop
(bad)
ins
mov
scas
jle
sub
sbb
js
mov
sbb
cmovg
int
dec
jp
jl
enter
jno
mov
mov
js
mov
pop
pop
fst
data16
inc
sbb
mov
and
xlat
test
inc
push
jo
loope
sub
ins
add
repz
mov
ja
sbb
jp
cs
rol
cmp
push
adc
lea
xor
sbb
add
dec
sub
lods
xchg
fcomp
shl
sub
pop
mov
adc
mov
add
jmp
(bad)
ins
dec
hlt
and
stos
nop
scas
cmc
and
fild
stc
jns
test
test
mov
xchg
or
mov
inc
dec
xor
push
out
and
(bad)
int3
scas
fidiv
sbb
mov
pop
mov
add
rcr
adc
gs
les
pusha
dec
shl
addr16
ja
inc
jl
(bad)
in
adc
inc
push
jb
fadd
mov
push
xchg
sbb
stos
out
xor
xor
shl
xchg
jmp
and
add
mov
and
inc
hlt
and
adc
lahf
or
call
add
cmc
push
dec
mov
mov
mov
mov
adc
es
sub
int3
mov
dec
fisubr
jne
jp
shl
xor
xchg
in
mov
mov
cdq
mov
shr
out
xchg
jl
popa
rcr
data16
mov
ins
or
in
sbb
int3
mov
dec
int
mov
mov
xor
movs
iret
cmp
dec
popa
pop
lea
in
xchg
pop
push
pop
js
cli
(bad)
daa
fwait
ins
or
mov
sbb
sbb
je
les
push
mov
cmp
mov
mov
lds
inc
adc
and
clc
dec
out
mov
jg
cmp
jp
test
pop
retf
mov
ins
jle
push
mov
push
sub
push
xor
fadd
outs
mov
sbb
or
dec
push
dec
aaa
das
jmp
mov
pusha
scas
(bad)
or
add
jg
loopne
fxch
fucomip
push
les
adc
ror
mov
sub
push
cmp
je
jl
dec
inc
or
pop
jmp
adc
inc
ret
fcomip
int3
sbb
or
out
mov
add
stos
pusha
and
inc
cdq
mov
jg
cmp
ret
jns
mov
sub
xor
mov
push
retf
cmp
cmp
dec
mov
xlat
mov
out
ret
loope
add
xchg
jmp
sub
das
psrlq
daa
in
in
jae
add
clc
ja
adc
loop
hlt
lea
test
shr
push
adc
shl
mov
cli
movlps
into
sbb
and
clc
mov
out
popa
sub
stc
add
mov
jnp
jmp
inc
sub
lahf
retf
adc
bound
std
test
icebp
scas
jge
pop
movs
mov
and
adc
fdivr
mov
xchg
stos
sub
pop
lods
or
mov
or
fild
ds
retf
lods
or
or
movs
push
inc
and
add
pusha
pcmpeqd
or
or
icebp
mov
outs
add
jle
cmp
mov
sbb
shr
inc
scas
dec
push
sub
fs
and
sub
jl
aam
cmps
pop
rcl
call
jecxz
int
and
aam
and
dec
mov
or
jmp
jp
js
outs
jl
xor
xor
fcomp
imul
mov
aad
mul
jecxz
ffreep
mov
cmps
mov
mov
lds
jbe
inc
lock
test
xchg
jae
clc
jae
pop
adc
shl
(bad)
fwait
xchg
cwde
sbb
scas
or
ret
xchg
lods
sub
int3
mov
cdq
xchg
jg
and
js
sbb
test
jge
test
aas
bound
rcl
mov
mov
pop
iret
int3
push
sbb
mov
leave
bound
pop
movs
jo
std
xor
or
pop
int
rcl
cmc
sbb
stc
sub
pop
bswap
test
xchg
cdq
and
sbb
or
xchg
aam
push
ror
ret
dec
mov
mov
pop
jp
into
jno
cmp
in
jno
inc
cli
cmp
and
dec
adc
test
inc
loopne
dec
cld
or
(bad)
sbb
sahf
jo
aam
or
imul
mov
mul
in
out
fistp
cmp
lods
inc
mov
mov
fs
pushf
data16
int
out
cmp
inc
dec
int
ret
inc
stos
sub
dec
mov
cld
inc
or
mov
jmp
xor
mov
neg
fist
pop
mov
addr16
(bad)
enter
xchg
(bad)
dec
inc
mov
out
jle
adc
mov
imul
xchg
jmp
outs
test
xor
clc
adc
iret
sahf
dec
and
shl
push
rcl
fistp
mov
xchg
(bad)
shr
sbb
fdivr
inc
jmp
push
xchg
test
mov
cmp
push
ret
stos
test
jp
pop
sbb
pop
jle
fst
div
xchg
icebp
dec
repnz
and
(bad)
adc
or
hlt
dec
ret
lock
pop
cld
jle
or
ret
sahf
dec
push
adc
cmps
test
push
ds
fsin
test
leave
call
cs
lock
pop
or
mov
es
(bad)
mov
mov
cwde
stos
cmp
ret
retf
shl
push
add
and
jns
and
inc
ret
lds
ins
neg
and
popa
dec
dec
adc
adc
(bad)
push
sub
imul
cmc
push
sbb
popa
cld
call
mov
pop
test
cs
mov
pop
sub
fs
arpl
xchg
pop
in
out
test
mov
push
sahf
cmp
les
mov
inc
imul
scas
inc
fwait
test
pushf
jo
pop
lock
pop
inc
cdq
push
mov
sbb
inc
enter
jg
mov
add
cmp
xchg
pop
or
sbb
je
add
jg
scas
repz
cmps
popa
xor
sbb
mov
and
ret
pop
and
cmps
rcl
and
mov
jmp
xchg
sbb
push
(bad)
sub
xchg
sbb
mov
add
inc
loop
cld
sbb
add
xchg
inc
(bad)
aad
push
sub
pop
cmp
add
les
xchg
(bad)
imul
xchg
test
xchg
jmp
or
push
movs
inc
ror
(bad)
cmps
(bad)
es
mov
xlat
add
xchg
sub
les
lds
dec
das
std
imul
ja
xchg
(bad)
into
scas
xor
call
or
push
jge
das
mov
mov
mov
aaa
dec
fidivr
fs
jae
in
cmp
pop
icebp
sbb
mov
xchg
fimul
fs
mov
mov
idiv
rcr
stc
mov
hlt
js
and
popf
cs
(bad)
pop
mov
in
out
sbb
repnz
dec
jbe
es
lock
cli
mov
iret
mov
mov
aam
and
or
mov
imul
mov
xor
mov
cmp
add
inc
sbb
retf
shr
cs
outs
sbb
xchg
icebp
cwde
in
mov
push
popa
loope
and
sub
popw
ret
movs
pop
cmps
out
push
cmc
ror
aad
das
int
jae
fnsave
jmp
out
loop
xor
mov
pop
loope
adc
shl
pop
adc
iret
cmp
daa
lock
ror
push
cmp
jecxz
ror
mov
scas
fst
cld
xchg
jno
mov
retf
jmp
and
cmp
mov
retf
sahf
retf
aam
pop
test
or
in
lahf
add
rcr
mov
push
aad
sahf
xchg
cmp
jmp
xchg
jno
sbb
adc
(bad)
leave
adc
jne
pop
pop
sahf
and
sub
aas
daa
les
pop
xchg
jns
jo
jl
or
ficomp
inc
movs
dec
cmp
pop
push
aaa
sar
sub
sbb
retf
cli
scas
int
in
les
add
cli
xchg
fs
mov
fimul
mov
in
retf
pop
mov
fwait
ret
sbb
pop
lock
add
xchg
cmp
sub
sbb
jle
stos
xchg
cmp
jmp
das
fadd
inc
xor
and
push
sahf
cmp
loopne
cmc
inc
scas
xchg
les
or
leave
int3
jle
mov
nop
fnstenv
mov
scas
sbb
je
outs
sbb
fisub
test
ret
mov
add
jno
mov
add
adc
push
mov
mov
lahf
mov
bound
and
outs
cs
jl
and
adc
or
pop
es
jns
(bad)
adc
cmp
lahf
mov
lds
add
push
push
(bad)
sbb
(bad)
pop
mov
movs
add
pop
sub
jge
mov
test
out
aad
add
pop
aam
mov
aas
adc
cmp
add
xchg
mov
or
mov
call
sub
dec
add
xchg
inc
cs
fdiv
test
out
in
bound
shl
rcr
and
bound
mov
pop
scas
ret
jmp
push
outs
xlat
fwait
jae
test
or
fs
adc
and
das
ror
pushf
mov
or
fisttp
daa
cmps
(bad)
leave
jmp
bound
dec
cld
dec
cmp
repz
mov
leave
outs
icebp
popf
pusha
cmp
outs
inc
lods
cdq
imul
std
popf
fs
dec
dec
xchg
or
fnstenv
stc
push
pop
or
mov
push
fnstenv
mov
or
cmps
mov
arpl
xor
cs
mov
xchg
adc
mov
xchg
scas
imul
mov
cmp
jb
sbb
and
xor
or
call
ror
mov
pop
int
out
fdivrp
inc
push
int
ret
pop
bound
xchg
das
dec
and
mov
movs
dec
shl
add
xor
pop
enter
inc
inc
iret
sbb
pop
xor
mov
sub
adc
and
or
or
test
lods
xchg
push
dec
cmps
mov
and
mov
mov
cmp
pop
inc
sub
ins
add
push
in
cmp
pop
(bad)
jnp
adc
push
or
jbe
(bad)
adc
(bad)
push
icebp
(bad)
test
sbb
ins
inc
xchg
stos
jecxz
cmp
dec
lods
cdq
shr
lahf
push
cmp
jmp
sbb
aad
sbb
cmps
add
loopne
aad
fsub
adc
fcomp
cmp
dec
cmps
xchg
and
stos
xor
es
lock
bound
mov
or
outs
leave
ss
pop
call
jo
adc
push
add
pusha
push
sub
test
xchg
and
rol
and
push
inc
fs
push
adc
lods
(bad)
jnp
retf
shr
pop
pop
cmovno
scas
retf
jecxz
push
fs
push
push
scas
loope
jb
and
loopne
sub
test
and
push
push
add
cmps
xor
add
xchg
jno
xchg
popa
dec
or
loop
enter
sbb
imul
out
ins
out
mov
enter
js
pand
addr16
jl
test
xchg
scas
xor
mov
or
mov
movs
inc
daa
lea
pop
sub
and
fld
out
repz
cmp
mov
not
je
jge
mov
push
ins
hlt
jno
popa
mov
cmps
jbe
push
stc
adc
and
push
or
dec
xor
or
sub
jp
ins
pop
lock
addr16
pop
inc
mov
stos
or
xchg
mov
dec
neg
ja
sahf
out
lea
sti
repz
je
ins
mov
and
push
lods
sbb
inc
cwde
and
push
sub
mov
or
rol
ds
mov
es
mov
mov
jp
mov
aas
inc
mov
pop
cmp
add
cmp
inc
(bad)
out
push
mov
mov
push
mov
imul
mov
jae
movs
push
stc
clc
fst
inc
dec
popf
out
(bad)
mov
test
fild
cmp
sub
adc
jle
cmp
or
into
inc
mov
dec
shr
cld
push
popf
stc
outs
and
aam
and
fstp
mov
inc
pop
int3
fbld
add
jbe
int
popa
pop
add
and
cwde
ins
in
mov
push
icebp
sbb
(bad)
in
sub
lds
gs
inc
test
push
and
push
scas
in
add
and
outs
mov
xchg
sub
into
cdq
repz
pop
push
xchg
int3
lods
cs
xchg
add
test
js
push
jb
mov
gs
xchg
(bad)
mov
gs
int3
ret
mov
jns
sub
cmp
jnp
or
sti
lods
ins
xor
cmps
test
popf
imul
mov
pushf
or
push
sub
loope
mov
lods
mov
shr
movs
fs
dec
push
in
add
shr
jg
outs
jne
int3
popa
fist
outs
xchg
xor
aam
mov
add
retf
and
inc
clc
aam
or
xchg
sub
scas
cmps
out
or
(bad)
xchg
dec
xchg
inc
xor
in
jmp
aaa
mov
mov
inc
sub
xchg
fnstcw
cmp
or
rol
pop
pop
imul
test
stos
ficom
xchg
push
push
push
or
mov
(bad)
retf
xor
cdq
frstor
cmps
jp
mov
sub
lods
arpl
mov
ret
mov
scas
sbb
ins
(bad)
mov
mov
sbb
pop
mov
add
push
in
xor
test
cmp
retf
pushf
sbb
jo
sti
call
jnp
push
movs
cmp
stos
or
clc
inc
rol
in
dec
neg
mov
test
mov
push
leave
out
and
and
and
(bad)
push
jne
jl
mov
shl
popa
ror
adc
clc
aad
fxch
hlt
clc
cmp
pop
pushf
push
test
xchg
push
sbb
cmp
or
xor
or
add
mul
(bad)
leave
in
aaa
gs
cmp
lds
stos
adc
sbb
xchg
dec
cmp
and
cmc
movs
pop
or
inc
xchg
or
mov
pushf
fdivr
ret
cli
push
(bad)
rcr
and
sti
lock
jge
(bad)
mov
inc
mov
pop
pop
mov
sub
jg
ret
test
mov
xchg
(bad)
adc
repnz
xchg
adc
add
push
inc
movs
aad
mov
cmp
sbb
add
call
pop
xlat
retf
call
or
push
rcr
inc
and
jmp
popf
add
aam
pop
and
sahf
sub
movs
push
mov
push
stos
mov
xor
scas
lea
mov
mov
mov
jae
dec
mov
xchg
jmp
jle
cmc
popa
and
imul
icebp
xchg
repnz
jno
dec
add
cwde
mov
cmc
lds
mov
add
loop
add
pop
or
cs
mov
jecxz
js
jo
mov
lods
fs
push
push
mov
push
push
push
push
pop
xchg
mov
test
pop
fwait
cmp
mov
jbe
cmc
aas
sahf
cmp
pop
(bad)
imul
addr16
mov
retf
xor
iret
xchg
mov
jmp
js
dec
retf
xchg
push
push
fwait
gs
fs
fld
dec
push
imul
xchg
aas
stos
adc
shr
pop
dec
sub
adc
call
adc
das
popa
push
imul
jg
adc
xchg
fistp
jecxz
clc
sahf
mov
inc
mov
sub
sub
hlt
dec
aas
loopne
dec
ret
lods
jge
scas
sbb
cmp
cmp
sahf
push
cmp
dec
or
out
gs
cmp
js
xchg
dec
ins
ins
int3
xchg
in
test
data16
inc
out
cmp
fnsave
sub
mov
inc
outs
inc
imul
dec
aaa
in
mov
xchg
mov
pop
jl
and
xchg
std
rcl
add
or
mov
jmp
dec
das
(bad)
int
daa
repnz
fbstp
jge
pop
jmp
mov
xchg
mov
or
and
sub
scas
les
adc
mov
dec
pop
imul
aam
xlat
adc
scas
mov
push
lock
hlt
xor
aas
cli
add
fisubr
mov
push
call
or
into
mov
or
ds
frstor
test
adc
pop
jbe
push
cmp
pop
mov
not
(bad)
je
inc
mov
sahf
pop
mov
push
mov
imul
adc
aas
mov
shl
into
cld
xor
cli
les
pop
retf
les
adc
es
popf
cwde
and
mov
stos
and
inc
out
ja
cmps
cmp
push
add
hlt
adc
aas
push
out
xchg
mov
movs
jne
mov
adc
mov
or
cmp
test
jmp
pop
xchg
add
in
data16
inc
cmp
adc
movs
jp
test
adc
xor
inc
aam
dec
mov
pop
in
mov
gs
repz
sbb
or
inc
mov
dec
stos
push
stos
push
xlat
mov
inc
ss
sahf
scas
fs
scas
push
pusha
int3
cmp
add
in
push
ja
or
cmps
xor
xor
pop
movlps
inc
retf
movs
jbe
call
shr
in
ins
es
outs
mov
push
fcom
jmp
sbb
(bad)
stos
jbe
out
xchg
jo
jle
stc
sub
repnz
not
popf
out
cmp
dec
outs
aad
add
cmp
add
push
movs
shr
add
pop
repz
dec
pop
mov
stos
fadd
mov
mov
test
or
mov
push
push
and
fsubp
sahf
xor
sbb
mov
frstor
cld
or
out
lods
sti
(bad)
int3
retf
sahf
mov
mov
wrmsr
sub
fistp
or
mov
pop
inc
jmp
fld
retf
xor
mov
cmp
xchg
popf
stos
jne
pop
call
je
or
call
sub
mov
inc
push
daa
(bad)
aas
sub
xchg
rcr
les
adc
xchg
out
stos
aas
ins
adc
xchg
mov
mov
sub
lahf
push
jmp
pusha
and
xor
push
xchg
cwde
push
imul
lock
in
call
sbb
sar
repnz
nop
cli
xchg
mov
cmc
jg
mov
mov
and
xchg
adc
xchg
jne
xlat
pop
leave
cwde
xor
addr16
ins
adc
js
xchg
jp
add
daa
inc
dec
clc
ins
jp
mov
jnp
lea
mov
and
out
stc
dec
clc
jo
scas
sbb
aas
mov
sub
dec
es
push
lods
inc
sub
push
or
cmc
push
ror
popf
mov
imul
inc
fdiv
xchg
dec
sti
mov
pop
loopne
sti
cmc
loopne
in
or
fwait
iret
cmps
movs
adc
outs
cmp
adc
or
inc
mov
add
nop
jge
std
pop
jl
pop
jmp
jmp
push
inc
inc
inc
adc
ror
mov
in
(bad)
mov
repnz
(bad)
mov
xchg
hlt
mov
cmp
lods
call
data16
mov
mov
outs
fimul
pop
push
pop
stos
adc
aad
popf
sub
xchg
add
or
fist
loop
cs
iret
loop
jecxz
jmp
repnz
mov
mov
push
imul
cmc
dec
call
cmps
repz
in
mov
mov
push
lahf
sub
pop
push
push
popf
cs
pop
sbb
aam
div
sbb
clc
data16
dec
lods
xchg
in
ret
jmp
inc
jmp
popf
push
push
fucom
cmps
cmp
outs
outs
cmp
(bad)
mov
fcomp
adc
in
ja
or
jo
jp
ror
unpcklps
leave
ss
into
jecxz
bound
sub
push
mov
push
call
scas
(bad)
lock
call
jo
data16
xchg
or
adc
sbb
(bad)
pop
mov
jmp
les
xor
ret
mov
fs
jg
push
add
mov
lahf
mov
fs
in
cmps
rcr
paddd
out
clc
push
or
mov
(bad)
pop
and
imul
mov
mov
fadd
adc
fs
cmc
sti
(bad)
mov
xchg
ins
mov
repnz
mov
mov
lock
push
adc
leave
jmp
scas
shl
mov
mov
pop
arpl
add
or
and
xchg
push
mov
push
mov
dec
cmp
test
lods
test
mov
xchg
dec
rcl
idiv
mov
int3
jmp
mov
xor
outs
sub
dec
mov
dec
imul
dec
fistp
push
fld
leave
xchg
mov
pop
or
in
scas
hlt
(bad)
test
arpl
dec
popf
push
mov
jmp
pop
cdq
ins
xor
xchg
lds
std
icebp
jns
popa
repnz
shr
into
or
ret
cmp
arpl
sbb
pop
aas
xchg
stos
sbb
inc
js
std
xor
mov
cdq
and
lahf
stos
xchg
xchg
aad
mov
cld
call
pop
jo
sbb
fwait
aad
xor
pop
push
enter
jge
adc
push
push
(bad)
sub
dec
enter
jmp
xchg
jae
cmps
das
mov
arpl
cdq
sbb
retf
or
add
and
in
mov
out
jae
bound
imul
jp
imul
add
jl
movs
ins
(bad)
hlt
xlat
jmp
in
mov
das
mov
out
(bad)
int
dec
data16
arpl
xchg
retf
mov
lea
jle
les
outs
pop
add
test
jo
out
jmp
popa
std
scas
sti
clc
and
loopne
sar
es
mov
adc
je
jecxz
pop
inc
xchg
scas
clc
arpl
jge
sbb
fnstenv
retf
daa
pushf
pop
ret
sbb
fistp
in
sub
adc
js
int3
push
xor
add
xchg
cwde
jge
jecxz
aaa
dec
sar
es
test
mov
aas
inc
push
in
repnz
pop
fdiv
and
dec
mov
neg
cld
xchg
lods
sbb
mov
sti
sbb
mov
sub
push
sbb
mov
push
aam
test
xor
les
mov
cmp
test
mov
out
lods
mov
je
pop
stc
popf
inc
sub
add
add
push
es
add
mov
mul
rcr
mov
mov
adc
jmp
and
pushf
inc
in
xchg
push
mov
lods
arpl
fst
out
add
in
call
sahf
xor
popf
in
cld
adc
pop
inc
inc
mov
or
jb
lahf
add
call
xor
pop
popa
jae
cmp
push
data16
pop
or
or
shl
mov
lock
sar
aad
stos
sbb
mov
xchg
sbb
jbe
dec
test
loop
sar
idiv
pop
mov
mov
std
push
adc
and
jbe
pop
and
stc
sub
or
sbb
or
test
mov
push
(bad)
(bad)
cmp
retf
mov
dec
test
into
out
and
mov
js
inc
push
call
xchg
sar
mov
enter
sar
cld
xchg
daa
fisttp
iret
xchg
dec
lods
sub
mov
xor
and
jno
cdq
ret
mov
pop
inc
sti
mov
inc
mov
loop
inc
xlat
stos
xor
call
cmps
mov
cdq
pop
fwait
or
sbb
pop
dec
pop
adc
mov
add
cmp
or
mov
mov
repnz
outs
xchg
test
(bad)
(bad)
pop
or
dec
xor
dec
clc
jno
xor
retf
xor
adc
cli
bnd
mov
xor
push
fild
call
sbb
pusha
dec
fisttp
std
loop
push
scas
(bad)
sti
repnz
push
test
ins
add
test
mov
lds
xchg
out
and
mov
fistp
xchg
into
pop
mov
les
aas
xchg
popf
jmp
adc
loope
mov
mov
pushf
out
and
in
std
mov
ins
mov
sub
mov
xchg
data16
dec
push
inc
rol
pop
inc
jmp
xchg
rol
jmp
dec
movs
xor
test
fucomp
pop
repnz
jecxz
push
and
in
std
ins
cmp
ret
or
sar
xor
cmp
xchg
lahf
cmp
mov
nop
mov
jmp
mov
gs
into
cmps
or
push
mov
or
cmp
test
pop
std
(bad)
retf
cli
lock
int3
mov
out
in
jle
mov
ror
fimul
ds
xchg
mov
mov
push
jo
inc
pusha
inc
xor
xlat
jb
dec
mov
mov
sub
sub
(bad)
push
pusha
test
fdivrp
ins
sub
xchg
outs
into
jmp
cmp
mov
fadd
sbb
lock
xchg
popa
dec
cmp
dec
popf
jg
das
xor
lock
push
xor
lods
jecxz
stc
xchg
xchg
out
jle
cmp
mov
retf
push
rcl
push
stos
push
xchg
jle
imul
loop
jle
push
repnz
inc
inc
xor
fmul
rcl
cdq
aaa
inc
les
repnz
mov
std
fldcw
out
fistp
inc
(bad)
addr16
dec
inc
pop
jno
test
add
push
push
in
jmp
outs
xchg
xor
and
mov
xchg
xor
cwde
cmps
cmp
pop
inc
imul
cwde
jno
scas
retf
out
sub
jmp
or
or
and
aas
cmps
ja
and
xlat
xchg
stos
scas
mov
aaa
xchg
jp
int3
ins
push
ins
dec
xor
fisttp
cmp
pop
lods
push
jo
call
lock
aas
aad
sub
xor
retf
call
gs
in
cld
fnstsw
loopne
ret
push
mov
mov
xor
mov
data16
pop
cdq
outs
in
call
es
sub
cmp
sbb
pop
jge
jb
cmp
xor
daa
scas
cmp
and
push
imul
dec
fld
push
repnz
xchg
sub
jne
jns
jne
cwde
loopne
pop
sub
das
ds
ret
sbb
rcl
adc
sbb
pop
stc
gs
dec
iret
bound
mov
and
shr
jae
mov
sbb
inc
hlt
jp
add
fst
or
pusha
bound
scas
sub
int
sbb
sbb
lahf
in
xlat
int
mov
fcmove
cmc
pop
repz
fldenv
xchg
outs
imul
or
jp
pop
loope
(bad)
xchg
out
in
jbe
(bad)
jb
int3
jne
push
cmc
dec
or
xor
shl
inc
js
xchg
outs
sbb
sub
pop
js
add
stos
aaa
jp
add
fs
mov
sar
fisttp
push
mov
stos
and
pop
lods
outs
push
repnz
add
xchg
mov
pop
pop
sar
in
xchg
scas
inc
sbb
loop
xchg
rcr
into
cwde
dec
push
cmp
repnz
xchg
xchg
fimul
js
or
into
pop
cld
mov
adc
xchg
movs
fmul
cmps
ds
aaa
call
and
cli
jb
pop
xor
(bad)
or
push
dec
scas
push
pop
stos
add
enter
int
jg
movs
dec
pop
jo
jae
repz
xchg
cmps
(bad)
xlat
shl
inc
xchg
test
mov
mov
jmp
mov
outs
popa
push
in
or
mov
test
cld
addr16
push
(bad)
outs
mov
push
xlat
cmps
xlat
outs
xchg
mov
jp
push
xchg
test
jecxz
pop
mov
xchg
cmp
push
cld
mov
push
jne
xor
pop
sbb
cmp
push
cdq
inc
aad
inc
xchg
pop
add
repnz
sar
xchg
gs
cmp
jmp
jg
mov
movs
cmps
xor
mov
and
pusha
adc
(bad)
xor
jecxz
add
retf
rcl
xor
xor
or
dec
push
gs
xchg
adc
pop
fbstp
xor
cmp
ror
repz
mov
shl
adc
and
cmp
add
adc
xchg
mov
cmp
xor
lods
sbb
jns
or
jle
sub
hlt
pop
inc
cmp
or
jns
in
mov
sbb
pop
sbb
dec
lea
adc
les
or
les
clc
jecxz
xor
add
sbb
jnp
mov
xlat
jne
add
imul
icebp
add
and
(bad)
ss
mov
inc
scas
dec
add
mov
mov
lock
and
inc
jo
repnz
iret
xchg
sub
gs
(bad)
xor
cmps
shr
retf
mov
out
(bad)
imul
or
or
jp
and
gs
(bad)
out
inc
push
test
inc
int
out
sub
(bad)
push
add
ja
pop
sub
mov
mov
and
pop
sub
xor
or
or
cmp
loop
lods
cwde
test
inc
ret
jae
jne
mov
fsubr
fstp
das
popf
push
adc
scas
jmp
inc
(bad)
mov
xlat
(bad)
fsubr
mov
mov
int
cmovp
stos
inc
add
push
mov
mov
retf
stc
dec
(bad)
inc
ficomp
nop
xor
dec
ror
repnz
ins
data16
mov
ds
push
aas
jbe
dec
out
jnp
out
sti
xor
jecxz
cli
std
repnz
gs
int
into
xlat
mov
cmp
add
iret
jmp
sub
in
ins
aas
call
jbe
in
or
loopne
cmps
jle
jge
lock
sbb
cmps
call
or
dec
cmp
xchg
sbb
pushf
xchg
pop
sbb
aad
iret
jl
mov
cmp
lock
inc
jae
jo
repz
std
sub
cmps
xor
jo
(bad)
nop
test
jmp
in
out
idiv
pusha
adc
cmp
adc
out
push
rol
repz
jno
push
xchg
xor
push
sub
ins
js
out
fistp
nop
cmp
bound
push
xchg
(bad)
mov
movlps
dec
pop
ret
fdivr
cmps
(bad)
ds
sbb
push
mov
test
(bad)
sti
xor
es
rcr
pop
(bad)
xor
mov
out
fxtract
pop
and
(bad)
test
push
mov
and
cmp
pop
mov
mov
test
jo
adc
ret
mov
fisttp
pop
mov
ret
cmps
cwde
cs
push
das
sbb
icebp
fistp
add
cli
inc
jo
adc
sbb
cmp
shr
loop
ret
mov
fisubr
repnz
and
fist
jae
push
dec
div
mov
enter
pop
rdpmc
lods
stos
mov
outs
inc
sbb
pop
dec
lods
xor
xor
mov
aaa
jnp
out
add
lock
mov
shr
neg
add
xor
mov
scas
add
and
call
aaa
inc
ja
push
pop
stc
jns
mov
ins
xor
sub
sbb
add
loopne
clc
inc
ficomp
movs
ret
jne
mov
aad
aam
daa
std
sahf
loop
add
(bad)
jae
adc
cmps
cmp
dec
mov
in
not
call
es
and
(bad)
sbb
xor
scas
lea
push
lds
(bad)
xchg
mov
mov
shr
mov
fld
push
retf
(bad)
sub
mov
pop
add
adc
inc
pop
call
out
add
xadd
cmp
push
xchg
sub
lock
or
imul
push
mov
inc
mov
cmps
push
mov
into
nop
mov
jmp
add
jb
pcmpgtd
out
sub
jo
mov
mov
in
mov
ja
ins
in
pop
clc
dec
xchg
jae
les
cli
out
aas
pop
loopne
add
or
add
repnz
out
xchg
and
xor
and
data16
jmp
scas
dec
test
sub
xor
ror
repz
fstp
ret
mov
fcom
stc
movs
xchg
scas
pop
and
add
add
(bad)
mov
xchg
ds
adc
mov
fnstcw
daa
mov
cmp
pushf
(bad)
mov
mov
test
aaa
jno
xchg
inc
das
adc
inc
cli
lds
mov
or
or
das
ss
push
or
(bad)
mov
jno
xlat
gs
mov
cs
fdivr
inc
inc
iret
push
inc
cs
shr
icebp
lods
push
and
std
or
push
sti
sub
and
adc
bound
sbb
mov
outs
or
push
int
xlat
sub
lods
jmp
adc
xor
out
pusha
ss
jge
call
xchg
ret
jno
enter
hlt
fwait
sbb
sbb
mov
loopne
xchg
dec
ja
cmp
loope
sahf
inc
test
push
or
pop
pop
push
out
mov
and
pop
jnp
cmp
dec
push
test
lds
ret
sub
ror
cmps
movs
mov
and
je
arpl
jecxz
movs
fisubr
das
mov
and
fst
mov
pop
int3
test
dec
ins
call
out
adc
pusha
cmc
stos
movs
mov
(bad)
adc
mov
sub
mov
dec
pop
pop
(bad)
xchg
dec
bound
push
xchg
add
and
fadd
mov
xchg
sti
dec
cs
add
and
mov
sub
jo
ins
jp
neg
mov
inc
push
or
and
add
mov
dec
xchg
ja
fidiv
fwait
std
pop
or
xchg
pop
mov
push
clc
popa
sbb
add
cmc
lock
add
int
(bad)
mov
(bad)
cs
sbb
pop
fidivr
hlt
pop
mov
in
adc
push
mov
repnz
cmp
out
in
xor
sub
popf
and
call
imul
or
cs
sbb
pop
out
or
(bad)
xchg
gs
pop
mov
mov
mov
outs
mov
sbb
push
mov
pop
push
inc
out
sbb
mov
mov
cmp
mov
mov
pop
and
lock
mov
adc
xchg
int3
dec
or
imul
mov
in
test
bswap
nop
aam
test
frstor
sar
mov
mov
dec
jecxz
gs
sbb
pop
sbb
pop
pusha
xchg
outs
mov
je
adc
xchg
hlt
mov
js
pop
loopne
inc
retf
aas
or
das
push
repnz
dec
push
push
test
movs
int3
pop
add
xlat
sbb
or
and
push
mov
mov
scas
data16
test
fmul
(bad)
lock
push
leave
imul
fdivr
add
(bad)
push
cwde
push
mov
add
call
jmp
inc
jno
jne
js
not
scas
or
xchg
lods
data16
dec
cmp
std
imul
pushf
repnz
lea
mov
sar
push
mov
rcr
cs
pop
cdq
jns
cmps
inc
lds
loop
sub
outs
mov
cmp
movs
inc
cmp
cmp
pop
xchg
mov
lock
jns
(bad)
les
xchg
pop
push
push
loope
and
xchg
jmp
pop
into
jmp
add
xor
and
cmp
leave
stos
push
sbb
xor
cmp
pop
(bad)
nop
retf
mov
js
rcl
jbe
cmp
add
add
push
cdq
out
sub
aas
aad
and
and
jnp
and
aas
sub
aas
cmc
ja
retf
mov
and
sub
les
sub
imul
xor
cmps
dec
mov
fs
(bad)
add
mov
sbb
mov
retf
inc
lea
cs
das
add
into
fstp
push
mul
(bad)
sub
jae
mov
adc
cmp
mov
(bad)
ds
xlat
jmp
rol
mov
push
fdiv
jno
cmps
cmc
mov
mov
je
dec
sub
mov
jns
cmp
loop
xchg
ret
int3
rol
ror
xor
push
or
mov
scas
mov
sbb
lods
adc
cmp
in
retf
mov
mov
push
mov
sub
jmp
(bad)
jnp
imul
push
shl
rcl
sbb
xor
fs
mov
mov
dec
test
int3
inc
xchg
xor
or
push
xchg
mov
rcl
outs
sub
jmp
add
dec
jns
xchg
mov
sub
ds
push
outs
and
dec
jae
outs
push
mov
or
rcl
inc
xchg
cmovs
scas
ja
sbb
jae
push
ret
ret
aas
mov
test
in
fstp
xchg
fistp
call
dec
xchg
sub
in
test
mov
and
cmp
(bad)
mov
pop
inc
lods
mov
xchg
mov
hlt
ins
lea
scas
mov
mov
pop
pushf
es
out
outs
cmp
cmp
cs
int3
movs
scas
mov
push
(bad)
adc
cmp
xor
xor
adc
mov
sub
cmp
cmp
pop
aad
jo
sbb
rcl
pop
inc
in
dec
mov
dec
fcom
mov
test
inc
call
push
sbb
xchg
adc
mov
(bad)
pop
mov
(bad)
scas
ror
pop
scas
cdq
aam
cwde
or
mov
clc
jnp
sbb
mov
gs
aaa
adc
sub
jp
ror
pop
stos
cli
mov
call
fst
pop
shr
in
push
add
or
push
rol
popf
(bad)
retf
add
addr16
pop
in
into
dec
add
jmp
test
in
pop
retf
mov
pop
ds
pop
in
mov
cli
push
pop
xor
mov
adc
add
jne
mov
pop
int
inc
add
ja
xor
dec
push
pop
(bad)
test
leave
cmp
aam
jbe
stc
push
inc
cmc
into
sub
outs
jns
test
js
sbb
dec
sahf
in
ds
jo
int
xor
test
mov
(bad)
sub
push
out
stos
jne
cmps
jno
add
jecxz
and
(bad)
and
in
mov
fld
cdq
xor
adc
loope
ret
pusha
adc
test
sti
jle
sub
pop
jno
mov
iret
pushf
jne
dec
rcl
jg
dec
pop
das
mov
pop
cmp
retf
test
retf
icebp
xor
cwde
mov
cli
loope
sahf
aas
ins
and
leave
nop
mov
add
icebp
add
jns
test
mov
jl
cmps
popf
inc
repz
pushw
cmp
mov
cli
and
stos
xchg
neg
ja
cmp
pop
push
xor
push
mov
movs
add
mov
(bad)
and
fiadd
fadd
ins
nop
pop
stos
push
test
jmp
dec
aas
jg
stc
shr
jge
ins
jle
sbb
(bad)
mov
mov
mov
test
and
adc
shl
push
outs
fiadd
je
inc
imul
inc
adc
fdiv
loopne
or
cld
loope
loope
mov
ss
adc
and
loope
pop
cmp
repz
mov
cdq
sbb
add
lods
adc
jle
out
mov
adc
jno
sbb
pop
and
cmp
loopne
les
sti
cmp
cdq
and
inc
pop
push
push
push
jno
mov
and
test
push
xchg
(bad)
and
xchg
jle
rcl
sahf
stos
fldcw
outs
dec
or
das
je
pop
or
leave
dec
mov
stc
imul
std
add
xor
test
sahf
ror
jbe
pop
cmp
retf
or
sub
or
mov
jnp
push
xor
popa
loopne
xor
and
shl
push
add
fadd
sbb
cmp
pop
mov
inc
pop
fdivp
nop
cmp
add
mov
or
xor
mov
and
mov
sub
test
xor
stos
sub
mov
dec
sub
jae
stc
rcl
retf
ds
or
ror
loope
dec
pop
loop
ja
repnz
test
xchg
dec
enter
sbb
pop
outs
add
cmps
imul
jp
lds
cmps
movs
dec
push
and
jle
shr
(bad)
xchg
push
(bad)
mov
push
in
iret
mov
mov
xor
ja
mov
in
mov
es
mov
jmp
push
push
adc
jl
in
inc
sahf
(bad)
retf
mov
cmps
fcom
test
cdq
div
and
mov
aam
popf
cmp
int3
dec
ins
adc
and
cli
lahf
adc
mov
cmp
push
mov
bound
enter
out
sub
call
add
outs
xor
add
mov
sbb
mov
jno
mov
mov
sub
fiadd
xchg
inc
pop
jge
in
adc
and
pushf
int3
fs
jne
out
mov
fiadd
xor
fldenv
fistp
push
cmp
(bad)
push
jns
add
jae
gs
fwait
add
call
test
pop
mov
lock
clc
icebp
or
mov
sti
push
lods
in
cmps
push
popa
scas
mul
test
mov
hlt
test
nop
lahf
lds
mov
dec
and
pop
jmp
loopne
push
push
and
jmp
add
pop
call
stc
push
pop
(bad)
into
pushf
std
mov
pop
ror
cmp
jp
in
mov
and
add
adc
mov
cmp
clc
movs
pop
pop
out
cmp
stos
and
sub
cmp
adc
inc
popf
jo
inc
mov
jmp
sub
imul
push
inc
ret
das
jge
sbb
clc
popf
in
lahf
cmp
adc
inc
shr
sub
jbe
jmp
or
mov
cmp
mov
mov
add
imul
ret
pop
ds
xchg
daa
xchg
les
xlat
pop
test
sbb
xor
adc
ror
test
(bad)
jno
dec
cmp
jmp
in
(bad)
xor
mov
push
sbb
dec
retf
popa
adc
jnp
stos
daa
sub
pop
mov
jge
mov
inc
mov
popa
lods
pop
adc
(bad)
sahf
(bad)
push
bound
sbb
and
and
and
inc
loopne
loopne
(bad)
cmps
push
imul
cwde
or
sbb
adc
movs
push
mov
stos
xchg
leave
mov
jg
jne
mov
in
ret
and
imul
call
stc
mov
xor
retf
aas
push
cmp
mov
in
mov
mov
mov
fucom
div
mov
and
js
call
fisub
(bad)
sub
sbb
movs
sub
dec
scas
in
add
jmp
adc
xor
xlat
lahf
repnz
or
xchg
xchg
lds
jp
mov
f2xm1
pop
jbe
int
cmp
sbb
pop
addr16
icebp
jecxz
mov
repz
ret
mov
fwait
(bad)
adc
mov
dec
cli
test
mov
jnp
into
ss
pop
xchg
inc
mov
into
pop
sbb
sub
addr16
in
mov
xor
movs
outs
dec
pop
push
cld
leave
jns
movs
hlt
xor
push
add
retf
ret
xchg
imul
cmc
bound
push
pop
xchg
xor
enter
xchg
push
addr16
xor
sub
sub
and
fisttp
loopne
xchg
and
or
cmc
xchg
xor
les
push
mov
adc
jnp
aad
jns
xchg
inc
fmul
pusha
dec
fucomp
xlat
sub
push
add
fstp
aaa
sub
mov
(bad)
xor
mov
push
mov
push
xor
push
test
iret
jmp
jb
adc
or
clc
jmp
(bad)
jmp
test
jmp
retf
dec
lea
adc
xor
mov
cmp
sub
sub
mov
rcl
inc
repz
xchg
xchg
push
mov
lods
sbb
sbb
std
add
jmp
and
loopne
fwait
pop
mov
aaa
xchg
icebp
stos
sbb
fild
inc
cmp
call
and
rcl
fst
into
sbb
(bad)
int
lds
mov
das
xor
xchg
clc
pop
ja
push
push
and
mov
sbb
sub
cli
jmp
pop
popf
sub
mov
fisub
xchg
(bad)
jae
mov
call
inc
push
push
(bad)
cdq
outs
dec
mov
xor
inc
or
fisubr
inc
jbe
mov
cli
popa
loopne
sbb
movs
pop
arpl
mov
bnd
pop
mov
or
xchg
jb
dec
les
adc
mov
xor
sub
mov
bound
mov
fistp
mov
les
mov
(bad)
sbb
mov
cmc
clc
ret
int3
mov
sub
int
(bad)
out
test
aad
adc
div
outs
pop
xchg
xchg
icebp
test
rcl
xchg
es
out
fld
cld
cmps
dec
rol
jle
dec
neg
ror
xchg
fucomi
loop
movs
pop
push
(bad)
xor
pop
mov
pop
ret
sbb
dec
neg
jo
inc
inc
iret
loopne
xor
mov
pop
or
push
loope
std
cli
enter
pop
std
hlt
sbb
mov
in
mov
adc
jne
fnstenv
scas
es
and
scas
mov
int3
add
stos
js
es
shr
mov
push
test
cmp
adc
(bad)
mov
repz
ret
(bad)
enter
xchg
dec
or
inc
(bad)
cwde
push
imul
add
and
mov
nop
(bad)
xor
and
cli
pop
repnz
outs
mov
adc
mov
push
jl
fs
out
fcom
mov
das
rcr
fldl2e
cmp
(bad)
pop
ret
es
pop
out
rcl
jl
movs
test
jo
mov
cmp
aam
dec
mov
out
push
sub
je
stos
call
lock
cmp
pop
test
dec
in
daa
push
scas
mov
jnp
pop
lock
fs
jle
jmp
mov
push
cmp
les
xchg
or
cdq
push
cwde
rcl
or
lds
sub
mov
add
xor
xchg
jbe
or
and
mov
repz
cmps
fmul
ins
ins
push
popa
and
sbb
mov
push
push
mov
cmps
test
xchg
cwde
pop
add
test
je
call
and
(bad)
in
sbb
inc
xlat
fsub
xchg
adc
mov
adc
in
dec
sahf
fist
test
rcr
inc
jnp
mov
in
xchg
mov
int3
lock
mov
sti
cmp
adc
mov
cmp
rcr
fisttp
in
push
xchg
daa
mov
hlt
cld
mov
push
es
das
pop
or
adc
or
cmp
inc
repz
pop
(bad)
in
movs
cmp
push
ret
arpl
jmp
push
cwde
cmp
cmc
or
imul
test
xchg
rcl
xchg
push
adc
adc
arpl
inc
xchg
xlat
sahf
popa
jle
mov
cmp
or
jne
jo
xchg
jbe
nop
js
xor
pop
cmp
push
adc
and
push
jnp
push
ds
xor
repz
clc
out
sub
stos
out
shl
test
mov
call
push
mov
cmp
push
je
jmp
(bad)
cmp
pop
jns
cs
or
sar
and
pushf
jno
jno
xor
xchg
aad
mov
mov
pop
mov
ret
push
pop
mov
movs
adc
cs
arpl
ret
stos
inc
add
push
sbb
push
es
jmp
and
ja
out
test
(bad)
xor
call
mov
add
fisubr
cmp
or
xchg
pusha
pop
repnz
lds
mov
rcr
fnsetpm(287
retf
movs
ds
div
xchg
cli
out
out
push
push
pminub
out
fstp
scas
xor
in
nop
jmp
pop
and
push
rcr
loop
dec
pop
cmp
mov
inc
adc
sub
imul
call
call
mov
sub
lea
sbb
aas
popa
xchg
dec
add
outs
hlt
add
mov
cmp
push
fisttp
loope
leave
aaa
cmp
jbe
arpl
cdq
push
ss
les
retf
(bad)
fnsave
jp
shl
push
sub
xlat
ds
mov
ret
cmps
cdq
popa
jb
xor
cdq
addr16
inc
mov
sub
aaa
out
and
fimul
mov
xor
or
out
icebp
push
shl
dec
lods
(bad)
dec
xor
mov
movs
hlt
dec
in
inc
or
outs
imul
(bad)
je
gs
nop
inc
mov
cmp
push
ds
and
test
pop
xor
dec
neg
retf
aam
pusha
sbb
enter
pop
inc
test
data16
sub
dec
shl
test
test
pop
sub
call
adc
add
sahf
pop
lods
loopne
pop
xchg
dec
cs
inc
sahf
jecxz
scas
sub
xchg
dec
mov
fwait
add
push
in
lea
or
fisubr
movs
(bad)
mov
jp
call
mov
scas
mov
dec
push
mov
jnp
mov
int3
mov
out
call
je
dec
bswap
sbb
pop
push
aaa
cs
push
enter
jno
dec
push
iret
sub
push
ins
lahf
cdq
out
pushf
leave
pusha
mov
inc
adc
push
pop
dec
mov
shl
jg
add
push
sub
(bad)
adc
sti
sub
mov
(bad)
js
enter
inc
(bad)
jb
xchg
sub
add
repnz
(bad)
push
sub
or
test
jnp
sbb
sti
add
dec
loop
or
pop
fs
les
mov
aas
fsubrp
stos
test
xor
out
mov
(bad)
sub
aaa
mov
popf
jo
int
add
fisub
or
mov
das
or
aaa
iret
pop
repz
inc
mov
dec
repz
cmps
ja
lahf
add
cwde
cdq
hlt
or
jae
cs
mov
in
jnp
mov
ja
adc
cmp
movs
jbe
sub
and
sti
lea
sar
cdq
call
xlat
and
ret
fwait
sub
xchg
movs
retf
push
mov
sbb
mov
ins
pop
inc
sbb
adc
imul
sub
mov
repz
ins
sbb
daa
sbb
pop
call
xor
mov
push
xor
mov
mov
xor
jns
xor
arpl
sar
(bad)
popf
ror
jb
cmps
sar
or
or
nop
fidiv
movs
pusha
add
adc
inc
loop
cmps
pop
iret
xor
dec
movs
popf
or
push
xor
lods
repnz
sub
repz
js
into
jnp
scas
and
retf
pop
cmp
inc
or
fld
lea
mov
loopne
sub
idiv
scas
not
ja
adc
cmp
popaw
push
test
dec
rcl
push
sub
aas
out
mov
outs
sub
pop
mov
push
call
jp
call
test
sub
(bad)
iret
mov
xchg
stos
and
addr16
xor
outs
xor
clc
imul
push
lea
out
xchg
(bad)
cmps
ss
mov
sahf
jecxz
shl
fidivr
out
jae
imul
inc
adc
(bad)
and
in
and
mov
cmp
aad
inc
scas
(bad)
push
je
enter
(bad)
jp
int3
sahf
adc
cs
or
xchg
or
shl
xlat
xor
push
ss
or
adc
mov
inc
mov
mov
xchg
ret
hlt
and
and
adc
and
xor
mov
fnstcw
cmc
(bad)
fdivr
dec
in
jmp
int
rcl
mov
(bad)
push
cmp
pop
sar
ret
(bad)
and
or
sub
jns
pop
push
xchg
bound
cmp
pusha
cmc
push
js
fistp
movs
aad
aas
and
mov
fs
fs
in
cs
sar
movs
mov
call
mov
mov
sub
mov
leave
xor
inc
scas
sti
push
pop
(bad)
nop
xchg
cdq
and
clc
sbb
and
movs
push
ror
movs
shl
cmp
jb
popa
in
xchg
mov
test
out
adc
push
adc
xor
test
push
push
dec
fstp
lahf
dec
and
xchg
xor
jae
mov
mov
stos
cmp
(bad)
fadd
mov
cmp
mov
movs
pushf
pop
rol
jge
gs
mov
popa
cmp
arpl
pop
dec
popf
test
(bad)
pop
ficomp
iret
int
push
pop
adc
push
pop
mov
call
sub
dec
ds
cs
call
aad
adc
rcl
out
sub
jmp
pop
out
cmc
pushf
out
out
pushf
and
in
jb
fadd
out
or
cmps
pop
imul
sub
mov
pop
sub
and
mov
and
shl
sub
push
and
and
das
mov
iret
xchg
out
jmp
jmp
jecxz
dec
fiadd
mov
add
or
mov
jecxz
test
dec
xor
push
pop
cmp
xor
or
xor
pop
in
scas
sbb
cld
dec
enter
jle
dec
iret
jl
cli
ror
dec
(bad)
jmp
cmps
shl
sub
xor
int
jnp
cmp
mov
inc
jo
ret
sub
frstor
sti
or
mov
sti
or
dec
ds
inc
pop
fadd
adc
cmp
jge
das
adc
stc
lahf
in
mov
aas
repnz
neg
popf
in
mov
mov
scas
pop
mov
xor
ret
outs
leave
add
dec
inc
mov
jbe
mov
mov
clc
dec
scas
aad
push
and
das
scas
bound
pop
loop
add
adc
mov
push
leave
int
sbb
adc
add
int3
ins
or
xor
repz
nop
mov
es
xor
out
add
dec
add
ins
js
ror
xor
xor
data16
je
mov
(bad)
fst
rcl
sbb
sti
in
adc
inc
jle
jne
cld
cwde
sbb
xchg
sub
hlt
dec
cwde
inc
imul
xchg
std
mov
inc
stc
enter
pop
call
aas
mov
sti
mov
push
push
push
sub
xchg
rol
stc
or
bound
sub
jo
in
mov
repz
out
sbb
pop
loop
scas
(bad)
jbe
cmp
add
jmp
fs
test
push
sub
xchg
cmp
ror
jno
mov
push
dec
mov
stos
pusha
sub
cmc
xchg
dec
sar
movs
mov
mov
test
scas
cld
push
outs
(bad)
aam
cwde
sub
rcl
push
or
pop
mov
call
lahf
xor
cwde
hlt
lock
push
sbb
xchg
js
pop
jno
jnp
(bad)
fsub
sbb
adc
dec
imul
jge
popa
lea
movs
std
nop
nop
pop
or
and
mov
jno
sbb
jmp
dec
fwait
arpl
mov
fdiv
xor
(bad)
jmp
rsqrtps
loopne
xor
jmp
enter
shr
stos
and
sub
enter
(bad)
fnsave
pusha
and
adc
retf
test
jb
mov
inc
loope
jne
mov
das
cmp
dec
lds
xchg
adc
(bad)
fsub
jne
add
add
mov
fdiv
adc
push
scas
and
add
in
cmp
scas
cmp
hlt
xchg
inc
lahf
pop
(bad)
sub
push
jge
and
mov
ret
inc
fld
push
cmps
imul
adc
clc
pop
lea
cmp
not
jmp
or
clc
jmp
adc
shl
jp
lea
xor
mov
jns
je
pop
xor
inc
cmp
and
lods
cmp
inc
ror
pop
(bad)
les
sbb
mov
fnsave
pop
inc
aas
jo
nop
or
jmp
ret
mov
(bad)
enter
clc
cld
or
fimul
jl
cmp
lods
mul
das
arpl
push
fmulp
pushf
outs
out
mov
pusha
adc
rcl
cmp
pop
test
inc
js
mov
sub
mov
mov
sar
jb
loopne
xor
cwde
xchg
push
(bad)
cmc
cmp
loope
in
add
xchg
sub
xlat
or
push
aas
retf
in
int3
mov
out
shl
sub
ror
lahf
add
rcr
adc
adc
mov
mov
popa
inc
mov
cmps
fs
xor
mov
cmp
dec
out
cli
cdq
jle
imul
pop
lahf
and
dec
dec
je
or
push
cmp
or
jmp
shl
cmp
arpl
jns
fcmovnbe
push
in
push
jnp
cmp
mov
cmp
dec
cmp
dec
xchg
ret
test
fwait
push
or
adc
out
ror
lea
imul
xor
popf
mov
fld
icebp
push
iret
dec
gs
loope
enter
pop
retf
iret
out
push
adc
(bad)
dec
adc
ret
mov
mov
outs
mov
je
js
inc
mov
repnz
jmp
and
or
push
pop
inc
push
dec
movs
int3
jae
mov
aam
mov
jl
ss
fwait
adc
add
mov
leave
scas
fwait
stos
sbb
xor
mov
adc
xchg
dec
ficomp
scas
pop
scas
push
sub
add
lock
xchg
cmp
test
cmp
cmp
sub
mov
pop
inc
je
les
xor
call
aad
test
inc
cmps
stos
jl
std
sbb
jp
scas
(bad)
xchg
cmp
push
pusha
cmp
cmp
rol
das
jnp
pop
add
outs
mov
popa
out
fs
cli
nop
mov
ds
xor
adc
lsl
push
test
mov
scas
repnz
xchg
xor
sahf
add
pop
xor
pop
rcr
hlt
jge
sub
cmp
cwde
enter
or
cmc
mov
aaa
enter
(bad)
pop
sbb
pop
adc
frstor
xchg
jbe
cdq
js
lods
js
or
jmp
mov
sbb
and
push
mov
stos
test
lods
(bad)
mov
add
repnz
mov
int3
or
mov
retf
cli
pop
lea
lods
mov
mov
sbb
enter
push
pop
js
lods
(bad)
std
retf
in
mov
pop
lods
push
push
scas
out
push
push
clc
adc
repz
arpl
push
(bad)
(bad)
and
dec
lock
jg
ret
mov
int
rcl
sbb
and
call
xor
jg
cmp
mov
sbb
(bad)
pop
jmp
retf
pop
cli
mul
pop
and
test
loop
cmp
add
inc
icebp
mov
pop
xchg
loopne
inc
mov
fld
pushf
ja
out
mov
cli
mov
xchg
dec
sbb
(bad)
cli
in
enter
imul
repz
cld
cmp
push
adc
fwait
adc
or
xchg
aas
xchg
mov
adc
cld
retf
std
adc
cmp
xchg
dec
es
push
dec
lods
(bad)
imul
add
jmp
call
add
xchg
xchg
inc
or
add
jecxz
push
dec
(bad)
xor
fwait
push
dec
retf
fld
jo
int3
repz
lods
loop
icebp
je
push
retf
aaa
cmp
cli
xor
xchg
add
fistp
bound
gs
dec
shl
add
adc
jle
lock
sbb
xchg
push
xchg
dec
dec
mov
clc
out
stos
and
and
cdq
lock
adc
xchg
mov
push
std
jbe
rcr
pop
stos
sub
imul
dec
(bad)
clc
jp
xchg
ret
xor
ret
leave
pop
cli
xor
fnstcw
out
add
dec
aam
in
aam
add
inc
or
popf
mov
jmp
push
push
inc
cmp
loope
push
in
(bad)
(bad)
not
mov
mov
inc
jg
mov
mov
jmp
xor
pusha
rcl
div
ror
xchg
inc
sub
jb
jbe
and
loopne
sub
stos
push
sbb
(bad)
adc
jae
push
ret
popf
inc
or
data16
je
mov
mov
cmc
sub
jmp
dec
or
xor
mov
or
mov
retf
jne
addr16
push
call
jb
retf
popa
(bad)
and
mov
dec
mov
popf
(bad)
add
out
out
sub
and
imul
ins
xor
out
(bad)
xchg
xchg
daa
inc
xor
push
push
cmps
in
jle
call
test
aad
fisttp
mov
mov
or
xchg
mov
pop
ins
pop
sub
push
xchg
(bad)
mov
push
stos
(bad)
iret
adc
sahf
test
push
cmp
jmp
sub
mov
mov
or
xchg
dec
mov
xchg
js
xor
cmp
mov
call
test
push
outs
mov
movs
lea
push
jmp
lea
nop
fisub
outs
sub
(bad)
cli
sub
xchg
ins
or
mov
retf
(bad)
std
(bad)
xor
test
stc
inc
je
or
and
mov
pusha
in
test
mov
xchg
jp
retf
or
or
out
add
cmp
jne
iret
cmp
cmp
dec
js
or
repz
cmc
jp
enter
mov
or
mov
mov
jne
sbb
aas
inc
fmul
rcl
xor
add
loop
les
icebp
cmp
sub
inc
std
lock
push
(bad)
jb
gs
(bad)
hlt
rol
mov
adc
xchg
inc
call
adc
das
mov
or
les
push
dec
xor
sub
repz
and
cmp
push
and
(bad)
and
dec
sbb
jge
jp
inc
repnz
sub
and
and
adc
test
ins
push
mov
cmp
je
out
(bad)
clc
jns
cdq
sahf
push
fwait
clc
push
retf
pop
push
mov
pushf
or
cmp
rcr
mov
aad
mov
jns
mov
push
in
pusha
ins
xor
call
cmp
sbb
jl
dec
pop
loope
stos
jns
cmps
mov
add
mov
mov
and
popa
cmc
jb
addr16
int3
xor
clc
push
arpl
fsubr
lea
and
cmp
stc
inc
jb
movs
and
pop
sub
jnp
pop
daa
and
mov
inc
push
ins
pop
push
rol
les
movs
test
dec
jmp
(bad)
xchg
inc
ins
cmp
sbb
jnp
(bad)
adc
dec
std
push
ja
mov
in
jmp
in
js
cli
inc
rol
not
stos
rcl
into
aas
dec
movs
xor
into
mov
jbe
jecxz
push
imul
je
sbb
sbb
leave
xchg
mov
xchg
(bad)
aam
fs
sub
jecxz
pop
loop
push
mov
xor
jo
mov
jl
add
pop
push
in
cmp
retf
lods
test
(bad)
xchg
jno
in
test
out
stos
mov
sub
popf
(bad)
pop
jge
mov
and
out
jnp
mov
xchg
movs
mov
cmp
std
or
(bad)
stc
xor
lds
pop
call
inc
inc
mov
jo
push
mov
dec
inc
jno
pop
sahf
pop
out
(bad)
xor
hlt
xor
cmp
stos
add
in
push
cmp
and
je
cli
aaa
idiv
repz
dec
dec
sar
push
dec
or
mov
inc
pop
jecxz
outs
retf
pop
adc
pop
push
ret
and
sub
stos
test
xor
mov
mov
or
mov
lock
fsub
hlt
dec
push
or
xlat
aas
sar
(bad)
out
shl
lods
sahf
inc
lods
dec
mov
mov
aaa
in
mov
repnz
cwde
out
mov
jae
in
sbb
or
lods
cld
fisub
cld
fadd
mov
inc
xchg
loope
sub
pop
sub
in
sub
and
popa
cmc
sub
jne
or
dec
jge
add
xor
mov
push
push
or
jmp
dec
push
mov
add
mov
ret
movs
adc
int3
mov
mov
xchg
cwde
or
xchg
cmp
xor
fsub
sub
push
(bad)
xchg
add
mov
daa
push
mov
jb
or
jno
jg
adc
rcl
xor
jb
push
dec
xor
jbe
add
mov
inc
sbb
outs
mov
in
pop
sar
jle
add
pop
fmul
fst
ret
xchg
ss
popa
jne
sahf
sbb
fnstsw
inc
or
add
fsub
push
fcomp
arpl
scas
loop
ret
dec
jmp
ret
dec
je
sub
adc
mov
fwait
jo
and
cwde
add
push
scas
mov
leave
loopne
out
pop
lods
mov
push
cmc
outs
mov
loope
ja
mov
mov
sub
inc
mov
inc
dec
(bad)
fdecstp
xor
stc
cmps
mov
mov
xor
fnsave
ds
mov
push
fs
ins
jbe
inc
test
and
xlat
add
cli
je
mov
cli
jle
jb
lods
or
and
mov
call
arpl
jno
imul
add
xor
retf
inc
push
mov
iret
mov
test
add
test
aas
lahf
pop
es
out
xor
lahf
mov
push
retf
icebp
(bad)
pusha
jecxz
xchg
fstp
repnz
call
adc
mov
jne
xchg
cmps
sbb
cli
and
lds
lods
aam
lods
push
bound
pop
jbe
fidivr
pop
jle
int3
iret
imul
mov
xchg
mov
pop
sti
lods
jns
je
enter
push
loopne
mov
mov
pushf
xor
pop
inc
dec
repz
xchg
sub
cwde
(bad)
sbb
xor
outs
and
mov
push
jmp
in
dec
xchg
lods
inc
push
or
daa
sbb
in
push
rcr
push
(bad)
xor
ret
fadd
lock
fs
(bad)
jno
xchg
pop
outs
xor
xor
lock
inc
imul
arpl
mov
sbb
xlat
test
mov
retf
(bad)
imul
push
mov
push
cs
inc
xor
(bad)
test
or
clc
dec
call
adc
pop
and
scas
mov
pusha
rol
adc
push
pop
add
test
or
push
nop
jg
mov
mov
mov
mov
outs
fwait
das
sbb
inc
stos
mov
clc
and
adc
(bad)
fcomp
dec
adc
push
push
mov
mov
mov
push
sbb
pop
neg
jbe
dec
popf
jnp
jmp
inc
aam
add
or
inc
pop
push
and
mov
mov
pusha
cmps
lock
popa
inc
xor
cmp
cmps
sub
push
(bad)
xchg
mov
cmp
mov
sbb
or
std
rcr
inc
imul
int
lods
enter
inc
ss
(bad)
je
sbb
repnz
xchg
pop
mov
dec
jmp
scas
jbe
sbb
ss
idiv
push
cmp
inc
and
outs
out
data16
xchg
xchg
add
jmp
xchg
jae
ror
stos
mov
rcr
mov
jne
lods
lahf
mov
push
fist
xor
mov
repz
aad
out
movs
inc
inc
enter
call
inc
dec
rcr
and
mov
mov
sahf
in
ds
xor
mov
cmc
lods
mov
mov
repnz
cli
inc
adc
jecxz
add
bound
cmp
pushf
imul
ins
push
or
data16
imul
lock
pop
mov
fisttp
dec
ret
(bad)
call
inc
scas
pop
in
les
xchg
mov
iret
dec
push
data16
sub
dec
fild
scas
frstor
mov
bswap
in
xor
fwait
mov
test
icebp
retf
in
dec
rol
and
mov
mov
push
jg
dec
add
nop
mov
jecxz
mov
int3
in
mul
out
xor
ror
xor
test
inc
test
jecxz
xor
sbb
mov
aam
or
and
daa
mov
icebp
mov
push
mov
repz
jbe
xor
aaa
pop
scas
xlat
std
xchg
or
inc
or
aam
push
movs
pop
adc
into
inc
lahf
pop
inc
cs
aad
in
sahf
mov
mov
inc
jle
nop
test
or
lods
adc
sub
and
jns
cmp
cs
sahf
mov
stos
int
(bad)
dec
out
pop
jno
loope
mov
adc
xchg
shl
push
test
sub
push
fadd
ds
mov
sbb
div
scas
add
pop
xchg
mov
inc
pop
xchg
sub
xchg
mov
xor
pop
movq
fidivr
add
mov
outs
or
mov
sahf
adc
mov
mov
mov
repz
adc
dec
jo
imul
outs
pop
lods
and
or
mov
std
push
imul
rcl
pop
inc
shl
push
hlt
loope
xor
test
loope
enter
dec
ret
push
stos
test
xchg
push
mov
lods
dec
sbb
xor
jne
cmp
or
and
adc
das
add
arpl
ucomiss
retf
and
enter
dec
int3
sub
and
ret
add
sub
or
jbe
mov
inc
push
stos
push
push
adc
popa
sar
push
jle
xor
mov
shl
xlat
and
xchg
mov
jns
call
fldcw
pop
repz
js
movs
int3
mov
sub
or
pop
pusha
loop
pop
push
pop
add
and
xor
jmp
inc
jmp
arpl
jp
mov
push
adc
and
jge
mov
dec
ja
or
pop
scas
xchg
or
shl
movs
inc
xor
jmp
(bad)
and
pop
ins
repz
stos
sbb
push
add
jb
mov
addr16
mov
cmps
call
mov
lahf
jecxz
(bad)
or
sti
jnp
cs
sub
out
icebp
bound
fcomi
ins
jnp
jg
push
push
or
mov
int
or
std
sar
or
or
loop
arpl
dec
xor
loope
fiadd
jp
test
fadd
xor
sahf
push
pop
(bad)
imul
scas
out
push
(bad)
xor
push
ds
stos
push
mov
adc
mov
mov
or
(bad)
into
outs
inc
iret
or
and
inc
mov
sbb
mov
fld
aaa
push
das
mov
std
and
mov
sub
adc
jmp
lock
sub
int3
repz
cmps
pop
cmp
push
jae
and
jno
or
ret
and
lea
cmp
div
(bad)
loop
bound
idiv
push
mov
nop
int3
sub
(bad)
std
fwait
dec
jg
push
aas
adc
cmc
lods
call
push
ret
(bad)
fnstsw
shl
mov
rcl
cld
pop
fadd
pop
jle
sbb
cli
cmp
jecxz
adc
stos
and
test
test
sti
loope
cmp
inc
push
fs
cli
cmp
sbb
inc
arpl
add
(bad)
cmp
repnz
inc
inc
xor
cmp
or
ins
movs
ins
mov
je
or
push
mov
stos
popf
push
jge
in
das
add
lds
xchg
stos
retf
mov
pusha
fs
test
js
jmp
xor
xchg
pop
shl
push
out
jg
cmp
adc
add
imul
dec
xor
inc
cs
dec
lahf
xor
cwde
fisub
iret
inc
xor
push
jle
daa
sub
ret
inc
aad
movs
xor
sbb
sahf
mov
loopne
mov
sub
pop
cwde
das
pop
cmp
pop
jl
or
fnsave
std
rcr
mov
add
pop
cmps
mov
mov
dec
and
or
jg
ror
dec
loope
into
mov
stc
jle
rcr
aad
scas
add
or
ret
out
ja
cmps
mov
sub
push
pop
pop
cli
jle
adc
ja
push
outs
sub
mov
sbb
or
jbe
ja
jmp
fcmovnu
ins
mov
sti
addr16
and
dec
mov
push
gs
dec
and
pop
lahf
push
xchg
cmp
inc
dec
xchg
sub
pop
dec
call
adc
int3
arpl
fsubrp
jmp
popf
push
xchg
cmp
sbb
cmp
fs
out
sub
mov
js
sub
enter
outs
push
dec
lds
stos
adc
add
pop
add
cld
mov
pop
push
outs
xchg
mov
xor
repz
mov
xor
imul
xchg
fsubr
out
xor
xlat
or
pop
jmp
push
call
mov
jl
out
pop
cmp
js
aaa
pop
push
fstp
leave
push
pop
pop
fbstp
pop
popf
jl
cmp
popa
in
xor
fistp
out
rol
inc
les
jb
fnstcw
inc
and
jnp
jl
push
dec
cmp
mov
pop
rcr
loopne
retf
pcmpgtd
aad
push
(bad)
push
gs
push
ins
sub
or
outs
cmps
into
cmc
stos
mov
sbb
mov
and
cli
mov
lods
sbb
out
movs
jecxz
or
mov
adc
inc
cdq
sub
pop
or
mov
out
or
push
dec
cmp
inc
imul
mov
aaa
pusha
mov
cmp
inc
ret
xor
jge
ss
out
or
(bad)
pop
fiadd
in
pop
dec
ficom
xor
lahf
sub
outs
retf
mov
cmps
cmp
sub
dec
dec
test
jge
jno
mov
(bad)
jno
push
or
mov
mov
push
add
outs
push
or
ret
mov
inc
pop
vmovaps
sbb
push
ret
push
(bad)
xchg
cdq
push
(bad)
outs
jns
and
push
cmps
adc
adc
jecxz
push
xlat
cmp
aad
ins
push
movs
mov
int3
mov
mov
mov
es
pop
cmp
push
or
sbb
test
dec
mov
jbe
inc
retf
or
jle
stos
mov
pop
sahf
mov
jmp
mov
out
out
or
rol
shl
or
js
cmp
dec
imul
aaa
mov
push
and
jl
add
jbe
xchg
xor
repz
enter
add
out
adc
test
ss
and
enter
add
ins
mov
pop
das
mov
inc
lods
mov
mov
repnz
cmp
push
inc
jmp
jne
xlat
add
sbb
cmp
sbb
pop
pop
xor
push
push
xchg
dec
cld
ins
dec
into
stos
jno
daa
repnz
(bad)
bound
pop
repz
ror
mov
mov
hlt
(bad)
(bad)
push
rol
adc
jae
xchg
mov
cmp
mov
mov
lods
in
sub
mov
cli
and
push
sub
xlat
dec
push
xlat
stc
lods
lahf
mov
mov
std
pop
mov
xchg
xor
ficom
add
mov
add
bound
or
in
push
sahf
adc
pop
xchg
in
add
push
and
imul
xor
sbb
icebp
retf
mov
adc
scas
aaa
int
fsub
lods
pop
arpl
cmp
push
jge
add
mov
or
ret
out
ret
dec
mov
mov
mov
into
sub
(bad)
ficomp
imul
clc
sub
dec
mov
clc
lods
scas
jno
adc
aad
jae
int3
mov
pop
add
imul
in
jae
and
retf
(bad)
lods
jo
(bad)
and
sub
xor
adc
lods
cmp
rcl
fdivr
xchg
cwde
fwait
jbe
icebp
inc
xchg
cwde
test
jmp
adc
sub
rcl
mov
movs
movs
pop
push
xor
leave
push
adc
cvttps2pi
loop
lock
mov
mov
push
inc
inc
jp
rdtsc
or
fisubr
or
(bad)
adc
gs
inc
adc
dec
mov
xor
fsubr
out
movs
mov
repnz
sti
lahf
repnz
jns
jmp
xchg
or
add
sahf
xchg
push
enter
sti
dec
push
sbb
jmp
test
mov
mov
jl
lods
sub
or
add
in
and
inc
or
(bad)
jp
mov
stos
mov
add
mov
retf
add
pop
cmp
cdq
scas
jle
and
lds
mov
es
sti
xchg
sbb
addr16
cmp
popa
fdivr
xor
inc
inc
jmp
pusha
pop
loop
dec
clc
add
xor
repnz
add
push
cmp
std
add
mov
out
(bad)
ja
imul
out
sar
jmp
sbb
push
mov
jo
mov
jecxz
cmp
movs
add
in
ror
imul
or
lods
outs
pop
xor
mov
(bad)
jo
push
dec
push
mov
mov
(bad)
lods
sub
pop
add
mov
(bad)
xlat
ret
inc
fistp
pop
loope
out
lock
ficomp
pop
popa
sub
push
sub
int3
mov
sbb
movs
stos
enter
mov
(bad)
lock
push
test
push
sahf
lea
dec
and
outs
test
add
mov
or
test
fstp
addr16
mov
test
sub
mov
xchg
add
adc
(bad)
(bad)
cld
mov
shr
iret
cmp
sar
or
rcl
gs
inc
mov
push
loope
mov
dec
sub
icebp
mov
pop
or
mov
dec
lods
dec
xor
ins
xchg
mov
push
out
fsubp
add
fwait
jge
jo
int3
jl
pop
arpl
add
jnp
mov
push
push
pop
lods
cmps
sub
push
in
mov
inc
dec
mov
inc
cmc
sub
jle
aas
ss
xor
ja
test
xchg
outs
arpl
fwait
adc
inc
push
rcl
bound
sub
ret
xchg
sub
dec
dec
mov
push
pop
(bad)
sub
dec
inc
ds
mov
xchg
jle
lods
add
push
int3
pushf
cmps
mov
cld
add
inc
inc
and
jmp
mov
mov
mov
in
mov
mov
ins
fs
sub
cmc
sub
leave
ret
xchg
adc
push
call
dec
arpl
(bad)
ins
sahf
idiv
push
and
jmp
aaa
pop
sbb
add
cld
xchg
sbb
lea
popa
sbb
sar
adc
and
sbb
cli
mov
and
dec
test
test
sub
pop
xor
cmp
mov
mov
pop
cld
or
loope
xchg
stos
cmps
add
dec
xchg
push
lds
inc
imul
xor
stos
aam
and
mov
into
xchg
mov
cmp
icebp
sbb
fldcw
xchg
rcl
mov
push
jmp
add
lods
loop
dec
aas
ds
(bad)
xor
inc
mov
idiv
xchg
sub
xchg
mov
mov
xor
cmps
cmp
xor
movs
add
cmp
mov
push
dec
imul
jmp
mov
js
fisubr
push
js
push
push
lods
xor
xchg
call
call
mov
pop
inc
(bad)
popf
ins
sbb
dec
out
and
jmp
inc
lds
popf
aaa
jns
pop
pop
enter
sub
fdivr
loop
ins
push
leave
aad
lock
pop
push
pop
sahf
(bad)
sub
(bad)
ins
cmc
out
xor
(bad)
push
or
(bad)
and
pusha
lahf
int3
push
xor
rol
jns
mov
fist
mov
aas
jle
mov
push
pop
nop
movs
push
fdivr
adc
or
pushf
out
sbb
mov
xor
fwait
cmp
retf
iret
imul
(bad)
std
dec
xchg
push
(bad)
repz
xor
cmps
les
movs
inc
pop
mov
pop
add
in
repnz
xor
or
jns
imul
jg
cmp
add
mov
imul
or
clc
adc
test
cmp
xlat
or
fnstcw
inc
cdq
mov
clc
mov
fiadd
mov
jmp
mov
dec
push
cmp
jge
test
pop
dec
std
adc
push
ja
sbb
enter
and
inc
(bad)
jo
pop
sbb
cmp
scas
mov
mov
jl
cdq
pop
mov
(bad)
pop
or
xor
rol
cli
gs
dec
int3
les
sub
or
call
stos
xchg
cmp
jb
xor
push
in
and
shl
mov
les
xchg
icebp
sbb
mov
inc
mov
out
aas
cmc
loop
jb
xlat
sbb
xor
push
(bad)
xlat
add
(bad)
lods
jo
cs
mov
add
call
sub
loop
aad
shl
dec
rcl
retf
mov
fild
cld
scas
test
sbb
movs
xchg
pop
das
jge
lods
cmp
fcom
jmp
sub
ss
call
shr
std
xor
xor
int
jge
ins
fild
mov
in
mov
(bad)
rcl
jg
mov
iret
sub
xchg
fadd
out
mov
mov
mov
cs
jmp
push
pop
xchg
mov
lds
adc
or
cmp
dec
(bad)
xchg
or
sub
lahf
shl
xchg
in
jmp
lds
aaa
scas
mov
adc
dec
jmp
test
inc
ins
iret
xlat
das
adc
mov
inc
nop
cmp
stos
mov
push
adc
jb
push
mov
sub
add
mov
aam
aaa
ins
mov
pop
mov
push
push
test
push
rcr
xor
inc
mov
inc
mul
mov
adc
lahf
push
fisubr
dec
popf
mov
dec
addr16
out
sub
into
xor
xchg
iret
retf
dec
or
mov
jb
jle
cmp
push
int
cld
add
sbb
mov
mov
pop
adc
xor
push
ja
aad
mov
and
jecxz
(bad)
jle
and
stos
scas
daa
aaa
inc
add
inc
pop
adc
mov
outs
sbb
(bad)
push
jb
and
repz
fadd
cmp
rcl
xchg
mov
push
ret
xor
arpl
shr
ins
adc
lock
iret
lds
fwait
js
adc
push
cmp
push
sub
sbb
sbb
(bad)
test
sub
cmp
push
push
push
mov
fstp
int
dec
cmps
loope
dec
pop
aas
(bad)
sub
pop
mov
cmp
int
pop
into
out
mov
cmps
addr16
mov
pop
gs
mov
and
sbb
adc
sahf
add
cmp
popa
jecxz
pop
test
adc
adc
sbb
rcr
xchg
movs
and
fmul
mov
shl
jle
sbb
jge
imul
cmp
mov
icebp
ds
nop
push
dec
cmp
lock
sub
int3
mov
mov
dec
push
sbb
sub
repz
jl
popf
loopne
xchg
jo
push
fdiv
fwait
and
enter
xchg
xor
out
xchg
sub
fs
gs
das
cmp
pop
sub
sbb
fs
mov
xchg
cdq
hlt
jb
ins
sbb
loope
test
neg
push
(bad)
int
mov
sub
mov
pop
dec
xchg
loop
jg
arpl
mov
jl
or
jle
in
not
jno
add
aam
push
jbe
(bad)
pop
dec
rol
arpl
xchg
add
into
sbb
test
xor
cmps
sub
add
dec
and
sbb
cmp
int3
enter
in
pop
mov
nop
jmp
ror
xlat
retf
mov
das
mov
pop
jne
shr
mov
lds
pop
cmp
mov
jecxz
push
xchg
xchg
add
in
xor
mov
pusha
es
dec
xor
int3
ds
cmc
into
shl
sub
xchg
pushf
push
xchg
ds
jmp
loopne
jge
sbb
xor
es
pop
out
inc
inc
test
ins
loop
pop
mov
sbb
lods
test
retf
push
test
sub
cdq
jne
pop
xchg
mov
push
mov
push
ret
cmp
sar
add
jnp
lock
xchg
jecxz
test
pop
ror
addr16
outs
mov
jb
(bad)
or
pop
and
sbb
sti
ror
fld
mov
or
add
popf
div
and
cwde
jl
pop
dec
icebp
sub
xor
mov
repz
or
adc
jbe
shl
push
nop
movs
sub
hlt
pop
mov
jge
scas
push
push
pop
jecxz
dec
sbb
ret
jmp
or
icebp
into
imul
cwde
bound
mov
sahf
mov
xchg
stc
push
test
das
push
rcr
je
ins
and
pop
arpl
stos
mov
xor
jle
retf
mov
aas
out
stc
(bad)
cld
sub
inc
xchg
sbb
leave
(bad)
inc
ret
test
clc
pop
pop
test
mov
or
xchg
fldln2
pop
jge
rcl
jl
and
adc
push
add
xor
jmp
cmps
cli
push
aam
cmps
ja
loop
xor
cli
adc
adc
mov
addr16
sbb
bound
ficomp
and
scas
les
ds
jno
cmc
movntps
addr16
imul
lea
mov
inc
mov
dec
clc
fs
sub
mov
cs
xchg
mov
repnz
out
loopne
jns
sbb
rcr
inc
(bad)
push
leave
popa
jecxz
dec
sub
jbe
outs
inc
push
mov
es
pushf
add
xor
mov
adc
or
mov
(bad)
cmp
xchg
adc
cmp
popa
mov
xchg
stc
dec
jbe
pop
ficom
mov
pop
pop
ja
pop
jg
fldln2
mov
fs
and
aaa
cmp
add
or
cmc
ss
shl
retf
add
dec
mov
fsub
jno
xchg
inc
jg
cmp
jno
cmp
add
retf
mov
add
sub
push
ror
test
cld
ja
pop
gs
pop
outs
sub
das
mov
adc
adc
(bad)
imul
sbb
out
inc
jp
push
hlt
add
adc
mov
call
js
nop
dec
imul
cmp
retf
pop
ins
sub
je
cmps
mov
popf
add
cdq
add
test
mov
repnz
(bad)
(bad)
cmc
out
repnz
push
stc
inc
mov
dec
loopne
out
popa
xchg
outs
rol
or
sub
xlat
(bad)
or
sbb
inc
mov
and
stos
sar
mov
in
mov
pop
js
add
or
cmp
mov
jne
aaa
fadd
mov
xchg
sbb
scas
adc
mov
iret
retf
jge
cdq
pop
jmp
in
sbb
push
fnstcw
fnstcw
lock
lds
push
test
adc
push
sub
outs
mov
gs
jp
test
leave
stos
jge
or
mov
mov
mov
and
ret
cmp
and
out
retf
(bad)
es
out
fdivr
add
or
xchg
rcr
mov
lods
mov
arpl
inc
dec
outs
ror
stos
dec
xchg
sbb
cs
mov
mov
and
inc
ins
sahf
retf
sub
test
xor
pop
xchg
dec
in
dec
cmp
push
into
xor
jp
std
pop
mov
cmc
clc
xchg
jmp
adc
lods
and
adc
inc
xlat
mov
rcl
cmc
retf
jp
jge
xchg
pushf
sbb
out
int3
jno
xor
pop
test
fidiv
jmp
in
sbb
bound
inc
jns
sahf
xchg
sub
dec
mov
dec
aad
adc
inc
rcl
push
hlt
lea
push
pop
ja
mul
xlat
or
pop
arpl
jecxz
fisttp
add
sub
(bad)
cmc
inc
out
sub
jno
(bad)
ds
jmp
push
int
cmp
push
cmps
hlt
push
jecxz
gs
lea
xchg
in
jge
outs
lahf
addr16
jnp
xor
sub
test
pop
imul
idiv
shl
push
cmps
jp
cwde
call
scas
js
mov
shl
stos
mov
inc
ds
shl
pop
jp
int
lds
inc
(bad)
xchg
into
or
movs
cld
mov
es
ror
aaa
xchg
dec
jno
jno
(bad)
dec
inc
popf
repnz
xchg
jp
mov
mov
sub
pop
repnz
addr16
mov
cmp
xor
mov
sub
vpmacssdqh
popf
scas
pop
mov
jb
dec
mov
je
mov
jl
push
loop
sbb
push
test
fucomi
cmc
cmp
rcr
mov
push
jnp
call
mov
push
xor
ja
jmp
call
push
add
fcom
xor
cdq
push
cmp
push
outs
mov
mov
ret
inc
lods
rol
leave
fnstcw
retf
sti
or
retf
retf
mov
aad
pop
cmps
imul
and
inc
lods
cmp
daa
sbb
jmp
cdq
jmp
pop
movs
mov
dec
xchg
dec
cmp
lock
jb
and
mov
ds
arpl
add
mov
mov
inc
movs
or
int
hlt
xchg
jno
imul
(bad)
out
sub
mov
arpl
ror
push
sub
out
in
mov
loope
push
shl
repnz
imul
cmp
lahf
adc
call
stc
jmp
mov
dec
xchg
mov
push
inc
or
jo
inc
or
cmps
or
sbb
mov
pop
pop
inc
nop
xchg
retf
je
cmp
stos
movs
cmp
add
sub
dec
xor
call
xchg
loopne
pop
xchg
dec
jle
add
sti
dec
inc
mov
faddp
fisubr
mov
dec
xor
scas
mov
add
retf
and
inc
ds
adc
jo
dec
outs
fnstsw
mov
imul
out
lock
pop
mov
cwde
test
adc
test
adc
jp
mov
mov
push
cli
retf
and
jg
pop
(bad)
clc
adc
in
cdq
jmp
cmp
or
jnp
and
dec
dec
sub
std
ds
cld
dec
adc
xchg
jp
leave
mov
inc
xchg
test
push
jae
xchg
adc
hlt
enter
push
xor
adc
mov
lock
out
dec
fs
xor
ins
sub
mov
nop
xlat
or
add
loopne
out
pop
inc
in
iret
btr
sbb
mov
(bad)
shr
mov
scas
popf
ret
loop
ficomp
int
jo
enter
(bad)
mov
sbb
mov
jae
mov
int
dec
or
cmp
lea
test
loope
ins
ficom
mov
mov
enter
mov
xor
push
pop
or
sahf
stc
(bad)
stc
xor
(bad)
adc
dec
mov
adc
and
mov
test
pop
pop
test
sub
pop
push
jne
jbe
ror
nop
dec
out
or
mov
enter
and
push
inc
loop
sub
mov
ds
cs
aaa
add
sahf
xor
or
je
push
mov
or
push
push
pop
ss
call
jmp
idiv
pop
and
inc
(bad)
xor
add
iret
ja
and
mov
in
sub
dec
sbb
mov
(bad)
icebp
or
fcmovbe
and
out
push
jne
pop
(bad)
(bad)
sbb
or
inc
xor
xchg
repnz
inc
add
xchg
inc
je
inc
push
xor
pop
mov
dec
(bad)
arpl
std
gs
dec
retf
dec
pop
push
loopne
pusha
jle
push
dec
jae
cmp
out
pusha
and
ficom
xchg
cld
lock
add
lods
sub
cmp
sub
and
cs
fbld
xchg
out
out
push
arpl
sub
cs
inc
dec
cmp
mov
lahf
sbb
jl
cld
or
sub
xor
sub
or
sbb
repz
pop
xlat
push
inc
cwde
mov
xchg
fimul
xchg
lods
pop
shl
int3
std
add
dec
cmc
and
xchg
fsub
or
(bad)
jnp
dec
pusha
jbe
or
cli
add
(bad)
adc
mov
stos
push
pop
mov
or
call
push
mov
out
rcl
mov
push
hlt
push
outs
leave
ja
pop
addr16
cmp
jl
fcomp
ret
jge
das
bound
jle
repnz
mov
dec
or
dec
retf
jmp
cmp
and
sub
lahf
mov
jo
add
adc
sar
outs
cld
xor
mov
fwait
inc
adc
cwde
sub
or
or
cmps
int3
jmp
pop
cmp
push
loopne
xchg
push
js
jge
adc
xchg
repnz
jp
aam
int
jp
movs
mov
pop
das
cwde
cmp
iret
fsubr
ds
cmp
cmp
pop
sahf
mov
fnstsw
and
repz
jmp
sub
mov
adc
push
cmp
in
ja
sbb
mov
adc
inc
xlat
mov
jecxz
ror
jns
mov
pop
push
in
xchg
sub
mov
pop
out
lock
ja
inc
adc
jge
arpl
js
push
mov
shl
(bad)
imul
jmp
mov
(bad)
repz
(bad)
mov
jbe
mov
cmp
fist
retf
test
int
lea
and
mov
iret
repnz
pusha
addr16
sub
pop
xor
mov
inc
clc
sub
xchg
sub
push
lock
pop
dec
fcom
push
je
pop
aad
lock
sti
ins
add
repz
lock
adc
dec
cmp
push
pop
xchg
call
repz
adc
jbe
pop
fimul
sub
lea
jmp
out
jmp
sbb
shr
cmp
pop
cmp
fwait
cmps
popf
jns
mov
pushf
mov
jle
adc
or
or
retf
ins
push
sub
sub
fnstenv
je
in
in
mov
lea
cwde
or
cmp
shl
cmp
les
sub
mov
jnp
inc
(bad)
ficom
shl
mov
iret
mov
ja
ror
pop
aam
ror
inc
mov
or
jns
pop
mov
jbe
jo
or
pop
pop
call
mov
cmp
sub
sub
cmp
jecxz
lds
dec
shl
outs
sbb
out
rol
add
push
in
mov
stos
xor
or
add
popa
pushf
jnp
cdq
push
lock
rcl
push
call
xchg
add
popf
and
ficom
xchg
ret
in
jg
test
shl
mov
or
pop
push
test
enter
cmp
xlat
push
lds
fwait
add
or
js
push
call
ins
or
xchg
mov
popa
or
outs
mov
gs
call
push
jae
fisub
sbb
(bad)
mov
xor
mov
lahf
and
test
scas
mov
inc
lods
cmp
mov
or
cld
push
outs
mov
loopne
lods
loopne
fsub
jp
mov
push
push
movhps
scas
nop
out
jge
mov
adc
push
mov
outs
and
xchg
dec
and
fidiv
(bad)
lock
test
inc
popf
sahf
mov
mov
in
adc
adc
ins
addr16
test
and
repnz
sti
dec
fsubr
and
movs
fmul
adc
out
lock
push
ret
(bad)
mov
jo
dec
adc
test
dec
fidivr
jecxz
lods
xchg
inc
cmps
mov
stc
or
xchg
cli
lahf
(bad)
inc
lds
movs
addr16
out
cmps
sbb
pop
cs
or
popa
adc
inc
ja
div
aaa
cmp
arpl
or
sbb
repnz
ret
stc
mov
mov
sbb
imul
movs
push
and
sub
mov
out
pop
dec
mov
sbb
dec
dec
repnz
nop
fisttp
or
pushf
mov
call
retf
div
fcomp
fstp
test
pushf
cs
jg
blcic
xor
popa
pop
movs
mov
imul
fnstsw
bswap
add
pusha
fcom
sbb
ins
add
jp
jle
popf
gs
mov
mov
lahf
xchg
stc
cld
mov
ja
or
out
jl
push
into
adc
add
cmp
mov
fxch
nop
cs
or
jbe
mov
loop
or
js
add
sbb
mov
popf
mov
dec
xor
gs
xor
es
xchg
loopne
xor
xor
dec
ffree
cmps
bt
xchg
jmp
cmp
xor
jnp
outs
(bad)
mov
xchg
fld
pop
lock
xchg
mov
jb
loopne
jge
nop
jp
ret
int
xor
jp
push
out
je
mul
jo
idiv
push
into
rol
mov
add
ret
mov
in
loope
xchg
prefetchnta
ja
push
sbb
and
shl
xchg
mov
(bad)
sub
mov
mov
xor
xchg
loopne
or
test
popa
in
xchg
repnz
xor
retf
mov
adc
fcom
push
hlt
cmp
mov
inc
adc
lods
jge
nop
mov
test
popa
sbb
cmp
xor
sub
mul
arpl
push
dec
push
dec
cdq
adc
mov
gs
cmp
loopne
jne
iret
mov
or
jecxz
rcl
pcmpgtd
sbb
mov
mov
mov
adc
call
mov
sti
mov
(bad)
or
push
lds
dec
das
dec
and
repnz
pushf
mov
scas
(bad)
mov
adc
outs
aam
mov
sub
xor
sub
mov
and
cmp
inc
or
jbe
mov
pop
jns
or
mov
sub
dec
pop
(bad)
ds
cmp
test
sub
scas
rol
call
xchg
pusha
les
jg
sub
add
and
push
add
push
push
clc
outs
aam
(bad)
or
xchg
nop
fist
sub
movs
lahf
outs
cmp
loopne
pop
std
ins
imul
sar
inc
cmp
pop
fiadd
sbb
aam
and
jns
fisub
jmp
and
pop
test
xchg
mov
clc
mov
ret
fmul
clc
jmp
adc
dec
xchg
sti
out
ja
loope
stos
sbb
cmps
adc
and
inc
retf
cwde
int3
loopne
aas
pop
popw
sbb
mov
jmp
in
jecxz
lock
xchg
cmp
jns
ds
push
sbb
sbb
daa
push
addr16
inc
mov
sti
sbb
push
and
xchg
lea
imul
mov
int3
mov
test
mov
fistp
clc
jbe
sbb
mov
mov
inc
js
(bad)
and
cmp
add
mov
imul
cdq
fistp
cmps
fwait
lds
mov
data16
mov
movs
leave
aad
(bad)
in
mov
call
out
aad
xor
or
jnp
call
xor
adc
inc
jle
std
and
xchg
push
aam
mov
adc
sbb
retf
xchg
js
mov
lock
push
test
mov
xchg
or
push
(bad)
sub
push
jbe
loope
mov
cmp
fdivr
jne
(bad)
aad
push
sub
(bad)
sub
imul
xchg
sbb
call
leave
jns
lea
xor
dec
pop
jmp
dec
popa
xchg
(bad)
pusha
enter
dec
imul
cs
mov
int3
mov
outs
mov
push
pop
imul
mov
retf
add
out
neg
inc
mov
mov
and
xchg
ret
inc
adc
mov
xchg
xchg
pop
int
repnz
and
add
daa
or
and
xor
popa
aaa
cmps
ins
sbb
sub
test
aas
jo
pop
movs
inc
and
add
out
sub
mov
mov
out
stos
pusha
movs
and
mov
sbb
sbb
popf
or
rol
adc
pop
das
xor
push
cmps
fidivr
std
mov
int3
fcom
scas
aam
dec
lea
aam
pop
call
xor
jno
(bad)
(bad)
push
sub
or
mov
lods
jg
jbe
adc
dec
call
cli
jmp
outs
dec
dec
dec
pop
jl
(bad)
pusha
add
in
outs
push
mov
pop
nop
xchg
enter
sbb
mov
fs
cmovp
push
inc
fisubr
das
jge
ss
daa
arpl
sub
icebp
or
aad
jmp
idiv
sub
sti
(bad)
adc
(bad)
das
clc
sub
hlt
(bad)
lods
mov
int
and
lahf
xchg
xchg
pop
lahf
push
inc
cmp
mov
jecxz
jl
dec
ret
push
lods
shl
test
mov
push
(bad)
mov
(bad)
jnp
jge
pop
pop
icebp
mov
sub
jns
ret
hlt
jmp
fstp
or
cld
fild
les
or
test
lahf
hlt
and
lods
xchg
xchg
scas
mov
aas
or
inc
in
test
call
pop
in
retf
mov
cmp
aam
jae
ins
shl
sub
xor
cmp
fmul
xchg
push
into
loop
lods
and
gs
dec
jne
mov
fld
(bad)
(bad)
mov
hlt
stc
ins
mov
jge
inc
jge
and
push
clc
cmp
sti
mov
jmp
dec
xchg
push
add
popa
mov
mov
mov
and
sbb
jne
adc
adc
pop
std
mov
cs
add
mov
call
(bad)
lock
das
mov
mov
jp
mov
inc
xlat
in
xor
push
inc
mov
mov
adc
pop
dec
sbb
in
retf
loopne
jo
aam
mov
or
add
cmps
idiv
(bad)
jmp
imul
pop
ret
sbb
into
push
shl
ffreep
sar
jmp
push
mov
mov
or
cmp
pusha
jae
enter
jge
test
mov
bound
mov
jno
fld
mov
jnp
ret
inc
stc
jl
cmp
xchg
jmp
sub
push
rcl
dec
or
js
mov
jmp
fnsave
inc
(bad)
xchg
dec
mov
jmp
sbb
int
mov
nop
mov
mov
das
cmps
jg
jl
mov
mov
add
lds
jmp
xor
les
ret
out
inc
xor
iret
inc
arpl
test
add
clc
xor
sub
xchg
push
call
popa
cli
xchg
aas
inc
shl
mov
mov
xchg
mov
jle
and
add
in
sahf
cwde
mov
xchg
dec
hlt
cmp
cmps
fwait
cmc
ror
test
gs
gs
push
retf
mov
jmp
or
neg
dec
cwde
adc
dec
fadd
daa
lock
gs
sbb
and
jecxz
lea
or
xchg
mov
jno
mov
stc
xchg
inc
inc
or
in
bound
inc
mov
jnp
and
ja
les
jo
fld
(bad)
xchg
les
lea
mov
adc
int3
adc
jbe
inc
and
jbe
stos
jmp
mov
cmps
icebp
mov
add
or
outs
mov
or
sbb
dec
jnp
mov
push
sbb
std
push
test
rol
mov
or
repz
inc
lds
xchg
fidiv
or
fbstp
push
xchg
push
push
cmp
out
mov
mov
rcl
out
loope
mov
mov
fcom
pop
ret
pop
jns
jno
xor
rcl
or
int3
cmp
arpl
xor
(bad)
pop
in
jo
add
out
scas
popa
(bad)
jnp
mov
inc
sti
outs
adc
mov
jbe
mov
sbb
arpl
cli
or
xchg
mov
push
in
cli
or
imul
dec
imul
inc
mov
mov
stc
sbb
inc
ficomp
add
arpl
cmp
retfw
ja
call
cmp
mov
sar
jl
push
in
hlt
push
push
ret
push
shl
in
pop
sbb
cmp
sar
sbb
sub
fnstenv
and
mov
jg
lds
push
mov
pushf
repnz
mov
in
and
test
xor
xchg
popa
pusha
xor
stos
outs
pop
adc
sbb
dec
mov
aaa
test
pop
jne
jbe
mov
fdiv
mov
or
ins
sbb
inc
dec
xchg
cmp
aam
(bad)
cld
xchg
lods
mov
(bad)
ror
aas
mov
fld
push
cmp
adc
push
rcr
xchg
jne
add
dec
arpl
icebp
add
sub
je
mov
xor
mov
inc
ins
es
in
in
dec
jbe
fs
pop
or
outs
rol
shl
cmp
dec
xor
shl
push
cmp
ret
cmp
push
shl
in
sbb
dec
sbb
rol
test
loop
sub
jns
loop
bound
es
sti
test
punpcklbw
int
inc
sti
cld
ins
daa
push
std
cmp
or
cmps
push
imul
mov
fist
in
push
dec
mov
jmp
pop
push
lods
loop
jbe
mov
xchg
jae
sub
test
add
fcomip
fs
call
popf
cmp
cmp
add
inc
enter
in
cmp
sub
daa
cmp
sbb
jno
ret
(bad)
mov
xlat
jmp
jp
mov
mov
repnz
jmp
add
test
adc
lds
int
fs
sub
movs
dec
or
rol
adc
gs
icebp
and
leave
sbb
push
pop
in
or
mov
repz
push
inc
repz
pop
xchg
mov
xchg
ret
inc
push
test
or
loopne
fisub
mov
outs
(bad)
fdiv
loop
repnz
mov
sbb
jne
cmp
inc
xor
sbb
shl
outs
or
enter
lods
(bad)
and
je
ret
or
daa
and
(bad)
retf
adc
dec
not
push
adc
imul
mov
(bad)
shl
test
add
pop
(bad)
pusha
fld
pusha
cmc
mov
xchg
movs
test
jg
push
test
jmp
imul
sbb
ds
jmp
int3
push
scas
ret
pop
ret
jmp
dec
es
or
sub
inc
push
jge
jne
xor
mov
shr
ficom
loope
dec
test
stos
mov
jl
jo
test
popa
adc
shl
sbb
test
adc
xor
movs
std
test
mov
js
(bad)
fcomp
or
in
into
jns
sub
lea
ficom
cmp
and
sbb
ins
add
add
inc
jnp
rcr
xor
pop
outs
adc
jl
dec
cmps
pop
es
lock
inc
std
les
push
pop
fiadd
(bad)
and
or
jge
fdivr
mov
movs
cmps
sbb
cld
jle
push
sar
jns
xor
fcmovbe
dec
mov
adc
push
movs
add
push
mov
iret
push
pop
aam
cdq
mov
or
mov
sub
movs
aam
daa
mov
lods
or
push
and
sbb
not
pop
cmp
adc
lahf
sbb
jmp
sub
outs
jns
loopne
xchg
dec
cmp
or
out
pusha
aad
icebp
xor
inc
cmp
and
(bad)
mov
push
test
push
dec
into
pop
retf
xor
or
gs
pop
mov
sti
pushf
xchg
or
mov
mov
or
cs
sub
hlt
in
dec
hlt
das
xor
pop
inc
mov
icebp
pushf
out
(bad)
loop
push
mov
bound
sbb
jl
fidivr
dec
xchg
into
cmp
adc
int
dec
add
ss
imul
cld
in
adc
cld
jno
scas
jle
jae
jmp
imul
mov
inc
and
push
inc
pop
xchg
sub
cmp
dec
xchg
sub
addr16
xor
sub
(bad)
in
inc
(bad)
and
and
cwde
sub
cmp
cmps
lods
push
jns
push
rcr
mov
dec
es
bound
scas
out
or
ja
inc
stc
dec
mov
stc
jle
dec
or
retf
mov
add
pop
sub
jl
mov
fisub
std
inc
or
mov
cmps
pop
mov
xchg
xchg
add
stc
pop
xlat
and
lods
dec
jmp
int3
adc
xchg
sbb
add
pop
cmps
jno
xor
xor
xchg
xchg
(bad)
or
cmp
in
je
aam
out
loope
sub
ja
inc
mov
sub
imul
pop
xor
cmp
adc
popf
adc
stos
mov
xor
cld
test
mov
pop
ins
repz
(bad)
mov
sbb
rcl
in
and
or
stos
xor
dec
mov
mov
mov
(bad)
outs
rol
fcomip
std
add
push
mov
xchg
or
cwde
inc
ret
sahf
adc
adc
mov
dec
cmp
iret
bound
xchg
sub
or
sbb
cmp
mov
mov
test
or
call
pop
xchg
icebp
jl
enter
and
and
mov
push
sbb
sti
jb
std
dec
and
mov
adc
adc
pop
loope
scas
sti
fwait
dec
sub
cmp
jmp
scas
int
sti
addr16
mov
arpl
mov
fst
add
repnz
jno
push
(bad)
mov
add
(bad)
xor
stc
pop
movs
hlt
push
inc
mov
sub
pop
inc
xor
dec
inc
into
ret
xchg
shl
sub
rcl
sbb
lds
mov
and
dec
and
(bad)
pop
sub
xchg
xchg
mov
push
aas
xor
mov
adc
test
aas
test
mov
mov
mov
lods
das
popa
idiv
push
stos
dec
test
lea
mov
neg
dec
mov
cli
dec
mov
stos
sbb
push
add
iret
or
sbb
stos
out
add
(bad)
mov
jmp
pop
jge
push
xchg
and
mov
(bad)
fs
cmp
aas
mov
(bad)
popf
sub
pop
nop
(bad)
rol
es
dec
mov
sbb
cmp
xchg
lds
or
(bad)
mov
test
xchg
dec
and
ficomp
push
rcr
scas
dec
mov
pop
inc
pushf
ror
out
push
add
data16
(bad)
or
or
adc
push
adc
shr
add
popa
sub
in
xor
das
imul
sbb
and
push
add
outs
jno
popf
dec
xchg
ret
fs
push
aas
mov
dec
mov
fisttp
add
iret
not
add
arpl
pusha
int3
push
in
pushf
jno
cwde
iret
jle
jbe
call
stos
inc
adc
add
jno
jbe
(bad)
in
add
xchg
jmp
repnz
add
mov
xchg
ret
retf
rcr
adc
mov
jecxz
loopne
test
mov
mov
lock
lock
jecxz
push
daa
jg
scas
xchg
scas
or
adc
cmps
aad
mov
imul
aam
pushf
jno
out
into
xor
jle
repnz
movs
bound
xor
cmp
icebp
xchg
sbb
inc
xchg
icebp
bound
sbb
lods
out
or
nop
fild
fwait
(bad)
fsub
dec
movs
sahf
fnsetpm(287
fld
mov
dec
pop
es
jmp
mov
cmp
adc
xor
fistp
arpl
stc
xchg
jl
movs
icebp
idiv
add
sub
add
sbb
cmp
push
mov
std
add
or
mov
int3
lahf
mov
mov
lea
jmp
sbb
jne
cmp
push
into
test
inc
xor
mov
jmp
popf
cmp
push
xchg
test
mov
aaa
mov
or
(bad)
loop
loopne
fs
mov
in
xlat
pop
out
push
adc
jmp
shl
jb
mov
js
mov
jae
cwde
xchg
in
cld
pop
shr
cdq
inc
sub
mov
popa
lea
jp
enter
popf
retf
push
cli
inc
lea
jae
scas
(bad)
push
add
repz
or
mov
and
fisttp
adc
test
ret
sbb
out
sbb
retf
cld
add
test
mov
pop
fistp
jno
xchg
rcl
enter
es
add
jns
pop
xchg
les
push
dec
fimul
pop
xchg
and
lods
push
icebp
adc
daa
xor
test
xlat
xor
outs
pop
sub
(bad)
shr
(bad)
mov
push
jb
push
and
xchg
and
int
out
and
mov
add
jae
mov
fsub
shr
xor
jge
lds
in
xchg
dec
lock
ja
xlat
or
popa
jno
cdq
add
mov
je
imul
nop
jb
cld
add
pop
sub
pop
xor
mov
imul
xchg
xor
sub
out
add
hlt
aam
and
push
xor
pop
aam
sti
mov
test
cdq
lds
sar
sub
movs
loopne
mov
push
pop
nop
stos
pop
jns
stos
popa
jae
lahf
loopne
cs
arpl
cmp
pop
fs
and
ss
push
mov
adc
inc
or
nop
(bad)
out
mov
test
cmp
test
jge
int3
push
mov
mov
ud2
and
sub
(bad)
mov
retf
push
or
mov
mov
xor
mov
sub
test
and
mov
jmp
dec
outs
push
pop
push
fs
sbb
xchg
ja
xchg
sub
inc
xor
push
push
or
sbb
mov
adc
(bad)
fnstcw
cmp
clc
addr16
sub
and
(bad)
cmp
imul
dec
mov
sub
dec
jne
pop
test
mov
movs
mov
fsubr
mov
shl
cmc
popf
mov
aam
inc
xchg
jbe
aam
ret
or
fs
aam
push
cli
cmc
push
retf
sub
mov
dec
xchg
jmp
mov
xchg
fstp
scas
mov
gs
cld
js
leave
push
sahf
dec
pop
ficomp
inc
or
sbb
jg
add
or
cmps
in
cmp
sbb
in
ror
xchg
cmp
or
pusha
xchg
mov
aaa
cdq
mov
shr
addr16
mov
repnz
dec
in
and
inc
xlat
pop
or
gs
push
inc
or
xor
and
cmc
pop
jbe
cwde
cmp
les
fcom
xor
mov
xchg
arpl
fwait
push
js
clc
dec
sbb
cs
fild
add
test
inc
xor
push
lods
or
inc
clc
into
pop
cmps
aad
xor
cmp
test
cmps
jge
fiadd
pop
in
pop
push
neg
jecxz
mov
pop
aad
dec
les
push
fistp
xchg
(bad)
cwde
mov
psubq
loopne
or
xor
bound
mov
push
push
icebp
mov
xor
ins
mov
js
and
cmp
cwde
pushf
lds
inc
outs
mov
xchg
xor
sbb
es
aas
push
pusha
std
dec
and
xchg
clc
xlat
inc
stos
ins
jmp
dec
jnp
or
adc
mov
add
movs
add
ja
lods
pop
outs
mov
test
call
test
jmp
sub
cmp
in
mov
push
in
fdiv
cmp
jl
mov
jbe
lsl
mov
jl
xor
fcomi
mov
std
fnsave
mov
ins
les
jl
inc
xor
call
mov
out
jecxz
aam
inc
mov
cli
xor
aad
lock
fmul
adc
aaa
ret
popf
cmp
ins
pop
not
lds
mov
adc
inc
pop
xlat
loope
jmp
call
xchg
xchg
jbe
or
fst
mov
es
stos
or
sub
jnp
dec
scas
mov
push
std
not
pop
test
push
xchg
adc
add
(bad)
push
cmp
mov
mov
adc
dec
jecxz
pop
das
call
cmp
shl
ss
xchg
xchg
daa
shl
mul
repz
outs
ficomp
aaa
jmp
cmps
pop
(bad)
das
fisttp
dec
mov
sbb
fstp
cdq
mov
sub
into
arpl
add
or
std
or
call
sahf
in
outs
lock
mov
das
mov
mov
rol
(bad)
ror
jle
mov
mov
jecxz
push
adc
ror
jns
stos
sub
mov
lods
aas
jbe
loope
ret
mov
sbb
adc
data16
xchg
retf
xor
add
sahf
dec
pop
jo
loope
and
lods
sub
xchg
jne
scas
in
mov
adc
sar
sub
add
pop
fimul
mov
xchg
jmp
mov
test
aad
call
mov
arpl
dec
sbb
or
pop
mov
icebp
or
add
sub
in
(bad)
retf
les
sub
mov
(bad)
std
dec
call
mov
push
ins
xor
inc
dec
les
sar
jmp
inc
imul
push
add
cmp
mov
jmp
jmp
pop
movs
adc
clc
mov
js
and
push
into
adc
rdpmc
lds
mov
ja
nop
xchg
out
das
dec
adc
cmc
dec
dec
add
in
movs
int3
xor
cdq
sbb
push
xchg
adc
push
and
jno
je
aam
data16
xchg
(bad)
xor
fs
mov
fnstenv
mov
stos
adc
adc
pop
sbb
mov
data16
dec
inc
inc
rol
mov
lds
pop
mov
rcl
pop
jb
dec
jbe
xor
movs
mov
push
retf
mov
sbb
mov
lahf
pop
dec
jmp
dec
pop
outs
(bad)
adc
test
push
fdiv
sbb
adc
retf
enter
and
addr16
int3
int3
xchg
imul
cwde
lahf
int
in
xor
inc
retf
pop
push
jmp
jmp
jge
jmp
cwde
mov
mov
mov
push
ja
loope
xchg
push
loop
jmp
jmp
and
sub
div
mov
sbb
xor
aam
call
or
pop
adc
jle
test
out
(bad)
inc
xor
push
mov
jp
daa
jg
cli
fisttp
pop
sub
push
jns
fstp
(bad)
mov
cli
in
mov
mov
cmp
mov
ret
aad
ficomp
outs
sti
mov
je
retf
lods
and
test
pop
test
add
dec
cmps
imul
or
add
(bad)
mov
je
push
pop
(bad)
in
je
repz
in
add
mov
xor
(bad)
ret
inc
xchg
data16
mov
test
ins
jecxz
mov
jns
xchg
mov
adc
jmp
aam
jp
sti
jp
add
mov
sbb
es
add
leave
mov
aaa
mov
popf
call
scas
dec
in
adc
inc
inc
pop
movs
stos
and
ds
retf
pop
fist
into
mov
call
out
outs
add
xchg
pop
xor
cmps
(bad)
and
movs
mov
adc
adc
into
call
dec
mov
cld
push
pushf
pusha
add
cmp
pop
stos
in
ror
pop
or
imul
push
std
cmp
mov
jnp
popa
in
sbb
and
add
pop
pop
jb
mov
clc
out
push
add
test
out
cmp
fcomp
loope
xchg
xchg
js
cmp
enter
or
pop
xor
std
daa
xlat
lock
cmp
imul
inc
push
dec
lds
push
cwde
imul
sbb
xor
ret
inc
adc
psraw
sub
jnp
mov
out
lods
scas
pop
repz
loope
loopne
push
jns
push
xchg
mov
imul
or
jg
jecxz
add
sti
pop
ret
mov
mov
xor
clc
int3
xchg
xor
sti
leavew
call
repz
out
xchg
jmp
xor
adc
cmps
cmp
test
cmc
push
add
inc
in
aaa
mov
cmps
arpl
(bad)
xlat
gs
dec
loopne
fistp
or
mov
pop
lahf
sbb
sub
mov
iret
push
xor
scas
(bad)
das
adc
pop
movs
test
int3
popa
in
jl
sbb
add
adc
sub
or
jb
retf
ss
and
xor
dec
cmps
xor
pop
out
jns
jmp
sar
std
or
out
and
rcl
add
stos
ror
pusha
fsub
js
fld
nop
movs
or
and
push
inc
xchg
push
cdq
lea
xchg
lahf
ja
mov
loopne
xchg
and
jecxz
aaa
jns
ffreep
sbb
dec
call
inc
movs
push
aam
mov
pop
(bad)
fild
cmp
(bad)
xchg
test
sub
gs
mov
cdq
jbe
jmp
scas
(bad)
jge
repz
adc
xlat
mov
or
aaa
sar
mov
sar
cmps
bound
imul
jp
jns
out
sub
and
mov
cmp
das
jne
es
fist
inc
or
repz
push
addr16
push
sbb
(bad)
dec
jae
add
leave
lea
sbb
ret
push
or
sbb
leave
jno
mov
and
mov
adc
call
(bad)
cmc
ins
dec
call
pop
not
mov
mov
sub
ffreep
out
jecxz
ds
pop
jns
or
mov
mov
mov
mov
mov
mov
lds
cmp
cmp
xor
in
xchg
cmp
mov
or
jge
mov
or
push
add
push
pop
ins
mov
jmp
daa
fld
mov
call
call
inc
cmp
jmp
push
inc
push
cld
sub
add
jg
aaa
mov
pop
jo
mov
adc
jne
cmp
cli
push
jle
push
call
pop
xchg
ds
mul
xlat
and
add
lds
pop
mov
in
jns
(bad)
xor
outs
sub
jecxz
pop
ds
scas
pop
dec
or
(bad)
stos
cmp
imul
push
es
mov
sbb
or
popf
mov
adc
or
push
call
and
mov
shl
push
mov
frstor
mov
fsubr
call
popf
fs
push
pop
retf
add
jmp
xor
add
cmp
es
icebp
(bad)
mov
(bad)
push
dec
pop
jmp
jns
cmp
xchg
test
inc
add
loope
test
dec
js
inc
pusha
or
xor
pop
loopne
lds
loopne
dec
js
std
cmp
repz
cmps
data16
jne
repnz
ret
cmps
dec
jae
iret
pushf
sahf
xlat
push
je
iret
loope
cmp
js
pop
sbb
dec
rol
mov
add
or
adc
jbe
pop
shl
mov
(bad)
cmp
and
jno
jg
(bad)
pop
mov
out
sbb
dec
add
inc
fnsave
(bad)
out
push
inc
inc
jo
dec
pushf
push
popa
mov
loope
sub
pop
test
cli
and
push
push
es
pop
ins
cmp
fiadd
inc
fistp
lods
add
push
adc
je
mov
shl
pop
popa
jns
xor
(bad)
stc
int3
add
icebp
(bad)
and
add
add
jae
mov
xor
ret
loope
push
xor
arpl
jmp
stos
add
aas
adc
fistp
mov
call
mov
repnz
pushf
out
imul
fdiv
lea
xor
push
or
push
push
sub
mov
mov
ss
mov
mov
jecxz
and
loopne
cmp
sub
js
fwait
sti
add
sub
sbb
test
or
sub
mov
repnz
retf
mov
scas
xor
sbb
jp
stos
scas
lds
and
int3
jp
imul
pop
cmp
aad
call
int
je
repz
cmps
or
adc
and
(bad)
pop
adc
lock
(bad)
jno
mov
lods
out
addr16
or
jne
bound
pop
outs
inc
xchg
mov
jae
daa
hlt
xor
lods
mov
xor
das
sbb
xor
daa
jp
add
xchg
push
pop
outs
xchg
push
outs
jmp
cmc
scas
clc
sar
jo
pop
pop
stc
xchg
inc
mov
lods
(bad)
dec
inc
push
pop
sar
shr
mov
pop
shl
es
stos
xchg
jl
pop
add
out
xchg
push
leave
ret
xor
int3
mov
adc
(bad)
pop
sahf
jae
and
(bad)
call
cmp
sbb
xor
cli
mov
pop
cmp
sbb
jns
mov
jnp
stos
lahf
pop
and
lods
ins
xor
adc
or
sub
inc
push
xor
pop
bt
xor
test
(bad)
gs
xlat
or
or
add
js
call
out
add
sar
xchg
mov
mov
mov
outs
pop
cmps
pop
addr16
push
jecxz
fidiv
rcl
out
jb
dec
push
mov
inc
xchg
push
jne
or
xor
popf
or
cmps
mov
dec
dec
test
fisttp
jp
jg
rol
mov
pop
inc
cld
and
add
add
rol
fdiv
mov
add
cmp
into
jg
cdq
out
into
ss
mov
ret
std
add
xchg
jo
dec
jne
scas
sbb
mov
adc
cmps
addr16
jg
or
dec
repz
push
int
jo
sahf
mov
pop
ss
mov
repnz
retf
or
aas
cld
mov
jmp
loop
sub
cmp
and
inc
aas
pop
cld
int
repz
xor
pop
inc
lods
fsubr
adc
mov
sub
add
test
in
pop
xchg
dec
xor
mov
sbb
jmp
mov
inc
or
sub
cli
adc
and
mov
sar
and
and
cdq
push
or
inc
push
jne
mov
outs
ss
or
enter
and
or
mov
cmovne
cmps
test
mov
cmp
add
(bad)
(bad)
mov
mov
test
or
fs
pop
retf
mov
jmp
icebp
adc
pop
(bad)
int3
mov
sbb
mov
xor
xchg
xor
(bad)
popf
xchg
fisttp
cmp
adc
xchg
dec
or
jnp
pop
mov
pop
mov
(bad)
pop
fisub
outs
cld
xor
cli
mov
cmp
lock
fisub
call
adc
(bad)
stc
loope
cli
repnz
mov
jg
dec
jns
push
pushf
and
push
loop
(bad)
scas
mov
mov
add
aas
shl
cmp
iret
jbe
mov
data16
fs
leave
jae
mov
or
data16
sbb
shl
loope
fwait
sub
push
jo
stc
jecxz
xor
imul
or
jg
push
stos
xlat
stos
mov
adc
adc
pop
in
js
add
je
test
sahf
push
cmc
adc
(bad)
mov
popa
mov
cwde
or
mov
mov
fnsave
xor
mov
cmc
dec
popa
jecxz
cmc
enter
sbb
aam
ds
int
push
ja
xlat
test
xchg
lods
sub
push
dec
aad
cs
xor
lods
je
cwde
int3
(bad)
push
js
pop
cmc
cmps
lods
xchg
fistp
push
mov
ins
(bad)
in
js
or
sbb
popa
and
dec
call
push
xlat
and
ins
out
xchg
lds
push
push
xor
or
test
inc
idiv
dec
dec
syscall
and
adc
sbb
and
or
fdiv
and
inc
push
cmps
aam
pop
enter
cmp
xchg
add
loope
jg
mov
inc
jg
call
push
out
popf
push
and
mov
or
xor
xor
add
jge
pop
fdivr
fxsave
(bad)
mov
mov
cmp
jmp
clc
sub
and
pushw
push
call
fld
or
test
jge
sbb
pop
dec
and
inc
popf
test
lock
(bad)
cmp
nop
int
ror
(bad)
pop
sub
mov
push
call
pop
sbb
int
cmp
sahf
pop
xchg
lahf
xor
xor
xchg
movs
sub
xchg
push
or
bound
xchg
dec
inc
retf
push
or
sub
push
cdq
cld
mov
sahf
aaa
and
mov
into
neg
cmps
mov
push
dec
jle
push
ja
out
sar
mov
ja
adc
shrd
and
pop
hlt
xor
imul
ret
mov
cdq
stos
movs
mov
push
inc
mov
mov
sar
movs
push
data16
ret
inc
push
jge
dec
xchg
aaa
and
cli
aaa
cmps
movs
xor
inc
sub
ret
ja
cli
xchg
add
nop
xor
loope
push
sub
movs
ins
jnp
stc
popa
sahf
or
hlt
jno
cmps
cmp
inc
mul
add
cmp
xchg
loop
jmp
loopne
push
push
xchg
xor
xlat
adc
mov
mov
push
addr16
js
xchg
sub
shr
mov
adc
icebp
jge
cs
adc
mov
movs
pop
sbb
or
fist
call
push
jecxz
jg
ja
pop
shl
xchg
dec
xchg
mul
ds
mov
pop
mov
sahf
test
ds
mov
push
cdq
dec
ror
clc
mov
test
and
adc
lea
ins
jmp
pop
loope
inc
jno
call
sub
xor
or
fs
popf
jle
adc
aad
pop
sbb
(bad)
cmp
dec
inc
loop
push
push
aaa
out
or
(bad)
jmp
rcl
adc
loopne
test
sbb
dec
rcl
inc
call
cmp
adc
and
out
push
das
imul
lea
inc
cmps
xchg
scas
aad
repz
imul
stos
iret
dec
add
lock
xor
dec
int
hlt
push
push
lds
jae
mov
repnz
arpl
cmp
dec
pushf
aaa
sbb
add
xchg
popa
mov
ret
int3
fisttp
outs
mov
push
(bad)
das
sub
mov
xchg
push
inc
int3
mov
(bad)
nop
(bad)
aam
inc
cmp
pop
jmp
mov
adc
movs
sbb
in
lahf
(bad)
jecxz
adc
mov
jo
pop
push
mov
xor
ret
hlt
mov
pop
xchg
mov
aam
and
ins
xlat
or
into
dec
in
or
cmp
fsubr
push
and
retf
test
jge
inc
lock
add
dec
(bad)
fwait
inc
in
int3
mov
mov
pop
and
xor
aaa
push
dec
mov
cmp
xchg
mov
imul
sbb
cli
push
das
push
and
into
push
jmp
jecxz
mov
and
fnstenv
mov
add
rcr
or
sbb
imul
int
xchg
mov
inc
xchg
adc
cmps
xor
xlat
dec
mov
popf
(bad)
mov
adc
pop
test
out
mov
aad
pop
call
mov
scas
mov
pop
cmps
jmp
push
mov
xchg
leave
lahf
jecxz
mov
adc
ret
sub
lock
xor
inc
mov
in
sbb
addr16
pop
push
(bad)
loopne
and
fsub
(bad)
in
movs
cmp
xchg
enter
aad
out
or
sub
xchg
je
add
mov
xchg
jo
mov
repnz
add
mov
sub
out
sbb
ss
or
mov
inc
pop
sub
fdivp
mov
icebp
fucomip
loopne
sub
frstor
pop
dec
(bad)
xor
push
fwait
jb
mov
cld
fwait
mov
add
ins
xchg
and
call
inc
movs
call
add
fsubp
ja
adc
lahf
push
je
outs
push
hlt
cmp
addr16
adc
inc
lds
clc
cmp
sbb
push
cmc
or
(bad)
stc
or
loopne
ja
mov
push
mov
cmp
scas
push
add
and
stc
mov
sub
or
add
leave
out
enter
pushf
data16
push
mov
add
push
xchg
loopne
dec
pop
jns
mov
je
nop
ins
sbb
cmps
sbb
popf
in
mov
out
jge
pop
xor
xor
stos
push
clc
leave
in
adc
out
stos
cmp
int3
pop
xor
push
mov
pop
mov
jne
aas
(bad)
mov
outs
jmp
lods
adc
in
rcr
repz
add
sar
or
jo
test
xchg
movs
push
mov
and
jl
js
push
xor
xor
mov
dec
sbb
mov
dec
clc
jne
fwait
lds
mov
je
stc
ja
push
in
mov
push
mov
or
scas
popa
push
dec
cmps
xor
push
sub
das
xchg
xor
push
mov
popf
idiv
mov
into
mov
cli
xlat
and
inc
sahf
jnp
js
jb
inc
inc
adc
sbb
jnp
(bad)
mov
clc
shl
ret
dec
or
dec
mov
dec
jbe
xchg
cmps
lea
xchg
add
xor
add
xchg
(bad)
into
dec
jl
mov
data16
mov
jo
mov
sub
jecxz
jmp
xchg
icebp
sbb
repnz
test
xor
jl
jns
inc
stc
cmps
and
jmp
cmp
test
jne
sahf
sub
mov
gs
xchg
push
inc
sbb
das
pop
push
sbb
imul
or
aad
hlt
leave
and
push
jg
mov
fnstsw
rol
ds
pop
cmp
sub
movs
inc
inc
ret
or
mov
jne
int3
in
test
jbe
pop
dec
jl
int
add
and
aas
std
push
mov
aas
arpl
push
shr
iret
stc
inc
lods
stc
cmp
lock
sahf
and
out
mov
enter
call
cmp
test
cmp
test
sbb
xor
bound
rcr
mov
lahf
dec
pop
aaa
sbb
adc
or
dec
adc
mov
daa
adc
cmc
clc
scas
cmp
and
inc
lods
xchg
jbe
(bad)
mov
mov
xchg
rol
pushf
and
push
fs
int3
xchg
and
xchg
(bad)
xor
cld
jno
mov
stc
lods
add
fisub
out
xlat
data16
enter
sub
xor
push
movs
jl
mov
sbb
scas
stc
lods
cmp
push
pop
test
jns
push
stos
out
ficomp
inc
sbb
adc
mov
clc
dec
ror
xor
scas
adc
lahf
or
mov
es
mov
or
shl
cmp
icebp
inc
xor
dec
push
sbb
movs
xlat
imul
int
jmp
inc
jo
dec
test
jae
or
cs
or
cmp
push
pop
mov
test
inc
icebp
or
hlt
dec
push
jne
sbb
dec
fwait
cld
cmp
jo
mov
mov
popf
aas
out
xchg
mov
fidivr
inc
pop
pushf
or
imul
cdq
add
xchg
fs
scas
(bad)
loope
cmp
xchg
xor
cmc
loop
add
jg
loop
ror
and
jecxz
add
das
inc
outs
push
and
pop
jge
jg
mov
loop
std
pop
adc
mov
(bad)
mov
jbe
jecxz
mov
not
mov
sub
sbb
int3
ret
movs
dec
inc
mov
mov
fidiv
icebp
mov
mov
leave
js
pop
pop
xor
mov
pusha
fcomp
dec
sti
shr
sbb
cmps
clc
scas
adc
stos
test
es
loope
xor
int3
(bad)
lock
jne
retf
jge
xchg
loopne
ins
loope
outs
loopne
mov
dec
mov
push
adc
outs
sub
clc
lods
cs
xchg
mov
(bad)
cmp
sahf
outs
and
push
fnstsw
mov
lods
rcl
xor
sub
xchg
jge
pop
ja
loopne
mov
out
inc
pushf
out
xchg
lods
stc
sar
fst
int
or
mov
clc
cmp
inc
popf
pop
dec
aad
mov
mov
test
mov
test
(bad)
mov
mov
mov
pop
gs
call
mov
imul
mov
div
sbb
int
es
or
in
or
mov
jbe
jle
(bad)
jb
popf
lods
cmp
push
mov
xchg
push
dec
test
hlt
xor
and
in
xor
rcr
mov
adc
mov
call
int
int3
ret
push
mov
cwde
loopne
(bad)
leave
mov
call
mov
and
add
call
dec
call
dec
xchg
scas
pop
and
je
sub
lahf
inc
and
mov
stos
jl
add
out
adc
mov
sbb
popf
out
sbb
jle
mov
jge
ds
jns
push
sub
pushf
mov
sahf
pop
cmp
or
mov
xor
inc
out
sub
dec
in
jbe
cwde
cdq
or
lds
lods
std
mov
inc
das
rcl
lods
leave
(bad)
movd
cmp
and
ret
mov
jb
mov
enter
cmp
lds
or
retf
mov
adc
jnp
movs
sti
repnz
ja
and
int
mov
ret
and
jae
pop
stos
cmp
aas
std
mov
pop
jo
sbb
lock
xor
pushf
test
arpl
dec
push
test
xor
or
push
daa
add
sub
mov
das
sub
push
push
mov
ror
xor
inc
clc
inc
call
xor
out
push
scas
mov
mov
jg
(bad)
bound
mov
or
add
sbb
cmp
and
cmp
mov
das
ja
fs
int
adc
xrelease
cwde
push
ja
enter
or
cmps
add
or
jle
movs
push
cmp
add
inc
adc
hlt
push
add
push
mov
loopne
ins
cmp
imul
(bad)
fidiv
rol
adc
shr
mov
inc
out
cmp
jmp
jle
sbb
xchg
and
stc
jl
push
movs
and
gs
push
mov
mov
and
jp
rcl
aad
push
xchg
and
sub
mov
retf
or
push
push
cmps
iret
add
xor
data16
mov
mov
addr16
and
mov
fsub
popf
addr16
sub
adc
bound
stos
fild
gs
enter
sub
xchg
mov
jb
push
mov
jle
(bad)
jbe
adc
mov
jbe
test
jle
out
and
fstp
jmp
mov
sub
popa
sub
add
sbb
aad
rol
jl
xchg
mov
push
and
mov
inc
cmp
xor
in
jg
imul
shl
enter
sbb
es
js
jo
fdivr
or
into
mov
sub
imul
mov
xchg
stos
xchg
retf
test
push
iret
(bad)
addr16
icebp
dec
ss
das
jae
jmp
mov
dec
dec
pusha
xor
in
(bad)
in
in
sahf
jmp
jnp
and
push
out
mov
cs
push
cmp
xchg
push
jno
jecxz
xchg
add
xchg
scas
pcmpgtb
add
xchg
add
inc
jb
xchg
mov
jge
xor
pop
mov
add
mov
bound
leave
shl
retf
inc
ror
ror
mov
or
mov
jno
pop
mov
movs
or
or
cs
comiss
cld
inc
sbb
push
clc
push
jmp
mov
pop
pop
loop
fld
cmp
shl
jae
icebp
add
ret
lahf
cmp
mov
scas
jmp
mov
mov
(bad)
sbb
sub
mov
out
jb
sub
inc
jmp
std
ficomp
mov
mov
sub
add
mov
fsubr
xchg
mov
and
xchg
mov
dec
pop
scas
dec
in
mov
push
movs
jge
call
mov
lods
xor
mov
int
fcomp
out
fstp
mov
fdivr
pop
out
stos
shl
cdq
pop
dec
sub
std
jg
sti
rol
cmps
mov
or
js
adc
test
imul
fcmovnbe
int3
scas
rcl
repz
pop
adc
repnz
dec
rcr
mov
(bad)
loopne
dec
xor
in
outs
sbb
push
xchg
repz
aad
aas
pushf
call
in
dec
sub
mov
cs
inc
xchg
mov
mov
xor
pop
(bad)
xlat
sbb
mov
or
stc
fwait
lea
jge
cmps
cdq
ja
popa
push
jne
cmc
xor
ds
int3
out
rol
and
pop
mov
cmp
jb
inc
call
test
stos
popa
xchg
xchg
ds
aam
dec
adc
scas
sbb
mov
pop
xor
pop
test
inc
and
test
mov
or
cs
stos
arpl
pop
xchg
pop
jmp
ret
loopne
cmp
(bad)
enter
fnstcw
ins
push
jne
jnp
je
pop
mov
stos
push
ss
push
adc
sbb
mov
xor
inc
jae
out
mov
push
adc
xchg
sub
imul
(bad)
cmp
cwde
cmp
(bad)
sub
aas
cmp
pop
and
sbb
push
push
ja
loope
cwde
call
xchg
adc
rcl
cmp
jne
inc
inc
call
fnsave
sahf
cmp
xor
ret
mov
adc
push
add
pushf
push
repnz
stos
das
add
xor
cdq
cmp
aam
adc
or
dec
inc
loopne
xor
push
jne
jns
pop
retf
addr16
pushf
hlt
fiadd
cmp
xor
mov
sbb
cmp
xor
stos
pop
pop
sbb
loopne
popa
ins
jae
inc
xchg
cmps
fwait
pop
stos
sub
xor
mov
mov
mov
ins
xor
pop
pop
cs
cmps
out
push
push
scas
call
sbb
inc
repz
push
sbb
sti
xchg
hlt
push
add
scas
in
mov
ret
popf
add
push
xor
inc
fs
shl
les
movs
js
call
in
sbb
js
xchg
dec
inc
ins
pop
pop
xchg
aas
pusha
arpl
test
cmp
mov
dec
cmps
inc
aas
cmps
aaa
sub
and
mov
clts
out
sub
(bad)
jg
push
pop
repnz
mov
push
jo
pusha
jmp
ins
xchg
adc
fisub
mov
pop
repnz
mov
pop
in
stos
dec
jmp
jle
test
pop
inc
call
cmps
int3
into
stc
aaa
mov
mov
cmc
jl
xor
jge
lods
movs
jnp
je
fldcw
int3
jge
push
out
or
pop
mov
rol
sbb
lods
pop
popa
pop
xchg
test
adc
or
cmc
mov
not
jnp
cmps
jbe
push
sub
or
dec
pop
or
ficomp
mov
mov
sub
push
addr16
lds
xchg
jns
pop
mov
(bad)
call
jnp
dec
mov
pop
inc
in
js
pop
inc
xlat
push
call
mov
je
rcl
mov
ja
add
dec
jl
ins
push
test
shl
pop
les
inc
loop
sub
pushf
mov
mov
lock
lock
mov
inc
jmp
xchg
and
xor
push
ss
mov
sar
ss
iret
xchg
or
shl
xlat
xor
adc
mov
leave
out
xor
aam
dec
xor
pop
mov
push
and
(bad)
jns
nop
stos
(bad)
pop
fdiv
push
test
addr16
or
cmp
adc
or
clc
lds
inc
xchg
xchg
outs
lds
fidivr
pop
jbe
inc
movs
scas
pop
aaa
sub
(bad)
mov
sahf
dec
out
ret
cmp
jnp
cmp
fs
dec
sub
push
sbb
add
jb
mov
sub
nop
or
sbb
xlat
xor
std
js
and
pop
add
pop
pop
xlat
arpl
jne
lea
pushf
xchg
mov
scas
adc
add
dec
mov
mov
push
jno
nop
inc
test
and
push
rcl
lods
jo
xchg
ds
mov
mov
mov
jge
in
cmc
jge
loope
test
xor
(bad)
rol
cmc
push
jne
dec
mov
or
stc
inc
sub
cmpunordps
or
and
mov
or
cdq
fidivr
call
cli
cmp
sub
adc
lds
clc
and
sub
fwait
fwait
xchg
std
cmp
add
fs
pop
xor
add
adc
xchg
mov
das
dec
fst
sbb
pop
jmp
jne
sub
(bad)
cmc
pop
dec
inc
iret
(bad)
scas
gs
scas
std
cmps
cmp
jb
mov
dec
dec
add
mov
out
or
fisubr
mov
out
sub
adc
gs
(bad)
mul
sahf
xchg
mov
lock
pop
shr
adc
pop
ja
out
ror
aaa
sahf
jae
daa
fidiv
cmp
sbb
jle
inc
pop
pop
xchg
test
call
push
mov
out
stos
sbb
sbb
xlat
je
pop
mov
or
jmp
ins
xchg
mov
shl
xchg
cmps
ins
rol
cdq
and
out
(bad)
pop
inc
xor
jle
add
pusha
hlt
cmc
mov
inc
hlt
add
cmp
loope
(bad)
out
jecxz
mov
push
popf
ins
pop
cmp
sbb
cmp
jecxz
adc
jae
push
cs
ret
add
int
cdq
push
cwde
outs
mov
cmps
(bad)
inc
dec
loop
je
stc
jecxz
cdq
xor
inc
fsubr
fistp
cwde
pop
inc
call
mov
xchg
cmp
sbb
lds
mov
push
std
fwait
js
push
or
mov
fild
shr
dec
arpl
cmc
xchg
icebp
push
scas
pop
imul
xor
ds
adc
retf
test
mov
aam
test
xor
push
mov
jg
daa
pop
sbb
dec
aaa
add
mov
addr16
call
daa
int
pop
out
dec
daa
add
inc
sub
fs
and
aaa
in
pop
and
out
call
sub
int
(bad)
cld
dec
dec
xor
push
push
sub
pop
push
shl
test
dec
scas
sahf
mov
dec
add
sub
mov
fidivr
imul
push
jo
into
sub
sahf
push
lea
cs
leave
pushf
retf
pushf
mov
push
fwait
or
fisub
sbb
stos
imul
sub
sub
push
push
fbld
paddusb
shl
cmps
test
ds
fidivr
inc
xchg
mov
enter
mov
pop
rol
or
jp
addr16
aas
ror
and
pop
jecxz
test
aam
nop
mov
and
movs
xchg
jbe
movs
shr
sub
xlat
push
in
xchg
sub
daa
adc
mov
jecxz
adc
out
ss
pusha
test
jns
bound
pusha
jae
sub
(bad)
cdq
repz
sbb
push
sub
out
in
and
pusha
hlt
mov
sar
mov
mov
sub
mov
dec
mov
cmp
clc
call
retf
mov
fcomp
xor
dec
lock
and
stos
add
mov
enter
adc
push
pop
shl
repnz
pop
xor
sbb
iret
jb
rol
ja
push
or
pop
cmps
pop
sbb
ficomp
in
inc
loope
cld
mov
inc
jge
jle
or
aam
inc
pop
cmp
add
icebp
lods
aaa
mov
push
leave
push
in
xor
test
xor
mov
loopne
add
xor
dec
in
and
and
imul
mov
or
inc
xchg
ss
mov
inc
mov
sub
push
ret
push
xor
(bad)
adc
stc
in
neg
cmp
fs
das
jmp
add
adc
lods
add
add
out
fcomp
sub
shl
cmp
and
je
test
jmp
jmp
sbb
jle
xchg
fdivr
cmp
inc
in
cdq
jecxz
jo
mov
sub
xchg
pop
mov
fld1
or
adc
sbb
mov
cmp
mov
inc
pop
popa
pop
lods
push
clc
sahf
push
dec
dec
mov
stos
int3
sub
cld
mov
inc
pop
pop
loopne
jp
sub
jo
mov
adc
xchg
pushf
out
stc
jne
jl
out
xor
cmp
pop
sub
inc
pop
mov
and
fcom
ss
mov
js
rol
push
(bad)
jmp
add
hlt
imul
xchg
shl
arpl
std
enter
jno
add
mov
(bad)
adc
mov
mov
mov
push
or
push
mov
pop
dec
cmps
lfs
jno
sar
leave
mov
cmp
dec
push
xchg
adc
lahf
and
jns
push
hlt
call
retf
dec
mov
add
adc
loope
dec
xchg
mov
sub
fiadd
lock
push
popf
push
sub
fld
push
and
fsubp
les
lods
jmp
das
mov
cmp
out
std
cmp
sub
cmp
xchg
inc
dec
xor
int
es
(bad)
into
ds
imul
pop
pusha
jmp
loope
pop
jp
sub
(bad)
jae
ja
je
stc
das
pop
mov
nop
out
ret
je
jge
pop
xchg
js
imul
mov
fs
scas
dec
sub
cmp
fisubr
(bad)
push
jecxz
and
jecxz
dec
mov
sbb
lock
cmp
mov
mov
data16
jns
lods
or
movs
mov
jno
xchg
cmp
jecxz
mov
mov
add
fs
popf
cmp
jmp
nop
jno
or
inc
mov
les
sub
push
cmp
add
pushf
shl
pop
ds
jle
repz
cwde
or
add
pushf
sbb
stc
scas
mov
fld
and
xor
and
test
pop
mul
fisub
mov
jle
pop
mov
mov
xor
je
sbb
adc
cli
cld
sar
shl
jmp
sar
fs
or
mov
xchg
outs
lods
jmp
mov
mov
jnp
mov
inc
(bad)
cwde
popa
pop
push
add
aaa
ret
scas
out
je
mov
cmp
sbb
or
aad
xchg
scas
test
dec
movs
xchg
mov
rol
rol
and
cmp
mov
pop
ss
push
lock
xor
mov
sub
add
adc
dec
ds
cdq
mov
iret
aas
add
popf
in
push
sub
shl
sahf
(bad)
int
jl
pop
dec
stos
or
fcmovnbe
mov
xlat
popa
cmp
fistp
or
ds
xor
data16
sbb
retf
pop
aaa
repz
mov
xor
mov
add
fild
shl
adc
(bad)
pop
sbb
sbb
push
jbe
xchg
and
rcl
pusha
inc
sub
jle
fidivr
sti
adc
mov
push
cmp
adc
mov
push
or
(bad)
cmp
test
in
enter
bound
ins
aad
mov
xchg
movs
repz
xor
inc
movs
mov
jp
mov
aas
and
cmp
aaa
push
in
mov
cmps
cmp
es
jmp
retf
jae
sub
rcl
sub
sbb
mov
mov
inc
sbb
retf
sub
and
stos
iret
cmc
cdq
xchg
rcl
or
and
jo
mov
push
mov
jmp
jmp
push
xchg
loope
pop
shl
mov
inc
inc
loop
mov
mov
sub
test
(bad)
in
mov
daa
repz
(bad)
cmps
mov
outs
dec
and
arpl
pop
mov
add
or
test
or
mov
shl
(bad)
ins
jno
jns
cmp
test
pop
iret
or
jge
stos
dec
(bad)
or
cmp
in
xchg
sbb
pop
pop
sbb
movs
pop
or
push
ror
jns
or
loop
cmp
test
ins
aam
call
xchg
mov
popf
jmp
inc
out
sub
jb
and
aas
xlat
fcmovnbe
push
test
mov
cmp
pop
es
mov
add
jmp
xchg
(bad)
call
xchg
mov
test
ret
push
xor
or
xchg
div
inc
inc
scas
jo
dec
mov
xor
lahf
mov
mov
loopne
fild
cmp
cmp
xor
movs
sbb
sub
dec
xchg
inc
out
or
pop
shl
add
dec
ror
sahf
jge
arpl
mov
js
loopne
dec
sar
jecxz
test
dec
adc
scas
mov
jno
rol
cmp
mov
call
das
leave
in
inc
mov
addr16
or
test
jnp
jbe
cmp
add
mov
xor
aaa
js
(bad)
push
aam
sub
lods
mov
push
sbb
inc
test
fdiv
mov
pop
or
pop
cmc
or
ror
pop
out
or
xchg
fdivr
push
loope
mov
les
sub
xor
mov
pushf
int3
jne
sub
cli
out
imul
mov
pop
jmp
add
xor
add
dec
push
xor
outs
retf
out
(bad)
shr
sub
mov
fdiv
sub
push
push
in
pop
add
xchg
xor
ins
mov
stos
push
int
mov
adc
mov
xchg
xchg
dec
iret
js
ja
mov
fisttp
ss
xchg
retf
mov
push
ss
jb
sar
xchg
daa
scas
retf
stos
pop
mov
test
sub
ins
pop
sub
or
cmc
pop
repz
pop
neg
add
xchg
fistp
sahf
pop
pop
outs
add
xchg
retf
test
jae
dec
or
pop
or
loopne
dec
adc
sbb
adc
dec
mov
mov
inc
cmp
xchg
out
mov
adc
out
and
push
mov
add
pusha
and
jle
and
pop
shr
clc
and
cmp
cmps
std
pop
ins
add
cdq
(bad)
and
xchg
xor
addr16
push
mov
jl
mov
adc
out
add
push
loope
test
jmp
daa
inc
xchg
pop
jmp
repnz
mov
fwait
and
or
test
add
adc
add
dec
fist
add
loope
pop
pop
outs
in
add
jne
jmp
jo
cmp
sbb
ret
or
(bad)
mov
int3
or
pop
retf
mov
in
imul
nop
test
ss
sub
mov
push
sbb
mov
jge
inc
pusha
js
inc
aam
push
sub
cmp
sbb
repz
dec
and
outs
sti
test
fs
iret
push
ja
xchg
cli
sub
(bad)
cmp
dec
sub
and
jp
out
mov
rcl
xchg
mul
jo
bound
cli
inc
add
inc
in
ret
jl
retf
call
fwait
cs
sub
dec
sub
xchg
jae
add
xor
push
aaa
push
push
aad
(bad)
push
jne
arpl
cmp
dec
movs
pop
pop
fs
and
xchg
sbb
and
sbb
pop
and
bound
push
jbe
je
push
mov
test
mov
ss
mul
inc
cmps
fmul
mov
nop
mov
shl
into
xor
in
push
jle
push
ja
or
cmc
iret
mov
mov
push
pop
inc
sbb
push
dec
push
xor
or
xor
fidiv
jmp
imul
sub
in
lea
adc
cwde
mov
lahf
xor
test
sbb
jo
movs
repnz
repz
add
ret
(bad)
frstor
call
xor
mov
push
loopne
test
leave
fild
pop
xchg
movs
(bad)
into
jle
test
shl
cmps
fs
xor
dec
mov
add
test
out
leave
pop
jb
mov
dec
jmp
adc
jo
dec
sbb
mov
std
push
push
pop
cwde
pop
test
cdq
adc
mov
data16
pop
mov
push
jmp
pop
lods
xor
or
sbb
iret
retf
fstp
lea
loope
sbb
popf
sub
outs
scas
rcl
mov
mov
add
sub
adc
gs
xchg
fadd
push
push
pop
retf
xchg
loopne
mov
or
iret
leave
xchg
mov
imul
mov
xchg
xor
outs
popa
nop
pop
mov
pusha
ja
sub
cli
mov
add
les
cli
into
test
pop
sar
cdq
and
arpl
cwde
adc
ds
movs
mov
xchg
xchg
call
mov
sbb
ds
ins
xor
into
cdq
clc
pusha
fild
add
lahf
push
cmp
adc
out
arpl
lea
ins
inc
jo
sahf
dec
pop
pop
push
nop
(bad)
out
int
cdq
(bad)
fcmovb
cld
push
pextrw
adc
push
pusha
into
aas
mov
push
sbb
jmp
and
leave
mov
out
xchg
int3
mov
das
jnp
xor
sti
mov
cmp
adc
dec
mov
push
jecxz
mov
sbb
adc
data16
out
loope
or
cld
and
ror
sub
adc
pop
(bad)
aad
sub
inc
cmp
icebp
js
dec
pop
xchg
mov
adc
repnz
dec
pop
xor
sub
mov
sahf
dec
xchg
pop
pop
push
fcomi
lock
fstp
test
dec
stos
inc
ret
xchg
mov
int3
pop
frstor
xor
mov
push
pop
xor
mov
out
je
add
mov
jo
mov
inc
push
out
sbb
mov
cmp
and
push
gs
ret
push
cdq
cmc
test
or
fst
jg
adc
lods
pop
aad
ss
cmp
or
push
aad
nop
xchg
mov
pop
sub
add
mov
add
push
sub
inc
cmps
test
jbe
xchg
adc
dec
and
or
mov
pop
adc
xchg
jmp
adc
add
jmp
pop
xchg
jle
aaa
jle
inc
out
aam
mov
inc
adc
xor
sub
add
cwde
das
cli
inc
mov
in
inc
mov
pop
xchg
adc
jl
in
addr16
pop
pop
sub
jns
fst
shr
inc
ror
movs
cmps
pop
test
cmp
cmp
sub
fcomp
stos
cs
pop
imul
mov
inc
popf
xor
jo
pop
sub
jmp
jo
jnp
mov
ffreep
and
pop
rcl
xlat
pop
mov
(bad)
mov
mov
out
js
push
or
rcr
and
sub
inc
ins
mov
loope
aam
mov
pop
cmps
xor
add
sbb
cmc
mov
leave
mov
scas
cmp
xchg
add
cmp
sbb
fmul
mov
hlt
mov
mov
out
mov
out
mov
repnz
retf
sbb
outs
cmps
into
outs
outs
mov
xor
push
pushf
jns
and
cld
cmp
push
lock
dec
dec
int
mov
inc
lock
cli
mov
mov
popf
ins
lock
sbb
mov
inc
sbb
aas
jmp
cmp
adc
mov
and
addr16
inc
rol
cwde
aas
and
mov
popa
add
cmp
in
movaps
cwde
dec
inc
sbb
mov
push
and
mov
arpl
cmps
sub
jnp
lea
lods
pusha
cmp
mov
mov
loop
pop
jmp
or
ror
push
mov
cmp
add
push
pop
loope
mov
data16
jmp
cli
movs
stc
add
hlt
aas
sub
pop
push
lods
mov
inc
dec
sldt
pop
in
or
and
xchg
(bad)
mov
rol
mov
sbb
clc
xor
cmp
mov
int3
mov
fs
cdq
add
and
fmul
dec
jb
rcl
cmp
(bad)
jno
pop
stc
popf
and
call
sbb
in
push
ins
(bad)
(bad)
and
and
sub
cwde
scas
xchg
add
jb
add
rcr
mov
mov
jns
adc
jnp
movs
loop
pop
add
sub
loop
pop
mov
test
sbb
push
icebp
pop
xor
jg
and
xor
sbb
out
pop
loop
cmps
cmp
sub
push
mov
mov
and
data16
xchg
ret
xor
test
push
das
clc
inc
push
push
inc
jge
ins
jmp
mov
ds
or
sahf
into
jae
sub
push
mov
fwait
jmp
cld
adc
add
mov
fs
add
gs
mov
pop
fist
mov
mov
pop
loop
lds
pusha
pop
hlt
xchg
pusha
mov
hlt
hlt
xchg
cmp
aas
mov
lahf
push
and
jl
sub
or
ja
ja
ds
inc
push
retf
sub
add
push
repnz
inc
cwde
outs
dec
lahf
aaa
pop
into
or
ror
or
xchg
push
(bad)
push
test
push
pop
test
sub
out
mov
(bad)
repz
aam
fsub
fiadd
stc
add
adc
jmp
clc
mov
(bad)
in
dec
push
mov
(bad)
jmp
dec
adc
mov
sbb
adc
and
in
stc
ss
and
jmp
das
(bad)
jo
lods
add
(bad)
bound
(bad)
and
(bad)
mov
aaa
dec
pop
xor
aaa
sbb
xor
shr
fisubr
inc
mov
xchg
iret
inc
idiv
dec
pop
and
daa
add
std
cmp
shl
loop
pop
fsubr
dec
fsub
xchg
int3
mov
inc
mov
cwde
mov
fsub
sub
sti
mov
and
test
cld
inc
xchg
test
jp
fist
arpl
pop
cdq
test
push
lock
inc
aas
sub
bound
(bad)
ins
(bad)
fadd
mov
fs
push
mov
xor
idiv
fwait
outs
aam
dec
daa
lahf
pop
sar
out
and
(bad)
fstp
mov
daa
jl
adc
mov
div
aad
mov
sbb
les
xchg
outs
ins
aaa
cmps
and
push
inc
inc
stos
ja
inc
not
out
loope
out
cwde
and
fsub
add
sahf
aam
lea
cli
mov
daa
xchg
sbb
xor
mov
mov
js
mov
aad
cwde
or
adc
dec
clc
ror
and
mov
jnp
pop
out
retf
sbb
xor
inc
add
(bad)
sub
pusha
push
adc
jge
adc
xchg
xchg
test
(bad)
adc
movs
and
mov
jp
fmul
push
add
xchg
(bad)
fisttp
dec
pusha
xor
push
dec
stc
push
iret
pop
sar
inc
sub
movs
or
and
mov
adc
daa
adc
jne
outs
fstp
or
retf
push
adc
pushw
dec
aad
push
das
sbb
pop
fidivr
je
or
shr
loopne
inc
push
xchg
cmps
xchg
std
icebp
pop
adc
iret
loope
iret
pop
jmp
push
mov
sbb
mov
es
adc
popa
fimul
xor
or
adc
xchg
cmps
cli
xor
or
dec
adc
neg
cmp
pop
fisttp
mov
hlt
mov
or
xor
pop
or
iret
push
or
xlat
fld
jae
add
call
scas
shl
jg
xchg
ret
outs
or
fsubr
mov
pop
jmp
inc
xor
xchg
sbb
(bad)
jbe
test
add
mov
adc
das
stos
shl
jns
sub
and
(bad)
jmp
movs
mov
jl
mov
iret
and
aam
(bad)
adc
std
mov
cs
retf
ds
adc
data16
fmul
dec
inc
mul
pushw
es
xor
nop
cmps
fcomp
push
lods
rcr
fwait
jbe
cld
imul
or
and
dec
dec
in
push
add
ja
lds
mov
(bad)
int3
pop
jno
and
fwait
ja
leave
int
push
jns
repz
jmp
inc
outs
js
(bad)
mov
lea
out
cmc
or
lahf
or
popf
xor
frndint
(bad)
mov
adc
and
push
cmc
movs
dec
or
cmp
adc
mov
ins
mov
(bad)
out
test
adc
sbb
cdq
add
xchg
hlt
cmp
call
xchg
inc
mov
dec
jmp
xor
test
gs
jae
xchg
jo
push
xchg
repz
movs
fisttp
(bad)
fcmovbe
mov
xlat
sbb
cmp
push
popf
ja
int
xchg
sub
cs
addr16
mov
sub
in
add
mov
adc
inc
adc
push
cli
mov
mov
cld
dec
mov
pop
cli
je
pop
xor
mov
sbb
fnstsw
or
xchg
xchg
jmp
push
adc
clc
cmps
scas
int3
and
mov
fadd
gs
(bad)
sti
pop
cmps
pop
dec
int
adc
and
cmp
outs
add
cmp
pause
loope
and
stc
cmp
push
dec
int
mov
mov
mov
jmp
daa
out
aas
pop
stos
sub
mov
dec
add
fwait
imul
popa
fst
xor
sbb
rol
int
or
cli
adc
mov
xchg
imul
xchg
scas
shl
fisub
out
ja
xchg
mov
mov
push
js
or
in
loopne
or
sbb
cmps
mov
(bad)
scas
sbb
idiv
lock
lods
cmp
sbb
imul
(bad)
jbe
iret
mov
into
rol
xor
loopne
cli
mov
jle
push
dec
(bad)
sub
rcl
popf
(bad)
sub
cmp
jle
push
and
add
mov
ss
(bad)
cmc
lds
xchg
mov
pop
popf
(bad)
inc
xchg
mov
dec
mov
call
repz
fcom
movs
adc
push
movs
in
cmp
sahf
inc
fldlg2
lahf
(bad)
or
jg
addr16
movs
add
inc
outs
xchg
outs
aas
cmps
lea
xchg
call
jno
aaa
or
mov
jbe
mov
retf
push
jmp
out
jmp
daa
shr
stos
frstor
sahf
les
mov
scas
pop
jecxz
or
jbe
sbb
push
push
nop
scas
je
sti
sub
or
xor
out
mov
(bad)
adc
sub
outs
push
mov
push
adc
in
aam
pop
bound
or
adc
mov
ffreep
repz
cmp
and
pop
iret
xor
pop
push
dec
das
mov
jne
mov
sar
xor
call
mov
leave
mul
stc
dec
xchg
pandn
in
cmps
xlat
lock
mov
aas
sbb
sub
jne
loope
pop
pop
cdq
aaa
mov
cmp
retf
xor
(bad)
test
dec
cmps
ins
mov
push
ja
mov
jp
or
rcl
inc
gs
shl
cmc
dec
mov
cmp
and
jecxz
mov
inc
adc
push
int
mov
lea
push
cli
or
in
or
push
fs
in
(bad)
adc
in
push
mov
int3
cmps
and
push
xor
je
stos
lods
dec
adc
xchg
mov
test
cmp
mov
jno
sub
jmp
popf
(bad)
push
xchg
jg
mov
stos
inc
cmp
stos
pop
sbb
fnstenv
dec
inc
scas
rcr
out
je
mov
add
sahf
fimul
mul
dec
jb
(bad)
aas
mov
std
lds
mov
add
mov
push
xchg
pusha
sub
xor
pop
(bad)
repnz
xor
add
xor
addr16
mov
sbb
inc
outs
xor
xor
js
int3
mov
std
retf
mov
fbld
inc
jecxz
dec
scas
jns
add
xor
call
pop
xor
pop
int
and
mov
call
add
xor
sub
int3
test
dec
pop
sbb
inc
sar
sub
popf
and
cmp
inc
into
in
shr
adc
sbb
jmp
ficomp
sbb
dec
and
xor
leave
sub
jnp
jmp
and
ja
push
sbb
or
pop
pusha
pushf
fsub
(bad)
adc
cld
dec
ror
xor
dec
pop
test
scas
jg
fistp
nop
inc
dec
loop
scas
sub
push
pop
fcom
sbb
sti
jle
call
(bad)
sbb
call
fimul
and
(bad)
lods
push
aas
and
hlt
ja
cdq
stos
and
and
adc
(bad)
sbb
rcl
mov
mov
leave
dec
pop
cld
(bad)
ficom
mov
pop
cwde
jl
add
(bad)
push
mov
pop
in
mov
xor
jbe
inc
inc
pop
lods
call
lds
jp
sbb
jl
cmps
mov
or
jno
xor
ja
pop
jp
dec
mov
mov
mov
loope
dec
inc
mov
cmp
shr
pop
movs
dec
in
push
mov
xor
push
mov
sti
cmp
add
push
sub
add
add
js
xor
push
jg
push
adc
jbe
mov
push
cmp
sub
gs
sbb
mov
add
(bad)
lods
mov
xor
adc
cs
int3
or
inc
adc
mov
in
sbb
dec
and
mov
mov
inc
jmp
test
in
xchg
push
cmp
lods
dec
pop
dec
(bad)
pop
xor
mov
or
rcr
(bad)
mov
fsubr
clc
outs
loope
pop
dec
dec
rol
sub
xor
adc
add
ret
outs
cmp
hlt
push
push
aam
enter
jns
xchg
push
push
outs
xor
test
cmps
mov
frstor
adc
gs
xchg
ror
dec
and
cmp
clc
and
stc
mov
mov
sub
popf
(bad)
and
mov
cmc
cdq
aam
sub
adc
test
sbb
sub
stc
inc
clc
gs
sbb
sbb
nop
repz
xchg
out
int
movs
jecxz
not
and
dec
push
and
mov
jecxz
push
idiv
cmp
daa
xor
dec
sahf
sub
xchg
jns
mov
js
stc
and
fisubr
jg
in
fmul
(bad)
(bad)
loope
sub
aaa
dec
cs
(bad)
or
mov
cmp
mov
popf
sbb
bound
in
sbb
je
jbe
(bad)
in
das
mov
jbe
or
out
js
loopne
scas
push
add
call
sub
sub
movs
mov
jo
sti
cmp
jmp
xchg
sahf
add
movs
cmp
adc
sbb
mov
adc
cli
das
push
and
jg
pop
sub
xchg
push
(bad)
cmps
aam
pop
mov
int3
and
aam
icebp
(bad)
pop
jmp
pushf
push
and
not
scas
dec
cld
fild
mov
ret
add
mov
xchg
mov
or
sbb
cmp
adc
add
enter
dec
pop
xlat
sub
rol
mov
shl
add
adc
or
dec
pop
mov
xor
enter
xor
xor
mov
scas
or
movs
inc
pop
mov
mov
cmp
pop
out
mov
fisttp
stos
mov
add
or
in
sub
mov
(bad)
and
mov
mov
outs
mov
pop
outs
shl
out
xor
pop
dec
jae
pushf
dec
xor
(bad)
enter
fcomp
mov
leave
jge
inc
adc
mov
mov
nop
dec
sar
das
lahf
jbe
pop
stc
mov
repz
int3
jmp
arpl
cmp
(bad)
mov
imul
xchg
xor
js
stc
cdq
jnp
in
ds
repnz
je
ins
jle
cli
xchg
sbb
ja
pop
rcl
and
les
int3
cmps
(bad)
push
and
cmps
xchg
inc
and
sub
add
cmp
or
lock
jns
clc
test
fwait
mov
jbe
call
adc
sub
mov
aaa
fistp
inc
xchg
cmp
scas
ret
mov
inc
mov
push
movs
mov
(bad)
lahf
add
gs
ins
jmp
sbb
xlat
ja
push
mov
shl
pop
fisub
in
dec
das
fsubr
les
jbe
or
adc
mov
jecxz
sub
int
pop
cmp
jae
aam
jae
pop
jae
jp
cmps
cdq
push
pop
mov
sbb
sbb
imul
enter
out
mov
mov
and
data16
dec
shr
sbb
cmps
mov
and
push
pop
out
ret
lea
mov
in
fwait
mov
or
lods
sar
and
fwait
pop
rol
inc
pop
jbe
jns
mov
scas
and
jp
cmp
data16
lea
or
hlt
jge
popf
ret
adc
addr16
cdq
outs
xchg
pop
push
and
and
pop
mov
push
pop
xor
add
aaa
mov
lock
inc
jge
xchg
xchg
mov
push
rcr
das
loop
aad
mov
test
pop
mov
sub
sub
xchg
fs
cmp
push
das
sbb
lods
jle
loopne
fldcw
into
pop
stc
cmp
leave
lahf
es
xor
fidivr
push
(bad)
push
mov
and
inc
push
outs
dec
jno
mov
mov
ins
mov
inc
pop
ret
add
gs
call
pop
mov
xchg
scas
or
or
mov
dec
xor
loope
ins
stc
mov
jns
or
std
jge
mov
xchg
frstor
(bad)
push
sbb
sahf
call
push
jns
xor
sbb
in
hlt
les
fucomi
mov
out
dec
xchg
pop
aad
pop
mov
cmp
fist
movs
dec
mov
mov
fs
xor
cmp
ins
sbb
mov
gs
fisttp
push
int3
sbb
push
adc
add
and
lds
jg
cmp
mov
mov
sub
retf
sub
loopne
sub
jnp
inc
pop
adc
xchg
dec
popa
jl
mov
rol
push
xadd
imul
cld
jbe
cdq
test
(bad)
sub
mov
push
inc
xor
imul
add
fs
aaa
aam
push
fdivr
inc
stos
or
sbb
stos
pop
adc
xchg
push
es
and
jge
fcmovne
rcr
sbb
rol
out
test
mov
dec
ret
jmp
sub
movs
pop
stos
(bad)
jge
dec
inc
sbb
je
sbb
leave
jl
xor
hlt
inc
sar
pop
inc
lahf
push
sub
neg
inc
paddq
cmp
sbb
aad
mov
sbb
pop
outs
bound
dec
jnp
in
or
mov
dec
mov
cld
adc
jmp
stc
mov
xchg
push
push
sahf
dec
data16
ret
add
jecxz
mov
inc
pop
fsubrp
push
push
add
fnstenv
daa
cwde
icebp
sub
in
jmp
push
cmps
addr16
jmp
dec
movs
fistp
ret
xchg
pop
push
mov
jge
mov
repz
movs
jnp
js
push
xchg
and
daa
jmp
loopne
dec
loopne
push
pop
adc
icebp
sbb
dec
fwait
ds
adc
mov
mov
stos
ja
outs
dec
ret
call
js
mov
dec
es
sub
add
test
shl
inc
daa
cld
fisubr
jns
dec
imul
mov
sbb
outs
cdq
aaa
mov
jnp
ret
test
pop
les
mov
mov
sbb
jge
or
cmp
xchg
add
pusha
imul
stos
(bad)
in
sub
add
xchg
ficom
mov
dec
mov
movs
xchg
sbb
or
xor
into
mov
or
cmp
leave
jge
mov
test
data16
sbb
shr
xor
add
cmp
leave
call
xor
inc
dec
adc
adc
cld
loope
ret
push
add
out
push
jns
dec
jmp
cmps
retf
clc
shr
jmp
dec
ror
dec
clc
mov
test
aad
push
mov
ja
inc
scas
mov
cli
jno
sub
sbb
pop
jl
sub
movs
inc
mov
and
or
ret
push
xor
ror
adc
fist
and
js
shr
mov
push
mov
sbb
test
or
arpl
sub
lahf
dec
adc
jle
and
in
and
mov
cwde
mov
inc
xor
push
jecxz
mov
jb
out
mov
div
stos
jae
adc
jl
sbb
aam
neg
dec
cmp
push
mov
fwait
or
sub
sbb
cmps
js
sub
pop
pop
test
fist
push
mov
jmp
inc
hlt
xor
ror
push
stc
push
sbb
test
and
xchg
out
stos
clc
jecxz
sbb
cmps
stos
ins
lods
fld
push
xchg
pop
jnp
gs
dec
adc
leave
mov
xor
sbb
lock
and
mov
mov
pop
push
popa
sub
scas
push
mov
test
xchg
pop
cmp
pusha
ins
add
les
sbb
dec
xor
push
push
aaa
push
loopne
mov
jbe
sbb
mov
mov
dec
pop
jp
adc
cs
mov
jbe
retf
fild
ret
call
or
inc
movs
test
adc
push
fs
jb
or
mov
pop
lods
adc
outs
sbb
popf
je
mov
(bad)
lock
dec
out
dec
movs
ror
jne
dec
iret
daa
aam
add
inc
adc
pop
add
call
loop
loopne
popf
arpl
jl
add
xchg
movs
mov
fwait
call
shr
mov
lahf
mul
mov
loope
ins
popa
imul
scas
int3
stc
adc
xor
or
in
repnz
sbb
gs
das
fbld
xor
fisubr
mov
xor
or
in
adc
pop
popf
(bad)
jecxz
imul
je
in
ja
mov
and
and
mov
adc
outs
mov
es
mov
out
adc
aam
adc
(bad)
into
jae
mov
mov
dec
div
es
add
in
dec
cmp
sub
fadd
movs
das
sti
mov
sub
outs
mov
mov
repnz
sub
fidiv
frstor
icebp
and
es
imul
add
mov
fwait
mov
adc
ss
(bad)
push
or
popa
jmp
fsub
sbb
dec
add
push
cwde
retf
add
sbb
xor
mov
jbe
and
dec
sbb
lods
gs
pop
stos
mov
in
push
add
ss
or
mov
cmp
cs
xor
add
test
push
xchg
xor
jnp
and
push
fnstsw
pop
mov
scas
gs
test
cmp
inc
cmp
popf
(bad)
jmp
nop
xchg
pop
inc
shl
add
or
idiv
jo
out
xor
jl
ror
pop
fcmovnb
retf
add
pop
mov
add
sub
(bad)
retf
xchg
int
inc
adc
retf
or
sub
xor
in
sar
loopne
pop
loopne
bnd
out
jecxz
mov
push
xor
sbb
push
scas
jns
pop
out
cmps
or
movs
and
jmp
out
push
sti
xor
pop
xlat
xor
ja
cmp
mov
in
(bad)
adc
fcmovnbe
cmps
jle
fdivr
test
ins
fnstsw
rol
push
or
cdq
outs
nop
je
imul
adc
cmp
mov
das
loopne
into
mov
pop
into
adc
push
jno
jb
push
shr
mov
sub
lods
cmp
mov
iret
in
inc
enter
iret
inc
loopne
test
pop
mov
rcl
je
pop
data16
imul
sar
repnz
adc
or
xchg
dec
shl
je
test
xchg
popa
les
pop
add
shr
sahf
xor
mov
hlt
retf
push
imul
and
push
and
test
ja
add
out
icebp
push
or
adc
dec
and
js
xchg
push
xchg
int3
or
popf
call
fadd
cmc
add
mov
adc
jbe
pop
movs
ins
shl
aad
push
add
cld
sbb
sbb
ins
lahf
adc
jnp
xor
and
rol
push
(bad)
pop
mov
push
and
sbb
mov
fsubp
cld
or
jne
mov
sub
add
das
inc
push
(bad)
jo
pop
mov
lods
jbe
add
dec
mov
movs
sbb
pop
cdq
and
(bad)
or
cld
mov
pop
icebp
ror
mov
ret
loop
adc
ficomp
aad
mov
popa
movs
fnsave
dec
inc
je
iret
lahf
sub
inc
mov
in
stos
ins
inc
popa
xchg
pop
adc
ss
or
(bad)
(bad)
xlat
outs
pop
test
inc
movs
push
xor
int
pmaxub
frstor
loop
jge
mov
adc
pop
and
add
lds
test
dec
outs
mov
jecxz
stc
ja
test
pusha
loop
ja
stc
jno
imul
loopne
and
sbb
push
inc
dec
sbb
xchg
push
rol
leave
std
mov
out
clc
add
mov
xor
inc
gs
pop
out
leave
fsub
lods
retf
icebp
test
mov
leave
aas
xchg
in
sti
sub
xor
cs
inc
fisub
scas
rol
or
shl
sbb
sbb
gs
or
add
mov
inc
test
in
push
call
in
adc
fbld
sub
imul
and
mov
rol
pop
fs
ins
pop
mov
mov
lock
xchg
mov
popa
xchg
lock
xchg
aas
in
retf
jbe
jl
sahf
stos
jecxz
or
or
in
jnp
mov
std
add
sbb
aas
aam
inc
mov
rcl
cwde
aad
mov
ss
sbb
mov
mov
(bad)
push
sbb
pop
lds
xchg
popf
add
cmp
sbb
inc
scas
xchg
push
stos
ret
jmp
lahf
movs
dec
jle
in
mov
inc
jne
inc
out
xchg
(bad)
addr16
inc
xchg
dec
ror
push
pop
enter
dec
mov
int3
mov
bound
xchg
mov
inc
pop
fneni(8087
add
call
push
(bad)
jle
mov
push
cmp
aam
or
movs
and
or
(bad)
in
es
cmp
bound
popf
cwde
ret
imul
cmp
mov
rol
test
retf
(bad)
and
repz
inc
imul
iret
push
mov
sbb
jg
clc
adc
std
sub
popa
call
pop
imul
jl
les
jl
ss
das
sahf
je
and
xchg
loopne
cwde
aas
cmp
imul
mov
adc
cdq
outs
pushf
loope
popf
mov
inc
push
xor
mov
adc
into
adc
jo
ds
loopne
ret
frstor
and
mov
sti
sub
lds
repnz
movs
imul
in
jp
and
xchg
mov
ret
stc
outs
mov
sub
(bad)
imul
jmp
pop
mov
xchg
aas
xchg
scas
sbb
in
das
rol
inc
cmp
add
or
mov
pop
lahf
shl
mov
sbb
xchg
add
mov
not
xchg
mov
out
jmp
jle
sub
pop
shr
mov
cmp
(bad)
and
mov
mov
push
mov
rol
xor
pushf
bound
(bad)
dec
imul
int
dec
push
cmps
xchg
pop
adc
jb
sar
jae
ss
int3
into
jmp
sbb
or
cmps
mov
(bad)
out
xchg
sbb
rcl
sbb
mov
imul
cmps
dec
dec
sti
(bad)
pop
(bad)
stc
xchg
push
add
cmp
sbb
fstp
je
in
dec
add
addr16
sbb
jmp
out
jmp
add
sbb
and
dec
out
loopne
mov
xchg
jge
or
lea
pop
into
dec
stos
jae
arpl
sbb
(bad)
enter
inc
xor
pop
ss
cld
stc
cs
fld
xchg
mov
push
jne
mov
and
test
add
sub
hlt
push
addr16
ds
inc
jnp
or
cmps
test
ins
mov
arpl
add
fxch
mov
ja
repz
jg
out
es
add
inc
scas
gs
cmp
inc
pop
jle
xor
outs
mov
push
mov
in
dec
cmp
xlat
call
shl
xchg
(bad)
sahf
movs
xchg
in
test
and
int
out
out
out
mov
sub
(bad)
jnp
add
repnz
dec
repnz
or
lds
inc
mov
jne
pop
dec
cmps
mov
fucomi
mov
neg
nop
popa
jno
dec
dec
xchg
mov
mov
mov
cmp
ss
sbb
in
inc
repz
xor
ins
mov
sbb
jmp
xor
mov
shl
mov
add
(bad)
loope
movs
xchg
sub
mov
rcr
fldenv
arpl
mov
jmp
mov
sub
inc
data16
retf
fsub
lds
add
dec
add
mov
mov
iret
sbb
adc
nop
pop
sbb
pop
push
pop
repz
test
sbb
xor
jg
or
jmp
mov
add
xor
pop
xchg
cli
xor
loop
out
jno
sbb
mov
and
cmp
pop
jecxz
fsub
xor
shr
push
or
repz
pop
jmp
in
sub
pop
in
in
sub
clc
leave
push
pop
test
add
push
leave
xor
movs
jnp
mov
jns
mov
xor
xchg
stos
lock
adc
mov
mov
ja
xchg
add
int
or
and
jne
out
mov
mov
mov
mov
aad
sub
inc
and
mov
and
iret
imul
mov
add
push
add
pop
mov
and
pop
jbe
movs
push
and
call
push
popa
js
xlat
test
mov
in
fiadd
lods
movs
pop
cmove
sub
ret
jb
add
push
lods
dec
and
loop
retf
scas
or
cs
push
push
ja
imul
fidivr
jmp
mov
mov
bt
dec
xchg
das
push
out
int
pop
cld
jae
sbb
xchg
in
rcr
inc
dec
addr16
or
mov
ds
jbe
mov
jae
mov
fcmovb
fld
test
cld
pop
std
aad
sbb
jae
hlt
in
in
push
div
mov
mov
cdq
adc
or
fldenv
cmps
loope
les
jmp
xchg
mov
sub
dec
sbb
loop
mov
add
mov
xchg
push
push
cmps
movs
call
mov
pop
cmps
test
frstor
loop
xor
add
jnp
jmp
(bad)
repnz
sbb
pop
sbb
leave
cwde
xchg
adc
cdq
sbb
mov
push
jmp
push
add
add
add
jmp
shl
inc
(bad)
pop
stc
push
test
jecxz
cli
aaa
in
or
(bad)
fwait
mov
nop
and
loop
push
sar
and
and
adc
cmps
jmp
shr
icebp
add
cmp
scas
pusha
rcr
sub
mov
push
push
aaa
in
iret
das
loope
xlat
cmp
mov
pop
loope
and
xor
inc
add
repz
mov
inc
into
mov
push
jo
das
jmp
and
jge
inc
hlt
push
xchg
cli
sar
xlat
add
jne
jle
and
and
gs
sub
icebp
xchg
pop
sub
js
pop
jo
adc
mov
fxch
mov
cmp
xor
push
sub
cmps
push
dec
adc
push
or
cmps
add
iret
cdq
push
fwait
sbb
enter
mov
xchg
fwait
push
out
jge
xchg
inc
out
jl
jnp
lods
xchg
inc
mov
out
loop
adc
dec
sbb
sbb
jbe
sti
mov
rcl
mov
pop
rcr
jnp
mul
cmp
inc
jp
cmps
sbb
sbb
bound
push
xor
dec
or
mov
dec
cwde
sbb
dec
aam
in
xchg
xor
inc
(bad)
jo
aam
in
dec
xor
clc
fild
test
scas
jle
push
fild
lds
pop
adc
jns
mov
js
add
or
mov
imul
out
pop
jge
jae
mov
stc
stos
xchg
push
mov
ret
jge
stos
out
popf
imul
pop
movs
test
adc
fs
or
xlat
xchg
or
shr
mov
jns
adc
sub
popf
or
sbb
inc
outs
mov
out
xchg
xchg
adc
cmp
push
int3
cmp
out
outs
ds
push
mov
repz
popa
adc
pop
rcl
outs
(bad)
es
mov
loop
xchg
dec
inc
pusha
ficom
sbb
sbb
add
add
inc
xchg
mov
pusha
push
mov
sub
push
aam
xchg
(bad)
add
jl
sbb
test
and
mov
xor
mov
jb
cmps
cmps
pop
push
fimul
jo
xchg
pop
cmp
and
jl
daa
imul
xchg
xor
mov
mov
scas
push
inc
popf
sbb
jle
test
inc
repz
cmp
cld
addr16
mov
sbb
sbb
push
cmps
sub
inc
loopne
and
dec
add
push
jmp
xor
(bad)
ffree
xlat
adc
inc
iret
repz
sub
pop
retf
push
loop
aad
xchg
dec
mov
fnstenv
xor
or
or
in
cmc
nop
je
and
fwait
cs
xor
push
ss
mov
pop
(bad)
into
push
push
nop
stos
sahf
(bad)
dec
lods
outs
je
outs
sub
mov
pusha
inc
mov
dec
daa
retf
sub
cdq
pop
sahf
dec
fdivr
adc
stc
ror
jbe
jl
(bad)
mov
sahf
call
out
mov
ins
jnp
scas
movs
xor
mov
pusha
std
call
inc
cmp
cwde
push
mov
sbb
mov
inc
(bad)
jns
mov
ret
jbe
xchg
jecxz
loopne
test
xchg
dec
test
fisttp
nop
dec
jmp
pusha
arpl
pop
ficomp
xor
leave
mov
sub
pop
adc
lahf
push
mov
dec
dec
push
sti
mov
inc
bswap
cmp
xchg
(bad)
push
or
sub
fnstsw
xor
mov
nop
and
xor
xchg
adc
cmp
das
test
(bad)
cmp
xor
sahf
inc
adc
arpl
(bad)
out
mov
iret
shl
push
test
mov
shl
pop
xchg
mov
xchg
inc
imul
fidiv
retf
rol
das
add
sbb
inc
(bad)
aad
push
xchg
in
rcr
add
adc
add
aaa
ja
jb
neg
cmp
std
cmps
sahf
push
cmps
jg
mov
push
pop
jmp
adc
sub
push
push
imul
dec
adc
xchg
stc
ror
inc
xchg
cli
(bad)
in
or
fadd
cmp
xchg
mov
pushf
and
(bad)
mov
sub
inc
jno
idiv
dec
sub
movs
xor
and
add
repz
stos
stc
aas
adc
repz
inc
xchg
dec
(bad)
push
or
mov
stc
inc
push
mov
(bad)
jp
arpl
es
sub
cs
push
ret
sbb
mov
arpl
sbb
cmp
xchg
lahf
xchg
xchg
data16
mov
gs
inc
adc
xor
jno
retf
push
arpl
mov
cld
inc
xor
xchg
xchg
mov
mov
test
scas
xorps
jg
call
sar
cmp
push
xor
or
or
scas
dec
test
xchg
sub
and
inc
xchg
dec
xor
iret
xchg
ins
fcmovu
lods
jae
lock
bound
outs
pop
ror
cli
mov
loop
hlt
or
mov
sbb
aad
repnz
and
movs
add
xor
xchg
and
cmp
inc
aad
sti
into
mov
fnsave
stc
test
repz
sahf
imul
push
mov
cdq
mov
or
pop
ds
repz
sahf
fs
repz
mov
push
daa
mov
inc
enter
(bad)
into
out
xchg
and
in
add
stos
pop
stc
or
mov
mov
ja
ret
rcr
pusha
add
hlt
fnstenv
mov
in
xor
push
imul
cmp
sub
xchg
xchg
pop
cmps
fwait
jge
pop
test
sbb
hlt
mov
mov
or
add
cmp
inc
mov
cdq
mov
ins
inc
ror
and
loopne
fsubp
dec
push
jle
addr16
mov
adc
add
outs
lds
data16
jmp
push
ins
pop
push
popa
jne
fidivr
or
sbb
pop
(bad)
xor
push
adc
xchg
push
cmc
(bad)
fwait
jle
cmp
and
sub
movs
ja
and
test
movlps
neg
ret
dec
inc
push
or
pop
jo
int
into
mov
arpl
(bad)
pop
in
call
in
xchg
jle
fdiv
lea
pop
cmp
inc
(bad)
xchg
test
dec
fucom
cdq
ins
mov
mov
test
adc
pushf
aas
jle
test
into
sbb
add
outs
sub
adc
inc
ja
pop
adc
loope
jmp
pop
pushf
sti
pop
mov
pusha
lods
call
cmp
int
pop
adc
xlat
arpl
je
cld
push
inc
retf
icebp
mov
neg
(bad)
and
test
fidiv
int3
ss
in
test
mov
sar
fist
jp
mul
test
stc
aad
std
add
test
sbb
loop
mov
mov
mov
dec
dec
out
jae
push
adc
jnp
outs
dec
mov
arpl
hlt
xchg
mov
sub
or
arpl
adc
test
fs
les
add
mov
loopne
cld
test
test
add
mov
mov
mov
pop
dec
popa
adc
sub
xchg
scas
(bad)
adc
pop
or
(bad)
popf
xor
pusha
mov
mov
or
jo
jmp
(bad)
mov
mov
fisttp
mov
sbb
fwait
push
aam
push
jne
(bad)
mov
xlat
cmp
ins
mov
cmps
dec
into
jge
js
fsub
imul
push
hlt
jb
dec
lea
mov
das
cmp
dec
sub
lds
pop
repnz
jo
cli
inc
cs
out
jb
por
jle
aam
dec
mov
jb
and
lea
add
and
inc
xchg
and
mov
push
sti
outs
loopne
je
fwait
sbb
bound
retf
mov
xor
mov
je
cmp
mov
ud2
mov
xor
sub
jns
push
stc
out
scas
push
pop
and
mov
jno
stc
imul
push
xor
add
cmps
cdq
lahf
mov
or
dec
in
cs
int
sahf
xchg
aam
lds
sbb
pop
pop
xchg
xor
mov
jl
icebp
paddsb
xchg
or
shl
aad
cld
push
out
arpl
rol
cld
(bad)
dec
xchg
ins
in
jo
push
xlat
fsub
jb
sub
ds
scas
mov
sub
mov
jle
aas
stos
imul
jle
and
inc
retf
popa
(bad)
(bad)
test
fnstenv
cli
aas
cmp
sbb
mov
xor
mov
pop
lahf
ins
add
into
mov
dec
inc
mov
in
xor
sub
or
scas
push
loopne
dec
sub
jle
adc
push
mov
sub
aad
jae
(bad)
fmul
mov
or
dec
fiadd
sbb
cmps
das
test
sbb
cmc
push
pop
outs
ret
(bad)
scas
jg
pop
hlt
ret
sti
cmps
sar
pusha
sbb
je
jle
adc
sbb
push
jp
and
pushf
mov
mov
mov
call
dec
dec
out
nop
stos
jo
push
je
xchg
icebp
add
push
rcr
xchg
jne
sub
dec
sahf
push
or
cmp
fsub
inc
and
push
loopne
in
stos
shr
push
fmulp
jmp
jmp
add
(bad)
add
adc
or
push
mov
mov
movs
cmps
sub
cwde
mov
cs
or
adc
ds
icebp
jge
fdivp
scas
cdq
xchg
sar
xchg
mov
push
lods
js
repnz
gs
pop
mov
dec
jge
stos
push
fistp
add
rol
fs
mov
sti
out
sbb
js
adc
in
cmp
mov
jle
(bad)
push
xor
sahf
(bad)
aam
fmul
pop
mov
stc
out
inc
in
sbb
retf
or
push
sbb
fild
retf
scas
cmp
add
xchg
(bad)
dec
jbe
cmp
mov
jge
mov
pop
pop
fsub
lahf
sub
test
pop
movs
jnp
shl
push
pusha
xchg
ins
xchg
dec
add
popa
add
adc
mov
pop
(bad)
idiv
xchg
loopne
jb
jae
stos
fisub
sbb
lea
mov
jmp
jmp
stos
call
cmp
mov
arpl
in
push
dec
and
jns
pop
sub
add
mov
cmp
jl
dec
mov
bound
sahf
imul
repnz
icebp
and
sbb
cmc
xchg
add
into
pop
inc
in
cmp
sub
and
push
lahf
dec
sub
shr
ins
sub
aam
push
cmp
mov
mov
dec
sar
sar
bnd
jnp
inc
sub
push
cmp
adc
or
push
inc
cld
xor
and
adc
cmp
loope
cmp
mov
jae
scas
enter
mov
add
jb
aas
dec
add
push
mov
ret
inc
test
xchg
pop
cld
mov
add
xchg
or
jecxz
mov
into
cwde
pop
pop
scas
push
mov
add
mov
loop
adc
sub
test
into
or
and
mov
or
sub
sub
add
es
push
clc
test
xchg
in
and
dec
rcl
mov
into
xor
or
add
inc
pop
push
and
(bad)
and
sar
mov
adc
mov
mul
inc
in
xchg
loope
mov
mov
add
cwde
pop
mov
mov
cdq
push
add
aad
hlt
mov
dec
jmp
gs
jnp
push
jnp
je
adc
sti
test
cmp
in
mov
push
mov
daa
out
inc
stos
loopne
movs
les
ffreep
inc
jecxz
scas
jo
pop
push
lods
push
int
imul
dec
mov
ret
jmp
iret
call
retf
jae
in
lods
into
mov
rol
sbb
and
icebp
mov
ins
sbb
fisubr
xor
or
cmps
mov
jmp
mov
shl
cmp
test
adc
inc
dec
jg
aaa
jp
ja
fld
jl
push
adc
inc
cwde
and
(bad)
jne
xor
jbe
mov
sbb
adc
cmp
dec
jmp
mov
adc
retfw
dec
mov
xchg
xor
mov
rol
jl
fxtract
xchg
push
movs
aam
test
push
add
and
(bad)
sti
icebp
nop
dec
stos
pop
xor
cmp
clc
(bad)
jmp
sub
sbb
iret
fsub
test
jmp
movs
aaa
cmps
mov
call
cwde
jmp
adc
rcl
sahf
jg
or
push
xor
xchg
mov
in
mov
sub
out
call
adc
xchg
xchg
cmps
js
xchg
test
lds
leave
cmps
sub
in
pop
sbb
xor
mov
jmp
inc
icebp
sub
adc
push
mov
mov
mov
mov
adc
cmp
cld
sahf
test
ret
ds
xchg
aaa
mov
mov
push
dec
cmc
mov
jns
jg
out
dec
fisubr
jbe
sahf
das
xor
pop
lock
xchg
fs
xor
test
shl
aam
call
mov
icebp
pop
shr
hlt
sti
cmp
outs
mov
pop
jb
inc
dec
jns
and
add
add
mov
mov
mov
stos
into
test
push
les
popa
scas
int
mov
pop
cdq
cmp
xor
adc
popa
mov
fwait
ror
movs
and
test
mov
sub
enter
ucomiss
fdiv
repz
fs
aad
jle
mov
cmp
pop
add
mov
fistp
xchg
or
cmp
dec
cld
shl
loopne
sub
stos
out
movs
ins
add
inc
mov
xor
mov
int
call
jmp
in
pop
mov
retf
sbb
jns
sbb
or
push
or
pop
loopne
gs
mov
(bad)
jb
rcl
pushf
(bad)
or
jmp
int3
shl
add
es
cli
bound
sbb
xchg
loop
jb
pop
in
push
cmps
pop
(bad)
in
pushf
mov
sub
inc
movmskps
or
(bad)
and
push
test
adc
and
ret
cmp
add
push
je
(bad)
dec
mov
inc
gs
fbld
fadd
loope
das
scas
lahf
xchg
or
nop
ret
out
fst
sbb
jo
sub
pop
jnp
out
or
pop
test
pop
pop
and
iret
jecxz
push
sbb
push
cmps
or
sub
jp
fist
sahf
arpl
push
jl
hlt
push
and
test
(bad)
cmp
dec
out
dec
cwde
sbb
and
mov
aad
sub
push
inc
mov
je
or
loopne
std
xlat
sti
add
adc
faddp
not
and
inc
pop
inc
jae
jmp
adc
mov
sbb
not
push
pop
shl
outs
arpl
mov
mov
ss
xor
add
dec
and
movs
cmp
add
jo
lods
pop
mov
jl
fldcw
add
sbb
cld
(bad)
jecxz
push
sub
popf
shr
mov
call
inc
jmp
or
out
lock
and
sbb
int3
rcl
int
pop
mov
pushf
iret
add
fimul
jp
xchg
loope
aam
pop
mov
push
sub
call
fistp
cmp
fsubp
into
pop
pushw
push
add
(bad)
retf
sub
cs
outs
outs
jbe
int
icebp
sahf
mov
ror
add
aam
mov
outs
jae
data16
xchg
arpl
cdq
xor
sbb
movups
mov
adc
xchg
(bad)
sti
mov
mov
cmp
aam
inc
loope
mov
pop
xchg
add
call
shl
inc
mov
mov
sub
mov
sbb
popa
xor
test
push
test
sahf
fsubr
lds
movs
sub
mov
daa
xor
xor
jne
lods
xlat
push
jnp
icebp
xor
xchg
jge
in
ror
fcom
jmp
and
and
cs
mov
popa
sbb
push
fwait
cmp
jne
(bad)
mov
(bad)
jmp
xchg
jns
push
(bad)
fisttp
scas
cmp
or
ds
sti
dec
icebp
sahf
and
fcmovbe
push
pop
imul
stos
ror
push
mov
loopne
dec
sahf
push
dec
add
inc
push
ret
inc
inc
add
pop
push
stc
inc
lahf
into
jns
cmp
test
adc
addr16
sbb
pusha
ins
aad
sti
clc
int
aam
pop
cmp
cmp
fnstcw
dec
add
inc
fld
ret
movs
dec
adc
push
adc
into
xchg
(bad)
inc
push
xchg
sbb
inc
push
push
mov
loope
push
or
pop
fst
and
cmp
jp
push
mov
(bad)
sub
dec
js
shl
add
shl
push
dec
loop
imul
out
fsubr
sub
pop
aaa
cwde
xchg
gs
mov
call
and
jmp
iret
pop
cmps
xchg
cmc
rcr
nop
(bad)
(bad)
(bad)
push
fadd
xchg
sbb
mov
int3
sahf
aam
lds
jmp
push
cs
mov
(bad)
xor
or
call
or
loope
sub
fsubr
xchg
cli
cwde
fs
inc
jmp
int3
mov
outs
fs
ja
pop
cld
xchg
mov
push
jnp
movs
push
cmp
popf
inc
repz
scas
xor
sub
in
sbb
arpl
sub
loop
es
aaa
sbb
dec
and
push
fadd
and
test
sub
icebp
jmp
jecxz
mov
shl
and
lods
xor
int
sub
sub
and
es
jp
stos
xor
add
and
push
ss
and
inc
cli
or
cs
sbb
fst
iret
jae
mov
out
in
xor
jle
ins
xchg
jae
pop
repnz
ins
mov
test
cmp
add
call
jecxz
jns
fdivr
int
add
pop
sub
es
push
(bad)
pop
test
jo
lock
cmp
xor
cli
enter
fdiv
add
hlt
call
mov
ja
mov
add
mov
pop
shl
cli
outs
sbb
(bad)
pusha
add
leave
push
pusha
shr
(bad)
rol
and
and
push
cmps
jg
xchg
adc
push
ret
loope
mov
js
push
adc
mov
in
sbb
xchg
hlt
popf
outs
fst
mov
pop
mov
mov
movs
mov
or
(bad)
scas
push
adc
xchg
push
loope
pop
xor
adc
es
scas
mov
xchg
dec
pop
cmc
adc
in
lds
fsub
pop
cmp
xor
ret
cmp
mov
pop
retf
pop
mov
mov
jl
dec
iret
mov
aad
xchg
jo
pop
ja
out
hlt
ins
stos
xor
and
addr16
ds
adc
jl
push
loopne
inc
inc
cmc
mov
or
push
pushf
adc
pop
xchg
push
and
mov
adc
and
pop
loop
stc
sbb
xchg
xor
or
scas
sar
aas
sub
push
push
ficomp
iret
leave
add
lock
loop
push
or
neg
pusha
or
ins
xchg
imul
mov
rol
mov
imul
and
aas
or
in
fnsave
add
dec
int3
xor
aad
sbb
dec
cld
dec
sbb
mov
push
or
inc
jmp
and
(bad)
sub
ja
adc
nop
cmps
cmps
inc
or
or
out
sub
inc
pop
mov
or
mov
inc
xchg
aad
xchg
push
cmps
stos
push
inc
bswap
add
or
repnz
cmp
outs
sbb
ja
call
push
add
stc
mov
rol
dec
cmc
popf
add
ins
push
xlat
retf
call
or
call
out
xchg
cmps
das
ret
std
cmp
mov
cli
xchg
mov
(bad)
mov
mov
fs
mov
nop
shl
and
xchg
xchg
arpl
dec
cmps
jae
jbe
mov
sbb
movs
addr16
(bad)
xchg
and
ror
cmp
out
cmp
repnz
aas
repnz
adc
xor
push
or
push
xchg
fldenv
mov
ffreep
(bad)
mov
jg
pop
enter
ins
mov
sbb
mov
jae
stos
mov
jno
cmp
pop
inc
jno
or
and
fmul
push
mov
cmps
sub
call
jl
cmp
cmps
(bad)
ds
jo
retf
mov
dec
cmps
aas
push
cmp
cld
sahf
mov
adc
mov
push
cmp
stos
and
jns
ins
xchg
mov
ds
popa
scas
fstp
adc
cmp
cmp
mov
mov
repnz
icebp
mov
std
xlat
xor
stos
xor
pop
xchg
and
(bad)
and
cmp
and
inc
in
fcomp
mov
sahf
inc
ins
sub
nop
inc
ret
xchg
ret
or
in
out
scas
jne
outs
mov
ror
pop
fidiv
js
mov
sbb
out
inc
idiv
xor
cmp
mov
pop
retf
push
xchg
jmp
cs
sbb
or
(bad)
and
jnp
mov
inc
imul
sub
hlt
mov
fwait
add
jno
into
mov
mov
iret
jmp
mov
jb
clc
addr16
out
cld
cmc
imul
mov
inc
movs
stos
xor
adc
jns
push
jbe
icebp
adc
imul
sbb
mov
ret
jns
imul
sub
inc
mov
ficom
xchg
int
add
xor
pushf
test
mov
pop
repnz
adc
add
pop
stc
push
loop
imul
mov
test
addr16
popf
imul
add
cmp
sbb
xor
sbb
pushf
cli
xlat
sub
xor
push
in
push
xchg
mov
mov
das
cmp
nop
in
xchg
mov
out
pop
cld
or
jp
ss
ins
add
xor
jo
in
cli
cmps
mov
and
std
cmc
jo
(bad)
jae
sbb
mov
add
mov
adc
sahf
sub
mov
rcr
push
xor
xchg
in
dec
jmp
fnsave
scas
inc
pop
add
push
push
add
xor
shl
sbb
cmp
out
lahf
retf
dec
aas
pushf
bound
mov
fmulp
sub
popa
sub
int3
mov
or
xor
mov
pop
add
push
sbb
bound
lahf
repnz
inc
mov
xor
mov
int
lods
cs
cmp
and
or
add
clc
pop
mov
cmp
mov
cmp
sar
jae
add
int
call
fcomp
and
add
or
push
inc
das
sub
test
cmp
mov
and
inc
xchg
(bad)
xor
and
push
shr
mov
inc
inc
shr
pop
ss
test
add
pop
call
fsubr
xchg
call
ret
mov
ins
enter
data16
push
out
add
jbe
or
or
leave
adc
cmp
repz
call
push
stos
ror
pushf
outs
in
adc
inc
push
fcom
sbb
or
sar
imul
xor
dec
leave
(bad)
aam
jecxz
jmp
enter
inc
adc
sbb
cwde
push
pmulhuw
aad
js
xor
stc
adc
sub
scas
adc
imul
movs
pop
jmp
dec
imul
jns
mov
mov
shl
and
in
mov
dec
sbb
inc
xchg
xchg
icebp
daa
mov
aad
lea
popf
daa
ds
(bad)
sbb
adc
mov
ja
fadd
das
adc
inc
add
xchg
div
stos
sbb
addr16
cmps
push
imul
xor
jge
mov
stc
dec
mov
xchg
and
mov
test
aam
imul
call
enter
sbb
mov
iret
popf
fiadd
or
jle
mov
call
jmp
jno
mov
inc
mov
popa
adc
mov
mov
loopne
push
(bad)
and
adc
lods
lea
test
mov
enter
gs
mov
sub
in
fld
push
pushf
or
mov
xchg
adc
mov
and
cmp
xor
popa
xchg
mov
pop
retf
pop
daa
test
dec
adc
adc
xchg
push
mov
add
pop
push
xchg
xor
pop
xor
rcr
call
and
jae
xor
mov
mov
icebp
mov
push
fwait
or
inc
cmp
and
push
push
inc
mov
push
push
jno
pop
push
mov
movs
rol
sub
mov
fs
data16
dec
or
push
nop
enter
cmp
stos
or
push
jbe
xor
mov
stos
dec
xchg
inc
pusha
shl
das
das
fcmovne
hlt
daa
aad
add
pushf
mov
loop
push
aad
fucomp
inc
jp
mov
dec
addr16
clc
mov
push
scas
mov
out
lock
or
lds
pushf
scas
pop
btr
dec
imul
push
mov
out
ret
test
fs
int3
jmp
or
data16
imul
dec
mov
inc
and
add
adc
pusha
push
js
fimul
scas
ror
std
mov
fld
arpl
fcom
xor
dec
outs
jmp
gs
or
ret
push
nop
in
jno
push
ss
xchg
repnz
sbb
pop
adc
loop
aad
dec
lea
cmp
ss
inc
mov
or
popf
or
pop
outs
retf
xor
fidivr
sti
push
and
mov
loope
xchg
xchg
xor
jb
(bad)
mov
cld
jmp
fwait
cmp
mov
gs
xor
cmp
jle
or
pop
cmp
inc
inc
dec
push
dec
sub
jb
or
je
ds
test
enter
outs
cmp
mov
or
sub
popa
cmps
les
jp
ficom
fdiv
push
sti
sbb
pushf
jp
in
pop
(bad)
stc
ret
jbe
mov
movs
push
or
dec
xor
out
sbb
jne
jl
or
push
jmp
in
mov
fwait
aas
inc
popf
repz
and
shl
scas
push
test
jns
mov
into
shl
cmp
push
das
test
dec
dec
movs
cmp
mov
stos
fidivr
jne
aas
leave
mov
pop
enter
adc
(bad)
add
jo
push
loope
sahf
push
lock
sbb
jno
cdq
or
sti
pop
into
arpl
sbb
sub
mov
test
cmp
or
retf
jns
adc
cmps
push
call
or
fst
xchg
mov
adc
inc
rcl
adc
aaa
repnz
stos
aam
push
dec
mov
nop
dec
fdiv
cmp
movups
lock
push
push
sysret
outs
xchg
push
iret
lods
sub
jns
test
push
in
in
xor
cs
jb
call
mov
and
iret
xor
mov
push
mov
push
dec
imul
test
pop
call
std
add
xchg
out
shl
cld
aam
mov
stos
leave
sar
(bad)
aam
jecxz
cmp
lea
inc
push
scas
jmp
jbe
out
call
and
jp
das
mov
jl
pop
jae
(bad)
in
inc
mov
in
cdq
(bad)
loop
repz
aam
dec
mov
adc
jg
pop
leave
cdq
sahf
push
xor
ss
icebp
cmp
dec
cmovbe
sbb
xlat
adc
(bad)
pop
(bad)
jae
cdq
cmp
push
sbb
scas
icebp
les
je
inc
test
pop
push
jb
mov
ins
mov
test
enter
lahf
jge
mov
xor
push
jns
pop
sub
pop
jmp
and
jp
mov
imul
sub
std
sti
cwde
pop
sub
sub
pop
into
fisttp
xchg
mov
outs
and
push
inc
sbb
test
pop
(bad)
or
repnz
jno
(bad)
jl
pop
sti
test
scas
push
mov
add
mov
add
pop
stos
push
repz
jmp
sbb
mov
sti
inc
stos
jb
inc
mov
cmp
lods
test
push
mov
inc
mov
shl
sub
mov
xchg
jmp
jecxz
xchg
push
xor
sbb
(bad)
aam
movs
ss
inc
push
aas
idiv
mul
xchg
sub
cmp
jmp
sub
mov
(bad)
int
int3
sub
xor
jae
mov
fbstp
imul
push
gs
das
shl
pop
retf
inc
sbb
aad
jge
stos
out
inc
cmp
lods
out
inc
data16
xchg
sub
push
sar
arpl
fimul
aaa
lds
mov
xchg
push
and
mov
mov
xchg
test
stos
xor
push
cmp
ins
xchg
test
aam
sub
cmp
call
push
or
clc
mov
fwait
add
inc
mov
pop
icebp
xor
push
repnz
push
aad
push
pop
sub
push
bound
pop
fst
clc
mov
pop
cwde
cmps
scas
movs
mov
adc
call
fwait
repz
adc
push
icebp
mov
mov
stc
pop
push
dec
push
mov
(bad)
rcr
xchg
push
or
jno
popa
dec
mov
push
mov
mov
cld
movs
hlt
xchg
xor
es
cmp
xchg
mov
sub
cdq
adc
nop
cs
ret
xchg
push
lea
sbb
mov
mov
sub
dec
mov
and
dec
(bad)
pop
das
jle
aas
pop
jmp
inc
dec
std
scas
push
cmp
ret
jl
mov
pop
pusha
or
lods
imul
mov
push
xchg
add
scas
mov
inc
push
pop
and
add
stos
jmp
mov
sar
fiadd
rcr
sbb
jmp
and
loope
mov
xchg
and
push
sti
loope
enter
rol
pop
xchg
push
jl
jle
mov
cmps
call
xchg
cli
push
mov
pop
mov
cmpxchg
hlt
stos
and
nop
mov
sub
adc
mov
xchg
jge
xchg
bound
loop
cmp
inc
mov
xchg
ret
stos
ds
(bad)
shr
ss
xor
jmp
sub
jmp
daa
fst
mov
in
sub
add
mov
or
inc
(bad)
repnz
iret
sahf
shr
xor
and
repnz
pop
repnz
push
or
mov
jp
mov
pop
jne
inc
dec
jle
lock
rol
jno
outs
push
adc
test
rol
test
sub
cwde
jmp
fwait
enter
jns
ficom
and
outs
xchg
sub
mov
pop
and
mov
and
ins
hlt
sbb
mov
adc
pop
pop
push
jae
xor
jge
fwait
cli
mov
(bad)
dec
jmp
mov
push
cli
or
scas
test
xchg
fmul
jp
push
and
lea
xor
movs
adc
stos
mov
add
push
dec
inc
call
push
push
mov
push
xor
(bad)
sbb
mov
push
nop
jge
adc
icebp
addr16
push
scas
dec
jbe
(bad)
or
cli
retf
fldenv
loopne
ss
fild
push
sub
cmps
lea
ins
mov
fs
xchg
hlt
xchg
cmc
sbb
inc
mov
jbe
xor
jns
cmp
mov
cs
pop
pusha
sub
stos
inc
lock
movs
xchg
mov
imul
inc
dec
pop
or
aaa
mov
movs
push
xchg
out
jbe
cmp
push
sbb
jbe
mov
gs
hlt
sahf
mov
stos
add
scas
jle
retf
mov
repz
jo
mov
dec
imul
and
aam
aam
and
xor
cmp
inc
cmp
dec
inc
xchg
cld
sti
cs
mov
mov
jmp
pop
fadd
and
pop
mov
sti
fld
xchg
scas
or
daa
sti
jmp
daa
cli
xchg
cmc
imul
rep
outs
add
mov
mov
lods
pushf
stos
jae
fcmovb
mov
or
les
jne
mov
xor
pop
dec
shl
fwait
pop
out
xor
sub
jmp
cmc
xchg
pop
push
pop
jg
iret
frstor
sbb
fcom
xchg
mov
cli
mov
cwde
mov
dec
xchg
adc
mov
push
js
dec
cmp
not
cli
lahf
dec
sbb
hlt
clc
jne
xchg
je
icebp
int3
in
aad
ins
(bad)
jne
imul
sar
mov
mov
mov
or
dec
or
sahf
rcr
outs
push
retf
dec
sub
out
add
cld
pop
jnp
fimul
dec
jae
sub
shl
fidiv
xor
movs
(bad)
push
dec
(bad)
jmp
fldcw
push
mov
cli
jo
inc
jl
in
xor
adc
test
call
cmp
daa
out
pop
sar
out
dec
mov
mov
inc
aam
add
arpl
sub
rcr
push
xchg
scas
mov
add
js
push
xchg
emms
fcom
mov
pop
or
pop
jge
jmp
cmps
int
pusha
(bad)
jo
mov
cmp
lock
sti
push
rol
leave
mov
int3
push
cmps
dec
shr
fs
xchg
push
(bad)
jg
in
cmp
push
mov
sub
(bad)
jg
cli
push
or
cmp
xchg
push
add
mov
data16
ja
hlt
enter
push
push
xchg
pop
gs
sub
xchg
dec
dec
add
cwde
call
(bad)
lock
les
jl
lods
icebp
push
sbb
sar
mov
cdq
cmp
sbb
xor
cdq
fcomp
sbb
push
cwde
cmp
movs
sub
movs
movs
clc
pop
retf
imul
push
js
jl
rcl
adc
rol
and
mov
test
out
arpl
dec
cmp
out
xchg
gs
(bad)
and
mov
add
fdivr
sub
popa
pop
fwait
cmp
rcr
pushf
nop
pop
push
sbb
repz
je
jns
cmp
mov
cmc
loopne
sahf
repz
add
jl
sahf
jno
(bad)
sar
mov
aas
ja
test
out
clc
mov
icebp
jo
(bad)
iret
push
dec
jmp
push
mov
fdivr
and
loope
cdq
xchg
sbb
inc
mov
jo
adc
xchg
inc
mov
push
sbb
jne
jo
ret
bound
(bad)
mov
mov
leave
retf
jae
pop
adc
pop
lds
lock
aad
pusha
mov
push
jp
loopne
xor
jo
push
dec
cmps
add
push
push
rcr
jmp
adc
mov
add
sbb
sbb
iret
sti
add
int3
arpl
imul
add
addr16
(bad)
sub
sub
out
imul
jae
fs
add
sub
(bad)
jg
out
nop
xchg
(bad)
sbb
imul
adc
sbb
cmp
or
xchg
mov
jge
pop
rcr
cmp
mov
leave
mov
loopne
rcr
xchg
inc
or
sub
in
push
loope
cmps
cdq
bound
add
or
fstp
inc
jg
xor
test
mov
xchg
sub
es
(bad)
push
push
ja
loope
dec
mov
add
fstp
xchg
ins
pop
jne
sub
jg
mov
loop
dec
std
retf
rol
out
or
cmp
nop
frstor
shl
xchg
jmp
outs
imul
add
iret
ins
pushf
fsub
ss
or
in
mov
pop
sub
inc
cmp
mov
sbb
push
scas
outs
adc
cmp
test
jle
and
xchg
dec
enter
xchg
call
jnp
cmp
nop
and
adc
mov
sbb
inc
adc
and
js
and
lods
popf
sar
inc
ds
setns
sub
cmovs
scas
xchg
sbb
ret
aad
cdq
jecxz
jmp
(bad)
sub
xor
fstp
iret
test
jmp
gs
jge
mov
jge
add
cs
inc
push
mov
sub
bound
repz
push
nop
aas
cmp
push
xlat
ret
sub
mov
(bad)
aaa
gs
xchg
jecxz
shr
adc
or
nop
pop
mov
outs
adc
inc
shr
adc
and
cli
aas
xlat
std
pushw
xchg
rcl
mov
cmp
adc
andps
push
jb
pop
or
mov
lods
xchg
inc
lahf
cmc
pop
in
sub
or
or
in
sub
adc
lods
jae
pop
pop
push
sub
push
shr
lds
out
ins
pop
and
mov
hlt
outs
js
mov
pop
mov
pop
add
push
add
mov
(bad)
dec
sbb
jo
or
sub
mov
jb
mov
add
dec
sub
adc
xchg
repz
idiv
sar
ficom
mov
sbb
and
loop
mov
xchg
fnsave
iret
(bad)
jecxz
jmp
es
and
jb
adc
retf
ds
sbb
jb
scas
je
fwait
sti
pop
std
jg
fwait
shr
enter
(bad)
cmp
push
sub
inc
mov
js
adc
pop
add
(bad)
push
jmp
outs
push
aaa
sub
leave
adc
sbb
in
mov
pop
pop
mov
mov
aas
repnz
lods
mov
aaa
outs
xchg
out
pop
add
popa
mov
sbb
pop
cwde
imul
jno
fbstp
daa
sub
sbb
fst
sbb
repnz
mov
hlt
cwde
xchg
clc
cli
mov
retf
mov
sub
in
test
rol
or
cmp
jle
retf
test
pop
call
mov
pusha
popa
stos
lock
inc
jmp
retf
xchg
mov
test
sbb
repz
div
es
fwait
xor
ins
or
jno
test
xchg
pop
lods
out
mov
and
dec
sbb
cmp
shr
cld
sub
dec
cmps
mov
call
adc
(bad)
mov
test
out
cmp
fiadd
popf
jmp
mov
pop
cwde
retf
jno
add
cmp
mov
outs
shl
cmp
mov
push
add
cmp
test
mov
popa
ror
push
push
outs
aaa
push
jo
lods
push
xor
mov
xchg
int
mov
pop
sbb
stos
mov
xchg
out
pop
xor
in
loope
xchg
in
adc
(bad)
adc
call
add
jb
mov
inc
(bad)
and
je
jl
cli
mov
int3
jne
mov
inc
popa
dec
mov
mov
push
js
int
dec
or
xchg
inc
popa
jmp
aam
imul
cmp
sti
jns
in
int
adc
fwait
out
mov
loopne
jge
gs
nop
sub
test
add
stos
jmp
push
push
in
movs
lock
das
icebp
scas
int
mov
test
lods
leave
and
out
mov
or
mov
icebp
xor
aas
dec
or
ss
sbb
aad
stc
mov
ins
inc
push
pop
in
mov
icebp
mov
push
mov
ins
pop
fsubp
add
adc
mov
sahf
jb
jg
mov
xchg
les
jle
les
mov
mov
(bad)
add
(bad)
in
push
cmp
pop
je
aas
loope
mov
sar
es
mov
add
imul
popa
mov
add
xchg
lds
cmp
in
jne
arpl
pop
xchg
sbb
dec
(bad)
pop
fst
addr16
scas
repz
and
mov
push
mov
lods
inc
cmp
lock
mov
adc
addr16
dec
sub
xor
ja
(bad)
imul
and
sub
inc
or
fnstcw
(bad)
std
ret
lock
jmp
mov
lock
and
repnz
mov
pop
inc
test
out
push
xchg
dec
test
xor
mov
das
mov
push
pop
push
xor
cmp
mov
mov
aas
sub
dec
stos
fwait
adc
jp
xor
int3
xchg
xchg
pop
mov
aas
dec
adc
pop
adc
cwde
xor
xchg
mov
cmp
test
add
retf
pop
sub
iret
push
pop
mov
cmp
or
mov
lea
dec
cwde
test
fadd
cmp
lds
ficomp
(bad)
mov
add
fisubr
shl
adc
sub
out
xchg
xor
push
cmps
jecxz
mov
mov
mov
mov
push
push
(bad)
aad
jle
ret
sbb
loopne
mov
in
pop
je
lods
cs
xchg
push
lea
xchg
and
outs
aas
call
sahf
sub
push
and
dec
inc
icebp
scas
mov
cmps
in
popa
jae
std
nop
xchg
scas
mov
icebp
fsubrp
dec
or
push
mov
arpl
cmp
ret
(bad)
das
add
dec
call
jp
cmp
inc
das
stos
fisubr
or
in
mov
jmp
and
inc
jbe
lock
jno
jns
xchg
push
jae
test
xchg
jp
pop
add
xor
lods
ret
add
pop
outs
push
adc
sub
psubsw
inc
mov
jne
cld
dec
cli
call
ret
sub
or
imul
pusha
pop
popa
pop
lods
imul
test
int
dec
mov
test
outs
mov
inc
xchg
xor
jg
mov
push
sub
lock
pop
popa
add
popf
(bad)
xchg
adc
cmp
xchg
cmp
and
fist
in
xlat
mov
es
jnp
cmp
xchg
jmp
push
scas
and
xor
pop
(bad)
push
aad
fnsetpm(287
push
imul
popa
je
idiv
cmp
and
fdivr
lock
pop
dec
jae
int
lds
xor
pushf
(bad)
out
cmp
repnz
fdiv
dec
mov
pop
rol
rcr
imul
add
pop
xor
fst
xchg
or
outs
hlt
pop
jmp
mov
sub
pop
mov
xor
(bad)
ficomp
jne
lock
inc
fcomp
mov
inc
mov
dec
loope
js
movs
idiv
ret
mov
or
jge
movs
adc
dec
mov
daa
outs
pop
cvtdq2ps
repnz
xor
jns
jo
push
mov
sub
and
add
xchg
rcr
pop
sti
mov
inc
dec
mov
rol
add
fadd
or
jbe
(bad)
popa
imul
aas
cli
stos
mov
add
or
je
sbb
pop
fistp
dec
cmp
je
jl
not
or
push
mov
cmp
(bad)
aad
mov
stos
cs
dec
mov
or
test
sub
dec
xchg
cwde
pop
shl
fmulp
das
inc
xlat
call
adc
dec
int
add
or
xor
lahf
pop
cmp
cmp
adc
mov
adc
cmps
test
inc
push
das
mov
out
aaa
fist
ret
pop
ins
push
pop
pusha
xor
adc
xor
pushf
inc
pop
dec
call
mov
mov
dec
push
int3
mov
jbe
sti
jo
mov
jmp
xor
push
sbb
outs
test
fwait
push
repz
retf
ja
(bad)
xor
sub
mov
xor
or
fucomip
aad
or
aas
mov
jmp
fcom
xor
inc
mov
aam
(bad)
outs
cmps
repnz
and
loope
aad
mov
popa
imul
ins
stos
aam
sbb
and
fisubr
and
inc
mov
pop
dec
mov
mov
setae
add
test
cmp
inc
dec
out
add
xchg
dec
push
mov
sub
push
rcl
scas
gs
xchg
mov
xchg
adc
pop
dec
sub
add
sbb
mov
jnp
mov
sbb
rcr
mov
sbb
mov
cmp
sbb
outs
xchg
retf
sub
xchg
imul
mov
adc
push
jp
jg
add
pop
push
neg
or
out
push
mov
sbb
xchg
inc
mov
lds
test
call
clc
and
in
int
push
sbb
adc
add
leave
inc
cmp
mov
mov
xor
mov
add
xchg
xlat
das
mov
jb
dec
xor
adc
adc
lea
aaa
xor
out
fidivr
lods
sbb
dec
loopne
jecxz
rol
(bad)
shl
cwde
push
sub
call
in
and
inc
jns
std
shr
(bad)
mov
(bad)
cmp
mov
ret
cmps
enter
pop
jns
loop
(bad)
or
xor
and
retf
inc
sub
push
pop
dec
push
xor
push
dec
adc
(bad)
(bad)
stos
push
xchg
out
mov
xlat
jnp
mov
inc
jo
mov
sub
pop
lods
and
pop
mov
push
cmp
(bad)
xchg
sbb
jnp
push
pop
add
in
addr16
adc
outs
adc
xor
cmp
das
xchg
fcmovbe
mov
dec
pop
ins
fisubr
dec
jmp
rcl
retf
rcl
std
shl
aam
push
inc
scas
scas
push
mov
or
sbb
xchg
mov
les
and
pushf
cmp
pop
xchg
xor
stc
jns
rcr
lods
push
mov
xchg
ins
rol
push
mov
(bad)
sbb
dec
cmc
push
fs
(bad)
sub
cmp
mov
frstor
jno
push
loopne
xchg
aad
cmp
push
cwde
lahf
add
frstor
movs
data16
rcr
in
aad
data16
rol
add
(bad)
mov
sub
pop
mov
pop
jl
mov
mov
pop
mov
pop
add
cmp
lods
les
sub
xor
mov
test
cld
mov
dec
iret
(bad)
in
or
ds
(bad)
mov
shl
sub
(bad)
jle
aad
int
sbb
dec
dec
pop
xchg
push
fcmovnu
adc
movs
jae
mov
or
int
sub
xchg
addr16
lds
cmp
movs
jns
js
gs
out
dec
xchg
jb
jns
dec
fld
mov
stc
fldenv
or
adc
inc
cdq
inc
jge
ins
inc
mov
(bad)
(bad)
fild
xchg
ins
xor
lds
popf
aad
pop
or
mov
and
pop
mov
std
mov
mov
jle
and
ins
or
repnz
je
jae
dec
outs
mov
or
sbb
sbb
sar
cdq
leave
and
call
cdq
mov
xor
mov
mov
inc
pop
push
ins
sbb
dec
inc
push
mov
aad
mov
jns
cmps
fidiv
addr16
sub
lea
ror
pop
lds
xor
inc
fdiv
daa
mov
sub
pop
or
in
xchg
pop
call
jmp
xchg
out
mov
and
push
pop
dec
push
sbb
leave
jge
sbb
fisubr
leave
cs
in
jae
aaa
mov
clc
loope
arpl
jnp
shl
ret
icebp
or
sahf
movs
(bad)
mov
(bad)
pop
and
cdq
les
pop
cmp
and
mov
adc
fwait
loope
push
mov
mov
lods
ins
push
xor
push
cmp
std
mov
mov
or
xor
cdq
retf
(bad)
std
jecxz
call
(bad)
or
les
dec
std
mov
xchg
jne
adc
pop
scas
(bad)
cmp
jmp
xchg
pop
sar
repnz
sahf
mov
sahf
std
cmp
in
jecxz
int3
iret
mov
push
imul
mov
aam
xor
and
cdq
cmc
add
inc
push
movs
jmp
sub
xchg
pop
out
mov
xchg
sbb
sub
js
jo
xchg
jne
dec
sub
mov
xchg
daa
out
xchg
inc
scas
enter
bound
jne
jmp
stos
adc
adc
and
(bad)
icebp
cs
cmc
adc
lahf
jg
mov
mov
inc
push
aam
fwait
ins
fdivr
icebp
xchg
fs
(bad)
jbe
fsubr
into
jge
dec
loop
data16
xlat
fild
cmps
retf
cmc
jg
sub
call
sbb
idiv
jmp
mov
jno
les
test
call
mov
dec
scas
adc
scas
xchg
mov
sub
and
les
or
push
xor
sub
push
out
jns
adc
inc
mov
bound
inc
lods
xchg
push
pop
mov
fnop
es
mov
xchg
inc
in
inc
cmp
(bad)
test
push
cmps
mov
sbb
sub
pop
pop
and
jbe
aaa
loopne
in
daa
and
xchg
and
inc
mov
leave
cs
in
inc
dec
mov
sub
sar
cmc
lea
gs
aas
(bad)
data16
push
sbb
jmp
pop
fcomp
and
xchg
cmp
lods
sahf
jmp
mov
stos
data16
pop
push
scas
ins
pop
ins
test
fistp
test
or
int
je
pop
mov
cli
sbb
xchg
jg
jmp
and
xor
dec
test
test
mov
sub
mov
retf
push
jmp
or
test
(bad)
imul
out
sub
mov
cld
mov
stc
mov
cmps
mov
inc
and
inc
sbb
outs
sbb
pop
push
mov
cli
lods
add
add
cmp
cs
(bad)
sti
lods
pop
jl
gs
(bad)
cld
mov
or
mov
pop
push
sti
xor
fiadd
test
or
stos
int
mov
aas
adc
push
xchg
pop
fxch
ds
in
out
cmps
add
fist
and
xor
pop
repz
call
jecxz
shl
icebp
push
jmp
dec
in
fisttp
es
sahf
sahf
sbb
push
pusha
mov
ds
push
imul
ins
adc
test
call
dec
pop
shl
cdq
dec
jecxz
rcr
out
aaa
jl
scas
call
pop
adc
lods
mov
push
xchg
stos
xor
jae
add
movs
cmps
push
in
out
pop
sub
cmp
loope
push
jmp
sahf
je
mov
xlat
jns
ja
push
outs
cmp
shl
outs
mov
fwait
jno
lock
test
cmp
mov
icebp
(bad)
in
cmps
loop
pop
loopne
scas
dec
arpl
or
push
sbb
mov
push
dec
mov
pop
fwait
call
mov
mov
dec
jge
das
inc
leave
dec
add
sub
shl
jl
xchg
pop
jge
ja
inc
xor
inc
dec
jecxz
and
or
daa
sahf
adc
xchg
sar
push
rcr
add
mov
rol
popf
pop
icebp
mov
add
and
fwait
push
lahf
push
pop
sbb
jg
jbe
mov
cmp
loop
pop
icebp
add
fimul
ins
cmp
mov
jle
cdq
into
pushf
popf
and
and
ret
outs
add
adc
mov
xchg
out
(bad)
aam
out
in
fwait
pop
cmp
adc
fldcw
mov
lahf
xor
inc
sbb
outs
add
pushf
dec
sbb
repnz
test
and
es
or
outs
mov
(bad)
fiadd
push
push
push
imul
push
push
add
les
inc
push
popa
rcl
pop
or
jge
push
xchg
es
test
int3
rcl
xor
mov
das
adc
sub
xor
push
mov
lods
dec
xor
push
dec
(bad)
ret
or
xor
repz
in
and
inc
sub
cdq
xchg
mov
(bad)
cdq
mov
sub
dec
in
in
fimul
adc
inc
or
and
jns
ror
push
rol
fist
outs
stos
pop
stos
out
adc
jb
add
sbb
jbe
pop
jns
and
mov
jbe
cdq
inc
cmp
test
xor
lods
mov
mov
stos
dec
out
push
cmp
cs
sub
repnz
push
es
jp
ficom
jecxz
jns
sbb
pop
daa
xchg
in
push
movs
mov
mov
stos
xchg
dec
add
and
xchg
ficomp
jl
pop
mov
inc
pop
gs
xor
push
xchg
daa
icebp
mov
and
aaa
push
cs
or
ins
sub
jb
ret
add
mov
sbb
dec
in
and
mov
jne
inc
pop
push
test
addr16
pop
cs
aam
ret
icebp
pop
imul
lock
mov
lds
arpl
shl
int3
xchg
jl
xchg
inc
outs
out
xchg
lea
rcr
das
or
call
inc
mov
adc
addr16
fadd
idiv
add
cmp
mov
sub
mov
mov
jge
inc
pop
mov
xor
pop
out
movs
or
and
cmp
and
iret
xor
or
aad
adc
leave
and
pop
call
icebp
jmp
pop
dec
sbb
repnz
adc
lea
pushf
xchg
and
enter
push
sbb
mov
jbe
mov
sahf
mov
(bad)
jge
mov
fadd
scas
sub
test
(bad)
aaa
xor
popa
or
mov
mov
cld
pusha
outs
cli
xchg
or
pop
and
adc
jge
fs
xchg
popf
push
sbb
dec
lods
push
mov
inc
in
mov
cmp
adc
(bad)
sbb
cli
test
pop
or
push
push
aad
cwde
in
test
out
lods
cmp
ja
and
in
clc
outs
int
or
mov
xchg
leave
add
sbb
push
call
mov
cmp
jno
jne
push
shl
aam
jae
inc
xchg
xchg
lock
pop
ror
push
sub
xor
cs
push
jecxz
dec
xchg
mov
dec
adc
in
out
pushw
pop
mov
push
jo
ja
or
sbb
lods
rol
movs
inc
or
enter
rcl
ins
jl
call
outs
xchg
mov
cwde
in
mov
into
cld
jp
cmp
stos
sub
cdq
dec
push
add
push
mov
stc
mov
retf
gs
mov
js
xor
jle
xchg
(bad)
call
js
mov
and
shl
into
std
mov
cdq
mov
cmps
sbb
fstp
or
cmp
lock
lods
jnp
push
iret
sub
pop
dec
push
inc
push
cmp
mov
jecxz
xor
pushf
dec
pop
push
pop
add
in
mov
stos
clc
push
shl
rol
das
cmp
addr16
aam
aas
call
xchg
loop
mov
lock
mov
idiv
imul
leave
les
les
repz
clc
add
movd
jmp
(bad)
mov
push
lods
or
dec
push
outs
lock
pop
pop
pop
out
and
pop
or
stc
push
and
rol
std
xor
push
push
in
and
jno
mov
jne
addr16
cmp
das
ins
ins
jge
and
push
inc
aam
inc
dec
movs
aam
adc
shl
jb
call
mov
pop
adc
std
sbb
cmp
mov
xchg
(bad)
xor
cmp
cli
jl
jne
ror
jmp
popa
jg
xchg
jne
adc
sti
mov
(bad)
xchg
pop
rol
fs
fild
mov
hlt
jbe
pop
jb
fcmovne
add
adc
or
lock
inc
pusha
push
jmp
into
leave
mov
ins
imul
ds
xchg
add
or
jmp
xor
xchg
pop
ror
mov
ja
inc
fs
cmp
scas
fxsave
adc
cmp
out
mov
pop
sahf
arpl
pop
test
inc
imul
cmp
stc
or
jg
or
movs
sbb
inc
test
cli
or
jno
jmp
push
xor
dec
and
push
(bad)
pop
call
mov
xlat
jne
cli
sbb
mov
push
sbb
pop
pop
pushf
mov
rcr
adc
add
sti
xor
push
cwde
lea
fcmove
in
xchg
dec
mov
pushf
vmwrite
leave
ins
lods
pop
outs
xor
cmc
aad
pop
shl
mov
js
shr
push
lods
xchg
push
iret
pop
push
mov
pop
adc
or
das
jl
jp
pop
(bad)
mov
inc
jl
rcr
loopne
stos
add
and
outs
leave
push
aad
fcom
cmp
in
inc
dec
fistp
mov
mov
and
mov
dec
mov
(bad)
sbb
push
leave
pop
sub
sub
aaa
or
add
jmp
loopne
mov
mov
sbb
(bad)
jnp
mov
cmp
ror
inc
push
adc
mov
fild
js
pop
sbb
jmp
xlat
mov
in
ins
mov
jne
retf
(bad)
push
sub
mov
cmp
jmp
repz
lods
jmp
pop
retf
addr16
push
ficomp
lock
lahf
cmps
arpl
(bad)
xchg
adc
xchg
pop
and
xchg
fwait
fwait
or
(bad)
sub
pop
xor
jp
jp
pop
pop
cmp
je
sahf
sub
popa
mov
add
(bad)
mov
out
or
hlt
sar
jb
ds
icebp
sub
pop
bound
ror
xchg
or
(bad)
push
sti
cli
xor
clc
mov
int3
add
out
(bad)
in
stos
cmp
inc
jecxz
ret
les
jne
std
pop
call
mov
iret
ret
and
and
lods
mov
inc
js
in
daa
mov
mov
sbb
js
sub
cld
or
(bad)
clc
push
dec
push
add
sub
jecxz
pop
mov
push
sub
fiadd
cwde
or
push
retf
cli
enter
pop
ins
clc
inc
xchg
mov
and
test
dec
sti
dec
adc
mov
shr
or
pop
repz
minps
add
outs
pop
adc
mov
(bad)
jns
test
pop
cmp
mov
(bad)
push
jle
xor
dec
sub
shr
dec
xchg
cmp
and
and
push
test
fwait
repz
not
andnps
pop
inc
test
or
aaa
ins
cmp
add
fsub
es
pop
sbb
xchg
(bad)
scas
pusha
les
repz
outs
cmps
fld
cmp
add
pop
jle
ins
mov
out
mov
mov
add
icebp
shl
or
jmp
leave
loop
test
mov
sbb
bound
adc
mov
gs
push
and
add
mov
fscale
mov
inc
and
mov
int3
nop
adc
xor
mov
mov
push
sbb
xchg
loope
mov
jg
push
rol
aaa
jmp
popa
fwait
mov
gs
neg
in
ss
movs
imul
call
fdiv
(bad)
out
push
add
push
pop
iret
dec
cmp
dec
xchg
enter
rcl
ficom
xchg
popa
sbb
nop
jmp
fldenv
jno
mov
fwait
leave
push
mov
mov
add
xchg
cwde
call
popf
xor
mov
mov
fisttp
imul
push
outs
popa
mov
ficom
iret
xor
sbb
xor
or
sub
push
daa
shl
movs
ret
jl
mov
fcmovbe
(bad)
lock
ins
in
and
ins
popf
and
ins
xor
(bad)
jb
cwde
arpl
cmps
inc
pop
push
rcl
and
pop
imul
out
mov
or
jge
bound
xor
xchg
ins
pop
mov
fs
fild
je
gs
test
pop
neg
call
test
dec
xor
push
popa
mov
add
shr
rcr
sub
jle
and
jg
cmp
in
push
ss
(bad)
clc
inc
fld
out
cmps
xchg
jg
push
lahf
(bad)
mov
or
adc
addr16
cmp
psubusw
(bad)
loope
call
xchg
out
mov
push
or
test
xchg
outs
and
repz
out
adc
imul
and
xor
fwait
inc
ins
mov
pusha
inc
sar
adc
cld
push
jbe
ret
mov
imul
cmp
adc
inc
and
addr16
or
push
ret
xchg
repnz
repz
call
or
xchg
sbb
add
sub
jmp
retf
(bad)
aas
fcom
adc
jg
rcl
and
dec
push
test
mov
xor
sub
jp
xchg
or
adc
(bad)
hlt
jecxz
and
scas
sbb
push
bound
or
gs
and
xor
pop
movs
adc
pop
mov
mov
outs
stos
pop
sub
je
retf
lds
out
mov
neg
jnp
or
stos
mov
xchg
pop
sbb
xlat
sub
jg
dec
cdq
pop
jecxz
jge
(bad)
dec
xchg
in
int
int
cwde
pop
popa
aaa
rdmsr
mov
inc
xor
pop
je
repnz
add
pop
jl
das
out
xchg
pusha
add
cmp
in
mov
jmp
idiv
sbb
and
inc
adc
pop
mov
ds
rcr
push
dec
imul
ins
retf
pop
adc
mov
mov
xlat
sub
mov
inc
daa
mov
lahf
mov
clc
dec
(bad)
int
inc
out
push
push
xor
push
pop
movs
adc
or
and
mov
xchg
push
push
xor
mov
jmp
pop
(bad)
mov
pop
test
test
call
and
xchg
xor
xor
stc
(bad)
test
xor
and
adc
lods
mov
call
mov
sbb
into
cs
fnstsw
das
jnp
sar
out
pop
test
inc
das
lock
xor
ret
push
inc
inc
mov
fidiv
jbe
mov
clc
inc
inc
xchg
(bad)
ins
xchg
call
cmp
movs
pushf
stos
push
xlat
adc
ret
mov
mov
jecxz
or
push
push
xchg
pop
in
loopne
pop
add
fwait
popf
xor
mov
test
mov
stos
xchg
inc
das
xchg
arpl
cs
cmp
sub
push
sahf
mov
and
pop
jno
je
dec
jmp
jnp
sahf
xlat
call
in
nop
sbb
fcmovnbe
repnz
add
jns
mov
sub
fcom
lahf
(bad)
scas
cld
jns
add
cs
sub
(bad)
push
js
or
cmp
jb
pop
push
push
mov
and
fldcw
adc
jno
cli
cld
lock
stos
mov
test
cld
imul
popf
cmps
jns
movs
fdivr
xchg
xor
adc
out
sbb
push
and
mov
scas
jge
cmc
xor
cdq
sub
push
pop
adc
aaa
dec
or
das
test
pop
mov
sahf
xchg
test
mov
rol
mov
test
mov
xlat
and
retf
dec
add
cmp
dec
push
jae
ins
fs
gs
dec
xchg
pop
test
leave
in
mov
js
scas
xlat
xor
mov
movs
enter
mov
shl
je
mov
repnz
mov
add
push
and
in
inc
movs
pop
aam
cmp
cmp
adc
dec
push
xor
adc
das
adc
stos
jecxz
shl
or
inc
sbb
dec
or
int
mov
repz
inc
enter
dec
fild
pop
jne
mov
sbb
scas
std
pop
pop
pop
pop
or
or
cmps
cs
jge
fimul
out
sbb
jb
retf
stos
bound
clc
push
mov
ret
pop
test
loopne
aam
dec
mov
in
pop
adc
xchg
push
push
fcmovnu
aaa
rol
sahf
cmp
mov
xchg
fistp
les
retf
or
push
dec
std
stos
mov
xor
fcom
fisttp
test
and
dec
out
icebp
(bad)
mov
retf
push
leave
pop
or
(bad)
pop
in
xchg
mov
push
aam
pusha
mov
sar
mov
jge
sub
ja
imul
cmps
push
cmp
push
mov
rol
js
pop
mov
ja
je
push
test
jg
ds
cmp
cmp
loope
jmp
xor
inc
ins
mov
retf
xchg
push
jmp
imul
sbb
ret
cmp
mov
mov
ficomp
xor
lods
cmp
aam
mov
pop
cmps
and
cwde
or
adc
scas
xor
test
xchg
jmp
ret
xchg
loope
xlat
les
jle
mov
fld
push
dec
imul
fs
dec
mov
xchg
rep
xor
xor
call
mov
adc
loope
jp
out
lahf
dec
iret
and
or
shr
aad
pop
icebp
clc
dec
xchg
adc
jae
cmp
nop
pop
mov
mov
jl
mov
pop
mov
jg
ins
nop
mov
adc
jnp
jae
ror
mov
imul
out
jl
pop
addr16
add
loop
shl
dec
pushf
adc
hlt
mov
and
(bad)
cmp
push
xor
pop
xchg
jle
pop
into
xor
repnz
dec
ja
inc
cdq
bound
mov
xor
cmp
test
sub
pop
push
ret
jb
add
dec
xchg
sub
push
loope
fisub
cli
movs
mov
dec
sahf
adc
push
mov
std
inc
pop
outs
aad
add
sub
xlat
es
scas
jecxz
imul
dec
ins
dec
(bad)
test
push
jnp
cs
xor
test
or
(bad)
lahf
sar
imul
aad
(bad)
repnz
retf
and
inc
imul
daa
dec
jno
pop
(bad)
mov
(bad)
loop
aam
out
or
and
je
stos
retf
sbb
cli
mov
aas
jne
sub
ret
stos
cdq
and
jmp
dec
outs
inc
bound
push
cmps
movs
fs
call
xor
js
fist
pop
setle
lock
in
xchg
mov
out
ds
jae
cmp
(bad)
aad
(bad)
jns
jnp
lahf
pop
test
adc
inc
ja
mov
inc
nop
pop
neg
cmp
(bad)
add
and
dec
ret
jecxz
jbe
call
(bad)
cmp
fnstcw
push
fsubrp
jb
imul
ficomp
movs
push
mov
add
fstp
push
xor
fmul
test
sbb
imul
loop
aas
and
mov
jne
mov
mov
xor
stc
xor
stos
out
sbb
mov
mov
xor
shr
pop
xor
movs
xchg
inc
mov
clc
add
pushf
or
mov
xor
ins
jmp
adc
das
jg
add
xchg
jle
test
(bad)
scas
jg
adc
je
add
mov
(bad)
je
pop
clc
(bad)
loopne
mov
ins
aam
mov
int
ret
ret
shl
ret
xor
sbb
dec
inc
lds
add
test
stos
addr16
pop
xchg
push
sbb
repz
or
dec
rol
mov
or
loope
ja
cld
ja
push
cwde
jge
jbe
or
popa
jbe
and
jno
stc
add
add
add
mov
sub
or
pop
pop
in
mov
cmps
push
iret
sub
mov
xor
push
ret
xchg
adc
push
arpl
test
mov
pop
push
cli
or
retf
fdiv
loop
nop
pushf
dec
lea
pop
xchg
ds
shl
out
jle
(bad)
xlat
pop
mov
jecxz
push
pusha
lds
imul
or
push
adc
and
popf
test
popa
cli
inc
mov
jl
or
or
out
jmp
xor
out
stc
mov
xchg
xor
mov
lahf
test
pop
dec
dec
inc
jmp
mov
das
loope
and
div
dec
sub
psllw
pshufw
mov
xchg
inc
mov
mov
dec
adc
repnz
mov
jecxz
test
adc
es
in
adc
xchg
adc
fld
xor
adc
gs
inc
jecxz
(bad)
test
es
popf
inc
sub
xchg
push
aaa
inc
sub
mov
push
cmp
fdivr
xchg
js
sub
stc
jns
and
sbb
sub
dec
xlat
sub
outs
jecxz
fdiv
mov
arpl
int3
outs
sbb
lds
ins
jmp
sbb
mov
dec
fadd
das
and
ffree
bound
xor
sbb
rcl
inc
imul
fbstp
test
mov
mov
sbb
mov
daa
push
jp
mov
mov
cmp
jne
add
stc
fwait
mov
inc
loope
ret
mov
rcr
xchg
jo
in
cld
add
imul
out
and
lea
(bad)
call
fxch
cwde
ins
sub
ja
and
bound
test
adc
xchg
aam
xor
out
mov
xchg
add
enter
ficomp
(bad)
xchg
dec
sbb
mov
xor
adc
pusha
ficomp
aas
sub
aas
pop
mov
lods
test
xchg
mov
mov
cmps
xchg
cmp
inc
pop
sub
dec
scas
cli
jmp
cdq
in
sub
inc
loope
jbe
(bad)
scas
add
mov
add
inc
dec
sbb
nop
pop
mov
mov
and
jecxz
fild
mov
ins
sub
xor
cmc
mov
pop
mov
sub
or
sbb
test
test
mov
test
ins
sub
pop
jp
mov
mov
sbb
add
xchg
xor
lea
push
mov
adc
in
pop
and
popa
ss
add
push
cmp
or
xor
pop
js
lods
push
jns
xor
pop
ror
and
mov
fnsave
inc
dec
pop
push
jmp
cwde
push
inc
data16
in
lods
push
push
inc
sbb
aaa
es
icebp
ds
and
mov
pop
adc
repnz
js
rcr
in
movs
mov
adc
pop
imul
push
mov
dec
shl
cmps
cmp
fs
mov
call
cmc
sbb
adc
call
fistp
ja
sbb
adc
sbb
mov
inc
dec
in
or
pop
stc
mov
ss
pop
leave
imul
and
sahf
add
mov
mov
sti
lahf
call
inc
sahf
aaa
lea
cld
jnp
adc
jnp
repz
popa
adc
adc
stos
push
and
xchg
scas
fnstenv
pop
movs
mov
std
das
mov
cmps
sbb
ror
xchg
mov
shr
(bad)
add
jmp
cmp
call
pop
jp
mov
and
call
push
or
mov
mov
xor
or
fild
in
pop
dec
(bad)
fld
mov
xor
push
and
cmp
cbw
sub
push
lods
ret
outs
adc
(bad)
gs
mov
aaa
push
and
pop
sbb
sbb
scas
cmp
in
xor
rcr
leave
pop
dec
dec
fsubr
push
adc
jns
pop
out
fs
das
sbb
test
enter
and
pop
fs
mov
loop
movs
test
inc
scas
push
std
imul
mov
jbe
loopne
mov
sub
sbb
fwait
mov
or
and
and
mov
in
enter
jp
(bad)
es
or
rol
retf
adc
ret
cld
cmps
fld
xor
mov
in
pop
stos
pop
mov
stos
jno
sub
jecxz
cmp
add
xchg
xor
adc
jmp
leave
add
push
pop
loope
mov
sahf
mov
and
jle
cmps
test
xchg
dec
inc
mov
sub
cmp
xchg
pop
mov
pop
or
mov
(bad)
in
retf
out
mov
fdivrp
daa
push
inc
mov
imul
sub
adc
inc
cdq
and
es
jnp
cmp
addr16
mov
(bad)
xlat
aam
cmps
cdq
cmp
pop
mov
out
scas
jo
xor
stc
in
add
pop
mov
add
ins
out
push
push
adc
push
jne
aaa
adc
sub
js
xchg
push
cld
xchg
aad
stos
sahf
xchg
popa
add
lods
adc
cmp
and
mov
pop
sahf
shl
push
call
pxor
arpl
repz
mov
nop
sbb
xor
inc
pop
jle
pop
int
xchg
jne
dec
add
add
inc
mov
inc
mov
test
mov
fst
mov
add
push
ins
test
push
fwait
das
rcr
push
outs
(bad)
pop
add
mov
xor
fs
xchg
loop
xchg
mov
lock
xlat
cmp
cdq
movs
retf
clc
mov
inc
call
mov
cmp
xlat
fsqrt
and
jg
pop
clc
std
mov
in
jecxz
jg
push
mov
push
cmp
mov
mov
rcr
leave
pop
cmp
popf
into
cmp
mov
add
mov
sbb
mov
inc
fcomp
sbb
fwait
add
sbb
jle
jg
sbb
jl
dec
sub
out
push
adc
nop
sbb
(bad)
xchg
xor
pop
in
(bad)
jno
pop
adc
cmp
sbb
sahf
loopne
mov
push
or
jne
xchg
xchg
clc
mov
popf
xor
pushf
sbb
shr
push
aas
cli
jmp
stc
and
jmp
jne
xchg
push
mov
adc
cdq
ss
or
ret
dec
jle
dec
mov
jne
push
jecxz
icebp
jmp
jno
lods
call
movs
push
sbb
cmp
(bad)
das
push
mov
jle
sub
aam
repnz
in
sbb
push
clc
sub
add
mov
aam
iret
pop
test
cmps
or
mov
repnz
inc
dec
pop
rcl
cwde
(bad)
or
sbb
sahf
push
sbb
ds
inc
pop
jo
into
pop
inc
cmc
fnstsw
inc
pop
ret
aad
jne
pop
mov
test
aad
mov
out
ret
cmp
adc
test
push
clc
adc
pop
jg
adc
push
jg
ja
mov
mov
(bad)
xchg
xchg
add
jae
lahf
repnz
jno
add
sub
cmc
sbb
lods
xchg
mov
jecxz
cs
mov
sub
int3
into
mov
cwde
push
and
xchg
push
imul
std
mov
rcl
push
repz
push
xchg
loopne
mov
outs
dec
call
cli
mov
addr16
fist
loop
push
sahf
(bad)
daa
fcmovu
mov
push
sti
in
int3
ret
mov
fs
or
test
shl
cmp
aaa
pop
mov
lahf
and
pushf
jo
mov
fcmovbe
(bad)
in
or
mov
sub
mov
sti
cmps
pop
popa
dec
push
loopne
fcomp
cmovnp
aaa
cmp
les
shr
repz
outs
in
xchg
jge
test
out
mov
clc
xor
mov
xchg
xor
or
lahf
test
nop
xchg
sbb
pop
inc
xor
xchg
dec
adc
out
jl
mov
sbb
rcl
ret
cmp
ret
rcl
js
sbb
fwait
xchg
fcomp
add
mov
jmp
xor
xor
mov
rcl
cmp
push
jno
(bad)
mov
iret
push
outs
or
jg
mov
daa
imul
js
inc
fidiv
pop
fisub
fcom
(bad)
lahf
adc
sbb
sbb
cmp
push
js
cmp
or
push
cli
jg
pop
mov
pop
xor
sbb
xor
(bad)
imul
push
push
test
sti
adc
loop
dec
push
inc
sub
shl
pop
movs
lods
hlt
mov
mov
and
std
test
pusha
mov
(bad)
ss
icebp
mov
mov
dec
sub
addr16
dec
shr
outs
mov
icebp
mov
fwait
loope
mov
push
test
nop
stos
adc
jecxz
xchg
ins
mov
out
std
sub
xor
sbb
mov
or
jl
cmp
fisttp
bound
push
in
pop
sbb
in
pusha
push
(bad)
mov
test
pop
repnz
xor
jl
add
or
jg
and
ja
adc
push
adc
bound
retf
(bad)
out
adc
aam
fcmovnu
retf
or
fwait
mov
jecxz
pushf
xlat
sbb
pop
cmp
cmc
call
jp
mov
stc
loope
std
jo
push
scas
pop
push
cs
xchg
scas
inc
pop
icebp
adc
mov
in
inc
fdivrp
mov
div
push
xor
sbb
mov
bound
mov
cmp
pop
pop
out
pop
push
xor
in
sbb
loopne
lea
jge
jg
xchg
or
and
jbe
add
mov
jmp
dec
jbe
mov
adc
jp
xchg
fimul
les
push
int
pushf
cmp
jae
and
xchg
mov
ret
shl
or
pushf
inc
stos
pop
sub
push
and
xchg
xchg
push
push
(bad)
ss
rep
inc
inc
inc
fidiv
ret
cmps
fld
movs
push
aaa
mov
xchg
stos
sub
fbld
ja
push
mov
jnp
xchg
adc
outs
or
cdq
ins
sbb
(bad)
jmp
add
pushf
mov
mov
mov
add
push
adc
repnz
lock
mov
push
jle
sbb
sbb
scas
push
or
inc
xchg
enter
mov
rcl
dec
call
and
sbb
dec
in
xor
dec
icebp
xchg
mov
mov
push
fadd
stos
adc
cmp
jb
mov
lods
mov
cmps
push
pop
adc
pop
(bad)
in
and
dec
mov
dec
ja
xchg
sbb
xchg
cdq
shr
inc
push
and
push
std
jp
xchg
pop
loope
fadd
xor
cmp
lock
cmps
or
jns
push
sbb
sbb
and
pop
pop
aaa
dec
arpl
lahf
add
test
test
mov
in
inc
fist
sub
in
mov
inc
add
jge
ds
mov
jmp
pop
mov
dec
out
cmp
cmp
ds
add
scas
adc
test
in
push
mov
inc
fsub
popa
movs
and
(bad)
fidivr
add
test
jmp
adc
xor
push
adc
lods
add
add
pop
push
add
pop
push
adc
in
sar
add
jg
dec
mov
push
add
xchg
repnz
out
les
cs
cld
cmp
pop
inc
xchg
(bad)
imul
stc
sti
inc
add
mov
mov
and
ficomp
clc
jge
dec
ds
test
or
in
mov
or
rcr
xor
cwde
lock
and
aam
movs
test
inc
iret
inc
mov
loopne
fdivr
cwde
pop
jp
repnz
pop
mov
bound
ds
leave
pop
xchg
shl
out
cmp
mov
jp
pop
sub
fdivr
mov
mov
sub
fs
popa
mul
mov
and
mov
es
mov
mov
mov
(bad)
ja
mov
adc
cmc
dec
push
sub
mov
neg
test
shl
push
xor
fadd
hlt
adc
not
scas
pop
mov
adc
daa
inc
push
(bad)
scas
push
ficomp
loope
push
scas
ins
sub
test
fisttp
add
fadd
mov
xchg
cs
stc
pusha
fist
cmps
jnp
enter
ret
pop
leave
inc
mov
in
in
mov
jnp
push
fstp
(bad)
jmp
outs
xor
leave
xchg
xchg
ret
aam
xor
push
stc
lea
clc
in
lods
mov
jp
mov
push
add
adc
fsub
push
(bad)
faddp
movs
pop
mov
fucomip
cmp
dec
sub
xchg
std
sbb
pop
sbb
repz
scas
add
std
fisttp
cdq
out
outs
scas
imul
les
xchg
repnz
repnz
retf
adc
ja
sub
mov
leave
shl
xchg
outs
enter
pop
jecxz
stc
jmp
sahf
movs
pop
jg
or
and
mov
mov
cs
cmc
jmp
es
pop
(bad)
jo
loop
dec
xchg
loop
arpl
int3
mov
pop
ficomp
sub
or
add
bound
lods
aas
jbe
jbe
lahf
lods
dec
pop
popf
cmp
inc
lds
fs
push
mov
xlat
ror
mov
gs
mov
jae
pop
push
pop
sar
mov
dec
push
into
test
pop
cmps
pop
inc
and
pop
and
(bad)
push
das
mov
not
scas
imul
push
mov
xchg
ins
cmc
imul
aaa
popa
push
xor
sub
popf
or
pop
mov
adc
mov
dec
add
mov
arpl
xor
ror
mov
mov
jnp
mov
add
daa
mov
fmul
repz
pop
addr16
aas
inc
test
ror
mov
xchg
shl
push
aad
es
xchg
dec
test
aam
cdq
aad
or
sub
mov
jp
xchg
sbb
mov
imul
jae
add
pop
sbb
(bad)
pop
push
sti
pop
lea
cmp
gs
push
pop
xor
cmps
dec
daa
scas
dec
push
add
ret
pushf
int3
out
ja
outs
mov
or
gs
jae
loopne
pop
jmp
and
cmp
lods
mov
loop
and
in
stos
dec
leave
dec
inc
out
cs
mov
aas
popa
in
fwait
jecxz
movs
out
fisttp
(bad)
mov
add
cwde
loopne
cmp
ja
jmp
sub
and
(bad)
pop
fist
mov
pop
sbb
push
add
mov
inc
shr
(bad)
fisubr
mov
mov
gs
in
mov
imul
mov
dec
arpl
inc
pop
sbb
lahf
pop
out
shl
aas
xor
cmp
movs
data16
fucompp
sub
cli
aaa
ficom
test
leave
fst
push
stos
add
lea
push
dec
add
in
mov
(bad)
push
xchg
int
adc
push
rol
jl
fisttp
test
sar
cmc
shl
inc
sbb
mov
add
lds
out
test
cmp
ins
dec
sti
lods
mov
test
cmps
loop
nop
in
ins
ins
jb
mov
ins
les
dec
adc
cmp
jge
ficom
add
jnp
out
mov
mov
sbb
aaa
xor
mov
div
out
pop
out
movs
frstpm(287
xchg
pushf
iret
sub
mov
int
add
inc
iret
inc
and
cmp
sub
ret
popf
fst
push
addr16
mov
cmps
jl
ror
mov
pop
movs
mov
mov
jb
and
mov
xchg
xchg
dec
sub
adc
rcr
int3
fldenv
mov
adc
jg
xchg
lods
and
(bad)
jb
add
and
jmp
inc
test
popa
shl
stc
inc
popa
sbb
(bad)
ss
add
lods
(bad)
enter
adc
mov
inc
jmp
retf
jno
imul
or
jo
or
aas
adc
xchg
jmp
cmp
ret
out
lods
pop
and
cmc
mov
repz
add
mov
fwait
imul
mov
jnp
call
push
cdq
inc
loope
lahf
leave
test
add
out
xor
push
xor
call
push
mov
mov
test
test
xor
into
mov
mov
retf
ja
leave
pop
call
cmp
je
jmp
jae
iret
sub
or
lock
xchg
push
call
mov
sti
jne
push
popf
into
sbb
in
imul
cvtpi2ps
push
xchg
imul
xor
mov
push
push
enter
dec
pushf
mov
fcom
mov
pop
(bad)
ds
xchg
(bad)
sbb
sub
push
ds
pop
repnz
jns
pop
loope
mov
mov
std
dec
aam
inc
(bad)
mov
xchg
test
enter
mov
sar
aam
in
jae
test
xchg
bound
jle
xor
pop
pop
push
mov
test
jno
pop
mov
ins
adc
jp
gs
dec
scas
lods
pop
jmp
inc
mov
(bad)
clc
adc
pop
stos
jle
cdq
call
xchg
adc
ds
mov
test
popa
aaa
add
push
dec
(bad)
addr16
scas
push
pop
repz
imul
push
sub
out
and
and
sub
fild
push
fs
(bad)
leave
jecxz
adc
cs
icebp
pop
xor
add
mov
push
leave
jp
repnz
sub
out
fidivr
fsub
sub
lods
repnz
cmp
in
or
clc
hlt
(bad)
push
jl
ret
in
ins
lods
mov
fwait
mov
inc
aam
cmp
jecxz
mov
retf
sub
jecxz
jmp
hlt
pop
scas
push
arpl
mov
xlat
mov
bound
fdiv
add
call
popf
jb
sbb
(bad)
mov
dec
and
out
mov
cmp
mov
jg
pop
pop
fdiv
(bad)
adc
push
jnp
push
dec
jle
sti
cwde
sbb
mov
mov
inc
sahf
jb
(bad)
fadd
nop
pop
mov
in
inc
jge
add
pop
cwde
xor
movs
cmps
xlat
arpl
pop
cmc
mov
and
xor
mov
cld
sbb
outs
cmp
fwait
sbb
je
fmul
imul
pop
mov
jl
dec
das
and
setp
mov
movs
inc
mov
movs
adc
jge
in
shl
cmp
sub
push
pop
pusha
loope
(bad)
mov
jg
pop
fidivr
inc
cld
or
test
pushf
daa
mov
push
jmp
jne
loopne
outs
xor
pop
pop
idiv
push
jmp
add
jecxz
cmp
pop
int3
mov
rcl
lock
rcl
cmp
dec
sub
jb
xor
add
mov
mov
fcomp
jae
movs
mov
icebp
inc
aad
jmp
mov
repz
add
sub
ret
aad
cmp
mov
add
icebp
xor
shl
in
jl
mov
xchg
movs
sub
in
pop
fs
mov
daa
push
fisub
int
sahf
dec
pusha
fdiv
lds
js
stc
mov
mov
jb
jmp
push
outs
push
or
retf
fldenv
xor
dec
in
inc
(bad)
in
cmc
inc
fild
in
inc
fabs
mov
push
scas
into
dec
jmp
data16
clc
(bad)
stos
mov
retf
fdivr
mov
dec
stc
imul
loope
loop
inc
ret
inc
xchg
ret
test
fs
mov
jb
pop
jbe
xchg
dec
not
pop
sub
ret
inc
dec
pop
std
call
sub
ds
test
mov
js
cmp
loop
xchg
in
xor
and
xchg
popf
pop
inc
jmp
bound
xor
mov
icebp
xor
add
test
test
fld
pusha
mov
push
mov
cmp
cld
scas
cmp
adc
stos
aad
push
push
adc
js
mov
pop
addr16
xlat
sti
(bad)
lock
cmp
sti
or
test
mov
sar
cmp
(bad)
jb
pop
mov
lea
dec
mov
gs
jnp
xor
bound
into
xchg
sub
mov
mov
mov
loopne
xchg
or
mov
adc
daa
les
add
push
out
sbb
sbb
push
jns
and
pop
jbe
clc
add
inc
daa
add
cmp
inc
add
ret
sahf
xor
arpl
and
pop
adc
push
xor
aaa
in
dec
add
cmc
retf
(bad)
xchg
das
xchg
(bad)
jmp
push
inc
fcomp
stc
rol
mov
cmc
add
push
or
xchg
mov
dec
js
xor
rcl
and
outs
repnz
xor
dec
jnp
sbb
(bad)
sahf
mov
dec
fwait
mov
sbb
cmp
leave
out
mov
push
popf
repnz
or
or
jecxz
das
js
cwde
xchg
div
and
inc
hlt
(bad)
out
neg
rol
imul
push
sbb
lods
push
ins
sahf
pushf
mov
fistp
jne
mov
lds
(bad)
call
mov
dec
add
retf
push
cmps
and
or
xchg
das
gs
lods
push
dec
and
jge
retf
pop
lds
adc
(bad)
mov
and
rcl
bound
sti
inc
mov
add
pop
sbb
adc
cmp
xor
test
ja
and
dec
addr16
jmp
xchg
jae
es
fisttp
and
shl
call
jnp
add
lock
xchg
ret
lea
xor
and
rcr
mov
shl
out
loopne
rcr
or
mov
sahf
jae
pop
iret
push
jno
clc
push
ss
cwd
sub
rcr
dec
data16
outs
aaa
or
(bad)
pop
jecxz
repnz
push
push
mov
xchg
and
or
mov
sub
cwde
push
sbb
jns
sti
xor
shl
sbb
sar
leave
movs
add
inc
aam
shl
mov
and
fcomp
out
retf
sbb
stc
shl
jmp
sbb
out
push
imul
xchg
jno
mov
fisttp
ror
mov
xchg
sub
and
sub
jbe
jae
pop
xor
loopne
adc
out
out
cwde
in
aam
adc
fild
jmp
dec
adc
and
push
mov
les
dec
sbb
jecxz
retf
cmp
cmp
fs
add
jge
inc
or
sub
pop
in
mov
inc
xchg
mov
into
in
ja
shr
xor
loope
mov
lods
dec
jl
sub
and
stos
cmps
mov
mov
lahf
xor
xor
loope
mov
mov
(bad)
or
or
jp
loop
pop
push
adc
leave
in
push
clc
xchg
adc
fidivr
jns
in
adc
adc
cli
pop
in
mov
adc
mov
jae
into
mov
xor
(bad)
into
adc
cmp
fmul
sti
cmc
scas
js
into
xor
mov
or
sub
cs
sbb
sub
addr16
sti
std
jo
(bad)
into
rcl
leave
test
fild
out
nop
(bad)
mov
xor
mov
cmp
mov
popf
sub
lods
sub
fwait
aas
push
fucom
adc
xchg
mov
mov
mov
dec
pop
mov
inc
or
push
ins
popf
jns
test
mov
jp
add
mov
loopne
out
cmp
clc
test
jo
lahf
inc
aas
sub
xor
lods
test
adc
mov
pop
add
sub
loope
sahf
cmps
and
sub
test
xchg
cwde
mov
xchg
repnz
jne
sbb
push
cwde
dec
cwde
std
fsubr
and
xor
shl
or
xchg
adc
into
mov
sbb
jmp
jmp
in
out
pushf
dec
sub
(bad)
jle
sub
push
xor
mov
mov
cmps
mov
push
sbb
xchg
fiadd
mov
and
mov
lock
test
or
(bad)
mov
mov
sbb
popa
sub
fistp
pop
push
adc
or
mov
retf
inc
jp
sbb
xor
call
or
xor
shl
mov
push
mov
je
mov
inc
jbe
cld
jne
mov
adc
inc
mov
sahf
push
lds
sbb
adc
xchg
pop
addr16
mov
mov
call
rol
das
test
test
cs
pop
fs
mov
jae
lods
aas
inc
repz
and
jge
rcr
sbb
jecxz
add
sahf
xor
add
mov
jge
add
popa
cmc
stos
cmp
vmovhps
mov
jmp
(bad)
xor
outs
cmp
adc
jmp
jmp
ret
xlat
lahf
fidivr
sti
push
ins
movs
lahf
(bad)
(bad)
cmp
xor
sub
push
jb
cmps
adc
mov
push
(bad)
jmp
add
in
pop
fistp
mov
pop
les
mov
pop
aas
cmp
fdivp
xor
sbb
sbb
mov
xlat
scas
lea
xchg
shr
xchg
pop
test
jno
or
adc
repnz
rcr
sahf
rol
aad
push
aaa
add
mov
out
(bad)
test
sub
std
js
cmp
out
lods
test
inc
pop
(bad)
adc
adc
cdq
pushf
and
xor
retf
or
pop
mov
clc
sbb
adc
push
lds
stc
pop
sbb
neg
push
fisub
adc
movs
sbb
sbb
adc
loopne
jp
adc
jb
jmp
mov
out
ss
std
ss
dec
jg
fisub
retf
ret
jecxz
inc
pop
push
and
mov
inc
jmp
push
adc
pop
cli
nop
cld
jbe
int3
xchg
outs
mov
mov
sub
push
aaa
ret
in
pop
pushf
dec
loop
jp
jb
popa
mov
sub
daa
add
arpl
call
fs
lahf
jbe
and
stc
ret
add
pop
cmps
lea
push
sbb
add
dec
pop
pop
cmps
or
xchg
dec
add
out
or
push
iret
retf
pop
ds
(bad)
lds
mov
pop
pop
pushf
jl
test
ficomp
sbb
(bad)
cmps
adc
in
dec
(bad)
pop
cmps
mov
fild
sti
arpl
rcr
push
dec
push
loopne
sbb
mov
cmp
add
sbb
push
pop
mov
fstp
test
mov
add
jp
pop
inc
(bad)
push
mov
je
ss
pop
jmp
in
and
cld
dec
test
push
movs
test
fstp
sub
stc
sub
sbb
dec
cmp
aaa
jne
dec
push
arpl
adc
call
or
fistp
enter
push
addr16
rcl
test
xor
shl
cmp
iret
pop
xlat
cmp
sbb
mov
repz
dec
dec
xchg
and
enter
add
fld
std
mov
xor
imul
mov
rcl
adc
mov
pop
div
or
mov
data16
jb
mov
int3
xor
dec
rol
jmp
cmps
or
les
and
repnz
sub
cmp
adc
movs
(bad)
in
pop
and
sahf
jae
sti
xchg
popf
iret
comiss
jnp
push
and
adc
ret
bound
xor
lods
xor
pop
aad
shr
push
xchg
sbb
sar
push
xlat
mov
call
mov
int3
test
(bad)
mov
xchg
or
jns
adc
xor
xchg
(bad)
test
cmc
sub
push
mov
jecxz
ret
rcl
xor
mov
xchg
sub
fidivr
fstp
data16
lahf
pushf
mov
bound
cmp
mov
lods
mov
mov
mov
imul
int3
cwde
cmp
ins
mov
ins
jb
or
adc
outs
dec
hlt
jb
add
inc
push
jl
lds
mov
adc
cmp
lock
sbb
dec
mov
out
pop
(bad)
out
test
add
jg
xchg
mov
xlat
or
push
lods
bound
mov
or
sbb
or
adc
push
aad
xlat
jo
adc
leave
in
call
adc
lods
adc
dec
loop
mov
jbe
retf
pop
es
and
js
mov
jecxz
rcl
rol
pop
clc
loopne
inc
pop
daa
cmp
mov
enter
int3
mov
adc
inc
ror
fcomp
mov
stos
outs
or
imul
fwait
mov
adc
ss
sbb
mov
and
dec
add
or
adc
int3
fstp
lock
xor
push
ret
ja
sbb
xchg
std
mov
xchg
jl
mov
jge
inc
xchg
sbb
xor
arpl
push
xchg
add
mov
cmp
sbb
or
push
std
fisttp
push
add
mov
and
repz
and
mov
ror
cli
jl
mov
add
data16
jns
retf
out
es
movs
adc
mov
addr16
xor
retf
add
mov
icebp
pop
mov
xor
or
dec
mov
int3
(bad)
jns
lea
loop
test
sahf
dec
test
add
xchg
mov
(bad)
mov
fwait
jbe
jne
xchg
dec
dec
and
enter
test
daa
arpl
clc
xor
ror
push
icebp
movs
shl
push
div
idiv
sub
xchg
sbb
inc
sbb
jl
pop
(bad)
(bad)
fmul
push
xor
pop
shr
mov
pop
and
sbb
mov
mov
adc
test
out
jmp
sar
mov
test
pop
cmps
addr16
ret
cmps
fsub
or
pop
mov
mov
ds
jb
leave
lods
sahf
mov
jns
xchg
xchg
jle
iret
push
rcl
push
dec
out
mov
stos
pop
fistp
stos
lds
lods
xlat
mov
mov
cmp
dec
cmps
xchg
cwde
and
or
cmp
and
movs
add
add
sbb
mov
xor
loope
ins
in
cmp
xchg
shl
rcr
pusha
(bad)
mov
xor
cmp
in
je
je
cld
popa
mov
fisttp
jb
aaa
add
push
mov
retf
jo
cmp
cld
push
add
dec
cmc
outs
xor
mov
je
push
jmp
ss
enter
or
dec
sub
nop
cmp
clc
sub
jmp
jb
cs
push
shr
xchg
retf
sbb
pop
pop
fidivr
mov
sbb
jle
int
loopne
retf
add
in
sbb
dec
ss
inc
xadd
outs
mov
cmp
adc
cmp
fincstp
jmp
sub
sub
sbb
inc
loop
and
adc
test
xchg
shl
push
sahf
aam
pop
fs
loopne
call
lock
adc
ins
call
cli
ds
push
leave
aaa
mov
jnp
loopne
xor
jne
std
sbb
add
ret
call
push
jae
mov
sbb
je
push
sti
pop
push
out
add
inc
add
rcl
(bad)
sub
add
mov
sub
(bad)
sub
out
test
nop
xchg
dec
int
cmp
pop
or
push
(bad)
cmp
pop
pop
pop
adc
jle
retf
fcom
jne
lods
cmp
movs
shr
jbe
sahf
push
fisttp
adc
(bad)
fnstsw
lock
les
or
or
ins
sbb
stos
imul
ss
dec
pusha
es
or
sar
inc
sbb
arpl
aaa
or
and
sbb
sbb
mov
mov
aad
retf
scas
inc
jne
dec
xchg
jnp
mov
cmp
fisubr
in
fcom
lahf
scas
sbb
in
sbb
pop
inc
cld
xor
mov
and
bound
ss
int
imul
and
sti
lods
movs
xor
dec
jg
mov
add
cmp
pop
adc
mov
mov
ss
cld
adc
jb
adc
pop
and
(bad)
mov
in
pop
call
jnp
lahf
or
cmps
mov
and
ins
in
add
les
pop
mov
mov
imul
arpl
push
shr
dec
repz
jl
mov
dec
add
ins
(bad)
data16
lahf
sub
fwait
das
fcomp
mov
movs
mov
xor
bound
(bad)
jae
jge
pop
mov
or
push
push
jp
mov
pop
sub
bound
lds
jmp
sahf
jmp
xchg
jnp
xor
cmp
lahf
dec
adc
and
shr
push
mov
mov
cwde
sub
(bad)
je
sub
pusha
mov
movs
cmp
jg
repz
shl
stos
gs
mov
scas
mov
and
ins
test
mov
and
pop
mov
test
(bad)
sbb
and
shl
js
stc
loop
and
mov
push
nop
sbb
sbb
lahf
pop
fwait
mov
pop
inc
pusha
jle
retf
mov
sbb
cmp
dec
sbb
(bad)
ins
pop
loope
shl
adc
xchg
push
adc
mov
je
sub
test
sub
mov
imul
cli
outs
rcr
push
(bad)
inc
pop
outs
jb
pop
lds
add
shr
outs
xor
inc
pop
mov
sub
cmp
(bad)
out
clc
les
retf
mov
lock
jge
add
test
and
cmps
(bad)
dec
mov
enter
addr16
sub
(bad)
out
sbb
jne
mov
jnp
(bad)
cmp
mov
push
div
xchg
mov
lods
repz
mov
push
lods
or
ds
popa
cmp
jno
cwde
(bad)
std
jecxz
(bad)
jmp
arpl
sbb
jge
dec
cmp
dec
add
adc
mov
fiadd
cli
jno
mov
aam
mov
xor
js
inc
mov
into
(bad)
arpl
dec
xchg
xchg
ror
sbb
popa
sahf
cmp
mul
jbe
imul
mov
imul
fsub
and
sbb
push
jae
mov
push
jl
sbb
retf
add
test
add
fcmovu
fisttp
xor
and
cmc
adc
popf
dec
or
jno
mov
adc
mov
mov
cmp
mov
scas
gs
lods
addr16
jp
push
pop
fs
fdivp
inc
or
adc
adc
pop
int3
xor
mov
jno
xlat
xor
cmp
sbb
push
jbe
mov
xor
add
adc
fwait
pop
call
mov
repz
retf
movs
cmp
push
stos
out
add
in
inc
stos
ins
cmp
sbb
shr
out
sti
mov
cmp
inc
xchg
inc
mov
mov
or
das
movs
rcl
outs
mov
test
push
adc
in
es
inc
or
mov
leave
jg
mov
adc
xchg
cld
sbb
es
in
fisub
push
scas
push
std
test
xchg
and
mov
jl
jns
mov
movs
outs
add
dec
mov
test
sti
jno
mov
xor
fimul
cli
ret
ret
xchg
xchg
mov
loope
push
ins
frstor
arpl
movs
push
xor
fdivr
push
and
fld
ss
and
adc
cmp
inc
or
mov
mov
push
sub
add
sar
add
in
add
scas
fwait
adc
fisub
enter
xlat
jb
icebp
mov
ins
in
fisttp
push
cli
jge
xchg
xrelease
inc
or
(bad)
push
cmps
inc
sbb
xor
fistp
push
pop
jg
in
pop
addr16
lahf
sub
mov
mov
(bad)
sbb
lea
fwait
(bad)
and
loopne
sbb
imul
and
dec
pop
je
rcr
lds
xor
aas
stc
sbb
or
dec
test
popf
int
jecxz
and
mov
sub
push
xor
push
add
clc
test
jmp
aam
fcomi
xlat
mov
int
jecxz
xor
xlat
push
mov
cmp
mov
push
xchg
mov
ss
cmp
rcr
push
loop
pushf
(bad)
push
es
dec
mov
adc
fs
mov
mov
out
shl
inc
or
dec
bound
das
cmps
sub
ss
fsub
clc
ret
add
fistp
daa
sub
je
pop
daa
jmp
in
dec
fisub
(bad)
(bad)
loop
add
scas
xor
mov
xchg
xor
lock
movs
cmp
add
cmps
mov
dec
in
push
push
inc
out
cwde
mov
xor
stos
je
jbe
pop
cli
or
add
xor
call
push
jle
fcmovnbe
mov
inc
push
(bad)
push
fs
loope
ds
sahf
sub
imul
rcl
mov
(bad)
sbb
nop
rcr
les
mov
(bad)
mov
sub
scas
addr16
inc
sbb
in
enter
(bad)
jmp
adc
mov
es
jp
pusha
pop
sbb
rcl
xlat
mov
(bad)
jmp
cmps
mov
daa
jge
fwait
movs
cmp
cmc
sbb
sub
pop
scas
jno
jp
cs
or
lea
push
bound
std
and
test
test
cdq
sbb
add
aas
into
retf
lahf
mov
scas
mov
mov
adc
lds
int3
adc
data16
es
inc
cmps
adc
(bad)
aas
and
in
sahf
push
cmp
cmps
adc
sbb
aad
loopne
jnp
jl
mov
jne
nop
ffreep
aad
je
jmp
jno
push
addr16
mov
adc
fisttp
adc
and
pop
and
add
cmp
int3
add
psrlq
popf
jo
retf
jne
ret
ret
movs
shl
cmp
popf
clc
clc
fwait
push
(bad)
fimul
fcomi
mov
mov
rcr
mov
pop
sbb
sub
xlat
das
inc
mov
mov
daa
push
ror
xchg
lods
adc
icebp
inc
push
xchg
sub
and
mov
xchg
ror
ficom
inc
push
sub
sbb
adc
push
popa
out
mov
cli
movs
mov
fist
lods
adc
je
push
pop
inc
cmp
push
pop
xchg
and
sub
scas
aad
scas
dec
jb
cmp
movs
scas
push
mov
mov
daa
push
and
inc
dec
dec
jg
in
and
lods
(bad)
and
cld
lods
repnz
sbb
out
dec
aas
push
add
add
sub
dec
mov
fsubr
in
inc
mov
sub
xchg
mov
bound
std
mov
adc
retf
fisttp
clc
clc
sbb
sti
int3
cmp
adc
dec
movs
and
mov
repz
aaa
xchg
out
cli
xchg
sub
mov
bound
add
test
jge
and
push
sub
es
push
and
dec
enter
jno
daa
inc
out
in
add
inc
dec
pop
call
or
clc
pop
and
or
inc
mov
cmps
mov
out
cmp
xchg
mov
adc
inc
ret
mov
xchg
hlt
mov
add
cmp
xchg
dec
push
es
mov
jae
fs
mov
add
test
mov
jge
in
aad
ds
arpl
mov
push
fnsave
mov
push
push
sbb
or
add
dec
lahf
shl
mov
add
into
cmp
jmp
mov
or
fld
inc
pop
fnstsw
sub
cmp
jge
leave
scas
jo
pop
inc
js
std
popa
xor
inc
lea
inc
imul
or
pop
adc
push
loop
out
inc
cmp
mov
fild
cmp
inc
push
and
xchg
inc
bound
rol
push
dec
pusha
mov
aam
mov
mov
push
mov
pop
jmp
pop
rol
mov
sbb
xchg
gs
or
mov
mov
test
enter
arpl
enter
dec
femms
jg
sbb
inc
dec
dec
cdq
into
sub
mov
aam
mov
push
mov
ret
js
ins
xor
cs
or
mov
loope
inc
jnp
xchg
mov
std
and
dec
sub
mov
leave
ret
sahf
shl
call
es
mov
inc
push
mov
not
fmul
xchg
cs
daa
jecxz
inc
or
pusha
adc
mov
shl
stos
mov
in
mov
jecxz
dec
loop
pop
cmp
cmps
popa
mov
push
clc
mov
lock
lock
cmps
fist
cmp
retf
fadd
ret
jle
aas
add
sbb
mov
jp
jno
cld
push
(bad)
mov
jle
outs
ja
mov
ret
js
xchg
add
dec
(bad)
pop
jg
sbb
std
pop
out
jnp
sub
and
pop
xchg
pop
outs
add
push
pop
or
fadd
jns
js
loope
add
mov
out
lods
cmc
xor
mov
fsub
or
jno
ret
or
std
jnp
mov
dec
pop
xor
rcl
jae
out
dec
rol
sbb
or
mov
ja
stos
pop
jae
int
in
outs
xor
jae
xchg
sbb
in
dec
dec
das
imul
or
xchg
lods
test
jl
or
outs
pop
jp
xchg
adc
into
imul
adc
arpl
mov
jl
sub
div
jno
and
and
pop
jae
test
mov
fdecstp
jp
xor
mov
ja
xchg
das
cmp
sbb
xor
icebp
pop
loope
in
jecxz
push
cmp
xor
(bad)
adc
mov
jb
or
imul
leave
cmp
iret
cmp
lock
out
jae
(bad)
in
push
popa
push
sqrtps
(bad)
in
xchg
aas
sahf
shl
and
daa
cmp
loopne
sub
mov
push
packuswb
lea
and
add
into
into
cmps
aam
cmp
mov
inc
outs
(bad)
mov
xor
cmp
mov
scas
and
xchg
out
adc
sar
jmp
mov
arpl
mov
mov
inc
inc
dec
xchg
xchg
rol
mov
ss
sub
xchg
pop
jo
(bad)
int
(bad)
clc
dec
mov
jmp
sar
lods
mov
or
or
pop
repz
retf
sbb
std
(bad)
pop
mov
pushf
in
sti
fdivr
icebp
shl
dec
outs
les
dec
adc
ins
clc
jae
inc
or
jle
fnstsw
mov
push
inc
daa
ja
jnp
pop
lock
sub
add
std
enter
jbe
xor
pop
cmp
push
test
pushf
adc
add
dec
je
add
in
es
or
std
jmp
pop
arpl
xchg
and
shl
cld
fs
push
and
cmp
loop
ret
jp
xor
loop
ja
(bad)
mov
pop
cmp
sub
test
mov
int
das
pop
lock
iret
push
mov
jns
(bad)
sbb
fldpi
ret
inc
sub
lea
xlat
xchg
les
(bad)
jmp
daa
jle
inc
sbb
add
arpl
je
mov
test
and
fdiv
mov
xor
push
test
movs
xchg
sub
sub
and
ja
call
or
into
pop
cmp
or
add
pusha
pop
pop
test
iret
or
push
cmp
and
sub
mov
stos
lods
jo
xchg
imul
hlt
ss
pop
in
pop
mov
push
ret
adc
popf
adc
inc
fwait
cmp
es
ins
push
pop
inc
add
jae
push
stos
jg
xor
or
pop
ss
rcr
ficomp
dec
out
rcr
sbb
jae
adc
jns
or
vpsrlw
je
cwde
rcl
icebp
loopne
ins
div
sbb
(bad)
in
popa
idiv
retf
push
scas
pop
cmp
mov
add
jg
mov
es
sub
mov
pop
push
jle
cdq
mov
cmp
xchg
daa
adc
sub
(bad)
adc
nop
lods
sbb
out
adc
mov
mov
lods
lds
leave
ret
pop
cld
clc
in
xchg
xchg
push
cdq
inc
jae
dec
adc
add
test
push
fdivrp
mov
mov
jmp
std
or
mov
es
or
xlat
rep
lods
in
and
lahf
push
mov
test
(bad)
retf
test
retf
adc
add
pop
sbb
sbb
sub
or
cmc
loopne
fbstp
dec
sbb
popa
jg
cmp
in
dec
or
popf
in
lds
retf
leave
mov
stos
xchg
call
or
cmp
add
adc
scas
mov
sbb
jmp
test
mov
pop
push
fcomp
cmps
mov
in
addr16
add
sbb
mov
and
pop
push
lods
out
xor
cmps
mov
ds
cmc
fwait
js
sub
mov
lock
pop
mov
imul
or
jmp
leave
dec
add
cmp
out
loop
xor
and
pop
mov
add
sbb
cmp
mov
lds
sbb
lods
and
outs
push
mov
mov
mov
lahf
jb
xchg
mov
pop
xor
shr
xor
sub
bswap
jg
dec
pop
sub
iret
mov
div
mov
mov
out
push
ret
jns
pop
inc
pop
push
and
xchg
cmp
mov
jl
es
mov
sbb
push
mul
xor
fwait
add
test
(bad)
cmp
inc
in
or
sub
int3
idiv
fmul
add
cld
es
int3
dec
push
jecxz
lods
sbb
push
inc
es
lods
cmps
lea
jl
test
inc
pushf
sbb
mov
mov
inc
and
mov
retf
repnz
sbb
cmps
xchg
cmp
mov
ret
jno
fild
outs
and
push
jmp
fwait
loope
pop
addr16
fs
add
xchg
jp
arpl
addr16
push
pop
jmp
and
(bad)
aad
in
dec
jno
pushf
cmps
pop
movs
jmp
or
dec
shl
jmp
or
ds
mov
in
mov
inc
in
outs
loopne
fs
or
aaa
jae
pop
add
shl
je
push
arpl
iret
add
out
aam
js
or
fneni(8087
outs
and
xchg
fstp
dec
add
xor
adc
std
(bad)
mov
outs
sub
cmc
bound
mov
sbb
and
xchg
int
stos
out
mov
sub
pushf
(bad)
lock
mov
fst
loopne
inc
sbb
mov
mov
mov
jecxz
dec
cld
cmp
jb
gs
rcr
mov
aas
pop
mov
xchg
into
jmp
mov
mov
dec
fist
daa
cdq
push
inc
xlat
or
mov
icebp
(bad)
pop
mov
in
aaa
int3
mov
sbb
in
add
sar
cmps
out
(bad)
hlt
xor
mov
sub
popf
imul
outs
dec
adc
es
lahf
out
ret
aaa
xor
ret
xor
and
mov
adc
addr16
dec
clc
inc
cli
cmp
scas
movs
nop
inc
and
imul
movs
and
jb
mov
pushf
and
(bad)
fiadd
mov
cmovp
shl
test
sub
(bad)
stos
push
mov
mov
pop
adc
sub
sub
add
rcr
cmc
sahf
daa
lods
add
xchg
std
lea
add
sbb
rcl
enter
add
xor
fimul
push
pushf
mov
lods
add
jo
lods
lds
sbb
int
enter
cmps
retf
or
lods
cmp
xor
or
ins
in
mov
push
xor
add
out
inc
and
lahf
retf
stc
pop
sahf
cli
jno
mov
(bad)
test
rcl
into
or
imul
pushf
aas
lods
in
mov
pop
lea
popf
fld
imul
or
retf
jno
adc
pop
test
jle
push
fnstsw
add
mov
inc
pushf
pop
or
and
jae
mov
or
xchg
mov
sub
loopne
fdiv
push
femms
scas
push
in
fcomp
stc
pop
rcl
jae
jno
or
aam
stos
cmps
pop
or
pop
int3
bound
xchg
or
lds
inc
(bad)
mov
inc
pop
pop
adc
sub
cmp
adc
addr16
xchg
outs
push
ja
ins
sub
inc
movs
or
mov
std
sti
mov
addr16
arpl
xchg
xchg
adc
inc
shl
adc
add
mov
shr
test
mov
in
vmwrite
ret
sbb
mov
sbb
jbe
pop
mov
push
pop
icebp
and
xor
call
mov
loope
dec
(bad)
cmp
or
hlt
or
adc
fbstp
adc
dec
aad
pop
popf
add
sti
xchg
icebp
xor
sub
cmp
xor
mov
mov
(bad)
loope
ror
jb
mov
fist
jp
cli
push
retf
fdivr
neg
pop
daa
mov
loopne
cmps
aas
imul
arpl
ins
mov
outs
or
fsub
rcr
add
pop
push
fadd
mov
gs
pop
lahf
cs
call
add
xor
pop
call
xor
in
push
xor
or
cwde
in
sar
iret
data16
sub
jg
int3
xchg
retf
cmp
fyl2x
dec
sbb
fwait
jmp
int
jmp
pop
mov
inc
sub
pop
sub
icebp
leave
pop
jmp
ins
cmp
or
ja
inc
pusha
jp
mov
bound
dec
push
xlat
xor
cmp
mov
es
push
mov
jae
jge
jmp
dec
scas
pop
pop
js
out
adc
inc
add
mov
xor
movs
pusha
js
add
pop
mov
sbb
xchg
(bad)
jl
or
or
pusha
cmp
adc
add
(bad)
movs
mov
mov
or
pop
push
cmp
cld
jmp
or
or
sbb
aas
shl
add
mov
inc
mov
sbb
rcl
mov
mov
scas
cmp
mov
jb
stos
jno
add
or
mov
out
gs
xchg
dec
xlat
jns
and
cli
inc
repz
jns
mov
pop
pop
push
jno
dec
imul
fisubr
or
cmps
pusha
sub
retf
sahf
or
push
adc
pushf
(bad)
dec
add
imul
scas
xchg
outs
repz
test
call
sbb
and
adc
stos
mov
jecxz
test
mov
pop
test
int
xlat
inc
lahf
sti
ds
push
pusha
ja
rcl
cs
add
aas
hlt
cmp
jp
inc
or
icebp
dec
popa
ins
leave
movs
push
in
xchg
dec
xor
ins
bound
push
or
retf
push
imul
mov
add
xor
mov
and
movs
mov
push
xor
popa
pushf
pop
sbb
xchg
movs
call
cmps
jno
and
js
iret
mov
and
xlat
iret
lods
ja
daa
out
mov
movs
out
stos
xchg
popa
mov
gs
ins
bound
repnz
cmp
clc
adc
sub
push
ret
pop
and
mov
das
sbb
jmp
test
xchg
bound
sbb
push
dec
mov
pusha
retf
and
lea
(bad)
cwde
mov
pop
jo
repz
pop
inc
icebp
jae
test
mov
or
mov
js
pop
(bad)
dec
fbstp
jl
jl
cmp
mov
mov
add
adc
stos
add
inc
jle
fdivr
cs
std
push
adc
aad
pop
push
sbb
pop
adc
sbb
sub
ins
cmc
mov
call
sub
mov
gs
jg
mov
xor
icebp
stos
pop
loopne
fistp
cmc
fnsave
loopne
pause
stc
jno
fld
cmp
jmp
mov
loope
js
pop
adc
xchg
sbb
xchg
xchg
dec
ret
rcl
das
test
pop
rol
jae
sbb
stos
and
add
add
nop
jo
cmc
push
ss
sub
or
xchg
sahf
xlat
test
loopne
imul
arpl
jns
add
fld
cmp
aaa
adc
cwde
dec
scas
movs
inc
and
sbb
rcl
and
mov
adc
inc
jns
mov
daa
sub
loopne
fmul
pop
mov
sbb
in
call
imul
cmc
popa
ret
fdivr
outs
xchg
popa
push
scas
pop
(bad)
cmps
ins
dec
sub
or
push
add
aad
iret
mov
sahf
in
push
icebp
and
(bad)
data16
hlt
int
and
dec
or
retf
dec
sub
jge
fst
aad
pop
sar
ds
test
cwde
mov
int3
ja
jmp
imul
sbb
js
xor
pop
je
mov
cs
jl
lea
cmp
cmp
sbb
(bad)
addr16
jo
inc
movs
loope
jmp
sbb
add
(bad)
jno
dec
dec
leave
add
or
inc
rol
imul
inc
mov
pop
out
inc
add
jb
sbb
jl
sub
cwde
shl
rol
jno
stos
movs
sub
and
out
fmul
into
or
xchg
fisttp
cmovle
in
cwde
jnp
dec
push
sub
(bad)
jnp
xor
fcom
out
outs
clc
fstp
test
dec
add
sar
sti
lods
sbb
sbb
inc
aas
adc
mov
xchg
dec
aas
scas
clc
test
mov
pop
inc
xchg
push
xor
stos
scas
adc
mov
bound
test
cdq
mov
fs
jmp
sub
pop
(bad)
jbe
leave
jns
pop
adc
nop
int
shl
out
cmp
jge
cmp
and
out
xor
dec
in
enter
sbb
repz
sbb
xchg
inc
push
jno
ficom
xor
jbe
adc
mov
pop
jle
mov
cmp
xchg
add
push
and
xor
jnp
(bad)
push
dec
popf
push
repz
and
mov
int
popf
dec
cmp
adc
not
stc
cmp
pop
(bad)
xor
jl
cld
cmps
(bad)
out
fsub
jl
dec
sbb
or
mov
iret
jmp
(bad)
and
leave
push
ror
sbb
mov
jecxz
cmp
xchg
and
mov
repz
jns
out
shl
xchg
hlt
inc
cwde
out
je
test
fcomip
add
test
xchg
add
es
add
arpl
or
(bad)
das
inc
scas
mov
retf
xor
add
cdq
into
mov
scas
outs
scas
push
mov
jb
inc
in
pop
cli
aam
sar
add
and
rcl
mov
xor
push
stos
lahf
std
int3
arpl
add
in
mov
mov
fisubr
mov
mov
push
cmp
(bad)
mov
icebp
jecxz
jmp
js
xor
lahf
jbe
push
cmp
pop
stc
jae
mov
cld
std
sbb
dec
fiadd
mov
(bad)
bound
lds
inc
(bad)
cs
(bad)
cli
mov
shr
call
adc
sahf
fdiv
add
ds
jmp
xchg
clc
xchg
push
inc
add
push
mov
dec
dec
add
cwde
aas
(bad)
ror
pop
push
lods
pop
enter
pop
stos
test
scas
scas
iret
pop
shl
adc
loopne
je
cmp
fdivr
push
gs
into
hlt
cdq
test
(bad)
sti
out
loope
add
ret
sbb
pop
mov
aaa
pushf
or
mov
push
(bad)
fld
outs
cmp
shl
lock
test
sbb
mov
add
xor
ror
cmps
sti
(bad)
mov
out
mov
ffreep
icebp
ficomp
or
and
addr16
lods
sti
cmc
jo
stos
sub
ds
out
dec
test
sub
push
mov
and
cmp
je
jmp
sbb
sbb
in
lea
inc
cmp
inc
sar
je
loope
dec
inc
fldcw
inc
add
mov
sbb
aad
mov
sub
push
movs
test
addr16
out
dec
movs
popf
mov
cld
push
mov
in
mul
repz
cmp
rol
cli
lods
fucom
pop
(bad)
xor
mov
add
cmps
mov
xor
not
mov
std
xchg
sbb
push
daa
pop
fs
scas
test
test
sub
xchg
int3
retf
jmp
jne
addr16
dec
xchg
xor
ficom
mov
mov
jge
xchg
stc
arpl
sbb
mov
scas
scas
imul
push
call
fist
mov
cmc
xor
out
in
and
mov
jecxz
pop
int3
popa
fs
jne
ror
jbe
test
pop
dec
sub
leave
adc
push
mov
test
push
mov
pop
inc
mov
(bad)
and
ins
ror
or
in
arpl
jnp
mov
push
loop
jns
or
jle
cmp
push
loopne
push
xor
adc
(bad)
js
ss
cmp
fsubr
mov
jmp
jno
aas
test
mov
fisub
aad
int
mov
ficom
jl
add
stos
js
jae
fcomip
adc
dec
dec
xor
mov
test
sbb
xor
fwait
sar
inc
mov
fwait
lock
adc
and
in
xchg
loopne
xchg
or
jbe
mov
fmul
push
adc
enter
cmp
pop
fisubr
dec
pop
push
std
push
popf
cmp
jge
dec
pusha
retf
repz
xchg
adc
jb
adc
stc
pop
lahf
cwde
xchg
sahf
mov
mov
dec
inc
push
cmps
xchg
jbe
sub
(bad)
push
jmp
push
scas
aas
out
sub
add
sub
test
(bad)
out
add
jnp
les
cmps
push
icebp
push
les
addr16
stos
cmps
fimul
out
mov
cmp
and
mov
adc
mov
(bad)
je
jge
add
out
sub
in
mov
fs
je
push
scas
pop
ficom
hlt
xor
mov
jmp
popa
call
jmp
aad
(bad)
cs
xchg
sub
or
mov
hlt
mov
in
jns
stc
pop
inc
pop
mov
mov
pop
mov
(bad)
shl
mov
cmp
stos
add
push
mov
pop
mov
xor
lds
mov
pushf
jg
lock
sbb
jp
imul
lods
and
dec
repnz
cli
(bad)
movs
aaa
inc
dec
adc
fldenv
aaa
gs
cmc
in
add
or
and
jecxz
(bad)
in
stc
mov
idiv
test
cmp
add
adc
cmps
and
loopne
fld
daa
repnz
mov
pop
pop
lds
xchg
mov
sub
bound
stc
sbb
outs
mov
sub
mov
jnp
dec
xchg
inc
fwait
push
and
jmp
push
test
dec
scas
jo
xchg
ror
sbb
or
add
and
out
inc
sahf
cmps
add
repnz
mov
arpl
fimul
f2xm1
imul
arpl
pop
test
push
stc
clc
cmp
ret
cs
adc
add
sub
scas
mov
int3
dec
imul
shr
jp
inc
movs
cmc
inc
mov
je
sti
stos
mov
repz
and
std
mov
mov
mov
call
in
pop
xor
mov
or
cmp
shl
out
sub
sub
bound
sub
adc
mov
add
add
sbb
xlat
adc
xchg
add
retf
gs
fisubr
lods
jmp
push
push
(bad)
daa
or
mov
jbe
cmp
fsubr
mov
add
das
and
(bad)
ins
dec
pop
fdivr
scas
bound
or
sub
mov
repz
ins
adc
int3
aam
mov
mov
jmp
mov
out
stos
cmc
dec
rcr
cmp
xor
adc
lock
jb
loopne
(bad)
cmp
inc
or
sbb
lahf
mov
xor
imul
pusha
lahf
jp
lods
jg
mov
(bad)
push
rep
xor
mov
movs
xor
mov
daa
mov
stos
jae
push
adc
test
aas
mov
push
adc
adc
jbe
test
cmp
xchg
call
in
movs
sbb
xchg
lahf
mov
out
cwde
mov
cwde
sar
popa
clc
sub
scas
add
mov
push
pop
fs
push
ins
and
push
and
cs
mov
pusha
push
adc
shl
mov
inc
movs
xor
push
inc
adc
mov
js
jo
xchg
mov
ss
mov
xor
adc
mov
or
inc
test
cmp
inc
test
push
(bad)
fstp
pop
xchg
dec
add
mov
add
imul
out
retf
bound
cld
test
and
mov
push
daa
(bad)
enter
pop
fs
lea
sar
clc
pop
shl
xor
mov
inc
inc
pop
cmps
(bad)
push
ja
jmp
shl
push
cli
mov
and
dec
imul
adc
sbb
cld
jge
ror
loopne
push
int
loop
lods
add
stos
ins
sbb
mov
repnz
rcr
cmp
sbb
xchg
std
xor
mov
mov
ss
movs
mov
xor
retf
scas
rol
dec
ficomp
or
jmp
push
cdq
dec
test
cmp
data16
jns
ins
jno
das
mov
and
call
mov
das
(bad)
icebp
adc
pushf
imul
pop
retf
arpl
dec
inc
loopne
stos
sbb
dec
inc
mov
inc
ins
sub
cmps
mov
jmp
push
cmp
not
and
cdq
push
sbb
addr16
or
mov
xor
movs
retf
in
data16
push
scas
rol
add
dec
mov
inc
pop
std
retf
jnp
les
sti
imul
sub
sbb
add
jmp
clc
ret
int3
shr
fld
icebp
addr16
enter
pop
mov
and
sbb
jo
aam
sbb
cmp
enter
fincstp
stos
push
xchg
add
pusha
je
inc
xchg
test
shr
jno
cld
aas
inc
in
stc
sub
daa
popa
mov
lods
fwait
push
sub
mov
nop
gs
sub
aas
in
jne
in
push
add
in
int3
mov
mov
adc
call
pop
dec
cmp
ins
imul
add
mov
sbb
fld
xor
push
dec
(bad)
jns
in
mov
js
jae
jg
pop
cdq
mov
out
aam
call
pop
test
xor
(bad)
inc
dec
lea
xchg
mov
jl
mov
cld
jl
push
shl
imul
lods
aaa
pop
sub
push
fwait
cli
repz
(bad)
call
jmp
jo
sbb
sbb
lock
dec
out
sbb
mov
or
fs
movs
sbb
clc
add
add
dec
xlat
test
add
mov
lods
and
cmp
jae
out
scas
mov
adc
pushf
dec
sbb
add
pop
adc
push
cmps
cmps
ret
sub
xor
push
(bad)
jmp
mov
xchg
xor
pushf
adc
mov
mov
add
or
push
call
xor
sbb
ja
add
xor
imul
loopne
add
out
test
mov
and
adc
xchg
loope
xlat
mov
fs
adc
cmp
(bad)
mov
hlt
rol
sbb
jae
fstp
out
add
bound
in
adc
into
popa
mov
add
lock
jecxz
movs
add
icebp
or
jmp
add
imul
push
hlt
cdq
sub
cmp
in
nop
add
push
aam
sub
jbe
push
lods
jbe
nop
inc
ds
inc
aad
ins
mov
add
(bad)
popf
pop
jp
ret
push
test
pusha
sti
mov
xchg
and
imul
lahf
jmp
mov
and
loop
outs
loop
cli
mov
daa
lods
sbb
aaa
data16
jmp
mov
in
sgdtd
stc
jmp
cmp
xor
mov
lock
ret
(bad)
cli
pushf
or
test
in
gs
or
fabs
leave
ret
iret
shl
sbb
jmp
aas
pushf
out
popf
fimul
in
loopne
sub
xchg
sub
adc
add
or
cs
cmp
cld
fst
call
mov
dec
and
sbb
and
outs
adc
in
mov
xchg
dec
pop
sbb
ret
adc
lock
ret
data16
fs
leave
inc
repz
and
aad
lea
jmp
jle
cwde
xchg
xor
test
dec
mov
cdq
stos
lods
popa
ret
jno
sbb
inc
or
pop
(bad)
or
fbstp
pop
repz
xchg
cmp
and
and
and
jmp
iret
jbe
xor
dec
push
sbb
outs
fisub
pop
cmp
cmp
xchg
ss
push
jmp
cmp
js
jle
and
and
lds
adc
cli
fwait
les
jne
and
cmp
aaa
jmp
daa
jl
(bad)
jg
or
in
sbb
jbe
enter
jg
outs
xchg
pop
jg
in
mov
sbb
retf
xor
iret
pop
sbb
push
pop
je
test
xchg
mov
inc
jb
add
dec
pushf
pop
pop
fldcw
jbe
mov
call
lods
jg
ins
jl
mov
jle
fdiv
int
jp
in
jmp
into
push
out
addr16
adc
pop
movs
sub
inc
and
pop
std
push
pop
pop
dec
rcl
mov
js
dec
cmc
xor
push
popf
sahf
mov
xor
out
push
mov
sub
push
stc
sbb
xchg
out
inc
ss
call
pop
xor
lods
jns
jbe
mov
in
adc
cmp
mov
xchg
xor
mov
jle
push
inc
sub
push
dec
pop
or
or
movhps
cmp
shl
shl
test
iret
mov
inc
fcomi
call
popf
adc
mov
es
adc
xchg
test
adc
cmp
std
inc
jge
aam
iret
sub
and
and
xor
das
fnstenv
cmp
sbb
xor
inc
out
ror
jae
in
xchg
xor
adc
fdivr
loopne
loope
(bad)
xor
stos
mov
jl
mov
mov
sbb
mov
sbb
(bad)
jmp
add
sbb
or
or
xchg
add
(bad)
fsub
and
jo
mov
jnp
(bad)
or
mov
(bad)
int
cwde
pop
dec
jmp
inc
popf
ret
mov
or
js
test
mov
lahf
pop
sti
icebp
sub
shr
fadd
lahf
mov
dec
and
mov
mov
xchg
mov
jno
das
out
pop
push
cmp
retf
pop
inc
in
xchg
pop
fisttp
ins
stos
in
and
sub
jge
in
je
ins
mov
add
fist
outs
ins
mov
push
bound
les
out
pop
adc
fldcw
call
jns
test
push
push
mov
leave
ret
test
ins
adc
movs
push
js
dec
scas
outs
jb
enter
pop
and
cmp
daa
retf
stos
cmps
mov
pop
iret
cmc
xchg
inc
repz
sub
jmp
cli
push
loopne
test
adc
pop
bound
fwait
ror
jp
push
hlt
pushf
fsub
sbb
jae
xor
fwait
ins
div
push
mov
ins
(bad)
xchg
pop
jge
fisttp
fmul
mov
jp
cmp
sub
add
jae
add
div
inc
lods
dec
ins
xchg
daa
jmp
imul
cdq
ds
dec
movs
mov
ret
ja
inc
xor
rcr
jne
mov
fisttp
fisubr
dec
out
mov
loop
inc
fs
lds
hlt
pop
lds
cmp
popf
push
stc
adc
sahf
pop
mov
popa
aad
or
add
xor
fwait
sahf
mov
data16
hlt
repnz
clc
movs
clc
push
stos
fnstcw
cmps
adc
rol
retf
(bad)
push
idiv
mul
in
push
xchg
push
lods
outs
es
inc
shl
sub
jbe
adc
imul
push
push
mov
xchg
jmp
das
cs
sbb
and
fstp
pop
cwde
push
aam
movs
sub
std
xor
adc
mov
push
inc
mov
or
in
lock
repnz
adc
ss
push
xchg
leave
push
push
(bad)
xchg
mov
jo
dec
in
lahf
and
adc
push
cmp
pop
push
clc
data16
inc
outs
jne
ror
xchg
mov
shr
or
mov
xchg
repnz
das
add
add
in
inc
jl
out
ror
pop
scas
test
outs
or
dec
sub
pop
(bad)
in
push
pop
mov
cs
and
xchg
stc
or
xor
or
adc
out
xchg
inc
nop
dec
add
lods
(bad)
ror
jmp
or
mov
and
loope
idiv
or
fcomp
xor
inc
in
jp
cld
mov
jnp
ffreep
loop
cmp
shr
test
push
ss
or
xchg
cmps
test
jb
or
cs
lods
xor
cmps
movs
fnsave
lock
into
(bad)
mov
sbb
sub
or
test
pop
or
fisubr
test
loopne
fdivr
scas
pop
xor
ffreep
xchg
sar
jns
ds
lds
fmul
dec
xor
dec
dec
lahf
jle
ja
mov
and
pop
ja
repnz
cmc
push
mov
pop
into
inc
cld
aaa
pop
pop
xor
pusha
and
pop
pop
mov
sub
lock
sbb
ret
sub
xchg
add
jae
adc
scas
xchg
cmps
xor
sahf
repz
cmp
push
xchg
int3
or
xor
lods
dec
in
cwde
pop
jl
sub
dec
ret
push
sbb
into
mov
push
(bad)
in
inc
jmp
ss
push
dec
mov
movs
loop
(bad)
retf
into
dec
inc
aaa
sub
mov
inc
pusha
jne
mov
fwait
sbb
ss
mov
xchg
gs
cmps
mov
hlt
inc
pop
mov
mov
and
inc
fwait
xchg
pop
std
test
cmps
mov
mov
cmp
scas
cwde
rcl
sbb
cdq
mov
aam
ja
icebp
and
inc
jmp
xor
xchg
sbb
xor
das
pop
lds
sbb
lods
dec
xor
mov
jne
es
and
les
retf
mov
jg
push
inc
mov
retf
es
test
gs
mov
mov
jns
shl
imul
lods
push
jmp
fisubr
or
mov
orps
mov
cmc
loope
mov
lock
xor
out
or
xchg
jno
pop
pop
stos
(bad)
push
cmp
cmps
add
mov
push
shl
adc
outs
aad
dec
mov
pop
mov
fwait
repz
sbb
out
mov
jp
movs
sbb
inc
ret
in
test
outs
add
loope
int3
push
mov
aam
outs
xor
ret
jle
(bad)
adc
mov
scas
mov
inc
pushf
xchg
xchg
mov
test
add
push
xor
mov
and
and
sbb
xchg
fsubrp
cli
mov
stc
mov
arpl
(bad)
call
dec
out
sbb
jb
pusha
fcmovne
inc
add
cmp
and
cmp
sar
aaa
cmps
adc
(bad)
sub
mov
sti
and
retf
mov
or
mov
jg
loopne
jmp
or
cmp
cmp
cld
jmp
jno
push
pop
dec
dec
pop
inc
sub
lods
inc
sub
mov
push
(bad)
sub
out
or
mov
je
push
iret
icebp
fsub
sbb
(bad)
sbb
in
lea
inc
sbb
test
addr16
iret
xchg
jo
xchg
repz
push
ins
mov
in
(bad)
mov
sub
cwde
xchg
xor
ds
out
pop
ins
stos
adc
inc
and
arpl
bound
cmps
jg
rcl
test
pop
xor
movs
push
sbb
xor
sar
repz
shr
repz
retf
xchg
jo
dec
push
push
movs
jbe
mov
rcl
icebp
jg
lods
fstp
ret
out
into
jg
sub
lock
minps
int
cmps
xchg
add
leave
push
pop
mov
loop
adc
icebp
shl
cmp
sbb
pushf
inc
ins
fucomip
ficom
icebp
das
inc
push
outs
lahf
push
pop
push
loop
jne
stos
and
mov
fidiv
jle
imul
jge
icebp
xchg
fstp
sub
daa
daa
jne
sbb
inc
and
(bad)
cli
gs
xlat
sbb
xlat
(bad)
iret
pusha
stc
stc
stc
mov
sbb
dec
add
aad
inc
mov
inc
pop
or
call
ret
xlat
ss
(bad)
stc
pop
cmp
xor
sbb
or
hlt
add
add
jge
movs
xlat
test
mov
push
movs
mov
pop
aas
shr
and
sub
ret
rol
pop
arpl
fs
or
repz
enter
mov
ss
jnp
push
repnz
add
sub
jle
and
mov
or
je
push
pop
adc
popa
xor
les
or
mov
stos
test
jp
mov
push
sub
sbb
out
shl
retf
sbb
pusha
pop
out
mov
xor
fsubr
inc
lods
and
cli
mul
(bad)
lahf
pop
pop
jmp
in
xor
adc
hlt
push
pop
gs
daa
pop
lahf
adc
mov
mov
test
adc
inc
xchg
cdq
aam
inc
es
jp
test
adc
sar
mov
xor
add
push
sub
push
inc
inc
adc
xor
shl
inc
mul
test
in
jmp
inc
bound
icebp
mov
sbb
(bad)
(bad)
out
pop
sub
lods
leave
js
dec
ret
fs
es
push
jge
jo
pop
xor
mov
mov
fcom
je
fwait
stos
out
mov
xchg
in
out
das
fstp
mov
popf
(bad)
and
je
nop
and
and
in
leave
add
pop
sbb
fcmove
mov
inc
(bad)
or
and
idiv
div
retf
sub
pop
not
into
pop
cmp
outs
adc
arpl
and
xor
push
adc
and
xchg
mov
inc
shl
and
stc
and
(bad)
mov
nop
jmp
cmp
pop
(bad)
out
jmp
retf
scas
adc
pop
addr16
aas
jns
pop
movs
or
neg
push
sbb
pop
jo
pop
sahf
ror
pop
dec
inc
cs
(bad)
test
mov
sahf
leave
loopne
jmp
shr
xchg
add
stos
stc
shl
retf
mov
icebp
lods
movs
mov
mov
mov
push
push
or
mov
inc
xchg
int3
enter
mov
add
or
cmp
sbb
pushf
push
fstp
icebp
not
nop
outs
adc
add
inc
cmp
test
idiv
sub
stos
mov
enter
pop
ja
inc
jg
imul
loop
mov
mov
and
ret
das
cmp
shr
lds
lea
sbb
jle
and
mov
data16
xor
mov
lahf
or
jmp
dec
adc
lods
or
dec
pop
cmp
leave
sub
fild
and
(bad)
rol
dec
int
outs
mov
cmp
cli
imul
loope
adc
xchg
mov
(bad)
sbb
fisttp
js
out
mov
inc
repnz
add
movs
test
jno
into
sahf
fwait
xlat
loopne
sahf
jb
iret
mov
and
cmp
ror
cmp
in
outs
into
mov
mul
inc
or
inc
imul
das
or
pusha
call
cdq
sub
call
cmp
gs
adc
cmp
sbb
mov
icebp
inc
sub
lea
lahf
lds
push
adc
jmp
dec
dec
cmp
mov
push
cmp
pop
jo
(bad)
loopne
adc
jl
push
mov
dec
push
mov
and
inc
sti
iret
cmp
fnstsw
jp
xor
jns
or
bound
pop
jp
pop
les
cld
dec
jno
jle
(bad)
cmc
jl
ror
cli
out
in
xor
fnsave
retf
xor
ja
nop
push
push
scas
inc
retf
out
ins
adc
mov
(bad)
mov
or
es
retf
fidiv
adc
adc
push
xor
dec
jecxz
int
mov
sahf
add
sub
cmc
ror
sub
fild
jno
mov
mov
ja
xchg
push
int
push
arpl
hlt
pop
into
xchg
lahf
mov
call
(bad)
mul
(bad)
xchg
mov
ins
sbb
xor
mov
int
into
fisttp
dec
dec
fsubr
int3
mov
ret
repz
shl
sub
jae
xor
jl
add
jmp
inc
inc
xor
xchg
out
stc
pop
int3
aas
ins
movs
fcmovnu
push
enter
jns
adc
test
and
jl
lea
out
fst
das
cmp
clc
out
call
sub
push
mov
mov
inc
mov
stos
arpl
xor
add
fwait
jmp
lods
ins
(bad)
mov
push
cmp
dec
and
push
cmp
fcomp
aas
mov
and
out
jne
pop
inc
cmp
and
repnz
inc
mov
test
fld
imul
movs
lock
mov
xchg
mov
rcl
aam
sbb
dec
aaa
lods
(bad)
cli
and
es
repnz
add
add
mov
add
mov
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
inc
icebp
xchg
sub
adc
or
add
aam
xor
adc
neg
fisubr
les
sub
push
sbb
xor
add
daa
ret
fisubr
xchg
push
stc
cmps
cmp
mov
(bad)
mov
or
or
dec
sbb
and
jne
out
cmp
test
ret
mov
adc
ss
mov
add
mov
inc
fmul
shr
mov
pop
xchg
pop
push
mov
adc
add
jo
repz
inc
pause
sbb
jno
ret
dec
pop
sahf
and
pop
and
add
and
bound
or
or
inc
push
xchg
push
sbb
sbb
add
and
imul
fnsave
scas
cmp
mov
pop
mov
and
and
xor
jnp
adc
add
add
xlat
jo
not
mov
sbb
add
add
retf
pusha
inc
out
mov
out
or
psrld
sub
outs
xor
sub
cmp
add
xor
jle
mov
add
inc
add
jg
add
pop
add
rol
add
add
add
pop
add
lock
lock
loopne
add
lock
clc
pop
add
clc
pop
add
clc
pop
add
cld
aas
add
(bad)
jg
add
inc
add
add
add
add
adc
add
add
add
add
add
add
add
pop
jge
inc
add
add
add
or
add
add
push
add
add
add
mov
add
push
add
add
nop
add
add
rol
add
nop
or
or
add
or
or
add
xor
add
add
pop
jge
inc
add
add
add
pop
add
add
add
add
add
add
add
add
call
add
add
add
add
add
pusha
add
add
add
mov
add
pop
jge
inc
add
add
add
add
add
add
mov
add
lods
pop
and
xor
add
pop
jge
inc
add
add
add
add
add
add
fadd
add
loopne
and
xor
add
pop
jge
inc
add
add
add
add
add
add
add
add
adc
and
xor
add
pop
jge
inc
add
add
add
add
add
add
sub
add
dec
bound
add
add
pop
jge
inc
add
add
add
add
add
add
push
add
add
add
add
pop
jge
inc
add
add
add
add
add
add
js
add
mov
and
xor
add
pop
jge
inc
add
add
add
add
add
add
mov
and
xor
add
pop
jge
inc
add
add
adc
add
jo
add
or
add
or
sbb
add
clc
add
cmp
or
add
fmul
xor
and
add
repnz
add
add
call
or
add
cmp
cmp
add
dec
or
add
mov
add
fadd
add
add
sub
add
pop
jge
inc
add
add
add
add
add
add
jo
add
sbb
add
add
add
jge
inc
add
add
add
add
add
add
cwde
add
add
push
add
pop
jge
inc
add
add
add
add
add
add
rol
add
push
add
add
add
jge
inc
add
add
add
add
add
add
call
ins
and
rol
add
pop
jge
inc
add
add
add
add
add
add
adc
add
ins
outs
and
rol
add
pop
jge
inc
add
add
add
add
add
add
cmp
add
cmp
and
rol
add
pop
jge
inc
add
add
add
add
add
add
pusha
add
add
and
rol
add
pop
jge
inc
add
add
add
add
add
add
mov
add
fdiv
add
add
add
jge
inc
add
add
add
add
add
add
mov
add
lods
jne
add
add
add
jge
inc
add
add
add
add
add
add
fadd
add
jl
and
rol
add
pop
jge
inc
add
add
add
add
add
add
add
add
add
add
add
jge
inc
add
add
add
add
add
add
sub
add
and
rol
add
pop
jge
inc
add
add
add
add
add
add
push
add
add
and
rol
add
pop
jge
inc
add
add
add
add
add
add
js
add
aam
and
rol
add
pop
jge
inc
add
add
add
add
add
add
mov
jl
add
add
add
jge
inc
add
add
add
add
add
add
enter
je
and
rol
add
pop
jge
inc
add
add
add
add
add
add
lock
add
add
add
add
jge
inc
add
add
add
add
add
add
sbb
and
cwde
add
add
jge
inc
add
add
add
add
add
add
inc
add
and
cwde
add
add
jge
inc
add
add
add
add
add
add
push
add
add
jge
inc
add
add
add
add
add
add
add
add
add
pop
jge
inc
add
add
add
add
cmps
or
add
pop
jge
inc
add
add
add
add
add
add
rol
add
add
pop
jge
inc
add
add
add
sbb
call
push
add
rol
add
clc
push
add
and
add
dec
pop
add
jo
add
cwde
pop
add
rol
xor
add
call
sldt
adc
add
cmp
add
pusha
or
xor
add
mov
add
mov
add
fmul
add
add
add
sub
add
push
or
cmp
add
js
add
mov
sldt
enter
std
sldt
lock
cmp
add
sbb
add
inc
or
add
add
push
add
add
jge
inc
add
add
add
add
add
add
rol
add
test
add
add
add
jge
inc
add
add
add
add
add
add
call
test
add
add
add
jge
inc
add
add
add
add
add
add
adc
add
hlt
mov
add
add
add
jge
inc
add
add
add
add
add
add
cmp
add
enter
mov
add
pop
jge
inc
add
add
add
add
add
add
pusha
pop
add
js
and
mov
add
pop
jge
inc
add
add
add
add
add
add
mov
add
sub
add
pop
jge
inc
add
add
add
add
add
add
mov
add
loopne
and
mov
add
pop
jge
inc
add
add
add
add
add
add
fadd
add
xchg
fwait
and
add
add
jge
inc
add
add
add
add
add
add
add
add
clc
sahf
and
fadd
add
pop
jge
inc
add
add
add
add
add
add
sub
add
aam
and
push
add
add
jge
inc
add
add
add
add
add
add
push
or
add
mov
add
pop
jge
inc
add
add
add
add
add
add
js
add
mov
add
add
jge
inc
add
add
add
add
add
add
mov
cmps
and
aam
add
pop
jge
inc
add
add
add
add
add
add
enter
push
add
add
jge
inc
add
add
add
add
add
add
lock
add
and
dec
add
add
jge
inc
add
add
add
add
add
add
sbb
add
les
add
pop
jge
inc
add
add
add
add
add
add
inc
or
add
add
add
jge
inc
add
add
add
add
add
add
push
mov
add
add
jge
inc
add
add
add
add
add
add
nop
or
add
mov
add
add
add
jge
inc
add
add
add
add
add
add
mov
mov
add
pop
jge
inc
add
add
add
add
add
add
loopne
add
inc
mov
add
pop
jge
inc
add
add
add
add
add
add
or
add
cld
mov
add
pop
jge
inc
add
add
add
add
add
add
xor
add
lock
add
pop
jge
inc
add
add
add
add
add
add
pop
or
add
ret
and
cmp
add
pop
jge
inc
add
add
add
add
add
add
or
add
and
cmp
add
pop
jge
inc
add
add
add
add
mov
or
add
add
pop
jge
inc
add
add
add
add
add
add
ror
add
pop
add
pop
jge
inc
add
add
add
pop
add
jg
add
or
cmp
add
inc
or
cmp
add
push
jg
add
jg
add
jg
add
or
cmp
add
or
add
add
pop
jge
inc
add
add
add
add
add
add
xor
add
xor
and
adc
add
pop
jge
inc
add
add
add
add
add
add
pop
or
add
add
add
pop
jge
inc
add
add
add
add
add
add
or
add
and
adc
add
pop
jge
inc
add
add
add
add
add
add
test
add
ins
call
add
pop
jge
inc
add
add
add
add
add
add
ror
add
sub
add
add
pop
jge
inc
add
add
add
add
add
add
clc
or
add
add
pop
jge
inc
add
add
add
add
add
add
and
add
add
add
jge
inc
add
add
add
add
int3
or
add
pop
jge
inc
add
add
add
add
add
add
pusha
or
add
mov
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
push
add
inc
add
add
push
add
add
inc
add
add
push
add
add
or
push
add
dec
add
inc
add
add
pop
add
inc
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
add
push
add
add
inc
add
dec
add
dec
add
add
or
push
add
dec
add
inc
add
push
add
push
add
push
add
dec
add
push
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
imul
gs
xor
cs
ins
add
fs
imul
add
je
jb
arpl
fs
jae
add
push
xor
dec
and
aam
sub
or
and
