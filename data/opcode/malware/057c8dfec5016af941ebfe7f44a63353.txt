jg
(bad)
call
in
mov
cmp
ja
movzx
lea
jmp
neg
xchg
lea
add
push
sbb
lods
sbb
add
add
or
fcom
add
int3
pop
fisubr
add
xor
pop
push
or
xchg
int3
aas
add
mov
push
mov
push
push
call
test
jne
pop
pop
dec
push
call
add
mov
test
je
cmp
mov
add
and
jbe
(bad)
inc
jmp
mov
lock
dec
movzx
lea
jne
sbb
pop
pop
xor
mov
es
neg
sbb
and
pop
xchg
int3
fist
mov
or
mov
add
or
enter
push
cmc
add
and
lods
add
sbb
int3
add
sub
(bad)
cld
(bad)
outs
push
xadd
dec
test
jg
add
mov
call
inc
ret
xor
adc
pop
test
sti
scas
mov
add
aas
push
push
or
xchg
mov
push
push
sub
push
push
push
push
and
lds
inc
lock
xor
loopne
loopne
cli
cmps
mov
sbb
in
(bad)
jne
sbb
loopne
outs
mov
mov
mov
mov
push
adc
cmp
pop
or
in
inc
cld
ss
fdivr
inc
cli
add
ret
jae
inc
loopne
lock
in
sar
fisttp
xchg
ret
div
sub
xor
push
sbb
jl
sbb
mov
das
adc
sub
mov
pop
and
mov
repz
repz
sbb
and
fist
cmp
sub
xor
jo
lea
adc
pop
mov
inc
add
mov
je
(bad)
cmp
pop
mov
(bad)
mov
dec
push
push
sub
pop
test
push
int3
jmp
mov
das
aad
xchg
into
and
mov
and
(bad)
aad
sbb
or
adc
push
leave
and
je
mov
jg
xor
ins
push
jns
jb
mov
cmps
and
add
loopne
add
xchg
sbb
jmp
push
push
sub
daa
hlt
mov
mov
mov
outs
pop
retf
or
push
cwde
or
add
sti
xor
and
add
jae
ret
out
scas
mov
mov
scas
test
(bad)
push
out
dec
leave
and
mov
mov
jns
add
or
or
pop
lea
(bad)
loopne
rol
pop
loope
or
inc
sbb
inc
scas
loopne
js
je
push
adc
jbe
fmul
sub
and
outs
ret
dec
je
cmp
je
inc
and
or
push
push
call
push
mov
es
fisub
push
mov
and
sti
add
push
dec
ror
push
pop
jne
fisub
ficomp
mov
xor
cs
push
mov
cmc
sbb
pop
int3
push
xor
cmp
std
fucomi
adc
fs
cmp
jge
mov
cmp
add
je
mov
fbstp
mov
add
call
inc
inc
jl
loop
push
or
repnz
adc
pop
ret
jnp
xor
jne
or
(bad)
fbstp
sub
jno
mov
push
mov
cmp
jge
mov
mov
test
je
mov
cmp
je
inc
sub
pop
pop
cmp
dec
jnp
popa
adc
bound
or
fnstenv
or
fistp
push
je
or
dec
adc
inc
fistp
(bad)
and
mov
mov
je
inc
cmp
sbb
stc
call
mov
pop
repnz
ds
mov
adc
sub
outs
clc
adc
je
cmp
je
lea
push
sbb
add
pop
enter
jge
idiv
fcom
and
or
dec
or
ret
fwait
xchg
dec
push
hlt
cmp
xchg
sbb
ret
fisttp
mov
sbb
imul
xchg
ss
push
and
adc
mov
push
sar
pop
fs
mov
cdq
jg
pop
inc
inc
add
mov
adc
test
hlt
pop
mov
sub
or
add
pop
mov
add
sub
xor
cmps
push
inc
push
je
push
rcl
xor
or
pop
sub
cmp
loope
inc
jg
dec
inc
sub
clflush
into
je
push
lea
pop
lea
push
(bad)
popf
imul
js
std
std
(bad)
push
fisubr
rol
(bad)
pop
cmp
fmul
adc
lea
push
bound
push
movs
push
xor
scas
hlt
mov
xor
leave
lea
mov
seto
push
neg
or
push
ins
bound
outs
add
cwde
aas
add
adc
sbb
jae
push
push
push
fwait
in
pusha
jnp
add
jmp
or
and
jl
ins
mov
pop
jne
sub
rcr
push
mov
adc
add
pop
std
pop
mov
pop
je
jle
xor
fist
mov
add
mov
jo
cmp
lea
cmp
jecxz
mov
dec
mov
sbb
cmp
or
bound
(bad)
cld
in
daa
adc
cmps
mov
shl
cmps
popf
mov
mov
les
xchg
fdiv
and
mov
repnz
mov
sbb
adc
cmp
mov
jg
add
and
ret
jne
movzx
inc
icebp
push
lock
push
mov
jmp
mov
inc
jle
ret
(bad)
push
push
push
or
inc
push
add
mov
cmp
sbb
push
mov
pop
cmps
pop
adc
lods
add
loop
xor
popa
push
inc
push
icebp
sub
add
mov
push
enter
mov
mov
cmp
jbe
loop
inc
lock
js
mov
xchg
push
pop
jge
push
add
mov
ret
push
out
mov
fs
or
sbb
enter
pop
hlt
mov
mov
lahf
push
sbb
pusha
jo
jbe
sub
je
popf
sub
push
(bad)
hlt
hlt
jmp
ds
cld
or
add
mov
hlt
xor
or
cmc
retf
xor
pop
mov
stos
loop
cmp
sbb
in
xor
inc
push
adc
pop
jae
jno
movups
call
mov
cmp
jg
mov
adc
or
add
popa
pop
sahf
test
push
and
pop
sub
push
sub
add
push
fld
es
pushf
rol
xor
stos
adc
nop
sub
nop
add
xor
jmp
fdivr
inc
cmp
mov
xor
jne
int
adc
dec
movs
lahf
js
rol
or
ds
cmps
das
push
lea
nop
cmp
rol
pop
or
mov
inc
jg
push
cli
add
pop
cld
push
jne
ds
cld
pop
aas
cmp
inc
mov
sub
sar
mov
jne
hlt
mov
fbld
lea
add
push
cmp
or
cmp
or
jecxz
retf
add
cmp
mov
ret
sbb
sbb
cmps
fucomip
bound
hlt
aad
xlat
jle
mov
shl
stos
sti
cld
add
push
ror
(bad)
cmp
jge
call
lock
or
cdq
pop
ja
fild
lock
jge
not
adc
jg
sbb
push
mov
pop
hlt
call
inc
push
call
mov
or
xor
push
loopne
mul
add
fadd
mov
lea
push
lea
adc
push
push
js
inc
cmps
cli
ja
mov
lea
loope
push
adc
push
iret
push
add
inc
add
or
jg
jg
enter
lock
cmp
jge
mov
xchg
and
adc
push
inc
or
inc
or
pop
add
cdq
mul
adc
adc
jmp
xor
adc
jns
and
mov
and
push
into
nop
and
pmulhuw
push
retf
adc
sub
cmp
js
outs
jae
lods
add
aas
aas
push
call
or
fsubr
jle
nop
adc
lock
inc
dec
loopne
es
aam
pop
lods
fcomp
push
pop
sbb
sbb
jmp
inc
int
cmc
add
sbb
mov
lock
sbb
xchg
or
ror
fisttp
or
push
ins
test
or
int
dec
jb
fs
in
in
sub
mov
lea
frstor
mov
test
pop
mov
sbb
and
and
loop
daa
in
pop
fst
push
or
mov
add
fdivr
cwde
push
mov
xor
movs
xor
int3
sbb
enter
sbb
jg
jb
xor
popf
dec
test
adc
add
rol
inc
add
push
inc
sub
inc
inc
mov
inc
mov
and
mov
push
and
push
and
jle
sahf
sbb
call
inc
shl
inc
push
adc
in
mov
xor
shl
stc
test
les
cmp
jle
add
stos
int
or
or
mov
mov
mov
lea
cmc
fwait
jbe
pusha
pop
mov
inc
inc
or
push
and
(bad)
sar
or
pop
cmps
sub
jl
(bad)
sbb
cmp
pushf
add
mov
push
xchg
push
ficomp
mov
inc
cwde
imul
inc
or
or
loopne
cmp
push
cmc
cmps
or
or
js
or
mov
test
outs
jmp
cmp
mov
imul
sub
jnp
push
in
sub
or
dec
sbb
test
mov
inc
adc
push
aaa
aam
sub
ret
or
inc
pop
add
sbb
sbb
xchg
adc
mov
xchg
mov
jns
or
sub
cmp
sbb
(bad)
or
and
ret
out
in
sbb
or
test
add
push
push
push
xchg
lods
mov
clc
inc
pop
or
xlat
pop
and
sbb
xor
cmp
rol
and
out
mov
sbb
and
adc
ret
hlt
mov
dec
add
and
push
push
push
call
push
push
push
dec
xchg
sub
call
mov
lods
add
and
call
(bad)
rcl
leave
lock
inc
daa
pop
fwait
jne
jp
sub
adc
add
xchg
or
enter
mov
dec
pop
mov
div
and
lock
sub
bound
pop
adc
pop
mov
sahf
adc
push
push
lea
aaa
fcomp
inc
sub
std
les
cmp
xor
mov
cmps
push
js
fild
loopne
mov
mov
and
push
xchg
sti
rcl
in
and
shl
inc
lds
in
loope
jl
idiv
js
cmc
outs
out
lods
and
sub
or
movs
cs
scas
repnz
adc
push
mov
push
push
cs
dec
push
pop
pop
fs
sub
dec
ins
push
test
movs
or
aaa
mov
adc
xchg
retf
enter
movs
jb
int3
fcom
loopne
pop
sub
in
mov
test
clc
hlt
push
jnp
in
mov
add
(bad)
cmp
adc
dec
aam
adc
push
into
sbb
sbb
inc
aad
test
mov
ret
mov
popf
in
jb
out
jl
out
scas
adc
jl
movs
or
repnz
push
outs
cmp
test
jns
fild
je
test
mov
fmul
mov
or
dec
or
jb
or
cld
mov
sbb
push
and
jmp
ja
push
mov
jl
outs
mov
nop
xchg
cwde
shl
shl
mov
mov
add
xor
sbb
pop
(bad)
movs
and
xchg
pop
out
lods
jmp
xchg
and
jl
pop
or
mov
pushf
mov
lock
and
sub
add
out
or
or
iret
ins
test
push
push
popf
mov
cmp
pop
test
bnd
pop
lahf
and
mov
mov
mov
stc
sbb
lahf
mov
dec
jne
lahf
(bad)
retf
push
mov
or
adc
cs
hlt
hlt
sub
jb
daa
in
in
adc
jb
or
in
(bad)
or
test
push
test
int3
or
jb
or
mov
or
test
fwait
ror
js
daa
jo
push
sbb
jo
push
mov
daa
pusha
cmp
and
add
add
retf
push
push
add
and
inc
retf
retf
cmp
pop
es
xor
xor
cs
ss
mov
inc
es
inc
nop
inc
add
sbb
xor
and
xchg
push
push
test
adc
ffree
cmp
dec
cmp
sbb
pop
or
sbb
fdivr
pop
clc
add
fst
fcom
fnstsw
test
fnsave
fld
sbb
fldenv
inc
jne
fstp
mov
mov
fsubr
ret
adc
add
jno
(bad)
lea
daa
add
xor
das
and
pop
and
sub
pop
enter
inc
dec
jb
pop
and
xchg
rcr
test
sbb
push
push
fdivr
dec
push
sub
test
out
adc
pop
sti
rol
cld
mov
pop
mov
or
ds
mov
sub
(bad)
(bad)
je
je
mov
cdq
xor
sub
cmp
jg
mov
adc
lods
dec
xchg
add
jmp
addr16
loope
push
into
push
push
sub
sbb
cmp
jne
cmp
enter
sar
shl
lea
add
je
xlat
aam
sub
push
pop
ficomp
(bad)
dec
dec
add
inc
ret
mov
pop
push
fsub
mov
push
xor
add
nop
mov
int
xor
(bad)
in
xor
fadd
rol
je
jl
push
les
jns
ja
inc
inc
popf
out
xor
cld
adc
call
fcom
push
and
in
inc
loopne
add
fild
movzx
fadd
test
or
iret
ret
xor
push
lods
dec
dec
cmps
pop
(bad)
stc
lea
cmp
mov
pop
adc
add
dec
call
add
jl
sub
mov
mov
cwde
(bad)
add
push
push
fsub
loopne
mov
(bad)
cmp
xchg
mov
pop
test
and
jmp
jl
and
call
retf
fisttp
xor
pop
hlt
inc
aas
adc
xor
mov
cld
push
mov
inc
test
dec
test
push
and
mov
mov
(bad)
jnp
fsub
je
mov
bound
addr16
xor
and
cmps
das
mov
pop
push
add
cmp
popf
mov
add
mov
imul
mov
aaa
push
cdq
retf
adc
mov
adc
cmc
mov
js
sbb
jmp
adc
pusha
cmp
fisubr
jle
mov
push
push
nop
sbb
ret
ret
ret
and
adc
jg
mov
mov
mov
sar
and
or
xchg
cmps
cdq
sbb
cmp
mov
or
and
pop
push
rol
pop
ret
push
fwait
test
ja
loope
push
(bad)
je
dec
push
mov
mov
jnp
push
sbb
add
and
cld
pop
enter
ins
xor
or
or
mov
pop
cmp
js
mov
jl
jb
call
fucomip
xlat
rcr
push
sub
je
shr
movs
and
adc
shr
fwait
adc
pop
xor
jb
push
cld
fs
lods
xchg
sub
bound
sub
ins
popa
adc
cmp
add
xor
jge
add
popf
div
shr
test
shl
lods
inc
pop
xchg
fs
xor
cmps
sbb
pop
jb
lods
push
adc
dec
sar
push
push
sub
shl
pop
adc
pop
adc
adc
pusha
push
cmps
jns
cmps
or
or
lods
jns
add
dec
or
push
push
je
js
xchg
imul
test
rcl
mov
int
adc
out
test
inc
jno
xor
add
jmp
sbb
push
inc
xor
inc
nop
add
inc
jb
push
in
ret
xor
ret
mov
add
add
cmps
fs
and
das
inc
inc
enter
es
cmp
mov
xor
enter
js
and
mov
xor
cwde
test
test
enter
fs
sbb
shl
push
push
cdq
in
stos
add
dec
rcr
mov
dec
in
fcomp
ja
dec
call
test
xchg
or
call
lods
or
mov
mov
movzx
inc
xlat
cld
out
pop
push
shr
ret
ret
sar
add
enter
jbe
sbb
sub
add
inc
pop
shl
out
sub
sbb
inc
daa
and
shl
push
test
or
cs
add
retf
cwde
mov
les
dec
sbb
js
push
mov
sbb
into
cmp
rcl
ins
(bad)
mov
dec
push
sub
cmp
push
bound
cmp
rcl
adc
scas
dec
mov
sub
adc
sbb
push
inc
add
adc
fist
adc
mov
imul
add
or
stc
(bad)
setge
lea
out
push
dec
and
add
add
mov
adc
aam
stos
dec
test
mov
push
iret
mov
in
jnp
int3
adc
ja
shl
xchg
fcom
cmp
jno
sbb
leave
(bad)
pop
pop
nop
add
lea
jno
movs
retf
mov
mov
daa
(bad)
sbb
shr
shr
cmps
(bad)
lock
mov
gs
jl
xchg
rol
and
into
jp
fisttp
dec
cwde
mov
mov
popf
pop
jo
data16
int
push
sahf
mov
push
pushf
mov
sbb
mov
call
in
hlt
push
ins
mov
int3
lea
xchg
popf
push
jl
push
iret
sbb
adc
mov
aas
pop
fldcw
add
sbb
dec
mov
jle
lea
xchg
adc
loopne
fist
cmp
jl
js
(bad)
jno
cmps
mov
sbb
inc
xchg
adc
inc
test
mov
xor
(bad)
daa
bound
cmp
bswap
cmp
jb
mov
dec
retf
and
in
je
sbb
mul
mov
or
and
xor
and
cwde
dec
mov
add
loopne
fild
or
and
test
and
add
fs
cmp
xchg
adc
mov
or
and
mov
aas
icebp
iret
and
and
cmp
je
movs
or
mov
jmp
iret
xchg
jno
icebp
push
inc
dec
mov
push
shr
loop
jno
sahf
mov
call
pusha
and
je
rcl
jne
inc
and
sti
mov
jmp
inc
jne
mov
and
adc
push
adc
clc
inc
and
mov
lock
push
daa
out
pop
jl
sbb
add
mov
in
mov
mov
clc
jb
add
jnp
dec
inc
xor
pusha
push
int
or
pop
push
test
push
arpl
add
shufps
test
repz
mov
add
test
sbb
les
jmp
bound
push
push
dec
js
jbe
ficomp
bound
mov
mov
cmp
ja
mov
ds
fs
or
sub
fs
and
fs
ret
fs
js
push
fisub
adc
cmps
or
repnz
push
and
jnp
xor
jmp
out
daa
iret
sub
icebp
push
clc
mov
shl
ss
out
mov
into
jg
jmp
xor
mov
sub
lods
mov
inc
add
mov
cmp
and
cmp
(bad)
js
jg
push
xchg
fstp
cmp
cmp
sahf
test
retf
mov
sub
push
push
push
adc
add
sub
mov
adc
sbb
push
enter
lahf
inc
push
jne
inc
mov
adc
aaa
pusha
ins
xchg
ins
or
(bad)
jge
or
xchg
xchg
in
mov
sub
adc
push
cld
or
leave
cmp
dec
popa
push
cmp
pusha
icebp
lea
adc
or
jge
mov
shl
pop
mov
test
or
push
push
jae
adc
jg
loop
mov
or
call
sbb
loopne
add
inc
push
mov
ror
jne
adc
cmp
je
into
mov
dec
dec
mov
xor
or
xchg
inc
jl
xor
pop
inc
push
xor
push
and
fisubr
inc
sbb
(bad)
cmp
lds
popf
(bad)
fadd
dec
bound
push
adc
mov
clc
ds
es
and
push
pop
arpl
mov
jns
fmul
mov
and
in
and
movs
mov
jle
adc
jbe
inc
xor
je
or
sbb
aas
cwde
sub
ds
call
xor
mul
adc
push
aaa
fs
int3
(bad)
rol
mov
in
add
rol
add
add
test
sbb
dec
aam
les
fucomi
sbb
jge
je
add
mov
push
lea
dec
int3
add
pop
push
stos
xchg
lods
test
dec
jg
ins
adc
jg
cmp
adc
mov
js
or
shr
int3
scas
ins
mov
fcmovnu
or
xchg
ret
je
mov
and
jnp
pop
mov
inc
ds
in
clc
es
adc
add
dec
jae
call
xchg
clc
sub
je
pusha
xlat
ror
hlt
lock
rol
or
mov
jnp
sbb
adc
adc
lods
shr
add
fcom
fistp
shl
push
and
clc
inc
push
in
xchg
iret
test
icebp
mov
jne
or
add
add
stos
pop
lods
push
daa
dec
inc
or
adc
sbb
pusha
repz
call
push
mov
sti
iret
xchg
xor
inc
bound
fisttp
(bad)
or
pop
hlt
mov
lods
mov
push
clc
mov
xlat
or
xlat
pop
les
inc
ret
xchg
pop
adc
adc
sahf
int3
push
inc
pop
or
jo
jecxz
xchg
jmp
(bad)
mov
not
idiv
nop
inc
hlt
mov
cmp
jl
lea
mov
fdivr
add
imul
mov
sub
sub
out
stos
fcmovnb
inc
cmp
or
pop
push
jg
inc
pop
das
mov
add
push
lea
sbb
aaa
add
push
push
add
mov
lock
xchg
sbb
push
fisttp
js
xchg
cmp
adc
xchg
out
mov
pop
mov
mov
arpl
movs
and
les
sub
popa
mov
arpl
xchg
or
cmp
adc
les
xor
retf
xchg
or
push
sbb
xor
xor
sbb
pop
lock
test
sub
mov
mov
bound
rol
mov
call
test
jnp
repz
mov
test
dec
sub
jne
dec
sbb
and
xor
idiv
pusha
lea
cmp
jb
into
in
mov
pop
or
clc
sub
mov
sub
add
scas
repz
test
cmp
mov
fstp
or
sbb
jo
mov
jbe
mov
fst
mov
add
inc
inc
fimul
test
mov
mov
fadd
sub
inc
jnp
sbb
add
add
cmp
cmp
jmp
push
add
push
test
xchg
data16
cmp
xchg
mov
add
push
push
push
push
iret
push
fwait
cmp
pop
nop
rcl
or
mov
xor
push
inc
and
pop
jle
aam
test
or
imul
jle
ret
add
cmp
inc
pop
in
and
inc
(bad)
sub
aas
push
loope
je
jo
jg
loopne
mov
jo
inc
xchg
sbb
adc
pop
cmp
jns
push
mov
xor
sub
mov
xor
js
mov
add
hlt
jg
push
test
push
jnp
or
or
push
call
pop
pop
clc
(bad)
pop
add
mov
movzx
push
dec
addr16
imul
pop
push
mov
sub
pop
push
div
inc
add
pusha
rol
cmp
adc
jecxz
(bad)
push
arpl
mov
dec
jg
inc
add
(bad)
cld
cmps
or
call
add
add
jle
lock
popa
inc
mov
push
pop
loopne
outs
sbb
dec
adc
push
dec
or
push
lock
lods
aas
pushf
repz
js
inc
(bad)
js
mov
repz
cmp
add
add
adc
jnp
rol
push
(bad)
push
inc
mov
push
mov
push
push
inc
sub
lods
sbb
fdiv
mov
jmp
jmp
pusha
pop
adc
repnz
ror
cmp
jle
in
aam
aas
pop
sbb
inc
jl
lea
mov
pop
mov
xchg
test
jge
lahf
mov
push
or
inc
aas
je
adc
push
cmp
or
sbb
jno
jns
mov
jns
cmp
and
mov
jg
ret
fbld
sahf
(bad)
aaa
jbe
sbb
inc
mov
adc
mov
or
cmp
push
jne
jae
out
xor
js
add
ror
adc
shrd
jg
mov
hlt
push
push
aad
jns
sbb
pop
inc
mov
inc
mov
dec
jbe
ror
cmp
pop
jne
test
adc
pop
add
jb
mov
push
xor
sub
repnz
popa
rcl
sub
push
mov
(bad)
adc
push
pop
push
and
xchg
shl
cwde
shl
sbb
fild
ja
ss
xor
push
push
inc
adc
sbb
inc
mov
imul
jp
push
pop
adc
xchg
sar
adc
sbb
shl
add
or
push
stos
ss
lock
aad
inc
pushf
mov
pop
ret
push
scas
fbld
push
mov
jns
or
out
je
or
xor
rcl
lock
pop
inc
cmp
aam
push
mov
in
adc
jnp
(bad)
push
and
ror
call
jne
(bad)
fwait
mov
pop
popa
ret
or
bound
inc
xchg
pusha
push
push
mov
push
jae
and
pusha
mov
movs
out
pusha
je
or
imul
mov
cmp
push
jno
mov
mov
test
jb
add
cmp
enter
aam
imul
jo
or
or
mov
sub
mov
add
xor
(bad)
in
mov
cli
fistp
cmp
and
sbb
lock
pop
add
xchg
clc
pop
pop
or
mov
or
fs
stc
sub
push
push
aas
sbb
imul
ja
cmps
or
lods
ins
enter
sbb
xor
out
sbb
dec
mov
pop
rcr
mov
push
adc
sub
inc
push
enter
aaa
mov
lea
shr
and
push
xor
jmp
lods
or
test
(bad)
pop
inc
stos
std
ds
shr
sub
pusha
and
call
sub
pop
add
push
jg
adc
or
mov
ds
push
or
test
mov
lds
or
mov
adc
xchg
fwait
retf
loopne
les
enter
push
out
dec
stc
inc
in
push
mov
adc
sub
sti
mov
sub
push
sbb
cmp
ins
stc
jge
outs
adc
and
ja
mov
movs
cmp
pushf
movs
mov
les
(bad)
js
pusha
cmp
test
add
push
iret
in
mov
mov
mov
mov
rcl
pop
cs
retf
pusha
fsub
in
xchg
dec
in
dec
lock
clc
cld
pop
stc
lods
cmp
mov
mov
mov
xchg
retf
mov
sbb
sbb
movs
jb
cs
sub
push
cs
retf
xor
test
inc
inc
xchg
retf
jae
dec
dec
lods
push
pop
in
pop
cs
pusha
mov
cmp
dec
ins
jo
push
push
add
data16
xchg
cmps
ret
pusha
sub
lock
mov
mov
(bad)
retf
inc
call
fidiv
fdiv
adc
push
jl
adc
or
aam
cld
mov
pop
cs
adc
dec
lea
mov
fbld
je
mov
out
pop
jl
(bad)
xor
aad
cmp
jb
mov
mov
mov
mov
dec
in
mov
in
test
hlt
clc
mov
sahf
retf
addr16
mov
mov
adc
retf
jae
pop
sbb
sub
xor
pop
inc
push
cs
movs
dec
push
xor
xchg
retf
or
pop
mov
add
jge
cmp
nop
adc
mov
js
pop
imul
dec
cli
pop
fst
push
outs
add
pop
jb
jle
bound
lods
cmp
xchg
inc
sbb
call
les
mov
retf
xchg
or
mov
or
add
fs
or
add
fs
ins
pop
or
jo
mul
cmp
je
(bad)
dec
push
ins
mov
push
cdq
jl
mov
lsl
push
push
or
cmp
test
inc
sub
xchg
fmul
fwait
out
push
or
dec
mov
push
or
add
add
and
mov
mov
or
adc
or
mov
inc
adc
adc
or
pop
push
add
lods
jns
jno
push
nop
adc
pop
imul
pushf
jle
or
add
sbb
or
sbb
or
push
mov
jnp
jl
add
or
or
call
sbb
ins
xchg
jno
pop
mov
pop
movs
and
lahf
and
and
js
add
sub
mov
into
add
push
call
mov
push
inc
or
mov
sub
lahf
imul
mov
lahf
push
jmp
or
scas
and
ror
dec
sub
stc
popf
xchg
jne
xor
adc
xchg
neg
mov
inc
pop
sbb
or
fadd
cmps
cmp
push
test
add
add
push
and
fiadd
ss
pop
fcom
push
xor
daa
xchg
inc
cs
ror
dec
lods
xchg
xchg
sub
rol
dec
sub
push
test
sub
jo
pop
and
push
div
enter
popa
call
and
into
sub
mov
ins
or
pop
ja
mov
cwde
pushf
or
push
sub
les
cmp
ss
shr
pop
jg
mov
pusha
sub
fs
das
ins
xor
cmp
lea
push
popa
test
jbe
pop
aas
cmp
add
out
xor
sbb
ror
xor
add
mov
xor
mov
push
shl
cld
and
int
or
adc
adc
rcr
enter
aad
mov
call
imul
das
or
in
psraw
push
sub
ja
dec
repz
or
xchg
mov
repz
mov
push
enter
xor
inc
les
xor
ss
shl
mov
(bad)
push
lahf
cmp
push
cmp
je
loope
jae
fsub
sub
xchg
enter
les
xor
test
pusha
in
add
push
jl
add
jle
adc
test
and
test
or
push
jne
js
rcl
test
dec
(bad)
dec
add
outs
or
mov
fiadd
jns
(bad)
test
add
add
fcmovnbe
cmp
retf
dec
mov
gs
std
das
xchg
add
dec
dec
rol
push
cmp
mov
inc
mov
inc
sub
add
fdiv
in
inc
cmps
je
clc
add
leave
xchg
push
add
jecxz
popf
jmp
inc
fdiv
xchg
aas
sbb
inc
or
mov
enter
je
adc
mov
xchg
or
inc
inc
inc
sub
or
inc
ds
inc
ficomp
dec
sbb
add
and
jmp
ficom
fwait
inc
inc
mov
inc
enter
sahf
push
dec
dec
dec
push
pop
test
xor
cmps
xchg
test
push
inc
es
call
sbb
pop
pop
mov
neg
retf
call
enter
inc
xor
xchg
push
push
or
dec
jne
dec
and
movs
or
ss
stos
adc
sbb
mov
mov
adc
mov
pop
mov
retf
int3
loop
ins
or
in
push
mov
push
add
sbb
test
jmp
dec
xor
call
add
popa
fcom
cs
fdivr
inc
mov
inc
gs
sar
lea
dec
push
int3
and
push
mov
xchg
jbe
and
lods
inc
imul
mov
push
or
add
adc
scas
stc
jbe
mov
or
cs
mov
xchg
sbb
mov
sti
and
fstp
push
ins
mov
in
scas
sub
js
xor
or
or
jle
data16
inc
add
clc
dec
(bad)
(bad)
fild
or
sub
(bad)
ror
add
add
jbe
inc
sar
dec
imul
push
or
xor
pop
lahf
jno
mov
or
jmp
mov
jge
jae
pop
das
cmp
fdivr
xchg
inc
jge
push
and
mov
shr
cmp
jnp
adc
not
push
ins
sub
and
mov
add
sbb
or
push
add
mov
inc
sbb
and
inc
pop
pop
push
js
sbb
xchg
and
sub
inc
xchg
nop
dec
mov
in
cmp
inc
jl
js
xchg
mov
ins
sub
dec
es
dec
jnp
push
mov
push
adc
cmc
add
sti
xchg
loope
inc
push
pop
popf
lods
inc
aas
or
inc
call
sub
sub
xor
and
ret
inc
fisttp
pusha
adc
inc
ror
in
push
dec
movs
lock
push
push
mov
cmp
inc
adc
push
push
fidivr
lock
mov
xor
push
xor
push
add
lods
leave
clc
mov
push
das
sub
inc
push
sub
add
dec
sub
xchg
mov
sbb
dec
adc
mov
mov
mov
dec
pop
ret
adc
sub
sbb
repz
dec
stc
pop
sbb
pop
mov
sbb
pop
pusha
mov
push
adc
sub
dec
or
mov
or
std
cwde
mov
movs
lock
sub
loopne
mov
retf
inc
xlat
add
pop
sbb
not
addr16
cmp
adc
icebp
push
xchg
push
pop
sbb
les
jp
mov
add
sub
int
scas
mov
inc
push
mov
push
xor
and
leave
push
dec
dec
leave
inc
xor
and
cmp
xchg
popf
push
inc
mov
test
dec
inc
or
add
stos
pop
ins
jg
pop
and
push
mov
lahf
(bad)
mov
sbb
lahf
or
movs
adc
pop
ret
add
ins
mov
mov
movs
int
ror
sbb
and
mov
sar
js
xchg
ss
sbb
sbb
sbb
shr
add
lea
repz
push
push
bound
adc
in
sub
dec
adc
adc
ror
adc
ror
xor
dec
and
and
and
push
or
inc
lea
mov
and
and
jl
movs
dec
or
add
es
aam
call
push
sub
pusha
pop
adc
dec
pop
pop
jne
shr
or
ins
dec
and
add
cs
shl
cmps
xchg
data16
pop
add
add
push
das
mov
pop
jle
call
lea
aaa
jno
push
cwde
call
jbe
retf
push
mov
mov
cmp
jne
movs
pusha
sbb
lahf
sub
or
je
das
lock
add
xor
jl
(bad)
xor
out
lds
aas
(bad)
push
or
cmp
div
lock
push
cmp
push
mov
xor
xlat
push
or
and
push
adc
push
test
call
push
ret
xor
fwait
mov
or
out
push
push
inc
jns
(bad)
push
fcomi
retf
push
dec
push
cmp
lods
test
xadd
je
adc
gs
(bad)
sub
cmp
sahf
cmp
fdiv
je
dec
add
add
jo
cmc
popf
je
fadd
push
xor
add
fcom
xor
sbb
jge
inc
add
pop
fs
jnp
ret
call
pushf
push
xor
push
sub
mov
mov
xor
or
or
and
pop
sub
jo
cmp
mov
ds
add
cmp
sub
(bad)
imul
ins
mov
inc
xor
sub
(bad)
enter
shr
popf
add
ss
(bad)
xchg
adc
add
pop
test
clc
mov
hlt
out
push
push
shl
add
mov
mov
int3
sbb
jg
pop
jecxz
xchg
mov
lea
iret
sbb
fcom
mov
mov
jl
and
xchg
in
(bad)
fmul
jmp
repnz
or
adc
lea
ror
sbb
js
aam
and
inc
fadd
pushf
pop
dec
int3
rol
jecxz
jmp
loopne
mov
sbb
mov
inc
dec
sti
add
xchg
retf
inc
cdq
xchg
retf
int3
sub
pop
cli
add
pop
adc
push
jo
hlt
mov
fs
push
out
dec
in
xchg
pop
sbb
xchg
cmps
or
and
and
sub
xor
add
ins
adc
cmps
pop
and
mov
xchg
cmps
pop
add
movs
or
leave
cmp
add
ret
add
cmp
movs
jbe
sbb
cmp
inc
adc
dec
push
(bad)
cli
sbb
(bad)
pop
fist
xchg
pop
mov
test
add
fiadd
cmc
push
and
pop
aam
xchg
mov
cmps
push
dec
adc
jg
xor
stc
into
xchg
scas
and
out
adc
add
enter
jmp
pop
or
and
fst
movs
jne
xchg
add
jl
and
(bad)
mov
aaa
or
add
rol
and
call
pop
int
sbb
push
leave
shl
inc
xchg
loopne
lock
push
(bad)
in
daa
lock
scas
mov
adc
lock
popa
lock
dec
push
push
sbb
push
lock
pop
push
add
into
mov
jecxz
xor
rep
push
dec
movs
jg
pushf
fs
cmc
sub
push
push
and
stos
or
jg
clc
dec
lea
pop
addr16
push
cli
xor
pop
clc
cmp
jmp
sahf
xchg
add
data16
ret
pop
jne
clc
cs
mov
sbb
xchg
lock
mov
lock
cmp
pop
jl
mov
movs
xchg
hlt
out
pop
sub
clc
les
sahf
add
mov
dec
adc
shl
or
push
push
push
gs
les
push
pop
cmp
pop
push
pop
add
outs
daa
jns
xchg
cs
xor
xor
movs
lods
adc
dec
sti
lea
(bad)
push
sub
xor
test
shl
daa
ss
and
push
push
push
sub
in
add
call
cmp
inc
lods
cli
test
xor
test
test
inc
scas
dec
dec
dec
and
xor
shl
xor
xor
mov
mov
fcom
push
add
jae
rol
mov
xor
jb
pusha
sti
loope
ror
sub
jg
sub
jl
imul
ja
jp
lock
and
mov
js
std
sub
mov
rol
or
daa
push
test
cdq
xchg
mov
shr
icebp
xchg
add
fild
dec
repz
mov
mov
cld
jne
pop
addr16
movs
std
jne
cmp
jle
xor
je
mov
ret
pop
push
ins
je
retf
fild
mov
or
pop
icebp
cmp
mov
push
pop
pusha
fs
stc
xchg
call
inc
sub
(bad)
adc
add
mov
add
adc
push
push
retf
aas
cmp
jl
cmp
jge
push
test
xchg
push
cmp
inc
lock
cwde
sub
inc
inc
mov
aam
movs
and
xchg
mov
push
push
xor
mov
shl
mov
jbe
rcl
push
sbb
lods
xor
sbb
ror
pushf
not
jbe
retf
jl
out
push
test
pop
mov
ret
cwde
cmp
rcl
ja
sbb
mov
and
push
add
adc
inc
mov
pop
(bad)
jmp
adc
mov
clc
je
dec
sbb
add
sub
je
movs
dec
je
or
push
fwait
scas
dec
shl
push
mov
dec
dec
jo
dec
add
mov
adc
and
or
and
movs
add
rcr
xchg
xor
lea
add
add
arpl
jbe
inc
adc
pop
jo
jge
add
adc
push
xchg
mov
sub
ins
xchg
aaa
adc
(bad)
mov
xor
pop
or
test
dec
sub
xlat
and
mov
sub
push
pop
shl
dec
mov
mov
fldenv
sbb
data16
inc
arpl
jns
dec
or
or
js
adc
sub
push
mov
imul
jge
aas
mov
hlt
dec
pop
or
pop
push
and
sub
and
mov
out
clc
mov
cmp
or
jno
js
xor
rol
test
sbb
sbb
or
xchg
or
inc
jno
fidiv
jb
or
bound
fmul
sbb
adc
rol
or
push
lea
or
push
or
es
or
jne
or
adc
ret
and
mov
lock
dec
xor
xor
pop
(bad)
pop
cmp
mov
adc
or
jg
xchg
pop
daa
xor
lea
xor
sar
dec
lea
out
adc
or
mov
cwde
pop
mov
jmp
sub
push
(bad)
(bad)
mov
sbb
mov
jmp
mov
cmp
pop
je
push
or
test
or
(bad)
mov
sub
and
int3
pop
and
call
nop
add
push
arpl
push
scas
sbb
mov
fs
add
sbb
in
mov
ins
pop
inc
inc
xchg
xlat
add
pop
test
fstp
pop
inc
movs
inc
push
sbb
pop
frstor
ret
xchg
iret
push
aam
arpl
sbb
jl
pop
dec
and
call
pop
pslld
push
push
jmp
mov
pop
push
inc
lods
or
adc
loopne
fs
or
nop
loope
xchg
add
add
xor
lahf
add
push
sbb
sahf
mov
xchg
mov
sar
ret
dec
in
add
add
xchg
outs
repnz
(bad)
mov
add
and
and
or
adc
adc
push
mov
sbb
xor
push
das
and
push
xor
and
inc
cs
js
and
xchg
ss
ins
and
sub
sub
sub
popa
add
test
rol
mov
inc
std
sahf
iret
in
cdq
inc
sub
cmp
mov
push
rol
rcl
push
int3
iret
cs
cmp
cmp
or
dec
xchg
sahf
or
dec
xor
shl
dec
inc
out
mov
xchg
xor
sbb
and
push
inc
sahf
add
inc
dec
push
test
cwde
ja
sub
or
add
inc
dec
fst
ffree
or
call
xchg
inc
push
lds
adc
or
cwde
xchg
dec
loopne
and
sahf
xchg
cdq
and
int
dec
cmp
movs
xchg
push
aam
sub
xchg
push
ins
(bad)
mov
dec
cli
inc
pop
ins
sbb
sbb
push
cmp
mov
add
mov
fbstp
jp
mov
pop
popa
mov
mov
mov
in
xchg
ror
push
or
sahf
push
push
fcom
dec
fisttp
add
out
dec
dec
adc
lea
loop
jp
es
or
mov
mov
js
push
cmps
iret
out
scas
xor
shl
pop
or
mov
inc
fwait
xchg
jmp
fmul
jo
push
in
cmc
pushf
push
jg
add
push
push
adc
sub
cmp
add
dec
aam
repz
int
inc
and
pop
jle
lahf
adc
inc
xchg
or
xor
rcr
mov
es
in
push
movs
xchg
lahf
xor
push
ss
sub
push
je
cld
xlat
xor
inc
imul
test
shl
dec
scas
les
adc
xor
jl
sahf
enter
push
int3
or
sub
lods
dec
dec
add
call
adc
dec
call
sub
out
pusha
pop
lds
mov
xchg
mov
adc
xchg
dec
iret
or
shl
adc
les
dec
and
or
les
push
js
aaa
push
adc
in
adc
push
imul
push
fsub
xchg
sbb
out
add
xchg
dec
call
pop
cmp
sbb
out
rcr
adc
sub
ror
push
sbb
data16
xchg
cmp
inc
in
mov
int3
pop
pop
retf
stc
jno
inc
push
les
add
adc
jge
sbb
or
push
or
rcr
dec
icebp
push
(bad)
aaa
push
xor
push
and
mov
leave
mov
mov
jb
push
int3
pop
in
and
imul
repnz
(bad)
mov
loope
js
pop
fiadd
pushf
lds
out
add
sbb
int3
arpl
mov
aam
push
call
pop
push
int
loope
mov
(bad)
je
call
sar
in
es
and
mov
mov
add
and
dec
(bad)
jne
lea
inc
add
xor
mov
mov
test
nop
mov
dec
sbb
in
inc
in
and
je
fnsave
mov
(bad)
dec
and
pop
rol
jnp
dec
sub
leave
push
mov
popf
pushf
pushf
fsub
mov
shl
pop
cmps
shl
test
fistp
fcom
rcr
mul
push
std
jp
add
pop
xor
mov
pop
movs
mov
push
bound
mov
mov
push
das
mov
aad
fdivr
aad
mov
mov
sbb
inc
cmp
inc
fdivr
xor
pop
adc
cmp
test
test
into
add
cmp
mov
in
xchg
je
call
mov
imul
pop
mov
xor
movs
add
cmp
(bad)
cmp
aas
repnz
push
aas
pop
lea
aas
cmp
xor
sub
push
dec
jae
mov
hlt
sub
push
cmp
adc
mov
and
lods
aad
mov
mov
ret
dec
cwde
add
gs
lods
inc
(bad)
outs
clc
jge
add
mov
push
or
dec
or
loop
sbb
cmp
lea
cmp
push
pop
test
mov
mov
dec
inc
mov
imul
add
shl
adc
pop
dec
cld
and
xchg
lock
mov
bound
fsubr
mov
shl
dec
retf
push
or
ins
xor
sbb
pusha
loope
fst
lock
scas
(bad)
lock
xchg
mov
push
imul
adc
push
mov
outs
jg
mov
in
push
test
mov
mov
das
push
inc
add
call
sar
mov
pop
jo
sbb
mov
ds
cmp
xor
adc
push
lods
add
loopne
aad
pushf
mov
sub
push
lods
in
fs
cmp
pop
les
aad
(bad)
out
mov
sbb
in
bound
lahf
xchg
adc
pop
cmp
adc
add
jge
push
pop
fadd
add
jle
hlt
or
std
sbb
or
push
fdiv
push
test
push
rcl
xchg
test
jl
xchg
inc
mov
arpl
pop
cmp
pushf
adc
ja
cmp
ror
add
jns
jp
mov
cmps
mov
mov
xchg
test
inc
sbb
inc
test
mov
loope
add
push
mov
out
and
popa
neg
push
sbb
pop
shr
pop
adc
pop
pop
das
add
ja
sub
push
mov
outs
shr
jecxz
jns
sbb
mov
jo
mov
ret
add
mov
push
and
shl
aad
xor
mov
push
data16
dec
mov
in
and
xor
mov
mov
ins
inc
push
jb
and
sub
test
and
inc
je
xchg
xlat
sets
xchg
in
cmc
inc
iret
adc
xchg
cwde
xor
sub
xor
lock
jne
(bad)
fiadd
sub
and
adc
adc
push
adc
push
dec
adc
cwde
add
jbe
dec
fcom
push
sub
push
neg
add
cmps
mov
pop
inc
fdiv
adc
inc
add
add
push
mov
push
sbb
jecxz
je
dec
add
sbb
je
or
fcomp
add
sub
push
test
cmc
test
add
cmps
adc
test
add
dec
xor
ds
test
ds
or
or
xchg
sub
test
iret
inc
adc
adc
and
aam
mov
stc
sti
pop
xchg
inc
call
and
jne
sti
lods
ret
ret
pusha
xlat
pop
ret
mov
sub
xor
push
popa
mov
stc
pop
add
cmps
and
aas
push
popf
ret
jg
xchg
lahf
ret
and
jge
add
xor
mov
movs
imul
sub
or
dec
sbb
add
add
pop
and
adc
adc
aaa
aam
movs
xor
pop
cmp
adc
push
jo
and
in
push
cs
pop
or
pop
jl
add
fadd
(bad)
pushf
inc
and
popa
mov
mov
add
sub
mov
sbb
push
lahf
mov
or
dec
stos
adc
or
xor
push
xor
stos
push
stc
in
js
mov
adc
adc
call
bts
call
jmp
fmul
push
adc
(bad)
mov
push
outs
adc
mov
sub
pusha
or
cmp
in
xor
xlat
cmc
jne
cmp
in
mov
and
mov
jl
mov
pop
adc
jns
je
push
cwde
xchg
add
dec
cwde
bound
(bad)
cmp
add
add
push
and
and
popa
mov
dec
(bad)
push
xor
rcl
sbb
dec
fild
cmp
movs
in
push
cmp
aam
xchg
les
add
add
and
and
test
mov
or
sbb
in
sub
and
or
pop
push
icebp
cmp
pop
es
push
xor
add
pop
and
push
pushf
jns
sub
stos
in
or
or
pop
mov
nop
xor
dec
add
lea
adc
stos
pushf
and
test
add
retf
and
in
stos
mov
iret
dec
mov
mov
add
xchg
pop
mov
mov
and
mov
popf
fisttp
or
jmp
sbb
or
stos
loop
adc
or
paddusw
lahf
sbb
lods
inc
dec
push
sbb
and
retf
and
adc
mov
sti
xchg
cmp
or
mov
out
scas
ins
popa
adc
data16
out
rol
jo
jno
mov
push
mov
das
es
imul
inc
clc
gs
jmp
xor
cmp
mov
push
push
js
mov
pop
mov
push
fmul
add
cli
mov
cpuid
ror
mov
iret
add
push
inc
add
test
sar
adc
pop
mov
sbb
xchg
test
and
mov
or
adc
add
test
adc
stos
lea
stos
stos
lea
cmp
and
mov
in
cmp
xor
dec
mov
mov
sub
dec
mov
xchg
mov
xchg
adc
xchg
inc
inc
mov
push
pushaw
push
push
retf
arpl
movs
shl
sub
xor
nop
push
sbb
je
xchg
jo
mov
or
push
xor
scas
xchg
or
mov
cmps
mov
leave
inc
push
dec
or
push
or
cmp
mov
inc
adc
adc
leave
jae
adc
sbb
repnz
cmp
and
and
daa
iret
leave
jae
sub
xor
pushf
cmp
xor
cmp
iret
leave
cmp
inc
inc
leave
jae
pushf
inc
inc
dec
dec
pushf
cmp
iret
dec
dec
push
push
push
iret
leave
jae
push
pop
pop
pop
pop
clc
add
pusha
pusha
iret
inc
lea
push
push
xchg
fs
lea
loopne
pop
push
jecxz
xchg
push
push
add
push
xor
add
inc
cmp
ret
xor
dec
lock
fnclex
add
(bad)
nop
push
mov
jge
mov
ja
add
fcom
mov
mov
lea
add
mov
jb
loop
sub
sub
sahf
xor
or
mov
cmp
mov
pop
jne
xor
mov
mov
adc
aaa
mov
cmps
test
xchg
les
test
popa
sbb
adc
loopne
cld
mov
pop
cld
xchg
jmp
inc
hlt
cmp
dec
daa
dec
hlt
mov
mov
lea
lock
push
sbb
jne
mov
mov
inc
pop
xchg
add
or
xchg
mov
pop
adc
pop
bswap
inc
es
ror
lea
movs
mov
dec
xchg
pushf
in
add
adc
jo
pop
adc
lods
in
movs
jbe
mov
add
inc
sbb
sub
out
mov
jo
cmp
jl
lahf
push
stc
stc
jecxz
mov
into
xchg
jl
ret
test
in
sub
add
inc
xchg
out
inc
hlt
xchg
mov
cmp
mov
cmp
xor
push
adc
test
test
add
mov
lar
outs
rcl
dec
mov
jmp
push
in
jecxz
stos
push
rol
nop
cwde
push
mov
inc
sahf
sub
push
cmp
mov
addr16
xor
push
(bad)
mov
nop
cmps
push
fist
pushf
add
or
cld
mov
inc
add
or
inc
mov
leave
or
outs
or
scas
dec
mov
add
dec
or
mov
push
leave
and
adc
pop
or
adc
cdq
sub
sti
adc
or
adc
sbb
cli
imul
and
mov
or
mov
pop
xor
mov
push
and
pop
cld
fistp
add
sbb
push
or
or
aaa
aaa
xchg
push
or
pop
or
lock
lahf
sub
out
stc
(bad)
call
and
xchg
stos
loopne
cdq
sbb
adc
add
sbb
cmp
imul
stos
push
adc
xchg
or
mov
dec
cmp
hlt
sbb
idiv
adc
adc
enter
movzx
cld
std
std
and
(bad)
inc
push
jle
xchg
or
pop
mov
adc
or
mov
mov
push
mov
ror
inc
aas
arpl
pop
or
push
pop
cmc
dec
add
add
stos
sub
mov
pop
cmp
mov
mov
push
push
jo
xchg
out
inc
dec
sub
lea
jne
jo
push
or
push
mov
adc
imul
sub
dec
xor
cwde
hlt
jbe
pop
cmc
xor
add
push
pushf
popa
xchg
mov
dec
xor
dec
xor
popa
mov
dec
and
and
and
or
push
xbegin
test
push
and
xchg
pop
add
xchg
push
stos
jecxz
mov
and
fcom
pop
adc
sbb
sbb
test
pop
aaa
icebp
repnz
pop
add
cmp
cmp
call
imul
jecxz
in
nop
pop
nop
ins
sub
pop
jmp
hlt
push
push
mov
xchg
mov
jecxz
and
pop
xchg
cmp
xchg
dec
add
dec
inc
leave
xor
sub
popf
ret
or
inc
ins
aad
mov
push
or
cld
pop
push
je
xor
jge
mov
mov
and
adc
inc
inc
popa
pop
lods
dec
rol
jne
test
cmp
fst
movq
or
or
or
or
cmp
mov
or
push
or
dec
sbb
or
add
mov
xor
add
les
pop
add
ret
bound
sbb
add
je
test
mov
and
nop
mov
data16
dec
popa
and
mov
add
xchg
(bad)
test
ficom
pop
test
push
fcom
int
sbb
or
xchg
sbb
pop
bnd
sbb
xchg
jb
addr16
mov
adc
inc
fs
adc
scas
xor
sbb
stc
cmps
add
sbb
ret
or
push
xor
sbb
dec
push
push
or
sub
adc
pop
adc
pop
or
ret
or
dec
stos
push
loope
and
nop
jmp
nop
pop
add
loopne
jecxz
add
inc
adc
test
aam
add
add
jne
xchg
sbb
xor
adc
pop
mov
sbb
cmc
add
dec
pop
lea
cmps
and
add
add
mov
add
inc
pop
push
push
dec
cmc
je
add
mov
popa
xchg
mov
ret
in
adc
inc
jl
inc
cdq
aad
sbb
outs
cdq
fstp
sbb
(bad)
pop
sbb
ffree
dec
add
shl
loopne
mov
pop
xor
mov
add
jl
sub
sub
jge
ds
inc
adc
into
popf
rcr
or
mov
mov
jns
ins
add
dec
mov
mov
sbb
pushf
movs
cmp
lods
je
cmp
in
push
cmp
loope
ins
add
mov
push
mov
pop
mov
clc
mov
pop
or
cmp
cmp
sub
xor
pop
(bad)
mov
leave
or
mov
mov
out
adc
or
mov
cmp
xchg
inc
shr
or
daa
iret
and
or
sub
or
(bad)
ja
ror
push
psrad
imul
push
mov
pop
je
shr
enter
and
test
enter
adc
xor
jl
test
sbb
inc
push
mov
inc
fs
retf
mov
xor
or
mov
test
sbb
stos
in
sbb
add
(bad)
or
ins
sub
pop
xchg
cmp
add
mov
add
pop
loop
dec
ins
inc
pop
sub
rcr
ins
mov
pusha
pop
cld
mov
pop
pusha
pop
push
cli
add
scas
or
sub
or
iret
push
or
or
push
repnz
test
cmp
sbb
sbb
mov
or
jecxz
rol
or
sbb
push
mov
js
shl
sar
fs
xchg
jo
ror
mov
les
rcr
push
leave
shl
push
push
and
sar
cmp
xchg
dec
dec
cmp
xchg
out
push
je
push
push
ss
loopne
push
xor
aas
mov
xchg
xor
or
jne
push
sbb
call
add
jnp
retf
mov
dec
sub
and
mov
hlt
add
pop
loope
add
xchg
adc
mov
jle
push
je
add
(bad)
and
add
or
int
or
jmp
scas
daa
lods
pop
test
sub
add
and
loopne
add
iret
dec
dec
and
add
retf
sub
xor
and
sub
sub
dec
push
sub
pop
push
xor
and
ins
sub
and
mov
jne
push
nop
dec
pop
mov
jb
cwde
sub
mov
cmp
xchg
inc
scas
mov
sub
pushf
nop
adc
cmp
xor
xchg
das
xor
xor
enter
inc
push
in
lods
xor
sbb
test
cmp
mov
mov
and
pop
sub
mov
push
jae
or
in
pop
xchg
(bad)
and
and
cmp
add
inc
pop
loop
and
xor
sbb
ss
and
mov
sub
add
or
dec
lods
imul
and
mov
xor
sar
pop
cdq
sub
adc
test
cmp
adc
dec
xor
mov
xor
jl
and
inc
adc
xor
push
dec
test
sub
inc
push
dec
xchg
push
jne
dec
mov
imul
dec
and
mov
add
in
or
or
test
loopne
sbb
xchg
sbb
pop
rol
dec
xchg
add
sbb
setb
fbstp
mov
nop
sbb
sbb
in
mov
inc
dec
adc
push
mov
lea
cmps
lea
or
xlat
dec
ds
retf
lock
call
call
jmp
or
add
loopne
dec
cmp
jge
inc
or
(bad)
xchg
ins
jle
test
jle
push
dec
clc
or
xchg
ror
sar
stos
push
outs
xlat
jecxz
je
fs
add
dec
cmps
out
push
in
outs
push
jo
pop
push
mov
pop
add
out
jmp
mov
push
or
jmp
sbb
(bad)
(bad)
neg
push
retf
ins
and
je
stos
repnz
ror
inc
xchg
dec
xchg
add
fstp
xchg
call
mov
or
pushf
xchg
stos
in
sbb
das
and
ror
cmp
and
xchg
adc
in
sbb
out
stos
loopne
mov
shl
repz
add
dec
xor
sub
xchg
sbb
sbb
shl
imul
lock
xor
add
inc
movs
or
jb
rol
imul
in
pusha
je
pusha
jo
mov
push
add
sub
fcom
inc
xor
xor
jno
leave
sub
xlat
cmp
dec
and
fadd
inc
nop
push
shr
mov
lahf
mov
dec
call
mov
cmp
add
popf
or
pop
cmc
nop
pop
leave
adc
sbb
add
mov
cmp
cmp
pusha
pop
lock
mov
sbb
sbb
sub
das
sbb
mov
js
add
hlt
mov
sbb
inc
je
ret
sbb
lods
xor
or
mov
and
movs
movs
cwde
and
(bad)
adc
mov
and
jb
or
(bad)
mov
pop
or
xchg
or
movs
mov
leave
push
xor
aad
add
jg
push
or
repnz
jl
and
mov
mov
add
push
movs
mov
stc
push
jmp
inc
pop
mov
in
shl
lea
loopne
rcl
adc
push
add
pop
rcl
jnp
test
(bad)
dec
mov
adc
leave
dec
pop
adc
je
fist
xchg
stos
ins
cdq
stos
lock
mov
jae
push
rcl
or
push
jmp
rcr
sbb
rol
cdq
push
fs
adc
adc
(bad)
mov
sub
icebp
loopne
clc
xchg
mov
push
jg
fld
nop
cmp
lods
arpl
push
push
dec
pop
xchg
data16
add
sub
(bad)
mov
mov
push
adc
leave
sbb
dec
mov
stos
and
inc
pop
jb
addps
jo
add
dec
bound
pop
pop
inc
inc
add
das
in
(bad)
arpl
(bad)
and
jnp
add
fist
pop
mov
mov
add
xchg
inc
ins
jl
xor
test
sar
pop
and
ins
dec
add
test
in
lea
sub
sbb
and
pop
sub
pop
jp
push
das
fs
inc
xchg
cmp
fcomp
inc
jb
rdtsc
sub
xor
xor
mov
xor
ret
outs
add
sub
xchg
add
pop
loopne
xchg
jne
jnp
ret
ror
mov
ror
add
mov
pop
mov
sub
mov
sub
push
sti
out
pop
dec
jne
cmp
mov
mov
pop
xchg
outs
jmp
ds
cmp
xchg
das
xor
cmp
pop
ror
push
xor
cmp
dec
mov
shl
xor
das
(bad)
nop
dec
push
loop
(bad)
sbb
xchg
jl
sub
push
test
scas
add
movs
jns
out
call
pop
pop
mov
cmps
popa
sbb
repnz
xor
jae
jne
and
push
add
add
add
je
daa
push
movs
xchg
fnclex
add
ds
lahf
into
loop
clc
mov
lahf
mov
add
dec
jne
and
inc
fmul
lea
pop
mov
xor
mov
sub
fist
mov
in
mov
jo
not
push
xchg
pop
or
pusha
retf
and
in
lea
sbb
mov
jne
cmovb
add
ret
push
aas
sbb
jl
sbb
jns
mov
push
push
dec
cwde
or
pushf
cmp
sub
add
jne
(bad)
cmp
ins
mov
sbb
inc
test
lods
outs
and
xor
xchg
rol
hlt
mov
lock
adc
jns
jg
mov
inc
cld
aas
dec
sti
or
cmp
push
push
cmp
mov
mov
push
inc
stos
(bad)
and
stos
add
jae
daa
adc
lea
ror
and
push
mov
(bad)
inc
mov
jns
dec
mov
and
js
clc
mov
adc
hlt
or
push
ins
lock
cld
push
fist
mov
pop
outs
pop
push
adc
cmp
push
or
inc
mov
lea
pop
dec
cwde
add
rcl
lahf
inc
cmp
ins
fdivr
fnstenv
cmp
sub
mov
(bad)
jns
ret
js
sub
loop
int3
shr
jmp
retf
addr16
mov
inc
jg
or
cld
cld
jl
cmp
jne
sbb
es
jo
repz
or
pop
dec
mov
inc
xor
xor
pop
or
cmps
pusha
mov
xor
pop
adc
loope
xor
push
jne
adc
pop
jo
nop
ins
pop
test
xor
aaa
test
push
push
adc
mov
mov
pop
sbb
loope
push
adc
int
inc
mov
push
cmp
(bad)
in
rcr
jne
mov
ins
(bad)
cdq
test
es
out
ss
xor
pop
mov
push
mov
cs
sub
dec
es
mov
or
inc
cmps
mov
add
sub
sbb
xor
add
pop
push
pop
sub
push
loope
ret
sti
inc
dec
inc
mov
nop
(bad)
out
neg
xor
inc
cmp
jge
sub
sbb
sbb
adc
push
jmp
adc
xchg
retf
dec
pop
cmp
push
and
mov
xchg
and
mov
js
mov
and
(bad)
and
nop
push
test
outs
xchg
call
sbb
xchg
pop
arpl
scas
sub
push
xor
pop
and
xor
dec
cmp
xor
add
xor
sub
sub
push
jmp
cmp
lds
les
and
add
xchg
cmp
stc
dec
dec
xor
xor
test
sub
inc
and
xchg
cmp
push
nop
and
sub
add
mov
add
add
fiadd
inc
daa
mov
push
adc
and
cs
fcomp
jl
jmp
neg
dec
cmp
or
sahf
je
out
jge
jbe
jne
sbb
jbe
cmp
mov
sub
jmp
push
push
pop
xchg
stos
xor
xor
sub
cmp
outs
cmp
int
add
sbb
mov
jb
cmp
outs
push
lods
sub
jns
shr
lods
add
add
or
push
fild
push
ret
or
repz
je
jl
mov
shl
push
xchg
dec
xor
mov
jge
les
adc
inc
hlt
push
mov
nop
adc
add
push
xlat
inc
mov
inc
and
cmp
xor
xor
inc
or
xor
scas
dec
jle
sbb
retf
cs
sbb
mov
pop
or
push
dec
mov
xor
xor
mov
mov
mov
adc
pop
nop
sub
hlt
cmps
call
jne
sbb
cwde
loop
and
out
arpl
push
fcomp
push
inc
cmp
cmp
iret
mov
sub
xor
and
psllq
xor
cs
inc
push
mov
adc
adc
and
and
inc
and
dec
add
add
or
loope
daa
call
xchg
inc
dec
pop
xchg
fdiv
xlat
mov
lea
fsubr
mov
lea
cmp
movs
sbb
fsub
xchg
mov
(bad)
jmp
mov
dec
push
add
and
in
dec
adc
addr16
imul
loope
sub
aad
add
add
push
fnstenv
jmp
or
adc
mov
inc
or
push
scas
push
cdq
test
in
mov
add
sbb
add
xchg
cmp
pop
push
popa
add
mov
ror
(bad)
cmp
iret
xchg
cmp
enter
add
lock
inc
pop
(bad)
cmp
popa
cmp
ret
add
clc
pusha
add
xchg
test
add
xor
aaa
jmp
movs
xor
(bad)
dec
cmp
cmp
inc
fs
mov
inc
sub
sub
xor
sub
or
out
mov
mov
jne
jnp
enter
sar
cmp
test
jns
xchg
dec
push
dec
push
pop
sub
nop
pop
xchg
jo
sqrtps
mov
inc
repz
mov
push
lea
rcl
and
pop
xchg
sbb
and
mov
call
and
add
add
out
xadd
out
mov
ror
into
icebp
lock
mov
push
out
and
sub
or
in
xchg
or
test
in
mov
cmp
adc
pushw
add
xchg
bound
clc
xchg
cmc
ja
and
nop
mov
call
lods
push
cmp
push
xor
lock
mov
or
or
or
pop
js
xor
(bad)
(bad)
aad
dec
ret
add
mov
pop
mov
mov
jmp
mov
cmp
ss
cmp
ret
stc
in
xor
inc
xchg
pusha
xor
fnstenv
mov
jns
pop
add
mov
inc
cwde
adc
aam
and
push
js
xor
fist
xor
test
lods
cmps
xchg
out
ror
mov
mov
mov
jg
cmp
sub
push
pop
add
xor
in
adc
mov
and
mov
sub
aam
jmp
inc
pusha
in
mov
xchg
add
and
mov
sub
cdq
and
loopne
clc
and
lea
cmps
std
pop
jmp
pop
add
je
inc
mov
cmp
lea
mov
in
lock
(bad)
sub
push
push
xor
arpl
test
(bad)
cmp
adc
add
mov
xchg
xor
cmp
xor
or
add
mov
dec
mov
cmp
adc
or
ss
leave
push
dec
and
daa
loop
pop
jb
inc
les
in
jge
add
in
in
sub
push
push
add
std
ret
add
jl
jns
push
mov
daa
dec
scas
mov
or
sub
or
imul
test
xor
adc
pop
mov
inc
xor
enter
icebp
inc
mov
xchg
jg
sub
hlt
mov
je
xadd
xchg
test
mov
pushf
loope
sbb
fldenv
test
sbb
push
push
outs
mov
push
mov
adc
repnz
or
retf
enter
add
add
adc
retf
xchg
lock
mov
cmp
add
les
(bad)
das
mov
loope
loope
(bad)
bound
fist
push
cdq
pop
mov
or
pop
call
sahf
mov
cs
sbb
call
add
in
push
inc
mov
xrelease
dec
and
push
add
add
adc
sub
adc
add
sbb
movs
adc
or
cmp
into
or
and
push
cmp
push
xchg
cmps
cli
cmp
xchg
pusha
adc
xor
nop
jo
adc
dec
enter
je
pop
outs
push
sub
add
xchg
xor
and
xchg
pop
dec
js
sbb
ss
or
ss
dec
add
sub
add
inc
and
(bad)
sbb
push
bound
mov
test
or
push
lds
les
adc
test
cmp
xchg
push
or
mov
popa
jge
ja
inc
add
std
adc
test
inc
push
adc
data16
jo
push
fcom
adc
sbb
or
adc
and
jmp
and
stos
aad
or
cwde
test
jno
adc
push
cmp
test
into
push
sbb
and
xacquire
push
js
sub
mov
ja
push
jb
jb
aas
or
push
das
add
jl
fild
dec
enter
cmp
sbb
mov
cmp
pop
mov
and
mov
or
push
out
fiadd
or
or
sbb
xchg
sub
inc
and
mov
inc
mov
or
mov
xchg
push
(bad)
das
test
mov
sub
add
adc
or
lea
pushf
aaa
bound
push
inc
cmp
push
or
(bad)
loop
add
xor
sbb
mov
movs
or
imul
and
adc
(bad)
adc
enter
repnz
and
and
push
push
sbb
call
mov
push
pop
push
adc
je
sbb
adc
and
pop
nop
popa
mov
call
jmp
lea
or
adc
jb
sbb
cmp
sub
add
and
push
or
adc
sub
mov
jmp
imul
cmp
or
dec
hlt
inc
fmul
push
rol
push
mov
inc
cmp
fist
push
cwde
jo
add
fsub
test
je
sbb
jl
imul
push
add
hlt
sub
mov
lea
test
sbb
mov
leave
pop
add
push
lea
sbb
push
pop
mov
das
nop
pop
adc
imul
sbb
cs
inc
or
and
sub
add
or
xchg
adc
dec
jecxz
sbb
mov
or
cmp
add
cmp
xchg
psubsb
fadd
movs
and
jle
or
dec
jmp
xor
cmp
lock
pop
xor
inc
inc
ror
xchg
xor
inc
inc
push
stos
shl
nop
cdq
jno
cmp
xchg
mov
pop
(bad)
arpl
in
loopne
icebp
mov
and
xor
(bad)
(bad)
push
add
mov
push
shl
and
leave
cmp
push
jns
mov
mov
mov
jne
iret
sub
dec
(bad)
xor
mov
shr
aas
leave
cmp
cmp
je
sub
mov
push
sar
sbb
sbb
add
dec
leave
sub
push
cdq
inc
les
aas
push
pop
mov
fwait
sbb
jne
mov
xor
inc
adc
sahf
or
adc
je
out
lock
mov
rcr
sub
cmp
pop
fs
pop
add
inc
call
xor
mov
mov
(bad)
cmps
enter
lea
lods
pop
adc
or
int3
inc
fsub
test
cmp
adc
inc
push
out
in
jns
sbb
sub
push
nop
and
test
hlt
sbb
into
rol
inc
dec
inc
sub
rcl
je
push
lea
imul
sbb
pop
add
push
adc
xor
sub
pop
pusha
(bad)
sbb
add
out
mov
clc
cmp
test
(bad)
and
add
ret
mov
(bad)
xchg
push
push
inc
aam
ror
inc
test
aam
cmp
pop
dec
ins
es
pop
sbb
cdq
dec
call
imul
inc
dec
inc
and
jo
loopne
daa
test
sub
fs
inc
inc
ss
mov
mov
lea
out
xor
dec
xchg
pop
das
add
repnz
xchg
add
ss
jns
test
mov
dec
add
lods
xchg
and
leave
shl
(bad)
in
cmp
add
fsub
xlat
sahf
adc
or
xchg
imul
mov
dec
and
or
pusha
sub
or
leave
retf
ins
jb
retf
mov
loope
pop
xor
sahf
fisttp
inc
(bad)
int3
adc
cmc
test
icebp
mov
xchg
pushf
sbb
repz
jp
bound
push
jbe
stos
jae
imul
and
jne
ret
and
xlat
loopne
push
sbb
je
add
sar
adc
adc
cmp
aaa
movs
lock
cmp
jle
mov
pop
test
push
inc
jmp
or
jle
cmc
dec
(bad)
xor
cmp
add
mov
js
add
inc
loop
mov
jl
neg
jecxz
and
cmp
pop
std
push
jl
(bad)
adc
ret
sbb
cdq
mov
push
ret
sbb
mov
push
inc
xor
add
sbb
pop
jmp
daa
pop
ret
xchg
outs
sahf
(bad)
jne
ffree
jle
pop
sub
inc
and
ja
stc
adc
push
mov
push
cmps
sbb
push
and
mov
push
pop
sub
xor
mov
lock
push
icebp
cmps
or
and
push
jmp
cmp
ret
aad
push
push
and
and
loope
add
lea
lea
add
cmp
pop
xchg
and
sub
(bad)
adc
adc
add
xor
hlt
pop
mov
xchg
jns
adc
test
repz
cld
add
sbb
ds
push
add
add
xor
sti
push
daa
and
adc
jne
adc
addr16
add
add
bound
aam
push
std
cmp
jle
dec
jle
bound
jg
test
(bad)
sbb
popf
retf
das
jecxz
inc
xchg
sub
pop
pop
nop
add
(bad)
xchg
sbb
push
add
sub
xor
repnz
push
adc
push
adc
cmp
(bad)
pop
and
aaa
sbb
lods
stos
and
add
push
sbb
fimul
mov
mov
(bad)
push
xchg
mov
xchg
sbb
and
fisubr
sub
jmp
add
jg
jmp
sbb
xchg
inc
mov
inc
dec
mov
and
out
repz
pusha
sub
scas
pushf
push
mov
adc
je
mov
push
adc
or
cs
jmp
mov
mov
xchg
jge
mov
les
inc
or
add
add
test
push
dec
and
mov
pop
ror
rol
shl
enter
in
dec
test
pushf
xor
jb
xor
sahf
jo
sbb
loopne
mov
lahf
push
mov
dec
fsub
test
or
aad
leave
pop
nop
push
push
xor
dec
loop
dec
add
and
iret
rcl
xchg
or
mov
xchg
out
mov
data16
inc
or
pop
sub
imul
mov
or
xchg
add
ret
enter
add
push
or
xor
lods
mov
inc
push
inc
es
sbb
mov
cmp
pop
xchg
inc
or
fsub
or
ret
mov
ss
lods
or
or
cmc
mov
shl
rol
cwde
call
lock
dec
or
or
rcl
push
mov
push
and
inc
and
sbb
xchg
push
(bad)
dec
stos
or
into
pusha
or
or
mov
mov
fcom
rol
jns
jmp
sub
dec
and
mov
call
ret
inc
aad
fdivr
fdivr
push
xchg
popa
in
xor
add
es
adc
ficom
fnsave
stos
add
retf
push
add
dec
adc
add
shl
enter
add
leave
adc
add
jecxz
add
call
push
imul
mov
test
pop
or
fs
pop
or
sub
mov
das
or
xor
repnz
cs
pop
sub
ret
sub
push
cmp
xchg
int
dec
sub
sbb
je
test
add
lea
in
mov
add
sub
lock
pop
test
(bad)
shl
inc
jge
and
and
adc
test
je
pop
xor
pop
rol
push
loop
call
lea
test
fmul
or
popf
and
push
in
imul
pop
sahf
and
push
jns
fcomp
pop
sub
push
pop
mov
inc
in
add
push
adc
and
bound
push
cmp
ss
pop
adc
ror
push
retf
and
cmp
mov
push
pusha
cmp
or
or
or
sub
enter
and
or
or
fmul
add
xchg
push
out
ret
xor
jo
add
sub
jno
in
or
push
sub
mov
pusha
sbb
dec
loopne
sbb
cmp
add
sub
and
call
dec
sbb
jo
dec
or
mov
mov
inc
in
or
mov
dec
aam
in
or
xor
ficomp
inc
xor
xor
cmp
dec
add
aaa
fst
test
jne
imul
outs
mov
(bad)
repz
adc
out
inc
add
pop
xchg
loop
cmp
inc
cmps
mov
adc
add
sahf
out
addr16
fmul
and
inc
push
loopne
enter
and
add
dec
sar
xchg
js
loop
jne
and
loopne
test
sbb
or
xchg
outs
je
mov
add
fcom
adc
mov
push
mov
inc
push
jns
mov
mov
adc
xor
pop
call
test
push
sar
cmp
jne
pushf
mov
jne
mov
pop
jb
mov
lea
or
movs
add
mov
cmp
xor
aas
dec
jmp
mov
dec
jne
cmp
pusha
add
shl
addr16
add
jo
adc
push
in
ins
inc
pop
in
popf
movs
add
sbb
xor
jl
lea
mov
dec
mov
push
lea
sub
xor
jecxz
sar
xor
dec
adc
push
adc
xchg
fsub
inc
mov
add
and
sub
add
test
and
add
adc
fsubr
pop
dec
cmp
daa
xchg
xchg
loope
push
ss
ins
and
and
iret
sub
or
xchg
sub
push
pop
push
inc
mov
sbb
push
sub
shr
and
and
push
dec
test
dec
inc
pusha
xor
adc
jae
in
lds
push
and
es
ins
inc
sub
pop
and
adc
call
add
inc
dec
push
mov
add
xor
adc
add
add
cmp
and
lahf
xor
mov
outs
pop
enter
call
push
sbb
add
nop
cdq
sbb
xchg
add
hlt
fimul
out
sub
cmp
mov
idiv
outs
and
dec
enter
adc
repnz
lock
mov
or
enter
inc
pop
loope
ret
sbb
sbb
push
lds
fisttp
or
add
jns
push
add
dec
aam
xchg
add
fsub
inc
sub
in
or
clc
push
add
or
pop
arpl
and
push
mov
out
arpl
or
pop
or
sbb
dec
add
mov
sbb
xchg
dec
cwde
add
bound
jo
ins
daa
inc
push
add
xor
popa
ins
inc
and
xor
ret
and
dec
ins
iret
sbb
push
and
movzx
pop
je
xadd
les
in
dec
mov
sbb
add
int3
add
sbb
adc
mov
sub
cmp
and
push
sub
jns
cwde
adc
ja
or
ret
cmp
test
(bad)
je
add
mov
imul
ret
pop
mov
push
scas
push
sub
adc
(bad)
adc
out
adc
xchg
or
sub
mov
sbb
add
nop
mov
mov
enter
xor
cmp
mov
cmp
mov
cmp
sub
ja
push
or
sub
push
in
ficomp
sbb
fs
mov
inc
cdq
neg
clc
add
xor
fst
call
adc
xchg
popa
pop
dec
stos
pop
inc
int
clc
or
inc
movs
enter
fs
push
loope
push
xchg
and
dec
adc
and
sbb
rcl
mov
and
mov
add
adc
sti
and
sbb
adc
rcr
xchg
(bad)
popa
lea
rol
inc
das
cli
lahf
push
aaa
dec
cld
sub
or
jge
push
xchg
adc
repz
push
push
jo
push
cmp
jg
push
rol
push
hlt
jae
jp
inc
mov
cmp
cmp
je
pop
repnz
rol
jge
cmp
(bad)
in
in
rol
inc
dec
add
jmp
lea
cmp
xlat
xchg
and
test
or
adc
add
or
nop
jne
inc
jle
sbb
push
or
sbb
cmp
popf
aad
and
sub
push
movs
je
sbb
mov
sbb
push
push
pop
fwait
ret
lock
or
mov
mov
in
leave
fidivr
outs
or
inc
dec
lock
sub
jne
inc
and
adc
test
push
test
cmp
dec
xchg
mov
mov
jge
in
mov
cmp
pop
add
cmp
jp
clc
jmp
add
pop
pop
jne
add
(bad)
repz
cmp
push
mov
dec
cmp
xchg
out
mov
cmp
movs
jnp
inc
xchg
mov
cmp
add
imul
mov
xor
add
mov
or
mov
lds
mov
jg
mov
or
xchg
nop
mov
inc
cmp
jo
cmc
sbb
shl
or
add
or
jbe
cmc
mov
add
jmp
sbb
pop
mov
into
in
mov
sbb
pop
je
adc
adc
lods
dec
pop
push
push
mov
sbb
inc
add
cmp
mov
jnp
lods
ins
jns
gs
std
mov
fmul
ins
repnz
mov
sub
enter
or
push
xor
jnp
aam
add
nop
inc
push
add
and
push
retf
aaa
retf
aas
sbb
rcl
mov
lds
pmulhw
xchg
inc
xchg
add
dec
and
dec
pop
sub
das
stos
into
(bad)
xchg
push
inc
sbb
jns
test
sbb
sahf
inc
ins
test
add
xor
in
loopne
xor
and
xchg
xchg
std
inc
popa
test
push
sbb
or
les
cmp
mov
cli
je
cmp
adc
or
call
ror
loope
ss
inc
add
cmp
imul
and
push
in
stos
inc
ficom
jb
retf
pop
pop
loop
add
or
or
add
scas
sbb
pop
or
and
nop
outs
out
pop
adc
(bad)
in
fwait
sbb
aas
imul
sbb
or
sbb
adc
inc
outs
loope
in
mov
cld
pop
lock
mov
lea
cmp
jge
mov
shl
fs
lea
inc
push
daa
das
push
inc
mov
push
sbb
gs
jl
ret
movs
jae
jmp
and
mov
mov
rol
jmp
or
jno
dec
xchg
mov
dec
les
jb
push
dec
sbb
rol
mov
jmp
cmp
leave
rcl
dec
dec
add
ds
ss
and
push
lea
mov
push
mov
imul
pop
xor
cs
or
and
sbb
sbb
nop
movs
adc
fdiv
sbb
push
das
sbb
adc
stc
cld
cwde
pop
pop
outs
adc
cmps
pop
push
dec
dec
ret
and
push
pop
shl
sub
push
or
add
inc
and
pop
pop
rcr
dec
dec
icebp
sub
add
mov
or
(bad)
mov
adc
movs
stos
into
stos
icebp
push
in
mov
push
inc
adc
inc
xchg
add
adc
lods
lea
mov
fcomp
pushf
inc
pop
cwde
fs
pop
pop
xor
mov
xchg
aas
stos
dec
mov
mov
mov
sar
or
xchg
mov
dec
jae
dec
add
inc
mov
scas
mov
add
jns
jo
sti
push
mov
xchg
and
inc
call
adc
mov
mov
jno
pop
scas
imul
pop
jg
fs
pusha
lahf
add
mov
pop
pop
mov
mov
imul
cmps
or
jg
xchg
jne
inc
sbb
jae
push
stos
xor
xlat
sub
fwait
lock
jbe
repnz
in
mov
cmps
sub
add
test
fimul
iret
push
ror
in
jmp
inc
or
and
or
es
xchg
or
inc
or
cmovne
ins
dec
call
cld
(bad)
or
jo
cmp
stos
ds
or
or
mov
mov
push
ror
clc
add
adc
dec
adc
push
or
nop
and
test
lock
adc
ror
xor
imul
dec
adc
sbb
add
fsub
add
call
imul
pop
dec
and
jo
and
push
shl
pop
and
add
pop
inc
adc
push
cdq
aam
xchg
rol
adc
mov
(bad)
les
adc
iret
loopne
rcl
in
add
push
std
or
les
push
dec
jmp
sub
sbb
jmp
mov
adc
mov
lea
or
jp
pop
test
fild
sar
sar
cmp
mov
stc
stc
pushf
xor
xor
mov
cmc
cwde
cld
and
jge
fdiv
jae
and
sub
pop
cmp
jmp
add
lea
mov
sbb
fcom
push
adc
sbb
or
or
shl
mov
ret
adc
stos
aaa
pop
push
pushf
clc
jmp
adc
add
sub
imul
mov
push
adc
add
and
cmp
jne
ret
add
or
sbb
mov
lea
js
dec
and
xchg
jns
dec
ret
lock
je
jne
pusha
sbb
cmp
add
cmp
inc
add
or
sub
cmp
cmps
push
popa
mov
mov
push
cmc
lock
jl
mov
xchg
adc
test
shr
sub
ins
add
mov
out
std
cmp
cmp
add
bound
ret
and
cmp
push
test
(bad)
(bad)
sub
cmp
sbb
cs
sbb
xor
bound
lea
dec
das
sub
inc
inc
and
cmp
push
ja
test
int
jecxz
fisub
test
movs
cdq
push
cmp
jb
outs
cmp
add
pop
pop
rcr
dec
and
lds
cs
(bad)
push
pop
cmc
dec
sbb
jle
out
add
xor
xchg
js
sbb
fs
add
add
dec
cdq
and
push
ins
daa
mov
dec
sbb
add
sub
dec
add
jno
(bad)
jmp
inc
adc
inc
pop
pop
outs
jb
dec
pop
push
and
push
ror
push
and
and
pop
pop
push
div
and
or
xchg
mov
sub
cmp
and
cdq
dec
sbb
dec
xor
inc
aaa
and
pop
sbb
repnz
mov
dec
mov
retf
imul
inc
jb
cmp
sbb
and
nop
mov
arpl
out
jmp
mov
add
call
adc
push
sbb
pop
and
jmp
retf
add
fdiv
add
jne
jp
add
xchg
rol
sub
fabs
jmp
fisub
lods
inc
test
cld
push
mov
cmp
jne
add
leave
mov
js
add
repz
outs
ins
lea
movs
daa
add
cmps
icebp
das
and
sbb
pop
mov
adc
es
push
into
sub
add
pop
aam
jmp
ja
loopne
add
add
sub
dec
add
xor
jns
sub
pop
sbb
sub
cmp
(bad)
add
and
in
dec
fistp
dec
dec
ror
dec
retf
dec
rol
cmp
xchg
(bad)
sbb
cmp
out
cmps
inc
shl
push
and
jl
mov
enter
out
xor
inc
push
xor
dec
push
jns
push
cmp
call
cs
add
sub
out
and
xor
mov
push
and
push
cs
push
sbb
xor
mov
add
mov
loop
addr16
pop
push
mov
add
movs
push
xchg
push
cmc
pusha
call
pop
outs
daa
mov
in
shr
pop
outs
xchg
movs
pop
add
or
add
mov
std
add
cmc
xor
inc
pop
cs
ror
xchg
dec
pusha
pushf
inc
scas
mov
aaa
ror
jns
xchg
inc
mov
jbe
mov
add
repz
sbb
out
movs
or
or
adc
xor
dec
xchg
and
xor
mov
cmp
jmp
js
pusha
xchg
test
add
in
and
test
mov
jecxz
cmp
xchg
xor
loopne
(bad)
mov
push
inc
xor
adc
movs
cdq
xor
leave
push
xchg
cmp
stos
xor
pop
mov
mov
sub
lods
inc
and
(bad)
and
pop
sbb
in
aaa
jns
inc
(bad)
or
rol
and
push
sar
and
aaa
(bad)
cwde
outs
test
inc
mul
add
aas
and
or
xor
jo
jne
push
jmp
pop
mov
adc
lock
call
sub
xor
and
cmp
inc
popfw
cmp
dec
sbb
cmp
or
add
add
mov
adc
mov
clc
fidivr
pop
adc
or
popf
std
inc
mov
lea
push
mov
add
mov
dec
push
sahf
and
sbb
sahf
in
inc
and
out
inc
jg
and
push
(bad)
test
(bad)
loopne
mov
jnp
adc
push
adc
rol
icebp
or
or
inc
mov
test
scas
ins
inc
ror
test
sub
add
mov
pop
mov
pop
call
inc
cmp
jge
jne
cmp
lea
and
int3
test
or
xchg
inc
sub
int3
jne
xchg
inc
mov
ins
mov
dec
retf
dec
mov
icebp
jle
and
sbb
pop
je
xchg
jmp
dec
xchg
lahf
call
fwait
adc
push
out
inc
or
cmp
retf
test
sar
and
mov
cs
mov
jae
(bad)
cmp
push
(bad)
inc
es
lea
aad
jg
lds
xchg
pushf
mov
dec
cdq
xchg
dec
dec
sahf
call
sbb
push
dec
ror
nop
rcl
add
jns
dec
mov
pusha
cwde
mov
add
dec
add
add
push
push
loopne
add
push
push
pop
xor
mov
push
jae
add
mov
pop
or
cdq
stos
pop
(bad)
jo
pop
daa
stos
xor
xor
push
add
jmp
dec
and
xchg
jge
jmp
inc
sbb
jmp
inc
inc
and
add
jmp
jecxz
and
(bad)
cli
mov
lods
xor
mov
xlat
add
movs
mov
daa
sub
lods
and
cdq
adc
or
call
ret
cmps
xor
movs
les
jae
jmp
rol
sub
dec
xor
mov
cmp
xor
in
xlat
mov
push
fs
je
adc
int3
movs
arpl
arpl
stc
or
add
leave
xor
mov
add
bound
test
dec
cwde
push
xor
jecxz
xor
dec
add
xchg
nop
fwait
cmp
xchg
mov
or
call
mov
mov
jp
mov
pop
(bad)
shl
adc
mov
data16
push
pop
adc
mov
addr16
add
ret
push
pop
inc
xchg
jl
lds
imul
xor
outs
mov
push
jne
push
adc
adc
les
push
test
sbb
shl
add
jl
mov
or
jns
sbb
or
add
add
or
push
loope
sbb
adc
mov
icebp
cmp
test
cdq
movs
adc
dec
or
shl
mov
ja
push
sbb
add
rcr
int3
inc
adc
inc
arpl
mov
xchg
add
pop
adc
je
add
into
pop
push
out
sbb
mov
fistp
or
fisttp
push
imul
test
ja
and
mov
mov
mov
outs
rol
jbe
ja
jbe
adc
sbb
adc
test
cmc
mov
push
dec
add
add
scas
jge
fwait
add
fst
bound
inc
jns
xchg
sub
sub
nop
call
cmp
icebp
pop
jb
fs
or
movs
mov
ds
or
shl
fwait
push
jae
xchg
into
enter
dec
push
mov
leave
cli
sub
lea
sub
pusha
or
sub
jp
cmp
cmp
jle
push
push
loopne
scas
cdq
fistp
in
xor
jae
in
pop
or
test
push
retf
fistp
js
or
sbb
fwait
sub
jg
push
dec
mov
mov
cmp
cmc
bound
icebp
add
in
add
ror
cmc
loopne
sbb
jle
and
fimul
sub
sti
popf
loope
ret
or
mov
and
in
lods
cmp
fbstp
test
popf
inc
cwde
add
push
mov
adc
dec
adc
xchg
jp
jg
dec
mov
fwait
test
and
lds
test
sbb
cmps
dec
outs
push
add
sbb
xchg
push
add
fwait
(bad)
xchg
enter
outs
ins
mov
or
mov
cmp
push
adc
clc
cmp
scas
add
lea
bound
jmp
cwde
push
loope
inc
dec
sbb
xchg
mov
fsubp
int3
(bad)
sbb
ins
xchg
xchg
mov
xor
xor
xor
movs
pop
je
cmp
push
inc
and
lds
nop
inc
scas
scas
inc
jb
xchg
mov
inc
retf
cmp
hlt
lahf
lods
sti
inc
mov
stos
lea
jmp
dec
inc
cmp
je
scas
inc
add
xor
imul
jecxz
sbb
aad
jmp
push
push
rcl
sti
adc
test
cmp
push
mov
mov
iret
addr16
sub
dec
add
test
and
leave
mov
and
and
sbb
xchg
cs
lds
add
fs
xchg
int
les
nop
aad
adc
inc
sbb
cdq
sbb
mov
clc
and
les
mov
dec
ficomp
lds
push
push
fiadd
arpl
stos
xchg
push
adc
fwait
jae
dec
mov
pushf
add
or
mov
cmp
nop
mov
lock
lea
xor
lahf
test
stc
pushf
pusha
(bad)
mov
add
cmp
mov
imul
fisttp
sbb
mov
mov
inc
jno
sub
jo
mov
jg
je
adc
push
push
push
adc
inc
repnz
or
pop
test
sub
or
leave
cmps
jl
test
xchg
push
push
xchg
sahf
sbb
out
mov
rcl
xchg
add
push
inc
mov
lea
sahf
xchg
xor
retf
sar
lods
les
mov
or
push
and
dec
jecxz
adc
pop
xor
ret
and
add
bound
pop
cmc
and
cmps
test
mov
xchg
cmp
xchg
test
add
push
push
cdq
mov
and
lea
cs
and
lods
fisttp
jmp
xor
rcr
mov
scas
inc
cmp
pause
mov
push
push
mov
out
test
mov
pop
and
fs
pop
mov
pop
push
popf
les
lahf
mov
leave
leave
lds
stc
mov
and
test
push
test
mov
aam
dec
mov
in
mov
mov
or
push
or
add
(bad)
and
and
enter
imul
add
retf
push
dec
inc
aad
jmp
mov
(bad)
outs
int3
mov
retf
mov
xchg
int
push
sbb
cmovnp
sti
or
xchg
sbb
in
dec
or
sbb
lock
invd
rol
cwde
inc
add
push
inc
push
jecxz
xor
mov
daa
push
test
dec
inc
lea
test
rol
push
or
sub
ror
adc
dec
ds
add
sti
cdq
push
iret
inc
inc
cmps
xchg
sub
or
pusha
lahf
out
sub
enter
rcr
dec
add
test
std
xor
cmp
aas
push
ror
adc
mov
pop
xchg
pop
rcl
test
mov
dec
sub
mov
sahf
mov
add
fstp
aam
inc
rcl
dec
mov
inc
mov
mov
test
and
sub
jo
dec
loope
mov
mov
shr
fsubr
call
mov
(bad)
jg
lods
cmp
jge
xor
test
add
inc
popf
in
rol
mov
and
xor
add
xor
pushf
mov
push
scas
inc
push
inc
jmp
xor
mov
clc
sbb
add
pop
adc
pushf
inc
jmp
jmp
push
push
add
test
add
jmp
adc
inc
mov
test
pop
jo
or
ins
test
adc
loopne
xchg
mov
sbb
pop
inc
ja
imul
add
pop
push
mov
mov
xchg
jo
dec
lahf
mov
jle
cmp
les
sahf
add
fistp
inc
and
inc
scas
in
dec
sub
jno
xchg
js
pop
leave
add
cmp
cmp
sbb
jno
jb
in
lock
jb
enter
or
pusha
adc
push
mov
pop
sbb
push
mov
cmp
lods
sbb
add
push
and
mov
adc
mov
inc
add
shl
add
bound
in
sti
mov
dec
inc
cmps
sbb
ret
adc
bnd
dec
add
add
mov
lock
stc
fdiv
and
sbb
movs
(bad)
fdivr
adc
mov
sbb
add
in
mov
push
inc
mov
sbb
push
xchg
adc
add
dec
mov
mov
(bad)
mov
lods
adc
aam
loope
call
mov
inc
xchg
jne
(bad)
jle
adc
(bad)
stc
mov
inc
push
xor
and
or
psubusb
push
repnz
jmp
mov
cmp
mov
or
or
movs
dec
fbld
sbb
add
js
shr
jns
mov
mov
cmp
xchg
(bad)
mov
call
inc
test
aad
or
mov
addr16
stc
and
sbb
test
je
mov
push
add
or
stos
push
shl
dec
scas
inc
pop
ret
and
add
add
add
push
mov
add
and
and
jns
cmp
mov
adc
add
xchg
adc
repnz
push
cdq
adc
test
add
adc
in
dec
cwde
cli
add
push
mov
xor
add
sbb
inc
jmp
or
jb
add
or
add
mov
in
mov
cmp
and
adc
loope
sbb
pusha
mov
js
repnz
dec
push
add
mov
in
daa
push
mov
lea
fwait
test
mov
dec
jle
test
pop
or
jno
xor
cmp
inc
push
les
pop
push
loopne
das
ins
fwait
push
test
adc
adc
dec
add
push
mov
pop
pusha
lods
test
or
sub
dec
and
fdiv
mov
inc
out
adc
jno
lods
dec
xor
enter
adc
ret
cwde
mov
sub
cwde
xchg
lods
mov
movs
shl
adc
rcr
xchg
retw
lea
xor
add
es
mov
cmp
stos
push
int
cmp
push
sbb
cmp
add
and
cmp
or
sbb
jl
aam
or
or
sbb
sub
jge
leave
mov
pushf
inc
mov
lahf
call
mov
mov
bound
xor
push
(bad)
lds
mov
mov
sub
fs
in
icebp
call
lods
repnz
shl
lds
sbb
mov
and
adc
dec
inc
mov
xor
and
test
ud2
pop
movs
add
jg
xor
dec
cmp
cmp
mov
(bad)
push
popf
adc
mov
lea
cmp
push
add
xor
nop
mov
outs
and
pushf
adc
or
es
movs
outs
push
cmp
outs
cmp
das
cmp
dec
test
push
mov
add
mov
arpl
lea
xchg
aad
js
cmp
arpl
inc
test
sbb
dec
fidiv
arpl
nop
js
mov
pop
pusha
and
mov
inc
inc
dec
inc
and
and
(bad)
nop
and
enter
fs
and
xchg
cmp
repnz
xchg
dec
dec
pop
and
ror
and
and
inc
les
sbb
and
out
add
and
leave
in
dec
push
push
xchg
push
dec
out
xor
shl
push
aas
push
dec
dec
dec
cmp
and
xchg
nop
add
adc
inc
cmp
xchg
dec
mov
rcr
movs
pop
test
loop
add
jno
sbb
xchg
and
pusha
pop
mov
sbb
pop
ins
data16
jo
dec
pop
shl
or
pop
xor
pop
and
or
ret
jne
aad
xchg
retf
add
jl
xchg
pusha
cmp
call
stos
or
cmp
push
xor
cld
mov
inc
lods
lods
mov
pop
mov
fwait
pop
mov
xchg
xor
das
pop
pop
aas
lea
or
pop
cwde
cmp
dec
mov
push
mov
cld
fld
inc
add
test
ja
sub
icebp
stos
pusha
(bad)
fwait
loopne
lock
add
xor
adc
popa
fimul
popa
inc
xchg
inc
push
aaa
(bad)
int
inc
mov
pop
arpl
jb
sbb
test
test
xchg
add
push
mov
icebp
jo
rcl
lea
pop
mov
pusha
mov
add
aam
dec
arpl
mov
dec
push
adc
leave
adc
push
dec
sahf
push
imul
pop
imul
enter
or
sbb
int
push
mov
or
add
xlat
ins
outs
adc
pop
push
mov
xor
imul
arpl
sub
daa
and
mov
fldenv
inc
loop
pusha
or
add
xchg
(bad)
retf
pop
shl
fwait
arpl
(bad)
sti
inc
mov
cmp
add
lea
ja
jb
xchg
sub
mov
movs
movs
add
xor
sub
in
jecxz
lods
sub
test
push
push
and
pop
jo
add
pop
jmp
shl
or
mov
and
and
pop
lods
mov
sub
scas
adc
dec
push
add
dec
(bad)
ja
lea
mov
das
or
xchg
rcl
ss
daa
stos
aad
jge
and
je
repnz
lods
int3
nop
inc
arpl
push
push
xor
in
inc
scas
js
mov
jnp
mov
cwde
xor
xor
and
in
pop
push
xchg
dec
fs
je
(bad)
enter
sbb
xor
inc
pop
adc
and
sub
ds
and
push
inc
sahf
shl
test
add
xor
test
xchg
xlat
mov
mov
xchg
sbb
and
and
or
adc
mov
(bad)
push
repnz
push
mov
inc
push
inc
xchg
xchg
add
add
add
xchg
xchg
xchg
mov
mov
cwde
cdq
rol
add
push
in
jno
pop
inc
dec
gs
xchg
adc
int3
sti
mov
retf
pop
hlt
sahf
add
jb
adc
push
int3
out
mov
add
mov
jecxz
xchg
inc
add
movs
or
pop
mov
adc
xlat
mov
jns
and
jb
rcr
shl
mov
add
out
xchg
loope
jno
dec
hlt
pop
and
lods
mov
xchg
xor
enter
add
adc
pop
add
pop
pop
inc
mov
inc
ret
nop
inc
daa
movs
dec
dec
push
mov
dec
inc
movs
mov
xchg
adc
inc
mov
push
sub
pop
dec
mov
add
dec
mov
test
(bad)
adc
adc
and
stos
sbb
sub
or
mov
xchg
nop
dec
or
dec
push
inc
ins
or
push
mov
imul
jns
(bad)
push
mov
or
pop
fdiv
and
or
or
adc
jp
mov
push
mov
mov
fild
test
pop
popf
mov
sbb
or
jecxz
ja
push
dec
cwde
xor
adc
cmp
enter
hlt
mov
pop
push
retf
and
sbb
dec
and
movs
pusha
sar
mov
ss
call
xchg
dec
and
test
pop
popf
adc
movs
xchg
mov
lods
push
mov
je
repnz
ret
dec
lock
and
push
adc
aad
nop
mov
push
push
repz
pusha
sbb
adc
mov
mov
dec
not
(bad)
int
push
inc
aam
rcl
stc
sahf
xor
xlat
sub
imul
inc
mov
retf
pop
icebp
push
lods
mov
lock
pushf
mov
sbb
movs
jno
cs
in
fadd
in
out
aas
adc
mov
sub
int
xor
faddp
mov
and
dec
rcl
(bad)
loope
movs
push
pusha
inc
sbb
jge
mov
jo
inc
or
je
scas
add
stos
add
loop
repz
inc
imul
sub
push
or
es
outs
xor
movs
rol
mov
jmp
jno
repz
in
and
stos
inc
pop
shl
popa
inc
sbb
gs
adc
or
ins
pop
mov
inc
jb
fidiv
int
popf
mov
jne
sub
mov
inc
jbe
sar
pop
mov
add
test
mov
add
pop
bnd
jl
ficom
xor
mov
mov
push
sbb
sti
mov
cmp
pop
mov
mov
and
movs
mov
(bad)
and
and
jle
mov
cmp
je
sub
loop
sub
jmp
sub
xor
popf
fisubr
xor
xor
jmp
dec
sbb
call
sbb
lea
jnp
dec
sbb
dec
pop
das
test
inc
sub
add
ins
push
rol
inc
fsubr
or
and
shl
sahf
and
dec
inc
mov
push
push
pop
retf
add
lahf
mov
loopne
or
cmp
add
pop
and
mov
inc
or
or
add
(bad)
fs
xor
(bad)
shl
add
shr
push
lods
sbb
add
mov
test
sbb
test
(bad)
mov
cmp
inc
push
mov
leave
inc
in
sbb
rol
sbb
ror
test
iret
retf
or
push
shr
pop
lahf
jno
sar
cmp
loope
xor
les
movs
test
hlt
fwait
lahf
aas
dec
mov
mov
ins
and
ret
sub
test
or
inc
jnp
mov
add
fs
xchg
lods
leave
xchg
and
adc
or
add
sbb
dec
test
mov
movs
or
pop
enter
dec
and
cmp
xor
and
mov
outs
ja
rcr
outs
push
mov
adc
add
jno
inc
cdq
pusha
adc
sbb
popf
enter
sbb
and
ins
cmp
popa
adc
pop
jo
adc
add
add
sub
into
in
jl
push
cld
dec
add
sbb
cmp
shl
ins
lds
xchg
add
inc
sub
adc
ret
fild
mov
sbb
mov
mov
ror
mov
push
rol
stos
mov
push
xchg
xor
out
mov
fs
jnp
xor
add
mov
xchg
retf
pusha
mov
inc
cmp
sub
jo
add
and
scas
sub
test
sub
mov
mov
fs
pop
pop
aad
push
inc
aas
imul
lds
mov
bound
nop
add
cmp
inc
imul
ret
inc
je
add
pop
push
add
retf
xchg
cwde
add
pop
je
rol
add
popa
dec
les
adc
(bad)
push
mov
mov
mov
ret
int
js
sbb
and
dec
xchg
mov
mov
push
mov
inc
loope
lods
add
cmps
add
dec
mov
aam
mov
add
mov
pop
clc
inc
test
jnp
cmp
sbb
pop
sbb
cmp
jmp
enter
pop
or
push
mov
push
sbb
pop
rol
shr
lock
sbb
pop
loope
dec
mov
sub
cdq
dec
sahf
test
imul
cmp
mov
jo
movs
adc
xlat
fistp
nop
adc
fnstenv
push
inc
add
(bad)
push
fwait
retf
mov
dec
add
inc
sub
and
ins
jle
cmp
sub
mov
push
aas
call
retf
mov
sti
adc
mov
push
jb
lods
loopne
rcl
cli
add
enter
or
inc
sub
test
sub
xchg
nop
fstp
adc
sub
inc
mov
lock
loopne
push
cmp
jl
(bad)
mov
pop
cmp
push
cdq
mov
inc
pop
hlt
out
pusha
xor
js
or
dec
sub
add
adc
inc
mov
(bad)
push
cs
jae
adc
and
adc
das
adc
mov
cmp
lahf
mov
sbb
adc
push
add
cmp
push
xchg
dec
adc
leave
jae
adc
add
and
xchg
mov
push
push
sub
cmp
es
adc
pop
gs
xor
adc
outs
xchg
push
scas
push
push
daa
sub
inc
xor
add
imul
sbb
xchg
pop
push
cmp
add
inc
mov
and
sbb
adc
or
xor
add
xor
test
call
fs
mov
loopne
push
js
or
out
fidiv
add
scas
or
popa
sbb
push
jo
lock
inc
xor
push
pusha
lods
out
sbb
cmp
pop
pop
fist
inc
sub
fwait
push
xchg
aam
fisubr
ret
mov
out
shl
call
mov
push
add
pusha
mul
push
push
and
jae
in
or
inc
mov
xor
ror
xor
sbb
test
or
xor
cmp
ss
cmp
or
stc
retf
mov
add
test
push
sbb
loop
sbb
adc
adc
int3
das
xchg
mov
mov
cmp
fs
dec
sahf
xor
and
push
sbb
add
mov
lods
jecxz
icebp
call
mov
and
adc
and
sbb
daa
push
(bad)
in
daa
sbb
(bad)
xchg
or
dec
and
nop
sub
pop
xchg
mov
sub
and
fsubr
pop
out
iret
mov
pop
into
(bad)
mov
mov
int
leave
dec
sub
pop
inc
xor
rcl
push
cld
jmp
pop
cs
cmp
mov
imul
test
cld
mov
mov
pop
or
mov
push
pop
xchg
pop
mov
or
push
xor
stos
xor
pop
add
jecxz
cld
pop
sbb
push
adc
xor
jg
pop
cmp
rol
adc
sar
xchg
push
outs
cmp
rcl
imul
inc
pop
in
jns
sub
push
in
xor
nop
ss
mov
dec
inc
or
sbb
fcom
and
xor
add
push
sti
add
aaa
add
add
jecxz
retf
pop
lods
lods
mov
mov
lock
sub
cwde
test
jge
inc
rol
jmp
mov
sub
ja
mov
lock
adc
mov
mov
add
mov
and
push
and
or
cmp
jmp
(bad)
out
movs
test
outs
and
cmp
cmc
popa
xchg
sbb
and
in
jecxz
sub
or
or
add
in
ins
mov
mov
push
cmps
aaa
ins
std
mov
movs
fisub
stos
xchg
dec
mov
fwait
cmp
push
shl
rol
movs
mov
xor
mul
test
mov
inc
cmp
clc
sub
je
adc
dec
xchg
shr
test
rol
add
leave
xor
sub
xor
xchg
cmp
and
aam
inc
push
sub
cmp
test
xor
leave
or
sbb
dec
and
or
pop
push
mov
add
pop
or
mov
dec
cmp
pushf
int
and
adc
xchg
and
or
xor
push
test
cdq
mov
mov
sub
movs
or
mov
mov
mov
movs
adc
pushf
pop
jne
push
add
inc
enter
and
not
push
adc
mov
sbb
dec
add
lods
add
add
and
and
add
movs
mov
add
sbb
sbb
es
jo
mov
jnp
rol
fadd
cld
push
fldz
push
fld
push
xchg
pushf
xor
dec
xor
adc
inc
push
fcmovu
jbe
push
push
dec
fstp
push
cmp
or
in
or
pop
in
mov
add
retf
add
es
push
jge
rcl
sub
pop
and
out
daa
stos
fld
dec
push
push
pop
fild
iret
mov
aam
pusha
lock
frstor
scas
mov
icebp
fstp
adc
jne
add
dec
lock
xor
dec
ret
icebp
add
and
fnstcw
stos
cmp
mov
push
les
pop
call
stos
cli
test
pop
cmp
sbb
aaa
js
add
sbb
add
js
aad
nop
add
mov
cmp
jne
lds
inc
sbb
add
fstp
cmc
(bad)
adc
mov
fnsave
add
mov
adc
int3
and
inc
adc
(bad)
fstp
sub
lahf
fisub
pop
cmps
mov
adc
fs
je
push
fld
sbb
pop
fdivr
fld
fcomp
fxch
jbe
fld
or
xchg
mov
push
fisub
fstp
shl
mov
fsubr
adc
mov
int
jmp
fxch
add
loope
(bad)
cmp
pop
jo
jmp
mov
dec
mov
scas
pop
je
mov
dec
cmp
mov
pop
scas
ins
repz
outs
adc
add
sub
repz
test
jge
or
xchg
repz
add
imul
or
repz
dec
out
add
aam
loopne
push
jge
sub
mov
cmp
ret
cmp
pusha
shl
mov
adc
pop
add
push
mov
sub
jg
add
sbb
lds
mov
fmul
mov
xor
inc
imul
jae
pop
xor
jmp
mov
mov
outs
adc
mov
sbb
sub
dec
add
push
mov
jmp
sbb
or
mov
xchg
mov
and
je
(bad)
adc
lds
adc
add
jmp
pop
push
dec
mov
mov
nop
dec
(bad)
dec
or
mov
push
rcr
mov
cmp
jge
mov
in
push
and
and
or
push
mov
test
nop
push
jg
cmp
lock
or
sbb
sbb
add
and
sti
push
stc
ins
arpl
movs
arpl
pop
jmp
dec
movs
dec
(bad)
lods
add
inc
sbb
cmp
pusha
(bad)
xor
retf
pop
pop
mov
imul
dec
add
cli
push
xchg
cmp
fldcw
loope
(bad)
sub
dec
in
sbb
shr
push
adc
sbb
xor
cld
and
inc
aas
jo
mov
lods
xchg
xchg
mov
test
add
sbb
sahf
dec
call
sbb
pusha
inc
push
pop
pop
pusha
adc
movs
mov
pop
je
mov
ror
popf
mov
or
shr
pushf
repnz
mov
retf
or
int
movs
or
in
daa
add
mov
scas
or
into
fild
mov
out
(bad)
lea
pop
lea
js
test
scas
dec
or
bound
out
arpl
mov
or
sub
jne
mov
hlt
push
push
inc
push
enter
lea
push
inc
cdq
sti
retf
xchg
and
push
add
das
daa
(bad)
retf
pop
clc
and
icebp
add
adc
js
inc
xchg
inc
es
shl
add
rcr
lea
push
or
xchg
mov
in
pop
repnz
popf
adc
add
stos
jmp
xor
add
add
loopne
in
rcl
aaa
pop
xor
rol
dec
adc
adc
push
int3
or
into
je
push
sub
daa
or
jne
jge
xlat
inc
mov
push
cli
or
cmp
ret
push
dec
test
mov
leave
inc
adc
pop
aam
nop
out
movs
inc
aam
mov
call
movs
adc
js
cmps
int3
in
sbb
fstp
ret
adc
sub
xchg
je
mov
mov
or
add
enter
adc
movs
lock
push
adc
out
enter
(bad)
lea
fwait
push
dec
push
sbb
or
sar
mov
push
fdiv
mov
imul
daa
cdq
sbb
push
lds
add
ds
ins
mov
inc
enter
add
push
repnz
in
pushf
repnz
mov
out
adc
and
or
sbb
adc
push
(bad)
and
(bad)
mov
cmp
mov
jle
and
or
mov
xchg
movs
jp
inc
adc
lahf
xchg
adc
adc
add
or
dec
lahf
leave
adc
repnz
jo
xchg
xlat
or
loopne
jecxz
lea
push
mov
test
or
or
fist
or
jmp
xor
xchg
(bad)
fmul
mov
sub
cmps
dec
rol
and
pop
enter
or
mov
dec
and
loopne
test
dec
adc
cmps
xchg
sbb
add
jl
gs
(bad)
xor
xor
or
(bad)
xchg
xor
cmps
add
sbb
mov
sbb
xchg
aam
add
movs
xchg
add
icebp
adc
dec
sti
out
adc
ret
add
fsub
std
pusha
sti
xor
adc
ins
or
je
enter
dec
mov
cmp
push
repz
add
fist
push
pop
rcl
aam
mov
inc
lea
xchg
aam
cmps
dec
adc
sub
and
mov
in
movs
pop
ror
push
pop
inc
jl
adc
fs
icebp
je
jp
adc
push
dec
adc
inc
imul
lea
sbb
pushf
and
frstpm(287
adc
cmps
xchg
mov
xchg
rcl
sar
push
mov
adc
adc
pushf
sub
adc
inc
push
or
jg
dec
jbe
cmps
jl
sub
sar
mov
fcom
hlt
add
push
push
lds
inc
sub
push
sub
icebp
sbb
fdiv
rcl
push
js
adc
mov
xchg
fucomp
and
cmp
mov
xor
jge
ret
daa
je
pop
push
bound
push
mov
mov
jge
loop
inc
and
push
mov
xchg
mov
mov
ret
push
inc
jbe
pop
out
and
xor
sbb
nop
and
sbb
push
inc
jns
mov
lock
repnz
dec
pusha
nop
add
js
cwde
cmp
mov
dec
push
push
cmp
sahf
movs
pop
pop
mov
and
jmp
jmp
popa
jno
push
xor
and
loop
inc
fcom
add
shl
sub
nop
and
adc
mov
fs
mov
shl
mov
pop
xor
jb
sub
enter
sar
dec
enter
enter
dec
scas
dec
cs
add
xchg
add
xor
fdiv
xchg
test
push
jb
mov
push
ds
pop
jb
xor
xchg
aaa
cmps
test
jmp
adc
cmp
push
cwde
popf
lea
cmp
jg
mov
push
jns
mov
and
je
and
inc
add
rol
and
sbb
leave
cmp
std
cmp
movs
ds
movs
cdq
sbb
in
mov
jbe
movs
popa
mov
nop
aas
aaa
or
mov
mov
loop
pusha
jns
mov
pop
push
or
daa
xchg
movs
fadd
ret
test
sbb
add
fisub
inc
cdq
mov
sub
daa
adc
cdq
mov
cdq
mov
or
add
fadd
inc
mov
inc
out
fwait
rol
call
fcom
sbb
push
das
nop
jl
pop
nop
fcom
dec
push
inc
mov
jne
loopne
push
cmp
jb
dec
pop
dec
jmp
popf
nop
jno
lock
add
mov
dec
rcr
pushf
push
sbb
in
fwait
xchg
lods
adc
jns
iret
add
cli
inc
(bad)
dec
add
sbb
ins
fmul
and
dec
mov
dec
in
test
xchg
les
inc
xchg
mov
fucom
retf
add
test
dec
enter
lods
repnz
out
fist
xchg
dec
sbb
cld
cbw
dec
cmp
in
push
ret
shl
push
dec
mov
stos
sbb
xchg
dec
dec
shl
xchg
xor
dec
cmp
push
dec
aam
test
fsub
inc
cmovne
dec
inc
mov
xchg
movs
xchg
sbb
clc
pop
push
rcl
loop
rcl
add
sub
push
xchg
test
adc
inc
(bad)
and
das
add
mov
loopne
test
inc
xchg
and
lea
mov
jbe
lods
das
cwde
xchg
pushf
sbb
xchg
push
pushf
or
leave
lods
push
mov
push
dec
mov
mov
mov
es
enter
jmp
xchg
pop
inc
push
dec
or
sub
push
mov
shl
pop
xor
mov
mov
xchg
mov
dec
adc
add
test
nop
test
(bad)
mov
movs
and
adc
in
int
addr16
add
or
push
push
in
shr
adc
mov
push
arpl
mov
jo
mov
push
jmp
leave
leave
cwde
popa
stos
rcr
xor
lods
arpl
cmp
lock
mov
add
jns
aam
push
cmp
sbb
xor
or
mov
movs
aas
push
push
test
mov
xor
lods
sbb
xchg
mov
or
add
mov
inc
inc
test
dec
inc
daa
mov
cwde
mov
jae
mov
sbb
stos
push
pop
ja
or
sti
popf
ficom
and
xchg
push
fisttp
fld
xchg
and
ror
in
sub
xor
xchg
imul
mov
test
cmps
add
add
movs
mov
adc
add
sub
sub
mov
dec
popa
xchg
mov
inc
outs
pop
jnp
mov
inc
(bad)
test
add
sub
or
scas
les
pop
inc
or
xor
cdq
pop
movs
xchg
adc
adc
out
nop
adc
add
cdq
sbb
sbb
out
nop
out
and
or
and
sub
or
out
nop
out
xor
or
out
nop
xor
or
cdq
cmp
cmp
nop
out
pop
inc
pop
cmp
inc
and
leave
call
inc
call
addr16
call
call
inc
call
addr16
call
and
pusha
sar
ror
sbb
sub
ds
xchg
xchg
cmps
adc
add
ficomp
dec
or
jl
gs
pop
outs
adc
and
or
or
push
or
fistp
push
or
and
fs
or
in
fdivr
inc
retf
add
(bad)
mov
xchg
xchg
movs
jb
xchg
xchg
dec
add
or
adc
sbb
and
add
retf
and
push
retf
add
nop
cmp
lahf
shr
push
or
mov
xor
aas
nop
dec
test
pop
je
in
pusha
push
and
retf
scas
add
test
jl
mov
mov
adc
pop
sbb
mov
push
dec
adc
lahf
adc
push
outs
add
dec
sbb
lahf
push
add
daa
sub
push
sti
pop
sti
xor
fmul
mov
adc
jg
ins
mov
xor
cmp
jg
or
mov
jns
stc
and
pop
inc
aaa
add
dec
pop
dec
clc
jae
and
or
imul
sub
fcom
push
adc
ret
jp
ins
pop
sub
fidiv
out
jbe
int
sbb
push
scas
cmp
jbe
mov
ror
add
inc
xor
in
enter
mov
je
lods
pop
es
movs
add
rcl
cmp
push
fstp
push
pusha
push
xchg
xor
sbb
pop
mov
xor
inc
jb
sub
push
sbb
and
iret
adc
add
push
fnstsw
pop
(bad)
push
inc
out
add
sub
or
xor
enter
add
jmp
fsubr
mov
cmp
jg
in
js
cmp
mov
dec
in
or
sar
ins
sbb
lods
(bad)
fcomip
mov
jbe
cmp
jl
hlt
sub
fidiv
clc
dec
or
aas
mov
fmul
rol
cmp
mov
jl
loop
pop
cmps
fmul
dec
fsubr
xor
mov
push
add
xchg
push
movs
daa
and
dec
inc
lods
pusha
mov
push
jmp
mov
pushf
cli
mov
pop
outs
mov
mov
sbb
adc
jmp
mov
call
dec
push
sar
jo
or
add
mov
jmp
inc
add
adc
je
test
jno
call
mov
test
push
adc
sub
push
or
outs
inc
sub
sub
ret
out
mov
sub
(bad)
jmp
shl
or
dec
add
push
jo
ja
leave
arpl
fild
push
push
push
inc
jo
jecxz
jb
mov
mov
xor
(bad)
jl
adc
sbb
lea
push
ss
or
lock
or
adc
test
jno
inc
jecxz
add
push
js
jmp
and
adc
jne
and
cmp
not
mov
add
ja
push
shl
add
and
ret
jg
jns
push
inc
or
push
jge
aam
xor
bound
mov
or
mov
pop
add
adc
(bad)
and
mov
lock
ret
dec
leave
cmp
cmp
mov
mov
ins
pop
hlt
push
xor
mov
add
inc
adc
push
adc
pop
ss
mov
add
fxch
loop
mov
mov
inc
add
dec
add
aaa
je
nop
js
or
(bad)
jno
ret
mov
cmp
jne
sbb
jo
imul
push
in
jmp
jp
je
call
push
adc
ret
push
popa
and
pusha
pop
pop
push
push
and
retf
adc
(bad)
pop
mov
inc
adc
jno
and
push
cld
cmp
add
mov
inc
clc
daa
pop
adc
cmp
std
test
adc
mov
retf
jae
test
sbb
in
and
mov
aaa
jecxz
and
cld
sahf
dec
dec
adc
xor
dec
pop
push
jg
imul
mov
add
ret
cdq
movs
push
push
lods
or
push
test
adc
mov
or
pop
xor
nop
xor
cmp
pop
ins
mov
es
adc
or
sbb
add
or
in
add
pop
movs
fadd
pop
jl
xor
push
inc
add
inc
and
data16
push
cld
je
sub
jne
add
mov
add
push
test
lea
or
jne
cmp
jne
sbb
push
adc
es
ss
jmp
dec
add
adc
and
lods
cmp
je
inc
scas
mov
shl
mov
cmp
push
mov
adc
aas
jg
jnp
sbb
jmp
dec
add
adc
dec
and
out
jne
sub
inc
in
mov
add
jge
in
or
push
inc
cmp
lahf
mov
out
mov
cld
or
add
aam
sbb
push
inc
out
gs
jle
xchg
or
lods
rcr
add
pop
mov
retf
adc
stc
jmp
jle
ret
ds
jg
jae
jne
ja
jge
sti
mov
sbb
cmp
sti
imul
pop
ds
jle
sbb
pop
outs
jb
lahf
or
adc
or
mov
ret
stos
fstp
mov
xor
and
mov
into
and
mov
pop
pop
or
jge
add
pop
jo
mov
mov
call
pop
jae
lods
test
sbb
add
inc
adc
mov
test
in
mov
mov
add
rol
pop
adc
pop
jo
cmp
xchg
lock
out
sbb
sar
imul
loope
pop
adc
mov
sbb
adc
xor
xchg
or
pop
in
(bad)
push
je
bound
fstp
enter
inc
arpl
mov
mov
jl
int3
add
js
adc
or
leave
adc
add
pop
lods
ins
mov
mov
fmul
mov
sub
pop
idiv
cmc
or
jl
pop
dec
dec
push
cmp
cld
out
aas
fcom
and
rcl
inc
or
sub
movs
inc
add
pop
dec
rcl
pop
ret
ret
icebp
add
add
adc
xor
imul
fnstcw
pop
mov
fcmove
inc
push
and
inc
or
or
jle
(bad)
je
jnp
xchg
add
or
inc
pop
push
add
dec
out
inc
add
mov
xchg
sbb
add
cmp
adc
inc
in
fidiv
or
rcl
shr
or
xor
js
dec
(bad)
mov
adc
fcmovnbe
jg
and
aas
cmp
int3
cmps
sti
push
or
enter
shl
(bad)
adc
mov
dec
pop
les
cmp
adc
mov
test
inc
aaa
je
push
mov
sub
fistp
xor
mov
add
(bad)
movs
sub
or
pop
ret
daa
aas
lock
inc
mov
xor
add
mov
into
jp
gs
pop
inc
in
shl
test
inc
movs
and
xchg
add
pusha
outs
or
sub
paddb
enter
sbb
sub
cmp
jae
push
ret
mov
pop
inc
adc
dec
fild
and
mov
in
mov
adc
or
lea
jl
cmp
xor
mov
cmp
sub
add
add
or
jo
repnz
push
push
sub
adc
mov
test
push
fisubr
push
bound
or
dec
mov
cmps
mov
ret
pop
dec
add
frstor
pop
ins
lahf
gs
adc
fisttp
and
adc
mov
pop
push
dec
in
adc
push
xor
stc
jbe
rol
lock
cli
js
mov
ficom
popf
add
shr
dec
cdq
mov
inc
and
mov
add
mov
mov
lds
clc
es
sub
or
adc
mov
int3
jg
or
xor
dec
shl
ins
sub
xor
sbb
add
popw
dec
inc
pop
xchg
jne
xor
add
cwde
sub
cmp
pop
inc
int
fiadd
xchg
(bad)
mov
push
(bad)
add
dec
or
loopne
and
and
xor
push
pusha
jno
cmp
lods
adc
jg
add
sub
pusha
test
sti
inc
mov
test
push
push
mov
pop
movs
jo
sub
jg
daa
mov
rcl
jo
xchg
repz
rcl
cmp
in
test
inc
xchg
aad
aas
cmp
movs
pop
adc
mov
mov
adc
sbb
cs
lods
lock
push
pop
rol
or
pop
loope
adc
imul
or
aad
adc
fwait
inc
cli
popf
xchg
mov
sbb
inc
or
aas
push
loope
pusha
pop
adc
push
push
inc
dec
cmp
push
jae
inc
sub
sub
or
or
sub
movs
int3
loopne
ret
jmp
movs
imul
test
enter
add
mov
pop
or
xchg
and
mov
pop
cs
pop
mov
xchg
scas
push
push
mov
add
sub
mov
jge
inc
mov
ret
mov
outs
mov
add
or
jne
test
lahf
inc
cli
jg
jmp
adc
(bad)
adc
jbe
add
cld
fidivr
push
mov
sbb
push
jnp
mov
push
inc
cmp
xchg
push
pop
adc
mov
mov
mov
std
retf
push
cli
enter
fld
rcl
mov
imul
adc
ins
daa
pop
and
mov
pop
sub
push
fdivrp
in
or
and
test
popf
adc
add
cld
push
inc
adc
shl
sbb
pop
lock
movs
nop
or
outs
mov
add
dec
add
in
push
shl
cmp
pushf
test
mov
or
mov
sub
aaa
movs
js
cmp
cmps
sahf
lods
nop
xchg
or
fadd
test
test
add
cmp
inc
test
jp
push
icebp
lea
loope
mov
lea
push
mov
dec
fs
clc
mov
retf
mov
jg
int3
es
push
mov
pop
cs
(bad)
enter
fiadd
xor
enter
pusha
xchg
test
xchg
pusha
inc
push
mov
popa
add
mov
fnstcw
pop
hlt
or
or
dec
pop
leave
sar
and
rcl
jno
jo
push
jg
jno
dec
aam
std
jb
mov
pushf
mov
or
aam
jle
lea
imul
fisub
imul
jae
jo
push
js
ins
mov
mov
inc
sub
dec
adc
in
test
cmp
hlt
jns
dec
adc
ret
push
aad
vmwrite
mov
add
lods
ret
xor
aad
test
in
imul
mov
xor
adc
(bad)
cli
xor
xor
mov
mov
adc
mov
rcl
in
hlt
jb
and
test
xchg
retf
test
cs
fs
and
fdiv
(bad)
xchg
xchg
mov
add
mov
inc
retf
out
and
and
(bad)
sbb
mov
movs
sbb
lods
push
sbb
movs
ret
mov
cmp
adc
cmp
adc
cmp
jmp
imul
mov
and
lods
sbb
repnz
inc
sub
shrd
push
shrd
xor
pminsw
das
lods
movlps
mov
cmc
add
pop
jecxz
fcomi
add
push
and
or
movs
and
pop
xor
pop
lods
and
jbe
pop
nop
sahf
test
inc
mov
test
sbb
ror
js
jl
enter
fcom
cmp
pop
xor
fisub
lds
or
cdq
xchg
and
and
dec
stos
push
inc
mov
mov
inc
scas
inc
and
loopne
xchg
inc
sbb
mov
cld
pop
mov
shl
mov
mov
push
or
sub
pop
call
test
lea
push
sbb
cdq
cs
js
push
adc
leave
mov
jo
test
enter
add
inc
fcmovb
inc
and
inc
fistp
popf
repnz
je
mov
in
(bad)
lods
loope
sub
pop
mov
shr
inc
shl
xor
cwde
pushf
inc
cs
push
push
leave
inc
test
and
dec
pop
and
mov
and
(bad)
jmp
dec
inc
jno
pop
mov
in
xlat
dec
mov
cld
ret
inc
cmp
jp
je
or
push
lods
std
das
mov
nop
xor
add
mov
cmps
push
cwde
mov
push
pop
enter
out
pop
sub
scas
pushf
daa
cdq
and
push
add
sbb
enter
or
enter
pop
scas
je
jno
sbb
ds
xor
js
push
push
cmp
inc
xchg
push
xor
or
jmp
stos
adc
mov
out
fild
mov
dec
sti
test
add
loopne
jo
xor
(bad)
jl
and
xchg
fisttp
inc
add
mov
loope
add
stos
call
into
jecxz
shr
test
xchg
adc
and
push
mov
jmp
and
adc
into
retf
cmp
mov
(bad)
pusha
mov
cmp
(bad)
mov
and
inc
inc
ja
popf
in
xor
jb
xchg
inc
push
movs
push
xchg
jb
dec
xor
mov
enter
cdq
inc
inc
push
mov
cwde
test
sub
mov
enter
mov
add
push
xchg
mov
sub
pop
iret
lock
fmul
inc
add
int3
add
cmps
adc
lods
pop
sbb
pop
int3
add
aam
in
cmp
pop
or
cmps
sbb
inc
dec
dec
int
mov
add
in
int3
in
add
or
cld
ja
(bad)
(bad)
call
and
or
and
or
xor
or
mov
aad
mov
push
lds
paddb
daa
cmp
mov
sar
push
mov
adc
xchg
or
stos
mov
jg
imul
cmp
adc
orps
adc
jmp
cmp
or
xor
mov
mov
push
push
pop
pop
sub
(bad)
inc
clc
jg
inc
hlt
adc
push
push
ret
push
imul
test
test
fs
xor
inc
test
inc
sbb
xor
rol
push
push
sub
arpl
popa
cmp
adc
int3
push
add
xor
mov
test
lods
add
or
adc
sub
jmp
fld
test
mov
add
jne
dec
or
pusha
push
les
xor
xchg
sub
aaa
pop
xor
push
sbb
test
jmp
or
dec
cmp
add
add
inc
jnp
and
add
rol
ins
add
rcr
test
inc
and
retf
ret
push
mov
in
dec
mov
ss
inc
xor
mov
add
and
sbb
pushf
(bad)
test
push
mov
cmp
dec
pusha
inc
and
lea
and
adc
nop
pop
ret
imul
cwde
mov
sub
test
(bad)
enter
nop
out
mov
(bad)
icebp
push
sbb
in
mov
test
lea
(bad)
in
inc
xor
add
inc
out
push
movs
(bad)
fild
jbe
stos
pop
and
mov
data16
mov
adc
mov
lea
int
add
mov
clc
les
mov
push
mov
mov
or
rol
std
aaa
mov
pop
pop
rol
mov
pushf
ret
push
xchg
or
inc
lahf
fdivr
lock
or
aas
mov
cmp
scas
cli
ja
mov
mov
jmp
mov
inc
jb
sub
sub
cmp
push
fdiv
adc
rcl
adc
(bad)
xchg
(bad)
and
sahf
test
and
popa
sahf
or
pop
gs
out
adc
int3
mov
adc
loope
movs
or
movs
fmul
loopne
sti
cld
push
mov
xchg
or
push
sbb
or
pop
inc
add
int
push
cmovo
sbb
push
or
cs
mov
jle
das
jmp
jb
lds
or
call
fsubrp
pusha
pop
xchg
fs
jns
in
add
mov
xchg
mov
xchg
or
mov
es
arpl
sbb
mov
out
adc
push
imul
push
pop
fsub
mov
sbb
nop
sub
sbb
pop
and
sti
leave
mov
or
loope
jno
mov
adc
ficom
iret
pop
or
cmp
rol
(bad)
imul
adc
aaa
jne
add
lods
cdq
sbb
repnz
pop
mov
push
xor
pushf
inc
xor
add
das
sbb
xchg
sub
sbb
sahf
cmps
imul
cmp
pusha
ins
test
fisttp
inc
scas
push
cwde
cwde
adc
sbb
push
nop
out
cmp
clc
sbb
inc
push
and
or
mov
xchg
mov
test
jns
mov
dec
adc
inc
lock
adc
pop
dec
retf
mov
mov
cmp
sbb
lods
jb
or
cmp
fimul
xor
xor
lock
in
mov
das
idiv
call
mov
stos
cmp
and
loope
aas
nop
or
adc
ds
inc
push
sbb
and
enter
neg
add
and
jns
enter
hlt
in
sbb
fs
adc
and
pop
sbb
and
js
pushf
mov
pop
xor
repnz
retf
ins
sub
xchg
ds
inc
dec
ins
and
push
inc
push
add
cmp
movs
xor
add
movs
movs
je
push
jns
xchg
mov
enter
outs
lock
pop
push
pop
sub
sti
mov
mov
pop
pop
mov
push
xor
aas
enter
add
out
movs
jb
or
lods
inc
push
fs
lods
lods
and
push
dec
mov
inc
into
xor
push
push
push
movs
adc
mov
inc
jb
hlt
dec
adc
dec
stos
mov
dec
repz
ds
test
push
cmps
dec
sbb
int
loopne
and
jne
pop
and
jge
jg
xchg
xlat
push
popf
(bad)
pop
add
push
cmp
xor
xchg
sub
xor
les
out
sub
(bad)
icebp
iret
ds
dec
jb
in
pushf
mov
call
mov
test
push
pop
call
or
adc
dec
push
cmp
fadd
sbb
cdq
dec
and
xor
and
mov
test
add
scas
add
test
call
test
xlat
ss
pop
mov
(bad)
mov
jmp
xor
in
jno
sbb
xchg
sub
sar
add
pop
sub
fmul
gs
aad
xor
es
xchg
xor
int3
fadd
sbb
sbb
ror
push
pop
repz
dec
pop
push
and
cld
(bad)
call
sub
les
mov
push
inc
mov
inc
dec
pop
inc
sbb
jno
push
scas
xlat
add
or
test
add
mov
add
adc
imul
popa
pop
addr16
and
inc
test
cli
add
stc
push
or
fsub
sub
or
inc
jno
in
push
adc
cmp
xor
cwde
sub
ds
push
xchg
add
stos
outs
push
jo
cmp
movs
data16
pusha
xchg
sbb
pop
xor
push
add
add
pop
enter
std
dec
pusha
aam
ror
sub
jns
lods
(bad)
cmp
adc
push
js
jl
jp
xor
shr
movs
or
(bad)
shl
fcmovnbe
nop
arpl
clc
call
cwde
test
push
int
add
enter
mov
mov
inc
adc
or
loopne
(bad)
test
push
inc
adc
inc
les
dec
enter
add
call
xor
mov
xchg
lock
ret
dec
mov
ja
bound
test
and
leave
mov
inc
call
add
and
mov
leave
and
add
hlt
movs
push
pop
fiadd
add
add
push
push
or
jg
cwde
adc
int3
fnsave
mov
mov
dec
pop
out
xor
adc
or
mov
and
dec
int3
inc
or
push
mov
pop
pop
mov
push
les
mov
mov
mov
adc
pop
ja
xor
inc
outs
inc
or
or
mov
jne
daa
loop
push
stc
jns
mov
dec
mov
sub
add
add
movs
rol
add
pop
dec
arpl
repnz
xchg
fs
ret
add
jecxz
(bad)
fdivr
rcr
out
fcomp
neg
(bad)
stc
push
jbe
int
lea
fadd
or
mov
mov
mov
adc
loopne
loopne
sahf
cmova
inc
in
enter
push
mov
xor
(bad)
in
fdiv
cs
cwde
xchg
(bad)
push
not
jnp
imul
mov
iret
addr16
push
xor
fadd
pop
and
adc
adc
enter
adc
cmp
fsubr
fdivr
retf
add
or
add
adc
push
add
or
jno
cmp
ins
sub
cmp
lods
adc
ret
sub
cmps
mov
test
lods
push
mov
inc
sbb
push
leave
add
sar
mov
inc
sub
push
pop
out
enter
sbb
jae
pop
fcom
leave
sub
push
mov
cmp
sbb
push
test
(bad)
cmc
pop
xor
in
fist
jl
aad
aas
add
or
inc
adc
inc
fld
pushf
aaa
bound
cmc
lea
popf
neg
jmp
cmp
xor
aam
adc
cmp
pop
or
push
or
and
ins
cwde
ss
or
dec
and
xchg
sti
cmp
add
mov
scas
and
(bad)
daa
mov
cwde
push
push
call
cwde
and
pop
cmp
xchg
inc
mov
std
rcr
mov
mov
(bad)
cmps
nop
and
xlat
pop
push
add
xchg
mov
pop
hlt
xchg
add
mov
add
cmp
or
loopne
test
inc
scas
movs
in
or
loop
(bad)
loopne
xchg
sub
bound
getsec
jle
xchg
loop
and
mov
jmp
cwde
pop
pop
sbb
iret
mov
pushf
mov
xchg
and
inc
gs
xchg
hlt
sbb
add
pop
dec
aam
push
mov
cmp
xor
out
cld
sahf
jl
jge
pushf
in
loopne
call
test
dec
mov
stc
inc
add
add
pop
adc
adc
cwde
add
movs
push
pop
sar
inc
dec
(bad)
mov
mul
mov
repnz
mov
test
mov
mov
add
mov
ret
icebp
jl
jo
inc
jno
cmps
add
arpl
mov
dec
add
test
mov
std
and
or
xor
dec
pop
mov
paddsw
or
sbb
ret
(bad)
leave
enter
add
xchg
and
sub
rcl
paddw
push
cmp
add
sbb
ret
xchg
push
enter
out
and
out
push
sub
scas
clc
xor
test
push
adc
arpl
adc
pop
pop
push
test
or
mov
xchg
cmp
sbb
xlat
add
fsin
dec
cvttps2pi
add
lods
test
cmp
mov
adc
(bad)
sub
movs
add
fs
mov
pusha
inc
xchg
jo
mov
ret
jp
mov
outs
add
xor
xor
ror
dec
js
pop
pop
add
aam
push
inc
sub
xchg
dec
inc
lea
dec
aaa
and
add
jbe
rcl
and
fcom
loopne
pop
shr
sti
xor
and
jb
push
jne
jb
out
fcom
ret
add
add
fs
add
jp
xchg
push
in
or
aaa
mov
jae
dec
bound
mov
stc
out
outs
mov
shr
jo
jno
jae
or
jbe
js
jns
inc
inc
sahf
inc
inc
cs
fiadd
dec
dec
sahf
pop
sbb
mov
dec
call
int
push
or
push
pop
pop
pop
call
in
jge
pop
pop
inc
sub
inc
push
mov
adc
loop
sub
movsx
cmp
movs
or
cwde
aad
pop
inc
add
cmps
mov
lock
and
std
push
mov
xor
mov
inc
sar
aad
push
or
push
loop
mov
inc
cmp
jb
mov
loopne
mov
xor
(bad)
cmc
sub
push
and
mov
adc
adc
cs
out
cmps
xor
jmp
inc
mov
mov
in
adc
push
test
retf
or
fs
or
sub
sub
icebp
adc
mov
dec
icebp
push
mov
cmc
cwde
ins
sub
pop
dec
dec
xor
push
nop
xor
xor
addr16
popf
lock
inc
mov
mov
dec
push
mov
pop
mov
outs
cmp
xchg
jo
fsubr
fnstenv
lea
xchg
dec
sbb
inc
pop
push
xchg
sub
fcom
xchg
push
mov
adc
and
out
inc
jmp
(bad)
fcomp
and
mov
add
or
ja
sub
push
es
push
test
and
push
lds
push
enter
mov
pop
sub
push
mov
dec
lahf
mov
adc
lods
push
lods
test
jo
lock
adc
push
scas
pop
cs
dec
ss
dec
out
add
sbb
lock
pop
xor
xchg
sar
or
jge
fdiv
mov
dec
sub
rol
rcr
or
sbb
dec
add
cli
pop
push
add
imul
(bad)
xchg
push
movs
inc
adc
jb
cmp
aam
ror
ret
xor
mov
mov
movs
sub
dec
mov
cmp
add
leave
sbb
loope
mov
rcl
arpl
test
rcl
sub
dec
iret
std
les
xchg
inc
push
leave
push
fwait
popa
inc
inc
push
xchg
push
in
or
xchg
std
add
icebp
(bad)
ins
xchg
or
(bad)
int
pop
ja
test
mov
mov
cwde
ret
sbb
sbb
int3
add
sbb
add
adc
inc
push
stos
xor
sbb
and
cmp
mov
push
inc
xor
xlat
mov
test
lahf
xor
xchg
cwde
sbb
mov
or
rcr
jno
call
or
ja
dec
push
add
adc
add
inc
popf
out
push
dec
mov
xchg
and
pushf
add
ins
dec
std
shl
cdq
xor
test
sbb
sbb
test
pop
cmps
popf
rcr
adc
nop
push
or
sbb
cld
mov
cwde
rol
push
sub
and
retf
fwait
push
sbb
pop
bound
inc
xchg
jae
lock
icebp
push
sub
addr16
popf
inc
es
jmp
sbb
add
push
outs
cdq
icebp
rcl
lds
pusha
movs
xchg
inc
lds
mov
cld
cdq
pop
adc
fnstcw
add
sti
adc
rol
push
ins
fistp
adc
adc
xchg
das
hlt
inc
xchg
enter
and
shl
repz
imul
bound
lea
mov
loopne
test
sbb
push
adc
fldcw
les
pop
cmps
sub
jne
cmp
xchg
mov
cwde
push
add
dec
mov
cld
pop
std
inc
imul
pop
cmps
xor
sub
addr16
and
and
cdq
adc
add
adc
or
sub
and
nop
add
and
pop
push
inc
and
adc
ins
(bad)
jnp
retf
faddp
add
adc
and
sub
or
and
fimul
rcl
(bad)
push
dec
push
sbb
(bad)
dec
push
sbb
out
sub
retf
mov
fldenv
jecxz
adc
imul
mov
ret
xor
sub
retf
daa
fbld
cmps
xlat
cmp
inc
push
popa
jb
sbb
jl
pop
mov
or
add
sub
movs
add
add
dec
pushf
mov
movs
xchg
and
call
rcl
add
rcl
sbb
and
dec
pop
and
add
inc
les
retf
das
inc
mov
jl
xchg
jp
mov
push
inc
mov
sub
inc
and
mov
push
sub
inc
mov
mov
jae
(bad)
frstor
sbb
mov
loopne
mov
sub
add
fsubr
lods
mov
mov
addr16
xchg
repnz
int
sbb
call
call
jle
je
jmp
adc
cmp
push
fst
inc
inc
or
pop
cmp
pop
xchg
retf
sti
xchg
push
sti
mov
call
(bad)
jo
aam
fist
ret
inc
push
pop
or
push
cmp
dec
inc
push
test
and
cmp
popf
push
xlat
add
lods
out
or
dec
mov
jne
cdq
ret
imul
enter
cmps
push
inc
or
dec
xchg
call
repz
test
pop
sub
sub
out
jo
pushf
mov
mov
and
stos
or
cwde
xchg
movs
addr16
(bad)
pop
sar
fnstenv
jmp
jmp
or
or
mov
cwde
lods
fstp
sbb
or
jbe
or
jns
lods
aam
or
retf
xor
test
nop
or
mov
stos
das
xor
push
adc
retfw
xor
xchg
test
mov
cld
test
dec
outs
push
xor
cwde
xor
mov
or
das
mov
cs
pop
aad
or
fistp
(bad)
sub
add
(bad)
and
add
pop
push
push
and
inc
push
push
inc
into
cmps
rcl
adc
mov
adc
mov
fld
mov
cmp
inc
int3
push
mov
inc
jo
das
mov
xor
add
popf
sub
dec
push
sub
movs
das
aaa
push
push
inc
sub
adc
cdq
dec
sbb
jmp
leave
ja
inc
pop
add
or
push
jo
dec
or
nop
push
cmp
in
mov
test
mov
xchg
add
and
and
ficom
xor
inc
scas
cld
gs
and
jnp
cld
enter
push
cld
push
mov
and
or
dec
fadd
add
xor
je
add
retf
cmp
cli
hlt
shl
call
mov
sub
popf
cmps
pop
inc
pop
ins
push
fadd
mov
ss
jmp
(bad)
fist
xor
retf
sub
dec
push
lea
sti
adc
lahf
pop
mov
pop
add
ins
add
xor
aaa
test
add
sbb
dec
push
pop
xor
xchg
add
dec
in
push
add
jp
add
nop
sub
std
mov
add
and
jne
inc
mov
push
cdq
cmp
pop
add
shl
xchg
sbb
fucomi
adc
cmp
lea
or
cld
imul
in
or
lahf
pop
cmp
and
stos
ins
pop
add
leave
hlt
retf
aam
popa
cmp
jecxz
loopne
and
in
add
(bad)
ss
xchg
int3
add
adc
sbb
push
xor
cmps
ss
dec
dec
pop
and
fs
je
dec
mov
adc
xchg
mov
mov
(bad)
js
or
dec
mov
add
enter
icebp
mov
add
mov
nop
pop
cmc
push
in
cmp
add
add
aad
rcl
jge
add
loopne
mov
jno
lods
cmp
add
jge
push
push
neg
sahf
icebp
lahf
add
push
ins
cmps
sub
int3
loopne
arpl
and
or
inc
and
test
je
dec
test
jne
dec
dec
xor
add
or
retf
mov
sbb
fdiv
sbb
inc
movs
adc
mov
mov
mov
add
jnp
sbb
mov
ret
lods
repz
sahf
daa
jno
cmps
add
or
push
fs
dec
adc
adc
push
sbb
call
pop
and
retf
clc
xor
lock
jmp
or
dec
in
cs
pop
aad
jo
loopne
sbb
enter
int3
lock
push
xchg
or
or
add
fwait
test
push
jb
cmp
add
and
inc
cmp
es
or
or
loope
sbb
add
xor
leave
call
push
(bad)
rol
aam
jmp
out
mov
and
add
sub
or
mov
dec
xor
ror
push
in
push
push
xor
adc
mov
xlat
into
mov
shr
shl
mov
adc
int3
lahf
cwde
lods
scas
mov
pop
popa
pop
and
inc
sti
mov
sahf
or
pop
and
jne
mov
add
(bad)
imul
cmp
(bad)
inc
lock
xchg
adc
sbb
pop
in
jno
or
call
add
pop
test
fild
sahf
bound
inc
popa
retf
jne
movs
mov
imul
fadd
xlat
fcom
push
or
jno
cwde
sbb
iret
add
xchg
add
nop
dec
mov
frstor
mov
int3
sar
adc
xor
inc
pop
not
ins
push
gs
ret
cmp
sub
sub
dec
adc
dec
and
in
enter
and
pop
inc
add
sub
cmp
jg
xlat
mov
inc
cmp
and
push
push
imul
bound
fmul
and
sub
push
push
lock
push
hlt
enter
and
pop
data16
sbb
jo
push
clc
push
mov
imul
test
ror
mov
add
push
add
and
test
dec
nop
mov
sub
xchg
or
clc
mov
enter
push
lds
jns
xchg
int3
pop
push
ror
leave
add
adc
mov
int3
enter
add
jmp
mov
inc
mov
inc
jbe
les
sbb
jg
ds
push
aam
arpl
mov
sbb
je
adc
lds
pop
jle
and
push
jg
adc
sub
xchg
test
sub
retf
push
mov
movsx
(bad)
cld
jle
add
test
or
add
ins
xor
pop
test
and
popa
and
cld
cwde
adc
adc
inc
fild
fsub
cld
inc
out
lock
jae
push
jg
push
fmul
adc
clc
cmp
sub
lea
xor
fcomp
add
das
(bad)
cmp
jae
inc
cld
sbb
add
pop
inc
ss
lock
pop
inc
mov
cmp
test
shr
fmul
test
push
cmp
gs
hlt
mov
or
xchg
pop
xchg
les
xor
jge
and
fs
es
dec
rol
das
mov
or
das
inc
js
sar
(bad)
pop
sub
xor
or
aaa
mov
or
sbb
lods
push
cmp
ja
mov
fs
test
sub
imul
out
cmp
mov
ins
es
add
pusha
nop
dec
and
ins
or
cli
sar
add
loope
sub
jne
add
sub
xor
pop
dec
clc
mov
pop
inc
shr
add
stc
add
pop
fmul
les
aas
sar
je
adc
clc
mov
je
cmp
ret
movs
mov
jg
sbb
clc
icebp
adc
or
jge
push
out
sub
lea
and
push
out
add
aas
add
ja
or
inc
add
js
retf
repz
push
adc
gs
loope
adc
push
nop
mov
cmp
jne
xor
xor
jo
jae
mov
push
cs
ret
stos
add
sub
jne
or
add
jns
mov
jno
push
push
add
or
or
lods
sar
fiadd
jnp
adc
retf
fld
sbb
inc
sub
mov
inc
adc
inc
mov
xor
push
dec
adc
push
nop
lock
ss
mov
add
xchg
test
sbb
pop
push
ja
mov
jns
das
adc
call
or
cmp
repz
add
add
adc
mov
aaa
bound
inc
push
pop
xor
adc
(bad)
xor
loope
pop
sub
bound
inc
jb
or
xor
and
mov
mov
retf
ret
xchg
push
mov
sbb
dec
mov
add
daa
inc
sbb
dec
dec
sbb
dec
xchg
adc
sahf
loope
push
inc
adc
sbb
sub
adc
and
adc
sbb
mov
sbb
and
inc
xchg
jmp
sbb
xor
mov
or
imul
movs
pop
jbe
sti
jne
pop
(bad)
or
call
xor
loop
imul
add
clc
and
xchg
inc
push
imul
in
sbb
jnp
push
lods
mov
cs
nop
out
and
dec
nop
cwde
jno
sub
push
jno
xchg
cld
fldenv
pop
test
sub
adc
lock
cdq
fcom
sub
es
fldcw
ins
mov
es
inc
lahf
mov
dec
mov
ja
cmp
(bad)
inc
and
mov
lock
ret
xor
cmp
cmps
pop
and
cmp
cdq
mov
not
mov
push
sub
pop
shl
mov
xor
cmc
icebp
ss
rcl
ret
cmc
enter
sahf
push
or
push
adc
xchg
sbb
bound
lock
mov
fist
inc
pushf
push
or
popa
adc
pop
cmp
jne
push
cmps
sub
test
sub
scas
sbb
jg
into
js
lea
sbb
xchg
mov
mov
pop
mov
xchg
or
scas
xchg
xor
aaa
and
or
shr
or
pop
movzx
ror
inc
inc
outs
and
or
lods
lock
or
and
push
lea
fstp
pop
push
push
push
mov
inc
pop
cs
mov
lahf
or
adc
aaa
ja
ja
adc
mov
pushf
fbld
xchg
xor
sub
int3
xchg
rcr
mov
mov
pusha
mov
lahf
xchg
and
push
xchg
pop
or
test
or
sbb
adc
jmp
xor
push
popa
adc
adc
out
test
(bad)
dec
shr
adc
inc
or
inc
mov
je
call
retf
or
mov
clc
fld
test
xchg
sbb
call
and
imul
pop
rcl
push
push
adc
xor
xor
mov
adc
mov
jmp
pop
test
add
push
xor
sub
out
or
sbb
add
and
pop
cwde
leave
sub
fadd
or
(bad)
je
mov
or
xchg
mov
hlt
retf
xor
mov
pop
xchg
mov
sub
int
test
xchg
add
sub
dec
ret
or
jno
inc
sar
and
dec
adc
and
shl
popf
pop
icebp
aas
xor
push
dec
sub
xor
sub
and
inc
popa
pop
dec
loopne
sar
scas
fsubr
adc
cmp
adc
push
mov
xchg
out
ds
pop
mov
cmps
pop
icebp
in
and
xchg
fisubr
frstor
imul
push
xchg
out
push
loopne
inc
jmp
mov
jmp
mov
pushf
mov
imul
lea
mov
jno
mov
adc
mov
push
add
mov
retf
push
imul
mov
or
in
add
jo
push
stos
fcomp
lods
fs
popa
xor
ins
dec
mov
xor
call
mov
ret
stc
mov
or
push
add
addr16
stc
xor
outs
cwde
cmp
push
or
je
cmp
cmp
sbb
(bad)
xlat
test
pushf
inc
and
lea
mov
loopne
push
into
dec
or
mov
enter
jns
dec
inc
inc
or
pop
sub
sub
movs
push
sbb
mov
int3
ins
mov
add
icebp
inc
or
fisub
fsub
mov
je
dec
mov
mov
daa
jp
mov
into
enter
mov
icebp
in
push
je
push
push
ja
fmul
lea
test
cmp
imul
adc
lock
jne
cmp
xchg
push
jecxz
rcr
movs
and
jl
cs
mov
xchg
pop
sbb
in
xchg
outs
xor
and
vmovlps
sbb
xchg
xchg
outs
loopne
xchg
setbe
push
or
ins
add
dec
shl
xor
adc
inc
imul
xor
in
or
or
inc
js
test
std
xor
push
lea
jae
pop
clc
inc
arpl
push
add
jg
mov
sub
mov
cdq
or
or
imul
sbb
mov
imul
or
add
in
sbb
inc
mov
inc
sbb
jle
mov
int
mov
iret
sub
adc
and
and
out
lea
fild
daa
and
dec
adc
pop
inc
sub
xor
lock
out
pop
sbb
xchg
sbb
jmp
out
dec
inc
sbb
lods
sbb
shl
xor
pop
mov
rcr
pop
xor
mov
fmulp
xchg
inc
push
push
rcr
push
test
call
add
lods
popa
jne
adc
xor
cdq
fs
dec
xor
dec
arpl
fs
push
push
or
push
loope
xchg
adc
out
mov
aas
clc
push
dec
lea
xor
fiadd
push
push
(bad)
retf
pop
xor
popa
adc
cmp
mov
inc
push
mov
sub
dec
ret
aam
daa
lods
shl
ret
dec
jl
pushf
lods
add
pushf
jge
jmp
js
push
or
mov
xchg
inc
push
cld
(bad)
cmp
mov
je
mov
inc
cmp
jne
mov
adc
psubq
sub
ins
push
je
cwde
lea
push
pop
mov
push
jnp
push
and
mov
adc
xor
mov
mov
push
popa
cmps
add
in
mov
scas
shl
loope
or
mov
cmp
xor
jmp
cdq
push
and
xchg
add
mov
adc
jbe
xor
dec
movs
push
aas
sub
sbb
leave
leave
push
sub
mov
and
imul
jae
cmc
sub
in
pop
sub
push
sub
inc
dec
stos
xchg
cmp
movs
mov
sub
stos
xchg
scas
add
inc
sub
cmp
cmp
cs
xor
rcr
xor
push
xor
xor
inc
aas
inc
xchg
xor
cdq
jbe
out
push
adc
xchg
dec
and
fs
dec
adc
mov
dec
loope
mov
ret
push
(bad)
and
cdq
das
xor
jns
ss
leave
dec
push
xor
xor
or
xor
dec
and
sbb
xor
cmp
jo
dec
xchg
aaa
xchg
ror
js
jae
lahf
or
cmp
rcr
cmp
test
xor
int
sbb
cmp
cmp
inc
ja
and
aas
or
mov
push
je
ja
das
jno
inc
scas
and
inc
mov
pop
sub
fs
cmp
sbb
inc
dec
rcl
mov
test
add
mov
int
dec
icebp
xor
xchg
jmp
sub
xor
aaa
sahf
test
jmp
jnp
mov
(bad)
and
add
jns
mov
outs
jae
cmp
paddsb
fmul
inc
jmp
cmp
inc
inc
inc
movs
bnd
cmp
inc
dec
lods
dec
and
repz
or
xchg
js
adc
js
les
add
pop
xor
add
jne
jp
mov
jb
shl
sbb
mov
mov
out
fld
and
add
int
cmp
mov
rcl
ror
adc
js
int
mov
pop
push
shl
mov
test
test
call
pop
lock
xor
or
scas
inc
pusha
pusha
inc
sub
les
scas
cld
cmps
into
jo
cdq
movs
push
add
cmp
(bad)
movs
xchg
mov
cmp
cmps
int3
mov
pop
adc
test
xlat
dec
jns
xchg
imul
lods
ja
sub
retf
mov
jge
mov
mov
sub
dec
push
inc
adc
push
xchg
jnp
push
jmp
stos
aam
or
push
ins
stc
xor
dec
push
xchg
fst
jae
jb
jl
pop
nop
sub
xlat
and
call
and
push
sub
inc
cs
add
add
cmps
lea
jae
je
pop
pop
dec
nop
sar
fisubr
popa
shr
cs
pop
imul
cs
or
xchg
data16
cmp
mov
pop
push
int3
(bad)
in
inc
dec
mov
nop
cmp
jecxz
ins
mov
loop
and
sbb
pop
and
add
mov
and
jb
sub
push
cmp
add
sbb
pop
add
mov
pop
adc
repz
inc
leave
mov
loopne
or
loope
repz
pop
cld
mov
mov
mov
js
sar
mov
popa
jge
cmp
xor
popa
sbb
outs
outs
jne
cmp
mov
cwde
or
retf
cmp
jl
(bad)
out
or
mov
jno
jb
sub
(bad)
mov
dec
stos
(bad)
std
pop
xchg
in
test
xchg
or
(bad)
jo
lea
ret
inc
dec
in
xor
dec
add
fistp
push
push
in
enter
das
in
push
mov
loop
xor
fnstenv
pandn
push
xlat
push
mov
into
aas
mov
push
xchg
lods
ins
add
pop
mov
stc
inc
inc
mov
jl
pusha
(bad)
fisttp
inc
(bad)
and
shr
repz
xchg
retf
mov
pop
add
addr16
fstp
shl
cmp
or
pop
mov
les
jmp
or
adc
push
jmp
fld
test
retf
add
push
add
test
retf
inc
push
and
arpl
in
call
cdq
or
pop
push
inc
(bad)
or
dec
adc
nop
jmp
and
xchg
rcl
mov
ret
and
movs
shl
ds
lds
push
and
(bad)
lea
xchg
xor
sub
or
push
xor
rcl
or
inc
repnz
outs
cmp
sti
and
dec
in
sti
or
sti
cmp
mov
or
pop
ja
imul
inc
inc
mov
jmp
xor
mov
inc
cmp
jb
stos
push
mov
pop
test
xor
push
outs
jl
jno
inc
psrlw
sar
adc
push
add
inc
pushf
push
loop
add
es
or
push
jl
sub
sbb
fbld
mov
xchg
dec
sbb
ss
add
std
and
mov
pop
cmp
inc
cmp
mov
or
aad
push
inc
xor
mov
clc
test
leave
jne
mov
mov
jno
pop
adc
fwait
dec
and
fdivr
cmp
adc
add
mov
cmp
js
push
rcl
fbld
pop
pusha
add
pusha
(bad)
adc
ds
dec
ficom
loopne
mov
test
cld
push
mov
rol
frstor
lock
ret
(bad)
push
in
xchg
sti
inc
xor
add
xchg
jnp
test
add
aaa
add
enter
jo
arpl
mov
cmp
daa
pop
adc
and
and
inc
ret
jno
adc
mul
adc
push
jne
mov
movs
xor
xor
sbb
add
js
scas
into
idiv
(bad)
jecxz
nop
js
mov
add
loop
or
aas
or
ret
imul
lock
add
loope
enter
cmp
mov
mov
shl
sahf
add
or
in
jmp
nop
mov
sub
adc
leave
ss
push
mov
aas
sbb
mov
pusha
pop
add
shl
dec
or
in
push
add
es
add
fist
adc
or
mov
fldlg2
ret
neg
es
adc
inc
push
mov
cmps
xor
add
pop
stos
out
mov
jle
jl
jg
mov
outs
mov
cmp
jg
jl
xlat
mov
push
loop
add
cmps
jo
adc
add
and
mov
xor
add
jl
dec
sbb
sbb
adc
xor
ret
push
fwait
js
sbb
aam
test
sub
or
push
add
adc
aam
or
push
adc
jmp
jl
add
arpl
outs
or
mov
iret
or
lahf
push
leave
cld
mov
enter
mov
ret
cmp
adc
loop
or
or
je
test
jl
(bad)
dec
add
fs
aam
pop
or
sbb
mov
push
and
mov
jl
or
dec
es
jmp
pop
and
add
rcr
adc
jg
inc
lock
pusha
or
add
lods
(bad)
cs
pop
or
mov
xchg
clc
call
ja
mov
jle
mov
or
cmp
sbb
mov
jne
test
leave
inc
inc
adc
aam
add
push
mov
or
xor
add
mov
(bad)
frstor
pop
cmp
mov
push
dec
add
dec
shr
xor
mov
and
dec
adc
mov
xor
fwait
scas
add
xor
mov
dec
dec
or
enter
mov
scas
xlat
pop
out
jle
cmp
dec
daa
adc
or
retf
cmp
jno
dec
adc
cmp
movs
bound
lods
fbld
dec
push
add
cld
mov
mov
mov
lea
shl
ret
in
test
push
dec
adc
jne
mov
mov
pop
mov
retf
and
push
cmp
push
push
xor
sub
mov
jl
sbb
jle
inc
adc
sub
adc
sbb
or
test
jecxz
ret
inc
xlat
pop
push
or
lock
dec
pop
(bad)
or
cld
enter
or
and
fwait
popa
pop
ins
dec
jne
xor
fstp
enter
adc
pop
or
sar
retf
push
jg
push
adc
js
test
push
cmp
pop
dec
dec
movs
sbb
les
inc
dec
(bad)
rcl
call
lods
xchg
lock
dec
adc
dec
es
fmul
sbb
mov
fild
adc
pop
rol
(bad)
lea
ret
mov
fst
mov
int3
dec
xor
rcl
mov
xlat
fucomp
or
add
jg
xchg
jle
add
icebp
je
sbb
nop
js
mov
cs
mov
lock
movs
adc
cmp
jne
sub
adc
in
in
jae
push
mul
pop
jl
fcom
loopne
jne
ret
inc
rol
je
pop
sub
or
push
mov
rcr
es
inc
push
adc
cs
inc
mov
or
fbld
clc
(bad)
dec
retf
sub
es
inc
xchg
dec
sbb
(bad)
fbstp
xchg
jbe
dec
lea
xchg
pop
adc
and
loope
jg
pop
mov
push
adc
ret
dec
mov
adc
dec
mov
jp
cmps
je
add
int3
sub
xor
jge
dec
arpl
arpl
lea
ror
jecxz
add
pop
add
or
push
sbb
jmp
cmp
and
adc
inc
test
cwde
les
inc
enter
xor
daa
or
sti
or
mov
add
add
cmp
jae
xor
xchg
or
call
ror
push
push
nop
pop
add
shr
and
inc
inc
mov
mov
dec
add
push
push
sub
retf
jno
add
mov
jae
nop
rcr
inc
mov
fistp
inc
mov
mov
push
pop
ja
pop
xor
lock
ret
xor
jmp
add
sub
mov
pop
push
push
repnz
jae
cmp
out
mov
and
ins
ja
and
ins
sub
push
sar
ret
mov
call
clc
cmp
xor
outs
enter
adc
jne
enter
cmps
mov
aam
int3
lods
enter
stos
rcr
push
scas
les
rcl
xor
jle
out
fnstenv
fisttp
add
jmp
dec
push
jle
or
loopne
xor
imul
cmp
jne
push
and
outs
call
inc
push
push
xor
nop
sbb
push
inc
loopne
sub
stos
sub
fwait
jne
sub
in
sbb
hlt
popf
add
(bad)
pusha
push
dec
push
push
lods
fadd
xor
pop
jne
pop
xor
fnsave
sbb
fwait
jb
aam
push
mov
inc
stos
(bad)
dec
add
jne
xchg
adc
adc
lds
rol
push
inc
jne
ret
mov
out
or
adc
test
test
pusha
ins
in
mov
push
jns
push
mov
inc
cli
xchg
outs
jne
sbb
jo
pusha
inc
arpl
jle
push
adc
fimul
adc
ror
mov
(bad)
rol
add
sbb
sbb
fnstenv
inc
inc
pop
ss
leave
xor
adc
dec
lahf
add
push
pop
bound
call
and
mov
enter
je
mov
shl
imul
push
je
call
mov
push
push
and
cmp
jmp
lds
pop
loopne
add
mov
dec
jmp
in
ret
push
mov
mov
add
mov
or
inc
movs
adc
push
ja
cmp
out
push
fs
pop
cmp
fs
mov
dec
lods
shl
or
test
imul
and
sbb
jns
push
mov
aas
pusha
xchg
and
repnz
mov
sub
fistp
clc
das
sbb
cmp
dec
sbb
jmp
push
push
pop
ror
inc
lahf
add
mov
mov
xor
imul
lods
test
mov
sub
scas
mov
mov
push
stos
xor
ja
dec
mov
adc
xchg
or
add
fwait
lods
mov
or
ret
mov
sub
inc
aas
add
outs
xchg
cli
sub
cmp
ja
mov
out
dec
les
push
cmp
jbe
retf
iret
jae
shl
jmp
mov
stos
(bad)
cmp
sub
mov
fcom
or
jne
popa
ds
or
add
jae
and
sub
sbb
ja
push
(bad)
movsx
sub
shr
lahf
data16
mov
nop
mov
data16
jg
ret
test
pusha
push
lock
es
stc
ret
movs
sub
cmp
jae
(bad)
lds
bound
pusha
cmp
push
cli
call
(bad)
sub
add
push
add
add
push
sbb
push
add
push
pop
jb
push
in
add
data16
or
inc
jnp
cmps
test
cmp
push
xor
add
fiadd
or
push
repnz
jne
stos
push
sbb
mov
aad
jmp
scas
inc
mov
or
lea
mov
adc
pop
dec
imul
call
jb
add
push
or
clc
sbb
fwait
inc
sbb
cmp
je
shl
lods
mov
cmp
shl
inc
frstor
mov
mov
add
mov
push
and
sbb
fbld
sub
fimul
stos
imul
sbb
and
fs
(bad)
mov
sub
mov
mov
inc
imul
dec
scas
ret
push
popa
test
jg
int3
call
jmp
ss
push
adc
sub
sbb
dec
aaa
dec
rcr
or
sub
mov
in
and
xor
or
and
out
sbb
jp
inc
xor
jp
push
pop
push
add
dec
dec
mov
cmp
add
push
stos
jbe
adc
adc
jg
adc
mov
dec
mov
mov
dec
es
mov
mov
loop
mov
in
sbb
adc
hlt
ror
xor
jmp
push
jne
and
shl
push
pop
test
div
shr
and
fild
add
sbb
add
mov
ret
cmps
mov
dec
cmps
dec
dec
stos
ss
adc
or
xor
xor
push
add
add
push
mov
es
xor
les
js
jmp
cmp
inc
mov
cmp
add
push
mov
mov
sub
push
or
pop
dec
xor
adc
cmps
sub
ss
js
add
pop
sbb
jle
pop
inc
jo
sar
add
mov
test
sbb
xlat
add
push
fsub
rol
cmp
pop
rol
pop
arpl
or
retf
adc
cs
aaa
mov
add
fwait
lods
popf
sbb
cmp
loopne
mov
mov
dec
adc
enter
xor
fisubr
sbb
or
xor
lahf
(bad)
mov
cwde
ret
jae
and
add
push
jmp
inc
cmp
add
mov
fsubr
xor
aas
dec
je
in
retf
adc
enter
inc
adc
mov
fimul
push
mov
inc
shr
or
fidiv
mov
pushf
mov
jnp
nop
(bad)
movs
pop
cmps
push
or
and
adc
sub
shr
and
mov
cmp
sbb
add
mov
cmp
je
xor
adc
cmp
dec
and
add
add
pop
sub
cmp
inc
div
mov
add
add
in
xchg
sub
retf
adc
or
stos
sbb
dec
call
xor
cmp
push
imul
xchg
ins
add
loopne
lahf
adc
loope
rcr
add
fwait
aam
repnz
aas
imul
pop
adc
stos
stos
add
push
clc
jg
out
retf
shr
shr
cmp
jbe
bound
lea
cmp
jbe
sbb
cmp
daa
add
pop
ror
and
push
pop
xor
cmc
jmp
aas
out
xchg
adc
push
sub
pop
movs
mov
fdiv
in
mov
and
pushf
sbb
out
xor
out
js
dec
(bad)
in
push
pop
in
mov
and
dec
pop
dec
ja
fcmovb
push
sbb
clc
xor
gs
add
pop
mov
add
neg
lock
xchg
test
into
fimul
test
jne
mov
push
push
inc
add
mov
fild
inc
scas
xchg
jg
lahf
mov
inc
or
cld
clc
mov
loopne
sbb
cmp
mov
bound
xchg
rol
sbb
je
retf
movs
or
push
movs
mov
xchg
cmps
cmp
xchg
xlat
xor
hlt
hlt
push
push
retf
jle
scas
nop
xchg
retf
sti
call
sbb
call
pop
push
sbb
xchg
outs
xchg
sub
aaa
jne
mov
push
cwde
inc
mov
(bad)
sub
or
sbb
js
int
xchg
push
xchg
xor
mov
stos
arpl
jmp
icebp
dec
ret
or
push
stos
dec
fcmovu
jmp
and
mov
sbb
in
sbb
sbb
fdivr
sar
pusha
sub
sbb
jne
mov
mov
sub
ja
icebp
jbe
shr
lods
push
jge
in
mov
(bad)
jg
out
push
xor
daa
fs
daa
in
cmp
fs
fs
xor
stos
repz
adc
xchg
sub
or
js
xchg
(bad)
out
cmp
js
dec
xchg
or
xor
jp
daa
test
imul
das
push
int3
push
pop
adc
sbb
jmp
popf
movs
xor
into
(bad)
popa
jbe
into
icebp
fldcw
add
sub
pop
mov
add
fimul
fstp
int3
xor
add
push
or
ins
ret
xchg
or
xchg
add
xchg
jno
mov
pop
mov
and
pop
xchg
pusha
adc
xor
jg
or
or
xchg
dec
pop
cmp
sbb
adc
test
(bad)
(bad)
xchg
sbb
pop
lahf
push
mov
adc
add
loope
xchg
stos
adc
adc
mov
sub
fwait
cmp
bound
push
push
sub
jne
xor
sbb
(bad)
cmp
push
ins
mov
push
sub
and
mov
pushf
jmp
pop
(bad)
outs
ficomp
sub
sub
jbe
test
pop
ins
rol
mov
sti
clc
sar
sub
sub
out
jge
push
push
cs
cmp
sar
push
jl
dec
loope
and
sub
and
or
sbb
fidivr
inc
mov
add
sbb
ins
subps
rcr
loopne
dec
sub
xchg
sbb
mov
or
adc
into
pop
inc
clc
dec
mov
in
xchg
sub
(bad)
sbb
add
and
inc
cmp
inc
mov
pop
xchg
add
dec
retf
(bad)
data16
cmps
pusha
lock
sbb
mov
rcl
sbb
(bad)
add
fiadd
jle
mov
adc
ficom
adc
add
repnz
icebp
sub
in
sub
and
dec
sub
lods
fld
das
dec
out
push
add
add
fsub
xor
cmp
adc
adc
test
mov
add
lahf
lea
xor
out
outs
add
or
sbb
push
jp
mov
pop
pop
fsubr
and
xor
cmp
or
rcr
dec
inc
push
push
shr
or
add
cmp
in
test
push
and
xchg
sub
sub
cmp
or
adc
nop
dec
or
push
sbb
mov
rol
adc
inc
sub
(bad)
or
or
add
daa
icebp
push
ss
ror
shr
jp
test
fdivr
cmp
dec
mov
push
pop
ins
shl
xchg
lahf
mov
xchg
icebp
imul
(bad)
jmp
mov
cs
add
add
test
ficomp
lea
pmulhuw
les
mov
adc
sbb
pop
and
js
dec
sbb
hlt
pop
sub
add
sbb
jns
push
cmc
adc
or
ror
ins
add
rcr
les
sub
les
ret
popa
popa
and
aaa
lock
xor
lea
enter
dec
or
push
add
pop
cwde
push
or
or
dec
mov
jmp
fdiv
pushf
(bad)
xchg
mov
or
or
aaa
and
adc
sbb
es
mov
in
in
popf
and
popa
lock
in
movs
cmp
in
fcomp
dec
cs
sub
in
add
and
cmp
call
xchg
call
xchg
out
aam
sub
aam
in
cdq
xchg
or
or
mov
dec
cmps
push
pop
jo
arpl
stos
mov
xor
ins
dec
mov
out
(bad)
mov
lods
mov
into
mov
fwait
mov
push
push
sar
ret
inc
push
add
retf
cmps
mov
jmp
mov
inc
and
add
lods
add
std
sub
sbb
nop
lock
inc
push
mov
or
sub
lods
adc
fs
inc
pop
cmp
icebp
test
mov
push
enter
dec
jecxz
adc
inc
push
sar
add
in
test
dec
adc
sar
pop
test
or
lods
mov
cs
mov
test
or
bound
mov
scas
enter
mov
test
pop
add
std
xchg
push
mov
jge
scas
mov
add
mov
or
push
and
retf
nop
xchg
movs
test
jb
in
mov
push
mov
push
scas
jne
aad
or
sbb
xchg
dec
sub
in
retf
pop
ins
mov
add
test
mov
rcl
xchg
retf
in
clc
cld
dec
in
ja
or
adc
and
mov
dec
dec
push
cs
je
dec
sub
in
retf
mov
mov
aam
call
in
cld
xlat
add
adc
and
dec
in
retf
dec
push
push
mov
je
push
cs
mov
mov
(bad)
enter
sub
fsubr
xlat
mov
add
add
adc
xchg
dec
sub
sub
in
retf
push
push
push
mov
js
push
cs
movs
xchg
dec
sub
in
retf
loopne
jb
cmp
fld
or
sbb
movs
sbb
xor
push
cs
gs
mov
add
push
fld
bound
jecxz
mov
adc
jecxz
gs
xor
dec
cmp
add
mov
mov
daa
icebp
xchg
aam
cmps
push
jns
test
add
add
add
sub
mov
(bad)
rol
jb
es
and
pusha
into
(bad)
add
add
into
adc
dec
jg
xchg
push
push
add
jae
mov
cmp
idiv
pop
je
or
lock
mov
popa
jbe
adc
sbb
xor
rol
mov
pusha
jmp
push
and
dec
adc
add
out
and
je
movs
(bad)
mov
lock
add
jo
enter
xchg
inc
sub
sbb
test
je
dec
and
inc
out
and
jbe
xchg
lea
push
sub
cmp
mov
(bad)
push
pop
and
nop
fdivrp
sbb
enter
leave
and
rol
adc
push
mov
dec
xchg
std
jmp
adc
xor
mov
int3
push
or
add
mov
(bad)
mov
mov
clc
rcl
inc
jnp
adc
hlt
add
sub
mov
xor
cmp
mov
test
adc
test
cmp
adc
movs
add
and
ds
jb
and
cld
and
add
fstp
adc
or
dec
mov
in
or
adc
imul
adc
enter
mov
retf
sbb
add
in
pop
pop
jne
(bad)
and
sub
sub
dec
jge
add
add
adc
leave
xor
or
ss
push
push
stos
pop
push
cwde
leave
clc
push
cld
dec
pop
mov
and
sbb
mov
je
add
in
std
outs
lods
dec
pop
push
lods
add
popf
(bad)
push
enter
adc
pop
(bad)
mov
ds
icebp
inc
mov
xor
jl
mov
xchg
fsubr
add
adc
cmp
and
repnz
pmaxsw
rol
ss
sbb
imul
jno
fdiv
add
daa
sbb
pushf
or
data16
movs
mov
sub
inc
mov
or
mov
mov
push
adc
mov
stos
xchg
jge
pop
inc
loop
add
js
pusha
test
add
popf
add
and
sub
jmp
jg
or
xchg
mov
lods
out
mov
inc
add
fadd
test
ret
retf
jl
dec
loopne
pop
js
iret
in
mov
mov
nop
add
dec
sub
dec
test
je
popa
add
enter
or
aam
cmp
fwait
mov
lahf
(bad)
cmp
add
cdq
je
push
movs
fadd
sub
mov
cdq
sar
bndldx
out
add
ins
loopne
lock
mov
aaa
dec
sbb
and
mov
dec
push
adc
xchg
std
add
dec
std
mov
outs
ins
iret
(bad)
cld
mov
pop
mov
inc
inc
dec
or
cwde
or
inc
ss
or
mov
xchg
data16
add
pop
push
sub
mov
test
sub
push
clc
sub
mov
icebp
inc
cwde
sahf
test
loope
(bad)
mov
imul
sbb
xchg
xor
xchg
and
xchg
or
xor
mov
(bad)
sub
js
pushf
push
cmp
mov
sbb
mov
adc
sub
sbb
pop
nop
std
inc
push
aaa
adc
and
xor
aaa
cmc
sbb
sti
aam
fnstsw
sub
cs
leave
shl
push
fdivr
mov
aaa
jns
movs
sub
inc
iret
call
add
loopne
and
pop
fisttp
push
loopne
and
adc
lods
sub
enter
gs
fdivr
int3
sti
add
or
outs
push
cmp
push
add
xor
pop
push
loope
out
enter
pop
jmp
adc
fadd
add
add
je
sub
test
adc
sub
pop
cwde
mov
dec
(bad)
das
add
sub
aas
pop
mov
inc
mov
adc
push
mov
inc
lods
add
pop
push
mov
xor
les
outs
imul
xchg
sbb
push
adc
int3
inc
popa
add
jae
ror
inc
add
stos
mov
add
push
nop
nop
mov
mov
add
enter
xchg
mov
(bad)
push
xchg
popf
pushf
mov
mov
jb
cmp
lock
call
or
outs
xchg
mov
daa
pop
daa
lods
cmc
mov
jne
xchg
ret
xlat
mov
in
cmp
push
lods
inc
mov
push
jne
fbstp
mov
inc
stos
or
sub
sti
sbb
add
popa
popa
enter
mov
add
fadd
retf
enter
mov
adc
pop
xchg
out
mov
push
mov
add
rcl
sbb
mov
add
imul
in
xor
push
aas
mov
mov
lea
test
mov
call
xchg
pop
cs
add
pop
sub
repz
xchg
pop
xchg
sub
fs
aaa
ret
push
movs
cwde
sahf
addr16
lock
aaa
leave
push
test
imul
rcr
lods
retf
cmps
push
dec
cmp
cmp
and
(bad)
mov
scas
xor
cmps
adc
js
lfs
out
mov
test
loopne
aad
jmp
or
js
push
mov
mov
and
ror
inc
sbb
mov
mov
xchg
sbb
retf
adc
adc
inc
push
adc
xchg
stos
xor
mov
adc
and
jmp
xlat
js
iret
mov
mov
xchg
mov
aas
mov
jmp
and
je
lods
cwde
xchg
cmp
add
test
jmp
xor
test
mov
pop
cs
and
xlat
xchg
test
dec
push
inc
jmpw
fsubrp
pop
nop
xor
mov
adc
and
and
je
jae
jmp
nop
dec
call
xchg
(bad)
add
daa
add
mov
inc
and
push
or
mov
add
inc
and
or
pushf
add
add
dec
movs
add
iret
test
mov
and
push
lock
sbb
fdivr
fdivr
mov
sbb
or
push
inc
cmp
es
sub
dec
nop
inc
fld
in
or
push
mov
dec
or
mov
pop
push
call
add
mov
mov
push
mov
push
je
xchg
dec
cdq
jo
es
xchg
inc
stos
ror
push
fdivr
add
aaa
jnp
fcom
or
mov
and
(bad)
add
fs
inc
sahf
sbb
mov
lea
push
or
push
pop
jo
pop
pusha
pop
hlt
jl
mov
pop
mov
push
pop
sbb
mov
push
imul
add
arpl
sbb
enter
gs
mov
inc
mov
das
gs
add
push
gs
adc
push
nop
xor
sbb
push
sar
gs
test
mul
popa
pop
inc
sbb
push
scas
loope
movsx
or
js
fmul
inc
add
lock
push
test
mov
jp
mov
lock
sub
mov
mov
stos
xchg
dec
lock
xor
iret
inc
aaa
sub
adc
(bad)
mov
retf
or
inc
sbb
or
add
push
add
pop
pop
and
dec
inc
test
mov
lds
mov
xchg
test
jo
pop
rcr
cmp
nop
loope
pop
sbb
adc
mov
mov
lock
movs
adc
test
mov
arpl
nop
sbb
aaa
je
loop
jae
mov
dec
push
int
mov
or
test
jb
lea
clc
or
mov
clc
mov
cmp
add
and
jb
push
jae
push
or
shl
fwait
daa
bound
pusha
popf
adc
cmc
fld
push
push
sub
and
(bad)
cld
add
or
mul
sahf
mov
sbb
loopne
cmp
push
ret
mov
and
mov
fild
cmp
jne
rol
sbb
mov
cmps
in
push
mov
inc
sub
(bad)
aas
imul
cld
fsubr
adc
add
hlt
sbb
retf
mov
ins
pusha
(bad)
add
push
adc
dec
sub
pop
aam
cmp
test
movs
and
in
sub
add
movs
inc
aaa
out
jbe
mov
rcl
jno
jmp
shl
push
add
dec
daa
call
lahf
cmp
adc
xchg
stos
inc
(bad)
call
add
pusha
clc
xor
iret
frstor
cld
and
jne
or
inc
dec
loopne
mov
pop
jno
xor
in
aam
test
adc
repz
dec
and
dec
add
(bad)
fild
je
pop
dec
pop
iret
and
xor
add
(bad)
jb
pusha
in
les
enter
cld
hlt
xor
cmps
or
sbb
cmps
inc
xchg
arpl
pop
inc
in
add
add
push
test
dec
mov
push
adc
xlat
xor
ret
adc
arpl
mov
push
or
fild
outs
dec
test
loope
adc
loope
add
or
mov
inc
es
mov
mov
lahf
mov
pop
jo
or
sub
pop
push
and
push
call
add
push
pushf
and
sub
mov
adc
dec
les
std
jl
adc
cmp
test
and
or
add
lock
in
and
and
and
cmps
daa
js
push
sar
xor
call
mov
jg
aaa
pop
les
fst
sbb
pop
pop
add
mov
xor
(bad)
call
call
inc
cmp
jne
adc
xor
ja
jne
mov
dec
push
shl
in
push
jmp
jae
add
mov
add
dec
in
rcr
imul
and
dec
shr
mov
add
xchg
sbb
or
(bad)
inc
sar
ret
mov
cmp
push
mov
shr
mov
cli
pop
jae
test
xchg
sub
add
cmp
nop
rol
jmp
pop
ret
lahf
add
lea
add
(bad)
jmp
lock
test
bound
lods
ss
clc
int3
xchg
add
je
push
inc
push
ret
loopne
ror
dec
popa
mov
(bad)
fldcw
fadd
and
jo
adc
cdq
jae
fstp
cpuid
outs
js
adc
(bad)
lahf
mov
mov
add
mov
ja
push
mov
push
inc
or
mov
add
inc
ja
push
sub
aad
add
call
lock
push
stos
xchg
dec
mov
add
jg
xor
ret
adc
shr
test
and
test
add
push
cmc
mov
add
inc
not
shl
and
fwait
pop
jo
in
adc
xor
test
les
in
jno
mov
iret
ret
mov
jns
pop
test
adc
sub
dec
hlt
(bad)
sub
lahf
ror
cmp
sub
push
mov
shr
xor
aad
adc
lods
call
mov
pushf
mov
(bad)
ja
push
dec
cdq
add
xchg
add
outs
call
sbb
mov
inc
in
lea
ja
and
or
mov
xchg
dec
dec
rcr
adc
add
daa
sub
mov
xchg
into
lods
retf
mov
jmp
sar
and
mov
inc
sub
add
or
popa
push
inc
or
fdivr
push
cmp
jb
sub
or
xor
dec
jnp
dec
mov
cmp
test
ret
fild
pusha
and
push
pop
xchg
out
jge
scas
out
jl
loop
pop
add
xchg
adc
inc
nop
pusha
mov
xchg
inc
add
sub
lods
or
and
frstor
mov
mov
lods
mov
push
pop
mov
inc
test
test
or
cwde
push
sbb
sbb
rol
jbe
dec
and
push
sbb
and
fcom
pop
and
mov
fst
mov
adc
or
movs
sbb
jno
cmp
lds
xchg
adc
push
and
(bad)
add
call
cmp
jle
ret
add
add
dec
sbb
xchg
push
cld
add
or
pop
and
jns
inc
xor
cmp
loopne
ja
jno
mov
jns
and
sub
imul
sub
pop
inc
cmps
add
in
mov
jno
and
fwait
xor
xchg
or
dec
add
and
pop
add
sbb
add
(bad)
or
xlat
sub
jp
add
jno
ret
inc
or
xchg
dec
ret
fbstp
mov
add
mov
push
mov
adc
mov
sub
or
lock
jae
adc
lock
sub
mov
push
pop
add
cmps
in
add
or
and
xlat
aad
or
inc
cs
loopne
ss
and
dec
add
cmp
inc
fcom
shl
or
mov
mov
test
mov
fsubr
shl
ror
mov
pop
fbstp
xor
stos
or
pusha
loopne
shl
adc
or
jnp
or
mov
xchg
pop
jne
aas
loopne
lods
push
(bad)
push
mov
cmps
xchg
push
jo
push
xchg
inc
pop
inc
or
in
dec
mov
adc
push
xor
lea
js
cwde
mov
xor
nop
add
mov
push
mov
mov
adc
mov
xor
sbb
clc
lods
mov
nop
movs
mov
imul
sub
mov
lea
jbe
fisubr
pop
test
out
mov
add
daa
mov
sbb
add
pop
and
cwde
iret
xchg
mov
pop
dec
mov
and
jmp
dec
call
sbb
cmp
mov
and
jge
cli
in
push
mov
mov
or
fdiv
pop
(bad)
out
cwde
test
adc
dec
cmp
loopne
jge
add
ins
inc
sub
je
inc
ds
out
pop
stos
adc
add
mov
push
xor
cmp
add
inc
push
(bad)
cs
sub
aas
cld
pop
or
mov
xchg
inc
or
inc
inc
adc
and
aas
pop
jo
inc
movs
gs
cmp
or
mov
xor
(bad)
jae
jns
nop
sub
add
ret
cld
pop
std
bound
dec
push
adc
stos
add
cld
sub
or
mov
push
sbb
fdivp
inc
cmp
add
jmp
dec
push
sbb
cmp
icebp
in
stos
or
adc
call
sbb
inc
hlt
cwde
adc
imul
movs
add
adc
add
mov
add
cmp
jo
adc
or
aas
fdivp
pop
and
ret
cmp
daa
ins
or
ret
stos
lds
mov
les
(bad)
and
test
inc
cmp
jne
ret
and
adc
inc
xchg
lea
add
rol
sub
out
adc
add
add
jmp
sub
inc
inc
add
xchg
ss
aaa
mov
inc
loopne
pop
adc
push
rol
or
call
out
adc
add
pop
and
push
and
dec
xchg
sahf
pop
out
cmp
out
or
mov
lds
mov
add
jmp
in
jno
inc
es
push
pop
je
adc
add
push
inc
xchg
sub
pop
test
xchg
dec
jmp
dec
adc
ja
lock
jmp
sbb
or
loope
(bad)
jg
jne
fcomip
jmp
bound
sbb
or
out
pop
mov
ja
sub
push
push
cmp
jno
movs
push
and
fiadd
enter
add
enter
pop
and
adc
mov
add
cmp
dec
dec
jl
xor
aaa
push
fnstcw
push
push
mov
(bad)
in
jge
dec
sub
mov
add
cmp
dec
inc
dec
shl
mov
and
(bad)
int3
inc
scas
mov
bound
and
fwait
xor
add
sub
shl
sub
cmp
mov
pusha
test
cmp
or
inc
sub
mov
sub
dec
int3
dec
nop
lods
in
mov
push
adc
push
inc
cmp
sbb
xor
jb
push
repz
fs
push
cmc
add
pop
fs
ret
inc
retf
lea
jb
jb
leave
mov
mov
and
xor
mov
xor
shr
outs
sbb
test
mov
and
mov
test
inc
enter
add
fidivr
jl
and
xor
pusha
cmc
sub
sbb
xor
sub
in
sub
and
cmp
pop
bsr
adc
pushf
sbb
push
shl
(bad)
pop
push
retf
jecxz
inc
xchg
mov
dec
les
mov
sbb
cmp
inc
loop
dec
fs
sbb
in
push
mov
sub
imul
cmps
fwait
imul
sub
push
push
enter
outs
loope
out
add
push
or
daa
or
adc
xchg
inc
or
dec
pushf
pop
ror
inc
loope
outs
adc
or
mov
cdq
bound
adc
call
jl
hlt
test
and
std
sub
js
pop
dec
cmp
dec
xor
cld
sbb
push
dec
xor
jne
jl
lods
mov
xor
adc
ss
push
std
push
adc
and
mov
hlt
and
test
inc
xchg
sbb
ret
pop
cmp
push
dec
pop
xor
fwait
test
scas
push
inc
push
scas
inc
jl
nop
out
xchg
xchg
sbb
cwde
dec
imul
inc
push
inc
shr
test
sbb
aad
and
scas
inc
int
adc
mov
in
movs
loopne
inc
jo
not
mov
int
add
jbe
retf
dec
pop
dec
sbb
push
pop
pop
xor
xor
pop
pop
jbe
or
clc
inc
mov
dec
daa
inc
xor
mov
daa
cmp
jg
mov
or
dec
adc
and
or
or
dec
adc
jb
and
pushf
in
imul
xchg
jnp
dec
xchg
out
add
or
repz
or
or
sbb
or
xchg
sbb
push
xor
dec
ds
dec
xor
loope
push
dec
mov
inc
test
pop
cmp
xor
dec
rcl
ror
inc
and
mov
je
add
inc
and
adc
call
jmp
add
in
or
sub
dec
test
test
dec
jg
xor
les
and
int3
add
les
dec
fsubr
es
or
mov
or
test
push
add
add
aam
aam
and
sub
outs
cmp
mov
pop
mov
inc
pop
lock
cmps
xor
clc
add
pop
sbb
xchg
inc
sbb
mov
and
sahf
adc
addr16
popf
dec
add
xchg
pop
into
into
sahf
mov
ret
inc
pextrw
or
imul
or
stos
das
push
adc
pop
call
mov
xlat
fnstsw
cmc
add
push
adc
nop
jo
sbb
clc
push
jo
out
movs
inc
stc
fs
test
pop
push
call
inc
cwde
cwde
xchg
pop
xor
cwde
ret
xor
jne
leave
(bad)
call
inc
cmp
jb
or
jb
inc
out
pushf
leave
mov
or
sbb
inc
stc
push
xor
ja
outs
sub
push
jnp
inc
retf
add
adc
enter
mov
or
inc
dec
movs
inc
inc
cdq
out
leave
add
add
adc
adc
in
or
addr16
push
movs
cmps
xchg
sub
and
push
sub
pop
add
sbb
add
push
add
stc
push
cmp
popa
inc
jbe
adc
mov
and
retf
aam
enter
dec
cmp
sub
dec
js
in
inc
vpmacsdql
int
or
push
or
cmp
cmc
adc
push
ror
shr
pop
jmp
leave
dec
sbb
js
cdq
inc
and
xor
inc
jb
adc
lock
gs
adc
add
ficom
ficom
aas
pop
inc
and
fstp
cmp
dec
pop
pop
mov
mov
imul
nop
add
or
pop
in
movs
mov
cmp
adc
sbb
and
cmp
pop
stc
pop
mov
pop
mov
mov
sub
arpl
jmp
ds
xchg
push
jo
ret
dec
(bad)
adc
cmp
cmps
loop
and
sub
scas
and
pop
icebp
fisttp
sar
push
push
push
pop
add
adc
sub
and
not
push
daa
shl
sbb
dec
mov
pop
sbb
inc
rol
or
pop
jae
jae
or
inc
popf
mov
loop
sub
mov
add
adc
xchg
ret
test
mov
xor
pop
clc
dec
pop
arpl
inc
sbb
add
cwde
test
pop
inc
ds
loop
fs
retf
pop
rcr
jb
xlat
sub
adc
loop
jmp
jecxz
mov
and
sbb
ror
mov
test
jne
xor
push
xchg
or
test
je
shl
cmp
sbb
and
movs
xchg
dec
or
test
nop
dec
mov
xor
test
mov
cmp
cmps
xor
ss
and
push
jno
push
sbb
ffreep
inc
inc
fadd
les
js
jne
xor
push
inc
stos
adc
das
pop
and
xchg
jp
add
mov
and
pop
add
es
sub
and
lea
repnz
(bad)
dec
inc
push
cmp
add
dec
push
loopne
cmps
inc
es
add
or
jns
int3
sub
retf
push
test
sbb
xchg
push
jns
aam
fcom
frstor
lahf
pop
xchg
inc
leave
push
movs
jg
add
or
sub
out
test
push
sbb
pop
xchg
xchg
popa
dec
push
pop
and
pop
repnz
ret
pop
imul
add
sti
movs
or
xchg
das
cmp
and
jl
xchg
push
(bad)
fisubr
je
dec
call
sbb
int
add
enter
pop
call
call
or
xchg
scas
or
xchg
xchg
push
in
inc
arpl
daa
mov
ret
dec
jg
cmp
bndldx
sub
sar
mov
inc
dec
mov
sbb
push
mov
pop
sbb
push
pop
ret
push
jecxz
cmp
cli
(bad)
(bad)
sub
cmp
ja
mov
lods
sbb
push
jne
iret
jbe
cmp
sub
ret
in
dec
shr
clc
add
or
clc
sar
iret
fdiv
mov
or
push
push
movs
dec
imul
aaa
pop
add
push
push
and
xchg
pop
jnp
pop
shl
or
inc
jmp
fistp
outs
sub
dec
sbb
dec
pushf
sbb
push
dec
add
or
enter
pop
push
add
push
mov
outs
ins
sbb
je
gs
or
jmp
lahf
sub
add
xchg
add
push
and
call
or
fdiv
mov
fiadd
inc
cli
mov
rol
inc
pop
(bad)
std
jge
add
add
push
(bad)
and
or
xchg
cmp
add
and
cmp
inc
xor
jno
push
sbb
pop
jp
in
xor
add
xchg
add
or
lea
movs
push
enter
mov
in
pop
int
inc
xor
or
sar
inc
sub
mov
sub
sub
lock
test
dec
inc
div
ror
mov
xchg
call
ret
outs
jg
(bad)
je
sar
jecxz
jg
fidiv
inc
clc
cmp
jne
cld
push
das
dec
popa
mov
add
xor
inc
xchg
push
ret
(bad)
mov
clc
inc
je
dec
or
adc
add
sbb
xor
pop
or
add
dec
xor
add
(bad)
aaa
cmp
add
push
ret
xchg
push
fld
cli
jge
push
outs
adc
xor
xchg
jge
clc
jge
inc
mov
mov
xchg
or
pusha
or
mov
cmp
jmp
cmp
je
out
fisttp
rcl
mov
jmp
mov
sbb
add
push
imul
bound
pop
push
pop
push
sbb
ss
or
or
pop
adc
jbe
push
mov
mov
push
add
pop
mov
add
outs
bound
mov
xor
mov
add
sub
jo
jne
xor
and
sub
imul
mov
add
mov
inc
add
mov
cmp
dec
shl
jp
js
jne
mov
or
call
push
fidiv
and
or
push
shl
sub
sub
jle
or
or
popf
prefetcht0
jmp
repnz
ds
sahf
out
sbb
pop
aaa
ja
(bad)
push
xchg
in
sbb
lock
xchg
mov
push
cmp
aam
sub
int
or
lods
mov
mov
iret
and
push
rol
mov
pop
fmul
fbstp
movs
and
or
inc
adc
std
or
mov
pop
loopne
or
adc
clc
fbld
leave
clc
ins
out
and
cmp
add
or
sbb
cli
xchg
push
jae
sbb
jle
adc
xchg
pop
jo
inc
adc
test
dec
dec
inc
stos
xor
lahf
in
in
(bad)
sub
clc
je
pop
imul
inc
add
add
push
dec
stc
xor
push
push
xchg
cli
and
and
fmul
or
or
sub
xchg
enter
arpl
and
add
shl
ror
adc
ror
sbb
out
shr
shr
iret
and
and
push
sar
cmps
retf
add
movs
test
dec
push
or
cld
bound
push
ins
addr16
adc
pop
clc
jecxz
and
fbld
jg
cmp
adc
je
movq
pusha
inc
stos
loope
frstor
lea
out
add
cmp
pop
jecxz
jge
mov
fs
inc
pop
jb
xor
dec
pop
ins
sub
sub
movs
jmp
cmp
jg
pop
int3
fst
push
pop
push
inc
rol
mov
xchg
inc
or
push
jne
outs
inc
movs
adc
mov
adc
mov
dec
out
jae
xor
cld
cld
sbb
jmp
xchg
lea
mov
mov
push
jo
add
inc
xchg
lods
movq
cwde
dec
push
inc
pop
add
imul
ja
imul
pop
lods
cli
mov
and
push
jne
in
inc
jae
sti
push
cmp
jae
pushf
(bad)
mov
sub
sub
adc
fisttp
jge
jb
cmp
push
ins
add
adc
sbb
inc
jb
ret
mov
ins
adc
xor
mov
sbb
push
repz
inc
dec
push
cwde
mov
dec
jl
into
push
xchg
jl
hlt
shr
push
push
ins
pop
adc
and
ret
ins
hlt
sub
iret
xchg
ins
hlt
mov
mov
jb
and
mov
mov
je
test
pop
cdq
add
add
lock
in
inc
fdivr
das
push
jns
test
inc
add
jne
ret
mov
sar
jne
call
outs
add
daa
outs
mov
jo
aad
or
sbb
and
enter
cmp
xor
inc
out
cmps
mov
pop
jnp
pop
mov
jp
in
shl
divps
imul
jmp
push
ror
ret
sbb
push
add
loop
inc
cdq
and
add
sub
sbb
mov
dec
out
push
into
cmp
xlat
in
imul
adc
hlt
lea
push
cmp
add
adc
jno
loopne
ror
or
sub
mov
cdq
or
in
nop
imul
lock
push
jmp
in
fs
fimul
sub
(bad)
xchg
mov
push
push
sahf
clc
xchg
int
sub
clc
aas
xor
cld
pop
test
dec
push
push
imul
adc
push
add
out
arpl
or
push
int3
dec
shl
and
jp
sbb
fwait
adc
(bad)
mov
sar
ret
dec
fmul
and
clc
sar
inc
hlt
dec
cmp
je
clc
popf
dec
and
or
push
sub
xor
push
dec
xor
test
add
cmps
add
push
lock
or
cli
(bad)
repz
sub
add
mov
mov
(bad)
mov
sub
xor
pop
dec
and
mov
dec
jne
fild
cwde
ins
cwde
sbb
pushf
mov
xor
and
rcl
push
loope
ror
inc
loop
bound
test
add
add
data16
daa
push
cmp
xchg
ficom
(bad)
mov
cmps
cld
test
lods
fs
jle
pop
mov
mov
out
out
cmc
dec
cmps
nop
sub
loopne
and
push
mov
data16
cli
push
adc
push
rol
or
pop
sbb
pop
inc
push
fs
mov
mov
loopne
adc
inc
lds
es
cmp
data16
mov
inc
or
in
mov
shl
push
es
in
les
mov
jns
and
sbb
movs
mov
adc
fwait
or
push
push
mov
lds
and
and
push
pop
xor
leave
and
jmp
fwait
test
and
add
add
je
mov
cdq
sub
test
ror
adc
mov
mov
mov
mov
loopne
jmp
fcom
into
inc
pop
xchg
aam
fdivr
inc
stos
rcl
call
cmp
loopne
nop
aas
jo
adc
add
adc
pop
sub
test
pop
mov
or
in
jle
fiadd
mov
adc
fcomp
dec
sub
add
push
(bad)
aas
bound
ss
cmp
(bad)
jecxz
xor
add
aaa
cmp
ds
(bad)
push
loope
add
test
add
or
lea
jae
movs
xchg
xor
les
sar
push
xor
add
hlt
push
mov
jne
cmc
clc
xor
movs
adc
or
retf
(bad)
xchg
dec
jp
cmp
inc
add
mov
cmps
imul
test
inc
mov
pop
xchg
or
test
cld
stos
loope
mov
cmp
adc
add
xor
or
sub
ins
inc
jno
pushf
ss
sub
xor
push
mov
loope
sar
pop
jl
push
push
fidivr
jne
loop
shl
sbb
aam
(bad)
cs
in
mov
mov
adc
or
mov
jns
rol
xor
mov
inc
and
test
stos
ret
xchg
jp
movs
adc
loopne
cwde
xor
inc
hlt
push
push
lock
icebp
add
and
dec
or
fs
xchg
rol
inc
cwde
dec
or
stos
sbb
dec
adc
xchg
sub
jno
mov
lea
fs
aaa
pop
pop
lock
popa
and
inc
clc
inc
in
cld
jmp
rcl
adc
mov
dec
clc
inc
cmp
mov
dec
int3
pop
or
neg
or
je
nop
div
pop
push
call
xor
sub
xchg
pop
cmp
int3
jo
pusha
(bad)
and
adc
and
or
cdq
cld
add
and
or
xchg
cmp
or
add
int3
ret
add
push
add
xor
out
mov
fistp
mov
push
test
sar
xchg
shl
push
adc
fild
jbe
add
ss
adc
jmp
xor
xor
or
push
cmps
mov
push
mov
xor
add
nop
iret
xchg
jo
sbb
pop
and
xor
pop
mov
(bad)
pop
ret
jno
retf
and
adc
adc
push
add
mov
out
adc
dec
(bad)
mov
pop
push
(bad)
and
pop
sbb
adc
mov
in
cmp
punpcklbw
(bad)
or
add
jg
mov
hlt
cmps
push
mov
adc
(bad)
or
or
adc
clc
or
push
sbb
dec
in
adc
lea
and
add
rcr
pushf
adc
pusha
adc
adc
add
shr
imul
add
and
or
push
inc
and
inc
inc
xchg
add
add
push
add
aas
add
js
ja
dec
rcr
sbb
add
lea
inc
cmp
mov
lods
inc
push
jle
out
xchg
lods
push
push
push
add
push
push
push
jnp
iret
pop
clc
push
pop
jl
aam
or
lods
mov
jp
push
sub
test
and
hlt
cmps
pop
ins
pop
cmp
and
jge
test
dec
cmp
pop
add
inc
add
clc
or
lahf
imul
les
in
dec
int3
lea
mov
dec
mov
push
dec
sub
push
aad
or
dec
xchg
sub
stos
lea
movs
xchg
push
iret
sub
mov
and
inc
and
or
and
or
and
xchg
adc
or
or
and
pusha
in
xchg
fimul
xor
add
sbb
xchg
fcomp
push
repz
or
inc
aaa
jmp
adc
mov
jb
pop
dec
test
retf
push
retf
add
xchg
fwait
pop
(bad)
dec
pushf
adc
adc
test
adc
jg
add
movs
xor
or
xchg
jg
adc
jmp
pop
loope
xor
sbb
xor
pop
mov
or
daa
pop
mov
jo
lahf
xchg
add
xor
push
push
rol
pop
mov
adc
sub
add
movs
jno
movs
or
iret
mov
sub
xor
enter
sbb
test
out
push
inc
mov
aaa
or
dec
adc
or
add
nop
or
imul
and
adc
repz
fadd
scas
loop
pop
test
mov
add
mov
add
scas
cmp
in
call
cmp
ficom
xchg
mov
fist
dec
adc
push
shl
and
or
test
or
retf
pop
or
inc
daa
or
cmp
jns
ins
xchg
call
or
sbb
js
and
and
in
test
xchg
mov
or
test
xchg
xchg
add
xor
mov
and
mov
cwde
dec
lahf
mov
add
ins
push
sub
sbb
test
and
mov
xchg
sbb
mov
push
fmul
mov
xchg
pmaxub
push
test
or
dec
cld
add
pop
(bad)
fsubr
adc
or
and
imul
std
sub
dec
lea
loopne
cmps
fsub
sbb
xor
in
and
mov
adc
jnp
push
mov
add
push
inc
push
iret
rcl
jno
lods
xchg
adc
push
into
push
cmps
mov
mov
cwde
push
fstp
outs
imul
or
icebp
push
push
stos
push
and
push
adc
and
sub
(bad)
pop
pop
call
sub
xor
sbb
jbe
scas
sbb
pop
inc
ins
xchg
xor
or
popf
sar
sub
mov
pop
lea
cdq
in
sbb
sbb
xchg
xchg
and
sbb
xchg
dec
adc
nop
adc
sbb
mov
pop
or
xor
jmp
enter
sbb
adc
xor
inc
es
or
test
push
and
and
shl
enter
pop
adc
or
xor
psubb
mov
adc
sbb
enter
fiadd
inc
rcr
je
rcr
xor
daa
imul
inc
addr16
cld
jae
add
add
jg
sub
sub
test
inc
ins
repnz
dec
sbb
ror
push
mov
in
push
pop
push
test
dec
shl
shr
or
and
pop
iret
push
dec
xchg
cmp
leave
xor
inc
push
dec
es
psraw
test
loopne
nop
sub
sbb
add
and
cmp
or
fsub
and
and
repnz
shl
and
cmp
jb
cmp
cmp
adc
and
xor
daa
dec
xchg
inc
daa
inc
adc
and
sub
pop
lds
in
in
and
sbb
dec
and
push
repnz
sbb
sbb
repnz
and
and
push
push
mov
adc
sub
lds
repnz
add
xor
dec
fiadd
dec
dec
adc
mov
cmp
nop
inc
pop
cwde
add
fiadd
and
hlt
adc
xor
pop
scas
fadd
scas
inc
pop
daa
retf
cmps
nop
and
inc
mov
(bad)
mov
push
mov
loopne
aaa
add
add
cdq
in
add
les
ret
call
ins
popa
push
icebp
fwait
push
inc
ret
or
les
xchg
ja
pop
adc
cmp
xor
xchg
outs
xchg
int3
or
xchg
lods
rcr
aad
xchg
xchg
(bad)
stos
fcomp
mov
push
mov
xchg
xchg
push
sbb
fisttp
adc
mov
xchg
push
jmp
mov
lods
inc
scas
mov
fcmovnb
in
aam
in
and
push
mov
js
push
sbb
enter
sub
leave
fisttp
pop
inc
adc
pushf
adc
add
push
dec
in
pop
ret
lods
add
dec
pop
lock
iret
add
dec
push
xlat
loope
xchg
or
rol
sbb
mov
inc
xor
add
mov
sub
aam
stos
aaa
inc
cli
enter
push
rcr
ret
(bad)
shr
je
cmp
movaps
push
imul
xor
dec
pop
cmp
jno
je
call
inc
and
rol
nop
dec
arpl
dec
adc
or
and
fsub
loopne
test
daa
dec
mov
inc
mov
mov
mov
dec
lea
pop
ror
or
push
add
inc
xor
or
mov
add
cmp
les
nop
shl
mov
in
es
std
(bad)
lock
jmp
pop
(bad)
stos
xchg
jmp
push
add
jmp
push
dec
fnstsw
lods
mov
add
test
xor
cmp
in
add
shl
ins
or
xchg
sub
cmp
rcr
sbb
inc
mov
dec
fucomp
or
inc
mov
inc
shr
or
mov
cmp
mov
pop
inc
js
sahf
jne
add
loopne
clc
pop
cmp
dec
adc
inc
dec
lahf
dec
add
sub
sub
in
test
xor
and
call
(bad)
fs
xor
daa
ins
sub
addr16
adc
add
fsub
add
jo
mov
pop
inc
push
sub
and
mov
cmp
jg
push
or
popf
nop
and
inc
push
mov
dec
in
add
jno
in
sbb
adc
adc
adc
test
sub
popf
shl
int3
jne
ret
xor
xchg
xor
add
and
or
sub
lea
add
add
cmps
xor
and
(bad)
or
add
js
cmps
pop
mov
or
pop
or
test
rcl
pusha
push
mov
sub
loopne
push
mov
jo
loope
dec
adc
ins
add
fiadd
(bad)
fsub
iret
and
push
or
and
bound
sub
cwde
in
imul
cli
rol
push
retf
cmp
not
xchg
or
inc
xor
add
jne
sub
push
dec
jne
add
movs
stc
test
inc
jne
add
and
jne
push
or
jne
pop
add
sbb
add
ss
fst
or
push
cmp
pop
jmp
lock
mov
test
inc
setno
cmp
inc
les
adc
and
or
retf
loop
jmp
pop
cs
push
(bad)
fcom
loopne
in
or
sbb
pop
sub
mov
cmps
cld
dec
rol
pusha
push
outs
adc
push
push
sti
and
in
arpl
pusha
cmp
adc
sub
pop
popa
inc
test
sbb
daa
push
loopne
add
sbb
cmp
sbb
sub
cwde
les
aam
in
sbb
sbb
mov
xchg
dec
mov
enter
and
sbb
add
sbb
cmp
push
leave
add
sbb
xchg
and
dec
enter
int3
and
push
popa
push
xor
mul
mov
add
and
in
hlt
dec
or
test
ror
clc
lods
and
xchg
data16
mov
mov
push
add
cmps
cs
add
mov
push
movs
push
xor
nop
es
fwait
and
and
adc
adc
movs
test
push
adc
iret
inc
jo
and
dec
pop
cmp
test
inc
in
outs
push
xor
add
add
sub
push
add
add
mov
mov
sub
fs
pop
sub
xchg
sbb
dec
pop
push
sub
jo
xor
sub
dec
test
call
or
in
test
and
in
sub
mov
sub
shl
mov
xchg
or
sbb
mov
xor
xchg
or
sbb
lods
ins
push
xchg
push
adc
daa
add
shl
xor
mov
xor
das
and
in
xor
add
pop
cmp
pop
xor
mov
das
cmp
push
imul
cmp
shl
adc
jl
mov
sahf
or
push
xor
xor
ins
xor
test
xor
test
xor
mov
xor
cdq
xor
mov
data16
clc
jmp
mov
add
cmps
cmp
ins
inc
mov
dec
or
aas
test
xchg
dec
(bad)
lahf
enter
movs
aaa
enter
and
rcl
pop
cmp
cmps
jo
adc
sbb
aaa
cdq
loop
aam
mov
sbb
nop
sub
je
mov
pop
cmp
cmp
(bad)
push
test
inc
pop
xor
sub
add
xor
rol
and
scas
pop
and
jb
pushf
rcr
xchg
or
aam
jl
sub
or
rol
cmps
push
add
sub
shl
xchg
add
sbb
in
push
bound
or
add
int3
or
popf
cmp
dec
or
jne
add
and
in
adc
js
xchg
(bad)
cmp
sti
sub
enter
sbb
rol
xchg
sub
mov
add
loop
in
mul
call
jmp
add
rcr
inc
push
sub
or
add
mov
dec
mov
add
cli
push
adc
adc
imul
(bad)
les
adc
pop
xchg
mov
adc
mov
add
mov
int
push
pop
add
sbb
rcl
pop
sbb
mov
(bad)
and
push
sub
nop
sub
adc
movs
xchg
adc
aam
(bad)
dec
imul
inc
sbb
sbb
test
pop
les
mov
movs
shr
jae
xor
leave
shl
call
sbb
add
push
and
xor
call
push
rol
sbb
cmps
xchg
sub
cmp
enter
lea
imul
std
mov
add
into
shl
cs
stos
sub
xchg
mov
inc
fsub
loopne
add
pusha
nop
cld
xchg
mov
pop
ins
ja
adc
aaa
or
je
sbb
mov
scas
xor
fmul
cmps
and
ror
mov
adc
push
pushf
test
lock
popa
xchg
lock
mov
outs
and
iret
push
dec
mov
xchg
pusha
daa
pop
retf
or
js
cli
popa
cmp
mov
fcom
sbb
mov
ud2
sub
jmp
ss
add
xchg
sbb
int3
sbb
(bad)
enter
add
xor
adc
xor
je
or
sub
inc
stos
stos
fnstsw
addr16
sub
data16
mov
jb
enter
(bad)
xor
push
lea
mov
add
xor
xor
and
les
shr
push
or
or
xor
mov
test
push
xlat
push
and
mov
sub
jg
sub
aam
lea
xchg
mov
ja
in
fstp
push
and
xor
inc
call
and
iret
or
jno
(bad)
mov
lods
pusha
adc
dec
jae
cwde
fs
or
(bad)
dec
or
adc
adc
leave
jae
adc
sbb
repnz
cmp
and
and
daa
iret
leave
jae
sub
xor
pushf
cmp
xor
cmp
cld
aas
sar
push
cmp
push
cmp
inc
cmp
or
or
(bad)
lea
cmp
mov
cmps
adc
pop
jmp
mov
xchg
icebp
dec
adc
fsubr
mov
(bad)
or
add
ins
into
int
scas
mov
call
mov
(bad)
cmp
cmp
adc
jae
add
(bad)
pop
lock
pop
pop
dec
adc
test
(bad)
repz
adc
adc
test
jecxz
or
pop
xchg
push
mov
xor
xchg
cmp
lods
push
popa
sub
or
icebp
sub
adc
or
in
cmps
hlt
and
xlat
test
cld
add
dec
stc
add
sub
cs
retf
mov
in
mov
movzx
mov
mov
lea
mov
nop
sbb
xchg
xchg
retf
dec
in
or
pop
movs
sub
in
je
xchg
add
test
ud2
ret
mov
adc
jl
dec
(bad)
adc
in
dec
add
add
int3
xor
shl
inc
dec
popa
arpl
xor
inc
pop
je
imul
lea
repnz
clc
and
rol
xchg
rcl
daa
mov
cmp
sub
mov
nop
mov
and
adc
add
jne
dec
xor
sbb
ss
sub
push
pop
push
and
sub
inc
imul
and
pop
(bad)
out
add
inc
adc
and
sub
add
fnstsw
jl
pop
out
mov
add
and
or
and
(bad)
mov
inc
pusha
fldz
inc
fstp
ins
inc
push
jno
out
call
aam
bound
cs
dec
arpl
sub
test
cld
(bad)
lods
movs
cmps
call
fxch
adc
mov
jle
fcomp
or
xchg
add
daa
xor
std
add
mov
dec
es
(bad)
pop
jmp
adc
mov
dec
or
fstp
ror
xor
sbb
lahf
lods
xchg
inc
push
add
dec
fadd
popa
enter
add
or
or
mov
cmp
dec
movs
adc
cmps
and
xor
inc
das
inc
fdiv
repnz
ja
mov
sub
add
test
std
nop
mov
sbb
inc
and
push
add
lods
sbb
push
dec
push
add
cmp
rol
or
js
adc
cmp
adc
jl
xchg
loopne
and
sub
mov
adc
ret
mov
out
test
add
inc
bound
mov
movs
add
mov
push
mov
retf
cmp
inc
jmp
ret
inc
mov
or
sbb
jne
mov
cdq
nop
xchg
cmp
cli
js
gs
push
cli
js
lahf
or
cmp
enter
sub
cmp
fmul
cmp
adc
or
fnsave
fadd
retf
dec
adc
in
test
adc
popf
or
call
in
xchg
push
popf
or
and
mov
push
pop
and
inc
leave
add
sbb
xchg
movs
mov
outs
mov
sbb
ins
xor
int3
mov
inc
inc
push
push
and
(bad)
ja
inc
or
int3
aas
mov
int3
xor
and
add
add
sbb
or
pusha
pop
adc
xchg
fsub
sti
outs
adc
mov
das
jae
dec
push
movs
and
adc
shl
mov
jmp
icebp
push
add
and
inc
dec
outs
or
lock
and
mov
ror
out
in
xor
push
dec
adc
inc
mov
cmps
and
add
adc
push
cmp
ja
jp
leave
dec
or
inc
mov
pop
push
out
add
sub
xlat
je
je
hlt
dec
rcr
inc
hlt
adc
adc
push
sbb
test
or
and
jns
leave
sbb
push
or
mov
lea
xchg
lahf
out
push
pop
pop
xor
lock
pop
pop
jmp
xor
xchg
sbb
imul
push
out
stc
call
cmp
add
das
sbb
fdiv
sbb
push
fistp
pushf
fidivr
push
push
jmp
cld
adc
jnp
pop
retf
push
dec
mov
ror
mov
cmp
in
mov
pop
es
mov
ret
jg
clc
cwde
jl
stos
pop
cli
xor
retf
add
loop
or
xor
xchg
pop
sub
sbb
sbb
pop
enter
sbb
sbb
sbb
stos
data16
pop
ret
jb
mov
jmp
sub
push
and
mov
xor
add
pop
adc
and
and
add
pop
jb
scas
out
sub
adc
and
add
stos
mov
nop
push
xchg
pop
and
inc
scas
es
inc
test
cdq
es
xor
enter
sub
push
push
xchg
stc
lea
nop
jno
outs
ins
clc
xchg
gs
fadd
mov
(bad)
sbb
ret
push
mov
add
xor
sub
cdq
in
out
sub
inc
mov
cs
sub
sbb
mov
dec
je
adc
push
xor
adc
push
push
push
mov
(bad)
cs
pop
leave
and
xor
xor
sub
das
and
or
and
jmp
or
mov
or
xor
fsubrp
pusha
mov
mov
xor
cmp
stos
ror
adc
shl
icebp
fnsave
leave
cmp
loope
in
mov
mov
xor
(bad)
or
add
push
adc
(bad)
sbb
js
push
es
ss
sub
pop
cmps
dec
mov
jbe
add
and
lods
xor
inc
repnz
in
sbb
jo
sbb
pop
push
and
test
cmp
push
repnz
rcr
lods
mov
pop
jb
add
add
and
lds
cmp
int3
inc
rcl
inc
adc
adc
cwde
jb
push
add
or
aad
adc
stos
pop
inc
repnz
sub
dec
sub
les
retf
cmp
test
mov
sbb
rol
add
retf
push
test
cmp
adc
add
ret
or
out
xchg
call
(bad)
or
dec
dec
dec
xor
xor
xor
pop
dec
mov
pop
adc
sbb
cmp
push
add
cmc
adc
push
and
jmp
push
jnp
cmp
xchg
sbb
cdq
inc
sbb
mov
and
lods
popa
scas
and
mov
pop
push
movs
jns
rcr
and
dec
scas
sbb
inc
loop
adc
push
or
mov
sbb
push
add
addr16
mov
cdq
nop
xchg
mov
sub
sbb
adc
push
jno
pop
dec
add
lds
inc
add
inc
fs
adc
inc
jb
je
mov
add
jge
(bad)
and
call
cmp
push
bound
or
outs
or
dec
mov
int
jl
clc
push
pop
mov
push
imul
pop
or
adc
dec
sbb
mov
add
cmp
inc
and
es
mov
sbb
and
(bad)
dec
je
out
sbb
jge
push
or
adc
adc
push
lea
adc
pop
popf
(bad)
sub
add
sbb
push
repz
add
mov
mov
and
or
pop
push
add
add
sbb
je
or
mov
movs
in
test
(bad)
pop
lea
(bad)
push
mov
xor
jns
pusha
mov
and
add
add
mov
faddp
or
sub
add
lea
or
cmp
mov
push
xor
cmp
xchg
nop
add
adc
(bad)
in
mov
cmp
add
xor
mov
sbb
pop
and
or
inc
push
push
mov
adc
dec
cmp
imul
mov
mov
xchg
push
xchg
mov
rcr
adc
aas
push
ins
out
fcomp
inc
pop
movs
jb
inc
loope
xchg
xchg
pop
sub
mov
xchg
xchg
xchg
mov
out
inc
jo
leave
adc
sub
sub
shl
icebp
push
mov
push
add
adc
sahf
xchg
or
repnz
rcr
adc
add
push
cld
or
jns
in
xchg
add
add
jns
adc
add
sbb
fistp
xor
mov
adc
sbb
mov
sar
xor
in
daa
test
push
mov
iret
in
pop
xchg
jae
and
mov
dec
inc
add
cmps
sbb
xchg
add
dec
and
add
pop
mov
je
pop
mov
pop
mov
push
sbb
test
pop
mov
pop
adc
or
ret
mov
nop
xchg
push
or
call
cmp
je
xor
mov
iret
sub
dec
mov
mov
adc
pusha
sahf
inc
cmp
jne
jae
sti
xchg
ret
sub
retf
xor
add
add
jmp
add
mov
adc
add
inc
outs
scas
push
mov
adc
jo
out
aam
mov
leave
add
mov
add
push
or
sbb
xchg
ret
pusha
pop
push
lock
adc
jne
fstp
sub
(bad)
pop
jb
inc
push
cmps
jbe
mov
adc
into
jmp
daa
add
adc
movs
cmp
mov
jp
mov
inc
test
sbb
dec
sbb
mov
adc
lods
push
rol
lea
es
mov
and
test
mov
rcr
fbld
push
lock
sub
xor
xchg
mov
fldenv
inc
add
fwait
loope
popa
push
add
push
add
das
add
outs
or
inc
lea
push
or
adc
dec
or
arpl
cld
pop
adc
mov
loope
fmul
mov
mov
dec
shr
movs
jne
adc
imul
adc
mov
dec
jmp
adc
push
ss
add
in
xchg
add
adc
mov
enter
adc
xchg
push
jmp
jmp
or
push
cli
mov
dec
push
inc
stos
and
es
clc
xor
adc
mov
sbb
hlt
dec
lahf
(bad)
in
sub
add
cwde
rcr
xchg
es
push
jnp
jno
push
sbb
fbld
in
ins
lahf
sbb
xchg
pop
xchg
push
xor
or
mov
jne
popf
in
loopne
push
nop
pop
movs
fsubr
add
add
stos
adc
cmp
test
scas
jmp
call
scas
or
mov
rol
sbb
or
add
and
pop
mov
add
or
loopne
loope
into
fbstp
add
cmp
add
dec
cmp
push
in
mov
mov
rcl
imul
adc
pop
xor
jle
test
call
fsub
lock
fwait
nop
xor
mov
jg
jmp
jge
add
rcl
push
mov
lea
call
add
jecxz
cmp
and
mov
push
pop
pop
mov
pushf
fbstp
push
mov
in
jmp
inc
clc
and
or
mov
lods
jbe
shl
shl
jmp
inc
mov
loopne
ss
push
xor
add
inc
push
in
mov
int
aad
xor
xchg
inc
add
inc
xchg
push
lds
jge
mov
xchg
add
iret
dec
sbb
fist
push
push
jmp
cmc
or
inc
push
add
loopne
sub
and
pop
add
push
sbb
fmul
add
(bad)
inc
add
add
sub
and
xchg
lahf
cmp
mov
mov
inc
lods
loopne
or
imul
loope
and
jmp
mov
loopne
cmp
fcomp
cmp
unpcklps
std
mov
rol
xchg
sbb
ficom
and
aam
fmul
mov
(bad)
shl
add
shl
movs
ror
push
mov
cs
ins
dec
cmp
lods
pextrw
or
enter
and
nop
push
sub
test
mov
add
std
out
arpl
inc
and
sbb
in
rcl
xchg
and
add
loopne
nop
sub
mov
jg
inc
dec
leave
mov
and
stos
aad
nop
inc
jnp
xchg
xor
xchg
sub
jl
mov
push
add
pusha
xor
es
fdivr
inc
test
icebp
lods
in
arpl
sub
je
mov
push
movs
out
dec
out
or
sub
push
or
mov
xchg
or
sub
jge
pop
adc
jne
push
inc
test
and
imul
or
push
nop
dec
push
rol
ror
or
cmp
adc
lods
dec
call
xor
jae
and
jns
adc
or
nop
mov
push
mov
inc
xchg
jno
in
dec
scas
in
push
je
dec
or
xor
xor
hlt
or
enter
adc
adc
or
adc
dec
pop
and
inc
scas
adc
xchg
push
dec
xor
dec
test
aas
or
mov
push
xchg
scas
jns
sbb
inc
sbb
pop
push
add
jno
bndldx
and
xchg
pop
bound
push
or
push
adc
and
lea
push
and
dec
sub
aaa
or
sbb
mov
sub
pop
inc
adc
call
lea
push
dec
call
xchg
test
sbb
mov
mov
gs
xor
icebp
pop
xchg
adc
mov
mov
je
mov
inc
or
or
xor
add
add
xchg
aaa
sub
and
(bad)
sub
and
xor
sbb
and
and
adc
ret
and
push
sub
pop
pop
shl
add
xor
pop
pop
push
pop
imul
add
and
mov
or
pop
jo
mov
cmp
jl
xchg
in
sub
pop
sub
pop
mov
sbb
add
fwait
sub
adc
fcmovb
jnp
xor
pop
push
test
pop
in
test
adc
stos
sub
add
ret
sbb
dec
les
push
xchg
mov
and
pop
xchg
sbb
push
loope
mov
inc
mov
hlt
or
or
rol
sbb
or
in
or
and
or
add
test
push
xchg
shl
mov
sub
pop
adc
add
lock
dec
pop
shr
jae
test
adc
nop
or
push
mov
int
cmp
adc
jecxz
pop
inc
mov
add
and
add
mov
and
fcmovb
add
and
sbb
jg
and
sbb
arpl
and
ret
inc
add
outs
sahf
add
or
or
cmp
jmp
sti
add
add
nop
jmp
imul
nop
data16
or
adc
or
sub
rol
and
enter
push
jb
inc
sub
sbb
xor
js
enter
push
push
dec
cmp
mov
dec
sbb
xor
adc
mov
adc
adc
inc
adc
push
xor
mov
leave
push
xor
adc
push
xor
lods
adc
inc
cs
adc
xlat
and
sbb
mov
cmp
push
loope
dec
aaa
push
add
mov
pop
adc
mov
inc
mov
sbb
ror
mov
jg
jno
xor
or
jg
int
adc
iret
nop
pop
in
call
enter
lock
enter
lock
xor
shr
push
movs
add
jb
adc
inc
enter
jne
fcom
adc
push
jb
fmul
nop
or
loopne
dec
(bad)
inc
in
nop
(bad)
ins
and
enter
xor
adc
wrmsr
sbb
adc
add
or
xor
sbb
cmp
pop
adc
(bad)
sbb
pusha
xor
pop
lea
dec
push
xchg
lock
in
cdq
sub
shl
and
adc
in
jno
aas
jae
adc
xchg
dec
and
adc
dec
dec
and
mov
dec
and
adc
dec
and
xchg
gs
pop
sbb
outs
enter
sti
mov
jns
push
push
mov
fild
ror
and
int3
jge
(bad)
push
mov
arpl
fs
(bad)
enter
es
enter
inc
popa
or
inc
enter
push
sbb
daa
inc
enter
pop
mov
(bad)
(bad)
fmul
push
in
fdiv
ins
dec
stos
jne
popa
aam
(bad)
and
stc
lods
add
xchg
and
aam
fs
ds
mov
push
inc
add
add
and
or
or
pushf
or
or
cmp
or
nop
icebp
xchg
add
aas
ret
lock
aad
xor
mov
push
jge
stc
popa
mov
sub
inc
sar
inc
sbb
dec
enter
push
pop
add
fdivr
dec
jge
leave
pop
sbb
mov
cwde
xchg
fmulp
repz
push
adc
cmp
pusha
outs
sub
ret
lods
push
shl
jg
sbb
xor
push
rcr
and
inc
push
int3
test
push
enter
and
sbb
xor
xchg
fadd
add
mov
inc
cmps
imul
push
lea
sub
mov
or
and
inc
out
adc
or
sar
(bad)
test
xor
mov
mov
add
dec
pop
ja
pop
xor
shl
add
xor
jp
sub
icebp
push
pusha
pop
es
mov
jno
dec
pop
pushf
push
mov
jb
leave
add
test
adc
jnp
dec
jp
mov
int3
mov
mov
jo
pop
add
popa
or
pop
dec
lods
retf
adc
ins
and
push
sbb
adc
or
and
mov
add
xor
push
ins
or
dec
and
mov
jae
imul
enter
push
jns
dec
and
and
movs
fcom
mov
pop
call
leave
adc
fs
or
fcmovnu
inc
enter
push
mov
pop
mov
adc
nop
push
and
inc
jae
rcr
sbb
sbb
sub
mov
xor
nop
rol
sbb
call
mov
mov
pop
and
jle
and
inc
inc
sub
push
pop
sbb
mov
stc
dec
mov
mov
shl
sub
leave
add
les
call
pop
mov
xor
jne
mov
or
nop
pop
test
push
sbb
mov
adc
cdq
in
(bad)
lods
leave
add
les
push
aam
push
inc
sbb
xchg
and
mov
mov
or
adc
cdq
or
bound
or
enter
adc
nop
adc
and
adc
adc
aam
(bad)
les
inc
pushf
pop
jge
out
pop
das
cs
mov
or
pop
xchg
sbb
stos
sbb
and
or
sbb
pop
add
sbb
xchg
sbb
sbb
retf
adc
dec
mov
and
mov
jecxz
or
push
mov
and
mov
enter
dec
mov
aam
mov
fs
jb
xor
fwait
sbb
xchg
add
and
or
adc
add
or
loopne
push
lods
or
lea
ret
scas
adc
sub
add
mov
cmps
adc
cmp
inc
clc
adc
adc
add
jmp
es
ss
adc
jns
pop
push
mov
pop
or
mov
lahf
cdq
or
or
adc
aaa
mov
test
or
push
test
pop
loopne
add
inc
lods
sbb
xor
add
mov
or
inc
imul
ret
dec
repnz
nop
cmp
mov
cmp
mov
mov
adc
xor
mov
fs
loopne
inc
mov
push
mov
pusha
xor
dec
push
add
movs
jge
add
mov
add
fdiv
xor
(bad)
and
or
xor
mov
push
in
dec
sub
add
enter
dec
sar
bound
imul
iret
add
xchg
push
test
jecxz
push
mov
test
or
mov
inc
scas
or
ja
call
shr
pop
jno
mov
adc
fist
jge
cdq
bound
shl
or
add
inc
sar
xor
daa
movs
add
les
jns
ss
xchg
ret
sbb
inc
xchg
rcl
mov
xchg
ins
int
shl
and
adc
add
push
(bad)
jge
(bad)
lock
ret
mov
fs
sar
jmp
adc
xor
adc
adc
mov
mov
add
adc
inc
mov
repnz
xchg
jb
mov
jno
add
push
xor
jg
call
ds
aam
inc
push
ficomp
xchg
sub
hlt
jl
pop
sub
sub
or
sbb
fmul
pusha
inc
das
inc
jo
fs
mov
push
push
pop
lods
mov
and
or
jmp
inc
clc
adc
xor
mov
aam
arpl
ds
repnz
jp
sbb
sub
inc
fcomp
add
nop
ja
and
cwde
rol
ss
inc
pop
or
fucomp
repz
mov
cwde
lea
xchg
icebp
gs
or
shl
in
hlt
or
sub
adc
add
nop
scas
nop
fisub
shl
cmps
mov
xor
cmp
and
dec
push
cmp
and
jns
je
ret
and
int
pop
(bad)
nop
(bad)
clc
add
inc
mov
outs
sbb
jmp
fisttp
xchg
movs
inc
sbb
add
daa
rcl
daa
mov
sbb
adc
sub
inc
daa
mov
dec
prefetch
inc
inc
pop
(bad)
aam
test
push
or
daa
sbb
call
fld
inc
add
fdivr
fcomp
ss
clc
shl
pop
jmp
pop
cwde
pop
(bad)
ret
je
xchg
and
pop
dec
dec
dec
cmps
xor
xlat
adc
pop
adc
pop
cmps
mov
xor
inc
inc
cmp
xor
jle
test
jno
xchg
(bad)
jl
jo
or
cmp
inc
mov
enter
mov
and
imul
imul
int
in
xchg
sahf
sub
pop
mov
repnz
xor
dec
inc
add
add
inc
add
add
rol
push
in
add
and
push
pop
xor
rcl
push
add
or
jae
sub
stos
jmp
or
add
xor
and
or
pusha
test
dec
add
in
inc
scas
jae
adc
inc
push
nop
or
mov
ltr
dec
sahf
sbb
adc
out
adc
dec
and
inc
and
enter
(bad)
cmp
jmp
push
out
out
inc
shr
add
sbb
add
loop
outs
mov
ret
sub
js
dec
push
add
test
mov
dec
dec
lds
enter
js
sbb
rcr
inc
(bad)
pop
rol
or
mov
and
mov
xchg
cmp
and
and
movs
sbb
xchg
or
shr
test
add
call
cmp
jle
repnz
je
adc
iret
sbb
(bad)
pop
ror
jle
dec
lea
push
xor
sub
jne
popf
(bad)
add
push
inc
ret
inc
vcvtss2sd
js
and
call
mov
add
pop
cmp
out
daa
inc
mov
or
sbb
and
pop
popa
push
cdq
inc
add
jge
inc
shl
sbb
ds
adc
mov
stos
daa
test
fadd
add
dec
adc
pop
mov
adc
dec
add
cmp
xchg
xor
fs
or
or
mov
sub
adc
jno
test
aad
lea
sbb
or
in
sub
adc
pop
adc
or
xchg
cmp
cmp
test
out
pop
add
add
xchg
sbb
scas
ror
inc
dec
mov
push
call
xor
ret
or
into
dec
fbstp
or
push
pop
jmp
(bad)
(bad)
hlt
call
stc
in
and
popf
and
cwde
inc
call
jnp
nop
cld
cwde
pushf
sbb
or
inc
bound
data16
mul
shl
adc
scas
xor
or
mov
sbb
push
cwde
jmp
jmp
mov
fild
aaa
arpl
sub
fsubr
and
rcl
add
add
loope
nop
inc
sbb
int3
sti
add
dec
push
inc
push
or
add
scas
mov
mov
dec
pop
cmp
sbb
mov
pop
sub
retf
jmp
ss
jne
lea
loope
pop
outs
(bad)
sti
push
call
mov
xor
and
sub
inc
div
test
shr
sub
stos
jge
push
in
or
out
aam
pop
xor
pop
test
(bad)
fadd
or
mov
movs
push
mov
mov
sub
mov
call
jbe
ret
out
xchg
or
adc
sub
push
or
push
jno
add
push
enter
in
add
rcl
add
aas
outs
inc
(bad)
sbb
les
fdiv
or
sub
mov
loop
(bad)
ret
push
dec
movlps
push
mov
xor
and
(bad)
dec
retf
xor
aam
and
jmp
sub
(bad)
pop
mov
cmp
(bad)
and
jge
push
adc
in
jae
push
sysenter
je
fdivr
dec
pop
leave
or
sbb
popf
adc
shr
or
loopne
adc
rcl
test
sub
cmp
push
in
mov
mov
cs
inc
mov
mov
and
rcl
inc
clc
ja
cmps
jne
xor
jbe
(bad)
jmp
repnz
mov
retf
or
cdq
enter
add
dec
shr
xchg
cdq
lahf
inc
scas
retf
sub
cdq
nop
ja
jmp
retf
jns
or
adc
mov
repz
(bad)
call
imul
clc
and
or
mov
jae
sbb
fnstcw
or
and
test
(bad)
shr
push
sub
ins
add
cmps
jecxz
add
inc
shl
add
inc
push
ret
xor
jmp
pushf
or
adc
aad
or
xchg
jae
test
push
packsswb
rol
adc
add
mov
retf
pop
ja
sar
loopne
mov
push
fiadd
mov
push
xor
js
sub
icebp
add
dec
mov
jne
jle
rcl
and
push
inc
cmp
inc
xlat
jmp
pop
and
inc
mov
sbb
inc
rcl
cmps
sahf
adc
icebp
mov
sbb
lea
call
lahf
jne
jne
xor
test
push
xor
jns
pop
iret
rcl
adc
ret
mov
(bad)
xor
push
add
add
test
mov
jne
sub
les
mov
sub
xchg
out
mov
add
inc
or
or
inc
mov
test
cwde
adc
adc
mov
ins
call
sbb
or
sub
push
shr
gs
out
mov
xchg
fcom
ds
mov
mov
inc
ins
push
iret
inc
dec
in
mov
and
sbb
daa
jno
test
mov
jecxz
hlt
mov
ror
test
sub
std
or
inc
repnz
mov
push
sbb
dec
sbb
outs
push
xor
push
pop
ficomp
sub
mov
dec
jno
retf
mov
mov
add
mov
shl
push
aas
sbb
inc
sbb
jne
(bad)
jecxz
mov
push
mov
or
test
push
mov
and
mov
push
xor
sbb
add
adc
lds
sbb
ss
push
fs
push
adc
int
sub
sbb
inc
pop
add
shl
sbb
cmp
daa
or
outs
jmp
ins
aaa
add
pusha
lock
dec
sub
mov
sbb
xchg
nop
add
sbb
push
adc
leave
inc
inc
mov
adc
jo
sbb
xchg
dec
jno
fdiv
leave
adc
jb
push
and
adc
add
movs
inc
inc
push
mov
or
lock
retfw
sub
ins
test
add
adc
push
test
enter
fwait
adc
minps
pop
add
imul
xchg
adc
push
shr
popa
(bad)
(bad)
sbb
out
pusha
fsubr
ja
daa
test
in
and
(bad)
fbstp
scas
mov
inc
inc
test
add
push
cmp
adc
mov
adc
fisttp
outs
dec
or
dec
dec
(bad)
repz
add
xor
ret
fild
xchg
cmp
add
mov
add
xlat
add
dec
add
jnp
mov
xor
aas
repz
add
push
movs
test
adc
add
lahf
add
lods
frstor
and
mov
push
ins
push
dec
xchg
mov
mov
sub
sbb
jge
add
add
sahf
in
mov
sbb
push
dec
js
jb
mov
into
into
adc
rcr
add
push
push
pop
jno
fnsave
xor
dec
add
pop
and
movs
mov
xor
cmp
mov
and
adc
cdq
mov
int
sti
dec
add
(bad)
adc
mov
sbb
xchg
jmp
ret
push
into
dec
and
or
and
adc
mov
jns
push
push
pop
scas
sub
sub
fwait
add
mov
loopne
les
imul
add
push
mov
and
sub
frstor
fld
inc
xchg
add
mov
or
cld
jo
loope
not
add
add
xor
mov
lock
push
repz
xchg
fisubr
cwde
call
and
les
fisubr
dec
jnp
add
pop
sbb
mov
jbe
mov
and
adc
xchg
or
mov
add
sub
std
and
mov
xchg
das
shl
out
and
dec
and
xor
or
add
mov
loop
xor
pop
push
push
aam
xor
cwde
mul
xor
inc
xor
adc
sub
pop
test
inc
and
loopne
mov
adc
add
test
mov
sub
loope
fcom
and
daa
mov
fimul
adc
inc
mov
test
retf
push
push
sar
sbb
adc
push
xlat
xor
or
xchg
or
pop
and
mov
ror
and
mov
in
inc
or
jne
push
repnz
js
fyl2x
mov
or
daa
retf
sub
clc
cmp
sbb
cmps
enter
and
lock
xchg
retf
pusha
adc
div
or
pop
fs
std
adc
inc
pusha
aad
call
lods
add
and
pop
mov
movs
fs
stos
js
add
out
ret
push
or
adc
add
adc
test
les
jmp
stos
or
enter
popa
lods
les
add
push
out
jge
inc
add
or
mov
add
add
cmc
aam
aam
cmp
out
xchg
push
call
and
out
xchg
les
sahf
cmps
adc
cmps
dec
sar
push
push
sbb
push
pusha
mov
dec
or
cdq
push
or
(bad)
int3
xlat
mov
sbb
inc
mov
cmp
shl
lea
or
xchg
add
pop
iret
xchg
xchg
(bad)
fcom
ins
inc
aaa
xor
mov
inc
in
xor
and
cmp
or
aam
das
enter
mov
stos
xor
adc
in
enter
lahf
pop
pushf
inc
inc
or
push
or
test
sub
mov
icebp
push
mov
push
push
inc
inc
ret
rcr
add
push
mov
test
cmp
(bad)
retf
imul
add
cs
and
push
push
enter
lahf
pop
mov
push
mov
xchg
daa
(bad)
test
sbb
movs
add
aam
dec
ds
or
or
nop
rol
ds
jno
int3
add
loopne
push
and
add
jns
(bad)
test
add
aam
div
mul
test
repnz
fild
pop
cmp
mov
xchg
and
movs
div
xchg
mov
not
test
pop
adc
cmp
dec
sub
inc
mov
jae
test
mov
push
pop
cmp
sbb
jo
loopne
(bad)
(bad)
xlat
cmps
mov
adc
das
push
jmp
mov
pop
jb
xor
(bad)
aad
add
ja
jge
mov
mov
add
xlat
xor
ror
in
cmp
mov
xlat
shl
push
add
call
or
sub
push
ss
add
inc
leave
inc
mov
or
test
retf
xor
and
jae
add
push
mov
nop
push
lahf
test
sub
cmp
dec
cmps
mov
loopne
cs
les
and
or
cwde
dec
mov
jne
call
mov
aaa
cmp
ins
sbb
sbb
fadd
cld
lock
xor
call
xchg
clc
or
mov
lock
mov
test
or
cmp
dec
sbb
mov
out
xchg
adc
or
xor
adc
xchg
cmp
push
stos
aas
loopne
push
push
rcl
add
int3
push
scas
sub
mov
dec
add
push
out
nop
fwait
add
push
mov
ins
mov
rcr
xor
or
push
add
les
fild
and
inc
push
xchg
shl
dec
iret
add
or
iret
adc
inc
mov
cmp
aaa
sbb
push
jle
les
dec
mov
or
ins
les
ror
inc
sub
push
loopne
sub
push
aad
mov
xchg
push
adc
push
scas
sub
js
fld
sub
lahf
fcom
fcomip
add
jp
mov
das
sub
ror
dec
sti
pop
pop
cld
adc
mov
push
adc
jg
jns
shl
xor
test
push
mov
dec
or
ret
pop
xchg
inc
lock
mov
inc
dec
adc
inc
cwde
or
dec
and
xor
cmp
sub
xchg
inc
jbe
or
cmc
inc
fst
adc
lahf
int
pop
pop
call
jl
or
dec
add
pop
scas
mov
mov
test
mov
xlat
push
and
jb
jns
dec
xor
or
pop
dec
ins
mov
movs
stc
xor
add
ror
cs
leave
ret
pop
inc
or
dec
mov
femms
retf
or
outs
mov
(bad)
and
sub
cmps
adc
ror
nop
ror
adc
adc
inc
outs
sub
mov
jb
push
popa
jo
or
inc
sbb
pushf
or
outs
push
and
push
sbb
imul
and
cmc
(bad)
in
mov
adc
out
mov
int
push
mov
rcl
and
jns
and
movs
mov
enter
xor
repnz
mov
cmps
and
fst
pop
fdivr
mov
push
mov
or
fnstcw
scas
adc
xchg
out
mov
inc
cwde
sub
shl
or
push
jbe
dec
mov
call
in
sti
adc
test
and
mov
jnp
inc
int
sahf
mov
pushf
lock
dec
ror
xor
mov
fisub
push
jae
and
lods
movs
out
lods
cli
inc
push
mov
push
stos
hlt
mov
scas
push
retf
mov
push
xchg
jo
ror
fmul
ficomp
cmp
ins
pop
test
addr16
ds
hlt
shl
push
shl
fnstsw
cmp
push
sbb
add
push
lods
movs
cmps
pop
sub
test
sbb
(bad)
push
inc
xor
sub
mov
call
add
dec
enter
xor
(bad)
fdivr
out
jge
sbb
cmp
sub
pop
les
or
int3
mov
nop
lea
mov
sub
(bad)
fld
dec
fwait
in
scas
lods
mov
cdq
xchg
(bad)
int
dec
repz
sti
push
fcom
daa
mov
mov
scas
ds
cmc
retf
imul
and
mov
and
imul
call
add
test
(bad)
imul
and
int3
sub
mov
adc
sbb
sbb
add
jae
and
cmps
inc
stos
retf
add
fwait
mov
jns
sub
add
or
lock
mov
jmp
push
inc
inc
mov
dec
lahf
push
mov
xchg
adc
test
(bad)
xor
adc
enter
sub
or
cdq
in
mov
or
in
es
xchg
or
arpl
inc
mov
or
int
int3
sub
movs
xchg
out
add
sub
sbb
push
sbb
sbb
add
mov
mov
iret
and
sbb
adc
cwde
cmp
add
xor
push
sbb
rcl
xor
sub
mul
mov
sub
push
inc
mov
iret
(bad)
mov
push
push
jmp
adc
sub
cdq
or
push
inc
pop
jo
and
add
or
loopne
sbb
jmp
sub
and
(bad)
lea
cmps
jle
jp
add
or
ss
push
dec
add
sti
mov
sub
and
jg
cmp
xor
or
(bad)
cmps
or
mov
adc
adc
push
js
adc
cld
pop
stos
mov
out
lock
cmp
mov
cmp
call
je
cli
ret
cmp
xchg
xor
gs
popf
test
inc
sti
adc
jl
fiadd
push
add
icebp
inc
dec
in
xor
sbb
sub
inc
add
sar
add
loope
adc
sbb
jnp
(bad)
ins
cmp
leave
xchg
shr
jno
adc
repnz
push
push
es
and
xlat
adc
cmps
add
push
cmp
std
loope
call
int
mov
add
js
or
xchg
add
pusha
mov
fsubr
pop
(bad)
lds
sbb
xor
xor
cli
lods
int3
mov
retf
ret
loopne
test
sbb
mov
loopne
aam
push
loope
fcom
sub
movs
inc
push
retf
test
xor
rcr
fdiv
lea
ret
cmp
mov
add
jg
das
nop
aas
fcom
push
mov
jg
mov
(bad)
and
daa
inc
lea
mov
xchg
adc
movs
sldt
mov
repz
pushf
or
enter
add
adc
push
pop
or
mov
xchg
retf
xlat
xchg
lock
call
and
mov
sub
and
xor
mov
lods
scas
adc
xor
sti
and
retf
and
(bad)
mov
data16
xchg
(bad)
je
push
jmp
lea
sahf
add
scas
in
mov
jmp
adc
mov
xor
mov
cmp
push
mov
aas
lock
(bad)
nop
and
jb
loopne
mov
xor
add
xchg
ror
arpl
lds
mov
xor
inc
pop
ins
and
aas
mov
mov
xchg
pop
es
push
add
fdiv
es
dec
in
push
in
inc
sbb
nop
jnp
push
(bad)
imul
test
sbb
ins
jo
sahf
and
mov
in
add
in
and
or
test
xlat
adc
repnz
adc
and
dec
test
call
add
mov
pop
in
clc
test
xor
sar
sbb
add
aas
mov
add
fdiv
inc
fiadd
mov
loopne
dec
aam
aas
mov
repnz
lea
sbb
retf
ret
mov
loopne
fisttp
fdiv
in
dec
cmp
scas
pop
adc
jnp
dec
push
in
cmp
or
or
mov
in
pop
aam
stc
sbb
and
inc
fwait
mov
sub
bound
sub
xor
or
lods
leave
adc
mov
jne
ins
sub
dec
into
sub
sbb
dec
stos
push
cmp
shl
mov
stc
in
fwait
or
cmp
call
mov
in
sahf
loope
push
xchg
push
fmul
adc
fcomp
shl
adc
adc
push
rcl
leave
cmp
movs
imul
inc
dec
aam
fmul
push
jb
loopne
test
add
and
sysenter
ret
loope
adc
pop
and
repz
add
push
movs
jb
sbb
sbb
push
inc
xor
and
leave
push
xor
sbb
xchg
dec
and
sbb
jg
and
add
sbb
sbb
lods
mov
or
mov
pop
dec
sub
mov
in
mov
add
in
je
(bad)
rcl
repnz
mov
shr
movzx
push
pop
push
mov
or
jmp
mov
mov
rol
test
push
inc
mov
or
shr
in
repnz
dec
loopne
rol
icebp
mov
mov
ret
inc
adc
push
pop
clc
test
mov
add
xlat
popf
or
mov
mov
mov
inc
xchg
push
(bad)
jp
push
mov
in
movs
jb
jb
sahf
cmp
dec
shl
or
call
cmp
and
xchg
lock
rcr
lock
push
fs
cdq
sbb
jl
push
sub
lock
test
mov
mov
add
inc
verr
lahf
pusha
aaa
in
push
mov
add
or
pop
dec
cwde
pop
jno
mov
or
movs
mov
sub
sub
push
cmps
shr
sub
ret
clc
mov
mov
test
out
repnz
shr
sbb
and
sub
iret
sbb
ret
cmps
push
sbb
mov
je
jnp
mov
fld
bound
in
retf
xchg
pop
cmp
push
push
(bad)
jp
sbb
(bad)
sub
sbb
and
lods
xor
sub
jl
jb
and
cli
fdivr
add
or
dec
xor
fild
mov
cmp
pop
mov
xlat
test
sbb
and
and
push
lahf
imul
or
mov
ret
xor
jge
or
adc
xor
imul
loopne
lea
xor
gs
xchg
rol
ja
rcr
(bad)
or
or
adc
nop
or
cmps
add
and
pop
adc
or
push
sub
dec
and
mov
push
out
popf
lods
iret
mov
jns
imul
sub
movs
push
pushf
push
push
xlat
add
js
ins
xchg
dec
int3
cmp
sub
push
push
fadd
icebp
mov
dec
rol
push
pop
adc
shl
mov
cmp
stos
inc
enter
xor
loope
out
mov
cmps
div
push
inc
push
lea
cmp
push
mov
add
cmp
push
push
cdq
popf
movs
nop
imul
pop
inc
mov
fcomp
mov
jne
imul
cwde
jg
and
icebp
in
push
dec
or
aaa
push
xchg
lds
(bad)
rep
sbb
gs
fwait
add
cs
mov
cmp
retf
rcl
clc
cmp
sub
(bad)
cmp
repz
nop
xchg
je
pushf
sub
cmp
dec
cmp
xchg
push
and
test
test
sbb
daa
dec
fmul
pop
push
test
call
sub
sbb
push
je
int
push
loopne
pop
ss
bound
xchg
test
test
mov
lods
push
fsubr
or
in
cmp
cli
mov
nop
mov
mov
pop
push
fstp
sbb
and
mov
pop
sbb
or
and
sbb
and
push
push
test
int3
push
inc
cmp
dec
pushf
add
ret
cs
xchg
mov
adc
xchg
sub
lahf
movs
add
jno
cdq
dec
push
mov
sbb
or
(bad)
and
iret
dec
dec
je
shl
pushf
dec
mov
inc
xchg
inc
sbb
push
mov
push
xchg
vaddsubpd
fwait
push
dec
add
dec
push
movs
movs
adc
and
nop
daa
jnp
or
sub
add
arpl
cmp
sub
mov
add
or
bound
push
lahf
lods
or
(bad)
(bad)
in
cwde
inc
xchg
cmp
adc
xchg
and
mov
enter
dec
test
enter
gs
xor
xor
or
push
mov
inc
cmp
or
(bad)
les
in
idiv
pop
rol
push
xor
add
mov
and
fs
add
add
nop
mov
int3
enter
mov
leave
and
push
mov
pop
cmps
inc
and
jmp
in
mov
mov
xchg
movs
lods
mov
call
mov
add
sub
and
dec
mov
xor
bound
arpl
mov
adc
cmp
fs
inc
(bad)
enter
dec
and
dec
push
scas
sub
push
movs
xchg
das
ins
adc
push
push
cmp
push
dec
and
pop
aas
test
inc
stos
adc
movs
cmp
sub
add
add
in
push
ret
mov
mov
mov
imul
pop
mov
in
sub
fwait
add
aaa
int3
(bad)
mov
push
imul
and
int
push
or
inc
sahf
pop
int3
sub
or
add
add
add
and
lea
dec
dec
fsub
mov
je
xchg
inc
inc
push
or
inc
add
cmps
inc
rcr
sub
jmp
mov
fs
push
pop
pop
cmp
xor
adc
xchg
push
dec
outs
pop
and
aam
add
mov
enter
lahf
xor
mov
mov
aaa
outs
sbb
or
xchg
test
push
cmp
mov
mov
fnsave
and
hlt
retf
inc
and
cmp
mov
or
mov
adc
push
adc
mov
stos
and
inc
sbb
sbb
mov
rcr
inc
xor
mov
in
std
push
push
shr
xor
cmp
mov
sbb
iret
test
xor
rol
popa
dec
adc
sahf
add
push
sub
fidivr
call
fcom
dec
in
pop
sahf
jl
test
jmp
adc
and
lea
in
dec
ret
stos
sub
in
fmul
mov
enter
push
xor
clc
or
mov
aaa
dec
outs
sbb
sub
or
sbb
add
lea
xor
sub
test
lds
cmp
popa
xchg
inc
hlt
and
sbb
xor
xchg
or
adc
(bad)
or
push
mov
xchg
mov
pop
xor
or
shl
push
push
push
and
or
rol
enter
or
sub
cld
inc
xor
lods
test
cmp
call
inc
jns
sub
out
ins
add
xor
in
hlt
inc
dec
and
jo
icebp
inc
in
pushf
movs
(bad)
enter
test
add
daa
push
add
and
les
mov
rcr
add
sbb
sub
lahf
aas
or
xor
mov
cmp
push
and
pop
pop
cmp
and
sub
push
adc
or
add
fadd
or
dec
push
dec
xor
adc
and
or
or
mov
stos
mov
ins
aas
xor
push
mov
or
sbb
mov
sub
call
and
shr
xor
pop
inc
imul
add
push
xchg
adc
mov
and
hlt
xor
or
hlt
aam
push
(bad)
ins
mov
sub
jmp
inc
dec
or
adc
dec
cmp
arpl
(bad)
les
ins
push
jmp
ja
iret
jmp
out
(bad)
dec
je
out
xor
or
push
or
ja
mov
loope
add
mov
aam
or
js
leave
mov
inc
and
popa
inc
sbb
leave
and
jl
jmp
sbb
daa
xchg
pop
repnz
pop
adc
dec
jmp
sti
in
or
jne
addr16
aad
xor
and
dec
mov
jns
scas
ins
push
cwde
mov
(bad)
stc
inc
fsubr
add
pop
es
fstp
stos
icebp
lds
xor
jl
outs
push
sub
push
cmc
fsubr
or
test
sbb
and
mov
out
ins
mov
pop
aad
mov
lea
xor
js
repnz
cmp
push
scas
nop
(bad)
(bad)
fistp
stc
push
fld
loopne
add
add
mov
cmp
pusha
loopne
out
(bad)
pop
enter
ficom
ss
aaa
arpl
dec
jl
cmp
xchg
inc
add
dec
mov
and
or
mov
shl
std
add
or
push
cmp
push
push
and
pop
test
mov
sbb
sub
or
push
jle
or
jne
jmp
or
fimul
or
inc
lods
jp
or
jnp
or
ret
add
jl
sbb
pop
mov
icebp
frstor
xor
and
mov
sbb
clc
fstp
std
dec
cmps
cmc
mov
jl
or
out
push
mov
adc
sbb
out
pusha
int
sar
adc
jle
ss
iret
xchg
lea
or
adc
out
repz
adc
jbe
sub
movzx
xor
dec
adc
shl
(bad)
out
sub
mov
sbb
push
push
pop
cld
adc
pop
ret
pop
mov
scas
and
mov
adc
cmps
shl
push
jp
je
test
aam
outs
mov
jmp
push
mov
pop
retf
ret
mov
fisttp
adc
ror
pop
mov
adc
or
mov
adc
pop
sub
into
push
ins
(bad)
enter
push
rcr
(bad)
xor
ret
add
ret
je
and
(bad)
retf
push
arpl
mov
ja
xor
mov
and
rol
clc
mov
dec
inc
cld
xor
or
or
mov
cdq
dec
lea
xor
adc
jmp
mov
jno
es
popa
sub
add
ret
js
call
add
adc
adc
inc
test
and
lds
mov
push
sub
add
aam
pop
sete
in
mov
cmp
std
aam
add
leave
adc
pop
jo
aam
and
sub
add
pop
ss
mov
adc
(bad)
xor
adc
jl
xor
add
inc
mov
js
arpl
stos
inc
inc
scas
mov
push
and
xchg
dec
lahf
std
or
xor
add
adc
repz
(bad)
shld
add
inc
mov
jb
loope
dec
mov
cmp
push
rcr
add
mov
out
push
pop
mov
rol
or
mov
push
inc
stos
inc
cmps
add
or
xchg
add
push
xor
repnz
sbb
ds
(bad)
movs
inc
pusha
or
push
push
or
pop
add
xor
add
fild
outs
push
jp
add
or
and
add
jae
inc
and
pop
add
out
dec
loope
cmc
sub
add
push
add
inc
jo
addr16
sbb
adc
adc
and
push
and
inc
and
nop
adc
or
adc
pop
push
and
lods
nop
aam
popa
dec
push
and
nop
cmp
and
adc
je
js
iret
add
or
inc
adc
or
xchg
sbb
pop
and
add
inc
and
and
ins
push
nop
pop
lods
adc
cmp
pop
sbb
test
pusha
pop
adc
dec
movs
push
push
adc
push
xchg
pop
adc
mov
push
sbb
add
jle
or
jg
add
in
mov
stc
mov
xor
mov
stos
ins
sbb
mov
add
fadd
pop
pop
inc
push
xchg
cmc
leave
dec
and
lds
sub
iret
push
dec
scas
lods
cwde
sub
add
push
inc
push
dec
push
popf
sub
inc
sbb
pop
stc
or
outs
push
add
adc
leave
add
outs
sub
(bad)
shr
cmp
(bad)
stc
loope
pop
stc
push
mov
loopne
rol
lea
sbb
cdq
xchg
dec
in
add
js
xchg
ins
adc
nop
dec
clc
es
jae
push
or
sub
enter
outs
arpl
dec
push
fsub
pop
test
cld
and
xor
pop
aad
adc
adc
mov
cmps
inc
adc
push
test
loopne
icebp
bound
cmps
jns
lds
inc
ins
push
loopne
(bad)
or
xchg
inc
xor
inc
add
aad
stc
push
les
adc
out
jns
jo
or
ffreep
shl
cdq
mov
loope
cmps
cmp
sbb
mov
or
or
imul
js
ins
aam
repnz
or
add
or
call
jg
imul
jns
js
or
pushf
fmul
rcr
pushf
pushf
pushf
pushf
loopne
call
mov
mov
mov
les
push
and
or
in
pop
or
int
(bad)
cmp
movs
and
ret
stos
adc
nop
dec
push
or
push
lods
and
repnz
loopne
push
enter
cs
dec
js
or
add
nop
adc
sub
ror
adc
push
mov
movs
test
mov
push
adc
cmp
inc
push
lods
dec
xchg
xchg
(bad)
and
sub
pushf
dec
rol
lods
push
add
or
loope
xor
pushf
push
cmps
lea
mov
arpl
rcr
xor
push
nop
bound
test
sbb
lea
stc
inc
call
mov
sahf
add
fcomp
mov
push
cmp
mov
mov
(bad)
leave
test
push
or
aaa
sti
pop
xchg
sahf
xchg
or
cwde
sbb
dec
ror
repnz
sbb
push
pop
xor
push
push
xchg
in
pusha
and
pushf
cwde
xor
mov
add
in
adc
test
nop
pop
inc
add
pop
in
daa
ret
in
lea
mov
pop
sar
popa
pop
enter
out
inc
mov
mov
mov
mov
sbb
js
pop
ja
jns
or
xor
out
add
xchg
add
mov
pop
inc
popa
push
fstp
fwait
push
addr16
push
add
fs
sbb
test
rol
movs
add
js
jo
loope
push
sbb
shr
sub
cmc
ror
aaa
mov
mov
out
scas
lods
pusha
xchg
dec
mov
dec
jno
imul
cdq
lea
mov
mov
les
bnd
add
xchg
call
dec
or
rol
out
sti
push
sbb
pop
(bad)
out
jl
out
adc
and
jno
push
pop
push
or
and
dec
jmp
fcomp
cmp
xor
mov
inc
sbb
pop
or
adc
xor
int
and
mov
sbb
cvttps2pi
adc
mov
mov
mov
dec
adc
add
sbb
sbb
or
and
sbb
out
lock
mov
ror
cmp
loopne
push
dec
les
inc
inc
mov
xor
les
sbb
jmp
push
and
enter
mov
pop
inc
add
mov
or
loop
adc
fmul
fstp
fcom
sbb
lahf
xchg
nop
add
lds
push
cmp
movs
lock
add
mov
in
les
add
mov
aad
(bad)
sub
xchg
adc
push
adc
loopne
je
sub
pop
cmp
or
retf
and
mov
test
inc
mov
jo
pop
add
adc
loop
repz
test
push
lea
mov
mov
ret
out
repz
lock
cmp
and
call
add
(bad)
jge
add
sbb
arpl
push
aad
jno
adc
mov
and
or
sub
cmp
dec
cmp
sbb
or
ja
retf
cmp
and
push
and
pop
jnp
jb
and
and
dec
or
dec
and
jecxz
shl
pushf
jl
mov
jnp
int3
or
and
dec
push
mov
cmp
mov
pop
lea
lock
into
add
loop
jb
sub
ins
or
or
push
sub
ds
jns
and
lock
xchg
add
xor
add
gs
lea
lock
and
scas
push
mov
es
sbb
out
mov
dec
aam
dec
cmps
add
mov
daa
sub
lock
out
sub
xor
bound
fsubr
sub
test
jge
int3
out
cmps
jbe
leave
sub
mov
dec
sub
in
sub
and
(bad)
fist
sbb
sub
aam
push
mov
and
(bad)
sub
sub
jmp
xchg
out
sub
daa
xchg
add
fwait
ds
mov
mov
aaa
inc
push
push
inc
xchg
mov
sub
dec
and
xchg
out
sbb
int3
mov
push
mov
sbb
mov
call
jl
push
imul
inc
pop
push
shl
sbb
ss
hlt
or
push
mov
jno
pop
and
pop
pop
outs
inc
retf
je
aad
cld
ja
jle
out
rol
in
mov
cmp
stc
adc
out
movs
daa
ins
leave
out
jmp
enter
cdq
cmp
mov
clc
pop
jmp
movs
out
inc
retf
pop
out
sahf
popa
daa
and
inc
pop
push
lods
rol
mov
push
sbb
inc
sbb
mov
dec
jmp
inc
inc
out
dec
cmp
inc
jmp
xchg
movs
cmp
push
aas
pop
jmp
cmp
rcr
xchg
cmp
cmp
mov
xchg
ss
aaa
dec
test
xchg
int
rcl
inc
sub
xor
mov
push
xchg
sbb
or
pusha
mov
dec
scas
sub
je
nop
lea
ins
adc
push
jo
cmp
and
dec
aad
jb
or
inc
test
pushf
jmp
adc
dec
pop
dec
inc
mov
repnz
jmp
dec
lods
jmp
dec
push
or
pop
xchg
dec
dec
pop
dec
and
dec
xchg
dec
jmp
dec
movs
sub
xchg
jmp
push
xor
mov
inc
cli
pushf
jmp
push
mov
inc
pushf
jmp
leave
add
dec
push
pushf
popa
xchg
sbb
or
es
jne
out
mov
and
lea
sbb
cmp
inc
jmp
push
dec
sub
push
cmp
bound
add
xchg
inc
push
leave
jae
sub
out
pushf
add
push
xor
sub
pop
sub
out
or
stc
pop
stos
xchg
mov
or
retf
push
lods
adc
das
cmp
sar
cwde
add
sub
cwde
add
mov
and
mov
and
mov
add
jmp
pop
push
pop
jne
add
dec
mov
push
push
mov
add
cmp
in
pop
xor
js
pop
mov
fdiv
pop
sub
xor
lds
out
push
add
mov
xor
cmp
add
cmp
cmp
adc
and
leave
fs
xor
(bad)
data16
test
xlat
push
xor
push
call
and
sub
xchg
or
jl
test
add
xor
icebp
mov
cmp
inc
leave
out
jnp
cld
in
pop
pop
xor
clc
hlt
in
sbb
xchg
cmp
mov
jno
call
inc
xor
add
in
adc
sub
leave
add
cmp
imul
xor
mov
test
push
loopne
fsubr
bound
pop
and
in
fs
or
xchg
ins
sbb
mov
loope
std
aam
push
nop
or
inc
test
nop
aam
dec
jns
dec
push
int3
in
mov
or
push
sbb
nop
dec
push
int3
in
sti
xor
add
mov
push
xor
out
fnsave
mov
inc
mov
test
mov
(bad)
inc
je
jmp
mov
out
pusha
cld
jno
jns
cmp
xchg
arpl
xchg
and
in
pop
jbe
jne
and
sbb
inc
sub
mov
jmp
js
jne
inc
test
cmp
xor
in
mov
jmp
jp
push
out
mov
xor
repnz
jnp
jmp
pop
dec
hlt
or
jge
and
ret
jb
jle
jg
mov
jge
mov
jl
push
jmp
cdq
dec
call
and
js
out
fst
ja
jmp
xchg
xor
jbe
jne
mov
sbb
fdivr
(bad)
sbb
das
add
adc
inc
clc
sub
pop
xor
in
or
mov
repnz
pop
xchg
sbb
stos
jmp
pop
inc
out
and
int
enter
mov
shl
mov
lods
xchg
add
pushf
in
push
scas
push
xchg
mov
dec
addr16
mov
mov
ja
xor
fild
push
test
mov
add
cdq
fs
cmp
mov
cmps
movs
cmp
xor
test
mov
inc
dec
lea
mov
cmp
cmp
cwde
mov
xchg
xchg
mov
add
and
mov
movs
cdq
cwde
ins
test
(bad)
retf
and
in
in
nop
popa
xor
or
xchg
xchg
xor
cmps
jb
or
test
xchg
add
dec
call
nop
adc
jmp
ins
xchg
adc
mov
mov
in
inc
cmps
jge
cwde
outs
pushf
pusha
sbb
cmp
or
test
stc
xlat
enter
aaa
add
fist
sbb
ret
movs
mov
push
enter
frstor
aas
mov
cmp
sbb
fs
and
das
pop
movs
shr
popa
and
mov
out
xchg
addr16
xor
ins
cdq
sub
call
jb
inc
push
xor
adc
movs
xor
je
or
adc
nop
retf
imul
mov
lea
sub
jns
dec
pop
adc
leave
cmp
mov
mov
inc
sbb
add
in
mov
leave
leave
dec
lock
lods
nop
retf
stos
es
sbb
pushf
xchg
dec
jno
lods
dec
in
dec
popf
and
inc
mov
sbb
push
jns
addr16
cdq
xchg
xchg
iret
cmp
mov
cmp
movs
pop
mov
mov
push
jne
dec
pop
xchg
ins
push
dec
pop
mov
push
dec
jae
push
sahf
jl
test
dec
lds
imul
loopne
lods
out
pop
enter
or
test
in
test
pusha
pop
movs
or
adc
je
fldenv
sub
cmps
cmps
adc
iret
dec
scas
shl
and
cmps
in
add
test
inc
push
inc
in
stos
cdq
in
sbb
scas
stos
in
test
pop
add
xor
cmps
adc
fwait
dec
call
int
(bad)
jmp
jb
dec
xchg
nop
sub
and
je
and
mov
lods
jmp
pop
stc
mov
and
jmp
mov
mov
cs
jmp
xchg
mov
mov
mov
mov
xchg
cld
jmp
scas
sbb
add
dec
and
lods
ret
mov
das
and
loop
loope
pushf
jns
add
in
mov
pushf
out
inc
xor
push
hlt
pop
mov
sbb
icebp
mov
cld
push
js
xchg
mov
push
jmpw
lock
sbb
add
mov
pop
pop
push
icebp
lea
push
sbb
in
test
push
and
imul
outs
sub
push
cmp
in
jmp
sahf
or
and
or
enter
icebp
xchg
in
lock
mov
and
ja
movs
sbb
push
adc
jno
clc
and
add
add
cmp
scas
jge
mov
and
mov
xchg
nop
sub
pop
adc
fadd
sbb
(bad)
xchg
adc
sbb
or
test
and
or
inc
data16
or
jl
adc
ja
sub
sub
add
push
dec
sub
ret
sub
xchg
xchg
adc
mov
mov
icebp
mov
push
jno
and
sbb
cwde
imul
mov
jns
inc
lea
sbb
mov
and
in
ret
push
cmc
sbb
in
in
repnz
call
xor
pushf
and
in
(bad)
in
outs
addr16
sbb
push
lea
pusha
in
enter
scas
ret
and
(bad)
jmp
pop
and
clc
retf
mov
xor
in
movs
cmp
(bad)
jmp
test
mov
loop
sbb
fild
cmovp
cwde
int3
in
nop
in
dec
clc
out
ins
jmp
xchg
dec
int3
ins
jmp
add
jae
(bad)
jmp
dec
fnstcw
fistp
inc
sahf
push
in
iret
ror
push
lds
leave
or
or
pusha
movs
push
mov
xchg
jmp
mov
loopne
xchg
in
rcl
jmp
add
dec
fwait
popa
sub
shl
xor
lods
in
js
lods
add
sub
jmp
xchg
dec
xlat
out
cmc
pop
fs
fsubr
jmp
shl
sub
push
not
mul
push
nop
jb
push
and
shl
add
ror
push
cs
xchg
(bad)
jnp
jb
mov
popa
adc
mov
stc
mov
addr16
rcl
add
add
xchg
mov
xchg
adc
imul
addr16
fs
cmp
jae
dec
xchg
jp
ficom
(bad)
fist
xchg
cmp
adc
fadd
jmp
xchg
fldenv
dec
and
push
dec
xor
add
push
sbb
stos
mov
add
jle
lods
ss
cs
dec
mov
xchg
jmp
or
test
xlat
fisub
fnstcw
sbb
leave
loopne
push
fsubp
imul
test
cld
jmp
mov
add
in
loope
push
loop
inc
mov
ins
dec
xor
and
dec
repnz
imul
mov
pop
jno
movs
sbb
in
mov
dec
sub
cmp
in
lods
ins
imul
dec
(bad)
in
push
mov
int
adc
imul
push
or
sbb
jg
xlat
push
add
jo
push
scas
dec
jle
cwde
sub
out
mov
fld
cmps
hlt
(bad)
rcl
and
add
add
inc
addr16
cmp
mov
mov
push
mov
call
push
and
and
adc
push
or
sub
js
xor
imul
and
xor
xchg
mov
jge
out
ds
or
push
in
jmp
test
movs
jmp
fstp
add
push
jno
xchg
retf
int3
jmp
adc
repnz
ins
in
out
pop
sub
inc
inc
or
push
je
inc
es
dec
push
cmp
push
mov
push
xor
out
jmp
and
push
repnz
test
sub
jmp
push
add
out
test
jmp
repnz
repz
inc
iret
jmp
out
inc
fstp
xor
pop
inc
out
cmp
and
neg
pop
and
cmp
fs
add
or
stc
das
sbb
cmp
xor
xchg
jmp
push
cld
dec
xor
popf
cli
xor
and
or
xor
inc
ss
in
mov
repz
add
dec
adc
std
(bad)
lods
test
pop
adc
nop
fs
in
sub
adc
mov
push
loopne
mov
inc
jle
jo
in
jb
push
shl
jmp
in
add
outs
pop
jb
adc
add
mov
cmp
add
push
hlt
sbb
xchg
nop
xor
shr
test
retf
adc
xchg
add
push
jmp
pop
and
dec
call
sub
je
sub
jmp
cld
adc
inc
(bad)
pop
adc
cmp
or
jno
push
test
ins
and
pop
enter
hlt
or
add
int
or
or
loopne
imul
add
cmp
or
pop
add
enter
shr
mov
or
inc
shr
mov
psubusb
enter
adc
add
test
push
push
dec
xor
dec
(bad)
push
cmp
xor
mov
xchg
mov
and
adc
jmp
sbb
mov
sub
fs
jo
adc
jne
hlt
dec
push
or
push
outs
pop
pop
enter
pop
mov
sbb
in
nop
out
sbb
pop
sbb
in
jbe
lea
popf
hlt
push
push
xor
sbb
cdq
dec
ficomp
dec
mov
call
test
mov
js
js
push
cmps
xchg
jo
mov
nop
leave
mov
inc
inc
scas
mov
cdq
xchg
xlat
std
pop
push
(bad)
or
mov
mov
pop
and
int
push
and
pop
pop
push
loopne
mov
xor
push
and
and
dec
nop
pop
push
loopne
sbb
add
arpl
sub
inc
xor
push
ror
cmp
cdq
sub
int
daa
cmp
dec
call
cmp
imul
adc
dec
add
sub
pop
and
in
test
hlt
rcr
mov
mov
push
out
inc
add
xchg
add
int3
mov
dec
stos
mov
jb
int3
call
pcmpeqw
lock
out
clc
in
or
add
sub
sub
push
repnz
retf
jmp
dec
in
dec
call
push
out
enter
imul
call
dec
cmp
dec
sbb
add
xchg
xor
shl
loopne
es
repz
movs
sub
cwde
call
in
aad
mov
pusha
movs
test
xor
test
cs
mov
call
sbb
bound
rcl
in
mov
xchg
cwde
loope
pusha
add
or
mov
xchg
shl
inc
or
xchg
jo
(bad)
movs
and
add
jo
mov
int3
adc
pop
in
mov
mov
xor
sub
cmp
cdq
dec
movs
xchg
jmp
test
xor
inc
rol
shl
pop
and
sub
loope
dec
out
jle
cmp
add
retf
hlt
int
sbb
inc
cmp
fdivr
cmp
jmp
mov
push
add
jne
mov
dec
cmps
cmp
jmp
adc
aam
mov
mov
mov
retf
in
lock
jb
repz
adc
push
aas
push
dec
adc
push
pop
(bad)
mov
popf
adc
inc
inc
aam
mov
jo
jae
inc
pop
push
xor
js
mov
test
push
mov
adc
pop
cld
add
cmp
cs
or
adc
cmp
add
mov
imul
mov
jle
pop
(bad)
nop
in
xchg
fist
inc
movs
and
cwde
data16
add
enter
and
xchg
inc
sbb
xchg
cs
ds
inc
mov
mov
push
shl
mov
loopne
and
pop
cdq
dec
call
inc
or
movs
jo
out
ficom
jb
fwait
xor
call
xchg
lods
cmp
inc
ss
ins
aad
xchg
and
lock
mov
push
and
sub
cli
xchg
pop
and
sub
cdq
in
mov
ds
jmp
loopne
add
dec
popf
out
(bad)
mov
inc
data16
and
adc
dec
and
outs
jecxz
push
push
clc
push
rcr
dec
adc
xchg
iret
popf
mov
push
mov
mov
adc
inc
push
movs
mov
sub
cld
jno
or
enter
dec
inc
les
sti
dec
jg
es
in
pop
dec
add
add
mov
sub
or
dec
mov
or
dec
jb
fs
pop
pop
push
dec
sbb
xchg
add
xchg
add
sub
pop
push
pop
pusha
dec
and
pop
push
dec
call
fwait
test
dec
or
push
rcr
and
or
sbb
sbb
dec
xor
shl
xor
leave
push
and
or
mov
ror
cmp
in
nop
or
sbb
push
push
jno
push
pop
dec
or
push
dec
xor
pop
or
pushf
dec
push
inc
add
lock
clc
in
pop
stos
loopne
dec
pop
dec
or
mov
dec
shl
(bad)
mov
retf
mov
inc
mov
pop
sbb
mov
xchg
shr
pusha
enter
fsubr
std
sbb
pop
mov
loopne
(bad)
leave
call
xor
cmps
or
pusha
xchg
mov
enter
push
enter
retf
je
mov
sahf
pop
cmp
mov
ins
mov
xchg
xor
shl
dec
data16
fsubr
cdq
mov
push
mov
mov
or
xor
xor
dec
imul
push
mov
xchg
xchg
dec
dec
imul
sbb
push
xor
outs
mov
dec
and
and
inc
mov
shld
fbld
add
test
xchg
test
in
jmp
sbb
(bad)
test
jno
mov
inc
test
xchg
push
jb
jae
dec
dec
es
je
adc
push
push
leave
push
dec
xor
jb
add
xchg
jno
pusha
nop
push
leave
dec
frstor
test
cmp
push
outs
dec
cmp
js
jne
sbb
shl
fstp
stc
cmp
sub
inc
in
xor
pusha
jp
inc
fld
gs
std
mov
fild
pop
mov
jle
or
add
mov
jb
push
jo
sub
nop
js
je
adc
cmp
nop
push
shl
add
in
pop
mov
jmp
(bad)
daa
popa
inc
leave
mov
mov
loop
adc
outs
scas
pusha
popf
dec
retf
xor
mov
(bad)
push
or
jns
add
je
mov
xor
jmp
and
cdq
fiadd
jns
xor
inc
and
or
retf
mov
ficom
dec
lahf
adc
mov
sbb
int
cmp
in
xor
or
inc
mov
push
dec
in
inc
imul
stos
rol
jmp
and
imul
int3
push
fsub
inc
push
cmp
aam
leave
or
jmp
sub
pop
mov
imul
in
add
add
xchg
ins
sub
xchg
add
xchg
dec
xor
jne
into
cmps
dec
or
shl
mov
sub
xchg
fcom
data16
(bad)
jle
out
popa
stos
xchg
jp
jno
push
lds
mov
sub
sub
jae
ins
cmps
dec
js
dec
cmp
push
dec
or
dec
rol
cs
mov
cmc
adc
push
test
mov
sbb
call
or
xchg
xchg
and
mov
inc
and
jns
ins
std
mov
pusha
adc
add
addr16
dec
add
sub
mov
lds
push
cdq
cwde
jo
push
test
sbb
nop
add
jb
pushf
push
lea
ror
popf
leave
xchg
sbb
fs
fwait
push
aad
adc
mov
nop
inc
add
or
sub
iret
add
cmp
in
popf
inc
sahf
fadd
fcomp
cmp
add
cmps
lods
inc
push
push
mov
dec
push
es
push
rol
inc
dec
sub
nop
xor
cld
xor
movs
dec
and
dec
mov
shl
test
jno
sub
lods
inc
push
mov
mov
cs
call
out
pushf
addr16
push
jb
fs
cmp
sub
and
mov
test
sub
and
lock
cwde
stos
dec
ret
and
add
stos
sub
sbb
pop
add
pop
mov
dec
push
dec
jae
adc
adc
adc
test
xchg
dec
xor
jl
push
je
xchg
xor
dec
ins
or
or
push
out
or
xor
adc
outs
inc
bound
ret
inc
push
lea
or
xchg
mov
mov
cmp
sbb
leave
add
test
pop
pushw
mov
sbb
and
add
xchg
adc
jne
or
jo
sbb
jmp
push
sub
xchg
add
in
inc
stos
jne
push
jb
add
add
and
enter
fcomp
(bad)
push
jmp
lahf
sub
dec
and
mov
or
dec
add
pushf
pusha
cmp
es
or
adc
daa
shr
sbb
mov
mov
in
mov
inc
call
or
or
add
and
mov
cmps
add
ffreep
ja
push
or
cmp
pop
xchg
data16
loop
lds
mov
mov
sub
xor
xor
sbb
ror
call
xchg
add
add
add
jmp
dec
call
sub
enter
lock
inc
inc
jl
sbb
mov
movs
arpl
dec
jp
xor
fwait
or
pop
std
mov
xchg
jne
rol
xor
nop
jg
fild
jo
(bad)
shr
outs
xor
and
enter
scas
pop
push
sub
jmp
xchg
mov
fdiv
and
jmp
mov
rcr
les
loopne
test
jmp
shl
push
mov
mov
add
shl
mov
jb
and
cwde
mov
pop
ins
or
add
mov
test
or
mov
sbb
lea
call
pop
gs
jmp
push
inc
pop
pop
jne
scas
push
arpl
push
push
mov
test
inc
lds
nop
jmp
lock
inc
sbb
inc
ja
rcl
sbb
dec
outs
push
std
jmp
or
jmp
sub
sub
fcom
dec
mov
stos
arpl
mov
shl
xchg
xchg
push
rol
mov
fld
sub
or
out
push
mov
xor
ret
xchg
jmp
jge
pop
dec
cmp
mov
mov
ret
fstp
ror
lock
inc
nop
xchg
out
xor
ret
or
sbb
les
enter
lds
jmp
mov
cmp
es
retf
push
mov
add
cdq
xchg
sub
leave
add
enter
inc
jb
cmp
and
adc
inc
xchg
xor
dec
retfw
ins
out
retf
fld
mov
fadd
icebp
push
dec
adc
outs
pop
inc
and
dec
sub
int3
and
add
je
or
lock
(bad)
add
sub
push
mov
push
adc
call
push
repnz
scas
adc
xor
adc
fisttp
add
enter
push
sub
sbb
or
test
add
inc
cmps
xor
and
sub
jmp
or
xor
add
pop
inc
cwde
sub
call
aas
push
and
shl
sbb
fsub
add
ins
psubusw
push
loopne
call
paddsw
push
aam
retf
push
inc
xor
inc
aam
and
xchg
or
ret
and
add
mov
ficomp
loopne
sub
jmp
shl
(bad)
add
adc
fcomp
sub
lea
fnsave
xchg
adc
pop
fsub
add
enter
adc
mov
adc
adc
mov
and
mov
pop
add
out
test
jo
push
xor
cwde
dec
fild
mov
add
xchg
jne
jnp
pusha
dec
inc
test
mov
cmp
push
add
js
scas
sub
mov
test
add
dec
push
sub
daa
and
push
call
test
movs
jo
lock
mov
or
loopne
or
test
xor
mov
loop
nop
or
or
jecxz
xchg
jbe
xchg
nop
in
jo
cwde
and
push
(bad)
in
mov
daa
adc
in
call
mov
nop
inc
popf
ss
in
add
test
or
jne
ja
test
ja
stc
ret
inc
and
mov
inc
push
add
mov
test
xor
mov
sbb
sbb
inc
lds
adc
pop
adc
add
xor
xor
mov
cmp
rcl
mov
aad
or
add
add
jne
fsubr
mov
fadd
fsubr
or
or
xchg
xchg
xor
aas
xor
arpl
mov
clc
movs
pop
push
cmp
in
mov
pop
inc
sub
xor
jo
sbb
jnp
and
ins
and
shl
sbb
add
das
jno
pop
ss
add
dec
adc
mov
xchg
clc
add
je
mov
mov
adc
cmp
(bad)
rcl
and
xchg
ins
jbe
enter
xlat
mov
or
dec
in
dec
sub
fwait
cmp
push
pop
cwde
xchg
ins
sub
adc
xor
cmp
xchg
adc
or
jmp
sbb
sbb
and
sbb
and
fs
xchg
mov
and
ret
adc
frstor
and
repnz
ret
(bad)
mov
lods
inc
push
in
ja
xchg
dec
xchg
lods
jnp
movs
imul
sbb
cmp
out
fwait
add
add
movs
xor
movs
pop
pop
add
or
xor
test
icebp
fldcw
add
or
dec
sbb
loope
lods
xor
jo
jo
mov
ja
sbb
mov
inc
sub
test
test
mov
and
pop
ret
inc
hlt
jmp
jne
push
pop
or
cmc
sub
adc
adc
dec
cs
xchg
pusha
pop
call
nop
or
nop
and
in
test
or
pop
cmp
adc
in
lea
and
adc
or
mov
jmp
imul
enter
cmp
adc
mov
xchg
cli
test
adc
sub
retf
test
inc
inc
leave
push
pushf
xchg
jne
pusha
rol
imul
and
nop
xchg
sbb
xchg
adc
adc
jae
iret
mov
es
adc
xlat
ds
sbb
dec
es
dec
das
jo
cmovb
nop
sbb
xor
nop
adc
and
add
mov
jns
sti
or
sbb
clc
push
inc
sahf
cmps
cmp
mov
rol
cwde
dec
fidiv
test
xor
jl
dec
jl
xor
fist
dec
aaa
and
sahf
and
fimul
sbb
fld
push
outs
ret
sbb
jne
cmc
xor
sbb
test
xchg
mov
push
xchg
xor
ret
inc
adc
dec
dec
xor
xor
or
leave
arpl
mov
fst
cmps
xchg
push
jo
inc
nop
xchg
sbb
cmps
push
leave
push
pop
and
add
xor
mov
mov
stc
sbb
(bad)
push
sub
and
dec
repnz
loopne
inc
hlt
or
mov
pop
imul
leave
sub
jo
xor
xchg
sub
push
call
dec
mov
test
inc
movs
xor
xor
cmp
sub
push
jb
xor
adc
cdq
sub
dec
sub
sub
add
retf
test
dec
call
ret
movs
outs
sar
sbb
push
jno
test
push
mov
cmp
push
inc
mov
ss
nop
dec
aaa
gs
retf
cmp
cmp
mov
sub
cmp
out
and
inc
mov
sahf
dec
cmp
push
adc
push
mov
jge
pop
mov
sub
retf
cmp
inc
cmps
xchg
cmp
cmp
cmp
cmp
xor
sub
cmp
push
lods
js
les
mov
ds
inc
cs
aas
js
sub
test
and
mov
push
inc
inc
inc
and
mov
sub
call
test
inc
or
scas
inc
enter
mov
rcl
mov
inc
nop
xchg
xchg
inc
adc
mov
mov
adc
lods
test
popa
fcomp
cdq
dec
mov
pop
loop
leave
xchg
xchg
fisttp
adc
or
sub
push
je
pop
jp
mov
xchg
fs
mov
add
dec
lods
xchg
push
js
(bad)
aas
and
inc
jb
inc
adc
test
mov
leave
push
push
and
push
in
and
ret
(bad)
jmp
addr16
lea
add
dec
ins
pop
lock
and
test
icebp
fwait
push
leave
or
lods
aaa
test
push
dec
lock
fdivr
ins
and
test
movsx
add
push
adc
ins
movs
stc
jns
mov
lds
sub
add
in
add
push
pop
add
call
fcomip
sub
and
ret
add
fdiv
push
mov
fcom
push
adc
loopne
or
push
jo
add
test
add
add
call
daa
mov
std
imul
adc
add
add
xchg
sub
adc
cmp
das
and
push
xchg
shl
cdq
and
mov
add
fwait
add
call
fisub
ficom
push
jns
cmps
dec
add
js
call
test
pop
push
and
lea
cmp
sub
add
push
ror
inc
push
push
push
inc
pop
es
js
xor
dec
jmp
ret
sub
loope
sbb
wrmsr
adc
cmp
push
aaa
test
xor
xlat
add
nop
popa
fdivr
adc
adc
pusha
loopne
fmul
inc
jo
dec
add
imul
pop
fsub
arpl
imul
sti
sub
js
retf
add
test
mov
or
out
mov
dec
jns
xchg
inc
sub
icebp
jg
(bad)
je
xchg
aad
push
add
xor
lods
(bad)
ins
enter
cmps
mov
rol
push
cdq
mov
test
sub
pop
(bad)
cmc
xor
iret
push
rcl
pushf
in
popa
iret
dec
dec
and
mov
arpl
pusha
xchg
sub
pop
inc
dec
push
xchg
jmp
xchg
push
inc
pop
sub
mov
adc
daa
icebp
pushf
retf
out
dec
sbb
loopne
test
mov
add
add
jecxz
add
cdq
les
pushf
jl
adc
mov
inc
les
lock
fisub
adc
mov
test
and
mov
push
xor
aas
xor
inc
hlt
push
push
stos
aam
nop
and
xor
gs
das
ss
pop
xchg
and
adc
gs
cmps
nop
push
or
in
in
push
dec
call
xchg
add
dec
xchg
push
scas
xor
xor
dec
xor
call
call
or
inc
pusha
mov
std
nop
dec
xchg
es
lock
and
std
push
in
push
adc
add
and
xchg
mov
dec
dec
xchg
loop
into
and
popa
adc
sbb
or
mov
inc
jle
in
in
sbb
xor
push
mov
mov
xchg
jl
arpl
sbb
js
test
xor
and
xor
and
cmp
push
(bad)
leave
test
sub
into
add
cwde
jl
inc
movups
and
pop
push
jg
aas
mov
and
into
and
fistp
push
jecxz
(bad)
xor
xchg
test
retf
or
sub
inc
add
add
mov
les
jae
pop
xchg
sub
mov
or
push
sbb
test
pop
xchg
in
or
sbb
dec
or
enter
adc
inc
test
sub
jl
dec
add
mov
mov
mov
or
add
adc
mov
shr
or
mov
and
imul
test
add
jns
(bad)
cmc
adc
or
add
mov
(bad)
adc
aam
fdivr
aam
and
or
jg
pop
and
aam
jmp
mov
nop
jl
sbb
xchg
sbb
dec
mov
repz
or
or
mov
mov
jo
sbb
test
les
or
xchg
cmp
mov
add
push
rol
dec
pop
xchg
jnp
cmp
inc
lea
push
out
leave
add
xor
jo
adc
jae
mov
daa
sub
test
add
jle
inc
jo
mov
adc
jmp
mov
call
adc
or
cdq
xchg
add
imul
mov
inc
inc
add
sbb
es
popf
and
enter
dec
pop
loope
test
pop
jp
or
mov
mov
add
push
sbb
pop
stos
cmp
adc
in
and
int
push
or
call
jmp
test
or
xchg
sub
jbe
pushf
mov
cmp
push
aas
pop
nop
mov
jo
mov
fisubr
outs
out
and
ror
push
fsub
lods
leave
jae
sar
mov
or
les
sub
(bad)
in
out
mov
mov
mov
xchg
ret
and
mov
aaa
cdq
push
test
xor
leave
and
pop
and
dec
mov
mov
jge
push
jae
mov
cmps
pop
shl
sub
add
xor
fimul
popa
cdq
xor
sub
in
cmp
pop
cs
cmp
xchg
inc
scas
push
das
xor
dec
push
pop
push
in
xchg
pushf
xor
xor
add
sbb
sub
sub
call
add
add
dec
inc
popa
xchg
sbb
add
daa
loop
sub
cmp
outs
dec
sbb
popa
mov
sub
sub
xchg
stos
rol
adc
and
pop
out
add
push
and
imul
sbb
test
test
das
sbb
lods
cwde
pop
sbb
inc
scas
or
push
xchg
adc
aam
dec
in
pushf
pop
scas
jmp
sub
dec
movs
and
rcr
mov
dec
jmp
test
inc
mov
sub
movs
dec
or
loope
(bad)
jl
mov
enter
adc
mov
adc
pop
add
loop
push
movs
jg
sub
xchg
xchg
ja
jne
push
mov
cmp
cmps
and
enter
xchg
jne
ds
outs
pusha
push
call
loope
pop
inc
enter
dec
or
sub
stos
test
cmp
test
sub
xor
xchg
dec
lods
xchg
daa
es
mov
lahf
or
push
sub
mov
inc
sub
movs
repnz
dec
and
jns
dec
inc
in
or
dec
dec
out
mov
es
xchg
mov
out
add
dec
test
dec
in
inc
dec
and
inc
push
shl
xchg
inc
xor
dec
ins
enter
jne
push
adc
push
pop
mov
bound
(bad)
push
push
jno
push
xchg
call
dec
mov
adc
dec
cwde
int3
push
popf
adc
call
jne
int3
fisub
push
cwd
jns
ss
jne
daa
inc
adc
cli
shl
xchg
dec
shl
and
adc
dec
sbb
in
or
pushf
mov
push
xchg
jne
xchg
xchg
xor
mov
mov
dec
push
fs
or
cvtps2pd
push
add
test
cmps
xchg
inc
push
push
pop
leave
push
aad
push
outs
push
xchg
dec
and
mov
mov
lds
in
int
add
pop
add
mov
clc
xchg
dec
add
es
mov
mov
jbe
push
xchg
cs
pop
nop
adc
jbe
stc
or
je
xchg
jecxz
jno
jno
rcr
clc
sub
pop
mov
cmps
dec
and
push
sbb
pop
sbb
inc
add
dec
jge
jb
sbb
stos
cs
push
mov
adc
aam
sub
stos
adc
das
sub
jo
adc
popa
and
pop
test
or
push
mov
repnz
jns
sbb
sub
xor
push
test
daa
pusha
ins
jno
xchg
out
inc
push
xchg
mov
sbb
dec
dec
push
push
mov
callw
dec
gs
push
inc
mov
push
cmp
pop
pop
cmp
rcr
pop
ret
sbb
pop
adc
leave
pop
xor
add
add
mov
pop
mov
mov
adc
ret
add
leave
aam
mov
jmp
mov
aam
inc
aam
push
or
fisub
add
retf
lahf
push
jmp
jg
cwde
add
sbb
imul
xchg
repz
ins
es
add
sub
das
add
shr
add
mov
xchg
or
push
ret
gs
sti
cmps
cmp
mov
mov
push
cmp
add
ss
xchg
faddp
dec
cmp
mov
or
add
fld
adc
scas
sbb
push
or
push
jmp
pop
hlt
pop
push
adc
call
pop
(bad)
dec
fs
adc
(bad)
nop
movs
js
mov
cmc
or
jno
or
sub
jmp
add
ds
push
lea
aam
pop
clc
imul
mov
mov
mov
push
mov
push
dec
daa
dec
inc
or
cs
and
ret
sar
push
fwait
adc
out
or
test
push
out
xchg
mov
adc
xchg
add
inc
mov
cld
inc
sub
mov
mov
xor
cmp
xor
call
fisttp
fstp
and
mov
or
fistp
sbb
mov
pusha
mov
or
push
arpl
mov
push
daa
adc
imul
mov
sar
adc
dec
xor
jne
and
sub
dec
dec
cmovae
dec
push
adc
aam
jmp
inc
mov
mov
ror
mov
cwde
jmp
or
call
icebp
sbb
inc
loope
dec
add
dec
add
cmp
or
rcl
nop
out
mov
jmp
lea
add
sbb
ret
and
xor
pushf
adc
int
push
imul
lahf
sbb
(bad)
or
cmp
or
push
pusha
xor
fcomp
fs
ret
push
push
jbe
or
dec
push
jne
push
xchg
add
mov
xchg
dec
jne
sbb
and
jae
int3
jl
dec
lea
cdq
or
pop
test
push
in
pop
loope
retf
(bad)
cmp
or
pop
popa
pop
mov
push
and
or
push
pop
int3
pop
shl
nop
call
pop
daa
jns
dec
adc
mov
jns
and
jl
push
xchg
out
shl
cdq
stos
cwde
and
and
lods
call
push
or
ins
test
ret
daa
mov
sbb
pop
sub
or
cdq
stos
add
pop
sub
push
ins
jnp
dec
enter
fnstsw
cmp
repnz
sub
mov
sub
call
in
cs
mov
sub
and
sub
dec
loopne
push
lahf
inc
sub
xchg
stos
mov
jp
(bad)
out
add
movs
adc
fwait
test
pop
jg
int3
jmp
ds
adc
sub
adc
rcl
jae
add
add
daa
in
xor
scas
movs
xor
mov
push
mov
mov
daa
and
test
jnp
sbb
cmp
fidivr
or
sbb
and
or
and
mov
dec
add
adc
mov
adc
pop
and
or
or
dec
sbb
xchg
pop
sbb
ins
pusha
xor
inc
mov
dec
mov
in
adc
retf
call
cs
frstor
and
test
movs
cdq
nop
fsub
fadd
lods
dec
mov
aaa
add
scas
sub
in
cmp
popf
sub
inc
push
mov
es
inc
add
add
push
xor
sbb
adc
imul
inc
jge
cmp
xchg
pop
jbe
add
mov
adc
jl
xor
cmp
ins
adc
inc
inc
pop
test
nop
push
mov
push
sub
xchg
je
add
outs
push
xchg
inc
or
dec
pusha
xchg
test
outs
dec
dec
int3
cmc
adc
or
jmp
dec
cmp
or
and
push
test
fmul
outs
push
fs
pushf
loopne
dec
cli
and
push
xchg
daa
adc
test
or
push
fsubr
push
mov
mov
adc
movs
call
clc
repz
mov
adc
inc
sar
xor
push
clc
inc
pop
fild
push
in
hlt
inc
and
fisubr
es
data16
sbb
es
data16
sbb
mov
and
jo
xchg
push
je
retf
pop
mov
loop
je
mov
add
fst
add
or
aas
fnstcw
jmp
cwde
or
mov
in
aad
push
lods
push
ret
mov
add
stos
xchg
xor
push
add
mov
jl
aam
and
nop
fst
mov
push
call
mov
lahf
jl
pop
pop
cmps
lods
and
jo
inc
push
pop
movs
ret
dec
inc
cmp
push
movs
aad
inc
dec
movs
cmp
xchg
mov
xor
ret
sub
sub
sbb
mov
inc
sub
or
mov
mov
clc
jns
frstor
aam
(bad)
out
adc
push
pop
sub
ffree
fnstenv
and
xchg
addr16
xor
sbb
and
stos
cmp
push
pusha
fsub
inc
add
mov
sbb
add
mov
sub
pop
sbb
rcl
repnz
jnp
call
movs
sub
sub
std
xchg
test
loopne
es
xchg
(bad)
int3
gs
adc
or
sar
mov
push
sbb
leave
test
sbb
sbb
add
push
call
enter
push
add
iret
loopne
push
add
cs
loop
inc
fcom
aam
retf
or
or
add
int3
or
inc
shl
sbb
dec
in
sub
mov
or
adc
mov
lods
xchg
retf
adc
sbb
adc
adc
jns
adc
push
dec
sub
and
outs
lods
xchg
mov
sbb
aad
(bad)
lds
stos
dec
push
or
or
xchg
stos
sub
dec
(bad)
ror
in
cmp
push
dec
mov
mov
dec
dec
xchg
lods
sub
adc
or
adc
mov
das
inc
bound
adc
add
add
test
add
jmp
sbb
or
push
push
loope
retf
data16
pop
or
dec
mov
in
mov
or
mov
add
pop
dec
das
cmp
or
js
xor
and
jbe
out
inc
sbb
dec
pop
mov
repnz
adc
call
pop
push
adc
cs
jl
add
(bad)
and
xor
call
cmps
stos
cmps
stos
add
(bad)
sbb
sbb
add
repnz
movs
popf
pop
and
push
and
pusha
popa
add
and
push
aad
and
cmp
stos
and
test
lods
add
jb
dec
pop
dec
aas
xor
push
imul
dec
aam
xchg
rcr
leave
add
imul
shl
lea
in
call
in
fsubr
int
fdiv
call
push
add
int
add
add
mov
adc
jo
or
mov
fcmovb
mov
xchg
mov
shl
mov
add
cwde
sub
ret
jge
inc
jmp
add
inc
and
nop
xchg
xchg
dec
hlt
xchg
dec
or
xor
mov
ror
and
push
lds
push
rcr
mov
and
aaa
xor
(bad)
dec
push
or
push
shl
icebp
mov
es
adc
movs
inc
nop
cmp
adc
pop
xchg
fld
inc
shr
mov
xchg
in
ss
adc
or
sbb
and
add
enter
add
fdivr
sar
inc
call
dec
es
push
enter
fs
push
loopne
dec
push
in
sbb
sbb
mov
lds
pop
arpl
pop
popa
push
shr
pop
xor
je
lds
sbb
inc
sbb
push
add
add
daa
and
mov
mov
adc
mov
aas
add
xor
call
and
sub
sbb
loope
mov
lods
push
adc
(bad)
js
and
and
mov
dec
daa
test
push
push
adc
jne
xchg
mov
mov
gs
mov
(bad)
stc
cmps
call
rol
mov
ss
arpl
adc
les
add
fcom
enter
aam
ror
shr
in
bound
jle
or
cmp
add
and
sub
setle
sub
cmp
jbe
mov
pop
gs
add
pop
mov
add
sub
mov
dec
add
xor
nop
push
push
cmp
call
push
cmps
mov
mov
cmps
cmc
or
imul
imul
pusha
mov
sub
imul
mov
push
xor
add
outs
pushf
xor
adc
stc
cmp
push
add
clc
(bad)
mov
cmp
push
push
jp
push
retf
imul
pop
ficom
es
push
jecxz
clc
pop
dec
mov
and
pop
add
jnp
sbb
add
jg
call
or
xor
xchg
add
mov
add
lock
arpl
mov
mov
jns
and
pusha
push
add
push
(bad)
movs
jo
mov
pop
sub
movs
outs
adc
cld
mov
jae
mov
xchg
xor
push
mov
aam
push
int
js
and
add
test
nop
pop
out
sub
aas
stos
push
pop
and
and
push
add
movs
xor
adc
push
mov
cmp
int3
enter
add
dec
or
push
mov
xchg
add
loope
pop
push
movzx
inc
adc
push
sbb
push
inc
pop
jb
pop
add
or
dec
call
push
rol
ds
retf
sub
xor
pushf
adc
jle
xor
test
loop
pop
mov
inc
mov
enter
add
push
and
or
or
(bad)
pop
lds
cmp
mov
popa
jae
jae
jb
xchg
sbb
and
or
sti
outs
ss
movs
iret
shl
aas
add
je
mov
push
sub
push
inc
jmp
jb
mov
inc
and
movs
push
enter
ins
push
enter
add
and
pop
inc
dec
add
pop
xor
push
inc
test
je
loopne
xchg
add
xchg
mov
sbb
ficom
cdq
into
mov
mov
add
inc
inc
jne
lea
rol
dec
add
sbb
inc
es
cwde
add
xchg
xor
pop
dec
mov
sub
and
cmp
sub
add
sbb
retf
in
inc
fadd
add
push
cs
pop
rol
clc
mov
sbb
scas
loope
and
mov
into
jbe
pop
pop
repz
xor
mov
popf
enter
cdq
and
aas
sub
mov
add
imul
outs
dec
cmp
ja
pop
add
test
rcpps
enter
sub
ret
adc
sbb
xchg
mov
je
lods
shl
mov
loopne
loopne
aaa
add
test
lahf
jns
pop
add
aam
dec
outs
mov
jne
dec
test
shl
push
mov
pop
std
push
in
jmp
test
pop
nop
shl
mov
and
rol
or
or
inc
leave
dec
mov
dec
push
addr16
rol
push
ins
dec
and
call
imul
xchg
clc
inc
dec
imul
shl
sub
sbb
dec
imul
nop
dec
add
add
loopne
cmp
push
mov
gs
(bad)
pop
push
push
adc
pop
sub
xchg
arpl
sbb
jmp
cmp
jecxz
mov
std
jmp
cmp
jbe
mov
push
ins
out
or
les
imul
mov
cs
int
stc
mov
pushf
push
rcr
daa
call
pop
sbb
or
or
push
add
cli
add
add
or
data16
iret
pushw
lahf
pop
add
mov
adc
cmp
push
ret
jbe
clc
add
sbb
add
pop
enter
and
nop
pop
add
fnstsw
push
sub
jl
nop
push
popa
inc
xor
inc
cmp
mov
xchg
dec
mov
xor
outs
outs
rcr
clc
xchg
and
and
rcr
sub
push
lea
inc
and
popf
jo
cmp
push
and
or
xlat
test
push
jnp
or
lahf
push
mov
ds
adc
or
ret
push
sub
xchg
sub
add
pop
xchg
cdq
jo
xor
fbstp
out
mov
fdiv
xchg
hlt
aas
pushf
rcl
jns
ror
mov
retf
ins
cmps
ror
nop
movs
sbb
dec
sub
loope
aam
sub
sbb
cmp
mov
xor
sar
push
hlt
mov
adc
sub
or
add
(bad)
fs
call
and
xor
jecxz
shr
sub
lods
add
rol
add
add
mov
(bad)
push
jecxz
ins
mov
push
js
(bad)
data16
shr
ret
inc
add
xor
push
test
fisttp
popf
xchg
rol
add
ja
imul
xor
dec
and
dec
adc
not
and
pop
stos
adc
ret
hlt
arpl
aaa
sub
mov
je
mov
and
loope
xchg
int3
mov
ins
sbb
adc
or
xchg
cmp
jne
inc
pop
and
test
loopne
jae
pop
mov
(bad)
pop
or
call
cmps
pop
push
or
inc
jo
jmp
add
sub
movs
int
aaa
or
outs
cmp
jne
push
scas
rcr
sar
dec
mov
mov
push
call
lods
movs
add
push
mov
push
add
push
in
ins
add
lods
ret
pop
push
rcr
enter
or
call
fsubr
mov
pop
add
aaa
xor
clc
ficomp
rol
out
data16
pop
add
call
into
pusha
sbb
lods
mov
mov
pop
mov
xor
mov
(bad)
sub
push
xor
icebp
mov
add
mov
push
lods
or
fidivr
add
push
shr
in
jge
cmp
or
mov
add
inc
pop
and
adc
sbb
in
in
push
or
in
add
loopne
push
or
(bad)
outs
je
sbb
sbb
jb
mov
sti
cmp
inc
in
and
push
mov
fimul
mov
inc
push
mov
cmp
jb
test
xor
mov
les
ret
movaps
pop
fsub
pushf
call
or
add
pop
loop
iret
loope
pop
or
add
std
pop
mov
stc
jo
cmp
jae
out
add
pop
sub
push
push
ins
inc
mov
retf
add
js
dec
ret
jno
test
jae
xchg
mov
jle
loope
mov
sub
or
rol
lea
cwde
sbb
jl
dec
repnz
add
or
add
call
jae
add
push
pop
xor
dec
xrelease
pop
sub
adc
das
push
or
clc
pop
ins
dec
cmp
pop
scas
popf
loopne
rcr
mov
and
(bad)
movs
popa
fs
lods
jbe
rcl
ficom
add
fcom
jne
push
popa
loope
push
les
add
or
out
mov
inc
jmp
sbb
mov
call
mov
mov
test
stos
inc
or
add
cld
xchg
mov
push
hlt
jle
push
add
adc
call
push
inc
add
ins
and
adc
mov
pop
enter
pop
enter
(bad)
mov
push
fcomp
pushf
xchg
push
aam
xchg
cmp
cmps
jbe
jl
test
xchg
or
das
xor
cmp
xchg
adc
adc
or
push
(bad)
add
add
ss
ret
fs
ret
push
and
mov
mov
call
adc
push
cmp
movs
hlt
test
ret
xchg
cmps
or
loop
(bad)
faddp
rol
xor
dec
inc
cmp
scas
das
pushf
lea
cs
stc
xchg
test
enter
push
cmp
sub
jge
cld
adc
push
inc
ins
jne
lahf
xchg
push
jmp
push
lods
into
(bad)
out
cmp
and
pop
out
sti
adc
mov
imul
fcom
add
cmova
ret
mov
das
iret
inc
push
inc
pop
xchg
or
xchg
push
test
push
or
adc
xor
jb
test
test
std
jne
pop
or
mov
sub
push
and
lea
rol
sub
xor
and
push
sub
adc
sub
sub
or
push
inc
nop
in
pop
jb
jecxz
rol
(bad)
fdivr
dec
xor
dec
lahf
mov
mov
jp
mov
mov
push
push
cmps
xchg
mov
add
ss
imul
jbe
or
or
or
push
cmps
adc
adc
fwait
out
clts
sub
push
sub
jle
add
xchg
mov
dec
ins
sub
mov
jno
push
ret
push
call
sub
push
add
mov
sbb
das
jp
mov
mov
ins
aas
stos
aam
mov
sbb
jle
cmp
push
push
movs
and
sbb
xchg
test
push
(bad)
cld
jecxz
in
inc
out
or
add
ins
inc
mov
push
ss
aam
retf
add
or
jg
xchg
mov
dec
lods
clc
scas
sbb
lea
pop
fmul
xchg
loop
cld
pop
fcmovu
add
cmp
push
inc
mov
out
dec
pcmpeqd
xor
or
dec
adc
mov
pop
inc
imul
mul
(bad)
jbe
add
mov
mov
mov
shl
push
pop
sub
mov
inc
add
inc
shr
jb
lea
stos
pop
xchg
xor
or
dec
jae
dec
xlat
add
mov
scas
jmp
popa
je
xor
add
jle
push
out
mov
and
mov
xor
test
lods
fisub
movs
inc
adc
mov
push
mov
mov
cmp
inc
adc
jp
mov
inc
js
cmps
jbe
jb
jne
or
jnp
and
pop
ins
jo
fcmove
inc
and
push
(bad)
(bad)
cdq
rcr
push
adc
push
ja
jge
or
cmp
imul
dec
lods
(bad)
enter
jo
jmp
mov
das
dec
lods
add
add
push
lods
add
jg
push
xchg
cmp
ja
mov
sub
fisub
imul
lds
pop
xchg
add
push
sub
fisubr
cmp
cli
shl
mov
shr
mov
xchg
jbe
ret
loopne
inc
imul
mov
mov
popa
cmps
sub
and
mov
sbb
adc
ins
add
(bad)
dec
jb
(bad)
cmp
mov
shl
mov
xchg
rol
pop
movs
ja
jb
pop
data16
das
lea
lods
cmp
nop
nop
inc
dec
and
jns
mov
inc
(bad)
shr
push
jle
movs
adc
fdivp
sub
mov
adc
inc
jp
ds
mov
and
adc
rol
dec
sbb
ret
jg
mov
inc
mov
sub
cdq
fs
popa
mov
xor
ret
aam
add
jmp
mov
jo
pop
cmp
loop
add
inc
mov
lock
and
jge
adc
mov
xor
loop
loopne
int3
xor
sbb
sub
retf
cwde
cmp
call
aaa
shl
pop
push
jo
std
jno
add
jno
xchg
push
dec
out
outs
dec
push
test
pop
movs
test
dec
or
shr
adc
mov
cmps
cli
loope
gs
and
cmp
scas
imul
inc
jne
jbe
pop
push
or
shl
xchg
nop
test
aas
mov
push
dec
add
ins
test
mov
pop
xlat
and
enter
push
js
sub
sti
push
or
add
popf
mov
mov
add
ret
mov
dec
jne
lea
mov
adc
adc
pop
das
pop
xchg
inc
fist
add
or
pushf
or
pop
or
cmp
or
push
sbb
je
std
cmp
cmp
sub
mov
aaa
out
inc
mov
pop
push
add
pop
retf
mov
mov
push
es
cmp
shr
cmp
add
add
sbb
loopne
or
neg
retf
imul
and
cmp
jmp
or
ja
mov
clc
sahf
xor
pop
sbb
es
dec
mov
fstp
mov
jne
xchg
jnp
mov
popa
mov
in
arpl
loope
xchg
outs
and
adc
loope
add
fcomip
sbb
pop
or
add
jb
sub
hlt
pop
ror
stc
xor
mov
mov
sub
xlat
dec
hlt
cld
ss
push
or
je
fild
adc
ret
jle
add
and
(bad)
call
xor
inc
ror
repnz
jb
dec
mov
and
cmp
retf
out
out
push
adc
cmp
sub
test
lahf
adc
or
repnz
mov
dec
add
pusha
je
and
in
test
ret
je
mov
loopne
fdiv
in
sbb
jecxz
or
or
xor
in
cs
lods
ins
jle
and
lea
dec
add
adc
lods
mov
or
ret
test
adc
hlt
pop
sti
stc
(bad)
add
rol
rcr
add
and
cmovle
or
sub
push
push
xchg
mov
in
sub
hlt
js
retf
adc
push
push
sub
es
cmp
sub
mov
pop
sub
sub
add
(bad)
cli
jp
hlt
push
mov
fldenv
shl
sub
nop
mov
mov
inc
mov
in
mov
sub
dec
jne
jmp
add
nop
rcl
or
mov
(bad)
aaa
rcr
sbb
jmp
into
or
xor
push
jmp
jbe
rcl
dec
or
inc
mov
hlt
jmp
pop
(bad)
or
or
push
retf
das
rol
fnstenv
loopne
jl
push
pusha
sub
and
data16
cmp
(bad)
mov
and
push
pop
sbb
or
xor
mov
lock
pop
mov
mov
and
xchg
test
cmp
mov
sahf
fcmovbe
push
aad
shl
outs
es
shr
adc
xor
add
jmp
retf
shr
push
(bad)
mov
cmp
clc
and
add
nop
add
sub
sub
add
inc
push
add
nop
add
add
inc
dec
or
dec
(bad)
add
sbb
xchg
dec
lock
lock
ret
dec
loop
mov
test
jmp
ret
xor
inc
and
rol
test
add
or
ror
jmp
xor
movs
ret
rol
js
xchg
xor
xor
scas
fcmovbe
jl
lds
xor
fdivr
xor
shr
out
out
repnz
fcmovbe
add
imul
out
mov
mov
xchg
adc
sub
pop
fstp
jge
mov
push
mov
and
mov
adc
call
aas
add
mov
mov
repnz
xchg
add
out
pop
retf
lahf
sub
neg
rcl
adc
jecxz
add
mov
mov
add
lar
add
dec
dec
dec
add
dec
dec
dec
or
or
dec
dec
dec
or
test
add
dec
cmp
arpl
xchg
lods
xor
jg
jnp
add
inc
xor
mov
mul
fs
jae
or
and
scas
xor
and
cld
jp
(bad)
pop
shl
arpl
adc
rcr
pop
jbe
cmps
out
mov
ss
aas
or
mov
inc
jns
add
pusha
loop
cmp
cmp
or
adc
cmps
adc
adc
cmps
add
out
or
or
dec
mov
adc
jne
pop
ret
jo
imul
pop
fcom
das
cmp
add
je
sub
rcr
xchg
mov
inc
push
push
dec
jne
lea
in
inc
loopne
mov
cmp
jne
rol
and
(bad)
hlt
xor
and
pop
and
pusha
dec
and
jno
shr
sbb
sbb
jbe
mov
push
mov
add
jge
inc
fst
dec
ja
xor
jp
mov
loopne
push
mov
mov
mov
out
adc
pop
mov
sub
and
stos
rol
imul
push
cmp
and
test
movs
les
cld
push
ficom
xchg
add
and
cmp
sbb
pop
jne
loopne
pop
mov
loope
xor
or
mov
sub
sahf
enter
push
and
(bad)
jmp
jbe
dec
adc
call
add
in
iret
xor
frstor
mov
rcr
movs
fdiv
pop
ficom
cld
add
mov
mov
data16
dec
dec
adc
cmp
inc
(bad)
push
or
add
sbb
add
lods
pop
stos
mov
test
xchg
jno
jno
(bad)
repnz
int
cmp
adc
adc
mov
shl
lea
xor
loop
mov
test
add
pop
scas
pop
sbb
loope
add
add
neg
cmps
mov
or
inc
pop
mov
push
jb
or
dec
inc
leave
fcmovb
inc
and
cmp
cmps
and
or
mov
xchg
cmp
cmps
sbb
push
test
rcl
sbb
sub
add
ss
add
inc
push
in
test
add
xchg
xor
sbb
sbb
fild
pop
pusha
lock
imul
sub
sbb
fld
or
add
ins
push
rcl
and
or
sahf
xor
xchg
cs
jnp
repz
ins
call
test
and
add
clc
add
cmp
dec
or
push
ret
js
push
imul
test
call
dec
xchg
call
push
(bad)
mov
retf
popa
xor
je
ja
xchg
sbb
pop
add
cmps
test
repz
sbb
shl
and
add
cmps
mov
ss
(bad)
loop
test
push
cmps
pop
movs
nop
ss
jle
cwde
push
sub
lea
mov
call
push
cmc
add
movs
mov
inc
inc
aas
call
mov
fnstsw
fadd
mov
mov
or
jge
jmp
mov
push
dec
add
enter
(bad)
mov
nop
push
add
das
aam
fisttp
sbb
js
pop
jne
xor
jl
ja
je
adc
cmc
cmp
dec
inc
and
pop
or
add
jno
es
jge
push
shrd
cld
push
popf
or
xor
adc
add
jg
icebp
outs
sub
adc
sub
xlat
pop
cs
pop
cmps
sub
pop
pop
sbb
cmp
and
mov
jns
jns
lock
xor
je
aaa
sub
push
sub
adc
sub
ins
add
jmp
xchg
mov
rol
sub
xor
jbe
adc
adc
icebp
adc
fild
fdiv
push
and
or
imul
pop
and
dec
mov
jmp
ficom
jl
jmp
nop
and
lods
sbb
dec
ret
sub
outs
test
sbb
cmp
or
mov
xchg
pop
add
fild
add
xchg
mov
jl
add
sbb
into
mov
or
je
fsubr
call
sbb
ror
dec
sbb
ret
push
add
lahf
pop
add
repnz
inc
mov
dec
push
dec
lea
in
xor
call
aas
dec
cmp
jne
cmp
loopne
lahf
mov
jne
add
je
push
jns
jmp
add
xor
or
inc
push
clc
cmp
mov
jno
outs
das
xchg
mov
call
jo
pushf
xchg
lods
add
push
jmp
inc
clc
repz
pop
in
lds
ret
push
aas
out
loope
sbb
sbb
or
in
test
hlt
dec
fsub
adc
jp
add
mov
jne
std
pop
or
jl
ret
pop
adc
push
pop
je
cmps
clc
ins
or
scas
jg
movs
mov
jb
jnp
lock
jge
mov
cmc
pop
jecxz
cs
loopne
movs
pop
imul
adc
fist
ss
mov
je
arpl
lds
xchg
loope
jb
retf
push
inc
push
mov
mov
dec
ret
stc
xchg
cdq
cmp
dec
mov
lods
or
cdq
idiv
int
retf
jge
cwde
cli
or
mov
jl
xchg
add
cli
add
push
mov
lea
mov
push
icebp
cmp
jb
adc
xor
xchg
adc
mov
and
test
mov
movs
in
sub
add
das
mov
inc
or
inc
add
xor
lea
rep
and
das
lods
mov
lahf
pop
and
or
sar
inc
call
pop
add
cmp
js
enter
out
sub
push
push
sbb
push
mov
mov
pop
lock
adc
rcl
add
sbb
mov
sbb
pop
push
dec
call
imul
adc
stos
push
cmps
inc
mov
sub
push
inc
push
cdq
mov
ins
mov
js
jne
mov
fcmove
sub
rcl
push
xchg
rcr
or
iret
jp
cmps
dec
dec
mov
nop
shr
pushf
dec
push
imul
cmp
add
stos
mov
add
mov
fld
daa
sbb
shl
les
mov
movs
retf
movs
sbb
mov
ror
enter
and
gs
int3
shl
aam
mov
(bad)
and
adc
inc
mov
imul
movzx
sbb
xchg
xor
add
sub
adc
pmuludq
loopne
aas
jb
push
inc
sub
and
scas
mov
or
push
int3
pop
test
adc
out
ret
or
repnz
test
test
mov
(bad)
inc
test
js
cli
(bad)
sub
popa
sbb
retf
adc
mov
jle
fprem
sbb
inc
js
test
and
jo
popf
jno
ror
mov
cwde
(bad)
scas
or
rol
or
adc
hlt
and
and
sbb
loop
sbb
cmps
sub
xchg
push
add
dec
push
cmp
xchg
hlt
hlt
(bad)
movs
or
cmp
movs
hlt
mov
arpl
xchg
mov
push
lea
and
loope
or
or
mov
into
lock
jmp
lock
(bad)
mov
(bad)
stos
adc
je
xchg
xchg
fiadd
cmps
jle
sbb
ins
outs
pop
push
push
inc
inc
test
xor
inc
inc
ror
int
sbb
or
arpl
call
xchg
mov
dec
sar
or
pop
dec
in
aaa
add
or
sub
mov
(bad)
adc
add
mov
mov
adc
lea
mov
mov
cmp
adc
or
shl
push
xor
jne
out
mov
push
sbb
or
sti
xor
xchg
fdivr
mov
or
cdq
ins
cmp
dec
inc
sti
in
fld
sub
inc
and
jg
and
cli
pop
inc
dec
mov
xchg
push
movs
sub
nop
cwde
xor
ins
xor
cmp
jae
push
push
sbb
push
xor
(bad)
outs
dec
into
shr
or
pusha
sbb
push
sbb
and
sub
and
inc
cdq
cwde
aam
addr16
inc
nop
xchg
shr
pop
mov
and
ins
sub
imul
mov
jmp
cmp
mov
inc
std
xchg
inc
loop
and
stos
pop
xchg
shl
jl
js
xor
cmps
je
inc
adc
or
nop
sbb
std
sub
push
pop
or
push
sbb
jne
popa
ins
ret
mov
adc
push
icebp
adc
mov
xchg
adc
les
shl
lods
and
xchg
shl
or
adc
or
add
mov
call
xor
retf
xlat
dec
inc
inc
pop
(bad)
adc
sti
mov
cmp
jbe
or
sub
mov
pop
dec
pop
lahf
mov
daa
fimul
icebp
mov
dec
jne
xchg
dec
push
cmp
pushf
jbe
mov
cs
adc
mov
sar
push
add
sub
cmp
inc
aad
sub
ret
push
jg
aaa
aam
push
add
jp
mov
sbb
icebp
xchg
add
inc
repnz
add
adc
sbb
rcl
(bad)
mov
and
mov
sub
sub
ins
push
leave
mov
cmp
mov
pop
pop
push
test
ret
movs
gs
ins
inc
pusha
test
sti
push
pusha
add
(bad)
(bad)
sub
or
adc
cmp
outs
cmp
out
mov
pushf
xlat
out
sti
xlat
mov
sbb
add
adc
jle
jmp
mov
cmp
adc
add
jmp
into
or
cs
sbb
test
and
jmp
out
xor
xor
cwde
xor
pusha
mov
(bad)
add
or
ss
and
jl
div
add
movs
adc
xchg
adc
sub
dec
inc
sub
push
add
jae
jno
aaa
pop
inc
xor
jle
call
pop
divps
inc
push
popf
add
dec
setnp
sub
push
push
adc
iret
std
cmps
mov
inc
and
push
inc
das
ret
sub
clc
cld
adc
inc
fs
shr
push
mov
data16
mov
jnp
jmp
rcl
or
les
ror
pop
test
push
lahf
call
mov
xlat
jo
cwde
jb
adc
xor
push
sub
add
push
mov
popa
aam
cmp
js
cwde
not
je
add
adc
retf
add
(bad)
lahf
movzx
inc
push
ficomp
or
and
push
out
inc
add
mov
xor
cmp
ins
sub
push
pop
imul
and
add
bound
mov
cmp
jo
ss
in
add
jecxz
mov
aam
adc
or
sbb
cmp
mov
(bad)
in
mov
push
xchg
scas
push
xor
jne
pusha
mov
inc
add
mov
add
mov
mov
push
jne
shl
add
or
push
push
fisubr
xchg
dec
cmp
jb
pop
cs
and
pop
hlt
push
sub
mov
push
adc
test
push
or
inc
sbb
jle
popf
inc
or
je
adc
jb
mov
int
jge
push
add
mov
lea
add
and
ror
js
ret
retf
push
pop
mov
loopne
lods
inc
inc
sbb
adc
mov
push
fwait
shr
dec
or
test
pusha
retf
not
xor
cld
inc
and
sahf
mov
or
jns
add
add
add
mov
or
vmread
pop
pusha
jecxz
mov
imul
mov
sar
je
jmp
cwde
inc
test
inc
dec
inc
inc
js
pusha
movs
loopne
xchg
leave
call
mov
(bad)
mov
and
and
nop
xchg
test
pop
data16
cmp
dec
call
test
add
loop
add
add
mov
push
and
lea
jmp
sub
mov
sbb
xchg
jmp
xlat
adc
shufps
test
stos
mov
outs
loopne
loope
es
mov
pop
add
and
cmp
in
sbb
or
jecxz
ss
in
pop
xchg
pop
je
or
je
push
jne
nop
shr
mov
test
stos
add
loopne
mov
jmp
and
jmp
mov
sub
or
enter
mov
sbb
aam
mov
fadd
push
sub
mov
shl
add
repz
(bad)
mov
test
stc
je
mov
xchg
call
stc
dec
sbb
test
mov
cmp
sahf
int3
jbe
repnz
add
pop
mov
mov
inc
hlt
mov
cmp
(bad)
daa
mov
dec
ds
test
mov
loop
sub
mov
fwait
clc
pop
pop
mov
sbb
cmp
adc
xor
sbb
and
and
(bad)
jne
adc
and
add
pop
js
sub
les
sbb
inc
aaa
add
loop
mov
(bad)
sub
lods
aam
(bad)
jecxz
xchg
loop
dec
fucomp
dec
jmp
add
or
adc
adc
sbb
pop
sub
cwde
sbb
add
clc
sbb
sar
iret
xchg
movs
xor
jecxz
push
dec
push
jnp
retw
sbb
adc
dec
into
in
or
add
popf
test
pusha
cmp
movs
mov
mov
push
sub
add
jg
aam
mov
cld
sub
lahf
not
xor
lahf
mov
push
(bad)
and
inc
data16
cmp
call
ret
clc
out
add
push
nop
das
sub
sar
lea
push
or
inc
or
push
icebp
cmp
leave
push
pushaw
push
cmp
push
pop
mov
ss
or
test
inc
sbb
out
dec
adc
xor
sub
cmp
or
dec
out
in
adc
movs
add
call
pop
cmp
(bad)
hlt
mov
mov
pop
cwde
add
push
adc
pop
push
lds
add
cdq
pavgw
xor
xchg
in
fbld
adc
xchg
push
cld
mov
push
mov
add
and
dec
clc
push
mov
or
cmp
jge
mov
mov
test
mov
cld
cmp
ror
add
mov
pop
dec
adc
add
call
js
sub
add
lea
lods
clc
cmp
jl
adc
mov
into
js
lea
and
stos
je
xchg
adc
mov
daa
cmp
and
loopne
cmp
lds
(bad)
cmp
adc
push
test
sbb
jno
scas
push
dec
add
in
in
ret
sub
adc
ret
lods
nop
test
adc
push
lea
inc
mov
dec
lds
jnp
icebp
stos
push
mov
push
cmp
in
push
arpl
or
jp
mov
mov
adc
into
sti
or
xchg
dec
ret
retf
xchg
pop
retf
sbb
je
pop
movs
sub
pop
rcr
pop
rol
(bad)
mov
pop
inc
jbe
xchg
cmp
cld
std
adc
sbb
xor
or
test
jne
mov
jle
mov
xchg
sbb
mov
inc
adc
mov
sbb
cmp
mov
cmp
inc
sub
lea
into
dec
push
sub
stc
pushf
add
sub
test
sub
jmp
cmc
fcomp
and
aam
retf
push
mov
xchg
lahf
adc
sti
int3
add
inc
sub
test
jmp
or
fwait
or
xor
dec
add
xor
or
pcmpgtd
xchg
mov
inc
add
add
fdiv
or
aaa
mov
mov
or
ret
push
add
popa
rol
add
fsub
ror
aam
and
pop
xchg
push
cs
pop
sub
sbb
fist
mov
pop
loopne
stos
rol
xor
add
inc
adc
xchg
push
cwde
or
jne
sti
ins
add
inc
push
cmp
add
std
and
mulps
enter
pop
inc
xor
imul
arpl
xor
push
imul
fidiv
jo
loopne
or
push
ss
or
pop
push
dec
mov
das
and
add
inc
nop
sbb
adc
in
popf
adc
and
jl
arpl
imul
ss
loope
xor
sbb
dec
iret
jo
clc
add
fnstcw
sbb
add
movs
sub
or
and
jmp
xchg
out
pop
pusha
sbb
dec
inc
fcmove
in
(bad)
and
and
mov
pusha
movs
push
test
or
cmp
xor
mov
jbe
popa
or
inc
int3
cmp
or
push
es
mov
dec
jg
and
dec
int3
mov
adc
rol
leave
adc
push
test
adc
(bad)
adc
sub
in
sbb
mov
leave
sti
xchg
xchg
push
pop
sub
dec
pop
fucomp
fist
cmp
sbb
xchg
test
dec
in
daa
xchg
xchg
xchg
sbb
sbb
popf
pushf
push
sub
sbb
or
dec
mov
sahf
push
pop
aam
fsub
jb
test
dec
xchg
retf
call
and
sub
or
stos
cmc
inc
and
fucomi
in
and
es
fimul
mov
ins
daa
mov
rcr
dec
sub
mov
sub
jb
cmp
sub
movs
popf
pushf
pushf
je
jl
add
rcl
mov
test
gs
jb
sub
cmp
or
mov
aaa
enter
(bad)
hlt
xor
inc
sub
xchg
xchg
xor
cdq
dec
shl
xchg
jae
mov
pop
mov
xor
adc
jl
and
dec
fs
push
ins
sbb
fs
add
jns
enter
lock
enter
shl
test
sbb
sbb
leave
mov
jo
push
dec
pop
push
dec
dec
xor
xor
xor
leave
and
sub
sbb
and
dec
adc
add
(bad)
lock
loopne
ror
push
pop
jg
fisttp
or
adc
sbb
ja
xchg
or
mov
push
mov
adc
lock
add
xor
aaa
adc
add
and
(bad)
outs
cmps
test
imul
add
pusha
and
jecxz
movs
pop
sbb
in
int3
push
dec
pop
push
dec
and
sbb
add
fcom
pop
pop
adc
lods
sbb
inc
or
enter
cmp
or
mov
add
sub
jno
fiadd
push
cmp
cwde
gs
cmp
or
mov
dec
sub
cmp
call
add
lahf
and
cwde
sub
icebp
dec
mov
xchg
cli
mov
mov
inc
cmp
shl
adc
adc
add
xor
aaa
into
test
test
nop
nop
add
or
lea
sub
add
add
repz
pop
pop
imul
imul
push
cmp
lea
pop
fbstp
and
ss
ret
hlt
add
inc
scas
nop
cmps
mov
jnp
push
mov
fcom
dec
sub
in
test
inc
or
mov
or
fcom
cmp
add
or
or
sete
mov
jb
rol
or
fs
ins
nop
mov
dec
jb
enter
jecxz
pushf
pusha
cmp
sbb
sub
into
mov
adc
retf
aaa
inc
push
and
adc
push
mov
add
aad
sbb
jmp
dec
or
les
sbb
outs
adc
addr16
call
stc
xchg
data16
cmp
jne
push
es
add
adc
call
inc
jmp
mul
sub
jmp
jnp
pop
pop
dec
aam
enter
and
dec
sbb
out
push
dec
data16
or
dec
adc
jl
loopne
rcl
adc
mov
add
add
or
stos
adc
pop
push
sub
and
jp
std
ret
sar
ret
push
nop
les
in
or
pop
nop
shr
xchg
pop
xchg
pop
or
fbld
add
aas
push
imul
sar
dec
sbb
jne
push
sti
enter
xor
sbb
popa
push
pushf
es
das
call
(bad)
sbb
lock
nop
mov
cdq
call
push
pop
popf
mov
xchg
sbb
xchg
sti
in
adc
push
fadd
sub
add
cmp
mov
adc
push
clc
gs
inc
xor
mov
mov
pop
popf
ss
ret
dec
xlat
xor
and
jno
and
ret
push
xchg
add
daa
and
jne
sub
repnz
jnp
and
cwde
movs
xor
and
add
dec
nop
pop
test
sub
test
mov
push
ja
in
xor
adc
push
cmp
mov
nop
addr16
daa
sub
nop
xchg
sbb
in
add
jecxz
pusha
inc
sub
push
adc
sub
sub
daa
cmp
inc
call
mov
cmp
add
in
cdq
das
push
(bad)
push
test
mov
add
add
inc
mov
inc
loope
outs
cmp
xor
pop
nop
push
sub
push
test
fist
add
pop
fcomp
sub
fmulp
adc
hlt
or
lock
sbb
mov
and
cwde
sub
mov
loope
or
push
push
arpl
and
loopne
mov
xchg
mov
and
inc
cs
(bad)
mov
xor
lods
call
push
jb
cmp
test
lods
push
jge
or
nop
pop
lods
xchg
push
inc
cld
pop
jmp
scas
les
pop
in
movs
push
mov
ror
pop
mov
cmp
mov
push
leave
inc
test
pop
ror
inc
add
or
pop
inc
pop
std
cmp
and
aad
shr
je
xor
adc
pop
mov
xor
add
push
outs
xor
les
les
stos
mov
or
fiadd
pop
adc
jo
xchg
cmp
rcl
daa
mov
or
scas
movs
fmul
xchg
adc
push
add
lock
fs
inc
shr
dec
pop
mov
shl
(bad)
ror
test
neg
dec
xor
int
cmp
aas
test
js
in
retf
std
add
pop
mov
push
xchg
inc
inc
(bad)
lds
fistp
fs
sbb
inc
inc
inc
adc
sub
push
and
dec
js
icebp
mov
call
sbb
mov
xor
cwde
lds
arpl
dec
mov
push
pusha
and
inc
test
inc
daa
popa
jge
xchg
inc
nop
test
jno
(bad)
sar
sub
(bad)
daa
mov
test
dec
add
lea
mov
ret
mov
sub
inc
loop
pop
add
add
xor
add
cmp
cld
inc
add
inc
or
and
push
nop
or
rol
sbb
stc
inc
pop
sub
outs
icebp
push
arpl
sar
push
xor
imul
cli
outs
fld
test
pop
sub
outs
(bad)
imul
add
and
jne
int
fwait
inc
inc
push
inc
and
jne
dec
or
jne
cmp
sahf
sub
ss
or
jne
pop
dec
movs
movs
mov
dec
xor
cmp
and
cmp
adc
xor
mov
push
mov
xlat
xor
ret
mov
jge
inc
adc
pop
in
movzx
jl
mov
je
ret
xor
rcl
fnop
inc
adc
xor
mov
test
xor
les
fidiv
push
cli
push
(bad)
push
push
sub
(bad)
fdiv
add
push
outs
sbb
jg
sbb
inc
or
int
mov
jge
mov
add
mov
sbb
rcr
sub
xchg
xchg
xchg
sub
fld
mov
loope
jmp
sahf
fstp
add
ja
add
fst
pop
fsubr
std
enter
sbb
sbb
sbb
fmul
push
pop
mov
and
ret
push
mov
or
xor
int3
pop
jp
add
sbb
or
loope
lahf
push
jo
test
sub
sbb
xchg
scas
adc
xor
wbinvd
aad
mov
inc
inc
out
pop
sub
inc
or
popf
mov
sub
and
adc
inc
pop
sub
add
or
retf
inc
dec
comiss
fst
inc
es
in
ret
mov
pop
inc
push
movs
cdq
cmp
nop
hlt
or
sbb
sub
cld
imul
push
add
jle
and
maxps
push
and
dec
adc
pop
inc
ins
movs
jle
loope
je
jb
mov
test
inc
or
pop
mov
xlat
push
push
inc
ror
jecxz
aas
or
fcomp
movs
mov
adc
aam
dec
sub
dec
dec
mov
add
inc
mov
pop
dec
adc
jno
cmp
xor
imul
je
call
in
xchg
nop
add
ret
ins
dec
or
and
retf
retf
ret
bound
pop
or
sub
adc
test
imul
sbb
or
add
adc
lods
into
setne
cwde
mov
stos
fild
jg
add
js
jo
or
mov
fld
and
mov
push
mov
cs
fbld
ror
out
in
pop
xor
sub
inc
jmp
and
les
lea
add
or
jmp
mov
dec
xor
and
arpl
movs
xor
test
aam
mul
pop
cmp
fcmovnu
out
mov
cwde
or
pop
add
ja
jecxz
mov
xchg
and
out
push
mov
adc
jge
xlat
inc
pop
cmp
mov
popa
adc
dec
or
xchg
add
jae
(bad)
arpl
xor
mov
sbb
or
xchg
test
push
add
xchg
mov
pop
(bad)
jbe
mov
das
dec
push
ins
mov
jge
xchg
mov
add
push
jle
repz
lods
push
movs
and
push
sbb
inc
cmp
ins
addr16
das
outs
pushf
mov
test
inc
or
push
xlat
inc
and
push
sbb
dec
faddp
out
inc
in
std
pop
fcmovb
xchg
test
mov
cmp
and
or
or
push
fmul
icebp
jb
mov
fadd
stos
add
or
pop
adc
cmp
nop
aaa
test
mov
(bad)
push
outs
or
adc
jle
jecxz
add
sub
adc
int3
shl
dec
adc
shl
push
iret
ja
pop
fnsetpm(287
sub
test
lahf
rcl
mov
pop
(bad)
fild
and
cmps
enter
push
stos
add
mov
mov
arpl
pop
sub
sbb
add
inc
scas
iret
push
ins
sub
pop
sbb
ja
js
ret
sub
xor
inc
xchg
gs
inc
ja
or
into
inc
dec
jo
push
(bad)
mov
cdq
and
pusha
mov
mov
adc
ret
dec
or
shl
add
movs
ins
scas
xchg
mov
shl
mov
sub
pop
adc
add
and
inc
or
test
data16
add
aaa
push
and
adc
push
push
mov
or
popa
inc
jb
or
test
adc
add
fld
jp
ret
and
xchg
push
pop
punpcklbw
mov
mov
xchg
pop
inc
cld
popa
lock
inc
xchg
bnd
or
sbb
sbb
sar
jo
movs
arpl
mov
xor
out
and
inc
mov
and
dec
xchg
push
add
xor
lock
sbb
pusha
dec
sbb
test
ss
mov
daa
int3
(bad)
push
shl
rol
or
and
cmp
xchg
jno
(bad)
mov
inc
add
inc
cmp
test
lock
add
inc
in
in
push
sbb
loope
nop
call
or
jg
add
loope
mov
add
dec
xor
and
sbb
adc
push
or
inc
and
call
sub
and
push
fdiv
fist
push
push
cmp
push
sub
iret
repz
sbb
adc
inc
pop
aam
mov
stc
push
jle
test
in
adc
test
loopne
pop
mov
or
mov
mov
daa
inc
cmp
not
div
adc
sub
cmp
das
fisttp
mov
rol
mov
dec
mov
xchg
mov
and
fisttp
cs
mov
mov
(bad)
push
add
xchg
mov
xor
jl
push
and
or
dec
shr
add
dec
add
std
dec
add
adc
mov
pusha
or
mov
out
je
dec
and
push
adc
hlt
fdivr
push
push
fst
adc
ror
sbb
and
cli
or
fs
ret
sbb
jnp
shr
sbb
clc
enter
int3
xor
mov
jle
stos
xor
movs
shl
xor
jg
in
adc
adc
mov
fldlg2
repnz
cmp
inc
push
(bad)
push
pop
js
cli
ins
data16
adc
js
hlt
or
or
jnp
lock
jns
xor
in
adc
shl
push
(bad)
test
in
(bad)
popa
pop
mov
setp
lahf
jae
sbb
jns
les
jmp
push
push
push
nop
add
callw
push
js
xor
or
inc
adc
adc
ror
push
je
sbb
(bad)
das
ror
or
jl
test
xchg
jg
ins
push
add
add
(bad)
add
adc
push
mov
ins
pop
inc
xchg
mov
jecxz
test
pop
fbstp
or
dec
jp
sbb
mov
push
repz
xor
or
xor
xor
dec
or
(bad)
movs
jne
pop
and
cmps
or
int3
pop
adc
and
xchg
and
jl
fistp
jge
retf
mov
sbb
add
or
adc
sub
or
mov
mov
push
outs
nop
adc
cmp
cmp
mov
add
adc
pop
test
jmp
or
cmc
cmp
jo
jne
and
pop
mov
or
push
icebp
mov
xor
and
cs
pop
push
je
cmp
or
(bad)
adc
sub
pop
addr16
cld
adc
push
pop
or
or
test
cmp
inc
jmp
and
cmps
and
and
pop
jno
inc
adc
cmp
xchg
test
mov
das
lea
push
push
iret
push
lahf
adc
mov
stos
adc
pop
movs
dec
je
xchg
ret
mov
test
sbb
sub
jle
hlt
sub
pop
dec
cmp
xchg
sbb
ja
push
adc
into
cmp
je
int3
push
fnstsw
mov
mov
inc
hlt
push
sub
jge
pop
leave
fnstcw
jmp
pop
jne
shl
xchg
dec
xchg
push
outs
out
sbb
jl
cdq
mov
and
adc
test
jmp
fs
test
jne
fcmovb
daa
cmp
mov
lahf
pop
ja
or
ja
xchg
in
adc
dec
and
pushf
add
adc
mov
mov
or
out
pop
inc
inc
or
jno
mov
dec
(bad)
fild
jg
sbb
fdiv
cld
jo
js
fmul
and
push
popa
test
or
lock
mov
pop
test
sbb
cld
pop
push
icebp
pop
shr
test
push
dec
lods
movs
inc
and
retf
xor
rol
(bad)
add
cdq
jmp
or
pop
pop
pop
lock
push
(bad)
movs
rol
inc
sbb
or
mov
dec
aam
jo
sub
inc
mov
push
cmp
pop
mov
xchg
add
rol
pop
push
push
jb
aam
xchg
adc
add
ret
sbb
mov
es
sbb
mov
mov
das
adc
inc
mov
push
mov
(bad)
fs
adc
push
and
cdq
fstp
sbb
in
xchg
fcom
sahf
adc
inc
ds
in
ror
dec
in
int3
call
jmp
or
out
push
fmul
lea
jp
lea
aad
mov
push
cmp
mov
fdiv
or
xor
pop
outs
or
andnps
add
mov
ror
je
jmp
adc
add
jmp
inc
outs
in
xchg
dec
je
iret
ds
dec
das
cmp
pop
sub
xchg
pop
dec
pop
inc
lahf
push
mov
pop
xor
rol
and
mov
pop
or
cmp
mov
or
fcom
xchg
adc
mov
push
aad
push
or
(bad)
sbb
dec
pop
sbb
sub
pop
or
adc
inc
int
sbb
push
in
pop
loopne
or
mov
push
sub
jae
push
xor
pop
dec
sbb
imul
test
jecxz
or
das
inc
imul
stos
retf
stos
dec
movs
inc
fcmovne
mov
jmp
adc
ret
ins
test
sub
jle
aaa
es
push
inc
push
push
add
adc
sbb
cmp
sbb
push
push
pop
cs
add
clc
(bad)
mov
dec
mov
test
mov
mov
sbb
push
div
test
lock
xchg
pusha
das
push
inc
test
adc
fst
sub
add
adc
xchg
and
or
ror
push
(bad)
add
cs
push
stc
sbb
test
cmp
test
and
push
mov
sub
and
push
xchg
lds
dec
cmp
pop
pop
call
enter
cmp
xchg
shl
xchg
(bad)
or
add
pop
sub
movs
adc
mov
xor
sbb
jmp
push
and
inc
rol
rol
(bad)
scas
add
push
test
add
add
xbegin
sahf
jmp
adc
mov
adc
mov
push
stc
mov
(bad)
push
jae
std
fwait
mov
loopne
nop
mov
cmps
xchg
sbb
rcr
mov
in
cmp
sbb
jne
push
test
or
and
test
fdiv
jg
pop
(bad)
fsubr
pop
sbb
dec
jne
pop
cmps
mov
in
xchg
jmp
add
ins
xchg
dec
adc
jmp
rol
and
add
call
inc
sbb
push
push
pop
jno
or
inc
movs
xor
fadd
sbb
push
mov
cmp
inc
cmp
jl
mov
jbe
xor
test
mov
or
mov
(bad)
popf
into
jae
(bad)
and
dec
shl
xor
mov
mov
es
xchg
pop
lahf
add
mov
test
test
add
push
rol
dec
add
inc
adc
iret
nop
xor
loopne
add
popf
(bad)
aas
xor
adc
frstpm(287
rol
mov
popa
or
jno
jg
add
push
or
or
arpl
clc
push
adc
aad
in
add
xchg
jg
lahf
lahf
xchg
sar
push
xchg
hlt
push
xchg
in
add
movs
lods
lods
pop
test
xlat
ins
call
dec
mov
and
jbe
js
jle
push
push
clc
jne
popa
je
push
push
addr16
mov
add
cwde
jno
push
xchg
pop
push
fcom
fadd
sbb
mov
retf
jl
mov
and
or
dec
add
pop
mov
ds
push
ss
inc
add
das
rcr
push
ja
jg
push
int
cmp
into
jne
add
sub
jne
cmp
push
adc
fwait
test
clc
jne
(bad)
test
mov
mov
xor
int3
mov
sbb
gs
mov
dec
out
xlat
adc
jbe
xchg
scas
lods
xchg
in
daa
or
pop
outs
les
test
xbegin
and
mov
lock
hlt
mov
mov
dec
push
xchg
sub
sbb
and
icebp
push
push
mov
or
or
(bad)
mov
jl
sub
nop
out
push
push
push
jns
inc
sbb
mov
jnp
push
mov
add
aas
sbb
push
mov
inc
ret
push
shr
push
pop
mov
mov
jp
pop
add
add
sbb
lock
jnp
enter
pop
push
push
shl
mov
and
sahf
dec
xor
fidivr
mov
jmp
mov
daa
sub
add
ret
cld
enter
push
cli
cmp
add
adc
repnz
and
adc
stos
or
add
cmp
inc
aam
inc
adc
sbb
adc
push
mov
mov
mov
push
mov
lahf
dec
mov
outs
jp
neg
xchg
fs
mov
inc
push
or
mov
aam
sub
mov
add
xchg
sub
xor
or
lahf
jne
fwait
imul
outs
push
mov
test
push
dec
iret
je
inc
jnp
movs
sbb
in
inc
pop
cmp
push
mov
push
ror
icebp
sub
scas
dec
cmp
sbb
mov
xor
hlt
add
mov
push
adc
or
call
add
sbb
lds
aas
in
add
pop
sbb
xchg
sub
ja
pop
mov
push
call
(bad)
jg
ret
pop
mov
mov
sti
pop
xchg
fwait
cwde
add
mov
dec
cld
push
fwait
cld
mov
pop
sar
or
enter
mov
add
je
rol
dec
adc
cwde
sbb
or
dec
fiadd
jbe
(bad)
and
mov
std
or
or
adc
and
or
adc
add
sbb
mov
scas
jo
sub
add
das
dec
inc
adc
ins
mov
pop
sub
jbe
add
hlt
out
inc
test
xor
enter
and
pop
popa
dec
adc
sbb
jl
push
push
sub
das
enter
cmp
adc
test
pop
mov
mov
mov
aam
lods
nop
js
popa
cmp
mov
dec
arpl
rol
mov
ins
jmp
xchg
push
ret
mov
cmp
and
sbb
xor
gs
mov
gs
adc
mov
pop
add
pop
shr
push
mov
lods
xor
repnz
imul
xor
ret
nop
jmp
sbb
aad
je
inc
jle
js
dec
mov
enter
mov
lahf
adc
mov
test
sahf
std
xchg
or
inc
fadd
mov
mov
loopne
fisttp
xor
jbe
sbb
jns
cmp
push
adc
and
pushf
push
jno
ret
or
inc
and
test
shl
inc
pop
fdivr
sbb
test
sub
cdq
sbb
pop
popf
mov
cmps
or
ror
mov
dec
loopne
loopne
and
mov
adc
sub
sub
(bad)
cmp
bound
pushw
sbb
cmp
or
push
add
mov
ins
or
out
sbb
inc
cmp
into
xor
push
xor
scas
push
movs
dec
fwait
inc
mov
imul
pop
sbb
xchg
mov
add
pop
xlat
xor
adc
cmp
mov
cli
lods
adc
(bad)
jecxz
daa
test
or
and
std
fisttp
push
or
pop
sbb
jecxz
cmps
ret
outs
lock
add
sbb
movs
pop
pop
push
mov
daa
stos
mov
add
push
lds
je
add
adc
sub
leave
mov
adc
sbb
loopne
scas
push
dec
push
jns
mov
and
rcl
inc
mov
xchg
push
rcr
add
cmp
sar
mov
dec
adc
sbb
mov
(bad)
xor
jp
xor
lea
popa
test
inc
idiv
test
popa
jne
push
mov
lahf
sar
stos
pushf
mov
xchg
lods
int3
mov
adc
loope
jle
push
add
int3
sar
test
cmp
aad
mov
push
mov
movs
jo
jbe
inc
ja
and
std
mov
cmp
fldcw
pop
push
cmc
pop
mov
add
stos
add
jl
xchg
mov
fidiv
or
dec
rol
cwde
aad
mov
mov
dec
xor
ret
inc
repnz
outs
xor
mov
add
dec
sub
push
ret
mov
or
mov
xchg
loop
jb
cmp
psubd
add
mov
sar
test
movzx
sub
xchg
xor
mov
pusha
jge
xchg
rcr
xchg
inc
jg
dec
jnp
sub
push
cmp
std
pop
and
mov
jo
cld
pop
in
mov
dec
test
jo
repnz
sub
sti
cmp
push
jmp
popa
dec
inc
popa
or
push
retf
in
dec
pop
add
add
jl
push
add
and
push
or
jmp
lds
pushf
lea
imul
pop
mov
arpl
xor
arpl
cwde
inc
call
mov
pop
adc
add
sub
jmp
mov
mov
mov
mov
or
js
push
mov
or
push
push
dec
pop
adc
test
lock
mov
stos
push
aam
mov
jb
ins
leave
movs
retf
mov
mov
mov
lods
mul
cmp
fwait
and
add
add
les
hlt
out
mov
jbe
in
movs
icebp
out
leave
test
icebp
pop
mov
mov
(bad)
icebp
xor
es
push
mov
pop
pop
lea
wbinvd
adc
add
or
add
push
push
adc
mov
push
inc
sbb
imul
add
addr16
adc
jns
add
push
or
push
push
nop
out
sub
dec
inc
sahf
addr16
sub
jns
and
push
sub
mov
sub
xor
inc
inc
add
xchg
out
mov
adc
je
inc
xor
cwde
push
xchg
xor
mov
cmp
cmp
and
inc
sbb
xor
retf
mov
data16
add
mov
sbb
add
add
stos
adc
pop
push
push
ds
fs
push
mov
sbb
nop
push
jne
lods
fidiv
push
pusha
ds
pop
hlt
push
xor
bound
jno
(bad)
repnz
add
sbb
sete
loopne
cmp
jl
add
mov
mov
mov
xchg
push
hlt
inc
or
cmps
test
test
xchg
mov
aad
xor
pop
and
and
pop
ja
xchg
mov
ja
nop
inc
push
pop
and
inc
call
cdq
je
sbb
mov
ja
mov
and
daa
dec
sbb
pusha
mov
les
(bad)
sub
sub
out
(bad)
xor
lock
xor
sub
push
xchg
xchg
out
inc
xor
lock
push
sbb
sub
enter
(bad)
sub
loopne
cmp
lea
adc
inc
or
mov
inc
stc
mov
cmp
or
or
push
xchg
sub
adc
jp
add
aas
sub
and
out
xchg
mov
sub
and
mov
aad
xchg
adc
sub
add
rcr
jl
cmp
cld
inc
imul
loopne
cmp
lds
gs
jp
or
arpl
cmp
mov
and
and
push
or
in
mov
xor
xor
movs
aam
push
cmp
stc
cmp
sbb
test
inc
xor
nop
dec
xor
enter
sar
adc
xchg
and
cmp
mov
rol
cmp
cmps
add
adc
xor
stos
sbb
cmp
test
or
leave
mov
or
aas
sbb
jmp
sbb
pusha
enter
pusha
xchg
fdivr
xor
or
sub
loopne
sub
imul
cmp
and
inc
inc
xor
cmp
xchg
xor
and
(bad)
inc
and
add
enter
repz
dec
push
and
push
dec
xor
mov
dec
mov
pop
std
dec
hlt
shr
nop
je
call
js
push
and
es
repnz
dec
stos
inc
ret
stos
sub
repz
push
in
push
sub
pop
push
cmp
cmc
push
add
adc
add
dec
daa
sbb
test
or
icebp
jns
test
inc
add
das
cmp
xor
push
add
push
sub
pop
xor
mov
popf
sbb
or
or
jae
add
push
or
imul
xchg
in
xchg
aas
aaa
xchg
sbb
or
pop
int
repnz
add
adc
and
lods
adc
push
xchg
add
loopne
int3
outs
cwde
pop
add
and
mov
pop
mov
inc
cwde
pop
test
test
and
and
add
pop
nop
retf
xchg
sbb
imul
or
cmp
xor
mov
or
xchg
sbb
cmp
pop
push
pop
add
cmp
jo
movs
and
mov
les
sbb
xchg
lea
inc
push
mov
xor
mov
fiadd
cmp
xchg
mov
mov
das
or
dec
mov
add
xor
sbb
add
adc
sbb
leave
sbb
push
in
mov
cwde
sbb
ror
cmp
xor
cmp
out
cmp
(bad)
cld
pop
in
and
xchg
cmps
sub
and
inc
mov
jecxz
add
push
dec
inc
es
inc
and
cdq
dec
mov
cmp
loop
outs
enter
mov
adc
add
jo
les
(bad)
loope
dec
inc
push
enter
sbb
and
push
shl
repnz
aam
leave
add
jne
fsub
and
jbe
push
nop
mov
scas
fbld
sbb
dec
loopne
fs
push
in
enter
neg
call
jp
in
and
and
jnp
push
nop
mov
loop
and
cmp
jge
and
xchg
jle
mov
sub
repnz
leave
add
and
and
xor
pop
dec
cld
icebp
adc
or
and
mov
mov
je
pop
pop
fnstcw
cld
std
sub
xor
xchg
test
mov
inc
and
mov
add
test
in
cmp
mov
mov
fiadd
push
xor
push
dec
mov
jp
inc
pop
dec
ret
imul
lock
in
push
xchg
xchg
xor
inc
fisttp
xor
mov
mov
out
ret
nop
call
adc
jnp
test
in
test
mov
push
mov
jl
add
cmp
or
stc
pusha
test
or
and
add
jo
xor
mov
mov
inc
xchg
inc
cmps
mov
jb
xchg
out
mov
pop
aam
mov
sbb
and
inc
xchg
sbb
xor
push
ins
xchg
pop
mov
xchg
mov
mov
fcom
xchg
les
inc
mov
nop
add
push
cdq
xchg
mov
scas
inc
sbb
cmp
inc
cwde
xor
xchg
lock
cdq
ret
scas
inc
pop
add
sar
enter
loopne
jns
jb
fwait
loopne
mov
sbb
pushf
dec
and
xchg
xchg
aam
dec
sub
fs
sahf
fcom
lahf
fsub
mov
out
fsub
sub
repz
shl
mov
rcl
stc
cdq
xchg
mov
push
inc
sbb
fs
cmps
enter
cdq
call
inc
push
cld
test
out
pop
xor
in
test
cmps
inc
les
xor
and
inc
pop
sbb
lods
stc
cmp
inc
enter
cmp
xchg
or
and
scas
mov
clc
scas
mov
les
mov
or
stc
push
mov
pusha
mov
xchg
sbb
mov
add
add
mov
lock
sbb
mov
and
xchg
retf
cld
icebp
mov
sub
lods
mov
nop
dec
cmps
or
mov
mov
mov
lock
or
lock
sub
or
push
movs
icebp
push
inc
rcl
fs
jo
add
sub
add
add
sub
mov
(bad)
rcl
ret
(bad)
sbb
and
inc
dec
and
push
cmp
mov
imul
dec
push
inc
loopne
adc
cli
inc
mov
shl
mov
pusha
jb
add
repz
xadd
xor
and
pop
sti
or
mov
mov
push
js
add
xchg
shl
and
or
ret
sbb
jmp
push
dec
adc
xchg
outs
mov
mov
dec
jecxz
(bad)
xchg
xchg
lods
ins
test
(bad)
adc
in
lock
mov
add
or
push
xor
inc
enter
shl
adc
xor
rcr
push
into
pop
int3
sub
cmp
stos
xchg
test
inc
add
push
jb
enter
push
jl
dec
xchg
popf
(bad)
ins
jo
ins
into
xor
int
pop
imul
int3
arpl
sub
and
pop
sbb
clc
mov
jno
out
xor
std
iret
push
inc
sbb
push
and
mov
ret
pop
mov
test
adc
mov
inc
push
mov
fidivr
ffree
cmp
retf
inc
push
sbb
xor
lock
pop
shl
mov
or
dec
pop
and
push
ret
xor
add
outs
cmp
pop
add
add
jb
inc
les
and
rol
push
sbb
push
je
ret
shl
push
icebp
inc
test
out
jae
mov
pop
add
bound
jg
icebp
jns
int
inc
rcr
lds
icebp
aad
enter
dec
mov
and
leave
(bad)
repz
add
repnz
xor
shl
aam
icebp
and
leave
push
xor
fimul
adc
mov
and
hlt
fsubr
das
sbb
xchg
out
adc
call
and
mov
pushf
or
push
mov
or
adc
or
add
mov
in
add
sbb
addr16
xor
and
fiadd
stos
lock
test
cld
mov
xchg
sahf
in
shl
sbb
lock
or
loope
jo
gs
or
sub
xchg
in
loop
enter
jns
mov
rol
jb
in
enter
xchg
mov
fs
es
add
cmovs
lods
rcr
sbb
out
inc
xor
xchg
fsub
fs
jns
mov
mov
sbb
cmps
pop
or
and
jne
add
fisubr
sbb
data16
add
jmp
leave
sub
es
or
cs
and
loop
in
int3
lods
sbb
add
enter
mov
adc
xchg
inc
and
and
mov
mov
mov
or
iret
pmaxsw
(bad)
ror
and
and
inc
rcl
imul
dec
cmp
push
mov
dec
leave
push
loopne
xchg
repnz
and
mov
(bad)
adc
es
repz
xchg
and
mov
hlt
xor
xchg
lock
sbb
or
aam
pop
mov
neg
inc
adc
dec
test
fdivr
dec
jb
jb
fcomp
leave
test
jns
jb
(bad)
or
xchg
sub
dec
in
fadd
in
fcom
in
sub
xor
inc
enter
mov
fsub
dec
aam
leave
test
xor
test
xchg
push
cmc
xchg
int3
mov
(bad)
mov
mov
and
push
imul
mov
jo
jp
and
mov
cmp
xchg
sbb
mov
mov
mov
dec
cmp
or
push
inc
add
jb
adc
icebp
add
movs
jb
inc
fwait
(bad)
loope
loope
mov
inc
jo
pop
cmp
clc
mov
ret
mov
and
mov
sbb
loopne
ins
sbb
retf
jb
out
add
cmp
sub
jge
stos
xor
popf
add
adc
test
rol
(bad)
les
mov
xor
add
or
leave
in
cmp
or
add
or
and
or
xchg
mov
sbb
in
push
mov
pop
inc
shr
fstp
cmp
mov
in
xchg
xchg
lock
adc
add
or
xchg
adc
adc
pushf
inc
jb
enter
jns
and
push
shl
inc
add
ficom
cmp
bound
pop
or
jmp
dec
lods
sub
xchg
or
jl
adc
rcl
sbb
lock
jo
jo
dec
jl
sti
clc
or
or
ins
or
loopne
mov
int3
mov
inc
int
(bad)
mov
xchg
inc
dec
push
xchg
push
adc
out
sbb
pop
data16
fs
movs
mov
int
sub
test
test
xor
ins
and
or
pop
xor
push
lock
movs
mov
cmc
data16
je
pop
and
xchg
jmp
sub
lock
xor
and
push
(bad)
fisub
xchg
cwde
dec
sbb
xchg
xchg
push
sbb
test
jb
add
fs
xchg
push
push
repz
push
dec
xor
dec
sbb
xchg
xor
mov
cs
xchg
or
shl
je
jmp
sub
adc
adc
mov
mov
rol
ins
dec
sbb
cmp
and
shl
shr
or
xchg
dec
mov
push
cmp
fimul
lods
dec
and
test
imul
mov
and
(bad)
and
or
and
or
jg
inc
icebp
ror
xor
add
mov
jmp
dec
scas
mov
sub
sub
push
cmp
mov
cdq
es
sub
adc
mov
rol
xchg
and
in
sub
inc
loopne
(bad)
sbb
inc
sahf
ins
pop
sbb
sub
or
xchg
push
xchg
nop
add
and
test
ror
sbb
lds
xchg
lfs
and
lock
repnz
pop
enter
nop
icebp
and
sbb
jae
das
adc
adc
rcr
add
or
icebp
test
adc
inc
(bad)
ja
adc
inc
mov
xor
cmp
pop
inc
or
repnz
call
xor
test
pop
cmps
repnz
and
dec
sar
adc
popf
test
mov
cld
inc
xor
popa
xor
fdivr
add
add
es
ret
mov
xchg
and
addr16
push
or
cwde
pusha
xchg
or
push
sbb
jno
imul
aaa
lods
dec
add
clc
mov
add
scas
(bad)
pop
xor
inc
clc
inc
sbb
xchg
xor
mov
mov
jmp
pop
ins
(bad)
jmp
ror
popa
ins
xchg
add
push
cwde
jmp
xchg
add
out
xor
xchg
sbb
inc
jecxz
jae
xor
dec
add
ins
and
pushf
dec
loopne
call
call
inc
test
pop
inc
call
mov
and
sbb
mov
mov
or
ret
retf
pop
dec
cs
mov
xor
imul
stc
and
xor
jae
add
xor
icebp
ror
jl
ss
call
out
aaa
ss
dec
cmp
xor
ret
test
imul
mov
dec
sbb
push
cwde
mov
xchg
in
icebp
cmp
cmp
sbb
pusha
int
ror
sub
lock
es
in
sbb
push
mov
push
pop
out
in
sbb
enter
add
dec
repnz
ret
fwait
bound
mov
aam
mov
mov
and
dec
loop
mov
pop
aam
mov
inc
repnz
repnz
jbe
pop
and
jle
(bad)
and
sbb
xor
inc
test
and
enter
cmp
aaa
mov
pop
mov
shr
loope
or
cmc
sbb
or
mov
call
mov
lds
pop
popa
and
ss
ins
jo
and
push
je
add
xchg
and
movs
jns
cmp
lds
or
test
enter
jae
cmp
or
and
and
xchg
add
(bad)
jp
sbb
sub
sub
hlt
call
mov
cmp
push
push
ret
push
or
test
jp
pusha
ficomp
in
pop
push
xor
jns
cmp
out
push
push
cmp
cmp
inc
aam
lea
push
adc
in
test
cld
inc
repnz
enter
inc
repnz
xor
push
in
jns
push
loopne
and
in
sti
xor
loopne
adc
pop
pop
mov
es
adc
js
push
add
push
inc
retf
or
(bad)
test
out
mov
mov
xchg
cmp
dec
or
sbb
xlat
mov
adc
sbb
xchg
xor
repnz
jmp
sub
add
icebp
xchg
xchg
inc
shl
scas
clc
out
sbb
sbb
in
sbb
push
stos
inc
icebp
pop
lock
jo
test
push
xchg
icebp
cwde
out
popw
ror
push
mov
mov
(bad)
loopne
cdq
in
repnz
add
out
and
dec
sahf
dec
loopne
call
imul
(bad)
and
pop
call
shl
fsubr
out
test
add
dec
pop
mov
stos
cwde
out
aas
nop
out
dec
dec
repz
pop
stos
adc
das
ja
test
je
sbb
scas
ins
mov
rol
xchg
mov
sub
inc
fdiv
sub
mov
call
add
sbb
mov
adc
cld
icebp
sub
inc
adc
add
sub
out
sub
push
xlat
cmp
pop
mov
les
sub
pop
xchg
add
adc
xchg
dec
jl
pop
dec
and
mov
xchg
xor
int3
inc
mov
mov
cld
out
xor
shr
das
aam
xor
pushf
rcl
xor
out
cmp
xor
dec
cmp
imul
in
dec
daa
daa
rcl
ins
movs
cmp
in
ins
jmp
repnz
icebp
xlat
movs
fadd
cmp
xchg
test
rcl
or
popa
inc
add
xchg
mov
movs
lock
repnz
icebp
sub
leave
stos
in
icebp
pushf
lock
dec
scas
xchg
icebp
cld
scas
xchg
or
xchg
lock
repnz
icebp
pop
ret
push
mov
lods
out
adc
shr
jns
mov
shr
or
sbb
push
stos
xchg
in
mov
sbb
cmp
cmp
test
fs
sub
lods
icebp
into
dec
pushf
xchg
lock
icebp
aas
push
leave
in
jl
inc
pushf
icebp
push
xchg
pop
inc
test
test
pop
or
mov
iret
inc
xchg
xor
add
or
and
out
cmps
call
rcr
or
ja
das
mov
test
adc
xor
les
mov
stc
push
mov
into
je
ins
lock
and
or
outs
push
sbb
sbb
in
dec
mov
popa
xchg
xor
dec
cli
push
or
dec
adc
xor
pop
imul
inc
ins
rol
xor
dec
cdq
or
and
adc
icebp
mov
mov
jo
arpl
cld
mov
lahf
xchg
sbb
push
cmp
xor
cmps
in
jo
fs
pop
cmp
sub
mov
outs
popa
nop
sub
pop
mov
jns
add
mov
jg
bound
inc
cmps
adc
and
dec
js
ret
lahf
retf
test
out
and
xor
push
xor
or
push
sbb
mov
cdq
ins
repnz
xlat
push
pop
lds
pushf
fstp
cmps
sbb
push
inc
pop
lea
sub
fsub
test
jo
cmp
push
add
enter
sbb
pusha
xor
pop
xor
pop
xchg
xor
adc
test
pop
sub
push
inc
cmp
pop
mov
sbb
add
push
repz
add
stos
push
push
or
icebp
rcl
push
dec
sub
stos
cmp
or
popa
ins
bound
sbb
mov
push
cmp
je
pusha
nop
sub
arpl
lods
mov
fnstcw
out
into
lock
cmps
fs
cmp
data16
stos
mov
adc
cmp
arpl
sub
bnd
or
icebp
int3
sub
sar
test
dec
cmp
into
inc
inc
iret
cmp
or
xor
xchg
mov
imul
lock
sub
test
jp
mov
inc
jo
jl
sbb
aam
clc
popa
mov
daa
inc
rcl
or
pusha
nop
sbb
lods
xchg
out
inc
cmps
fs
or
repnz
loop
fs
outs
ins
repnz
sub
add
cmp
aaa
and
and
imul
mov
imul
jno
outs
dec
sbb
dec
popa
xor
(bad)
hlt
js
jne
in
mov
jae
and
je
stc
test
and
jne
hlt
ja
sbb
mov
mov
dec
add
sub
dec
pop
and
mov
jb
and
dec
(bad)
push
test
jno
jo
inc
pop
inc
jo
outs
xchg
xor
and
cmp
ins
push
add
xchg
sti
pop
xlat
dec
or
popf
sbb
retf
mov
out
jns
lods
fst
fs
jp
jp
jo
push
add
rol
xor
pop
and
popf
mov
adc
adc
movs
test
jg
add
adc
cmp
mov
push
leave
add
movs
lock
jns
xor
sbb
repz
jle
and
movs
jno
adc
sbb
fwait
dec
or
cmp
inc
push
fs
cli
lods
mov
push
push
push
push
mov
test
xchg
dec
xchg
aam
mov
test
cmp
repnz
cmp
jns
xchg
rcl
push
add
mov
imul
int3
jae
pop
cmps
sub
jo
mov
push
mov
imul
mov
mov
cwde
dec
call
mov
jl
jb
add
cmps
test
pusha
out
pop
dec
xor
mov
sbb
add
test
loop
icebp
xchg
call
inc
imul
add
xchg
mov
mov
inc
cmps
in
nop
(bad)
and
jne
mov
movs
push
xchg
and
inc
pop
dec
repz
jnp
cmps
adc
popa
test
add
loopne
xchg
outs
adc
add
stos
rcr
enter
cmps
xchg
xchg
xchg
xchg
enter
push
ror
xchg
stos
xchg
xchg
mov
inc
adc
push
fstp
lods
(bad)
adc
push
ss
inc
add
test
inc
and
popa
adc
add
int
stc
nop
xchg
inc
cwde
push
inc
push
and
mov
rcl
sbb
and
repnz
jg
pop
xor
dec
cwde
pop
sub
mov
jo
sub
(bad)
mov
test
jae
sbb
sub
(bad)
leave
mov
test
inc
or
add
popf
dec
push
mov
sbb
mov
xchg
aad
mov
test
rol
les
adc
pop
adc
gs
push
mov
mov
sbb
cmc
adc
nop
mov
leave
push
add
mov
push
mov
or
cdq
mov
adc
rol
jle
push
cmp
movs
clc
fisubr
lock
dec
adc
dec
enter
pop
icebp
cmps
dec
cs
icebp
test
cmp
retf
push
stos
cwde
dec
fsubr
js
stos
pop
lods
and
xor
stos
int3
add
push
mov
stos
mov
(bad)
test
add
mov
cmp
push
enter
add
pop
mov
sbb
jmp
in
sbb
lods
inc
xor
cmps
test
jge
test
inc
cmps
mov
mov
lea
test
lods
rcr
pop
int3
sbb
ds
mov
mov
inc
sbb
xchg
pop
pop
adc
xor
lock
mov
cmps
in
add
sbb
test
mov
test
xchg
mov
dec
or
ins
or
mov
jecxz
fldenv
lock
lock
mov
mov
xor
ror
div
xchg
and
loope
adc
scas
call
int3
jno
fnstcw
out
mov
mov
mov
mov
in
movs
or
out
mov
xchg
shl
ret
mov
add
add
xor
mov
ret
sub
sbb
add
jno
mov
leave
enter
lds
mov
cwde
(bad)
mov
leave
aam
enter
mov
dec
int3
push
ror
das
xchg
add
push
shr
mov
jl
bnd
cwde
add
xchg
xchg
test
leave
add
pop
cdq
retf
test
inc
mov
xor
int3
test
(bad)
fst
xor
xor
movs
call
mov
mov
and
push
jb
dec
ror
push
jo
push
rcl
shl
mov
push
inc
ror
add
push
inc
aaa
into
mov
in
xor
inc
jo
pop
arpl
pushf
dec
sbb
rol
enter
mov
or
shr
fstp
xor
xor
adc
sbb
dec
add
fisubr
jne
push
xor
adc
ins
cmps
xchg
dec
xlat
mov
popa
xchg
or
aad
adc
ret
sbb
xchg
popa
push
repnz
pop
(bad)
cdq
sbb
(bad)
dec
push
jmp
sbb
and
ret
mov
jl
fimul
push
retf
add
inc
je
pop
repnz
fistp
outs
nop
dec
sbb
scas
stc
add
inc
fstp
mov
xchg
imul
(bad)
pop
push
mov
mov
push
or
sbb
inc
jb
sar
stc
and
and
jp
(bad)
or
and
ret
pshufw
add
dec
ffreep
call
pop
xchg
out
pop
dec
loop
imul
mov
pop
xchg
jecxz
jge
mov
pop
or
adc
and
xchg
lea
mov
push
rcr
xchg
in
aaa
push
and
mov
dec
or
push
out
adc
xchg
push
leave
push
ror
cdq
nop
and
mov
pop
pop
jno
xor
gs
sub
jmp
mov
pop
xlat
stos
push
or
dec
pop
jne
xor
sbb
jb
jmp
pop
push
stos
mov
mov
fstp
inc
or
das
mov
pop
out
mov
push
adc
je
mov
inc
push
shl
push
mov
or
push
mov
dec
add
in
mov
mov
and
cmp
and
add
(bad)
iret
mov
ficom
sub
repz
mov
adc
xchg
stos
or
or
pop
add
push
pop
les
out
pop
push
retf
mov
mov
mov
(bad)
or
pusha
(bad)
mov
cmp
cmc
xor
gs
xor
sub
and
sub
bound
neg
mov
push
shl
sbb
je
cld
pop
std
jb
sub
add
in
push
mov
and
scas
xor
and
push
loop
xchg
fisub
sbb
std
nop
push
inc
lds
test
pop
out
fld
inc
push
and
(bad)
mov
push
std
dec
aam
xchg
lea
add
mov
cmps
cwde
gs
out
adc
dec
cmc
repz
add
test
mov
cmp
ror
and
adc
ror
pop
or
xchg
jl
mov
xor
shr
das
xchg
inc
adc
out
aam
cmp
repnz
adc
fild
into
inc
and
add
adc
jns
sbb
mov
pop
inc
push
mov
add
and
jne
inc
jmp
adc
adc
or
adc
pop
or
dec
sbb
pop
pop
addr16
ror
fist
push
ja
adc
mov
in
rol
inc
push
add
gs
in
loop
inc
push
or
aam
dec
sbb
or
mov
xchg
rcl
call
sub
and
test
sbb
sbb
mov
dec
ret
cmp
pop
mov
clc
dec
(bad)
inc
mov
mov
add
mov
xor
mov
sar
ficomp
inc
mov
lea
or
add
mov
push
or
mov
dec
pop
jecxz
adc
lahf
inc
fadd
aas
icebp
ficom
(bad)
cmps
ds
or
dec
or
test
adc
call
sbb
enter
jne
inc
inc
fst
sbb
push
xor
fcomp
pop
or
mov
or
jo
dec
mov
fs
pop
push
push
push
push
cmp
sti
je
iret
pop
iret
push
xor
int3
xchg
push
daa
or
gs
sub
pop
into
and
pop
mov
cmp
dec
hlt
ss
cmps
xor
iret
xchg
int3
fwait
ins
in
dec
clc
rcl
aad
mov
pop
aam
mov
pop
add
push
(bad)
mov
or
mov
add
sbb
push
push
dec
(bad)
mov
cdq
jne
xchg
dec
xchg
pop
or
adc
mov
adc
or
cmovno
sbb
retf
ins
loopne
das
or
jno
mov
mov
sbb
rcl
add
lods
ins
arpl
jmp
xor
ficom
je
jmp
test
cmp
cmp
cmps
mov
adc
add
hlt
lea
icebp
fs
push
cld
pop
fdiv
js
cmp
jg
nop
add
xchg
adc
sbb
lock
xchg
mov
mov
or
test
xchg
cmp
mov
ds
cwde
mov
pop
push
or
pop
lods
adc
shl
and
mov
pop
add
or
rol
std
cmp
mov
add
into
in
in
into
xchg
and
movs
jb
push
fs
push
jl
xchg
mov
movs
mov
mov
mov
hlt
rol
or
sbb
sub
xchg
retf
cmp
mov
pop
pusha
je
test
mov
mov
xchg
retf
(bad)
enter
cmp
lock
aam
or
and
movs
jb
sbb
xor
pop
inc
inc
pop
pop
xchg
dec
sub
jmp
and
fdiv
in
les
pop
push
mov
mov
aad
int3
and
and
dec
sub
hlt
inc
movs
jb
in
or
test
jl
mov
xchg
push
cs
pushf
ins
mov
and
xchg
jb
in
aam
in
pop
repnz
add
xchg
push
cs
test
and
push
add
loopne
add
pmulhuw
mov
stc
inc
sbb
mov
sbb
loopne
in
stc
sbb
add
xlat
nop
or
nop
sbb
mov
dec
pusha
pop
push
mov
mov
pushf
xchg
mov
xchg
dec
sub
jb
retf
(bad)
add
movs
lock
add
xchg
push
cs
and
fs
dec
in
retf
mov
mov
enter
test
mov
and
enter
in
fsubr
inc
imul
(bad)
cmp
mov
cmp
clc
add
push
xchg
dec
arpl
je
jl
dec
ja
adc
lea
(bad)
and
shl
or
cmp
sti
das
in
push
or
jo
repnz
add
push
ins
push
stos
in
sti
push
cmps
and
leave
stos
in
sti
cmp
cmps
inc
les
or
pop
ins
sti
mov
sti
add
lea
add
movs
add
push
pop
push
outs
out
push
lea
add
pop
sub
mov
push
add
xchg
and
mov
inc
shl
xor
test
xchg
or
and
mov
sub
ins
sbb
dec
pop
fnstsw
rol
popf
ret
out
test
inc
and
cmc
xchg
movs
in
push
test
ror
ja
jmp
cwde
xor
loope
mov
ret
lods
sub
xor
xor
(bad)
pop
mov
jmp
std
sub
and
jge
inc
cmp
dec
dec
pop
inc
jmp
xchg
add
mov
push
pop
aad
sti
adc
mov
mov
rcl
push
pop
sbb
sbb
xchg
push
mov
jl
push
dec
popa
dec
test
sbb
and
add
scas
xchg
push
fs
push
pop
mov
jne
mov
sub
test
cmp
ficomp
inc
je
xor
shr
cmps
add
dec
sbb
arpl
mov
(bad)
pushf
sbb
cmp
xor
ins
push
nop
or
sti
push
enter
pusha
sti
in
mov
enter
leave
add
or
jl
push
or
or
adc
cli
adc
push
test
cmp
sub
aas
dec
sub
mov
repz
dec
cmp
mov
int3
jno
jo
pop
jbe
mov
push
mov
jns
push
scas
lahf
mov
sbb
mov
push
not
mov
and
shl
(bad)
cmp
(bad)
mov
push
lea
call
aam
adc
adc
and
sbb
jecxz
mov
xlat
adc
clc
sub
dec
add
add
ret
sub
add
inc
movs
test
je
inc
hlt
inc
fild
retf
cmc
jecxz
xor
xchg
inc
js
idiv
xor
mov
push
dec
loope
sbb
sbb
(bad)
outs
push
js
sub
stos
pop
and
adc
pop
add
and
gs
test
jle
aam
add
pushf
xchg
jecxz
mov
test
sbb
pop
sub
jne
(bad)
jb
push
imul
xchg
pop
leave
cmp
inc
sahf
and
les
jmp
stos
adc
test
mov
aam
add
cmp
jno
jae
xchg
sbb
jne
push
sub
sub
sub
sbb
jl
and
stos
jecxz
and
dec
leave
add
pop
sete
add
addr16
sbb
cwde
jo
jae
push
add
adc
inc
add
daa
test
and
mov
popa
add
mov
push
jns
dec
fbstp
cmp
adc
scas
pusha
push
enter
lahf
mov
jl
scas
test
push
xor
sbb
test
nop
xchg
add
xor
aas
inc
sub
sbb
push
pop
add
xchg
add
test
add
mov
and
je
pop
and
je
dec
xor
jb
xor
test
cmp
pop
push
dec
xor
sub
pop
mov
test
repnz
dec
imul
daa
adc
call
pusha
add
test
stos
pusha
sti
cvtdq2ps
adc
stos
push
push
das
and
jo
add
jmp
adc
dec
ss
inc
push
mov
mov
rcl
retf
mov
mov
movs
or
dec
adc
je
inc
pop
test
mov
(bad)
or
jo
adc
pop
out
xor
mov
pop
icebp
sbb
push
push
mov
adc
pop
mov
mov
movs
dec
out
ins
aad
retf
aaa
mov
push
jecxz
pop
mov
movs
xchg
cmp
cmp
jge
and
sbb
mov
int3
pop
mov
movs
inc
jg
test
dec
and
sbb
sbb
or
pop
sub
inc
cmps
mov
and
jo
sbb
xchg
xor
push
sti
sbb
sbb
push
xchg
push
(bad)
and
adc
pop
or
inc
jb
outs
pusha
(bad)
iret
ss
je
nop
mov
nop
push
mov
cmp
rol
test
xchg
add
enter
fimul
xchg
retf
mov
hlt
cld
mov
mov
in
outs
mov
jo
mov
xor
sub
cmp
and
push
push
mov
and
js
jmp
push
and
and
ins
push
push
adc
and
sbb
mov
adc
fs
imul
arpl
and
in
push
xchg
push
test
sbb
cmp
sub
mov
dec
imul
dec
pop
adc
xor
movs
sub
and
push
sbb
and
xchg
int3
adc
inc
inc
pop
pushf
and
scas
and
and
push
repnz
mov
inc
pop
jne
add
mov
imul
imul
stos
in
call
add
xor
sbb
je
pop
and
or
(bad)
es
adc
jl
mov
inc
xor
cmp
sub
test
pop
in
or
xor
pushf
cwde
mov
add
mov
jmp
pop
dec
dec
cmp
pop
sbb
std
dec
je
retf
or
inc
add
adc
iret
jne
mov
or
jmp
jno
add
or
push
jmp
pop
mov
adc
ret
adc
dec
shr
fisub
clc
sbb
pop
pop
jmp
mov
add
add
push
inc
mov
pop
jmp
fwait
cmp
sub
adc
movs
cmp
out
push
das
and
(bad)
pop
dec
inc
pop
mov
data16
and
sub
xchg
out
scas
xchg
loopne
dec
shrd
enter
push
sub
sub
mov
or
inc
adc
ins
and
inc
or
mov
scas
push
push
or
pop
and
sbb
shl
add
push
cmps
and
in
cmp
mov
xor
sbb
mov
or
mov
test
push
and
movs
mov
adc
nop
iret
jbe
cs
add
clc
inc
test
push
aaa
cwde
add
sub
mov
inc
adc
mov
aas
icebp
mov
and
cmp
adc
sbb
cmp
push
jecxz
push
outs
aam
push
popf
test
js
sub
add
fiadd
add
inc
outs
dec
dec
fwait
pop
cwde
inc
push
mov
(bad)
xchg
pop
pop
add
or
clc
xchg
mov
push
in
movs
cmc
add
gs
add
test
mov
adc
inc
and
add
push
daa
mov
dec
xchg
jp
adc
adc
icebp
push
or
int
fcom
ins
sub
loope
sbb
xchg
retf
push
cmp
movs
inc
out
pop
aas
and
out
xchg
dec
movs
jne
cmp
cmp
jnp
push
cmps
jbe
je
jge
mov
ror
add
ret
nop
jl
dec
mov
cld
rol
adc
mov
pop
or
and
push
je
and
sub
push
je
add
push
sahf
es
sbb
repnz
fsubrp
push
ja
mov
sbb
cli
and
loopne
or
add
stc
add
mov
or
push
or
sub
add
rcr
and
fisttp
add
(bad)
jle
aad
xor
pop
cmp
jb
cmp
or
add
shl
pop
sub
mov
mov
cs
add
hlt
les
push
sbb
or
push
dec
shl
jb
movs
sbb
sti
dec
push
add
push
ret
les
fimul
movs
inc
lock
inc
shl
xor
cmp
pusha
dec
dec
lock
stos
clc
in
loop
movs
add
pushf
fs
lods
xor
lea
mov
add
cmp
fild
test
int
adc
out
int
push
scas
cmps
mov
pop
sbb
dec
cmps
add
push
sub
and
or
pusha
xchg
mov
add
adc
out
xchg
jne
lea
imul
pop
add
gs
dec
push
test
mov
pcmpeqb
or
push
pop
inc
imul
or
pop
mov
adc
pushf
call
mov
pop
test
xor
lock
fwait
loopne
movs
push
call
movs
ror
sub
lock
cmp
in
pusha
cmp
lds
aas
mov
pop
mov
xchg
sbb
call
or
sub
pop
sbb
sbb
adc
scas
jge
jne
add
popa
adc
push
retf
fisub
mov
pop
inc
adc
gs
ja
shr
mov
jmp
dec
loopne
retf
lea
test
mov
ret
add
hlt
in
add
js
stc
xchg
add
mov
sub
xchg
adc
sub
add
in
xchg
xor
add
(bad)
xchg
sub
rol
cmp
retf
push
sar
stos
sahf
push
mov
retf
je
mov
jne
pop
mov
(bad)
hlt
cmps
push
ins
jmp
clc
and
jle
push
sbb
sub
push
pop
mov
jns
int3
sbb
shl
jmp
jmp
add
loopne
jmp
sti
je
mov
mov
adc
pusha
lahf
and
jecxz
popa
pusha
sub
add
xchg
call
lock
ret
jns
mov
push
mov
out
ss
mov
mov
ds
iret
rep
sahf
pop
jg
pop
aas
arpl
scas
lea
(bad)
call
xlat
push
xor
push
push
cmp
jbe
test
cwde
push
mov
and
aaa
pop
loopne
pop
outs
add
sbb
shl
add
xchg
dec
jb
cmp
push
add
cmovae
aas
clc
mov
adc
mov
sub
cmp
and
or
sbb
lods
mov
cmp
pop
sbb
leave
je
enter
adc
in
pop
mov
mov
jo
lock
and
or
ss
(bad)
std
rol
shl
adc
and
xchg
jle
pop
push
jmp
lods
jmp
xor
push
call
movzx
jmp
daa
ficom
aaa
push
sub
inc
pop
ret
sub
pop
ret
and
clc
aam
push
sub
add
arpl
jne
je
cmp
jae
or
out
mov
icebp
cmp
dec
xor
lods
shr
pop
mov
cmp
jb
sub
add
and
movs
sub
(bad)
mov
sub
fs
or
dec
and
xor
jo
mov
push
movs
fsub
dec
sub
cmp
or
pop
mov
pop
mov
loope
push
popa
pop
jle
push
add
cwde
sbb
icebp
cmp
jne
cmp
jb
dec
or
in
mov
icebp
aam
xor
stos
pop
cmp
cmp
call
loope
inc
or
je
and
sub
xor
add
sub
push
xchg
mov
xchg
clc
inc
stos
or
shl
sub
and
inc
xor
rol
fisttp
popa
push
js
pop
push
pop
dec
shr
mov
push
push
retf
pop
inc
pextrw
sub
inc
outs
jg
mov
jle
xchg
xor
aas
test
pop
jg
je
daa
inc
ret
push
and
or
add
inc
mov
pop
je
push
mov
mov
shl
jne
and
call
push
mov
push
and
sub
push
or
push
push
xor
shl
cld
mov
mov
aaa
inc
inc
cmps
mov
push
xchg
mov
adc
daa
mov
mov
call
xchg
mov
or
pop
push
adc
cmps
retf
dec
dec
mov
push
and
xlat
ds
inc
sub
(bad)
jmp
mov
retf
(bad)
dec
or
cmp
outs
xchg
loopne
call
or
mov
add
sbb
lds
std
(bad)
stos
mov
and
push
arpl
popa
loop
add
dec
sbb
add
jmp
add
(bad)
fsubr
adc
ds
fs
dec
adc
mov
jae
mov
fwait
cdq
mov
or
dec
shl
cmp
movs
mov
or
lods
mov
xchg
sbb
and
dec
adc
enter
call
add
(bad)
enter
sub
stc
shr
lea
popf
xor
mov
leave
adc
jo
mov
sub
push
adc
xor
fcomp
stos
push
leave
adc
fs
adc
push
bound
or
sub
push
and
adc
xor
jnp
aad
enter
call
pop
int3
int3
in
(bad)
push
arpl
popf
pop
xchg
lahf
clc
cwde
add
js
in
adc
pop
ja
pop
pop
dec
push
pop
jbe
push
pop
rcr
sub
push
push
push
jl
push
jno
sbb
es
js
add
add
push
and
mov
mov
push
and
jo
push
push
jmp
ja
ror
adc
sub
add
add
xor
xor
xor
inc
pop
xor
cmp
aad
cmp
fs
inc
rcr
dec
sbb
add
xchg
nop
push
inc
cmp
call
adc
sub
outs
add
fstp
shr
push
jo
out
inc
je
sub
jb
push
js
adc
mov
mov
(bad)
pusha
rol
and
inc
inc
dec
hlt
or
wbinvd
es
push
push
push
or
pop
fs
fs
sbb
pop
push
xor
imul
inc
or
jne
mov
add
(bad)
hlt
push
loopne
or
add
hlt
push
add
outs
sbb
mov
pop
push
das
aam
imul
leave
cmp
xchg
jbe
aas
repz
sbb
(bad)
ja
push
add
pop
out
mov
pop
cmps
mov
arpl
mov
mov
je
cmp
ret
push
dec
adc
(bad)
mov
xor
ret
dec
jl
dec
loopne
cmc
add
jl
aam
jp
push
sub
mov
(bad)
push
jns
mov
cmp
jae
jne
cmp
dec
and
sub
leave
outs
mov
pop
popf
pop
cli
pop
mov
loope
outs
dec
inc
mov
push
jge
div
cdq
or
or
or
ror
add
jb
push
loopne
sbb
sbb
dec
jmp
and
jmp
pop
push
lock
sub
push
fsub
dec
mov
or
imul
lock
jmp
cmp
je
cmp
ror
dec
jnp
or
mov
jnp
in
out
cmp
cmp
das
in
mov
or
xor
cmp
js
in
mov
call
cwde
dec
add
imul
outs
call
retf
inc
dec
data16
xor
push
mov
fs
mov
push
int3
jle
dec
leave
pop
mov
pop
cmp
sbb
popf
pop
(bad)
dec
cmc
push
sbb
clc
mov
movs
xor
add
test
sub
mov
les
push
and
sbb
cli
push
push
sbb
sub
push
inc
push
dec
or
mov
fldenv
rcl
xchg
add
fwait
rol
sbb
push
shl
mov
xchg
outs
dec
int
and
push
nop
add
jbe
je
pop
cmp
xchg
and
pop
mov
aam
stos
repnz
movs
jne
push
mov
stos
js
pop
je
sbb
call
sbb
je
dec
sub
mov
fisttp
jbe
dec
js
ja
mov
lods
or
out
inc
mov
cmp
popf
inc
lea
xchg
and
popf
sub
jle
jl
sub
pusha
cmps
test
xor
pop
add
jle
jmp
jb
jmp
dec
push
jmp
ja
test
adc
jmp
dec
and
stc
and
test
and
loopne
jne
or
add
enter
imul
fsub
or
imul
shl
outs
add
(bad)
popa
fdiv
iretw
inc
add
sbb
add
push
test
fcom
mov
leave
sbb
movs
and
ins
mov
bsf
mov
dec
xor
bound
mov
test
cwde
sbb
cmp
xchg
adc
cld
mov
cdq
xor
ja
mov
pop
or
aad
jmp
xor
idiv
add
cdq
popa
mov
adc
push
add
push
test
mov
sub
adc
(bad)
sub
mov
or
fcmovb
es
push
inc
(bad)
(bad)
xor
pop
push
add
and
add
test
cmp
adc
cmp
or
cs
or
push
pop
jmp
adc
mov
pop
adc
jne
push
cmp
ret
or
xchg
ss
addr16
and
jno
push
jl
push
jl
xor
fisttp
mov
pop
mov
push
jo
mov
jmp
sub
jge
cmp
jo
sahf
or
push
sub
outs
or
inc
enter
and
add
cmp
(bad)
sub
push
cmp
dec
les
xor
(bad)
scas
inc
mov
push
mov
mov
movs
xor
cmp
cs
rcr
push
loopne
sub
outs
pop
dec
in
cli
fild
mov
dec
cmp
sbb
and
sub
cmp
rol
add
adc
sbb
adc
mov
inc
call
cmp
jl
add
jne
int3
push
push
cmp
aas
xchg
fs
aam
ror
lock
div
lods
push
into
push
add
adc
or
sub
in
adc
inc
aas
pop
data16
call
leave
push
in
cmp
je
jmp
inc
sub
imul
pop
adc
sbb
or
hlt
not
push
lods
push
sub
scas
mov
jp
cmps
cmps
inc
add
out
xchg
aam
clc
xor
fmul
mov
ja
aad
in
cs
xchg
gs
daa
pop
sbb
sbb
adc
push
ja
mov
pop
movs
jae
pop
adc
stos
jle
test
retf
or
jbe
xor
nop
xor
dec
test
mov
cwde
push
xchg
sub
test
jmp
outs
adc
mov
std
mov
test
or
push
ret
mov
popf
dec
jle
push
push
out
lds
add
movs
retf
cmps
int3
ins
or
div
mov
mov
add
inc
inc
add
leave
into
mov
xchg
xor
stc
inc
aam
add
je
adc
sub
cmp
xor
mov
iret
adc
ror
adc
xchg
adc
lods
dec
ins
mov
sti
int3
adc
jmp
and
fild
jne
push
push
sbb
sub
pop
daa
test
push
movs
(bad)
(bad)
jl
pop
popa
cmp
fisttp
push
aam
and
push
sti
add
mov
pushf
dec
cmp
add
int3
push
loopne
sahf
test
dec
pop
adc
inc
sub
cmp
int3
sbb
aam
and
cmp
jge
std
iret
add
or
(bad)
cmp
jle
xchg
cmps
adc
pop
mov
jbe
or
push
add
jmp
inc
rcr
adc
inc
call
or
mov
popf
xchg
je
icebp
sbb
xlat
add
clc
sbb
jbe
or
loopne
setl
fst
mul
push
add
repnz
pop
jge
in
pop
cmp
adc
pop
ja
xor
mov
lock
in
je
or
jne
cs
push
xchg
paddsb
add
adc
sahf
cwde
cs
out
cs
cmp
call
lods
adc
jo
jne
stos
push
lods
sub
push
cs
je
and
nop
aam
sbb
push
jge
mov
xor
sub
push
stos
push
or
adc
test
daa
lods
add
add
pop
out
xor
add
or
test
stos
loopne
adc
pop
push
pop
outs
jg
xchg
mov
push
push
push
push
mov
bound
mov
pop
mov
mov
push
adc
dec
or
lea
inc
and
inc
xchg
aaa
cmovno
lods
pop
fcomp
add
and
aam
mov
popa
and
dec
js
or
movs
(bad)
cli
jo
shl
dec
adc
mov
add
sbb
lock
repnz
add
inc
push
add
push
push
and
(bad)
ja
mov
sbb
clc
cmp
aaa
adc
xchg
(bad)
aaa
es
dec
call
lea
inc
push
dec
cmps
cmp
jnp
loopne
inc
fsubr
popa
sar
add
xchg
int
push
adc
ror
adc
mov
and
xor
mov
and
jmp
test
xchg
imul
or
jg
mov
sub
mov
fs
mov
inc
inc
mov
lea
out
push
inc
sti
je
jo
mov
or
jo
lods
popa
out
call
adc
and
jb
xor
add
mov
mov
sbb
inc
std
scas
mov
or
sub
lods
movs
push
jl
dec
repz
push
push
and
cmp
mov
(bad)
or
mov
lods
cmp
jmp
jnp
pusha
push
pop
cdq
mov
add
cmps
adc
inc
std
out
add
dec
dec
sub
sbb
mov
dec
and
mov
lahf
outs
mov
mov
in
sub
imul
sar
mov
jp
pop
scas
data16
dec
ret
cmp
xchg
jmp
dec
sub
mov
fiadd
fdivr
or
or
mov
pop
inc
mov
sahf
je
xchg
rol
sar
stos
(bad)
pop
es
push
or
or
sbb
xchg
or
jle
add
and
test
outs
test
xchg
cmp
xor
(bad)
pop
mov
cmp
jne
sbb
ins
sbb
mov
or
test
pop
push
pop
mov
push
push
pop
in
inc
and
pop
and
fs
adc
push
mov
inc
aaa
or
in
push
push
and
pushf
sbb
(bad)
je
jne
cmp
cmp
aaa
inc
and
push
outs
adc
sbb
retf
das
cmp
cmp
and
sbb
pop
shr
fs
xor
cld
popa
pop
iret
push
pop
jmp
jo
bound
pop
leave
pop
add
push
xor
fsub
sub
lods
inc
cmp
mov
inc
and
lock
ins
arpl
push
sbb
sub
add
fsub
pop
je
or
pusha
xor
lock
pop
les
outs
or
cmp
cmp
daa
sub
pop
lods
inc
std
xchg
adc
cs
adc
pop
ds
hlt
sub
inc
mov
pop
and
lods
add
and
repnz
lock
movs
ins
in
dec
call
sti
push
stc
push
xor
in
cmp
xor
adc
dec
push
pop
adc
or
cmc
add
xchg
jno
jnp
sub
bound
retf
fs
mov
sub
jbe
je
clc
daa
inc
in
xchg
push
test
ud1
sbb
icebp
inc
enter
aad
aad
cld
dec
repz
sub
aad
cmp
aad
cwde
mov
clc
inc
xchg
retf
or
aad
cmp
hlt
fbld
or
clc
add
jecxz
mov
test
vmread
or
nop
push
jo
popa
jb
pop
push
sbb
pusha
xor
jb
movs
sub
mov
xor
sbb
mov
adc
inc
int3
ja
inc
mov
or
dec
outs
and
or
mov
xchg
xchg
into
(bad)
or
add
sbb
push
add
jne
dec
(bad)
jmp
pop
pop
mov
and
sub
inc
sub
add
sbb
or
stos
(bad)
and
or
pop
cs
aaa
mov
fchs
xchg
mov
mov
das
out
js
or
and
xchg
fistp
das
fscale
sub
fidiv
add
in
das
int3
sub
mov
inc
sbb
and
ret
sar
neg
sbb
inc
test
push
hlt
jg
fimul
mov
or
inc
or
mov
adc
add
inc
pusha
sub
ror
add
sbb
js
add
mov
in
sub
lock
nop
push
jno
outs
jmp
cmp
ret
cwde
stc
fist
or
pop
and
call
call
bnd
dec
inc
(bad)
inc
push
sub
test
std
mov
adc
mov
pushf
push
sbb
push
inc
or
adc
dec
inc
adc
cli
or
dec
cmp
icebp
cs
jmp
mov
push
jne
out
pop
addr16
mov
test
jmp
test
lds
push
push
leave
add
adc
loope
xor
sub
inc
adc
sub
push
cld
fs
xor
js
lock
jmp
jecxz
inc
jo
add
rcl
or
adc
xchg
loopne
mov
dec
or
cld
xor
mov
xor
ror
stos
jmp
and
and
pop
mov
and
jb
or
push
sbb
cmp
mov
cdq
loopne
fs
mov
stos
adc
push
and
sub
cwde
retf
jne
inc
or
int
repnz
jmp
adc
mul
or
cld
call
ja
add
adc
stos
pop
or
dec
loopne
or
sub
cmps
jns
sub
or
div
pop
loop
push
cmp
ss
enter
push
fs
pushf
fdiv
cmps
es
cmp
cdq
es
out
sbb
pop
cli
xchg
clc
out
shld
sbb
aad
pop
lahf
push
or
repz
mov
or
adc
adc
iret
adc
pop
nop
nop
jmp
pop
dec
ins
push
gs
inc
out
inc
pop
lods
add
fsubr
push
(bad)
das
inc
sahf
jge
sub
adc
and
sbb
loope
cmp
xor
loopne
jno
mov
xor
push
add
sub
jmp
loop
pop
sar
mov
xchg
push
jns
jmp
add
daa
xchg
pop
js
sub
gs
jl
mov
pop
pop
sub
ss
sub
dec
adc
ret
or
test
adc
push
mov
xchg
jbe
sub
fnstcw
inc
mov
push
or
jne
out
pop
or
fisub
or
test
and
jmp
data16
das
push
jp
inc
mov
test
js
or
push
xchg
cmp
je
and
(bad)
adc
pop
daa
xchg
jge
and
jecxz
in
or
adc
sub
sbb
(bad)
cmp
js
push
popa
lea
fwait
push
pop
and
adc
(bad)
cmc
mov
dec
and
or
pop
je
cmp
pop
sub
or
aas
xchg
xchg
xchg
dec
and
mov
clc
push
lods
pop
mov
and
shl
ror
inc
loopne
cmp
pusha
ret
stos
push
xor
js
push
pop
and
retf
push
jne
(bad)
xor
sub
xor
pop
ror
bound
jne
xchg
push
loopne
sahf
lock
inc
jbe
ins
jecxz
imul
js
in
or
lock
add
xor
lea
mov
push
adc
cmp
pop
shr
fmul
inc
inc
movs
fisub
add
lea
lea
push
xchg
loop
rep
(bad)
push
fcmovnbe
add
inc
pusha
mov
pop
add
inc
sub
bnd
cmp
ss
stos
pusha
pushf
fadd
pop
push
aaa
dec
in
fadd
push
dec
test
mov
or
cmc
mov
jl
add
sar
push
mov
push
rcr
pop
(bad)
sar
dec
outs
xchg
dec
add
pop
js
lock
das
mov
mov
lea
pop
lea
xor
loopne
enter
mov
lods
or
aas
sub
aam
pop
scas
jo
dec
mov
mov
mov
mov
jnp
and
stc
aaa
fcom
loopne
and
clc
je
in
mov
je
call
push
mov
pushf
pop
mov
mov
cmp
ins
or
sub
and
cmp
fwait
(bad)
adc
popa
scas
and
xor
mov
add
jne
mov
mov
cmp
or
jo
push
push
iret
sbb
test
lahf
mov
fadd
inc
add
sub
push
xor
jb
es
push
pop
jl
cmp
mov
lods
rcr
mov
jp
mov
jmp
scas
dec
inc
adc
add
loope
mov
jmp
ins
test
push
ins
mov
in
scas
xchg
adc
cmp
enter
mov
dec
mov
pop
scas
sbb
or
and
push
daa
data16
sub
cs
push
cs
jmp
dec
mov
add
daa
jge
jo
dec
cmp
sub
pop
xlat
arpl
cmp
or
cs
mov
rol
pop
shl
cmps
xor
fisubr
push
dec
add
add
sti
xchg
jns
icebp
push
mov
add
(bad)
mov
dec
jno
xor
sub
or
test
pop
push
mov
shr
pushf
pop
or
call
add
dec
mov
adc
rcr
sub
push
sub
push
ret
mov
xchg
js
mov
rol
dec
in
jnp
lods
fdivr
push
jbe
mov
xor
leave
push
xor
adc
push
pusha
into
(bad)
adc
push
xor
push
xor
add
xchg
loopne
or
int
add
je
pop
je
or
fist
jnp
aad
add
into
sbb
lea
in
push
(bad)
retf
dec
pop
mov
mov
arpl
(bad)
adc
aad
mov
mov
adc
inc
rcl
cmp
loop
push
mov
sbb
mov
sub
inc
or
jo
cdq
and
dec
and
iret
leave
and
xchg
sub
mov
mov
push
xchg
cmp
jmp
out
repz
test
adc
mov
and
cmp
cdq
dec
dec
and
cmp
sub
push
gs
push
fld
dec
or
sub
or
out
sbb
fs
sub
nop
dec
pop
and
push
es
adc
scas
sbb
bound
sbb
xchg
mov
cli
or
sbb
ins
fs
lods
xchg
int
add
mov
inc
call
adc
add
mov
cmp
add
aad
push
inc
inc
sbb
jae
mov
mov
popa
adc
inc
push
mov
fisttp
(bad)
aam
inc
adc
pop
jmp
mov
mov
cmps
mov
popa
pop
pop
or
sbb
sub
sub
lods
ins
not
jmp
inc
lahf
push
push
jge
inc
and
jo
push
mov
adc
jae
pop
and
mov
sahf
push
or
jbe
pop
lea
jnp
mov
jns
cmp
retf
mov
pop
push
mov
sub
fwait
or
jl
loopne
data16
fidivr
inc
push
push
or
adc
or
gs
adc
pop
ret
out
push
cmp
xor
sti
leave
push
mov
push
push
adc
cmp
les
fsub
aaa
call
and
les
enter
cmp
rcl
or
(bad)
out
test
ror
xor
lods
and
mov
sub
and
inc
and
xor
push
fucomp
or
inc
add
sahf
aam
test
ss
leave
dec
dec
add
xchg
add
add
adc
cmc
popa
cmp
cwde
dec
adc
jae
test
xlat
clc
pushf
cli
sub
cmp
or
pop
push
lea
push
add
dec
and
dec
in
mov
scas
dec
add
xchg
and
inc
push
shr
fsubr
mov
or
ss
cmp
adc
add
pop
pop
mov
movs
xor
test
cmp
and
adc
test
jbe
or
or
sub
fs
fdiv
mov
bound
sbb
dec
adc
jp
pop
cmp
dec
fisub
dec
mov
lds
add
imul
adc
push
cwde
dec
xchg
dec
mov
not
js
mov
sbb
jb
ja
shr
popa
int3
or
movs
movs
mov
ja
out
pushf
mov
adc
xor
or
out
mov
push
out
or
sub
adc
mov
xlat
mov
sahf
sbb
pop
push
add
adc
jl
cwde
or
mov
add
dec
test
cmp
add
dec
pop
enter
rol
aas
std
sub
or
xor
push
or
inc
test
pop
xor
push
outs
stos
mov
cmp
fisttp
jne
and
mov
rcl
add
push
mov
dec
mov
push
jne
dec
add
pop
inc
jne
loop
call
jo
inc
mov
rcl
or
cli
xchg
test
sub
rol
mov
fild
lea
jno
in
push
ficom
push
sbb
scas
rol
jmp
mov
adc
imul
dec
adc
jmp
push
jmp
jo
pop
sbb
jo
and
and
fcomp
jnp
dec
sub
jmp
fdiv
pop
fldenv
movs
cmp
dec
dec
mov
call
call
daa
cmp
icebp
in
arpl
or
sub
inc
cmp
or
fdiv
sub
dec
pop
lock
jmp
push
push
push
adc
outs
or
adc
jae
pop
dec
retf
(bad)
inc
in
(bad)
push
jne
cmp
push
fdivrp
adc
or
fisubr
fdivr
sar
push
je
and
jo
sbb
ror
cmps
pop
xchg
dec
rcl
je
out
mov
inc
shl
mov
popf
arpl
retf
gs
retf
sub
fadd
mov
hlt
(bad)
inc
aam
sub
sub
rol
cld
movs
adc
mov
mov
dec
fadd
in
cmp
lea
jmp
pop
cld
sub
int
adc
dec
adc
mov
mov
cmps
fcom
push
push
pop
call
mov
push
mov
lahf
std
pop
ss
jmp
push
aad
shr
push
movsx
push
push
xor
aam
fdivp
push
cmp
(bad)
lock
rcl
aam
add
fmul
adc
xor
and
or
adc
les
test
ror
int3
in
pop
cld
shl
ret
push
inc
jo
lods
xchg
sti
add
xor
inc
pop
shr
jmp
lea
push
push
pop
sub
push
aam
pop
ja
ins
rol
cdq
(bad)
fstp
out
push
sbb
lock
lea
idiv
adc
and
pop
loopne
call
jmp
xchg
mov
push
(bad)
daa
enter
sbb
adc
or
pop
int3
push
push
mov
lods
frstor
imul
push
mov
xchg
clc
cmp
or
cmp
ficomp
movs
pop
ret
outs
fist
fmul
mov
shl
mov
jb
mov
out
mov
loopne
addr16
mov
rcl
sbb
mov
enter
push
(bad)
push
mov
pop
loope
push
(bad)
rcl
and
and
inc
fist
es
mov
and
jnp
(bad)
jne
fst
jb
inc
fdivr
fistp
lds
jnp
push
cmp
mov
icebp
adc
fmul
mov
xor
aad
loop
sub
ins
ins
jne
in
cwde
pusha
shr
ins
jl
mov
enter
fadd
mov
icebp
stos
adc
dec
push
movs
xchg
or
xor
sar
clc
or
sbb
xor
in
sbb
and
and
mov
or
mov
inc
sub
adc
xor
or
pop
outs
jl
loopne
adc
fwait
adc
push
sbb
stos
add
dec
adc
mov
and
mov
xor
jno
pop
jne
mov
inc
fcom
and
sub
ins
and
inc
add
push
aad
repz
fcomp
lods
movs
js
movs
cmp
ss
ret
lock
adc
pop
retf
mov
inc
ins
ret
cmp
adc
out
dec
add
push
fs
inc
push
sbb
lods
add
test
jbe
movs
stos
cmp
push
mov
nop
hlt
add
xchg
xchg
xor
test
push
cmps
in
sar
fcomp
cmp
jne
sub
add
mov
xor
ss
mov
shl
mov
iret
push
call
imul
push
(bad)
mov
sub
fadd
push
push
sar
cld
adc
je
jle
sub
imul
sub
iret
xchg
add
add
lea
lods
inc
adc
dec
jo
sbb
stos
adc
jns
adc
sbb
jno
mov
dec
in
loop
and
test
scas
test
and
push
movs
and
pushf
call
ret
fiadd
mov
add
pop
adc
daa
les
push
fs
add
ret
jb
daa
adc
shl
add
out
ins
inc
(bad)
mov
enter
add
nop
mov
cmp
popa
sbb
popa
test
mov
ins
mov
rcr
cwde
stc
push
rol
mov
mov
xchg
jne
or
cdq
push
ret
add
or
lock
mov
fisub
cmp
pop
sbb
adc
cmp
mov
movs
jo
sub
jmp
and
jbe
xor
sbb
adc
out
adc
(bad)
push
add
lahf
out
retf
(bad)
adc
shl
sbb
repnz
push
(bad)
xchg
popa
imul
inc
pop
clc
jmp
push
jmp
fisttp
xor
pushf
cmp
aad
pop
cdq
sub
dec
or
add
pop
sub
dec
(bad)
push
mov
push
ror
mov
add
mov
shl
adc
xchg
or
dec
inc
lock
test
scas
ins
jbe
pop
sar
cmp
xchg
movs
push
not
jmp
movs
movs
mov
adc
sbb
gs
cwde
(bad)
jmp
jge
lea
ja
call
and
fdiv
jbe
sub
adc
hlt
repz
push
sub
stc
aam
jno
dec
adc
jmp
jno
clc
inc
push
(bad)
fiadd
sti
jmp
dec
jmp
mov
jmp
xchg
sbb
sub
inc
clc
cmp
and
retf
push
or
out
jmp
aam
lods
(bad)
mov
dec
lods
repz
pop
adc
sbb
inc
repnz
xchg
push
push
test
bound
dec
rcl
mov
add
inc
aad
xchg
dec
std
pusha
movs
cmp
pop
and
push
and
inc
fwait
jp
mov
addr16
add
sbb
das
push
xchg
jmp
sbb
mov
pop
adc
je
or
or
cmp
mov
push
rcr
jnp
out
fld
add
mov
aaa
iret
out
cs
push
fcomp
std
out
mov
daa
repz
cld
push
fimul
ins
mov
das
push
dec
jns
out
push
pop
je
sbb
push
ret
rep
dec
cmp
sahf
aaa
mov
mov
push
inc
dec
and
loopne
mov
(bad)
div
xor
iret
fistp
push
movs
outs
repnz
std
inc
push
or
and
mov
imul
push
popa
enter
cmp
mov
das
pop
dec
mov
movs
inc
push
dec
rol
ds
je
add
test
fs
mov
clc
cwde
xor
iret
in
or
adc
pop
aaa
std
cmp
ja
je
mov
jb
xchg
add
je
dec
enter
add
cs
or
stos
xchg
mov
fdiv
cs
pusha
aad
pop
clc
ret
mov
addr16
fdivp
(bad)
cmp
adc
mov
jmp
mov
lahf
hlt
add
popa
cmp
adc
inc
lods
(bad)
test
push
add
sbb
mov
(bad)
jno
lea
or
shl
and
push
loop
and
jg
cmp
pop
jne
call
(bad)
call
ret
push
call
in
pop
xchg
adc
fs
jg
mov
dec
mov
jle
adc
sub
dec
cdq
cli
fcomp
push
pop
into
ret
add
(bad)
cmp
stos
mov
loopne
fild
dec
add
sub
mov
push
out
push
ror
loope
cld
jne
xchg
shl
mov
mov
push
adc
dec
sbb
adc
add
mov
dec
ja
xchg
adc
xchg
ret
or
test
les
sbb
dec
sbb
adc
mov
pop
mov
not
inc
lock
xchg
xchg
mov
ret
push
mov
fwait
jo
stos
fwait
int
cs
and
xchg
pop
pusha
sbb
imul
or
test
mov
inc
or
cdq
sti
push
shl
and
mov
ror
jno
int
ins
mov
inc
mov
(bad)
rcl
add
ja
xchg
adc
and
adc
out
pop
mov
sub
or
cld
mov
daa
or
and
lds
mov
xchg
inc
push
in
sbb
xor
or
ins
test
push
adc
and
ds
adc
cmp
push
xor
pop
xchg
lock
hlt
inc
jns
mov
xchg
adc
add
dec
or
adc
sbb
movs
mov
lahf
ror
adc
jne
fcom
add
or
push
add
mov
mov
add
sbb
and
test
sbb
jmp
add
stos
scas
push
mov
data16
xchg
retf
xor
cmp
add
test
fstp
mov
inc
sub
sbb
sbb
dec
and
jo
push
ret
in
pop
mov
adc
push
in
pop
jge
add
adc
rcl
add
xchg
jl
pop
add
or
out
pushf
xor
adc
adc
sub
inc
loope
ja
(bad)
adc
cmp
lods
mov
push
push
push
sub
cmp
push
mov
mov
jo
adc
and
ds
nop
std
xchg
pop
jle
mov
jmp
(bad)
nop
mov
xor
cwde
inc
inc
mov
ss
mov
push
and
call
adc
inc
nop
push
jge
xor
dec
or
add
add
and
and
jmp
add
add
jp
lods
ss
sub
loop
ins
test
and
dec
mov
xor
sti
and
dec
ficom
sbb
data16
loope
add
push
clc
stos
lea
xor
add
adc
xchg
push
sub
jbe
mov
mov
ja
adc
aas
and
add
sbb
push
push
xor
enter
dec
push
cmp
(bad)
lds
push
push
inc
mov
mov
call
js
fwait
js
mov
lds
jmp
mov
fist
(bad)
push
arpl
jne
les
cmp
outs
or
scas
mov
jg
push
sbb
adc
push
push
test
xchg
jne
lock
stos
xlat
call
fs
mov
mov
sub
dec
and
jnp
sbb
fadd
push
add
lea
out
inc
mov
push
or
bound
xor
jecxz
cmc
ja
inc
sbb
shl
data16
inc
jmp
sub
dec
test
push
push
dec
shr
jl
leave
shr
inc
mov
shl
test
or
mov
ss
(bad)
je
add
or
out
cmp
sub
ins
adc
and
retf
into
hlt
je
or
sub
xchg
adc
call
cmp
xor
out
dec
add
je
push
mov
fst
fsub
int3
data16
rcr
jbe
or
pop
or
add
add
loopne
xor
push
in
add
repz
lea
mov
dec
clc
inc
aaa
or
and
iret
inc
inc
inc
je
inc
xchg
xchg
in
jp
je
push
push
cmps
and
ins
inc
in
rcl
cmp
xor
repz
in
adc
and
repz
leave
push
add
sbb
adc
pusha
cmp
adc
add
inc
jge
fild
test
add
and
fiadd
mov
pop
adc
or
fwait
mov
mov
cmp
add
sub
adc
mov
push
xor
ja
rcr
add
test
pop
add
dec
add
adc
add
js
lods
sbb
scas
cmp
inc
lock
xor
or
inc
mov
push
adc
push
pop
add
fsub
push
ret
clc
and
sbb
in
add
pop
(bad)
ss
pusha
add
(bad)
popa
add
jae
fisub
popf
sbb
adc
add
inc
ret
jmp
repz
clc
adc
adc
imul
inc
xor
add
stos
cmp
adc
or
bound
pop
mov
cdq
push
sahf
mov
and
mov
scas
push
adc
(bad)
out
pusha
mov
add
mov
mov
sub
outs
push
lds
pop
lods
cmps
mov
inc
daa
fwait
sbb
push
test
sbb
push
xlat
jecxz
sub
ret
stos
xchg
adc
jbe
mov
cld
xor
dec
sbb
jecxz
push
inc
or
mov
dec
outs
fsubr
push
lea
inc
cwde
loopne
ins
inc
push
add
push
sub
mov
mov
aad
push
and
jbe
cmp
push
xchg
xchg
ret
ss
leave
or
dec
call
(bad)
mov
add
outs
retf
mov
rol
(bad)
cmp
fs
xor
add
call
cmp
dec
arpl
enter
stos
xor
inc
fcomp
je
inc
push
loope
mov
test
shl
mov
mov
pop
jg
xchg
mov
mov
in
imul
sbb
xor
rol
cmp
dec
mov
xor
mov
jns
lock
adc
in
sub
(bad)
call
sbb
into
shr
aad
call
jo
jle
dec
push
aas
cmp
mov
je
cmp
mov
(bad)
je
retf
mov
aad
pop
jle
add
push
adc
ror
es
inc
or
xor
add
jne
jmp
loopne
push
mov
pop
xchg
pop
push
jecxz
rcr
cmp
ret
push
je
mov
leave
push
ror
movs
(bad)
js
int
push
or
seta
cli
add
call
call
adc
push
in
and
cmp
or
ret
sub
xchg
(bad)
outs
test
mov
cmp
xor
ins
adc
xor
mov
int3
js
loopne
push
inc
fs
or
push
js
jnp
or
into
dec
xor
shl
xchg
loope
or
pop
mov
jl
repz
fadd
push
test
adc
push
mov
or
rcr
ret
add
ss
(bad)
ins
clc
push
dec
xor
push
and
mov
adc
jmp
mov
pop
mov
dec
sbb
add
or
add
push
inc
mov
arpl
in
push
jmp
lea
js
mov
mov
fisub
jns
mov
movs
jbe
jl
stos
dec
sahf
and
mov
push
inc
add
jge
or
adc
shl
jbe
jle
ffreep
jo
lea
jmp
cmp
sbb
cmp
add
sbb
adc
scas
test
inc
push
push
cmp
into
mov
arpl
pop
(bad)
mov
shl
jl
xor
jo
clc
or
dec
or
in
in
mov
pop
add
sbb
cmp
xchg
mov
xor
sub
mov
xchg
inc
std
cmp
or
jb
push
add
mov
mov
push
add
out
div
inc
inc
jae
sub
in
std
lea
mov
inc
or
add
shl
mov
scas
push
scas
jno
cmovnp
push
cmc
ror
movs
scas
leave
inc
or
(bad)
mov
jbe
loopne
aaa
xchg
mov
inc
sub
add
setle
data16
adc
add
fld
push
idiv
add
sbb
aam
xor
or
mov
pop
xchg
push
jp
xchg
add
push
mov
mov
push
out
push
icebp
xchg
jmp
push
es
es
mov
inc
or
jae
ja
pop
cwde
inc
or
push
aam
xor
jmp
out
(bad)
jp
daa
lock
xchg
push
mov
jo
gs
repnz
jp
cmp
jmp
(bad)
out
sti
clc
loope
pop
sub
dec
adc
add
(bad)
imul
pop
pop
pop
jne
into
out
mov
and
mov
mov
and
and
sbb
xor
push
js
shr
push
clc
mov
in
pop
push
jle
inc
xor
daa
je
test
ror
imul
and
sbb
fwait
movs
push
imul
xchg
sar
push
(bad)
and
cmp
aam
in
mov
xchg
mov
add
rcr
mov
jg
sahf
movs
sti
pop
and
mov
push
lds
and
sbb
or
add
jle
data16
and
xchg
pop
push
js
fidivr
aad
rol
or
add
dec
adc
(bad)
push
push
sub
push
mov
pop
push
xchg
ret
push
mov
jbe
jns
push
cli
ret
test
cmp
pusha
bnd
push
and
xor
pop
cmps
add
cs
pop
sbb
shr
dec
and
test
xor
jbe
aas
inc
jmp
jne
xor
push
push
xor
sbb
and
cmp
push
sub
adc
jmp
pop
aaa
pusha
fwait
or
add
ins
push
dec
call
dec
icebp
clc
adc
xchg
push
ins
ins
mov
hlt
dec
sub
inc
iret
aam
jmp
inc
sub
sbb
jl
add
loopne
clc
test
jo
dec
push
(bad)
mov
xchg
pop
xlat
jo
sub
js
xchg
cwde
pop
cmp
cmp
clc
enter
mov
or
pop
push
xor
les
je
or
sub
ins
add
call
jecxz
shl
loop
inc
or
pop
inc
jecxz
fstp
(bad)
les
je
jecxz
loopne
sub
jecxz
in
mov
push
jl
add
imul
inc
jae
(bad)
rcl
cmps
movs
lods
outs
movs
js
add
dec
mov
adc
cmc
xor
shl
inc
inc
shl
push
pop
dec
shl
ins
jo
stos
iret
xor
mov
test
mov
mov
jb
pop
lods
mov
mov
mov
retf
in
mov
mov
in
in
lock
jb
clc
cld
add
mov
or
adc
retf
in
sbb
and
jb
pop
cs
xor
cs
retf
in
inc
inc
dec
dec
in
mov
pop
pop
cs
retf
pusha
fs
jb
je
jl
jmp
pop
inc
mov
pushf
sub
adc
add
dec
mov
xlat
or
cmc
mov
mov
mov
pop
in
les
push
sbb
daa
jo
jns
dec
mov
adc
push
mov
test
fst
sar
jne
test
xchg
inc
sub
popa
or
(bad)
movs
imul
adc
xor
push
and
inc
sbb
loop
mov
mov
imul
mov
push
mov
mov
jns
mov
dec
add
enter
add
push
mov
or
inc
ret
sbb
mov
push
sbb
xor
call
ret
lock
jmp
loopne
lock
push
add
repnz
mov
mov
jmp
add
loope
jge
xchg
cmp
sbb
cmp
adc
dec
sbb
xchg
mov
scas
add
add
inc
clc
add
xor
(bad)
hlt
adc
push
xor
lea
shl
shl
ds
fs
das
retf
and
xchg
push
and
jbe
(bad)
cmp
jle
(bad)
fld
icebp
fdiv
jmp
in
jmp
ss
mov
push
sub
xor
or
movs
stos
mov
mov
pop
call
sub
xor
sbb
or
and
bswap
pop
imul
pop
mov
fs
es
add
imul
and
inc
mov
cmp
sub
or
ret
add
cmp
fcmovnbe
stos
call
sbb
dec
clc
je
into
(bad)
fcom
ret
push
jle
mov
ret
(bad)
cmp
or
movs
bound
jl
jmp
in
or
out
jmp
imul
xor
cs
in
mov
jl
jmp
clc
jmp
test
jle
dec
mov
jno
push
mov
and
test
pop
add
xchg
aam
push
xor
out
mov
cmps
rol
inc
fistp
jecxz
(bad)
leave
ret
or
or
in
mov
gs
jge
inc
out
pop
ret
cmps
test
sar
cmp
sub
jb
dec
dec
add
add
in
sbb
or
pop
push
jnp
or
lods
adc
ja
cmp
xchg
adc
or
add
or
jno
std
and
or
and
adc
retf
sub
sub
xchg
mov
mov
call
int3
add
mov
add
and
loop
outs
pop
loopne
ds
push
addr16
mov
mov
in
or
add
push
push
fnstcw
jmp
sub
sub
pop
sbb
and
mov
rcl
fist
mov
lods
addr16
shl
sbb
pushf
stos
fsubr
xchg
test
shl
or
adc
sbb
test
inc
dec
push
aam
xchg
mov
jl
adc
add
loopne
and
xor
les
push
pop
mov
call
inc
dec
sbb
pop
(bad)
in
and
in
int
cmp
popa
mov
pop
imul
xchg
xchg
loopne
push
lds
cld
cmp
ret
div
dec
mov
sub
(bad)
call
jmp
jge
mov
test
mov
sub
popf
ss
push
sub
or
jns
js
inc
sbb
in
ror
xchg
pop
push
jl
pop
aaa
rcr
cmp
or
sbb
loope
jmp
sahf
iret
jo
dec
out
cmp
pop
test
push
hlt
jmp
fistp
add
mov
jmp
adc
adc
xor
or
adc
inc
(bad)
mov
sbb
popf
jl
imul
rcl
and
and
pop
push
outs
push
adc
fcmovb
jo
out
call
out
dec
ror
cmp
jl
add
in
psubq
dec
xchg
inc
popa
add
adc
icebp
jl
cmp
mov
xchg
pop
dec
sub
and
dec
and
out
sbb
je
dec
je
dec
mov
or
dec
push
in
std
add
dec
jae
adc
or
and
popa
dec
test
sahf
cmp
out
add
das
add
pop
(bad)
call
sbb
pop
jne
push
push
cmp
jmp
and
ret
repnz
add
xor
adc
mov
mov
pop
(bad)
cmp
adc
lock
in
movs
aaa
mov
mov
push
ins
sub
push
jo
sar
add
mov
ss
pop
dec
jb
inc
or
add
sbb
popa
sbb
jmp
dec
pop
retf
or
pushf
test
dec
cmp
dec
mov
jp
push
push
xlat
xchg
sahf
jg
daa
cmp
les
retf
inc
mov
sbb
add
pop
dec
retf
inc
add
fs
mov
nop
out
lods
aad
and
push
cmps
and
sub
and
cs
in
mov
js
rcl
and
pop
hlt
mov
or
inc
bound
jmp
inc
shr
or
push
xor
xchg
loope
mul
mov
and
cs
jge
push
push
mov
loopne
(bad)
out
jo
xlat
sub
sbb
cmp
sbb
or
sub
bound
loopne
and
inc
sbb
cs
mov
repnz
ds
sbb
sti
jge
add
sbb
add
jmp
pop
mov
shrd
ret
ss
jne
mov
int
xor
not
pop
sub
dec
jl
jmp
mov
bound
pusha
jg
add
pop
mov
mov
in
add
cdq
sub
cmp
dec
cdq
and
xor
or
out
add
adc
ret
shr
cld
jge
push
pop
cmp
cmp
mov
or
push
adc
sti
sbb
push
pop
fidiv
cwde
in
and
and
push
push
or
inc
fwait
pushf
add
or
je
adc
add
adc
and
sbb
retf
push
test
outs
mov
outs
add
dec
push
push
push
pop
add
sub
jne
jmp
movs
sub
loope
lods
imul
iret
sbb
fs
adc
in
repz
push
sbb
or
jnp
jge
adc
mov
sar
popa
scas
ret
or
jb
int
pop
mov
mov
les
cmp
je
sbb
sbb
(bad)
mov
(bad)
loopne
imul
dec
push
xor
mov
mov
enter
add
xchg
sbb
arpl
mov
mov
aam
jne
in
mov
add
pusha
push
pop
lods
sub
xchg
add
mov
cmp
mov
jmp
movs
shl
xor
mov
mov
adc
(bad)
fcom
sub
cs
adc
imul
mov
mov
sbb
xor
fist
xchg
ret
cmp
out
lock
or
or
inc
pusha
retf
in
mov
adc
xchg
xchg
in
pop
or
and
jns
add
or
xchg
(bad)
inc
push
test
jmp
xchg
stos
clc
or
cld
jb
pop
mov
ins
dec
mov
cdq
or
adc
fs
loopne
xor
dec
xor
lahf
add
gs
test
inc
jne
dec
pop
ins
nop
out
sbb
push
mov
pusha
enter
push
es
adc
adc
and
mov
pop
pop
in
push
pop
or
pop
fidiv
loope
mov
mov
add
add
cmp
test
inc
popa
sub
test
mov
add
jo
addr16
mov
and
(bad)
mov
inc
push
in
(bad)
(bad)
add
es
xchg
imul
push
adc
xchg
sbb
outs
sub
jae
inc
adc
push
add
rcl
in
nop
add
fdivr
jo
or
jno
sbb
mov
sbb
inc
and
cwde
jge
hlt
fst
sbb
jle
sbb
inc
rcr
cmps
test
data16
(bad)
cmp
push
push
push
sbb
loopne
push
cdq
adc
push
loopne
add
sbb
mov
or
adc
or
mov
jmp
arpl
adc
rcr
xchg
mov
inc
ss
push
lea
mov
cmp
push
aam
pop
popa
xchg
add
inc
or
daa
bound
adc
pop
push
sub
rcr
cmp
repnz
xor
mov
or
xor
mov
out
cmps
add
or
mov
sub
sbb
addr16
(bad)
out
lods
push
add
retw
cmp
inc
dec
and
push
or
adc
pop
xchg
push
cwde
gs
daa
stos
fnstenv
pop
or
and
pusha
jecxz
cmps
inc
in
ret
push
cmps
jb
or
or
dec
scas
jb
push
jo
mov
std
pop
jmp
and
pushf
jecxz
adc
push
push
cmps
int
push
fld
dec
or
sbb
lods
inc
xchg
cmp
retf
and
nop
arpl
push
cmp
xor
xchg
and
sbb
xchg
or
cmps
daa
cmps
pop
jb
xor
add
xchg
xchg
and
xor
adc
xchg
adc
test
add
adc
xchg
sub
inc
xor
xor
mov
icebp
lahf
and
xor
and
cdq
mov
cmp
jnp
adc
sub
bound
cmp
punpckldq
fisttp
and
adc
in
in
xchg
mov
arpl
dec
hlt
xchg
enter
mov
in
dec
or
or
enter
test
pop
and
adc
fadd
add
stos
imul
add
rcl
sbb
mov
cmp
jmp
cmc
and
cmp
outs
mov
fmul
lods
add
jns
add
cmp
push
daa
mov
push
loopne
out
pushf
push
push
xchg
add
mov
inc
mov
jb
or
cmps
nop
sldt
sub
jne
xchg
push
mov
push
ja
mov
in
aaa
mov
push
dec
outs
jne
and
dec
bound
mov
call
push
push
ss
(bad)
pop
adc
add
loopne
dec
adc
cmp
mov
sbb
mov
cmps
add
lea
cmp
mov
mov
push
inc
and
and
jp
xor
pop
inc
imul
sti
lahf
adc
inc
pop
loop
lahf
push
mov
or
enter
punpcklwd
std
rol
enter
mov
pop
cs
sbb
enter
loopne
pop
scas
ret
(bad)
sar
add
fisttp
dec
push
cs
adc
add
js
sbb
or
shl
adc
sub
repz
mov
fsub
aam
mov
call
in
mov
arpl
daa
sbb
cmp
les
xchg
je
xor
inc
in
mov
mov
movs
pushf
cwde
(bad)
dec
fdivr
and
or
fst
adc
lods
xor
sbb
lods
cmp
sbb
daa
dec
rol
jecxz
or
enter
mov
push
cmps
add
int
mov
mov
adc
mov
sub
mov
aas
cdq
fadd
push
xchg
mov
inc
xchg
pop
fist
fdiv
ror
xor
pushf
add
cmp
ja
loopne
les
dec
scas
cdq
push
jne
iret
adc
push
out
outs
enter
nop
out
add
call
pop
mov
(bad)
je
jmp
add
lods
and
in
push
scas
jmp
jmp
and
push
loop
mov
ds
pop
sbb
pusha
mov
or
daa
mov
jl
xor
jp
nop
adc
dec
or
jmp
call
sbb
sbb
fcom
jp
ins
movs
iret
imul
push
je
sub
sar
out
(bad)
adc
arpl
or
shl
dec
enter
and
xor
dec
cld
fisub
mov
adc
test
add
sar
(bad)
jle
mov
mov
and
ret
mov
imul
imul
xchg
sub
or
push
(bad)
fmul
fs
xchg
push
sbb
fadd
dec
and
and
fld
push
in
mov
std
sub
rol
xor
es
mov
das
jne
xor
clc
mov
lock
into
pop
pushf
add
push
mov
cld
push
or
leave
cli
ins
ins
jp
mov
test
test
lds
jbe
loop
adc
std
push
ja
les
inc
and
scas
mov
or
cdq
add
push
mov
pop
sbb
sbb
fisttp
mov
adc
sahf
(bad)
xor
out
loope
cmp
mov
mov
rcr
fcmovnb
mov
test
es
adc
sbb
pop
(bad)
pop
movntps
(bad)
(bad)
adc
or
jmp
ins
leave
adc
mov
or
inc
dec
dec
dec
in
jb
lock
jae
push
sub
retf
shr
add
ds
pop
mov
outs
pop
dec
lock
mov
sbb
enter
cmps
test
mov
mov
adc
mov
and
popa
jecxz
daa
adc
push
mov
ja
sbb
and
or
fsub
pop
std
mov
mov
daa
dec
loopne
fs
outs
and
and
mov
pop
stos
imul
test
or
(bad)
pop
sbb
add
fsub
mov
mov
fdivrp
repnz
imul
pop
fist
lds
add
pop
push
bound
jns
out
jge
mov
sahf
shr
and
or
and
and
jne
popa
loopne
add
sahf
dec
add
cmp
cdq
push
in
xor
and
inc
xchg
dec
mov
inc
dec
ror
mov
retfw
fadd
add
sbb
push
movs
ret
cli
pop
inc
sbb
push
mov
pop
or
imul
pop
jmp
imul
push
(bad)
dec
mov
or
add
push
add
add
mov
inc
movs
outs
enter
sbb
xchg
test
push
lock
ficom
repz
lods
dec
add
or
jbe
mov
xchg
jns
adc
add
call
fsub
bsf
jo
or
push
jg
mov
mov
cmp
adc
sub
dec
fs
push
xchg
mov
ds
pop
mov
ins
fdiv
repz
repnz
xor
or
pop
imul
inc
les
je
inc
pop
or
and
fnstcw
(bad)
push
sbb
test
mov
push
mov
mov
sti
inc
mov
les
mov
mov
add
(bad)
push
or
je
cmp
sub
les
add
dec
clc
pop
push
mov
data16
adc
jmp
inc
fwait
mov
jmp
ss
addr16
shl
or
sbb
sub
mov
call
sbb
sub
adc
call
pusha
sub
fnsave
lds
xchg
xor
jne
pushf
inc
and
add
xor
add
or
add
dec
fwait
jno
sub
inc
bound
(bad)
out
sub
adc
movs
cmp
add
push
push
and
arpl
dec
adc
nop
(bad)
popf
mov
inc
sbb
ret
mov
movs
add
loopne
cmc
mov
pop
or
not
add
push
loop
ret
pop
push
sbb
xlat
mov
adc
test
fcomi
xor
push
inc
inc
ficomp
or
push
mov
jo
ret
cld
es
and
cmps
or
dec
jno
pop
les
(bad)
loop
xor
mov
pop
shr
dec
test
in
rcl
and
fcomp
outs
or
lahf
xchg
or
cmp
jg
sbb
jle
push
or
fldenv
pop
inc
lea
sub
ret
test
std
jg
ds
sub
cmp
jle
push
pop
jo
pop
sbb
push
jb
push
pop
cmps
adc
pop
inc
cli
rcr
scas
(bad)
adc
dec
clc
push
nop
add
loope
adc
cmp
mov
movs
mov
shl
in
in
add
xchg
je
sbb
push
dec
jne
add
push
add
sub
add
cmp
dec
push
movs
fidiv
jecxz
and
cmp
cmps
das
add
sub
dec
dec
or
push
in
cwde
xchg
jo
mov
or
test
xchg
nop
std
outs
or
sbb
inc
lds
push
scas
jbe
cmp
repz
mov
xchg
jmp
push
fisubr
inc
mov
outs
pop
test
or
loop
or
xchg
xor
ret
jp
xor
fmul
stos
pop
daa
repnz
mov
xlat
adc
aas
dec
and
iret
nop
lock
xchg
cmp
cmp
mov
shl
adc
mov
(bad)
fsubr
xchg
add
sbb
jne
cld
fnstenv
fcmovbe
pop
xor
pop
or
nop
pusha
push
cmp
mov
adc
retf
(bad)
(bad)
jmp
sub
add
sbb
pop
mov
lock
aaa
or
push
push
test
mov
aaa
or
jo
xchg
adc
adc
sbb
pushf
jb
fsubr
mov
or
and
shl
adc
je
loopne
pop
call
or
fisttp
daa
or
rep
or
add
dec
and
loopne
jg
add
div
jo
pop
pop
push
add
and
iret
sbb
mov
sar
pop
cmp
es
movs
sbb
add
fnsave
mov
push
fadd
lock
cmp
daa
dec
and
loope
js
sbb
adc
mov
push
(bad)
sub
aad
arpl
popa
cmp
fld
sbb
cdq
(bad)
js
clc
dec
mov
xor
nop
pusha
push
mul
std
sub
test
mov
ror
or
cmp
leave
sbb
xor
shl
and
je
(bad)
fwait
popa
mov
dec
je
sub
je
mov
and
or
add
cmp
xchg
xchg
xlat
iret
or
add
push
int
adc
adc
jne
push
push
iret
push
push
adc
loopne
mov
pop
push
ret
cmp
xchg
jg
ins
or
js
push
or
xor
je
dec
ficom
adc
sbb
in
cwde
movs
xchg
lds
pop
and
scas
in
loope
mov
frstor
jmp
lods
adc
add
push
mov
sbb
pushf
(bad)
cmp
cmp
sub
push
add
call
add
dec
movs
xor
fwait
stc
sbb
pop
out
ds
or
je
push
xor
push
sbb
and
adc
cwde
je
fcomp
mov
cmp
add
jne
pop
sub
mov
jne
retf
sub
or
pop
arpl
test
not
(bad)
push
adc
bound
mov
push
call
jns
jge
outs
es
and
add
out
sar
dec
mov
and
mov
fistp
add
test
shl
push
cmp
das
mov
mov
push
adc
dec
popa
stos
in
fidiv
ja
fadd
add
xor
sub
xchg
es
cld
dec
fiadd
cld
or
shr
sbb
int
repz
arpl
ror
sub
enter
xchg
add
xor
or
mov
loope
iret
mov
test
sub
sbb
ror
mov
or
hlt
cmp
jge
push
movs
scas
sbb
adc
mov
mov
xchg
emms
push
ret
repnz
jne
fst
or
dec
inc
mov
or
inc
stos
push
outs
xlat
or
jns
pushf
addr16
(bad)
(bad)
dec
jno
or
shl
sbb
out
sbb
mov
add
cmp
inc
shr
retf
pusha
lock
je
or
jle
push
ds
cmp
sbb
cs
retf
fdivr
jno
or
push
push
push
or
dec
test
jecxz
push
xor
push
loopne
or
pop
or
mov
cmp
mov
test
sub
(bad)
ror
adc
adc
mov
fisubr
dec
daa
lods
mov
or
psubw
xor
adc
es
mov
inc
or
movs
adc
ja
and
xchg
scas
adc
sub
and
or
sub
dec
xor
repnz
lods
or
pop
push
pop
sbb
jg
retf
fsubr
xlat
pusha
jne
cmp
mov
jne
push
fsubr
inc
cmp
je
push
or
lods
sbb
mov
pop
and
or
or
add
aaa
lock
mov
push
jae
psubusb
push
je
inc
dec
rcl
movs
enter
or
fstp
or
lea
popa
jge
adc
add
shr
dec
pop
adc
int3
xor
push
or
jle
mov
addps
sar
dec
push
inc
aaa
inc
fist
push
rcl
push
scas
test
mov
mov
add
or
adc
sbb
jmp
shl
sbb
rcl
xchg
mov
and
ins
cwde
sbb
inc
sti
dec
popa
cmp
cs
xlat
pop
xor
iret
or
and
sbb
ret
sbb
pop
add
push
pop
data16
push
repnz
adc
sbb
dec
or
xchg
mov
cmp
sbb
mov
sub
cs
fidiv
and
push
pop
or
dec
push
pop
push
pop
sub
xor
xchg
and
xor
fist
fmul
pop
cmp
add
lock
mov
imul
xchg
add
rcr
push
cmp
iret
jo
sbb
pop
adc
dec
aaa
xlat
xor
ror
and
add
test
sahf
dec
dec
adc
lds
cmps
cli
jne
or
and
sbb
or
sbb
xor
test
inc
popf
ds
test
cmps
pop
clc
xchg
adc
jno
sbb
imul
mov
fldenv
aam
and
dec
mov
scas
je
xor
jne
jg
or
test
gs
inc
jecxz
movs
stc
and
fsubr
outs
adc
or
in
movs
push
test
jmp
call
xor
sub
ins
pop
sbb
loopne
sbb
xor
inc
jecxz
add
ins
mov
popf
pusha
and
inc
mov
pop
arpl
and
hlt
sbb
into
cmp
sbb
sbb
jb
jnp
and
fsub
inc
inc
in
mov
jmp
mov
push
add
popf
add
mov
push
push
neg
fs
call
adc
and
lea
lock
xchg
shl
dec
adc
outs
xchg
aam
mov
push
retf
in
out
rol
mov
add
xchg
xchg
out
adc
rol
add
adc
cmp
mov
push
scas
gs
mov
movs
mov
and
stos
movs
mov
dec
aas
mov
add
mov
out
xor
pop
enter
add
hlt
mov
dec
test
push
adc
imul
out
and
push
push
mov
(bad)
push
xor
cmp
cmp
mov
jo
lock
imul
adc
jns
fadd
cmc
adc
clc
mov
lock
dec
adc
fdiv
pusha
shl
xor
mov
ret
mov
cmp
mov
fist
cmps
rol
adc
jns
jns
lahf
mov
pop
ins
je
mov
ss
sbb
ret
addr16
(bad)
sbb
dec
add
fst
test
int
push
or
xor
and
cwde
fcomp
push
in
mov
arpl
mov
push
push
add
or
add
fnstcw
clc
sbb
pop
sbb
aas
ret
rol
xor
cmp
or
push
inc
pop
xchg
inc
clc
(bad)
and
dec
pop
pop
je
push
retf
xor
sbb
xchg
jno
jmp
jmp
das
push
fisub
ins
mov
loop
je
cmp
xor
and
int
sub
push
into
sbb
inc
inc
jno
aad
push
cmp
dec
xchg
jo
sbb
add
cmp
cld
jno
repnz
enter
or
test
adc
cs
ret
test
add
xchg
jo
test
add
mov
adc
add
jle
(bad)
cs
mov
retf
leave
ror
call
jl
scas
ins
pusha
sahf
sbb
or
test
dec
xor
cli
xor
adc
push
inc
jg
adc
pop
adc
aaa
mov
push
cmp
cmc
cmps
and
sub
test
cmp
into
les
pop
nop
test
adc
jmp
out
(bad)
sti
mov
xchg
(bad)
pop
cld
push
adc
or
aaa
shl
pop
push
ds
arpl
push
sar
fist
inc
mov
(bad)
leave
(bad)
cmp
or
in
add
add
cmp
inc
clc
inc
adc
cmp
dec
push
test
add
jmp
fld
cmp
push
add
(bad)
jl
sbb
pop
hlt
cmp
jg
jl
loope
(bad)
cmp
mov
dec
shl
add
mov
out
mov
sbb
mov
jl
loopne
cwde
jo
dec
add
sbb
and
in
or
and
xchg
add
xchg
mov
mov
into
out
inc
in
or
fadd
ja
push
or
or
mov
adc
cmp
xchg
nop
adc
push
fcomp
aaa
xchg
adc
sub
dec
mov
ja
cmps
loopne
mov
xchg
popf
push
fs
lea
adc
inc
(bad)
mov
mov
push
xchg
bound
stos
sub
or
lahf
ins
push
xchg
dec
add
lahf
shr
loope
xor
test
xchg
int
cmp
(bad)
lock
(bad)
push
add
sbb
adc
push
pop
inc
jl
cmp
pop
icebp
add
and
mov
xchg
ret
mov
jae
ret
leave
mov
or
inc
push
lods
fcmovnb
cmp
mov
add
or
xor
xor
add
imul
jle
xor
xchg
and
ins
jle
xor
mov
aas
jmp
mov
aam
mov
dec
xchg
in
cs
cwde
or
addr16
jo
test
sar
or
int
pop
xchg
pop
cwde
and
jmp
(bad)
nop
sbb
daa
sub
test
stc
mov
loopne
push
adc
ins
jmp
call
fwait
jg
adc
xor
add
cmp
clc
stos
adc
cmp
inc
mov
sub
mov
retf
movs
outs
dec
or
cmp
cld
or
jecxz
sahf
push
push
mov
mov
imul
inc
call
hlt
mov
rol
pop
inc
shl
mov
out
fild
push
mov
jmp
cmp
xchg
movs
idiv
and
lds
stos
inc
mov
loop
sbb
xor
jo
and
adc
xor
jmp
sub
call
jp
int
mov
push
sbb
ror
pop
shr
adc
sub
mov
jp
(bad)
test
or
push
mov
cdq
(bad)
dec
clc
pop
add
repz
pop
pop
lea
nop
sbb
inc
jp
test
jne
popf
jmp
add
popa
loop
imul
mov
mov
aaa
xlat
dec
cmp
retf
dec
mov
mov
ss
adc
or
jbe
cmp
das
lods
rol
jne
cmps
sahf
in
push
ins
fdiv
mov
cmp
imul
fwait
imul
dec
test
test
adc
cmp
push
sar
or
retf
imul
or
pop
loop
inc
push
ret
mov
sub
(bad)
adc
push
repnz
js
int
mov
mov
xor
add
popf
push
cmp
ja
xchg
sub
mov
push
or
xchg
mov
mov
out
mov
jecxz
ds
push
jno
sbb
pusha
cmp
dec
clc
jg
mov
pop
lods
aad
and
pop
inc
sahf
mov
cmp
movs
add
add
and
sub
xchg
xlat
and
or
dec
fmul
xor
push
jns
pop
add
mov
adc
and
push
inc
adc
push
(bad)
xchg
retf
fdivr
imul
xchg
inc
or
fdiv
ja
mov
rcl
add
sbb
mov
cmp
cmp
add
mov
jmp
push
dec
or
xchg
jbe
sti
push
mov
or
push
mov
push
adc
mov
add
inc
imul
xor
adc
inc
or
je
mov
into
add
lea
or
cmp
inc
ret
ror
cld
pop
xlat
das
imul
mov
hlt
or
push
or
ror
sbb
add
sbb
leave
not
mov
push
dec
cmps
push
add
(bad)
jp
leave
lea
into
jns
lods
imul
fwait
int
call
adc
icebp
pop
sbb
add
add
call
mov
lds
mov
sub
add
pop
lock
aam
cmp
mov
fcmovb
cdq
sbb
pop
int3
or
add
or
adc
rcl
jle
call
pop
repz
loop
adc
lea
fstp
sbb
jmp
rcl
mov
or
or
sbb
add
lock
fwait
sbb
cmp
nop
cmp
aam
push
inc
jmp
push
mov
adc
inc
loope
add
jl
(bad)
hlt
stc
add
(bad)
dec
or
add
xchg
and
sahf
mov
xchg
cdq
push
aaa
clc
loope
inc
xor
sub
adc
clc
sbb
inc
inc
or
mov
clc
hlt
jle
lock
inc
or
sub
cld
clc
dec
xchg
mov
fs
adc
(bad)
hlt
add
sub
add
ficom
rol
push
cmp
ficom
inc
jmp
jae
xlat
retf
cmp
cmp
pop
pop
add
pop
(bad)
sub
pop
adc
out
lock
or
sbb
sub
push
xchg
mov
cmp
in
adc
cmp
jmp
shl
mov
jp
adc
mov
mov
push
and
out
pop
cmp
rol
cmp
jl
sub
xchg
or
mov
push
push
jmp
inc
(bad)
mov
es
mov
adc
sbb
xor
xchg
lods
xor
aaa
mov
int
pop
nop
or
xor
jl
in
pushf
sbb
pop
les
loope
loopne
push
add
iret
sahf
push
and
and
mov
push
add
(bad)
fnsave
cdq
push
ins
push
dec
add
and
and
or
in
int3
adc
dec
or
and
pop
mov
sbb
and
or
add
fnstenv
add
add
inc
or
mov
pop
add
adc
xchg
mov
mov
mov
and
nop
dec
dec
pop
inc
push
popa
das
jae
in
retf
pop
jp
neg
mov
sbb
mov
mov
fsubrp
xor
aam
or
mov
mov
mov
ins
aaa
loop
inc
ret
pop
int
rcr
in
xchg
cwde
add
pop
xor
cs
ins
mov
or
push
cmps
mov
mov
adc
cmp
or
arpl
jae
mov
jmp
leave
and
loop
cmc
pop
movs
and
nop
sti
adc
mov
ror
and
pmulhuw
xchg
fiadd
mov
rol
cmp
loope
add
mov
out
inc
push
repnz
int3
imul
enter
sbb
push
fwait
add
push
sub
cmp
push
jecxz
push
inc
cmp
xor
add
add
retf
mov
dec
fucomip
sbb
ficom
push
or
call
int
sbb
push
dec
popf
cdq
pop
imul
or
and
rcr
mov
aas
add
jo
xchg
(bad)
jp
push
mov
adc
cmps
sbb
out
or
pop
gs
mov
pop
lea
in
and
lahf
inc
bound
call
push
sub
push
xchg
push
test
addr16
bound
add
add
xchg
nop
xor
test
dec
push
ins
ins
pusha
pop
adc
or
scas
jmp
push
in
push
in
iret
adc
(bad)
xor
or
rcr
call
aaa
cwde
sub
test
mov
push
pop
or
adc
or
ret
arpl
retf
jle
mov
push
aam
or
ins
test
cli
inc
mov
mov
push
ins
push
xchg
call
cmc
popf
mov
add
sub
xor
add
push
pushf
add
leave
mov
or
xor
xchg
adc
fs
inc
bound
leave
or
push
fisubr
push
and
sub
cmp
jbe
ins
sbb
pop
add
lods
push
push
(bad)
call
jne
xor
mov
enter
pop
add
jmp
inc
push
pop
sub
add
lea
int
fdivrp
inc
mov
xor
rol
adc
ret
cmps
inc
pushf
inc
cmp
push
rol
cli
sub
push
mov
or
cmp
test
jl
mov
sub
or
inc
add
add
(bad)
sub
or
add
in
mov
icebp
mov
lock
sbb
pop
test
pop
sbb
sbb
cwde
push
mov
cwde
rcr
add
xor
or
loopne
mov
les
pop
fwait
adc
push
or
imul
scas
arpl
adc
pop
inc
inc
cmp
mov
out
adc
inc
sbb
jmp
add
jge
cmp
data16
xor
push
xchg
push
pushf
mov
push
inc
push
aaa
jo
xor
xor
push
dec
dec
nop
mov
inc
or
pop
sbb
or
jbe
clc
ja
add
nop
mov
jmp
push
adc
push
or
xchg
cs
dec
add
ret
xchg
push
jle
dec
iret
xchg
adc
pop
clc
dec
adc
adc
adc
repnz
mov
or
rol
jbe
add
je
les
je
xor
dec
out
cmovb
and
xor
psubsw
and
clc
add
add
add
out
pop
mov
add
dec
les
and
mov
mov
xor
test
dec
lahf
lock
inc
hlt
xchg
lock
popa
pop
push
push
movs
lock
cwde
mov
xor
or
jo
bound
int3
jne
cmp
jmp
add
pop
pushf
add
jmp
pop
sbb
or
popf
pop
inc
scas
mov
aas
ficom
xchg
xchg
dec
pop
add
mov
mov
mov
nop
add
push
cld
(bad)
or
pcmpeqw
push
xor
add
aam
and
sub
xor
enter
push
push
mov
addr16
jmp
(bad)
dec
sub
jne
xor
add
test
and
and
sbb
jns
dec
fsubr
outs
add
push
inc
mov
(bad)
mov
(bad)
or
sub
or
in
add
dec
jl
in
jg
add
inc
pop
popa
push
pop
mov
popf
cmp
scas
pop
ret
mov
fdiv
pop
add
dec
cmp
push
scas
les
mov
cmp
dec
test
mov
mov
sysenter
jle
test
or
enter
mov
adc
sub
outs
adc
cmp
cld
pop
in
jae
loop
fdiv
shl
rcr
push
jne
mov
mov
jmp
(bad)
pusha
xchg
xchg
jecxz
and
adc
dec
cmp
add
aas
pop
xchg
push
lock
rcl
inc
test
adc
inc
and
sbb
test
pusha
lods
ds
jo
add
xlat
aam
sub
sbb
cmp
and
bound
push
imul
(bad)
jne
dec
jmp
and
xchg
or
test
or
dec
sub
adc
xchg
jne
mov
clc
(bad)
js
sub
js
pop
pop
scas
or
push
sbb
loope
and
les
fcmovb
dec
push
push
adc
pop
lock
adc
mov
xor
mov
cmps
lahf
add
loopne
es
je
cmp
or
lahf
mov
or
jmp
pop
pop
ds
out
mov
lea
and
lods
push
les
es
mov
loopne
dec
mov
mov
adc
fs
cmp
inc
xor
inc
xchg
add
addr16
add
(bad)
pop
mov
sub
inc
adc
inc
adc
dec
sbb
inc
lods
into
inc
sbb
int3
push
dec
push
xor
add
xor
stos
int3
mov
adc
add
ja
cmp
in
and
inc
or
or
jmp
out
aaa
jmp
push
xor
hlt
ins
add
and
les
dec
add
adc
push
cmp
int3
or
and
add
and
and
ror
and
sub
lods
pop
imul
mov
les
aas
add
pop
aam
jo
cmc
nop
aad
mov
xor
outs
push
dec
push
cs
(bad)
sub
push
je
dec
dec
sub
or
sar
xor
mov
fimul
cli
imul
in
xor
mov
cmp
popa
cmp
je
mov
push
movs
add
cmp
clc
cld
sbb
int
dec
or
sbb
rcr
and
jns
dec
sub
retf
outs
push
pushf
sbb
retf
push
mov
rep
pop
inc
loope
es
and
enter
mov
jl
jno
mov
(bad)
jge
pop
shl
std
and
cmp
imul
mov
push
mov
mov
and
jle
rol
es
adc
or
cs
mov
mov
int3
add
inc
or
outs
rol
mov
push
dec
loop
xchg
jne
push
fld
pop
addr16
xor
data16
ret
mov
mov
pop
push
mov
push
pusha
test
add
xor
mov
pop
mov
pop
lods
fnstsw
cmp
xor
test
pop
popf
(bad)
imul
movs
add
mov
sar
cmp
fistp
loope
rcr
cs
and
mov
mov
sbb
xor
or
shl
xor
adc
inc
sahf
call
shr
loope
push
call
cmc
cmps
inc
sbb
int
push
(bad)
ja
in
xchg
jmp
or
pop
adc
mov
xor
jmp
xchg
push
and
jmp
sahf
and
test
icebp
dec
cmc
adc
and
stos
xchg
loope
ins
in
mov
mov
push
les
lods
jb
push
jne
fadd
jge
pop
xor
jbe
dec
scas
call
sbb
adc
or
aaa
out
hlt
(bad)
test
adc
mov
dec
push
or
adc
push
adc
int3
xlat
scas
adc
cmps
dec
or
(bad)
mov
idiv
(bad)
fsubr
and
popa
jmp
ins
mov
out
pop
aas
shl
xchg
cmp
pop
out
js
out
idiv
sar
je
push
jbe
adc
cmps
pop
mov
ss
cdq
mov
pop
adc
cmp
lods
inc
or
sub
inc
ret
jo
push
mov
adc
mov
mov
inc
mov
test
aas
aam
push
dec
dec
inc
sbb
ret
xor
add
stos
lds
(bad)
and
push
or
sub
push
push
and
sub
xchg
sub
add
or
je
pop
and
xchg
fsub
aaa
inc
dec
push
enter
test
adc
neg
pop
mov
pop
into
inc
je
js
mov
movs
or
dec
(bad)
adc
pushf
inc
mov
movs
and
lods
dec
ret
or
mov
fs
pop
cli
adc
pop
cmp
int
and
pusha
add
inc
cmp
or
jmp
sub
cmp
inc
push
mov
mov
lods
lock
mov
fdivr
mov
jnp
fucomi
mov
adc
push
adc
add
cli
ret
dec
ja
ror
in
xor
fcomi
or
add
jg
mov
call
mov
dec
cld
je
cmp
jle
clc
sbb
dec
push
cmp
test
inc
outs
data16
jecxz
or
adc
and
xor
xor
pop
sti
nop
inc
clc
mov
jbe
lods
push
sti
and
lahf
aaa
fcomi
rol
and
add
ret
adc
fdivr
test
test
and
dec
nop
jo
into
push
xchg
ror
lahf
jb
xor
mov
mov
(bad)
sahf
ror
or
adc
adc
sbb
mov
pop
adc
(bad)
mov
popa
mov
(bad)
call
add
push
jmp
pop
ret
cmp
lock
jecxz
in
or
cmp
icebp
push
push
add
int
ja
sbb
dec
in
test
clc
shl
cmp
sbb
sahf
xchg
or
shl
ins
inc
scas
fstp
push
cmps
push
and
fs
push
and
jnp
inc
cmps
popf
add
mov
sar
inc
push
test
jo
add
jbe
pop
xchg
bound
push
xchg
call
xchg
pop
add
nop
daa
hlt
add
paddq
fwait
cmp
popf
les
clc
dec
push
xchg
hlt
ins
ret
daa
push
sub
aam
mov
add
test
and
jmp
(bad)
jmp
cmp
or
inc
dec
das
je
or
adc
es
rol
inc
pop
shr
jl
add
bound
inc
cmps
push
jo
mov
push
or
or
push
xchg
retf
push
add
adc
xor
mov
fdiv
test
loopne
add
pushf
cs
js
or
(bad)
js
test
repnz
or
sti
clc
add
or
add
push
scas
adc
sub
rol
mov
cmp
shl
add
sbb
cmp
or
adc
addr16
fidivr
adc
and
mov
sldt
or
arpl
sub
mov
dec
or
stos
fwait
pop
adc
jge
iret
in
aaa
add
mov
ror
pop
adc
jbe
dec
sbb
mov
stc
rcl
or
ret
jne
adc
aas
cmp
dec
movs
aaa
or
sub
sub
inc
mov
in
and
test
or
push
pop
adc
jbe
adc
xchg
pop
leave
push
jo
ret
add
push
mov
sub
aad
push
jmp
aam
mov
dec
pushf
xor
push
mov
xchg
fsub
sbb
retf
push
xchg
stos
sub
rol
aam
sbb
jo
mov
mov
inc
xchg
rol
shl
xchg
cmp
mov
jl
call
or
js
js
sbb
out
push
call
jp
inc
or
xchg
pop
pop
sbb
dec
pop
idiv
aam
and
xor
push
popa
cmp
test
push
push
js
dec
pusha
sbb
test
mov
mov
pop
dec
rol
fstp
or
xchg
sbb
lds
mov
cmp
sub
jmp
test
add
xchg
adc
rol
js
in
stos
loope
xor
xchg
xchg
ret
ins
add
retf
jns
and
shl
adc
sbb
aam
or
test
sbb
lods
popa
cmp
outs
or
mov
test
pop
cmp
js
call
mov
sbb
push
ins
or
dec
retf
in
mov
cmc
jecxz
lds
les
jo
or
mul
jl
test
add
sbb
xchg
xor
cmp
arpl
push
xchg
test
sub
xor
pushf
xor
xor
fsub
adc
ret
and
push
push
pop
xor
shl
jl
cmp
ins
outs
jb
pop
in
out
mov
sub
inc
dec
inc
ror
push
or
and
fisttp
int
jb
xchg
ja
loopne
add
xor
pop
lods
outs
pop
mov
sub
(bad)
xchg
xchg
pop
jp
outs
xchg
add
add
jb
push
push
xor
loope
sti
cmp
stc
repz
jno
(bad)
sbb
cld
es
or
or
movs
pop
pop
mov
push
jmp
in
add
pop
push
loop
rcl
movs
lea
ret
xor
sub
sub
rol
inc
mov
xchg
mov
cmp
xchg
fnsave
or
mov
xchg
retf
sbb
adc
and
test
add
aad
inc
lods
jecxz
rcl
xor
xlat
adc
inc
mov
inc
rcl
es
enter
or
ins
sub
out
xor
pop
aam
arpl
loopne
outs
pop
push
or
je
sbb
adc
adc
ret
enter
je
and
jecxz
out
jnp
scas
fadd
aas
sbb
inc
sbb
add
or
and
xor
xor
add
xchg
add
sub
gs
pop
mov
add
mov
adc
imul
sbb
and
sbb
and
mov
aas
repz
xor
cmp
test
ret
push
push
iret
add
in
dec
or
jnp
sbb
imul
mov
retf
movs
or
cmp
test
add
add
outs
push
push
and
pop
jge
icebp
aas
xchg
jne
jmp
dec
pusha
test
jmp
inc
inc
xor
(bad)
cmp
aam
aaa
clc
xor
outs
jae
leave
mov
lea
ins
test
and
and
xor
add
inc
imul
dec
ret
mov
repnz
pop
into
adc
(bad)
mov
or
mov
or
sub
lahf
cmp
add
std
sbb
and
cmp
mov
(bad)
push
fs
adc
push
add
pop
add
jecxz
xchg
imul
ins
test
into
shr
lea
sub
pop
cmp
inc
cmp
lock
out
or
add
ror
int
push
xor
or
mov
aad
mov
sbb
or
mov
add
xchg
xchg
call
xor
cmp
add
cld
aam
mov
or
in
loope
jmp
jne
push
inc
mov
popa
int
push
mov
or
(bad)
fcomp
nop
dec
xchg
mov
and
xor
dec
in
add
add
imul
inc
ss
jp
enter
fimul
cmp
fmulp
jo
xor
popa
cmp
and
mov
aad
(bad)
popf
movs
mov
pushf
das
(bad)
and
aam
sub
retf
in
push
mov
into
or
cmp
pop
popa
cmp
push
(bad)
push
retf
pop
add
(bad)
in
inc
adc
inc
and
lahf
shl
sub
int3
lock
pop
shr
or
push
jbe
int
inc
inc
sbb
sbb
push
ror
sbb
loopne
adc
sub
sbb
mov
push
(bad)
adc
enter
mov
add
loopne
sub
jnp
add
std
dec
jmp
into
add
sti
sub
sub
push
ror
sbb
and
add
push
cmps
push
ret
add
or
dec
call
shr
pop
and
inc
jne
imul
add
or
(bad)
jmp
mov
rcl
inc
or
adc
jl
sbb
xchg
push
jbe
mov
xlat
xlat
test
test
rcr
sub
lahf
xlat
cmp
xchg
pushw
fdivp
in
loopne
mov
test
sbb
inc
mov
or
dec
push
movs
ja
sub
cmp
inc
mov
movs
loopne
jb
mov
mov
cmc
pop
test
mov
xor
mov
call
ret
imul
mov
and
mov
not
dec
sbb
das
nop
mov
jl
cmp
jl
jge
and
jg
pop
sub
sub
or
add
sub
sbb
ds
sbb
rcl
mov
and
mov
push
mov
xor
and
cwde
add
addr16
es
add
mov
fadd
and
cmp
into
gs
xlat
mov
iret
int3
mov
clc
push
rol
sub
out
sahf
adc
shl
out
push
call
and
or
cmp
repnz
push
or
jo
adc
inc
cmp
call
lea
and
cli
repnz
lock
sub
xor
ret
dec
clc
push
add
fdiv
sbb
pop
sbb
jb
push
test
xor
push
jl
in
in
and
test
mov
ffreep
in
imul
(bad)
hlt
sub
rcl
fdivrp
shl
pop
mov
rcl
mov
test
xchg
in
mov
(bad)
cmc
data16
stc
push
push
lds
mov
dec
push
cld
je
js
loope
(bad)
sub
imul
xchg
push
mov
fcmovnb
add
cmp
call
popf
sub
mov
iret
mov
inc
or
add
in
test
or
mov
icebp
dec
adc
mov
pop
add
test
sbb
and
xor
in
call
xor
ins
pop
xor
pop
cdq
lock
mov
add
xor
cs
aaa
scas
or
or
pop
sbb
cmc
or
imul
xchg
lock
in
pop
push
pop
cwde
pop
aaa
mov
add
cmp
add
inc
mov
fmulp
jmp
pop
(bad)
je
push
add
adc
adc
(bad)
cmp
sub
xor
sti
jmp
xchg
jmp
or
xchg
(bad)
mov
je
mov
pop
add
push
sbb
or
xchg
fst
or
scas
jne
pop
xlat
test
adc
setae
adc
adc
or
adc
sbb
sahf
cmps
jns
push
or
add
mov
sub
push
push
pusha
push
popa
ret
fisubr
push
cs
inc
sbb
or
jb
mov
and
mov
push
add
mov
clc
mov
(bad)
sar
cmp
or
push
pop
push
ret
pop
shl
sub
jmp
stc
pop
push
xor
sub
fiadd
or
lock
push
xor
pop
sub
push
fwait
clc
xchg
inc
leave
sar
ficom
inc
call
mov
or
jl
sub
lea
or
loop
xor
or
xchg
xor
fidiv
lea
push
sub
mov
ret
jmp
xor
pop
sbb
cmp
ja
jo
mov
push
push
retf
and
cli
xor
push
in
ror
sbb
ret
rol
out
mov
add
push
sub
cmps
mov
jo
xchg
adc
sub
das
movs
hlt
daa
call
ds
xor
movs
iret
ins
sub
lods
ficom
sub
mov
sbb
jge
pop
inc
sbb
or
xchg
pop
mov
or
inc
in
pop
push
or
mov
dec
jmp
push
cmps
inc
ficomp
jns
adc
push
and
js
xchg
xchg
jmp
js
dec
push
addr16
stc
push
clc
les
movzx
pop
adc
and
xor
lock
pop
jmp
sub
ins
pop
je
or
cld
dec
push
repnz
or
push
push
add
pop
(bad)
xchg
add
jmp
mov
adc
or
daa
and
add
pop
cmp
pop
pop
sbb
lock
xor
mov
jo
xor
daa
jmp
sub
xor
inc
adc
jecxz
test
cmc
shl
jne
adc
push
push
loopne
mov
inc
cmp
jl
mov
lea
add
jo
data16
jle
fwait
mov
sbb
pop
xor
cmps
ret
ds
xchg
push
cmp
push
sbb
push
pop
push
add
pop
fsub
push
sub
cmp
das
and
retf
sbb
imul
xor
hlt
mov
or
cmp
adc
shl
cmp
jl
fisub
mov
dec
aam
push
add
dec
xor
or
or
jmp
push
lods
pop
daa
add
adc
test
ins
adc
sbb
call
mov
test
adc
xchg
push
inc
mov
es
(bad)
push
fsubr
sub
jl
leave
je
inc
jge
shr
mov
pop
jnp
je
adc
movs
in
add
mov
popa
idiv
sbb
xchg
push
loopne
push
pop
and
push
test
cmp
out
fisub
fcom
test
cmp
xchg
ss
jmp
dec
retf
and
and
loopne
shr
cmc
jl
stos
push
ror
xor
cmp
push
call
push
xchg
xor
(bad)
movs
cmp
or
sbb
sub
loopne
inc
fsubr
les
fsub
js
push
fsub
or
adc
inc
das
fisttp
loop
in
push
das
clc
inc
pop
pop
jmp
add
and
jno
sub
push
mov
(bad)
xchg
jmp
neg
dec
xor
sbb
xchg
call
fs
(bad)
nop
xor
fdivr
jo
mov
sti
cli
leave
aam
mov
ss
mov
or
fadd
in
movs
ret
and
fadd
pop
test
xor
dec
sbb
dec
pusha
xlat
cmc
call
xor
add
sbb
loopne
xor
add
enter
add
push
add
pop
pop
arpl
ret
jl
rcl
lock
add
aad
sbb
in
sub
mov
inc
mov
retf
aam
ins
sbb
ret
lock
adc
inc
pop
popa
jmp
push
inc
jnp
les
cs
push
dec
cmp
push
iret
mov
mov
or
call
jmp
mov
cld
cmp
je
sbb
or
cmp
dec
dec
push
add
pushf
mov
mov
cdq
sub
mov
or
jnp
out
jbe
xor
movlps
inc
or
sub
or
pop
inc
lock
xor
xchg
xchg
push
cmc
jns
push
sbb
or
bound
pusha
pop
mov
adc
(bad)
and
pusha
jae
jns
cmp
xchg
fwait
inc
adc
adc
cmp
adc
and
push
ja
add
(bad)
call
inc
pusha
or
and
pop
mov
arpl
inc
xchg
or
or
pop
push
xchg
inc
cdq
xor
das
fcom
and
push
sbb
fnstsw
sub
in
add
mov
push
lods
push
jo
call
xor
je
xchg
movs
inc
sub
dec
retf
inc
xchg
leave
or
mov
pop
adc
popa
nop
movs
pop
test
xor
push
cmp
or
aam
push
scas
outs
cdq
sbb
sbb
arpl
mov
adc
sub
inc
sbb
fadd
pop
ins
test
cmp
retf
jmp
inc
out
ja
aam
movs
push
cdq
add
cwde
mov
xchg
ja
sti
pop
into
in
or
test
mov
add
stos
mov
add
call
jl
dec
adc
lods
daa
mov
xchg
aas
sub
sbb
jae
dec
mov
pop
stos
test
fstp
rcl
adc
sbb
pop
sbb
daa
push
in
ret
mov
ret
retf
push
push
xchg
ss
sub
sub
mov
xlat
sub
adc
jge
mov
pop
mov
dec
cmp
(bad)
xor
les
out
cmp
sbb
dec
dec
pop
lock
mov
pop
movs
daa
test
mov
lock
sar
sbb
pop
xor
js
mov
out
hlt
sub
psllw
loopne
push
outs
rol
and
or
inc
pop
jle
ins
push
pop
and
or
add
out
lock
loope
cmps
mov
loope
mov
sub
or
jmp
jne
pop
sbb
loop
call
dec
cld
lahf
adc
inc
sub
sub
add
inc
fwait
push
outs
inc
push
xchg
ds
in
xor
adc
add
int3
push
fistp
ret
je
sub
ret
adc
dec
cwde
leave
fiadd
push
xor
jae
cmp
dec
add
(bad)
gs
push
cmp
or
inc
call
div
add
mov
pusha
inc
shl
adc
daa
xor
push
xor
add
inc
ror
jg
sub
xor
in
fldcw
push
das
int
adc
test
ret
mov
call
mov
xor
xor
mov
mov
mov
gs
push
icebp
dec
or
ret
inc
xor
mov
sbb
dec
hlt
mov
(bad)
out
jnp
lahf
es
out
add
sub
inc
mov
movs
and
retf
pop
in
and
cwde
cmps
mov
sbb
xchg
xchg
dec
sbb
or
sbb
inc
(bad)
fstp
mov
fistp
sahf
add
shl
push
push
or
or
cmp
cmp
mov
nop
cmp
sar
je
add
test
pop
movs
sub
jno
aas
nop
test
xor
pushf
vpmaskmovd
push
pop
jne
shl
je
or
test
push
test
js
lea
(bad)
call
pusha
pop
retf
sbb
ret
adc
stc
xor
mov
loopne
mov
or
jp
xchg
inc
mov
ins
in
pop
xchg
inc
adc
jmp
jae
mov
setb
and
stos
jmp
fbstp
adc
or
xor
mov
loope
mov
loope
sbb
and
and
test
retf
and
cmp
sbb
mov
add
sbb
dec
aam
ror
add
xchg
adc
js
(bad)
add
lea
leave
in
inc
or
push
add
jl
pop
xchg
retf
retf
fst
add
aad
push
mov
inc
and
loopne
dec
dec
mov
fsub
push
jbe
addr16
ins
test
or
imul
inc
mov
in
add
call
push
mov
pop
shl
ror
push
inc
ror
loope
rcl
mov
push
ss
lds
xor
jl
inc
or
jl
in
adc
sub
ds
add
cmp
loopne
pop
aaa
stos
add
sub
(bad)
leave
sbb
or
add
daa
add
cld
push
data16
add
mov
pop
cmp
aaa
aas
xor
adc
push
(bad)
repnz
adc
lock
push
and
inc
push
imul
pusha
mul
scas
jge
push
clc
mov
sub
push
inc
and
lock
add
dec
and
sub
daa
sbb
pop
push
push
jecxz
inc
fcomp
dec
sahf
mov
or
inc
dec
cmp
add
lahf
pop
outs
aad
lea
ins
jno
cmp
fs
push
adc
int3
outs
adc
jb
mov
not
pop
or
jmp
cmp
shr
mul
add
jmp
rol
jl
out
adc
cmp
movs
mov
or
pushw
into
dec
jne
sar
add
loop
imul
push
xor
retf
jb
mov
mov
adc
pop
rcl
ja
pop
movs
cdq
jne
xor
mov
mov
mov
jecxz
xchg
adc
jbe
jnp
and
test
xchg
popa
rol
clc
add
sbb
inc
xor
mov
jbe
pop
mov
dec
and
xchg
sti
fistp
mov
sub
les
push
mov
add
cmp
add
jp
xchg
rcl
lock
mov
pushf
inc
xor
rcr
ret
fsub
fdivr
push
push
popf
(bad)
(bad)
sub
push
push
sub
repz
je
xchg
add
jne
pop
bound
sub
iret
sbb
aaa
mov
inc
inc
shl
pop
xchg
push
xor
std
fmul
gs
retf
fdivr
js
cmp
imul
push
cmp
push
push
fdiv
jg
stc
cmp
rol
test
xor
inc
dec
loopne
enter
mov
cmp
push
add
(bad)
(bad)
push
push
shr
ins
add
cmp
aaa
les
mov
fs
mov
xor
xor
adc
jl
push
adc
sbb
iret
addr16
mov
jmp
inc
fcom
xchg
nop
adc
and
cmp
pop
lea
or
imul
jge
push
adc
fiadd
je
xchg
ds
dec
sub
ins
popf
xchg
add
sbb
jbe
or
in
mov
pushf
xchg
test
jge
pop
push
dec
cmp
mov
ds
leave
mov
and
or
cmp
sub
ror
sbb
lods
or
adc
je
push
add
push
iret
je
fisttp
(bad)
dec
out
lahf
ret
inc
or
xchg
inc
pop
and
adc
dec
ror
imul
loopne
pusha
stos
loop
sub
adc
in
jg
pop
fiadd
imul
int
pusha
push
push
sar
lods
addr16
es
daa
sub
add
sbb
xor
imul
mov
dec
push
inc
clc
dec
rol
(bad)
movs
cmp
sbb
and
cmp
add
sub
ror
mov
test
outs
lods
push
leave
fs
js
sbb
sub
ret
push
jle
mov
push
fcomp
push
loop
movs
jbe
mul
xchg
std
in
pop
shl
pop
or
addr16
dec
je
imul
sbb
dec
jne
mov
es
movs
add
dec
jb
dec
add
add
lea
mov
fistp
cmp
je
or
pop
icebp
adc
das
jo
add
push
leave
popa
push
sbb
xor
dec
ror
adc
(bad)
xor
rcr
std
push
in
push
mov
sub
add
rcl
mov
cli
lds
xchg
and
adc
or
test
cmp
mov
nop
xchg
add
pop
or
sar
scas
mov
fwait
fwait
or
push
push
add
nop
and
popa
arpl
push
inc
cmp
or
cmc
fnsave
adc
rdpmc
mov
or
(bad)
loopne
xor
adc
sub
rcl
call
sar
lea
in
xor
sub
ja
inc
shr
inc
inc
call
ja
inc
add
ja
mov
mov
into
jle
push
(bad)
rol
or
or
and
fmul
fmul
adc
mul
sub
(bad)
pop
jge
shl
and
movs
sbb
cmp
inc
cmp
or
xchg
sub
in
repnz
push
or
or
lods
cmp
inc
add
push
or
test
xchg
mov
bound
mov
dec
or
hlt
fadd
jbe
jo
je
int
pop
push
iret
sbb
sub
arpl
rcl
dec
daa
mov
call
jp
xor
jo
aas
lods
(bad)
adc
cmps
cmp
fstp
or
sbb
push
jo
das
fdivr
inc
stc
xor
xchg
add
mov
out
dec
xlat
ins
jno
sub
sti
push
inc
bound
fs
mov
or
stos
jl
and
sbb
jo
fnstcw
inc
popa
push
setb
or
inc
and
mov
in
mov
pop
je
or
adc
cmps
fadd
rcr
push
add
(bad)
fisub
push
push
pop
jmp
pop
in
jbe
pop
leave
test
ror
xchg
not
fdiv
dec
add
and
pop
mov
rol
mov
cmp
or
cmp
jbe
sub
jmp
mov
nop
inc
in
and
pop
jmp
mov
adc
inc
jno
push
test
es
sub
push
sub
scas
out
or
pop
cmp
ja
pushf
add
ret
pop
push
push
or
test
(bad)
mov
and
add
mov
pop
sbb
sti
test
inc
lods
lods
fild
or
cld
dec
gs
inc
loopne
fnstenv
mov
in
pop
inc
pop
mov
xor
mov
cmp
in
leave
mov
add
push
je
mov
data16
add
add
add
push
aas
cwde
test
or
lods
sar
and
call
in
push
jmp
adc
dec
rcr
cmps
xchg
push
cmp
jnp
mov
jne
mov
adc
out
popa
fwait
mov
mov
add
xlat
stc
aaa
fcom
push
(bad)
pop
push
pop
stos
sbb
pop
repnz
retf
sbb
jo
mov
shr
and
jmp
pushf
test
pop
imul
movs
and
mov
push
shl
lea
ins
loopne
add
sbb
jne
call
mov
jb
sub
mov
adc
popa
xor
hlt
nop
pushf
into
ins
jmp
ret
sub
pop
push
jmp
and
xor
push
push
push
or
sti
or
lock
xchg
xor
add
cmps
or
pop
jmp
mov
adc
mov
cmp
dec
(bad)
es
mov
mov
gs
(bad)
fist
jl
or
pop
cmp
push
movs
push
push
cmc
push
ror
retf
aaa
or
add
retf
test
or
bound
dec
shr
loop
or
sbb
push
je
mov
repnz
dec
mov
add
push
inc
sbb
jecxz
lahf
cmps
jle
je
or
pop
xchg
sub
sub
je
pop
push
fwait
and
xchg
and
int
sbb
mov
adc
fdiv
ret
add
push
push
js
test
cdq
push
push
push
xchg
mov
cld
leave
mov
(bad)
add
int3
in
add
sub
push
cmp
push
dec
pop
dec
sbb
sub
jo
dec
lds
sahf
jbe
inc
mov
jb
sub
adc
inc
push
cmp
inc
inc
nop
add
or
(bad)
jne
mov
pop
mov
add
add
test
mov
add
sub
adc
dec
retf
or
xchg
and
test
pop
cmp
cmp
and
mov
out
push
add
cs
add
add
add
je
push
lods
dec
xchg
add
test
ins
jecxz
inc
cld
mov
lea
test
rcr
push
xchg
aam
add
jp
fs
sbb
movs
inc
and
rol
jbe
loopne
mov
push
ficomp
inc
pop
and
jnp
leave
jns
push
ret
add
adc
ret
push
fidiv
xchg
outs
mov
repnz
add
adc
push
(bad)
and
mov
rcl
add
inc
je
jmp
outs
lea
add
inc
mov
loope
bound
test
adc
jae
or
pop
mov
iret
lahf
aaa
sti
aaa
adc
mov
addr16
xchg
cmp
ja
cmp
mov
jns
aad
test
push
push
add
sahf
jno
ds
(bad)
dec
xlat
hlt
test
push
cmp
push
test
cmp
test
jecxz
(bad)
cld
sbb
dec
loope
ret
call
call
in
dec
mov
inc
lock
inc
jb
xchg
inc
jne
mov
aas
popf
sbb
cmp
je
mov
inc
dec
call
pop
inc
sbb
bound
cmp
pop
adc
push
pushf
pop
inc
ret
sub
fidivr
movs
and
adc
shr
push
add
pushf
movs
jmp
fwait
xchg
sub
sub
fs
pusha
dec
aaa
dec
pop
mov
and
inc
jl
mov
mov
dec
xchg
cdq
push
or
icebp
gs
push
pop
sbb
ins
sub
xchg
push
cs
or
pop
inc
xor
dec
sbb
mov
fs
dec
daa
nop
push
sbb
stos
sbb
cmp
dec
mov
pop
cmps
outs
push
push
pop
sbb
add
dec
test
arpl
loopne
mov
aam
push
in
push
add
adc
js
nop
es
and
push
sbb
lods
mov
(bad)
out
push
add
movs
cdq
mov
mov
dec
gs
xor
xor
sbb
cwde
pop
xor
or
cdq
inc
popf
or
xor
add
dec
fcom
mov
or
adc
jmp
xor
popa
nop
adc
mov
cs
inc
push
pop
cmp
xor
add
test
jmp
lahf
fdivr
mov
test
push
enter
mov
push
pop
sbb
mov
sub
out
pusha
add
inc
(bad)
sahf
fst
mov
call
js
in
dec
sbb
sub
movs
dec
fsubr
cmc
les
sub
pusha
jle
sub
(bad)
rol
jno
adc
adc
mov
aam
cmp
dec
sub
jno
push
fistp
shl
and
mov
cmp
out
pop
punpckhwd
jae
mov
xchg
cmps
or
or
cmp
and
sub
sbb
xor
call
cmp
cmp
mov
call
and
aas
mov
out
and
cld
inc
dec
cs
in
mov
fcom
lea
cld
add
or
retf
hlt
inc
inc
add
aad
mov
ss
int
add
(bad)
sahf
cmp
jne
loope
test
pushf
gs
fld
hlt
mov
nop
xchg
movs
push
pop
inc
jmp
mov
xchg
iret
push
frstor
mov
cdq
lea
leave
int
inc
sbb
push
in
popa
pop
xchg
sahf
inc
and
loopne
enter
add
cmp
sbb
xor
adc
adc
pop
nop
loopne
dec
xchg
sbb
loop
std
push
mov
into
and
push
enter
jecxz
loope
or
mov
stc
sbb
add
mov
pop
or
pop
or
dec
add
sub
mov
cdq
xor
sub
xchg
or
or
mov
call
sbb
rol
mov
out
and
hlt
sub
sbb
mov
mov
in
adc
cmp
shl
push
je
xor
mov
arpl
push
cmp
inc
sub
xchg
add
add
inc
dec
pop
test
sar
jl
xlat
push
dec
test
adc
jl
adc
or
mov
jbe
jbe
push
pop
test
push
jno
xchg
sbb
fwait
or
or
mov
sbb
jne
push
xcrypt-cfb
cmps
pusha
daa
ret
pop
inc
jp
sbb
mov
in
jmp
pushf
scas
add
xor
add
mov
in
adc
add
icebp
adc
mov
add
dec
hlt
xor
mov
pop
cmp
push
adc
stos
mov
push
jne
push
jbe
enter
sub
jae
add
or
jmp
sbb
lock
adc
clc
shl
add
lea
ret
or
xor
adc
mov
imul
test
add
das
add
je
dec
shr
jle
fidiv
inc
lahf
sub
sub
stos
push
jae
adc
push
jo
rol
sbb
mov
mov
push
pop
add
popa
push
inc
pop
push
xchg
nop
jg
jg
sub
sbb
lods
mov
shr
and
lea
sub
call
(bad)
and
xor
jmp
or
pop
or
jge
xchg
aam
sbb
inc
push
dec
cmp
imul
or
inc
lock
sbb
stos
in
and
and
mov
jmp
inc
lock
pop
clc
push
ja
mov
inc
jo
adc
push
cmc
loope
sbb
lea
pop
pop
push
xchg
mov
(bad)
aaa
cmp
mov
jb
add
push
sbb
push
and
pop
test
mov
mov
shr
push
dec
sub
xor
loope
jmp
dec
sbb
ins
in
out
jmp
adc
sub
adc
inc
pop
add
ret
call
cmps
aad
sahf
mov
adc
mov
adc
inc
jnp
pop
xchg
xchg
jmp
sub
(bad)
int
jo
sbb
sbb
mov
sub
cmp
adc
and
dec
cmp
inc
repnz
jl
push
enter
nop
or
in
add
dec
mov
(bad)
mov
or
pusha
cmp
popa
or
mov
int3
mov
lods
mov
sbb
leave
(bad)
cmp
pop
add
dec
jnp
clc
dec
and
mov
push
adc
aas
xor
push
mov
xchg
xchg
mov
inc
or
mov
inc
push
icebp
loop
in
js
mov
jno
cmp
test
sbb
mul
push
clc
cmp
adc
sbb
call
sbb
bound
xchg
inc
dec
xchg
dec
sbb
add
xchg
mov
test
sbb
(bad)
add
jmp
lods
shrd
cmp
test
daa
add
sbb
dec
inc
and
or
xchg
push
and
stos
xlat
ins
push
das
stc
xchg
fisttp
icebp
jle
push
lea
imul
add
push
push
inc
test
pop
jmp
aas
dec
enter
mov
dec
sub
loop
loope
in
add
add
add
push
dec
sub
mov
mov
push
sub
dec
in
and
push
push
(bad)
push
push
or
inc
dec
mov
and
ret
add
in
inc
pop
push
ins
dec
test
inc
enter
in
scas
jp
dec
adc
fsub
push
mov
jo
pop
cmp
sbb
and
std
jns
or
addr16
scas
sub
add
adc
adc
add
sbb
fadd
bswap
cmp
add
es
test
jle
lock
jl
imul
pop
xchg
fld
mov
xchg
leave
les
jnp
ret
dec
adc
loopne
push
enter
adc
test
ss
jo
adc
xchg
sahf
push
mov
lock
and
icebp
add
or
mov
nop
or
dec
loopne
out
imul
adc
push
loopne
add
cmp
sub
dec
mov
cmp
sbb
add
mov
fist
lods
hlt
xor
sbb
sbb
out
mov
mov
adc
aam
dec
inc
pop
xchg
movs
push
in
add
jmp
jae
test
xchg
sub
push
int
cdq
imul
or
jno
lock
sbb
sbb
or
and
loopne
movs
imul
or
enter
or
push
mov
xor
sub
xchg
adc
sbb
adc
xor
inc
(bad)
sub
or
sub
jecxz
dec
jg
inc
inc
add
mov
xor
and
jp
fst
inc
adc
or
cmp
xor
inc
inc
xchg
jle
push
test
sub
pop
dec
or
jp
sbb
and
push
(bad)
cwde
test
stos
mov
add
sbb
fst
push
stos
and
or
and
fld
cmp
and
jne
nop
in
nop
(bad)
outs
and
push
adc
pop
(bad)
div
mov
adc
aam
or
sbb
shl
pop
dec
(bad)
mov
lods
add
jmp
pop
add
add
push
xor
push
xor
mov
sub
sbb
ins
mov
inc
fisubr
xor
cmc
adc
repnz
mov
dec
in
push
movs
in
sar
sub
adc
pop
push
xchg
mov
xor
mul
push
inc
dec
dec
into
or
ret
mov
sbb
repnz
jbe
mov
test
sub
shl
sub
mov
sbb
aaa
test
je
enter
pop
jns
adc
jns
je
xrelease
mov
push
(bad)
pusha
retf
push
ret
push
les
add
add
mov
xor
jp
mov
mov
jl
xchg
lock
or
nop
jmp
pop
repz
sbb
xor
jp
jno
adc
nop
mov
xchg
dec
es
add
cmp
movs
sbb
and
or
jno
scas
fwait
call
cmp
test
in
scas
jmp
push
call
xchg
dec
and
or
bound
cmps
aam
and
mov
cmp
sub
or
xor
mov
and
fsub
xchg
sbb
cdq
ret
aas
mov
fdiv
jne
clc
inc
ins
and
outs
xchg
xlat
pop
push
mov
sbb
je
and
xchg
adc
xor
loope
mov
test
or
xchg
imul
movs
push
push
fdiv
pop
adc
js
in
shl
and
adc
js
loopne
loopne
adc
fdivr
adc
xchg
shl
mov
movs
jae
jne
cmp
je
or
mov
sub
sub
movs
aam
inc
xchg
ins
cmp
nop
or
jle
dec
fsub
xchg
push
sbb
les
sub
cli
xchg
add
push
add
jg
addr16
push
add
fdivr
int
push
push
cmp
xchg
inc
movs
xor
or
dec
ins
jle
bndstx
adc
jo
arpl
add
iret
mov
pop
sbb
or
jne
scas
ret
inc
push
mov
jl
adc
push
add
fdiv
mov
xor
add
loope
or
push
inc
push
and
cmps
sbb
rcl
mov
cmp
push
or
cmp
es
jne
les
dec
scas
add
jmp
add
and
dec
mov
scas
push
cmp
and
sbb
pop
jo
push
sub
mov
enter
dec
fild
adc
dec
stos
sbb
xchg
in
push
add
add
mov
add
xchg
daa
cmc
xor
xor
and
or
xchg
push
cmps
out
mov
sub
sahf
out
sbb
enter
push
inc
rcr
sahf
gs
mov
lea
mov
xor
sub
shl
add
adc
push
add
and
mov
add
mov
inc
imul
stos
mov
enter
jne
mov
(bad)
shl
xor
mov
adc
movs
cvtps2pd
js
xchg
add
pusha
mov
cmps
push
clc
dec
mov
cs
retf
out
inc
jmp
pop
pop
lahf
add
jo
nop
mov
xor
je
inc
jge
loopne
out
clc
push
sbb
imul
dec
sbb
jmp
and
and
neg
aaa
or
inc
jo
push
lea
jns
inc
fbld
jge
xor
rcl
sbb
xor
add
mov
int
mov
sbb
lods
(bad)
ins
dec
push
gs
ret
mov
int3
js
cdq
xchg
mov
jnp
shr
and
push
push
fstp
add
or
xchg
or
mov
(bad)
push
bnd
adc
dec
scas
and
sar
fisub
lods
scas
jp
shl
add
rol
je
inc
jne
sbb
test
inc
test
xchg
imul
adc
icebp
es
adc
psubw
pushf
add
mov
js
jle
cmp
(bad)
adc
pop
popf
add
dec
popa
and
sbb
mov
or
push
mov
add
jb
inc
lock
inc
icebp
or
inc
lods
test
jne
sub
xchg
jno
cmp
xchg
xchg
jno
add
mov
sub
jbe
mov
pop
ficom
or
shr
ret
shl
jl
push
sub
(bad)
inc
iret
rol
adc
xchg
sbb
jmp
add
or
xchg
arpl
addr16
popa
push
pop
jecxz
mov
mov
add
jmp
inc
bswap
movs
adc
fmul
jne
add
int
inc
int
or
test
jbe
inc
push
mov
inc
inc
es
cmps
mov
jmp
das
out
in
test
xor
leave
ret
adc
sbb
js
in
loope
cs
ja
nop
stos
jb
or
pop
fxch
or
jmp
jge
dec
hlt
loopne
jge
mov
inc
ret
test
out
add
ret
addr16
fstp
ret
icebp
fst
inc
js
rdmsr
xchg
add
push
or
scas
pop
and
fdivr
sbb
cmp
cld
jns
in
cmc
cmp
xchg
rcr
aam
fcomp
jne
cmp
sub
or
sbb
add
and
adc
mov
lock
dec
xor
lock
and
or
push
push
pushf
in
ffreep
mov
xlat
in
push
add
pop
pop
or
mov
dec
push
add
mov
dec
lahf
outs
aas
rcr
adc
pusha
push
add
and
cmp
into
ret
ret
or
push
ret
and
inc
les
out
mov
movs
inc
test
and
fwait
ds
(bad)
scas
popa
test
dec
and
in
or
pop
and
aas
iret
sub
and
inc
add
neg
nop
jmp
dec
ja
xlat
push
into
adc
adc
or
sar
je
mov
scas
fdiv
inc
xor
outs
pop
and
push
inc
dec
jno
push
sbb
pop
mov
aad
les
or
or
call
inc
inc
jl
retf
or
add
add
jle
and
pop
or
cmps
inc
adc
dec
daa
xor
dec
or
pop
inc
pop
lahf
pop
push
clc
jnp
(bad)
cmp
adc
and
mov
adc
popa
loop
loopne
or
mov
repnz
call
sbb
and
jns
push
and
xchg
jmp
cmp
std
adc
mov
dec
cmp
idiv
jmp
loope
mov
push
fisubr
lea
sbb
xor
(bad)
cmp
in
jnp
add
push
dec
mov
add
mov
or
add
mov
sbb
xchg
cmps
adc
ja
into
cs
test
xchg
in
mov
push
cmp
mov
fmul
sbb
inc
push
cmp
pusha
(bad)
jno
fcomp
sti
call
aam
seto
test
xchg
pop
push
adc
jne
sub
pop
imul
sub
sbb
dec
ret
push
pop
pop
mov
mov
dec
ror
aam
push
mov
cmps
or
add
or
or
pop
test
nop
mov
(bad)
dec
repz
adc
ins
loope
test
add
(bad)
xor
and
lea
repnz
enter
inc
push
sub
and
mov
inc
cmp
popf
add
out
jecxz
adc
push
inc
dec
in
das
push
mov
jmp
cs
dec
add
jl
jbe
inc
adc
sub
add
push
ja
sbb
jmp
sub
adc
add
mov
jb
adc
jo
or
adc
pop
sub
mov
je
aad
mov
push
push
fstp
adc
add
sbb
dec
fwait
lea
or
fimul
scas
sqrtps
add
add
in
adc
adc
ins
data16
mov
ins
stos
loop
enter
inc
lock
jne
push
hlt
mov
dec
and
and
pcmpgtd
xchg
ret
push
sub
cmc
add
jns
pushf
mov
test
or
test
ret
and
inc
sbb
push
stc
pop
and
sbb
dec
ret
call
mov
mov
aad
das
sub
sbb
dec
pop
mov
jge
(bad)
(bad)
lds
shr
mov
js
or
add
mov
shl
push
jmp
mov
(bad)
imul
add
sub
adc
mov
movs
xor
and
mov
bound
call
adc
ret
outs
jmp
in
ret
xlat
mov
fist
ds
mov
xor
sub
lods
in
sbb
pop
shl
cmp
pop
push
ficom
add
xchg
dec
and
arpl
sub
push
push
dec
imul
mov
(bad)
int3
and
push
mov
(bad)
ja
ja
in
mov
pop
push
or
fwait
and
push
or
or
retf
les
add
push
jecxz
sub
add
sub
jmp
pop
or
mov
outs
push
pop
imul
add
add
and
sbb
push
icebp
xchg
in
fdivr
je
fild
pushf
ja
xor
inc
mov
mov
xchg
xchg
ins
or
cdq
rol
jb
pop
mov
mov
or
mul
inc
retf
xchg
jne
retf
mov
call
sbb
iret
mov
or
add
inc
cmp
lock
inc
daa
inc
sbb
and
mov
add
mov
xchg
and
inc
xor
sub
loope
xchg
adc
add
add
jb
les
push
fs
cmp
(bad)
and
xchg
adc
adc
mov
(bad)
adc
ret
shr
data16
aad
dec
adc
xor
test
inc
or
imul
pop
sbb
dec
lods
push
add
lea
pop
sub
je
push
xchg
std
mov
mov
and
loop
test
imul
ins
xor
sub
int
xchg
iret
sar
(bad)
jb
int
xchg
xor
(bad)
mov
push
sbb
ficomp
dec
cwde
sbb
std
sbb
jmp
push
push
add
add
mov
xor
nop
xor
dec
or
nop
dec
add
cmps
add
sbb
not
jg
jne
or
push
fs
jnp
jne
mul
ret
and
mov
cmp
jbe
jg
push
pop
lock
jmp
add
fistp
sub
push
sahf
xor
sbb
sub
cmc
pop
shl
jo
stos
sub
repz
test
imul
cmps
inc
bound
enter
inc
into
imul
gs
add
pop
push
mov
add
cwde
test
dec
cmp
cld
(bad)
mov
or
mov
or
push
(bad)
jmp
pop
fdiv
pop
(bad)
dec
cwde
hlt
jne
icebp
push
(bad)
in
jl
test
push
dec
adc
pop
lea
sub
std
loopne
aas
test
je
dec
jne
mov
(bad)
pop
inc
jmp
sub
and
mov
xor
sbb
ret
mov
pop
(bad)
fild
or
pop
not
pop
add
or
jmp
dec
or
adc
ss
and
inc
mov
jmp
xchg
pop
fld
add
sub
push
or
adc
mov
xor
js
push
push
mov
lock
cs
retf
and
push
aaa
(bad)
jecxz
or
adc
xchg
jmp
or
jne
fst
adc
retf
push
xchg
cmps
in
inc
jg
inc
ss
xchg
pop
adc
sbb
jne
cmc
lds
mov
rcl
inc
inc
inc
ret
or
jbe
mov
add
xchg
pushf
inc
mov
addr16
retf
rol
xchg
(bad)
mov
dec
sbb
cmps
adc
mov
xor
imul
or
pop
adc
mov
push
outs
inc
test
test
and
push
lea
mov
jo
scas
adc
pop
rcr
and
outs
mov
pop
xchg
inc
mov
add
pop
pushf
(bad)
jge
enter
sbb
or
dec
pop
retf
or
sbb
cmp
sub
enter
shl
movs
into
cwde
pop
push
je
inc
sub
pop
or
(bad)
lock
dec
pop
sbb
jo
inc
pop
add
fsub
jne
movs
mov
pop
inc
inc
aad
fst
add
scas
lods
inc
or
xchg
repz
mov
jg
or
push
mov
fs
dec
ret
mov
test
clc
dec
xor
mov
dec
test
dec
xor
jl
ss
hlt
sub
or
cmp
ss
mov
or
adc
jmp
loopne
mov
dec
ret
cmp
jge
adc
lock
jge
inc
cmp
xlat
mov
(bad)
jnp
push
jne
mov
fistp
mov
mov
out
xchg
jb
sahf
aas
sub
sub
mov
(bad)
or
push
add
pop
push
adc
mov
mov
pusha
or
stc
dec
fdivrp
scas
add
sub
in
pop
or
leave
mov
mov
mov
dec
adc
movs
jne
cmp
popa
jo
jge
loope
jae
xlat
dec
icebp
rol
add
icebp
push
lea
das
pushf
retf
or
ret
and
cli
dec
sbb
jno
cmp
mov
and
jb
jp
dec
lock
inc
out
push
jne
out
das
add
push
pusha
and
lea
arpl
push
push
inc
nop
sbb
sub
mov
test
sub
mov
dec
enter
mov
xor
mov
mov
pushf
ins
push
pop
and
sub
push
call
js
enter
cmp
ret
cmc
add
pop
daa
cmp
or
in
sub
sub
stc
inc
mov
cmp
test
stos
shl
cs
xor
hlt
dec
push
cmp
and
mov
popa
das
inc
mov
test
add
test
mov
fild
ja
xor
xor
hlt
jp
cmps
test
in
outs
and
or
les
and
sub
xchg
and
jecxz
clc
call
cli
mov
pop
ins
movs
test
cmp
add
aam
sbb
pushf
xchg
cwde
xchg
and
xchg
(bad)
shl
sbb
push
xchg
fst
mov
std
or
jl
push
les
and
push
push
jecxz
or
jl
xlat
(bad)
pop
or
adc
pop
add
mov
xchg
test
push
sub
scas
aaa
fsub
lock
mov
cmp
add
or
popa
pop
and
subps
sub
cmp
and
sbb
imul
in
xchg
lock
into
sbb
addr16
jl
addr16
jmp
inc
inc
(bad)
leave
sub
mov
add
fs
fcomp
pop
(bad)
aam
inc
les
leave
je
add
cmps
mov
arpl
test
xchg
xor
outs
inc
mov
xor
and
sbb
or
(bad)
xchg
call
rol
mov
pushf
mov
push
pop
pusha
ja
mov
cmp
cmps
or
and
sar
cmp
mov
jbe
add
jg
mov
mov
or
cld
xlat
mov
jae
sub
cmp
loop
mov
jne
int
jo
add
adc
mov
(bad)
retf
iret
inc
outs
jmp
imul
push
cld
or
iret
shl
ret
cmp
sbb
dec
xchg
mov
dec
xchg
add
fistp
push
dec
cmp
aas
mov
adc
sbb
fild
push
in
cli
xor
add
jmp
mul
push
xor
push
xor
jle
add
das
xchg
cmp
jl
mov
pushf
push
out
mov
push
pusha
mov
ret
cmp
lods
push
iret
mov
nop
fcmovbe
mov
jg
mov
push
xchg
imul
fild
dec
(bad)
fcomp
ins
cmp
shl
sub
sub
sub
push
cvtps2pi
imul
jne
push
lock
xor
jmp
mov
jge
cmp
inc
in
popa
push
inc
ror
mov
es
cmp
xor
sub
pop
sub
mov
pop
adc
fcomp
push
(bad)
xchg
pop
mov
push
mov
movs
and
and
dec
loop
sbb
sub
and
adc
clc
call
push
fild
jne
popa
push
add
inc
sub
dec
mov
jnp
or
sub
lea
sbb
and
mov
or
cmp
xor
or
sahf
push
lahf
pusha
pop
fbld
xchg
shl
loopne
movs
call
and
push
xchg
mov
inc
push
and
adc
sbb
rcr
pop
cmp
push
or
xor
dec
shl
mov
ror
pop
push
inc
rcr
or
ja
fdivr
js
test
cmps
sahf
(bad)
popa
pop
jo
xlat
aam
in
je
retf
in
mov
dec
pop
and
lods
shl
in
xchg
push
sub
mov
dec
and
loopne
add
cmp
push
push
adc
jp
mov
sti
sbb
lods
test
dec
xchg
sbb
cmp
sbb
sbb
xchg
sbb
mov
jg
xor
shr
sbb
sbb
clc
or
sbb
pop
pusha
sub
sbb
jge
lahf
add
pop
push
jmp
xor
lea
sub
test
add
mov
scas
rcl
nop
retf
dec
adc
jmp
push
in
inc
xchg
call
shl
or
or
add
ss
cmps
movs
and
and
js
outs
jbe
and
jne
test
popa
xor
mov
clc
test
push
push
push
sub
sub
and
add
jmp
jbe
add
push
(bad)
shl
xor
mov
cmp
loope
mov
adc
int3
jne
sbb
mov
ds
inc
add
mov
add
adc
push
inc
cli
mov
and
mov
jmp
add
lahf
push
xchg
sar
and
mov
test
inc
mov
mov
test
adc
rcl
push
sub
adc
enter
lods
inc
aaa
push
scas
push
dec
xor
mov
jecxz
loope
mov
mov
int3
pop
jmp
fdiv
loopne
add
jae
pop
xchg
mov
test
scas
sub
dec
jb
xor
and
xor
or
into
jmp
add
popf
in
(bad)
inc
and
aam
inc
mov
fdiv
mov
sbb
sub
imul
xchg
jge
hlt
test
xor
inc
jnp
clc
add
inc
jmp
dec
test
icebp
rcl
sbb
sub
and
aaa
add
jne
mov
jmp
bound
(bad)
push
mov
ret
dec
fwait
(bad)
push
or
pop
xchg
mov
mov
jl
xchg
mov
mov
in
sbb
add
leave
push
or
(bad)
stos
xchg
stc
mov
cs
jge
not
popa
inc
mov
or
in
sub
push
and
add
and
pop
mov
daa
mov
mov
xchg
adc
add
add
es
push
mov
bound
movs
sbb
push
test
js
mov
add
fidivr
and
stc
shl
js
mov
pop
std
xor
loope
add
outs
in
adc
push
push
cmp
sub
imul
mov
enter
dec
daa
pop
std
rol
sub
sub
push
dec
mov
xor
mov
sub
fs
add
adc
loope
js
dec
mov
je
inc
jl
inc
test
or
mov
imul
int3
mov
add
mov
pop
mov
jmp
push
pop
mov
sbb
mov
test
pop
dec
(bad)
jns
mov
cmps
into
mov
bound
mov
inc
push
dec
xor
add
movs
cmp
sub
repz
je
cmp
and
jno
mov
cmp
and
inc
and
daa
movs
mov
jne
jmp
mov
inc
push
jecxz
pop
jp
call
nop
jne
imul
sbb
inc
in
das
xchg
add
push
or
adc
add
jmp
jmp
ss
pop
push
inc
mov
pop
je
(bad)
ja
je
in
or
(bad)
leave
std
xchg
inc
not
push
ins
test
call
lea
and
or
dec
rcr
ror
or
fcmove
clc
ja
or
mov
ins
retf
dec
ror
inc
ja
in
test
or
add
dec
dec
fild
mov
jmp
push
push
xlat
in
mov
jae
je
push
xchg
daa
push
rol
push
sub
pop
ja
mov
in
pcmpgtd
je
aam
ja
je
pop
ins
hlt
pop
popf
out
sahf
cmps
push
push
push
or
(bad)
imul
movs
jbe
push
jmp
cmp
xchg
dec
jle
pop
push
cmp
scas
call
xor
fcom
out
or
sub
or
mov
lock
add
push
sub
jnp
and
call
sar
jecxz
lahf
inc
and
push
xchg
ficomp
fwait
jns
add
or
push
dec
mov
iret
mov
rsqrtps
pop
cs
fld
cmp
je
pop
pop
pop
movq
ins
and
mov
xlat
imul
pop
je
cmps
pop
rcr
or
cmp
dec
xor
shr
mov
test
ret
push
xchg
test
add
pusha
pop
inc
or
xchg
jle
xchg
pusha
jge
cmc
jne
push
add
popa
shr
dec
push
push
push
fcomp
mov
shl
mov
not
jne
push
or
fwait
jae
lods
inc
call
mov
pop
bound
popa
leave
push
cbw
pop
lea
add
retf
inc
inc
pop
mov
adc
push
pop
add
xor
or
push
dec
fstp
sbb
jne
sbb
outs
lods
sub
sbb
pop
gs
xchg
xchg
inc
cwde
inc
mov
xor
and
push
adc
aas
aam
mov
jne
cmp
jne
(bad)
sbb
xlat
rcl
push
rcl
and
pop
push
push
and
and
cmps
mov
les
pop
add
add
xchg
jle
xor
dec
test
pop
mov
sar
pop
push
je
push
push
mov
add
mov
les
in
icebp
xlat
push
cdq
or
push
iret
push
or
shl
add
or
mov
out
mov
xor
mov
inc
mov
mov
movs
inc
outs
mov
mov
in
(bad)
inc
push
retf
mov
aas
xchg
xor
retf
add
fwait
sub
or
push
lock
test
push
push
jecxz
mov
cmp
and
cmp
xor
dec
mov
rcl
sub
test
sbb
sub
or
sub
scas
test
jno
shr
js
enter
mov
arpl
and
scas
iret
and
mov
adc
push
mov
arpl
(bad)
jne
pop
mov
aam
jl
jmp
add
jae
ret
and
ret
imul
xor
pop
inc
jne
pop
sub
mov
jmp
push
test
adc
cmp
daa
adc
or
push
adc
mov
dec
mov
pop
aam
neg
push
call
mov
add
in
adc
adc
push
adc
mov
jbe
aaa
adc
jne
sbb
sbb
rcr
add
sub
imul
cmp
lods
mov
rcr
dec
bound
jae
adc
leave
xor
lds
lods
pop
adc
adc
inc
movs
pop
xchg
xor
and
mov
jo
adc
cmp
or
imul
mov
add
lock
or
push
arpl
pop
imul
cdq
les
(bad)
sar
mov
in
or
sar
pop
and
int3
cmp
popf
in
inc
jo
inc
inc
mov
clc
movs
enter
lods
test
rcl
jmp
leave
push
pushf
fdiv
push
add
xor
push
add
inc
jno
xchg
and
daa
test
push
test
pop
das
fwait
addr16
call
mov
inc
das
cmp
lock
mov
aam
imul
inc
in
scas
push
pop
cmp
adc
mov
call
sbb
jecxz
push
add
xor
lahf
movs
mov
mov
adc
cmp
jmp
add
int3
sub
aam
shr
fsub
ficom
test
in
call
dec
stos
and
outs
jmp
xchg
push
dec
es
fcomp
adc
je
and
jmp
sbb
dec
jbe
daa
pusha
push
sahf
les
in
int3
aam
sbb
sub
or
mov
push
mov
lods
gs
push
leave
test
dec
je
int
pop
push
add
mov
and
fcom
sub
movs
push
ins
not
cmp
xor
sub
xchg
pop
ss
add
jb
nop
cdq
dec
pop
cs
mov
je
xor
mov
add
repnz
and
inc
hlt
or
sub
sbb
push
mov
adc
add
pop
mov
icebp
call
or
stc
sti
popa
adc
or
xor
push
into
jmp
shl
sub
dec
fwait
sbb
popa
sbb
and
jne
push
jmp
push
lea
ins
test
xor
cmp
and
dec
enter
in
mov
cwde
enter
inc
inc
or
test
inc
sbb
dec
push
stc
loop
or
push
adc
xchg
nop
pushf
nop
pop
sbb
dec
sbb
call
or
xchg
sub
daa
cmp
pop
movs
dec
or
pop
dec
xor
or
inc
scas
dec
clc
pop
pop
pop
shr
daa
leave
stc
fadd
rcr
xlat
scas
outs
jmp
cmovs
xchg
inc
nop
stos
test
out
jl
mov
push
adc
ret
inc
stc
data16
cmp
cmps
dec
sbb
arpl
xchg
(bad)
adc
clc
dec
pop
sbb
adc
pop
hlt
mov
cmp
add
cmp
popa
jns
ror
cmps
es
scas
adc
add
ret
mov
add
shr
dec
stc
aas
push
push
pop
xchg
mov
sbb
mov
arpl
mov
lods
jns
inc
outs
mov
push
or
mov
or
push
adc
xlat
adc
test
inc
jns
xor
mov
pop
rcl
add
push
mov
xor
add
ja
rcr
pusha
sar
cmp
pop
jns
lock
add
nop
cli
push
fxch
cmp
add
mov
or
jns
cmp
push
xchg
sti
in
fcom
outs
es
dec
push
push
add
sbb
loope
adc
xor
or
or
pusha
and
adc
or
fisttp
sub
sub
pop
out
je
rol
(bad)
loopne
and
pop
jo
dec
test
pusha
sub
sbb
outs
mov
pop
jp
or
pusha
jmp
push
cmp
repz
clc
add
sub
cmp
sbb
call
out
imul
and
sub
or
aam
and
je
dec
jecxz
ret
and
adc
mov
add
fidiv
push
mov
cdq
or
ficom
adc
xor
push
inc
push
jb
push
push
adc
add
je
std
xchg
nop
inc
aad
push
jne
push
sbb
call
push
mov
adc
or
mov
sub
push
push
push
push
inc
cmps
inc
sbb
add
push
lods
add
mov
movs
test
or
push
test
xchg
and
shl
pusha
clc
mov
test
add
or
sbb
aad
cmps
mov
adc
or
xchg
add
(bad)
aaa
jne
fwait
xor
adc
cmp
fadd
cs
add
mov
or
xor
and
xor
inc
jmp
dec
dec
jl
mov
jo
xchg
inc
or
movs
sub
xor
jo
push
cmps
dec
jl
movs
xchg
lods
call
adc
and
add
sbb
lods
fcmovne
adc
(bad)
cmp
ins
fstp
out
push
add
push
test
mov
xchg
je
imul
mov
ja
nop
and
mov
add
call
jmp
sti
cld
jl
dec
push
ret
hlt
imul
mov
push
push
clc
out
retf
(bad)
push
jmp
lea
jg
push
or
pop
mov
cmp
xor
adc
hlt
or
dec
rcl
dec
and
std
in
and
adc
scas
push
test
mov
leave
shl
push
push
inc
xchg
lods
jmp
mov
mov
aas
cmp
adc
mov
ins
add
adc
gs
xor
jo
sbb
sar
add
sbb
sub
or
add
push
rcr
test
(bad)
sub
jno
pop
xchg
fistp
add
ret
sti
je
shr
jecxz
jmp
xchg
jp
push
inc
or
pushf
cmp
loopne
shr
sbb
or
sub
jge
mov
cmc
fbld
pop
or
sub
cmp
lea
ror
ret
rol
push
jno
jmp
and
into
adc
dec
loopne
call
adc
ret
xor
adc
loopne
push
mov
inc
mov
lea
pushf
leave
retf
mov
and
sub
js
sub
not
jb
(bad)
mov
(bad)
cld
test
push
inc
mov
popa
sub
and
ja
int3
inc
call
mov
inc
fld
adc
fist
cld
in
je
cmp
icebp
test
std
dec
popf
push
sbb
xor
xchg
jle
and
adc
dec
mov
mov
mov
in
pop
imul
fwait
dec
xlat
mov
push
sbb
lock
push
mov
test
inc
fwait
lock
cmps
ds
or
arpl
xor
leave
clc
icebp
ret
int3
cmps
inc
les
sub
retf
adc
call
(bad)
or
(bad)
cwde
gs
and
or
dec
sbb
push
jmp
mov
ficom
nop
mov
adc
dec
or
mov
or
cmc
jmp
lods
ja
por
lea
sub
aas
popf
ins
sub
or
hlt
dec
and
ds
add
xchg
adc
and
rcl
cwde
push
test
cs
jns
jmp
mov
ror
push
scas
push
pop
call
add
fadd
(bad)
xchg
shr
sbb
xchg
sbb
loopne
inc
cs
leave
test
in
loopne
pusha
dec
test
cmps
test
add
add
movs
add
fprem
hlt
push
idiv
or
and
xchg
dec
(bad)
inc
ss
cmps
rcr
retf
xor
xor
leave
inc
je
push
push
lock
fadd
lock
cmp
xchg
dec
mov
lds
and
inc
loope
adc
sub
lock
call
add
and
pusha
lahf
pop
cmp
fstp
cwde
or
mov
xchg
push
lock
pop
lods
sbb
stos
jp
dec
loop
xlat
dec
add
std
pop
push
xor
inc
adc
mov
cmp
inc
jecxz
stos
mov
push
pop
jmp
cmp
fnstenv
cmp
aam
(bad)
loopne
push
aas
mov
movs
js
add
cmp
add
mov
xchg
push
dec
pusha
inc
pop
sbb
add
cmp
mov
jne
sub
and
shl
movs
or
add
neg
and
jo
sub
loope
mov
pop
xchg
inc
mov
loopne
or
out
cmps
and
jl
cs
add
lock
mov
dec
jecxz
les
cdq
xor
adc
sub
push
sub
and
icebp
mov
imul
and
rcr
scas
add
dec
mov
adc
pop
add
add
jecxz
sub
xor
and
popf
adc
fnsave
icebp
inc
mov
and
push
and
cmps
fdivr
popa
sub
push
or
xchg
enter
icebp
inc
inc
pop
arpl
cwde
or
or
inc
imul
sub
inc
mov
dec
out
sub
in
and
pop
and
xor
shl
add
and
xchg
mov
inc
sbb
dec
ja
rcl
pop
std
xchg
pop
xchg
pop
jne
arpl
sub
jge
shl
adc
dec
or
push
sar
jmp
sbb
inc
bound
mov
ss
mov
push
in
jecxz
push
push
sbb
add
leave
add
sub
jecxz
xchg
clc
jmp
into
push
sbb
(bad)
ret
push
(bad)
jle
es
cli
(bad)
pop
(bad)
retf
ror
pop
sub
xlat
xor
add
add
push
adc
test
pop
les
jecxz
inc
dec
cmps
jecxz
fcmovbe
pop
shl
xor
adc
inc
int3
adc
inc
push
sub
push
hlt
dec
add
jne
dec
adc
mov
mov
add
mov
xchg
lods
mov
sub
xor
cmp
mov
or
rcr
mov
mov
and
jae
mov
sti
inc
dec
or
call
ficomp
sbb
add
cmp
add
mov
pop
rcr
inc
pop
push
out
cdq
push
push
mov
or
mov
movs
and
rol
test
add
xchg
xchg
int3
sahf
xchg
or
or
xor
adc
retf
add
adc
and
sub
sub
inc
jp
or
adc
pushf
add
out
and
mov
ins
dec
sbb
pop
das
cmp
mov
adc
push
popf
push
ja
jle
inc
inc
and
or
shl
dec
or
pop
mov
pop
or
xchg
repz
pop
fdivp
hlt
or
shl
cmp
cmp
push
dec
add
adc
inc
add
or
dec
and
stos
sub
iret
push
or
adc
jmp
and
cmp
push
or
or
or
inc
add
scas
mov
pop
data16
sub
inc
icebp
bound
and
inc
aam
cmp
jle
rol
and
xor
xchg
shl
imul
into
push
push
xchg
in
outs
add
in
mov
pusha
jg
shl
mov
ss
loopne
push
imul
out
push
loope
mov
push
push
mov
inc
sub
pop
mov
scas
pop
mov
mov
ret
adc
movs
or
fstp
add
js
ins
daa
cmc
imul
les
push
scas
xchg
and
mov
lahf
cmp
sti
inc
bound
inc
sbb
mov
mov
pushf
xor
xchg
inc
int3
add
xor
xchg
shl
rcr
add
sbb
pop
and
mov
pop
add
rol
adc
fs
mov
in
shr
not
test
es
or
mov
pop
adc
mov
dec
shr
xlat
and
adc
sub
push
std
jmp
push
xchg
or
(bad)
jg
mov
dec
sub
pop
dec
movs
push
pop
mov
push
mov
scas
into
dec
inc
loopne
xchg
lds
add
add
and
movs
movs
mov
inc
add
test
and
lea
sub
mov
aam
je
push
into
movs
push
mov
add
pop
xor
pop
pop
jge
adc
or
and
or
or
jno
int3
and
fld
mov
push
add
stos
bound
jae
cmps
xchg
mov
ret
sbb
pop
xchg
sbb
jns
jnp
pop
enter
shl
jo
push
inc
test
ins
sub
dec
jmp
adc
rcl
dec
cmp
ins
je
sub
movs
into
push
xchg
call
shl
clc
movs
adc
add
push
sbb
(bad)
in
push
dec
aam
jmp
sbb
es
push
and
and
js
add
adc
and
mov
icebp
fcomp
sbb
in
mov
adc
or
add
adc
xor
adc
pop
add
sub
adc
pop
or
jnp
jo
xor
movups
and
add
loopne
adc
dec
mov
lods
shr
mov
jmp
add
ins
(bad)
pop
jp
pmuludq
pop
dec
jo
cmp
fdiv
adc
sub
inc
popa
xchg
or
push
or
jle
mov
xchg
test
aaa
je
(bad)
in
and
inc
sub
movs
icebp
(bad)
pop
es
mov
pusha
cdq
push
mov
and
psubusb
lock
mov
or
adc
add
icebp
push
mov
mov
pushf
xor
or
cmp
aad
cmp
movs
mov
push
or
sbb
xor
xchg
loope
xchg
mov
lock
or
push
hlt
add
push
pop
rol
retf
pop
sti
ja
dec
mov
leave
adc
ror
push
pop
pop
iret
imul
test
shl
mov
es
or
cwde
and
lock
inc
push
int3
add
bound
or
test
dec
fbld
pop
clc
pusha
and
and
iret
lea
sahf
dec
add
mov
not
js
psubsw
cmp
leave
pop
add
push
push
xchg
mov
add
inc
sub
jnp
adc
pop
adc
(bad)
mov
test
fst
cli
enter
cmp
pop
xchg
out
sub
daa
and
jmp
push
or
sub
rcl
push
xor
out
adc
add
mov
retf
add
jmp
ja
mov
or
xlat
ret
add
test
movs
push
sbb
add
je
pop
add
(bad)
nop
adc
mov
add
or
sub
(bad)
out
cmp
pop
aaa
mov
push
aaa
and
imul
sbb
xor
or
xchg
dec
inc
cmp
rcr
rcl
add
sbb
jecxz
lods
xchg
pop
rol
or
test
or
mov
jle
and
sbb
jnp
out
and
cmp
cmp
mov
add
pop
xchg
lods
mov
mov
rcl
cmp
mov
mov
jae
dec
cmp
dec
nop
xor
dec
les
push
xor
movs
or
pop
push
lods
pop
cmps
jg
add
dec
push
movs
inc
inc
stos
aas
in
mov
or
and
or
xchg
imul
or
inc
fdiv
addr16
add
xor
add
lods
pusha
adc
popa
gs
mov
aas
mov
pop
adc
jl
lahf
xchg
fdiv
push
loopne
xchg
inc
push
dec
js
or
mov
outs
pop
pop
jne
and
sub
aaa
or
lea
mov
pop
pop
aam
inc
aas
or
sbb
sbb
jmp
sub
fld
into
adc
bound
xchg
popf
xor
js
clc
inc
std
mov
cmp
daa
push
push
jmp
enter
inc
adc
and
mov
mov
rol
xchg
push
test
add
js
cmp
clc
jmp
or
xor
cmp
and
js
push
adc
cs
mov
cmp
mov
pop
sbb
int
fstp
push
and
in
adc
mov
mov
pop
cmps
cli
mov
(bad)
fadd
movs
movs
mov
inc
xlat
xor
outs
fwait
xchg
push
mov
xor
mov
iret
add
push
fwait
adc
inc
fsub
jmp
imul
mov
pop
test
sbb
cmp
adc
loopne
adc
(bad)
imul
jae
sub
fcomp
add
lock
jb
lock
sahf
or
jne
fdiv
adc
or
fptan
dec
xlat
jns
fs
(bad)
and
and
(bad)
cmp
cmp
aam
push
div
push
or
mov
pop
add
sahf
pop
test
sti
mov
jmp
pop
add
and
mov
xor
add
adc
mov
and
rol
rcl
adc
jns
pop
mov
adc
lods
or
add
jb
sbb
rcr
cld
add
sbb
pop
clc
push
sti
xor
sub
lea
test
out
rcl
mov
out
add
out
xchg
push
or
scas
mov
pop
xor
pop
aam
or
mov
push
or
and
add
mov
adc
(bad)
mov
jmp
add
daa
inc
js
shl
stos
dec
aas
add
mov
add
cli
xor
push
add
es
daa
pop
dec
or
mov
test
push
xchg
adc
jecxz
inc
(bad)
jmp
stos
shr
add
push
loop
cmp
mov
in
adc
inc
mov
dec
push
add
sub
inc
pop
(bad)
jmp
push
and
jae
imul
jp
or
mov
sub
lock
sbb
pushf
dec
mov
fcomi
out
psubsb
mov
push
mov
mov
or
mov
jnp
sub
into
(bad)
sar
push
cmps
cld
xchg
fcmovbe
in
mov
or
cld
add
cmp
inc
gs
sahf
mov
test
jmp
in
push
push
mov
in
mov
repz
cld
dec
jge
jge
add
iret
push
adc
sbb
inc
sbb
hlt
cmp
ja
inc
xor
cs
mov
imul
mov
rcl
push
hlt
pop
call
add
and
push
push
mov
fcomp
jne
sub
pop
rcr
push
outs
dec
adc
xchg
cmp
lock
(bad)
or
mov
call
lods
adc
cmps
clc
inc
add
rcr
xor
test
dec
dec
adc
adc
inc
mov
mov
xor
cmp
jmp
in
push
cmp
(bad)
and
xor
pop
xchg
or
aam
mov
pop
xlat
imul
outs
xchg
jp
imul
adc
leave
xor
xor
xchg
add
sbb
push
mov
add
mov
imul
int
adc
pop
push
pusha
js
sub
push
sbb
add
imul
nop
ret
adc
jecxz
loopne
cmp
push
mov
out
imul
jbe
mov
or
push
bound
je
add
mov
pop
lds
sub
mov
out
cmp
les
mov
dec
test
mov
or
icebp
xor
inc
jmp
or
add
mov
jnp
adc
adc
mov
xchg
pop
adc
add
adc
out
dec
inc
popf
cmp
pop
aas
mov
add
push
les
sbb
fs
dec
int3
mov
jmp
pusha
sub
sub
dec
gs
push
je
cli
ret
xor
mov
sbb
mov
lock
mov
and
push
jmp
jne
ins
out
mov
and
sbb
(bad)
xor
sbb
pop
loopne
(bad)
std
and
inc
and
mov
(bad)
icebp
xchg
xchg
or
js
or
add
adc
or
pop
xor
popf
popf
jmp
or
pop
gs
jmp
je
pop
sub
sar
pop
sbb
or
or
rcl
push
inc
mov
xor
sbb
xor
mov
scas
and
push
ins
inc
xchg
mov
xchg
pushf
in
jl
jl
test
pushw
(bad)
mov
aas
nop
xchg
cmp
mov
dec
cmp
xor
data16
in
inc
cmp
and
fs
daa
pop
fistp
lods
dec
cwde
push
add
add
mov
jb
repnz
call
daa
dec
ror
xor
or
hlt
mov
xchg
and
or
gs
mov
call
sub
popa
push
daa
jecxz
adc
dec
sub
inc
sbb
push
mov
ret
jb
xchg
mov
xor
rcl
dec
adc
push
fist
fdiv
out
sbb
or
adc
xor
dec
leave
sbb
mov
or
das
inc
cmp
aaa
dec
rol
xor
adc
dec
aam
sbb
add
or
shr
fdivr
inc
mov
aas
adc
xchg
inc
and
lock
sbb
data16
pop
mov
setg
sbb
xor
lea
les
cmps
test
mov
mov
add
push
and
mov
mov
mov
ss
cmps
test
mov
cmps
out
das
add
or
dec
adc
(bad)
(bad)
sub
clc
sub
inc
ror
xchg
mov
repz
add
les
and
add
adc
xor
xor
stc
xchg
mov
sar
jg
adc
inc
and
inc
loopne
or
or
pop
xlat
stos
push
(bad)
xchg
es
jbe
fistp
fild
test
mov
or
add
inc
add
add
push
push
popa
addr16
sbb
imul
sbb
shr
popa
arpl
nop
mov
push
jns
xor
push
out
cmp
inc
xchg
arpl
int3
inc
xchg
adc
ret
call
and
xor
test
xor
pop
add
mov
inc
out
test
and
ret
call
dec
mov
dec
pushf
inc
xor
lock
gs
sub
push
xchg
mov
or
xor
std
loope
shl
cmp
(bad)
cmp
sbb
ins
push
mov
ins
jmp
mov
sub
add
mov
sbb
cmps
xchg
icebp
mov
clc
sbb
xor
pop
mov
cmc
or
inc
lea
jmp
mov
fisttp
aad
mov
sub
and
ins
jge
xor
outs
inc
jmp
mov
cmp
sub
mov
pusha
mov
and
mov
test
jmp
jnp
cmp
sti
sahf
sub
lea
mov
ja
sub
xor
outs
push
test
xchg
mov
adc
mul
imul
xchg
or
in
inc
aas
test
std
dec
fdivr
outs
jae
push
and
and
sti
jne
cmp
test
add
cdq
add
scas
sbb
out
and
jo
add
and
test
mov
fmul
pop
int
fsub
push
pop
or
mov
cmp
retf
sub
fsubr
and
dec
xchg
shl
(bad)
sub
lea
push
adc
ds
xchg
das
in
enter
retf
mov
add
inc
call
adc
and
jo
ret
or
cmp
add
xchg
adc
jmp
mov
call
xchg
push
(bad)
pop
lods
push
pop
ins
or
mov
lods
and
scas
mov
(bad)
cmp
or
lods
pusha
cmp
cmc
test
inc
sub
push
mov
(bad)
push
stc
push
sub
sbb
adc
mov
and
or
pop
cmps
sbb
and
popa
push
xchg
dec
add
sub
add
push
dec
and
int
ds
and
or
inc
inc
scas
je
adc
mov
dec
adc
adc
add
std
and
xchg
xor
ret
push
lahf
sub
jnp
(bad)
push
clc
clc
cmp
xor
sbb
mov
loop
jmp
icebp
leave
adc
or
outs
or
inc
out
add
pop
xchg
add
add
pop
mov
gs
rol
sub
fisttp
xlat
and
xor
imul
adc
sbb
add
sub
sar
rol
jmp
js
mov
fild
lock
sub
out
sub
pop
repz
xor
movzx
pop
adc
cmp
dec
push
(bad)
mov
lods
or
sub
dec
cmp
loope
inc
jl
inc
jg
jge
adc
adc
pop
mov
ficom
jbe
inc
(bad)
push
scas
lahf
xchg
je
adc
or
sub
push
or
adc
sbb
daa
cmp
pop
test
add
xor
jns
sahf
inc
call
xchg
or
xchg
inc
pusha
sbb
cmp
jne
bound
pop
mov
dec
(bad)
push
push
popf
sar
inc
jns
push
or
test
xlat
fistp
lahf
pop
cmc
loopne
xchg
pushf
clc
inc
add
mov
sbb
mov
in
adc
inc
mov
dec
leave
lods
ds
pop
mov
add
repnz
push
sbb
lahf
fwait
movs
push
push
mov
sbb
mov
push
popf
lods
mov
mov
pop
inc
dec
sub
iret
jnp
mov
jmp
xchg
and
jl
inc
push
lods
ret
inc
mov
add
in
jle
or
inc
sub
pop
sub
cdq
int3
das
sahf
adc
or
mov
cmp
rcr
push
xchg
hlt
push
mov
daa
pop
jecxz
jl
dec
push
adc
xor
and
test
add
and
lea
or
sub
sbb
les
xor
inc
dec
movs
sub
push
ss
mov
dec
jg
pop
fisubr
es
mov
cmp
inc
into
(bad)
sahf
xor
movs
call
dec
push
sub
fidiv
xchg
and
push
add
or
pop
popf
out
add
add
test
or
(bad)
or
add
das
sub
mov
fnsave
mov
xchg
or
inc
dec
hlt
add
dec
cmp
test
mov
xchg
inc
inc
dec
dec
pop
add
jl
enter
mov
mov
or
dec
enter
pop
cmp
xor
push
fdivr
vpshufhw
(bad)
mov
mov
gs
popa
and
push
data16
ins
sub
jmp
pop
dec
popa
hlt
mov
or
cmp
sub
pop
outs
lods
rcr
(bad)
fcomp
or
dec
pop
mov
push
xchg
and
das
enter
retf
dec
ja
or
ins
enter
adc
mov
jne
test
cmps
mov
dec
xor
sbb
pop
xchg
test
sub
push
push
jb
lods
popa
jno
inc
push
pop
cs
adc
pushf
enter
adc
sar
int
jecxz
div
rcr
cmp
in
sar
loopne
div
sub
call
push
and
pop
adc
jmp
(bad)
repz
add
ja
pop
mov
out
shl
cli
outs
jmp
add
cld
xor
and
lods
(bad)
shl
sub
movs
pop
xchg
loopne
ret
ja
popa
loopne
shl
and
daa
js
cmp
inc
nop
pop
ins
add
popf
es
fcom
(bad)
jmp
mov
mov
pop
rcr
add
add
sbb
aaa
es
xlat
mov
inc
sbb
or
into
mov
push
mov
test
outs
fs
dec
les
jecxz
lea
ins
xor
pop
or
sub
pop
inc
mov
in
xchg
and
mov
in
cwde
add
ret
outs
call
dec
cmps
enter
cmovle
imul
pop
in
jl
hlt
push
mov
je
inc
jmp
call
and
or
cld
lea
mov
movs
push
sbb
pop
dec
(bad)
jns
sbb
mov
popf
jb
sub
mov
cmc
bound
lock
lods
or
mov
movs
add
inc
sub
sbb
cmp
cmps
add
es
jns
jge
mov
leave
xchg
cmp
jns
sbb
adc
dec
out
pop
aaa
mov
adc
mov
pop
daa
shl
jns
mov
sbb
shr
add
dec
clc
mov
sub
or
mov
jl
inc
iret
dec
adc
inc
mov
cmp
adc
xchg
fiadd
les
popa
cmps
mov
push
mov
push
inc
inc
pop
xchg
in
pop
cmp
cmp
ins
shl
inc
or
scas
and
mov
pop
shr
cmp
sub
ret
xor
or
or
add
and
outs
push
repz
cmp
pop
jmp
push
inc
pop
outs
dec
and
push
dec
cld
ret
jle
cmp
jge
fild
in
adc
pop
push
cmp
jge
mov
inc
cwde
push
fs
adc
add
pop
sbb
push
pop
cmp
pop
pop
dec
call
lods
jne
push
add
movs
or
adc
int3
in
jg
adc
sbb
dec
ss
pop
or
xchg
mov
push
or
aas
ins
in
mov
mov
jns
add
shl
add
call
xor
push
add
idiv
push
inc
jmp
xor
(bad)
dec
pop
fcmovnbe
adc
mov
lea
ret
xchg
jp
sbb
xor
fst
dec
sbb
aam
js
cld
lds
jle
ret
inc
jge
test
imul
jle
es
dec
scas
in
ss
or
dec
jl
ins
pushf
ret
add
xor
and
xor
inc
(bad)
sti
inc
aas
stos
call
sar
lods
jns
cmp
sub
jno
test
sbb
add
imul
mov
dec
arpl
and
push
mov
cmp
imul
or
(bad)
outs
pusha
adc
push
(bad)
rcl
or
mov
or
and
popa
push
sbb
outs
cdq
outs
xor
fsubp
mov
nop
push
and
push
cmp
and
push
push
add
push
mov
cmp
mov
int3
jae
out
sub
inc
or
add
lea
mov
add
inc
pop
dec
jne
mov
jae
jmp
adc
ror
fs
adc
ja
in
mov
std
mov
pushf
inc
or
(bad)
repnz
aaa
popa
mov
jmp
or
sar
pop
or
pop
and
push
jl
or
push
pop
mov
or
xor
imul
clc
test
mov
push
ins
fcomp
jno
es
adc
sub
jmp
and
xchg
xor
sahf
xchg
xor
inc
sbb
in
mov
push
add
mov
or
outs
adc
xchg
jo
dec
loop
or
jge
add
mov
nop
(bad)
jo
addr16
sbb
push
xchg
or
nop
cmc
push
cmc
and
cmp
or
(bad)
cwde
cwde
xor
cwde
add
push
cmp
cmp
les
add
mov
adc
sti
dec
sub
pop
push
or
or
add
add
sbb
sub
dec
clc
fwait
sti
or
jmp
dec
push
out
and
push
cmp
das
sub
add
jb
mov
pop
imul
sbb
ss
mov
les
movs
aas
arpl
inc
loop
sub
dec
add
push
cmp
outs
inc
daa
enter
inc
daa
xchg
aaa
rcr
cmp
inc
or
inc
popa
adc
pop
dec
pop
pop
fwait
aas
mov
gs
xor
(bad)
push
ja
xor
stos
rcr
xchg
and
sbb
sbb
aam
adc
xchg
ins
sbb
mov
pop
and
pusha
or
jmp
jne
sti
mov
mov
mov
cmp
add
cmps
push
cld
adc
fbstp
adc
pop
clc
jge
push
or
mov
hlt
hlt
lahf
rol
pop
mov
repnz
(bad)
int
mov
sbb
inc
push
dec
dec
mov
retf
jo
xchg
push
pushf
mov
add
add
sbb
cwde
jne
call
jne
or
mov
(bad)
fidivr
adc
add
cmp
jne
(bad)
ror
sbb
adc
add
jecxz
cmp
push
js
call
rcr
mov
jmp
or
jo
cs
je
mov
iret
jp
shr
push
les
inc
pop
pop
out
mov
outs
mov
jbe
lea
sub
jecxz
ret
adc
push
inc
fild
xor
lds
mov
xor
nop
mov
ja
mov
cmp
icebp
push
imul
push
mov
xchg
ror
popf
sbb
sbb
push
and
sahf
xlat
sub
out
ret
aad
daa
push
loop
pop
inc
inc
add
mov
mov
ja
cmp
adc
shl
retf
mov
add
ja
hlt
mov
mov
pop
retf
lods
xchg
mov
jbe
fidiv
or
pushf
sbb
and
sbb
iret
cmp
hlt
dec
loope
gs
mov
add
cmp
adc
stos
add
cmp
sbb
add
jecxz
mov
jge
add
jnp
fild
xor
mov
inc
dec
ret
jl
cmp
fcomp
add
cmp
pop
imul
add
and
dec
dec
fs
dec
adc
sbb
push
push
test
adc
and
dec
lock
ds
adc
push
mov
add
fsubr
fadd
push
or
addr16
or
wbinvd
outs
or
pop
test
mov
mov
fidivr
movs
mov
aaa
out
and
fwait
stos
adc
mov
mov
add
enter
inc
or
cmc
and
or
or
in
sub
mov
enter
xor
or
jnp
lea
nop
jmp
add
jle
or
xchg
test
push
int
xor
xor
xor
mov
and
fsubr
xchg
cmp
shl
or
push
(bad)
retf
or
out
inc
ret
sbb
pop
retf
inc
push
lock
mov
add
or
cmp
lock
or
xchg
adc
add
inc
in
rcl
push
not
xor
fsubr
inc
or
xchg
xor
add
mov
cmp
pop
lods
ror
out
sbb
mov
jmp
pop
arpl
cmc
dec
js
mov
sbb
stos
mov
dec
pop
mov
scas
rcr
inc
jne
mov
jmp
and
cmovge
sub
int3
retf
jp
cmp
rcr
or
iret
sub
es
add
mov
into
dec
xchg
cmp
or
inc
push
outs
inc
sub
push
enter
popf
lods
add
mov
int
inc
stos
ja
in
mov
sub
mov
pop
cdq
clc
or
mov
pop
dec
pop
out
add
sub
xchg
leave
dec
adc
mov
add
xchg
dec
xchg
das
push
push
pop
sub
fmul
inc
pop
adc
sbb
cwde
cmp
push
test
in
adc
and
adc
je
mov
cs
cmp
add
jbe
mov
ror
xor
xchg
xchg
xchg
xchg
sbb
adc
es
and
icebp
cmp
movs
and
cmp
sub
cmp
repnz
and
jo
or
mov
movs
fisttp
dec
mov
inc
mov
mov
jno
adc
pop
pop
mov
xchg
cmp
jge
mov
push
xor
sub
lock
out
icebp
js
mov
sub
xchg
xor
(bad)
dec
fstp
fsubr
ja
push
push
(bad)
sub
cs
jmp
aaa
icebp
pop
mov
loope
pxor
sub
xor
repz
adc
push
xor
movs
cdq
iret
dec
pusha
cmp
pop
call
push
adc
cmp
adc
push
or
or
or
inc
push
aaa
inc
push
pusha
pusha
adc
out
push
inc
push
out
dec
gs
mov
ror
lods
out
pop
push
pop
jo
inc
push
xor
lock
(bad)
ins
add
js
pop
out
(bad)
and
es
pop
mov
mov
or
or
rdmsr
cmp
lods
jge
mov
pop
push
inc
pop
pop
push
add
adc
or
test
(bad)
xor
nop
shl
cmp
test
inc
push
and
inc
(bad)
or
fiadd
shl
icebp
and
mov
adc
fs
and
add
xor
push
sbb
push
sbb
xor
(bad)
mov
jmp
inc
sbb
outs
and
cmp
lahf
or
inc
jne
mov
(bad)
push
adc
dec
rcr
clc
movs
shr
xchg
push
or
add
mov
lahf
test
sub
gs
sbb
idiv
aam
cli
mov
xchg
cmp
sbb
(bad)
in
xchg
mov
fild
popa
xor
adc
add
or
ins
jne
or
xchg
cmp
jbe
fcom
clc
popf
outs
or
or
int
add
lea
dec
sub
push
mov
and
ss
shl
push
mov
adc
add
cmp
xchg
mov
je
shl
or
cmp
ret
pop
ja
shr
fimul
rcl
xor
push
jne
(bad)
xor
push
xchg
sub
daa
and
mov
sub
push
and
lea
cmp
push
cmp
mov
push
sti
push
sub
sahf
or
pop
out
or
ret
sbb
(bad)
cmc
cmp
js
lock
aam
cmp
xchg
push
clc
and
mov
sub
add
iret
jb
jno
and
jo
fdivr
add
sar
xor
rcr
sar
or
inc
loope
cmps
js
es
ficom
mov
push
adc
(bad)
div
sub
mov
or
jmp
push
fs
cs
xor
cmc
cmps
jl
mov
cmp
sub
movs
add
ds
push
or
inc
inc
not
mov
mov
into
sub
mov
sub
xchg
add
dec
add
add
add
rol
je
icebp
mov
add
int3
push
xchg
xchg
or
sti
xchg
es
jnp
mov
mov
push
sbb
je
push
cmp
or
mov
imul
or
and
xor
ins
add
add
and
pop
push
ins
dec
sbb
or
mov
or
push
lock
pop
sahf
and
icebp
jmp
clc
push
xchg
adc
lea
jbe
inc
popf
mov
mov
mov
rcr
push
xchg
push
xchg
movs
scas
iretw
sub
push
xor
mov
push
(bad)
cmp
sub
gs
sti
jmp
ficom
rcl
lods
adc
push
xchg
push
or
mov
pusha
(bad)
or
adc
jl
add
add
push
ins
pop
shl
adc
push
mov
mov
rcl
test
mov
js
mov
and
jae
rcl
push
cld
mov
ja
adc
jne
sbb
int
push
adc
dec
mov
aas
pop
(bad)
push
and
outs
add
mov
retf
adc
(bad)
pop
int3
sti
cmp
jb
cli
pop
push
pusha
mov
adc
mov
or
pop
sub
dec
dec
xchg
mov
cmp
add
mov
repz
push
add
pop
sub
jmp
clc
pop
jecxz
out
push
or
ja
fst
push
ud1
push
cs
in
xor
cld
je
jmp
aaa
or
cld
imul
push
and
dec
add
clc
pop
sar
cmp
xchg
clc
rcl
inc
mov
aas
imul
add
sbb
add
aaa
loope
jns
and
sub
or
outs
imul
jns
adc
dec
lods
or
lods
mov
(bad)
in
adc
push
imul
fistp
xchg
push
cs
cli
cmp
push
ins
or
jle
pop
cmp
cmp
xchg
xchg
or
and
push
aam
xchg
xor
packsswb
or
inc
and
adc
movs
sar
cmp
int3
ds
jne
sbb
bound
mov
xor
shr
repnz
dec
test
shr
jp
cmp
or
dec
jge
or
and
std
xchg
(bad)
sbb
fstp
push
pop
push
call
or
inc
jo
or
add
or
mov
sub
and
fs
or
in
push
and
jne
add
je
out
imul
push
push
loop
adc
jge
lahf
pop
pop
jmp
sbb
jmp
adc
pushf
xchg
mov
test
mov
ret
adc
add
rcr
cmp
mov
add
ror
adc
and
cmps
push
sub
push
test
jge
mov
lods
cmp
cmp
or
and
mov
xchg
pusha
ret
data16
xor
pop
pusha
call
dec
mov
add
mov
mov
adc
push
pusha
xor
and
lock
js
jle
add
adc
push
sbb
jp
jmp
cmp
sbb
or
mov
mov
mov
or
xor
sbb
push
es
js
add
jmp
adc
jnp
in
sub
int
cmp
pusha
dec
retf
pop
out
dec
sbb
mov
jbe
push
jmp
pop
jmp
add
mov
or
(bad)
(bad)
jnp
jo
ret
or
dec
sbb
rcl
inc
mov
js
aad
pop
inc
adc
add
dec
sub
scas
dec
adc
jmp
shr
add
and
pop
sub
(bad)
inc
and
or
adc
cmp
repz
sbb
mov
or
sbb
pop
cld
outs
sbb
adc
xor
dec
lea
stos
push
hlt
or
xor
sub
cmp
pop
sbb
push
add
jp
cmp
cmp
imul
cmp
inc
sbb
or
mov
inc
xor
adc
or
add
js
cmp
add
fsubr
and
xor
adc
sti
sub
out
dec
pop
mov
sbb
cmps
pop
fdivr
ror
out
les
pop
test
(bad)
pop
repz
adc
cs
pusha
inc
mov
push
test
xchg
and
and
pop
cmp
fs
cdq
rcl
and
repz
add
xchg
std
in
push
adc
and
lods
sub
push
es
pop
mov
nop
jmp
dec
aam
retf
adc
push
mov
or
mov
jmp
retf
imul
mov
mov
out
mov
ror
mov
dec
or
add
sbb
sbb
mov
imul
or
jl
pusha
push
in
pop
pop
hlt
jne
mov
ins
jmp
aad
push
or
inc
ins
sar
test
test
sbb
push
pop
xchg
iret
push
lock
rcl
ins
mov
cmovnp
mov
leave
loope
adc
lahf
add
mov
in
rol
or
or
lahf
enter
nop
xor
fcomp
imul
jecxz
dec
loope
adc
into
sub
pop
adc
jns
adc
je
jb
jno
push
seta
mov
int3
jle
in
jl
test
lea
rcl
mov
add
push
sbb
hlt
sub
(bad)
xor
js
cld
test
adc
out
lea
add
retf
adc
xchg
dec
push
fwait
ret
test
(bad)
pop
push
add
and
es
xor
inc
push
aad
nop
adc
dec
jne
inc
cmp
dec
ds
in
test
call
cmp
inc
dec
cmp
pop
mov
jge
sub
cmp
lds
addr16
add
add
cmp
test
or
mov
adc
jmp
es
push
adc
add
sahf
pusha
call
mov
inc
xchg
popa
push
adc
push
fadd
hlt
mov
ins
mov
cmp
mov
loopne
adc
push
in
data16
sbb
sbb
dec
push
daa
add
lods
rcl
pop
out
not
add
push
jne
sbb
pop
mov
inc
call
sbb
inc
ds
pop
movs
add
push
sub
cmp
int
mov
sbb
aaa
cmp
aas
push
xor
xor
arpl
shl
adc
in
popf
sti
mov
mov
ror
retf
rcr
cmp
inc
retf
call
dec
lock
hlt
sbb
add
push
xchg
outs
or
(bad)
ficomp
sub
jmp
push
xlat
mov
leave
data16
xchg
add
xlat
inc
loope
pop
add
jae
inc
jge
add
adc
or
push
ss
nop
xchg
pop
add
jmp
test
add
loopne
or
jnp
xor
or
xchg
push
int
mov
test
push
inc
lods
dec
or
cld
push
lods
stos
or
retf
push
sbb
and
adc
es
mov
pushf
cmp
xchg
push
dec
outs
into
jg
popa
rol
sbb
dec
jp
mov
push
stos
and
data16
or
int
add
ss
hlt
test
jne
imul
add
add
cmp
jo
mov
test
(bad)
push
push
add
jg
push
nop
mov
je
test
cmp
adc
pop
aaa
jmp
clc
add
xor
push
hlt
pop
or
gs
(bad)
bound
sub
or
dec
xor
scas
mov
mov
or
rol
push
pusha
ja
shr
and
das
mov
mov
push
add
add
(bad)
sub
push
sub
loopne
test
inc
inc
scas
push
cmp
arpl
jmp
popf
dec
(bad)
cmp
add
test
adc
fcomip
pop
imul
mov
adc
(bad)
push
pop
test
popf
pop
inc
push
lahf
es
add
or
fadd
ds
push
add
inc
xor
inc
out
arpl
and
pop
pop
xlat
inc
and
xchg
mov
test
call
rcl
jb
push
jbe
sub
mov
xchg
and
or
inc
and
sahf
movs
adc
ins
pop
call
stc
mov
mov
aas
shl
or
out
dec
add
mov
add
inc
je
movs
push
jge
jmp
push
mov
rcr
cs
push
or
sbb
and
neg
call
sub
verw
xor
pusha
sbb
shr
out
stos
fs
jle
add
adc
movs
inc
add
fs
call
push
adc
pop
add
push
ja
popf
sbb
adc
call
cmps
test
sub
mov
call
sbb
into
dec
adc
retf
sbb
arpl
add
mov
inc
cmp
add
nop
leave
mov
paddq
and
in
pusha
gs
and
sub
pusha
mov
leave
or
loope
mov
gs
(bad)
sbb
or
aad
pop
stos
and
aas
adc
out
adc
mov
out
ror
xor
dec
(bad)
dec
popa
cmp
adc
das
adc
add
mov
sbb
mov
dec
xchg
add
pop
ins
push
and
cmp
loopne
test
push
adc
lea
dec
pop
add
fidivr
jae
push
cmp
xlat
into
sbb
cmp
or
loope
clc
dec
imul
or
imul
xchg
jno
nop
call
dec
dec
push
pop
setnp
sar
call
cmp
adc
pop
dec
stos
loopne
push
and
hlt
out
rol
sbb
lahf
dec
ret
pusha
mov
mov
fs
shl
inc
push
inc
cwde
or
inc
xor
sbb
pand
rol
cmc
mov
fst
test
je
dec
test
push
cmps
imul
mov
inc
pop
mov
movs
cmp
push
ror
dec
push
pop
mov
mov
movs
adc
dec
push
jge
(bad)
adc
scas
cwde
test
fs
add
xchg
push
push
xor
mov
sub
and
mov
inc
push
xor
pop
xor
into
fisubr
fnstsw
jo
inc
pop
mov
das
sbb
cld
push
in
data16
add
push
sub
and
fist
push
popa
fist
ins
mov
js
inc
sbb
dec
push
push
(bad)
aam
rcr
xchg
dec
jmp
adc
fwait
push
and
fmul
and
xor
xchg
(bad)
pop
xor
inc
lods
mov
or
pop
adc
enter
mov
sar
dec
dec
mov
adc
lods
xchg
loop
arpl
adc
sub
ja
or
inc
int3
mov
shr
out
mov
sub
loopne
and
add
jge
inc
or
fadd
sti
push
and
and
in
fdiv
xchg
aad
and
jl
pop
pop
push
mov
cmp
add
jmp
or
cmp
cmp
and
shl
adc
adc
pusha
iret
add
pop
retf
inc
jnp
jge
add
pop
inc
daa
in
mov
xchg
cmps
and
push
push
enter
dec
cmp
inc
stc
add
mov
sub
cli
dec
sbb
cmps
cmps
push
add
cwde
push
cmp
retf
cmp
push
push
cmp
ja
mov
test
cmp
enter
mov
mov
rcr
sar
int
rol
enter
and
lods
hlt
push
mov
pushf
or
loopne
adc
add
and
pop
icebp
or
pop
xchg
(bad)
mov
fisttp
ss
xor
and
and
pop
clc
test
mov
add
inc
retf
sar
ds
mov
push
scas
les
adc
xchg
dec
(bad)
jb
lahf
scas
pop
xchg
add
test
mov
mov
imul
movs
cmp
xchg
or
out
movs
stos
push
pop
jmp
adc
loop
and
(bad)
psubusw
inc
retf
xadd
dec
(bad)
call
cwde
rcl
call
jmp
cwde
sub
jne
mov
test
mov
add
enter
test
ds
sbb
imul
or
mov
or
fs
sub
pop
pop
pop
pop
dec
mov
mov
push
hlt
hlt
sub
scas
xchg
mov
dec
xor
or
push
cmp
retf
inc
inc
and
pop
loop
hlt
rcr
adc
imul
mov
pop
and
jb
fwait
test
mov
scas
pop
or
scas
inc
mov
dec
sbb
sub
dec
scas
inc
cmp
pop
cmp
mov
mov
jmp
rcl
dec
adc
ret
jp
pop
inc
in
mov
sbb
fmul
test
add
loope
push
in
in
mov
and
add
mov
cmp
push
fldenv
outs
outs
jnp
or
lods
mov
int
test
or
dec
cwde
lods
or
or
inc
leave
dec
jmp
mov
jmp
push
dec
pop
lds
mov
jmp
ret
sbb
jne
hlt
mov
jb
stos
cmovo
in
test
idiv
add
push
sub
xchg
retf
mov
jb
mov
xchg
dec
pusha
jo
dec
inc
adc
push
push
cdq
lea
xchg
jmp
or
cmp
sub
or
fild
adc
(bad)
addr16
mov
jb
icebp
ins
or
call
xor
(bad)
aam
loopne
add
or
push
sbb
cmp
repnz
push
rcl
inc
xlat
add
add
pop
and
or
pop
adc
and
or
pop
inc
cmp
inc
test
inc
jge
sbb
jl
es
mov
dec
add
adc
add
sub
bswap
add
fcmovu
mov
jl
inc
inc
dec
adc
xchg
adc
jae
adc
jmp
bound
aam
sti
and
aaa
adc
dec
or
push
push
inc
inc
add
xchg
sub
bound
push
fwait
rcl
cli
xor
repnz
mov
mov
xor
out
loopne
or
inc
cli
jb
jmp
push
adc
jno
cli
or
adc
mov
push
mov
stos
addr16
add
(bad)
fcom
cdq
inc
pusha
icebp
(bad)
test
jl
sub
lds
rcr
jmp
cmp
push
es
pop
or
pop
addr16
mov
rol
pusha
xchg
add
stos
call
mov
dec
jno
and
dec
and
jno
push
cmp
sahf
pop
and
mov
mov
ins
sbb
lods
add
and
ins
inc
stos
jb
mov
mov
adc
out
cmps
jo
adc
arpl
add
push
pusha
lods
das
ror
call
nop
dec
and
mov
mov
or
add
xchg
and
and
sbb
ins
xchg
mov
(bad)
cmp
mov
mov
arpl
arpl
dec
lods
out
inc
push
pop
xor
lds
sub
aaa
add
add
jns
call
nop
push
rcr
ret
imul
push
inc
popaw
cmp
hlt
xchg
push
pop
sbb
or
dec
mov
and
rol
inc
pop
xor
adc
sbb
cmps
dec
mov
sti
push
aaa
cmp
aam
sbb
sub
xor
neg
or
fistp
(bad)
jbe
cmc
add
mov
push
mov
je
in
pop
and
ret
(bad)
in
xor
mov
jmp
mov
jge
call
(bad)
leave
sub
and
or
(bad)
mov
leave
adc
xchg
movs
imul
mov
loopne
jo
pop
jbe
add
mov
out
xchg
push
cmp
sbb
das
daa
push
adc
test
movs
loopne
popa
mov
or
mov
xor
sub
cmps
nop
or
outs
adc
test
or
ficomp
or
in
ret
push
fdiv
mov
aas
ret
cmp
xor
jbe
add
mov
dec
(bad)
outs
pop
jmp
jne
cmp
arpl
add
ret
push
cmp
fstp
or
lea
or
icebp
leave
sbb
lds
mov
lds
push
repnz
aam
sbb
mov
mov
ror
add
mov
push
ss
lahf
cmp
stos
in
sub
dec
push
xchg
mov
mov
fmul
pop
push
push
and
fcomp
pop
mov
mov
xor
or
dec
into
mov
not
pop
sub
out
cmp
mov
pop
mov
pop
add
fnstsw
bnd
das
xor
ja
cmps
ss
les
xchg
and
dec
adc
cs
fisttp
popa
xlat
mov
inc
clc
push
shl
inc
dec
jne
add
rcl
or
mov
and
jbe
push
cmp
dec
loopne
je
sub
stos
adc
je
and
pop
pop
xchg
in
jp
push
cmp
xor
xchg
pop
test
cdq
mov
push
test
add
xchg
adc
rol
xor
adc
jns
addr16
nop
pop
or
jp
add
stc
mov
shl
and
lods
push
add
aam
xor
pusha
arpl
not
adc
push
push
sbb
mov
arpl
sbb
mov
pop
or
lea
adc
pop
in
mov
fistp
add
push
mov
in
or
fs
push
xchg
mov
push
mov
and
add
jae
xor
or
ficomp
push
adc
(bad)
or
push
inc
test
and
jae
retf
xchg
cmp
int3
mov
adc
or
cmp
nop
xchg
iret
call
sti
push
add
test
mov
cmps
dec
popf
and
inc
popa
cdq
loopne
loop
dec
xor
movs
cdq
nop
fsub
lahf
push
lods
arpl
dec
pop
push
xor
xchg
mov
or
mov
sbb
dec
cmp
ltr
or
mov
pushf
lods
jge
je
fdiv
xor
mov
out
pop
mov
push
addr16
int3
imul
or
or
sub
dec
xor
inc
stos
sar
mov
add
aam
js
xchg
xor
or
dec
adc
jnp
sub
jne
push
inc
data16
loop
adc
xchg
das
lock
std
xor
adc
pusha
sbb
mov
jmp
mov
scas
add
mov
jp
add
in
int
fs
ror
push
call
sbb
mov
cdq
call
inc
in
(bad)
loopne
jo
test
(bad)
lds
dec
ja
and
lea
sbb
xor
add
jl
push
pop
add
mov
pop
test
jg
imul
das
sub
mov
and
inc
mov
xchg
bound
shl
les
in
jno
inc
push
mov
sub
retf
cld
xchg
mov
sbb
push
mov
and
mov
or
movs
jecxz
adc
(bad)
lods
dec
push
dec
test
add
xchg
push
lock
(bad)
nop
xor
sbb
jo
push
or
mov
pushf
je
mov
jmp
xchg
fcmovb
(bad)
loope
fld
or
bound
jae
mov
mov
mov
and
stos
mov
dec
pop
in
je
add
jnp
xor
push
cmc
inc
push
jnp
pop
pop
adc
or
(bad)
push
imul
dec
and
rol
ret
bound
mov
mov
jns
sbb
or
xchg
out
dec
stos
xor
pop
(bad)
ins
lods
push
dec
pop
mov
sub
aaa
sbb
xor
or
fadd
pop
iret
xor
lds
add
shr
imul
add
fadd
int3
push
inc
stos
cmps
xchg
xor
sub
je
cmp
mov
stos
adc
test
mov
cdq
mov
pop
dec
rcr
lahf
or
sub
icebp
je
retf
les
enter
adc
sbb
ins
or
push
in
retf
or
out
add
jo
leave
push
add
gs
in
xor
jo
pop
push
in
dec
mov
stos
mov
mov
jecxz
in
sbb
lahf
in
pop
sahf
call
fs
cmp
cmc
lock
out
dec
push
in
lock
mov
shl
inc
inc
push
lahf
data16
rcl
jge
pop
cwde
hlt
push
jne
ret
push
jge
cmp
add
push
push
mov
(bad)
jle
and
ret
int
xchg
or
in
in
ja
in
sub
enter
bound
(bad)
mov
add
mov
dec
sbb
jnp
fsubr
jnp
inc
cmps
mov
out
inc
dec
push
scas
push
add
sbb
ins
sbb
push
aas
inc
seto
pop
inc
fcom
mov
dec
sbb
dec
pop
loopne
pop
cmps
pop
dec
in
sti
(bad)
mov
dec
or
or
dec
inc
in
adc
cmp
jo
or
push
daa
mov
dec
jne
or
data16
cld
loope
(bad)
push
add
mov
jno
xor
xor
add
or
fadd
pop
jmp
daa
jo
xor
inc
xchg
add
daa
mov
dec
std
ror
ja
inc
mov
jecxz
(bad)
int
mov
xor
pop
xchg
mov
mov
pop
cmp
add
ss
dec
iret
xchg
dec
sub
add
xchg
xchg
sub
pop
test
dec
shl
lea
out
sbb
mov
enter
mov
fdivr
add
sub
call
pop
je
xor
aaa
pop
pushf
(bad)
fld
push
lock
out
add
push
out
and
cli
shr
adc
xor
pop
lea
xchg
jp
pop
stc
pcmpgtb
dec
scas
inc
sub
outs
inc
push
jle
push
bound
sbb
add
arpl
ins
mov
pusha
jne
and
sbb
fadd
sbb
mov
and
sub
outs
(bad)
adc
adc
fs
mov
and
pop
push
or
int3
(bad)
popa
popa
das
loopne
inc
mov
xchg
pop
mov
xor
inc
hlt
or
push
loope
jne
and
mov
add
jmp
jnp
add
mov
dec
mov
jge
mov
int
xor
sub
or
push
and
cmps
fs
int
inc
push
or
dec
pop
lds
out
lea
push
or
xchg
aad
jmp
push
dec
in
test
fist
clc
pop
sbb
loop
push
int3
pop
inc
sbb
ffreep
js
sub
ins
mov
lock
pop
repz
mov
jb
mov
push
aas
das
and
lock
xchg
jl
jmp
fisttp
push
push
xor
fisub
adc
and
mov
inc
mov
shl
cs
mov
scas
or
inc
mov
call
test
setbe
jle
jbe
adc
push
wrmsr
fwait
xor
cmovae
cmp
xor
out
sub
sbb
adc
dec
pop
cmp
jl
lock
mov
mov
call
dec
pop
dec
test
and
int
cmp
push
or
rol
mov
cwde
jno
cmp
retf
inc
and
inc
push
dec
add
mov
jno
retf
inc
out
or
sub
cs
or
or
in
sbb
sub
ror
mov
sbb
lods
sub
test
push
pop
sbb
adc
cmp
js
sbb
mov
and
push
add
inc
je
mov
dec
mov
arpl
mov
dec
loope
pop
and
pusha
and
or
mov
add
or
gs
js
mov
jne
dec
loope
inc
aad
adc
div
jne
pop
movs
inc
sbb
pop
pushf
jle
jnp
add
ret
push
mov
and
ins
inc
clc
add
dec
aaa
stos
fs
push
pop
mov
push
inc
xchg
cs
pop
push
clc
push
scas
pop
push
mov
add
add
xchg
and
mov
(bad)
mov
dec
add
jns
call
add
mov
shl
and
inc
xchg
adc
mov
push
mov
push
jmp
out
pop
sbb
or
movs
xor
(bad)
daa
and
inc
mov
sub
xchg
pop
inc
ficom
sub
fs
int3
adc
scas
inc
imul
add
pop
ret
fwait
pop
cld
aas
fwait
inc
xchg
aas
mov
cmps
cmc
sub
pop
out
jo
dec
lock
cmp
test
mov
pop
push
xchg
and
enter
mov
push
mov
adc
pop
adc
pop
test
sub
cmp
outs
inc
pop
cmp
mov
cli
push
pushf
aam
movs
pop
sbb
pop
add
xlat
adc
pop
ret
pop
jns
pop
jbe
mov
call
xchg
mov
sbb
xchg
fadd
mov
and
outs
jecxz
xchg
in
and
je
add
lock
jmp
jmp
push
fs
mov
add
sub
push
retf
pusha
add
xor
fcmovnu
sbb
aad
push
das
jle
out
mov
data16
mov
out
xchg
sub
or
adc
sbb
rcr
test
xchg
add
jbe
aad
in
int3
xor
fnstenv
ret
inc
adc
loope
nop
and
add
jmp
inc
push
and
jnp
mov
push
rol
inc
pop
mov
add
push
aaa
arpl
pop
push
mov
jecxz
jle
call
xchg
or
cmc
(bad)
scas
push
inc
cmp
sbb
das
or
in
add
retf
retf
int3
push
mov
les
add
add
or
test
add
pusha
(bad)
daa
push
push
(bad)
sar
push
cmp
pop
cmp
sub
sbb
dec
push
sub
mov
push
xor
inc
jae
rcpps
call
xchg
(bad)
jmp
add
jge
out
jmp
push
add
adc
repz
jmp
jmp
inc
mov
and
cmp
jne
sar
xchg
fwait
or
fwait
call
jecxz
cmp
fs
hlt
jno
dec
push
xchg
push
adc
xchg
lods
fidiv
loopne
push
cmps
push
jmp
bound
mov
or
push
popa
pop
je
mov
and
xchg
js
fistp
ss
cmps
push
add
pop
pop
sbb
loopne
xchg
push
mov
add
mov
clc
mov
mov
rcr
add
inc
js
add
xor
add
sub
fwait
add
jb
(bad)
mov
imul
or
jmp
dec
sti
fild
and
cmp
jbe
add
dec
sbb
pop
mov
es
fs
loopne
loope
fs
stos
mov
mov
xor
cdq
dec
pushf
aaa
push
dec
sbb
xchg
sub
sbb
ret
fs
pop
sub
cmps
sub
dec
xchg
ficom
ret
xor
setne
leave
iret
or
sub
push
push
out
mov
ss
imul
xchg
push
inc
pusha
ins
push
jbe
(bad)
mov
test
retf
pop
mov
xor
jmp
push
cmp
call
add
sub
push
xlat
push
test
push
push
in
jo
push
dec
xchg
xor
iret
xchg
fimul
pop
xchg
and
dec
ja
adc
mov
pop
sbb
inc
xor
je
fsubr
adc
test
shl
or
sub
dec
mov
shl
sar
jo
sub
dec
inc
xor
rol
lock
test
push
push
mov
or
or
pushf
int3
adc
inc
enter
or
je
xchg
push
loope
hlt
and
inc
pop
jo
xor
dec
and
and
rol
and
pop
ret
jbe
push
gs
in
loopne
adc
inc
jecxz
cld
repz
add
in
mov
sbb
mov
fnsave
les
push
and
xchg
lock
jle
jp
push
dec
add
inc
push
call
jo
ins
in
icebp
and
jne
mov
mov
sbb
jmp
lea
inc
pusha
inc
data16
and
popa
sbb
push
nop
dec
cld
jno
pusha
sbb
fsub
js
or
cmp
sub
sub
mov
sub
push
fisttp
dec
add
ret
and
imul
dec
cmc
sub
(bad)
pop
cmps
inc
fisubr
jp
rol
pop
cmp
repz
xchg
jmp
or
movups
push
jo
ret
cdq
pop
pop
adc
mov
mov
adc
inc
lds
push
xor
mov
push
retf
xchg
pop
hlt
repnz
aad
cld
inc
mov
pop
and
inc
mov
pop
sbb
mov
mov
(bad)
fs
ror
jmp
push
or
adc
inc
push
cwde
cmp
in
and
mov
les
(bad)
lods
mov
(bad)
inc
inc
test
enter
mov
f2xm1
repnz
sub
daa
js
mov
xor
xchg
adc
aaa
or
push
sbb
xchg
jne
pop
pop
imul
dec
fbstp
mov
push
pop
sub
xor
mov
sbb
inc
cmp
icebp
aaa
dec
adc
lock
(bad)
xor
inc
rol
sbb
test
call
lods
ret
or
in
cmp
outs
retf
push
cmp
xchg
pop
sbb
in
and
push
cli
dec
or
pushf
mov
call
xchg
jg
cdq
std
sub
or
or
pop
jb
or
add
mov
add
adc
and
test
add
test
lock
lea
jne
mov
xor
js
call
ror
pop
out
push
add
pop
sub
jns
mov
dec
js
push
push
stos
adc
pop
push
dec
add
daa
sub
pop
push
push
mov
or
or
mov
pop
fwait
ins
lods
test
dec
jmp
sbb
mov
inc
push
push
jno
adc
xor
sbb
int
jp
sub
push
enter
dec
rcr
add
mov
dec
pop
cmp
and
pop
xor
sbb
jmp
es
jmp
call
and
adc
add
mov
adc
jmp
sar
and
and
imul
or
jp
rol
push
sbb
and
dec
pop
(bad)
xchg
xor
jae
ret
inc
inc
xchg
pop
jge
push
dec
xchg
cmps
call
mov
jo
push
daa
and
sub
xor
adc
js
pop
mov
mov
popf
xor
jle
call
sub
cmps
push
rcr
out
shr
pushf
fwait
pop
xor
aam
aam
push
add
dec
mov
loop
sub
lock
push
push
sbb
mov
and
ror
sub
bound
lock
and
xchg
arpl
cmp
lea
sbb
jne
or
ficom
inc
ins
xchg
sbb
gs
sbb
call
sbb
out
mov
arpl
lds
lods
xchg
arpl
and
test
gs
mov
lahf
or
xor
mov
popa
inc
xor
push
push
mov
test
rol
jnp
lods
sbb
cmps
xchg
into
les
retf
push
cmp
sbb
shl
repz
ins
mov
pop
mov
jo
inc
std
mov
mov
rol
push
or
jnp
mov
mov
outs
mov
pop
ja
mov
inc
mov
fucomi
call
xor
adc
inc
mov
shl
cmp
les
xchg
int3
stos
xchg
push
xchg
inc
jmp
arpl
pop
or
mov
xchg
push
cmp
fisubr
inc
cld
sbb
pushf
adc
xor
mov
sub
(bad)
js
push
mov
cmps
icebp
fiadd
sub
adc
lock
movs
sbb
inc
jmp
sub
xchg
push
dec
dec
aaa
cmp
push
or
push
(bad)
or
sar
stos
add
out
push
adc
push
push
cmp
pop
nop
pop
mov
and
cmp
cmp
loopne
and
mov
and
stos
mov
in
imul
and
push
shr
aam
push
les
scas
push
sub
push
enter
pop
es
jp
xchg
or
pop
sub
in
call
pop
ss
ret
dec
mov
jb
jmp
movs
mov
enter
lods
les
pop
inc
add
pusha
or
loopne
pop
add
(bad)
mov
jns
fdivr
push
mov
daa
lods
test
lea
xor
jp
push
xlat
shl
or
adc
push
fs
cwde
jo
lods
leave
pop
mov
mov
mov
mov
sbb
daa
ja
push
or
pop
je
mov
mov
or
push
and
adc
or
adc
or
int
test
call
sub
clc
ja
mov
rol
das
js
je
neg
pusha
mov
inc
push
xchg
xchg
sub
sub
and
sbb
adc
jmp
push
mov
mov
xchg
pop
(bad)
dec
test
shr
inc
push
and
jge
mov
sub
pop
or
test
call
mov
mov
mov
push
cmp
je
inc
or
or
retf
retf
mov
jmp
or
push
add
push
aaa
mov
test
js
gs
pushf
rcr
shr
push
xchg
pop
push
test
cmp
ror
fimul
stos
mov
push
jp
jle
lock
sub
mov
mov
mov
add
cmp
or
es
fnstsw
neg
rcl
xor
cmp
jne
and
cmp
clc
nop
stos
mov
mov
mov
adc
mov
mov
xchg
adc
daa
sbb
push
sar
adc
jmp
push
push
sahf
mov
push
push
xor
adc
adc
clc
sub
je
add
mov
in
mov
mov
dec
add
and
inc
dec
pop
inc
push
push
jl
imul
mov
lahf
dec
cmp
inc
inc
adc
sub
push
(bad)
add
pop
test
outs
arpl
fiadd
or
mov
popaw
rol
sub
movs
cmps
inc
fmul
rol
pop
mov
dec
inc
dec
popf
and
sub
dec
mov
pop
xor
repnz
push
sbb
fcomi
adc
adc
aam
push
mov
inc
popa
xor
cmp
push
les
pushf
pop
js
in
inc
add
add
pusha
andnps
stos
add
hlt
mov
lock
in
in
jl
xchg
adc
ror
cmp
sbb
sbb
pusha
mov
mov
mov
ins
push
mov
nop
(bad)
out
inc
adc
loopne
pop
lods
inc
mov
xchg
xchg
wrmsr
lods
lahf
loopne
and
mov
in
sub
push
ins
pusha
fidiv
fcomp
ror
cs
mov
nop
cmps
mov
or
ror
add
fidivr
or
dec
out
add
adc
or
add
dec
clc
call
push
ins
jo
cmp
or
test
dec
jl
xchg
imul
fild
mov
je
nop
mov
sahf
cmps
add
cmps
sub
nop
psubq
add
and
pop
ret
cmps
fs
sbb
add
jmp
retf
inc
dec
jo
mov
rol
fsub
and
cmp
ficom
movzx
jbe
data16
lea
verr
pop
xchg
add
lock
pop
sub
cld
(bad)
nop
pop
jb
dec
xchg
fsubr
jns
push
gs
mov
adc
scas
push
mov
fs
popf
jo
and
lods
or
retf
lea
mov
jns
mov
mov
adc
push
adc
adc
xchg
je
dec
in
aaa
or
pop
adc
add
in
lgdtd
or
add
add
inc
or
movs
imul
sbb
inc
jmp
(bad)
sbb
or
ret
pop
loope
rcr
push
inc
dec
push
push
add
add
adc
repnz
cmp
dec
rol
jbe
or
push
adc
push
sbb
fld
jmp
adc
add
imul
mov
loope
cmp
in
rcr
sbb
push
inc
cmp
xor
cmp
jle
dec
mov
int
adc
xchg
pop
les
xor
mov
inc
dec
sti
inc
or
jge
mov
mov
adc
xchg
inc
mov
out
iret
test
push
scas
cmp
push
pop
sbb
(bad)
push
jo
sti
or
mov
add
add
add
jmp
jne
add
jb
mov
lds
jmp
cmp
mov
adc
loope
jg
push
sbb
movs
xor
fst
xchg
and
movs
fs
xchg
rcr
mov
rcl
fistp
inc
js
push
pop
add
lahf
add
das
jmp
ja
in
push
mov
adc
push
ss
mov
popa
imul
fadd
data16
ss
adc
pop
jne
pop
adc
xchg
shr
retf
xor
adc
pop
xchg
push
shr
adc
sbb
adc
add
pop
pop
pop
sbb
or
adc
xchg
or
adc
out
shl
and
mov
pushw
sbb
push
sbb
xor
sub
or
scas
cmps
sbb
or
dec
cmp
loope
xchg
and
inc
cmovs
xchg
and
imul
sbb
sub
pop
js
xor
sbb
cmp
xor
popa
mov
or
test
pusha
popa
and
add
hlt
cwde
cmp
out
pop
add
ss
jne
add
pusha
jl
dec
adc
ja
popa
xor
aaa
xchg
push
mov
std
xor
js
xchg
add
adc
inc
hlt
and
add
dec
sbb
jmp
mov
dec
clc
cmp
jg
je
sbb
push
adc
mov
les
or
adc
mov
je
dec
je
add
cmovnp
or
mov
lods
push
push
test
pop
shr
cwde
ret
push
mov
pop
lea
shr
scas
mov
pop
ret
jae
xchg
jle
dec
dec
xor
rol
dec
ficomp
cmp
(bad)
xor
sti
leave
and
test
adc
dec
test
inc
ficom
mov
mov
hlt
push
ret
dec
or
pop
inc
lods
sub
test
shl
adc
fdiv
push
(bad)
mov
pop
and
arpl
xlat
les
mov
xchg
push
or
push
and
into
xor
xchg
add
ret
pop
push
add
jge
dec
xor
out
adc
push
push
add
jo
sbb
movs
cmp
mov
xor
add
test
inc
add
mov
enter
and
movs
jnp
ss
fbld
jmp
xchg
jae
pop
ja
sub
cld
fdiv
inc
push
and
imul
inc
xchg
jo
push
test
mov
cmp
sub
and
shl
and
and
mov
inc
push
pop
push
daa
inc
mov
fwait
xor
and
out
pop
je
or
lock
fisttp
sub
push
push
and
pop
or
fistp
daa
jo
push
inc
movs
mov
rol
hlt
add
sbb
or
daa
hlt
or
push
adc
loopne
dec
bound
cmps
push
loope
pusha
dec
repz
mov
pop
ss
out
or
fst
mov
test
or
aad
mov
inc
fiadd
push
call
iret
sub
mov
xor
in
adc
fcom
sahf
mov
sar
add
add
add
xor
mov
mov
add
xchg
jne
das
mov
push
push
push
mov
sbb
hlt
in
push
mov
daa
sbb
cmps
dec
xchg
into
jb
jb
jmp
push
in
pop
call
pop
inc
jge
repz
xchg
lock
cdq
add
push
inc
cmp
pop
imul
pop
dec
(bad)
lock
in
sub
xor
adc
jne
stos
push
xor
lea
jno
dec
adc
add
jg
cmp
pop
push
nop
neg
push
push
adc
push
clc
or
(bad)
and
pop
arpl
inc
inc
or
out
into
or
push
les
clc
push
pop
push
int3
jl
xor
popa
xor
jmp
sub
add
inc
sub
outs
add
mov
jecxz
mov
or
or
xchg
cmc
dec
and
rol
retf
sahf
xor
pop
xchg
and
pop
pop
test
or
ret
and
jle
jbe
inc
clc
or
xor
adc
push
jae
pop
scas
rcr
rol
push
mov
mov
leave
and
(bad)
fistp
or
mov
aaa
xchg
out
dec
arpl
aaa
and
push
movs
in
ins
inc
ror
fsubr
push
jo
sub
push
xchg
ja
push
cdq
push
jmp
je
cmp
inc
pop
add
push
cmp
mov
aas
adc
ja
cmp
lods
pop
dec
jbe
xchg
lock
cmp
sub
sbb
cli
inc
loopne
add
push
xchg
adc
test
xor
sbb
dec
and
rol
xchg
mov
add
stos
sub
jne
movs
movs
push
je
sbb
pop
loopne
fadd
or
retf
test
or
fimul
enter
add
and
pusha
or
scas
xchg
ret
xchg
add
lods
fidiv
cs
jb
or
ror
cmp
sbb
call
dec
xchg
sub
or
mov
pop
loopne
adc
outs
fs
int3
mov
int3
ret
inc
ins
test
sub
add
jnp
or
mov
mov
mov
push
and
jle
xor
inc
xchg
nop
lock
pop
rcl
out
sbb
mov
test
xchg
retf
sar
icebp
mov
inc
cwde
adc
push
xchg
std
sbb
sbb
leave
xor
push
(bad)
push
shr
add
push
xchg
data16
mov
or
xchg
outs
push
ins
ret
jl
add
ja
adc
rol
sbb
adc
mov
or
mov
clc
dec
or
imul
add
adc
mov
sbb
and
sbb
jg
mov
test
mov
pop
sbb
pop
call
rcl
push
pop
add
clc
push
cmp
fsubp
sar
clc
pusha
add
jb
or
in
jg
pushf
test
xchg
xchg
cmp
ret
mov
icebp
or
adc
add
leave
in
lahf
and
or
addr16
or
and
jp
out
mov
sbb
adc
adc
jbe
push
sub
sti
inc
sub
sbb
dec
sub
dec
pusha
mov
add
fnstenv
sbb
inc
ins
pop
pop
cmps
cmp
jae
js
mov
inc
sub
clc
ret
push
mov
ret
pop
icebp
(bad)
clc
jno
loopne
mov
sub
out
pop
cli
jg
test
test
jo
pop
or
ins
fsub
addr16
lods
loope
dec
sub
add
fs
xchg
stos
push
cmp
rol
in
push
pop
sbb
jg
mov
xor
mov
push
jge
leave
sub
stos
add
scas
jo
movs
sbb
sub
pop
adc
mov
fsub
adc
jb
sub
pop
ja
ins
into
sti
mov
jb
(bad)
leave
fwait
xor
add
inc
inc
add
inc
xchg
cmp
lods
dec
cmp
mov
loopne
cmp
push
xchg
xor
sahf
add
sub
cld
pusha
adc
dec
pop
clc
push
imul
sbb
mov
js
inc
mov
leave
inc
lock
jnp
and
sar
imul
xor
divps
mov
adc
icebp
outs
dec
imul
mov
inc
inc
js
xor
or
lea
jo
xchg
sub
add
test
sti
aaa
in
ins
add
push
and
pop
fstp
jmp
pop
fnstsw
mov
retf
call
cld
fstp
mov
or
fld
pusha
les
retf
xchg
mov
adc
sbb
push
call
add
dec
imul
xchg
mov
mov
lahf
lock
cld
adc
mov
push
scas
ins
add
add
xor
add
mov
or
enter
sbb
cwde
jb
push
push
and
mov
in
ins
cdq
inc
pop
inc
xor
loopne
js
lea
sub
or
pop
mov
ins
push
add
sbb
cmp
add
pusha
xchg
jmp
and
dec
scas
pop
adc
clc
loopne
mov
mov
xchg
xchg
ret
pop
pusha
pop
mov
les
pop
aad
pop
lock
pop
mov
mov
adc
jo
xor
out
movs
jno
scas
pop
push
pop
jmp
sub
sbb
sar
jmp
sub
jne
dec
jnp
ds
jmp
pop
push
and
jo
pop
and
xor
rcr
fldcw
fdivr
push
imul
xchg
or
pop
bound
je
cmc
mov
fs
or
push
ficom
mov
push
sbb
xchg
adc
pop
mov
cmps
sub
xchg
bound
add
jae
or
or
add
ins
pop
mov
(bad)
pop
jmp
xchg
sar
daa
mov
stos
push
or
xor
pop
inc
out
sbb
jl
(bad)
(bad)
jae
test
adc
lea
adc
sub
out
dec
mov
sbb
ficom
dec
cld
outs
mov
in
or
jle
in
adc
add
add
and
adc
jns
xchg
jae
sbb
or
sub
inc
cmp
mov
add
adc
js
jo
jb
add
mov
add
call
pop
pop
hlt
ret
pop
scas
cmp
add
jno
inc
aaa
and
adc
loopne
cmc
adc
shr
fadd
fdiv
add
jge
push
and
adc
scas
adc
and
add
sub
push
add
pop
dec
sub
repz
or
add
sub
xor
div
lea
mov
imul
add
ror
adc
aam
sbb
clc
pop
lods
ret
adc
dec
pusha
sar
or
inc
or
jne
retf
pop
push
sbb
add
jbe
mov
mov
sub
(bad)
cmp
sbb
push
xor
xor
sub
ret
test
or
fmul
xor
sub
cmp
stos
or
sbb
ins
jbe
lahf
dec
cmp
xor
cmp
ins
popa
inc
ins
cmp
and
dec
push
retf
mov
mov
jle
dec
dec
inc
in
movs
imul
xor
dec
(bad)
xchg
pop
mov
push
xor
sbb
jbe
call
cdq
rol
push
and
cmc
pop
xor
cmps
test
push
inc
sbb
xor
sub
(bad)
loopne
mov
and
adc
sbb
push
or
inc
xor
popa
mov
cmp
xor
push
pop
mov
jne
icebp
dec
(bad)
xor
hlt
test
or
mov
mov
call
sar
or
scas
mul
add
xchg
in
loop
add
and
jge
xor
and
lea
cmps
sbb
push
add
xchg
push
ds
or
mov
add
pop
test
rol
mov
enter
je
mov
and
mov
in
mov
add
(bad)
jg
push
in
jb
xor
mov
into
pop
movs
sub
sbb
das
in
aam
imul
(bad)
push
mov
lahf
mov
sbb
inc
js
jnp
cwde
enter
add
mov
gs
dec
push
adc
push
sub
inc
loopne
lea
fimul
inc
jle
mov
sub
sub
rcr
test
mov
jns
js
xor
fidiv
enter
push
adc
mov
popf
sbb
retf
je
(bad)
data16
dec
cmp
jb
pop
inc
stos
or
sti
mov
and
cmp
mov
rol
lods
xor
add
xchg
jl
loopne
adc
std
xor
jge
add
push
into
clc
adc
push
pop
jo
mov
push
(bad)
je
or
lds
push
in
sbb
jbe
adc
sbb
popw
retf
jo
mov
bound
mov
mov
cmp
push
adc
ins
add
adc
outs
mov
push
or
aam
push
push
nop
lock
cs
adc
jno
mov
xchg
dec
push
mov
and
push
push
nop
mov
mov
out
dec
adc
xlat
and
dec
ja
je
ret
dec
cmp
mov
and
mov
inc
or
push
sub
jmp
push
jp
js
fwait
(bad)
sub
ret
rcl
(bad)
fsub
fcmovb
sub
shr
mov
imul
je
lea
adc
nop
(bad)
mov
inc
and
icebp
add
mov
mov
xchg
mov
mov
les
mov
mov
cmp
push
inc
cdq
adc
jle
sbb
pop
sub
or
push
lods
je
sti
inc
jb
pop
push
(bad)
(bad)
mov
sub
cwde
das
mov
xor
movsx
xchg
pop
outs
imul
clc
shr
and
add
xchg
push
xchg
mov
sbb
es
mov
pop
ret
jp
loop
inc
pusha
jg
ret
cdq
data16
imul
adc
jp
and
outs
add
xor
dec
cli
addr16
mov
xor
or
data16
clc
push
push
add
dec
push
and
cld
into
add
int3
mov
mov
adc
sub
pop
loopne
xor
sub
dec
push
pop
cmp
add
mov
or
mov
inc
ss
mov
arpl
rcl
leave
xlat
das
adc
sar
or
scas
jne
loope
(bad)
push
add
and
dec
imul
shl
pop
mov
adc
data16
mov
jne
mov
pop
cmp
jne
xchg
or
push
mov
push
mov
add
dec
in
pushf
popa
dec
dec
xchg
mov
stos
pop
sub
scas
mov
cmp
mov
shr
outs
call
sbb
push
pop
mov
dec
int3
pushf
fnstcw
ret
pop
stc
cmp
pop
call
adc
add
push
test
pop
add
or
or
jmp
jno
mov
jge
mov
enter
jae
scas
jmp
int
lds
jmp
es
das
mov
rol
or
mov
fmul
je
outs
in
ins
jl
adc
js
call
in
push
in
call
and
pop
or
in
pop
int3
sub
cmps
shl
push
loopne
(bad)
jl
sbb
dec
cmps
repnz
test
rcl
not
jle
pop
pop
jno
pop
sbb
pop
cli
out
jno
out
cwde
je
lods
xlat
ror
es
lock
or
clc
push
inc
adc
in
xchg
fst
ror
out
jns
push
dec
xchg
(bad)
push
orps
rol
imul
push
rcl
push
pop
push
mov
mov
mov
xor
(bad)
aam
xchg
inc
loopne
cmp
add
or
les
mov
inc
or
inc
add
inc
or
add
popf
and
dec
ret
cmp
adc
and
add
push
sub
test
mov
jns
adc
xor
call
stos
jp
dec
sub
popa
imul
ret
sbb
or
dec
adc
out
dec
cmps
xor
dec
ss
pop
jo
je
in
in
push
call
(bad)
sbb
or
dec
call
push
loop
hlt
retf
add
push
and
and
or
es
je
ins
jo
inc
(bad)
or
sbb
fcmovb
pop
in
or
or
add
push
push
jo
add
inc
xchg
mov
xor
mov
loopne
sbb
sbb
xor
push
cmp
dec
add
push
(bad)
out
cmp
rcr
sbb
adc
and
les
sbb
mov
inc
in
sbb
push
movs
pop
sbb
inc
mov
xchg
dec
mov
pop
movs
push
xchg
push
mov
imul
je
xor
inc
sbb
into
adc
xchg
add
jne
popf
add
push
and
icebp
and
iret
stos
shl
mov
gs
pop
out
xchg
or
mov
add
xor
ror
test
mov
jg
cmp
popf
and
mov
xchg
cmp
(bad)
pop
js
int
les
lods
jno
jae
or
(bad)
push
cmp
hlt
mov
mov
sbb
add
in
(bad)
popf
loopne
retf
clc
nop
or
adc
and
mov
cmps
repz
jo
add
pop
mov
mov
jnp
fcomp
add
pop
jmp
dec
push
in
or
retf
add
(bad)
test
not
or
fidiv
dec
je
ds
adc
and
or
cmp
hlt
sub
mov
dec
mov
sbb
jp
(bad)
popa
mov
or
jnp
(bad)
push
movs
dec
test
mov
add
push
movs
adc
sbb
xchg
popa
and
fcom
mov
dec
and
jge
hlt
mov
je
or
mov
sub
movs
scas
shr
pop
dec
add
pop
add
mov
pop
outs
lods
(bad)
aad
rcr
jae
cmp
retf
xor
cmp
mov
mov
xor
mov
dec
add
mov
stc
jmp
sbb
push
das
inc
mov
and
or
ret
add
std
pop
pop
inc
push
cmp
cmp
imul
mov
push
dec
adc
fucompp
push
dec
pop
clc
loope
mov
neg
mov
or
sar
add
push
pop
mov
fdiv
add
sbb
sbb
jmp
xchg
adc
jecxz
imul
jae
sub
cmp
js
and
push
or
jecxz
push
enter
fild
cli
std
jg
lea
in
stos
pusha
in
lahf
adc
inc
mov
mov
je
sbb
imul
mov
mov
(bad)
adc
jge
add
sub
mov
or
sti
clc
mov
or
mov
pop
(bad)
xlat
pop
retf
add
aam
push
xchg
sbb
mov
sub
dec
and
mov
js
les
call
sbb
nop
xor
mov
aam
dec
aam
in
aaa
test
inc
push
sbb
add
mov
dec
push
int3
xchg
rcl
adc
pushf
test
rcr
pop
ror
ret
sar
inc
push
outs
sub
ret
cmp
adc
adc
jo
jno
add
fdivr
aad
(bad)
xor
jge
lods
sbb
ja
sub
or
mov
inc
and
aas
fsub
or
int
adc
pop
ret
aam
adc
and
(bad)
aaa
adc
sub
je
icebp
pop
jae
mov
js
jns
or
pop
pop
mov
sub
pusha
mov
adc
rol
sub
jle
mov
or
adc
jge
sahf
adc
call
push
pop
cmp
shl
and
ret
push
imul
push
frstor
add
int3
neg
lods
das
lea
lock
and
jae
cld
mov
dec
push
icebp
test
fst
fnsave
and
inc
scas
pop
test
add
add
adc
sub
pop
jo
add
add
pusha
cld
shl
fadd
in
call
jns
adc
mov
jns
out
jno
ins
jns
imul
pop
pop
enter
jbe
push
pop
pop
add
add
mov
add
dec
icebp
mov
push
add
jbe
pop
add
sbb
bsr
fimul
add
or
inc
cmp
jb
outs
or
xchg
mov
lds
mov
dec
mov
into
ret
push
or
sub
xor
jbe
push
movs
mov
shl
pop
iret
mov
mov
add
pop
or
dec
call
push
push
movs
movs
mov
pop
or
sub
push
enter
sub
fs
call
rcr
adc
mov
pop
push
add
ror
jl
stos
jae
outs
fld
fstp
and
fisttp
es
sbb
pop
mov
add
mov
fdiv
lea
push
icebp
fnstenv
enter
dec
ror
jp
jl
jnp
jne
pop
adc
ins
iret
cmp
test
adc
or
mov
jno
xchg
add
arpl
cmps
mov
push
out
mov
xor
movd
pop
ja
clc
into
retf
(bad)
xor
mov
pushf
xor
ins
xor
adc
push
dec
fcomp
add
jmp
cli
push
ret
dec
loopne
pop
pop
mov
xchg
shl
cld
jne
mov
mov
ret
je
push
xchg
xchg
push
add
cli
cmps
push
push
cmps
dec
add
sub
mov
inc
stos
leave
mov
shr
mov
mov
adc
in
scas
cmp
push
sub
sbb
sub
loopne
repnz
xor
adc
or
cmp
sbb
pop
(bad)
xchg
pop
(bad)
lea
dec
cli
dec
jmp
cmp
push
cmp
test
push
or
test
cmp
inc
inc
(bad)
or
icebp
dec
adc
push
push
xor
sbb
mov
mov
sbb
call
pop
es
push
add
or
shl
cwde
or
les
sbb
mov
xchg
cmp
push
fldenv
fstp
sbb
mov
mov
cmp
je
or
je
add
inc
ins
enter
test
add
or
inc
adc
lods
call
data16
test
or
or
or
push
jmp
or
jg
in
and
xor
add
sbb
push
fistp
sahf
xchg
jp
outs
test
xchg
fstp
je
xchg
sub
add
pop
add
out
mov
jg
jbe
lock
add
xchg
out
ror
pop
je
test
or
(bad)
rol
nop
adc
loop
enter
fldenv
push
and
cdq
pop
stos
movhps
daa
out
imul
sub
rcl
jmp
add
dec
jmp
dec
cmpxchg
jp
ret
cmp
cmp
and
ja
add
mov
xor
divps
and
ss
mov
pop
or
add
mov
jb
sub
mov
push
sub
lock
sbb
aam
movs
(bad)
fmul
mov
or
int3
popa
arpl
or
sbb
pop
xor
sub
push
xor
ficomp
test
in
push
call
push
scas
retf
je
adc
ins
sbb
sbb
xchg
add
cld
adc
and
neg
or
and
or
adc
pop
xor
push
adc
pop
aam
in
xchg
cmp
pushf
push
dec
sar
sub
jmp
loope
push
jne
or
(bad)
mov
jne
lock
add
or
dec
imul
clc
int3
ins
adc
xchg
cld
repz
aam
lahf
shr
les
shl
fsub
add
xchg
push
cmc
sbb
dec
ret
out
add
mov
push
pop
sub
or
pushf
ficom
test
sub
inc
sub
aad
sbb
adc
add
sub
xor
pop
lahf
psubb
mov
jmp
cmovns
retf
mov
push
add
pop
rcl
jmp
jne
inc
stos
dec
dec
mov
sbb
sub
rol
cmp
es
sub
into
daa
jmp
int
sub
fnsave
and
adc
test
cmps
test
dec
dec
test
mov
mov
and
ret
call
inc
inc
mov
into
fwait
pusha
es
adc
add
lea
xchg
neg
or
jnp
pop
add
fnstenv
cmp
pop
(bad)
dec
test
call
pop
cmp
sub
push
test
imul
adc
xchg
cmp
pushf
dec
and
push
cli
mov
sub
popa
rcl
cmp
cmp
sub
or
mov
clc
add
mov
movs
push
mov
lods
push
dec
mov
ins
jg
mov
jmp
push
sub
je
jo
or
or
jle
inc
mov
sti
ins
push
lods
inc
mov
jl
jb
adc
add
jecxz
cmp
sub
or
xor
cmp
jle
inc
pusha
dec
inc
jp
and
add
inc
ficomp
push
pop
mov
out
(bad)
movs
adc
dec
(bad)
jle
mov
aas
or
mov
mov
sub
sar
push
mov
inc
pushf
xor
fs
sbb
push
add
loopne
ins
into
push
ins
cmp
ret
or
push
push
mov
sbb
and
dec
pop
and
inc
ins
sub
and
ins
(bad)
sub
and
(bad)
jne
in
inc
hlt
xchg
into
sbb
pop
mov
sbb
cmps
popa
add
fnstcw
xchg
push
push
out
adc
xchg
push
push
(bad)
je
inc
mov
pop
and
movs
cmc
jo
jno
(bad)
les
imul
fdivr
add
(bad)
dec
bound
add
mov
lock
sub
add
push
dec
inc
add
sbb
je
mov
lods
leave
nop
sub
sbb
or
xchg
inc
stos
js
sub
mov
dec
rol
pushf
or
inc
sub
mov
test
sbb
jo
add
push
fdiv
pop
adc
add
shufps
(bad)
stos
sbb
jl
inc
addr16
scas
cmp
inc
fimul
inc
jmp
dec
shl
jo
or
rol
add
and
js
pop
cmp
jl
dec
rcl
add
rcr
push
xor
scas
adc
inc
push
jmp
std
test
test
push
adc
push
adc
pop
mul
sub
fcmovne
test
pop
test
mov
add
leave
sbb
repz
adc
push
hlt
add
sbb
arpl
call
mov
imul
mov
imul
xchg
outs
call
div
mov
shl
fldcw
cmc
cmps
xchg
push
add
adc
push
xchg
fsub
jp
idiv
jnp
sub
addr16
inc
sbb
or
add
push
data16
add
xchg
adc
mov
jne
mov
movs
pop
fdiv
push
call
adc
jo
xchg
mov
dec
push
add
xor
or
jp
add
jmp
sbb
ds
inc
into
adc
mov
sbb
jmp
call
sbb
test
push
mov
mov
lea
(bad)
or
inc
push
push
dec
and
xchg
add
pop
aas
adc
or
and
push
lea
and
lea
aam
add
and
rol
or
sahf
dec
xor
adc
xor
push
xlat
call
push
or
add
dec
adc
and
push
dec
push
push
inc
xor
adc
retf
scas
add
mov
dec
pop
or
into
aam
inc
adc
add
loopne
add
pop
xchg
jno
add
lea
dec
dec
xor
pop
lock
xor
push
and
and
jne
cli
and
dec
push
fbld
sahf
retf
(bad)
adc
or
mov
lods
or
leave
gs
stos
add
adc
or
dec
daa
inc
mov
and
xchg
cmp
cs
mov
inc
fdivr
pop
mov
dec
or
imul
call
adc
(bad)
arpl
fild
mov
inc
lea
jp
jo
pop
mov
setb
retf
pop
xchg
leave
ret
pop
pop
stos
and
jbe
adc
rol
xor
sub
push
jb
inc
sub
push
fcmovbe
loope
ds
inc
adc
or
lea
enter
mov
std
or
jns
add
into
and
adc
int3
lock
int
adc
jmp
inc
fcmove
rcr
mov
cmp
or
or
push
xchg
rol
mov
or
xchg
jle
xor
dec
add
std
add
or
scas
les
jmp
xor
adc
clc
jne
or
mov
adc
stos
push
xor
les
inc
mov
shl
inc
adc
pop
sub
out
add
mov
fist
mov
lahf
cmp
push
sbb
pop
jb
xchg
or
mov
or
jbe
(bad)
or
jmp
aad
into
sbb
dec
push
sub
les
sbb
jbe
fadd
pop
dec
jns
idiv
ins
or
and
push
adc
xor
ror
icebp
test
cmp
les
ror
push
out
retf
jp
push
xor
dec
mov
push
mov
adc
in
mov
add
or
inc
sub
and
jae
mov
sub
pop
push
xor
ret
jbe
xchg
jge
adc
sbb
mov
jmp
imul
mov
retf
push
pop
and
adc
or
das
xor
inc
and
pop
xchg
out
inc
leave
fdivr
xor
push
push
test
in
cmc
movs
mov
loope
xchg
inc
and
push
inc
add
aas
and
in
sbb
adc
cmp
pop
icebp
imul
push
pop
xchg
sahf
movs
iret
adc
pop
mov
inc
xchg
cdq
test
clc
or
loope
dec
cmps
mov
gs
sbb
ret
adc
jecxz
cmp
shl
mov
adc
or
or
nop
dec
gs
mov
xchg
adc
and
push
sub
jo
add
jge
ins
mov
adc
test
inc
pop
imul
dec
lock
add
add
adc
ror
fs
sbb
sbb
jge
scas
stos
test
mov
mov
push
dec
xor
jl
or
mov
pop
in
jns
or
sub
dec
add
add
fnstsw
cli
push
jl
mov
cmps
add
call
mov
add
stos
push
and
push
and
in
fs
loop
int3
or
fadd
pop
ja
mov
sub
dec
jl
and
icebp
mov
loop
mov
adc
cmp
cmp
idiv
js
adc
inc
movs
out
sbb
rol
rcr
stc
sub
inc
add
mov
xchg
shl
sbb
cld
xor
mov
cli
popf
adc
add
aam
shr
lahf
test
es
pop
in
pusha
fild
lar
push
out
cmc
sar
ds
mov
lea
nop
in
xchg
xor
adc
pop
mov
call
test
pushf
mov
xchg
jge
je
adc
adc
xor
mov
inc
add
fstp
(bad)
xor
adc
or
popf
in
ror
dec
hlt
push
sbb
out
sub
mov
pusha
cmp
mov
cmp
xor
push
add
dec
fs
je
add
mov
dec
push
xor
pop
push
arpl
mov
or
or
mov
mov
sub
enter
dec
dec
add
sbb
loopne
cmp
add
aam
pushf
pushf
dec
and
add
mov
movs
movs
jge
jl
loopne
ins
adc
daa
imul
ins
inc
jns
sub
add
cmps
imul
add
or
adc
in
add
adc
imul
mov
dec
repz
xchg
(bad)
cmp
test
push
shl
je
adc
xchg
dec
xor
adc
or
jno
fxch
xlat
les
or
adc
jmp
pushf
fidiv
sub
lock
cmp
mov
sub
std
sar
jmp
add
mov
cmp
or
das
and
rcl
mov
jg
push
push
mov
push
call
jp
mov
pop
mov
fidivr
mov
inc
add
scas
xchg
jle
add
or
sbb
(bad)
loopne
inc
xor
fimul
stos
push
fldcw
sub
loopne
adc
push
rol
xchg
scas
ficom
je
stos
fadd
aad
dec
icebp
ret
int
and
add
inc
mov
sbb
pop
out
dec
sub
(bad)
cmps
sub
jb
clc
xor
jne
push
sub
push
sbb
clc
ret
arpl
jbe
mov
sub
push
sub
pop
pop
push
call
test
sub
nop
xor
push
xor
push
dec
retf
ins
jl
and
ja
mov
lea
sbb
lds
mov
adc
push
or
xchg
ret
xchg
aad
call
mov
dec
test
shl
jo
arpl
mov
mov
sbb
cmp
sti
mov
pop
fld1
arpl
cmc
nop
cmp
ja
push
ret
rcl
or
les
pop
jge
cmp
popf
fcomp
xchg
fadd
(bad)
xchg
adc
pop
pop
jecxz
pop
push
into
xor
mov
js
add
xor
(bad)
int
add
pusha
daa
xchg
cli
(bad)
xchg
and
shr
pop
mov
mov
stc
jl
push
fistp
sbb
adc
push
pop
call
(bad)
add
test
pop
pop
adc
or
jbe
push
mov
sbb
ins
sbb
sbb
push
dec
retf
inc
adc
rol
mov
ins
push
dec
cmp
xor
add
jle
shl
ins
pop
pop
shl
mov
mov
sub
jne
lods
gs
dec
add
test
cmp
rol
and
xchg
sar
daa
bound
push
push
out
in
inc
cld
sub
in
jge
enter
xlat
cmp
dec
call
test
rcr
ss
daa
push
imul
sahf
mov
or
call
repz
nop
stos
pop
dec
push
cwde
(bad)
dec
inc
add
dec
push
add
sbb
pop
mov
aam
dec
retf
icebp
ret
inc
cmp
pusha
es
inc
pop
push
pop
xchg
mov
xlat
je
jmp
or
in
jmp
dec
dec
(bad)
rcr
push
push
or
xor
aaa
cmp
dec
pusha
add
fdivr
sbb
and
dec
mov
rol
inc
add
(bad)
push
mov
ror
add
lahf
ss
inc
dec
aam
push
sub
imul
sbb
mov
xchg
loopne
stos
fbld
adc
or
xchg
dec
or
movs
add
test
movs
fs
mov
add
int3
xchg
rcr
pushf
ror
inc
call
xor
sub
or
sahf
int
and
sbb
and
and
call
dec
inc
les
or
xor
add
test
fs
push
lea
add
or
add
mov
pop
imul
sbb
push
and
jecxz
jmp
inc
mov
cld
pop
adc
mov
xchg
add
dec
mov
cmp
fwait
mov
mov
gs
add
mov
or
lahf
inc
imul
jo
pop
cmp
push
stos
and
sar
loopne
adc
test
pushf
shl
sub
add
addr16
in
in
dec
xor
dec
mov
mov
test
ficom
xor
pusha
out
add
aaa
xor
adc
or
es
cmp
or
sbb
push
mov
jno
inc
les
lods
or
sbb
aam
ret
xor
bound
adc
mov
fadd
movs
push
and
push
icebp
je
sbb
fcmove
mov
mov
ret
xor
sbb
xchg
xor
xor
inc
(bad)
es
rdtsc
cmp
mov
daa
and
cmps
add
xchg
pop
push
enter
retf
jle
das
push
jo
adc
imul
mov
mov
mov
movaps
pop
stos
adc
jmp
loopne
and
mov
jmp
jb
cmp
pop
pop
inc
inc
xchg
push
or
adc
lock
pop
int3
(bad)
ins
xor
or
test
rcr
dec
mov
cs
ror
add
and
xlat
setns
xchg
stos
mov
xor
cld
inc
or
test
cmp
adc
inc
sub
xor
fucomp
cmp
cmp
inc
test
sub
movs
sbb
adc
fs
adc
popa
cwde
inc
cmp
add
outs
add
dec
xlat
sub
dec
dec
adc
fmul
sub
push
ret
mov
lds
ror
outs
in
inc
xor
fld
std
sbb
pop
push
shr
mov
ins
push
loope
jle
jmp
push
loopne
in
(bad)
std
(bad)
sbb
adc
dec
or
or
jns
in
or
out
cmp
add
add
dec
je
shr
inc
daa
push
sub
lods
xchg
cmp
and
add
jmp
jo
pop
pop
mov
inc
inc
push
sub
ret
movs
sub
jle
mov
jne
inc
cmp
imul
or
sub
add
mov
(bad)
out
add
or
sbb
scas
and
jecxz
and
in
ret
jb
sbb
cmp
inc
in
lods
test
jmp
mov
adc
mov
sbb
ja
add
pop
cli
iret
or
mov
sbb
xor
push
pop
pusha
icebp
ret
mov
jl
jmp
xchg
dec
call
xor
iret
retf
or
inc
push
test
mov
dec
push
sub
pop
movs
sbb
(bad)
out
fdiv
(bad)
xchg
imul
leave
pop
rcr
popa
mov
sbb
rcr
not
adc
ds
xchg
pop
imul
ins
je
cld
xor
inc
mov
mov
movs
xor
adc
add
lea
mov
(bad)
pop
xchg
pop
js
inc
pusha
dec
inc
mov
movs
pop
mov
frstor
sub
xchg
gs
or
inc
movs
cmp
xor
aaa
xchg
in
mov
push
mov
retf
lods
rol
xchg
div
jbe
fiadd
jl
leave
and
je
or
sbb
call
in
mov
jle
inc
xor
cmp
dec
cmp
test
jbe
das
(bad)
jle
outs
or
je
movs
or
xchg
sub
ins
arpl
add
or
ds
retf
(bad)
pusha
repnz
fs
(bad)
pop
retf
mov
mov
push
pop
mov
add
or
movs
mov
dec
sti
xchg
(bad)
push
stos
fsub
in
fcomp
das
jns
fwait
ss
call
sbb
mov
and
or
fisubr
jmp
(bad)
es
ins
mov
fild
add
add
loop
jmp
je
inc
shr
frstpm(287
loop
jp
test
cmps
in
movs
addr16
and
cmps
into
push
dec
int3
push
retf
jge
and
cmp
xchg
add
mov
in
sub
push
sbb
adc
shl
fcomp
in
(bad)
out
jmp
pop
enter
push
push
push
fs
out
movs
jecxz
and
adc
ins
fs
nop
xchg
dec
adc
ins
and
and
repnz
shl
aam
pop
pushf
data16
xchg
mov
nop
jmp
cmp
jbe
dec
fdiv
pop
repz
(bad)
stos
cmc
push
(bad)
jne
fchs
(bad)
pop
mov
test
ror
dec
test
test
adc
add
sbb
or
jmp
in
push
and
pop
dec
imul
inc
or
fwait
jb
cmp
pop
mov
scas
and
push
mov
sub
ja
movs
clc
push
xor
pusha
xor
cld
or
add
pushf
cmps
fwait
ret
loopne
sub
lea
jo
sub
pop
pusha
dec
push
in
add
and
or
sub
adc
enter
sbb
jns
inc
lea
mov
call
call
rcr
xor
mov
mov
mov
xor
sbb
js
(bad)
push
and
jp
mov
mov
ret
xchg
in
inc
icebp
add
push
or
rcr
or
push
sbb
sbb
cmp
mov
push
dec
sub
pop
mov
aad
dec
stos
push
pop
or
lds
mov
mov
sub
pop
or
shl
and
or
test
sub
pop
ror
lahf
push
adc
jbe
mov
mov
lock
push
into
inc
pop
mov
xchg
push
and
cld
arpl
movs
or
push
pop
pop
jnp
test
sbb
jnp
movs
leave
adc
pop
push
ret
and
test
mov
aad
adc
cmps
adc
cmp
pushf
aaa
and
add
and
or
push
fs
dec
pop
je
add
xchg
jb
movs
or
imul
jl
cmp
dec
push
cmp
in
dec
lock
xor
mov
add
pop
inc
ds
cdq
add
add
rol
fidiv
cmc
jle
add
mov
inc
cmp
or
pop
push
push
inc
pop
inc
arpl
imul
sbb
and
xor
lahf
(bad)
(bad)
aaa
ja
and
cmps
add
or
mov
aas
(bad)
hlt
cmp
push
data16
dec
out
and
and
repz
enter
loop
add
jmp
and
sbb
sbb
mov
lea
(bad)
dec
ins
xor
imul
shl
or
mov
inc
inc
jbe
test
ret
dec
pop
jbe
inc
xor
xchg
xor
xor
push
loope
sub
and
sbb
sbb
ins
or
fiadd
sar
push
push
and
in
dec
mov
bound
or
sbb
cmp
and
cmp
xlat
rcr
imul
and
add
hlt
std
retf
fs
and
fidiv
sub
(bad)
pop
adc
pusha
call
mov
and
mov
cmp
and
hlt
xchg
dec
aam
or
push
shl
jle
sbb
movs
out
adc
push
(bad)
xchg
rcr
xchg
adc
loop
inc
lods
xchg
(bad)
sbb
mov
mov
ss
sbb
push
stos
mov
sar
push
ss
xor
and
adc
and
ds
retf
pop
cmp
shl
or
push
stc
movs
icebp
sub
data16
pop
and
clc
push
or
call
cmp
push
push
test
loopne
mov
sbb
dec
sbb
inc
cmp
sbb
add
cmp
pop
jne
push
and
inc
xchg
mov
push
repz
xchg
jbe
jmp
sahf
sbb
push
pushf
cmp
inc
add
xor
and
call
xor
cmp
xor
in
or
sbb
ss
adc
hlt
mov
js
mov
icebp
push
inc
jne
push
fwait
nop
mov
fldpi
xor
push
cmp
icebp
clc
dec
mul
adc
push
lock
sbb
adc
jae
and
sbb
mov
pop
add
addr16
test
dec
push
mov
add
and
pop
adc
sbb
or
es
movs
mov
clc
test
pop
sahf
inc
or
fwait
pop
or
pop
test
xor
movs
cmp
cmps
cmps
push
or
scas
mov
pcmpeqw
inc
push
push
ins
test
test
(bad)
(bad)
sbb
dec
arpl
or
imul
in
ins
sub
push
xchg
cvtdq2ps
lahf
(bad)
and
cwde
bound
sahf
outs
mov
movs
sbb
xor
mov
xor
or
cli
out
adc
cmp
cmp
push
inc
push
mov
or
popf
cmps
jae
xchg
(bad)
jno
pop
push
cmp
lock
ficom
dec
mov
inc
sti
mov
pop
inc
cmp
aaa
sbb
cmp
dec
xchg
cdq
shl
mov
test
add
popf
jno
mov
rcr
(bad)
sbb
dec
push
nop
jne
or
jo
test
mov
jmp
loopne
xor
or
es
shl
xor
int3
scas
mov
movs
push
es
push
ss
and
loopne
push
xor
pop
jo
inc
call
iret
div
pushf
test
dec
jno
mov
icebp
je
es
jmp
mov
and
sti
mov
sbb
enter
dec
add
retf
push
loope
icebp
mov
sti
pop
jp
sub
jo
daa
rol
pop
adc
pop
pop
inc
or
shr
pop
and
fbld
pusha
(bad)
mov
sub
rcr
push
xlat
cdq
adc
mov
loopne
mov
cmp
adc
loopne
scas
mov
cmp
add
or
pop
dec
scas
call
dec
or
mov
mov
test
sub
push
ror
inc
aam
or
and
ins
and
mulps
xor
or
repz
movs
xor
lods
pop
and
add
xchg
add
adc
add
xor
sbb
(bad)
adc
pop
pop
aaa
fstp
or
adc
clc
sbb
clts
lock
sub
sbb
add
jle
test
xor
jp
ins
or
mov
sbb
or
fcomp
or
test
adc
xchg
ds
es
enter
call
xor
mov
popf
loope
xor
push
stos
test
jne
sub
mov
int3
adc
push
or
pop
loopne
xlat
jg
mov
adc
adc
add
test
sbb
or
out
push
test
pusha
adc
add
or
fadd
cmp
xchg
jge
xchg
ss
(bad)
int3
mov
adc
xchg
aad
or
adc
jo
adc
sbb
fmul
lds
in
xchg
sbb
push
or
adc
pop
mov
dec
pop
test
mov
and
in
int
pop
dec
aam
add
sub
pusha
xchg
ficomp
call
push
addr16
adc
test
cwde
lock
fdivr
cmp
mov
inc
sbb
aad
add
rcr
xor
cmc
pop
jg
jp
cvtps2pi
test
pop
adc
or
gs
push
jg
mov
jl
mov
sub
lods
sub
xor
add
pop
mov
push
mov
aam
xor
pop
jmp
dec
push
loopne
aam
fsub
adc
das
les
or
cmp
jl
adc
lds
cmp
ror
dec
cmp
pop
push
mov
cmp
push
add
add
xchg
fisttp
dec
sbb
shl
int3
ret
adc
lods
jb
push
adc
push
fmul
add
mov
add
push
or
and
mov
push
sbb
push
retf
sti
xchg
mov
mov
fmul
pushf
(bad)
pop
add
add
or
xchg
(bad)
sub
cmp
repnz
mov
cmp
fisttp
adc
cmps
imul
add
and
lods
pusha
and
add
pop
cmp
pop
xor
jne
xor
adc
adc
push
add
mov
dec
jbe
dec
rcl
jle
and
sahf
inc
and
call
and
sbb
adc
sub
in
test
jb
pop
jge
js
fwait
sbb
xor
add
cmp
add
stc
pop
jo
js
stos
inc
add
pushf
push
pop
iret
nop
sbb
ins
call
and
or
pusha
and
data16
test
jecxz
sub
push
dec
ins
loop
xchg
jbe
mov
movs
sbb
jb
add
and
xchg
inc
sbb
mov
lods
mov
ja
and
xchg
dec
jle
jae
enter
clc
mov
fidiv
lahf
add
or
push
je
lahf
adc
pop
test
dec
sahf
or
inc
push
sub
sbb
call
cmps
shl
fs
(bad)
mov
ja
pop
nop
nop
sub
pop
jmp
pop
cld
pop
inc
scas
and
add
jmp
mov
or
or
mov
xor
sbb
add
or
add
jl
sub
add
dec
loope
sub
adc
hlt
movs
add
mov
cmp
inc
or
jne
call
xor
scas
ss
xchg
mov
sub
mov
int3
and
sbb
dec
jp
or
rol
shl
or
push
mov
push
test
iret
jb
lea
push
cmp
push
pop
mov
fisttp
lods
add
mov
sbb
dec
ret
mov
mov
jmp
add
test
pop
or
sub
fcmovb
sub
add
add
pop
pop
xor
jmp
fldcw
nop
imul
push
fldenv
xchg
(bad)
test
jmp
test
repz
jbe
mov
adc
add
adc
ret
sbb
jnp
ret
gs
push
inc
loopne
shr
mov
push
dec
imul
xor
ins
inc
add
gs
fiadd
cmp
in
and
adc
nop
inc
sbb
test
add
cmp
adc
(bad)
mul
sahf
pop
adc
add
or
push
dec
push
popa
shl
lods
cmpxchg8b
loopne
loope
mov
add
or
lods
movs
xor
sub
cld
add
loopne
ret
shl
inc
jne
retf
rcr
or
xor
sbb
xor
jp
xchg
or
imul
ret
mov
inc
jecxz
out
out
retf
push
call
xor
jmp
pop
xchg
jle
and
outs
aaa
cmps
inc
push
es
mov
js
clc
(bad)
mov
xor
sbb
jns
jp
and
(bad)
and
je
dec
or
jmp
xchg
add
inc
sbb
and
movs
pusha
mov
inc
lods
fadd
jl
push
ja
test
pop
pop
xchg
dec
lock
jae
ror
mov
test
adc
or
sbb
out
(bad)
out
push
fisubr
jb
je
ss
retf
leave
add
clc
cmp
dec
adc
in
push
inc
test
pop
and
data16
push
sahf
ret
shl
test
add
(bad)
cmp
pusha
inc
cmp
add
mov
sub
push
adc
or
inc
fs
outs
adc
mov
imul
mov
rcl
es
movs
sub
popf
add
pop
mov
or
sub
mov
push
xor
dec
xor
dec
jmp
push
pushf
clc
in
mov
scas
add
(bad)
dec
rol
mov
cmp
mov
adc
rcr
inc
add
unpckhps
jle
push
aaa
mov
sbb
test
loope
add
icebp
loopne
pop
xor
push
push
test
or
mov
add
inc
cmp
add
mov
test
or
mov
and
scas
sbb
sar
gs
or
enter
(bad)
pusha
cld
dec
seto
push
jge
pop
mov
iret
imul
pop
pop
and
ds
cmps
push
popa
and
xor
loope
loope
lods
test
adc
sub
or
jo
adc
push
mov
jle
in
add
sbb
xchg
dec
retf
and
push
mov
cmp
loopne
and
in
xor
lods
inc
jo
mov
mov
sub
mov
adc
and
mov
sub
xchg
sar
or
call
mov
and
fwait
jp
test
icebp
xor
adc
add
add
fisub
cmc
call
and
pop
out
or
sbb
sub
jae
(bad)
or
or
jbe
movs
push
inc
movs
push
push
ins
(bad)
and
pop
pop
adc
das
or
aaa
mov
pop
mov
popf
add
dec
push
nop
mov
neg
inc
in
test
push
push
lea
xor
leave
xor
loopne
or
inc
mov
inc
adc
lods
xchg
fidiv
ret
cmp
push
adc
adc
cmps
jecxz
mov
jbe
mov
sbb
ret
rol
cmps
mov
mov
cmc
xchg
dec
mov
clc
cmps
xor
fucom
fs
or
cmp
sub
mov
push
enter
enter
xor
dec
fcmovnb
pop
mov
xor
outs
push
fimul
fsub
adc
lahf
ins
add
or
in
push
adc
jo
arpl
imul
dec
imul
adc
dec
inc
xor
sbb
xor
sbb
lahf
push
fist
inc
add
test
mov
js
sub
dec
in
inc
dec
daa
pop
mov
aam
and
fidivr
inc
int3
push
mov
dec
mov
xchg
shl
daa
jecxz
sbb
imul
sub
shr
mov
call
fcomp
jl
mov
xchg
aam
or
leave
imul
loopne
sub
xor
inc
sub
and
cmp
call
pushf
in
and
push
scas
in
xor
or
stos
dec
adc
inc
cmps
popa
inc
outs
mov
mov
inc
clc
les
xor
hlt
mov
dec
sahf
cmp
add
add
pop
es
popf
cld
cld
sbb
push
adc
stc
and
out
data16
pop
jbe
push
add
lock
fsubp
mov
(bad)
jge
dec
loop
dec
jp
push
in
jbe
dec
and
rcr
mov
pop
pop
test
or
sbb
inc
pop
dec
movs
hlt
mov
ret
js
mov
cmp
movs
ds
or
rcl
fwait
mov
icebp
(bad)
sbb
inc
jnp
push
or
inc
(bad)
mov
adc
add
aaa
sahf
out
(bad)
imul
lock
adc
cwde
enter
or
or
(bad)
ins
jmp
xor
mov
mov
xchg
xor
xor
or
add
(bad)
jg
ins
data16
int3
or
je
sbb
and
int3
jl
jne
enter
mov
popa
xchg
add
adc
dec
and
or
cmps
fiadd
adc
arpl
ror
sbb
in
fisttp
lea
push
pushf
sub
adc
fdiv
popa
mov
mov
mov
mov
cmp
popa
xor
add
jecxz
adc
pop
dec
ss
jo
mov
add
jmp
adc
xor
pop
xor
cld
or
push
ds
add
call
mov
sbb
lock
cwde
loopne
loop
adc
hlt
sub
lock
rol
or
cmp
add
in
add
pushf
or
or
or
loopne
cmps
sbb
ret
imul
out
frstor
dec
xor
test
fmul
pop
push
jmp
push
sbb
(bad)
fadd
fxch
mov
fisttp
xor
sub
jb
cld
imul
retf
fsubr
fstp
rcr
imul
fcomp
iret
(bad)
mov
sbb
sbb
jg
ds
loop
jecxz
jecxz
je
jbe
push
imul
fild
bndldx
or
faddp
adc
sub
sar
sti
fld
pop
popa
call
inc
jp
push
push
inc
dec
xchg
pop
cs
test
hlt
adc
cmp
and
lods
jge
dec
xchg
mov
mov
sub
test
jno
mov
and
inc
repnz
sub
ss
aaa
or
clc
add
mov
test
jbe
jbe
push
mov
or
sub
pop
mov
hlt
add
mov
mov
leave
retf
das
inc
or
add
add
dec
push
push
or
adc
gs
or
xchg
fwait
shl
pop
push
dec
sti
mov
push
xchg
inc
jmp
js
push
retf
or
and
sub
imul
mov
pusha
repnz
xor
mov
mov
mov
popa
lea
add
mov
add
cs
dec
loopne
in
test
adc
adc
dec
movs
add
retf
cmp
xor
mov
push
enter
dec
neg
inc
xchg
(bad)
cmp
imul
add
retf
call
and
cmp
enter
sub
jne
pop
pop
mov
adc
xor
mov
clc
mov
jae
aam
cmp
mov
dec
call
add
pop
ror
mov
lock
enter
fsubr
or
adc
pusha
mov
dec
sbb
repz
sbb
enter
mov
or
(bad)
push
mov
add
jne
pop
pop
and
or
mov
ins
dec
adc
ret
cmp
mov
jl
and
or
nop
push
or
fild
or
adc
dec
ret
add
add
mov
rcl
cmps
loope
pop
jo
ficomp
test
(bad)
and
rcr
adc
pop
mov
add
ja
push
or
sbb
(bad)
sbb
sbb
add
repz
sbb
jne
mov
inc
and
cmp
xor
fdivr
cmp
je
or
jb
push
add
leave
push
loopne
or
mov
mov
add
ret
push
or
icebp
leave
push
loope
or
sahf
dec
mov
pop
sbb
pusha
out
jb
or
sbb
stc
in
push
pusha
sahf
add
pop
push
push
not
push
movs
ror
or
movs
and
lahf
lds
inc
add
aaa
mov
call
sub
xor
popa
shl
jmp
add
add
fadd
mov
adc
shr
push
popa
shr
jne
jmp
in
fcomp
clc
and
cmp
adc
enter
pop
loopne
in
or
add
clc
or
mov
in
and
test
enter
(bad)
cmp
pop
jmpw
xor
(bad)
popa
sub
jae
dec
mov
pop
xor
jb
xor
rcr
rol
and
jnp
xchg
mov
dec
mov
or
pop
mov
test
mov
sbb
bound
add
std
inc
ret
bound
pop
lea
xchg
cmp
addr16
mov
inc
pop
add
xchg
xor
sbb
mov
int
sbb
int3
pop
je
popa
aam
add
jo
jb
or
jbe
push
scas
sbb
(bad)
cmp
adc
jge
mov
rol
jecxz
mov
jecxz
fsub
add
or
jl
jp
pop
xchg
test
or
test
adc
sahf
dec
dec
dec
aas
cmps
inc
xor
mov
xchg
js
mov
inc
add
lea
adc
aaa
add
mov
xlat
sbb
inc
fdiv
dec
cdq
inc
push
xchg
js
lea
and
pusha
dec
add
pop
addr16
or
cli
cld
jl
xchg
mov
sub
(bad)
cmp
lea
mov
add
jo
mov
loopne
in
push
dec
or
inc
(bad)
and
cmp
inc
add
adc
mov
mov
xchg
sub
outs
fs
xor
add
ins
ins
cmp
sub
or
sbb
inc
ins
rcr
mov
push
loopne
mov
(bad)
cmp
pop
ins
dec
sub
dec
pop
pop
inc
push
mov
aaa
push
retf
adc
cwde
jae
and
or
nop
(bad)
cld
sub
cdq
dec
loopne
mov
popf
lea
into
adc
test
or
and
cmp
add
ja
push
push
add
pop
mov
fiadd
jecxz
fidiv
jbe
xor
mov
out
test
mov
adc
(bad)
outs
xor
ins
sub
or
xor
xchg
data16
push
fadd
ins
fdivr
push
push
out
ret
test
in
fst
mov
adc
inc
sub
push
inc
or
jmp
add
in
out
pop
aad
mov
sub
push
mov
add
pop
push
mov
push
add
cmp
pop
in
popa
out
add
add
or
sbb
jnp
mov
push
test
xchg
xchg
mov
mov
add
lock
mov
clc
mov
xchg
mov
cmp
aaa
es
or
call
rcr
mov
test
sbb
sbb
mov
mov
fadd
mov
daa
rcr
jae
adc
mov
add
lods
test
movs
call
inc
add
outs
mov
test
pop
jmp
xchg
dec
jl
test
clc
sub
sub
or
push
outs
and
or
sub
(bad)
mov
push
inc
and
cs
enter
cmp
xor
mov
popa
cmp
cmp
and
inc
cmp
push
adc
sub
mov
dec
test
adc
inc
bound
mov
push
inc
push
call
fmul
push
shr
inc
imul
sub
inc
test
push
int3
and
add
enter
retf
adc
loope
enter
add
retf
or
enter
jmp
xor
inc
add
sub
and
std
push
add
les
push
dec
or
test
sbb
loopne
pop
sbb
loope
std
mov
dec
adc
inc
mov
add
cmp
lea
rol
xchg
push
and
jne
fiadd
mov
(bad)
(bad)
jmp
loopne
inc
lock
sbb
mov
popa
push
movs
test
jbe
xor
cmp
bswap
movs
xchg
sbb
test
js
or
cwde
mov
pop
test
jns
jge
and
adc
mov
adc
sbb
fsubr
das
or
adc
sbb
xor
aam
dec
rcl
inc
fadd
ret
mov
or
xchg
pop
loope
dec
jo
push
sub
jmp
pop
add
pop
loope
ret
pop
(bad)
add
mov
and
and
pop
jne
in
add
adc
clc
mov
mov
adc
add
inc
xchg
jns
mov
call
pop
jmp
(bad)
retf
inc
xor
push
xchg
xlat
mov
retf
mov
leave
xor
push
push
ss
xor
push
ss
push
or
int3
inc
and
fnsave
mov
pusha
and
jo
test
loopne
mov
or
lock
or
push
cwde
sbb
mov
cmc
dec
xor
and
fdivr
xor
je
sahf
mov
jae
je
dec
movs
push
jb
pop
jmp
fld
pushf
rcr
xchg
jbe
push
out
sub
fstp
nop
inc
sub
leave
fimul
push
call
mov
jl
fmulp
fistp
sahf
mov
xchg
fcomp
call
aam
xchg
stc
add
ret
or
push
in
aam
mov
adc
pop
xchg
mov
push
lds
mov
xchg
ja
clc
mov
jle
ss
jns
cmp
cmp
or
dec
aas
xchg
mov
iret
das
jo
mov
iret
or
mov
cmp
mov
xchg
mov
add
aas
inc
mov
pushf
and
adc
mov
mov
pop
out
sti
adc
sbb
push
xchg
popf
push
add
dec
or
push
push
add
jb
lock
inc
xchg
or
push
jo
push
test
mov
mov
into
mov
scas
sar
test
enter
xchg
iret
cmp
push
fwait
mov
add
or
sub
ror
or
das
je
and
lock
pop
and
lock
ja
(bad)
and
fmul
scas
push
lock
cmc
push
lea
movs
jmp
shr
push
mov
cmp
jmp
jno
mov
(bad)
mov
and
mov
setns
xchg
adc
test
xor
jecxz
out
sbb
add
pop
and
hlt
inc
pop
into
xchg
sub
or
adc
lods
lock
sbb
aam
lea
add
jecxz
fwait
mov
test
loope
jl
jno
pop
add
sbb
cmp
add
aas
ja
or
fbstp
cmp
test
pop
pushf
cmp
pop
cld
jp
push
inc
push
pushf
sbb
and
sub
mov
and
test
stos
ins
popf
add
in
mov
in
fwait
test
rol
(bad)
sbb
push
xor
pop
jp
adc
pop
and
clc
xor
push
mov
and
sbb
cmp
dec
fcomp
or
add
sub
enter
jo
outs
and
call
sbb
mov
jg
lahf
out
adc
mov
mov
xor
(bad)
(bad)
(bad)
cmp
mov
sub
loop
adc
push
or
lea
rcl
shr
xchg
add
ds
sub
mov
out
iret
xor
dec
push
mov
xor
or
popf
push
adc
shl
add
and
adc
xor
push
loopne
mov
ret
add
mov
call
add
(bad)
sahf
inc
fild
rol
leave
cmp
je
xlat
or
jecxz
mov
inc
jae
inc
cmp
mov
adc
push
pop
pop
adc
jmp
or
push
add
xor
or
imul
(bad)
leave
in
push
lock
shr
test
add
push
pop
ror
enter
or
push
inc
retf
lock
cmps
or
adc
cmps
int
pop
popa
cmp
scas
sbb
dec
inc
adc
xchg
jno
adc
or
pop
and
dec
add
sar
cmp
add
aad
adc
adc
or
outs
loopne
cmp
sub
push
xor
xor
out
adc
sub
or
div
scas
jb
mov
dec
add
or
pop
sbb
inc
sar
adc
push
out
pop
add
imul
(bad)
out
(bad)
push
push
and
int3
adc
out
pop
fdivr
mov
cmp
mov
bound
cmp
push
mov
adc
(bad)
jl
mov
pop
dec
loopne
jb
xchg
call
add
je
xor
fcom
into
sbb
les
inc
mov
push
cmps
xor
push
mov
push
adc
add
add
jne
shl
add
cmp
xchg
add
xor
dec
adc
sub
inc
adc
pusha
cmps
je
add
pop
xchg
push
jo
xchg
rol
mov
mov
push
cdq
out
retf
sbb
in
movs
inc
cmp
(bad)
adc
push
rol
sub
(bad)
lock
inc
sbb
inc
sub
(bad)
enter
shr
add
push
pop
cmp
js
cli
mov
mov
dec
mov
mov
je
aam
cmp
les
sbb
pop
add
add
(bad)
sbb
jmp
leave
rcl
retf
add
(bad)
jae
aaa
jg
xor
push
retf
cmp
mov
mov
call
dec
dec
cld
arpl
clts
rol
jb
add
rcr
mov
in
cmp
jl
adc
pop
or
imul
mov
ret
loopne
xchg
fidivr
(bad)
add
mov
movs
mov
push
xor
call
and
jge
xchg
fisttp
mov
and
(bad)
and
or
mov
fwait
or
aam
loop
inc
mov
fisttp
jl
xor
jne
pop
inc
mov
push
das
dec
loopne
jecxz
inc
dec
mov
add
push
jnp
or
pushf
and
dec
mov
movs
popf
add
and
ficomp
loopne
clc
or
call
loop
xchg
add
adc
push
ret
dec
loopne
mov
dec
imul
inc
pop
pop
btc
xchg
mov
fld
repz
mov
pop
or
fucomp
mov
add
test
mov
mov
dec
xchg
mov
xchg
test
fcom
xchg
sbb
dec
mov
mov
fwait
jne
ds
xor
mov
lea
push
lods
push
jbe
arpl
sub
mov
inc
pop
push
out
ror
lods
fld
popf
and
dec
mov
imul
push
aas
push
stos
push
inc
add
push
jp
xchg
mov
lahf
xor
(bad)
ret
sub
adc
mov
paddusw
push
cwde
inc
loope
or
sbb
push
mov
adc
je
xor
and
sbb
mov
(bad)
pop
ror
dec
pop
sbb
lock
clc
adc
nop
sub
lea
into
leave
pop
les
(bad)
cmps
xchg
movs
stos
push
dec
jae
add
test
not
je
test
inc
pop
ror
sub
fcom
imul
sbb
aad
xor
cmp
(bad)
(bad)
mov
jno
inc
call
mul
pop
sbb
call
xchg
xor
sti
jo
sahf
hlt
pop
push
in
and
sbb
sub
ss
sub
inc
jno
lea
push
pop
cmp
sbb
xor
add
daa
aam
inc
movs
rcl
xor
retf
or
add
mov
jl
or
cmp
dec
adc
aaa
data16
nop
test
push
or
es
in
mov
adc
icebp
jmp
cmp
push
cmps
dec
repnz
push
cmp
test
bswap
jne
push
pop
daa
dec
test
stc
repnz
out
inc
sahf
or
aad
fsubrp
enter
je
mov
inc
push
cmp
sub
hlt
cmp
add
xor
xchg
loopne
enter
test
shr
jmp
and
xchg
pop
or
and
lods
pop
mov
mov
adc
mov
and
mov
pminsw
add
cmovo
pop
dec
xchg
pop
xor
add
pop
outs
add
add
std
cli
clc
bound
add
inc
(bad)
cs
push
and
je
mov
cmps
jae
jmp
sub
jb
hlt
movs
adc
jl
fsubr
js
pop
in
pop
push
dec
inc
sbb
lock
je
or
or
adc
add
shl
retf
sub
sub
mov
xor
xor
(bad)
in
mov
or
cmp
aaa
out
imul
aam
or
in
(bad)
jge
repz
xchg
add
sub
test
in
inc
popa
add
hlt
or
clc
rcl
mov
(bad)
repnz
inc
push
mov
dec
aam
xor
inc
mov
sub
lea
mov
mov
test
pop
add
and
call
push
add
or
add
cld
jl
daa
mov
cmp
cmp
and
or
mov
push
nop
cmp
inc
js
push
sti
and
mov
mov
or
add
pop
jb
push
and
lock
and
fst
mov
dec
rcl
int
cmp
push
sub
xor
test
shl
add
jae
aas
push
mov
mov
pop
xchg
add
or
mov
push
dec
mov
mov
cdq
mov
add
xchg
outs
jge
retf
imul
into
lock
cwde
test
clc
fs
into
(bad)
sti
inc
or
adc
cmp
xchg
popf
das
push
movs
add
dec
cmp
dec
push
aam
popf
in
adc
xor
sti
xchg
out
or
or
mov
and
aas
ret
icebp
xchg
cmp
mov
or
push
cmp
or
or
sub
daa
mov
cmp
loop
dec
jp
sbb
push
ret
cdq
jo
dec
inc
jmp
loopne
clc
movs
jne
xchg
and
xor
loopne
and
ret
fmul
mov
pop
xchg
inc
sub
test
int
cmps
dec
mul
movs
pop
ins
repnz
dec
push
push
or
jno
aam
adc
xchg
pop
or
adc
xor
mov
mov
add
psubusb
sub
test
sub
inc
clc
inc
sub
push
sahf
add
adc
dec
dec
push
sub
add
add
push
or
adc
sub
mov
add
and
pop
loopne
push
dec
push
xor
and
fwait
dec
or
xchg
add
and
js
clc
dec
adc
sub
leave
add
pop
or
sbb
aad
add
mov
jnp
add
das
icebp
xchg
pop
mov
add
xor
jb
dec
scas
add
inc
ja
jg
dec
add
mov
inc
cmp
mov
xchg
add
dec
call
cmps
xlat
cmp
sub
dec
sbb
cmp
xor
lods
mov
mov
mov
push
outs
jmp
imul
inc
add
stos
xor
js
cli
xchg
add
inc
mov
and
mov
mov
inc
inc
dec
dec
jmp
fwait
pop
add
sar
dec
sub
into
sbb
popf
and
sbb
adc
add
pusha
xchg
adc
push
mov
test
mov
rol
cmp
lock
outs
add
push
imul
or
mov
adc
pusha
fidivr
lock
push
movs
icebp
sub
mov
stos
xchg
mov
in
icebp
push
jo
push
pop
add
sub
xor
pop
test
jne
mov
sbb
pop
jmp
scas
call
rol
cdq
pop
add
and
jae
add
jne
in
or
fucomip
xor
mov
scas
out
add
cdq
daa
in
adc
or
ret
inc
pop
xchg
xor
popw
mov
mov
dec
jle
add
adc
add
push
inc
dec
test
xchg
xchg
lock
inc
push
xchg
mov
pop
mov
jl
popa
add
xor
adc
adc
cmp
xor
inc
loope
icebp
push
add
mov
leave
jge
fnstenv
test
stos
rcl
jge
(bad)
push
pop
pop
es
push
add
bound
cdq
cmp
jmp
es
xor
pop
xchg
arpl
xor
mov
cmp
inc
pop
sub
add
inc
add
or
and
pop
stos
xchg
int3
les
test
pop
movs
cmp
mov
lods
mov
inc
cmp
jmp
imul
ds
add
inc
jo
test
mov
mov
div
sti
movs
(bad)
mov
cmp
jb
add
push
hlt
push
das
adc
add
push
in
fild
jne
cmp
xor
aam
aas
adc
sub
xchg
adc
xchg
retf
xor
adc
mov
hlt
adc
or
popf
pop
jmp
out
jno
int3
ins
fwait
ror
jbe
jg
fmul
fisub
(bad)
ror
sub
xchg
lock
bnd
mov
pop
mov
enter
pop
sub
enter
nop
fwait
xlat
sbb
or
mov
sar
xchg
mov
sub
sbb
lock
cmp
push
arpl
or
or
jmp
sub
cli
inc
shr
retf
rcr
test
mov
jmp
addr16
push
cmps
mov
push
add
test
adc
addr16
pop
dec
cmp
sbb
xchg
sbb
and
shl
jle
xchg
mov
fsubp
jbe
push
fadd
cmp
mov
jle
mov
in
mov
lock
push
imul
dec
neg
cmp
loopne
adc
and
cmps
push
aaa
imul
pop
mov
sub
and
adc
and
jno
hlt
mov
popa
ret
pushf
mov
add
mov
pop
add
cmp
jne
xchg
push
outs
add
out
cmps
les
xor
or
aas
sbb
dec
shl
or
int3
hlt
sub
cdq
cmc
or
mov
in
or
mov
retf
and
xor
push
dec
inc
mov
lock
jl
add
cli
pop
adc
inc
es
ret
ss
pop
push
or
rol
push
pop
fisttp
sbb
popf
xor
imul
mov
aas
or
sbb
(bad)
ss
dec
scas
adc
mov
add
fwait
adc
fdivr
dec
dec
loop
pusha
mov
aad
push
add
ss
push
sub
mov
sub
push
mov
test
shl
(bad)
push
inc
xor
cmps
pop
jb
dec
aam
cmp
cmp
fisttp
test
jns
mov
ror
and
xchg
repnz
and
movs
pop
test
mov
icebp
ss
mov
lods
aam
outs
les
retf
and
dec
ins
and
or
test
push
and
mov
sbb
jns
push
mov
jmp
mov
mov
dec
or
or
dec
popf
mov
xchg
ror
imul
test
add
imul
inc
jl
cmp
je
in
pop
movs
call
dec
call
xchg
sahf
inc
push
ret
aaa
jmp
sbb
add
xchg
inc
pop
push
mov
inc
xchg
pop
push
jg
mov
and
pop
sbb
inc
pop
dec
dec
pavgb
fcomp
mov
adc
nop
(bad)
add
mov
push
(bad)
mov
hlt
push
ror
xchg
pushf
mov
or
dec
icebp
mov
and
aam
int3
inc
aaa
test
fsubr
adc
and
add
pop
and
dec
fstp
inc
or
or
sub
(bad)
push
adc
add
lahf
sub
pop
jmp
sub
loop
loope
push
sub
adc
pop
jns
add
and
scas
or
jl
test
sbb
mov
ss
and
cs
lahf
enter
jle
mov
sub
nop
mov
mov
push
and
(bad)
push
push
jo
inc
mov
or
push
shl
inc
dec
xor
cmp
dec
adc
and
cmp
push
js
cmp
in
add
or
xor
sbb
mov
sti
cdq
push
fcom
push
sbb
sub
mov
sub
cld
jne
sbb
retf
loope
xchg
push
pusha
adc
sbb
inc
mov
inc
push
sbb
enter
add
sub
rcr
(bad)
sub
and
cmp
ins
arpl
test
mov
popa
gs
imul
ins
sub
and
adc
arpl
pop
and
push
(bad)
loopne
adc
inc
retf
mov
xor
xor
push
fist
push
push
dec
stos
ficom
stos
fs
(bad)
fdiv
sbb
inc
jle
jbe
or
cdq
push
neg
sbb
sub
pop
adc
pop
(bad)
cmp
mov
or
push
xor
mov
jmp
nop
ss
fs
inc
je
dec
ror
pop
pop
out
add
mov
pop
push
mov
or
cmp
fcomp
mov
sbb
jl
xor
push
ins
cmp
push
inc
and
addps
out
ror
mov
ins
sub
scas
ret
jmp
push
mov
push
dec
cmp
mov
sub
jmp
pop
add
inc
and
or
jl
pop
lods
and
push
call
dec
cmp
jae
sbb
push
dec
push
xor
cdq
dec
cmovbe
dec
mov
xor
sub
cmp
jno
inc
xchg
add
into
mov
jg
lock
sbb
xor
loopne
adc
comiss
fnstsw
test
inc
(bad)
sub
pop
and
xchg
mov
or
pop
add
inc
add
nop
je
icebp
dec
lock
je
cmp
or
push
push
dec
sub
or
dec
mov
sub
inc
cmps
lahf
sub
pop
shl
pop
imul
sbb
adc
sbb
pop
leave
stc
pusha
jge
aas
test
add
cmps
add
ins
sbb
and
xor
xchg
adc
add
add
xchg
test
inc
in
push
cmp
ja
and
icebp
inc
and
aaa
movs
int3
adc
call
add
or
ds
jne
push
push
in
out
into
adc
add
add
sbb
ins
xor
mov
daa
(bad)
xchg
rcl
xchg
xchg
mov
push
adc
add
and
lea
sbb
mov
je
jmp
out
adc
adc
enter
sub
adc
jge
test
cwde
adc
sub
jo
jo
fcomi
test
inc
cmp
fadd
push
daa
hlt
and
inc
xchg
ror
aaa
jmp
sub
xchg
lock
out
or
mov
test
dec
loop
fsub
and
cdq
mov
pop
lods
fild
add
sbb
or
into
push
inc
add
push
fmul
xchg
inc
inc
clc
jle
push
xor
cmp
sub
call
call
mov
fucom
lock
lahf
add
test
adc
jbe
jmp
jae
pop
adc
fistp
iret
mov
xor
mov
cdq
mov
jg
or
jmp
ins
adc
dec
js
stos
mov
aaa
movs
je
push
cdq
xor
pop
mov
dec
and
and
test
xor
add
pop
cmps
adc
test
inc
scas
cmc
sub
ret
jg
mov
rcl
scas
imul
pop
cmp
mov
and
dec
push
mov
push
out
jnp
pusha
sbb
dec
ins
jne
or
push
jl
sti
ins
xlat
sbb
outs
jg
xlat
fild
(bad)
push
cli
cmp
loope
add
sbb
add
push
movs
sub
imul
es
xchg
or
xchg
sar
xchg
cmp
clc
jl
jmp
movs
xor
inc
iret
(bad)
add
adc
push
jo
aad
cs
mov
test
cli
mov
push
adc
jns
fcom
sbb
out
sbb
popf
and
push
add
mov
xor
add
stos
jb
mul
dec
outs
push
and
pusha
das
pop
adc
dec
cmps
leave
push
cs
push
sahf
lods
pushf
mov
add
cmp
lds
addr16
mov
mov
or
rcl
sub
imul
(bad)
fcmovu
fdivr
add
push
fs
ja
jmp
aam
add
rcr
pusha
(bad)
std
pop
sub
jle
(bad)
adc
addr16
add
pop
shl
cdq
jb
push
push
pop
pop
mov
popa
mov
or
jbe
add
cmp
test
imul
cdq
dec
add
inc
sub
lahf
adc
mov
or
inc
jmp
dec
or
leave
fldcw
sub
push
pop
repnz
cmp
mov
and
xor
clc
mov
mov
in
push
mov
jle
test
inc
div
adc
push
add
pop
addr16
ret
imul
test
das
imul
fwait
inc
mov
push
dec
mov
or
mov
cmp
and
cmp
adc
dec
or
stos
inc
cmps
in
mov
movs
into
icebp
add
cdq
inc
ret
lea
pop
cs
jne
xor
mov
hlt
nop
ret
pop
xor
fisub
and
mov
mov
xlat
scas
and
pusha
ret
mov
mov
or
sub
push
ins
test
stos
test
test
repz
aam
jo
out
xchg
mov
and
sbb
inc
cmp
stos
fcmovnbe
popa
and
out
add
or
mov
in
or
iret
push
or
cmp
mov
dec
add
push
sar
push
ret
gs
sahf
jb
adc
add
aaa
dec
adc
sub
test
xchg
sub
jle
sub
movs
add
mov
add
rcr
dec
xchg
jecxz
sahf
les
sub
test
ins
inc
lock
xchg
cmp
in
push
rol
or
leave
xor
push
push
mov
neg
push
pop
xchg
pop
dec
push
ret
add
out
cmp
sbb
mov
fbstp
inc
sbb
(bad)
mov
mov
add
push
mov
inc
inc
inc
mov
mov
add
jmp
sbb
ret
jmp
sub
pop
cmps
mov
and
mov
sub
shl
sub
lea
je
jmp
or
push
pushw
ficom
cs
jecxz
ret
es
xchg
pop
jo
loope
add
adc
push
mov
daa
call
pusha
out
inc
adc
inc
pop
xchg
and
fadd
aam
and
in
int3
add
jmp
mov
leave
push
(bad)
loope
push
rcl
sbb
call
nop
ins
add
adc
push
or
xchg
(bad)
sbb
scas
xchg
push
adc
push
push
loop
and
dec
xchg
fst
inc
dec
and
imul
push
movs
mov
or
in
cdq
push
shl
js
push
push
lods
dec
cmps
add
inc
sub
sub
shl
clc
pusha
dec
push
push
jle
rcl
adc
pusha
dec
or
inc
fsub
add
jle
dec
and
push
add
loop
das
and
pushf
mov
imul
jmp
shr
jmp
sbb
push
push
fsubr
cmp
sbb
mov
sbb
add
mov
add
adc
pop
dec
add
adc
loop
sub
int
xchg
pushf
rcl
pusha
or
das
push
lea
sbb
loopne
xchg
or
dec
mov
syscall
movs
xor
push
pop
xor
add
and
cmp
and
xor
aaa
cld
or
sub
push
push
outs
comiss
popf
and
inc
push
fidivr
sub
xor
xor
pushf
cmps
inc
adc
call
adc
rol
and
repz
js
sub
and
push
movs
dec
mov
add
inc
or
push
and
and
cmps
popa
imul
pop
adc
dec
or
repnz
and
or
xchg
cmp
in
movs
or
dec
iret
aam
pop
adc
inc
jecxz
les
push
aam
ss
ror
ss
sbb
and
mov
add
or
test
mov
retf
(bad)
mov
fimul
sbb
cmp
adc
push
(bad)
ds
push
and
aam
xchg
lods
jae
or
(bad)
cmps
stos
adc
mov
aaa
push
jne
dec
es
adc
xchg
iret
pushf
(bad)
in
enter
icebp
test
push
push
add
cs
xchg
leave
cmp
cmps
and
jo
cdq
sub
mov
mov
and
test
imul
mov
sub
ins
sbb
fs
add
(bad)
xor
test
pop
int
daa
(bad)
daa
sub
adc
add
and
xchg
outs
lods
cmps
or
or
jne
jge
jmp
loope
sub
mov
sub
add
or
mov
adc
(bad)
mov
cmp
cmps
mov
cmp
daa
sahf
test
add
in
pop
and
dec
mov
cmp
jo
add
xor
xor
ror
sub
aam
xchg
rcr
push
pop
xor
jl
adc
pop
inc
mov
mov
fdiv
or
or
xchg
ins
or
ds
sbb
fcomp
inc
mov
lds
jbe
and
pop
movs
mov
and
mov
adc
pop
inc
inc
mov
nop
ss
loopne
mov
add
pop
mov
out
mov
sub
addr16
jne
push
sub
and
bound
retf
ins
add
cmps
shl
into
sbb
inc
(bad)
pusha
div
xor
addr16
and
sub
mov
es
jo
sub
jecxz
call
mov
and
imul
in
call
test
mov
push
mov
sbb
movs
sti
fisub
rol
repnz
js
mov
or
mov
xchg
pop
aad
cmp
xchg
xchg
add
add
jl
add
test
jecxz
in
fisub
dec
fwait
out
(bad)
sbb
add
out
xchg
test
fmul
(bad)
shl
mov
add
add
xchg
lea
les
mov
sbb
xor
sbb
or
jns
jns
and
(bad)
push
xchg
cmp
das
and
sbb
adc
fsub
rol
push
les
cmp
add
mov
xor
addr16
sub
xor
int
xchg
fst
xor
mov
jb
fimul
mov
push
xchg
stos
or
mov
lahf
jp
jae
movs
mov
xor
and
es
jmp
add
hlt
stos
pop
ja
adc
push
jb
cwde
ins
test
movs
jl
inc
mov
pop
and
sahf
or
push
popf
ss
xor
add
syscall
adc
dec
push
mov
jl
mov
outs
shl
sbb
loopne
xchg
and
pop
stos
push
mov
rcl
push
repnz
imul
jno
ins
inc
pop
mov
pop
add
stos
loopne
jecxz
push
push
mov
dec
add
jge
out
leave
movs
sub
jecxz
scas
and
add
jl
push
dec
xor
sbb
cmps
nop
xor
(bad)
stos
mov
leave
xchg
mov
cvtpi2ps
(bad)
mov
scas
nop
retf
push
cmp
xchg
les
loop
xor
pop
cli
dec
pusha
lock
and
sbb
ss
mov
add
dec
ror
inc
cmp
lods
je
inc
add
or
retf
enter
and
mov
loopne
sub
aaa
mov
pusha
stos
jmp
inc
mov
or
push
sbb
shl
push
imul
sub
xchg
cwde
pop
and
adc
js
jo
adc
dec
mov
jmp
cmp
ss
leave
je
test
jl
and
xor
leave
jae
add
sbb
cwde
rol
cmp
ret
adc
push
or
int3
jmp
ret
lock
adc
inc
xchg
scas
adc
pop
or
lea
xchg
add
mov
mov
cmp
cwde
pop
stos
add
fdivr
adc
add
mov
test
sub
add
ins
lds
je
push
retf
add
and
adc
cmp
mov
scas
mov
mov
or
icebp
bound
(bad)
mov
jecxz
and
ror
loop
push
cmp
stc
stc
ror
add
shl
pop
out
rcl
lahf
add
in
push
jne
push
or
cmp
shl
mov
clts
jle
mov
xor
pop
sbb
scas
movs
or
or
fcos
and
sbb
fs
or
in
cmp
jecxz
dec
pushf
scas
pusha
inc
cmp
mov
mov
rcr
gs
mov
add
fs
popa
ins
or
in
jmp
cmps
pop
jp
jnp
call
cmp
mov
mov
xchg
(bad)
(bad)
sbb
mov
push
mov
ss
sbb
stos
jmp
or
pop
dec
ss
outs
sub
push
push
ret
add
xor
and
push
xchg
cmp
out
inc
inc
and
xor
js
test
test
daa
add
jne
lods
fwait
push
lods
in
loop
outs
pop
dec
popaw
dec
pop
push
movs
jnp
xor
and
and
(bad)
sti
or
and
and
(bad)
lahf
dec
pop
scas
je
xchg
rcl
jmp
or
popa
jecxz
jg
mov
sub
pop
push
mov
mov
cmp
or
test
and
jmp
clc
retf
loope
pop
push
fstp
xchg
and
jl
adc
push
fist
mov
cli
mov
sbb
mov
or
pop
cld
pop
jnp
adc
les
push
ret
jmp
cmp
inc
rcl
adc
cmp
sbb
ss
test
jne
and
test
xchg
out
sub
cmp
and
loop
or
icebp
inc
sbb
adc
pop
lods
dec
adc
lods
fs
and
dec
sub
cmps
pusha
call
inc
ror
mov
xor
cld
add
popf
or
jmp
outs
popa
jo
pop
int3
movs
jno
pop
hlt
gs
mov
push
call
and
mov
mov
bound
adc
sbb
add
scas
inc
xchg
sbb
fisubr
cmp
sbb
mov
or
push
jecxz
or
push
push
mov
add
ins
in
imul
jnp
jmp
(bad)
add
mov
adc
xor
mov
(bad)
xchg
sbb
pop
cmp
enter
dec
stos
or
inc
xchg
std
jl
push
adc
adc
fst
cmp
movs
mov
ret
les
imul
cmp
cmp
push
(bad)
ja
test
test
test
gs
jne
and
mov
inc
cmp
shl
dec
inc
xchg
sar
mov
xor
or
add
cmp
pop
push
pop
push
add
pusha
(bad)
fsubr
gs
jge
sbb
sbb
xchg
push
sbb
and
sub
pusha
gs
adc
push
es
rol
push
test
jno
xor
or
xchg
shl
pop
inc
shr
adc
or
sub
push
jne
push
clc
retf
or
cmc
lea
and
scas
sar
daa
jl
(bad)
adc
mov
pop
iret
lock
mov
pop
loopne
xchg
fldcw
push
mov
addr16
rol
mov
cmp
xor
les
or
xor
xor
push
out
adc
mov
and
push
pushf
xor
add
jnp
fbld
push
out
loopne
test
pop
xor
mul
mov
je
push
pusha
jne
add
dec
imul
xchg
jmp
cdq
pusha
sub
push
rcl
(bad)
neg
ins
mov
fs
lods
sbb
je
jle
dec
mov
aam
push
sbb
and
daa
jo
add
push
scas
mov
jge
popa
add
cmp
call
xchg
adc
cmps
(bad)
mov
jmp
aas
or
cmp
push
pop
idiv
xlat
push
jge
sbb
ret
adc
jecxz
test
inc
add
jp
adc
xchg
test
mov
xchg
adc
rcl
dec
mov
movs
mov
mov
es
mov
inc
mov
rol
xor
ror
test
pop
int
push
sbb
ins
add
mul
or
cmp
jae
(bad)
mov
cwde
cmp
test
sub
xor
loope
adc
retf
call
lock
add
xchg
aas
aaa
loopne
sbb
jg
mov
dec
sbb
jmp
cmp
adc
or
jg
pop
in
jnp
jl
loope
pop
push
fstp
pop
pop
xchg
add
outs
dec
ror
cmc
xchg
inc
fcom
iret
add
dec
fsubr
add
push
inc
cmp
nop
pop
dec
pop
push
shl
add
int
or
mov
xchg
jne
mov
shl
dec
mov
sub
mov
and
je
cmp
sar
mov
sbb
clc
jbe
jp
push
adc
sub
jns
daa
mov
ret
pop
sbb
outs
and
and
or
loop
ror
les
jns
xchg
cmp
mov
inc
jg
jns
push
mov
jns
sub
xchg
push
xchg
add
dec
sbb
fbld
int
push
mov
inc
mov
sub
push
and
sub
dec
fisttp
adc
das
add
aam
jne
pop
and
lods
les
retf
imul
mov
sbb
inc
or
daa
popa
cwde
dec
push
mov
inc
inc
inc
or
aam
jae
xor
rol
jmp
sub
push
ds
repnz
leave
test
or
sahf
push
jecxz
test
mov
movs
out
sahf
mov
mov
(bad)
pop
dec
and
shl
mov
xor
retf
or
fmul
push
(bad)
ins
dec
add
and
xchg
cmp
loop
ret
bound
shl
mov
and
ffreep
push
or
(bad)
and
lock
mov
jl
js
int
adc
add
movs
push
cmp
xchg
pop
pop
dec
sbb
cmp
mov
enter
mov
adc
fs
xor
enter
in
ins
push
cmp
push
pop
xchg
dec
dec
jb
loopne
aas
sbb
mov
and
bound
sbb
lock
add
jo
fs
sub
xor
in
cmp
mov
sub
xchg
pop
pushf
pop
add
push
rol
aaa
out
or
mov
pop
cmps
xor
in
jle
call
ficomp
gs
out
xor
xchg
loopne
xchg
mov
jb
dec
cs
cwde
add
adc
sti
push
(bad)
jecxz
and
or
pop
mov
xor
enter
jnp
sbb
jno
test
mov
movs
push
imul
push
into
dec
adc
xor
ret
jnp
cdq
nop
xchg
push
jo
jns
adc
adc
add
imul
push
test
les
lods
cmps
ins
cdq
or
popa
add
inc
mov
andnps
dec
or
adc
push
cmp
add
push
je
jge
or
push
xchg
out
pop
or
or
add
sbb
lds
loopne
iret
out
jge
leave
cmp
jbe
dec
clc
or
xor
and
imul
sbb
mov
mov
cmp
cmp
cmp
movs
pusha
add
xchg
addr16
ror
sub
stos
xor
xchg
jg
push
push
push
rcl
shl
mov
xor
xchg
push
pop
daa
inc
jb
xchg
push
jbe
and
in
pop
mov
movs
pop
aaa
stc
pop
cli
test
and
cmp
or
clc
imul
arpl
jnp
lods
cmp
js
jnp
mov
mov
hlt
inc
or
pusha
gs
mov
fild
das
fs
add
fcmovnb
add
retf
xchg
jge
in
push
lahf
rol
jle
xchg
call
add
aad
inc
sbb
ja
je
shl
push
inc
and
aaa
js
mov
xor
loope
adc
mov
out
lock
imul
iret
and
setg
push
push
bound
movs
jp
aaa
sub
mov
add
sub
les
cvtdq2ps
rcr
(bad)
ja
push
pop
bound
cld
jne
jb
rcr
jecxz
rcl
fsub
pop
mov
push
outs
(bad)
xor
les
pop
leave
popf
fs
jle
add
cmps
sbb
sbb
add
pusha
dec
mov
nop
dec
(bad)
popa
or
daa
jmp
jbe
call
shl
add
push
or
cdq
movs
or
jge
and
mov
xor
dec
add
mov
xchg
enter
jo
les
inc
xchg
mov
and
mov
xchg
je
dec
jno
add
cmp
push
xor
inc
loope
xchg
out
dec
or
xlat
sar
data16
test
test
js
jmp
ror
mov
dec
sbb
retf
pop
mov
xor
lods
sbb
nop
retf
leave
mov
pop
jno
pop
push
or
ret
mov
dec
sahf
(bad)
jmp
xor
push
scas
pop
dec
add
push
push
(bad)
mov
push
mov
call
inc
nop
and
clc
stos
sbb
sahf
fwait
ds
cmp
iret
or
jnp
ss
sti
test
adc
scas
cmp
add
nop
dec
cmp
jmp
inc
and
push
mov
out
xchg
adc
mov
test
mov
(bad)
xlat
xor
(bad)
iret
je
xchg
outs
or
adc
repnz
jno
loopne
sub
push
xchg
mov
rol
mov
sbb
or
iret
or
cmp
arpl
mov
lods
add
scas
lods
outs
jg
mov
repnz
push
loope
mov
test
sbb
pop
ret
nop
ja
mov
mov
add
in
in
nop
lods
popa
push
sub
adc
lock
fs
mov
xchg
push
inc
test
push
cmp
add
push
fistp
or
pop
pop
repz
sahf
ret
pop
or
adc
push
jne
enter
ror
test
push
enter
xor
add
outs
xchg
jne
cmp
bound
push
test
sbb
pop
test
xchg
push
outs
sub
es
mov
xor
mov
and
push
push
adc
push
add
sub
push
js
lock
nop
or
ins
in
xchg
movs
nop
sbb
paddusb
js
mov
pop
or
and
mov
xchg
cmp
repnz
or
pusha
sbb
js
xor
inc
fist
stos
or
lea
adc
xor
mov
ja
outs
imul
cmc
test
inc
ss
or
(bad)
add
jne
fcomip
mov
inc
shl
out
cmp
xchg
add
dec
cwde
imul
dec
sub
movs
jo
cmp
mov
test
je
inc
adc
hlt
add
mov
cmps
xchg
pop
xchg
rcr
sub
mov
cwde
add
cmp
jb
inc
xor
xor
leave
pushf
dec
test
add
in
pop
jne
mov
or
cld
scas
or
add
shl
sub
pop
les
mov
sbb
call
add
into
retf
dec
stos
push
je
pop
or
inc
cwde
xchg
pushf
xlat
mov
(bad)
push
int3
push
and
(bad)
ins
ret
enter
mov
jns
(bad)
and
sbb
das
pusha
hlt
push
in
(bad)
test
and
test
and
sbb
cmps
push
les
mov
sbb
inc
add
jne
je
es
push
sub
and
xchg
push
mov
sub
mov
mov
nop
add
add
pusha
mov
test
push
enter
retf
mov
gs
or
inc
call
ret
inc
and
ins
stc
sti
icebp
push
and
xor
xchg
pushf
jg
fs
push
dec
pop
pop
call
pop
jne
add
inc
xor
lahf
call
jmp
pop
retf
or
lea
movs
adc
adc
mov
and
movs
ja
test
loope
cwde
leave
adc
xchg
dec
add
test
rcr
adc
xor
test
xchg
sub
adc
pop
retf
or
lds
pop
mov
movs
push
inc
loope
mov
call
retf
and
and
inc
pusha
sub
mov
jecxz
(bad)
pop
xor
add
mov
cmp
(bad)
xchg
mov
add
movs
xchg
fwait
adc
pminub
add
cdq
ror
inc
jne
fidivr
mov
or
pushf
pusha
shr
neg
call
cmp
cli
mov
jg
les
or
je
pop
push
pop
push
aad
fisttp
les
movs
dec
cli
adc
adc
pushf
iret
and
jns
ret
sub
fisub
sbb
and
sbb
mov
or
cmps
test
cmp
lock
mov
repnz
fidivr
ror
cli
mov
mov
inc
or
push
test
inc
cmp
lea
je
invd
mul
or
fadd
sub
xor
cdq
xchg
pop
jns
xor
aaa
stc
sbb
out
sub
pop
add
dec
cld
sub
or
lock
mov
mov
addr16
cwde
ins
and
jnp
test
sub
enter
retf
cld
mov
xor
xchg
inc
mov
push
movs
outs
xchg
and
test
bound
cmp
in
mov
ret
sahf
lock
cs
loopne
sahf
xchg
push
sbb
inc
pop
adc
(bad)
mov
dec
clc
and
(bad)
or
pop
les
add
mov
add
or
outs
hlt
jnp
mov
mov
rol
sub
inc
adc
mov
mov
xchg
ror
popw
mov
pop
test
test
xchg
jb
sti
sub
shufps
aam
fld
sbb
xchg
test
fimul
jge
mov
(bad)
push
adc
jno
mov
inc
xor
push
lea
push
popa
mov
push
pop
xor
add
fisttp
clc
pop
mov
sbb
adc
int
std
add
pop
and
mov
mov
js
lahf
jne
and
call
push
adc
or
stos
xchg
adc
(bad)
and
or
or
pop
sldt
push
fld
inc
arpl
dec
pusha
push
dec
cmps
mov
and
cmp
fcmovne
sub
pusha
inc
sub
adc
adc
and
pop
inc
and
inc
sub
adc
shr
push
lahf
mov
lods
mov
hlt
jmp
add
add
pop
jns
cli
jbe
sbb
inc
dec
add
or
lea
push
loop
mov
inc
push
mov
xchg
adc
nop
xchg
scas
push
push
fisub
fld1
mov
test
xor
fist
or
cmps
add
xor
or
mov
ffree
js
sahf
jnp
clc
pop
dec
or
sub
aaa
xor
sbb
js
jne
fs
xchg
xor
xor
inc
mov
sbb
rcl
dec
lock
js
(bad)
ror
popa
push
repnz
imul
add
mov
pop
adc
or
inc
or
or
push
fcom
xchg
mov
cld
adc
mov
call
mov
aas
sub
mov
adc
adc
ret
pop
out
outs
and
xor
sub
jecxz
rol
push
retf
mov
les
jne
push
aam
mov
fcomp
aaa
add
pop
loopne
test
sbb
loopne
adc
pop
adc
mov
das
jnp
movs
(bad)
cmp
cmp
movs
sbb
enter
dec
cli
and
mov
add
pop
add
push
pop
leave
es
mov
call
sub
gs
jp
inc
pushf
fimul
fs
add
sar
or
sbb
or
pop
cmps
(bad)
aam
into
sub
leave
stos
jo
and
mov
add
mov
push
fdiv
inc
mov
es
lds
or
add
jge
adc
cwde
sub
mov
and
push
or
xor
inc
adc
pop
and
mov
jbe
jmp
jmp
inc
mov
cs
or
shr
pop
or
or
add
outs
mov
mov
loopne
xor
inc
pop
repnz
pop
or
jae
sbb
adc
sub
pop
bound
(bad)
call
add
sbb
dec
dec
ret
dec
lock
cmp
pop
dec
mov
repnz
lock
test
xchg
inc
dec
imul
xor
in
jo
push
and
add
nop
mov
sub
and
jl
inc
xor
adc
shl
mov
arpl
pop
mov
in
cwde
test
enter
sub
xor
jmp
mov
or
retf
and
aaa
dec
jmp
dec
push
mov
popf
push
add
push
push
mov
push
xchg
out
mov
fcomp
adc
xchg
mov
cli
xchg
inc
xlat
mov
cmp
jbe
mov
or
sbb
cdq
imul
ins
or
movs
lods
popf
add
int
push
pop
ja
lods
pop
dec
push
mov
mov
xor
movs
rol
lods
mov
(bad)
call
aam
mov
aad
in
iret
lods
xchg
mov
test
or
mov
add
movs
(bad)
mov
xor
out
pop
sbb
sar
ret
mov
sahf
jl
jbe
mov
jno
test
sbb
push
mov
mov
jo
retf
pusha
mov
or
mov
pop
adc
popa
jmp
std
std
dec
call
cwde
xrelease
mov
pop
sub
loopne
test
clc
cmp
arpl
push
jnp
in
add
jge
int
or
and
mov
bswap
mov
inc
jmp
add
pop
xor
sbb
jle
(bad)
jmp
pop
imul
push
xchg
cli
sub
mov
arpl
pop
add
xchg
clc
xchg
push
and
jo
or
loop
ret
inc
leave
pop
pop
inc
xor
cli
push
and
add
addr16
ret
xchg
jo
lds
sbb
enter
push
add
retf
xchg
retf
loopne
add
pop
xchg
retf
clc
or
push
push
js
pusha
loope
or
ja
pop
adc
xabort
pushf
mov
retf
movs
test
mov
mov
idiv
enter
and
add
les
rcl
or
sbb
pop
gs
or
scas
mov
or
mov
ins
jo
add
in
jl
ds
jne
shr
enter
xlat
lods
test
shl
mov
mov
int
shl
pop
mov
mov
xchg
and
inc
push
dec
pop
mov
pop
push
mov
xchg
pop
sbb
dec
xchg
dec
cmpxchg
pop
std
push
push
cmp
inc
mov
pop
or
sub
stos
retf
jo
or
stc
das
sahf
xchg
sub
popf
ret
mov
add
mov
and
test
fisttp
cs
add
mov
or
adc
fcomip
jge
sbb
or
sbb
mov
cs
dec
rol
mov
in
inc
or
pushf
mov
jle
pop
push
or
xchg
out
shr
sub
fs
sub
das
iret
aam
add
inc
jl
add
dec
lods
push
add
dec
stc
add
sub
add
adc
pop
adc
or
movs
cmp
and
adc
in
ret
xor
pop
sbb
nop
pop
ret
adc
push
and
aam
or
and
sbb
fiadd
sar
enter
dec
and
push
xchg
mov
sub
loop
push
push
sub
inc
add
or
pop
dec
loopne
stc
sbb
mov
or
lods
push
adc
in
stc
pop
jno
test
test
lock
sti
movs
bound
push
je
inc
or
cmp
test
nop
sbb
jnp
jl
enter
mov
or
mov
or
sub
pop
jle
lahf
pusha
mov
fs
mov
rol
push
call
aas
mov
aaa
adc
xor
mov
ds
into
sub
nop
jno
movs
int3
inc
pop
jmp
pop
in
pop
push
popf
inc
jno
cwde
push
xor
sub
fucomi
rol
jne
imul
lods
push
cmp
call
add
rol
xlat
test
mov
or
cli
pmaddwd
fidivr
jo
push
xor
ins
sbb
fdiv
sbb
adc
xchg
add
cmps
sbb
push
jbe
sbb
push
enter
adc
cmc
or
push
push
js
lea
dec
mov
dec
pop
ror
lock
pop
and
pop
(bad)
retf
adc
mov
jb
and
sub
pop
jge
or
fmul
fnsetpm(287
xor
xor
jne
push
pop
inc
pop
push
in
lods
mov
push
adc
add
inc
fldcw
lea
xchg
mov
xchg
push
adc
in
ret
sub
sahf
pop
sbb
push
test
sub
fwait
jmp
ret
push
outs
jle
sbb
mov
adc
adc
inc
test
or
ror
dec
int
adc
cmp
arpl
sub
loopne
lock
popf
xchg
pop
xchg
jne
ret
test
leave
dec
pop
fwait
aam
add
jno
or
imul
or
movs
clc
jmp
mov
dec
dec
inc
mov
push
mov
add
mov
and
mov
push
sub
iret
and
xchg
adc
cmp
push
jmp
mov
hlt
fs
movs
and
mov
aad
or
fcmovnb
call
sub
out
sahf
mov
leave
loop
sub
aaa
cmp
jne
add
add
hlt
mov
nop
je
lods
arpl
sbb
adc
imul
sbb
cdq
xchg
pusha
dec
test
sub
jmp
push
iret
add
or
pop
push
mov
cmc
or
mov
stos
cmp
mov
inc
outs
sbb
call
bound
(bad)
loop
mov
push
fiadd
jno
add
mov
push
jno
inc
add
xchg
je
inc
or
push
(bad)
mov
(bad)
cmp
cmc
sbb
jo
bound
mov
shr
inc
cmps
dec
lods
and
and
dec
add
xchg
inc
mov
mov
hlt
repnz
pop
cmp
xor
icebp
add
xor
pop
pop
(bad)
and
leave
std
fmul
cmp
and
pmuludq
pop
ret
int3
mov
pop
mov
xchg
or
add
sbb
jg
and
fild
btr
push
pop
out
and
push
xor
add
jnp
mov
je
inc
dec
das
xor
pop
jl
pop
push
lahf
cmp
dec
sbb
adc
jns
out
repz
sbb
mov
lock
jge
addr16
cmp
retf
jbe
fadd
sub
inc
ins
add
or
jmp
and
mov
push
sbb
cmp
inc
dec
hlt
xor
push
dec
mov
(bad)
fwait
sub
mov
jmp
ds
sub
mov
pop
mov
add
nop
mov
ret
(bad)
fisttp
fld
popf
sub
xchg
dec
add
loopne
int
shl
sbb
cmp
dec
sub
rcr
inc
inc
dec
nop
adc
xchg
jns
inc
mov
lock
fcomp
sbb
fmul
pop
fdivr
test
mov
sbb
add
sub
ss
xor
jmp
push
nop
mov
push
mov
mov
aad
mov
cdq
jb
sub
push
mov
cwde
push
pop
aaa
sbb
dec
adc
and
jp
mov
rcl
jbe
popa
xchg
(bad)
dec
bound
ret
mov
adc
fbstp
sub
(bad)
repz
(bad)
and
push
add
cmp
dec
fsub
sbb
jecxz
fadd
aaa
ins
add
ret
or
rcr
dec
jb
or
rcl
out
sub
test
dec
dec
or
or
(bad)
call
push
cli
dec
cmp
iret
adc
add
xlat
mov
repnz
test
in
jne
push
mov
cmp
int
adc
jbe
or
shl
add
xor
aas
nop
rol
cmps
and
bound
adc
pop
ds
leave
cwde
ret
icebp
je
push
sub
jmp
inc
mov
lea
daa
add
and
or
cmp
ret
adc
pop
cs
push
push
add
vmaxsd
rcr
jb
sub
cld
jns
ret
xchg
clc
ror
test
imul
or
jne
inc
cmp
or
push
popa
jmp
lock
nop
inc
popf
mov
out
xor
pop
mov
inc
fld
or
sub
popa
sub
sub
xor
in
push
call
data16
js
sub
adc
outs
loopne
sbb
fisubr
adc
cmovno
rol
and
or
cmp
push
cmp
jl
imul
pop
dec
pop
and
jb
mov
loope
shl
and
and
pop
popa
push
(bad)
call
pop
loope
movs
mov
or
out
iret
xchg
add
xchg
sbb
mov
mov
and
imul
xor
push
popf
jmp
stos
inc
scas
pop
je
je
mov
add
jno
(bad)
das
ret
and
jl
mov
inc
add
mov
shl
fidiv
push
dec
mov
movs
mov
push
ret
lods
jmp
push
mov
mov
pusha
lahf
fs
clc
movs
jno
enter
sbb
sub
jmp
mov
add
sub
je
cmp
ret
xchg
dec
cmp
ss
xchg
movs
cmp
mov
je
xchg
cmps
cmp
inc
pop
inc
cmp
or
jbe
xor
add
or
and
xchg
pop
cmp
push
jbe
push
movs
popf
push
into
push
lds
cmps
pop
out
cmps
jle
mov
stos
cvtpi2ps
rol
or
add
movs
stos
mov
mov
xchg
sbb
pop
std
inc
sbb
pop
push
push
adc
rcr
repz
adc
and
cmps
add
or
xor
les
adc
add
mov
xor
je
push
or
cli
xor
mov
test
inc
add
xchg
pop
ror
and
inc
cmp
add
inc
clc
in
les
fwait
cwde
lahf
mov
(bad)
jge
sub
jp
rol
pop
or
sbb
sub
sbb
or
and
scas
icebp
mov
pop
pop
mov
lds
push
lds
push
or
add
shl
inc
jecxz
les
push
js
pop
inc
or
sub
movs
les
jge
lods
mov
jno
shr
and
shl
ds
add
mov
je
test
or
nop
rcr
and
aas
rol
out
xor
adc
mov
adc
mov
inc
sub
(bad)
aad
jg
sbb
xor
mov
mov
push
ins
pop
adc
shl
clc
or
sbb
(bad)
or
imul
push
sbb
ins
repz
mov
jae
xchg
dec
mov
sub
sbb
mov
push
xchg
lods
mov
test
add
stc
cdq
nop
imul
adc
mov
inc
sub
je
mov
jnp
imul
sbb
stos
ins
fstp
sbb
dec
and
push
or
ja
lea
mov
sub
push
les
adc
imul
pop
xor
push
or
jp
cmp
add
sbb
add
es
fsub
add
and
inc
push
lods
mov
mov
shl
push
inc
jp
ror
fisttp
cmp
xchg
sbb
lock
pusha
pop
sar
xor
push
inc
push
(bad)
scas
inc
je
retf
push
(bad)
xchg
int
shl
jo
daa
push
sub
inc
inc
jmp
sbb
xchg
cmp
jecxz
fmul
js
add
data16
mov
pusha
inc
push
adc
push
adc
add
gs
movs
mov
lock
fwait
inc
fstp
ror
ins
cdq
cmp
push
fs
push
adc
sub
test
std
rol
pop
mov
popa
mov
pusha
inc
xchg
jnp
mov
inc
ret
pusha
push
outs
mov
mov
dec
and
rol
daa
pop
xor
cmp
adc
and
je
cmp
jno
xchg
jp
and
pop
je
mov
mov
je
test
dec
adc
or
inc
adc
lea
cmp
nop
nop
rcr
inc
jecxz
mov
jp
aaa
pop
stos
pop
(bad)
in
nop
sub
or
sbb
and
enter
add
dec
pop
jecxz
jl
lods
int3
mov
and
dec
adc
(bad)
mov
in
les
nop
dec
fcom
jns
stos
xor
jno
add
loop
mov
clc
(bad)
xchg
aam
iret
adc
add
fstp
cmp
inc
(bad)
ja
fadd
scas
das
ud1
pop
sar
sub
add
add
and
adc
ins
mov
add
fwait
jge
xor
mov
test
ud1
xor
loope
cmc
fst
std
jns
and
pop
adc
pusha
ja
adc
sub
cs
movs
push
xchg
jecxz
sahf
lods
push
cmp
push
sbb
repz
fmul
les
jmp
and
dec
cmp
mov
enter
call
jb
cs
in
lock
shl
in
int3
aam
or
and
pop
pop
inc
arpl
mov
popa
inc
add
imul
or
add
icebp
push
out
ficomp
sbb
sahf
loopne
in
cmps
data16
push
pop
push
xchg
and
jle
cmps
push
or
rcl
push
add
or
(bad)
cvtps2pd
or
cmps
call
fild
fsubr
lods
sub
inc
sub
nop
adc
mov
mov
sub
or
mov
or
mov
ror
mov
mov
xor
jo
pushf
mov
add
pushf
add
test
loop
in
icebp
inc
daa
adc
ja
fmul
(bad)
cld
cmp
cdq
(bad)
ins
push
call
sub
je
pop
xor
mov
in
add
pop
sub
adc
jge
add
and
jle
or
mov
pop
aad
jmp
mov
nop
add
popf
and
and
push
mov
in
dec
and
outs
and
(bad)
pusha
mov
adc
inc
jbe
arpl
cmp
sbb
inc
sbb
sub
loopne
and
call
dec
and
inc
test
jmp
lahf
ret
or
(bad)
push
clc
mov
jnp
sbb
xchg
xchg
jbe
jmp
dec
fwait
and
sub
add
imul
pop
fst
pop
push
or
ret
mov
mov
cmp
test
add
pop
fcmovnbe
sub
jo
and
adc
push
mov
jno
or
xor
retf
adc
push
sbb
scas
clc
push
jp
movs
and
inc
out
adc
or
cmp
jge
push
in
xor
(bad)
loopne
push
js
imul
(bad)
fcmovbe
(bad)
jmp
lods
shl
xchg
dec
add
cmp
adc
jns
push
pop
xchg
ins
mov
dec
ins
cmp
xchg
add
dec
test
(bad)
lods
inc
adc
nop
xchg
ss
xchg
inc
cmp
fs
mov
add
adc
mov
nop
add
or
or
sub
out
mov
test
xlat
and
sub
mov
xchg
js
lods
nop
and
or
inc
fstp
and
add
xchg
sub
clc
inc
in
inc
popf
fistp
pop
sbb
add
mov
push
in
add
cmp
jp
in
jne
cmp
push
add
xchg
rcl
retf
or
cmc
mov
or
sub
mov
xor
mov
sbb
sbb
or
add
add
mov
add
ins
inc
jae
ret
aas
jg
mov
pop
retf
push
sbb
sbb
pop
push
or
lods
loopne
or
xor
mov
add
xor
hlt
test
dec
enter
je
inc
or
xchg
jns
test
jbe
fs
inc
mov
mov
mov
adc
and
cmp
mov
push
jp
push
outs
iret
scas
inc
and
sub
sbb
adc
sbb
cmp
add
mov
dec
sbb
test
inc
jg
mov
add
fldl2e
pop
ror
sbb
push
es
loope
mov
cmp
dec
test
mov
pop
xchg
mov
dec
pop
inc
adc
cmp
push
mov
sub
jo
add
gs
bound
call
or
push
add
push
outs
scas
rcl
cmc
mov
sbb
or
or
imul
loopne
add
sbb
add
out
push
pop
inc
jl
push
jle
mov
lock
mov
call
mov
or
or
xor
mov
ja
add
add
or
movs
dec
sub
mov
jne
cmp
arpl
mov
rcl
bound
adc
mov
mov
adc
or
or
rcl
lock
pop
aas
push
fidivr
cmps
movs
ins
and
mov
jne
adc
push
mov
inc
sub
lahf
ins
and
movs
lds
push
pop
pushf
sbb
hlt
jecxz
jne
push
icebp
add
add
and
and
retf
icebp
mov
mov
jp
or
inc
in
sub
sub
clc
push
lock
jge
xchg
stc
popf
shl
adc
or
call
xchg
rcr
mov
cmps
fadd
jl
fdivr
mov
pop
add
push
xor
cmp
in
pop
ret
sbb
inc
adc
btr
dec
aam
jl
out
test
cmp
and
repz
test
jo
push
(bad)
enter
xchg
mov
rcr
mov
add
add
mov
sahf
sbb
jp
jns
call
popf
icebp
bound
adc
mov
sub
or
pusha
iret
(bad)
adc
in
cmps
xchg
data16
call
or
push
inc
sbb
jmp
jecxz
push
cdq
and
ret
addr16
xchg
jo
lea
and
pop
mov
xor
adc
lea
mov
int3
rol
or
jno
pop
sti
push
mov
sub
mov
jp
arpl
lods
(bad)
add
cmp
adc
ret
pop
les
or
xor
dec
lahf
cs
setl
xlat
cmova
cmp
call
jle
not
adc
sbb
adc
mov
imul
into
inc
iret
jecxz
dec
loope
xchg
idiv
mov
adc
add
xchg
xor
mov
lods
in
pusha
sbb
nop
push
setle
imul
dec
and
add
inc
mov
imul
xor
into
add
mov
fsub
jne
or
sbb
inc
(bad)
dec
test
jp
jne
fcmovbe
dec
enter
call
(bad)
clc
fs
cmp
or
fs
les
or
jecxz
cmps
cmp
test
ins
adc
dec
aas
or
ins
adc
push
cmps
jle
xchg
mov
ins
mov
dec
outs
mov
mov
xor
dec
pusha
push
and
adc
mov
sbb
or
inc
movs
add
jo
hlt
imul
pop
mov
movs
fstp
sub
fdivr
loop
or
std
test
mov
clc
xchg
pop
in
add
mov
or
or
mov
call
cmp
and
push
pop
jb
daa
inc
out
xchg
les
xchg
pop
fiadd
add
mov
mov
lea
jo
add
loope
stc
mov
test
jmp
mov
xchg
popa
push
or
mov
sbb
fwait
push
push
jp
outs
mov
cmp
mov
addr16
dec
ins
les
dec
push
shl
loopne
lahf
cli
iret
mov
dec
in
pusha
xchg
icebp
int3
(bad)
scas
lods
jne
into
loopne
cld
fsubr
mov
je
add
cmp
bound
(bad)
loope
sub
(bad)
jl
cs
ret
loop
sub
push
xchg
mov
pop
pop
xor
xchg
inc
cmp
rcr
shl
enter
push
iret
jg
inc
les
(bad)
pushf
mov
jb
loopne
xor
cmp
loopne
adc
add
mov
ss
arpl
add
rcl
xchg
mov
mov
sub
push
test
cdq
les
push
sar
ins
(bad)
ins
xchg
and
nop
dec
repz
int3
push
int3
int3
rcr
pusha
xchg
jb
aam
rcl
retf
fild
sbb
push
jl
and
sub
dec
add
mov
xor
in
adc
rol
xor
pop
out
aam
movs
mov
jo
jp
mov
jmp
fimul
ret
jmp
push
cmp
or
test
popa
mov
jns
push
push
or
mov
xchg
fisttp
inc
mov
push
loopne
sub
xor
into
clc
xor
mov
xor
fisttp
pop
add
ds
adc
add
lock
in
sub
push
xor
cmp
add
add
sbb
bswap
movs
pop
rcl
xor
jge
add
movs
test
int3
push
cwde
mov
bound
aad
sbb
inc
popa
fwait
dec
mov
out
dec
pop
cmps
xchg
daa
adc
mov
test
mov
ror
ret
lock
stos
lock
loopne
(bad)
les
imul
push
jne
sub
xor
push
pusha
inc
jg
mov
inc
add
push
hlt
and
mov
rcl
ret
pop
sub
cmp
add
inc
ret
pop
add
inc
inc
int
add
sub
lods
or
test
xchg
jne
jae
ds
pop
sub
push
xchg
or
inc
fiadd
cmp
push
add
mov
push
push
push
sbb
pop
jne
sub
push
and
inc
and
lock
cld
cmp
jge
stc
shl
sbb
inc
cmp
shl
pop
mov
pusha
push
rcl
js
fdivr
cmp
sbb
js
loopne
pushf
add
or
pop
pop
xchg
fisttp
and
inc
dec
mov
pushf
lea
jae
fwait
sbb
cmp
pop
mov
jmp
mov
dec
inc
sbb
dec
or
pop
cmp
into
cmp
jle
and
dec
daa
cmp
jle
or
inc
lods
and
xchg
lock
push
hlt
cmp
push
out
jne
cmp
xlat
inc
or
inc
pusha
test
rol
mov
mov
or
dec
mov
mov
lods
mov
mov
or
fcom
es
xor
or
push
test
mov
call
push
jb
sbb
adc
ret
pop
std
mov
(bad)
imul
(bad)
cmps
mov
test
add
dec
push
adc
cmp
xor
mov
dec
cmps
push
adc
clc
shl
add
rcl
sar
mov
jmp
scas
pusha
add
inc
mov
aad
pushf
mov
mov
add
shl
mov
dec
in
xor
scas
inc
sub
mov
inc
add
xchg
jle
xlat
cmp
or
and
and
push
mov
inc
rol
call
rcr
in
clc
hlt
xchg
add
fsub
pop
cmp
outs
sub
pushf
and
loope
fadd
adc
push
rol
inc
mov
push
cmp
jne
test
xchg
cmp
stos
xchg
loope
cmp
int3
movs
add
pop
jl
jle
dec
dec
rcr
pop
jmp
jmp
repz
mov
dec
je
sar
ins
inc
adc
pusha
shl
cmp
(bad)
out
add
mov
inc
imul
dec
addr16
fild
or
sahf
test
and
call
sbb
jmp
pusha
pusha
pusha
inc
jl
inc
call
mov
mov
call
out
pusha
mov
or
xchg
rol
sub
ret
or
and
xchg
sub
dec
xor
jmp
imul
shr
(bad)
mov
psubd
sbb
cmp
mov
jmp
xchg
ja
sub
sbb
lea
je
jl
pop
push
js
mov
je
lods
enter
sbb
mov
idiv
je
xchg
mov
stos
dec
pusha
pop
xchg
jno
xor
jne
loopne
mov
push
sbb
cmp
ret
cmp
cmps
pop
imul
xor
add
or
dec
and
lahf
or
mov
sbb
dec
cmp
addr16
in
xchg
cmp
pop
jle
ins
xor
pop
test
addr16
mov
pop
stc
call
push
mov
das
sbb
push
push
imul
mov
sub
(bad)
jbe
sbb
loopne
in
pop
push
push
cmp
shr
mov
pop
mov
mov
pusha
xor
nop
mov
xor
movs
jge
mov
loopne
rol
inc
sbb
jo
rcl
loope
xchg
test
gs
cmp
sub
vcmpss
push
add
mov
imul
jmp
test
je
add
fdiv
cmp
mov
test
frstor
ins
popa
aas
daa
sbb
ret
shr
mov
mov
cmp
sbb
jp
add
adc
push
push
outs
add
and
cmp
cmp
scas
cmp
test
sub
iret
jp
xchg
not
pop
adc
jp
in
xor
lahf
push
leave
inc
adc
add
into
sub
dec
mov
jge
dec
pop
mov
dec
lea
dec
dec
int3
push
push
sbb
pop
div
ret
test
mov
add
cmp
cmp
mov
inc
jne
repz
add
clc
push
movs
add
cmps
xchg
dec
sbb
cmp
mov
ror
cld
sbb
sub
mov
sub
fsub
pop
test
(bad)
jge
hlt
test
repz
iret
inc
lods
and
add
cmp
test
dec
sbb
adc
int3
outs
imul
push
push
pop
les
mov
jge
ret
pop
cmps
movs
bound
lock
fwait
sbb
jnp
inc
adc
dec
pop
aas
pop
inc
dec
push
mov
push
or
push
inc
pop
or
inc
lds
mov
lods
mov
inc
pop
adc
push
jno
rol
aad
xor
cmp
dec
or
cmp
scas
add
dec
icebp
sbb
pop
adc
je
add
dec
mov
or
adc
adc
mov
and
add
xor
movs
cmp
call
call
in
out
sbb
int3
or
or
shl
cmps
mov
dec
mov
push
js
mov
push
jae
or
mov
punpckhdq
(bad)
mov
cld
xor
loopne
sbb
inc
aad
cmp
movs
fmul
mov
inc
js
cmp
xor
pop
add
les
pushf
shr
rcl
ins
cdq
cdq
mov
xchg
jg
mov
and
pop
out
xchg
xor
pop
mov
test
and
data16
and
call
xor
movs
mov
shl
push
repz
adc
pop
or
test
sbb
cmps
push
mov
pop
dec
test
push
push
nop
test
lea
in
js
add
or
mov
xlat
std
mov
add
add
inc
test
push
xchg
jno
cdq
mov
xchg
test
push
data16
sahf
xchg
fld
rcr
sub
inc
mov
mov
mov
xor
pusha
fmul
ror
cwde
adc
or
repnz
cmc
je
or
add
inc
inc
xor
jecxz
fiadd
cmp
into
fistp
mov
mov
(bad)
cwde
daa
aam
and
test
pop
lock
push
shl
push
and
xor
jmp
div
fmul
ins
jl
push
cmp
mov
push
mov
test
data16
adc
(bad)
call
mov
cmps
mov
and
inc
(bad)
sub
int
adc
xchg
mov
daa
outs
dec
mov
sbb
addr16
addr16
cs
mov
xchg
push
mov
add
ins
xor
add
ficomp
mov
div
nop
push
cdq
or
das
sub
lds
cdq
inc
popa
sub
fadd
fcom
mov
push
pusha
or
dec
sub
cdq
inc
mov
ret
pusha
and
cmps
adc
cmps
cmp
mov
js
cs
add
adc
imul
cmc
loope
mov
sbb
add
call
jecxz
or
in
dec
dec
ins
xchg
inc
test
jle
push
(bad)
outs
lods
push
movs
sub
sub
sbb
push
cmp
sub
or
push
pop
sub
popa
sbb
add
sbb
ret
dec
dec
movs
jne
adc
sub
icebp
nop
jecxz
adc
add
lds
addr16
fmul
in
or
add
push
in
loop
pop
xor
ror
loope
mov
xchg
push
mov
aaa
add
adc
push
fisub
cmp
dec
push
push
lea
ficomp
and
les
rol
pop
mov
lods
ret
std
bound
xor
mov
inc
mov
push
dec
lea
sub
or
popa
xchg
retf
xor
clc
dec
enter
nop
in
xor
adc
fimul
adc
jae
cmps
data16
adc
add
jmp
int3
inc
wbinvd
xor
dec
mov
adc
cmp
inc
xchg
lods
clc
dec
mov
test
and
xchg
fsubr
and
pushf
adc
adc
or
cld
les
xchg
nop
pop
mov
add
ins
mul
or
mov
outs
daa
in
lea
cld
aad
in
es
pushf
retf
xor
dec
sar
dec
inc
sbb
pushf
adc
enter
mov
ins
jmp
inc
or
and
push
sub
add
xor
fcom
or
add
sti
fiadd
and
and
inc
or
das
inc
jmp
xor
sub
les
push
or
mov
iret
push
iret
jne
cmc
and
sahf
fiadd
push
loop
out
xor
shld
mov
add
push
or
rcr
mov
imul
imul
cmc
mov
xchg
dec
mov
jne
mov
or
cmps
mov
add
sbb
or
sar
(bad)
push
sub
mov
jle
call
xor
mov
adc
sub
mov
add
cwde
jl
mov
aaa
fsubr
or
pop
repnz
sbb
das
sub
jle
outs
std
inc
enter
ror
dec
add
mov
cmp
jo
sub
lea
int3
mov
and
(bad)
hlt
inc
stos
jecxz
jne
cmps
loopne
dec
ret
sub
(bad)
aaa
sub
lock
(bad)
out
les
pop
pop
sar
jns
add
(bad)
and
push
sbb
and
jmp
rcr
lock
xor
push
ja
sbb
test
and
pop
mov
adc
aam
dec
add
dec
lods
and
mov
and
cmc
sbb
adc
cmp
cwde
loope
pop
mov
dec
dec
sub
jle
jne
and
and
sbb
out
jo
inc
or
(bad)
jmp
jmp
sub
xchg
inc
(bad)
(bad)
hlt
shl
repnz
fsubr
adc
call
xchg
mov
and
cmp
inc
add
and
cdq
hlt
popa
jecxz
mov
js
mov
aam
cmp
cwde
mov
adc
imul
in
or
dec
loope
xchg
and
cmp
adc
hlt
add
jae
jne
loopne
sbb
mov
movs
ins
xor
mov
inc
add
add
or
mov
pop
clc
cmps
popf
add
push
clc
stos
dec
movs
xchg
cmp
lods
lods
adc
ds
xor
lock
fnstsw
xor
ficomp
sbb
adc
and
adc
add
jne
enter
add
xor
inc
sbb
xor
jo
pop
pop
clc
test
xor
push
add
xor
xchg
xor
cmp
sub
sbb
jno
loopne
push
mov
ret
sbb
mov
push
icebp
div
or
xor
pop
xor
xor
popf
inc
add
fwait
jg
nop
sbb
adc
sub
cmp
mov
retf
xor
sbb
push
popf
add
add
icebp
mov
jne
push
mov
add
push
sbb
xchg
mov
xchg
push
add
or
push
add
push
xor
mov
jns
mov
pop
or
add
jmp
fst
cmp
jecxz
cmp
inc
xchg
or
sbb
push
lods
or
add
das
and
rcl
jmp
adc
sbb
rcr
or
sti
lods
or
inc
inc
test
jbe
add
push
sub
xor
addps
sbb
cmps
sub
push
(bad)
leave
loop
outs
push
add
call
add
dec
xor
adc
mov
adc
xor
pop
or
mov
push
lods
(bad)
adc
push
loop
les
repnz
sub
cmps
dec
xor
dec
jl
das
cwde
lea
push
imul
adc
or
and
sbb
xor
pop
or
xor
adc
cmc
dec
jns
push
cmp
clc
or
and
mov
xchg
cmp
test
adc
push
(bad)
std
test
jle
mov
or
scas
shr
and
mov
out
inc
sbb
daa
sbb
les
(bad)
shr
bound
lods
js
pop
jg
fs
das
or
or
mov
cmp
fwait
and
push
and
or
or
mov
xor
(bad)
je
and
adc
mov
mov
jp
dec
movq
push
jbe
rcl
mov
and
(bad)
cdq
jp
shl
(bad)
push
inc
aaa
xchg
jno
add
rcr
retf
es
jmp
jl
pop
add
adc
sbb
mov
or
mov
or
or
ret
dec
adc
xor
xor
iret
jle
lar
test
mov
shr
add
pop
pop
mov
cld
dec
push
push
imul
sbb
cmp
inc
or
add
cmp
clc
push
mov
cdq
pop
pop
scas
sub
mov
add
arpl
mov
inc
push
fcom
mov
xchg
pop
pop
adc
imul
mov
xor
and
dec
loopne
pushf
cdq
inc
or
pop
cs
or
mov
add
data16
push
sar
loopne
jl
(bad)
shr
mov
xchg
cwde
or
sahf
fist
mov
and
push
ret
out
cmp
test
adc
add
adc
push
gs
cmp
sbb
rcl
ret
inc
mov
fdivr
fadd
std
pop
mov
pop
arpl
daa
sbb
cs
mov
shr
jle
mov
pop
fild
jmp
movs
fdivr
popa
sbb
mov
sbb
xor
inc
xor
inc
cmp
fdivr
iret
sub
clc
retf
stos
aad
xor
cmp
jle
rcr
adc
int3
push
dec
sub
mov
loop
push
inc
mov
retf
jle
or
or
pop
imul
cmp
pop
sbb
xchg
pop
fstp
aaa
fwait
sub
xchg
iret
jle
bound
push
sbb
push
dec
aam
inc
push
sahf
sbb
in
mov
xor
cmps
add
xchg
loopne
sub
shl
push
sbb
mov
pop
add
js
sub
jno
push
js
add
xchg
jno
shl
out
bound
ds
pop
or
imul
fild
lods
sbb
call
push
adc
adc
loopne
popa
(bad)
loope
cs
enter
sahf
leave
cwde
test
inc
and
sub
push
pop
test
dec
fnsave
inc
sub
xchg
or
loope
jae
hlt
nop
ret
fisubr
cmp
xchg
rol
bound
aaa
pop
xchg
loope
inc
and
ins
das
sub
and
cmp
loope
enter
or
or
test
outs
inc
cmp
adc
and
ret
clc
inc
sub
(bad)
mov
xchg
adc
add
js
adc
out
and
add
lahf
mov
out
jle
movs
adc
or
je
dec
jne
mov
pusha
pop
cs
enter
add
clc
jmp
ds
in
jmp
je
mov
mov
test
sbb
xor
test
add
jne
or
push
mov
xor
push
add
push
push
(bad)
xchg
cs
aaa
jae
mov
sbb
inc
mov
test
daa
cmp
and
or
sub
shl
ins
mov
inc
(bad)
jl
sbb
cmp
add
and
sbb
loopne
into
push
cmp
movs
lock
lea
or
cwde
ret
pop
pop
push
shr
bound
jae
dec
(bad)
retf
rcr
sub
repz
lock
push
add
xchg
call
xor
pushf
popf
pop
jo
stos
pusha
sub
sbb
jo
jmp
cmp
or
push
mov
or
xchg
popf
fcom
push
jp
retf
in
test
cmp
jae
pop
movs
pushf
add
dec
aad
sub
jmp
adc
ds
sbb
sub
push
push
and
jo
fisubr
or
inc
outs
pusha
xor
sbb
push
pop
sub
push
pop
mov
sub
mov
mov
(bad)
add
(bad)
ror
add
sbb
pop
xchg
cdq
cdq
and
call
push
stos
aam
dec
int
push
shr
and
dec
and
inc
push
popa
pop
jbe
aad
mov
mov
dec
inc
sbb
or
mov
lods
(bad)
sti
push
xlat
outs
xchg
imul
jmp
and
shl
add
mov
fild
adc
fcom
sbb
adc
sub
fdivrp
fmul
add
or
inc
dec
push
sub
dec
loop
lock
ret
shl
sbb
ja
sar
(bad)
sub
cwde
or
fwait
int3
sbb
lea
add
daa
push
loop
add
cwde
and
mov
aaa
repnz
and
ret
adc
and
sahf
inc
shr
fs
push
lods
add
outs
aas
ins
ficomp
xor
and
jo
sbb
mov
dec
xor
cmp
or
outs
jp
add
dec
adc
imul
je
push
adc
mov
popa
std
cmps
jle
rcr
mov
pop
adc
ror
add
ror
sub
sub
and
xchg
mov
movs
cmp
mov
jge
dec
xor
test
lock
inc
mov
mov
mov
hlt
sbb
and
inc
push
push
xor
int3
pop
call
ja
mul
inc
idiv
xor
push
je
xchg
idiv
or
jbe
adc
adc
adc
loope
je
test
jecxz
cmp
aas
inc
mov
and
dec
push
pop
je
jo
or
daa
xchg
dec
and
and
fs
sbb
jge
or
or
hlt
cmp
cs
test
mov
adc
jne
push
jle
dec
mov
mov
retf
fwait
das
lods
or
sbb
and
and
xchg
and
stos
pop
out
mov
shr
shl
ret
add
mov
push
pop
mov
cmp
sub
adc
outs
mov
icebp
cdq
fcmovnu
les
and
pop
cmp
ficomp
jge
adc
and
lea
int3
adc
push
hlt
in
pop
lock
rcl
cmp
fnstsw
mov
mov
aaa
aaa
dec
cmovbe
fimul
sets
mov
add
jmp
sbb
xchg
xor
push
dec
push
adc
loopne
add
rcr
les
bound
rcl
or
shl
les
cwde
add
popw
std
enter
ins
pushf
mov
test
mov
add
add
outs
shr
sar
imul
ret
pushf
mov
daa
push
adc
push
das
sub
push
or
push
xchg
call
jle
xchg
add
add
pusha
push
xchg
add
pop
call
dec
cmp
les
shr
sub
xor
xor
not
xchg
and
push
sub
shr
lahf
scas
jo
icebp
movs
and
mov
or
pop
push
xchg
or
jo
inc
dec
call
les
imul
jecxz
adc
xor
mov
mov
test
push
test
mov
xchg
dec
xchg
test
or
jl
and
push
aaa
enter
lahf
lahf
push
ja
sbb
push
mov
es
dec
pop
out
test
xchg
inc
xlat
and
mov
xor
and
xchg
clc
lahf
leave
(bad)
shl
mov
rcr
push
test
push
xor
scas
mov
out
das
inc
sbb
and
pop
popf
clc
pop
or
lock
or
mov
jmp
jo
cmp
(bad)
mov
hlt
xor
cmp
mov
jmp
mov
add
sahf
sub
test
add
test
mov
mov
push
cs
mov
xchg
dec
test
pop
pusha
pop
sbb
inc
adc
not
xor
mov
ja
xlat
dec
adc
push
lea
leave
jp
dec
imul
cld
into
push
sub
fcomi
add
in
jb
rcl
mov
test
and
jno
test
mov
in
xor
add
or
pushf
sub
jmp
sub
dec
and
xchg
inc
mov
inc
mov
jno
adc
push
inc
rol
test
xchg
cdq
add
xchg
sub
imul
cmp
add
mov
ds
ss
rcl
jl
add
xchg
add
movs
or
clc
mov
jbe
or
test
fnstsw
sahf
jecxz
adc
cdq
xor
or
in
sub
cmp
mov
and
add
or
mov
or
movs
mov
ror
pop
xchg
mov
(bad)
xor
push
cmp
and
shr
pop
and
pop
test
add
pop
adc
push
mov
fidivr
ret
push
inc
and
inc
ret
and
mul
enter
adc
xchg
add
arpl
test
add
add
sub
ins
loopne
inc
sbb
xchg
adc
(bad)
std
loope
movs
pop
add
cmp
mov
xchg
push
les
jge
adc
mov
push
or
push
call
jecxz
xchg
adc
adc
outs
dec
mov
sbb
cmp
sbb
add
leave
add
xchg
pop
push
call
jne
int3
inc
add
xchg
aad
pop
pop
enter
add
mov
xor
push
mov
cmp
xor
cwde
les
sbb
push
jl
add
cmp
jno
cmps
cmp
dec
push
xchg
sbb
dec
movs
pushf
xor
inc
inc
xchg
cwde
daa
xchg
call
push
paddb
test
ficom
icebp
pusha
sbb
and
push
sbb
jecxz
lods
add
add
mov
sahf
add
mov
shl
jns
mov
sbb
sbb
and
sbb
call
jge
cmp
pop
imul
add
adc
jecxz
popa
inc
sbb
es
fcom
xor
mov
mov
movs
iret
call
in
add
fsub
add
into
push
int
cmp
(bad)
aam
rol
jb
enter
sub
mov
inc
xor
addr16
mov
sub
cmp
fnstsw
sbb
or
int
imul
pop
(bad)
call
push
int3
push
loopne
lahf
push
or
jecxz
ins
fsub
pop
aas
fsub
ins
sub
scas
div
xor
push
pop
mov
push
dec
je
adc
sbb
addr16
mov
sbb
sub
ret
mov
jmp
add
push
hlt
mov
mov
aaa
sub
mov
add
push
fs
cmp
mov
sahf
add
mov
and
mov
cdq
int3
dec
jb
ins
ret
sbb
xor
adc
icebp
shr
cld
dec
and
outs
cmp
xor
js
aaa
sub
lock
and
add
jo
gs
add
add
and
inc
add
mov
js
mov
loopne
add
cmp
arpl
xchg
nop
das
lods
fwait
je
xor
mov
dec
and
xor
fisub
push
inc
add
(bad)
dec
add
sub
xlat
pop
clc
or
add
add
jae
ret
cmp
lds
or
pop
mov
ins
adc
xchg
dec
xchg
xchg
data16
test
jb
jl
movs
mov
enter
retf
(bad)
ror
jecxz
or
in
in
pmuludq
nop
fist
inc
or
mov
movs
or
jb
adc
sub
fsubr
xor
adc
push
cmp
or
adc
sub
ins
xor
outs
icebp
mov
in
mov
sbb
push
bound
mov
and
adc
push
mov
adc
xchg
ins
or
xchg
mov
cmp
and
push
adc
push
lods
sbb
jb
add
test
ds
ins
rcl
push
pop
jp
ins
xchg
in
push
mov
ins
jne
test
or
or
ret
adc
js
and
adc
not
dec
je
pop
call
mov
sub
cs
stos
rol
push
or
and
fild
push
or
shl
push
in
popf
lods
push
mov
nop
sbb
scas
mov
ins
pop
sbb
mov
inc
sbb
pop
sahf
pop
sbb
leave
test
cmp
pop
push
pop
mov
sbb
test
mov
lock
and
arpl
dec
mov
jb
jo
test
mov
jge
or
mov
mov
popf
out
jae
sbb
in
and
mov
xchg
std
inc
push
adc
call
dec
ror
loopne
mov
aaa
sub
loopne
aaa
xchg
adc
add
xchg
div
test
ins
pop
inc
lea
add
inc
arpl
add
std
loope
add
int
enter
push
push
push
mov
(bad)
adc
pushf
xor
pop
int
push
int3
test
adc
(bad)
das
mov
pop
(bad)
mov
test
ins
cdq
add
dec
sub
test
test
sub
cmp
xor
inc
jmp
pop
jl
lock
mov
addr16
add
mov
ins
fs
inc
cmp
mov
push
push
mov
mov
idiv
xchg
cmps
mov
push
jl
fistp
add
inc
cld
or
jb
pop
or
loopne
adc
jae
sbb
das
scas
frstor
mov
data16
cdq
add
sbb
cmp
arpl
iret
ret
mov
ja
nop
jecxz
or
push
pop
or
(bad)
xchg
ficom
leave
xor
xchg
pusha
add
sbb
sbb
sar
mov
cwde
or
xor
pop
imul
push
es
mov
adc
call
mov
call
pop
add
push
mov
xchg
imul
and
pusha
add
pushf
lahf
add
and
pop
in
inc
test
cmps
int3
call
adc
push
mov
dec
add
dec
jp
iret
outs
mov
rcr
add
xor
scas
shl
test
jmp
leave
aaa
lock
sub
adc
das
adc
push
xor
bound
cmp
jo
imul
pop
sbb
adc
je
fxch
repnz
in
cmps
sahf
adc
call
push
dec
pop
cmp
enter
cmps
mov
xchg
dec
int
mov
mov
cmp
je
loope
sbb
jl
(bad)
and
or
adc
adc
hlt
ss
cmp
sbb
cmp
xchg
rcl
loopne
retf
adc
cmps
jmp
test
sti
inc
mov
push
push
pusha
sub
bound
sti
add
shl
clc
adc
add
push
push
test
mov
or
pop
mov
cdq
add
retf
mov
inc
add
push
cs
inc
aam
pop
popw
push
pop
retf
and
add
push
ss
imul
rcl
pop
cdq
cmc
add
pop
shl
jne
push
add
sub
or
pop
enter
add
out
ror
push
mov
add
inc
adc
adc
push
mov
imul
adc
add
cmp
jmp
sub
cmp
jno
xor
imul
imul
xor
addr16
mov
jae
dec
leave
add
or
mov
cmp
cmp
(bad)
fidiv
imul
mov
jbe
ins
cmp
lock
retf
ret
xor
or
adc
test
les
dec
pusha
mov
xchg
adc
push
pop
ror
and
pop
je
jne
sub
ret
inc
pop
sbb
in
lds
test
push
dec
dec
lods
call
mov
leave
jns
xchg
int3
jmp
mov
jle
pop
or
fidivr
mov
inc
sbb
fs
xchg
cmp
test
jae
or
movs
mov
dec
jbe
(bad)
in
jae
fisub
mov
lock
loopne
in
aam
pop
mov
aam
fcomp
jb
lock
hlt
or
xchg
dec
out
or
invd
(bad)
xor
mov
ret
mov
cmp
xchg
add
sahf
cmp
or
lahf
sti
mov
pop
add
add
in
pop
out
int3
and
or
adc
inc
cmp
or
mov
or
cmp
and
push
loope
or
test
push
adc
mov
or
les
aam
mov
scas
mov
mov
jnp
shl
or
inc
(bad)
jne
jnp
pushf
sbb
xlat
out
mov
xchg
inc
push
leave
push
imul
retf
xchg
cld
adc
popa
add
xor
inc
push
adc
jno
mov
add
add
out
add
(bad)
clc
ss
mov
das
pop
dec
leave
loop
lea
mov
sbb
push
push
jp
es
aaa
je
xor
fcom
mov
sbb
outs
mov
adc
adc
jne
das
ret
mov
test
sbb
fwait
push
mov
pop
jle
and
dec
mov
add
ror
movs
fsubr
dec
pop
jmp
loope
sbb
aam
push
sahf
sub
and
adc
ins
mov
inc
aaa
int3
sbb
mov
push
xlat
inc
dec
stos
inc
pop
xor
mov
(bad)
clc
je
leave
mov
shl
loope
daa
stos
fmul
add
fs
xor
sub
outs
loopne
addr16
jge
or
add
push
inc
nop
fisub
mov
pop
inc
lods
mov
mov
inc
ret
dec
mov
hlt
push
(bad)
nop
push
mov
(bad)
sub
retf
xlat
xchg
pop
pop
xor
lahf
retf
mov
or
dec
jne
retf
push
inc
test
(bad)
nop
ret
mov
(bad)
inc
sbb
stos
mul
call
inc
test
jecxz
cmp
xor
imul
sub
sbb
je
dec
les
mov
cli
jmp
xor
mov
ins
aam
add
jge
xchg
into
ss
mov
cmps
lea
or
xor
shl
and
jl
fcom
xor
rcr
push
or
xor
mov
sub
movs
jb
rol
outs
or
std
or
rol
push
mov
ja
adc
in
xor
cmp
std
cdq
ret
call
jl
cwde
pop
das
inc
and
aad
imul
pop
mov
mov
jge
jae
cld
ret
(bad)
and
mov
xchg
mov
sbb
xor
cmp
fwait
movs
(bad)
jnp
loope
test
jo
popa
sub
xor
ins
and
cmp
jl
and
es
dec
push
xchg
adc
inc
xchg
jnp
pusha
add
add
adc
fadd
fcmovnu
adc
mov
dec
bound
cmp
or
loopne
add
mov
stos
dec
add
inc
and
loopne
push
push
ja
or
mov
adc
fsub
(bad)
pop
int
cmp
sbb
ror
les
cmp
or
mov
and
sub
imul
and
pop
jmp
cmp
jne
aaa
clc
add
xchg
adc
dec
sbb
push
cld
mov
add
adc
imul
in
aad
pop
cmp
sub
cwde
cmp
cld
dec
inc
mov
int
mov
fstp
adc
lea
mov
xor
pop
ret
jnp
daa
mov
mov
cli
rcl
push
adc
lods
sub
xchg
ins
add
rcr
mov
pop
adc
cmp
adc
push
adc
sbb
jno
adc
push
sub
jg
xor
and
mov
pusha
leave
cmp
xor
loop
mov
je
or
sar
mov
(bad)
movs
pop
and
sbb
arpl
mov
and
in
mov
mov
fdivr
outs
gs
dec
xchg
jno
inc
iret
jns
push
sar
mov
sub
rcl
dec
shl
adc
loope
adc
mov
outs
loope
xchg
nop
xchg
add
jp
xor
push
push
cmps
jecxz
ss
out
repz
shr
mov
test
test
sub
jbe
ja
in
loopne
sbb
sub
pop
cmp
adc
fist
inc
fmul
jmp
xor
popa
cld
es
push
or
sbb
sbb
fld
mov
(bad)
jecxz
mov
adc
daa
cmp
sub
xor
adc
pop
push
stos
push
mov
add
xor
sub
movs
clc
jecxz
adc
mov
jno
pop
push
jle
cmp
cmp
mov
mov
mul
push
xor
sbb
pop
lds
inc
push
sbb
ror
into
mov
adc
mov
leave
inc
mov
test
aaa
clc
push
sub
jmp
lahf
mov
pop
push
inc
xchg
or
mov
fisttp
inc
mov
mov
sub
and
xchg
cmp
sbb
hlt
ret
shl
adc
xchg
cdq
ror
es
pop
mov
xor
gs
cmp
mov
adc
rcl
arpl
add
pop
vmwrite
push
xchg
jne
jl
adc
xlat
aam
push
popa
inc
dec
xor
xlat
mov
add
pop
sub
pop
movs
jp
cmps
shl
fst
mov
mul
in
cmp
neg
adc
sub
adc
loop
or
sub
icebp
or
mov
add
inc
adc
jnp
pop
data16
sbb
sub
or
addr16
mov
mov
(bad)
sbb
loop
xchg
xor
outs
(bad)
call
or
jmp
and
mov
or
mov
and
mov
xchg
sub
xor
inc
call
sub
movq
xchg
clc
mov
je
xor
je
jo
xchg
add
popa
enter
sub
xchg
or
aam
pop
cmp
jge
pusha
shr
and
adc
mov
pop
push
ins
pop
adc
hlt
ins
outs
xchg
push
cwde
cmp
push
mov
mov
ins
dec
shl
mov
mov
sbb
fidivr
add
or
adc
outs
sbb
repnz
jecxz
push
outs
loope
or
lods
shl
sbb
(bad)
pop
adc
push
mov
(bad)
(bad)
out
arpl
push
mov
push
pavgb
xor
or
add
pushf
inc
xchg
ja
mov
sub
movs
cmp
push
push
mov
and
push
inc
mov
mov
fdiv
(bad)
xor
mov
pop
and
pop
or
jb
sub
pop
xor
sti
imul
lea
fldcw
pusha
shr
push
add
mov
cmp
scas
xchg
popf
push
dec
add
(bad)
div
sbb
push
pop
cmp
and
xor
mov
xchg
add
xlat
jl
pop
mov
cwde
clc
icebp
adc
call
jp
test
les
std
aam
call
retf
les
cmp
shl
out
push
mov
(bad)
adc
shr
mov
mov
sbb
add
jne
cwde
or
nop
out
popa
mov
sbb
pop
dec
bound
push
inc
jl
es
fs
jns
mov
ret
push
add
das
ds
push
sub
es
fucomip
or
neg
push
mov
pop
nop
sbb
hlt
imul
xor
pushf
jmp
addr16
retf
add
lds
fbld
mov
mov
adc
or
pop
adc
pop
stos
ret
fcomp
out
mov
sbb
xor
mov
add
jo
add
adc
lods
arpl
mov
fwait
cwde
mov
xchg
cmp
(bad)
or
xchg
or
test
adc
ds
or
push
push
sbb
test
popa
in
sbb
add
push
xchg
xchg
jbe
in
or
cs
xor
sub
add
pop
or
es
and
add
lods
test
rcr
jg
jne
(bad)
xchg
stos
loopne
in
xchg
push
and
mov
jg
fs
adc
add
mov
xchg
fld
mov
ret
jl
retf
sub
icebp
cmp
(bad)
test
inc
stos
xchg
inc
cmp
mov
add
push
push
inc
push
add
out
push
mov
push
or
mov
dec
pop
adc
and
cmp
adc
sub
push
cwde
push
push
ret
fimul
push
adc
push
dec
pop
in
out
les
movs
je
mov
sbb
out
push
sbb
or
or
nop
inc
inc
nop
pop
leave
call
sbb
cmp
sub
xchg
adc
push
pop
cmp
xchg
push
sahf
mov
test
xor
jle
mov
jno
inc
pop
inc
sti
iret
sub
jb
sbb
sti
ja
cmp
cmp
add
inc
adc
add
mov
(bad)
dec
iret
and
aad
mov
xchg
lods
sub
mov
inc
leave
iret
mov
mov
test
xor
or
pusha
jg
jg
dec
xchg
clc
or
push
jmp
sub
aas
les
rcr
not
jne
test
je
push
cmp
add
stc
adc
in
add
mov
jno
and
cmpxchg
add
pop
sbb
stos
or
cmp
push
rcr
aas
jne
ftst
jne
xor
cmp
xchg
add
xor
push
fldpi
xchg
push
mov
call
push
ss
sbb
or
lock
inc
stos
cmp
aam
inc
mov
cdq
push
dec
dec
mov
jne
push
nop
cdq
dec
call
int
xor
pop
fwait
xchg
push
push
add
push
aad
loopne
or
cmp
dec
inc
iret
in
mov
outs
es
cdq
jo
test
rcr
push
ror
fwait
ds
cmp
mov
add
mov
adc
lds
sbb
inc
and
stos
rcr
sbb
add
enter
arpl
mov
ror
and
xchg
loopne
push
lea
cdq
pop
push
push
and
adc
sub
mov
sahf
or
inc
imul
fild
cs
mov
cmp
rcr
dec
cli
or
add
lods
xor
ret
sbb
and
add
cmp
inc
popa
scas
adc
fcomp
add
ror
stos
js
cmc
and
in
adc
in
or
in
es
sbb
mov
test
ret
add
or
adc
mov
cmp
xor
and
rol
push
push
cdq
icebp
movs
les
add
mov
mov
pop
inc
or
inc
mov
xor
adc
cmp
sub
mov
(bad)
cmps
dec
cld
loop
lock
int
cmp
mov
inc
xor
add
dec
xor
lock
push
les
jp
xor
lock
sub
mov
shl
repnz
icebp
nop
pusha
dec
scas
pop
add
add
and
fwait
or
scas
iret
or
repz
xor
and
mov
fdiv
mov
mov
cmps
fild
shl
pop
inc
lods
mov
aaa
jecxz
pushf
call
call
cmp
ror
mov
pop
pop
or
jg
fmul
push
cmp
rcl
mov
push
test
or
push
dec
adc
addr16
push
dec
xchg
cs
adc
sub
sar
nop
push
and
mov
or
fucomi
push
dec
mov
push
push
cmp
jge
mov
or
icebp
out
mov
push
cmp
and
inc
sbb
pop
push
inc
cs
xchg
add
mov
pusha
movs
push
cmp
ret
add
adc
lea
jge
or
jmp
push
adc
and
adc
mov
pusha
pop
jecxz
test
fmulp
add
outs
xor
sub
dec
jne
fldcw
xchg
pop
dec
xchg
cmp
cmps
mov
inc
sub
add
inc
repz
cmp
xor
and
mul
js
es
je
and
lods
sub
pop
mov
sub
push
rcr
and
retf
sbb
add
bound
sahf
mov
rcr
nop
leave
mov
sbb
xor
shr
or
call
add
dec
aas
je
cmp
ror
dec
repnz
(bad)
mov
mov
dec
rol
(bad)
cwde
add
lods
fild
nop
ror
add
ja
aam
and
jne
loope
retf
add
cmp
ins
xchg
cmp
mov
cmp
or
dec
mov
pop
dec
cmp
nop
dec
push
shl
pop
mov
dec
ror
fs
xchg
or
add
shl
dec
push
add
jne
inc
sbb
inc
or
pop
scas
dec
mov
sub
add
or
fs
mov
jne
cmp
jne
stc
pop
mov
or
not
test
nop
push
xor
dec
and
or
add
adc
add
out
inc
cmp
mov
daa
dec
loop
xchg
fcomp
pop
add
dec
es
xchg
inc
ret
mov
add
inc
inc
mov
cs
rcr
dec
dec
mov
mov
and
cmp
jecxz
(bad)
adc
scas
add
or
push
in
adc
pop
jb
js
xchg
popa
xchg
mov
push
inc
loop
movs
ins
or
sbb
jmp
pop
add
test
(bad)
cmp
mov
out
add
mov
retf
jmp
shr
jge
aas
pusha
mov
mov
push
(bad)
sub
ret
shl
cs
jp
enter
or
movs
inc
sbb
dec
ror
lea
dec
mov
jae
sbb
mov
f2xm1
jl
test
xor
dec
jg
add
mov
pop
je
and
iret
sub
add
leave
inc
jnp
sub
fnstcw
and
or
jbe
bound
or
or
movs
xor
mov
dec
fcomp
jecxz
call
mov
mov
call
cmc
lock
ror
(bad)
mov
inc
and
shr
imul
xchg
xchg
mov
xor
daa
loopne
mov
cli
add
sbb
mov
add
or
inc
mov
enter
rol
jbe
push
js
sbb
inc
push
inc
sbb
into
add
add
dec
scas
nop
popf
inc
sbb
push
retf
adc
dec
or
sbb
ret
xor
or
adc
dec
push
movs
test
cmpps
cmp
imul
je
ss
cwde
fdivr
push
enter
push
cmp
dec
ror
push
xor
or
ins
aad
ja
and
dec
jo
popf
mov
fistp
frstor
jl
int
jmp
fstp
stos
movs
add
fidiv
inc
pop
dec
mov
xor
mov
cmp
sbb
fild
(bad)
pusha
sbb
add
mov
sub
sub
xchg
pusha
push
cmp
pop
push
jge
cmp
outs
mov
(bad)
mov
dec
pop
pop
xor
aaa
neg
mov
lods
push
cwde
inc
lds
popa
push
loop
pop
mov
inc
cs
push
cmp
jnp
push
jl
cs
sub
xor
inc
loop
in
add
pop
xchg
dec
sbb
push
cmp
dec
fxch
jb
jnp
inc
push
sbb
ins
push
mov
js
mov
movs
cmp
inc
shr
into
adc
mov
add
dec
dec
pop
dec
or
xor
sbb
inc
stos
js
inc
cmp
lock
dec
in
and
inc
xor
add
jmp
mov
or
inc
or
js
rcl
scas
retf
loop
neg
cmps
popf
dec
xchg
sbb
loop
inc
add
gs
push
int
xchg
(bad)
shr
xor
fstp
dec
jl
daa
fnstcw
inc
cdq
imul
shr
ins
mov
jnp
lea
and
fcom
jns
stos
pop
adc
rol
sbb
push
push
adc
aaa
jge
push
adc
es
add
dec
pushf
(bad)
push
movs
icebp
jmp
mov
jo
mov
in
mov
sbb
ror
inc
xor
lock
imul
inc
or
test
movs
or
pop
in
ss
std
pop
sub
imul
(bad)
dec
sub
fwait
inc
repz
push
push
xchg
mov
gs
in
daa
xor
add
cmp
movs
imul
push
ror
sti
mov
jmp
pop
fldcw
and
inc
imul
pcmpeqd
jecxz
or
repnz
retf
or
in
movs
lock
push
int3
xchg
mov
call
cwde
inc
sbb
loope
test
dec
jp
push
sbb
add
shl
in
adc
mov
dec
and
in
cmp
push
jmp
int
mov
adc
bnd
and
adc
mov
jae
shl
and
dec
push
fwait
or
and
mov
sub
pusha
sbb
sti
pop
bound
add
mov
jo
adc
lods
jge
sub
push
dec
loope
sti
dec
cmc
mov
mov
gs
mov
cmc
add
add
push
push
rcr
jle
add
add
ret
inc
(bad)
jge
call
cs
test
adc
jbe
cld
xchg
add
pop
adc
jmp
fisub
es
ds
sub
push
sub
call
push
or
or
sahf
pop
push
pop
jns
push
jle
cmp
sub
jge
iret
pop
test
adc
rcr
sub
fimul
dec
imul
push
and
ret
push
sbb
sbb
sbb
stos
nop
mov
pop
fs
rcl
test
shl
add
add
inc
inc
stc
adc
xchg
and
adc
or
dec
js
jecxz
xchg
into
push
sbb
jmp
or
fiadd
or
mov
push
outs
cmps
push
cmp
movs
cmc
sbb
cmp
imul
dec
(bad)
shl
mov
fidivr
fmul
ds
pop
sub
jbe
add
jb
sbb
ja
js
rcl
enter
in
xor
mov
sbb
add
mov
push
xchg
add
push
inc
call
test
pusha
or
enter
nop
retf
inc
push
push
add
popf
ret
add
fidivr
aas
sub
cli
dec
sbb
outs
lea
xchg
jmp
xor
aaa
push
or
bound
sbb
sub
imul
rol
test
push
jle
dec
retf
and
shl
and
push
ss
adc
in
cld
mov
or
push
movs
mov
(bad)
xor
call
(bad)
pop
pushf
dec
and
pop
jae
es
cwde
and
pop
leave
pop
mov
sbb
sbb
pop
shr
mov
mov
mov
add
xchg
inc
int
xchg
retf
ins
cdq
in
xchg
push
sar
sbb
test
inc
call
fld
cmovno
or
sbb
fs
or
loopne
mov
ret
and
and
pop
ja
push
mov
and
push
add
cmp
out
call
sbb
test
pop
mov
retf
cmp
sbb
jo
(bad)
add
cwde
push
or
xor
jo
push
cmc
or
ds
push
mov
push
and
sub
add
cld
and
jne
imul
pusha
or
push
lea
ins
inc
xor
and
dec
arpl
mov
add
(bad)
pop
pop
fst
ja
sub
cld
jae
rol
mov
cmp
(bad)
xor
mov
or
push
xchg
mov
add
dec
cmp
ror
adc
cwde
add
in
pop
jl
mov
mov
mov
inc
sbb
xor
add
sub
lods
cli
jg
jmp
ror
sub
xor
mov
scas
push
inc
popa
repz
adc
inc
popa
retf
fiadd
xor
xchg
aad
cmps
aam
call
pop
mov
jo
ss
xor
mov
dec
add
push
mov
adc
pop
and
mov
add
dec
mov
pop
lds
adc
mov
stc
stos
push
(bad)
movs
adc
and
push
push
add
adc
mov
inc
xor
pop
hlt
or
in
adc
sub
bound
inc
or
and
inc
inc
inc
add
sub
push
ja
jmp
dec
sub
stc
xor
pop
sbb
pop
xchg
sub
stos
and
fimul
mov
sbb
or
lods
lods
push
and
es
adc
ins
mov
ja
add
push
add
jmp
or
retf
jne
push
cli
outs
push
(bad)
test
rcl
pop
cmps
wrmsr
jge
push
mov
mov
or
fadd
in
push
mov
std
adc
push
lea
inc
mov
xor
ret
xchg
cmps
push
pusha
imul
jae
and
fiadd
jne
push
xlat
pop
jnp
std
inc
xchg
fstp
xor
add
inc
fwait
dec
jecxz
xlat
mov
ss
jle
into
lds
jne
mov
mov
push
lods
xlat
xor
shl
xchg
adc
push
add
push
adc
sti
add
mov
sbb
cwde
loopne
mov
inc
(bad)
push
nop
and
ja
cli
sub
(bad)
lea
and
aas
pop
or
outs
mul
leave
add
sbb
jno
in
dec
or
stos
lea
xlat
shl
adc
pop
jge
add
mov
mov
and
lods
js
xchg
shl
jmp
fidiv
out
xchg
or
neg
neg
addr16
xchg
jno
pushf
leave
movs
cmp
sub
and
sar
inc
movs
enter
movs
dec
push
mov
add
sbb
mov
lea
and
push
inc
xor
mov
loope
je
jl
sbb
xchg
mov
add
movs
and
icebp
dec
loope
loop
nop
inc
ror
loopne
or
adc
xchg
fs
sbb
adc
sub
push
(bad)
out
fsubr
jo
add
xchg
mov
fcom
in
arpl
sti
sbb
test
xor
js
in
ins
aam
lods
sbb
inc
hlt
out
and
mov
sub
add
xchg
sub
add
cmp
cwde
ins
xchg
inc
add
xor
mov
sub
inc
mov
(bad)
shl
repnz
and
add
mov
lea
jb
js
fmul
pop
jo
gs
adc
jmp
push
ds
test
(bad)
popf
fcmove
inc
pop
push
mov
xor
loopne
cmp
fadd
movs
fsubr
xchg
dec
js
inc
mov
cmp
jo
add
inc
jle
push
(bad)
cmps
ror
dec
cwde
xor
lea
adc
lock
push
push
mov
cs
cmp
and
sub
les
jo
adc
mov
pusha
add
inc
jmp
mov
lea
add
adc
sbb
mov
nop
pushf
in
cld
push
cld
test
and
cmp
leave
adc
xor
xlat
push
test
cmp
sub
jg
push
dec
mov
scas
or
pop
es
lock
pushf
fcomp
push
nop
je
mov
add
push
xchg
idiv
dec
inc
pusha
shr
pop
xchg
pop
mov
cmps
jmp
jbe
xor
jo
fadd
add
lea
sub
js
jmp
mov
push
out
mov
mov
(bad)
push
jo
and
jl
daa
push
fbld
scas
lods
shl
aas
rol
mov
sub
int3
pop
arpl
gs
jb
inc
or
xchg
dec
sub
and
in
jbe
das
adc
ret
xor
fadd
mov
push
pop
jne
or
sahf
sub
sub
mov
clc
not
cmp
lods
add
push
adc
popf
or
pop
rol
inc
stc
ja
push
aam
add
aad
dec
mov
sar
add
and
inc
test
mov
ret
mov
xchg
in
add
xchg
jle
sti
loopne
rol
add
sbb
xchg
add
xor
adc
xor
les
(bad)
shr
lea
or
mov
pop
sbb
sbb
lock
aam
lods
mov
push
and
jecxz
or
sub
pop
aas
dec
aas
cdq
std
xchg
mov
in
adc
fldenv
cmp
aas
push
and
das
xor
mov
xor
mov
adc
xor
aas
ins
dec
test
out
je
xchg
pusha
sub
or
gs
cmp
push
jmp
mov
xchg
push
jge
sub
(bad)
or
imul
call
popa
mov
dec
adc
add
add
adc
cli
add
inc
pop
and
ficom
iret
mov
bound
into
or
or
dec
loopne
es
imul
pop
sub
dec
and
push
pop
and
cmps
inc
mov
shufps
leave
js
add
push
adc
or
push
dec
jns
jno
loop
mov
sub
jg
ret
jno
push
jg
in
daa
and
xor
jle
pop
push
sub
jmp
push
sbb
and
clc
lea
out
push
popf
xchg
jo
add
sub
dec
add
cli
mov
movs
test
and
adc
sub
repnz
cmp
cmp
loope
cmp
test
push
add
dec
push
and
sub
sub
test
lods
lea
in
out
call
mov
ja
and
jle
push
sbb
adc
cld
imul
shl
sub
or
movs
inc
dec
mov
movs
fld
ds
lods
fdivp
js
cmps
jecxz
sub
ins
in
or
fld
cmp
lock
push
fwait
sbb
cmp
ins
xor
or
add
mov
fist
mov
pop
jecxz
xchg
or
je
and
xor
adc
and
and
or
mov
sbb
inc
in
cmp
add
popa
and
inc
pop
pop
lea
les
ins
arpl
popa
dec
cdq
ror
rcl
xor
adc
dec
aam
xor
(bad)
sub
rcl
jmp
add
data16
sahf
mov
mov
xchg
and
ins
add
and
sti
lea
adc
xor
shl
in
xor
stc
xchg
js
test
push
std
mov
mov
addr16
call
cmp
xchg
je
ror
push
xchg
push
mov
and
xchg
les
sub
sbb
dec
adc
clc
cmps
and
js
xor
jae
push
retf
ret
mov
cmp
or
jno
loop
jo
xchg
(bad)
ja
dec
and
sub
cmp
dec
xchg
inc
add
or
ror
inc
jbe
test
div
sub
adc
dec
and
jbe
icebp
pop
sub
jmp
add
cmp
jmp
(bad)
mov
mov
in
and
lea
jecxz
xchg
nop
sub
out
lahf
shl
fcom
or
ret
jne
sbb
sub
xor
dec
ror
jge
or
mov
and
push
or
xchg
push
shl
dec
daa
and
ret
div
mov
pop
and
xchg
sbb
add
shl
cmps
push
inc
sbb
push
sbb
inc
je
sub
cmc
pop
or
cmp
sub
fcomi
push
adc
dec
ja
data16
jmp
push
jmp
cwde
cmc
ja
loope
retf
push
or
cmp
add
xchg
loopne
jmp
sub
add
mov
xchg
mov
imul
out
jl
mov
jmp
push
and
add
test
cwde
jg
sub
enter
jg
nop
cs
xor
push
or
sar
sub
jmp
sbb
pop
adc
enter
cmps
cmp
jl
adc
test
add
push
cwde
push
jmp
inc
xchg
mov
vmovhps
xor
js
loop
pop
xor
aam
scas
cmp
cld
cmp
ret
inc
cmp
hlt
push
(bad)
xor
or
xchg
add
xor
ret
mov
cmc
cmp
call
and
sahf
push
addr16
ret
pusha
or
test
push
pop
mov
jg
popa
inc
aas
xchg
or
dec
(bad)
leave
and
mov
and
mov
xchg
dec
add
imul
fs
sbb
ja
pop
push
jno
jmp
icebp
jno
xor
ds
push
or
retf
push
xor
(bad)
stc
outs
cmp
cmp
jg
lock
clc
imul
test
xor
sub
xchg
dec
xchg
cmp
mov
or
adc
add
xchg
cmps
xor
or
rcl
push
imul
fisubr
pop
inc
add
ret
push
or
daa
sti
in
push
mov
in
sbb
(bad)
shr
xchg
nop
aaa
mov
ret
(bad)
ins
mov
xchg
ror
mov
pushf
(bad)
mov
fadd
dec
out
icebp
dec
lods
loop
dec
int3
imul
push
or
or
in
push
ss
mov
cs
inc
sbb
imul
jle
push
enter
jge
loopne
call
add
pop
bound
sti
dec
jmp
(bad)
call
dec
and
inc
adc
sub
adc
sbb
inc
inc
add
pop
fadd
scas
icebp
push
pop
inc
btr
imul
rdpmc
or
xor
call
jo
pop
fnstenv
add
xchg
daa
js
test
test
sub
dec
ins
adc
push
cmp
fs
pop
fcmovb
in
pop
push
dec
jae
sbb
mov
xor
jno
stos
or
out
jl
int
fisttp
push
call
leave
and
and
jl
test
mov
pusha
jne
xor
xor
add
sub
ja
es
ret
mov
jae
and
and
pop
xor
inc
inc
mov
pop
push
dec
sbb
(bad)
sbb
push
(bad)
in
ins
pop
adc
sbb
jnp
iret
mov
or
sub
sahf
push
fidiv
pop
sub
dec
or
or
jge
push
or
mov
push
dec
je
rcr
dec
outs
imul
test
mov
addr16
pop
ficom
cmp
or
lock
inc
in
outs
mov
cmp
cmp
mov
dec
inc
test
sbb
add
sar
in
ficomp
xchg
in
pop
(bad)
mov
mov
retf
enter
xor
xchg
xor
pop
xor
outs
enter
pop
dec
add
movs
sar
add
fild
mov
push
je
jge
or
ror
test
pusha
mov
inc
data16
in
in
and
dec
pop
or
sub
add
fsubr
aam
inc
sub
fwait
jge
mov
jecxz
and
sbb
into
mov
aaa
sub
adc
or
and
pop
fidiv
jo
dec
push
jbe
or
xor
out
aas
pop
jl
dec
pop
imul
data16
mov
js
mov
push
xor
iret
push
or
push
push
jne
scas
and
(bad)
call
inc
pop
or
sub
cmp
mov
imul
push
xor
inc
ins
inc
jo
pusha
pop
mov
dec
test
and
sub
or
dec
fs
int3
pop
hlt
inc
cmp
or
shl
add
mov
pop
imul
xor
or
push
xor
xor
jg
data16
pop
mov
pusha
call
inc
stos
push
addr16
je
cdq
adc
mov
in
(bad)
dec
cmp
jle
fld
pop
loopne
pop
xor
addr16
jns
lea
adc
push
or
(bad)
push
(bad)
cdq
(bad)
out
jmp
lock
and
and
js
sbb
lahf
sub
pusha
dec
sub
push
mov
sbb
fiadd
fcomp
retf
(bad)
mov
ret
and
or
mov
pop
adc
mov
add
mov
xchg
or
or
repz
aaa
xchg
lods
stc
lea
popa
arpl
inc
gs
rol
sbb
jo
push
push
sbb
pop
cli
pop
out
mov
or
xor
in
pusha
cwde
dec
imul
nop
sbb
add
in
mov
aas
xchg
inc
ds
or
or
call
jecxz
jmp
inc
js
dec
push
cmp
or
push
add
push
hlt
xchg
xchg
cmp
test
lock
push
mov
call
adc
and
jl
sub
inc
outs
push
xchg
sub
or
add
add
dec
push
pusha
mov
mov
dec
fs
cmp
pop
jo
cmps
mov
or
test
or
or
sub
iret
jmp
(bad)
mov
add
pop
jae
hlt
or
and
or
dec
and
jns
aad
jno
push
inc
lock
jmp
jl
sub
mov
test
sub
ret
xchg
mov
xlat
popa
adc
or
es
jmp
mov
cmp
aaa
and
sub
xchg
out
add
mov
or
xchg
add
cld
pop
ins
xchg
mov
adc
push
and
sar
mov
outs
jnp
and
inc
add
nop
add
into
adc
mov
mov
add
inc
into
inc
imul
or
sbb
and
std
inc
sbb
push
cdq
or
jp
dec
dec
mov
and
(bad)
fsubr
ins
xchg
sbb
imul
sbb
inc
pusha
mov
xchg
rol
adc
xor
adc
or
pop
(bad)
stc
mov
popa
dec
mov
mov
test
push
das
inc
or
mov
mov
jl
mov
adc
sub
or
cmp
cmps
pop
cmp
mov
inc
ins
jmp
pop
pushf
pop
xor
push
inc
mov
xlat
mov
mov
or
inc
or
and
add
dec
inc
gs
push
lea
push
add
xchg
cmp
jb
inc
or
ins
dec
out
xor
xchg
repnz
and
movs
pusha
test
mov
les
ret
loope
or
add
rol
jbe
getsec
test
push
enter
data16
loope
inc
mov
adc
mov
inc
add
inc
mov
daa
and
xchg
inc
test
or
add
dec
or
or
sbb
xchg
sbb
and
adc
mov
enter
sbb
inc
jecxz
sbb
sbb
fcom
mov
or
das
imul
fld
sbb
sub
mov
xchg
popa
(bad)
call
adc
mov
add
mov
enter
aam
inc
inc
sbb
or
int3
fld
adc
push
push
fsub
mov
push
and
into
scas
adc
cmp
mov
scas
mov
dec
mov
inc
dec
cmp
pushf
ss
les
pop
dec
jo
sar
jo
retf
(bad)
push
cdq
pop
fwait
std
push
mov
push
add
sbb
sbb
ss
pop
mov
inc
int
rcr
ficom
push
pop
sub
or
and
push
fisubr
pusha
xor
pop
(bad)
xchg
cmp
mov
fmul
xchg
inc
or
(bad)
fadd
daa
je
jo
inc
cwde
jo
pop
cmp
hlt
inc
rol
cmps
loop
sub
scas
push
sub
jmp
pusha
pusha
or
jb
les
sub
adc
push
jmp
lods
dec
fbld
or
or
imul
add
mov
inc
pop
push
jg
dec
mov
mov
sub
das
pop
outs
ss
pop
imul
lea
dec
hlt
test
jnp
jmp
popf
xchg
push
push
cmp
jecxz
mov
adc
movs
push
enter
add
ss
jns
add
fadd
mov
mov
push
mov
adc
mov
dec
sub
pop
popf
rol
xchg
push
lds
jo
je
dec
test
imul
cmc
pop
pop
outs
je
adc
loope
test
or
push
shl
add
cmp
sbb
add
(bad)
imul
fidiv
inc
add
out
call
push
cdq
add
int
mov
retf
jbe
lods
add
aas
fcmovb
outs
xlat
mov
out
add
xor
push
lahf
ins
inc
sub
and
adc
outs
in
jecxz
test
add
pop
pop
pop
inc
xor
mov
lods
lock
adc
es
add
jge
push
mov
inc
sbb
mov
or
fisubr
jp
test
push
jb
nop
push
sub
sub
jnp
stos
adc
cmp
sub
loopne
xchg
xor
push
punpcklbw
out
jbe
add
adc
jb
push
sbb
scas
ror
sbb
mov
add
or
and
push
push
cmps
xlat
das
xchg
rcr
out
lahf
jo
jne
or
xor
ror
lds
mov
push
icebp
adc
loopne
les
adc
sbb
not
and
test
inc
mov
or
cmp
xor
pop
jb
mov
push
(bad)
arpl
lea
xchg
push
cmp
inc
test
(bad)
out
adc
shr
push
push
add
sub
jle
adc
sub
cli
xlat
loopne
ds
inc
unpcklps
call
pop
cmp
daa
inc
xor
movs
lahf
pop
xor
lods
movs
cld
movs
das
or
pop
lods
pop
popa
dec
imul
int
cmp
sub
mov
es
adc
or
lock
and
pop
add
or
repz
(bad)
std
adc
adc
and
nop
out
test
mov
aas
mov
test
push
js
cmp
or
add
add
imul
gs
ja
outs
inc
enter
je
add
xchg
push
ficom
and
mov
sbb
stos
and
popf
inc
ror
mov
jo
or
(bad)
mov
movups
les
add
(bad)
js
daa
cld
xchg
dec
int3
cwde
mov
push
mov
inc
push
inc
mov
add
add
sahf
ins
out
push
pop
pop
call
add
pusha
bound
addr16
lods
adc
mov
jo
mov
mov
sub
or
dec
jecxz
rcl
add
imul
dec
into
imul
jmp
mov
fimul
shl
(bad)
call
(bad)
mov
cmp
sub
dec
mov
ret
inc
xor
jb
jo
push
dec
ret
inc
dec
jne
subps
pop
xchg
cmp
lea
push
sbb
or
cmp
repz
or
and
stos
rol
pop
rcr
push
bound
or
inc
outs
sar
test
rol
push
xor
or
es
sub
push
jp
bound
add
mov
add
movs
xor
ja
mov
vorps
imul
adc
sub
and
adc
sahf
xor
dec
in
int
mov
jmp
call
call
ret
sub
(bad)
data16
pop
lds
or
xchg
jle
lahf
cmps
test
dec
or
ds
je
and
mov
adc
and
test
push
add
out
test
push
jbe
or
xchg
mov
lods
or
push
sbb
sub
fiadd
xchg
(bad)
nop
pushf
push
cld
jp
cmp
add
mov
ret
inc
fist
push
fadd
xor
push
pop
push
mov
inc
ficom
inc
sbb
mov
push
jo
and
mov
inc
call
mov
jle
call
movaps
ret
push
mov
in
inc
test
xchg
push
out
push
xchg
adc
mov
ret
push
push
jp
addr16
dec
push
sbb
ds
and
mov
sub
xor
call
stos
dec
mov
fadd
inc
retf
mov
aam
cmp
or
mov
mov
fbld
adc
xor
or
pop
rcr
push
or
aas
pushf
retf
leave
in
gs
xor
cmps
mov
aam
das
int3
je
add
scas
rcl
mov
jo
add
enter
mov
or
xchg
jmp
mov
pop
push
jge
pop
inc
fdiv
mov
sub
sub
adc
int3
or
mov
jbe
cmp
cmp
movs
pop
in
jae
in
push
add
push
push
lock
inc
imul
inc
or
adc
dec
sbb
inc
shr
sbb
add
and
push
sub
clc
mov
jbe
(bad)
fdiv
lea
shl
(bad)
or
jae
add
and
pop
pop
and
and
rol
and
nop
(bad)
dec
pop
out
ror
sub
jb
adc
jne
icebp
push
fsub
(bad)
fld
retf
int3
mov
inc
or
push
ret
xor
rol
sbb
xchg
ins
mov
add
add
aam
inc
hlt
outs
rcr
sub
pop
inc
cmp
(bad)
mov
dec
hlt
and
or
cmp
dec
test
enter
imul
push
jb
fadd
xor
lock
lock
je
push
add
lods
adc
rol
ja
stos
adc
rol
push
jae
jecxz
jg
inc
add
inc
push
mov
pop
inc
mov
ret
xchg
sar
cmp
push
aas
sub
adc
or
xor
retf
(bad)
fbstp
das
or
out
movs
pushf
jle
xor
xchg
add
pop
dec
xchg
inc
sub
mov
int3
outs
popa
pushf
cwde
imul
xchg
or
mov
stos
mov
ss
push
jmp
mov
shr
and
gs
scas
cmps
out
mov
pusha
fmul
pop
mov
or
clc
test
loope
or
cwde
xchg
mov
mov
sub
pop
cmp
test
inc
rcr
(bad)
in
lods
pushw
retf
adc
in
xchg
xchg
jge
add
push
add
inc
xchg
test
popa
jno
dec
and
clc
rol
pop
sbb
or
and
in
dec
push
test
or
and
movs
push
imul
(bad)
push
sbb
retf
and
ret
sub
and
inc
(bad)
dec
ds
test
ins
add
inc
sub
add
movs
push
data16
js
mov
inc
rol
cmp
jb
add
hlt
ins
pop
(bad)
dec
mov
add
xor
enter
daa
adc
aad
sub
xchg
push
retf
add
adc
ret
push
in
sets
inc
jb
cmp
popa
js
bound
adc
test
xchg
movs
mov
mov
mov
adc
adc
lods
mov
(bad)
(bad)
or
jl
pop
pop
idiv
inc
and
push
adc
sbb
inc
std
mov
mov
mov
xor
adc
adc
cmp
push
push
or
fdiv
rol
cmp
mov
fst
ins
or
ds
aad
jnp
xor
fcomp
adc
dec
mov
rol
mov
mov
cmp
jl
push
xlat
ret
in
in
adc
lea
in
or
ins
xor
mov
push
push
mov
hlt
sub
test
movs
in
mov
jmp
jle
cmp
xor
nop
rcl
mov
jnp
sbb
sub
adc
jno
mov
sbb
cwde
clc
xor
push
or
mov
dec
mov
and
add
mov
fisub
push
jae
push
setne
dec
loopne
xor
mov
mov
bound
xchg
fwait
pop
pop
sub
jo
xchg
add
fsub
test
imul
neg
pop
sahf
mov
fdivr
add
fiadd
sub
ja
in
pushf
jge
mov
adc
ds
xor
mov
and
cmp
sub
add
(bad)
pop
jmp
fnsave
fucomp
enter
xor
cmps
mov
add
(bad)
pop
pop
cmp
dec
xchg
les
jle
dec
sbb
pop
aas
add
jmp
iret
dec
loope
pushf
add
mov
test
imul
pushf
sahf
imul
cmc
push
pushf
sub
push
sbb
cmp
dec
sub
pop
dec
shl
pop
jmp
cs
outs
add
sbb
mov
dec
fisttp
mov
mov
pop
xchg
mov
(bad)
fdivr
cmp
inc
inc
loopne
clc
xchg
xchg
(bad)
nop
gs
and
fdiv
adc
inc
push
stc
jne
inc
fisub
arpl
or
iret
fdiv
das
js
push
es
add
fbld
add
dec
push
cmp
xor
test
dec
arpl
adc
jl
add
cmp
fiadd
dec
pop
ja
shl
mov
add
cmp
xor
sbb
mov
es
lea
push
push
sbb
add
push
fwait
sbb
call
mov
inc
ins
sbb
fsubr
sbb
ja
add
es
jge
jp
rcr
adc
(bad)
loopne
adc
jo
xor
and
aam
push
mov
or
mov
daa
and
and
hlt
sbb
sar
adc
or
fstp
push
rol
ja
push
jge
adc
or
jge
add
inc
add
movs
or
scas
test
aaa
lock
sub
or
lods
mov
mov
call
fidiv
lock
stos
add
adc
outs
xor
leave
add
adc
xchg
scas
pop
shl
addr16
and
cmp
jo
and
cmp
dec
iret
in
pop
mov
fldcw
pop
fisttp
frstor
add
push
fcom
dec
pop
dec
inc
lea
clc
icebp
cmp
push
or
dec
xchg
and
popa
adc
push
add
cwde
sbb
adc
rol
arpl
pop
imul
mov
sub
dec
and
bound
cmp
mov
pop
dec
push
push
lock
xchg
fistp
sub
xchg
ss
ror
inc
pop
pop
and
test
or
pushf
ror
push
xor
test
jno
push
xchg
pop
mov
data16
stos
fimul
pop
xchg
inc
imul
(bad)
jmp
adc
xor
inc
test
mov
mov
xor
out
int
xchg
pop
out
je
shr
or
xchg
xor
mov
scas
mov
inc
adc
daa
xor
inc
imul
xor
test
push
xchg
test
in
int3
jge
cmp
lea
aam
adc
push
dec
inc
jo
add
(bad)
add
lahf
sbb
cld
mov
pop
je
mov
push
imul
cmc
adc
dec
rol
sar
xor
or
inc
dec
inc
or
popa
cdq
bound
dec
pop
add
xor
or
xor
or
dec
sub
imul
rol
pushf
mov
push
mov
sub
adc
ror
cmps
and
inc
sub
push
xor
ret
xor
mov
sub
jno
out
and
add
enter
jo
daa
xchg
or
enter
mov
xor
mov
cli
adc
adc
call
mov
push
cmps
stc
inc
ins
xchg
test
lahf
call
sub
xadd
dec
jge
add
mov
stos
cwde
xchg
add
or
xchg
cmp
mov
mov
adc
clc
sbb
jle
(bad)
jp
mov
or
xchg
ret
jmp
jmp
fcmovnb
sub
jns
and
in
and
lods
and
sub
sbb
sar
push
adc
call
movs
adc
fild
push
sar
lods
push
mov
adc
arpl
(bad)
enter
add
pop
and
xor
push
or
inc
and
fldcw
push
sub
and
push
mov
or
jle
ins
(bad)
cmp
xor
cmp
popf
movs
ret
daa
mov
sub
dec
imul
mov
push
sub
xchg
xor
push
adc
pop
adc
cmp
push
pop
xor
add
icebp
add
movs
in
xchg
push
pop
sub
mov
imul
push
add
aaa
or
mov
movs
jno
add
push
mov
ja
aas
sub
(bad)
inc
or
dec
outs
adc
cwde
sub
add
mov
mov
cmp
sub
add
rol
sub
test
imul
cmp
mov
add
push
mov
jge
lods
arpl
jg
pop
sbb
xor
mov
test
and
sbb
pop
pop
xor
sti
sub
adc
jge
add
test
call
loope
sbb
scas
mov
add
dec
inc
push
add
or
and
shr
cli
outs
mov
je
lock
rcr
xor
sbb
pusha
inc
shl
clc
push
dec
and
xchg
or
ss
jl
or
and
mov
cmps
push
(bad)
or
lea
mov
movs
add
add
mov
mov
mov
aas
xor
add
jg
shl
or
ret
or
dec
cmp
imul
cmp
add
push
and
or
dec
xchg
ret
mov
scas
jae
rcl
rcr
mov
inc
nop
add
push
test
stos
cdq
inc
shl
jle
call
sub
fsub
ja
mov
jno
add
jp
adc
and
fcomip
movs
in
aaa
push
jo
dec
in
dec
jecxz
test
rol
mov
xchg
ins
sub
out
adc
sbb
jnp
cmp
push
cmp
mov
xor
cli
fsub
or
jge
cdq
les
add
and
xor
jmp
mov
add
push
popa
dec
jmp
mov
js
or
add
mov
mov
cmc
adc
push
and
(bad)
push
xchg
es
inc
xchg
sbb
jne
push
or
sbb
lea
dec
and
mov
xchg
inc
xchg
loopne
and
sahf
not
(bad)
mov
adc
ror
jg
ret
mov
and
cmp
mov
call
lea
cmp
outs
test
dec
or
xor
xor
mov
es
cwde
sub
fidiv
adc
xor
(bad)
xchg
ss
loopne
scas
add
dec
xor
jp
outs
rcl
sar
test
rol
push
fsubr
sub
jge
inc
aam
dec
enter
(bad)
mov
mov
add
add
push
pusha
push
push
mov
je
fld
fstp
jmp
fnstsw
fnstsw
sbb
or
(bad)
xor
fmul
sub
es
add
in
mov
pop
or
mov
dec
sub
pop
mov
js
in
mov
sbb
cmps
daa
out
stc
mov
push
test
pusha
jae
xchg
das
aaa
mov
cmps
and
rcl
test
bound
sbb
xchg
push
repnz
popf
stos
adc
jne
sub
fnsave
das
pop
push
push
addr16
add
jg
sbb
mov
out
push
add
xor
mov
xor
xchg
inc
cmp
adc
dec
repz
mov
int
adc
sbb
sbb
and
dec
ret
xor
adc
and
shr
pop
lods
sub
fisttp
add
aam
les
sbb
jb
inc
cdq
aam
cmp
inc
scas
mov
cmp
lods
add
inc
and
adc
adc
clc
adc
fwait
lods
adc
cmp
hlt
pop
aas
mov
add
shr
in
pop
sbb
add
js
or
(bad)
aaa
cmp
stos
and
repz
mov
xor
idiv
and
arpl
scas
or
in
mov
add
push
mov
ss
mov
mov
xor
cwde
cmp
dec
adc
cmc
inc
inc
ins
mov
aaa
dec
push
adc
inc
mov
fiadd
and
inc
dec
sbb
ret
sbb
aam
mov
js
mov
pushf
mov
xchg
retf
mov
movs
pop
test
(bad)
into
mov
add
add
mov
lods
shr
nop
aaa
(bad)
jge
push
add
or
jmp
jg
popa
or
and
js
push
repz
es
stc
add
push
sub
cmc
cmp
pop
inc
push
sub
or
or
add
or
or
or
js
hlt
popa
arpl
sar
test
adc
call
push
and
push
xchg
pusha
add
add
aaa
inc
popa
and
pop
inc
ss
stos
dec
inc
lahf
inc
and
sub
pop
sti
or
sub
xchg
mov
and
aas
push
push
popf
stc
pusha
or
and
adc
mov
and
xchg
add
dec
xchg
jmp
(bad)
or
lock
and
and
push
pop
add
sbb
jo
mov
bound
aad
into
sbb
mov
dec
xchg
mov
push
(bad)
fcom
pop
cmp
mov
rep
mov
mov
inc
dec
mov
fnstenv
mov
pop
adc
sub
xor
out
frstor
pop
push
push
add
sub
mov
cld
sub
push
and
or
sar
and
jne
ret
adc
and
xor
jmp
pop
je
add
or
pop
es
call
push
in
lods
add
cmp
xchg
adc
mov
or
test
adc
dec
or
int
mov
inc
scas
ficomp
lock
jb
enter
loope
mov
or
outs
xor
jns
cmps
sahf
add
das
add
and
jns
pshufw
clc
inc
or
sub
clc
mov
push
not
add
mov
pop
add
cmp
or
pusha
xor
imul
push
cmp
adc
das
loopne
nop
add
add
leave
or
jno
mov
inc
test
sub
mov
lods
cmp
sub
or
cmp
int3
mov
xchg
mov
loop
inc
stos
or
sub
cmp
inc
push
mov
mov
in
push
fcmovb
call
dec
pop
dec
cmp
mov
push
imul
and
xchg
clc
and
nop
lock
test
loopne
xchg
je
push
retf
dec
lods
mov
sub
fisttp
and
dec
(bad)
adc
xor
sbb
dec
or
or
frstor
xchg
or
add
and
push
pop
sar
sub
and
mov
add
dec
mov
mov
or
add
loopne
xor
and
data16
and
in
shl
jo
xchg
sbb
nop
test
shr
or
and
js
xor
mov
(bad)
ret
movs
ds
outs
icebp
push
cwde
loop
bts
or
jmp
popf
enter
jae
es
inc
aas
jns
sub
mov
js
inc
mov
or
test
mov
test
test
and
int
dec
sar
adc
xor
push
mov
fcom
aam
call
push
sub
lock
movd
cmp
es
test
xchg
int3
push
sub
xchg
fistp
mov
retf
jmp
dec
push
push
ret
push
cmc
mov
pop
out
ja
call
mov
adc
dec
cmps
mov
idiv
bound
jp
adc
gs
scas
sbb
jg
push
mov
shl
sbb
movs
adc
ror
pop
or
cwde
xor
daa
sti
pop
add
or
mov
imul
fild
mov
cmp
jnp
mov
aad
mov
or
cld
iret
or
xchg
inc
test
ror
test
rcl
retf
popa
pushf
popa
(bad)
push
inc
cmp
dec
daa
fcom
cmp
loope
das
pop
pushf
mov
xor
jl
leave
data16
mov
mov
outs
or
call
xor
lods
xchg
cmp
clc
sbb
adc
aaa
sahf
stos
inc
mov
jne
mov
test
ror
inc
mov
in
push
scas
cmp
in
adc
adc
les
xchg
imul
or
ja
xor
dec
pop
jp
dec
(bad)
xchg
fimul
push
lods
jo
xchg
mov
inc
(bad)
mov
je
add
push
push
sbb
fadd
dec
enter
jns
xchg
push
imul
adc
movs
into
ins
pop
pop
test
xchg
add
sub
retf
push
call
dec
fadd
add
adc
add
call
loope
jle
(bad)
jae
push
adc
mov
test
mov
sub
pop
cmp
ja
ja
pop
sub
sub
jle
mov
sbb
dec
adc
rcl
sahf
out
cmps
sbb
dec
add
adc
sbb
ret
sub
sub
dec
add
mov
add
enter
ins
std
and
and
je
mov
jns
call
test
add
jecxz
sub
pop
push
ret
mov
cs
mov
shr
inc
repz
dec
jecxz
das
test
add
or
mov
adc
movs
and
add
xchg
pop
cmc
ss
pop
les
push
int3
sbb
loopne
or
push
aam
jp
dec
imul
inc
or
mov
mov
lock
dec
in
inc
daa
xchg
push
mov
push
shl
and
add
ja
stos
test
push
das
mov
lds
mov
pop
or
cdq
sub
xor
inc
lock
and
dec
mov
adc
fdivr
adc
push
cwde
int3
scas
fld
jnp
sbb
test
cs
push
push
pop
sysenter
ins
jbe
in
sbb
icebp
fidivr
inc
dec
fisub
jmp
loope
pop
pop
xchg
mov
sub
push
stc
xlat
dec
fadd
sbb
sub
in
cmp
xchg
arpl
inc
jmp
push
jecxz
imul
bound
inc
call
mov
dec
add
in
adc
ror
push
loopne
(bad)
call
jge
xor
push
clc
test
cmp
xor
inc
mov
mov
add
push
sub
mov
add
repnz
push
loopne
dec
xor
test
jbe
sub
push
add
push
imul
movs
popa
sar
and
popf
push
dec
and
push
push
imul
sub
mov
ret
mov
add
push
imul
pop
in
sahf
or
xor
mov
xchg
push
sbb
and
aas
pushf
push
xor
xor
sbb
mov
mov
loope
cmps
fdiv
add
sbb
or
fimul
ror
ds
dec
sub
xchg
test
jmp
inc
pop
pop
ret
ror
adc
add
lea
ret
or
inc
or
sbb
sbb
sbb
adc
fadd
or
mov
enter
sbb
or
clc
clc
mov
pop
dec
imul
xchg
and
clc
mov
retf
cmp
sbb
or
jp
mov
js
jo
pop
add
sub
xchg
and
addr16
push
nop
mov
(bad)
xor
push
dec
adc
jmp
fsub
nop
mov
cli
inc
cmp
in
repnz
loop
add
jne
call
stos
div
imul
dec
ret
mov
jmp
ins
or
dec
dec
fld
fdivr
mov
jge
dec
xchg
sahf
mov
retf
mov
and
mov
dec
cld
sbb
or
sub
dec
xchg
xchg
cld
push
jecxz
and
mov
add
or
add
pop
daa
cs
xor
add
retf
js
cmp
adc
or
inc
sbb
(bad)
imul
pushf
jbe
mov
or
mov
movs
inc
xor
add
push
push
and
sbb
movs
sbb
jnp
jecxz
or
xchg
imul
inc
jne
xchg
jne
sbb
push
or
jne
mov
js
mov
sub
dec
clc
ret
jmp
jmp
xor
sub
or
jmp
sbb
shl
enter
or
inc
dec
aas
or
test
inc
js
clc
fs
dec
jae
das
or
and
or
sub
add
rcr
mov
inc
add
add
inc
rol
mov
adc
mov
mov
dec
ds
inc
add
ins
inc
shl
mov
inc
sub
ret
dec
test
daa
xor
adc
push
dec
push
sbb
inc
push
jne
jae
push
adc
inc
ss
jne
movs
mov
adc
or
call
jle
std
dec
test
pop
cmp
loop
sub
xor
movs
xor
push
lahf
adc
dec
jmp
nop
cs
sub
jno
mov
and
repnz
rol
in
mov
or
add
mov
aas
loope
mov
push
test
adc
push
add
or
retf
mov
mov
imul
xchg
sbb
sub
lea
nop
push
lock
adc
cmps
mov
jmp
aad
cs
add
lods
je
and
stos
mov
loopne
pop
xchg
sub
xchg
adc
xor
ror
cmp
sbb
nop
(bad)
push
(bad)
mov
sbb
or
hlt
add
shl
test
inc
fdiv
call
cmp
out
ret
fisttp
or
or
inc
outs
sub
adc
or
add
retf
add
test
add
popf
dec
sahf
sub
xchg
push
add
or
jmp
and
(bad)
jo
jecxz
mov
push
pop
and
sub
xor
xor
loope
inc
cmc
stc
cmp
mov
in
xor
fdiv
mov
nop
mov
sbb
jbe
stos
mov
adc
xor
pop
jp
test
(bad)
movs
dec
imul
(bad)
sub
lods
inc
iret
mov
inc
dec
test
or
and
fdivp
inc
jmp
add
inc
(bad)
(bad)
jp
or
shl
push
xor
call
adc
add
repz
call
or
sbb
xor
and
lea
inc
push
push
hlt
push
retf
push
sbb
jne
and
xchg
sbb
fcomp
ret
cmc
les
ret
sbb
add
dec
add
xchg
jo
xchg
adc
push
pop
mov
xor
and
add
adc
cmps
cmp
adc
adc
hlt
bound
das
add
xor
retf
xor
dec
leave
stos
retf
lea
push
movs
inc
sub
cdq
int
fisub
ret
xor
int
call
call
push
mov
adc
sahf
gs
and
(bad)
cmp
jmp
scas
neg
pop
iret
xor
and
or
sub
dec
cmp
push
dec
or
clc
enter
inc
add
and
pop
jecxz
arpl
mov
jmp
popa
cmp
jno
or
inc
inc
inc
or
dec
push
xchg
jl
pop
arpl
jp
test
sub
imul
add
aad
add
lea
pop
adc
cmp
xchg
or
adc
dec
pop
and
xor
and
cwde
int
xor
mov
test
mov
outs
sti
cmp
je
call
pop
push
inc
jmp
sbb
dec
into
inc
sbb
inc
enter
and
fmul
pop
sub
xor
outs
and
test
xchg
inc
popf
mov
add
movntps
movs
inc
jl
and
outs
cmc
mov
jecxz
jne
shr
dec
loope
shl
lahf
add
imul
adc
mov
jb
or
and
outs
dec
ja
cmp
adc
dec
inc
adc
or
inc
dec
jmp
ret
push
add
mov
mov
inc
rcr
add
int3
mov
inc
adc
push
inc
cdq
mov
js
cwde
movs
cld
leave
cld
sbb
daa
retf
inc
xchg
aad
inc
in
ins
adc
dec
fadd
loop
adc
aas
inc
out
add
jnp
push
mov
stos
(bad)
imul
popf
mov
ret
push
test
pop
and
and
mov
dec
(bad)
adc
adc
or
xchg
and
inc
add
sbb
addr16
push
push
or
pop
jmp
mov
xchg
add
sbb
icebp
add
sub
aad
daa
lods
xchg
movs
data16
add
fsubrp
aaa
jns
nop
sub
je
or
inc
inc
js
out
and
xor
sub
xchg
jmp
les
sbb
adc
fadd
jp
ror
sbb
sub
rcr
int3
mov
cs
out
mov
sub
test
jo
pop
mov
imul
int
dec
inc
movs
dec
sbb
xchg
or
or
cmps
imul
sbb
adc
pop
or
arpl
fsub
xor
pusha
in
mov
mov
dec
sub
sbb
idiv
adc
loopne
push
test
sbb
into
push
js
loope
pop
pop
mov
xor
retf
adc
jmp
lock
enter
xchg
pop
(bad)
daa
popa
cmp
or
dec
adc
into
fadd
dec
mov
dec
ds
mov
mov
or
jne
bound
test
(bad)
push
enter
inc
or
xor
ins
arpl
add
mov
push
ja
jecxz
lods
rcr
mov
xchg
mov
mov
ret
pop
es
(bad)
movs
out
jbe
xor
dec
or
out
push
cmp
out
std
and
push
xor
dec
aam
or
or
dec
add
or
pushf
fdiv
dec
adc
inc
mov
ins
dec
or
fadd
data16
xchg
fst
bound
add
push
scas
pop
inc
add
fst
xchg
arpl
xor
sar
popf
call
jg
push
fstp
fsubrp
pop
ret
popa
cld
out
push
adc
rcr
fsub
rcr
leave
fiadd
shl
mov
and
jle
fcomp
stc
mov
jb
xchg
sbb
ror
fstp
fld
repnz
mov
leave
and
fstp
movs
dec
fdivr
cwde
fsubr
jae
adc
adc
xor
add
add
rcr
jmp
sti
add
shr
and
xor
push
sbb
in
pop
and
iret
dec
inc
clc
push
sbb
dec
xor
mov
mov
push
xchg
jle
mov
xchg
outs
js
or
ror
adc
out
pop
add
xor
mov
loopne
xor
fisubr
jge
inc
fld
sub
jo
in
test
sub
int3
fidiv
lds
aas
push
cmp
retf
jno
ret
aas
xchg
loope
ret
adc
ja
ret
cdq
pop
js
mov
lahf
(bad)
fmul
push
fldenv
mov
ret
cmc
pop
(bad)
mov
fxch
mov
out
mov
cmovo
sub
icebp
loopne
push
mov
fdiv
add
or
call
pop
test
sbb
mov
mov
test
jae
or
ret
imul
aaa
or
adc
xchg
inc
push
dec
sbb
int3
push
xlat
(bad)
lea
push
pusha
mov
push
dec
push
add
or
pusha
adc
movzx
and
add
lods
cdq
out
arpl
dec
adc
sub
push
xor
mov
or
test
pop
mov
push
xor
arpl
add
push
movs
and
sti
dec
sbb
popaw
push
xlat
pop
add
leave
xor
or
ficom
mov
inc
mov
push
inc
mov
jb
inc
arpl
push
enter
shl
jbe
push
mov
sbb
sbb
enter
add
inc
rol
ret
sub
into
test
sbb
pop
les
sub
nop
pop
xor
loope
outs
jmp
pop
sbb
(bad)
add
jmp
sub
idiv
xchg
(bad)
pop
sub
add
jp
je
inc
rcr
das
es
jl
jmp
cmp
stos
mov
xor
xchg
mov
mov
xchg
xor
mov
scas
and
shl
or
retf
push
sub
or
push
jmp
aad
out
or
mov
jnp
add
not
push
cwde
test
sbb
in
mov
pop
or
fld
call
daa
push
pop
ret
adc
inc
(bad)
(bad)
je
or
add
cli
std
in
fwait
stos
movs
fmul
ds
fsub
fdiv
fadd
cdq
push
stos
out
or
mov
mov
push
sub
add
cmp
sbb
dec
xchg
cmc
dec
jp
retf
inc
sbb
sbb
add
loop
or
in
add
dec
ret
xchg
sar
sub
adc
or
test
or
mov
mov
jmp
mov
(bad)
ja
jno
cld
cwde
bnd
fist
xor
xlat
pop
mov
nop
cmps
mov
push
mov
(bad)
stos
cmp
fcom
adc
(bad)
jl
pusha
in
xor
ficom
aad
in
dec
movs
and
sar
lea
mov
cmp
ja
or
std
xchg
(bad)
int
paddw
push
inc
cmp
jl
jmp
movs
inc
lods
cli
inc
inc
lea
push
movs
pop
push
(bad)
fidiv
sub
sti
mov
add
add
(bad)
(bad)
test
call
aam
rcr
scas
mov
mov
adc
push
gs
pop
xchg
mov
cmp
xchg
mov
mov
sub
and
enter
leave
add
les
cmps
push
push
popf
popa
inc
xor
movs
push
ins
or
inc
cmp
arpl
mov
mov
sub
in
or
mov
sub
sub
(bad)
jmp
dec
mov
and
push
les
push
stc
xor
jl
jno
test
shr
rcl
and
andnps
mov
inc
xchg
loope
inc
loopne
sti
sub
dec
(bad)
loopne
mov
add
ficomp
enter
mov
push
pop
xchg
outs
daa
jbe
adc
xor
dec
push
add
(bad)
in
scas
mov
fst
pop
enter
mov
jge
jle
sbb
jne
dec
adc
mov
mov
xchg
or
movs
pusha
gs
jp
pop
lock
push
fdivr
int3
das
enter
mov
fbld
or
arpl
sub
mov
js
leave
cmp
pop
repnz
fldz
push
dec
and
sbb
mov
cmp
pop
sbb
add
mov
or
stos
sub
push
dec
cmp
xchg
adc
fstp
ret
(bad)
hlt
or
push
jl
adc
push
ror
rcl
pop
mov
fld
mov
ins
push
cmp
mov
add
jmp
mov
pop
add
cmps
pusha
hlt
fadd
add
adc
or
fmul
dec
into
ret
dec
and
mov
je
jl
jbe
push
add
push
push
jb
jbe
mov
mov
movs
xor
pusha
cmp
and
or
mov
inc
nop
inc
adc
int3
fwait
add
xor
xor
and
imul
fnstsw
addr16
jbe
cmp
in
mov
sbb
sbb
jb
pushf
stos
jl
push
push
mov
ret
shl
mov
dec
rcr
shr
xchg
test
ds
mov
add
sbb
push
jne
sbb
retf
pop
or
mov
jno
lea
mov
pushf
adc
cmp
pop
dec
push
rol
fsub
div
lock
and
mov
into
(bad)
iret
mov
popf
or
js
mov
adc
xchg
cmp
out
or
stc
(bad)
adc
in
pop
hlt
sub
push
movs
add
sbb
push
cmp
mov
add
cwde
dec
movs
mov
push
push
mov
and
push
jo
inc
mov
jbe
jae
sbb
cmp
scas
xchg
xchg
mov
loope
mov
aam
inc
fidiv
adc
jecxz
shl
aas
sar
xchg
out
push
xlat
and
fidivr
mov
adc
xchg
in
lds
fs
dec
enter
movs
jno
test
retf
lock
out
inc
jmp
push
rol
jmp
xor
sbb
cmp
ror
cld
ret
or
dec
int
test
or
inc
movs
push
aaa
fcomp
out
fstp
pop
xor
imul
mov
rcr
mov
add
mov
or
and
jge
add
push
or
sbb
inc
ret
int3
mov
adc
mov
loopne
jbe
lock
arpl
jnp
int
add
mov
(bad)
es
pop
es
push
jno
mov
rcr
push
adc
add
push
lea
xor
inc
jp
cmc
data16
shr
adc
loopne
mov
fadd
and
loopne
xchg
cmp
popf
jecxz
ret
pop
push
sub
jl
inc
jne
rol
jge
ror
or
jle
xor
test
and
leave
lods
dec
cwde
sbb
loop
push
cmc
mov
aam
inc
push
gs
fcomp
mov
repnz
push
in
push
push
push
adc
rol
dec
push
out
mov
ror
mov
imul
pushf
or
mov
pop
and
movs
(bad)
or
or
cmp
clc
shl
mov
movs
adc
xor
push
sub
aam
mov
ror
mov
pop
push
dec
mov
call
mov
mov
or
sub
pop
cmps
jo
(bad)
std
add
inc
rol
dec
xor
sbb
sbb
(bad)
retf
lods
adc
xor
dec
xor
adc
mov
pusha
int
addr16
cmps
(bad)
sbb
fimul
inc
shl
inc
call
or
xchg
movs
and
mov
lea
mov
imul
fadd
mov
call
add
sbb
sbb
jl
xor
xor
lods
popf
je
test
mov
loope
cmps
mov
sub
sar
(bad)
inc
ja
mov
dec
call
push
jge
cli
scas
or
pop
rcr
int3
pop
mov
sub
ins
movs
imul
mov
add
loopne
inc
mov
mov
ret
mov
lock
xchg
inc
push
mov
jb
xor
inc
add
xor
mov
je
push
dec
lock
add
pop
ins
cmp
xchg
sub
(bad)
mov
add
nop
inc
imul
(bad)
mov
ins
mov
cmps
test
sub
imul
mov
and
movs
loopne
pop
jo
push
or
cmp
push
push
push
cmps
aaa
jb
fsubr
lods
ret
lea
xchg
adc
sub
(bad)
mov
cmp
jne
or
mov
and
sbb
jb
popa
std
xor
loope
mov
sub
or
push
cdq
sti
mov
jo
jmp
xchg
dec
cmp
pop
jno
fdivr
pop
add
loopne
daa
cmp
xchg
cwde
shl
inc
add
jo
(bad)
(bad)
in
push
mov
pop
push
add
rol
clc
mov
xchg
loope
mov
cmp
add
push
sub
adc
add
fstp
movs
lods
jmp
and
sub
push
dec
add
or
xor
and
cmp
or
inc
call
xor
fnstsw
(bad)
js
imul
add
lock
add
nop
out
fisttp
ins
jb
mov
mov
mov
add
push
cmp
dec
rol
call
sar
pop
test
xor
inc
in
into
inc
jl
xchg
cmp
in
scas
fisttp
mov
and
scas
add
mov
and
out
gs
dec
sbb
retf
movs
arpl
mov
cmp
dec
pop
sbb
aaa
mov
shr
test
in
inc
jecxz
nop
xchg
and
and
aas
and
and
xchg
mov
and
mov
mov
icebp
test
inc
aas
push
jo
mov
cmp
movs
rcr
pusha
popa
repnz
xor
push
int
retf
cli
je
cdq
div
pop
xchg
and
xchg
push
test
add
movs
lahf
sbb
enter
jne
xchg
lock
sbb
mov
or
add
mov
dec
mov
push
xchg
sub
nop
adc
nop
mov
push
cwde
dec
pop
std
dec
xchg
jo
iret
xor
xor
scas
and
outs
call
rcr
mov
mov
pop
xchg
sbb
cs
xlat
jmp
add
inc
push
(bad)
cmp
and
fcmovnbe
sub
cmp
aad
rol
or
and
(bad)
lock
inc
push
loopne
inc
sub
mov
test
and
stos
mov
mov
add
nop
arpl
xadd
movs
outs
test
inc
xchg
sbb
sbb
push
and
sub
mov
push
and
dec
shl
mov
mov
mov
add
cmp
add
sbb
test
fabs
daa
lods
loopne
in
dec
out
push
add
pusha
cmp
imul
(bad)
sti
jmp
and
es
mov
test
push
fwait
fwait
mov
jne
js
jno
add
hlt
(bad)
cs
in
jno
jecxz
fidiv
retf
cmp
xchg
mov
jne
out
add
test
loop
cdq
bound
xor
test
jl
outs
sbb
sbb
pop
fidivr
rol
cmp
cmp
jl
jne
(bad)
push
dec
xchg
sti
int3
repz
pop
dec
(bad)
pcmpeqb
mov
push
nop
mov
jo
inc
jne
mov
outs
pop
mov
pop
nop
sbb
adc
sub
clc
les
bsf
call
or
sbb
(bad)
mov
sti
push
and
jnp
mov
mov
add
inc
dec
push
repz
inc
popf
jns
xor
cs
mov
sub
sbb
test
ror
pop
jl
call
inc
test
rol
pop
movs
xchg
and
arpl
dec
mov
and
jl
cli
icebp
sub
push
(bad)
jb
jne
mov
xchg
mov
jne
dec
mov
in
push
call
mov
and
add
jno
mov
cmp
in
(bad)
xchg
mov
adc
mov
inc
dec
fstp
xor
movs
outs
fstp
(bad)
into
and
or
ficomp
add
idiv
je
add
adc
sti
arpl
movs
jecxz
bound
or
sahf
lea
lods
cmp
out
clc
adc
cs
hlt
ins
dec
dec
pop
sub
repz
dec
test
cmc
ffree
pop
add
add
mov
jecxz
add
add
sbb
cmp
jecxz
and
jo
int
jmp
seto
iret
ds
xor
rcr
fstp
fld
jmp
das
retf
aad
sbb
pusha
fs
sbb
aam
shr
fstp
test
fistp
xor
xor
push
xchg
or
cmp
test
ins
les
inc
push
dec
aas
xchg
add
mov
mov
dec
xchg
pop
shl
loopne
mov
xor
lock
mov
arpl
jns
sbb
inc
sbb
mov
js
pop
test
cmp
nop
xor
fsub
fcom
dec
popa
mov
jle
int
inc
pop
cmps
test
test
sbb
sub
push
ins
test
ds
pop
and
pop
ds
test
in
cmp
mov
pop
adc
xor
lods
cmp
xchg
rcr
add
push
nop
mov
dec
dec
and
pushf
adc
js
lahf
cmp
sbb
jmp
out
sbb
and
cs
push
cld
(bad)
sub
push
xchg
sub
and
pop
push
hlt
inc
sub
sbb
mov
call
add
sahf
outs
mov
scas
push
sti
test
and
add
push
push
mov
dec
push
pop
popa
mov
movs
fcmovne
lock
or
aaa
cmp
jmp
shl
vphaddsw
movs
xor
retf
inc
lock
inc
mov
fadd
leave
or
inc
xchg
sbb
push
cdq
aas
lds
xchg
lock
jbe
addr16
arpl
sub
or
sub
cmp
or
and
mov
add
sub
or
pop
es
daa
loopne
sbb
repnz
add
adc
pop
popf
xor
enter
push
add
add
dec
or
pop
push
inc
icebp
mov
enter
sub
adc
mov
les
sbb
xchg
shl
stos
jo
and
test
and
jbe
lds
scas
add
and
fldcw
cmp
lock
mov
dec
ss
lock
xor
repz
repz
lods
push
ss
scas
mov
xchg
dec
mov
imul
mov
les
les
sar
or
xor
xchg
not
sbb
push
sbb
adc
or
or
cmp
push
cmps
mov
das
jmp
push
dec
cdq
adc
jl
cmp
sbb
retf
int3
or
stos
gs
sbb
shr
leave
cwde
call
jmp
lods
in
mov
add
mov
add
test
inc
out
jnp
clc
xchg
fisub
ror
aas
dec
xchg
jmp
mov
mov
arpl
es
ja
leave
add
retf
or
adc
jge
push
pop
(bad)
test
(bad)
pop
mov
sub
adc
adc
add
mov
dec
pop
sub
inc
mov
shr
jg
inc
xor
sbb
movs
and
dec
or
inc
test
rol
cli
ins
popa
rcr
sbb
hlt
into
pop
lea
hlt
vmread
sbb
cmp
and
add
adc
lods
push
ficom
sbb
pop
mov
jl
mov
push
add
sub
and
mov
and
nop
or
je
mov
adc
pusha
or
jp
add
adc
(bad)
pop
jne
sub
adc
adc
or
xchg
shl
inc
jp
xchg
sahf
and
push
dec
loop
cmp
and
sbb
sub
cdq
or
or
cmp
rcl
inc
call
inc
or
adc
add
inc
cmp
dec
cmc
dec
cmp
je
or
adc
or
inc
pushf
call
jmp
mov
inc
or
popf
add
jmp
test
push
adc
pop
lea
por
mov
pop
mov
call
sahf
adc
mov
inc
jmp
sbb
jmp
in
mov
or
dec
mov
add
aad
xor
iret
pop
sub
add
and
xchg
cs
adc
test
jbe
clc
imul
sbb
stc
and
xchg
mov
and
mov
lea
loopne
and
js
jo
mov
cmp
adc
sbb
aaa
adc
xor
and
or
sbb
or
jmp
or
call
mul
fcomp
sbb
add
or
out
pop
add
sbb
mov
push
xor
mov
fs
xor
out
lock
int
push
mov
cs
pop
rcr
add
add
push
add
adc
mov
adc
retf
sti
sbb
imul
cmp
mov
rcl
xchg
and
sbb
inc
fistp
sub
sti
mov
mov
adc
shr
jmp
xchg
pop
inc
add
add
or
sahf
push
aaa
and
xor
test
(bad)
sti
out
imul
addr16
dec
xor
jae
mov
or
aad
dec
shl
mov
push
push
cmp
jmp
pop
xor
jge
cmp
out
xor
leave
sub
sbb
test
call
fsubr
loop
call
lods
les
push
data16
cmp
mov
adc
pop
dec
xor
mov
pop
cwde
pop
nop
dec
icebp
in
pop
fisubr
add
cmp
cwde
addr16
int
test
add
mov
je
lea
nop
mov
and
mov
icebp
fmul
add
push
lahf
mov
cmp
lock
dec
ja
nop
xchg
imul
adc
xor
and
nop
xchg
(bad)
push
fisub
xlat
inc
mov
push
movs
sub
add
mov
sub
sbb
scas
fsubr
mov
loopne
dec
adc
int3
or
ret
int3
(bad)
jp
cmp
jae
add
(bad)
jno
hlt
push
test
ficomp
add
add
jb
(bad)
and
or
xchg
retf
in
pop
pop
pusha
push
inc
dec
mov
sbb
jne
mov
sub
pop
out
pop
cld
dec
or
es
or
adc
lods
shl
xchg
retf
and
add
call
cmps
movzx
das
sbb
add
cmp
aaa
add
jo
mov
pop
popf
inc
push
stc
fsubr
pusha
je
inc
xchg
push
call
je
out
push
test
pop
data16
neg
adc
aam
cmp
jle
and
mov
mov
xchg
pop
xchg
cmp
push
pop
push
mov
arpl
mov
add
or
ds
dec
push
call
xor
push
mov
dec
les
fadd
enter
add
in
jne
pop
rcl
mov
cs
jne
cmp
push
jecxz
dec
jmp
push
or
cmc
mov
fst
push
sbb
(bad)
aam
rol
out
jbe
push
dec
ja
shl
xchg
in
fld
(bad)
jbe
xchg
shl
js
add
cmp
jbe
mov
adc
inc
adc
aas
inc
mov
sbb
(bad)
fsub
js
push
or
mov
cmp
cmp
jb
mov
cmp
adc
fld
add
add
mov
fstp
cmp
in
sti
imul
and
add
xor
mov
inc
fld
fcomp
sti
add
add
fstp
pop
fwait
shr
pop
imul
das
adc
adc
and
dec
pop
sub
sbb
addr16
or
movs
mov
movs
xchg
outs
inc
add
mov
pop
pop
push
test
inc
ret
add
or
adc
push
sbb
cdq
mov
add
or
movs
xor
retf
inc
adc
std
cmps
sbb
or
inc
imul
inc
(bad)
fmul
jge
bound
add
sub
rcr
add
in
aad
cmp
push
pop
mov
push
jmp
and
inc
ins
test
jp
sar
mov
inc
sub
add
and
iret
dec
cmp
mov
mov
dec
arpl
lahf
mov
sbb
add
es
add
push
and
and
dec
add
mov
neg
push
sti
mov
hlt
adc
clc
push
aam
inc
sar
pop
mov
dec
lock
mov
inc
or
test
jnp
sar
mov
aas
mov
add
addr16
jmp
mov
mov
or
es
int
out
dec
stc
in
in
ins
push
cwde
adc
pop
inc
sub
jb
cmp
loopne
push
lock
or
inc
ds
or
add
shr
jmp
and
sub
push
or
dec
pushf
pop
add
and
in
shl
nop
add
cmp
rol
mov
mov
inc
dec
ret
pop
xchg
clc
push
retf
or
iret
hlt
int3
add
ret
es
or
bound
sahf
ror
test
or
and
cmp
mov
out
push
xchg
cmp
std
or
add
cld
mov
les
xor
cs
cld
nop
or
mov
xchg
dec
sub
int3
or
xchg
imul
xchg
ror
fmul
icebp
rcr
cmp
adc
aam
pusha
mov
and
add
popf
pop
or
lock
aas
push
and
mov
ret
xor
sbb
push
iret
jecxz
mov
aaa
mul
add
movs
mov
xchg
js
test
inc
rol
shl
sub
pop
push
fmul
fst
sbb
test
sub
and
sub
xlat
rcl
pop
out
push
sbb
retf
lds
xor
sub
adc
pop
fadd
push
stos
add
punpcklwd
inc
sub
sub
mov
hlt
mov
aam
lahf
ror
and
jmp
ss
inc
dec
or
mov
movs
add
or
cdq
or
push
add
inc
dec
xchg
inc
sub
mov
cs
sbb
das
mov
or
cdq
cmp
adc
push
mov
sbb
and
loope
hlt
jp
pop
push
imul
loopne
dec
rcr
test
cld
ss
mov
jae
ins
pop
jmp
sub
pusha
cwde
push
int
mov
fild
sub
mov
lods
repz
(bad)
stos
adc
ror
adc
cmps
push
sub
adc
jmp
or
lahf
outs
hlt
iret
in
jmp
pop
add
inc
sbb
push
push
pop
rcl
fdivr
sub
lea
or
xchg
fst
dec
inc
stos
lahf
xchg
xchg
jb
push
pop
inc
das
shl
sbb
sbb
sbb
and
movs
or
mov
lods
sahf
add
shl
jnp
pop
js
xchg
mov
adc
sbb
test
imul
sbb
and
push
adc
xchg
push
adc
mov
bound
dec
and
push
adc
lahf
mov
sar
pop
push
pop
bound
out
cs
dec
out
sbb
mov
cmp
jge
int3
adc
shr
or
add
(bad)
adc
int3
int3
inc
or
push
ja
jmp
cdq
xor
inc
mov
loopne
add
sbb
fcomp
sub
movs
shr
out
jmp
je
add
mov
fmul
cwde
cld
sub
jle
push
outs
adc
or
jns
test
in
sub
(bad)
call
xchg
clc
test
lock
add
inc
outs
test
jo
push
sti
(bad)
and
add
in
add
js
adc
mov
fimul
sbb
dec
push
push
push
ss
xchg
nop
(bad)
in
or
sbb
jnp
pop
fsubr
pop
into
bound
cdq
js
or
int3
data16
inc
sbb
data16
cs
add
rcr
lock
outs
inc
xor
rcl
mov
sbb
jmp
and
retf
push
jno
mov
in
xor
mov
and
lea
lods
gs
icebp
(bad)
jmp
popa
adc
imul
jecxz
(bad)
push
fdiv
sub
add
push
add
mov
cmp
xchg
lea
mov
mov
ss
inc
push
cmp
mov
shl
push
pusha
pusha
and
adc
xchg
jmp
shl
or
and
add
mov
mov
and
lods
jl
xor
or
lods
hlt
test
xor
xchg
add
mov
or
and
mov
mov
xor
fiadd
or
lea
or
jb
pop
push
or
jne
mov
mov
adc
push
outs
add
pop
cmp
mov
dec
add
movs
xchg
rol
jno
pusha
pushf
xor
data16
sbb
mov
mov
cmp
sbb
ins
movs
pop
adc
(bad)
fidivr
sbb
cli
xchg
add
(bad)
int3
add
adc
test
add
dec
push
xchg
lea
mov
cmp
cmp
add
pop
cmp
sub
rol
or
cmp
or
shl
mov
ss
adc
cmp
cmp
je
leave
mov
sbb
in
dec
pop
js
sbb
adc
movs
cdq
fist
pop
jne
(bad)
add
xor
dec
xchg
out
loopne
cmp
loopne
inc
adc
sbb
dec
sbb
jnp
inc
repz
jne
mov
cmp
in
add
fstp
jmp
fnstsw
fist
push
pop
les
and
ret
ds
or
inc
loop
sahf
mov
in
and
lods
add
cmp
and
mov
sub
imul
push
sti
pop
js
push
out
les
jmp
stos
or
cmp
cmp
sbb
js
dec
call
or
mov
adc
ja
or
jle
lock
lahf
movs
inc
test
xor
fadd
adc
pop
pop
sahf
adc
add
sub
and
les
xor
jb
(bad)
mov
or
jl
stos
or
in
out
and
jno
mov
jle
and
or
loope
mov
inc
xor
ret
leave
(bad)
movs
adc
jmp
add
pop
int3
add
jb
nop
dec
mov
inc
push
icebp
adc
mov
js
adc
pop
push
inc
xor
(bad)
cli
pop
push
scas
test
adc
mov
dec
adc
dec
pop
cmp
add
jp
add
inc
js
or
inc
cmp
into
mov
xchg
dec
and
xchg
mov
arpl
xor
push
add
push
bound
sbb
pop
clc
pusha
mov
adc
es
jne
cs
xchg
out
call
dec
mov
cmp
ret
xor
or
enter
out
xchg
xor
mov
and
jnp
jne
loope
rol
jmp
inc
sbb
es
sub
je
nop
lea
fs
mov
imul
mov
popa
mov
xchg
or
mov
push
and
or
xor
sub
pop
fwait
cmps
mov
movs
cmp
push
xchg
sub
cmp
xchg
ret
mov
lods
mov
hlt
adc
pop
pop
mov
loop
cmp
pop
cmp
ret
test
aas
sub
in
cmp
xchg
test
add
lock
inc
push
dec
leave
mov
inc
mov
add
inc
adc
shl
jns
add
mov
pop
ins
and
inc
add
int
rol
jge
cmp
push
je
add
bound
dec
adc
nop
pop
dec
xor
sbb
loop
add
jne
pushf
mov
les
or
in
sahf
cmp
adc
aas
xor
cmp
pop
add
xchg
mov
ss
inc
nop
push
test
mov
fsub
sub
call
sub
pop
adc
sub
ret
cwde
lea
cmp
adc
cs
sub
rcr
xchg
mov
ret
inc
push
or
fneni(8087
inc
ret
mov
and
not
ds
dec
mov
xor
bound
push
bound
lea
push
jae
test
xor
stc
mov
jae
test
and
or
cmps
daa
test
adc
jb
lods
je
cmp
sbb
je
mov
or
sub
add
inc
or
repnz
daa
test
push
cmps
and
xor
jmp
les
push
add
or
push
add
add
sbb
xor
rcl
shl
mov
out
test
test
or
cmp
or
test
fdiv
sub
dec
ret
push
das
xchg
add
mov
loopne
push
pop
adc
add
mov
inc
rol
popa
mov
sahf
shr
jo
xchg
sar
cmp
aam
je
push
mov
or
dec
push
mov
adc
and
xor
enter
fcomp
xchg
dec
sub
in
and
jo
stc
jecxz
jge
jmp
ror
lds
push
xor
push
cmp
shr
ror
or
inc
call
and
add
repnz
mov
mov
add
imul
das
outs
adc
icebp
pop
inc
fs
je
pop
lock
pop
dec
ret
icebp
stos
push
iret
xchg
fs
retf
cmp
and
hlt
push
lahf
cwde
ja
mov
inc
lods
or
and
fcom
movs
mov
adc
add
jne
je
and
xchg
mov
movs
aaa
loopne
adc
nop
shl
add
pushf
call
nop
lock
sub
inc
xchg
push
xchg
push
(bad)
repz
mov
hlt
pushf
mov
xor
cs
inc
lea
pop
jae
add
push
jmp
mov
xor
xor
sub
or
push
imul
dec
pusha
adc
pop
mov
mov
and
jl
sbb
adc
jbe
icebp
je
into
push
int3
adc
pop
jae
lods
shl
stos
fs
sub
push
(bad)
sub
pop
in
xchg
mov
cmp
test
(bad)
hlt
or
sbb
dec
sub
xchg
shl
mov
cmps
cmp
and
xor
jmp
push
add
clc
fisttp
sub
xor
shr
dec
sub
xchg
jge
dec
and
retf
mov
ja
enter
movs
push
push
movs
ins
adc
shl
dec
push
sub
and
push
sub
push
adc
sbb
add
popf
xor
mov
and
xor
repz
fwait
lock
jmp
and
xor
sub
loopne
adc
scas
jo
es
dec
pop
or
shl
dec
jae
lock
clc
aaa
clc
lock
xor
int3
sub
outs
push
int
aaa
sub
inc
sbb
or
cmp
xchg
sub
jge
inc
fdiv
or
and
dec
push
out
fstp
inc
test
ret
xor
mov
mov
data16
or
out
inc
jg
(bad)
les
jne
sub
jmp
push
daa
fadd
adc
sbb
jo
xor
dec
push
pop
cdq
ds
scas
cmp
push
hlt
push
test
stos
xchg
xchg
sbb
add
push
xchg
pop
gs
inc
push
test
dec
jns
test
aaa
test
and
dec
cmc
das
dec
and
cmp
arpl
or
mov
push
xchg
fldcw
push
mov
cmp
mov
cmp
aam
js
nop
mov
sbb
clc
push
pushf
retf
shr
ror
hlt
scas
(bad)
dec
add
fsub
cmp
cmps
push
push
jg
lea
cmp
xor
daa
(bad)
adc
mov
(bad)
in
mov
sbb
movs
push
fsub
sbb
aam
xchg
push
adc
fisubr
movs
(bad)
mov
lea
push
daa
push
dec
ror
mov
fstp
dec
jmp
mov
jle
nop
gs
mov
mov
pop
sbb
mov
gs
push
xchg
add
push
cli
lock
lock
adc
inc
dec
adc
mov
and
fimul
xchg
int
sbb
and
cmp
(bad)
sub
add
aaa
(bad)
push
xchg
faddp
dec
movs
mov
test
inc
stos
pop
inc
push
test
mov
adc
sbb
add
nop
or
mov
in
push
and
cmp
ins
and
xchg
push
jns
adc
and
stc
or
aam
push
and
imul
and
xchg
dec
cmps
dec
mov
(bad)
addr16
push
jp
idiv
(bad)
mov
pop
sub
push
lea
pop
aaa
push
fdivr
xor
cmc
inc
mov
fistp
addr16
aas
fstp
loopne
std
xchg
ror
sub
push
jo
test
mov
js
push
jbe
or
add
clc
push
lahf
adc
loope
int3
std
or
cmp
lds
dec
retf
sbb
pushf
cmp
xor
dec
pop
push
dec
js
call
lea
sbb
mov
je
sbb
or
aam
out
shr
sub
pop
add
ret
daa
jno
jb
cmps
out
xor
and
jnp
jmp
lea
imul
xchg
aam
idiv
add
mov
mov
aad
mov
adc
mov
lea
adc
pop
lea
test
cs
lea
aaa
pop
test
aas
cdq
and
add
sub
push
or
shr
or
in
mov
or
mov
inc
mov
test
cmp
push
mov
call
adc
jecxz
sbb
das
sub
xlat
inc
(bad)
xchg
int3
jae
pop
inc
fiadd
inc
pushf
pop
inc
pop
or
mov
adc
icebp
out
pop
fimul
mov
pop
or
cmp
fwait
cmp
je
cmp
dec
mov
xchg
add
push
stos
pushf
cmc
scas
sbb
bound
or
std
adc
pushf
(bad)
jnp
rcr
test
mov
test
(bad)
(bad)
pop
xor
(bad)
out
mov
ret
pop
jne
aad
push
xor
jb
sar
aad
add
or
dec
(bad)
jne
push
or
or
imul
and
cmc
fld
adc
dec
in
jle
rep
mov
mov
cmps
shr
loopne
or
or
xor
jmp
adc
rcl
imul
div
pop
jne
and
pop
push
mov
sub
je
push
push
pop
jp
mov
lock
test
push
imul
dec
fimul
sub
pop
cmp
or
loopne
imul
jns
mov
jle
repnz
lods
add
sbb
clc
push
push
dec
pop
mov
sbb
and
(bad)
mov
push
ret
push
sub
fisubr
push
xor
movs
std
pushf
mov
push
add
test
cdq
xchg
mov
xchg
clc
dec
fld
or
xchg
out
test
dec
dec
dec
dec
test
lods
add
xor
lods
repnz
pop
sahf
or
test
jbe
je
enter
xor
pop
sub
inc
xchg
mov
call
(bad)
adc
jno
cmp
out
out
and
add
in
adc
mov
push
lods
push
xchg
adc
and
shl
ds
mov
lock
js
je
cmp
mov
das
in
push
dec
jnp
ins
loopne
dec
retf
nop
test
cs
ret
mov
push
sub
movs
hlt
mov
xor
lahf
adc
int3
adc
test
sub
jle
push
call
sar
pop
aam
and
cmp
inc
xor
push
ss
imul
retf
enter
or
popf
push
mov
mov
inc
pop
stos
push
stos
push
mov
jmp
dec
push
dec
aad
and
mov
add
mov
push
dec
js
add
and
adc
enter
xor
add
inc
loope
mov
push
scas
pop
add
pop
pop
dec
stos
inc
xor
xor
add
or
fcmovu
mov
jl
mov
or
mov
(bad)
xchg
mov
xor
mov
fmul
sbb
lock
sub
add
movs
imul
or
clc
stos
pop
fisttp
mov
push
jne
sbb
push
adc
icebp
aas
push
jo
jbe
adc
xor
addr16
sbb
ret
loopne
loop
and
and
popa
int
add
push
movs
push
xor
adc
xor
mov
sbb
pusha
cmp
cvtps2pd
push
push
mov
ss
xor
and
xchg
or
xor
jl
push
cdq
adc
ret
adc
or
rcr
add
adc
outs
or
cdq
int3
or
das
mov
ins
xor
mov
xchg
mov
sub
cmp
lea
aas
add
dec
icebp
mov
and
movs
push
add
popf
dec
mov
xchg
jno
xor
nop
ret
mov
(bad)
ins
sbb
(bad)
cmp
pop
sbb
(bad)
mov
push
ja
xchg
add
adc
aam
sbb
and
ins
or
loopne
or
inc
xchg
outs
jnp
ret
dec
loopne
jns
ins
add
les
lea
inc
mov
cmp
xchg
ret
inc
ds
inc
bound
es
pop
xchg
sahf
(bad)
aas
nop
movs
pop
(bad)
in
push
xchg
aam
jb
and
xchg
cmp
int3
popa
dec
pop
rol
(bad)
sbb
mov
mov
or
xor
mov
int3
sub
and
rcl
and
lods
rol
adc
sti
xchg
imul
xor
sub
cmp
movs
(bad)
shr
test
mov
inc
mov
mov
jmp
les
pop
ret
ins
mov
inc
fwait
mov
aaa
adc
pusha
add
add
and
movs
xor
and
test
mov
and
push
dec
cmp
inc
add
mov
add
pop
test
pop
sub
inc
movs
pop
and
mov
mov
sbb
pop
cmp
xchg
jbe
dec
data16
and
sbb
add
add
add
pop
pop
add
cmp
dec
js
jmp
retf
pop
cmp
push
(bad)
dec
jb
push
xor
inc
push
and
pop
loop
ror
push
cmps
mov
xchg
push
pushw
pop
or
mov
(bad)
shl
dec
fisub
cmp
adc
loope
xor
les
add
sub
cs
mov
dec
jns
add
imul
cli
or
inc
push
xor
fs
xor
fstp
xor
pop
or
inc
or
adc
xor
test
xor
and
inc
adc
push
push
mov
adc
xchg
in
mov
imul
bound
je
pop
into
jns
lock
mov
dec
xor
loop
add
xchg
xor
iret
adc
mov
aas
lar
mov
sbb
clc
push
add
push
les
add
xchg
mov
adc
outs
test
and
push
sbb
(bad)
dec
fdiv
mov
daa
and
mov
sub
rcl
lahf
lock
mov
cmp
sub
cmps
or
push
add
adc
ficomp
mov
rol
or
sub
stos
pop
jno
xchg
stos
cmp
stos
jne
sbb
mov
ret
sbb
(bad)
mov
xor
sbb
sbb
and
push
outs
push
inc
nop
add
dec
xchg
out
adc
xor
or
push
or
add
lahf
(bad)
inc
xchg
pop
mov
lea
xor
fdiv
lods
shl
sub
sub
and
ja
adc
adc
sub
js
in
lock
mov
mov
xchg
lea
sub
loopne
inc
sub
push
inc
pop
or
add
mul
or
and
mov
icebp
or
or
call
outs
or
adc
adc
jle
or
and
sysret
mov
fsub
push
add
repz
push
xchg
mov
rcl
sbb
(bad)
push
cs
pusha
popa
add
or
pop
inc
pop
cld
test
sub
add
and
push
test
das
adc
jns
jmp
rcl
pop
push
std
push
mov
pop
or
pop
or
nop
push
cmp
or
fs
cmps
xor
or
nop
sub
or
xor
xor
mov
cmp
loopne
sbb
test
add
leave
loopne
xor
out
call
movs
test
call
or
in
inc
jne
cmc
loopne
movs
sbb
or
or
xchg
add
leave
sbb
add
or
sub
or
sbb
jae
ds
retf
nop
test
cmp
pop
pop
xlat
jb
dec
pop
(bad)
repnz
or
je
shr
test
mov
test
ins
rcr
movs
adc
xor
pusha
mov
int3
xor
or
fidiv
adc
nop
or
call
and
fs
sub
xchg
push
mov
mov
sbb
mov
mov
nop
aaa
in
das
or
sbb
xchg
dec
sbb
and
push
mov
test
popa
fs
lock
xchg
dec
rol
in
dec
adc
pop
push
inc
inc
adc
xor
sbb
xchg
mov
xchg
and
ins
sbb
loope
dec
jmp
iret
inc
or
adc
shl
jns
repz
cmps
pop
outs
adc
mov
loopne
inc
xchg
or
and
in
or
sub
dec
and
sub
dec
aam
popa
mov
pop
adc
xchg
cli
jb
jnp
(bad)
(bad)
stos
sbb
pop
xchg
xor
call
inc
ficom
fdivr
add
fisub
adc
or
mov
sets
(bad)
les
ins
out
or
aam
fbld
add
pop
enter
or
xor
aaa
or
lea
sub
aaa
inc
add
cmp
fadd
fist
movs
push
jo
pop
jno
mov
sub
fmul
jnp
ret
sti
(bad)
in
or
or
sub
or
add
add
adc
sti
or
jo
js
mov
lods
xor
xor
(bad)
push
mov
imul
xor
jmp
clc
add
inc
and
or
ret
(bad)
(bad)
bswap
sbb
sbb
test
imul
or
pop
sbb
mov
adc
fcom
in
sub
fistp
test
sub
cli
pop
mov
rcl
in
in
inc
adc
push
scas
jmp
sqrtps
and
or
int3
xor
ins
fs
xor
stos
ins
pop
aam
mov
and
cmps
add
int
inc
sbb
dec
add
(bad)
sbb
sbb
mov
xchg
jne
sbb
xchg
push
movs
imul
pop
pop
clc
sub
jecxz
shl
mov
push
in
push
sub
(bad)
mov
loopne
add
and
sbb
test
push
push
ret
sti
pusha
aad
or
jno
add
adc
mov
nop
outs
fadd
inc
in
(bad)
jmp
ds
mov
loope
mov
pop
lds
push
sub
xchg
cld
(bad)
shl
sbb
or
or
mov
adc
pusha
jge
ins
pop
shr
lea
retf
clc
ds
jne
push
leave
(bad)
arpl
dec
hlt
arpl
push
xchg
lods
xor
inc
mov
shl
ret
jno
int
sub
ret
aaa
mov
xchg
push
adc
or
mov
push
stos
movmskps
inc
push
inc
cmp
neg
dec
retf
cli
and
mov
fcmovnbe
mov
movs
pop
and
ins
pop
fadd
add
pop
and
lock
sar
jae
add
push
add
test
cmovbe
movs
lock
add
xchg
stos
or
aam
(bad)
xor
jge
push
push
mov
jmp
sar
sbb
and
and
push
mov
sbb
fwait
and
sub
jo
dec
push
pop
dec
cmp
push
loopne
movs
inc
push
dec
inc
ins
je
push
test
popf
mov
jmp
sub
and
jmp
pop
in
mov
icebp
clc
adc
sbb
rcr
inc
sub
sub
into
or
cmps
mov
call
aad
outs
xchg
in
jl
icebp
adc
test
and
pop
movs
mov
cmc
xor
adc
(bad)
cs
dec
bound
sbb
pop
mov
test
push
pop
push
push
adc
mov
cmp
in
inc
test
mov
push
or
mov
cmp
cmp
cmp
leave
iret
xchg
inc
mov
push
push
clc
adc
rcr
or
rcl
iret
je
(bad)
adc
lds
jne
adc
mov
or
push
(bad)
push
outs
xor
rcl
push
adc
mov
xor
jbe
sub
test
adc
mov
adc
and
adc
loope
jmp
clc
adc
xchg
xor
inc
in
inc
xor
stos
cmp
push
ret
mov
mov
and
in
outs
dec
and
aas
push
pusha
sub
push
xchg
and
cmp
sub
(bad)
and
pop
dec
add
cmp
push
dec
sbb
jbe
push
or
xchg
add
cmp
in
stc
sub
xor
sbb
jmp
sbb
mov
push
(bad)
fsubp
mov
repz
jmp
mov
stos
push
sbb
cs
adc
pop
cmp
dec
push
dec
je
xchg
fs
rcl
mov
jo
push
mov
dec
push
and
outs
fsubr
or
or
adc
xor
push
mov
add
imul
cmp
fcom
push
retf
popa
cmps
in
pop
and
sub
sbb
add
ins
cld
lods
sbb
dec
cmp
push
jo
mov
push
xor
in
mov
mov
mov
jnp
jo
test
sbb
and
jne
push
(bad)
setnp
mov
movs
ficomp
test
sbb
rcl
push
mov
adc
sbb
clc
xchg
cs
xchg
bound
and
mov
mov
stos
leave
add
mov
or
test
rcr
sub
push
mov
movs
adc
xor
jmp
push
xor
lea
test
and
bound
ficom
je
push
adc
xchg
mov
mov
lods
and
or
mov
aad
gs
add
or
adc
add
cmp
movs
and
sbb
sbb
adc
cmps
pop
xor
cwde
mov
mov
cmps
gs
loop
push
or
push
cmp
mov
dec
ror
out
les
and
jmp
call
clc
call
enter
adc
pop
add
adc
adc
push
sub
xchg
or
outs
adc
(bad)
ins
and
or
test
xchg
ret
nop
add
sbb
sub
mov
mov
adc
test
(bad)
push
stos
push
mov
retf
mov
dec
addr16
fld
test
push
add
loopne
or
add
scas
lock
push
rcr
adc
ins
jne
rcl
mov
push
pop
sti
test
test
lods
test
or
mov
shld
adc
xor
imul
sub
sub
jl
sub
or
je
sub
sti
arpl
sbb
sbb
jmp
les
and
clc
cwde
sub
nop
xchg
mov
mov
les
mov
sbb
cli
mov
pop
cmps
call
jecxz
and
sbb
add
xchg
lea
sbb
dec
imul
dec
fwait
and
fsubr
inc
or
jmp
dec
xchg
push
movs
xchg
(bad)
sar
add
inc
(bad)
jmp
fsubr
popf
mov
push
or
adc
stc
not
mov
pop
cmp
icebp
retf
std
inc
je
(bad)
sbb
sub
adc
push
sub
add
xchg
sbb
aam
dec
jnp
retf
je
std
rcr
jl
inc
adc
xchg
lea
movs
push
or
jo
xchg
arpl
pop
sub
inc
inc
push
xchg
(bad)
dec
adc
adc
fwait
rcr
sbb
shl
cmp
aam
mov
clc
adc
sbb
add
scas
repnz
and
inc
or
unpckhps
sbb
fmul
pop
xor
mov
xchg
retf
es
movs
pop
sub
sahf
mov
shl
shl
mov
shl
mov
leave
sbb
icebp
das
aaa
inc
dec
xchg
cdq
int3
scas
sidtd
les
inc
ret
cmc
mov
loopne
or
je
inc
enter
pop
pop
sub
mov
add
add
add
loopne
jb
push
enter
lods
inc
sahf
or
adc
pop
inc
lods
and
mov
aaa
imul
mov
ss
jg
jno
pop
jg
mov
cmc
in
movs
dec
and
(bad)
sbb
out
imul
lds
pop
aad
and
(bad)
icebp
pop
add
stos
fst
sbb
xor
sar
cmp
xor
push
adc
outs
jp
or
mov
jbe
jb
loopne
outs
mov
int
les
jno
pop
popa
mov
mov
jge
aaa
push
mov
xchg
inc
add
add
sbb
inc
xor
dec
addr16
inc
add
sub
or
sbb
mov
cmps
jb
mov
push
test
repz
sbb
and
rol
xor
daa
inc
fimul
xor
fsub
mov
mov
adc
push
sub
test
sbb
stos
xchg
add
xor
or
add
add
test
push
sbb
pop
pusha
bound
xchg
jl
push
cmp
add
jne
and
push
push
in
adc
sub
ret
add
cmp
xlat
neg
adc
cdq
out
pop
retf
cmp
pop
mov
(bad)
cmp
add
gs
and
add
inc
cmp
add
pop
inc
push
inc
inc
lods
sbb
cmp
loopne
dec
shl
dec
add
xchg
mov
mov
cmp
test
and
jno
call
shl
je
mov
cmp
test
or
js
pop
(bad)
movs
xor
push
je
or
into
fcmovne
push
pop
test
mov
test
dec
jp
lds
dec
rcr
adc
adc
adc
cdq
fs
dec
sbb
fs
dec
es
sub
dec
es
xor
dec
es
fs
inc
xchg
inc
nop
dec
xor
mov
add
jo
cmps
div
shl
hlt
cmp
inc
test
pop
add
pop
jmp
add
and
inc
push
nop
test
hlt
in
cmp
jl
les
dec
add
push
push
cmp
dec
mov
and
dec
and
popf
sbb
nop
sub
jns
pusha
inc
int3
or
pop
or
add
in
dec
or
xchg
fs
stos
jo
mov
pop
sar
lock
sub
and
cmps
pusha
push
jp
add
aad
in
add
dec
ret
cmp
or
cmp
fwait
jmp
cmp
push
cdq
in
jmp
add
sbb
xor
inc
data16
xor
push
mov
jecxz
add
dec
xor
rol
push
nop
push
mov
sub
aam
cdq
cmp
addr16
hlt
cld
sbb
xchg
xchg
fxtract
and
and
mov
mov
add
mov
ror
xchg
mov
repnz
push
sub
call
pop
mov
retf
xor
inc
dec
loope
dec
pop
jle
test
mov
xor
mov
aaa
add
sub
gs
push
and
mov
add
lea
mov
push
movs
dec
inc
rcl
mov
mov
int3
(bad)
cld
push
test
fist
or
mov
fistp
and
jecxz
xchg
push
mov
dec
in
into
mov
cwde
add
test
xor
shl
in
and
jl
adc
icebp
les
in
sar
push
les
enter
xor
iret
and
es
jle
test
rol
cld
add
test
jmp
dec
xchg
dec
jle
retf
and
adc
sbb
and
das
pop
addr16
or
pusha
and
int3
call
inc
ins
pop
xchg
sub
adc
retf
xor
pop
adc
jo
ja
or
adc
loop
xchg
call
fs
and
sub
sub
std
and
mov
cwde
xchg
call
mul
and
push
jp
mov
dec
les
lahf
pop
mov
inc
add
inc
ds
adc
ins
or
add
mov
xchg
mov
push
fcmovbe
dec
sub
inc
or
mov
inc
fwait
sbb
(bad)
fist
enter
ins
push
imul
mov
dec
in
push
out
fdiv
ins
out
push
lock
or
aaa
push
xchg
cld
cmps
in
ja
add
sub
inc
adc
or
int
ss
xchg
lahf
sub
jae
add
ficomp
xor
sbb
movs
cmp
push
push
xchg
(bad)
sub
not
and
and
cmp
or
mov
xchg
sbb
dec
cmc
mov
sub
jecxz
mov
cmp
or
ss
les
xor
or
push
adc
adc
mov
xchg
adc
mov
rol
sub
dec
lds
xchg
pop
xchg
pop
cs
cwde
add
xchg
and
sub
inc
sar
pop
xor
sbb
or
xor
mov
shl
jb
add
mov
mov
push
cmp
sbb
and
adc
repz
push
(bad)
cld
sub
mov
sub
shl
inc
lahf
movs
out
mov
inc
push
pop
ja
fist
push
push
sub
addr16
adc
mov
sbb
add
repz
out
adc
sbb
push
das
or
imul
in
ret
fnstenv
icebp
xchg
mov
pop
add
mov
sti
dec
enter
into
loope
mov
mov
test
mov
push
pop
push
push
sbb
inc
lods
data16
jnp
push
or
fwait
aaa
xchg
inc
(bad)
add
pop
gs
je
add
adc
pop
jne
add
fild
inc
xchg
adc
xchg
xor
pop
outs
mov
pop
icebp
or
or
and
adc
mov
das
pusha
dec
lea
call
stc
adc
repnz
fisttp
add
add
adc
jecxz
lds
or
inc
add
sbb
dec
adc
fst
fst
adc
pop
dec
jge
mov
rol
scas
or
mov
push
adc
xchg
mov
daa
add
dec
or
popa
clc
ins
sbb
pop
and
out
inc
mov
pusha
ret
push
sub
outs
jae
call
and
mov
xchg
lods
imul
inc
fmul
jae
or
pop
ins
ret
xchg
mov
arpl
test
jmp
add
scas
add
mov
pop
add
sbb
jge
pop
mov
inc
and
jmp
xor
and
sub
cmp
cmp
sbb
push
jle
xor
add
adc
jns
push
mov
xchg
add
inc
push
cmp
and
inc
push
mov
out
sub
clc
jmp
lock
add
or
int
xor
rol
sub
fs
mov
add
arpl
jo
mov
sbb
or
(bad)
aam
add
not
and
gs
aam
pop
and
cli
popf
(bad)
dec
das
in
pop
aam
int3
add
loope
dec
dec
add
inc
popf
dec
push
jae
xchg
push
ret
sub
and
or
clc
fiadd
push
nop
push
push
push
enter
pop
fdivrp
add
mov
sub
jae
push
lahf
adc
push
mov
mov
shr
sub
cmp
adc
enter
jmp
arpl
push
test
xor
test
test
add
xchg
pop
jae
inc
nop
leave
les
and
dec
mov
out
xchg
gs
mov
ret
sbb
pop
dec
loopne
push
or
dec
jmp
mov
dec
dec
sbb
sub
mov
or
inc
mov
or
jp
push
dec
pop
lea
and
add
or
push
push
inc
push
pop
adc
mov
sub
push
out
outs
inc
and
xchg
push
cmp
adc
ins
adc
lea
(bad)
scas
and
es
loopne
adc
push
test
out
loop
mov
adc
and
sbb
mov
lock
lds
cld
push
and
sbb
in
mov
jae
test
jmp
pop
test
hlt
sbb
lock
loop
iret
xchg
data16
shl
sbb
or
and
pop
into
shl
ret
js
jle
xchg
ins
das
adc
mov
sub
push
dec
adc
outs
rol
push
cwde
adc
lahf
and
mov
in
pop
mov
push
fdiv
jmp
jb
jnp
loop
push
data16
push
mov
out
mov
and
jmp
or
fs
sbb
xor
or
xor
test
cmp
push
or
lea
mov
popa
test
call
test
ret
xchg
push
cmp
and
mov
add
adc
cmc
pop
or
repz
jl
xchg
loopne
(bad)
add
add
je
dec
rcl
ins
out
push
loopne
scas
add
(bad)
mov
xor
shr
shl
lods
inc
imul
push
sbb
(bad)
cli
or
mov
cmps
add
fwait
xor
ja
pop
cdq
lods
dec
push
xor
mov
xchg
or
jmp
adc
jno
loopne
pop
jno
jno
and
mov
loope
imul
inc
repnz
retf
xchg
and
adc
test
xor
call
arpl
adc
dec
aas
add
data16
and
sub
dec
push
lods
adc
nop
fadd
pop
push
push
xchg
inc
es
mov
in
push
push
ins
and
sub
and
and
or
retf
mov
sub
sub
cmp
ret
or
mov
test
scas
scas
rcr
mov
jns
sub
jae
jl
mov
sub
jne
loopne
sub
jo
scas
push
adc
aam
xor
dec
inc
gs
sbb
ja
sub
cmp
(bad)
lods
jmp
pop
nop
out
add
mov
jge
mov
fidivr
push
xchg
inc
inc
fs
aam
rcl
fld
mov
in
mov
push
icebp
jmp
sbb
test
add
cmp
and
add
(bad)
leave
add
mov
push
mov
cmc
ror
xor
leave
add
mov
jp
sub
jne
adc
(bad)
in
ret
mov
out
rcl
jno
add
jmp
mov
mov
adc
cmp
adc
leave
mov
sub
test
add
pop
adc
xor
movs
jb
in
sub
mov
dec
cs
mov
sbb
xchg
dec
pop
sbb
adc
lods
imul
sub
ror
pop
push
imul
push
sub
lods
nop
mov
int3
sub
mov
in
sbb
cmp
adc
and
ret
adc
lods
and
sub
sbb
mov
rcl
shr
ror
push
icebp
iret
and
dec
jg
rol
or
stc
int3
cmp
push
dec
mov
and
mov
sbb
out
repnz
les
push
mov
ret
dec
sub
dec
adc
xor
mov
pop
xor
cmp
xor
lea
mov
xor
xchg
fstp
dec
pop
and
xchg
xchg
pop
ds
and
das
and
inc
xor
and
pop
xor
or
xchg
hlt
and
sbb
sbb
inc
sbb
mov
push
cwde
sbb
movlps
test
push
inc
inc
inc
imul
adc
pop
outs
cmc
push
adc
stos
and
es
psubsb
mov
cmp
cmp
and
adc
xor
fs
retf
hlt
sub
jo
mov
dec
sar
neg
aaa
inc
rol
bound
daa
jns
inc
xor
xor
dec
imul
mov
mov
cmps
jge
adc
push
jg
or
inc
(bad)
je
pusha
ss
fbstp
and
dec
fdiv
movlps
mov
mov
pop
ins
test
dec
jg
clc
sbb
push
pavgw
cmp
ret
or
and
outs
(bad)
or
sbb
hlt
add
pop
les
push
mov
xor
cmp
dec
add
push
push
jo
pop
inc
cdq
cmp
push
test
push
jmp
jne
add
pop
mov
sub
inc
nop
xor
sbb
sub
inc
stos
aam
adc
push
cmps
enter
push
inc
call
or
mov
or
ss
sbb
mov
loopne
mov
ins
dec
jmp
jb
frstor
push
cld
(bad)
or
sub
xor
nop
sub
ss
(bad)
push
xchg
and
outs
sbb
stc
lods
xchg
je
push
cdq
arpl
addr16
data16
mov
lahf
(bad)
out
lea
or
shl
ds
clc
sub
add
dec
movs
and
fwait
gs
gs
sub
test
movs
adc
les
ss
add
cmp
lods
cmp
or
sbb
pusha
sbb
jne
xor
enter
cmps
xchg
or
push
dec
fs
movs
add
cmp
or
sub
add
inc
ror
xchg
dec
rcr
test
push
xchg
rdpmc
adc
xor
jl
in
jb
push
cwde
rcr
xchg
xchg
retf
mov
(bad)
pop
popa
cs
push
adc
add
inc
inc
push
pop
repnz
aaa
sbb
xchg
pop
xchg
scas
ror
mov
cmp
cmp
cld
mov
jo
add
adc
sbb
adc
shr
pushf
(bad)
mov
mov
ins
jbe
ins
sub
dec
imul
sub
je
js
mov
adc
retf
push
adc
sbb
in
mov
bnd
fwait
jne
mov
rol
pop
(bad)
xchg
nop
or
jecxz
jbe
add
jnp
and
jl
adc
loopne
add
push
nop
or
jbe
cwde
inc
cmp
and
or
shl
daa
adc
stos
data16
mov
mov
mov
jb
add
fadd
outs
sub
push
xor
inc
cmp
adc
xchg
xor
fs
mov
fst
sar
jo
xchg
fs
adc
cmp
adc
imul
xor
xchg
mov
mov
adc
sbb
push
xor
pushw
mov
pop
aam
jmp
lds
test
push
inc
enter
ins
or
gs
jo
adc
mov
add
aas
inc
or
mov
add
aam
add
xchg
scas
add
push
(bad)
icebp
or
or
push
js
dec
outs
jmp
mov
mov
cmc
nop
cmp
add
in
mov
scas
call
(bad)
bound
mov
(bad)
fsubr
sub
or
xor
data16
push
adc
loopne
scas
or
adc
ins
lahf
fs
mov
call
or
add
pop
push
hlt
aam
dec
jo
into
sbb
add
push
inc
addr16
ror
arpl
mov
imul
add
xor
or
(bad)
add
or
add
inc
aam
fadd
adc
push
pop
adc
add
aaa
pop
push
sub
and
and
add
pop
mov
or
xchg
push
jle
mov
aam
jno
les
scas
add
fadd
cmp
add
addr16
and
ss
(bad)
adc
call
xor
mov
popa
push
adc
push
or
xchg
je
pop
xchg
je
dec
cmp
test
sbb
sub
addr16
mov
sub
loopne
xchg
pop
adc
inc
pop
add
mov
stc
xlat
call
mov
jecxz
add
adc
sub
lods
dec
push
and
ds
push
pop
xchg
loopne
je
mov
mov
(bad)
daa
xchg
sbb
or
ror
sahf
int
add
inc
xor
test
aam
add
imul
push
aam
es
adc
jl
pop
pop
arpl
adc
sub
mov
cli
ret
add
dec
repnz
sub
retf
fbld
push
scas
mov
and
inc
add
sbb
ror
mov
popa
test
push
lock
imul
hlt
pop
test
inc
xchg
cmp
neg
in
lods
in
js
add
shrd
fist
xchg
(bad)
call
loopne
push
add
add
or
(bad)
cmp
and
ins
enter
ins
xchg
cdq
push
pusha
mov
nop
shl
inc
cmp
xchg
fdiv
les
ins
in
jo
dec
loop
mov
add
ins
rol
and
add
stos
scas
sub
push
or
sub
ins
jp
cmps
or
mov
dec
shr
fs
je
sbb
xor
fadd
and
mov
pop
popf
cs
push
and
jp
adc
xchg
int3
shl
nop
jge
fs
add
jmp
mov
add
(bad)
sub
xor
xchg
xor
lock
rcl
dec
les
adc
lea
add
popf
mov
or
dec
and
imul
rcl
cli
popa
mov
sub
and
add
in
call
xchg
xor
adc
or
add
jne
xor
sub
shr
and
adc
jl
jo
iret
das
or
add
(bad)
cmp
mov
pop
push
int3
(bad)
mov
add
add
sbb
outs
rol
sub
sub
push
sub
push
jmp
bound
pusha
movs
and
jecxz
xor
in
add
jb
mov
lock
call
mov
jmp
inc
mov
push
not
dec
mov
or
je
inc
sub
aad
pusha
hlt
mov
cmp
dec
jmp
mov
nop
mov
fnstsw
cld
xchg
sbb
or
jno
sub
fadd
xchg
data16
adc
sub
ins
sub
ins
loop
pop
xlat
popa
xor
imul
aam
push
inc
test
pop
repz
cli
push
inc
jl
sbb
push
inc
push
lea
cmp
ss
cdq
sub
or
int3
jmp
or
popa
dec
adc
repnz
mov
jne
je
jno
cmp
je
fcmovbe
push
cmc
mov
push
mov
inc
in
jbe
cld
xchg
mov
mov
push
xchg
lods
push
jae
(bad)
or
xchg
cmps
repnz
test
hlt
cli
add
pop
in
cld
ins
push
retf
add
fcmovbe
jle
push
push
add
cmp
jmp
xchg
jmp
mov
ins
int3
sbb
ror
jo
dec
sbb
mov
cmovle
mov
js
jl
lods
push
sub
inc
aas
cs
lds
sbb
xchg
es
pop
data16
int3
and
xor
lods
pop
jmp
inc
pop
inc
mov
mov
cmp
cmp
adc
je
jo
jecxz
in
ins
push
ins
push
jbe
adc
mov
nop
mov
ins
add
mov
fmul
lea
mov
test
push
push
sub
sbb
and
xchg
fadd
imul
ins
adc
add
mov
sub
idiv
pop
test
jl
push
js
add
pop
call
lock
jg
sar
std
lea
ds
hlt
mov
add
pmuludq
mov
cdq
clc
int
sub
std
lea
mov
cmp
lea
or
or
jle
xor
pop
daa
adc
hlt
mov
rol
cli
in
or
cdq
pushf
clc
add
test
xchg
or
addr16
(bad)
sbb
push
aas
mov
jecxz
and
sub
sbb
pavgb
les
add
xchg
xchg
outs
cmps
push
arpl
adc
mov
jmp
jo
add
dec
dec
bound
pusha
push
push
add
inc
pop
xchg
mov
(bad)
jge
shl
inc
jmp
rcl
popf
test
test
movs
aaa
dec
push
mov
std
adc
mov
call
int
mov
shl
cmp
push
lods
push
lods
adc
loop
sar
push
pop
in
xor
push
sbb
dec
imul
cmps
mov
movs
loope
int3
mov
cwde
sub
adc
sbb
(bad)
frstor
repz
mov
push
nop
and
in
cmp
rcl
and
or
xchg
pop
push
xchg
sbb
and
xlat
and
or
pop
mov
je
push
pop
or
das
inc
adc
mov
aaa
movs
sub
mov
pop
retf
sbb
sti
dec
inc
pop
sub
inc
cvtpi2ps
fdivr
pusha
lods
pop
jo
xlat
pushf
mov
jo
push
push
dec
lods
sub
adc
vphadduwd
push
adc
dec
cmp
pop
push
rcl
ss
push
test
stos
(bad)
neg
ss
xchg
cwde
mov
into
fdiv
ins
retf
push
sub
add
xchg
adc
push
fwait
in
outs
push
inc
and
jb
mov
inc
dec
das
dec
mov
inc
xchg
enter
pop
mov
xchg
cmps
aaa
rcl
hlt
xor
test
pop
adc
pop
ret
or
ret
sbb
inc
xor
sbb
rcr
mov
stos
mov
cs
(bad)
scas
or
ins
cmp
push
mov
pop
add
adc
mov
rcr
dec
sbb
add
ficom
lock
add
pop
call
sbb
inc
xor
adc
in
cmp
pop
jmp
rcr
lahf
xor
fnstsw
pop
ins
adc
add
push
sbb
sar
pop
or
mov
push
int
push
stos
jne
mov
mov
dec
sbb
in
in
mov
inc
push
add
inc
ror
cmc
fdivr
into
add
sbb
fisub
shl
push
jge
inc
add
sar
dec
repnz
nop
lods
mov
movs
push
das
and
movups
jge
in
test
and
aam
test
sbb
ret
scas
or
pusha
jge
cwde
ins
push
ins
imul
js
and
mov
push
xchg
bound
jb
cli
les
enter
inc
mov
movs
xchg
fimul
add
dec
scas
mov
mov
cmp
inc
and
jnp
xlat
data16
cmp
or
cld
xor
jge
add
adc
xlat
push
pusha
clc
or
push
lock
or
and
rcr
outs
push
mov
mov
imul
xor
push
mov
dec
push
es
dec
popa
jmp
sub
xlat
pop
lea
xchg
js
cmp
pop
ficomp
jne
add
dec
in
dec
sub
add
dec
or
sbb
push
gs
sub
pop
pop
xor
fidivr
jmp
xlat
nop
xor
lea
data16
add
adc
sub
sbb
enter
add
mov
es
in
(bad)
push
adc
and
arpl
and
and
add
or
xchg
or
mov
and
outs
or
mov
cmps
push
gs
xchg
movs
sbb
or
shl
dec
dec
(bad)
aam
rcr
add
push
jle
mov
mov
or
mov
dec
add
js
and
push
push
xor
jbe
cmp
sbb
push
test
mov
xor
test
sbb
lea
dec
mov
jge
mov
test
pop
mov
fisttp
pop
sti
fldcw
xor
pop
add
adc
dec
push
dec
adc
jle
mov
pop
add
add
add
add
cmp
mov
scas
or
jne
dec
inc
lea
lea
push
ins
inc
mov
or
jecxz
pop
jge
loopne
push
lock
cmp
dec
push
ins
dec
sub
das
jge
sub
ret
and
xor
dec
call
iret
ja
add
sub
mov
fstp
icebp
jmp
sub
fcom
shl
inc
es
popa
add
sbb
sub
xor
lods
pusha
enter
scas
sub
adc
jae
mov
push
cmp
ror
add
jp
cmp
mov
xchg
or
lea
adc
xlat
test
sar
popa
shr
movs
sbb
loope
dec
call
mov
or
ret
mov
daa
push
dec
adc
mov
xor
or
lock
neg
or
jne
inc
mov
(bad)
adc
and
sar
push
dec
jmp
xchg
xchg
and
jmp
fist
aaa
mov
sahf
ror
add
mov
loopne
(bad)
cld
inc
and
ret
test
or
inc
xor
mov
or
mov
sar
mov
add
hlt
and
inc
jle
ret
push
hlt
nop
mov
retf
jl
(bad)
cmp
mov
pop
sbb
fcmovnb
fiadd
daa
dec
jno
push
xchg
mov
or
rol
push
mov
sar
mov
mov
xchg
test
sbb
pop
sbb
pop
xchg
or
sbb
sbb
add
add
ret
sub
and
neg
sahf
test
and
test
enter
jb
cmp
pop
pop
push
xor
add
mov
mov
sahf
and
movs
or
fwait
(bad)
dec
xchg
test
mov
or
mov
cmp
adc
adc
dec
cmp
pop
adc
dec
mov
push
push
mov
add
jmp
push
es
aas
inc
pusha
movs
jb
(bad)
mov
add
xor
or
sbb
add
(bad)
sahf
adc
add
int
dec
ss
les
je
push
or
cmp
jo
inc
xor
inc
xchg
lea
cmp
adc
repz
pop
(bad)
test
xchg
mov
sub
jl
lods
cmp
outs
or
add
cli
shl
(bad)
movs
sbb
mov
lds
pushf
and
(bad)
icebp
jl
aaa
push
pop
inc
adc
jl
pop
mov
daa
pop
add
inc
pop
cmps
inc
loop
xchg
out
test
cmp
mov
sub
test
mov
dec
and
xchg
push
or
adc
pop
std
push
dec
dec
movs
pop
ins
lock
xor
fisubr
inc
loope
rcr
dec
sub
mov
adc
xor
imul
cmp
call
inc
popa
inc
add
push
jne
sub
jmp
pop
sar
jmp
das
add
cs
(bad)
sub
inc
addr16
ror
arpl
dec
sub
mov
inc
push
add
fwait
xor
out
inc
push
mov
cld
daa
jp
xchg
outs
add
das
or
hlt
adc
std
add
pop
jo
repnz
inc
(bad)
int3
mov
fstp
or
mov
or
xchg
dec
mov
les
ret
test
xor
and
adc
test
mov
add
shr
and
dec
and
in
adc
push
add
es
movs
scas
mov
push
arpl
icebp
lds
push
add
sbb
jno
inc
cld
cdq
mov
fcom
cmps
xor
sub
jmp
jle
push
lds
sub
movs
sub
add
push
mov
xor
inc
xchg
fidiv
cmp
jne
mov
sbb
push
sahf
and
dec
aam
fwait
and
and
sbb
push
mov
dec
sbb
mov
mov
jle
or
movs
mul
fld
imul
push
xor
or
repnz
loopne
xchg
mov
add
add
repnz
in
ret
repnz
adc
(bad)
xchg
fild
adc
pop
(bad)
sbb
cmp
adc
pop
adc
dec
stos
xchg
mov
(bad)
rcr
or
inc
(bad)
or
sbb
lea
test
ret
mov
mov
xor
movs
je
push
sub
and
mov
push
clc
or
and
adc
inc
scas
cmp
pop
jp
and
adc
ja
outs
adc
jno
mov
cdq
daa
loope
add
cmp
push
adc
retf
jo
pop
imul
jmp
pop
gs
adc
clc
arpl
jg
add
sub
daa
xor
xchg
cwde
sub
aad
inc
aaa
call
or
jge
lock
fist
mov
cld
dec
mov
adc
xchg
hlt
add
lea
aam
les
shl
js
jno
js
and
push
or
mov
mov
ss
or
or
sub
sub
fcom
pop
loopne
inc
imul
inc
adc
inc
je
inc
bound
or
imul
punpckhdq
inc
sbb
test
outs
test
sahf
(bad)
test
and
popa
es
cld
aad
adc
add
or
jle
dec
cwde
cld
aam
and
jp
jp
mov
ins
neg
(bad)
and
dec
and
pop
or
jl
dec
and
push
sub
mov
cwde
jne
gs
fild
retf
cmp
mov
jo
dec
lahf
add
lods
test
sbb
lock
mov
adc
(bad)
pop
xor
adc
test
scas
sub
sbb
add
add
sub
ins
hlt
jne
push
inc
pop
add
adc
inc
push
jne
inc
jmp
adc
sub
xor
push
shr
dec
loopne
or
jmp
shl
dec
sub
es
add
sbb
add
push
hlt
or
cmps
mov
repnz
pop
int3
xchg
int3
pop
mov
add
out
shl
push
ror
test
sbb
enter
ror
or
test
jnp
pop
sbb
cmps
push
(bad)
rcr
js
sbb
sbb
adc
in
jl
xor
ds
sbb
xor
shl
xor
adc
pop
rcr
push
inc
pop
shr
or
lea
cmps
ins
push
dec
(bad)
icebp
call
std
cld
in
push
test
shl
push
pop
xchg
sbb
or
or
xchg
add
or
jge
push
inc
jmp
inc
add
mov
fild
xchg
or
jmp
hlt
or
and
xor
imul
xchg
or
sbb
push
clc
xchg
mov
imul
or
imul
inc
sbb
cmps
jo
add
push
enter
loopne
sti
dec
adc
iret
sete
push
xchg
push
iret
pop
mov
test
call
add
and
or
shl
sbb
nop
add
push
sbb
mov
or
xchg
adc
cmp
rcl
sbb
fstp
mov
sti
cs
add
xchg
fld
clc
scas
movs
fwait
lods
dec
push
pop
sbb
inc
and
xchg
outs
inc
sbb
jmp
shl
or
popf
mov
jmp
pop
and
adc
ins
jns
adc
adc
mov
jae
dec
popa
inc
or
push
jle
mov
and
sbb
sar
push
adc
icebp
mov
or
test
push
and
loop
movs
pop
mov
or
push
cmpxchg
inc
adc
mov
es
mov
add
add
jmp
cmps
jbe
test
fisttp
push
rol
ror
adc
pushf
cmp
and
xchg
sub
xchg
aam
mov
or
push
psubusw
xchg
and
pusha
jg
xchg
(bad)
and
push
je
push
ss
das
mov
fnsave
adc
push
add
dec
cmp
loopne
or
sbb
push
or
and
rcl
and
test
daa
push
inc
call
popf
movs
retf
inc
enter
push
loope
shr
jne
int
adc
cmp
jecxz
sub
adc
repz
push
outs
adc
cdq
dec
in
ds
add
sbb
aas
loope
call
rcl
mov
xchg
rol
cli
inc
sub
mov
and
pop
fs
cmp
mov
dec
clc
ss
and
mov
or
fbstp
or
xchg
adc
add
pop
mov
jmp
add
loope
add
mov
adc
mov
test
cdq
movs
sub
push
outs
mov
mov
add
ins
jb
jne
xor
push
popf
xor
jge
das
mov
cmc
icebp
jmp
sti
inc
xchg
(bad)
cmp
mov
jle
jno
das
test
xchg
xchg
dec
sar
xor
nop
call
pop
out
cmp
lods
ret
and
pop
lods
sbb
dec
push
or
shl
lea
ret
jle
fcomp
xchg
or
inc
sub
xchg
lock
std
xor
and
push
and
inc
imul
add
mov
les
mov
mov
cmp
mov
imul
xor
sub
jno
mov
sub
inc
loope
mov
je
je
cmp
ins
ss
mov
push
dec
sub
sub
xor
pop
pop
stos
xlat
(bad)
inc
mov
not
pop
add
pop
inc
xchg
sbb
ret
addr16
dec
push
in
movs
xor
test
pop
stos
add
adc
push
scas
add
sbb
sbb
sahf
sub
call
pop
cs
or
es
clc
std
aad
pop
pop
int3
xchg
test
cli
imul
lea
mov
call
fisttp
dec
mov
rol
sub
xor
mov
xlat
add
sbb
pop
es
les
call
test
shr
push
(bad)
dec
gs
xchg
inc
imul
pop
or
rol
add
sub
mov
(bad)
inc
dec
dec
jg
xor
mov
mov
add
add
adc
mov
push
or
add
push
popa
pop
test
inc
jecxz
adc
jmp
xor
sar
or
mov
jl
push
mov
xor
in
sti
cmp
xchg
jo
enter
js
inc
push
sub
mov
add
das
call
sbb
mov
stc
and
lods
mov
pop
ja
or
das
jmp
inc
rcl
xor
xchg
xor
add
pop
and
pop
mov
dec
or
cmp
mov
pop
sbb
fdivr
inc
movs
test
mov
mul
push
out
push
fidivr
xor
pop
add
dec
and
mov
sbb
shl
shl
in
pop
push
pop
jmp
cwde
cld
or
cmp
xor
sar
mov
lods
in
aas
ds
and
dec
test
out
jle
mov
cmc
cs
cli
inc
add
inc
dec
fwait
and
cmp
out
inc
push
inc
pushf
mov
add
push
mov
mov
adc
adc
add
outs
enter
xor
pop
inc
dec
add
and
and
popa
arpl
inc
test
sub
xor
cmps
cdq
add
sub
sbb
or
mov
jne
and
mov
add
jo
int3
dec
pop
push
push
cmp
inc
dec
inc
push
daa
pusha
not
cmp
or
pusha
or
out
xchg
dec
test
test
or
les
jl
xchg
mov
cmp
test
mov
xlat
jecxz
push
movs
aas
adc
cmp
jne
les
leave
punpckldq
cdq
call
push
(bad)
mov
aam
push
and
add
jp
adc
and
pusha
or
inc
and
sbb
pop
mov
popf
dec
pusha
bound
sub
xchg
pop
sbb
add
ret
adc
in
ja
ins
xor
cs
repz
or
mov
stos
je
sbb
add
mov
scas
xchg
test
lock
mov
jne
adc
cdq
and
adc
imul
inc
add
add
push
or
jae
into
retf
ret
mov
outs
inc
pushf
and
xchg
lea
sbb
mov
js
mov
pop
mov
lock
adc
pop
jmp
ror
and
pop
mov
dec
arpl
mov
jbe
adc
adc
ja
jae
jbe
or
ins
adc
ret
and
or
add
mov
(bad)
(bad)
clc
push
dec
imul
not
loopne
adc
icebp
jmp
mov
loop
push
mov
enter
push
data16
pushf
hlt
pop
push
adc
mov
cmp
out
cmp
dec
pop
add
test
add
xor
ins
sbb
xor
xor
xor
dec
movs
mov
fidiv
lock
push
xchg
push
test
rol
and
sub
inc
rol
add
mov
sbb
imul
leave
jmp
mov
shl
dec
scas
or
fsub
test
dec
add
cmp
pop
fistp
ins
in
iret
outs
push
or
gs
pop
and
jno
nop
sub
adc
shl
scas
push
test
inc
iret
pop
xor
jb
aad
pop
fcmovnb
xchg
sub
push
loop
int
rcr
arpl
int3
jb
push
dec
int3
daa
inc
addr16
fiadd
icebp
or
imul
pop
cmp
fdivr
lock
popa
inc
push
imul
imul
lods
jae
loopne
or
mov
shr
and
les
popa
call
rcr
movs
mov
mov
fmul
je
sub
add
or
movs
shr
(bad)
lea
mov
push
cmp
inc
mov
pop
data16
mov
data16
repz
icebp
dec
rcl
xor
(bad)
sub
cli
nop
jnp
add
mov
ror
jmp
test
je
nop
or
stos
jne
mov
fadd
mov
mov
and
pop
leave
scas
outs
ror
add
cmp
int3
sub
mov
add
(bad)
fiadd
push
pop
outs
xchg
cmc
inc
ds
leave
and
push
mov
pop
mov
pop
jne
dec
push
out
add
pop
test
jns
call
sbb
call
je
jp
test
dec
mov
inc
push
mov
mov
sub
add
push
push
lods
les
cmp
sub
cmp
adc
sbb
iret
push
add
inc
aas
sub
cmps
rol
shl
adc
sbb
aam
gs
push
sub
js
je
pushf
icebp
imul
and
lock
mov
xchg
cs
push
pop
dec
mov
out
jge
sub
inc
es
outs
js
cmp
jge
or
pop
xchg
ret
mov
sbb
(bad)
(bad)
xchg
sub
push
mov
cmp
mov
test
and
jecxz
mov
or
or
or
call
mov
sbb
push
lock
(bad)
jmp
scas
add
mov
js
jno
mov
repz
and
add
movzx
xchg
and
rcl
ja
and
cmps
xlat
je
push
fcomp
add
es
rol
es
xor
sbb
rcl
cwde
inc
sbb
xchg
loopne
lds
xchg
and
and
inc
sub
sub
sbb
add
inc
popa
retf
jo
xchg
add
jmp
rcr
inc
add
fist
dec
mov
ins
gs
dec
xor
mov
ins
or
test
in
cmps
sti
ror
dec
in
rol
jmp
jp
adc
loopne
xchg
pop
push
or
mov
jne
push
or
xlat
dec
movs
dec
add
mov
push
mov
mov
shl
pop
adc
xor
pop
jbe
into
stos
mov
outs
addr16
shl
or
fmul
pop
or
inc
in
test
pop
movs
and
push
shl
dec
adc
inc
pop
sbb
call
lods
add
or
jmp
sbb
je
inc
inc
mov
ret
inc
loop
mov
cwde
sbb
jae
add
add
mov
mov
(bad)
mov
cmp
ret
jl
cmp
daa
cmp
cli
pop
ret
outs
jns
push
fnstcw
enterw
sbb
push
inc
or
and
cwde
adc
add
mov
adc
ja
ret
pop
call
inc
pop
mov
popf
push
and
cmp
pop
in
call
jae
cmp
or
jmp
xor
std
add
add
adc
jge
fcomp
or
je
test
ret
dec
ins
pop
jmp
sub
mov
adc
lods
mov
repz
loopne
mov
adc
dec
jle
cmp
or
imul
sub
push
adc
sbb
lea
arpl
sbb
iret
xor
mov
mov
adc
push
push
pop
cmovg
pusha
push
push
mov
out
push
mov
mov
ret
out
in
imul
jmp
push
or
(bad)
jmp
jmp
ret
add
cmp
sbb
pop
cmp
xor
dec
adc
cmp
inc
sub
repnz
mov
mov
adc
push
jmp
dec
sbb
test
mov
cmps
movs
sub
push
or
cs
pop
inc
pushf
cmps
jns
adc
add
movs
mov
push
and
int
sub
mov
rol
shl
sbb
and
inc
dec
dec
sbb
adc
test
addr16
ins
sbb
push
mov
adc
mov
push
popa
ret
and
inc
add
sub
int3
sub
out
and
adc
outs
enter
sub
pop
js
sbb
inc
lea
xor
sbb
ja
pop
in
je
sbb
or
adc
iret
lock
movs
loope
nop
pop
add
enter
mov
test
inc
push
push
mov
pop
shl
fst
dec
mov
or
in
popa
add
dec
cmp
retf
push
aaa
sub
stos
imul
add
inc
sub
das
lods
rcl
adc
popf
and
inc
jb
push
mov
sub
jo
hlt
add
retf
lock
pop
xchg
cs
dec
fstp
stos
nop
xchg
mov
scas
add
xor
sbb
les
xor
sbb
popa
xor
mov
push
push
adc
icebp
outs
and
movs
mov
push
pop
aaa
xor
jmp
add
movs
xor
jne
cdq
retf
js
dec
loopne
pop
or
ja
jno
sbb
jmp
movs
cmp
js
(bad)
jl
sbb
jnp
and
adc
loop
sbb
and
nop
adc
or
cmps
xor
lds
push
out
pusha
mov
jge
and
es
xchg
push
pop
iret
add
shr
push
xchg
and
shl
in
gs
sub
jb
(bad)
and
stos
fbstp
js
call
cs
jae
cs
and
cwde
dec
rcl
xchg
or
dec
push
cs
sbb
addr16
dec
imul
jo
sar
cmps
cmp
xor
clc
pop
mov
adc
ret
test
popa
sub
loope
mov
enter
mov
test
shl
fstp
sbb
(bad)
dec
dec
test
movs
xchg
pop
ret
sbb
outs
add
mov
out
mov
lods
jo
adc
adc
inc
(bad)
rcl
fild
sub
mov
(bad)
mov
mov
lods
adc
sub
sub
dec
sub
pop
mov
jne
cmp
push
xor
dec
fdivr
dec
push
and
mov
rol
neg
ins
loope
bnd
adc
or
jo
mov
add
daa
aaa
adc
ret
xlat
test
add
out
push
ret
out
rol
and
pop
ss
add
xor
inc
mov
test
mov
sbb
mov
and
jmp
sbb
or
dec
or
mov
fdiv
xchg
js
or
mov
or
lock
or
cmp
test
add
xor
adc
pop
mov
cmp
mov
jae
fadd
jge
hlt
xchg
loopne
arpl
stc
jg
ret
xchg
xchg
(bad)
in
sub
inc
in
xlat
add
imul
cmp
(bad)
pop
push
mov
cmp
mov
adc
ret
xchg
je
cmp
inc
in
xor
mov
popf
call
and
mov
dec
sahf
adc
popa
mov
or
sar
and
mov
add
nop
push
xchg
push
(bad)
repz
cmps
fsubr
ret
movs
sub
xor
aam
xor
mov
push
repz
ss
mov
imul
(bad)
jmp
clc
stos
and
mov
retf
repz
(bad)
and
mov
or
(bad)
mov
lock
or
cmp
jno
fs
in
add
mov
sub
jecxz
or
mov
jmp
aad
nop
push
sbb
adc
push
js
mov
loop
jecxz
loop
loopne
adc
es
ret
cdq
sub
adc
cmps
xor
mov
or
test
fs
and
dec
or
or
aam
sub
jp
ja
jb
and
and
mov
and
push
arpl
or
mov
push
inc
aas
cld
adc
ins
cmp
sub
or
or
add
sbb
loopne
out
or
mov
xor
push
push
ret
dec
stos
xchg
add
icebp
inc
stos
sbb
iret
jecxz
scas
scas
jg
ror
dec
or
cwde
jle
pop
out
or
push
jo
ins
out
movs
inc
xor
push
in
enter
xor
add
and
push
xchg
mov
or
pusha
or
popa
lea
inc
cmp
push
outs
pop
inc
(bad)
sbb
call
or
mov
add
cmps
sub
mov
adc
add
or
sub
add
ins
sbb
cmp
int
sub
xor
fwait
mov
adc
and
xor
mov
inc
inc
cmp
je
(bad)
out
fldenv
pop
adc
xchg
push
dec
adc
adc
xchg
or
lock
inc
inc
cmc
jmp
sub
faddp
nop
int
inc
adc
jno
or
dec
fwait
mov
icebp
inc
push
add
sbb
xchg
or
pop
in
stc
inc
iret
adc
call
or
pop
mov
add
cmp
js
mov
mov
test
or
and
push
jnp
sbb
aas
and
and
mov
add
loope
shl
adc
xchg
shl
stos
retf
mov
cs
inc
mov
sbb
cmp
sbb
ins
mov
test
cmp
dec
nop
mov
adc
inc
nop
and
adc
movs
mov
sub
fs
and
sub
push
xor
jg
add
fistp
popf
jl
pop
push
adc
or
and
es
dec
loopne
mov
cmps
rcr
or
test
test
dec
sbb
cmp
fisub
inc
stos
mov
test
(bad)
xor
mov
ins
cmp
push
and
and
ins
loop
ror
sub
call
hlt
adc
std
sahf
retf
and
add
push
cmp
rcl
not
imul
mov
sbb
and
jne
mov
xor
adc
or
or
fnstcw
ror
imul
mov
jne
mov
sub
add
ds
pop
xor
addr16
mov
repnz
jo
jns
inc
inc
pop
call
mov
or
and
mov
(bad)
lds
adc
inc
push
jmp
out
lock
xchg
inc
test
jmp
inc
jmp
(bad)
lds
add
pop
or
add
push
gs
arpl
aad
xor
jmp
adc
cmp
aad
add
fcomip
dec
jne
pop
mov
push
cmp
repz
enter
call
cmp
mov
fld
lahf
mov
jns
mov
in
xor
imul
(bad)
in
imul
pop
pop
mov
retf
jl
in
outs
popf
scas
sahf
pusha
sub
jmp
les
add
clc
pop
loope
push
fldenv
xchg
add
or
in
mov
dec
test
pop
push
sbb
aam
sti
cs
and
pminub
adc
add
bound
pop
imul
and
pushf
out
movs
jnp
add
mov
push
mov
or
push
jb
xlat
rol
and
or
outs
and
shl
mov
repz
ror
outs
xchg
dec
mov
or
sbb
mov
cmp
inc
aam
rcl
cmp
jmp
or
push
mov
loopne
cs
and
jle
stos
movs
sub
inc
jle
rcl
sbb
pop
inc
or
lods
xor
std
push
dec
dec
push
clc
jae
in
lods
nop
sub
mov
loope
cld
push
lds
pop
adc
movs
mov
pop
lahf
cmps
sbb
fsub
stos
or
popa
sub
rcr
pop
jns
in
iret
cmp
test
jg
add
inc
adc
xor
or
dec
add
cld
inc
jecxz
adc
push
stc
push
push
push
sub
mov
ret
add
inc
mov
mov
cmp
ins
xchg
jno
shl
sub
adc
or
adc
sbb
sub
add
dec
cmp
inc
jo
sub
lea
test
mov
mov
mov
iret
cwde
dec
xor
stos
jmp
pop
adc
mov
sub
add
sti
push
or
pop
add
sbb
pop
shl
add
xchg
push
inc
cld
pop
xlat
fadd
sbb
jge
xor
xor
dec
nop
add
push
sbb
test
out
pop
adc
sahf
xchg
add
or
and
and
mov
cmp
xchg
add
push
and
adc
inc
or
daa
and
inc
gs
mov
fwait
or
cmp
jmp
add
jmp
jno
add
fs
sbb
mov
add
in
test
jo
push
mov
sbb
(bad)
add
stc
rol
arpl
sub
ret
jg
or
lock
jb
nop
sbb
sub
out
cmp
push
or
fidiv
test
mov
hlt
repz
mov
frstor
dec
inc
test
and
inc
sub
adc
outs
dec
ja
or
je
push
pushf
inc
jl
nop
sbb
dec
ins
add
test
mov
add
inc
cmp
adc
pop
(bad)
jns
dec
sbb
inc
test
mov
iret
xor
mov
cmc
dec
imul
pushf
lock
mov
sub
mov
dec
xchg
popa
mov
xchg
test
movs
pop
or
fs
loopne
jbe
jp
popa
call
sbb
xor
or
(bad)
push
out
mov
add
pushf
and
xchg
test
into
xchg
xor
add
imul
inc
or
(bad)
popa
test
jecxz
mov
mov
or
or
or
lea
mov
lea
into
or
mov
or
cwde
and
xchg
or
pop
add
fadd
pop
pop
mov
cmp
scas
add
add
sub
and
dec
dec
ds
xchg
movs
pop
and
icebp
imul
add
cmp
fnstenv
(bad)
sub
cmp
dec
sub
pop
pop
daa
sub
and
pop
mov
add
adc
icebp
fidiv
adc
mov
repz
or
or
leave
inc
xchg
xchg
add
xchg
iret
mov
cmps
or
sub
xlat
push
xor
nop
push
pop
ss
mov
rcr
pushf
call
xchg
sub
sub
or
mov
lock
add
and
adc
sub
hlt
jns
inc
or
fwait
stc
call
lods
xor
jl
mov
add
jle
jno
movs
dec
jne
or
(bad)
xor
jo
dec
enter
out
jmp
xor
lea
cmps
imul
add
daa
in
jmp
adc
js
jp
jne
inc
or
inc
cmp
cdq
jae
and
ret
xor
loop
fcom
rol
fild
push
pop
adc
add
xchg
pusha
add
dec
loopne
es
ror
rcl
hlt
sar
jne
loopne
mov
enter
cmp
shr
xor
fist
add
and
popa
jnp
push
or
xchg
mov
and
push
sbb
and
add
mov
cdq
shl
movs
xor
mov
aas
jb
and
or
loopne
or
xlat
lock
or
sbb
or
fs
adc
xchg
icebp
pusha
lods
sub
add
mov
push
adc
nop
rcl
pop
arpl
mov
test
retf
stc
sbb
cmp
rol
and
add
les
iret
and
pop
imul
cmp
adc
adc
mov
mov
(bad)
adc
sbb
leave
and
bound
mov
jns
hlt
adc
aaa
outs
dec
add
pop
dec
add
enter
jo
loope
add
test
es
arpl
inc
sub
nop
inc
xchg
push
mov
les
dec
xor
bound
ret
sub
mov
ficomp
inc
mov
or
pop
sbb
pushf
xchg
add
mov
xchg
add
pop
jb
sbb
ins
jge
cmp
or
cmps
aam
pushf
mov
sub
add
xchg
adc
ins
push
loopne
sbb
sbb
(bad)
int3
pop
fadd
mov
xchg
pushf
push
inc
sbb
pop
das
shl
lods
jne
sbb
mov
mov
inc
push
lods
add
in
sub
fisttp
movs
shr
mov
out
push
loope
push
push
jae
add
add
and
gs
xchg
stos
xor
jb
iret
push
test
nop
inc
shl
mov
xchg
ret
and
movs
add
add
adc
rol
iret
push
or
xchg
or
aam
xor
int
xor
sbb
cmps
jbe
mov
push
mov
das
lods
loopne
adc
rol
jno
mov
cmp
test
hlt
ins
add
(bad)
add
imul
movs
call
aaa
enter
mov
aam
mov
jo
rcl
out
div
mov
add
mov
adc
and
mov
lods
push
rol
sahf
icebp
adc
fistp
xchg
jecxz
dec
add
adc
into
shr
fcomp
add
xor
daa
adc
and
fiadd
es
jp
mov
dec
cmp
and
inc
inc
loope
sub
bound
dec
or
adc
pop
mov
das
push
adc
cli
or
outs
add
mov
out
or
jno
sub
into
pushw
and
jne
push
sar
adc
in
mov
push
mov
shl
add
fsub
pop
daa
and
mov
repnz
sbb
leave
jbe
jno
sub
and
lock
sbb
sbb
jmp
jbe
mov
and
fs
sbb
mov
or
sub
add
loopne
push
sar
mov
ss
jle
xor
leave
inc
add
pop
jg
pop
nop
loopne
jb
inc
aam
sub
call
stos
lods
lods
and
inc
sub
test
mov
add
mov
aaa
mov
fucomip
jno
add
lds
rol
aad
dec
add
popa
fst
dec
loopne
dec
jge
inc
jne
mov
sub
cmps
or
call
dec
xchg
mov
gs
add
inc
arpl
dec
pop
jecxz
and
sbb
sbb
call
in
push
or
inc
or
add
add
std
lock
clc
xchg
xor
in
inc
xchg
nop
aam
mov
jg
ret
xchg
movs
jge
imul
imul
or
mov
push
imul
dec
pmaxub
xor
sub
mov
scas
add
sub
sub
cmp
mov
std
cmp
mov
icebp
inc
mov
sbb
or
ins
mov
les
xchg
or
mov
rol
xchg
inc
ds
pop
add
and
add
sbb
outs
dec
clc
js
or
daa
rcl
cmp
jge
xlat
adc
push
sub
arpl
and
pop
add
lea
in
mov
sti
mov
dec
sbb
sbb
or
push
push
add
test
ins
push
add
xchg
adc
mov
ret
ins
dec
or
jnp
test
fisttp
in
pop
mov
push
cmp
mov
shl
or
(bad)
(bad)
xor
iret
je
jl
mov
pop
rcr
movs
pop
sbb
dec
pop
icebp
add
arpl
lods
xor
fstp
inc
push
jmp
mov
pop
push
or
push
aam
or
add
mov
rol
iret
adc
fwait
in
or
aas
sub
push
xor
shl
cmp
adc
ror
add
push
sbb
inc
sub
lea
pop
inc
scas
dec
fwait
mov
sbb
pusha
adc
sbb
and
sbb
mov
sbb
push
push
and
lods
cmp
and
push
push
push
push
mov
mov
enter
push
push
adc
mov
pop
ins
push
fld
cmps
cdq
xchg
mov
jne
xor
test
pop
xor
adc
add
shr
scas
adc
pop
shr
cmp
fcomp
inc
mov
je
push
test
test
leave
stos
shr
mov
adc
fs
lea
pop
aaa
repnz
xchg
inc
pop
jne
test
dec
xor
pop
xchg
pop
adc
pop
cmps
imul
xor
cwde
mov
and
les
sub
lods
adc
inc
clc
addr16
xor
aaa
add
push
test
lock
add
push
out
jle
and
shl
jmp
add
sbb
rcr
dec
cmp
pop
add
rcr
es
call
repz
jmp
pop
jmp
pop
adc
add
xor
psllw
jmp
mov
pop
or
call
dec
mov
test
js
push
or
sbb
add
jmp
inc
ja
inc
sbb
outs
and
add
pop
cdq
push
dec
adc
or
mov
mov
and
js
mov
or
clc
push
sbb
add
or
and
or
lods
cwde
mov
rcl
hlt
push
push
push
jae
cli
add
xsha256
cmps
push
mov
je
push
adc
ror
inc
inc
add
adc
dec
mov
add
cmp
lods
dec
popa
add
(bad)
push
and
xor
scas
ja
mov
fidiv
std
jmp
popa
int
mov
leave
aam
and
pop
mov
int3
add
mov
scas
mov
dec
mov
dec
sub
sti
cmp
lea
push
or
mov
mov
jg
jecxz
or
jo
movs
imul
lock
mov
xor
sbb
clc
dec
pop
add
out
xor
push
cmp
movs
rol
jbe
xchg
icebp
loopne
fiadd
in
adc
stc
mov
jno
push
add
mov
mov
xor
pop
cmps
or
and
push
inc
cmp
and
ret
and
sub
popf
test
sbb
shl
push
fmul
sbb
pop
mov
rcr
pushw
dec
movs
(bad)
retf
fdivrp
loop
mov
jmp
enter
sub
call
pop
xor
push
ins
sub
loopne
xchg
and
push
aad
lock
(bad)
fdiv
jnp
outs
fbld
test
ret
push
add
mov
stc
xor
in
out
mul
sub
and
pop
dec
iret
lock
xchg
int
mov
pop
push
aaa
push
mov
ror
mov
daa
mov
popa
loope
test
ret
cwde
sub
dec
ins
fcomi
xchg
push
and
xchg
ror
mov
push
lods
test
jle
jne
inc
mov
push
and
xchg
dec
nop
inc
dec
push
sub
xor
mov
jno
xchg
js
retf
jl
mov
call
mov
pop
into
sub
rcr
sub
rcr
cmps
int3
outs
jnp
sub
into
mov
inc
pop
mov
(bad)
hlt
out
jmp
mov
icebp
mov
adc
and
mov
das
cli
call
in
cdq
frstor
test
fwait
(bad)
cmp
mov
rcr
push
sub
add
call
sub
mov
dec
sbb
cmp
and
jne
sub
push
out
inc
xchg
mov
xor
pop
pusha
inc
imul
pop
lock
hlt
xchg
adc
push
pop
pop
add
nop
xor
xchg
xchg
fbld
call
in
dec
push
or
stos
pop
inc
outs
sbb
inc
and
jle
(bad)
sbb
xor
push
mov
mov
lock
ds
mov
push
jp
ror
dec
xchg
xchg
xchg
sahf
sub
jmp
mov
add
dec
push
ins
xor
test
mov
xor
push
out
add
and
xchg
xor
in
dec
cwde
sbb
adc
and
cdq
or
outs
xchg
push
mov
pop
nop
cdq
jb
mov
pop
ds
dec
adc
icebp
xchg
add
dec
xor
and
push
xlat
ins
push
sub
jmp
ret
fiadd
imul
xchg
add
xchg
mov
cdq
push
(bad)
jmp
call
aaa
cmc
cmp
mov
in
daa
add
xchg
scas
lahf
lea
jo
cmc
adc
test
mov
add
xchg
dec
mov
xchg
aaa
retf
cs
and
cdq
in
sbb
test
inc
jle
mov
or
fst
inc
pop
xor
inc
stos
rol
add
dec
outs
mov
out
mov
ret
dec
jle
iret
add
aam
rol
hlt
adc
mov
xor
and
add
cmp
and
xchg
out
inc
sub
xlat
jmp
xor
ffreep
les
xchg
imul
push
popw
fsubr
add
popf
adc
test
enter
std
and
mov
add
or
and
cmp
loopne
add
sub
cmp
arpl
xor
lock
jge
and
ror
mov
sbb
call
cmps
retf
jo
mov
imul
cmp
push
xor
adc
js
aam
movs
gs
push
js
test
xchg
adc
sar
mov
imul
mov
adc
mov
pop
mov
or
sub
dec
icebp
jo
add
push
mov
jo
push
jecxz
pop
and
inc
mov
adc
jmp
push
loopne
(bad)
adc
dec
mov
aas
and
lods
dec
mov
add
jae
mov
imul
lea
mov
add
rol
inc
pop
push
add
adc
adc
fwait
cwde
in
jno
out
loop
daa
aam
es
push
push
(bad)
ds
inc
call
call
ror
inc
or
sub
or
and
add
push
fs
push
call
jno
ds
and
mov
mov
bound
inc
dec
sub
cs
mov
shr
cdq
daa
cmp
and
sbb
or
push
sti
or
push
sub
fisttp
shl
hlt
push
inc
push
es
push
mov
ds
and
paddd
or
jo
jmp
or
mov
or
jge
mov
xchg
add
cs
shl
movs
sets
add
xchg
shr
dec
es
sub
inc
jne
jb
(bad)
jmp
into
inc
cmp
movs
mov
sub
adc
andnps
into
dec
xchg
inc
cmp
cmc
dec
add
and
mov
mov
test
mov
inc
jge
mov
lods
pop
(bad)
aas
mov
sbb
test
dec
sbb
adc
nop
adc
xchg
sub
and
push
cmp
jmp
sub
pop
pop
scas
dec
push
lock
inc
hlt
mov
jne
imul
mov
pop
push
je
bswap
test
mov
loop
test
and
sub
ficom
dec
sbb
xor
mov
or
cmp
pop
inc
and
shl
xchg
inc
or
push
dec
lea
jp
adc
dec
outs
pop
fdivr
in
popf
add
movs
jl
adc
push
sbb
xchg
push
xchg
push
jb
gs
and
add
in
lock
pop
push
cmp
fsub
jl
xchg
push
pop
add
je
dec
jle
xchg
das
add
(bad)
sub
mov
cld
jb
data16
dec
fdiv
retf
lods
sbb
mov
test
jne
mov
adc
sahf
test
dec
mov
lahf
mov
jo
and
inc
mov
iret
hlt
fadd
ds
push
loope
out
ret
loopne
jle
xchg
mov
jp
push
enter
mov
mov
add
outs
mov
enter
dec
sbb
xor
ins
push
je
push
out
loopne
mov
mov
sub
add
stos
xchg
div
add
pop
add
pop
dec
aad
inc
aam
xchg
fld
or
jl
cmp
les
dec
mov
dec
push
imul
or
dec
push
aas
or
aas
push
mov
push
adc
push
in
dec
cwde
or
fistp
add
jbe
bound
int
push
popa
push
cmp
inc
cs
add
sub
dec
cmp
and
mov
or
inc
or
cwde
fstp
mov
sub
inc
js
add
mov
das
and
imul
xor
push
inc
cmp
pop
mov
sub
add
(bad)
out
fs
pop
push
xor
es
dec
pop
sbb
test
mov
fcomp
jmp
mov
fimul
mov
adc
adc
cli
loopne
cmp
mov
dec
mov
imul
add
ins
retf
dec
mov
neg
imul
xchg
lahf
jbe
pop
mov
(bad)
int
inc
les
xchg
addr16
pop
mov
mov
sbb
popa
sbb
fdiv
jne
lahf
or
push
adc
imul
pop
cmp
jne
jno
inc
ss
test
jns
or
daa
push
mov
pusha
mov
add
inc
aam
push
xchg
cmp
sub
test
stos
and
mov
xchg
push
cs
cmps
adc
xchg
pop
pop
adc
jo
or
push
imul
sub
aam
ret
ret
lock
aaa
inc
mov
pop
ss
add
mov
push
jae
cmc
sahf
mov
mov
push
cmp
mov
sbb
add
sub
push
sub
push
or
xchg
nop
pop
loope
add
xchg
xor
jmp
jmp
and
(bad)
jp
inc
push
jecxz
add
or
or
(bad)
adc
outs
adc
or
add
fdiv
adc
imul
(bad)
in
xchg
cmp
aas
cld
enter
and
and
ss
or
dec
into
sub
or
addr16
sar
inc
pop
or
sar
popa
sbb
or
and
pop
mov
adc
push
dec
or
jno
stos
mov
or
ret
imul
ret
or
int3
call
mov
pop
add
inc
sar
fld
xchg
inc
std
in
and
pop
enter
pop
ret
fidivr
mov
mov
mov
pop
dec
cmp
icebp
push
add
sub
add
mov
lock
mov
out
sbb
adc
sbb
test
add
or
push
mov
bound
push
adc
ins
mov
outs
xchg
dec
mov
or
fcomp
xchg
shl
leave
add
rol
pop
mov
xchg
loop
adc
push
imul
fsubr
mov
les
pop
xor
ja
jl
es
or
push
pushf
dec
sti
or
sbb
mov
mov
rcl
popf
dec
fidiv
mov
mov
repnz
js
pusha
mov
jg
mov
adc
arpl
push
test
(bad)
sbb
add
out
add
cmps
mov
fldcw
push
or
dec
push
repnz
sbb
sbb
cmp
imul
arpl
popf
mov
xchg
mov
repz
hlt
cmp
loope
or
out
nop
mov
adc
inc
cmp
add
and
test
fsub
push
mov
stc
mov
cmp
or
in
test
jge
outs
sub
cmp
add
xor
xor
jns
jbe
loopne
and
cmp
test
push
ret
loope
and
cs
mov
mov
leave
push
(bad)
cld
test
mov
(bad)
call
enter
test
sbb
inc
jnp
cmp
cmc
das
or
jo
daa
mov
or
mov
jae
jo
les
movzx
shr
sub
test
imul
out
rcr
mov
adc
mov
ss
retf
inc
cli
ret
or
cmp
loop
add
and
mov
sub
adc
push
dec
out
das
retf
addr16
test
add
and
or
nop
xchg
pusha
xor
add
iret
cmps
cwde
inc
mov
sbb
je
loope
cmc
jo
pop
mov
aad
pop
rol
ficom
push
sub
aam
std
push
sub
xchg
push
test
stc
popa
loope
add
and
jmp
pop
add
push
cs
shl
je
inc
aad
enter
jne
lahf
lock
(bad)
push
je
ror
jmp
mov
fmul
loop
jl
push
sbb
les
dec
jae
je
sub
inc
mov
mov
dec
movs
int3
sbb
shr
enter
iret
test
xchg
xor
mov
xchg
xchg
sbb
jnp
das
inc
mov
mov
mov
rcl
enter
test
jns
or
push
push
jne
sbb
rol
sub
push
loop
adc
iret
mov
inc
pushf
pop
sbb
xlat
add
aaa
loopne
dec
es
out
test
cmp
add
mov
dec
mov
xchg
xor
push
push
mov
dec
jnp
in
add
or
cld
fst
in
arpl
pop
xor
add
ret
repz
int3
pop
push
push
lock
lea
fcmovnb
sbb
add
pusha
push
dec
dec
adc
gs
movs
pop
dec
cdq
or
cwde
pop
push
test
ror
add
or
lods
les
inc
push
push
call
shr
pop
and
pop
imul
test
dec
pusha
cmps
adc
pusha
mov
mov
pop
jl
out
leave
ror
push
cmp
inc
push
ss
cmp
stos
sbb
push
and
test
jb
xchg
mov
les
dec
mov
ja
wrmsr
xchg
repz
mov
and
cwde
lods
push
test
retf
in
mov
mov
mov
shl
in
mov
popf
fidiv
in
hlt
add
icebp
fwait
ins
dec
jle
in
jg
jmp
xor
mov
jnp
push
retf
addr16
jl
mov
mov
xor
rcl
jg
add
push
lahf
push
or
fs
jns
lock
xor
cmp
ja
(bad)
mov
fld
add
das
mov
sbb
push
cs
mov
test
inc
and
xchg
adc
or
add
cld
xchg
pop
or
pop
shl
pop
test
aas
mul
push
push
xchg
test
add
je
cmp
repz
iret
nop
pop
ins
std
adc
mov
sbb
jmp
jno
mov
adc
push
(bad)
jmp
fisubr
(bad)
rol
add
lock
mov
add
mov
add
data16
sbb
test
inc
pop
inc
cmps
and
add
and
xchg
shr
add
cwde
es
mov
jbe
inc
adc
cdq
pop
adc
mov
inc
adc
mov
mov
sbb
push
ss
mov
and
mov
sub
and
xchg
adc
sbb
sub
outs
inc
push
xchg
aad
icebp
ja
or
leave
mov
stc
jo
xchg
adc
in
test
add
or
push
or
lods
dec
and
mov
js
adc
and
and
sbb
cmp
inc
pop
dec
ficomp
adc
jge
mov
jle
shl
enter
ja
sub
test
jmp
push
cmp
xor
movs
pusha
sub
or
sbb
adc
sbb
xor
test
jae
(bad)
mov
sbb
(bad)
and
push
aam
mov
imul
int
jo
xor
push
jmp
js
mov
sbb
imul
mov
jbe
adc
push
dec
ret
inc
imul
adc
push
push
push
sbb
cmp
je
call
jae
cld
sub
sub
adc
cmc
sbb
xor
fldenv
xchg
mov
xor
es
(bad)
jae
and
ret
cmp
pop
fldenv
mov
adc
and
push
outs
jecxz
cmp
mov
xor
push
mov
and
add
gs
inc
mov
jb
imul
push
xor
test
lock
push
sti
jne
aam
sti
test
pop
mov
inc
(bad)
xchg
adc
ja
fwait
stc
mov
ja
pop
stos
ret
je
test
mov
in
sub
loope
push
push
or
dec
test
adc
inc
push
xor
ret
hlt
pop
adc
loop
xor
mov
xor
adc
(bad)
daa
add
cmp
popf
xlat
shr
mov
mov
dec
addr16
pop
add
fstp
addr16
and
dec
xchg
xor
and
push
sbb
test
inc
push
dec
push
pop
movs
movs
sbb
push
add
mov
dec
jp
adc
sbb
jne
cmp
retf
push
shr
or
test
scas
inc
hlt
loopne
dec
and
or
outs
jns
repz
inc
dec
ins
ja
(bad)
xchg
not
push
and
adc
mov
out
stos
mov
outs
aas
add
xor
add
test
gs
mov
push
stos
aam
push
rcl
push
sbb
int3
jbe
cmp
hlt
add
iret
aas
ins
mov
sub
(bad)
cli
call
push
pop
jmp
cmp
or
fdivr
mov
pusha
dec
dec
cmp
ss
jmp
push
pusha
push
dec
lds
sahf
or
ja
mov
es
cwde
movs
mov
push
add
sbb
inc
push
jno
inc
jge
add
jp
adc
add
and
inc
pop
mov
dec
lahf
push
not
or
imul
fld
aam
loop
jmp
pop
and
mov
dec
fwait
sub
jo
mov
inc
jae
push
cmp
aas
xor
cli
inc
pop
push
stos
pop
mov
or
movs
stos
rol
xor
mov
add
aam
cdq
loopne
mov
cmc
enter
or
sub
push
sahf
push
or
inc
adc
jg
add
sub
sbb
mov
inc
rcr
sub
xlat
leave
rol
mov
add
inc
inc
shl
xchg
cmp
clc
push
adc
adc
lods
push
mov
bound
lods
cmp
aaa
sbb
mov
je
loop
sbb
mov
xor
mov
push
lea
sbb
jmp
dec
dec
ins
popf
fcomp
cmp
mov
loope
or
lock
mov
sar
sbb
js
sbb
jne
mov
je
push
wrmsr
test
movs
or
jno
les
imul
call
adc
or
scas
adc
(bad)
cwde
je
in
xor
cmp
xor
sbb
jo
(bad)
cs
jne
add
lods
mov
in
mov
pop
test
cmp
add
lock
int3
pop
pop
sbb
aaa
nop
movs
or
pop
sub
outs
add
jbe
jl
nop
dec
add
add
loopne
cmp
xchg
js
fnstenv
add
pop
inc
sahf
pushf
mov
leave
fcom
test
sbb
jmp
push
adc
push
addps
adc
sbb
cmp
jmp
icebp
loopne
cmc
inc
(bad)
inc
loopne
ins
add
jb
or
jno
ss
adc
adc
adc
inc
xchg
stos
push
sbb
into
nop
fs
add
cwde
dec
dec
pop
xchg
cwde
sbb
cmp
lea
lock
or
mov
push
add
mov
rcl
cmp
fidivr
imul
ss
xor
mov
xor
loop
imul
shr
push
add
in
xor
push
push
dec
ja
int3
add
sahf
lock
ret
out
ins
lock
in
enter
lods
(bad)
push
push
ss
xor
sub
repz
jb
cmp
bound
popa
loop
sub
cmp
cmp
push
mov
push
call
xchg
or
pop
cwde
cmp
jmp
or
or
je
fisub
pop
dec
mov
je
push
cmc
mov
hlt
sbb
adc
dec
mov
aaa
pushf
and
cli
nop
(bad)
lds
dec
jb
ror
sbb
aaa
mov
pushf
mov
push
or
jecxz
cmp
mov
mov
hlt
pop
mov
pop
and
(bad)
cmp
mov
pop
popf
test
daa
sub
lea
cmp
adc
out
jge
sbb
xchg
xchg
cmp
sbb
add
inc
mov
push
jmp
and
lea
ret
jo
push
inc
xor
dec
sub
mov
add
fdiv
or
mov
push
add
add
pusha
xchg
or
imul
jecxz
xor
mov
sub
and
adc
and
bnd
dec
mov
imul
je
ror
outs
jge
bnd
jae
mov
cwde
adc
das
pop
sub
inc
lea
mov
jo
sbb
(bad)
or
jnp
sbb
test
sbb
ror
dec
jmp
jg
push
sub
add
ins
test
adc
xchg
mov
sub
pop
add
imul
test
out
push
aaa
rcl
imul
sub
ret
dec
sbb
movs
inc
add
mov
xchg
pushf
mov
push
push
std
mov
arpl
movs
xchg
mov
xor
inc
adc
xor
xchg
and
add
ret
push
add
sbb
push
xor
or
mov
into
adc
repz
mov
xchg
mov
lods
ror
or
ds
test
or
xchg
mov
scas
jb
test
pop
movs
xchg
imul
pop
inc
dec
push
js
or
xchg
ror
jnp
add
adc
push
push
into
add
out
sub
imul
lods
(bad)
push
in
fdiv
jnp
es
pop
push
mov
push
test
cmp
dec
and
xchg
mov
mov
ja
and
movs
lods
mov
aam
mov
leave
add
pop
xchg
outs
push
mov
ins
pop
or
adc
mov
dec
jl
jo
mov
adc
mov
inc
dec
inc
pop
lds
les
and
xlat
test
popf
lods
push
jl
cmps
bswap
movs
in
cwde
in
or
mov
aad
xchg
scas
jae
mov
sbb
sbb
pop
inc
and
inc
mov
mov
pop
fstp
cmps
fist
or
lds
add
inc
cwde
test
jbe
mov
cmp
sar
fadd
loopne
ror
sub
inc
in
push
in
sub
es
cs
in
xchg
jo
inc
jae
xor
inc
test
jmp
or
and
push
sub
pop
or
add
add
sub
add
addr16
inc
ret
add
test
mov
movs
test
pop
sub
cmp
jnp
xor
rcl
retf
xor
and
fstp
inc
pop
and
rol
mov
and
add
das
jge
fidivr
cmp
cmps
sbb
sub
xchg
mov
enter
nop
and
push
pop
fsubr
fmul
push
inc
pusha
ins
je
jp
or
dec
xor
test
das
mov
adc
xchg
leave
and
sbb
rol
pop
les
or
adc
mov
or
nop
sub
iret
add
fld
dec
pusha
cwde
pop
sar
cmp
mov
lahf
clc
mov
sbb
outs
fbstp
jo
scas
nop
xchg
lea
add
stc
mov
add
loopne
mov
cmp
mov
rol
or
xchg
cmp
scas
xchg
inc
fld1
add
pusha
xor
fdivr
adc
mov
scas
add
mov
and
inc
push
sbb
ins
or
pop
push
std
cmp
push
adc
push
pusha
lock
shl
shr
inc
cmp
dec
adc
adc
dec
int3
sbb
iret
sbb
adc
sar
xor
xor
mov
add
dec
mov
and
xchg
int
mov
sub
fsub
(bad)
les
add
imul
mov
inc
xor
push
movs
jmp
js
loopne
adc
jl
sub
jge
je
(bad)
pop
mov
mov
cmp
and
push
pop
nop
and
pushf
(bad)
xlat
or
fdivr
int
sbb
sub
xchg
add
xchg
les
dec
scas
loopne
test
add
mov
xchg
in
jbe
add
mov
movs
pop
push
out
xlat
and
and
mov
xor
js
add
push
pusha
jbe
mov
dec
scas
rcr
or
cmp
push
adc
(bad)
rcl
and
aad
stos
(bad)
outs
jns
inc
jge
add
sbb
fldenv
pop
push
adc
mov
mov
sbb
push
fmul
jne
mov
jl
and
pop
sbb
xor
repz
fld
fsub
ret
dec
mov
stc
jns
or
inc
out
and
fidivr
neg
adc
out
pop
add
push
ficomp
or
gs
pop
neg
push
add
rol
mov
rcl
dec
add
fs
pop
jecxz
scas
pop
(bad)
push
movs
imul
rcr
cs
sub
test
and
(bad)
mov
rol
enter
mov
xchg
sub
pusha
pusha
int3
add
or
push
mov
push
mov
push
inc
sub
mov
call
xchg
stos
cs
jne
inc
in
out
daa
jmp
push
cmp
push
repz
or
xchg
sub
movs
mov
test
push
inc
sbb
cmp
daa
mov
mov
inc
push
dec
and
pop
add
cdq
ins
sbb
ja
xchg
pop
or
add
add
or
jo
inc
or
adc
cmp
add
call
or
jge
jne
adc
sub
xchg
dec
mov
add
push
mov
cmp
jg
push
cwde
es
jle
je
daa
movs
pop
dec
mov
cmp
je
(bad)
loopne
jo
or
jno
rol
cdq
test
add
push
inc
jo
dec
add
push
cmp
ja
ret
push
add
mov
clc
push
cld
mov
dec
pop
(bad)
jl
mov
je
aas
repnz
sbb
xor
push
cmp
sbb
mov
add
xor
inc
push
and
in
pusha
add
mov
dec
inc
pop
inc
mov
pushf
imul
mov
retf
cdq
mov
sbb
xchg
mov
enter
adc
cmp
test
jne
aas
dec
add
loopne
xchg
rcl
dec
xor
pop
mov
inc
inc
es
push
push
push
inc
jne
sbb
popf
adc
loopne
(bad)
retf
push
add
fdiv
add
fbstp
test
leave
xlat
es
xor
mov
push
movs
dec
jb
leave
out
inc
push
add
imul
cmp
xor
sbb
or
add
daa
mov
mov
and
movs
pop
movs
sti
mov
aaa
hlt
dec
jle
or
mov
mov
pop
or
cs
or
and
sbb
xor
dec
pop
rol
dec
scas
add
cs
sbb
test
pop
sub
mov
pop
mov
push
ja
adc
push
push
and
fwait
add
(bad)
test
loope
aam
mov
xlat
out
ss
imul
xchg
add
aaa
jno
add
(bad)
push
div
add
sbb
mov
push
dec
inc
ins
shr
mov
sbb
push
or
arpl
addr16
test
leave
enter
inc
sti
int
mov
ror
push
int3
int3
aad
push
mov
cmp
outs
add
mov
xor
mov
sbb
xchg
add
sbb
sub
push
sbb
enter
mov
pop
lea
sub
rol
imul
nop
push
push
sbb
push
cwde
push
sbb
jmp
pop
fiadd
ins
arpl
fcomp
lea
add
les
pop
sub
fiadd
add
mov
add
fs
mov
sub
push
and
lea
movs
mov
xor
pushf
in
jne
and
bsr
mov
cmp
mov
mov
or
inc
inc
add
push
aam
aas
aam
or
or
in
mov
mov
scas
mov
push
jne
xchg
pusha
(bad)
sbb
addr16
shr
adc
or
jl
cmp
push
lock
and
inc
test
cs
mov
mov
mov
sbb
dec
es
pusha
pop
in
mov
mov
push
or
cs
sar
or
adc
xor
into
loope
inc
sub
fist
push
stos
(bad)
cmp
stos
dec
push
lock
test
sbb
loopne
sbb
xchg
xchg
pop
or
pop
test
push
inc
pop
inc
cmp
inc
xor
cmp
nop
mov
imul
inc
adc
inc
popa
jl
dec
fisub
call
xor
sbb
jl
dec
(bad)
nop
mov
and
imul
pop
jmp
popa
pop
call
mov
xchg
shl
lods
inc
jmp
sbb
xchg
int3
inc
add
or
xchg
add
mov
jmp
jmp
or
jno
adc
ficom
sub
sbb
xchg
push
(bad)
into
lods
dec
and
(bad)
inc
ds
loope
add
inc
or
and
push
cmc
push
icebp
aad
shl
pop
ror
jno
adc
and
cwde
or
cmps
pushf
ret
and
mov
adc
and
mov
jo
test
xchg
lods
xchg
fdivr
out
aad
sar
cmp
push
pop
add
(bad)
es
in
in
lock
aaa
stc
out
sbb
xchg
xlat
xchg
add
(bad)
out
adc
mov
in
mov
adc
or
mov
call
or
pop
push
mov
dec
xchg
stc
loopne
sbb
jle
test
inc
mov
mov
or
push
in
xchg
adc
in
and
or
jnp
imul
cmps
mov
mov
ss
test
lea
add
add
push
xor
cmp
shr
and
mov
and
mov
addr16
xchg
lods
push
and
sub
inc
mov
push
push
rol
sub
sub
scas
(bad)
lock
adc
mov
jmp
lea
es
sub
and
sub
pop
xchg
sub
xchg
push
xor
in
pusha
mov
repz
cmp
lea
sub
or
dec
xor
pop
rcl
xor
lds
push
mov
sbb
daa
xchg
aad
test
or
mov
push
dec
inc
inc
js
dec
xchg
jnp
cwde
or
inc
mov
inc
inc
pop
sub
mov
stc
out
call
mov
dec
inc
mov
dec
ins
mov
or
aaa
adc
xor
add
xor
mov
outs
es
enter
xor
add
in
sub
(bad)
pop
sub
cmp
add
or
in
add
and
ret
add
mov
pushf
(bad)
adc
pop
jne
arpl
add
ss
(bad)
inc
mov
pop
sub
adc
pop
repnz
jmp
or
movs
inc
(bad)
xchg
arpl
mov
mov
scas
jge
add
les
inc
push
mov
test
inc
sbb
jne
dec
cmp
mov
cmp
jbe
xchg
movs
jge
and
ja
loop
xchg
xor
push
dec
or
movs
aaa
sbb
pop
push
ret
stos
push
into
je
or
data16
cmp
movs
jns
inc
pop
imul
add
aaa
rol
ja
ror
push
into
cmc
ret
mov
(bad)
call
add
fadd
xchg
adc
and
ss
imul
add
cmp
push
pop
bound
xchg
(bad)
enter
test
ret
ins
pushf
scas
clc
jb
rcl
cmps
mov
mov
dec
xchg
sbb
lods
inc
daa
dec
jne
sub
test
rol
pushf
les
xchg
jmp
mov
and
mov
and
imul
mov
lds
mov
inc
xlat
add
add
cmp
sti
test
sbb
les
jmp
inc
sub
sub
or
lea
and
push
fwait
rol
sar
add
sbb
test
outs
xchg
cli
and
xor
fwait
enter
lds
shl
and
mov
gs
sub
les
inc
fdiv
mov
xchg
mov
ret
mov
jmp
rcl
mov
or
js
mov
dec
fst
repz
pop
inc
push
test
imul
aad
xchg
pop
pop
movs
mov
mov
adc
ins
mov
shl
imul
test
pop
jle
sbb
(bad)
sub
or
cmp
data16
mov
dec
xchg
popf
out
add
add
cmp
add
fild
mov
cmps
or
push
mov
dec
sbb
jmp
mov
inc
mov
(bad)
fmul
adc
sbb
adc
ret
(bad)
xchg
or
lea
adc
jae
adc
push
in
ret
in
inc
aaa
inc
add
mov
pop
or
xor
je
add
mov
int3
push
push
scas
mov
or
push
ds
mov
ret
or
loope
inc
inc
imul
into
clc
pop
icebp
add
retf
add
or
sbb
xor
pop
dec
test
mov
pop
(bad)
scas
js
add
or
adc
inc
ret
jecxz
scas
movs
shl
jns
adc
mov
adc
rol
bound
sub
bound
mov
or
pop
push
inc
push
mov
mov
push
and
je
dec
add
dec
and
(bad)
ins
inc
add
or
sbb
jo
ss
and
clc
cmps
push
in
adc
cmp
movs
sub
ret
fidiv
add
sbb
or
mov
sub
pop
push
sub
(bad)
jbe
std
jbe
mov
add
add
test
test
imul
pop
cli
add
loopne
or
js
jne
add
or
dec
outs
cmp
outs
arpl
push
es
ficom
(bad)
fidivr
cmp
das
mov
add
clc
cmps
retf
retf
fcomp
adc
rcl
xchg
fist
arpl
test
push
inc
xor
mov
movs
inc
sbb
add
xor
mov
movs
adc
and
add
pop
aam
ror
sbb
mov
push
je
test
xor
jb
jne
sbb
in
xchg
add
inc
inc
xchg
nop
inc
mov
jl
mov
jb
cmp
sbb
cmp
push
rol
mov
push
inc
push
inc
jne
mov
(bad)
inc
sbb
and
xor
psrld
pusha
mov
std
mov
cld
jmp
aas
cmp
mov
xor
push
nop
dec
scas
lahf
and
pop
pop
dec
rol
lea
fisub
xor
xor
or
lock
rol
and
adc
push
mov
add
jbe
dec
dec
js
sub
mov
call
mov
inc
mov
pop
test
adc
push
add
xchg
dec
mov
cmps
sub
sbb
inc
enter
inc
sub
fldenv
aas
mov
cwde
gs
or
xchg
xor
and
aam
aaa
fstp
mov
push
fadd
clc
add
push
mov
ja
or
push
std
jnp
gs
rcr
xchg
or
or
arpl
or
mov
lock
arpl
sub
dec
push
cmp
popa
enter
dec
cmps
nop
rcr
ret
and
loope
nop
adc
push
push
ins
dec
dec
and
inc
retf
or
dec
cmp
sub
call
or
xchg
and
mov
jmp
xchg
and
jne
add
pop
cmp
pop
mov
cmp
or
cmp
or
cmp
sbb
sbb
jo
push
add
and
sbb
or
adc
addr16
aam
dec
fwait
sub
pop
test
pop
add
out
or
das
test
cmp
pop
sbb
push
das
jb
mov
pushf
outs
or
mov
push
das
fldcw
es
imul
dec
mov
mov
test
into
adc
test
mov
mov
adc
fldcw
or
pop
sbb
adc
call
adc
movs
call
cs
sbb
loopne
jle
mov
rcl
xchg
xchg
lods
and
cmp
idiv
div
lds
lods
int
mov
jecxz
shl
mov
mov
shl
sub
out
icebp
les
mov
and
inc
inc
pop
mov
pop
shl
pop
sbb
dec
add
jno
ds
mov
and
cmps
mov
push
or
mov
sbb
sbb
or
cld
push
xor
ret
push
mov
jb
or
(bad)
jne
sar
scas
addr16
(bad)
xor
xor
push
add
push
icebp
mov
push
inc
in
adc
push
movs
out
sbb
ret
add
and
pop
movs
retf
add
pop
sub
or
xchg
jbe
jmp
fsubp
xchg
(bad)
fs
pop
xor
and
sbb
sub
xchg
push
xchg
xchg
jno
mov
and
das
jo
lea
xor
mov
cwde
and
mov
in
or
sbb
test
(bad)
pop
pop
sbb
sahf
pusha
and
xchg
icebp
lock
mov
jmp
cmps
into
es
add
movs
sbb
in
fadd
aad
and
aaa
add
in
daa
mov
sub
and
pop
xchg
or
ins
ret
shl
jmp
push
inc
rcr
mov
xchg
je
das
ins
movs
shl
je
xchg
test
dec
scas
jnp
mov
in
or
enter
add
sbb
iret
add
lahf
ror
mov
arpl
and
rol
jmp
pop
xchg
mov
or
(bad)
jmp
sub
icebp
in
push
mov
add
jno
add
dec
mov
cmps
test
pusha
xchg
test
aaa
ins
or
es
js
adc
scas
cmp
or
pop
mov
and
dec
dec
jecxz
pop
push
add
ret
push
(bad)
outs
cmp
xor
loop
dec
fadd
pop
sub
cmp
add
fisttp
add
mov
lea
pop
call
push
mov
outs
(bad)
in
mov
mov
or
and
ins
and
cmp
xchg
and
loopne
cmc
aas
out
jne
sbb
inc
inc
or
cmps
nop
or
mov
add
dec
inc
sub
jns
jecxz
sbb
xor
sub
xchg
cmps
inc
ins
add
and
mov
add
adc
lock
ja
rol
xor
cmp
call
mov
sbb
jo
adc
pop
pop
mov
xchg
push
call
mov
je
popa
loopne
ret
push
push
pop
push
jmp
clc
dec
push
mov
xor
pop
sub
add
xchg
dec
cmp
or
cmc
xor
clc
sub
ins
xor
ins
dec
retf
pop
adc
test
adc
add
add
dec
jecxz
imul
mov
jno
imul
outs
loope
add
mov
gs
xchg
xor
loope
daa
and
test
daa
and
adc
push
cdq
jne
popa
cdq
or
xchg
push
pop
aam
and
lock
inc
sub
cmp
cmp
neg
push
stos
or
aad
(bad)
mov
js
or
dec
push
or
fs
dec
or
dec
in
and
(bad)
jp
push
ret
fmul
dec
jge
(bad)
sub
pop
mov
pop
loopne
adc
mov
add
adc
mov
push
mul
jne
fcom
adc
jae
jbe
adc
ins
pusha
test
sub
or
mov
sbb
push
mov
sbb
enter
(bad)
or
jecxz
sub
and
and
mov
stos
mov
pop
sbb
loop
pop
cs
and
sub
test
stos
mov
add
sbb
adc
or
add
xlat
fwait
or
call
mov
sar
rcr
ins
mov
fmul
aas
call
inc
popa
test
and
cld
lock
dec
out
cmp
or
test
bound
add
sbb
cmps
sub
mov
xchg
shl
jl
je
rcl
push
inc
or
add
test
mov
push
cmp
xchg
movs
lds
das
xchg
test
jmp
mov
imul
pop
in
add
inc
ins
rcr
sbb
aaa
iret
test
pushf
stos
cmps
cdq
ret
and
test
scas
aad
and
dec
dec
inc
mov
push
(bad)
cmpxchg
out
mov
cmp
dec
je
mov
mov
test
cdq
mov
xor
das
fs
popf
lock
aad
bsf
mov
inc
mov
sub
(bad)
nop
jp
push
outs
pop
outs
add
xor
in
cld
je
add
sbb
pop
xor
push
and
ror
pop
sub
inc
jmp
test
lahf
add
inc
cwde
popf
jne
into
pusha
sbb
push
outs
outs
call
nop
or
icebp
sbb
or
sbb
icebp
inc
add
pop
leave
imul
leave
repz
dec
into
sahf
push
dec
pop
in
fwait
in
lock
xchg
jo
cmp
mov
adc
cwde
pop
lea
push
dec
pop
push
push
clc
pop
push
das
sbb
outs
push
and
add
jg
ror
xchg
mov
sbb
adc
add
sub
push
sub
mov
dec
adc
cmp
aad
adc
mov
add
inc
mov
push
daa
inc
cmp
dec
or
inc
xchg
push
or
call
add
imul
stos
mov
inc
loopne
fbstp
lds
or
xor
sar
pop
adc
push
std
adc
inc
nop
adc
push
shl
push
push
or
inc
inc
lods
inc
inc
fwait
adc
loopne
movs
xchg
sub
imul
dec
add
pop
repnz
pusha
xchg
xor
and
mov
and
dec
aaa
dec
ja
add
adc
add
push
adc
push
popa
movs
or
popa
mov
jo
inc
lods
add
ins
das
fdiv
fnstcw
rcl
add
add
mov
xor
inc
inc
js
push
pusha
and
or
jno
push
cmpps
push
outs
cdq
jb
and
xchg
mov
cli
sbb
push
mov
ror
mov
sub
and
movs
add
add
pop
ja
into
test
ret
mov
aas
adc
inc
pop
pop
add
jl
adc
dec
repz
sbb
mov
pop
dec
and
scas
shl
sub
mov
loope
sub
sub
fnstsw
dec
sbb
cmp
cs
push
lds
sbb
retf
loopne
loopne
fdivr
aad
lock
push
dec
mov
jmp
movs
hlt
movs
daa
fisttp
aam
sbb
popa
sti
jne
mov
mov
(bad)
fadd
mov
sbb
ja
mov
jg
sbb
pop
clc
cmp
call
inc
inc
and
push
pop
adc
ret
enter
and
sbb
aam
rcl
push
fs
inc
pop
xor
push
add
mov
sbb
js
xor
fidiv
cld
cmp
mov
sbb
push
leave
fdiv
bound
xor
retf
sbb
rcr
add
iret
cmp
gs
push
or
pop
ins
pop
mov
int
adc
pcmpgtb
sbb
sub
or
jns
cwde
rol
jmp
fs
xchg
adc
xor
cmp
cmp
and
push
int
cmp
jo
ror
or
lock
push
gs
or
push
and
sub
cmp
xor
inc
sbb
mov
pop
and
fstp
sbb
(bad)
js
lea
jo
xor
push
test
mov
add
jl
f2xm1
add
cmp
stos
fld
inc
rcr
add
jbe
push
mov
or
xor
mov
mov
xor
jecxz
pop
in
sub
push
push
sbb
mov
mov
mov
xchg
sub
into
and
cmp
xchg
loopne
dec
jb
add
add
adc
sbb
stc
and
inc
jmp
or
neg
xchg
adc
popf
test
lods
lea
(bad)
cmp
fsub
gs
adc
and
jne
fist
lods
pop
xchg
adc
jge
xchg
xchg
xor
test
pop
mov
rol
sub
fidivr
push
sub
mov
cmp
inc
cmp
jl
jmp
aas
and
(bad)
sti
push
pushf
enter
mov
fadd
push
mov
add
dec
dec
fidivr
sbb
leave
retf
(bad)
loop
xor
cmp
inc
xchg
sar
adc
loop
lds
imul
das
push
xchg
or
jnp
sbb
shr
push
lods
inc
pop
and
enter
sbb
add
fisubr
shl
jno
(bad)
call
push
sub
inc
lock
push
fwait
enter
test
pop
pushf
cmp
or
dec
out
jecxz
adc
pop
dec
outs
lods
ud1
loopne
inc
aaa
inc
jg
sbb
movs
sbb
mov
in
add
sahf
popa
add
xor
inc
inc
loope
push
adc
xor
icebp
push
push
push
sub
mov
mov
pop
push
push
nop
mov
inc
rol
sbb
sbb
ror
sbb
mov
adc
je
xor
pop
cmps
push
mov
cmp
ss
xor
xlat
and
shr
cmp
addr16
xchg
iret
mov
in
pop
(bad)
add
mov
add
sub
push
sub
and
pusha
stos
cmp
je
adc
bswap
xor
add
or
inc
out
add
pop
arpl
push
dec
mov
les
cdq
mov
paddb
test
aaa
ds
rcl
cmp
add
sbb
xor
stc
xchg
mov
test
lock
push
cmp
rcr
and
mov
xlat
or
bound
and
retf
add
jg
pushf
xor
ror
dec
jmp
rcl
inc
xor
test
leave
dec
push
mov
dec
ret
inc
mov
mov
mov
aam
fistp
add
and
aam
loop
push
imul
sahf
(bad)
(bad)
lds
and
jmp
or
lods
ret
add
cmp
popf
xor
mov
fadd
fmul
xchg
cmc
pop
xor
fcom
cmp
pop
inc
stos
inc
inc
mov
aaa
nop
cmc
das
dec
and
clc
or
inc
out
push
mov
push
stos
loopne
adc
ror
add
xchg
sbb
das
xchg
jmp
sbb
xor
nop
imul
adc
add
inc
pop
mov
xor
fnstsw
jae
sbb
or
sub
shl
add
xor
inc
fist
les
xlat
cld
jno
cmps
cmp
mov
into
cmps
movs
inc
mov
add
inc
add
xor
dec
fsub
mov
dec
sbb
(bad)
cmp
dec
jb
test
mov
mov
xchg
ror
mov
dec
cmps
nop
jb
add
outs
push
mov
add
test
pusha
dec
or
or
call
adc
cmp
dec
scas
mov
jmp
leave
dec
in
popa
loopne
inc
add
inc
cmc
push
in
jno
sbb
and
imul
sahf
sbb
xchg
call
jecxz
lods
pop
int
shr
jns
mov
cs
xor
and
ror
pop
scas
hlt
pop
fst
ds
sbb
(bad)
int3
in
sar
mov
in
mov
in
and
or
ins
sbb
mov
push
adc
push
rol
mov
mov
add
sahf
xor
or
aam
push
(bad)
sub
aad
movs
in
mov
adc
fild
bnd
imul
sbb
pop
cmp
add
iret
pusha
sub
adc
popf
scas
xlat
xchg
jnp
mov
out
dec
out
xchg
repz
jne
add
pop
enter
gs
inc
jb
jmp
pop
(bad)
dec
arpl
pusha
es
pop
mov
ret
pop
push
pusha
mov
sub
xchg
xchg
mov
mov
inc
fst
cld
add
or
rol
xchg
push
inc
and
(bad)
and
add
adc
(bad)
in
pop
xor
push
mov
cs
dec
push
adc
in
std
and
ds
xor
mov
jo
inc
jo
sub
mov
addr16
or
inc
fistp
cmp
or
xor
addr16
xor
mov
leave
mov
mov
in
sub
mov
sub
test
inc
mov
cmp
mov
cmps
shl
lahf
ror
cmp
mov
imul
lock
sub
mov
clc
cmp
inc
xchg
lock
dec
jne
mov
push
dec
mov
add
aad
and
adc
mov
stos
ss
mov
lods
adc
adc
xlat
and
sub
and
pop
sbb
mov
xor
or
and
js
add
retf
call
xchg
or
dec
mov
cmp
add
or
and
(bad)
add
add
test
sub
cmp
push
mov
xchg
mov
and
mov
mov
mov
xchg
pop
xchg
and
cmc
mov
or
imul
and
inc
jbe
push
sub
arpl
push
pop
jl
fwait
ret
jns
or
push
sbb
mov
mov
pop
out
dec
and
xchg
addr16
jno
lea
hlt
(bad)
popf
dec
push
and
arpl
push
dec
adc
mov
inc
test
nop
mov
(bad)
stc
inc
mov
iret
inc
pusha
jbe
xchg
push
sbb
js
xor
(bad)
xchg
dec
cmp
ja
outs
add
test
(bad)
and
push
add
cwde
push
in
inc
sub
mov
test
std
mov
mov
mov
or
out
call
jno
sbb
jne
sub
lahf
(bad)
imul
mov
adc
adc
stos
push
(bad)
push
add
fucomi
xchg
iret
push
(bad)
dec
test
mov
or
frstor
cmp
test
dec
fcom
xchg
adc
cmp
cmp
cdq
adc
xchg
jo
jmp
test
sbb
add
cmps
push
jbe
ins
push
mov
retf
cmp
add
push
imul
icebp
mov
out
(bad)
add
xchg
or
push
hlt
(bad)
int3
dec
mov
mov
pop
mov
add
movzx
shr
jecxz
sbb
inc
ins
je
inc
rcl
push
sbb
sahf
adc
(bad)
das
clc
add
mov
or
loopne
xchg
test
mov
adc
(bad)
mov
nop
dec
hlt
cmp
jne
adc
jne
lock
cmc
mov
test
into
cmp
mov
mov
fcomp
or
mov
inc
dec
cmp
xchg
pop
sub
lods
or
adc
or
sbb
xlat
enter
pop
cs
lock
sbb
shl
popf
imul
fisub
xor
imul
mov
mov
lock
stos
and
add
add
adc
or
or
lock
add
or
push
xchg
pop
and
inc
mov
jmp
add
adc
shr
test
fmul
adc
pop
mov
and
pop
pop
push
jecxz
xchg
inc
imul
sar
mov
push
sub
out
xchg
push
iret
pop
sub
mov
test
push
dec
jns
loopne
inc
ins
and
bswap
add
dec
add
int
or
adc
outs
dec
call
mov
scas
ins
adc
or
or
les
(bad)
and
xor
inc
scas
jmp
popa
fist
retf
push
fisttp
jl
push
shl
mov
pop
jo
leave
and
pop
pop
pushf
adc
inc
or
nop
pop
push
inc
mov
pop
imul
fdivr
add
pop
adc
aas
or
jp
inc
mov
mov
scas
or
sbb
pop
push
mov
cmp
push
sub
mov
test
mov
xchg
cld
cs
add
loop
xchg
adc
es
sub
ja
les
nop
sub
call
mov
add
hlt
pop
call
mov
xchg
nop
fistp
imul
push
cmp
jle
mov
cmp
call
loopne
mov
inc
cmp
mov
add
js
sub
xchg
aaa
popf
lea
inc
ja
inc
out
xor
test
inc
jle
scas
rcr
add
lods
adc
xchg
pop
sub
push
sbb
xlat
mov
je
and
cmp
adc
adc
jmp
mov
fadd
test
push
add
out
cwde
mov
jne
(bad)
loopne
xor
test
or
(bad)
outs
scas
fucomip
test
sub
mov
jne
stos
push
imul
pushf
out
mov
cmp
scas
jns
jo
ja
push
inc
sub
add
cmp
or
adc
jge
jns
and
outs
mov
icebp
hlt
repz
mov
jno
pop
aad
adc
lods
in
fild
or
push
cwde
ror
iret
gs
dec
loop
jecxz
mov
dec
xlat
push
and
inc
and
push
mov
sbb
lea
lahf
imul
adc
cmp
ret
mov
xchg
cld
jecxz
mov
sub
loopne
adc
imul
test
inc
xor
add
popa
jns
push
fisttp
dec
scas
xchg
sub
mov
add
push
fld
and
lods
sbb
push
mov
shl
or
fadd
cmps
imul
mov
adc
or
dec
or
xchg
imul
div
jle
mov
push
push
inc
push
mov
lock
(bad)
jbe
or
jo
retf
jl
push
add
xor
xor
jb
jmp
movs
mov
ss
mov
adc
inc
sbb
aas
mov
cdq
xor
ins
sbb
inc
ins
adc
nop
mov
or
test
aaa
lock
push
push
push
push
add
push
addr16
ins
mov
sub
push
pop
adc
or
jne
add
popa
mov
and
or
hlt
int
sub
push
jne
xor
sub
test
sub
push
pop
(bad)
out
je
add
mov
push
cmc
add
fcmovnb
push
fistp
fiadd
inc
jl
cmp
adc
mov
add
or
ret
mov
into
add
inc
sahf
push
test
cmp
push
jg
sub
dec
rcl
dec
ret
repz
sbb
add
add
loopne
rol
test
mov
das
mov
add
jp
xchg
mov
inc
(bad)
add
mov
and
fcom
add
cmps
and
cmp
or
inc
push
cmp
out
jb
xor
xchg
xchg
mov
cmp
push
fidivr
sbb
add
mov
push
and
pusha
xor
fwait
dec
add
add
sub
jne
add
sbb
enter
dec
add
add
push
jb
ror
add
leave
sub
inc
xchg
dec
ds
dec
jne
ds
add
or
mov
inc
aad
mov
push
dec
dec
add
dec
add
les
mov
mov
xchg
cli
cmp
xchg
out
inc
push
enter
cld
dec
add
cmp
xchg
cmp
add
adc
and
inc
jecxz
ret
es
sbb
or
adc
inc
mov
(bad)
cmc
sahf
mov
mov
mov
test
push
pop
rol
sar
call
and
mov
fcmovu
cwde
aam
cmps
jmp
iret
idiv
jnp
es
add
(bad)
ret
jmp
pop
mov
pop
fidiv
pusha
scas
out
dec
in
push
push
dec
popf
jae
int3
mov
pop
mov
cmp
sub
imul
imul
sub
dec
jno
ins
aaa
add
adc
or
and
shr
gs
enter
enter
add
add
popa
and
(bad)
ret
jecxz
mov
mov
stc
xchg
adc
out
in
in
(bad)
clc
cld
dec
leave
add
cld
call
test
aaa
enter
xchg
sub
push
jno
arpl
lea
xchg
pop
repnz
pop
inc
mov
in
pop
stos
pop
(bad)
hlt
mov
jmp
xchg
pop
mov
jo
or
xchg
cmp
pop
stos
hlt
lea
jmp
in
push
push
sbb
jbe
movs
dec
adc
and
push
sar
fistp
pop
scas
(bad)
ficomp
into
imul
mov
add
cmp
je
and
lock
out
arpl
cmp
push
mov
scas
push
dec
sub
push
fwait
mov
inc
ins
(bad)
push
in
jmp
sbb
mov
fld
or
add
inc
dec
sahf
dec
add
and
pop
pop
adc
shr
lock
jbe
mov
mov
inc
mov
inc
or
inc
pop
pop
and
add
rcl
mov
pusha
test
pop
mov
pop
pop
mov
je
inc
or
retf
and
dec
add
inc
pop
mov
add
add
jl
es
ret
ins
leave
xchg
jns
mov
shl
sbb
push
inc
and
push
mov
ret
push
cli
and
dec
pop
mov
adc
(bad)
mov
enter
cmp
add
or
mov
loopne
mov
sub
pop
clc
mov
fsub
lods
fcomi
pop
mov
test
xchg
sub
hlt
out
movs
inc
xchg
pop
loope
push
pop
loop
push
mov
push
mov
ins
sbb
or
dec
or
inc
dec
jmp
jae
xchg
push
mov
cmp
cmp
xchg
dec
and
add
add
jne
jbe
or
xchg
or
lahf
shl
inc
mov
jl
cwde
mov
rcr
loop
fistp
pop
cmp
ins
or
mov
enter
xchg
xlat
xlat
or
hlt
add
and
rol
sbb
or
cs
aas
sbb
movs
add
cmc
sub
sbb
push
lds
addps
rdtsc
sti
lea
and
pop
mov
rcl
push
es
pusha
add
dec
mov
icebp
fs
dec
push
pop
shl
cmc
mov
(bad)
or
add
rcr
fdivr
pop
loope
push
inc
shl
rol
push
out
mov
jle
xor
cmp
je
ret
push
xlat
jmp
add
or
ins
jl
movs
or
ret
fadd
or
outs
jmp
mov
aaa
adc
add
mov
outs
pop
dec
ins
add
add
bound
ins
xor
cmp
add
cs
push
mov
pop
aam
int3
mov
call
inc
fst
add
and
fisttp
fiadd
stos
push
rcl
mov
jl
dec
dec
popf
pop
cmp
dec
leave
add
add
push
repz
push
enter
add
pop
enter
addr16
and
mov
mov
xchg
rol
dec
cmp
fisub
adc
(bad)
or
xor
jg
jmp
outs
dec
jmp
jmp
es
push
or
sbb
popa
in
in
add
add
add
pusha
inc
xchg
or
sbb
push
mov
jl
add
imul
or
mov
test
ins
push
cs
repz
pop
push
xor
sub
xor
push
aam
retf
das
add
pop
adc
add
or
pop
aaa
sbb
sbb
inc
into
pop
test
sub
cmp
ins
add
push
leave
mov
lea
push
mul
push
lahf
and
lods
dec
push
sbb
es
les
ret
hlt
add
pushf
and
push
enter
xor
add
jbe
fwait
add
pop
sbb
inc
jge
inc
mov
mov
sbb
sub
xchg
lock
and
pop
imul
xor
sbb
dec
cmp
nop
arpl
push
or
mov
out
into
dec
(bad)
xor
cwde
mov
inc
pop
or
call
adc
dec
xor
or
and
int
pop
or
sbb
jb
inc
sub
push
jl
jl
test
or
or
and
or
popf
sbb
mov
cmp
jge
mov
mov
push
add
packuswb
aad
enter
repz
jmp
mov
test
push
mov
xor
pop
jnp
xor
js
retf
add
or
and
fsubrp
loop
cmp
in
add
sahf
add
dec
(bad)
sub
sti
in
and
repnz
lea
fisub
cdq
aad
push
cmp
adc
jne
xchg
dec
cmp
fdiv
outs
push
rcr
push
and
mov
add
js
jmp
out
(bad)
out
or
ret
fwait
cmc
test
sbb
cmp
push
and
push
call
adc
mov
add
xchg
push
icebp
xchg
cmovns
inc
out
loopne
pusha
and
push
xor
mov
or
bts
inc
lahf
retf
add
xor
mov
in
cmp
sbb
mov
ins
idiv
push
xlat
(bad)
daa
mov
push
push
or
imul
add
xchg
dec
sub
jae
fmul
inc
sbb
clc
cmp
push
or
mov
and
xchg
test
mov
and
(bad)
mov
(bad)
pop
test
jno
fadd
xchg
mov
nop
xlat
dec
adc
dec
xchg
jnp
lock
adc
(bad)
and
push
in
mov
(bad)
call
adc
adc
xchg
push
jg
and
popa
fcomp
sbb
xor
mov
test
and
adc
in
fadd
xchg
jne
sub
sbb
fdiv
push
stos
jno
sub
sbb
adc
add
push
cmps
adc
xchg
add
dec
ficom
stos
jb
test
or
push
adc
pushf
and
or
mov
adc
xchg
dec
push
stos
adc
(bad)
lock
jg
and
and
stc
xor
or
and
pop
rol
das
xor
addr16
xor
pop
mov
xchg
mov
inc
push
adc
mov
pop
mov
sbb
das
lock
test
mov
mov
fld
icebp
es
push
shr
add
repz
pop
fdiv
inc
xor
in
pop
cs
call
and
inc
rol
or
mov
add
xchg
lahf
jno
mov
add
xor
dec
xor
fld
call
and
popa
jo
and
xchg
xor
cmp
add
int3
xchg
mov
sub
adc
dec
paddusb
sub
mov
inc
fstp
(bad)
mov
or
mov
nop
cmp
mov
bound
psubsw
mov
adc
and
mov
arpl
push
lds
je
outs
rcr
dec
adc
data16
dec
retf
jl
xor
push
rcl
hlt
jle
sbb
inc
jnp
or
and
pusha
mov
pusha
dec
pop
call
pop
or
(bad)
mov
add
lods
ret
sbb
or
shr
pop
(bad)
add
clc
lea
sub
xchg
and
push
pop
mov
rcl
adc
cmp
mov
dec
sub
imul
push
pop
or
push
out
mov
sub
loope
pop
loope
aam
adc
in
mov
sar
jge
ins
or
movs
and
push
jmp
and
aam
gs
test
(bad)
cld
push
add
jo
ret
sub
push
add
daa
mov
push
sbb
pop
and
xchg
mov
mov
or
mov
hlt
push
(bad)
dec
call
or
mov
xchg
popf
dec
and
into
in
in
les
push
adc
cmp
adc
lahf
cmp
ins
push
aaa
xor
or
push
sbb
aas
xor
xor
(bad)
sahf
inc
mov
clc
or
sub
pop
psubusb
push
mov
loop
add
dec
cmp
jne
les
adc
xor
dec
es
mov
in
push
mov
fadd
jg
or
jle
push
mov
push
push
sar
das
addr16
xchg
add
and
push
test
adc
mov
sub
mov
clc
jle
iret
imul
out
ins
inc
push
pop
pop
sub
lea
fs
inc
cmp
ds
dec
push
jmp
pushf
or
or
in
add
cdq
pop
retf
je
pop
popf
in
or
and
ret
jb
inc
pop
adc
cmp
sbb
sub
push
sahf
cld
clc
mov
add
pop
mov
xchg
add
mov
shr
or
in
mov
or
add
ret
sar
or
gs
pop
add
sbb
wbinvd
pop
jns
fld
sar
test
fadd
adc
sbb
ja
adc
int3
push
or
or
inc
cli
and
xor
nop
add
movs
mov
sub
xor
dec
addr16
mov
and
test
cmc
loope
or
jae
arpl
push
cmp
pop
fldcw
mov
mov
mov
fsubr
sub
adc
repz
ins
sbb
jmp
and
mov
aas
nop
mov
ins
ret
push
inc
mov
or
or
push
sbb
inc
jmp
movs
or
outs
adc
mov
imul
pushf
xor
adc
inc
mov
lock
and
add
sahf
push
ror
call
rol
daa
push
add
addr16
loop
xor
push
cmp
or
and
xchg
mov
add
pop
je
inc
jbe
xchg
push
mov
or
xchg
js
add
sub
jle
adc
push
add
sti
xchg
push
add
sub
add
jne
movs
clc
test
into
xchg
push
and
pop
or
dec
sti
inc
or
jecxz
add
out
add
inc
mov
xchg
mov
cli
jne
push
mov
das
add
js
sub
loopne
(bad)
sbb
inc
nop
push
or
pop
cmp
add
je
ins
repz
inc
push
add
or
movs
sbb
and
adc
(bad)
call
or
cmp
mov
aam
fwait
ret
sub
push
inc
xor
sbb
or
push
mov
js
sbb
dec
js
inc
sub
or
cmp
mov
test
or
or
push
pop
adc
fcmovnb
mov
inc
push
rol
add
ja
adc
and
dec
adc
cmpps
and
jg
and
jne
xor
pop
das
or
push
pop
mov
sbb
add
sub
sub
mov
add
cs
sbb
enter
cs
and
cdq
out
inc
ror
mov
add
and
in
leave
xchg
mov
add
mov
es
cmp
push
inc
aaa
dec
push
cld
jmp
mov
mov
test
shl
dec
inc
push
inc
jecxz
leave
mov
mov
scas
inc
hlt
lock
inc
(bad)
pop
push
or
int3
xor
adc
scas
or
push
fs
fs
or
in
mov
jecxz
sub
or
(bad)
(bad)
into
sahf
adc
test
xchg
je
fldcw
outs
push
cmp
cwde
int
mov
cmp
movs
adc
add
add
add
sub
shrd
adc
mov
mov
mov
pop
push
shl
das
pop
or
and
xchg
mov
add
rcr
sub
mov
dec
into
jno
fs
inc
mov
sbb
push
and
rcr
mov
js
pop
or
adc
test
and
inc
inc
or
sbb
push
add
into
adc
dec
dec
sbb
sbb
es
add
sbb
push
movs
lea
ror
push
cs
mov
cmp
push
or
std
add
mov
aas
sbb
stc
ss
cmp
es
retf
mov
mov
pop
lock
enter
nop
xchg
pop
repnz
or
loopne
inc
sub
cmp
popf
inc
fcom
mov
jb
int3
test
lods
mov
mov
mov
fs
jmp
bound
sar
mov
sbb
sub
inc
add
pop
dec
add
or
adc
sbb
mov
stos
fwait
inc
or
add
jno
sub
call
xchg
sub
sbb
cmp
mov
or
movs
push
repz
add
cmp
or
in
or
or
sub
cmp
mov
pop
xchg
inc
mov
mov
imul
sbb
and
in
push
cwde
push
mov
xor
call
iret
or
mov
in
or
pop
je
sub
inc
ins
sbb
test
cmp
sbb
fisub
or
in
cmp
xor
les
xor
imul
in
and
js
lods
xor
sub
pop
je
ficom
adc
in
sbb
lock
lods
cwde
xor
movs
test
sub
or
inc
cmp
inc
push
stos
movs
add
movs
add
lock
sbb
add
inc
or
or
add
jp
adc
pop
in
add
shr
ret
std
push
leave
and
add
cmps
outs
cmps
fcmovne
mov
mov
and
dec
cmps
cmps
in
inc
pop
jg
mov
mov
shl
outs
js
sbb
jb
test
add
mov
pop
aad
inc
sub
push
sbb
inc
push
sbb
stos
adc
icebp
adc
sar
(bad)
push
or
(bad)
cmp
daa
test
push
push
mov
jp
inc
movs
in
sbb
xchg
push
xchg
inc
or
nop
mov
test
inc
mov
mov
jno
lock
cmp
sahf
mov
cwde
in
pop
cld
jne
mov
dec
sub
jge
cmc
dec
and
shl
sub
cmps
scas
add
cmc
push
mov
jno
leave
or
fnstcw
int3
sub
add
jmp
or
add
sub
cmps
and
(bad)
add
stos
imul
add
adc
fs
push
lea
outs
mov
cmp
add
or
sbb
call
inc
and
js
nop
mov
or
test
cld
add
in
nop
mov
pop
jmp
cli
push
inc
pop
mov
test
ror
cmp
aad
jo
shl
adc
popf
scas
and
and
lds
jge
sti
mov
fdiv
mov
fisttp
and
clc
movs
adc
inc
jmp
inc
jl
and
fdivr
bound
pop
lock
inc
loop
mov
lds
push
or
mov
add
mov
jmp
and
out
inc
mov
iret
pop
loop
pop
pop
dec
call
xchg
and
add
xor
sub
push
(bad)
dec
inc
and
inc
movs
stos
xor
dec
push
or
xchg
(bad)
loopne
hlt
dec
mov
dec
jo
adc
adc
adc
sbb
add
xchg
in
jb
push
pop
jge
dec
mov
or
(bad)
xchg
rcl
dec
rcr
mov
mov
stc
pop
push
mov
inc
jge
outs
retf
das
pop
pop
ret
mov
add
adc
add
add
cmp
sub
push
stos
and
leave
es
jp
test
sub
cmp
cwde
movs
pop
lahf
add
scas
fs
sbb
test
outs
movs
dec
ds
jmp
call
push
mov
iret
jmp
(bad)
or
push
or
adc
aaa
sbb
or
cmp
nop
stos
loopne
test
pusha
add
push
rcl
pop
mov
push
mov
pusha
jns
xchg
xlat
push
push
add
pusha
jmp
xchg
or
(bad)
jmp
dec
bound
jmp
inc
pop
dec
sbb
dec
inc
es
adc
or
push
and
stc
or
mov
dec
jl
mov
adc
lea
paddb
dec
ret
sub
je
sub
adc
and
(bad)
pusha
mov
cmp
add
jle
fwait
stos
jecxz
and
jl
stc
data16
cld
and
dec
add
inc
ds
jmp
sbb
aam
or
mov
dec
test
das
push
add
mov
test
int3
jae
or
adc
pop
pop
mov
mov
inc
jl
in
loope
ins
adc
jmp
fwait
cld
mov
aas
xchg
in
jmp
aas
cmp
jmp
adc
in
dec
iret
jbe
or
mov
sbb
or
pusha
mov
xor
and
inc
add
xor
fisubr
jmp
daa
inc
nop
sbb
cmp
dec
in
loope
fdivr
fstp
or
push
rcr
xor
retf
dec
cmp
imul
cmp
mov
or
inc
jge
jo
cdq
xor
pop
jl
push
lods
lahf
popf
push
push
push
jl
in
inc
call
jmp
nop
das
fisub
jmp
sub
lock
nop
sub
icebp
jmp
das
fs
aas
daa
sub
inc
sub
inc
mov
fidivr
and
fcmovbe
mov
xchg
or
ins
fwait
aam
adc
aad
stos
xchg
lea
inc
xchg
movs
push
sti
out
je
adc
nop
add
inc
sbb
cmp
call
popa
cld
mov
xor
or
fld
sbb
jl
adc
lea
sub
cld
ds
imul
mov
xchg
or
pusha
out
ins
or
cmps
rcl
sub
push
cmp
cmp
add
or
hlt
xchg
loope
adc
mov
mov
pop
pop
arpl
or
inc
inc
pop
les
repz
lock
sbb
daa
mov
add
cmp
je
sub
ins
and
ds
mov
out
inc
popf
sbb
not
pop
fild
or
cmp
shl
pop
xchg
in
call
mov
add
xor
test
shl
inc
sbb
neg
push
mov
add
cmp
loopne
inc
data16
adc
mov
add
addr16
and
add
mov
loopne
pop
lahf
push
inc
pop
arpl
xchg
adc
cdq
xor
xor
mov
mov
add
daa
xchg
mov
push
jae
imul
aaa
sub
lods
fwait
xchg
mov
js
or
add
(bad)
pusha
inc
and
fsub
das
push
or
xor
and
xchg
dec
sbb
add
movs
nop
sahf
ds
lds
fld
jae
je
mov
jmp
test
pop
popa
push
and
jns
fcomp
push
add
and
push
(bad)
mov
or
cmps
nop
mov
or
inc
adc
imul
(bad)
movs
sbb
sbb
add
inc
add
push
xchg
dec
add
dec
jmp
mov
or
mov
push
cmp
pop
ret
xor
shl
sub
jbe
imul
xchg
fisttp
aaa
(bad)
loopne
loope
not
mov
mov
lds
dec
imul
xchg
inc
outs
lea
xchg
je
pop
outs
jno
iret
mov
sbb
adc
xchg
test
pop
cwde
mov
cmps
stos
lds
sti
adc
mov
push
inc
push
xchg
mov
movs
dec
cmps
xor
div
sahf
and
es
push
push
shr
xchg
xchg
aad
push
(bad)
outs
inc
in
enter
xor
or
push
xor
or
dec
jmp
sub
or
push
dec
sbb
sbb
jno
push
xor
adc
pop
cmps
or
rol
or
outs
int3
dec
or
mov
dec
jecxz
(bad)
aaa
inc
jmp
or
pushf
jmp
sub
jne
or
adc
fist
popa
pusha
xor
adc
sbb
ret
add
out
mov
ins
ins
cdq
adc
(bad)
or
or
jmp
(bad)
cwde
or
or
stos
iret
and
arpl
call
fidivr
and
sbb
mov
sbb
inc
sub
push
push
push
rcr
adc
or
xor
pop
adc
add
das
cli
sbb
push
mov
push
cli
rcl
in
ja
jb
and
loop
push
and
sahf
jmp
add
or
adc
cmps
sbb
or
push
cld
or
cwde
add
add
shl
js
mov
inc
neg
jae
add
fdiv
push
shl
pop
jno
push
xchg
sar
adc
and
ret
mov
test
shl
fnsave
mov
cmp
ins
sub
add
cli
inc
or
sahf
(bad)
xchg
inc
outs
out
add
retf
push
jp
lea
jo
shr
lds
enter
lock
push
scas
clc
jmp
dec
in
iret
add
add
xor
js
lods
imul
push
fadd
jecxz
add
clc
pop
add
sbb
imul
xchg
rol
popa
and
ret
imul
cmp
icebp
mov
pop
cld
stc
fcomp
and
rcl
cld
inc
(bad)
ss
mov
jmp
dec
push
adc
or
fsub
data16
pop
mov
aad
xor
push
shr
data16
clc
mov
cmp
xor
xor
xor
mov
cwde
scas
or
test
mov
add
dec
jle
pop
push
xchg
test
sub
in
or
nop
push
jns
sub
sbb
hlt
aaa
or
push
xchg
loopne
mov
nop
and
push
ret
out
or
push
loope
adc
pop
cmps
sbb
or
mov
jno
jmp
adc
pop
(bad)
or
mov
cmps
add
mov
xor
arpl
fcmovbe
out
jmp
or
sbb
clc
jge
inc
inc
push
aam
cmp
loopne
and
neg
sbb
jo
rol
push
xchg
sbb
add
sub
dec
cwde
mov
push
xor
xchg
mov
retf
mov
inc
ds
mov
cld
and
add
pop
or
repnz
dec
xchg
ficomp
cmc
aaa
fist
sbb
stc
or
xchg
jb
xor
jne
add
or
push
jne
dec
xchg
or
fxch
add
pop
das
sub
xor
or
aad
adc
stos
shr
cmp
pop
pop
daa
outs
adc
or
dec
ret
push
sub
cs
stos
sbb
adc
movs
ret
outs
(bad)
mov
nop
les
sbb
sbb
sub
pop
aam
stos
mov
inc
mov
and
retf
test
es
inc
mov
mov
in
gs
push
and
and
or
clc
and
js
sbb
test
popf
dec
sub
dec
mov
adc
adc
call
popa
or
xchg
mov
cmps
imul
inc
ss
pop
leave
inc
mov
and
fst
movs
add
iret
xchg
pop
push
adc
call
pusha
jno
inc
ror
xchg
mov
or
dec
mov
and
inc
push
cmp
mov
push
jmp
cdq
mov
hlt
and
and
or
aad
push
pop
pop
xchg
jecxz
pop
dec
jmp
movs
sub
sub
adc
inc
or
pop
mov
mov
push
popf
lahf
aaa
clc
inc
test
mov
dec
movs
pop
xor
dec
sbb
or
pop
jb
adc
inc
ret
and
fisubr
mov
(bad)
cdq
pop
dec
xchg
pop
movs
adc
in
arpl
or
add
and
pop
push
sub
out
icebp
mov
inc
cmp
xor
add
jns
inc
fbld
rol
push
lahf
push
mov
ins
jge
xchg
adc
mov
dec
pop
xor
sub
jno
test
or
test
test
sbb
sbb
pusha
inc
xor
daa
rcl
je
into
add
sub
pop
and
pusha
mov
sbb
mov
(bad)
pop
fild
das
pop
and
jns
jae
add
mov
dec
in
add
mov
push
ja
xchg
fs
push
push
jmp
jle
cmp
je
push
das
mov
pop
sar
rcr
sti
jbe
and
add
add
imul
pop
pop
mov
xchg
sub
jge
dec
es
push
stos
add
push
or
iret
ret
fmul
push
sub
lods
sahf
pop
scas
inc
jge
add
fwait
mov
adc
ins
xchg
cwde
sar
pop
je
mov
lods
rcl
dec
mov
jge
adc
jno
xor
test
(bad)
pop
push
lea
mov
arpl
lea
stc
pop
cmp
enter
mov
(bad)
jp
lock
add
adc
jg
mov
sub
sbb
in
push
push
test
or
mov
mov
mov
adc
mov
js
xlat
jo
int3
mov
jl
ret
jmp
daa
inc
or
cmc
add
add
inc
xor
jne
adc
sub
push
or
int3
das
lods
bound
sbb
cdq
push
cmp
xchg
sbb
movs
push
and
sbb
sub
imul
and
add
fwait
jb
mov
and
adc
push
in
(bad)
pop
ror
xor
stc
fmul
inc
xor
add
add
or
sub
xor
push
or
dec
js
arpl
cmp
inc
test
call
jb
or
ja
lea
sbb
or
fs
cld
inc
cmp
je
loopne
or
add
xchg
dec
mov
loope
mov
enter
lea
add
ror
ficomp
ret
fs
shl
add
inc
sbb
pop
jo
shr
push
mov
cmc
adc
mov
popa
sub
ret
sbb
jo
ret
into
gs
adc
or
fild
xchg
xchg
jmp
sahf
aad
mov
mov
dec
fimul
mov
ret
arpl
jp
push
imul
sbb
and
xchg
dec
mov
sbb
inc
xor
cmp
add
jno
lds
push
dec
das
test
adc
jne
inc
sbb
mov
add
jae
sti
out
in
and
adc
adc
aas
or
jne
ja
dec
push
jne
daa
pop
mov
mov
push
xor
inc
add
add
jne
f2xm1
data16
fsub
inc
dec
int3
cmp
fisub
ret
push
jmp
(bad)
call
inc
xchg
jnp
mov
aam
mov
xchg
adc
sub
jnp
fst
inc
adc
jo
adc
or
pop
daa
jne
fldcw
retf
push
push
popa
mov
and
xor
pop
(bad)
lahf
add
sbb
nop
pusha
xor
inc
cli
push
push
xor
mov
or
popa
add
ins
pop
xchg
pop
pop
test
mov
sub
mov
push
adc
mov
mov
cmc
sub
add
mov
pop
jecxz
lock
mov
xor
dec
rol
jmp
inc
imul
jp
shr
call
dec
xchg
enter
ret
enter
lods
add
xor
daa
push
pop
dec
push
or
mov
jl
sub
mov
inc
push
dec
mov
divps
xchg
or
sbb
pop
sub
sub
add
mov
add
popa
mov
pop
add
pop
je
sub
adc
add
loopne
mov
push
jge
mov
mov
mov
aas
pop
sar
adc
fstp
int3
push
aaa
mov
lea
push
adc
dec
jns
mov
or
dec
in
data16
(bad)
loopne
popa
xor
mov
adc
inc
sti
dec
cmp
jecxz
xchg
shr
outs
movs
mov
shl
loopne
add
xor
push
pop
sbb
adc
outs
adc
mov
push
ins
retf
push
push
and
xchg
ror
mov
cdq
pop
mov
or
sbb
mov
xchg
cmps
jmp
test
xor
pop
adc
fnstenv
push
arpl
ss
jecxz
mov
add
dec
push
in
push
sbb
and
(bad)
dec
push
aaa
dec
mov
adc
fnstcw
lods
dec
rcr
jmp
fldcw
cmp
mov
push
iret
aas
adc
rcr
mov
in
es
mov
(bad)
mov
lea
mov
sbb
and
xor
ret
outs
xor
gs
sub
xlat
cmp
sub
je
outs
dec
sub
add
mov
shr
or
out
sub
jb
add
and
lods
(bad)
shl
ss
push
mov
std
scas
push
xchg
pop
and
ret
mov
xor
ss
(bad)
int3
test
mov
sbb
adc
mov
(bad)
sub
call
jmp
or
rcr
lods
or
add
rol
dec
jmp
ror
bound
sub
popa
sbb
pop
xchg
mov
fld
hlt
pop
cmp
add
(bad)
and
fadd
ret
das
fsubrp
pop
popa
push
and
sti
les
cmp
or
push
clc
jmp
(bad)
je
leave
jg
js
or
adc
mov
ds
dec
mov
jmp
hlt
xor
cmpxchg
or
sbb
or
(bad)
dec
jmp
js
loope
inc
dec
xor
div
jge
push
test
cli
daa
cmp
loopne
call
mov
push
out
adc
mov
sbb
dec
pop
lods
sti
adc
je
stc
dec
sbb
or
int
add
xor
loope
loope
fsubr
mov
pop
jb
xor
mov
adc
mov
(bad)
jp
std
sub
inc
mul
shr
pusha
rol
mov
add
inc
push
lock
or
sub
pop
push
and
xor
dec
(bad)
call
movs
xchg
jne
dec
xchg
lods
mov
mov
ret
in
or
jno
mov
adc
cli
(bad)
xor
push
xor
test
add
dec
jo
xor
xlat
ins
xor
xor
cwde
jmp
push
fdiv
mov
or
dec
and
sbb
xchg
or
add
add
sub
fwait
iret
sbb
jmp
adc
ficomp
xchg
fcom
fbld
cmp
jnp
push
ins
fistp
retf
sbb
add
xchg
and
fisub
inc
pushf
and
mov
sub
std
xchg
add
inc
movs
mov
shl
xchg
sbb
mov
xchg
jo
mov
push
mov
push
push
ret
jne
sar
mov
mov
mov
popa
cmp
push
xchg
call
fs
and
push
addr16
aas
add
pusha
hlt
sbb
test
rcl
cwde
mov
push
mov
mov
je
mov
dec
xor
jp
fnstenv
sahf
dec
dec
xchg
add
loop
rol
jge
(bad)
aad
or
test
pop
pop
mov
jmp
xchg
cmps
data16
jnp
fstp
jmp
imul
adc
loop
xor
mov
int3
das
sub
and
dec
pop
and
bound
nop
sbb
or
arpl
and
mov
sbb
in
xor
in
fwait
cld
xchg
xchg
add
repnz
and
je
mov
mov
or
sbb
mov
leave
jecxz
jmp
pop
cmp
lock
dec
gs
push
dec
call
mov
mov
jmp
cmp
cmp
aad
(bad)
enter
dec
imul
push
retf
or
clc
inc
cmp
lea
fnsave
pop
jmp
adc
popa
cdq
imul
nop
xchg
movs
adc
adc
and
add
mov
xchg
or
mul
cmp
adc
pusha
and
cmp
jg
imul
xchg
dec
sub
cwde
inc
push
mov
pop
and
movs
jno
sbb
popa
pop
cs
je
cmp
xchg
or
push
and
add
and
daa
add
cmp
sbb
dec
add
mov
inc
xor
in
and
push
mov
push
neg
mov
out
adc
lods
lock
jmp
push
jmp
xor
lea
add
jmp
and
cld
xchg
mov
test
and
jne
push
pop
or
stos
hlt
es
addr16
leave
dec
xor
push
inc
xor
dec
sbb
pop
rcr
add
push
adc
call
xor
hlt
inc
or
mul
pop
xchg
fs
push
push
push
adc
or
dec
and
cmps
daa
cmp
ret
inc
nop
add
push
add
inc
pop
arpl
loope
add
cmp
cmp
or
popf
into
and
or
add
fwait
cwde
mov
ins
jmp
int
lea
adc
stc
or
sub
jns
mov
neg
jmp
(bad)
jno
ja
sbb
dec
xchg
add
jge
ror
mov
mov
arpl
sahf
add
mov
ins
repnz
lea
cmp
xor
pop
fcomp
dec
(bad)
jne
loope
imul
aam
les
test
adc
add
(bad)
cli
nop
movs
mov
or
adc
inc
mov
rcr
and
movs
mov
pop
(bad)
gs
push
fnstsw
ins
pusha
push
add
popa
adc
gs
jge
retf
in
mov
add
push
js
cmp
ds
dec
or
int3
mov
rcl
or
push
push
repz
jmp
xor
sub
or
xchg
and
push
sbb
jmp
jb
ror
xchg
inc
fdivp
cmps
sub
add
xchg
and
call
dec
fdiv
adc
dec
clc
sbb
fisttp
and
(bad)
bound
lea
test
or
in
mov
les
dec
pop
pop
(bad)
test
sub
imul
sbb
test
xor
(bad)
fldenv
ret
fcomi
mov
(bad)
jb
add
test
add
cmp
or
adc
push
cmp
sub
enter
cld
add
dec
ret
adc
push
fstp
daa
inc
and
push
mov
adc
das
add
jno
adc
inc
or
cmp
les
ins
shl
sbb
imul
adc
jno
arpl
fisub
test
and
je
or
ds
in
mov
and
push
mov
gs
sbb
dec
shr
cwde
fnstenv
xor
fnstcw
shl
mov
jbe
xor
xchg
popa
fldenv
out
pop
pop
adc
push
clc
push
inc
mov
cmp
stos
mov
add
mov
enter
sbb
movs
jbe
jle
js
mov
xor
add
cmp
out
out
push
inc
dec
and
sbb
xchg
mov
fs
add
jmp
and
ins
cmp
mov
adc
ja
mov
mov
jo
adc
imul
push
(bad)
icebp
add
xor
sbb
and
sbb
dec
mov
shl
fs
data16
mov
lock
add
movs
push
sbb
mov
or
push
adc
pop
daa
pop
sbb
sbb
pop
outs
shl
and
dec
sbb
cdq
(bad)
fmul
loopne
xor
inc
stc
je
hlt
mov
push
cmc
adc
adc
and
jne
mov
ins
lea
ja
shr
outs
rol
or
or
lds
loop
inc
cmp
cld
stos
cdq
push
push
aas
fcom
sub
mov
add
add
mov
pop
jp
cdq
sbb
cmps
xchg
jmp
out
cmps
pop
mov
lds
and
popa
mov
in
or
xchg
mov
xor
push
jne
and
or
jp
enter
jmp
dec
mov
mov
push
add
or
xor
pop
fist
add
adc
rol
les
and
add
mov
lods
xor
and
(bad)
imul
daa
pop
push
movs
lods
rcl
xchg
pop
dec
sti
inc
leave
pop
imul
ret
push
retf
mov
call
cmp
shl
dec
sbb
mov
dec
fcmovnbe
or
push
(bad)
fisubr
adc
int3
enter
or
mov
pop
jmp
test
ret
hlt
imul
pop
cmp
sub
add
fs
cwde
cdq
dec
and
(bad)
retf
shl
jno
daa
dec
mov
and
xor
sar
jmp
or
ror
cmp
enter
cmp
shl
mov
shl
mov
cmp
xor
ins
mov
hlt
or
cmps
popf
pop
adc
dec
and
aam
cmc
and
rcl
mul
inc
push
pop
xchg
xchg
idiv
ret
je
add
ins
push
sub
shl
(bad)
sar
mov
xor
ins
xor
outs
or
jnp
push
adc
les
sub
sub
or
iret
jo
push
xchg
jp
mov
test
add
lods
mov
inc
or
cmp
into
xchg
lahf
add
jo
or
or
in
test
(bad)
push
in
or
fwait
or
stc
inc
stos
adc
and
mov
iret
xlat
jbe
and
push
nop
mov
in
movs
mov
pop
ret
xor
cs
or
pop
sub
rcr
jns
sbb
push
mov
inc
aas
dec
pop
pop
add
outs
out
xor
and
std
xor
inc
jp
or
jae
jp
dec
shl
adc
ror
mov
jno
loope
mov
in
xor
push
mov
push
add
add
lock
daa
rol
jmp
xchg
sbb
mov
nop
dec
push
xlat
dec
adc
std
ja
jp
push
dec
mov
adc
jecxz
inc
inc
push
jmp
(bad)
adc
inc
lods
clc
pop
lods
mov
imul
xor
sbb
and
iret
in
sbb
xchg
and
ss
shl
cmp
and
rcr
and
cmc
and
lock
les
jle
adc
aam
and
sbb
test
cmp
push
sti
inc
test
sbb
adc
popa
xchg
push
mul
leave
ffreep
inc
aam
add
push
adc
xchg
jl
and
dec
adc
ins
inc
sbb
push
pop
xchg
xor
pop
mov
push
dec
add
push
js
jmp
add
sub
and
pop
adc
lea
mov
mov
mov
jb
cmp
mov
aam
lock
cdq
test
xchg
mov
out
xchg
cwde
mov
add
add
clc
jp
xor
jne
imul
dec
and
icebp
push
mov
cmps
add
push
pusha
jne
ss
push
test
out
repnz
mov
cwde
add
clc
and
mov
rol
mov
jge
test
mov
ret
aad
jo
and
add
jmp
stc
push
dec
int3
cmps
sbb
add
xchg
fs
loopne
js
pop
xor
mov
pop
cmp
and
int
push
mov
push
out
test
inc
clc
push
pop
nop
push
xchg
xor
inc
xchg
cmp
dec
movs
aaa
dec
mov
adc
inc
ins
not
in
in
pop
push
lea
ins
mov
je
int
rol
add
popf
fisttp
dec
mov
pushf
ss
mov
xchg
and
scas
fisttp
or
push
ret
cdq
cmp
xchg
mov
jno
cmp
loopne
or
cmp
or
rcr
or
and
xchg
mov
push
daa
dec
and
(bad)
jnp
out
push
pop
lock
xor
push
cmp
adc
jle
add
ror
sub
gs
xor
das
jb
cmp
or
ins
adc
push
xor
sahf
jge
test
mov
adc
shl
pop
frstor
add
jb
mov
mov
retf
and
shl
add
cmp
inc
inc
out
pop
sbb
fdivr
jne
and
jne
mov
or
loopne
cmp
pop
je
dec
lock
pop
inc
and
jmp
shr
int3
add
ret
cs
push
add
mov
add
mov
xchg
lds
push
or
add
sub
or
push
jmp
je
sub
adc
jnp
les
inc
add
sbb
or
jp
rcr
add
lea
sub
pop
rcr
adc
pop
pop
lahf
or
add
scas
inc
cmp
add
cmp
rcl
nop
xchg
ins
(bad)
or
mov
mov
aas
or
push
fnop
ror
add
inc
outs
jo
sub
add
adc
sar
push
add
int3
fdiv
lds
shl
dec
mov
clc
xlat
fcomp
add
ror
pusha
int3
add
retf
mov
cli
mov
retf
xor
out
mov
addr16
aam
xor
xchg
pop
ins
adc
stc
or
inc
fxch
retf
and
imul
inc
bound
int
rcl
pop
pop
mov
inc
push
sar
adc
cdq
add
enter
popa
(bad)
adc
mov
dec
ss
add
test
pop
and
arpl
dec
or
inc
sbb
mov
test
sub
in
movs
mov
sub
pop
xchg
movs
(bad)
pop
enter
dec
jmp
push
inc
mov
(bad)
std
inc
(bad)
popa
cmp
rol
mov
ret
js
arpl
arpl
sub
repnz
jmp
aam
ds
xor
push
mov
mov
xor
aam
push
add
scas
lods
dec
add
lahf
push
ds
or
inc
iret
mov
nop
adc
(bad)
sbb
mov
enter
add
cld
ins
sub
cmp
pop
jmp
mov
sub
jno
icebp
dec
ror
imul
push
dec
out
cmp
lea
pop
lock
(bad)
adc
push
leave
push
pusha
and
ds
aam
fnsave
and
mov
mov
daa
and
leave
xor
pop
cmp
pop
ret
lods
aaa
and
sar
je
add
and
push
cmp
cmp
xchg
sbb
and
pusha
les
pop
cmp
pusha
jmp
sub
cmp
ret
ja
or
aas
jb
push
cmp
(bad)
adc
(bad)
sub
pop
add
or
loope
cmp
jbe
push
xchg
dec
repnz
lods
aas
ins
daa
shl
add
push
dec
dec
and
add
and
xor
mov
in
js
xchg
es
enter
adc
loopne
add
sbb
jle
add
cmc
mov
xchg
lds
pop
loopne
das
push
xchg
push
xchg
mov
adc
push
add
sti
popa
ins
test
mov
and
xchg
test
xor
daa
test
inc
mov
sub
loop
dec
mov
add
fucomp
call
jbe
ret
xchg
sar
or
adc
xchg
and
lods
mov
scas
(bad)
(bad)
imul
sub
not
or
mov
cs
xor
mov
stos
xor
sub
imul
cmp
sub
les
and
mov
sbb
test
sub
ror
(bad)
jp
or
push
sahf
and
mov
mov
pop
adc
scas
movs
mov
dec
(bad)
(bad)
div
push
call
imul
add
shr
inc
adc
add
sub
pushf
in
iret
rol
out
in
test
and
add
ins
and
sub
xor
inc
(bad)
and
xchg
xor
es
call
les
scas
add
push
adc
inc
push
mov
int3
or
xor
mov
add
daa
mov
adc
xor
sbb
cmp
(bad)
mov
jae
cmp
ret
and
xchg
adc
pop
jg
pusha
pop
shl
mov
add
jp
inc
cli
and
jbe
je
imul
add
sahf
and
clc
push
rcl
into
dec
inc
(bad)
pop
adc
mov
scas
aam
loope
inc
xor
xchg
push
mov
adc
mov
push
adc
test
nop
call
inc
sbb
enter
jae
fist
sbb
outs
mov
adc
stos
cld
ret
daa
push
jmp
push
cs
in
xor
jbe
xor
dec
stos
jne
xchg
imul
ins
imul
rol
adc
shr
adc
sub
push
add
jmp
lods
adc
inc
pop
mov
push
and
in
lea
mov
push
inc
and
stos
mov
out
cwde
jb
add
test
ficom
in
mov
pop
dec
invd
pop
pop
scas
add
adc
ja
sub
inc
push
mov
push
adc
or
and
sbb
cmp
mov
je
jns
popa
adc
push
sbb
loope
test
fild
add
out
mov
scas
push
mov
popf
dec
and
xchg
push
das
dec
adc
add
add
rol
sub
and
jl
dec
sub
xor
adc
or
pop
jb
sbb
nop
cmp
jmp
sbb
mov
or
jmp
sbb
add
push
pop
and
push
(bad)
loope
rol
dec
jmp
inc
loop
jb
cmp
ret
and
or
aas
das
push
mov
xor
retf
sbb
mov
lods
xchg
or
aaa
rol
rol
xor
rcl
xchg
sar
pop
cmps
push
xor
cmps
xchg
adc
push
sbb
inc
out
mov
sbb
loop
adc
dec
add
mov
aam
or
sub
shr
mov
out
cmps
sub
inc
jmp
cmp
mov
xchg
rcr
push
and
sub
add
ja
(bad)
int
push
mov
ror
imul
xchg
sahf
xlat
test
popa
cwde
adc
xor
push
test
retf
clc
in
pop
sub
mov
push
add
mov
mov
xchg
push
cmp
add
pop
nop
les
es
lock
push
xchg
sub
dec
and
and
pop
enter
cmp
clc
cmps
mov
mov
call
inc
jne
(bad)
mov
pushf
imul
adc
sub
lea
adc
aam
fimul
pop
ficom
jnp
iret
mov
and
inc
dec
ins
push
push
daa
push
sub
loopne
cmp
lea
adc
sub
inc
out
or
mov
not
xchg
xor
pop
jg
jo
xchg
adc
or
or
out
fcmovne
je
push
jmp
jne
and
retf
in
imul
and
lock
ins
pushf
dec
sti
daa
cld
sub
clc
jecxz
xor
idiv
shr
jmp
pop
js
pop
je
inc
xor
xchg
mov
sub
data16
mov
outs
cdq
dec
movs
test
dec
mov
scas
push
add
mov
mov
test
enter
cmp
or
or
cmp
popf
cmp
jl
add
nop
jne
js
sbb
jmp
pop
call
retf
and
das
add
dec
mov
pop
push
push
sbb
cmps
xchg
cmp
or
fcmove
and
xchg
pop
xchg
and
bnd
out
or
inc
add
pop
pop
sbb
test
icebp
push
stos
int
stc
lea
daa
push
jno
enter
and
fcomp
shl
fstp
lods
int3
adc
imul
jae
test
sbb
xchg
xchg
stos
inc
stos
jl
lds
mov
or
sti
and
bound
and
dec
(bad)
ret
cmc
push
clc
xor
adc
ret
or
adc
and
push
add
and
mov
inc
push
push
cdq
inc
daa
lock
pop
lahf
sub
dec
jmp
mov
mov
stc
aam
rol
pop
xor
aam
sub
sbb
mov
sbb
mov
movs
inc
jp
add
xor
or
add
mov
aaa
rcl
push
mov
das
pop
jl
cmp
and
lods
jg
xchg
sbb
inc
mov
push
mov
add
cmp
inc
mov
pop
or
lea
movs
aam
in
inc
xchg
rol
(bad)
aam
jmp
leave
je
das
(bad)
jle
das
mov
dec
cmp
bound
sbb
or
mov
in
nop
adc
add
shr
or
les
shr
and
or
into
fisttp
cdq
(bad)
call
pop
or
iret
xor
(bad)
xor
xchg
xchg
pop
bnd
adc
add
gs
enter
jo
test
test
aam
lea
adc
fiadd
pop
add
pop
ret
cmps
retf
movs
test
or
sbb
inc
jmp
fwait
or
pop
ret
arpl
add
rol
push
pop
pop
pusha
sbb
jmp
loopne
jmp
push
or
sub
pop
or
pop
inc
cwde
js
push
sahf
dec
and
jecxz
xchg
or
xchg
dec
out
and
push
xor
or
add
mov
test
push
xor
das
push
sbb
mov
mov
je
xchg
and
jae
sub
xchg
shr
fimul
push
jge
outs
loopne
mov
and
nop
imul
scas
popa
lea
pop
pop
cmp
call
adc
or
cmp
jne
sub
jl
xor
loopne
and
mov
jb
and
add
sahf
shr
aas
loopne
adc
pop
shr
add
and
push
or
add
jne
(bad)
mov
dec
sbb
loop
adc
push
cmp
jne
and
sub
leave
mov
xor
cmp
inc
dec
aam
cmps
cmp
push
mov
mov
test
push
icebp
movs
test
dec
mov
inc
(bad)
jg
xlat
shr
into
sub
and
es
pop
jl
cmp
outs
or
rol
inc
je
push
push
inc
pop
loopne
cmp
add
dec
ss
cmp
out
push
push
retf
ret
test
push
adc
sbb
call
mov
out
loopne
add
jnp
add
cmp
rcr
sub
sbb
cmp
mov
sahf
neg
sub
mov
daa
push
xor
out
add
mov
adc
frstor
aam
sub
inc
cmp
jne
aam
cdq
pop
hlt
outs
in
mov
add
mov
push
xchg
sub
addr16
pop
push
movs
test
cwde
cmp
movs
idiv
scas
mov
aam
push
pop
jns
int
or
add
and
ret
jbe
mov
fcomp
pushf
pop
push
leave
and
or
cmp
test
add
mov
pop
call
test
test
jne
lea
mov
pop
test
cmp
cmp
mov
or
and
lods
in
repnz
cdq
fadd
test
xchg
pop
ficomp
jb
out
mov
sbb
imul
push
sahf
jne
adc
fist
pushf
or
push
add
push
loopne
mov
adc
xor
sub
rcl
lea
sbb
ret
adc
lock
clc
push
in
mov
mov
aas
jne
push
push
cdq
or
clc
clc
aad
mov
inc
jge
pop
adc
in
mov
xor
mov
fstp
test
push
add
jmp
ror
ret
mov
jbe
mov
or
sbb
and
add
push
push
push
sub
sbb
adc
jne
push
lahf
xchg
jl
in
jne
fucompp
add
mov
cmp
ja
imul
xor
cmp
xchg
sbb
ror
xor
shl
jge
dec
or
xor
aas
mov
jp
sbb
pop
jno
adc
push
push
repz
xor
jmp
into
mov
pop
aam
jmp
adc
sub
jge
and
aam
inc
mov
mov
adc
adc
or
mov
ins
movs
cdq
adc
and
inc
add
push
ret
adc
lods
jmp
loope
(bad)
sbb
mov
xor
cmp
es
fst
add
push
pop
pop
mov
mov
bound
xor
lea
inc
and
out
adc
nop
sbb
sub
mov
mov
push
cmp
popa
pusha
icebp
sub
out
(bad)
xor
mov
and
push
lock
pop
add
adc
and
ins
xchg
outs
mov
mov
mov
add
push
arpl
cmp
in
ror
cmp
xchg
std
xchg
bound
jne
inc
mov
int
jne
icebp
push
xchg
pop
mov
sub
mov
es
cmps
in
mov
ds
dec
imul
int3
mov
jbe
cmp
stc
test
mov
or
lock
not
xor
jp
arpl
test
stos
adc
push
(bad)
imul
(bad)
int
cmc
enter
pop
sub
test
mov
add
push
cmp
bound
ror
dec
add
inc
in
hlt
push
aas
lods
xchg
mov
sti
inc
sbb
push
sbb
(bad)
cmps
ror
xchg
cwde
jns
sub
sar
dec
pusha
add
adc
div
jne
jp
inc
xchg
test
pop
dec
jae
stos
mov
cwde
rcl
ror
(bad)
jmp
xchg
add
push
pop
cdq
pop
nop
loopne
aas
and
sti
add
adc
sbb
and
jmp
shr
cdq
sbb
and
pop
push
cwde
sub
and
mov
or
push
jne
add
xchg
push
fwait
sbb
mov
and
add
test
push
(bad)
xor
mov
xor
mov
adc
(bad)
xor
adc
or
and
ins
fld
xor
sbb
hlt
xor
xor
sub
cmp
add
ror
movs
adc
xchg
ins
xor
dec
call
test
or
dec
inc
cmp
dec
xor
cmp
add
or
int3
pop
sbb
mov
dec
push
xor
push
dec
or
leave
push
add
and
das
add
and
adc
ret
hlt
jmp
pop
or
imul
pop
nop
repz
nop
das
dec
js
xchg
sbb
hlt
fdivr
sbb
mov
out
inc
mov
ficom
movntps
dec
and
sub
cmp
mov
mov
dec
lods
sar
xchg
repz
pop
imul
int3
add
sahf
cmp
cdq
mov
xor
sub
loop
fisttp
mov
mov
mov
loop
add
ss
sub
cmp
imul
in
dec
and
adc
ss
inc
jmp
test
or
mov
cmp
pushf
in
pushf
js
add
jne
dec
(bad)
and
inc
je
sub
ret
or
and
nop
adc
loopne
xor
push
xchg
dec
mov
call
mov
int
stc
sub
push
ret
mov
add
fcmovbe
cwde
mov
and
sbb
aam
ret
dec
or
ret
adc
jae
xchg
xchg
jne
jo
mov
add
pop
nop
retf
push
sub
adc
push
gs
dec
xchg
or
cmps
cmp
add
push
fs
leave
cmp
adc
mov
sub
or
pop
or
push
nop
and
jb
push
sub
fsubr
lock
add
jmp
sub
cmp
push
xor
push
jbe
push
ret
(bad)
add
int3
inc
test
add
repz
jo
add
jmp
addr16
inc
sub
jbe
jns
leave
movs
xchg
mov
shr
mov
in
mov
imul
cmp
bound
int3
add
sbb
cs
sub
dec
push
and
xor
adc
pop
loopne
xchg
pop
jmp
dec
es
arpl
or
popa
and
jge
mov
dec
neg
pop
test
test
enter
ja
mov
push
(bad)
rol
aad
push
and
shr
mov
xor
push
popa
sub
mov
or
imul
cli
(bad)
mov
inc
push
clc
icebp
mov
punpckhbw
stc
test
sbb
or
adc
dec
rol
push
inc
sbb
pop
das
aam
jne
pop
int3
or
or
in
add
or
fwait
loopne
push
movs
pop
mov
ss
in
ret
out
cmp
add
xchg
test
(bad)
mov
fldenv
sbb
pushf
jne
and
mov
push
movs
mov
inc
adc
and
inc
adc
test
or
pop
jne
outs
and
test
pop
xchg
loop
push
add
jae
xor
stos
rcl
enter
adc
sub
add
mov
push
(bad)
outs
jne
je
cmp
or
or
ss
cmps
(bad)
mov
fcom
push
jo
into
test
clc
or
push
xchg
imul
sbb
or
retf
or
test
(bad)
pop
adc
loopne
shl
movs
xchg
inc
loopne
push
packssdw
movs
in
sbb
sbb
and
sub
lock
xor
sub
outs
nop
ret
shl
xchg
pop
pop
or
mov
or
mov
mov
fsub
in
pop
cmc
adc
(bad)
aam
mov
dec
inc
pop
and
adc
and
push
shl
inc
jns
dec
lods
sub
or
and
(bad)
dec
je
daa
mov
add
fmul
sub
mov
or
xchg
add
dec
rcl
mov
adc
adc
cwde
cmp
push
clc
inc
outs
fs
fsub
nop
mov
push
or
mov
inc
mov
xor
sub
xor
mov
in
push
jne
add
adc
sub
bound
out
fldcw
jno
xor
sbb
scas
mov
test
dec
cmp
adc
add
mov
or
sub
mov
add
fsub
call
pop
jecxz
test
cmp
mov
(bad)
xchg
add
cmp
icebp
dec
add
pop
pop
(bad)
push
scas
push
add
xchg
mov
xor
pop
xor
pop
enter
add
test
dec
sbb
lods
daa
enter
icebp
movs
sbb
adc
rol
sbb
xchg
shl
sar
or
or
adc
in
push
(bad)
and
push
adc
(bad)
mov
(bad)
xchg
mov
je
iret
mov
inc
loopne
push
les
push
or
add
adc
lea
or
cmp
(bad)
popf
mov
push
adc
cmp
xor
jne
xchg
fwait
js
lods
fwait
nop
arpl
sub
js
cmp
pop
gs
popa
fld
imul
rcl
or
sbb
push
lea
lea
xchg
popf
ficomp
cmp
pop
xor
jo
mov
push
repz
jecxz
sub
jg
xchg
jecxz
js
out
(bad)
cld
aam
or
pusha
es
imul
jo
and
inc
in
jne
jp
cmp
adc
sbb
nop
fmul
aad
dec
mov
mov
push
xchg
add
sbb
clc
mov
xor
adc
mov
lods
mov
jge
sub
pop
enter
sub
retf
adc
jne
inc
and
cmps
dec
pop
adc
movs
outs
xchg
out
cmp
xor
cs
bound
and
sbb
xor
mov
xor
jge
scas
adc
pushf
push
outs
nop
dec
add
xchg
leave
push
ins
jmp
cmp
adc
jge
xor
sub
push
push
xor
int
inc
mov
in
or
push
movs
in
sub
js
mov
mov
popf
ins
loop
out
pcmpgtd
call
jmp
imul
sub
sub
ror
cmp
ja
jmp
imul
nop
cld
daa
stos
fadd
mov
mov
hlt
aaa
dec
pop
imul
xchg
retf
mov
adc
hlt
mov
add
inc
adc
xchg
jp
je
cmps
pop
or
ds
or
test
sub
push
fs
inc
outs
sbb
into
sub
test
int
jge
dec
and
sub
mov
pusha
or
push
arpl
sub
cmovno
mov
mov
push
movs
movs
sub
test
fbstp
add
xor
push
pop
test
bound
and
in
add
es
push
daa
push
add
fs
add
sahf
sbb
push
mov
in
movs
or
adc
ror
mov
dec
sbb
mov
gs
xchg
adc
xor
sub
pop
dec
push
adc
inc
push
adc
jg
cmovno
xor
(bad)
test
mov
push
ds
(bad)
adc
xor
push
sbb
cmp
(bad)
mov
mov
scas
test
int
stos
xchg
push
add
adc
bound
and
sbb
scas
adc
pop
fwait
mov
or
mov
ss
mov
das
adc
mov
xchg
cwde
adc
je
or
int
dec
gs
add
in
mov
pop
sub
(bad)
sub
sar
mov
dec
xor
shl
add
sub
ret
xor
cmp
mov
in
jno
and
sub
fwait
test
inc
adc
push
shl
pushf
push
ss
jns
adc
adc
inc
dec
sbb
rol
int
xor
out
mov
cs
pop
sbb
test
push
add
mov
push
fcmove
adc
or
loopne
jae
inc
xor
adc
and
fimul
push
pop
jecxz
into
inc
push
jne
cmp
fsubr
dec
int3
dec
rol
sub
dec
sbb
aam
add
test
mov
add
cdq
stos
(bad)
dec
xor
adc
inc
pop
sbb
out
int
and
xchg
hlt
(bad)
mov
xchg
push
pop
adc
dec
mov
lahf
dec
ins
lds
cmp
mov
push
mov
pop
xchg
sbb
in
fadd
or
ss
sub
cmps
or
jns
jb
cmc
es
adc
push
ret
add
test
es
sub
mov
pop
je
pusha
push
and
add
iret
adc
mov
fld
movs
enter
std
sar
pusha
pop
push
and
test
inc
mov
aaa
inc
jl
push
mov
or
call
hlt
pop
or
clc
cmp
icebp
imul
dec
sti
(bad)
push
loope
aad
stos
test
stos
fild
stos
(bad)
je
sbb
add
test
in
addr16
sub
inc
or
cmps
fneni(8087
scas
loope
add
add
int3
pop
inc
or
ret
and
sub
scas
xor
mov
cmp
aam
or
gs
popf
fdiv
sbb
mov
jb
lods
mov
sub
jmp
(bad)
sub
adc
mov
cmp
js
push
add
add
mov
pusha
retf
movs
dec
pop
xor
popa
popa
xor
cmp
sbb
jecxz
dec
or
adc
add
add
bound
add
es
mov
sbb
out
cld
jmp
imul
pop
(bad)
or
popa
pop
(bad)
fwait
gs
and
fs
ins
push
mov
les
push
add
test
cmp
fmul
pop
je
add
fiadd
lahf
dec
and
lea
es
sub
adc
push
xchg
out
sbb
add
nop
add
adc
jno
or
dec
(bad)
int
add
push
or
test
mov
dec
sbb
outs
mov
test
dec
cmp
je
sub
das
push
mov
shl
dec
xlat
rol
pusha
mov
inc
outs
xchg
loope
push
and
pop
js
or
sbb
loope
test
pop
movs
cmp
cmp
jg
cmp
cmp
stos
lahf
mov
adc
(bad)
push
lock
sbb
cmps
inc
repnz
nop
jnp
cwde
and
cmps
rol
and
and
add
ret
cmp
cdq
jmp
adc
sahf
add
pushf
sbb
clc
pop
lea
popa
sub
fimul
jmp
in
push
lea
call
xlat
sbb
xor
imul
sbb
add
sar
(bad)
fisubr
movs
dec
or
or
enter
dec
lock
lea
outs
stc
push
sub
mov
xor
int3
and
jle
imul
rcl
leave
adc
loop
mov
jmp
dec
dec
je
inc
dec
and
nop
js
jmp
rol
or
dec
rol
add
cli
push
pop
inc
add
popf
and
jne
jmp
cdq
inc
push
add
xor
sbb
dec
or
xchg
mov
or
jo
popf
or
fdivr
or
in
hlt
sub
sbb
ss
jnp
sbb
cmp
pop
repz
sub
sbb
pushf
push
call
dec
jns
outs
dec
xor
xor
mov
arpl
dec
loope
jae
dec
into
add
aaa
mov
stos
retf
jne
scas
sbb
adc
or
inc
jmp
push
iret
retf
add
in
sub
test
xchg
lock
xor
xor
push
pop
addr16
jnp
jmp
mov
sub
add
cmps
mov
pop
in
xchg
xor
(bad)
sbb
jae
sbb
mov
jne
out
or
mov
ror
add
aaa
pop
mov
dec
jb
inc
cdq
dec
adc
pop
mov
inc
ret
mov
xchg
repz
fst
(bad)
rcr
mov
ja
xchg
fldz
dec
daa
mov
dec
add
je
jae
xchg
retf
in
gs
imul
and
push
push
movups
jo
mov
lods
push
retf
mov
xchg
xchg
rol
mov
ret
push
push
push
xor
sbb
push
and
loope
call
popa
jecxz
aaa
dec
cmp
ds
rcr
int3
iret
es
jnp
cli
sbb
cdq
xchg
jl
and
je
in
cmp
sub
push
pop
add
jge
outs
aad
in
mov
xchg
push
adc
jne
and
fst
or
add
cmp
mov
or
and
enter
dec
pop
mov
push
add
pop
add
push
dec
push
and
push
adc
mov
cmc
push
aam
movs
daa
icebp
adc
pop
shl
push
fs
mov
pop
add
adc
adc
fwait
xchg
sbb
mov
(bad)
lds
addr16
(bad)
addr16
retf
mov
stc
xor
out
gs
sbb
add
or
sub
sub
call
sbb
gs
or
rol
inc
mov
mov
push
mov
std
xchg
add
and
push
enter
xor
xor
in
or
add
or
or
sbb
or
sub
(bad)
pop
push
dec
or
mov
mov
scas
dec
cmp
push
je
daa
test
jl
int
xchg
pop
nop
or
or
icebp
test
push
push
and
sub
sar
js
sub
cmp
xacquire
mov
ret
adc
sbb
adc
dec
outs
add
je
pop
adc
sti
and
or
and
dec
imul
pop
sub
push
mov
dec
adc
xchg
movs
fs
sbb
cmc
mov
add
lahf
and
in
xchg
sub
(bad)
adc
inc
sbb
mov
xchg
xchg
mov
popa
pop
test
jg
and
popa
leave
add
jae
jge
mov
inc
out
push
js
adc
jne
out
push
test
in
ror
sbb
pop
sub
add
bound
mov
xor
pop
cmp
mov
push
ins
jno
add
or
int3
jo
mov
xor
or
cli
dec
int
pushf
pop
cmp
inc
ret
dec
add
and
call
iret
jne
or
sti
or
dec
call
nop
mov
xor
shl
add
mov
or
xchg
cmps
out
pop
repnz
jl
pop
lods
les
cmc
adc
adc
inc
xor
xor
or
mov
sub
enter
or
inc
cmp
ret
lock
sbb
or
or
add
cmp
adc
push
lock
mov
add
and
cdq
(bad)
frstor
jecxz
hlt
add
imul
outs
jo
xchg
pop
push
lds
push
push
ins
push
add
pop
ins
jb
jbe
sbb
xor
sbb
mov
push
jno
int
cmp
dec
jmp
mov
arpl
xchg
mov
inc
(bad)
or
retf
(bad)
or
adc
pop
push
xor
fld
sub
add
loope
call
fwait
(bad)
pop
pop
push
aas
dec
rol
adc
(bad)
push
ins
movs
pop
mov
out
cmp
sub
dec
jb
fs
pop
push
bound
push
sub
inc
or
(bad)
shl
mov
or
jmp
adc
inc
mov
jmp
out
sub
cmp
add
rol
mov
leave
push
xor
mov
ror
cmp
push
pop
pop
jmp
mov
pop
cli
add
add
or
lods
adc
adc
jb
adc
cdq
fmul
inc
cmp
repnz
cwde
and
and
mov
fcom
test
lock
xor
mov
or
data16
and
push
lea
mov
or
lea
pop
xor
xlat
int3
mov
dec
dec
(bad)
push
call
add
gs
cmp
cmp
shr
sub
and
or
xor
push
inc
arpl
push
clc
jmp
(bad)
pop
add
xchg
gs
mov
das
sbb
nop
test
jb
dec
xchg
dec
dec
pop
add
enter
add
and
mov
adc
pusha
push
ret
push
lea
push
(bad)
push
dec
daa
dec
push
ret
shl
inc
lock
xchg
push
inc
mov
stc
inc
pushf
add
add
inc
mov
std
inc
or
and
push
ins
sub
sbb
or
push
xchg
(bad)
adc
jae
mov
push
(bad)
push
fimul
mov
and
ins
and
inc
xchg
rcr
or
push
mov
dec
push
xchg
or
mov
adc
cmp
mov
and
sub
fadd
mov
les
sub
inc
mov
and
aas
jg
gs
iret
es
mov
cs
jmp
xchg
or
push
push
inc
dec
test
jl
test
and
add
add
push
in
(bad)
xor
loopne
imul
push
pop
sub
fstp
jae
daa
or
jo
cdq
pop
aad
push
inc
cmp
push
outs
pop
dec
sbb
fdivrp
adc
mov
push
add
jmp
les
and
cli
jmp
daa
mov
jnp
enter
lar
lods
in
adc
inc
data16
add
rol
ja
add
push
imul
sbb
loopne
dec
add
rcl
rol
popa
cmps
aaa
or
or
xor
stos
test
pop
sub
out
add
mov
fadd
ret
jb
push
jnp
js
push
loope
add
cld
pop
mov
aad
dec
xor
adc
or
imul
add
fimul
ror
sub
add
inc
pop
pop
mov
cmp
sahf
mov
mov
or
push
cmp
adc
inc
clc
adc
push
lods
ja
fcom
xor
nop
sub
jae
and
fwait
lods
dec
pop
les
push
sub
xor
loope
enter
retf
push
bound
push
dec
add
ins
xchg
movaps
or
in
sar
push
ds
add
inc
into
or
cmp
cmp
xor
adc
and
or
xchg
xor
cdq
enter
fwait
jns
outs
mov
popf
cmp
movs
movs
xor
xor
stos
adc
pop
jne
bound
mov
xor
ins
data16
and
mov
rol
and
cmp
sar
or
imul
sub
mov
mov
push
adc
out
or
pop
ret
adc
les
xchg
clc
mov
lea
add
pop
pop
xchg
dec
pop
fild
pop
dec
xchg
or
add
inc
das
mov
add
sbb
sub
cmps
dec
push
sbb
xchg
jnp
push
lea
pusha
push
mov
and
jge
cmc
(bad)
push
in
and
or
push
push
mov
cmp
sub
jmp
pop
out
mov
push
add
(bad)
cmp
ins
loope
mov
sub
test
hlt
dec
das
outs
nop
jl
sbb
mov
dec
test
adc
xor
enter
shr
mov
mov
jmp
clc
repz
int3
js
inc
je
out
test
xor
adc
xchg
and
enter
enter
retf
enter
int3
int3
call
scas
in
stos
ret
xchg
arpl
sbb
inc
pop
sahf
test
cmp
or
add
sub
jecxz
sbb
es
xchg
sbb
sbb
add
or
sbb
pop
adc
xchg
xchg
mov
sub
(bad)
retf
mov
adc
push
aad
movs
add
adc
mov
sub
aad
add
js
or
lods
pop
les
imul
adc
into
movs
pop
movs
aam
or
inc
js
ret
ret
inc
in
xchg
mov
xor
sub
and
and
sub
cmp
pop
ret
dec
or
dec
jecxz
cmp
fsubr
ret
lea
mov
pop
add
stos
add
mov
pop
dec
sbb
dec
pop
or
push
adc
arpl
mov
mov
test
jo
imul
push
aaa
daa
or
leave
mov
adc
scas
dec
or
xor
cmps
xor
add
xchg
(bad)
into
les
sbb
dec
fild
ret
inc
ds
test
xchg
out
and
jl
adc
sbb
xor
cwde
or
jmp
mov
dec
push
mov
cmp
or
pop
or
adc
add
fs
add
and
add
mov
cmp
adc
xor
loopne
rcr
dec
adc
and
cmp
add
(bad)
push
and
stos
or
sbb
(bad)
bound
mov
sbb
adc
sbb
lock
mov
xor
push
push
and
call
in
hlt
mov
fsubr
pusha
mov
inc
add
into
call
aad
push
test
mov
test
rol
xlat
push
aaa
in
imul
or
sub
jecxz
or
inc
inc
xlat
pusha
push
test
pop
jbe
or
loopne
loope
xor
outs
adc
lods
rol
or
adc
inc
xchg
cli
mov
nop
push
aaa
lock
mov
out
or
mov
pop
cmps
or
inc
xchg
pop
lods
jle
call
and
cmp
or
repz
dec
aaa
std
dec
add
jne
test
push
dec
and
loop
mov
ficomp
mov
ds
inc
popa
fimul
sub
test
and
and
dec
je
jle
dec
inc
jl
jo
or
adc
mov
lods
dec
or
mov
cmp
cmp
mov
mov
in
into
mov
and
adc
cdq
cwde
mov
sbb
add
cli
fucompp
mov
xchg
in
pop
pop
push
or
add
arpl
pop
sbb
jle
add
cwde
in
push
or
mov
add
enter
pop
cli
sub
or
push
ins
mov
xchg
inc
out
leave
call
add
push
aaa
dec
leave
mul
es
cs
out
sub
ja
or
sub
(bad)
add
and
ja
ins
mov
inc
inc
jo
loopne
rdpmc
cdq
mov
inc
inc
inc
sbb
clc
dec
jmp
adc
or
push
push
or
sub
fwait
push
jbe
std
and
ds
push
cmp
inc
sub
push
or
or
xchg
(bad)
(bad)
jae
sub
popa
adc
or
inc
add
add
adc
scas
sbb
jp
xchg
out
add
add
cmp
adc
test
inc
ins
popa
mov
jo
or
inc
stos
add
mov
xor
scas
aas
(bad)
fsub
sub
push
(bad)
in
(bad)
test
push
shl
xchg
es
adc
xchg
dec
mov
inc
je
xor
inc
xor
cmps
jle
add
loopne
in
sub
jae
add
or
dec
(bad)
jle
les
pop
or
jmp
dec
inc
mov
sbb
imul
add
jo
cwde
adc
or
and
adc
iret
mov
sub
xchg
pop
sbb
xchg
inc
or
add
or
add
push
loopne
popf
(bad)
mov
mov
jmp
push
inc
lods
rcl
add
adc
and
sti
push
mov
cmp
out
ins
in
sbb
xor
add
jmp
iret
jmp
mov
push
call
loopne
neg
sbb
sub
jg
xor
jae
jl
dec
imul
int3
add
clc
loopne
mov
fcomp
or
imul
imul
adc
rcl
xor
add
push
push
jmp
sbb
xchg
sub
adc
stc
and
add
retf
in
push
xor
add
adc
pop
sub
clc
inc
jo
cmp
and
adc
into
and
cmps
mov
jmp
cmp
rol
mov
outs
je
sub
or
sbb
xor
add
neg
cld
jmp
add
mov
adc
into
adc
inc
push
lods
nop
out
adc
and
inc
sub
mov
enter
add
rol
adc
or
not
loopne
push
shl
push
jno
dec
add
jae
xchg
sub
rcl
mov
sbb
xor
fnstsw
push
pusha
and
test
sbb
inc
aam
lea
cmp
stos
pop
fisub
push
push
push
and
sub
xor
xor
aam
or
pop
sbb
fucomp
or
dec
jbe
sbb
cmp
ins
inc
pop
nop
adc
call
xor
loop
cmps
ror
test
stc
add
xchg
loope
rol
iret
pop
xchg
mov
jne
mov
stos
mov
xchg
jae
test
cmp
pop
fcom
arpl
aad
push
(bad)
je
fdivr
pop
mov
mov
adc
jne
jg
sbb
popa
jbe
inc
sub
inc
outs
jbe
daa
sbb
dec
cmp
(bad)
push
pop
and
jmp
sub
int
jmp
adc
add
sub
sbb
dec
sub
sbb
adc
xor
dec
mov
ret
push
aad
inc
push
lods
cwde
jmp
ds
cmp
mov
into
mov
icebp
xchg
pop
fimul
and
outs
adc
cmp
mov
xchg
iret
push
les
in
adc
test
shl
lock
xchg
fcomp
in
sub
mov
xchg
adc
cwde
sbb
add
mov
push
in
int3
dec
fcom
daa
mov
push
sub
mov
add
pop
sbb
push
(bad)
jl
les
outs
mov
sub
fst
adc
repnz
jns
push
mov
mov
es
jle
inc
sub
cmp
inc
inc
std
add
xor
pop
test
xchg
jo
xchg
cmp
mov
adc
pop
push
xchg
ror
pop
xchg
or
lods
lock
enter
xchg
inc
jns
fiadd
or
pop
xor
sbb
and
adc
fcom
inc
add
and
sbb
gs
adc
je
pop
pop
adc
cdq
sbb
jl
mov
jmp
and
ror
call
xor
or
sub
addps
xor
pop
dec
xor
rcr
daa
das
push
in
sbb
test
in
or
jo
pusha
add
dec
inc
xchg
out
mov
out
or
ror
sbb
push
jl
jb
mov
jg
call
inc
cmp
mov
lods
add
adc
inc
sbb
cmp
cmp
inc
push
ins
push
mov
mov
add
xchg
inc
mov
mov
dec
push
imul
inc
fsub
or
les
add
cmp
mov
clc
cmp
mov
dec
adc
inc
inc
xor
cli
add
or
add
je
popa
pop
enter
mov
jg
add
sbb
xor
or
ret
pop
or
in
jo
aam
pop
sahf
rcr
sbb
mov
adc
lahf
xchg
jne
pop
in
mov
ror
adc
or
sbb
pop
or
es
xor
data16
jg
test
xor
lds
dec
or
fst
out
mov
adc
ret
test
das
shl
retf
mov
loop
add
mov
xor
iret
push
inc
(bad)
pop
and
sub
ret
sete
lea
shl
les
adc
or
les
and
int3
xchg
(bad)
push
xor
cmp
cwde
adc
xor
or
cmps
addr16
or
jmp
push
and
sub
rol
jo
lock
mov
xchg
sbb
call
jmp
out
and
push
mov
shl
or
jne
xchg
and
jb
stos
je
icebp
sub
fimul
or
fmul
fisubr
out
adc
dec
xchg
je
jl
jo
ins
sbb
sbb
icebp
or
jns
ret
and
jge
xor
cmp
shl
jmp
lea
sbb
clc
adc
mov
sbb
aaa
xchg
jo
fistp
gs
lods
les
sbb
push
sub
adc
in
or
add
push
loope
outs
ins
or
jmp
outs
test
cmps
rol
mov
and
in
inc
xor
xchg
in
jmp
fsub
lods
mov
sub
ins
out
cmp
test
enter
pushf
dec
loop
(bad)
adc
mov
nop
stos
movs
adc
lahf
xor
test
ins
mov
push
je
push
push
cwde
and
mov
shl
je
or
push
test
aas
ds
or
mov
xor
or
xor
int
mov
in
add
jle
mov
je
fst
pop
fcomp
and
in
sub
mov
jo
movs
sbb
jae
int
ret
push
sub
pop
push
dec
mov
or
jge
data16
call
push
jg
dec
in
lds
inc
imul
cli
dec
adc
xor
push
push
sbb
adc
(bad)
movs
and
sbb
cmps
pop
sbb
jo
sbb
ror
push
add
int3
inc
or
push
fs
jp
mov
je
std
push
jmp
mov
pop
xchg
push
inc
add
dec
sub
cmp
add
sub
inc
or
xor
xchg
xchg
out
inc
adc
hlt
in
adc
cs
lock
(bad)
or
adc
jg
ss
imul
(bad)
inc
adc
or
mov
sahf
inc
push
add
mov
xchg
in
adc
and
mov
sbb
repz
aaa
(bad)
dec
inc
loopne
dec
mov
xchg
push
prefetch
cwde
arpl
out
adc
jmp
ficom
dec
in
push
enter
push
push
inc
sbb
sbb
in
fld
fbstp
jbe
and
or
fsub
xor
aam
(bad)
sbb
ins
xchg
cdq
int3
and
jg
jecxz
push
enter
sbb
inc
cmp
add
outs
scas
mov
mov
cmp
add
or
pusha
call
hlt
adc
call
add
push
loope
mov
jle
add
out
and
adc
dec
add
push
psubusb
jle
sub
enter
xchg
std
pusha
add
(bad)
mov
div
sub
cwde
pop
mov
or
pop
icebp
inc
add
push
add
popf
sub
test
mov
mov
or
push
sub
adc
jle
mov
out
rcr
lods
fcomp
add
mov
int3
xor
and
xchg
dec
cmp
test
and
test
inc
push
pop
pop
loopne
jae
or
mov
adc
mov
imul
aaa
ficomp
popf
enter
jp
ja
add
(bad)
mov
inc
ds
jae
lds
pusha
adc
int
ret
push
mov
adc
xlat
push
ins
arpl
lea
sbb
add
lods
jbe
sub
mov
shl
and
inc
inc
xchg
xor
dec
aad
dec
xchg
aam
mov
or
mov
imul
or
cs
xchg
cmc
dec
add
daa
cs
add
pop
xor
add
or
movs
outs
lock
popa
shl
pop
sbb
inc
sub
dec
inc
in
ret
xchg
loop
pop
lods
in
inc
add
repnz
ror
push
push
and
push
nop
pusha
cmp
pop
outs
pop
inc
push
cli
jl
ret
add
les
jmp
outs
pop
pop
and
pop
add
lock
rol
(bad)
outs
es
mov
and
xchg
xor
xchg
and
popf
dec
(bad)
pop
adc
sbb
xchg
cmp
xchg
pop
leave
pop
push
cmp
xchg
outs
push
and
add
mov
rcl
sub
in
jne
mov
adc
enter
das
adc
sub
xor
cmp
js
mov
jmp
and
mov
adc
cmps
mov
sbb
adc
push
sbb
jp
or
and
es
sub
sbb
mov
push
inc
cmp
arpl
xor
mov
jo
aas
or
adc
mov
sub
aad
fistp
jle
(bad)
push
pop
dec
loope
in
inc
push
push
jg
js
clc
inc
or
xchg
push
pop
adc
sahf
or
jbe
push
lods
ins
mov
iret
inc
xchg
out
loopne
jp
inc
xchg
test
sbb
inc
xchg
je
bound
rol
pop
dec
adc
dec
es
xor
jne
mov
push
ror
lock
retf
mov
sbb
test
adc
daa
repz
inc
or
not
fcomp
adc
cmc
pop
popa
sub
jae
test
add
leave
adc
cmp
dec
neg
push
out
adc
mov
dec
outs
cmp
xor
pusha
mov
leave
adc
xor
aam
add
ss
adc
dec
cli
mov
mov
xor
(bad)
mov
aas
push
sbb
aad
aas
cmp
adc
push
fsubr
out
mov
cld
aaa
dec
sar
push
clc
test
(bad)
push
les
sbb
xor
dec
and
cdq
jg
mov
push
int3
test
push
lock
test
push
xchg
mul
stc
ret
add
xchg
imul
jmp
cmps
in
add
nop
icebp
add
shl
dec
and
sbb
cmps
sbb
add
or
push
les
stos
push
ins
test
test
sti
add
add
in
add
popf
or
aas
call
sub
je
je
and
adc
and
push
push
aam
cmps
cmp
add
retf
test
popa
or
lahf
push
popa
int3
or
add
test
lea
xchg
jns
xor
sbb
bound
outs
or
push
and
dec
pop
and
adc
sbb
je
sti
lods
mov
or
inc
fadd
movs
and
out
push
mov
xor
jl
or
test
das
adc
add
sub
push
pop
xchg
mov
add
test
adc
test
daa
jmp
mov
loopne
push
xchg
pusha
mov
push
popf
and
push
stos
add
rcr
nop
mov
fld
cmps
fldcw
ror
mov
xchg
out
mov
arpl
in
xor
nop
pop
inc
cs
lods
push
lods
push
das
sbb
mov
and
fisubr
mov
or
cwde
push
lods
or
sub
mov
imul
push
push
and
xchg
mov
xchg
sbb
out
(bad)
xchg
jno
xor
xor
cmps
jne
sub
out
adc
add
arpl
int3
imul
lock
and
iret
xchg
or
sub
cmp
or
cmps
dec
into
ret
dec
and
pop
leave
cwde
fist
add
ret
or
push
pop
adc
icebp
gs
clc
xor
mov
mov
loope
inc
in
sub
jge
ret
adc
jns
cmp
xor
inc
push
enter
push
out
loopne
xor
adc
mov
mov
adc
(bad)
mov
push
sbb
leave
push
inc
jle
adc
mov
repz
call
imul
ret
pop
punpckhwd
and
out
repnz
fisubr
test
aam
sbb
inc
pusha
jmp
mov
nop
xor
cmp
pusha
dec
add
inc
xor
xchg
loop
fs
in
cmc
pop
cmp
pop
retf
mov
fcmovu
dec
or
daa
add
ror
pop
adc
loope
mov
xor
js
inc
adc
add
js
cmp
mov
imul
les
mov
out
xchg
loop
ret
lock
push
add
adc
jge
cmc
ror
cmp
pusha
pop
mov
mov
ins
daa
push
xlat
bound
adc
shl
jne
xchg
pop
jae
enter
loopne
ja
and
mov
stos
shl
adc
lock
enter
push
push
div
mov
xchg
xor
pop
into
inc
test
test
adc
ss
movs
aam
add
add
sbb
cmp
jge
xchg
add
enter
(bad)
iret
test
push
jns
pop
outs
sub
xor
jle
hlt
daa
int
add
cs
lock
mov
ds
push
or
clc
jle
push
push
push
mov
ins
outs
add
or
je
push
out
stc
and
adc
sbb
pop
adc
mov
test
retf
xor
jo
sub
xchg
mov
adc
cmp
mov
or
mov
cmp
jns
jno
je
pop
inc
push
inc
pusha
mov
sbb
push
adc
lea
(bad)
jmp
(bad)
stos
leave
lahf
mov
mov
sub
pop
loopne
push
add
and
sbb
mov
addr16
cmps
cmp
shl
fistp
xor
sar
push
dec
call
and
dec
inc
cwde
or
(bad)
es
mov
lea
sub
xor
je
iret
push
inc
and
push
cmp
mov
fist
imul
call
mov
add
mov
ins
scas
mov
outs
jge
inc
inc
push
mov
arpl
test
push
test
mov
clc
push
(bad)
(bad)
jb
nop
sub
jnp
mov
inc
inc
mov
mov
loope
xor
lock
scas
pusha
outs
or
pusha
lods
mov
test
lods
add
xchg
rcr
sbb
(bad)
jo
push
or
fidiv
add
fs
enter
rol
push
call
clc
push
inc
jge
sbb
pusha
mov
or
call
adc
pop
aam
cmp
(bad)
pop
and
jl
or
push
jnp
add
stos
dec
xor
mov
mov
xor
lock
push
mov
data16
movs
mov
jbe
mov
add
hlt
pop
imul
add
mov
sub
test
xor
bound
sbb
adc
(bad)
mov
xchg
out
gs
clc
add
mov
lods
pop
fsubrp
xchg
cmp
jne
sub
pop
int
xchg
jl
jl
test
shl
cmp
data16
mov
movs
in
pop
mov
and
sbb
xor
or
test
out
adc
repnz
cmp
sbb
or
iret
pop
push
sbb
in
jmp
jb
mov
dec
cmp
dec
test
push
movs
test
cdq
sub
jne
mov
xor
sbb
sbb
test
mov
sub
pop
add
mov
add
fnstenv
add
push
jmp
loopne
cmp
fmulp
xlat
add
sub
or
xchg
test
popf
lods
repnz
adc
mov
push
cmp
(bad)
jo
dec
mov
sub
mov
jmp
cmp
adc
xor
xor
add
mov
push
inc
push
adc
dec
xchg
xor
movs
jp
push
mov
xor
mov
jns
sbb
and
mov
test
push
pop
xchg
jmp
scas
mov
mov
ret
jmp
push
mov
and
mov
mov
ficom
out
jecxz
mov
pop
imul
sbb
lahf
sbb
sbb
pop
sar
std
fisttp
pop
mov
dec
scas
icebp
push
add
sbb
pop
pop
mov
pop
outs
test
add
pop
cmp
loope
lods
imul
js
(bad)
push
test
and
enter
add
fidivr
pop
dec
adc
mov
cmp
jmp
jp
dec
pop
xor
ret
dec
sub
cmp
or
push
mov
test
push
popa
or
xor
(bad)
mov
dec
push
sub
mov
push
test
pop
mov
pop
push
push
mov
mov
sbb
test
pop
fidiv
jmp
fwait
ins
push
add
arpl
bound
retf
adc
(bad)
push
daa
and
ins
jmp
lods
enter
ret
pushf
adc
out
add
inc
and
or
xchg
xchg
lds
jnp
shr
push
in
hlt
or
jb
push
mov
ds
dec
cmps
adc
fwait
cmp
xor
push
and
and
sub
push
movs
in
fdivr
inc
loope
outs
inc
dec
mov
jge
or
inc
pop
pop
adc
jge
mov
sub
mov
sbb
or
test
aam
cmp
ret
add
cmc
push
ins
or
fnstenv
xchg
add
mov
scas
or
je
inc
imul
push
pop
ins
(bad)
add
and
pop
cli
sbb
cld
pop
lea
mov
sub
push
sahf
dec
sub
adc
lock
push
jne
aaa
cmp
dec
jae
sub
adc
cmp
inc
add
add
and
jp
sub
movs
add
mov
mov
add
stos
add
push
fprem1
sub
loopne
sbb
or
sbb
lock
add
add
arpl
iret
rol
dec
cmp
sti
loopne
push
outs
or
add
popa
loopne
sbb
aam
aas
push
nop
sbb
and
lahf
sahf
mov
or
push
cmp
inc
lea
loopne
mov
xor
pop
dec
jcxz
adc
aaa
push
test
adc
stos
add
or
lahf
gs
mov
mov
xor
xor
cmp
jne
(bad)
pop
pop
rcr
ret
and
push
or
les
inc
xchg
inc
sar
lock
mov
into
push
sub
xchg
dec
cmp
fcom
mov
hlt
call
in
popa
and
xor
pop
or
sub
retf
nop
sub
push
out
push
js
paddsb
push
add
cdq
rol
hlt
sub
cmp
push
push
push
icebp
adc
sub
cmp
mov
xchg
into
add
retf
in
dec
loopne
sbb
sbb
mov
sub
pop
adc
ror
add
push
lock
(bad)
sbb
scas
add
rol
pop
pop
and
push
js
nop
mov
pop
out
add
pop
sub
and
fs
add
sbb
ins
sahf
rcl
lahf
and
movs
adc
push
shl
xchg
sbb
addr16
xchg
icebp
js
push
pop
pop
dec
sbb
adc
stos
and
xor
jae
mov
dec
std
call
jne
pop
sar
mov
push
cmp
hlt
adc
push
and
jg
ret
sbb
push
je
hlt
inc
in
push
std
(bad)
out
add
mov
and
sub
neg
pop
out
dec
adc
pop
or
pop
shl
mov
sbb
cdq
test
inc
cmp
push
jae
sbb
sbb
pop
pop
repz
xchg
jns
mov
dec
adc
mov
ret
push
jecxz
mov
sbb
cdq
sub
sub
mov
js
sub
loope
shl
cmp
inc
and
push
and
rcr
jns
or
mov
mov
(bad)
ds
inc
fisttp
mov
jg
add
add
pusha
lahf
test
sub
in
loopne
pop
mov
jl
adc
dec
(bad)
fdiv
mov
jo
rcl
inc
cmp
jne
sub
sub
sub
jo
add
mov
mov
push
stos
add
adc
push
add
pop
data16
add
mulps
(bad)
xchg
ins
add
sub
add
xor
sbb
call
jno
cld
inc
dec
sbb
add
or
mov
in
ins
add
add
add
sbb
je
add
aam
cmp
gs
push
inc
mov
sbb
cmp
and
into
sahf
mov
push
mov
sbb
sbb
sbb
rol
shl
push
hlt
sub
nop
shl
fadd
add
mov
mov
and
cwde
shl
outs
sub
lods
and
es
pop
inc
es
add
mov
arpl
add
xchg
scas
sub
sub
sbb
dec
pusha
add
inc
fsub
push
sar
idiv
out
pop
aam
les
gs
and
add
mov
sar
shl
lock
jno
push
and
movs
sub
inc
ret
add
loopne
shl
dec
or
inc
sbb
dec
cmp
pop
clc
fadd
call
sub
pop
mov
xchg
adc
push
invd
cwde
popf
ret
mov
mov
add
cmp
jge
push
arpl
shr
or
push
push
xor
sub
retf
sub
lea
shr
ret
sbb
jns
xor
gs
jge
js
pop
or
mov
xchg
and
fwait
cdq
or
enter
aad
mov
jmp
add
xchg
mov
dec
aam
(bad)
pusha
imul
aad
cmp
loopne
inc
jne
ins
sub
sbb
fld
or
cpuid
or
add
push
daa
ret
sub
mov
rcl
dec
sbb
int3
pop
xor
sar
mov
(bad)
in
ins
cmp
sub
dec
(bad)
shr
mov
popa
adc
fs
dec
movs
push
inc
and
test
mov
movs
inc
pop
imul
xchg
test
lds
int3
pop
fstp
mov
fmul
sti
add
je
or
gs
loop
pop
adc
push
or
mov
fstp
push
movs
ds
ret
xchg
adc
and
dec
inc
shl
mov
pop
add
addr16
jne
push
cmp
jl
lea
loope
popf
dec
(bad)
shl
cmps
xor
dec
mov
inc
clc
out
jae
mov
xor
push
jmp
fild
test
or
jns
push
lahf
neg
mov
push
jmp
cmp
sub
add
aad
xlat
adc
mov
rep
cmp
fucomip
and
mov
dec
add
push
push
sub
xchg
or
fucomi
call
add
adc
jno
pop
imul
push
cli
lods
sub
sti
pusha
ret
push
cmps
sbb
aad
xor
inc
inc
sbb
scas
and
or
ret
rcl
or
jne
addr16
xchg
sbb
xchg
add
inc
je
and
cmp
data16
jmp
cmp
enter
ror
shl
add
sbb
and
sbb
mov
adc
(bad)
hlt
cmp
adc
adc
ret
xor
ret
cwde
adc
cmp
or
(bad)
js
mov
mov
std
cmp
or
test
inc
jg
add
cld
cmp
and
push
or
adc
adc
mov
inc
add
xor
pop
push
xor
or
xchg
fdivr
inc
adc
loopne
add
scas
jmp
or
and
sti
mov
pop
adc
push
enter
mov
(bad)
or
daa
jl
sub
sub
adc
xor
fcmovb
lea
bound
inc
mov
sti
ds
cmp
inc
mov
daa
mov
(bad)
adc
mov
mov
mov
pop
adc
clc
push
sub
sti
frstor
xchg
and
je
xchg
jo
sbb
inc
mov
xor
xor
lahf
jnp
xor
jmp
popf
sbb
xchg
aas
ins
jns
inc
lahf
int
mov
adc
or
hlt
pop
fisub
add
inc
push
cmp
dec
push
pusha
xor
shl
xchg
xchg
and
jl
sbb
sbb
movs
xor
add
push
pop
aaa
mov
sar
int
and
sbb
shl
hlt
es
push
add
push
sbb
xchg
or
test
mov
pop
mov
jns
cmp
scas
outs
or
jns
int
push
adc
jl
dec
ss
and
add
and
daa
mov
fcos
test
mov
cld
adc
pushf
or
or
ficom
jb
adc
mov
adc
fiadd
mov
cdq
mov
test
pushf
xlat
xor
push
lea
push
mov
movs
in
mov
out
je
xchg
aam
pusha
push
or
les
or
shr
dec
out
dec
add
test
leave
enter
jbe
mov
jmp
sbb
sti
jge
repz
or
jne
dec
jns
dec
dec
test
jmp
add
pushf
outs
jle
test
js
cmp
out
xchg
mov
cmp
inc
sbb
aam
cmps
dec
inc
sar
cld
ds
leave
dec
mov
(bad)
jmp
mov
push
not
or
pop
push
or
icebp
jnp
xor
nop
addr16
ins
popa
in
dec
xchg
inc
mov
in
cmp
stos
dec
popf
xor
prefetch
or
retf
cmc
xchg
call
mov
and
ja
icebp
rcr
and
inc
xor
popa
cmp
and
retf
movs
jns
scas
scas
or
pop
cs
jl
test
jb
xchg
cwde
pushf
mov
movs
test
mov
xchg
retf
in
mov
add
mov
dec
sub
aam
fadd
add
jb
sbb
test
rcl
sahf
xchg
xor
es
out
ins
sub
hlt
adc
in
xchg
out
sbb
inc
sbb
mov
add
sub
cmp
or
retf
mov
inc
jmp
or
or
sbb
movs
shl
xchg
outs
(bad)
sub
jo
pop
imul
pop
cs
push
add
xchg
push
add
cld
inc
xor
fbld
call
mov
cmp
inc
dec
or
in
rcl
test
dec
add
dec
inc
sahf
shl
mov
or
cld
and
movs
cmc
call
xchg
imul
mov
or
sub
and
in
add
pop
inc
or
jmp
stos
xor
xchg
push
mov
push
mov
bound
or
add
add
lods
xchg
repnz
mov
ss
gs
nop
pop
mov
mov
pop
(bad)
or
xor
pop
sbb
cmp
mov
leave
mov
add
cmps
xchg
xchg
pop
fs
or
push
xchg
lea
mov
dec
or
cdq
jg
push
sub
sub
push
stos
mov
cmp
push
jae
call
fstp
xchg
sbb
pop
mov
pushf
nop
xchg
dec
xchg
in
ins
adc
leave
and
or
push
push
push
pop
popa
cmp
sub
inc
sbb
rcl
stos
add
xor
out
or
not
sub
mov
mov
out
xor
pop
push
jnp
scas
or
mov
aam
je
or
cdq
dec
pop
push
mov
add
sahf
inc
syscall
inc
rol
dec
or
cmp
movs
cmp
sub
les
ja
mov
in
das
rol
aad
adc
inc
sbb
add
aaa
aaa
add
adc
retf
mov
movs
jb
cmps
jbe
sub
mov
sbb
test
mov
dec
cmp
shl
clc
inc
push
mov
inc
enter
mov
jne
pop
js
cmp
jge
jo
mov
(bad)
dec
or
add
or
imul
aad
cmp
add
add
in
jecxz
ins
sub
sub
ins
pop
add
cmps
movs
dec
or
jle
lock
pop
adc
lea
fnstsw
jmp
enter
inc
pusha
push
lahf
add
pop
inc
mov
add
loopne
pop
add
adc
add
(bad)
inc
in
cmp
gs
xchg
outs
movs
add
xor
push
pusha
stos
add
push
sbb
imul
pop
push
inc
add
adc
push
movs
adc
mov
jb
push
inc
mov
sub
pop
inc
cmp
or
xor
jecxz
add
cmp
dec
or
cmp
mov
hlt
(bad)
or
rcl
jo
mov
pop
rol
cmp
nop
dec
mov
or
mov
cmps
je
test
mov
and
aam
ret
inc
lds
adc
add
push
mov
cmp
or
and
scas
ins
dec
call
adc
sahf
cmps
ins
adc
dec
ret
cmp
mov
ret
add
push
int3
clc
push
jb
mov
fwait
out
das
in
or
or
sub
sub
int3
sti
inc
pop
sub
add
adc
xor
aad
into
dec
(bad)
or
mov
dec
dec
inc
and
inc
jmp
int
sar
adc
in
lea
sar
jge
ret
out
ror
xchg
mov
jbe
jo
cmp
sub
mov
push
adc
ror
aam
clc
lock
data16
mov
or
add
in
lods
lea
mov
cs
mov
jp
jge
out
push
xchg
sub
sub
sar
test
gs
push
cld
adc
pop
rcr
jmp
leave
ds
cs
shl
stc
jbe
mov
cmp
jbe
push
fdiv
or
and
mov
lods
or
jl
stc
fimul
cmp
fs
or
cwde
in
inc
and
test
inc
fst
push
dec
jns
retf
mov
dec
add
wrmsr
push
test
or
loop
loopne
push
ins
cmp
lock
test
jne
xchg
adc
hlt
cdq
inc
add
xor
mov
cwde
cmc
in
mov
or
sub
sbb
sub
sbb
jae
mov
je
cmp
mov
jb
nop
retf
adc
cwde
loopne
icebp
cdq
mov
add
inc
popa
push
jmp
add
push
push
sbb
test
unpcklps
inc
mov
pop
cmp
push
loopne
add
or
and
xchg
mov
cli
mov
and
add
not
adc
sti
jmp
jg
js
movs
iret
out
inc
inc
mov
aaa
pusha
bound
fistp
addr16
movs
inc
sahf
pop
fisub
ficom
xor
out
sub
outs
loopne
js
mov
add
enter
mov
mov
add
out
adc
dec
ret
arpl
test
mov
sar
add
mov
adc
xchg
dec
mov
fiadd
stos
mov
mov
mov
sbb
imul
jo
scas
add
mov
inc
xchg
dec
mov
sahf
mov
sub
dec
push
pop
lods
or
mov
and
add
movs
cwde
mov
mov
call
jne
and
pop
jmp
dec
add
add
xchg
xchg
call
(bad)
jle
retf
movs
push
sub
xor
or
xchg
ror
xchg
rol
jg
dec
pop
mov
sub
loop
add
add
push
stc
lahf
aad
xor
cmp
xor
cmps
push
rol
add
xchg
pushf
pop
or
enter
mov
ror
push
or
dec
cdq
int3
popf
pop
cmp
xchg
add
nop
add
dec
jge
jge
inc
cs
jg
adc
xor
push
and
or
sub
scas
pop
push
push
push
or
ja
dec
imul
cmp
outs
xchg
sar
sub
add
and
in
xor
fld
add
sub
cmp
add
add
push
fwait
xor
jl
adc
outs
rol
rcl
xchg
pushf
xchg
and
mov
js
dec
xor
add
adc
pushf
arpl
das
popf
clc
adc
sub
sub
add
cmp
mov
lods
jnp
iret
and
jle
adc
test
pop
out
aaa
mov
add
xchg
xchg
sub
jne
jp
mov
cmp
cli
mov
push
mov
dec
lea
stc
sub
add
mov
bndldx
adc
mov
pusha
and
mov
push
ror
xchg
sbb
pusha
adc
xchg
xchg
outs
int
mov
enter
fcomp
add
loope
nop
add
shl
adc
xor
jno
sub
clc
(bad)
and
retf
xchg
inc
inc
and
call
xor
mov
push
add
jmp
mov
test
jmp
jae
psubusb
add
and
fisttp
adc
xadd
or
adc
jecxz
mov
sbb
dec
sbb
dec
push
int3
outs
outs
out
adc
add
add
int3
or
pop
adc
push
xor
aaa
rcr
sbb
jmp
sub
add
adc
rcl
cmp
test
hlt
sbb
push
fiadd
and
pop
leave
jecxz
sub
sbb
inc
ret
ror
inc
cmp
fld
mov
dec
scas
lea
lods
or
or
sub
push
cmp
not
push
mov
jge
stos
retf
ins
mov
mov
mov
mov
cdq
jle
jl
add
pusha
or
test
cmp
sahf
ins
and
and
test
xchg
and
and
jne
mov
cmp
cmp
push
dec
or
xor
push
scas
fld
adc
ss
push
imul
lock
scas
sbb
shr
xchg
shr
add
shl
xchg
xor
daa
mov
or
fwait
shl
sub
dec
rcl
and
jns
lahf
mov
add
push
mov
or
push
rcl
jbe
les
or
and
popa
enter
mov
shl
ds
inc
push
jmp
mov
(bad)
xchg
popf
in
jns
loop
xor
shl
xor
hlt
and
rol
push
loopne
adc
and
dec
xchg
pusha
or
sub
jnp
nop
adc
not
inc
cmp
inc
cmps
dec
and
or
adc
dec
icebp
mov
push
lea
test
lods
xchg
sub
mov
mov
or
popa
jb
adc
sbb
lods
adc
xchg
aas
dec
int
push
jnp
cmp
test
mov
sub
push
mov
nop
loop
gs
shl
and
popa
lods
sbb
mov
leave
and
add
popf
inc
mov
inc
rcr
push
fldcw
jbe
jmp
aaa
and
inc
mov
test
(bad)
mov
fidivr
cwde
mov
push
test
test
add
cli
adc
push
sbb
das
push
mov
lods
in
jno
sbb
adc
dec
push
inc
add
ret
dec
jmp
adc
outs
inc
cmps
inc
add
sbb
push
sbb
xchg
and
cmp
xor
add
push
nop
push
fdivr
jae
leave
ins
or
sbb
adc
mov
adc
pop
mov
jnp
loopne
add
pop
(bad)
mov
fwait
inc
outs
adc
shr
dec
jecxz
cmp
and
push
aas
sahf
repnz
xrelease
mov
addr16
jns
ror
or
or
out
aam
mov
cmp
cmp
mov
and
xchg
bound
sbb
sbb
or
dec
cmp
adc
sbb
pop
mov
imul
lea
imul
xor
loop
xor
mov
add
(bad)
jecxz
mov
loope
mov
pop
mov
jo
mov
retf
jne
mov
push
push
stc
loop
pusha
sub
aam
sub
call
inc
call
pop
cwde
jge
cmps
shr
int
xchg
or
push
or
ret
xchg
adc
in
test
xchg
xchg
adc
mov
jmp
and
or
jbe
in
je
repz
push
adc
jae
dec
lods
popf
add
sbb
lahf
test
add
add
sbb
test
stos
sbb
mov
call
xor
add
pop
mov
xchg
and
(bad)
aad
iret
in
mov
dec
mov
(bad)
dec
inc
stos
mov
add
(bad)
cmp
sbb
cmp
push
neg
out
mov
mov
add
mov
es
sub
xor
(bad)
popa
clc
cmp
popf
(bad)
hlt
push
lock
jecxz
jge
push
les
jb
xchg
push
pop
lea
sub
mov
pop
fadd
mov
daa
je
lods
mov
xchg
or
inc
add
inc
xor
cwde
inc
lea
and
jp
mov
and
or
shl
add
rol
pop
test
ret
add
mov
inc
adc
mov
jle
mov
xchg
add
add
jge
pop
or
inc
cmp
mov
adc
xchg
cmp
sti
(bad)
dec
jmp
sbb
mov
push
enter
idiv
jle
xchg
push
or
mov
js
lods
add
push
or
add
xor
or
cmp
add
mov
xchg
xchg
enter
imul
push
jl
retf
(bad)
jne
push
push
std
pop
push
lods
cmps
cmp
js
syscall
adc
cmp
rcr
cdq
sub
push
mov
xor
fadd
or
pop
xor
push
loopne
xor
sub
cmc
loopne
xchg
mov
xor
push
gs
push
in
popa
pop
mov
rcl
xchg
mov
push
test
or
sar
je
push
add
bound
call
xchg
jbe
mov
and
mov
jae
xor
inc
mov
in
or
adc
sub
rol
int
shl
adc
daa
cmc
mov
js
retf
aam
jle
sub
mov
call
sbb
mov
fisubr
or
mov
inc
test
fwait
xchg
cmp
stos
xchg
or
adc
xchg
xchg
adc
icebp
leave
dec
ret
mov
or
sub
sub
stc
inc
mov
or
xchg
retfw
loopne
and
xor
fisttp
add
sub
in
arpl
clc
jmp
mov
xchg
jmp
sbb
or
loopne
adc
add
cmp
call
pop
xchg
mov
out
dec
adc
fcomp
adc
shl
es
pop
popf
es
lods
mov
mov
sbb
inc
add
cmc
and
jmp
cmp
and
push
push
cdq
add
push
sub
sbb
bound
imul
shl
arpl
(bad)
jg
sbb
jle
popa
xor
add
test
mov
adc
jmp
les
lea
into
test
setns
pop
bound
sbb
adc
pusha
push
push
pop
push
inc
xchg
out
scas
movs
outs
ret
pop
(bad)
in
inc
shl
sbb
pop
nop
sbb
inc
inc
pop
enter
rcl
icebp
and
sub
sbb
jb
inc
call
dec
or
cmp
je
dec
ja
pop
dec
pop
xor
mov
mov
mov
call
xchg
test
bound
mov
aad
std
(bad)
xchg
or
fstp
fs
inc
cmps
idiv
inc
add
mov
pushf
out
sahf
and
lahf
add
dec
and
fdiv
push
pop
or
rcr
mov
fsub
sbb
add
bound
js
mov
mov
sub
cmp
test
xchg
test
inc
lods
jle
loope
mov
lods
sub
sub
and
add
gs
inc
inc
add
mov
add
or
adc
sub
lea
fist
sub
dec
or
inc
adc
mov
jge
mov
sahf
jno
mov
pop
icebp
scas
jne
loopne
sub
inc
add
or
das
add
jnp
xchg
ret
cmp
(bad)
(bad)
inc
loop
inc
sub
xlat
aaa
xchg
add
les
push
sbb
pop
and
jne
sbb
popa
loopne
fxch
inc
call
xchg
sahf
and
dec
mov
mov
test
pop
arpl
mov
sbb
push
mov
add
leave
leave
adc
adc
adc
add
or
sbb
jae
mov
push
xor
xchg
xchg
pushf
add
adc
and
and
fs
mov
pop
aad
inc
sbb
ret
lods
sub
mov
push
push
mov
dec
xor
and
sbb
ret
cmp
rcr
aam
cmp
mov
push
pop
cmp
jge
clc
adc
test
fimul
jecxz
div
rol
jmp
cmp
xor
add
sub
xchg
sbb
jnp
add
xor
adc
sbb
and
adc
fs
push
mov
jne
sahf
test
pusha
adc
xlat
jl
or
jl
xchg
adc
cdq
ret
(bad)
lods
sti
add
inc
and
je
pushf
ins
xchg
xchg
ins
sbb
sbb
add
in
sub
call
lods
mov
pusha
sub
fimul
xchg
aad
inc
repz
inc
add
xchg
sbb
lea
add
add
shr
sub
and
sbb
or
mov
sub
add
inc
cmp
push
in
jmp
test
cmp
dec
outs
mov
inc
sbb
or
mov
jmp
rcl
mov
bound
popf
mov
jmp
jmp
xchg
sub
popf
rcl
fdivr
mov
mov
iret
stos
push
dec
arpl
and
mov
sahf
adc
lea
cwde
sbb
in
xchg
stos
cmps
mov
jne
or
pop
xchg
or
adc
push
xchg
mov
dec
adc
cli
rcr
je
ret
sbb
adc
ret
xor
jns
cmp
and
aam
lods
lds
nop
enter
int3
jle
cmp
cmp
stos
mov
push
je
scas
add
and
or
or
and
mov
dec
xchg
add
add
sbb
and
pop
ret
ret
xchg
and
sbb
ret
push
push
cmps
repnz
push
mov
mov
push
in
sbb
dec
or
jmp
(bad)
xor
sbb
fwait
mov
sub
pop
pop
xor
mov
je
and
xor
push
test
bound
mov
inc
ret
and
rcl
mov
dec
inc
xchg
fadd
cmp
add
jmp
inc
adc
cmp
jbe
xor
mov
into
adc
imul
gs
pop
push
push
add
sahf
dec
adc
and
cli
nop
stos
adc
sar
ins
cmp
push
hlt
shl
cwde
push
sub
cwde
push
push
or
cwde
xor
pushf
nop
fsub
sub
mov
jns
push
mov
pop
loope
mov
mov
ins
gs
push
aas
dec
or
jge
rol
ret
fstp
jmp
pop
sti
jge
push
pop
mov
popf
out
adc
lods
sub
dec
addr16
xchg
into
adc
and
call
or
dec
adc
adc
inc
adc
sar
push
(bad)
jp
mov
add
or
push
rcl
jmp
jae
push
test
lock
pusha
mov
jmp
add
es
adc
xor
or
xchg
les
jo
mov
mov
mov
adc
sar
lods
or
pop
movs
pushf
scas
inc
(bad)
sbb
hlt
push
bound
xchg
cmp
pop
addr16
or
pop
dec
cmps
movs
mov
add
mov
adc
jmp
shr
xchg
dec
ror
jmp
in
pop
and
cmp
ja
ins
sub
loop
push
mov
and
and
cmps
pop
xchg
adc
cmp
lock
das
jns
lea
mov
ins
sbb
xor
mov
push
or
pusha
and
lods
or
sbb
push
lds
daa
je
mov
call
add
push
inc
xor
adc
test
pop
stos
add
mov
pop
and
pop
dec
add
push
fild
push
iret
mov
cmp
arpl
sub
sub
push
pusha
cmps
test
or
mov
sub
xchg
loop
retf
dec
sub
or
adc
push
(bad)
out
cmp
dec
push
xchg
sbb
shr
popa
add
add
add
add
imul
lods
mov
test
mov
push
xchg
pop
out
inc
imul
imul
test
add
(bad)
loope
hlt
add
cmp
adc
jne
cwde
adc
mov
pop
sbb
movs
jne
pop
mov
sub
test
mov
xor
ret
adc
mov
xchg
sub
add
jnp
mov
sub
push
jne
nop
xor
lods
jmp
sub
cmp
or
es
sbb
mov
(bad)
adc
sar
dec
and
push
mov
lea
shr
cmps
inc
jne
mov
mov
clc
stos
fist
and
mov
mov
and
or
or
xor
adc
push
ins
and
shl
scas
sub
cmp
(bad)
movs
shl
mov
ficom
inc
sub
xchg
jl
cwde
inc
push
nop
movs
je
or
or
test
cli
shr
mov
push
dec
add
stos
mov
dec
push
mov
add
dec
pop
gs
test
loopne
dec
out
lock
mov
stc
add
adc
xchg
aad
sub
pop
push
mov
je
sbb
and
sbb
jle
clc
add
or
or
test
sub
mov
pop
inc
dec
jmp
dec
sbb
adc
xchg
jo
pop
sub
pop
mov
xchg
inc
std
sar
add
jmp
sbb
sar
jmp
pop
je
ds
push
sti
aad
in
xchg
stc
cli
add
adc
add
into
cld
cmp
fdivr
pushf
inc
xchg
jl
cmp
add
add
js
and
and
enter
and
add
sar
mov
push
sbb
out
(bad)
cli
add
or
sub
cmps
es
xchg
ret
sub
inc
dec
add
js
xchg
dec
adc
xchg
bound
mov
cmp
ret
stos
mov
shl
mov
dec
fs
repnz
lea
cmp
mov
cs
add
rol
cmp
ret
dec
mov
sub
cmps
popa
sub
gs
scas
fisttp
jo
fiadd
sbb
mov
push
loop
push
test
lock
pushf
and
pop
xchg
mov
jne
fwait
or
pushf
cmp
in
mov
sub
ret
cs
xchg
or
xchg
pushf
bound
adc
icebp
cmps
push
shl
ins
or
inc
out
adc
dec
jmp
pushf
xchg
fcomi
sub
fisttp
rol
adc
xor
je
imul
inc
pop
loope
mov
sub
rol
cmps
push
lods
fwait
add
addr16
test
mov
cmps
and
dec
push
push
sbb
push
or
add
fcom
mov
add
add
test
retf
sub
xor
bound
sub
shr
cdq
xor
pop
cdq
and
push
dec
inc
push
scas
cld
test
lock
or
popa
jns
sub
je
sbb
aas
mov
or
push
fst
lahf
cmp
shl
ret
push
add
and
inc
push
retf
mov
(bad)
adc
out
jle
test
rcl
js
adc
xor
pop
lods
push
mov
mov
aaa
cwde
movs
xor
or
push
add
mov
int
jp
sbb
rcl
icebp
imul
add
bound
mov
inc
push
call
add
test
push
push
jge
dec
add
lods
push
push
push
push
movs
or
inc
pop
mov
push
push
push
jns
and
dec
sub
rcl
sbb
(bad)
sbb
or
mov
enter
pop
mov
pop
jecxz
and
and
push
cdq
pop
sbb
les
xchg
push
ja
mov
push
sub
pop
int
sub
adc
fidivr
or
je
and
push
jmp
inc
popa
sbb
xchg
pop
shl
ret
lods
cmp
sbb
rcl
and
iret
cwde
(bad)
cmp
adc
inc
loop
sahf
jmp
ror
add
repz
sahf
mov
nop
and
sbb
xchg
sar
mov
lods
sti
movsx
lods
gs
dec
popa
push
mov
xor
nop
fwait
mov
xrelease
push
pop
loopne
(bad)
fldenv
or
cmp
pop
mov
sbb
xchg
(bad)
and
mov
jb
jecxz
repz
and
push
mov
lahf
inc
cmp
sub
out
xor
seta
mov
pop
dec
loope
movs
push
test
mul
test
or
psrlw
sbb
cld
jne
lock
enter
sub
jo
inc
cmp
(bad)
and
movs
leave
lods
retf
and
xor
push
or
int
xchg
dec
sbb
add
or
inc
sbb
or
movs
add
cmp
fstp
and
push
adc
dec
(bad)
or
fwait
jb
and
popf
sub
es
push
jle
push
dec
das
or
shl
les
bound
sub
mov
sbb
scas
ret
into
fidiv
movs
jne
jns
or
fdiv
or
jge
ss
add
push
enter
adc
and
ret
mov
adc
mov
rcl
sub
pop
in
mov
adc
cdq
inc
sub
jae
inc
nop
add
stos
rcr
clc
mov
es
and
push
sub
les
pop
in
in
enter
rol
jne
pop
loopne
bound
loope
das
addr16
cmp
and
push
mov
daa
jecxz
sbb
call
or
jle
mov
cmps
loopne
push
fcom
test
inc
retf
in
and
dec
fadd
loop
ss
jmp
lock
push
mov
mov
rcr
jbe
push
cmp
inc
cmp
push
dec
out
fst
lock
fmul
inc
push
dec
in
jne
sbb
push
lea
sub
xchg
call
sub
mov
mov
inc
or
mov
or
inc
add
ror
add
mov
inc
nop
inc
mov
add
cmp
(bad)
imul
dec
cmp
jno
add
push
add
mov
(bad)
cmp
sub
imul
js
pop
inc
mov
fisttp
sub
adc
sub
sub
pop
ret
xlat
dec
and
fsub
jmp
pop
ror
pop
push
das
push
repz
icebp
add
in
add
or
nop
mov
adc
cld
push
or
leave
and
sbb
es
inc
sub
mov
jge
outs
add
or
cmp
lea
push
adc
lahf
sub
stos
imul
sub
ret
lock
xor
mov
mov
jnp
cmp
add
out
sub
mov
cli
xor
add
dec
and
inc
push
and
fadd
xchg
shr
les
push
(bad)
stos
push
dec
fnsave
div
(bad)
fadd
lods
or
xor
or
int
cmp
hlt
(bad)
clc
add
mov
nop
pop
and
movs
mov
adc
outs
aad
sub
movs
leave
sar
sub
cwde
movs
pop
mov
loope
jno
or
add
test
adc
ins
jecxz
cs
clc
or
push
clc
push
add
jle
mov
mov
pop
mov
clc
push
sub
(bad)
push
adc
pop
and
loopne
sti
add
into
xlat
retf
push
and
adc
jge
aas
pop
in
jns
push
jmp
pop
stos
test
sub
xor
inc
cmps
dec
add
mov
ss
cmp
add
outs
add
call
and
push
push
rol
inc
xchg
ds
inc
xlat
ins
rol
mov
cmps
or
pop
call
inc
inc
fst
enter
out
and
or
inc
movs
lock
or
or
adc
ffree
jno
xor
adc
cs
ja
fbld
sbb
adc
sbb
shr
sbb
push
fld
sbb
inc
imul
popa
inc
sub
sub
inc
pop
fimul
sub
or
and
sbb
sbb
scas
mov
lahf
lock
xor
arpl
sbb
sub
inc
std
mov
jne
pop
adc
daa
or
ins
mov
pop
jle
sbb
dec
pop
or
jo
ins
sub
dec
push
push
in
mov
shr
ins
xchg
icebp
mov
cmp
gs
push
pushf
popa
(bad)
aas
jmp
dec
mov
add
mov
inc
xchg
mov
xor
inc
rcr
test
xchg
and
cmp
je
and
jae
mov
outs
lea
fsubr
pop
jmp
sub
add
inc
call
paddq
xor
int
rcr
jl
and
xlat
(bad)
xchg
out
enter
fcomi
sbb
inc
add
and
in
add
mov
xor
add
jmp
jecxz
xchg
xchg
mov
(bad)
int
fcom
hlt
sbb
pushf
pop
sub
or
add
add
and
mov
call
in
lock
cmp
popa
add
inc
add
mov
and
cmp
or
jmp
add
jns
pop
inc
inc
scas
call
scas
sub
fadd
add
pop
xchg
dec
pushf
xor
test
sub
push
jl
push
pop
add
and
daa
fdiv
pop
add
je
ds
dec
movs
pop
xor
and
mov
sbb
sub
add
jo
jmp
mov
push
push
cmp
pop
popa
scas
in
mov
mov
adc
ret
stos
test
jo
outs
or
and
mov
pop
scas
mov
push
(bad)
fcomp
into
mov
xor
pop
sub
js
cmp
cmp
xchg
ins
push
cmps
das
and
add
fld
inc
pop
rcl
inc
or
ins
add
movs
dec
push
or
inc
and
push
adc
or
aam
arpl
cmp
bound
mov
stc
call
enter
add
fs
fsubr
xchg
ins
push
lods
shl
pop
sbb
or
push
or
xor
dec
hlt
push
int3
adc
xchg
movs
mov
imul
cs
xchg
mov
dec
rcl
je
test
fsub
xor
mov
mov
xchg
or
xor
and
sbb
xor
cdq
fimul
pusha
xor
push
pop
cmp
clc
or
add
jmp
and
add
mov
ret
xor
inc
inc
aas
shl
push
icebp
and
add
xor
sar
inc
imul
mov
push
xchg
xor
loope
mov
(bad)
or
adc
pusha
movs
mov
lea
pusha
and
or
and
into
jl
es
push
push
or
adc
mov
popa
aas
push
rcl
lock
push
mov
push
in
inc
rcl
nop
xchg
sbb
jae
(bad)
adc
mov
loopne
jne
inc
add
sbb
test
out
adc
mov
cmps
xor
imul
jb
adc
retf
je
add
cld
dec
add
ins
cld
das
jnp
dec
pop
push
mov
push
pop
add
inc
ficomp
add
add
jns
sub
add
pop
adc
or
inc
hlt
call
or
push
lds
and
push
aaa
in
dec
jb
ja
push
ret
push
pop
sbb
cmp
pop
dec
call
push
ss
cmp
pop
clc
cwde
dec
cs
push
lds
enter
pusha
or
or
retf
stc
gs
ja
dec
push
mov
cmp
add
add
(bad)
push
aad
int
rcl
push
aad
aaa
sub
adc
ret
(bad)
adc
rcr
sbb
in
push
lahf
shl
mov
inc
mov
int
xor
and
sbb
pusha
outs
push
test
nop
inc
cmp
mov
and
sub
inc
cmp
pusha
lods
add
xchg
mov
ds
adc
add
add
dec
and
or
popf
or
jmp
jne
repnz
inc
mov
(bad)
pusha
std
jl
pop
pop
std
or
adc
adc
cmp
pop
daa
lds
lods
pop
mov
cwde
rcr
xchg
nop
mov
jle
loope
jg
fiadd
(bad)
jl
jmp
xchg
add
adc
cwde
or
(bad)
jne
cwde
push
pop
dec
or
xor
push
icebp
or
pop
inc
or
cmp
ret
xor
lock
mov
xor
push
xor
outs
push
inc
test
es
jl
or
jge
sbb
adc
or
cmp
int
xchg
or
xlat
adc
or
pop
pusha
cmps
or
ror
ret
ins
jl
xor
push
or
xchg
clc
cdq
mov
sbb
jne
cmp
pushf
mov
and
push
pop
rcl
jno
cmp
in
sbb
xor
push
inc
sub
add
or
sub
test
and
test
outs
adc
imul
add
and
pop
or
pushf
inc
fwait
push
add
jmp
inc
or
jmp
fld
adc
add
cmp
xor
and
push
lds
repz
lock
adc
shl
leave
icebp
pop
(bad)
or
lea
enter
out
dec
mov
dec
push
and
je
out
sbb
loope
movs
add
push
xchg
xchg
sub
sub
dec
(bad)
mov
lods
adc
call
(bad)
push
ja
xor
movs
dec
jb
cmc
shr
cmp
jge
repnz
fiadd
ret
sbb
cmp
adc
add
gs
xchg
and
or
inc
test
mov
imul
xor
inc
fild
and
or
sbb
sub
adc
or
in
leave
dec
xchg
xor
pop
mov
rcl
xor
(bad)
pop
cmp
mov
and
es
test
mov
pushf
add
sub
or
popa
push
sbb
add
xor
inc
push
addr16
and
sub
cmp
std
mov
sbb
jle
test
mov
nop
dec
imul
ds
out
inc
inc
lods
xor
call
(bad)
lock
add
pusha
add
loopne
aam
inc
sar
(bad)
jle
movs
ds
movs
or
sbb
fld
push
les
mov
xchg
or
cmp
cmp
ret
nop
stos
or
inc
aam
pop
pop
ja
stos
mov
sbb
xchg
mov
and
scas
mov
inc
or
fcmovnu
xor
inc
jmp
pop
push
or
or
cmp
daa
(bad)
mov
jmp
push
adc
inc
xor
pop
add
in
(bad)
nop
cmp
mov
dec
shl
pushf
dec
adc
push
popa
sti
inc
xchg
sbb
je
inc
and
in
jmp
sbb
arpl
mov
add
pusha
dec
jmp
sar
or
adc
push
ja
sbb
push
dec
cli
clc
enter
sbb
or
jl
cli
or
pop
xchg
xor
mov
add
push
mov
ins
jmp
inc
jmp
adc
ret
and
fmul
test
cmp
ret
mov
push
xchg
fadd
dec
sub
adc
dec
fwait
mov
je
lea
int3
add
add
daa
imul
jmp
xchg
pop
cmp
jp
jbe
bswap
adc
adc
adc
aam
test
mov
js
inc
pusha
lea
and
dec
and
cmp
or
in
and
and
sub
push
mov
push
mov
rcl
lea
cmp
mov
adc
push
dec
or
push
outs
xchg
push
add
jo
and
jmp
add
mov
xor
cmp
inc
sbb
jmp
push
mov
pop
inc
dec
jl
sbb
adc
xor
cmp
cmp
jo
or
scas
xchg
xor
push
sbb
mov
jo
sub
not
(bad)
add
femms
mov
pop
and
clc
sbb
es
(bad)
ss
push
inc
inc
call
mov
mov
retf
fadd
sti
add
inc
fdivr
es
and
xor
and
push
sti
and
mov
enter
push
add
sub
inc
pop
rol
cmps
push
adc
push
mov
cmp
shr
inc
jg
shl
jno
push
popf
jmp
shl
mov
cmp
xor
addr16
lods
xor
cmp
add
or
xchg
adc
push
(bad)
mov
push
xchg
or
pop
jge
aam
jne
ja
mov
les
leave
jno
xor
dec
shr
dec
mov
jp
bndstx
mov
fcom
xor
ins
push
pop
add
outs
inc
bound
add
pop
pop
fld
inc
loop
sub
jmp
cmps
push
(bad)
loopne
add
aam
fs
adc
cwde
mov
sbb
push
mov
dec
(bad)
dec
dec
xor
popa
pop
call
nop
xchg
cdq
cmps
jnp
pop
addr16
mov
inc
xlat
mov
movs
mov
fcomp
jae
xor
mov
test
lds
std
sub
cmp
fstp
add
cmp
sahf
sbb
cmp
rcr
push
jle
jp
xor
mov
sub
inc
mov
iret
xchg
cmp
adc
sti
(bad)
jg
pop
or
push
push
jmp
dec
movs
and
add
or
cmp
mov
push
push
jp
and
das
lea
ret
nop
dec
je
int
pusha
leave
adc
pop
or
mov
test
clc
and
mov
dec
xor
inc
add
mul
xchg
popa
xor
retf
shl
or
icebp
mov
enter
fsub
adc
(bad)
fcomp
pop
jo
jne
add
adc
push
popa
sahf
push
pop
dec
inc
mov
lahf
pop
pusha
jmp
xchg
xor
push
pop
dec
rol
mov
add
int3
jge
push
pop
rcl
sbb
mov
cmp
xchg
lock
add
pop
and
clc
push
mov
add
push
xor
push
mov
enter
adc
rol
fld
test
or
stos
fwait
adc
push
mov
imul
and
rol
jne
adc
imul
ds
and
or
mov
test
loopne
aam
mov
pcmpgtw
jmp
shl
dec
mov
lods
sbb
call
mov
dec
adc
inc
mov
sub
ins
push
dec
add
enter
je
xor
test
and
mov
push
adc
ins
mov
mov
jno
jb
mov
ins
mov
add
and
and
jp
mov
enter
adc
mov
jbe
movs
inc
or
xchg
sti
jo
popa
and
sbb
stos
fnsave
enter
cs
(bad)
mov
iret
or
adc
add
sbb
test
or
aad
inc
dec
bound
fs
cmp
xchg
rcl
ins
push
sub
xchg
movs
pop
xor
fsub
adc
cmc
bound
pop
ror
in
mov
rcl
cmps
icebp
daa
inc
xlat
aas
mov
cmps
jmp
inc
loope
icebp
fadd
cdq
push
push
push
push
add
sbb
pop
pop
or
call
pop
jne
add
retf
mov
xchg
loopne
push
sub
mov
push
mov
addr16
xchg
and
mov
inc
or
mov
cmp
or
mov
xlat
push
cmp
sbb
push
xlat
mov
mov
mov
mov
or
xchg
sbb
frstor
mov
js
and
or
jne
xchg
hlt
cmc
sbb
mov
cmp
and
push
fisubr
jnp
cmp
adc
sbb
mov
movs
je
and
cmp
mov
aas
xor
test
loop
mov
int
mov
and
lods
sub
arpl
mov
push
mov
and
sub
adc
push
sbb
repz
pop
xor
xor
jmp
aam
gs
loopne
scas
mov
aaa
ins
stos
mov
push
stos
pop
xor
sub
es
test
dec
ret
jge
sbb
fs
mov
or
(bad)
sub
inc
out
lea
mov
xor
push
adc
es
inc
pop
xor
inc
add
dec
fs
iret
inc
add
xchg
mov
dec
or
or
rol
scas
mov
sbb
invd
mov
test
cmps
xbegin
pop
in
xor
cmps
enter
adc
sub
lahf
idiv
mov
lods
aad
dec
iret
adc
dec
imul
jge
in
int
mov
sbb
movs
in
push
mov
xchg
xchg
sbb
jmp
cmp
xor
and
push
js
nop
(bad)
(bad)
(bad)
mov
add
es
add
adc
jno
stc
mov
test
add
sar
push
(bad)
ins
push
pusha
lods
xchg
xchg
and
data16
jo
and
xchg
mov
push
or
adc
mov
sub
pusha
cmps
in
icebp
dec
ret
jo
sub
ins
push
push
dec
jecxz
add
or
sub
adc
je
xchg
ret
mov
call
sar
mov
popf
sub
fadd
adc
mov
mov
mov
add
mov
push
call
hlt
mov
push
cmp
jl
imul
add
rcl
xchg
fild
cmp
mov
and
cs
add
pop
mov
dec
rol
cmps
add
pushf
call
and
cmp
push
popa
sub
inc
hlt
adc
mov
ret
je
js
cmp
nop
or
icebp
sub
loopne
inc
adc
aas
xchg
movs
jb
or
or
xor
xor
inc
xor
pop
lea
xor
and
dec
inc
mov
mov
fidiv
xchg
xchg
inc
jnp
add
add
fdivr
push
mov
add
repz
mov
push
movs
and
xor
ret
mov
xchg
(bad)
sar
mov
fdiv
xchg
cmp
inc
or
(bad)
aaa
xor
cdq
lock
mov
or
cmp
lock
jnp
jmp
inc
jno
std
outs
dec
test
cmp
and
dec
(bad)
iret
mov
adc
adc
sbb
out
dec
cmps
and
sti
enter
js
cmp
call
xchg
mov
and
jno
jl
test
add
aaa
or
adc
cmp
fwait
push
push
mov
xor
(bad)
sbb
add
or
stos
add
call
push
out
pop
mov
xor
retf
jo
shl
loopne
dec
mov
out
dec
dec
lock
popa
inc
pop
mov
or
jo
pushf
clc
(bad)
setb
test
or
nop
and
xor
test
sub
mov
ja
cmp
inc
dec
mov
ss
imul
dec
aaa
xchg
out
aaa
sub
and
mov
add
sub
mov
and
pop
mov
sub
ins
and
lds
dec
(bad)
and
retf
sbb
or
inc
syscall
test
movs
clc
push
pop
and
adc
and
je
cmp
pop
lock
dec
sub
or
add
stos
test
dec
mov
and
mov
cmps
push
sahf
add
add
xor
pop
jne
push
cmp
ins
cmp
imul
aam
(bad)
ss
and
sub
retf
pop
add
dec
loopne
xchg
ja
imul
cmp
sub
or
lods
aaa
mov
xchg
das
push
adc
inc
or
and
inc
call
xor
push
push
rcl
mov
inc
cwde
das
das
aad
push
mov
add
push
sub
jge
movs
test
mov
mov
cmp
je
fwait
adc
push
pop
adc
shl
je
xor
dec
add
les
push
(bad)
fnstsw
or
xlat
and
repnz
imul
mov
cmps
adc
ror
loope
mov
inc
ds
mov
mov
sub
add
xchg
nop
scas
scas
iret
out
pusha
mov
xor
jl
push
inc
test
in
mov
mov
shl
mov
cmps
dec
adc
test
(bad)
hlt
fdivr
mov
sub
ror
adc
das
rol
dec
ins
mov
jl
mov
pop
imul
enter
ds
sbb
mov
cmp
jmp
popf
jge
sbb
add
mov
jbe
fld
pop
push
aas
push
shrd
fld
fcomi
inc
mov
or
shl
xor
shl
pop
movs
xor
loope
sar
mov
mov
ss
inc
test
add
sub
pop
je
push
rol
jb
test
mov
jns
lock
mov
xor
push
in
xchg
dec
mov
cld
lds
jmp
in
loope
and
mov
mov
call
xchg
mov
pop
mov
push
lods
pop
cmc
cdq
pop
mov
pop
pop
cmps
jns
nop
shl
test
cmps
icebp
or
cmps
movs
adc
sahf
push
sbb
cwde
jge
rol
outs
mov
adc
nop
jle
push
xchg
add
rcl
jne
push
loopne
mov
movs
sub
xor
adc
push
cmp
push
call
sub
sub
adc
push
loopne
xchg
jo
or
lock
pop
jl
xor
or
add
and
lea
das
jbe
cmp
jge
dec
mov
or
cmps
aad
dec
add
jne
int3
es
(bad)
jb
adc
test
fwait
cli
mov
out
push
dec
push
or
pop
lock
mov
mov
sbb
cmp
mov
adc
adc
clc
cdq
fdivr
mov
jge
lahf
xchg
pop
sbb
call
cmp
fcomp
std
(bad)
cmp
mov
adc
loope
mov
inc
cmp
jge
test
inc
add
cmp
dec
loopne
cmps
lea
sbb
mov
gs
scas
sbb
push
xchg
or
jmp
pop
xor
cmp
bound
add
sub
or
shr
mov
loop
les
or
and
inc
loopne
pop
rol
xchg
and
mov
jo
stc
mov
into
test
inc
aam
lahf
adc
push
enter
sbb
mov
in
stc
inc
mov
mov
push
nop
pop
idiv
pop
in
jns
ret
cmps
mov
push
nop
mov
jmp
add
iret
rol
retf
add
inc
pop
fsubr
add
in
ins
pusha
sbb
add
mov
popa
imul
sbb
cmp
jl
or
nop
push
mov
mov
pop
or
aas
inc
loopne
sbb
and
ss
and
cmp
mov
sbb
jmp
add
xchg
sahf
pop
push
jne
jno
mov
add
dec
arpl
jno
rol
mov
push
cmp
jecxz
jge
mov
or
or
test
add
or
data16
or
inc
retf
les
clc
xor
adc
dec
cmp
xor
mov
dec
jmp
lock
jo
add
std
sbb
push
and
jmp
dec
push
add
push
push
xlat
cld
pop
test
lea
mov
mov
(bad)
sbb
dec
jmp
shl
push
adc
xchg
or
dec
call
xchg
pop
dec
xchg
pusha
or
mov
adc
push
mov
out
outs
(bad)
add
jno
xchg
jo
inc
jge
mov
loope
jl
sbb
and
adc
xchg
call
dec
dec
or
popa
inc
add
xchg
jmp
popf
push
mov
test
xlat
and
mov
inc
nop
or
pop
push
jb
jb
sbb
or
or
and
or
enter
jmp
jmp
mov
and
fadd
mov
xor
sbb
sub
mov
add
je
mov
retf
pop
ins
push
movs
jl
(bad)
jge
dec
sbb
mov
xor
cdq
push
pop
pop
pop
dec
jbe
mov
div
add
jmp
addr16
enter
add
mov
not
and
or
fistp
aad
jne
cmps
jns
xor
js
pop
js
or
inc
or
sbb
adc
cwde
jmp
jle
and
push
jns
cmp
inc
jg
rcl
cmps
mul
sub
pop
dec
pop
pop
ins
and
mov
and
pop
sub
jmp
xor
inc
imul
pop
mov
pop
or
or
pop
stc
out
movs
sbb
(bad)
fidivr
jnp
mov
enter
xchg
inc
dec
loopne
mov
and
movs
leave
int3
mov
js
inc
jnp
movs
out
mov
xchg
mov
and
push
gs
xor
jp
lock
clc
ficomp
or
push
movs
xor
inc
ds
data16
or
(bad)
rcr
and
call
fiadd
add
inc
cmp
inc
out
mov
mov
adc
aam
adc
or
fmul
xchg
popa
or
enter
bound
xchg
xchg
in
sqrtps
cdq
jge
adc
inc
icebp
and
cmp
jle
call
push
inc
call
aaa
mov
xchg
or
xchg
and
push
mov
rcr
mov
mov
push
test
sbb
cmp
mov
xor
inc
lods
jne
loop
xor
inc
push
adc
ret
cwde
dec
cs
addr16
aad
sub
xor
adc
mov
or
retf
xchg
cld
ror
push
push
loope
add
add
xor
rol
sbb
(bad)
inc
loopne
mov
in
mov
adc
sbb
add
dec
or
adc
add
jp
int3
dec
sub
test
inc
retf
lds
in
mov
mov
push
pop
xor
sub
fmul
mov
inc
cli
bndldx
in
rol
mov
xchg
cmps
mov
cmc
movs
cmp
cmp
cwde
dec
xchg
inc
sbb
ins
rcl
retf
xchg
adc
sub
and
add
es
mov
inc
cmp
rol
jbe
jg
jbe
pop
push
ins
pop
mov
pop
in
add
retfw
pop
iret
iret
aad
int3
xor
inc
adc
cmp
leave
inc
or
out
lds
add
shr
xchg
mov
add
or
shr
gs
xor
sub
ret
dec
dec
xchg
loopne
loopne
mov
pop
add
jo
jge
fimul
jp
push
cmp
mov
inc
repnz
sbb
imul
retf
dec
cmps
(bad)
test
dec
mov
xor
xchg
or
cmp
fisubr
call
cmp
xchg
or
inc
shl
push
cmp
fist
shl
in
jle
jnp
test
ins
arpl
xchg
cmp
mov
xchg
pusha
mov
mov
fld
adc
repz
adc
sub
imul
retf
xlat
xor
xchg
daa
mov
or
add
inc
jl
imul
lea
scas
fistp
add
mov
mov
or
pop
dec
sahf
xor
sbb
loopne
mov
mov
inc
(bad)
add
leave
or
push
mov
pop
out
mov
cmps
or
jle
js
xchg
mov
or
test
sbb
push
mov
lock
and
sub
adc
and
fild
mov
xor
xor
daa
cmp
mov
push
(bad)
fwait
jno
(bad)
xchg
jns
or
cs
mov
shl
xchg
xor
add
stc
adc
(bad)
push
mov
mov
fst
or
fisub
pop
fistp
add
inc
inc
mov
ja
or
push
sti
fbld
mov
mov
add
movs
xchg
cmp
push
data16
sub
push
add
sbb
sbb
ret
mov
xlat
sub
jae
xor
pusha
adc
stos
stos
xor
ficomp
add
mov
loopne
pusha
push
adc
pop
xchg
inc
std
ins
pop
jp
jle
jns
les
mov
fs
inc
pop
xchg
or
pop
push
xlat
inc
jg
ins
dec
cli
push
xor
mov
add
mov
inc
icebp
or
mov
pusha
add
or
add
sbb
sbb
fnstcw
inc
cmp
cmp
fnsave
or
dec
mov
sub
inc
sahf
stos
sub
movaps
sub
call
cmp
and
push
pop
push
sub
inc
adc
push
xor
add
pop
mov
outs
jo
inc
dec
jno
adc
call
fs
pop
inc
enter
push
dec
pop
ret
(bad)
xchg
mov
dec
inc
sbb
xchg
pop
enter
add
cld
push
and
jp
call
and
les
mov
test
pop
and
bound
and
loopne
aam
popa
(bad)
cmp
add
aas
cld
cwde
sub
add
cld
or
std
loopne
add
adc
je
sub
adc
xor
jmp
sbb
in
test
mov
add
dec
fadd
bound
mov
sbb
adc
sbb
cmp
or
pop
ror
dec
call
push
add
fadd
imul
xor
lods
imul
mov
or
iret
jmp
adc
shl
jecxz
dec
pop
fcomp
imul
push
add
fist
jecxz
clc
dec
xchg
daa
jl
adc
cmp
scas
jmp
xor
cmp
and
sub
push
ss
jg
int3
jo
cmp
xor
or
adc
leave
xor
add
dec
imul
xchg
xor
mov
jl
test
sbb
imul
mov
adc
enter
jae
pop
and
cmp
pop
ret
lods
movs
push
mov
inc
out
mov
add
ins
or
pop
imul
jae
jmp
and
mov
std
xor
test
mov
lods
cmp
or
adc
icebp
adc
clc
wrmsr
jge
sub
mov
and
icebp
call
xchg
jo
add
je
ds
out
or
and
add
add
dec
sbb
pop
xor
or
and
rcr
sub
sar
and
pop
sub
pop
out
push
out
xchg
pop
pop
and
rcl
sbb
popa
xor
pop
sub
mov
jo
jnp
les
je
mov
and
gs
(bad)
jmp
xor
mov
lock
mov
fnstcw
lahf
and
or
push
adc
pop
mov
and
mov
scas
loope
ret
push
movs
sbb
ret
sub
(bad)
jb
xor
test
sub
push
push
xor
iret
push
iret
sbb
xor
pusha
add
ins
cmc
pop
inc
add
scas
mov
xchg
adc
mov
or
adc
mov
aam
jnp
push
push
inc
push
sub
neg
(bad)
push
add
bound
jns
xchg
test
push
ja
sub
and
add
mov
cmps
test
push
dec
and
sbb
sbb
call
adc
xor
xor
lds
xor
or
and
sbb
adc
hlt
test
and
lahf
sbb
sbb
and
wrmsr
jge
loop
jmp
lods
dec
push
inc
push
stos
pop
sbb
sbb
dec
push
mov
xchg
pop
stos
inc
sub
dec
nop
ins
leave
dec
mov
cmp
fwait
xor
out
ins
cmp
inc
sbb
adc
and
out
and
pop
adc
pop
xor
mov
and
in
test
add
(bad)
or
inc
sub
lock
push
cmp
push
and
and
sbb
push
push
pop
scas
jns
sahf
push
cmp
fcom
inc
add
dec
inc
and
stos
cmp
mov
push
iret
sbb
mov
jnp
jns
jmp
cmp
(bad)
cmp
lods
or
mov
push
jns
inc
jmp
push
data16
xor
sub
and
xchg
in
test
mov
pop
pop
cmp
or
mov
add
mov
imul
adc
loopne
push
jle
push
sub
ins
xor
(bad)
fidiv
adc
add
push
fmulp
or
xchg
add
or
push
pop
push
mov
jmp
add
fdivr
loope
mov
mov
retf
adc
mov
retf
mov
push
(bad)
das
mov
dec
(bad)
add
(bad)
jbe
cmc
nop
inc
addr16
push
shl
test
movs
outs
or
arpl
sbb
pop
or
int
lods
ja
loop
inc
push
xchg
adc
lds
inc
addr16
xor
ret
call
add
jmp
push
mov
jns
push
movaps
aas
xchg
shr
sar
nop
or
and
fwait
outs
loope
(bad)
or
in
inc
jge
push
xchg
add
push
adc
sub
and
shl
imul
cdq
popf
nop
lods
sti
and
ja
pusha
mov
and
cs
xchg
add
inc
call
outs
push
cmp
clc
xchg
jae
mov
xor
sub
dec
fisub
mov
cmp
dec
test
gs
pop
push
rcl
(bad)
lods
cmp
fild
sbb
xor
dec
ja
fwait
sbb
shr
xchg
cld
out
xor
push
cld
push
push
add
(bad)
pop
movs
adc
int
pop
das
ret
cli
out
push
mov
dec
in
adc
add
inc
sub
test
(bad)
xor
or
test
add
add
jle
cmps
adc
pop
pop
std
adc
dec
out
cmps
add
jl
sbb
inc
in
mov
mov
inc
xor
test
cwde
sbb
and
adc
retf
inc
cmp
inc
and
cmc
retf
dec
add
add
mov
mov
jns
xchg
test
xor
scas
shl
and
add
add
movs
pushf
dec
mov
pushf
sbb
mov
cwde
aas
mov
and
dec
ret
in
sub
jo
push
mov
or
mov
mov
test
mov
and
stos
fadd
(bad)
push
and
(bad)
inc
das
add
xor
xor
scas
test
test
sbb
sub
adc
sbb
push
add
jno
bound
mov
int
adc
pop
sub
call
bnd
mov
or
mov
cwde
sahf
fild
xlat
bound
cmp
or
mov
push
stos
outs
or
fdiv
and
push
dec
retf
sub
mov
push
cmp
jne
pop
jmp
test
outs
retf
add
(bad)
clc
fld
js
mov
sbb
mov
xchg
xchg
or
iret
imul
add
xor
sub
push
test
pushf
repz
push
gs
or
movs
jne
call
in
ror
xor
nop
and
jne
mov
into
add
add
call
adc
leave
pushf
sbb
sbb
sti
push
adc
dec
popa
fimul
int
add
mov
add
jo
popa
cmp
sbb
sub
adc
adc
inc
ja
call
adc
leave
sub
pushf
imul
inc
jmp
(bad)
sub
or
and
call
pop
mov
push
sub
mov
mov
stc
inc
xchg
pop
loopne
sub
jno
jb
mov
sub
mov
adc
or
js
sub
loopne
fiadd
test
inc
push
jg
repnz
cmp
rcr
movs
call
add
lahf
add
jnp
xchg
cmp
sub
js
push
call
shl
cli
inc
aaa
and
or
add
sub
mov
sbb
xchg
inc
std
add
xor
fadd
xor
and
mov
pop
ins
sub
and
cmp
add
cmp
mov
or
rol
nop
xchg
xor
scas
mov
sbb
push
mov
xchg
xor
outs
ins
adc
movs
leave
and
pop
call
adc
push
push
clc
rcl
push
and
popf
add
loop
add
push
loopne
xchg
xchg
int3
call
lods
add
in
xor
cmp
out
out
ja
dec
adc
add
mov
xor
mul
cld
(bad)
dec
aas
cmp
xor
sbb
cmps
mov
pop
cmp
jmp
std
xor
cmp
test
xor
inc
dec
ins
lods
jmp
add
mov
xchg
push
lods
xor
mov
jle
jmp
push
add
xchg
xchg
add
rcl
xor
rcr
adc
cld
dec
lods
mov
repnz
in
sub
jnp
adc
enter
cdq
retf
add
mov
xchg
push
inc
cmp
xor
jae
and
xchg
out
cs
pop
inc
mov
and
mov
add
cmps
mov
and
inc
push
lds
push
into
cmps
xchg
or
or
fisub
sub
xor
stos
retf
and
rol
adc
cmp
scas
pop
cdq
adc
emms
or
pop
ss
and
lds
or
jbe
inc
inc
loopne
push
push
push
mov
mov
mov
push
adc
inc
and
dec
adc
adc
dec
add
xchg
mov
inc
sbb
cld
xchg
add
mov
int3
ror
dec
call
dec
sbb
hlt
inc
jle
fmul
add
cmp
add
jle
call
push
sbb
mov
adc
out
fcmove
sub
or
cmp
loop
fs
mov
inc
pop
arpl
pop
js
adc
sbb
sbb
nop
pop
test
add
or
pop
scas
or
add
test
enter
test
mov
bound
add
pop
push
adc
aas
inc
sub
(bad)
pop
add
pop
sub
dec
cmp
rcl
sub
shl
or
cmp
les
and
mov
fsub
jns
and
inc
daa
call
adc
xor
rcl
push
push
and
cli
inc
jge
cmp
cmp
cwde
push
push
cwde
adc
inc
xor
js
add
jl
lds
daa
add
jae
pop
mov
fcmovnb
pop
dec
pusha
das
imul
jmp
cmp
retf
cmp
push
test
xor
jg
mov
cmp
jl
dec
ret
outs
pop
imul
jns
inc
sub
sbb
adc
aas
cmp
push
mov
mov
add
jmp
push
pop
sbb
mov
iret
add
add
jo
and
push
inc
ret
lods
cmp
retf
lea
mov
fs
push
sahf
sbb
push
add
sub
lds
js
or
dec
mov
sbb
add
jnp
movs
cmp
cwde
and
fstp
or
sub
dec
rol
cs
arpl
xor
adc
(bad)
es
sub
sbb
inc
push
pop
adc
push
mov
cmp
sub
and
ins
push
and
xor
and
or
cmp
xor
adc
jb
les
sbb
add
mov
sub
mov
shr
sub
add
outs
aad
add
push
jge
fsubr
loopne
shl
scas
pop
inc
pop
sbb
dec
push
loopne
aas
scas
add
outs
dec
sub
push
lahf
pop
pop
jae
int3
lahf
push
mov
out
pop
pop
pop
clts
jns
cmp
add
dec
or
xchg
das
jb
fisub
cmp
dec
or
inc
push
adc
inc
xor
adc
push
push
pop
xchg
js
(bad)
popa
adc
pop
fimul
add
sbb
movs
dec
(bad)
and
sbb
xchg
adc
test
xchg
movs
jmp
pop
inc
call
in
dec
pop
(bad)
nop
dec
mov
pop
or
xchg
pop
jb
mov
mov
or
or
nop
inc
and
sub
adc
and
shr
adc
or
dec
mov
(bad)
in
mov
je
pusha
lock
(bad)
push
(bad)
or
or
adc
jnp
jno
inc
or
jg
bound
adc
stc
sti
out
or
push
aas
jmp
addr16
sbb
mov
fwait
(bad)
pop
inc
pop
cmp
aad
int
retf
mov
movs
push
xor
call
mov
push
mov
sahf
or
push
cmp
rcr
xchg
ret
add
pusha
aaa
push
push
push
and
out
xchg
xchg
push
inc
(bad)
or
adc
xor
adc
jmp
jle
jbe
fsub
mov
lea
push
jmp
pop
sub
and
pop
sub
adc
inc
mov
push
xchg
bound
lea
xor
adc
stc
mov
or
add
imul
cmc
inc
or
fcom
je
fisub
or
dec
adc
add
and
retf
retf
mov
call
nop
push
cmp
aaa
mov
sub
jne
cs
(bad)
test
mov
pop
xor
xchg
xchg
adc
dec
push
sbb
adc
adc
cli
xchg
inc
xor
push
stos
jbe
xor
mov
mov
dec
bt
pop
adc
mov
mov
adc
push
rcr
push
ret
or
sbb
rcr
adc
outs
les
xor
or
adc
xchg
adc
mov
sbb
mov
rcl
add
jnp
ja
test
or
xor
adc
sub
(bad)
or
mov
cmp
and
adc
xchg
mov
sbb
push
stc
sbb
cdq
jne
js
fcom
jmp
dec
add
rcr
(bad)
popa
pop
adc
or
add
cld
retf
push
ret
dec
enter
adc
fld
mov
movs
mov
shl
ins
and
xchg
(bad)
fwait
add
jbe
push
test
repz
aaa
fisttp
sub
pusha
dec
inc
das
sbb
jmp
or
cmc
add
test
xchg
(bad)
mov
jmp
cdq
test
sub
daa
pop
and
rcl
add
sub
add
pop
int
inc
into
dec
in
mov
pop
pushf
(bad)
sti
jg
add
test
int
xor
shl
cmp
add
adc
mov
add
push
add
ror
adc
mov
inc
adc
xor
push
jbe
sbb
push
xor
add
jae
push
inc
test
ins
loopne
or
or
inc
adc
lock
and
inc
sub
int
sbb
mov
add
rcl
inc
pushf
dec
and
ss
fbstp
imul
enter
push
lods
or
adc
cmps
and
pop
das
push
scas
inc
lods
pop
push
dec
mov
sub
push
mov
mov
nop
add
jl
call
ret
stc
jo
cmovle
js
mov
or
cmps
mov
pop
stos
imul
add
xor
and
push
mov
xor
lds
arpl
fucom
dec
mov
jbe
xchg
cwde
cmp
data16
test
dec
loop
add
lea
outs
adc
dec
sbb
call
(bad)
pusha
inc
jne
lods
sar
xlat
outs
cmp
xchg
xlat
fs
aam
and
sbb
std
in
inc
dec
add
clc
push
fs
test
or
scas
loope
adc
cmp
add
mov
sar
mov
mov
arpl
dec
add
inc
rcl
pop
and
cwde
add
add
fisub
add
inc
addr16
jmp
ficom
xor
sti
add
inc
loop
and
or
pop
push
daa
ret
pop
in
mov
dec
pop
ror
sub
jne
add
push
add
ret
rcl
sbb
push
in
add
inc
arpl
push
jmp
push
sbb
jecxz
mov
fisttp
and
inc
xor
js
loope
push
adc
lds
test
or
int
mov
add
dec
xor
dec
call
fld
xor
pop
ds
lahf
pop
mov
pop
ins
inc
js
in
ins
push
in
or
stc
mov
mov
in
xchg
ror
dec
pop
gs
jle
cmp
jae
dec
(bad)
outs
mov
or
sub
test
adc
pop
repz
dec
loopne
jmp
faddp
movs
xchg
es
mov
pop
jae
cmps
mov
add
rol
or
sub
(bad)
lods
mov
and
shl
mov
fld
and
sub
mov
pusha
or
dec
or
test
mov
push
cmpps
pop
clc
dec
cwde
xchg
ds
pop
add
inc
pusha
ins
cmp
loope
outs
and
jmp
ins
mov
or
jmp
aad
movs
aam
inc
sbb
cmp
or
arpl
push
popa
inc
xor
add
add
pop
gs
popa
xor
mov
fucomi
cmp
je
enter
loopne
ins
and
fcomp
jb
and
out
fadd
mov
neg
add
cmp
push
js
out
hlt
cmp
jmp
and
cmp
ins
shl
sub
mov
enter
mov
dec
sbb
mov
sbb
(bad)
mov
mov
cmps
in
push
and
jo
pushf
pusha
or
jle
pop
cmp
mov
inc
sub
pop
sar
clc
call
(bad)
mov
add
cwde
jne
pop
sub
xor
xor
pop
aam
sub
mov
mov
and
mov
xchg
and
stos
in
push
iret
push
xlat
pop
lods
and
aam
or
jmp
mov
mov
or
xchg
lock
xor
or
fs
xlat
out
push
test
idiv
and
dec
sub
jbe
mov
popf
mov
mov
fbstp
shl
in
push
add
loope
pop
mov
shl
lods
lock
mov
add
adc
xor
call
push
movs
cmp
test
or
fs
inc
adc
add
out
sbb
add
mov
fild
mov
sbb
mov
movs
stos
xlat
push
inc
sti
mov
hlt
adc
sub
mov
test
sub
jmp
das
adc
lods
xchg
push
sub
leave
and
pop
mov
adc
test
test
sbb
mov
mov
mov
adc
lahf
sar
inc
sub
dec
pop
test
push
cmps
sbb
inc
sub
and
pop
arpl
push
aaa
add
mov
inc
add
mov
xor
sbb
imul
lods
aad
or
add
fwait
test
sub
loop
stos
das
mulps
retf
aad
or
pop
inc
imul
sbb
mov
scas
enter
mov
add
inc
add
retf
shr
js
std
sbb
cdq
push
push
or
ins
sub
data16
sbb
mov
sub
out
call
cmp
mov
lock
mov
push
push
push
sbb
pop
enter
retf
cmps
fwait
lahf
ins
lea
mov
jle
adc
test
adc
adc
hlt
mov
jo
sbb
psrld
pop
mov
ss
mov
(bad)
xor
test
pop
cmp
push
int3
outs
add
dec
or
lods
adc
xchg
lods
mov
add
fs
xor
pop
lds
aaa
dec
and
or
xchg
daa
mov
iret
call
dec
jmp
cdq
rol
cwde
loop
adc
xor
jbe
add
sbb
shl
push
loopne
push
pop
call
or
or
add
(bad)
mov
loopne
ret
add
enter
sub
push
frstor
in
dec
inc
push
in
addr16
ins
test
cmp
add
cmp
xor
inc
adc
int3
ins
xor
inc
mov
push
mov
shl
sbb
pop
xor
aam
mov
mov
push
mov
outs
jnp
and
push
int
mov
push
xor
push
mov
and
or
neg
mov
push
movs
cmps
xor
lock
jmp
pop
sbb
push
or
sbb
pop
or
push
jb
gs
pop
sahf
pop
pop
or
or
xor
xor
mov
fiadd
pop
div
push
adc
or
cmovno
jg
xchg
mov
add
push
xlat
jo
and
jnp
out
mov
cmp
and
add
add
pop
test
xchg
sahf
adc
pop
iret
add
add
cmp
add
call
or
movzx
pusha
outs
push
add
mov
ja
mov
cli
nop
jne
les
push
ror
pop
in
pop
push
shr
add
dec
xchg
arpl
lahf
int
mov
lods
sbb
repnz
xchg
(bad)
ror
ins
test
push
mov
ret
or
test
test
or
adc
imul
daa
iret
daa
inc
loopne
xor
test
mov
dec
push
jnp
mov
pushf
push
jo
call
sbb
and
add
popa
sub
add
imul
sbb
or
push
fdiv
and
and
xchg
push
adc
std
pop
lahf
cwde
pop
sub
pop
inc
cli
cwde
cli
loopne
cli
retf
jne
popa
dec
inc
mov
and
sbb
(bad)
fmulp
cmp
jne
pop
fadd
fsubr
inc
inc
jecxz
add
mov
bound
push
enter
xchg
or
jmp
add
cmp
xchg
and
inc
shl
inc
xchg
add
mov
ja
mov
test
cdq
mov
adc
inc
push
sbb
inc
lgs
push
push
ret
lock
popf
lea
sub
dec
jnp
sbb
fst
in
jno
jp
sbb
add
or
mov
dec
add
dec
sub
ja
push
or
fmul
mov
out
sbb
les
mov
add
iret
add
dec
sbb
ret
xchg
push
adc
sub
and
in
mov
loopne
lds
add
jg
fimul
push
pop
call
out
mov
popa
rol
xchg
push
or
ret
sbb
dec
add
mov
lahf
add
jle
jmp
xchg
inc
aad
add
fld
jo
or
jl
push
sub
or
mov
or
pushf
in
push
pop
xchg
adc
or
cmp
mov
lock
jb
ss
or
ficomp
enter
mov
sbb
(bad)
dec
arpl
add
jg
dec
outs
pop
imul
ret
dec
and
sub
add
xchg
in
(bad)
and
test
push
ret
sbb
lock
aam
ret
dec
and
dec
jl
adc
cmp
push
pop
or
xchg
push
je
or
ss
push
pop
inc
inc
daa
add
inc
mov
ss
and
add
dec
push
pop
add
add
pop
add
add
es
in
xchg
mov
sbb
out
dec
loopne
jmp
add
or
adc
sbb
sbb
sub
scas
mov
dec
ret
or
movs
sbb
push
cmp
mov
fadd
fmul
sub
push
shl
add
jmp
lods
outs
adc
fdivr
sbb
or
rcl
stos
push
add
mov
(bad)
fcmovnbe
inc
ins
sbb
mov
div
sbb
sti
ja
fsubr
mov
xchg
xor
sbb
dec
mov
movs
out
inc
inc
jnp
jne
and
pop
lock
xor
je
or
int
les
or
mov
jns
cdq
xor
pop
add
lea
mov
mov
jb
add
pop
inc
push
sub
test
sbb
rcr
and
cmp
mov
or
xor
lahf
in
mov
add
pop
add
jne
imul
and
mov
mov
sub
add
add
sahf
add
repnz
dec
sub
test
add
mov
fs
(bad)
cmp
lock
and
inc
imul
add
sub
cmp
mov
add
gs
bound
ror
xor
mov
jmp
mov
jbe
cmp
xor
adc
add
add
sub
sbb
std
into
adc
pop
mov
fist
mov
inc
(bad)
sbb
sbb
adc
aam
jno
loope
and
nop
mov
dec
push
nop
push
mov
fs
icebp
into
aas
jo
je
and
test
iret
(bad)
mov
inc
jne
cmp
jne
test
data16
lods
stos
mov
es
lea
mov
and
mov
adc
bound
cwde
sub
adc
div
nop
retf
xchg
aas
mov
imul
inc
imul
adc
mov
lods
mov
xchg
add
sbb
jnp
and
xor
adc
adc
test
push
lock
xor
mov
stos
fwait
test
sub
gs
adc
xor
popa
and
ja
jne
or
xor
cmp
int
xchg
nop
and
loopne
add
mov
push
inc
bound
mov
lock
mov
pop
add
cwde
xchg
loopne
adc
inc
je
lahf
and
(bad)
mov
loope
mov
mov
cld
inc
ja
sar
loop
xor
iret
jne
je
push
imul
add
push
call
int
jmp
xor
push
imul
and
push
call
nop
xor
scas
xor
cmp
sti
jmp
cld
mov
pcmpgtd
dec
fiadd
test
mov
sub
jo
mov
test
or
movs
and
xchg
xor
sbb
xor
cmp
dec
xchg
and
add
xlat
in
popa
ret
xor
js
mov
cld
sub
sbb
gs
pop
js
loopne
inc
mov
outs
cmp
ret
iret
add
or
mov
scas
jmp
push
cmp
cmp
imul
or
ret
sub
or
ins
add
js
push
shl
cli
rcl
mov
stc
ss
xchg
call
pop
cs
shl
clc
add
stos
and
cs
or
sub
iret
cmp
pop
sbb
push
repz
and
loope
add
cmc
mov
mov
and
sti
push
sub
xchg
add
adc
sbb
call
out
test
inc
cmp
test
or
xor
sbb
in
sub
movs
cmp
aam
add
xchg
ret
sbb
mov
cmp
adc
mov
xor
cmp
jmp
lods
dec
mov
xor
and
lods
js
add
daa
xchg
(bad)
push
pmulhuw
lods
nop
dec
pop
push
sbb
pop
cmps
test
sub
mov
jnp
movs
lods
ins
sub
cmp
loopne
fwait
and
out
clc
jmp
dec
mov
repnz
mov
js
fimul
sbb
out
loopne
xor
add
ret
dec
es
and
stc
and
pop
call
cmp
adc
sbb
mov
fdiv
jmp
adc
adc
rol
xlat
mov
add
enter
and
es
js
push
sub
pop
pop
xchg
lods
xchg
cmps
jg
adc
repnz
push
dec
sub
sub
test
sub
or
inc
sbb
xor
jnp
add
add
add
jmp
fistp
outs
jg
inc
movs
adc
rol
xchg
jge
sub
mov
and
scas
mov
in
sti
loop
and
or
aaa
adc
retf
ja
xor
push
sbb
add
test
pop
call
mov
mov
mov
hlt
ins
in
cdq
in
add
mov
hlt
sub
adc
fnstenv
or
xchg
movs
dec
pop
ss
mov
adc
(bad)
test
out
aaa
enter
(bad)
mov
xchg
add
inc
in
jle
bound
add
shl
sahf
(bad)
dec
loopne
add
push
sub
aaa
nop
pop
dec
sub
sub
repnz
scas
push
bound
ja
or
arpl
scas
xlat
(bad)
aad
clc
movs
inc
xchg
ror
add
cdq
add
and
sub
mov
lea
movs
pushf
jo
fnsave
fs
je
jne
add
mov
loop
dec
xchg
test
jno
and
test
rcl
xor
test
and
test
jo
push
stos
add
mov
push
or
and
pop
dec
pop
sub
adc
cmp
xor
iret
push
sbb
(bad)
cdq
enter
or
daa
cs
jno
out
add
push
rol
mov
cmps
and
ins
into
mov
cmp
cwd
jbe
lea
sbb
popa
lea
push
push
cmp
das
sbb
mov
push
into
sub
push
or
ret
add
add
xchg
mov
add
(bad)
enter
and
push
ret
and
test
and
fucom
xor
sub
cmp
fstp
dec
lahf
and
xlat
fst
inc
push
retf
or
jl
add
and
push
jns
xor
mov
jg
jmp
xchg
cmp
adc
pop
imul
divps
inc
cmp
mov
jl
or
dec
sbb
inc
and
les
jns
test
mov
ins
xchg
inc
ret
dec
aaa
cdq
repz
ja
mov
ins
out
mov
jle
(bad)
fnstenv
inc
add
loop
inc
mov
dec
and
jl
mov
clc
and
cmp
mov
dec
jmp
mov
test
adc
enter
jne
push
ins
push
fadd
sbb
shr
adc
pinsrw
adc
add
mov
push
dec
rcr
push
mov
xor
add
cmp
gs
dec
add
cdq
das
repnz
stc
movs
fstp
or
sub
pop
jmp
sub
dec
add
or
mov
sub
nop
enter
xor
cmps
lds
push
icebp
and
retf
jb
sar
retf
pop
mov
xchg
(bad)
jmp
pushf
outs
push
ins
jmp
hlt
jne
push
lods
adc
mov
mov
inc
or
sub
dec
pop
xor
outs
cdq
cli
adc
xor
ficomp
mov
or
sahf
aas
push
mov
ss
stos
add
cmps
fnstenv
or
push
gs
pop
jecxz
adc
bnd
sbb
stos
into
movs
cmps
push
add
leave
stos
mov
push
or
(bad)
aad
add
and
jns
fs
test
test
arpl
or
or
std
stc
in
in
add
or
fs
xchg
in
or
add
push
add
and
into
cli
sbb
frstor
stc
mov
inc
popa
mov
mov
inc
sub
cmc
int3
add
shr
popf
adc
enter
cld
xor
jmp
jns
adc
rol
dec
jo
adc
das
and
mov
pop
mov
ja
dec
inc
sbb
test
xor
or
lea
cmp
outs
pusha
out
in
inc
sbb
loopne
cmc
xchg
add
sbb
in
adc
out
and
dec
sbb
or
in
xchg
repz
aam
push
jp
cld
adc
in
or
sub
mov
loopne
xor
idiv
lahf
mov
pop
sahf
pop
pop
push
mov
cmp
inc
out
pop
pop
or
adc
mov
sub
xor
cmp
inc
pop
and
dec
ss
add
ins
aas
lea
cmps
xchg
hlt
cmp
or
fwait
push
add
or
or
push
inc
or
or
add
rcl
add
cmp
cmp
add
popf
mov
rol
push
push
push
jmp
out
adc
sub
shl
xchg
out
xor
std
cmp
sbb
xchg
and
dec
jmp
das
adc
test
dec
jge
(bad)
jmp
ss
add
rcr
les
aam
mov
xchg
adc
adc
pop
xor
gs
shr
pop
ss
mov
(bad)
xor
add
adc
mov
and
xor
(bad)
jge
cmps
imul
adc
push
sub
adc
lods
pop
(bad)
adc
or
jle
xlat
sub
dec
shl
add
xchg
outs
pusha
push
aam
rcl
adc
in
sub
push
sbb
sub
jmp
fs
sahf
jl
push
or
cmp
push
sub
dec
mov
lahf
nop
pop
ss
ret
dec
mov
daa
add
xlat
xchg
hlt
retf
out
or
and
pop
cli
or
xchg
mov
add
lods
(bad)
jg
jnp
fwait
dec
xor
outs
popa
pop
add
sub
dec
loopne
lods
cmp
jns
push
push
jno
jae
mov
outs
pop
or
stc
add
(bad)
ins
or
add
movs
jno
inc
add
add
sbb
mov
outs
sub
inc
inc
push
mov
jo
jne
pusha
push
daa
add
dec
enter
cmp
nop
pushf
mov
rcr
inc
inc
fisub
rol
sbb
or
retf
rcr
add
lods
es
jae
xchg
or
mov
and
ins
jmp
push
je
lahf
cmp
adc
cs
inc
inc
inc
and
cmp
dec
mov
leave
pop
test
push
jb
aas
jb
adc
or
push
and
jge
inc
cmp
je
push
sbb
xor
outs
or
ins
pop
xchg
dec
test
mov
lds
or
(bad)
in
and
xor
mov
in
mov
mov
or
sbb
retf
or
cmp
xlat
lods
mov
call
mov
xor
pop
or
(bad)
pop
mov
or
in
sbb
push
cdq
adc
pop
mov
xor
push
xchg
shr
jmp
dec
inc
dec
lods
lods
push
jp
popa
sub
ins
into
stos
pop
dec
dec
sbb
imul
pop
outs
adc
and
in
mov
stos
pop
xchg
add
and
das
or
xchg
add
je
les
mov
rol
inc
test
or
pop
inc
(bad)
fcmovnbe
pop
jae
jge
mov
bound
je
push
mov
cmp
dec
stc
cmp
mov
xchg
and
test
xchg
jb
sub
into
adc
dec
inc
push
xor
outs
sar
push
xchg
(bad)
aaa
dec
push
pop
jne
push
ret
les
xchg
adc
mov
retf
js
repz
push
cld
fidivr
xor
adc
imul
pop
test
mov
syscall
test
dec
test
ret
xor
add
jg
adc
pop
and
adc
(bad)
add
mov
xor
pop
add
push
outs
xchg
ret
xchg
lods
inc
mov
pop
add
adc
sub
dec
adc
test
mov
fcomp
mov
out
loopne
push
nop
(bad)
adc
mov
dec
retf
inc
cmp
cmp
je
cmp
mov
mov
pop
mov
dec
rcr
and
sub
pop
shl
add
xchg
inc
fld
mov
ja
and
mov
loop
loop
push
adc
cmp
inc
(bad)
mov
idiv
inc
jl
adc
jne
xor
ja
sbb
enter
adc
cmps
push
pop
nop
add
mov
jns
and
rol
mov
retf
lds
adc
or
xchg
stos
and
sub
outs
pop
adc
jnp
sub
xor
dec
sbb
inc
sar
mov
ror
mov
icebp
jmp
jmp
test
test
ins
and
sub
in
fwait
imul
or
push
inc
pop
int3
ja
inc
sbb
sti
mov
dec
mov
imul
mov
pop
cmp
out
add
jle
cmp
mov
mov
(bad)
xchg
jle
dec
fcmovbe
add
adc
and
or
add
jo
pop
repnz
or
nop
mov
daa
jg
cmp
or
add
push
dec
mov
in
les
jns
shl
cmp
popf
push
jo
aam
cmps
or
jmp
mov
xchg
xchg
cli
cld
and
and
cmp
adc
adc
push
ret
ror
mov
mov
scas
push
(bad)
sbb
les
sub
(bad)
leave
enter
mov
call
inc
mov
or
cmp
sbb
mov
sbb
adc
inc
sub
pop
jb
cs
movs
xchg
dec
loop
adc
pop
push
sub
add
mov
lods
inc
sub
cmp
pusha
and
cmp
pop
mov
adc
loop
shl
fsubrp
iret
sbb
or
arpl
pop
push
call
xor
dec
dec
repnz
clc
or
mov
inc
cmp
and
mov
mov
push
in
xchg
(bad)
es
push
test
and
mov
jae
inc
in
adc
mov
cdq
dec
xchg
or
mov
sub
fmul
push
rol
push
jno
mov
cmp
mov
or
push
cwde
loop
mov
jae
loopne
adc
ficom
push
xchg
fbld
out
or
push
jns
jae
push
and
sub
out
dec
aas
test
rcr
mov
inc
xor
cli
in
push
imul
(bad)
ret
cmp
inc
pop
mov
or
shr
inc
(bad)
inc
sbb
leave
add
xor
ret
jb
add
xchg
dec
push
dec
mov
daa
test
inc
rol
xor
jmp
inc
or
pop
and
xchg
xchg
cli
dec
mov
add
jl
inc
cmp
cmp
inc
out
jmp
mov
sbb
bound
ror
ins
int
mov
(bad)
mov
mov
jbe
cmp
and
sahf
dec
jl
mov
enter
push
out
jmp
sub
out
shl
jno
or
inc
xchg
fwait
or
pop
cld
add
js
jne
add
cmp
jnp
stc
xchg
inc
or
or
int
push
adc
mov
xchg
add
enter
scas
(bad)
das
(bad)
aaa
and
cmp
add
jmp
add
cmp
fs
mov
push
in
push
sbb
in
hlt
cwde
push
jo
sbb
test
(bad)
into
in
in
adc
mov
push
xchg
aas
push
jns
pop
push
cs
push
mov
dec
jp
adc
(bad)
sub
inc
inc
fimul
sbb
add
inc
add
inc
adc
inc
jp
jae
inc
les
jg
pop
outs
push
movs
adc
test
push
or
cs
ja
rcl
aam
dec
mov
cmps
out
sbb
aad
rol
push
xchg
jne
scas
test
pop
xchg
test
je
xor
fcomp
pop
push
test
xor
mov
rcl
mov
xchg
xchg
nop
out
mov
or
and
iret
cmp
and
cmps
inc
jo
push
add
sub
outs
cwde
test
jb
ret
movs
pop
cmp
dec
inc
add
fcom
xchg
jno
(bad)
mov
mov
inc
or
cld
les
nop
add
or
fcomp
and
enter
gs
xchg
sub
lea
cmps
or
stos
push
dec
fldenv
pop
cmp
cwde
and
and
jmp
sub
and
push
fild
lods
aam
mov
inc
cmp
aam
mov
scas
xchg
jbe
adc
push
cmps
and
push
pop
pop
pop
jle
ret
adc
push
mov
fbstp
adc
dec
enter
imul
and
mov
inc
ds
push
inc
inc
shl
fnstcw
(bad)
inc
stos
or
pop
pop
pusha
adc
xor
mov
fidivr
sbb
pop
jo
or
xor
js
mov
sub
je
fisttp
jmp
pusha
mov
push
adc
lock
mov
xchg
fldenv
test
and
adc
pop
test
sub
or
lods
xchg
addr16
cmp
test
pop
(bad)
jmp
jl
je
add
or
cmps
test
or
mov
adc
xchg
push
push
mov
inc
icebp
je
mov
sub
pop
fidiv
data16
test
push
in
jmp
push
rcl
nop
movzx
cmp
inc
sub
sub
popa
loop
jns
inc
jno
dec
ds
retf
icebp
push
les
ins
jg
lods
adc
test
adc
and
pop
cmps
mov
or
or
arpl
(bad)
push
push
cmp
jle
xchg
std
enter
jge
and
retf
xchg
adc
mov
pop
add
sub
ret
and
mov
inc
daa
and
cmps
loopne
push
retf
clc
loopne
pop
inc
in
loopne
lods
sub
cmp
mov
stc
add
inc
xor
rol
movs
es
bound
dec
mov
mov
mov
mov
inc
jno
add
cmps
test
sbb
aaa
push
xchg
cmp
stos
mov
test
pop
push
lock
xor
sbb
mov
test
inc
adc
test
pusha
or
imul
xchg
sbb
(bad)
jge
or
cli
sahf
ins
adc
(bad)
inc
dec
ins
dec
int
loope
or
pop
ins
jl
xor
mov
sub
xchg
push
xor
and
lds
dec
and
popa
add
and
call
cmps
in
movaps
inc
dec
dec
je
add
or
xchg
push
mov
or
ss
cmc
jnp
add
outs
movd
xor
pop
addr16
mov
sahf
jl
psubb
sub
sbb
push
or
mov
mov
jns
dec
inc
fwait
jp
mov
shl
dec
daa
and
shr
and
add
pop
xchg
xor
fst
push
adc
pop
adc
loope
rcl
dec
fadd
or
sar
dec
and
jmp
cli
stos
push
adc
add
into
jl
jno
pop
adc
aaa
mov
xchg
mov
xor
imul
dec
mov
jg
or
add
add
movs
and
add
fnstenv
mov
push
and
hlt
push
push
push
in
adc
adc
mov
cmp
mov
push
and
push
cdq
inc
shl
lock
mov
jp
or
pop
adc
xchg
add
fst
sbb
cli
bnd
cmp
pop
xor
mov
mov
sbb
(bad)
neg
pop
sbb
pop
or
ds
iret
jne
mov
xor
xor
leave
xchg
add
mov
ret
imul
(bad)
mov
mov
iret
in
inc
cs
adc
movs
inc
and
mov
(bad)
push
or
stc
sbb
cld
or
jo
hlt
mov
loop
push
or
mov
add
fstp
adc
or
push
or
push
xchg
adc
xchg
(bad)
daa
or
and
add
jmp
mov
pop
fwait
push
stc
mov
adc
pushf
add
iret
jae
jne
xchg
mov
jns
and
pop
shl
shl
pop
movs
mov
stc
sbb
out
mov
aas
xchg
cmp
add
push
ja
sub
jl
sbb
pop
sahf
or
stc
adc
xchg
dec
or
jecxz
cmp
add
fsub
sbb
push
adc
push
daa
and
mov
mov
je
icebp
outs
push
sbb
add
call
sbb
and
add
mov
das
jns
push
and
cli
mov
pop
dec
enter
add
and
in
jb
inc
cdq
js
clc
aas
push
jbe
das
pop
dec
aam
fsubr
xor
cmp
mov
xor
fistp
outs
pop
push
mov
fcom
adc
add
mov
xor
xchg
jmp
xor
xor
jmp
push
push
add
stos
gs
xchg
rol
ins
jmp
das
push
xchg
mov
xchg
push
xor
(bad)
pop
inc
push
cmp
jge
jge
cmp
jge
xchg
mov
icebp
popf
pop
scas
out
popa
pusha
xor
stos
adc
sbb
jo
in
xor
movs
pop
outs
bound
outs
add
repnz
retf
or
in
cs
mov
loopne
in
lock
jns
cld
adc
inc
loop
hlt
int3
or
enter
sahf
or
out
mov
lods
adc
(bad)
(bad)
in
jmp
neg
cmc
cmp
imul
pop
popa
xor
or
rol
(bad)
mov
and
mov
mov
ins
inc
xchg
jne
or
sub
sbb
retf
add
xor
sub
mov
lock
mov
adc
rol
mov
popf
inc
mov
push
push
sub
mov
push
call
inc
mov
adc
mov
mov
dec
(bad)
and
mov
scas
cmp
sbb
dec
test
adc
stc
mov
daa
or
ror
push
add
or
js
jmp
push
sub
je
enter
inc
test
or
add
jmp
fadd
fmul
movs
and
inc
mov
shl
fiadd
xchg
or
scas
xchg
add
stos
clc
sbb
push
sub
jmp
icebp
je
pop
pop
cmps
pop
push
sub
adc
push
in
test
push
shl
xor
mov
inc
mov
pushf
sbb
mov
mov
cmp
push
push
push
add
lods
lahf
loopne
cmps
pop
jge
arpl
test
dec
mov
or
leave
push
inc
fistp
imul
add
mov
adc
or
mov
push
add
inc
sbb
pop
pop
add
add
xchg
jmp
sub
jnp
xor
pusha
fwait
adc
xor
mov
xor
xchg
cmp
mov
ret
mov
inc
push
or
mov
call
(bad)
enter
push
xchg
je
xchg
outs
cdq
nop
cmps
sbb
popa
in
lock
add
cmp
mov
adc
mov
xor
pop
addr16
(bad)
lods
xchg
fisttp
aad
gs
jne
pop
adc
mov
inc
sbb
inc
stos
pusha
dec
adc
dec
adc
imul
push
mov
add
test
arpl
mov
pop
aam
and
add
add
cmc
(bad)
lahf
lods
aad
shl
and
test
pop
stos
cmps
xor
xor
fsub
dec
mov
pop
popa
adc
jne
push
jae
imul
sub
mov
mov
xor
lods
mov
mov
sub
adc
test
adc
pop
imul
fcomp
ins
bound
nop
xchg
mov
inc
ud2
and
(bad)
mov
mov
mov
inc
and
mov
ret
rol
jmp
sbb
add
sub
shl
out
dec
or
xor
and
movs
jge
push
(bad)
add
or
mov
(bad)
cmp
into
movs
push
add
loopne
inc
fdiv
loope
mov
adc
stc
ror
test
nop
jne
mov
pop
adc
and
sbb
sti
lods
ror
call
dec
xor
push
aam
test
fld
rcl
call
or
test
cwde
sbb
ds
sbb
xor
inc
xchg
fadd
adc
lahf
mul
bound
cmp
xchg
lods
dec
and
or
shl
sbb
into
mov
fadd
or
lods
sbb
popa
icebp
inc
inc
sbb
imul
addr16
mov
(bad)
or
movs
mov
dec
and
adc
arpl
jp
fs
lock
push
or
xchg
inc
mov
aaa
adc
mov
mov
push
pushf
push
mov
xor
and
push
nop
mov
mov
jmp
mov
out
ins
xor
outs
push
mov
sbb
fisttp
and
scas
xor
sub
xchg
test
sub
add
(bad)
scas
lods
sbb
adc
lock
ja
and
nop
or
call
leave
xor
hlt
sbb
sahf
fs
pop
sbb
mov
(bad)
out
push
pop
and
aas
pusha
push
xor
add
dec
dec
mov
js
push
shr
add
enter
clc
sbb
adc
fwait
push
fs
add
mov
sbb
call
les
or
sub
adc
je
pop
mov
xchg
ins
test
movs
ret
test
lahf
cdq
cdq
adc
adc
sbb
sahf
in
mov
es
sbb
ins
sub
out
test
mov
fmul
lods
and
cmp
add
aam
clc
lea
push
arpl
sahf
dec
jno
inc
aas
stc
push
push
aad
cmp
jno
retf
sbb
sbb
inc
daa
push
fadd
aas
nop
jns
gs
cmps
pop
mov
sub
sub
nop
sbb
adc
jb
push
data16
ja
cmp
mov
fstp
sub
cmps
test
test
inc
popa
test
jl
mov
sbb
xor
dec
or
add
lock
adc
pop
pop
and
mov
cmps
lock
lods
fiadd
inc
cmp
xor
sbb
xchg
sbb
xor
loope
sub
mov
pop
pop
or
test
dec
ror
pop
test
dec
adc
ret
and
addr16
dec
xlat
dec
int3
adc
jmp
test
sbb
or
or
pop
sbb
push
test
stos
jo
and
adc
inc
push
or
mov
test
push
jne
pop
ftst
nop
xor
ins
fsubr
add
je
sbb
inc
push
jne
and
cmps
push
pop
dec
jmp
mov
adc
adc
and
mov
aam
fwait
add
jbe
cmp
scas
stos
test
jo
(bad)
or
ret
rol
rol
fs
jg
sti
mov
push
push
add
or
or
or
add
push
dec
icebp
rcl
movs
add
lods
jno
mov
cmp
mov
scas
inc
cmps
mov
cs
call
push
int3
add
cmp
es
rcl
jb
inc
popf
jnp
add
sbb
inc
scas
mov
out
repz
mov
sti
jecxz
or
pshufw
add
jae
sbb
fs
call
mov
push
dec
movs
inc
push
xor
and
inc
ret
mov
ds
sub
lods
inc
add
retf
lea
aaa
add
push
inc
jecxz
cli
add
add
push
push
push
hlt
rol
add
mov
push
jmp
test
movs
sti
popf
mov
ins
add
pop
test
rol
rcl
iret
adc
data16
imul
icebp
push
popf
cmpxchg
(bad)
adc
nop
jne
pop
xchg
jo
test
mov
jno
jns
adc
imul
fnsave
in
jo
and
cmp
xor
push
cmc
sbb
xchg
adc
inc
mov
mov
pop
and
dec
mov
xchg
pop
mov
test
cdq
ss
je
shl
or
fst
add
cmp
shl
call
hlt
ins
dec
sub
xor
and
ret
push
popa
adc
push
test
(bad)
jne
inc
dec
fwait
fwait
js
sub
dec
cwde
lock
daa
xchg
imul
movs
mov
inc
jb
and
cmpxchg
leave
mov
ror
aad
lods
(bad)
dec
push
pop
or
and
jecxz
cmp
je
movs
mov
adc
sbb
add
or
test
mov
and
sub
enter
lods
adc
jns
or
cmps
ins
xchg
or
xor
(bad)
cmp
xchg
jne
(bad)
cmp
add
daa
jnp
lea
jp
xor
or
repnz
adc
sbb
adc
sbb
pop
sar
pushf
adc
dec
ror
das
jmp
div
mov
ins
js
xor
sub
gs
fcmovu
pop
dec
mov
lea
adc
ins
or
call
jmp
dec
inc
adc
ror
jne
push
and
fldenv
or
add
mov
add
add
dec
bound
in
sub
hlt
dec
sub
stc
or
data16
std
adc
xor
mov
xchg
or
add
or
pop
outs
xor
retf
inc
inc
in
mov
fld
jne
lea
mov
das
aad
push
adc
cmp
xchg
xchg
add
push
sbb
inc
xor
imul
add
(bad)
adc
dec
jbe
inc
inc
push
test
add
jmp
shl
nop
aam
lahf
mov
dec
add
sahf
and
xor
or
sbb
mov
adc
adc
jne
sub
dec
or
pop
mov
and
mov
pushf
and
sub
jmp
adc
xor
add
pop
add
xor
sbb
dec
cmc
sti
fldcw
or
adc
jne
gs
test
mov
push
jle
fnstsw
mov
mov
pop
test
or
imul
dec
cs
push
push
add
sub
xor
scas
outs
lahf
xor
clc
cmp
ror
fcmovnu
ror
jmp
call
pop
or
(bad)
imul
cmp
popf
out
sbb
inc
jg
inc
shl
cmps
ret
adc
cmp
nop
adc
xchg
inc
mov
pusha
push
mov
xchg
adc
sbb
cs
pop
ins
ss
call
inc
or
push
push
mov
push
push
loope
fmul
push
sbb
iret
scas
jns
test
adc
lods
push
jle
add
not
push
push
cdq
adc
mov
inc
pop
ret
pop
xor
dec
cmp
mov
inc
dec
add
test
in
push
adc
inc
loopne
mov
pop
or
test
jmp
or
inc
push
jne
xor
push
stc
rcl
add
fld
outs
jnp
mov
nop
or
jb
mov
std
or
dec
mov
and
inc
in
(bad)
mov
enter
sbb
push
test
mov
adc
fimul
enter
adc
push
test
(bad)
xchg
push
dec
push
pop
stos
and
pop
cmp
andnps
sub
nop
adc
call
cmp
dec
pusha
add
and
sahf
fs
xor
sub
or
jle
test
movs
or
cmp
cld
xor
cwde
adc
inc
clc
inc
inc
cwde
add
cld
sti
adc
inc
movups
jo
jnp
sub
stos
dec
jp
and
dec
leave
add
inc
fadd
xchg
push
lea
cmp
inc
pop
xchg
ror
mov
sub
add
dec
push
aaa
xor
dec
retf
push
call
fwait
nop
mov
lods
scas
and
movs
test
sub
mov
lods
add
sub
je
fistp
add
mov
mov
xor
cmp
jge
push
int
fisubr
add
jne
idiv
jbe
add
and
out
movs
pushf
xchg
and
cli
ret
pop
mov
sub
cmc
lock
mov
cmp
and
push
icebp
sbb
ss
ret
rol
or
ins
dec
add
mov
add
mov
push
movs
lds
(bad)
ffreep
inc
pop
outs
push
pop
jp
jns
push
cmp
push
dec
jae
mov
xchg
adc
sub
nop
imul
sbb
dec
call
sub
add
gs
mov
(bad)
add
jne
and
mov
pusha
lock
and
adc
adc
sbb
inc
sub
mov
inc
or
out
add
xchg
call
nop
das
shl
xor
sbb
jg
pop
push
nop
idiv
pop
inc
xchg
inc
rcr
mov
jne
enter
cmp
mov
fs
inc
add
lock
push
js
sbb
mov
and
mov
fsubr
rcl
cmp
mov
or
sar
arpl
xor
mov
fcmovb
dec
loope
xchg
or
fild
xchg
ja
popa
pusha
shl
pop
popa
je
sbb
mov
leave
loopne
sub
stos
fwait
push
sbb
and
push
cmp
sub
loopne
jl
repnz
out
sub
add
cld
sar
push
call
shl
inc
jmp
pop
jo
sub
sti
sub
add
adc
dec
adc
cmp
fstp
test
add
sahf
popa
lock
test
adc
pusha
and
push
pushf
add
pop
sbb
and
adc
jb
xor
mov
dec
push
das
adc
lahf
push
call
mov
scas
mov
enter
cmp
cmps
adc
in
cld
push
sar
loope
inc
add
jge
and
daa
movs
lahf
push
adc
(bad)
push
add
push
jbe
mov
adc
pop
stos
ret
shr
repz
sub
pop
pop
and
retf
sbb
mov
shl
pop
outs
jl
or
fidiv
clc
lea
push
jo
xchg
lea
mov
in
xor
adc
retf
loope
mov
sub
mov
jae
mov
cmps
clc
sbb
mov
dec
mov
ins
jns
xor
mov
and
rcr
fcmovnb
lods
sar
ret
js
hlt
dec
cmp
call
aam
inc
dec
adc
bound
or
ds
fdiv
sbb
inc
sbb
dec
sub
es
out
icebp
xor
loopne
and
xchg
dec
inc
push
mov
cmp
mov
adc
enter
push
mov
pop
sbb
cld
or
pop
pop
popa
jno
hlt
sub
cmp
xchg
mov
mov
ds
push
or
and
cmc
jb
int3
sub
test
shr
adc
shl
inc
jmp
jbe
sub
in
sahf
call
sbb
push
mov
inc
add
lods
add
pop
push
nop
aaa
fwait
and
push
mov
lods
inc
cmovge
fcmovnu
cli
ret
dec
nop
push
mov
aam
in
shr
fidiv
sub
jp
or
push
shl
inc
jns
pop
inc
test
mov
add
inc
jb
pop
shl
in
enter
loopne
imul
imul
pop
push
movs
add
cmp
jae
pushf
mov
pop
imul
popa
rol
pop
or
mov
dec
jp
out
ret
jmp
and
dec
ss
jl
or
cmp
fcomp
loopne
shl
fsub
add
or
dec
push
les
sub
shl
(bad)
retf
fs
lock
movs
les
repnz
int3
dec
inc
loopne
xlat
retf
lahf
and
fistp
inc
sbb
sbb
add
es
mov
push
xlat
(bad)
enter
xlat
or
sub
pop
pop
out
adc
jecxz
mov
pop
sub
xchg
sbb
scas
dec
add
pop
adc
add
and
cmp
jecxz
pop
cmp
scas
inc
xor
jmp
adc
mov
add
sub
(bad)
lock
mov
cli
mov
imul
mov
sbb
inc
adc
cmps
sub
inc
ficom
pop
fbstp
adc
sub
stos
sbb
cmp
cmovs
dec
dec
inc
inc
add
adc
daa
popa
mov
stos
push
jnp
jnp
pushf
mov
cmps
cmp
cld
nop
pop
jl
xchg
sbb
es
push
pop
cmp
mov
rcr
push
ds
sub
adc
or
jmp
cmp
pop
or
cmp
xchg
mov
popf
add
pop
out
sub
adc
hlt
mov
cli
and
and
inc
add
std
or
fadd
xor
push
xor
lea
in
sbb
xchg
sub
lea
in
nop
jno
sbb
xchg
sub
xor
das
mov
mov
inc
xchg
xor
js
retf
gs
cmp
dec
inc
(bad)
in
xchg
dec
mov
add
pop
movs
into
mov
loopne
ret
lock
leave
stc
clc
test
adc
push
or
test
call
lods
inc
sti
test
xchg
psadbw
(bad)
bswap
inc
push
mov
inc
test
jnp
fisttp
adc
jl
mov
dec
xchg
xchg
inc
pushf
sbb
scas
push
ss
(bad)
fld
pop
out
add
retf
out
js
and
fsubr
or
out
je
fistp
or
mov
push
cmps
sar
inc
int3
mov
idiv
adc
pop
repz
div
fdivr
mov
mov
pop
test
xchg
sbb
push
movs
lock
int3
ins
push
pop
jns
out
mov
rol
test
mov
and
pop
lds
pop
xor
add
add
add
fld1
je
add
je
pop
add
mov
clc
fucomp
add
pop
cmps
inc
arpl
sbb
xor
push
leave
mov
test
xor
aad
sbb
ror
sbb
adc
and
and
ret
rcr
retf
mov
inc
mov
stos
add
rcl
and
push
sbb
sbb
xchg
mov
sub
inc
jmp
pop
and
bound
test
outs
inc
jmp
dec
repz
repz
jmp
add
mov
sbb
sahf
fwait
ret
add
in
and
je
repz
adc
push
xor
sbb
sbb
int3
sti
adc
mov
aam
inc
and
push
mov
adc
mov
test
popa
adc
aas
or
or
loop
data16
jmp
(bad)
add
dec
xchg
dec
push
jo
jmp
neg
add
pop
push
hlt
fs
mov
out
cs
pop
cmps
cmp
add
(bad)
adc
sub
(bad)
xor
pop
mov
ret
and
mov
push
call
(bad)
jo
fs
test
push
cmp
and
frstor
test
and
or
mov
add
and
mov
mov
gs
adc
outs
bswap
popf
mov
inc
enter
iret
mov
pop
int
push
mov
test
mov
or
xor
pusha
and
lds
loope
mov
lahf
add
cmps
arpl
mov
ja
and
and
push
cmp
dec
cmp
in
retf
and
mov
jae
pop
adc
pop
test
add
pop
and
fsubr
shr
mov
popf
nop
aam
cdq
pop
and
or
add
sbb
push
cmps
mov
sbb
movs
dec
pop
fadd
cmp
mov
or
push
xor
rol
mov
adc
push
sub
in
cmp
push
dec
inc
jne
xchg
mov
adc
movs
test
sbb
jl
aam
and
les
add
xchg
jg
adc
push
dec
daa
mov
lods
and
xchg
mov
cmps
aam
add
xor
stos
(bad)
mov
lock
inc
pop
add
xchg
mov
mov
hlt
and
popa
xchg
mov
addr16
or
out
hlt
pop
and
add
pop
push
cli
sbb
pop
cmp
cmp
inc
push
arpl
adc
add
inc
inc
sub
lds
mov
push
lock
add
jle
cmp
xor
or
ror
enter
xor
dec
iret
mov
pop
call
pop
add
inc
or
cdq
adc
fwait
mov
es
fsubr
add
pusha
ret
std
push
call
dec
loope
lock
dec
(bad)
dec
and
and
in
or
pop
push
add
add
push
addr16
sub
and
inc
and
pushf
cmp
cmp
cmp
pop
outs
fbld
pop
pop
mov
jle
jbe
imul
add
mov
dec
cmp
mov
sub
xchg
pop
xchg
mov
(bad)
cwde
imul
push
sub
mov
fadd
adc
nop
mov
fld
xchg
idiv
xchg
adc
mov
je
lea
rep
test
fwait
mov
or
inc
rol
cwde
xor
popa
mov
lods
test
rcr
add
adc
cmp
inc
push
sbb
and
push
or
add
push
in
call
mov
add
dec
or
xchg
les
in
inc
neg
jb
enter
adc
jae
mov
and
es
in
call
add
(bad)
xor
stos
dec
(bad)
movs
adc
mov
push
cmc
stc
mov
push
test
sub
and
push
sub
fdiv
enter
mov
sbb
dec
movs
or
jne
(bad)
stc
cmc
lock
add
cwde
add
push
inc
mov
ins
jnp
xchg
imul
(bad)
mov
dec
outs
dec
cmp
adc
test
add
add
test
sub
js
enter
adc
je
ficomp
shr
cmp
jo
mov
mov
ror
and
mov
inc
or
add
push
jb
jno
dec
mov
mov
and
int3
aam
data16
(bad)
dec
xchg
xchg
pushf
(bad)
sub
add
cmc
jmp
das
push
mov
and
loopne
mov
in
sbb
pusha
call
inc
mov
xchg
shl
pavgb
jae
loopne
lods
retf
iret
sub
loopne
and
lds
jae
inc
clc
xor
jne
ins
mov
sbb
aaa
or
xor
mov
fcom
shr
loope
pop
inc
das
adc
xchg
jnp
push
pop
psraw
sbb
fdivr
pop
push
pop
cmps
inc
psubb
sbb
or
cmp
aas
ins
lods
lods
or
adc
mov
pop
popa
add
xchg
mov
pusha
xchg
and
add
jp
and
int3
jg
push
or
ret
xor
mov
add
cmps
ins
adc
add
adc
adc
inc
xchg
hlt
cwde
mov
sub
not
sbb
fidiv
adc
or
pop
mov
mov
jne
or
in
add
pop
inc
push
xor
stos
xchg
movs
inc
ins
mov
lods
inc
mov
xchg
enter
mov
and
out
test
test
(bad)
and
adc
(bad)
jb
xchg
xchg
jg
repnz
xchg
mov
cdq
nop
out
inc
(bad)
ror
cwde
pop
(bad)
mov
add
outs
and
pusha
adc
mov
dec
inc
add
sbb
daa
mov
mov
bound
clc
sub
xor
inc
sar
sbb
or
xchg
inc
gs
js
add
(bad)
fimul
mov
jl
es
push
xor
push
adc
sub
push
mov
sub
shl
adc
mov
and
in
mov
or
imul
(bad)
movs
cmc
popf
outs
test
fsub
stos
les
or
xor
mov
stc
or
push
ss
pop
adc
mov
cmp
add
inc
xor
(bad)
cmp
js
in
rol
pop
adc
loopne
lea
cli
and
(bad)
inc
sub
lea
out
cmp
shl
xchg
stos
jmp
cmp
mov
and
inc
outs
cdq
sub
sbb
add
pop
mov
adc
inc
xor
imul
dec
mov
inc
sub
fadd
sbb
fcmovb
ror
add
mov
idiv
xor
pop
cmp
adc
int
push
add
pop
ror
cld
dec
mov
push
add
out
imul
push
ret
les
or
bound
push
and
std
test
mov
sbb
inc
push
jno
mov
xor
loopne
inc
mov
inc
fiadd
leave
jbe
xor
inc
push
sub
nop
retf
adc
cdq
les
or
push
adc
mov
cmps
imul
cmp
sbb
ror
or
and
test
dec
je
lea
add
mov
(bad)
pushf
xchg
cdq
add
and
dec
push
shl
in
add
mov
je
push
hlt
push
inc
adc
mov
loopne
stos
inc
cmp
add
arpl
test
pop
push
lock
xor
cli
div
sub
sub
inc
mov
push
inc
mov
and
fbstp
int
sub
sbb
nop
cs
sub
aas
xor
xchg
xchg
xchg
ds
mov
mov
daa
push
xchg
ins
push
add
add
movs
mov
pop
cmp
or
or
sbb
or
test
add
xor
adc
mov
add
es
dec
push
cld
or
shr
jne
and
ins
pop
fsub
xor
cdq
inc
imul
or
jno
(bad)
gs
mov
or
mov
jmp
jmp
xchg
cmovae
test
adc
push
dec
fwait
pop
inc
xchg
pop
jle
and
ins
jne
je
or
call
or
ins
xchg
jbe
xor
jne
in
xor
loope
mov
loope
maskmovq
xchg
aam
cs
and
lods
das
ret
test
push
jl
rol
mov
xor
outs
mov
fisubr
xchg
xchg
cmp
inc
in
dec
add
rcl
jmp
cmp
frstor
retf
aam
push
push
sbb
and
popa
gs
fwait
or
add
push
shl
mov
sub
mov
sub
add
or
int
inc
and
cdq
idiv
xchg
pop
xchg
dec
inc
inc
xor
addr16
push
mov
popa
adc
addr16
mov
or
push
sub
or
int3
ja
and
icebp
fstp
dec
xor
xchg
xor
mov
ss
sub
clc
loopne
mov
add
cmp
adc
adc
adc
icebp
dec
and
dec
sub
lods
inc
(bad)
mov
adc
dec
daa
cmp
pop
call
imul
shl
and
into
push
(bad)
cwde
imul
and
das
shr
push
and
xchg
pushf
pop
cmp
jne
icebp
mov
or
pusha
xchg
add
loopne
rcr
xchg
inc
push
and
mov
and
add
dec
and
test
push
mov
call
outs
push
jb
xor
js
adc
sbb
or
outs
sub
pop
mov
xchg
cmps
fild
popa
xchg
add
je
mov
imul
adc
inc
push
js
retf
mov
jno
pop
dec
dec
bound
sub
adc
sub
push
adc
sub
addr16
push
gs
inc
pushf
mov
inc
mov
pop
pop
ins
push
je
mov
and
(bad)
mov
cmp
sbb
pop
sub
jmp
and
mov
pusha
add
cmp
out
push
adc
pop
out
jmp
push
push
dec
stos
fucom
pop
sub
ins
fnstenv
and
pusha
sub
xchg
jb
sub
push
add
imul
fmul
xchg
sbb
ror
je
push
mov
call
inc
sub
call
mov
shr
xlat
dec
sbb
lods
pop
push
sub
pop
out
lods
ins
sbb
xor
ss
imul
push
leave
or
adc
mov
movs
leave
pusha
das
or
clc
mov
repz
cdq
sahf
and
push
xor
test
cwde
mov
pop
movs
imul
inc
mov
jns
inc
dec
add
aad
sub
jno
or
std
leave
sbb
shl
ror
enter
sbb
inc
jg
loopne
pop
adc
test
pop
xor
xlat
pop
or
sub
aad
sub
dec
lods
stos
sbb
js
xor
push
add
inc
or
push
shl
mov
pop
loop
fadd
scas
lods
inc
cmp
hlt
jp
test
fsub
push
shr
fcom
jmp
mov
mov
dec
imul
inc
mov
add
or
mov
cmp
prefetch
and
mov
sbb
xchg
jne
mov
push
retf
repnz
lods
test
imul
mov
lock
xor
mov
lods
pop
imul
test
sbb
mov
sbb
mov
push
loope
outs
pop
psubd
ds
ret
push
push
xchg
push
ss
icebp
mov
lea
push
inc
mov
test
inc
cdq
cld
int3
test
call
sbb
or
mov
xchg
lods
sbb
loopne
dec
stos
or
dec
adc
or
scas
(bad)
pop
popa
enter
add
inc
push
jecxz
dec
or
mov
jo
(bad)
adc
push
adc
push
ror
pop
fcom
cmp
cli
leave
ror
mov
dec
fstp
inc
or
pop
nop
push
repnz
iret
push
or
or
test
or
aam
adc
xor
push
jae
mov
adc
push
or
leave
push
nop
pop
cs
retf
nop
add
mov
in
imul
in
lods
inc
lods
or
in
jnp
sub
mov
push
pop
add
dec
aad
sbb
push
push
mov
sub
xchg
xor
or
adc
fcom
dec
push
dec
ret
shl
test
fmul
pop
inc
sbb
repz
ror
rol
icebp
inc
loope
xchg
add
(bad)
push
sub
retf
(bad)
jl
cmps
add
cmp
scas
adc
cmps
push
xchg
movs
xor
add
xor
add
idiv
or
mov
xchg
sbb
mov
leave
loope
sub
and
push
sbb
ror
mov
into
retf
rcl
xchg
ds
adc
js
push
and
imul
xchg
cmp
add
jle
adc
xor
xchg
jbe
sbb
fisttp
inc
or
mov
lea
fdiv
je
sbb
or
inc
push
mov
or
je
jg
add
push
xor
xchg
sbb
mov
dec
cli
test
mov
lea
adc
dec
(bad)
cmps
fild
push
xor
dec
es
movs
inc
popa
adc
inc
sub
xor
(bad)
leave
lock
iret
lds
je
sahf
add
jl
push
inc
setns
in
pop
xor
cmp
or
add
xor
add
lods
enter
add
push
xor
mov
push
cmps
mov
or
inc
adc
mov
adc
fadd
adc
dec
sbb
dec
add
loope
sar
dec
aaa
add
cs
sbb
popf
lock
inc
xor
cmp
pop
pusha
push
retf
or
clc
test
sub
mov
and
mov
movs
sbb
adc
scas
push
inc
es
ror
or
mov
jle
sub
inc
popa
mov
jmp
imul
aaa
aam
and
sub
(bad)
outs
and
cli
dec
sbb
xor
cmc
inc
jne
adc
and
loope
add
ret
xchg
pusha
daa
outs
push
xlat
jle
(bad)
sub
fild
push
sbb
inc
jns
(bad)
(bad)
and
out
mov
sbb
jle
push
je
dec
pop
sub
adc
adc
ret
jle
mov
mov
xchg
sbb
addr16
imul
xchg
jl
ror
push
shl
mov
jbe
ins
push
test
pushf
push
inc
jle
or
aaa
and
mov
mov
jnp
fisttp
sub
je
ss
pop
add
xor
add
rol
push
cmp
std
rcr
lock
mov
xor
mov
xor
sbb
mov
mov
or
movs
mov
fild
mov
out
or
mov
push
in
pop
push
dec
add
add
scas
dec
mov
inc
or
dec
push
in
inc
sbb
mov
dec
dec
or
add
adc
ds
dec
push
movs
add
mov
sbb
or
mov
mov
or
call
push
push
sbb
loopne
dec
jnp
movs
adc
ror
adc
jmp
xchg
mov
int3
ret
(bad)
mov
adc
dec
inc
inc
and
retf
inc
test
add
dec
not
movs
push
cdq
rcl
(bad)
cwde
test
sti
adc
leave
adc
inc
cdq
imul
clc
lock
jecxz
jg
ret
push
sbb
xchg
xor
loopne
fist
pop
sub
xor
icebp
sub
jmp
or
jns
rcl
pop
psadbw
inc
dec
ss
cmp
xor
lea
das
xor
xor
(bad)
dec
ret
push
or
push
jno
mov
mov
xchg
and
mov
fistp
push
ins
call
ss
or
mov
or
or
inc
mov
mov
cdq
adc
add
inc
inc
(bad)
or
je
and
mov
fs
mov
ins
inc
imul
mov
shr
and
push
sbb
dec
pushf
nop
or
std
xchg
sub
mov
leave
rol
xchg
inc
xor
xchg
test
xchg
cwde
sub
or
xchg
mov
jae
jb
jb
mov
rol
xchg
jae
and
leave
xchg
xchg
cwde
pop
enter
cwde
cwde
enter
cwde
cwde
movs
jb
push
cwde
cwde
dec
xchg
daa
nop
add
add
jle
mov
jmp
mov
ja
mov
push
push
inc
adc
test
fadd
in
je
cmp
inc
adc
push
cs
shr
and
xor
cwde
mov
fstp
sbb
and
push
xchg
dec
mov
push
adc
sti
cwde
jle
leave
mov
add
sbb
dec
and
sub
push
je
popf
inc
outs
fmul
or
jecxz
leave
rol
cwde
cdq
or
sub
sub
xchg
add
add
retf
sbb
and
mov
sti
ss
lods
xchg
inc
inc
or
inc
adc
push
movs
test
inc
ret
xor
push
dec
aas
jb
xor
ret
nop
push
xchg
paddb
mov
xchg
cmps
popa
sbb
add
inc
jp
add
or
cmp
dec
xchg
inc
or
or
sub
inc
and
in
daa
or
mov
sar
and
mov
jecxz
push
push
inc
aam
stos
rcl
sbb
sub
mov
sahf
inc
push
inc
adc
pop
test
add
push
sub
inc
jmp
inc
retf
mov
or
int3
call
inc
sti
or
xchg
sbb
jl
add
sub
mov
(bad)
imul
push
add
js
mov
cmc
test
mov
ins
xchg
and
pop
idiv
or
shr
ja
pop
cdq
(bad)
in
aaa
inc
fld
dec
shl
and
cmp
or
xchg
push
cmp
add
mov
mov
mov
or
add
add
push
add
cli
jne
jecxz
inc
sbb
xchg
or
sahf
dec
(bad)
sbb
outs
mov
or
pop
cmp
mov
or
push
ds
sub
or
or
fdiv
out
mov
inc
shl
mov
adc
rcr
(bad)
fwait
mov
adc
and
jbe
jae
dec
jmp
adc
dec
jmp
dec
idiv
jg
xlat
or
es
scas
into
add
std
aaa
jne
movs
push
in
sbb
ret
adc
mov
xor
add
adc
mov
fcmovbe
leave
fcomp
sub
push
add
adc
or
retf
ja
call
xor
sar
or
sub
or
jmp
sar
adc
jmp
push
push
(bad)
sbb
jle
adc
repz
and
sub
shl
into
out
adc
push
cwde
jmp
jle
ins
fistp
mov
fdiv
cmp
push
test
mov
mov
xor
fisttp
scas
jno
cmp
or
jmp
(bad)
push
or
xor
cmp
push
sub
add
ret
or
add
jp
test
test
pop
in
xchg
push
ins
add
ret
retf
and
add
rcr
movs
sbb
sub
test
push
sbb
jge
dec
int
nop
call
fmul
clc
xchg
cmp
push
scas
in
sbb
mov
int3
inc
ja
push
retf
lock
sbb
or
xor
das
sbb
nop
minps
or
inc
xchg
mov
aas
push
cli
and
sahf
nop
jbe
adc
pop
adc
inc
mov
sbb
mov
sbb
add
or
add
out
add
nop
mov
sub
inc
or
or
(bad)
sar
push
push
iret
popf
pusha
pop
mov
add
pop
inc
retf
cvtdq2ps
bound
mov
xor
jnp
idiv
fdivr
push
xor
push
sti
fild
fdivp
fxch
and
xor
jbe
loope
ret
or
stos
and
aad
aaa
fxch
(bad)
outs
and
mov
push
cmc
es
fidivr
sbb
cmp
ret
adc
mov
frstor
fwait
nop
adc
jb
fisttp
sbb
mov
sbb
jp
sbb
push
push
mov
fsubp
fld
fdivp
fst
cwde
loopne
mov
mov
hlt
ss
jmp
inc
xchg
xor
adc
lock
pop
fsubrp
xor
shl
pushf
(bad)
lock
ficom
imul
dec
outs
aam
mov
jo
fstp
fld
shl
aaa
fst
sub
stos
add
xchg
inc
add
adc
into
jge
and
mov
das
mov
je
into
add
inc
daa
cmp
outs
or
jne
imul
mov
dec
lods
push
mov
shr
sub
mov
or
mov
ins
cmc
inc
loopne
xchg
in
sub
xor
aam
aam
in
scas
lods
in
(bad)
mov
or
icebp
push
ret
add
lahf
and
mov
cmp
and
xor
sbb
js
fadd
nop
int3
pop
add
out
push
fdiv
push
or
js
sbb
data16
fcomp
push
pop
out
inc
sti
cmp
cmp
ror
dec
jmp
push
(bad)
cmps
jo
xchg
adc
or
mul
add
sbb
push
jo
jne
mov
fidivr
ficom
adc
clc
test
mov
mov
data16
shr
shr
add
xor
jl
cmp
push
cmp
xor
sub
fmul
cmps
sub
inc
dec
fcom
retf
mov
fmul
push
or
or
mov
enter
mov
and
xchg
cmp
add
and
dec
add
sbb
lods
and
bound
lea
arpl
(bad)
ins
cmp
je
mov
pop
call
in
mov
imul
sbb
pop
in
and
push
inc
lods
jp
mov
movs
movs
cmp
outs
xchg
xchg
dec
xchg
mov
mov
out
xchg
cmps
rcl
sub
xor
ret
add
sub
mov
cs
shr
push
aam
push
fwait
add
movs
jmp
arpl
xchg
lods
sbb
loope
cmp
mov
push
inc
lock
movs
(bad)
clc
retf
jbe
or
lock
shl
icebp
not
or
in
lock
ret
adc
sar
repz
inc
les
push
test
imul
jbe
repnz
rcl
movs
and
leave
dec
mov
add
inc
xchg
ins
loopne
inc
jle
sub
fistp
dec
xchg
sub
or
shl
xor
push
dec
out
sbb
dec
int3
inc
sub
push
add
test
sub
jbe
pop
xchg
push
mov
icebp
loope
ret
push
mov
push
add
lds
sub
test
jmp
je
leave
ins
or
dec
mov
jne
fwait
mov
mov
mov
dec
mov
and
iret
or
pop
data16
arpl
pusha
xor
cmps
mov
adc
sub
hlt
dec
sub
out
xor
sub
push
push
add
push
xor
and
pop
aad
mov
ss
jmp
or
and
stc
xchg
sbb
adc
or
push
stc
fidivr
push
add
push
or
inc
fcom
xchg
sub
ret
dec
call
or
fisubr
sbb
lahf
dec
sub
cmps
sbb
push
push
add
inc
pop
cmps
(bad)
ss
and
sar
sub
dec
pop
call
(bad)
adc
xor
cmp
pop
adc
test
and
enter
pop
dec
dec
test
nop
and
das
movs
outs
stos
or
add
push
or
adc
xchg
inc
out
call
ins
and
mov
jns
and
pminsw
adc
mov
adc
test
xor
lods
jmp
xchg
pop
inc
rol
push
neg
jle
in
add
sbb
adc
sub
inc
or
add
xor
ret
inc
or
imul
inc
not
es
add
mov
jae
mov
aas
mov
leave
and
stos
sbb
hlt
cli
(bad)
mov
or
push
xor
sar
nop
(bad)
pop
sub
jle
sbb
xor
leave
repz
lock
scas
aad
ror
mov
xor
add
mov
jbe
stos
add
pop
mov
rcr
shl
and
fs
or
lea
retf
imul
inc
mov
ds
mov
cmp
imul
adc
js
adc
add
adc
push
pop
arpl
(bad)
push
arpl
push
ins
push
test
fnstenv
inc
push
mov
mov
mov
leave
mov
cli
ror
inc
and
lahf
(bad)
sub
fldcw
xchg
out
fcom
xlat
dec
test
mov
add
mov
jmp
xor
sub
and
pop
fdiv
pop
add
into
and
pop
mov
in
in
pusha
in
dec
adc
and
sahf
in
rcl
dec
mov
xchg
push
add
sub
aam
and
shl
sar
cmp
test
inc
and
and
mov
mov
inc
or
lock
imul
mov
ror
jo
adc
jl
ss
or
je
or
add
bound
ret
jnp
push
xchg
fiadd
fisttp
xor
xor
mov
jo
jge
push
xchg
sbb
cmp
jl
xchg
dec
js
xor
mov
xchg
xor
movs
test
mov
mov
pop
and
imul
stos
fidivr
stc
jmp
cwde
inc
pop
push
ins
js
adc
jae
int3
sar
shl
neg
lea
add
fs
jl
sub
push
adc
movs
mov
mov
or
mov
mov
jmp
push
movs
bound
jle
(bad)
pop
bound
lea
mov
mov
mov
jae
sub
sub
xor
push
dec
int3
jle
mov
imul
mov
push
jle
mov
jmp
adc
cmp
int3
imul
push
call
inc
adc
add
mov
les
fmul
sbb
add
pop
mov
rol
mov
cmp
inc
rol
jae
mov
mov
inc
ja
in
mov
pusha
xchg
inc
cmp
dec
rcr
push
test
pop
pop
or
fld
add
loop
pop
jbe
jb
sahf
xor
inc
sbb
jne
cdq
mov
jns
das
mov
jle
xor
inc
test
call
in
scas
or
sub
push
sbb
jg
movs
fnstcw
das
lock
enter
jecxz
push
sbb
sub
or
cmp
adc
add
mov
rol
sbb
mov
inc
add
popa
push
std
xor
adc
push
add
xchg
push
jp
inc
jne
push
mov
inc
fldz
push
dec
test
lods
add
jnp
je
in
adc
stc
sub
add
or
and
cmps
movs
rcr
lods
add
cmp
ins
in
loopne
cmp
jno
add
mov
out
xor
adc
sbb
fadd
mov
mov
bound
sar
jnp
sub
and
jb
call
xor
jns
mov
sbb
loopne
hlt
xchg
sub
jne
sbb
pusha
test
cs
test
aam
jo
scas
dec
adc
sub
ret
mov
adc
adc
push
movs
je
mov
add
push
xchg
adc
mov
xor
or
and
lock
in
or
inc
or
xor
aad
inc
xchg
fidiv
pop
je
xchg
jns
(bad)
stos
repnz
dec
movs
pop
xchg
out
adc
aam
es
in
sub
pop
test
loop
jg
cmp
add
test
adc
data16
ret
js
int
and
enter
push
loopne
ds
shl
inc
push
add
imul
add
fsubr
jle
push
dec
loopne
fcom
mov
xchg
out
and
add
sar
sar
(bad)
jge
adc
adc
leave
add
test
test
adc
loope
pcmpeqb
xor
sub
xchg
jmp
push
cld
add
cwde
cli
adc
jno
mov
and
dec
push
cwde
out
inc
push
push
jbe
mov
hlt
aad
pop
xchg
ret
push
pop
mov
repz
mov
adc
test
sbb
psrlq
mov
bound
test
mov
inc
add
adc
and
dec
inc
sar
sbb
pop
add
or
dec
sbb
pop
or
sbb
mov
cs
adc
jnp
cmp
inc
ror
jae
mov
inc
in
mov
popa
cmp
nop
mov
aas
bswap
rol
xor
pushf
xor
cdq
add
xchg
sbb
add
ror
in
dec
cmp
cmps
mov
push
movs
add
add
and
es
sub
dec
les
mov
xor
nop
cmp
dec
loopne
push
rcl
int
dec
add
ror
dec
dec
adc
jne
mov
iret
rol
dec
adc
(bad)
lods
xlat
call
shl
fdiv
xchg
xchg
fwait
and
(bad)
popa
adc
test
adc
add
loope
ret
or
adc
mov
jae
mov
and
and
loop
pop
sub
adc
pushf
je
out
add
loop
fld
xor
rcl
xchg
nop
dec
adc
nop
fstp
addr16
jne
leave
pop
push
cmp
jb
movs
adc
pop
sbb
push
retf
jo
lds
xchg
aas
(bad)
jmp
pop
lods
mov
or
scas
dec
scas
dec
ins
out
and
enter
out
shl
jo
pop
out
fdiv
fidiv
add
loop
mov
push
xchg
push
mov
xor
add
lods
pop
ds
je
movs
add
mov
and
mov
lods
addr16
sbb
int3
int3
or
push
into
into
add
or
adc
add
test
test
movs
mov
jge
dec
xchg
js
add
push
sbb
jb
mov
shl
das
mov
retf
pop
pop
cs
pop
fdiv
mov
sbb
or
or
adc
mov
fs
dec
xchg
sub
or
or
xchg
cld
adc
rcr
rol
lea
ret
and
pop
clc
test
push
push
or
jne
dec
push
ds
loope
push
mov
mov
mov
push
push
pushf
sti
lock
jle
or
mov
jnp
outs
sbb
loopne
push
or
xchg
or
jmp
xor
push
push
movs
add
and
push
dec
pop
push
inc
add
clc
adc
jmp
sbb
add
call
add
or
or
mov
mov
inc
aam
push
or
cdq
cdq
and
jge
and
push
jne
or
push
dec
lods
cmps
jp
xor
add
adc
ja
or
shl
(bad)
test
sub
test
adc
add
dec
add
retf
(bad)
add
mov
aam
repz
fimul
fild
mov
fcmovnu
dec
add
cld
fsubr
sti
imul
add
push
push
inc
push
dec
into
push
add
daa
inc
sub
ret
inc
call
push
ds
mov
cmp
inc
stc
nop
ficom
dec
sar
mov
or
test
xor
rcl
cmc
and
jbe
test
pop
or
dec
adc
xchg
jae
pop
jl
inc
adc
or
arpl
adc
xor
mov
inc
xchg
add
ret
push
push
stos
xchg
bound
jnp
and
push
xchg
retf
and
mov
inc
jo
xor
mov
shr
add
fdivr
not
push
add
test
enter
adc
jecxz
inc
enter
pop
dec
mov
retf
sub
ins
fmul
ficomp
adc
mov
cmp
pop
and
ds
movs
rcl
ss
aam
jmp
dec
clc
lods
fs
cmps
ret
or
inc
test
push
jae
into
jbe
stos
xor
and
es
test
sahf
enter
daa
mov
fdiv
mov
iret
or
xlat
adc
xor
bound
jl
fmul
pusha
sub
fiadd
push
fwait
movs
adc
xchg
xor
xor
mov
push
mov
inc
add
test
sbb
and
push
dec
dec
js
push
or
sub
sub
push
sub
pop
mov
sub
mov
push
adc
sub
mov
add
sbb
gs
mov
loopne
sti
mov
or
in
jmp
lea
leave
cmp
stc
push
fld
sbb
and
jge
push
push
mov
push
test
and
jb
nop
sub
mov
daa
fadd
mov
ror
sbb
adc
sub
push
add
add
add
ficom
dec
pop
lsl
icebp
push
rcl
or
add
push
mov
ja
call
call
pop
push
and
adc
mov
or
inc
mov
mov
inc
mov
mov
add
imul
ror
sbb
adc
adc
fiadd
jne
imul
pop
cli
jno
sbb
int3
pop
xchg
xor
loopne
xor
aam
daa
leavew
add
inc
pop
inc
(bad)
mov
fldenv
add
sbb
xor
mov
rol
movs
mov
mov
data16
or
or
or
enter
test
add
xlat
sub
mov
ins
mov
adc
add
test
add
pop
add
pop
push
in
push
push
mov
sub
shr
bnd
cmp
inc
jge
sub
dec
add
fbstp
and
mov
xchg
sbb
mov
push
sub
sbb
cli
inc
lock
inc
gs
mov
scas
jo
xor
inc
sub
sbb
ret
ins
(bad)
mov
mov
frstor
lahf
(bad)
xlat
int3
jmp
imul
cdq
bound
out
pushf
adc
call
push
sub
jne
mov
sub
or
sub
dec
repz
sbb
adc
push
sub
and
mov
jbe
(bad)
imul
outs
dec
mov
mov
(bad)
ins
nop
retf
mov
xchg
xchg
fcomp
add
arpl
out
xor
inc
mov
retf
xchg
fdivr
pop
mov
shr
push
xchg
mov
and
pop
jp
cld
cs
jp
add
or
ds
sbb
mov
rcr
ins
mov
scas
ins
hlt
push
int3
and
add
loope
inc
nop
hlt
es
int3
sahf
adc
aam
mov
test
inc
(bad)
fnstenv
dec
sub
ret
(bad)
lods
sbb
fld
sbb
scas
js
fsub
pusha
fsub
cmp
ss
add
pusha
mov
lods
pop
fxch
push
push
out
mov
stos
pop
test
les
adc
cmp
out
push
iret
popf
sub
movups
xchg
test
sti
xor
test
and
bnd
xchg
fadd
enter
loopne
scas
pop
or
pop
or
ficom
call
fld1
fsubp
aas
das
adc
or
sub
pop
xchg
and
cs
int3
mov
mov
mov
mov
dec
and
jbe
daa
loop
retf
les
pop
fdivr
jg
dec
push
loop
inc
je
mov
dec
jne
jmp
inc
retf
lea
push
adc
aas
std
or
retf
inc
mov
rep
mov
inc
add
push
cmp
xor
push
inc
add
mov
and
dec
test
rcl
jnp
fisubr
inc
cs
or
jge
test
mov
fstp
xor
jo
lock
lock
dec
push
and
mov
push
(bad)
mov
fcomp
or
mov
xchg
inc
je
ins
or
stos
enter
enter
jl
mov
or
and
dec
sbb
pop
add
and
mov
rcr
bound
adc
mov
shl
(bad)
mov
lock
dec
pushf
loop
pop
adc
push
jo
jbe
adc
mov
sub
push
pop
adc
xor
mov
leave
cld
or
je
int3
in
xor
mov
xchg
mov
pop
mov
sub
pop
movs
(bad)
jmp
adc
pop
adc
adc
enter
fs
aam
xchg
ins
sbb
sub
and
adc
sbb
dec
sbb
imul
add
out
inc
fwait
dec
rcl
lock
scas
cs
sub
mov
call
xchg
nop
stos
leave
dec
or
lods
cli
je
in
push
inc
test
or
sbb
push
mov
push
shl
cmp
xchg
xchg
adc
adc
std
sbb
shl
and
sbb
add
or
or
sbb
or
and
ficom
xchg
mov
and
ret
mov
or
sbb
xor
and
aad
sub
popf
ret
push
fld
push
jo
sub
cmp
add
sbb
das
sub
xchg
add
addr16
sub
dec
mov
add
and
(bad)
xchg
mov
add
jns
je
cmp
mov
lods
pop
sub
inc
mov
dec
adc
add
inc
jmp
aam
jne
in
jge
call
ror
cmps
cmp
and
mov
jb
mov
or
sub
adc
retf
popa
pop
rol
jmp
jecxz
daa
adc
loopne
add
dec
xor
mov
push
inc
push
xor
cmp
ret
push
rcl
push
lea
jl
mov
add
retf
jl
adc
push
enter
int3
or
lock
and
add
les
sar
pop
or
sub
sahf
adc
or
sub
sbb
and
rcl
xlat
pop
jg
cmp
mov
xchg
rol
inc
inc
and
dec
mov
or
inc
rol
add
(bad)
push
leave
or
int3
inc
add
jmp
pop
daa
xor
add
push
mov
icebp
jmp
jbe
push
addr16
cdq
mov
mov
addr16
sbb
es
and
xchg
rcr
rcr
jge
cmp
add
out
stos
add
std
das
dec
xchg
not
add
add
pusha
add
sahf
xchg
in
xchg
dec
xchg
dec
sub
imul
or
adc
out
sbb
call
test
mov
sbb
cmp
mov
pop
cmp
or
push
or
pop
rol
or
pop
jnp
or
pop
div
cmp
push
movs
popa
sbb
mov
sub
sbb
and
add
push
cwde
and
(bad)
or
pop
mov
aad
rcl
mov
ret
jmp
or
das
cmp
and
add
add
hlt
mov
pop
fadd
fcom
mov
cmp
xor
jl
jne
xor
pop
xchg
mov
jge
inc
jmp
mov
add
(bad)
clc
adc
xor
clc
test
test
cmp
jg
dec
add
enter
packssdw
rcl
sub
jbe
popa
shr
mov
cmps
jbe
inc
sbb
jge
(bad)
mov
mov
fstp
or
gs
jne
add
jmp
push
outs
jnp
stos
loopne
int
cmc
mov
lods
add
lds
mov
mov
adc
push
dec
pop
and
aaa
and
add
dec
and
or
test
(bad)
aaa
push
or
or
cmp
aas
and
pop
jns
or
jmp
or
scas
test
sub
mov
cmp
and
or
out
and
or
icebp
test
pusha
lahf
movs
repnz
out
aam
and
js
bnd
mov
pop
pusha
out
inc
nop
jl
dec
sub
add
sahf
rol
adc
dec
xor
inc
mov
xor
mov
pop
movs
cmp
cmp
test
in
retf
inc
add
add
mov
or
xchg
add
push
shl
sar
and
pop
fst
push
gs
std
adc
mov
loope
inc
loope
or
sbb
mov
push
les
add
lods
cmp
dec
(bad)
fnsave
lock
sahf
mov
cmps
les
sub
rcl
aas
push
je
jbe
pop
or
inc
stos
add
into
xchg
pop
or
mov
push
adc
push
mov
sub
and
push
pop
cmp
sub
xchg
adc
xchg
xor
inc
(bad)
es
xor
test
and
stos
stos
cmps
ret
adc
test
ins
enter
add
and
and
sbb
mov
xor
dec
inc
push
mov
pop
popf
jge
dec
in
push
inc
js
outs
repz
push
jge
or
outs
(bad)
adc
add
ins
pusha
adc
pop
ins
daa
sbb
int3
add
pushf
fsub
cmp
xchg
test
mov
test
daa
std
out
jge
test
lods
in
push
sub
push
sbb
mov
sub
push
push
ret
pop
mov
push
fs
pop
mov
and
add
mov
ret
sbb
jo
addr16
daa
ins
pop
add
lods
inc
pop
dec
bswap
out
push
xchg
jl
stos
dec
adc
inc
cmp
sub
test
xor
ret
retf
sbb
mov
fs
test
inc
sbb
repnz
add
cmps
xor
add
push
in
xchg
sbb
mov
push
mov
punpcklbw
test
inc
or
jo
add
sahf
fwait
xchg
mov
jecxz
cmc
cmp
sbb
jge
xor
xchg
scas
push
push
lock
test
in
sbb
imul
popa
mov
ret
lahf
dec
push
push
cmp
pop
dec
je
inc
loopne
xchg
mov
sub
dec
dec
sbb
xchg
dec
add
inc
mov
mov
dec
test
rcl
cmps
push
(bad)
jmp
jge
ror
inc
neg
mov
pusha
nop
lea
fs
xlat
dec
push
lahf
stos
dec
add
adc
js
or
shl
mov
cmp
cmp
scas
test
scas
or
xchg
or
push
or
imul
inc
test
mov
test
or
push
cmp
mov
and
xchg
ror
xchg
mov
in
xor
ss
pop
clc
inc
mov
xor
dec
imul
mov
mov
add
lahf
sti
or
(bad)
ror
and
dec
add
jb
dec
jge
mov
les
lods
fcom
push
clc
ret
and
stc
jne
add
iret
push
add
push
mov
jecxz
jo
test
mov
lock
inc
ss
push
add
and
and
cmc
sbb
jno
in
and
jb
pop
lods
and
popa
loope
cmp
push
aas
add
xchg
clc
cld
or
aaa
dec
mov
test
lods
retf
sub
ss
add
mov
(bad)
loopne
xlat
sub
pop
xchg
in
pshufw
pop
sbb
sbb
repnz
xor
fs
dec
or
adc
mov
cs
in
xchg
or
ins
cmp
js
mov
xor
cmp
outs
xlat
jl
jns
inc
jno
inc
or
aam
pop
cs
pop
pop
xor
add
and
les
movs
lahf
and
push
leave
pusha
xor
pop
sub
in
xchg
and
push
push
(bad)
cmc
cmps
aaa
mov
lock
pop
push
push
jae
mov
(bad)
jns
dec
xchg
inc
daa
adc
xchg
stos
fs
aad
gs
pop
shl
ss
int
ret
and
xor
jmp
mov
cdq
pop
adc
mov
sahf
fwait
sub
loopne
movs
cld
mov
xchg
xor
jmp
adc
or
loop
loope
(bad)
cmc
rcl
sbb
and
fcomp
scas
add
clc
pop
ret
push
(bad)
ds
das
imul
icebp
and
sub
mov
adc
aad
lods
dec
mov
or
inc
fiadd
cmp
call
add
pop
fs
push
mov
xor
mov
int
jne
push
push
ret
xlat
dec
push
xor
cmp
dec
add
xchg
rcl
cmp
fstp
rcl
xchg
and
pop
mov
add
and
jbe
xor
adc
or
sbb
xchg
mov
jl
ret
xlat
xchg
cmp
cwde
sbb
mov
fprem
sbb
iret
in
xchg
push
cmp
jge
loopne
adc
add
xor
and
jl
(bad)
sar
cmp
je
cmp
in
mov
les
lds
enter
dec
movs
cdq
je
int3
sbb
popf
mov
pushf
add
daa
inc
xchg
xchg
loope
push
xor
call
shl
or
sbb
xchg
push
jp
pop
bound
sbb
rol
ins
fdiv
popf
xchg
cs
adc
dec
int
sahf
pop
popf
loop
shl
inc
mov
xor
ret
cmc
pop
add
mov
push
lds
(bad)
adc
adc
pop
fcmovnb
mov
xchg
test
add
pop
leave
in
inc
cmps
lea
and
lea
xchg
pop
add
sub
xchg
dec
lods
and
pop
add
push
pop
add
jns
sbb
fcomp
leave
(bad)
repnz
add
fldenv
enter
push
enter
inc
fdiv
daa
mov
shl
pop
sub
mov
lock
cmps
retf
enter
ds
rcr
push
cwde
jns
sbb
xchg
add
cmp
xchg
ins
jmp
dec
pop
in
sbb
or
add
addr16
cmp
xchg
xor
outs
fwait
jbe
jecxz
cmp
cmps
dec
sbb
xor
adc
test
mov
mov
jne
adc
xor
inc
je
into
push
mov
mov
dec
add
sbb
loope
or
imul
jns
and
jns
dec
pop
sbb
in
add
shl
pusha
add
cld
inc
sbb
shr
dec
mov
pop
add
js
add
sahf
xor
jp
aam
cmp
sar
stos
or
and
sbb
cmp
or
std
pop
sahf
in
sbb
dec
call
sbb
dec
mov
jnp
inc
push
cmp
dec
or
add
inc
inc
pusha
sub
call
out
icebp
and
gs
or
add
je
lods
(bad)
aam
inc
inc
adc
mov
mov
mov
loopne
add
jg
mov
shr
xchg
(bad)
jb
sbb
retf
retf
(bad)
mov
and
pop
ss
lea
mov
mov
xchg
inc
push
xor
cld
repnz
shr
arpl
pushf
pusha
and
dec
pusha
addr16
mov
pop
cmp
push
inc
bound
test
or
sbb
or
xchg
sbb
adc
push
mov
add
add
ins
loopne
adc
pushf
xchg
test
adc
mov
dec
sahf
pop
inc
and
nop
ds
pop
cld
or
xchg
retf
ins
pushf
in
xor
out
inc
add
shr
mov
(bad)
xchg
mov
and
je
inc
test
lds
pop
sbb
bound
mov
ret
xor
ret
mov
out
rcl
fsubr
clc
mov
mov
and
cmps
sbb
mov
or
pushf
or
add
push
mov
das
lods
inc
or
ret
pop
pop
inc
pop
pop
es
cmp
jge
add
adc
jno
cmp
inc
cmp
jl
and
jmp
add
mov
enter
cmp
and
cmp
jb
cmp
ja
sub
js
adc
xor
call
sub
pop
jmp
(bad)
xchg
cmps
pop
sbb
add
aas
adc
dec
loop
and
mov
and
jmp
mov
add
cmp
push
mov
sar
or
loop
xor
sub
pop
xchg
clc
push
fldcw
pop
rcr
inc
shr
cmp
fsubr
lds
cmp
push
jbe
add
xchg
push
fcom
mov
and
clc
adc
loope
push
iret
push
inc
clc
sub
ret
pop
ds
sub
dec
inc
xor
sbb
ret
mov
in
mov
adc
and
sti
xchg
mov
(bad)
mov
mov
arpl
dec
mov
jp
mov
lahf
sub
pop
mov
jb
rcl
test
adc
xchg
sub
imul
push
cld
cs
cmp
pusha
and
add
sub
push
jl
add
add
shl
sub
and
jecxz
cmp
loopne
es
sbb
imul
dec
jb
dec
push
jbe
gs
push
push
push
loope
popa
push
and
push
sub
cmp
push
xlat
push
dec
sbb
mov
pusha
mov
push
daa
or
xchg
cmovl
retf
lea
inc
aaa
mov
int3
ret
(bad)
or
push
aam
test
adc
adc
mov
ret
push
sbb
test
mov
test
push
cmc
add
jne
xor
stos
or
in
mov
and
jl
or
fisub
and
push
sbb
jg
fldenv
push
ror
jg
add
push
dec
rol
clc
xchg
test
or
ror
int
cmps
pusha
pusha
push
sbb
adc
push
mov
cmp
push
dec
inc
cmp
mov
daa
pop
pop
mov
mov
jo
test
inc
add
clc
or
cld
mov
cmps
add
xchg
and
dec
lds
inc
fisub
sub
adc
and
mov
mov
adc
ror
sbb
pop
lahf
in
fimul
push
push
xor
test
repz
sub
sbb
cmp
loope
jp
ror
jne
push
js
fidivr
sbb
(bad)
aaa
push
inc
dec
jnp
jecxz
jne
stos
inc
outs
add
js
xchg
sub
in
sub
mov
mov
sub
pop
fnsave
push
xor
adc
xor
pushf
add
or
push
sub
adc
sbb
loop
int3
ud1
out
test
in
xchg
mov
add
loopne
mov
or
mov
sbb
and
aad
xchg
push
cld
add
shl
jmp
sub
test
and
inc
dec
jne
jne
mov
rcr
fwait
mov
push
jle
adc
push
outs
add
sub
hlt
mov
dec
and
inc
call
pop
dec
add
push
mov
xor
pop
sub
or
xchg
inc
aaa
adc
dec
lea
jmp
sub
push
jg
movs
adc
or
mov
or
in
popa
mov
adc
jmp
loop
call
ds
data16
dec
push
test
push
cmp
sub
or
push
inc
and
jmp
and
inc
fisttp
pop
adc
and
or
pop
mov
pop
and
inc
pop
push
sub
mov
push
inc
lods
xor
ins
rcr
and
dec
ins
sub
push
cwde
xor
xor
inc
test
mov
out
cmp
add
lea
mov
les
pop
in
cs
pop
mov
fcomp
push
add
pop
sbb
(bad)
adc
cmp
lock
xor
mov
cmp
mov
pop
push
mov
inc
cmps
fs
pop
dec
imul
push
cs
or
push
adc
sub
arpl
or
lock
mov
pop
pop
and
in
or
jno
clc
pop
xchg
inc
and
push
mov
movs
pop
cmp
push
add
lods
aas
cmp
add
dec
lds
adc
pop
adc
shr
hlt
and
jp
rcr
or
jle
arpl
inc
and
add
rcl
and
sti
fadd
mov
adc
jge
je
sub
or
or
ins
loopne
dec
ror
sub
retf
pop
loopne
hlt
jmp
or
pop
pop
inc
mov
(bad)
add
jbe
jbe
add
fwait
fwait
or
test
dec
inc
bound
and
push
add
dec
sub
or
shr
or
stos
sub
adc
fsub
mov
pop
pop
add
test
or
mov
rcr
pop
jmp
pop
popf
xor
xor
jb
add
jbe
pushf
leave
dec
and
cmp
or
adc
and
sub
inc
and
xor
fist
fcmovb
inc
xchg
in
shl
rol
add
mov
xchg
sbb
sub
popf
or
pop
fldcw
xchg
shl
push
adc
and
cld
shl
mov
iret
mov
ret
mov
add
inc
loop
xor
push
mov
mov
adc
or
adc
pusha
inc
push
xor
inc
pop
lods
and
adc
popa
test
cmp
in
rcr
mov
dec
loop
sar
and
pusha
xchg
add
jnp
mov
adc
test
cmp
and
test
mov
idiv
inc
adc
(bad)
frstor
jmp
mov
adc
add
jge
in
rcl
cmp
inc
arpl
push
icebp
gs
sbb
nop
xchg
jmp
fs
or
add
or
xor
inc
sbb
and
push
cmp
enter
dec
test
fld
daa
in
sbb
push
gs
sub
pop
pop
aam
aam
adc
mov
dec
mov
cmc
(bad)
or
xchg
and
lea
sbb
mov
rcr
inc
leave
jmp
test
ja
mov
pop
dec
mov
adc
add
xchg
(bad)
mov
adc
cmp
(bad)
cmp
sbb
mov
addr16
push
sbb
lea
(bad)
sahf
(bad)
out
xchg
ins
test
cmp
xchg
clc
push
xchg
xor
push
loope
mov
pop
ror
push
(bad)
dec
sbb
cmc
cmps
add
xor
ret
das
xor
and
test
rcl
sbb
dec
jmp
xchg
aaa
inc
movs
mov
dec
mov
test
or
pop
or
out
or
xor
pusha
or
or
mov
loope
xor
stos
mov
and
add
mov
dec
std
pop
mov
cmp
adc
ror
cmp
inc
repnz
inc
sub
iret
rcr
xchg
mov
xchg
fstp
dec
xchg
mov
dec
scas
inc
add
sub
sub
jp
add
inc
cmp
cmp
stos
pop
jae
jne
or
and
je
dec
xchg
add
pop
pop
lods
ins
mov
push
push
mov
(bad)
sub
test
sub
mov
cmovnp
push
(bad)
mov
and
repnz
sub
inc
rol
mov
or
mov
popa
add
sub
fwait
add
xor
add
xor
or
ja
jnp
cmp
pop
cli
adc
es
daa
not
add
outs
cmps
clc
push
mov
clc
inc
sahf
dec
stos
cmps
sub
or
or
fst
das
fs
fidivr
pop
clc
jl
sub
fst
sahf
and
mov
cmp
inc
push
add
xchg
add
add
pop
mov
ss
pop
mov
dec
pusha
push
and
popa
test
push
out
sbb
and
fs
out
ror
dec
jmp
pop
dec
lock
mov
pop
mov
xor
aaa
push
add
lods
test
xor
mov
sub
adc
pusha
adc
cdq
arpl
add
add
xchg
std
cmp
cld
ret
adc
jo
jo
and
movs
cmp
push
push
pop
into
repz
sub
jne
dec
imul
rcl
sub
add
sbb
(bad)
jmp
dec
jo
mov
cmps
data16
mov
add
mov
loop
add
jo
shr
cmp
adc
popf
sbb
jl
cmps
fstp
ins
pusha
test
mov
xchg
xor
repnz
xchg
dec
jmp
neg
adc
xor
pop
mov
sub
jle
push
mov
lods
pop
div
imul
outs
pop
push
fneni(8087
push
sahf
inc
adc
retf
inc
ins
and
repz
jl
mov
and
push
(bad)
aaa
into
ins
lds
dec
dec
imul
sbb
add
hlt
mov
push
aad
add
xchg
mov
cmc
push
dec
dec
pushf
data16
repz
mov
ss
jnp
inc
out
or
dec
call
mov
clc
fadd
mov
and
add
and
push
popa
daa
add
loopne
and
cld
push
movs
rol
add
inc
cwde
xor
adc
or
push
mov
mov
push
test
cdq
in
pop
imul
add
lods
or
and
or
test
add
push
cmp
cmc
pop
xchg
adc
mov
fmul
rol
ins
jg
mov
xor
and
jmp
mov
inc
mov
or
cmp
imul
call
jo
add
fwait
add
push
addr16
inc
add
(bad)
sbb
sub
mov
ins
int
push
in
mov
jl
pop
push
mov
mov
sbb
pusha
outs
xchg
mov
add
mov
jle
xchg
ja
sbb
add
bound
fs
push
test
push
ja
mov
sbb
adc
js
adc
pop
jle
or
rcr
xchg
jo
test
push
pop
push
mov
movs
xor
das
xchg
test
cmp
and
shr
mov
pop
loopne
and
mov
add
stos
loop
push
mov
cmp
cmovae
out
daa
mov
adc
mov
push
mov
ss
cmp
ja
imul
(bad)
dec
sub
je
cmp
sub
jmp
or
jecxz
jnp
js
movd
xchg
ss
pop
and
push
cs
fdiv
dec
mov
add
or
add
xor
xchg
adc
(bad)
shr
cs
inc
and
test
jecxz
pop
xchg
ret
push
adc
fisttp
dec
dec
es
and
je
test
xor
jno
gs
pop
loop
jmp
dec
retf
ins
inc
xor
mov
retf
inc
loopne
les
xor
aam
outs
push
and
mov
push
add
or
add
cmp
iret
mov
sbb
sub
inc
fimul
sbb
push
stos
ins
or
popf
js
mov
cmp
loopne
fcos
inc
adc
sub
nop
jns
imul
inc
xor
dec
cli
mov
cmp
or
sbb
add
dec
mov
and
cmp
adc
mov
fbstp
mov
enter
and
jmp
xchg
(bad)
push
and
hlt
xor
cmp
push
xor
sub
mov
ds
pop
out
je
pop
adc
mov
inc
xchg
mov
or
mov
sub
paddq
es
jl
leave
in
dec
jae
sub
jno
pop
and
xchg
sub
adc
push
enter
adc
xchg
call
add
xchg
jmp
mov
pop
and
mov
push
add
dec
push
pop
fisub
hlt
rol
jmp
popa
push
pop
add
leave
or
dec
mov
dec
and
xchg
mov
std
fild
and
loopne
scas
sub
sbb
or
push
imul
enter
sub
or
jmp
mov
aam
cmp
inc
in
popf
lods
int3
add
repnz
add
xchg
jecxz
jne
popa
xor
test
xchg
adc
iret
mov
rcr
retf
or
inc
outs
add
loopne
shl
jno
xchg
dec
add
xor
add
adc
and
xor
sbb
pop
lods
adc
xchg
(bad)
ficom
prefetcht2
or
sbb
rol
ficom
adc
add
(bad)
and
icebp
in
jns
or
jge
add
popa
int3
inc
sub
or
cmp
adc
int
hlt
je
ret
or
je
sub
test
dec
fsubr
or
je
pop
push
inc
sbb
test
sbb
pop
mov
mov
xor
inc
dec
call
fdiv
sub
dec
adc
ret
xchg
nop
je
push
inc
cmp
add
cmps
add
pop
pop
sbb
mov
sbb
mov
push
adc
cmp
pop
test
loopne
inc
sub
push
jl
mov
and
push
xor
mov
adc
adc
pusha
and
retf
xor
(bad)
sub
cmp
mov
cmp
add
pop
cdq
sbb
xor
inc
adc
imul
dec
movs
or
and
std
call
cs
ret
cmp
pop
neg
inc
fst
push
std
test
jmp
mov
mov
ins
pop
int3
xchg
bound
or
int
mov
jmp
es
adc
movs
dec
fadd
and
inc
sbb
test
rcl
push
mov
adc
adc
ds
push
jmp
push
cmp
pop
(bad)
add
add
shl
jnp
nop
popf
xor
sbb
adc
pop
movs
adc
sar
mov
add
mov
mov
pop
cli
shr
into
cli
pop
adc
adc
push
push
or
mov
mov
adc
inc
int3
add
add
sar
ds
adc
xchg
call
or
mov
arpl
ret
and
js
iret
sbb
mov
jno
test
or
pop
ret
add
cs
mov
push
pop
xchg
push
out
cmc
dec
fs
rol
adc
or
or
test
push
push
ror
sar
push
ret
bound
lea
push
fidiv
push
push
and
sub
sub
xchg
adc
stc
sub
inc
sub
sub
jge
cmovp
mov
push
aaa
jne
xchg
push
sbb
pop
mov
into
(bad)
call
mov
(bad)
xor
and
or
sbb
or
sub
add
cdq
mov
adc
ret
jae
repz
mov
mov
dec
xor
mov
popa
mov
push
jnp
xchg
outs
ret
jne
fsub
dec
sbb
xor
adc
adc
dec
and
add
pop
xor
out
adc
out
mov
jmp
pop
dec
mov
jo
xor
sub
sbb
movs
int3
sub
mov
or
sbb
pop
pusha
adc
into
ins
and
push
pop
int3
jne
push
stc
popf
in
inc
iret
push
pop
jmp
add
sbb
push
cmp
cmp
pop
adc
adc
cmp
sbb
ret
dec
shr
or
sub
loopne
dec
pop
pop
inc
je
mov
mov
fidiv
mov
mov
sbb
rcr
test
dec
loope
push
leave
loop
xchg
les
jne
cmp
aad
pop
pop
ret
dec
push
push
push
mov
inc
push
and
loopne
test
arpl
hlt
pop
add
fimul
add
loope
test
cmps
xchg
cmp
xchg
push
in
sub
or
pop
xchg
fbstp
dec
and
movs
and
stc
inc
cmc
int3
add
lods
inc
mov
cmp
and
outs
(bad)
or
popf
pop
sahf
jl
or
ret
cmp
mov
or
mov
jno
sub
(bad)
sub
add
or
bound
aaa
enter
aas
xchg
cmp
in
test
sub
xor
ja
cmp
stc
in
gs
jl
and
cmp
xor
dec
(bad)
punpcklbw
or
neg
cli
cmp
cmps
sub
xchg
adc
ret
add
div
jae
pop
push
sar
dec
or
dec
cmp
es
adc
addr16
xor
retf
mov
jmp
xchg
cmp
and
mov
ja
in
test
imul
dec
imul
push
cmps
push
addr16
add
sbb
push
or
cmp
pop
xchg
data16
popf
scas
cli
push
pusha
mov
pop
fs
or
mov
push
imul
cmp
pop
mov
push
pusha
mov
test
jo
jle
or
add
add
out
lds
push
cs
ss
pusha
mov
mov
std
aaa
fs
adc
cdq
add
add
popf
lahf
push
lds
and
pop
stos
fwait
jmp
bound
cmc
xchg
xor
neg
xor
push
cmp
or
pop
sub
ret
cmc
(bad)
or
retf
cmp
js
aam
jl
pop
dec
inc
inc
cs
pop
mov
jnp
or
cs
inc
test
rol
das
add
ja
movs
icebp
mov
mov
and
retf
test
add
or
inc
fmulp
or
and
mov
call
xor
fcomp
gs
in
fstp
fld
pop
aaa
add
sbb
mov
add
int3
push
sub
adc
fcom
xor
adc
aam
in
push
dec
clc
dec
cdq
jge
push
sbb
xchg
add
mov
xor
jo
add
setle
and
test
mov
sbb
lds
and
push
xchg
jmp
xchg
push
push
ficomp
rol
xchg
xor
and
shl
xlat
push
sub
inc
pusha
sbb
and
popf
jl
jne
inc
push
sub
ror
fcmovnb
and
fstp
(bad)
fnstcw
mov
fwait
xchg
jbe
stos
xor
add
movs
test
adc
sub
inc
je
movs
adc
rol
sbb
aas
dec
ror
add
cmp
add
inc
ds
es
push
mov
xchg
nop
fsub
imul
push
dec
dec
push
adc
jl
rcl
outs
push
int
xchg
jns
adc
add
pop
sbb
(bad)
mov
jecxz
cmp
es
jne
push
and
popa
test
jno
mov
test
xchg
js
adc
jmp
rcl
mov
pop
mov
cmpxchg
and
jb
es
adc
push
jno
sbb
sub
jle
pusha
test
aas
push
add
scas
pop
fs
in
push
jmp
cdq
into
movs
add
mov
add
sub
lds
xchg
sub
push
push
xchg
add
xchg
inc
dec
pop
(bad)
iret
icebp
aad
cmp
pop
(bad)
push
dec
mov
(bad)
es
push
xchg
cmps
pop
mov
xchg
test
enter
push
inc
xchg
sbb
push
in
adc
mov
jbe
adc
push
lahf
sbb
lahf
push
and
ja
rol
mov
push
jbe
or
jge
es
movs
lock
cld
dec
and
dec
sbb
push
sbb
cmp
or
ss
and
jnp
pusha
ins
aaa
sbb
push
dec
mov
cs
inc
adc
sub
push
add
jl
sbb
shl
adc
mov
je
div
pop
dec
or
rcl
add
sbb
fidiv
hlt
and
ins
jo
loopne
loopne
jmp
imul
movs
or
lea
mov
stc
rcl
cwde
cmps
loopne
and
jmp
sub
das
jg
sar
jg
xchg
sbb
lock
stos
cmps
or
aam
imul
mov
sbb
adc
leave
je
sub
test
retf
xor
pop
retf
pusha
sti
and
je
ins
imul
mov
add
and
rol
adc
add
pop
or
inc
pop
push
call
rcl
dec
adc
add
mov
lea
ins
ja
mov
jl
sub
adc
js
lds
add
add
mov
daa
mov
fisttp
and
ret
(bad)
neg
out
je
outs
pop
inc
sub
js
in
inc
inc
add
mov
mov
xchg
test
(bad)
into
iret
cmc
pop
xchg
xor
fsubp
cwde
push
mov
test
push
xor
sub
jo
inc
dec
jne
xor
lea
aas
lea
cmp
test
mov
xchg
addr16
push
aaa
sbb
mov
add
jbe
repz
xchg
sub
mov
push
dec
pop
push
adc
push
sbb
push
ret
push
bound
nop
dec
lods
pop
inc
pop
add
pop
mov
cld
loopne
sbb
out
pop
(bad)
cmp
cmps
or
imul
dec
push
rol
jle
ss
pop
inc
push
in
repnz
or
add
es
or
sbb
(bad)
int
in
cmp
out
test
xor
(bad)
bound
jno
xor
sar
jecxz
xor
int
ss
in
sbb
jne
imul
mov
loopne
or
cmp
aas
sub
and
add
fsubr
inc
jo
push
sbb
sub
mov
sbb
stos
sar
dec
aaa
ins
loopne
in
inc
and
fs
dec
hlt
adc
repz
in
jnp
cmc
mov
lea
xchg
dec
jbe
into
stos
mov
or
fld
cmp
push
adc
xlat
test
adc
ret
imul
xor
add
sub
and
neg
popa
or
imul
popf
cwde
add
inc
shl
add
in
pop
and
push
fadd
movs
sub
fistp
mov
push
dec
pop
pop
adc
add
inc
mov
jnp
nop
cmp
les
and
adc
adc
test
popf
in
adc
rcr
popa
icebp
cmp
dec
jg
adc
shr
xchg
inc
jb
add
fwait
add
out
jmp
sbb
inc
xor
add
jne
in
arpl
shl
pushf
or
push
imul
mov
dec
test
push
and
sbb
push
rol
sbb
xchg
and
xchg
or
push
xor
add
lock
movs
or
nop
jo
sbb
and
push
push
mov
loope
popf
cmp
pop
pop
adc
or
lock
stos
jmp
and
adc
retf
ror
sbb
fsub
pop
fdiv
mov
test
push
add
iret
or
rcr
pop
dec
not
in
hlt
cmp
retf
cdq
ret
fiadd
inc
rol
add
push
(bad)
imul
cmp
int3
sub
jbe
(bad)
jecxz
push
push
add
(bad)
popf
push
popf
(bad)
and
sbb
or
sbb
push
test
call
rcl
sub
fld
dec
sbb
push
retf
(bad)
sti
mov
sub
xchg
cmp
push
sub
sub
sbb
xchg
stos
add
add
movs
xchg
ret
cld
cmp
mov
mov
sub
les
mov
xchg
ret
xor
mov
xchg
push
sub
rcl
inc
test
mov
js
arpl
inc
out
enter
shufps
xor
adc
ins
jne
imul
pop
add
adc
add
ss
sbb
sbb
jge
jne
enter
sub
xlat
and
push
out
int3
add
das
js
dec
or
hlt
add
dec
jae
xchg
addr16
sub
pop
sar
mov
aad
dec
pop
mov
and
inc
add
xor
cmps
daa
das
jmp
mov
sbb
(bad)
jae
add
test
in
and
jo
shr
nop
add
add
sbb
je
retf
test
(bad)
je
popa
imul
ret
cli
pushf
test
mov
cmp
adc
sub
mov
fs
xchg
lods
cmps
mov
pushf
mov
cwde
sub
mov
popa
xor
imul
nop
xor
aaa
shld
push
xor
mov
into
popf
jo
(bad)
jg
das
jne
cwde
cli
mov
adc
jno
jl
jae
ror
push
mov
mov
pop
iret
inc
test
dec
push
lds
js
push
inc
inc
mov
push
popf
movs
loope
test
js
pop
add
xor
jge
xor
sub
or
in
stos
push
dec
jmp
movs
adc
hlt
mov
pop
adc
add
ins
and
inc
jle
(bad)
pop
sub
cld
adc
push
xlat
out
(bad)
(bad)
test
inc
add
inc
push
cmc
jp
or
retf
mov
cdq
pop
in
enter
mov
scas
in
je
push
mov
inc
mov
sbb
adc
lods
shl
loopne
cmp
jno
icebp
or
or
adc
ror
daa
popa
lea
adc
fs
mov
xor
sbb
lods
dec
mov
mov
cmc
popa
setns
cmc
movs
add
dec
or
xor
push
add
gs
fadd
cmp
and
adc
int3
sbb
dec
xor
inc
xchg
mov
cdq
adc
fmul
adc
retf
ret
dec
(bad)
sbb
dec
cs
ror
and
rcr
scas
mov
adc
or
adc
inc
sbb
pop
cld
repnz
or
push
cmp
dec
fistp
sbb
and
outs
pop
mov
xchg
sbb
mov
mov
mov
data16
or
imul
sub
or
iret
test
sahf
imul
xchg
popa
sub
push
je
aad
fbstp
sub
ror
cli
and
cs
ds
mov
retf
xor
cmp
outs
adc
cmp
add
inc
or
inc
jle
ror
inc
fcomp
jb
or
and
xor
rcl
sbb
lahf
out
or
mov
xchg
add
adc
and
add
mov
imul
sub
mov
push
jmp
push
adc
sub
or
dec
jne
push
test
or
sbb
jne
jno
adc
xchg
xchg
jo
push
push
mov
outs
dec
and
lahf
sbb
xchg
popa
popa
jae
arpl
and
fstp
or
test
mov
lea
int3
sbb
lock
imul
and
push
in
imul
pop
(bad)
or
sub
dec
push
cmps
and
jne
adc
pop
sbb
inc
and
pop
jno
imul
inc
xchg
mov
aad
inc
inc
nop
mov
pushf
jmp
and
mov
lods
push
push
or
adc
inc
bswap
ss
fcom
in
xor
add
push
mov
inc
inc
add
xchg
dec
add
sub
inc
stc
(bad)
and
or
add
sbb
arpl
and
dec
add
or
sbb
sbb
and
fld
movs
popf
(bad)
push
cmp
push
aad
cmp
or
inc
add
lea
inc
loopne
cmp
lea
xor
push
jb
sbb
sbb
pop
xchg
out
add
and
fld
(bad)
and
adc
sub
add
jae
xor
push
fadd
or
aaa
repnz
sbb
mov
leave
pop
ja
mov
loope
call
push
push
icebp
adc
xchg
mov
sbb
or
push
pusha
pop
or
shl
inc
les
test
jle
dec
xor
sub
sbb
test
adc
mov
pop
or
add
cs
mov
mov
xor
popa
mov
and
cmp
cmps
xchg
xchg
inc
pop
and
fs
jno
and
retf
retf
xor
cmp
mov
inc
loope
cmc
push
cmp
je
push
jo
push
sub
add
jmp
push
enter
add
(bad)
cdq
es
cmp
pop
inc
and
popf
and
pop
fst
ja
adc
sub
mov
add
dec
mov
iret
shr
push
add
push
stos
cmp
add
js
push
les
sbb
add
inc
mov
mov
xchg
dec
add
pop
sub
jmp
xor
adc
popa
pop
and
call
adc
xchg
mov
inc
xor
jb
popa
fnstenv
dec
add
pop
adc
mov
mov
jne
dec
movs
adc
mov
jns
lea
test
adc
mov
pop
mov
pop
push
xor
pop
mov
pop
pop
pop
push
jg
pop
ror
mov
cmps
mov
push
xor
pop
lods
add
xor
jns
lods
and
or
push
imul
dec
je
cmps
sbb
test
mov
sub
shl
dec
mov
inc
popa
xor
xchg
push
jno
push
aas
cmp
jp
out
sub
add
arpl
mov
add
mov
or
cdq
(bad)
shr
fcom
push
cdq
dec
inc
xchg
add
pop
push
movs
push
add
retf
pop
enter
add
inc
add
ror
adc
xchg
out
fadd
in
pop
les
cmp
cmp
rol
push
add
inc
inc
jnp
add
sbb
or
push
sub
shr
(bad)
repnz
enter
aas
sbb
retf
sbb
mov
idiv
adc
call
pusha
inc
mov
dec
sub
add
mov
pop
leave
das
pop
sbb
movs
aaa
inc
pop
shl
and
sub
add
push
scas
push
loopne
inc
ja
sub
(bad)
add
in
push
jmp
adc
mov
push
add
jl
xchg
xchg
xchg
test
movs
lea
and
sbb
sub
fidivr
repnz
add
xor
aad
pushf
xchg
push
loopne
xor
pop
add
xor
pop
enter
pushf
pop
pop
dec
push
loope
(bad)
in
push
push
call
inc
scas
int3
mov
sbb
jg
pop
out
mov
jmp
inc
enter
adc
jle
int3
cmp
lds
dec
retf
aad
jmp
xchg
pusha
jmp
test
adc
jl
pop
xchg
mov
inc
push
push
sbb
xchg
push
mov
mov
mov
ss
loopne
shl
test
and
and
dec
push
ret
and
test
mov
sbb
push
sbb
adc
call
pop
nop
fisub
sbb
scas
mov
(bad)
sbb
xlat
or
push
pop
pop
pop
(bad)
outs
or
mov
push
cmp
pop
je
mov
push
mov
into
popf
and
in
fwait
lock
xlat
fsubrp
mov
int
xchg
push
mov
and
cmps
push
push
jns
jmp
sar
pushf
leave
adc
push
jle
push
movs
(bad)
stc
aad
mov
pop
jae
dec
imul
fild
cmp
mov
jmp
push
cmp
dec
mov
or
movs
fwait
addr16
dec
jo
loopne
(bad)
ins
pop
call
push
xor
xchg
sub
and
add
or
push
fisttp
sar
mov
fcom
outs
xor
sub
jb
out
loope
inc
inc
sar
push
push
xor
push
ja
out
(bad)
xor
es
enter
inc
movs
imul
pop
xor
dec
xor
mov
popf
imul
sub
or
xchg
xchg
test
inc
mov
jno
les
hlt
add
pop
and
sti
mov
das
jno
jmp
and
add
jle
and
movs
ins
mov
inc
stos
push
inc
jmp
scas
xlat
and
js
mov
stos
sub
pop
sbb
xor
iret
xor
je
xchg
mov
or
or
or
add
loopne
adc
icebp
sub
jp
and
icebp
sbb
pusha
push
push
les
mov
pushf
adc
retf
and
lahf
and
movs
adc
retf
inc
scas
mov
aas
xchg
sub
jbe
jg
sbb
push
cmp
(bad)
lods
pop
jge
cmp
aaa
add
sbb
pop
ins
and
mov
(bad)
pusha
or
mov
fcomp
push
sbb
test
jbe
scas
mov
or
add
cli
cmp
xchg
add
aad
jecxz
fistp
inc
pushf
cdq
(bad)
test
cmc
out
xor
add
mov
push
lahf
nop
cmp
or
nop
test
mov
or
jle
xchg
pop
inc
mov
xchg
cmps
xor
push
int
jmp
pop
cld
inc
or
adc
jne
test
mov
movs
dec
add
mov
mov
dec
pop
mov
cmp
add
es
cmp
mov
daa
xor
pop
je
push
add
add
es
pop
jmp
and
push
sub
mov
outs
sbb
add
call
sub
or
loop
jmp
mov
and
jbe
jg
xchg
mov
popa
movs
push
imul
lods
leave
test
pop
adc
sbb
dec
inc
xlat
ss
xlat
(bad)
(bad)
jne
pop
das
pop
dec
das
xchg
shr
pop
cmps
aas
xchg
inc
fmul
jmp
push
jo
inc
pusha
in
dec
and
xor
add
mov
cmp
and
add
mov
jg
or
jmp
adc
sub
push
add
shl
add
retf
mov
aaa
add
mov
fsub
test
xchg
por
add
dec
rol
mov
add
or
out
adc
xchg
and
test
loopne
mov
ror
iret
outs
mov
gs
je
pop
jne
mov
adc
push
in
jecxz
lods
sub
std
pop
dec
mov
mov
int3
add
push
pushf
mov
fild
lods
or
movs
jno
mov
int
cmp
es
scas
sub
sbb
rol
in
aas
push
fdivr
sbb
inc
adc
test
sbb
or
xor
cmp
or
loope
loop
lahf
pop
jle
gs
movs
imul
jmp
leave
xchg
add
or
jo
js
jmp
mov
and
lds
jb
jne
add
cmp
mov
cld
mov
fild
xor
mov
data16
js
shr
movs
xchg
mov
jo
add
aad
inc
adc
out
mov
pop
ja
or
lock
dec
mov
jp
mov
xchg
test
clc
add
jb
cwde
xor
cmp
jne
add
jnp
add
jne
nop
iret
rol
(bad)
mov
cmps
test
or
fistp
loope
mov
xchg
or
xchg
add
add
fldcw
adc
push
mov
jmp
adc
or
scas
call
dec
ret
dec
dec
dec
pop
mov
sbb
and
inc
in
jo
xor
adc
sbb
inc
push
push
or
mov
xchg
pop
cmp
add
stos
pop
pop
in
mov
push
mov
out
xor
bound
jmp
mov
add
sbb
mov
mov
mov
nop
mov
jb
mov
sub
mov
pushf
mov
mov
retf
cdq
enter
adc
push
adc
aaa
ret
arpl
pop
xor
add
sbb
adc
rol
add
fs
cmc
nop
push
jnp
xor
les
test
dec
sbb
cs
push
rcl
fcmovbe
mov
mov
cmp
jnp
jns
das
add
rcl
loopne
inc
dec
pop
je
mov
add
cwde
or
test
ss
dec
popa
adc
adc
sbb
and
dec
jmp
icebp
add
add
stos
adc
pop
dec
push
nop
adc
dec
sbb
jnp
je
and
mov
jbe
pop
mov
adc
push
jb
and
add
and
pop
rcl
adc
outs
arpl
pop
jge
dec
es
ret
add
test
aaa
add
push
mov
pop
clc
add
fsubr
(bad)
sbb
addr16
mov
mov
cwde
or
push
lock
sub
mov
push
repz
mov
adc
sub
mov
loopne
shr
xchg
adc
jle
inc
xchg
cs
mov
or
mov
add
mov
and
inc
jo
and
mov
mov
inc
sbb
inc
mov
je
add
push
fist
pushf
push
jecxz
pop
add
pop
cmp
xor
pushf
mov
sbb
test
mov
sub
stos
mov
jae
enter
mov
icebp
add
adc
dec
jp
mov
ret
test
jmp
fisttp
fadd
retf
inc
push
mov
nop
xor
mov
ret
leave
cwde
sub
xor
dec
das
ja
inc
jmp
out
cmps
add
pop
pop
push
add
xchg
sbb
lods
add
add
int3
sbb
rcr
xor
sub
inc
or
jp
mov
jo
mov
not
je
stc
sub
sbb
enter
sbb
and
and
movs
mov
xor
test
pop
sub
and
push
pop
mov
hlt
push
or
cli
outs
js
sub
push
sub
js
xlat
nop
inc
push
aaa
mov
scas
adc
hlt
not
(bad)
shl
out
imul
lea
outs
retf
or
dec
pop
inc
rcl
add
sub
sbb
or
ror
inc
push
icebp
push
sar
sbb
hlt
cvtdq2ps
fld
sbb
adc
push
and
stc
inc
xor
add
ja
test
ins
push
add
je
mov
nop
(bad)
and
sar
add
in
add
mov
sti
mov
and
dec
add
aad
cmp
loop
add
cmp
jge
ret
xchg
rcl
cwde
xchg
imul
test
push
and
stc
or
aad
js
add
cmps
dec
jne
sub
popa
or
(bad)
or
and
sahf
inc
push
adc
sti
add
cmp
and
mov
movs
push
adc
push
daa
sub
int3
push
mov
mov
add
data16
push
inc
pop
sbb
sub
cmp
add
dec
imul
movs
loopne
dec
inc
or
ret
xor
mov
mov
dec
imul
fnstenv
jno
fsub
sbb
inc
movs
(bad)
dec
js
add
add
out
xchg
mov
call
mov
inc
sub
mov
jbe
jnp
add
pop
push
push
ror
push
xor
inc
sub
dec
add
or
jmp
sbb
mov
js
or
arpl
inc
cdq
xor
add
je
loope
int3
retf
aam
and
add
imul
(bad)
aam
and
mov
or
jmp
inc
push
mov
xchg
jno
call
repz
mov
les
mov
add
adc
push
hlt
arpl
push
loopne
(bad)
ins
jl
inc
std
xlat
cmp
mov
dec
sub
jl
push
sub
adc
and
inc
sub
aas
(bad)
in
or
mov
cmps
sahf
mov
imul
xor
sbb
mov
push
inc
in
fst
cmc
and
mov
and
and
mov
fidiv
xor
lea
push
mov
rol
mov
repz
cmp
fisubr
bound
sbb
add
pop
or
clc
sbb
jb
push
cmp
ins
mov
js
adc
xchg
call
xor
inc
sar
mov
aad
xor
cmp
jmp
adc
das
xor
add
add
xchg
cmp
je
and
mov
push
inc
es
dec
adc
ins
lods
jo
and
dec
pop
leave
(bad)
mov
cmp
mov
add
xchg
jb
leave
aam
jbe
sub
adc
in
and
pop
dec
sub
push
add
fwait
leave
mov
cmp
or
xor
cmp
in
shl
dec
add
ror
adc
and
push
push
imul
lods
in
int3
inc
add
mov
add
rcl
aad
xchg
add
mov
mov
outs
adc
mov
sbb
aas
add
dec
adc
(bad)
ins
push
inc
adc
lock
or
xchg
inc
cmp
sub
imul
loopne
rol
retf
enter
inc
ficomp
push
push
in
shl
inc
and
mov
and
add
mov
pop
inc
add
out
inc
data16
cdq
pop
mov
xor
cmp
xor
jne
in
adc
jmp
inc
or
xchg
in
scas
stos
or
or
outs
inc
retf
dec
sbb
add
jne
and
cmovnp
sub
pop
pop
add
fmul
jmp
dec
push
je
add
test
mov
test
and
repnz
jmp
push
sbb
add
mov
inc
call
jg
mov
sti
cld
sbb
sysret
shl
inc
dec
or
dec
call
ins
add
lahf
xor
xor
fwait
push
pop
pop
mov
pusha
sub
loop
cmp
add
and
hlt
add
cmp
push
nop
ss
mov
cwde
dec
sbb
or
addr16
sub
mov
sbb
sub
in
lock
or
pusha
xor
jno
test
int3
add
mov
and
ret
jmp
loope
movs
rcr
cmp
jp
inc
sub
sub
aas
sbb
pop
inc
mov
add
xchg
add
add
xlat
arpl
and
xchg
(bad)
fcom
call
outs
cmp
and
clc
add
jl
sub
(bad)
add
inc
add
add
add
test
or
push
or
sub
sub
pop
jns
rcl
ds
push
movs
mov
xchg
or
mov
nop
and
xchg
fcomp
loopne
pop
xor
leave
dec
mov
fimul
dec
dec
jb
imul
push
sbb
push
pusha
or
pop
daa
mov
dec
jl
sbb
mov
adc
aaa
xor
pop
rcr
cmp
add
push
call
add
push
pushf
cmp
push
adc
xchg
setnp
mov
rcr
or
aad
or
ins
pusha
bound
jl
dec
movs
clc
or
enter
sbb
add
mul
xchg
int
inc
clc
and
dec
js
jle
ins
pop
test
mov
ss
jmp
sbb
or
xor
out
sti
fadd
mov
xchg
outs
scas
add
aaa
mov
mov
dec
not
js
scas
mov
add
dec
ins
shl
pop
lock
push
rcr
cs
fcomp
xor
cmp
dec
or
adc
(bad)
aam
push
aad
sub
inc
sub
or
push
mov
aam
xor
mov
mov
cmp
xchg
push
xchg
cli
shl
lods
icebp
adc
push
adc
shl
retf
jmp
jge
sub
fcom
jne
inc
pop
movs
and
call
rcl
add
lock
jmp
icebp
jne
cwde
xchg
xchg
loop
push
add
add
pop
ja
inc
dec
mov
ret
mov
adc
rol
sub
popa
ror
nop
inc
imul
push
mov
and
jo
inc
sbb
inc
sbb
pop
sub
dec
bound
mov
das
or
je
xchg
dec
sbb
add
adc
adc
cli
adc
(bad)
push
test
xchg
push
int
in
(bad)
int
push
pusha
ins
inc
xor
cmp
cmps
(bad)
pop
cmp
cmp
mov
outs
pop
and
cmp
sub
pop
add
add
inc
dec
jmp
jmp
xor
inc
sub
push
cmp
add
adc
add
sub
into
scas
add
inc
cmp
or
jecxz
cli
icebp
add
jne
sbb
pop
aas
push
push
pop
xchg
retf
pop
adc
sbb
add
inc
jge
les
push
iret
(bad)
iret
mov
xchg
aam
in
inc
lock
shl
dec
popf
leave
popa
dec
xchg
adc
pop
enter
xor
cmp
jns
mov
lds
ins
loop
or
outs
rol
int3
in
jne
sbb
shl
and
sar
push
push
inc
push
fcmovnbe
add
sub
mov
or
add
jae
pop
pop
test
fsubr
push
lea
dec
add
mov
add
ja
(bad)
cmp
pop
jle
pusha
mov
outs
or
push
test
push
lock
gs
fwait
cli
mov
sbb
jne
fdiv
xor
add
cwde
es
dec
fnstenv
inc
mov
ret
pushf
adc
or
mov
or
add
jecxz
add
es
xor
imul
xor
mov
dec
stos
jecxz
test
or
in
lock
inc
dec
movs
pusha
scas
loopne
packssdw
jne
add
in
mov
inc
into
out
dec
ret
and
popf
sub
mov
cli
test
mov
call
adc
mov
or
in
scas
lods
ret
and
ret
or
adc
or
jne
cmp
and
loopne
jecxz
lods
push
sbb
leave
pop
es
loop
mov
and
adc
adc
jmp
fmul
mov
sbb
cld
jmp
sub
out
popa
cmp
int
ins
lea
setnp
(bad)
clc
dec
pop
push
lock
add
ror
and
dec
and
lds
and
adc
xor
mov
imul
das
out
in
add
adc
or
xchg
cmp
fsub
sbb
push
inc
cmps
mov
dec
mov
mov
(bad)
in
add
cmp
jne
adc
mov
rol
stos
push
mov
(bad)
std
xchg
sbb
add
push
icebp
add
inc
adc
push
sbb
pop
popf
(bad)
cmp
dec
and
sbb
sub
cwde
int
aad
xor
clc
mov
mov
mov
inc
pop
jnp
push
cmp
push
cs
jp
mov
xchg
xchg
push
mov
(bad)
cmp
push
fwait
and
and
in
sar
and
inc
dec
mov
mov
in
imul
xor
rol
ins
lea
jmp
inc
sub
ja
into
cdq
cmp
add
rol
dec
nop
(bad)
push
or
in
leave
mov
jmp
pushf
movs
sub
stc
pop
mov
sub
pop
test
js
das
sbb
push
mov
jbe
(bad)
mov
add
push
and
hlt
xor
mov
cmp
jl
xchg
xor
mov
lock
inc
ja
sbb
jmp
es
in
sub
mov
sub
or
pop
mov
jno
cmp
sub
nop
sub
add
mov
sub
mov
jge
jb
fdiv
pop
sub
xchg
xor
push
push
xchg
fld
pop
dec
or
out
xchg
xchg
ja
dec
sub
cs
out
cmp
push
xor
aam
push
push
jo
iret
push
retf
add
or
add
and
div
aaa
mov
or
lea
js
into
js
adc
and
add
or
push
(bad)
loopne
sbb
mov
add
inc
(bad)
in
es
je
xchg
sub
sub
sbb
adc
out
lea
mov
mov
or
les
dec
scas
and
mov
adc
retf
and
dec
lahf
lea
lea
add
shl
xchg
and
imul
mov
mov
jg
(bad)
add
jbe
js
adc
es
xor
ja
dec
test
pushf
cwde
push
and
es
push
jne
xor
add
mov
pop
xchg
sbb
add
add
or
iret
adc
jecxz
lods
sub
hlt
xchg
test
push
push
add
inc
call
jnp
in
push
rcl
adc
cs
jo
push
or
lock
sbb
loop
ins
imul
pop
push
sbb
xor
add
add
cld
cmp
mov
fs
lods
push
or
test
fcmovnb
movs
fild
nop
lods
int
test
sbb
xchg
test
add
sti
mov
add
push
inc
rcr
cmp
fdivr
nop
rol
inc
push
push
inc
push
sbb
cmp
lods
rol
sub
xchg
nop
inc
xor
add
test
add
and
adc
mov
inc
mov
jno
dec
and
and
call
aaa
mov
push
pop
xchg
fisttp
pop
or
mov
cs
loopne
xor
and
pop
and
retf
in
and
sub
xor
xchg
pop
cmp
sahf
fist
scas
fwait
cmp
js
jmp
pushf
jmp
cwde
loopne
mov
adc
pop
push
mov
adc
enter
js
je
inc
mov
enter
je
outs
hlt
dec
mov
clc
in
and
pop
jge
inc
jbe
or
xchg
jg
inc
imul
pop
add
dec
add
push
pop
mov
sub
je
sub
and
mov
or
fwait
dec
mov
jmp
hlt
or
cld
mov
seto
imul
rol
dec
sub
test
xchg
add
jnp
(bad)
push
push
pop
push
shr
pop
cdq
lock
pop
fsubr
pop
sub
popf
inc
jmp
les
cmp
sub
in
cmp
push
call
imul
jne
or
jge
lea
push
sub
retf
retf
or
add
ja
pusha
add
adc
inc
and
shl
mov
adc
cmp
loope
inc
mov
sar
push
sub
and
push
mov
add
pop
dec
imul
aam
lock
shl
xchg
imul
rcl
mov
inc
inc
adc
inc
mov
adc
pop
dec
mov
popf
mov
inc
xor
and
fisttp
cmps
inc
push
pop
pushf
mov
or
push
bound
jo
repnz
push
test
xor
lods
and
mov
cmps
and
inc
je
add
outs
inc
add
sub
rol
mov
fwait
leave
test
inc
inc
sbb
ror
add
test
xchg
out
shl
sub
mov
jecxz
xor
test
or
bound
clc
sub
stos
add
imul
mov
add
cmp
test
mov
adc
bound
jno
cmp
std
fdivr
mov
mov
jno
jle
xlat
nop
push
jo
test
imul
pop
test
call
jmp
add
(bad)
loope
leave
mov
mov
dec
mov
clc
and
or
lea
add
add
pop
push
push
mov
push
mov
lock
dec
push
std
dec
push
sbb
add
or
mov
leave
popf
pop
or
and
or
and
jl
repnz
ja
add
inc
sbb
cwde
sbb
push
retf
shr
or
ds
cmp
or
cmp
fcomp
push
test
pop
mov
inc
jae
cmp
out
in
pop
es
push
or
mov
loopne
inc
push
push
adc
xchg
ror
mov
cmps
push
rcr
xor
cmp
cmp
jl
xchg
add
xor
adc
cmp
dec
push
pop
sbb
mov
mov
(bad)
data16
mov
mov
mov
adc
adc
ins
rol
ret
(bad)
or
fisub
cmp
mov
cmp
and
enter
add
fidiv
cmp
mov
mov
sbb
or
inc
test
cwde
inc
xor
popa
xchg
xchg
mov
inc
xor
fisubr
xor
push
push
push
loopne
xor
mov
mov
rcl
and
aas
test
fld
inc
pop
push
jne
ror
aaa
mov
clc
sbb
enter
fs
std
je
ffree
in
rol
inc
ret
add
jns
mov
push
pop
add
nop
jecxz
pushf
cld
loop
ret
or
push
add
dec
add
inc
and
les
sub
inc
nop
ss
ja
pop
mov
inc
inc
sar
jl
popf
dec
sub
push
push
shl
jmp
adc
mov
mov
inc
pusha
sub
push
push
sbb
in
nop
push
ins
loopne
rcr
int3
mov
dec
jmp
sbb
add
fadd
xchg
mov
xor
mov
pop
xor
shl
sbb
jae
push
inc
retf
push
adc
test
int
fwait
add
icebp
mov
or
mov
ins
sbb
or
ss
xchg
inc
je
outs
mov
in
or
movzx
cs
lods
xor
sbb
sbb
and
sbb
lds
add
pop
(bad)
mov
and
movs
mov
lds
mov
cmp
fcom
xchg
ds
push
add
mov
push
cs
sub
inc
mov
imul
(bad)
mov
loop
mov
or
aam
or
xchg
jmp
jge
and
or
sub
jp
adc
jg
(bad)
and
aas
cwde
mov
jecxz
popf
lahf
and
or
jl
pop
rol
add
shl
lods
cmp
into
mov
inc
or
hlt
and
leave
push
adc
jbe
outs
cmp
enter
cmp
jb
mov
add
lods
lods
mov
cmps
and
add
jle
inc
imul
inc
jge
test
jge
mov
loope
cmp
ret
and
mov
test
sbb
push
dec
push
or
push
add
ret
add
jae
cmp
push
mov
imul
pop
nop
add
and
inc
xor
inc
xchg
sub
fs
mov
out
add
dec
push
mov
ficomp
dec
and
out
push
push
in
jo
fild
sar
push
sbb
ds
fcomi
dec
call
mov
mov
cmp
xchg
sbb
ins
loope
adc
and
div
push
test
mov
or
(bad)
loop
aam
mov
add
outs
sub
fild
pop
stos
dec
xchg
or
add
sub
push
xchg
shl
add
mov
xor
in
imul
lock
sti
(bad)
mov
or
aaa
mov
pop
dec
push
inc
sub
pop
into
idiv
sar
mov
pop
add
movs
add
loopne
and
cmc
rol
dec
sub
mov
js
sub
test
movs
popa
xchg
loopne
icebp
sar
pop
aam
dec
pop
repnz
fstp
or
xchg
js
or
mov
adc
nop
(bad)
mov
mov
sbb
mov
fs
rol
rcl
xchg
mov
fsubr
fadd
cmp
mov
or
cmc
or
inc
dec
adc
cmc
dec
sub
pop
mov
add
push
mov
(bad)
dec
adc
ret
add
push
nop
and
or
add
pushf
jg
push
sar
jnp
retf
dec
add
push
fcomp
out
adc
and
sub
ins
xor
jp
es
test
inc
jmp
dec
push
sbb
(bad)
adc
loope
xor
push
ficom
test
add
in
add
pop
mov
das
sar
or
mov
call
and
xchg
cmp
cmp
or
cmp
jl
cmps
in
test
or
cmp
or
es
mov
pop
fwait
js
jb
inc
icebp
pusha
inc
scas
fucomp
pop
pop
jb
mov
xchg
mov
dec
push
add
mov
jmp
push
add
xchg
xchg
dec
sub
div
inc
mov
test
or
cmps
sar
jne
or
lods
sub
out
iret
jae
out
dec
les
loop
mov
and
inc
retf
cs
mov
popf
call
ja
dec
xor
enter
inc
mov
and
cmp
je
ins
arpl
ins
call
jne
cmp
pushf
ins
inc
lods
ins
test
test
dec
nop
mov
adc
jo
xchg
shl
or
jae
aad
js
rcl
test
jnp
sbb
shl
(bad)
pop
enter
das
pop
(bad)
cmp
test
pop
cwde
sub
push
pushf
mov
nop
aaa
nop
mov
clc
jne
je
fwait
sbb
mov
adc
jae
mov
mov
adc
push
ins
sub
inc
ffree
loop
out
xor
fisttp
mov
(bad)
push
pop
sbb
push
leave
jns
adc
xchg
adc
jecxz
lock
sub
push
inc
mov
dec
push
std
mov
push
fsubr
outs
add
mov
(bad)
jne
pop
(bad)
pushf
adc
aam
and
xchg
test
sbb
fs
stos
fcomp
ja
mov
add
shr
hlt
and
sti
cmp
and
dec
add
pop
out
pop
mov
xor
jne
add
pop
cmp
aas
adc
push
test
jne
push
cmp
adc
inc
mov
mov
ss
inc
jbe
scas
fcomp
test
add
out
sbb
mov
scas
test
add
call
loopne
cmp
sub
out
repnz
mov
inc
mov
pop
lea
sub
jg
pop
xchg
xchg
dec
mov
push
xchg
shl
shr
mov
dec
jmp
xor
lods
rol
div
repz
dec
je
fist
mov
jne
cdq
or
pop
rcr
jne
icebp
adc
push
add
add
sub
mov
in
mov
sub
mov
jge
call
shl
scas
mov
jne
in
retf
lea
fwait
ret
mov
sbb
dec
or
mov
inc
in
ds
add
push
arpl
es
add
mov
in
pop
fnsave
cmp
leave
add
ror
fs
xchg
and
add
fnstcw
icebp
cli
or
aam
push
adc
clc
enter
out
pop
add
dec
or
pop
cmp
out
int3
adc
sub
jb
je
int3
mov
xchg
popf
test
not
xchg
cmp
jmp
data16
pop
or
dec
pop
les
jmp
mov
and
lock
lea
mov
add
rol
push
(bad)
out
fcomp
inc
idiv
push
xor
scas
sub
shl
xchg
dec
adc
jae
(bad)
xchg
test
xchg
cmp
shr
lock
mov
je
sti
stos
ror
push
jno
jo
add
xor
pop
mov
and
cwde
or
push
sub
pop
sub
icebp
mov
sub
dec
xor
xchg
cli
mov
sub
test
lock
cmps
test
push
adc
sub
jp
and
movs
dec
mov
and
mov
inc
add
mov
mov
sbb
clc
shl
add
and
inc
sbb
cmp
adc
add
jmp
mov
lods
cwde
push
stos
add
sahf
dec
lea
mov
mov
and
loope
movs
data16
add
je
ret
das
add
push
dec
push
adc
imul
push
cmovl
mov
pop
fadd
leave
loope
fcom
sar
leave
shr
outs
sub
cs
enter
xlat
fdiv
or
mov
sbb
mov
sbb
loop
das
add
adc
dec
sbb
into
push
xor
add
(bad)
push
jmp
outs
test
std
add
add
fdiv
aam
or
jo
mov
nop
ror
push
lods
ins
mov
cmp
enter
xor
sub
popa
jg
sbb
mov
out
or
cwde
ins
loop
ja
pushf
adc
cmp
(bad)
bound
xor
adc
xchg
sbb
xchg
dec
leave
loopne
sub
add
xchg
mov
or
enter
inc
imul
fimul
or
jecxz
sbb
sbb
and
mov
xchg
retf
add
xor
xchg
sar
js
mov
popa
sub
mov
sar
mov
inc
cmp
mov
in
fiadd
adc
mov
cmp
cmps
je
jo
mov
xchg
(bad)
sbb
nop
lods
pop
lods
sbb
nop
nop
dec
xchg
or
mov
(bad)
in
movs
pop
xchg
je
push
push
adc
mov
dec
ret
aad
pop
add
loop
mov
sub
pop
data16
adc
and
adc
cmp
push
arpl
pop
shl
and
cmps
cs
add
or
push
loopne
pop
cmp
or
test
adc
ret
je
jmp
and
or
jae
dec
cmp
xor
test
std
xchg
inc
aad
pop
mov
mov
inc
cmps
test
push
xchg
or
test
mov
pop
xchg
stos
jmp
retf
jno
sbb
and
and
imul
lds
dec
mov
xor
xor
imul
pushf
and
and
cmc
push
daa
pop
rol
in
call
mov
add
retf
jno
sbb
mov
ret
aas
adc
repnz
js
inc
mov
imul
dec
cmp
in
jp
dec
rcr
arpl
jge
cld
or
jle
inc
xor
clc
cmp
mov
(bad)
pop
or
adc
loopne
lock
pop
popa
adc
sbb
shl
sub
jmp
(bad)
mov
js
fsub
push
or
mov
arpl
push
jp
fs
or
cwde
shl
stc
lea
xor
sbb
mov
xchg
mov
es
jle
fadd
fdiv
ins
pop
movs
inc
movs
mov
sub
mov
mov
jge
es
inc
add
ja
push
mov
sbb
jge
jecxz
dec
cmps
sub
je
and
pop
aam
push
scas
jo
push
mov
dec
test
in
add
iret
mov
jno
cmp
jge
sub
cld
movs
sbb
inc
rcr
call
or
fidiv
push
imul
inc
push
pusha
cwde
mov
add
call
stc
fmul
shl
pop
(bad)
dec
rol
jo
pop
jne
bound
in
xchg
sbb
test
fisub
aas
add
add
in
pop
and
inc
sbb
rol
sub
sub
pop
lea
sub
sbb
mov
lds
adc
aaa
leave
pusha
or
sbb
bound
sti
fild
cmp
outs
push
or
push
fadd
cs
mov
hlt
lock
pop
ins
out
or
mov
int
jbe
mov
dec
sbb
ins
(bad)
cmp
shr
jp
jae
xchg
push
mov
lock
sub
cmp
and
and
jg
adc
sbb
xor
jle
inc
in
pop
inc
mov
fcmovbe
movs
(bad)
cmps
mov
add
add
and
nop
sub
pop
lods
cmps
xor
xchg
and
cdq
stos
stos
pop
addr16
leave
xchg
ret
repnz
ret
push
mov
arpl
rcl
pop
adc
aas
fwait
bound
fs
mov
sbb
inc
mov
sub
mov
jnp
mov
(bad)
sar
leave
aad
or
repnz
nop
retf
mov
movs
and
(bad)
fdivr
ret
mov
mov
dec
hlt
or
je
scas
mov
inc
rcr
add
jecxz
cwde
inc
jmp
das
pop
sub
push
pop
sub
xchg
shl
jle
push
add
daa
xchg
sub
or
daa
sbb
dec
jmp
pusha
nop
xchg
ins
sbb
repz
mov
mov
sbb
pop
add
or
xchg
fdivr
mov
test
out
adc
dec
call
ret
dec
arpl
pop
add
fnstsw
push
(bad)
mov
mov
fmulp
shl
popf
xchg
cmp
xor
clc
fsub
pop
inc
dec
jmp
lods
ret
or
and
and
pop
adc
sbb
cmp
cmp
adc
adc
jle
stos
adc
(bad)
jecxz
cld
and
into
cld
fwait
popf
mov
sub
idiv
int
adc
enter
(bad)
ins
pop
xchg
cdq
lea
mov
xchg
add
aaa
xor
add
les
rcl
fimul
ins
sub
dec
xor
scas
shl
in
mov
cwde
mov
push
les
std
repz
cmps
adc
nop
jo
push
in
clc
cdq
push
je
imul
push
cmp
js
mov
ja
imul
xchg
or
xor
push
movs
or
xor
lods
int
int
xor
add
add
scas
xchg
add
lods
enter
adc
int3
shl
fst
int
xchg
test
mov
pop
sbb
addr16
pushf
sahf
ins
jmp
pop
jae
xchg
pop
call
pop
adc
inc
dec
popa
and
loope
push
mov
in
lea
shl
push
and
sbb
leave
and
push
out
fstp
lods
or
cli
sub
std
push
xchg
cld
sub
cmp
and
dec
mov
dec
or
aam
push
cs
fidivr
pop
xor
add
dec
in
adc
aas
leave
pushf
ret
shl
or
fimul
push
push
dec
mov
mov
xor
xchg
adc
dec
add
je
or
sub
mov
dec
test
test
jmp
es
mov
inc
out
inc
pop
popa
or
and
push
outs
pushf
pop
inc
dec
cmp
pop
push
and
fisub
je
xor
int3
dec
inc
mov
push
mov
ds
stos
lock
xor
fwait
cmp
mov
rcl
lock
pop
and
lods
(bad)
adc
mov
hlt
pop
sub
mov
add
leave
push
imul
add
test
mov
xor
repnz
or
ins
jo
out
rol
adc
inc
adc
mov
icebp
mov
nop
inc
inc
and
lock
cld
inc
adc
movs
mov
mov
jae
sbb
mov
mov
and
cmp
and
xor
cld
jns
shl
xchg
jbe
dec
lods
fisttp
in
fcomp
rcl
mov
dec
cwde
cwde
je
out
shl
fsubr
lea
jl
mov
(bad)
or
or
mov
sbb
xor
cmp
test
rol
test
mov
xchg
jno
cmp
xor
mov
xor
inc
push
loopne
sub
dec
cmp
xchg
dec
jnp
adc
dec
ins
adc
lea
mov
jmp
cmp
je
or
cmps
js
sbb
lea
in
dec
test
mov
test
dec
pop
cmp
push
ins
inc
jmp
xchg
test
sub
add
mov
xlat
push
call
rcr
mov
inc
push
mov
mov
add
sub
push
scas
jno
add
sub
lds
and
push
push
cmp
and
in
jg
mov
jmp
sub
in
cmp
mov
fdiv
(bad)
mov
push
and
add
movs
mov
leave
js
xchg
add
jbe
jp
or
push
stos
aaa
mov
(bad)
inc
cmp
das
inc
xor
repz
mov
sbb
push
jmp
or
or
mov
popf
aam
adc
mov
test
nop
xchg
dec
dec
jnp
mov
stos
pop
mov
pop
int3
pop
js
test
xlat
cmp
or
xchg
mov
add
cmp
or
(bad)
retf
(bad)
fisttp
cmps
call
icebp
gs
les
loope
addr16
sub
push
adc
es
pop
js
dec
push
sti
cmp
xchg
fistp
ds
xor
mov
sub
dec
push
xchg
mov
pop
aaa
xor
sahf
xchg
test
xchg
out
adc
xor
push
les
ins
lock
cdq
xor
rcr
popf
sub
xor
inc
xor
push
sbb
ret
(bad)
pusha
clc
lods
push
and
adc
and
add
mov
cmp
jg
mov
test
(bad)
mov
sbb
push
xor
iret
rol
ret
sub
inc
jle
rol
sub
in
mov
add
sub
cld
push
pusha
and
std
loopne
lahf
add
push
out
or
bound
xchg
and
stc
inc
(bad)
push
movs
aad
mov
push
push
retf
in
jl
ins
ins
jo
mov
je
and
mov
xchg
pop
stos
pop
mov
(bad)
push
xor
bound
mov
xchg
pusha
dec
mov
push
add
sbb
inc
and
and
pop
mov
mov
adc
inc
adc
fild
add
adc
pop
and
cmp
inc
dec
pop
imul
xor
int3
add
push
inc
cmp
lock
cmp
fiadd
inc
sbb
xchg
xchg
lods
sub
popa
cmp
cmps
cmp
test
inc
push
test
mov
xor
mov
in
aam
inc
adc
movs
js
in
add
or
fist
les
inc
sahf
or
sbb
cdq
add
shl
outs
arpl
into
in
xor
mov
ds
rcl
(bad)
clc
mov
push
push
add
jbe
mov
cld
xor
and
or
inc
mov
dec
(bad)
fldenv
xchg
jmp
imul
repz
push
sbb
and
xchg
and
or
das
pop
jae
je
sub
add
sbb
jecxz
jp
sar
ss
enter
lds
mov
mov
jmp
adc
rcr
or
mov
jmp
lahf
pop
lock
adc
icebp
pusha
ret
mov
in
mov
test
cmp
idiv
add
mov
add
jns
in
push
add
pop
push
mov
sub
dec
(bad)
sbb
lea
push
and
scas
or
pop
cmp
sub
mov
pop
push
xor
add
inc
cmp
jo
jmp
gs
inc
jne
lock
xor
add
xchg
mov
into
push
or
rol
daa
in
mov
imul
sbb
mov
add
fs
push
add
sahf
or
push
adc
fldcw
mov
or
nop
mov
and
or
or
inc
mov
ins
std
lods
popf
ret
movs
dec
(bad)
repnz
add
sbb
data16
test
movs
ds
sbb
ret
xchg
fwait
mov
rol
into
mov
ins
sbb
pop
pop
add
loope
pop
inc
dec
and
enter
fisub
or
xchg
cmps
scas
test
cld
adc
sub
add
mov
mov
dec
mov
lahf
rol
sub
gs
scas
cld
push
sub
sub
scas
fnstcw
into
push
or
mov
mov
aam
and
adc
mov
xor
or
ret
fild
shl
xchg
add
pop
xor
imul
jbe
xor
rol
rol
push
xor
pop
mov
pop
mov
push
out
sbb
dec
or
xor
adc
jl
add
ds
sbb
cmp
jge
jmp
cmp
add
add
mov
mov
lods
push
retf
inc
clc
inc
adc
pop
adc
add
sub
cmp
loope
mov
fst
or
sar
cli
add
push
icebp
cwde
jle
sub
cmp
fbld
call
mov
shl
jmp
(bad)
(bad)
and
call
dec
aaa
lods
adc
popf
imul
pop
push
pop
and
mov
mov
ins
mul
adc
ins
jmp
aas
jne
adc
cmps
dec
arpl
ret
pop
xchg
adc
rol
mov
outs
mov
cmp
enter
inc
or
sahf
push
pop
leave
inc
cmp
dec
xchg
mov
dec
leave
add
mov
sub
retf
add
ds
push
push
pop
mov
inc
push
jo
jge
mov
xchg
ror
pop
push
mov
jmp
pop
push
shl
les
or
sbb
add
and
shr
test
xchg
add
call
or
or
push
test
xor
push
push
movs
(bad)
adc
lods
push
test
lock
rol
frstor
loopne
push
and
xor
sub
or
xchg
clc
push
mov
add
out
xchg
int3
gs
dec
pop
mov
inc
imul
iret
das
jmp
jbe
mov
dec
sub
add
lods
sar
sub
ja
mov
enter
and
or
sub
xlat
xor
nop
int
pop
in
add
ins
cmps
push
cmp
push
sub
rol
mov
push
dec
inc
pop
outs
mov
jl
sub
pop
mov
scas
sub
dec
mov
push
adc
cwde
push
test
push
or
neg
cmp
jbe
add
repz
shl
or
imul
and
outs
shr
jae
ret
mov
ins
into
add
cmp
mov
hlt
jmp
and
mov
in
inc
sbb
dec
iret
jge
popa
or
ror
push
jnp
lds
cwde
jp
popa
dec
test
test
add
aaa
(bad)
test
(bad)
ret
fist
cwde
mov
jae
pop
stos
imul
cmp
imul
fbstp
sub
jno
and
push
inc
mov
dec
jns
push
popa
jo
cmps
and
mov
outs
cmc
jbe
add
dec
mov
movs
lods
rcl
test
or
test
pop
sbb
sbb
push
mov
adc
enter
(bad)
mov
push
push
pop
sbb
fsubr
add
mov
adc
add
mov
inc
cwde
xchg
nop
ins
push
push
(bad)
push
mov
fmul
sub
shl
add
cdq
ins
xor
mov
push
ror
push
add
and
aaa
mov
dec
stos
adc
int
daa
or
or
loop
test
sar
jg
je
sbb
je
cli
fstp
xchg
xor
push
pop
fmul
adc
push
pop
loop
sub
jp
std
inc
mov
test
inc
push
add
es
inc
fprem
xchg
pop
jb
scas
mov
inc
fst
call
cmp
pop
cmp
mov
idiv
out
inc
pop
aaa
mov
dec
dec
xchg
sbb
enter
test
sbb
mov
pop
and
sbb
mov
pop
push
xor
or
mov
rol
add
ja
cmp
repz
pop
or
sbb
cmp
fldlg2
jb
add
mov
mov
es
ins
call
mov
push
or
and
rcl
enter
add
aam
test
cmp
mov
mov
popa
das
push
cmps
int3
fst
pop
fidivr
call
push
pusha
dec
mov
adc
ins
loope
test
icebp
not
enter
jo
loope
ror
pop
fiadd
sbb
popf
into
lahf
or
rcr
adc
push
dec
repz
(bad)
and
hlt
fs
mov
lods
je
mov
mov
jmp
cmp
and
rol
inc
fild
push
push
inc
mov
leave
ds
repnz
push
jp
inc
mov
loopne
xchg
xchg
das
fld
sub
ret
repz
or
push
out
jne
sbb
push
cmp
jmp
add
sub
or
enter
adc
jle
pop
lock
stos
jecxz
in
sub
adc
jp
rcr
mov
and
sub
xor
jl
inc
in
mov
mov
xchg
cwde
lock
(bad)
lock
xchg
jo
inc
cmp
je
mov
(bad)
in
mov
mov
and
jl
pushf
(bad)
jno
or
das
xchg
pop
imul
cs
retf
push
pop
push
pop
jns
or
ins
pusha
or
dec
sbb
inc
mov
lods
add
sub
or
or
mov
pop
out
outs
inc
or
xchg
mov
or
dec
lahf
add
dec
in
loopne
inc
mov
int
shr
adc
aad
add
sbb
or
mov
xchg
clc
mov
add
call
push
mov
add
fcomp
mov
adc
mov
jl
pop
or
add
add
add
scas
sub
scas
(bad)
or
cmp
pop
xlat
and
add
fmul
ss
or
movs
mov
pop
leave
in
fdivr
(bad)
lea
and
retf
pop
push
jno
mov
mov
cmp
jge
mov
sbb
pop
jg
cmp
or
or
arpl
sahf
xor
jge
inc
pop
adc
or
shr
sbb
test
mov
xor
pop
or
jecxz
fst
movs
je
out
pmaddwd
mov
add
xchg
addr16
popa
rol
or
enter
add
cwde
dec
mov
ret
add
push
scas
add
adc
sub
into
push
dec
sbb
pusha
cmp
add
xchg
push
je
mov
sbb
out
sbb
movs
sbb
pop
sub
xchg
xchg
in
add
pop
adc
je
dec
mov
adc
cmp
ffreep
popa
add
daa
scas
repz
cdq
dec
mov
mov
or
adc
imul
or
inc
scas
inc
sub
js
pop
in
sbb
pop
xor
adc
xchg
mov
arpl
jge
push
sbb
mov
aaa
cmc
push
test
loopne
push
dec
inc
add
jl
pop
imul
pop
sub
in
xor
cli
hlt
mov
mov
adc
add
and
adc
es
das
fisttp
cmp
and
cmp
xor
cmp
sub
jecxz
mov
push
xchg
push
add
sbb
or
jge
add
pop
sbb
xor
push
(bad)
les
mov
movs
jmp
jp
sar
or
icebp
jle
and
daa
retf
mov
inc
or
jl
mov
add
popa
mov
sbb
inc
sub
ins
cmp
pop
cs
dec
hlt
push
shl
sbb
mov
aaa
jnp
in
loopne
mov
jo
cmp
sar
pop
mov
pop
lock
or
rol
cmc
adc
sub
jge
push
test
push
pop
adc
add
pop
and
ficomp
inc
paddw
cmps
test
rcr
xor
dec
je
or
adc
out
sub
sub
or
mov
jle
sbb
adc
push
ins
fs
nop
and
sub
imul
sub
ror
lods
push
inc
nop
hlt
pushf
jge
add
jae
mov
aas
pop
call
adc
mov
sbb
push
mov
push
cmp
in
sbb
(bad)
icebp
mov
dec
hlt
adc
cmps
rcr
jecxz
pop
sbb
pusha
adc
and
xchg
fs
or
xor
add
jle
add
inc
shr
inc
cli
int
and
pop
jno
shr
cmp
jg
xchg
jmp
fsub
clc
sbb
jns
add
jmp
pop
cmp
jno
clc
xchg
mov
and
sub
fisttp
lea
imul
(bad)
sub
rcl
dec
mov
inc
dec
mov
call
test
xchg
xchg
sub
lds
ror
inc
push
fbstp
add
and
in
xor
rcl
cmp
cmps
xor
xor
xor
push
mov
cmp
fimul
mov
fist
jecxz
dec
stc
xor
dec
dec
je
push
sbb
or
je
and
in
jmp
and
ins
sub
dec
or
lea
push
add
adc
or
das
adc
(bad)
sti
adc
ins
sbb
dec
add
enter
sbb
sbb
mov
(bad)
test
ds
inc
pop
mov
lea
pop
dec
jbe
fisub
popa
jmp
je
or
xchg
dec
sbb
lock
mov
dec
mov
aaa
sbb
or
ror
cmp
mov
inc
mov
cmp
(bad)
enter
push
(bad)
fcom
iret
cli
loopne
push
jl
pop
cmp
jle
popf
push
scas
jne
push
pop
movs
imul
and
lea
out
out
dec
aaa
(bad)
ja
mov
inc
mov
xor
in
xor
fldz
out
or
xchg
sti
lea
sub
sub
sar
adc
rcr
shl
ins
(bad)
push
jmp
jecxz
push
push
fwait
out
xor
push
into
add
pop
shl
cmp
push
push
mov
sub
aad
pop
repnz
push
fs
mov
push
adc
sub
jno
sub
adc
add
and
pop
mov
push
imul
dec
add
leave
push
pop
cmp
xor
ret
repz
loop
or
mul
jo
inc
adc
add
jge
ror
outs
or
sahf
mov
mov
pop
(bad)
movs
rcl
test
xor
shl
and
add
mov
aam
mov
popf
jne
inc
fcom
loope
dec
addr16
enter
inc
int3
jle
and
inc
enter
adc
push
sar
mov
not
les
daa
push
enter
add
dec
add
mov
xor
aam
adc
fs
ret
xchg
ror
loop
add
mov
sar
dec
add
inc
loopne
inc
call
ds
push
ret
sbb
adc
pop
and
ret
outs
test
jns
(bad)
sub
cld
dec
jne
shr
inc
bound
cmps
cdq
mov
dec
popa
push
retf
push
dec
jge
in
mov
pop
sub
mov
inc
pop
cwde
ja
fcom
mov
loope
dec
dec
leave
inc
sbb
jo
inc
dec
ins
int3
xchg
xor
rcl
add
test
fst
lock
push
clc
les
mov
cmp
(bad)
clc
(bad)
into
cld
jge
popa
push
xchg
inc
sub
xchg
add
ret
pop
test
adc
movs
rol
pop
shr
adc
inc
mov
xor
jne
push
push
leave
jbe
dec
sbb
adc
inc
add
sub
add
ins
sbb
inc
cmp
add
jmp
mov
cwde
dec
and
xor
add
sbb
mov
shl
rcl
imul
sub
push
lea
sbb
and
mov
or
jmp
inc
clc
sub
mov
push
ret
ret
mov
cmp
les
sbb
adc
mov
test
sbb
mov
inc
xchg
and
scas
mov
stc
jge
inc
xchg
xor
push
mov
or
adc
mov
pop
nop
xchg
or
movs
mov
lock
push
pop
dec
nop
pusha
enter
mov
and
(bad)
movs
ret
lods
loopne
cmc
sbb
popa
mov
aam
mov
sub
pop
adc
adc
loope
rol
xchg
fist
xchg
push
or
xlat
outs
adc
cld
aad
jne
adc
push
sub
add
shr
add
add
es
cmps
imul
add
or
or
add
shl
ret
dec
adc
leave
sub
lock
adc
leave
pusha
xchg
(bad)
retf
dec
call
sub
jae
pop
nop
in
(bad)
aaa
bound
adc
xor
fcom
cmp
arpl
or
add
call
push
xor
push
push
ss
inc
retf
and
das
xchg
or
test
sbb
sub
pop
xor
push
inc
xor
mov
push
xor
mov
mov
mov
or
mov
add
adc
push
mov
rcr
lahf
inc
jae
lods
pop
sub
shl
shr
sub
dec
(bad)
push
or
xor
mov
and
call
push
push
mov
test
mov
and
mov
pusha
call
mov
std
daa
push
add
fmulp
sbb
adc
sub
or
sbb
cmp
dec
nop
sahf
or
adc
imul
pop
or
ret
ins
popa
jo
sub
shl
scas
inc
cmps
adc
or
and
aad
movs
and
mov
mov
adc
dec
pop
dec
and
push
test
aas
test
mov
or
sub
sub
sub
xor
sub
xchg
cwde
xchg
mov
push
jne
std
add
mov
mov
sub
rol
inc
mov
add
daa
ret
nop
and
xor
(bad)
dec
pop
dec
pop
outs
adc
inc
xor
je
pusha
cmps
add
cmp
xor
aas
mov
sub
out
mov
aad
jnp
repz
cmc
or
movs
es
loope
bound
add
call
outs
icebp
xchg
add
mov
lahf
(bad)
lock
add
or
mov
push
stos
jno
dec
inc
mov
dec
loopne
xchg
shl
ja
inc
xor
(bad)
test
push
push
push
dec
(bad)
dec
add
scas
adc
in
iret
mov
sub
jo
cmp
xor
mov
cmp
cmps
test
adc
jo
(bad)
bound
dec
iret
and
sub
shl
inc
sbb
sub
adc
or
pushf
jmp
bound
fdiv
imul
sbb
add
push
arpl
stos
xchg
(bad)
in
pause
pop
mov
mov
test
aam
cli
push
push
mov
enter
mov
outs
fdivr
mov
inc
mov
sbb
ins
shr
lods
pop
dec
jmp
sub
jg
scas
and
fdivr
loop
xchg
nop
inc
xor
test
add
hlt
cmp
dec
pushf
push
data16
movs
mov
jo
inc
sub
rcr
lods
jno
or
jmp
(bad)
lods
shl
in
in
xor
sbb
adc
out
adc
sbb
(bad)
mov
out
add
cmc
pop
and
mov
aad
adc
inc
or
xchg
test
cmp
adc
inc
sbb
in
in
mov
push
je
mov
push
out
or
sbb
mov
jo
and
dec
fsub
aaa
xor
ficom
sub
pop
enter
add
lea
xchg
add
xlat
push
xchg
mov
dec
ins
sub
add
js
cmp
lds
xor
sub
xchg
or
add
add
(bad)
or
push
inc
or
inc
add
mov
xor
mov
lds
mov
ins
sub
inc
dec
sar
out
xchg
inc
(bad)
stc
jecxz
mov
arpl
lods
push
test
popf
adc
popf
dec
pop
test
dec
movs
pop
js
push
ret
leave
or
jmp
xchg
push
xchg
xor
jae
add
test
pop
or
jne
ror
pop
lods
push
pop
aad
xchg
pop
cmp
das
loopne
push
xchg
xor
jge
jo
mov
pop
imul
lods
xor
das
xchg
sub
enter
loope
retf
and
ins
call
bound
inc
add
out
pop
popa
lea
push
push
es
jno
xor
push
ins
test
and
rcl
push
inc
and
int3
pop
ins
or
out
inc
pop
or
xor
push
jecxz
ror
sahf
mov
cmp
mov
and
jg
ins
(bad)
test
xchg
je
add
or
pop
nop
adc
add
leave
xchg
dec
movs
mov
or
cwde
add
mov
adc
or
inc
pop
push
popf
xchg
loope
adc
out
push
xchg
pop
mov
mov
sbb
jp
push
xor
inc
add
or
push
mov
inc
xchg
sti
popa
add
aaa
cwde
cmps
shl
mov
out
scas
mov
popf
adc
jnp
(bad)
sbb
or
jno
aam
dec
(bad)
aad
fmul
mov
or
pusha
dec
mov
movs
clc
push
dec
clc
mov
shl
mov
xchg
fisub
retf
push
xchg
fstp
sbb
jle
mov
cwde
fcomp
fcmovb
jmp
aad
aad
adc
xchg
and
rcl
push
dec
jl
pushf
add
pop
xor
(bad)
call
and
adc
adc
pop
rol
test
inc
imul
or
nop
enter
cmp
mov
scas
aad
push
movs
xchg
dec
add
and
daa
mov
rol
xchg
fnstenv
(bad)
movs
sbb
and
and
cdq
rol
mov
push
mov
and
fstp
in
mov
jg
jae
hlt
pusha
loopne
into
jmp
jg
xchg
cmps
sbb
add
jno
adc
inc
imul
icebp
sub
rol
mov
popf
daa
and
std
ss
inc
cmp
and
dec
jno
adc
jnp
aas
sub
cdq
add
idiv
and
clc
dec
jne
ss
sahf
pusha
xor
(bad)
add
pusha
jae
rol
fs
imul
sbb
dec
sbb
adc
sbb
mov
dec
enter
xor
push
imul
push
xor
add
je
push
sub
cmc
push
fld
dec
sbb
repz
xchg
mov
jg
adc
inc
pusha
jge
popa
test
jg
sub
call
add
dec
mov
xor
nop
and
add
and
rcr
shl
setle
test
jns
leave
inc
sub
scas
in
in
mov
or
cmp
or
pop
push
jnp
daa
push
cmp
call
lds
(bad)
cmp
test
pop
mov
pop
sti
sub
add
jb
sbb
cmp
dec
cmp
or
(bad)
ss
popa
inc
or
cmp
add
dec
adc
pop
xor
dec
test
inc
sbb
dec
pop
std
xchg
cwde
(bad)
vmovups
pop
cmp
xchg
inc
loopne
sbb
jae
inc
dec
sub
sahf
sbb
add
js
or
dec
or
add
test
or
lock
xor
add
enter
mov
adc
popa
adc
cmps
lock
stos
dec
mov
push
jmp
push
push
movs
rol
retf
std
loopne
adc
pop
jne
sub
ds
pusha
int
hlt
jnp
push
dec
loop
or
jno
es
sub
adc
ins
(bad)
out
or
lahf
dec
xchg
mov
jmp
or
xor
(bad)
cld
pusha
mov
jno
movs
mov
add
mov
loope
loop
es
mov
(bad)
sar
cmp
and
aad
ret
add
push
pop
jp
push
sbb
mov
mov
or
adc
outs
pop
int3
xchg
add
dec
mov
sbb
sub
imul
lock
jo
lea
shr
or
sub
or
xchg
lods
(bad)
or
or
imul
movs
pop
add
mov
add
fld
xchg
test
jl
push
(bad)
lea
lods
fsubr
enter
dec
rcr
out
and
xchg
fnstenv
sub
call
and
and
and
add
fld1
push
mov
jae
shl
ret
test
cmp
xchg
push
mov
test
adc
ret
xor
pop
stos
add
dec
loop
in
add
inc
repnz
xchg
push
xchg
mov
xchg
cld
mov
movs
or
fimul
das
mov
aad
es
mov
or
mov
or
xor
or
lock
inc
sbb
repz
daa
cmps
inc
cld
iret
xor
and
cmpxchg
inc
cmp
sar
xchg
movs
pop
xor
inc
data16
clc
or
push
pushf
push
(bad)
sub
nop
inc
add
jo
sub
inc
dec
out
shr
or
pop
pop
adc
xchg
mov
leave
lods
push
jl
cdq
adc
xchg
sub
mov
pusha
div
pop
add
enter
mov
ja
(bad)
push
or
jmp
push
adc
xchg
push
add
daa
inc
call
adc
xor
add
and
int
es
adc
aam
sbb
nop
xchg
xor
xor
and
mov
adc
add
jp
idiv
and
push
rcl
or
jb
adc
xor
push
xlat
lea
adc
cmp
rol
aad
dec
or
dec
mov
mov
clc
gs
rcl
adc
(bad)
xchg
pop
je
jmp
cwde
in
nop
lock
in
adc
dec
repnz
mov
add
pusha
ins
mov
add
addr16
sahf
mov
dec
das
mov
dec
shl
or
outs
fbld
outs
and
mov
mov
hlt
mov
bound
adc
pop
pop
ja
jne
push
pop
xor
fld
out
in
je
adc
rcl
clc
das
xor
into
xlat
in
push
arpl
mov
ret
sub
add
cmp
sub
outs
mov
hlt
sbb
pop
mov
adc
movs
pop
sub
or
pop
nop
mov
mov
dec
and
mov
(bad)
fnstenv
push
jno
jne
lea
cs
push
pop
fld
(bad)
(bad)
nop
or
and
mov
cmps
xor
jl
xor
ror
adc
jae
fwait
mov
stos
cdq
out
popf
or
push
mov
mov
push
xor
pop
inc
(bad)
int
fnstcw
and
ror
dec
add
dec
(bad)
pop
xchg
pop
inc
jecxz
push
icebp
cmc
inc
fisubr
add
xchg
je
or
cmp
cmps
div
fidiv
sahf
adc
loopne
add
adc
sbb
into
movs
jno
sub
dec
retf
mov
sbb
(bad)
push
frstor
movs
sub
add
inc
add
sbb
loopne
jecxz
popa
or
jmp
cmp
ins
gs
test
ret
xchg
xchg
(bad)
mov
ins
cwde
add
aam
cdq
or
mov
rcl
movs
int
push
xchg
push
(bad)
and
xor
push
mov
je
fstp
rcl
push
push
push
pusha
int
pop
push
popa
repz
ss
(bad)
sbb
adc
loopne
pop
dec
jecxz
fcmove
sbb
and
fadd
aad
mov
push
mov
loopne
jns
push
cmp
imul
sub
xor
sub
mov
dec
and
pop
or
js
lahf
sahf
pushf
push
(bad)
push
fst
(bad)
lea
adc
push
js
fld
and
aaa
or
push
inc
xor
ds
inc
cmp
xor
adc
stc
pop
or
je
cmp
sbb
mov
mov
jecxz
push
sbb
add
sbb
xor
dec
mov
fdiv
xchg
and
sahf
pop
pop
repnz
mov
sub
mov
pop
xor
xor
xchg
inc
xor
addr16
loopne
mov
pop
mov
mov
adc
pusha
stc
inc
adc
pop
js
mov
sbb
mov
mov
xchg
test
cmp
enter
add
xor
adc
mov
push
jmp
pop
mov
xlat
sub
cwde
lds
popa
jae
adc
push
push
pop
cs
fs
xor
lods
outs
enter
push
mov
iret
imul
push
rcl
cmp
jg
ds
loopne
mov
inc
(bad)
stos
add
inc
inc
add
(bad)
mov
cmp
stc
dec
mov
xchg
xor
push
xchg
sbb
(bad)
movs
(bad)
nop
cmp
cmp
(bad)
imul
or
sub
xor
add
push
mov
imul
loopne
mov
xor
jg
cmp
invd
out
jl
pop
add
jnp
jmp
pop
jge
pop
sub
lea
mov
inc
xchg
or
push
in
sar
dec
iret
sbb
xchg
add
dec
push
xchg
or
lock
and
lods
jmp
stc
adc
test
fwait
clc
imul
in
test
les
mov
push
add
add
jl
sub
xor
(bad)
dec
pushf
sub
cmc
rcl
daa
dec
movs
xchg
movs
dec
or
fadd
aam
call
ror
cmp
jle
sbb
inc
sub
jbe
mov
mov
xchg
sub
dec
jp
dec
sbb
push
jl
add
pop
inc
jo
pushf
sub
sbb
mov
or
sar
retf
add
mov
or
jns
add
xchg
add
in
hlt
jle
in
add
ins
adc
or
add
mov
(bad)
lods
pop
ja
lods
dec
sub
lahf
add
les
out
add
lea
push
dec
jo
dec
xchg
inc
ins
sbb
push
xor
lds
je
sub
xchg
pop
sub
xchg
add
cs
adc
sbb
add
mov
xchg
jns
inc
movs
dec
jl
jmp
push
ret
mov
ins
jns
dec
add
ret
ror
add
cmp
push
xchg
mov
cmp
sbb
pop
and
popa
mov
mov
or
xchg
icebp
jns
pop
mov
sbb
sub
pop
mov
xchg
outs
punpckhbw
and
fmul
jp
sbb
test
test
mov
test
cdq
mov
add
ret
inc
jo
gs
xor
dec
and
dec
xor
mov
sub
iret
in
ret
push
stos
in
adc
push
clc
cmp
dec
xor
in
popa
retf
retf
adc
add
imul
jle
and
xchg
arpl
jmp
jge
jg
add
xor
inc
pop
or
imul
mov
adc
sub
inc
sbb
mov
push
jmp
xchg
push
or
dec
dec
inc
repz
clc
ret
lea
test
nop
popa
sbb
or
test
jle
push
cmp
push
sub
adc
pop
inc
jo
movs
arpl
push
nop
pop
ss
sbb
mov
shl
inc
inc
pop
loope
mov
ficomp
jmp
ss
test
into
fld
dec
rol
es
leave
mov
ret
sub
add
nop
or
sbb
add
add
or
test
pop
sbb
out
xchg
in
fld
sbb
pop
jle
jb
inc
loope
popa
data16
int
cli
fwait
mov
mov
jl
dec
shl
fstenv
xor
repnz
aaa
fistp
jo
enter
pop
retf
xchg
xchg
xor
adc
add
pusha
push
and
add
cli
xor
out
jg
lea
pop
xchg
gs
push
add
in
gs
jecxz
sbb
xor
repz
movs
add
adc
mov
jne
fild
imul
shl
push
movs
add
lds
cmp
cmp
pop
ficom
pop
push
sbb
lock
or
push
je
lea
enter
sbb
xor
dec
lock
adc
add
fprem1
mov
jl
sub
push
mov
call
jnp
xchg
add
aad
sahf
and
shl
outs
dec
not
sub
js
(bad)
cld
add
iret
adc
daa
inc
mov
and
ds
mov
fst
jmp
jns
lods
inc
sub
sub
sub
loopne
(bad)
aam
call
mov
and
sub
sbb
sbb
add
das
push
xchg
(bad)
push
cmc
ins
push
add
xchg
stos
jbe
jbe
cmp
and
sub
or
iret
scas
popa
or
mov
mov
and
(bad)
sar
test
pop
push
(bad)
push
mov
(bad)
sbb
imul
out
gs
xor
jl
xor
sbb
int
mov
lods
or
rcr
push
jb
xor
sub
push
and
pop
sub
pop
in
cmp
dec
push
dec
leave
and
retf
mov
push
mov
jno
dec
jns
mov
call
imul
xor
and
mov
sbb
fucomi
jle
dec
inc
mov
push
dec
fidiv
pop
retf
jnp
xchg
xor
and
hlt
inc
in
stc
ficom
jb
div
sub
and
sbb
push
add
xchg
test
in
push
adc
push
mov
push
sub
leave
or
mov
mov
jno
lods
mov
ret
js
xor
icebp
pop
or
retf
packssdw
sbb
cmps
pop
lea
sbb
enter
push
push
inc
lods
xchg
xchg
dec
push
xor
fdivr
pop
or
push
ret
add
dec
pusha
add
add
or
add
sub
fld1
cmp
es
scas
push
pop
mov
xor
call
xchg
sar
cdq
enter
and
in
aas
sub
inc
das
xor
jg
dec
(bad)
sub
mov
push
add
or
fadd
enter
movs
retf
icebp
call
inc
xchg
and
lahf
test
inc
test
jne
sar
mov
xchg
fiadd
into
mov
add
in
inc
sub
xor
push
adc
pop
inc
sub
cs
sbb
rcl
sbb
ror
cmp
and
xchg
sub
inc
push
add
and
cld
push
mov
or
imul
mov
xor
sbb
add
dec
xchg
sbb
cmp
add
mov
adc
jge
pop
xor
ins
add
mov
dec
xchg
jecxz
add
jnp
xchg
mov
sbb
inc
mov
sti
cmp
inc
xchg
adc
in
xor
push
jge
sub
sbb
sbb
movs
xchg
push
int
push
call
mul
dec
imul
outs
mov
hlt
add
ins
int
pop
std
test
jmp
dec
add
outs
add
jbe
(bad)
or
mov
out
es
xchg
adc
add
jno
ret
push
sbb
inc
or
out
jge
outs
mov
lock
idiv
ret
adc
pop
push
fs
push
or
mov
mov
inc
ss
dec
sbb
fild
push
or
adc
jmp
and
ss
retf
pop
push
daa
inc
loop
cmc
test
adc
mov
pop
inc
push
fcomp
es
jmp
add
inc
add
and
das
and
dec
mov
out
dec
push
xor
(bad)
inc
sbb
aam
and
add
call
mov
add
dec
ins
xchg
out
dec
and
mov
cmp
xchg
inc
jl
pop
inc
movs
mov
bound
cmp
xor
leave
sub
pop
mov
push
adc
sbb
pop
clc
inc
xchg
push
clc
mov
xor
sbb
sub
pop
scas
add
int
(bad)
and
push
je
or
xor
js
xchg
and
or
arpl
and
pop
rcr
not
pushf
call
jmp
and
gs
jmp
sub
lds
sbb
xchg
data16
and
dec
add
adc
ret
pop
cmp
dec
inc
movs
mov
fiadd
(bad)
aad
or
mov
add
cld
mov
int3
jnp
bound
inc
dec
pop
pop
xchg
cdq
mov
sub
sub
jmp
cmps
jmp
(bad)
and
aaa
jle
pop
jl
jo
loopne
inc
mov
and
pop
iret
ja
push
pop
inc
push
adc
jnp
jo
ss
push
push
(bad)
jmp
(bad)
aam
inc
nop
push
or
pop
pop
pop
fwait
pusha
lods
jl
mov
or
cmp
nop
cld
test
and
es
rol
mov
rol
inc
call
mov
xchg
xor
clc
rcr
jmp
push
push
imul
jne
push
xor
inc
popa
mov
ins
pop
mov
mov
xor
and
sbb
dec
test
lahf
mov
add
aas
and
xor
(bad)
mov
adc
xchg
add
cmp
push
lea
fnstenv
scas
xchg
jecxz
jge
inc
loop
pop
rcr
ss
nop
sbb
sbb
jae
lgs
imul
pop
pop
cmp
jle
add
and
loope
mov
add
cmp
add
inc
lock
jge
jns
add
pusha
dec
sub
or
jge
mov
shl
adc
mov
add
sub
dec
mov
sub
push
jmp
dec
dec
inc
dec
add
dec
or
pop
and
es
pop
pop
sbb
xor
mov
inc
dec
mov
mov
lock
rol
rcl
or
aad
add
adc
dec
aaa
dec
mov
stos
push
andnps
xor
add
inc
shl
or
dec
popf
or
jne
sub
cdq
or
inc
jo
mov
mov
loope
pop
sub
push
or
adc
mov
sub
jne
pop
push
dec
cmp
jge
dec
inc
loopne
xor
invd
xor
inc
sar
mov
or
leave
in
sbb
aaa
mov
jno
and
ror
adc
push
jno
jmp
dec
es
mov
adc
cmp
inc
and
dec
mov
std
in
inc
xor
pop
adc
sub
dec
and
inc
xchg
in
nop
loopne
and
or
(bad)
dec
xor
mov
jmp
pop
mov
mov
sbb
loop
test
dec
cmp
ret
mov
gs
pop
sub
push
mov
mov
outs
sbb
add
pop
add
cmp
dec
gs
cmp
je
mov
jo
lahf
lea
stos
sub
jo
fisttp
add
(bad)
(bad)
xlat
jnp
pop
and
cmp
cli
jge
enter
mov
or
xchg
sbb
xor
xchg
xchg
push
jmp
enter
dec
add
or
enter
or
dec
shl
cdq
and
nop
nop
enter
rol
mov
stos
jne
out
jb
add
and
test
(bad)
jo
mov
xchg
dec
add
inc
cmp
(bad)
push
and
clc
push
rcl
jbe
mov
in
mov
cmp
or
movs
test
lock
stos
test
fsubr
call
out
into
rol
lea
addr16
pop
clc
xchg
dec
es
call
pusha
mov
inc
sub
shl
xchg
and
inc
icebp
push
jns
(bad)
cli
adc
sub
adc
cmp
and
adc
xchg
mov
adc
(bad)
mov
push
mov
or
and
xchg
xlat
add
and
fiadd
sbb
hlt
mov
jne
nop
mov
add
pop
sbb
inc
add
dec
ror
das
and
mov
pusha
xlat
test
push
fdiv
sbb
and
inc
mov
int
aad
shl
cmc
mov
inc
cmp
mov
push
ins
dec
(bad)
jle
(bad)
sbb
nop
test
cmp
push
pop
push
in
frstor
sbb
and
lods
les
inc
push
pop
pushf
nop
add
cmp
addr16
mov
mov
xchg
mov
test
mov
inc
push
sub
sbb
mov
add
jg
xor
call
sub
add
dec
push
xchg
sbb
mov
add
lds
xchg
inc
xor
mov
shl
cmc
bound
fwait
ss
gs
inc
movs
push
push
xchg
dec
pop
xchg
jbe
sub
xor
test
ret
ror
mov
jle
inc
cmp
sbb
ret
and
jmp
sbb
push
mov
lea
jle
dec
(bad)
hlt
jmp
add
adc
inc
dec
add
jnp
adc
mov
jecxz
or
inc
dec
xlat
call
jb
mov
add
cmp
jg
cwde
jno
jecxz
loope
cwde
fist
and
adc
hlt
fcom
movs
fwait
mov
(bad)
jae
mov
mov
imul
test
ret
xchg
aaa
add
(bad)
fdiv
test
sbb
das
pop
push
leave
repnz
icebp
and
adc
lea
mov
dec
push
je
imul
jne
or
cmp
rcr
sbb
adc
sbb
mov
call
pop
pushf
inc
out
dec
jae
test
mov
out
repnz
scas
jo
(bad)
loope
sti
jge
push
popa
cmps
push
or
out
jnp
and
jl
cwde
sbb
mov
sub
daa
fiadd
cmp
in
jl
adc
xor
jne
loop
push
sbb
add
add
(bad)
das
mov
and
cmp
jge
and
mov
in
push
adc
xchg
aas
je
xchg
sub
inc
loope
or
cmp
xor
je
icebp
xor
aad
aas
xor
add
mov
ret
cli
cmp
jp
xor
push
mov
xor
mov
or
cwde
xchg
adc
push
mov
mov
sub
sub
cmp
jg
mov
inc
ins
sub
add
dec
(bad)
mov
into
ret
movs
popa
push
or
dec
pop
stc
add
retf
jle
aad
imul
sub
inc
cmp
sbb
sub
imul
sub
adc
lock
sub
add
push
adc
fnstcw
pop
push
fld
enter
jmp
test
or
inc
add
add
(bad)
jne
xchg
ins
cmc
movs
mov
sub
imul
inc
jl
push
and
es
or
mov
int3
mov
out
xor
mov
adc
add
cwde
xor
call
push
pop
retf
xor
test
xchg
mov
iret
dec
test
icebp
(bad)
nop
(bad)
movs
jns
stc
xor
nop
push
sbb
daa
js
push
xchg
je
(bad)
add
adc
scas
adc
fmul
pop
ins
or
inc
std
sbb
(bad)
and
add
je
mov
mov
cmp
test
xchg
mov
mov
pop
mov
fadd
xor
push
sar
push
add
jg
add
sbb
adc
xchg
mov
sar
xchg
scas
imul
cmp
inc
out
rol
jmp
daa
sbb
cmp
inc
out
xor
xor
push
enter
add
cmp
dec
lods
xchg
add
inc
je
repz
nop
dec
xchg
xchg
pop
cmp
push
ret
test
movs
push
cmp
add
cmp
sub
fist
(bad)
dec
inc
mov
push
xor
mov
dec
pop
rol
icebp
xchg
add
adc
call
icebp
mov
sbb
loope
jl
and
jecxz
xchg
sub
mov
ss
in
ficom
pusha
cmp
nop
add
mov
inc
into
mov
mov
xlat
jb
mov
call
mov
lods
sub
movs
pop
movaps
adc
jbe
inc
fs
rcr
aam
push
scas
or
(bad)
call
xchg
lods
sub
(bad)
mov
fidivr
or
jne
aas
lock
mov
jge
xchg
into
stos
sbb
sub
inc
(bad)
pop
pop
loope
scas
and
rol
cmp
cli
pusha
test
stos
mov
and
mov
cmps
sbb
std
imul
js
push
jmp
add
test
mov
shr
ret
and
xor
std
fcom
sbb
inc
dec
sub
cmps
cmps
mov
dec
xor
mov
and
clc
mov
addr16
rcl
add
and
(bad)
cmp
jl
mov
fs
push
cmp
xchg
cmp
mov
inc
sbb
mov
clc
cmp
push
or
loopne
xchg
cmp
cmp
push
add
icebp
rol
mov
xchg
push
and
pop
add
xchg
cmp
jmp
pusha
push
xchg
adc
dec
inc
jae
movs
div
fst
cmps
jge
xchg
cmps
(bad)
or
xchg
push
fucomi
mov
or
shr
dec
mov
pop
push
dec
jg
xlat
rcl
push
dec
cmp
jno
rcr
push
dec
push
jne
push
and
xor
push
push
sbb
retf
mov
mov
js
add
not
fiadd
xor
rol
loopne
and
fcmovb
pop
enter
and
push
jecxz
inc
js
jbe
adc
mov
in
sbb
pop
out
inc
mov
or
sub
test
adc
mov
sbb
or
push
sub
dec
shl
push
inc
pop
sbb
dec
enter
popf
fcmovne
sahf
dec
cmp
inc
loop
add
pop
xor
ss
loope
jl
xchg
jle
ret
or
sbb
loop
iret
adc
mov
adc
dec
cmp
push
fstp
mov
pop
iret
sub
gs
xor
xor
mov
jno
pusha
sbb
or
xlat
mov
cmp
xor
cmps
and
adc
ror
mov
sbb
fadd
xchg
pop
je
movs
push
inc
sbb
push
push
push
(bad)
rcr
xor
mov
or
rol
jae
jnp
push
scas
adc
mov
fist
mov
dec
xor
inc
push
inc
pop
pop
iret
shl
mov
pop
jae
loopne
mov
sub
inc
push
dec
pop
xchg
sbb
cmp
sysret
(bad)
aam
mov
stc
fmul
pop
je
adc
std
ins
and
and
cmp
test
inc
clc
sbb
cmp
(bad)
push
nop
scas
lea
jb
mov
lods
mov
shl
out
add
lea
dec
mov
jnp
mov
pop
enter
or
jmp
mov
sbb
sbb
pop
aas
into
into
pop
inc
bound
mov
xor
dec
mov
cmp
dec
mov
sbb
call
scas
rcr
jo
xlat
push
dec
mov
xchg
sbb
ror
loopne
repnz
or
mov
dec
jmp
cmp
mov
shl
aad
or
pop
bound
pop
mov
mov
cmp
dec
dec
or
adc
sub
shl
mov
xchg
inc
push
jne
inc
iret
push
lock
cmp
fidiv
add
sbb
pop
mov
sub
scas
(bad)
ins
sbb
dec
and
imul
jmp
or
inc
les
rol
cmp
pop
push
dec
dec
adc
mov
or
popf
dec
cdq
retf
mov
jl
cmp
sbb
and
dec
push
repz
ds
dec
mov
dec
jnp
xchg
fcom
cmp
fmul
mov
inc
loopne
es
jmp
dec
mov
loope
test
mov
and
(bad)
adc
repz
and
or
aad
push
xchg
and
xchg
adc
inc
out
xchg
inc
mov
xchg
push
add
(bad)
cmc
push
mov
ins
ins
sbb
fwait
sub
jl
mov
mov
pop
sbb
xchg
or
call
dec
retf
push
add
repz
mul
cli
bound
mov
xchg
rcr
sbb
cmp
cmp
outs
xor
and
xchg
loopne
leave
jae
aad
add
push
shl
push
push
outs
ret
or
fst
into
sub
popf
inc
mov
sbb
mov
shr
sub
xchg
out
push
xor
ret
cmp
jmp
push
mov
pop
mov
jns
in
je
ins
inc
adc
dec
jge
jmp
dec
pop
sbb
mov
xor
and
leave
and
daa
push
xor
dec
les
dec
add
aas
(bad)
jns
xchg
add
sub
and
jmp
adc
inc
int
inc
dec
les
adc
retf
jle
aas
inc
sub
test
add
sbb
mov
or
inc
inc
les
imul
sub
retf
add
daa
push
das
arpl
mov
push
push
(bad)
adc
sbb
lds
fist
xchg
push
or
mov
sbb
loopne
pusha
or
add
xchg
dec
push
jg
pusha
popa
pusha
adc
or
loope
imul
pop
xchg
arpl
icebp
cmp
push
and
aad
pop
xor
and
or
inc
sbb
dec
cmps
or
jbe
cmp
lods
mov
adc
les
idiv
cmp
je
lahf
xor
xor
push
dec
cmp
xor
test
mov
lock
pop
xchg
sub
add
sar
stos
add
dec
adc
pushf
inc
mov
ret
add
inc
add
xchg
mov
hlt
add
push
push
mov
in
jo
dec
push
sbb
into
lahf
dec
mov
pop
call
mov
inc
mov
xchg
mov
inc
pop
push
cmp
xor
repnz
and
mov
lods
push
int
and
cmp
(bad)
sbb
pop
xchg
xchg
xchg
mov
scas
loopne
popa
sbb
inc
je
inc
mov
les
cmp
mov
add
loopne
ins
shl
push
add
adc
cmp
mov
or
cwde
sbb
push
jnp
jecxz
mov
xor
inc
cld
dec
mov
inc
mov
push
inc
out
push
adc
mov
adc
popa
mov
retf
inc
mov
mov
scas
sbb
xor
in
(bad)
pop
(bad)
fs
into
movs
daa
std
push
mov
sbb
xchg
add
inc
push
sbb
in
dec
mov
fimul
jg
sub
sub
leave
lods
jp
mov
fild
rol
test
out
and
add
inc
fcmovb
aaa
jo
push
pushf
jno
daa
pop
outs
inc
cmp
cwde
sbb
rcr
mov
mov
call
lea
adc
outs
mov
push
scas
and
shl
sbb
push
rcr
push
push
and
mov
pop
(bad)
mov
sub
es
sar
lea
mov
pushf
test
add
dec
hlt
push
pop
sub
lods
sbb
push
js
mul
inc
cmp
cmp
fisttp
sbb
test
fisttp
lea
jecxz
add
and
pop
or
jne
cmp
inc
add
jne
pushf
push
fnstcw
mov
ins
es
jle
icebp
cwde
cmp
sub
lods
adc
sub
mov
pop
das
test
xor
add
adc
sbb
add
dec
rol
mov
push
add
sbb
pop
or
inc
xor
add
mov
mov
add
icebp
push
add
loopne
retf
mov
sub
mov
retf
inc
cmp
and
in
in
cmp
push
mov
fwait
sbb
(bad)
mov
jno
add
mov
adc
jno
jge
idiv
mov
xchg
nop
add
cmp
jle
loopne
lods
jp
cmp
outs
add
cmp
xchg
xchg
pop
aad
test
mov
pop
or
mov
pop
inc
(bad)
loopne
rol
push
jmp
mov
mov
inc
cmp
adc
daa
cmp
jl
nop
lock
sar
retf
inc
cmp
add
sahf
and
jge
mov
add
das
mov
xchg
cmp
dec
xchg
repz
cli
fiadd
inc
rcl
and
xor
movs
push
xor
adc
push
push
leave
push
dec
jb
cmps
mov
loope
movs
stos
sbb
shr
dec
push
jae
jl
nop
and
dec
jmp
adc
pusha
(bad)
push
jmp
and
(bad)
dec
add
nop
xchg
mov
dec
adc
xor
cmp
retf
movs
popf
sub
jo
js
xor
addr16
mov
mov
mov
cmp
imul
adc
ss
hlt
js
(bad)
stc
or
mov
rcl
call
add
pop
jo
fdiv
gs
jo
call
mov
mov
push
push
pop
je
adc
leave
rol
inc
pop
bound
les
mov
dec
pop
loop
sub
xor
imul
cmps
xor
int
xor
inc
mov
mov
das
xor
push
dec
ins
push
lods
and
push
lods
or
movs
mov
cmp
xchg
sbb
sub
sbb
mov
add
enter
mov
aam
cmp
les
jno
mov
lods
push
xor
sbb
in
push
add
fndisi(8087
sbb
and
out
add
mov
xchg
adc
push
push
push
shl
fs
xor
loopne
inc
mov
(bad)
movs
dec
or
fwait
mov
fs
cmp
sub
cmp
and
dec
je
fnstsw
and
adc
stos
mov
and
sbb
dec
and
add
pop
pop
jb
imul
cmp
add
adc
sub
popf
fldenv
das
dec
or
add
sbb
mov
test
pop
retf
movs
xlat
dec
in
xchg
data16
pop
bound
pop
cmps
add
mov
cmp
push
dec
add
mov
xchg
inc
mov
pop
add
mov
adc
or
push
or
hlt
dec
or
fisub
sub
js
and
enter
enter
lea
pusha
xor
pushf
lea
rol
and
outs
inc
inc
cdq
test
mov
mov
imul
dec
push
fneni(8087
and
cmp
pop
push
enter
sub
xor
sbb
cld
adc
sbb
xchg
mov
and
inc
pop
and
add
mov
(bad)
lock
icebp
add
mov
mov
push
out
push
(bad)
and
dec
dec
jg
mov
inc
outs
sbb
cmp
inc
and
mov
adc
movs
lea
add
cmc
dec
xchg
ret
inc
clc
or
lea
and
sbb
outs
sub
add
adc
imul
jb
mov
(bad)
fstp
lock
cmps
cmp
int
sar
loopne
inc
add
sub
xor
jne
mov
lea
add
sub
push
cmps
push
rcr
sub
push
in
in
pop
popa
sbb
and
xchg
test
mov
jge
outs
ret
dec
jnp
dec
pop
mov
push
(bad)
(bad)
xchg
cmps
movs
xchg
pushf
dec
or
and
pop
and
inc
pop
in
adc
ins
xchg
outs
xchg
ficomp
jne
std
dec
jmp
shl
adc
or
push
add
(bad)
lahf
retf
mov
pop
adc
add
cli
add
movs
sub
mov
add
daa
je
or
mov
ror
arpl
inc
add
mov
inc
and
dec
push
call
mov
dec
inc
mov
sub
xchg
push
cmp
dec
mov
or
pop
test
push
dec
gs
mov
cmp
(bad)
and
dec
fldenv
add
or
rcl
jmp
jae
push
rol
mov
adc
nop
pop
test
dec
add
push
sbb
push
iret
xchg
xor
adc
pop
add
or
adc
or
mov
je
mov
fdiv
movs
dec
sbb
mov
sbb
icebp
push
shl
in
adc
out
sub
mov
fdivr
mov
mov
loope
mov
mov
and
pop
(bad)
pop
in
movs
retf
int3
cmc
rol
movs
das
lahf
rcr
jmp
mov
mov
shl
jge
mov
sbb
dec
dec
or
mov
fwait
nop
add
loopne
xchg
les
or
add
adc
movs
inc
push
push
jne
mov
sub
daa
push
sbb
sub
sub
fwait
popf
lds
pop
fild
and
inc
pop
mov
mov
inc
shl
jle
push
pop
rol
add
xor
adc
dec
xchg
inc
adc
push
mov
jno
push
sbb
add
add
sub
loop
add
and
daa
sub
add
xchg
das
sbb
and
adc
xor
imul
iret
out
les
xchg
and
pusha
imul
fwait
pop
inc
sbb
pop
sbb
add
adc
mov
leave
or
push
push
sub
int3
fwait
adc
pop
or
mov
jae
scas
nop
or
out
sub
fist
jp
jne
inc
jmp
addr16
and
add
xchg
call
jmp
lea
test
jle
ins
and
adc
adc
cmp
xlat
retf
movs
int3
outs
xchg
out
xor
mov
imul
nop
add
add
xor
fs
sti
push
addr16
les
mov
movs
pop
add
lock
xchg
add
das
pop
or
mov
inc
xchg
test
add
jge
mov
js
push
retf
push
dec
aaa
or
arpl
jbe
mov
call
or
xor
push
lods
mov
dec
xchg
daa
pop
xor
mov
inc
push
shr
sbb
adc
sbb
adc
sub
dec
push
and
adc
adc
popf
je
add
loope
inc
sub
aam
xor
fwait
add
jbe
retf
sbb
rcl
add
cmp
add
mov
xor
mov
lds
popa
sub
scas
(bad)
pop
scas
sti
add
aad
jno
xchg
inc
cwde
pusha
xor
sub
xor
push
dec
xor
or
push
rol
or
dec
movs
push
push
in
es
call
add
call
pop
mov
je
mov
xchg
call
mov
aam
movs
sub
adc
je
aas
xor
inc
adc
dec
xchg
or
aam
fadd
cmp
pop
sub
mov
push
sbb
mov
add
sub
js
xchg
int
ret
jne
add
adc
cmp
or
popf
es
rcr
sbb
sbb
lea
inc
sbb
sbb
add
repnz
sub
pusha
repz
and
add
xchg
pop
inc
cmp
mov
jns
sub
fs
popa
adc
mov
mov
mov
or
or
or
jp
sti
aam
add
cli
or
retf
add
les
pop
or
inc
lods
pop
ficomp
repz
test
add
js
in
movs
add
lock
ror
inc
or
sbb
mov
push
xor
add
or
or
in
mov
mov
fistp
adc
loopne
movs
retf
sub
fsubr
fs
mov
and
jo
sbb
add
xchg
cmp
test
push
cmovb
nop
adc
mov
xchg
neg
adc
sbb
hlt
inc
add
add
add
sub
and
dec
adc
jns
enter
push
sub
ret
jp
and
or
mov
data16
push
pop
sub
loope
xor
sub
mov
jge
push
push
jmp
xor
sub
inc
xor
pusha
fstp
ret
call
jmp
sbb
mov
jae
loope
add
dec
push
clc
jl
shl
loopne
ja
pop
and
jecxz
addr16
push
adc
sub
xchg
push
ret
adc
retf
lds
shl
(bad)
mov
hlt
or
(bad)
push
add
scas
cmp
daa
fsub
mov
push
popa
retf
add
ds
mov
dec
std
xor
sbb
push
rcl
sbb
test
pop
cmps
and
dec
js
retf
test
mov
mov
pop
or
jnp
cdq
cli
mov
or
sub
sub
adc
inc
adc
fiadd
mov
fstp
push
add
out
sub
aaa
add
mov
mov
xchg
jne
and
sbb
sub
mov
dec
jae
dec
sub
ret
xchg
outs
daa
mov
fild
test
pop
leave
fcomp
jne
sub
jo
loope
or
xchg
mov
xchg
es
rol
adc
mov
sbb
jmp
sub
jbe
fistp
push
jnp
fld
mov
nop
jmp
push
adc
daa
dec
retf
adc
xchg
xchg
test
push
push
jne
les
das
xor
sar
mov
es
fist
stc
xor
mov
xchg
cmps
dec
and
push
push
push
ins
iret
mov
xor
dec
loopne
and
xor
or
fld
jno
inc
cmp
and
out
and
mov
jmp
or
cs
mov
ret
or
or
movs
fist
xor
rol
push
xchg
push
dec
mov
sub
sbb
sub
and
test
jmp
pop
je
mov
loopne
mov
into
sub
sbb
inc
cdq
movs
test
or
and
rcl
(bad)
ret
mov
sar
or
mov
sbb
and
and
test
inc
aad
test
imul
pop
test
push
jnp
sub
adc
mov
add
sbb
and
xor
push
and
mov
test
dec
lods
jle
push
sbb
pop
inc
mov
add
push
jge
dec
imul
and
lahf
aam
cmp
sbb
cs
add
ins
cwde
or
imul
add
and
mov
add
add
push
fwait
adc
mov
or
dec
repz
inc
push
add
pop
stc
cmps
je
or
ss
fimul
pop
(bad)
(bad)
clc
or
test
adc
sub
jae
hlt
jmp
sub
jmp
es
adc
sub
and
leavew
or
mov
add
mov
test
movs
popa
sbb
iret
push
fwait
sub
or
pop
test
aam
add
in
loope
adc
cwde
gs
sbb
stos
add
xchg
shr
or
std
dec
loopne
or
or
push
sahf
nop
mov
sub
cmps
hlt
or
mov
or
or
(bad)
fcom
leave
xchg
or
jmp
add
movq
clc
sub
or
xlat
out
retf
sub
or
cld
and
fmul
and
xor
xchg
js
mov
inc
fiadd
fsubr
adc
push
pop
pop
xchg
retf
push
test
or
test
dec
push
jecxz
daa
push
push
add
cmp
push
and
in
sbb
xor
mov
and
test
sub
add
mov
lods
sbb
inc
dec
pop
das
or
jb
xor
mov
push
jbe
pushf
imul
cwde
xor
jbe
aaa
push
fsubr
jne
push
sbb
call
int
adc
pop
mov
inc
retf
xor
clc
aas
cmp
adc
test
xor
mov
pop
inc
and
xchg
aam
icebp
and
inc
push
(bad)
lea
stos
rol
movs
scas
aas
mov
or
les
jp
push
movs
or
pusha
movs
xchg
addr16
fdiv
jg
movs
fnstenv
rcr
or
test
or
loopne
add
add
ja
hlt
push
push
clc
xor
push
out
pop
jmp
mov
sub
jmp
or
inc
cdq
xchg
or
or
add
(bad)
adc
mov
cs
es
adc
push
pop
inc
mov
or
xchg
and
imul
adc
adc
mov
adc
and
sbb
sub
sub
xchg
pmulhuw
sub
dec
sub
add
dec
cmp
adc
adc
and
or
or
mov
int
lock
sbb
jbe
sbb
jo
into
and
cs
fs
rcr
and
inc
scas
stc
aam
pop
dec
cmp
je
push
adc
sbb
adc
xchg
adc
shl
xchg
lods
cmp
add
iret
push
lock
or
inc
pop
mov
xlat
dec
lods
inc
jnp
pop
and
int3
cmps
test
and
mov
adc
shl
jb
mov
dec
mov
or
add
jnp
cmp
mov
iret
repz
push
and
inc
push
sub
repz
mov
pop
movs
pop
adc
fmul
pop
pop
ss
sub
or
mov
and
call
mov
xor
xchg
add
les
add
mov
imul
push
push
or
mov
ins
jnp
aam
mov
xchg
pop
shr
loopne
(bad)
lahf
jae
outs
add
mov
pop
scas
add
and
or
cmp
fidiv
nop
add
sbb
fisub
pop
jns
and
xor
pop
adc
and
in
push
sbb
mov
add
js
clc
js
xor
jno
and
fwait
rcr
ins
inc
adc
push
ss
lods
xchg
ficom
sbb
sub
inc
push
pop
add
cmp
je
cmp
call
jne
arpl
lahf
popa
jmp
imul
sbb
mov
push
inc
jns
and
add
sbb
and
shl
xor
inc
add
retf
dec
leave
fcom
add
bound
bound
jp
and
add
mov
and
outs
push
cmp
fcmovnb
add
inc
mov
call
mov
stos
sti
in
jne
xor
pop
push
xchg
push
pop
xor
lods
and
push
mov
or
push
add
clc
mov
in
mov
add
push
rcl
add
mov
push
push
rol
push
sub
scas
inc
fstp
enter
test
mov
cmp
aad
mov
fisubr
ds
pop
sbb
dec
xchg
mov
pop
xchg
test
sbb
mov
push
xchg
lock
ret
dec
daa
pop
movs
sbb
or
mov
cmp
push
mov
pusha
ret
mov
pusha
repnz
das
test
jne
xor
outs
jle
cmp
dec
cmps
add
mov
jo
sub
xlat
jne
movs
push
mov
pop
imul
pop
mov
and
push
lods
adc
loopne
mov
xor
mov
add
inc
add
stos
dec
ror
jl
and
mov
adc
push
daa
cwde
arpl
test
push
sbb
and
add
fst
movs
outs
xchg
mov
movs
lds
xor
jg
inc
pop
test
sub
or
xor
jbe
add
xchg
jnp
sub
pusha
imul
enter
cmp
dec
pop
jnp
and
pop
in
ins
mov
cmc
mov
das
cmp
xchg
push
push
test
retf
or
jae
add
and
test
lock
xor
cmp
and
and
xchg
and
push
shl
mov
push
mov
inc
jbe
mov
bound
inc
jo
inc
mov
shl
loopne
jns
pop
mov
mov
jmp
adc
or
movlps
adc
mov
add
pop
pop
and
or
push
pop
or
or
pop
sbb
ins
pop
test
cmps
push
sar
cmp
ins
pop
loop
sub
pop
jmp
xor
dec
add
or
lods
push
mov
ror
iret
dec
mov
and
dec
cmp
mov
retfw
push
rcl
dec
pop
push
add
arpl
sub
test
rol
clc
jnp
bound
add
and
and
pop
cs
and
(bad)
pop
inc
pop
inc
cmp
adc
dec
ret
sbb
dec
jne
xor
and
js
sub
shl
add
test
add
xor
push
iret
(bad)
jge
mov
dec
retf
adc
sub
add
jno
sti
add
clc
add
pop
aaa
lds
or
jno
or
es
cmp
push
adc
shl
and
repnz
pop
(bad)
jl
or
push
retf
xchg
movs
jb
or
mov
sub
scas
arpl
sub
pop
adc
and
jno
or
lods
push
xor
sbb
sub
sub
adc
xchg
cmc
test
mov
xchg
push
(bad)
dec
sbb
mov
std
mov
sbb
into
mov
xor
sbb
add
pop
xchg
(bad)
aam
and
outs
add
adc
in
(bad)
xchg
enter
or
loopne
mov
out
imul
scas
xor
and
lahf
aaa
pop
mov
mov
dec
and
mov
movs
cdq
jecxz
shl
fld
adc
inc
push
mov
mov
add
jecxz
jmp
xor
movs
cmc
or
jmp
je
inc
xchg
mov
pop
je
movs
dec
call
mov
loop
aam
clc
sub
fsubr
sbb
xor
icebp
add
xchg
retf
push
xchg
pop
jecxz
and
loopne
pop
pop
inc
test
sub
hlt
push
push
or
stc
in
lock
adc
mov
sbb
loope
add
sub
mov
aaa
or
add
add
sbb
les
add
pop
jmp
add
mov
mov
or
test
pop
dec
dec
sar
inc
push
movs
pusha
daa
ins
xor
mov
cmp
inc
leave
dec
push
jle
xor
into
jge
and
adc
dec
adc
popf
and
pop
add
mov
push
cs
add
or
pop
fdivr
retf
call
xchg
je
mov
xor
push
(bad)
mov
stos
jge
or
fadd
push
loopne
sbb
cdq
jp
xchg
mov
or
lock
mov
sahf
out
mov
cmc
mov
and
adc
push
test
pusha
add
add
test
call
or
cmp
cmp
mov
out
les
add
test
or
loopne
inc
jl
shl
nop
add
aam
jle
mov
test
loopne
add
clc
add
outs
fwait
push
push
add
rol
je
pop
sub
or
mov
adc
shl
mov
icebp
dec
loopne
cmp
jl
pop
jle
aaa
mov
fldenv
or
dec
pusha
mov
pop
or
add
push
mov
loopne
sub
and
or
mov
pop
add
ins
push
mov
enter
cdq
xor
xor
outs
xor
movs
cmp
and
xor
or
push
xlat
or
lahf
mov
mov
outs
cmp
xchg
in
jns
cwde
ins
sbb
dec
pop
sbb
inc
fnstenv
and
jl
jne
inc
test
ss
in
jl
pop
xchg
cmps
mov
adc
adc
adc
sbb
inc
loopne
xor
and
es
pop
sub
sbb
inc
bound
add
(bad)
mov
stc
ins
adc
popa
xlat
cmp
cmp
iret
sub
adc
jmp
xor
cs
cwde
ret
xor
jno
pop
(bad)
in
adc
sbb
jo
popf
add
xchg
ja
xor
into
jl
sbb
push
and
or
add
pusha
sar
inc
aas
push
aam
iret
xchg
pop
xor
xchg
push
in
push
pop
dec
jae
add
add
lods
inc
cmps
push
std
push
cmp
pusha
loopne
shr
mov
and
test
arpl
fidivr
adc
inc
and
add
mov
add
mov
cwde
sar
leave
push
retf
ret
add
cmp
inc
pop
or
xchg
and
jmp
fdiv
inc
ins
jae
daa
jnp
ret
leave
arpl
mov
wbinvd
or
push
sbb
das
jne
pusha
mov
jge
push
mov
dec
or
inc
inc
push
adc
rol
add
push
jns
sub
push
pop
sbb
scas
aam
dec
adc
jo
jns
pop
push
and
or
and
push
mov
pushf
cmp
sub
and
in
dec
add
xor
fsubr
inc
sub
adc
sub
in
xchg
xchg
jecxz
in
push
out
and
ins
jae
sub
xchg
xchg
das
daa
aad
or
jne
mov
dec
fld
and
loopne
fs
cdq
jmp
ins
cmp
jmp
adc
mov
cmp
lea
dec
pop
(bad)
mov
mov
shr
xor
rsqrtps
inc
mov
push
or
dec
inc
loop
scas
hlt
int3
jg
push
stos
jl
jo
rcr
ss
and
out
mov
into
fdivr
sub
add
inc
add
cmps
or
push
(bad)
pop
add
jnp
sbb
loope
jl
ins
(bad)
and
and
add
int3
mov
test
or
cwde
sbb
mov
sub
and
test
mov
ret
mov
jo
mov
xchg
in
fisub
xor
xchg
(bad)
ret
fnstenv
and
or
fld
and
inc
ins
inc
cmp
ret
and
sub
call
loopne
mov
cmps
mov
aaa
pop
add
(bad)
ins
push
mov
imul
jne
jmp
stc
sub
cmp
jmp
cmp
jle
push
or
mov
pcmpeqb
dec
jne
jmp
fadd
rcl
sub
rol
repnz
rol
sub
and
idiv
or
nop
and
mov
mov
fnsave
jle
call
push
xor
movs
popf
lea
push
push
dec
leave
mov
adc
mov
rcl
push
jmp
mov
add
je
daa
jle
emms
dec
js
retf
jge
inc
sbb
cmp
aas
inc
retf
scas
pop
mov
jmp
xchg
adc
aas
mov
jmp
and
lods
and
inc
test
cwde
popa
and
or
pop
dec
or
je
and
push
ror
aaa
sub
hlt
leave
add
in
push
sbb
addr16
xchg
iret
(bad)
and
das
inc
pushf
lds
test
test
inc
arpl
inc
ins
cmp
shl
cmp
jne
xchg
mov
ret
test
inc
test
mov
ss
js
adc
jnp
outs
fdivr
and
mov
(bad)
cmp
(bad)
mov
add
pusha
xor
cld
jo
cmp
popa
inc
cmp
shl
aad
and
mov
and
xchg
pushf
cwde
adc
adc
or
je
sahf
jmp
jne
add
sub
adc
(bad)
cwde
mov
aaa
sbb
mov
enter
add
push
es
or
lahf
stc
mov
or
test
adc
test
ror
es
mov
jmp
rol
xchg
mov
mov
and
inc
sbb
cdq
mov
popa
adc
or
sbb
jne
add
xchg
xchg
adc
sbb
adc
fbstp
adc
mov
mov
xor
add
sub
in
sub
mov
adc
push
push
and
or
in
add
cmp
xor
mov
pop
adc
pop
ds
sub
push
xchg
in
cmp
or
scas
(bad)
fsub
pushf
xchg
in
push
or
movs
out
int3
jl
or
inc
sar
nop
mov
mov
cmc
push
or
lods
xor
add
add
or
sub
mov
mov
dec
push
push
or
adc
je
add
push
je
mov
xchg
clc
sub
sbb
hlt
ficomp
mov
and
daa
lea
push
lahf
ja
mov
sub
inc
adc
mov
ins
popf
mov
fstp
push
push
aad
std
sub
add
call
rol
push
repnz
cmp
inc
sbb
add
fmul
mov
push
jl
adc
sub
outs
or
cs
jae
push
rol
pop
fidivr
out
add
pusha
add
sbb
add
push
jmp
jb
push
shl
in
add
dec
xor
inc
loopne
adc
add
adc
ins
and
push
jns
cmp
push
cmp
out
dec
cmp
fisub
jecxz
popf
push
cmp
jg
sbb
mov
jl
dec
mov
ss
mov
dec
fwait
into
ins
adc
call
in
pop
and
enter
cmp
and
repz
add
inc
push
aam
sbb
and
adc
shl
dec
pop
out
push
arpl
cld
and
pop
lea
loope
xchg
ins
xchg
push
fist
dec
dec
and
dec
cmps
push
mov
and
add
jns
mov
into
or
imul
ss
pop
pop
test
sbb
sbb
and
sbb
mov
repz
dec
sub
leave
xchg
cs
and
and
cmp
mov
pop
mov
mov
arpl
cmp
inc
adc
mov
push
push
adc
xor
or
ret
rcl
fcomp
add
mov
in
add
shl
ret
mov
dec
fiadd
test
in
add
retf
mov
(bad)
loopne
dec
or
cmp
jne
pushf
or
cmp
pusha
push
pop
jge
addr16
xor
push
or
mov
fwait
repnz
pop
pop
ds
mov
jmp
and
jmp
inc
adc
dec
sbb
(bad)
movs
sub
add
or
retf
add
xchg
fwait
mov
pop
cmp
loopne
push
imul
out
mov
push
(bad)
mov
mov
cdq
dec
inc
or
mov
cmp
pop
sub
pushf
cwde
sub
lods
iret
jae
aam
stos
test
and
popa
cmp
push
xor
mov
mov
add
loope
shl
inc
imul
mov
cmp
xchg
jge
daa
dec
or
mov
xor
jmp
cmp
mov
adc
sbb
inc
mov
rsm
xchg
cdq
pop
xor
pop
fidivr
mov
push
stc
icebp
inc
add
inc
jmp
push
push
xchg
inc
jns
shr
inc
pop
mov
pop
stc
or
sub
into
fisub
mov
inc
dec
jl
sub
addr16
popa
call
add
inc
inc
sub
lock
inc
add
sub
jmp
mov
ins
shl
sahf
push
test
push
push
ja
jge
add
xor
jne
jecxz
and
lahf
or
imul
lods
inc
add
ins
mov
mov
or
dec
aam
adc
inc
mov
aam
loopne
push
inc
outs
xchg
loopne
or
pop
dec
jne
xor
loopne
add
sub
(bad)
jl
(bad)
rcr
lea
mov
xchg
test
mov
mov
sbb
add
inc
bound
test
fdivr
xchg
push
xchg
inc
stc
movs
shl
imul
add
and
add
dec
ss
push
mov
cwde
inc
xor
add
sub
sbb
add
or
clc
and
mov
adc
js
and
cmps
sbb
sbb
adc
xchg
(bad)
adc
or
mov
pusha
mov
xchg
sub
add
aas
and
push
shl
adc
stc
lea
pavgw
sub
push
mov
mov
push
add
and
xchg
mov
push
or
sub
test
adc
push
(bad)
paddusb
ja
jecxz
cmp
push
pop
mov
pop
mov
lea
push
imul
inc
loopne
shl
mov
add
and
mov
clc
loopne
add
dec
sbb
mov
xchg
out
sub
test
push
nop
imul
inc
sub
xchg
retf
sar
inc
ror
push
xor
adc
nop
mov
add
or
add
daa
imul
mov
add
fbstp
rcl
shl
lock
adc
add
nop
adc
xchg
(bad)
fstp
aaa
and
and
add
dec
jecxz
inc
sub
adc
hlt
pop
test
dec
push
cmp
jg
push
inc
inc
or
jne
push
and
imul
hlt
jge
movzx
ja
mov
mov
and
sbb
inc
sbb
jne
stos
cmp
inc
pop
inc
mov
dec
or
xchg
aaa
add
and
ret
outs
pop
sub
inc
jmp
add
ins
les
and
and
aad
dec
cdq
popa
lahf
sbb
ficomp
mov
xor
cmps
dec
sub
jns
inc
and
iret
xor
inc
cwde
sbb
popf
xor
adc
mov
mov
pop
mov
push
cmp
mov
adc
inc
pop
fnsetpm(287
and
add
test
pusha
pushf
and
lock
xlat
xor
jl
sbb
cs
popa
or
adc
and
and
into
cmp
lock
xor
mov
imul
fild
add
bnd
lea
jnp
mov
ror
push
push
or
push
out
sub
mov
adc
mov
xchg
pop
out
or
test
add
mov
push
je
add
test
dec
cmp
leave
adc
rcr
add
mov
repz
fcom
jl
not
inc
loopne
cmp
in
or
je
sar
mov
(bad)
inc
sbb
jl
push
mov
and
mov
in
sbb
push
add
inc
ss
add
push
dec
or
xor
xor
and
xchg
sub
or
mov
adc
test
fs
or
pop
sub
pop
or
clc
jmp
sbb
inc
dec
loop
pop
js
inc
adc
les
adc
add
sbb
aaa
jo
or
cmps
adc
push
adc
dec
add
or
and
call
fmul
jo
jnp
(bad)
xchg
adc
sbb
jns
ds
mov
mov
fs
or
push
add
xor
adc
test
and
inc
push
adc
add
mov
push
adc
dec
cmps
pop
add
sub
out
lock
sbb
out
(bad)
call
and
add
mov
neg
sub
pop
(bad)
add
ja
je
sub
and
push
shl
add
rcr
dec
dec
push
cmp
add
cmps
mov
fnstcw
or
fnstsw
xchg
fisttp
in
cmp
int3
mov
or
enter
mov
test
and
cmp
mov
add
cmps
or
(bad)
jmp
xchg
jne
ret
and
jle
scas
cmp
cmp
add
aaa
mov
xor
cmp
cmp
fadd
scas
dec
xchg
lock
rcr
add
call
or
lods
adc
retf
mov
sub
les
cmps
ins
xchg
(bad)
test
sbb
inc
fmul
sub
add
push
mov
les
adc
out
sub
ins
les
mov
jbe
push
and
mov
add
test
sti
xor
fld
pop
mov
jmp
rcr
lds
sti
out
es
cmp
imul
test
or
in
repz
push
lods
adc
cmp
pop
pop
stos
lods
or
sub
inc
or
mov
sahf
mov
(bad)
pop
cs
mov
xor
push
mov
mov
ror
arpl
test
or
mov
(bad)
xlat
cmp
test
scas
loop
sub
xchg
popa
lock
xchg
pop
and
dec
jbe
push
xor
add
pushf
xchg
in
mov
xor
inc
fadd
call
fidivr
dec
pop
ror
push
mov
dec
fiadd
mov
add
cmp
mov
or
mov
arpl
je
mov
inc
or
pop
add
loope
xlat
pop
je
mov
adc
add
xchg
or
dec
jne
mov
and
inc
and
leave
jl
out
inc
or
js
inc
fidivr
jle
ins
sbb
push
mov
sbb
mov
and
cdq
xor
lods
or
fmul
movs
push
and
push
rcl
lods
adc
add
and
mov
cwde
sub
add
xchg
imul
cmp
and
push
push
or
push
dec
xor
sahf
aaa
shr
adc
bound
nop
icebp
loopne
popf
push
adc
scas
jne
scas
push
sbb
iret
lock
mov
or
sub
mov
imul
jmp
inc
dec
mov
addr16
jmp
and
mov
int3
pop
mov
movs
retf
pop
push
push
add
sbb
(bad)
mov
dec
fwait
xchg
push
sub
xchg
xor
je
push
or
sbb
call
add
movs
jno
sub
icebp
xchg
xchg
fisubr
jmp
and
std
sub
(bad)
sbb
mov
pop
cmp
rcl
hlt
mov
mov
test
or
and
mov
and
push
push
and
and
dec
push
sbb
add
inc
test
mov
movs
mov
pop
shr
add
fwait
mov
dec
and
mov
inc
call
add
jmp
sub
sub
xchg
pop
add
and
push
push
daa
mov
pop
add
movs
inc
pop
pop
mov
clc
or
loope
loop
push
fidivr
xchg
cmp
and
dec
push
in
jb
pop
outs
push
and
mov
sub
push
push
add
push
shr
sti
push
daa
pusha
inc
mov
imul
adc
ror
jb
inc
jno
jle
cs
add
nop
pop
mov
adc
ds
xor
adc
dec
cmp
push
cmc
cmp
in
test
das
inc
cmp
cmovs
and
sub
(bad)
(bad)
lock
inc
sti
add
xor
cwde
sbb
add
jl
aas
in
loopne
ss
test
ror
mov
dec
fstp
nop
sub
movs
or
pop
out
or
xor
dec
in
or
push
pushf
push
jle
fs
inc
xchg
pop
or
or
test
cmp
or
xchg
test
or
(bad)
sahf
inc
cmp
push
mov
pop
sbb
lahf
dec
jbe
retf
pop
mov
dec
sbb
adc
sbb
adc
mov
push
adc
inc
jo
imul
inc
fs
adc
shl
and
mov
sub
xchg
and
sub
push
jbe
xchg
and
dec
mov
xor
add
in
mov
and
pop
push
adc
rol
imul
leave
imul
xchg
jne
mov
mov
push
lods
sub
dec
rcr
cld
mov
cmp
add
data16
or
shl
les
cmp
sbb
adc
inc
mov
and
rcl
xchg
sbb
push
and
mov
push
icebp
dec
je
or
es
outs
xor
movs
or
in
jmp
mov
push
xchg
push
ins
fsubr
ret
push
push
inc
mov
or
fcmovnbe
sbb
xchg
push
inc
call
push
mov
test
rcr
adc
or
add
inc
bound
dec
xor
shr
fs
mov
rcr
js
shl
inc
jge
adc
out
inc
sbb
ret
stos
adc
mov
shr
xchg
sub
retf
sub
mov
xchg
xchg
pop
push
mov
pop
add
push
add
mov
xchg
push
mov
fs
ss
js
push
mov
inc
or
push
addr16
or
lods
outs
sub
mov
push
mov
cmps
dec
fcomp
jmp
pop
add
das
aam
mov
stc
mov
jmp
and
arpl
shr
sub
or
cmp
jp
push
jecxz
test
jnp
fild
push
repz
cli
ins
push
push
mov
or
adc
push
and
or
ret
push
adc
sub
add
cli
push
or
inc
mov
and
test
and
inc
push
mov
pushf
jbe
shr
aaa
fwait
jno
and
ds
adc
test
or
push
iret
and
imul
sub
repz
lock
or
dec
sbb
and
clc
movs
les
xchg
loope
mov
and
dec
(bad)
test
jmp
mov
mov
cmps
cmp
clc
jno
push
or
sub
adc
sbb
not
test
or
inc
sub
int
push
pusha
in
retf
imul
inc
fisub
mov
jge
jmp
rcr
inc
xchg
or
(bad)
aaa
dec
cmp
pop
dec
adc
or
and
and
and
(bad)
enter
sub
lods
mov
(bad)
lods
gs
xor
mov
mov
aam
cmp
ds
mov
mov
xchg
sbb
shl
sti
pushf
jb
retf
mov
dec
ror
lahf
je
push
xchg
push
jae
add
or
lahf
jo
sbb
pop
sbb
test
jbe
ins
add
xchg
xor
enter
(bad)
push
and
xchg
addr16
lock
push
and
pop
mov
loopne
sub
(bad)
call
ficom
cmp
dec
adc
pop
inc
mov
je
fistp
in
sar
or
pop
and
adc
out
jo
or
sub
cmc
das
inc
cmps
je
dec
lods
fld
mov
fdivr
cs
add
mov
setns
push
out
mov
sub
scas
jge
enter
imul
cmp
xchg
mov
loopne
mov
lods
mov
inc
or
inc
cli
(bad)
adc
xchg
sub
inc
pop
ret
push
into
push
(bad)
xor
adc
inc
xor
add
xchg
bswap
push
jne
push
push
push
or
jp
(bad)
jp
packsswb
add
cs
icebp
les
sub
jne
sub
sub
pop
push
mov
hlt
mov
adc
jge
push
pop
cwde
jge
jmp
xor
push
push
inc
inc
xor
shr
inc
sbb
sbb
popa
lock
add
ror
mov
or
mov
mov
test
pcmpeqw
jae
mov
test
sbb
mov
cs
sub
sub
jns
fadd
adc
sbb
xor
push
out
mov
or
fisttp
cmp
inc
xchg
push
inc
sahf
test
sbb
and
cwde
adc
sahf
jle
mov
and
sbb
jmp
cmps
xor
movs
dec
mov
lds
sub
push
sub
or
lods
or
sub
pop
xchg
mov
sbb
mov
add
sbb
push
imul
rcr
lahf
mov
pop
sbb
cmp
push
jp
loopne
aaa
adc
retf
push
jl
mov
imul
pushf
je
fiadd
sbb
cmp
inc
cmps
pop
cmp
aaa
adc
pop
rcl
in
imul
cmp
inc
test
rcr
loopne
sbb
mov
push
xchg
dec
dec
fcmovnb
sub
pop
pop
xor
(bad)
hlt
and
push
mul
ret
cs
and
add
xor
adc
jns
mov
or
and
jae
es
xor
ds
ret
mov
pop
push
push
mov
cmp
push
mov
jbe
mov
mov
(bad)
fst
(bad)
imul
push
dec
sbb
jne
push
cmps
pushf
jbe
adc
retf
cmc
or
jp
mov
pushf
jne
mov
mov
xchg
retf
lea
jne
or
mov
test
inc
push
push
mov
mov
sbb
das
push
retf
sub
imul
mov
or
fs
xor
push
icebp
std
fs
test
lea
in
ds
test
jo
dec
mov
add
test
inc
jmp
cmp
das
jo
xchg
cmc
(bad)
mov
xor
stc
dec
mov
aam
imul
movs
cmp
test
scas
fbld
gs
sub
aam
cmp
mov
xchg
mov
cmp
mov
cmp
cli
dec
push
dec
xor
inc
pop
xchg
dec
mov
cs
call
add
lds
aad
and
and
sbb
xor
push
pop
ret
cmps
ss
loop
rol
xor
les
adc
pop
es
js
fisub
imul
push
fidivr
add
lods
rol
adc
pop
sbb
mov
pusha
pmaxub
sbb
or
push
dec
cmc
xor
add
adc
cmp
rcr
xchg
xchg
lods
xor
inc
stos
sub
cs
sub
test
lods
or
xlat
sbb
push
dec
pop
dec
fchs
sahf
adc
into
cmp
iret
mov
mov
sahf
mov
fucomip
push
push
(bad)
sub
push
fmul
pop
pop
add
fld
inc
clc
fwait
sub
or
inc
lea
cmps
cmc
push
lock
cli
and
je
leave
add
das
dec
pop
shl
mov
mov
xchg
dec
cmp
gs
pushf
inc
(bad)
lock
cld
or
add
cmp
mov
punpckhbw
or
stos
or
mov
cs
inc
push
outs
and
into
pop
(bad)
cli
pusha
data16
adc
jnp
loope
mov
or
repnz
add
call
call
or
and
mov
shl
sub
sub
xor
lods
arpl
sti
leave
jo
jo
mov
rol
stc
dec
push
cmp
inc
retf
add
std
sbb
jne
test
mov
adc
mov
pop
xor
ret
add
or
sub
adc
stc
nop
test
std
sbb
add
ror
sub
shr
pop
outs
jmp
adc
in
cmp
inc
xor
in
adc
dec
xchg
mov
lods
add
and
pop
add
jmp
jcxz
add
std
xor
jp
and
inc
cmp
pusha
(bad)
mov
and
cld
inc
inc
pop
cdq
(bad)
cmp
das
and
retf
add
xchg
fwait
jg
pop
pushf
pop
out
call
jne
sbb
add
mov
jp
xchg
sar
push
cmps
mov
sbb
and
test
push
jno
in
aas
jo
fcomp
push
les
test
add
mov
xor
test
adc
add
scas
add
arpl
xchg
cmps
mov
cdq
or
adc
test
and
int3
fisttp
dec
sub
xor
xchg
sbb
imul
imul
cmp
or
retf
sbb
cmp
shl
sub
xchg
(bad)
out
aaa
adc
mov
call
or
adc
adc
xor
push
cmps
and
sahf
xchg
xor
fdivr
sub
ror
ins
arpl
or
push
and
or
mov
cmp
or
jmp
(bad)
dec
dec
repnz
pop
xor
fs
out
adc
sbb
mov
pop
or
and
aaa
and
inc
and
or
movs
and
ret
push
add
jl
jle
test
adc
inc
test
jmp
xchg
out
rol
and
test
or
xchg
sahf
xchg
or
dec
push
mov
and
adc
jne
out
push
lods
inc
outs
mov
cmp
addr16
das
adc
dec
push
jecxz
pushf
adc
jle
imul
movs
add
retf
add
add
push
adc
movs
add
ds
push
daa
jno
jbe
std
fidiv
push
mov
pop
sbb
lea
les
xor
neg
pop
fwait
imul
and
push
lods
xor
add
lods
mov
cwde
aam
mov
lea
(bad)
retf
or
adc
or
and
jmp
push
shl
xor
dec
mov
mov
test
adc
sbb
adc
call
dec
js
push
pop
aas
aaa
clc
cmp
sbb
and
inc
mov
icebp
push
inc
(bad)
or
pushf
imul
arpl
imul
gs
fist
lahf
ror
outs
mov
sub
pusha
popa
mov
les
outs
push
adc
inc
movs
shl
ror
rcr
sub
or
mov
jbe
or
jmp
aam
movups
mov
cmp
mov
stos
push
lods
inc
mov
xor
xchg
(bad)
fdivr
loope
dec
rcr
mov
in
add
leave
lds
or
ins
std
mov
dec
push
in
mov
(bad)
adc
cmp
aad
push
pop
pop
rol
inc
mov
push
sub
(bad)
pushf
mov
inc
pop
int3
call
xchg
fs
aas
mov
in
xor
ins
push
sub
out
push
add
jno
retf
sub
jno
cmp
sub
mov
xchg
sbb
adc
(bad)
sbb
fcmovnu
sbb
test
sub
xor
leave
xlat
add
cmp
loope
scas
pop
sub
call
pushf
cmp
imul
add
sub
sub
inc
add
mov
mov
inc
cmp
test
nop
inc
adc
je
cmp
rol
cdq
mov
(bad)
jecxz
mov
cmp
sbb
clc
mov
xchg
ret
push
mov
div
mov
adc
or
idiv
adc
and
xor
inc
clc
xchg
push
push
sahf
or
mov
mov
mov
cmps
cld
stos
mov
call
in
or
inc
mov
iret
inc
sub
(bad)
sbb
fdivp
add
iret
loop
xchg
or
sbb
or
dec
ins
fsub
cmp
lahf
add
adc
pop
daa
mov
or
adc
dec
cwde
lea
mov
loopne
les
add
and
mov
sbb
fdivr
mov
adc
ror
pop
add
mov
mov
xor
pop
inc
bound
fwait
add
mov
retf
sub
mov
sbb
test
add
add
mov
push
pop
sbb
add
(bad)
cdq
add
fcom
push
jmp
mov
mov
hlt
rcr
mov
call
push
fadd
sbb
enter
cmp
mov
cmps
adc
out
shl
add
sbb
adc
ror
add
inc
sub
mov
push
dec
xor
ja
dec
jnp
and
inc
adc
adc
dec
mov
loop
test
test
cwde
xor
or
xchg
mov
pop
sub
pop
pop
pop
shl
(bad)
xor
adc
por
pop
or
push
imul
add
clts
call
add
mov
js
jo
iret
and
cwde
mov
xor
inc
cmp
mov
or
xchg
xor
lock
mov
or
dec
xchg
idiv
lahf
popa
pop
jo
adc
push
xchg
pop
bound
sbb
xor
xor
mov
mov
sbb
inc
aaa
adc
push
ret
nop
bound
in
aad
lea
add
fs
sahf
add
pop
test
(bad)
test
mov
jo
and
mov
jnp
popa
or
push
retf
out
or
stos
adc
ret
call
ins
scas
nop
and
or
add
and
add
jnp
lods
sbb
test
mov
xchg
ret
adc
push
xlat
adc
add
fs
or
js
sbb
sub
mov
rcl
jne
sbb
pushf
pop
mov
add
xor
or
add
add
arpl
imul
sub
mov
pop
adc
sub
and
push
jbe
retf
out
rcl
(bad)
rol
(bad)
pop
cld
jl
ror
shl
add
cmp
test
test
cmp
les
xchg
pop
inc
mov
in
add
push
mov
ja
(bad)
fs
sub
jecxz
pop
in
sahf
push
adc
mov
fwait
xchg
lea
xchg
es
fcom
fist
fstp
rol
xor
mov
(bad)
mul
xor
xor
lods
gs
xor
mov
adc
push
leave
gs
pop
add
mov
add
pop
add
or
cdq
or
add
mov
inc
jmp
repnz
lar
or
mov
test
dec
or
inc
call
mov
adc
inc
mov
sub
fist
pop
movs
push
sub
add
stos
enter
xchg
(bad)
movsx
xor
pop
and
adc
std
aam
dec
or
cmp
or
sahf
sub
cmc
inc
sub
hlt
ret
sub
pop
adc
add
out
mov
ficom
inc
dec
jge
cs
xor
add
or
dec
(bad)
lea
pop
push
add
lock
inc
xchg
xor
fisub
arpl
cmovl
scas
sbb
or
mov
or
pop
dec
push
mov
cli
or
cld
add
es
or
inc
repz
enter
cmps
push
jno
and
into
push
std
inc
es
add
adc
add
jne
add
enter
mov
bound
cmp
imul
ins
fistp
xchg
jbe
repz
add
mov
mov
pop
xor
jae
mov
jmp
xor
jno
add
mov
mov
clc
fxsave
fistp
(bad)
push
cmp
and
sub
and
push
xchg
xchg
adc
pop
inc
push
xchg
retf
shl
dec
xchg
push
jp
sahf
jp
mov
test
shl
stos
adc
mov
js
add
shr
push
aaa
and
repnz
add
xchg
dec
ds
mov
or
loop
xor
push
or
iret
adc
cli
and
xchg
call
sub
cmp
loopne
mov
cmc
sub
fcmovne
pop
nop
and
leave
inc
xlat
add
push
loopne
pop
test
xchg
mov
fs
inc
push
iret
call
fadd
sar
push
xor
mov
and
mov
lahf
jnp
push
lea
inc
jne
nop
(bad)
in
cmp
jmp
icebp
and
mov
add
or
call
xchg
in
fs
ret
xor
or
adc
sub
jo
in
mov
sbb
adc
lock
cmp
and
dec
mov
test
add
xchg
mov
jmp
push
pop
sub
xchg
es
mov
ror
icebp
imul
ds
dec
dec
jecxz
cs
add
pop
xchg
xor
xchg
cmp
ja
cmp
pop
dec
adc
cmp
cmp
sub
loopne
dec
inc
add
xor
add
je
push
add
add
shufps
ss
pop
adc
mov
lods
ins
pop
adc
xchg
xchg
mov
mov
jl
inc
jb
push
lods
xchg
out
and
add
sahf
jmp
rol
cwde
cmp
dec
dec
inc
xchg
lods
and
daa
cmp
dec
test
sub
jmp
(bad)
es
pop
or
cdq
mov
xchg
ins
or
pusha
ret
sub
add
or
adc
nop
sub
sbb
mov
aam
movs
std
add
add
adc
(bad)
outs
sbb
dec
and
xchg
fcomp
and
outs
pusha
cmp
sbb
push
or
sub
aad
push
cld
loop
add
cmp
js
ror
jno
add
dec
cmp
cmp
leave
cli
push
sbb
push
cmc
test
mov
mov
daa
add
lods
add
push
adc
or
sbb
xor
fild
mov
push
data16
adc
mov
add
sbb
ds
adc
(bad)
mov
and
or
(bad)
pop
xchg
push
ss
cdq
jae
mov
fst
pop
or
(bad)
leave
std
pop
fwait
push
nop
adc
or
xor
and
mov
pusha
sbb
jo
xchg
push
lods
mov
sar
add
test
ror
dec
pop
adc
js
push
es
pushf
cmp
and
mov
and
popa
inc
in
dec
push
adc
hlt
xor
clc
or
mov
fs
mov
pushf
add
nop
pop
gs
cmps
and
nop
inc
in
ds
mov
xchg
imul
lahf
stos
ins
dec
cdq
jo
fs
xchg
pop
mov
pop
or
lods
add
ret
or
xchg
imul
and
bound
loope
push
ret
pop
out
jb
jmp
setns
add
call
and
fstp
iret
adc
scas
xchg
sub
pusha
rcr
mov
jmp
loope
test
push
retf
jmp
(bad)
paddw
dec
add
or
fcomp
cmps
test
cmp
push
jg
push
scas
and
imul
into
sbb
or
pop
inc
outs
cwde
sbb
icebp
and
cmp
popa
mov
cmp
xlat
or
mov
cmc
dec
(bad)
fmul
stos
call
and
or
cmp
or
inc
or
xchg
nop
jg
fcomp
out
sbb
cmp
test
inc
rol
and
cmp
dec
(bad)
xchg
push
lods
pop
aad
mov
pop
mov
jle
lea
sub
xchg
and
xchg
xor
lods
clc
and
dec
xor
push
std
add
sub
jmp
push
movs
dec
movs
stos
sbb
add
je
mov
push
jne
je
add
or
imul
dec
adc
push
out
xor
pop
add
ins
or
fs
ja
adc
inc
mov
sub
add
adc
mov
ret
inc
cs
and
in
and
sbb
mov
jle
clc
adc
test
mov
jnp
add
pop
push
call
or
push
imul
push
in
outs
or
loopne
cmp
outs
push
push
and
add
pop
fldcw
or
pusha
add
dec
leave
in
scas
push
xchg
push
mov
jmp
imul
inc
push
mov
sti
cmp
ins
or
or
scas
push
or
fidiv
and
mov
(bad)
mov
push
es
and
not
mov
mov
dec
cs
inc
pop
mov
aas
aas
nop
xchg
movs
cmp
cwde
mov
lods
mov
pusha
jmp
push
rol
sbb
ret
mov
ret
leave
add
xchg
test
adc
cmp
cmp
das
lea
sbb
add
rol
in
sbb
pop
push
cmp
int3
sub
push
push
or
movs
cmp
jmp
mov
mov
pop
pop
or
add
add
int
push
nop
add
stos
or
outs
movs
or
enter
lea
in
test
push
gs
fcom
mov
inc
adc
mov
adc
loopne
in
mov
fst
mov
out
jne
loope
or
dec
sub
xor
mov
sbb
xor
fsubr
mov
test
xchg
xchg
inc
or
(bad)
es
ins
jecxz
sub
add
lahf
fst
adc
add
ror
push
adc
lea
leave
mov
clc
(bad)
pop
cmp
sbb
cmp
ins
pop
add
push
rol
xor
mov
mov
mov
bound
mov
test
retf
add
sbb
jecxz
or
scas
xchg
mov
ins
add
xchg
add
lods
mov
jno
(bad)
aaa
sbb
add
push
call
pushw
mov
movs
lods
and
dec
sub
add
(bad)
sbb
jne
sub
adc
jne
or
add
test
ret
mov
add
sub
sub
adc
retf
stos
daa
sar
ss
(bad)
mov
mov
aaa
and
dec
cmp
push
test
sub
or
add
imul
add
retf
sbb
mov
mov
psrld
enter
add
xor
pop
movs
lea
sbb
je
push
mov
sbb
dec
in
arpl
adc
mov
pop
push
dec
add
add
pop
(bad)
outs
mov
rol
lea
and
retf
xchg
mov
sbb
or
cmp
(bad)
pushf
lock
bsr
mov
retf
rcr
scas
ret
push
mov
adc
dec
jne
pop
(bad)
rol
sub
into
pushf
test
mov
sbb
imul
xchg
xor
or
pushf
rcl
add
xlat
les
pop
adc
pop
pusha
lods
cdq
inc
ror
rol
mov
cs
aas
push
sub
sub
aas
inc
lea
pushf
dec
cmp
push
nop
mov
sub
xchg
(bad)
outs
sbb
or
jnp
movs
ror
sub
adc
and
xor
mov
cmove
rcl
or
and
cmp
or
arpl
rol
gs
push
dec
jnp
fcomp
push
mov
stos
xor
add
push
in
inc
pusha
sub
loopne
sbb
nop
lock
xor
inc
jae
fcmovu
adc
push
push
push
mov
xor
add
sbb
xor
popf
and
cdq
cmp
jg
mov
in
cmp
pop
js
mov
imul
sbb
das
xor
or
jnp
jecxz
inc
or
sub
xchg
or
fbld
sbb
into
mov
cmps
in
inc
pusha
int
into
adc
or
jecxz
xchg
test
pop
popf
dec
je
test
dec
fcomp
add
push
push
and
aas
aam
cmps
mov
inc
inc
je
shl
inc
les
cmps
cmp
xchg
fisttp
test
mov
aaa
movs
xor
sub
sti
cmp
lea
mov
ret
mov
pushf
rol
lea
stos
push
adc
add
adc
test
(bad)
mov
inc
inc
xchg
lahf
test
mov
int
push
lods
push
dec
push
push
dec
add
and
test
and
pop
ror
pop
pop
xchg
call
bound
int
push
add
add
fs
or
inc
sbb
mov
and
cmps
scas
or
imul
xchg
nop
mov
sar
sub
je
dec
je
add
inc
and
imul
and
jl
jmp
out
xchg
data16
retf
aam
pop
fsubr
sbb
pop
sub
pop
pcmpeqw
nop
mov
scas
ss
sub
mov
mov
add
sbb
popf
xchg
xchg
push
jg
repnz
add
sbb
add
push
push
and
add
dec
or
dec
or
and
xchg
cdq
push
mov
xor
and
push
add
leave
pop
mov
push
ret
rcr
jmp
push
push
jp
ss
dec
and
dec
dec
(bad)
imul
mov
push
jmp
dec
and
aad
lods
rol
or
cwde
jmp
cld
xchg
add
sbb
push
pop
pusha
xchg
inc
mov
pop
and
push
and
inc
movs
arpl
sbb
jmp
jl
push
nop
inc
mov
test
push
pop
mov
stc
and
adc
xchg
movs
and
mov
jbe
ja
add
mov
ja
rol
dec
sbb
call
inc
int
adc
adc
dec
sub
hlt
shl
jecxz
sbb
adc
shr
jmp
mov
sub
mov
add
rcr
hlt
xchg
test
hlt
mov
dec
mov
mov
fiadd
(bad)
jg
xchg
xor
fs
or
ror
push
call
add
cdq
dec
dec
cmc
fcomp
test
add
jmp
inc
dec
and
das
shl
and
adc
and
test
and
mov
mov
bound
sub
shl
sub
mov
jl
xor
aaa
call
jbe
lock
and
push
pop
adc
pop
sub
sbb
xchg
or
popa
sub
rcl
add
addr16
push
sbb
es
add
in
sub
or
test
ret
in
out
hlt
mov
and
rcr
xchg
adc
lock
ret
shl
icebp
mov
retf
inc
test
imul
inc
pop
sub
cmp
or
stc
or
dec
xlat
arpl
adc
mov
scas
pop
xor
xor
or
xchg
jae
sbb
add
daa
aaa
ins
ins
jmp
xor
xchg
xchg
jno
and
jnp
and
push
sbb
cmp
retf
jle
(bad)
adc
push
and
jle
sbb
push
push
fdivp
ss
sbb
enter
add
pop
je
push
sahf
sti
sbb
push
pop
add
push
lea
das
pop
fdivr
psadbw
fadd
dec
js
sbb
shr
add
add
mov
inc
out
ror
add
pop
push
sbb
add
or
stos
lods
les
sbb
xchg
sbb
in
jle
test
or
xchg
adc
jnp
pop
rcl
sub
scas
pop
cdq
push
call
or
pop
gs
jne
sub
test
js
push
lock
adc
into
(bad)
retf
mov
ret
test
jb
adc
inc
lahf
push
inc
mov
shl
and
and
sub
jl
cmp
xchg
mov
mov
push
stos
arpl
mov
shl
lods
bound
sub
add
mov
aas
add
mov
jg
pop
add
test
mov
add
xchg
sub
retf
xchg
push
xor
rcl
mov
lods
mov
ins
adc
push
sbb
cwde
sbb
and
or
or
or
mov
mov
lods
jge
adc
cmps
push
sub
adc
cmp
jmp
pop
cmp
shl
push
push
cmp
dec
int3
fimul
sub
lds
jo
idiv
and
and
das
jbe
or
jbe
sbb
jo
mov
xchg
sbb
sbb
push
pop
sar
dec
cwde
jmp
jle
setno
movs
jmp
add
and
popa
call
push
cmp
rcl
or
pop
xchg
lock
sysenter
mov
mov
clc
push
and
stc
daa
xchg
jmp
js
xchg
mov
pop
xor
aam
dec
out
adc
jmp
sbb
inc
pop
sub
mov
out
sbb
push
jae
arpl
popa
xchg
inc
loope
gs
sbb
cmp
mov
add
and
sub
jne
pop
push
push
(bad)
push
lea
sub
and
mov
shl
rol
push
mov
mov
jb
retf
mov
mov
sbb
leave
mov
(bad)
dec
cdq
idiv
shl
sbb
lea
cmp
retf
aam
mov
ins
xlat
stc
stc
test
mov
rcl
shl
or
pop
adc
mov
add
int
scas
or
inc
mov
push
fcomp
fstp
xor
mov
or
or
dec
fxch
pop
inc
pop
and
mov
test
or
pusha
test
push
fnstenv
test
adc
and
xlat
imul
jo
push
ffreep
push
pop
sub
ja
push
adc
ins
or
jge
retf
enter
cmc
mov
xchg
dec
jge
xor
mov
and
gs
sub
jecxz
test
xor
sub
add
lea
sub
dec
mov
enter
imul
adc
inc
and
call
and
sub
mov
or
cvtdq2ps
xchg
ror
ror
pop
mov
(bad)
cmp
cmp
or
dec
retf
dec
xor
add
fistp
lods
shl
enter
xchg
push
das
sub
xor
or
xor
das
cmp
dec
jecxz
mov
dec
cdq
test
inc
or
inc
mov
loope
call
add
and
add
xchg
rcr
add
adc
(bad)
adc
mov
and
test
sahf
pop
or
cmp
jmp
push
mov
mov
cmps
test
test
movs
xor
dec
or
int
jae
push
xchg
lods
adc
mov
push
or
and
lods
or
inc
xor
xchg
or
and
xor
push
dec
punpckhdq
add
ja
repz
or
ret
pop
je
add
jb
inc
mov
test
mov
inc
(bad)
clc
lods
lock
jg
pop
and
mov
add
shr
cmc
mov
(bad)
fdivr
mov
sbb
adc
jns
xchg
and
xor
retf
cmp
mov
or
mov
mov
pop
add
dec
ret
mov
or
push
mov
call
push
rcl
jae
xor
and
(bad)
inc
test
sbb
movs
xchg
inc
ret
push
mov
dec
dec
sbb
pop
dec
jb
cmp
(bad)
outs
sbb
inc
call
xchg
push
retf
(bad)
enter
dec
sti
push
rcl
daa
(bad)
pop
call
lahf
shrd
mov
inc
add
sbb
or
push
push
in
push
cmp
mov
jbe
movs
add
clc
ins
sti
daa
mov
xchg
loopne
adc
and
adc
scas
sbb
js
loopne
enter
retf
dec
pushf
rol
inc
out
push
loopne
loopne
pusha
les
sub
out
clc
cmp
jne
mov
lea
fimul
mov
lods
push
cdq
lods
mov
dec
mov
(bad)
jnp
fadd
inc
inc
or
int3
and
rol
in
pop
lock
rcr
ror
icebp
jle
fwait
sbb
jge
leave
iret
xor
ja
push
dec
push
sbb
leave
ror
jl
cmp
jo
adc
mov
push
rcr
adc
push
xchg
sti
adc
add
movd
ret
pop
mov
pop
or
push
adc
ins
cmps
ror
dec
or
jns
mov
les
mov
sar
or
pusha
das
xlat
js
lock
xchg
gs
or
mov
or
xor
pop
sub
sub
test
add
sub
retf
mov
fchs
mov
loop
add
loopne
pop
in
pop
adc
ret
stos
test
out
sbb
or
test
or
aam
inc
sbb
mov
repz
adc
and
or
addr16
jne
xor
call
sub
and
clc
or
mov
sbb
enter
or
xchg
add
jp
push
sbb
fwait
(bad)
int3
leave
mov
mov
jo
imul
or
jbe
sbb
in
cld
cmps
xchg
xlat
add
mov
repz
or
xchg
repz
imul
adc
mov
mov
and
xchg
and
adc
and
sbb
test
add
out
mov
sub
lods
inc
std
sbb
ret
inc
adc
ror
dec
stos
shr
push
or
lock
inc
jecxz
fcomp
add
jp
sbb
and
mov
and
sub
and
or
test
pushf
std
adc
inc
leave
push
nop
push
adc
jp
jb
frstor
or
loope
pop
sti
sbb
dec
mov
mov
or
mov
daa
in
aad
js
shl
shl
cmp
and
loopne
inc
adc
adc
inc
add
jb
test
repnz
iret
dec
push
mov
mov
stc
in
rcl
push
loope
repz
xchg
ret
or
dec
mov
inc
push
loope
mov
jne
add
mov
jne
pop
mov
lock
sub
xchg
iret
fcmovnbe
jge
inc
daa
xor
xor
aam
aam
fcomp
dec
fcomp
mov
ret
jb
pop
mov
shl
add
popf
in
repz
je
test
adc
mov
sub
push
inc
xor
push
or
cmp
xor
call
sbb
push
mov
mov
aaa
ins
mov
aaa
add
and
stos
sbb
mov
ret
mov
and
push
adc
movs
mov
and
and
ficom
dec
mov
cmp
test
hlt
and
xchg
push
sub
cmp
lods
pop
cld
sbb
xor
jne
cmc
dec
fadd
dec
add
cmp
sbb
aam
cmp
mov
jg
mov
jns
into
push
cmps
cmp
xlat
hlt
(bad)
retf
pop
dec
lea
push
jmp
icebp
mov
push
pop
adc
test
mov
test
push
and
out
test
or
or
mov
adc
xchg
les
daa
enter
inc
cwde
retf
sbb
pop
jg
(bad)
ffreep
inc
movs
movs
push
pop
div
xchg
or
test
pop
popa
pop
sub
push
mov
lds
pop
ja
les
test
and
out
daa
xchg
xchg
xlat
lea
adc
call
aaa
xor
xchg
jns
xchg
not
inc
call
xadd
inc
or
adc
pop
loopne
bound
or
stos
sbb
xchg
cmp
adc
nop
ret
test
or
push
push
sub
mov
iret
push
xchg
and
jo
ret
jbe
xor
push
or
cmp
mov
inc
cmp
fwait
sbb
add
add
ja
cmps
or
cld
lds
std
(bad)
push
inc
das
inc
or
inc
nop
aam
add
(bad)
lock
das
rcl
jmp
ja
sub
dec
xchg
shl
xor
mov
jg
xor
mov
lock
jae
les
cmps
dec
rol
call
push
test
sbb
or
pop
xchg
mov
retf
push
cmps
sbb
je
and
xchg
jno
inc
loope
dec
jmp
ret
adc
jmp
mov
push
cs
jmp
adc
mov
xlat
loop
mov
adc
daa
push
cdq
movs
pusha
aas
dec
push
mov
and
xchg
adc
jl
enter
outs
ror
pop
jmp
xchg
(bad)
sar
mov
int3
scas
(bad)
mov
or
imul
push
adc
and
mov
xor
push
adc
sti
ins
add
dec
fs
or
push
or
sub
gs
mov
gs
mov
dec
jne
ret
inc
ret
inc
shl
xchg
and
test
cmps
pop
mov
adc
mov
adc
add
in
movs
fld
scas
xchg
and
aam
call
je
jge
mov
dec
or
and
sti
mov
mov
fmul
and
cli
inc
adc
es
push
sbb
rol
mov
or
xchg
daa
leave
and
dec
jbe
push
sbb
inc
call
mov
and
loopne
add
cmp
data16
stc
mov
jmp
inc
and
sbb
aam
imul
and
or
cwde
inc
adc
ror
or
pop
sbb
aaa
xlat
inc
pop
jmp
fild
and
and
jne
xchg
pop
sbb
aam
adc
sub
rol
out
xchg
loopne
or
adc
and
xor
or
jg
jmp
push
cmp
dec
inc
xlat
adc
loopne
icebp
in
fadd
dec
add
push
mov
test
xchg
xlat
adc
pop
sbb
pop
imul
or
dec
lock
imul
cmp
or
dec
adc
retf
mov
adc
push
and
jo
shl
push
mul
lahf
inc
cmp
test
test
dec
and
push
cmp
hlt
call
inc
xor
or
adc
adc
ins
push
and
not
ud2
sbb
add
mov
js
mov
mov
pop
sbb
jne
xchg
imul
mov
cmps
je
xchg
mov
add
xchg
dec
jmp
scas
leave
or
cmps
lods
adc
sub
inc
clc
je
sub
mov
in
nop
add
sar
add
mov
je
mov
jl
cmp
mov
sbb
fwait
test
fild
js
sub
inc
mov
add
shr
push
push
cmp
(bad)
xor
inc
jo
sbb
pop
mov
mov
pop
jnp
call
mov
and
sar
mov
adc
mov
adc
das
push
xchg
sbb
push
dec
jae
push
call
inc
mov
hlt
or
xor
and
fs
sbb
push
sub
mov
xor
jne
icebp
push
inc
inc
sti
movsx
push
inc
(bad)
dec
inc
scas
adc
jne
pusha
mov
rol
lock
aas
add
imul
repnz
or
push
or
cmp
and
xor
pop
shr
dec
mov
stos
xchg
fild
mov
sbb
or
cli
retf
add
cmp
pusha
sbb
aad
adc
xchg
pop
lahf
push
inc
loope
and
ja
jge
inc
pop
fsubr
std
cmovns
sub
mov
jl
mov
xchg
add
cmps
adc
inc
loopne
popa
mov
rcl
and
and
pop
(bad)
mov
not
sub
mov
test
in
movs
jo
mov
(bad)
adc
add
test
stos
stos
add
mov
xchg
add
lahf
pop
sub
cmc
adc
popf
dec
loop
xchg
into
inc
test
push
push
mov
jnp
cmp
jns
mov
fidivr
adc
popf
xchg
imul
lds
pop
dec
into
(bad)
stos
popa
mov
pusha
mul
gs
fldcw
mov
sub
dec
jp
mov
xchg
or
jle
jae
aad
xchg
or
fsub
push
or
push
es
mov
xchg
or
jmp
dec
inc
sub
leave
sbb
mov
mov
adc
ret
adc
xchg
out
outs
xchg
add
and
sbb
push
dec
inc
jo
cmp
pop
sub
pop
sbb
sar
mov
push
and
inc
mov
add
loop
and
push
mov
pop
imul
add
xor
mov
ret
popf
pusha
push
fidiv
cmp
pop
push
sahf
loope
or
rol
je
sub
dec
aas
fdivr
test
mov
ins
cmp
jle
gs
and
xchg
cmp
pop
(bad)
or
pop
mov
outs
mov
inc
(bad)
(bad)
inc
pushf
mov
sbb
mov
mov
mov
mov
inc
mov
dec
mov
jb
inc
fmulp
ror
and
shr
cli
repz
mov
mov
ins
push
inc
cmp
pop
adc
shl
sub
or
jmp
sub
or
and
std
xchg
add
jmp
dec
adc
push
dec
jmp
in
adc
xor
add
and
mov
test
inc
mov
push
add
or
clc
sbb
je
or
mov
lods
inc
ret
add
daa
xchg
pop
loopne
das
popa
mov
xor
test
push
int3
sub
hlt
sbb
bound
iret
ret
movs
nop
and
dec
popa
dec
ret
nop
push
xchg
inc
push
adc
push
hlt
imul
(bad)
mov
adc
jle
mov
inc
or
mov
div
scas
movs
shr
mov
popf
inc
je
(bad)
mov
cmps
mov
xchg
sub
loopne
call
(bad)
xor
je
adc
and
xor
arpl
and
sub
lock
dec
js
adc
adc
nop
jnp
mov
sbb
pop
cmp
adc
push
push
sbb
fsub
outs
adc
loope
push
mov
sub
push
mul
or
mov
clc
retf
mov
push
or
sar
jno
mov
out
test
or
add
das
dec
ret
push
cmp
mov
mov
sbb
cli
jo
dec
cmp
adc
mov
jne
or
jl
xor
sub
iret
jne
add
dec
add
inc
sbb
xchg
mov
fsubr
aaa
out
add
sub
cdq
test
pop
sub
or
or
lods
adc
cwde
das
jnp
add
xchg
adc
sbb
adc
jecxz
aas
push
adc
fcom
jne
mov
push
mov
ficomp
ins
pop
mov
(bad)
and
jb
push
xchg
fs
dec
pop
sub
loope
ja
push
aaa
(bad)
or
sub
and
push
jo
add
jmp
dec
push
cmp
mov
adc
add
not
sub
push
lock
lds
lahf
lea
push
test
pop
push
test
mov
cwde
push
dec
out
add
adc
test
std
add
in
mov
and
pop
aad
(bad)
test
dec
lods
push
int
cmp
xor
sahf
sbb
shl
test
or
add
test
pop
fadd
or
push
inc
adc
add
sbb
push
sbb
cmp
lea
pop
add
mov
and
inc
(bad)
add
inc
into
rol
lods
inc
sbb
xor
jmp
lea
daa
jmp
push
dec
ret
pop
or
inc
inc
jb
mov
adc
in
add
mov
mov
stos
out
fcom
daa
or
and
mov
push
xor
adc
push
fsub
sub
push
sbb
xlat
and
mov
cmps
cdq
cli
xchg
or
pusha
cmp
add
jg
in
add
pop
xor
ficom
not
call
xor
mov
sub
pusha
pop
jmp
jg
add
sub
jbe
outs
mov
fnstenv
xor
push
daa
and
daa
sub
jo
test
(bad)
rcr
and
lock
jle
mov
imul
lods
icebp
inc
adc
inc
scas
inc
sub
ins
pushf
mov
adc
push
call
aaa
sbb
lea
or
pop
mov
test
sub
jmp
xchg
and
retf
lahf
(bad)
jne
xchg
mov
pusha
nop
rcr
push
dec
enter
nop
sbb
adc
add
repnz
mov
xor
or
xor
dec
movs
inc
and
out
loopne
or
push
(bad)
mov
pop
ror
add
test
sub
pop
fnstcw
mov
nop
adc
mov
inc
or
lahf
push
lock
and
aad
or
add
cmps
jnp
fwait
sub
je
or
jp
mov
dec
xchg
push
out
mov
cmps
fcomp
push
jmp
or
sahf
gs
inc
ret
inc
add
lods
sub
adc
pop
push
mov
add
mov
xor
mov
leave
scas
out
repnz
sbb
inc
mov
movzx
push
jb
popf
pusha
dec
jno
sbb
test
push
jbe
push
test
jle
add
jb
cmp
jmp
sub
loop
sbb
and
lock
push
outs
push
adc
and
push
scas
add
mov
sbb
jnp
call
sbb
loopne
loopne
or
inc
lock
inc
or
sub
inc
bound
test
aam
sub
leave
test
scas
mov
xchg
push
lock
or
lods
test
adc
add
mov
arpl
sub
push
inc
inc
shl
enter
(bad)
mov
add
sub
scas
sub
sbb
call
add
add
mov
push
xor
in
and
bound
cmp
cmp
mov
sub
test
push
pop
rep
push
mov
xor
cli
rol
ror
lock
fs
sahf
pop
adc
div
or
mov
inc
dec
push
ret
mov
push
adc
loopne
push
test
sbb
inc
pop
shr
mov
arpl
adc
or
xchg
mov
pop
inc
pop
mov
or
mov
pushf
cwde
push
dec
call
sti
les
int3
jno
mov
ins
fsub
cmp
nop
or
loopne
mov
imul
jb
outs
jl
inc
push
adc
pop
mov
pop
pop
or
xchg
retf
in
ins
mov
in
mov
push
mov
dec
sbb
mov
mov
test
pop
pop
enter
rcr
or
pop
les
js
lods
push
push
cdq
dec
(bad)
fwait
pop
and
rol
sub
ficom
xchg
retf
xchg
push
movs
das
ds
dec
enter
repz
pop
call
fsub
retf
add
ss
dec
jb
fs
loopne
mov
add
inc
push
neg
xchg
retf
ret
dec
bound
adc
sbb
push
xchg
fxrstor
adc
addr16
sbb
popa
jl
add
xor
loope
cmp
pop
fild
xchg
cmp
cmp
fisttp
and
xchg
sub
dec
xlat
and
add
sub
fcomp
sbb
call
sub
popf
cmp
(bad)
sbb
add
pop
dec
mov
mov
inc
pusha
movs
and
adc
popa
xlat
rol
add
push
sbb
sub
adc
push
fcmovnu
(bad)
sahf
ins
push
out
xor
sub
js
lahf
sub
lds
test
adc
inc
sub
push
sub
adc
adc
and
mov
mov
mov
call
jg
mov
add
mov
ror
lea
push
lock
cmp
jmp
mov
push
in
jmp
or
retf
js
inc
xor
and
jo
or
fwait
mov
rcl
pop
mov
jno
xchg
pop
add
data16
call
dec
retf
jae
pop
pop
and
lea
dec
ins
adc
add
adc
nop
leave
ret
or
add
push
mov
shr
int3
and
ja
adc
inc
push
push
and
fwait
dec
push
pop
dec
bextr
push
ror
and
xor
push
scas
or
mov
pop
push
pushf
cmps
or
add
push
push
mov
int3
xchg
mov
jl
jg
ins
retf
movs
xchg
inc
gs
lds
xchg
push
push
push
inc
mov
cld
rcl
retf
add
lds
rcr
neg
push
sbb
inc
xchg
and
gs
xor
xchg
mov
mov
cs
imul
mov
inc
in
cwde
push
sahf
cmp
daa
jne
lds
ficom
mov
fbstp
add
rcl
aas
popa
add
imul
dec
inc
xchg
jnp
dec
inc
pop
mov
lahf
pusha
in
out
movs
call
push
leave
lahf
fnstcw
inc
jmp
enter
or
lock
cmps
fmul
mov
(bad)
jmp
push
ins
rcl
xchg
out
fs
lahf
push
daa
fdivr
jnp
jnp
mov
test
push
or
push
push
dec
mov
test
mov
daa
and
or
in
or
mov
out
in
jb
dec
into
mov
or
repz
fadd
jmp
fdivr
fadd
mov
xor
xor
test
shl
xchg
or
fiadd
sub
mov
or
inc
or
test
sub
fsub
wbinvd
cmps
sub
adc
jg
nop
fstp
pop
or
jb
and
inc
inc
sbb
or
cwde
cmps
or
dec
aaa
push
cmps
pop
test
ins
add
pop
xlat
jl
pop
and
jecxz
jmp
push
retf
stc
pop
sahf
xchg
es
movs
call
aas
or
dec
mov
mov
leave
push
mov
cmp
dec
inc
aaa
pop
in
test
xchg
pushf
dec
bnd
pop
daa
dec
push
cmp
push
mov
lock
sbb
xor
push
popa
add
xchg
adc
icebp
inc
sbb
bound
call
inc
out
mov
mov
popa
or
cmp
movs
push
mov
push
imul
adc
ins
loope
aam
sbb
cmp
fcom
ss
sbb
leave
cmp
sahf
mov
adc
push
inc
lods
jae
push
dec
add
add
mov
and
jle
inc
mov
sahf
and
mov
mov
and
and
mov
dec
ins
add
jl
test
xor
imul
push
arpl
xchg
cwde
movs
pop
js
xor
sahf
push
sub
or
and
rcr
scas
cmc
scas
(bad)
lock
outs
mov
sub
and
out
add
cmp
movs
xchg
mov
ror
mov
add
and
pusha
nop
mov
lds
inc
popa
aaa
add
out
push
cdq
jge
std
cmps
mov
add
adc
add
push
fimul
add
cmp
or
int
dec
leave
push
xor
add
cmp
cmp
xor
inc
in
add
xlat
mov
out
icebp
repnz
test
dec
sub
and
mov
and
rcl
loop
pop
enter
and
mov
ror
or
inc
or
push
mov
add
(bad)
sub
popf
nop
dec
rcl
jae
add
dec
movs
sub
in
nop
call
or
mov
sbb
inc
cmps
push
int
in
dec
std
sub
pushf
gs
jns
pop
mov
scas
jmp
xor
sub
dec
fsub
movs
sar
jb
cmp
rcr
test
loop
mov
clc
mov
or
or
xchg
or
sub
pop
sbb
sbb
lds
inc
gs
adc
or
add
addr16
add
je
cmp
shl
arpl
cmp
rol
(bad)
fld
push
rol
aaa
rcr
push
rcr
inc
fist
out
xchg
mov
or
scas
fsubr
mov
pop
shl
outs
cmp
or
mov
mov
push
pop
lods
mov
sub
rcr
add
push
jo
cmp
(bad)
shl
push
pushf
fcmovnu
push
jnp
xor
cdq
mov
mov
nop
ror
ins
repnz
sub
push
dec
mul
cmc
fmul
xchg
xchg
movs
ror
push
neg
cwde
ror
or
ret
push
add
jbe
or
and
pop
mov
sub
add
push
push
jo
inc
sbb
pusha
adc
aas
je
or
sar
pop
or
adc
mov
mov
lea
mov
sub
pop
imul
lahf
mov
push
push
pop
push
or
bound
add
test
loopne
pop
adc
dec
jl
or
and
test
int3
and
and
movs
dec
mov
push
adc
retf
inc
xor
pop
test
mov
dec
xchg
mov
stos
sbb
mov
xchg
gs
lea
dec
sbb
test
or
mov
sub
inc
fimul
loopne
inc
mov
test
adc
adc
adc
mov
adc
nop
pop
add
aaa
inc
inc
sbb
ror
mov
or
cmc
push
cmp
and
mov
(bad)
popa
data16
mov
add
das
test
add
fstp
gs
cli
rcr
iret
out
push
xchg
(bad)
push
add
cmp
fwait
xor
retf
icebp
cmps
sbb
or
xor
inc
jmp
push
dec
xor
push
enter
xchg
push
in
xchg
rol
add
push
adc
aas
push
lahf
adc
test
mov
into
shl
add
jle
adc
cmp
rcl
pop
xchg
mov
and
retf
add
rcl
in
jecxz
mov
push
mov
mov
xor
mov
dec
sub
inc
mov
repz
push
sbb
jb
and
and
mov
not
dec
pop
into
lea
out
test
xchg
imul
xor
push
out
andnps
mov
inc
cmps
or
push
adc
cmp
push
push
add
pop
mov
mov
mov
mov
cmp
push
push
and
retf
mov
test
lea
jl
rol
mov
push
adc
adc
add
dec
inc
retf
dec
mov
nop
dec
jmp
mov
loop
inc
xchg
rcr
in
or
add
cs
cld
jns
in
add
add
cmp
mov
or
loopne
out
mov
adc
mov
test
pop
pop
call
jno
aaa
in
and
pusha
stos
loopne
ret
or
dec
add
popa
je
add
adc
test
pusha
leave
jge
in
inc
add
mov
dec
or
sbb
pusha
sub
push
or
aad
jns
mov
mov
adc
mov
sbb
dec
dec
cmp
ret
shl
sbb
or
pop
cs
adc
sbb
sbb
add
pop
mov
lea
pop
ss
and
sar
cmp
mov
rcr
fsub
xchg
sub
and
mov
ins
ror
sub
(bad)
or
dec
xor
cmp
enter
mov
push
mov
ret
adc
or
ret
ja
(bad)
push
mov
or
sub
sub
or
or
jge
mov
repz
xchg
dec
jg
xor
dec
xchg
clc
ins
and
adc
mov
(bad)
cmp
jne
cmp
pusha
cmp
iret
pop
or
out
xchg
pop
jmp
pop
cs
inc
xchg
mov
adc
ins
xor
test
shr
mov
adc
in
cmps
and
lea
imul
adc
xchg
push
mov
sub
sub
mov
(bad)
mov
mov
pop
mov
push
in
popa
ret
mov
jne
inc
call
les
js
fwait
mov
push
pop
jmp
add
pushf
push
xchg
das
push
push
fisttp
jecxz
out
adc
push
rcl
cmp
add
cld
(bad)
and
nop
mov
int
cmp
ss
and
pop
push
add
cdq
xor
adc
push
push
cmp
punpckhdq
ror
fwait
add
or
inc
mov
rep
dec
pop
daa
sbb
and
and
sti
or
into
xchg
push
cmp
daa
jmp
push
sub
ss
sbb
repnz
add
add
add
es
fmul
adc
dec
jo
add
mov
ss
fs
add
pop
sbb
xor
xchg
jb
sbb
fld
dec
mov
ret
js
cmp
punpcklbw
ins
lahf
inc
dec
daa
enter
adc
fs
xchg
ror
out
adc
pop
sbb
popa
retf
and
pop
xor
pop
loop
or
into
dec
xchg
xor
push
inc
std
sub
add
mov
add
mov
cmp
dec
pop
pop
movs
out
mov
xor
bound
add
xchg
and
adc
sbb
les
push
mov
push
cdq
(bad)
lea
dec
cmp
mov
push
and
int
sub
adc
adc
mov
xchg
in
or
js
hlt
mov
or
xor
xchg
test
out
adc
sub
adc
rcl
in
mov
repz
movs
mov
and
add
push
rol
dec
and
fist
mov
push
ss
xchg
and
ror
or
arpl
(bad)
ins
add
into
and
inc
int
xor
add
popa
push
rcr
add
addr16
shl
cmps
push
push
mov
mov
mov
inc
xor
mov
leave
(bad)
and
sar
fcomp
nop
jb
in
dec
ins
xor
int
pop
imul
sbb
loopne
cmps
fldenv
in
sbb
and
push
clc
pusha
lea
(bad)
int
xor
jnp
xchg
or
scas
cmp
add
lock
test
mov
or
pop
imul
aas
leave
jl
scas
mov
dec
mov
cwde
add
add
mov
jne
lds
add
jbe
push
sub
pop
xchg
add
ror
lock
mov
ds
dec
hlt
fcom
adc
pop
pop
into
cmps
imul
mov
dec
jae
call
sbb
mov
(bad)
add
jge
inc
sub
mov
push
idiv
add
dec
retf
dec
test
in
pop
push
or
cmp
cmp
xor
adc
popa
cdq
leave
xlat
and
push
fs
and
xchg
ss
dec
adc
scas
popf
mov
sbb
push
add
inc
enter
ror
ror
adc
inc
dec
mov
inc
push
mov
xchg
and
xchg
fist
xchg
das
in
rol
sbb
cdq
and
push
ins
outs
ins
test
and
loopne
inc
dec
xor
outs
xor
imul
and
mov
pop
pusha
xor
fcmovu
les
inc
jne
ss
and
jno
adc
push
xchg
jl
or
sub
mov
ldmxcsr
loopne
loopne
int3
aas
pop
xor
fs
xchg
cmp
ret
pop
js
or
push
or
or
and
push
push
inc
or
ret
jbe
cmp
sub
imul
neg
les
std
gs
and
sub
push
lods
ror
xchg
ss
adc
ins
stos
and
sub
lods
popa
sub
push
fnstcw
mov
sub
sbb
jo
fwait
inc
mov
test
cmp
or
xor
pop
cs
xchg
inc
mov
or
cmp
cmp
mov
aaa
mov
mov
adc
or
or
or
sbb
add
fcomp
jecxz
push
dec
cmp
les
cdq
inc
gs
mov
fs
cwde
fsubr
sti
or
arpl
(bad)
add
ins
and
mov
es
outs
ins
pop
sbb
add
div
jmp
test
mov
popa
or
push
xchg
add
xor
mov
stos
xor
add
jae
jmp
dec
jmp
repnz
add
dec
adc
mov
and
pop
or
shl
xchg
shr
popa
pavgb
or
rcr
dec
mov
outs
shr
dec
mov
fistp
(bad)
push
sub
and
xchg
imul
mov
sub
ins
jae
enter
xchg
sahf
xchg
adc
inc
fnstenv
inc
inc
imul
prefetcht0
sbb
xor
loope
jecxz
add
call
inc
enter
dec
push
(bad)
nop
add
mov
in
push
fcom
arpl
ficom
ret
cmp
jbe
out
add
fstp
push
call
dec
jecxz
cdq
jbe
fld
adc
xor
in
jo
push
jb
and
jo
push
and
scas
dec
pushaw
xor
xor
loop
cmp
lods
jno
pop
or
jo
xchg
add
pop
fbstp
test
xchg
arpl
xor
movs
movs
jge
aas
retf
pop
adc
push
mov
push
test
sbb
or
xchg
out
outs
jnp
jns
leave
push
push
xor
inc
add
xchg
push
push
adc
enter
pop
test
pushf
jne
push
push
xor
popa
jp
or
pop
or
jb
mov
adc
mov
data16
adc
and
cmp
cmp
dec
mov
or
inc
jg
and
leave
lock
ret
mov
sbb
shr
lahf
test
inc
loope
cmp
mov
les
les
or
xchg
inc
xchg
lea
dec
xchg
sbb
sub
jmp
shr
or
cmp
xor
cmp
movs
cmp
clc
arpl
inc
call
fsubr
mov
push
and
iret
add
inc
imul
sbb
jle
push
dec
push
or
sbb
test
cdq
adc
and
add
jge
out
mov
cmp
pop
cmp
sub
add
add
sub
mov
test
xchg
mov
test
imul
adc
pop
mov
ins
inc
sub
inc
and
push
or
outs
std
adc
push
and
aaa
or
icebp
push
mov
cmp
test
mov
jl
jmp
in
pop
int3
mov
cmp
lea
xchg
adc
mov
in
ret
lahf
add
pusha
lock
lds
inc
push
jmp
fist
popa
ret
sbb
cwde
push
je
je
ins
xchg
or
pop
jg
movs
xchg
ror
cmps
jle
and
sub
sbb
imul
stos
fs
sub
adc
pusha
mov
ror
xchg
into
pop
and
and
aas
aad
sbb
mov
push
add
mov
pop
adc
cmp
fist
loop
ret
mov
and
dec
sbb
movs
icebp
outs
mov
add
add
nop
add
add
and
movs
add
add
(bad)
popa
pusha
cmps
add
adc
pop
ss
ins
push
fldenv
mov
mov
mov
jno
lds
and
rcl
xor
imul
mov
pop
ret
cmc
push
movs
rcr
cmp
lods
adc
or
daa
add
and
test
inc
dec
mov
sub
fs
jmp
inc
dec
loope
(bad)
clc
or
mov
mov
loop
in
pop
jb
lahf
jmp
popf
and
add
cmp
fidiv
jle
mov
aaa
cmp
push
dec
mov
cwde
push
lds
cmp
xchg
and
xchg
add
mov
mov
cmp
les
and
mov
push
add
or
jae
add
cmps
inc
daa
mov
pop
add
push
and
mov
ret
movs
push
mov
mov
inc
sub
jmp
mov
push
and
pop
cwde
js
repnz
xor
pop
push
in
adc
lock
jne
imul
dec
push
add
loop
mov
pop
push
xor
or
sub
jl
cmp
add
sub
sub
out
enter
les
dec
test
pop
push
shr
cmps
fsubr
add
ins
inc
push
or
imul
shr
sbb
mov
xchg
invd
push
mov
cwde
gs
jecxz
pop
fldenv
and
push
add
and
fisttp
sbb
(bad)
data16
in
sub
cdq
mov
nop
adc
mov
sbb
outs
aas
push
mov
sbb
jg
mov
pop
mov
pop
enter
xchg
es
and
pop
sbb
jle
shl
or
jne
int3
mov
data16
jae
pop
or
mov
fcom
imul
ja
sub
movs
lods
nop
je
push
les
dec
cli
neg
or
jae
push
sbb
ret
rcl
dec
sbb
pop
imul
aad
in
cli
or
in
or
jno
push
retf
rcr
add
lea
push
fist
scas
push
mov
out
inc
add
add
jp
ror
dec
xchg
mov
dec
add
mov
xor
cmps
push
mov
add
or
cmp
cmp
mov
addr16
push
or
mov
or
inc
ins
loope
fisttp
mov
add
lods
xchg
pop
mov
add
cmc
jl
mov
or
push
cwde
inc
dec
and
imul
push
jnp
cmp
call
dec
xor
mov
add
push
jae
pop
dec
add
and
mov
xchg
ins
dec
rol
xor
dec
push
test
adc
test
sbb
adc
lods
sub
and
test
adc
int
xchg
dec
cmp
cmp
mov
cld
mov
or
and
or
or
mov
mov
jns
xchg
les
ds
aam
sbb
pop
push
test
iret
sbb
jne
jno
outs
pop
mov
add
test
jl
xor
xchg
lahf
jnp
sbb
(bad)
lock
adc
push
test
push
shl
es
add
repz
xchg
push
iret
out
or
rcr
pop
add
and
sbb
movs
or
mov
loopne
mov
xor
dec
out
mov
mov
out
jl
sar
je
sahf
dec
add
mov
push
into
jmp
mov
push
je
gs
je
sti
sub
jl
mov
push
and
add
and
pushw
lods
enter
add
outs
adc
fstp
movq
dec
aad
shr
and
pop
adc
pop
pusha
xchg
call
sub
inc
ror
sahf
arpl
(bad)
in
jge
fsubr
push
jg
push
jo
movs
add
add
cli
jno
dec
or
mov
jne
ss
lock
ins
adc
cmp
sar
mov
dec
add
sub
add
lock
mov
add
dec
popf
sbb
add
or
in
inc
sbb
mov
push
dec
adc
adc
mov
hlt
clc
and
adc
adc
push
dec
and
mov
test
sbb
mov
bound
add
imul
lahf
sub
call
icebp
and
pop
add
push
mov
inc
outs
lods
cli
or
inc
retf
sbb
dec
leave
dec
(bad)
pop
mov
pop
sub
pushf
stos
hlt
jge
loope
nop
add
xchg
sbb
sbb
sub
mov
or
xor
out
dec
xchg
add
xor
lock
sbb
mov
hlt
js
push
xchg
push
ja
mov
sub
es
add
nop
or
inc
or
and
sbb
addr16
or
rcr
mov
test
lea
sbb
cmp
jbe
push
scas
mov
adc
xchg
add
and
mov
fstp
xor
push
adc
test
push
xchg
pop
push
popa
jmp
jmp
jg
loope
inc
cmp
add
cmps
inc
cwde
push
add
(bad)
shl
push
xor
xchg
ffree
daa
dec
or
xchg
pop
adc
les
dec
inc
cmp
mov
push
dec
push
adc
xchg
es
aas
mov
and
ins
or
mov
fmul
test
sahf
or
mov
push
das
imul
and
dec
jns
shr
aad
call
add
sub
xchg
sub
push
push
mov
(bad)
adc
or
shl
xor
push
push
call
adc
or
rcl
xor
add
bound
(bad)
ss
sub
push
sbb
stos
sub
jle
dec
mov
fdivp
xchg
xchg
or
mov
xchg
ds
pop
jg
adc
sub
or
neg
push
imul
cld
and
test
inc
movs
sbb
pop
mov
je
inc
jmp
dec
mov
aam
ds
mov
xor
jp
jne
cli
add
clc
mov
pop
add
clc
cmp
(bad)
xchg
out
pop
sbb
inc
xchg
xor
jge
jne
sub
stc
mov
pushf
scas
aam
hlt
inc
or
or
jno
add
mov
aaa
mov
call
and
and
imul
aam
adc
leave
pusha
aam
inc
call
ss
xor
inc
inc
shl
outs
inc
pop
inc
cmps
sub
popa
ins
sub
sti
pop
adc
scas
fs
sbb
xor
jl
and
add
push
or
ret
adc
in
mov
out
mov
push
lock
or
xchg
adc
xor
sbb
imul
dec
push
test
push
inc
popf
test
es
pop
inc
jne
mov
pop
test
inc
out
dec
mov
popf
and
dec
test
out
lods
sahf
and
mov
jo
movs
sbb
mov
pop
fiadd
test
mov
pop
inc
jmp
or
add
lahf
push
loop
lgs
push
or
jl
sbb
fisub
in
pop
add
sahf
and
test
push
test
clc
lock
test
imul
je
or
fmul
pop
xor
fnstsw
mov
add
test
lods
push
scas
movs
movs
cmp
pop
add
xchg
push
rol
push
or
sahf
inc
pop
retf
fimul
or
jo
xchg
mov
das
test
push
mov
ja
jmp
test
mov
and
mov
push
mov
dec
push
add
dec
stc
test
ret
mov
mov
xor
(bad)
sbb
pusha
mov
mov
pop
daa
loope
mov
or
sbb
jne
inc
inc
push
nop
shl
dec
pop
(bad)
lds
pop
push
mov
inc
mov
mov
call
pop
(bad)
iret
mov
test
or
ds
loope
and
xor
sbb
cdq
ror
je
push
or
repnz
aad
bound
mov
push
xor
int
sti
mov
mov
cmp
or
or
retf
cmp
iret
inc
ins
loopne
jne
(bad)
push
xchg
inc
lods
nop
aas
mov
mov
push
mov
sub
sahf
or
loopne
or
xor
loope
push
mov
out
mov
nop
mov
and
mov
adc
adc
dec
xor
mov
xor
pop
dec
sub
enter
and
rcl
add
push
dec
sbb
ret
outs
jge
shr
int3
and
rcl
and
mov
je
sub
mov
inc
mov
sbb
fadd
fdivr
xor
sbb
test
jne
outs
mov
sbb
mov
mov
pop
movs
add
add
into
add
or
(bad)
inc
pop
dec
(bad)
lds
movs
pop
mov
imul
test
sub
inc
and
cmps
sub
dec
sub
jle
adc
mov
xchg
js
jge
cmp
imul
cmc
xor
movs
sub
push
push
pop
xchg
add
and
pusha
mov
mov
jmp
loope
or
sub
inc
cmps
pop
enter
jmp
sub
add
fdiv
outs
ret
fwait
and
xor
outs
mov
xor
loope
sbb
ss
xchg
adc
ret
mov
xor
les
push
push
mov
loop
test
mov
xlat
shr
sti
sahf
into
mov
les
adc
leave
std
stos
xchg
arpl
push
ds
movs
aam
imul
and
add
and
rol
mov
adc
push
mov
sub
inc
(bad)
movs
jb
das
add
js
mov
cs
and
(bad)
cmp
add
xchg
stos
inc
or
dec
rcl
repnz
and
or
pop
pop
pop
pop
xchg
in
int
xor
loope
mov
sub
iret
sub
daa
jo
adc
retf
imul
or
and
rol
adc
pop
adc
or
push
ds
lea
lods
leave
mov
jecxz
inc
push
ret
movs
inc
fisub
or
jmp
icebp
cmps
lods
cmps
jno
je
popf
pop
push
inc
sar
push
test
mov
ds
sbb
push
cwde
fs
mov
jge
mov
adc
in
adc
lods
jecxz
rcr
in
data16
movs
mov
cmp
adc
dec
mov
inc
ds
sti
inc
test
push
or
adc
xchg
cmp
fwait
ret
jo
cld
adc
mov
js
adc
xor
sub
out
rcl
arpl
dec
repnz
inc
pop
mov
pop
adc
std
es
mov
ret
xor
xor
cld
sub
into
xlat
(bad)
push
mov
pop
dec
mov
sbb
push
sbb
ins
and
mov
dec
mov
iret
rol
pop
and
inc
test
test
push
add
dec
cmp
sbb
inc
or
sbb
jnp
gs
iret
lods
scas
push
sbb
xor
mov
xor
mov
mov
jmp
pop
push
push
jne
or
push
pop
xor
push
mov
std
add
pop
push
mov
jge
jle
xor
test
out
push
arpl
push
or
in
xchg
mov
jae
sar
push
sbb
mov
sub
jge
mov
or
movs
ds
cmp
xchg
adc
ret
add
add
in
fmul
sbb
ins
shr
(bad)
adc
or
ins
add
or
call
xor
sar
add
mov
(bad)
mov
mov
mov
inc
push
push
xchg
add
inc
push
add
psubq
mov
mov
mov
fst
pop
jo
imul
sbb
mov
xchg
or
sete
jecxz
mov
adc
(bad)
push
loope
or
je
or
adc
(bad)
sbb
or
inc
cmp
pop
xor
push
add
lods
jle
int3
adc
shl
push
or
adc
add
adc
ja
loope
xor
movs
outs
loop
add
cmp
enter
(bad)
out
inc
add
dec
xchg
fs
addr16
add
sub
aad
cmp
movs
push
fcmovnb
in
aaa
int3
or
cmp
add
sub
push
gs
push
dec
jno
lea
ret
mov
addr16
es
and
fld
dec
arpl
daa
clc
push
rol
xor
jmp
daa
or
push
push
hlt
inc
ds
movs
imul
cmp
test
push
ret
rcl
and
sub
sbb
push
js
jg
test
pusha
and
daa
push
fcom
jmp
push
cmps
jle
inc
pop
jg
jmp
push
push
fdivr
dec
or
dec
cmps
mov
adc
(bad)
sub
push
xchg
push
ins
and
mov
(bad)
aam
pusha
sub
cmp
aaa
mov
movs
in
mov
or
mov
or
sbb
fsub
(bad)
adc
mov
sub
push
push
or
nop
mov
jl
test
mov
sbb
fcmovbe
cmp
cmp
or
out
dec
push
pop
adc
ss
retf
jne
iret
pusha
cmc
push
dec
jo
xor
jmp
retf
ror
jo
pop
lea
mov
pusha
cmp
cmp
or
repnz
cwde
mov
or
push
nop
addr16
hlt
movs
xor
xchg
ins
adc
mov
xchg
mov
cdq
add
stc
pop
test
and
and
mov
aas
adc
shr
shl
or
sbb
das
pop
ins
push
jne
loope
push
sbb
movs
add
retf
push
dec
xchg
push
sbb
sahf
in
ret
xor
or
aaa
sbb
add
das
jo
mov
xchg
push
into
mov
add
mov
lods
ss
and
cmp
mov
push
jo
push
xchg
hlt
add
les
push
cmp
xor
loopne
xor
retf
outs
shl
outs
mov
loopne
mov
mov
mov
in
xchg
and
sbb
inc
test
adc
test
cmp
push
adc
mov
mov
dec
or
mov
add
je
pop
mov
sbb
dec
mov
or
ret
leave
(bad)
mov
scas
out
dec
js
jl
or
or
sbb
lods
ins
cmp
adc
aad
and
adc
sbb
je
jmp
pop
nop
fadd
out
sbb
push
pop
mov
popa
sti
mov
adc
jl
loopne
loopne
retf
rcr
fidiv
mov
mov
pop
add
fs
dec
(bad)
out
push
in
in
into
mov
inc
add
sahf
lock
dec
ins
mov
xchg
jo
loop
mov
fwait
push
or
adc
dec
daa
dec
or
fs
dec
or
lahf
lods
jmp
arpl
pop
pop
imul
jl
sbb
adc
or
push
adc
ret
dec
push
add
scas
es
and
or
mov
jp
mov
mov
dec
add
dec
cmp
cmp
cmp
movs
inc
or
bound
or
mov
test
scas
push
retf
xchg
dec
adc
push
xchg
add
or
fsub
ret
pop
repnz
xchg
inc
stos
xor
dec
adc
ret
jmp
js
sbb
push
aam
mov
pushf
sbb
addr16
daa
lds
jb
out
fcomip
jne
jne
cmp
add
add
imul
pop
sub
pop
mov
xchg
into
aad
adc
imul
fimul
in
sbb
inc
sub
shr
inc
mov
mov
es
push
sbb
mov
adc
pop
movs
xchg
imul
or
ret
mov
test
sbb
jne
in
push
or
movs
int3
fwait
nop
mov
mov
or
fisub
int
stos
ret
push
(bad)
cmp
lds
cwde
ss
jl
adc
mov
leave
sub
loopne
and
push
bound
inc
xor
inc
mov
repnz
test
ret
sti
inc
(bad)
inc
sub
cmp
dec
inc
xor
sbb
adc
call
(bad)
inc
cmc
or
add
xchg
lock
int3
in
push
mov
add
aaa
enter
cmp
fadd
shl
fimul
sub
(bad)
jo
scas
lock
xchg
sub
inc
lods
call
(bad)
cli
mov
and
ret
call
test
int3
mov
daa
(bad)
fistp
adc
push
jo
pop
loop
pmaxub
iret
fmul
jb
or
sbb
push
test
pop
xchg
sub
repnz
(bad)
sub
jge
add
bound
add
sub
sbb
das
and
lock
std
mov
or
movs
jg
daa
cmp
pop
add
dec
sub
and
inc
in
test
call
or
jns
lahf
add
adc
jp
xor
jmp
(bad)
pop
aam
les
sbb
mov
push
aad
icebp
es
out
ds
js
fbld
xchg
test
dec
push
adc
rol
inc
push
test
adc
mov
mov
sbb
iret
sysenter
adc
iret
adc
lock
dec
(bad)
bound
or
pop
adc
jb
sub
jne
test
add
add
aad
adc
lea
test
das
loopne
aas
das
xor
ror
arpl
outs
mov
mov
xor
enter
lods
int3
ror
aam
cdq
add
cmp
and
cmc
dec
pop
and
xchg
jno
adc
adc
mov
push
mov
jo
push
lea
sbb
or
inc
(bad)
cmp
nop
hlt
or
inc
sub
sub
into
sbb
push
push
sbb
lock
retf
in
jmp
mov
inc
pushf
sbb
adc
add
or
in
ss
cmp
lea
inc
popf
bound
das
call
xor
mov
stos
sub
pop
sub
or
jo
sub
dec
mov
sbb
sahf
inc
xor
or
mov
dec
xchg
ins
vhaddps
mov
je
js
inc
or
xor
call
js
loopne
mov
pop
adc
jbe
sahf
jne
adc
mov
jne
adc
push
pop
cmps
call
push
std
dec
adc
mov
cwde
les
mov
pusha
loope
movs
mov
test
dec
in
ss
sub
pop
repnz
xchg
push
jb
(bad)
xor
mov
adc
cmp
pop
ss
imul
adc
or
xchg
lods
mov
movs
sbb
lock
mov
les
fisttp
lock
pusha
sbb
sbb
ror
sbb
xchg
(bad)
fcom
or
xchg
scas
or
inc
and
and
pop
pop
stos
add
sub
mov
loopne
xchg
sub
and
lahf
push
in
mov
les
fdiv
outs
mov
mov
icebp
sub
adc
or
jno
sub
sbb
cs
test
sub
xor
cmps
mov
movs
pop
icebp
(bad)
popf
mov
jecxz
sahf
test
mov
in
cmp
call
std
cmps
enter
leave
add
and
bound
xor
retf
sub
cmp
jl
mov
inc
sbb
je
dec
dec
retf
pop
sahf
xchg
mov
push
lods
or
push
push
jmp
rol
push
sub
pushf
push
mov
cmp
jnp
dec
xchg
aas
mov
adc
xchg
mov
and
or
push
nop
(bad)
adc
dec
push
sbb
dec
adc
hlt
dec
cmp
or
xor
mov
mov
mov
movs
sbb
enter
mov
and
mov
addr16
mov
(bad)
ror
mov
adc
je
push
mov
rol
int
sbb
push
add
jbe
cmp
or
xchg
xchg
rol
enter
push
repz
and
lea
arpl
ret
mov
and
and
aaa
ins
in
adc
inc
ret
daa
or
or
mov
ins
(bad)
fmul
add
rol
push
dec
mov
call
mov
mov
xchg
pop
mov
sbb
inc
add
adc
inc
mov
(bad)
jle
cs
or
test
dec
nop
cmps
cmps
adc
sbb
push
fcomi
rol
movs
adc
ins
into
mov
and
add
and
mov
xor
cdq
mov
ror
xchg
mov
bound
adc
xchg
pop
fs
lods
add
xchg
and
or
xor
adc
jb
mov
pusha
sub
xor
dec
inc
shr
mov
test
(bad)
int3
icebp
mov
mov
mov
test
mov
adc
add
(bad)
mov
and
xchg
cwde
adc
mov
enter
jo
and
gs
jne
mov
aad
shl
adc
lods
jae
into
js
xor
and
das
sbb
jp
shl
or
les
inc
and
inc
ret
(bad)
int3
fs
cli
xor
retf
(bad)
or
sbb
pushf
mov
int3
shr
cmp
mov
cmp
stos
dec
inc
sahf
mov
jno
fmul
inc
nop
dec
sub
pop
mov
push
lds
(bad)
inc
sbb
dec
mov
mov
push
(bad)
jl
fwait
stc
push
pop
push
jl
cmp
mov
push
test
dec
dec
sbb
cmp
outs
xor
les
and
movs
mov
rol
fwait
pop
les
lods
shr
loopne
push
cmp
mov
or
gs
or
fsubr
xchg
and
loopne
neg
sub
lea
fimul
or
dec
add
pop
lock
shr
push
rol
test
mov
lods
out
add
es
dec
movs
adc
dec
or
xor
dec
jmp
push
in
shr
adc
push
mov
ror
bound
xor
mov
adc
mov
cmp
add
xor
les
jb
imul
cs
jl
and
iret
jne
repnz
in
mov
adc
push
movs
xchg
fs
in
mov
xor
mov
add
test
pusha
add
cli
loopne
inc
pop
(bad)
ret
push
mov
shl
xchg
cmps
imul
loopne
push
popa
out
leave
inc
cmp
inc
mov
xor
mov
popa
adc
sar
(bad)
push
xchg
nop
xor
fild
fcom
out
movs
sub
jmp
rol
pop
adc
or
pop
cs
or
mov
movs
imul
popa
not
inc
and
daa
in
shl
int3
test
cwde
cwde
mov
mov
fldenv
sbb
jge
arpl
add
push
jbe
(bad)
dec
movs
std
add
pop
xor
cmps
fnstenv
je
mov
or
cmp
add
and
pop
and
les
cwde
call
cmps
mov
popf
imul
rol
fadd
xor
js
cwde
cwde
xlat
mov
adc
jp
xor
out
push
mov
inc
pop
mov
push
cdq
sub
ret
adc
cmp
loope
sbb
fs
add
push
mov
adc
and
dec
pop
ret
push
add
test
pop
dec
mov
cwde
fdivr
xor
jbe
cmp
int
add
arpl
fcmovb
cmp
jp
movs
sub
mov
pusha
add
cmp
pop
adc
or
lea
cmp
cmp
sbb
mov
inc
call
fisub
clc
pusha
cld
add
mov
push
add
inc
pop
and
addr16
int
dec
sub
inc
frstor
jnp
leave
fcom
daa
and
mov
ins
inc
jnp
or
fwait
inc
push
aad
or
ret
cvtps2pd
mov
pop
and
or
shl
js
call
sahf
popa
xor
lds
jno
call
add
hlt
popa
std
test
inc
or
inc
push
push
and
mov
icebp
fwait
jmp
mov
dec
mov
xchg
sbb
inc
add
push
pop
loop
sub
js
ins
adc
push
(bad)
add
int3
repz
sbb
add
and
test
aaa
sbb
and
ret
or
or
add
xor
dec
xchg
jbe
shl
push
cdq
cwde
sub
jno
lds
pop
aam
sub
adc
fnstcw
sar
mov
mov
push
jp
inc
imul
xchg
jno
cmps
ficom
inc
push
mov
call
mov
jo
inc
ret
sbb
xchg
nop
enter
adc
jge
adc
and
ins
inc
add
xchg
xor
mov
cs
(bad)
mov
mov
and
mov
aaa
(bad)
je
add
and
adc
lock
xor
fstp
xor
push
or
jne
mov
gs
cwde
add
fisubr
je
or
sbb
cmp
mov
adc
cwde
clc
ret
outs
sbb
push
es
push
movs
adc
inc
mov
pop
xor
(bad)
mov
add
and
add
or
pushf
loope
add
inc
or
imul
xor
xor
mov
popa
mov
shl
inc
and
add
test
test
push
push
arpl
mov
(bad)
jne
push
cmp
mov
daa
inc
or
jmp
cmp
xor
mov
add
xchg
adc
add
jne
retf
or
ins
adc
in
dec
mov
fldcw
adc
in
push
add
push
stos
push
lock
inc
mov
not
les
dec
jbe
aad
(bad)
cld
pushf
mov
scas
(bad)
sbb
or
ins
loop
outs
dec
mov
cld
aas
add
and
mov
test
adc
jb
pop
jne
enter
cmp
nop
adc
aad
dec
stos
and
push
sub
jecxz
pop
and
test
test
pop
xchg
sub
ret
(bad)
mov
setnp
pop
es
cmps
jge
sbb
and
pop
lock
adc
pop
cwde
and
xchg
xor
and
cmps
add
push
(bad)
mov
fwait
push
inc
lods
outs
gs
dec
pop
cmp
jmp
retf
adc
jecxz
or
hlt
inc
pop
fsub
pop
sub
xor
fld
sbb
gs
xor
xor
inc
add
inc
and
loop
dec
xchg
add
inc
daa
mov
data16
push
inc
int3
adc
das
jg
(bad)
xchg
mov
sbb
ror
outs
ins
cmp
adc
mov
repz
xor
sbb
shl
add
outs
xor
dec
js
sub
stos
fist
scas
pusha
loop
push
add
test
sub
mov
inc
cs
and
out
jge
movs
or
sub
inc
lds
xor
lods
dec
or
pop
shl
fcmovb
or
push
pop
test
sbb
por
inc
or
or
icebp
and
int3
push
sub
inc
and
lahf
movs
iret
pop
xchg
xchg
loope
sar
loop
dec
push
xchg
test
gs
jo
inc
out
pushf
fiadd
mov
arpl
gs
adc
icebp
pop
push
xchg
or
shr
jne
dec
cmp
sub
cmp
call
int
pushf
loop
pusha
and
(bad)
rcl
inc
or
es
mov
xchg
das
jmp
adc
fs
lods
mov
and
jecxz
sub
push
and
inc
dec
or
mov
dec
push
pop
aas
pop
push
jmp
sub
ror
pop
pusha
shr
push
or
test
ret
fst
dec
das
or
or
xchg
bound
xchg
adc
jns
jne
das
test
mov
shl
cmp
aaa
or
xor
mov
cmp
mov
ret
adc
cmp
ror
mov
adc
add
shr
jo
mov
sbb
push
fcomp
pand
mov
inc
xor
cld
push
pop
fidiv
cmp
jge
sbb
sbb
or
enter
sbb
inc
pop
jl
jecxz
add
add
jmp
sbb
test
push
stos
mov
adc
dec
pusha
adc
out
fst
dec
or
sub
dec
adc
jp
add
sbb
xor
pop
sbb
out
fadd
xor
push
in
and
and
jmp
jmp
in
xchg
sub
out
push
xor
xchg
inc
or
xchg
leave
xchg
es
xchg
cmp
pop
fistp
push
inc
neg
sbb
sbb
add
jecxz
xor
adc
outs
and
or
inc
pop
cmp
jmp
js
push
mov
dec
and
add
aas
sub
and
cmps
jno
xor
mov
cmp
inc
add
es
test
pop
mov
push
inc
add
adc
xchg
stos
pusha
sbb
jnp
jg
dec
pop
xchg
fistp
mov
dec
dec
sbb
pop
dec
ja
mov
and
pop
add
inc
pop
push
imul
fidiv
push
ret
sub
sub
or
leave
add
sbb
ins
mul
add
call
data16
add
push
dec
and
(bad)
push
sub
xor
jmp
es
adc
push
ss
xchg
xchg
xchg
nop
xchg
lods
pop
ja
dec
push
dec
push
les
or
push
(bad)
push
pusha
or
cmp
nop
ins
pop
pop
xor
add
pop
inc
add
imul
push
add
add
adc
add
add
and
jl
mov
inc
scas
xor
sub
and
xor
cmps
dec
add
push
push
sbb
jo
lods
or
add
cmp
add
out
sub
cmp
es
pop
cmps
and
lock
mov
int3
rcr
add
xor
outs
sub
inc
pop
sub
addr16
sbb
push
mov
xor
mov
loope
dec
aas
(bad)
fnstenv
ds
and
xchg
icebp
push
add
cs
jmp
adc
jns
mov
pop
les
movs
sar
hlt
sbb
mov
mov
rcl
jnp
pop
enter
mov
sub
shr
fs
cwde
jmp
test
sbb
push
enter
or
add
and
mov
cmp
inc
push
mov
or
inc
imul
push
or
adc
pop
or
loopne
lock
leave
sub
pop
aam
push
into
jp
pop
mov
cmp
sbb
dec
push
add
aam
pop
pop
mov
mov
jl
ins
push
(bad)
and
jbe
retf
ins
and
inc
xor
pop
xchg
pushf
pop
int
mov
adc
icebp
xor
shl
push
dec
add
dec
push
cwde
jecxz
mov
cmp
ror
pop
sub
daa
cmp
jl
cmp
fstp
ins
push
loope
mov
and
cmp
add
aam
rol
clc
jbe
mov
jp
repz
jbe
popf
out
pop
push
pop
cmp
push
pop
dec
test
adc
dec
test
push
pop
gs
ins
in
fild
mov
fcomp
adc
dec
pop
xchg
popa
jmp
in
sbb
popa
sub
imul
sbb
mov
in
jl
dec
retf
push
mov
in
leave
xor
cmp
adc
mov
mov
jmp
pusha
inc
movs
adc
movs
test
add
inc
cmp
hlt
push
mov
retf
push
and
aas
and
cmp
je
inc
pusha
mov
or
jecxz
adc
mov
xchg
cli
je
add
jae
jne
jle
pop
inc
mov
lahf
dec
adc
adc
inc
mov
fld
loop
pusha
nop
movs
dec
adc
and
mov
inc
sahf
sub
in
adc
jae
xchg
add
lock
add
test
jmp
repnz
fsubr
cs
sbb
test
sbb
ret
xchg
adc
xor
jb
nop
dec
sub
inc
and
adc
icebp
or
iret
out
(bad)
mov
cmp
loopne
outs
xor
sbb
jp
sbb
je
add
adc
cs
mov
inc
fs
sub
rol
or
test
sub
fdivr
repnz
push
xchg
out
mov
or
adc
push
cmp
dec
dec
push
lods
pop
sub
jmp
call
jl
cmp
out
fild
push
call
dec
mov
jne
arpl
inc
(bad)
dec
adc
add
or
xor
push
scas
xor
cwde
dec
lods
mov
mov
add
sbb
ret
jns
aam
inc
adc
xor
inc
(bad)
fimul
add
inc
sbb
add
dec
ins
adc
iret
and
sar
push
cmps
(bad)
cwde
call
bound
cwde
shl
dec
mov
xor
es
(bad)
pushf
mov
stos
push
iret
inc
repnz
(bad)
inc
das
ins
inc
outs
loop
inc
pop
inc
sub
bound
mov
ret
and
sti
cmc
cmp
inc
jmp
inc
and
movs
ret
xchg
mov
jnp
push
push
rol
clc
adc
mov
fistp
pop
les
add
mov
xor
es
xor
dec
and
enter
ret
jb
and
call
paddq
rcr
je
push
add
mov
into
and
mov
jne
sbb
pop
cmp
jg
jmp
or
jl
mov
je
sub
add
pop
(bad)
mov
cmp
jne
inc
jmp
mov
xor
cmp
xchg
daa
jne
mov
outs
sbb
lods
(bad)
pop
popf
cmps
sbb
push
jmp
fbld
sar
sbb
sub
push
dec
fidiv
ins
aam
mov
mov
or
inc
sbb
push
pavgb
jmp
ins
out
inc
stos
jns
jne
or
test
sbb
std
outs
push
push
rol
or
in
jmp
les
bound
cld
jmp
daa
outs
push
or
sbb
cmp
popa
ins
loop
mov
push
mov
sub
enter
out
rol
cmp
mov
inc
pop
and
imul
sahf
sbb
mov
push
pop
xchg
add
or
fcomp
les
mov
sub
inc
xlat
or
aaa
fcom
cmp
xor
and
xor
and
and
sub
aaa
gs
or
adc
mov
(bad)
and
and
dec
cs
or
mov
mov
fmul
(bad)
add
jmp
add
sub
xor
aad
ins
xor
or
pop
outs
sbb
mov
push
adc
outs
lods
xor
arpl
or
mov
mov
sub
stos
mov
mov
je
mov
push
sub
mov
lock
or
in
punpcklbw
adc
dec
add
js
add
mov
mov
popa
xor
mov
bound
fisubr
add
jmp
inc
mov
cmp
ret
out
shr
sbb
sbb
push
jg
popf
aas
dec
push
bound
(bad)
xor
xor
rep
push
loope
movs
movs
lods
or
jmp
and
ds
fucomip
or
fs
lahf
or
mov
mov
and
and
add
mov
fsub
and
ds
fcmove
and
sar
xchg
repz
je
jns
js
loopne
std
jo
icebp
nop
push
retf
imul
add
push
inc
push
gs
jno
push
in
sbb
das
and
sub
shl
inc
popa
inc
iret
das
les
adc
sar
mov
pop
sti
enter
pop
cmp
cmp
call
dec
cmp
imul
push
imul
lods
jl
sar
jb
or
test
jo
push
fisub
dec
js
sbb
fsubr
push
dec
mov
or
inc
xor
and
mov
sbb
sbb
mov
lock
ret
and
push
retf
mov
(bad)
xchg
jbe
cmp
sub
mov
pusha
in
and
aaa
movs
mov
add
inc
xchg
rcl
mov
cmp
pushf
inc
cmps
xor
add
inc
add
inc
pusha
adc
popf
and
addr16
push
nop
mov
jne
xor
or
scas
pop
pop
loop
iret
add
push
add
add
jge
push
jbe
xchg
adc
pop
call
cli
xchg
xchg
int3
jp
icebp
outs
mov
lea
fisttp
clc
inc
jl
pop
sbb
cli
sbb
pop
popa
test
gs
dec
popf
adc
lsl
inc
and
push
mov
add
das
jg
xchg
add
add
and
xchg
loopne
pusha
es
je
push
test
in
in
sbb
pushf
in
pushf
sbb
stos
or
test
xor
cmps
adc
push
jno
push
fmul
mov
outs
push
adc
cmp
xchg
mov
xor
out
push
stos
inc
or
adc
xor
add
pusha
mov
adc
mov
mov
lock
sub
dec
adc
test
jae
lods
inc
and
add
adc
rcl
push
cld
adc
sbb
pop
or
sbb
mov
das
xchg
(bad)
stc
add
test
cld
jbe
or
stos
pop
or
add
lods
or
or
or
dec
or
das
fld
dec
addr16
push
inc
jnp
push
xchg
dec
adc
xor
sub
jecxz
xor
xor
add
aad
sahf
add
push
inc
mov
jno
popf
xlat
inc
xor
movs
dec
add
retf
shr
dec
loope
xchg
or
or
sub
and
nop
fwait
dec
icebp
adc
(bad)
outs
and
adc
sbb
shl
es
mov
xchg
add
inc
sbb
dec
adc
add
mov
add
push
aam
sbb
push
aaa
and
xor
mov
lock
adc
jge
or
xchg
cld
sar
fnstsw
jl
adc
nop
arpl
enter
add
dec
xchg
test
sbb
pop
ins
or
cli
ror
mov
mov
adc
sub
jbe
xor
inc
lods
inc
adc
mov
inc
push
adc
shl
test
mov
dec
mov
mov
sub
es
add
dec
xor
push
inc
das
stos
mov
ss
mov
adc
jp
add
test
xchg
mov
xchg
adc
push
nop
stos
bound
jb
ret
pop
push
adc
sub
push
or
and
or
push
sbb
dec
mov
cmp
add
xor
sub
aaa
sub
and
xchg
retf
mov
in
sbb
sub
xchg
add
(bad)
push
jnp
xchg
cwde
inc
adc
jmp
fisttp
cmp
xchg
pop
or
mov
jbe
or
test
lods
sbb
and
test
xor
mov
mov
push
gs
test
sbb
and
sbb
pop
pusha
and
mov
or
outs
or
cmp
add
(bad)
push
adc
dec
sbb
push
mov
movs
ret
cdq
sbb
mov
or
(bad)
mov
sub
sub
in
mov
inc
in
sahf
retf
inc
dec
push
sbb
ins
in
add
(bad)
daa
mov
lds
fsubr
mov
lahf
and
jge
xchg
aaa
test
or
mov
and
mov
jmp
cmp
dec
inc
jno
pop
add
or
sub
adc
cdq
sbb
pop
pop
int3
ja
dec
dec
mov
xchg
bound
mov
xchg
(bad)
mov
call
mov
adc
mov
inc
mov
or
add
inc
dec
js
jnp
loopne
sub
ficomp
xchg
aam
in
inc
jmp
sub
js
cmp
call
inc
or
xchg
jno
push
add
push
in
dec
push
adc
test
xor
movs
rol
or
mov
xor
pop
push
loop
stc
fadd
test
jno
call
jnp
dec
cmc
adc
lea
(bad)
je
and
lock
mov
cmp
pop
mov
sbb
jl
and
inc
add
jmp
ds
cmp
shl
mov
add
add
or
jae
inc
sbb
inc
lahf
rcl
fmul
mov
leave
(bad)
jb
inc
mov
pop
or
lods
cmps
cmp
or
scas
out
movs
test
add
push
cmp
or
bnd
loope
adc
dec
xor
shl
sbb
inc
in
push
cwde
xor
add
xchg
or
xor
mov
push
lock
fs
movs
add
cmp
dec
inc
xchg
das
jnp
aam
icebp
cld
pop
push
xchg
mov
pop
cs
iret
in
add
inc
sub
movs
or
cld
inc
enter
and
ds
and
clc
add
test
shl
test
adc
mov
mov
inc
and
sub
sub
xchg
lods
clc
xor
and
mov
inc
xor
call
sbb
dec
std
jmp
test
lods
or
bound
lahf
pop
push
push
dec
test
pop
in
adc
push
ds
and
push
and
push
mov
jbe
(bad)
or
adc
or
jb
push
loope
or
add
cdq
adc
inc
arpl
add
mov
and
idiv
sub
cs
ss
pop
out
(bad)
mov
jmp
in
dec
push
(bad)
mov
inc
rol
dec
test
inc
add
loope
xor
push
call
cmc
dec
add
or
push
add
outs
imul
cmps
push
pop
push
adc
adc
dec
repz
xchg
(bad)
mov
push
test
inc
add
test
xchg
sub
and
mov
ret
xchg
outs
and
ror
jge
push
or
and
bound
adc
repnz
sbb
cmps
pop
loop
sbb
push
inc
xchg
add
or
shl
shr
pop
out
xchg
ins
sub
in
outs
ret
add
pusha
(bad)
pop
sbb
sbb
and
mov
popf
mov
stos
(bad)
push
repz
repnz
add
adc
nop
out
xor
rcl
or
push
cwde
into
push
dec
pop
sbb
pop
mov
push
add
add
bound
jmp
or
mov
test
cdq
mov
test
and
fimul
push
bndstx
sub
xchg
mov
inc
data16
inc
adc
fadd
and
adc
xchg
mov
sbb
inc
cmps
jns
movs
jo
call
or
adc
fistp
ins
das
sti
xchg
xchg
and
add
pop
lock
and
bound
xchg
add
mov
mov
inc
adc
or
pop
adc
jnp
popa
es
enter
adc
or
movs
rcr
es
cdq
push
mov
pop
push
jo
or
inc
mov
test
add
inc
mov
sysret
bound
les
adc
jmp
or
adc
dec
sbb
xchg
sub
sub
(bad)
or
add
adc
sub
ss
ror
fs
add
pop
adc
or
adc
int3
jp
inc
mov
rcl
hlt
and
cmp
stos
je
or
rcl
out
sbb
pop
jns
inc
pop
pop
or
fild
cmps
in
in
sbb
cmp
jl
inc
adc
jl
loopne
inc
lds
pop
(bad)
and
mov
sbb
mov
ja
or
pop
and
and
xchg
loope
popa
jmp
inc
popa
test
dec
les
pop
or
aam
mov
jbe
int
into
inc
and
adc
dec
or
clc
test
(bad)
mov
cmp
ja
and
cmp
inc
push
inc
test
sub
cwde
cmp
adc
sahf
dec
jne
pop
adc
adc
sahf
and
(bad)
imul
cwde
dec
dec
cmp
jo
jne
enter
sub
push
add
inc
sbb
inc
repnz
fild
push
xchg
nop
xchg
mov
mov
sbb
gs
(bad)
pusha
test
or
xchg
xor
icebp
jg
adc
push
or
les
mov
push
or
add
enter
and
pop
cwde
rcr
adc
inc
adc
jp
cli
jmp
push
or
or
aas
and
dec
cld
test
ret
xchg
mov
dec
fwait
sub
je
mov
add
in
or
xchg
sub
inc
add
sti
mov
dec
pop
aas
add
push
sbb
js
cld
add
jno
test
mov
dec
add
push
inc
or
sub
mov
(bad)
or
push
push
add
cmp
lahf
and
movs
dec
push
add
sub
adc
add
dec
rol
aaa
jp
sbb
push
cmp
mov
popa
cmp
in
lods
dec
and
or
add
repz
push
stos
or
adc
xor
sbb
sbb
sbb
jnp
mov
xor
mov
inc
daa
inc
jge
adc
add
push
retf
shl
je
scas
dec
hlt
call
lods
fmul
les
push
push
fisubr
outs
dec
ret
mov
int
mov
or
cmp
sub
out
in
xor
aas
adc
pop
enter
cmps
pop
mov
aam
mov
(bad)
(bad)
loop
mov
mov
and
adc
in
mov
mov
sub
sub
jg
sub
bound
sub
add
xor
or
adc
or
add
adc
mov
sub
ret
pop
push
ins
lods
neg
cmp
rol
jecxz
or
fisubr
fstp
adc
retf
xlat
int3
push
mov
add
cmps
or
iret
jecxz
cmps
movs
or
mov
and
sbb
fs
or
sub
(bad)
sub
jb
iret
jmp
cmps
cmp
mov
dec
add
pop
jge
add
in
or
push
mov
or
xchg
addr16
ss
mov
sbb
or
test
inc
mov
sbb
sbb
or
cmc
push
pop
test
adc
mov
loopne
or
neg
(bad)
cmp
xor
jl
fnsave
out
shl
jl
push
dec
adc
into
mov
lds
mov
add
dec
inc
inc
mov
and
xchg
mov
xchg
jle
retf
movs
push
adc
arpl
dec
add
and
mov
or
add
fst
or
sar
fld
mov
scas
imul
loope
or
mov
and
fcom
shr
int
gs
imul
xchg
pop
shr
hlt
fcom
add
out
adc
sub
cmp
fld
test
push
push
leave
pusha
adc
xchg
mov
ins
push
and
test
imul
add
push
aam
jne
loopne
mov
dec
loop
test
cwde
dec
jp
sub
cmp
dec
xor
mov
loopne
outs
push
sub
hlt
add
pop
sub
cs
cmps
adc
jne
in
int
sub
inc
pop
ins
rcl
ror
inc
cmps
std
fwait
icebp
mov
or
cmps
push
aam
jnp
add
pusha
jmp
xlat
adc
or
mov
shl
mov
loop
and
sbb
and
jne
bound
mov
icebp
ror
popa
adc
int3
out
imul
fdivr
shr
movs
outs
loopne
cli
sbb
mov
xchg
or
dec
dec
xor
xchg
adc
dec
imul
push
adc
jmp
pop
mov
sub
or
mov
adc
sub
int3
fstp
inc
cmps
popa
push
mov
and
popa
xchg
rcr
dec
push
mov
leave
pop
xor
pop
outs
test
xor
fsubr
pop
sbb
inc
push
or
mov
xchg
test
push
out
es
(bad)
fnstcw
icebp
dec
adc
fstp
mov
and
in
jo
pop
mov
push
in
in
clc
mov
les
mov
dec
mov
mov
loop
inc
mov
push
cmp
cs
mov
or
rcl
add
je
in
retf
in
call
lods
adc
pushf
mov
and
out
pop
pop
and
(bad)
mov
add
clc
add
adc
fisttp
dec
inc
cmp
or
push
mov
and
ins
mov
xchg
pop
fs
dec
xchg
mov
jp
dec
fucomp
xchg
and
and
out
popf
outs
push
xchg
xor
mov
fist
(bad)
fadd
fwait
gs
cmp
xor
neg
add
push
push
cdq
and
adc
cmp
jl
adc
outs
test
ret
jmp
call
adc
cmp
cwde
mov
lods
rcr
push
ret
and
adc
dec
add
push
or
adc
jle
push
cmp
fwait
xchg
pop
add
xor
sub
(bad)
push
push
and
pop
dec
cmp
mov
aaa
mov
sub
and
add
adc
(bad)
ds
pop
adc
adc
ja
sahf
les
push
pop
sub
add
dec
xchg
sub
in
pop
mov
xor
mov
sbb
and
jl
jmp
fnstcw
outs
shr
fcmovbe
ror
jge
movs
pop
rcl
mov
dec
fprem
pop
test
fisubr
js
shl
sub
add
or
rol
sbb
popf
sub
aaa
sub
add
test
test
xchg
jnp
or
mov
arpl
and
add
jecxz
sub
adc
cs
js
xchg
xchg
(bad)
xchg
jb
cmps
sbb
repnz
les
adc
out
out
pop
pop
cld
push
test
cmp
jne
(bad)
scas
jmp
rol
xor
ins
fsub
sub
add
enter
dec
sub
neg
outs
cmp
movs
ret
push
add
nop
hlt
int3
gs
icebp
or
ror
push
pop
xchg
mov
add
mov
add
daa
nop
xchg
jl
xchg
push
cmp
sub
imul
jg
sub
ret
pop
test
xor
int3
les
or
ss
push
loope
inc
pushf
loope
xor
stc
jecxz
in
aad
vpaddw
mov
pop
hlt
jg
test
add
jne
lods
imul
sbb
in
lods
add
xchg
mov
rcl
sbb
or
sahf
xchg
xor
inc
add
pop
mov
pop
mov
add
mov
sbb
sub
pushf
cmp
xlat
xor
(bad)
rcl
push
xchg
cmp
dec
push
lahf
enter
pop
sar
inc
jbe
gs
and
or
int3
fbstp
mov
lock
(bad)
and
cmp
enter
cmp
xor
mov
test
and
pop
cmp
fnsave
dec
movs
inc
mov
inc
or
hlt
inc
push
push
bound
inc
cmp
loope
xchg
loopne
nop
stos
xchg
retf
or
mov
pop
rcr
adc
icebp
aaa
sbb
and
ds
add
popa
pop
pop
pop
fmul
ret
xchg
mov
sub
jmp
push
sbb
adc
and
push
sbb
xor
mov
jno
xchg
pop
arpl
push
inc
fwait
imul
adc
mov
js
adc
mov
or
mov
adc
push
psubq
or
js
push
add
in
inc
push
push
in
lods
adc
int3
stos
xor
nop
jp
xchg
lock
div
and
push
addr16
xor
rcl
lods
xchg
les
jnp
pusha
pop
or
std
adc
sub
dec
jo
mov
dec
data16
xor
lods
ret
push
mov
or
nop
or
imul
popa
test
adc
mov
xor
adc
xor
add
sahf
or
lahf
(bad)
js
xchg
mov
pop
scas
push
dec
mov
sbb
mov
ret
pop
mov
or
(bad)
and
and
xchg
test
xchg
cmp
aam
or
pop
(bad)
xchg
jge
(bad)
fsub
fsubr
loope
or
adc
push
popa
rcl
retf
dec
sbb
retf
(bad)
push
sub
add
pop
inc
sub
mov
cmp
mov
mov
add
pop
ins
jmp
lds
adc
xchg
push
stos
sbb
rcl
fsubp
je
es
test
or
and
loopne
cmp
mov
fst
aam
movs
(bad)
sub
les
add
aas
lea
nop
fistp
and
ret
jno
fsub
push
sbb
and
push
mov
and
arpl
sub
and
adc
sub
sub
add
or
push
jmp
and
cmc
add
jns
and
jb
ror
push
leave
mov
add
(bad)
xor
push
lock
inc
sbb
add
mov
sbb
outs
dec
adc
pop
inc
and
push
add
inc
or
or
in
sbb
fld
or
or
call
or
adc
inc
out
stos
sbb
or
and
stos
dec
nop
mov
push
(bad)
or
sub
and
stos
xchg
add
dec
adc
xor
mov
lds
inc
and
cmp
call
dec
shr
jmp
test
es
les
inc
bound
push
mov
adc
test
add
dec
loope
sbb
xor
aas
or
cwde
add
dec
xor
cmps
addr16
add
cld
sub
jmp
cmp
jmp
cmp
mov
sbb
imul
daa
add
(bad)
mov
push
dec
les
push
movs
or
push
test
cmp
das
xchg
push
cmc
xchg
les
mov
jmp
push
add
jo
jne
jae
sbb
add
das
dec
inc
push
cmp
or
push
or
inc
in
test
push
aaa
add
fist
mov
xor
add
into
das
cmc
adc
pushf
xor
and
fadd
out
push
adc
adc
mov
shl
ret
test
xor
and
sub
jmp
and
inc
mov
jne
xchg
add
in
mov
pop
adc
rcl
xlat
mov
cmp
shl
pop
arpl
int3
outs
jo
daa
cmp
and
sub
sbb
(bad)
mov
mov
imul
(bad)
dec
inc
arpl
ror
and
and
xor
sub
push
mov
jns
fsubr
fld
stos
jg
(bad)
in
jb
adc
xor
push
or
adc
test
sbb
cmp
mov
push
(bad)
mov
cld
add
shl
push
dec
dec
cwde
pop
xchg
sahf
jbe
retf
ja
outs
fsub
mov
cmps
jne
push
enter
cdq
sbb
xor
xor
jmp
sub
test
mov
push
sbb
cmp
pop
dec
jmp
test
imul
or
inc
or
mov
enter
xor
hlt
or
popf
and
fs
push
scas
add
add
addps
scas
sub
add
pushf
pusha
lods
loop
stos
and
enter
iret
push
not
sbb
sbb
sub
sub
stos
cmp
jae
push
push
jle
aaa
push
cmp
rcr
sub
outs
and
in
sbb
adc
adc
retf
or
fisttp
push
xor
jne
cmp
rcl
jo
and
jmp
sub
or
aam
das
cmps
cmc
cmc
leave
es
mov
add
dec
mov
push
pop
or
add
and
mov
retf
sti
je
xor
add
in
outs
pop
scas
fwait
pusha
sub
pop
out
xor
or
add
aas
xor
push
js
xchg
js
fs
sub
or
cmp
cmp
pop
and
xor
pusha
add
outs
fistp
inc
push
push
emms
or
cmp
rol
or
mov
or
xor
push
pop
push
dec
mov
fs
setne
(bad)
jns
loopne
cdq
idiv
xchg
push
inc
pop
call
cdq
and
retf
pop
adc
ret
retw
jmp
push
fs
retf
adc
fs
add
cmp
jmp
(bad)
lods
movs
xor
das
jnp
mov
sub
add
shl
or
ror
pop
ret
mov
pop
jge
dec
dec
pop
bsf
mov
aam
jns
pop
inc
and
mov
in
test
cmp
cmp
call
xor
leave
adc
adc
xor
les
sbb
inc
inc
dec
sbb
or
push
add
call
sbb
xchg
pop
pop
call
enter
xchg
xor
adc
ret
(bad)
push
jmp
add
cmp
and
fadd
or
call
pop
adc
push
push
push
repnz
or
into
nop
xor
rol
jb
or
xor
ret
lock
mov
xor
(bad)
xor
inc
inc
nop
sub
add
ds
sbb
xor
lods
(bad)
(bad)
les
fcmovnbe
jge
sbb
xor
dec
xchg
enter
dec
push
sbb
dec
push
es
sbb
test
imul
lock
repz
push
dec
jnp
xor
jmp
scas
sbb
adc
es
sbb
fadd
cmp
fldenv
shl
push
and
into
and
cmp
push
add
pop
add
sub
mov
mov
pop
cmps
pop
test
movs
fwait
and
mov
jnp
inc
add
es
mov
aam
adc
jecxz
aad
push
fcomp
adc
mov
sub
(bad)
push
sbb
adc
aad
les
mov
or
inc
adc
(bad)
cdq
int3
aaa
push
repnz
aam
aam
inc
stos
adc
iret
xchg
add
or
cmp
rcr
mov
or
cmp
and
and
xchg
mov
fs
imul
cmps
push
pop
fcmovnb
inc
push
and
jl
sbb
push
ret
adc
into
adc
dec
pop
cmp
mov
mov
or
fcomp
fcom
sub
sbb
sbb
adc
fdiv
add
pop
ja
and
imul
xor
adc
movs
or
test
sbb
pop
cld
rcl
xchg
into
cmp
inc
pop
xchg
(bad)
jnp
dec
pop
jp
fs
cmc
test
hlt
imul
or
jmp
mov
loopne
clc
add
jmp
inc
(bad)
jmp
aas
mov
push
ss
lods
fldenv
push
inc
mov
jp
or
leave
inc
jns
(bad)
jnp
or
push
mov
aad
mov
scas
or
shl
pop
int
les
xor
or
mov
sub
add
daa
mov
aaa
in
popa
shl
bound
and
fld
and
pop
lahf
je
push
test
adc
push
ss
inc
dec
cmp
push
cmp
xor
jo
pushf
jb
test
jmp
fist
adc
push
jb
sub
xchg
mov
and
inc
push
and
dec
retf
or
cmp
add
pushf
and
movs
dec
jl
jmp
in
push
bound
sub
es
fs
or
jl
jmp
pop
add
pop
js
jne
daa
in
aas
sub
or
sub
sub
and
(bad)
hlt
xor
ret
adc
mov
xchg
outs
or
retf
pop
push
inc
pop
add
lea
or
and
jo
rcpps
or
mov
and
mov
xchg
mov
sbb
ret
pop
test
out
subps
push
jno
leave
mov
and
pusha
sbb
and
retf
mov
enter
stos
xchg
fwait
ret
rcr
pop
add
mov
inc
and
add
cdq
mov
movs
push
ror
cmp
das
or
mov
rcr
scas
push
in
clc
loopne
lds
stos
lds
xor
add
test
(bad)
hlt
aaa
pop
sbb
inc
adc
clc
mul
inc
inc
add
test
jns
lahf
dec
jmp
shl
iret
shl
add
push
or
inc
push
int3
push
ss
dec
fsub
mov
call
pop
pop
gs
and
test
add
jp
adc
adc
mov
jbe
sbb
es
clc
cmp
adc
in
adc
popa
cdq
out
js
pop
ins
jo
ja
fisubr
pusha
add
leave
jae
push
sub
das
in
imul
pop
mov
and
sub
movs
test
lds
push
push
mov
and
test
pop
or
leave
xchg
add
and
jae
xchg
mov
push
pop
je
inc
sub
xor
sti
push
sub
add
lahf
mov
or
cmp
fild
xchg
movs
rcl
adc
mov
fld
lea
mov
scas
mov
dec
call
add
retf
push
inc
pop
loop
(bad)
stc
and
sub
push
push
adc
imul
mov
cmps
mov
add
push
push
mov
jbe
dec
xor
adc
mov
test
dec
lea
pavgw
imul
clc
add
imul
sbb
sahf
jmp
pop
fs
outs
jne
sbb
mov
add
cmp
inc
iret
mov
pop
inc
xor
push
push
(bad)
(bad)
out
xchg
addr16
(bad)
retf
adc
xchg
(bad)
push
test
jae
cmp
mov
aad
outs
xchg
mov
cmp
and
or
dec
dec
stos
test
enter
cmp
(bad)
gs
mov
mov
pop
push
sti
jne
call
pop
leave
mov
push
scas
rol
sahf
push
lock
and
call
or
mov
(bad)
xbegin
jecxz
scas
dec
and
aas
add
fisttp
add
loope
jnp
xchg
cmp
cmp
movs
jg
lods
add
rcr
add
test
push
adc
mov
pop
dec
xchg
add
fwait
push
inc
pop
pop
jne
mov
xchg
mov
hlt
adc
outs
pusha
or
popf
fnstcw
add
mov
icebp
movs
jmp
imul
mov
lds
xor
bound
add
lahf
mov
adc
loopne
adc
jns
scas
pop
xchg
mul
retf
adc
mov
or
(bad)
stos
mov
inc
pop
sahf
test
test
jecxz
pop
(bad)
adc
mov
ror
mov
(bad)
test
ret
or
stos
pop
shl
push
rol
pop
xchg
and
or
or
add
inc
and
jb
and
jmp
push
cmp
adc
jmp
movs
inc
and
aad
dec
or
enter
test
scas
dec
lahf
cmps
push
and
cmp
pop
mov
mov
sbb
or
adc
jne
in
jmp
sub
faddp
jmp
xor
sub
cmp
pop
sub
and
cmp
dec
scas
hlt
nop
(bad)
xchg
sti
and
popa
add
xor
and
sub
jne
push
inc
fcom
xor
ret
sbb
add
dec
icebp
mov
xchg
add
cs
xor
es
cs
ins
(bad)
cdq
mov
mov
fs
push
outs
sub
mov
shl
add
mov
pusha
xor
cmps
adc
adc
or
and
adc
mov
cmp
sbb
ret
or
es
mov
mov
sbb
push
pop
sbb
dec
sub
pop
dec
icebp
adc
dec
nop
mov
adc
add
rol
adc
pop
loope
sub
xchg
aam
lds
xchg
add
call
dec
les
push
add
xor
shl
sbb
fbld
or
mov
test
add
sub
pop
adc
jge
fisttp
jmp
rcl
test
pusha
loop
pop
and
and
push
(bad)
bound
mov
rol
call
add
xchg
les
jecxz
(bad)
fcom
push
mov
mov
sub
lock
inc
push
std
dec
pop
daa
and
push
popa
or
call
push
(bad)
adc
popa
push
cmps
add
add
div
call
ins
daa
inc
stc
orps
mov
mov
sub
call
mov
pop
pop
sti
xchg
in
add
xor
std
xor
add
nop
fadd
sub
fsubrp
pop
sub
sahf
test
cmp
sub
or
mov
xor
scas
(bad)
cld
xor
jae
jnp
ins
or
sbb
pop
or
ror
adc
adc
ret
jp
ror
add
jmp
fs
adc
or
and
adc
movs
or
fs
nop
test
(bad)
imul
popa
adc
add
xchg
xor
(bad)
es
or
adc
adc
push
cs
pop
add
adc
add
add
daa
ds
leave
dec
(bad)
test
aam
xchg
ret
sahf
xchg
arpl
jge
pop
mov
sbb
jb
push
cmp
push
add
xchg
bound
cmc
adc
imul
mov
ins
or
dec
sbb
adc
(bad)
pop
dec
jo
and
or
jmp
add
mov
ret
xchg
cdq
movs
leave
out
mov
leave
mov
add
dec
add
outs
pop
jp
mov
and
ds
pop
or
push
popf
jno
fcomi
pop
or
sub
call
pop
lods
pop
and
xchg
xchg
push
add
ins
push
sahf
add
push
xor
sub
lds
mov
in
jmp
sbb
dec
mov
fidivr
div
jo
(bad)
pop
loop
and
lods
clc
(bad)
pop
push
dec
xor
xchg
nop
sar
dec
xchg
loope
mov
rcl
push
mov
push
ins
js
push
xor
(bad)
lds
movs
fldenv
int3
js
mov
leave
add
add
mov
pop
into
fst
call
movs
adc
jmp
imul
push
call
out
shl
fadd
xchg
xchg
sub
mov
mov
cmp
push
fldcw
retf
aam
add
lahf
gs
(bad)
dec
add
xchg
adc
or
cmp
mov
and
hlt
adc
dec
pusha
pusha
stos
sbb
pop
sub
mov
add
loope
cs
pop
fidivr
jns
xchg
aaa
call
jmp
call
lahf
xor
pushf
outs
pop
sbb
rcl
mov
push
(bad)
enter
(bad)
loope
push
xchg
pop
mov
sub
xchg
xchg
icebp
shl
and
movs
jae
fwait
mov
mov
je
(bad)
sbb
mov
loopne
mov
pop
jecxz
pop
push
push
mov
das
nop
(bad)
out
add
mov
imul
cmp
aad
pushf
cmps
and
jno
xor
or
add
lds
cmp
shl
cmps
lds
jmp
jbe
(bad)
lds
mov
enter
inc
movs
adc
stc
test
mov
aam
mov
push
dec
push
aad
fs
mov
sbb
mov
fstp
jns
jmp
aam
or
adc
pop
push
adc
les
add
mov
fnstenv
dec
aam
push
in
inc
or
inc
ss
push
jecxz
mov
cmp
and
xor
aam
sub
mov
ja
fld
jnp
dec
or
xchg
sbb
imul
mov
cmps
shl
leave
pop
xchg
push
movs
cmp
xor
mov
jns
inc
sub
fs
fild
das
and
jp
dec
jns
iret
and
xchg
aad
fcomp
add
inc
push
je
jne
arpl
daa
out
jmp
retf
jmp
in
xor
add
popa
or
adc
arpl
mov
jo
push
vcomiss
clc
cmp
pop
inc
js
pop
call
mov
xchg
aad
xchg
call
fnstenv
adc
xchg
and
inc
and
daa
adc
unpcklps
cdq
in
enter
call
leave
cmp
lods
or
into
mov
adc
dec
or
dec
inc
test
add
add
push
aad
enter
pusha
out
mov
cwde
jmp
nop
mov
fs
mov
push
inc
inc
test
sbb
test
imul
pop
pop
mov
(bad)
pop
push
das
push
out
adc
bound
pop
push
cmp
push
xchg
xchg
rcr
or
bound
imul
pop
cmp
movs
and
lods
pop
mov
aam
imul
ror
add
ret
add
mov
loopne
test
xlat
call
push
ds
lea
pop
cwde
xchg
jne
rol
int
movs
or
shr
test
sbb
mov
dec
dec
jns
dec
mov
or
sbb
stc
inc
cmp
mov
nop
not
pop
inc
retf
cmp
fwait
pop
push
dec
(bad)
jl
or
scas
mov
pushf
mov
push
loopne
aad
push
dec
xor
adc
clc
addr16
add
nop
adc
leave
test
retf
rcr
or
(bad)
inc
xchg
dec
dec
dec
scas
push
lds
adc
or
adc
test
jmp
sar
adc
fcomp
in
dec
dec
(bad)
mov
jno
jg
push
xor
mov
add
mov
test
xor
js
sub
cmp
cdq
add
cdq
jo
icebp
mov
push
jg
or
or
and
xor
sbb
inc
(bad)
call
pop
push
icebp
push
push
push
mov
fs
out
and
cs
pop
je
lea
inc
jb
(bad)
js
push
add
daa
inc
fucomip
shl
or
icebp
pop
mov
push
push
mov
ins
dec
xchg
mov
(bad)
jns
aad
jg
mov
xchg
fld
jmp
dec
inc
js
(bad)
lock
or
idiv
imul
sub
add
sbb
ins
aad
mov
jmp
mov
ret
ret
outs
add
add
test
in
lods
aaa
or
adc
and
ret
sahf
(bad)
xchg
adc
out
retf
cwde
push
mov
cmp
out
gs
push
lds
mov
pushaw
push
push
nop
ret
cmp
push
push
ins
mov
cmps
adc
ins
cmps
mov
sbb
xor
push
aas
mov
adc
xchg
adc
mov
in
pop
in
outs
rcl
sbb
mov
scas
clc
sub
jmp
add
or
pop
sub
imul
and
mov
inc
xor
pop
(bad)
pop
test
inc
cdq
in
cmc
(bad)
lods
dec
nop
push
pop
inc
add
mov
mov
imul
test
add
ja
sbb
das
lods
dec
and
shl
test
push
enter
cmp
and
add
pop
in
add
or
sub
dec
xchg
popf
mov
pop
(bad)
or
jmp
out
dec
jl
sbb
fst
jnp
arpl
or
push
dec
hlt
or
adc
sub
daa
or
xor
daa
or
jae
xor
inc
shr
sub
push
imul
sub
rcl
add
xchg
add
daa
mov
and
and
pop
push
cmp
js
sub
jo
ins
inc
push
push
or
mov
or
push
pop
jnp
add
cmp
mov
xor
jecxz
add
mov
mov
ins
pop
cdq
(bad)
in
push
adc
sbb
add
adc
add
push
mov
dec
dec
add
mov
dec
inc
mov
mov
mov
jne
nop
jmp
jo
fist
adc
loope
push
inc
test
adc
mov
test
and
cdq
add
mov
and
loope
add
lods
xor
imul
cmps
rcr
xchg
xchg
cli
cmp
or
call
add
adc
test
inc
push
add
mov
ins
cmp
jp
and
sbb
nop
sbb
ins
dec
cwde
retf
mov
dec
shr
xchg
adc
dec
or
ins
xchg
mov
pop
cmc
lock
daa
(bad)
(bad)
fcom
inc
shl
sbb
ret
daa
add
cdq
fadd
(bad)
lahf
or
dec
test
out
rol
pop
lods
or
les
mov
loopne
and
pop
and
hlt
pusha
jmp
out
pop
bound
and
jo
sahf
or
fmul
ror
scas
xchg
adc
dec
cmp
nop
stos
mov
ins
push
push
lock
pop
inc
inc
mov
lea
aaa
xchg
ffree
sub
int3
mov
mov
xchg
sub
test
popf
mov
xor
inc
mov
rol
sbb
imul
rcr
sbb
les
adc
test
(bad)
repnz
pop
ss
sbb
in
or
sbb
(bad)
arpl
daa
dec
adc
adc
cmc
lock
xchg
add
dec
push
push
jmp
sub
dec
pause
cdq
mov
sub
or
ret
ror
lea
fld
dec
mov
cmp
mov
test
ss
mov
pop
or
xchg
cmps
jo
pop
sub
or
icebp
push
push
add
sbb
jno
or
xchg
loopne
mov
add
div
mov
inc
out
and
add
ds
enter
sbb
adc
inc
or
mov
aaa
loopne
sbb
push
loope
xor
cmp
ror
call
ins
or
adc
inc
xor
add
and
push
add
xor
ds
stc
push
mov
(bad)
mov
push
adc
sub
jge
pushw
push
inc
mov
pop
mov
or
loop
jecxz
jmp
pop
pusha
dec
pusha
add
pop
ret
lock
dec
add
xor
add
jmp
sbb
or
in
pop
jns
test
inc
and
imul
sub
stos
adc
and
push
cmp
pop
dec
pop
inc
or
mov
push
push
inc
popf
pusha
nop
retf
dec
cmp
sbb
mov
unpcklps
xchg
mov
es
dec
mov
sub
or
adc
mov
or
pusha
cmp
test
leave
les
dec
outs
xor
mov
push
add
add
and
cwde
cwde
bound
jno
cmp
mov
mov
addr16
xor
sbb
out
jo
loope
fidivr
shr
aaa
icebp
sbb
inc
jmp
inc
dec
push
inc
xchg
xchg
cs
sub
or
pushf
mov
push
pop
adc
loope
and
push
push
mov
std
icebp
fmul
pop
test
pop
mov
aad
push
add
sbb
cmp
jmp
mov
loopne
dec
adc
pop
xchg
adc
ret
pusha
add
dec
jmp
push
enter
xchg
sbb
adc
xchg
out
jno
fs
mov
mov
push
or
sub
sbb
fistp
pop
dec
popa
(bad)
inc
pop
jmp
dec
ins
nop
xchg
xor
lods
push
loop
dec
add
xchg
xor
or
shr
fs
or
xor
push
push
jbe
sbb
mov
inc
cwde
and
add
inc
movs
adc
or
loop
retf
adc
and
ret
add
xor
inc
dec
ret
in
dec
test
mov
arpl
stos
xor
jmp
pop
rdmsr
dec
ror
cwde
sub
pop
loopne
outs
out
adc
push
cmc
popa
mov
mov
dec
sbb
imul
push
or
xor
pop
push
test
(bad)
iret
sbb
jecxz
add
sub
sar
and
mov
fldcw
xchg
loop
add
sub
inc
mov
repnz
mov
es
cmps
cmp
xor
mov
push
mov
add
xchg
mov
mov
add
ret
jo
fidivr
push
xchg
sbb
and
add
xchg
not
jge
les
lock
imul
sahf
sbb
adc
adc
xchg
push
jne
inc
shl
sub
movs
(bad)
jle
in
sbb
cmp
add
or
retf
xchg
mov
dec
add
sbb
and
mov
ret
pop
adc
mov
push
add
jmp
mov
mov
in
sbb
(bad)
dec
adc
sbb
lds
or
test
xchg
xchg
inc
js
pop
ins
sbb
(bad)
dec
(bad)
mov
out
(bad)
and
cmp
test
jne
push
mov
cdq
pop
xchg
aam
mov
cmp
shld
pop
scas
lods
add
cmp
or
adc
pop
and
(bad)
cmps
ret
inc
movs
aam
sbb
stc
mov
adc
mov
movs
cmps
ret
jo
dec
cld
and
test
sub
lahf
je
fadd
and
sub
mov
ins
cwde
jo
add
or
xchg
mov
push
push
push
cwde
push
jl
mov
fcom
test
xor
movs
xchg
push
adc
jge
dec
bound
faddp
nop
sbb
retf
pop
stos
or
jl
shl
mov
jmp
jg
es
jne
outs
clc
rcr
push
push
(bad)
loopne
or
mov
xchg
jp
(bad)
(bad)
stc
je
imul
(bad)
aaa
mov
mov
and
dec
imul
aaa
imul
and
inc
loope
pop
pop
or
(bad)
shl
icebp
add
add
xor
sub
xor
push
shl
jb
fdiv
and
fsubr
es
xchg
mov
or
jge
jo
fnstenv
jb
and
push
ds
mov
jo
inc
je
push
rcr
or
xor
xor
popa
adc
mov
push
inc
sub
mov
test
mov
mov
sub
sub
sbb
push
add
or
add
sbb
add
enter
xchg
add
pop
out
sbb
and
sbb
shr
add
dec
test
jmp
push
adc
(bad)
and
jecxz
aad
retf
adc
lahf
adc
xor
nop
cld
imul
sub
stc
pop
ret
pop
or
jne
imul
add
add
and
mov
mov
jg
scas
(bad)
je
loop
inc
push
lods
sar
push
push
shl
dec
popa
cmp
fld
popf
mov
add
adc
xchg
dec
xchg
xchg
fwait
sub
add
and
pop
push
(bad)
sahf
adc
outs
add
sbb
inc
ret
cwde
adc
push
in
dec
push
inc
out
or
fsubr
cwde
mov
repnz
push
fidiv
jno
cmp
add
ins
or
fsub
leave
test
movs
jo
mov
add
xor
dec
rcr
or
pop
adc
fimul
mov
dec
add
pop
sbb
mov
pop
out
in
add
mov
push
inc
xor
mov
ror
mov
or
push
inc
push
pop
push
aam
test
mov
push
adc
repnz
loopne
pusha
(bad)
lds
mov
pop
add
jmp
retf
xor
mov
mov
ins
nop
fmul
ins
adc
int3
sti
cld
push
xchg
dec
xchg
cmc
xchg
or
repnz
dec
ret
mov
inc
nop
or
add
data16
(bad)
in
sub
jnp
mov
xchg
sub
stos
cmps
imul
xor
xor
aad
ret
fdivr
mov
and
cs
mov
test
pop
gs
mov
js
push
jae
(bad)
cdq
retf
pop
fsub
xchg
pop
enter
ja
mov
das
add
sbb
cmp
adc
adc
or
and
nop
xor
loop
mov
xlat
sub
call
nop
inc
sbb
sbb
push
pop
fistp
pop
push
adc
out
sub
dec
fcom
add
(bad)
rol
jmp
in
fidiv
sbb
push
ja
dec
inc
mov
mov
xchg
outs
leave
shl
imul
jne
fild
mov
add
xchg
push
pop
inc
das
or
dec
shr
int
int
jb
or
je
adc
adc
sbb
xor
sub
mov
mov
sbb
or
rcr
xchg
sbb
adc
mov
pop
jmp
(bad)
xor
outs
retf
adc
and
iret
lahf
add
pop
or
xchg
add
and
jle
add
js
lea
xchg
or
mov
mov
gs
add
sub
xor
clc
push
ror
out
xor
add
es
sub
or
cmps
lock
bound
pop
add
pop
movs
rcr
adc
fst
add
xor
add
lods
cmp
js
aam
ret
enter
idiv
jns
xor
push
sub
add
sbb
pop
nop
jo
inc
pop
mov
xchg
ss
sub
or
jne
push
ffreep
mov
int
fwait
xchg
jge
arpl
lds
cld
add
add
add
and
not
(bad)
outs
pop
cmp
retf
pop
ja
adc
aam
and
add
mov
shl
aas
aas
push
movs
sbb
fcomp
and
adc
popf
in
daa
and
push
adc
loope
inc
jb
xor
adc
je
je
(bad)
stos
gs
pop
cmp
call
mov
cmc
div
push
xchg
aam
and
rcr
sub
adc
or
xchg
push
cmp
jecxz
dec
cmp
mov
pop
xor
pusha
bound
ret
fs
mov
ficom
lea
add
xor
adc
ret
icebp
sub
dec
push
push
mov
push
jno
sbb
out
mov
aas
add
or
adc
xchg
psrad
aaa
lahf
or
loop
and
mov
and
addr16
add
mov
jle
mov
mov
xchg
cdq
lock
sub
test
jge
jge
cmp
ins
loopne
mov
loop
xchg
adc
das
mov
push
xor
adc
ins
fnstsw
jle
jmp
in
mov
in
sar
xlat
sub
(bad)
adc
lods
xchg
or
or
xor
mov
mov
and
test
mov
push
sbb
push
dec
daa
mov
stos
neg
jbe
cs
ret
push
pop
aam
sbb
and
sub
inc
test
movs
or
xlat
(bad)
jl
push
scas
inc
(bad)
cmp
push
imul
mov
sub
push
outs
inc
mov
add
jmp
adc
retf
rol
jne
sbb
sbb
xchg
inc
and
lock
add
sbb
xchg
retf
xchg
retf
adc
add
push
add
lea
push
mov
enter
loopne
inc
dec
shr
je
sahf
jb
jne
or
movs
sub
enter
lods
push
shr
out
jb
fs
dec
or
xchg
adc
mov
test
test
int3
sahf
nop
sahf
mov
pushf
add
xor
popf
mov
add
sub
adc
enter
sub
(bad)
jo
mov
add
cmp
and
or
push
test
fsubr
mov
dec
icebp
inc
jmp
dec
pop
je
movs
xor
sbb
mov
fbstp
jmp
sbb
gs
sbb
fisub
and
cmp
ret
dec
cmp
jne
mov
dec
jge
adc
mov
rcr
mov
fisub
or
sub
xchg
inc
xor
push
xor
hlt
cwde
ret
pop
push
pop
jmp
rcl
nop
inc
rcl
jmp
xchg
jne
and
mov
jge
mov
mov
push
mov
iret
fadd
(bad)
pop
fcmovb
jne
leave
pop
scas
adc
push
jmp
sbb
inc
xor
dec
mov
xchg
scas
lods
jo
int3
push
push
or
jmp
lock
(bad)
fdivr
or
xor
fsubr
sbb
push
cmp
(bad)
icebp
xchg
or
fsub
jmp
ret
xchg
cli
cmp
je
icebp
adc
test
ss
jns
inc
jne
xor
pop
inc
and
add
adc
cmps
jns
xchg
add
jno
aam
es
mov
aad
dec
dec
and
mov
mov
add
inc
mov
pop
test
loop
add
xchg
adc
mov
xchg
ins
xor
mov
jge
adc
fmul
mov
mov
sub
movs
xor
cmc
or
popa
shl
mov
mov
arpl
add
or
stos
inc
lock
xchg
cmp
lock
inc
push
aam
mov
sub
mov
mov
scas
lods
push
sub
inc
ins
retf
fs
add
in
sub
push
add
imul
les
je
dec
adc
adc
jno
xchg
test
sub
sub
mov
add
jg
sbb
or
sub
and
xchg
sub
imul
dec
sbb
dec
cld
sbb
sbb
(bad)
cmp
mov
fadd
fcomp
pop
mov
add
jle
adc
or
or
cmps
xlat
cdq
or
adc
jne
test
test
inc
fs
dec
pop
mov
loopne
popf
inc
enter
adc
cmp
xor
call
hlt
mov
sar
push
dec
add
pop
js
adc
adc
push
inc
add
popa
cmp
jbe
adc
cmp
(bad)
lds
lods
and
add
mov
sbb
dec
jp
ret
mov
sbb
jno
inc
ret
or
sub
dec
add
popa
mov
xor
pop
pop
gs
and
ins
bound
dec
xor
aas
data16
int3
inc
xchg
fadd
add
stc
xor
jo
add
xchg
adc
fcom
inc
popa
or
cmc
adc
add
rcl
hlt
je
sub
mov
test
and
sub
ret
sahf
ror
xor
xchg
jl
sbb
mov
inc
or
ins
cli
and
ret
add
sbb
loope
rcr
and
pop
fistp
lea
xor
sar
adc
or
call
enter
adc
movs
je
push
pop
in
xor
or
jmp
jns
mov
mov
lds
mov
je
data16
cmp
call
lods
inc
sub
ror
jmp
xor
xchg
hlt
add
dec
mov
push
loopne
loopne
and
pop
leave
movs
pusha
xor
adc
push
push
pop
fs
sar
or
sub
fcom
sbb
ja
imul
loop
ficom
add
ins
push
mov
and
jl
inc
mov
pop
hlt
xor
rcl
or
inc
push
sub
push
scas
inc
inc
test
cdq
inc
jl
(bad)
lea
adc
fbstp
xor
sbb
les
fnsave
inc
xchg
inc
and
mov
push
lods
imul
inc
cwde
dec
push
and
imul
in
loopne
test
ds
ud2
dec
pmulhw
xchg
mul
xchg
rol
push
or
dec
pop
repnz
sub
sub
push
jmp
add
loop
je
mov
add
jmp
add
push
rol
xchg
add
lahf
add
les
sbb
jmp
push
add
adc
and
mov
pop
outs
mov
add
shr
inc
cmp
rol
add
stos
add
push
jnp
and
cmovs
das
and
cmp
mov
add
sub
and
add
pop
imul
shr
mov
movs
das
jmp
icebp
and
mov
or
retf
scas
call
mov
and
lea
push
nop
pushf
sbb
jne
push
push
js
jo
and
push
int
loope
mov
or
pop
xor
sub
icebp
pop
push
push
fst
inc
fadd
outs
ins
push
push
dec
pop
enter
mov
pop
and
xor
fcomp
dec
adc
jo
push
js
push
jmp
adc
fdivrp
or
ror
mov
push
pop
test
push
push
mov
and
dec
sub
gs
dec
popa
shl
jmp
movs
loope
xor
test
push
add
pop
push
dec
and
sub
lahf
fild
frstor
and
das
loope
leave
bound
adc
or
inc
movs
fdivr
mov
push
xchg
pop
adc
rol
jl
inc
push
shr
xor
pop
add
xchg
mov
pop
or
adc
fwait
lods
addr16
dec
sar
jmp
sub
or
adc
pop
xor
pop
xor
into
xor
(bad)
imul
pop
push
cdq
push
pop
cld
dec
pushf
cmp
add
mov
push
out
jl
and
(bad)
scas
mov
and
shl
lds
sbb
cs
aas
inc
loop
sbb
inc
js
and
jle
mov
or
popf
xor
or
sbb
sar
pop
push
sub
push
push
mov
dec
rcr
call
add
xchg
push
test
ret
xchg
add
or
stos
aas
or
or
sbb
cmp
push
cmps
mov
or
adc
xchg
(bad)
cs
ret
(bad)
xor
add
inc
movs
xor
das
sbb
sub
iret
or
add
pop
jge
lea
shr
jb
mul
mov
sbb
stc
cli
push
ret
and
push
xchg
loope
loopne
or
arpl
and
cmp
xor
in
imul
psrlw
pusha
add
xchg
jmp
push
cmp
lea
sbb
xor
(bad)
sub
je
dec
jne
cs
adc
data16
pop
fmul
int3
add
push
mov
sbb
loopne
mov
shl
dec
popa
pusha
movs
xor
lea
jo
retf
cmp
rcr
mov
mov
mov
xchg
and
add
sub
xor
xor
and
das
push
out
cmp
xchg
xor
not
fwait
mov
loopne
rcr
pop
inc
push
inc
aaa
outs
dec
pop
sti
push
jmp
and
aam
ror
dec
add
shl
or
or
outs
movs
jns
hlt
cs
aam
iret
cmp
jmp
pop
clc
mov
sub
and
jmp
adc
mov
adc
or
and
or
push
xchg
mov
pop
lods
mov
ret
aas
jns
and
mov
sbb
dec
inc
mov
mov
dec
jne
or
shl
lods
in
pop
push
add
jmp
or
lds
fdiv
mov
cli
inc
movs
loopne
mov
push
inc
pusha
jo
jb
gs
mov
ror
adc
or
mov
loopne
jno
out
mov
enter
sub
ret
int3
es
push
lock
sub
fdiv
cmp
jle
pop
rcl
jecxz
add
test
imul
dec
add
rcr
jbe
jo
bound
call
mov
add
xor
lods
daa
dec
or
fdiv
mov
loop
jnp
ficomp
jno
aam
xor
push
lea
scas
daa
mov
data16
jne
jle
sbb
push
retf
or
adc
sbb
add
pop
sahf
lea
jnp
stc
mov
add
add
dec
cmc
inc
dec
hlt
jns
add
ja
add
movs
or
(bad)
push
mov
pop
add
push
add
fist
aas
ss
cmp
dec
xchg
xlat
pop
inc
ret
add
xchg
fmul
or
arpl
sub
lods
aaa
push
mov
mov
test
popf
add
and
mov
dec
inc
xor
adc
inc
out
mov
mov
lods
ret
mov
test
add
mov
dec
ins
data16
loopne
and
ror
sahf
xchg
sahf
fcomp
test
stos
push
inc
fdiv
pop
cmp
push
pusha
push
sub
xchg
cmp
shl
(bad)
lea
jl
call
mov
pop
loopne
or
test
xor
ret
push
sub
push
and
cmp
inc
int3
jle
and
(bad)
fucom
fmul
fadd
jp
daa
sub
add
stos
pop
add
mov
nop
fsub
aam
jmp
inc
pusha
mov
mov
pop
mov
adc
call
inc
(bad)
nop
add
mov
lea
cmps
inc
fiadd
push
pusha
bound
ficom
xchg
out
inc
sbb
sub
mov
push
loop
cmc
and
jmp
xchg
cmp
cmp
cmps
or
dec
cmovae
fadd
push
repnz
mov
pop
add
pop
sbb
inc
cmp
cmp
int
mov
add
fcom
adc
add
and
add
adc
jecxz
in
inc
popa
loopne
or
retf
std
mov
icebp
dec
cdq
fnstenv
or
mov
xor
call
dec
je
bnd
out
add
mov
cmp
je
fdiv
fmul
enter
and
mov
mov
xchg
int3
sub
in
ja
add
or
add
nop
out
jo
pushf
arpl
or
shl
add
sub
shl
es
in
shr
dec
or
popa
shl
das
rcl
ror
ret
pop
das
add
sbb
repnz
nop
out
aad
lahf
push
enter
push
ror
and
sahf
in
push
fist
call
rol
sbb
mov
and
pop
dec
or
cmc
mov
or
or
pop
mov
jmp
adc
retf
rol
fwait
jnp
or
nop
hlt
aam
cmp
push
pusha
sbb
sub
movs
push
ins
in
fst
enter
cmp
inc
lahf
pop
cwde
inc
adc
xchg
mov
jp
inc
nop
xchg
loopne
rol
dec
fst
mov
(bad)
mov
or
jl
shr
in
jmp
fcomp
xchg
push
inc
add
jl
fst
icebp
jp
leave
xor
or
inc
and
xchg
stos
mov
sbb
pop
mov
ss
jp
pop
or
mov
mov
or
les
fs
div
cs
ins
jl
jbe
js
icebp
mov
push
or
jg
add
jecxz
ss
adc
movs
retf
push
and
push
or
add
xchg
stos
nop
sub
in
xchg
and
ret
into
cmp
fistp
add
and
je
ss
dec
cmps
enter
mov
sbb
inc
int3
aaa
ins
cmp
adc
je
pop
loopne
inc
and
dec
jne
mov
lods
dec
lock
fwait
test
xchg
hlt
pop
test
pop
push
ret
pop
cwde
inc
movs
push
or
int
popa
loope
pop
and
test
pop
ins
sar
xchg
hlt
cmps
scas
movups
adc
and
fwait
inc
add
xor
cmp
and
and
fisttp
xor
jne
jecxz
and
fs
or
dec
je
in
es
jl
add
add
push
std
or
jmp
mov
in
jl
or
xor
xchg
enter
mov
loop
jp
dec
call
xchg
mov
cs
adc
push
clc
test
pop
jne
je
popf
dec
les
pop
and
sbb
adc
mov
or
ds
adc
mov
dec
mov
xchg
xchg
in
aaa
and
and
or
pop
mov
ins
nop
xor
or
inc
xor
xchg
adc
push
push
inc
nop
push
mov
jmp
mov
jle
int
push
xor
add
pop
retf
cmp
nop
inc
cwde
int3
or
or
aas
fs
adc
xor
add
add
or
test
sub
int
xchg
or
and
lea
rcr
pop
inc
sbb
push
jg
mov
add
jle
push
xchg
pop
aaa
or
jp
mov
out
or
loopne
ror
dec
ja
rcl
rcl
and
cmp
pusha
enter
fcmovb
mov
jo
sbb
sbb
mov
cmps
mov
push
lahf
sbb
xchg
jp
fild
xchg
sub
or
pop
mov
and
pop
adc
mov
sbb
sub
popa
shr
dec
call
icebp
sbb
mov
mov
mov
mov
or
jo
aaa
xor
sbb
(bad)
imul
add
lock
push
add
xor
sar
mov
call
mov
aaa
(bad)
ja
jo
sbb
push
jmp
sbb
sub
xchg
xor
test
(bad)
clc
add
scas
data16
mov
sahf
clc
mov
pop
shl
sub
cmp
int3
inc
jne
and
jae
pusha
dec
mov
cmps
jnp
pop
push
push
dec
cmp
lock
adc
imul
or
inc
dec
dec
mov
mov
pop
or
rcr
push
jl
cmps
and
psubd
or
mov
and
movs
ror
push
fnstenv
cmp
jle
or
dec
int3
rol
aas
bnd
ja
add
add
jle
rcr
mov
push
mov
jae
pop
or
movs
xchg
adc
xor
xchg
jl
jle
and
and
popf
xchg
jmp
inc
push
enter
jg
aam
cwde
fadd
xchg
js
movlps
xor
add
(bad)
pop
dec
stos
pop
mov
push
dec
jne
mov
not
mov
cld
or
fsubr
ret
pcmpeqw
push
mov
test
push
fwait
js
adc
das
fcom
or
push
push
or
ins
dec
dec
fwait
and
and
jb
hlt
mov
scas
and
pop
pop
xchg
dec
fs
jmp
adc
jne
add
int3
mov
int3
pop
ret
cli
adc
adc
inc
pmaxsw
lods
and
aas
dec
cmps
and
push
add
inc
mov
enter
and
inc
push
dec
cwde
cld
cld
xchg
pushf
cwde
dec
out
pop
mov
jmp
out
mov
jge
mov
cmp
and
push
push
push
and
or
adc
add
add
sub
dec
rol
les
mov
mov
xchg
dec
lods
ins
cmp
enter
sub
rol
fild
test
xlat
push
inc
and
push
xor
in
sbb
jne
dec
dec
or
inc
fnstcw
push
push
retf
or
das
movs
imul
mov
sub
jp
cwde
mov
call
and
inc
test
out
je
les
inc
ror
or
imul
mov
test
and
add
ret
mov
in
cmps
or
xchg
lmsw
stos
add
je
dec
je
xchg
sub
inc
fstp
add
repnz
loopne
xchg
sbb
pop
sbb
test
sbb
adc
mov
and
fld
pop
inc
and
outs
arpl
mov
mov
inc
add
or
and
adc
sub
cld
ficomp
dec
or
add
inc
cmp
fild
imul
sar
add
mov
and
cmp
mov
adc
sti
fsub
ror
adc
into
test
aam
pop
(bad)
sbb
in
inc
pop
adc
enter
jg
or
jmp
sbb
call
xchg
or
jmp
mov
cmps
outs
inc
adc
jmp
leave
sub
sub
enter
int3
(bad)
lahf
stos
sbb
cmps
aas
pushf
jmp
mov
push
je
and
repz
mov
mov
mov
jmp
inc
jmp
ss
sub
cmc
push
int3
dec
aaa
or
ja
adc
fcmovb
xchg
mov
or
inc
or
mov
dec
popa
cmp
jp
test
loopne
push
clc
pop
cld
lea
adc
pop
call
ficom
lea
dec
or
push
ficom
push
and
rol
xchg
test
std
mov
aas
enter
jmp
xor
fild
pop
mov
xor
ret
cld
fs
pop
cwde
or
cs
loop
jno
scas
cld
ss
sahf
in
mov
mov
ja
cld
in
test
mov
push
mov
jbe
fnstenv
adc
xor
std
pusha
lods
and
jmp
push
cmp
dec
aaa
dec
xor
pusha
jns
or
nop
test
jns
fnstenv
push
adc
and
imul
(bad)
push
push
rcr
pusha
inc
aad
outs
ret
cmc
dec
cmp
xor
mov
lea
sbb
mov
mov
iret
aaa
mov
cmp
ins
dec
sub
mov
xor
pop
leave
adc
popa
popf
movs
push
or
adc
pop
enter
or
gs
xor
cmps
lds
mov
xchg
cmps
jge
clc
push
and
mov
cmps
add
add
gs
(bad)
popa
push
inc
push
test
bound
pop
sub
movs
dec
inc
les
stc
pop
scas
add
dec
clc
add
sbb
rcr
jae
add
dec
stos
mov
xchg
iret
adc
push
pusha
mov
icebp
scas
lock
push
sahf
sub
inc
aaa
or
xor
gs
shr
adc
and
jl
sbb
mov
sbb
xchg
sub
cmp
mov
add
push
sub
int3
add
and
cmp
ret
jge
push
ss
inc
mov
cdq
fwait
lock
adc
cmps
mov
adc
fidiv
or
in
into
push
repz
add
rcl
xchg
ss
xor
add
jl
inc
les
cmps
lds
xor
or
pop
inc
adc
rcl
das
ret
push
enter
and
jo
sbb
popf
and
xchg
mov
(bad)
or
inc
cmp
sbb
ror
cmp
sub
enter
mov
jl
imul
mov
add
xor
cwde
js
push
adc
cmp
or
sbb
fldenv
mov
add
push
jns
mov
add
add
lods
sbb
push
loop
pop
xor
push
cmps
xchg
mov
push
add
or
lods
adc
xchg
mov
cs
sub
cs
adc
xchg
push
sub
(bad)
dec
pop
psubq
inc
mov
cmps
das
xor
pop
popa
cmp
pusha
mov
jne
(bad)
ret
push
test
test
and
dec
int3
ret
cmp
hlt
stos
sbb
js
push
or
sbb
ret
push
aas
les
out
(bad)
ins
fwait
dec
and
hlt
pop
pop
push
add
push
and
adc
mov
sbb
js
mov
sub
les
or
push
add
mov
cmp
hlt
lods
add
icebp
xor
lods
call
mov
les
pop
repz
adc
sbb
inc
cmp
dec
call
loopne
cmp
ins
sbb
inc
sbb
and
nop
add
popf
add
nop
inc
push
jl
mov
in
and
loop
cmps
inc
or
add
mov
sub
push
jmp
test
popa
push
add
iret
sub
sbb
xor
and
xchg
movs
inc
mov
call
sbb
les
add
sbb
push
jne
ret
jne
adc
icebp
or
jmp
dec
(bad)
ins
mov
out
push
jne
repz
jo
xor
inc
in
stc
fcomp
lods
xor
pushf
mov
push
or
sbb
retf
imul
add
push
sti
into
je
(bad)
xor
out
add
adc
push
loope
push
mov
adc
or
xchg
or
mov
daa
or
cmc
push
clc
or
es
dec
push
pop
data16
add
pop
je
dec
lahf
and
outs
sbb
out
mov
adc
ins
push
push
add
in
and
add
sbb
xchg
push
push
stc
sbb
mov
imul
scas
lock
pop
rol
mov
and
adc
aaa
and
gs
or
sub
retf
xor
xor
mov
jge
dec
or
and
fadd
push
xor
and
and
fimul
pop
pop
cmp
(bad)
(bad)
adc
mov
add
cmp
(bad)
adc
adc
push
js
js
pop
mov
dec
mov
jmp
mov
sbb
xor
xchg
fiadd
sbb
or
ficomp
pushf
push
psubb
jae
inc
js
and
in
cmp
(bad)
jmp
jle
cld
mov
xchg
push
ret
mov
xor
push
pop
or
xor
mov
cmp
add
lods
sub
movs
sub
sub
adc
mov
sti
pusha
es
xchg
mov
movs
add
cmc
mov
pop
and
jo
mov
fdiv
dec
fnsave
icebp
mov
jl
xchg
jbe
aam
dec
dec
push
push
sar
rol
or
cmp
jae
or
in
add
inc
pusha
mov
fcmovb
aas
rcr
xchg
sar
fstp
das
sub
jmp
mov
mov
les
dec
in
aaa
xchg
loopne
jo
jge
lock
mov
ds
clc
fwait
xchg
sbb
ins
addr16
inc
fwait
movs
add
xor
pop
sub
ror
mov
push
mov
test
push
(bad)
rcl
mov
repz
in
daa
lods
adc
jo
stc
adc
je
adc
mov
sbb
popa
dec
or
add
adc
push
sbb
xchg
mov
sbb
in
or
sbb
mov
xchg
je
clc
loopne
arpl
or
sub
dec
inc
hlt
cmp
mov
jns
add
pop
add
mov
fwait
or
and
std
push
cmp
retf
sub
mov
adc
push
mov
pop
call
cmc
xor
rcr
add
dec
jmp
inc
add
bound
sbb
mov
mov
mov
add
sbb
and
iret
sbb
inc
cmps
xlat
cmps
sbb
cwde
xchg
lods
jmp
pop
sbb
loopne
pop
add
sub
ins
add
or
lods
push
arpl
push
lahf
dec
scas
mov
sahf
mov
xor
jle
call
sub
push
rol
call
lods
mov
adc
sub
nop
jns
jns
push
add
sbb
lds
js
jmp
pop
sbb
add
inc
sub
enter
and
pop
sbb
daa
add
xlat
mov
and
push
inc
adc
arpl
or
push
mov
retf
mov
adc
jl
rcr
or
pop
cmc
mov
into
arpl
in
ins
leave
fdivr
mov
add
js
jbe
pop
cs
jecxz
jl
jmp
mov
mov
cmp
inc
or
mov
lock
cmp
adc
push
mov
dec
dec
dec
repnz
test
dec
pop
sbb
fcmovb
lods
cld
cdq
fwait
arpl
imul
test
pop
lods
not
enter
sub
shr
push
(bad)
in
mov
sahf
dec
mov
adc
mov
(bad)
and
xchg
fist
jne
pusha
inc
outs
jo
les
and
sub
mov
adc
xchg
jae
ss
shr
or
mov
ret
call
clc
xchg
call
pop
inc
cmp
push
cmp
mov
jmp
rol
and
adc
cmp
xlat
pop
clc
bound
cmp
movs
push
xor
jb
mov
mov
xor
push
call
jmp
into
inc
pop
ret
bound
sbb
aad
(bad)
cmps
imul
dec
loopne
shl
icebp
pop
pop
cmp
and
inc
imul
je
addr16
test
iret
mov
push
and
adc
shl
mov
mov
or
pusha
jnp
fsubr
sbb
jge
add
mov
rcl
sub
pop
lock
lods
sbb
lahf
fwait
or
xchg
pop
sub
pop
and
add
and
shr
mov
std
in
movs
mov
fstp
xor
fstp
sub
push
leave
es
mov
inc
mov
lods
xor
cmp
xor
mov
push
pop
push
inc
loopne
es
(bad)
xchg
pop
jecxz
leave
or
pop
dec
xchg
sub
call
sub
xchg
fs
loopne
xchg
loope
cmp
(bad)
lds
xchg
call
or
fsub
sbb
and
or
call
or
inc
push
dec
mov
jmp
fild
xor
jno
xor
pop
pop
xlat
data16
and
push
daa
xor
inc
and
push
xor
(bad)
mov
or
fwait
cmp
call
fwait
in
pop
pop
mov
add
sbb
and
lds
xor
fucompp
call
adc
xor
mov
int
xchg
rol
jno
rcl
and
and
out
xor
or
push
adc
je
dec
pop
cmp
pushf
iret
adc
push
add
das
mov
sbb
cmp
retf
sub
adc
mov
repz
pusha
aaa
es
add
jg
lds
mov
cmps
or
or
adc
xor
sub
and
sbb
sbb
xor
ds
enter
mov
and
mov
jp
xor
shr
cmp
call
pop
les
cmps
movs
or
and
ret
je
(bad)
je
and
repnz
lock
cmp
sti
mov
mov
fwait
push
add
in
sar
push
mov
lahf
arpl
sbb
adc
and
stc
add
loopne
mov
cwde
(bad)
lock
inc
push
adc
xchg
dec
bound
add
aad
pop
adc
sub
sub
inc
nop
sbb
push
xchg
inc
and
push
and
add
sub
push
ins
jge
inc
or
ja
sub
int3
cdq
and
fwait
xchg
or
lock
lock
in
rcr
pop
loope
xlat
test
loope
dec
aad
xlat
loopne
bound
xor
sti
add
cmp
inc
jae
xchg
or
sbb
sub
jno
icebp
cmp
pushf
sub
add
sub
mov
jae
inc
ror
lods
out
or
mov
lahf
inc
jp
push
stc
adc
nop
or
sahf
push
push
xchg
into
les
inc
push
add
cld
push
ret
sub
xor
std
movs
or
call
es
test
xor
int3
lahf
mov
jecxz
inc
xchg
xchg
sbb
and
enter
inc
jmp
mov
repnz
cmc
ret
mov
xor
ja
sub
stos
enter
cmc
loopne
lahf
jmp
int
dec
pop
adc
fcom
sub
jmp
xchg
cmp
int3
add
js
ret
sti
pop
outs
sbb
mov
and
shl
les
scas
into
lods
add
movs
sbb
push
das
rcl
or
sub
rcr
in
push
add
loopne
and
pop
sub
pushf
and
xchg
je
into
adc
ins
adc
dec
pop
mov
mov
ins
repnz
inc
dec
push
xor
xor
in
sbb
and
jo
mov
je
popf
loope
ret
add
or
push
sbb
mov
je
dec
pop
test
or
dec
gs
or
dec
push
sub
mov
jg
test
xor
add
push
add
je
arpl
jae
add
mov
imul
push
(bad)
xor
fwait
mov
test
mov
xor
movs
jecxz
pop
fwait
ss
leave
xchg
out
mov
sahf
add
mov
add
and
adc
push
mov
test
loope
dec
loope
rol
outs
jg
mov
lods
add
in
shl
mov
dec
js
dec
test
xor
adc
je
adc
add
adc
cmc
xor
mov
xchg
xchg
or
outs
and
shr
sub
dec
mov
fwait
les
dec
sbb
jae
sbb
fsub
add
mov
(bad)
xchg
std
fwait
retf
push
inc
out
jg
adc
jmp
lahf
xlat
es
mov
pop
add
jbe
cmp
xchg
inc
add
sub
retf
fwait
fs
sbb
in
lock
and
xchg
fwait
and
pop
sbb
daa
leave
sbb
pop
clc
push
fsubr
stos
dec
sub
loop
je
xchg
leave
rol
das
sub
std
ds
mov
test
add
inc
mov
mov
cmp
adc
pusha
or
xor
sti
loopne
mov
add
xor
inc
scas
sbb
fsub
ss
push
mov
add
push
iret
push
cmps
or
add
sub
add
mov
mov
mov
inc
pop
or
xchg
xchg
add
scas
add
or
jbe
mov
xlat
mov
cmp
mov
add
inc
add
and
add
add
mov
scas
xchg
(bad)
adc
push
sti
enter
add
push
nop
inc
xchg
xor
enter
shl
pop
add
lods
leave
mov
ins
cmc
mov
js
pop
sti
iret
sbb
sub
inc
fcmovnb
in
dec
out
add
or
push
ret
adc
cmp
cmc
and
fs
hlt
mov
xchg
ret
cmp
pusha
ret
pop
sbb
jmp
mov
mov
pop
shr
push
sub
sub
mov
nop
jle
push
retf
xchg
dec
and
aaa
sub
mov
jmp
por
sti
pusha
add
in
ss
gs
popf
xor
dec
sar
sbb
aad
or
pop
sar
jge
push
mov
enter
mov
jo
aas
push
mov
xor
aam
test
and
test
mov
cmp
in
jae
push
sub
in
adc
fnstsw
sbb
pop
mov
sub
sbb
pop
adc
les
push
inc
clc
mov
enter
adc
mov
sbb
cmp
push
mov
mov
add
adc
adc
stc
jno
call
xlat
or
sbb
lods
ror
pop
push
inc
aas
lods
jns
adc
dec
push
pop
add
retf
push
aad
ret
adc
add
mov
dec
or
dec
out
test
jmp
or
mov
inc
sbb
rcl
jbe
cmp
dec
or
test
mov
add
lods
adc
add
mov
and
fistp
out
aam
xchg
es
dec
push
gs
fmul
into
jnp
daa
dec
dec
dec
mov
pop
adc
enter
aam
and
jl
push
int3
clc
sub
cmp
jae
mov
inc
push
arpl
add
cmps
test
mov
pop
fcom
pop
xor
and
addps
mov
mov
rol
add
sbb
mov
jge
add
cdq
clc
mov
js
popa
push
mov
les
push
leave
adc
fistp
inc
sbb
inc
cld
fst
push
push
sbb
and
nop
cmp
and
pop
jb
test
sbb
imul
and
inc
add
add
mov
and
pop
push
cmp
fld
add
aam
inc
sbb
movs
repnz
adc
jbe
mov
push
mov
daa
xor
jo
lahf
nop
leave
dec
fst
bound
arpl
repnz
sar
(bad)
xor
xchg
add
shr
mov
fld
jnp
sbb
xchg
add
or
or
inc
fisub
js
sbb
add
nop
shl
test
shr
rcl
rcl
or
and
add
add
popa
sti
add
aas
dec
push
jne
inc
dec
xchg
stos
cmp
(bad)
add
and
ret
push
mov
imul
test
xchg
mov
add
test
jbe
mov
orps
fstp
jo
dec
cwde
clc
je
dec
or
mov
dec
mov
cmp
push
iret
cmp
movs
pusha
adc
fcomp
cmp
mov
jmp
xchg
push
femms
call
push
and
inc
mov
push
rol
inc
mov
add
and
push
pushf
jge
dec
add
mov
mov
or
aam
jo
push
sub
mov
outs
in
lock
mov
push
pop
and
ds
movs
clc
movs
push
mov
in
sub
push
sub
add
lock
or
xor
in
sbb
shl
xchg
xor
push
push
call
jo
dec
add
cli
cmp
xchg
nop
imul
cwde
jmp
call
sbb
in
xchg
inc
cld
loop
test
leave
add
dec
outs
daa
fidiv
mov
lods
mov
mov
and
cmp
add
sub
xchg
xchg
(bad)
sbb
and
xchg
enter
nop
add
es
add
imul
data16
push
dec
or
inc
xchg
or
xor
clc
clc
mul
jmp
jo
add
add
jo
int
in
xchg
pop
clc
js
inc
xor
fadd
pop
rol
aam
push
sub
retf
pop
xor
cmps
mov
icebp
jno
shl
mov
lock
mov
push
push
dec
cmps
arpl
cld
adc
mov
push
psubusw
inc
inc
loop
pop
push
inc
cs
mov
cmc
jne
lods
or
mov
mov
sar
test
jmp
inc
pop
icebp
vpavgb
push
cmps
inc
or
outs
in
xor
push
mov
push
cmc
pop
mov
pusha
lods
ins
shl
dec
jne
inc
loop
not
dec
pop
mov
shr
lea
sub
inc
test
add
push
and
xor
loopne
add
adc
add
loop
adc
fsub
fcom
add
and
cmp
add
or
cmps
in
dec
in
loopne
dec
fsubr
mov
inc
mov
int3
enter
and
int3
in
mov
or
sub
inc
retf
lods
inc
fidivr
mov
test
(bad)
push
push
push
inc
mov
inc
sbb
aam
xor
mov
mov
push
addr16
push
mov
ret
enter
aas
push
xchg
and
dec
xchg
rcl
add
movs
mov
push
jno
in
jne
push
or
mov
cmp
loope
daa
xchg
jnp
cmp
fldln2
sbb
pusha
and
repnz
sahf
pusha
or
repnz
add
mov
in
add
or
sub
xor
jne
cld
adc
mov
inc
push
(bad)
jns
retf
in
dec
fmul
loopne
lock
imul
jl
push
inc
add
sbb
mov
cmps
push
sub
xor
inc
icebp
dec
dec
pusha
adc
pop
xchg
mov
sahf
in
add
add
add
push
in
cmp
fsub
call
and
push
adc
popa
adc
add
lock
call
pushf
lahf
jg
inc
cmp
in
jne
in
sbb
xor
in
(bad)
inc
and
ins
and
popa
push
lea
cwde
sahf
mov
and
call
retf
nop
pop
mov
mov
cmp
inc
sbb
and
sbb
cs
imul
dec
push
dec
add
movs
and
push
es
or
(bad)
jns
shl
push
movs
adc
std
xor
push
push
dec
add
loope
adc
(bad)
cs
cmp
push
mov
mul
cld
icebp
add
out
ja
out
sysexit
mov
push
cmp
jne
mov
mov
cli
test
jne
pop
hlt
popf
xor
dec
(bad)
add
dec
test
xor
push
nop
loopne
leave
inc
call
int3
scas
cmps
or
mov
mov
stos
push
fnstenv
sub
xchg
ret
dec
pusha
add
add
xor
bound
inc
push
ffree
cld
add
push
sub
popa
bound
or
mov
loopne
add
rcr
push
neg
xor
retf
mov
sbb
xchg
data16
push
xchg
or
daa
scas
lock
cwde
jecxz
dec
test
xor
(bad)
js
sub
leave
push
push
pusha
call
adc
pop
xor
jns
sbb
push
lods
sbb
jle
add
or
(bad)
cli
pusha
cdq
inc
or
sub
xchg
jbe
mov
out
push
dec
call
xchg
jl
mov
nop
push
add
shr
stos
push
nop
pop
mov
push
or
mov
jp
(bad)
aam
cli
test
rcl
fs
call
xchg
jbe
jmp
es
pop
xchg
adc
fs
or
dec
rcl
mov
or
push
cwde
fsubr
aam
xor
xor
dec
add
inc
pop
js
popa
jle
add
je
mov
and
jecxz
jmp
stc
(bad)
(bad)
out
pop
jns
fdivr
in
mov
and
xchg
pop
call
and
and
xor
aam
addr16
sahf
sbb
pop
cmps
push
sub
inc
or
les
xor
arpl
leave
sahf
ins
sahf
adc
jo
leave
mov
and
or
mov
mov
int
sub
xor
fild
or
cs
dec
adc
and
scas
pop
xchg
nop
adc
add
in
push
call
imul
push
dec
jbe
or
ror
push
mov
jnp
gs
push
sbb
xchg
sbb
loopne
or
add
popf
lea
mov
pop
mov
and
jg
imul
ins
stos
and
repnz
add
dec
cs
inc
das
js
pop
adc
xchg
in
in
inc
mov
inc
in
fist
push
pop
mov
inc
sbb
sti
enter
and
mov
jnp
xchg
rcr
test
mov
add
lock
aaa
sbb
jle
mov
inc
ss
xlat
jne
fimul
inc
and
jne
pop
push
pop
test
push
or
dec
push
dec
and
sbb
push
xchg
adc
inc
and
add
stc
and
in
sub
xchg
xchg
xchg
xchg
test
add
fild
cmp
pop
pop
or
call
sbb
xchg
sahf
inc
mov
lock
sub
je
leave
push
push
or
or
sbb
leave
outs
and
adc
dec
sbb
cmc
imul
jmp
sub
xor
lea
and
cs
push
adc
int
jno
adc
popf
dec
sbb
movs
cmp
xchg
xor
add
rcr
daa
or
inc
sbb
nop
dec
lods
xchg
loope
add
xor
loope
test
xchg
das
outs
repz
movs
or
js
movs
pop
inc
inc
and
jmp
adc
imul
pop
and
dec
fnstenv
jmp
ins
mov
xchg
pop
mov
cmps
call
outs
dec
and
adc
pop
cmp
or
loopne
outs
dec
mov
sbb
push
mov
ja
inc
out
jmp
loop
mov
outs
push
cmp
jns
mov
sub
cdq
add
daa
fcmovbe
popa
enter
mov
sbb
adc
imul
push
mov
mov
adc
sbb
adc
cs
not
cld
in
jo
xlat
inc
test
sbb
arpl
push
pop
or
add
or
gs
xchg
ja
fidiv
pop
cli
and
pusha
leave
in
sbb
sub
sbb
dec
sbb
and
sbb
sbb
adc
xor
push
rol
sub
loopne
xchg
stos
aam
mov
shl
adc
push
icebp
mov
jo
loop
or
add
mov
jmp
push
stos
cmps
pop
cmp
rcl
adc
cdq
jne
mov
outs
jg
fsub
cmp
add
push
ins
std
in
test
out
adc
into
cs
stos
xor
adc
sbb
cmp
inc
(bad)
cmp
and
or
ins
lsl
clc
inc
mov
dec
adc
adc
outs
aad
xchg
lods
pop
push
mov
cmp
ss
pop
stos
and
rol
pusha
adc
sub
scas
xchg
popa
inc
mov
cmp
stos
inc
dec
pop
mov
mov
repnz
dec
or
out
dec
bound
leave
sbb
adc
sbb
movs
mov
outs
mov
push
and
(bad)
ror
or
cmp
rol
push
pushf
pop
pop
xor
mov
xchg
lods
xchg
les
mov
add
mov
push
mov
sub
adc
dec
nop
loopne
sub
dec
enter
dec
in
mov
je
and
and
and
sbb
dec
add
xchg
dec
lock
push
test
pop
xlat
xchg
pusha
push
ret
xchg
or
or
xchg
cmp
inc
inc
cmp
push
dec
mov
cmp
add
dec
xchg
xor
aas
fcomp
xchg
xchg
and
jae
pop
sub
xor
lods
sbb
xor
mov
mov
loope
sbb
sti
xor
inc
retf
in
jmp
mov
sar
pushf
push
movs
push
pop
sub
or
test
cmp
sbb
sub
adc
xor
push
rcl
sub
sub
and
iret
leave
inc
ficom
xchg
push
or
or
sbb
pop
(bad)
jbe
(bad)
jmp
in
or
jno
inc
cmp
jne
mov
push
test
fst
jb
cmps
push
jg
adc
and
pop
test
jb
ss
aad
and
stos
add
xlat
add
adc
adc
dec
popa
cmp
ins
out
mov
scas
sbb
add
add
jmp
(bad)
cmp
dec
repnz
and
fild
fs
imul
or
imul
cmps
xor
cmp
mov
pop
or
add
xor
cmp
dec
(bad)
jns
cmp
mov
inc
or
std
xchg
imul
or
inc
mov
outs
push
adc
in
(bad)
pop
(bad)
outs
jmp
icebp
mov
cmps
pop
push
inc
fs
aam
pop
mov
xor
cmp
inc
sti
icebp
and
and
dec
and
lea
jnp
mov
movs
and
dec
(bad)
fld
push
mov
movs
cld
cmps
sbb
pop
lods
addr16
sub
mov
cwde
pop
or
(bad)
or
mov
movs
inc
and
movs
xlat
jmp
add
mov
and
cli
pushf
mov
daa
jg
add
pop
and
adc
pop
rol
test
push
adc
(bad)
sbb
mov
and
sbb
test
in
into
repz
sbb
push
push
mov
jmp
and
jmp
into
jle
sbb
nop
jecxz
adc
fisttp
push
sbb
sub
xchg
and
add
fistp
fwait
sbb
jo
mov
(bad)
push
aam
(bad)
jmp
push
push
dec
sbb
loope
ror
adc
fld
(bad)
nop
pop
cmp
in
adc
sbb
fld
push
aaa
xchg
xchg
pusha
ror
sub
inc
mov
add
dec
dec
xlat
sub
jecxz
cwde
xor
xlat
repnz
lea
adc
pop
sub
test
adc
popf
iret
push
rol
jnp
mov
je
jbe
cmp
xchg
hlt
js
fcomi
add
inc
hlt
hlt
push
and
jns
cmps
leave
fadd
sbb
add
sbb
movs
sahf
and
cld
xlat
push
retf
mov
jge
sub
cmp
test
jne
mov
ror
or
ja
sub
jae
es
inc
sahf
repnz
add
xchg
ret
and
stc
inc
inc
sbb
sbb
mov
or
repz
cs
push
mov
in
(bad)
inc
pusha
inc
push
pmaddwd
retf
mov
(bad)
xchg
js
or
(bad)
icebp
sub
inc
add
in
retf
jno
inc
xor
lea
and
mov
test
adc
xchg
xchg
enter
mov
aaa
sub
jle
(bad)
push
sbb
dec
inc
or
bound
adc
or
arpl
fld
pushf
add
push
jl
add
mov
in
adc
test
mov
adc
mov
loope
pop
ret
aad
push
inc
lods
pop
cmp
push
outs
jmp
aas
sbb
xchg
lods
inc
inc
shrd
adc
pusha
sahf
ins
je
inc
fsub
out
je
or
mov
cmp
stos
sti
push
add
sub
push
pop
ins
mov
ins
pop
jg
imul
fsubr
mov
push
es
cmp
mov
sbb
mul
push
rcl
add
lods
add
xchg
jbe
push
cmp
and
movs
scas
adc
cmovnp
ror
pop
inc
mov
push
icebp
rcl
outs
and
sub
jle
push
add
imul
arpl
jne
sub
bound
repz
lock
ins
inc
bound
push
adc
repz
call
xlat
pop
pop
lods
in
adc
in
cwde
mul
in
mov
mov
in
xchg
lahf
mov
add
daa
mov
xor
pushf
aaa
dec
and
in
repz
adc
dec
or
(bad)
or
rol
retf
pop
adc
xchg
mov
inc
jne
popa
and
and
mov
lods
dec
or
inc
int
or
mov
jle
sbb
pop
mov
add
jb
add
push
or
add
add
ins
loope
aam
push
movs
push
mov
bound
adc
call
or
into
dec
out
nop
mov
cwde
(bad)
jmp
mov
cmps
jge
cmp
jle
cmp
push
push
pop
push
push
sbb
test
mov
add
dec
add
push
pop
adc
clc
push
and
jno
xchg
jge
adc
add
adc
xlat
mov
mov
cmp
pop
inc
add
add
dec
sbb
jbe
add
pop
in
inc
dec
dec
aas
fdivr
jmp
shl
inc
pop
lea
fs
call
inc
and
inc
sbb
jge
or
scas
xor
add
fwait
mov
inc
add
pusha
and
adc
adc
enter
sub
mov
sub
add
sub
xor
out
add
imul
sbb
enter
xor
push
xchg
push
or
adc
ret
mov
test
push
pusha
pushf
ja
cmps
fs
cmp
add
jl
inc
mov
add
push
pop
rol
jmp
fadd
sti
push
popf
sbb
sti
inc
das
mov
mov
pushf
std
adc
es
jne
jne
and
daa
push
or
adc
rol
aas
inc
mov
cld
jge
aad
mov
jo
cmp
sub
mov
jge
push
or
xor
int
jle
and
sbb
add
sbb
shl
mov
xor
jns
outs
push
jo
jae
repnz
or
jb
mov
mov
popa
xlat
sbb
push
rcl
add
sub
or
movs
sbb
(bad)
nop
test
in
xchg
and
xor
int
dec
mov
ror
shr
jno
cmps
pushf
gs
adc
pop
add
jg
inc
lock
add
add
inc
xor
outs
push
sub
and
pop
enter
xor
inc
dec
adc
fiadd
clc
je
push
pusha
adc
rcl
fst
sbb
jl
call
out
add
fwait
popa
stc
test
adc
adc
and
test
jmp
push
pop
add
xor
and
mov
lods
add
fdiv
ins
aaa
add
jb
jb
or
jbe
inc
jmp
xor
lahf
xchg
jne
js
push
cmps
adc
int
fdivp
adc
lock
mov
pop
pusha
pop
movzx
push
lds
xor
loope
bound
xor
sbb
sub
mov
cmps
push
ja
arpl
sub
jmp
out
sbb
cmp
xor
fstp
sub
lock
push
cmp
es
adc
fiadd
jb
add
inc
or
and
jmp
or
pop
sar
adc
mov
inc
lock
nop
lds
mov
or
imul
mov
xor
pushf
and
push
or
pop
lods
xchg
out
sar
mov
js
xor
xor
sub
sbb
lods
icebp
or
and
xchg
test
xor
rcr
jl
and
popa
and
or
mov
mov
xor
mov
and
pop
adc
adc
mov
or
inc
jp
dec
pusha
push
jns
pop
and
xor
or
sub
enter
mov
movs
jns
adc
push
fwait
adc
mov
mov
jns
push
xor
jae
jmp
jmp
ret
jmp
push
pusha
loope
fwait
xchg
push
or
or
ss
movs
mov
dec
mov
inc
mov
push
sub
pop
xchg
and
sub
mov
pop
in
push
(bad)
adc
pop
popa
push
sub
dec
push
iret
or
cwde
adc
xchg
rcr
mov
cmps
add
inc
or
push
mov
adc
(bad)
push
xchg
adc
inc
inc
mov
inc
dec
jmp
xchg
stos
stos
out
or
inc
mov
mov
cld
movs
sub
or
adc
adc
xor
lea
push
add
sbb
mov
xchg
mov
and
adc
test
mov
pop
cmp
shr
xchg
movs
sahf
fdiv
cwde
push
fsubr
add
dec
dec
imul
fwait
push
and
fbld
les
push
sub
outs
pushf
mov
sub
cmp
dec
dec
cmps
push
je
in
mov
xor
dec
or
mov
popa
pop
imul
and
mov
pop
mov
and
loop
jb
cmp
iret
jp
adc
mov
mov
or
test
pop
and
adc
mov
xchg
and
push
scas
call
push
mov
js
push
sbb
push
lahf
enter
xor
mov
adc
jbe
jne
loop
jo
xlat
jne
test
movs
push
push
clc
sar
dec
xlat
xchg
push
(bad)
dec
or
clc
je
pop
or
out
loop
inc
inc
jge
and
add
fistp
cmps
or
mov
cmc
push
mov
ret
adc
xchg
xor
and
dec
and
ret
xlat
sub
aaa
inc
pusha
push
mov
add
xor
mov
inc
jmp
jmp
sub
gs
imul
and
test
fs
inc
js
xor
xor
adc
ret
xchg
loope
sub
je
mov
xchg
inc
sub
sbb
jb
les
movzx
inc
cmps
dec
(bad)
fisttp
dec
dec
push
shl
call
rcl
ins
lods
push
push
int
xchg
inc
mov
nop
dec
stos
jle
inc
cs
pusha
lock
jmp
xchg
mov
iret
push
mov
push
and
sbb
call
pop
pop
add
xchg
add
sahf
lahf
shr
cmp
imul
mov
fs
adc
sub
in
adc
push
push
outs
fmul
push
dec
mov
in
dec
adc
or
add
call
retf
mov
add
rol
pusha
dec
push
ins
or
push
mov
push
inc
lods
in
or
mov
cmps
jl
stos
xchg
pusha
inc
sbb
push
adc
ror
retf
adc
or
mov
add
cwde
add
mov
xor
js
adc
sbb
aaa
mov
inc
xor
push
mov
scas
or
sbb
mov
adc
inc
mov
sti
mov
and
xlat
(bad)
movs
mov
sub
mov
add
repz
and
xchg
add
add
push
push
xor
add
ja
dec
out
sub
sbb
dec
mov
inc
sbb
inc
cmp
adc
push
push
xchg
ret
daa
push
dec
or
mov
xchg
or
mov
scas
or
mov
or
adc
or
or
and
jmp
jecxz
xor
in
test
and
xlat
dec
int3
ss
cmp
or
dec
outs
nop
xchg
or
or
dec
test
call
adc
adc
push
add
les
pop
jo
leave
call
cmp
and
adc
and
imul
lea
fsub
sahf
es
repz
out
or
sahf
and
sbb
test
sar
movs
jae
push
jae
adc
sar
add
mov
ss
sub
inc
pop
les
adc
jo
inc
bnd
or
sbb
pop
jge
iret
add
push
pop
inc
mov
and
xor
test
xchg
jecxz
or
dec
cmps
(bad)
sub
or
dec
jno
mov
addr16
add
and
sub
jbe
test
or
inc
sub
leave
enter
add
xchg
mov
jmp
and
sbb
push
repz
and
loop
loopne
ins
add
adc
cmp
or
cmp
iret
jo
je
cdq
sbb
push
repz
out
add
pop
or
inc
mov
xor
jecxz
jg
sbb
ins
jne
dec
or
xchg
or
mov
push
add
inc
mov
and
les
or
adc
pusha
std
jne
adc
inc
lea
push
or
lock
and
and
add
stos
xor
xchg
(bad)
push
js
pop
sbb
add
aas
mov
inc
pop
adc
fs
or
cmps
and
cld
or
jbe
call
loope
pop
bound
dec
xchg
and
mov
call
adc
push
push
mov
mov
or
inc
push
adc
push
fcomi
mov
jl
or
mov
jae
push
imul
pop
xchg
cmp
push
ror
inc
xor
sub
loopne
pop
dec
mov
mov
push
push
fwait
clc
loop
inc
pusha
add
cld
push
call
mov
xchg
jbe
sbb
dec
adc
mov
sbb
jns
js
mov
or
cs
inc
add
dec
lock
push
sbb
or
push
or
jmp
sar
push
or
xchg
pushf
lds
inc
cmp
inc
mov
and
in
es
aaa
xchg
push
mov
add
icebp
jns
cwde
dec
inc
push
mov
lods
(bad)
clc
push
push
mov
sub
dec
imul
es
adc
mov
sub
leave
(bad)
inc
or
jae
xchg
(bad)
sbb
test
or
sbb
and
pop
mov
pop
aaa
daa
xchg
loope
push
xor
sbb
nop
mov
adc
adc
lahf
mov
imul
push
dec
mov
mov
out
jge
ficom
test
adc
xchg
cmp
nop
add
(bad)
xchg
out
inc
call
pusha
dec
mov
enter
cmp
dec
je
add
adc
jnp
(bad)
adc
cmp
or
mov
push
inc
xchg
cmp
pop
nop
mov
loopne
or
push
cwde
push
shl
xor
dec
clc
sub
mov
jno
and
aaa
ret
mov
fdiv
cmp
test
shr
jmp
adc
inc
jns
ret
aad
dec
mov
mov
inc
ficom
jnp
push
ja
popf
add
test
or
sub
mov
das
or
mov
xchg
push
das
inc
mov
retf
sub
cmp
xchg
xor
add
sbb
and
mov
movs
or
push
(bad)
and
or
and
rcl
out
sub
lods
scas
cmp
movs
mov
popa
xchg
push
enter
add
add
inc
add
push
push
pop
dec
mov
sbb
mov
inc
push
pop
jp
push
mov
adc
loope
dec
movs
inc
sub
sub
jne
data16
mov
dec
mov
add
pop
js
adc
jns
push
inc
sbb
add
neg
push
fsubr
scas
add
ins
xor
dec
or
cwde
dec
sbb
add
adc
add
(bad)
loop
cmp
inc
or
shr
xor
or
test
pop
enter
(bad)
lea
pop
mov
push
push
nop
nop
or
fwait
jmp
inc
or
dec
mov
dec
push
enter
int
sbb
inc
cmp
jns
pop
pop
in
pop
out
or
pop
pop
enter
cmp
in
cs
cmp
gs
cmps
ret
jns
enter
rcl
(bad)
fadd
mov
add
js
sbb
fs
and
test
test
and
sub
mov
sbb
adc
mov
or
mov
mul
add
loopne
push
adc
popaw
xchg
ret
and
add
pop
(bad)
int3
push
add
outs
ja
retf
enter
adc
aas
sbb
inc
clc
xor
repnz
aaa
xchg
test
mov
mov
mov
and
pop
push
mov
adc
and
jno
mov
hlt
add
xchg
mov
nop
mov
jmp
data16
and
lea
daa
and
mov
push
adc
cdq
call
shr
repz
sub
fs
fild
xor
cmp
sub
imul
and
pop
cmp
dec
test
mov
and
into
sti
mov
sahf
outs
cmp
and
push
xor
fwait
inc
rol
inc
fadd
add
adc
js
scas
popa
or
ret
(bad)
xor
pusha
imul
es
fst
xor
dec
mov
sub
adc
and
cmp
pop
loopne
mov
sub
rol
pusha
lahf
lods
xchg
gs
imul
add
jne
movs
sbb
or
xchg
imul
cmp
mov
and
jge
pop
push
ror
test
jl
outs
xchg
(bad)
and
sbb
shl
jae
inc
dec
bound
test
xchg
jae
adc
cmp
sbb
imul
lods
sbb
mov
dec
and
push
adc
add
nop
arpl
dec
ret
inc
jmp
add
and
sub
outs
out
iret
ret
push
aam
cmp
add
and
fisub
jo
pop
(bad)
dec
fdiv
popa
adc
leave
push
inc
or
aaa
sar
dec
sbb
cli
xchg
push
test
or
xor
cs
xor
dec
je
jge
lea
inc
or
mov
sbb
fwait
inc
adc
push
xchg
xor
and
xchg
fwait
add
cmp
or
in
dec
pusha
dec
xchg
(bad)
cdq
adc
add
push
mov
dec
pop
mov
sar
pop
push
push
fimul
and
mov
xchg
dec
sbb
pop
add
hlt
lds
xchg
mov
mov
outs
mov
mov
pop
xor
xchg
dec
test
aam
icebp
push
push
jno
pop
inc
sub
add
or
inc
sbb
sbb
sub
push
ret
add
and
xchg
and
data16
jne
ja
ret
inc
xchg
mov
xchg
mov
dec
retf
jb
push
xor
movs
in
ds
in
and
cs
shr
cmp
xor
les
inc
mov
rol
int
mov
jo
loopne
mov
hlt
mov
or
bound
lock
jne
sbb
pop
sbb
sub
push
dec
and
loop
inc
push
popf
or
mov
mov
push
xchg
pop
cs
push
mov
push
push
push
sbb
cli
loop
test
(bad)
sub
or
in
aas
sbb
nop
inc
fimul
mov
add
mov
and
mov
std
cmp
movs
push
lods
jne
xchg
and
and
test
cmp
or
pop
and
inc
pop
or
mov
rcr
je
push
adc
push
(bad)
movs
fwait
jge
movs
and
mov
sbb
retf
jno
cmp
inc
xchg
push
adc
nop
lahf
iret
cs
add
push
add
sub
aaa
sbb
pop
xchg
xor
rcl
or
popa
mov
xchg
das
inc
xor
and
xchg
aas
inc
mov
xchg
hlt
lea
push
mov
push
add
sub
div
cdq
inc
pop
sub
push
mov
fnstenv
adc
jge
aas
js
xor
sbb
sbb
enter
add
daa
inc
xor
and
jno
lahf
fisttp
cwde
dec
and
imul
sbb
stos
or
push
push
daa
in
retf
sbb
adc
cs
inc
dec
ficomp
fldcw
push
rcl
jg
xchg
adc
dec
shr
mov
jae
adc
push
jecxz
push
lods
loope
dec
push
push
sbb
or
sbb
lods
or
scas
cmp
sbb
jne
arpl
xlat
je
sub
ins
ja
mov
jne
push
pop
shl
xchg
mov
mov
loopne
inc
add
push
movs
outs
adc
push
adc
jb
jb
gs
addr16
or
pop
jns
xchg
add
ins
movs
popa
fldenv
sbb
aaa
daa
js
(bad)
mov
es
push
retf
lods
pop
std
dec
jae
add
aas
jnp
pop
dec
pop
aaa
xor
inc
dec
add
and
pop
fld
cmp
inc
ret
dec
add
pop
ins
test
ja
jle
push
mov
dec
mov
aas
sbb
inc
jge
or
mov
jl
call
lods
mov
lods
cmps
xchg
addr16
xchg
adc
dec
jne
push
jmp
cmp
push
shr
push
pop
(bad)
fs
adc
or
push
cmps
clc
popa
pop
pop
and
inc
add
lea
or
xchg
adc
or
cwde
jmp
add
test
cmps
jno
or
inc
inc
and
dec
add
dec
out
sub
mov
adc
adc
pop
sub
mov
adc
mov
mov
rol
pusha
mov
mov
or
xor
mov
mov
pop
adc
jle
lahf
mov
add
jb
mov
mov
xchg
shr
das
and
nop
lahf
loopne
cmc
mov
iret
xor
outs
sbb
std
ret
push
xor
rol
pop
fisub
std
xchg
retw
add
xchg
gs
adc
or
push
push
int
add
pop
cmp
sub
adc
pop
mov
jl
inc
sub
aad
jle
enter
int3
xor
nop
mov
das
jle
mov
lea
out
push
xor
cmp
fcomp
xor
mov
leave
pop
sbb
and
jl
outs
imul
sub
push
or
pop
es
push
dec
js
push
sbb
push
or
dec
cmp
mov
leave
xor
cdq
popa
sub
fnsave
push
(bad)
lods
cmpxchg
xlat
push
push
mov
mov
and
sbb
mov
pusha
test
sbb
jo
pusha
push
cmp
lock
mov
jb
enter
inc
lods
dec
add
cmp
shl
cli
push
jbe
cmp
jge
add
aaa
sub
dec
ins
push
push
xchg
mov
inc
add
call
and
push
rcr
cmp
mov
mov
cmp
and
hlt
int3
ss
inc
test
jo
add
xlat
and
add
clc
or
mov
add
mov
fs
adc
repnz
sbb
and
cmp
inc
test
dec
push
xor
aaa
sbb
mov
dec
push
or
xchg
adc
or
add
lds
mov
ins
push
cmp
xlat
or
ja
enter
xchg
xchg
(bad)
in
es
cmp
xlat
cmps
mov
xor
or
jno
lahf
pop
pop
inc
aaa
pop
or
push
imul
or
aam
push
jae
adc
sbb
(bad)
in
mov
pop
pop
pop
int
pop
cmp
mov
pop
(bad)
rcr
arpl
es
retf
ffree
gs
leave
jno
lds
push
call
adc
mov
xchg
pop
push
sub
popf
xchg
mov
dec
and
call
xor
fimul
ficomp
pop
loopne
sbb
sbb
adc
xchg
daa
in
or
call
fcomip
(bad)
int3
fimul
push
sar
sahf
mov
sbb
mov
out
mov
aam
mov
imul
call
fcmovbe
or
fwait
mov
aaa
cli
jb
imul
sub
inc
ret
mov
mov
sbb
cmp
and
mov
mov
in
inc
mov
jp
pop
xor
lea
pushf
(bad)
mov
add
adc
mov
and
xor
in
adc
pop
mov
xor
push
inc
gs
rcl
dec
ins
dec
in
push
pcmpgtb
and
sbb
mov
xchg
pop
mov
ret
retf
je
adc
mov
test
call
push
ss
mov
sub
fistp
scas
das
inc
int
add
add
imul
push
test
fisub
ss
push
dec
loopne
pop
(bad)
cmp
jecxz
(bad)
mov
pusha
add
popa
or
call
outs
jnp
or
leave
mov
sbb
mov
mov
sar
inc
js
inc
push
ins
adc
push
inc
mov
or
test
lods
jmp
xchg
das
mov
lods
push
push
sbb
or
outs
push
mov
loop
mov
pop
and
sbb
xor
leave
push
fst
retf
inc
xchg
jnp
sbb
xor
adc
pop
add
xadd
push
sub
cdq
(bad)
mov
adc
sbb
xlat
push
sub
add
jg
gs
or
adc
retf
mov
fmul
ror
pop
or
or
aas
pop
inc
ins
hlt
adc
aas
lds
or
ret
arpl
and
test
adc
sbb
test
jae
dec
cld
push
xor
rcr
fnsave
xchg
ret
popf
imul
lahf
cmps
add
mov
sub
clc
in
add
push
or
pop
push
(bad)
add
jmp
add
push
in
xor
rcr
mov
or
pop
ret
jle
mov
inc
mov
sbb
shl
inc
jbe
repz
jns
and
pop
adc
or
dec
dec
ss
iret
inc
mov
aas
mov
mov
retf
in
mov
mov
pushf
sbb
inc
sub
bound
inc
test
pop
shl
icebp
aad
mov
push
and
add
cmp
cwde
lods
and
push
mov
pop
inc
lods
test
push
pusha
or
cmp
inc
push
in
fldenv
add
ins
mov
or
cld
pop
xchg
xor
mov
ror
loopne
inc
imul
push
push
fwait
cs
mov
and
and
mov
dec
xor
lea
add
arpl
and
pop
cli
or
ja
cmp
add
and
lea
adc
add
mov
dec
ret
sub
(bad)
sbb
popf
and
mov
add
push
mov
cwde
lea
add
jb
and
adc
fimul
int3
arpl
std
xor
mov
sub
mov
cmp
gs
or
fs
cwde
and
cmp
outs
cwde
int
je
lea
xchg
xor
outs
mov
daa
hlt
enter
sub
cmp
popa
jnp
mov
sbb
adc
push
loopne
in
push
sub
sub
pop
sbb
pop
cmp
jno
dec
pop
mov
adc
int3
dec
mul
mov
and
mov
and
ror
rol
cmp
fistp
es
jmp
dec
add
inc
xor
nop
cmp
mov
inc
js
hlt
sbb
or
das
dec
sub
and
and
jns
sub
icebp
sub
sbb
lods
ret
push
push
lahf
dec
and
add
cmps
nop
xor
add
cdq
stos
std
inc
call
movs
jl
add
fs
mov
push
or
cmps
adc
sub
sub
jne
mov
aad
or
gs
mov
hlt
add
ins
or
mov
test
imul
cs
sub
pop
push
nop
and
sub
test
add
and
jmp
inc
cmp
add
pop
cmp
push
dec
loop
or
inc
movs
dec
retf
or
ret
or
inc
mov
adc
dec
add
ret
les
mov
adc
(bad)
and
xchg
dec
fdivr
dec
push
mov
or
das
pop
and
ret
ret
pop
test
ret
adc
ficomp
js
daa
jp
nop
sbb
or
adc
adc
maxps
aas
les
inc
mov
xchg
push
pop
jl
lods
sbb
push
test
or
je
(bad)
mov
dec
adc
add
add
pop
add
sbb
retf
push
and
stos
sbb
jo
mov
leave
add
sub
test
adc
pusha
popa
mov
dec
inc
(bad)
xchg
jl
mov
mov
xor
mov
ins
or
add
in
js
adc
mov
dec
movs
test
pop
push
and
sbb
(bad)
es
sub
mov
cmp
add
xor
xchg
in
inc
and
pop
psubw
pop
add
mov
or
outs
cmp
mov
(bad)
aaa
movs
mov
or
cld
push
and
rcl
mov
dec
mov
ins
jmp
mov
jns
js
dec
js
(bad)
mov
adc
jno
adc
in
(bad)
mov
clc
add
xchg
inc
cld
dec
fsub
out
and
and
jne
lea
sbb
xchg
push
fsubr
xchg
retf
push
pop
es
inc
jecxz
or
mov
and
popf
pop
push
pop
cmp
or
sub
mov
push
push
jne
aaa
xchg
add
sbb
and
sbb
outs
jmp
ret
(bad)
jmp
sbb
call
ins
ss
dec
enter
add
and
fmul
mov
cmp
and
(bad)
popa
scas
out
xor
add
jo
dec
loop
fcomp
or
icebp
adc
mul
aaa
rcr
inc
ds
test
dec
inc
mov
fwait
cs
pop
dec
les
adc
imul
pop
cmp
cmp
icebp
adc
loope
inc
out
xchg
cmp
sub
arpl
sub
sub
inc
cmps
test
sbb
jmp
mov
or
mov
fcom
jo
push
push
add
lea
jmp
mov
pop
jl
shl
sahf
dec
inc
inc
sbb
push
adc
lea
add
mov
push
pop
ret
xchg
pop
cmps
cmp
xchg
pusha
cwde
mov
(bad)
cmp
fisub
mov
bswap
xchg
jae
ror
movs
mov
and
add
and
in
sbb
sub
data16
ror
dec
into
movs
or
push
adc
inc
pop
add
loopne
xor
cmp
mov
xchg
adc
mov
cmp
add
push
or
add
xor
(bad)
std
jne
hlt
movs
dec
jno
or
cmps
mov
or
imul
jno
mov
neg
mov
xchg
dec
and
mov
shl
or
test
test
test
and
ins
(bad)
mov
push
add
arpl
lods
pop
pop
push
jns
mov
dec
out
std
(bad)
neg
or
jge
inc
dec
push
out
add
imul
ror
push
dec
xchg
inc
sbb
dec
cmps
mov
dec
push
inc
cmps
add
mov
les
xor
test
add
movs
mov
cmps
loopne
push
inc
mov
movs
jno
ret
inc
and
sahf
or
sahf
and
cs
sub
adc
das
js
pop
inc
push
ss
fcomp
xor
dec
and
lods
popa
cld
inc
in
mov
rol
add
mov
inc
xchg
xor
inc
sbb
cmp
ja
mov
jbe
mov
and
rcr
and
ds
aaa
and
test
xor
mov
sbb
or
sahf
mov
add
push
and
cmps
pop
pop
frstor
mov
retf
pop
cmps
mov
or
push
movs
sbb
jnp
stos
add
jmp
call
pop
mov
mov
outs
mov
or
push
cmp
inc
cmp
sbb
in
adc
cmps
(bad)
(bad)
rol
add
popa
mov
mov
enter
push
cmp
push
fwait
cs
add
clc
scas
jmp
je
adc
sahf
das
or
cmp
add
pop
cmp
lahf
out
ins
pop
pop
cwde
inc
xchg
push
pop
xor
es
add
inc
cmps
dec
call
sbb
mov
movs
inc
scas
imul
cmp
aad
sbb
fs
int
push
mov
and
xchg
rcl
loop
add
mov
and
imul
push
push
and
mov
rol
mov
jo
fs
ror
mov
test
and
repnz
loopne
mov
sbb
(bad)
cli
and
ins
mov
pop
sar
lock
into
test
add
pushf
fstp
jne
ja
sub
push
add
add
and
cld
into
mov
and
cmp
push
push
sbb
or
repz
pop
add
psubusw
(bad)
out
xlat
mov
cmp
fcmovnb
dec
cmps
sub
(bad)
sti
enter
cmp
lods
jmp
pop
add
test
movs
pop
mov
ret
or
lock
test
mov
cmp
sahf
ja
push
push
push
jne
jge
sub
js
inc
std
add
sbb
aas
sub
or
std
mov
(bad)
xor
xor
push
push
mov
push
(bad)
adc
xor
ja
and
sbb
enter
adc
sbb
adc
gs
les
movs
push
inc
add
test
sub
adc
popa
or
push
xor
cli
sub
movsx
sub
mov
xor
mov
pop
sub
xchg
lods
jge
or
int3
ins
into
dec
movs
sub
data16
sub
movs
ficomp
jecxz
push
xchg
out
inc
pop
or
sub
aas
fwait
mov
lea
inc
mov
sub
push
ins
or
test
xor
xor
outs
fwait
or
icebp
je
mov
push
or
dec
and
push
cmp
and
and
xchg
cli
sub
xchg
or
xchg
jno
cmc
pop
mov
sub
dec
fs
sub
call
mov
inc
xor
jl
cmp
mov
or
add
fld
jl
sbb
mov
sbb
dec
dec
and
or
cmps
xor
mov
mov
dec
sub
mov
push
pop
add
mov
sub
mov
cmp
push
sti
js
push
popa
xor
nop
nop
rol
clc
adc
sub
cmp
xchg
hlt
push
and
call
and
pop
test
fwait
cmps
inc
dec
loope
out
mov
cli
pop
cmp
and
loopne
imul
inc
rcr
and
push
mov
nop
repz
call
rol
outs
mov
mov
jl
cmp
mov
inc
loopne
push
pusha
popa
out
sub
call
and
jb
cmps
out
es
adc
pop
push
cs
jne
xor
imul
cld
add
and
pop
movs
push
xchg
sbb
sti
jmp
pop
cmp
push
add
pusha
mov
loop
les
push
pop
jae
mov
imul
sbb
xor
inc
sub
xor
push
inc
jmp
or
jae
or
mov
into
in
add
inc
push
sbb
sahf
shl
push
push
jns
test
push
repnz
and
test
pop
jb
cs
rcl
push
in
cmps
sbb
stc
int
dec
adc
adc
push
and
je
cmp
cs
sbb
fist
xor
sub
add
pop
fsubr
jmp
xlat
aaa
shl
sub
imul
adc
aas
push
push
and
adc
mov
and
xchg
test
cmp
popf
inc
sbb
movs
test
push
cmp
inc
mov
lahf
sub
sbb
jo
lock
das
or
inc
rol
push
jge
(bad)
cmp
adc
aas
hlt
cmp
inc
iret
mov
rcr
jle
adc
in
cmp
imul
jmp
push
adc
(bad)
inc
retf
ins
inc
retf
mov
pop
jge
mov
dec
(bad)
adc
add
mov
movs
dec
sub
jb
or
dec
mov
int3
into
pusha
ret
and
ins
pop
add
fistp
in
fs
xor
dec
call
sbb
pop
shr
push
push
mov
mov
inc
je
inc
ins
xchg
jle
mov
mov
pop
fwait
addr16
test
jle
inc
aad
jg
push
rcr
pop
jo
dec
jecxz
or
repnz
inc
fwait
les
jle
popa
or
mov
sbb
xchg
mov
rcl
call
mov
(bad)
jg
lock
pop
cmp
adc
sub
test
xor
push
push
test
icebp
jmp
mov
or
sti
lahf
xchg
dec
ret
jmp
cmp
je
jne
in
test
mov
inc
pop
cmp
sbb
cmps
ret
or
loop
sbb
arpl
fbld
and
jle
and
mov
addr16
jmp
outs
and
jmp
adc
dec
push
pushf
or
sub
ret
or
in
call
aas
and
lea
nop
xor
mov
jle
adc
(bad)
fwait
inc
or
outs
cmp
pop
dec
cmps
sbb
jo
bound
je
mov
mov
adc
inc
neg
xor
in
inc
pop
test
or
mov
push
sbb
cmp
leave
fadd
nop
aam
imul
adc
mov
and
cmp
(bad)
les
push
adc
test
mov
sub
dec
push
mov
xor
shr
sahf
or
dec
bound
cmp
js
adc
pop
and
movs
mov
push
out
sbb
adc
cld
scas
lea
jge
popa
or
in
ror
rol
cmp
adc
test
add
add
xor
dec
mov
mov
imul
jnp
push
add
jo
or
cmp
jns
add
loop
ins
fcomp
dec
mov
add
popa
push
stos
(bad)
cmp
(bad)
cmp
daa
ja
sbb
inc
xchg
jae
xor
movs
adc
push
test
dec
adc
je
fcomp
mov
sar
xchg
out
pop
cmp
mov
adc
and
sbb
dec
sysenter
or
xor
or
sbb
lock
popf
and
movs
ret
mov
inc
test
sub
sbb
cmp
neg
jle
pop
add
jne
or
dec
enter
pop
cld
popf
std
ds
push
rol
jns
fild
rol
jo
loopne
stc
push
sub
mov
cmps
mov
jmp
or
sub
mov
cmp
sub
ret
push
add
inc
pop
shl
retf
push
fadd
or
xchg
jno
mov
dec
ret
ins
ret
pop
jb
mov
in
dec
mov
or
push
scas
rcl
int3
test
movs
mov
enter
sti
pop
sbb
sbb
cdq
dec
enter
mov
outs
loopne
(bad)
and
adc
cmp
popf
call
imul
mov
adc
hlt
rcr
pusha
mov
inc
jmp
fisubr
pop
hlt
jecxz
pusha
call
call
push
lock
mov
jns
into
test
sbb
mov
xor
aaa
or
jo
or
stc
jmp
push
adc
add
scas
sub
test
lea
daa
dec
out
xor
add
clc
sbb
push
xchg
add
dec
ret
and
xchg
adc
mov
ret
loopne
adc
loope
or
xchg
add
fimul
mov
mov
shl
sub
dec
add
pop
call
fucomi
push
inc
mov
push
inc
push
movs
push
dec
js
cmp
push
lea
jmp
sub
lahf
sbb
retf
jle
test
mov
mov
lea
sub
jg
inc
add
jnp
mov
fmul
and
xchg
mov
mov
pop
lods
jge
sub
ret
dec
and
push
dec
retf
inc
cmps
je
ret
sti
enter
xchg
push
mov
push
dec
cli
pop
loopne
xor
inc
jp
adc
add
push
pop
sub
pusha
xchg
and
lea
push
lods
pop
dec
inc
movs
movs
ret
fst
mov
adc
fwait
ins
arpl
push
shl
xlat
adc
loop
leave
adc
push
sub
stos
je
movs
mov
mov
dec
push
adc
test
dec
call
jle
ds
push
iret
adc
xchg
gs
dec
or
retf
xchg
mov
cwde
xchg
mov
add
cli
mov
adc
pop
test
lea
sub
test
mov
daa
or
mov
cs
xlat
nop
dec
call
add
mov
pop
add
add
int
sbb
jge
loopne
push
popa
jl
push
and
cmps
test
inc
aam
in
js
and
add
aam
mov
add
pop
loopne
bound
sub
dec
jge
and
inc
or
and
mov
aaa
xor
mov
les
out
js
add
fs
mov
and
xchg
imul
push
adc
and
and
cmps
mov
rol
ret
or
imul
xchg
cmps
sub
ins
adc
mov
sbb
rol
je
pop
mov
daa
loopne
out
and
adc
jb
adc
loop
pop
enter
jg
ins
int3
adc
and
fld
sub
pusha
cmps
push
mov
adc
in
and
xor
dec
inc
jnp
test
and
mov
mov
test
stos
jmp
mov
lods
and
adc
push
and
jnp
push
xchg
cmp
sub
add
cmp
lods
adc
adc
sub
mov
call
loopne
stos
push
mov
pop
jmp
test
push
sub
cwde
add
nop
test
fcmovnbe
pop
sub
fs
repz
leave
or
sub
nop
sub
retf
aam
mov
xchg
mov
xchg
sbb
imul
add
idiv
stc
sbb
movs
lods
fist
jecxz
or
fld
es
sbb
and
or
xor
sbb
inc
pop
xchg
js
sbb
ja
jle
xchg
add
(bad)
jo
xlat
xchg
ins
loop
xchg
popf
or
add
and
adc
jmp
cmp
mov
sbb
rcl
adc
ror
rol
int
and
cmp
push
push
mov
pop
inc
rcr
sub
ins
sub
stc
add
adc
fnstcw
ror
nop
inc
out
arpl
and
or
cmp
xchg
xchg
repz
mov
cmp
mov
ja
xchg
and
sub
idiv
dec
pop
mov
jmp
shl
test
imul
and
sbb
dec
adc
loopne
adc
dec
inc
cmps
retf
xchg
push
stos
push
adc
sbb
sub
rcl
adc
mov
(bad)
mov
sbb
je
cmps
adc
out
cmps
dec
mov
imul
mov
push
inc
rcl
cmp
dec
popw
stos
lahf
push
les
(bad)
jns
cmp
mov
ss
psubsw
inc
push
out
(bad)
aad
xor
cwde
jbe
mov
mov
popa
mov
les
or
ins
sub
add
outs
nop
xchg
xchg
jmp
(bad)
int3
push
push
pop
mov
adc
xchg
les
movs
add
dec
gs
inc
leave
adc
out
out
pusha
nop
bound
inc
push
(bad)
sbb
lock
lods
sbb
push
push
or
push
nop
in
test
and
sub
cmp
cmp
or
or
cmp
add
inc
xor
inc
add
mov
dec
pusha
pusha
sub
les
or
xchg
enter
iret
push
aam
cmp
rcl
pop
rcl
lahf
push
pop
jnp
es
je
dec
and
adc
add
sub
sbb
sub
add
inc
sub
ret
push
mov
and
inc
lds
adc
and
sbb
xchg
add
mov
addr16
pop
dec
loopne
xchg
lds
sahf
xor
xchg
ins
add
mov
stos
sub
mov
popa
push
or
mov
xor
pop
sbb
pop
push
sub
jg
adc
mov
ret
push
mov
adc
out
add
fdiv
mov
into
cmps
cli
rsqrtps
add
adc
and
cdq
shl
add
fdiv
js
popa
arpl
mov
sub
inc
xlat
fistp
push
fmul
cmp
lahf
dec
jne
(bad)
cs
ret
add
or
or
jle
sub
add
xor
cli
cmp
pushf
sbb
mov
or
rcl
xor
push
inc
and
rol
adc
sub
cmps
sub
imul
xchg
mov
pop
xchg
ss
es
dec
mov
mov
xchg
rcr
movs
pop
mov
push
push
jecxz
fnsave
cmps
xchg
cmp
mov
les
and
fiadd
cmps
jne
shl
daa
bound
add
add
and
iret
push
call
push
popa
push
mov
jne
sbb
pop
leave
push
push
sbb
mov
pop
sub
push
les
jo
push
mov
pop
sub
or
inc
adc
sahf
mov
or
push
inc
push
pop
adc
fcom
pop
jno
add
stos
push
and
mov
call
movs
xchg
mov
lds
ja
xor
icebp
in
cmp
pushf
sub
fiadd
out
inc
or
outs
jmp
xor
add
inc
cmp
imul
rol
adc
pop
mov
push
pusha
das
adc
sub
or
dec
xor
ins
shl
dec
ret
xchg
fild
xchg
mov
dec
inc
dec
popf
(bad)
or
jbe
imul
je
mov
add
rcr
fsub
inc
sub
add
mov
add
sub
(bad)
test
popf
cmc
pop
dec
bound
inc
dec
inc
(bad)
fiadd
dec
inc
sete
add
add
dec
bound
pusha
es
pop
jmp
mov
ja
les
cmps
aaa
sbb
cmp
movs
inc
arpl
mov
add
sbb
mov
pop
movs
inc
and
or
gs
bound
fwait
imul
inc
inc
aam
test
mov
loopne
pushf
in
mov
sub
dec
movs
push
daa
and
rcl
nop
cmp
xchg
std
call
test
int3
mov
fs
or
cmp
inc
push
xor
jl
inc
mov
and
int
adc
gs
sub
dec
sbb
dec
jo
jae
push
mov
loopne
nop
in
push
pop
adc
mov
pop
lahf
addr16
push
popf
mov
les
fnstenv
and
rcr
push
stc
outs
adc
adc
add
in
push
cmp
mov
inc
push
(bad)
mov
ror
dec
cmp
or
sub
mov
dec
xchg
clc
or
lock
test
test
ret
xor
sub
das
sub
sub
sbb
or
mov
cdq
add
mov
add
add
mov
sub
pop
(bad)
popf
xor
mov
mov
mov
gs
adc
ret
add
inc
cmp
fsub
jb
sub
ds
jno
cmps
jb
sub
push
sbb
add
in
and
dec
add
jl
jmp
pop
mov
call
mov
rcr
dec
lds
or
cmp
push
dec
pop
dec
arpl
imul
movs
mov
outs
mov
stos
mov
ficomp
mov
adc
sub
cs
hlt
xor
inc
or
imul
pushf
mov
and
dec
cmp
movs
mov
adc
lods
shl
lea
jge
dec
dec
push
(bad)
jl
and
xor
add
out
daa
or
std
js
jg
adc
dec
inc
push
cmp
mov
dec
adc
hlt
adc
cmc
dec
or
rcl
pop
adc
dec
cs
hlt
shl
pop
jnp
pop
xor
xchg
cmp
jo
js
and
add
ins
arpl
xchg
inc
or
jmp
jmp
in
add
jmp
add
test
dec
sub
dec
jg
daa
jnp
shr
cmp
fldcw
call
je
sahf
hlt
jae
add
push
xor
faddp
and
popa
inc
sbb
aam
das
sub
mov
add
icebp
and
jle
mov
inc
push
and
pop
add
daa
nop
into
mov
or
test
loopne
cmp
add
mul
das
ret
les
loop
out
mul
cmps
mov
sbb
outs
cmp
(bad)
aaa
and
lods
sbb
sbb
outs
mov
call
and
and
add
inc
scas
jmp
loop
ret
mov
nop
iret
push
scas
xor
test
add
scas
sbb
sub
repnz
sub
or
pusha
imul
jge
jl
ss
add
hlt
(bad)
ror
movs
in
cmp
sti
ret
mov
ins
in
push
inc
mov
mov
mov
adc
sbb
adc
movs
adc
add
cmp
ja
mov
mov
mov
in
outs
add
sbb
(bad)
cmp
and
xchg
mov
and
lock
xchg
movs
push
add
mov
in
cmp
into
ret
mov
shl
add
cmp
fmulp
into
sbb
push
aam
jbe
lods
and
push
pop
mov
xchg
in
push
je
push
gs
nop
push
push
adc
aam
ss
mov
pop
xchg
xchg
or
jle
xchg
mov
jle
xchg
xchg
mov
std
mov
call
cmp
nop
enter
or
jne
std
js
in
in
and
ins
push
retf
mov
pusha
lods
adc
rol
xor
jno
inc
xchg
sbb
fbld
and
shl
movs
and
xor
push
movs
adc
push
push
or
outs
jmp
cmps
or
fisub
inc
adc
lods
jg
mov
inc
pop
ins
test
call
loop
inc
mov
shl
jmp
adc
jmp
das
popa
cmp
add
mov
and
push
add
lock
(bad)
iret
add
div
fstp
inc
movs
add
adc
dec
add
xor
mov
aam
nop
ror
test
mov
es
lahf
aam
dec
mov
inc
cld
ja
fcom
inc
jno
jge
arpl
stc
popa
xor
(bad)
xlat
loop
or
je
mov
repz
repz
mov
pop
sub
jge
inc
ins
jg
ror
add
adc
xchg
test
out
mov
sub
mov
test
outs
dec
ret
add
adc
add
jae
stos
cmc
and
xor
xor
repnz
ds
dec
add
or
push
dec
add
pusha
mov
sbb
fst
xor
inc
push
jmp
adc
aas
xlat
loop
add
push
mov
xchg
icebp
adc
jae
nop
dec
ret
mul
(bad)
cmp
repz
jno
cmp
or
cmp
pop
inc
sub
push
sub
dec
lea
push
test
adc
add
lock
lods
inc
int3
and
cli
push
js
hlt
add
hlt
push
in
cmp
jge
fs
inc
loope
not
mov
lock
rol
test
dec
inc
stos
inc
adc
mov
pop
push
mov
loopne
rcl
(bad)
mov
adc
push
cmp
add
test
pop
jg
push
jnp
push
jb
jo
mov
mov
mov
and
shl
or
enter
sahf
add
les
cmc
and
mov
lods
xor
fist
push
adc
lods
sar
mov
sbb
in
pop
inc
xor
mov
sbb
lods
ror
pop
pop
cmp
(bad)
setp
outs
int3
retf
mov
pop
adc
cmc
adc
push
mov
push
gs
test
fdiv
cs
xor
sti
fcmove
gs
retf
pop
sbb
xor
les
xor
test
outs
and
sub
imul
xor
cmc
sub
cwde
and
adc
add
clc
mov
mov
mov
mov
retf
in
cs
push
or
mov
inc
inc
jb
cmp
mov
adc
adc
push
or
and
fsubr
mov
mov
scas
adc
dec
aad
pop
(bad)
sbb
xor
cs
sbb
sbb
sbb
inc
ret
leave
push
push
xchg
retf
push
add
dec
jge
add
sar
pop
cmp
xor
addr16
(bad)
jecxz
add
add
mov
mov
and
dec
add
or
adc
mov
jle
call
popa
jge
xchg
cmp
xor
dec
dec
cmp
cmp
push
and
rcl
push
cmp
xor
or
add
xor
push
je
loopne
pop
loope
xchg
sbb
leave
cld
xchg
dec
push
pushf
sahf
cwde
js
push
ret
out
dec
popa
dec
addr16
jno
or
xor
sbb
or
sub
dec
dec
mov
push
mov
je
or
dec
inc
imul
fst
imul
leave
fstp
inc
(bad)
sti
push
inc
rcl
not
and
mov
mov
pop
mov
or
or
dec
retf
add
pop
shr
sub
jo
ret
rcl
pop
jo
cld
mov
mov
test
jnp
cmp
jns
in
nop
movs
es
mov
add
rcl
sahf
out
mov
sbb
or
loope
jne
int
push
lea
or
js
xor
outs
ret
inc
bound
sbb
xchg
jae
fiadd
mov
add
cwde
inc
ror
adc
pop
or
(bad)
cdq
sbb
jl
sar
rol
xchg
mov
dec
cmp
test
clc
mov
out
and
test
sbb
inc
cmp
add
rcl
mov
shl
xor
jge
out
push
(bad)
add
sub
gs
mov
push
pop
pop
dec
push
nop
mov
dec
push
mov
add
dec
push
and
xacquire
stc
pop
or
jl
push
shr
test
xor
inc
mov
adc
ficom
mov
push
dec
sysenter
jmp
popf
rol
clc
sub
push
adc
inc
enter
xchg
cs
add
pushf
sub
cmp
dec
pushf
jle
add
pop
aam
lahf
push
or
cmp
mov
add
ss
add
std
(bad)
jmp
pop
mov
lods
retf
call
loope
pop
adc
dec
lahf
push
test
mov
mov
push
sub
in
mov
aam
adc
fs
pop
push
ss
retf
clc
sub
call
pop
adc
pop
pop
adc
xlat
adc
xor
fst
pushw
xchg
pusha
add
shl
inc
lock
rcr
xchg
test
mov
push
adc
shr
add
or
(bad)
sub
fldcw
add
cmps
xor
dec
or
sbb
mov
es
gs
xchg
iret
add
dec
mov
loope
add
icebp
inc
loopne
push
push
call
cmc
or
daa
(bad)
or
and
xor
stc
add
add
sbb
jmp
inc
mov
mov
or
imul
add
adc
in
cmp
ja
mov
cs
add
cs
add
data16
mov
or
ins
dec
jmp
sbb
je
dec
or
retf
and
pop
shr
xor
pop
xor
jne
sbb
jmp
push
and
int3
dec
cmp
aad
(bad)
pop
inc
test
call
cmp
rol
pop
cmp
xchg
aam
ret
push
cmp
dec
fnstenv
sbb
xchg
inc
dec
test
dec
xchg
ror
(bad)
cmc
xchg
mov
(bad)
and
dec
push
adc
inc
sar
out
retf
sbb
mov
sbb
aas
sbb
imul
pusha
das
loop
cmp
push
ss
adc
push
ins
adc
stc
push
push
add
sbb
mov
sbb
int3
shl
push
inc
inc
xchg
add
test
mov
add
enter
pop
jo
retf
pop
mov
inc
or
cwde
leave
dec
sub
pop
fimul
test
mov
mov
push
inc
call
out
out
adc
mov
jp
rcr
shr
movs
jp
mov
loope
pop
fneni(8087
das
pop
pop
mov
cmp
jg
lea
call
push
xchg
mov
arpl
loop
adc
mov
test
jl
dec
sbb
mov
pop
outs
dec
mov
add
push
imul
mov
xor
je
les
jmp
dec
std
lock
add
inc
dec
mov
xor
xchg
jecxz
dec
or
add
mov
and
cmp
lods
sbb
lods
cmp
sbb
retf
and
aad
or
iret
lds
hlt
jmp
and
add
(bad)
xchg
sub
cmp
inc
jae
jmp
fistp
outs
push
sbb
cli
push
rol
cmp
sub
imul
xchg
sbb
(bad)
push
rol
dec
lods
xor
or
sbb
mov
and
adc
sbb
push
ja
shr
rcl
popf
and
jbe
call
cli
mov
lock
ret
sti
jmp
into
ret
mov
push
mov
jmp
add
pop
loop
rol
and
pushf
and
mov
imul
pop
push
add
push
leave
add
ror
je
add
mov
outs
pushf
add
rcl
loope
xor
ror
and
dec
add
and
push
es
stc
dec
add
or
bound
cdq
or
or
and
sub
jmp
and
xchg
inc
jge
popa
imul
mov
add
add
or
inc
(bad)
jnp
push
dec
jecxz
movs
lea
adc
push
xchg
popa
adc
add
push
and
inc
cld
xchg
and
test
xchg
mov
xor
scas
sbb
and
inc
pushf
adc
or
push
pop
and
xor
jne
out
cdq
push
repz
xchg
dec
cmps
movs
xchg
loopne
loope
add
fsub
xor
ret
mov
push
push
jl
push
mov
jns
jne
push
dec
sbb
mov
test
jne
and
xchg
mov
mov
and
and
sub
xchg
retf
enter
fild
add
add
imul
adc
and
cmp
or
jl
push
cld
xor
rol
rcr
scas
mov
mov
mov
or
out
pop
xchg
fisub
push
mov
jno
ins
daa
inc
bound
rol
push
jbe
rcr
(bad)
and
aam
scas
push
mov
daa
lock
sub
fisttp
mov
adc
das
mov
fs
sub
cmp
sahf
dec
adc
out
and
test
inc
jg
test
outs
jmp
cmp
fs
mov
pop
mov
rcl
lahf
test
jne
sub
aad
mov
pop
push
mov
les
sbb
mov
dec
sub
in
add
in
add
dec
xchg
lea
imul
test
ror
retf
adc
inc
loopne
adc
mov
fwait
xor
jecxz
shl
je
clc
and
add
or
and
inc
or
or
imul
adc
daa
test
pop
rcr
adc
jmp
sub
aam
xor
adc
adc
dec
dec
iret
sahf
out
inc
add
inc
or
mov
mov
dec
inc
adc
loop
push
ins
push
pop
pop
inc
ret
add
add
test
or
mov
push
mov
sbb
and
jg
sbb
fs
xlat
ds
inc
cmp
or
adc
(bad)
push
xchg
pop
stos
adc
mov
pop
fild
dec
jne
inc
push
rcl
retf
xor
cs
or
or
add
cmp
stc
mov
adc
push
sub
test
adc
or
dec
ret
mov
inc
push
mov
cli
push
(bad)
mov
mov
pop
gs
fwait
aam
inc
icebp
add
adc
push
push
xor
dec
mov
sub
enter
lods
mov
nop
add
inc
outs
or
inc
adc
popa
xor
cmps
pop
jge
sar
ins
test
inc
jmp
lock
cdq
push
stos
sbb
lods
ins
daa
add
enter
pusha
jns
mov
mov
neg
ins
or
cmp
ror
mov
outs
sub
jne
and
movs
fisttp
sub
adc
and
rcl
enter
lea
mov
mov
pop
and
xchg
nop
mov
push
mov
mov
rcl
jnp
aaa
vpaddsb
js
add
push
jl
mov
sbb
outs
(bad)
(bad)
adc
jl
sub
adc
xor
inc
loop
mov
cmp
mov
leave
call
nop
or
outs
jne
or
xchg
dec
sub
add
push
nop
scas
add
sbb
(bad)
mov
jmp
pop
es
ret
or
imul
sbb
push
push
inc
loop
push
fst
mov
inc
stos
push
div
adc
or
or
movlps
push
mov
outs
add
call
sbb
adc
jge
add
lock
sbb
or
lea
xchg
lock
int
pop
sbb
add
adc
xor
jp
popa
shl
sbb
or
pop
push
inc
jae
pop
rol
sub
popa
add
rol
jns
loopne
cmp
mov
inc
mov
mov
adc
arpl
xor
in
fwait
and
xor
shl
ficom
sub
adc
pop
push
push
dec
sub
pusha
sub
mov
adc
add
push
in
mov
push
out
movs
sbb
xor
cmp
mov
adc
mov
adc
or
adc
cmp
push
inc
test
xor
push
add
pop
push
and
in
mov
test
shl
cmp
push
sahf
sbb
push
lods
aaa
test
push
add
lock
mov
push
or
adc
and
jmp
jo
add
sar
enter
xor
icebp
cmps
sbb
cmp
and
adc
and
call
adc
cmp
retf
adc
push
ds
push
ds
or
inc
adc
lahf
jmp
add
push
push
gs
mov
and
dec
jae
inc
or
xor
jle
rcl
pop
ret
cdq
inc
in
fadd
add
rol
out
jge
loopne
mov
sahf
and
in
xchg
add
inc
or
in
ss
lock
test
add
stos
inc
sub
das
dec
fcomi
neg
stos
mov
inc
int3
pop
lods
cmps
in
gs
sbb
mov
sub
inc
sub
mov
add
mov
xor
jno
pop
sub
test
scas
inc
mov
(bad)
pop
mov
mov
lds
dec
dec
or
push
mov
pop
sbb
push
or
cmp
imul
adc
or
inc
les
test
mov
and
out
shl
push
mov
push
jmp
call
mov
or
in
add
cld
dec
jnp
rcr
lods
sub
mov
pop
cmp
jnp
push
fistp
loopne
jmp
out
or
add
loopne
adc
fidivr
mov
xor
and
js
call
push
das
jo
pop
inc
sub
inc
rcr
push
je
sub
addr16
ins
outs
mov
pop
sbb
push
add
cmp
jmp
add
sub
nop
sub
adc
fs
test
mov
dec
or
pushf
and
sub
cdq
aas
xor
cmp
adc
mov
add
adc
and
xchg
xchg
xlat
dec
mov
xchg
pop
inc
loop
push
jle
sbb
(bad)
jae
add
push
nop
cwde
retf
mov
test
nop
or
cmp
push
(bad)
test
js
test
lods
and
arpl
mov
sbb
xchg
push
push
jmp
(bad)
pop
js
nop
ror
push
jmp
cwde
adc
aam
ds
mov
sbb
je
inc
loope
sbb
and
mov
or
int
adc
or
and
sub
pop
dec
lds
pop
test
lock
sbb
sub
cwde
cdq
or
mov
pop
xor
push
mov
retf
dec
xchg
stos
in
add
push
in
sub
inc
jnp
mov
das
xchg
lock
dec
jl
cdq
imul
sub
in
sbb
fisub
and
rcl
mov
sub
call
(bad)
hlt
in
push
dec
gs
hlt
in
in
fwait
and
dec
fadd
sbb
clc
jl
push
sub
adc
add
rcl
inc
or
mov
aas
lea
out
or
paddw
sub
dec
cmp
xor
push
pop
ds
(bad)
pushf
lods
cmp
mov
es
adc
rcr
fimul
jmp
cmps
test
mov
jp
mov
test
outs
retf
imul
loop
jge
add
ret
xchg
jmp
in
scas
fadd
pop
inc
jns
inc
jns
jp
xor
imul
sub
rol
add
loope
movs
jbe
jecxz
add
vmread
add
(bad)
jmp
xor
mov
or
xor
outs
cmps
inc
das
sbb
and
ins
sub
sub
int3
or
cmps
lea
mov
pop
xchg
pop
ja
enter
or
and
leave
add
push
fwait
dec
xor
or
clc
and
fsubr
or
mov
adc
fdiv
dec
stos
ret
sahf
add
mov
add
jmp
jecxz
mov
mov
adc
int3
mov
or
adc
add
jae
or
and
pop
js
pop
cli
hlt
push
iret
and
add
adc
push
in
or
inc
jne
add
cmp
or
lea
cmp
xchg
pop
int3
add
add
int
add
inc
jge
inc
loope
cmp
push
jp
add
xchg
xor
in
sub
test
pop
cmp
xchg
or
jbe
dec
xchg
leave
xchg
sub
xchg
in
aam
sub
mov
js
pushf
pop
and
test
arpl
add
inc
movs
imul
add
(bad)
xor
mov
xchg
mov
dec
retf
shl
xlat
xlat
fnstenv
arpl
cmp
jno
push
pusha
push
retf
in
mov
leave
in
mov
xchg
loopne
lea
hlt
inc
popa
stc
add
ins
int3
dec
mov
add
jle
adc
and
inc
xlat
jl
out
aam
dec
pop
and
jmp
lock
and
mov
xchg
sbb
or
jbe
test
jne
xor
in
in
in
and
mov
sbb
in
hlt
in
aam
fst
call
push
test
add
inc
(bad)
cmp
and
push
fdiv
or
fsub
add
cmp
nop
cmp
adc
lock
sub
cwde
in
push
jp
adc
xchg
inc
clc
pop
push
cwde
mov
call
or
push
loop
push
mov
bound
retf
inc
pop
into
jae
and
out
mov
and
pop
add
int3
adc
fucom
pop
cs
add
or
adc
inc
push
es
add
cmps
adc
pop
pop
pop
call
mov
mov
xchg
pop
jl
sbb
lods
cmp
inc
cmp
inc
push
sbb
inc
in
lock
out
sub
test
inc
or
push
jb
push
pop
lock
nop
out
imul
adc
mov
sbb
mov
mov
push
cli
add
xlat
dec
cli
jmp
or
mov
add
push
sar
test
mov
dec
cmp
mov
aad
dec
jg
cmp
inc
rcr
inc
loopne
pop
daa
sub
xor
push
xor
pop
in
jp
adc
sub
bound
popf
test
sub
ret
sub
addr16
add
push
push
sbb
adc
cli
fsubr
xor
mov
add
mov
add
push
loopne
loope
jae
add
and
sbb
aas
movs
cs
fisub
fcom
jmp
cmp
das
fs
sub
jne
les
popf
cmps
inc
push
dec
ja
fidiv
inc
and
out
je
or
push
jecxz
fadd
add
xor
shl
and
xor
xchg
sub
and
shl
xchg
sbb
adc
pop
jno
push
(bad)
test
fwait
jmp
push
loopne
mov
es
pop
adc
call
pop
pop
pop
out
scas
test
cmp
fld
cmp
inc
pusha
sbb
inc
mov
rol
adc
or
clc
fwait
push
call
scas
xor
push
movs
icebp
adc
or
fdivr
xor
pop
arpl
mov
mov
adc
sbb
jnp
push
inc
mov
and
repz
scas
cmp
add
or
adc
mov
or
mov
cmps
xchg
push
call
dec
enter
cmp
in
or
push
aam
adc
or
adc
jns
mov
sub
mov
neg
retf
je
mov
test
popf
call
push
jno
in
push
mov
in
in
xchg
nop
xchg
in
cmp
sbb
jg
push
sahf
add
dec
fdivr
sub
rcl
mov
mov
push
push
nop
and
test
test
fadd
pop
lea
jno
and
jge
and
ins
jp
or
in
cmps
add
test
pop
pushf
jae
and
aad
test
adc
push
rdmsr
adc
gs
pop
ins
dec
jno
cdq
or
mov
and
adc
loop
cmp
or
push
push
movs
(bad)
xchg
clc
in
daa
sahf
movs
ret
clc
sahf
xlat
push
dec
lea
cld
cdq
dec
test
and
popa
movs
pop
punpcklwd
pop
xchg
adc
rcl
and
not
push
cmps
ja
inc
je
sbb
cmp
inc
movs
mov
adc
leave
dec
lock
mov
pop
pop
out
mov
es
mov
pop
(bad)
pop
fadd
rcl
enter
push
imul
pop
or
mov
sar
lods
out
(bad)
and
or
clc
mov
ss
out
cwde
mov
mov
sbb
or
aad
adc
or
pop
aaa
adc
or
cwde
mov
lea
add
mov
or
(bad)
add
test
jge
lods
xor
fucom
ror
sub
or
xor
xor
call
inc
push
pop
out
loopne
or
push
push
fsub
nop
mov
js
ret
cmp
mov
xchg
add
pop
sbb
add
push
inc
or
or
adc
es
push
push
rol
adc
loop
xor
dec
aad
popa
sub
mov
pop
add
call
ins
xchg
xor
pusha
cmps
add
out
cmp
jno
sbb
dec
sbb
push
dec
sbb
xchg
add
std
and
adc
ficom
bound
pop
dec
inc
sbb
sbb
daa
adc
cmp
cmps
xchg
mov
repz
inc
movs
mov
mov
pop
sbb
cmps
mov
pop
nop
xchg
xchg
mov
xchg
pop
pop
add
or
xor
retf
sbb
rol
cmps
or
les
cmc
sbb
sub
adc
push
jle
in
cmp
mov
adc
xor
movs
add
lock
ficom
cs
pop
retf
xor
sub
and
(bad)
cmp
ins
sbb
dec
jle
and
push
push
jg
call
stos
pop
xor
pop
es
out
or
or
dec
movs
xchg
xor
sbb
bnd
or
fdivr
pusha
sbb
int
dec
pop
push
jae
and
imul
mov
sub
shl
pop
jns
xor
cmp
fadd
jne
dec
fcom
lock
adc
jg
xor
retf
cld
or
add
sub
xor
jmp
call
jnp
mov
ja
xchg
jne
xor
cdq
dec
bound
add
sub
popa
jge
pop
sub
call
or
or
test
sahf
add
mov
jl
ss
test
iret
in
mov
sti
push
or
sub
or
pop
retf
and
adc
push
xor
pop
jmp
lock
add
adc
add
sub
imul
rol
push
jge
ror
mov
and
cmp
adc
adc
lea
pop
enter
jmp
lock
mov
daa
movs
xchg
or
cmp
mov
or
and
or
adc
icebp
popf
imul
lods
dec
enter
jl
push
test
and
arpl
inc
add
mov
or
mov
outs
jmp
popa
js
aaa
jb
int
jne
or
push
xchg
movs
sub
sub
mov
mov
mov
xchg
in
leave
xchg
cmps
push
pop
mov
dec
push
in
push
rcr
enter
or
mov
imul
xchg
xchg
mov
sub
adc
jmp
adc
jl
aaa
jmp
push
loopne
xor
cmps
mov
push
mov
add
push
loopne
stos
stos
add
mov
ror
cmp
jl
push
or
dec
sub
dec
jnp
pop
fist
adc
rcr
push
lds
mov
js
fisub
add
mov
dec
jle
push
lock
imul
pop
popa
or
push
pop
ss
and
adc
fimul
xchg
push
pusha
inc
xchg
sti
mov
xor
dec
enter
sbb
mov
sar
popa
push
or
inc
push
or
outs
ret
mov
inc
pusha
and
push
add
cwde
mov
test
or
mov
pop
adc
pop
xchg
cmp
sub
addr16
inc
add
fdivr
imul
push
add
cmp
in
and
ins
cwde
rol
mov
push
inc
(bad)
mov
mov
test
loop
push
or
ins
xor
and
popa
shl
cmp
mov
cwde
and
adc
pushf
gs
nop
and
add
pop
in
or
xchg
in
sbb
sub
push
lods
push
adc
mov
ins
or
retf
adc
or
in
sbb
mov
rcr
fs
ret
push
repz
je
mov
xlat
and
push
jmp
push
and
mov
out
jge
sbb
(bad)
add
adc
sub
lock
repnz
or
xchg
mov
adc
jnp
clc
push
enter
xchg
fnstenv
pop
outs
enter
xchg
add
pop
rol
subps
xchg
or
repnz
add
dec
stos
getsec
test
inc
and
adc
clc
out
pop
cmp
sub
sahf
pushf
pop
das
std
adc
adc
test
es
jge
push
or
nop
lods
mov
adc
inc
add
mov
pop
add
add
js
sbb
shl
aaa
push
or
and
add
push
adc
je
shl
aas
daa
(bad)
mov
jecxz
out
jne
add
test
bswap
fs
dec
sub
pop
or
inc
adc
push
nop
sub
pop
add
inc
clc
add
jo
sbb
xor
lods
adc
inc
mov
retf
into
sbb
or
cmps
rcr
mov
or
rcr
retf
add
scas
out
je
or
inc
pusha
daa
adc
popa
addr16
daa
and
fdiv
gs
and
mov
aam
rcr
call
sub
dec
sbb
enter
adc
fild
mov
inc
iret
and
sbb
inc
or
js
(bad)
ror
cmp
and
mov
or
mov
mov
jne
pop
mov
or
mov
(bad)
and
jg
pop
and
and
ror
sub
fwait
inc
cs
(bad)
call
sub
push
int3
pop
cmp
add
sub
add
pop
pop
xchg
stos
mov
mov
sub
scas
mov
jno
and
dec
outs
push
mov
cmp
lock
push
push
cmp
retf
jle
movs
outs
cwde
jp
or
push
(bad)
fdiv
rol
mov
nop
inc
ins
mov
sub
mov
lea
sub
sub
cmp
xlat
adc
test
sbb
pop
test
push
nop
add
hlt
add
stos
mov
rcr
int3
cwde
fmulp
mov
jp
add
ret
or
(bad)
test
test
inc
pop
enter
fchs
sub
lods
xchg
xchg
push
pushf
mov
dec
cdq
inc
mov
mov
jle
xor
(bad)
(bad)
mov
xchg
daa
inc
adc
mov
jns
push
ror
leave
sti
xchg
cmps
call
push
aam
daa
cmp
pop
pushf
push
pop
pop
and
aaa
dec
dec
dec
sbb
cmp
xchg
fdiv
ins
mov
push
xor
xchg
ins
ins
nop
bnd
xchg
dec
mov
sbb
sbb
jge
cmp
xchg
mov
xchg
lods
je
outs
jmp
sub
imul
xchg
ficom
pusha
xlat
int3
xchg
dec
in
je
jmp
xor
aam
jp
jo
fsub
hlt
int3
enter
add
inc
mov
ins
lea
adc
sbb
out
or
xchg
fsub
mov
dec
pop
sbb
hlt
mov
pop
bound
retf
sti
or
retf
lods
pop
bound
ret
push
movs
inc
jp
mov
pop
fs
xchg
jge
and
into
enter
mov
cli
and
call
hlt
mov
dec
and
inc
add
sub
in
jne
imul
mov
icebp
mov
sahf
pop
and
arpl
lods
cmp
sub
popa
dec
das
sbb
pop
or
sub
adc
cmp
add
xor
clc
mov
mov
mov
ss
int
lock
loopne
mov
inc
mov
imul
test
fdiv
jmp
loop
xlat
mov
xchg
adc
or
xor
cmps
icebp
data16
repnz
je
xor
mov
adc
jg
mov
mov
mov
sbb
xchg
popa
sahf
mov
pop
adc
sbb
inc
xchg
into
adc
out
cmp
jno
push
inc
enter
push
or
dec
mov
and
retf
sahf
fstp
adc
dec
cmp
push
pop
cmps
jb
pop
jmp
rcl
or
dec
dec
or
sub
mov
dec
mov
mov
add
cmp
test
loopne
loopne
adc
xchg
cmp
xchg
fs
sbb
or
or
cld
mov
daa
cmps
mov
hlt
lods
cs
push
loopne
mov
scas
aad
out
add
pop
pop
and
les
push
add
bound
add
and
adc
jbe
or
xor
mov
mov
in
fs
out
and
(bad)
dec
enter
adc
and
mov
inc
sbb
add
pop
enter
jg
add
shl
push
adc
mov
popf
xor
inc
push
mov
mov
mov
cmp
or
sbb
inc
sbb
loopne
and
mov
or
outs
mov
dec
push
fs
pusha
imul
and
fbstp
add
add
and
push
daa
mov
xchg
jge
fiadd
dec
sbb
stc
push
scas
sub
push
jmp
push
lea
loopne
adc
cwde
mov
and
mov
xchg
ss
add
ins
mov
fadd
adc
mov
inc
fst
or
sbb
ins
sub
xor
add
dec
add
or
test
(bad)
mov
dec
dec
imul
xchg
jge
xor
pop
mov
pusha
jno
xchg
xchg
cwde
aaa
sbb
pop
lahf
xchg
movs
js
mov
xchg
xor
bound
shl
sub
jl
in
inc
dec
inc
add
and
scas
jl
mov
fbld
mov
outs
cli
dec
je
popa
inc
add
sub
dec
shr
daa
cmps
les
inc
adc
stos
inc
jge
mov
or
cdq
and
lock
sbb
or
add
and
adc
js
or
push
push
mov
leave
sti
ss
outs
scas
mov
nop
and
inc
mov
xor
adc
cmp
adc
mov
inc
loopne
and
aaa
leave
sbb
daa
add
cmp
adc
aaa
dec
in
and
adc
test
sbb
and
jne
cwde
cwde
cld
push
push
clc
or
arpl
xor
ficomp
es
adc
and
mov
and
in
cmp
or
xor
adc
sbb
add
mov
add
mov
mov
popf
pop
mov
in
mov
jb
ins
or
pop
gs
js
sbb
dec
mov
mov
icebp
and
jnp
xor
inc
jmp
aaa
aaa
hlt
xchg
nop
inc
dec
(bad)
ret
hlt
cmps
dec
sub
jno
dec
call
add
pop
ss
data16
ss
sub
and
shl
in
pop
push
clc
or
adc
inc
test
cdq
sahf
rcl
cld
xchg
adc
adc
sbb
inc
mov
fistp
arpl
add
mov
add
mov
lea
sbb
je
dec
std
jne
xor
pop
sub
lea
cmp
imul
jle
adc
call
mov
fwait
shr
loope
xlat
fcomp
int3
add
es
sub
dec
mov
add
nop
loop
jne
inc
(bad)
(bad)
dec
popf
adc
js
adc
inc
leave
mov
sub
stos
mov
push
push
stc
cmp
(bad)
xchg
fs
inc
jl
mov
xor
xchg
lea
test
jmp
jae
test
(bad)
pop
shld
or
sbb
(bad)
scas
sub
xchg
push
ret
out
xchg
add
enter
xor
jne
adc
imul
or
cmp
xor
fadd
jbe
retf
movs
pop
jge
or
pop
cs
in
rcl
fdiv
into
iret
in
hlt
shr
or
push
pop
clc
cld
add
sub
pop
mov
arpl
jae
dec
cld
pop
mov
cmp
sar
retf
sub
test
sbb
daa
xchg
mov
or
outs
adc
mov
dec
jmp
jb
movs
jge
or
fwait
sbb
mov
neg
sbb
not
out
jge
inc
jo
xchg
xchg
jo
xor
outs
lods
adc
cmp
push
mov
xchg
mov
stc
nop
add
hlt
adc
and
f2xm1
add
add
test
(bad)
push
ret
adc
jle
sbb
in
jne
xchg
mov
imul
fcmovnu
push
cmp
inc
push
push
inc
cmp
aas
cli
adc
add
jo
or
test
mov
dec
push
push
xchg
enter
and
xchg
mov
loop
jge
and
cmps
xor
out
inc
movs
gs
add
xchg
clc
nop
ss
mov
inc
and
xor
mov
lea
pop
test
imul
call
inc
(bad)
sub
ret
loopne
pop
shl
push
pusha
sub
pusha
stos
xchg
jo
cmps
fistp
test
adc
inc
mov
and
or
adc
lea
pusha
mov
in
mov
cwde
mov
ss
lods
add
outs
fmul
pusha
or
add
mov
xchg
sub
pop
pop
div
or
jmp
or
or
sbb
xor
fs
or
scas
adc
cmp
jle
loope
out
or
pop
ret
(bad)
xchg
push
xchg
inc
inc
jbe
loopne
sbb
loope
(bad)
aad
popa
mov
repnz
test
rol
movs
xor
adc
sbb
mov
test
pop
sbb
mov
repz
ins
es
mov
cwde
inc
inc
xor
dec
pop
xchg
push
sub
sbb
sub
fs
ins
fs
in
std
sub
lods
push
das
add
sahf
jb
pop
cli
ins
lods
out
jecxz
xor
adc
repz
hlt
and
sbb
cld
loopne
jmp
mov
push
sbb
rol
add
cmp
jl
cmp
mov
aas
push
add
inc
cmp
inc
push
dec
mov
inc
mul
dec
out
sub
inc
mov
push
lock
dec
icebp
fadd
rcr
jmp
test
or
lea
dec
add
mov
inc
xor
or
xor
enter
dec
sar
xlat
jg
pusha
fsub
adc
ins
add
dec
sbb
add
adc
icebp
adc
xor
das
mov
mov
mov
add
mov
cmp
js
add
and
sub
mov
dec
mov
fimul
mov
shl
clc
xchg
sbb
ss
std
cmp
fidivr
adc
adc
inc
sub
lea
sbb
adc
rol
std
cs
ror
mov
shld
int3
hlt
push
enter
je
adc
fidiv
dec
hlt
pop
push
gs
shl
les
inc
int3
ror
fild
imul
inc
pop
je
int3
nop
fnstsw
daa
dec
cmp
clc
jno
out
jmp
ss
hlt
rcr
sub
xchg
xor
jne
sbb
xchg
ror
add
jae
(bad)
iret
cmp
pop
mov
mov
mov
das
or
push
fs
and
inc
mov
or
or
push
neg
mov
pop
and
or
fdivp
mov
jmp
sbb
dec
xor
xchg
mov
sub
cmp
and
ins
add
mov
xchg
jnp
ficom
js
nop
pop
sub
xchg
es
sub
arpl
adc
(bad)
xlat
and
(bad)
sub
mov
sbb
or
int3
outs
aaa
jl
movs
pop
cmp
sub
imul
inc
or
add
lods
popa
mov
xchg
xchg
ja
sub
mov
adc
cmp
adc
(bad)
enter
push
mov
stc
and
or
push
js
sbb
or
dec
push
pop
xchg
pop
dec
ror
loopne
cmc
pop
(bad)
mov
lock
dec
xchg
loopne
test
adc
mov
test
adc
xchg
xor
ret
dec
pop
fwait
cwde
pop
and
or
inc
and
sbb
xor
hlt
add
jle
lea
ja
(bad)
inc
adc
xor
sub
jecxz
add
(bad)
stos
or
retf
les
cmp
jnp
loopne
sub
xor
(bad)
rol
pop
sub
xchg
add
push
fadd
cmp
dec
sbb
push
(bad)
mov
cwde
js
xchg
dec
pushf
pop
push
cwde
aas
pusha
mov
into
inc
inc
add
adc
int
cmp
jo
(bad)
fsub
sub
sti
int3
push
mov
(bad)
shl
leave
adc
gs
in
jmp
mov
adc
push
test
in
in
cmp
call
mov
sbb
dec
dec
mov
xor
inc
ins
cmc
je
popf
xchg
or
pop
push
shl
mov
sub
sbb
mov
dec
pusha
aad
add
jno
fs
add
cmc
sbb
pop
fdivr
fcom
push
sbb
out
lods
add
sub
call
cmc
clc
cmp
fld
arpl
xchg
mov
mov
mov
data16
int
jge
and
push
mov
and
or
adc
push
sahf
dec
sub
inc
pop
and
push
fsubr
js
pop
js
bound
adc
dec
or
dec
loopne
sub
out
inc
pop
fwait
test
dec
adc
outs
dec
gs
das
adc
nop
dec
or
inc
adc
sbb
add
sub
sbb
push
or
cs
mov
xor
xor
sub
or
mov
xor
mov
mov
fiadd
xor
rcr
dec
adc
rol
jo
test
cmp
cmp
je
mov
sbb
jns
xor
inc
out
stc
mov
inc
(bad)
int3
push
xchg
cmp
(bad)
jns
xor
pop
fnsave
test
jmp
xchg
mov
sar
leave
adc
hlt
fsubr
mov
stc
or
mov
call
daa
les
push
mov
pop
pop
repnz
nop
shl
dec
lea
jmp
das
mov
jle
dec
xor
into
xchg
sbb
dec
sub
shl
loope
movs
sti
sbb
stos
push
ss
jg
pop
jmp
xlat
cdq
pop
(bad)
add
jp
sbb
mov
xchg
mov
and
js
xchg
or
mov
adc
xor
js
inc
sbb
or
dec
jmp
mov
jns
mov
mov
ins
and
test
call
cmps
mov
inc
or
cmps
shr
jg
sbb
imul
or
mov
popa
adc
icebp
daa
(bad)
and
(bad)
aad
xor
push
shl
sbb
imul
rol
mov
jb
mov
cmp
mov
pop
mov
push
xchg
jle
hlt
mov
and
xor
in
jecxz
nop
ret
shl
cmp
scas
in
add
pop
push
lods
out
push
ins
and
add
std
jb
mov
xor
mov
lods
or
rcl
lock
sahf
loope
or
popa
or
(bad)
loop
dec
mov
jecxz
adc
ds
and
out
mov
or
retf
outs
gs
push
mov
repz
shl
add
mov
jno
rol
pop
ins
xchg
xchg
or
jbe
push
pop
inc
out
or
adc
ror
jae
xchg
add
xchg
push
pop
cs
dec
fcomp
lock
retf
in
mov
mov
(bad)
enter
in
clc
clc
cld
cld
loopne
add
loopne
mov
cmp
int3
imul
or
test
inc
retf
xor
xor
cmp
cwde
(bad)
ss
mov
pop
loope
or
pop
pop
mov
nop
adc
inc
(bad)
jl
(bad)
or
inc
xchg
xchg
orps
fdivr
add
inc
mov
rcr
out
xchg
pop
aas
push
xor
adc
ror
jp
pusha
ret
add
cmps
xor
jnp
fbstp
(bad)
out
mov
adc
and
and
sti
inc
dec
dec
and
pop
mov
sar
mov
gs
test
pop
jnp
(bad)
jns
mov
int3
in
dec
bound
xchg
cmps
in
(bad)
xchg
ror
dec
or
je
pop
imul
mov
adc
popf
aaa
add
xchg
or
add
and
xor
pusha
mov
loop
mov
sbb
bound
and
jne
mov
cmp
push
inc
or
xor
mov
shl
add
sbb
inc
popf
or
dec
mov
(bad)
jmp
cmp
or
cmp
push
push
and
cmp
shl
add
int3
xor
mov
int3
shl
outs
nop
xchg
add
mov
mov
and
sti
aam
ret
stos
push
fld
mov
xchg
inc
or
mov
or
mov
in
jmp
aam
jno
or
sahf
xchg
jne
and
xchg
push
sbb
int
ret
and
shl
or
and
jg
mov
mov
jecxz
adc
scas
cmc
je
push
sbb
dec
mov
daa
lock
stos
dec
and
iret
mov
cmp
fdiv
dec
and
adc
fst
mov
cdq
mov
add
ins
xor
or
dec
sub
out
(bad)
add
xor
xchg
inc
push
push
and
xchg
push
call
test
sar
(bad)
retf
mov
or
daa
fsub
cmp
adc
jmp
loop
xchg
sub
or
jnp
arpl
and
mov
xor
test
into
add
test
xor
or
xchg
shl
or
cs
in
cmp
inc
call
xor
xchg
xor
jo
or
hlt
jge
inc
or
ret
stc
cld
adc
pop
push
or
cmp
and
ret
adc
dec
pop
mov
pop
enter
inc
jecxz
jne
xor
dec
push
xchg
adc
jl
loope
xchg
test
add
cmp
int
mov
pop
push
scas
clc
inc
push
push
rcl
pop
mov
push
dec
push
outs
push
cdq
stc
xor
add
pop
inc
mov
and
add
xchg
add
sub
aad
jmp
int
les
xor
xchg
and
xchg
mov
or
xchg
sub
shl
mov
sub
test
push
popa
dec
cli
xchg
stos
mov
int
hlt
or
pop
test
xor
mov
or
and
add
dec
cmp
lods
add
adc
mov
mov
mov
adc
sub
push
push
popa
add
jecxz
inc
pop
or
ret
cwde
cs
push
xchg
adc
sub
mov
cwde
shr
or
out
push
add
or
aad
stc
add
or
test
add
sbb
xor
pop
xchg
das
movs
popf
dec
sub
jp
pop
test
clc
add
ss
sub
repz
pop
test
sbb
and
add
or
in
sbb
addr16
cmp
xor
jne
mov
dec
pop
cmp
cmp
das
je
mov
add
mov
lock
stos
add
sub
push
movs
mov
push
or
and
fwait
loopne
sbb
or
sar
pusha
test
mov
loope
and
mov
jnp
test
ror
fsub
add
int3
jno
imul
or
and
mov
ret
add
mov
and
push
sub
xchg
clc
mov
lods
or
fmul
mov
push
test
ret
dec
xor
and
and
adc
push
push
fadd
stos
dec
mov
push
in
aam
xchg
call
cmc
push
inc
inc
jle
loopne
es
mov
cmp
pushf
fwait
xor
test
pop
pop
cmp
imul
lea
cdq
shr
and
movs
sbb
inc
or
push
jns
scas
add
outs
shl
sbb
xor
adc
pop
push
lea
icebp
jg
nop
cmp
adc
pop
shr
and
add
popf
pop
xchg
xchg
or
ds
pop
or
and
scas
popf
fidiv
push
adc
and
or
adc
movs
push
mov
je
(bad)
mov
mov
adc
adc
adc
xor
jae
adc
daa
dec
jns
mov
ins
add
ds
loopne
ret
loope
mov
leave
xor
aas
(bad)
lds
pop
lds
sbb
and
pop
(bad)
scas
adc
mov
pop
jbe
pop
setl
pop
pop
call
inc
mov
sbb
call
gs
lea
fidivr
js
ror
mov
sub
mov
push
adc
and
inc
cmp
mov
xor
frstor
and
in
xchg
push
aaa
push
cmp
sub
inc
cwde
adc
push
stos
bound
xchg
dec
sbb
fsub
xchg
int3
rol
mov
and
js
pop
pop
add
or
mov
cmps
xchg
and
add
sbb
mov
mov
jl
sahf
jns
push
(bad)
xchg
push
xchg
loopne
cmp
or
loopne
inc
arpl
in
es
(bad)
rol
or
and
popa
pop
mov
add
(bad)
rol
pop
jnp
push
sub
fwait
sub
(bad)
jb
addr16
clc
mov
add
scas
mov
js
ja
and
jo
cmps
sbb
retf
stos
pusha
add
inc
push
sbb
sar
add
and
(bad)
pusha
(bad)
mov
or
dec
push
cmp
mov
xchg
xchg
pop
or
mov
sub
mov
sbb
sbb
lock
and
mov
add
push
jg
xchg
cmc
sub
push
adc
inc
inc
or
mov
imul
cmp
test
inc
mov
pusha
loopne
adc
sub
dec
xor
pop
xor
jo
iret
sub
xchg
sub
push
div
jle
icebp
and
cmp
jne
and
call
repz
mov
adc
adc
inc
add
and
jno
pop
(bad)
aam
lds
test
(bad)
xchg
xor
imul
adc
cs
push
inc
shl
pushf
test
sar
jo
adc
mov
sbb
dec
mov
inc
pop
sbb
repz
aam
dec
loop
iret
shl
js
dec
cmp
outs
pop
push
les
repnz
push
ror
sub
call
ficom
push
xor
inc
je
ret
adc
and
and
xlat
or
xchg
sub
add
push
jae
ins
loopne
sub
(bad)
and
inc
inc
lock
fwait
inc
stos
mov
mov
adc
loopne
mov
or
or
adc
push
cmps
test
and
sbb
pushf
sub
ss
pop
add
add
adc
and
sub
push
mov
adc
arpl
jmp
or
xor
pop
mov
test
xchg
sbb
mov
mov
add
sbb
or
mov
sbb
aas
add
or
pushf
retf
je
push
pusha
pop
xchg
fadd
add
out
or
jmp
sti
xor
or
retf
xchg
ret
shl
mov
lock
add
inc
mov
mov
das
das
and
out
xchg
xchg
mov
or
lods
push
mov
add
jno
or
mov
test
movs
sbb
or
dec
xor
inc
xor
gs
arpl
inc
test
jecxz
and
mov
or
or
adc
shl
and
outs
unpcklps
ror
in
add
inc
sub
push
cld
outs
xor
mov
movs
xchg
leave
mov
and
ror
sub
inc
rcl
(bad)
cld
in
push
xchg
loopne
push
sub
or
and
jo
push
mov
mov
jo
movs
add
fdivr
push
jno
cwde
adc
daa
aad
fadd
jg
cmp
(bad)
bound
imul
(bad)
sbb
add
fldcw
cs
hlt
popa
call
and
jecxz
popa
in
sub
add
inc
fcmovnb
sti
push
pop
cmp
aam
fs
mul
js
lods
xor
push
dec
movs
(bad)
xor
or
push
mov
(bad)
or
neg
inc
adc
jmp
cmps
das
mov
and
add
es
inc
imul
adc
movs
rol
inc
push
test
dec
test
cs
popf
(bad)
push
cmps
add
push
pop
test
mov
cwde
pusha
add
dec
push
sbb
mov
and
and
and
inc
add
and
dec
dec
js
inc
hlt
ss
mov
sbb
(bad)
sub
pop
lods
sub
imul
rol
ror
repnz
ja
xchg
and
je
dec
je
and
jne
push
cli
mov
je
xchg
cli
sar
sti
arpl
shr
mov
jmp
in
add
sahf
jmp
dec
xor
jbe
fistp
je
jge
(bad)
pop
sub
add
and
popa
(bad)
jns
push
or
push
sub
mov
adc
mov
movs
les
xor
mov
pop
cmp
pusha
or
lods
pop
nop
push
or
or
mov
sub
popa
sbb
push
push
and
aad
cmp
or
mov
jmp
adc
jle
inc
push
popf
pushf
add
adc
pop
int3
sbb
test
push
or
xchg
inc
lea
push
dec
loope
scas
nop
inc
push
sbb
mov
cwde
add
lock
jg
push
sub
mov
jae
mov
mov
ins
outs
mov
in
dec
dec
je
add
dec
cs
ret
push
or
ds
(bad)
sbb
dec
ficom
sub
and
mov
and
sbb
cmp
iret
mov
jb
or
inc
popa
jecxz
fdiv
xchg
cdq
test
or
jle
shl
cs
inc
mov
mov
pop
cmps
mov
xor
add
dec
and
adc
sbb
pushf
add
push
and
add
jmp
jle
adc
push
inc
push
lock
inc
lahf
and
adc
and
les
pop
adc
dec
sbb
icebp
cmp
dec
inc
adc
or
sbb
lea
and
xor
lea
push
inc
jne
cmp
sbb
faddp
push
and
das
mov
mov
mov
and
add
push
ins
add
adc
shl
outs
mov
ja
cmp
cwde
enter
adc
jmp
or
cmp
mov
mov
rol
dec
mov
add
loop
sbb
adc
or
movs
push
arpl
aad
out
ins
jo
je
mov
(bad)
ins
loop
scas
sbb
popa
pop
or
in
add
into
add
sbb
add
push
mov
icebp
push
dec
sub
fcomp
je
push
pop
shl
(bad)
push
xor
and
push
test
call
inc
aam
and
jno
adc
xchg
or
push
shl
sbb
xchg
fcmovb
xchg
dec
test
pop
dec
aas
loop
fsubr
xor
mov
retf
enter
pop
cs
adc
mov
call
xor
mov
dec
mov
in
xchg
jbe
sbb
or
mov
mov
sub
mov
icebp
or
setae
call
or
push
or
nop
mov
push
mov
(bad)
daa
mov
fimul
cmp
xor
in
jp
ror
or
cmp
mov
ins
jmp
sub
pop
push
add
data16
xchg
or
sahf
jnp
mov
dec
pop
mov
mov
pop
popa
nop
(bad)
iret
jecxz
call
or
mov
xchg
mov
pop
rol
or
cmp
adc
and
mov
aad
sub
and
mov
xor
and
dec
js
and
fnstsw
mov
in
jno
jmp
jnp
xor
pusha
mov
pop
and
movs
mov
xor
mov
adc
sub
push
xchg
lock
add
inc
jo
outs
sub
(bad)
adc
mov
test
pop
mov
ret
imul
jl
mov
adc
inc
jle
cwde
mov
out
xchg
mov
cmp
adc
and
and
and
in
mov
xchg
add
popa
clc
pop
or
fcmovne
bound
cmc
mov
rol
or
mov
movs
mov
retf
sbb
pop
in
inc
ss
add
add
cs
adc
jno
imul
jecxz
mov
mov
and
(bad)
sahf
adc
push
xor
call
push
icebp
inc
and
cmp
(bad)
mov
pop
sub
mov
sbb
dec
mov
mov
add
push
adc
cmp
out
or
add
inc
fistp
nop
add
or
pop
fdiv
dec
or
je
dec
inc
shr
pop
pop
sub
mov
add
pop
cmp
dec
aam
sbb
fwait
pop
sbb
icebp
cmp
pop
mov
les
xchg
sub
push
sahf
jbe
clc
jmp
and
in
in
ins
fbstp
cs
push
mov
sbb
xor
aam
out
mov
clc
sbb
popa
jmp
cmp
popa
mov
outs
jecxz
sbb
mov
xchg
je
mov
adc
sub
push
mov
pop
movs
pop
or
xchg
sub
adc
mov
xor
jmp
push
cld
cmp
ja
fadd
fild
mov
(bad)
cmp
sub
dec
pop
stos
rol
sub
adc
add
les
out
and
dec
jbe
repnz
jmp
int3
add
push
inc
and
mov
test
add
nop
cmps
inc
lods
and
mov
inc
sub
mov
cmp
pusha
push
hlt
and
fist
xchg
or
cmps
add
cmp
adc
rcl
or
xor
dec
cmps
push
ss
or
cmovg
(bad)
in
dec
and
push
and
xor
or
cmp
and
or
xchg
retf
loope
int3
lea
mov
sbb
loope
sub
adc
movs
std
inc
lea
mov
inc
out
adc
imul
push
in
xor
outs
stos
dec
ret
sub
test
cmp
jae
adc
dec
sub
ins
add
mov
mov
jl
add
vcvttss2si
add
fadd
cmp
xor
mov
movs
xchg
mov
aas
jmp
cmps
ret
loop
mov
cmp
loop
ja
sbb
dec
fmul
cmp
push
push
and
and
sub
sar
aam
dec
xchg
and
lods
xor
lods
call
es
mov
aam
cs
shl
shr
mov
push
out
inc
mov
mov
popa
pop
mov
jg
adc
dec
sbb
rcr
enter
cs
leave
adc
adc
mov
leave
cwde
jbe
je
rol
outs
inc
add
call
aad
mov
popf
test
test
mov
jne
sbb
dec
movs
or
icebp
add
mov
in
(bad)
jmp
pop
movs
test
adc
ins
sub
adc
jae
inc
inc
rol
inc
pop
sbb
push
cmp
and
bound
es
inc
bound
or
arpl
ret
cs
push
mov
fs
jne
test
mov
xor
mov
adc
add
mov
mov
push
mov
adc
hlt
push
je
adc
push
cmp
stos
cld
fadd
adc
(bad)
repz
mov
add
imul
lea
mov
and
mov
ror
xchg
dec
adc
cli
mov
sbb
lea
lea
xchg
push
xchg
and
sub
fmul
wbinvd
sbb
pop
imul
leave
sbb
add
ror
sbb
daa
cmp
sub
mov
mov
outs
or
push
sbb
pop
adc
mov
imul
sub
add
pop
or
fs
or
(bad)
ret
add
clc
push
mov
xor
outs
dec
push
inc
(bad)
mov
ds
dec
pop
rcr
xor
push
sbb
test
fisttp
and
mov
mov
mov
cs
pop
jne
add
mov
dec
cmp
xchg
and
pusha
xchg
call
inc
or
cmps
or
adc
mov
xchg
jmp
pop
dec
push
(bad)
fadd
mov
mov
loopne
les
push
push
pusha
sbb
inc
mov
fs
loopne
jno
movs
inc
clc
adc
or
push
lods
or
push
mov
pop
sub
adc
addr16
xlat
push
sti
add
jnp
jmp
imul
lods
test
add
test
call
leave
cmp
push
dec
pop
pop
xchg
fsub
cmc
out
jmp
mov
sbb
dec
test
mov
pop
jne
lahf
aam
mov
cwde
inc
or
ret
outs
int3
jb
enter
push
in
mov
(bad)
sbb
nop
sub
add
mov
add
ja
dec
shl
jns
loope
ror
hlt
in
fadd
push
add
movs
mov
rcl
rcr
cmp
add
push
mov
cmp
jmp
jne
inc
or
or
ins
push
(bad)
retf
mul
xor
arpl
mov
add
mov
rcl
xor
sbb
and
xor
stc
fsub
add
push
int3
aad
loopne
jmp
cmps
inc
add
cmp
sbb
mov
rcl
in
pop
or
mov
and
rcl
mov
inc
loopne
imul
push
and
add
mov
sbb
add
add
jb
mov
dec
sbb
in
pop
mov
sub
shl
inc
dec
aaa
stos
pop
fwait
xchg
push
xor
loop
mov
mov
sub
xor
rol
std
mov
and
mov
push
fcmovb
push
popa
hlt
or
dec
rcl
pop
jg
mov
add
xchg
add
mov
mov
js
xor
sar
inc
sub
sbb
push
retf
sti
inc
xchg
xlat
lea
sbb
dec
add
sbb
adc
sub
inc
add
cdq
enter
lahf
xchg
out
push
mov
cmp
movs
hlt
adc
stc
add
or
mov
dec
pop
fst
sahf
test
adc
mov
push
clc
(bad)
lds
and
push
mov
mov
jo
cmp
jnp
push
mov
nop
ja
push
inc
jbe
add
and
in
loopne
mov
or
adc
out
in
push
icebp
push
dec
ss
int
xor
pop
sbb
or
mov
push
adc
push
lahf
aam
sbb
xchg
(bad)
mov
sbb
mov
mov
test
inc
adc
sbb
retf
in
sub
add
fcom
and
add
cld
push
push
arpl
shl
adc
add
add
adc
dec
lods
neg
(bad)
pop
or
aas
cdq
adc
or
adc
add
aam
pop
sbb
cmp
sub
mov
pop
inc
or
or
popa
adc
jmp
imul
mov
jo
mov
shr
test
and
jb
sub
adc
dec
dec
pop
or
sar
scas
sub
mov
xchg
and
or
add
push
inc
cwde
cld
test
add
(bad)
aam
ja
dec
shl
inc
and
adc
push
inc
call
add
jp
inc
mov
sbb
sbb
sahf
xor
fnstsw
lods
sub
mov
cld
and
mov
arpl
mov
pop
mov
sbb
dec
dec
jbe
jcxz
push
sbb
adc
inc
push
cmps
jmp
clc
dec
or
push
mov
call
dec
mov
sbb
lds
adc
retf
dec
push
pop
lock
add
(bad)
out
lods
or
ret
push
push
push
int
(bad)
and
dec
dec
push
stos
sbb
pusha
aad
daa
ret
pop
movs
movs
inc
repnz
dec
stc
pop
and
rcl
jns
push
mov
xchg
and
mov
add
adc
arpl
and
xor
popf
or
cwde
scas
nop
daa
jge
or
jmp
add
sbb
adc
add
xchg
movs
fcom
lahf
scas
ins
loop
stc
xlat
cmp
cmp
fwait
js
and
mov
rcr
adc
es
cmp
int
icebp
stc
mov
dec
ror
and
sbb
adc
and
or
jbe
sti
inc
fdivrp
sub
stos
adc
sbb
dec
(bad)
or
scas
inc
(bad)
xor
repnz
popa
and
stc
cwde
ss
fstp
adc
repz
ins
cmps
imul
jecxz
es
movs
or
pusha
pushf
jo
ins
add
mov
add
ret
sub
mov
push
test
push
add
nop
or
adc
adc
and
xchg
push
les
sbb
push
lahf
push
(bad)
and
xor
and
les
mov
add
mov
cs
sbb
cwde
sbb
xchg
lock
test
mov
pop
mov
or
cmp
xor
xchg
mov
inc
xchg
and
call
adc
nop
xchg
push
sbb
lea
push
pop
ja
sar
xchg
push
mov
pop
jp
ins
cmp
sbb
push
xor
dec
xchg
adc
mov
pop
rol
adc
shl
js
sub
dec
rol
mov
arpl
adc
test
xchg
xor
sbb
push
dec
push
ins
movs
ret
bswap
lds
stos
sub
nop
dec
mov
sbb
push
or
or
mov
dec
and
and
push
inc
inc
fsubr
mov
imul
xchg
add
mov
sahf
les
scas
adc
dec
sbb
aam
adc
outs
adc
adc
das
jl
inc
addr16
mov
add
mov
ret
imul
shl
mov
xor
dec
je
cmove
sub
movs
push
xchg
lods
outs
dec
test
lods
cmp
cmp
fcom
into
mov
mov
(bad)
fwait
xor
fwait
lea
imul
pop
add
repz
pop
pop
xor
xor
js
mov
sti
iret
shl
iret
adc
xor
xor
and
mov
or
test
ret
test
inc
sbb
xor
pop
outs
fadd
test
aad
and
outs
adc
and
and
jl
aam
test
(bad)
push
(bad)
dec
mov
xchg
mov
aam
lock
inc
cmp
inc
xchg
jo
pop
fnstsw
pop
and
(bad)
cmp
jge
pop
rcr
jns
adc
jmp
adc
cmp
bound
add
or
jl
jno
xor
retf
clc
sar
xchg
jae
into
cmps
mov
stos
nop
mov
adc
and
lea
add
push
and
retf
cmp
dec
sub
xchg
retf
adc
sbb
(bad)
mov
and
push
mov
shr
(bad)
push
arpl
pop
adc
shl
jae
jecxz
rol
xlat
adc
push
xchg
or
pop
push
sbb
pop
adc
pop
jns
mov
jo
jecxz
mov
lea
nop
push
pop
and
adc
rcr
shl
sbb
inc
lods
xor
push
mov
add
ret
xlat
dec
cmc
test
popa
dec
loop
jmp
pop
sbb
adc
xchg
call
dec
xchg
cmovs
(bad)
cmp
push
push
leave
das
xor
inc
(bad)
pusha
not
add
inc
or
shl
movmskps
mov
inc
inc
adc
and
inc
cmp
sub
ins
movs
ins
in
xchg
xor
and
dec
nop
push
xchg
push
and
push
bound
mov
in
inc
leave
and
sub
sbb
dec
push
and
arpl
push
cmp
xchg
nop
ins
(bad)
rol
lock
cld
push
add
sbb
push
outs
clc
mov
mov
push
sub
jo
pop
and
xor
mov
mov
dec
cmp
jns
dec
fdiv
(bad)
js
clc
retf
jp
sub
inc
inc
sbb
xor
sbb
call
stos
aas
sbb
rcl
or
xor
jb
mov
push
cmp
lahf
adc
or
neg
ret
add
pop
rcr
enter
inc
ror
or
mov
cld
xor
and
(bad)
rol
and
add
and
popf
push
in
adc
test
or
cmps
push
lea
rcr
(bad)
mov
or
cld
clc
or
repnz
push
fisubr
adc
sub
sub
mov
(bad)
shl
pop
dec
and
pop
adc
cmp
xchg
or
repnz
add
nop
add
dec
lea
test
sar
out
jb
push
adc
ss
cmps
or
push
in
mov
cs
push
aaa
mov
test
sbb
or
dec
pusha
push
inc
jmp
mov
or
lea
in
mov
push
jae
fidiv
add
cdq
or
sub
cmp
cmc
addr16
imul
sub
dec
fist
shl
cmps
xchg
xchg
rcl
push
sub
and
mov
mov
imul
sbb
sub
push
sub
adc
push
(bad)
popa
arpl
inc
cmp
pop
jo
push
out
enter
adc
inc
mov
adc
movs
jno
pusha
add
cmp
cdq
jae
or
xor
mov
leave
adc
cmp
jmp
xchg
sbb
or
mov
or
retf
sbb
fbld
aam
pusha
or
fmul
xor
jl
pop
(bad)
sub
add
fst
push
push
psubusw
add
ins
rcl
in
xor
lock
shl
xor
cmps
xor
push
jno
les
push
pop
xor
mov
movs
inc
jmp
xlat
dec
add
mov
push
(bad)
add
sub
retf
cmp
clc
add
clc
add
lods
cmp
hlt
add
add
xchg
or
cmp
repnz
neg
add
push
cmp
lea
mov
sub
xchg
dec
sub
call
adc
adc
sub
pop
or
imul
cmp
rcr
jmp
xor
shl
adc
fst
dec
push
jns
xor
lock
sbb
inc
pop
cmp
lock
retf
add
sbb
sub
cmps
mov
sahf
lods
jl
and
adc
or
inc
inc
sbb
fwait
add
sbb
bound
pop
sub
mov
mov
in
inc
rcl
sar
icebp
xor
lods
push
aas
dec
xchg
or
adc
mov
test
push
retf
pop
cdq
xor
pushf
mov
dec
or
pop
dec
xchg
popf
cmp
jge
mov
and
test
fild
add
nop
pop
sbb
xor
nop
sbb
jne
and
jb
inc
inc
xchg
jb
in
add
mov
adc
lahf
add
cwde
add
cmp
mov
push
cmp
aad
sub
and
inc
adc
pop
adc
dec
xor
add
adc
or
lea
shr
aad
or
adc
and
aam
inc
xor
and
push
aam
push
js
mov
mov
mov
jb
xchg
test
or
ret
leave
test
or
or
jno
bound
sub
fwait
sar
lea
mov
sub
or
fisubr
inc
push
inc
lock
adc
in
cwde
dec
outs
adc
push
wrmsr
fwait
jno
aad
sub
add
mov
inc
cmp
jge
mov
push
mov
dec
lea
cmp
enter
fld
in
sub
mov
pop
call
push
pushf
cld
and
pop
mov
es
adc
fbld
add
mov
fidiv
cmp
sbb
inc
xchg
mov
push
and
add
push
add
inc
inc
js
pop
test
pop
jp
push
add
loope
jne
push
cmp
cmps
add
aad
push
fnstcw
jne
out
ret
push
adc
retf
jecxz
and
pop
sub
dec
mov
inc
dec
shl
aad
or
add
add
adc
or
mov
ror
imul
lods
(bad)
in
adc
and
fs
dec
fucomp
(bad)
push
fcmovbe
es
xchg
dec
call
jmp
add
xchg
dec
js
xchg
xchg
loope
xchg
hlt
push
(bad)
push
pop
(bad)
lea
gs
sbb
ins
add
jecxz
hlt
fcmovbe
push
fcom
jbe
fidiv
pushf
jo
test
retf
out
ret
(bad)
or
movs
mov
add
mov
sbb
mov
mov
cmp
rol
mov
sub
mov
and
mov
sub
or
es
es
mov
mov
add
ret
test
and
adc
pop
in
clc
cmp
inc
stos
je
add
imul
sub
sub
xorps
aaa
xor
cli
test
push
imul
jbe
pop
dec
xor
rol
dec
mov
mov
retf
sbb
es
mov
mov
inc
adc
cmp
mov
(bad)
or
imul
push
ins
pop
jno
and
push
push
mov
test
or
pop
rol
pop
dec
and
movs
cdq
enter
xor
call
lock
cmp
xchg
mov
(bad)
sbb
xor
mov
adc
xor
sbb
punpckhbw
addr16
test
jbe
fadd
xor
dec
sub
lock
push
jnp
inc
fdivr
lea
and
lock
xor
and
add
rcr
xchg
or
jne
inc
pop
dec
mov
adc
mov
sub
and
or
jle
and
xor
cmp
fcomp
cmp
(bad)
and
adc
push
xchg
mov
enter
push
mul
mov
mov
addr16
stc
clc
fdiv
dec
js
retf
add
cmp
inc
jmp
or
or
dec
pop
sbb
sbb
lahf
sbb
imul
push
std
in
mov
and
sub
movs
mov
push
stos
pop
in
cmps
ror
mov
jbe
add
ja
xchg
nop
add
inc
and
push
xlat
xor
mov
pop
jb
js
je
add
nop
jo
aas
and
push
inc
dec
movs
push
jmp
test
out
shl
or
push
and
pop
and
push
sahf
push
hlt
js
inc
pop
data16
fadd
push
jle
ins
pop
jo
or
mov
test
into
xor
dec
adc
sub
xor
pop
xor
pop
mov
aaa
inc
test
ins
mov
test
and
jnp
in
cmp
mov
sbb
add
in
(bad)
mov
enter
movzx
cmp
jl
addr16
pop
add
jb
arpl
jl
sub
dec
jle
dec
sbb
ficom
push
stos
xor
popf
movs
or
ja
and
call
add
movs
movs
and
dec
pop
rol
adc
inc
sbb
inc
add
push
jmp
or
cmp
nop
sub
test
mov
sbb
or
imul
and
push
jae
call
repnz
xchg
cs
inc
xchg
pop
retf
retf
or
pop
and
mov
mov
cmp
xor
cs
or
aas
les
inc
push
nop
xor
dec
dec
scas
dec
leave
imul
sbb
xchg
inc
je
js
nop
inc
cs
jl
mov
jecxz
call
xor
lea
sub
xor
cmps
pop
js
(bad)
call
mov
mov
je
sbb
sub
out
ret
(bad)
mul
lahf
sbb
push
movs
repnz
xchg
push
sbb
cmp
adc
sub
add
add
fadd
ret
push
push
rcl
xchg
mov
inc
sbb
sub
mov
xchg
push
mov
cmps
push
adc
sbb
(bad)
cmps
mov
mov
pusha
add
loope
stos
nop
jmp
pop
mov
sbb
xor
push
mov
xor
imul
fadd
pop
pop
aam
pusha
push
popw
dec
dec
cmps
into
or
ja
shl
mov
call
or
in
dec
or
push
add
xchg
pop
mov
xchg
cmp
dec
xor
mov
sub
xchg
or
ret
xchg
xor
js
sub
cmc
ret
std
xchg
(bad)
popa
ins
cmps
adc
xchg
dec
jae
sbb
rol
sahf
pop
jmp
es
xor
ror
xor
aam
sub
add
int3
jnp
jb
movs
dec
inc
dec
xor
inc
inc
dec
dec
jae
outs
mov
or
pop
mov
cs
pop
pop
pop
pusha
or
pushf
mov
lea
push
call
and
je
enter
js
jl
cs
mov
mov
imul
mov
enter
pop
(bad)
das
push
xchg
mov
sbb
sbb
movs
or
cmp
add
sbb
add
add
shl
add
fst
or
push
push
adc
push
ret
popf
nop
ror
jne
lea
add
pop
add
and
inc
mov
jecxz
clc
mov
daa
hlt
sub
loop
scas
mov
lahf
jo
mov
dec
test
ja
push
adc
jno
push
xor
cmp
pop
movs
clc
push
dec
jbe
pusha
and
ins
cmps
dec
or
push
cmps
or
daa
loope
call
outs
dec
cmp
or
or
rcl
fstp
test
or
ret
fwait
sbb
add
push
es
aad
add
dec
je
adc
ins
pop
jecxz
das
imul
sbb
inc
daa
pusha
or
add
xchg
aaa
(bad)
popf
pop
jnp
aas
(bad)
fldenv
in
je
(bad)
leave
dec
jns
or
xor
jno
call
add
les
cmps
dec
sbb
jg
adc
out
cmp
and
ss
pop
mov
lahf
and
pushf
lea
iret
jb
push
mov
and
and
mov
dec
and
xor
adc
mov
push
cdq
jne
pusha
add
push
sbb
xchg
das
inc
(bad)
ins
popa
jb
in
jp
and
xchg
movs
or
xchg
mov
push
push
ret
mov
dec
loopne
pop
sub
fiadd
or
sub
in
xchg
dec
add
repnz
xchg
in
ss
lods
adc
(bad)
jb
or
sub
cmp
pop
(bad)
or
mov
pop
sub
mov
inc
xchg
pop
cmp
push
xor
aam
push
les
mov
test
cmp
fnstcw
jge
jbe
sub
rol
(bad)
and
cwde
jl
test
les
cmps
ds
push
arpl
mov
ins
mov
sub
adc
ss
adc
rol
sbb
adc
add
push
push
and
test
adc
jo
add
inc
dec
outs
push
lea
xchg
mov
iret
adc
sub
mov
add
sbb
push
xor
outs
or
call
aam
jmp
cmp
inc
add
add
retf
dec
mov
or
ins
inc
add
daa
add
sahf
add
imul
pop
dec
xor
(bad)
adc
in
popf
dec
dec
and
call
jne
hlt
fcom
daa
fs
or
je
add
push
and
sub
mov
inc
cmp
add
outs
pop
and
or
out
imul
or
push
sbb
in
call
and
mov
jo
mov
ror
test
ror
mov
mov
add
cmp
xchg
mov
sub
push
pop
fnstcw
sbb
sbb
push
cmp
inc
and
and
leave
cmc
and
ret
xchg
sahf
fnstsw
fimul
movs
fcom
add
jne
mov
xor
xchg
icebp
push
mov
fisttp
test
imul
xor
add
ret
pop
leave
dec
mov
sub
cs
mov
lods
lods
das
or
popf
sahf
and
push
xchg
test
push
xchg
adc
xchg
jecxz
das
or
and
add
sub
sbb
push
mov
imul
add
xchg
add
mov
cmp
jne
std
lock
jbe
dec
adc
or
lock
lds
hlt
xor
sub
lods
ret
pop
jp
push
call
push
iret
(bad)
mov
xchg
and
and
aad
cmp
adc
dec
lock
adc
retf
inc
mov
or
sbb
rcr
cmp
mov
imul
fstp
cmp
mov
sub
push
jmp
xchg
scas
dec
mov
dec
push
push
cmp
jbe
mov
pop
imul
cmc
fdivr
xchg
jae
inc
or
prefetch
neg
jle
push
into
adc
loope
imul
add
pop
test
sahf
test
ret
mov
or
xor
ss
adc
mov
loop
cmp
mov
push
lea
cmp
(bad)
xchg
je
(bad)
call
jge
pop
mov
test
mov
mov
add
or
pop
sahf
or
iret
jl
inc
xchg
xor
add
xor
push
xchg
loop
sbb
dec
jne
loopne
sbb
mov
jns
mov
test
xor
dec
and
jmp
out
and
loope
xor
xchg
fadd
inc
lea
jmp
cmp
dec
adc
out
popf
pop
cs
or
cmp
mov
in
das
(bad)
into
and
add
test
add
push
push
mov
mov
sub
jg
in
fld
lea
inc
cmp
or
sbb
sub
dec
sub
jg
cmp
js
jl
adc
push
shl
mov
xor
aam
repz
dec
mov
xor
xor
nop
test
sar
mov
mov
sahf
xchg
pop
push
push
or
push
xchg
pop
jmp
adc
mov
add
push
ret
jb
movs
xor
dec
ins
add
pop
or
sbb
mov
inc
push
or
sub
push
push
sbb
(bad)
mov
or
sbb
pop
push
mov
ins
dec
add
mov
and
push
nop
push
(bad)
push
cmp
stc
pop
sub
inc
loop
std
(bad)
daa
cmps
and
mov
outs
sbb
xchg
mov
in
in
add
dec
and
push
leave
cmovge
sbb
jo
xchg
lods
inc
loope
jge
or
inc
pop
ins
xchg
cmp
daa
add
xchg
xor
jecxz
nop
mov
mov
test
jo
xchg
xchg
adc
cmps
inc
gs
fcom
add
les
sbb
test
push
imul
repz
xchg
xchg
or
push
mov
leave
lock
pop
dec
imul
(bad)
mov
and
cmp
ficom
inc
es
dec
repz
adc
xchg
push
fst
lea
sbb
push
sbb
mov
push
pusha
out
or
cdq
adc
cmp
sub
mov
or
(bad)
ins
std
loop
push
cmp
pop
and
movs
imul
mov
pop
push
pop
jle
pop
scas
and
sub
push
out
icebp
(bad)
dec
inc
push
daa
pop
aas
dec
aaa
cmp
aad
xor
xchg
imul
xchg
adc
push
in
inc
cmp
sub
sbb
inc
dec
inc
dec
lods
xchg
es
rol
and
cld
lock
cmp
push
add
imul
jmp
adc
mov
ins
xor
jle
sub
inc
inc
add
adc
push
icebp
cld
rol
push
mov
in
sbb
sbb
jnp
adc
xor
cld
sub
aad
jno
in
fld
adc
daa
push
hlt
mov
xchg
or
ficom
mov
sub
pop
lock
lock
or
daa
adc
add
pop
add
(bad)
cmp
ja
cmp
ja
imul
dec
and
js
add
cmps
mov
pop
adc
push
push
push
mov
adc
ins
mov
sbb
loopne
popa
adc
cmp
jecxz
inc
mov
add
adc
xor
jbe
fnop
mov
push
sbb
and
mov
pushf
test
xchg
dec
dec
sbb
cdq
mov
ins
cmp
(bad)
xor
sub
pop
gs
mov
(bad)
sbb
jecxz
enter
mov
add
lods
test
pop
or
and
repnz
loop
jne
mov
or
and
sub
push
push
or
mul
xchg
add
test
sub
xchg
enter
adc
retf
retf
ss
push
cmp
jb
loope
sbb
push
cmp
ja
mov
jp
xchg
mov
rol
add
(bad)
adc
cmc
xor
(bad)
sahf
fisttp
xchg
inc
inc
loopne
jne
shl
cmp
add
pop
add
mov
sbb
add
into
fmul
add
add
(bad)
movs
jmp
retf
rol
mov
mov
movs
xchg
or
add
pusha
add
mov
in
xchg
mov
pop
dec
pop
push
pop
sub
ds
aaa
adc
xchg
pop
aas
rol
or
in
add
push
or
or
push
xchg
fsub
and
movs
xchg
mov
cmp
lods
xor
sub
push
jmp
data16
out
imul
popa
(bad)
and
pop
or
mov
inc
mov
add
enter
scas
mov
fild
and
pushf
arpl
or
mov
xchg
inc
loope
clc
js
xchg
icebp
pop
cmp
pop
add
ss
jne
adc
dec
pop
xchg
mov
movs
adc
mov
(bad)
iret
and
sbb
test
mov
mov
fdiv
dec
dec
add
sub
add
or
retf
mov
jmp
sbb
rol
imul
sbb
dec
sbb
add
xchg
jne
mov
test
inc
mov
jl
sub
pop
test
mov
adc
push
push
mov
pop
popa
xor
or
stos
scas
iret
popf
(bad)
popf
mov
das
add
lods
jl
dec
lods
mov
ret
dec
std
pop
sub
and
and
stos
push
(bad)
and
mov
jp
add
mov
test
jno
movs
sub
retf
(bad)
movs
pop
mov
mov
adc
adc
in
ret
and
push
(bad)
leave
ins
dec
or
rcl
mov
nop
or
or
jmp
fnsave
test
icebp
inc
or
loope
push
inc
sar
adc
adc
dec
pop
int3
jno
test
in
inc
fst
mov
lock
popf
and
xor
mov
mov
fstp
sub
add
mov
push
push
inc
test
jecxz
scas
ins
(bad)
pusha
xor
cmp
loopne
fwait
mov
lea
inc
(bad)
jmp
xor
push
add
push
mov
inc
sub
or
sbb
fisttp
sbb
jo
js
data16
or
add
jns
dec
or
push
add
adc
push
sub
dec
add
ret
sub
lods
cmp
mov
ficomp
sub
sub
mov
clc
xor
icebp
mov
rol
or
push
loop
sbb
or
sub
enter
lahf
cmp
adc
pop
mov
sbb
add
fs
jbe
adc
push
or
jle
cmp
jl
add
jbe
cs
add
gs
or
inc
imul
mov
adc
je
inc
jecxz
ins
or
das
imul
pusha
inc
pop
push
xchg
js
lods
inc
lahf
mov
mov
push
loop
dec
add
outs
imul
call
jle
cmp
adc
adc
test
jne
mov
adc
push
test
pop
or
stos
and
or
in
jb
xchg
das
fistp
cmp
ins
xchg
and
jns
or
inc
cmp
shl
sbb
imul
and
dec
ror
adc
add
bound
lahf
xchg
lds
pushf
addr16
mov
fld
retf
int
pop
imul
je
ins
jmp
jae
push
dec
inc
push
cdq
xchg
add
mov
into
test
sti
push
push
mov
add
enter
loopne
mov
adc
dec
jne
div
in
and
cld
add
ja
sub
push
shr
push
mov
pop
retf
or
or
xor
fld
inc
frstor
jae
sub
movs
dec
and
ds
ja
push
add
xor
imul
and
mov
dec
movups
dec
jbe
outs
sub
xor
cmps
jg
fbld
xor
sbb
loope
inc
or
or
sbb
push
outs
dec
dec
sbb
je
lods
mov
das
call
rcl
lock
popa
bound
add
stc
mov
(bad)
sbb
dec
cwde
in
test
add
pop
add
push
xchg
add
or
inc
jge
jae
push
and
les
mov
js
pop
cdq
or
(bad)
or
dec
in
add
(bad)
iret
xchg
push
sbb
adc
idiv
dec
adc
mov
mov
dec
sbb
push
aaa
inc
xchg
xor
xchg
mov
jl
into
xor
inc
cmp
ss
je
rcr
push
xlat
mov
pop
mov
mov
sahf
jmp
pushf
fwait
cmp
pop
ds
add
cmps
(bad)
inc
push
xor
adc
sbb
push
or
cmp
aaa
inc
out
fwait
pusha
mov
sbb
lock
push
imul
adc
test
test
push
test
push
test
lock
push
xor
test
rol
and
in
scas
cmps
addr16
and
nop
(bad)
mov
inc
pop
xor
push
xchg
mov
or
dec
call
cmp
cmp
jle
xor
xchg
adc
jl
adc
hlt
pop
mov
push
mov
mov
retf
(bad)
fild
or
test
cmp
adc
sub
aam
ror
mov
push
lods
shl
out
adc
add
sbb
cli
into
fidivr
sbb
add
push
pop
fmul
mov
aas
popa
dec
dec
stos
push
loop
movs
shl
xor
and
std
inc
jmp
add
sub
ins
add
(bad)
fcom
or
je
push
mov
loope
jnp
and
sar
retf
mov
ror
push
and
pop
cmps
jbe
add
shr
fsubr
sbb
xchg
xor
es
jbe
test
clc
jmp
lods
in
int
stos
dec
adc
rol
mov
dec
xchg
pop
jno
push
jl
movs
mov
push
pop
jo
dec
cwde
push
and
xchg
xor
aaa
jecxz
jns
or
sbb
cs
pusha
jmp
or
mov
adc
cmps
mov
xor
xchg
pushf
test
inc
push
xchg
cs
mov
mov
es
ret
xchg
cmp
xor
lods
addr16
enter
inc
mov
mov
inc
dec
xor
test
sub
mov
add
repnz
mov
mov
jmp
sub
push
add
mov
sub
mov
inc
cmps
push
enter
imul
dec
dec
dec
dec
iret
dec
shl
dec
mov
and
xchg
sub
mov
sub
dec
and
sub
retf
push
or
stos
mov
in
add
shl
mov
jnp
and
mov
outs
and
clc
push
jne
fcomip
jge
and
ins
jmp
sbb
jle
add
das
cmp
loopne
push
add
pop
pushf
fidivr
lods
ss
jle
mov
jmp
add
adc
add
out
es
shl
(bad)
sbb
mov
jl
jne
loopne
dec
call
sub
xchg
cmp
call
or
popa
pusha
leavew
jmp
ins
leave
jo
or
rcr
pop
sub
retf
lock
xor
and
ins
pop
or
test
pop
pop
and
or
jl
in
int
jmp
pop
adc
test
nop
ret
sbb
xchg
bound
sub
push
add
addr16
loope
ror
pop
ins
rcr
xchg
aad
sbb
nop
lock
dec
lea
je
or
push
mov
or
mov
imul
stos
lods
pop
test
xor
fld
stos
adc
xchg
mov
add
adc
outs
and
sbb
pop
shl
add
xor
and
or
jge
dec
and
cmp
adc
in
and
lods
out
mov
js
gs
add
neg
call
jnp
rol
mov
jg
sahf
xchg
inc
push
or
xchg
xor
sub
mov
jmp
mov
fdiv
movs
jge
and
inc
pop
mov
mov
jne
and
cdq
adc
dec
mov
mov
pop
fcmovu
sub
sub
mul
mov
mov
dec
dec
aam
dec
hlt
mov
ret
pop
loope
lock
inc
pusha
nop
lods
lods
adc
ins
mov
loope
out
sub
daa
jne
jmp
cdq
xor
shl
mov
mov
nop
or
or
clc
icebp
das
push
push
nop
mov
adc
int3
scas
int3
in
and
aad
mov
xor
test
xor
scas
add
push
test
dec
add
es
lods
test
mov
jge
out
sbb
call
pop
jo
xchg
mov
or
sbb
std
enter
out
xchg
push
push
adc
mov
adc
iret
ror
gs
rol
les
fcom
data16
data16
mov
jne
or
or
lods
add
and
adc
bound
mov
jno
mov
cld
rcr
or
test
mov
test
gs
lea
dec
and
push
push
adc
or
cmp
sbb
and
push
jmp
add
int3
and
outs
jne
dec
push
or
pop
and
movs
sahf
pop
rol
add
jo
and
add
addr16
jp
dec
xor
mov
add
add
cmp
call
in
jge
cmp
add
add
aaa
ret
sbb
mov
inc
and
aad
xchg
test
add
mov
push
mov
or
stos
movs
fsubr
xor
inc
inc
jbe
add
inc
jo
mov
out
jle
(bad)
adc
movs
add
scas
jmp
fsubr
std
mov
pop
out
adc
gs
test
inc
xor
add
push
adc
jle
add
pusha
adc
mov
jl
lods
inc
cli
xchg
sbb
adc
xor
dec
add
inc
in
ret
add
inc
mov
xchg
xor
add
push
dec
sar
push
dec
or
inc
xchg
sub
xor
scas
mov
rcr
or
push
add
lods
push
(bad)
and
add
call
jp
pop
xchg
jl
or
adc
sub
inc
cmp
sbb
jne
mov
je
pop
out
add
dec
mov
mov
push
or
ss
repnz
mov
ds
add
push
cmp
ret
fmul
inc
cli
inc
hlt
xor
cmpnleps
and
and
and
scas
popa
sub
sub
cmp
cld
inc
cdq
cmps
mov
call
xchg
mov
loopne
fs
inc
pop
xchg
in
retf
out
in
test
adc
or
add
dec
cli
add
inc
data16
fldenv
jge
js
ror
jo
cmp
ret
push
pop
sub
sbb
imul
call
xchg
add
push
pop
sub
add
loope
adc
push
xor
movs
sub
sub
adc
dec
or
push
jmp
rcl
sbb
cdq
dec
(bad)
sbb
inc
push
or
aaa
pop
lea
mov
mov
add
les
and
sub
push
data16
push
pusha
add
sbb
sbb
jge
popf
pop
sub
push
mov
mov
(bad)
or
fcomp
and
rol
mov
es
lock
sub
dec
les
xchg
xchg
cmp
fisttp
mov
ds
inc
rol
sub
rol
mov
test
mov
mov
aam
in
retf
test
push
mov
clc
cld
dec
inc
mov
fdivr
fs
dec
pop
mov
in
sti
xchg
les
xchg
push
adc
inc
cwde
push
es
push
inc
xor
lea
ds
sub
shr
mov
in
and
mov
sub
cmp
pop
mov
nop
add
loope
dec
dec
pop
push
and
ja
icebp
aas
add
jbe
jg
test
add
or
out
adc
inc
pushf
mov
imul
loope
lock
inc
rcl
and
rol
gs
cmp
xchg
xor
add
pop
nop
out
pusha
mov
scas
mov
sbb
add
and
and
mov
clc
adc
mov
movaps
pusha
test
jle
les
cld
push
add
call
adc
adc
pop
jmp
not
add
sub
sbb
pandn
pop
pop
ror
pop
mov
sar
inc
and
mov
mov
push
rol
int
xchg
and
add
sub
mov
or
aaa
add
mov
iret
in
movzx
push
sub
lea
or
pop
adc
ret
and
sbb
cmp
dec
sbb
lock
adc
retf
fcomp
jge
rcl
mov
sbb
shl
push
sub
dec
(bad)
add
add
sub
rol
movs
adc
add
add
push
in
fst
xor
jns
sbb
push
xor
cdq
sbb
loop
add
sub
adc
sub
ret
test
dec
sbb
ja
mov
jmp
xchg
sbb
les
mov
popa
add
jno
stos
dec
inc
push
mov
push
shl
sub
les
adc
inc
and
sbb
into
adc
jle
or
es
dec
ins
jne
loope
sbb
push
add
xchg
lock
loopne
mov
aaa
sbb
mov
jmp
dec
lods
xor
add
stc
jns
rol
jne
imul
add
jle
pushf
ret
jle
mov
cmp
add
add
fidiv
out
xor
sbb
icebp
idiv
jecxz
cmp
dec
push
jg
pop
cmp
mov
stos
in
and
add
dec
or
or
xchg
pop
cmp
dec
pop
mov
inc
jmp
and
adc
sbb
retf
ret
jno
mov
dec
mov
or
mov
and
stos
test
sbb
mov
sub
jns
add
jle
or
and
jbe
cdq
pop
shl
(bad)
outs
daa
dec
arpl
test
mov
movs
retf
or
or
jmp
dec
shl
les
sbb
sub
or
imul
sbb
cmc
sbb
jne
mov
loopne
xor
and
and
inc
mov
pusha
outs
outs
push
inc
loop
fs
add
push
xor
je
cmp
mov
xchg
lods
mov
inc
pop
dec
fist
push
add
push
dec
fwait
jge
sub
adc
sub
push
movs
push
std
cmp
xchg
sbb
cmp
call
jne
int3
jmp
rcl
push
test
add
stos
jns
dec
std
pop
nop
js
cmp
jne
and
xchg
xor
in
ss
test
mov
arpl
mov
dec
je
or
sahf
and
and
icebp
repnz
dec
and
xor
inc
jne
push
sahf
add
mov
shl
xchg
rcr
pop
ret
jmp
jecxz
adc
enter
in
mov
push
jl
pop
mov
sub
mov
fistp
sub
xor
mov
pop
mov
into
push
mov
je
add
js
shl
mov
dec
sub
jmp
push
mov
fs
push
dec
add
sbb
ror
(bad)
pop
mov
add
xchg
mov
or
pop
(bad)
hlt
daa
xchg
adc
pop
dec
sbb
inc
sbb
adc
cwde
or
fsubrp
pop
adc
pusha
cmc
test
into
fnsave
xchg
out
add
xchg
or
sbb
loop
and
and
cmp
push
mov
push
xlat
rcl
ds
add
adc
adc
das
add
add
or
inc
add
push
ss
xchg
add
xchg
sbb
and
les
lock
cmp
mov
or
add
or
add
adc
mov
popa
xchg
js
and
je
or
jno
jb
les
ret
or
mov
pop
pop
adc
test
inc
add
or
add
inc
push
pop
pop
xor
cmc
inc
mov
inc
mov
xchg
dec
add
mov
pop
rcr
sub
push
push
fsubr
inc
jle
jae
jg
pop
inc
xchg
mov
add
gs
or
retf
(bad)
mov
(bad)
stc
imul
add
retf
add
pop
js
imul
ins
stos
fst
cmp
adc
jnp
mov
and
icebp
fld
repnz
push
lock
(bad)
loope
fist
retf
or
or
jo
jne
adc
adc
and
xor
and
fild
scas
das
pop
inc
mov
test
test
or
adc
shl
adc
pop
cs
push
test
mov
cmp
pop
pop
mov
or
push
inc
push
xchg
adc
or
adc
add
fs
cmp
mov
mov
ror
mov
icebp
mov
dec
or
mov
lea
adc
sbb
or
mov
popf
lods
xor
pusha
or
jle
dec
and
inc
jecxz
int
test
dec
in
add
adc
push
cmp
add
push
add
jnp
and
push
or
es
aaa
rcr
test
mov
int
shr
repnz
mov
push
xchg
(bad)
add
mov
rcr
leave
mov
pop
hlt
imul
xchg
nop
sbb
inc
push
cmps
xchg
xchg
and
push
inc
or
mov
xchg
sbb
sub
pop
pop
or
movs
lock
push
sbb
adc
imul
push
pop
repz
(bad)
lock
movs
adc
cld
add
lea
xchg
int
fisubr
ror
rep
mov
aam
add
hlt
xchg
shl
cs
js
push
pushf
and
mov
and
loope
xchg
push
popa
adc
stos
shl
sub
jl
mov
or
xlat
pop
scas
dec
js
inc
push
sub
xchg
sbb
adc
dec
mov
push
mov
cld
mov
fdivr
mov
outs
xor
jb
mov
rcr
fstp
loop
xor
aam
ins
loope
sti
push
movs
pusha
movs
sub
sub
sub
shl
sahf
add
dec
jge
push
jne
push
lahf
imul
mov
dec
cmp
dec
mov
inc
or
das
(bad)
inc
dec
scas
retf
(bad)
jmp
cmp
fiadd
dec
(bad)
cmp
add
fs
add
push
daa
shr
jmp
cmp
sub
sbb
rol
or
and
xor
or
xchg
cmp
push
add
pop
pop
ret
(bad)
add
pop
and
pop
mov
scas
dec
in
sar
dec
(bad)
shr
or
out
fwait
mov
cmp
(bad)
call
mov
cmps
or
test
xor
imul
mov
sub
rcr
sbb
mov
mov
xchg
loopne
test
sbb
sbb
fstp
fist
and
dec
shl
shl
lods
sub
add
rcr
sti
xchg
jb
sub
shr
mov
leave
xor
test
inc
sub
mov
add
ins
cmp
push
jns
push
outs
or
jg
inc
stc
xor
jle
or
and
push
ret
mov
or
dec
pop
aas
inc
push
jno
add
mov
push
call
and
xor
nop
movs
push
sub
pop
xor
nop
and
je
xor
or
and
shr
mov
add
adc
add
or
popf
call
das
pop
or
fs
sub
or
out
xchg
aad
cld
shl
push
dec
enter
sbb
(bad)
pop
loopne
sub
jp
cwde
jbe
pop
push
lock
les
je
push
push
sbb
stc
adc
adc
ret
mov
rcl
sbb
fdivr
mov
xchg
dec
lea
push
icebp
jge
fs
test
push
push
loop
pusha
xor
add
inc
or
xchg
push
add
test
push
rcr
inc
dec
push
test
jo
fdivr
push
mov
push
mov
test
cmp
enter
mov
es
push
aam
sbb
inc
stc
inc
cmovo
jp
iret
hlt
push
adc
mov
sub
ror
rol
bound
arpl
je
dec
je
or
push
sbb
in
jmp
adc
cmp
stc
push
call
push
xor
xor
nop
cmc
xlat
adc
pop
call
into
push
movs
in
ror
mov
jns
jge
(bad)
adc
inc
add
xchg
outs
add
xchg
sbb
mov
lahf
lock
ins
push
ss
and
xor
sbb
fmul
shl
mov
test
and
sub
add
jl
sub
loope
xchg
xchg
stos
dec
bound
clc
jle
push
into
lea
sti
scas
add
or
inc
add
add
push
cld
popa
push
pop
xlat
shl
jae
test
movs
loope
push
rol
adc
jo
xchg
test
and
cwde
xchg
or
test
xlat
pop
push
fmul
push
add
add
in
mov
test
and
ret
arpl
jl
pop
(bad)
or
add
push
cwde
sub
push
fmul
dec
sbb
adc
std
icebp
adc
sbb
or
mov
inc
and
push
mov
adc
inc
xchg
adc
sbb
ror
cdq
mov
or
nop
jnp
xchg
mov
je
loop
xchg
test
popf
inc
fiadd
call
inc
mov
mov
test
scas
pop
sub
jno
movs
outs
ret
shr
jns
sub
sbb
push
fiadd
mov
xor
or
adc
cmp
mov
cli
push
push
dec
retf
dec
icebp
inc
pop
pop
bound
mov
adc
jno
push
adc
sub
jb
and
cmp
jge
stos
test
and
push
gs
push
stos
xor
xchg
dec
not
push
sbb
dec
push
shl
cmp
mov
mov
inc
adc
mov
push
fadd
(bad)
leave
lods
or
invlpg
push
push
sbb
add
and
mov
push
ins
ret
dec
and
ss
sbb
xor
or
aad
add
cwde
add
inc
xchg
cli
inc
(bad)
addr16
dec
sbb
xor
arpl
xor
ins
add
or
add
mov
push
add
push
mov
fs
movs
pop
sbb
adc
mov
push
and
sbb
test
jno
ret
jmp
sbb
rcr
xor
jae
and
int
push
push
and
and
ds
cld
cmc
dec
and
mov
popa
je
shl
loope
and
dec
inc
pop
in
xchg
push
push
cdq
lea
es
mov
xchg
inc
pop
pop
pop
jg
ret
sub
add
dec
int
pop
adc
dec
sub
test
mov
daa
scas
adc
adc
out
addps
dec
and
inc
outs
loopne
push
jp
adc
and
jb
adc
test
movs
or
ret
in
jnp
sub
or
pop
mov
jge
cmp
popf
mov
ja
inc
mov
and
sub
xchg
jl
push
inc
cmps
mov
xchg
dec
enter
add
pop
mov
add
imul
sbb
and
xchg
idiv
inc
push
mov
and
adc
sbb
lahf
lock
daa
cwde
gs
xlat
sub
and
push
lods
jecxz
cmps
int
enter
inc
inc
inc
sub
xchg
mov
fdiv
pop
in
and
and
jo
xlat
test
xor
mov
call
fwait
add
adc
push
push
jo
mov
or
add
push
mov
outs
sahf
xchg
add
dec
enter
cmc
adc
adc
and
or
pop
lock
lods
jb
out
inc
inc
es
in
mov
jg
mov
inc
push
push
mov
call
mov
inc
loopne
and
adc
and
imul
sub
fmul
sbb
dec
inc
pusha
xor
sbb
mov
xchg
sbb
or
add
bound
or
pop
call
add
mov
sub
ficomp
xor
fnstcw
mov
(bad)
das
pop
call
jbe
xchg
rcl
jg
mov
loop
jmp
adc
jb
outs
push
out
jg
or
dec
adc
push
sbb
push
adc
shl
add
mov
mov
mov
jo
dec
xchg
rol
adc
or
sbb
icebp
jmp
mov
mov
cmp
popa
adc
adc
jne
ret
clc
pop
push
and
mov
xchg
mov
sub
jo
fld
xor
jne
int3
xor
jmp
or
xor
sub
int3
and
shl
xchg
xor
inc
out
sub
ds
aaa
mov
cmps
sbb
repnz
sub
sti
sub
unpcklps
cmp
sub
loopne
dec
mov
xor
les
aaa
dec
data16
mov
movs
jo
cmp
or
mov
xor
or
jnp
loope
add
icebp
xchg
adc
sbb
sbb
pop
mov
jnp
gs
test
push
xor
popa
retf
cmps
xchg
icebp
jno
ins
sbb
not
enter
pop
aam
add
lods
rol
inc
or
pop
ret
popa
push
sbb
fld
inc
and
sbb
test
pop
fwait
mov
xchg
and
test
ds
pshufw
das
and
sub
xor
sub
adc
or
pushf
test
or
popa
ja
or
adc
test
mov
jecxz
mov
mov
repz
inc
jnp
dec
test
out
xchg
adc
mov
and
jns
cwde
dec
add
or
pop
cmc
or
inc
and
sub
sub
movs
int3
test
dec
adc
ret
cs
fldenv
or
add
inc
popf
dec
call
jmp
fucompp
rcl
push
sbb
fdiv
(bad)
adc
sbb
aam
and
sub
movs
sbb
cmp
gs
loopne
mov
add
hlt
out
fsubrp
sub
dec
adc
xor
fdiv
stos
movs
push
mov
pusha
mul
dec
aad
or
ret
(bad)
lods
dec
mov
add
mov
retf
dec
push
nop
pop
nop
lods
push
retf
mov
(bad)
iret
out
test
cmp
mov
ins
ins
push
in
xor
pop
js
int
mov
inc
test
dec
cmp
inc
add
mov
push
ret
movs
(bad)
mov
scas
jge
inc
ss
push
and
jnp
push
pop
add
mov
ret
sahf
outs
jp
dec
out
xchg
and
jg
inc
call
ins
popa
add
in
shl
inc
or
fcomp
mov
sub
push
add
and
pop
leave
(bad)
xchg
arpl
rcr
and
sub
add
(bad)
xchg
xchg
xchg
add
sbb
dec
xchg
lds
and
push
sub
cmp
stos
push
lock
add
into
xchg
add
pop
mov
inc
std
add
cwde
push
add
cs
mov
in
xor
xor
xor
or
cs
dec
or
sub
xor
and
add
pop
inc
and
sbb
pop
pusha
cmp
lock
jo
jnp
or
shl
xor
mov
out
inc
fild
fild
(bad)
mov
dec
add
sbb
push
push
stos
adc
sbb
rol
pop
sbb
add
mov
push
outs
cdq
add
push
adc
in
add
sar
jle
test
rol
and
dec
(bad)
mov
add
adc
cmps
and
add
xor
jg
ins
ret
xor
neg
aaa
jnp
pop
mov
push
cwde
int3
add
xchg
sub
ja
pop
jge
push
pop
call
loop
pushf
cmp
and
popf
xchg
out
out
pusha
add
nop
sbb
inc
test
pusha
mov
or
dec
sti
mov
add
addr16
cmp
sbb
test
mov
cmovno
test
sbb
lea
adc
xchg
add
push
xor
iret
je
adc
lds
xchg
xor
cwde
push
sbb
loope
cli
(bad)
jge
push
xchg
adc
jno
pop
add
mov
cmp
and
push
hlt
add
test
dec
adc
mov
xchg
in
fwait
adc
sub
prefetch
or
jne
pop
xor
lock
fisubr
aam
pop
mov
dec
inc
adc
mov
dec
push
mov
movs
dec
mov
lods
popf
pop
inc
add
add
call
add
mov
or
jmp
dec
push
(bad)
mov
jmp
fsub
je
outs
cmp
mov
movs
cmps
pop
xchg
sahf
jnp
dec
(bad)
adc
inc
adc
mov
leave
and
or
test
mov
inc
dec
rcl
pop
sbb
les
jl
jge
in
add
pop
add
add
add
dec
adc
adc
addr16
jns
add
dec
enter
jl
in
daa
or
mov
or
push
and
inc
sbb
xor
dec
aas
frstor
leave
outs
inc
test
add
push
push
sbb
inc
popa
inc
or
popa
add
xchg
jo
sub
daa
and
add
in
out
push
push
push
jo
sub
jo
xor
ja
jg
cld
mov
sbb
imul
cmp
scas
cmps
push
(bad)
jbe
cmp
sbb
arpl
shr
and
push
js
add
mov
push
ror
ins
add
shl
push
mov
mov
or
cwde
pop
or
and
loopne
xchg
adc
rcr
sub
adc
bound
ds
push
jno
cmp
(bad)
push
lea
push
dec
mov
mov
sub
pop
(bad)
enter
or
in
or
aam
pop
pushf
jno
rol
aam
arpl
js
pusha
popf
mov
jbe
push
dec
cmp
out
push
aaa
pushf
enter
popa
jo
or
adc
mov
and
push
inc
cmp
faddp
ret
cmp
scas
sub
dec
test
add
mov
mov
unpckhps
outs
fld
push
test
shr
sbb
dec
cmps
add
ja
add
mov
pop
mov
fld
dec
and
arpl
dec
xor
adc
sub
mov
push
mov
ins
sbb
xchg
mov
(bad)
xor
pop
lock
or
dec
clc
dec
fadd
xor
cmp
shl
lahf
nop
(bad)
cld
jne
or
mov
lea
inc
cmp
jl
mov
dec
loopne
sbb
xor
xor
sub
pushf
data16
adc
xchg
xchg
xor
in
sub
mov
test
retf
aam
mov
movs
data16
xlat
dec
aam
popf
gs
cmp
cmp
test
sbb
cmp
stos
add
test
retf
dec
ins
loope
jo
jmp
mov
sbb
sbb
test
imul
xchg
sbb
mov
add
rol
or
pusha
fisttp
in
test
int
and
stos
in
popa
add
iret
sub
inc
pop
dec
jecxz
push
mov
jg
hlt
adc
dec
(bad)
xor
xchg
sub
inc
inc
popf
pop
(bad)
cli
mov
inc
ss
mov
imul
adc
je
movs
mov
ret
xchg
mov
sbb
mov
push
cs
cmp
pusha
shl
mov
cwde
inc
nop
setp
arpl
sbb
addr16
stc
push
les
sub
or
int3
push
adc
mov
rcr
mov
cmp
mov
dec
inc
or
mov
inc
mov
mov
push
push
ins
test
daa
push
movs
add
jl
sbb
push
or
movs
clc
rcr
rcr
or
xor
aam
mov
rol
(bad)
pop
(bad)
lods
leave
(bad)
int3
sub
pop
add
test
fs
dec
push
sbb
and
sti
fcmovnb
add
xor
add
add
mov
pop
test
ficomp
rol
jnp
out
adc
cmc
xchg
xchg
sbb
push
add
mov
pop
stc
add
mov
call
and
fwait
xchg
ffreep
adc
movs
cli
or
push
ret
sti
push
js
adc
hlt
sub
mov
add
mov
inc
dec
cmp
stos
loope
mov
mov
mov
scas
mov
test
jnp
pushf
xor
cli
and
adc
push
push
pop
xchg
sbb
in
cmps
movs
sub
dec
aad
test
or
stos
test
es
sub
or
outs
inc
std
mov
or
shl
fldcw
mov
push
stc
cs
inc
inc
clc
(bad)
mov
jmp
xor
dec
cmp
pop
adc
xor
mov
add
sbb
adc
pand
call
add
mov
add
xchg
cwde
mov
cwde
or
cmp
xchg
mov
js
pushf
test
or
hlt
add
or
sar
rcl
aas
hlt
xchg
pop
sbb
ror
dec
ins
jne
sub
or
jne
and
push
mov
inc
rol
push
cmp
and
dec
lock
sub
push
rol
movs
sbb
int
xor
dec
fnstenv
mov
jl
or
bound
push
mov
dec
mov
dec
adc
and
retf
sbb
mov
or
dec
mov
jge
add
xor
enter
lds
adc
mov
loope
ss
sahf
mov
shl
cmp
dec
dec
retf
dec
movs
test
mov
scas
sbb
push
nop
movs
pop
push
ficom
push
inc
(bad)
cmp
jl
loop
xor
(bad)
outs
xchg
push
inc
xor
or
lahf
mov
and
or
lock
inc
gs
pushf
push
enter
inc
sbb
nop
je
inc
js
fwait
and
test
sbb
in
in
sahf
cs
mov
test
aam
and
lock
add
lods
(bad)
pop
jae
movs
test
sbb
sbb
jp
mov
dec
cdq
mov
or
out
push
push
in
hlt
movs
sbb
xchg
jns
adc
inc
popa
mov
call
(bad)
pop
lea
fwait
sub
cdq
in
dec
sub
or
jmp
or
loopne
push
jno
push
jbe
(bad)
(bad)
cmp
repnz
adc
jb
ja
xor
jmp
loopne
pop
dec
jmp
inc
xor
jle
xor
loop
dec
ror
mov
daa
and
jb
jae
xchg
adc
push
out
(bad)
pop
sub
xlat
adc
movs
adc
or
test
mov
mov
jg
pop
mov
paddw
int3
push
cdq
mov
(bad)
shl
cs
pushf
inc
and
outs
retf
add
jmp
mov
mov
adc
pop
fmul
mov
shr
test
sbb
adc
movs
sub
in
fs
and
sub
inc
xor
fstp
dec
jle
push
fwait
push
scas
mov
lds
jne
movs
add
ret
call
mov
js
push
pop
test
jle
in
clc
and
lahf
sbb
and
mov
ins
add
sbb
jecxz
(bad)
call
dec
and
push
fldenv
test
cli
fwait
lods
cmp
dec
jecxz
(bad)
je
push
push
lods
jne
adc
mov
mov
lock
loop
mov
ret
punpckhbw
push
aam
jl
in
in
(bad)
retf
cmc
push
in
ret
ss
test
iret
and
mov
popa
sbb
sbb
lock
test
test
and
pop
test
sbb
inc
fs
cmps
add
push
dec
icebp
xor
xor
xchg
retf
je
or
rol
stos
arpl
xor
jle
fcmovb
push
push
mov
imul
add
jmp
sub
add
and
ss
out
cmp
(bad)
jge
and
mov
cmc
xchg
or
lods
das
inc
lea
imul
sbb
add
cmp
and
pop
xor
clc
mov
mov
or
add
sub
xor
pop
mul
mov
push
mov
and
cmp
inc
es
push
xor
je
inc
(bad)
nop
or
out
xchg
inc
ds
pop
mov
add
push
out
add
ins
imul
out
call
retf
ja
mov
sbb
xor
call
movs
test
xor
adc
jno
(bad)
into
test
retf
sbb
jmp
mov
rol
jp
jnp
jbe
sbb
mov
inc
(bad)
les
repz
popa
nop
dec
jp
shr
sub
adc
popf
add
sub
xor
cmp
or
mov
push
retf
push
ds
(bad)
jg
test
or
mov
xor
clc
and
dec
pop
call
mov
cmp
movs
je
add
push
(bad)
ret
and
aaa
push
mov
mov
adc
or
in
add
outs
leave
jno
sub
or
mov
js
xchg
icebp
call
adc
mov
or
adc
test
loope
iret
and
inc
sub
test
or
or
loope
jmp
dec
adc
inc
mov
xor
mov
lock
lahf
shl
and
aaa
xchg
pusha
aad
adc
movs
stos
adc
mov
and
fist
fdivr
sbb
mov
fs
jl
xchg
out
xchg
fldcw
xchg
and
xchg
xor
sub
std
inc
pop
push
retf
iret
(bad)
push
aaa
inc
sub
sbb
pop
ficom
sahf
addr16
imul
xor
shl
stc
xlat
mov
dec
sbb
dec
arpl
into
nop
test
dec
mov
sbb
pop
mov
sbb
cmc
rcl
inc
push
lea
jbe
rcl
jmp
lock
xor
pop
and
jmp
les
push
movhps
cmp
retf
movs
adc
push
push
lock
inc
jl
shr
mov
ret
aas
sub
push
mov
dec
loop
nop
std
xchg
push
xchg
inc
mov
or
test
mov
mov
jo
pushf
inc
cmp
mov
popf
inc
and
dec
test
aad
pop
sbb
cli
lods
ror
rcr
out
push
repnz
sub
test
pop
add
fidiv
add
rcl
dec
rol
imul
xor
mov
pop
bnd
aaa
mov
dec
sub
nop
jp
test
das
dec
pop
pop
push
xor
mov
es
sbb
bound
ror
ror
mov
movs
inc
loop
inc
mov
stos
sbb
inc
inc
fisttp
fidivr
push
push
push
xor
fwait
loopne
dec
pushf
adc
mov
adc
pop
inc
dec
sub
sbb
jg
add
add
dec
movs
xor
pop
or
or
sbb
(bad)
je
cmp
mov
sub
push
or
mov
ror
cmovno
add
ja
(bad)
mov
push
fucomp
pop
stos
adc
shl
shr
or
and
loopne
rol
mov
shl
(bad)
pop
mov
mov
(bad)
inc
ror
arpl
mov
push
push
mov
sub
mov
jo
rol
inc
or
int3
xchg
(bad)
adc
enter
inc
add
lea
adc
adc
leave
fcom
aas
inc
push
adc
(bad)
das
imul
in
movs
shl
xor
loopne
sub
jle
add
js
ret
add
test
mov
mov
cmp
mov
sbb
ins
sub
jmp
inc
pop
dec
add
adc
retf
leave
pop
xchg
cmp
pop
aaa
aaa
xor
lods
ins
xor
lock
call
jmp
and
sub
cmps
lods
and
add
lods
pusha
inc
cs
mov
rdmsr
cmc
movs
adc
cmp
push
sub
loopne
dec
cmp
xchg
jl
sbb
pop
sub
aaa
(bad)
and
imul
jne
sbb
inc
or
int3
dec
dec
add
aam
sub
inc
pusha
test
push
cmp
stos
add
adc
adc
dec
mov
mov
jmp
and
jne
in
sti
add
daa
jle
gs
pop
(bad)
loopne
loop
push
fmul
sub
popa
xchg
dec
mov
cmc
dec
xchg
ss
pop
es
dec
push
fwait
lahf
xor
add
cmp
aaa
jmp
or
push
cmp
mov
jbe
and
cmp
inc
and
dec
int
adc
repnz
in
sub
imul
push
xchg
push
inc
push
es
jmp
mov
int3
fwait
loop
rol
mov
inc
xchg
in
add
inc
cmp
add
add
std
or
push
fld
mov
ror
jg
ins
ss
cmp
std
pop
mov
or
adc
xchg
xchg
xor
mov
xchg
push
(bad)
and
aas
and
xor
adc
xchg
div
fisub
(bad)
int3
sahf
or
sbb
int3
outs
push
call
ret
xchg
mov
data16
push
arpl
add
push
sub
setbe
cmp
push
shr
jne
inc
and
jnp
xlat
loop
xchg
push
aad
sub
and
mov
sbb
clc
in
dec
xchg
fmul
dec
cmp
push
fs
jmp
jecxz
mov
rol
add
or
sub
stos
sbb
xor
(bad)
loope
xchg
add
or
gs
sti
aas
inc
std
mov
inc
js
add
adc
jmp
mov
mov
and
adc
fmul
jbe
mov
call
sub
mov
push
hlt
or
lods
div
call
sub
adc
pop
fild
(bad)
das
push
dec
sub
cld
push
push
sbb
add
jl
pop
sbb
mov
dec
mov
shr
and
sbb
dec
or
cli
ins
mov
rol
shl
dec
add
mov
or
or
popf
add
sbb
mov
in
jp
add
sar
and
pop
js
jmp
pushf
push
out
and
jmp
or
mov
shl
pop
test
jne
test
inc
or
push
add
cmp
add
cmp
or
adc
add
shr
addr16
xor
or
cs
inc
jecxz
sub
add
or
out
inc
adc
inc
fild
mov
sbb
or
test
inc
jns
sbb
jmp
push
inc
popf
push
sub
cdq
jl
cmps
popa
pop
pop
adc
js
call
xchg
mov
ins
xchg
test
mov
movs
test
rol
adc
addr16
(bad)
in
mov
sar
xchg
dec
sbb
int3
or
push
ret
push
xor
xor
add
xchg
imul
sbb
adc
xor
test
or
adc
ins
imul
sbb
les
sbb
fdiv
dec
in
adc
rol
push
pusha
xchg
mov
inc
cmp
cmp
int3
in
lods
adc
sbb
or
ins
inc
leave
ss
xor
push
dec
add
jns
test
jno
jo
pop
push
pop
pop
(bad)
(bad)
push
js
inc
or
add
aad
adc
mov
push
push
mov
test
or
jb
outs
add
add
sbb
addr16
pop
add
sar
fidiv
sub
(bad)
out
cdq
xchg
adc
iret
dec
add
inc
sbb
push
push
dec
cdq
mov
dec
mov
shl
or
dec
dec
sub
fs
jmp
sar
add
cmp
or
lods
dec
xor
cs
movs
test
dec
mov
xchg
jmp
test
loopne
push
ss
test
je
xchg
scas
jmp
add
xchg
push
or
aam
mov
mov
je
add
mov
or
mov
jb
ins
push
jle
shr
xchg
jns
dec
rcl
add
mov
sub
test
cmp
(bad)
jl
pop
inc
movs
and
push
inc
jle
sahf
leave
(bad)
and
or
fwait
jmp
fadd
and
and
in
sbb
inc
jmp
add
std
mov
and
push
call
push
std
call
fadd
or
and
mov
adc
test
test
inc
jno
add
aad
add
and
test
push
dec
mov
push
push
shl
mov
loop
and
fmul
(bad)
and
mov
inc
inc
push
icebp
cmp
dec
mov
bound
mov
push
psraw
cmp
xor
movs
jbe
mov
inc
arpl
sub
sub
mov
and
in
add
movs
movs
or
jne
or
scas
add
movs
jns
push
ds
cmp
xlat
ins
adc
ins
adc
jne
jp
mov
push
inc
in
sbb
xchg
and
xor
xchg
adc
jmp
or
push
int3
xchg
jo
test
cmp
pop
cdq
push
push
dec
shl
xor
adc
pop
add
sub
adc
add
push
dec
xor
movs
or
or
sahf
loope
outs
push
adc
jge
(bad)
adc
adc
test
fistp
fisubr
les
fdiv
retf
add
fdiv
idiv
cmovs
ret
in
mov
cmps
gs
pop
popa
or
inc
cmp
lds
xchg
push
js
adc
add
aaa
dec
cwde
cmp
adc
es
repz
add
shl
jnp
das
jnp
dec
sbb
fadd
cmp
xor
xor
sbb
dec
add
nop
data16
mov
or
in
or
or
and
mov
retf
stos
movs
jecxz
out
adc
fmul
loopne
cmp
and
es
sub
add
stos
mov
xchg
xor
popa
jmp
cmp
push
push
nop
push
cmp
loope
push
sub
jmp
jl
pop
mov
sbb
dec
mov
adc
mov
call
mov
retf
dec
sbb
out
sbb
xor
sub
push
neg
push
adc
push
adc
in
sbb
dec
or
ins
and
adc
xor
inc
and
or
inc
mov
imul
mov
(bad)
lock
push
movs
cmp
in
xor
aam
movs
adc
and
cli
xor
or
(bad)
sahf
or
retf
enter
(bad)
xor
mov
inc
add
shl
mov
loope
sub
mov
nop
add
push
fist
sub
xor
add
xor
or
jnp
xor
add
fs
cmovge
jnp
adc
push
sub
je
enter
loope
add
das
cmps
and
bound
push
jo
dec
mov
xor
push
jno
push
call
ins
xchg
cmp
test
fs
pusha
xchg
fisubr
cmps
push
push
out
pop
adc
jge
push
inc
sbb
pop
mov
xchg
mov
sbb
test
mov
sub
mov
cdq
inc
mov
sub
ss
inc
pop
lods
shl
pop
add
add
dec
aaa
test
xchg
inc
in
dec
push
mov
push
mov
pop
loop
mov
adc
or
fiadd
pop
cdq
sbb
lea
in
mov
push
mov
dec
mov
sub
add
sub
lods
out
add
inc
test
cmp
and
movs
icebp
sub
clc
pop
leave
loopne
out
add
xor
leave
push
or
adc
xchg
pop
xlat
stos
jnp
hlt
lock
loopne
xchg
cmp
(bad)
mov
sub
mov
pop
and
loope
int
push
lahf
and
mov
and
or
sbb
sahf
sbb
dec
enter
cmp
stos
pop
scas
cld
sbb
(bad)
pop
mov
or
mov
mov
cmp
sbb
jle
mov
dec
jne
pop
adc
je
loope
adc
inc
xor
sbb
mov
pop
xor
(bad)
inc
cmp
add
ret
or
rol
xor
sar
jne
faddp
jae
mov
fst
mov
add
pop
inc
arpl
jmp
adc
test
adc
jb
sbb
or
je
cmc
ret
loope
xor
rcl
test
cmps
mov
inc
mov
push
retf
repnz
repz
mov
xchg
add
jmp
sbb
aam
adc
rcl
lds
xor
mov
mov
js
aaa
and
sbb
std
add
imul
sbb
jnp
movs
push
mov
add
push
pop
stc
dec
and
(bad)
mov
movs
ds
cmp
add
add
add
and
jmp
xor
ja
cmps
sbb
int3
aaa
jns
leave
add
call
mov
and
sbb
inc
enter
add
or
inc
sub
fsubr
je
loope
in
mov
push
daa
out
retf
ins
sbb
pusha
dec
adc
jnp
add
mov
clc
mov
and
cmp
inc
hlt
mov
adc
adc
aam
(bad)
sub
in
sbb
sbb
aam
sub
shl
mov
inc
jmp
mov
lds
mov
(bad)
in
sbb
xor
adc
mov
jge
sahf
adc
fisttp
je
enter
adc
(bad)
cdq
test
inc
dec
popa
test
or
mov
or
jmp
mov
lock
xlat
jmp
ret
xlat
ss
sbb
inc
retf
test
xor
push
mov
push
and
adc
mov
imul
(bad)
adc
jns
adc
cmp
inc
ds
and
std
(bad)
adc
adc
mov
scas
out
and
mov
shr
sub
or
and
fs
les
or
sub
pop
mov
add
or
inc
leave
xor
(bad)
into
inc
pop
dec
popf
in
ret
div
nop
test
test
adc
and
icebp
xor
enter
add
or
xchg
inc
adc
sub
shr
in
jg
xchg
pop
ss
add
sub
push
in
or
or
loope
adc
pusha
push
xchg
aaa
ins
fstp
ror
out
sahf
mov
popa
push
or
mov
or
(bad)
data16
xchg
cld
and
mov
dec
adc
leave
add
push
dec
rcl
xor
xor
push
adc
rol
push
test
jb
xor
sub
mov
lea
int3
and
dec
add
sbb
mov
scas
add
pop
lock
mov
int3
xor
rol
xchg
jne
cmp
adc
add
adc
lahf
mov
jmp
icebp
pop
dec
data16
xor
mov
retf
fdiv
adc
pop
inc
or
adc
sahf
add
arpl
inc
dec
xor
iret
add
dec
pop
movs
jg
dec
xor
inc
int
and
push
and
push
adc
inc
bound
or
(bad)
and
adc
xchg
jmp
sti
out
cld
int3
adc
jg
iret
cmp
fisubr
movs
or
inc
(bad)
sti
retf
mov
adc
push
ins
aad
ret
sar
cmp
push
mov
push
cwde
fstp
mov
mov
push
mov
xchg
movs
stos
adc
movs
push
repnz
lds
and
add
fdivr
shr
xchg
lahf
mov
je
push
xchg
and
inc
je
mov
dec
and
inc
daa
xchg
push
dec
cmps
push
dec
mov
movs
and
xor
leave
sbb
repnz
mov
and
pop
clc
or
test
test
sub
lock
in
lahf
lock
aam
mov
push
cmps
inc
jmp
push
inc
push
sti
bound
in
mov
push
or
and
addr16
call
jnp
mov
cmps
sub
daa
sub
adc
in
popa
and
pop
push
in
adc
imul
pop
loopne
pop
xor
loopne
repz
js
dec
or
fdiv
neg
or
mov
mov
push
lock
adc
xchg
jo
aaa
sub
mov
push
or
sub
mov
scas
add
xchg
daa
and
cmc
imul
or
or
scas
adc
and
retf
pop
aaa
add
cmp
mov
pop
inc
(bad)
loopne
sbb
mov
sub
movs
pop
adc
hlt
rol
gs
cwde
adc
and
fcomp
xchg
aam
cwde
nop
dec
push
in
je
dec
loopne
push
add
add
pop
inc
pop
and
nop
add
(bad)
xchg
fmul
push
mov
ror
imul
mov
vprotb
mov
mov
gs
cmp
cmp
mov
lock
mov
adc
xor
add
dec
cmp
cmp
(bad)
mov
ins
pop
dec
adc
dec
or
sub
test
xchg
not
inc
je
inc
mov
and
aad
popa
sbb
inc
jecxz
push
xor
sbb
inc
js
adc
push
ficom
push
mov
or
push
test
pop
hlt
mov
add
pop
xor
push
test
add
aas
dec
or
sub
rcr
jl
add
mov
inc
dec
mov
mov
adc
and
xchg
or
dec
movs
lock
and
lds
inc
movs
adc
adc
call
out
test
and
pop
in
push
mov
pop
sahf
cs
adc
or
dec
adc
pop
xchg
cmp
ja
sub
mov
and
cmp
or
fsubr
repnz
mov
sub
jecxz
(bad)
and
popa
loop
imul
sahf
xchg
jbe
sub
inc
adc
push
push
test
mov
retf
or
pop
adc
arpl
jae
mov
add
xchg
je
add
pushw
dec
and
mov
mov
out
imul
and
(bad)
(bad)
lods
lods
jge
or
iret
adc
fistp
push
rol
push
aaa
cmp
js
jl
sbb
sub
fisttp
xchg
add
mov
cmp
pusha
pop
push
movs
mov
call
xchg
retf
in
in
dec
inc
cs
pop
loopne
loopne
lods
pop
call
xchg
inc
sbb
(bad)
rcl
or
ror
push
xchg
xor
test
push
add
add
add
sub
or
pusha
rol
cld
xor
inc
push
call
or
xchg
cmc
xchg
rcl
(bad)
cmp
pop
mov
mov
shr
mov
movs
inc
dec
les
jns
cmp
ret
outs
mov
es
sub
mov
or
pop
xlat
and
jle
or
and
and
pop
adc
add
scas
push
sub
pusha
and
movs
sub
fimul
icebp
and
dec
or
fdivr
sbb
fldenv
xchg
dec
xor
push
cmp
or
add
cmp
inc
js
adc
sbb
call
stos
jg
push
and
es
mov
cmp
or
mov
dec
cmps
hlt
push
and
add
test
jbe
lock
xchg
sbb
icebp
jg
lea
sbb
es
push
mov
xchg
jo
int3
sub
sub
jo
inc
jbe
iret
sub
cmp
adc
popa
fisub
sti
popa
pop
cli
cmp
sbb
or
push
not
mov
inc
cs
lock
adc
or
adc
mov
xchg
adc
xor
pop
inc
sbb
pop
movs
lods
sub
test
sar
inc
inc
jae
add
pusha
dec
adc
xor
prefetcht2
in
ds
push
or
inc
dec
jmp
mov
xor
loope
mov
ins
inc
and
(bad)
in
fucomi
call
adc
xor
rol
sub
jmp
sbb
nop
cmps
in
inc
cmp
push
clc
sbb
mov
jg
pop
xor
push
xor
in
push
cwde
adc
aad
mov
aam
jle
iret
mov
push
xchg
ins
cmp
test
loopne
lea
jecxz
cmp
jmp
jl
int3
movsx
sub
jno
sub
push
shr
jb
sub
adc
in
or
add
icebp
mov
pop
xchg
adc
mov
xchg
loopne
cmp
and
call
dec
pop
xchg
and
add
jp
aas
push
retf
and
inc
adc
arpl
push
sub
lea
je
(bad)
sub
(bad)
cmp
xchg
loope
ret
aaa
mov
ja
jge
inc
sbb
movs
sar
in
mov
ror
or
sbb
push
shl
aam
fdiv
push
and
push
or
int3
and
xchg
push
dec
repz
adc
call
and
test
cmp
add
inc
push
mov
add
dec
outs
cli
ja
mov
pushf
loope
or
pop
sar
jle
sbb
pop
enter
xchg
inc
scas
xchg
fs
pop
mov
dec
(bad)
jae
(bad)
aaa
jmp
pop
mov
lods
(bad)
cld
adc
jne
aam
jg
xchg
and
fld
leave
and
(bad)
lods
fmul
pop
adc
cli
push
test
mov
mov
add
lock
into
pop
movs
stos
sub
loope
call
and
and
cmps
add
adc
call
dec
inc
shl
sti
mov
pop
in
inc
dec
mov
(bad)
dec
push
add
dec
lods
add
cdq
add
stos
ret
sub
pop
js
add
lods
wbinvd
inc
cmp
xor
mov
pop
xor
add
aaa
fld
pop
js
pushf
cmc
scas
retf
pop
or
fstp
rol
ret
cs
adc
push
push
fstp
fst
in
or
xchg
test
cmps
fs
mov
inc
xlat
cmps
add
arpl
inc
add
adc
and
int3
popa
lea
add
into
pop
dec
daa
or
adc
(bad)
(bad)
jmp
push
mov
adc
add
pop
dec
pop
mov
mov
popa
ret
aaa
mov
sub
xchg
es
or
scas
(bad)
mov
push
test
mov
add
add
aam
dec
cmps
mov
fs
rol
cmps
xchg
jg
mov
add
jge
sbb
or
cmp
mov
fisub
xor
push
stc
jnp
inc
sbb
stc
and
stos
pop
leave
cmps
cmp
sahf
add
pop
fiadd
cs
stos
or
sub
outs
loop
inc
sub
je
test
popa
xchg
fld
out
fmul
ins
inc
and
fcomp
adc
lock
fld
cmp
icebp
sub
adc
mov
sbb
dec
jns
and
jmp
shr
xchg
mov
add
push
mov
and
push
push
pop
pusha
cdq
push
sbb
jbe
scas
adc
sbb
lock
ret
or
xor
or
lods
shl
popa
mov
sbb
mov
pop
ja
mov
adc
enter
xor
lock
retf
jnp
push
or
ret
push
add
sar
pop
sub
and
dec
push
add
inc
sbb
push
sub
or
inc
pushf
adc
sbb
xchg
mov
lea
and
je
inc
cmp
and
mov
cmp
sbb
outs
sti
add
adc
xor
xchg
mov
fldz
xchg
nop
add
xchg
sub
jbe
or
dec
mov
push
mov
out
mov
sbb
fnstenv
mov
and
leave
mov
bnd
mov
sahf
dec
loop
sbb
dec
adc
add
js
xchg
or
js
inc
add
sbb
push
xor
fwait
iret
and
fsubrp
pushf
add
inc
mov
push
mov
loope
adc
pop
repz
sub
mov
ss
cmp
push
js
je
push
mov
sbb
jnp
mov
adc
lahf
imul
dec
aam
test
inc
inc
pop
xor
mov
jne
or
jns
mov
push
daa
in
out
icebp
dec
cmp
sbb
punpckhwd
shl
jo
daa
dec
or
xor
dec
add
jmp
mov
cwde
mov
push
dec
or
adc
retf
or
sar
or
ja
sub
enter
and
ret
icebp
test
sbb
sbb
xor
imul
cmp
adc
cs
popf
push
xchg
inc
popa
push
cdq
in
in
xor
pop
push
xor
xor
lds
adc
fsub
sbb
jae
push
call
int3
push
int
mov
or
in
addr16
std
inc
nop
mov
inc
in
test
xchg
inc
xchg
dec
sbb
inc
push
pop
in
dec
pop
dec
loop
cdq
inc
dec
fisttp
nop
rcl
imul
test
test
loope
rcl
inc
xchg
or
push
sub
mov
or
js
pusha
push
xchg
xchg
outs
or
push
fild
jbe
xor
dec
daa
pop
nop
cwde
adc
pop
add
pushf
push
add
inc
sub
ds
push
push
out
pop
cmp
dec
pop
push
leave
dec
add
aad
inc
jl
imul
mov
mov
inc
popf
jle
neg
pop
inc
dec
push
shl
ret
push
add
retf
test
gs
ret
jmp
add
push
push
dec
or
out
and
push
ror
xchg
xchg
pop
mov
adc
inc
cmp
(bad)
sub
add
sub
retf
or
retf
push
fnstsw
push
dec
stos
xchg
mov
adc
jo
icebp
hlt
adc
dec
sbb
sub
inc
ss
jge
add
xchg
jne
xchg
pop
loopne
adc
je
movs
inc
or
in
in
das
iret
ss
inc
les
inc
adc
dec
sub
retfw
test
inc
mov
adc
add
sbb
es
mov
sahf
ret
cwde
xchg
jne
in
sub
jmp
ret
fadd
push
out
repz
pop
push
ins
enter
pop
sti
jne
fstp
adc
test
pop
mov
lods
jne
test
mov
loope
push
jle
push
adc
imul
cmp
clc
jp
mov
rcl
mov
hlt
jle
push
aaa
push
rcl
mov
push
jmp
xchg
test
pop
int3
push
ins
aad
lods
jnp
sbb
add
adc
mov
ret
mov
pusha
in
sub
rcl
sti
cmps
popa
mov
mov
or
push
mov
ror
pop
xor
adc
cmp
adc
retf
pusha
pop
inc
sbb
scas
test
je
imul
cmps
mov
jae
sub
push
cwde
or
je
fdivr
jle
push
fiadd
adc
repnz
mov
in
cmp
inc
je
pop
aam
inc
inc
inc
sub
push
sub
rcr
inc
(bad)
mov
pop
adc
popa
sbb
retf
es
movs
mov
or
inc
jle
inc
cs
push
mov
add
in
mov
pop
pusha
ss
cwde
xor
jbe
hlt
xchg
mov
clc
or
mov
push
aaa
dec
jmp
cmp
cmp
sub
or
call
or
push
sub
xor
inc
jae
or
cmp
je
pop
push
sub
movs
arpl
sbb
jnp
push
mov
dec
push
xor
pop
test
mov
rol
sbb
or
mov
mov
push
fwait
adc
mov
cld
or
push
hlt
cmp
or
push
and
cmp
inc
adc
clc
adc
inc
push
sub
and
push
or
cmc
adc
dec
adc
xor
dec
in
je
fs
push
ins
xor
pop
and
xor
daa
jmp
push
dec
pop
pop
das
popa
dec
adc
mov
loope
push
scas
ins
or
add
or
add
hlt
xor
mov
jl
push
shl
fdivrp
sbb
in
sub
inc
inc
mov
pop
or
jmp
dec
xchg
dec
pop
vdivsd
mov
ror
mov
jns
jecxz
adc
popa
inc
jmp
sub
push
xchg
out
leave
cmp
cmp
jo
add
movmskps
mov
sar
dec
shr
xchg
push
push
mov
jmp
cmc
xchg
jge
dec
push
lock
jo
sub
mov
mov
daa
fst
jae
jo
mov
pusha
rol
mov
nop
inc
shl
mov
pushf
(bad)
xchg
adc
pop
pop
sub
retf
daa
sub
mov
dec
je
xor
idiv
jmp
repnz
add
adc
pop
fld
in
psubb
xchg
push
adc
ret
cwde
mov
mov
xor
(bad)
adc
jnp
or
push
xchg
push
icebp
add
push
(bad)
hlt
enter
cmp
imul
mov
les
lea
xchg
mov
mov
adc
cli
retf
inc
cmc
retf
xor
add
dec
add
ret
mov
movs
xor
ja
cmps
cmp
mov
and
xchg
and
dec
rol
cmps
or
mov
rol
mov
mov
imul
sub
cmp
push
mov
jno
aam
adc
stos
xor
xchg
mov
xor
mov
sbb
rcl
mov
adc
mov
dec
enter
lahf
sub
jle
add
stos
and
inc
stos
mov
pusha
sbb
ds
js
es
or
mov
inc
and
in
movs
xchg
adc
jne
add
punpckhwd
add
sub
shl
add
ja
or
lahf
mov
inc
call
inc
inc
lods
arpl
pop
xor
mov
xor
adc
mov
sub
sbb
outs
lods
nop
fstp
push
mov
loope
adc
daa
sbb
(bad)
sub
pop
or
sahf
loopne
fsubr
cmc
mov
cmc
cmps
test
mov
xor
adc
xchg
lock
sub
mov
fadd
ja
sub
push
xchg
add
or
pop
add
(bad)
push
and
sbb
sub
sbb
lock
adc
jns
ret
dec
jae
(bad)
loopne
pop
iret
and
pop
and
imul
add
rol
test
jge
push
push
icebp
push
adc
ja
push
cmp
and
push
inc
cmps
inc
inc
pop
cs
inc
sub
call
xor
iret
xchg
(bad)
cmp
dec
push
daa
and
push
mov
push
(bad)
arpl
add
cmc
int
dec
adc
dec
xchg
sub
inc
inc
xchg
add
sbb
js
push
adc
sbb
mov
push
pop
cld
and
cmps
and
pop
push
and
push
adc
adc
inc
jbe
xchg
mov
add
icebp
mov
cwde
mov
pop
or
cmp
test
clc
xor
pop
mov
xor
dec
jo
cmps
ret
test
inc
cmp
inc
mov
add
pop
test
mov
xor
cdq
gs
call
cmps
push
sub
mov
push
push
xor
add
cs
popa
jno
jecxz
push
sar
call
inc
adc
sub
mov
adc
call
repnz
or
mov
mov
std
xchg
(bad)
outs
rcr
push
sar
jb
xor
out
xor
xor
add
repz
test
jge
ret
adc
adc
lock
sti
in
js
sbb
inc
inc
aas
inc
cmp
inc
enter
sbb
cmp
sbb
dec
sahf
mov
xchg
mov
push
add
and
rol
lods
mov
pop
sub
jg
and
mov
push
jl
push
ins
jnp
pop
sub
dec
push
movs
loop
cmps
fsub
push
pop
test
fwait
not
mov
add
dec
jge
inc
mov
mov
adc
mov
pop
pop
and
dec
sbb
inc
rcl
or
adc
or
scas
shl
sahf
cmp
test
cmps
cmp
and
push
loop
xchg
into
retf
adc
inc
add
sub
repnz
out
ret
adc
mov
loopne
inc
cmps
lds
cmp
pusha
pop
sbb
sub
data16
lds
rcl
push
mov
fisttp
sbb
or
cdq
sub
lahf
ins
les
inc
inc
scas
push
adc
mov
xchg
mov
sbb
sub
jne
dec
or
push
rol
dec
daa
mov
(bad)
lods
add
dec
paddq
leave
add
dec
and
cdq
sbb
dec
test
dec
and
add
lock
aaa
f2xm1
push
or
(bad)
repz
cmp
mov
and
adc
jmp
inc
es
leave
and
bound
add
mov
sahf
cmp
cmps
ret
leave
or
pop
push
lods
add
add
cli
push
repnz
and
and
mov
mov
pop
sbb
stos
rol
dec
or
add
div
movs
icebp
dec
pop
rcl
push
mov
call
in
pop
dec
jle
imul
add
mov
popf
and
adc
push
jl
fild
inc
and
nop
cdq
cmp
arpl
mov
(bad)
call
adc
call
mov
jp
sbb
loopne
mov
add
(bad)
mov
mov
jae
lock
or
and
push
push
jnp
xchg
retf
iret
(bad)
xchg
adc
jp
out
(bad)
mov
push
dec
sub
(bad)
stc
in
loopne
dec
ret
inc
lods
jo
lods
pop
xor
enter
or
xor
nop
xchg
sbb
xchg
or
adc
mov
and
mov
mov
nop
or
lea
xor
dec
(bad)
fld
imul
mov
sub
iret
push
(bad)
cdq
push
mov
add
or
jecxz
nop
cmp
repnz
pop
sub
inc
mov
dec
add
sub
les
pop
pop
or
popf
xor
test
pusha
dec
(bad)
push
and
pop
xor
mov
add
adc
movs
out
xchg
fwait
push
add
xchg
or
mov
mov
push
lds
das
and
or
dec
and
or
inc
inc
and
imul
and
fwait
js
inc
je
push
imul
or
nop
ss
or
int3
fs
arpl
mov
or
sahf
arpl
sbb
sbb
inc
xchg
popf
adc
xchg
loopne
mov
inc
jne
mov
push
jae
dec
nop
ret
dec
enter
and
rcl
sub
jae
inc
adc
cmp
mov
pusha
call
push
mov
jnp
mov
cli
pusha
push
cld
adc
mov
cdq
xor
retf
sub
pop
shrd
sar
inc
mov
or
and
or
sub
aaa
(bad)
ss
call
data16
(bad)
icebp
add
mov
mov
jae
imul
adc
test
push
push
mov
sub
pop
jmp
fld
mov
add
test
in
out
mov
sbb
sbb
sub
sbb
xor
aaa
enter
jge
xor
fcom
mov
or
iret
or
ss
outs
mov
jne
jg
jbe
lea
adc
jae
sbb
and
(bad)
mov
dec
add
pop
dec
add
adc
pop
pop
and
rol
sub
mov
add
jle
gs
push
cwde
hlt
and
adc
lahf
dec
xor
add
jge
and
jo
and
mov
jb
xchg
dec
and
dec
cmp
es
inc
movs
or
mov
pop
dec
call
cld
cmps
fstp
fcom
je
inc
hlt
mov
int
jns
jp
jnp
dec
push
jae
jg
adc
out
call
ficom
cmp
add
fld
push
adc
sbb
or
add
inc
dec
imul
jmp
mov
push
xor
out
add
neg
ret
movs
sbb
mov
adc
retf
xor
mov
mov
aas
mov
lock
xchg
ror
push
adc
xchg
add
hlt
mov
data16
pop
lds
add
aad
or
test
and
stos
(bad)
sub
retf
lock
sbb
mov
jbe
aaa
xchg
sbb
enter
sub
and
inc
add
adc
xor
push
add
aam
mov
push
in
je
lods
mov
es
and
test
add
fiadd
xchg
rol
mov
cmp
xor
jl
xchg
mov
lahf
lea
or
mov
inc
aam
movs
scas
mov
push
fadd
pop
cmp
test
mov
jmp
cmp
jmp
cmp
call
pop
cmp
mov
add
add
mov
mov
rol
jg
cmp
or
push
cli
jle
es
dec
push
adc
add
enter
dec
sub
pusha
jecxz
push
arpl
jno
cli
xor
pop
cmp
jl
cmp
mov
(bad)
inc
cmp
les
jmp
jns
push
add
cli
xor
(bad)
fsub
(bad)
or
mov
and
lods
imul
movs
inc
stos
add
fld
rol
mov
sahf
nop
loop
les
mov
jnp
pop
cwde
adc
(bad)
xchg
(bad)
sbb
rcl
lds
repz
or
jne
or
mov
movs
push
pop
(bad)
sub
xchg
adc
dec
inc
mov
test
or
enter
pop
and
movs
lea
add
or
adc
mov
and
dec
js
and
or
inc
sbb
cmovl
dec
pusha
xchg
add
or
aam
ror
leave
(bad)
jmp
cwde
jns
sub
jns
add
jnp
cmp
cli
sub
jg
cmp
jne
inc
mov
pop
(bad)
mov
cmc
sub
nop
rol
imul
movs
jne
leave
sbb
dec
mov
mov
xor
pop
ret
stos
and
ficom
(bad)
sub
je
jmp
push
leave
rcr
cmp
fadd
in
and
out
sbb
add
mov
mov
movs
test
xchg
adc
fsub
sbb
or
dec
inc
ja
add
dec
adc
pop
icebp
xor
jecxz
enter
add
inc
push
fcomp
pop
push
push
add
les
inc
jnp
sbb
dec
dec
std
pop
ss
sub
sub
pop
xchg
pop
fcomp
out
jmp
in
test
push
jmp
inc
or
add
xor
sub
lods
(bad)
dec
gs
gs
mov
push
push
test
lea
or
ret
mov
push
xchg
and
adc
push
mov
fcmovnbe
pop
ror
test
push
int
push
inc
call
xor
movs
lahf
adc
mov
and
push
push
and
sbb
mov
mov
cmp
adc
xchg
les
outs
mov
adc
xlat
es
test
sbb
adc
and
xchg
adc
push
pop
and
rcl
or
retf
rol
icebp
dec
aas
dec
add
bound
mov
push
pop
mov
mov
sub
xchg
jae
sbb
dec
mov
mov
pop
sbb
mov
and
iret
loopne
mov
sahf
inc
in
mov
xor
(bad)
fisubr
leave
repz
fistp
pop
ins
rol
or
fcomp
mov
popa
fimul
jecxz
and
shl
repnz
popa
jb
push
movs
test
fisttp
sbb
ins
pop
gs
dec
fiadd
mov
lods
shl
dec
not
mov
adc
retf
sub
sti
in
les
xchg
pop
jne
pop
xor
movs
movs
dec
and
mov
jne
je
inc
jmp
inc
push
xor
movs
out
push
push
fisubr
or
test
(bad)
inc
pop
mov
(bad)
xchg
shl
ror
scas
mov
aam
ror
push
add
test
pop
in
daa
dec
js
mov
cmp
xchg
das
in
aam
jne
mov
inc
cwde
fbld
adc
pushf
add
sub
jmp
cmp
cli
add
mov
fisttp
xor
jl
mov
inc
mov
fwait
xor
popa
xchg
loopne
or
das
and
dec
dec
ss
sub
adc
fs
fist
or
inc
mov
fisttp
and
xor
mov
xchg
imul
pop
arpl
(bad)
aad
sar
inc
push
sub
sti
dec
xchg
xor
jno
test
js
fs
add
(bad)
shl
xchg
sub
jae
mov
ds
in
pop
and
sub
mov
mov
adc
sbb
xor
sbb
mov
and
pop
rcl
call
pop
and
and
shl
cld
sub
lods
xchg
sub
mov
mov
jo
adc
mov
ret
mov
sbb
ror
add
popf
nop
in
mov
or
or
push
pop
fsub
call
(bad)
add
pop
data16
add
mov
test
jae
fbstp
add
js
fnstcw
and
push
ins
imul
gs
and
xchg
sub
mov
push
lea
sbb
pop
sbb
dec
or
scas
cmp
sbb
pop
mov
int3
dec
mov
sbb
push
(bad)
dec
add
mov
ins
xchg
add
cmps
int
je
add
fs
nop
cld
inc
mov
in
lea
inc
imul
ins
xor
pop
and
in
add
icebp
xchg
out
inc
lock
pop
je
ror
popf
gs
fistp
inc
add
inc
xor
jmp
push
push
adc
out
movs
jmp
cmp
xchg
je
fucomp
dec
jo
aas
and
ret
push
leave
push
stos
hlt
imul
xchg
adc
mov
push
pop
sub
stc
mov
sar
sbb
adc
ret
pushf
cli
pushf
cli
loope
xor
xchg
mov
test
push
movs
inc
loopne
mov
and
sbb
sub
sbb
icebp
sub
test
cdq
pop
ins
pop
or
or
push
cmp
mov
mov
pop
push
mov
(bad)
adc
and
ficom
and
or
mov
test
inc
mov
jne
fisub
sbb
stc
push
and
add
mov
outs
push
out
jno
sub
sbb
push
pop
nop
add
and
nop
xchg
mov
pop
popa
pop
inc
and
and
mov
xchg
lock
out
push
ins
lods
and
push
push
push
es
test
ins
add
xchg
(bad)
xchg
mov
fstp
mov
mov
les
adc
push
jo
jmp
das
je
push
sbb
pop
cmp
dec
mov
call
mov
arpl
sbb
add
push
lods
leave
fcmovbe
push
cmp
add
mov
adc
pop
push
fadd
(bad)
sar
(bad)
neg
push
mov
pop
lods
addr16
sbb
inc
ins
push
call
xchg
in
adc
test
jmp
cmp
xor
mov
adc
call
std
dec
and
ds
add
es
aam
in
icebp
sub
jmp
fwait
mov
xor
inc
adc
rol
xchg
or
ret
mov
movs
cdq
push
mov
pop
or
pop
adc
dec
pop
ror
push
in
nop
jge
pusha
inc
jmp
sbb
jo
nop
xchg
cs
push
jno
push
sub
ja
adc
(bad)
add
fadd
jo
inc
and
aad
sub
int
fmul
mov
mov
mov
das
push
cmp
mov
data16
xchg
test
pop
iret
dec
sbb
nop
pop
enter
mov
inc
js
in
nop
push
cmp
inc
dec
mov
or
push
cmp
hlt
lahf
stos
movs
and
ret
movs
stc
inc
mov
add
xchg
push
add
sahf
xor
test
(bad)
lea
pop
call
xor
pop
popa
inc
mov
cmp
or
add
adc
(bad)
out
daa
dec
ret
inc
mov
add
ins
movsx
outs
add
enter
jecxz
fstp
vmwrite
je
pusha
add
scas
xor
pop
xchg
iret
and
fsubr
jne
dec
call
add
adc
test
jbe
or
and
unpckhps
sub
fadd
test
ja
fnstenv
sbb
ins
or
mov
daa
push
rcl
jns
jmp
retf
lock
mov
mov
pop
shr
ins
aad
jns
xor
add
xlat
mov
fistp
pop
add
in
xchg
retf
dec
cmp
add
pop
bound
and
in
adc
stos
(bad)
aad
adc
dec
inc
sub
test
add
jo
shl
clc
cmp
daa
loope
das
ins
inc
or
or
xor
in
inc
add
push
push
(bad)
adc
pusha
pop
lds
js
mov
into
movs
push
std
push
sub
inc
adc
mov
or
bound
jge
js
scas
push
movs
push
push
pop
mov
sub
fist
js
sub
mov
mov
dec
xor
lock
jmp
xchg
mov
mov
cmps
cld
or
fadd
adc
xchg
and
data16
xor
(bad)
xor
call
adc
inc
push
push
sbb
cmp
das
outs
or
inc
or
retf
jo
xor
sub
push
inc
mov
pusha
mov
cmps
std
or
test
shl
dec
lea
pop
hlt
sub
pusha
sbb
sub
and
js
inc
jmp
aad
dec
adc
pushf
lea
sbb
lock
add
dec
sbb
or
call
or
add
sub
sub
movs
in
clc
add
ret
inc
push
aas
mov
inc
fistp
loopne
mov
ss
add
jo
mov
xlat
cmp
xchg
loope
mov
and
jne
cmc
dec
add
mov
lock
scas
dec
(bad)
mov
jmp
pop
(bad)
xor
aas
test
sbb
adc
repz
inc
popa
mov
mov
pop
dec
(bad)
call
pop
loop
or
mov
adc
scas
push
movs
add
jbe
push
out
fcom
push
or
jb
xchg
in
mov
sub
repnz
call
adc
and
cmp
or
sbb
fild
les
dec
jl
mov
mov
cmps
xor
adc
cmps
mov
xchg
retf
adc
loop
or
mov
push
inc
(bad)
and
adc
test
add
mov
gs
hlt
dec
imul
movs
movs
sub
nop
pushf
inc
sbb
push
xor
mov
mov
aaa
inc
push
nop
jo
jecxz
cld
(bad)
lock
dec
out
cmp
mov
inc
adc
mov
mov
mov
and
out
jg
mov
and
loop
je
cmp
jne
test
push
enter
xor
nop
push
inc
cmp
pop
mov
xlat
es
sbb
and
scas
xor
sub
or
sbb
je
push
(bad)
cdq
and
sbb
pop
push
rol
sbb
test
dec
sub
jmp
enter
sub
ds
cmp
std
and
dec
pop
mov
test
daa
push
pushf
lahf
mov
and
cdq
js
call
fld
or
sub
rol
or
mov
inc
xor
inc
popa
xor
xchg
(bad)
adc
pop
push
xchg
popa
test
pop
jl
mov
test
push
push
call
add
jle
mov
inc
add
adc
adc
add
mov
test
mov
fcomp
xchg
dec
or
xchg
or
or
cmp
ins
bound
mov
xor
push
repnz
imul
pop
jo
cmp
jg
lsl
mov
fwait
or
xor
xor
sbb
ins
jns
ret
pop
int
sbb
or
jmp
add
enter
iret
iret
push
xchg
(bad)
iret
pop
hlt
or
cmp
xor
mov
ror
sbb
jbe
test
mov
clc
cdq
adc
add
pop
push
js
mov
add
jo
jae
xor
bound
leave
je
and
test
or
jg
and
dec
or
ins
sub
jecxz
adc
scas
jl
dec
popa
mov
mov
or
mov
mov
dec
jmp
adc
je
or
fiadd
push
sbb
pop
test
retf
jae
js
push
adc
push
bound
pusha
bound
push
sbb
jmp
and
mov
jl
inc
test
xor
push
es
js
sbb
pop
imul
or
adc
sahf
test
outs
adc
sbb
or
adc
or
aas
inc
or
sub
dec
ror
push
sar
add
cs
loopne
dec
jl
aad
dec
ds
xor
jl
(bad)
dec
add
sbb
pop
jae
inc
adc
dec
dec
in
daa
lods
inc
adc
fadd
sbb
lahf
cwde
test
inc
or
ret
jmp
push
dec
sahf
and
mov
adc
xor
adc
aaa
pop
(bad)
not
jbe
push
outs
adc
sub
sbb
mov
aaa
(bad)
aas
inc
(bad)
mov
pop
test
xor
xchg
mov
xchg
and
enter
mov
movs
add
push
jl
(bad)
pusha
lds
sub
sbb
lea
inc
xor
pop
rcl
add
inc
add
mov
movs
js
enter
sbb
ret
pusha
and
add
cmp
int3
call
je
rcl
and
aas
jmp
inc
dec
test
mov
mov
and
gs
cdq
mov
jo
mov
jg
mov
aas
sbb
jo
jae
adc
rol
sub
add
in
push
in
jmp
and
pop
imul
mov
and
arpl
add
dec
cld
cmp
je
subps
jl
fild
push
pop
and
inc
fwait
movs
jge
mov
or
push
outs
add
push
fldenv
push
cmp
push
out
mov
ins
jl
jns
inc
inc
jl
and
and
dec
rol
mov
adc
jg
inc
rol
jnp
or
mov
and
dec
leave
dec
sbb
lock
mov
jmp
push
mov
jmp
or
xchg
scas
rol
xor
ins
adc
and
fadd
mov
push
dec
mov
jo
fidiv
pop
fcom
or
cmp
das
lahf
mov
icebp
push
js
adc
push
jle
push
and
xor
jge
sbb
ret
cmp
mov
add
jg
and
call
inc
add
xchg
nop
xor
jno
enter
setns
mov
sub
jp
sti
and
inc
adc
fist
test
cmp
mov
pushf
add
(bad)
stc
jb
sub
sbb
test
test
cld
sub
lea
or
add
fdiv
jb
sub
mov
loopne
lea
dec
loopne
dec
es
test
fwait
not
sbb
or
fcom
data16
push
dec
inc
and
sbb
mov
adc
sbb
push
pop
xor
push
add
out
cmps
pop
adc
in
in
dec
mov
cs
mov
in
push
add
shl
in
inc
or
xchg
clc
adc
adc
add
adc
retf
add
cmp
xchg
mov
dec
pop
je
mov
imul
adc
mov
and
xchg
ret
push
jmp
cmp
jae
xor
sar
icebp
adc
adc
push
loopne
mov
or
sbb
fild
pop
cwde
xchg
hlt
xor
jle
out
hlt
jns
mov
inc
mul
inc
mov
ror
jb
and
mov
and
dec
jnp
pop
push
inc
mov
jbe
add
jo
pop
hlt
push
push
xchg
sub
cmp
sub
jge
test
pop
push
xchg
jmp
inc
clc
scas
mov
sbb
aam
xor
outs
inc
add
(bad)
pop
pop
pop
or
push
movs
dec
or
or
push
mov
cmps
(bad)
out
xchg
sbb
pop
mov
push
xor
add
mov
je
aad
les
lock
adc
ds
cmp
pop
mov
pop
es
leave
or
push
xor
inc
or
js
cmp
test
jb
add
mov
cmps
pop
inc
loopne
cli
aam
add
mov
icebp
mov
jne
in
mov
or
das
in
(bad)
into
cwde
push
call
sub
inc
jo
jne
add
add
or
add
inc
push
jle
pop
inc
mov
jl
add
es
add
push
sbb
lds
mov
ror
xchg
out
jo
stc
fwait
add
lock
movs
and
pop
push
call
sub
push
jne
sub
scas
pop
inc
es
mov
loop
and
lock
shl
sub
dec
rol
aam
popa
xor
push
xor
ja
sub
add
xchg
out
sbb
popf
push
js
pop
add
and
sub
outs
imul
dec
jae
das
pop
xor
je
stos
dec
ss
sbb
imul
fstp
cmp
jb
loop
icebp
js
rcl
xchg
add
rol
rcl
and
retf
je
ret
jecxz
mov
sub
imul
adc
mov
loop
mov
ret
rep
(bad)
imul
pop
ins
push
retf
test
das
dec
shl
fdiv
lea
sbb
jge
les
adc
scas
stos
aam
cmp
pop
pop
and
ins
push
add
nop
cmp
or
add
call
mov
pop
mov
dec
mov
ins
loopne
or
lods
adc
sbb
cli
sti
xor
push
push
stos
pop
add
xchg
sbb
push
adc
cli
add
fisttp
sub
aad
popa
cmps
sub
xchg
ffree
sbb
or
loop
ss
(bad)
ret
scas
add
push
cmp
sub
fdiv
push
cmp
add
stos
icebp
(bad)
sub
lea
dec
les
inc
push
push
fdiv
add
in
ret
add
cmp
jb
ret
ins
daa
cld
and
test
xchg
jb
outs
pop
cli
xor
mov
xor
imul
retf
popa
fcomp
sub
xlat
das
test
aad
and
(bad)
(bad)
js
ficom
aad
push
jg
cld
sbb
pop
push
inc
ret
xor
cwde
ret
mov
mov
add
inc
push
mov
imul
in
ss
push
(bad)
(bad)
stos
pop
dec
in
loop
mov
push
fbld
xchg
xchg
pusha
fnsave
mov
push
movs
sbb
test
pop
add
lds
lea
shl
or
cmp
sbb
push
dec
jl
aam
icebp
push
push
inc
sbb
fidivr
add
stos
scas
and
jne
push
test
jo
call
xchg
push
adc
mov
mov
add
inc
in
cli
std
or
jmp
shl
or
loop
pop
hlt
mov
dec
jmp
push
js
les
and
cmp
xor
adc
pop
cmp
push
xchg
push
cld
xor
cmp
rcr
jno
pop
cmp
or
jae
cs
movs
arpl
imul
out
movs
or
mov
pop
push
ror
adc
aam
push
test
je
inc
sbb
pop
mov
mov
adc
sbb
(bad)
push
add
mov
neg
dec
ficomp
push
pop
rcl
clc
aas
jbe
fwait
movs
pusha
hlt
and
aas
xchg
retf
rcl
call
nop
repz
ins
jl
fimul
or
push
adc
loop
and
cmp
jmp
jle
add
push
mov
dec
add
or
xlat
add
inc
jmp
test
mov
push
outs
fcom
or
mov
fwait
cmp
add
por
fild
adc
fwait
xor
hlt
jmp
mov
lock
sub
hlt
lahf
dec
mov
pop
pop
or
mov
mov
inc
push
jns
push
sub
imul
sbb
push
cmps
loope
imul
cwde
dec
in
cmp
and
inc
inc
adc
adc
adc
xchg
adc
sbb
pop
jne
xor
int3
iret
out
sub
sub
retf
xor
data16
cmp
mov
cmp
sub
cmps
imul
movntps
sub
jne
push
or
out
adc
pop
xor
adc
push
push
test
mov
sbb
pop
add
or
test
jne
mov
cmp
sub
xchg
and
mov
into
or
mov
adc
(bad)
pop
adc
sub
pop
pop
in
popa
mov
movzx
mov
adc
dec
fisttp
test
pop
inc
xchg
and
add
pop
stos
or
dec
rcl
inc
sbb
test
adc
dec
fisttp
xor
sbb
mov
mov
shl
ss
mov
add
sub
out
pop
pushf
mov
pusha
shr
inc
lods
mov
xor
fsub
sub
xchg
dec
rcl
and
mov
test
adc
pop
or
push
fisttp
push
rol
(bad)
add
adc
aaa
aam
hlt
pop
mov
add
jmp
add
jbe
add
jmp
or
jecxz
(bad)
out
mov
inc
mov
mov
mov
sbb
push
inc
cmp
jb
xchg
add
sub
or
or
jmp
mov
cmp
pop
(bad)
fiadd
popa
pop
push
rcl
push
mov
inc
ds
je
fistp
adc
ss
xchg
mov
adc
js
push
in
rcl
dec
push
xor
dec
adc
push
cmp
fist
sbb
ret
pop
adc
iret
ret
add
shl
inc
call
add
dec
sub
sub
xor
inc
jg
addr16
addr16
push
sbb
sbb
mov
imul
mov
cwde
add
push
mov
mov
or
ror
adc
inc
add
mov
and
dec
js
push
repnz
imul
push
xchg
push
popa
addr16
test
ja
rcl
mov
mov
adc
shr
mov
dec
inc
or
gs
mov
ja
push
or
fbld
mov
lea
sahf
pusha
arpl
and
popf
or
jne
xor
add
pop
add
scas
push
xor
pop
inc
cmp
pop
arpl
stc
xchg
(bad)
adc
cmp
inc
(bad)
int
mov
adc
rol
pop
add
les
or
mov
outs
fmul
add
xor
loope
dec
rcl
cs
sbb
sbb
adc
pushf
in
push
xor
cmp
movs
xchg
in
mov
lods
inc
jge
mov
dec
sub
in
lock
or
dec
stos
cwde
push
fwait
leave
cmp
ja
push
push
sub
test
add
push
popf
or
mov
jbe
pop
lods
rol
clc
and
es
ds
or
push
inc
sbb
add
rol
mov
push
or
ror
pop
hlt
fbstp
adc
cli
and
add
fcmovnbe
xor
pusha
pop
add
push
jl
test
ds
rol
or
outs
fwait
pop
jle
or
mov
cmp
loopne
push
mov
push
bound
dec
aad
jmp
push
push
xchg
push
mov
cmps
mov
xor
shl
mov
cli
xor
stc
sub
movs
pop
retf
cmp
and
xchg
adc
retf
or
in
xor
mov
js
aaa
pop
mov
lock
dec
pop
(bad)
adc
shl
test
ja
retf
js
sbb
or
inc
mov
hlt
xchg
inc
cmp
stos
pusha
not
mov
push
mov
inc
inc
xchg
or
mov
pop
jmp
loopne
or
jl
mov
lock
das
mov
pop
and
dec
retf
xchg
in
adc
add
mov
jmp
aad
push
sbb
or
jl
fs
push
je
push
cmp
out
stc
shl
jne
shl
sbb
xchg
add
push
push
inc
mov
lods
cmp
mov
dec
jo
add
jp
retf
mov
or
jmp
mov
out
sub
jbe
xchg
pop
div
and
clc
add
inc
or
jp
nop
js
adc
adc
int3
adc
xor
fstp
xor
pop
mov
movs
cmp
scas
xchg
xchg
sbb
adc
mov
adc
sub
popa
jo
movaps
adc
sub
or
lea
daa
push
mov
xor
sbb
mov
or
xchg
mov
sub
popw
mov
movs
inc
adc
aam
push
bound
loopne
sbb
push
(bad)
out
jecxz
and
push
cs
push
aam
push
push
loop
jmp
sbb
pop
retf
mov
xlat
sub
cmps
repnz
push
pusha
not
push
pop
push
outs
pusha
fld
pop
mov
sbb
iret
xchg
loopne
popa
mov
nop
bound
fsub
sbb
pop
pop
push
mov
push
stos
and
jne
pop
mov
add
test
push
test
sar
scas
shl
std
ret
pop
loopne
or
stos
daa
sub
mov
and
sbb
cmp
adc
sar
movs
sti
xor
lea
and
dec
in
cs
or
sub
jle
push
mov
mov
movzx
dec
out
repnz
aam
outs
mov
adc
cmp
mov
rcr
push
shl
movs
rcr
inc
and
mov
sbb
or
mov
je
push
and
cmp
pop
(bad)
cmovs
add
sub
sbb
imul
stos
arpl
sub
adc
inc
aad
in
push
jb
imul
test
cmp
jnp
lahf
lea
es
loopne
add
imul
mov
mov
mov
or
lods
adc
scas
(bad)
mov
xor
dec
add
add
xchg
nop
inc
add
or
xchg
mov
push
je
cmp
repz
ins
fs
push
dec
repz
inc
mov
mov
call
cmp
in
lock
hlt
clc
fcom
repz
cld
cld
shl
and
sbb
jmp
push
test
lock
cmp
mov
inc
pop
sti
and
and
lea
adc
cmp
pop
and
std
sti
popa
repz
cld
out
imul
shr
xchg
sbb
sbb
xor
push
inc
push
fs
add
fisub
add
sahf
inc
push
out
mov
dec
in
add
xor
adc
pop
add
ja
fsubr
push
loopne
jns
jnp
call
push
or
jns
out
and
sbb
sbb
out
sahf
out
adc
adc
out
sahf
or
or
repz
cmp
inc
push
movs
test
push
add
and
adc
mov
cmps
push
cmp
mov
shr
in
mov
adc
out
neg
add
xor
bound
mov
pop
xchg
jae
stos
scas
dec
mov
cmp
ret
daa
and
cmp
cmp
push
in
mov
add
test
out
popf
dec
shr
add
jle
jl
jns
pusha
gs
jl
xchg
test
jno
xor
loop
es
pop
sub
jg
or
lock
add
cmp
sub
sahf
ins
sub
pop
nop
stos
jle
pop
jmp
add
push
dec
daa
lock
push
jmp
pop
mov
or
gs
jmp
sub
adc
fistp
cmp
test
rcl
sub
jl
lods
jne
dec
mov
addr16
or
add
iret
mov
mov
inc
mov
mov
mov
sar
pop
mov
sub
shl
mov
mov
mov
lock
stos
test
lahf
pop
ret
mov
xchg
(bad)
mov
test
retf
mov
pushf
imul
push
cmps
push
xor
xchg
mov
or
add
loopne
push
jo
dec
push
sub
sti
sti
or
sbb
jmp
mov
cmp
loopne
mov
lods
out
pusha
push
and
mov
in
and
lods
out
lods
and
pusha
add
js
add
les
add
pushf
cs
sbb
push
mov
push
and
mov
pop
sbb
in
cwde
cli
adc
push
test
je
pop
cmps
or
mov
push
call
push
inc
mov
push
ret
fcmovnb
dec
lock
outs
hlt
jo
mov
fdivr
or
jmp
test
adc
xchg
test
jne
sbb
lahf
add
xor
mov
lods
loopne
adc
fadd
mov
or
movs
mov
(bad)
(bad)
or
popf
outs
fldz
jmp
enter
jmp
aaa
js
loope
popf
and
mov
test
add
call
sub
push
mov
arpl
push
call
std
popf
mov
ret
jo
adc
cmps
sbb
dec
or
stos
movs
shr
mov
and
pop
test
aaa
lock
sub
pop
xchg
cmp
gs
inc
les
cmp
add
inc
xor
push
pusha
lods
xchg
cld
cmp
nop
add
jge
ret
je
lea
lahf
shl
lods
inc
mov
jbe
mov
and
loope
pop
dec
and
sbb
push
loopne
cmps
mov
mov
add
cli
add
or
jmp
fdivr
cdq
cmp
popf
push
leave
ins
add
mov
jno
enter
das
or
fdivr
and
mov
mov
ret
add
daa
int
popf
and
(bad)
mov
nop
mov
xor
and
sbb
movzx
inc
xor
adc
movs
cmp
xor
pop
jb
lds
cmp
into
je
add
xor
jne
or
daa
enter
mov
add
sbb
or
pusha
jecxz
sti
scas
stos
cmp
daa
ret
jne
add
(bad)
fmul
jbe
stos
and
and
(bad)
ja
push
cmp
add
data16
ret
lock
or
inc
pop
nop
inc
hlt
(bad)
or
scas
pusha
inc
dec
ficom
les
or
pop
jmp
and
mov
xor
popf
add
sbb
or
adc
lods
pop
adc
xor
inc
xor
inc
pop
dec
shr
xchg
xchg
mov
mov
or
or
ja
retf
repnz
xchg
or
retf
push
jge
mov
or
sbb
clc
xchg
cdq
and
imul
sar
das
jg
cmp
movs
vmovshdup
loop
sbb
jle
add
mov
sub
add
jl
push
xlat
jnp
clc
jb
hlt
or
ret
jb
jmp
sub
repz
cli
jge
push
sub
je
test
ja
enter
cmp
push
in
xor
test
cld
movsx
push
mov
sub
jbe
bound
or
jg
inc
sbb
shl
inc
add
xor
mov
mov
push
ins
call
add
mov
and
mov
adc
(bad)
stos
mov
adc
or
mov
movs
adc
(bad)
addr16
idiv
and
inc
cmp
ret
mov
lods
mov
cmp
fidiv
and
sti
cmp
sbb
sub
or
lods
or
xor
xchg
jge
jns
adc
addr16
or
addr16
or
test
and
rcl
jbe
jmp
(bad)
dec
mov
call
add
push
idiv
push
outs
cld
mov
fcomp
ficom
adc
ret
mov
clc
bound
jle
cmp
je
mov
cli
lods
ficom
jne
or
loop
shl
push
adc
mov
(bad)
(bad)
(bad)
jle
div
retf
jmp
xor
lock
add
xor
and
and
fadd
pop
inc
cld
cmp
je
test
clc
outs
push
out
cmp
je
test
je
push
and
std
cmp
adc
xchg
pop
addr16
cdq
xor
inc
or
in
cdq
sub
or
cdq
xchg
pop
adc
push
xchg
or
loop
add
hlt
mov
jl
out
bound
pop
lock
cmp
cmp
pop
aas
pop
(bad)
sbb
imul
sub
test
clc
lds
daa
pop
mov
xchg
ret
rcl
retf
in
js
test
aaa
aaa
dec
ror
enter
aaa
sbb
sar
out
ret
sahf
xchg
push
push
les
mov
je
inc
cmp
jb
lea
push
adc
push
pop
sub
bound
xor
add
mov
push
adc
cmp
(bad)
cmps
cwde
ss
and
add
(bad)
js
push
mov
inc
ins
daa
into
add
mov
push
jne
icebp
dec
xor
inc
mov
leave
push
or
loope
add
movs
dec
xor
sub
sbb
and
cmp
push
inc
ja
jmp
sar
or
fldcw
add
call
and
rcl
inc
inc
and
repz
cmp
adc
sar
test
les
jle
mov
mov
in
mov
pusha
mov
push
mov
pop
cli
jns
test
push
add
sub
mov
nop
repnz
add
mov
pop
mov
(bad)
inc
stos
add
cmp
jl
(bad)
outs
inc
xchg
jbe
mov
mov
(bad)
inc
and
mov
fs
movs
lea
ja
sub
data16
push
test
push
xlat
pusha
push
into
pop
mov
shl
xlat
fsubr
xor
and
pop
cdq
outs
pop
xor
je
mov
mov
call
aaa
js
je
add
(bad)
pop
jne
shr
mov
repnz
fldenv
add
cli
ins
xlat
xor
xor
xchg
iret
dec
sahf
xor
pop
xor
loop
or
(bad)
or
(bad)
push
es
mov
or
sub
inc
int
push
rol
xor
fnstsw
pop
sbb
jmp
inc
stos
inc
inc
xchg
(bad)
pop
add
pop
dec
sbb
xor
ins
inc
aam
mov
scas
pop
and
rcl
cmp
and
pop
pusha
jae
std
fcompp
cmp
callw
loopne
clc
jg
scas
dec
xor
add
movd
fidivr
call
clc
jae
xor
fisttp
jle
xor
cli
rcl
retf
xchg
cmp
(bad)
repz
or
jg
(bad)
dec
mov
mov
mov
xchg
ret
adc
(bad)
jnp
mov
lds
mov
out
adc
or
add
adc
outs
sar
push
dec
js
add
fsubr
mov
std
or
lock
int
xchg
idiv
xor
fcmovb
sbb
sbb
inc
pop
xor
xor
jo
add
mov
jns
push
push
push
rol
and
adc
jne
push
add
aam
cmp
jg
jl
cmp
jb
xchg
fwait
xor
enter
retf
mov
fcomp
pop
test
ds
out
pop
pop
or
lods
xor
mov
test
and
pop
add
in
mov
mov
ret
cmp
mov
(bad)
inc
dec
add
xor
out
inc
adc
rcr
lahf
or
jbe
daa
out
push
sub
sub
aam
out
ins
cdq
sub
sbb
push
arpl
pop
sub
in
cmp
sti
in
inc
push
cmp
je
popf
jae
add
ds
sbb
loope
add
pop
sub
sbb
out
scas
imul
sbb
and
scas
stos
stos
or
mov
push
or
cmp
les
sub
sar
aaa
outs
popa
(bad)
fs
add
add
sub
fisub
xchg
sub
sbb
data16
inc
sbb
sbb
xor
daa
mov
fs
jg
fisub
mov
mov
lock
xchg
xor
add
out
daa
inc
jge
dec
jg
jl
out
lea
dec
dec
push
push
mov
rol
pop
dec
push
sahf
inc
test
and
int3
scas
adc
xchg
xor
mov
cmp
push
xchg
push
xchg
movs
or
or
push
push
adc
ss
or
addr16
bound
jmp
movs
dec
dec
cmps
ja
add
push
sub
xchg
sbb
sub
repnz
daa
jmp
fs
mov
inc
cs
jge
neg
inc
loopne
je
dec
jne
mov
add
pop
mov
adc
jp
inc
pop
dec
(bad)
pop
xchg
in
enter
adc
call
test
sbb
call
pop
push
pop
fst
add
fadd
sbb
imul
or
fs
jb
loope
leave
jge
inc
add
jmp
pop
arpl
fbld
pop
xchg
push
dec
pop
xor
fs
rol
rol
popa
movs
ds
mov
ficomp
mov
cmp
xchg
xor
push
cld
adc
inc
xor
inc
cld
mov
push
mov
jo
sub
dec
mov
inc
inc
shl
into
mov
pusha
or
fs
sahf
xor
es
adc
jbe
cmp
je
sub
and
or
jo
mov
retf
push
call
cmps
lock
dec
push
jo
out
out
xor
pushf
mov
dec
and
pop
div
dec
out
sahf
cmps
sub
ret
enter
push
ficomp
push
lods
rcr
pop
cmp
push
aam
inc
adc
stos
cld
xchg
sbb
lock
ror
cmp
mov
dec
ret
xor
push
adc
dec
out
maskmovq
mul
call
xor
inc
mov
push
add
or
pop
xchg
adc
adc
adc
and
sub
add
and
add
push
jo
cmp
xchg
cld
arpl
imul
cmp
scas
les
mov
call
add
enter
fdivrp
dec
inc
call
sbb
cmp
aas
or
pushf
ret
add
and
mov
test
adc
inc
sbb
cmp
ja
mov
int
jbe
jge
lea
push
xlat
jle
mov
mov
ins
test
inc
lock
or
jbe
mov
repnz
jp
fnstenv
mov
jg
push
dec
add
mov
xchg
or
icebp
(bad)
xor
dec
cld
rol
sub
pop
xor
shl
inc
mov
dec
cmp
aam
into
lock
push
cs
fadd
in
mov
jno
add
mov
push
ds
mov
sbb
sub
mov
sub
mov
inc
sub
mov
mov
push
mov
inc
sub
popf
gs
or
mov
rol
mov
aad
push
push
ret
or
xor
add
pusha
in
add
ret
push
fbld
jne
push
pop
lea
push
push
movs
sbb
mov
leave
xchg
sbb
xchg
lock
push
bound
movs
test
or
cmps
mov
ja
inc
mov
jb
neg
and
je
ror
cld
pushf
jmp
adc
dec
addr16
or
in
mov
rep
mov
dec
jmp
ret
push
imul
imul
loopne
mov
and
leave
xor
ja
adc
mov
jae
xor
adc
push
inc
add
jnp
inc
scas
aas
cmp
or
shr
or
icebp
mul
lods
push
inc
cmp
sar
pop
jb
test
sbb
push
ds
dec
loop
xchg
fs
(bad)
mov
ins
cs
pop
loopne
jg
(bad)
mov
xchg
rcl
add
popa
xor
ret
or
leave
pop
cmp
ds
cmp
sbb
(bad)
loopne
or
push
fsubr
mov
mov
sub
in
push
xchg
adc
and
leave
loopne
xchg
and
loope
inc
imul
adc
dec
mov
sub
or
lock
jbe
adc
lods
sar
inc
out
retf
test
add
jns
idiv
cmps
loopne
add
mov
call
inc
in
jns
pop
outs
loop
out
pop
sub
clc
jbe
xor
inc
out
in
adc
in
adc
jl
jno
adc
std
jns
fnclex
or
cli
stos
test
ret
adc
and
int3
xor
sub
xor
imul
jle
out
test
test
push
iret
sub
outs
add
dec
and
add
pop
pop
or
add
out
test
pop
add
(bad)
inc
cld
mov
pusha
xchg
ffree
sbb
adc
mov
int
in
into
or
ret
adc
es
jb
std
cld
adc
sub
xchg
adc
or
pop
add
cmp
push
jmp
add
cwde
mov
repnz
in
push
test
(bad)
loopne
retf
push
ret
pop
pop
les
pop
jmp
enter
das
cmp
and
sbb
add
sbb
leave
test
and
mov
ins
and
mov
and
pop
xor
xor
mov
add
sub
je
(bad)
retf
push
add
lahf
ss
xor
aad
or
add
iret
add
in
add
daa
and
inc
retf
adc
mov
sbb
cmp
xchg
sbb
pop
test
push
push
pop
and
enter
inc
dec
fisub
xchg
or
outs
in
or
cld
add
fisttp
push
jns
sbb
or
mov
or
mov
or
cmp
push
repnz
push
(bad)
setne
jb
xor
adc
xchg
stos
mov
or
adc
in
add
adc
adc
adc
cs
in
add
adc
adc
pop
and
adc
xor
push
push
inc
retf
add
and
sbb
xchg
sbb
add
push
repnz
fcomp
ror
cmp
mov
pop
enter
sbb
je
add
jns
sbb
ds
repnz
pop
push
in
push
repnz
inc
neg
pop
scas
inc
sbb
mov
mov
sub
sbb
jle
push
add
cmp
xchg
jecxz
xchg
push
cmp
in
jg
mov
push
in
imul
dec
movs
test
xor
sub
sub
sahf
mov
inc
outs
fiadd
jne
adc
push
mov
test
sub
jmp
pusha
in
push
jmp
jmp
sub
push
in
repnz
xor
in
xchg
aad
xor
out
in
cmp
mov
sbb
pop
leave
out
xchg
out
or
nop
out
xor
lock
icebp
icebp
dec
sahf
xchg
sub
repnz
nop
addr16
repz
std
cmp
hlt
imul
retf
stos
xchg
(bad)
std
cmc
cmc
cmp
cmps
div
mov
add
mul
push
shl
clc
clc
clc
or
and
stc
and
jb
iret
cli
cli
add
aaa
xchg
pop
enter
cld
cld
je
fisubr
and
push
push
nop
shl
mov
in
push
repnz
sbb
(bad)
(bad)
mov
adc
jmp
inc
or
add
jle
xor
lahf
popf
data16
imul
cmp
sub
movs
jecxz
xchg
xor
out
in
in
mov
cmp
test
pusha
adc
sti
out
out
enter
xchg
scas
call
add
int
and
jmp
sbb
daa
in
jns
mov
jmp
sub
(bad)
cli
out
xchg
stos
or
mov
lock
cmp
xchg
cli
or
call
add
sub
xlat
xchg
pop
(bad)
imul
add
xchg
clc
cdq
popa
leave
and
stc
push
stc
nop
cmps
jb
sbb
in
pop
ins
sti
xchg
or
cmp
stos
pop
sub
cmp
int3
test
pop
jge
dec
mov
dec
pop
aad
push
clc
mov
shl
loop
shl
das
test
jecxz
inc
clc
adc
push
and
movs
sub
or
out
xchg
pop
push
xchg
push
fdiv
out
mov
neg
retf
imul
jmp
mul
dec
push
and
not
div
imul
out
sub
into
idiv
pop
push
loope
not
xchg
or
ret
xchg
inc
mul
jns
mov
sub
pushf
mov
mov
movs
test
jbe
jne
mov
sbb
cmp
jmp
cmp
movs
cli
xchg
cmp
inc
repnz
cmc
aaa
inc
mov
cli
hlt
or
rol
xchg
push
popf
out
add
mov
mov
sysexit
into
xchg
ja
loope
and
cs
(bad)
jp
setb
pop
cvtdq2ps
cmp
retf
and
pop
pop
call
mov
repz
push
mov
or
xchg
repz
and
ins
repz
cs
or
in
pop
xchg
adc
mov
rcl
or
test
icebp
cmp
and
movs
sbb
(bad)
push
repnz
repnz
cmc
cmc
xchg
adc
pop
mov
and
jb
mov
cwde
icebp
or
out
stc
mov
dec
icebp
xor
(bad)
mov
adc
or
push
jmp
mov
test
inc
jecxz
fbld
mov
adc
pushf
out
jae
mov
scas
add
cmps
xor
push
leave
xor
add
fmul
mov
push
mov
(bad)
push
enter
jne
stc
mov
fld
xor
jmp
xchg
fist
sahf
lds
add
and
fwait
in
mov
xchg
rol
jnp
dec
sahf
ss
int
repz
inc
xchg
hlt
cdq
(bad)
popf
scas
xchg
mov
ins
sub
xchg
in
mov
ins
cwde
mov
mov
int
repz
sub
iret
repz
xchg
(bad)
mov
push
and
adc
inc
lods
add
sub
loope
adc
pop
add
das
pop
scas
lahf
out
test
mov
out
fsub
jge
test
jecxz
adc
sbb
push
fild
sahf
inc
sub
loop
pop
imul
ret
jl
das
jp
jg
and
push
cmps
pop
dec
clc
dec
(bad)
jne
ja
jmp
push
xchg
adc
addr16
nop
push
sub
adc
add
arpl
mov
pop
jl
cmp
push
hlt
or
pop
clc
or
add
(bad)
xchg
inc
sub
movs
out
dec
aad
inc
or
cmc
xchg
dec
(bad)
jae
mov
ret
out
add
jb
mov
nop
pushf
dec
mov
cs
adc
cmp
sub
or
cs
pop
rcl
adc
pop
call
cmp
cdq
sbb
mov
xor
or
pop
mov
xlat
mov
xchg
icebp
lock
push
cmp
jb
mov
retf
push
ins
and
xor
cmps
ins
cmp
fdiv
xchg
sahf
dec
mov
push
loop
and
push
(bad)
fild
jae
out
adc
push
dec
mov
add
out
xor
inc
loopne
dec
push
jns
loopne
fcomp
daa
aas
mov
or
sbb
jmp
and
popa
or
imul
cmp
xchg
cmps
and
sub
add
pop
ins
mov
addr16
rol
pop
lea
mov
xchg
test
mov
or
or
frstor
xlat
pop
test
movzx
push
pusha
les
mov
cmp
mov
adc
push
push
sub
into
dec
inc
and
mov
pop
nop
ror
push
js
pop
out
fs
adc
sub
adc
adc
jne
push
add
sbb
ja
inc
lds
and
std
mov
push
or
push
pop
pushfw
ja
repnz
or
or
sbb
jp
pop
fs
xor
and
sbb
sbb
inc
push
clc
jbe
add
scas
test
test
jne
inc
(bad)
add
mov
sub
scas
jo
xlat
add
mov
(bad)
rcr
cli
pop
mov
jne
inc
add
fmul
(bad)
pop
sub
push
aaa
and
or
and
jl
dec
in
loope
adc
sahf
dec
fsub
mov
pop
mov
cmp
adc
mov
nop
mov
jp
ror
xor
cli
add
dec
sbb
dec
pop
push
aas
test
push
add
or
or
pop
ss
das
cmp
push
add
adc
test
push
mov
ins
xchg
or
xor
rcr
les
cmp
push
ins
jmp
stc
sar
and
and
adc
arpl
jle
pop
or
dec
inc
out
dec
dec
jo
xor
movzx
aad
sbb
imul
mov
sbb
mov
inc
out
cmp
(bad)
sub
mov
inc
push
imul
xlat
(bad)
sub
test
add
xchg
sar
adc
ja
pop
jmp
mov
pop
pop
ret
push
lea
enter
sub
and
fild
pop
xchg
cli
add
ret
xor
cmp
sub
pop
add
fs
jmp
not
int3
dec
dec
push
fnsave
test
push
add
in
jb
add
sub
mov
mov
fist
ds
jmp
xchg
inc
js
inc
not
sbb
pop
sbb
dec
mov
adc
mov
or
add
mov
mov
dec
and
inc
adc
adc
js
sbb
cmp
ins
sar
scas
add
mov
fadd
arpl
les
mov
mov
push
push
mov
adc
push
fsubrp
icebp
lock
ins
sbb
push
xor
rol
add
pop
adc
and
cmp
xchg
push
or
test
inc
loop
pop
inc
aam
lods
hlt
add
bound
xchg
add
xor
xchg
and
(bad)
je
test
push
add
sub
xor
sbb
push
hlt
adc
or
icebp
outs
or
in
add
jmp
xchg
leave
cs
lea
and
popa
lock
aas
push
sub
cmp
jb
sub
std
mov
aaa
or
in
add
add
sub
mov
mov
nop
jg
je
and
test
mov
sub
xchg
mov
or
mov
enter
or
cmpxchg
mov
jbe
or
lsl
pop
xchg
xor
pop
sbb
push
dec
jae
sub
push
imul
stc
cwde
or
int3
xchg
push
clc
xchg
pop
dec
inc
or
pop
add
enter
sbb
imul
add
mov
mov
psubsb
and
or
stc
(bad)
inc
inc
push
xchg
or
jbe
jle
cdq
test
retf
sub
xor
aam
jge
pop
fstp
sbb
and
out
out
cwde
stos
movs
mov
pop
sub
add
fs
push
fwait
xor
ds
cdq
push
sar
push
or
mov
push
ss
cmp
das
jno
xchg
adc
sti
ret
mov
jae
mov
add
or
loopne
or
dec
push
push
jne
push
pop
pop
and
je
(bad)
mov
inc
push
(bad)
sub
adc
add
fadd
test
fnstsw
test
adc
mov
jnp
sub
sub
pusha
imul
mov
data16
or
add
dec
adc
pop
push
xor
fbld
sbb
(bad)
push
push
inc
test
les
pop
cmp
sub
add
push
cmps
pusha
outs
call
or
mov
xor
pop
fidiv
sbb
ret
fisttp
mov
(bad)
bound
or
stos
aas
push
(bad)
jg
jge
push
ss
shl
loopne
jmp
push
add
xor
adc
push
push
push
(bad)
outs
mov
movs
jmp
(bad)
fadd
or
and
(bad)
pop
pop
aad
sar
sar
dec
not
inc
retf
add
pop
aaa
imul
aaa
mov
jnp
dec
and
js
push
mov
xchg
jecxz
or
out
pop
lea
push
cmp
ror
sub
clc
cwde
xchg
add
and
and
jne
push
pop
mov
push
punpcklbw
hlt
or
jmp
jmp
pop
jmp
pop
aam
push
add
iret
and
outs
arpl
in
loopne
sbb
or
push
and
icebp
test
not
xor
push
dec
push
lock
sub
or
adc
loopne
or
jmp
or
popf
stc
or
sbb
pop
xchg
pop
in
enter
jb
inc
cmp
aad
or
aad
jo
lods
data16
adc
pop
push
or
mov
sbb
(bad)
leave
div
add
iret
adc
fsubr
xchg
imul
sbb
dec
xor
add
sbb
jno
cmovns
imul
ins
rcr
adc
mov
and
mov
pandn
ins
mov
(bad)
fs
sbb
and
or
mov
sar
cmc
mov
daa
add
add
inc
push
inc
jge
mov
mov
jl
push
pop
loopne
and
sbb
xchg
xor
add
movs
jne
sub
loope
movs
and
sbb
jbe
sbb
or
push
or
out
cmps
je
retf
sbb
dec
jmp
xor
or
jp
add
sub
popa
out
dec
sbb
dec
sar
ret
rol
jle
adc
jns
jmp
or
xchg
add
fbld
or
mov
test
cmps
ret
ficom
and
or
or
or
push
imul
inc
push
rcr
ins
cmps
adc
arpl
mov
jno
mov
call
mov
mov
jp
pop
xchg
push
repnz
shl
fld
fdivp
and
and
inc
xchg
retf
sub
xchg
test
push
xchg
adc
adc
nop
sub
sbb
aaa
push
push
cmp
jne
or
in
mov
mov
or
adc
lds
jmp
loopne
xor
cdq
stos
lods
fstp
call
mov
mov
xor
mov
or
push
in
inc
push
and
and
enter
sbb
je
pop
mov
mov
imul
jecxz
and
sub
mov
into
cmp
std
ror
mov
inc
mov
ds
sbb
dec
mov
iret
fst
scas
dec
pop
int
in
sbb
(bad)
jmp
and
push
shl
push
sub
and
inc
cld
push
add
cmp
je
mov
cmp
nop
cmp
je
cmp
jne
dec
imul
cld
shl
push
or
sbb
(bad)
popf
pushf
fucomip
in
adc
stos
mov
push
or
je
aaa
sbb
and
jo
ret
inc
out
test
ja
loopne
mov
mov
mov
inc
adc
scas
jmp
sbb
cmp
jmp
test
rol
jecxz
and
inc
push
inc
or
or
call
cmp
sbb
pop
jg
fwait
stos
js
out
jmp
dec
dec
out
out
lds
dec
sbb
adc
dec
mov
push
adc
jecxz
cmc
jmp
push
sub
xor
and
push
inc
in
(bad)
in
cs
(bad)
je
fbstp
dec
mov
xor
pop
retf
push
cmp
xor
xchg
loope
stc
in
mov
or
xor
jge
push
push
adc
loope
cmp
or
dec
or
add
gs
(bad)
rol
in
ins
xor
add
mov
inc
sub
clc
dec
push
inc
pop
mov
loope
cmp
or
adc
and
sub
and
dec
repnz
shl
and
jge
out
hlt
dec
iret
pushf
cmp
fimul
and
je
inc
cmp
movs
jo
and
xchg
ds
add
movs
pop
nop
mov
push
mov
sbb
mov
pop
jmp
pop
mov
push
mov
div
or
mov
adc
xchg
mov
or
ja
mov
ja
push
mov
icebp
inc
xor
push
sar
imul
inc
rcr
sub
jmp
and
pop
sub
dec
fcmovnbe
xor
mov
push
add
imul
mov
pop
inc
add
cs
adc
mov
adc
sub
outs
and
jmp
sub
adc
imul
adc
mov
data16
call
and
mov
lea
repnz
push
add
lods
call
ins
xor
cmp
ins
push
jno
or
cmp
scas
push
test
mov
sbb
pusha
inc
or
fnsave
xlat
and
push
sahf
push
stc
fst
xlat
push
adc
add
xchg
shr
pop
jne
in
nop
jp
mov
loopne
ins
inc
sub
push
nop
inc
sbb
mov
xchg
jo
cmp
es
or
jae
fisttp
and
aaa
push
sub
mov
mov
mov
cwde
lock
arpl
outs
jp
adc
(bad)
cli
xchg
into
test
leave
daa
sub
push
add
mov
inc
cmc
mov
clc
sahf
dec
cmp
jge
push
cmp
mov
cmp
scas
movs
and
sti
in
push
or
and
into
test
or
jge
jp
fsubr
hlt
test
pop
sbb
mov
add
js
jb
xor
fsub
adc
loopne
jg
cmp
add
cmp
jb
data16
outs
add
cdq
test
js
dec
daa
aaa
add
test
int3
test
es
mov
mov
and
inc
cwde
and
ss
xchg
mov
sbb
and
cmp
jmp
jns
dec
je
sub
xchg
and
push
add
jmp
cmp
jnp
cmp
rcl
cmc
mov
cld
imul
cmp
xchg
pop
push
mov
les
mov
je
pop
sbb
add
movs
sbb
jmp
je
mov
ret
movs
cli
or
hlt
add
gs
nop
inc
cmp
cmp
mov
das
test
cmps
mov
addr16
leave
mov
push
add
jge
rcl
fs
dec
push
cli
pop
arpl
shl
dec
push
data16
mov
inc
dec
ds
dec
mov
mov
and
xor
or
xchg
pop
leave
mov
inc
jae
ror
jmp
movs
ret
shr
loope
shl
(bad)
and
loope
cmp
sub
xchg
add
xchg
je
je
cmp
add
and
adc
int3
shr
loopne
(bad)
push
shr
add
cmc
sub
test
aas
movs
imul
cmp
dec
aad
jg
and
mov
push
mov
or
les
mov
scas
mov
repz
repz
xor
and
adc
push
pop
iret
or
jg
cmp
xchg
(bad)
jmp
push
aam
mov
in
into
push
and
mov
in
nop
test
sahf
test
jg
pop
sbb
out
sub
test
lods
out
sahf
mov
sahf
ret
add
stos
lods
out
push
mov
xor
stos
iret
aam
jno
lods
sbb
cmp
ja
inc
xor
cli
cmps
push
adc
jmp
or
sub
je
or
sbb
sbb
xor
sub
jne
and
and
inc
sub
icebp
cmp
clc
add
jmp
call
cmp
jne
cmps
je
sub
es
push
push
shl
push
push
cmc
or
int3
push
sbb
mov
popf
push
shl
add
mov
lods
je
jle
and
push
adc
pop
je
jp
and
and
lea
js
mov
jne
je
js
and
rcr
and
jbe
jmp
jmp
mov
iret
fild
fdivr
cmp
fidiv
inc
les
ret
cmp
jbe
jns
sbb
jg
std
inc
add
repz
cmp
jbe
push
push
ja
fadd
sbb
sbb
icebp
aas
movs
gs
test
push
push
and
outs
mov
or
cmps
pop
cmp
push
jbe
div
and
and
inc
mov
enter
xchg
test
mov
shr
cdq
sub
ror
adc
ja
jmp
ret
dec
or
(bad)
xor
mov
or
enter
adc
dec
out
mov
mov
(bad)
pop
push
or
cmp
sub
je
loope
es
test
mul
xor
sub
sub
adc
movs
push
mov
jae
push
sbb
jmp
sub
fbstp
add
jmp
sbb
aaa
mov
add
sub
sub
push
and
adc
sub
loop
pop
add
add
ins
push
inc
push
movs
adc
sub
ret
inc
push
lahf
adc
sbb
mov
js
dec
push
test
push
repnz
das
ret
pop
pop
jo
add
jbe
test
pop
sahf
push
add
frstor
jg
ja
pop
add
xor
lahf
movs
lahf
sbb
das
push
push
mov
and
adc
mov
sub
inc
lahf
pushf
sar
mov
lahf
ret
sub
xchg
(bad)
mov
ds
rol
or
adc
test
xchg
sub
sub
mov
pop
adc
cmc
push
or
cmp
movs
icebp
cmp
ja
xchg
push
test
imul
ins
or
sbb
jmp
imul
inc
sub
sbb
rcr
test
scas
sub
fld
sub
mov
cmps
shl
jnp
aad
pop
fbstp
and
sbb
fistp
fild
imul
push
cmp
jbe
ret
je
fstp
icebp
movs
cmp
or
add
push
ret
mov
mov
dec
sub
das
fcomp
jo
outs
xlat
adc
test
pop
cmps
pop
add
mov
xchg
or
or
adc
dec
push
lahf
mov
ror
cmp
fs
adc
add
pop
xchg
mov
test
cmp
or
pop
push
inc
mov
(bad)
leave
and
fimul
sbb
test
xor
cs
in
sbb
out
cmp
dec
loope
push
shr
inc
push
mov
cmp
xor
jmp
(bad)
jmp
inc
imul
inc
movs
out
sar
push
cmp
out
push
jbe
dec
ror
(bad)
dec
nop
fsub
push
jo
add
or
into
sbb
nop
mov
cmp
sub
dec
add
pop
add
adc
pusha
nop
retf
or
cli
or
pop
xchg
icebp
sub
fsub
mov
inc
add
xchg
xor
jo
into
jmp
xor
mov
out
sub
and
jnp
xor
pusha
test
les
jmp
mov
inc
or
sbb
mov
push
into
aam
gs
xor
fcmovu
div
dec
mov
xor
sub
push
je
and
stos
or
fidivr
xor
or
cmp
cli
(bad)
movs
xor
call
and
mov
fist
jo
push
or
fldcw
sar
enter
fnstsw
sahf
jp
imul
js
inc
mov
mov
xchg
push
fist
fidiv
push
fld
dec
mov
test
mov
sti
dec
mov
repnz
jmp
fcomp
cmp
push
das
add
jg
movs
push
pop
ret
mov
pushf
or
and
loopne
add
leave
add
in
push
lods
(bad)
add
jne
in
mov
sub
fldz
(bad)
rcr
mov
add
push
inc
pusha
leave
pop
(bad)
sub
les
das
in
jp
retf
dec
add
retf
in
nop
leave
in
movs
mov
sub
cmp
mov
sub
and
sbb
leave
dec
rcr
cmps
pop
movs
push
and
pop
push
push
loop
ins
push
sub
or
adc
aam
popf
nop
and
loop
inc
dec
mov
xor
pop
sbb
sbb
icebp
inc
sbb
bound
mov
les
jno
out
add
ins
pop
or
inc
or
hlt
sar
sbb
dec
call
pop
dec
jae
mov
or
call
test
add
mov
es
inc
bound
adc
test
adc
mov
sbb
call
leave
push
pop
iret
lock
daa
push
cmps
jo
in
dec
mov
inc
or
push
daa
push
daa
movs
das
xchg
inc
call
mov
mov
mov
jnp
lea
jge
leave
sub
std
not
mov
(bad)
lds
jb
push
add
push
pop
mov
imul
pop
test
push
sbb
mov
add
jp
mov
push
dec
xor
xchg
add
call
sbb
mov
into
sub
or
jmp
jmp
xor
ror
pushf
mov
scas
data16
adc
lods
call
and
pushf
nop
test
inc
enter
call
test
inc
imul
push
imul
inc
sahf
inc
mov
fsqrt
jno
rol
loopne
lock
sub
and
push
jmp
jae
and
bound
add
xchg
push
cld
push
rcl
adc
push
or
imul
jmp
xor
add
fadd
jno
sbb
daa
cdq
or
mov
and
or
(bad)
pop
jmp
jl
adc
mov
fwait
jne
cmp
jne
pop
cmp
je
cmp
fmul
cmp
and
cli
sti
icebp
movs
rol
sbb
xchg
dec
mov
mov
ss
jb
jne
test
in
and
movs
imul
ret
rcr
ret
mov
add
sti
add
fcom
pop
rcr
mov
add
add
pop
pop
add
add
sbb
(bad)
mov
aaa
xchg
adc
mov
pop
add
mov
inc
mov
mov
dec
inc
jmp
sti
mov
mov
xor
je
mov
jge
pop
add
jbe
sbb
mov
aad
inc
push
outs
and
sar
pop
sub
push
push
xchg
rcr
xchg
adc
int3
loopne
push
test
mov
daa
outs
jmp
pop
xchg
push
sbb
ret
sar
icebp
cdq
clc
movs
ror
push
lods
(bad)
xchg
adc
test
or
mov
jl
jge
je
inc
cmp
adc
in
popf
or
pop
outs
add
and
cld
ja
(bad)
sbb
cmc
push
in
cmp
push
or
bound
adc
lds
lods
sub
popf
xlat
push
xchg
or
mov
mov
add
retf
add
ret
cmps
int
stos
inc
dec
cli
add
sub
jge
call
les
pop
sbb
into
jg
add
test
push
pop
mov
and
in
pushf
inc
shr
in
push
mov
fs
in
mov
cmp
pop
sub
sbb
cmp
lea
in
inc
scas
cs
mov
test
cmp
add
(bad)
sub
pop
rcl
and
xor
int3
test
shl
mov
ja
outs
sub
imul
pushf
sar
jmp
cmp
out
push
adc
imul
fild
mov
cmp
or
call
test
nop
fsubp
mov
sti
aad
sbb
pop
dec
popa
gs
jmp
outs
or
js
mov
gs
add
inc
push
jae
adc
(bad)
out
sub
xor
pop
add
inc
push
and
dec
xor
imul
adc
xchg
jl
test
adc
sub
xor
add
lods
pop
or
pop
mov
mov
xor
jne
jo
push
push
shr
fs
mov
sbb
adc
sub
loopne
jbe
cld
enter
or
jne
dec
push
add
add
dec
imul
adc
mov
cmp
add
inc
shl
into
fidivr
movs
adc
mov
fidivr
add
inc
cs
nop
hlt
loopne
je
cmp
inc
pop
mov
pop
or
imul
add
inc
in
mov
popa
push
pop
jle
outs
or
test
or
or
sbb
popa
push
arpl
jle
ret
or
seta
jne
add
xor
adc
push
shl
adc
cmp
dec
test
or
push
sub
clc
int3
imul
mov
outs
sti
inc
and
dec
cwde
and
lock
inc
jae
lea
add
mov
jb
push
push
sti
nop
mov
jnp
daa
or
mov
out
mov
ins
adc
sub
sbb
push
in
movs
jl
inc
pop
mov
je
pop
sar
clc
(bad)
push
sub
lea
push
fxch
fldenv
pop
or
xchg
pusha
push
loop
mov
clc
cmp
or
hlt
les
nop
ficomp
int
ror
cli
xchg
iret
(bad)
lea
and
xor
push
pop
lock
mov
mov
fsubr
out
out
pop
mov
xor
push
jo
dec
or
push
sti
add
mov
pop
dec
out
xchg
nop
cs
inc
call
pop
xchg
loopne
mov
push
jp
js
pop
sar
fnstsw
mov
movs
xchg
pop
mov
clc
dec
dec
pop
lea
dec
pop
scas
add
jo
dec
pusha
pop
clc
pusha
xor
aas
cmp
or
(bad)
add
sub
sar
ret
jmp
jb
lods
cpuid
add
pop
out
sub
les
pushw
or
or
xchg
test
add
mov
mov
xchg
lea
nop
xchg
and
adc
dec
jbe
jne
inc
mov
repz
dec
push
or
jmp
adc
push
dec
mov
adc
sub
or
push
inc
jo
adc
call
mov
jno
stos
pop
les
push
add
daa
je
push
movs
scas
test
es
push
rcl
loopne
cs
mov
xor
mov
mov
mov
test
mov
push
jae
ret
pop
and
cli
and
cmp
inc
das
pop
pop
sbb
adc
xchg
fsubr
and
and
lods
push
test
add
jmp
mov
or
push
inc
sbb
adc
mov
test
xchg
shl
mov
xchg
nop
repz
test
ss
pop
aam
xchg
xor
mov
imul
shl
and
xor
imul
inc
push
mov
clc
or
fsub
push
frstor
adc
dec
inc
mul
sub
lahf
fwait
jmp
mov
mov
lock
and
movs
mov
dec
mov
or
xchg
dec
std
cmp
jns
in
push
xchg
add
pop
jae
loopne
mov
shr
pop
or
xchg
pop
pop
jle
outs
xchg
xor
cmp
xchg
pop
movs
add
inc
and
in
push
movs
sbb
cmp
in
push
inc
inc
dec
xor
inc
pop
cmp
and
mov
lods
or
jb
and
arpl
dec
fisub
div
and
or
push
jmp
pop
cmp
repnz
push
or
mov
or
ins
and
pop
or
pusha
mov
dec
add
popa
mov
test
imul
xlat
repnz
xchg
aam
mov
push
xlat
add
enter
inc
test
mov
rol
popa
addr16
mov
(bad)
push
xor
cmp
fsubr
loope
out
jbe
test
jb
ret
je
fcom
push
ficom
mov
sahf
shl
test
adc
scas
ja
call
xor
mov
and
scas
sti
xchg
sar
aam
in
popa
inc
data16
pop
and
push
in
pop
adc
inc
inc
add
repz
sub
in
nop
pop
fst
lods
int3
shl
add
xor
xlat
jae
clc
nop
push
push
mov
pop
xor
dec
mov
dec
pushf
xor
inc
add
mov
scas
adc
push
dec
and
mov
sbb
or
test
test
sti
pop
add
xor
mov
lock
out
int3
or
out
inc
sbb
mov
sbb
cld
mov
dec
mov
adc
sub
or
mov
lock
not
shld
mov
push
iret
scas
cmc
jg
inc
or
call
(bad)
iret
mov
data16
push
or
mov
jns
cld
or
fadd
iret
dec
repz
jl
imul
or
add
mov
jno
jg
jo
or
mov
call
dec
cmps
rcl
inc
outs
cmps
jnp
push
call
mov
add
inc
dec
mov
mov
jge
mov
mov
inc
push
nop
mov
aaa
sbb
xor
popa
sub
pop
sbb
xchg
and
pusha
and
cmp
cmp
mov
push
xchg
js
lds
hlt
sub
mov
out
fcomp
retf
retf
retf
outs
xchg
clc
or
test
dec
sbb
retf
movs
shr
or
mov
dec
add
hlt
(bad)
fistp
xor
aaa
dec
cld
xor
adc
loopne
fwait
or
cld
adc
pop
in
gs
mov
and
xchg
jne
shl
(bad)
jmp
sub
mov
mov
adc
sbb
(bad)
push
mov
adc
sbb
pop
jmp
inc
push
lea
in
mov
cmps
ret
shl
add
rcr
or
add
popf
ss
push
or
push
or
fs
or
or
mov
inc
sti
dec
mov
lea
stos
add
push
push
sub
mov
mov
inc
dec
jne
int3
repz
lea
dec
push
xacquire
popa
cmp
dec
call
jb
add
jo
add
in
rcl
jnp
mov
and
test
lods
xchg
cmc
jo
out
ret
enter
enter
sti
rol
cli
lea
xchg
push
mov
add
sbb
(bad)
jle
add
ficom
push
push
mov
mov
std
dec
sar
push
cmp
adc
nop
fild
stc
xchg
popa
fimul
outs
mov
mov
jmp
sbb
jmp
and
je
add
push
sub
nop
mov
adc
jmp
mov
mov
mov
jnp
sub
mov
cmp
mov
ja
enter
xchg
sbb
dec
outs
push
jmp
mov
inc
cmp
adc
fst
xchg
dec
inc
cwde
mov
mov
push
cwde
xor
addr16
ja
xchg
and
lods
or
test
push
xchg
mov
popf
(bad)
fidivr
mov
inc
push
or
pop
daa
sbb
mov
es
add
fadd
inc
mov
(bad)
jne
aam
and
dec
adc
push
hlt
inc
jge
inc
std
jne
and
fld
add
xor
cmp
(bad)
mov
nop
xchg
arpl
and
cmp
out
mov
and
imul
sub
jmp
sbb
fidivr
cld
enter
xor
js
out
into
std
call
imul
cmc
data16
push
push
lods
stos
push
stc
and
js
and
inc
dec
jnp
scas
and
bound
popa
imul
out
fwait
js
sub
jne
cmps
arpl
retf
mov
push
leave
inc
call
in
shl
add
outs
js
push
and
sub
test
add
ror
ds
sub
mul
mov
call
jbe
inc
cmps
or
shr
fcos
inc
sbb
jge
add
jb
sbb
add
sbb
mov
mov
lock
mov
xor
retf
push
adc
xchg
retf
dec
adc
(bad)
leave
mov
out
jle
sbb
mov
jbe
mov
mov
mov
inc
dec
jne
dec
call
stos
mov
add
push
jnp
ins
push
scas
jmp
cmp
or
mov
xchg
inc
or
or
mov
pop
push
popa
das
sub
adc
and
sbb
add
adc
fld
aaa
cmc
add
cwde
and
and
jae
ds
jno
inc
rol
aas
jne
pmullw
cmp
dec
push
pushf
push
aam
xor
cmc
daa
ins
loope
add
dec
imul
sbb
add
and
and
or
sbb
add
sub
ds
dec
mov
pusha
out
inc
sub
push
pop
xchg
aam
xor
dec
sbb
mov
movs
ins
mov
pop
xor
add
out
pusha
sbb
aaa
mov
adc
ins
adc
ja
daa
jb
inc
js
lahf
jmp
inc
and
sti
push
and
int3
(bad)
leave
mov
inc
dec
sub
mov
push
and
sub
mov
or
ins
adc
sub
push
fs
mov
rol
jecxz
lea
dec
inc
call
push
in
push
lods
mov
aaa
cmp
ret
inc
dec
cmp
adc
aam
and
add
out
xor
sbb
les
call
ret
sub
test
enter
and
sahf
xchg
(bad)
adc
sbb
fisttp
outs
pop
int3
retf
out
rol
retf
lahf
xor
mov
rol
fiadd
les
jo
inc
and
fsubr
(bad)
and
pop
cmps
cdq
test
movs
std
loopne
pusha
je
cmp
jge
aam
enter
jle
jg
hlt
adc
imul
cld
pop
pop
ins
xchg
in
inc
add
add
(bad)
adc
or
jl
or
inc
or
mov
ret
add
or
ins
push
sbb
shl
adc
add
mov
pusha
sbb
stos
retf
and
mov
test
(bad)
cld
inc
jo
and
ins
or
dec
mov
(bad)
and
fwait
hlt
or
in
push
out
push
jmp
mov
sub
and
mov
push
hlt
mov
and
popf
in
xchg
adc
dec
js
movs
jne
and
dec
and
test
dec
mov
loope
jae
aam
adc
(bad)
mov
pop
(bad)
sub
xchg
and
int3
xor
jmp
add
pop
sbb
push
stc
push
in
ret
add
cld
cmp
add
add
dec
inc
sbb
or
and
jne
push
enter
pop
adc
iret
sbb
push
lea
push
xchg
popa
xor
aad
xchg
test
or
jecxz
cmp
adc
push
les
pop
or
(bad)
xor
jne
add
sub
push
pop
sub
setne
push
clc
pop
mov
lahf
pop
into
ret
pushf
cmp
aam
jbe
or
aad
mov
inc
mov
jne
inc
out
add
jae
cs
push
push
push
dec
or
push
cmp
xor
arpl
jnp
push
xor
mov
repz
adc
add
jne
imul
sbb
and
xor
scas
ss
dec
(bad)
aaa
in
and
add
sub
dec
iret
add
push
xchg
and
jbe
mov
cmc
push
out
jge
adc
js
test
ja
mov
imul
cmp
xchg
inc
(bad)
out
loopne
pushf
cdq
pop
ja
cmps
inc
cmp
icebp
dec
movs
mov
int
push
mov
ror
movs
jmp
rcl
pop
js
cmp
push
dec
repz
ret
mov
pop
jne
sub
xor
out
jecxz
fadd
ss
rol
cmp
pop
push
inc
xchg
enter
xor
add
xor
std
cmp
imul
cli
hlt
add
arpl
cmp
clc
xchg
je
add
sub
add
fcom
inc
and
push
add
dec
mov
add
(bad)
jmp
dec
shr
cmp
xor
mov
test
push
dec
mov
push
dec
mov
ss
ins
inc
rol
sbb
pop
pusha
les
pop
add
add
jge
dec
mov
enter
add
into
xlat
sub
movs
popa
enter
xchg
call
add
inc
jne
jne
mov
sbb
pop
daa
push
adc
add
add
add
in
push
sbb
cmp
and
mov
mov
sub
add
jae
push
adc
int3
test
popa
cs
cmp
mov
cmp
push
(bad)
adc
dec
fisttp
mov
push
sub
push
mov
inc
push
in
into
pop
mov
daa
jb
adc
repnz
stos
(bad)
(bad)
mov
inc
outs
aad
fsub
add
mov
js
sub
mov
pusha
sub
mov
int
cmp
stos
push
pop
test
hlt
aas
jmp
mov
repnz
pop
or
cwde
xchg
and
push
cdq
popa
into
sub
test
dec
mov
push
or
push
push
sti
adc
dec
repnz
xlat
inc
pop
dec
aam
push
pop
sbb
inc
dec
jmp
push
cs
sub
(bad)
pop
scas
dec
je
ret
and
push
cli
xor
push
add
sub
and
push
cmp
(bad)
xchg
xor
mov
xchg
popa
xor
jae
(bad)
iret
push
mov
mov
xchg
fcompp
jmp
jno
add
pop
leave
shl
add
loop
inc
adc
inc
inc
add
fcomp
or
xchg
push
jle
daa
cmp
xchg
push
adc
and
les
icebp
call
lea
clc
inc
sti
push
jbe
cmp
out
inc
or
cmps
test
inc
jl
test
and
xor
not
mov
js
xor
loopne
cmp
(bad)
aaa
push
adc
ins
js
sar
addr16
cmp
sar
push
inc
cwde
loope
fs
in
mul
add
lods
add
out
fstp
nop
dec
push
dec
das
shl
xchg
ror
or
xor
pusha
and
loopne
pop
cs
adc
xor
xchg
sbb
cmp
test
daa
mov
or
cmp
mov
sbb
xchg
push
sbb
jae
push
vmwrite
fwait
xchg
fidivr
sbb
sub
xor
add
mov
movs
dec
or
mov
mov
xor
sub
(bad)
sbb
jle
mov
stc
js
mov
mov
add
add
sub
xchg
ds
lods
data16
js
and
adc
add
loopne
sbb
mov
adc
and
mov
cmp
fs
add
pop
ror
imul
pop
fld
adc
fidivr
cmp
xor
or
(bad)
scas
ins
jle
inc
mov
data16
pop
cmp
test
inc
push
push
xchg
(bad)
adc
push
fcomp
adc
fwait
xor
ins
ins
enter
push
cld
ret
adc
sti
cmp
mov
pop
mov
or
or
cmc
xor
mov
pusha
jno
add
jmp
add
lea
retf
mov
inc
push
xor
mov
pop
inc
add
out
xor
push
xor
pop
fimul
inc
leave
lock
mov
mov
sub
push
outs
cmp
in
or
lods
mov
dec
jo
add
mov
js
push
test
loop
aad
jge
jge
jecxz
jg
mov
xchg
cli
mov
inc
jge
imul
test
inc
sbb
inc
add
xor
mov
dec
sbb
cmp
aam
mov
mov
or
jne
sub
xchg
push
push
dec
(bad)
popf
or
push
stos
sbb
inc
lock
dec
add
cmp
or
int
jmp
icebp
push
mov
je
stos
cli
neg
and
mov
fdiv
dec
repz
shl
sub
adc
data16
sub
test
jl
and
xchg
clc
sbb
(bad)
(bad)
add
cli
push
outs
add
sbb
push
or
cmp
div
xor
pop
sbb
and
xor
inc
sub
sbb
js
add
das
mov
ror
dec
pop
clc
xchg
ins
mov
or
adc
adc
and
mov
test
adc
dec
pusha
dec
mov
imul
cmp
cmp
or
call
pushf
bound
clc
sub
cmp
movs
aas
(bad)
stos
fdiv
sub
lds
mov
mov
ret
iret
mov
push
lods
fiadd
cmp
cs
cmp
and
xchg
push
or
xchg
and
adc
call
mov
jl
in
inc
inc
ret
nop
sbb
shl
add
ret
xchg
je
mov
in
mov
cmp
mov
push
add
add
jmp
xor
sbb
add
jmp
push
test
int3
adc
sub
or
je
pusha
jl
jmp
xor
inc
push
pop
mov
sbb
popf
(bad)
pop
jo
dec
jmp
add
loope
cmp
es
cmp
mov
jae
inc
rol
jmp
(bad)
mov
aam
test
clc
or
mov
cmp
(bad)
(bad)
inc
pop
push
into
sbb
clc
dec
push
addr16
jle
push
push
jne
arpl
ret
jne
dec
jmp
sbb
(bad)
jmp
rcl
mov
sbb
push
push
mov
outs
adc
sbb
(bad)
popa
imul
aaa
cmp
ret
dec
jmp
inc
sbb
test
adc
sbb
movs
cmp
or
sub
mov
mov
arpl
sub
popf
mov
loopne
jno
inc
mov
cli
test
pop
xchg
pop
or
ins
add
xor
xchg
call
pop
les
loopne
sti
das
test
pop
add
cmp
add
lock
icebp
lea
bound
jl
mov
sbb
cld
sbb
sbb
push
sar
pop
lods
movs
sahf
rcr
scas
add
or
out
mov
fdivr
mov
sar
jge
mov
retf
adc
jmp
or
jb
in
push
pop
add
xor
sbb
add
pop
nop
cli
sub
mov
pop
or
jg
and
mov
ffreep
arpl
mov
push
shl
or
retf
dec
es
ja
fs
cmps
cmp
test
in
sbb
shl
fidiv
push
push
ja
aad
stos
mov
xchg
test
jle
sub
adc
sub
jbe
mov
mov
js
fadd
cli
jle
xor
sbb
jge
mov
xor
movs
mov
inc
mov
sbb
imul
cs
js
test
adc
cmp
inc
push
lea
shl
dec
mov
divps
(bad)
das
in
scas
add
mov
sbb
fdiv
xor
inc
je
xlat
imul
adc
ret
mov
sub
lea
mov
xor
adc
popf
fisttp
push
arpl
or
push
xor
or
into
aaa
jbe
dec
mov
ins
add
sbb
or
dec
and
xchg
hlt
sub
xchg
sti
inc
loopne
mov
loopne
sub
in
mov
push
xor
mov
test
mov
addr16
leave
add
push
ins
cmp
lock
jl
or
int3
(bad)
pushf
sub
sbb
xor
or
test
test
mov
push
adc
test
out
dec
nop
fwait
jmp
mov
xor
ret
enter
cmp
loop
call
jnp
inc
(bad)
mov
dec
mov
dec
nop
cmp
xlat
xchg
jecxz
or
dec
inc
mov
pushf
mov
jns
push
sbb
pop
xchg
pop
call
gs
cmp
pusha
aaa
adc
sbb
pop
pusha
jo
std
sub
outs
je
arpl
xchg
sbb
mov
xor
ror
lock
mov
mov
pop
jbe
popf
call
fldenv
or
lds
outs
test
les
mov
clc
xlat
sbb
ds
push
add
mov
push
jne
movs
xlat
out
xchg
mul
push
cmp
jle
popa
stc
push
mov
cmp
pop
add
pop
push
int3
push
sub
ds
dec
and
sar
push
ins
push
or
add
cs
or
fiadd
adc
xchg
mov
mov
xchg
sub
inc
sbb
xchg
cmps
mov
cmps
clc
xor
les
jecxz
scas
jmp
popf
push
sahf
push
movs
in
push
cmps
add
data16
addr16
push
inc
add
xor
sub
inc
stos
push
jp
xchg
pusha
add
push
or
mov
mov
sbb
cld
pusha
cld
or
mov
pop
inc
daa
add
adc
arpl
xor
cmp
(bad)
int3
sti
fst
mov
ret
dec
pop
jbe
push
fs
adc
in
fsubr
cmp
sbb
inc
out
pop
sub
or
inc
movs
jbe
add
mov
and
adc
rol
neg
mov
and
mov
mov
or
push
lock
mov
pop
adc
or
and
lea
loope
das
sbb
mov
inc
push
test
lds
mov
or
retf
repnz
cmp
jg
sahf
add
mov
mov
fadd
in
hlt
dec
cmp
dec
cmp
mov
rcr
mov
inc
jmp
in
cmp
out
xor
dec
aas
push
sub
sub
enter
clc
ret
cld
mov
inc
std
push
sub
push
movs
adc
push
inc
push
sub
and
mov
mov
and
(bad)
retf
adc
and
sbb
sub
clc
or
or
jg
div
fimul
leave
xor
dec
or
test
pop
xor
add
xor
call
adc
sub
addr16
sub
rcl
dec
jge
and
into
mov
cdq
push
sub
daa
shr
retf
enter
daa
sub
loopne
js
loop
push
pop
int
fldcw
cmp
cmps
mov
mov
fsubr
nop
outs
push
or
aaa
or
or
addr16
pop
mov
bound
sub
ds
pop
movs
adc
push
retf
fdivr
ja
mov
aaa
lods
pop
not
pop
pusha
add
sti
add
add
add
add
cs
repz
lea
jbe
dec
test
xlat
sbb
test
push
add
pop
add
or
pop
lock
inc
sbb
fadd
in
(bad)
jg
adc
jmp
daa
jmp
shl
arpl
dec
xchg
loop
cmc
dec
je
ds
xor
sub
pop
cmp
pushf
aas
cmp
cmp
das
nop
aaa
dec
xchg
add
(bad)
mov
shl
ret
es
lods
clc
hlt
and
xor
xor
icebp
rcr
fnstcw
cmps
jnp
ret
cs
div
in
les
retf
(bad)
enter
pop
add
stc
(bad)
mov
mov
cmp
jbe
fwait
jmp
push
cli
pop
ja
movzx
movzx
mov
sbb
test
es
inc
(bad)
dec
dec
add
shl
movs
add
push
dec
xchg
ja
add
adc
pop
sub
dec
sbb
popf
cmps
push
aam
cli
dec
xor
or
sahf
and
xchg
test
push
outs
mov
push
lea
outs
not
add
sti
(bad)
neg
mov
lods
cmp
les
std
pop
leave
sub
cmc
ror
push
aam
nop
add
leave
push
aam
fnstsw
cmp
sub
hlt
icebp
in
out
repnz
inc
shr
fisubr
adc
mov
xlat
xor
adc
and
sbb
sbb
jnp
add
xchg
xchg
test
xor
pushf
je
sbb
into
dec
inc
pushf
pushf
pushf
pushf
cmp
es
(bad)
aam
ss
or
ror
xchg
xchg
cmps
cdq
mov
shr
or
lea
enter
cmp
loopne
pop
ret
dec
dec
and
lea
fld1
xor
push
jb
adc
cmps
repnz
rcl
inc
std
icebp
fcmovb
jne
or
call
push
cs
int3
mov
pop
mov
adc
call
fcom
jb
cmp
adc
std
add
enter
mov
dec
inc
sub
jo
call
inc
inc
push
mov
(bad)
push
leave
push
lods
add
mov
mov
adc
stc
retf
jno
loopne
ror
call
inc
cs
inc
leave
adc
mov
adc
fdivr
iret
lods
pop
rcr
scas
xchg
retf
lods
enter
push
lods
retf
adc
in
cmp
call
fcomp
lods
pop
cdq
inc
xchg
dec
fcomp
sub
or
repz
pop
xor
dec
data16
outs
je
call
aam
stc
push
leave
movs
enter
and
(bad)
or
fmul
adc
aam
jecxz
nop
in
rcl
in
aaa
inc
or
jecxz
enter
test
ret
jle
call
jae
(bad)
pop
or
dec
or
adc
clc
add
or
cmps
xchg
je
mov
sub
pop
push
ret
hlt
or
js
cmps
in
ss
push
imul
or
add
xchg
sub
dec
add
jmp
push
icebp
shl
fsubr
push
sbb
jp
inc
jne
or
cdq
inc
or
add
pop
pop
fadd
gs
add
xor
xchg
in
adc
(bad)
and
jmp
cmp
test
stc
inc
outs
add
sahf
fabs
or
shl
pop
dec
jmp
test
add
dec
rcl
or
nop
push
and
lods
ret
rol
out
lsl
jmp
push
pop
push
push
inc
shr
rcr
push
imul
adc
mov
movs
adc
cmp
or
xor
xchg
mov
and
adc
or
sub
fadd
retf
xor
retf
call
add
mov
jg
mov
add
loop
(bad)
out
and
or
xchg
or
xlat
imul
adc
mov
add
aaa
dec
add
mov
inc
pop
popf
inc
scas
sub
pusha
je
ss
xchg
xchg
gs
and
pop
pop
(bad)
cld
jecxz
pop
bound
adc
inc
pop
jp
lods
cmp
shl
das
add
and
xor
mov
xor
push
dec
jns
js
mov
hlt
into
test
cmp
mov
sbb
push
push
sar
ror
adc
iret
adc
or
xor
outs
fst
mov
fisttp
and
sbb
shl
sbb
aaa
sub
dec
sahf
jo
mov
mov
stc
xchg
ficom
push
jmp
cmp
je
sub
or
bound
xor
mov
popa
push
sub
xchg
pop
and
push
jne
push
outs
mov
adc
adc
adc
sbb
lea
cmp
clc
nop
popa
cmp
jne
sbb
or
mov
adc
ins
sbb
out
xor
sbb
cmp
jecxz
enter
push
lods
cmc
les
and
rcl
or
add
mov
inc
inc
or
in
and
loop
in
mov
xlat
sub
jno
jno
jle
sbb
xchg
gs
outs
enter
xchg
out
sbb
je
mov
(bad)
aad
xor
mov
pop
retf
adc
inc
xlat
cmps
push
outs
push
test
ds
lods
push
pop
push
sbb
xor
add
cmp
inc
push
push
adc
adc
sbb
cmc
add
(bad)
out
inc
fnstenv
(bad)
jbe
(bad)
sbb
cli
sub
cdq
dec
hlt
sub
jge
inc
gs
push
addr16
sbb
and
call
std
mov
adc
xchg
jne
stos
push
jge
lea
stos
sub
scas
fsub
gs
(bad)
movs
mov
xchg
mov
popa
mov
xchg
(bad)
aas
and
out
mov
ins
clc
add
jge
mov
iret
jmp
leave
xchg
nop
nop
mov
push
movs
mov
mov
jbe
inc
clc
scas
sbb
aad
xchg
sub
jo
mov
xor
mov
cmp
xor
nop
sbb
mov
push
imul
nop
movs
movs
(bad)
sbb
cdq
mov
cmp
test
jge
add
rol
xchg
jno
push
call
cmp
mov
cs
call
scas
shl
fldenv
or
dec
adc
mov
cli
cmp
jne
push
jnp
pushf
add
scas
pop
add
shl
mov
add
hlt
test
pop
es
arpl
pusha
shl
xor
inc
cli
mov
mov
je
aaa
mov
add
xor
je
stc
push
out
fmul
jge
xchg
aad
jns
and
mov
inc
or
xor
pop
add
jmp
or
dec
and
(bad)
sbb
nop
pop
xor
pop
mov
and
sbb
push
mov
(bad)
and
cmp
lods
lock
clc
fcom
and
imul
out
cld
and
retf
push
mov
push
popa
fsubr
pop
pop
dec
sub
shl
ret
sbb
mov
movs
adc
xor
inc
add
mov
add
jne
sub
adc
dec
xchg
jo
dec
lahf
inc
adc
add
cmp
mov
mov
cmp
stos
jl
inc
or
and
adc
add
jmp
adc
add
mov
and
push
cmp
jl
fist
outs
add
dec
dec
lock
lock
mov
and
mov
dec
lahf
cmp
sub
rep
nop
movs
jmp
cmp
sbb
xlat
sub
push
jb
hlt
push
clc
jbe
clc
inc
add
sub
leave
ss
mov
nop
popa
scas
push
or
mov
mov
loopne
std
mov
nop
dec
rcl
sbb
xchg
sbb
cld
sbb
mov
xor
inc
or
inc
mov
es
pop
pop
movs
jmp
inc
sub
pop
imul
cs
cmps
adc
sub
mov
or
lahf
push
jb
mov
lahf
xor
aaa
pop
adc
xchg
fcomp
mov
jecxz
fstp
rol
inc
jecxz
pusha
mov
xor
jmp
push
in
or
pop
inc
jmp
popa
mov
(bad)
push
xor
fisttp
and
push
jecxz
cmps
jo
sub
test
aad
push
fs
push
or
stos
push
(bad)
jecxz
add
adc
or
ins
mov
pop
jmp
inc
sbb
clc
psubb
cli
mov
cs
mov
add
test
cmp
es
sbb
hlt
scas
imul
lock
and
les
or
daa
in
jl
or
add
(bad)
and
jle
ret
mov
push
push
push
xor
cmps
mov
or
loopne
mov
dec
jge
imul
push
lods
mov
cmp
cmp
sti
push
dec
xchg
js
mov
push
mov
test
sub
add
inc
popa
rcr
pusha
outs
lea
push
or
or
sub
pop
dec
xchg
mov
add
aas
adc
adc
sub
or
pop
into
jmp
data16
push
pop
jp
add
pop
sar
fwait
mov
stos
popf
fistp
inc
fisubr
sub
push
adc
mov
das
cwde
cmp
jle
sub
lock
(bad)
scas
cmp
xchg
nop
push
jmp
dec
push
jmp
test
jbe
add
mov
out
es
inc
mov
push
mov
jae
sub
sub
cmps
mov
jo
in
mov
pop
jge
(bad)
sti
sahf
xor
mov
lods
fwait
mov
movs
jne
cmp
sbb
mul
aad
or
mov
cmp
jmp
and
popf
loopne
xchg
rcl
gs
lods
leave
fdiv
inc
ss
lahf
and
xchg
out
repnz
dec
loopne
in
xor
adc
fidiv
mov
lods
mov
scas
mov
lods
sub
mov
xchg
mov
add
shl
push
mov
jge
cs
jg
or
push
test
jo
adc
push
inc
test
and
scas
shl
fld
push
inc
xchg
adc
sub
push
mov
sti
fistp
repnz
sub
rol
jg
shl
cwde
cmc
jecxz
push
push
inc
pop
pop
mov
jmp
push
icebp
loop
mov
xor
mov
dec
dec
lods
inc
jge
hlt
inc
das
mov
sub
xor
add
jge
imul
sbb
sbb
xlat
test
cmp
cmp
es
sub
jle
add
(bad)
call
nop
call
xor
and
jle
dec
les
and
lds
jmp
rol
xchg
pop
xor
mov
and
xor
lea
mov
push
mov
(bad)
or
add
cmp
pop
push
push
into
shl
or
jne
mov
ds
and
and
or
or
add
add
inc
lods
cmp
out
cmps
imul
mov
mov
repz
ja
into
ja
pop
push
pop
push
pop
push
jg
test
inc
test
in
inc
enter
pusha
scas
les
test
adc
gs
jne
inc
or
leave
and
outs
adc
and
adc
xchg
jne
xchg
nop
fcomp
adc
push
test
leave
xchg
popa
ins
push
xchg
test
push
pushf
fidiv
lea
or
add
xchg
pop
sub
and
scas
ret
xor
cmp
jb
mov
test
jmp
mov
cmps
inc
ja
je
inc
cmp
ret
add
add
mov
adc
pusha
or
test
jg
add
dec
les
aaa
ret
or
ret
pop
shl
shr
mov
add
or
shr
sbb
push
mov
or
push
pop
das
jmp
inc
aas
bound
or
adc
add
add
mov
add
lods
pusha
push
test
inc
push
fcom
ins
fcom
mov
out
or
mov
sahf
dec
mov
retf
push
pop
pop
jne
inc
add
call
mov
sbb
jbe
cmp
or
sub
(bad)
add
cmps
imul
mov
es
ret
jne
jmp
jmp
or
push
push
mov
dec
and
mov
mov
popa
jbe
loopne
and
sti
inc
and
mov
dec
nop
mov
mov
adc
outs
push
dec
into
jmp
lods
scas
sti
inc
ret
dec
and
imul
sbb
(bad)
mov
cmps
sbb
pop
cdq
fbstp
jns
mul
test
sbb
add
sbb
mov
fld
or
mov
inc
mov
xorps
ss
add
movs
push
mov
fdivr
push
push
movs
lock
and
sahf
mov
or
and
pop
push
xchg
mov
or
jg
pop
je
out
jle
popf
movdqa
push
dec
adc
push
and
repz
pop
push
dec
and
push
jg
idiv
lahf
out
outs
inc
or
jbe
jle
xor
inc
ret
jg
jg
jg
jo
adc
out
and
mov
and
fisub
mov
clc
pop
ffreep
test
sti
cwde
jg
inc
out
lock
fnstsw
add
mov
xor
mov
enterw
lock
scas
inc
inc
push
neg
jecxz
xor
push
mov
add
mov
pusha
push
pop
in
test
dec
add
sub
shl
cli
je
mov
dec
pop
push
in
xchg
ss
or
sbb
cmp
add
les
mov
daa
cmp
inc
into
add
into
xor
setb
xchg
jno
(bad)
call
sub
push
ins
cdq
mov
lea
lods
sbb
repnz
xchg
ja
and
mov
test
sub
retf
adc
cmp
shl
fwait
(bad)
(bad)
sbb
or
dec
mov
shl
loopne
mov
and
lock
mul
add
adc
daa
mov
or
inc
xchg
xchg
add
cmp
push
cmp
or
clc
(bad)
and
movs
loopne
fcom
xor
dec
fs
push
jne
push
aas
nop
push
shl
pop
popa
test
mov
pop
loope
mov
or
imul
mov
mov
xor
xchg
ins
push
xor
in
push
sti
nop
pop
xchg
test
and
jo
push
and
push
pop
push
push
sub
std
add
jo
mov
jmp
xor
rol
mov
xchg
mov
lea
imul
push
icebp
mov
or
ret
fwait
imul
dec
add
fwait
dec
or
cmps
push
lods
or
xor
dec
ja
sub
xor
test
mov
adc
add
mov
les
adc
push
adc
cmps
cmp
mov
ds
std
push
dec
clc
mov
lock
adc
xchg
(bad)
sbb
jnp
ret
xchg
scas
sbb
in
and
inc
mov
push
out
mov
mov
add
sar
ror
dec
sbb
mov
xor
and
push
push
stc
sub
add
mov
in
jmp
mov
shl
mov
sbb
jge
out
push
loopne
push
add
(bad)
mov
popf
push
xchg
nop
mov
dec
jo
pusha
add
or
popf
dec
sbb
pop
cmp
sub
mov
adc
ss
push
jb
cmc
cmc
push
cld
in
inc
xchg
sub
inc
add
addr16
pop
add
iret
or
ret
lock
jg
scas
inc
push
jl
or
push
add
mov
mov
and
xchg
lea
xchg
pushf
mov
inc
add
cwde
fcom
je
cmp
push
add
push
sub
cmp
mov
pop
jo
lock
outs
out
add
add
(bad)
pusha
sbb
cwde
add
adc
shr
push
loope
sub
push
sbb
pop
adc
add
out
inc
pushf
fcomp
adc
xchg
cmp
or
jnp
dec
xor
out
movs
xor
pop
cs
test
in
out
ret
jle
and
or
lea
inc
pushf
lock
cmp
sti
(bad)
cmp
jne
cmp
sbb
cmps
fild
stc
or
sub
add
cmc
test
xchg
xchg
std
mov
jo
dec
sub
adc
jle
cmps
xor
mov
sar
test
sbb
sub
test
inc
shr
push
sbb
adc
mov
pop
stos
and
push
jmp
(bad)
adc
je
jmp
inc
xor
stos
or
daa
out
and
dec
jae
rcl
cmp
sbb
lods
loop
push
mov
and
dec
out
rcr
(bad)
jg
jb
outs
sbb
sbb
iret
ja
out
inc
lahf
inc
or
mov
jmp
dec
mov
test
cmp
xchg
push
loopne
or
cld
inc
xor
rcl
pop
inc
test
cmp
add
je
jmp
ret
sti
cdq
pop
movs
mov
adc
sbb
adc
adc
mul
jns
shl
xor
dec
fnsave
pop
dec
or
fsub
dec
mov
sbb
pop
clc
add
loopne
xor
cmp
out
js
or
inc
adc
(bad)
sub
enter
add
adc
add
(bad)
push
lea
or
mov
mov
loopne
fistp
aas
or
dec
dec
inc
cmps
pop
or
daa
or
mov
mov
inc
cmp
xchg
push
cmps
movups
push
and
lods
or
dec
shl
add
sbb
ins
push
nop
ret
add
jmp
into
pop
and
pusha
sbb
pusha
(bad)
je
xor
push
push
aas
fs
push
push
sub
jae
and
sbb
mov
daa
mov
addr16
or
and
mov
xor
mov
add
pop
adc
mov
mov
and
push
(bad)
dec
add
jl
or
dec
sar
test
mov
mov
clc
pop
xchg
jo
jmp
xchg
sub
adc
mov
inc
ror
outs
mov
or
out
add
hlt
push
test
sbb
jle
jnp
inc
add
or
int
mov
sub
push
cld
pop
or
(bad)
or
xor
rcr
xor
mov
stos
test
mov
pop
rcr
jbe
push
test
mov
xchg
adc
push
add
cmps
(bad)
icebp
mov
add
add
adc
fcom
xor
or
sbb
rol
dec
outs
outs
sbb
add
repz
push
dec
sub
in
cmp
xor
mov
dec
je
scas
cmps
xchg
adc
add
sbb
nop
pusha
jns
sbb
mov
fisttp
cmp
sub
sti
lods
(bad)
adc
push
sysenter
sbb
dec
mov
dec
and
xchg
xor
loope
sub
jecxz
icebp
icebp
mov
mov
std
add
jecxz
dec
xchg
sub
popa
fidiv
scas
fs
xor
jae
mov
jle
outs
imul
inc
inc
gs
inc
sub
xchg
adc
addr16
inc
jo
gs
xchg
and
pop
lahf
dec
add
loope
idiv
cwde
pusha
mov
inc
les
add
mov
sub
dec
scas
movs
lea
or
pop
jbe
fs
push
fs
pop
jns
adc
fiadd
push
in
or
sbb
mov
not
rcr
sub
add
jae
or
cmp
imul
popa
add
cmp
(bad)
dec
jne
lea
mov
stc
cmp
jb
rol
shl
add
mov
test
iret
test
ror
push
or
mov
or
mov
mov
xchg
cmp
xor
retf
test
loopne
xor
js
mov
inc
push
fwait
jo
retf
imul
mov
mov
adc
xchg
stos
xchg
aas
into
sub
push
jae
inc
inc
sbb
cmp
pop
(bad)
xchg
add
call
ins
lods
inc
sub
and
or
jno
dec
icebp
add
je
xor
sub
and
enter
add
cmp
cmc
or
or
sub
sbb
jne
movlps
sub
sbb
sbb
mov
out
pop
movsx
and
xchg
lock
adc
adc
test
adc
sbb
mov
push
rcl
call
xchg
push
into
adc
or
xor
test
or
dec
(bad)
cwde
xor
sub
rcl
pushf
or
mov
cmp
push
dec
and
test
mov
test
dec
nop
mov
or
mov
and
nop
ds
inc
or
push
adc
adc
and
or
inc
sti
jae
sub
or
or
jns
adc
xor
mov
and
pop
(bad)
nop
cmp
pop
inc
mul
nop
sbb
cmp
or
gs
sbb
arpl
mov
imul
or
imul
mov
mov
mov
mov
push
mov
push
shl
sbb
xchg
push
fiadd
push
fadd
push
addr16
mov
fwait
push
mov
push
(bad)
cwde
test
jbe
idiv
push
rol
adc
push
dec
fst
and
pop
jmp
push
stc
add
xor
pop
out
mov
(bad)
cld
add
and
rol
cmc
add
mov
push
and
cmp
inc
aam
pcmpgtw
mov
test
pusha
test
and
sub
cmp
dec
or
loopne
push
dec
push
push
imul
adc
mov
cmp
pop
xchg
cdq
xchg
push
shl
dec
jmp
lods
pop
(bad)
pop
pop
add
add
inc
mov
pop
jne
dec
cmp
jnp
push
aam
add
pop
add
loopne
out
pusha
data16
add
int
xor
test
sub
cmps
jns
dec
js
xchg
add
mov
inc
mov
push
rcl
inc
add
mov
xor
mov
jp
sbb
aas
xchg
inc
fwait
mov
ds
dec
or
dec
aam
test
xchg
test
les
mov
mov
retf
in
call
leave
xchg
add
std
dec
pop
fstp
mov
pop
mov
and
sar
mov
fcmovb
ins
and
mov
push
add
jno
add
ret
mov
or
xlat
popa
cmp
jno
les
in
mov
cmp
dec
and
fidivr
push
inc
inc
dec
retf
mov
xchg
and
and
pop
mov
lock
je
sub
daa
inc
fisttp
jne
and
push
pop
add
mov
cs
je
fcmovnb
add
mov
(bad)
ins
les
int3
pop
lea
mov
loop
sub
loope
es
push
stc
lods
es
mov
push
inc
mov
nop
mov
or
inc
fadd
cli
xor
jne
inc
sub
outs
sub
pop
aad
or
mov
pop
and
fild
cmp
mov
repnz
movs
and
lock
neg
xor
cmp
push
jmp
xor
jne
js
dec
lds
pop
leave
mov
add
scas
(bad)
cmps
xchg
call
in
(bad)
aaa
or
pop
movs
shl
add
retf
lea
jl
or
mov
inc
jecxz
push
push
call
jns
dec
pop
push
rol
movs
xchg
mov
sub
adc
push
inc
and
in
pushf
adc
pop
dec
call
cmova
test
in
inc
ss
sub
(bad)
push
cmp
or
test
mov
push
nop
ja
mov
add
aad
dec
xchg
imul
sbb
into
daa
mov
push
mov
lds
push
add
jle
retf
cmp
ins
add
sub
idiv
mov
ficom
mov
sub
jno
and
sub
inc
rcr
xchg
dec
or
cmps
dec
add
or
inc
add
add
jno
enter
push
jb
fwait
in
dec
dec
dec
sahf
xchg
enter
mov
(bad)
in
xor
lock
std
mov
std
xor
fs
cmp
std
fdivr
out
jp
push
fdivr
xor
pop
cmp
sub
xor
add
mov
ja
xchg
jne
cmp
push
push
cmp
jle
fstp
or
mov
mov
imul
std
test
push
mov
call
mov
in
test
repnz
mov
xchg
xchg
std
int
and
lea
enter
lock
call
add
lods
movs
fsub
daa
nop
std
lock
in
pop
movs
add
jnp
xchg
nop
std
mov
pop
sahf
lods
pop
lods
mov
std
lock
std
pop
std
xlat
pushf
jo
inc
add
mov
adc
aad
mov
inc
test
repnz
add
std
xchg
push
sub
enter
fdivr
lock
lock
in
inc
pop
call
std
das
adc
daa
stos
sar
cmp
sub
setb
std
hlt
in
sbb
std
mov
jns
add
in
jp
jbe
bound
icebp
or
aas
dec
cs
outs
add
jmp
and
sub
jmp
dec
mov
add
mov
pop
add
std
popa
aas
lds
jmp
test
sbb
jmp
js
sbb
jg
idiv
int3
std
loopne
sub
call
jne
add
popf
jns
jmp
mov
dec
mov
sbb
cmp
mov
add
fidivr
jbe
jge
mov
adc
mov
enter
dec
lahf
fstp
(bad)
test
mov
mov
je
push
push
mov
dec
inc
cmpxchg
push
or
cmps
int3
nop
dec
and
add
pop
shr
push
dec
rcr
or
(bad)
call
int
adc
lahf
inc
push
cmp
jbe
retf
inc
pop
add
push
lock
mov
pop
and
hlt
sbb
xchg
push
push
push
push
repnz
mov
pop
das
in
ror
lea
xchg
in
mov
cmp
inc
(bad)
retf
pop
(bad)
ret
jno
rep
sahf
in
inc
mov
inc
mov
inc
inc
mov
inc
adc
push
rcr
inc
loope
adc
mov
mov
jno
std
mov
or
adc
je
xor
or
es
pop
sub
test
and
ret
cmp
xchg
inc
jmp
je
adc
add
je
or
push
push
add
mov
add
in
dec
rcl
xchg
sbb
mov
push
push
pop
test
sbb
mov
in
pop
ret
sbb
je
push
in
mov
inc
ja
or
sub
xor
daa
and
adc
sub
fild
xchg
jns
push
add
and
add
inc
dec
inc
xor
inc
sbb
std
into
sub
sbb
jo
(bad)
in
inc
test
jo
je
mov
cdq
mov
mov
dec
mov
sbb
push
jmp
dec
fadd
sub
pop
dec
xor
dec
sub
pushf
sub
lods
or
je
push
or
add
daa
or
outs
bound
jl
fld
and
cmps
or
out
jnp
add
push
call
lock
or
subpd
mov
js
popf
aaa
inc
enter
mov
js
xchg
clc
in
fiadd
out
imul
rol
push
pop
ins
jmp
das
pop
je
sbb
jl
dec
(bad)
sbb
lods
imul
adc
add
int
mov
icebp
fs
out
pusha
xor
jmp
add
push
lahf
cmp
ficom
dec
pop
xor
sub
fadd
xchg
or
cld
rol
cld
and
xchg
adc
add
cmp
imul
mov
dec
jmp
inc
xchg
pop
xor
adc
cmp
xor
xor
mov
adc
pop
jns
fmul
test
push
ret
fst
mov
in
ins
or
daa
lods
sub
jns
fist
iret
dec
jo
jns
or
mov
loop
iret
dec
sti
mov
and
push
jecxz
sar
mov
out
movs
add
add
xlat
movs
add
or
push
call
mov
pop
test
push
ins
mov
jmp
out
sbb
loopne
or
pusha
push
inc
mov
sub
lds
push
cdq
ds
inc
scas
aad
dec
mov
and
or
or
adc
mov
(bad)
pop
pop
std
out
(bad)
xchg
and
ret
and
jmp
adc
rcr
imul
cli
dec
enter
rol
and
push
pop
test
pop
int
pop
outs
pushf
add
push
ficom
pop
(bad)
shl
mov
add
jg
sub
mov
sub
sbb
lea
movs
hlt
test
lock
fsubrp
mov
je
push
je
mov
sbb
push
ins
inc
and
fidiv
or
or
test
xor
cmp
mov
ins
or
sub
mov
sbb
dec
pop
stos
or
pop
pop
push
rol
push
add
mov
push
mov
aam
mov
out
mov
adc
cmp
ret
inc
je
mov
jp
dec
sub
enter
push
(bad)
add
scas
sar
push
push
out
push
stos
sub
xlat
sbb
mov
(bad)
cdq
outs
push
mov
inc
adc
sbb
sbb
in
ds
add
or
(bad)
pop
sbb
imul
mov
in
imul
fsub
add
mov
push
scas
add
add
inc
fidiv
jge
clc
addr16
mov
mov
ds
ins
enter
xchg
rcl
clc
push
jecxz
sbb
push
mov
cmp
jl
mov
adc
out
dec
mov
mov
imul
pop
rol
xor
aas
sbb
(bad)
aas
lea
movsx
cmps
push
push
add
add
or
add
push
add
dec
cmp
xor
cdq
shr
rcl
pop
xor
pop
(bad)
jae
add
add
or
dec
adc
cs
mov
sub
sti
in
lea
push
cdq
movs
and
shl
xchg
daa
mov
fidiv
sbb
or
sub
not
sar
mov
mov
je
and
lock
add
and
cli
int3
mov
xor
imul
add
inc
sbb
push
pop
repnz
push
sbb
and
jmp
or
(bad)
add
and
or
push
test
pop
jmp
adc
pushf
lock
sub
jmp
cmc
xchg
mul
leave
sbb
mov
pop
adc
rcl
sbb
leave
and
and
and
leave
call
pop
pop
ins
pop
pop
mov
xor
and
daa
pop
dec
bound
call
into
xor
add
scas
test
add
neg
adc
add
sbb
mov
sub
inc
jmp
in
push
out
inc
lea
cld
pop
add
xor
jmp
xor
jne
adc
xor
dec
mov
sub
jnp
(bad)
(bad)
mov
add
outs
mov
or
cmovp
push
fdivr
and
inc
push
push
push
jmp
pop
fisttp
mov
push
push
inc
mov
push
adc
(bad)
data16
div
push
add
sbb
(bad)
adc
sub
sbb
mov
shl
pushf
jmp
ins
pop
imul
es
adc
retf
or
clc
data16
scas
mov
pop
push
pop
jnp
or
sub
push
cmp
das
stos
dec
mov
fwait
fs
cmp
jl
cmp
jg
or
(bad)
jle
jge
loopne
and
jg
push
jle
jge
inc
and
mov
popa
dec
shr
ss
and
xor
iret
movs
push
inc
pop
adc
shrd
cdq
cmp
adc
neg
loop
(bad)
jmp
push
lods
retf
sar
ds
or
les
das
push
call
push
jge
or
sar
loope
mov
pop
cmp
xchg
adc
or
repnz
stos
inc
sbb
loope
inc
call
add
idiv
jl
inc
push
(bad)
push
hlt
aaa
fistp
jmp
xor
jl
jg
iret
es
xchg
ja
push
rcr
fidiv
jmp
lds
inc
lea
mov
inc
sahf
adc
mov
add
xor
pop
xlat
adc
out
cdq
add
outs
rcl
mov
popa
imul
sar
and
sbb
adc
jecxz
dec
imul
es
mov
push
rol
nop
adc
xchg
cmp
inc
sub
jne
aas
xlat
mov
xlat
call
in
daa
inc
add
outs
jmp
ss
and
push
jae
dec
cwde
inc
adc
add
inc
push
adc
adc
cdq
cs
int3
outs
or
xor
out
jne
stos
pusha
mov
dec
fidivr
inc
add
or
ss
sbb
jl
fldenv
adc
add
ds
mov
mov
fiadd
add
clc
nop
fwait
inc
(bad)
jmp
icebp
inc
fsubr
in
push
dec
inc
inc
fld
clc
cmp
inc
adc
xchg
ss
add
sub
add
ds
xor
adc
pop
mov
add
inc
add
je
in
and
or
sbb
in
scas
pop
mov
xchg
push
jmp
jp
clc
ss
jns
jmp
pusha
rol
push
(bad)
popa
rcr
ror
mov
test
adc
ret
sbb
or
call
mov
dec
pop
and
ds
mov
mov
frstor
push
xchg
adc
dec
cli
inc
lea
add
sbb
xor
clc
and
ss
add
int3
add
repnz
sbb
in
sub
adc
loope
cmp
je
cmp
cmp
(bad)
inc
inc
stc
mov
mov
mov
retf
jae
loope
add
nop
aam
sbb
movsx
or
retf
xchg
imul
cmp
les
mov
ja
jl
clc
cmps
test
movs
cmp
or
ror
jp
push
push
out
cdq
add
or
add
mov
gs
pop
shl
rcr
mov
in
ret
add
ret
daa
cmp
dec
adc
sub
push
and
and
jne
inc
sbb
adc
pop
arpl
push
dec
xchg
loopne
inc
pop
jne
sub
inc
or
imul
mov
imul
cmc
(bad)
jg
cmp
add
add
enter
inc
push
push
cs
mov
loop
sbb
push
or
add
add
fisub
dec
mov
cmp
daa
add
dec
or
mov
and
and
push
call
sub
add
sbb
cmps
movs
xor
add
xor
shr
inc
xor
xchg
fdiv
fdivr
or
neg
jmp
nop
add
pop
jl
inc
push
div
dec
not
xchg
inc
jne
sub
push
cmp
mov
ins
cmp
scas
movs
push
mov
shl
rol
add
stos
mov
sub
mov
dec
jge
int3
inc
or
ins
cdq
inc
nop
xchg
mov
mov
shl
mov
mov
push
mov
pop
xchg
add
cmp
(bad)
in
or
inc
pop
jmp
inc
(bad)
xchg
arpl
rol
pop
adc
cmp
jae
imul
scas
lods
stos
sbb
or
cmc
movs
cmp
dec
ror
push
sahf
jne
and
push
fsub
and
shl
aam
or
jnp
movs
and
and
ret
cmps
and
loopne
stc
test
pop
mov
rol
mov
ds
call
cmp
inc
push
pop
cmp
(bad)
and
mov
sbb
sub
shl
pop
das
pop
sbb
jno
or
rcr
add
mov
dec
mov
mov
dec
or
or
and
dec
sub
js
mov
push
fwait
push
mov
sub
inc
repnz
int
test
loop
popa
jp
out
pop
aaa
repnz
pop
test
or
adc
xor
scas
mov
dec
(bad)
gs
mov
jg
add
mov
add
dec
inc
jmp
cmp
(bad)
mov
xchg
je
mov
or
xchg
sbb
jmp
outs
sbb
or
test
pop
add
inc
test
mov
jecxz
mov
ret
repnz
outs
xchg
dec
mov
xchg
ret
or
pop
pop
and
idiv
pop
mov
ins
adc
dec
bound
loop
shl
pop
loopne
push
sub
sbb
pop
add
or
push
xchg
push
dec
pop
fist
cmp
bound
add
jne
push
mul
xchg
and
aaa
mov
push
icebp
enter
inc
xlat
cli
inc
cs
adc
pop
cmp
cmp
pop
adc
add
pop
cmc
add
stos
mov
push
mov
mov
sbb
xor
call
rol
inc
push
xor
mov
into
lea
inc
pop
test
jb
adc
mov
rol
jae
mov
hlt
cmp
jl
ins
or
push
xor
or
loope
ret
js
push
hlt
adc
jp
push
(bad)
(bad)
sub
add
and
cwde
rcl
jge
arpl
(bad)
mov
icebp
popf
jbe
mov
retf
and
xor
pop
inc
sub
sbb
add
dec
or
adc
dec
or
push
jo
or
jmp
mov
sbb
xor
jmp
adc
add
pushf
or
stos
xchg
inc
sub
ror
xchg
stc
mov
or
add
mov
std
push
pusha
(bad)
(bad)
hlt
jne
adc
fwait
mov
or
push
mov
xchg
mov
and
shl
adc
je
ret
cmp
pop
cld
test
pop
pop
jle
cmp
mov
cmps
outs
push
ja
or
test
cmp
jne
add
scas
lods
dec
and
int3
add
leave
push
mov
and
mov
push
or
movs
add
jecxz
test
fsub
or
xbegin
cmp
ins
jne
adc
test
cmp
sbb
pop
xor
dec
hlt
adc
adc
fadd
lea
ret
pop
add
in
and
jbe
ret
pusha
stos
pusha
push
jge
push
enter
ret
or
stos
test
adc
inc
(bad)
fld1
mov
pop
mov
fcom
hlt
or
mov
adc
jge
lock
(bad)
lock
or
adc
pop
pop
out
sbb
in
inc
and
push
push
cmp
scas
gs
add
jg
adc
jae
scas
sbb
js
jno
push
popa
pusha
xchg
inc
or
and
or
pushf
dec
loope
or
aam
mov
adc
pop
and
jbe
inc
test
stc
pop
les
push
sti
ins
arpl
push
repnz
sub
add
jb
add
pop
or
into
push
jae
sbb
mov
pop
enter
call
push
je
and
cmp
jb
or
xor
test
aas
test
sbb
mov
clc
test
or
js
out
and
push
in
jns
(bad)
jmp
sbb
jb
je
cmp
sbb
jns
jb
cmp
jbe
clc
push
push
add
(bad)
cli
in
push
mov
sub
mov
pop
das
xor
pusha
loop
and
and
scas
or
jmp
push
push
es
or
add
pop
cli
pop
setle
clc
fcom
in
out
inc
(bad)
mov
pop
es
jmp
add
mov
lods
pop
push
inc
pop
pop
pop
push
jp
mov
push
adc
xor
xchg
push
shl
ds
add
mov
mov
xchg
push
or
aad
nop
lods
retf
mov
xor
xchg
pop
add
sbb
and
leave
test
scas
mov
mov
push
popf
push
push
stc
push
mov
stc
fst
mov
ss
js
sbb
xchg
dec
dec
and
jl
call
adc
jne
call
ins
or
test
mov
(bad)
xchg
popf
or
push
adc
rol
(bad)
inc
mov
js
mov
jmp
adc
retf
into
adc
dec
or
test
test
and
loopne
loopne
sbb
push
sbb
fstp
stos
pop
push
push
inc
aas
and
mov
push
arpl
add
pop
sar
push
xchg
data16
jl
jmp
and
adc
aad
sahf
cmp
pop
or
dec
sbb
pxor
pushf
int
fiadd
mov
hlt
jg
call
xlat
push
sub
out
add
or
xor
mov
jo
mov
(bad)
inc
fidiv
mov
mov
adc
div
fnsave
xor
shr
or
mov
out
mov
sbb
pusha
add
js
pop
pop
ret
or
sub
push
mov
bound
add
dec
shr
add
dec
mov
inc
rol
repnz
inc
ret
movs
pop
inc
jmp
(bad)
ins
shl
(bad)
mov
mov
sub
loopne
sub
sbb
ds
xchg
cli
push
aam
outs
adc
bnd
lea
lea
or
mov
in
push
int3
popf
les
or
push
loope
mov
sbb
jmp
pop
mov
sub
push
xchg
pushf
push
xlat
dec
inc
les
hlt
inc
fcmovb
mov
sbb
xchg
and
adc
ficomp
push
gs
stc
jmp
jae
add
sub
cs
loope
push
add
test
push
pusha
lock
popf
movs
sbb
pop
or
clc
sar
inc
test
cmp
xor
out
loope
dec
and
push
push
jns
dec
mov
enter
adc
cld
je
adc
dec
mov
add
inc
cmp
sub
and
rol
cdq
cmp
xchg
jg
add
add
mov
inc
into
or
adc
push
and
call
mov
or
add
into
or
scas
and
call
outs
pop
cmp
clc
or
pusha
add
sub
mov
loopne
lock
pushf
push
cs
rcl
fdivr
inc
and
adc
xchg
sbb
pusha
sub
jne
xor
jo
nop
cmp
or
ins
imul
dec
rol
or
mov
jle
lock
inc
movzx
movs
add
icebp
cmp
mov
dec
aam
jne
idiv
dec
jmp
mov
inc
mov
mov
mov
mov
dec
cmp
leave
out
mov
lock
jmp
addr16
adc
retf
cs
or
ss
cmp
sar
fidiv
inc
xor
mov
dec
cmp
je
mov
aas
push
mov
cmp
pop
mov
fbld
jno
or
clc
pop
fldz
call
mov
inc
jp
ror
jo
mov
je
inc
or
push
adc
mov
or
sub
sbb
sub
xchg
mov
cli
adc
sbb
push
add
fcom
cmp
pop
jno
repnz
movs
outs
call
mov
add
adc
adc
jl
jne
or
jne
sbb
cs
pop
(bad)
or
add
shl
cmp
and
push
ret
push
pop
fwait
push
into
pop
push
push
adc
dec
xor
cmp
cmc
clc
add
sahf
adc
push
clc
mov
repz
mov
inc
mov
cld
add
jle
mov
lock
(bad)
jb
lds
add
mov
add
scas
or
(bad)
lock
and
aam
fiadd
inc
add
in
mov
cmp
push
push
je
sar
add
add
push
inc
sub
int3
mov
mov
clc
call
dec
sbb
lahf
mov
(bad)
push
or
add
dec
pusha
xor
add
add
add
and
test
jmp
lea
xor
sub
(bad)
add
pop
aad
lahf
sbb
test
xor
mov
or
cmp
pop
pop
inc
and
xor
add
jmp
popf
adc
jge
xchg
jnp
call
adc
dec
mov
(bad)
out
add
into
xlat
enter
lea
mov
inc
xor
jmp
sbb
mov
cld
(bad)
and
push
fmul
loopne
inc
(bad)
mov
jae
in
icebp
xchg
or
(bad)
or
call
and
enter
push
test
fdiv
call
enter
test
call
mov
sti
adc
mov
retf
xor
sbb
out
jmp
lea
lock
mov
mov
ret
add
(bad)
and
dec
jg
gs
lods
scas
cli
ins
test
fimul
push
cmp
jbe
sub
sbb
loopne
js
sub
push
bound
cli
sbb
cmp
fdivr
or
cmc
loopne
shl
inc
push
xchg
inc
and
retf
or
je
mov
sbb
inc
popf
dec
jp
pop
ja
stos
sub
loopne
jg
cwde
adc
jg
ret
daa
xor
or
jne
sub
add
xor
xor
inc
popa
js
sub
adc
fdivrp
push
push
or
fiadd
inc
xor
mov
sahf
outs
sbb
rcr
add
sbb
or
mov
push
imul
sub
hlt
push
call
dec
sbb
and
pop
movsx
and
es
arpl
add
xchg
adc
inc
adc
add
sub
call
shrd
arpl
imul
dec
cmp
jge
sbb
push
movs
clc
cwde
xor
cmp
xchg
mov
add
dec
jmp
outs
cld
sub
pusha
or
cmp
mov
inc
mov
inc
push
add
pop
mov
rcl
add
fiadd
mov
shl
retf
shl
jo
test
in
and
or
or
sbb
js
jg
cmp
(bad)
or
scas
jmp
adc
pop
adc
neg
mov
cmp
outs
and
and
in
shl
push
and
push
addr16
add
mov
pop
push
sbb
push
mov
sbb
jg
mov
jb
mov
dec
inc
dec
sahf
sub
dec
pop
or
or
sbb
and
rol
cmp
and
add
xchg
or
(bad)
cld
cmp
ja
cmp
add
xor
adc
dec
jo
inc
sbb
std
add
(bad)
mov
xor
adc
ret
jg
push
jle
cmp
loopne
in
push
sbb
or
mov
ret
adc
mov
inc
sahf
fwait
add
ret
bound
xchg
jnp
sbb
(bad)
xchg
inc
jp
adc
or
or
ret
aaa
push
sbb
sub
xchg
test
add
xchg
sti
ins
shl
inc
lock
cmp
fnstenv
sbb
retf
push
into
ror
inc
inc
adc
pop
push
xchg
pop
adc
jne
xchg
inc
cmp
sbb
jbe
jae
movs
adc
xor
sbb
and
movs
jae
mov
arpl
loopne
icebp
nop
js
std
out
and
sub
push
sbb
sub
ror
xchg
(bad)
aam
push
push
push
enter
push
xchg
pop
jge
xor
aam
daa
push
add
inc
or
pop
sub
stos
retf
inc
(bad)
push
adc
add
pop
je
mov
and
push
(bad)
fld
aaa
mov
sahf
clc
gs
or
pop
data16
add
pop
sbb
fcomp
inc
je
dec
in
in
pop
js
jmp
xor
jmp
(bad)
mov
lods
pop
popf
sbb
fisub
inc
sbb
push
sbb
cmp
mov
add
sub
cs
push
test
and
movs
sbb
dec
push
test
or
jo
jg
and
cmp
loopne
pop
cmp
imul
or
cmp
jb
mov
dec
or
add
pop
popf
mov
ins
dec
dec
aas
add
sbb
fcomp
mov
dec
push
(bad)
and
push
or
inc
les
jne
aas
clc
push
pop
inc
sbb
inc
lds
mov
push
dec
and
aas
dec
dec
nop
push
pop
(bad)
in
imul
pushf
jmp
ror
je
or
add
inc
sub
push
ret
mov
cmp
add
push
sub
push
jo
push
jno
popf
xchg
inc
jp
loopne
xchg
add
dec
test
jo
pop
dec
xor
inc
fstp
inc
call
cmp
mov
sbb
ss
pusha
cs
sbb
inc
fs
mov
popf
pop
mov
retf
jl
adc
cmp
hlt
pop
int3
pop
or
inc
adc
jmp
mov
gs
xchg
pop
or
cmp
pop
jmp
lock
xor
xchg
out
adc
test
cmps
daa
mov
or
fcom
push
in
ret
jmp
jb
or
nop
mov
stos
call
imul
(bad)
sbb
pusha
push
sbb
ret
mov
mov
lock
jb
imul
sub
lea
nop
dec
mov
add
and
cdq
movs
out
add
fist
fidiv
popf
mov
or
xor
imul
xchg
xchg
leave
mov
xchg
das
push
push
jb
pop
sbb
aas
cmp
push
and
lahf
ffreep
push
jnp
inc
cmp
fld
loopne
daa
jg
(bad)
and
adc
mov
das
call
and
fisub
sub
add
and
mov
leave
jle
push
mov
pop
(bad)
enter
mov
sub
jge
pop
test
aas
push
xor
leave
je
icebp
pop
or
xchg
mov
mov
mov
sub
call
mov
je
xchg
loope
rcr
and
mov
out
push
cmp
ja
add
cmp
adc
(bad)
cmp
cmp
stos
adc
inc
add
(bad)
or
lahf
cmp
jg
fs
add
lea
pop
jb
retf
pop
mov
sbb
fisub
cmp
scas
std
push
sti
and
rcl
push
adc
or
pop
imul
or
mov
add
inc
jmp
shl
arpl
nop
mov
cmps
stc
or
(bad)
(bad)
mov
xor
push
jbe
mov
jmp
push
push
jne
mov
pop
ins
pop
pop
cli
loop
and
ins
pop
or
dec
adc
adc
mov
sub
dec
lods
(bad)
ins
cmp
mov
dec
xchg
push
aas
add
repz
call
sbb
push
xchg
pop
xchg
sbb
(bad)
daa
mov
xor
sbb
cmp
jo
push
shl
fscale
add
std
jg
int
mov
add
sar
or
dec
adc
sub
fprem
fsub
xchg
push
mov
push
push
inc
outs
xlat
push
sbb
popa
pop
or
push
mov
jp
test
sub
sbb
popf
nop
fidiv
inc
ror
mov
test
out
nop
jl
push
imul
push
pop
pop
dec
sbb
cli
jns
push
push
sub
add
or
stos
dec
add
je
mov
or
mov
(bad)
fadd
adc
jbe
or
(bad)
data16
(bad)
jb
inc
push
and
call
and
cmovo
push
add
xchg
pop
in
sbb
add
dec
add
fldl2e
push
mov
loope
xchg
mov
das
popa
bound
ins
ja
mov
dec
hlt
lea
add
fimul
push
ins
daa
pushf
sub
cmp
cwde
or
ret
dec
and
xchg
dec
rcr
xchg
fadd
not
pop
adc
add
push
mov
cmp
mov
aam
(bad)
mov
pop
dec
cmp
jae
adc
cmps
gs
sahf
les
xor
add
jmp
(bad)
jmp
jmp
push
or
imul
push
daa
adc
call
ja
dec
jge
xchg
jecxz
imul
mov
mov
sub
jne
xor
xchg
icebp
xchg
cmp
pop
add
and
or
mov
ds
adc
sbb
int3
add
js
icebp
and
mov
push
cld
scas
and
dec
mov
test
js
inc
mov
jbe
stos
sub
por
ja
nop
adc
jb
dec
push
or
mov
in
pop
call
and
jae
inc
inc
addr16
pop
jl
shld
dec
xor
fidivr
lods
cdq
jo
sbb
and
rcl
push
es
sub
cwde
add
cmp
movs
imul
fidivr
add
mov
inc
pusha
xor
and
mov
imul
pop
fisttp
ja
hlt
aad
mov
add
sar
(bad)
bound
sub
clc
add
push
xor
mov
jbe
test
sub
(bad)
ficomp
frstor
cmp
aas
loopne
mov
sbb
test
and
dec
add
pop
push
sub
stos
mov
mov
dec
cmps
hlt
push
adc
and
pushw
jmp
jae
pop
cdq
sub
dec
adc
sbb
ret
pop
cmps
je
add
add
dec
add
fwait
dec
shl
push
stos
aas
fst
leave
xchg
imul
(bad)
ins
pop
loopne
or
cmps
imul
cmc
sub
or
jns
xchg
or
push
ins
iret
retf
jp
push
adc
aam
mov
sbb
inc
adc
adc
add
and
mov
inc
sbb
and
pop
ins
bound
mov
pop
clc
and
jg
add
xchg
mov
adc
add
pop
dec
dec
rcl
hlt
pop
hlt
cli
rol
adc
xor
ds
xor
mov
xor
hlt
adc
push
inc
ins
leave
push
xchg
add
cmp
test
cmp
ror
jmp
xchg
jno
mov
(bad)
js
pop
sbb
push
clc
(bad)
push
pop
pusha
out
popa
sbb
add
push
xor
xchg
push
cmc
or
test
pop
adc
push
inc
mov
xor
mov
jns
mov
rol
je
xor
scas
dec
xchg
push
inc
jle
or
adc
add
inc
test
cs
add
dec
xchg
jecxz
ret
add
adc
pop
jmp
pop
xchg
dec
mov
and
push
idiv
add
aad
mov
ror
popf
lock
sbb
ja
retf
and
push
xor
dec
xor
push
inc
inc
iret
daa
fmul
out
loopne
clc
adc
les
adc
cmc
arpl
nop
xchg
push
dec
js
jp
enter
jle
pusha
sbb
(bad)
mov
ss
mov
sub
adc
or
cmps
push
shr
inc
xchg
sub
jb
lods
aaa
sub
pshufw
inc
shl
adc
ins
shl
cmp
(bad)
xchg
push
sbb
xchg
mov
shr
xchg
push
or
das
add
movs
(bad)
fs
mov
fst
mov
add
loopne
or
addr16
sbb
in
push
ret
dec
(bad)
fisub
pop
dec
add
and
xchg
inc
adc
mov
sbb
xchg
push
mov
mov
or
jmp
mov
or
rcl
xor
adc
cmps
int3
cmp
leave
ret
jmp
dec
xlat
push
jecxz
push
fcmovne
imul
dec
out
test
js
cmp
sbb
push
adc
sbb
push
jp
xchg
xor
sbb
inc
push
pop
lea
inc
mov
adc
dec
add
fwait
loopne
push
stc
test
movs
jmp
fs
popa
inc
and
xchg
bswap
dec
add
(bad)
xchg
retf
or
mov
xor
lock
xor
xor
or
das
aas
pop
lods
mov
xor
daa
sub
pop
pop
xchg
sub
jmp
jne
cmps
or
jbe
or
push
push
dec
imul
sbb
sub
and
loope
jae
rcl
mov
lods
dec
je
dec
jne
dec
neg
arpl
movs
cmp
pop
pusha
rcl
add
dec
fild
mov
or
pop
mov
xor
xor
jmp
aaa
mov
cdq
mov
push
outs
je
jmp
aaa
aaa
js
dec
pop
jne
jmp
mov
sub
out
push
je
ja
sbb
rcl
pop
stc
mov
ins
add
xchg
adc
aaa
jmp
in
or
lea
lea
mov
das
cmp
les
movs
push
cs
mov
push
jns
adc
(bad)
push
push
pop
lock
jb
inc
jle
add
inc
jne
mov
ds
xchg
jmp
push
imul
mov
sbb
adc
shr
inc
and
stos
add
mov
sbb
mov
mov
adc
aaa
add
jne
loop
cdq
inc
push
bound
inc
xor
pushf
fs
pop
pop
dec
dec
add
mov
fcomp
pop
adc
sbb
jmp
clc
push
mov
push
push
pop
fcom
or
mov
push
addr16
or
aam
add
jo
movs
push
pop
or
pushf
loope
and
pop
data16
std
and
inc
pop
add
push
sbb
out
imul
ret
retf
inc
mov
scas
xchg
push
pop
das
and
sbb
xor
dec
or
imul
out
and
aaa
cdq
cmps
or
sbb
inc
add
and
adc
xchg
add
dec
pop
jg
push
sub
mov
pop
loopne
into
(bad)
adc
ds
mov
inc
test
add
(bad)
and
inc
push
xor
jb
rcl
and
mov
pop
out
mov
sbb
pop
adc
shl
xchg
or
ret
jbe
add
iret
inc
sbb
jns
xor
sbb
movs
call
adc
cmp
inc
push
lss
ins
push
imul
pop
dec
js
mov
sub
or
or
(bad)
push
sub
rol
sti
jne
push
mov
mov
xor
sbb
or
sub
and
and
jnp
push
mov
or
xor
fdiv
jbe
das
or
or
repz
or
mov
or
add
mov
or
dec
add
lea
xor
jbe
push
push
sub
jp
and
sbb
mov
inc
jl
dec
imul
lahf
push
xchg
push
push
sar
push
dec
jns
jo
add
imul
aaa
fs
vmptrst
add
jle
pop
cmps
or
(bad)
mov
retf
pop
fadd
add
fiadd
xor
icebp
bound
lds
cdq
ror
cmps
xchg
ret
mov
fwait
jg
jne
cmp
jb
or
out
adc
jne
cmps
adc
sbb
xor
mov
shl
sbb
bound
inc
clc
das
dec
xor
test
mov
add
(bad)
or
xchg
add
mov
or
popa
pop
ja
jmp
adc
cmp
xchg
mov
xlat
ss
imul
loope
test
sub
or
aaa
cmp
(bad)
repnz
dec
fsubr
daa
and
xchg
iret
push
test
inc
jle
inc
add
adc
jo
add
lock
inc
xchg
dec
and
jge
push
sub
shl
cld
lock
dec
shr
dec
fxtract
pop
mov
push
mov
push
pop
lods
mov
mov
mov
xchg
loopne
xchg
(bad)
push
stos
dec
cmc
adc
mov
imul
pop
fldcw
mov
shl
jae
lds
popa
sub
mov
ret
jae
xchg
jp
das
or
sbb
or
and
test
adc
inc
fnstcw
jne
inc
imul
cmp
addr16
jecxz
sub
test
inc
sbb
sar
test
pop
mov
jae
ret
jne
fist
or
cmp
mov
jae
cmc
pop
add
jns
xor
add
fmul
sbb
push
pop
mov
or
dec
aam
std
fist
or
sti
test
jbe
push
xor
outs
dec
add
imul
jbe
push
out
lahf
je
inc
or
lods
mov
nop
pxor
add
or
call
call
jne
and
pop
or
adc
mov
test
add
sub
or
xchg
(bad)
mov
xor
push
push
cwde
popa
add
or
push
add
dec
inc
add
ret
add
fptan
movs
inc
inc
js
and
inc
and
sbb
inc
cmps
pop
pop
test
or
add
imul
dec
or
clc
jo
jae
(bad)
pop
aaa
scas
jnp
inc
adc
adc
fidivr
pop
ret
or
xchg
push
sub
movs
rol
xor
ins
aam
and
pop
or
out
pushf
fs
xchg
dec
in
cld
sbb
xor
and
add
jmp
mov
or
or
mov
adc
or
sbb
adc
pop
sub
or
addr16
add
mov
shr
xor
xor
fiadd
dec
inc
and
inc
xor
pushf
retf
lea
jmp
adc
adc
xor
pop
push
push
cmp
shl
cwde
push
inc
cmp
or
adc
ror
inc
mov
lods
mov
and
ins
inc
movs
mov
add
lock
or
jmp
ins
daa
aaa
and
mov
movs
sub
popf
adc
push
or
cs
push
cmp
or
movs
or
cmp
cmp
push
xor
ins
test
mov
retf
js
add
loop
arpl
inc
into
xchg
or
in
jne
shr
inc
xchg
inc
(bad)
push
scas
fadd
movs
add
xor
int3
ins
xlat
cmp
and
xor
imul
sbb
inc
in
pop
xor
cli
stos
fld
pop
fcom
and
lock
mov
std
mov
mov
ret
xchg
repz
cmp
test
enter
sbb
mov
cwde
int3
mov
inc
pop
adc
mov
(bad)
cld
stos
push
fld
jmp
(bad)
mov
push
or
add
ucomiss
bound
inc
lahf
mov
call
adc
shl
sub
or
lahf
jo
icebp
sti
xor
mov
push
jmp
push
pop
data16
fwait
call
hlt
adc
jmp
sub
inc
ficom
jp
cli
push
iret
(bad)
lea
(bad)
movs
loopne
idiv
arpl
push
lea
(bad)
dec
movs
xor
mov
add
push
mov
out
test
test
dec
and
test
and
call
sahf
xchg
fsub
and
lock
or
aam
sub
xor
call
(bad)
test
push
xchg
jbe
sub
lds
mov
and
jl
xor
mulps
cmp
out
push
adc
pop
retf
jmp
not
pop
sub
inc
dec
fst
jbe
mov
add
adc
and
cmp
dec
(bad)
iret
sub
lock
pop
push
mov
pop
xchg
mov
pop
push
jecxz
js
js
ins
fsub
loop
jns
jns
call
pushf
pop
cld
fdivr
out
cmp
adc
pop
sbb
repz
sar
repnz
push
pop
call
pop
push
and
neg
ja
inc
lock
fadd
outs
pop
or
iret
fdiv
fdivp
sbb
jecxz
cmc
mov
in
neg
sti
sub
pop
repnz
push
int
out
xchg
jg
unpckhpd
cmp
adc
or
fstp
data16
std
and
pop
out
or
push
retf
jo
inc
jns
jnp
xchg
pusha
cmp
(bad)
dec
sbb
or
enter
sbb
jg
push
add
mov
iret
add
jmp
mov
aas
sub
or
nop
lods
fxam
std
fstsw
pusha
adc
mov
test
fisttp
sar
rol
mov
and
xlat
pushf
and
add
fiadd
fsub
aad
fxch
iret
cmp
or
push
and
rol
mov
mov
or
push
shl
in
or
pop
and
outs
lahf
adc
jmp
xor
jge
sub
or
or
lods
or
test
je
pop
pop
ret
add
pushf
stgi
sti
movs
ret
mov
fcomp
xchg
or
pop
pop
faddp
test
sar
inc
jbe
mov
mov
hlt
push
nop
xchg
outs
add
add
daa
mov
dec
and
fsub
mov
f2xm1
jno
jmp
(bad)
aad
aam
pop
or
test
fldcw
test
sar
add
movs
shl
inc
add
mov
mov
je
fld
and
or
add
test
out
call
or
movs
enter
or
add
or
fld
mov
shl
jl
ret
bound
jl
ret
or
fstp
ret
add
or
sbb
and
adc
das
mov
add
dec
push
inc
fnsave
pop
loop
mov
stos
jmp
daa
je
xlat
pop
mov
or
jb
jne
sbb
ins
pop
lods
sbb
cmp
hlt
loope
call
mov
fcomp
(bad)
jmp
fdiv
jge
(bad)
pop
enter
(bad)
cld
jmp
push
in
cmp
mov
jmp
ins
push
push
nop
jg
loopne
xor
sub
dec
sbb
cwde
sub
mov
xlat
add
cmp
shl
push
cwde
or
es
jge
add
xchg
or
leave
jne
enter
or
enter
or
push
inc
dec
ja
sbb
(bad)
sub
shr
xor
retf
or
not
bound
push
and
cmps
or
test
or
pop
loope
add
and
or
push
add
ins
mov
sub
push
dec
and
push
movs
lock
mov
div
mov
cmp
push
mov
lods
pop
(bad)
xchg
add
cmp
ins
and
icebp
add
add
ins
es
cmp
call
xchg
mov
in
je
cmps
xchg
sbb
and
lods
es
jmp
add
retf
rol
inc
push
push
scas
jns
sub
retf
push
adc
adc
pop
jo
leave
xor
sbb
dec
and
inc
push
imul
aas
or
test
adc
pusha
xor
or
push
enter
aaa
dec
mov
ja
call
int
add
jl
mov
lea
loope
lods
xchg
and
inc
adc
fwait
mov
dec
and
cmps
or
das
int3
add
adc
mov
fisubr
push
dec
jo
xor
js
sbb
das
fnstsw
nop
cmp
dec
movs
aam
or
rcl
jge
sub
jno
inc
pop
pop
inc
sub
xchg
into
lock
iret
repz
and
mov
push
(bad)
cli
iret
jle
les
rol
clc
push
cmp
repz
xchg
shl
clc
adc
xchg
in
repnz
or
sub
xor
(bad)
inc
aam
mov
cs
lds
push
xlat
pop
imul
ret
dec
jl
inc
sbb
ja
loope
inc
push
je
fld
add
push
add
adc
out
sub
xor
or
repnz
jns
idiv
repz
repz
and
lods
loope
(bad)
fld
je
or
fmul
faddp
in
mov
jns
and
leave
or
adc
pop
pop
pop
mov
enter
push
out
ss
cmp
stc
xchg
outs
cmp
jmp
sbb
jb
push
sub
xchg
jb
ja
pusha
fdivr
lea
out
cmp
(bad)
jb
jmp
mov
pop
inc
mov
mov
xlat
test
aaa
adc
or
mov
inc
cmp
add
sbb
jmp
add
add
retf
ins
out
xchg
rcr
xchg
jns
adc
fild
push
pop
fst
ret
or
cmc
ret
mov
sub
(bad)
push
jg
inc
jae
or
ror
bound
xchg
dec
in
jne
mov
xor
and
mov
stos
mov
test
sub
test
jne
fidivr
fcomp
std
data16
out
mov
outs
pop
cdq
shl
loope
cs
jmp
cmp
or
adc
xor
add
fldln2
inc
in
fwait
shl
adc
push
ret
inc
popa
sbb
shl
push
pop
mov
lock
(bad)
sub
fldz
mov
(bad)
mov
out
mov
xor
jmp
push
lock
ja
or
push
jb
xchg
add
lea
cmp
loopne
sbb
cs
mov
in
sahf
cmp
xor
mov
daa
jnp
mov
test
fcomp
call
add
fidiv
push
movs
ds
mov
or
icebp
push
mov
mov
or
movs
fcomp
or
mov
data16
push
je
pop
xor
xchg
sbb
xchg
aas
xor
add
xchg
(bad)
into
pop
fwait
pop
lods
and
push
lods
or
loopne
sub
popa
ret
scas
pop
inc
ins
xchg
jp
(bad)
div
push
push
sub
jnp
sbb
fadd
and
retf
cmp
push
pusha
les
dec
ja
(bad)
sbb
sbb
dec
mov
xchg
jno
fwait
mov
sbb
je
cmp
mov
aas
push
xor
test
jmp
test
sbb
xchg
js
(bad)
inc
inc
dec
fldcw
pop
ret
pop
ss
and
xchg
clc
(bad)
sbb
enter
das
and
fldpi
test
add
dec
mov
js
xor
cwde
jmp
pop
add
jbe
pop
test
mov
inc
mov
jbe
mov
cld
lea
jp
jnp
imul
inc
or
sbb
sbb
jnp
pop
mov
push
or
mov
inc
mov
daa
push
scas
ja
add
mov
mov
daa
mov
push
adc
mov
mov
or
push
jg
xchg
or
fmul
loope
sbb
push
popf
(bad)
sbb
jbe
scas
cli
push
jb
sub
inc
push
repnz
push
add
sub
mov
dec
mov
push
or
push
and
push
rcl
jo
ficomp
mov
les
adc
xor
bound
jb
iret
jnp
add
dec
xchg
in
imul
fisttp
or
or
test
push
shl
push
add
xor
arpl
push
test
push
pop
add
and
test
and
xor
ror
add
or
or
nop
mov
ret
and
dec
xor
adc
cmp
in
or
add
and
shr
and
pop
cmp
jmp
jg
retf
add
mov
push
imul
inc
dec
or
test
adc
add
add
sbb
adc
(bad)
clc
and
je
pop
je
or
add
sub
out
lea
xor
pop
leave
fstp
ss
jmp
sbb
lock
and
movs
pop
mov
jl
and
outs
mov
in
jecxz
sbb
mov
or
adc
(bad)
push
sub
cmp
add
or
in
aaa
dec
push
xor
loope
mov
add
fstp
aas
pusha
mov
pusha
loope
pop
sub
mov
xor
inc
jecxz
dec
in
adc
fnstsw
pusha
cmp
imul
icebp
and
cld
jle
pusha
pop
mov
adc
out
mov
out
retf
add
add
test
ins
inc
sub
fisttp
push
aas
ss
jo
ficomp
or
das
sub
push
mov
push
sti
xor
cmp
cmp
and
xor
add
call
fsubr
imul
jnp
sti
aaa
aaa
mov
inc
push
fstp
jmp
fisttp
jb
mov
or
call
pop
call
sbb
cmp
mov
out
add
add
out
mov
es
adc
je
adc
xor
jo
ins
call
rcl
mov
sbb
inc
mov
inc
pop
xchg
aam
xor
push
aaa
sbb
or
or
sbb
imul
and
dec
sub
mov
outs
pop
sub
jmp
sub
mov
add
push
or
psubusw
inc
(bad)
test
into
pop
jge
pusha
adc
div
add
add
neg
add
pop
jmp
jp
lock
fstp
sbb
call
cmp
push
or
xor
test
inc
or
add
inc
push
sub
test
push
adc
mov
xor
es
dec
rcr
cli
adc
lock
jbe
into
cmp
xchg
sbb
loopne
test
loopne
mov
pop
vmovd
mov
xchg
gs
std
mov
je
es
add
stc
and
and
inc
dec
or
ss
(bad)
add
push
mov
jle
push
add
mov
sbb
pop
push
sbb
pop
(bad)
jg
mov
add
sub
dec
push
adc
out
and
js
sub
aam
jle
or
jo
jbe
mov
je
fcomp
(bad)
dec
sbb
pop
or
push
cmps
add
pop
sub
hlt
xchg
mov
push
cmp
and
cli
jb
inc
test
xor
jo
push
das
test
lods
mov
mov
inc
test
fist
sbb
inc
and
adc
mov
les
shl
or
pusha
scas
add
push
ja
push
jmp
lahf
test
sbb
inc
dec
add
retf
mov
add
add
push
and
mov
mov
jbe
(bad)
push
das
adc
scas
cmp
loopne
push
pop
fnsave
arpl
mov
jne
jmp
jge
adc
or
add
fadd
jne
mov
jns
mov
jp
jecxz
test
sar
add
jb
and
xchg
fidiv
jp
in
shr
xchg
add
or
cdq
jge
sbb
and
rol
(bad)
push
mov
lock
pop
add
les
cmp
sbb
les
push
and
pop
(bad)
enter
nop
xor
jmp
pusha
mov
mov
in
int3
xchg
cmp
xchg
shl
or
push
adc
gs
sar
sbb
mov
cmp
push
or
push
out
mov
add
and
xchg
je
aad
pop
push
scas
or
push
stc
pop
mov
push
es
sub
adc
sub
push
push
shr
in
jmp
pusha
and
xchg
push
adc
fst
add
rcl
mov
inc
fldcw
add
not
dec
xor
pusha
mov
popa
fcom
sub
ins
or
mov
mov
or
or
inc
sbb
fld
(bad)
adc
adc
movs
inc
adc
and
nop
enter
loopne
sub
xor
iret
dec
jg
hlt
and
or
je
(bad)
movs
push
sub
cmp
push
sub
jge
or
call
inc
rol
and
stc
add
jmp
and
xor
out
adc
aas
adc
cmp
fld
call
not
ds
and
pop
repz
movs
add
fsubp
jno
jp
adc
rol
cmp
sbb
cli
ret
pop
or
pop
inc
(bad)
call
or
xchg
xchg
adc
imul
shr
jmp
mov
rcr
lahf
xchg
lock
add
cli
add
inc
push
push
shl
sbb
jne
sub
xchg
and
adc
add
ss
dec
add
sbb
push
clc
ja
loopne
push
push
aaa
jae
cmp
push
test
sub
nop
nop
jnp
ja
xor
push
daa
mov
xchg
je
in
mov
je
push
adc
dec
inc
fcom
adc
cmps
icebp
mov
and
xchg
add
push
xchg
dec
pop
dec
ror
and
test
nop
pusha
xchg
jb
mov
jge
push
or
sub
and
cs
in
ja
mov
dec
xchg
(bad)
in
cmp
sub
call
mov
or
test
test
or
(bad)
fxch
and
mov
xchg
or
add
and
xor
sbb
sbb
and
(bad)
xchg
sbb
out
dec
sbb
adc
adc
and
(bad)
lahf
adc
push
lock
mov
adc
mov
adc
imul
ficomp
push
inc
fcmovbe
retf
jp
add
sbb
ds
sbb
xchg
test
in
inc
add
mov
push
call
rcr
or
dec
add
and
sub
push
icebp
cmp
(bad)
push
xor
call
xor
imul
adc
push
push
adc
ficom
fdivr
cs
ins
scas
movs
cdq
and
and
push
inc
shl
sub
sub
xchg
mov
imul
and
dec
fidiv
das
sbb
xor
or
xor
inc
cmp
int
xor
inc
inc
inc
inc
or
xor
dec
dec
nop
xor
ror
dec
dec
xor
xor
ror
dec
pusha
dec
xor
push
ror
cmp
and
nop
xor
je
ror
xor
jl
imul
or
aas
mov
gs
cs
mov
cs
jb
nop
inc
xchg
inc
or
gs
cwde
sub
mov
sbb
movs
xor
cs
cdq
test
fs
retf
shl
mov
add
loop
pop
ficom
add
nop
jl
jge
sub
sbb
dec
mov
xor
leave
ss
xchg
fsubr
fsubr
retf
nop
pop
xchg
sub
push
jb
xchg
sub
gs
cs
aam
xchg
and
inc
or
popa
inc
cld
and
inc
repnz
repnz
in
xor
mov
shr
inc
or
mov
xchg
dec
adc
sbb
jl
dec
sbb
xchg
arpl
movs
mov
xor
cmp
dec
mov
sub
cmp
xchg
outs
xor
dec
cs
cmp
cmp
mov
inc
leave
ja
xchg
inc
inc
dec
popa
inc
cmovae
or
xchg
fidiv
xchg
sub
xor
xchg
cmp
pop
pop
add
movs
pop
and
pop
mov
dec
push
aam
xlat
fwait
cmp
(bad)
std
test
imul
sub
push
or
jbe
cmp
adc
ss
in
and
sub
jecxz
in
xor
cmp
daa
ins
dec
mov
inc
inc
cmovs
dec
dec
dec
push
push
pop
push
adc
sub
and
jo
inc
or
cmp
fs
test
adc
mov
nop
xchg
dec
es
fs
pushf
mov
movs
test
xchg
dec
xor
rol
int3
ins
xchg
or
sar
xor
fsub
xchg
dec
xor
in
in
aam
xor
and
hlt
clc
cmp
and
cld
add
add
add
or
and
dec
fwait
adc
xor
sbb
and
dec
xor
and
xor
leave
and
cmp
sbb
inc
dec
dec
fs
dec
cmps
mov
pop
ror
cdq
pop
pusha
sbb
inc
lods
inc
aad
sbb
aas
inc
pop
dec
call
pop
jmp
adc
mov
adc
add
jmp
jmp
mov
and
clc
adc
mov
jge
add
mov
out
or
imul
xchg
outs
or
add
int3
or
xor
jbe
cmp
cld
xchg
xor
add
jns
hlt
dec
ret
int3
adc
test
xor
ror
outs
push
stc
fcomp
add
arpl
lds
sub
rep
or
pop
mov
or
jmp
test
mov
ja
dec
dec
cld
sbb
adc
xor
aad
lods
ins
add
mov
push
push
inc
push
mov
dec
repz
fmul
daa
or
adc
lock
outs
ja
and
adc
(bad)
pusha
mov
jno
or
retf
push
movs
jmp
loopne
jge
jp
jl
or
jg
sub
mov
inc
sub
jge
cmp
jmp
and
adc
push
shr
fimul
mov
cmc
jmp
mov
fisttp
(bad)
jo
xor
or
xor
mov
lock
and
mov
shl
gs
xchg
sub
out
sbb
cmp
and
add
mov
cmp
lock
jmp
or
adc
fmul
in
retf
adc
sbb
jb
in
sbb
and
push
cs
stos
add
and
inc
jb
in
or
dec
push
scas
call
adc
mov
sbb
retf
shl
ja
lea
sbb
ror
jmp
stos
xchg
or
mov
and
dec
mov
or
sbb
mov
and
rcl
movs
push
xchg
dec
call
ins
jae
sub
push
xor
outs
dec
xor
push
daa
sub
and
push
sub
xchg
push
cs
das
and
cmp
jo
outs
add
push
sbb
dec
dec
call
adc
retf
mov
nop
mov
nop
sub
push
cmp
lods
add
in
add
adc
test
sbb
int
xor
mov
sbb
int3
add
gs
push
mov
mov
jecxz
xchg
xchg
jbe
and
xor
mov
add
popf
ins
or
mov
add
push
jo
in
mov
cmp
xor
cwde
or
test
ins
ins
inc
lods
pop
adc
pop
nop
pop
(bad)
hlt
mov
lods
and
push
pusha
ret
dec
push
dec
ffreep
sub
or
and
je
mov
in
add
fmul
nop
adc
dec
fld
adc
mov
in
sar
sub
or
fdivr
inc
les
bound
mov
add
inc
push
movs
push
out
sub
ja
sahf
cmp
nop
pushf
adc
loopne
ss
out
dec
int
test
mov
js
or
mov
sbb
add
push
adc
jle
sub
pusha
mov
loopne
test
in
dec
shl
fcom
add
pop
pop
sub
or
fs
ds
mov
mov
push
push
inc
outs
into
sbb
or
repnz
mov
pop
add
mov
cs
mov
lea
scas
mov
and
mov
(bad)
mov
mov
sbb
ins
dec
mov
adc
sbb
in
mov
or
out
push
and
jl
push
xor
aad
dec
add
mov
jg
lea
push
retf
pusha
jmp
int
xor
push
or
jle
mov
daa
in
in
push
add
push
push
fdivr
dec
sub
repnz
outs
push
sbb
adc
call
cmps
add
sbb
and
imul
rcl
(bad)
les
dec
jae
int3
enter
movs
lea
cmp
ret
jmp
mov
in
loopne
lahf
imul
jmp
inc
mov
and
mov
(bad)
test
int3
xchg
js
pop
pop
adc
pop
nop
test
inc
sub
push
in
push
push
lahf
inc
add
and
sbb
ret
sbb
enter
leave
inc
jl
sbb
xchg
push
(bad)
and
mov
icebp
out
inc
popa
sbb
mov
dec
sub
mov
les
inc
test
shl
inc
popa
add
pop
sub
adc
mov
sbb
mov
xlat
clc
dec
inc
add
add
jmp
(bad)
leave
stc
jbe
mov
push
xor
cmps
mov
pushf
mov
add
dec
inc
add
dec
sub
pop
push
sub
pusha
aaa
mov
and
gs
sbb
push
js
add
push
dec
mov
stos
cmp
jle
rol
pop
push
arpl
push
jl
imul
dec
test
and
xchg
cmp
mov
(bad)
data16
sti
and
ja
stos
xchg
and
dec
data16
mov
out
push
add
jmp
jmp
mov
(bad)
xchg
fidivr
mov
pop
pop
add
push
fs
jmp
dec
enter
xor
inc
lahf
inc
cmp
ja
add
sbb
push
add
push
add
lea
adc
cmps
leave
fcmovu
mov
inc
cmp
jl
stc
pop
jle
add
enter
push
sbb
xor
xchg
xchg
dec
test
push
test
add
stos
sub
add
iret
and
and
xlat
sub
lods
inc
pop
(bad)
nop
hlt
inc
push
nop
(bad)
call
or
xor
sbb
and
xchg
lds
call
pushw
pop
js
add
data16
cld
jmp
cmp
xor
xor
xor
or
pop
push
pop
add
popa
push
add
(bad)
or
push
adc
or
inc
ficomp
sbb
sbb
or
fmul
sti
adc
nop
add
addr16
or
outs
or
jmp
test
adc
push
push
imul
xchg
movs
call
sbb
pop
add
push
jne
jno
mov
enter
dec
test
mov
push
mov
or
test
lahf
inc
add
js
dec
sub
movs
add
ret
and
or
mov
neg
jmp
add
or
push
cmp
daa
das
xchg
sbb
das
out
outs
sbb
add
(bad)
mov
movs
jae
fadd
mov
and
pushf
ret
push
or
aad
inc
xor
clc
retf
push
xchg
cmps
push
and
mov
push
cmp
inc
xor
pop
imul
sub
sub
sbb
or
jp
adc
nop
pop
jp
dec
ins
(bad)
(bad)
imul
pop
jmp
inc
out
sbb
inc
in
mov
mov
cmp
mov
jo
add
dec
into
xchg
jmp
or
add
pop
inc
inc
xchg
mov
(bad)
xchg
adc
xor
add
and
add
addr16
in
push
dec
fdivr
fcom
mov
mov
les
xor
test
xor
data16
lods
or
xor
push
fist
push
or
push
add
fist
pop
in
mov
push
push
xchg
repnz
mov
data16
jo
jmp
cmp
test
sub
push
jecxz
sbb
sahf
xchg
aas
rcl
mov
inc
sbb
nop
inc
(bad)
xor
mov
add
pop
rcr
mov
mov
mov
rcl
inc
movs
retf
seto
pop
sub
mov
(bad)
(bad)
mov
ja
push
push
mov
mov
test
into
or
sub
fdiv
dec
add
jo
jno
xor
mov
nop
stos
and
or
cs
movs
mov
sbb
out
sbb
dec
inc
retf
mul
push
dec
(bad)
pop
in
adc
ret
inc
test
mov
int
xchg
loopne
xor
jb
lea
add
sbb
dec
mov
(bad)
mov
shl
push
cld
jne
mov
rcr
mov
jne
(bad)
dec
int
and
adc
mov
aaa
dec
jne
xchg
fwait
(bad)
cld
jb
lahf
out
mov
(bad)
(bad)
jmp
std
std
jmp
enter
cld
cld
jmp
fist
adc
xchg
clc
mov
in
adc
adc
inc
cmp
pop
pop
test
ins
xchg
and
sbb
int3
or
inc
pop
loop
xchg
cmp
or
mov
mov
cmps
inc
xor
fmulp
(bad)
test
cmps
repnz
or
add
adc
push
adc
push
nop
shr
arpl
ror
push
dec
mov
dec
mov
mov
dec
add
pop
push
retf
push
mov
mov
adc
and
push
dec
xor
or
fs
and
cmp
push
jo
fstp
push
(bad)
jp
movs
cmp
and
pop
mov
stc
fsub
call
and
fisttp
in
push
or
pop
cmp
imul
popa
and
xor
xchg
pop
jmp
ja
rcl
add
inc
push
xchg
rol
push
jne
and
sub
dec
dec
addr16
hlt
popf
mov
sub
adc
in
inc
mov
add
sbb
movs
movs
xor
adc
fisubr
call
push
add
jnp
mov
jne
cmp
inc
pop
pop
dec
dec
push
popa
push
sbb
loopne
xchg
cmp
add
push
je
loopne
adc
mov
inc
dec
xor
and
pop
adc
push
adc
mov
and
shl
ret
pop
fs
inc
pusha
jne
fs
pop
inc
add
sub
sbb
cmp
loopne
jne
loopne
sti
pop
ja
jne
fstp
and
cmp
inc
push
sbb
and
and
pop
out
in
and
rcr
xchg
hlt
jbe
imul
shl
sbb
popa
je
dec
sar
cmp
dec
or
sar
dec
jecxz
adc
or
and
cmp
add
fstp
(bad)
data16
inc
aaa
push
and
push
loope
mov
push
js
push
inc
add
movs
hlt
mov
les
xchg
sahf
cmp
and
cmp
sub
lock
std
js
popf
sub
gs
and
cmp
cmp
pusha
inc
inc
fld
and
out
inc
xchg
ficom
pop
sub
test
not
jne
push
jle
bound
sar
loop
loop
cmp
mov
fdiv
push
dec
dec
jp
lock
mov
inc
add
xor
add
adc
test
call
push
fwait
and
gs
imul
or
mov
pop
nop
xchg
sbb
xor
scas
xlat
mov
fs
sub
(bad)
mov
loopne
add
std
xchg
push
xor
clc
jl
aad
or
mov
test
push
mov
aam
dec
(bad)
sbb
ficomp
xlat
in
bound
inc
push
jmp
pusha
lods
xchg
cs
or
clc
push
(bad)
sbb
cmc
cmp
cli
adc
daa
pop
pop
and
nop
add
loopne
loop
adc
and
addr16
push
push
push
shr
push
ss
and
icebp
dec
push
(bad)
cld
jae
adc
ficomp
imul
and
pop
daa
(bad)
and
fcom
loopne
or
inc
dec
jns
test
sub
adc
add
mov
outs
stos
mov
mov
shr
test
mov
adc
adc
add
lahf
xor
call
cmps
dec
pop
jmp
sbb
inc
cmp
pop
pop
adc
mov
aaa
adc
xchg
xor
repnz
jb
sbb
sub
out
movs
add
xor
ins
cdq
inc
ins
loope
ret
imul
test
inc
out
mov
and
test
mov
pop
and
dec
fs
add
pop
mov
fwait
(bad)
jl
push
push
loopne
xor
dec
adc
btc
call
xor
mov
mov
push
in
adc
fdivr
jle
mov
fild
xchg
clc
sub
cmp
push
push
push
std
aam
push
mov
lea
mov
ret
fsubr
adc
dec
add
sub
fisubr
and
pop
call
fsubr
push
add
bound
pop
outs
mov
arpl
xor
mov
pop
inc
ror
push
adc
pop
push
or
jae
fcomp
mov
push
push
push
movs
retf
jge
adc
jo
(bad)
enter
test
add
loope
dec
jmp
lock
ret
push
icebp
ins
imul
dec
sub
push
ins
gs
xor
inc
rcr
lock
mov
inc
sub
cli
int3
les
pop
cmp
leave
test
scas
loop
pop
dec
xchg
and
into
push
push
inc
and
add
inc
aam
mov
daa
imul
fadd
fcmovnb
std
mov
aaa
cmp
jne
rol
dec
je
xor
push
popa
xchg
(bad)
jae
repz
or
les
xor
ret
dec
scas
mov
cmp
jne
mov
inc
add
imul
mov
fsub
aas
mov
jge
adc
push
push
adc
adc
test
or
call
inc
leave
es
or
aad
rol
adc
mov
ja
inc
adc
push
outs
sbb
add
jl
out
add
push
loop
jle
or
or
sbb
shl
adc
push
push
rcr
vmwrite
imul
je
adc
sub
aam
cmp
xchg
stos
scas
gs
cmp
mov
push
std
mov
inc
sbb
fisub
jo
scas
(bad)
out
mov
mov
adc
jns
ret
popa
mov
fs
fucom
ret
jne
fwait
add
jmp
mov
mov
mov
add
push
test
pop
cmps
std
add
out
dec
push
or
dec
das
shl
dec
aas
stos
jmp
aas
mov
stos
sar
cmp
xor
pop
test
es
hlt
xchg
out
bound
ror
stos
push
mov
or
and
sbb
xor
or
stos
cmp
lea
xchg
add
push
add
pop
cmps
pop
dec
jle
inc
jnp
loopne
(bad)
mov
pop
cwde
pop
sub
inc
shl
add
push
push
or
in
sbb
jne
jbe
cs
rol
and
or
ret
repnz
repz
jl
mov
and
mov
out
mov
inc
pusha
bound
adc
iret
or
adc
cmp
jno
int
cmp
jb
cmp
dec
mov
jp
jno
inc
sar
jp
inc
jae
in
add
push
cmp
fsub
jo
xchg
and
(bad)
ds
add
mov
and
xor
and
loopne
lea
into
cmp
add
add
paddsb
or
jge
inc
stos
inc
in
add
shl
or
or
push
in
xor
enter
pop
ror
test
das
mov
rcr
push
iret
mov
and
lock
fdiv
xlat
lock
popf
or
dec
inc
jb
and
popf
xor
(bad)
ds
push
or
xor
xchg
mov
(bad)
shl
loopne
rcr
shl
jl
rol
inc
outs
rcl
pop
sub
jne
xchg
xchg
mov
fs
clc
leave
xchg
or
(bad)
das
pop
dec
lea
push
sbb
dec
rcr
inc
lods
js
icebp
cdq
pop
out
test
jne
inc
mov
(bad)
out
ror
or
inc
rcr
or
fdivr
inc
(bad)
push
sub
lds
sbb
stos
jmp
pop
push
push
out
pop
jp
add
(bad)
xchg
mov
jp
mov
dec
jns
cmp
mov
shl
adc
hlt
push
aas
push
and
fist
or
lea
frstor
clc
fs
movs
addr16
das
cmp
or
mov
and
scas
cmp
xchg
arpl
and
repnz
sbb
inc
add
mov
jg
into
out
shl
movs
jl
dec
iret
and
dec
inc
jecxz
dec
out
and
loop
or
adc
lods
push
sbb
nop
data16
pop
test
jecxz
xchg
cmp
fisttp
inc
jmp
mov
xor
pop
lahf
fld
and
jne
mov
add
dec
push
mov
repz
mov
fs
push
xor
daa
repnz
push
adc
pop
inc
pop
or
dec
test
dec
repz
push
nop
sub
pop
pop
adc
scas
inc
sbb
test
pop
pop
dec
inc
add
cmps
sbb
xchg
and
xchg
lea
xchg
popa
pop
dec
outs
or
enter
retf
or
add
repz
shr
shr
mov
shr
or
retf
inc
adc
call
shr
inc
ins
test
and
add
test
inc
arpl
mov
sub
cmp
push
adc
into
add
jp
push
loopne
mov
pop
imul
je
inc
jl
in
sbb
cmp
mov
fild
add
xor
mov
and
inc
fisttp
cmp
dec
lods
cli
ins
sub
bound
mov
jnp
inc
pop
retf
pop
or
push
pop
out
push
dec
cmp
cmp
stc
push
xor
inc
add
pop
ret
nop
mov
jl
in
sub
lahf
inc
or
and
xchg
call
cmp
push
xchg
mov
mov
jo
mov
adc
loop
out
adc
sub
fld
loope
cmp
dec
fsubr
mov
lock
ins
add
push
jne
sbb
inc
jns
call
pusha
rol
(bad)
xchg
rol
int3
test
pop
dec
pop
je
data16
stos
adc
das
mov
inc
add
(bad)
jo
loopne
outs
sbb
loopne
sbb
add
xor
jns
ret
push
in
pop
sub
pop
loop
jmp
add
adc
adc
and
push
(bad)
int
add
jnp
add
aas
or
inc
(bad)
inc
pusha
arpl
adc
fldcw
sub
call
sahf
ss
retf
sbb
movs
push
pop
dec
out
push
ror
fnstenv
jmp
mov
sub
dec
shl
iret
popa
adc
int3
cmp
dec
cmp
dec
push
push
adc
inc
xchg
enter
loopne
jp
xchg
jo
xor
ficom
pop
test
mov
and
sti
movs
outs
add
xchg
rcl
scas
dec
inc
fwait
adc
mul
add
xchg
(bad)
xchg
cld
or
mov
add
and
xor
and
dec
ja
imul
sub
pop
pop
imul
adc
dec
cld
int3
inc
push
adc
push
push
and
inc
clc
xor
ret
push
push
punpckhdq
(bad)
leave
lock
push
lea
hlt
sbb
inc
and
mov
mov
and
or
cmp
mov
scas
cmps
retf
mov
push
aad
fcmovbe
inc
xor
ret
mov
adc
mov
pop
dec
loope
fwait
shl
sbb
sub
cmp
imul
push
or
scas
test
push
pushf
adc
pop
xor
or
mov
dec
or
cli
adc
imul
and
inc
xlat
rcl
mov
test
nop
xchg
adc
mov
and
ins
gs
retf
jle
pop
add
cdq
cmp
fmul
pop
aas
push
mov
aad
(bad)
je
dec
push
add
inc
push
lods
loop
ins
stc
dec
xchg
or
into
imul
push
jecxz
push
push
mov
shl
call
pop
sbb
lods
in
les
outs
and
fiadd
fadd
inc
or
add
mov
repnz
cmp
icebp
push
xor
xlat
or
inc
(bad)
adc
call
jae
or
cmp
fst
imul
mov
push
inc
mov
(bad)
mov
stos
cmp
dec
or
add
fs
xchg
add
add
adc
inc
push
inc
push
add
add
and
add
adc
jb
outs
pop
or
xor
add
or
fist
xor
aam
add
pusha
jl
push
jmp
dec
and
mov
mov
neg
add
push
or
test
pop
call
adc
sub
mov
sbb
jmp
pusha
push
jmp
into
int
add
scas
and
adc
pop
cmc
cmp
nop
rol
add
dec
mov
dec
sbb
in
mov
mov
imul
ja
test
or
adc
push
mov
mov
pop
out
pop
mov
push
jmp
or
cmp
sub
xor
je
(bad)
push
add
call
push
pop
test
push
ja
add
or
add
xchg
inc
push
sub
sub
jmp
and
rcr
or
ds
mov
lods
push
add
movs
and
cmp
add
mov
lods
and
adc
scas
mov
in
inc
ds
inc
dec
add
mov
xor
or
ror
lds
or
adc
inc
jecxz
popa
clc
push
rol
leave
add
retf
js
(bad)
je
mov
iret
mov
push
sbb
(bad)
and
and
push
enter
xor
cmp
mov
add
mov
pop
push
dec
inc
inc
add
inc
pop
inc
loop
add
rcr
mov
push
xchg
lds
adc
mov
ret
daa
sbb
push
mov
ret
pop
mov
and
jmp
dec
inc
xchg
sbb
adc
ror
lds
adc
sbb
pop
push
test
pop
fwait
retf
or
pop
stc
mov
rcl
jmp
ins
jecxz
call
js
fimul
ins
pop
idiv
and
jp
cmps
enter
cld
lock
je
or
sub
in
and
cmp
push
push
in
fidivr
or
sub
enter
or
bound
sub
ret
mov
and
or
and
xchg
jl
xor
cmps
push
outs
xchg
pop
or
xchg
xchg
inc
push
add
retf
das
push
mov
mov
in
and
sbb
sub
popa
bound
or
movs
fist
and
imul
ins
jecxz
shl
and
popf
mov
int
add
mov
sbb
lahf
sbb
jp
add
push
fild
ds
push
inc
pop
lea
in
or
jmp
rcl
cdq
mov
je
and
outs
adc
sub
ret
xchg
xchg
or
test
xor
add
fs
out
cmc
cwde
popa
les
add
lahf
xchg
ret
xchg
and
gs
dec
sbb
bound
jne
test
jmp
jne
into
pop
ins
add
(bad)
fadd
enter
or
xor
ss
or
jmp
mov
mov
mov
mov
jns
pop
push
mov
sbb
pushf
xor
es
push
jae
mov
or
jb
jp
cmps
data16
retf
adc
inc
xor
push
test
sub
ret
dec
mov
mov
or
hlt
outs
mov
mov
push
xor
pop
mov
loopne
addr16
cmps
ins
shl
push
js
adc
inc
aam
jbe
clc
ins
ins
js
adc
xchg
push
or
sub
nop
xchg
sub
lahf
or
dec
fnstcw
(bad)
xor
sub
adc
in
cmp
cmp
and
sahf
push
fld
dec
or
dec
xchg
movs
mov
inc
push
(bad)
ror
or
adc
cmp
fild
pop
pop
jnp
push
mov
sub
jmp
stc
push
fwait
or
or
lea
sbb
daa
xchg
dec
rcr
int3
sahf
popa
push
popf
mov
xchg
fdivr
mov
adc
sar
mov
arpl
mov
pop
lahf
ficom
or
int
inc
mov
test
leave
push
dec
jle
mov
cs
call
arpl
inc
cmp
sar
pop
fdivr
mov
pop
loop
mov
mov
fs
and
test
mov
jmp
mov
inc
add
sbb
(bad)
aam
jmp
pop
and
pop
out
and
(bad)
jne
shl
cmp
sub
push
xchg
sub
imul
mov
push
movs
push
pop
rcl
ins
adc
cwde
and
sub
sub
aas
inc
sbb
call
es
loope
mov
mov
test
cwde
push
sbb
pop
jbe
and
(bad)
ret
pop
test
push
push
pop
xor
mov
adc
push
add
inc
mov
cdq
daa
xor
(bad)
fst
cmp
jge
mov
lock
mov
(bad)
adc
aam
push
and
aaa
sbb
or
imul
sbb
inc
or
jp
nop
xor
and
movs
test
leave
cwde
js
mov
ja
shl
js
add
mov
mov
lods
inc
pop
leave
out
xchg
add
adc
and
or
xor
mov
int
jmp
cs
(bad)
stos
inc
add
push
adc
ds
xchg
cmc
je
dec
dec
mov
add
and
mov
out
rcl
mov
pop
pop
push
or
sbb
add
cmps
sub
mov
out
xor
dec
adc
(bad)
scas
dec
sub
sub
sbb
ret
dec
rcr
test
mov
sub
jecxz
pop
mov
leave
add
jo
push
or
mov
inc
and
ds
daa
mov
pop
ins
ins
ss
dec
or
or
ss
pop
pop
and
pop
test
nop
div
sbb
mov
gs
jo
add
dec
mov
mov
xor
and
mov
cmp
sbb
mov
cmp
mov
fabs
push
xor
test
iret
jo
push
jp
and
das
nop
ret
pop
xor
mov
jp
pop
(bad)
pop
(bad)
(bad)
cmp
cdq
movs
sar
or
aaa
int
out
mov
fldenv
jno
mov
test
xor
fmul
fidiv
jge
fcomp
ror
mov
lods
call
mov
out
push
push
jo
es
jb
pop
int3
enter
retf
inc
or
and
sbb
fistp
and
add
mov
rol
mov
shl
aaa
cdq
or
pop
pushf
dec
mov
push
xchg
mov
mov
fisub
das
adc
cmp
inc
push
add
sub
cwde
pop
aas
and
push
adc
mov
push
adc
xor
ficom
scas
cmps
and
inc
aaa
lods
adc
outs
inc
not
sbb
jo
or
adc
sete
or
xchg
push
xor
jmp
loopne
int3
lock
adc
outs
and
push
mov
xor
dec
sbb
sub
pop
mov
(bad)
and
inc
add
aam
mov
add
sbb
ret
add
fild
jle
or
lock
inc
inc
cmp
es
adc
or
clc
add
sti
stc
stc
sbb
and
jb
sbb
sbb
pop
pop
xchg
test
push
cld
stos
test
fs
jo
icebp
mov
jl
imul
in
inc
mov
retf
aaa
and
mov
dec
dec
dec
dec
inc
sbb
cld
data16
clc
sub
test
jo
jg
fild
add
test
xor
add
out
sbb
cmc
or
dec
fdiv
idiv
fisub
fcomp
stc
jmp
cmp
xor
(bad)
addr16
mov
push
mov
adc
movs
push
test
sub
sbb
adc
jmp
es
mov
inc
or
inc
rcr
dec
stos
adc
(bad)
adc
xchg
dec
cmp
inc
and
xchg
shl
dec
inc
and
clc
test
and
inc
push
sbb
dec
nop
add
jge
pop
adc
mov
push
gs
into
add
mov
jp
shl
pushf
test
pop
adc
xor
or
fs
adc
mov
outs
inc
push
aaa
add
push
cmp
je
mov
adc
sbb
or
or
cmp
jbe
mov
out
jmp
push
inc
out
mov
push
inc
mov
imul
dec
cli
mov
rol
mov
cmp
pop
fs
cld
add
jle
leave
repz
jb
push
mov
test
test
sub
dec
cmp
(bad)
pusha
rcr
pop
sbb
fadd
and
or
adc
mov
mov
js
test
push
push
aam
push
jae
outs
jmp
xor
sbb
ret
dec
shr
in
data16
add
enter
add
and
lock
mov
mov
sbb
mov
sbb
jmp
sub
mov
jp
push
sub
or
or
int
ja
sub
mov
int
sbb
add
dec
out
dec
fidivr
cmp
mov
rcr
adc
cmp
je
ins
scas
ret
push
fstp
popa
jbe
bound
sahf
neg
ret
xor
mov
jno
adc
mov
jmp
call
bound
lea
in
jge
inc
or
sbb
sub
lahf
cs
cdq
mov
jmp
loopne
aaa
pop
in
inc
mov
mov
imul
js
fcmovb
ja
mov
ret
mov
cmp
dec
mov
add
cmp
sub
pop
sbb
sub
fsub
les
mov
and
mov
cmp
mov
je
in
or
push
cmp
std
mov
pop
add
sbb
or
xchg
jg
xor
inc
push
sti
push
lock
adc
in
pop
mov
push
pushf
dec
lea
push
mov
fs
enter
dec
sbb
pop
js
push
xor
ins
cmps
inc
sbb
pop
nop
xchg
std
or
fmul
(bad)
loopne
jmp
inc
not
dec
ds
and
lea
in
jbe
xchg
cmp
js
call
ds
mov
ret
shl
and
push
cmps
dec
lods
sbb
not
xor
pop
in
test
mov
inc
cwde
(bad)
test
pop
xchg
push
sbb
hlt
jmp
jbe
je
std
adc
mov
dec
jecxz
hlt
sbb
xor
aas
push
nop
pop
and
adc
cmc
add
or
ins
mov
outs
adc
je
dec
nop
mov
jb
inc
les
sbb
ror
add
cwde
clc
jp
adc
push
and
mov
mov
and
outs
or
fdivr
aas
popa
loopne
adc
xor
sub
mov
sbb
adc
adc
(bad)
iret
cmps
test
inc
and
das
or
or
add
mov
mov
(bad)
(bad)
call
pop
ret
ror
test
or
adc
cmp
rcr
jecxz
jmp
mov
(bad)
adc
or
inc
lods
mov
sub
and
sbb
xor
jnp
push
cmp
push
add
jnp
movs
sub
cld
mov
leave
adc
dec
jl
inc
sbb
mov
add
imul
out
in
mov
jo
call
movsx
std
test
enter
loop
cwde
mov
test
jns
mov
call
cwde
xor
adc
mov
sar
in
and
mov
lods
xchg
xor
movs
jo
jo
pop
push
add
or
dec
loop
xchg
or
sahf
inc
sti
xchg
je
shl
in
mov
mov
or
(bad)
and
into
adc
xor
xchg
stc
into
ds
out
sbb
(bad)
ja
pusha
enter
inc
inc
pop
sahf
sbb
sbb
push
repnz
jl
test
movs
retf
test
or
sbb
cmp
mov
test
rol
or
lea
fnstcw
loopne
dec
nop
test
retf
dec
push
xchg
aad
loopne
cdq
retf
shr
or
ret
movs
jns
mov
inc
push
add
mov
jge
retf
xchg
adc
sar
sbb
mov
cmp
add
cmp
(bad)
and
rol
mov
mov
leave
sub
test
xor
lahf
push
push
retf
(bad)
push
stc
dec
jae
mov
lock
pop
in
shr
loope
shr
or
aas
sbb
or
dec
mov
sbb
lock
mov
xor
lock
imul
mov
test
div
inc
imul
push
and
jl
stc
test
inc
in
iret
push
and
call
dec
cmp
inc
mov
inc
int
mov
retf
or
stc
fisubr
or
or
(bad)
popa
mov
loop
and
shr
inc
div
dec
dec
rol
lock
mov
dec
bound
sbb
push
repnz
pushw
sbb
loop
xchg
mov
cmp
jne
in
add
inc
mov
push
pop
in
aam
daa
adc
fisttp
cmp
and
mov
pop
sahf
sbb
push
xor
movs
out
shl
sbb
add
jge
inc
dec
inc
mov
push
shl
(bad)
dec
test
mov
mov
or
dec
mov
mov
cmp
les
mov
test
dec
(bad)
or
cli
mov
outs
inc
cmove
xchg
add
iret
idiv
adc
or
adc
jg
xchg
addr16
or
(bad)
test
dec
gs
lock
out
or
add
enter
pop
jge
dec
inc
lock
or
cmp
jne
sub
add
in
sub
inc
loopne
inc
lods
loopne
stos
retf
mov
movs
and
cwde
sbb
add
sbb
mul
add
sbb
mov
stos
call
ss
scas
cmp
jle
push
pop
outs
call
cmp
inc
arpl
xchg
cdq
and
or
dec
in
in
dec
add
inc
mov
rcr
mov
adc
neg
jmp
jle
inc
imul
inc
ja
add
imul
call
pop
jl
loopne
fdiv
lea
ret
dec
and
jecxz
inc
loopne
test
out
jo
pop
add
cwde
inc
sar
sub
dec
mov
enter
lea
sub
xlat
cmp
or
movs
mov
xabort
cmps
or
lea
dec
fdivr
(bad)
push
shl
add
pop
enter
retf
popf
push
clc
pop
add
add
or
lahf
in
or
mov
inc
js
or
or
in
xchg
cmp
fdivr
inc
cmp
fiadd
add
dec
cmp
add
dec
xchg
jecxz
dec
add
add
fadd
mov
mov
mov
jp
jne
dec
mov
pop
push
or
jb
int
pushf
adc
in
fadd
cwde
mov
xor
or
mov
cwde
push
mov
mov
xor
fild
mov
js
add
add
dec
movs
test
cmp
adc
jp
ror
pop
jmp
inc
cmp
cmc
es
or
test
or
add
cmps
scas
nop
add
or
add
or
add
iret
je
push
pop
scas
add
adc
les
mov
sub
(bad)
add
push
ret
or
xchg
adc
xchg
dec
add
add
mov
mov
pop
(bad)
mov
mov
and
cmp
xor
into
pusha
adc
sub
inc
pop
test
mov
rcr
inc
and
cmpps
fmul
dec
inc
cvtpi2ps
inc
adc
dec
adc
ror
lock
inc
push
pop
jne
or
or
adc
and
lock
movs
invd
cmps
inc
je
mov
xor
je
aas
pop
xlat
lahf
push
mov
adc
xlat
push
scas
cmp
cmp
add
pop
dec
or
loope
cmp
ret
test
or
shl
ret
cwde
adc
add
mov
cld
and
bound
fst
rol
xor
rol
or
sub
fcom
inc
scas
or
adc
mov
imul
sub
int
xchg
test
cs
lods
ror
add
stmxcsr
hlt
bound
or
push
pop
sahf
call
or
adc
mov
jbe
adc
jp
mov
mov
push
xor
cwde
jmp
inc
jg
push
cmp
jns
into
into
mov
or
sub
fsubp
fisttp
sahf
(bad)
nop
shl
mov
inc
sub
shl
(bad)
or
sbb
das
mov
jbe
and
add
mov
push
adc
hlt
add
leave
lahf
and
loop
or
or
add
repnz
add
add
or
mov
and
call
inc
ret
jne
cmp
(bad)
sub
jmp
mov
mov
push
xchg
xchg
xchg
retf
int3
popa
and
push
add
(bad)
pop
mov
add
(bad)
test
mov
xchg
sub
mov
pop
sbb
mov
ret
or
outs
inc
or
inc
imul
mov
add
sub
push
mov
movs
dec
nop
add
mov
xchg
ins
imul
jp
aaa
push
(bad)
sbb
shl
test
add
ds
seta
push
cmp
pop
sbb
pop
push
cs
or
movs
mov
pushf
test
rol
push
adc
(bad)
stc
add
jno
sbb
imul
xor
nop
outs
ins
mov
inc
pop
test
push
inc
jecxz
add
xor
aam
pop
jg
jl
push
call
jbe
aaa
fs
and
seto
test
sub
or
add
cwde
lea
mov
in
mov
test
sbb
sbb
test
push
inc
bound
pusha
push
sbb
ret
add
jns
and
out
mov
sub
sbb
scas
dec
cwde
push
add
add
jnp
pcmpeqd
cmps
push
cmp
pop
cmp
sub
imul
pop
shl
arpl
or
jae
jbe
inc
in
(bad)
sbb
addr16
add
and
ret
xchg
jp
add
adc
sub
popf
and
or
into
inc
add
test
fs
das
nop
pop
add
or
xor
pop
sar
mov
dec
out
sub
lock
js
jle
jmp
ja
sbb
stc
fs
sbb
xchg
mov
out
fs
addr16
(bad)
adc
(bad)
sub
sbb
(bad)
xchg
adc
mov
sub
mov
push
or
loopne
imul
mov
push
and
lods
cs
cmp
dec
adc
int
and
(bad)
mov
jg
(bad)
mov
in
in
fadd
mov
or
clc
xchg
retf
in
mov
lock
call
in
(bad)
cs
retf
in
ror
enter
mov
lods
aam
sbb
mov
dec
fadd
fild
adc
xor
aam
ret
cmps
bound
std
jmp
lea
(bad)
and
adc
fcomp
jae
inc
mov
sub
and
push
addr16
inc
iret
(bad)
frstor
and
movs
inc
pop
sub
sbb
xor
sub
mov
aad
xchg
push
ror
iret
push
cmp
jmp
inc
jo
push
push
mov
fwait
push
xchg
clc
addr16
iret
fist
sbb
sub
jmp
es
(bad)
add
test
and
scas
inc
sub
gs
aas
sbb
pop
inc
jl
push
push
sbb
add
push
and
adc
push
xchg
ins
push
pop
xchg
xchg
fisubr
mov
ss
mul
rol
sar
clc
mov
mov
jp
or
cmps
aas
mov
mov
lods
jo
jg
add
xchg
xor
sbb
test
sub
pop
pop
dec
sbb
xchg
dec
dec
pop
rol
aad
or
pop
scas
dec
gs
jmp
mov
add
adc
stos
add
add
and
in
xchg
jg
jne
adc
add
inc
jecxz
xchg
ror
mov
js
retf
mov
fisttp
lea
push
and
sub
ins
ret
cdq
ins
push
enter
js
(bad)
ror
icebp
or
hlt
add
mov
mov
push
push
xor
jns
rcr
in
jg
enter
leave
or
push
int
inc
add
inc
mov
adc
push
mov
add
cmp
scas
mov
test
loope
ins
lmsw
fisubr
sub
mov
sbb
mov
sbb
adc
cmp
xchg
cdq
sbb
rcl
push
dec
pop
mov
jmp
jecxz
or
mov
jae
pop
xchg
fist
push
add
fbld
inc
mov
inc
adc
cmp
jnp
icebp
add
pop
inc
lahf
jle
push
into
add
mov
xchg
adc
pop
cmps
movs
xchg
sub
push
inc
dec
sbb
push
xchg
mov
div
scas
sbb
pop
(bad)
sub
inc
mov
mov
and
or
pop
push
push
push
sub
mov
in
or
and
add
mov
adc
das
add
out
xor
das
push
call
rol
sbb
or
test
or
into
cmp
mov
ins
inc
mov
mov
pop
push
pusha
pop
jg
adc
sub
mov
dec
sbb
or
pop
mov
ss
retf
pop
pop
push
jg
xor
xor
jnp
cmp
mov
test
xor
retf
cmp
mov
add
(bad)
(bad)
cli
jg
sub
and
aad
jns
jbe
lock
xor
cmp
and
or
movs
(bad)
imul
inc
test
mov
push
adc
mul
pusha
aaa
mov
sbb
or
xchg
scas
ficom
dec
add
push
in
(bad)
adc
cmp
xor
add
add
mov
sbb
sbb
xchg
ret
dec
cmp
pop
and
lock
retf
outs
mov
or
add
sbb
adc
push
ror
sbb
adc
mov
ja
xchg
jbe
mov
test
inc
bound
cli
int3
adc
mov
es
test
push
push
add
adc
add
jb
cmp
dec
not
xor
mov
sub
js
mov
inc
outs
adc
inc
(bad)
pop
pop
mov
adc
aad
clc
punpckhbw
push
pop
aad
jnp
adc
xor
mov
inc
sbb
dec
xor
xor
mov
mov
sbb
and
and
stos
or
push
lods
push
jae
add
lock
mov
and
imul
ret
mov
bound
call
sbb
and
int
pop
adc
jb
cmc
inc
mov
repnz
push
jns
cdq
adc
xor
sub
push
sub
scas
enter
push
and
pop
stc
mov
add
mov
popf
into
mov
mov
inc
mov
lods
fist
fdiv
push
scas
fmul
jns
jl
add
pop
mov
add
(bad)
jmp
add
xlat
adc
pop
push
les
sar
nop
test
add
inc
movs
mov
repz
inc
xchg
call
add
push
jnp
sbb
push
je
push
add
scas
push
popf
adc
es
lods
adc
pop
lods
or
or
rol
or
sbb
and
pop
cmp
inc
push
stos
xchg
pop
test
enter
add
or
mov
je
jl
in
pop
lock
mov
loopne
fist
and
je
dec
mov
xor
imul
jno
(bad)
push
aaa
add
sbb
add
xor
ins
movs
rol
mov
adc
icebp
lds
fwait
or
inc
push
mov
mov
loop
nop
cmps
ins
and
and
or
js
jge
loop
cmc
cmp
lods
ins
cdq
pop
cmp
jae
jp
mov
push
call
inc
ss
jmp
jge
sbb
sar
or
arpl
sub
arpl
inc
jl
scas
rcl
jnp
jmp
aas
mov
clc
or
pop
mov
ins
cld
or
pop
cmp
inc
dec
add
mov
xor
pop
or
enter
mov
jmp
cld
std
adc
das
fiadd
in
mov
rcr
inc
sbb
or
pop
pop
and
js
mov
dec
inc
pop
mov
mov
lahf
int
add
movs
call
je
ret
jo
aad
sbb
aas
outs
push
push
and
aad
ret
ret
or
frstor
in
mov
jecxz
adc
jbe
call
or
add
not
mov
cmp
xchg
sahf
pop
retf
mov
retf
sahf
lods
fadd
mov
and
pop
ror
mov
pop
mov
stc
neg
add
add
push
shl
xor
xchg
cmp
mov
fmul
inc
ss
adc
fcom
mov
lods
xlat
dec
outs
sub
mov
pop
add
ins
or
and
pop
mov
dec
das
push
jmp
clc
mov
aas
test
sar
cmp
cmp
xchg
xor
mov
or
pop
push
sub
ins
add
xor
jmp
xchg
xchg
xor
fiadd
or
lahf
jo
sbb
mov
inc
loope
lods
daa
or
daa
scas
inc
sbb
(bad)
xor
retf
pop
fs
js
or
(bad)
rcl
das
jnp
addr16
jmp
fiadd
pop
shl
gs
add
push
inc
cmovg
sbb
pop
inc
add
mov
(bad)
sbb
cmp
sbb
add
push
jmp
dec
or
rcl
cmp
dec
inc
daa
cmp
clc
or
ins
popa
and
scas
test
xor
aad
mov
pop
mov
test
mov
pop
mul
popa
je
or
and
adc
sbb
sbb
lds
or
sbb
and
push
mov
jle
lea
fild
add
sbb
jmp
sub
jg
sub
jbe
cmc
adc
shl
retf
push
jbe
cwde
les
sahf
and
mov
cmc
jle
and
retf
adc
cmp
or
or
cmp
or
lock
mov
adc
popf
add
jecxz
fisubr
arpl
je
or
je
dec
inc
stos
sbb
or
stos
add
jo
aam
jne
xor
or
jmp
icebp
cmp
mov
mov
xor
push
cld
and
adc
and
add
add
fmul
push
fadd
daa
adc
pop
cmc
fcomp
xchg
mov
and
je
or
push
lock
fwait
les
cdq
add
add
push
dec
cmp
jne
add
hlt
repz
or
add
pop
dec
ja
push
cmp
add
and
loopne
push
xor
xor
sub
sbb
test
cmp
add
scas
inc
out
mov
or
dec
das
mov
movs
test
dec
push
jmp
or
cmp
sbb
and
inc
adc
sbb
adc
push
sub
dec
pusha
int3
or
mov
shl
push
pushf
(bad)
mov
cmp
leave
xor
inc
jecxz
cmc
and
in
mov
inc
loopne
or
xor
xchg
add
test
cmp
sub
scas
shl
mov
ror
cwde
sahf
or
lahf
sbb
jbe
rcr
pusha
xchg
lods
add
hlt
cmp
sbb
push
iret
repz
sub
add
movs
cmp
das
adc
aad
into
push
jns
in
add
dec
add
and
gs
dec
adc
jg
inc
imul
add
sahf
std
rcl
hlt
aas
ss
adc
dec
pushf
div
add
rol
fnstenv
jmp
adc
dec
mov
sbb
mov
sbb
pop
icebp
in
adc
sar
jno
or
add
xor
or
ret
push
(bad)
dec
pop
or
xor
pop
adc
pushf
sbb
add
push
stos
hlt
and
jnp
nop
sbb
les
add
adc
xchg
cli
(bad)
lock
adc
mov
cs
cli
or
xor
add
add
(bad)
add
jne
or
inc
and
jp
pop
jge
jbe
sar
aaa
mov
push
mov
inc
pop
(bad)
mov
mov
push
cli
(bad)
fisubr
or
jbe
jne
xchg
ins
add
pop
mov
inc
push
lods
adc
add
call
adc
or
mov
loopne
mov
leave
add
cmp
add
mov
dec
std
and
or
jg
rol
inc
add
add
pushf
sbb
inc
and
js
cmp
arpl
inc
mov
mov
or
not
sbb
in
fcomp
jmp
cdq
push
xor
inc
xchg
jmp
repz
mov
(bad)
sub
lods
aad
inc
mov
cmc
push
or
(bad)
bound
rol
mov
or
adc
repnz
and
inc
cmp
xor
sahf
inc
and
add
add
push
push
mov
add
sbb
or
dec
imul
cmps
or
jns
sbb
jo
test
inc
loop
dec
or
add
std
xor
shl
jmp
dec
jno
inc
jns
out
inc
fiadd
nop
pop
mov
mov
inc
call
les
les
movs
pop
arpl
(bad)
(bad)
push
js
dec
rcl
repnz
lea
cs
push
and
and
movs
loope
dec
add
in
movs
idiv
dec
jbe
je
cs
and
pop
popa
retf
or
rol
add
mov
mov
rcl
add
xchg
pusha
aas
sub
sub
scas
and
(bad)
mov
inc
xchg
loop
cmp
push
push
jne
pop
test
cdq
or
push
(bad)
shl
ret
ds
sub
cmp
xor
call
or
or
mov
push
push
fstp
je
fisttp
jg
push
or
fdivr
arpl
xchg
and
xor
inc
and
xlat
(bad)
jg
jmp
or
cmp
mov
in
add
push
imul
add
or
xchg
test
xchg
jle
ins
xchg
add
lock
or
pop
xor
gs
jmp
mov
pop
pop
nop
sub
jmp
or
add
add
mov
loope
outs
adc
jb
fwait
mov
rcl
pop
imul
lds
rep
add
sub
and
sub
sub
pop
cmp
rol
loopne
not
jns
stos
mov
add
add
sub
loopne
rol
test
je
lods
rdpmc
inc
sub
or
sahf
clc
xchg
jno
pusha
test
inc
or
sbb
and
lock
push
cmp
test
test
add
jns
aas
ret
jmp
data16
xchg
(bad)
pop
dec
sbb
cwde
or
je
cdq
shl
fs
ror
cmps
or
xor
loopne
add
pop
ss
test
fcomi
xor
pop
cmp
pusha
inc
sbb
outs
mov
jnp
dec
xchg
add
inc
retf
inc
sub
jmp
js
xor
dec
push
cmc
mov
aam
arpl
inc
arpl
and
inc
adc
dec
xor
sub
push
push
add
dec
dec
pop
add
fs
ins
es
adc
ret
push
jno
or
ss
sti
js
(bad)
mov
shl
pop
pop
clc
xchg
add
fsubr
xor
dec
movs
or
add
sti
not
sti
jg
jl
jae
push
push
pusha
add
inc
scas
rcl
pop
sub
mov
nop
pop
adc
push
jp
sbb
mov
add
jne
ficomp
mov
test
fnstcw
ins
dec
popa
test
inc
xchg
adc
aaa
in
icebp
add
mov
inc
das
jno
bound
outs
out
sar
pop
popa
inc
add
push
imul
add
add
mov
cmp
mov
and
mov
test
add
xor
popa
add
or
or
and
jb
retf
jbe
cmc
cmc
pop
adc
movs
and
mov
jmp
xchg
or
xchg
aad
sub
mov
lea
dec
call
ins
or
xor
aam
adc
mov
xchg
lock
jb
pop
pop
xchg
sbb
fidiv
and
cmp
pop
xor
xchg
add
add
fadd
sbb
pushf
jmp
arpl
sar
jb
mov
or
das
fnstcw
iret
pop
sbb
pop
mov
mov
push
enter
push
mov
movs
nop
xchg
mov
test
fdivr
icebp
out
mov
out
test
xchg
cmp
xchg
lods
pop
mov
test
call
and
xor
jl
jo
adc
retf
cwde
fdiv
fsubr
sti
and
cmp
add
fsub
sti
clc
push
(bad)
test
fistp
rol
or
push
mov
xchg
ins
shl
jno
pushf
cmp
leave
adc
rol
addr16
je
in
sub
inc
aam
jb
and
xchg
xor
and
xor
adc
je
clc
mov
es
in
mov
ret
adc
xchg
pop
lock
adc
fnstsw
jns
xor
xor
pop
dec
xchg
pop
sub
movs
lods
or
sbb
fmul
dec
sti
dec
fimul
mov
sbb
aam
(bad)
fld
sub
aam
lods
popf
lods
test
js
add
adc
mov
push
add
rol
dec
jns
or
pop
fmul
cmp
pop
push
fcom
fcomp
test
and
jno
xor
inc
sub
pusha
aaa
and
ret
(bad)
and
in
cdq
int3
adc
add
sub
sar
xchg
in
mov
loopne
fcom
or
sub
mov
dec
add
inc
gs
int3
cmps
call
xchg
mov
mov
inc
data16
imul
dec
cmp
pusha
dec
or
leave
out
fs
sbb
mov
xchg
pop
inc
mov
mov
enter
cmps
mov
lock
push
push
cmp
dec
dec
call
or
mov
ror
in
cmp
outs
mov
(bad)
sbb
or
lods
retf
leave
dec
jnp
push
fsub
xchg
arpl
cwde
pop
mov
pop
shr
add
in
sbb
add
in
jl
lods
mov
shl
clc
shl
xchg
dec
mov
mov
leave
mov
mov
mov
push
call
scas
arpl
inc
clc
call
(bad)
lock
fisttp
inc
or
shl
loopne
or
sbb
adc
adc
inc
lods
stos
imul
push
loopne
test
xchg
cmps
push
ret
sbb
psubsb
enter
add
or
stos
jno
js
xchg
enter
sub
mov
push
xchg
cmp
dec
push
cmps
xchg
imul
mov
popf
test
xchg
or
mov
inc
mov
inc
mov
and
dec
pop
push
adc
xchg
pop
inc
sbb
stos
xchg
pop
lock
and
and
mov
scas
test
dec
mov
xor
enter
dec
cmp
std
stos
sub
adc
add
cmp
push
xchg
out
push
dec
mov
jmp
mov
arpl
dec
adc
lock
int3
shr
pop
stos
add
inc
jae
fiadd
xchg
test
or
(bad)
stc
pushf
jo
sbb
leave
pop
cmp
mov
enter
xchg
dec
(bad)
in
loopne
movs
and
xchg
adc
sbb
ret
push
or
movs
in
pop
je
cwde
add
adc
inc
sbb
xor
cwde
cmp
outs
sub
movs
sub
or
or
sub
mov
adc
push
enter
mov
and
adc
dec
cmp
cmp
xor
call
pop
pop
mov
inc
sbb
sbb
mov
in
sbb
call
push
movs
std
push
in
imul
push
adc
and
inc
cmp
jno
push
fcomp
add
retf
pushf
pop
xchg
mov
pop
pop
mov
test
in
push
xchg
imul
rcl
adc
or
daa
nop
push
bound
sbb
js
mov
or
and
add
cwde
pushf
pop
pop
(bad)
adc
popf
fs
or
adc
mov
popf
adc
and
mov
mov
js
pop
adc
lds
and
test
pop
sbb
or
inc
in
mov
pop
sub
adc
adc
push
inc
mov
pop
js
dec
scas
enter
movs
or
xor
push
scas
mov
imul
shr
call
mov
dec
pop
pop
push
enter
sbb
out
xor
in
cpuid
imul
test
jbe
mov
and
cmp
sbb
inc
je
fs
xchg
mov
test
in
xchg
dec
es
in
in
in
mov
or
neg
or
sbb
mov
add
inc
fwait
hlt
or
sbb
xchg
(bad)
test
paddq
mov
mov
rcr
rol
xchg
xchg
int3
fsubr
jne
adc
mov
push
retf
push
sbb
xor
rcl
lods
mov
nop
xchg
sub
mov
xor
mov
xlat
inc
scas
or
fs
fisubr
icebp
mov
or
addr16
and
mov
cmp
out
loopne
adc
adc
inc
mov
arpl
sub
cdq
ss
enter
imul
hlt
pop
add
ret
add
xlat
and
mov
movs
xor
pop
or
push
(bad)
fstp
xor
push
sub
mov
xor
mov
scas
cmps
adc
cmps
ins
push
movs
sub
push
loope
imul
pop
and
sub
fimul
mov
sbb
test
jge
imul
xor
lock
inc
(bad)
test
scas
or
pop
(bad)
retf
push
mov
dec
add
fsubr
sbb
test
adc
mov
mov
test
clc
loope
and
shr
push
sbb
ins
push
jns
mov
pop
xor
les
icebp
jl
test
mov
cs
lock
mov
xlat
jle
add
or
pushf
pushf
in
(bad)
nop
lods
push
xchg
or
or
mov
pop
mov
add
scas
pushf
inc
aam
movs
inc
and
xor
cld
stos
sub
repnz
arpl
mov
sub
or
and
ret
scas
pop
jnp
sub
leave
in
ror
and
in
and
sbb
(bad)
movs
and
fsub
test
cmp
push
cmp
test
enter
xor
and
daa
mov
and
inc
call
mov
sub
adc
imul
mov
call
sub
adc
fcmove
inc
fisubr
push
aaa
push
inc
inc
es
xchg
rcl
ins
inc
es
xchg
fcomp
cwde
inc
es
xchg
loopne
les
nop
xchg
call
nop
xchg
lock
or
enter
dec
fsubr
push
je
xlat
jb
add
adc
mov
stos
or
test
int3
cmp
fisubr
fimul
test
mov
loope
test
or
les
mov
enter
cmps
js
lds
or
loope
xor
mov
in
adc
rcpps
sbb
sbb
jb
mov
mov
mov
push
mov
pop
retf
cdq
xor
sbb
or
pusha
gs
adc
in
and
or
inc
mov
push
lock
adc
or
adc
clc
(bad)
in
jmp
inc
nop
push
sbb
sbb
inc
dec
or
cmp
call
ret
or
(bad)
mov
pop
(bad)
out
xchg
pop
shl
cmp
stos
jno
dec
cs
mov
add
fnstsw
mov
add
mov
xor
stos
add
xchg
jecxz
test
iret
in
ret
or
push
add
sbb
add
and
aam
loopne
in
sbb
in
or
stc
pop
das
jb
(bad)
bndstx
leave
add
or
xchg
mov
sbb
into
in
sbb
scas
xlat
js
add
in
sbb
lods
or
test
xor
mov
cmc
sbb
or
cmp
mov
pop
in
call
(bad)
dec
jo
or
and
(bad)
nop
sbb
fnstcw
xor
mov
dec
dec
rol
mov
mov
dec
add
in
jae
jmp
add
rcr
dec
xor
bound
xor
push
sbb
xchg
jbe
shr
sbb
cs
adc
fdivr
mov
pop
sbb
adc
or
enter
xchg
(bad)
push
mov
mov
xchg
add
sub
sub
in
in
or
movs
push
in
push
lods
(bad)
int3
inc
hlt
in
lock
out
enter
int3
jg
mov
xchg
dec
aaa
rcr
pop
and
mov
adc
mov
sub
mov
enter
lods
xchg
nop
pop
hlt
lods
inc
mov
and
or
mov
add
mov
adc
gs
or
not
or
push
xor
pop
adc
mov
imul
sub
and
mov
mov
rcl
mov
mov
add
add
sub
mov
push
inc
mov
ret
sub
shl
nop
mov
push
push
jnp
and
nop
out
or
ss
outs
jo
rcl
loop
add
mov
(bad)
mov
add
loope
push
jne
mov
push
sbb
jl
jno
cmps
mov
dec
mov
adc
dec
pop
pusha
fs
xchg
dec
xor
jo
sbb
mov
inc
popf
and
jmp
sbb
jno
push
or
mov
fidivr
fsub
loope
adc
xchg
dec
rol
inc
sub
sub
ret
rol
xchg
cwde
pop
retf
and
sbb
dec
es
int3
test
enter
dec
(bad)
xchg
xor
in
rol
xor
dec
push
test
cmps
pop
rol
movs
inc
or
jns
les
sub
mov
add
inc
mov
jbe
ret
and
pusha
sub
xchg
xchg
pushf
pop
shl
cs
sub
lods
jbe
and
jne
mov
mov
inc
sub
sub
pop
pop
cwde
mov
outs
test
je
inc
jae
pushf
push
(bad)
in
in
mov
cmps
pop
sbb
hlt
jmp
mov
rcl
cmp
daa
nop
adc
xchg
hlt
inc
xor
mov
fs
loope
jnp
xor
mov
loope
mov
jne
jns
sti
in
sbb
inc
into
push
(bad)
(bad)
xor
fsub
pop
inc
jb
add
cmps
test
sti
inc
aas
in
xchg
cs
mov
test
pop
(bad)
aaa
or
aam
(bad)
icebp
lock
xor
imul
mov
sbb
xchg
dec
mov
sub
push
xor
outs
fisttp
ror
shrd
fcom
xchg
pop
cmps
scas
inc
sbb
jne
add
call
jmp
jo
sub
mov
in
mov
leave
clc
ins
pop
daa
inc
(bad)
or
mov
xchg
ja
pushf
rcl
fwait
test
movups
arpl
mov
(bad)
cld
outs
sbb
and
movs
inc
jo
push
pop
out
cs
outs
leave
test
je
movs
ins
mov
test
ds
rcr
fdiv
enter
sbb
jb
or
add
push
mov
call
nop
cwde
loopne
les
mov
fs
pop
stos
loope
aam
dec
enter
and
in
xchg
or
lods
punpckhwd
mov
pusha
cmp
fxch
lock
sahf
push
or
add
add
pop
les
int3
sbb
xor
mov
inc
inc
lahf
fadd
push
fiadd
jo
femms
nop
out
loope
mov
sbb
imul
xchg
loopne
and
xchg
sbb
int
sbb
or
in
loopne
ins
add
mov
pop
or
dec
mov
in
jbe
jo
or
pushf
pusha
dec
ficomp
add
hlt
dec
imul
adc
add
scas
loope
int
pushf
call
sbb
fwait
jno
jno
jae
sub
popf
push
iret
imul
dec
scas
or
mov
inc
push
fdiv
in
ror
push
loopne
add
iret
and
mov
loopne
adc
iret
adc
sub
push
fmul
mov
xor
test
lock
stc
test
and
adc
add
stc
shr
adc
xlat
push
xchg
inc
jl
jno
sbb
add
popf
test
fs
rcl
leave
mov
jge
adc
xor
cmps
cmp
hlt
add
je
adc
nop
sbb
xor
rcr
inc
sahf
in
in
adc
add
inc
adc
(bad)
lds
jmp
ror
mov
imul
pop
cmp
inc
in
push
hlt
adc
sar
rcr
in
mov
or
sbb
mov
in
inc
mov
pop
add
jmp
aad
mov
inc
(bad)
mov
psrlq
sub
sahf
sbb
test
or
and
lock
div
and
fcomp
adc
test
scas
sbb
in
add
add
js
dec
loopne
sbb
xchg
ret
and
xor
inc
sub
sbb
adc
cmps
sbb
add
rol
stos
movs
add
shl
fdivr
inc
inc
in
loope
fsub
mov
adc
xchg
xchg
pop
enter
add
inc
cmps
push
movs
iret
cmp
sbb
les
push
add
(bad)
adc
add
mov
cmp
lock
scas
jp
(bad)
push
pop
fcom
xor
mov
push
pop
cmp
pop
mov
dec
mov
inc
jb
pop
add
xchg
in
(bad)
hlt
sub
push
inc
mov
mov
pushf
add
push
pop
mov
push
and
nop
retf
jg
inc
inc
ret
les
sub
cmp
xor
unpckhps
fsubr
jmp
xchg
push
movs
cmp
sar
push
mov
std
sbb
fsub
call
scas
or
sahf
mov
add
fadd
or
xor
pop
cmp
inc
pop
mov
call
dec
scas
test
(bad)
dec
in
test
cmp
mov
sbb
adc
mov
adc
jb
lock
adc
(bad)
fimul
or
in
inc
daa
xor
or
and
retf
push
seto
ficomp
call
dec
fimul
adc
shl
push
and
sub
aas
lea
push
(bad)
xchg
xchg
call
shl
mov
in
adc
test
push
daa
lods
shl
inc
push
or
mov
int
in
adc
fcmovnu
sbb
inc
cmp
bnd
fcom
std
aam
shr
inc
les
test
nop
xchg
pop
fdivr
call
pop
int3
add
ja
mov
pop
and
fisttp
inc
test
mov
jmp
cmp
lock
scas
enter
das
rcr
xchg
or
jmp
cmc
pop
ret
mov
sub
xchg
mov
dec
inc
jnp
or
sub
mov
fisubr
cmp
mov
adc
and
les
sub
adc
lea
and
pop
arpl
(bad)
popa
nop
dec
cmp
jge
int3
jmp
loopne
imul
clc
and
and
mov
add
in
out
push
add
push
xchg
push
movs
or
adc
sbb
mov
adc
sbb
in
xchg
and
adc
inc
jo
push
and
(bad)
jmp
sub
cmp
cdq
loopne
inc
xor
jno
sub
fs
es
outs
and
cmp
inc
test
xor
adc
ins
sub
xor
cmp
clc
adc
mov
sbb
retf
sbb
fsub
test
aam
dec
adc
sbb
loope
rcl
nop
or
loope
mov
mov
xchg
leave
sbb
in
and
dec
movs
jb
jmp
fdiv
mov
addr16
or
nop
or
sbb
mov
in
jge
xor
mov
push
loop
ja
ins
cmp
cmp
push
jecxz
inc
add
js
cmp
add
in
push
int
add
shr
lahf
jecxz
scas
lea
push
xor
mov
inc
push
rol
int3
repnz
adc
dec
cmp
imul
adc
pop
mov
(bad)
fld
mov
and
push
adc
cmp
sbb
mov
add
cmp
push
cmp
sbb
lods
mov
rcl
cmp
mov
cmp
or
(bad)
in
pop
mov
pusha
fadd
mov
inc
push
xor
in
jecxz
out
mov
pusha
adc
xchg
test
test
mov
pop
xchg
sbb
inc
sbb
or
add
pop
dec
pop
test
test
repnz
dec
js
push
inc
mov
jl
(bad)
adc
mov
shl
fldcw
fbld
in
lock
(bad)
call
xchg
or
jmp
and
jnp
retf
inc
shl
fisub
push
pop
popf
(bad)
out
jae
fs
sbb
sbb
stos
call
pop
test
xchg
push
sbb
call
in
and
enter
cmp
sbb
and
pop
push
jo
dec
fisttp
lds
xor
jl
call
xchg
inc
mov
addr16
nop
inc
adc
out
ss
jmp
(bad)
and
ins
jmp
dec
adc
inc
push
push
jmp
dec
les
in
fs
jb
test
xor
mov
pusha
jmp
or
jmp
xor
jns
cmp
inc
and
popa
in
ss
ret
mov
mov
imul
shl
(bad)
in
add
adc
mov
sub
jecxz
add
push
pop
(bad)
lds
adc
push
cmps
jl
push
sbb
or
push
dec
scas
test
in
hlt
push
or
sub
and
or
ins
data16
and
fcom
ins
out
fadd
add
rol
(bad)
ret
dec
adc
sbb
aam
jmp
or
push
jb
sahf
fs
adc
test
out
mov
xor
or
imul
cmc
mov
mov
jecxz
pop
xor
out
call
int
dec
lock
mov
sbb
fist
cmp
je
sub
sub
mov
outs
and
lods
(bad)
(bad)
mov
les
xchg
dec
repnz
cmp
adc
adc
or
sub
push
shr
icebp
cwde
lds
cwde
sbb
sbb
sbb
sub
inc
cmps
dec
sbb
aaa
bnd
mov
lock
dec
lods
fwait
adc
out
or
push
or
push
and
or
push
inc
pop
leave
es
loope
fisubr
and
push
movs
imul
lods
ins
mov
nop
cwde
fmul
cmp
jmp
fwait
add
mov
nop
xchg
int3
call
outs
and
adc
fidiv
nop
xchg
or
in
sub
movs
test
movs
daa
add
fdiv
pushf
pusha
and
dec
or
push
add
ret
mov
inc
es
sub
dec
test
xchg
cmc
loopne
xor
pop
and
aas
push
test
mov
nop
mov
add
in
mov
add
aam
shl
dec
pop
dec
add
rol
sbb
add
cmps
mov
cmp
fisub
push
push
out
cli
mov
shl
enter
popf
xor
add
adc
and
cmp
mov
jo
test
cs
pusha
scas
clc
dec
inc
call
inc
aas
jle
pop
and
sub
push
aam
push
ret
xor
iret
sbb
cs
test
adc
(bad)
mov
js
loopne
adc
push
jnp
arpl
cmp
leave
and
adc
rcr
lods
xchg
sbb
adc
enter
and
nop
retf
xchg
imul
or
fwait
add
or
in
cli
and
mov
jl
jno
and
jge
sub
rcr
fldcw
adc
dec
sti
fcomp
enter
adc
add
addr16
mov
push
and
arpl
jl
nop
inc
fdivr
mov
sbb
stos
and
ja
mov
fstp
in
mov
in
movs
add
jno
pusha
rcl
pop
test
loopne
xchg
dec
mov
imul
add
rcl
les
(bad)
cld
shr
loopne
nop
std
sub
jmp
jo
stc
sbb
out
aad
fs
dec
adc
pop
pusha
sub
sbb
mov
movs
ins
fcomp
dec
cmps
(bad)
mov
pop
sbb
nop
xchg
test
inc
mov
push
sbb
xor
pop
arpl
pop
and
jnp
dec
pop
fcomp
pop
aaa
jo
iret
pop
movs
mov
mov
loopne
leave
jb
adc
inc
jmp
mov
xor
xchg
add
dec
loop
adc
add
cmp
fcmovb
xor
fadd
aam
adc
xadd
lea
adc
fcom
test
add
sbb
add
add
pop
cmp
or
mov
mov
and
and
fnstcw
(bad)
movs
and
add
pop
and
(bad)
add
test
or
or
jle
xor
rcl
mov
push
xchg
(bad)
mov
pop
mov
add
inc
arpl
imul
mov
inc
and
xor
in
add
add
repz
inc
pop
js
(bad)
cmps
add
inc
xchg
js
sbb
xor
lds
dec
rol
call
mov
and
fld
mov
mov
xor
leave
or
sbb
mov
movs
mov
imul
adc
callw
jnp
push
add
lds
push
fs
call
scas
dec
enter
nop
xchg
loop
mov
fadd
call
xchg
or
add
mov
mov
lds
adc
push
mov
add
loopne
pop
mov
aad
add
lds
adc
inc
add
pusha
mov
mov
jnp
dec
and
sar
push
push
sub
adc
or
popa
out
rcl
mov
cmp
and
mov
cmp
test
mov
mov
data16
adc
mov
add
adc
sar
test
xchg
inc
jae
or
jno
or
call
dec
je
lock
and
mov
in
movs
fdivr
inc
cmp
pop
and
sbb
xor
cmp
movs
add
stc
adc
mov
js
movs
dec
or
xor
lods
or
mov
dec
push
add
add
sbb
les
sub
repnz
inc
cwde
dec
inc
and
out
ja
inc
pushf
div
(bad)
or
pop
mov
aam
mov
cdq
pop
sub
adc
fdiv
leave
dec
xchg
repnz
jmp
sbb
int3
(bad)
pop
add
enter
shl
mov
cmp
push
xchg
mov
push
stos
pop
or
test
jecxz
in
movs
adc
bound
in
cmp
loopne
push
and
in
cld
mov
jecxz
jge
jo
and
jns
call
sbb
mov
or
call
fwait
dec
jb
bound
ja
(bad)
(bad)
jno
fnstsw
jg
js
mov
xchg
inc
pusha
add
arpl
push
fs
fcomp
push
xor
fisttp
mov
mov
in
add
mov
rol
cpuid
(bad)
push
xchg
and
push
rol
mov
repnz
nop
jns
mov
add
inc
inc
lock
sbb
pavgb
icebp
add
mov
sub
sub
sub
jns
retf
in
sub
call
or
adc
call
call
enter
add
sbb
pushf
sub
aam
adc
adc
mov
adc
cmp
dec
addr16
sub
call
push
push
adc
jbe
movs
sub
in
add
loopne
loopne
imul
pop
push
xchg
or
push
in
pop
mov
scas
add
fs
dec
stos
cs
pusha
inc
adc
xchg
pusha
pop
mov
aam
push
pop
stos
xchg
adc
arpl
fisub
mov
pop
adc
sbb
and
push
pop
inc
add
xor
test
or
fsubr
add
sbb
pop
sbb
jecxz
cmp
pop
cwde
gs
add
test
adc
lods
fs
cmp
inc
sar
nop
or
test
sub
mov
sub
sub
inc
call
sub
sub
dec
movs
(bad)
jo
rol
pop
pushf
ret
adc
push
or
aas
enter
loope
cmps
pop
add
mov
test
push
rol
fs
dec
loope
xor
inc
pop
nop
cmps
popf
push
pop
pop
pop
test
dec
scas
dec
enter
aam
xchg
pushf
fs
int3
sbb
retf
leave
aad
iret
inc
sub
aam
mov
pusha
sbb
jmp
pop
movs
dec
dec
fisub
fadd
push
mov
cmp
or
pop
mov
add
cld
add
stos
pusha
xor
adc
fld
in
and
out
inc
and
mov
xor
mov
in
add
ss
mov
xchg
push
pop
and
sbb
fdiv
adc
xor
std
mov
or
fcmovb
test
mov
mov
sub
lods
popf
mov
inc
data16
sbb
adc
fcmovb
imul
or
push
out
mov
inc
push
or
test
(bad)
stos
and
int3
or
mov
fcmovbe
lods
lahf
cwde
pusha
ins
pusha
add
rol
cwde
lock
test
jge
inc
sub
jns
xor
add
jns
add
rcl
loope
dec
lock
mov
outs
push
jge
jb
(bad)
dec
sub
dec
popa
pop
adc
adc
leave
fsubr
fsubr
push
and
fld
adc
pop
je
lock
sub
add
pop
jb
add
cwde
in
or
add
xchg
or
movs
in
lods
push
push
inc
cmp
or
sub
adc
cld
mov
jno
push
push
xchg
mov
je
adc
pop
retf
int3
ja
je
fadd
mov
les
dec
imul
popa
in
jnp
inc
mov
gs
inc
lods
and
adc
add
aaa
inc
pop
adc
add
ror
add
js
in
dec
and
pop
xor
mov
xor
cld
add
pushf
ins
pop
shl
sti
in
fmul
xchg
mov
sbb
scas
fild
xor
(bad)
adc
movs
adc
repnz
inc
add
inc
xchg
inc
dec
sbb
sbb
mov
add
pusha
push
idiv
sbb
in
sub
mov
pop
pop
adc
div
and
sbb
stos
inc
ret
not
adc
and
dec
and
movs
jbe
add
jmp
dec
sub
adc
jnp
adc
mov
repnz
inc
(bad)
dec
and
lods
jmp
cmp
ins
pop
sbb
cld
pushf
xchg
lock
adc
fwait
and
and
sbb
leave
xchg
or
sbb
std
jmp
mov
ins
sbb
loopne
pop
cmc
push
adc
clc
fst
push
xor
fld
pusha
daa
sub
add
dec
fadd
jo
cmp
jl
in
and
jl
cmp
adc
mov
outs
ins
mov
xor
push
and
xor
inc
adc
test
dec
lock
popf
add
sbb
shr
dec
test
cdq
adc
inc
fcom
pop
sbb
push
or
cmps
popa
sub
add
ins
push
ins
pop
sub
pop
(bad)
adc
movs
fsub
pop
or
or
movs
std
mov
mov
bound
popa
cmp
and
out
or
sub
jno
xchg
mov
cmp
push
gs
xor
lahf
inc
sub
jne
push
cmp
mov
xchg
sbb
movs
mov
movntps
enter
in
js
les
loop
sbb
dec
xor
(bad)
movs
add
fcomp
cmps
nop
outs
popa
and
add
jne
jb
pop
fs
fiadd
call
test
les
xchg
out
dec
sub
enter
mov
and
cs
or
stos
cdq
sub
xchg
mov
mov
nop
or
lods
outs
add
sub
shr
mov
test
lods
or
stc
mov
push
lods
add
and
xor
mov
xor
jmp
push
mov
push
jno
mov
cwde
xchg
mov
or
(bad)
rcl
adc
fwait
adc
jmp
and
jb
pop
xor
int3
enter
imul
sbb
shr
add
xor
in
in
loopne
add
jnp
mov
xor
in
sbb
rol
fidivr
mov
adc
les
xor
loopne
pop
ret
lahf
mov
scas
inc
call
js
js
and
dec
in
dec
sbb
xor
ja
cmp
test
xor
adc
scas
add
mov
xor
mov
push
ins
sub
adc
xchg
rol
pop
fs
and
xor
xor
inc
repz
cmps
sbb
xor
loope
call
ins
xlat
pop
sbb
jo
lods
enter
rcr
fdiv
enter
jp
inc
adc
and
xor
mov
inc
cmc
int3
xchg
mov
pop
cmp
rcl
cmp
mov
mov
test
and
mov
xor
pop
inc
jp
or
inc
pop
cwde
fidivr
cdq
xor
adc
mov
sbb
dec
inc
loope
push
adc
xchg
pop
(bad)
jno
pop
fdiv
ror
cmp
add
(bad)
pop
rcl
push
inc
pop
cld
jne
repnz
rcl
std
xor
loope
dec
sub
or
stos
test
mov
inc
or
or
lahf
mov
pop
nop
div
call
or
(bad)
and
mov
nop
retf
adc
sbb
add
lock
jl
dec
adc
les
or
pop
lahf
adc
clc
in
sbb
sub
loopne
inc
pop
cmp
sbb
xor
movs
xchg
leave
jo
lea
add
sub
fadd
scas
in
xor
add
data16
or
aam
cdq
cmp
lods
sbb
mov
or
cmp
ins
rol
imul
adc
or
or
mov
je
inc
cmp
mov
cmp
enter
mov
nop
sub
dec
es
les
lods
sub
add
cmp
and
jo
inc
add
fadd
daa
mov
add
xor
mov
adc
sub
cmps
jecxz
inc
and
cmp
cmp
aam
dec
cmp
inc
scas
dec
gs
ror
xchg
pushf
stos
sbb
or
mov
adc
push
sub
je
and
stos
mov
adc
jnp
cmp
adc
jmp
pusha
mov
push
xor
xchg
adc
pop
mov
xchg
stos
or
nop
pop
stos
pop
mov
or
mov
and
and
adc
pop
pop
fwait
pusha
adc
in
es
and
adc
arpl
jo
push
or
add
movs
shl
pop
add
adc
cmps
jnp
jo
sub
repnz
movs
cdq
pusha
sar
adc
sub
inc
jecxz
stos
push
xchg
xor
lock
dec
lds
aam
mov
or
mov
jb
loopne
call
xlat
push
push
dec
push
adc
inc
mov
sbb
inc
movs
xor
cmp
and
test
leave
enter
inc
loopne
mov
test
or
(bad)
ror
test
inc
shl
test
stos
push
push
and
popf
and
daa
inc
test
arpl
mov
aam
aam
pop
(bad)
and
icebp
mov
pop
call
push
cmp
pop
adc
push
dec
and
cmps
les
xor
loope
add
rol
fs
xchg
dec
sbb
pushf
cli
xchg
adc
leave
and
test
rcr
test
stos
pushf
cli
mov
das
push
sub
mov
pop
test
imul
(bad)
xchg
dec
mov
das
call
xchg
test
and
add
and
pop
inc
sti
scas
xchg
xor
fld
add
stos
xor
add
add
rcr
je
push
mov
sbb
cdq
sar
pushf
push
xchg
adc
in
(bad)
add
rcr
inc
adc
rol
or
or
inc
jo
inc
add
test
sub
dec
bound
leave
jbe
add
push
mov
pop
push
retf
les
fsub
inc
push
test
int3
add
leave
aad
dec
add
or
push
mov
mov
inc
xchg
and
mov
mov
cmp
leave
mov
or
sbb
mov
cmps
xchg
inc
pop
xchg
lock
push
jns
rcr
or
sbb
test
inc
rcl
pop
mov
inc
add
fcom
dec
mov
jg
adc
xchg
or
xchg
mov
xor
mov
cmp
inc
lods
xor
call
mov
sbb
inc
push
and
daa
cld
pop
nop
and
adc
or
(bad)
mov
aas
bound
push
sbb
xlat
push
scas
test
push
inc
loope
popa
and
or
and
sbb
in
fnstsw
cwde
in
pop
and
adc
cmp
adc
lahf
cmps
in
mov
push
aas
mov
fcomp
call
lahf
push
push
icebp
adc
or
xor
xchg
mov
in
or
adc
je
push
jb
xor
ins
lock
arpl
fbld
popa
inc
test
or
leave
inc
icebp
or
clc
cli
or
inc
or
aad
vaddpd
aas
pop
leave
add
xor
mov
pop
push
das
adc
jno
jecxz
and
cmp
sbb
pop
jl
nop
mov
push
jne
mov
ror
lods
adc
in
cmp
jl
mov
mov
cld
lahf
mov
les
pusha
data16
jne
cmp
mov
inc
stos
imul
inc
arpl
aad
sbb
inc
mov
pop
jle
xchg
sbb
cmp
mov
cmp
xchg
inc
in
ret
adc
pop
and
retf
dec
sbb
fucomip
push
xchg
mov
mov
mov
into
bts
pop
pusha
cmp
pop
ret
adc
pop
hlt
jecxz
jb
add
lock
pop
ret
pusha
jle
call
sbb
sbb
pop
call
leave
rcl
adc
sbb
lea
out
pop
push
push
and
lahf
rcr
je
dec
jg
pop
gs
dec
push
shl
loopne
mov
mov
scas
push
jb
push
int3
pop
fdivr
(bad)
test
and
pop
mov
pop
dec
lahf
or
adc
push
adc
inc
and
or
push
push
adc
leave
or
inc
dec
pop
mov
pop
and
or
mov
add
js
inc
shr
pop
mov
jmp
sbb
cmp
pusha
adc
sub
ins
jno
aas
xchg
dec
mov
mov
aaa
dec
sbb
adc
fs
inc
inc
dec
dec
or
xchg
dec
push
lahf
add
idiv
adc
pop
imul
(bad)
xor
mov
mov
mov
push
sub
inc
add
sub
cs
dec
pop
or
xchg
dec
and
sub
mov
xor
xor
cmp
or
loop
pop
jns
push
jmp
jbe
or
xor
adc
iret
in
and
fs
xor
push
and
dec
test
sub
pop
imul
pop
mov
inc
shr
mov
(bad)
jne
fisubr
lods
adc
mov
inc
sub
jle
sbb
jmp
iret
jge
es
jb
and
in
pushf
mov
imul
add
inc
push
jbe
sbb
in
push
fs
inc
jo
add
shrd
repz
pop
ret
cmp
lsl
(bad)
(bad)
retf
xchg
fadd
popa
pushf
sbb
in
test
leave
adc
sub
xor
inc
push
in
inc
inc
push
in
push
dec
dec
push
cmp
push
dec
ins
pop
sbb
adc
iret
sbb
arpl
adc
fsub
sbb
into
sbb
outs
or
popf
jb
add
inc
adc
pop
test
aad
mov
test
mov
mov
test
add
mov
shr
cdq
adc
sbb
rcr
cdq
mov
sub
inc
dec
aaa
adc
sub
mov
das
out
and
pop
ins
call
adc
push
pop
xor
jmp
adc
(bad)
xchg
xchg
and
xchg
jle
mov
stos
dec
pop
icebp
mov
in
popf
add
mov
mov
stos
sub
(bad)
in
push
stos
imul
and
pusha
mov
shr
jo
outs
push
aas
into
mov
iret
fsubp
dec
mov
fild
mov
ret
cdq
dec
xor
es
in
lock
xchg
dec
call
es
sbb
sub
cdq
fs
xor
inc
dec
cdq
fs
dec
push
pop
pusha
cmp
adc
push
in
xchg
dec
or
nop
bound
rcr
call
ret
dec
rcr
outs
or
es
in
call
in
fisub
push
je
adc
pushf
cld
(bad)
ins
sub
and
sub
mov
xchg
aas
enter
int3
(bad)
jmp
lds
dec
movs
sbb
mov
dec
or
loopne
or
loop
xor
scas
test
or
(bad)
outs
mov
fs
call
mov
sub
(bad)
fdiv
test
mov
cmp
adc
add
outs
adc
mov
pop
sub
lock
add
adc
jmp
shl
dec
adc
push
jo
mov
in
loopne
cmp
pop
ins
loop
push
iret
mov
test
(bad)
push
sbb
lahf
add
in
fisttp
mov
jo
pop
or
xor
es
in
test
mov
dec
xchg
js
fs
dec
sub
imul
es
movs
xor
movs
pushf
mov
sub
and
fsubr
cmps
adc
sbb
in
cmp
mov
mov
and
cmps
or
dec
(bad)
mov
sub
mov
inc
(bad)
pop
jb
mov
add
adc
shl
pop
inc
mov
cmp
mov
push
cwde
ret
pop
mov
sti
aam
sbb
leave
(bad)
les
stos
inc
lods
xchg
mov
test
lods
daa
daa
pop
shl
mov
mov
fmul
push
push
xor
leave
xor
in
(bad)
aam
xchg
imul
mov
test
and
jl
or
jmp
rcr
pop
adc
push
loopne
ret
or
das
je
mov
jbe
xchg
out
cmp
and
loopne
pop
or
push
cmp
dec
jno
in
push
push
add
pop
ja
or
stos
js
shl
scas
(bad)
sti
ja
test
mov
sar
test
jo
ret
pop
pusha
adc
inc
dec
scas
pushf
adc
das
mov
add
jbe
hlt
outs
clc
sbb
jb
add
add
add
inc
test
hlt
cmps
add
pop
loope
push
ret
xchg
fistp
jle
call
cmp
ret
pop
test
mov
call
add
lahf
mov
mov
jmp
sbb
popa
test
jno
popa
ror
cmp
movs
sbb
dec
xor
nop
sub
and
push
and
es
fisubr
pusha
sub
xchg
dec
pop
ins
jl
cmp
pushf
cwde
inc
es
in
inc
xor
push
add
adc
pop
movs
cdq
push
arpl
xchg
outs
lods
and
jp
add
sub
pop
leave
inc
test
nop
es
into
enter
imul
lods
sahf
add
push
mov
jnp
mov
aaa
sbb
mov
ret
enter
call
mov
inc
mov
pop
or
adc
enter
ror
pop
enter
test
mov
jb
push
fbstp
jmp
bound
stos
xchg
pusha
dec
jbe
sub
and
stc
sbb
je
jo
int3
les
sub
dec
pop
in
adc
aas
sbb
or
dec
test
cmp
js
adc
nop
adc
sub
dec
(bad)
out
pushf
pop
jle
stos
jnp
xor
xchg
fisubr
and
push
dec
pop
cmc
pop
test
adc
in
inc
mov
cmp
sbb
mov
pop
fdiv
das
jg
mov
in
jle
mov
data16
(bad)
cwde
mov
lods
loopne
jb
pop
or
pop
add
or
or
and
ret
xor
pop
fwait
lock
shr
sbb
in
iret
(bad)
mov
call
mov
or
mov
imul
adc
movs
jns
cld
lahf
in
inc
and
mov
lods
lahf
lods
test
mov
cmps
das
comiss
dec
movs
jmp
pushf
jmp
inc
xor
rol
repnz
add
cmp
arpl
inc
rol
adc
or
int3
rol
pop
lahf
mov
lods
repnz
inc
mov
sub
nop
pop
lods
aam
cwde
sbb
test
ret
xor
xchg
dec
mov
jo
sbb
outs
mov
xchg
pop
pusha
call
dec
test
mov
dec
iret
dec
push
adc
shl
nop
dec
iret
nop
sbb
mov
and
mov
jb
rcr
xor
inc
push
loopne
add
fwait
sub
enter
fdivr
inc
sbb
sbb
mov
xor
(bad)
and
mov
or
sbb
jg
cmp
in
in
imul
dec
mov
adc
jae
leave
dec
xlat
push
xchg
cmps
or
stos
rcr
lock
xor
mov
arpl
adc
shr
push
jo
push
leave
or
inc
aas
les
ror
pop
sbb
mov
or
cmp
sbb
xchg
xor
sbb
ins
movs
movs
xchg
xor
sbb
add
ja
popf
lods
fs
pushf
popf
xchg
mov
push
in
pusha
add
jne
jbe
(bad)
or
jbe
xchg
mov
(bad)
cs
pop
dec
mov
test
dec
data16
ins
mov
lock
(bad)
rol
fisubr
adc
loope
dec
cmps
test
and
or
div
xor
mov
xchg
xchg
push
mov
retf
out
push
or
popa
pushf
inc
inc
leave
in
leave
inc
dec
push
push
ins
adc
fs
js
fadd
push
in
add
mov
mov
pop
je
mov
jmp
dec
fwait
mov
adc
mov
jb
ins
xor
or
jno
push
xor
adc
add
adc
xor
sbb
cmp
xor
pop
mov
rcl
mov
in
dec
xor
(bad)
mov
lea
(bad)
jecxz
test
xchg
imul
test
ins
mov
push
sub
pop
xchg
xchg
inc
or
sahf
je
or
les
test
and
mov
jg
test
inc
imul
push
dec
and
xchg
test
push
push
mov
xor
and
clc
popa
or
push
pop
(bad)
jns
(bad)
and
lahf
or
add
sbb
add
sub
nop
cmp
in
add
inc
in
pop
jo
pop
xor
daa
fcom
movs
pusha
jb
cdq
call
stos
pop
fcomp
sub
xor
xchg
adc
add
fadd
sbb
xchg
cmp
ficom
daa
cmp
adc
push
xor
in
hlt
aaa
rcl
mov
ror
add
call
and
xchg
sbb
cmp
mov
ss
dec
inc
ins
lods
or
movs
test
js
xchg
sbb
add
scas
ins
mov
sbb
pushf
xchg
mov
xor
sub
dec
jecxz
mov
add
push
fcom
test
rcl
test
or
and
test
mov
adc
call
int3
pop
mov
jo
setg
aad
mov
dec
xchg
fstp
sbb
loope
push
adc
sbb
ins
adc
adc
adc
pop
push
dec
test
xor
in
repnz
jecxz
jb
repnz
pop
lahf
mov
mov
test
dec
push
pop
inc
scas
fcmovne
push
test
in
jmp
or
inc
mov
xchg
cmp
add
lods
adc
outs
cmp
xor
mov
fisttp
adc
jg
dec
cmps
call
add
add
push
dec
scas
(bad)
add
out
leave
push
pop
call
sbb
add
or
add
lods
fisubr
inc
mov
push
cdq
test
cdq
ret
fs
dec
jl
sbb
mov
add
sbb
jo
cdq
sahf
sub
dec
outs
stos
add
and
mov
dec
xchg
fs
rcr
and
out
inc
jb
and
xor
xor
cmp
xor
inc
dec
push
or
and
xor
test
in
and
adc
jl
push
fwait
push
aas
in
and
lock
mov
fwait
push
and
stos
adc
rcl
push
pushf
sbb
add
in
rol
dec
mov
ins
push
dec
sahf
leave
mov
enter
fs
(bad)
rol
shr
mov
call
cmp
dec
lods
fs
pop
shl
mov
pop
mov
dec
xchg
shr
push
mov
add
adc
push
lods
imul
xchg
rcr
cmp
shl
sub
in
push
iret
jb
inc
enter
sbb
mov
cwde
pushf
movs
pop
(bad)
call
pushf
xchg
mov
lods
outs
nop
jg
bound
sub
mov
sub
sub
jl
je
adc
mov
pop
(bad)
dec
mov
xchg
cs
mov
sub
dec
and
aad
outs
fadd
lods
jbe
adc
inc
pop
enter
inc
mov
lahf
stos
dec
mov
inc
bound
push
ret
ficom
(bad)
pop
jl
call
jo
pusha
mov
mov
jo
pop
jge
int3
enter
iret
clc
pop
mov
add
jo
sbb
add
mov
shr
sub
adc
and
dec
or
mov
aas
fmul
rcl
mov
fadd
adc
or
fcom
je
pop
shl
loopne
add
shr
adc
in
and
and
in
mov
mov
outs
adc
and
dec
(bad)
movs
lds
sbb
es
pop
loop
es
das
or
adc
fadd
mov
dec
jmp
jne
cmps
pop
rol
and
mov
iret
outs
int3
or
iret
sbb
das
test
fmul
enter
mov
and
push
adc
mov
sar
add
in
cwde
sbb
js
movs
inc
sub
mov
das
shr
push
adc
xor
jg
push
or
mov
fs
in
les
into
sbb
adc
test
inc
or
add
push
add
push
cmps
add
jmp
das
or
sbb
stos
outs
pop
stos
inc
pop
popa
pop
add
jmp
leave
mov
or
fisubr
fist
pop
stos
loopne
mov
lods
sbb
push
lods
dec
das
jns
mov
stos
push
jg
popa
pusha
fld
sub
aam
cs
and
rol
int3
stos
shr
and
sub
ret
in
adc
xchg
in
jb
cdq
sbb
fcom
pop
pushf
fdivrp
test
cwde
mov
sbb
mov
fisttp
nop
fdivrp
mov
imul
mov
aas
cs
sbb
cwde
call
inc
push
xor
add
dec
int
adc
inc
js
call
add
jl
inc
add
dec
xlat
add
test
xor
and
add
repnz
pop
adc
leave
pushf
test
add
aam
cmp
sbb
repnz
xchg
inc
add
fdiv
and
xor
cdq
pusha
pusha
mov
push
add
or
mov
mov
add
mov
xor
and
mov
les
pusha
sbb
mov
lods
xchg
cwde
in
pop
sub
es
sub
mov
ja
inc
or
inc
and
xor
pop
xor
mov
call
mov
fisttp
movs
adc
push
lahf
mov
push
shl
lods
mov
add
xchg
es
adc
dec
in
ret
xor
dec
or
cdq
cwde
ja
outs
mov
mov
(bad)
das
daa
xor
ss
push
mov
xchg
sub
ss
pop
les
sbb
test
daa
mov
aad
das
fcom
push
and
or
push
push
mov
(bad)
push
and
pop
in
sbb
lock
adc
sub
scas
inc
cmps
or
xor
and
adc
and
dec
sub
cmp
xchg
dec
xor
sub
xor
push
push
test
or
fwait
in
dec
call
fs
sbb
adc
cdq
fs
dec
and
sub
ror
xor
pop
add
add
inc
jecxz
jno
test
jo
jno
inc
pop
fwait
sub
sbb
and
fldcw
mov
and
jo
sbb
mov
mov
cdq
push
add
add
adc
mov
and
test
add
add
and
bound
jo
sub
mov
loopne
retf
jno
nop
add
lods
pop
shl
adc
xlat
xchg
inc
jo
pop
nop
add
add
cmp
ins
je
mov
in
int3
inc
ror
les
sbb
and
sub
adc
pusha
dec
push
inc
push
and
xor
xor
inc
pop
mov
movs
push
push
and
or
add
out
ror
jecxz
sub
sub
xchg
jl
fiadd
xchg
xchg
cmp
xchg
push
xor
pusha
xchg
xchg
lock
add
aad
add
les
call
sbb
mov
adc
mov
test
sbb
sub
jmp
mov
push
mov
lods
adc
jg
leave
add
movs
jno
aad
push
pop
jno
popa
nop
mov
cmp
test
dec
jnp
out
inc
fs
inc
or
add
sbb
or
jbe
pop
inc
ins
mov
mov
sub
and
sar
pop
dec
xchg
(bad)
sbb
sub
add
mov
xchg
outs
popa
mov
mov
and
scas
jo
inc
sub
aam
cmps
shld
xchg
pop
cmp
lods
sar
call
aam
adc
mov
adc
sbb
mov
or
sbb
dec
pusha
inc
xor
fld
shr
sbb
cwde
lods
and
movs
stos
bound
das
lahf
pushf
mov
in
or
test
inc
mov
nop
outs
mov
call
arpl
ffreep
inc
mov
jne
mov
sub
das
loope
(bad)
cdq
lahf
sar
adc
pop
xor
stos
sbb
adc
sbb
dec
mov
or
sbb
je
imul
adc
add
ror
fiadd
je
xchg
je
pop
inc
xor
push
fsub
pusha
ins
mov
jo
js
jbe
push
nop
pusha
js
push
mov
push
mov
push
push
xor
xchg
sbb
sub
mov
nop
cli
ret
fdivr
loop
or
test
add
dec
inc
shl
sub
mov
jbe
lds
mov
jbe
jl
pop
sbb
ins
push
push
jno
pop
pop
adc
push
nop
ret
test
clc
cli
vunpckhps
cmc
jg
out
and
xchg
nop
xchg
sbb
mov
mov
ror
repnz
enter
cmp
jb
jno
imul
inc
push
(bad)
leave
add
dec
xor
and
cld
lock
cdq
fs
inc
clc
nop
cwde
fs
dec
mov
es
fsub
call
ins
mov
mov
or
jmp
out
les
add
push
jl
scas
aaa
ins
fidiv
sub
fadd
dec
movs
in
add
cdq
lods
hlt
mov
in
fisub
cmp
imul
in
add
je
and
dec
xor
push
add
leave
ins
in
push
outs
or
xchg
dec
rcl
cdq
ss
jl
sub
xor
add
dec
cmp
xchg
dec
xor
pushf
inc
push
dec
cdq
fs
imul
shl
and
inc
sbb
cmps
dec
xor
cmp
xchg
sbb
js
mov
xor
and
add
add
and
add
pmulhuw
js
lock
(bad)
out
dec
dec
xor
hlt
pusha
fs
add
shl
adc
xchg
dec
ret
mov
mov
jb
ins
mov
cmp
adc
mov
inc
mov
mov
push
xchg
dec
cmps
dec
call
shl
rol
push
cmp
dec
sbb
or
cmps
dec
sbb
cmps
icebp
mov
push
or
dec
xor
mov
xor
mov
sbb
shl
dec
push
pop
fwait
fs
imul
cdq
sub
leave
and
dec
cmp
and
add
lock
popa
pushf
fidiv
lock
and
call
xchg
dec
mov
rol
test
xor
and
fisttp
nop
cwde
push
jo
pusha
fisub
enter
adc
dec
push
and
rol
fsub
or
cdq
in
lock
push
add
xchg
enter
pop
dec
cdq
fiadd
mov
jl
pusha
sub
mov
cwde
sub
out
adc
push
add
stos
or
dec
push
and
push
mov
les
mov
pusha
push
mov
adc
push
leave
cdq
sub
cmp
and
push
ins
in
in
pusha
sub
clc
lock
inc
jb
stos
sbb
rol
arpl
inc
adc
push
sbb
cmp
or
cwde
mov
pop
and
add
adc
mov
sbb
or
add
push
nop
xchg
cld
out
fsubr
push
fcom
rol
add
sub
add
add
in
cmp
dec
xor
es
fsubr
scas
shl
pop
enter
add
sbb
rcr
enter
enter
mov
xchg
sbb
pop
hlt
lock
stos
arpl
mov
push
fsub
inc
outs
adc
outs
cmp
scas
sbb
pop
leave
adc
xor
pop
adc
(bad)
mov
fs
adc
push
or
imul
lock
adc
cli
push
push
(bad)
out
sbb
nop
dec
push
or
jo
in
push
adc
xchg
loopne
or
cmp
enter
jb
in
in
and
fmul
aam
push
sub
dec
in
xchg
dec
jl
lock
inc
sbb
ja
add
pusha
pop
lods
sub
xchg
adc
es
ins
inc
add
and
ins
jl
lock
in
xchg
dec
scas
lock
dec
pop
outs
push
adc
dec
push
fistp
(bad)
lods
push
scas
cmp
imul
shr
xlat
scas
movs
or
adc
add
ins
nop
les
sub
cwde
xlat
push
push
add
jmp
dec
or
dec
jmp
dec
leave
mov
int3
sub
add
xlat
mov
pop
add
pop
nop
addr16
adc
rcr
addr16
sub
push
inc
xor
imul
mov
jns
loopne
dec
outs
pop
mov
aas
in
in
test
fidivr
fistp
inc
pop
adc
pop
sbb
inc
inc
dec
test
mov
xchg
loopne
and
dec
rcl
mov
mov
adc
jbe
fisub
mov
sbb
and
add
sub
int3
fstp
sub
add
inc
add
fsubr
mov
mov
les
test
push
sbb
sbb
mov
cmp
fdivr
mov
add
adc
out
sbb
cwde
movs
in
pusha
fcom
adc
sbb
push
pop
daa
ins
nop
inc
mov
je
sub
sbb
push
repnz
xor
or
sub
adc
scas
shr
pusha
pop
sub
and
sbb
add
and
push
in
shr
les
jmp
int3
lods
cmps
dec
xor
push
in
sub
popf
fs
dec
je
pop
out
in
dec
mov
clc
scas
push
jmp
out
cld
and
push
movs
jmp
xchg
les
dec
movs
push
int3
lods
xchg
inc
ins
dec
dec
add
inc
dec
mov
push
(bad)
cs
movs
pop
jmp
lods
inc
scas
sub
or
pop
popf
(bad)
dec
inc
jmp
inc
push
sub
cmp
and
and
dec
dec
lds
cmp
imul
cdq
call
or
xchg
fs
imul
xchg
dec
fwait
ins
icebp
in
sub
ficom
fs
fdiv
sub
cdq
dec
es
mov
les
leave
mov
and
xchg
dec
push
lods
lds
sub
sub
nop
cmp
and
out
in
out
pop
mov
fild
inc
aaa
lds
test
adc
mov
sub
jmp
jl
sub
xor
cdq
ins
imul
lods
adc
enter
jl
daa
cdq
mov
mov
cdq
jbe
or
stos
dec
es
aaa
in
mov
in
out
dec
imul
xchg
ins
add
and
and
and
in
mov
mov
adc
lods
popa
fcmovu
add
push
or
nop
and
cmps
scas
sbb
sub
bound
sbb
sub
(bad)
ror
jmp
cdq
ss
and
int3
sub
es
fdivr
inc
lods
and
arpl
pop
sub
fs
dec
pop
cwde
mov
sbb
cdq
les
test
fiadd
jl
and
rol
pop
xor
jo
icebp
push
dec
dec
push
cmp
movs
pop
in
int3
cmps
lods
imul
jmp
dec
pop
inc
pop
ret
and
pushf
cmp
sub
sub
dec
es
or
pop
pop
xor
xor
jl
cmps
dec
pop
sub
dec
cmps
push
test
je
mov
hlt
sub
dec
cmps
push
in
shr
enter
fwait
shr
fsub
inc
dec
xor
mov
hlt
out
dec
xor
jo
adc
and
nop
cwde
mov
test
push
push
pop
inc
xchg
dec
xor
dec
sbb
sub
and
cmp
inc
cmp
imul
dec
lock
mov
xlat
inc
enter
mov
test
mov
adc
inc
jb
dec
call
imul
pusha
mov
push
repnz
add
dec
aaa
cmps
or
sub
fild
xchg
dec
cmps
adc
jns
cwde
push
xchg
imul
xchg
xchg
sbb
fcmove
sub
rcr
cdq
fs
imul
test
xchg
inc
dec
fwait
sub
cdq
fs
cwde
mov
jo
dec
add
fs
dec
push
pop
pusha
mov
in
mov
add
xchg
dec
cmp
inc
scas
pop
(bad)
xor
xchg
sub
or
xchg
sbb
dec
sbb
xlat
ror
popf
xchg
mov
sub
loopne
dec
cmps
loop
call
mov
nop
jmp
aas
cmps
or
pop
lds
cwde
fisub
cmp
inc
mov
rcl
dec
dec
sub
push
mov
dec
xor
sub
js
add
dec
push
or
adc
mov
sbb
cdq
sub
push
and
or
jmp
jmp
add
xchg
dec
xor
rcr
loopne
jno
cmp
sbb
dec
inc
xor
fidivr
pushf
fs
dec
or
or
sub
xchg
dec
es
dec
push
cmp
cdq
fs
xor
xor
jmp
xor
or
mov
imul
cwde
fs
fadd
mov
sub
push
nop
adc
rcr
pop
mov
jmp
(bad)
mov
jae
psubsb
and
push
adc
adc
or
mov
or
scas
(bad)
add
adc
push
sbb
inc
cwde
lahf
enter
adc
inc
das
(bad)
inc
in
nop
out
add
xchg
jg
repnz
xchg
imul
jae
mov
add
push
fsubr
push
adc
enter
jb
cld
pop
add
mov
ror
fdiv
arpl
inc
enter
ins
ins
inc
rcr
int3
ins
add
adc
mov
adc
and
cdq
jbe
ins
lock
icebp
sub
push
pop
call
adc
das
add
xlat
lods
icebp
cld
or
add
out
fistp
xor
jg
int3
shl
call
das
lock
and
in
push
shr
aam
shr
aas
xor
aas
fsubr
push
xor
push
push
lahf
xchg
sub
push
mov
dec
add
leave
add
call
repz
or
hlt
icebp
lock
test
nop
and
sbb
sbb
adc
nop
dec
cmps
ins
or
adc
movs
ss
or
pop
in
mov
sub
sub
adc
cld
inc
fidiv
sbb
shl
pop
(bad)
cld
and
sbb
or
or
imul
and
scas
and
add
pusha
invd
pop
loopne
sub
and
adc
call
add
adc
jl
movs
adc
test
sub
jns
xor
scas
and
adc
ret
cmps
mov
mov
pop
lahf
int3
in
enter
mov
cmps
push
inc
xchg
int
mov
mov
mov
dec
icebp
and
mov
and
xchg
xor
mov
adc
and
push
sub
mov
add
scas
lods
pusha
inc
movs
adc
inc
inc
add
jl
fistp
mov
adc
bound
or
add
push
test
jg
push
pop
popa
in
mov
pop
cmp
cwde
lods
jne
mov
in
add
nop
inc
or
test
inc
call
and
pop
sahf
dec
xor
add
sub
dec
xor
sub
(bad)
mov
nop
jns
scas
data16
sub
popa
sbb
dec
add
push
sub
jns
push
adc
push
je
push
cmps
test
xor
js
dec
ins
sbb
sub
and
mov
popf
cld
(bad)
pusha
loopne
popa
mov
xchg
jns
test
stos
or
dec
arpl
push
cmp
add
push
mov
loopne
xor
mov
stos
int
cmps
push
pop
sbb
les
cwde
mov
popf
rcr
and
mov
iret
mov
inc
imul
pop
test
test
and
dec
push
inc
test
xchg
mov
das
adc
or
movs
pusha
push
add
mov
or
or
jns
pop
push
inc
pop
mov
add
push
adc
cmp
outs
aam
push
xor
rcl
mov
mov
pop
xor
lahf
bts
daa
cwde
lods
arpl
mov
dec
cs
stos
add
(bad)
xchg
xchg
push
or
sbb
or
inc
sahf
mov
add
push
fwait
or
adc
pop
dec
pop
add
push
sbb
adc
ficom
sbb
in
add
sbb
xlat
inc
sbb
sub
cmps
adc
xor
sbb
test
fmul
mov
cmp
or
xor
sub
push
cmp
stc
jl
popa
push
adc
adc
add
jmp
and
aad
and
bndldx
dec
and
pop
mov
pop
(bad)
add
test
pop
fcom
pop
shr
push
out
mov
pop
pop
ins
mov
in
aas
mov
xor
jg
(bad)
xchg
les
add
invd
push
pop
sub
mov
and
enter
adc
or
movs
adc
pop
push
sbb
lahf
cwde
mov
shl
and
jg
adc
push
test
and
nop
push
aas
rcr
jno
mov
push
and
or
call
dec
cmp
dec
(bad)
out
or
xchg
mov
call
pop
fdivr
dec
sbb
lfs
in
adc
and
mov
pop
add
test
iret
or
popf
and
mov
scas
pop
mov
or
test
dec
mov
and
xchg
adc
adc
cdq
mov
push
xchg
sub
adc
cmp
push
cmp
nop
ins
test
cmp
icebp
push
xchg
jl
sub
add
pop
push
mov
ins
ret
sub
push
push
add
fsub
push
cmps
push
and
movs
or
fld
fistp
mov
jg
xchg
enter
mov
pinsrw
xor
fmul
stos
pop
jnp
or
pop
mov
sbb
mov
lahf
gs
pop
or
push
xchg
xchg
sbb
mov
sbb
pusha
icebp
and
xchg
mov
adc
dec
lods
inc
cwde
adc
push
or
ins
add
loopne
push
loopne
out
lock
pop
cmp
scas
ficom
scas
sub
movs
mov
mov
add
enter
inc
xchg
lock
lock
push
(bad)
pusha
add
fs
mov
je
jl
inc
cmp
js
jo
mov
out
repnz
and
cmp
ins
repnz
in
mov
adc
push
cwde
or
mov
jbe
sub
imul
test
lods
sub
xor
test
adc
pop
mov
add
pop
sbb
sbb
fcom
pusha
sub
push
mov
push
mov
mov
mov
xchg
and
jbe
jo
nop
test
xchg
aam
adc
scas
adc
or
std
xchg
cld
mov
adc
dec
lock
scas
or
mov
sbb
iret
ins
test
pop
mov
fcmovnb
inc
or
popa
test
movs
adc
adc
shl
icebp
sbb
adc
test
push
pushf
push
icebp
sbb
int3
and
adc
test
and
adc
(bad)
xchg
jp
mov
in
rol
aas
pop
jb
pop
and
or
shl
xchg
and
(bad)
mov
nop
test
jo
dec
gs
push
sar
add
sub
out
and
mov
and
out
aas
int3
nop
inc
push
nop
pusha
rcl
aam
fadd
nop
inc
lock
and
enter
push
pop
enter
sub
pop
enter
in
pop
enter
adc
in
add
inc
jl
in
clc
jo
add
es
out
fmul
das
addr16
pop
push
fcom
ins
int
mov
popa
fnstsw
inc
push
cmp
mov
xchg
and
mov
or
fild
in
outs
ds
repnz
inc
int3
in
add
jo
mov
aam
enter
fdiv
add
jb
add
loopne
add
add
nop
enter
call
add
lock
and
cmp
add
push
in
cmp
clc
cmp
jb
cmp
push
jb
add
adc
inc
push
cmp
inc
or
cmp
jo
mov
pop
push
fld
sbb
cmp
test
call
mov
loope
idiv
and
nop
add
pusha
and
add
nop
add
rcl
xor
cmp
mul
xor
dec
push
cmp
and
lods
mov
ret
sbb
lods
xchg
and
lock
sbb
repnz
inc
sub
jb
addr16
loope
aam
jmp
sub
push
dec
in
dec
push
daa
cmc
inc
xor
pop
inc
ficom
xor
sub
std
mov
or
or
cmp
cmp
lock
in
and
(bad)
inc
(bad)
dec
(bad)
push
xchg
pop
jns
adc
inc
jb
xlat
push
and
call
sub
fisub
xor
enter
hlt
lods
inc
mov
and
mov
or
cmp
in
(bad)
icebp
sbb
(bad)
pop
jb
je
cwde
mov
xchg
jl
mov
xchg
xchg
sub
jb
in
mov
pop
es
int3
jl
push
cmps
retf
cwde
ins
pushf
and
inc
adc
outs
shl
fwait
pop
movs
inc
sub
and
fwait
ror
test
sbb
jmp
pop
fisttp
cmp
and
pop
outs
dec
jb
dec
fild
loopne
sbb
xchg
inc
and
lea
xchg
jecxz
mov
inc
mov
leave
pop
xchg
fnsave
and
jle
outs
jne
imul
in
stc
sbb
xchg
mov
push
push
in
add
jns
test
sbb
int3
mov
mov
inc
rcl
pop
jb
stos
mov
out
sub
dec
xchg
cmp
loopne
pushf
movs
push
cdq
push
(bad)
int3
jb
arpl
test
jl
add
mov
ja
mov
xchg
call
mov
rcr
cmps
loopne
out
mov
aas
mov
and
pop
enter
xchg
shl
pop
enter
retf
jmp
inc
fmul
cdq
adc
scas
fwait
sbb
push
mov
sub
out
jmp
cmp
xor
xchg
push
cmp
xlat
add
xchg
in
push
jb
adc
mov
xchg
mov
aam
cs
out
and
add
jmp
mov
mov
adc
jl
pop
or
(bad)
loope
sub
loopne
dec
cld
and
xor
retf
add
add
dec
jb
in
or
ud1
xchg
mov
sub
inc
cmp
in
sub
stc
fdiv
in
(bad)
shl
nop
lock
nop
xchg
in
fs
jb
and
jmp
xor
cmp
in
cmp
je
push
test
js
leave
and
cmp
retf
push
test
and
stos
js
sbb
cmp
cwde
popa
shr
xchg
xchg
jns
ss
xchg
arpl
cmp
jp
mov
test
cwde
mov
test
xchg
lock
lods
out
inc
and
es
push
retf
adc
in
jl
jl
test
out
or
sbb
xor
jae
arpl
ja
inc
dec
shl
jle
stc
add
jb
xor
pop
jg
cli
and
mov
outs
jb
cmp
push
push
sbb
add
pop
jmp
and
nop
adc
cmp
add
(bad)
jle
mov
shl
xchg
nop
outs
push
aaa
ins
mov
inc
mov
jo
and
dec
cs
lock
and
pushf
and
and
call
test
(bad)
fcmovnu
and
cmovne
(bad)
push
cwde
ins
lock
cli
call
call
movs
xchg
jbe
sub
je
pop
and
nop
fild
pushf
pop
mov
je
and
pop
inc
sub
in
xor
scas
add
and
inc
loopne
mov
aam
rcr
out
mov
js
xchg
mov
out
adc
adc
les
jmp
std
adc
add
push
and
mov
pop
test
xor
cmp
sbb
adc
pop
cs
xchg
shr
dec
retf
std
aam
adc
fs
in
cmp
cwde
jmp
in
nop
inc
jb
fisttp
test
retf
in
pop
cmp
or
adc
icebp
cmp
or
daa
imul
maskmovq
test
or
mov
es
dec
mov
xor
pop
frstor
inc
xor
adc
fdivr
push
shl
sbb
(bad)
sbb
repnz
or
and
or
stos
mov
xor
ret
int3
sbb
xlat
xchg
mov
xchg
mov
mov
lods
sbb
xor
fisub
xchg
je
shl
fld
in
rol
add
mov
mov
retf
pop
and
push
sub
fndisi(8087
pop
and
(bad)
rol
enter
adc
mov
xor
pop
test
pop
sar
fdivr
loopne
or
or
or
adc
in
fst
popa
fbld
mov
pop
rol
cs
cs
inc
cs
inc
cs
cs
inc
cs
cs
inc
cs
cs
cs
inc
cs
cs
cld
and
and
daa
add
pop
and
or
pop
and
adc
and
and
adc
pop
and
and
pop
and
sub
pop
and
xor
sbb
cmp
retf
and
mov
dec
mov
repnz
pusha
push
js
add
dec
jmp
or
arpl
adc
sbb
pusha
bound
add
inc
mov
leave
inc
fidiv
adc
or
xchg
jmp
(bad)
fcomi
mov
outs
mov
call
pop
out
adc
sbb
fild
js
enter
mov
cwde
jecxz
cwde
call
and
inc
imul
rcl
daa
xor
push
stos
cmp
xor
daa
dec
dec
mov
data16
jmp
sbb
in
inc
push
in
inc
test
adc
mov
sar
push
inc
jbe
jmp
and
jo
jo
out
sbb
sbb
enter
shr
and
pop
add
sbb
pop
in
pop
jae
int3
sbb
sbb
or
out
ficomp
pushf
enter
fiadd
push
jl
xor
jmp
out
inc
sar
sbb
pop
jb
jmp
jmp
mov
sub
mov
in
call
jnp
in
lock
push
add
nop
add
nop
js
xor
add
test
inc
in
out
out
lods
xor
cli
cmp
add
adc
inc
outs
(bad)
sbb
cmc
cmps
adc
sar
sbb
mov
add
das
cli
dec
pop
pop
pop
jp
sub
cmc
add
leave
es
and
or
imul
cmp
unpcklps
pop
repnz
xchg
add
jmp
inc
push
out
sbb
fadd
aam
dec
jbe
mov
add
mov
add
movs
push
pop
dec
fcmovu
jnp
movs
add
and
xor
lds
mov
mov
movs
lea
add
in
rcl
arpl
cmp
jae
gs
jge
aam
or
mov
ins
test
adc
cmp
fcom
add
sbb
stc
sbb
addr16
lods
inc
(bad)
std
inc
(bad)
out
scas
or
jbe
adc
fcom
push
ins
ffree
sub
jbe
inc
sub
push
mov
xor
lahf
into
add
iret
and
mov
pop
sub
pop
sar
mov
sbb
mov
ret
fldcw
in
js
movs
fbstp
push
repz
out
in
inc
mov
bnd
repz
inc
adc
pusha
ins
mov
or
iret
repz
pop
and
cmp
iret
repz
xchg
lods
iret
fcmove
repz
push
pop
xchg
mov
add
out
adc
xor
jns
out
ja
cdq
stos
iret
mov
sahf
ret
loope
sbb
cmp
repz
pop
jb
xchg
repz
repz
out
sahf
int
loop
sbb
sahf
out
sahf
pop
fs
mov
jns
fdiv
jecxz
sbb
cmp
repz
push
ins
js
repz
xchg
sahf
mov
out
ss
sbb
inc
push
jns
out
gs
mov
stos
mov
repz
cli
in
push
daa
cmp
iret
repz
jne
cmps
sar
repz
out
sbb
out
outs
mov
(bad)
out
sbb
inc
cmp
repz
bound
movs
fnstcw
repz
adc
jns
out
inc
pop
je
sahf
out
sahf
xchg
mov
cmp
mov
jmp
cmp
repz
imul
hlt
sahf
out
ss
sahf
out
imul
jmp
sbb
iret
inc
pop
jns
lods
mov
rcr
out
stc
in
add
sbb
dec
pop
imul
sahf
out
xchg
test
jns
iret
dec
push
xlat
add
inc
mov
jns
pusha
and
cmp
repz
fcomp
fcomp
fdivr
out
pusha
and
mov
adc
push
jo
cmp
repz
mov
fcmovu
fcmovnu
repz
repz
fcmovnu
fcmovne
repz
(bad)
(bad)
(bad)
repz
cmp
fstp
fnsave
repz
fstp
fstp
add
fwait
int
push
push
push
push
imul
pop
sub
push
dec
push
rcl
sbb
add
call
xor
inc
dec
outs
jbe
ins
imul
gs
mov
outs
outs
das
dec
outs
je
jne
jo
jb
gs
gs
adc
adc
jns
push
imul
movs
mov
sbb
or
in
sti
in
call
sbb
adc
jo
add
pop
seto
pop
and
add
pop
test
inc
test
repz
fiadd
nop
push
jg
xchg
push
mov
xchg
push
add
repnz
ins
xchg
call
out
cmp
inc
push
outs
push
stos
into
dec
jle
jmp
out
xlat
xchg
sub
mov
add
jne
mov
cmp
xor
pop
adc
loop
adc
and
mov
inc
cmp
or
aam
inc
cmp
out
dec
adc
imul
ins
mov
repz
dec
mov
push
dec
or
jo
xchg
mov
(bad)
and
xchg
mov
lods
mov
cs
jmp
add
lock
stos
(bad)
cli
push
pusha
(bad)
pcmpeqw
xchg
jnp
sub
outs
gs
push
fidivr
inc
sbb
jb
jo
imul
aas
push
rol
fidivr
pop
je
dec
inc
jo
sar
mov
pop
sub
bound
mov
adc
sub
jne
inc
sub
jae
pusha
adc
push
arpl
fisubr
(bad)
pushw
bound
inc
jg
jbe
mov
dec
popa
pop
adc
js
ja
(bad)
pop
fisubr
push
imul
int
mov
mov
out
int3
aas
out
fst
loope
or
cmp
inc
mov
xchg
sub
sahf
int
jge
xchg
pop
jo
fnstcw
mov
adc
inc
repz
out
in
cdq
inc
mov
ss
jnp
call
mov
(bad)
(bad)
jns
mov
add
dec
sbb
or
sbb
loopne
xchg
cmp
adc
cmp
jp
mov
inc
nop
xor
and
add
fsub
mov
and
(bad)
outs
inc
adc
pop
repz
ins
and
pop
push
mov
ins
(bad)
addr16
stos
jl
or
ss
daa
idiv
push
sbb
mov
jmp
mov
addr16
push
mov
loopne
push
in
fisub
lahf
lods
sub
push
fstcw
addr16
pushf
or
ins
sahf
out
mov
popf
add
dec
jb
pushf
shl
out
ss
adc
push
jns
js
fwait
sahf
loope
retf
or
out
(bad)
mov
push
inc
and
push
mov
xor
push
jb
loope
out
fstp
add
dec
pop
inc
mov
push
push
push
out
or
pop
pop
orps
lock
mov
push
outs
jb
imul
jne
push
div
outs
outs
ja
push
sub
loop
mov
mov
jg
dec
mov
push
dec
outs
imul
or
jb
ins
(bad)
out
aam
movs
daa
inc
js
das
dec
gs
inc
fcom
cld
outs
jb
inc
fs
jae
aas
push
ins
cmp
gs
dec
jo
je
popa
cli
ins
das
inc
iret
inc
sub
data16
icebp
aam
mov
sti
and
or
adc
loopne
out
rcr
inc
lahf
js
jne
ins
mov
lahf
sub
ins
ins
dec
gs
jo
outs
push
pop
lock
je
cmp
mov
out
sbb
fwait
ins
repz
enter
jl
(bad)
into
out
push
test
leave
daa
ds
cmp
int
ret
std
les
popa
mov
loope
and
loope
repz
(bad)
and
fadd
push
jns
jnp
dec
sbb
test
inc
sbb
and
pop
and
adc
das
mov
in
lods
mov
dec
push
mov
push
mov
and
aaa
add
push
gs
cmp
pop
push
or
lods
add
jae
pop
ins
scas
pop
mov
jae
jo
imul
add
cs
jp
outs
push
mov
into
(bad)
ins
(bad)
fs
ja
pop
out
icebp
das
fimul
fisttp
and
jne
inc
mov
sbb
cmp
push
pop
enter
push
das
xor
and
xor
pop
add
test
mov
in
in
stc
sub
sub
or
jb
pop
mov
cmp
add
in
test
mov
pop
and
adc
bound
retf
das
or
fadd
jns
add
repnz
push
ret
add
cs
sbb
sub
push
pop
in
mov
sbb
fdivrp
add
xchg
mov
push
icebp
cmp
push
pop
ret
jns
std
add
mov
int3
cmp
sbb
mov
aad
push
fadd
mov
pop
or
pop
mov
add
ins
add
test
neg
outs
shr
jle
adc
imul
push
jnp
dec
sbb
dec
inc
dec
bound
arpl
cmp
retf
push
cmp
xor
jmp
ss
mov
or
aaa
cmovge
jge
cdq
std
push
outs
jb
push
outs
cwde
xlat
loope
into
out
icebp
and
rep
out
push
dec
push
push
push
hlt
xor
ins
ss
aaa
loop
clc
xlat
test
ret
lahf
fwait
ins
outs
stos
jne
fiadd
das
addr16
mov
add
jecxz
outs
cmps
mov
pop
scas
movs
ds
out
jb
popa
jns
and
out
sti
dec
or
push
pop
ss
adc
sbb
pop
push
std
sahf
jmp
ja
jmp
retf
dec
pusha
test
bound
push
addr16
iret
sub
mov
push
popa
fdiv
inc
addr16
xor
mov
pop
icebp
lods
sti
jb
jae
inc
gs
inc
imul
imul
inc
inc
ins
jmp
mov
inc
or
jae
jb
lods
push
call
jb
daa
ficomp
test
int3
enter
jl
das
or
jne
mov
and
sub
mov
jbe
jns
push
cwde
or
xchg
scas
dec
enter
cwde
aaa
mov
or
scas
nop
sub
imul
jbe
repz
push
in
ss
pop
sub
out
mov
call
push
add
adc
cmp
sti
clc
adc
xchg
pushf
mov
aam
repz
adc
jns
int
or
or
or
mov
out
fidiv
inc
push
or
fidivr
test
push
inc
gs
sti
into
in
xchg
jmp
inc
leave
repz
lock
sub
xchg
out
cmps
cld
sti
push
pop
mov
cmps
add
pop
xor
pop
call
cmp
pop
fsub
rcl
pop
dec
ins
fs
popa
jb
mov
div
outs
(bad)
mov
sbb
mov
pop
cwde
push
pushf
pop
jo
mov
inc
outs
and
lods
test
ins
jo
adc
jle
pop
ins
cmps
es
sldt
mov
in
sgdtd
test
js
int
iret
and
and
cmp
mov
jo
retf
je
ss
jne
pop
jg
xchg
jbe
outs
push
jp
mov
xor
mov
fild
mov
jns
xor
cmp
pop
ja
out
cmp
es
inc
das
adc
mov
pop
das
pop
cmp
or
dec
jle
outs
outs
add
inc
test
cmps
jbe
mov
push
xchg
es
scas
fs
sbb
inc
ss
cmc
shl
push
adc
aaa
js
mov
repnz
out
test
ret
jo
out
jmp
call
pop
jbe
push
xlat
sysret
pop
loope
bound
xlat
cmps
push
cmc
pop
sub
mov
imul
test
push
push
bound
pushf
mov
inc
jae
inc
shl
xchg
neg
imul
imul
or
and
das
push
dec
popa
ja
add
inc
jmp
inc
sub
cmps
fisubr
jne
je
inc
je
mov
pop
jne
mov
ins
imul
jbe
xchg
and
popa
ins
ins
bound
imul
inc
mov
cmp
or
mul
inc
adc
inc
hlt
pop
fmul
xchg
push
outs
push
jb
addr16
or
or
cld
aaa
mov
push
or
jb
push
dec
dec
popa
outs
addr16
mov
je
pushf
dec
and
cmc
push
jmp
movs
sub
and
xor
or
mov
nop
pop
in
sub
je
data16
mov
fisubr
lods
(bad)
dec
sub
push
push
in
fldcw
xchg
aaa
add
cmp
cmps
sahf
jmp
daa
scas
ds
scas
int
mov
push
mov
es
fwait
es
les
cs
cmp
add
push
mov
sahf
out
rcl
lock
hlt
fidiv
xor
push
and
fiadd
mov
pop
out
dec
mov
arpl
adc
sar
ja
loopne
in
test
sub
dec
push
outs
call
and
cmp
out
and
xor
js
mov
mov
xor
and
jle
ds
inc
and
gs
jb
or
adc
adc
popa
jae
mov
pop
out
out
jl
mov
inc
cmc
pop
push
out
or
mov
mov
jnp
inc
cs
push
dec
sbb
cmp
dec
push
inc
outs
mov
or
dec
or
jbe
cwde
add
in
es
rcl
add
in
dec
sahf
mov
xchg
add
adc
sub
inc
(bad)
call
push
std
push
and
pop
mov
push
adc
(bad)
jp
andps
jl
dec
sub
test
xchg
adc
nop
jnp
fistp
pop
pop
(bad)
adc
xchg
pop
in
or
push
nop
xchg
pop
or
pop
stos
out
fwait
test
dec
push
stos
xor
lods
or
mov
mov
inc
scas
adc
outs
(bad)
pop
ds
iret
add
cmp
das
add
xchg
sub
das
mov
cs
add
pop
test
add
cmc
add
pop
mov
add
in
cs
push
push
test
jb
adc
mov
push
rcl
ret
mov
cld
ja
sub
in
mov
and
fs
(bad)
fiadd
cmp
minps
sub
aaa
or
push
push
fucomp
pop
test
push
or
(bad)
push
push
xchg
pusha
xchg
push
xor
sub
into
or
pop
push
cmp
dec
fwait
pop
imul
add
pop
out
scas
jl
(bad)
adc
cmps
mov
fs
mov
out
add
or
dec
inc
ins
iret
test
push
outs
inc
jmp
cmp
repz
push
outs
xchg
addr16
scas
(bad)
loope
addr16
sahf
out
sahf
cmp
xchg
mov
and
or
pop
add
adc
pusha
enter
mov
ins
cmps
cmps
mov
push
leave
push
int3
mov
fwait
addr16
dec
addr16
ss
or
jge
mov
int
mov
aas
iret
data16
push
mov
sar
cmp
or
dec
add
xor
mov
into
call
xchg
mov
mov
dec
xor
pop
or
aas
push
add
sar
cmps
stos
fcmovne
adc
mov
jmp
mov
push
mov
fs
or
jae
and
xchg
sub
sahf
or
lea
idiv
sbb
pop
sahf
imul
cmp
out
push
adc
jno
jge
pusha
mov
cmp
or
out
test
shr
fistp
xor
sti
push
add
add
pop
sbb
out
or
cmp
and
es
push
push
inc
js
outs
pusha
je
in
outs
arpl
rcr
add
je
aaa
or
push
xchg
inc
out
mov
push
xchg
push
and
lock
push
mov
or
repz
jp
inc
stos
push
push
add
test
mov
xlat
mov
jne
inc
push
aaa
dec
ds
daa
add
add
push
iret
repz
xor
inc
cmp
loopne
ds
(bad)
clc
adc
dec
push
enter
dec
inc
clc
enter
fcom
test
push
ins
shr
test
and
xor
fwait
out
dec
sahf
mov
or
pop
jnp
call
ss
add
inc
popa
sbb
xchg
push
lahf
pop
outs
cwde
stc
mov
jae
cwde
add
xchg
fs
into
ret
add
or
add
fstp
push
(bad)
lahf
adc
mov
fwait
int
loop
std
mov
ins
outs
shl
pop
popf
jbe
push
cdq
(bad)
ss
outs
fstp
mov
(bad)
scas
mov
iret
pushf
and
les
repnz
xor
adc
shl
push
jo
js
inc
and
movs
arpl
pop
sahf
xor
add
jbe
xchg
int
mov
xor
and
dec
push
mov
or
mov
lock
arpl
inc
popa
jb
fist
clc
mov
imul
outs
js
cmp
dec
pushf
adc
ins
movs
dec
xchg
push
je
arpl
ins
sbb
adc
or
push
enter
inc
ret
mov
inc
push
js
xor
ret
bound
stos
or
add
inc
pop
add
test
out
and
jbe
inc
test
repz
pop
jb
jmp
adc
push
inc
enter
popf
mov
push
push
add
cmp
pop
fistp
add
cmp
and
mov
push
adc
pop
inc
lds
cs
dec
and
das
sub
mov
add
xor
dec
dec
xchg
pushf
stos
pop
test
bound
pop
sbb
and
arpl
adc
push
cli
sbb
or
out
out
mov
jns
add
test
mov
pop
lods
fldenv
pop
inc
inc
jbe
enter
dec
inc
pusha
pusha
mov
jbe
lods
push
mov
or
popa
mov
xchg
cmp
pop
inc
mov
xchg
lock
pop
cmp
lods
mov
adc
mov
or
scas
mov
imul
sahf
in
mov
cmp
lock
(bad)
dec
mov
pop
xor
dec
pop
dec
neg
xchg
ret
(bad)
sbb
ret
inc
scas
imul
call
(bad)
enter
add
xlat
add
mov
shl
js
mov
inc
xor
cmp
lods
adc
add
gs
imul
mov
ss
pop
enter
mov
leave
jl
mov
cmp
fcmovne
(bad)
sub
push
fadd
jnp
repz
es
push
inc
lahf
sbb
ret
dec
and
pusha
mov
sub
pop
popa
sbb
int
aad
out
ins
rcr
adc
sbb
jns
dec
or
mov
or
shl
pop
repz
inc
clc
mov
loop
in
xchg
add
push
adc
cmc
jb
add
adc
ins
jne
psrlq
pop
pop
(bad)
call
outs
mov
or
cs
add
loope
scas
sbb
adc
push
inc
je
jb
bound
and
pop
xor
push
cmp
push
out
out
pop
xor
das
loopne
and
xlat
ss
jp
ins
adc
call
or
icebp
adc
lock
inc
call
pop
scas
mov
cmp
or
inc
push
push
push
fmul
imul
push
daa
push
cmc
out
mov
inc
dec
inc
call
arpl
inc
mov
pop
ins
mov
cmp
push
sbb
das
xor
push
nop
test
and
or
jbe
and
adc
jo
mov
mov
out
inc
in
outs
push
js
bound
sti
or
or
lea
cmp
mov
adc
rcl
ins
loop
and
jo
outs
lfs
pop
pop
push
cwde
and
mov
hlt
jb
adc
jns
es
jae
push
push
pushf
and
adc
add
sahf
(bad)
in
mov
repnz
dec
ret
mov
(bad)
pop
push
xor
cld
mov
sub
jae
daa
inc
gs
jb
jns
ret
dec
outs
popa
sbb
das
dec
sub
lea
mov
inc
cli
int
adc
das
repz
mov
sbb
mov
pop
lahf
rol
sbb
lods
mov
lock
hlt
daa
xchg
dec
cld
sbb
and
fstp
test
sub
shl
test
push
push
jb
push
fmul
frstor
adc
fisttp
add
add
add
mov
mov
or
mov
add
add
sti
fidivr
mov
inc
je
ss
loopne
cmp
les
shl
inc
mov
inc
pop
cli
pop
js
jge
mov
imul
push
push
ins
mov
cmp
dec
lock
and
ins
ss
sub
repnz
repz
push
and
adc
adc
xor
lahf
rcl
and
sbb
pop
pop
movs
jo
dec
or
mov
and
or
or
push
push
leave
jg
or
dec
or
xchg
add
and
jl
adc
or
or
nop
(bad)
scas
pop
jg
or
mov
shl
jg
movs
push
xor
jecxz
ins
sbb
es
iret
mov
ins
push
and
adc
mov
dec
push
mov
ins
js
popa
cmp
jbe
or
push
sbb
pop
mov
pop
data16
add
ins
pop
outs
push
nop
cmp
xchg
mov
dec
mov
or
pop
das
and
inc
mov
xor
call
in
and
add
add
push
xchg
bound
dec
jbe
xchg
or
or
mov
pop
or
scas
mov
adc
div
or
xchg
mov
arpl
movlps
dec
outs
xor
rol
sub
wbinvd
push
dec
dec
pop
and
adc
push
das
pop
dec
xor
add
xor
adc
aas
pop
sti
push
repnz
fwait
cs
pop
add
adc
or
lods
lsl
punpckhbw
das
and
sti
push
and
dec
data16
dec
jecxz
repnz
outs
adc
fucomp
add
sub
xor
das
cmp
pop
add
das
pop
add
in
lods
in
das
pop
or
in
push
out
lods
das
add
add
popf
jns
iret
push
push
inc
loope
fwait
ins
and
das
and
dec
inc
out
std
cs
nop
retf
sub
pop
xor
xor
loopne
sbb
call
das
xor
or
pop
(bad)
and
repz
push
inc
adc
icebp
data16
push
call
popa
outs
lods
inc
jecxz
arpl
outs
arpl
cmps
ins
stos
jne
xchg
add
test
or
lods
into
popf
test
sbb
or
add
repz
sub
loop
sub
popf
or
popa
add
out
(bad)
je
imul
pop
add
sbb
inc
nop
ja
idiv
push
mov
shl
inc
inc
jb
push
jbe
jns
pushf
adc
hlt
outs
pop
xchg
xchg
pop
sub
ins
imul
jecxz
test
add
inc
call
ja
data16
ins
push
nop
and
xchg
inc
outs
iret
out
imul
je
xchg
sub
pop
jge
sahf
mov
addr16
sar
push
outs
js
repz
xchg
jo
push
add
add
ret
(bad)
int
cmp
outs
popa
outs
push
jns
pop
add
int
repz
sahf
push
test
xchg
jp
jb
fnstcw
mov
popa
mov
ffreep
data16
jl
ss
into
xchg
push
dec
cmp
icebp
fild
outs
outs
ja
inc
outs
ins
fs
push
popa
je
add
stos
(bad)
int
xor
mov
mov
jle
cmp
ficomp
aas
xor
add
out
outs
pop
jno
js
jo
jl
outs
cmp
inc
addr16
nop
push
adc
and
imul
pusha
(bad)
clc
out
popf
js
repnz
jns
pop
cs
data16
sub
xor
out
(bad)
fmul
(bad)
call
sub
lods
dec
or
pushf
and
xor
jns
pushf
push
lds
mov
iret
div
popf
push
sub
push
mov
sahf
(bad)
repz
or
outs
retf
ror
shl
dec
jl
lahf
movs
sahf
(bad)
out
test
rol
in
rol
cli
inc
outs
mov
push
jmp
(bad)
pop
add
ficom
pop
daa
in
mov
sub
(bad)
js
stc
repnz
or
jo
aam
loopne
leave
das
mov
fbstp
call
test
adc
lock
adc
in
iret
pop
dec
cmp
cmp
xor
push
adc
repz
cmp
cmp
aaa
or
repz
and
inc
fidivr
xor
inc
and
and
or
and
bound
ret
(bad)
int
shr
push
xor
jmp
std
fwait
shl
mov
sbb
push
lods
in
ja
push
pop
push
jb
pop
mov
mov
add
mov
mov
ret
jbe
icebp
xor
js
push
jno
cld
and
(bad)
push
les
clc
mov
rcl
test
cmp
xchg
outs
loop
sti
push
and
je
pop
mov
ficom
ja
call
jae
fld
out
pop
outs
fcomp
ds
cmps
push
cmp
test
jns
xchg
inc
(bad)
and
rep
cmps
addr16
push
jecxz
mov
and
stos
push
in
test
push
ret
int
in
or
jle
or
test
jg
aas
cmp
push
dec
shl
fisub
jl
inc
es
cmp
fidivr
push
imul
cs
aaa
nop
push
in
neg
mov
jb
ror
fistp
cmp
xchg
fdivr
push
adc
cmp
mov
ss
pfrsqrt
icebp
mov
(bad)
xor
and
pop
or
and
frstor
cld
and
pop
clc
sub
and
je
(bad)
sbb
inc
ret
inc
push
repnz
mov
push
pushf
xchg
cwde
cmc
fidivr
push
push
ins
push
mov
mov
jmp
push
push
jne
rol
xlat
ins
dec
mov
pop
inc
push
jns
arpl
or
dec
(bad)
jb
jle
ins
push
and
ja
and
mov
mov
ss
and
out
fbld
outs
pop
xchg
fdiv
loope
push
push
cmp
ins
ins
lock
gs
sbb
stc
cs
mov
dec
adc
sbb
inc
dec
stc
dec
jae
jo
push
push
push
dec
jo
outs
adc
mov
mov
sbb
scas
or
outs
jne
loopne
push
pop
sub
xor
push
imul
inc
inc
cmp
jo
mov
sbb
inc
add
loopne
(bad)
add
pop
into
and
and
addr16
dec
das
jae
(bad)
pop
inc
dec
xchg
xchg
cmp
fcom
add
das
push
pushf
cmp
daa
push
xor
(bad)
push
(bad)
fisttp
lahf
xchg
fwait
dec
in
shl
stos
inc
mov
adc
fs
adc
adc
jle
retf
mov
rol
and
fbstp
in
pop
cmp
xor
cs
add
jne
push
(bad)
lock
iret
push
addr16
jns
retf
or
mov
in
fldcw
mov
cmc
push
mov
div
push
push
leave
and
cmp
jecxz
(bad)
scas
add
add
mov
xchg
mov
or
jg
fbstp
jbe
add
mov
or
(bad)
add
aam
cs
iret
push
cmp
mov
pushw
mov
push
out
mov
arpl
js
out
out
shl
out
ret
jmp
pushfw
or
ins
cs
pop
jbe
mov
push
mov
push
aam
sahf
daa
or
push
xchg
mov
ss
retf
fs
shl
xor
scas
xchg
lods
mov
shl
push
int
es
mov
fild
xchg
push
pop
or
or
xor
push
dec
adc
enter
fimul
lock
jmp
fimul
test
sti
fisttp
into
movs
addr16
hlt
cmps
fimul
adc
ins
pop
pop
pop
push
add
pop
(bad)
fdiv
fldz
adc
or
int3
jbe
ins
mov
es
sbb
cdq
push
lock
fcomp
(bad)
ss
iret
into
mov
shr
cwde
mov
dec
mov
outs
jae
nop
sahf
rol
mov
ss
push
sar
or
inc
mov
fld
xchg
mov
xor
xor
xchg
js
fldcw
cwde
cmps
ja
jb
push
fistp
push
ds
inc
les
mov
and
mov
dec
push
stc
lock
outs
jnp
aaa
ja
ss
cdq
ins
mov
mov
out
iret
xor
ins
(bad)
ins
pop
ror
outs
mov
fldcw
push
retf
mov
add
cmps
pop
fld
aaa
dec
push
loop
addr16
or
in
(bad)
jle
pop
push
cs
mov
mov
sub
imul
addr16
call
jecxz
mov
sub
mov
dec
inc
mov
nop
ins
jnp
mov
es
pop
enter
xchg
mov
xor
pop
seto
push
and
jns
iret
or
test
jge
ds
jnp
add
test
inc
cwde
test
pusha
pop
cmp
popa
into
fisttp
bound
mov
enter
in
clc
mov
sub
push
loopne
aas
int3
ltr
and
jle
xor
std
pop
lods
shr
jg
or
test
sbb
pop
cs
jmp
rcl
repnz
test
cmp
xchg
rol
repnz
adc
push
nop
dec
sahf
adc
mov
repnz
nop
adc
jne
adc
cmp
xor
cwde
pusha
push
push
mov
mov
sahf
push
push
outs
ret
mov
movs
mov
sbb
inc
push
inc
inc
cmc
sbb
jl
jae
dec
iret
adc
(bad)
add
xlat
pop
cs
cmc
or
push
sub
lods
mov
mov
push
push
out
push
push
inc
inc
sub
pop
and
dec
call
push
adc
aas
out
pop
in
cmps
push
(bad)
push
xchg
push
inc
fdiv
push
xor
push
ficomp
cmp
fdivrp
push
inc
inc
dec
das
pop
cmps
imul
mov
dec
cmps
pop
ret
idiv
pop
das
dec
sub
pop
sbb
daa
push
clc
movs
xor
(bad)
push
outs
jo
jo
sub
es
push
in
add
sub
and
or
movzx
pop
test
jnp
mov
cmp
dec
push
or
inc
mov
mov
sbb
lds
and
gs
pop
and
push
mov
das
or
fs
test
shl
sbb
adc
dec
pop
pop
cs
pop
adc
dec
scas
push
push
loope
jmp
cmp
cli
ds
and
mov
or
dec
cmp
or
aad
xchg
or
add
aas
in
repnz
sub
sbb
sub
add
xor
cs
mov
es
adc
push
pop
ja
stos
int
and
dec
sub
push
pop
inc
push
mov
pop
add
adc
repnz
jl
cli
jge
sar
or
neg
fld
in
(bad)
lds
jle
ret
mov
cmp
out
push
aam
push
in
mov
int
xchg
and
cmp
data16
ss
sbb
rcl
adc
lahf
fcom
mov
out
cmps
or
jae
(bad)
in
daa
test
or
pop
cmp
(bad)
add
inc
or
or
xchg
cmp
nop
or
jae
inc
enter
int3
or
pop
push
repnz
or
sbb
cmps
ud2
cmp
daa
ud2
ss
add
cmp
cli
sbb
jg
scas
mov
out
jle
inc
pop
pcmpgtd
or
das
mov
popa
ss
sbb
sub
das
or
ret
dec
imul
or
or
or
fimul
cmc
push
push
cmp
jle
rcl
cmp
scas
dec
cmps
and
or
jne
ja
lea
add
ins
mov
add
add
and
lock
sti
pop
xchg
mov
out
imul
rol
shl
js
pop
lds
cmps
inc
cmp
test
xor
lahf
mov
das
cs
cwde
add
and
and
enter
dec
pop
push
and
outs
xor
sub
cs
outs
stos
dec
pop
out
sub
add
xlat
call
ja
mov
push
jae
and
add
ss
imul
pop
dec
push
cwde
xor
inc
lahf
out
aaa
jnp
add
daa
daa
icebp
push
inc
dec
dec
inc
outs
arpl
push
inc
ror
daa
jp
in
in
inc
ss
add
addr16
lods
loopne
xchg
fimul
das
aam
test
(bad)
inc
sub
mov
sub
dec
scas
lods
fcos
pop
mov
sub
or
inc
or
push
or
xchg
pop
fsub
or
push
mov
repz
test
push
inc
push
test
push
cmp
out
xchg
pop
mov
inc
jle
bnd
movs
ins
jl
aas
or
test
(bad)
(bad)
xor
pop
and
retf
dec
rol
cmps
outs
mov
fisttp
iret
mov
mov
and
in
xchg
iret
push
and
pop
dec
push
addr16
mov
psubusb
adc
pop
lods
mov
je
dec
mov
adc
sub
or
(bad)
jg
mov
jle
dec
cmp
adc
cmps
xchg
mov
imul
and
xor
push
mov
pop
mov
inc
das
xor
outs
inc
dec
inc
or
mov
mov
add
dec
sbb
daa
(bad)
xchg
push
rcr
dec
ds
push
imul
fisttp
lahf
jo
fidiv
stos
xchg
mov
and
pop
xor
sub
push
cmp
pop
xchg
aas
repnz
push
push
push
add
xchg
xchg
mov
dec
out
cs
cmp
outs
sub
shl
mov
xor
dec
jp
add
mov
test
mov
jns
pop
(bad)
xor
add
jb
xor
and
and
scas
inc
lock
sub
aaa
aas
xor
and
jae
sub
jmp
es
adc
push
xor
arpl
ret
and
pop
push
xor
mov
aas
pop
push
ret
push
mov
das
ret
mov
jg
inc
ja
jmp
iret
repz
pushf
rol
int
cmp
mov
adc
sub
push
fidiv
stc
dec
mov
adc
je
push
jns
call
sub
push
mov
inc
mov
scas
psubsw
dec
inc
dec
xor
sahf
idiv
cs
jnp
dec
sbb
js
cdq
movs
and
fnstenv
lds
es
ins
pop
push
outs
pop
or
in
inc
push
popa
jae
mov
in
adc
dec
dec
outs
imul
out
mov
repz
mov
pop
and
push
dec
daa
ins
add
outs
in
mov
ss
pop
adc
iret
add
out
mov
inc
dec
push
mov
mov
sbb
jl
inc
(bad)
outs
js
add
add
or
pop
or
and
push
pop
adc
(bad)
mov
or
jl
lods
aam
inc
mov
call
pusha
and
mov
dec
scas
movs
scas
fs
sar
out
push
jne
pushf
mov
ret
cmps
lahf
sbb
iret
bound
popf
es
pop
ins
mov
popa
jbe
(bad)
or
mov
out
jbe
jg
cmps
ins
out
cmp
repnz
out
imul
pop
lods
push
loop
pop
push
popf
jbe
fiadd
or
adc
leave
test
pop
jle
in
dec
or
div
ins
add
xchg
scas
out
sub
ins
retf
adc
ud0
(bad)
jg
push
clc
inc
jle
pushf
inc
test
in
pop
adc
push
ins
add
out
inc
mov
mov
jnp
inc
dec
mov
je
push
pop
pop
add
or
or
pop
ins
mov
das
bound
inc
add
or
or
jg
cdq
dec
push
or
enter
das
call
or
dec
add
out
or
push
(bad)
sub
fwait
addr16
mov
mov
add
arpl
push
mov
mov
(bad)
xchg
cmp
data16
addr16
inc
mov
ins
jmp
jnp
push
adc
or
push
adc
push
dec
les
cs
popf
adc
sbb
push
xor
fs
pusha
pop
ins
ins
shr
mov
pop
fisub
mov
enter
jbe
inc
sbb
add
pop
dec
lea
cmc
mov
outs
scas
jb
add
xor
jp
test
ret
mov
xchg
pop
mov
scas
sbb
dec
pop
nop
movzx
icebp
cmp
push
jg
or
add
add
pop
scas
fcomp
add
inc
popa
xor
lahf
adc
add
cmp
add
or
in
mov
ds
xchg
sub
pop
push
xchg
push
fwait
mov
stos
mov
push
adc
inc
adc
xchg
int
mov
or
xor
outs
or
vucomiss
mov
add
mov
mov
jns
stc
pop
retf
or
lds
jns
nop
pop
or
cli
or
or
(bad)
in
or
push
add
and
or
mov
out
add
inc
(bad)
pop
repnz
cwde
ja
jbe
sub
aaa
mov
leave
add
dec
ret
push
adc
fwait
cmps
xchg
cs
adc
fisttp
pop
out
iret
mov
fwait
push
bnd
or
test
(bad)
jmp
sub
push
cmp
aas
call
sbb
add
in
cmp
outs
daa
and
dec
sub
das
ds
outs
inc
dec
xor
and
nop
lods
mov
das
push
jnp
(bad)
adc
ds
pop
pop
fsubr
or
add
sar
movsx
scas
inc
loope
test
cmp
test
mov
mov
push
dec
or
clc
repnz
or
sahf
sub
out
jo
sbb
push
fild
push
je
popa
add
movs
ins
popf
mov
inc
aam
js
scas
(bad)
in
test
push
adc
jnp
int
or
push
push
xor
push
jmp
push
push
push
mov
call
mov
arpl
lods
scas
adc
push
imul
sbb
push
dec
pop
(bad)
jge
xor
cmp
mov
jge
lss
jge
push
cmps
xor
scas
pop
loop
icebp
outs
es
daa
inc
ins
ins
ins
cs
push
iret
push
push
pop
mov
daa
fwait
jg
fiadd
add
mov
push
mov
out
jge
push
gs
push
repz
ins
iret
push
in
cmp
es
js
ret
data16
mov
rol
mov
in
push
popf
sub
call
out
mov
xchg
aaa
dec
xlat
jbe
push
jmp
neg
ins
push
shl
ucomiss
ds
into
pop
cmp
ja
ss
push
dec
das
aas
xchg
sahf
in
mov
fimul
jp
mov
int
fldcw
inc
sbb
pop
push
imul
aam
ds
push
cmp
ss
repz
add
out
fisubr
jns
mov
pop
ds
fsubr
addr16
xchg
push
add
data16
out
pop
out
push
mov
neg
xor
imul
ss
in
jns
inc
inc
sbb
mov
or
jno
inc
pop
add
jbe
sub
into
idiv
(bad)
(bad)
pop
cwde
outs
outs
aaa
push
mov
aas
pop
inc
pusha
xchg
push
add
adc
iret
call
push
test
in
sub
popf
inc
jbe
addr16
call
retf
int
mov
sahf
(bad)
sti
push
arpl
data16
sahf
cmp
jbe
cmp
fwait
in
fstp
fwait
cmps
dec
or
jge
popf
loope
xchg
pop
dec
dec
push
ja
mov
cmps
push
dec
dec
in
jnp
dec
sub
mov
mov
scas
ficomp
sahf
dec
sub
dec
add
dec
sahf
movs
add
push
fisubr
sbb
ror
outs
jnp
mov
iret
xchg
push
push
inc
call
ret
mov
sub
inc
jne
nop
and
push
jns
mov
jg
daa
je
add
adc
add
xchg
loop
pop
iret
push
out
add
out
jl
push
add
add
ins
ja
xchg
adc
cmps
inc
inc
cmps
fimul
and
sbb
push
shl
mov
idiv
inc
mov
push
push
dec
sbb
jne
das
pop
inc
cmc
imul
lods
movs
adc
push
sar
in
fdivr
mov
aaa
mov
push
mov
ds
mov
cmps
cmp
dec
push
(bad)
es
jg
aad
cs
daa
push
stos
clc
sub
(bad)
stos
inc
out
ss
lea
dec
add
sbb
out
(bad)
push
stos
sub
(bad)
jg
jmp
les
ret
jmp
pusha
cmps
sbb
push
add
mov
outs
lock
push
inc
(bad)
adc
add
push
clc
and
jmp
(bad)
lea
shl
outs
call
dec
ss
mov
cmove
ss
and
data16
out
cmp
leave
and
inc
leave
add
xor
sbb
idiv
sahf
sbb
mov
stos
mov
rcr
and
out
fistp
sbb
mov
or
popa
seto
sub
pop
int3
jmp
mov
ucomiss
fisubr
hlt
loope
mov
add
lahf
fs
scas
pop
inc
xor
push
arpl
addr16
or
mov
fiadd
or
imul
push
pop
push
xor
mov
ds
das
dec
sub
add
inc
mov
rcr
xchg
test
push
pop
jecxz
jo
push
add
neg
mov
pop
inc
fisttp
mov
dec
sub
daa
mov
cmp
pop
cli
neg
add
or
cmp
leave
cmc
stos
or
push
and
sbb
mov
(bad)
jge
pop
cmp
repnz
fadd
inc
das
jle
add
and
repnz
jl
cmc
pop
sbb
and
jns
sti
pop
jnp
push
cdq
in
sub
inc
es
xchg
xchg
xor
xor
stc
pop
xchg
xchg
lahf
inc
cmc
push
add
loopne
pushf
mov
test
dec
mov
ret
in
int
xor
inc
dec
push
sbb
ja
cdq
sbb
dec
cld
inc
pop
adc
or
mov
pop
push
xchg
push
fadd
adc
cmp
adc
push
or
and
dec
and
(bad)
mov
adc
push
(bad)
adc
fbld
adc
or
js
mov
or
xchg
fmul
pop
mov
call
sub
in
add
add
or
(bad)
dec
push
retf
pop
ret
inc
fsub
mov
scas
sbb
jg
outs
inc
jl
xor
add
or
push
inc
or
loop
add
ret
push
xchg
inc
push
mov
iret
or
inc
push
or
xchg
nop
pop
nop
pop
or
xor
shl
add
adc
in
jge
int
xchg
xchg
mov
ss
push
cmp
pusha
cmps
xchg
div
add
adc
push
popw
sahf
xchg
fadd
jbe
cmps
rcl
jp
fidivr
jle
stos
mov
iret
or
stos
or
cmp
dec
pop
or
add
or
in
lods
pop
das
pop
add
xor
js
das
sbb
pop
leave
xor
test
pop
fisubr
loopne
inc
dec
push
popa
bound
jns
push
std
mov
pop
inc
push
jbe
dec
inc
xor
nop
mov
or
push
outs
test
js
jae
in
push
cmp
addr16
outs
add
or
add
iret
adc
xchg
mov
or
xchg
rol
xchg
push
xor
inc
das
pop
add
push
xchg
aas
nop
mov
inc
push
dec
add
inc
push
in
nop
jo
pop
lock
ss
pushf
push
xchg
shl
cmp
push
fisubr
data16
mov
push
sar
push
pop
mov
push
mov
rep
push
push
pop
lds
pop
icebp
pop
imul
inc
push
ds
jmp
add
adc
pusha
sbb
clc
add
aad
lea
inc
mov
aas
sti
sub
gs
push
push
popa
adc
dec
mov
jbe
(bad)
loop
(bad)
jg
cwde
(bad)
cmp
dec
nop
xor
sbb
mov
ins
sub
inc
lods
and
das
pop
inc
mov
fld
lahf
pop
inc
jecxz
pop
enter
mov
test
jg
dec
jp
or
cmp
push
(bad)
dec
pop
inc
(bad)
mov
loopne
prefetchwt1
xor
push
dec
iret
push
fwait
push
xchg
fisubr
cs
fild
push
sub
sbb
jae
add
outs
add
or
push
and
es
pop
cmp
es
addr16
jmp
aas
out
add
std
push
cmps
scas
loopne
lahf
pop
mov
das
push
jo
add
dec
cmp
adc
cs
out
lock
push
shr
sub
in
test
add
call
sbb
arpl
scas
les
add
mov
iret
js
xor
xor
xchg
inc
enter
jbe
fiadd
enter
outs
rol
mov
cmp
push
inc
fs
imul
test
or
jb
or
and
ja
add
xor
outs
mov
push
cmp
dec
xchg
fwait
sub
in
fidiv
cmps
test
aas
or
push
add
mov
movs
in
repnz
sbb
add
das
pop
add
fcomip
add
jno
aas
jae
push
and
sbb
je
push
add
cmp
push
pop
cmp
je
pcmpeqw
jne
jne
inc
push
xor
jne
fbstp
pop
jp
cmp
cmp
enter
into
data16
pop
sbb
add
imul
punpckhdq
outs
push
in
repnz
push
add
push
pshufw
out
fimul
mov
push
das
jmp
cmp
add
daa
gs
pusha
lds
sahf
cld
push
pop
sbb
sub
sbb
sbb
nop
fsub
add
add
ret
xchg
jne
cmps
ficom
adc
enter
cs
inc
jg
pop
enter
xchg
arpl
mov
mov
or
add
cmp
cmp
cmp
in
and
adc
sub
mov
push
cwde
adc
cwde
xor
jge
inc
adc
xchg
lock
jnp
jnp
in
outs
push
test
xor
push
mov
ins
outs
test
pop
sbb
xchg
nop
cmps
scas
and
add
adc
mov
js
add
jmp
and
mov
push
rcr
out
jns
jo
add
pop
jg
pop
cmp
test
xor
and
xchg
add
pop
xchg
mov
fs
push
daa
das
dec
mov
inc
jle
repnz
pop
mov
lahf
repnz
in
mov
cs
add
add
add
cmp
out
jnp
mov
in
repnz
jle
pushf
and
add
scas
jge
mov
iret
cmp
jp
xchg
xchg
xchg
xchg
xchg
pop
dec
xor
mov
jg
mov
cmp
push
jp
jp
clc
sub
pusha
fild
jo
in
push
or
(bad)
aad
mov
aaa
xchg
pop
and
pop
int3
inc
pop
adc
push
pop
sub
push
xchg
aam
and
repnz
sub
leave
call
enter
xchg
add
pop
or
inc
dec
inc
das
ror
aam
in
mov
jp
adc
push
mov
jns
pop
cli
(bad)
sar
test
or
add
or
inc
push
or
jno
add
ret
or
in
or
out
xchg
in
push
or
pushf
and
add
cs
pop
popf
add
ins
mov
adc
adc
test
mov
adc
ss
cs
fstp
push
mov
dec
jg
or
sbb
jbe
jg
fstp
or
call
out
call
scas
unpckhps
lahf
(bad)
leave
out
or
push
and
mov
sbb
nop
fistp
sub
fild
pop
pop
or
adc
jg
retf
or
add
adc
xlat
(bad)
cmp
sub
(bad)
mov
(bad)
ds
sub
push
jg
mov
or
add
lahf
nop
push
pop
lock
push
movsx
sbb
mov
jno
shl
push
inc
pop
jmp
cmp
inc
inc
jae
bound
das
sub
inc
jae
adc
mov
rcr
lods
mov
sub
icebp
pop
dec
into
xchg
push
or
fstp
sbb
shl
sbb
ret
xor
shl
aaa
add
gs
adc
out
ins
out
jbe
push
cmp
xchg
repnz
dec
fwait
xchg
cmp
and
cmp
and
or
shl
fild
push
add
pop
mov
inc
data16
ins
lahf
scas
push
movs
inc
sbb
mov
(bad)
(bad)
push
cmp
and
fidiv
add
push
fadd
imul
test
or
xor
(bad)
jle
imul
push
xor
cs
xchg
int
(bad)
mov
dec
or
out
pop
push
sbb
fcmovnu
fld
cmp
(bad)
push
out
dec
push
inc
loope
fldcw
rol
dec
xchg
sbb
mov
add
(bad)
dec
mov
out
ins
mov
pop
es
cs
das
cmp
rcl
dec
call
mov
push
add
stos
push
xchg
retf
adc
and
mov
das
or
push
pop
push
stos
pusha
adc
adc
scas
daa
aas
push
jo
bound
mov
pop
int
pop
out
pop
inc
adc
or
add
les
lods
push
jmp
xchg
pop
pop
lods
push
fbstp
dec
pop
lods
push
jmp
pop
pop
lahf
popf
js
mov
add
pop
mov
mov
ds
aas
ds
pop
aad
adc
add
add
das
mov
xor
out
push
lahf
enter
scas
dec
jle
push
mov
add
fistp
hlt
out
fidivr
pop
pop
dec
or
cmpps
inc
jg
ror
nop
fld
cs
ins
sub
add
pop
push
inc
sub
cld
mov
add
add
mov
inc
or
dec
pop
push
mov
cmp
pop
mov
dec
xchg
mov
call
push
frstor
into
nop
dec
adc
push
dec
jns
pop
push
pop
aas
push
pusha
(bad)
fsubr
pop
xchg
cs
mov
imul
outs
popa
push
push
push
xchg
push
(bad)
cmp
call
push
(bad)
mov
add
or
push
pop
adc
fs
push
stos
aaa
push
imul
sub
add
xchg
xor
cmps
and
hlt
add
(bad)
cmp
repnz
push
mov
push
sbb
adc
test
push
inc
push
push
test
mov
leave
iret
dec
mov
(bad)
or
sbb
jnp
ins
xchg
nop
xchg
in
frndint
mov
jne
lods
sub
add
mov
fwait
in
out
push
test
adc
push
xchg
(bad)
lods
psrld
jne
and
adc
hlt
(bad)
mov
mov
or
test
repnz
add
shr
arpl
mov
bound
repnz
xor
add
mov
mov
test
adc
jmp
adc
inc
adc
and
add
inc
push
adc
fnstenv
xchg
jl
scas
jnp
lahf
imul
cs
xchg
fadd
mov
retf
fistp
in
(bad)
pushf
not
fcmovnb
lds
cmp
xchg
sub
add
pcmpeqb
out
cmp
mov
push
shl
push
ins
mov
sbb
fcomi
xor
adc
stos
shr
int
ins
fwait
xor
push
cld
mov
push
sub
std
int
fnstcw
stos
jmp
out
test
cmp
test
adc
ss
scas
mov
repnz
pop
repz
in
mov
scas
ss
popf
clc
ret
out
int
stc
xor
or
inc
dec
rol
cwde
xchg
ds
cs
iret
data16
(bad)
hlt
js
(bad)
sbb
push
iret
sti
outs
fld
mov
lahf
mov
(bad)
fdiv
mov
movs
push
cmc
push
movs
push
addr16
ins
and
out
shl
dec
push
pushf
and
jge
pop
sahf
or
scas
or
pop
cmp
xchg
jns
ja
mov
in
imul
adc
sysret
(bad)
lock
movs
xlat
adc
out
(bad)
out
mov
arpl
jge
dec
ror
mov
xchg
jmp
mov
stos
xchg
inc
repz
xor
add
sbb
add
sahf
jae
mov
ror
pop
sub
(bad)
(bad)
push
fisubr
icebp
add
daa
pop
mov
add
cwde
paddq
out
shr
das
or
push
and
call
push
call
mov
inc
cmps
xchg
lahf
inc
push
xor
stos
scas
adc
add
shl
dec
lea
pushf
leave
stc
sbb
mov
outs
mov
add
ins
lds
sbb
ret
inc
xor
or
inc
xchg
pop
outs
jmp
push
xchg
push
lahf
add
pop
ins
adc
xchg
mov
jecxz
push
push
xor
or
push
adc
outs
cmp
movs
inc
rol
pusha
fist
in
xchg
push
movs
push
inc
test
mov
ins
arpl
push
sub
jle
dec
jmp
es
fadd
push
pop
push
jmp
das
jle
(bad)
mov
jmp
or
add
mov
adc
xlat
fcmovne
add
inc
push
sub
pop
(bad)
pop
and
push
cld
nop
add
js
sahf
(bad)
iret
popf
call
push
lock
ds
out
js
lahf
push
adc
fidiv
fcomp
add
sub
dec
aas
ret
push
loope
out
cwde
jle
mov
mov
dec
test
jns
sysret
outs
fcomp
lods
dec
mov
movhps
das
out
faddp
push
mov
and
aaa
push
lods
test
mov
adc
mov
(bad)
mov
push
mov
mov
iret
pop
ret
stc
mov
or
mov
mov
mov
add
add
or
or
loope
repnz
popf
add
xor
movlps
adc
and
into
cmc
xchg
push
xor
pusha
fidivr
push
push
adc
scas
jecxz
adc
ds
inc
outs
or
sbb
aam
mov
dec
arpl
push
and
jmp
aam
cli
push
outs
pop
(bad)
out
fisubr
retf
mov
lods
push
ja
inc
inc
dec
mov
pop
inc
iret
scas
inc
bound
or
js
push
inc
aaa
sbb
xor
and
lea
push
jae
jne
je
ins
imul
cmps
loopne
or
or
dec
cmp
mov
mov
dec
cmps
adc
arpl
inc
dec
xor
push
fisubr
(bad)
fs
push
das
loop
fdivr
adc
xchg
pop
ss
aas
add
cmp
mov
and
inc
repnz
xchg
cmp
movlps
mov
fmul
adc
jle
push
mov
bound
inc
daa
pop
out
push
xor
cdq
inc
stos
sub
push
fisttp
mov
add
inc
getsec
add
mov
sbb
cmovg
add
inc
and
dec
pop
divps
push
enter
les
dec
das
test
fst
push
ins
push
jo
push
ins
shl
int
ds
dec
jne
mov
sbb
icebp
loope
mov
cmovl
fisub
mov
dec
and
neg
push
cmp
adc
push
push
xchg
or
xlat
jbe
xchg
jno
sbb
mov
fild
iret
sbb
push
push
out
popf
inc
dec
push
or
mov
outs
xchg
or
or
inc
out
mulps
and
repz
push
jno
jecxz
sub
imul
das
movs
inc
adc
lahf
xor
lea
loope
popa
test
push
add
lea
sub
jnp
push
imul
mov
call
sbb
sub
mov
inc
push
popa
lea
add
push
jo
shl
loop
arpl
xchg
or
out
xlat
jmp
cmp
fisttp
arpl
adc
arpl
aad
loope
bound
mov
sub
std
jbe
adc
sbb
add
push
inc
lahf
push
jl
ins
adc
hlt
xor
pop
aas
movq
test
push
sbb
cmps
retf
js
mov
and
out
jno
ret
aas
inc
js
aam
pmulhuw
lock
and
pop
adc
test
pop
jnp
push
push
push
mov
dec
xchg
mov
pop
das
xlat
aaa
sbb
addr16
scas
inc
jge
out
jnp
fs
push
push
add
lods
jmp
outs
jns
les
push
jb
adc
fst
inc
mov
cmps
repnz
gs
jmp
and
cmp
push
ins
mov
jmp
test
push
xchg
jg
push
sbb
jle
inc
arpl
and
fidiv
push
scas
es
cmp
or
jl
(bad)
push
es
push
mov
inc
cs
xchg
pop
or
inc
inc
cmp
ror
lea
mov
loope
jns
nop
xchg
scas
mov
in
add
xchg
or
test
pop
or
push
add
inc
or
xor
movups
mov
scas
and
xchg
jne
cmps
call
test
lahf
setg
add
lahf
(bad)
ror
and
lea
xor
mov
push
push
nop
pop
xstore-rng
cmps
add
cdq
dec
setnp
mov
or
enter
sub
mov
setnp
rsm
in
movs
out
cmp
push
sbb
cmp
xchg
stos
jle
and
push
mov
adc
push
xor
js
fwait
mov
test
adc
jg
pop
fsub
mov
inc
fist
and
jno
jnp
sub
jecxz
push
push
push
cmp
cmp
out
adc
fist
jl
sahf
fist
adc
jmp
push
sbb
xchg
out
xor
ds
sub
sbb
adc
cmp
aam
scas
int
mov
iret
test
(bad)
and
add
(bad)
cdq
xchg
call
mov
xchg
ret
test
cmp
pop
push
lods
cmpxchg
pop
add
cmpxchg
inc
sar
mov
push
mov
dec
pop
mov
xchg
jbe
xchg
cmps
ss
fs
data16
cmp
mov
mov
mov
mov
or
out
fadd
inc
outs
push
add
add
jl
sub
pop
repz
inc
out
movzx
aad
cmp
jno
mov
pusha
jmp
test
pop
push
outs
mov
imul
leave
aaa
mov
dec
scas
btr
(bad)
ud1
mov
out
adc
push
and
(bad)
into
push
push
rcl
cmp
adc
pop
idiv
enter
int
mov
nop
lfs
retf
stc
outs
leave
mov
je
out
cmp
ins
ret
ret
and
mov
pushf
push
xor
dec
xor
pop
pop
les
push
mov
pop
push
cmp
push
add
jns
pop
daa
mov
cmp
add
xor
fwait
cwde
push
mov
and
fwait
movs
inc
add
shl
adc
dec
fisub
lock
stos
xchg
jg
ss
add
mov
mov
adc
sbb
scas
push
mov
test
ret
sbb
shr
push
inc
pusha
cmp
pop
iret
cmc
mov
rcr
add
mov
bound
lock
addr16
fsubr
jg
mov
paddq
mov
add
pop
mov
test
xlat
cs
int3
lods
loope
adc
bound
or
or
icebp
pusha
cs
scas
dec
push
popa
or
in
ss
xchg
in
test
mov
and
jge
into
cmc
fstp
out
inc
in
cmp
push
icebp
movs
jmp
mov
mov
push
addr16
js
repz
(bad)
out
pusha
sub
sti
pop
jmp
pop
or
sti
mov
ret
adc
cmp
inc
cmp
fbstp
push
loopne
mov
dec
test
jmp
jnp
addr16
push
push
out
mov
mov
mov
mov
adc
and
hlt
xor
jmp
jnp
dec
mov
mov
repz
mov
xlat
pavgw
inc
mov
int3
fdivp
jmp
cmc
xchg
out
(bad)
(bad)
(bad)
in
lock
xchg
out
mov
loop
ds
push
push
pusha
jnp
in
out
ss
fidivr
pop
in
je
cs
fsubp
(bad)
scas
das
enter
loope
mov
nop
jl
pmaxub
xchg
pushf
or
or
or
pop
cmpps
push
lahf
or
cmp
sahf
sbb
ins
shl
inc
(bad)
ins
ins
sbb
jns
push
push
dec
rcr
push
not
mov
push
clc
or
movups
ret
adc
leave
xor
outs
arpl
pslld
add
test
add
and
mov
daa
cmp
fcomp
outs
paddd
and
xchg
paddb
cmp
fwait
ud0
bswap
add
sti
push
paddw
leave
inc
and
paddb
adc
not
mov
adc
ja
imul
inc
xor
outs
xor
call
or
sub
or
jle
adc
dec
push
jo
sti
mov
shl
das
es
or
pop
add
cld
lods
pop
das
outs
and
add
and
imul
mov
das
test
mov
pop
dec
fcom
dec
jg
pop
mov
push
inc
ss
outs
inc
xor
jg
pop
fiadd
aad
and
inc
sti
and
jmp
inc
and
enter
adc
pushf
mov
cmp
sub
ss
aaa
sub
repnz
adc
cmp
lds
repnz
xchg
cmps
ficom
out
mov
mov
stc
push
inc
add
jnp
adc
rcr
and
mov
fcom
adc
pop
and
sbb
xor
mov
aad
scas
int3
fistp
and
comiss
rol
scas
sbb
js
add
adc
inc
ja
rcl
daa
fcmovnb
mov
aaa
sbb
bound
iret
dec
add
jp
jae
and
and
mov
js
and
aas
push
dec
dec
cwde
dec
and
cmp
cmps
retf
dec
push
inc
push
adc
adc
push
sbb
test
cmp
in
fistp
in
inc
pop
cmp
inc
loop
cmp
sbb
out
cmp
out
sbb
and
out
cs
aas
jbe
xor
cmp
lock
jg
aaa
and
mov
push
ficomp
fcmovne
push
dec
mov
aas
and
xchg
and
ja
push
aaa
push
clc
dec
or
or
push
jno
jg
pusha
mov
push
inc
in
popa
push
aaa
outs
retf
or
inc
lea
adc
(bad)
fcom
neg
or
pop
test
adc
pop
jb
adc
sbb
inc
push
push
adc
pop
pop
push
mov
push
sbb
inc
xchg
in
xor
dec
pop
in
imul
or
xchg
dec
pop
push
imul
lods
or
cmps
repz
das
dec
or
cmp
mov
outs
(bad)
fs
outs
outs
data16
adc
sbb
cmps
xchg
adc
add
push
pop
int
imul
add
push
call
test
inc
sbb
dec
imul
adc
adc
repz
push
adc
jnp
int
pop
mov
push
daa
dec
cs
nop
push
jmp
call
dec
ja
sbb
and
fbld
test
aas
shr
stos
add
mov
sbb
cmp
pushf
cmc
push
jno
mov
clc
aas
fcomp
pushf
fwait
push
mov
inc
xchg
ins
xchg
pusha
mov
(bad)
ins
and
ror
jne
adc
adc
mov
xchg
pushf
mov
sub
xor
mov
repnz
arpl
fs
dec
adc
mov
push
xlat
sub
and
adc
fimul
aaa
inc
jae
popf
sub
je
outs
mov
adc
loop
(bad)
mov
add
mov
mov
out
repnz
adc
add
mov
adc
add
mov
mov
or
mov
add
movsx
add
push
pushf
xchg
ss
scas
adc
nop
pop
jns
(bad)
adc
popa
adc
xchg
ret
xor
iret
inc
retf
fdivrp
xor
mov
push
scas
push
arpl
es
push
shl
cmp
xor
mov
xchg
mov
adc
fiadd
mov
mov
into
mov
mov
fcom
loopne
xchg
in
jb
scas
push
jmp
jl
(bad)
scas
cmp
loope
adc
clc
data16
repz
stos
aam
scas
adc
add
mov
(bad)
jnp
out
ret
adc
adc
sub
imul
xchg
aad
cmps
add
retf
call
push
sar
daa
ds
in
lahf
adc
mov
fist
shr
jb
lods
iret
in
and
and
aas
adc
push
out
push
sub
mov
xchg
lahf
adc
stc
mov
fdivp
pusha
out
stos
cmp
pop
lahf
cmps
(bad)
push
fimul
sti
repnz
adc
pop
add
add
repz
cmc
mov
jbe
stc
mov
inc
test
adc
ja
stc
add
(bad)
push
repnz
das
push
ins
fisubr
add
adc
sbb
push
ficom
push
sbb
(bad)
not
out
lods
xchg
(bad)
(bad)
loopne
std
adc
inc
(bad)
mov
pop
adc
mov
push
sbb
test
or
cmp
adc
imul
in
mov
mov
mov
inc
dec
adc
js
fs
sbb
nop
dec
mov
or
inc
(bad)
popa
add
mov
loope
rcr
adc
movs
outs
jno
inc
inc
mov
in
mov
push
or
sub
sub
in
dec
push
adc
cmp
jo
add
xchg
adc
add
adc
cmc
push
add
or
pop
out
test
sub
fwait
int
mov
mov
popa
loopne
pop
sbb
push
outs
cmp
ins
cmp
adc
inc
mov
or
jno
push
jne
ins
xor
push
add
add
jae
xchg
mov
sbb
add
pop
inc
mov
sub
pop
jg
mov
lods
fistp
sbb
or
inc
pop
pop
xchg
adc
jbe
xor
push
and
adc
adc
push
in
inc
xchg
or
imul
int3
add
xor
repnz
movups
mov
adc
nop
adc
add
inc
dec
(bad)
dec
inc
inc
mov
pop
mov
adc
sub
push
adc
xchg
adc
in
pop
stc
add
cmp
nop
nop
adc
inc
(bad)
jnp
inc
sub
rol
sbb
cmp
add
mov
cmp
push
jg
std
mov
das
unpckhps
cmps
add
push
dec
mov
call
xor
mov
scas
lahf
inc
lods
sbb
mov
dec
imul
gs
jne
je
inc
test
pop
outs
and
nop
fist
add
pop
xchg
clc
ds
cmp
adc
mov
rol
pop
xchg
out
adc
jmp
loope
out
sbb
(bad)
jns
in
adc
adc
call
push
inc
sahf
adc
push
sub
das
ja
adc
sub
ins
mov
jge
pop
jl
cmps
adc
push
xor
cmp
fistp
push
inc
stos
ret
ficom
xchg
mov
push
cmp
mov
mov
outs
dec
xchg
and
or
call
mov
test
aad
dec
popf
addr16
loope
jmp
idiv
bound
pop
sbb
ss
sahf
cmp
rcr
adc
mov
mov
xchg
adc
in
mov
retf
scas
adc
mov
adc
xchg
add
sbb
push
nop
xchg
or
adc
pushf
adc
inc
push
xchg
sub
pushf
adc
adc
pop
mov
mov
xor
in
ret
push
pop
push
(bad)
cmp
inc
dec
add
adc
dec
add
add
mov
dec
rol
cmp
push
repnz
add
add
xchg
adc
jl
and
scas
pop
dec
stos
femms
cli
dec
pop
xlat
and
in
sbb
push
cli
cs
ins
das
scas
push
add
mov
mov
div
popf
pop
push
(bad)
push
and
mov
fnstenv
push
sbb
xor
xor
and
inc
ret
das
add
or
ins
cs
idiv
push
inc
pop
scas
cmp
fldcw
dec
push
xchg
push
aaa
add
push
mov
push
aam
ucomiss
pop
pop
popa
push
cmp
mov
sahf
int
mov
pop
pop
push
or
jbe
ins
add
push
jle
dec
push
call
into
inc
sbb
ds
sub
sahf
in
jg
sub
add
outs
dec
imul
sar
enter
dec
sub
sahf
pop
cs
std
sbb
cmp
maskmovq
jnp
(bad)
push
push
ss
mov
call
fwait
sub
sub
xor
gs
popa
arpl
add
cwde
adc
daa
dec
outs
or
add
sub
mov
add
ss
sub
imul
fimul
(bad)
jo
adc
adc
les
nop
cmp
or
ret
nop
cmp
fst
mov
adc
rcl
adc
cmp
scas
mov
(bad)
jg
cmp
jns
pop
into
(bad)
and
adc
outs
dec
(bad)
cwde
outs
adc
and
mov
repnz
adc
mov
cs
adc
dec
add
inc
cs
es
sar
sahf
addr16
rcr
push
(bad)
ins
ret
lds
mov
add
mov
xlat
mov
push
mov
cmp
es
mov
or
ins
sbb
jne
mov
pop
lods
adc
ss
mov
xchg
outs
xchg
retf
loope
add
loop
adc
push
test
enter
lods
scas
pop
xchg
inc
sbb
jmp
jbe
or
jmp
push
xchg
je
or
adc
test
jnp
sbb
push
jmp
add
dec
inc
repnz
jl
aam
or
movs
pushf
js
pop
add
or
in
mov
add
mov
daa
pop
add
sbb
repnz
test
dec
pop
adc
mov
jmp
dec
dec
stos
inc
and
adc
aad
hlt
fistp
neg
ja
xor
clc
aam
adc
inc
in
mov
add
add
js
pop
xchg
dec
mov
add
xchg
cmp
repnz
add
cld
add
pop
daa
scas
lea
adc
xchg
push
imul
fistp
xor
adc
sti
aam
mov
(bad)
push
arpl
(bad)
xchg
dec
dec
sub
(bad)
shl
pop
pop
(bad)
jp
xor
xchg
push
mov
adc
mov
daa
pop
xor
inc
or
inc
sub
pop
adc
mov
lock
ss
cmp
pop
adc
(bad)
and
push
adc
mov
add
test
ret
js
sbb
jg
popa
or
add
fs
gs
inc
inc
push
adc
je
add
dec
pop
cmp
mov
push
sbb
jmp
imul
cmp
adc
inc
(bad)
adc
daa
add
inc
push
and
gs
adc
jb
adc
or
icebp
push
fs
pop
in
add
sbb
and
call
sub
xchg
sbb
pushf
test
mov
sbb
add
pop
inc
sbb
ret
ficomp
aas
loopne
or
mov
and
sbb
cs
cs
retf
imul
and
not
and
sbb
cmp
fmul
adc
mov
add
jg
movlps
bound
inc
call
clts
xchg
add
sub
adc
jbe
adc
clc
mov
add
scas
lock
iret
cs
js
add
xor
cs
ins
adc
out
mov
pop
xor
iret
and
push
pop
adc
enter
adc
adc
mov
cmp
add
aas
inc
inc
dec
lods
test
push
fild
nop
mov
jg
inc
cmp
pop
sbb
mov
das
inc
push
pop
iret
cmp
add
cmp
mov
outs
inc
sub
cmc
mov
js
xchg
mov
ds
xchg
cmp
es
mov
xchg
mov
and
mov
shr
pshufw
adc
outs
adc
adc
lods
jmp
ror
add
and
jmp
dec
das
add
adc
or
pop
add
push
mov
out
dec
or
mov
dec
jbe
add
inc
sti
add
or
lds
ss
push
ins
inc
jo
jg
adc
push
adc
and
inc
and
dec
jle
inc
and
adc
add
add
sub
inc
enter
pop
imul
aas
push
inc
push
nop
int
push
mov
pop
lods
inc
dec
lods
jle
jbe
mov
arpl
wrmsr
call
cmp
or
add
imul
xchg
pushf
nop
sar
xor
push
push
scas
and
and
aas
cmp
mov
jle
clc
(bad)
adc
mov
ja
jns
xchg
adc
jnp
push
jmp
mov
ja
or
enter
js
or
vmwrite
jns
test
jns
jle
ss
jg
inc
pop
jne
fadd
inc
or
jbe
das
sbb
add
push
cdq
in
pop
push
push
dec
sahf
inc
and
pop
pusha
xchg
addr16
sub
or
dec
pop
inc
das
inc
adc
pop
das
bound
das
test
imul
pop
das
jne
inc
nop
(bad)
pop
das
jmp
mov
adc
cmp
nop
dec
inc
push
push
stos
ins
mov
mov
pop
mov
add
mov
push
leave
jae
pop
adc
into
xchg
lahf
adc
dec
cmp
mov
or
ins
jle
add
xchg
pushf
dec
test
sub
cmp
adc
cmp
mov
cmp
add
shr
outs
push
jo
or
ret
push
outs
xchg
les
dec
aas
cs
dec
jge
test
test
imul
mov
bound
xchg
cmp
iret
adc
cmp
test
pop
das
or
pop
call
gs
out
jge
sbb
or
fldenv
loop
xchg
cmps
cs
push
push
out
(bad)
adc
push
das
xchg
push
add
fldenv
push
enter
push
fwait
jl
mov
repnz
movlps
nop
cmp
add
jo
ret
push
outs
loopne
sbb
nop
out
adc
xchg
(bad)
and
fcmovne
add
repnz
fbld
pop
mov
unpckhps
add
push
daa
adc
inc
fwait
ja
aad
outs
adc
push
sti
cmps
mov
repnz
popa
add
fcom
ins
fwait
fwait
and
pop
xchg
out
inc
cli
dec
scas
pop
mov
or
pop
dec
pop
xor
mov
jno
mov
scas
pusha
adc
xchg
push
push
or
cmp
scas
xchg
(bad)
(bad)
inc
test
inc
jg
cmp
cs
jecxz
bound
lods
inc
push
push
clc
loopne
test
nop
ins
sub
nop
pop
adc
call
mov
popa
mov
add
cwde
jbe
stos
xor
mov
dec
(bad)
adc
jne
rol
adc
mov
push
push
js
pop
jae
add
xchg
aas
inc
clc
add
adc
ja
push
inc
pop
add
adc
outs
and
sbb
jl
push
inc
sahf
pop
xor
cwde
shl
cmp
and
ret
gs
dec
sbb
int
fbstp
js
mov
out
ss
sub
leave
mov
mov
xchg
pop
test
dec
cmovnp
jecxz
pop
outs
jb
mov
sbb
sbb
test
je
inc
and
pop
mov
jo
iret
inc
(bad)
cli
(bad)
mul
fdiv
add
mov
dec
mov
or
or
scas
xor
(bad)
enter
das
inc
mov
push
push
test
pop
push
push
and
mov
pop
add
push
and
fisttp
lods
and
fimul
lods
push
fwait
sub
or
lahf
dec
fdiv
and
das
push
adc
(bad)
iret
pop
mov
ss
push
nop
mov
mov
add
push
fisubr
imul
imul
nop
dec
outs
scas
lock
push
or
or
cmp
sahf
jg
jecxz
push
fdivr
add
in
and
call
(bad)
sub
push
cmps
sahf
pop
jns
or
jecxz
adc
jle
enter
jo
adc
bound
in
xchg
add
jmp
push
pop
cs
pop
adc
pop
xchg
inc
sbb
add
aaa
jnp
add
mov
xchg
shl
sub
add
fstp
dec
inc
or
lahf
push
push
das
dec
sbb
jmp
inc
inc
cmp
cmps
xchg
push
pop
push
jp
cmp
xchg
stos
push
pop
outs
in
pop
std
push
jne
call
xor
mov
imul
fs
fcomp
mov
sbb
or
js
out
add
push
and
adc
adc
mov
add
inc
push
stos
in
(bad)
stos
adc
lods
jnp
out
loopne
or
es
push
icebp
call
ds
or
or
int
mov
add
inc
xchg
ds
and
fistp
inc
bound
loop
ins
ror
sbb
inc
pop
mov
ds
mov
add
cwde
inc
aaa
das
inc
xchg
and
pop
fs
push
add
or
dec
pusha
scas
push
and
(bad)
sub
jb
inc
sub
adc
or
pop
push
cmp
inc
pop
jb
push
rol
aad
in
add
ret
scas
pop
sbb
adc
stos
dec
mov
or
outs
in
add
inc
ins
lahf
and
enter
inc
sbb
js
add
mov
jns
ret
inc
fld
inc
outs
out
push
xor
push
mov
jg
sub
xchg
adc
nop
add
out
stos
add
pop
push
test
sbb
cs
add
adc
(bad)
adc
or
add
adc
pop
cmp
push
rcr
stos
add
jae
jno
push
mov
iret
dec
push
and
xor
inc
out
aaa
lock
pusha
mov
cmp
mov
cmp
js
bound
pop
js
inc
push
sub
adc
call
cs
fcomp
pusha
loop
push
adc
xlat
into
sub
outs
inc
adc
add
push
inc
pusha
loop
(bad)
dec
cmps
push
ror
adc
push
dec
js
adc
add
imul
sub
sti
aaa
pop
out
pop
das
jae
pop
pop
movs
mov
xor
push
xchg
into
mov
push
pop
dec
or
pop
mov
xchg
adc
adc
fisub
jle
fisub
in
fs
(bad)
mov
sbb
dec
jo
repz
pop
push
ror
pusha
iret
adc
stos
pop
ret
jg
daa
nop
pop
into
imul
add
adc
arpl
popa
imul
xchg
mov
push
jle
adc
(bad)
mov
sub
jns
fs
or
fcom
cmp
outs
cmp
jp
xchg
mov
in
push
pop
mov
dec
sub
push
jmp
js
adc
mov
add
dec
or
rol
(bad)
mov
movs
fwait
scas
dec
push
jbe
push
dec
xor
nop
mov
adc
lea
or
dec
jmp
xor
(bad)
push
push
push
inc
adc
fwait
push
xchg
dec
mov
push
jnp
ins
lds
inc
inc
sbb
dec
pusha
lds
inc
jp
push
jge
sub
cmp
sub
mov
or
cmp
add
add
mov
(bad)
xchg
(bad)
pusha
adc
invd
pushf
inc
push
out
mov
mov
fild
jl
add
cmp
repnz
add
add
mov
xor
jl
lock
add
(bad)
icebp
xchg
cmp
add
pop
enter
bnd
cmp
cdq
push
jbe
xor
aad
loopne
jle
ds
lahf
add
sahf
fmul
data16
lock
arpl
add
inc
adc
push
jns
(bad)
push
pop
xchg
dec
iret
mov
scas
and
adc
ss
icebp
or
je
cmp
fisubr
inc
push
(bad)
or
ds
loope
jb
cs
fs
dec
lahf
dec
popa
lock
push
push
jo
inc
add
jnp
fwait
fs
cmps
sbb
push
and
pop
ja
jg
test
neg
add
push
dec
jnp
aas
xor
cmps
inc
sbb
adc
add
jecxz
push
pop
dec
push
cmp
xor
aaa
sub
sub
push
and
push
mov
inc
repnz
or
mov
outs
and
xor
mov
cwde
pop
je
stc
lods
cs
add
cwde
outs
test
dec
cmp
mov
add
out
push
jno
sub
das
inc
inc
repnz
adc
enter
pop
daa
jne
cmp
adc
or
dec
imul
sbb
xchg
jae
aas
cmp
test
test
adc
enter
shl
lods
mov
les
ins
jp
call
pop
rcl
inc
jb
rcr
adc
jl
ret
scas
adc
aaa
adc
(bad)
pop
lods
push
xchg
jo
ins
(bad)
mov
test
adc
add
and
mov
ds
jecxz
cmp
scas
out
(bad)
das
add
mov
or
in
or
in
out
imul
jmp
mov
enter
fsubrp
call
jns
in
mov
mov
mov
xchg
sub
add
into
add
mov
mov
rol
xor
ret
mov
push
aad
push
add
and
cmps
push
adc
ror
inc
les
das
adc
pop
adc
jns
repnz
and
xlat
out
xchg
inc
enter
loop
jp
pop
jns
adc
xchg
adc
call
lahf
out
pop
pop
repnz
inc
dec
sub
dec
stos
ins
shr
in
lods
fiadd
add
inc
jae
pushf
xor
or
daa
aas
ins
jae
test
jb
and
scas
aam
mov
shl
pop
pop
out
hlt
bound
cmp
inc
mov
rol
jmp
adc
ficom
xchg
pop
inc
repnz
pop
fistp
jae
add
enter
pop
nop
clc
in
daa
fs
mov
jmp
push
push
fild
inc
pop
enter
outs
loope
loop
outs
out
mov
das
add
das
loopne
sbb
and
add
fidiv
jnp
in
fadd
add
cs
xor
add
xchg
pop
mov
in
lock
inc
mov
mov
lock
push
and
out
lods
out
xchg
or
jg
popa
psubw
in
mov
addr16
dec
fcom
adc
repnz
add
mov
xchg
cmp
adc
dec
adc
and
or
pop
and
outs
jne
jb
into
xchg
cmp
hlt
mov
jo
clc
fidivr
repnz
push
loopne
loopne
imul
or
push
dec
sti
xchg
dec
pop
sub
adc
push
aas
or
out
adc
in
adc
adc
or
mov
inc
push
fsub
retf
push
fucomi
adc
iret
mov
es
fnsave
int
mov
loop
rol
mov
push
jnp
jmp
mov
ins
mov
das
inc
jmp
fnstenv
add
(bad)
cli
imul
inc
repnz
adc
jbe
stc
jb
xchg
mov
push
adc
add
adc
add
out
cwde
pusha
xchg
pop
aas
(bad)
fldcw
pop
in
and
jns
cli
mov
pop
in
cld
test
sti
and
sbb
cmp
cmp
sti
sbb
lds
or
sbb
xor
es
cdq
or
adc
dec
test
push
fidivr
outs
das
push
and
add
adc
jns
sub
call
les
mov
das
stc
stc
dec
fwait
pop
repnz
aas
cli
pop
cli
add
dec
add
xor
idiv
mov
jmp
ret
xor
sti
sbb
ror
sub
adc
call
lods
or
clc
adc
add
or
cmp
out
ss
fisttp
jnp
repz
retf
or
mov
cmps
iret
push
retf
es
nop
jnp
into
push
jl
cmps
dec
movs
sbb
mov
xchg
imul
inc
fld
add
unpckhps
mov
inc
in
mov
inc
push
sub
jns
outs
adc
push
or
adc
add
(bad)
sub
ds
lahf
adc
in
pusha
or
mov
pusha
adc
out
ret
loopne
xor
jns
xchg
(bad)
adc
or
push
add
data16
loop
pop
rcl
dec
push
pop
xor
(bad)
push
cmp
push
bound
mov
pop
dec
dec
rcl
pop
ins
loope
daa
fs
add
push
dec
sub
pop
int
push
(bad)
pop
adc
mov
(bad)
push
cmp
scas
imul
fld
inc
add
cmps
ficomp
push
pop
pop
push
cwde
jp
mov
adc
mov
adc
nop
xchg
nop
push
adc
sub
inc
push
adc
mov
sbb
mov
sbb
mov
dec
push
inc
adc
fist
mov
mov
into
push
sub
inc
and
dec
out
ins
out
fisubr
inc
and
xor
unpcklps
and
jo
xchg
mov
lods
dec
sbb
dec
das
push
fs
add
pop
pop
adc
add
push
mov
adc
or
adc
dec
or
or
repnz
inc
test
das
dec
pop
add
sbb
dec
enter
add
js
dec
out
aas
inc
loopne
mov
push
dec
push
adc
in
aad
dec
push
xchg
add
les
pop
inc
push
shr
jg
dec
pop
aas
mov
xor
push
lods
pop
or
pop
packsswb
xor
fmul
shl
and
scas
adc
call
adc
inc
inc
test
daa
mov
inc
mov
(bad)
jg
or
ja
sbb
enter
outs
cwde
ins
jg
cmp
inc
sbb
ins
les
add
ds
retf
add
adc
out
dec
int3
and
jg
pop
adc
(bad)
addr16
jne
ins
outs
mov
jns
pop
pop
sub
lods
cmp
cmps
mov
mov
lods
dec
mov
and
add
out
add
push
adc
jle
(bad)
sub
or
bound
mov
outs
dec
(bad)
outs
fdiv
push
jnp
lahf
and
ret
and
adc
fidivr
pop
loopne
icebp
adc
add
add
xchg
int3
adc
icebp
adc
mov
aaa
mov
les
sbb
jbe
scas
xchg
mov
pop
adc
and
out
jp
jp
add
add
(bad)
je
jns
xor
or
fs
and
pop
sub
push
jb
in
pop
push
ds
push
add
pop
enter
call
sahf
push
xchg
mov
jge
ins
ss
int
add
mov
adc
adc
jg
mov
addr16
jge
sbb
imul
test
pop
xchg
imul
into
sbb
fdivr
scas
addr16
adc
lock
out
pop
lods
outs
mov
inc
add
iret
cmp
and
mov
jmp
adc
aaa
adc
test
popf
aad
cld
inc
enter
mov
inc
mov
rol
stc
ret
or
fsub
shl
fldcw
imul
(bad)
cmp
push
mov
mov
ins
mov
xchg
mov
int
push
mov
mov
iret
dec
inc
in
and
inc
sub
adc
pop
or
sub
clc
dec
or
sbb
add
pushf
aam
iret
(bad)
sbb
das
and
mov
stos
pop
(bad)
(bad)
les
or
and
out
les
or
and
push
popa
out
shl
test
xchg
xchg
inc
mov
iret
aas
push
cmps
es
add
mov
sbb
daa
out
and
mov
jo
in
mov
loope
adc
fnstcw
inc
and
adc
cmc
add
sbb
and
adc
in
loope
adc
je
cmp
ret
aas
adc
mov
out
pop
sub
and
or
or
in
add
push
add
adc
scas
push
xchg
test
adc
xor
cmp
cmp
fisub
and
out
and
(bad)
adc
mov
adc
hlt
cld
add
adc
jl
in
adc
inc
add
arpl
leave
adc
sahf
cmps
lds
icebp
mov
ins
and
mov
outs
rol
adc
mov
out
push
popf
adc
push
adc
adc
sahf
fidivr
and
add
outs
adc
bound
xchg
iret
pop
inc
test
adc
or
scas
fcmovnu
ins
fiadd
cld
stc
cmp
pop
inc
test
add
imul
popa
bound
dec
mov
mov
inc
ins
mov
cs
(bad)
stc
call
lea
jle
cld
add
cmp
or
adc
mov
scas
and
dec
test
data16
mov
dec
inc
pop
push
or
(bad)
inc
sub
pop
stc
add
rcr
lahf
jl
cmp
add
neg
bound
sbb
push
enter
or
mov
xchg
mov
inc
adc
test
fisttp
xor
push
aas
adc
add
or
xor
enter
(bad)
mov
(bad)
mov
mov
mov
ins
adc
add
or
mov
ret
adc
and
push
push
das
push
ins
add
inc
push
jmp
mov
jae
pusha
adc
fdivr
out
outs
xor
fimul
outs
gs
pop
pop
push
jns
adc
adc
jle
mov
jb
(bad)
scas
ror
and
jo
add
jecxz
into
xlat
mov
mov
mov
or
mov
adc
pop
sbb
cmps
xchg
out
and
push
pop
mov
ins
(bad)
ins
lods
inc
adc
lea
or
push
dec
es
adc
cmp
rep
outs
dec
add
fisttp
ss
imul
pop
add
jmp
cmp
nop
adc
sub
jb
push
or
dec
push
sub
or
push
sub
adc
mov
div
add
add
loopne
sub
or
pop
enter
int
add
enter
adc
sub
mov
add
xchg
scas
xchg
mov
add
jecxz
push
dec
jmp
push
xrstor
sub
test
sub
adc
pushf
arpl
or
sub
and
cmp
mov
push
dec
out
xor
push
or
jno
das
dec
add
ret
lahf
adc
xor
mov
stos
dec
dec
sub
lods
out
mov
push
aaa
push
data16
push
and
sbb
push
and
push
dec
fmulp
lahf
sub
xor
dec
push
mov
fld
cmp
push
out
adc
cmp
add
cmps
or
xchg
dec
lock
dec
push
adc
jp
sub
ffreep
cwde
rcl
dec
ret
jp
test
inc
dec
inc
push
sub
mov
daa
xchg
lods
push
lea
lahf
cld
mov
in
ins
adc
nop
faddp
xchg
or
test
push
sldt
aas
adc
mov
pop
jb
dec
cmovnp
das
adc
fwait
test
add
xchg
pop
adc
repnz
adc
adc
jp
leave
add
jl
adc
adc
push
popf
test
inc
inc
cdq
shr
fdivr
or
daa
out
gs
add
xchg
cmp
pusha
push
push
cld
iret
shl
xchg
pop
push
or
lahf
ret
mov
mov
and
sbb
inc
inc
sub
pop
mov
fist
push
push
jg
push
loopne
mov
cmp
push
outs
sbb
and
add
pop
sbb
jns
cdq
in
bound
add
inc
es
add
enter
inc
add
es
push
push
xchg
fs
fstp
cs
mov
pop
das
pop
mov
cmps
das
fucomip
das
push
dec
fistp
outs
cmp
cs
xor
push
ss
dec
jp
lods
push
scas
pusha
jo
adc
in
inc
xchg
aaa
mov
outs
fnsave
das
(bad)
push
(bad)
and
and
adc
cmp
test
adc
mov
mov
mov
(bad)
jnp
ins
fcom
repnz
fsubr
nop
sub
ins
cmp
pusha
jne
pop
push
push
fadd
jg
loope
push
sbb
cmc
add
ja
outs
dec
push
adc
and
dec
add
lahf
outs
push
inc
clc
adc
xchg
inc
pop
adc
dec
cli
test
mov
(bad)
rol
imul
or
cmp
data16
add
aaa
rcr
push
push
dec
cmp
mov
add
adc
aaa
aaa
(bad)
sub
mov
pop
fidiv
fld
push
es
or
pop
add
les
xor
pop
js
inc
jecxz
dec
bound
push
outs
and
ins
dec
fidiv
ja
and
scas
inc
or
cmp
in
xchg
outs
inc
mov
idiv
push
inc
inc
mov
pop
loop
mov
push
scas
movs
outs
dec
xchg
dec
push
das
cwde
jbe
mov
add
pop
aaa
lods
enter
div
push
lahf
jge
ror
push
in
js
sub
test
cmps
xlat
jo
lea
dec
pop
add
daa
ret
pusha
(bad)
sub
sbb
bound
pop
fwait
push
pop
add
mov
add
fcomi
pop
inc
mov
xchg
xchg
inc
fisub
inc
dec
xor
xlat
sub
xor
add
mov
inc
pop
ss
rcr
scas
cmps
mov
ret
push
xchg
ficom
xor
out
sbb
add
inc
add
adc
not
inc
push
das
mov
cli
sub
push
and
push
das
imul
test
inc
and
jp
jne
adc
sbb
mov
pop
push
cmc
jno
mov
sub
addr16
lock
mov
mov
jno
js
dec
dec
fiadd
add
mov
dec
ss
sbb
fdivr
rol
stos
js
ins
xchg
mov
push
jae
(bad)
sbb
sub
dec
pop
mul
test
adc
mov
push
sub
ret
mov
ret
pop
mov
daa
inc
jnp
ja
push
push
cs
cmps
pop
and
inc
pop
retf
shl
inc
or
inc
mov
cmp
loop
mov
outs
daa
pop
sub
xchg
emms
push
jae
inc
adc
push
add
dec
loopne
push
dec
imul
popf
ret
xlat
adc
and
mov
scas
pop
or
push
dec
outs
xchg
adc
cs
jmp
jp
push
add
sub
or
push
(bad)
ja
fiadd
repz
(bad)
das
xchg
ins
shl
outs
push
or
dec
inc
retf
pop
or
cmp
push
dec
xor
push
or
fucomi
mov
add
pop
test
ins
mov
ins
add
xor
mov
pop
mov
ret
ffreep
ja
xchg
retf
mov
inc
push
fisub
fistp
pusha
xor
sub
inc
jb
movhps
lods
rol
push
inc
scas
ja
scas
cs
fsubr
cmp
aaa
in
pop
inc
(bad)
das
adc
mov
inc
cdq
jo
mov
sbb
stos
xchg
or
es
jnp
scas
arpl
pop
mov
(bad)
stos
sbb
push
mov
mov
psrlw
ins
inc
inc
inc
mov
int3
sub
fidivr
inc
outs
jbe
push
sbb
mov
not
dec
and
fs
iret
aas
inc
iret
ins
pop
push
inc
push
push
push
sub
stos
test
cli
rol
sub
xlat
mov
sub
inc
push
push
xchg
pop
fidiv
leave
dec
dec
das
fwait
dec
or
push
dec
push
das
push
ins
ins
sbb
das
cmps
addr16
push
add
dec
and
mov
push
pop
lahf
xor
aas
punpckhbw
and
push
mov
jg
or
cs
or
sbb
sbb
inc
das
push
adc
add
adc
add
adc
xchg
and
mov
adc
leave
inc
adc
test
mov
test
pop
and
push
jb
test
mov
dec
cmp
jg
jle
mov
add
fcom
movs
sub
and
and
mov
and
arpl
jmp
pop
test
repnz
or
lods
pop
push
mov
push
sahf
lock
into
iret
inc
mov
add
lds
cwde
sub
adc
xchg
mov
jl
sub
add
sahf
xchg
das
mov
jge
sub
pop
mov
in
add
pop
and
inc
dec
in
in
call
add
adc
addr16
popf
(bad)
loop
push
jo
pop
out
push
jg
jb
push
cmp
popf
push
dec
adc
inc
fcomip
mov
dec
add
sahf
fldcw
mov
loopne
into
pop
inc
lahf
retf
and
adc
or
sub
mul
mov
adc
mov
push
adc
and
mov
das
add
sbb
test
das
movs
mov
inc
pop
sub
inc
movs
outs
not
xchg
movs
les
enter
sti
js
and
call
cmps
movs
add
jle
pop
inc
adc
add
push
push
leave
rcl
xchg
fist
mov
test
mov
loop
dec
pop
adc
push
or
add
dec
iret
adc
push
adc
inc
sub
iret
adc
jns
outs
js
pushf
adc
(bad)
fcomi
cmovno
adc
push
add
repnz
fnstsw
aas
and
stos
aas
add
pop
(bad)
seto
shl
retf
adc
mov
ficomp
adc
push
xchg
mov
(bad)
shl
(bad)
mov
mov
movs
mov
(bad)
and
aad
out
pop
jns
mov
adc
pop
xchg
aas
sbb
mov
js
dec
das
cmps
nop
add
and
or
das
aas
(bad)
sub
leave
inc
sar
inc
inc
das
add
jns
add
and
mov
adc
daa
jae
add
mov
pop
jg
cmp
rol
sub
pop
aas
add
enter
push
sbb
loopne
stos
fadd
scas
sub
pusha
pop
xor
movs
sbb
pop
push
ins
js
retf
push
pop
mov
sahf
cmps
push
repnz
das
faddp
mov
dec
das
inc
js
gs
adc
sbb
js
retf
and
push
sub
mov
cmps
scas
rcl
add
unpckhps
es
adc
faddp
and
mov
aas
adc
and
xchg
or
retf
cmp
sub
loopne
call
sub
sub
push
and
loope
push
add
xor
xchg
add
or
iret
push
aad
push
or
xor
add
(bad)
pop
sub
out
adc
inc
adc
sub
fist
xor
mov
pop
dec
movs
(bad)
sbb
aad
jmp
ins
fistp
inc
test
push
jmp
mov
add
or
mov
pop
ss
mov
ins
and
or
bound
and
shrd
mov
jo
and
adc
lock
sbb
loop
and
inc
test
data16
add
pop
adc
fisubr
pop
int3
scas
cmp
add
das
xlat
repz
and
js
cmp
arpl
push
ja
push
imul
push
push
add
sbb
rcl
test
push
jbe
addr16
ja
cmps
pop
mov
ja
push
sbb
js
sub
inc
cmp
out
fisttp
std
rcl
pop
dec
jns
xchg
inc
aam
push
fsubr
cmp
jl
dec
pop
and
in
lods
scas
sar
adc
addr16
mov
mov
movlhps
add
dec
and
hlt
jns
sbb
in
out
movs
adc
add
mov
and
addr16
pop
or
aaa
pop
push
mov
and
adc
add
or
inc
imul
rcr
mov
mov
xor
and
ja
push
lock
ss
jo
icebp
mov
icebp
jecxz
xchg
fsubr
lahf
and
jo
repnz
ja
or
cmp
pop
repz
inc
sbb
mov
cmp
sar
push
jns
aas
push
aas
(bad)
mov
add
mov
pop
daa
inc
cmps
jns
aas
adc
push
push
add
daa
dec
stos
outs
out
mov
sub
aas
ds
push
adc
jns
in
push
adc
cmc
inc
stos
in
adc
add
pop
mov
push
or
dec
sbb
nop
add
pop
or
rol
xchg
jne
adc
scas
aas
push
pusha
pop
jo
fsubr
movups
call
adc
sub
mov
or
popa
inc
(bad)
imul
and
sbb
inc
iret
js
(bad)
in
adc
ss
iret
push
sbb
inc
xchg
cmp
push
adc
push
inc
jmp
sbb
aas
dec
or
inc
push
pop
in
and
mov
das
dec
dec
sbb
pop
in
leave
xor
inc
mov
jns
inc
inc
dec
cs
xchg
adc
push
inc
pop
das
push
ds
sbb
mov
jle
or
xchg
xchg
shr
sbb
add
pushf
sub
or
mov
add
cmps
sbb
cmp
pop
enter
sbb
nop
dec
sbb
das
dec
dec
cmp
cmp
scas
aad
sbb
das
pop
cs
push
xor
cmc
pop
xchg
test
add
xchg
loopne
out
pusha
mov
pop
push
loope
adc
and
sub
push
stos
xchg
pop
add
push
mov
and
ds
or
add
test
and
cmp
push
(bad)
and
ds
add
xor
push
and
push
push
mov
xor
and
push
and
xor
mov
add
mov
add
cmp
movs
inc
out
test
outs
add
jecxz
popf
(bad)
and
add
push
xor
add
scas
outs
mov
pop
leave
add
sar
(bad)
retf
cvttps2pi
add
mov
add
push
push
xor
sub
ds
jl
add
sbb
movs
fsubr
and
mov
imul
cmp
inc
push
add
cmp
loope
push
push
cmp
in
addr16
lock
test
pop
pop
int
push
xor
das
mov
sub
aaa
das
sahf
push
sub
out
sahf
ds
inc
sub
repnz
jg
inc
aas
push
cmp
inc
enter
inc
mov
push
jl
mov
out
sbb
and
fnstcw
jg
inc
out
sbb
mov
inc
fld
add
push
sbb
dec
fiadd
or
push
inc
cli
push
dec
sahf
loopne
mov
push
dec
jmp
inc
inc
das
fwait
shr
cmp
push
shl
sub
jae
lods
mov
(bad)
add
or
mov
mov
jbe
dec
lahf
movs
jne
ret
sub
outs
ret
sahf
dec
stc
add
add
sbb
ror
dec
rcr
fcom
push
pop
push
mov
sub
imul
gs
pop
mov
pop
shl
ins
fs
das
arpl
dec
push
push
inc
inc
test
add
pop
in
aad
(bad)
inc
sub
push
(bad)
mul
stos
adc
mov
inc
outs
jb
js
je
inc
jecxz
mov
or
cmp
imul
imul
mov
jne
add
and
cmp
lock
in
inc
movq
sub
jno
mov
add
call
fisubr
jmp
inc
sbb
loopne
mov
jle
cmp
shr
inc
push
je
add
fsub
push
and
push
popf
jmp
fisttp
outs
sub
ins
push
push
jmp
sub
(bad)
mov
push
jne
pop
sbb
movs
push
add
xchg
test
shl
imul
cmp
or
mov
stos
outs
(bad)
out
jne
fstp
out
outs
jmp
jo
fisub
xor
jne
inc
enter
pop
push
imul
and
scas
ja
cmp
add
imul
jne
xchg
mov
jb
add
sub
xchg
pop
fs
(bad)
ret
jnp
ins
call
add
jecxz
push
push
outs
inc
arpl
shl
daa
and
or
loope
sahf
shr
aaa
adc
push
mov
mov
jo
push
xor
scas
push
lds
sbb
fbld
add
fist
das
pop
xchg
popa
in
jb
ret
fidivr
push
xor
mov
das
(bad)
lock
or
daa
outs
nop
das
jbe
and
cmp
mov
add
or
aas
xchg
jo
(bad)
aaa
jg
add
je
iret
fbstp
push
fild
jne
aad
mov
jne
pop
shl
pop
mov
pop
test
bound
fimul
sbb
pop
add
cmp
outs
(bad)
lahf
or
fs
scas
sbb
aaa
xchg
push
stos
add
jbe
xlat
or
jecxz
ds
retf
imul
add
mov
mov
outs
mov
popa
enter
cmps
outs
scas
jle
lock
sub
mov
adc
push
adc
push
adc
add
adc
jnp
shl
jae
add
mov
adc
rol
inc
cmp
xor
fs
inc
(bad)
ds
or
xor
in
xchg
and
adc
adc
mov
adc
mov
clc
sbb
xchg
and
sbb
sbb
enter
repnz
pop
xor
and
cs
mov
sub
adc
mov
lock
push
jo
outs
sub
sar
sub
sub
jb
mov
push
bound
inc
mov
mov
dec
xlat
pop
ja
rcr
add
push
out
pop
mov
inc
add
add
adc
ror
in
ins
xlat
push
add
lea
mov
(bad)
nop
mov
xchg
xchg
ja
and
mov
mov
sahf
sub
rcl
ins
jae
jb
gs
(bad)
fcom
ins
jne
inc
lock
or
xor
ds
loopne
outs
dec
add
ins
(bad)
jae
mov
dec
sahf
add
add
mov
jns
add
das
das
and
movs
cmp
push
cmovno
pop
lahf
mov
mov
daa
dec
mov
and
dec
arpl
dec
pop
inc
repz
mov
lods
jmp
mov
div
pop
or
(bad)
pusha
inc
inc
inc
xchg
imul
popa
inc
jo
jbe
pop
inc
mov
add
das
pop
pop
div
iret
jns
out
adc
(bad)
out
(bad)
fcmovnbe
push
outs
jnp
arpl
pop
push
xlat
mov
daa
push
fisttp
imul
ret
sub
pop
dec
(bad)
outs
fiadd
xchg
addr16
ds
mov
ins
fcomi
(bad)
mov
add
stc
imul
ins
cmp
dec
mov
adc
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outs
jbe
dec
arpl
push
shl
jne
push
shl
xchg
pop
inc
jo
mov
xchg
arpl
bound
out
ficomp
adc
into
cmp
xchg
xchg
adc
jae
addr16
popa
(bad)
jle
scas
fisub
mov
jae
fbstp
fs
sbb
dec
outs
outs
and
jae
mov
jbe
mov
aas
xor
push
dec
dec
inc
cmovle
aas
xchg
push
dec
pop
push
dec
dec
dec
inc
push
inc
push
pop
(bad)
div
push
dec
pop
dec
dec
dec
inc
push
inc
mov
adc
cmp
gs
sbb
bnd
cmp
rcl
in
mov
int
cmp
retf
mov
clc
add
add
or
(bad)
(bad)
(bad)
dec
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
(bad)
(bad)
jmp
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
push
add
nop
inc
loopne
mov
js
and
movs
pop
pop
sbb
and
mov
pusha
or
inc
xor
add
dec
dec
dec
add
jle
add
cmc
jg
pop
cs
sub
dec
jns
cmp
cmp
pop
or
add
clc
(bad)
arpl
lock
shr
mov
pop
sub
sub
add
xchg
adc
add
add
adc
add
add
add
add
xor
cmp
push
add
xor
(bad)
in
add
push
add
pusha
push
jg
add
js
pop
sub
add
and
jg
aam
ins
call
loopne
outs
sti
mov
pop
add
sub
rol
das
dec
mov
jno
icebp
pusha
inc
mov
clc
ret
movs
add
sbb
jno
mov
pop
mov
outs
imul
es
inc
call
dec
push
gs
xor
pusha
das
jae
fdivr
aaa
inc
je
lods
add
outs
cs
ja
mov
pusha
outs
jl
popf
sahf
mov
shr
je
pop
ins
jp
jae
popf
dec
xchg
movs
mov
add
pop
xor
push
pop
sbb
pop
cmp
shr
add
jmp
call
mov
inc
pop
mov
daa
ds
push
lods
xchg
mov
cld
cmps
imul
ins
bound
popf
xchg
jmp
mov
push
xchg
shl
xchg
imul
jl
mov
loop
fdivr
jns
cli
jae
cmp
repnz
(bad)
mov
cmp
fisub
mov
lds
stc
repnz
xchg
lds
cmp
loope
and
jl
jmp
mov
repz
in
pop
push
(bad)
out
cld
cdq
jns
retf
cmp
sahf
mov
mov
(bad)
aas
pop
ja
xchg
int3
xor
aas
inc
pop
adc
loope
or
(bad)
inc
jae
aas
mov
fwait
jmp
retf
loopne
dec
pushf
nop
jg
dec
popf
mov
mov
in
xor
pop
jne
inc
gs
mov
iret
imul
mov
clc
lods
jbe
mov
(bad)
push
inc
lahf
out
mov
xchg
aas
aad
pop
push
and
inc
(bad)
(bad)
mov
test
pop
bound
push
das
pop
pcmpgtw
fidivr
and
inc
idiv
inc
aas
mov
mov
add
loopne
mov
mov
jg
mov
loope
mov
mov
mov
jg
mov
jecxz
mov
mov
mov
jg
mov
jmp
jmp
mov
jg
mov
fidivr
cmp
leave
add
jg
or
and
or
inc
mov
sub
es
jg
leave
inc
xor
aas
(bad)
mov
jg
cmp
or
jg
inc
arpl
in
sbb
inc
jb
call
mov
aas
jg
(bad)
cmp
in
dec
mov
mov
jg
call
or
jg
test
and
push
jg
or
push
and
dec
jg
sbb
xchg
mov
mov
(bad)
inc
or
jg
pop
dec
imul
jg
ja
or
push
add
(bad)
sbb
adc
sub
add
std
outs
(bad)
sub
push
mov
jecxz
(bad)
ds
cli
ds
mov
xor
inc
jg
inc
push
pusha
sbb
nop
cmp
inc
scas
out
jae
add
mov
arpl
test
fstp
cmp
out
in
mov
rol
jno
inc
push
leave
(bad)
aas
or
in
adc
add
(bad)
jg
pop
and
cmp
inc
mov
adc
add
inc
dec
in
or
push
or
invd
comiss
inc
push
sub
xor
sub
inc
adc
jmp
add
cli
inc
xchg
cmp
sahf
mov
ds
or
mov
fbld
cmp
movs
outs
aas
sub
es
dec
aas
push
mov
fistp
jne
push
mov
jnp
cmp
xor
sub
adc
addr16
je
adc
(bad)
jmp
out
dec
mul
enter
inc
xchg
pop
cmps
call
pop
jg
call
jo
mov
shl
in
jecxz
mov
mov
cmp
pop
adc
add
add
jnp
lock
lds
call
dec
call
test
cmp
jb
push
adc
mov
outs
jmp
mov
pop
das
cmp
imul
call
aam
ret
cmps
inc
inc
outs
mov
mov
out
dec
xchg
test
jecxz
mov
outs
jp
repnz
cwde
sub
cmp
(bad)
(bad)
fnstsw
inc
imul
or
test
or
jg
dec
xor
cmp
add
cmps
test
mov
mov
jne
cmp
add
outs
(bad)
inc
dec
clc
rcr
fisttp
mov
cmp
jge
int3
mov
mov
aaa
mov
jno
pop
mov
shl
xor
cmps
ins
dec
sub
aaa
inc
dec
cmps
fiadd
mov
mul
or
add
adc
pusha
in
arpl
sub
dec
jns
mov
cmp
cmp
mov
xchg
fwait
(bad)
fbstp
nop
jbe
daa
sub
aad
mov
int3
and
jg
popf
jbe
stc
pop
out
shl
popf
push
sub
sbb
outs
(bad)
cmp
daa
mov
inc
outs
or
loope
nop
cmp
push
dec
fld
stos
xor
shl
xchg
cmp
and
mov
cdq
test
(bad)
mov
cmp
jae
xchg
and
push
add
fisttp
push
jno
mov
lahf
jle
(bad)
fistp
xchg
xchg
sbb
mov
stos
or
std
idiv
sub
pop
in
call
cmps
cmps
pop
mov
popa
sahf
enter
jmp
push
(bad)
mov
inc
lods
inc
mov
jae
mov
loope
gs
dec
iret
(bad)
(bad)
jmp
ss
addr16
mov
adc
dec
cdq
mov
enter
xchg
cmp
(bad)
(bad)
in
xchg
inc
fldcw
jmp
(bad)
inc
pop
fistp
push
pop
xor
cmp
ja
cdq
scas
icebp
cmp
push
pushf
mov
int
aaa
(bad)
in
mov
aaa
or
stos
(bad)
stc
and
call
lahf
cmp
into
xchg
sub
scas
jno
nop
stos
(bad)
mov
xchg
les
ins
fwait
cmp
in
jnp
or
add
fistp
cwde
mov
pop
and
push
mov
jae
test
cmp
std
jns
imul
fwait
sahf
xchg
retf
xchg
ja
mov
call
data16
outs
(bad)
(bad)
(bad)
cmp
adc
or
scas
add
mov
bnd
int
pop
or
dec
call
push
ror
int3
mov
scas
xor
push
test
fwait
neg
das
test
pop
or
(bad)
loopne
dec
rcl
icebp
addr16
mov
cld
jmp
xchg
ins
sub
addr16
nop
out
fsub
mov
cdq
fbstp
or
sti
lods
call
dec
sub
pop
cmp
movs
sti
fcomp
pop
push
jmp
jg
xchg
rcl
pop
mov
test
jae
cwde
cmp
fwait
jnp
dec
jge
fist
cmp
mov
aas
mov
cs
jg
call
xchg
cmp
nop
movs
mov
and
fwait
inc
mov
pop
popa
out
sbb
out
test
xor
outs
pop
jbe
(bad)
(bad)
call
add
mov
fcom
jg
xlat
out
cmp
nop
cld
xlat
mov
aaa
add
outs
xor
retf
add
pop
cwde
outs
arpl
test
mov
call
or
ss
or
sbb
xchg
std
aas
and
inc
mov
mov
ss
push
pop
stos
jno
in
repnz
mov
and
inc
add
cmp
or
pop
outs
gs
popa
sub
pop
fadd
jns
bound
jns
push
xor
add
dec
mov
mov
jns
outs
je
arpl
sbb
add
fs
sbb
mov
jno
je
or
(bad)
std
xchg
push
(bad)
imul
outs
push
jmp
outs
push
pop
mov
pop
jne
in
fsubrp
mov
mov
push
pop
or
gs
xchg
les
xor
xor
nop
sti
call
jnp
jb
xor
dec
popa
jae
inc
add
pusha
xor
or
mov
ss
pop
lea
cmovns
movs
fild
test
sub
dec
add
push
in
push
test
adc
in
add
and
sbb
add
rol
xor
loopne
add
add
stos
sub
mov
inc
adc
sbb
push
mov
add
pop
adc
out
mov
add
add
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
(bad)
(bad)
(bad)
jmp
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
(bad)
inc
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
(bad)
(bad)
jmp
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
inc
test
mov
or
call
push
or
xor
push
xchg
js
jne
dec
fs
sbb
or
data16
xor
les
popa
outs
push
outs
jne
push
inc
outs
test
popa
dec
arpl
aaa
and
ins
push
ror
outs
jbe
and
inc
outs
sahf
mov
pop
jb
arpl
aas
aam
push
rcl
and
push
gs
jp
ins
into
dec
jo
mov
in
ss
mov
xlat
push
ins
daa
addr16
mov
in
repnz
arpl
or
jae
cdq
inc
sub
jne
pop
add
es
imul
dec
xchg
or
jbe
mov
scas
pusha
gs
ins
mov
jne
retf
add
sub
jns
lahf
and
pushf
pop
sbb
cdq
(bad)
enter
lods
movs
sub
or
inc
add
xchg
outs
pop
test
mov
jne
jae
and
lds
push
sbb
and
cld
test
mov
pusha
cmps
daa
arpl
loopne
xor
push
jo
xchg
cmps
bound
imul
xor
sub
daa
push
int3
inc
bound
inc
clc
and
outs
je
mov
movs
das
adc
gs
test
dec
outs
imul
sbb
jns
mov
sbb
jae
daa
mov
mov
jge
lahf
imul
and
push
jmp
pop
ins
jne
call
daa
cmp
je
jae
data16
scas
mov
mov
fldcw
(bad)
pop
pop
call
mov
pop
sub
push
pop
add
dec
jb
(bad)
jns
mov
pop
push
and
(bad)
push
cmp
imul
fidivr
gs
pop
(bad)
jbe
push
hlt
aaa
or
sub
mov
je
or
test
(bad)
pop
ret
push
add
daa
jae
popa
es
push
lock
daa
ins
jo
repnz
lods
rcl
(bad)
sbb
ror
push
call
jmp
into
sub
mov
adc
std
daa
and
jg
sub
mov
push
imul
xchg
js
pop
pop
inc
push
dec
dec
inc
test
inc
cmovo
dec
cmp
movs
repnz
dec
das
xor
dec
push
and
into
sub
in
arpl
aas
arpl
push
push
aam
arpl
sub
into
mov
dec
cwde
rcl
mov
dec
test
dec
pop
pop
inc
imul
movs
push
sub
scas
test
add
(bad)
hlt
inc
push
inc
in
sub
inc
ror
cmps
rcl
inc
inc
inc
pushf
inc
mov
fidiv
xchg
dec
js
out
dec
pop
pop
dec
push
imul
dec
dec
dec
push
(bad)
dec
iret
xor
pop
mov
clc
ins
push
psubsb
dec
movs
test
mov
dec
push
imul
cmps
rcl
pop
inc
dec
dec
movs
test
sub
push
imul
pusha
cmps
rcl
pop
loopne
int3
movs
test
pop
test
pop
dec
push
jns
push
push
inc
nop
scas
pusha
fiadd
xchg
dec
ror
mov
jl
scas
retf
out
je
inc
lahf
ins
outs
dec
das
fs
pop
inc
ja
mov
pop
dec
cmove
cmp
cmp
sub
sub
dec
movaps
imul
jbe
(bad)
push
push
dec
push
pop
cld
dec
setl
in
pop
inc
inc
pop
loopne
dec
push
rol
outs
inc
mov
dec
fisttp
clc
mov
or
sbb
adc
bound
jg
dec
sub
adc
sbb
or
dec
lahf
dec
and
push
and
scas
xor
dec
outs
adc
aaa
dec
push
sub
and
jb
mov
arpl
fwait
mov
push
jo
ds
bound
daa
or
and
call
jo
mov
xchg
es
and
cmp
sti
sbb
and
mov
jo
or
and
aad
ret
inc
jmp
inc
jbe
(bad)
push
push
add
jns
and
push
cwde
pusha
push
sar
gs
add
push
inc
inc
xor
add
jbe
popa
dec
cmp
push
mov
mov
push
xchg
lods
adc
xchg
jnp
retf
or
cmps
pop
popa
push
push
jae
or
aaa
and
call
adc
arpl
jae
sub
jmp
mov
data16
arpl
inc
mov
mov
push
retf
inc
dec
push
jne
repnz
xchg
popa
dec
cmp
ss
ret
push
cmp
sub
mov
loopne
inc
pusha
push
inc
inc
mov
sbb
jo
fist
test
jg
xchg
ret
jae
inc
in
and
das
test
mov
ret
push
mov
pusha
jns
pusha
push
or
inc
aad
pop
das
je
cmc
fcomp
outs
xchg
daa
xchg
sahf
neg
mov
popw
pop
cmp
jnp
jg
cmp
add
ds
sub
fst
cmp
push
addr16
jle
sub
xlat
add
xchg
jle
sub
sub
jo
cmp
push
mov
push
dec
and
cmp
and
add
xchg
pop
pop
jne
cmp
sbb
push
jb
imul
jo
ss
gs
pop
rcr
cmc
addr16
sbb
imul
je
imul
jo
push
out
mov
jmp
ins
sbb
adc
repz
fldcw
push
in
shr
fnstcw
enter
clc
test
mov
pop
cmp
nop
out
sahf
out
mov
sahf
out
sahf
jo
push
sahf
out
pop
push
push
dec
dec
out
sahf
out
inc
cmp
xor
out
sahf
xor
and
sbb
sahf
out
sbb
or
repz
out
add
call
iret
aam
mov
jl
sahf
addr16
sbb
cld
fdivr
js
xor
rep
sahf
out
sbb
imul
iret
rol
movs
test
out
cmp
push
ja
out
push
and
jg
hlt
push
inc
jecxz
sahf
fadd
movs
mov
add
adc
xchg
inc
add
add
xor
sub
cmp
jge
ficom
inc
pop
test
push
outs
and
xor
fwait
xor
add
or
pop
js
jo
add
adc
or
fistp
(bad)
aas
ss
xor
push
dec
xchg
outs
in
inc
dec
cmovns
add
stc
jmp
test
mov
mov
dec
dec
popf
push
jnp
jg
jo
fist
xor
inc
mov
test
sub
push
inc
adc
adc
(bad)
pop
in
call
test
jg
repz
push
ins
std
rcl
xchg
mov
(bad)
dec
fs
leave
mov
fmul
mov
scas
div
loop
shl
pop
adc
push
lea
jmp
inc
dec
in
sar
pop
or
enter
add
jg
sub
sbb
call
jge
push
mov
int
lods
dec
ds
pop
in
sti
mov
push
jmp
shr
enter
mov
sbb
test
inc
sub
push
mov
and
shl
mov
cmp
mov
mov
repnz
retf
rcr
push
mov
fild
mov
pop
nop
or
mov
or
or
popa
push
or
scas
int
mov
shl
leave
loop
stc
push
mov
xor
test
jg
add
xor
es
fld
mov
mov
(bad)
jg
pop
mov
mov
(bad)
pop
pushf
mov
nop
add
mov
aas
mov
add
loopne
sbb
aaa
push
inc
add
std
fwait
(bad)
sub
aad
pop
dec
sbb
scas
sub
adc
loopne
mov
mov
mov
pop
int3
push
stc
jmp
pop
sbb
cmp
sub
adc
dec
mov
in
push
iret
(bad)
bound
or
dec
add
and
fwait
test
jge
test
pop
jb
xchg
popf
mov
pop
xchg
jno
xchg
or
pop
mov
stc
rcr
xchg
cwde
pop
add
pop
jb
fwait
xchg
dec
enter
jg
inc
cs
pop
or
and
cs
mov
in
cs
daa
fs
adc
sbb
pop
push
in
cs
mov
jp
xchg
inc
cs
test
inc
cs
imul
int3
jl
dec
cmp
mov
pop
mov
inc
cs
test
in
cs
stos
addr16
cs
inc
cs
pop
pop
in
cs
mov
mov
in
stos
mov
inc
cs
scas
scas
cs
cs
mov
cs
mov
in
cs
mov
cs
cld
inc
add
(bad)
jg
add
ds
das
adc
mov
and
pop
das
mov
rcl
xchg
(bad)
(bad)
jg
call
loopne
dec
cmp
rcl
cmp
(bad)
push
mov
add
into
pop
adc
test
sbb
xchg
popf
mov
hlt
daa
or
out
cmp
sub
dec
repnz
push
es
push
mov
add
cmp
shr
data16
add
js
ins
and
push
inc
push
and
retf
sti
xchg
or
add
mov
mov
push
aas
xor
inc
ss
pop
push
sub
xor
xchg
imul
push
and
fistp
jae
inc
pop
xor
inc
adc
and
mov
mov
adc
int
jmp
mov
sar
push
jns
jmp
in
mov
lods
dec
pushf
out
ror
xor
sbb
jb
sub
sub
push
pushf
pushf
bound
jb
cmps
add
adc
or
fisttp
and
or
push
push
push
cmp
or
adc
xor
cld
outs
jne
push
pop
and
ret
rcr
outs
xor
and
jae
jno
xor
test
xchg
scas
jae
test
outs
mov
jle
jns
jne
cmp
movs
adc
and
and
fisubr
sbb
lock
popa
jbe
jp
add
rcl
ds
mov
inc
or
outs
popa
arpl
imul
sbb
rcl
pop
je
ins
sub
adc
inc
push
imul
test
test
pop
imul
imul
and
and
fld
cmp
sbb
imul
sbb
push
dec
data16
xchg
std
(bad)
push
pop
sti
outs
popa
jo
fiadd
popa
cmp
dec
nop
xchg
jne
sbb
xor
jge
add
jae
mov
pop
retf
adc
or
and
inc
je
add
push
cmp
or
pop
ins
xor
idiv
dec
lods
xor
jae
sbb
mov
inc
adc
popa
div
push
xchg
or
imul
outs
imul
inc
fisub
test
mov
(bad)
mov
inc
and
sbb
and
popf
add
test
pusha
cmp
push
and
pusha
xchg
jp
out
fmul
in
and
add
mov
or
cmp
adc
out
lods
sbb
xor
pop
aaa
mov
add
popa
mov
inc
je
fnsave
arpl
push
push
inc
sub
sub
rdtsc
ss
das
push
dec
dec
inc
dec
inc
adc
inc
sbb
ds
mov
cmp
sub
mov
call
dec
add
mul
mov
je
adc
fild
pop
or
bound
jae
dec
xlat
cmp
(bad)
dec
dec
push
sub
inc
adc
push
into
mov
jg
sbb
daa
xchg
rol
jmp
fistp
iret
call
adc
mov
test
outs
adc
ins
movs
lea
inc
push
or
aas
mov
rol
test
dec
rcl
pop
aam
push
add
jecxz
mov
jnp
xcrypt-cbc
cmps
xchg
jb
pop
inc
push
mov
xor
aas
push
lock
mov
push
push
enter
outs
or
add
dec
dec
push
adc
repz
xor
pop
rol
xor
push
outs
inc
jl
xor
shr
sbb
lods
mov
test
jne
and
jmp
mov
inc
sbb
push
adc
call
lods
xchg
mov
push
sar
xchg
add
(bad)
(bad)
or
add
sbb
addr16
ret
adc
mov
lock
loope
pop
out
icebp
out
inc
sbb
cli
push
popa
pusha
(bad)
mov
popa
cmp
sbb
xor
out
cs
pop
mov
pop
add
fwait
mov
adc
aaa
push
daa
sub
call
movs
inc
js
les
pop
mov
push
outs
sub
push
sub
or
cmps
shl
cwde
mov
add
sahf
(bad)
mov
stos
add
ins
fidiv
fs
add
xchg
outs
add
inc
sub
dec
sbb
inc
mov
ret
in
mov
dec
jae
outs
jae
cs
inc
adc
loopne
pop
in
js
xchg
inc
push
(bad)
cmps
or
je
or
icebp
mov
jb
or
dec
test
adc
lds
push
jo
push
dec
jnp
add
push
jle
shl
dec
cmp
pop
dec
fcomp
(bad)
(bad)
fistp
sbb
sti
sbb
sub
sahf
lahf
mov
scas
xor
adc
push
or
ret
jmp
stos
sub
aad
mov
inc
inc
push
lds
ror
les
jecxz
cmp
push
cmp
jmp
mov
outs
mov
and
mov
out
push
ret
mov
push
pop
sbb
rcr
mov
sub
push
jnp
ins
sti
out
xor
lds
inc
(bad)
arpl
aaa
shl
lods
push
dec
outs
jmp
add
shl
xchg
ins
pop
push
imul
aas
xchg
jne
lds
fist
adc
out
dec
not
(bad)
jo
ret
dec
dec
add
sub
in
add
push
pop
add
dec
sbb
mov
push
xlat
and
imul
sbb
inc
outs
ret
add
adc
imul
daa
and
mov
outs
js
clc
xor
fs
push
add
add
sbb
mov
and
inc
jge
adc
dec
dec
fninit
in
cmp
add
or
fisubr
jg
xlat
test
sahf
cmp
mov
push
lahf
pop
mov
inc
pop
xor
aaa
imul
cmp
cwde
rcl
sbb
mov
and
mov
push
inc
mov
fidiv
dec
in
or
mov
jp
popa
test
dec
add
and
lahf
add
push
jmp
cwde
mov
fnsave
mov
xchg
xor
lods
loopne
loopne
std
push
mov
push
or
xor
push
mov
or
icebp
xchg
scas
outs
or
push
dec
out
arpl
pop
leave
popa
cs
xor
clc
icebp
(bad)
aaa
outs
retf
jmp
outs
sub
mov
xchg
cmps
bound
add
and
jbe
repz
mov
xor
dec
jo
dec
adc
lahf
inc
arpl
mov
add
push
xchg
mov
cmp
das
pop
ja
cli
or
push
push
ins
dec
lahf
(bad)
inc
adc
mov
jge
jl
xchg
jns
gs
jbe
gs
xor
pop
pop
in
mov
push
ja
jae
je
cs
jecxz
imul
pop
pop
cmps
pop
inc
pop
lds
out
xor
push
pop
data16
mov
cmp
jmp
pop
jp
mov
dec
loop
push
jge
dec
scas
xor
imul
retf
add
mov
jb
xchg
mov
ret
(bad)
das
add
stos
and
neg
js
push
sub
dec
mov
mov
das
je
outs
push
pusha
or
and
das
mov
and
aaa
loopne
mul
xor
xor
mov
and
xor
inc
shl
sbb
xor
push
xlat
inc
js
cmp
sbb
aad
jecxz
cmp
inc
rcl
inc
sbb
mov
sbb
cs
fbld
jno
mov
adc
inc
xor
out
or
mov
inc
mov
xor
mov
ret
das
out
jecxz
push
push
inc
(bad)
outs
mov
outs
push
iret
das
out
xchg
push
mov
mov
aaa
mov
arpl
ins
push
fwait
pop
or
sub
dec
(bad)
jecxz
rcl
xor
fs
nop
imul
fnsave
and
inc
mov
shl
mov
push
jg
jb
mov
iret
push
outs
cmp
inc
cmp
xchg
or
adc
cmp
out
shl
imul
xchg
add
data16
sub
and
mov
lods
xor
mov
ins
mov
test
(bad)
lock
mov
adc
inc
xor
pop
fwait
popa
into
clc
shr
jae
pop
stos
pusha
add
pop
pop
add
(bad)
mov
(bad)
repz
pop
mov
aam
out
addr16
scas
loopne
out
sub
out
adc
iret
in
jne
and
cmp
(bad)
dec
push
cmp
pop
mov
fidivr
ja
cmp
pop
je
cmp
add
outs
(bad)
push
jbe
cmp
inc
mov
outs
dec
xlat
xchg
xchg
imul
ins
sti
imul
mov
scas
xchg
shl
movs
loopne
mov
or
jo
jno
fnsave
cmp
xchg
hlt
ja
cmp
xor
aaa
loop
sbb
jae
lahf
xchg
dec
sub
adc
add
loop
or
sbb
mov
inc
pop
xchg
adc
inc
push
in
cmp
stos
cmp
(bad)
xchg
cmp
shl
and
and
das
rcr
mov
xchg
arpl
dec
cmp
arpl
hlt
int3
dec
and
and
and
cmps
xor
arpl
inc
call
adc
movs
adc
ret
shl
cmp
lea
xor
add
cmp
popf
call
aaa
aaa
adc
pop
aad
push
jecxz
pop
imul
arpl
mov
cmp
cmp
xchg
mov
mov
or
or
ja
mov
push
popa
sbb
jmp
push
xlat
outs
xor
pop
aaa
push
mov
mov
outs
cmp
getsec
sub
push
fiadd
pop
or
add
aaa
pop
xor
xchg
lods
add
pop
push
mov
push
xchg
out
jbe
getsec
aaa
xor
inc
stos
nop
mov
sub
xchg
lods
mov
and
inc
test
(bad)
cmps
adc
stos
mov
(bad)
das
inc
sub
addr16
push
add
shr
dec
(bad)
ja
xor
mov
push
aaa
dec
das
mov
jmp
xchg
rol
xlat
aaa
push
cmp
mov
adc
xor
outs
sti
icebp
xor
pop
dec
jne
dec
xor
push
ss
and
or
das
stos
pop
mov
(bad)
add
push
fistp
mov
je
imul
jp
bound
data16
ins
and
ins
mov
add
adc
aas
imul
xor
fwait
inc
dec
dec
into
outs
outs
js
fld
and
cs
loop
adc
in
and
adc
sub
dec
adc
add
xchg
fs
xchg
pop
pop
sbb
(bad)
xchg
lahf
inc
aas
pop
js
daa
outs
sti
fs
add
sbb
xor
lock
loopne
out
pop
jg
or
sbb
loop
pop
div
sti
mov
cmp
das
pop
push
push
sysenter
jg
aas
pop
rol
or
xor
cmp
pop
stos
mov
jecxz
xlat
call
bound
scas
imul
xchg
daa
scas
jmp
fs
arpl
rcl
fld
xor
(bad)
fisttp
outs
and
jl
and
cmp
jbe
test
inc
mov
aad
jae
add
and
bound
and
push
sub
cmp
cmp
je
lock
mov
mov
sub
pop
and
sar
sbb
es
or
pop
stos
pusha
sbb
xchg
xchg
sub
outs
(bad)
dec
push
xchg
outs
dec
inc
xor
xor
ret
and
push
inc
mov
and
js
adc
add
push
jo
adc
mov
push
in
movs
push
add
ret
adc
jnp
movs
inc
pusha
scas
outs
cmp
or
lea
outs
add
inc
cmp
stos
mov
cmp
jp
pop
lods
ja
push
es
push
(bad)
inc
mov
mov
fs
add
sbb
xchg
inc
cmp
getsec
xor
out
movs
div
jge
adc
nop
(bad)
xor
inc
or
xor
loopne
or
arpl
div
push
jns
das
sti
dec
and
jnp
push
dec
inc
push
inc
mov
and
(bad)
mov
push
or
push
(bad)
shl
push
inc
fs
push
sbb
aaa
daa
pop
xor
aam
mov
lea
adc
je
push
and
jg
xor
imul
and
scas
cmp
pop
sub
push
push
aas
pop
push
loop
std
aam
ins
(bad)
mov
mov
loop
push
js
ds
mov
imul
das
or
cs
ror
fld
mov
int
sbb
pop
mov
inc
bound
push
adc
stos
mov
dec
std
xchg
jnp
inc
push
test
ja
ins
daa
jne
cs
mov
out
mov
hlt
je
mov
and
cmp
push
fsubr
daa
dec
sub
jbe
cli
shr
and
dec
push
inc
add
push
popa
xchg
lahf
cmps
cmps
or
xor
mov
(bad)
mov
repz
aas
xchg
std
sbb
cmp
sub
dec
cs
mov
push
pop
loop
gs
cmp
rcl
test
nop
sub
push
lods
addr16
(bad)
das
pop
xor
push
xchg
dec
cmps
or
test
addr16
sub
mov
sbb
and
lods
mov
addr16
or
dec
stos
add
and
sbb
jb
mov
jne
mov
imul
inc
daa
ds
cmp
loopne
jne
xchg
pop
daa
clc
shr
push
bound
and
sbb
scas
sahf
jo
sub
pop
neg
jmp
arpl
lock
(bad)
(bad)
aaa
pop
xor
inc
sbb
and
inc
add
fisttp
xchg
mov
daa
dec
daa
shr
sub
daa
inc
inc
fisttp
mov
pop
sub
adc
das
int3
sbb
sub
push
sbb
or
ret
cmp
lahf
jnp
scas
cmp
xor
xchg
xor
dec
jl
daa
push
cmp
inc
adc
push
or
(bad)
repnz
push
xlat
add
retf
sub
adc
ror
add
iret
fsubr
daa
lds
loop
ja
and
add
mov
xor
iret
fwait
mov
inc
sbb
push
mov
dec
movs
mov
(bad)
push
pop
mov
aas
out
mov
test
sbb
pop
add
je
adc
jae
je
push
ds
(bad)
sti
push
ins
bound
and
icebp
pop
xchg
in
in
verr
add
repnz
mov
add
mov
inc
add
add
repnz
mov
pop
cmp
add
jb
mov
sub
add
adc
inc
shl
and
shl
daa
arpl
push
aaa
ja
movs
imul
push
sub
mov
pop
pop
mov
popf
jecxz
ret
or
dec
push
cmps
and
(bad)
dec
test
and
arpl
push
(bad)
ds
std
inc
bound
imul
frstor
push
scas
sub
scas
das
outs
adc
rcl
jg
sbb
jae
adc
cmp
scas
push
jge
test
sub
shl
add
xchg
jo
movntq
popa
inc
lock
mov
sbb
mov
aaa
mov
iret
aaa
or
mov
cmp
fcom
div
test
lds
repz
cmps
xor
adc
stos
xor
push
dec
das
xchg
(bad)
xchg
ins
pop
clc
aam
daa
sbb
addr16
or
scas
shr
xor
out
mov
and
dec
jmp
cwde
add
sub
sub
dec
das
das
and
ret
inc
inc
push
pop
mov
and
lods
mov
xchg
ds
and
xor
arpl
pop
add
shr
xor
daa
outs
mov
imul
sti
or
and
enter
jg
movs
jo
addr16
pop
inc
adc
and
mov
jae
aad
inc
lahf
das
mov
mov
cmps
adc
ja
sbb
daa
mov
ja
dec
adc
sbb
xlat
stos
pop
fistp
xor
outs
lods
push
push
arpl
(bad)
stos
pop
inc
pop
idiv
push
fld
sub
cmp
push
push
add
xchg
pop
dec
imul
popa
pop
mov
sub
imul
adc
push
popa
cmp
comiss
push
add
and
lock
pop
and
xor
mov
inc
lahf
adc
adc
aas
inc
inc
mov
adc
jecxz
mov
add
xchg
add
add
cmp
mov
dec
mov
inc
push
pop
push
add
je
add
adc
push
adc
inc
xchg
push
inc
into
or
or
or
and
mov
xor
mov
sub
sti
outs
sbb
and
outs
fs
addr16
sbb
icebp
inc
sub
xor
daa
aaa
mov
mov
cmovae
mov
stos
aad
bound
xchg
sub
add
or
xchg
and
imul
je
or
mov
mov
lea
leave
add
cmp
jbe
lods
arpl
mov
mov
aam
mov
adc
scas
mov
sti
daa
pop
add
and
cmps
mov
push
and
repz
nop
adc
jnp
stos
push
mov
and
push
or
test
mov
sar
ds
ins
and
xor
cmp
xor
push
xchg
fcmovne
jbe
add
test
add
and
cs
sbb
inc
cs
adc
mov
push
imul
ret
push
ins
add
sbb
mov
inc
mov
mov
daa
aaa
pop
and
and
adc
jg
outs
sub
inc
push
outs
sbb
shl
movs
pop
sub
lods
fiadd
dec
sbb
inc
mov
or
ret
sub
inc
test
adc
scas
mov
rol
pop
mov
(bad)
lods
fcmovu
mov
mov
and
(bad)
adc
and
inc
movs
add
jae
addr16
pusha
lds
movs
add
ret
adc
sbb
loopne
loopne
dec
outs
inc
imul
and
xor
pop
push
(bad)
mov
cmps
mov
sub
add
mov
dec
bndstx
sub
pop
retw
mul
pop
das
xchg
jmp
test
je
call
mov
mov
cmp
pop
inc
inc
test
add
in
jbe
push
xchg
es
sub
inc
mov
movs
add
je
or
clc
sub
rol
push
mov
das
daa
(bad)
xchg
jo
jg
movs
lea
arpl
iret
pop
xor
int
jg
out
pusha
loop
aas
ins
jecxz
sbb
adc
addr16
cwde
inc
mov
xor
inc
jecxz
add
add
push
push
mov
add
add
xor
lahf
inc
xor
xor
out
out
mov
sbb
push
pop
sub
mov
aas
xor
imul
fcomp
adc
pop
(bad)
pop
pop
rcl
mov
(bad)
shl
xchg
cmps
mov
dec
outs
xlat
js
pop
mov
cmp
fstp
rcr
xor
pop
in
mov
xor
data16
inc
sbb
test
not
mov
push
jno
xor
push
pop
add
add
icebp
inc
pop
das
mov
inc
mov
sar
leave
sbb
outs
pop
xor
bound
push
add
mov
push
lea
push
fmul
mov
out
outs
aas
pop
leave
mov
dec
sbb
mov
xchg
xor
add
test
mov
mov
sbb
jb
fiadd
outs
pop
xor
mov
fsubr
pop
xor
js
jbe
pop
in
xor
inc
pop
outs
stos
pop
xor
dec
pop
pop
pop
ins
imul
out
outs
dec
sub
ins
das
arpl
shr
push
push
push
push
jne
sub
jno
jae
push
js
pushf
xchg
jp
add
inc
inc
dec
jmp
inc
cmp
neg
xlat
rcl
push
push
sbb
pop
loop
cmp
xor
xor
fiadd
push
push
arpl
scas
adc
jo
out
fwait
nop
mov
push
mov
rol
jge
push
jg
ror
jns
mov
dec
test
enter
and
outs
jmp
mov
test
outs
inc
or
cmp
bound
mov
sbb
dec
sahf
xchg
inc
xor
outs
ins
mov
dec
pop
mov
ret
test
imul
cs
iret
je
add
ret
or
pop
add
add
and
push
and
sahf
mov
mov
push
ja
add
inc
sbb
mov
fistp
outs
shr
les
popf
je
xor
pusha
cmps
dec
mov
add
cmc
lods
out
add
cs
jne
or
xlat
xor
mov
sbb
xchg
mov
iret
out
sub
xor
sub
aaa
sbb
push
pop
jmp
sub
cmp
xor
arpl
adc
jns
lahf
(bad)
jnp
and
inc
mov
loopne
imul
add
sub
push
add
ror
call
cmps
shl
in
push
(bad)
and
int
jns
inc
push
pusha
nop
xlat
jo
es
js
push
xor
addr16
push
jecxz
push
lods
mov
(bad)
push
rcl
ffree
(bad)
mov
loope
loop
jecxz
cmp
lock
cmp
add
gs
out
dec
jae
mov
mov
mov
push
and
fistp
xor
fs
scas
cmp
pop
or
in
xchg
mov
mov
shr
movs
pop
shl
rol
adc
test
push
and
add
jo
add
cmp
mov
sbb
lods
pop
call
shl
cmp
aaa
(bad)
(bad)
test
or
and
push
imul
adc
xchg
push
imul
adc
das
aas
test
xor
xchg
inc
dec
(bad)
cmps
shl
jb
leave
xor
xor
daa
xchg
pushf
pop
xor
leave
leave
and
pushf
pop
jb
cmp
cs
daa
leave
xor
xor
cmp
xor
xchg
dec
dec
cs
in
iret
aaa
sar
enter
ror
jb
shl
xor
in
xchg
dec
xor
xor
cmp
xor
fdiv
fnstcw
mov
cmp
jb
adc
fdiv
dec
dec
scas
sbb
in
xchg
xchg
xor
xor
dec
cmp
in
xchg
dec
ss
sub
mov
sbb
out
out
dec
dec
scas
daa
xor
xor
xor
xor
dec
cs
xor
xchg
ss
aaa
out
adc
mov
sbb
icebp
daa
xor
xor
cmp
xor
xchg
dec
dec
cs
in
div
clc
cmp
adc
stc
(bad)
cli
dec
scas
sbb
xor
in
xchg
dec
xor
xor
cmp
xor
xchg
scas
add
leave
inc
leave
div
add
mov
push
and
add
add
and
imul
adc
movs
push
sub
jecxz
out
push
iret
mov
outs
jns
out
ret
ret
ror
out
imul
push
add
sbb
inc
sti
push
not
push
xor
ret
push
inc
shr
push
push
mov
push
xchg
xchg
inc
xor
push
test
mov
cli
mov
ja
les
mov
inc
push
jno
sahf
iret
inc
data16
or
sub
jg
jne
mov
arpl
wrmsr
sbb
jns
pusha
mov
xor
add
inc
das
jmp
push
mov
cmps
add
in
pusha
inc
ins
jl
(bad)
(bad)
ins
jmp
out
sbb
cs
cmp
bound
push
mov
fild
(bad)
mov
inc
ja
loop
jae
and
repnz
movs
leave
dec
imul
repnz
add
mov
leave
aaa
and
ss
(bad)
xchg
sbb
pop
xchg
cmp
scas
fcomp
(bad)
fcom
mov
jo
add
inc
pop
cmps
or
adc
sub
sti
add
mov
das
sub
mov
and
add
add
fadd
pop
fdiv
push
xchg
mov
mov
(bad)
pop
out
loope
inc
adc
lahf
cmps
jbe
ret
sub
xor
xchg
cmps
scas
aaa
add
popa
dec
pop
movs
dec
sbb
push
test
add
das
(bad)
jg
pop
adc
push
add
add
mov
dec
add
add
mov
outs
sub
xor
mov
mov
add
push
cs
cmp
pop
mov
mov
aaa
jne
mov
dec
adc
lods
sbb
addr16
pop
xor
xor
mov
fucomi
push
fwait
sub
and
shl
add
jae
inc
ins
pop
mov
jecxz
cmp
(bad)
rcr
xor
sbb
dec
loop
imul
inc
outs
add
ja
imul
rdtsc
mov
sldt
aam
jne
iret
xchg
lods
adc
outs
jae
lea
arpl
jbe
dec
retf
test
add
xor
outs
mov
getsec
loopne
inc
fwait
out
xor
ins
out
das
scas
mov
jb
jmp
xor
ret
xchg
xor
xlat
cs
cmp
push
cmp
shl
or
rcr
and
sbb
ror
dec
call
push
pop
mov
xchg
(bad)
mov
mov
mov
xchg
pop
xor
jge
cmp
arpl
fbstp
jp
adc
cmp
in
add
xor
xor
mov
lds
leave
mov
xchg
add
adc
xchg
adc
sar
add
out
inc
ins
and
push
pop
push
sar
aas
daa
cmp
call
pop
aaa
dec
pop
add
jbe
or
or
xchg
sbb
scas
js
lahf
inc
aas
call
das
and
or
popa
adc
cs
mov
push
or
xchg
fild
dec
mov
inc
ja
jae
xor
sub
add
jbe
add
push
iret
imul
aas
dec
das
sub
aaa
nop
mov
pusha
jnp
popa
outs
adc
mov
fistp
leave
sbb
ins
add
or
inc
inc
mov
ret
add
xchg
inc
push
lds
aas
das
or
and
ja
pop
dec
dec
inc
inc
inc
xchg
mov
adc
push
jp
call
pop
fdivr
ret
pop
jne
movs
and
test
sbb
sbb
and
in
and
xor
inc
inc
pop
xor
sub
es
(bad)
xchg
sbb
dec
imul
(bad)
add
jle
dec
adc
(bad)
push
push
nop
cmp
xchg
rol
loopne
bound
cmp
adc
test
bound
loope
call
push
pop
jecxz
shl
push
inc
pop
dec
iret
bound
lahf
pop
mul
imul
jnp
aaa
inc
neg
stos
(bad)
inc
ret
(bad)
pop
pop
inc
test
add
in
pop
and
arpl
push
sahf
mov
adc
add
iret
mov
sub
cmps
xor
cli
outs
out
cmp
daa
pop
add
mov
push
and
dec
arpl
adc
push
mov
cmps
dec
mov
or
repz
xchg
sbb
xlat
xor
out
jno
pusha
mov
adc
cmps
xor
add
dec
scas
xchg
push
xor
daa
fisttp
movs
mov
jp
dec
adc
les
inc
adc
pop
pop
and
pop
outs
aam
loopne
dec
push
cwde
mov
inc
adc
shr
adc
adc
add
loop
sub
rol
bound
lea
ss
icebp
adc
fistp
mov
xor
xor
js
jne
sbb
loopne
in
cmps
rcl
outs
pop
sbb
push
ins
push
cmc
outs
add
sub
add
and
in
add
mov
imul
mov
in
push
es
or
push
push
pop
dec
in
cmp
pusha
xchg
je
arpl
or
sub
mov
inc
stos
popa
ins
sub
or
and
and
or
fs
cmp
int3
jo
std
outs
cmp
and
push
xor
imul
or
jne
sub
cmp
(bad)
in
jo
das
mov
outs
cs
imul
loope
mov
push
jo
jae
popa
addr16
and
mov
push
enter
xchg
or
scas
or
ins
jne
ret
pusha
sub
xor
cmp
jg
mov
xor
das
sub
(bad)
fwait
sub
add
jo
mov
adc
sub
xor
jns
outs
add
jp
push
test
ja
jb
jae
sbb
and
mov
jo
adc
jae
lods
daa
test
popa
sub
ins
cmp
adc
jae
addr16
sub
cld
xor
xchg
jb
pop
test
in
xor
xor
add
xor
xor
pushf
xor
mov
inc
fs
aaa
sub
in
push
xor
and
(bad)
push
dec
and
push
sbb
outs
push
and
test
cmp
jb
and
inc
or
cs
rol
es
pop
and
or
les
add
xor
adc
jle
push
push
scas
nop
popa
adc
push
jae
pushaw
loope
out
outs
push
xchg
xor
enter
xor
fsub
ret
xor
rcr
sbb
popf
sub
push
and
outs
fcmovbe
xchg
sub
repnz
and
call
push
push
and
inc
push
inc
inc
dec
dec
mov
push
movs
test
inc
cwde
dec
out
ret
inc
dec
pop
sub
adc
adc
sub
(bad)
push
je
mov
sub
and
sbb
and
jae
ja
and
adc
dec
and
inc
jns
fs
add
xor
das
and
adc
mov
addr16
test
mov
inc
sub
mov
inc
and
sahf
jmp
daa
cmp
daa
jne
xchg
fidivr
std
stos
and
sar
dec
ret
jge
(bad)
fadd
or
xchg
dec
dec
sbb
pop
or
daa
push
push
jns
mov
or
ins
int
shr
popa
addr16
fs
xchg
pusha
shl
das
imul
push
mov
sbb
cwde
sub
scas
and
es
sub
jge
imul
pop
int
gs
(bad)
mov
stc
ja
jbe
sub
cmp
popa
jo
dec
ror
xor
pop
jnp
sbb
shr
aas
arpl
call
xor
sub
push
lock
std
pop
jo
sub
jnp
or
sub
outs
inc
push
dec
xor
push
or
fnstenv
(bad)
jnp
add
je
sbb
sbb
adc
js
bound
fwait
pusha
fld
xor
jl
jb
jbe
adc
mov
or
ror
mov
dec
xor
lds
shl
push
bound
mov
aad
push
arpl
inc
cwde
jae
fiadd
fimul
pop
cmps
inc
cmps
push
push
jnp
xlat
and
and
enter
dec
or
ret
push
outs
fs
push
cmp
outs
(bad)
push
fld
push
popa
cs
daa
jb
sbb
jmp
sar
pop
cmp
ret
rol
mov
popa
aaa
sub
popa
and
adc
xchg
add
sub
jge
xor
or
mov
push
outs
addr16
add
jge
sub
mov
jbe
leave
mov
imul
fs
sbb
push
push
in
test
and
cmp
xor
out
cmps
jge
sbb
xchg
fwait
pop
adc
xchg
lods
mov
imul
jecxz
call
rol
test
xchg
into
push
pop
gs
jbe
gs
pop
test
gs
push
pop
push
call
jae
and
add
and
jmp
xchg
bound
cmps
inc
xchg
and
cmps
or
jg
or
iret
adc
cs
inc
lea
jmp
pop
mov
and
push
mov
xor
jge
rcl
addr16
add
inc
mov
cs
push
imul
mov
cmps
es
xor
popf
rol
lods
sub
inc
xchg
sub
je
mov
ror
fwait
mov
inc
xchg
inc
arpl
mov
dec
mul
pop
pusha
and
into
lock
ret
sub
adc
push
and
pusha
inc
int3
arpl
retf
xchg
ret
and
push
fimul
mov
add
sub
arpl
mov
mov
xchg
ja
pop
enter
sub
or
sub
imul
sub
psubq
nop
and
inc
xlat
push
mov
inc
and
add
dec
xor
sub
jb
outs
lds
ret
sbb
arpl
cmc
cmp
mov
sub
aaa
pusha
icebp
dec
pop
inc
add
push
stc
inc
(bad)
mov
add
cmp
cmps
adc
mov
inc
push
or
or
add
sbb
loop
cmc
repz
inc
pop
xrelease
fimul
jb
stc
sub
inc
das
or
pusha
xlat
fstp
jmp
aam
mov
loope
push
jbe
fidivr
mov
mov
mov
xor
and
pusha
lods
popa
jnp
add
fild
sub
gs
jo
popa
or
and
stos
add
in
ret
pop
or
xchg
daa
mov
adc
outs
adc
and
inc
icebp
inc
adc
mov
dec
adc
outs
and
call
stos
mov
mov
loop
mov
test
lods
jmp
push
sbb
push
and
push
dec
shl
test
adc
pop
sub
mov
cmp
rol
pop
arpl
and
arpl
out
push
fwait
ins
push
jmp
xor
inc
movs
shl
xchg
adc
test
sub
cmp
pop
jge
test
push
sub
fisubr
xchg
mov
or
ss
mov
and
(bad)
sbb
adc
ja
scas
push
ins
sbb
cmp
daa
jge
std
mov
jnp
arpl
ins
gs
jbe
dec
push
pop
or
push
inc
inc
dec
push
dec
test
add
mov
ins
outs
ins
lock
cmp
sar
sub
dec
jne
dec
xor
sbb
inc
into
xchg
inc
mov
fisttp
push
sbb
add
and
sub
enter
xchg
stos
loopne
sub
xor
sub
push
adc
push
pop
sub
push
mov
sti
sbb
shl
jno
push
sub
rcr
fbstp
popa
mov
pop
and
push
ja
mov
cs
bound
add
push
sbb
cmp
sub
or
loope
add
add
cmp
or
inc
inc
dec
push
scas
adc
mov
push
enter
mov
pop
add
cmp
push
popa
push
shr
ins
jp
cmp
xor
loope
outs
pop
or
push
fldenv
mov
cmp
xor
and
retf
push
pop
xor
test
nop
pop
xor
leave
mov
dec
das
in
xor
dec
leave
xor
push
or
cs
mov
mov
fild
and
pop
retf
iret
or
and
mov
cmp
xor
aaa
add
ins
xchg
cmp
iret
in
shr
bound
xchg
push
dec
std
and
inc
icebp
and
das
jp
outs
push
jae
and
ds
in
mov
push
and
fcomp
mov
int3
(bad)
push
sub
and
and
lds
mov
(bad)
je
ja
mov
push
daa
mov
push
inc
pop
dec
inc
dec
or
xchg
dec
jl
jo
jp
mov
je
mov
in
sub
xor
inc
loope
les
inc
xor
data16
sub
sahf
add
cmp
retf
mov
and
push
sbb
mov
push
xor
movs
pcmpeqd
imul
pusha
xchg
adc
jne
add
repnz
outs
popa
sub
or
or
cmp
push
jmp
sbb
lods
sar
fst
push
push
jbe
hlt
inc
lods
xor
push
inc
sbb
dec
mov
pop
jbe
rol
and
dec
imul
fistp
pop
ins
ins
and
add
dec
or
sbb
mov
adc
lea
adc
xlat
pop
pop
popa
sub
xor
add
(bad)
sbb
nop
adc
aaa
xlat
ins
ret
loopne
addr16
ja
and
and
pop
add
lods
mov
daa
mov
outs
add
mov
adc
call
mov
bound
jmp
fst
xor
ja
mov
push
lods
fadd
hlt
adc
xchg
add
add
xor
mov
xlat
pop
dec
sub
push
xor
add
das
out
sbb
sub
ss
inc
and
scas
fild
add
pop
xchg
push
add
add
scas
shl
jae
mov
mov
push
adc
(bad)
ins
add
and
xor
jg
dec
mov
movs
dec
mov
and
jno
imul
dec
and
and
fs
mov
xor
jo
pop
test
jg
jo
es
dec
imul
lods
and
dec
aas
xor
movq
sbb
dec
loope
stos
sbb
cmp
xchg
cmp
push
push
ins
ja
jo
pop
ins
aas
jmp
ja
pop
pop
push
push
setp
add
push
fwait
(bad)
push
in
mov
cmps
ret
fdivr
test
fisttp
dec
out
pop
xor
jbe
adc
xchg
sub
daa
daa
lods
stos
mov
add
add
xor
ret
sub
xor
sbb
and
mov
popa
mov
pop
xor
push
shl
or
mov
add
iret
popa
pop
xor
test
sub
arpl
add
sub
or
push
retf
outs
jno
xor
in
and
dec
aaa
pop
jo
mov
inc
push
sbb
aam
pusha
xor
sbb
push
push
adc
pop
adc
inc
or
pusha
xchg
cmp
inc
out
push
dec
mov
jmp
add
pusha
test
str
imul
(bad)
arpl
push
xchg
add
adc
ret
jno
mov
(bad)
mov
mov
push
cmps
push
sbb
add
add
ja
ins
lods
aaa
cmp
xor
in
leave
pop
add
add
xor
popa
push
adc
or
inc
add
jae
outs
adc
aad
int
arpl
dec
fsub
and
pusha
push
bound
mov
rol
add
mov
push
test
or
xchg
jmp
mov
inc
repz
push
xor
jmp
ins
add
sub
or
push
adc
add
jno
jne
or
cmp
lods
ret
sar
push
fwait
push
es
adc
retf
sbb
les
jne
add
lahf
xchg
cmps
shr
popa
jae
loopne
or
sub
dec
inc
mov
inc
push
add
xor
xchg
pop
sub
push
je
pop
outs
not
stos
xchg
mov
and
out
xor
pusha
push
inc
addr16
push
retf
push
pop
das
(bad)
mov
xlat
inc
pop
int3
adc
inc
aam
mov
(bad)
arpl
mov
imul
sbb
mov
jg
cwde
xchg
fisub
mul
mov
ret
pop
loope
xchg
mov
dec
push
sub
xlat
jmp
inc
xchg
push
add
and
inc
inc
pop
iret
add
inc
addr16
inc
ins
adc
inc
lods
loope
pop
dec
add
pop
pop
fmul
aad
arpl
popa
ss
add
aaa
test
icebp
out
rep
adc
mov
and
sub
les
scas
cmp
out
add
or
(bad)
xor
fadd
sbb
sub
mov
jg
pop
pop
sub
or
outs
fstp
pand
or
iret
loopne
pop
test
rol
jns
mov
loope
dec
inc
ins
adc
icebp
jmp
mov
mov
pusha
pop
pop
sar
aas
dec
jno
mov
dec
rcr
mov
mov
imul
add
pop
inc
shr
add
add
adc
ficom
add
or
push
pop
sub
lods
sbb
xchg
and
jno
mov
xor
imul
(bad)
push
add
ss
lods
add
adc
xor
(bad)
mov
mov
pop
pop
mov
addr16
ins
mul
inc
fs
jne
ja
aaa
or
arpl
pop
ja
stos
scas
imul
(bad)
cmp
push
sub
movs
nop
and
pop
mov
dec
lods
and
fdivr
arpl
adc
sub
ins
repnz
sub
outs
adc
add
pop
sbb
add
or
movs
push
dec
and
jmp
mov
and
out
pop
sbb
add
fild
add
dec
pop
mov
sub
fild
and
jae
inc
add
cmp
push
imul
sub
mov
adc
push
scas
outs
mov
stos
iret
ja
or
fist
test
push
ja
outs
xlat
push
inc
mov
adc
sbb
or
iret
mov
pop
mov
jmp
mov
and
stos
loopne
and
xchg
or
add
push
mov
(bad)
push
sbb
adc
inc
mov
lahf
cmp
movs
xor
pop
mov
test
cmp
pop
sub
pop
shl
imul
popf
sbb
xchg
fistp
shr
jp
daa
rcr
and
xlat
mov
sbb
or
xor
les
loop
emms
lods
pusha
or
imul
lahf
and
fidiv
sub
movs
xor
pop
ret
inc
push
test
out
fild
and
adc
inc
xchg
inc
adc
dec
pop
lock
cmp
repz
pop
out
jmp
scas
loopne
jnp
jnp
imul
cs
pusha
movs
and
pop
adc
icebp
arpl
inc
sbb
lahf
jno
push
add
or
das
jnp
nop
test
sbb
add
adc
or
imul
xchg
fbstp
and
cmp
push
bound
xorps
inc
lods
xlat
aaa
sbb
mov
add
sbb
and
adc
or
cmp
xor
aam
and
(bad)
push
mov
dec
sbb
sub
not
outs
inc
sbb
outs
adc
(bad)
out
sbb
push
and
rcl
pop
add
push
dec
mov
mov
adc
inc
rcr
jecxz
pop
clc
push
push
xchg
daa
jbe
je
lods
fnstcw
arpl
xor
out
push
bound
jae
lds
sahf
mov
ins
(bad)
bound
test
stos
adc
daa
iret
daa
stos
push
(bad)
sub
add
push
mov
mov
rcl
adc
(bad)
das
jg
bound
aaa
push
arpl
pop
arpl
sbb
dec
les
pop
pop
xor
pop
or
test
adc
push
xor
xchg
arpl
cmp
ror
lods
lods
adc
(bad)
aaa
jae
shl
iret
or
scas
adc
mov
jb
sbb
xchg
pop
gs
mov
rsm
imul
out
call
and
mov
in
dec
xchg
and
jge
shr
fwait
imul
(bad)
add
add
pop
ins
xor
ja
js
add
sub
mov
push
jno
data16
test
cwde
sub
cs
punpckhdq
jle
scas
lods
add
mov
dec
inc
sub
fild
add
sub
ins
push
inc
add
ds
and
ficom
dec
ja
xchg
mov
add
pusha
adc
xchg
xor
mov
nop
sbb
dec
add
inc
xor
mov
(bad)
fiadd
xchg
pop
pop
pusha
popa
push
pop
add
pop
call
pop
push
cmc
and
jbe
fsubr
ja
mov
cli
mov
(bad)
int
ffreep
or
adc
(bad)
addr16
pop
test
sub
inc
movs
lds
call
iret
mov
lds
pusha
push
and
das
mov
dec
mov
nop
pop
cmps
pop
popa
popf
add
adc
ffree
inc
xchg
pop
xchg
fisttp
scas
ss
add
pop
mov
jae
mov
stos
imul
in
xor
sbb
add
push
dec
outs
push
sti
push
pop
adc
dec
or
push
pop
mov
xchg
mov
mov
xor
xchg
or
bound
das
add
mov
das
mov
lods
xchg
(bad)
call
adc
ins
sub
sub
or
xor
mov
push
shr
fadd
retf
cmp
test
aaa
inc
jo
pop
mov
shr
inc
mov
movs
(bad)
dec
xlat
push
jnp
ins
cmps
das
pop
addr16
dec
sbb
das
dec
ret
mov
mov
out
or
pop
push
das
imul
sbb
push
jmp
dec
pop
sub
repz
bound
mov
dec
mov
test
push
repz
aad
nop
sbb
xor
add
sub
sub
xchg
mov
inc
mov
loopne
xchg
mov
add
add
pop
and
call
jo
jne
adc
push
xor
add
imul
stos
arpl
inc
pop
cmps
lds
pop
inc
xchg
sbb
imul
xchg
jmp
ds
(bad)
xlat
in
add
jae
imul
inc
add
int
ins
popa
inc
test
aaa
or
outs
sbb
dec
xchg
lahf
and
outs
or
sbb
sahf
out
mov
push
push
push
lock
in
rcr
out
push
iret
repz
pop
nop
jg
jns
out
inc
(bad)
(bad)
(bad)
call
jo
out
(bad)
jmp
hlt
das
data16
jo
xor
xor
sar
xor
cmp
and
int3
add
xor
push
jecxz
addr16
push
pusha
pop
loope
pop
movups
jae
push
pop
das
jo
xor
outs
sbb
mov
and
jb
jb
inc
loopne
aas
cmp
in
pop
sbb
pushf
pushf
pushf
js
rcl
leave
leave
leave
adc
mov
leave
leave
leave
or
fcmovne
add
unpcklps
push
jb
sub
jb
jb
or
jb
jb
test
in
jbe
aas
pop
sbb
dec
dec
dec
sahf
push
push
jl
fsub
in
sub
pop
jmp
in
in
or
dec
in
in
clc
add
in
in
mov
in
in
or
in
in
movs
add
in
pop
pop
sbb
in
in
inc
jp
in
in
aam
push
in
in
mov
mov
in
in
add
dec
sahf
rol
jbe
dec
dec
dec
dec
int3
pcmpgtd
dec
dec
dec
dec
lods
push
xchg
dec
dec
dec
in
or
dec
dec
dec
dec
pushf
arpl
pushf
fmul
fcomp
aas
outs
cs
mov
aas
mov
bound
push
call
in
mov
xor
cs
popa
and
add
in
pop
sbb
jns
shl
in
in
sub
in
dec
repnz
or
dec
adc
mov
xor
cmp
and
or
cmp
pop
cmp
jge
xchg
xchg
or
fisubr
xchg
xchg
xchg
xchg
mov
cmp
ret
nop
xchg
xchg
or
(bad)
cmp
cmp
or
cmp
add
nop
xchg
xchg
pop
sbb
cmp
(bad)
imul
or
dec
not
in
in
ja
into
dec
dec
dec
cs
scas
pop
inc
dec
dec
dec
xchg
cs
in
pop
sahf
jg
inc
dec
dec
aas
fisubr
daa
mov
leave
das
mov
dec
sbb
test
inc
inc
leave
inc
xor
and
xchg
rol
xor
leave
leave
test
xchg
cdq
fst
inc
xor
and
leave
in
aad
inc
xor
leave
inc
int
inc
xor
and
leave
fnstsw
xchg
ret
mov
jecxz
inc
xor
leave
inc
leave
repz
stos
xor
and
leave
inc
fstp
sti
(bad)
adc
inc
xor
dec
and
mov
inc
leave
inc
test
scas
out
adc
inc
xor
dec
and
inc
iret
enter
adc
rcl
push
add
int
iret
inc
pop
inc
jg
push
pop
cmps
repnz
add
and
jns
push
or
push
xor
inc
add
enter
pusha
add
or
xor
xor
or
or
(bad)
lock
mov
fist
dec
fistp
out
add
fdiv
pop
out
test
cmps
add
push
mov
push
sbb
add
cmc
and
sub
dec
jge
and
ins
in
xchg
add
(bad)
fild
test
mov
dec
adc
sbb
dec
rcl
sub
cmp
movs
inc
ret
out
jns
or
ret
cmps
jecxz
add
mov
add
add
ins
fnsetpm(287
mov
fiadd
or
jns
out
xor
add
add
call
(bad)
inc
dec
(bad)
fild
(bad)
push
pop
data16
sub
iret
scas
dec
outs
inc
inc
pop
pop
pop
or
dec
dec
or
or
fisttp
or
ja
popa
push
out
mov
(bad)
(bad)
(bad)
inc
ins
pop
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
dec
mov
sub
mov
sbb
dec
jno
repz
test
pop
dec
(bad)
aam
sbb
ins
push
mov
hlt
mov
ins
adc
test
fs
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
(bad)
(bad)
jmp
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
(bad)
(bad)
(bad)
jmp
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
push
fldenv
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
(bad)
mov
add
(bad)
and
or
adc
stos
sbb
data16
(bad)
(bad)
(bad)
inc
jbe
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
das
cli
leave
pop
js
stc
fmul
cwde
push
loope
or
ins
or
(bad)
(bad)
inc
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
cmp
(bad)
call
pmaddwd
fnstenv
adc
mov
mov
bound
ficom
(bad)
inc
sti
pop
popa
mov
into
pop
cmp
mov
inc
movs
fisttp
xchg
fdivr
(bad)
jmp
(bad)
shl
jmp
outs
xor
mov
sar
add
in
(bad)
(bad)
call
or
cmp
add
daa
adc
or
and
(bad)
(bad)
(bad)
inc
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
(bad)
(bad)
dec
mov
shl
mov
call
mov
cmp
jmp
rcr
adc
jae
or
test
fs
ds
or
or
push
in
(bad)
(bad)
out
clc
dec
xchg
daa
scas
lods
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
push
(bad)
test
ss
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
(bad)
(bad)
jmp
mov
mov
mov
aad
mov
call
xchg
shl
push
repnz
(bad)
(bad)
push
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
(bad)
(bad)
(bad)
inc
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
(bad)
(bad)
(bad)
call
inc
or
das
es
lds
or
sub
mov
(bad)
(bad)
(bad)
jmp
iret
shl
sbb
ret
es
pushf
mov
ins
add
aaa
std
jmp
ss
jmp
addr16
jb
push
les
jp
loop
sub
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
cmp
(bad)
jmp
sbb
int
mov
mul
ja
outs
ja
mov
out
cli
jo
adc
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
jg
imul
add
ret
cmp
(bad)
(bad)
jmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
xchg
xor
scas
mov
fidivr
mov
jmp
(bad)
push
mov
retf
mov
cmps
mov
sar
sub
push
mov
(bad)
(bad)
(bad)
(bad)
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
pop
ins
add
fsub
adc
or
push
add
lods
or
jge
add
out
popa
imul
inc
push
cmps
mov
xor
mov
je
shr
jae
mov
jae
popa
adc
mov
xchg
inc
jne
fld
mov
inc
push
mov
pop
addr16
inc
xchg
cmc
or
aas
sub
shl
cmp
nop
inc
sbb
cmp
mov
fcmovbe
xor
sar
sbb
ds
call
xlat
jecxz
jge
add
fbstp
or
mov
popa
fs
push
sbb
daa
imul
add
pop
das
das
sbb
push
aaa
add
jns
sahf
pop
pop
ins
push
gs
daa
loop
popf
outs
leave
das
(bad)
push
adc
call
das
dec
or
push
cvtps2pi
dec
sub
xchg
xor
add
lock
test
pop
jae
xchg
dec
scas
(bad)
xchg
sub
xchg
pop
or
(bad)
aaa
xlat
imul
fs
pop
sub
je
arpl
or
(bad)
and
jo
or
pop
mov
js
push
jp
cmp
xor
jo
lods
xchg
es
mov
pop
adc
add
clts
test
popf
pop
aaa
pop
xor
mov
dec
sahf
inc
xor
xor
xor
cmp
sub
das
enter
cmp
xchg
adc
mov
fisubr
out
das
out
dec
sahf
or
das
pop
xor
mov
pop
or
cwde
push
gs
imul
dec
or
mov
add
mov
or
ins
pop
mov
or
scas
les
mov
push
mov
adc
inc
iret
rcl
xchg
lods
push
das
mov
pop
sahf
gs
xor
dec
mov
stos
call
or
or
jno
push
xchg
outs
adc
adc
push
cwde
push
pop
enter
inc
sbb
push
outs
pop
lods
inc
pusha
jnp
rol
xchg
push
adc
inc
enter
jg
or
add
push
test
xchg
push
jns
dec
es
push
adc
pop
or
test
or
ss
adc
mov
and
push
pop
fwait
sub
ss
pop
jo
or
test
repnz
xchg
push
xchg
or
add
xchg
and
mov
dec
sar
scas
shl
aas
push
nop
inc
xchg
mov
and
jle
loopne
cmp
and
pusha
lea
(bad)
sbb
and
cmps
add
xor
adc
pop
jbe
loope
pop
and
mov
add
or
rcl
dec
bound
add
pop
pop
and
lock
pop
sbb
add
outs
add
pop
xor
retf
pop
xchg
std
mov
xor
retf
int3
dec
or
dec
sar
xchg
jno
push
inc
cmp
and
dec
and
daa
sbb
and
add
in
xor
and
outs
bound
cmp
add
cdq
sub
xor
dec
mov
mov
adc
jo
push
imul
dec
(bad)
call
ins
xor
mov
ret
sub
add
or
pusha
inc
loope
ins
add
adc
jo
jae
mov
sub
mov
push
das
sub
mov
mov
das
inc
mov
cmp
inc
jb
loopne
fs
idiv
xchg
ja
aaa
add
mov
xor
fist
inc
int
xchg
adc
sub
and
sub
jae
mov
mov
mov
and
or
bound
hlt
fadd
add
jb
jne
mov
shl
lar
xlat
inc
mov
mov
sar
and
popa
mov
push
pushf
jo
cmp
sbb
mov
sub
icebp
xchg
add
daa
fimul
nop
xor
mov
and
lea
add
xor
fdivr
mov
add
sub
xor
mov
cwde
inc
xor
jp
inc
push
cmp
loope
adc
lods
imul
sub
pop
sub
pusha
xchg
mov
imul
sbb
inc
dec
inc
xor
scas
je
pusha
ins
and
cmp
push
fdiv
inc
xor
mov
ja
xor
inc
add
aas
movs
jg
or
lea
ins
popf
pop
jae
mov
(bad)
mov
xchg
rol
pop
and
ret
push
and
test
ret
daa
jns
popf
call
lahf
ret
or
mov
lock
mov
lods
or
xchg
xchg
lea
(bad)
fild
mov
(bad)
mov
popa
jb
push
push
adc
or
test
loope
pop
fcom
push
popa
adc
push
jne
inc
sub
push
pop
inc
test
fld
stos
push
or
loope
xor
(bad)
mov
stos
jo
stc
add
test
add
jg
ins
xchg
or
push
pusha
popa
sbb
(bad)
aad
jl
pop
arpl
add
jae
mov
or
xor
rol
icebp
(bad)
sub
or
xor
and
sub
push
push
push
dec
inc
push
es
or
inc
ror
dec
cmp
cmp
xor
adc
fisubr
push
push
aad
inc
dec
loopne
mov
gs
test
cmp
xchg
push
inc
push
inc
sub
sbb
in
mov
mov
pop
mov
rol
push
lock
mov
mov
outs
pop
adc
dec
dec
add
fnstenv
imul
retf
es
rcl
aas
and
pop
push
or
ins
pop
mov
test
dec
mov
adc
ins
lds
jae
test
cmps
mov
and
pop
ror
ror
mov
fld
test
dec
ins
lahf
mov
adc
test
fild
ret
and
push
mov
cmp
inc
mov
ins
or
mov
aad
adc
(bad)
call
mov
adc
(bad)
pop
popa
lods
push
or
arpl
aam
popaw
(bad)
aas
dec
lea
dec
fcmovnu
adc
cs
jmp
dec
and
add
sub
shr
jp
mov
popa
add
jmp
cmp
or
aad
mov
mov
call
or
mov
mov
mov
inc
lds
xor
clc
push
push
dec
dec
dec
pushf
inc
adc
sbb
ret
or
invd
adc
sbb
and
sub
sub
jb
and
xchg
sub
lahf
das
mov
and
xchg
xchg
sbb
inc
add
push
dec
or
add
or
daa
daa
xchg
inc
mov
mov
adc
mov
push
and
xor
jmp
adc
ret
inc
xor
sub
add
dec
mov
dec
jne
gs
addr16
jmp
ret
in
loope
out
add
lock
inc
arpl
add
inc
rol
add
jnp
ss
retf
jnp
xlat
aad
scas
or
scas
or
test
setg
xor
pop
xchg
and
lds
test
das
adc
inc
sub
add
cs
and
sub
popa
push
sub
or
jg
push
stos
push
jge
cmps
mov
movs
sbb
cmp
and
fsubr
mov
aad
xor
or
cmps
inc
icebp
inc
daa
or
les
iret
sub
test
mov
loop
adc
loope
inc
rol
cmp
lea
mov
sbb
or
mov
pop
or
push
(bad)
xlat
xchg
cmp
call
mov
push
mov
inc
lahf
push
mov
cmp
push
aam
popa
inc
dec
or
and
mov
adc
ja
mov
jne
pop
sub
test
push
push
and
mov
xchg
sbb
and
xor
fnstenv
xchg
lods
or
(bad)
ins
ins
popa
test
push
inc
push
int3
pop
cmp
ror
cmc
daa
inc
push
xchg
and
dec
pop
and
fcomp
call
sub
retf
jbe
cmp
push
or
mov
mov
sub
les
mov
data16
inc
push
or
dec
add
mov
ret
push
icebp
push
fisub
imul
push
sbb
rol
movs
in
mov
fnstenv
inc
out
jns
and
daa
pop
push
jno
cmp
inc
mov
push
arpl
push
(bad)
add
pop
push
inc
mov
adc
inc
mov
mov
mov
inc
sti
lods
push
ja
xor
add
inc
xor
sbb
xchg
(bad)
lea
lea
mov
inc
mov
push
outs
xchg
cmp
test
mov
adc
adc
fs
pop
xor
enter
sbb
add
xchg
js
loope
and
mov
cmp
test
or
adc
dec
and
inc
xchg
jo
pop
adc
fst
xchg
dec
adc
jo
pop
inc
adc
in
shr
push
leave
adc
and
jb
and
adc
xor
dec
scas
stos
mov
stos
sub
adc
cmp
movs
adc
cmp
mov
or
pop
xor
and
inc
sbb
pop
outs
sti
adc
pop
test
push
push
cdq
pop
aaa
mov
pusha
pop
pop
popa
cmp
nop
mov
sbb
adc
pop
ret
adc
cmp
retf
cmp
mov
and
(bad)
scas
cmp
and
push
xchg
cmps
aas
pop
pop
fisttp
retf
jmp
mov
push
scas
mov
cs
and
mov
mov
sbb
dec
data16
mov
push
and
fwait
out
ins
outs
rcr
ins
stos
cmp
push
aam
xor
sbb
outs
mov
daa
mov
push
push
pop
jns
add
outs
mov
jne
jbe
push
add
movs
ja
movs
dec
and
leave
les
sti
pop
and
retf
imul
xor
pop
mov
lahf
and
enter
cmps
cmp
cmp
ja
les
mov
ds
mov
pop
jno
rol
fs
adc
or
cmp
dec
adc
pop
mov
inc
dec
pop
dec
dec
inc
add
aas
pop
test
pop
sbb
and
push
arpl
push
add
jge
stos
dec
das
pop
retf
jae
pop
mov
scas
rol
aaa
add
pop
jmp
mov
mov
adc
cmps
movs
sbb
add
mov
and
add
fwait
imul
dec
jg
pop
out
dec
xchg
movs
popw
or
pop
jo
adc
sbb
jbe
inc
scas
push
aaa
ins
jecxz
or
dec
or
mov
out
fs
(bad)
cmp
push
sbb
add
popa
pop
push
mov
lods
sub
or
dec
jecxz
jo
ins
adc
lods
pop
or
jae
retf
lahf
rol
das
(bad)
(bad)
(bad)
in
or
outs
daa
push
and
mov
pop
or
jg
iret
add
adc
and
mov
cmc
dec
lds
outs
or
xchg
fs
lahf
inc
test
and
and
(bad)
sub
imul
xchg
outs
jae
ins
push
ins
(bad)
je
(bad)
sub
mov
imul
fbld
dec
inc
push
xlat
inc
mov
inc
jnp
xchg
les
inc
jae
mov
mov
push
push
adc
(bad)
or
lods
out
xchg
lahf
mov
xchg
bound
call
jo
addr16
rcl
fwait
jae
inc
cwde
mov
cmps
xchg
bound
xor
es
out
adc
rcl
inc
out
iret
outs
xor
mov
add
ja
lock
lahf
pop
adc
in
or
or
popa
lds
push
test
adc
jae
sub
ret
lahf
dec
test
add
aad
pop
xchg
mov
adc
pop
scas
push
xor
and
inc
inc
add
das
xchg
test
xor
jg
mov
and
mov
test
sbb
mov
addr16
or
outs
or
add
es
dec
outs
push
add
das
sti
or
jmp
add
inc
lods
cs
dec
les
inc
bound
adc
pop
dec
add
push
adc
mov
and
dec
mov
push
sbb
mov
pusha
pop
out
or
addr16
(bad)
mov
addr16
adc
mov
xchg
(bad)
xor
xor
xor
pop
shr
bound
push
xor
test
adc
shl
sahf
mov
jmp
aad
push
out
pop
sub
mov
mov
scas
xor
mov
mov
mov
movs
fldcw
and
jg
pop
mov
and
test
dec
cmps
iret
push
retf
and
jae
test
bound
rol
test
inc
jecxz
daa
jge
push
retf
stos
out
out
lods
adc
jbe
add
out
xor
scas
ins
jecxz
pop
jo
aaa
mov
fs
ins
(bad)
in
div
outs
ja
aaa
pop
jb
mov
daa
mov
out
mov
out
mov
repnz
dec
imul
(bad)
cmp
mov
out
or
aas
adc
mov
xor
ins
retf
sbb
xchg
mov
mov
xor
(bad)
xchg
mov
das
in
pop
dec
jmp
sub
mov
adc
iret
popa
cs
xchg
cwde
sub
daa
sbb
xchg
inc
mov
mov
das
pop
adc
pop
or
add
pop
leave
xchg
xor
inc
inc
inc
push
mov
dec
(bad)
jb
dec
dec
pop
lock
dec
out
sub
dec
mov
mov
idiv
adc
fist
mov
sbb
addr16
mov
fistp
add
scas
mov
popa
push
popa
in
cs
popa
popa
add
inc
cs
popa
add
sub
gs
in
inc
scas
gs
mov
imul
repz
in
dec
es
outs
iret
outs
sbb
outs
outs
xchg
jbe
adc
push
outs
jne
cs
scas
jne
jne
mov
lds
dec
jnp
data16
jns
add
add
fnstsw
or
xadd
fcmovnb
(bad)
cmp
cmc
inc
add
pop
pop
dec
inc
pop
gs
inc
(bad)
icebp
adc
retf
adc
sub
dec
cmps
test
xchg
(bad)
mov
scas
sub
push
push
inc
push
sbb
push
(bad)
fwait
aam
dec
mov
dec
xchg
ins
inc
cmp
or
jle
pop
push
outs
pop
xchg
sub
(bad)
jg
imul
jb
inc
push
push
pop
ret
dec
push
pop
dec
pop
in
out
xchg
jo
fs
(bad)
mul
push
inc
sbb
ficomp
dec
das
push
push
(bad)
cld
dec
or
imul
test
inc
fdivp
es
add
int3
cmps
test
fadd
test
cmp
iret
clc
cld
fisttp
and
clc
cld
push
xchg
cmp
sti
jbe
push
cmps
pusha
je
jnp
in
and
push
sub
aaa
cmp
movs
add
inc
mov
mov
mov
movs
dec
in
ins
ins
jae
cld
fadd
pop
je
xor
ficomp
daa
push
inc
push
push
ins
inc
dec
jnp
or
nop
movs
or
aaa
sahf
cwde
or
cmps
and
daa
repz
test
fadd
in
add
daa
enter
dec
and
sbb
sub
jnp
xor
repz
pusha
jl
lock
fdiv
add
add
imul
es
mov
push
arpl
nop
sbb
outs
in
je
retf
inc
inc
fsub
xchg
add
sub
cmp
inc
push
inc
imul
in
add
or
jg
push
aam
bound
fisttp
ss
xchg
or
nop
mov
loopne
(bad)
add
mov
add
push
push
test
sbb
mov
mov
pushf
and
fistp
xchg
addr16
je
repnz
sub
loopne
loopne
mov
mov
outs
add
adc
ins
mov
adc
add
nop
cmp
pushf
lods
push
mov
test
loopne
lods
jne
jb
loopne
loope
aam
pop
aaa
jne
pop
aaa
sbb
loope
lods
out
loopne
cmp
pop
in
outs
xchg
sbb
js
div
test
mov
les
cmp
cmp
fwait
or
loop
push
enter
sbb
fs
cmp
repnz
test
test
test
add
lods
jmp
test
mov
lods
add
int3
call
pop
enter
in
mov
in
jbe
lahf
jecxz
pop
mov
inc
cs
ja
loop
nop
out
or
in
lods
pop
dec
lahf
mov
fcom
jecxz
push
hlt
cdq
and
push
ja
add
fdivr
and
in
push
and
les
aaa
and
ja
mov
jnp
in
push
nop
xchg
mov
cdq
je
rcr
dec
mov
in
pop
out
xchg
inc
jg
pop
sbb
test
adc
and
cmp
dec
and
adc
mov
in
push
test
xor
enter
in
sahf
aam
add
push
cmp
out
push
and
push
out
adc
test
bound
nop
nop
inc
push
push
loopne
pop
xor
mov
fadd
lds
fcomp
in
(bad)
(bad)
jnp
lds
adc
and
xor
push
add
adc
jae
iret
jl
jo
pop
ins
in
xchg
pusha
lock
enter
mov
(bad)
popf
nop
out
clc
call
mov
clc
pop
mov
mov
dec
shl
mov
pusha
loopne
or
pop
or
psubb
icebp
xor
mov
pop
dec
push
cs
in
ja
pop
sbb
loopne
enter
pop
sbb
pop
arpl
inc
jmp
call
push
dec
pop
lock
daa
movs
clc
xlat
daa
nop
not
out
fs
add
mov
cmp
ja
ja
(bad)
mov
rol
(bad)
outs
add
les
cmps
mov
xor
pop
push
xchg
daa
out
cmp
pushf
inc
jmp
bound
rcl
mov
dec
or
jmp
xor
inc
cs
fdiv
jmp
cmps
nop
inc
or
mov
xor
inc
pusha
psubb
fs
jmp
pop
sbb
mov
enter
cmps
psraw
lods
mov
adc
fdiv
loop
mov
(bad)
pop
out
mov
and
xor
xchg
xlat
sahf
push
mov
pop
add
cwde
inc
mov
js
ins
jg
loope
fisubr
rol
jb
test
mov
add
pop
fsubr
into
hlt
bound
enter
xchg
jnp
movs
loop
(bad)
in
in
xor
inc
lahf
mov
daa
push
ja
mov
cmp
xchg
rcr
test
pushf
iret
in
add
or
add
out
cmp
popf
in
fadd
call
nop
add
inc
out
sbb
loopne
out
sub
inc
inc
pop
and
shl
jo
cmp
mov
push
popa
add
add
xchg
push
add
pop
pop
(bad)
aam
and
enter
jnp
fs
out
sbb
sub
cmp
inc
dec
and
out
sbb
mov
out
(bad)
out
jl
mov
nop
xlat
xchg
mov
ins
js
mov
out
enter
mov
add
mov
mov
or
sbb
mov
aas
mov
mov
enter
xlat
daa
lock
inc
sahf
xchg
test
mov
adc
inc
pop
fcom
lock
push
lods
aas
pop
xchg
daa
xchg
les
lock
or
sub
inc
add
fsubr
sub
pushf
inc
scas
mov
sub
sub
iret
test
mov
test
cwde
mov
add
je
enter
sahf
fsubr
pusha
adc
repnz
daa
nop
stos
mov
xor
adc
jae
pushf
jo
repnz
and
pushf
add
add
test
pop
movs
shl
pop
(bad)
out
in
lods
dec
fwait
adc
hlt
repz
pop
pop
or
mov
dec
fimul
push
inc
push
push
jnp
in
xchg
outs
xchg
sahf
or
pusha
sbb
enter
test
movs
data16
mov
push
loopne
(bad)
jae
lock
iret
pop
push
pop
int3
inc
mov
cs
pop
jbe
push
hlt
inc
fcmovu
aaa
and
out
pop
aas
mov
xor
mov
push
adc
cwde
push
movs
aaa
inc
add
mov
mov
mov
addr16
add
cmc
sbb
test
pop
ja
pop
in
lods
xchg
dec
jae
pop
fnstsw
add
or
or
push
jl
xchg
sar
push
outs
add
dec
test
sar
shl
mov
mov
dec
mov
test
dec
mov
sub
sbb
ja
shr
xlat
imul
je
rol
out
dec
and
adc
shl
pop
jb
movs
jo
nop
imul
test
out
inc
cs
cmp
or
xchg
out
pop
loopne
jns
jnp
xchg
arpl
pop
enter
movs
arpl
pop
enter
aam
jb
pop
repnz
aam
pop
ss
fdivr
and
clc
cmp
lock
pop
arpl
add
mov
add
push
(bad)
jl
scas
mov
lods
out
mov
adc
mov
xchg
fs
sub
cs
cld
cmps
stc
adc
adc
pop
add
pushf
jle
jo
add
push
push
aaa
ficom
ja
jns
and
inc
stc
mov
lods
shr
pop
dec
mov
in
cmps
test
scas
gs
in
inc
mov
cli
(bad)
cli
cmp
mov
xor
add
push
lods
or
sbb
nop
in
xchg
pusha
add
ss
adc
cmp
daa
cli
clc
sti
or
rcr
xlat
sbb
push
inc
aas
iret
addr16
lock
jl
enter
mov
outs
pusha
(bad)
call
or
push
int3
call
jb
jbe
data16
add
cld
adc
mov
mov
ds
enter
cld
inc
push
push
jo
data16
xor
mov
or
pop
repnz
or
mov
bsf
mov
or
sbb
sub
inc
scas
loopne
scas
mov
or
in
bnd
or
cmps
je
addr16
js
in
movs
mov
pop
mov
xchg
lahf
cmp
hlt
push
inc
mov
in
pop
dec
sbb
or
cmp
dec
sub
add
mov
push
xor
pop
addr16
sub
lahf
mov
and
push
fdivr
lahf
mov
mov
or
call
and
scas
lea
pop
push
jmp
sahf
out
jo
shr
adc
addr16
add
pop
add
test
mov
push
push
add
leave
or
lods
pop
ret
pop
dec
sub
pop
cmp
add
adc
pop
fs
push
mov
xchg
mov
outs
popf
jp
cmps
dec
pop
or
bound
je
fcomp
pop
mov
loopne
pop
sub
jmp
lock
les
cmp
add
pop
push
sub
pop
imul
fdivp
pop
je
test
shl
int3
shl
cld
add
add
fdivr
and
jnp
push
outs
dec
xchg
pop
pop
xor
out
push
js
(bad)
add
out
fisubr
outs
push
mov
imul
repnz
clc
lahf
mov
(bad)
push
jbe
xchg
dec
enter
add
mov
inc
je
xchg
ins
iret
cmp
test
mov
nop
or
test
je
les
jbe
daa
add
call
add
loopne
adc
scas
or
add
push
inc
aas
loopne
out
xchg
(bad)
mov
and
xlat
lods
inc
push
out
inc
add
jo
jne
fnstenv
or
push
lock
inc
es
dec
jbe
(bad)
mov
pop
mov
jecxz
shl
pushf
out
push
add
pop
add
jl
xchg
mov
mov
xchg
in
add
movs
outs
enter
fwait
adc
call
adc
pop
cmps
xchg
out
xchg
dec
int3
xchg
push
push
add
(bad)
ins
push
imul
pushf
imul
jmp
inc
push
mov
dec
enter
dec
call
clc
pop
add
dec
fdivr
outs
xor
sbb
inc
sahf
or
pop
xor
or
xchg
out
pushf
test
loop
nop
add
(bad)
fimul
fiadd
fadd
hlt
(bad)
pusha
pop
add
pop
xor
scas
int3
loopne
or
or
inc
pusha
fistp
(bad)
jbe
ins
or
and
add
jb
(bad)
sub
iret
test
mov
nop
xchg
ins
sub
pusha
mov
add
adc
mov
dec
adc
mov
xor
xchg
movs
sbb
or
xlat
out
mov
add
dec
movs
push
nop
in
ja
mov
add
mov
fcomp
fimul
cld
cmps
dec
dec
mov
pop
out
xchg
mov
sbb
repz
enter
push
push
pusha
(bad)
(bad)
jbe
inc
add
dec
and
mov
subps
mov
in
inc
xor
loope
iret
enter
jge
mov
sub
stos
lea
inc
aas
mov
cmp
jnp
(bad)
cld
inc
repz
or
dec
lods
daa
mov
mov
aaa
in
adc
test
lods
nop
pop
add
add
or
or
push
sub
fist
adc
dec
xchg
ja
out
inc
lock
pop
pop
das
or
push
je
cdq
pusha
arpl
(bad)
pop
mov
inc
sahf
and
mov
movs
mov
sbb
or
or
adc
add
in
mov
xchg
or
pop
jb
or
jnp
cs
or
pop
sbb
add
pop
pop
in
add
jo
fsubr
cmp
fild
xchg
test
fsubr
and
nop
imul
xor
inc
xchg
sub
and
(bad)
jae
push
jo
push
or
test
or
xor
shl
xchg
mov
add
dec
enter
(bad)
nop
mov
in
outs
mov
in
inc
out
daa
out
inc
test
add
ins
aas
(bad)
push
xchg
push
repnz
jno
inc
ds
xchg
mov
ja
aam
in
dec
add
les
adc
scas
mov
xor
inc
push
adc
pusha
dec
cmp
rcl
push
mov
add
(bad)
ss
and
scas
mov
and
jno
sub
adc
adc
push
and
mov
add
cmps
jb
or
mov
push
and
inc
dec
mov
and
dec
add
test
mov
adc
add
or
push
fsubr
fstp
inc
adc
mov
sbb
xor
fadd
imul
or
je
cwde
dec
rcr
jb
lahf
jg
test
fmul
fdiv
adc
mov
data16
add
call
xor
inc
mov
jb
ja
mov
daa
jae
dec
add
lods
sbb
outs
cwde
push
sub
inc
out
or
mov
je
pop
xor
(bad)
ficom
in
in
aas
(bad)
aam
nop
int
daa
lock
adc
xchg
inc
scas
loopne
cmp
lock
daa
cmps
out
xchg
je
push
pop
stos
js
mov
push
add
push
repnz
fcom
pop
enter
adc
ja
sbb
xor
pop
pushf
imul
out
das
add
adc
fwait
inc
pop
leave
bound
add
push
enter
xchg
sar
out
test
push
adc
sbb
sbb
add
les
xchg
lock
mov
dec
movhps
nop
pop
and
iret
lock
xchg
jne
add
mov
(bad)
jne
outs
call
or
mov
in
jl
mov
cmps
pop
dec
push
pop
js
or
push
pop
push
cmps
jle
mov
add
adc
dec
fisubr
dec
add
call
pop
xchg
ss
dec
jne
outs
xchg
test
call
push
xor
call
out
sahf
sbb
jl
rol
or
bound
(bad)
mov
in
rcr
xor
fcomp
xchg
push
sbb
add
neg
sbb
and
pop
enter
push
daa
add
imul
sbb
pop
inc
add
push
fsub
cmp
fsub
ja
in
aas
sbb
in
cmc
ins
push
sbb
aas
ja
pop
enter
cmp
sbb
movs
or
pop
cs
add
pop
outs
test
(bad)
push
out
shl
or
fidivr
sbb
xchg
fld
jns
js
cmp
pusha
iret
sbb
pop
sbb
add
shl
(bad)
or
scas
shl
xchg
and
ja
loopne
pop
mov
mov
rol
in
pop
lods
das
sbb
add
inc
pop
sbb
sbb
cmps
inc
call
sub
call
push
pop
scas
js
iret
sub
dec
mov
test
pop
enter
lahf
mov
out
(bad)
icebp
fsub
iret
inc
es
dec
push
add
out
sbb
push
pushf
pusha
cmp
mov
dec
in
ja
nop
push
pushf
xchg
aam
cwde
icebp
pushf
nop
cmp
iret
(bad)
inc
leave
aas
sbb
add
mov
push
sahf
xor
mov
push
das
jo
nop
in
adc
jns
jle
js
xchg
cmp
mov
scas
pushf
and
inc
xor
mov
jae
in
push
call
loopne
xchg
xor
adc
pop
pop
jns
inc
push
nop
loopne
push
mov
xor
jp
sub
outs
test
cwde
jg
dec
adc
addr16
int
test
jp
call
pop
enter
inc
add
pop
inc
push
and
and
repnz
xor
inc
add
adc
data16
fs
and
jmp
fs
sbb
(bad)
test
push
test
enter
jl
mov
xchg
add
push
out
test
adc
sub
xchg
inc
jg
in
mov
push
xor
jnp
popf
sub
mov
les
nop
daa
jnp
add
fdivp
and
sbb
rcr
push
add
pop
dec
jle
and
push
js
xlat
ss
push
sub
jnp
imul
sar
and
lock
inc
aaa
push
das
and
or
nop
add
fwait
inc
lock
mov
cmp
repz
or
and
mov
jbe
xor
aam
test
xchg
mov
mov
pushf
mov
inc
in
int
and
clc
mov
popf
nop
and
cmp
and
push
cmps
jl
shl
dec
(bad)
mov
xchg
dec
nop
xlat
sahf
adc
mov
add
cwde
loopne
arpl
inc
cmps
and
push
clc
aas
daa
fs
adc
mov
sub
cmp
inc
daa
mov
mov
int3
je
cs
test
mov
fmul
push
loopne
call
inc
sar
adc
jns
and
xor
jbe
in
or
cmp
fisub
xchg
adc
cmps
js
adc
inc
pcmpeqb
jnp
sahf
or
in
fadd
and
add
mov
xor
daa
inc
dec
mov
repnz
enter
jl
pop
and
mov
sbb
fdiv
pushf
in
jle
enter
pop
inc
sub
and
nop
adc
mov
xchg
inc
sub
and
mov
push
add
(bad)
add
pusha
test
shl
es
pop
dec
lahf
sub
test
mov
add
push
sub
or
mov
in
and
sub
nop
mov
je
mov
jnp
adc
mov
push
lock
out
push
cmp
xor
hlt
stos
sbb
sub
sbb
or
scas
hlt
inc
aaa
xor
daa
js
or
loop
xchg
cwde
lock
fisttp
push
adc
push
fdiv
fimul
xlat
shl
sub
xor
shl
cmps
in
test
jmp
jo
jl
adc
cmp
lods
mov
jb
or
clc
lahf
sub
push
sub
add
mov
lahf
cmp
inc
mov
sub
les
xchg
into
je
imul
mov
jno
shl
in
test
sub
pop
enter
or
fidivr
add
mov
sub
aad
inc
push
movs
xor
mov
lahf
test
adc
sub
push
sar
(bad)
push
add
aam
inc
cmp
cs
xchg
movs
je
in
out
nop
movs
mov
enter
mov
rol
in
push
mov
cmps
shl
jnp
and
das
and
xor
inc
outs
xchg
or
daa
mov
das
jo
js
(bad)
jecxz
enter
inc
sar
push
jmp
mov
xor
inc
lods
bound
push
and
jo
imul
pop
xchg
js
fs
pop
bnd
push
cmp
pop
pushf
mov
jb
inc
iret
int3
call
xchg
loopne
mov
rol
fidiv
sub
inc
or
mov
jle
push
xor
nop
mov
cmp
xchg
mov
mov
push
fdivr
xor
scas
mov
xor
xor
pop
xor
in
nop
out
fs
inc
cs
or
push
or
enter
push
sar
add
mov
jns
jae
xor
pop
outs
xchg
test
push
add
jo
or
outs
inc
outs
sbb
push
shr
fiadd
mov
call
xor
sub
jg
iret
lock
add
push
aam
mov
test
ja
fmul
mov
push
scas
mov
pushf
test
lahf
xlat
jnp
repz
cmp
fsub
sub
mov
(bad)
push
adc
lahf
mov
or
sub
iret
xor
js
(bad)
iret
test
iret
mov
lahf
(bad)
push
hlt
out
fimul
and
mov
jns
int3
mov
ret
or
push
je
pop
lahf
adc
inc
rol
ins
nop
add
movs
push
dec
sbb
mov
pop
pop
es
add
dec
jle
sbb
enter
in
cmp
jg
xor
cmp
cdq
fcomp
xlat
addr16
loopne
ja
aam
aaa
js
enter
pop
inc
add
dec
xchg
mov
shl
pop
enter
mov
inc
inc
jae
cmp
cmp
xchg
(bad)
cdq
mov
cmps
test
enter
inc
fs
je
test
mov
adc
in
popf
test
cmp
jae
adc
(bad)
cmp
or
xor
xchg
in
in
daa
dec
loope
(bad)
cmp
pop
aaa
inc
push
int
xchg
jg
mov
sbb
stos
jp
mov
pop
add
sub
in
pop
adc
pushf
cmp
cmp
dec
mov
ja
ins
adc
rcr
or
pop
push
jo
pop
add
pop
ja
inc
sub
enter
mov
mov
test
cmp
mov
in
jge
inc
mov
sbb
fdivr
jbe
lahf
and
repnz
cmp
jno
les
jg
enter
pop
mov
mov
rol
mov
mov
jbe
cwde
clc
scas
cmp
cmps
adc
pushf
daa
les
and
mov
loope
cmp
aaa
rcl
aam
mov
cmp
in
lods
in
mov
(bad)
mov
pop
repnz
in
rcl
enter
in
ror
ins
dec
mov
rol
push
push
ja
bound
pop
lahf
(bad)
pop
and
add
jg
dec
mov
add
fs
iret
mov
in
or
nop
sub
fmul
jb
ds
outs
iret
test
xchg
mov
xchg
mov
mov
jns
in
push
shl
in
or
fiadd
sbb
aas
sub
dec
xor
aad
push
fs
jns
ins
xchg
mov
test
xchg
dec
jo
mov
aas
int3
ror
dec
xchg
xlat
popf
nop
add
or
add
mov
push
xor
mov
test
mov
mov
sbb
pushf
adc
mov
lods
push
out
inc
inc
push
loopne
or
lahf
shl
enter
inc
adc
push
add
pop
sub
cmp
mov
xchg
pop
pop
or
iret
ins
js
pop
xchg
xchg
sar
push
ins
mov
ror
ret
mov
mov
lds
js
ja
test
inc
inc
and
enter
mul
push
aaa
mov
pusha
fild
push
mov
aad
cwde
fistp
iret
adc
dec
aas
jnp
xchg
js
ins
aas
imul
fadd
sub
push
inc
in
into
inc
add
add
jo
daa
scas
ja
ja
cmps
inc
dec
inc
push
and
jns
je
daa
fldcw
shl
xchg
ss
add
shl
mov
push
enter
inc
mov
add
dec
mov
ja
js
dec
addr16
pop
push
fs
pop
enter
add
mov
inc
lock
dec
inc
movs
rol
test
dec
or
in
xchg
cld
lock
or
cld
aad
mov
jle
scas
sub
les
inc
pusha
push
jo
xchg
(bad)
jbe
inc
add
fadd
test
mov
inc
movntq
out
jns
call
aas
lea
pop
fiadd
jg
test
mov
cmp
push
cmps
test
jb
inc
sub
xor
test
enter
aam
xchg
cmp
in
loopne
aaa
and
aam
es
sub
inc
cmp
push
jmp
xor
scas
hlt
pop
add
and
inc
nop
push
movs
xor
sbb
in
nop
or
dec
push
aam
and
dec
lods
mov
mov
outs
xchg
call
dec
push
xchg
or
cmps
je
dec
dec
iret
(bad)
adc
out
dec
fadd
cmp
add
sub
enter
sub
xor
cmp
dec
mov
mov
fbstp
je
mov
push
add
mov
inc
dec
enter
adc
idiv
xor
push
xor
loopne
xlat
inc
imul
add
fimul
push
mov
add
xor
mov
nop
daa
mov
out
dec
int3
push
in
xor
fisub
mov
out
inc
in
ja
sub
cmp
pop
enter
jmp
js
mov
pop
enter
add
pop
repnz
sub
movs
push
cmps
out
daa
xor
push
sub
fidiv
xchg
out
rol
ins
push
test
pop
add
mov
bound
test
pop
xlat
mov
enter
push
in
mov
xor
nop
jg
add
and
dec
inc
jb
dec
dec
xchg
rol
xchg
xchg
aam
or
and
mov
mov
fsubr
sub
xchg
ins
dec
adc
enter
dec
adc
add
test
push
cmp
pop
add
pop
outs
xchg
xor
jl
enter
cwde
xor
and
dec
dec
and
jns
xchg
pop
dec
mov
nop
jl
call
in
dec
call
loope
nop
adc
pusha
xchg
pusha
das
or
dec
jo
mov
cwde
add
inc
sahf
or
aad
out
loopne
pop
cli
es
scas
mov
xchg
lock
(bad)
out
and
inc
jg
lds
mov
cdq
fadd
sub
ja
push
mov
xchg
pop
add
or
int3
callw
mov
xlat
rol
enter
(bad)
cmp
fwait
sbb
adc
cmp
or
sub
pop
xchg
loopne
fist
lahf
(bad)
movs
sbb
sub
push
pushf
push
mov
xor
pop
add
mov
in
push
fcomp
push
or
scas
in
(bad)
out
inc
in
xchg
push
dec
cmp
fs
xchg
in
test
imul
xchg
sbb
push
repnz
rcr
cs
icebp
addr16
mov
cmp
cmp
or
push
or
aas
pusha
push
daa
imul
xchg
pusha
aad
sbb
outs
(bad)
outs
fst
addr16
mov
daa
xchg
(bad)
mov
pushf
and
aam
xchg
mov
pop
inc
mov
ins
cs
(bad)
lods
push
sbb
add
xor
lods
push
cmp
mov
xchg
les
fimul
mov
ins
or
push
xchg
js
daa
push
int3
push
call
scas
add
popf
nop
int
xchg
adc
sbb
daa
nop
push
in
push
inc
mov
adc
sbb
jae
inc
jmp
inc
out
push
test
pushf
push
pop
sub
push
and
adc
cmps
(bad)
ins
(bad)
(bad)
mov
loopne
push
or
and
add
data16
loopne
sub
dec
dec
push
pusha
pop
cwde
add
bound
jg
sub
in
nop
nop
mov
mov
in
inc
call
xchg
push
add
add
pop
add
je
fisttp
push
inc
push
(bad)
imul
xchg
scas
cwde
call
ins
lods
jae
daa
mov
imul
xor
mov
fs
and
jnp
mov
push
out
fimul
cmps
mov
xor
jb
dec
cmps
mov
iret
test
xchg
lods
nop
jl
cwde
nop
or
and
nop
jl
mov
pop
fcomp
call
inc
ss
rcr
pop
sub
in
jb
cmp
mov
mov
dec
mov
cmp
push
scas
adc
pop
shl
daa
jns
int3
scas
adc
mov
nop
out
inc
cld
pop
or
add
xchg
inc
cld
shr
dec
pop
xchg
pop
adc
shr
pop
inc
lock
(bad)
mov
ins
fisubr
inc
add
cwde
mov
in
adc
cld
nop
add
call
pop
add
sub
jmp
in
enter
fs
add
jnp
aas
mul
(bad)
(bad)
mov
pop
icebp
and
jae
adc
mov
enter
out
in
(bad)
cld
jl
jns
div
lahf
pop
ins
jae
daa
nop
jl
dec
nop
pop
repnz
enter
nop
iret
test
test
jb
ja
cld
xchg
or
test
pop
enter
and
or
xchg
dec
or
pusha
daa
outs
mov
or
mov
add
outs
sbb
push
je
mov
dec
or
and
add
cmp
mov
xchg
jne
call
inc
lea
cmpxchg
or
pop
dec
push
fs
pop
ins
pusha
pop
dec
pop
xchg
mov
xchg
xchg
xchg
test
mov
idiv
push
push
pop
mov
cmp
push
xchg
pop
das
imul
cmp
pop
adc
not
cdq
cmps
pusha
and
rcr
call
enter
mov
add
fdiv
fsubrp
add
mov
pop
push
sub
mov
jg
mov
enter
lahf
add
jg
xor
cmp
or
sbb
add
daa
iret
test
mov
leave
xor
aaa
add
cmp
adc
pusha
pusha
lock
mov
enter
lahf
popa
and
adc
jo
(bad)
xor
fstp
cwde
and
adc
dec
fisub
cwde
add
pop
inc
jp
lock
mov
cmp
ja
cmp
jl
mov
bound
bound
pop
adc
mov
pop
repnz
jg
and
cmp
and
push
jmp
inc
adc
xor
inc
movs
or
arpl
add
test
bound
dec
arpl
repz
arpl
test
or
dec
jo
in
mov
je
arpl
sbb
inc
callw
inc
or
dec
ror
fs
out
gs
pop
dec
lahf
mov
jns
ja
mov
jo
fwait
sub
fisub
xchg
in
data16
mov
inc
push
mov
(bad)
aam
mov
adc
les
mov
adc
and
xor
ins
dec
dec
and
in
lea
mov
add
cwde
movs
mov
out
mov
dec
sbb
mov
jns
add
push
cmp
add
sub
test
mov
(bad)
int
pusha
xchg
mov
push
cmp
push
nop
test
dec
adc
in
xor
xchg
jb
dec
dec
test
rcl
and
cmp
inc
sbb
xchg
in
in
add
mov
addr16
mov
ja
je
or
ss
mov
dec
pop
add
add
(bad)
fbld
pushf
sub
sub
mov
mov
mov
sub
pop
out
iret
push
and
jns
xlat
addr16
loop
inc
scas
cld
mov
ss
lods
pop
xchg
pop
outs
outs
add
lahf
xchg
xchg
xchg
cmp
call
mov
dec
inc
jo
adc
adc
push
adc
pop
add
dec
in
pop
enter
inc
scas
imul
mov
enter
cwde
pop
sbb
jne
imul
push
mov
inc
cld
push
mov
pop
push
in
ret
jae
out
fadd
ins
pop
and
fadd
mov
pushf
pop
push
push
shl
enter
add
adc
pop
imul
test
pop
sbb
add
mov
mov
imul
or
dec
inc
push
imul
pushf
mov
or
test
ins
or
adc
pop
or
cmp
enter
pop
jb
adc
dec
test
push
cmp
and
daa
inc
jns
ja
rcl
push
cs
es
dec
mov
ja
or
adc
(bad)
cld
fisttp
fiadd
(bad)
push
push
enter
addr16
outs
xchg
push
cmp
ins
mov
das
jbe
pop
int3
paddusb
add
push
dec
and
adc
outs
sbb
jg
mov
xchg
mov
or
fsub
inc
aas
les
or
mov
push
call
add
lock
sbb
dec
pop
jno
lahf
out
mov
repz
repz
jp
shl
jns
out
pop
mov
lahf
clc
sbb
arpl
jns
pop
sub
sub
adc
adc
sahf
out
inc
ins
mov
xor
cmp
rcl
mov
jns
cmps
sub
adc
repz
xor
fs
out
sahf
sub
retf
out
adc
iret
repz
mov
sahf
out
cmp
mov
addr16
shl
push
jp
(bad)
jns
out
push
iret
repz
sbb
pop
or
xor
push
mov
iret
repz
ins
xchg
fidiv
ins
xor
out
imul
(bad)
retf
out
outs
out
sahf
cmps
aas
ins
nop
mov
iret
repz
adc
cmp
stos
out
dec
repz
jno
mov
or
mov
icebp
push
jae
adc
out
jno
scas
retf
cmp
repz
ss
out
ds
leave
push
jbe
ins
lahf
out
sahf
mov
ja
iret
repz
push
js
fstp
out
(bad)
aas
js
xchg
mov
out
jns
das
jp
repz
out
xchg
mov
repz
cmp
mov
or
cs
mov
jl
jge
jne
fdivr
stc
or
imul
iret
shr
ins
and
jns
iret
repz
or
xor
out
out
daa
adc
call
test
out
xchg
(bad)
call
cmp
repz
retf
xchg
xor
cmps
xor
cmp
iret
or
popfw
iret
repz
in
mov
mov
or
cmp
repz
or
out
icebp
das
lea
adc
fisub
adc
repz
nop
jbe
mov
out
sahf
out
xchg
pop
xchg
or
aaa
fs
(bad)
stc
sahf
out
ds
aas
ins
pop
ds
sar
cs
xchg
xchg
jl
out
push
test
cmp
shl
pusha
mov
stc
repz
out
xchg
gs
adc
dec
push
call
jns
popa
(bad)
mov
or
cmp
fs
stos
jecxz
pushf
repz
ja
push
mov
cmp
imul
cmps
fistp
ins
nop
mov
push
mov
mov
inc
mov
stc
cmp
out
push
xchg
icebp
and
sahf
(bad)
fistp
test
jns
movs
dec
ins
fist
jl
iret
repz
iret
jmp
cmps
sahf
cmp
repz
or
sahf
cmps
stc
jge
test
out
sbb
imul
(bad)
push
stos
xor
jl
out
xor
xor
iret
mov
push
scas
mov
shl
pop
scas
cmp
repz
cwde
(bad)
in
sub
iret
mov
or
lahf
out
out
mov
shl
call
(bad)
iret
repz
pop
mov
and
call
mov
iret
repz
mov
repz
push
pop
sub
ds
ds
sar
push
and
ins
and
sahf
cmps
stc
sbb
jns
repz
mov
loope
out
neg
rol
aam
shl
repz
mov
fucom
jns
out
ret
mov
jp
sar
loopne
les
popa
(bad)
sahf
cmps
stc
cmp
sbb
dec
xchg
aad
jns
jns
sub
inc
push
mov
int
mov
out
call
leave
call
cmp
pop
xor
out
test
repz
repz
test
sahf
out
int3
outs
xchg
retf
out
cmp
cmp
mov
jns
dec
imul
out
xor
mov
ror
cmp
out
(bad)
sti
cmp
push
stc
push
sar
pop
(bad)
(bad)
int
neg
sar
mov
aam
jns
cmps
pop
pop
out
aad
stc
cmp
jbe
iret
adc
pop
jns
jns
mov
push
mov
xor
out
fisttp
fadd
out
ds
mov
add
cmp
jl
cmps
fild
fisub
repz
(bad)
cld
cmp
pop
cmp
repz
inc
fsubr
mov
out
push
fnsave
xlat
repz
repz
xor
fcomi
jns
out
fild
cmps
stc
cmp
ss
lds
loope
iret
sar
mov
loop
outs
cmp
jns
jecxz
fist
in
add
in
add
into
push
xchg
pop
out
cmp
rol
ret
out
call
jno
repz
arpl
scas
fisttp
inc
dec
repz
jb
iret
adc
inc
ins
sahf
out
cmp
aad
in
cmp
jns
sar
sub
dec
stc
cmp
repz
shl
and
repz
cmps
push
jnp
fnstcw
out
out
ds
cmps
jmp
lock
jnp
sar
retf
sbb
cmp
cmp
pop
repnz
mov
jl
repz
(bad)
jl
cmps
stc
sub
addr16
rcl
inc
jb
mov
sahf
cmps
dec
jl
out
mul
repz
cmp
mov
jns
cdq
(bad)
jmp
stc
dec
js
out
cmp
fld
cli
xor
lahf
out
xchg
in
sti
cmp
push
mov
jl
out
shl
std
xor
cwde
in
cmp
jl
mov
or
cmp
repz
cmp
and
sbb
push
nop
(bad)
call
ror
repz
hlt
sub
popa
lahf
ret
out
ds
jns
loope
add
cmps
stc
xor
add
dec
repz
add
xor
jns
out
mov
sbb
sahf
out
shl
inc
or
repz
push
or
aam
sahf
out
sti
or
mov
jmp
or
mov
call
cwde
jns
stc
sahf
enter
or
cmp
repz
jno
loopne
setbe
js
call
int
jns
loope
adc
imul
clc
sub
jnp
cmp
out
sub
popa
and
sbb
retf
into
call
mov
repz
jge
sbb
push
mov
repz
pop
mov
sti
inc
sbb
imul
inc
sbb
cmp
and
mov
jns
jnp
cwde
mov
and
xchg
fimul
jns
sbb
push
lock
imul
sub
out
cmp
enter
sub
adc
xchg
clc
and
ss
ja
push
rcl
adc
jno
ds
fcom
mov
repz
jmp
ficomp
dec
repz
xor
lock
sti
cmp
push
ss
push
or
pusha
out
dec
repz
ss
push
rcr
cmp
jmp
sar
cmp
cmp
fwait
iret
sar
xchg
retf
pop
aas
sub
fldcw
inc
push
inc
add
jge
out
fild
push
pop
dec
mov
jge
dec
xchg
push
mov
ss
dec
loop
dec
mov
dec
repz
out
dec
xchg
xor
js
fnstcw
repz
push
es
lds
jl
pushw
push
pop
loop
pop
or
xor
cmps
cwde
loopne
pop
stos
dec
pop
sahf
int
mov
pusha
mov
(bad)
sti
arpl
out
fstp
shl
jle
push
mov
sahf
data16
imul
cmps
pusha
test
jno
jb
repz
int
sbb
pop
jbe
jns
sub
jge
dec
mov
sbb
test
xchg
sahf
fldcw
mov
xchg
mov
addr16
mov
cld
out
fisub
mov
cmp
mov
mov
fidivr
into
sahf
int
popf
iret
push
push
es
(bad)
mov
xlat
push
(bad)
vdivsd
mov
icebp
imul
out
dec
loope
fcmove
push
loop
in
sbb
add
jg
mov
add
call
test
adc
cmp
and
enter
pop
aas
aaa
and
pop
mov
mov
outs
inc
aaa
jns
lods
in
add
sbb
pushf
ins
xchg
nop
xchg
enter
push
dec
inc
dec
add
jg
xchg
mov
(bad)
ja
nop
pop
mov
fs
mov
dec
jb
add
mov
ja
push
in
xlat
(bad)
jae
push
dec
test
iret
push
xor
in
jbe
ffreep
iret
daa
cmps
adc
nop
xchg
sbb
push
leave
ror
aas
int3
scas
cmp
mov
aas
into
imul
pushf
dec
dec
and
cld
adc
sar
into
add
cmp
dec
jb
loopne
pop
dec
jb
adc
lods
pop
jb
mov
fdiv
pushf
pop
call
dec
dec
test
dec
jno
mov
add
pop
xor
add
gs
pop
(bad)
loopne
je
or
xlat
jmp
lea
mov
mov
in
ret
and
test
(bad)
jg
leave
or
adc
mov
in
and
test
push
mov
push
mov
xor
loopne
mov
xchg
pushf
in
dec
adc
cmp
and
inc
pop
dec
add
push
jo
mov
popf
in
repnz
(bad)
xchg
and
mov
inc
dec
adc
fcom
push
add
jo
xchg
push
push
xchg
test
daa
sbb
xlat
in
test
dec
in
xchg
pushf
loop
idiv
dec
xchg
dec
enter
inc
enter
pop
sbb
pop
rcl
inc
clc
iret
adc
daa
sub
jp
and
jns
jl
pusha
mov
js
aam
dec
pop
sub
xor
iret
mov
sub
push
retf
nop
xchg
mov
add
push
lahf
in
and
cmc
add
add
add
pushf
dec
dec
xor
dec
inc
or
daa
dec
push
dec
add
cmps
sti
or
(bad)
in
test
lahf
mov
or
scas
mov
sbb
add
push
push
aaa
cmp
jmp
daa
addr16
add
pop
push
ss
and
fnstsw
mov
aam
sbb
mov
pop
(bad)
std
ins
xchg
mov
mov
shr
mov
outs
mov
and
lods
loope
(bad)
out
push
lahf
jg
outs
adc
pop
stos
dec
fnsave
mov
out
push
repz
dec
jb
loopne
cmp
mov
inc
inc
outs
in
jbe
repnz
ja
lahf
dec
jg
jns
or
mov
popf
mov
inc
pop
jb
push
jp
sub
das
in
dec
ret
lods
add
push
mov
test
jmp
loopne
lea
(bad)
je
rcr
mov
xor
aas
in
lock
mov
dec
xchg
sub
aad
jo
pop
aas
inc
rcl
das
(bad)
in
ror
sbb
sbb
and
iret
add
mov
xlat
or
mov
sbb
mov
xor
in
out
jge
iret
or
push
dec
xchg
iret
inc
pop
push
xchg
push
out
dec
jb
enter
add
add
ja
cmp
outs
xchg
mov
call
or
and
xchg
das
addr16
repnz
cli
add
add
out
push
sub
pop
jb
push
mov
cmp
inc
jae
push
jnp
mov
mov
dec
into
fnstenv
add
call
xchg
pushf
dec
inc
fs
and
inc
pop
push
dec
ret
and
jo
outs
inc
repnz
xchg
inc
jb
in
leave
xchg
fwait
add
mov
lea
mov
mov
inc
jb
(bad)
xchg
js
or
ret
inc
jb
sub
push
xor
sbb
xchg
rcl
fld
xchg
mov
mov
dec
cmovle
add
xchg
adc
push
mov
aas
push
push
dec
rcl
pop
jg
pop
push
sbb
fst
pop
add
cmps
aaa
xchg
sar
repnz
cmps
movs
and
add
rcl
jb
push
xchg
pusha
push
sbb
ins
push
and
mov
iret
enter
xchg
jbe
(bad)
hlt
addr16
leave
leave
movs
lods
xchg
sub
pop
adc
xchg
and
ficomp
int3
sahf
loop
pop
jmp
add
call
xchg
mov
dec
in
adc
and
xchg
movs
rcl
add
ror
jb
jmp
ins
jns
pop
and
sub
sbb
(bad)
aaa
add
xchg
in
xchg
cmp
aas
lds
loopne
outs
aas
pop
jp
jae
add
cmp
push
lods
push
inc
dec
dec
inc
jo
daa
int
xchg
or
in
rcr
jb
loop
int3
mov
jns
dec
xchg
pop
inc
pop
dec
dec
dec
and
xchg
mov
jbe
push
test
adc
cmps
(bad)
repnz
xchg
enter
adc
push
xchg
in
push
fcom
pop
and
pop
sub
xchg
xchg
pop
cwde
ins
cwde
xor
push
call
jg
neg
jno
jns
aas
clc
sub
dec
dec
cvtps2pd
and
and
push
pop
cmps
or
push
pusha
rdtsc
arpl
sar
mov
nop
dec
dec
jo
call
call
push
movs
ror
mov
mov
mov
mov
xchg
pop
shr
add
or
nop
pop
jno
inc
mov
dec
add
daa
sub
stc
mov
jno
pop
add
unpckhps
das
out
pushf
pushf
jne
es
pop
pop
popa
daa
minps
fwait
nop
addr16
xchg
in
xor
fwait
les
in
adc
movs
and
cmps
sbb
jb
mov
bsr
enter
leave
sub
fiadd
inc
sbb
in
cs
nop
inc
leave
cmp
mov
jmp
in
and
popf
add
adc
xchg
cmp
pop
jg
pop
jg
ins
retf
mov
push
mov
rcr
das
dec
and
xchg
pop
adc
sub
mov
mov
xchg
adc
sahf
sbb
add
and
aas
pop
xor
jl
mov
dec
pop
pop
data16
mov
rcl
lahf
or
pop
and
pop
sub
and
pmulhuw
out
inc
jo
lahf
pop
addr16
daa
pop
or
adc
pushf
xlat
lahf
fdiv
in
out
mov
fadd
cmp
pop
add
push
xlat
mov
push
sub
outs
subps
push
test
pop
enter
lods
pop
mov
jnp
push
mov
push
dec
push
mov
in
fxch
add
(bad)
add
add
dec
jb
pusha
sbb
mov
mov
mov
pusha
gs
jo
jnp
or
mov
mov
cmp
fadd
out
hlt
xchg
popa
or
and
add
sbb
pop
xchg
in
in
add
pushf
out
in
and
cs
xchg
add
repnz
in
push
jb
dec
mov
pusha
rcl
cmp
jbe
dec
cmps
bound
dec
jae
xchg
out
in
add
pushf
in
or
cmps
scas
ja
addr16
daa
pop
rcr
fbld
push
or
(bad)
jmp
fistp
arpl
enter
add
sub
(bad)
xchg
fnstenv
dec
xlat
or
outs
jp
jnp
mov
fwait
add
cmps
into
jo
jnp
push
pop
mov
rol
leave
dec
movs
and
xchg
mov
push
pop
xchg
pop
xor
sbb
sub
jbe
(bad)
movs
lods
pop
mov
add
cmps
cmps
add
shr
mov
leave
cmps
xor
xchg
dec
scas
xchg
data16
test
scas
loopne
adc
cmps
add
test
scas
cmps
cmp
xchg
cmp
cmps
dec
pop
xchg
movs
daa
xchg
pop
mov
scas
nop
mov
adc
gs
and
pop
add
add
cmps
call
or
cs
scas
xchg
inc
test
dec
or
cmp
mov
add
or
daa
add
fild
ja
daa
comiss
cld
sub
and
shr
cdq
test
scas
mov
jae
cwde
stos
popf
call
mov
test
in
lock
add
(bad)
icebp
xor
mov
cmp
fild
add
cmc
dec
push
stos
dec
stos
cmp
dec
jb
loopne
retf
les
dec
in
mov
or
test
(bad)
stos
cmp
sbb
sub
sbb
push
jo
pop
mov
cmp
daa
enter
fldenv
and
les
mov
mov
lods
mov
adc
sub
mov
dec
xchg
dec
cs
stos
cs
and
ret
pop
repnz
mov
enter
dec
shr
mov
cs
lods
lock
jl
(bad)
ins
aad
daa
dec
push
retf
mov
jg
push
mov
sub
loope
pop
iret
push
retf
fisub
std
das
rol
xor
or
outs
das
daa
stos
iret
push
aaa
in
sbb
ja
test
xchg
xchg
out
bound
ror
hlt
push
mov
mov
in
and
pmaxub
rol
scas
adc
fiadd
imul
xor
add
outs
lahf
add
jb
jb
dec
(bad)
xor
jb
jb
sbb
or
jb
jb
pop
pop
rcr
das
mov
mov
mov
sti
and
push
push
add
adc
pop
add
and
int3
or
(bad)
push
mov
inc
les
aam
nop
pushf
in
push
mov
pop
leave
and
mov
pop
leave
and
adc
nop
imul
mov
xchg
mov
leave
inc
jb
push
mov
jle
leave
inc
jb
cmps
ins
inc
jb
inc
rcr
ins
add
and
mov
xchg
pop
jb
or
pop
jb
je
mov
loopne
mov
xchg
adc
push
inc
in
mov
mov
ins
sub
in
mov
xchg
int
outs
add
and
sub
inc
fcomp
adc
popf
ja
inc
and
addr16
aas
rcl
scas
mov
das
mov
out
xchg
out
js
or
daa
mov
mov
outs
div
add
inc
movq
adc
sbb
mov
lods
mov
aaa
shl
in
mov
mov
pop
mov
sbb
in
not
out
dec
add
cs
imul
outs
mov
xchg
pop
push
adc
cmps
mov
daa
sub
add
loopne
in
xchg
add
add
add
mov
sbb
or
inc
or
adc
xchg
push
mov
xchg
(bad)
jb
enter
add
mov
mov
xchg
and
or
or
or
or
or
in
or
push
jl
aas
dec
jb
cmp
xor
fstp
cmp
mov
adc
mov
xchg
and
lahf
in
in
not
and
xor
jo
cmp
push
js
scas
mov
pop
jo
(bad)
jb
sub
imul
pop
and
cmp
push
mov
jae
mov
rol
and
xchg
in
leave
jl
add
xchg
das
popf
pop
pushf
in
popf
mov
fs
dec
jne
std
push
or
mov
pushf
pushf
dec
je
cmp
xchg
and
andps
bound
add
jle
mov
call
dec
add
frstor
mov
sti
call
push
jne
and
xchg
cmps
data16
mov
mov
mov
fild
cwde
dec
jbe
push
or
pushf
pop
and
jo
ss
pop
and
movs
pop
fs
xor
fild
dec
cmp
leave
lahf
cmps
mov
add
pop
jns
dec
in
(bad)
scas
(bad)
in
xchg
stos
mov
leave
mov
clc
cmp
jo
mov
ja
push
sub
and
pop
jmp
mov
sahf
aam
dec
push
dec
out
xchg
mov
inc
sahf
pushf
(bad)
(bad)
and
push
vmread
(bad)
mov
push
pop
dec
jnp
push
or
sahf
les
pop
and
cmps
js
inc
mov
js
js
js
js
in
xchg
and
js
js
push
repnz
add
jns
rcl
xchg
xor
aas
test
cmp
cmp
push
push
jns
sar
and
mov
bswap
xchg
add
sbb
repnz
out
sub
in
push
rol
retf
sub
ja
inc
cs
sub
test
test
push
fnstsw
movs
sahf
shr
int3
ficomp
ja
inc
jo
sar
in
mov
add
fdiv
add
leave
retf
add
pushf
xchg
push
ins
clc
jnp
ret
inc
cmp
ret
and
and
or
mov
jb
ret
inc
dec
xchg
pop
mov
push
daa
push
enter
enter
adc
jnp
push
xchg
add
jmp
pop
les
aaa
cmp
dec
or
cli
cmps
jl
in
shl
jl
cmp
in
mov
ja
leave
dec
gs
add
popf
loop
daa
daa
test
lds
imul
mov
inc
xchg
je
and
and
add
icebp
sub
repnz
out
aas
jnp
xchg
pushf
(bad)
adc
test
shrd
sbb
nop
add
les
iret
push
test
dec
dec
cs
iret
fucomp
dec
lock
jge
jle
das
jle
leave
xchg
and
cmp
jle
dec
sbb
xchg
jb
ret
(bad)
mov
pop
in
(bad)
je
test
xchg
fcmovne
xchg
add
add
dec
in
in
test
mov
retf
mov
jg
pop
xor
ret
or
enter
jbe
enter
bound
pop
daa
jmp
cmp
ins
add
mov
ss
movs
dec
mov
and
loopne
iret
enter
cmp
out
rol
ja
mov
xchg
and
push
das
add
fld
pop
add
pop
nop
setnp
jb
mov
push
fldenv
mov
in
mov
sbb
and
sub
mov
push
(bad)
and
jg
mov
lods
mov
pop
jb
loope
push
jbe
pop
jb
add
daa
psrld
loopne
pop
call
ror
sbb
mov
in
jbe
lods
lfs
or
xchg
xchg
add
dec
and
xchg
icebp
add
mov
in
aaa
int3
xchg
dec
cs
adc
xchg
dec
xchg
adc
inc
dec
push
mov
inc
mov
jmp
stc
dec
repnz
add
pop
jb
push
dec
xor
inc
push
int
movs
sbb
scas
or
repnz
mov
mov
or
xor
mov
test
jmp
cmp
test
push
pop
dec
in
inc
jb
dec
test
movs
rcr
jne
jbe
add
mov
add
sub
dec
outs
sub
mov
daa
xchg
fadd
iret
(bad)
sub
inc
imul
and
daa
cmp
cmps
mov
mov
movs
add
icebp
xchg
fst
(bad)
mov
and
aam
aas
xchg
in
icebp
shl
mov
loopne
pop
or
ja
das
pusha
in
rcl
aad
jb
cmp
xchg
cmp
mov
in
fdiv
int3
pop
mov
(bad)
in
push
inc
scas
shl
(bad)
cld
pop
push
cmp
inc
rcr
cmp
add
dec
add
dec
rcr
dec
sbb
outs
jns
inc
mov
xchg
xchg
out
retf
mov
add
(bad)
jb
popf
shr
mov
jb
shr
test
push
pop
shl
pop
fadd
pop
mov
push
stos
cmp
xchg
adc
mov
fmulp
add
mov
movs
cmp
push
out
in
push
repnz
aam
scas
jb
jnp
lahf
push
popa
add
inc
mov
jge
mov
add
xchg
and
or
imul
pop
push
lods
and
jb
mov
push
push
add
in
xchg
add
add
push
test
ds
or
add
fsubr
aad
daa
in
(bad)
jb
rol
out
jg
xchg
in
adc
iret
dec
ror
les
(bad)
aad
dec
leave
mov
push
pop
jge
mov
add
cwde
push
(bad)
in
xchg
and
push
xor
pop
push
(bad)
push
dec
je
jl
fst
mov
and
pop
iret
(bad)
outs
pop
leave
mov
psubd
rol
or
xlat
lea
jbe
jb
sub
xor
cmp
in
xor
dec
add
mov
(bad)
neg
cmp
neg
inc
jb
mov
push
or
in
pop
jb
pop
enter
call
mov
pop
fsub
fcmovne
fst
xchg
add
xchg
iret
xlat
(bad)
fmul
in
add
ja
sbb
or
adc
sbb
in
repnz
add
push
fstp
cs
outs
pop
das
push
push
stos
push
or
jl
fst
(bad)
fmulp
fst
or
xor
nop
inc
nop
push
xlat
add
imul
shl
ja
inc
ja
repnz
scas
fist
mov
cmovbe
in
xchg
push
push
add
in
pop
lahf
leave
leave
inc
cmp
and
or
add
loopne
jbe
mov
inc
sbb
aaa
mov
inc
repnz
xchg
std
xchg
or
xchg
and
dec
nop
cmp
loope
mov
dec
jb
fmul
mov
movs
sahf
pushf
mov
fxch
fcmovnbe
pop
fild
out
xchg
sbb
push
jo
call
and
lock
test
jnp
(bad)
in
loopne
fld
div
leave
add
xchg
retf
mov
rcl
push
adc
sub
mov
dec
add
push
xor
xchg
daa
bound
ins
scas
ins
ror
push
into
aaa
push
leave
and
push
fisub
add
xchg
and
ja
sub
aaa
push
aas
fild
fst
push
cmps
add
inc
mov
cmps
pop
jnp
and
xchg
cli
xchg
add
cmova
push
add
cmp
dec
outs
xchg
jno
add
leave
and
clc
mov
and
(bad)
loopne
leave
mov
xchg
hlt
push
xchg
daa
movs
test
int3
mov
xlat
push
pop
add
enter
jb
jge
mov
xchg
outs
(bad)
into
(bad)
inc
mov
inc
inc
add
add
dec
mov
das
cs
mov
scas
sahf
lock
mov
mov
xchg
add
jb
movs
add
push
xchg
pop
pop
(bad)
fsub
jge
add
add
inc
mov
add
add
add
xchg
push
popa
pop
outs
(bad)
cwde
cmovne
sub
pop
and
ffree
push
add
out
dec
and
cld
call
sub
and
dec
cs
xchg
add
push
xor
fstp
xor
pop
jb
(bad)
iret
loop
mov
fwait
add
add
jb
sbb
fwait
sub
xor
pop
jb
push
push
pusha
inc
aad
jb
out
mov
fcom
movs
add
xchg
and
add
add
add
add
fadd
or
in
fs
pushf
pushf
push
push
mov
jbe
pop
punpcklbw
test
or
(bad)
leave
in
xchg
mov
sub
getsec
inc
out
enter
mov
pop
rcl
pop
into
lods
in
leave
fucomp
or
popf
dec
dec
and
or
popf
jge
addr16
dec
mov
mov
add
add
in
cmc
sahf
add
in
xor
jo
dec
fimul
jp
pop
out
xchg
cmp
mov
sqrtps
inc
int3
ret
adc
movs
(bad)
xchg
pushf
push
mov
enter
cwde
test
xchg
pop
and
aam
es
enter
in
push
add
xor
jns
add
lahf
push
daa
nop
or
xor
xor
cmp
push
add
pop
shl
test
xchg
pushf
pop
mov
jmp
xchg
mov
jmp
in
mov
addr16
ds
leave
inc
dec
jmp
nop
jmp
outs
mov
inc
test
nop
mov
jnp
(bad)
mov
mov
bnd
jb
pop
fsubrp
dec
hlt
or
or
mov
and
sub
dec
inc
ror
enter
adc
leave
xlat
aam
dec
loopne
movd
repnz
pop
mov
repnz
int3
das
ret
push
jne
jmp
mul
jg
lds
add
pop
sub
mov
into
jmp
dec
mov
mov
pop
in
xchg
jmp
iret
idiv
push
ror
shr
sbb
dec
leave
xchg
adc
cmp
nop
jb
daa
in
cmp
push
jb
mov
mov
mov
in
hlt
dec
dec
fisub
data16
fbld
mov
leave
in
sub
xchg
mov
xchg
popf
pushf
mov
push
and
popa
ins
ja
mov
stos
mov
cs
sub
fstp
jns
sbb
movs
push
add
leave
dec
ja
pop
push
xchg
sub
inc
ja
add
mov
and
movs
add
test
mov
mov
(bad)
in
lfs
shr
jl
inc
push
movs
xor
maskmovq
test
dec
mov
out
movs
cmp
pushw
fcomp
test
lock
mov
pop
dec
inc
mov
add
xchg
pushf
cmps
and
pop
sahf
call
dec
cmp
pop
gs
icebp
xor
cmp
add
test
xchg
or
mov
mov
mov
adc
sbb
cs
xchg
add
inc
mov
add
jns
clc
sub
mov
cmp
iret
pop
repnz
aaa
repnz
add
xchg
repnz
test
test
push
in
xchg
sub
jb
dec
repz
jp
rcr
movs
mov
xor
jbe
leave
inc
jmp
mov
mov
pushf
in
and
hlt
and
jnp
xchg
jbe
add
xchg
mov
pop
test
mov
xchg
push
inc
mov
shl
dec
jb
stos
pop
stos
pop
cmc
add
cmp
cmp
jb
mov
inc
xor
or
lock
in
retf
fadd
out
hlt
add
inc
mov
add
sub
pop
mov
push
mul
mov
jns
leave
leave
leave
xchg
xchg
in
leave
leave
mov
jmp
jb
or
mul
jns
clc
lods
cmp
jno
imul
inc
mov
idiv
mov
pop
and
dec
loopne
xor
test
adc
xchg
jo
xchg
mov
push
rcr
add
pop
pavgb
push
or
jns
adc
in
inc
aam
or
pop
sbb
pop
xor
push
cs
xchg
mov
push
adc
lods
adc
pop
jmp
clc
cwde
lahf
xor
fstp
adc
mov
cmp
or
or
xchg
enter
xchg
add
cmps
inc
stc
pop
pop
lods
retf
leave
inc
stc
pushf
stc
cmp
jb
xchg
lods
imul
add
inc
mov
add
add
add
je
or
cmp
cmp
jae
mov
mov
movsx
int3
or
xchg
and
or
or
or
fstp
cli
mov
pop
pusha
mov
add
fdivr
and
in
das
das
invd
xchg
scas
gs
ins
scas
jne
int3
push
nop
add
nop
mov
add
pushf
out
pop
inc
add
inc
int3
sti
fs
imul
xchg
enter
cs
dec
mov
pop
xor
dec
mov
aas
(bad)
add
cmp
mov
outs
mov
xor
test
iret
cld
cmpxchg
dec
dec
fimul
dec
pop
pusha
xchg
in
and
inc
nop
addr16
fsubr
xchg
xchg
add
adc
stc
cmp
hlt
mov
xchg
pop
and
std
and
ins
cdq
inc
mov
outs
add
mov
ja
xchg
mov
mov
imul
mov
mov
dec
cmp
ss
ds
mov
pop
inc
fbstp
mov
stos
push
add
fisubr
or
popf
in
cs
mov
in
mov
mov
popf
ins
dec
sub
and
fcomp
jmp
mov
jb
mov
mov
pop
retf
ins
adc
pusha
addr16
mov
sub
sahf
test
addr16
mov
stos
add
mul
fdivr
add
mov
enter
ins
add
mov
and
mov
push
xor
popf
(bad)
ja
je
jb
pop
jb
mov
mov
shl
pop
fcom
mov
mov
or
data16
cmp
cmp
jo
or
fiadd
jbe
mov
xchg
xchg
mov
shr
mov
call
scas
and
aas
test
pushf
in
and
jl
ja
xchg
mov
add
pop
mov
sub
inc
xchg
iret
adc
mov
fst
mov
pop
and
loopne
imul
push
mov
fst
add
mov
add
rol
loope
out
out
pop
pop
mov
loope
add
add
es
hlt
daa
in
add
sbb
push
sub
cwde
jbe
leave
xor
pop
push
rol
leave
imul
push
iret
pop
and
fs
push
add
inc
test
clc
dec
(bad)
xchg
fsub
or
pop
in
daa
cld
pop
mov
and
inc
jb
aam
inc
pusha
in
aam
and
mov
iret
mov
push
xor
mov
inc
ss
adc
sbb
and
sub
mov
dec
dec
pop
jb
jb
pop
xchg
push
addr16
imul
mov
push
mov
mov
mov
or
pop
and
jo
mov
and
pushf
adc
push
mov
xchg
and
fistp
leave
mov
dec
ja
repnz
ja
mov
ins
arpl
test
jae
xchg
lahf
mov
mov
cmp
jbe
call
xor
pop
jb
mov
and
ret
in
or
mov
or
dec
mov
cmps
addr16
xor
scas
aas
push
lds
sbb
jb
rol
loope
out
add
pop
addr16
cmp
adc
dec
or
out
leave
in
inc
push
cs
ror
leave
ja
mov
jb
mov
dec
outs
pop
jmp
repz
adc
and
sub
xor
mov
push
pusha
stos
add
adc
cmp
rol
push
daa
jge
and
enter
add
inc
mov
movs
dec
outs
pop
add
enter
dec
dec
dec
fsubrp
cli
add
je
sbb
ret
mov
test
and
mov
push
or
adc
jbe
lahf
ja
ret
cmps
add
ret
packuswb
leave
xchg
adc
ret
mov
cmove
rol
js
ret
dec
cs
outs
push
lods
xor
sub
cmp
pop
push
bound
ins
add
cmp
jnp
mov
add
movs
or
(bad)
loope
std
adc
in
les
add
setno
das
movlps
add
outs
daa
xchg
in
jge
xchg
in
inc
mov
adc
mov
leave
and
pusha
or
adc
jg
cmps
mov
adc
movs
add
sub
call
ret
jno
out
jg
pop
out
xchg
inc
jns
adc
lds
lds
inc
ror
lds
add
sbb
push
adc
enter
inc
les
pop
xchg
pop
and
mov
fist
push
lds
arpl
in
sub
imul
pop
add
pushf
sysret
pop
in
sbb
sbb
lds
xchg
pop
adc
adc
pop
fisubr
mov
cli
add
add
or
push
inc
dec
das
push
xlat
add
jns
sbb
cmp
mov
or
movs
push
(bad)
mov
and
adc
sbb
jecxz
dec
dec
vpaddsb
pop
adc
pop
cmp
and
ja
dec
in
xchg
pop
addr16
add
or
jg
sbb
inc
jb
inc
cmps
dec
in
jb
shl
imul
and
leave
inc
xor
int3
push
jo
(bad)
cmps
push
add
(bad)
pusha
ja
cmp
and
pop
into
push
xchg
xchg
leave
push
(bad)
dec
mov
shr
mov
inc
mov
mov
mov
xchg
mul
pop
sub
mov
leave
dec
ja
push
add
xchg
sbb
mov
clc
arpl
and
add
mov
push
mov
mov
xchg
mov
loopne
hlt
mov
in
pop
in
push
push
sbb
fisub
lahf
xor
mul
push
mov
cwde
add
cmp
in
xchg
xchg
mov
repz
add
bndldx
jb
lsl
inc
jb
xchg
dec
bound
cs
xchg
mov
(bad)
sbb
mov
cs
dec
dec
fistp
adc
leave
int3
out
js
mov
dec
pop
scas
ror
adc
cmp
enter
add
xor
fadd
sbb
add
outs
add
inc
sub
pop
sbb
pop
push
push
pop
jbe
cmp
add
int
inc
mov
addr16
iret
inc
dec
scas
in
push
movs
(bad)
dec
dec
scas
in
enter
xchg
pushf
movs
loop
or
loope
dec
cs
sbb
addr16
and
je
adc
test
into
sbb
add
mov
call
in
daa
cld
push
adc
xchg
pushf
mov
mov
inc
cmp
bnd
into
into
xchg
sbb
mov
mov
shl
jbe
idiv
dec
or
push
add
adc
push
je
in
leave
xchg
adc
xor
pmulhuw
jb
pop
add
jne
sahf
sub
xchg
out
cmps
mov
dec
fist
in
and
add
jb
xchg
adc
and
cmp
pop
ins
(bad)
pop
and
mov
inc
into
sahf
jg
jge
daa
daa
mov
add
pop
loopne
lock
das
pop
in
and
rcr
and
push
ds
jb
sbb
rol
push
and
adc
out
sbb
fadd
mov
adc
rcr
loope
or
movs
or
jge
test
lea
setne
rcl
pop
cs
push
jns
or
inc
(bad)
fild
add
inc
je
pushf
loopne
mov
and
into
rcl
rcr
cs
in
leave
out
add
add
sbb
shr
shr
shl
and
movs
or
pop
nop
sbb
dec
call
popw
and
pop
ins
ss
xchg
enter
lahf
add
lods
add
in
add
repz
add
(bad)
sbb
pop
addr16
push
pop
jecxz
pop
cmps
mul
int3
mul
fs
dec
adc
sar
xchg
mov
jb
add
add
int
(bad)
aam
popf
dec
mov
aam
sbb
cmp
and
scas
lock
push
sbb
aam
aam
and
and
aam
aam
and
and
aam
aam
adc
and
aad
sbb
xchg
and
sub
add
xchg
and
add
add
jb
jl
mov
cwde
or
mov
pushf
dec
inc
sbb
add
(bad)
sub
enter
add
add
dec
cs
xchg
add
adc
sub
dec
mov
and
movs
test
fst
fld
jmp
add
fist
das
xchg
jp
mov
jbe
push
and
es
enter
xlat
sub
cmp
cmp
jns
str
(bad)
or
pop
es
enter
adc
retf
es
fcomp
push
xlat
mov
outs
jb
inc
xchg
inc
jb
pop
dec
push
fmul
jg
push
ja
ror
sbb
aas
inc
(bad)
mov
xchg
arpl
sbb
xchg
mov
cmp
jb
jmp
fstp
psrlq
sub
xchg
je
dec
aaa
addr16
jle
add
xchg
mov
jb
inc
(bad)
fxch
(bad)
(bad)
xchg
sbb
fiadd
or
cmp
fidivr
sub
mov
push
push
daa
lea
mov
cmp
repnz
test
wbinvd
jmp
movs
xor
xor
xchg
xchg
mov
gs
xchg
mov
jl
call
mov
mov
sub
es
xchg
adc
xor
in
bound
and
jb
cs
in
sbb
xchg
pop
cld
fst
fstp
sbb
sub
addr16
push
pop
jb
leave
inc
ror
mov
mov
in
pop
out
sub
fcmovnu
adc
outs
addr16
cs
dec
je
sub
mov
xchg
mov
pop
ror
or
pop
add
(bad)
fild
enter
unpcklps
and
xor
push
movs
fistp
mov
daa
daa
outs
jge
add
cdq
mov
clc
retf
leave
in
jbe
ror
fld
in
ret
ror
in
idiv
loopne
push
ins
daa
xchg
das
loopne
bswap
jbe
and
addr16
jae
nop
push
mov
xchg
mov
xchg
ret
call
out
out
add
add
mov
loope
dec
sbb
test
xor
ins
add
mov
and
mov
mov
mov
rcr
cmp
in
add
pop
push
mov
movs
add
cmp
xchg
inc
adc
xchg
xchg
inc
and
cwde
mov
(bad)
loope
hlt
daa
xchg
retf
add
jecxz
xchg
mov
and
pop
jb
dec
push
js
pop
jb
jl
lods
mov
pusha
jb
imul
jecxz
xchg
mov
add
mov
sbb
in
in
xor
test
push
add
add
mov
add
cs
xchg
mov
or
mul
mov
in
cld
jb
dec
jb
cmp
cmp
pop
jb
pop
lea
mov
and
jno
pmulhw
in
in
inc
jb
std
xor
out
pshufw
leave
xor
inc
xchg
sbb
cs
je
sub
add
xchg
mov
jb
add
aad
data16
and
cmp
add
or
and
ret
push
push
pop
leave
and
pop
in
or
mov
lods
mov
and
dec
jb
out
out
aaa
in
cmp
getsec
ins
mov
inc
mov
sub
aaa
add
cmp
enter
add
dec
ret
mov
mov
jmp
sub
jmp
cmp
sbb
cmp
inc
jo
je
sbb
mov
aam
cmp
add
sbb
in
push
and
push
and
jmp
fiadd
ja
pop
iret
push
jle
xchg
out
fs
mov
mov
xchg
add
fnstsw
adc
cmp
fisttp
add
xor
mov
xchg
pop
jb
test
call
dec
iret
jmp
jmp
cmp
xchg
and
push
add
ror
xchg
and
fld
fild
xchg
pushf
pushf
pushf
pop
mov
and
rcr
xchg
dec
dec
mov
push
in
add
sub
dec
cs
pop
and
bound
mov
pop
and
seto
leave
in
in
iret
ror
(bad)
dec
and
fucom
xchg
out
adc
jb
pop
push
pop
add
add
xchg
jbe
pushf
cmp
dec
mov
js
shr
scas
cmp
(bad)
rcr
mov
dec
dec
out
add
adc
das
dec
cs
dec
inc
pop
dec
sbb
and
pop
push
pop
push
mov
xchg
ins
in
xchg
add
pop
and
ret
leave
out
pop
ror
push
fcomip
aas
and
dec
jb
ds
xacquire
vmread
fucom
lock
xor
les
daa
sbb
cmp
clc
pop
icebp
or
in
and
sub
cmp
jmp
leave
dec
imul
ja
add
mov
cmp
inc
ror
in
inc
add
dec
ja
inc
repnz
and
and
dec
pop
and
mov
cwde
mov
loope
mov
clc
mov
sbb
jb
add
sbb
and
sahf
pushf
pop
mov
ja
dec
pop
add
sbb
pusha
add
pushf
pop
inc
movs
addr16
rcr
mov
pop
(bad)
fmul
inc
cmp
cld
hlt
pop
pop
hlt
adc
sbb
(bad)
push
sub
add
loop
pusha
movhps
push
xchg
xchg
shl
mov
mov
shl
dec
push
mov
cmp
rcl
mov
cmps
pop
mov
inc
add
imul
cmps
mov
sar
in
loopne
inc
cwde
lahf
jmp
and
sub
dec
inc
or
xor
mov
xchg
jb
data16
mul
and
pusha
popf
test
ja
leave
dec
gs
xchg
out
and
shl
pop
pop
jg
xor
xchg
pop
adc
inc
or
mov
mov
and
push
ja
mov
ds
std
push
es
cdq
pushf
dec
pop
adc
xchg
inc
jb
popa
in
fs
jb
popf
push
outs
js
mov
inc
outs
out
(bad)
aas
jno
adc
mov
iret
jno
push
(bad)
aas
jae
jg
cmp
stos
jns
add
and
mov
or
cmps
retf
push
fisttp
scas
loopne
mov
add
lds
loope
mov
ret
and
fdivr
mov
(bad)
ins
mov
fbstp
sbb
mov
fidivr
iret
retf
mov
leave
cmp
int3
or
imul
pop
mov
or
out
fisttp
adc
jmp
fs
(bad)
pop
mov
sub
ds
push
sti
pop
push
and
sbb
jae
std
sub
fiadd
leave
pop
pop
pop
(bad)
pop
sub
jg
dec
and
sub
in
inc
mov
jle
pusha
cmp
aas
and
xchg
adc
ds
dec
shl
inc
(bad)
pop
push
mov
cwde
pop
into
seto
sar
pop
pop
jbe
mov
pop
pop
outs
aas
sub
add
dec
in
adc
cmps
bsf
or
push
push
pop
iret
pop
bound
pop
xor
arpl
push
sub
fild
fadd
push
sar
adc
addr16
or
push
lds
lahf
jbe
fnstenv
xchg
aas
mov
leave
mov
out
adc
mov
push
sar
sbb
pop
push
sbb
out
sbb
lea
mov
and
dec
add
adc
cmp
leave
in
sub
add
fs
lods
je
outs
mov
adc
aaa
nop
dec
and
sbb
lods
add
add
mov
pop
jb
and
clc
rcl
setnp
lock
mov
or
in
leave
push
mov
sbb
sub
jb
shl
add
xor
or
xchg
mov
pusha
jne
mov
in
jge
add
push
in
cmps
mov
repnz
mov
outs
push
or
mov
mov
cmp
push
and
adc
pusha
aaa
jnp
addr16
mov
inc
push
sub
js
push
xchg
es
mov
outs
push
pusha
and
das
push
jle
fbld
push
jp
call
add
daa
inc
and
in
mov
jb
jnp
outs
clc
pop
push
sbb
and
(bad)
push
sbb
add
pop
push
ins
xchg
sbb
push
push
clc
push
cmp
aas
add
mov
nop
push
pop
rol
test
push
rcl
jo
lock
sti
add
inc
xor
stc
cmp
xchg
pop
mov
daa
in
cmp
inc
stc
mov
leave
xchg
and
mov
out
dec
mov
pop
pop
and
pushf
cli
and
xchg
mov
loopne
xchg
pop
and
push
or
xchg
dec
cs
sti
and
fisttp
add
scas
pop
inc
mov
or
jnp
sti
iret
fimul
xchg
les
add
loopne
dec
xor
sti
loopne
add
or
out
jns
rol
(bad)
pop
div
mov
aas
push
pop
add
pop
jb
pusha
cwde
outs
cld
xor
in
ins
nop
push
pusha
push
adc
cmp
mov
xchg
shr
and
xchg
std
and
fst
add
pop
ins
and
cld
push
nop
jnp
in
pop
sub
push
mov
xlat
enter
std
fdivrp
jmp
inc
ror
push
ja
mov
addr16
sbb
cmp
(bad)
push
(bad)
pop
(bad)
imul
xor
mov
rcl
add
xchg
sbb
inc
dec
nop
inc
repnz
pop
push
push
(bad)
leave
inc
jb
jo
mov
pop
sbb
pop
dec
and
add
and
add
dec
repnz
pop
out
add
pop
je
stc
sbb
movs
iret
sbb
push
pop
push
leave
test
fmul
jb
jbe
cwde
cmps
pop
sbb
or
mov
add
pop
ins
mov
ins
daa
jg
xchg
(bad)
xor
adc
xchg
daa
aam
add
mov
rdtsc
addr16
or
and
mov
add
push
pop
xchg
mov
leave
ror
leave
mov
lock
add
jb
and
pop
add
fisttp
arpl
outs
xchg
jb
jb
mov
cmp
add
add
fild
jo
cmp
pushf
dec
add
add
xchg
pop
in
xchg
daa
cld
inc
pop
in
mov
mov
pop
dec
pop
xor
pop
mov
add
data16
movs
adc
push
add
sub
shl
xchg
rcr
dec
and
push
jo
ds
sbb
cs
xchg
dec
push
add
mov
inc
mov
add
add
xchg
mov
lock
pop
dec
mov
inc
pusha
xor
add
jb
sub
xor
add
xchg
and
push
add
cmp
enter
or
inc
mov
or
or
in
xchg
bswap
adc
adc
adc
sbb
out
adc
adc
add
movhps
xchg
and
pop
and
adc
pusha
push
jbe
daa
push
ins
popa
push
xchg
xlat
popa
cwde
movs
push
retf
push
stos
arpl
inc
daa
pop
popa
fadd
daa
in
fistp
dec
jb
pop
and
sub
pop
dec
dec
dec
es
pop
pop
pop
outs
dec
gs
cmps
jns
test
in
mov
mov
in
in
ret
into
fnstcw
mul
add
pop
or
mov
or
or
or
in
xor
or
repnz
dec
jns
add
mov
and
add
arpl
arpl
test
in
cmps
in
jo
arpl
arpl
jnp
and
or
push
adc
movs
sub
outs
push
sub
fs
sub
das
push
push
add
mov
in
mov
rol
and
leave
aam
adc
and
sub
pop
push
leave
dec
ja
cmp
(bad)
jg
push
jb
enter
add
add
mov
pop
retf
or
jb
retf
xchg
or
or
add
or
pop
push
sub
adc
enter
adc
jae
mov
jb
adc
lods
sbb
xchg
and
sbb
sbb
sbb
jb
in
repz
pop
xchg
and
sbb
and
dec
scas
inc
das
and
or
adc
outs
jo
pop
push
add
repnz
add
in
xor
pop
mov
xchg
xchg
stos
fcom
icebp
enter
stc
or
push
cmp
jb
or
adc
sbb
push
mov
cmp
and
or
or
addr16
sub
or
mov
js
add
add
nop
or
leave
mov
add
into
push
addr16
cmps
dec
xchg
shr
push
inc
adc
and
sbb
xlat
push
sbb
dec
dec
fisubr
push
inc
mov
dec
aaa
push
ins
add
add
mov
xchg
sahf
dec
adc
or
xchg
adc
push
call
imul
into
cs
test
mov
pop
mov
or
xchg
mov
or
jb
or
retf
scas
(bad)
psraw
in
maskmovq
idiv
inc
mov
or
or
or
enter
or
or
pop
push
pshufw
adc
xchg
and
adc
cmp
cmps
adc
ret
and
retf
sbb
sbb
jb
enter
sbb
and
jl
add
or
adc
sbb
enter
and
and
sbb
inc
daa
dec
sub
popa
sub
enter
sub
sub
cs
das
mov
and
dec
xchg
and
adc
adc
adc
xchg
mov
enter
add
or
adc
sbb
and
sub
and
sbb
or
or
dec
jb
enter
push
pop
punpcklbw
dec
mov
push
adc
dec
dec
dec
dec
femms
or
dec
or
or
dec
dec
dec
dec
pop
push
add
dec
add
add
imul
sub
ror
ins
mov
mov
rol
and
scas
fadd
mov
enter
clc
mov
in
xchg
or
or
or
sbb
sub
xor
or
pushf
or
or
pushf
pushf
pushf
pushf
pop
push
add
pushf
add
mov
enter
and
inc
mov
cmps
pusha
add
jbe
jmp
mov
in
and
retf
(bad)
ja
daa
xchg
xchg
add
adc
adc
cmp
xchg
or
outs
sbb
mov
in
inc
cmovs
addps
ds
fldenv
das
push
jno
repnz
or
ror
or
mov
xchg
mov
fmul
loopne
xchg
pushf
dec
inc
sub
adc
mov
repnz
inc
adc
xchg
outs
mov
push
fnstenv
iret
js
pusha
popf
pushf
pushf
pop
mov
jns
mov
(bad)
push
fisubr
or
out
or
or
push
mov
sub
repnz
add
add
inc
add
pushf
sbb
push
add
inc
mov
jb
in
xchg
and
mov
xchg
(bad)
jb
jb
push
or
jb
or
xchg
and
mov
sbb
leave
leave
leave
loopne
sbb
push
jb
enter
jmp
mul
inc
mov
pop
add
or
pop
and
daa
and
mov
daa
xchg
dec
pop
jo
jnp
fimul
xor
lahf
pop
xchg
jb
xchg
sbb
rcl
clc
cmp
ins
sbb
or
and
mov
daa
jae
xchg
xchg
outs
xor
addr16
dec
cwde
pushf
mov
je
mov
mov
xchg
mov
sbb
sbb
dec
inc
into
sahf
inc
add
dec
add
xchg
xchg
and
push
push
in
js
or
or
sbb
or
into
fimul
rcl
ficom
aas
loop
addr16
and
adc
add
enter
sbb
sbb
sbb
jns
xor
pop
sbb
cmp
push
sbb
data16
enter
jl
mov
add
xchg
pop
jne
rcr
inc
dec
dec
dec
out
cld
sbb
mov
push
mov
xchg
sbb
sbb
pop
ja
bnd
pop
outs
add
sub
dec
or
mov
mov
mov
xchg
jbe
jbe
daa
mov
jns
inc
call
sbb
jbe
xor
dec
ja
and
add
daa
out
add
adc
sbb
sbb
inc
inc
inc
sbb
sbb
dec
adc
ja
leave
dec
ja
cmps
mov
add
xor
test
enter
add
adc
add
das
push
cmp
or
xchg
and
or
or
jbe
xchg
or
mov
xor
movlps
cmp
mov
push
inc
add
or
js
pop
mov
retf
push
push
cmp
pop
add
leave
cdq
inc
popa
dec
push
imul
scas
nop
cwde
add
test
mov
imul
jns
sub
and
pop
push
or
pop
and
inc
gs
pshufw
xchg
xchg
jb
sti
cwde
pop
push
cmps
or
cmp
pmaxub
and
jmp
jmp
fs
enter
and
sub
in
ss
dec
push
sbb
jb
lods
jns
and
cdq
add
add
mov
pop
jp
lahf
xchg
xchg
xchg
xchg
and
and
jb
rcl
and
out
fsub
and
and
and
and
not
xchg
cmps
xchg
xchg
xchg
mov
mov
add
pushf
and
and
and
and
xchg
jo
sahf
mov
add
add
fisttp
cmps
mov
mov
dec
pop
jl
mov
mov
mov
adc
pop
xor
fst
pusha
imul
jbe
push
and
leave
or
enter
mov
lods
ror
jge
cwde
sub
leave
and
push
iret
and
ins
retf
sbb
and
push
add
xchg
and
add
add
fs
pop
stos
mov
nop
lods
cmp
ret
jge
vmwrite
add
pop
jle
jle
dec
sbb
and
and
jle
pop
and
inc
dec
and
dec
push
aam
jle
pop
jle
mov
mov
daa
rcr
and
dec
push
xchg
add
and
add
xor
inc
es
es
jns
(bad)
or
push
adc
rdtsc
push
jmp
pop
inc
or
or
call
js
(bad)
sbb
aas
nop
sets
out
mov
mov
fsub
es
es
mov
dec
xchg
fild
retf
daa
xor
cmp
inc
add
or
cwde
pop
jbe
jb
sahf
or
in
mov
inc
mov
ror
or
or
dec
dec
dec
dec
loopne
lock
dec
and
or
mov
int3
and
sub
mov
rcl
push
(bad)
inc
pushf
pop
ror
push
sub
psubb
fisubr
out
out
push
or
das
sbb
and
inc
sahf
pushf
int3
das
sub
cmp
inc
fld
pop
dec
or
pop
push
aaa
dec
and
push
sub
sub
dec
in
jbe
add
fsubr
pop
ror
shr
fiadd
sub
sub
mov
sub
push
sbb
add
add
and
dec
cmp
jb
mov
xchg
repnz
add
or
pextrw
xchg
call
dec
aaa
stc
aas
sbb
addr16
inc
shr
push
je
leave
pusha
push
daa
ins
outs
nop
sahf
add
lods
add
jb
enter
add
add
mov
add
push
or
in
xchg
or
or
or
or
push
push
bound
jo
jle
ret
enter
adc
mov
call
popf
in
jmp
mov
sub
cmp
pusha
retf
sbb
punpckhdq
sub
ins
push
test
dec
mov
xchg
mov
fistp
cli
cs
push
or
in
xchg
and
push
mov
jb
pop
ror
fimul
loop
retf
xchg
and
or
or
or
das
add
or
adc
sbb
xchg
and
and
sub
xor
adc
adc
and
pushf
bndldx
and
sub
xor
enter
sbb
inc
mov
push
and
bound
push
in
xchg
and
jp
and
sbb
jb
daa
xchg
sub
retf
stos
add
push
sub
xchg
mov
add
enter
add
xchg
(bad)
or
xor
or
or
adc
jbe
cdq
das
sbb
dec
sub
xor
pop
cmp
jb
adc
adc
jbe
mov
adc
vmwrite
jb
cmps
scas
mov
and
sbb
sbb
(bad)
jb
enter
and
and
and
jl
jmp
or
in
xchg
and
sub
sub
sub
sub
dec
sub
and
das
push
in
leave
enter
mov
xchg
xor
sahf
ss
cmp
xchg
and
cmp
cmp
cmp
xchg
fcmovne
loop
pslld
jo
jb
xor
inc
or
xchg
retf
inc
mov
pusha
sbb
mov
push
push
add
add
add
in
stos
pop
mov
ror
or
inc
mov
or
or
or
xchg
push
xor
nop
daa
adc
cmp
cmp
cmp
cmp
pop
arpl
cmp
cmp
jnp
mov
fwait
mov
add
add
icebp
add
xor
pop
xor
dec
push
sbb
inc
sub
xor
or
(bad)
mov
xchg
xchg
xchg
(bad)
jnp
mov
ret
mov
int
aas
jecxz
out
jns
mov
in
(bad)
push
inc
push
add
add
xchg
mov
mov
movzx
fsub
jb
add
repnz
jbe
jnp
ss
push
push
or
or
repnz
or
inc
sbb
pusha
imul
xchg
push
dec
in
adc
sbb
push
mov
add
add
enter
add
mov
repnz
or
add
or
enter
adc
or
jb
sub
xor
cmp
jg
adc
push
adc
pop
adc
and
pop
jb
jp
xchg
in
pusha
in
sbb
inc
mov
test
shl
leave
aaa
mov
inc
mov
push
or
adc
sbb
in
xchg
and
add
add
ss
pop
inc
(bad)
mul
pop
leave
dec
or
sub
outs
xchg
xor
mov
out
mov
call
dec
xor
cmp
mov
jb
xchg
in
and
addr16
nop
cwde
in
and
push
adc
cs
mov
std
cmp
pushf
mov
push
sbb
add
ss
int3
sahf
pushf
ds
or
push
or
or
dec
xchg
add
push
and
mov
mov
xchg
mov
rol
add
jbe
sbb
(bad)
jb
in
sbb
cmp
inc
xchg
sbb
inc
call
repnz
cmp
test
cmps
fucomi
sub
mov
lods
or
xchg
fxch
or
fsub
or
inc
scas
stc
scas
ins
or
adc
enter
adc
and
idiv
push
pop
inc
push
sbb
sbb
sbb
scas
cmp
fisttp
cmp
punpckhwd
ret
xchg
sti
cmp
outs
and
sbb
cmp
and
pop
jl
dec
out
cmps
cmp
leave
inc
rcr
push
xchg
fcmovne
mov
adc
sbb
jb
in
enter
add
sub
add
cmp
inc
pop
dec
xlat
or
mov
xchg
sub
inc
mov
xchg
xchg
xor
dec
shl
(bad)
jb
jb
(bad)
icebp
cld
cmp
cmp
aas
pop
bndldx
movs
or
aas
pop
mov
iret
into
mov
and
xchg
and
jb
ror
rol
leave
enter
loopne
pop
call
sub
clc
das
push
or
or
adc
sbb
and
dec
sub
addr16
inc
mov
adc
inc
adc
dec
adc
push
push
pop
pop
pusha
sbb
xchg
xor
sbb
sbb
or
inc
stos
popf
mov
push
mov
add
retf
mov
pop
out
jecxz
jmp
push
jb
or
inc
mov
sub
add
jb
enter
add
and
sbb
or
jb
enter
or
or
sbb
in
psubq
inc
or
pop
adc
enter
adc
adc
adc
dec
push
pop
pop
ins
sbb
enter
mov
xchg
sbb
in
sbb
frstor
daa
das
inc
mov
and
and
or
sbb
daa
mov
xchg
xchg
sub
cmp
inc
xchg
xchg
xchg
xchg
dec
push
pop
arpl
enter
xor
xor
sbb
xor
mov
inc
stos
cmp
retf
fst
cmp
jb
in
add
adc
pushf
cmp
aas
push
inc
pop
inc
xchg
and
outs
dec
ja
repnz
jg
xchg
xchg
dec
inc
mov
lahf
dec
cmps
dec
scas
push
mov
pushf
fmul
cmpxchg8b
(bad)
iret
xlat
and
and
push
out
pop
out
arpl
test
sbb
mov
fsub
repnz
dec
inc
add
repnz
movs
inc
mov
mov
repnz
call
inc
sbb
repnz
sub
cmp
repnz
inc
inc
add
push
repnz
mov
adc
and
xchg
pop
xchg
sti
mov
xor
xchg
xchg
addr16
mov
xchg
or
shl
lahf
fwait
or
mul
xchg
out
fwait
sbb
fadd
daa
xchg
add
bound
inc
pop
rcl
lahf
inc
add
fwait
js
jbe
jb
sahf
or
mul
mov
cmp
or
lahf
ror
pminub
xchg
mov
sbb
repnz
inc
push
or
push
add
add
sahf
pushf
mov
inc
push
das
dec
pop
mov
and
or
or
jns
xchg
mov
test
(bad)
or
fldenv
mov
mov
rcl
fcom
repnz
xchg
and
paddw
dec
or
adc
sub
enter
sbb
push
dec
and
jo
cmp
jb
jnp
xchg
xchg
add
inc
mov
add
lods
xchg
and
mov
dec
mov
in
enter
fmul
in
(bad)
mov
in
adc
adc
dec
add
addr16
fisub
or
adc
sbb
aas
and
daa
mov
and
sbb
cmp
in
xchg
mov
cmovl
sbb
xor
pop
jb
and
mov
movs
jb
enter
daa
mov
mov
into
sub
sub
sub
sub
imul
dec
add
or
jb
xor
pop
xor
xor
and
ds
xchg
xchg
daa
mov
pop
pop
data16
in
fnstenv
outs
jle
xchg
mov
sahf
mov
xchg
inc
sahf
inc
cmps
scas
inc
xchg
and
jg
inc
mov
jb
enter
dec
fimul
stc
jnp
jnp
dec
pop
idiv
dec
cmovl
dec
inc
mov
push
push
push
push
push
es
in
xchg
and
push
ss
ds
cmp
cmp
pop
dec
push
push
pop
pop
xchg
and
pop
jno
jl
cmp
enter
pop
call
sbb
popa
aas
mov
shl
jb
retf
shl
data16
and
inc
mov
push
dec
push
sahf
test
into
ins
popf
pusha
enter
dec
dec
dec
push
push
add
popa
dec
ins
emms
push
das
adc
mov
add
and
call
repnz
pop
jnp
dec
or
dec
push
repnz
sbb
mov
push
sahf
push
pop
pusha
fst
(bad)
add
jb
enter
or
movs
or
loopne
xchg
xchg
xchg
call
xchg
(bad)
xchg
push
or
xchg
cmp
in
rcl
mov
test
pop
dec
sbb
fwait
add
int3
sahf
mov
ret
or
inc
sahf
int3
bswap
rol
or
daa
jmp
repz
cmp
cmp
push
add
adc
sbb
and
and
sub
xor
jb
enter
sbb
push
sbb
mov
pop
sbb
and
inc
sahf
int3
pop
jle
push
mov
xchg
xchg
and
sahf
(bad)
es
daa
movs
ret
enter
out
sub
jnp
fld
out
push
add
setle
add
and
xchg
daa
and
pop
xor
add
fs
inc
or
push
pop
add
sbb
arpl
imul
dec
push
repnz
dec
cs
mov
in
dec
out
push
fninit
add
pop
repz
add
or
adc
sbb
and
add
adc
sbb
xor
inc
add
adc
adc
arpl
jae
jnp
enter
or
in
fs
mov
dec
and
movs
push
loopne
inc
into
fimul
jmp
scas
repz
push
mov
dec
or
and
and
in
enter
or
push
add
pop
packsswb
jae
and
mov
add
xchg
xchg
daa
fwait
add
repnz
sbb
mov
push
fninit
aas
jmp
and
outs
and
push
and
sub
push
xor
repnz
cmp
inc
add
push
add
pop
arpl
jae
daa
and
jnp
add
xchg
push
fwait
bt
jb
adc
fimul
mov
push
fninit
das
jmp
dec
pop
push
inc
call
cmps
mov
push
push
push
push
cmp
cmp
push
push
push
push
cmp
cmp
push
push
push
push
enter
push
push
mov
in
fwait
mov
imul
ret
adc
scas
push
xor
add
andnps
and
and
push
push
and
and
push
push
push
push
repnz
sub
push
add
or
adc
adc
leave
enter
mov
pop
mov
test
in
push
push
push
mul
cmp
mov
or
push
pop
sbb
repnz
add
or
dec
inc
mov
add
dec
inc
leave
dec
daa
jg
stos
push
sub
cwde
add
popf
cmp
cmp
pop
push
repnz
cdq
fbstp
outs
mov
loopne
jmp
repz
add
xchg
xchg
mov
push
add
inc
mov
dec
cs
fs
pop
push
pop
pop
pusha
push
push
jb
add
sbb
scas
mov
jb
sub
out
pop
xor
xor
pop
pop
pop
pop
push
daa
and
push
dec
adc
and
stc
iret
pop
fs
clc
pop
nop
inc
repnz
setge
lods
les
call
dec
pop
dec
push
sbb
pop
mul
add
add
jnp
(bad)
dec
xchg
or
lods
movzx
pop
ret
or
fmul
jecxz
out
stc
adc
inc
dec
pop
add
movlps
sbb
addr16
push
cmp
inc
sbb
out
sbb
retf
pop
nop
push
fwait
add
dec
dec
mov
dec
dec
dec
call
fst
or
pop
sub
aas
in
enter
adc
adc
adc
mov
sbb
rol
fcomp
xchg
daa
and
sbb
std
sbb
xchg
or
pop
push
and
and
repnz
and
dec
and
mov
jns
imul
and
sahf
mov
xchg
mov
xchg
daa
mov
repnz
ftst
xor
cli
xor
mov
pop
add
cmp
out
cmp
not
aas
cmp
cmova
sbb
repnz
aas
push
inc
daa
and
outs
mov
inc
lahf
stos
enter
inc
lgs
retf
dec
repnz
in
dec
loope
test
add
dec
sbb
push
leave
enter
push
cmp
jb
in
leave
dec
pop
push
(bad)
gs
jo
sbb
jnp
jnp
pop
aas
xchg
pop
pushf
pop
sahf
int3
sahf
mov
enter
inc
into
psrlq
(bad)
jmp
enter
gs
or
jb
jb
popa
pusha
dec
and
pop
cs
scas
pusha
inc
push
inc
into
fimul
dec
add
jb
xchg
mov
jno
in
nop
sets
in
lock
add
dec
inc
into
sahf
loop
pminsw
cmc
std
add
popa
add
or
cmp
fs
sub
xor
mov
enter
popa
jo
js
repnz
or
cmp
cmp
mov
inc
ret
retf
add
or
in
xchg
fninit
add
psllq
sbb
repnz
add
adc
adc
xchg
retf
sbb
push
mov
repnz
es
out
dec
add
or
punpckldq
inc
mov
add
in
enter
push
test
add
mul
mov
or
sar
repnz
fsub
or
dec
inc
mov
adc
clc
packsswb
adc
cmps
outs
and
pop
adc
xchg
mov
inc
push
dec
add
sbb
pop
add
jns
iretw
mov
inc
or
dec
mov
(bad)
movs
pop
cs
xor
bnd
btc
(bad)
adc
rcr
bnd
movntq
repnz
adc
or
adc
push
sbb
jb
enter
sbb
sbb
and
sbb
sbb
jbe
in
xchg
and
and
sbb
mov
es
daa
in
xchg
and
sub
sub
sub
sub
sub
add
xchg
and
das
and
xor
jb
cmp
inc
xor
pop
xor
push
cmp
jb
enter
cmp
inc
mov
mov
sar
aas
(bad)
mov
mul
and
dec
or
inc
leave
retf
enter
cmp
add
xchg
and
add
jb
fs
or
add
jb
jb
push
and
cmp
jns
inc
dec
adc
inc
mov
outs
jns
test
(bad)
pop
daa
daa
daa
and
daa
daa
daa
(bad)
rcr
out
and
daa
repnz
push
xchg
adc
sub
xchg
xchg
xchg
aas
dec
push
pusha
xchg
xchg
xchg
xchg
imul
jb
leave
enter
lods
xor
cmp
xor
ftst
sahf
sbb
cmp
cli
imul
cmp
cmp
cmp
inc
pop
inc
mov
xor
push
imul
call
xchg
xchg
stos
mov
or
or
inc
shr
rcr
imul
mov
or
mov
add
leave
enter
dec
pop
push
or
sbb
bound
ins
or
or
xchg
and
jle
adc
adc
addr16
inc
iret
xlat
adc
xchg
daa
mov
out
sbb
idiv
sbb
in
leave
enter
sbb
mul
and
inc
dec
and
pop
pusha
and
pushf
jo
sub
xchg
daa
and
sub
mov
test
dec
mov
xchg
and
psrlq
dec
(bad)
xor
icebp
ss
ins
add
pfpnacc
sbb
jb
sbb
and
xchg
and
ds
aas
dec
inc
sbb
jb
push
inc
pop
inc
imul
mov
xchg
inc
jb
in
popf
dec
test
mov
inc
in
jb
inc
inc
inc
dec
inc
in
in
inc
inc
inc
aas
sbb
jb
push
mov
push
xchg
and
fstp
pop
out
pop
jb
in
xchg
cli
ins
add
sbb
cmp
and
pusha
das
ss
inc
bound
arpl
pop
gs
fst
jge
mov
cmp
jb
push
imul
ins
mov
addr16
inc
mov
xlat
jno
xchg
xchg
and
jb
out
je
cmp
retf
cli
jne
add
ja
pop
dec
inc
mov
jns
jp
xor
and
cmp
jle
jg
cmp
pop
and
xor
and
jle
mov
in
lahf
xchg
mov
mov
mov
(bad)
mov
xchg
dec
dec
add
dec
jg
jge
and
dec
jp
ficomp
daa
out
lahf
idiv
(bad)
mov
outs
push
outs
push
mov
and
call
iret
fimul
(bad)
push
jb
jp
pushf
pushf
pushf
or
popf
mov
mov
test
(bad)
jnp
xchg
xchg
jmp
and
push
or
push
sbb
xlat
(bad)
fxch
and
sub
push
jb
jo
mov
xor
sbb
jb
add
add
pushf
mov
add
and
ret
or
ror
psrad
jmp
ficom
shl
fst
add
add
xchg
and
add
add
enter
bound
push
or
or
pop
and
daa
daa
and
add
mov
retf
rcr
or
loop
inc
xchg
xchg
or
(bad)
jno
sub
sub
adc
enter
iret
push
cmp
dec
add
jbe
push
add
add
daa
pop
leave
ret
lods
add
enter
ret
into
add
repnz
pxor
cli
jae
or
jns
adc
or
xor
daa
inc
mov
adc
pop
adc
adc
in
leave
enter
mov
aas
xchg
sbb
jnp
jb
sbb
sbb
pushf
cmp
das
loope
in
jb
cwde
popf
imul
prefetch
inc
mov
sbb
push
cs
add
xchg
and
stc
add
push
pop
sub
sub
lds
je
je
jb
jb
je
je
jb
jb
je
jne
jb
jb
jne
jne
dec
fidiv
push
cmp
adc
push
adc
xchg
xchg
and
push
jb
jle
mov
xchg
lahf
sbb
pushf
cmp
mov
sbb
retf
sbb
mov
outs
in
pop
maskmovq
mul
scas
add
jbe
and
(bad)
fstp
sbb
and
and
sbb
jbe
ins
in
xchg
xchg
js
mov
add
movs
push
scas
pop
mov
daa
and
or
out
in
xchg
daa
cld
push
ja
movlps
jns
repnz
adc
pushf
cmp
pop
pop
pop
push
daa
and
jne
sbb
xchg
sbb
lods
push
jg
pop
sbb
jb
ret
and
and
and
and
js
(bad)
psrad
xchg
pop
sbb
and
mov
cmp
inc
sub
sub
xchg
and
jb
jge
mov
jb
xor
xor
mov
mov
cmp
aad
loopne
jmp
idiv
and
jns
pop
or
pop
aas
cmp
enter
inc
cmp
inc
cdq
cmp
jg
fs
pop
outs
inc
mov
dec
nop
dec
fwait
dec
daa
mov
and
(bad)
in
enter
push
(bad)
push
cmp
mul
push
(bad)
push
push
adc
inc
mov
sbb
daa
pop
xor
pop
in
xchg
and
push
pop
pop
pop
mov
jb
pop
je
jg
mov
and
xchg
mov
enter
ror
xlat
jns
jb
loop
in
pop
clc
imul
dec
inc
push
jnp
ins
sbb
comiss
enter
jno
jb
jae
cmp
jb
je
jne
jno
jl
sahf
int3
sahf
mov
test
xchg
and
dec
mov
mov
fs
aam
fild
lods
sbb
or
cmp
jl
aaa
mov
inc
mov
mov
arpl
fs
enter
test
neg
mov
mov
mov
xchg
rcl
in
out
repnz
std
call
sbb
popf
sub
daa
and
dec
mov
enter
movs
lahf
jbe
and
mov
xchg
xchg
and
aas
mul
fldcw
mov
mov
bnd
cwde
adc
daa
mov
inc
xor
push
xchg
xchg
daa
mov
pop
pop
push
enter
pop
mov
jns
repnz
shl
and
(bad)
vshufpd
enter
idiv
leave
prefetch
sbb
jb
in
and
int
into
pop
inc
iret
sahf
mov
dec
rcr
gs
inc
into
sahf
int3
pop
jnp
aad
xchg
(bad)
pushf
xlat
leave
enter
fdiv
leave
in
enter
(bad)
psubsw
mov
hlt
(bad)
jo
daa
and
and
das
sub
ss
jb
enter
out
call
jbe
ins
js
sub
mov
popf
mov
cdq
out
movs
out
scas
mov
pop
lds
shl
fcomi
out
enter
icebp
idiv
test
div
das
hlt
xor
enter
sub
xor
das
jecxz
ds
dec
pop
add
lds
dec
and
jb
in
cwde
mov
mov
xor
iret
pop
pminub
cmp
jb
lock
add
jb
jb
sbb
daa
xor
dec
push
pop
imul
mov
mov
mov
int3
push
xlat
pop
loop
and
mov
and
and
xchg
xchg
xchg
xchg
pop
and
cmp
leave
leave
enter
pop
data16
fs
sub
xor
jnp
jb
xor
xor
jb
sbb
aam
fucomip
cmp
mov
add
or
daa
and
pop
and
xchg
xchg
xchg
xchg
cmp
xchg
xchg
xchg
outs
jns
(bad)
xchg
xchg
xchg
xchg
call
xchg
(bad)
rcr
dec
out
leave
xchg
fcomi
paddw
leave
leave
push
sub
leave
leave
leave
leave
dec
push
pusha
imul
leave
leave
jbe
mov
mov
ret
arpl
in
out
xchg
and
cli
push
push
xchg
xchg
xchg
sbb
xor
xchg
xchg
xchg
inc
push
pop
push
jae
mov
stos
mov
xchg
xchg
xchg
xchg
retf
(bad)
loope
leave
leave
leave
xchg
test
cmp
leave
leave
dec
pop
gs
leave
leave
leave
jnp
xchg
pushf
leave
leave
leave
leave
cmps
mov
enter
leave
rcr
jmp
enter
adc
in
ss
dec
in
in
push
bound
in
in
or
in
mov
in
(bad)
icebp
cld
jb
jb
mov
adc
jb
ds
push
jb
jb
pop
push
or
mov
pushf
pushf
mov
int
fadd
xchg
xchg
xchg
and
ret
out
stc
leave
leave
leave
leave
mov
sbb
xor
retf
inc
int3
push
int
mov
pop
addr16
jb
jge
xchg
and
rcl
leave
leave
leave
test
leave
leave
leave
aad
jmp
jns
repnz
add
pop
and
dec
inc
mov
dec
dec
dec
dec
dec
pop
outs
jp
dec
dec
dec
test
dec
dec
mov
(bad)
ror
dec
dec
fucomp
repz
daa
daa
daa
inc
mov
adc
sub
daa
daa
daa
xor
daa
daa
daa
popa
ins
ja
xchg
xchg
daa
daa
lea
in
scas
mov
iret
pop
jb
jb
(bad)
lock
cmp
cmp
lea
adc
cmp
cmp
xor
mov
push
imul
and
sbb
jb
leave
stos
mov
rcr
sbb
pop
loop
and
clc
and
xchg
and
add
push
and
and
and
das
cmp
pop
inc
sbb
xor
push
sub
sub
sub
jl
das
setb
popf
retf
daa
xchg
dec
test
add
(bad)
in
leave
xor
cmp
xchg
lods
int
(bad)
and
sub
cmp
dec
aas
push
fs
xchg
add
ja
push
shr
lahf
lea
cwde
cmp
js
rcr
add
cmp
psrad
add
add
add
nop
add
pop
adc
jb
enter
or
or
or
cmp
cmp
pop
add
sbb
adc
dec
push
adc
xchg
xchg
and
gs
add
fs
jne
sbb
fs
sbb
movs
sbb
mov
mov
sahf
mov
aad
sbb
in
daa
xchg
inc
dec
inc
cmc
std
xchg
add
mov
pop
adc
mul
sub
xor
cmp
xor
pop
gs
mov
pop
ins
jne
jge
cmp
dec
inc
lea
ds
and
shrd
leave
enter
inc
fsub
inc
mov
inc
lock
clc
dec
xchg
add
add
inc
or
outs
dec
dec
push
sub
mov
add
pop
add
daa
daa
daa
push
jp
or
enter
or
jnp
jb
or
mov
(bad)
jle
retf
rcl
ficom
outs
daa
and
adc
repnz
enter
xchg
add
sbb
sbb
fs
sbb
and
sub
push
(bad)
jnp
jb
pop
inc
dec
and
and
mov
jne
outs
daa
and
jge
mov
xchg
and
mov
sub
mov
xor
mov
cwde
cwde
pop
push
jecxz
sub
xor
lahf
xor
cmp
and
in
fs
ds
add
fs
leave
leave
outs
jp
or
fwait
cmps
or
or
inc
mov
psrld
fst
stc
jb
enter
adc
adc
or
adc
sub
das
xor
mov
sbb
push
sbb
mov
and
push
ja
and
lea
xchg
and
cmp
repnz
pminub
das
inc
mov
sub
xchg
sub
sub
das
cmp
xor
push
xor
inc
mov
xor
xor
in
xchg
aaa
mov
xchg
cmp
cmp
cmp
xchg
and
aas
loop
in
inc
pushf
sbb
xchg
add
and
sbb
into
sahf
mov
inc
(bad)
inc
dec
enter
push
dec
jg
dec
dec
mul
dec
jl
dec
pop
xchg
sbb
jb
popf
push
aas
test
mov
mov
leave
push
pop
aam
push
jmp
cwde
add
or
jb
enter
pop
sub
aaa
pop
and
sbb
pusha
dec
popa
pop
bound
in
xchg
arpl
jns
test
xor
jb
addr16
sbb
imul
ins
fdivr
inc
sahf
out
repnz
jno
cdq
or
mov
mov
adc
push
sub
xor
in
xchg
jbe
ja
js
jns
pushf
sbb
jnp
jbe
cmp
jle
mov
xchg
mov
mov
into
test
cmp
fld
cli
and
push
call
mov
in
enter
cmp
mov
jb
nop
pop
xchg
push
daa
and
xchg
mov
lahf
xchg
stos
xchg
xchg
call
rcr
and
lahf
in
mov
jb
fwait
add
and
cmps
cmp
in
enter
stos
gs
mov
jb
lods
xchg
xchg
xchg
and
mov
mov
jb
enter
psrlq
inc
mov
(bad)
mov
mov
enter
mov
pushf
sbb
dec
rcl
(bad)
xchg
and
ins
ret
js
add
jb
enter
(bad)
movs
enter
cdq
cmp
pop
rcr
int
inc
sahf
mov
icebp
iret
cld
popf
pop
enter
ror
adc
pop
sbb
xor
xor
ds
dec
push
mov
cmp
push
jne
cmp
fst
cmp
lods
mov
ret
jecxz
into
sahf
mov
jecxz
pmaxsw
stc
out
enter
add
psubsw
jmp
xor
cmp
inc
out
daa
and
push
out
jg
lock
xchg
daa
mov
pop
jge
hlt
xchg
in
leave
enter
mov
dec
mov
jb
cli
aad
loopne
std
das
iret
push
cdq
pop
neg
add
pop
add
enter
add
sbb
jb
add
or
cmp
jns
outs
jp
test
mov
bsf
mov
mov
(bad)
adc
fst
pop
call
repz
or
cmp
in
adc
pop
pop
sbb
sbb
sbb
sbb
adc
xchg
xchg
daa
ins
and
and
in
leave
lea
scas
es
cmp
(bad)
iret
sub
(bad)
add
out
sub
sti
sub
enter
mov
add
mov
sbb
es
dec
cmp
inc
in
ss
mov
cmp
leave
dec
push
ds
imul
je
jg
mov
inc
fst
stos
inc
mov
fbstp
in
enter
dec
(bad)
dec
loop
inc
mov
clc
dec
mov
enter
pop
sbb
push
das
push
sbb
jb
cmp
push
push
push
pop
dec
addr16
inc
mov
jno
pop
pop
xchg
xchg
xchg
and
cmp
leave
mov
pop
leave
pusha
aam
inc
inc
mov
(bad)
jmp
outs
mov
ud2
pop
push
and
in
fst
inc
imul
jnp
jb
ins
arpl
pop
jns
sbb
jnp
jno
(bad)
jb
jae
je
daa
and
jne
(bad)
ja
shl
enter
jns
jp
jns
jb
in
jge
jle
push
jg
cmp
sbb
push
mov
mov
movs
or
daa
and
das
xor
aas
lea
in
xchg
mov
pop
pusha
nop
imul
jb
xchg
mov
xchg
xchg
inc
lods
adc
in
fcmovne
into
call
and
je
sahf
mov
mov
xchg
mov
mov
(bad)
movs
popa
fs
loope
outs
in
cmps
mul
inc
push
or
jb
and
inc
outs
mov
mov
gs
mov
mov
inc
jnp
xchg
xchg
mov
fbld
mov
enter
fsubrp
cmova
add
mov
adc
add
sub
add
(bad)
in
enter
dec
(bad)
push
(bad)
enter
fs
js
or
inc
sahf
mov
int
scas
iret
mov
and
ror
fcmovnbe
out
in
xchg
aam
aad
(bad)
test
aad
in
jb
shr
ficom
(bad)
sbb
sbb
vmwrite
repnz
loopne
pop
push
xor
mov
in
repnz
test
dec
inc
sahf
xor
retf
(bad)
xchg
and
jmp
jb
enter
or
or
or
mov
or
or
and
adc
adc
jb
enter
adc
adc
sbb
jp
sbb
sbb
call
xchg
lods
sbb
push
jmp
test
test
mov
test
or
(bad)
mov
and
or
lahf
cld
or
push
repnz
(bad)
in
shl
inc
mov
stos
pusha
push
ins
add
in
dec
sti
xchg
fistp
mov
jb
movs
push
scas
pop
mov
cmp
rcr
or
out
icebp
or
cld
stos
pop
(bad)
unpcklps
pop
enter
sub
xor
in
leave
dec
push
push
das
popa
pop
ins
jnp
jb
ja
jb
pop
mov
xor
(bad)
int3
sahf
int3
sahf
iret
and
(bad)
and
lock
popf
sti
shrd
adc
sbb
xchg
mov
daa
sub
xor
cmp
leave
dec
push
and
imul
je
jg
xor
xchg
xor
and
mov
outs
daa
and
int3
cmp
loop
in
enter
clc
lods
add
fs
and
inc
cmp
sbb
inc
inc
push
inc
pop
sbb
xlat
enter
inc
jl
xchg
xchg
stos
movs
mov
add
lods
inc
mov
push
retf
add
add
daa
ja
fidivr
jmp
sub
sbb
daa
out
imul
das
push
xor
in
enter
adc
adc
cmp
fs
pop
adc
adc
cmp
sbb
and
sbb
in
stos
push
mov
mov
sbb
retf
and
loop
xchg
xchg
and
es
cli
leave
enter
add
or
pop
adc
sbb
sub
das
cmp
push
jb
dec
xor
scas
cmp
jns
scas
push
js
mov
out
call
mov
push
rcr
sahf
add
ds
dec
cmp
push
cmp
add
add
pop
add
in
leave
imul
pushf
cmp
mov
or
into
sahf
mov
int3
push
(bad)
psrad
enter
in
clc
adc
fs
adc
and
pop
aas
cmp
sbb
push
pop
sbb
data16
scas
jl
pop
and
pushf
pop
xchg
and
enter
and
es
jb
fbld
jmp
inc
sahf
pushf
mov
push
and
xchg
and
das
inc
xor
xor
in
xor
xor
jns
sbb
repnz
(bad)
aaa
call
inc
mov
mov
imul
sar
dec
and
adc
and
aaa
add
into
sahf
mov
inc
push
cmovg
push
add
xchg
xchg
and
imul
jns
or
sbb
cdq
mov
sahf
int3
sahf
mov
rcl
mov
psubsw
icebp
sbb
sbb
add
enter
(bad)
or
and
push
sub
xor
cmps
dec
and
push
leave
leave
leave
enter
or
into
or
mov
or
or
add
daa
and
or
enter
add
mov
jb
adc
adc
inc
dec
dec
dec
adc
add
sbb
daa
and
push
xchg
and
and
jb
mov
shl
and
add
addr16
inc
loope
sub
imul
enter
das
sbb
xor
in
push
cmc
mov
push
pop
add
add
add
jp
leave
enter
push
mov
fstp
div
sahf
pushf
pushf
pop
rcr
call
pop
into
psubq
mov
add
enter
or
or
cmp
push
or
or
jnp
je
push
jg
mov
jle
adc
adc
mov
das
(bad)
xchg
fst
sbb
idiv
cmp
mov
sbb
das
and
cmp
cmp
cmove
and
pushf
das
pop
adc
ins
daa
js
enter
or
mul
sub
das
cmp
cmp
pavgw
xor
xor
add
mov
xchg
xchg
aaa
pop
daa
comiss
dec
cmp
xchg
cmp
push
cmp
mul
movd
inc
jns
and
sbb
inc
mov
mov
inc
stos
inc
mov
ror
sbb
retf
dec
(bad)
dec
loope
in
dec
in
enter
dec
mov
pop
in
in
adc
in
in
dec
dec
dec
dec
jb
in
inc
inc
pop
sbb
cmp
pop
inc
xchg
and
dec
popa
dec
push
bound
in
leave
enter
jl
je
jb
push
stos
imul
outs
xchg
and
fbstp
jb
xchg
fst
out
jbe
in
leave
idiv
js
mov
xor
fs
jnp
sub
sbb
bnd
das
inc
or
adc
test
in
enter
xchg
mov
jb
mov
lea
mov
fist
enter
xchg
std
xchg
mov
repnz
adc
cmp
sbb
enter
ss
sahf
dec
lahf
jb
fs
mov
outs
mov
jp
movs
(bad)
lea
sbb
popf
test
lods
stos
mov
enter
shr
jb
loope
in
mov
mov
add
or
and
xchg
mov
mov
mov
jns
push
push
mov
mov
cmp
cmp
cmp
mov
scas
lods
cmp
cmp
lods
stos
stos
test
mov
retf
outs
int
xchg
and
pop
or
inc
ror
fst
stos
outs
aam
sbb
sub
mov
mov
mov
mov
inc
pop
jle
mov
mov
leave
(bad)
js
pusha
push
fs
in
jb
mov
mov
in
leave
in
xchg
call
into
sahf
mov
ret
retf
dec
inc
rcr
(bad)
psrad
adc
repnz
mov
enter
adc
pop
and
sbb
mov
xchg
in
daa
push
inc
sbb
mov
inc
leave
retf
clc
mov
and
push
xor
cmp
inc
out
mov
mov
adc
fidiv
xor
sbb
add
sub
fst
dec
or
movs
ror
or
or
stos
nop
popf
add
mov
das
mov
cld
cmp
jmp
xchg
and
or
push
or
or
sub
aaa
inc
dec
jb
leave
leave
pop
arpl
jns
pushf
pushf
sbb
test
(bad)
adc
mov
sbb
das
mov
fmulp
xchg
and
and
and
and
fs
ret
adc
and
jb
jb
and
sub
sahf
mov
sub
xchg
daa
and
xor
xor
enter
mov
add
mov
mov
sub
pop
push
or
sahf
pushf
adc
add
and
cmp
sbb
pop
inc
or
je
dec
lahf
push
das
ret
pop
jb
add
fcmovne
shl
call
stos
lss
pop
mov
repnz
retf
or
or
inc
dec
mov
or
repnz
adc
enter
add
or
adc
sbb
jb
les
adc
adc
jnp
cmp
cmovb
das
push
sbb
sahf
mov
sbb
push
pop
jb
xchg
and
jp
push
mov
cmp
enter
and
and
mov
daa
mov
xchg
xchg
xchg
daa
retf
and
and
and
in
leave
enter
fidiv
loop
jns
xor
ss
pextrw
add
and
sbb
cmp
cmp
add
inc
in
xchg
cmp
shl
mov
dec
jg
pushf
mov
xor
retf
xchg
jae
lds
and
cmp
add
mov
in
xchg
or
mov
repnz
fimul
dec
into
dec
inc
repnz
shufps
and
dec
adc
adc
enter
pop
xor
sbb
inc
sbb
leave
dec
push
sbb
pop
sbb
repnz
jb
jp
and
and
in
enter
stos
and
das
in
leave
leave
and
mov
cmp
jb
cs
psrld
pop
pop
mov
xor
(bad)
xor
lock
mov
dec
(bad)
adc
sbb
add
sub
(bad)
in
in
inc
push
dec
pop
push
(bad)
pop
or
dec
pop
mov
dec
call
xchg
xchg
mov
ret
xor
mov
or
jmp
enter
mov
cmp
nop
adc
adc
adc
adc
xor
in
leave
enter
pop
inc
dec
sbb
repnz
push
pop
sbb
sbb
jb
pop
or
xchg
call
enter
es
repnz
sub
fisubr
loop
mov
repnz
das
leave
add
fst
adc
sbb
aas
mul
and
xor
cmp
fs
dec
cmp
push
cmp
sub
adc
cmp
in
leave
leave
leave
leave
cdq
nop
call
sub
leave
(bad)
or
dec
sbb
sub
xchg
ins
push
sbb
and
cs
fs
add
or
jbe
jb
or
jbe
xchg
das
pushf
cmps
mov
mov
jb
adc
adc
adc
pop
sahf
int3
sahf
jmp
pop
retf
or
fst
and
sbb
cmp
enter
sbb
inc
mov
bound
js
and
mov
and
xchg
(bad)
enter
fbld
or
ret
push
xchg
mov
sbb
daa
sbb
pop
int3
int3
inc
repnz
or
mov
dec
test
int3
int3
sbb
int3
int3
xor
es
cs
pop
int3
and
fisubr
ret
psrld
xchg
push
and
loop
jmp
or
push
sbb
and
inc
and
or
in
pop
punpckhbw
jae
cmp
cmp
aas
mov
sahf
mov
or
and
lahf
ror
(bad)
push
leave
xchg
fst
test
mov
and
push
(bad)
xor
cmp
dec
pop
sbb
jnp
jnp
gs
aas
jnp
push
pop
inc
mov
xchg
pop
pushf
and
mov
and
and
fsubrp
daa
hlt
sub
cmp
cmp
or
unpckhps
and
pop
sbb
jb
inc
dec
xor
mov
add
dec
inc
sahf
pushf
mov
xlat
cmps
and
ins
push
sar
daa
ds
cmps
stos
or
arpl
push
sub
inc
mov
dec
add
movq
and
into
das
jp
test
xchg
or
fisttp
mul
adc
ror
adc
xor
jbe
pop
sub
in
nop
setnp
cmps
sbb
call
vmread
adc
cwde
add
enter
add
pop
cdq
sbb
iret
or
or
cmp
das
sar
shr
int3
mov
nop
das
daa
xor
cmp
jb
lahf
adc
sbb
jnp
xor
(bad)
add
add
pushf
mov
or
mov
xchg
or
lods
or
mov
mov
jnp
adc
test
mov
mov
inc
leave
adc
adc
in
jmp
stc
jb
sbb
add
pop
push
push
mov
sbb
aas
sub
aaa
and
mov
and
and
and
xchg
xchg
es
sub
(bad)
fs
sub
dec
inc
mov
shr
fsub
xor
jg
popw
repnz
xor
aam
xor
stc
ret
xor
cmp
adc
sbb
sub
xor
ds
dec
daa
daa
mov
push
push
maxps
enter
das
add
or
leave
mov
cmpps
mov
int
fcom
jecxz
adc
and
psubw
pop
enter
sbb
das
and
sbb
enter
push
pop
pop
push
addr16
mul
setae
ret
enter
and
pop
(bad)
mov
and
xchg
dec
(bad)
mov
xchg
retf
adc
and
leave
add
add
mov
adc
loopne
lods
lds
sub
cs
inc
push
dec
pop
mov
or
loop
and
adc
jg
(bad)
out
fidivr
jge
das
pop
or
pop
lea
sub
mov
out
cmp
push
daa
aas
and
loopne
cmps
aas
pop
pop
ror
aas
test
xchg
add
adc
lock
and
enter
loopne
add
mov
jbe
out
sahf
out
jae
jno
sahf
out
sahf
outs
outs
ins
ins
imul
out
imul
dec
das
adc
in
jns
out
adc
and
inc
push
out
sahf
out
cwde
lods
enter
cmp
adc
sbb
dec
pop
xchg
sbb
les
add
outs
dec
inc
outs
and
pop
cmps
aas
in
jmp
dec
je
rcl
ins
fs
dec
aaa
das
pop
inc
inc
pop
pop
sar
add
dec
dec
inc
dec
push
pop
push
push
add
push
or
mov
add
imul
add
sbb
rcl
adc
and
mov
adc
dec
into
inc
jbe
mov
loopne
add
add
ss
sbb
sbb
inc
das
inc
mov
mov
ins
mov
sub
dec
out
inc
dec
imul
loope
dec
les
push
pop
xchg
xchg
test
pusha
xor
icebp
sbb
imul
sbb
dec
ins
loopne
and
js
clc
pop
or
inc
dec
push
xchg
div
mov
sbb
push
jmp
test
test
pop
sub
sbb
lock
and
sbb
or
mov
jne
push
dec
push
inc
inc
inc
jecxz
mov
jle
cmp
dec
inc
dec
dec
icebp
mov
inc
out
ins
ins
dec
push
xchg
test
lock
mov
cdq
xor
jnp
sbb
ret
aam
inc
add
ja
lods
mov
ds
xchg
addr16
addr16
sub
push
nop
or
inc
push
inc
push
xchg
in
or
xchg
xchg
int3
and
xchg
or
push
daa
in
mov
aaa
(bad)
sbb
popa
add
mov
mov
je
pop
push
mov
mov
inc
pop
outs
xor
jnp
sbb
add
das
loop
or
jbe
add
out
and
mov
ins
push
and
pop
add
daa
xchg
or
unpcklps
mov
jb
add
or
cwde
adc
add
pop
and
cmps
retf
mov
(bad)
add
in
xchg
dec
or
add
jns
cli
inc
push
mov
popa
pop
movs
push
or
and
pop
add
inc
or
in
push
inc
xchg
push
and
mov
add
popa
outs
dec
and
mov
fisub
xchg
pop
fisttp
push
ins
sub
cmc
cmps
push
test
pop
daa
outs
arpl
xor
dec
outs
fcom
xchg
adc
aaa
or
sub
cmps
inc
or
xchg
pop
add
pop
popa
dec
sub
cmp
adc
popa
je
aaa
inc
adc
or
ja
stos
test
outs
pop
movs
push
rcl
sub
adc
or
xor
nop
sti
pop
aas
jae
and
inc
lea
popa
pop
mov
inc
or
inc
(bad)
int
xchg
push
loope
pop
adc
adc
jbe
outs
dec
ja
jb
sub
push
adc
pushf
and
and
jns
inc
loopne
mov
sbb
or
ror
arpl
inc
pop
or
popa
jo
add
jg
ins
nop
lods
shl
inc
shr
pop
ds
and
pop
mov
cmps
sub
xchg
ss
inc
cmp
and
dec
mov
dec
push
dec
inc
pop
pop
xchg
push
inc
out
lods
mov
add
mov
push
stos
arpl
(bad)
mov
stos
addr16
pop
adc
sti
ret
fsubr
(bad)
push
push
inc
and
pop
test
mov
cmp
ds
out
and
iret
jbe
inc
lea
and
inc
inc
inc
pop
add
lods
imul
fwait
mov
mov
js
sar
mov
jnp
cmp
ja
inc
cmp
test
jg
jo
das
push
push
inc
inc
mov
sub
and
xchg
bound
js
xor
fcomp
add
lea
jmp
cmp
es
addr16
dec
add
inc
dec
dec
(bad)
aaa
ja
jecxz
mov
pop
mov
mov
adc
xchg
pop
jo
je
jb
(bad)
lea
jo
inc
outs
xchg
or
and
bound
(bad)
cmp
or
gs
lods
mov
aas
mov
xchg
mov
xlat
fild
pop
dec
xlat
dec
outs
push
nop
lods
fcomp
push
imul
jmp
out
push
pop
add
sahf
fadd
jns
inc
inc
xchg
arpl
mov
or
mov
ds
sub
(bad)
(bad)
(bad)
shl
fwait
push
ficomp
or
out
call
add
jno
adc
ja
push
inc
ret
daa
dec
and
add
sub
or
jg
pop
xchg
sbb
in
je
pop
adc
lahf
push
movs
loopne
daa
push
mov
dec
in
pop
and
fimul
ror
add
mov
mov
ja
pop
ja
add
repz
pop
adc
push
adc
pop
mov
mov
xlat
push
xchg
sub
mul
inc
mov
popa
in
enter
and
dec
sbb
ret
dec
ret
xchg
cld
out
push
add
sti
pop
jge
jne
dec
das
dec
dec
dec
(bad)
aaa
inc
inc
ret
(bad)
pusha
retf
pop
pop
xor
and
lea
cmps
(bad)
fcom
aaa
ss
sub
(bad)
aas
pop
vpunpcklwd
maxps
inc
ins
pop
jb
repz
les
or
in
jle
add
push
inc
add
(bad)
pusha
mov
pop
aaa
lahf
mov
xchg
fbstp
pop
or
pop
or
mov
push
(bad)
mov
ins
push
lahf
and
sbb
mov
pop
pop
dec
scas
shr
test
rol
pop
cs
dec
add
add
xor
(bad)
adc
inc
call
or
add
daa
ja
test
sbb
ins
inc
in
bound
or
scas
push
pop
aad
arpl
adc
ss
xor
jg
add
out
mov
mov
xchg
xor
and
push
fadd
mov
xchg
add
cmps
addr16
test
test
jmp
jb
jo
pop
movzx
or
je
xchg
pop
push
dec
pop
adc
inc
inc
arpl
inc
inc
(bad)
dec
or
jg
sbb
pop
stc
jno
(bad)
jg
iret
test
inc
rcl
mov
fld
xchg
xchg
xchg
rcl
clc
jo
lahf
xchg
mov
push
ror
shl
rcr
dec
imul
inc
inc
fs
push
xlat
sub
bound
ins
inc
(bad)
cmp
jg
sbb
add
sbb
ins
dec
mov
scas
cmovns
test
sub
dec
push
addr16
aad
or
jae
dec
push
jmp
push
je
mov
(bad)
push
dec
retf
mov
or
icebp
rcl
pop
aas
sbb
pusha
xor
or
std
jg
push
and
test
jg
(bad)
mov
loopne
sub
(bad)
jmp
aaa
cmps
bound
inc
test
sbb
lds
adc
(bad)
int3
inc
lock
mov
jae
stos
pop
and
in
mov
add
out
aas
push
repnz
cmp
and
add
imul
or
out
add
mov
push
inc
div
add
ret
test
or
test
jmp
push
out
xchg
dec
push
ret
out
sbb
call
jmp
shl
mov
jne
mov
stc
xchg
push
pushf
mov
xor
gs
dec
add
cmps
fild
bound
cli
(bad)
fs
inc
enter
dec
add
inc
fidivr
ret
and
pop
xor
add
adc
ss
movs
repnz
imul
stos
inc
stos
push
scas
aaa
xchg
and
or
and
dec
dec
test
add
mov
out
scas
pop
out
fidiv
lods
in
jno
jmp
pop
sub
add
push
pop
cmp
test
out
jmp
add
sbb
push
shl
ja
clc
mov
or
fisttp
mov
arpl
xor
adc
lahf
mov
pop
lods
sti
daa
mov
add
das
and
adc
outs
adc
push
push
(bad)
movs
mov
mul
test
inc
je
jg
(bad)
rcl
iret
pop
dec
pop
test
fisubr
pop
emms
pop
cmp
lahf
iret
bound
ja
push
mov
push
(bad)
(bad)
aaa
xchg
aas
pop
sbb
ds
jmp
nop
pushf
in
jno
in
sub
inc
bound
pop
add
cmp
mov
stos
mov
nop
(bad)
sbb
cmps
mov
inc
ror
add
ins
test
inc
xlat
jo
pop
push
dec
adc
sahf
repz
(bad)
cs
or
adc
inc
and
add
mov
mov
das
inc
inc
sub
lods
call
cmp
cmps
mov
movs
adc
inc
xchg
add
inc
pop
adc
mov
dec
xlat
scas
or
ss
xchg
push
or
mov
jg
adc
out
mov
push
pop
cmps
call
aas
aaa
mov
mov
xchg
js
dec
sbb
jmp
call
dec
adc
or
adc
push
(bad)
fistp
lods
ss
out
movs
rol
sub
pop
mov
cmp
enter
cmps
push
(bad)
push
or
and
sbb
jg
loop
popa
push
fbstp
pop
jg
sbb
pop
or
dec
dec
dec
inc
inc
pop
fs
inc
dec
inc
dec
push
dec
push
push
or
push
inc
xchg
pop
dec
les
adc
pop
jl
ror
or
xchg
addr16
adc
sbb
mov
(bad)
sbb
add
clc
sbb
push
cmps
push
xchg
adc
loope
ins
mov
dec
inc
xchg
or
ror
push
jns
cld
ret
aad
jecxz
das
sbb
test
repnz
lahf
adc
inc
xlat
cs
mov
test
cmp
ja
shl
ja
jb
into
adc
shr
pop
jecxz
mov
fs
adc
or
push
cli
inc
dec
pop
add
lods
xchg
or
or
lea
push
(bad)
pop
push
mov
adc
test
add
mov
(bad)
aam
mov
pop
ins
ins
outs
push
sub
sub
inc
or
mov
outs
add
mov
fstp
lods
xchg
push
out
pop
sub
inc
cmc
xor
dec
pop
sub
daa
adc
cmp
out
and
and
inc
jns
scas
call
add
mov
dec
loopne
push
movs
push
xchg
or
xor
pop
mov
ja
nop
push
push
adc
dec
push
and
loopne
dec
pop
push
push
sbb
aam
jae
out
lods
adc
inc
(bad)
fisubr
imul
dec
arpl
and
nop
adc
cmp
inc
cmp
sbb
clc
lock
cmp
inc
mov
push
pusha
daa
mov
mov
add
sub
stos
push
ins
mov
ins
and
pop
pop
push
pop
pop
adc
adc
stos
retf
pop
dec
sub
fild
bound
pop
pop
mov
lods
push
iret
(bad)
stos
dec
imul
xlat
sub
aas
out
imul
das
xor
mov
xchg
jne
gs
arpl
and
(bad)
inc
sbb
mov
xor
(bad)
mov
loopne
das
movs
mov
adc
inc
sbb
inc
jge
xchg
adc
loopne
mov
mov
jbe
push
and
xchg
dec
pop
pop
cli
adc
ins
sbb
imul
shl
aas
xchg
xchg
sub
das
outs
adc
cdq
mov
adc
addr16
out
adc
mov
mov
adc
nop
aam
cld
fisubr
push
adc
adc
call
out
push
shr
cli
(bad)
fnstsw
bnd
aam
popa
inc
jae
(bad)
aam
ins
pop
cmp
fldenv
and
sub
sub
shl
ret
lock
cmp
jg
fbld
lods
adc
call
xchg
ds
mov
pop
lock
adc
cwde
add
mov
add
daa
jmp
inc
sar
je
stos
(bad)
pop
xchg
pusha
xchg
pop
xor
test
xor
ss
dec
or
or
pop
xlat
aaa
shl
rcr
gs
(bad)
push
pop
aas
xor
and
xlat
leave
or
or
lds
out
inc
add
adc
addr16
push
dec
pushf
(bad)
dec
dec
mov
jbe
in
scas
ret
pushf
xchg
hlt
adc
add
and
or
dec
clc
or
sbb
cmp
cmp
add
lods
aas
outs
lea
pop
outs
enter
dec
xchg
sbb
and
mov
inc
mov
inc
lea
inc
sbb
aam
(bad)
push
and
add
mov
push
add
add
sbb
sub
sub
pop
pushaw
mov
xchg
dec
adc
inc
aas
add
aaa
push
push
ss
fcom
cmps
xchg
xor
ja
ret
mov
sahf
fld
ins
push
push
lahf
sub
call
pop
mov
lea
sahf
mov
out
jecxz
jge
out
(bad)
fstp
loopne
push
nop
adc
push
inc
mov
inc
mov
push
dec
jae
mov
cmp
sti
mov
mov
lock
sbb
pusha
xor
cmp
cmp
and
and
cmps
(bad)
inc
or
punpcklbw
add
ror
outs
mov
dec
(bad)
push
add
rcl
jo
or
iret
pop
test
push
je
jg
out
dec
inc
sub
sbb
addr16
add
call
jns
repz
test
xor
push
dec
sub
ins
sahf
out
or
call
cmp
movs
nop
jl
inc
sub
jns
out
loopne
push
shr
js
pop
push
jns
aas
iret
cmp
add
aaa
out
push
fsub
jns
out
mov
repz
or
(bad)
shr
pop
dec
and
jns
int
or
in
fadd
out
sahf
out
mov
mov
sahf
push
xor
jecxz
lock
fmul
repz
jg
add
je
push
mov
jl
repz
sbb
hlt
dec
loop
sahf
in
mov
push
mov
mov
repz
repz
xor
(bad)
pop
fmul
sub
sbb
cld
cs
aam
sbb
les
mov
and
and
inc
mov
out
and
jmp
fdivr
adc
(bad)
xlat
in
mov
fisubr
pop
inc
loopne
jg
add
clc
cmp
repz
rcl
xchg
in
and
adc
jns
int
in
hlt
in
les
xchg
test
sub
iret
mov
or
in
aam
xchg
mov
repz
inc
mov
pop
jo
jg
(bad)
inc
mov
push
push
push
inc
inc
inc
cli
add
xchg
rcr
add
mov
test
pop
stos
cmp
jb
mov
jl
dec
dec
dec
push
cmp
inc
inc
retf
adc
push
outs
push
aam
lods
mov
inc
sbb
adc
(bad)
and
pop
dec
pushf
sbb
pop
or
pop
lahf
add
scas
xchg
mov
mov
lahf
adc
push
lahf
aaa
adc
push
or
inc
push
int
dec
inc
addr16
fbstp
and
mov
adc
push
pop
test
lea
rol
push
(bad)
push
imul
mov
test
push
fcom
lahf
test
bound
movs
daa
test
dec
js
dec
daa
ror
push
inc
jnp
xchg
imul
or
push
adc
ins
and
mov
test
popf
push
fidiv
leave
and
pop
mov
or
shl
inc
sar
sub
push
dec
mov
sub
div
rol
jecxz
outs
(bad)
cld
pop
imul
add
adc
in
lahf
add
inc
add
outs
add
jbe
jmp
(bad)
not
leave
aad
mov
pop
push
pop
push
leave
in
in
or
or
aaa
or
outs
mov
scas
or
daa
adc
dec
outs
push
iret
adc
and
popf
pushf
inc
push
addr16
das
push
maxps
pop
imul
jbe
outs
pop
pushf
cmp
jb
push
pop
or
or
jb
jns
or
xchg
sub
cmp
xchg
xor
mov
data16
pop
ret
and
jmp
fistp
adc
push
jg
xchg
lahf
imul
in
nop
xchg
inc
adc
xchg
and
and
xchg
mov
mov
jae
adc
xor
test
idiv
and
or
and
(bad)
pushf
cmp
movs
sbb
sub
cdq
pop
mov
fld
pop
inc
inc
(bad)
jg
mov
iret
mov
in
call
sti
popf
jle
adc
push
ficomp
mov
xor
sti
sub
fcomp
loopne
jb
jle
fist
pop
sahf
inc
(bad)
cmp
push
in
cmp
repz
fcom
ror
out
iret
repz
out
sahf
mov
jns
out
je
ins
push
out
pop
push
dec
inc
iret
repz
sub
adc
sahf
out
cmp
cmp
lock
loopne
popf
clc
jns
ror
pop
push
mov
push
mov
mov
sahf
out
js
pop
inc
iret
out
sahf
xor
or
cmp
hlt
cmp
repz
in
aam
idiv
repz
cmp
mov
push
pop
dec
sahf
int
cmp
and
cmp
hlt
lea
mov
jg
adc
adc
mov
inc
and
imul
pop
pop
nop
jbe
das
inc
mov
push
mov
mov
cmp
repz
adc
aas
pop
das
push
or
rsm
and
inc
mov
push
cmps
das
aas
sbb
inc
add
xor
mov
push
das
push
push
push
std
push
inc
push
dec
and
pusha
dec
mov
pop
gs
ret
pop
xchg
nop
pop
mov
out
pop
sbb
lahf
les
add
das
push
cmp
pop
js
out
sahf
xchg
mov
repz
xor
mov
cmp
ins
cmp
sahf
out
ja
mov
repnz
repz
das
dec
ins
add
jb
push
adc
es
add
pop
addr16
mov
sbb
js
(bad)
sbb
retf
xchg
and
pop
push
rcl
cmp
jb
and
subps
popf
popf
popf
sbb
add
xor
and
pushf
cvttps2pi
sub
or
xchg
mov
adc
xor
nop
adc
cmp
enter
push
js
jo
and
sbb
and
fs
xchg
es
iret
pop
fld
cmc
clc
jmp
jbe
dec
or
mov
jmp
mov
add
sbb
rol
neg
push
mov
pop
mov
add
or
addr16
repz
repnz
inc
or
jg
add
enter
in
cli
or
or
inc
ds
ret
mov
adc
cld
xchg
mov
mov
sbb
into
(bad)
(bad)
(bad)
call
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
std
(bad)
(bad)
call
sub
mov
pop
cmp
cmps
iret
dec
js
(bad)
(bad)
mov
loopne
jmp
xchg
test
mov
cmp
inc
mov
(bad)
(bad)
(bad)
call
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
(bad)
(bad)
jmp
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
and
push
movs
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
and
mov
push
pusha
les
int3
int
add
aas
jno
or
mov
pop
fs
(bad)
(bad)
(bad)
dec
xchg
outs
adc
sub
sbb
pop
pop
mov
icebp
aas
ror
and
cmps
out
aas
(bad)
(bad)
(bad)
inc
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
(bad)
(bad)
dec
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
(bad)
cmp
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
in
call
out
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
(bad)
(bad)
(bad)
jl
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
(bad)
(bad)
call
cmp
std
xlat
cmp
mov
sbb
add
mov
aaa
(bad)
(bad)
(bad)
jmp
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
(bad)
(bad)
(bad)
call
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
pop
push
xchg
cmp
push
and
dec
dec
gs
std
or
pop
ficomp
in
inc
std
frstor
mov
iret
mov
loope
sbb
sub
add
sbb
pop
arpl
dec
(bad)
fdiv
xlat
cmp
mov
xor
arpl
mov
push
ret
inc
nop
call
aas
outs
jne
pop
outs
pop
jb
outs
fld
jno
(bad)
xchg
push
xor
test
pop
pop
push
bound
pusha
imul
push
push
xor
cmps
mov
test
call
push
jns
jns
xor
pop
inc
adc
mov
mov
cdq
mov
cdq
(bad)
adc
sub
mov
xor
std
shl
push
cs
or
test
mov
setbe
push
jae
ins
sbb
ins
ins
push
ins
sbb
dec
stos
dec
and
push
dec
inc
dec
push
push
or
sahf
test
cs
jge
push
je
cmp
out
dec
sub
jl
call
aam
lods
mov
cmp
pusha
push
inc
xor
sbb
jnp
call
in
jns
jl
jnp
push
push
inc
inc
mov
sahf
out
sbb
add
iret
repz
fimul
sar
lds
cs
sub
outs
das
add
or
jb
jo
sbb
jp
inc
cmps
jg
sub
bswap
fldenv
xor
scas
mov
pop
push
gs
les
xlat
mov
sti
mov
push
adc
mov
xchg
and
push
adc
ins
adc
push
sti
enter
push
add
add
aas
add
push
pop
daa
fsubr
jo
lods
pop
or
test
dec
shr
cdq
push
in
xor
or
(bad)
sub
mov
aas
fild
or
inc
aaa
xor
sub
sub
cmps
test
and
iret
mov
outs
arpl
inc
(bad)
out
(bad)
push
mov
adc
push
mov
outs
xchg
inc
mov
mov
push
dec
das
add
mov
push
(bad)
adc
shr
popf
(bad)
les
inc
fild
arpl
inc
or
ds
rcr
xor
cs
das
mov
lods
imul
mov
div
das
or
ds
push
inc
adc
pop
je
push
ja
aam
add
jne
fild
ins
out
in
ja
pop
mov
jne
ja
jl
and
out
bound
xchg
push
jg
jmp
mov
aas
or
xchg
aam
jne
xchg
mov
mov
push
(bad)
arpl
xchg
outs
imul
mov
ins
pop
inc
xor
addr16
dec
loop
sbb
mov
jnp
aaa
lahf
lds
adc
cmps
fisub
mov
out
ja
sub
nop
lea
pop
dec
dec
push
dec
inc
pop
call
inc
inc
push
inc
inc
push
scas
sbb
test
xchg
popa
nop
(bad)
mov
mov
aaa
hlt
outs
adc
ins
ins
xor
call
cld
inc
adc
add
adc
outs
pop
mov
ja
adc
jo
div
add
and
test
push
mov
push
and
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
les
add
ds
cmp
add
sbb
add
outs
jbe
mov
and
xchg
sahf
cmps
mov
rcl
in
(bad)
inc
xor
fst
popa
jo
push
xor
cwde
not
outs
cmp
nop
xchg
out
lods
rol
pop
sbb
(bad)
mov
movs
ins
(bad)
xchg
stc
jae
inc
push
gs
jmp
dec
jae
xchg
mov
popf
mov
cmp
ds
xchg
xchg
sar
sub
movs
movs
in
movs
mov
in
sub
pop
inc
push
test
mov
jb
sbb
dec
stc
cli
pop
push
dec
aaa
adc
inc
into
jnp
outs
dec
int3
inc
dec
inc
dec
iret
adc
lods
in
or
or
pop
inc
gs
addr16
jb
or
arpl
push
outs
push
sub
outs
cmp
push
or
gs
sub
jns
push
aad
arpl
pop
cmps
add
ins
mov
sbb
sbb
mul
push
dec
mov
adc
jae
shr
loop
fbld
xchg
leave
out
mov
jno
sub
adc
push
cmp
addr16
jge
mov
ret
jbe
sbb
popa
les
or
add
pop
push
add
push
gs
je
ins
ja
das
push
adc
lods
lea
mov
outs
imul
push
jo
push
ror
adc
sub
popfw
mov
inc
mov
dec
inc
jno
mov
les
xchg
pusha
out
sbb
push
pop
imul
xchg
arpl
push
daa
cmp
rcr
rcl
push
sti
lods
push
jae
sub
sub
dec
mov
and
sbb
popf
mov
test
rcl
pop
daa
inc
ins
into
jae
ret
xchg
(bad)
sbb
add
sbb
outs
ins
sub
pop
xor
jle
jne
fdiv
jbe
ins
lods
fs
and
imul
adc
int3
adc
repz
xlat
inc
dec
push
jbe
sub
xchg
sub
xor
xor
dec
dec
jo
or
std
push
outs
neg
xor
pusha
mov
in
imul
mov
mov
xchg
sbb
adc
mov
ins
sbb
sbb
push
pusha
(bad)
jp
arpl
mov
push
sub
imul
enter
push
ins
es
cwde
and
jns
mov
add
pop
sbb
sub
adc
loope
pop
push
imul
jne
(bad)
ret
xor
mov
pop
(bad)
inc
cwde
pop
cmc
sbb
inc
jae
add
pop
push
mov
(bad)
outs
sbb
outs
sbb
enter
dec
mov
sub
jnp
jno
and
inc
xor
lds
cmp
sub
fidiv
push
sbb
xor
push
ret
add
adc
push
leave
push
cmc
call
push
cwde
add
sbb
dec
pop
bound
push
ins
adc
jmp
arpl
sub
rol
sbb
aad
or
js
push
and
leave
or
popa
dec
jne
lods
add
jno
mov
push
jge
push
push
dec
dec
push
(bad)
ja
jmp
sub
dec
in
mov
les
cmp
adc
or
xor
and
adc
daa
dec
jmp
(bad)
ret
jno
inc
popa
test
add
shl
scas
cmp
sti
pusha
fbstp
sbb
and
ret
sub
iret
ins
push
into
inc
loopne
mov
cmp
cs
test
inc
inc
cmp
sbb
or
ins
and
jae
ret
ficom
mov
dec
ss
inc
jae
cmc
imul
shl
out
pusha
add
(bad)
mov
movs
xchg
sub
xchg
outs
adc
sahf
mov
sbb
jnp
or
xor
ins
jmp
call
inc
mov
enter
or
arpl
stos
popf
jo
(bad)
mov
jb
imul
xchg
xchg
sbb
or
arpl
out
inc
aaa
push
call
fdiv
add
pop
jnp
sbb
xor
adc
(bad)
xchg
repz
dec
push
sbb
movs
ror
fwait
inc
imul
call
ret
push
mov
dec
mov
mov
sbb
push
test
pop
aaa
sub
dec
ss
add
or
pushf
push
push
imul
js
sbb
sub
int
mov
and
and
xchg
pop
adc
add
retf
out
imul
add
sbb
ins
pusha
jns
sbb
mov
or
jns
dec
test
or
pop
sub
jne
loopne
sbb
mov
inc
or
mov
sbb
sub
add
(bad)
fdivr
push
mov
dec
jecxz
or
pop
xchg
push
dec
dec
jnp
sbb
ficomp
dec
xor
inc
adc
aam
mov
mov
sub
sub
push
loope
psrlq
cmp
jno
(bad)
push
mov
pop
dec
inc
sub
inc
dec
pushf
cmps
sbb
dec
sahf
mov
je
cs
adc
movs
ja
mov
add
test
push
dec
sub
push
cmp
push
sbb
(bad)
outs
mov
shl
out
aaa
out
pop
jge
loope
push
addr16
data16
push
or
mov
fcmovu
pusha
and
and
fmul
arpl
addr16
dec
xchg
jbe
inc
inc
jns
sub
push
xchg
loopne
xor
stos
sbb
and
inc
sbb
or
sahf
inc
xchg
(bad)
in
cmp
mov
movs
or
inc
call
sub
inc
imul
adc
sbb
outs
inc
push
inc
ficom
popa
xor
std
dec
inc
iret
dec
cmp
xchg
push
popa
mov
xchg
inc
jo
(bad)
arpl
add
mov
push
aaa
mov
iret
scas
mov
jns
enter
outs
mov
mov
lock
fs
xor
scas
dec
es
mov
jle
push
dec
push
dec
in
hlt
and
movs
out
movs
(bad)
out
push
(bad)
lock
adc
or
xchg
sbb
js
rol
mov
inc
and
popa
sub
jns
jmp
jbe
push
pop
mov
dec
push
pop
cmp
mov
mov
aad
pop
jns
pushf
int
sbb
inc
dec
inc
pushf
sbb
mov
sub
jae
sar
lods
imul
and
cld
xor
jmp
push
xor
cmp
pop
mov
ja
(bad)
cmps
outs
pop
retf
add
push
mov
adc
dec
pop
popa
pop
aaa
cmp
push
cmp
test
mov
dec
imul
adc
stos
mov
arpl
mov
mov
icebp
inc
pop
inc
dec
push
sbb
fidiv
(bad)
jae
or
mov
push
or
ja
imul
sbb
fild
stos
fld
daa
sbb
ret
jne
xchg
pushf
cdq
jo
sbb
pop
jns
jp
or
or
or
mov
jmp
dec
out
pop
xor
mov
cmp
daa
nop
cmp
sub
fsub
test
and
pop
xor
push
dec
inc
push
cmp
jl
sub
sbb
or
mov
int
push
call
mul
jae
adc
movs
add
xor
idiv
xchg
push
sbb
call
mov
xchg
nop
jo
(bad)
loope
fild
adc
daa
out
out
xchg
in
push
add
ja
test
pop
xchg
hlt
adc
js
mov
mov
or
lods
(bad)
popa
inc
jp
sub
mov
test
dec
pushf
or
inc
outs
pop
addr16
add
push
inc
out
xor
imul
xor
sub
add
or
sbb
add
rcl
or
outs
inc
ins
(bad)
sahf
sbb
inc
cdq
dec
mov
cmp
sbb
inc
inc
push
mov
or
aam
loopne
stos
jae
rol
fdivr
sbb
sbb
stos
mov
je
aaa
fwait
sub
mov
xor
and
mov
imul
sub
pop
fisttp
push
cmp
and
cmp
push
mov
ss
mov
pop
loopne
dec
pop
in
scas
cs
mov
movs
push
xchg
iret
pop
xchg
sbb
jecxz
mov
xor
push
out
mov
outs
outs
scas
sub
or
add
jmp
sbb
rcr
inc
ret
dec
(bad)
outs
dec
jnp
mov
out
popa
fs
in
pop
cmps
sbb
xor
out
dec
ret
adc
and
sub
add
mov
imul
sub
movs
add
adc
(bad)
adc
xor
shl
mov
xor
ror
mov
xor
or
add
cmp
nop
jmp
push
retf
or
leave
js
sar
xor
(bad)
dec
fsubr
dec
and
jp
jne
dec
or
dec
mov
test
or
rcr
(bad)
sub
sub
test
pop
sub
sub
ret
cmps
xchg
dec
xor
bound
and
ror
push
jo
(bad)
jno
fwait
aaa
or
gs
sub
shr
jae
mov
add
aas
ret
sub
clc
aad
test
retf
clc
push
dec
ret
jo
outs
mov
mov
cmp
push
jb
cmp
movs
aas
jns
mov
loopne
mov
mov
and
out
push
cwde
sub
mov
xlat
dec
enter
je
push
rcr
add
ficom
in
ins
aam
ret
rcl
dec
xchg
daa
xor
(bad)
stc
stc
inc
ins
pop
xchg
and
pop
loope
iret
fst
inc
inc
or
sub
aas
add
adc
mov
ror
jae
ret
arpl
mov
xchg
fs
cmp
mov
fild
and
in
or
mov
mov
gs
dec
push
sbb
movs
pop
inc
and
add
mov
sub
leave
push
push
inc
lock
jae
cmp
inc
jnp
push
ins
outs
jae
ret
jmp
pusha
enter
popa
push
or
cdq
adc
movs
ins
mov
aaa
adc
add
cmp
enter
out
(bad)
ficom
ds
outs
pop
sbb
mov
or
test
cmp
jns
or
fild
pop
mov
xchg
pop
movs
xor
pop
jnp
xchg
mov
jp
push
sub
cwde
and
lock
mov
sbb
scas
sub
inc
push
add
out
arpl
ss
dec
scas
ret
jae
retf
nop
gs
scas
inc
outs
xchg
and
cmp
ret
bound
inc
adc
sub
in
push
adc
das
inc
adc
sub
pop
push
sub
test
aaa
pop
jo
xchg
movs
push
mov
inc
and
and
mov
push
shl
push
pop
and
mov
lods
scas
fstp
mov
cmp
lea
movs
mov
or
xchg
fistp
movs
(bad)
jne
sbb
pop
in
aaa
push
adc
(bad)
(bad)
ret
pop
aas
push
push
imul
sbb
push
ret
cmps
jo
adc
retf
loope
loop
repz
sub
and
jne
test
ins
xor
sbb
push
add
ja
loop
pop
lods
inc
pusha
or
pop
data16
push
pop
jbe
pop
inc
addr16
loop
mov
(bad)
je
jmp
leave
in
jns
jb
fs
cmp
mov
push
retf
popf
inc
sbb
push
loopne
(bad)
add
test
inc
mov
cmps
pop
out
aas
sub
inc
fisttp
int3
popa
xor
jp
cs
(bad)
dec
xchg
jle
ins
repz
jo
je
jne
test
loop
outs
lds
cmp
out
int
fwait
dec
shl
pop
inc
add
and
inc
adc
jg
stos
imul
pop
jo
gs
pop
adc
inc
test
arpl
inc
pop
pop
fnsave
leave
outs
mov
add
mov
cmp
push
cmp
ins
dec
imul
popa
add
and
push
pop
fidivr
retf
lds
retf
pop
mov
add
test
sub
inc
inc
ins
rcr
std
cmp
and
xchg
aad
cmp
or
push
sbb
dec
dec
xor
adc
rcr
push
adc
sub
adc
xchg
pop
push
in
xchg
and
test
lods
inc
gs
xchg
cdq
mov
in
loope
mov
xchg
stc
imul
(bad)
(bad)
jns
or
xor
dec
das
mov
ss
pusha
repz
cs
inc
jmp
cdq
and
jno
imul
sub
mov
push
lea
iret
xchg
retf
push
add
inc
mov
mov
mov
ret
or
jne
bound
push
sub
mov
dec
pop
not
(bad)
sub
ret
inc
ss
pop
xor
or
jo
sbb
popa
cmc
pop
push
jg
fsubrp
nop
or
sahf
adc
mov
and
inc
adc
fwait
retf
jno
arpl
or
and
cmp
test
xlat
dec
xchg
(bad)
ret
sbb
out
add
loop
push
mov
ins
and
mov
jmp
cmp
xor
loope
and
(bad)
sub
ret
jmp
and
or
dec
xchg
test
jae
outs
ja
push
or
xchg
popa
inc
lds
(bad)
jbe
jae
xor
aad
inc
int3
(bad)
test
lea
jb
add
adc
cmp
jae
mov
mov
pop
cdq
or
les
idiv
fsub
push
sbb
push
pushf
lea
inc
mov
lea
daa
fadd
sub
jnp
mov
lods
das
ins
push
and
(bad)
(bad)
(bad)
in
ss
mov
inc
imul
xchg
dec
out
imul
imul
sbb
ret
stc
ins
mov
mov
push
arpl
aam
pop
sub
outs
sbb
cli
xor
test
dec
pop
and
sub
adc
out
add
in
arpl
sub
retf
add
cmp
jns
sub
push
cs
pushf
cmps
mov
and
jnp
out
in
das
inc
add
adc
adc
adc
pop
sub
adc
lahf
(bad)
sub
cmp
and
sub
and
sbb
sbb
(bad)
(bad)
out
clc
fwait
push
adc
and
dec
push
jp
(bad)
call
mov
imul
adc
aas
out
jnp
jnp
pop
call
or
add
push
cmp
pop
and
add
push
adc
sbb
(bad)
or
xor
sub
nop
test
mov
adc
or
add
fidiv
jae
add
sub
or
pop
mov
add
add
adc
xor
and
pop
or
sbb
fild
xor
adc
neg
push
add
adc
inc
adc
and
mov
adc
push
push
sub
push
xchg
push
(bad)
(bad)
in
(bad)
cmp
push
and
pop
and
sub
adc
or
sbb
dec
pusha
stc
(bad)
mov
adc
push
and
clc
add
push
or
pop
lock
inc
or
or
stos
adc
cmp
add
call
push
mov
cmp
jns
mov
or
dec
mov
pop
or
int3
or
pop
lock
pop
dec
dec
mov
and
xchg
adc
scas
sub
(bad)
idiv
add
mov
loopne
or
add
or
out
add
or
ins
mov
jns
add
or
push
cmp
loopne
sub
lock
lock
add
add
or
pop
pop
jns
or
(bad)
sub
or
mov
push
in
or
dec
sub
adc
(bad)
sub
fisttp
push
mov
xchg
repz
ror
mov
pop
add
push
add
mov
mov
push
js
sbb
xor
jmp
jne
or
adc
add
dec
pop
sub
push
mov
inc
mov
inc
sbb
mov
dec
push
cmp
mov
stos
adc
int3
dec
sub
retf
push
cmp
pop
sbb
rcr
scas
sub
es
cmps
xor
mov
sbb
push
adc
push
jo
xlat
popa
cmp
adc
(bad)
jb
mov
movs
adc
das
movlps
cs
push
adc
fstp
(bad)
jg
adc
movs
xor
pop
daa
push
cmp
and
fwait
and
adc
sbb
jo
fbstp
sbb
adc
push
add
adc
pop
adc
(bad)
(bad)
jmp
push
and
push
xor
adc
cmp
cmp
lahf
inc
lock
sub
js
hlt
add
fmul
push
jge
dec
mov
popa
add
cmp
cmps
add
imul
and
outs
mov
ucomiss
adc
int3
mov
pop
push
push
add
sub
mov
mov
and
adc
int
push
add
jge
push
xchg
lock
adc
mov
xchg
adc
mov
sbb
movs
dec
adc
jmp
jmp
sub
push
inc
adc
cmp
sbb
push
ds
mov
(bad)
jg
push
push
cmp
inc
add
push
test
xor
jle
jmp
das
ss
lock
add
and
je
sti
add
sbb
or
int
inc
xor
movs
push
and
(bad)
or
jmp
jge
lods
mov
add
es
xor
loopne
outs
fwait
cmps
mov
add
sub
cmp
mov
jl
pop
push
sub
cmp
inc
in
sbb
xchg
clc
mov
fisttp
dec
add
sti
lods
shl
outs
and
sbb
lock
add
and
pop
movd
or
push
jp
cmp
push
aad
adc
fsubp
fcmovnb
adc
xchg
adc
pop
fmul
or
cld
mov
cmp
add
or
sbb
mov
rep
mov
push
add
inc
mov
pop
jbe
xor
jg
inc
pop
add
inc
inc
imul
adc
add
sub
xor
xor
lods
add
loope
inc
add
push
inc
pop
ja
push
arpl
cmp
jmp
mov
push
test
js
or
add
lock
xor
or
mov
ret
lock
sub
dec
jb
es
jmp
adc
add
cmp
and
jmp
xor
xor
xchg
or
sub
lods
jecxz
out
or
call
and
jge
test
jns
je
lods
adc
mov
push
and
mov
jecxz
lods
push
pop
fidivr
cmp
lods
mov
xor
push
shl
lsl
dec
cs
inc
xchg
or
ss
ficomp
adc
pop
jno
sub
dec
and
cmp
add
jbe
add
repz
je
xor
popa
sar
push
add
jg
addr16
mov
sub
ffreep
repnz
hlt
jo
sbb
add
dec
call
repnz
pop
push
pusha
push
sub
push
push
push
mov
aas
cld
in
push
test
or
dec
adc
adc
sbb
std
or
inc
mov
stc
adc
cmp
out
push
clc
sub
sub
adc
and
xchg
or
push
sbb
inc
or
add
lods
das
clc
mov
lods
fidiv
dec
loop
sub
ja
adc
(bad)
push
or
ss
sbb
pop
push
and
jle
adc
mov
jmp
das
(bad)
and
imul
adc
and
mov
test
add
inc
and
lds
pusha
add
and
sbb
xor
mov
fisub
or
adc
xchg
scas
into
rcr
outs
in
xchg
and
popa
ja
push
sbb
fwait
lock
add
mov
inc
add
call
ror
add
xchg
in
sbb
adc
push
jmp
cmps
xchg
enter
push
adc
adc
mov
adc
or
adc
xor
std
jmp
adc
adc
mov
inc
push
push
push
lock
add
push
lock
add
out
mov
xor
or
test
dec
adc
fild
dec
mov
adc
inc
jge
dec
sbb
inc
sbb
mov
jns
pop
or
sbb
dec
cs
inc
pop
adc
pop
lea
or
or
add
dec
inc
pop
adc
add
pop
je
popf
add
pop
fwait
push
retf
test
cmp
mov
add
add
add
inc
push
adc
mov
jp
xchg
jge
cs
cmp
xor
in
push
test
cs
into
sub
adc
pop
cmp
add
dec
lock
pusha
mov
sub
sbb
cmp
sub
sbb
leave
and
jle
or
adc
lock
js
jmp
cmp
adc
bound
inc
lock
ss
cmp
and
mov
ss
jnp
inc
int
iret
lods
dec
rol
lock
push
js
sbb
pop
aaa
sub
dec
push
popa
vmovntps
fs
add
ss
lock
add
add
push
adc
inc
adc
or
push
lods
add
fs
cmp
push
add
lock
adc
jb
loope
out
cli
pop
and
add
sbb
and
sbb
(bad)
jle
pop
xor
pop
xor
(bad)
sbb
push
call
pop
pop
loopne
mov
lock
add
scas
fucomp
aaa
loopne
loop
adc
adc
lock
sbb
adc
push
sub
clc
scas
mov
adc
in
inc
push
sub
cmp
pop
punpcklbw
inc
adc
adc
adc
push
mov
add
neg
mov
push
fisttp
fild
imul
in
mov
sbb
mov
xor
cwde
leave
xor
adc
push
cmp
stos
lea
cs
iret
or
adc
pop
jo
dec
inc
pop
pop
pop
adc
adc
inc
sbb
loopne
fsubr
or
inc
mov
dec
mov
push
adc
xor
jo
add
dec
fcmovu
cs
mov
lock
push
add
sub
mov
xchg
and
cmp
sar
sub
xor
adc
sub
xor
pop
lock
add
lock
push
adc
sti
jg
sbb
scas
adc
adc
cs
sar
add
add
push
xor
cmps
(bad)
and
outs
push
ins
fidiv
push
jo
sub
or
and
and
mov
push
or
xor
or
jno
pusha
lods
loop
cmp
(bad)
rcr
cmp
cmc
out
push
push
adc
inc
dec
jecxz
pop
adc
jg
pop
adc
push
add
popf
les
test
test
adc
mov
adc
lock
adc
mov
jg
scas
add
and
fcomp
mov
and
call
adc
sub
mov
scas
ss
(bad)
arpl
add
les
add
out
xor
push
or
repz
pop
pusha
pop
stos
js
lock
adc
into
ds
aaa
mov
add
retf
pop
adc
(bad)
out
jbe
add
push
adc
lock
sub
nop
mov
cmp
pop
sbb
push
inc
cmp
popa
and
scas
aas
outs
mov
mov
lock
data16
imul
out
or
mov
or
mov
ret
push
or
shr
lock
xchg
js
not
xlat
adc
add
scas
repnz
test
pop
mov
inc
sub
ja
mov
push
stos
lock
add
mov
add
jbe
std
mov
inc
ret
mov
jecxz
lods
pop
adc
(bad)
jmp
and
adc
inc
pop
pop
adc
sbb
and
lock
xchg
adc
add
pop
ror
jns
xor
jae
or
xor
xor
mov
pop
and
loop
lock
cmp
xor
add
ror
call
sub
add
and
nop
shl
or
sbb
(bad)
mov
scas
or
push
add
mov
outs
jg
call
jne
cwde
or
adc
fbstp
sub
and
nop
and
outs
adc
adc
cmp
mov
add
adc
sbb
fcos
(bad)
mov
adc
mov
fstp
pop
lahf
adc
movzx
mov
jecxz
data16
stos
movsx
or
es
mov
xadd
inc
mov
pop
pop
fdiv
mov
add
and
nop
sbb
out
or
std
inc
cs
sbb
sar
push
adc
add
rcr
das
push
pusha
or
icebp
dec
cld
ins
mov
and
cmp
sbb
add
jno
lods
loop
lock
xchg
mov
push
inc
or
add
jmp
sub
dec
sbb
push
xor
and
pop
push
add
aas
aas
cmp
sbb
(bad)
pop
(bad)
and
mov
pop
mov
ins
test
lods
sahf
jmp
or
test
(bad)
mov
adc
push
sub
adc
sub
sub
push
push
sub
inc
adc
sar
or
adc
add
sbb
mov
fmul
sbb
adc
xor
xor
retf
sbb
sbb
bswap
fwait
xor
cmp
adc
js
inc
sbb
push
ficom
push
(bad)
fbld
mov
add
test
sbb
mov
inc
jp
push
cmc
sub
mov
adc
and
icebp
jg
popf
add
adc
push
mov
cwde
lock
or
add
cmp
sub
lock
inc
adc
push
pop
loopne
test
add
loop
pop
outs
push
inc
mov
adc
jno
ret
or
es
xor
adc
fs
pop
mov
cs
pop
pop
sbb
adc
inc
inc
inc
sti
fisttp
push
add
mov
mov
nop
jo
popa
sar
jge
mov
lock
pop
sub
cld
mov
jbe
jb
pop
dec
xor
dec
dec
add
pop
adc
xor
add
or
mov
adc
sub
mov
mov
dec
xor
push
xor
push
cld
sub
sub
fdiv
fdivr
outs
clc
pop
pop
push
sbb
fist
call
cmp
dec
push
sub
dec
call
inc
and
adc
fdivr
and
xchg
xor
sbb
call
mov
movs
jp
lea
lock
add
or
mov
and
xor
into
xor
ja
lds
cmp
ss
pop
add
hlt
inc
sbb
adc
xor
cmp
adc
test
jmp
sub
(bad)
push
mov
lods
mov
ds
cmp
fwait
ds
pop
push
adc
inc
xor
pop
outs
mov
das
add
add
lock
add
inc
jmp
sub
ficom
adc
in
xchg
cmp
push
add
dec
xor
ins
add
aad
gs
ins
sbb
push
sub
sbb
stos
data16
imul
adc
call
mov
xchg
add
push
out
outs
xor
push
inc
into
pushf
stos
or
xchg
adc
call
rcr
adc
add
xor
cmps
jbe
pop
xchg
push
pop
push
inc
dec
pop
aad
and
jp
and
jns
push
adc
sub
push
and
adc
cmp
jge
fisttp
das
adc
or
add
cmp
test
adc
sbb
sub
std
addr16
pop
cmps
jne
dec
adc
cmp
sub
outs
add
jg
add
imul
or
sbb
(bad)
cmp
sub
mov
das
cdq
mov
popf
add
mov
gs
cmp
cli
and
ds
shr
xchg
mov
pandn
pop
dec
rol
lods
add
push
add
mov
mov
inc
sub
adc
outs
or
push
cmp
add
(bad)
dec
jp
sbb
jle
or
or
sbb
push
jns
adc
cli
adc
stos
mov
shl
or
pop
imul
loope
adc
sbb
ss
sub
inc
sub
test
dec
pusha
cmp
mov
adc
packssdw
and
xchg
nop
mov
cmp
push
icebp
(bad)
out
or
pop
lock
sbb
jmp
and
sbb
jne
dec
adc
or
adc
cdq
div
xor
outs
lock
bound
cmc
aas
pop
cmc
adc
fiadd
nop
out
pop
push
lock
test
add
sbb
(bad)
aas
mov
sbb
adc
xchg
add
add
call
stc
dec
pop
or
lock
pop
jg
daa
and
inc
sub
add
inc
jge
rcr
ret
push
js
adc
inc
mov
cmp
jb
sbb
and
and
add
add
cmp
lock
mov
outs
arpl
(bad)
add
aad
dec
or
jmp
lock
pop
push
mov
xor
cmps
adc
xor
add
mov
fiadd
adc
dec
sub
fstp
ret
mov
lea
push
movs
inc
adc
movs
lods
mov
push
sbb
xor
nop
sub
push
test
(bad)
int3
xor
fwait
sub
add
xor
xor
cmp
mov
bound
ins
or
cmp
movs
add
xor
mov
jmp
push
mov
xor
push
bound
inc
xchg
adc
std
(bad)
dec
push
test
arpl
jb
sbb
sbb
sub
adc
aad
add
in
cmp
ss
sub
xor
sub
adc
cmp
pop
sub
jae
add
pop
iret
arpl
jnp
adc
sub
loope
adc
pop
sub
sub
mov
cmc
sub
push
inc
adc
cmp
out
add
pop
and
fisttp
mov
dec
mov
add
jns
mov
pop
sbb
mov
jmp
inc
outs
(bad)
inc
push
addr16
push
add
dec
add
js
scas
add
jge
ss
jbe
mov
sti
std
adc
lods
lods
xchg
scas
push
and
jo
mov
mov
sti
aaa
sbb
xchg
dec
pop
xchg
stos
cmp
mov
or
inc
jnp
inc
je
sbb
(bad)
mov
dec
dec
jmp
or
ins
fwait
std
add
dec
mov
push
dec
or
scas
jae
push
aaa
sbb
int3
jb
ja
call
sub
adc
xor
mov
lock
jg
push
movs
add
cmp
das
jp
sub
das
scas
test
lods
push
mov
icebp
fcom
mov
mov
add
xchg
dec
jl
mov
outs
mov
lock
mov
xchg
scas
add
and
enter
push
(bad)
and
fdivr
aaa
xor
add
cmp
xor
in
or
fiadd
pop
ins
xchg
sbb
adc
in
test
sub
aad
retf
pop
and
or
jbe
inc
data16
or
lock
or
push
adc
sbb
or
jmp
das
xor
xor
sbb
xor
idiv
call
test
sub
cmp
adc
mov
(bad)
inc
sbb
adc
adc
push
sub
add
mov
lock
xor
iret
adc
in
ss
aas
and
iret
ficomp
sbb
add
adc
fimul
or
add
push
cmp
jb
es
dec
add
and
or
pop
sbb
adc
mov
ja
(bad)
jmp
sbb
or
ds
nop
inc
inc
push
push
push
adc
pop
hlt
mov
or
movs
lock
or
or
ror
(bad)
in
lahf
out
pop
sbb
addr16
pop
pop
add
sub
adc
and
add
pop
in
(bad)
(bad)
jmp
push
dec
ss
fld
sbb
and
and
xor
scas
(bad)
xor
and
inc
adc
je
and
mov
mov
sub
pop
and
or
pop
mov
pop
ror
add
dec
sbb
sub
add
outs
sub
xchg
and
or
xchg
ds
mov
or
(bad)
push
xor
push
ja
and
adc
sbb
pop
shl
pop
(bad)
(bad)
fild
xchg
add
adc
inc
push
or
pop
ror
pop
adc
push
or
pop
pop
cmp
dec
push
ins
and
dec
or
ins
das
pop
icebp
call
adc
push
ins
daa
or
or
or
xor
adc
cmp
xchg
pop
cld
aaa
es
adc
sbb
adc
add
test
dec
sbb
xchg
adc
add
sbb
sbb
dec
bound
dec
sub
(bad)
call
(bad)
es
push
sub
sbb
xor
xor
xor
pop
sbb
and
and
loopne
pop
or
sbb
jo
mov
daa
lock
scas
add
retf
push
sub
and
leave
pop
cmp
fdivrp
(bad)
adc
and
or
or
lock
add
dec
or
xor
(bad)
sub
inc
dec
adc
adc
cmp
and
(bad)
push
fs
sbb
sbb
cs
inc
sbb
test
cmp
push
xchg
test
cmp
je
or
push
inc
xor
pop
ss
xor
xor
das
adc
bndstx
or
or
call
es
cmps
push
daa
daa
das
and
into
cmp
add
push
xchg
xor
sbb
or
ja
or
and
adc
or
(bad)
(bad)
jmp
pop
xor
je
or
sbb
and
jb
lock
add
(bad)
(bad)
jmp
adc
push
and
shld
adc
xor
or
jl
outs
popf
retf
mov
push
or
adc
jmp
(bad)
push
adc
sub
mov
adc
xor
sbb
inc
sbb
adc
mov
push
or
or
cmp
sbb
ins
and
sbb
movs
push
cmp
push
push
push
or
inc
(bad)
push
lahf
adc
pop
sub
call
ds
adc
push
outs
adc
pop
sub
push
push
mov
or
unpckhps
inc
or
push
test
xchg
out
out
jo
jle
push
inc
and
pop
xor
add
fcomip
and
and
mov
pop
pop
or
cs
fidivr
inc
adc
push
rcr
xor
ins
add
jl
outs
scas
or
jnp
push
mov
call
adc
fs
lds
and
pop
pop
add
aad
xchg
mov
sahf
adc
ret
sub
or
fsub
mov
push
push
ins
adc
push
cld
inc
inc
sub
je
add
(bad)
jp
out
mov
dec
or
fs
dec
adc
cmp
adc
push
mov
mov
or
pop
lods
and
fs
inc
cld
call
mov
inc
push
das
lock
add
ja
fmul
adc
or
vxorps
pop
rcl
or
dec
xor
bound
popa
sub
lock
mov
pop
mov
clc
(bad)
in
call
or
inc
shr
push
inc
cmp
cmp
jne
cmp
cmps
mov
sub
imul
push
xor
or
or
adc
sub
fisttp
push
and
or
sbb
or
adc
mov
cs
cld
or
or
adc
(bad)
inc
clc
bound
ss
ret
outs
sbb
inc
xchg
and
xor
dec
loopne
xor
dec
adc
cli
jg
call
sbb
mov
cmp
pop
sub
sub
inc
scas
js
xor
xor
push
das
inc
dec
pop
cmp
clc
add
les
ss
add
and
add
push
xchg
loop
std
inc
push
pop
push
and
dec
xchg
xor
xchg
(bad)
adc
sub
mov
dec
inc
ror
push
cs
and
inc
push
sbb
and
xor
and
and
pop
pushf
xchg
nop
shl
inc
lock
lock
pop
mov
pop
cmp
dec
adc
nop
pop
adc
inc
adc
or
inc
(bad)
comiss
sub
sub
jmp
sub
adc
pop
repnz
das
dec
es
jl
xor
push
xchg
call
pop
sbb
xor
out
sub
sbb
adc
fwait
dec
push
frstor
or
and
loopne
or
mov
(bad)
fisttp
or
ucomiss
or
or
stos
or
out
mov
dec
or
push
sbb
call
or
in
jnp
inc
or
and
adc
pop
out
icebp
sub
lea
adc
and
sbb
loope
adc
clc
fwait
mov
add
add
inc
xor
push
repz
jmp
lahf
sbb
cmp
xor
add
scas
sub
jbe
inc
dec
dec
push
loop
test
adc
adc
adc
push
sub
adc
pop
pop
sub
or
ret
mov
jno
das
xor
les
(bad)
xor
test
xor
fs
popf
and
out
adc
dec
stos
dec
and
fdivr
dec
cdq
push
popa
fcomi
jmp
cmp
or
sbb
adc
dec
or
dec
mov
les
adc
mov
mov
mov
bound
sbb
and
or
fwait
cmp
push
mov
in
xor
sub
lock
adc
pop
adc
dec
enter
sbb
sub
jmp
xor
cmp
pop
inc
push
jne
lock
push
cmp
sub
outs
cmps
call
and
aaa
pop
fisub
popf
push
sbb
xor
clc
outs
cli
ja
mov
inc
outs
popa
inc
pop
xchg
or
pop
xor
mov
cmp
sub
sbb
push
das
je
es
sub
call
jg
and
test
jmp
daa
movs
pop
sbb
mov
adc
adc
cld
scas
(bad)
dec
sub
sbb
push
pop
push
xor
sub
or
adc
push
xor
pop
push
hlt
pop
bound
cmp
pusha
fst
mov
inc
or
push
adc
adc
add
shl
fs
sub
push
and
adc
(bad)
jg
adc
daa
lock
dec
int
rcr
inc
loope
push
sbb
pop
pop
out
add
pop
xor
hlt
add
jo
sub
mov
push
std
pop
pop
or
cmp
nop
adc
or
xor
push
xor
loopne
js
dec
lea
push
lods
and
adc
stos
sbb
daa
adc
scas
adc
or
cs
and
push
push
or
push
add
(bad)
fdivr
sub
sbb
sub
iret
mov
push
add
mov
push
outs
add
and
jmp
dec
mov
push
out
(bad)
adc
sbb
dec
dec
sbb
inc
pop
movs
jg
(bad)
jl
add
lods
dec
out
push
and
inc
and
push
jo
ds
in
push
sub
cmp
sbb
add
mov
sbb
push
dec
push
sub
jne
sbb
and
wbinvd
or
push
sub
mov
(bad)
dec
adc
pop
pop
or
inc
arpl
sbb
push
adc
pop
(bad)
lock
add
push
scas
inc
fwait
mov
call
dec
inc
sbb
jb
mov
lahf
pop
loopne
adc
bound
jge
jmp
mov
sahf
sbb
cs
sbb
sbb
add
and
pop
dec
(bad)
adc
xchg
xor
ss
pop
jg
pop
leave
add
and
push
lods
enter
ds
adc
mov
shr
and
push
imul
and
jecxz
push
call
dec
push
sub
sbb
sbb
cs
sub
adc
jb
push
push
outs
add
ss
cdq
dec
jne
loop
xor
push
and
mov
(bad)
or
stos
pusha
push
push
pop
and
bound
jne
and
adc
cmovnp
cld
inc
cmp
xchg
pop
out
dec
or
sbb
sbb
sbb
lock
inc
xchg
pop
pusha
push
pop
add
test
daa
add
std
das
sub
pop
addr16
pop
or
sysenter
inc
mov
cmp
cld
femms
cld
xor
xchg
xor
adc
pop
adc
sbb
lock
fs
into
ret
xor
add
cmp
pusha
cmp
je
lea
cs
cmps
or
push
push
enter
and
sub
aaa
stos
xchg
push
ret
pop
and
sbb
scas
xor
xor
dec
adc
(bad)
dec
je
and
cmp
ja
dec
dec
sbb
and
sub
ds
gs
dec
sbb
jnp
inc
es
scas
or
(bad)
or
adc
test
inc
add
dec
sub
xchg
dec
sub
sbb
lods
scas
clc
lods
jmp
push
jae
sbb
aas
xor
sbb
xchg
mov
inc
dec
push
adc
or
and
sbb
paddw
and
mov
jo
sub
or
adc
xor
add
add
adc
jne
or
paddusb
add
ret
outs
outs
jmp
and
sub
and
or
cmp
xchg
outs
fiadd
dec
push
ret
jp
or
xor
push
or
jecxz
cmps
and
sbb
pop
sbb
sub
pop
cmp
popa
mov
add
inc
xchg
jne
adc
push
mov
call
call
or
enter
sbb
xor
movs
cmp
jmp
inc
push
ror
or
add
and
sub
push
mov
pop
inc
lea
push
adc
shl
es
cmp
add
pop
mov
pop
add
dec
xor
jle
add
pop
scas
in
cmp
arpl
dec
or
and
(bad)
mov
sub
arpl
xor
inc
cmp
aaa
fbstp
adc
pop
xchg
adc
pop
dec
push
or
push
call
pop
or
push
lods
sub
adc
add
inc
pop
xor
out
or
es
ror
or
sbb
jae
dec
pop
scas
lea
xor
push
outs
or
inc
das
dec
sbb
and
sbb
mov
pop
push
test
(bad)
(bad)
cmp
push
or
pop
push
or
daa
cmp
adc
pop
sbb
or
and
outs
xchg
imul
cs
enter
addr16
outs
sub
pop
or
adc
mov
xchg
rcr
cmp
(bad)
jmp
jne
aas
jnp
arpl
push
sub
or
adc
outs
pusha
sbb
xor
adc
or
test
or
mov
mov
mov
and
push
and
cmp
sbb
ja
cli
add
pushf
sbb
adc
sbb
and
inc
ins
pop
dec
sbb
inc
push
xor
adc
xor
pop
or
fs
and
loopne
jge
inc
jp
or
or
pop
test
xchg
sbb
dec
jbe
push
push
xchg
sub
push
adc
inc
sbb
call
mov
fs
inc
sbb
in
push
and
js
push
(bad)
push
pushf
xchg
xor
adc
mov
lock
jg
adc
add
sub
pop
dec
mov
add
sbb
lock
add
dec
or
pop
out
pop
inc
stos
mov
push
in
pusha
(bad)
xor
push
inc
popa
retf
call
dec
or
jnp
data16
and
xchg
sbb
or
cmp
das
adc
scas
sub
inc
das
sub
sbb
(bad)
enter
or
adc
sbb
push
adc
aaa
cdq
(bad)
adc
sbb
adc
je
pusha
es
fwait
pop
hlt
pop
inc
cmp
imul
cdq
add
fwait
mov
popa
cld
test
or
ds
pop
dec
adc
sbb
dec
or
inc
and
in
bound
cmp
sub
ds
js
sub
lock
cmp
aaa
pusha
adc
and
cmp
adc
push
cmp
push
das
push
sub
push
das
and
jae
(bad)
mov
xor
xor
cmp
xchg
or
xor
xor
push
and
ds
adc
mov
mov
adc
test
or
(bad)
push
test
inc
push
es
and
popa
push
(bad)
hlt
dec
pop
and
adc
or
js
mov
xor
or
sbb
adc
sub
push
or
mov
call
xchg
xor
inc
ficomp
or
les
or
mov
cld
push
outs
cmps
xor
push
mov
or
and
push
or
ss
jne
add
pop
out
adc
pop
cs
(bad)
mov
adc
das
push
(bad)
adc
xchg
mov
or
push
dec
push
dec
sbb
pop
mov
test
fmul
sbb
push
xchg
call
adc
sub
cli
(bad)
jmp
pop
push
dec
sub
mov
inc
adc
sbb
sbb
adc
adc
sub
jne
pop
es
std
pop
mov
sub
pop
or
adc
sub
inc
inc
pop
ror
or
sbb
pop
loopne
pop
or
inc
cmp
or
or
sbb
inc
dec
jmp
out
aas
sub
ins
clc
aaa
xor
adc
pop
cs
push
enter
int
dec
daa
xor
das
inc
inc
and
ds
ret
aaa
sbb
mov
ss
push
cmp
sbb
and
xsavec
or
and
and
and
inc
mov
cs
cmp
xor
xchg
pop
xor
daa
dec
mov
call
push
jecxz
call
push
push
adc
and
inc
adc
sbb
cld
das
clc
bound
mov
jmp
push
and
push
push
adc
xor
dec
dec
and
push
inc
sbb
dec
or
push
inc
push
jecxz
or
and
js
mov
cmp
pop
sub
cmp
pushf
adc
ror
retf
mov
lock
test
xor
push
pop
adc
push
jg
mov
das
or
ss
dec
cmps
xchg
or
scas
jmp
push
sbb
fiadd
mov
lock
push
pop
mov
push
lods
jo
inc
dec
ret
push
inc
push
shr
xor
test
lds
inc
mov
mov
or
in
movs
cmp
jb
sub
pop
(bad)
(bad)
(bad)
call
retf
pop
cmp
push
sub
ds
jae
mov
inc
sub
sbb
push
arpl
adc
pop
push
and
cs
xchg
sub
adc
push
adc
dec
(bad)
adc
adc
or
adc
xor
hlt
(bad)
mov
sbb
sbb
sbb
adc
inc
sbb
push
push
es
xchg
call
enter
push
sbb
push
mov
and
cmps
add
mov
xor
pop
hlt
inc
sub
adc
mov
aaa
cmps
and
add
in
and
and
cmp
sbb
sbb
and
mov
push
xor
adc
xchg
jo
data16
cmp
add
test
pop
and
or
or
sub
pop
jno
daa
or
sbb
or
push
and
out
or
pop
or
push
call
push
and
or
imul
loopne
add
adc
ret
or
inc
adc
dec
add
push
jno
stos
fisttp
imul
dec
sub
pop
sub
(bad)
jg
pop
adc
push
and
sbb
sub
sub
pop
sub
imul
pop
sub
pop
or
ficomp
ss
mov
sub
adc
pop
xchg
jl
mov
adc
xor
xor
jg
mov
cld
aas
jle
imul
popa
pusha
xchg
add
push
push
inc
cmp
mov
sub
pop
sbb
and
adc
pop
pop
int3
(bad)
dec
adc
sub
test
add
dec
scas
or
push
jge
and
jp
or
movups
adc
xor
dec
bound
sub
bound
push
xor
sbb
bound
loope
push
add
xor
dec
cmp
push
and
adc
cmp
xor
call
mov
adc
push
adc
and
inc
adc
outs
outs
loop
add
pop
push
sbb
cmovne
fwait
inc
sbb
pushf
xor
jns
ss
imul
sbb
bound
pop
inc
mov
dec
daa
mov
inc
popa
lods
sub
pop
dec
cmp
sub
xor
rol
pop
cmc
(bad)
mov
and
cmp
sub
pop
adc
das
xor
adc
or
(bad)
jmp
repnz
sbb
jge
sbb
adc
inc
inc
inc
dec
push
xor
jno
cmp
adc
pop
pop
adc
sbb
outs
jae
cmp
sub
cmp
sbb
xchg
adc
xor
pop
adc
adc
adc
push
adc
pop
or
or
sub
cmp
dec
mov
minps
hlt
push
pop
or
lds
call
sbb
dec
in
cli
add
das
adc
adc
and
and
fst
push
int3
dec
(bad)
or
sub
or
into
out
add
cmps
and
fidiv
hlt
add
adc
push
call
xor
or
xor
jo
pusha
or
sbb
or
and
(bad)
(bad)
fiadd
lods
adc
inc
cmp
adc
inc
inc
sti
jmp
pop
add
ds
push
adc
mov
add
add
sub
sbb
sbb
adc
adc
pop
sbb
adc
outs
(bad)
fwait
push
jl
sub
inc
mov
sub
inc
fs
xchg
divps
scas
loopne
adc
xor
outs
or
or
test
push
inc
retf
dec
push
push
std
mov
pop
adc
adc
cmp
push
push
xchg
add
inc
das
and
clc
bound
mov
sbb
sbb
push
adc
or
and
bound
sbb
sbb
mov
adc
sbb
sbb
sbb
adc
shl
fisttp
jb
push
xor
sbb
or
add
jb
adc
push
sbb
aaa
pop
inc
sbb
and
adc
jle
or
push
sbb
xchg
dec
mov
outs
adc
sbb
add
mov
mov
scas
xchg
sub
mov
dec
and
daa
mov
(bad)
pop
(bad)
jmp
sbb
call
adc
push
xor
pop
bound
call
or
jecxz
and
sub
mov
sbb
add
frstor
lahf
popa
push
add
mov
xor
add
adc
mov
adc
adc
jl
cld
sub
cmp
adc
sbb
or
sub
and
sbb
dec
add
adc
add
inc
or
sbb
push
push
mov
lds
cmp
adc
pop
inc
inc
or
popa
jmp
push
rcl
xchg
pop
pop
jne
sub
mov
sbb
xor
(bad)
inc
sbb
lea
cmp
inc
gs
or
and
push
and
ins
nop
sbb
mov
cmp
adc
or
pop
sub
push
jb
mov
push
lock
in
loope
stos
jo
push
pop
retf
sbb
sbb
mov
mov
add
shl
cmp
or
movs
mov
and
mov
(bad)
push
push
data16
push
pop
adc
pop
add
lock
jg
push
or
and
hlt
call
sub
lock
jmp
adc
mov
xor
sub
adc
push
or
cmp
(bad)
(bad)
call
pop
xchg
pop
pop
pop
pop
pop
push
test
jo
dec
and
xor
dec
cmp
push
pop
xor
outs
clc
das
nop
bound
cmp
adc
mov
sub
cmp
xor
sub
inc
adc
sub
inc
adc
aaa
ds
aam
adc
and
jge
push
popa
inc
push
adc
(bad)
push
pusha
or
call
inc
cmp
adc
ss
std
pop
mov
or
adc
push
and
dec
push
adc
pop
push
sub
sbb
xchg
std
mov
add
shufps
(bad)
aas
mov
or
sar
pop
sbb
dec
(bad)
in
ins
and
mov
pop
pusha
sbb
and
push
mov
test
ror
cmps
pop
jb
or
mov
add
cmp
es
and
inc
push
mov
dec
inc
arpl
or
dec
inc
inc
or
pop
push
xlat
paddw
lock
dec
cwde
sbb
adc
push
ja
in
xlat
dec
sbb
arpl
aas
or
pop
adc
ins
xor
inc
or
push
jl
cwde
pop
inc
push
sbb
mov
clc
dec
mov
pusha
sbb
jg
mov
cmp
aam
sbb
jae
push
mov
call
(bad)
adc
or
pop
adc
add
nop
rcr
push
inc
add
mov
adc
imul
sbb
and
or
adc
scas
xchg
or
ss
daa
adc
inc
(bad)
(bad)
out
fisub
rcr
aas
adc
push
sbb
sub
daa
push
dec
cld
outs
sbb
xor
push
sbb
cmp
fcom
mov
dec
xchg
adc
inc
pop
add
sar
aaa
sub
push
nop
dec
or
ds
xor
sbb
push
jmp
sbb
and
and
xor
adc
cmp
jl
and
add
push
ficomp
adc
rcl
and
jge
adc
xor
sar
sbb
loopne
sbb
sbb
inc
clc
pop
js
and
mov
xor
cmp
das
mov
adc
add
pop
add
mov
adc
ins
add
loopne
adc
jp
dec
jl
adc
push
cld
push
jge
push
xor
lods
fcom
je
adc
push
rol
pop
rcr
mov
xor
adc
mov
add
nop
bound
fld
jae
sbb
jns
or
popa
mov
or
sub
ret
cmovo
sub
outs
out
push
loop
bound
hlt
jb
mov
ret
fcomp
sbb
pop
sysret
dec
adc
xor
ja
pop
xchg
or
or
or
(bad)
push
push
push
and
sub
xor
adc
retf
aam
repnz
push
mov
sbb
push
adc
push
sub
push
sbb
push
dec
jno
mov
aaa
std
inc
push
or
jb
out
inc
pop
dec
or
and
mov
pop
adc
aas
mov
or
push
xor
call
pop
dec
mov
adc
outs
js
ja
or
mov
xor
add
or
sub
inc
pushf
and
dec
lahf
(bad)
fistp
and
push
pop
adc
sbb
sbb
cmp
fbstp
hlt
fisttp
sub
inc
or
inc
fsubr
or
cs
xor
pusha
or
push
or
ds
call
arpl
or
imul
push
mov
or
push
ds
outs
push
push
pop
test
pop
scas
cli
das
shr
aas
inc
cmp
mov
push
lea
xor
mov
ins
sbb
call
inc
outs
aad
aam
fcom
push
add
push
or
xchg
pop
das
rol
stos
fs
inc
add
xor
sbb
icebp
inc
(bad)
das
xor
and
in
or
bound
inc
ss
jb
inc
ja
loop
hlt
pop
jb
and
sub
daa
sbb
dec
ss
call
test
pop
and
push
push
sbb
xor
and
xor
fucomi
jmp
cmp
and
adc
and
jg
mov
sbb
inc
and
adc
ss
dec
clts
movaps
and
sub
sbb
adc
push
cmps
pop
lods
rcr
js
mov
cmp
mov
sbb
push
cmp
lahf
lock
add
test
les
lock
jno
pop
and
or
nop
mov
pop
leave
and
mov
sbb
mov
push
sbb
sbb
sub
push
sub
(bad)
cmp
sbb
retf
pop
test
and
adc
sub
scas
clc
mov
pop
cmp
aaa
pop
sbb
sahf
cmp
sbb
dec
adc
dec
inc
and
sbb
lods
inc
and
push
loopne
icebp
movaps
push
outs
pop
lock
out
mov
xor
mov
push
or
mov
lock
das
call
xchg
push
dec
mov
cmp
add
cmp
or
ret
or
aaa
sbb
je
lock
mov
and
ss
and
xor
outs
add
push
push
sbb
and
mov
(bad)
(bad)
(bad)
jmp
sub
mov
adc
pop
inc
push
dec
cmp
pusha
dec
pop
cvtps2pi
(bad)
sub
or
or
or
test
adc
and
sbb
ds
adc
mov
cld
and
test
and
adc
pop
adc
sbb
pop
xor
cs
cs
push
pop
hlt
mov
sbb
pop
push
adc
xor
add
pop
out
gs
movs
and
or
(bad)
push
xor
adc
push
lods
inc
sbb
sbb
clc
scas
add
lock
add
push
cmp
loope
stos
and
push
dec
adc
sub
jmp
cli
dec
cmp
outs
pop
vmread
outs
xor
pop
cld
jmp
dec
sub
xor
push
jae
or
(bad)
(bad)
(bad)
mov
aaa
aam
inc
mov
dec
mov
imul
pop
mov
xor
sbb
mov
xchg
cs
(bad)
es
sbb
or
jg
lock
add
leave
xor
adc
mov
lock
int3
or
fwait
sbb
xor
(bad)
lock
add
outs
push
mov
inc
push
sbb
or
aaa
icebp
xchg
loop
mov
movs
jb
or
cli
cwde
xor
test
push
cmp
adc
xor
outs
sbb
mov
push
adc
dec
clc
push
mov
sub
or
rcl
push
rcl
adc
cmp
adc
cmp
cdq
(bad)
mov
mov
cvttps2pi
cli
sub
pop
push
sub
inc
cmp
das
xor
pusha
(bad)
ucomiss
jg
sbb
and
or
push
or
jle
jmp
adc
and
or
sub
xcrypt-ecb
cmps
or
sbb
push
adc
mov
pop
push
cmp
enter
jnp
sbb
cdq
clc
lock
fdiv
pop
or
add
pop
pop
jl
rcr
call
and
dec
push
sub
pop
and
dec
sbb
fsub
sub
sub
bound
push
stos
cmp
mov
sub
dec
mov
dec
push
xor
dec
adc
test
push
js
sbb
int
scas
pop
out
ficomp
mov
mov
dec
lea
inc
movs
xchg
adc
add
call
cld
sbb
push
adc
and
xor
dec
cmp
xor
sub
shr
lods
and
sbb
movhps
sub
sbb
inc
or
ss
add
inc
cwde
push
add
push
xor
mov
add
inc
dec
(bad)
(bad)
adc
sbb
dec
dec
cmp
or
dec
dec
out
jg
and
adc
inc
adc
adc
aas
or
pop
cmp
(bad)
aaa
test
cmp
pop
rcr
retf
mov
pop
adc
mov
fild
and
and
adc
pop
dec
dec
ss
adc
sbb
and
xor
or
adc
dec
cli
cmps
scas
inc
pop
pusha
lock
data16
adc
test
out
aaa
pop
clc
or
and
push
push
push
add
pop
adc
adc
and
or
xchg
call
or
and
xor
sbb
cmp
inc
or
inc
adc
xor
ficom
adc
or
lock
pop
fs
(bad)
cmp
pusha
or
ds
push
(bad)
and
fnstsw
adc
loopne
and
adc
cmp
test
mov
sbb
data16
and
ins
jo
mov
das
sub
add
pop
dec
and
or
inc
push
ds
dec
js
add
call
push
adc
dec
mov
or
jecxz
aam
cdq
add
pop
sbb
or
inc
outs
aaa
unpckhps
jae
sbb
and
mov
cmp
push
pop
or
or
adc
or
loope
outs
or
adc
adc
adc
pop
and
sbb
jo
clc
sbb
addps
or
(bad)
jg
or
adc
push
or
or
or
call
int3
push
sub
sub
and
xor
(bad)
mov
mov
pop
sub
sbb
xor
push
pop
mov
(bad)
inc
out
inc
sbb
inc
mov
fs
es
dec
(bad)
jg
jle
and
push
dec
jno
dec
test
jne
aad
or
sub
pop
inc
adc
add
inc
or
imul
jp
std
mov
cmc
jp
add
dec
push
push
(bad)
and
xor
retf
scas
(bad)
fbstp
adc
inc
fsub
mov
push
push
or
mov
jmp
xor
sbb
sbb
cmp
pop
cmps
push
xor
mov
or
hlt
js
and
cli
test
jg
cmp
mov
sub
xor
sub
inc
das
adc
loope
sub
imul
fs
sub
icebp
adc
sub
and
pop
sub
xor
push
push
lods
aaa
or
sub
cmp
pop
mov
fisttp
adc
cmp
(bad)
lock
inc
and
ss
sbb
inc
and
popf
and
pop
es
and
pop
add
aas
and
or
or
es
jge
dec
adc
jbe
pop
push
aaa
adc
test
js
inc
dec
sahf
sbb
les
(bad)
(bad)
mov
xor
adc
adc
jns
push
push
and
dec
push
mov
lock
jg
sub
cdq
inc
cmp
mov
retf
test
adc
sub
or
adc
str
sub
test
and
sub
or
pop
hlt
mov
retf
or
sbb
or
inc
adc
pop
mov
jmp
push
adc
inc
push
and
pop
sbb
dec
pop
mov
or
push
cs
or
out
mov
xchg
es
scas
scas
and
sbb
add
movs
(bad)
popf
dec
or
sbb
xchg
dec
adc
ins
outs
test
or
data16
adc
add
stos
push
push
arpl
pushf
cmp
adc
pop
sub
xor
jae
gs
lock
in
sub
adc
cdq
arpl
(bad)
(bad)
aaa
dec
mov
xlat
xchg
js
xor
jbe
pmulhw
xchg
mov
cli
or
fisttp
cmp
or
push
cmp
pop
dec
pop
icebp
scas
cli
dec
bound
cmp
jns
jae
dec
mov
clc
addr16
ds
and
mov
and
sbb
and
sbb
sub
xor
adc
cmp
gs
sub
or
adc
pop
or
dec
cmp
or
and
or
dec
pop
jb
inc
sub
sub
sbb
mov
(bad)
pop
xor
and
sbb
pop
jb
sub
or
and
sahf
jo
mov
(bad)
fiadd
das
imul
pop
ret
and
lods
dec
cs
popf
and
xor
inc
or
pop
fcom
cs
xor
or
adc
ret
or
adc
(bad)
adc
fild
and
sub
(bad)
adc
out
cli
pop
fisubr
or
test
or
je
inc
pop
xchg
xor
xor
ja
dec
jp
jmp
sub
xchg
cmp
call
pop
sub
aas
daa
or
mov
xor
adc
mov
cs
popa
cmovl
std
ffree
aaa
push
push
les
add
lea
pusha
cmp
pop
and
mov
push
ret
and
jbe
pop
and
pusha
or
outs
inc
pop
mov
sbb
dec
and
sub
push
aaa
dec
or
movs
lock
or
inc
es
push
add
les
xchg
jbe
cmp
sub
pop
loopne
and
sbb
aaa
sbb
mov
inc
iret
pop
adc
scas
clc
call
adc
push
dec
popa
aaa
sbb
pop
out
push
mov
sbb
ins
or
(bad)
push
jmp
xor
sbb
cmps
sbb
pop
xor
and
movs
xor
psubb
dec
cli
push
and
jb
jg
pop
adc
adc
adc
pop
bndldx
cs
ret
sbb
and
push
xchg
xor
or
out
(bad)
pop
sar
sub
dec
adc
sub
mov
add
dec
or
or
or
js
shl
adc
inc
or
push
dec
shl
in
sar
inc
xlat
call
push
jle
(bad)
push
xor
adc
xor
fistp
xor
das
cs
and
(bad)
(bad)
out
(bad)
cmp
sbb
pop
mov
pop
dec
inc
and
dec
(bad)
sub
adc
cmp
mov
sbb
aaa
and
fwait
add
sbb
add
dec
adc
ds
xlat
or
dec
dec
loop
or
or
pusha
and
sbb
and
cs
dec
add
inc
outs
jo
dec
push
jmp
es
pop
or
es
rol
(bad)
popa
and
sbb
mov
push
pop
fild
and
pop
adc
sbb
adc
ret
push
sub
pop
sub
sub
and
sbb
popa
pop
push
(bad)
aas
jp
fsubr
sub
pop
add
(bad)
dec
dec
daa
push
push
or
outs
stos
outs
push
xor
or
jbe
mov
movs
jg
xor
jmp
scas
jno
sub
push
xor
sbb
movs
sbb
add
jno
daa
mov
adc
mov
pusha
das
cli
aaa
adc
adc
sub
mov
mov
call
pop
mov
pop
inc
inc
orps
(bad)
fisttp
and
mov
or
xor
pop
gs
sub
pop
adc
and
(bad)
xchg
or
ja
add
or
add
mov
and
push
enter
mov
dec
outs
and
test
jns
dec
pop
xor
and
jecxz
or
add
pusha
stos
fs
das
sbb
or
adc
(bad)
aas
cmp
xchg
dec
push
stos
and
js
ds
dec
pop
adc
push
sub
adc
inc
or
push
mov
inc
ds
xor
(bad)
fist
mov
test
ds
push
push
sbb
(bad)
clc
push
xor
pop
or
or
cmp
add
push
mov
ret
lock
push
cmp
jmp
dec
sbb
cmp
pop
adc
outs
dec
test
mov
or
popf
or
clc
or
sbb
jg
inc
adc
pop
adc
dec
cwde
push
test
int
or
sub
jno
cli
leave
add
jle
clc
(bad)
dec
in
sub
push
add
or
or
xor
xor
sbb
sbb
adc
adc
scas
sub
cmp
inc
jecxz
pop
ja
pop
mov
push
adc
and
adc
adc
inc
fist
jp
xor
push
or
inc
xor
and
dec
add
aaa
inc
pop
or
mov
xor
push
pop
jmp
adc
or
bndstx
inc
xor
push
adc
xor
(bad)
(bad)
jg
and
inc
sub
aas
xor
arpl
jp
sar
cmp
sbb
xor
sub
js
stos
sub
add
add
outs
stos
sbb
inc
inc
imul
sbb
push
mov
inc
ror
sbb
mov
and
nop
clc
or
jo
or
movs
cli
jmp
sbb
daa
sub
loope
add
pusha
ret
or
xchg
pop
mov
lock
add
push
sbb
addr16
inc
les
out
xor
sbb
stos
nop
scas
adc
pop
sbb
xor
sbb
mov
cli
push
inc
cmp
lahf
or
loopne
inc
push
das
sar
xor
inc
and
or
jo
call
or
xor
(bad)
(bad)
dec
stos
or
cs
sub
cmp
and
inc
sub
add
scas
call
sbb
xchg
dec
or
jl
sub
inc
adc
ss
xor
adc
or
imul
pop
js
aaa
std
sub
pop
inc
sub
pop
or
and
xchg
xor
aaa
adc
fcomi
outs
loop
add
and
test
stos
and
add
sbb
rcr
add
(bad)
jmp
dec
adc
sbb
push
sbb
xor
jb
or
push
dec
and
ins
jae
or
ds
sahf
xor
sub
sbb
sbb
not
(bad)
push
jp
lock
push
ins
lods
or
inc
sbb
jae
dec
adc
or
mov
add
xor
push
or
xor
mov
gs
or
addr16
sub
xor
or
outs
push
cs
and
ss
sub
jo
cld
call
xor
or
cmovge
or
adc
lea
cmp
jg
xchg
mov
cmp
(bad)
movs
adc
adc
or
and
(bad)
and
(bad)
cmp
pusha
mov
adc
push
or
sbb
xlat
sbb
lock
push
xor
pop
sbb
sbb
sub
push
es
inc
or
imul
cli
jg
jbe
or
out
adc
push
sub
sbb
into
jg
sar
sbb
adc
ds
inc
inc
call
cs
(bad)
int
adc
aas
or
push
mov
loopne
cs
xor
pop
fs
nop
sbb
push
adc
sbb
mov
call
ja
sbb
sub
lock
call
or
xor
sub
inc
dec
adc
loope
aad
push
sbb
push
cld
aam
or
dec
or
cmc
stos
mov
int
push
inc
mov
mov
loopne
clc
fild
sbb
and
adc
mov
push
gs
push
and
jp
adc
push
ins
inc
sub
daa
sbb
mov
adc
mov
(bad)
fistp
mov
sbb
outs
sbb
xor
adc
pop
outs
sub
mov
push
or
mov
aaa
imul
and
sbb
pop
jg
pop
hlt
push
inc
mov
or
dec
push
cs
call
les
pop
mov
sub
adc
push
and
(bad)
cmp
imul
and
cs
outs
or
or
imul
ins
xor
cmp
pusha
cwde
dec
jne
aas
cmp
push
mov
sbb
sbb
aas
sbb
dec
push
adc
or
inc
inc
or
dec
(bad)
(bad)
mov
sub
and
adc
sbb
sbb
es
shr
and
int
stos
sub
mov
mov
sbb
sbb
adc
push
scas
(bad)
(bad)
push
stos
and
pusha
jle
pop
push
es
cmps
(bad)
and
xor
std
dec
inc
dec
aaa
xor
int3
xchg
push
popf
add
les
or
jl
retf
jns
popf
push
repnz
call
test
or
xor
push
invd
push
dec
sbb
push
pop
hlt
dec
dec
js
lods
adc
or
mov
dec
xor
das
cmp
dec
sar
adc
outs
mov
loopne
in
jle
or
pushf
mov
shr
pop
dec
sub
xor
jo
and
shr
pop
adc
mov
sar
or
lea
sub
jo
and
rcl
pop
test
inc
push
and
sbb
sub
or
sbb
pop
or
hlt
jg
and
push
jp
sbb
mov
adc
cmp
(bad)
mov
das
and
sbb
cmp
push
and
dec
cdq
dec
int
pop
sub
cmp
ret
pop
sub
adc
loope
adc
lock
mov
nop
push
and
adc
xor
aaa
inc
pop
adc
cmp
or
(bad)
clc
jmp
sbb
cmp
stos
jle
mov
ins
push
adc
pop
xor
adc
adc
(bad)
mov
xchg
pop
cmp
or
rol
jge
adc
sub
add
(bad)
out
clc
pop
mov
das
pushf
xor
jp
inc
jo
daa
xor
or
in
(bad)
call
xor
cmp
dec
or
dec
push
sbb
sub
cvtpi2ps
popa
xor
or
ss
or
pop
sbb
(bad)
cmp
push
cmp
adc
cmp
push
and
les
ss
cmp
sbb
push
push
cmp
or
dec
cwde
cmp
jo
pop
cmp
mov
dec
aas
ss
push
push
inc
sub
(bad)
mov
sbb
push
xor
push
fwait
ss
scas
(bad)
jmp
cmp
xchg
xchg
xor
or
pop
xchg
mov
inc
xor
aaa
inc
js
ss
push
inc
and
call
push
xor
outs
ins
push
popf
add
cmp
std
jmp
xchg
sbb
add
push
ror
push
lods
call
sub
cmc
cmps
inc
cli
and
jne
out
xor
nop
pushf
clc
pop
aam
adc
inc
cmp
popa
dec
clc
ret
out
sub
adc
xchg
inc
or
push
add
xlat
push
jmp
daa
push
inc
ins
cwde
or
pop
and
ins
pminsw
lock
xor
dec
and
or
cmp
sbb
sub
mov
and
(bad)
out
push
ins
or
pop
dec
add
sub
xlat
inc
seta
pop
cvtps2pi
test
dec
push
imul
(bad)
jmp
cmp
aad
jge
sbb
push
mov
and
or
cs
sub
fisubr
adc
call
(bad)
(bad)
dec
fadd
daa
push
push
or
or
xor
xor
outs
sub
adc
sub
adc
sbb
fild
(bad)
in
xor
sub
pop
dec
push
mov
pop
push
and
(bad)
cmp
es
or
sub
cmp
cmp
scas
push
loop
repnz
and
ds
bound
and
movs
fucomp
inc
scas
div
cmp
and
or
idiv
cmp
jb
or
push
and
cmp
or
add
(bad)
mov
imul
sahf
and
pop
sbb
es
jmp
or
adc
inc
jo
pushw
cmp
mov
or
adc
sbb
fistp
in
or
jbe
adc
loopne
xlat
mov
cwde
push
call
mov
jg
jmp
or
(bad)
outs
sbb
retf
or
lea
mov
mov
sub
adc
ret
add
js
imul
fwait
shl
xchg
out
data16
call
arpl
or
push
or
(bad)
dec
dec
sub
push
arpl
and
sub
int
int
push
pop
sub
push
sub
xor
mov
(bad)
js
(bad)
inc
das
jae
aas
push
and
pop
or
push
sahf
mov
jo
jecxz
daa
lock
or
push
in
adc
push
jp
scas
clc
pop
sbb
push
sbb
and
push
sbb
adc
or
ja
lods
cmp
dec
imul
or
pop
aam
paddd
loopne
xor
jae
imul
jno
and
push
or
xchg
lods
inc
das
push
pop
or
lock
mov
arpl
scas
adc
sub
jno
sub
and
adc
xor
aas
pusha
adc
jmp
sub
(bad)
or
sub
sbb
(bad)
mov
xchg
or
je
adc
or
and
and
das
adc
sub
or
or
call
jmp
arpl
ja
dec
sbb
and
je
cmc
jg
pop
cmps
adc
or
cmp
adc
inc
sub
rcr
sub
dec
push
adc
jge
adc
call
pop
push
adc
or
xor
sbb
jbe
adc
xor
ja
dec
call
test
test
xchg
mov
addr16
xchg
in
pop
repnz
ins
xor
or
inc
fimul
pop
and
pop
dec
ja
mov
push
ret
pop
hlt
pop
push
movups
sbb
lea
push
shl
jg
push
or
sbb
sub
mov
mov
cmp
add
dec
out
mov
scas
sbb
and
and
jmp
aas
jl
push
inc
pusha
and
dec
mov
lea
fst
outs
push
sbb
sbb
cs
es
push
call
pop
adc
cmp
mov
sbb
xor
adc
sub
xor
or
lds
mov
outs
dec
push
dec
adc
enter
inc
icebp
inc
inc
jnp
sub
adc
loopne
and
and
stos
clc
fist
fimul
and
daa
mov
pop
adc
sbb
push
jecxz
das
jne
or
daa
pop
sbb
nop
or
sar
sbb
adc
adc
and
cmp
lods
and
add
dec
sub
mov
xchg
imul
or
pop
mov
dec
cmp
or
or
into
and
ds
scas
push
push
or
inc
mov
inc
push
dec
dec
icebp
xor
sbb
sbb
adc
jmp
and
cmp
or
les
call
adc
(bad)
imul
arpl
or
or
or
mov
add
adc
dec
rcr
or
and
lock
add
call
sbb
and
ss
popf
cmps
pop
cs
xor
pusha
and
(bad)
jbe
mov
xchg
sub
cmp
mov
jbe
push
sbb
bound
push
mov
lock
jne
and
pushf
sbb
mov
dec
inc
adc
sbb
pop
inc
inc
ret
out
daa
adc
je
dec
pop
pop
scas
mov
inc
push
aas
pop
adc
pop
xor
push
dec
pop
and
xor
(bad)
cmovge
ins
pop
add
add
das
xlat
adc
pushf
int
ret
scas
movs
(bad)
cs
outs
lock
pop
mov
adc
pop
xor
sbb
je
xchg
lock
lods
ds
adc
cld
jg
or
push
pop
lock
add
xchg
cmp
sub
cmp
and
push
je
pop
adc
add
cld
(bad)
mov
mov
and
jb
sub
sub
popa
or
sub
push
xchg
sbb
call
pop
fmul
push
jecxz
and
adc
pusha
js
inc
jl
ss
pop
and
sub
xchg
shl
jl
cdq
nop
xor
dec
and
sub
jge
add
and
xchg
adc
jmp
sub
test
pop
test
cmp
dec
jno
mov
or
aas
sbb
push
and
push
pop
das
jp
mov
inc
or
pop
xor
sub
jmp
add
adc
and
push
jbe
sbb
adc
inc
inc
push
inc
or
push
pop
std
inc
and
adc
adc
adc
pop
adc
pop
or
rcr
pcmpgtb
adc
cmp
jg
adc
add
xor
xor
or
xor
(bad)
dec
jnp
je
sub
jg
jb
sbb
cmp
pusha
cmp
scas
and
cmp
jb
sbb
and
jge
or
dec
icebp
dec
dec
sub
add
cmp
or
sbb
or
arpl
mov
aas
fs
push
dec
or
adc
sbb
jne
and
loopne
icebp
mov
xor
or
pop
or
mov
dec
daa
jb
scas
push
inc
or
pop
xlat
jno
sbb
cmp
rcr
and
fs
inc
adc
and
push
xor
pop
sub
adc
and
sub
adc
adc
sbb
js
ficom
push
sub
ins
ror
pop
or
mov
jmp
dec
push
fs
dec
lock
jl
xchg
dec
cmp
das
dec
adc
mov
inc
or
ds
gs
adc
inc
lock
mov
(bad)
fst
or
pop
pop
cmp
sbb
aas
dec
in
hlt
fcomip
and
push
mov
pop
push
and
or
call
pusha
in
sub
mov
push
push
sbb
xchg
or
and
das
sbb
adc
out
push
fadd
or
or
mov
imul
pop
sub
ja
sahf
sub
inc
sub
pop
push
or
xchg
or
sbb
push
ret
dec
cmp
xchg
push
xchg
jmp
cmp
dec
or
sub
push
adc
scas
or
adc
cmp
aam
nop
xor
sbb
movs
adc
add
jg
jmp
adc
and
xor
mov
push
mov
pop
inc
xchg
add
or
or
loop
out
in
pop
sbb
cmp
push
add
adc
repnz
jae
push
adc
in
or
sbb
inc
mov
loop
arpl
bound
ins
clc
mov
das
sub
daa
bndldx
adc
and
(bad)
jmp
push
ret
sub
fwait
pop
ss
sub
or
pop
mov
or
jne
pop
test
or
or
and
mov
les
or
pop
mov
fdivr
jge
es
out
sar
adc
cmps
jl
inc
mov
sub
adc
or
xchg
sbb
vmaxsd
dec
or
xor
adc
push
or
pusha
adc
cs
jo
inc
pushf
or
outs
or
outs
push
sub
bound
icebp
push
int3
push
or
loope
sbb
or
push
push
xor
stos
icebp
dec
aaa
popf
adc
sbb
sub
pop
or
mov
pop
lock
and
xchg
dec
push
or
aaa
mov
fmul
jp
xor
push
dec
push
xchg
outs
dec
jo
or
mov
push
data16
in
fwait
(bad)
ja
push
mov
adc
adc
loop
dec
inc
push
sbb
adc
jge
inc
lahf
and
and
sub
outs
stos
aas
xor
das
pop
push
jle
stos
mov
push
pop
sbb
cmp
les
dec
dec
sbb
and
dec
or
inc
mov
rol
pop
push
or
test
loopne
inc
call
and
ss
xchg
sbb
aas
add
and
fwait
pop
icebp
fild
sub
xor
mov
in
sbb
push
mov
sbb
mov
cld
call
pop
adc
push
inc
pop
sub
sbb
or
xor
and
aam
test
mov
cmp
xor
sbb
outs
or
cmp
test
inc
daa
pop
mov
sbb
pop
jo
lock
add
ins
sub
push
mov
adc
sbb
cmp
pop
loop
leave
push
xor
adc
mov
sub
inc
push
xor
inc
adc
adc
cli
(bad)
call
sbb
cs
adc
inc
aas
or
sbb
das
sbb
pop
test
xor
and
xor
xor
mov
(bad)
(bad)
mov
inc
push
cmp
or
pop
movs
inc
push
xor
push
adc
dec
jnp
or
das
xor
push
pushw
and
aaa
cmp
js
mov
push
sbb
sbb
or
add
xor
adc
mov
cmp
leave
push
je
sbb
xor
inc
(bad)
(bad)
mov
sbb
cvtpi2ps
daa
adc
push
push
xor
outs
adc
dec
adc
sbb
mov
sub
dec
scas
mov
xchg
es
and
or
adc
mov
or
inc
add
ja
cmc
mov
adc
push
or
clc
xchg
mov
add
add
and
sbb
cs
rol
cmovnp
mov
mov
and
(bad)
out
out
adc
test
pop
jno
push
or
dec
jle
or
sub
sub
or
movq
cmps
or
adc
cmovl
(bad)
or
xor
or
std
add
scas
and
lock
movs
and
and
pop
mov
lods
push
out
pop
or
cld
movs
or
and
dec
mov
sbb
or
mov
and
ss
push
pop
xor
push
fimul
sbb
push
adc
out
(bad)
or
push
or
sbb
or
jne
adc
add
sbb
push
or
dec
or
or
adc
dec
lock
add
(bad)
sub
cdq
or
push
xchg
or
sub
or
push
adc
push
add
cmp
sbb
push
sub
sbb
sub
dec
inc
adc
xor
cmp
or
cmp
and
stos
das
pop
pop
jo
ss
fisubr
out
jmp
sbb
xchg
add
add
shl
sbb
push
adc
outs
pop
and
movs
inc
addr16
adc
mov
mov
in
adc
sbb
or
retf
add
imul
jge
lock
adc
sub
cmp
adc
adc
or
adc
or
xor
adc
or
cmp
adc
mov
mov
sub
inc
push
inc
or
sbb
and
int3
(bad)
xor
and
and
pop
out
push
mov
xor
cs
mov
inc
loopne
fadd
and
inc
pop
popa
neg
dec
pushf
sbb
jp
or
or
push
xor
fcmovbe
push
cmp
add
fisubr
add
and
add
sbb
and
cmp
into
mov
mov
pop
mov
xchg
pop
or
inc
or
fcom
mov
aam
pusha
adc
or
data16
cmp
ds
dec
jl
adc
xor
outs
pop
jne
sbb
add
sub
lds
adc
pusha
adc
dec
dec
push
ret
cs
mov
(bad)
and
xchg
push
and
or
adc
sbb
dec
call
pop
inc
push
push
jo
aaa
or
or
fmul
or
fsub
pop
pop
jb
add
cmp
sbb
add
nop
sbb
jge
fadd
and
rcr
dec
sti
ja
mov
or
inc
push
add
dec
inc
sbb
int
cli
popf
ror
xchg
inc
or
or
or
add
cmp
push
mov
add
add
clc
das
nop
jb
or
or
pop
push
cmc
das
push
stos
and
ds
push
and
push
pop
fild
scas
or
xchg
pop
mov
pop
mov
pop
loop
shl
push
inc
pop
popf
xor
jp
and
or
pop
sahf
cmp
loopne
sub
mov
cwde
je
xchg
dec
shl
pushf
inc
sub
lock
and
pop
xor
jne
dec
in
inc
js
pushf
sub
mov
push
sub
add
add
sbb
inc
mov
aaa
ret
addr16
or
pop
sbb
adc
or
(bad)
adc
cwde
or
xchg
cdq
push
loopne
sub
adc
or
push
gs
test
mov
or
rcl
sub
mov
div
jg
add
or
jle
xchg
sub
loopne
mov
int3
js
and
push
inc
add
in
test
shl
or
adc
shr
cmp
out
adc
or
ret
and
adc
sbb
push
aaa
push
adc
test
xchg
push
or
xor
and
dec
dec
mov
and
js
push
jmp
sub
pop
jg
or
sub
jnp
adc
(bad)
idiv
dec
addr16
pop
dec
adc
or
arpl
cdq
shl
stos
add
sub
sub
adc
lods
mov
or
cmp
adc
jg
push
ficomp
push
adc
ror
dec
into
test
or
inc
cmps
shl
or
mov
mov
sbb
push
and
sti
jmp
add
pushf
xchg
imul
add
xchg
add
dec
or
loop
or
cmp
push
or
adc
and
adc
ins
cmp
mov
mov
inc
dec
or
push
jmp
and
aaa
std
sbb
or
adc
adc
push
pop
inc
adc
inc
adc
jo
pusha
jae
loope
push
mov
js
pop
cmp
ror
gs
or
push
call
inc
js
es
push
retf
mov
fs
les
call
in
and
mov
cmp
push
and
jl
or
mov
lock
adc
hlt
xlat
outs
mov
or
cmp
pop
outs
adc
ret
push
xchg
retf
or
mov
mov
cli
dec
sbb
pop
pop
pop
sbb
sbb
pop
pop
int3
and
rol
push
adc
jle
(bad)
call
jg
pop
or
push
adc
sbb
inc
sbb
or
stos
adc
and
lahf
(bad)
sahf
push
adc
stos
repnz
pusha
and
add
jmp
sub
es
cmp
cmp
jp
push
push
sbb
loopne
mov
pop
push
or
xor
fsub
xor
dec
and
xor
pop
arpl
sub
inc
sub
inc
and
and
daa
mov
pop
and
pop
jl
pop
sub
mov
daa
or
in
jmp
and
sbb
sbb
dec
and
sub
ds
sub
movs
jo
pop
xor
es
sbb
or
es
ffreep
push
pop
stos
sub
push
or
cs
cs
scas
clc
push
and
and
and
xor
dec
xor
xor
cmp
add
xor
pusha
adc
sub
outs
pop
inc
xor
sbb
dec
cmp
jl
push
inc
ds
cmp
mov
or
sbb
add
push
mov
sub
xchg
and
mov
sbb
add
xor
cmp
pop
push
dec
xor
loop
(bad)
outs
int
sub
xor
pop
sub
sub
daa
push
loopne
xchg
test
fwait
std
push
or
cmp
inc
pop
push
ins
das
push
dec
cmp
inc
ss
xchg
xor
mov
xor
push
cmp
sub
ss
xor
push
xor
and
fidivr
sti
mov
je
xor
ss
xor
dec
dec
sub
and
ss
(bad)
int
or
pusha
into
pop
cdq
jo
sub
data16
pop
pusha
fstp
cs
test
inc
and
jno
fidivr
lock
inc
es
sub
ja
mov
pusha
mov
add
push
loopne
lock
inc
cmp
and
repz
adc
repnz
sub
sub
xchg
mov
sub
inc
sub
sub
dec
sub
loopne
inc
mov
aas
push
aaa
push
xor
clc
pop
sub
jnp
dec
aas
xor
sub
xor
ror
mov
sub
fstp
dec
cmp
cmp
and
xor
outs
(bad)
(bad)
outs
adc
cmp
xor
pop
fcom
sub
popa
jo
inc
dec
and
aas
sub
xlat
jo
test
and
xor
pop
xchg
sub
(bad)
je
add
mov
sub
xor
cli
ds
inc
imul
push
push
dec
xor
adc
stos
call
push
or
jle
pop
sbb
jb
push
push
ss
dec
push
sub
sub
dec
sub
rol
out
cmp
mov
sub
inc
jp
stos
cwde
aas
outs
dec
inc
loopne
pusha
cmp
ds
data16
cmp
cmp
inc
dec
and
mov
push
std
lods
mov
dec
pop
push
daa
das
cs
xchg
sub
aas
clc
jmp
ds
xor
cmp
sub
pop
xor
(bad)
fisttp
xor
inc
dec
dec
pop
inc
cs
and
cmp
and
inc
mov
dec
loopne
ins
cmp
dec
inc
sbb
inc
daa
fldln2
add
push
xor
inc
fs
cdq
outs
adc
cli
fbld
call
dec
xor
cmp
pop
jmp
das
imul
xor
das
sub
sbb
call
popa
addr16
ja
pop
pop
mov
dec
daa
mov
sub
xor
dec
mov
nop
cmp
dec
push
and
ret
enter
imul
mov
jecxz
push
(bad)
push
cmp
add
lock
or
dec
pop
push
mov
stc
add
aaa
jmp
mov
lock
add
pop
data16
fsubr
into
call
push
xor
mov
add
dec
test
xor
xchg
adc
clc
push
clc
add
mov
adc
or
retf
or
js
jbe
cmp
outs
mov
add
lock
dec
icebp
add
push
pop
push
and
bound
mov
or
outs
stos
add
mov
add
dec
xor
adc
push
sbb
add
loopne
jbe
push
push
add
or
test
or
fisubr
icebp
mov
add
mov
or
push
not
lea
and
(bad)
push
in
fadd
or
movs
dec
sti
cmps
or
add
fldlg2
mov
or
dec
adc
idiv
dec
lods
sub
and
mov
mov
or
ror
imul
ficomp
mov
dec
xor
popa
or
(bad)
das
adc
shl
ins
sub
or
add
ja
add
jmp
sub
or
or
pop
in
push
cmp
inc
xor
xor
js
and
add
add
daa
pop
(bad)
mov
add
fnsetpm(287
cwde
jge
adc
pop
or
ja
and
add
jne
(bad)
pop
pop
mov
out
in
(bad)
cmp
add
or
pop
push
pop
add
jae
(bad)
add
test
add
jo
out
in
push
push
(bad)
in
inc
xchg
dec
add
inc
enter
mov
adc
or
outs
and
sbb
ret
fld
fstp
sbb
or
inc
rcl
lea
dec
xor
inc
shl
dec
adc
mov
or
mov
lds
push
mov
cmc
std
cmp
sub
or
add
jns
adc
push
mov
sbb
(bad)
adc
mov
adc
xchg
sbb
pop
and
adc
mov
inc
mov
mov
add
sub
pop
clc
iret
add
adc
lods
and
adc
xor
pop
pop
sbb
add
mov
or
adc
loop
and
nop
lock
mov
inc
mov
and
and
je
add
push
pop
jo
sbb
push
jl
stos
out
mov
clc
jbe
add
add
add
cmp
cmp
icebp
mov
adc
pop
sar
enter
cmp
add
je
rol
mov
pusha
pop
les
jb
add
add
inc
ja
xor
add
xor
xchg
sbb
adc
cmp
adc
(bad)
sbb
add
mov
lock
lock
push
or
test
sbb
adc
cmp
adc
or
pop
jns
adc
adc
push
rol
clc
jno
test
add
jp
and
bound
dec
lock
add
dec
add
inc
push
adc
lods
es
inc
lea
leave
pusha
clc
test
add
sbb
and
xor
dec
add
xchg
adc
mov
push
nop
add
xor
jne
mov
fadd
ja
cmp
push
inc
mov
add
inc
jp
sub
xor
pusha
repz
les
inc
add
push
add
inc
sbb
mov
add
add
add
inc
sub
ins
or
mov
xor
ins
adc
mov
inc
popf
inc
push
loopne
pusha
xchg
cmp
cmp
call
xor
add
stos
mov
push
je
dec
pop
popf
sub
push
rol
push
mov
push
adc
jno
sub
pop
call
adc
loopne
inc
and
pop
dec
sub
mov
sbb
mov
je
or
xor
ror
mov
mov
add
jo
push
or
sbb
mov
add
xor
sub
add
pop
jne
inc
mov
dec
adc
xor
or
mul
xor
sbb
push
inc
sbb
pop
sub
inc
push
lock
out
dec
sbb
sbb
in
test
dec
or
cmc
and
pusha
push
push
xor
push
xor
dec
pop
xor
sbb
or
pop
push
add
and
sub
and
sub
push
mov
pop
add
add
jo
imul
hlt
jno
adc
inc
push
adc
push
ins
inc
inc
or
adc
push
xchg
lock
je
add
xchg
pop
(bad)
mov
jmp
push
ins
or
dec
dec
and
jo
mov
cdq
pop
and
iret
mov
and
test
rol
inc
test
or
inc
daa
push
sub
adc
push
sbb
cmp
mov
cmp
or
arpl
sbb
push
or
inc
and
loopne
arpl
pop
pop
add
arpl
sbb
xor
add
sbb
mov
push
mov
fs
push
sub
loope
adc
div
repz
dec
add
outs
ret
lods
jno
cwde
enter
leave
add
adc
cmp
jo
add
add
add
cwde
stos
adc
mov
(bad)
jge
lock
jmp
push
int3
add
and
rcl
dec
add
shl
and
je
rcr
aad
or
or
pop
sub
call
or
jge
mov
sbb
pop
jp
add
inc
rcl
test
pusha
jne
mov
test
out
dec
cmp
inc
ja
xchg
loope
popf
xor
ficomp
adc
sar
mov
adc
or
scas
inc
and
push
cwde
add
mov
or
jl
or
lock
push
test
mov
shl
xchg
jl
or
add
xchg
jl
push
and
test
sbb
and
fdiv
add
(bad)
(bad)
jo
inc
xchg
xchg
xchg
jo
adc
mov
add
push
scas
arpl
add
add
xor
jp
mov
pop
or
mov
or
push
push
call
adc
sbb
adc
(bad)
imul
bound
mov
push
rol
or
sbb
lea
mov
dec
adc
sti
mov
push
pop
sub
sbb
(bad)
not
lea
xlat
or
dec
and
nop
mov
mov
ss
lahf
ja
inc
mov
push
(bad)
push
pop
push
lods
and
cwde
xchg
inc
and
pop
sbb
mov
stos
mov
or
push
mov
lods
idiv
pop
ss
(bad)
ins
inc
inc
lahf
pop
ins
in
sub
mov
pop
ins
xchg
cmp
lds
sar
push
mov
jae
xchg
rol
pop
mov
and
inc
xchg
sub
adc
das
rol
jae
pop
lods
and
mov
scas
mov
mov
push
mov
mov
mov
adc
adc
ror
sub
imul
cmp
sbb
mov
jge
add
or
mov
ret
push
mov
or
cmp
test
pop
pop
mov
mov
imul
aaa
shl
push
rol
mov
push
mov
and
sti
add
cmp
sbb
mov
adc
push
and
or
xor
aad
imul
xor
mov
sbb
mov
add
xor
inc
add
sub
or
mov
test
jp
adc
bound
jns
add
dec
stos
lods
and
or
or
push
add
and
mov
stos
or
lods
add
iret
jge
push
ins
xlat
or
adc
(bad)
mov
add
and
or
popf
mov
push
or
sbb
add
cmp
lods
adc
xor
mov
sbb
pop
inc
movzx
mov
sub
(bad)
and
jmp
mov
push
or
out
and
and
fdiv
or
or
lods
ffree
or
add
test
mov
(bad)
adc
xchg
pusha
xchg
xchg
pop
fimul
cmp
daa
fcmovnu
adc
adc
ret
xchg
sbb
(bad)
cmp
pop
add
sub
xchg
cmps
ins
jmp
add
inc
push
cmp
and
ror
(bad)
pop
sub
daa
and
fidivr
cmp
or
int
push
sbb
inc
sub
call
xor
ror
pop
pop
repz
add
test
mov
push
mov
push
add
aad
fsub
sub
xchg
mov
ss
push
add
or
inc
loope
mov
rcr
orps
(bad)
and
popf
sub
jno
fdiv
mov
sbb
movs
cmp
sbb
cmp
rcl
aad
or
push
int
xor
pop
or
pop
push
lds
fcom
loope
sub
sub
pushf
inc
scas
inc
mov
fisubr
std
aad
jle
jnp
out
lahf
push
mov
ins
lods
ins
imul
das
adc
add
leave
or
mov
lods
sub
ins
sub
pop
mov
test
pop
adc
imul
adc
loop
jg
add
and
sbb
je
push
sub
xchg
aaa
repz
arpl
dec
add
lods
sbb
das
adc
mov
mov
setge
sbb
sbb
leave
mov
pop
shl
movs
and
imul
mov
jb
addr16
ins
add
sub
scas
adc
fld
sub
loopne
push
pop
adc
pop
or
mov
sbb
leave
push
sub
ins
mov
and
push
sub
pop
mov
mov
sub
imul
fisubr
pop
in
cmp
adc
sbb
xchg
adc
cmps
sbb
retf
inc
push
sub
add
fisubr
imul
inc
pop
mov
adc
sbb
xor
test
repz
lahf
xor
sbb
cmp
sbb
push
(bad)
int
or
jg
inc
add
bound
addr16
adc
add
psadbw
fld
and
sbb
sbb
push
test
pop
add
xor
lods
mov
cmp
push
adc
pop
mov
out
(bad)
mov
ss
cli
mov
xor
add
cmp
(bad)
pop
xchg
and
inc
add
test
pop
or
xor
push
dec
sbb
sbb
test
js
test
cmp
xor
mov
add
shl
dec
sar
and
sbb
div
pop
push
or
push
fld
stos
jg
mov
js
add
movs
lea
lods
mov
ins
fisttp
adc
sub
pop
or
movs
mov
lahf
(bad)
xor
and
fcom
or
and
sbb
pop
stos
fimul
push
dec
jne
arpl
movs
mov
aaa
das
inc
inc
add
repz
and
fild
xlat
mov
nop
iret
lea
push
inc
rcl
xor
jmp
loop
add
fisttp
rol
xor
loop
push
pop
jmp
aaa
xchg
or
rol
sub
and
les
push
ss
or
push
ret
stos
pop
jge
xchg
sub
ins
inc
(bad)
test
add
mov
push
jae
push
add
nop
mov
mov
inc
push
push
in
xchg
add
popa
push
ret
stos
jno
lds
and
push
mov
arpl
stos
and
jle
add
stos
cmp
shl
inc
add
push
xchg
xchg
push
push
rol
mov
jnp
ror
or
pop
lock
in
adc
and
sub
push
ins
mov
stos
imul
cmp
sbb
inc
or
cmp
inc
sbb
outs
or
mov
in
mov
and
sbb
sub
and
adc
dec
add
ror
int3
fstp
das
and
xor
and
mov
sbb
xor
sbb
mov
sti
in
xlat
ret
sub
pop
inc
pusha
jo
ins
sub
dec
inc
and
pop
mov
mov
add
and
push
xor
and
(bad)
mov
icebp
jne
adc
xchg
and
adc
add
sub
mov
cdq
mov
xchg
push
stos
sbb
ja
add
dec
sbb
add
xor
neg
mov
jmp
in
addr16
loopne
pusha
xor
jo
adc
retf
out
rcr
jns
(bad)
retf
into
push
add
sbb
test
sbb
ret
xor
js
cmp
xchg
and
adc
cdq
mov
dec
push
jo
or
call
dec
sahf
pop
sbb
ds
mov
sbb
adc
sbb
clc
or
jmp
pop
loopne
xor
add
and
push
daa
jo
pop
add
push
pop
add
inc
xor
adc
sub
mov
mov
in
adc
cmp
sbb
inc
inc
add
xchg
push
push
pop
mov
add
in
sub
dec
leave
and
or
test
add
or
add
pusha
adc
push
stos
push
sar
stos
dec
nop
add
sub
or
and
shl
add
or
adc
(bad)
rol
sbb
or
sbb
xchg
les
cmp
sub
test
cmp
fld
jmp
inc
and
dec
(bad)
dec
inc
sbb
outs
jmp
add
test
add
loopne
add
add
clc
sti
shl
popa
push
(bad)
dec
sub
pop
inc
mov
add
retf
push
ror
psubb
jle
inc
adc
and
fild
and
clc
retf
inc
push
(bad)
inc
adc
out
sbb
dec
jle
cdq
cwde
jmp
pop
test
cmp
inc
cs
push
and
pop
lock
sbb
pop
add
cmp
sub
add
xchg
dec
push
not
in
jge
jns
sbb
inc
cs
jb
paddsw
call
and
cs
add
out
jb
xlat
out
xor
gs
cmps
fsub
sahf
push
jb
add
rol
and
inc
add
push
retf
dec
adc
enter
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
jg
add
add
