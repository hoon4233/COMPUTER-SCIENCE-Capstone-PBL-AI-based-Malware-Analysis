rol
add
add
add
add
add
add
add
add
add
add
push
repnz
add
adc
add
sub
add
cmp
add
add
sub
sbb
add
inc
add
add
add
adc
add
outs
inc
add
or
adc
outs
inc
add
or
pop
outs
inc
add
or
fisub
add
outs
inc
add
or
ficom
adc
add
inc
or
outs
dec
add
or
add
adc
sub
push
sub
add
add
add
add
daa
sub
adc
add
add
xor
add
add
pop
add
adc
add
outs
inc
add
or
sub
pop
outs
inc
add
or
push
add
add
or
add
or
pop
outs
inc
add
or
sub
pop
adc
add
inc
or
sub
pop
outs
dec
add
or
add
add
add
add
adc
add
add
add
sub
adc
add
add
xor
add
add
sbb
add
add
add
add
or
pop
or
add
or
pop
add
add
or
dec
add
or
fisub
add
outs
inc
add
or
ficom
adc
add
inc
or
outs
dec
add
or
add
adc
sub
push
sub
add
add
add
add
add
sub
add
add
xor
add
add
sbb
add
add
add
add
or
sub
outs
inc
add
or
push
add
dec
add
or
add
or
pop
outs
inc
add
or
sub
pop
adc
add
inc
or
sub
pop
outs
dec
add
or
add
add
add
add
add
add
add
sub
adc
add
add
xor
add
add
add
add
adc
add
outs
dec
add
or
dec
add
or
sub
push
sub
add
add
add
dec
add
or
add
add
add
xor
add
add
add
add
adc
add
add
pop
sub
adc
sub
add
add
or
add
jae
add
or
sub
push
sub
adc
add
sbb
add
sbb
add
add
add
add
or
add
or
push
add
add
or
push
or
add
sub
xor
push
add
add
add
inc
or
jne
add
add
pop
adc
add
inc
or
add
sub
add
push
or
sub
and
add
add
adc
add
inc
or
add
sub
add
push
or
pop
add
add
sub
xor
push
add
adc
add
inc
or
sub
add
sbb
pop
adc
add
inc
or
sub
pop
add
add
sub
add
and
add
jae
add
or
add
sub
sub
add
sub
add
sub
add
and
add
jae
add
or
pop
add
sub
sub
add
add
sub
xor
add
add
adc
add
inc
adc
adc
cmp
add
add
or
cmp
add
pop
outs
push
add
or
outs
push
add
or
adc
adc
dec
add
add
outs
or
add
or
add
outs
pop
add
or
add
adc
add
inc
adc
adc
cmp
add
add
add
pop
adc
adc
sub
add
add
push
adc
sub
add
or
or
adc
outs
pop
add
or
adc
adc
or
push
sub
add
adc
adc
sub
pop
outs
pop
add
or
add
add
adc
add
or
(bad)
adc
adc
adc
adc
adc
xor
add
inc
adc
adc
cmp
adc
add
inc
adc
adc
sub
add
pop
add
or
ficom
or
adc
adc
adc
or
or
or
or
add
or
add
or
or
or
add
sub
or
or
add
inc
adc
adc
sub
adc
or
pop
add
or
adc
adc
or
or
pop
add
or
adc
adc
pop
outs
pop
add
or
add
add
adc
add
adc
adc
adc
xor
push
inc
adc
adc
sub
pop
outs
pop
add
or
add
outs
pop
add
or
add
add
or
add
adc
add
inc
adc
adc
cmp
add
sub
jle
add
cmp
add
add
add
add
add
add
or
add
add
add
sub
xor
push
add
add
add
adc
add
add
add
jnp
add
add
jnp
add
add
sub
add
push
or
add
sub
add
xor
cmp
add
and
add
add
jne
add
add
push
adc
add
inc
or
sub
add
add
add
jnp
add
add
jnp
add
add
sub
add
push
or
or
add
add
pop
sub
xor
add
add
add
add
add
add
add
sub
sub
jb
add
add
add
sub
lods
add
or
add
or
pop
cmp
add
jle
add
add
sub
push
sub
adc
add
or
add
push
add
adc
jle
add
add
sub
push
sub
add
cmp
add
sub
add
xor
add
add
add
add
add
mov
add
jb
add
add
add
scas
add
or
or
add
or
je
add
add
sub
push
sub
add
xor
add
add
add
adc
sub
jg
add
cmp
add
scas
add
or
or
add
or
je
add
add
sub
pop
sub
add
push
sub
or
add
cmp
add
cmp
add
sub
add
or
add
add
add
mov
add
add
sub
add
xor
add
add
adc
sub
add
push
outs
mov
add
or
sub
sub
mov
add
add
add
add
add
xor
add
add
push
add
adc
jle
add
add
inc
or
jle
add
add
pop
sub
or
pop
adc
sub
add
or
jle
add
add
inc
or
or
add
adc
push
nop
add
push
jae
add
or
add
or
pop
cmp
fimul
or
sub
add
add
add
add
sub
push
sub
add
add
add
add
push
add
push
add
add
add
adc
add
or
add
push
add
adc
sub
sub
push
sub
xor
add
or
add
add
add
xor
repz
add
add
adc
jle
add
add
push
adc
or
add
add
add
add
add
add
add
add
jle
add
add
add
add
inc
adc
adc
cmp
or
jle
add
add
add
add
pop
ficom
add
add
add
outs
add
or
add
or
push
adc
sub
pop
push
inc
push
inc
adc
adc
sub
jle
add
add
jle
add
add
outs
add
pop
add
or
add
pop
(bad)
or
add
pop
(bad)
or
adc
xor
add
jle
add
add
add
add
push
fisubr
add
or
jle
add
add
add
add
add
add
outs
or
add
add
jle
add
add
sub
add
or
add
or
add
or
add
adc
adc
pop
adc
sub
or
or
add
add
sub
add
add
add
or
rcr
add
add
add
sbb
add
and
sub
add
or
sldt
or
fiadd
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
push
sub
add
or
add
add
add
add
push
outs
adc
add
add
pop
outs
adc
add
add
pop
outs
adc
add
add
push
outs
adc
add
add
add
or
add
outs
or
push
add
or
add
add
add
add
sub
add
add
jae
add
or
jae
add
or
jae
add
or
jae
add
or
jae
add
or
add
add
add
xor
add
add
add
add
adc
jle
add
add
and
add
or
add
sub
xor
add
add
add
add
adc
jle
add
add
and
add
or
add
sub
xor
add
add
add
add
add
add
add
and
sub
push
sub
xor
add
add
add
jle
add
add
add
or
sub
push
sub
xor
add
add
add
add
adc
jle
add
add
daa
add
or
sub
push
sub
xor
add
add
pop
add
adc
add
add
add
add
add
jge
add
add
jnp
add
add
sub
push
sub
xor
add
add
add
add
adc
add
add
add
add
push
sub
add
and
add
inc
or
sub
jb
add
jo
sub
add
jp
add
jl
add
add
add
add
add
sub
sbb
add
adc
add
or
add
add
mov
add
sbb
(bad)
(bad)
push
add
add
outs
sub
add
sub
pop
adc
add
out
add
jle
add
add
inc
push
inc
adc
jle
add
add
add
add
sub
add
or
push
adc
sub
jb
add
jo
lea
add
add
das
add
or
add
or
sub
add
add
or
add
add
add
add
add
sub
outs
xor
add
add
sub
add
sub
fidivr
jb
xor
add
and
sub
and
add
or
add
or
add
inc
push
inc
(bad)
adc
jb
add
jo
lea
add
add
xor
add
or
add
or
pop
or
add
or
add
or
cmp
add
ficom
add
add
add
add
add
sub
cmp
add
add
add
add
add
push
sub
add
add
add
xchg
add
add
add
add
add
adc
add
pop
add
add
add
adc
add
push
add
add
outs
cmp
add
add
adc
(bad)
adc
push
add
sub
sub
add
cmp
add
add
sub
adc
add
adc
add
or
add
add
add
or
add
sub
add
or
add
sub
add
xor
add
add
or
add
add
sub
sub
push
sub
xor
add
add
add
rol
sub
sub
push
sub
xor
add
add
push
add
adc
add
add
or
sub
push
sub
xor
add
add
add
add
adc
add
sub
add
or
cmp
add
or
add
sub
add
xor
add
add
adc
add
add
sub
sub
push
sub
xor
add
add
add
add
adc
rol
add
add
sub
sub
push
sub
xor
add
add
adc
add
add
sub
add
or
sub
push
sub
xor
add
add
add
add
adc
add
inc
or
sub
sub
add
sub
sub
sub
add
push
sub
xor
add
add
add
add
add
adc
(bad)
adc
push
add
add
sub
add
cmp
add
add
sub
adc
add
add
add
jle
add
or
inc
or
sub
sub
add
add
or
add
or
sub
push
sub
add
add
sub
add
or
add
add
jae
add
or
add
add
add
add
add
add
add
jae
add
or
arpl
add
add
sub
add
push
add
outs
xor
add
add
sub
xor
repz
add
add
adc
jle
add
add
push
adc
or
add
add
add
add
add
add
add
add
jle
add
add
add
add
inc
adc
adc
cmp
or
jle
add
add
add
add
pop
ficom
add
or
outs
add
or
add
or
push
adc
sub
pop
push
inc
push
inc
adc
adc
sub
jle
add
add
jle
add
add
outs
add
pop
add
or
add
pop
(bad)
or
add
pop
(bad)
or
adc
xor
add
jle
add
add
add
add
push
fisubr
add
or
jle
add
add
or
add
add
outs
or
add
add
jle
add
add
sub
add
or
add
or
add
or
add
adc
adc
pop
adc
sub
or
or
add
add
sub
add
add
add
or
rcr
add
add
add
sbb
add
xor
add
and
add
add
add
add
add
add
add
sub
pop
or
sub
add
add
add
dec
add
or
add
or
add
sub
or
fadd
add
add
add
adc
add
add
add
and
or
add
add
xor
add
add
and
add
add
jae
add
or
add
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
add
add
add
ins
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
jae
add
or
add
push
add
outs
pop
add
push
outs
jae
add
add
outs
popa
add
push
outs
jae
add
add
outs
jno
add
outs
je
add
add
outs
jae
add
outs
je
add
add
outs
jne
add
outs
je
add
add
outs
ja
add
outs
je
add
add
outs
jns
add
outs
je
add
add
outs
jnp
add
outs
je
add
add
outs
jge
add
outs
je
add
add
outs
add
add
or
add
add
push
outs
jae
add
add
outs
add
push
outs
jae
add
add
outs
imul
add
or
add
add
push
outs
jae
add
add
outs
je
add
add
outs
xor
add
adc
push
push
sub
add
add
outs
jbe
add
add
outs
xor
add
jb
add
jo
ja
add
add
outs
xor
add
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
xor
add
push
outs
jp
add
add
outs
xor
add
jb
add
jo
jnp
add
add
outs
xor
add
pop
outs
jl
add
add
outs
xor
add
push
sub
add
add
outs
jbe
add
add
outs
xor
leave
add
jo
ja
add
add
outs
xor
add
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
xor
outs
jp
add
add
outs
xor
leave
add
jo
jnp
add
add
outs
xor
outs
jl
add
add
outs
aaa
add
push
pop
outs
jge
add
add
outs
aaa
add
push
adc
pop
adc
adc
jne
add
add
outs
jbe
add
add
outs
aaa
add
push
jb
add
jo
ja
add
add
outs
aaa
add
push
adc
pop
jns
adc
or
or
add
or
add
add
push
sbb
add
or
add
add
push
pop
outs
jge
add
add
outs
cmp
add
adc
pop
sbb
sbb
jne
add
add
outs
jbe
add
add
outs
cmp
add
jb
add
jo
ja
add
add
outs
cmp
add
adc
pop
js
pop
sub
add
add
outs
jns
add
add
outs
cmp
add
sbb
add
or
add
add
push
pop
outs
jge
add
add
outs
cmp
add
adc
pop
and
and
jne
add
add
outs
jbe
add
add
outs
cmp
add
jb
add
jo
ja
add
add
outs
cmp
add
adc
pop
js
pop
sub
add
add
outs
jns
add
add
outs
cmp
add
sbb
add
or
add
add
push
pop
outs
jle
add
add
outs
cmp
add
sub
sub
jne
add
add
outs
jbe
add
add
outs
cmp
sub
ja
add
add
outs
cmp
add
push
pop
adc
js
add
add
outs
jns
add
add
outs
cmp
outs
jp
add
add
outs
cmp
sub
jnp
add
add
outs
cmp
outs
jl
add
add
outs
aas
add
push
pop
outs
jle
add
add
outs
aas
add
push
adc
pop
xor
xor
jne
add
add
outs
jbe
add
add
outs
aas
add
push
jb
add
jo
ja
add
add
outs
aas
add
push
adc
pop
push
pop
adc
js
add
add
outs
jns
add
add
outs
aas
add
push
sbb
jp
add
add
outs
aas
add
push
jb
add
jo
jnp
add
add
outs
aas
add
push
pop
outs
jl
add
add
outs
inc
add
push
adc
pop
cmp
cmp
jne
add
add
outs
jbe
add
add
outs
inc
add
push
jb
add
jo
ja
add
add
outs
inc
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
inc
add
push
sbb
or
add
add
push
jb
add
jo
jnp
add
add
outs
inc
add
push
pop
outs
jl
add
add
outs
inc
add
push
adc
pop
inc
pop
inc
sub
add
add
outs
jbe
add
add
outs
inc
add
push
jb
add
jo
ja
add
add
outs
inc
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
inc
add
push
push
outs
jp
add
add
outs
inc
add
push
jb
add
jo
jnp
add
add
outs
inc
add
push
pop
outs
jl
add
add
outs
inc
add
push
adc
pop
dec
pop
dec
sub
add
add
outs
jbe
add
add
outs
inc
add
push
jb
add
jo
ja
add
add
outs
inc
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
inc
add
push
pop
or
add
or
add
add
push
jb
add
jo
jnp
add
add
outs
inc
add
push
pop
outs
jl
add
add
outs
inc
add
push
adc
pop
push
pop
push
sub
add
add
outs
jbe
add
add
outs
inc
add
push
jb
add
jo
ja
add
add
outs
inc
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
inc
add
push
pop
or
add
or
add
add
push
jb
add
jo
jnp
add
add
outs
inc
add
push
pop
outs
jl
add
add
outs
dec
add
push
adc
pop
pop
pop
pop
sub
add
add
outs
jbe
add
add
outs
dec
add
push
jb
add
jo
ja
add
add
outs
dec
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
dec
add
push
pop
or
add
or
add
add
push
jb
add
jo
jnp
add
add
outs
dec
add
push
pop
outs
jl
add
add
outs
dec
add
push
adc
pop
pusha
pop
pusha
sub
add
add
outs
jbe
add
add
outs
dec
add
push
jb
add
jo
ja
add
add
outs
dec
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
dec
add
push
pop
or
jp
add
add
outs
dec
add
push
jb
add
jo
jnp
add
add
outs
dec
add
push
pop
outs
jl
add
add
outs
dec
add
push
adc
pop
push
add
or
pop
outs
jbe
add
add
outs
dec
add
push
jb
add
jo
ja
add
add
outs
dec
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
dec
add
push
pop
or
or
add
add
push
jb
add
jo
jnp
add
add
outs
dec
add
push
pop
outs
jl
add
add
outs
dec
add
push
adc
pop
jo
jo
jne
add
add
outs
jbe
add
add
outs
dec
add
push
jb
add
jo
ja
add
add
outs
dec
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
dec
add
push
pop
push
outs
jp
add
add
outs
dec
add
push
jb
add
jo
jnp
add
add
outs
dec
add
push
pop
outs
jl
add
add
outs
push
add
push
adc
pop
js
js
jne
add
add
outs
jbe
add
add
outs
push
add
push
jb
add
jo
ja
add
add
outs
push
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
push
add
push
pop
movq
add
add
outs
push
add
push
jb
add
jo
jnp
add
add
outs
push
add
push
pop
outs
jl
add
add
outs
push
add
push
adc
and
add
add
jne
add
add
outs
jbe
add
add
outs
push
add
push
jb
add
jo
ja
add
add
outs
push
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
push
add
push
pop
adc
add
or
add
add
push
jb
add
jo
jnp
add
add
outs
push
add
push
pop
outs
jl
add
add
outs
push
add
push
adc
and
mov
add
sub
add
add
outs
jbe
add
add
outs
push
add
push
jb
add
jo
ja
add
add
outs
push
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
push
add
push
pop
adc
add
or
add
add
push
jb
add
jo
jnp
add
add
outs
push
add
push
pop
outs
jl
add
add
outs
push
add
push
adc
and
nop
add
add
jne
add
add
outs
jbe
add
add
outs
push
add
push
jb
add
jo
ja
add
add
outs
push
add
push
adc
pop
dec
pop
pop
sub
add
add
outs
jns
add
add
outs
push
add
push
pop
adc
add
or
add
add
push
jb
add
jo
jnp
add
add
outs
push
add
push
pop
outs
jl
add
add
outs
pop
add
push
adc
and
cwde
add
add
jne
add
add
outs
jbe
add
add
outs
pop
add
push
jb
add
jo
ja
add
add
outs
pop
add
push
adc
and
add
add
adc
js
add
add
outs
jns
add
add
outs
pop
add
push
pop
adc
add
or
add
add
push
adc
and
mov
jne
add
add
outs
jbe
add
add
outs
pop
add
push
jb
add
jo
ja
add
add
outs
pop
add
push
adc
and
add
add
adc
js
add
add
outs
jns
add
add
outs
pop
add
push
pop
adc
jp
add
add
outs
pop
add
push
adc
and
mov
add
sub
add
add
outs
jbe
add
add
outs
pop
add
push
jb
add
jo
ja
add
add
outs
pop
add
push
adc
pop
js
adc
js
add
add
outs
jns
add
add
outs
pop
add
push
pop
push
outs
jp
add
add
outs
popa
add
push
adc
and
mov
jne
add
add
outs
jbe
add
add
outs
popa
add
push
jb
add
jo
ja
add
add
outs
popa
add
push
adc
pop
js
adc
js
add
add
outs
jns
add
add
outs
popa
add
push
pop
pop
outs
jp
add
add
outs
arpl
add
jb
add
jo
jg
add
add
outs
arpl
add
pop
outs
add
or
add
add
push
adc
push
push
sub
add
add
outs
jbe
add
add
outs
add
push
jb
add
jo
ja
add
add
outs
add
push
pop
sbb
add
or
add
add
push
adc
push
push
sub
add
add
outs
jbe
add
add
outs
add
push
jb
add
jo
ja
add
add
outs
add
push
adc
pop
fs
pop
sub
add
add
outs
jns
add
add
outs
add
push
pop
sbb
add
or
add
add
push
pop
outs
jle
add
add
outs
imul
push
adc
pop
sbb
sbb
jne
add
add
outs
jbe
add
add
outs
imul
push
jb
add
jo
ja
add
add
outs
imul
push
adc
pop
pop
pop
adc
js
add
add
outs
jns
add
add
outs
imul
push
pop
sbb
add
or
add
add
push
pop
outs
add
outs
imul
push
jb
add
jo
jnp
add
add
outs
imul
push
pop
outs
jl
add
add
outs
ins
add
push
pop
outs
jle
add
add
outs
ins
add
push
adc
pop
and
and
jne
add
add
outs
jbe
add
add
outs
ins
add
push
jb
add
jo
ja
add
add
outs
ins
add
push
adc
pop
pop
pop
adc
js
add
add
outs
jns
add
add
outs
ins
add
push
pop
sbb
jp
add
add
outs
ins
add
push
pop
outs
add
outs
ins
add
push
jb
add
jo
jnp
add
add
outs
ins
add
push
pop
outs
jl
add
add
outs
outs
add
push
pop
outs
jle
add
add
outs
outs
add
push
adc
pop
sub
sub
jne
add
add
outs
jbe
add
add
outs
outs
add
push
jb
add
jo
ja
add
add
outs
outs
add
push
adc
pop
pop
pop
adc
js
add
add
outs
jns
add
add
outs
outs
add
push
pop
sbb
or
add
add
push
pop
outs
add
outs
outs
add
push
jb
add
jo
jnp
add
add
outs
outs
add
push
pop
outs
jl
add
add
outs
jno
add
outs
add
or
outs
jae
add
outs
add
or
add
add
push
adc
pop
xor
xor
jne
add
add
outs
jbe
add
add
outs
jno
add
jb
add
jo
ja
add
add
outs
jno
add
adc
and
add
add
sub
add
add
outs
jns
add
add
outs
jno
add
pop
push
outs
jp
add
add
outs
jno
add
push
outs
test
add
add
outs
jno
add
jb
add
jo
test
add
add
outs
jae
add
outs
add
or
outs
jne
add
outs
add
or
add
add
push
adc
sbb
adc
jne
add
add
outs
jbe
add
add
outs
jae
add
jb
add
jo
ja
add
add
outs
jae
add
adc
and
add
add
sub
add
add
outs
jns
add
add
outs
jae
add
push
outs
jp
add
add
outs
jae
add
push
outs
test
add
add
outs
jae
add
jb
add
jo
test
add
add
outs
jne
add
outs
add
or
outs
ja
add
outs
add
or
add
add
push
adc
sbb
adc
jne
add
add
outs
jbe
add
add
outs
jne
add
jb
add
jo
ja
add
add
outs
jne
add
adc
and
add
add
sub
add
add
outs
jns
add
add
outs
jne
add
push
outs
jp
add
add
outs
jne
add
push
outs
test
add
add
outs
jne
add
jb
add
jo
test
add
add
outs
ja
add
outs
add
or
outs
jns
add
outs
add
or
add
add
push
adc
sbb
adc
jne
add
add
outs
jbe
add
add
outs
ja
add
jb
add
jo
ja
add
add
outs
ja
add
adc
and
add
add
sub
add
add
outs
jns
add
add
outs
ja
add
push
outs
jp
add
add
outs
ja
add
push
outs
test
add
add
outs
ja
add
jb
add
jo
test
add
add
outs
jns
add
outs
add
or
outs
jnp
add
outs
add
or
add
add
push
adc
sbb
adc
jne
add
add
outs
jbe
add
add
outs
jns
add
jb
add
jo
ja
add
add
outs
jns
add
adc
and
add
add
sub
add
add
outs
jns
add
add
outs
jns
add
push
outs
jp
add
add
outs
jns
add
push
outs
test
add
add
outs
jns
add
jb
add
jo
test
add
add
outs
jnp
add
outs
add
or
outs
jge
add
outs
add
or
add
add
push
adc
sbb
adc
jne
add
add
outs
jbe
add
add
outs
jnp
add
jb
add
jo
ja
add
add
outs
jnp
add
adc
and
add
add
sub
add
add
outs
jns
add
add
outs
jnp
add
push
outs
jp
add
add
outs
jnp
add
push
outs
test
add
add
outs
jnp
add
jb
add
jo
test
add
add
outs
jge
add
outs
add
or
outs
jg
add
outs
add
or
add
add
push
adc
sbb
adc
jne
add
add
outs
jbe
add
add
outs
jge
add
jb
add
jo
ja
add
add
outs
jge
add
adc
and
add
add
sub
add
add
outs
jns
add
add
outs
jge
add
push
outs
jp
add
add
outs
jge
add
push
outs
test
add
add
outs
jge
add
jb
add
jo
test
add
add
outs
jg
add
adc
sbb
adc
jne
add
add
outs
jbe
add
add
outs
jg
add
jb
add
jo
ja
add
add
outs
jg
add
adc
and
add
add
sub
add
add
outs
jns
add
add
outs
jg
add
push
outs
jp
add
add
outs
add
add
or
outs
add
push
outs
add
or
add
add
push
adc
pop
aaa
push
sub
add
add
outs
jbe
add
add
outs
add
add
jo
ja
add
add
outs
add
and
add
add
sub
add
add
outs
jns
add
add
outs
add
outs
jp
add
add
outs
test
add
sub
xchg
add
add
outs
test
add
adc
push
push
sub
add
add
outs
jbe
add
add
outs
test
add
jb
add
jo
ja
add
add
outs
test
add
adc
and
rol
add
sub
add
add
outs
jns
add
add
outs
test
add
pop
and
add
or
add
add
push
push
outs
mov
add
add
outs
add
push
sub
add
or
add
add
push
adc
pop
stc
pop
out
sub
add
add
outs
jbe
add
add
outs
add
push
jb
add
jo
ja
add
add
outs
add
push
adc
and
add
add
stos
add
add
js
add
add
outs
jns
add
add
outs
add
push
pop
and
add
or
add
add
push
push
outs
mov
add
add
outs
imul
pop
adc
adc
jne
add
add
outs
jbe
add
add
outs
imul
add
jo
ja
add
add
outs
imul
pop
fs
xor
js
add
add
outs
jns
add
add
outs
imul
outs
xchg
add
add
outs
imul
mov
add
add
outs
pop
add
push
adc
and
test
add
sub
add
add
outs
jbe
add
add
outs
pop
add
push
jb
add
jo
ja
add
add
outs
pop
add
push
adc
pop
fs
xor
js
add
add
outs
jns
add
add
outs
pop
add
push
pop
adc
or
add
add
push
push
outs
mov
add
add
adc
inc
and
add
sub
adc
or
add
outs
mov
add
add
adc
and
add
and
add
add
js
add
add
outs
mov
add
add
outs
add
or
outs
test
add
outs
add
or
add
add
or
outs
add
add
or
add
add
or
outs
jno
add
outs
add
or
add
add
or
outs
outs
add
push
outs
add
or
add
add
or
outs
ins
add
push
outs
add
or
add
add
or
outs
imul
push
outs
add
or
add
add
or
outs
imul
add
or
add
add
or
outs
add
push
outs
add
or
add
add
or
outs
add
push
outs
add
or
add
add
or
outs
popa
add
push
outs
add
or
add
add
or
outs
pop
add
push
outs
add
or
add
add
or
outs
pop
add
push
outs
add
or
add
add
or
outs
pop
add
push
outs
add
or
add
add
or
outs
pop
add
push
outs
add
or
add
add
or
outs
push
add
push
outs
add
or
add
add
or
outs
push
add
push
outs
add
or
add
add
or
outs
push
add
push
outs
add
or
add
add
or
outs
push
add
push
outs
add
or
add
add
or
outs
dec
add
push
outs
add
or
add
add
or
outs
dec
add
push
outs
add
or
add
add
or
outs
dec
add
push
outs
add
or
add
add
or
outs
dec
add
push
outs
add
or
add
add
or
outs
inc
add
push
outs
add
or
add
add
or
outs
inc
add
push
outs
add
or
add
add
or
outs
inc
add
push
outs
add
or
add
add
or
outs
inc
add
push
outs
add
or
add
add
or
outs
aas
add
push
outs
add
or
add
add
or
outs
cmp
add
or
add
add
or
outs
cmp
add
outs
add
or
add
add
or
outs
cmp
add
outs
add
or
add
add
or
outs
aaa
add
push
outs
add
or
add
add
or
outs
xor
add
or
add
add
or
outs
xor
add
outs
add
or
add
add
jo
ja
add
add
jb
add
jo
lea
add
add
outs
pop
add
push
outs
mov
add
add
outs
popa
add
push
outs
mov
add
add
outs
jno
add
push
outs
pop
add
add
outs
jae
add
push
outs
pop
add
add
outs
jne
add
push
outs
pop
add
add
outs
ja
add
push
outs
pop
add
add
outs
jns
add
push
outs
pop
add
add
outs
jnp
add
push
outs
pop
add
add
outs
jge
add
push
outs
pop
add
add
outs
add
pop
add
add
outs
test
add
outs
mov
add
add
outs
add
push
outs
mov
add
add
outs
imul
add
or
add
add
push
outs
mov
add
add
push
outs
pop
add
add
outs
nop
add
or
add
add
xor
add
add
add
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
adc
jnp
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
jge
add
add
sub
add
xor
add
add
add
cmp
add
pop
(bad)
adc
xchg
add
or
sub
and
sbb
or
sbb
pop
pop
sub
xchg
add
or
sbb
pop
pop
adc
adc
add
or
sbb
pop
pop
lea
add
adc
add
pop
sahf
adc
xchg
add
or
sbb
xchg
add
jo
push
sub
push
adc
pop
pop
call
mov
add
or
or
pop
sbb
jb
add
jo
cdq
add
or
and
adc
add
add
or
pop
sbb
adc
add
or
pop
or
pop
pop
lea
add
adc
add
sbb
add
or
pop
or
pop
or
add
jo
cdq
add
or
fwait
add
or
pop
or
pushf
add
or
fstp
push
sub
push
pop
pop
push
adc
inc
sldt
add
add
add
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
dec
jmp
(bad)
push
(bad)
dec
(bad)
(bad)
jmp
inc
adc
adc
adc
pop
sub
adc
add
add
add
and
add
add
add
add
adc
push
inc
pop
(bad)
adc
add
sub
add
faddp
and
add
sub
add
or
adc
sub
sub
add
or
inc
sbb
add
add
add
add
add
add
push
add
or
add
push
add
add
xor
mov
add
push
add
adc
push
or
sahf
add
or
lahf
add
or
or
add
add
lea
add
adc
and
add
add
adc
add
add
or
add
or
xor
pop
pop
outs
mov
mov
xchg
adc
adc
push
adc
sub
adc
push
push
sahf
adc
sub
fisubr
movs
add
or
add
and
add
add
add
inc
adc
adc
sub
push
or
cmp
or
or
xchg
(bad)
adc
pop
xchg
(bad)
and
add
add
or
or
xchg
adc
or
adc
adc
xchg
sahf
adc
adc
adc
adc
sub
fisubr
movs
add
or
add
and
add
add
add
inc
adc
adc
sub
mov
add
push
adc
or
(bad)
and
add
add
adc
(bad)
and
add
add
add
adc
adc
or
or
add
adc
or
or
xchg
adc
adc
add
add
adc
add
pop
ficom
outs
mov
mov
xchg
adc
adc
sub
movups
adc
popa
adc
cmps
add
or
add
or
adc
sub
fisubr
movs
add
or
add
add
add
or
add
inc
adc
adc
cmp
(bad)
dec
outs
test
add
adc
or
outs
test
adc
adc
sub
adc
sub
add
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
imul
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
push
inc
inc
push
inc
inc
daa
nop
xor
push
gs
add
add
pop
add
add
add
sbb
add
and
inc
add
jb
imul
add
jb
ins
add
add
add
adc
add
add
add
add
outs
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
aad
add
add
fdivr
loopne
adc
dec
inc
add
add
add
pusha
add
jmp
or
dec
inc
inc
pop
push
push
dec
inc
dec
dec
inc
add
add
add
dec
imul
ins
outs
je
push
inc
inc
and
pop
and
into
add
add
add
add
add
popa
arpl
dec
push
inc
push
add
add
dec
inc
inc
and
inc
inc
add
add
add
not
add
add
add
shr
add
add
arpl
je
add
push
add
add
fs
add
add
je
je
add
lock
add
imul
add
add
add
adc
pop
pop
pop
add
add
add
add
pop
pop
pop
add
add
add
adc
pop
pop
pop
add
add
add
adc
ins
outs
add
add
add
ins
fs
add
add
add
add
add
add
add
add
add
add
jne
imul
add
adc
gs
jae
add
add
add
arpl
add
add
add
push
push
inc
add
add
add
or
push
push
inc
add
add
add
or
push
push
inc
add
add
add
or
gs
add
add
inc
outs
jo
jb
addr16
sub
xor
cmp
and
ja
gs
sub
popa
jb
and
ins
jo
outs
jns
add
arpl
add
add
add
adc
inc
inc
and
inc
xor
ss
add
adc
inc
inc
and
inc
xor
ss
add
pop
and
add
add
add
push
add
add
add
push
int3
pop
pop
pop
and
add
add
pop
and
add
add
add
add
cmp
add
add
add
add
add
bound
add
sbb
pop
pop
pop
and
add
add
add
add
je
fs
add
add
add
add
dec
inc
inc
and
je
cmp
das
ja
ja
imul
add
push
dec
inc
inc
and
je
cmp
das
ja
ja
imul
add
arpl
add
add
add
cs
inc
inc
and
xor
ss
inc
gs
jne
je
push
inc
inc
and
ins
outs
jne
and
popa
arpl
sub
inc
add
add
dec
inc
inc
and
xor
ss
inc
gs
jne
je
push
inc
inc
and
ins
outs
jne
and
popa
arpl
sub
inc
add
fs
add
add
add
add
gs
outs
arpl
push
imul
inc
outs
outs
imul
and
inc
xor
ss
add
sub
gs
outs
arpl
push
imul
inc
outs
outs
imul
and
inc
xor
ss
add
gs
add
add
adc
add
iret
adc
add
int3
add
or
add
add
add
pop
and
add
add
dec
or
push
add
add
out
gs
jae
add
add
add
add
add
pop
add
add
and
add
add
push
and
jb
add
add
add
add
add
add
add
sbb
push
add
add
add
add
add
inc
add
dec
add
add
arpl
push
add
jl
add
nop
add
add
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
pop
add
add
jne
jl
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
add
add
dec
add
add
jno
jp
test
mov
cwde
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jb
jle
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
pop
add
xchg
mov
lds
test
push
push
push
daa
push
aaa
push
dec
push
pop
push
push
jnp
mov
popf
push
scas
push
rol
push
jecxz
cmc
pop
pop
pop
sbb
sub
cmp
pop
je
xchg
cdq
pop
lods
pop
mov
pop
clc
or
or
or
or
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
imul
mov
enter
stc
or
or
or
or
or
or
or
or
or
or
or
inc
or
mov
fimul
cs
dec
push
fs
jg
fwait
push
mov
ror
out
wbinvd
(bad)
cmovno
pop
(bad)
setbe
mov
iret
paddsb
or
adc
popa
adc
fwait
adc
adc
adc
adc
ins
adc
call
adc
adc
jecxz
add
and
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
mov
push
es
dec
push
ins
push
(bad)
push
mov
(bad)
push
cli
pop
sbb
pop
mov
scas
pop
rcl
neg
sbb
inc
sbb
mov
scas
sbb
sbb
sbb
sbb
imul
sbb
sbb
sbb
ja
sahf
sbb
sbb
sbb
cmp
arpl
mov
mov
ficomp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jo
cdq
sbb
push
push
inc
push
push
xchg
push
mov
pop
ds
imul
jmp
and
and
dec
and
mov
and
and
and
and
and
and
and
xchg
and
and
and
and
and
and
and
and
push
and
push
xchg
mov
call
daa
jp
stos
daa
fsubr
or
sub
sub
sub
popf
sub
sub
sub
sub
sub
sub
sub
popf
sub
sub
sub
sub
sub
sub
sub
jbe
stos
sub
dec
sub
cs
das
and
pop
das
xchg
das
(bad)
das
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
fwait
xor
xor
xor
xor
xor
xor
xor
xchg
aaa
ss
scas
ss
aaa
pushf
aaa
xlat
cmp
push
cmp
inc
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
mov
aas
popa
aas
mov
inc
fs
cmps
inc
out
sub
inc
lods
inc
out
inc
xor
inc
mov
test
inc
add
mov
adc
inc
call
inc
stos
inc
lock
xor
dec
add
dec
xlat
dec
sbb
dec
lock
aaa
dec
jge
les
dec
push
dec
call
dec
mov
dec
xchg
dec
fmul
dec
outs
dec
mov
add
dec
xchg
dec
fst
push
jno
mov
push
fwait
push
out
xor
push
(bad)
push
adc
push
stos
push
not
(bad)
push
fist
push
jne
ret
push
pop
push
test
push
xchg
push
loopne
das
pop
jge
retf
pop
sbb
pop
mov
pop
cmps
pop
cmc
pop
inc
pop
xchg
pop
in
xor
pop
daa
pop
js
leave
pop
sbb
pop
mov
pop
mov
add
pusha
cld
popa
dec
popa
mov
bound
xchg
arpl
fs
fs
fs
gs
cmp
addr16
push
in
imul
dec
push
push
imul
imul
push
ins
scas
ins
or
ins
mov
outs
les
outs
js
shl
jo
jo
jno
jno
jno
jb
jb
jae
jae
jae
je
je
je
jne
jne
jne
jbe
jbe
jbe
ja
ja
js
js
js
jns
jns
jns
jp
jp
jnp
jnp
jnp
jl
jl
jl
jge
jge
jle
jle
jle
jg
jg
jg
add
or
xor
xchg
xor
push
cmp
jecxz
inc
test
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
lea
lea
mov
(bad)
ss
sahf
nop
push
nop
outs
nop
(bad)
xchg
aas
xchg
test
adc
dec
xchg
mov
and
xchg
leave
xchg
xor
lahf
xchg
or
dec
cwde
mov
cdq
cld
call
scas
pushf
sbb
mov
sahf
inc
sahf
scas
lahf
sbb
mov
inc
mov
xchg
mov
out
push
movs
(bad)
movs
cmp
mov
loopne
push
test
test
sbb
(bad)
stos
add
pop
lods
shr
sub
scas
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
mov
cs
fwait
mov
or
jp
cmc
shl
shl
ret
fcmovnb
pop
ret
aam
push
(bad)
into
lds
enter
ret
mov
mov
retf
mov
ss
mov
xor
int
into
ss
mov
aaa
iret
mov
sar
mov
rol
aam
aam
aad
aad
(bad)
push
(bad)
fcom
pop
xlat
loopne
fs
fldcw
fidiv
sti
fild
fst
fst
fild
fild
loope
loope
loop
loop
jecxz
jecxz
in
in
in
out
out
out
out
call
inc
jmp
in
jo
sti
in
xchg
adc
pushf
out
sub
mov
inc
out
int3
lock
lock
jb
push
mov
sbb
cmps
hlt
xor
ret
cmc
fdivp
ins
idiv
test
cli
push
cli
out
ja
pop
cld
cwde
std
sub
mov
jmp
(bad)
(bad)
fild
inc
add
pop
pop
or
push
or
or
or
or
push
sbb
push
or
push
adc
and
and
and
sub
das
sub
and
xor
xor
cmp
ds
cmp
aaa
cmp
add
or
or
or
sbb
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
rol
or
ret
add
adc
add
add
adc
inc
add
add
add
add
add
add
add
add
les
inc
adc
add
add
add
add
add
add
add
add
add
push
adc
push
popa
adc
xor
pop
adc
lock
loope
xor
icebp
jb
inc
xchg
mov
les
sbb
add
add
add
add
add
add
add
inc
add
adc
add
add
add
add
add
add
add
adc
add
xor
push
popa
adc
add
jno
lock
mov
shl
icebp
push
(bad)
fiadd
or
add
add
add
add
add
fld
dec
xchg
jge
inc
shl
pusha
add
and
mov
dec
pop
inc
test
mov
jge
add
mov
mov
int3
cmp
jnp
or
cmps
repnz
inc
pushf
push
xchg
add
sub
(bad)
into
push
lods
iret
(bad)
nop
mov
cmp
bound
outs
retf
adc
sbb
lods
add
push
sti
shl
lods
repz
push
xchg
and
push
icebp
into
imul
inc
dec
push
push
jb
inc
arpl
in
ficom
mov
mov
push
sbb
sahf
hlt
fbld
or
push
jp
call
and
or
lds
je
pop
mov
pop
sub
inc
pop
or
and
jns
pop
sub
popa
xchg
and
movs
xor
pop
mov
xor
jmp
dec
fimul
push
xor
add
xchg
mov
push
aas
or
bnd
jbe
out
mov
call
xchg
movs
sub
jp
test
mov
mov
hlt
retf
in
lods
mov
js
push
pusha
inc
jp
rcr
dec
push
pop
sub
call
dec
clc
mov
mov
lds
mov
arpl
jmp
or
loop
loopne
jge
push
sbb
sahf
cmp
xor
xor
xor
inc
popf
mov
out
loop
mov
push
cli
xor
mov
xor
lock
sti
adc
cmp
pop
daa
adc
leave
or
ins
icebp
pop
adc
pop
repz
test
and
std
cli
rcl
in
(bad)
xor
mov
arpl
xchg
cdq
out
enter
repnz
pop
jl
stos
movs
jp
push
loop
mov
cmp
repz
inc
sbb
int
shl
cmp
loopne
jo
xor
jno
add
(bad)
xchg
loopne
or
jp
dec
mov
je
mov
dec
and
dec
mov
xor
in
inc
in
scas
icebp
fnsave
cmc
arpl
lock
xchg
daa
ins
pop
inc
jmp
ret
(bad)
mov
xor
shr
mov
xchg
sbb
and
jp
pop
mov
jb
call
ror
frstor
xchg
(bad)
add
xchg
cmp
cmps
in
fmul
outs
scas
pop
or
dec
mov
dec
retf
and
mov
sub
fmul
movs
aad
lds
out
jno
mov
inc
or
shl
mov
sub
neg
mov
leave
mov
mov
mov
arpl
leave
sbb
adc
ins
add
sahf
jb
test
fstp
int3
lds
pop
stos
leave
lods
out
mov
and
add
jno
or
mov
sbb
ficomp
nop
jno
cmps
push
ja
push
mov
push
xchg
and
jp
and
(bad)
out
retf
hlt
retf
jnp
mov
icebp
(bad)
push
mov
movs
dec
mov
adc
adc
mov
push
lods
mov
adc
pusha
dec
mov
test
or
and
dec
xor
inc
jp
and
xor
jecxz
mov
xor
inc
adc
mov
mov
stos
mov
add
mov
loopne
ror
repz
cli
and
xchg
jge
or
pop
push
jp
adc
and
sbb
daa
sbb
cmp
mov
je
sbb
cdq
inc
mov
(bad)
push
pop
dec
(bad)
iret
inc
sahf
xchg
adc
cmp
lds
je
pushf
mov
mov
xchg
push
popf
mov
pop
and
in
fiadd
mov
test
adc
pusha
lock
mov
mov
dec
xchg
out
cmc
or
pop
ins
arpl
mov
out
inc
push
xchg
xchg
stos
or
test
pop
movs
inc
fs
adc
cmp
adc
xor
aaa
and
push
mov
mov
xchg
xchg
(bad)
sbb
dec
(bad)
je
mov
xor
push
mov
imul
shl
pusha
ja
pop
mov
fwait
movs
pop
aad
sub
out
rcr
adc
movs
push
mov
mov
iret
jmp
push
aaa
rcr
lock
sbb
popa
repnz
cmp
ja
dec
ss
imul
mov
adc
push
and
pushf
xchg
mov
aas
fdiv
cmp
or
(bad)
ins
pusha
jg
mov
fstp
and
mov
in
ins
mov
ss
fidivr
inc
cmc
test
xor
inc
popf
and
ins
inc
lods
dec
sbb
stos
mov
cld
mov
retf
dec
mov
mov
dec
push
cmp
jecxz
call
iret
xor
(bad)
inc
or
xchg
movs
push
retf
add
fs
(bad)
outs
enter
jp
mov
pop
addr16
mov
or
push
arpl
or
cmp
xchg
xchg
xchg
push
in
aam
push
mov
(bad)
(bad)
sahf
add
or
pop
and
mov
out
ret
cmp
pushf
jle
or
jecxz
adc
(bad)
add
cmps
ss
daa
pop
mov
ror
mov
js
pop
ficom
call
add
cld
push
cmp
push
rcr
adc
pusha
std
and
xchg
call
mov
adc
sbb
mov
sbb
add
sbb
out
push
sbb
add
nop
xor
pop
sahf
jno
nop
and
inc
push
jb
sub
enter
lock
and
sahf
dec
cld
jle
adc
mov
aam
xor
int
add
lods
jns
or
pop
push
xchg
xor
sbb
std
pop
xchg
retf
mov
loop
inc
aaa
loope
mov
and
stc
mov
call
call
iret
std
fldcw
inc
sub
xor
sbb
dec
sub
in
out
out
mov
(bad)
sub
mov
sti
push
xchg
add
pop
cmp
mov
ret
mov
clc
push
dec
dec
add
aaa
ss
mov
jmp
inc
ror
call
dec
lds
loopne
imul
add
movs
(bad)
push
(bad)
ja
dec
cmp
mov
aaa
adc
jno
push
(bad)
jnp
dec
loop
jae
popa
mov
sbb
cmps
push
dec
jo
adc
inc
add
(bad)
fistp
jmp
mov
jns
pop
dec
jne
pushf
(bad)
les
movs
inc
les
jmp
stos
imul
sub
jnp
mov
adc
cmp
pop
add
arpl
mov
or
mov
fcmovu
lds
fs
out
jg
sar
pop
mov
dec
push
test
in
mov
loop
add
enter
jne
dec
in
sub
imul
jl
(bad)
aam
cmp
cwde
rsqrtps
test
or
xchg
inc
jbe
inc
jmp
(bad)
cmps
test
dec
push
and
jecxz
mov
iret
jle
sub
dec
into
xor
sub
int3
mov
frstor
pop
into
pop
xor
jmp
pop
cmp
jp
je
inc
adc
dec
sub
or
xor
ins
mov
ror
or
lock
out
imul
inc
hlt
push
in
sbb
and
hlt
movs
sbb
inc
fwait
jb
mov
mov
jl
in
pop
mov
mov
aam
das
sbb
pop
aam
jnp
jbe
ja
or
fdiv
mov
xchg
test
into
push
push
dec
fcmovb
sbb
jg
loop
xor
stos
fstp
or
shl
push
mov
and
xor
adc
add
add
jae
xor
dec
mov
pop
out
jecxz
sti
sar
stc
push
ins
fwait
nop
mov
imul
mov
int3
add
dec
ss
ins
sub
mov
mov
inc
mov
cmps
je
loope
ret
or
xchg
add
add
sub
cmp
push
sub
repnz
arpl
out
addr16
aaa
xor
mov
sar
cmps
adc
mov
mov
into
(bad)
mov
add
xor
xchg
inc
adc
jge
add
sub
push
fdivr
outs
jnp
push
mov
sar
out
or
test
arpl
test
cmp
loopne
lahf
mov
sahf
mov
stc
pop
mov
retf
jge
dec
lods
jb
jo
int
popf
inc
mov
dec
push
sbb
hlt
lahf
or
pop
xor
jecxz
or
add
jo
xor
jnp
mov
leave
fistp
addr16
shl
lds
push
xchg
sbb
jb
pop
and
les
cmc
dec
in
outs
jmp
fsub
aaa
pop
in
push
aas
test
lock
aas
ficomp
mov
repnz
sub
xchg
dec
dec
add
js
mov
xchg
repz
sub
sbb
mov
cwde
push
clc
and
dec
int
test
test
imul
and
pop
cmp
push
push
fldenv
jae
or
pushf
mov
pop
jbe
lods
pop
xor
je
or
fcmovnb
add
in
nop
enter
(bad)
jno
push
dec
mov
inc
xchg
test
pop
es
and
(bad)
adc
movs
cmp
mov
test
or
mul
xchg
fcom
pop
adc
jmp
imul
lahf
xchg
push
call
push
pop
std
mov
dec
xor
cdq
pushf
hlt
(bad)
(bad)
adc
mov
in
mov
ins
xchg
cmp
fistp
xchg
shl
jns
and
jmp
or
inc
fsubrp
cmp
jne
cmp
out
fisub
getsec
jb
push
and
cmp
sub
jno
push
jb
adc
jg
cmp
sbb
sbb
movs
shr
cmp
cmps
cmps
inc
xchg
imul
jg
call
cdq
ja
ret
sti
mov
cvttps2pi
pop
cmp
xor
fisubr
fdiv
clc
mov
sub
mov
lods
dec
cdq
rol
and
dec
std
mov
retf
or
cmp
aad
pusha
pop
pop
cmp
bts
(bad)
mov
xchg
and
jecxz
aam
out
loop
sbb
ret
adc
jno
mov
retf
fisub
aam
fmul
retf
enter
jecxz
xor
jno
mov
mov
ds
in
movq
dec
ja
mov
push
push
pop
add
mov
push
jb
out
sub
sub
mov
add
shl
pushf
sti
shl
jnp
mov
jno
test
xlat
movs
mov
push
pop
cld
mov
into
sbb
push
popa
push
xor
and
pop
jno
imul
xchg
fwait
xchg
mov
ja
xchg
adc
push
fbld
jl
xchg
inc
mov
loopne
rcr
or
mov
les
and
or
add
movs
cmp
adc
ret
cmp
dec
rcl
push
mov
addr16
mov
lea
nop
dec
(bad)
mov
push
(bad)
in
je
stos
popf
push
lods
ins
cld
mov
add
jg
cmps
aad
mov
pop
arpl
or
add
push
sbb
hlt
xor
and
je
push
sbb
js
pusha
mov
mov
clc
test
jo
(bad)
push
push
aas
lahf
fdiv
mov
shl
xchg
lds
xchg
dec
dec
test
scas
loope
fidiv
sbb
jno
sti
xchg
sub
data16
test
clc
xor
jle
out
push
mov
push
sbb
lods
cmp
jb
movs
mov
test
sbb
inc
and
mov
push
sahf
adc
jecxz
and
mov
jp
pushf
out
outs
and
ror
pop
mov
push
outs
fwait
jle
mov
(bad)
mov
mov
sbb
in
fcmovne
or
ins
push
mov
jno
test
mov
xchg
stc
cmps
pop
sar
scas
mov
(bad)
out
mov
call
sbb
jecxz
jmp
test
jl
mov
fnstenv
sub
pusha
push
mov
fisubr
push
xlat
xchg
mov
std
popa
mov
inc
or
jne
jmp
sub
aas
call
mov
push
movs
sub
out
out
add
movs
add
xchg
dec
pop
sbb
push
fld
mov
and
stc
in
push
arpl
fs
mov
test
shr
xor
daa
mov
mov
cwde
mov
xchg
rcr
shl
imul
ins
imul
inc
xchg
test
push
pop
mov
jecxz
mov
xchg
es
xor
adc
push
imul
mov
es
dec
inc
cmp
sub
lea
add
dec
ror
add
adc
and
jecxz
jae
mov
test
xor
jne
popa
xor
nop
mov
inc
xchg
add
mov
jmp
mov
mov
adc
sbb
out
sub
cmp
dec
jl
outs
jecxz
and
pop
ret
int
fisubr
ror
ins
in
push
dec
popa
inc
int3
fisub
pop
xor
movs
mov
add
mov
mov
inc
mov
fs
nop
jns
je
push
sub
hlt
gs
cmp
adc
ins
movs
jmp
mov
pop
and
dec
push
gs
mov
aam
pop
test
fwait
shl
dec
shl
xchg
dec
sub
in
dec
cmp
fdiv
fnsave
mov
retf
sti
xchg
aas
xor
fwait
and
or
dec
mov
and
push
mov
cs
push
push
add
mov
int
test
push
or
pop
mov
jne
xor
inc
jp
movs
or
out
xor
and
fst
xor
arpl
mov
fcmovne
data16
hlt
ins
leave
sbb
jle
pop
dec
aam
aam
test
jns
out
shr
sbb
mov
sub
fwait
js
retf
adc
xor
xchg
cmps
pop
ins
mov
rol
add
xchg
icebp
cmp
sub
add
and
jecxz
push
adc
pop
ds
jno
sbb
shl
out
out
push
xor
repz
mov
push
push
pusha
or
into
bsr
cmp
or
xor
mov
jnp
imul
push
mov
and
pusha
dec
ja
cmp
(bad)
aam
adc
add
ss
and
sti
xchg
movs
lods
xchg
lds
lods
pushf
mov
div
loopne
pop
xor
add
add
jecxz
ret
mov
repnz
pop
lahf
inc
dec
cld
xor
enter
out
leave
outs
jb
xchg
pop
pop
out
(bad)
int
adc
lahf
rcl
cmp
fidiv
mov
mov
add
rol
test
mov
xchg
leave
pop
int
shl
or
retf
retf
add
icebp
inc
jmp
movs
ficom
xchg
ja
jp
lods
popf
sahf
xchg
push
lahf
jne
int
fstp
outs
sar
xlat
shr
pop
mov
mov
jge
push
aaa
xor
xor
stos
add
sub
cmps
mov
or
mov
aad
xor
dec
es
int
add
mov
and
mov
pop
xchg
cmp
fcom
shr
and
push
push
pop
in
adc
shl
ja
popa
mov
jp
test
xor
xchg
loope
test
call
sub
jp
outs
jmp
std
int3
in
dec
shr
sub
(bad)
(bad)
icebp
rcl
xchg
xchg
test
jp
int3
pop
ds
ror
cwde
or
dec
sub
imul
ja
imul
inc
stos
adc
pushf
(bad)
aad
xchg
mov
rcr
movs
(bad)
stc
push
(bad)
xor
out
and
sub
arpl
push
jg
dec
in
jo
jb
arpl
cld
out
jo
sub
cs
js
shl
adc
stos
arpl
dec
in
lods
and
jae
int3
fcom
pushf
icebp
ds
ins
push
movs
and
cmp
int3
push
enter
xchg
xor
pop
call
cmp
mov
mov
int
sahf
mov
and
inc
mov
add
test
adc
cmp
sbb
sbb
jg
call
jmp
mov
sti
inc
pop
inc
adc
xchg
retf
mov
popa
xor
sub
or
fs
outs
lea
jecxz
dec
int
dec
jno
jmp
enter
mov
lds
jb
xchg
jnp
jno
mov
jb
mov
icebp
dec
add
mov
loop
mov
xlat
push
adc
ss
dec
mov
cld
ror
call
popf
loop
pand
adc
jb
jecxz
into
in
xchg
pop
jp
mov
mov
sub
sbb
ja
ss
repnz
inc
inc
mov
mov
add
cmp
add
mov
dec
shl
sbb
sub
push
pop
rol
ja
daa
aas
shl
xchg
test
mov
xor
js
stos
sbb
cld
fs
(bad)
mov
jbe
test
mul
inc
inc
inc
and
mov
xchg
mov
ror
sub
inc
push
popa
mov
cmp
sbb
adc
js
nop
or
nop
jp
js
lock
ret
mov
fnstcw
pop
scas
sub
or
call
arpl
push
cmp
scas
pop
sbb
sbb
xchg
mov
ins
loop
and
dec
dec
jmp
push
nop
add
js
(bad)
dec
cmp
xor
(bad)
std
inc
sbb
cmp
arpl
loopne
inc
pop
mov
mov
es
ret
push
sub
sbb
loope
into
(bad)
jae
sbb
sub
jb
sbb
xchg
and
sbb
pushf
icebp
inc
je
cmp
cli
popf
jbe
dec
cmp
arpl
lahf
push
mov
xchg
retf
pop
dec
add
mov
movs
sub
div
jns
and
xchg
in
jg
xor
popa
cmps
cmp
lea
test
jae
stc
mov
shl
into
xchg
stos
es
ret
cmp
(bad)
movs
push
js
mov
jecxz
out
xchg
jnp
ficomp
jmp
test
cmp
push
sbb
sahf
fistp
ins
leave
inc
pop
inc
mov
not
mov
scas
ins
ins
dec
push
adc
or
push
into
dec
push
lock
inc
pop
fwait
inc
push
imul
mov
cmp
sti
aas
pop
jle
dec
movs
mov
bnd
ins
test
push
cs
or
add
adc
mov
fnsave
sub
sbb
outs
outs
loop
inc
mov
mov
in
std
call
stos
call
xchg
pop
cs
and
enter
rol
in
xor
arpl
ficom
push
jmp
and
movs
sub
dec
repz
repz
fild
xchg
ret
dec
or
or
fmulp
mov
and
dec
adc
inc
rol
sbb
xchg
adc
cmp
cmps
dec
call
ins
cmp
cs
add
adc
jo
aaa
sub
cmps
addr16
pop
jmp
pusha
aam
sti
jnp
and
shl
icebp
push
bound
or
loopne
fidiv
dec
in
cmps
xchg
call
enter
test
into
inc
iret
sbb
mov
mov
add
femms
pop
inc
cmc
call
arpl
pop
mov
sub
lods
xchg
and
bound
dec
mov
push
jp
pop
push
sar
aam
dec
cmc
sti
jae
cmp
xlat
es
ret
jg
mov
adc
jno
dec
in
xor
scas
in
sub
dec
stc
xor
push
add
mov
or
dec
dec
adc
adc
sub
shl
sbb
repz
xor
and
push
(bad)
shl
imul
cmps
xchg
mov
mov
shl
mov
pop
imul
push
pop
cmps
mov
ins
lea
sbb
(bad)
mov
xchg
dec
movs
jmp
xor
xor
xor
jb
add
enter
sbb
xor
imul
xchg
xchg
mov
pop
jmp
mov
inc
push
jecxz
call
jecxz
add
mov
and
inc
xor
sbb
gs
sub
pop
dec
add
jb
sub
cmp
std
test
and
int
push
jbe
test
retf
test
sbb
test
les
cs
xchg
xlat
adc
call
repnz
dec
sti
pop
or
pop
lahf
nop
mov
adc
popa
xor
xor
mov
sub
in
das
xchg
sbb
(bad)
push
xchg
push
cs
xor
pop
hlt
lods
aaa
cs
cli
stos
push
movs
mov
scas
pop
xchg
sbb
mov
test
xchg
int
popf
jb
repnz
cmp
out
aam
mov
imul
repz
std
or
mov
mov
loopne
mov
and
inc
pop
movs
rol
mov
mov
dec
xor
ins
aaa
push
imul
dec
retf
jecxz
ins
jle
outs
and
and
xchg
jmp
gs
cmp
lods
mov
test
clc
outs
shr
stos
xchg
(bad)
xor
xor
pop
mov
and
add
inc
add
data16
pop
add
and
xchg
pop
repnz
sbb
xor
mov
add
xchg
push
test
jecxz
pusha
sbb
sbb
xor
icebp
(bad)
fst
mov
sub
jmp
inc
and
pop
dec
stos
and
xchg
mov
lea
jge
add
int
out
(bad)
inc
adc
out
sbb
add
mov
sub
cmp
adc
mov
cmp
xchg
mov
cld
pop
movs
shr
sbb
jne
lea
daa
add
sub
inc
mov
cmp
inc
or
ins
outs
or
stos
adc
pop
test
dec
fcomp
(bad)
mov
cmp
jns
sbb
mov
outs
mov
push
cmps
nop
dec
mov
scas
inc
aam
(bad)
mov
nop
xchg
or
cs
push
add
cmp
lds
pop
mov
dec
movs
jmp
es
push
pop
xchg
inc
cmp
push
(bad)
pop
mov
mov
inc
fcmovnu
jae
fisubr
pop
aaa
jp
ret
fnstsw
icebp
mov
sub
call
inc
push
inc
fdiv
cmp
and
stc
fiadd
hlt
jl
mov
fldcw
loopne
imul
aaa
xlat
sub
outs
push
(bad)
mov
outs
sbb
arpl
pop
dec
pop
leave
lods
xchg
cs
adc
cmp
test
shl
mov
dec
add
sbb
call
push
fnstsw
mov
arpl
push
daa
mov
mov
not
int3
dec
inc
inc
rol
clc
test
push
xor
mov
lahf
dec
mov
shr
(bad)
inc
cmc
adc
cld
ja
sub
or
xor
out
dec
inc
mov
inc
pop
nop
(bad)
mov
hlt
inc
ins
jo
jg
jnp
je
mov
aas
stos
sub
jecxz
mov
xor
int
add
mov
dec
inc
cli
test
and
retf
push
adc
dec
loopne
push
cmp
mul
push
sbb
scas
iret
test
adc
ja
loope
or
xor
movs
loopne
jle
push
fisttp
xchg
jns
jg
sbb
cli
mov
jo
je
movs
daa
movs
jne
out
pop
push
call
fsubr
jae
es
pop
cwde
and
ret
fst
jno
add
cmp
lock
call
loop
mov
xor
movs
inc
jle
adc
out
call
out
xchg
(bad)
dec
aad
in
dec
test
cmp
xchg
mov
pop
sub
(bad)
inc
hlt
in
imul
ja
fstp
adc
push
cmp
jecxz
cmps
dec
test
pop
cld
xchg
out
loop
jnp
popa
in
or
sbb
inc
mov
push
xor
(bad)
xchg
and
mov
mov
xor
sti
stos
cmp
mov
in
mov
retf
adc
aam
mov
cmps
cmp
xchg
xlat
lods
sub
rcl
cmc
in
aam
imul
jp
sahf
xchg
shr
push
mov
mov
nop
shr
and
sbb
sbb
and
es
out
push
xchg
xor
sbb
sub
(bad)
mov
inc
stos
sub
and
sbb
adc
inc
and
or
adc
push
ins
movs
stos
fist
das
test
and
fs
ror
jmp
xor
fld
leave
sbb
fs
dec
dec
fadd
mov
bound
in
mov
cmp
loop
xor
lods
push
sub
pop
fstp
dec
test
dec
cmp
and
sub
mov
push
or
in
jg
mov
dec
shl
ins
inc
daa
adc
cmp
out
cmps
hlt
mov
aam
push
stos
out
fsubr
sbb
jmp
dec
mov
xor
mov
push
adc
out
xor
sbb
out
add
mov
std
add
mov
cmps
shr
xchg
loopne
cmc
adc
mov
cmp
mov
shl
cs
mov
cmp
repnz
mov
jns
jno
cmps
mov
jns
dec
in
cmp
push
jno
scas
cli
ror
shl
(bad)
push
sub
and
cmps
dec
call
aas
mov
call
add
mov
test
int3
pop
sub
mov
(bad)
cmps
cmp
fidiv
sub
test
mov
cmc
imul
dec
in
test
sbb
jl
jnp
aad
movs
xchg
inc
mov
imul
(bad)
sbb
mov
neg
and
daa
fs
push
div
gs
mov
(bad)
pop
or
(bad)
cmp
jmp
mov
push
imul
pop
dec
in
pop
xor
popf
xchg
pop
pop
loop
and
or
bound
xor
pop
ins
push
dec
rcl
enter
icebp
pop
lods
xor
test
xchg
lahf
outs
jl
shl
ror
jge
loopne
mov
cli
xchg
lods
ret
dec
shr
aam
std
ds
pop
out
pop
inc
es
push
fistp
(bad)
jmp
pop
or
fisubr
ss
mov
shl
(bad)
lds
in
pop
push
jg
div
into
cmp
add
xchg
sbb
and
imul
aad
mov
jb
inc
mov
jge
push
repnz
outs
dec
jmp
push
mov
jbe
outs
mov
adc
mov
push
sub
shl
mov
dec
sub
pop
jge
jle
aam
mov
sbb
xor
std
inc
cmp
cmp
mov
xor
sub
xlat
sub
outs
xor
mov
fwait
inc
adc
or
jo
js
aas
push
mov
cmp
popa
aaa
xchg
mov
les
add
mov
add
dec
xchg
cmps
(bad)
mov
pop
popf
scas
xchg
jo
adc
test
sbb
loopne
jp
dec
movs
xor
mov
pop
ds
dec
xlat
outs
fdivp
fcmovbe
pop
and
sub
fstp
sahf
xor
mov
retf
mov
je
popa
aam
sub
xor
sbb
outs
outs
mov
ss
sbb
dec
mov
int3
sub
inc
ins
mov
jo
adc
lahf
mov
lods
or
mov
mov
sahf
cmp
mov
dec
pop
fisttp
cmp
in
arpl
sar
xor
in
retf
arpl
mov
and
lds
and
and
imul
mov
loopne
out
push
sub
jb
xchg
call
out
dec
aam
jecxz
mov
fsub
fild
add
sub
test
pop
ror
push
pop
jbe
pop
clc
dec
push
mov
enter
movs
adc
(bad)
jo
out
movs
xchg
pop
mov
(bad)
and
jnp
xchg
and
loopne
sub
push
xor
fimul
pop
sub
aam
xchg
fsubrp
cmp
cmp
and
scas
jno
mov
shl
sar
mov
inc
or
or
cmps
mov
pop
pop
add
mov
sub
xor
and
sbb
jge
je
retf
shr
popa
in
xchg
xor
add
jg
sub
cmp
gs
sar
loope
mov
sbb
fisttp
test
pushf
add
dec
out
mov
dec
jmp
sub
addr16
xchg
and
cmp
fwait
arpl
and
popf
dec
out
xor
push
mov
inc
push
lock
push
jmp
sbb
add
dec
xor
mov
fs
sbb
jmp
js
(bad)
jg
or
lahf
jmp
in
cmp
push
xchg
je
inc
xchg
mov
in
jno
imul
xchg
inc
jne
mov
nop
adc
fistp
movs
jmp
bound
cs
push
xchg
sar
ss
fdivr
jmp
sub
imul
stos
ins
sahf
cmps
push
add
(bad)
xchg
xor
movs
popf
mov
(bad)
into
popf
add
dec
pop
inc
data16
cmp
sub
mov
push
jmp
mov
mov
push
cli
sub
dec
aaa
mov
add
and
mov
(bad)
and
cmc
push
das
in
sar
fs
adc
scas
popf
cs
adc
xor
inc
stos
scas
jmp
(bad)
out
and
mov
hlt
sbb
inc
pusha
mov
mov
mov
xor
pop
imul
mov
mov
mov
jmp
mov
inc
push
popa
jns
pop
into
sbb
(bad)
pop
aad
aas
dec
shr
sti
push
frstor
jnp
cmp
imul
xchg
xchg
les
ror
(bad)
push
aam
jmp
sar
ja
mov
fsub
(bad)
sub
repnz
mov
bound
mov
icebp
dec
cli
fidivr
call
mov
mov
pushf
punpcklbw
mov
sbb
imul
or
adc
adc
(bad)
mov
or
push
cmp
stc
enter
xor
and
(bad)
pop
xchg
cmp
and
sbb
sbb
pop
movs
gs
(bad)
ficomp
mov
int3
mov
and
cmp
mov
ins
popf
mov
inc
sbb
push
push
iret
sub
inc
sbb
pop
mul
loop
out
and
clc
jecxz
xor
xor
int3
stos
test
lods
inc
adc
sar
hlt
clc
retfw
arpl
lods
sub
ret
call
bound
mov
mov
ja
and
sub
nop
xchg
mov
xchg
jo
dec
loop
xor
jno
sbb
adc
call
jbe
(bad)
rcr
sub
dec
imul
in
fmul
in
dec
dec
push
rcr
or
jg
fld
call
daa
push
jo
mov
outs
outs
in
call
pop
push
shl
test
pop
int3
jb
fcomp
pop
movs
inc
cmp
rcl
xchg
movs
imul
push
das
xchg
jp
inc
and
adc
enter
push
fwait
pop
push
sub
(bad)
xchg
stos
cmp
(bad)
icebp
pop
inc
sbb
ja
out
or
out
or
not
push
out
mov
dec
loope
cmp
movs
shr
inc
push
(bad)
xchg
(bad)
cmp
test
cmp
data16
jae
jbe
gs
jne
pop
jge
mov
rcr
lock
jmp
push
or
pop
push
lahf
inc
rcr
js
mov
push
sub
cmp
fimul
xor
push
out
inc
pop
dec
cmp
imul
test
sub
out
in
add
dec
xor
mov
sub
sbb
xchg
mov
sahf
inc
jno
aas
push
push
jo
nop
xor
aad
stos
sub
loope
mov
lods
adc
jo
movs
add
sbb
adc
push
in
repnz
fbstp
out
fcmovb
stos
lock
jae
in
dec
or
mov
out
cmc
jnp
jg
push
inc
inc
movs
or
sbb
pop
lea
fidiv
sub
hlt
(bad)
loop
sub
dec
dec
mov
mov
gs
sub
and
daa
test
idiv
xchg
pop
xchg
xchg
fmul
push
lods
mov
js
arpl
xchg
sub
and
sub
dec
inc
cmp
jmp
or
pop
mov
cmps
push
jbe
inc
int
stos
or
or
sub
pop
cld
ror
pop
pop
shr
inc
sbb
add
dec
add
je
dec
mov
inc
ficom
jnp
lds
leave
jno
xchg
mov
mov
scas
mov
ja
out
enter
dec
and
in
push
push
rcr
fs
pusha
fwait
(bad)
cmp
push
fcomip
mov
scas
ret
push
(bad)
xchg
in
and
dec
push
cmp
fdivr
xchg
leave
inc
lds
lods
mov
dec
dec
dec
mov
daa
pop
cdq
fadd
jae
sub
sub
inc
add
(bad)
call
xchg
xor
test
pop
ret
arpl
adc
push
mov
in
out
pushf
call
jb
imul
aam
fxch
jae
push
cmp
cmc
ss
push
out
dec
rcr
inc
cmp
mov
push
cmp
imul
jnp
les
inc
mov
inc
sub
sbb
fcomi
inc
pop
retf
loop
sbb
mov
mov
pop
mov
addr16
int3
enter
dec
mul
call
rcl
mov
adc
xchg
ret
out
enter
fld
(bad)
adc
mov
icebp
and
cmc
sahf
dec
js
mov
test
cmp
push
jge
shr
push
clc
das
test
addr16
sbb
in
sub
mov
add
xor
push
mov
dec
xchg
push
(bad)
retf
movs
xchg
adc
mov
mov
nop
test
and
(bad)
cmp
in
imul
std
pushf
fsubr
gs
inc
jb
xchg
inc
mov
xchg
(bad)
xor
sub
repz
fwait
sub
push
sbb
rcl
mov
jmp
mov
iret
ficom
mov
add
cmp
mov
fld
adc
ins
in
div
sti
out
ret
fdivr
jbe
adc
mov
xchg
outs
icebp
aaa
mov
jnp
leave
mov
pop
xchg
loope
xchg
lds
fnstsw
in
push
add
movs
out
inc
in
sbb
pop
or
addr16
ins
jl
fwait
sub
xchg
outs
xor
cmp
iret
(bad)
popf
sub
hlt
or
ret
push
(bad)
cmps
fisttp
lea
sub
jb
movs
mov
shl
xchg
fsub
ror
and
in
adc
mov
arpl
pop
jle
out
push
popa
sbb
fisttp
fstp
adc
jns
mov
add
and
outs
xchg
test
mov
sub
pop
dec
push
add
mov
arpl
mov
fldcw
(bad)
mov
ins
add
mov
fwait
pop
daa
and
cmp
or
mov
in
jb
aam
dec
in
sbb
push
xor
dec
xor
pop
sub
stos
xlat
out
iret
xor
sub
mov
cmp
mov
cmp
push
bound
push
push
sbb
outs
daa
sbb
inc
mul
adc
xchg
fidivr
jg
pop
inc
jge
int3
mov
ins
sub
push
fsub
sub
test
mov
push
imul
and
ds
aam
fwait
(bad)
ficomp
fisubr
dec
jge
add
or
pop
jmp
aad
sub
xchg
(bad)
fstp
sbb
mov
sub
or
jno
sub
imul
dec
js
clc
mov
pop
ins
pop
pop
cmp
jo
outs
clc
mov
xchg
js
cmps
and
push
ror
ficomp
mov
rcr
test
pop
ins
out
inc
mov
and
mov
imul
dec
push
cmp
xor
int
fisub
dec
sbb
sub
or
in
jg
cmp
aam
jb
jno
pusha
imul
pop
popf
mov
dec
adc
stos
add
add
pushf
retf
sub
fsub
in
ficomp
sbb
pusha
shl
pop
ficomp
ss
repz
and
mov
xchg
daa
jo
push
jp
xchg
mov
or
cmps
dec
mov
lock
mov
call
cli
fld
arpl
(bad)
dec
or
cmp
sahf
fwait
xchg
mov
cmps
jae
jge
jl
push
bound
sbb
and
mov
mov
das
inc
stc
mov
mov
sub
test
xchg
movs
imul
cmp
and
bnd
lods
or
sar
xchg
ss
or
mov
xor
in
cmp
mov
scas
push
dec
scas
add
inc
sbb
ins
cmps
or
xchg
pop
stos
xchg
xchg
sbb
dec
aad
cmp
fldcw
retf
mov
push
or
inc
stos
add
jge
ficom
xor
mov
imul
pop
inc
jno
aaa
xchg
das
jns
stos
mov
ficomp
sub
inc
pop
pop
or
jae
ins
shr
aam
sbb
inc
mov
dec
jno
sbb
les
cmp
jno
sbb
aam
pop
mov
(bad)
and
adc
pop
xor
lods
daa
and
mov
nop
imul
in
call
lods
and
xor
push
cmp
mov
jb
scas
and
stos
dec
ror
das
out
mov
pop
mov
xor
ins
mov
out
mov
inc
outs
ds
pop
shl
xchg
inc
cld
mov
jo
retf
nop
in
xchg
dec
cmp
(bad)
ins
push
icebp
dec
imul
fistp
mov
xlat
push
pop
adc
inc
jmp
mov
adc
xor
imul
sub
push
dec
ss
adc
into
xchg
mov
fmul
test
in
xchg
inc
sbb
enter
mov
jno
jmp
xchg
je
sub
bound
dec
xchg
mov
sub
cmp
jbe
jmp
lea
cli
fmul
movs
jo
and
nop
push
js
xor
dec
cmp
dec
push
mul
jle
loop
add
xor
adc
cmp
mov
add
loopne
fidiv
ret
mov
cmp
arpl
imul
inc
xor
adc
mov
ins
mov
dec
popf
scas
mov
jae
fcmovnb
xchg
mov
dec
mov
or
inc
enter
jle
jno
ins
and
ds
cwde
jl
ja
fdiv
(bad)
cwde
inc
push
jecxz
aam
std
test
or
icebp
ss
jns
mov
outs
ins
mov
inc
xchg
mov
push
add
(bad)
loopne
push
adc
shr
int3
out
adc
scas
test
mov
(bad)
jns
(bad)
jnp
push
ficomp
sub
cld
(bad)
popa
lea
inc
repnz
jae
rcl
cli
mov
lds
bound
pop
out
shr
das
sub
add
mov
xchg
rcl
push
mov
mov
mov
loop
cld
in
out
out
enter
fs
push
out
mov
mov
mov
pop
mov
test
xchg
push
daa
cmp
sar
(bad)
pop
cmp
pop
fwait
test
pop
pushf
ss
mov
inc
xchg
call
movs
into
mov
ror
jnp
mov
jge
xchg
lock
cmp
xor
in
pop
jecxz
or
or
mov
sahf
cs
test
jmp
mov
ins
rcl
dec
leave
sub
or
stos
xchg
xchg
inc
and
sub
inc
sbb
mov
loopne
in
xor
sub
mov
push
push
sbb
sub
mov
jo
loopne
(bad)
mov
stc
or
aas
cmp
sbb
sub
inc
lea
(bad)
push
xchg
rcr
test
sub
xchg
inc
mov
xor
mov
mov
fldenv
fs
dec
cld
les
add
(bad)
jo
jae
cmp
cmps
push
push
dec
pushf
add
retf
outs
jae
mul
xor
xchg
sub
jnp
enter
mov
int
ret
jb
inc
adc
push
push
inc
sub
xchg
imul
sti
(bad)
inc
pop
adc
and
test
pop
or
and
xchg
sbb
inc
push
and
cmps
push
mov
bound
jne
and
div
xchg
lea
outs
pop
pusha
in
sbb
fwait
inc
sub
cmps
push
iret
mov
hlt
hlt
outs
cld
shl
addr16
adc
fdiv
dec
push
dec
xchg
jg
mov
rol
sub
mov
fisttp
movs
mov
add
ror
pop
or
jmp
dec
ret
outs
dec
sub
push
shl
adc
in
in
shl
stos
adc
cmp
movs
aaa
rcl
push
jo
sbb
cmp
movs
clc
fs
fldcw
mov
shr
(bad)
push
push
xor
jecxz
(bad)
add
rcl
ja
int
div
adc
loop
not
jno
sbb
cld
ror
sbb
sbb
add
pop
test
pop
ins
inc
in
sbb
cmps
xor
mov
adc
in
pop
out
dec
loop
(bad)
imul
mov
jbe
mov
cmp
inc
push
xchg
mov
or
retf
dec
leave
adc
and
hlt
jbe
in
jp
mov
mov
mov
aad
je
sub
mov
xor
sub
hlt
fcomp
cli
inc
dec
and
js
std
push
cmp
inc
jl
loop
mov
in
pop
dec
jns
pop
retf
jl
(bad)
or
xor
sahf
mov
pop
xor
loope
inc
icebp
xor
cmp
lds
mov
mov
jmp
dec
test
data16
cmp
push
aaa
add
dec
sbb
into
add
adc
xor
inc
xor
push
push
rcr
xchg
push
fnstcw
stc
push
pushf
adc
ins
cli
(bad)
mov
jno
mov
mov
dec
mov
test
(bad)
sbb
(bad)
fidivr
cmp
out
xor
movs
jae
call
push
inc
push
or
push
enter
arpl
(bad)
loop
call
dec
ror
shr
jg
sbb
mov
es
es
or
pop
push
jecxz
(bad)
cmp
out
dec
dec
cs
xchg
retf
std
dec
pop
cmps
xchg
mov
push
nop
mov
xor
gs
adc
and
cmp
sahf
aam
pop
test
add
scas
pusha
mov
mov
adc
fiadd
pop
out
clc
lea
test
cmps
sar
pop
dec
jne
imul
icebp
inc
sbb
sbb
rcr
sub
out
pop
jmp
push
pop
lds
(bad)
mov
sahf
cdq
dec
pushf
(bad)
fadd
cmp
cmps
pop
dec
mov
jmp
jo
mov
mov
shl
sbb
pop
or
adc
sbb
sti
jl
dec
pop
sub
into
push
cmp
pusha
das
add
pop
ins
out
jmp
cmp
mov
jmp
out
cli
jo
jae
fcom
stos
mov
lds
retf
mov
mov
jo
scas
aas
cmps
cmp
sbb
into
(bad)
(bad)
xchg
(bad)
(bad)
and
fstp
pop
xor
pop
shl
xchg
inc
iret
sub
mov
fnstenv
xor
cdq
enter
pop
jecxz
iret
dec
(bad)
xor
fimul
sti
dec
mov
cmp
movs
retf
stos
int3
jbe
sbb
fdiv
jmp
or
xchg
arpl
sahf
xchg
jge
or
imul
xchg
dec
and
faddp
nop
inc
js
or
dec
xor
mov
enter
xchg
leave
or
jnp
cli
push
scas
xor
xchg
jne
dec
ja
inc
popa
test
faddp
ss
div
sub
fdivr
inc
jecxz
cmp
or
aad
sub
repz
jno
sbb
addr16
fldenv
sub
enter
mov
ja
call
mov
add
jl
push
jecxz
xor
ja
or
(bad)
dec
push
push
shr
jne
mov
or
inc
push
dec
sbb
js
jp
mov
in
sbb
xor
xchg
enter
test
jp
pop
movs
add
pop
mov
pop
pop
jmp
inc
sub
or
(bad)
pop
push
push
popf
stos
iret
leave
in
out
pushf
repz
mov
pop
in
sbb
mov
pop
dec
push
sbb
nop
sub
mov
and
aas
inc
lock
jb
sbb
sub
fmulp
(bad)
push
psubusb
out
mov
and
cmp
hlt
mov
pop
sub
cmp
push
inc
inc
mov
imul
in
popa
(bad)
ror
and
or
mov
jo
iret
push
shl
movs
rcr
or
shr
and
xchg
dec
ins
rol
push
adc
cmp
push
add
mov
xchg
xlat
mov
ret
fs
mov
lods
ss
sbb
iret
addr16
jo
dec
add
popa
inc
movs
sbb
or
jae
fisubr
or
inc
push
xchg
sbb
(bad)
jmp
xor
push
rcr
dec
cdq
addr16
pop
inc
ja
lods
jae
and
mov
sbb
repnz
shl
push
mov
popf
cld
pop
inc
icebp
lods
jge
pop
lods
or
mov
adc
sbb
fsubr
mov
adc
jl
adc
nop
mov
sbb
sub
and
out
rcr
cmps
cmp
mov
push
ins
xchg
mov
push
inc
outs
mov
cwde
xor
test
fcmovnu
retf
sbb
dec
rol
cmp
add
jmp
cmps
sar
dec
and
xchg
cmp
push
aaa
loopne
push
jne
(bad)
mov
adc
sbb
lods
ins
cmps
mov
mov
xchg
pushf
hlt
leave
xor
xor
repnz
push
inc
das
imul
mov
mov
inc
dec
cmp
leave
movs
outs
fld1
xlat
jp
scas
mov
adc
ja
adc
mov
imul
jp
mov
or
add
into
push
adc
sbb
add
pop
and
sbb
push
ss
int3
or
aas
mov
jne
add
push
out
adc
ins
pusha
inc
xchg
lds
xchg
pop
push
mov
and
xor
and
sbb
out
jmp
stos
stos
inc
cmp
es
and
sub
addr16
xor
sar
fnstsw
mov
daa
pop
or
lds
leave
jae
iret
movs
retf
sbb
icebp
xchg
mov
add
ror
add
ins
(bad)
leave
jb
pop
out
add
mov
shl
fild
test
sbb
jo
jge
inc
movs
dec
xor
dec
mov
jmp
and
les
xchg
(bad)
or
mov
ds
imul
retf
mov
jmp
inc
and
(bad)
mov
sar
cmps
fcomp
jge
fst
and
xchg
xchg
push
add
inc
mov
ss
rcl
xchg
movs
das
movs
lds
rol
cmps
shr
mov
mov
and
nop
pop
sub
cmp
push
mul
fsub
xchg
outs
(bad)
cmp
jl
ins
cmc
movs
repnz
jb
ficom
(bad)
push
pop
fnstsw
and
dec
push
stos
int3
fbld
xor
cs
out
pop
mov
sbb
clc
inc
retf
mov
pop
cs
out
shl
clc
jb
cmp
std
mov
sbb
fimul
xor
mov
and
pop
add
inc
not
int
jbe
cs
(bad)
(bad)
and
(bad)
mov
ds
add
pusha
test
pop
ret
xchg
push
cmp
push
pop
shr
mov
and
cwde
stc
xor
stos
add
cmc
fidivr
push
xchg
xchg
pop
es
xchg
ja
fidivr
sub
dec
popa
pop
movs
addr16
div
push
cwde
pop
jp
jmp
jnp
nop
js
inc
mov
fisttp
mov
ret
and
add
into
rcr
xor
dec
jge
in
mov
fidivr
imul
aaa
rcr
lods
rol
in
mov
loopne
cmp
scas
mov
(bad)
pop
add
dec
cmp
add
int3
push
jne
mov
mov
and
outs
(bad)
and
iret
push
mov
je
cmps
mov
and
push
mov
retf
push
ss
add
push
enter
les
jbe
cld
imul
ja
cmp
mov
cmp
jmp
xchg
add
push
sbb
retf
ds
(bad)
jmp
sbb
or
adc
outs
mov
pop
out
and
xor
lahf
dec
push
mov
rcr
jp
mov
sbb
inc
add
fs
call
icebp
mov
mov
dec
fs
cdq
jecxz
aam
outs
mov
out
ds
fnstsw
inc
int
shl
xchg
pop
fsubr
lea
in
(bad)
sbb
jecxz
cmp
push
repnz
mov
cmps
outs
clc
add
jmp
gs
inc
dec
and
ja
adc
jge
xor
and
fisub
sar
xchg
scas
imul
mov
mov
jae
inc
mov
xchg
jbe
mov
test
jl
jge
xchg
in
data16
dec
in
bound
repnz
repz
imul
pop
stc
pop
jl
mov
xor
or
jo
or
push
fcomp
(bad)
sub
loopne
shl
xor
dec
test
retf
scas
es
outs
fdivrp
cmp
lea
mov
daa
jbe
(bad)
loope
ror
push
mov
bound
add
fsub
aam
mov
xor
sbb
push
int3
outs
push
jmp
mov
daa
push
inc
inc
ins
out
add
sub
mov
sti
call
cmc
sti
mov
mov
mov
xchg
add
mov
loop
adc
in
fild
imul
in
mov
or
adc
fistp
loopne
inc
inc
dec
hlt
jge
dec
sub
mov
mov
cmp
repnz
mov
xchg
pop
js
fcmovb
mov
imul
leave
call
push
sub
mov
ror
adc
mov
add
nop
adc
int
sub
sub
(bad)
fcmovnb
pop
adc
mov
xor
in
(bad)
cmp
cmp
lahf
push
push
cmp
mov
xchg
pop
mov
push
shr
mov
mov
inc
inc
push
pop
pop
sub
retf
push
xchg
push
push
push
not
push
pop
xchg
js
out
fwait
imul
cmp
cmp
mov
mov
mov
pop
(bad)
call
cmp
sahf
push
imul
push
and
(bad)
repnz
dec
mov
arpl
sub
pop
sbb
loop
cmp
shl
dec
pop
dec
cmp
scas
push
gs
retf
popa
fmul
xor
push
(bad)
xchg
pushf
sub
sub
push
shl
sub
add
mov
cwde
out
cmps
xchg
(bad)
loopne
lds
je
clc
lods
fisub
daa
sub
mov
stos
jmp
ja
fnstsw
jb
nop
lods
or
sbb
add
dec
mov
rol
call
adc
cmp
(bad)
xor
nop
jnp
into
dec
aaa
mov
xchg
mov
ds
mov
repnz
addr16
push
and
mov
jge
movs
push
repnz
repnz
jbe
hlt
aam
dec
mov
enter
imul
and
cmp
push
pop
add
icebp
push
in
mov
outs
aas
add
xchg
cdq
jne
jns
ins
sub
retf
pop
dec
inc
aam
movs
push
cdq
push
xchg
test
cs
movs
cmp
add
sti
je
sub
les
fxch
ins
cmp
xchg
int3
add
mov
jnp
inc
xchg
not
fs
nop
push
shl
shr
call
xchg
push
test
sbb
jp
es
cmp
mov
bnd
outs
scas
outs
xchg
(bad)
aas
sub
dec
loopne
push
test
push
ds
sub
call
call
frstor
ins
mov
test
xchg
leave
sti
push
dec
inc
mov
out
xchg
xchg
pop
cmp
or
cmp
push
jae
push
add
call
scas
mov
xor
push
imul
in
test
sbb
inc
mov
stc
mov
jmp
pop
pop
cmp
jo
bound
mov
fisttp
and
adc
fisttp
sbb
push
dec
cmps
repz
movs
cdq
retf
cmp
xchg
dec
add
push
pop
xchg
mov
xor
lods
add
add
jno
stos
mov
leave
sbb
test
sbb
jmp
test
adc
and
ficomp
pop
push
and
ss
add
jecxz
mov
jnp
fisttp
int
sub
jnp
sbb
loope
mov
icebp
es
rcr
mov
xor
inc
fiadd
test
jge
in
mul
enter
icebp
enter
mov
ret
cli
jle
add
stos
loopne
mov
add
ret
push
inc
adc
aas
mov
fild
jecxz
lods
inc
push
shl
push
shr
repnz
push
aas
cmp
mov
push
push
mov
imul
cmp
sub
sbb
inc
mov
cmovle
add
push
adc
inc
jl
jne
test
pop
jmp
push
cmp
rcl
fld
iret
mov
in
sar
xor
mov
fidivr
fstp
fwait
jns
xchg
rol
in
sub
icebp
inc
es
jg
imul
mov
and
aaa
adc
in
in
ffree
out
popa
stos
imul
test
mov
add
call
inc
add
ds
jbe
pop
int
inc
retf
mov
lods
test
xchg
mov
rcr
add
lods
sub
pop
fisubr
imul
xchg
ret
xor
daa
in
jp
stos
lea
and
hlt
test
dec
movs
test
jecxz
xor
push
lahf
sub
scas
icebp
add
nop
jg
push
jmp
adc
loope
mov
pop
cmp
and
cwde
dec
adc
and
cmp
ins
cmps
pop
sbb
xchg
movs
sub
inc
test
xor
lea
add
pop
in
mov
fwait
adc
lods
ins
outs
sbb
push
sbb
es
dec
fs
out
shl
push
jp
mov
mov
idiv
mov
lock
or
pop
mov
xor
or
daa
mov
(bad)
or
add
mov
xor
push
pop
add
pop
pop
icebp
(bad)
mov
dec
mov
fldl2t
cld
inc
jge
jmp
cmps
fdivr
mov
pop
jl
shl
inc
push
mov
fistp
pop
js
dec
push
or
aas
(bad)
cmps
and
jge
fsub
out
and
cmp
mov
jge
pop
lock
push
mov
push
sub
nop
or
mov
adc
inc
fcom
jae
icebp
inc
pop
push
sbb
jmp
call
add
sbb
dec
and
leave
mul
mov
mov
dec
ss
dec
jae
pop
in
repz
xchg
retf
jno
and
ror
fisub
pop
mov
xor
loopne
mov
mov
shr
lea
cmps
pushf
xchg
dec
cmps
dec
xor
(bad)
das
push
inc
ficom
dec
cdq
mov
adc
mov
iret
pop
sbb
movs
mov
mov
int3
div
leave
ins
sbb
sub
dec
aas
cwde
pop
pushf
adc
adc
mov
lea
(bad)
test
int3
or
xchg
xchg
outs
repz
and
(bad)
(bad)
mov
cmps
rol
or
stos
or
xor
nop
and
pusha
dec
in
adc
and
loopne
push
dec
xchg
test
test
mov
stos
ret
pop
cmp
push
hlt
fisub
jae
repnz
lods
gs
mov
mov
loope
fld
inc
cmp
and
adc
mov
aad
aad
push
xlat
push
sbb
mov
sbb
cmp
inc
ficom
fiadd
xor
call
test
inc
mov
dec
fnsave
mov
jmp
out
dec
std
sbb
ficom
imul
stos
int3
popa
dec
adc
cmp
fsub
icebp
repz
dec
adc
cmps
in
mov
aam
xchg
cmp
mov
div
jecxz
pop
(bad)
cmp
dec
dec
(bad)
inc
pop
popf
rol
jns
and
test
out
popa
or
mov
sub
fstp
in
inc
mov
pop
add
xchg
stos
mov
xor
xchg
js
ficom
mov
ss
jp
out
push
adc
dec
leave
arpl
or
adc
psubsw
xor
xchg
pop
inc
movs
inc
mov
outs
xor
inc
(bad)
push
xor
rcl
pop
sar
mov
cwde
lods
pop
ss
sbb
jg
icebp
dec
hlt
dec
popf
xor
ja
les
ja
cmp
(bad)
fiadd
in
mov
xor
in
adc
pop
daa
cmp
cmp
inc
xchg
jge
test
jmp
mov
cmps
xor
inc
mov
jge
add
cmps
jp
aas
dec
fimul
imul
loop
sbb
xchg
test
mov
mov
and
pop
push
dec
or
js
jae
mov
sar
in
pop
(bad)
bound
fidiv
and
popf
cmp
data16
xchg
das
movs
lock
sbb
outs
cmp
fst
lea
and
(bad)
mov
es
out
daa
sub
sub
sahf
movs
je
jmp
ficomp
mov
idiv
es
dec
sbb
cmp
jns
pop
lea
sar
sub
cmps
outs
outs
and
int
stos
xor
sbb
test
mov
ret
imul
shl
xchg
int3
repnz
in
mov
mov
div
sti
sti
jnp
bound
mov
push
out
xor
stc
mov
add
stos
sub
or
inc
jae
and
leave
mov
or
add
cwde
out
inc
cmp
adc
sub
outs
mov
cmp
pop
lds
shl
and
adc
jg
dec
sub
dec
cmps
leave
jns
out
out
cmc
pop
bound
addr16
push
xor
lds
mov
xchg
sar
or
push
or
shl
push
(bad)
outs
and
int3
data16
pop
xor
out
xchg
out
nop
stos
push
sbb
jecxz
jge
pop
dec
pop
mov
cmp
sbb
or
jo
xchg
dec
xor
mov
xchg
pushf
repz
adc
push
imul
or
ret
fisubr
mov
cmp
inc
mov
inc
bound
inc
mov
enter
test
outs
push
je
fisubr
jge
cmp
(bad)
mov
jp
ror
fisub
daa
cli
push
inc
jno
sbb
add
retf
ja
mov
movs
imul
sbb
push
sub
(bad)
cmp
out
mov
data16
push
lea
or
mov
sbb
shl
dec
cmc
cmp
sahf
mov
ds
aad
add
outs
outs
cs
inc
mov
mov
adc
sbb
mul
ficom
mov
pop
inc
jecxz
push
and
push
sbb
or
sbb
scas
adc
xchg
loop
shr
fisttp
xchg
pop
push
fst
test
daa
popf
or
sti
aam
aam
cdq
leave
aam
jmp
fwait
sbb
lea
sub
out
xchg
mov
int
mov
mov
aad
mov
or
cli
test
inc
push
(bad)
or
mov
mov
shl
loope
aas
mov
cli
out
xchg
icebp
push
outs
lahf
cmp
add
je
daa
mov
jmp
mov
push
mov
scas
mov
mov
or
sub
(bad)
in
push
(bad)
cmp
shl
dec
pop
out
push
push
sbb
pop
xor
ss
jno
inc
adc
sub
dec
add
adc
jecxz
inc
sub
or
dec
loope
(bad)
cmp
jae
mov
adc
inc
mov
outs
cmp
lods
ror
inc
jecxz
xor
aaa
xor
xor
fcmove
or
push
jo
mov
stos
popf
inc
dec
pop
enter
fst
pop
sub
push
mov
pushf
mov
enter
stos
xchg
sbb
lods
pop
shr
jg
inc
ja
push
mov
mov
ds
or
xchg
sar
iret
sbb
mov
adc
cmp
add
imul
inc
enter
fsub
cmc
stos
push
mov
sub
xor
and
mov
pop
cs
ds
jae
in
clc
lds
sub
mov
ret
popa
imul
jl
jecxz
cmps
and
rcr
pop
pusha
outs
cmps
xchg
mov
lea
sub
add
inc
push
cs
adc
xchg
jne
inc
inc
mov
icebp
jae
test
sbb
mov
xchg
inc
sub
pop
add
stos
inc
cmp
push
pusha
jecxz
lea
fdivr
jecxz
ins
pop
push
dec
mov
cmps
jg
xchg
repz
cdq
test
lds
leave
enter
leave
jmp
loop
jecxz
int3
and
add
push
in
push
cmp
data16
mov
sub
jmp
and
push
pop
popf
retf
sti
push
push
idiv
jb
add
jle
sbb
nop
dec
hlt
int
les
aas
sbb
sub
(bad)
mov
out
and
aad
push
repnz
mov
mov
rcr
icebp
or
ficomp
popf
ds
cmp
inc
aaa
enter
outs
dec
stos
cmp
sbb
imul
fwait
mov
pop
inc
jno
push
adc
sbb
add
pop
ficom
inc
xor
(bad)
iret
or
xchg
dec
lahf
dec
shl
enter
mov
add
mov
jne
jecxz
sti
aam
sub
mov
call
mov
mov
xor
js
xor
jb
shl
adc
jl
sub
mov
xor
addr16
xor
icebp
pop
test
imul
test
mov
adc
lds
mov
xor
lahf
lds
ins
lock
and
adc
adc
or
jbe
lea
out
fist
ss
aam
and
das
and
outs
(bad)
dec
jmp
cmc
out
std
sub
out
cmc
or
pop
and
xor
sub
enter
(bad)
call
dec
rcl
jl
scas
jmp
cmps
ins
movs
inc
mov
push
pop
dec
lahf
xor
push
xchg
pop
lods
sahf
cmps
stos
ret
loope
mov
imul
rol
cmp
mov
dec
retf
into
sbb
mov
pop
test
push
(bad)
add
dec
daa
cmp
std
mov
int3
jne
mov
cmp
sub
(bad)
das
lea
pop
ds
or
fs
js
shr
pop
ss
push
mov
dec
sub
aaa
mov
rol
call
arpl
loop
inc
dec
adc
imul
push
(bad)
fcomip
ss
aas
mov
fisttp
jno
xchg
push
xchg
inc
ja
fld
pop
and
pop
sahf
imul
in
call
(bad)
(bad)
mov
xor
or
and
imul
push
cmps
mov
xor
dec
dec
jo
push
xlat
in
out
hlt
ja
sbb
(bad)
cmps
aam
gs
aam
adc
in
xlat
xor
mov
sbb
sahf
cmp
add
test
pop
mov
cmp
pop
data16
push
jne
pop
ror
xchg
lds
and
jb
cmp
cmp
shl
retf
imul
dec
outs
das
out
test
fcmovbe
mov
bound
sbb
(bad)
or
sbb
jne
sub
or
mov
and
leave
je
sbb
xor
adc
inc
jae
lods
movs
xor
xchg
mov
sub
dec
retf
jns
mov
mov
adc
pusha
dec
idiv
lods
and
adc
hlt
cmps
imul
cld
sub
mov
push
dec
loope
jb
xor
sahf
fisttp
mov
push
mov
(bad)
xchg
leave
pushfw
(bad)
scas
fst
mov
shl
xor
(bad)
out
ret
shr
ret
jmp
push
sbb
aam
push
into
push
mov
ins
outs
dec
xchg
cmp
cs
shl
imul
mov
icebp
fsubr
sbb
pushf
call
mov
pop
mov
sahf
frstor
dec
xchg
leave
lahf
jb
sub
cwde
cmc
add
pushf
mov
dec
jne
repnz
inc
pop
and
aas
mov
jge
es
xlat
ret
add
loopne
fcomp
cdq
leave
cmp
mov
mov
xchg
iret
push
xor
aad
rcl
sbb
mov
push
pop
sbb
sahf
mov
pushf
idiv
mov
(bad)
cld
inc
mov
lock
cmp
add
cmp
mov
pushf
hlt
xchg
xchg
xchg
push
mov
loop
in
adc
fadd
jo
add
add
push
dec
mov
cmp
jae
mov
repnz
imul
and
cdq
fucomp
xchg
(bad)
aam
inc
xchg
cld
adc
movs
push
lds
dec
add
mov
clc
enter
lea
mov
pop
ds
add
and
adc
movs
cmp
or
jmp
icebp
popa
outs
or
js
sbb
shl
icebp
inc
or
rol
or
push
cmp
sub
cmp
clc
out
daa
rcr
pop
mov
and
jge
mov
pop
push
pop
outs
mov
cmp
mov
int
or
xor
fimul
pop
sbb
jbe
push
inc
inc
ins
cmps
imul
jae
fcom
test
data16
out
mov
sub
and
movs
(bad)
ret
push
jb
jns
jo
std
(bad)
mov
sbb
pop
sub
icebp
and
jnp
add
inc
mov
and
inc
sbb
out
lds
pop
mov
push
mov
cmps
or
scas
arpl
jp
push
mov
jmp
ds
and
push
shr
and
add
test
stos
xchg
nop
js
mov
adc
(bad)
imul
nop
xchg
xor
out
sbb
imul
mov
add
fild
mov
mov
jmp
dec
aaa
sahf
or
jae
inc
inc
dec
xor
pop
arpl
cmp
lea
add
repz
sub
mov
mov
sbb
cld
stos
xchg
neg
cmp
and
out
fldenv
lods
mov
lahf
push
cmp
(bad)
sbb
mov
push
out
adc
leave
sbb
daa
inc
and
jbe
(bad)
jno
sahf
mov
mov
sub
sub
and
jmp
inc
mov
jb
sbb
aaa
adc
shr
repz
sbb
call
mov
pop
out
sbb
cmps
or
sub
cld
or
ds
mov
mov
(bad)
imul
outs
cmps
test
repnz
fst
cmp
jg
mov
jne
and
movs
mov
xchg
add
mov
xchg
icebp
push
fisubr
out
pop
je
or
test
lds
xchg
inc
inc
icebp
add
pop
(bad)
cli
xchg
ins
mov
dec
sub
dec
fcom
cmp
jbe
and
clc
mov
leave
cdq
jecxz
jecxz
and
mov
jb
push
and
xor
jg
stos
push
fisubr
add
scas
xor
in
loope
push
push
jae
jnp
inc
jnp
sub
stc
ror
dec
sti
pop
out
hlt
or
push
fldcw
scas
sbb
sbb
add
sahf
xchg
cli
dec
dec
into
pop
dec
das
mov
aad
enter
mov
or
les
adc
int3
shl
psllq
cmp
inc
cmps
lods
mov
pop
sub
jl
sar
repnz
jb
sti
push
mov
or
inc
dec
ror
arpl
lods
jmp
ins
in
lods
jae
push
ret
jge
push
dec
loopne
jae
ins
mov
sub
mov
(bad)
cmp
xchg
jb
loopne
cmp
push
cmp
and
shl
sbb
adc
loopne
test
mov
cmp
nop
rcl
add
call
sub
xor
jnp
das
nop
adc
out
push
sbb
cld
loopne
jge
imul
cdq
movs
xchg
pop
sbb
fdiv
call
add
add
adc
cmp
packsswb
push
jnp
ins
push
push
cmc
lods
inc
(bad)
sti
dec
mov
pop
pop
lods
jecxz
inc
or
fidivr
cmp
push
iret
mov
cwde
hlt
loop
daa
ins
in
or
mov
sub
sub
iret
adc
shl
inc
push
dec
enter
cmp
rol
adc
jmp
ins
xor
cmp
ror
cmc
test
inc
retf
pop
jmp
in
adc
ret
call
and
cmp
icebp
(bad)
xor
(bad)
mov
movs
dec
mov
shr
icebp
dec
int
add
sti
data16
pop
inc
adc
cmp
mov
movs
sbb
and
push
add
outs
loopne
sti
out
movs
stos
dec
and
inc
xor
xchg
and
sahf
and
ds
pop
mov
out
daa
sbb
pop
jmp
dec
xchg
dec
test
(bad)
dec
inc
retf
mov
xor
(bad)
and
(bad)
sbb
jnp
in
inc
sbb
in
add
jo
aas
std
shr
sbb
adc
das
push
adc
outs
cmp
adc
xchg
push
loop
cmp
imul
inc
mov
rcl
ss
xor
fdivr
mov
lea
push
(bad)
mov
mov
pop
mov
fsub
cmp
les
push
and
test
je
loop
lahf
xchg
xchg
inc
adc
into
jg
or
pop
(bad)
call
xchg
mov
aas
call
cmp
jmp
push
xchg
pop
das
and
or
mov
cwde
add
popf
out
sub
pop
ret
hlt
mov
cmc
jg
dec
movs
mov
enter
cmp
mov
iret
push
inc
pop
sbb
push
das
movs
in
jg
js
and
int3
jp
test
ja
fisubr
pop
movs
xor
mov
mov
mov
jg
push
xchg
(bad)
arpl
mov
add
cmp
cmp
xlat
dec
or
sub
cwde
mov
cmp
xchg
outs
jae
sti
jg
push
push
mov
cmps
pusha
add
mov
repz
pop
push
cdq
mov
sub
leave
pop
sahf
push
in
lea
enter
ror
dec
dec
jecxz
dec
outs
mov
sbb
sub
inc
push
fnstsw
pop
dec
mov
mov
xor
cmp
(bad)
dec
mov
add
xor
sbb
and
fs
lea
nop
mov
sub
cmp
push
mov
xchg
and
lock
cmp
loop
aaa
pop
shr
dec
cli
scas
movs
addr16
pop
ficom
test
sbb
stos
xor
push
jb
mov
add
loope
cmc
inc
cs
imul
push
fcom
enter
mov
push
jp
mov
mov
cdq
inc
and
or
mov
aas
adc
out
push
gs
pop
pop
ret
js
cmp
fstp
test
(bad)
ins
(bad)
les
arpl
and
inc
ins
(bad)
adc
dec
xor
icebp
and
jp
std
test
or
scas
ss
add
popf
fdivr
jg
ins
pop
nop
movs
jne
push
iret
lea
shl
in
sub
jae
cmp
jbe
daa
aas
loop
xlat
inc
pusha
mov
xchg
mov
mov
imul
push
cmps
mov
cli
or
imul
rol
cmp
jecxz
pop
mov
or
push
jmp
push
add
cmc
pushf
jecxz
dec
pop
imul
lea
popa
xor
adc
outs
pop
and
jecxz
add
(bad)
in
xchg
pop
push
cmp
lods
dec
xor
dec
(bad)
fdivr
add
push
in
adc
inc
sbb
jb
mov
xor
jnp
in
jg
and
sbb
les
in
call
lods
ins
mov
hlt
in
pop
jg
dec
xchg
and
mov
pushf
(bad)
sub
movs
push
sub
pusha
jne
add
mov
mov
xor
stc
cmp
xchg
pushf
push
hlt
inc
pop
sub
add
adc
sbb
mov
dec
call
push
add
jmp
push
xor
jb
sub
xor
dec
cli
dec
inc
add
repz
ror
inc
sbb
std
jmp
(bad)
and
add
dec
mov
mov
sub
cs
aam
mov
mov
pop
in
sub
cmp
add
test
sbb
stc
(bad)
cmp
xchg
sub
test
inc
or
sub
or
retf
cmp
fisttp
lods
add
into
adc
rcr
mul
pop
pop
das
jg
push
adc
sahf
cmps
fsub
mov
pop
sbb
retf
in
mov
mov
mov
cmp
push
mov
les
pop
pop
cmp
inc
cmp
dec
adc
sbb
inc
out
mov
mov
dec
mov
inc
and
adc
shl
inc
lods
(bad)
hlt
pushf
pop
sar
sub
rcr
and
test
fcomp
(bad)
mov
dec
xchg
push
mov
imul
sub
inc
sub
inc
fimul
(bad)
js
xor
stos
pushf
jg
xchg
and
pop
inc
imul
imul
lea
or
add
cmps
daa
sahf
jp
pushf
(bad)
(bad)
pop
mov
nop
and
add
stos
shl
lods
lds
dec
inc
shr
scas
std
rol
mov
jnp
dec
xchg
js
xor
add
mov
hlt
mov
push
push
fs
lea
pop
cli
jnp
iret
loop
lods
and
and
or
and
loop
xor
popf
cmp
mov
sbb
ret
cmc
stos
dec
movs
in
shl
xchg
mov
push
je
inc
mov
sub
or
sbb
cmps
xlat
pop
mov
or
mov
fimul
fisttp
jbe
sub
and
retf
inc
cmp
push
in
sbb
fistp
clc
ins
lods
movs
je
mov
aaa
popf
sbb
leave
out
cmp
pop
stos
das
push
cmp
xor
pop
push
jmp
iret
jnp
outs
jae
in
inc
fsub
and
and
imul
jecxz
pop
aaa
das
jnp
jp
sbb
into
in
(bad)
cmp
inc
ins
pop
loop
stos
dec
add
aam
popa
adc
test
ins
retf
fs
fs
jle
inc
push
mov
push
cmps
push
(bad)
test
jge
xchg
push
mov
ret
xor
push
mov
cmps
dec
shl
jmp
lea
les
retf
(bad)
ror
pop
clc
sti
push
dec
in
mov
out
or
and
add
lds
xor
cmps
int
and
adc
rol
std
imul
or
scas
cmp
shl
fs
pop
xchg
mov
aaa
xchg
fcomp
lds
cwde
sbb
push
fcomi
mov
arpl
leave
inc
dec
dec
mov
and
xchg
inc
cmp
inc
das
xchg
outs
xor
scas
push
ret
add
xor
push
pusha
push
xchg
dec
fsub
mov
stos
stos
add
jo
loopne
cmp
jne
push
in
pushf
pmuludq
mov
loope
sbb
je
and
mov
mov
cmp
scas
lds
push
shr
fild
or
adc
push
jg
cdq
add
int
sub
imul
arpl
adc
dec
jmp
fnstsw
test
pop
xchg
xchg
sub
adc
mov
pop
(bad)
add
or
add
(bad)
mov
leave
mov
pop
dec
push
mov
out
mov
ja
push
call
inc
xor
inc
cmp
(bad)
push
lea
js
les
out
rcr
outs
dec
mov
sub
aam
rcr
mov
out
add
add
sahf
mov
inc
dec
ss
pushf
addr16
fistp
retf
sbb
hlt
mov
fs
pushf
add
sbb
sbb
into
ja
push
pop
jl
jle
mov
adc
cmc
sbb
bound
xor
mul
test
add
pop
sub
jb
fcom
xchg
movs
mov
in
dec
imul
push
retf
push
pop
push
arpl
xor
dec
fimul
rcr
das
push
dec
call
sub
cmp
mov
in
mov
push
mov
js
mov
in
loopne
fidivr
clc
out
inc
xor
aas
out
call
or
sbb
add
inc
and
or
leave
data16
dec
add
jns
enter
and
imul
xchg
or
ds
adc
(bad)
cld
aad
push
ins
mov
cmc
std
mov
sbb
and
jo
repnz
dec
in
and
ins
mov
cmp
mov
aas
cmps
jbe
fdivr
jge
shl
sbb
jg
inc
shl
ja
int3
shl
pop
stc
imul
pushf
xchg
push
fld
pop
cmc
push
mov
dec
pop
int
test
xchg
lods
int
jno
xchg
adc
add
cmp
in
cmp
sub
xor
pop
xor
out
mov
sub
xor
xor
mov
push
jnp
dec
imul
jl
jbe
rol
cwde
inc
xchg
sbb
cmp
shl
mov
add
out
imul
sub
jmp
es
or
mov
sub
xlat
ss
retf
ins
iret
popa
icebp
std
push
xor
jmp
xchg
popf
adc
repz
push
add
xchg
xchg
shr
je
cmp
adc
imul
adc
imul
mov
jmp
sub
mov
cdq
movs
mov
js
push
mov
cmp
fs
sbb
pop
pop
rcl
int3
jb
add
daa
cmp
fs
push
jbe
pop
in
pushf
test
xchg
mov
movs
jae
stos
add
cmc
call
dec
scas
cmp
dec
lods
xchg
sbb
mov
dec
sub
sub
rol
es
arpl
nop
in
jo
jbe
mov
adc
jge
pop
dec
mov
(bad)
fwait
jnp
add
xchg
and
repnz
das
dec
int
mov
shl
xor
sbb
int3
out
or
pop
inc
mov
add
ds
mov
pop
or
test
or
pusha
xor
xor
mul
lahf
fisub
retf
fwait
adc
lods
out
ret
add
jecxz
in
div
test
retf
sbb
mov
add
(bad)
mov
jecxz
das
mov
movs
mov
jmp
popa
nop
or
scas
push
cmc
loop
push
xchg
dec
or
mov
inc
add
cwde
rol
pop
mov
mov
jge
lea
mov
out
cmps
(bad)
fbld
jge
in
int
push
jmp
push
inc
outs
xor
cli
cli
jno
in
jae
push
shl
mov
out
add
cmps
push
push
jecxz
and
mov
xchg
pop
jge
pop
pop
aaa
dec
(bad)
out
outs
sbb
sbb
pop
add
out
fist
xlat
popf
mov
pop
(bad)
push
(bad)
jmp
add
mov
dec
fidivr
das
or
xchg
pop
cmp
(bad)
retf
adc
push
adc
push
loopne
rcl
call
imul
add
sbb
enter
push
rcl
sub
hlt
lahf
cmp
inc
pop
xchg
test
jmp
sar
pop
je
adc
mov
shl
add
push
inc
shr
imul
mul
xchg
mov
pop
mov
movs
push
xchg
lea
ss
adc
pop
outs
add
test
aas
cli
stos
dec
fst
imul
pop
pop
(bad)
mov
xchg
imul
dec
dec
mov
mov
data16
xchg
icebp
in
dec
and
sbb
fcomp
jmp
inc
fs
mov
inc
enter
inc
adc
pop
sbb
(bad)
rcr
mov
jno
test
popa
adc
daa
retf
in
fidivr
add
mov
(bad)
cmp
fs
aaa
das
outs
(bad)
outs
sar
add
xor
jge
inc
mov
sbb
fs
inc
addr16
adc
jne
xor
mov
loope
add
shl
sub
inc
sub
add
shl
push
sbb
in
push
test
dec
xchg
mov
retf
call
popa
cmp
sbb
cdq
fst
dec
jo
sbb
sbb
mov
xlat
leave
fimul
push
add
nop
movsx
mov
pop
mov
cmp
retf
mov
fcomp
cdq
into
inc
jecxz
cmp
mov
xchg
icebp
mov
icebp
int
sahf
fisubr
mov
mov
leave
dec
loope
pop
cmp
in
(bad)
jo
aas
and
bnd
fnstsw
jb
jmp
iret
daa
lock
mov
xchg
mov
ins
sbb
add
aam
push
dec
sub
lock
ins
div
mov
test
push
xchg
imul
std
sub
call
in
xchg
and
aas
push
shr
sub
sub
sbb
jl
aad
stos
in
push
pusha
xchg
aad
dec
jp
cmps
push
push
xor
xor
les
std
test
retf
aam
xchg
inc
sbb
rcl
sub
mov
mov
jmp
jb
sar
daa
mov
inc
addr16
push
xor
mov
mov
add
std
pop
(bad)
jl
adc
repnz
movs
pusha
cmps
(bad)
out
hlt
in
push
scas
sbb
or
and
sbb
push
dec
(bad)
push
mov
sbb
jg
inc
aas
inc
mov
sti
jmp
(bad)
cs
xor
loopne
mov
jecxz
imul
shl
lahf
icebp
in
sbb
cdq
and
loopne
sahf
fcom
imul
fadd
and
xchg
in
lahf
push
leave
mov
mov
fcomp
loop
ret
push
movs
cmp
jmp
fidiv
sbb
ins
shl
mov
pop
cmps
push
and
scas
(bad)
and
cld
mov
aas
hlt
sahf
mov
adc
pop
daa
and
xor
gs
jns
test
xor
ffreep
xchg
cmp
xor
ret
inc
enter
movs
push
ds
mov
push
or
js
and
stos
xchg
(bad)
pop
inc
into
dec
add
xor
loop
je
es
in
add
je
out
sbb
and
jbe
leave
add
repnz
pop
cmps
pop
mov
inc
fistp
cmc
jmp
lods
int3
inc
push
add
cld
ds
fadd
sbb
xchg
dec
sub
and
mov
cld
stc
adc
xchg
dec
xor
sub
rcl
cmps
jnp
sahf
jg
mul
mov
hlt
cmp
arpl
push
enter
fild
add
pop
dec
cmp
(bad)
outs
es
daa
daa
add
stos
sub
aas
sbb
inc
push
sbb
aad
not
pop
fisubr
jne
(bad)
push
test
leave
outs
jecxz
sbb
ja
bound
iret
sbb
mov
add
mov
cli
add
and
out
scas
mov
cdq
and
inc
pusha
push
xchg
fcmovb
cmp
or
sbb
imul
sbb
inc
cmp
bnd
and
imul
outs
sub
enter
sub
jb
dec
pop
in
jnp
adc
mov
jmp
mov
test
inc
js
mov
xor
mov
cmp
out
stc
stos
inc
stos
call
add
inc
xor
(bad)
fwait
sbb
inc
ret
jno
add
jge
aam
sub
push
(bad)
js
test
cmc
stos
xchg
push
shl
fcmovnbe
mov
imul
(bad)
mov
fisub
xlat
xchg
pop
xchg
(bad)
mov
jmp
adc
ins
test
(bad)
jo
ds
jno
adc
mov
sbb
(bad)
in
daa
xchg
fadd
inc
cdq
bound
mov
pushf
sahf
ss
mov
mov
adc
push
stos
xlat
cli
adc
mov
inc
mov
out
xor
mov
xchg
push
shl
adc
dec
pop
cwde
sbb
push
daa
jbe
mov
or
cmp
jmp
addr16
in
neg
add
stos
jns
repnz
mov
jg
out
imul
jmp
pop
aad
sub
sub
or
retf
sbb
dec
add
jnp
xchg
(bad)
mov
push
xchg
nop
nop
ja
(bad)
xor
inc
stc
call
test
call
ins
jecxz
clc
mov
outs
loop
and
aas
push
dec
push
xchg
or
pop
cmps
inc
(bad)
xchg
sub
adc
mov
push
stos
mov
mov
cli
jns
jecxz
push
iret
lock
jp
sbb
call
ins
loop
sbb
(bad)
enter
movs
push
retf
dec
sbb
push
cmp
sar
mov
fs
xchg
cmp
in
mov
xchg
mov
sahf
mov
and
popf
sub
sub
popf
stc
sar
je
mov
outs
adc
lock
js
dec
sbb
xchg
cdq
test
leave
retf
jno
sar
pop
mov
inc
fldcw
pop
xor
push
pop
dec
rcr
dec
pop
int
sbb
pop
jb
outs
jmp
mov
mov
jle
mov
test
pop
add
and
out
dec
outs
fcomip
dec
mov
gs
out
retf
push
adc
xchg
cs
(bad)
jecxz
sbb
add
adc
push
addr16
gs
and
(bad)
xor
loopne
es
push
ins
jne
cmp
adc
push
inc
fs
pusha
cmps
lahf
test
neg
or
gs
cmp
sub
fdiv
rcr
jbe
dec
pop
dec
mov
mov
div
push
div
sub
ret
xchg
fnstsw
ss
fisub
add
cmp
lahf
push
mov
mov
adc
cli
jb
arpl
mov
inc
pop
adc
ins
push
mov
pop
jnp
lods
or
jmp
mov
dec
fwait
aad
mov
pop
sbb
movs
xchg
mov
adc
xor
push
or
sbb
xchg
loope
push
push
mov
pusha
jnp
sahf
cmc
dec
mov
outs
push
mov
loop
xchg
lods
lea
pop
into
fcom
fcomi
jmp
call
mov
mov
nop
dec
adc
add
jae
aas
xlat
loop
xchg
adc
pop
dec
test
xchg
mov
in
pop
and
cdq
pop
fld
bound
or
mov
(bad)
or
cmp
inc
lods
inc
mov
adc
mov
into
cmp
jns
dec
aaa
sbb
rol
add
fld
push
dec
(bad)
push
mov
sbb
lahf
repnz
call
pop
push
dec
sbb
pop
dec
cmp
dec
and
into
fadd
xlat
mov
cwde
cmps
stc
xor
out
jae
in
addr16
add
cld
push
outs
cwde
sub
movs
lock
imul
mov
inc
dec
jge
icebp
idiv
push
inc
out
sub
jbe
scas
ror
mov
jno
sti
push
mov
mov
outs
daa
mov
shl
cmp
in
cli
ins
mov
mov
rol
dec
sub
rol
sub
sbb
nop
loope
pop
add
stc
adc
dec
mov
les
jp
rol
stos
ins
or
sbb
in
xchg
or
ror
lea
(bad)
in
retf
nop
sub
sbb
mov
mov
jno
and
push
stos
dec
mov
icebp
sahf
mov
lds
aas
xchg
es
mov
mov
test
stc
repnz
retf
pop
inc
in
repz
movs
leave
jecxz
das
and
(bad)
push
ss
push
dec
dec
fiadd
sub
xchg
jmp
and
mov
dec
jbe
cmp
push
inc
sti
xor
(bad)
fwait
sub
shl
cwde
ror
enter
push
ins
fnstenv
mov
ins
ins
(bad)
sahf
sub
lods
repnz
neg
retf
jo
or
je
add
jecxz
mul
out
subps
inc
arpl
sub
inc
dec
dec
add
add
loop
adc
ror
sbb
xor
leave
shr
dec
arpl
add
pop
rcl
sar
loopne
leave
(bad)
sbb
mov
dec
push
jge
lds
ins
cmc
retf
xor
sub
mov
loopne
movs
and
pop
inc
mov
imul
shl
push
nop
pop
jnp
(bad)
dec
enter
shl
pop
test
sub
mov
shl
jbe
fsub
neg
jns
pop
sbb
or
or
pop
hlt
mov
rol
sahf
sqrtps
jbe
je
mov
mov
xchg
fwait
fwait
sub
mov
test
jecxz
shr
and
pusha
outs
popa
or
cmps
cmp
dec
push
mov
push
sub
pop
xor
aad
add
ins
pop
out
ror
shr
jle
mov
xor
popa
inc
or
fwait
adc
movs
neg
push
fxch
pop
sar
xchg
jnp
and
add
mov
push
mov
ror
push
sub
adc
push
enter
xchg
data16
or
mov
cli
add
and
jecxz
dec
int3
leave
mov
mov
push
rol
bound
mov
and
(bad)
cwde
cmp
scas
xchg
cmps
imul
mov
mov
inc
xchg
mov
add
pop
hlt
mov
mov
xchg
dec
adc
adc
and
dec
push
mov
cmp
sbb
xchg
and
or
pop
push
pop
jle
(bad)
cmp
xor
shl
xor
jnp
jbe
inc
jmp
push
xchg
mov
and
inc
and
mov
and
aam
inc
js
inc
js
leave
(bad)
jnp
push
retf
cmp
inc
and
cdq
inc
dec
cmps
aam
daa
mov
shr
push
sub
out
call
fwait
cmp
pop
inc
movs
push
adc
into
rsm
nop
and
icebp
jns
mov
pshufb
sti
jnp
fbld
popf
ds
mov
mov
dec
fs
das
sub
jnp
cmp
cmp
jb
mov
fstp
pop
in
aaa
add
cdq
lahf
addr16
add
icebp
lds
js
dec
imul
xchg
data16
xchg
sbb
loopne
pusha
neg
pusha
or
shr
add
mov
push
pop
nop
or
xor
jecxz
ins
stos
jp
mov
sub
cmp
int
push
mov
retf
sbb
pop
mov
or
out
xor
adc
fsub
inc
cs
movs
cs
jnp
inc
in
dec
or
xchg
cmp
movs
je
or
int3
gs
mov
in
bsr
pop
inc
retf
push
cwde
(bad)
mov
cmps
jl
int
(bad)
cmp
sbb
test
(bad)
cmp
aas
xlat
rol
mov
arpl
xchg
xchg
or
pop
inc
and
sub
es
push
into
pop
mov
jne
sbb
mov
mov
imul
pusha
or
jno
adc
push
(bad)
in
mov
dec
(bad)
enter
test
pop
push
cmp
es
retf
fsubr
fmul
ins
cmp
(bad)
ficomp
add
out
xor
test
add
inc
adc
aas
sti
add
push
add
lahf
mov
fadd
push
adc
mov
les
or
sbb
ja
call
push
mov
mov
movs
cmp
scas
lahf
stos
inc
jmp
iret
sbb
sbb
jg
pop
push
(bad)
inc
retf
or
add
icebp
ins
dec
lock
iret
jecxz
rcl
jno
out
jnp
iret
addr16
xchg
call
mov
(bad)
jecxz
in
fisub
daa
lods
scas
in
movs
mov
xchg
jmp
mov
fsub
mov
adc
int
pop
retf
shr
js
dec
cli
test
fcmovnbe
sub
add
push
sti
pop
shr
push
mov
sar
das
jmp
repz
pop
rol
adc
fs
and
jmp
xchg
fbstp
mov
adc
sbb
xor
mov
call
sahf
xor
mov
mov
xchg
retf
adc
mov
fild
dec
jle
leave
push
mov
in
sub
sbb
lock
imul
xor
xchg
sbb
inc
mul
adc
jb
mov
rol
hlt
jmp
test
clc
neg
aad
out
inc
mov
call
push
dec
int3
fs
dec
xor
mov
push
mov
call
push
xchg
loop
xor
jle
movs
loopne
ds
push
lds
(bad)
movs
and
pop
jns
mov
mov
inc
pmaddwd
pop
cmps
push
mov
(bad)
inc
or
push
adc
scas
stc
inc
sub
jle
mov
test
pusha
jnp
dec
shl
(bad)
xchg
mov
fnsave
nop
push
dec
cmp
push
dec
rol
test
or
inc
mov
rol
inc
cld
inc
sub
push
data16
imul
xor
xor
cmp
mov
xchg
pop
push
cmp
inc
out
xchg
adc
in
adc
daa
mov
call
push
into
fsubr
jo
test
cmp
jecxz
daa
jge
(bad)
sub
ins
jnp
or
imul
adc
inc
repnz
jo
pusha
jecxz
cld
sbb
xchg
aaa
pop
xchg
adc
adc
imul
ja
repz
xor
fwait
mov
sub
scas
test
ficomp
xchg
cmp
out
jg
push
call
(bad)
inc
xchg
(bad)
icebp
and
loopne
mov
xchg
cld
add
dec
sbb
jg
daa
popf
mov
mov
fnstcw
mov
mov
jo
pop
sbb
addr16
repnz
sub
pop
adc
mov
jge
push
lods
add
mov
push
sub
xchg
xchg
and
nop
cmp
mov
sbb
jne
shl
mov
xchg
sar
cli
inc
scas
imul
push
loopne
sub
ins
icebp
fiadd
jae
add
aam
inc
pushf
maxps
add
xchg
pmuludq
sub
jb
push
dec
mov
int
jae
cdq
mov
xchg
cmps
mov
jae
adc
movsx
sub
ss
xor
xchg
imul
fidiv
sub
jnp
xor
or
mov
mov
shl
inc
mov
jns
or
neg
sar
push
dec
inc
cli
cmp
xor
sahf
mov
cdq
add
pop
ins
fistp
enter
push
sub
add
cmp
mov
fcmovbe
pop
cmc
sub
shr
push
inc
pop
in
in
iret
inc
enter
(bad)
fstp
call
fist
sahf
fsubr
add
and
xor
dec
adc
pop
push
addr16
aam
xchg
cwde
jecxz
push
mov
inc
cmp
retf
test
movs
jo
(bad)
fwait
jnp
and
or
cmp
in
sub
call
clc
and
dec
xor
cmp
push
xor
lea
inc
gs
in
ret
mov
add
sti
aad
test
xlat
dec
lock
hlt
test
mov
lock
ins
jbe
jae
add
cmp
add
sub
fsubr
jecxz
mov
inc
xchg
retf
nop
inc
add
sbb
out
add
fcomi
call
sbb
mov
leave
sbb
jne
test
leave
add
inc
push
movs
mov
push
push
xchg
ss
mov
into
aas
lods
push
in
push
mov
or
xchg
int3
movs
xchg
dec
cld
cmp
xchg
dec
jecxz
cmp
cmps
inc
jae
pop
and
cmc
adc
sbb
sbb
or
jo
hlt
add
int
inc
sub
xchg
push
or
iret
pop
push
mov
push
imul
jmp
jg
les
into
arpl
jo
inc
(bad)
pop
jecxz
rcl
dec
(bad)
cdq
mov
mov
mov
sbb
nop
inc
add
jecxz
lods
aaa
pop
sub
xor
add
mov
shr
add
mov
jb
(bad)
cmc
cmp
dec
inc
mov
adc
push
sub
dec
scas
pusha
mov
push
and
sub
push
inc
pop
test
(bad)
daa
(bad)
jp
cmp
or
push
inc
aad
cwde
popa
mov
dec
sbb
mov
imul
mov
inc
inc
fs
sahf
jb
adc
out
call
xchg
sbb
xchg
ins
je
ins
push
(bad)
or
jns
add
cmp
cwde
imul
ret
je
cld
ret
add
(bad)
stc
cmc
cld
ror
dec
mov
cs
pusha
in
movs
scas
inc
cmc
aas
mov
psrlq
cmp
dec
aas
sbb
sub
lods
int3
push
sub
mov
or
fld
xchg
imul
in
cdq
nop
sub
cmp
call
pop
test
std
cmp
jo
loopne
call
out
mov
add
push
inc
push
dec
ror
xchg
cmp
mov
outs
inc
(bad)
cmp
scas
jg
push
or
jecxz
in
clc
ds
mov
adc
je
mov
(bad)
ds
xor
xchg
sbb
adc
imul
jecxz
daa
test
leave
mov
imul
ret
(bad)
stc
rcr
test
outs
aaa
ss
add
xor
sub
(bad)
or
in
loopne
lahf
push
stc
inc
loope
jns
mov
repz
in
xchg
cmp
push
push
push
push
pushf
sahf
cmp
imul
and
out
pop
and
adc
xor
fcom
les
mov
adc
shr
mov
xor
add
mov
push
loopne
and
push
adc
or
inc
jno
mov
call
push
lods
push
xor
push
and
cdq
and
les
sub
bound
mov
pop
outs
hlt
pop
mov
xchg
fimul
push
pminsw
in
jecxz
mov
into
aam
lods
and
jbe
outs
or
loop
retf
sbb
mov
sub
inc
pop
hlt
pushf
or
test
js
js
cmp
sub
mov
jo
repnz
int
jb
add
sbb
icebp
scas
mov
sub
or
es
shl
repnz
mov
add
mov
inc
mov
dec
sub
mov
sub
inc
repz
or
jge
ror
inc
dec
fild
or
shr
cs
sub
into
jno
fistp
lock
mov
cmps
dec
add
and
push
fcmovnu
inc
dec
not
or
and
push
pusha
ins
xchg
mov
and
sahf
lods
into
push
retf
call
fnstcw
xchg
xchg
loopne
mov
xlat
fisubr
inc
mov
lods
leave
lods
or
xor
inc
clc
leave
and
push
movntps
aaa
xchg
mov
shr
jmp
adc
and
add
pushf
adc
xchg
mov
and
inc
mov
in
scas
nop
xor
xchg
jae
arpl
sbb
push
pushf
jae
sub
imul
dec
arpl
and
xchg
dec
loopne
fidiv
xchg
add
fldlg2
dec
or
push
or
cmp
xchg
xor
fidivr
cmp
in
aam
call
cmps
repnz
push
(bad)
jecxz
shr
dec
movs
inc
xchg
and
and
push
mov
js
xchg
inc
aas
push
mov
jmp
mov
mov
ins
shl
cwde
fsub
cmc
jge
mov
cmps
in
push
sbb
and
aam
push
pop
cli
cmp
inc
bound
ret
jae
jb
(bad)
aam
or
dec
ret
mov
rcr
sbb
icebp
dec
mov
push
sub
mov
xor
cmovle
push
lods
mov
dec
sbb
inc
sub
inc
mov
out
jno
mov
imul
mov
mov
mov
pop
(bad)
xchg
out
mov
cmps
ss
push
jg
cdq
mov
sbb
inc
out
(bad)
iret
xor
or
pop
ja
push
sub
mov
stos
sub
xor
out
shl
mov
pop
push
mov
ins
sbb
test
and
aam
pop
sub
inc
cmp
and
inc
iret
inc
adc
push
ins
mov
xlat
add
jns
movs
sbb
cmp
(bad)
(bad)
cwde
mul
cmps
ss
stos
popf
fcomp
mov
xchg
sub
ds
sub
sbb
out
aas
jp
nop
mov
js
addr16
fild
or
xor
scas
unpcklps
mov
sar
cmp
xchg
ins
jo
addr16
test
shl
jo
pop
ror
(bad)
lods
push
test
inc
mov
or
int
and
into
jp
rcr
push
and
retf
les
mov
aas
test
popf
aas
or
add
iret
sub
in
push
sub
nop
pop
inc
jae
fucomi
and
mov
loop
xchg
adc
xchg
int
mov
gs
fistp
into
jns
std
inc
movs
cmp
pop
outs
jbe
add
out
mov
xchg
out
push
jnp
add
pop
dec
(bad)
fist
sbb
lahf
outs
mov
test
xchg
js
(bad)
fs
jl
movs
(bad)
ror
js
jnp
jae
test
cmps
push
int3
ret
push
scas
and
push
adc
cmp
add
std
jmp
fnsave
(bad)
push
mov
aad
jle
dec
mov
out
sbb
ins
or
jge
iret
mov
mov
xchg
push
in
int3
aad
cs
or
enter
outs
mov
xor
xor
mov
es
mov
repnz
shl
(bad)
xchg
lods
fimul
xchg
jbe
mov
xor
lods
icebp
les
imul
xchg
mov
mov
call
jo
or
push
loope
aas
pop
mov
popa
int
inc
int3
cmc
push
in
push
inc
mov
mov
pop
jno
enter
mov
repz
xchg
test
mov
mov
jne
call
or
dec
rcl
test
shr
push
mov
inc
imul
jae
xor
hlt
jbe
add
sahf
aad
xor
and
lds
jecxz
pop
xor
in
cmc
adc
fwait
pop
popa
das
xchg
(bad)
ffreep
icebp
int
fcom
enter
lods
mov
add
push
sti
(bad)
mov
in
sub
pop
mov
cs
fiadd
mov
aam
fdivr
scas
pusha
mov
xor
icebp
popf
mov
sbb
fwait
je
loope
cmp
loop
mov
add
push
sbb
jmp
into
jnp
push
sbb
lea
ss
fidiv
lds
fsubr
add
jb
fs
aam
pop
mov
data16
fist
mov
lods
and
(bad)
fisttp
gs
sbb
xchg
inc
sbb
cmp
sbb
in
(bad)
pop
fcomp
test
or
push
icebp
std
push
dec
fnstenv
add
mov
cdq
mov
add
call
mov
dec
cli
add
push
inc
sub
inc
ins
pusha
jae
add
icebp
out
int
xchg
dec
push
ins
test
xor
xchg
icebp
and
pop
out
add
mov
mov
mov
lock
imul
dec
mov
loope
sub
cmp
shl
mov
call
in
dec
ins
ror
xchg
and
add
cdq
and
pop
mov
pop
fs
cmps
or
push
inc
jae
cmps
ss
sbb
scas
jp
fldenv
aam
sti
push
jp
cmps
in
cmp
cmp
and
add
arpl
push
adc
or
and
or
dec
or
cmp
mov
jge
iret
cmps
and
push
repnz
xor
jg
sbb
loopne
ss
add
movs
xchg
cmp
add
xchg
es
dec
mov
(bad)
fdivr
xchg
and
and
xor
sub
sub
and
test
dec
push
out
ror
(bad)
(bad)
stc
mov
cmps
shl
pop
and
mov
sbb
popa
adc
cmp
imul
xchg
fs
arpl
mov
or
sbb
retf
inc
mov
add
adc
sub
adc
(bad)
pop
lods
push
scas
mov
inc
mov
int
outs
xor
sbb
jnp
fidivr
xchg
sti
push
ins
out
pushf
sbb
(bad)
(bad)
jmp
jo
adc
dec
jne
pop
test
mov
test
and
leave
push
cmps
pop
fs
pop
inc
cmp
push
mov
cs
and
rcr
icebp
bound
(bad)
push
jmp
gs
pop
scas
inc
and
push
push
mov
inc
call
repnz
(bad)
imul
icebp
jmp
imul
inc
cmps
sub
or
inc
jno
cmc
es
shl
pop
add
es
shr
bound
jns
out
jne
loop
inc
mov
adc
mov
inc
(bad)
scas
ja
sar
add
loopne
sbb
fcom
(bad)
aam
mov
mov
mov
cmp
cli
call
fs
xor
repz
(bad)
clc
or
(bad)
and
dec
xchg
cmp
das
push
inc
cmp
aad
cmc
repnz
mov
or
sub
mov
leave
sub
cmp
pop
inc
jbe
mov
inc
mov
adc
fiadd
push
ficom
or
dec
cmp
dec
stos
sbb
xor
stos
and
nop
fistp
mov
iret
and
sub
std
fisttp
std
pop
jbe
sbb
outs
mov
repz
ja
push
mov
in
xchg
add
jl
daa
fisubr
dec
jne
or
shl
xor
push
scas
add
adc
stos
adc
dec
mov
outs
popf
or
jns
pop
aam
mov
xchg
push
cs
jb
clc
out
inc
loope
icebp
adc
scas
fstp
shl
xchg
and
nop
xor
loope
fwait
cmp
cmp
es
xchg
xchg
leave
xchg
test
or
mov
cwde
iret
add
cmp
sbb
addr16
ss
dec
rcl
cmps
inc
xor
scas
outs
or
mov
ret
popa
sbb
dec
jnp
mov
jle
jae
push
xchg
ss
daa
mov
mov
mov
lock
push
stc
mov
xlat
stos
sub
xchg
jbe
pop
push
in
daa
hlt
in
jecxz
cli
sar
sbb
cwde
cmps
pop
sub
pop
fst
sbb
hlt
popf
fstp
xchg
sub
in
xchg
jp
sbb
xor
aam
adc
jb
out
mov
es
pop
sbb
iret
cmp
ret
dec
adc
push
loope
loop
adc
inc
adc
ds
inc
dec
in
loopne
pusha
sahf
mov
adc
sub
mov
idiv
clc
cmps
(bad)
stc
inc
movs
pusha
jecxz
mul
adc
and
mov
push
inc
and
sahf
mov
ins
xchg
fisttp
call
sbb
jmp
inc
jle
sahf
xor
add
out
(bad)
jnp
in
sbb
push
jnp
sub
ret
push
jge
dec
out
add
addr16
stos
xor
dec
and
test
jns
ss
in
icebp
std
into
into
push
adc
xor
(bad)
imul
push
test
fnstenv
leave
sbb
rcr
movs
pop
retf
jg
(bad)
cs
out
and
in
push
dec
push
inc
add
hlt
in
aam
fwait
addr16
cmps
aaa
mov
mov
or
and
xor
fist
add
sar
cmp
ret
pop
fs
icebp
in
je
adc
ret
cld
(bad)
xor
(bad)
add
xor
dec
xor
retf
jno
cmp
cmps
cwde
mov
push
lea
xchg
xlat
add
sbb
xor
sahf
out
outs
jne
dec
lods
inc
jns
xor
xor
add
bound
pop
psubd
cs
sub
loopne
lahf
sbb
or
jo
push
cmp
xor
jb
pop
dec
rcl
or
cmp
ja
xor
out
mov
(bad)
mov
fldenv
push
push
lea
imul
in
mov
movs
jle
sti
sbb
ins
xchg
rcr
cmc
cmp
jecxz
retf
adc
jecxz
fistp
(bad)
aas
adc
cmp
out
and
adc
rcl
ss
in
jle
pop
dec
dec
cld
inc
and
leave
das
sbb
dec
push
bound
mov
mov
stc
pop
aam
cld
cwde
pusha
mov
ret
retf
mov
(bad)
or
inc
sub
xchg
ins
es
retf
fadd
sub
enter
int
sub
lods
aam
out
outs
push
inc
arpl
and
ja
lahf
jmp
xor
ins
outs
ret
mul
jnp
xchg
adc
jno
xchg
mov
jae
jne
xor
retf
icebp
xor
push
dec
jns
aam
sahf
sbb
inc
mov
pushf
icebp
sar
sub
cmp
pop
loop
xor
push
jmp
sub
shl
sahf
cmps
(bad)
add
jle
dec
xor
push
popf
inc
retf
mov
push
sub
mov
push
cdq
jo
xchg
pop
jl
push
or
cmps
inc
mov
push
or
cmc
shr
inc
pop
jmp
push
and
fst
sbb
jno
inc
cmp
jmp
dec
mov
push
test
loope
pop
sbb
into
or
inc
mov
xchg
xor
xchg
add
sbb
stos
(bad)
mov
xor
xchg
add
add
and
push
pushf
cld
shr
and
inc
ret
rol
push
xchg
icebp
dec
pushf
xor
fwait
sbb
add
ror
xchg
mov
jge
sti
push
cs
add
mov
pop
daa
stos
push
(bad)
imul
jb
or
imul
cmp
cmp
pop
xor
ds
pop
adc
iret
jmp
in
sub
add
inc
test
rol
popf
shl
xchg
fisub
out
mov
lods
js
add
mov
add
les
adc
ds
fsubr
jae
add
cmps
fsubr
sub
fiadd
mov
pusha
inc
or
jae
inc
dec
das
xchg
xor
(bad)
push
int3
sbb
loopne
mov
mov
inc
mov
mov
test
push
repnz
or
or
lea
fidiv
(bad)
aas
cwde
cmp
pop
jmp
jnp
lea
mov
das
and
loopne
xchg
pushf
jb
or
jmp
fwait
int
rcr
or
test
pop
xchg
cmp
bound
ja
icebp
(bad)
mov
mov
push
xor
test
pop
out
sub
xchg
sub
add
mov
xchg
push
fcomip
or
repnz
ficomp
dec
and
xor
add
and
int
cs
or
(bad)
fild
out
push
jne
in
add
(bad)
cmp
int3
arpl
or
inc
cmp
inc
xchg
cs
pop
mov
pop
pop
clc
jb
push
or
xchg
ins
loopne
xchg
jmp
mov
jecxz
mov
pop
leave
(bad)
call
inc
mov
sbb
and
imul
push
push
jb
mov
into
movs
and
dec
ins
xchg
cmp
movs
cmp
call
enter
int
add
mov
or
jb
cmp
xchg
rcl
push
fwait
in
in
in
shr
movs
jo
inc
fmul
cmp
mov
jle
mov
cmc
mov
pop
lock
cmp
imul
mul
push
(bad)
das
inc
ja
pop
scas
cwde
test
and
or
ss
inc
cmp
mov
xchg
fstp
test
ret
lss
mov
mov
add
mov
xchg
xchg
pop
push
xchg
rcl
inc
cs
inc
mov
or
daa
(bad)
and
cld
lods
jbe
inc
mov
out
stc
push
js
push
sub
adc
outs
push
jnp
fwait
movs
adc
test
aad
xor
inc
movs
into
jbe
mov
add
mov
mov
das
or
xor
arpl
out
cmp
cmp
jno
cmps
icebp
bound
sub
xor
jae
dec
out
ins
mov
aad
cmp
push
xor
mov
dec
leave
es
push
inc
js
in
mov
shl
sbb
mov
sti
sub
jmp
and
or
fidiv
xchg
push
test
dec
mov
cmp
sbb
in
mov
aaa
add
mov
add
adc
loopne
(bad)
mov
mov
mov
and
cli
push
add
sbb
xchg
mov
aaa
pop
or
inc
sti
adc
repz
iret
psrld
adc
retf
push
xchg
div
sahf
dec
push
fnstsw
test
fs
push
sar
not
sbb
enter
rol
xchg
sbb
call
lods
imul
std
mov
pop
inc
out
rol
jge
es
cmps
jb
inc
add
addr16
adc
jmp
and
dec
popf
retf
mov
add
leave
out
mul
add
hlt
cdq
push
out
loopne
loop
add
sbb
push
xchg
dec
das
data16
xchg
imul
mov
fs
movzx
std
cmp
inc
aam
lods
fidiv
iret
enter
add
xchg
out
dec
popf
retf
(bad)
shl
or
xchg
sahf
imul
jl
test
js
push
shl
mov
jb
(bad)
add
daa
sbb
mov
(bad)
mov
call
dec
cmp
shl
jmp
push
shr
cmp
leave
cmc
out
(bad)
cmp
push
and
mov
mov
pop
stos
sbb
mov
mov
sub
inc
ret
push
add
pop
fsub
push
jae
cmc
hlt
pop
ficom
lds
mov
pop
test
fdiv
fs
js
jl
or
data16
fs
dec
xor
dec
bound
dec
pop
inc
in
iret
sbb
jmp
fldenv
xchg
enter
jmp
jns
arpl
dec
push
ffree
in
push
xchg
sbb
ds
cld
aas
outs
js
and
and
or
fild
dec
cld
push
dec
in
leave
pop
xchg
mov
mov
shr
fisub
xor
pop
sub
adc
bound
pop
sbb
out
(bad)
xchg
jns
aad
xor
mov
cli
push
les
pusha
in
mov
inc
xor
imul
repz
mov
cmps
jmp
jmp
pop
cmp
inc
das
mov
xor
cmp
dec
and
mov
aaa
mov
mov
jb
sbb
(bad)
cmp
lock
retf
jo
in
lods
inc
sub
jae
and
add
(bad)
or
fnstsw
ret
data16
pusha
mov
fcomp
gs
or
sbb
(bad)
aad
jns
pop
or
or
(bad)
pushf
data16
jl
retf
mov
loope
je
sub
test
cs
shr
outs
or
dec
movs
mov
test
jge
mov
xchg
loopne
mov
leave
loopne
cmp
dec
xchg
add
sbb
shl
imul
iret
fdivr
add
(bad)
push
cmp
cmp
jb
push
sbb
jecxz
repz
push
jg
inc
jle
inc
pop
push
pushf
push
aam
inc
lods
shl
inc
(bad)
daa
mov
add
cmp
sbb
add
jns
cs
inc
and
lahf
jp
and
cmp
sahf
sub
retf
cs
aam
sbb
movs
sub
leave
iret
pop
arpl
mov
retf
addr16
push
jne
pop
inc
mov
pop
aam
mov
mov
sub
scas
xor
xchg
xchg
cdq
inc
imul
aam
xor
ror
sbb
call
sbb
imul
je
cs
mov
xchg
pusha
and
add
sbb
in
push
shl
popa
mov
jns
xor
imul
dec
popa
and
push
inc
xor
jmp
and
add
ins
and
or
push
cmc
push
push
cmp
pusha
(bad)
jb
(bad)
jb
leave
lods
fwait
dec
pushf
jae
arpl
das
inc
test
adc
mov
xchg
add
cmc
shl
sahf
sub
rcl
rol
cmc
sbb
adc
cmps
daa
repz
scas
sbb
jecxz
out
pop
repnz
shl
repnz
cmp
aam
or
xchg
(bad)
cmp
pop
out
jecxz
xor
(bad)
imul
movs
out
jno
mov
pop
and
int
dec
lea
mov
nop
mov
sbb
and
lods
xor
xor
mov
sub
pop
fs
and
add
enter
or
inc
mov
push
or
pop
inc
mov
aaa
dec
inc
push
mov
sbb
and
mov
jno
daa
dec
test
or
gs
mov
inc
cli
xchg
daa
jo
iret
loop
dec
(bad)
outs
fwait
xchg
pop
fbstp
icebp
and
and
adc
add
jmp
(bad)
dec
sar
push
mov
inc
or
add
pop
retf
pop
cdq
mov
and
aas
push
cmc
jl
stc
lds
ss
dec
sub
push
sbb
and
repz
push
out
fsub
cmp
retf
repnz
inc
and
inc
push
pusha
pusha
xor
pop
jp
mov
jp
push
ss
in
and
mov
pop
add
jmp
mov
or
mov
and
rol
iret
mov
xor
mov
xchg
js
mov
sub
xchg
or
dec
inc
jnp
stos
pop
and
push
xor
std
imul
enter
dec
rol
cmp
mov
pop
call
in
jmp
mov
xchg
push
pop
test
pop
cld
pop
cmp
push
dec
into
xlat
or
add
lods
fidiv
mov
in
cmp
and
fnsave
cmps
xchg
rcl
sbb
xchg
xchg
dec
sub
aas
sahf
sbb
jno
lea
pop
xor
dec
mov
inc
mov
cli
and
xor
nop
stc
jmp
or
cli
push
call
pushf
jae
sbb
dec
mov
and
bound
jge
cmc
(bad)
xor
js
inc
xchg
(bad)
jnp
test
shl
pop
mov
mov
add
lock
sbb
xchg
dec
or
outs
int
pop
inc
in
add
enter
push
dec
std
mov
les
add
psllq
(bad)
in
pop
ds
jg
mov
or
jp
pop
das
add
cmp
cmova
pop
es
sub
les
xchg
or
enter
push
aam
dec
ror
mov
cmc
mov
loopne
clc
fmul
and
aam
mov
pusha
(bad)
xor
inc
out
inc
sub
cmp
loopne
(bad)
jg
(bad)
pushf
push
das
mov
mov
dec
mov
push
ins
cmp
ss
add
mov
and
add
add
out
mov
cld
inc
or
sbb
mov
cmp
lds
sub
stc
mov
icebp
pop
mov
sub
in
cmp
mov
movs
addr16
rcl
fidiv
dec
cwde
out
mov
mov
jmp
out
cmp
lea
shl
pushf
jl
inc
test
(bad)
cmp
and
pop
xor
scas
int
aad
mov
mov
inc
mov
inc
into
imul
addr16
sub
bnd
pop
int
or
and
aaa
add
adc
into
inc
jmp
lds
jg
xor
cmps
xchg
lock
inc
pop
sbb
and
jns
fld
scas
outs
fdivr
into
das
jb
jb
or
and
mov
jb
and
pop
xor
sahf
sub
fwait
cmp
mov
push
lock
inc
mov
mov
les
pusha
fild
and
aas
push
inc
ins
dec
es
jo
call
fld
dec
cmp
lahf
push
daa
cmc
jnp
call
pop
add
ficomp
inc
xchg
outs
inc
ror
jl
mov
mov
cmp
mov
jmp
ins
repnz
and
pop
dec
inc
adc
cmp
mov
jne
pminsw
mov
jb
sub
test
jae
sub
sbb
icebp
rcr
sar
mov
dec
enter
sbb
mov
and
aam
cwde
fwait
xchg
in
adc
inc
xlat
xchg
xchg
aad
fidivr
int3
xchg
int
adc
ja
je
jp
int
enter
mov
add
xor
into
cmp
dec
xor
xchg
add
cmp
(bad)
int3
test
sbb
test
pop
and
rcl
imul
push
push
aas
cmp
inc
and
sub
sub
bound
sar
inc
loopne
pop
sbb
clc
and
inc
ror
or
sbb
(bad)
pop
test
and
mov
sar
xor
pop
push
push
fistp
jp
add
adc
push
jecxz
xor
pop
cmp
sub
cmp
(bad)
jge
loope
or
xlat
or
in
inc
push
(bad)
pop
repz
push
add
fmul
mov
mov
mov
aaa
cmps
sbb
sub
pop
(bad)
hlt
jmp
xchg
(bad)
and
add
call
cmp
push
pop
add
call
test
jmp
mov
movs
xor
cmps
xor
add
js
imul
or
jno
cmp
or
mov
stc
sub
mov
mov
and
sahf
push
push
enter
fldcw
rol
pop
mov
xor
pushf
test
test
(bad)
xchg
das
sahf
or
pop
lods
mov
cmps
clc
mov
out
jp
inc
(bad)
enter
(bad)
jg
cmps
mul
pop
jmp
cmp
ins
pop
jmp
test
inc
and
dec
in
pop
and
ret
(bad)
push
stos
ror
ss
mov
jecxz
imul
pop
fild
jae
sahf
sub
push
mov
out
adc
pop
arpl
mov
cmp
les
jg
jno
jo
arpl
pop
fisttp
jg
sbb
mov
loopne
out
pop
into
push
push
jo
iret
push
rcl
inc
dec
pop
ret
imul
and
inc
jmp
dec
sbb
xchg
into
jnp
out
daa
push
mov
xchg
inc
movs
loop
fisttp
add
push
pop
add
and
jnp
and
pushf
push
push
or
int
clc
pop
icebp
mov
sbb
ror
nop
nop
arpl
pop
push
sbb
inc
jmp
xlat
cmp
fist
sbb
leave
push
test
movs
push
dec
mov
jns
push
out
and
ror
shr
cdq
push
fstp
cmc
iret
add
inc
or
adc
or
imul
jae
mov
and
outs
cmp
shl
xchg
adc
ror
pop
ret
sub
jae
les
or
cwde
enter
inc
push
outs
or
shr
mov
movs
shl
mov
or
adc
ja
add
jno
(bad)
jle
pusha
sar
int
dec
mov
shl
or
and
(bad)
ss
sti
call
sahf
inc
cmc
jns
mov
shl
inc
mov
lahf
clc
mov
mov
pusha
jo
jecxz
shl
or
xchg
xor
jmp
xor
lods
mov
les
in
por
jg
pop
in
rcl
leave
adc
lods
push
in
jg
ret
rcr
mov
rcr
sar
mov
nop
mov
xchg
inc
pop
mov
int
push
nop
fcmovnb
in
or
sub
push
outs
jbe
jno
push
xchg
imul
mov
mov
fcomp
push
add
fcomp
cmps
cli
pop
retf
and
dec
jb
test
lods
nop
fs
add
sahf
cmps
lods
or
or
movs
(bad)
lock
add
push
xor
test
test
pusha
inc
test
aam
mov
jecxz
stc
cmp
inc
pop
sahf
mov
and
bound
in
(bad)
jp
mov
push
mov
inc
jmp
lahf
add
out
push
(bad)
adc
cdq
or
inc
mov
ror
out
lea
sub
add
and
leave
mov
fdiv
xchg
pop
popa
xchg
jns
mov
mov
in
inc
xchg
mov
dec
cmps
jmp
dec
dec
jg
jne
add
sete
push
mov
mul
pop
cdq
xor
gs
punpckhdq
ja
mov
pop
xchg
fsubp
dec
mov
scas
inc
inc
out
not
sbb
in
dec
pop
xchg
jbe
fs
cmp
adc
sahf
inc
(bad)
cmp
inc
push
mov
gs
das
mov
out
cmp
push
(bad)
dec
jmp
xchg
fisttp
add
cmc
or
iret
jo
mov
stc
jmp
or
loop
imul
(bad)
jne
jne
mov
mov
ror
mov
sbb
loopne
push
icebp
pop
(bad)
jbe
push
rcr
fmulp
(bad)
inc
push
mov
xlat
adc
add
sbb
into
jb
cld
mov
xchg
bound
sbb
inc
mov
jbe
mov
and
inc
loop
mul
repnz
cmp
mov
movs
popf
dec
jnp
fsubp
pop
dec
cmp
adc
mov
mov
xchg
in
popf
dec
push
cmp
sub
gs
mov
mov
test
sbb
pop
jle
scas
mov
std
dec
ins
iret
mov
and
dec
sub
xchg
and
cmp
pop
in
(bad)
inc
mov
std
sahf
fmul
cli
in
in
jb
dec
jae
iret
adc
sbb
stos
xchg
fidivr
push
into
jge
jmp
lods
imul
pop
push
jg
int
or
outs
xchg
mov
jae
sbb
adc
stos
sbb
add
or
or
push
adc
inc
sar
addr16
in
popf
mov
xchg
mov
sbb
movs
fs
iret
cmp
inc
cmc
sub
setp
mov
ret
sbb
out
jae
sub
rcr
add
sub
jecxz
data16
loop
add
mov
sbb
mov
or
add
fidiv
dec
(bad)
repz
mov
pop
outs
jae
jg
or
shr
ss
ret
xor
inc
leave
xchg
rcr
inc
pop
pop
mov
jnp
add
loop
xor
int3
jnp
jb
repz
xor
sub
aad
sbb
and
out
sub
jge
repnz
clc
fistp
ins
pop
sub
cmp
jnp
ret
loopne
cmp
cmp
arpl
mov
pusha
mov
xor
dec
js
xchg
sti
mov
dec
bnd
sbb
dec
jge
ret
jp
std
jmp
sbb
ss
adc
lahf
push
pop
sub
pop
stc
std
push
and
fldl2t
and
add
push
in
ss
loope
repz
xchg
into
inc
mov
pop
mov
add
les
jo
ficom
data16
ficomp
in
dec
pop
int3
cmp
sar
(bad)
cmc
stos
and
push
xchg
icebp
ror
adc
(bad)
sbb
mov
add
and
sub
mov
add
in
cmp
adc
sub
mov
push
and
sbb
psubq
loope
cmp
mov
sub
add
iret
pop
add
in
movs
mov
lds
xchg
inc
ret
mov
or
or
xchg
mov
ins
xchg
movs
push
xchg
xor
jnp
push
stos
sbb
mov
dec
(bad)
in
cmp
jb
push
es
ja
mov
adc
shr
dec
rcl
(bad)
jg
out
imul
mov
add
and
stos
mov
imul
outs
mov
add
jbe
lock
dec
stc
retf
mov
fmul
cmp
add
inc
in
out
jecxz
lds
test
and
cld
mov
or
xchg
loope
dec
std
push
xor
xor
or
xor
sbb
pop
test
jmp
out
jl
shl
shl
imul
and
adc
out
jmp
test
push
test
cli
xor
imul
repnz
or
xchg
cmp
cmps
and
or
in
fs
xchg
shl
cmps
mov
out
aam
mov
(bad)
sbb
xor
inc
inc
test
pop
imul
mov
cmps
xchg
mov
iret
pusha
das
cld
jns
jmp
cwde
mov
mov
mov
xchg
mov
outs
retf
loop
jne
adc
adc
push
and
mov
inc
ret
add
adc
imul
mov
daa
shl
sub
gs
inc
add
xlat
mov
jmp
in
aad
aaa
xchg
es
jne
xor
fsubr
and
jle
pop
out
aam
pop
cmp
sahf
fmul
pop
ins
cs
mov
test
adc
js
pop
mov
mov
scas
mov
jne
fnstsw
pop
(bad)
fsubr
sbb
(bad)
jg
cmp
mov
out
cs
scas
fwait
ret
push
and
or
xchg
xchg
jmp
and
jmp
lods
add
pop
aaa
push
ror
es
inc
mov
xor
cmp
pop
into
stos
push
out
(bad)
aaa
jo
inc
dec
(bad)
aad
lods
sbb
mov
outs
pop
in
xchg
jg
mov
jg
and
(bad)
sbb
pop
pop
aam
mov
inc
mov
test
push
xor
push
xlat
push
cmps
shr
jecxz
mov
jle
push
enter
jg
inc
cmp
adc
aam
js
icebp
adc
das
cmps
fcos
add
cdq
add
xchg
nop
xor
fucomi
sbb
sub
inc
jmp
mov
(bad)
out
fs
mov
int
imul
xchg
scas
cmps
pop
inc
mov
cmp
ss
add
shl
inc
test
sahf
add
scas
popf
fisttp
fiadd
pop
and
mov
repz
(bad)
xchg
mov
stos
adc
add
mov
push
movs
(bad)
push
sub
mov
push
fidiv
jnp
dec
outs
sub
imul
push
pop
jmp
inc
push
xchg
add
fdiv
or
xchg
mov
sbb
push
inc
(bad)
mov
inc
test
pop
mov
inc
pop
inc
fidiv
or
(bad)
mov
mov
push
loop
jne
mov
leave
and
inc
movs
push
add
in
ins
xor
retf
mov
popf
fdiv
jne
mov
jmp
int3
cmc
adc
(bad)
push
loop
daa
mov
nop
inc
jae
jnp
scas
adc
cmp
push
pop
addr16
or
lods
mov
ins
cmp
jb
imul
and
dec
loopne
clc
test
jg
neg
pop
icebp
and
sbb
jae
enter
shl
ror
out
cmps
lock
es
fnstcw
sbb
ror
and
(bad)
call
test
jae
movs
in
int3
xor
mov
nop
daa
test
xchg
repz
stos
das
mov
in
cmc
out
bound
imul
xor
pop
xchg
aas
adc
xchg
es
sub
pusha
data16
rol
pop
inc
nop
std
js
or
pop
mov
ror
sub
fwait
push
cmp
shr
fisttp
scas
cmp
push
out
and
repnz
adc
sbb
out
cmp
lahf
icebp
push
dec
lock
(bad)
aam
scas
scas
xor
and
test
retf
(bad)
js
mov
xor
fldcw
ss
mov
pop
add
xchg
inc
sub
lock
pop
fwait
stos
adc
test
and
adc
inc
sbb
xor
pop
and
aaa
sub
ret
jb
repnz
je
fnstenv
fwait
shl
aaa
pop
and
sbb
fnstsw
movs
mov
mov
mov
loope
mov
in
aam
repz
sbb
lods
aaa
sbb
minps
pop
push
(bad)
or
push
push
shl
cmp
ins
ins
leave
mov
ins
repnz
imul
call
sahf
aas
rcr
mov
xchg
and
xchg
sub
or
sub
(bad)
push
jecxz
movs
inc
outs
jae
sbb
test
sti
jg
cld
mov
sub
ins
pop
or
mov
inc
inc
xchg
call
cmps
call
and
mov
add
aam
or
ficom
in
adc
adc
into
fcom
inc
pop
lds
mov
jb
scas
add
dec
or
push
add
jp
mov
jle
sbb
jno
mov
sub
mov
clc
sbb
fcom
fisub
mov
(bad)
vpsrld
cmc
sub
shl
or
mov
out
cmp
hlt
cvtpi2ps
std
ret
push
pushf
jp
mov
out
jle
push
xchg
(bad)
lock
aaa
and
sar
rcl
stos
mov
out
jnp
jmp
xor
jmp
ja
mov
mov
and
shl
xor
xor
push
stc
mov
jns
les
dec
jle
add
inc
stos
hlt
out
cld
loop
aad
ror
xchg
xchg
jmp
test
xchg
fnsave
test
fidiv
dec
scas
cmps
ror
rcl
sbb
jns
call
cwde
and
inc
jne
sbb
pusha
xor
xchg
mov
int3
test
nop
cmp
ficom
lds
xor
sti
cmp
cmps
loop
cmps
in
sub
mov
cmp
jmp
dec
in
jb
(bad)
mov
int
test
mov
aad
jb
adc
leave
(bad)
xchg
or
and
add
hlt
(bad)
mov
push
loopne
cmp
fimul
xor
pop
aas
push
leave
fs
xchg
daa
dec
sbb
stc
adc
xchg
push
sub
je
mov
mov
pop
mov
mov
or
mov
scas
xchg
loop
pop
ret
mov
sahf
out
xor
or
out
mov
push
push
mov
leave
jae
shr
fld
sbb
lahf
add
add
push
mov
and
out
fimul
cli
test
mov
xchg
mov
outs
xor
fs
push
adc
sar
inc
retf
mov
xchg
popa
sub
jb
add
in
ds
fwait
int
in
mov
fwait
xor
jp
push
push
mov
push
push
inc
enter
pop
mov
sub
xchg
dec
arpl
jb
xor
xchg
mov
pop
in
fcmove
dec
or
jle
cmp
pushf
in
dec
dec
aas
pop
cmp
mov
add
push
cmp
mov
test
push
js
stc
push
or
retf
dec
(bad)
dec
push
or
dec
jno
movs
pop
or
popf
sbb
shr
xchg
fwait
call
xor
inc
xor
dec
add
(bad)
adc
clc
pop
push
xchg
pop
jnp
xchg
adc
jecxz
cmp
push
cmp
sar
test
pop
je
cmp
dec
or
retf
and
cmps
or
pushf
pop
es
lahf
out
ja
xchg
or
out
cmp
add
aas
ins
aad
test
add
mov
dec
mov
sub
lahf
or
(bad)
jno
sub
in
or
mov
popa
mov
dec
ficom
cmps
jno
nop
test
jo
cmp
adc
cmps
repnz
jo
cld
mov
rep
mov
(bad)
add
jno
repz
xor
fwait
adc
jae
imul
jl
jns
cmp
adc
outs
shr
xor
sbb
cmp
xchg
sar
and
imul
mov
jae
xor
sub
shl
nop
fisttp
ret
and
mov
(bad)
fisub
(bad)
push
or
sub
bts
call
mov
or
mov
xlat
aas
fdiv
test
sub
and
and
shl
iret
sbb
inc
adc
ror
dec
in
cmp
inc
lds
mov
scas
xor
mov
push
xchg
xchg
aam
frstor
outs
mov
ins
mov
add
or
adc
dec
jbe
clc
sbb
in
ret
or
ret
js
sub
jmp
xchg
cs
mov
out
nop
stc
inc
jp
add
mul
xlat
call
or
sbb
(bad)
repnz
lahf
repnz
sbb
outs
gs
push
xor
inc
add
mov
sub
hlt
arpl
cmps
dec
push
mov
shl
jmp
push
pop
adc
shl
aad
(bad)
leave
add
lock
lahf
out
mov
xchg
es
add
inc
xchg
inc
inc
(bad)
pushf
aad
pop
dec
mov
jge
ficom
xor
jo
ror
stos
mov
xor
mov
shl
aad
hlt
mov
mov
xchg
loop
jns
dec
or
js
(bad)
fstp
mov
fnstenv
xchg
xor
mov
xchg
jge
cmp
push
dec
mov
retf
out
stos
sub
adc
add
jecxz
mov
fbld
add
add
add
or
mov
push
jnp
xor
aaa
test
cmps
add
loopne
push
cmp
add
dec
in
dec
jo
jno
out
xchg
int
sbb
or
or
pusha
add
xor
jp
int
je
movs
mov
xchg
push
lods
jno
push
mov
mov
ins
jecxz
jmp
lock
push
(bad)
ds
mov
mov
cmp
addr16
pushf
sbb
ss
stc
cmp
inc
jns
jne
sub
inc
push
into
jle
and
push
add
mov
outs
adc
stos
mov
mov
fiadd
sti
xchg
push
(bad)
js
or
mov
xor
lods
and
jecxz
push
pushf
es
cmp
fadd
xchg
call
(bad)
dec
scas
inc
cwde
idiv
out
loopne
int3
retf
push
push
xlat
fcmovb
gs
xlat
adc
retf
and
dec
imul
or
xor
cmp
cmp
test
jbe
out
sahf
push
inc
inc
mov
mov
loop
sub
inc
or
cmp
inc
jbe
xchg
jnp
mov
push
xchg
fdivr
inc
jae
jmp
aas
push
lods
dec
or
ins
repz
imul
sbb
fcom
mov
sbb
mov
mov
push
pop
add
or
cmps
or
jno
adc
mov
mov
xchg
cmp
imul
xor
cli
dec
sbb
(bad)
out
mov
ins
pop
pop
stc
jae
js
loopne
inc
sub
push
cmp
lods
or
enter
out
cmp
iret
lds
in
cmps
xchg
(bad)
outs
pusha
xchg
xor
lods
xor
xchg
sti
arpl
out
dec
lock
retf
pop
mov
in
das
mov
mov
ror
sti
jo
sbb
inc
cs
inc
mov
div
stos
xor
mov
lock
pop
popf
mov
mov
repz
sbb
dec
mov
push
and
nop
jae
push
jbe
jge
jecxz
dec
popf
push
inc
mov
(bad)
push
inc
mov
das
ret
jae
stos
cmc
mov
mov
jmp
movs
ins
xor
jecxz
in
push
push
adc
push
or
or
repz
das
arpl
loop
(bad)
adc
repz
rcr
cmp
sbb
jmp
lods
push
mov
cmps
les
adc
int
jecxz
xchg
mov
sub
aaa
call
cmp
(bad)
leave
push
cmp
adc
inc
lahf
xor
and
jp
add
inc
popa
mov
fisub
push
stos
sub
xor
sbb
sub
xlat
out
xlat
out
es
dec
popf
mov
icebp
mov
lods
mov
in
jns
add
mov
xor
ins
std
jmp
ret
inc
iret
add
daa
fist
fbstp
cdq
sbb
xchg
bound
and
mov
fst
sahf
or
aas
scas
sbb
mul
fwait
sub
mov
xchg
test
mov
push
jmp
int
mov
jle
call
rcr
push
mov
dec
sbb
loop
rol
xor
xor
jecxz
xor
pop
cmp
cmps
sub
xlat
gs
jo
mov
js
or
sar
xor
sar
shl
pusha
test
push
pusha
mov
enter
mov
jae
jo
fiadd
aam
ret
xor
mov
push
(bad)
sbb
sbb
fisubr
lahf
enter
in
retf
fmulp
sub
scas
pop
movs
xor
int3
xchg
jnp
imul
push
mov
jne
daa
add
add
(bad)
sub
f2xm1
shl
dec
lock
in
fdiv
(bad)
fist
ins
shl
mov
jg
mov
push
popf
addr16
push
(bad)
adc
lock
adc
lods
jae
sub
push
imul
sub
mov
pusha
or
mov
loop
jg
inc
lods
stc
and
mov
cmp
sub
out
bound
cmps
add
(bad)
xlat
icebp
push
mov
bnd
clc
ss
push
xchg
jno
test
pop
ror
lods
jmp
mov
mov
push
daa
or
add
sbb
push
je
sbb
push
cdq
movs
or
pop
pop
adc
(bad)
cwde
push
or
mov
jmp
dec
mov
push
lods
fs
adc
retf
test
cmp
cmc
ret
or
dec
add
xchg
dec
sub
push
dec
mov
daa
mov
loopne
repnz
cmps
cld
cld
shl
mov
mov
sub
xchg
sub
enter
shl
cdq
fmul
pop
stos
xor
jl
push
es
sub
movs
xlat
xchg
and
add
clc
inc
dec
jecxz
rcr
sub
imul
add
es
mov
jb
test
aam
pop
or
push
call
int3
sbb
je
arpl
ficomp
dec
adc
push
(bad)
rol
ficomp
test
pop
and
repz
sub
aas
stos
sbb
jecxz
fstp
dec
ret
jg
test
cli
stos
je
sub
dec
mov
ss
aam
mov
sbb
(bad)
xlat
dec
imul
std
push
lods
fmul
js
jecxz
and
and
or
es
xchg
push
outs
popa
lock
icebp
(bad)
mov
retf
xchg
mov
push
dec
and
aad
xchg
movs
ror
enter
dec
sbb
inc
int
add
push
idiv
cmp
repz
push
push
je
test
in
test
in
mov
test
in
or
adc
pop
add
lock
push
and
fs
lock
mov
(bad)
imul
test
push
xchg
cmp
movs
fcomp
inc
adc
xchg
outs
(bad)
ins
push
pop
cmps
dec
xchg
push
sbb
scas
jno
mov
xchg
stos
push
dec
cmp
inc
mov
add
mov
jnp
arpl
(bad)
xor
xchg
(bad)
or
dec
pop
and
sbb
iret
pop
dec
xor
aam
push
retf
xchg
and
test
rol
test
xor
inc
bound
adc
sahf
bswap
add
mov
dec
ret
pushf
cs
js
ins
sti
aam
xchg
sbb
sub
mov
mov
clc
inc
ja
add
adc
outs
cdq
xlat
and
dec
(bad)
pop
(bad)
fstp
fisttp
dec
sub
cwde
lods
inc
add
daa
stos
mov
je
or
inc
xchg
push
pop
sub
daa
xchg
aaa
aaa
mov
jmp
adc
inc
ds
add
jmp
add
test
lds
inc
aam
daa
imul
outs
push
pop
movs
pop
pop
out
arpl
test
nop
inc
sbb
mov
sub
push
ror
pop
fcmovnb
pop
imul
iret
rcr
cmp
add
mov
adc
rcr
outs
adc
jne
xor
pop
outs
loopne
lds
inc
add
mov
test
shl
push
daa
test
cmps
shl
sub
js
add
ja
jae
fistp
xchg
mov
pop
outs
xchg
and
shr
sub
xor
jns
fimul
jecxz
outs
outs
ficom
xor
gs
fstp
push
dec
pop
dec
or
pop
and
xchg
jecxz
imul
popf
inc
in
mov
test
add
inc
sub
iret
dec
or
inc
(bad)
mov
push
mov
push
sub
xor
retf
pushf
out
sub
and
mov
loop
pop
pop
inc
popa
out
push
sub
cmc
pop
add
dec
add
(bad)
xor
shl
je
movs
mov
xchg
shl
dec
fcomip
inc
cmp
aad
xchg
movs
enter
in
xchg
ins
and
pop
xor
sbb
add
cld
or
or
adc
sbb
xchg
sub
push
rol
icebp
inc
adc
jge
in
ror
or
or
in
jno
mov
push
dec
dec
sub
fcmovb
les
mov
xor
sub
inc
jb
add
or
sub
xor
mov
mov
movs
mov
pop
push
mov
jmp
and
or
adc
stos
jge
movs
in
inc
push
pop
jb
(bad)
fdiv
cmp
and
loopne
ficom
daa
sti
test
sub
sti
push
mov
push
jbe
dec
lahf
call
jmp
icebp
inc
xor
bound
mov
jb
scas
dec
mov
dec
xor
aas
xor
push
add
lods
push
sahf
out
loope
aaa
inc
push
test
ds
pop
in
lds
leave
mov
cmps
sub
push
jmp
inc
adc
adc
popf
fsincos
push
xchg
js
jns
es
inc
sub
jno
cmc
push
fldenv
pushf
add
into
imul
imul
mov
mov
leave
jmp
shr
pop
and
xor
cmp
fstp
(bad)
int
data16
mov
pop
bound
out
and
cmp
push
sbb
adc
add
xor
lds
sub
sahf
add
int
rcr
loopne
jge
in
das
movs
mov
jo
sahf
out
jns
jo
push
and
add
not
sub
and
arpl
stc
movs
fisttp
mov
int
mov
cs
add
fadd
jg
and
es
das
sahf
add
sbb
sbb
mov
push
fisubr
mov
mov
mov
push
ds
or
push
adc
mov
jg
pushf
or
sub
outs
or
mov
outs
shl
and
sbb
mov
mov
sbb
and
lods
test
jb
and
cmp
pop
stos
and
or
cmps
and
test
movs
mov
jle
(bad)
push
cli
xchg
cmp
fwait
loope
fidivr
imul
out
lahf
leave
xchg
int
push
inc
(bad)
push
js
cli
mov
sub
xor
add
inc
xlat
nop
vminss
pop
jne
mov
(bad)
cmp
pusha
ins
pop
jle
pop
das
xor
xchg
nop
popf
les
xlat
cmp
in
xchg
imul
jl
mov
mov
lods
dec
mov
rcr
cs
mov
pop
push
fs
adc
add
sub
xchg
stos
enter
mov
call
mov
mov
mov
scas
add
pop
test
or
inc
cs
(bad)
sbb
ficomp
pop
test
add
cmc
lock
stc
stos
xchg
fcmove
lahf
fmul
fwait
jmp
dec
cmp
leave
lds
cmps
add
mov
xchg
adc
leave
cmp
jbe
mov
sbb
push
into
xor
xor
push
loop
int3
jp
stc
aaa
sub
mov
add
repz
pop
mov
jne
dec
or
cdq
add
inc
mov
rcpps
mov
hlt
ficomp
imul
inc
loopne
add
jnp
out
in
mov
shl
loopne
xor
mov
dec
ins
je
add
popf
push
xor
nop
inc
xlat
push
ror
retf
enter
repnz
xchg
sbb
in
fistp
test
ins
loop
pop
outs
cmp
push
mov
ret
add
cmc
jp
sti
mov
in
mov
or
push
push
shr
mov
inc
sbb
pusha
pushf
jl
fs
pop
stos
and
leave
scas
std
xor
scas
movs
call
rcl
shl
jnp
xor
cmp
xor
adc
cmp
pop
mov
cmps
stc
add
aaa
mov
es
aad
bound
or
jo
mov
out
popf
inc
push
test
dec
hlt
add
sub
mov
inc
cmp
sar
dec
mov
and
pop
add
push
push
push
or
sbb
loopne
adc
xchg
dec
pop
data16
imul
pusha
mov
dec
pop
adc
pusha
add
sti
rcl
rcl
xor
add
adc
dec
int
sub
sahf
popa
bound
jle
call
cdq
fs
cmp
mov
mov
dec
jb
mov
lods
les
js
movsx
and
shl
shl
push
push
xchg
cmp
lea
lods
mov
lods
ja
sub
and
inc
jp
add
jge
aaa
adc
dec
hlt
(bad)
or
data16
xor
and
popa
inc
add
push
cmp
icebp
pusha
in
in
cmp
cmps
inc
push
pop
fsubr
cmp
or
xor
call
cmc
add
pop
push
pop
daa
loope
mov
cmps
mov
dec
sub
mov
test
jg
or
xchg
ds
outs
inc
inc
shl
rol
out
int
movs
cmp
push
xlat
mov
in
loop
aad
rcl
jnp
aam
fsub
ds
fcomp
dec
fcomp
jecxz
repnz
jne
jae
dec
retf
xlat
inc
leave
xor
pop
popf
pop
add
js
int
cmp
sbb
aas
mov
aam
or
and
xchg
dec
enter
or
jnp
pushf
mov
jb
add
fs
and
std
pop
cmc
je
add
push
sbb
fld
jg
je
push
mov
adc
popa
xchg
or
xchg
nop
inc
sbb
cmps
jp
adc
hlt
hlt
xchg
sbb
ja
shr
xor
mov
inc
popa
mov
sbb
ins
fwait
jno
xlat
daa
lods
inc
dec
not
lods
push
sub
and
ret
and
mov
mov
jno
mov
mov
mov
arpl
jb
or
and
xor
sbb
cmc
add
ins
adc
xor
pop
fmul
adc
test
mov
cmp
dec
push
sub
mov
lods
ffreep
sar
adc
rcl
xchg
dec
out
and
pushf
jecxz
mov
jge
imul
pop
call
xchg
cmp
aas
cwde
out
or
in
mov
sub
shl
pop
push
jb
xchg
mov
aad
in
iretw
xor
jne
mov
cmp
adc
cs
test
add
das
repz
pusha
pusha
mov
cmps
or
mov
lahf
push
call
call
pop
inc
inc
(bad)
cmps
and
cmps
inc
cmc
fcom
jp
inc
jge
mov
push
ss
dec
jns
sbb
sbb
bound
out
cmp
mov
mov
imul
push
or
rcr
inc
pop
std
push
sbb
fwait
fwait
js
mov
xlat
mov
ds
add
test
or
test
gs
stos
out
ficomp
pop
sbb
cli
dec
das
cmc
push
add
orps
loopne
add
jecxz
mov
sbb
stos
ror
dec
cmc
push
pop
stos
leave
and
fucomi
push
jnp
rcl
jne
push
push
shr
adc
cld
sub
out
add
xchg
xor
mov
rcr
xchg
xchg
adc
and
add
jmp
fstp
outs
fnstsw
inc
mov
mov
mov
push
(bad)
out
outs
ins
adc
in
push
mov
sar
mov
rcr
stos
mov
dec
inc
fsubr
out
out
out
arpl
xchg
dec
inc
ror
and
jle
jmp
xor
push
test
xlat
pusha
out
or
inc
nop
sub
aad
jo
cmp
mov
leave
inc
pop
mov
jecxz
inc
sti
(bad)
aam
add
jp
push
dec
pop
push
add
add
mov
mov
push
mov
jb
int
xchg
pop
push
jp
and
dec
out
inc
mov
dec
ret
xor
das
daa
in
and
scas
enter
fnsave
stc
mov
in
dec
mov
mov
ja
lods
(bad)
mov
sbb
repz
frstor
shr
loopne
xchg
sub
loop
xchg
pop
mov
std
(bad)
fisub
leave
xor
push
xor
mov
add
sahf
mov
sti
inc
dec
rol
sub
add
sahf
sbb
mov
or
shl
pusha
pushf
xor
jg
movs
cmp
add
mov
sbb
add
out
ret
add
sahf
stc
jmp
das
mov
dec
sub
ins
popa
push
cdq
ja
mov
inc
ins
mov
xchg
aas
ins
xlat
cmp
test
jg
jl
cmc
xor
test
sbb
movs
loopne
jne
cmp
and
xor
xor
repz
cmp
call
add
mov
pop
push
sub
sbb
dec
jl
inc
adc
sub
xor
hlt
idiv
cmp
daa
ins
loope
adc
je
aaa
pop
imul
jmp
jae
ror
hlt
(bad)
repz
mov
popf
hlt
jb
push
sub
mov
int3
push
fs
iret
cld
in
pop
popa
retf
retf
xor
ins
cmp
outs
and
loopne
out
or
ins
adc
dec
mov
adc
cs
inc
jnp
pop
in
fucomip
loopne
loop
leave
push
mov
out
popa
enter
xchg
push
retf
xchg
push
add
cmc
sbb
in
mov
xlat
jmp
test
loopne
fistp
dec
push
dec
leave
xchg
push
inc
cld
dec
fisttp
mov
call
or
ja
jno
mov
push
add
loopne
sbb
mov
mov
aaa
call
rol
(bad)
stos
or
mov
mov
hlt
test
push
ds
cmp
ror
push
sahf
jnp
xchg
dec
push
and
rol
fisttp
dec
ss
fisub
(bad)
(bad)
dec
cwde
inc
push
cmps
mov
pop
nop
push
xchg
repnz
fiadd
pop
push
pop
pop
pop
jmp
xchg
lods
push
dec
push
xor
xor
popf
push
jno
sub
leave
cmc
in
add
cld
inc
or
aad
stos
movs
sub
test
cmp
mov
mov
xchg
ds
push
fist
mov
mov
xchg
outs
cs
mov
mov
lea
dec
out
xor
js
daa
adc
in
add
cmps
sbb
xor
out
mov
ss
push
add
mov
dec
arpl
movs
jns
movs
out
add
lahf
ret
push
bound
jecxz
mov
inc
das
and
mov
xchg
dec
push
mov
jo
pushf
jne
or
cld
inc
ja
xchg
mov
ins
test
pop
int3
cmps
dec
push
jb
out
cld
test
push
dec
xchg
jns
call
fdiv
imul
jmp
mov
pop
mov
dec
lahf
rcl
sbb
pop
jo
mov
push
aas
sub
pop
aas
test
jle
fiadd
jl
push
sbb
adc
pop
or
jo
jecxz
add
inc
dec
jae
xor
inc
add
and
or
cmc
mov
int3
sbb
jecxz
cmp
adc
enter
add
stc
movs
lds
xchg
pop
xor
mov
jmp
mov
test
push
and
stos
adc
sub
nop
push
scas
stc
sbb
cmc
in
arpl
scas
pop
movs
dec
movs
dec
pop
xor
loopne
shl
rol
mov
out
iret
push
push
push
xor
jno
mov
rcl
cmp
rcr
jge
ret
fcom
lods
xor
mov
std
push
or
mov
xor
mov
xchg
ror
fstp
hlt
das
outs
out
loopne
mov
sbb
mov
xor
lahf
hlt
lods
aad
(bad)
repz
inc
cmp
jmp
mov
sub
sub
shl
lahf
jmp
dec
xchg
lahf
sub
imul
in
out
xchg
enter
jecxz
sbb
dec
cmp
sub
cli
loopne
aaa
(bad)
xchg
and
pop
out
ror
xor
movs
xchg
xor
push
xchg
retf
enter
mov
(bad)
jp
repz
ja
fwait
mov
push
xor
cli
loop
aas
aam
push
popa
mov
jmp
je
test
leave
int
ret
sbb
mov
jne
rcr
iret
test
call
imul
fiadd
jp
push
shr
lahf
dec
mov
iret
adc
fsubr
loopne
lds
stos
inc
push
pop
inc
inc
mov
pop
mov
fidivr
cdq
pop
loopne
inc
popf
jo
sub
pusha
aaa
enter
imul
jle
sbb
sub
jns
call
cwde
cmp
pop
gs
pop
imul
ins
sbb
pop
jle
sahf
inc
(bad)
retf
mov
mov
pop
imul
push
mov
sub
push
pop
mov
js
mov
out
cwde
inc
lods
xchg
cmps
sbb
xchg
into
loop
ret
call
rcl
inc
loopne
inc
iret
int
rcr
xchg
call
sahf
cli
(bad)
ret
movs
lods
adc
and
cmps
sbb
retf
cmp
sub
fiadd
movs
ffreep
ja
or
inc
ficom
xchg
iret
(bad)
cmc
lods
mov
pop
js
repz
das
pop
int3
push
sbb
cmp
lds
movs
lea
loope
pop
dec
sbb
gs
rol
shl
dec
test
and
or
in
mov
in
shr
and
mov
loope
lds
cmp
xchg
and
dec
in
leave
pop
and
push
ins
mov
ret
or
xor
xor
adc
jno
hlt
sub
cmp
scas
mov
ins
(bad)
lods
in
mov
(bad)
leave
sbb
add
je
or
aad
mov
sub
repnz
outs
pop
fs
cmc
pop
push
sbb
idiv
shr
sub
or
stos
jg
cmp
test
mov
fiadd
jecxz
stos
test
mov
xchg
push
mov
pop
(bad)
sbb
ds
fild
mov
adc
dec
adc
adc
cmp
adc
push
add
mov
mov
xchg
lahf
hlt
mov
fst
sbb
lods
stos
jae
cli
pop
mov
cwde
(bad)
mov
and
push
cmp
cmp
les
or
xor
loop
pop
xchg
xor
mov
add
idiv
sbb
icebp
dec
cmps
mov
retf
adc
test
repnz
inc
cdq
or
lds
fiadd
cmp
fst
call
sub
shl
arpl
cmps
xchg
leave
clc
into
xor
addr16
mov
scas
xchg
xor
jbe
movs
out
jns
cmp
aam
cmp
sbb
es
cmps
sbb
pop
sbb
leave
fnstcw
imul
in
imul
xor
cmps
jl
and
and
out
xchg
add
jb
bound
gs
fild
mov
mov
bound
ins
cld
fs
aad
sti
dec
aad
inc
add
fdiv
repnz
and
pushf
push
daa
in
mov
outs
push
mov
repz
int
or
add
push
test
mov
ficomp
cwde
in
and
dec
mov
aaa
mov
arpl
idiv
aas
arpl
cmc
ret
jmp
and
add
fdiv
mul
shl
xchg
iret
shl
add
clc
lods
imul
mov
popa
fldcw
cs
es
lods
push
cmp
sti
push
fimul
cmps
sbb
mov
paddusb
and
in
jmp
adc
mov
push
out
stos
mov
pop
les
jmp
jb
push
adc
scas
lods
iret
pop
adc
stos
call
jmp
(bad)
hlt
mov
or
aaa
jae
fstp
jmp
sub
xchg
repz
shr
xor
mov
pop
and
sbb
dec
lods
(bad)
and
mov
dec
mov
shl
movs
cdq
ja
xor
mov
add
jp
push
ret
test
mov
pop
repnz
ror
das
xor
(bad)
fsubp
outs
in
push
xchg
jnp
or
call
xchg
mov
loop
or
aas
stos
xchg
mov
sbb
pop
push
lds
inc
cmp
loop
fadd
cmp
xor
mov
icebp
pop
ins
enter
inc
js
xchg
xchg
xchg
fistp
out
enter
adc
inc
repnz
pop
mov
sub
ds
mov
jo
push
xor
adc
test
imul
into
or
pop
aaa
mov
xchg
test
jns
sbb
pushf
sbb
jnp
call
(bad)
pop
or
dec
inc
add
arpl
mov
mov
cmp
out
push
jecxz
rol
jne
lea
std
scas
lods
in
loop
push
test
add
add
cmc
cmps
xor
xchg
pop
sbb
ss
push
or
retf
jb
fdivrp
dec
out
push
xlat
bound
rcl
add
pushf
loopne
stos
xor
push
xor
xchg
add
mov
mov
popf
mov
dec
loopne
movs
xor
leave
ror
sbb
push
pop
sub
jno
hlt
mov
add
and
shr
ret
or
lahf
(bad)
xchg
jae
pop
in
jmp
mov
push
not
adc
jb
(bad)
sub
dec
leave
cld
push
mov
and
imul
push
cmp
ror
ins
push
cld
jnp
cmp
xor
es
leave
loop
dec
xchg
nop
lods
lahf
inc
ffree
icebp
in
sbb
dec
js
adc
mov
loop
not
das
out
inc
push
fs
cmp
and
add
js
jg
jno
sbb
jmp
les
rcl
mov
xchg
ficomp
movs
mov
dec
add
push
mov
hlt
call
xchg
mov
push
sahf
mov
push
dec
lods
fstp
sbb
or
es
adc
das
out
shr
jecxz
pushf
pop
test
rcr
(bad)
cmp
pop
clc
mov
mov
ins
mov
retf
in
push
dec
into
jbe
jle
push
sbb
sbb
ret
sbb
in
cmps
fs
fiadd
ficomp
xor
sbb
movs
jnp
repz
xchg
les
jns
sahf
xor
clc
cdq
ror
data16
mov
xchg
or
pushf
adc
cmps
xchg
sbb
or
imul
sub
ret
adc
jns
jecxz
jb
mov
aam
xor
jb
popa
test
test
and
cmp
sbb
jecxz
mov
scas
mov
push
out
sub
jecxz
stc
stos
mov
shufps
fxch
and
(bad)
cmp
mov
in
add
dec
cmp
xor
shl
js
loopne
pop
std
and
not
lsl
scas
movs
or
mov
cmp
in
inc
pop
mov
xchg
pop
sbb
in
and
shr
sbb
ja
(bad)
mov
test
fnstcw
scas
xor
push
aaa
xor
mov
inc
nop
retf
nop
movsx
adc
ins
inc
and
push
les
stos
adc
aam
fild
in
ins
push
(bad)
mov
fwait
outs
imul
xchg
fcomp
sahf
jmp
push
sbb
sbb
cmp
lds
dec
ins
mov
mov
xchg
push
fsub
gs
cmp
dec
and
arpl
in
jmp
mov
jne
xchg
enter
cmp
cmps
jmp
iret
(bad)
in
not
xchg
(bad)
fdivr
mov
mov
mov
mov
jmp
(bad)
jnp
mov
and
push
adc
hlt
xchg
push
dec
pop
push
xor
ret
cmp
xlat
xor
test
or
mov
rcl
sbb
outs
and
lds
cld
xchg
push
sub
or
lods
mov
(bad)
loope
or
ds
std
sub
lds
push
push
mov
xchg
dec
scas
inc
or
push
inc
inc
in
jnp
mov
loopne
push
or
mov
sbb
in
adc
inc
fcmovb
jnp
in
in
leave
jns
jg
adc
xchg
and
jecxz
xor
cmps
fwait
loopne
icebp
jno
and
dec
aam
dec
xchg
leave
pusha
in
lods
adc
pusha
pause
jb
pop
test
xchg
xchg
test
inc
pusha
cmp
mov
pop
gs
dec
loop
add
xchg
cmp
mov
add
mov
jecxz
fidiv
inc
inc
enter
add
push
inc
loopne
xchg
inc
push
cmp
mov
(bad)
stos
mov
and
test
es
shl
xor
lds
pop
les
idiv
cld
mov
outs
mov
mov
lock
push
adc
xchg
test
inc
aam
mov
test
out
add
mov
dec
xchg
xchg
retf
movs
jns
jmp
imul
nop
int3
into
dec
and
push
or
enter
movs
jae
bnd
std
call
ins
arpl
sub
add
cmp
mov
jmp
jbe
or
dec
stos
adc
inc
popa
push
out
mov
add
pop
lds
mov
psubusb
cdq
cmp
movs
call
fistp
cli
scas
dec
mov
lahf
enter
cmps
sbb
pop
outs
and
sti
push
lea
mov
fcmovu
cwde
pop
ss
and
loope
jns
dec
aaa
outs
leave
rcr
jb
ins
pop
clc
jb
test
dec
and
and
loopne
push
(bad)
int
in
add
dec
cmps
rol
dec
and
jl
mov
nop
dec
in
rol
(bad)
or
xor
movs
outs
mov
sbb
pop
out
ja
call
sbb
sti
xlat
push
xchg
mov
in
push
cmp
ficom
xlat
dec
mov
dec
gs
imul
sbb
sbb
popa
pop
jmp
xchg
leave
xchg
loopne
rcr
pop
xor
pmuludq
daa
inc
and
jo
shl
out
mov
xchg
and
add
sti
jae
mov
inc
fmul
inc
lea
cli
or
das
cwd
gs
es
sub
pop
pop
mov
repnz
pop
popa
out
jnp
jno
rcl
pop
shl
shr
dec
push
mov
inc
xchg
imul
pusha
jnp
adc
mov
dec
ss
mov
inc
imul
ins
enter
pushf
sahf
pop
inc
mul
xchg
jae
dec
(bad)
je
je
cmps
jns
push
add
xchg
(bad)
je
ins
pop
mov
rcr
pop
rcl
in
cmp
jecxz
inc
rcr
cmp
ss
jle
(bad)
stc
sbb
or
scas
xchg
add
addr16
cmps
add
adc
dec
in
popf
les
cmps
xchg
ins
imul
pop
jo
sahf
js
add
pop
movs
push
or
sub
fs
ret
outs
and
sub
adc
fs
mov
sbb
inc
or
mov
aam
push
jmp
lods
add
into
inc
sahf
pop
icebp
(bad)
(bad)
add
lods
cmp
xor
add
mov
sti
mov
mov
fcomp
cmps
and
and
xchg
inc
jae
mov
fwait
mov
push
shr
fmul
out
dec
mov
jns
rol
xor
adc
push
lea
and
gs
(bad)
sub
mov
nop
mov
or
dec
movs
add
sahf
sub
pop
shl
stc
outs
xchg
sbb
sub
jecxz
push
or
leave
clc
movs
int3
cmps
xor
or
inc
fisttp
mov
retf
sbb
xor
inc
pop
loope
shr
add
and
jno
or
call
movs
fwait
xchg
push
dec
push
sub
jle
jae
mov
std
push
sub
popf
bound
xchg
pushf
sub
mov
cmp
push
mov
jge
jmp
xor
out
inc
into
rol
in
ins
ja
push
jg
gs
xchg
movs
dec
and
es
div
and
ins
or
jp
cmc
in
call
adc
inc
movs
cwde
or
xchg
dec
fadd
mov
pushf
push
sub
int
inc
push
mov
and
les
stc
sub
push
jb
mov
jle
xor
jbe
cmps
test
jno
inc
jmp
in
jne
pop
in
fnstcw
add
dec
test
cwde
xor
sbb
inc
test
iret
push
xor
dec
mov
push
in
add
call
mov
jg
push
pop
and
inc
into
movs
xchg
retf
retf
jbe
stc
cmps
sub
add
gs
dec
lods
xor
(bad)
in
retf
xchg
cmp
push
sahf
popf
cli
cmc
xor
push
inc
outs
daa
pop
jecxz
push
sti
inc
sbb
(bad)
xor
mov
push
gs
sbb
dec
sbb
rol
or
mov
lods
pop
dec
sahf
in
cmc
inc
pop
loopne
loop
mov
cmc
or
add
cmc
mov
mov
inc
les
xlat
push
pop
push
lods
mov
and
mov
(bad)
cmps
retf
mov
outs
push
add
jno
rcl
dec
push
mov
fiadd
addr16
ficomp
in
dec
push
aaa
pop
in
ss
push
xor
sbb
xchg
mov
cdq
hlt
mov
xchg
mov
and
add
inc
mov
scas
sbb
jno
in
jae
(bad)
mov
mov
adc
movs
rcl
mov
sahf
add
call
xchg
(bad)
mov
cmp
shl
sub
aam
and
mov
in
inc
lods
and
push
inc
push
out
sbb
jge
jecxz
push
sbb
inc
mov
enter
shr
or
mov
push
enter
sbb
sub
push
xor
add
ds
adc
sub
and
inc
jno
movs
and
xor
lahf
outs
dec
xor
sbb
(bad)
shl
sbb
mov
mov
xchg
je
ffreep
mov
shl
pop
push
push
mov
ja
and
std
and
cdq
xor
stos
pop
into
push
popf
lods
mov
lods
lock
add
in
sub
sbb
mov
push
dec
es
adc
jg
xor
xchg
je
pop
pushf
(bad)
sub
loopne
aad
in
cs
push
sahf
ins
int
add
xor
mov
xor
xor
sti
mov
mov
test
cmps
test
ficom
mov
or
add
push
push
cdq
int
and
xchg
std
sub
ss
inc
dec
push
mov
ja
jae
jbe
sub
sbb
push
sbb
add
inc
mov
in
cmps
test
sbb
in
cmp
mul
sbb
(bad)
mov
inc
mov
add
fimul
cmps
push
fldenv
sub
xchg
fisubr
repz
nop
push
(bad)
call
mov
dec
adc
sub
xor
fs
jg
jbe
les
dec
movs
sub
ret
outs
jo
jno
cs
mov
(bad)
jl
sahf
ds
adc
lds
mov
jne
and
out
outs
xchg
fs
mov
int
scas
sar
inc
add
xor
inc
or
rcr
add
js
int
and
xchg
test
mov
push
mov
std
cmp
cmc
cmps
xchg
xor
mov
adc
mov
por
in
jecxz
xchg
ins
call
mov
or
aad
je
cmp
add
cmp
add
add
add
add
inc
mov
push
enter
add
loope
into
push
rcr
sahf
push
xor
sbb
loopne
rcr
call
cmp
jno
ss
adc
mov
jo
jmp
iret
push
popf
push
mov
mov
adc
hlt
ins
mov
imul
hlt
push
sub
cli
mov
arpl
sbb
jle
lods
arpl
fld
pusha
movs
mov
push
jnp
push
add
retf
arpl
cmps
cmove
cdq
push
ret
cwde
cld
test
mov
into
xor
lahf
lahf
jmp
(bad)
stos
xor
gs
mov
movs
out
add
(bad)
movs
push
loopne
stos
inc
pop
xor
cdq
movs
bound
idiv
test
dec
addr16
fldcw
cmps
mov
and
adc
es
jge
mov
sbb
jge
loop
je
dec
in
dec
int
adc
sbb
lahf
test
ins
sbb
(bad)
in
stc
cmp
mov
dec
pop
mov
leave
push
dec
outs
sub
inc
sbb
aaa
test
(bad)
mov
adc
jns
pop
outs
mov
mov
add
pop
(bad)
clc
ins
rol
lods
mov
mov
ret
outs
add
inc
cwde
mov
or
call
loope
cs
xchg
pop
loop
dec
and
and
adc
daa
add
imul
mov
outs
enter
shl
mov
xchg
(bad)
(bad)
or
mov
adc
sbb
pop
inc
and
js
inc
jo
adc
cmps
add
in
(bad)
jecxz
jmp
in
xor
jg
mov
outs
es
sub
push
inc
xor
add
sahf
jecxz
lahf
inc
call
sub
repz
data16
inc
imul
arpl
sub
stos
adc
sar
mov
dec
mov
ins
push
fcomi
push
add
jno
pop
shr
movs
mov
movs
mov
je
and
sbb
adc
sbb
test
arpl
popa
iret
loop
sahf
movs
(bad)
sbb
iret
push
cdq
jns
jp
xor
(bad)
jecxz
mov
shl
rol
hlt
add
xchg
mov
sub
adc
cmc
add
and
xchg
rol
add
sbb
xchg
nop
mov
jb
xchg
jae
add
movs
xor
adc
(bad)
sbb
mov
fiadd
movs
je
pop
lods
xor
call
popf
movs
ret
jb
repnz
xlat
sbb
inc
fs
xchg
xchg
push
dec
fwait
ja
lahf
jne
and
xor
inc
loope
push
ret
std
test
cmps
dec
mov
dec
jno
jl
adc
out
jbe
pop
xchg
or
sub
mov
cld
push
das
out
dec
jmp
adc
fisubr
mov
ret
xor
jno
sub
aam
pop
adc
sbb
adc
cmp
xor
sahf
cmp
xchg
pop
adc
mov
mov
in
sahf
out
mov
aaa
dec
pop
leave
pop
xchg
or
(bad)
cmp
aas
push
xchg
fst
xchg
mov
xchg
pop
xor
in
nop
xor
sub
sbb
xlat
es
or
mov
jns
xor
push
xor
or
js
mov
mov
push
in
jno
retf
sub
xchg
les
mov
into
xor
je
mov
lock
push
sbb
mov
out
add
jb
jo
inc
aam
sahf
fnsave
gs
inc
outs
or
jmp
add
xor
fisubr
retf
arpl
outs
jo
xchg
and
(bad)
repnz
inc
adc
aaa
pop
jno
xchg
inc
call
inc
cmps
std
and
nop
cwde
mov
pop
shl
and
xchg
cmp
cmp
push
sbb
call
mov
repz
iret
jl
repz
mov
jl
dec
mov
push
in
push
xchg
sbb
es
and
into
push
xor
jmp
mov
mov
jne
js
adc
xor
pop
jl
mov
sub
or
xchg
inc
inc
pusha
pop
cmp
icebp
dec
xchg
retf
push
mov
mov
mov
cld
rol
fwait
sbb
mov
xor
sar
std
int
jmp
sbb
inc
push
mov
xchg
test
cmovno
aas
stos
nop
adc
pop
test
aam
loope
push
mov
adc
hlt
mov
sbb
movs
sbb
daa
call
lahf
sahf
inc
les
std
outs
inc
loop
in
sub
(bad)
out
mov
jmp
dec
xchg
sti
ss
inc
mov
(bad)
gs
test
shr
sti
jb
dec
iret
push
enter
xchg
add
in
pop
mov
jae
scas
retf
mov
rcr
aas
std
sar
dec
sbb
loopne
dec
mov
xchg
call
and
xchg
push
mov
adc
cli
cmp
inc
test
mov
ds
repnz
push
or
mov
mov
push
mov
(bad)
xor
xchg
loop
dec
xor
inc
imul
test
and
and
(bad)
mov
sbb
inc
jg
pop
or
sbb
lahf
loop
sar
add
ins
ds
mov
push
add
inc
sbb
leave
stos
(bad)
fscale
or
push
imul
sub
and
push
mov
cmovno
movs
xor
push
pop
xchg
xchg
jmp
sbb
paddsw
jg
adc
add
aam
test
and
mov
or
add
sbb
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
gs
cs
jb
ja
outs
addr16
imul
add
popa
je
pop
add
add
add
add
add
lsl
add
fdivr
push
dec
inc
or
add
or
add
add
add
ins
or
add
add
push
(bad)
lods
add
add
jae
inc
inc
add
add
add
inc
dec
inc
add
mov
or
popa
add
je
pop
je
outs
data16
popa
jb
add
outs
bound
dec
ins
popa
addr16
gs
fs
leave
gs
add
imul
dec
cmp
ins
cs
outs
bound
js
jo
add
add
cmp
js
popa
arpl
je
bound
imul
and
imul
dec
jo
gs
gs
jp
push
arpl
arpl
and
and
cmp
jo
gs
and
ins
outs
jae
js
and
outs
bound
outs
jae
ins
gs
das
and
js
js
jo
imul
and
push
and
jb
and
xor
xor
xor
xor
xor
aaa
aaa
sub
xor
xor
das
xor
das
xor
sub
xor
xor
and
and
and
and
and
and
data16
inc
and
ins
outs
jae
jb
cmp
je
jo
das
das
ja
ja
ja
outs
jb
das
xor
cmp
das
xor
das
xor
sub
jae
outs
je
js
outs
jae
and
and
data16
arpl
jo
imul
cmp
outs
jne
cmp
ins
ins
outs
jae
js
jo
dec
cmp
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
ins
ins
das
and
js
ins
outs
jae
jae
push
gs
je
jo
das
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
jae
jns
gs
push
gs
jne
arpl
and
and
ins
outs
jae
js
jo
and
je
cmp
das
outs
jae
popa
outs
bound
arpl
das
js
jo
xor
xor
and
js
jo
dec
cmp
imul
outs
arpl
outs
je
inc
cmp
cs
cmp
inc
xor
ss
inc
xor
xor
inc
inc
xor
inc
inc
xor
inc
xor
inc
and
js
jo
dec
cmp
jne
outs
je
inc
cmp
cs
inc
xor
xor
xor
inc
inc
cmp
inc
inc
inc
inc
cmp
xor
and
jo
dec
cmp
jae
popa
outs
arpl
inc
cmp
imul
inc
xor
inc
aaa
aaa
xor
xor
inc
xor
cmp
inc
inc
inc
inc
cmp
xor
and
jo
inc
jb
popa
je
jb
outs
outs
ins
cmp
bound
push
push
push
push
xor
imul
and
ins
jo
dec
cmp
imul
ins
and
push
data16
jae
popa
outs
arpl
inc
cmp
imul
xor
xor
xor
aaa
xor
cmp
xor
xor
cmp
inc
inc
inc
xor
inc
ss
xor
and
push
data16
jne
outs
je
inc
cmp
cs
cmp
inc
xor
ss
inc
xor
xor
inc
inc
xor
inc
inc
xor
inc
xor
inc
and
and
jb
data16
arpl
jo
imul
jb
data16
inc
and
js
js
jo
gs
and
js
popa
arpl
je
outs
fs
ds
sti
jp
add
mov
push
js
in
std
add
dec
fstp
push
dec
add
and
and
adc
nop
mov
(bad)
ins
push
ins
ja
mov
retf
push
stc
ja
jmp
in
mov
mov
adc
stos
jbe
mov
retf
addr16
fs
xchg
ja
inc
out
jg
mov
fwait
outs
in
ss
data16
xor
mov
mov
push
mov
sbb
fisttp
fcmovu
call
mov
aaa
arpl
mov
fwait
outs
(bad)
(bad)
pop
pop
loopne
push
ins
sbb
and
jg
xor
cmc
cmc
movs
daa
lahf
test
push
in
cmp
pop
(bad)
repz
jns
mov
test
adc
enter
fimul
scas
popf
sub
cmc
adc
aas
cs
cdq
test
and
jge
mov
and
dec
pop
cmp
(bad)
std
nop
lahf
je
cmps
or
(bad)
lds
inc
nop
inc
mov
add
es
jg
add
pop
aas
(bad)
dec
sbb
push
hlt
sti
outs
popa
rol
(bad)
jge
and
in
jns
test
out
or
popf
mov
scas
in
out
jbe
push
or
xchg
scas
scas
daa
call
leave
outs
inc
bnd
and
sbb
xor
out
jae
cdq
int
xchg
enter
dec
data16
nop
add
adc
mov
(bad)
xchg
ds
in
xor
repnz
xchg
aas
stc
repnz
fstp
and
and
in
pop
pop
inc
sahf
lock
inc
cmc
icebp
jno
xor
pushw
and
jmp
mov
xlat
pop
retf
std
xor
loop
add
push
stc
mov
das
in
enter
pop
pop
(bad)
ja
dec
call
hlt
mov
retf
(bad)
jg
adc
call
ret
sbb
mov
icebp
scas
in
add
mov
(bad)
aas
iret
movs
dec
sub
sti
imul
int3
inc
or
loopne
imul
or
xchg
cmc
and
mov
pop
ror
in
jge
ins
mov
cmp
mov
popf
push
out
nop
fdiv
mov
jbe
mov
loope
mov
inc
mov
lods
fdiv
in
nop
pusha
xor
cli
jmp
cmp
dec
cli
sub
or
pop
iret
sahf
cmps
out
add
push
fistp
addr16
ds
mov
mov
xlat
out
cmp
fnsave
or
jmp
ins
cmp
xor
jne
push
mov
ds
out
xchg
xor
jge
in
inc
cmc
cmc
cmp
mov
outs
or
(bad)
jge
cmp
mov
les
in
retf
push
sub
push
les
mov
inc
push
mov
mov
or
mov
cmp
mov
and
inc
call
fstp
ret
inc
cwde
add
sbb
mov
xor
jmp
nop
jmp
popf
xchg
inc
dec
lahf
xor
(bad)
hlt
out
daa
jmp
ja
add
icebp
adc
icebp
lds
cmp
in
data16
jns
retf
retfw
push
es
sahf
ins
es
repnz
xor
lods
xor
int3
xor
cmps
sti
xor
sbb
call
xchg
xor
dec
loopne
mov
loop
dec
xor
popf
dec
xor
adc
sbb
rol
mov
sub
sub
ror
int3
call
sbb
sbb
sub
cmp
jle
fistp
lahf
lahf
pushf
(bad)
out
sub
(bad)
jns
xchg
js
xchg
sbb
mov
leave
retf
(bad)
leave
adc
jnp
fs
pop
mov
cdq
inc
into
mov
test
(bad)
jns
int
outs
out
mov
jmp
imul
popa
data16
ret
sub
inc
shl
(bad)
int
es
repnz
xchg
push
jmp
shl
sbb
loopne
sbb
dec
out
imul
hlt
sbb
mov
mov
xchg
jmp
sbb
std
cmps
(bad)
lock
dec
cmp
lahf
and
ficom
sar
(bad)
in
aad
mov
sub
nop
shl
pop
mov
push
mov
outs
sub
jb
mov
fidivr
cmc
pop
test
mov
jb
mov
loope
xlat
mov
repz
cmp
cwde
push
cmp
inc
dec
ds
repz
cld
mov
outs
add
gs
repz
fcom
cdq
inc
xchg
in
int3
loop
test
sub
push
cdq
in
imul
fisubr
xchg
popa
adc
retf
fidiv
mov
lock
cmp
out
mov
shl
stos
aas
mov
jno
push
stc
stos
xor
cmp
mov
mov
push
pop
cmp
ins
mov
mov
xor
adc
mov
sub
ror
pop
imul
imul
and
out
inc
push
inc
mov
popf
repnz
or
rol
mov
add
dec
pop
fwait
into
pop
mov
out
and
stc
push
mov
mov
lahf
or
sbb
dec
cld
mov
repz
sbb
xchg
imul
fldenv
sub
sbb
aaa
in
out
mov
sub
sbb
add
adc
pushf
cmp
es
js
retf
repz
push
cmp
mov
call
dec
add
cmp
in
clc
xchg
lds
xor
icebp
inc
sub
and
cwde
sub
add
cmps
pop
xchg
popf
ins
shl
call
aaa
fsin
in
add
xchg
pop
pop
ins
shl
add
push
ins
stos
mov
pop
ja
loope
push
mov
iret
fs
out
mov
idiv
lods
pop
mov
or
sar
ja
push
mov
std
(bad)
push
sub
out
jmp
xchg
xor
push
mov
pusha
jne
scas
ret
ror
adc
sahf
jecxz
outs
sti
sbb
add
(bad)
aas
adc
in
dec
pop
mov
into
dec
and
fild
and
loopne
test
cmp
popf
aad
je
cmp
jns
ins
inc
jle
or
mov
dec
inc
imul
lds
dec
dec
gs
sub
push
aad
jp
push
push
retf
ins
mov
test
stc
sub
cmps
mov
movs
push
inc
xor
jnp
jb
xor
mov
or
xor
cdq
movs
cmp
dec
pop
shr
stc
and
stc
pop
cmp
fisub
test
pusha
jne
and
dec
pop
add
push
aas
dec
jno
pop
int3
aam
cli
(bad)
es
inc
jge
mov
cmovl
cmps
and
stos
add
popa
add
scas
jg
jg
adc
and
mov
fcmovbe
(bad)
repnz
cmc
jmp
mov
push
imul
adc
imul
fs
pop
dec
movs
movs
inc
adc
(bad)
sbb
or
xchg
cmp
bound
dec
popa
pop
in
fsubr
pop
lods
out
das
data16
js
sahf
(bad)
je
sub
mov
lahf
xor
push
(bad)
push
xchg
xchg
fwait
addr16
lods
jne
ss
or
and
sub
test
cmps
enter
pop
pop
pop
imul
mov
scas
mov
mov
into
jle
xlat
mov
mov
jmp
retf
int3
mov
mov
push
mov
scas
and
and
retf
add
and
add
(bad)
scas
mov
aas
idiv
mov
psubw
push
sub
daa
xchg
or
(bad)
lods
pop
outs
adc
ficom
push
lock
scas
in
cmc
mov
cs
(bad)
lods
cmp
mov
or
xchg
(bad)
not
xchg
push
mov
repnz
adc
jo
push
xor
jg
lods
sub
rol
outs
sbb
out
cwde
xchg
ficom
sub
rcl
sbb
mov
pop
jp
fstp
add
adc
inc
loope
outs
pop
lods
sbb
bnd
ins
dec
cmp
cmp
popf
xor
push
jns
cli
cmc
es
ins
sbb
lds
jp
ror
sbb
retf
retf
mov
ret
ficomp
imul
mov
push
pop
or
aad
mov
mov
lods
adc
adc
jne
or
sub
dec
mul
add
loope
adc
movs
out
jmp
push
mov
xor
push
jne
jmp
xchg
jmp
test
add
pop
push
bound
add
in
sbb
pop
dec
jae
xchg
inc
mov
mov
xlat
jg
pusha
mov
jo
mov
lods
jne
cmc
xchg
out
cld
(bad)
call
iret
scas
int3
cmps
sti
push
add
mov
in
lods
jmp
pop
jl
sbb
add
push
data16
adc
or
out
pop
add
(bad)
iret
in
(bad)
data16
call
(bad)
loope
ins
hlt
sub
pop
stc
imul
xor
xor
aad
in
cmp
dec
mov
sub
lahf
pop
leave
sbb
in
retf
cwde
adc
add
adc
or
dec
sbb
movs
pop
aaa
sbb
push
push
push
mov
fldcw
mov
or
jno
adc
rol
pusha
bound
std
sub
push
or
(bad)
call
fcom
and
mov
cmp
gs
mov
imul
fbld
into
fs
es
adc
xchg
add
jmp
push
imul
mov
sar
mov
pop
mov
jbe
inc
mov
ficom
sub
pop
xchg
pop
xchg
lahf
mov
ret
adc
(bad)
adc
cs
sub
or
fisub
jecxz
xchg
xor
out
dec
adc
adc
push
xor
retf
scas
cmp
push
in
push
sbb
(bad)
sub
xchg
cmc
pop
popa
or
aam
push
push
mov
cmp
(bad)
std
leave
les
jnp
aas
js
(bad)
sub
jmp
add
popa
mov
ret
sub
stc
add
loopne
rcr
pop
sbb
cmps
and
popf
cld
dec
into
ret
stos
and
iret
adc
jle
or
push
adc
enter
pop
dec
loope
jg
jmp
xor
jmp
mov
dec
out
fidiv
and
push
push
out
int
pop
mov
dec
imul
fiadd
in
leave
pop
and
inc
cmp
call
push
shr
pop
popa
lods
retf
add
xor
add
mov
cmc
xchg
(bad)
dec
lods
bound
outs
and
adc
outs
retf
scas
pop
movs
iret
jae
addr16
daa
lods
mov
fcom
retf
stc
scas
xor
gs
pop
(bad)
(bad)
lods
(bad)
leave
cs
rcr
pop
pop
push
mov
xchg
push
cs
es
mov
fs
xchg
js
pusha
mov
adc
pop
and
repz
sbb
jb
jecxz
sbb
test
sbb
das
scas
cmps
and
xchg
test
adc
mov
out
(bad)
ins
push
aaa
add
ror
sub
cld
push
in
cdq
add
push
out
or
mov
or
lods
mov
imul
jne
jecxz
adc
dec
mov
rcl
test
pop
or
cmp
push
xor
push
push
daa
aaa
xchg
cmp
mov
sub
mov
inc
jmp
push
xor
xchg
add
xchg
add
mov
ror
or
push
cmp
mov
(bad)
ja
jb
mov
push
retf
outs
retf
fxch
loope
ror
push
mov
jecxz
dec
mov
mov
xchg
jns
mov
xchg
xchg
ins
cmp
dec
xor
adc
xchg
dec
or
sti
xchg
or
xor
push
rol
movs
je
xor
iret
fsub
ins
(bad)
cli
cmp
aam
lods
pusha
aad
leave
out
ror
or
jno
or
add
mov
sar
lods
(bad)
pop
jae
lods
ret
dec
test
xchg
inc
fisttp
xchg
dec
and
repnz
fild
fsubr
jne
add
lods
or
sub
xlat
jb
push
enter
or
xor
mov
dec
xor
sbb
ja
and
add
in
push
ror
dec
jae
mov
mov
loop
and
stos
mov
push
pop
cmps
jae
cmps
mov
mov
aam
xor
lds
lods
xor
sub
jb
xchg
into
push
loopne
xor
(bad)
cdq
and
sub
jmp
mov
ficomp
or
sub
aam
xchg
adc
cdq
rcl
xchg
out
xor
scas
retf
push
inc
test
inc
pop
repz
mov
jle
mov
adc
movs
in
xchg
xor
mov
pop
sbb
cmp
pop
stos
nop
sub
daa
cmp
push
mov
cld
xor
iret
(bad)
fcomp
fst
pop
mov
ror
add
retf
lods
fiadd
cwde
push
out
mov
(bad)
cmps
stc
mov
sbb
rol
jbe
imul
sbb
sbb
repnz
pop
xchg
mov
pop
and
cdq
mov
lock
jno
add
sub
ds
out
retf
clc
push
jmp
int3
inc
ins
mov
aad
push
sbb
jbe
popf
add
mov
adc
ins
int
push
je
iret
mov
test
ins
test
inc
adc
call
leave
out
sub
ds
(bad)
lock
cwde
xchg
int3
inc
sub
(bad)
retf
xor
sbb
(bad)
adc
sbb
jno
int3
je
xor
imul
mov
into
mov
fld
add
addr16
sub
in
test
sbb
ja
inc
or
jbe
mov
cli
add
add
xchg
cmp
ret
add
add
jne
int
pop
mov
mov
push
sub
jns
fwait
and
xchg
ror
lods
ret
(bad)
jg
lea
xor
popf
divps
push
out
(bad)
ins
test
mov
sub
aad
sbb
and
and
push
inc
daa
mov
inc
and
jo
mov
push
ds
mov
sbb
call
push
and
call
(bad)
push
and
mov
out
retf
cmp
fmul
lahf
retf
and
add
mov
mov
jl
sbb
mov
test
pusha
les
shr
add
add
xchg
gs
push
les
cs
pop
or
adc
popa
cmps
mov
push
cmc
push
pop
fist
adc
adc
lods
pusha
xchg
in
push
(bad)
rcr
inc
fstp
dec
shl
xor
add
imul
shr
in
add
call
sahf
jecxz
inc
retf
gs
loop
dec
xchg
add
pinsrw
inc
aad
cli
and
cmp
out
mov
retf
daa
lds
dec
aas
xchg
fld
ins
imul
xor
or
je
jnp
retf
ror
sbb
mov
mov
ror
je
inc
aas
sbb
add
and
stc
dec
mov
jmp
jle
adc
add
ins
dec
in
ins
xchg
cmp
fidiv
mov
add
add
add
cmc
test
push
xlat
ja
lods
popa
xchg
xchg
inc
sar
lahf
mov
xchg
lods
hlt
cld
outs
jge
imul
mov
stos
std
jl
stc
lods
shl
push
mov
aad
cwde
repnz
fbld
imul
dec
inc
fidivr
mov
fld
pop
pop
fsubrp
and
inc
push
outs
rol
xchg
jl
(bad)
mov
cld
sbb
mov
push
adc
mov
retf
out
pop
mov
retf
xor
popa
repnz
lods
jns
ds
pop
inc
adc
pop
nop
retf
cli
pushf
daa
xor
inc
dec
xchg
fimul
or
addr16
dec
mov
movs
aaa
and
jae
repnz
mov
mov
push
cmp
add
lea
pop
jno
xchg
rcr
push
sar
inc
jb
cmp
mov
inc
dec
sar
test
sub
cmp
les
pop
(bad)
retf
pop
mov
jmp
sbb
push
mov
mov
into
jge
cmp
ds
mov
push
sbb
into
addr16
xor
pop
adc
ss
in
xchg
sbb
retf
or
stc
lea
inc
inc
in
retf
push
cmp
movs
imul
adc
mov
or
(bad)
fnsave
jl
outs
xor
sub
cmp
add
push
sar
sub
pop
cmp
shl
xchg
arpl
cmp
jg
inc
scas
cld
xor
mov
jg
aam
aad
mov
jbe
sub
mov
inc
ret
mov
shl
sbb
popf
in
dec
cmp
fadd
call
adc
movs
and
mov
aaa
or
in
add
shl
mov
lods
js
xchg
adc
enter
and
sbb
pop
sbb
mov
test
xor
ret
mov
add
push
retf
add
fidivr
imul
jge
fucomi
or
mov
push
pop
push
cli
and
repnz
dec
mov
out
test
mov
sub
fisub
loop
pop
fcmovnbe
xor
push
mov
hlt
jg
pop
xchg
sbb
das
inc
or
les
xor
push
mov
cdq
mov
add
sbb
stos
or
bound
cld
sub
mov
mov
mov
pop
xchg
mov
pop
mov
ss
and
(bad)
(bad)
mov
mov
xor
push
and
push
push
and
mov
push
inc
jae
arpl
inc
mov
test
jns
or
out
cmp
mov
dec
call
cli
dec
dec
push
mov
scas
stos
rcl
xor
mov
iret
push
mov
push
jo
sbb
loop
movs
mov
stos
xchg
pop
jnp
movs
ret
push
pop
mov
jnp
cmp
mov
(bad)
arpl
push
lods
pop
push
and
movs
adc
mov
push
enter
adc
or
fmul
or
cld
jge
add
stos
jp
sub
test
dec
mov
rcl
pusha
xchg
jecxz
xor
pop
xor
xor
scas
test
punpckldq
mov
call
pop
jo
jnp
adc
add
fnstsw
call
push
and
xchg
iret
cmp
inc
int
fstp
jne
mov
retf
jbe
sar
push
add
pop
push
repnz
mov
xchg
mov
mov
sbb
dec
cdq
test
push
xor
lods
add
rcr
inc
(bad)
add
fist
int3
jnp
and
mov
cli
aam
call
lock
jo
mov
test
sbb
cmc
pop
cdq
inc
pop
adc
outs
sub
sti
sub
mov
ja
push
call
je
sub
dec
inc
push
or
ret
sbb
ins
push
ss
xchg
dec
imul
cmps
adc
cmc
pop
add
mov
pop
retf
sbb
icebp
mov
mov
mov
jl
xlat
out
jmp
pop
push
or
and
mov
push
ds
xchg
xor
sbb
sub
push
push
sub
int
test
xor
test
push
mov
dec
dec
xchg
idiv
call
int3
cwde
mov
adc
data16
(bad)
cmps
std
imul
push
mov
pusha
xlat
push
mov
push
or
pop
ficom
jb
cdq
adc
push
imul
pop
cmps
rcr
enter
sbb
fs
sub
data16
lods
jg
scas
aad
pop
int
int3
pusha
in
inc
dec
dec
add
sub
stos
rcl
mov
pusha
cmp
cwde
xlat
xor
stc
mov
es
cdq
mov
xchg
imul
dec
xchg
outs
xor
addr16
mov
(bad)
in
into
movs
call
adc
jo
xchg
adc
cwde
mov
lock
pop
push
jle
jo
pop
add
xor
mov
ror
dec
pop
xchg
movs
or
scas
xchg
sti
loop
push
ins
(bad)
les
lods
outs
push
push
js
jl
add
and
sbb
jb
movs
mov
or
dec
lods
dec
or
(bad)
adc
jmp
fst
jno
test
push
sub
(bad)
xor
(bad)
lods
data16
adc
sbb
xchg
mov
test
adc
push
jne
adc
add
push
mov
jmp
sbb
fs
adc
mov
jmp
frstor
jbe
div
mov
int
stos
mov
dec
or
pop
push
adc
mov
rcl
pop
mov
outs
cmp
jmp
out
inc
repz
popa
pop
mov
dec
pop
hlt
mov
pop
cli
lea
ds
dec
shl
stos
fidiv
enter
inc
add
jae
push
cmp
jg
mov
lods
xor
jb
xor
xchg
pop
dec
xor
ins
push
pusha
xchg
mov
xchg
inc
or
(bad)
gs
hlt
add
pop
cld
ror
not
test
shr
pop
jge
imul
scas
sub
and
xchg
shl
nop
inc
jne
int3
in
or
lods
adc
add
inc
sub
cmp
repz
fidiv
(bad)
mov
mov
push
dec
add
cwde
add
mov
hlt
xlat
in
jle
dec
jno
cmp
mov
xor
lds
push
dec
push
ret
xor
sub
push
push
xor
aad
mov
jmp
xchg
xor
sbb
rcl
jmp
pop
or
fiadd
xor
stc
add
sub
add
mov
stc
test
aaa
movnti
xor
aam
bound
push
mov
outs
pop
cmps
stc
imul
mov
iret
inc
cmps
or
lahf
mov
sbb
jae
fidivr
inc
imul
dec
jnp
push
pop
pop
sub
mov
retf
add
pop
mov
cmp
inc
jecxz
push
out
xor
sub
jmp
pop
push
stc
xchg
cmps
push
adc
ins
jb
pop
cmp
push
and
lods
in
xchg
enter
cld
jp
push
fcomp
pop
xor
cmp
ss
jo
int3
cdq
xchg
into
je
jmp
nop
pusha
pop
test
or
repnz
xor
pop
jg
imul
lods
mov
mov
xchg
fwait
mov
pushf
les
jg
sbb
pusha
push
fiadd
les
scas
retf
cmp
pop
sub
push
cmps
fs
gs
inc
stos
data16
xchg
in
jae
mov
fisub
mov
mov
pop
mov
bound
or
mov
sub
mov
bnd
push
lds
pop
fwait
(bad)
in
mov
and
xor
inc
hlt
xor
in
pop
jo
iret
mov
inc
loopne
add
aaa
bound
sub
dec
jns
lds
pop
loopne
(bad)
sti
lock
dec
aam
movs
scas
setge
mov
jno
sub
sub
and
loop
movs
add
dec
dec
push
push
retf
mov
mov
xlat
retf
dec
xchg
jmp
xchg
xor
sub
mov
or
push
and
push
sbb
inc
aaa
push
ret
pop
and
cmc
popa
mov
push
xchg
and
ret
dec
and
jmp
fisub
std
jmp
leave
xor
imul
jne
sahf
pop
movs
retf
inc
add
nop
test
int3
sbb
test
fldl2e
pop
or
test
and
fwait
sbb
in
imul
aas
mov
sub
rol
pop
adc
pop
xchg
dec
cmp
fild
pop
cmp
cmp
xchg
test
dec
retf
lods
lock
leave
fadd
shl
xor
mov
mov
gs
inc
cmps
mov
shl
nop
jg
mov
mov
cmps
push
lods
ss
jge
push
std
pop
outs
adc
xchg
ret
adc
out
mov
adc
push
pop
cmps
push
mov
fisttp
jb
jmp
inc
jmp
mov
or
adc
imul
mov
mov
add
(bad)
sub
mov
dec
xor
cmp
fstp
inc
scas
lods
(bad)
jg
jb
jl
jmp
pop
fwait
pushf
(bad)
and
pop
retf
dec
inc
or
das
cmp
test
or
jbe
jge
push
dec
xchg
adc
or
xor
mov
dec
pop
and
add
out
(bad)
popf
test
mov
cmps
call
lods
leave
mov
(bad)
(bad)
popa
repnz
cdq
jmp
into
(bad)
into
(bad)
fcmovne
mov
push
jmp
cli
mov
aas
xchg
xchg
push
out
add
mov
popf
mov
add
arpl
imul
push
add
push
test
add
stos
(bad)
in
sbb
je
jne
cmps
movs
in
jb
adc
pop
retf
and
dec
dec
out
and
pop
rcl
push
ret
jb
xchg
popf
dec
call
xchg
repz
push
xchg
test
das
jmp
cvtps2pi
cdq
in
(bad)
rol
xor
push
mov
in
sub
cmp
dec
cmp
dec
movs
mov
push
cmp
shl
sahf
arpl
adc
push
cwde
test
aam
mov
idiv
retf
bound
xor
sbb
jmp
cmp
in
jb
push
test
test
in
sub
ret
and
loop
stos
or
imul
inc
cmp
imul
mov
lock
pusha
mov
lea
frstor
jg
scas
mov
mov
and
jmp
mov
mov
in
(bad)
movs
ja
pop
inc
outs
stc
sbb
and
fisubr
ins
ins
jp
daa
cld
scas
imul
mov
jl
andnps
out
cmc
in
dec
out
mov
dec
mov
(bad)
add
popa
ds
nop
aad
xor
cmp
inc
imul
jbe
pop
mov
leave
je
aad
xor
lods
jmp
mov
data16
mov
adc
and
repz
mov
(bad)
mov
pop
push
repnz
jl
or
std
mov
ss
(bad)
ds
fdivrp
jge
aas
paddsb
stos
adc
jp
dec
mov
aam
xchg
sub
stos
push
call
mov
or
loopne
push
sti
(bad)
mov
push
cli
data16
push
or
xchg
and
push
ret
push
out
push
test
xchg
jbe
ret
int
arpl
jno
mov
lock
and
repz
xchg
hlt
int3
push
or
movs
pop
jne
mov
mov
sub
imul
dec
shl
cmps
int
inc
dec
lahf
xlat
push
mov
adc
call
push
xor
mov
or
(bad)
ins
cmpxchg
popf
out
aaa
mov
(bad)
fwait
mov
sbb
dec
mov
and
cmp
xchg
out
ins
dec
xor
inc
xor
pop
ja
aad
out
mov
xchg
sbb
pushf
cmp
push
xchg
sbb
or
sub
xchg
dec
fmulp
and
lea
mov
fmul
fs
in
push
xchg
pop
shl
mov
xchg
mov
jecxz
lea
int
test
and
xor
repz
cdq
mov
in
int3
sbb
hlt
aas
(bad)
mov
sub
fmul
sbb
cmps
getsec
push
rcl
sub
dec
xchg
fs
sub
(bad)
jmp
xchg
xchg
xor
xchg
enter
inc
ret
sub
sbb
cmp
mov
jmp
test
xor
sbb
mov
std
int3
nop
push
std
pusha
jbe
inc
cmp
retf
mov
adc
xchg
or
ret
sbb
shr
pop
dec
scas
ficomp
iret
pop
pop
dec
(bad)
push
popf
dec
imul
popf
dec
aaa
movs
imul
js
(bad)
jge
test
mov
lods
iret
add
pop
jp
cmp
sti
push
pop
or
jmp
inc
dec
shl
icebp
or
pop
jb
add
sbb
jb
inc
scas
aaa
push
out
push
mov
cmp
mov
mov
sub
push
rep
push
jmp
aaa
or
xlat
cmp
(bad)
iret
mov
adc
jmp
addr16
jmp
aaa
bound
nop
dec
mov
mov
xchg
(bad)
inc
stos
adc
mov
inc
mov
xor
(bad)
lea
sti
iret
cmp
mov
add
mov
rol
sub
pop
ins
cmps
push
jne
jae
div
mov
fld
je
pop
xor
mov
test
stos
sahf
jl
(bad)
es
cmp
lods
stos
mov
rcr
mov
mov
sar
lea
int3
fsub
imul
cdq
dec
or
out
data16
sahf
inc
idiv
addr16
adc
jg
push
xor
pusha
xor
inc
mov
adc
jmp
ret
sbb
add
push
add
cmp
xchg
jae
jb
fbstp
mov
ror
nop
(bad)
fnstenv
ret
sbb
ss
xor
cwde
pop
enter
and
test
cmp
retf
shl
xchg
shl
outs
mov
fnsave
retf
sbb
mov
and
cld
cmps
push
data16
jle
shl
and
shl
xchg
xchg
fisub
lods
sbb
out
dec
loop
mov
push
inc
ja
jnp
repnz
push
xor
rol
push
jae
(bad)
pop
sahf
and
imul
inc
fwait
lds
inc
xchg
les
sbb
addr16
(bad)
jmp
xor
leave
cmc
arpl
(bad)
js
mov
loop
shr
cmp
xlat
jb
jp
mov
add
mov
in
test
js
adc
bnd
inc
iret
cld
push
jmp
inc
jg
popa
fwait
or
mov
pop
xlat
adc
pop
retf
adc
xor
shr
mov
lea
sub
mov
movs
mov
cmp
scas
or
lods
push
outs
cmps
in
cdq
mov
jb
inc
dec
dec
repnz
int
lea
jbe
daa
mov
arpl
mov
sub
adc
sbb
cmps
out
jmp
jp
xor
popa
or
cdq
mov
fild
inc
xchg
adc
xor
retf
and
mov
cwde
xchg
(bad)
mov
inc
mov
loope
retf
fld
bnd
inc
pushf
cdq
ret
jmp
gs
int
gs
dec
dec
jmp
cmp
mov
ins
lods
push
ins
cmps
addr16
call
lahf
xchg
push
arpl
xchg
inc
call
xchg
sbb
sbb
imul
sub
xchg
sbb
xchg
mov
int3
mov
xchg
xchg
mov
mov
adc
ror
mov
mov
sbb
nop
test
sub
xchg
jecxz
retfw
gs
or
enter
sbb
stos
and
and
leave
sub
xor
xchg
jmp
repnz
test
aaa
and
mov
pop
aam
imul
cmps
xchg
jbe
shl
into
stos
jmp
jae
and
int
mov
pop
imul
fsub
loope
jecxz
xchg
jge
xchg
cmp
scas
data16
sub
push
jge
xor
pop
adc
ror
mov
xor
cli
call
sub
pop
aad
dec
fstp
(bad)
aas
fsubr
cwde
dec
inc
mov
add
cmp
fsubr
aam
jno
fadd
nop
out
int
cld
xor
shl
cld
push
loopne
scas
mov
loopne
fisttp
in
xor
pop
jnp
repz
xor
aas
sti
(bad)
in
pop
sub
adc
adc
jae
wrmsr
or
pop
cdq
int3
call
mov
sub
cmp
push
xlat
mov
div
mov
push
mov
cmp
jge
iret
cmp
pop
fmulp
dec
sub
push
ins
in
popa
es
div
mov
jnp
jo
(bad)
test
xlat
div
mov
or
clc
mov
lahf
mov
jmp
or
cmp
push
ficomp
jg
arpl
sahf
xor
repz
ficomp
push
rcl
inc
out
push
popf
mov
xchg
push
and
and
and
xchg
imul
adc
mov
das
dec
xor
fistp
push
mov
fwait
xchg
icebp
cmp
dec
mov
mov
mov
adc
mov
in
xchg
movs
adc
out
(bad)
es
icebp
sbb
jge
xchg
cmp
cdq
jno
pop
inc
gs
mov
mov
shl
fstp
push
mov
dec
pushf
cli
mov
adc
daa
xor
(bad)
xor
in
call
mov
arpl
xchg
mov
int
(bad)
rol
inc
retf
or
mov
int3
jmp
stos
stos
dec
fidivr
leave
int3
fisttp
jne
cwde
push
loopne
imul
ror
xchg
ins
jge
clc
in
mov
xchg
popf
mov
fisubr
shld
push
retf
xor
add
mov
mov
retf
cdq
push
aas
shr
cld
leave
cmp
cmp
dec
inc
mov
aaa
mov
out
lds
push
cdq
mov
sbb
mov
xchg
pop
add
xor
inc
or
mov
mul
enter
inc
(bad)
push
jge
enter
test
mov
sbb
cmp
inc
in
fs
jg
pop
std
(bad)
mov
jno
repz
jns
mov
mov
hlt
fild
mov
scas
or
call
pop
or
add
add
cld
and
into
pop
cmp
or
jg
loope
add
cli
mov
es
jl
push
dec
jle
or
adc
call
mov
jae
push
or
mov
mov
cmps
push
cmc
xor
xchg
add
fdiv
repnz
xor
fwait
pop
(bad)
push
xor
int3
mov
sub
or
pop
adc
ss
(bad)
pop
jl
mov
jmp
outs
push
mov
aaa
push
sbb
xor
ins
jg
xchg
idiv
mov
popf
mov
adc
mov
add
ja
inc
sub
mov
lods
inc
ret
shl
xchg
retf
sub
xor
jo
mov
arpl
iret
in
cmps
jno
cmp
ins
push
loope
out
jae
int3
jae
out
iret
loopne
imul
int3
in
dec
cld
jle
xor
out
cmp
je
mov
add
mov
mov
pop
mov
dec
cmps
dec
sahf
leave
ficomp
dec
mov
mov
stos
(bad)
aam
bound
sub
xlat
adc
mov
clc
lods
and
ds
mov
lods
ret
push
pop
sbb
call
or
pop
mov
adc
mov
jbe
dec
adc
std
ret
repnz
out
popa
adc
jp
outs
aad
std
sbb
add
les
mov
mov
sbb
ds
adc
push
test
mov
repz
mov
xchg
push
(bad)
int3
(bad)
ficomp
popa
nop
mov
xchg
outs
fnsave
js
mov
sub
inc
cmc
cmp
mov
xchg
mov
repz
fcmovu
les
dec
jmp
les
outs
int3
int3
data16
test
inc
adc
jge
addr16
out
jecxz
iret
icebp
xchg
sub
fld
pusha
and
cmp
mov
sti
add
mov
fwait
std
ss
jge
mov
lock
pop
and
data16
das
stc
add
mov
or
sbb
mov
shl
fsub
shl
inc
(bad)
div
dec
cwde
out
mov
xchg
jae
ja
into
out
adc
pop
imul
ja
push
je
push
int3
loop
jge
lods
cmp
arpl
in
aaa
adc
mov
shl
pop
xchg
cmc
shl
mov
adc
inc
mov
mov
je
inc
xor
add
pushf
mov
lods
in
gs
inc
retf
arpl
add
add
std
and
jne
xchg
ins
and
fld
jl
movs
pop
jb
mov
inc
cdq
les
cwde
lods
icebp
in
ins
mov
xchg
push
arpl
shl
sets
loop
add
push
fimul
ins
leave
and
fiadd
sbb
out
jecxz
push
jge
xor
xchg
pushf
sbb
icebp
inc
and
dec
adc
mov
ficom
hlt
dec
xor
(bad)
out
add
shl
cmp
call
cmp
sar
xchg
test
xor
jbe
inc
cmp
dec
pusha
cdq
lds
inc
out
jno
out
das
add
mov
mov
mov
mov
pop
shr
sbb
cmp
iret
xor
jno
mov
mov
rcl
lahf
or
pop
and
(bad)
je
call
repnz
cld
test
popa
push
retf
out
(bad)
imul
mov
add
pop
inc
repnz
fldenv
cmp
adc
inc
rol
pop
mov
xor
add
push
jb
pop
(bad)
jmp
push
xchg
mov
sub
add
movs
jg
shr
ror
xchg
inc
sti
push
inc
cli
push
push
aas
mov
and
pop
mov
int3
add
push
movs
add
jge
fwait
jbe
pop
dec
mov
shl
mov
or
push
add
cwde
test
call
movs
arpl
shl
sbb
retf
loopne
adc
fs
sbb
push
pushf
sbb
jp
(bad)
adc
sbb
outs
mov
fnstcw
sub
pushf
mov
sbb
cld
push
ins
add
sub
out
cmp
pop
and
jb
ret
adc
mov
es
add
pusha
test
es
ja
jae
and
cmp
out
das
add
and
outs
ins
sbb
mov
and
dec
shl
cmp
pop
or
icebp
fwait
enter
int
xchg
test
sbb
out
cli
push
pop
inc
int3
cmc
cmp
xor
mul
cli
xor
outs
mov
sub
das
in
dec
shl
fs
enter
dec
fcmovbe
(bad)
sub
pop
xchg
xor
mov
cmp
inc
mov
xor
adc
loop
cmp
cwde
or
fisubr
xchg
inc
jecxz
bound
stos
adc
pop
repz
xor
out
loope
ds
cwde
in
mov
mov
xor
sub
in
(bad)
fnstcw
add
mov
mov
mov
dec
cmp
cmp
(bad)
jmp
(bad)
idiv
(bad)
mov
int
mov
sub
stc
cmp
icebp
mov
xor
sbb
pop
mov
dec
add
xchg
jb
mov
push
dec
cwde
adc
xor
push
test
inc
xor
xchg
adc
shl
jecxz
add
movs
cwde
or
imul
repz
ja
imul
and
pusha
adc
cmp
or
cs
cmp
jmp
inc
inc
inc
fmul
mov
xor
jns
jo
dec
out
lds
test
push
push
les
into
movs
shr
jmp
sub
or
fs
jp
inc
lahf
leave
rcr
inc
add
ins
fbld
mov
es
sbb
mov
shl
fcom
mov
and
mov
push
std
(bad)
fisttp
xchg
adc
test
mov
inc
add
int3
mov
mov
in
cmp
dec
cmp
popa
cld
sbb
stc
out
lods
in
pop
mov
rol
jnp
movs
pop
cli
fwait
mov
iret
xchg
(bad)
and
jge
jno
inc
inc
fild
jecxz
popf
sub
ds
add
sub
adc
scas
add
jmp
and
aad
sub
imul
dec
mov
out
sub
ret
mov
repz
jae
dec
push
arpl
fisttp
jae
mov
xchg
sbb
fld
xchg
add
pop
clc
jbe
xor
mov
ret
inc
jnp
call
pop
retf
and
cmp
movs
rcl
add
loop
lods
xchg
sbb
jo
ret
cmp
mov
data16
jg
sbb
popa
cmc
xor
ins
inc
and
test
cmc
inc
push
mov
xchg
adc
adc
xchg
adc
inc
push
fs
sbb
sbb
pusha
sub
sar
mov
inc
div
test
clc
test
mov
rcl
sub
mov
or
sbb
sbb
inc
sar
loopne
pop
rol
shl
mov
lahf
fldcw
push
pop
(bad)
cdq
or
int3
pusha
jo
fs
push
arpl
add
or
add
pop
jg
adc
push
mov
fnstsw
add
int3
jl
(bad)
mov
cmp
and
inc
inc
das
pop
cld
push
jb
sub
push
rcr
or
add
ret
test
mov
add
ret
retf
das
loopne
in
imul
mov
sub
test
pop
jp
mov
sbb
hlt
pop
mov
outs
mov
and
imul
fbstp
pop
mov
cmps
xor
scas
daa
pusha
dec
in
repz
es
repnz
jge
cwde
xlat
repz
(bad)
int3
pop
stc
das
push
jb
pusha
sub
aam
call
xchg
retf
xchg
or
cmc
daa
mov
aaa
(bad)
in
inc
add
outs
xor
cmps
inc
pop
aad
push
dec
add
cmp
xor
ins
outs
mov
sbb
inc
xchg
xchg
or
bound
sahf
cwde
test
add
add
loop
jbe
jmp
jne
and
imul
add
shl
repnz
mov
sbb
pop
dec
jg
leave
fcomp
mov
mov
popa
cld
vpsrad
div
out
cmp
pop
or
ins
(bad)
adc
adc
rcl
data16
out
jae
jo
test
sti
das
fmulp
jge
outs
dec
xor
jo
dec
xchg
ret
mov
push
sahf
repz
add
jl
xor
jo
or
pop
xor
ret
popf
(bad)
call
inc
and
xchg
js
lds
rol
rcl
mov
jl
sar
cs
xchg
xor
sbb
and
and
xor
(bad)
dec
and
in
cmp
cmps
lods
sbb
loop
fwait
push
fmul
and
lods
sub
js
sub
cdq
mov
add
sub
xchg
or
adc
sbb
sahf
pusha
(bad)
mov
bound
into
push
imul
adc
repnz
adc
repz
pop
inc
dec
fs
or
adc
outs
xor
xchg
mov
xchg
xor
or
push
and
retf
test
lods
outs
sbb
cmp
jecxz
xor
and
shr
div
fs
aad
aam
inc
dec
push
push
sbb
ja
cmp
xor
push
pop
imul
sbb
xchg
jp
test
loop
cdq
dec
shr
add
fld1
add
xchg
outs
jle
sbb
push
ja
sbb
(bad)
out
and
or
add
add
(bad)
arpl
es
pop
mov
jle
pop
add
adc
test
add
add
leave
adc
jnp
lods
dec
mov
rcr
add
add
jns
or
jno
sub
push
mov
mov
mov
(bad)
cmp
pop
xor
sub
out
popa
mov
call
test
das
cmp
cmp
imul
sub
sub
inc
add
sar
dec
mov
xchg
shr
dec
imul
adc
jno
vpcmpgtd
leave
adc
(bad)
lock
mov
jecxz
loopne
sub
push
add
mov
data16
add
cmp
mov
dec
sahf
in
std
push
dec
mov
pop
out
inc
and
xchg
cmps
addr16
adc
mov
stos
inc
push
mov
xchg
jns
lahf
sub
cmp
mov
ss
(bad)
in
add
popa
sbb
fisubr
out
xchg
inc
int3
retf
nop
and
xor
push
test
int
daa
(bad)
int
es
cmp
retf
in
cwde
xchg
jnp
iret
sbb
sbb
scas
inc
fwait
xchg
xchg
mov
sbb
mov
dec
outs
test
repnz
or
xchg
sub
sub
loopne
shl
gs
inc
call
shl
loopne
sbb
lahf
push
xor
loopne
repnz
adc
pushf
mul
sahf
add
pop
je
jae
aam
push
push
bound
dec
xchg
stc
scas
add
lods
add
sub
jne
out
int3
mov
sbb
fs
adc
add
add
ror
ret
fisub
inc
sbb
ds
es
out
push
sbb
int
mov
(bad)
jae
adc
mov
mov
data16
cdq
sbb
or
mov
call
test
addr16
(bad)
sti
gs
xchg
sti
dec
inc
icebp
es
shl
outs
add
mov
mov
and
fisttp
pusha
movs
loope
pop
inc
jecxz
xchg
or
int
cmps
arpl
js
fs
bound
pop
xchg
jne
(bad)
mov
mov
pop
pushf
mov
clc
into
and
stos
gs
add
shr
mov
add
and
and
leave
pop
stos
in
(bad)
leave
jp
es
div
rol
stc
add
pop
jno
scas
es
mov
pushf
in
xor
push
(bad)
and
mov
and
sub
movs
pshufw
xor
jmp
call
jnp
jle
nop
rol
shr
aam
cli
cmp
jl
dec
add
sub
test
dec
iret
mov
lahf
enter
xor
add
ds
add
lods
cmp
test
je
push
xor
fisub
out
out
push
pop
loopne
add
div
inc
mov
es
inc
or
cwde
or
xchg
test
adc
stc
popf
out
ins
or
cmp
xor
inc
cmp
imul
icebp
sbb
adc
popf
mov
add
clc
lods
pop
jg
xchg
rcl
push
adc
pop
mov
dec
mov
push
pop
or
cmps
xor
pushf
mov
and
cmp
cmp
sbb
mov
xchg
xchg
scas
in
aad
mov
sub
xor
or
pop
jns
push
daa
adc
cmp
pusha
(bad)
lods
cmp
mov
jmp
out
out
xor
arpl
add
aam
fcom
lods
addr16
sbb
mov
arpl
pop
pushf
xchg
xchg
jnp
and
inc
movs
test
mov
xor
add
frstor
mov
sub
in
sub
stc
and
lods
rcr
sub
mov
dec
add
mov
jmp
sub
and
push
cmp
stos
jecxz
mov
mov
push
bound
in
push
jb
push
(bad)
scas
adc
jb
jl
repz
data16
loope
adc
pop
cmp
mov
pushf
jno
cmp
loopne
mov
push
xor
mov
stos
out
jnp
retf
lahf
jmp
and
mov
fst
adc
mov
mov
stos
scas
nop
pop
ret
cmp
fsub
loopne
out
fisub
jb
in
xor
push
or
xchg
cli
mov
or
xchg
cmp
push
push
mov
or
or
enter
and
mov
not
mov
xor
sbb
adc
ins
cmp
outs
xor
icebp
es
in
sbb
mov
pop
lods
cmps
popa
jae
mov
mov
shl
push
push
adc
xchg
pushf
jne
mov
faddp
jns
xchg
push
adc
and
xor
mov
or
retf
and
inc
and
cmp
lds
xchg
pop
idiv
lea
xor
add
repz
lock
add
les
and
ret
outs
aad
retf
call
add
or
dec
int
sub
fcom
mov
jecxz
jo
jno
mul
neg
arpl
adc
out
pop
popa
xor
repnz
push
add
and
xchg
add
cmps
lods
pop
mov
mov
repz
mov
retf
in
xchg
mov
std
arpl
dec
aad
mov
jae
sub
ja
xchg
popa
push
shr
(bad)
jnp
(bad)
xchg
pushf
lock
ret
cmp
push
pop
adc
adc
lock
dec
adc
stc
(bad)
ficom
movs
add
sbb
xchg
xchg
mov
popf
xlat
xchg
sbb
or
mov
cmp
enter
fs
mov
inc
and
add
outs
mov
cwde
pop
dec
mov
lods
dec
pop
lods
xor
cs
xchg
mov
les
pushf
dec
lds
and
mov
outs
hlt
fs
loop
xor
lods
lods
mov
cmps
je
pop
sub
cli
inc
xchg
mov
jge
in
xor
xchg
cdq
mov
cmp
(bad)
in
clc
adc
sub
cmp
adc
cmp
xchg
pop
sub
dec
(bad)
shl
neg
(bad)
test
shr
inc
mov
lods
nop
xchg
mov
aam
mov
cmp
ret
call
shl
in
bound
out
mov
test
add
jmp
sti
pop
or
scas
inc
sar
out
int3
xchg
fild
add
jecxz
repnz
or
add
call
or
aad
push
mov
retf
dec
inc
dec
daa
inc
xor
mov
and
rcr
pusha
and
out
imul
push
dec
xchg
aad
neg
imul
ss
dec
mov
cmc
add
mov
int
int
dec
push
xchg
ss
or
fld
es
push
adc
sbb
stos
call
or
dec
push
btr
arpl
add
gs
pop
inc
sbb
xor
fistp
les
dec
add
mov
add
push
loope
sbb
popf
cdq
(bad)
stc
sar
lods
ins
test
test
test
sub
sub
jp
lods
sub
xor
and
retf
add
clc
outs
idiv
adc
leave
push
sub
stc
dec
adc
push
dec
jmp
inc
sbb
lods
stc
mov
push
sub
call
mov
sub
mov
jp
jnp
pop
and
sbb
add
xor
add
jmp
and
inc
mov
sti
dec
or
inc
popf
in
dec
push
mov
cdq
dec
pop
ror
repz
mov
test
xor
mov
shr
xchg
das
pop
pop
jmp
sub
test
sub
and
jmp
cmp
scas
xor
mov
movs
cmp
mov
dec
pop
icebp
mov
pop
das
cmp
xor
jmp
fld
push
out
xor
loop
int
aaa
mov
jns
fstp
xchg
jae
idiv
lods
jg
add
fs
fwait
pusha
xchg
pop
mov
ja
mov
and
adc
cmp
inc
ins
and
add
jmp
dec
xor
mov
imul
xor
js
je
xor
xchg
pcmpgtd
fiadd
sbb
sub
cmp
stc
adc
pop
and
xor
dec
sub
test
adc
push
jo
xor
cmps
lahf
or
lods
popa
outs
xor
push
xor
xchg
imul
push
fnstcw
es
cmp
mov
stc
movs
jnp
retf
pop
ret
mov
sar
popf
mov
add
dec
add
xchg
and
(bad)
push
sahf
and
leave
xor
data16
and
cmps
movs
xor
push
and
pop
or
retf
xchg
adc
jp
mov
jno
xchg
xor
mov
ins
xchg
dec
(bad)
cmp
mov
xor
cmps
bound
xor
in
outs
cmpxchg
cs
sbb
loope
test
lock
add
into
mov
pop
dec
ret
jge
mov
lods
mov
sub
dec
rcl
sbb
mov
or
xor
in
push
inc
jno
jb
das
inc
arpl
nop
pusha
ss
jmp
pop
xor
fmul
pop
or
movs
inc
push
xlat
lahf
pusha
rcl
mov
jno
repnz
fiadd
cmp
jb
into
xor
push
jnp
call
mov
mov
xor
popf
sbb
cs
sbb
sbb
enter
(bad)
lahf
sbb
pop
js
and
dec
or
dec
add
mov
inc
mov
clc
out
and
nop
stc
lods
es
cmc
cmp
add
or
popa
mov
cs
xor
add
jmp
jg
movs
dec
mov
sbb
out
mov
(bad)
sbb
sbb
cdq
aaa
sbb
jo
clc
or
mov
lahf
int3
jmp
or
xchg
fdiv
mov
call
test
xor
inc
int
mov
xchg
jne
mov
ret
jmp
and
leave
aaa
adc
sar
ja
icebp
stos
(bad)
fisubr
ins
call
leave
mov
push
retf
mov
pop
and
in
pop
lods
iret
mov
cmp
pop
fcmovu
push
dec
pop
je
mov
xchg
adc
pop
int
ret
jmp
or
mov
or
dec
pop
push
fwait
lea
xor
repz
cdq
pusha
(bad)
call
arpl
push
adc
mov
lock
xor
xor
(bad)
vbroadcastf64x4
ret
sbb
add
sbb
iret
rol
add
push
ret
test
test
xlat
outs
popf
dec
retf
cmp
imul
sub
adc
or
test
sub
lods
enter
ret
lods
push
add
pop
add
rcl
leave
les
jne
pop
(bad)
xor
xchg
add
add
idiv
mov
iret
jae
cmc
(bad)
retf
mov
imul
ds
mov
sbb
xchg
in
pop
sbb
mov
aad
sbb
jle
in
add
inc
lods
imul
add
fld
int3
xor
lahf
jmp
sbb
sub
out
xchg
add
cmp
xchg
(bad)
mov
(bad)
(bad)
repnz
sub
in
cmp
dec
test
dec
mov
adc
cwde
mov
fst
mov
cdq
push
add
lahf
leave
fwait
leave
ret
sub
cmp
loope
add
mov
inc
(bad)
out
lea
and
mov
add
push
dec
pop
cmc
jae
enter
push
(bad)
enter
sub
xor
leave
inc
pop
add
add
ds
xchg
les
mov
nop
xchg
add
aas
push
sbb
add
fs
sbb
pushf
loope
xor
add
icebp
or
xchg
mov
and
jbe
loope
das
daa
add
add
iret
mov
jae
or
inc
jb
pop
lds
dec
ret
loope
jl
inc
or
loop
js
add
push
cmp
inc
mul
mov
add
cmova
lahf
scas
aas
ds
ss
sbb
mov
xor
ficomp
je
fnstcw
leave
cmp
mov
mov
sub
add
inc
cdq
movs
or
sub
es
or
out
xor
aam
mov
sub
inc
mov
(bad)
lods
and
adc
adc
xor
push
mov
retf
jb
lods
sub
fiadd
xor
out
stos
mov
and
jg
jge
je
mov
fidiv
xchg
mov
adc
sahf
add
movs
mov
mov
rcl
(bad)
sub
xchg
jns
icebp
stc
cmp
xchg
push
lock
hlt
fiadd
add
mov
div
dec
ret
pop
cwde
jle
cwde
pop
jmp
pop
movs
or
cdq
push
scas
shl
lods
or
lahf
mov
ds
or
jg
push
imul
dec
pushf
addps
iret
cdq
(bad)
les
adc
push
dec
inc
mov
ja
xor
test
sub
cmp
bound
cs
add
pusha
xchg
pop
xchg
shl
jb
(bad)
neg
sub
loopne
adc
xor
movs
sti
popa
repnz
push
stc
adc
gs
repz
mov
sbb
pop
movs
retf
fmul
(bad)
sbb
xor
hlt
popa
pop
stos
fidivr
out
(bad)
popf
dec
inc
jns
add
dec
jp
(bad)
adc
aad
sahf
fstp
pusha
add
mov
lahf
or
stc
lahf
test
mov
js
pushf
leave
jg
pushf
fxtract
bnd
inc
pop
out
sbb
hlt
fwait
cmc
sub
jne
std
inc
cs
inc
stos
add
movs
inc
fstp
(bad)
jb
pop
xchg
fiadd
popf
pop
xor
ins
ins
adc
add
xchg
add
es
jle
sbb
push
pop
xchg
sub
ja
dec
imul
or
lds
enter
push
xor
test
add
mov
cld
inc
xchg
sub
sub
adc
inc
out
dec
xor
mov
jns
push
cmp
dec
daa
mov
sub
dec
push
adc
or
push
gs
loopne
mov
mov
or
leave
fdiv
adc
sbb
push
mov
and
or
clc
dec
(bad)
ror
mov
jns
add
sub
cmps
cli
xchg
push
bnd
pop
(bad)
mov
add
fs
jmp
jne
dec
add
mov
pop
mov
imul
in
int3
or
ins
fidiv
add
or
sub
adc
pop
mov
sbb
xor
dec
or
add
pop
(bad)
fwait
in
adc
mov
mov
xchg
jo
xchg
leave
cmp
xchg
xor
mov
fidiv
sbb
iret
daa
ins
lahf
add
es
gs
ret
(bad)
shl
mov
in
ficom
and
sbb
add
in
sub
retf
ja
jp
sub
mov
push
xor
mov
sub
inc
push
sub
sub
(bad)
or
or
cmp
pop
xchg
(bad)
into
es
dec
xchg
dec
add
(bad)
cmp
pop
std
sub
pop
sbb
mov
mov
sub
or
shl
movs
cdq
cmp
dec
and
and
cwde
in
cmp
data16
adc
sbb
or
in
sub
in
(bad)
out
inc
cdq
test
repnz
aas
adc
dec
and
xor
arpl
xor
sbb
mov
rcr
push
mov
or
push
arpl
scas
out
test
and
or
push
jo
nop
sub
mov
stos
cmps
jno
out
adc
add
stos
arpl
idiv
pop
add
mov
jmp
test
push
xor
int3
repz
mov
outs
xchg
jo
xchg
mov
jmp
inc
mov
sub
(bad)
jle
jmp
icebp
cld
jmp
push
dec
inc
add
push
shl
lea
bound
cmp
jp
dec
push
test
xchg
icebp
pushf
jnp
movs
cmp
mov
loop
xchg
xchg
xor
div
sbb
js
lea
adc
jb
data16
pop
add
push
push
xchg
mov
data16
movs
mov
adc
fwait
push
sub
jle
inc
addr16
push
mov
adc
mov
inc
mov
dec
stc
pop
stos
add
xchg
and
mov
push
je
nop
cmp
in
sbb
out
hlt
add
stos
mov
xchg
add
push
cmp
lods
enter
add
adc
dec
rol
add
mov
aam
ret
pop
xchg
xor
cmp
iret
inc
leavew
cli
sbb
sbb
adc
pop
nop
sub
shr
cmps
test
xchg
adc
jo
clc
adc
mov
inc
sar
ror
jle
(bad)
repnz
ins
mov
repz
jecxz
fist
pushf
mov
inc
pop
add
cmp
repnz
push
push
mov
scas
cwde
xchg
inc
in
je
dec
js
bswap
xor
fist
nop
icebp
ins
mov
rcl
clc
out
adc
addr16
ins
(bad)
inc
pushf
int
daa
daa
mov
bound
pop
movs
repz
or
mov
jp
sbb
add
movs
cs
mov
adc
adc
leave
lods
push
je
in
sub
pop
into
scas
movs
mov
scas
shr
xor
pop
jmp
outs
pop
dec
stc
retf
in
dec
dec
test
loopne
sahf
int
mov
repz
lahf
add
pop
add
mov
ret
inc
mov
jle
and
push
repnz
pop
nop
aas
mov
or
pop
out
xchg
push
adc
ss
xchg
push
add
xchg
shl
adc
fwait
push
sbb
add
push
pop
jb
cmp
cmp
jbe
xor
mov
sbb
mov
add
jmp
and
push
add
xor
push
add
xor
add
loope
(bad)
or
xchg
fwait
bound
(bad)
push
(bad)
not
add
and
xchg
ins
push
fadd
and
out
inc
fnsave
mov
and
inc
inc
jnp
jmp
push
stc
inc
idiv
aas
sbb
shl
cmp
bound
and
sbb
mov
jg
or
add
ret
sti
imul
add
out
arpl
stos
adc
shr
xchg
xchg
repz
sub
stos
in
add
jns
push
push
iret
mov
jle
and
xor
xchg
es
ror
lods
loope
xchg
int
add
cmp
or
adc
rcl
sbb
nop
lods
mov
xchg
ja
pop
push
cmp
cmc
jecxz
jbe
sbb
rcl
mov
pop
cdq
ret
xchg
xchg
mov
or
int
or
push
std
inc
lods
sub
cmp
xor
mov
shr
cmp
adc
cmp
push
(bad)
push
setns
jae
push
inc
daa
ins
ret
popf
pop
scas
mov
pushf
xchg
lahf
mov
aad
(bad)
cdq
repnz
les
cmp
push
and
loop
clc
sub
mov
(bad)
sbb
test
cdq
(bad)
cmp
dec
sbb
sub
push
fwait
xchg
xchg
data16
xor
xchg
inc
call
mov
repnz
adc
scas
mov
xchg
xor
push
xchg
mov
cmc
(bad)
mov
adc
mov
fnsave
jae
inc
add
gs
sbb
push
jle
repnz
inc
fwait
adc
imul
outs
out
sub
(bad)
aaa
add
cmc
push
push
fisttp
mov
outs
mov
dec
jle
mov
fnstsw
sar
leave
cmp
movs
ds
xor
push
sbb
pop
dec
mov
dec
xor
test
lea
pop
cmp
cdq
jnp
ins
mov
xor
add
dec
(bad)
mov
lea
leave
inc
jle
pop
stc
inc
iret
mov
movs
out
mov
cwde
test
lahf
dec
stc
pop
ja
xchg
into
dec
scas
and
bound
test
adc
cmps
arpl
xor
(bad)
fst
ins
inc
test
dec
retf
sbb
mov
pop
add
push
mov
shr
pusha
fcmove
add
add
mov
mov
out
int3
hlt
adc
retf
int3
mov
shl
mov
gs
inc
dec
fst
arpl
jge
dec
pop
outs
icebp
adc
lods
pop
add
inc
daa
xor
mov
jmp
rol
mov
push
cli
and
in
jmp
pop
add
pop
mov
push
push
xor
lods
push
scas
adc
shl
dec
xor
sar
test
mov
out
and
shl
jmp
(bad)
sti
add
cs
push
into
xchg
retf
xor
xor
pop
mov
popa
in
dec
cmp
mov
ins
neg
xor
(bad)
xchg
xchg
dec
movs
ror
cld
xchg
xor
add
cmps
sbb
pushf
xor
retf
fs
push
enter
movs
pop
push
mov
add
cmp
scas
(bad)
aaa
test
je
dec
mov
jae
pop
lea
xchg
jno
cwde
rep
adc
jb
sub
add
inc
inc
pushw
jmp
xlat
nop
cmp
xchg
aas
div
xchg
inc
mov
mov
sub
push
sbb
pop
pushf
push
pusha
xchg
sub
clc
jb
retf
repnz
add
out
or
imul
mov
mov
and
add
imul
xchg
in
je
mov
popa
jo
aas
push
imul
fwait
xchg
xchg
lock
mov
mov
add
sub
ds
xchg
popf
push
push
xor
dec
push
cmp
shl
js
das
(bad)
call
sub
ss
pushf
pushf
sbb
jb
sbb
adc
cmp
jbe
jne
push
lods
pop
into
std
cmps
jge
icebp
cmp
jno
gs
dec
ins
rcl
das
adc
ds
add
add
std
mov
lahf
(bad)
(bad)
pusha
dec
add
xor
sub
rcr
inc
hlt
(bad)
fs
push
(bad)
pop
lods
dec
xor
sub
xchg
cmp
stos
push
jp
dec
cmp
int3
daa
and
and
push
loope
sbb
mov
fwait
jns
aad
sub
retf
je
jne
js
ss
and
and
mov
mov
fcmovnb
fisubr
push
sbb
call
fdiv
fldcw
xchg
ja
es
dec
pop
int3
cmp
sti
adc
into
ror
or
push
icebp
pop
or
mov
sub
xchg
sbb
xchg
and
dec
add
mov
adc
xchg
cdq
adc
pop
jecxz
or
out
adc
adc
xchg
inc
sub
pop
scas
ret
and
and
pop
stos
pop
xchg
jae
daa
hlt
sar
das
push
outs
or
test
mov
fldcw
inc
mov
test
push
sbb
cmc
and
fnstenv
jo
and
sbb
push
pop
loopne
jb
mov
push
push
out
push
xchg
adc
outs
test
outs
loop
adc
icebp
sub
fstp
xor
pop
add
dec
xor
jb
inc
mov
mov
push
rcl
add
retf
mov
mov
pop
lahf
out
iret
jb
fisubr
and
mov
fidivr
lea
stc
mov
pop
mov
sub
pop
xor
add
mov
pop
cmp
aam
mov
mov
(bad)
int
lahf
push
jb
ror
es
call
retf
(bad)
jl
adc
adc
xlat
sub
into
sub
push
test
hlt
dec
xchg
dec
lahf
ja
(bad)
lods
imul
into
mov
or
scas
nop
push
aaa
mov
ins
mov
int3
cmc
clc
(bad)
push
out
jmp
pusha
jmp
in
pusha
dec
mov
call
test
(bad)
int3
aam
and
dec
loope
cmp
jmp
xor
dec
add
call
int
push
xor
and
xor
ror
mov
fdivr
lods
sbb
iret
adc
(bad)
stos
mov
xchg
inc
leave
sbb
xchg
push
adc
pop
lea
call
int3
rcr
push
inc
fnstcw
xor
ficom
sti
ss
retf
push
rcr
pop
mov
mov
in
call
mov
ins
lock
jae
xchg
mov
push
jmp
xor
pushf
cld
push
mov
sti
stos
dec
sub
push
dec
jnp
jle
push
xor
rcl
ficomp
add
jno
sahf
addr16
sbb
mov
xchg
adc
jbe
cmp
nop
xchg
or
xchg
call
sub
push
pop
(bad)
xchg
retf
jge
lods
pop
mov
and
inc
pop
adc
add
pop
mov
je
mov
xor
mov
(bad)
lahf
pop
test
ins
jl
retf
test
xchg
add
pop
movnti
add
jmp
add
stos
add
mov
cmp
sub
dec
inc
lds
jns
add
push
pop
xchg
jo
loop
or
add
mov
add
js
push
(bad)
dec
fld
out
adc
cmps
and
push
inc
and
fild
sub
and
retf
pop
or
ret
add
sbb
sbb
pop
dec
aad
(bad)
popa
and
or
xchg
mov
sbb
repnz
cmp
arpl
pop
mov
les
push
add
push
nop
ins
jnp
into
aam
mov
xchg
mov
cwde
loope
das
(bad)
and
test
push
sti
stos
jp
pushf
test
test
mov
fidivr
add
dec
lahf
ins
adc
mov
(bad)
push
pusha
push
dec
aas
sbb
mov
popf
push
dec
daa
lods
mov
jmp
int3
xchg
rol
adc
sbb
fnstcw
cmp
mov
icebp
sub
(bad)
or
inc
je
or
cmp
dec
in
cli
xor
mov
retf
and
popf
cmp
pop
mov
push
jno
add
fld
mov
(bad)
mov
shl
test
imul
scas
mov
sbb
push
pop
gs
add
or
fistp
sbb
aad
adc
icebp
cmps
clc
xor
and
mov
in
in
push
aaa
sbb
push
cmp
int
mov
cdq
rol
setp
jp
jo
iret
sub
mov
cmp
adc
xor
aas
add
scas
call
add
jns
cmp
iret
repz
jbe
shl
lods
and
fs
das
mov
aad
cmps
popa
and
test
mov
call
movs
mov
push
rcl
mov
adc
xchg
loopne
ds
adc
push
sbb
imul
arpl
mov
test
ds
test
or
call
(bad)
les
cmp
dec
pop
sbb
js
inc
and
xor
imul
popa
retf
push
lock
sub
inc
jmp
clc
push
aaa
bound
xor
jae
xor
cmp
mov
enter
popa
sbb
sub
pop
jb
pop
repz
mov
imul
ins
jmp
shl
fiadd
fcmovnu
xchg
pushf
lds
dec
jnp
sub
and
lock
mov
add
add
int3
inc
mov
rol
and
fidiv
loop
sahf
sub
xchg
mov
adc
push
stos
rcl
adc
fs
outs
loopne
rol
xor
xor
shl
and
imul
shr
adc
push
sub
sub
in
cwde
inc
or
sub
mov
stos
lahf
sbb
int
cld
xlat
xchg
pop
das
sbb
jg
(bad)
aam
adc
loopne
push
add
adc
imul
repz
es
mov
cwde
in
scas
daa
cwde
push
pop
adc
cld
jno
lea
mov
or
sub
(bad)
in
add
fistp
mov
or
dec
xor
add
mov
mov
dec
js
push
in
rcr
sbb
in
stc
pop
ds
dec
sahf
mov
out
sar
cmps
out
popa
jl
push
xchg
lea
add
cmp
and
xchg
dec
cmps
shl
mov
mov
adc
push
ret
adc
je
test
jb
div
test
mov
aaa
in
pop
add
inc
xchg
push
sbb
repz
sub
pop
rdpmc
lods
and
mov
adc
daa
sti
and
cmp
iret
push
sahf
(bad)
or
mov
fld
pop
jbe
daa
sub
push
aaa
push
fnsave
xchg
and
cmc
ins
mov
or
push
or
stc
das
add
jb
outs
test
outs
xchg
cdq
or
popa
stos
das
or
xor
test
mov
mov
and
dec
push
mov
xor
es
retf
mov
sub
pop
fwait
js
cmp
pop
cs
add
data16
ss
test
xchg
dec
icebp
aaa
dec
adc
(bad)
xor
arpl
cmp
push
cmp
xchg
and
push
inc
aas
mov
ins
ds
fistp
cmc
pop
add
xchg
fstp
pop
push
mov
shr
fwait
dec
and
not
aam
repz
out
sahf
sub
cdq
movs
ss
out
adc
xchg
not
pop
adc
and
fdivr
jb
fscale
push
ds
mov
inc
adc
mov
inc
dec
addr16
xchg
xor
inc
int3
movs
mov
clc
lods
bound
daa
push
mov
and
cwde
mov
(bad)
hlt
inc
aad
sbb
es
adc
xchg
xor
jp
fimul
jns
push
xlat
dec
sets
add
push
jae
xor
mov
add
mov
sub
hlt
test
scas
test
jl
push
lds
cmp
jmp
xchg
xchg
(bad)
xlat
adc
fisttp
adc
sbb
idiv
push
xchg
and
in
mov
mov
mov
jns
dec
adc
mov
call
dec
sub
adc
or
add
sub
cmps
push
mov
add
clc
or
or
in
jp
mov
push
add
add
mov
enter
and
movs
aaa
or
into
and
and
nop
xor
bound
movs
xlat
xchg
adc
je
fsin
inc
test
dec
mov
sub
int
call
mov
ds
sub
and
test
add
pushw
movs
push
jno
(bad)
cmp
sub
in
jp
jo
or
sbb
mov
xor
ins
add
jbe
push
fild
or
xor
ss
out
xchg
xor
stos
sahf
add
pop
lea
jne
loop
add
dec
shl
dec
out
add
push
dec
leave
lahf
fcmovne
(bad)
(bad)
xor
mov
js
in
addr16
es
pop
cdq
aam
movs
or
adc
cs
inc
pop
push
aam
xchg
and
xor
arpl
rol
call
mov
adc
loope
xchg
cmps
div
or
rol
shl
and
jl
mov
mov
fild
inc
dec
inc
ja
mov
cmps
leave
(bad)
fucom
out
call
xchg
outs
jmp
test
neg
add
cmc
(bad)
cld
dec
jb
imul
lods
loope
jo
xor
(bad)
es
mov
sahf
and
xchg
outs
dec
fwait
dec
push
fs
leave
dec
das
jmp
or
mov
mov
xor
je
or
mov
stos
xchg
mov
xchg
shr
icebp
xor
pusha
sub
lds
getsec
adc
cld
dec
dec
(bad)
(bad)
jb
cmp
push
and
push
sub
adc
loope
adc
popa
out
jmp
test
ds
mov
sar
das
sysexit
fistp
sbb
das
or
pushf
sbb
inc
push
pop
jg
pop
fwait
push
xor
xor
pop
(bad)
cmp
dec
out
js
ret
stos
add
xor
leave
xlat
mov
mov
pop
(bad)
movs
(bad)
pop
scas
pop
shl
or
pushf
sbb
fsub
jne
push
sbb
jmp
inc
idiv
dec
out
sub
cmp
fistp
push
xchg
jle
or
or
addr16
push
and
sub
jbe
xlat
arpl
movsx
jmp
cmp
and
lods
addr16
stos
dec
cdq
das
aad
rcr
inc
imul
clc
fld
pop
pop
arpl
movs
adc
stc
xor
push
sbb
js
jge
mov
les
xor
dec
clc
outs
add
push
rcl
leave
xchg
add
push
sbb
les
out
shl
mov
test
outs
mov
js
fiadd
inc
outs
dec
sbb
jno
arpl
cld
das
adc
loop
mov
(bad)
jmp
pushf
test
fidivr
(bad)
and
mov
sbb
lahf
jecxz
xchg
sti
add
out
and
pop
test
clc
and
push
mov
xlat
je
es
mul
mov
scas
mov
push
sar
dec
outs
and
cmp
imul
push
dec
fnstsw
sahf
pop
cmp
(bad)
mov
scas
inc
loopne
test
jmp
jne
leave
adc
mov
push
rcr
int3
dec
not
sti
fimul
rcl
pop
adc
or
and
imul
sub
out
jnp
mov
in
mov
adc
or
push
mov
aad
or
sub
jge
jp
je
into
push
inc
add
push
inc
push
xchg
jne
mov
test
into
mov
xchg
loope
stos
mov
pop
scas
sti
jle
stc
xchg
mov
cmps
inc
out
fisub
inc
sub
into
jne
cmp
outs
stc
mov
pop
mov
sub
(bad)
adc
or
ret
out
mov
xchg
and
add
clc
pop
mov
cmp
lock
jnp
popa
mov
add
call
iret
ret
dec
xor
pop
pop
out
adc
push
adc
test
(bad)
sub
pop
dec
stc
and
das
inc
es
mov
je
add
mov
jo
pop
pusha
jb
test
add
and
arpl
shl
loopne
dec
ins
xchg
loop
sub
or
adc
pop
(bad)
mov
and
inc
neg
movs
fld
fidiv
lahf
xor
fcomp
mov
test
ins
xor
(bad)
sub
movnti
dec
ins
retf
mov
cwde
sahf
dec
cmp
and
adc
cdq
iret
retf
icebp
mov
and
jmp
xor
int
pop
push
aad
call
dec
cmovl
dec
iret
dec
bound
loope
ds
and
icebp
mov
mov
add
sub
inc
sbb
scas
aaa
leave
jb
adc
mov
cmc
mov
mov
push
xor
mov
cmp
dec
xchg
(bad)
sub
cmps
xchg
jno
dec
push
pop
je
mov
cli
test
jnp
or
jo
ret
xor
mov
jbe
stos
cmp
lea
inc
fsub
cs
outs
loopne
cmp
call
mov
shl
adc
retf
push
(bad)
mov
fcmovnbe
and
cmp
loopne
mov
cmp
lods
loope
adc
pop
es
fcmovnu
adc
fs
mov
xor
ja
stc
fwait
pop
daa
xor
push
gs
xor
movs
sub
into
aas
shl
xor
test
inc
mov
pop
sbb
push
push
(bad)
jmp
popf
sub
bound
lods
push
push
cmc
sar
cmps
mov
mov
or
fnstenv
(bad)
fs
and
call
xchg
fnstenv
sbb
ret
or
cmp
out
rol
add
jp
jne
call
pop
pusha
xchg
mov
in
adc
imul
in
push
(bad)
repz
inc
fucomi
dec
xor
push
ret
sub
or
inc
push
pop
sbb
mov
mov
stc
add
sub
inc
pop
adc
mov
push
test
inc
std
inc
mov
popa
addr16
dec
mov
mov
pop
fisttp
int
xor
mov
sub
imul
iret
nop
movs
mov
movs
iret
xlat
xor
(bad)
add
xor
test
mov
out
retf
jb
ja
test
adc
aaa
repnz
and
lds
adc
aaa
mov
imul
aas
cmp
jecxz
int3
xor
xor
bound
cmp
cmps
jmp
cs
cmps
xor
lock
sbb
or
clc
dec
add
push
xor
push
sub
dec
sub
sbb
push
enter
or
add
lods
into
and
fimul
dec
and
ss
addr16
sbb
jl
loop
mov
(bad)
popa
dec
data16
fisubr
jae
sub
and
dec
push
add
scas
ins
adc
and
pop
cmps
and
sub
outs
add
add
fsin
ins
xchg
imul
and
inc
sbb
xchg
sbb
int3
inc
cdq
fst
and
pop
sbb
xor
mov
popa
lea
fnstsw
jae
inc
outs
and
punpcklbw
hlt
inc
movs
fsincos
and
cmc
or
and
and
pop
stos
push
xchg
adc
add
stos
into
or
test
add
push
gs
cmc
rcl
mov
xchg
rcl
shl
sub
jecxz
(bad)
ror
pminsw
arpl
jb
les
cmp
xor
xor
jmp
or
adc
test
nop
pop
and
movs
nop
js
add
push
jl
fyl2xp1
xor
jp
add
mov
ins
mov
test
dec
sub
sar
idiv
dec
(bad)
mov
xor
jp
stos
cmp
dec
fnop
(bad)
push
mov
test
add
jmp
iret
imul
pop
add
add
retf
adc
repz
inc
test
xchg
mov
sub
lods
push
ret
ret
aam
mov
dec
imul
imul
pop
not
xor
lds
lock
cmp
pop
dec
cwde
jl
cmp
mul
xchg
sahf
inc
cdq
jmp
jmp
xchg
dec
and
popf
ss
int
call
fmul
cwde
dec
xor
in
cmps
in
int3
ret
xlat
(bad)
xor
dec
pop
dec
dec
xor
sbb
xlat
das
mov
xchg
dec
nop
mov
sahf
in
push
fadd
pop
pop
aaa
fwait
mov
ja
pop
sbb
lods
fidivr
rol
cmps
cmp
mov
js
cli
add
mov
scas
daa
inc
cwde
sbb
add
sub
retf
xor
int3
xor
rol
(bad)
retf
mov
data16
into
cmc
rcr
shl
retf
cld
sub
(bad)
xchg
or
xor
dec
xchg
xor
xor
int3
retf
movs
ins
jl
out
cdq
mov
xor
jmp
jno
adc
jp
mov
or
adc
stos
mov
idiv
lahf
inc
fwait
inc
pop
lock
xchg
ret
mov
stos
xor
add
ins
cwde
cmps
xchg
clc
mov
mov
les
sbb
fmul
sub
movs
lock
ror
mov
aad
repnz
es
ins
clc
(bad)
daa
add
cwde
or
nop
push
rcr
adc
ja
push
ds
outs
popa
ins
rcl
mov
daa
into
pop
dec
lods
mov
dec
xor
cmp
sbb
sub
xchg
add
add
xchg
icebp
jl
sub
ret
pop
cmp
push
add
cmps
push
rcl
push
adc
jg
add
inc
xor
add
push
and
icebp
pop
pop
xchg
pop
cdq
pop
xchg
pusha
xor
push
lods
jle
adc
pop
push
jnp
and
push
jge
add
add
pop
js
outs
mov
pop
mov
imul
enter
xor
shr
fwait
rcl
stos
jl
dec
(bad)
push
jb
add
mov
sub
sub
sbb
mov
pop
jbe
xor
in
jns
test
xchg
jl
out
pop
(bad)
add
pop
mov
clc
mov
xor
stc
aas
mov
std
pushf
mov
repnz
dec
in
dec
mov
sbb
jge
or
pusha
push
ret
push
aaa
push
mov
inc
out
gs
xor
int3
jl
dec
vmovapd
std
stos
call
pop
es
std
mov
add
out
arpl
shr
dec
retf
jmp
inc
shr
shl
stc
arpl
cwde
and
(bad)
retf
cmp
xchg
ss
lsl
mov
xchg
shl
data16
scas
leave
xchg
jno
mov
arpl
ret
add
jp
adc
pop
xchg
push
push
xor
mov
pop
clc
adc
xchg
dec
dec
cmps
pusha
sbb
icebp
pop
daa
lods
jle
mov
mov
cmp
repz
sub
fucomip
arpl
jle
pop
mov
lods
cld
lods
sub
sub
je
stc
mov
sub
(bad)
pop
pop
jmp
pusha
push
loop
adc
test
addr16
leave
jno
ds
fs
pop
mov
xchg
ins
xor
out
jmp
cmp
lds
mov
mov
test
pusha
mov
add
inc
push
stos
sahf
pop
or
sbb
push
add
fisttp
dec
mov
push
pop
gs
jbe
push
mov
cld
ins
mov
shr
or
frstor
inc
mov
imul
pop
jns
xor
push
retf
inc
adc
lods
mov
scas
enter
or
repz
ja
and
mov
inc
and
xchg
add
inc
shl
jbe
dec
enter
sub
jb
mov
mov
inc
pushf
into
je
sbb
fdiv
cmp
sbb
cmp
jmp
sbb
adc
cmp
mov
mov
xor
jae
push
aam
cmp
xchg
(bad)
sbb
call
aam
ficomp
ds
rcr
jae
(bad)
fnstcw
xor
ins
outs
mov
dec
das
mov
push
das
push
jg
(bad)
fnstcw
pusha
ds
aam
jmp
xor
pop
nop
sbb
cmc
(bad)
scas
cmps
sub
add
xchg
cmps
or
(bad)
ins
add
inc
mov
mov
int
loope
cwde
mov
sahf
inc
mov
or
test
das
inc
pop
outs
inc
repz
mov
adc
(bad)
xchg
ret
add
add
push
sbb
stos
call
std
mov
cld
test
(bad)
jmp
sub
mov
(bad)
mov
xchg
adc
mov
out
test
jp
sbb
pop
out
lock
xchg
fadd
sti
inc
fisttp
dec
scas
push
jbe
div
stos
inc
push
cmps
sar
inc
sbb
xchg
pop
cwde
inc
adc
cs
mov
dec
ret
add
add
pop
cmp
frstor
xor
jecxz
es
cdq
movs
cmp
sbb
adc
push
mov
pusha
cli
jmp
adc
sbb
jnp
sar
rol
leave
mov
push
jae
shl
fcmovne
popa
xchg
jmp
xor
ret
inc
imul
fcom
jp
out
leave
cmps
jmp
dec
iret
adc
in
add
push
and
cmp
mov
lahf
or
imul
in
mov
mov
adc
ret
and
sub
dec
fcomp
jne
mov
mov
xchg
jns
adc
fimul
push
mov
mov
es
(bad)
retf
mov
fld
cmp
jns
mov
push
and
clc
adc
fbld
imul
pop
mov
lods
or
mov
push
lahf
inc
lea
stc
lock
imul
ret
mov
dec
in
mov
push
add
dec
pop
test
lock
xor
int
pop
push
ja
aad
sub
push
sbb
loop
or
jb
jno
mov
mov
xchg
dec
test
cmp
pop
push
idiv
fcomip
xor
mov
cmp
push
call
mov
je
add
xor
pop
cmp
lods
sbb
push
les
and
mov
shr
mov
mov
xchg
dec
mov
icebp
leave
and
xchg
(bad)
cmps
jmp
adc
jns
sub
icebp
or
js
sbb
retf
fs
jmp
xor
jo
jmp
ja
jne
popa
cmp
cmp
inc
iret
and
or
test
out
sub
adc
addr16
fadd
cmps
outs
or
mov
xchg
mov
cwde
in
jmp
(bad)
fdivr
sbb
cs
scas
push
sbb
in
mov
sti
lods
cmp
frstor
cmp
ror
(bad)
rcl
pusha
sbb
dec
mov
and
jmp
xor
pop
mov
push
sti
lea
std
sub
mov
add
push
div
icebp
lea
mov
mov
inc
mov
stc
xor
sbb
push
adc
pop
les
push
imul
mov
and
mov
cdq
test
sub
lahf
(bad)
adc
in
dec
inc
out
test
es
pop
(bad)
cwde
ins
nop
bound
ror
inc
clc
xor
push
(bad)
dec
add
fcmovne
jg
ds
add
aaa
hlt
out
pushf
repz
mov
out
add
aam
xchg
mov
dec
mov
jl
cmp
adc
cmps
int3
mov
(bad)
out
add
xor
jb
loopne
(bad)
dec
push
xchg
leave
adc
mov
cdq
out
int3
jl
and
pop
inc
sub
push
or
js
cmp
jb
sbb
and
inc
mov
cmc
mov
mov
out
xchg
jne
jecxz
cs
add
add
fild
inc
mov
test
jbe
jne
sub
add
mov
jmp
adc
int3
fdivp
dec
push
outs
jnp
jecxz
mov
add
dec
mov
dec
jns
sar
sar
addr16
add
jmp
xchg
inc
mov
jg
nop
push
daa
sbb
loope
ins
dec
cmp
leave
pusha
js
sbb
sub
mul
ficomp
jbe
pop
jmp
xor
enter
enter
stos
cmp
dec
jecxz
mov
inc
adc
xchg
inc
fsubp
out
xor
push
mov
dec
cwde
add
xchg
cmp
loop
jmp
fld
out
fiadd
fwait
sub
sub
mov
or
push
addr16
call
jns
rcr
cwde
nop
cs
push
mov
mov
(bad)
sbb
push
jns
mov
jle
mov
call
mov
pop
scas
(bad)
ins
xor
xor
movs
add
enter
jmp
stc
mov
sahf
pusha
inc
sub
arpl
vshufps
loop
out
cmp
mov
loope
mov
add
pop
inc
jae
jnp
or
test
inc
push
stos
cmp
popa
ins
push
outs
or
sbb
inc
sbb
or
cwde
and
shl
ins
daa
xchg
dec
call
out
ins
out
mov
test
jae
pop
jb
(bad)
fisubr
cmps
pop
mov
in
sub
mov
sbb
xchg
hlt
mov
dec
sub
push
test
inc
mov
mov
mov
retf
or
dec
imul
out
pavgw
lods
sbb
jge
adc
jmp
mov
dec
out
rcl
sbb
push
xchg
jnp
push
xchg
pushf
(bad)
mov
jg
xor
ja
leave
dec
add
push
push
xor
dec
outs
cmp
adc
mov
adc
idiv
js
add
mov
popa
pop
ficomp
ins
pop
fiadd
cmp
and
inc
test
pop
cmc
clc
cmps
adc
aam
ret
sbb
ins
dec
cmp
xchg
aaa
les
mov
cwde
mov
out
shr
fadd
adc
and
loope
or
sub
lahf
call
sbb
cmp
mov
cmp
out
xor
add
mov
mov
aas
cmp
in
jg
add
cwde
pop
and
inc
mov
add
out
sti
rcl
loopne
xor
jnp
mov
cmp
inc
pop
add
add
cs
jb
and
xchg
sbb
jno
fistp
out
sub
dec
scas
pop
sub
rcl
je
jns
push
scas
ins
iret
xchg
pop
jbe
fdivr
ja
cmp
push
fsubr
js
pusha
mov
inc
aas
(bad)
pop
test
cld
out
push
xchg
pusha
daa
(bad)
div
xchg
inc
outs
retf
cwde
dec
pop
and
movs
xor
or
aaa
ss
cmp
pusha
sbb
sbb
add
xor
aam
mov
mov
cli
add
xchg
cwde
ss
push
ret
movs
shr
pop
cmp
jmp
out
cs
in
sahf
add
jmp
mov
push
out
xor
adc
into
(bad)
and
sbb
mov
mov
xor
add
mov
iret
sub
cmp
jmp
sbb
fstp
jnp
jge
jmp
fcom
xor
cwde
xchg
(bad)
pop
or
cwde
mov
lahf
sbb
mov
je
inc
push
into
add
dec
out
rcr
xor
adc
sbb
push
enter
out
pop
cdq
and
mov
mov
mov
cwde
mov
div
xchg
out
ins
jbe
jmp
mov
jl
mov
jmp
call
xchg
sub
test
retf
retf
js
jbe
jg
xchg
sbb
and
and
test
mov
ret
gs
mov
out
retf
or
int
loope
inc
cmp
jnp
arpl
cmp
std
sbb
(bad)
sub
push
mov
xor
sbb
pop
mov
leave
sti
sti
cwde
les
jmp
and
push
imul
xor
pop
push
outs
push
or
add
push
cmp
pop
popa
fdivr
xor
addr16
xor
add
pushf
out
or
adc
sbb
lods
stc
icebp
(bad)
xchg
mov
loopne
sub
jmp
jecxz
movs
lods
(bad)
jle
lock
fisubr
(bad)
adc
cwde
test
cmc
mov
ficom
push
nop
mov
fsub
sbb
xor
xor
inc
sahf
pop
(bad)
test
xchg
icebp
mov
shl
mov
dec
xor
push
mov
lea
mov
aad
test
lea
sahf
inc
les
fcom
add
xchg
xlat
jnp
sbb
mov
jnp
xchg
cmp
inc
jmp
sub
or
pop
iret
rdtsc
sub
fisttp
and
mov
icebp
lods
mov
pusha
pop
adc
sub
mov
(bad)
cmp
sbb
cmp
in
in
push
cmc
hlt
test
dec
push
cmp
sti
mov
loop
add
je
jmp
ss
adc
repz
dec
sbb
mov
fwait
aas
cmc
lods
or
mov
mov
je
adc
fsubr
dec
mov
scas
jge
adc
call
adc
test
inc
retf
xor
adc
xor
sbb
fs
popa
adc
in
(bad)
mov
jnp
mov
and
out
jns
mov
xor
xor
add
pop
leave
adc
shl
sbb
sar
push
fistp
or
pop
mov
lahf
(bad)
cwde
repz
mov
pop
jg
imul
retf
fwait
dec
daa
or
xchg
adc
mov
jl
iret
out
mov
jge
js
popf
aas
sbb
pop
pushf
fild
mov
push
mov
push
jl
lds
sbb
mov
ss
out
sub
cmps
lock
movs
adc
cmps
pop
xor
leave
jnp
out
adc
add
ret
push
rcr
sub
hlt
jl
retf
movs
cmp
lods
xchg
mov
mov
dec
es
fwait
clc
mov
xchg
dec
add
jecxz
pop
adc
sub
push
sbb
or
cmp
(bad)
loopne
jmp
popf
mov
cmp
jle
sub
xlat
arpl
jns
repz
dec
cmp
sbb
dec
xor
dec
mov
ficomp
push
je
js
mov
push
xor
xchg
add
lds
xor
lods
ins
pop
adc
leave
xor
jno
sar
ret
pop
ds
cs
es
dec
mov
aad
jle
not
dec
daa
repnz
pop
cmps
sti
nop
loope
popa
imul
fimul
dec
mov
jae
jae
(bad)
js
cmp
cmp
icebp
clc
(bad)
arpl
fiadd
retf
xchg
push
scas
loope
fld
inc
cmp
lods
xchg
xchg
or
add
push
test
sbb
mov
and
inc
mov
xor
dec
cmp
push
mov
cmp
ins
cmc
ret
mov
xchg
jo
retf
jmp
(bad)
into
out
adc
shl
fsubr
push
push
xor
(bad)
aas
enter
push
fsubr
dec
or
int3
mov
test
addr16
sub
arpl
xor
jecxz
mov
fistp
imul
sub
aam
cli
out
add
mov
data16
pop
jns
cmp
ror
popa
aad
jb
jb
jae
fcomp
dec
jbe
push
in
jge
pusha
and
sti
adc
jns
inc
pop
mov
adc
jge
xchg
cmp
and
ror
sub
aam
test
jecxz
gs
or
xchg
xor
lds
pavgb
call
(bad)
push
inc
je
mov
cmp
cwde
inc
rcl
addr16
jmp
sti
jns
imul
xchg
jecxz
cmp
adc
test
jge
sub
cmp
dec
and
add
mov
sti
push
inc
jl
je
sar
sbb
cmp
int3
dec
call
sar
jg
push
jnp
xchg
cmp
ins
pushf
xchg
pop
addr16
ret
and
mov
sti
cwde
popa
xchg
mov
inc
fnsetpm(287
mov
jg
fld
test
inc
cs
pop
xlat
inc
stos
sahf
jns
add
push
in
jp
rcr
cmp
and
push
shr
sar
mov
inc
cdq
mov
imul
mov
jl
jl
pop
mov
data16
push
sub
mov
mov
or
jne
pop
je
sbb
int3
rcr
cmp
dec
cmp
mov
push
ja
jnp
out
loope
cmps
out
jmp
leave
sbb
inc
and
clc
and
push
cmp
mov
popa
test
scas
les
out
outs
xor
jl
cmp
and
xchg
dec
lds
into
les
rcl
fistp
pop
repz
mov
jb
cdq
xchg
loope
into
cmp
retf
sub
inc
outs
popa
jle
into
fistp
hlt
add
sti
jno
lods
and
int3
and
addr16
rcr
mov
dec
jp
jmp
pop
(bad)
mov
xchg
mov
ins
inc
mov
mov
(bad)
out
outs
xor
popa
retf
scas
inc
scas
jno
pop
and
std
outs
vsqrtpd
js
aad
jl
push
inc
push
mov
push
js
mov
popa
sbb
gs
call
dec
loopne
mov
scas
jne
add
xchg
ffreep
mov
sbb
in
in
sbb
clc
leave
mov
outs
retf
add
xor
(bad)
mov
(bad)
mov
xor
pushf
clc
out
sbb
sti
sar
mov
ret
sub
(bad)
mov
fisub
pop
out
sub
in
pusha
out
jno
and
into
and
push
pop
fndisi(8087
xlat
xchg
cmp
call
mul
mov
(bad)
cmp
mov
or
mov
jbe
imul
enter
and
or
mov
arpl
fiadd
aad
call
push
cmc
or
jnp
add
jecxz
inc
mov
pop
xabort
mov
jp
ss
(bad)
mov
ret
and
ror
push
in
hlt
ror
mov
push
add
inc
sbb
jmp
in
adc
hlt
xchg
aam
(bad)
lea
cmp
mov
stos
mov
xadd
mov
rcr
mov
inc
cdq
dec
mov
adc
ds
add
stos
inc
popf
sub
add
adc
dec
mov
movs
rcr
cmc
aam
stos
lds
lds
push
sbb
mov
cdq
lahf
mov
pushf
stc
inc
mov
lock
sbb
push
mov
in
mov
or
and
out
cmc
popa
out
call
mov
loop
loope
push
pusha
sub
sub
repz
rcl
push
push
and
lahf
add
call
fwait
test
jns
mov
and
mov
xor
ja
pop
adc
loop
in
sbb
lods
push
cmp
fisubr
push
outs
(bad)
sub
in
mov
aaa
jbe
and
sub
xor
vpmovmskb
inc
jnp
hlt
les
inc
mov
cmp
push
(bad)
(bad)
leave
ins
rcr
cmp
in
out
push
and
jbe
retf
ss
or
jbe
movs
data16
mov
das
pop
fs
add
mov
push
fdiv
sahf
mul
es
mov
push
or
fucom
mov
fcom
and
mov
add
jg
rcr
and
call
adc
cwde
adc
fmul
stos
dec
les
fs
push
test
std
sub
cmp
ja
int
ffreep
fwait
dec
xchg
ffreep
fwait
pop
jl
adc
sar
pop
popa
jmp
jle
xor
(bad)
rcl
popf
loop
or
push
jecxz
push
test
adc
inc
cli
retf
cs
es
lods
jmp
out
jge
data16
call
out
mov
push
arpl
mov
test
out
xor
cmc
pop
cmp
mov
pop
jmp
cld
jecxz
imul
addr16
lods
mov
adc
mov
ins
les
mov
and
jae
sti
sub
sbb
fstp
addr16
mov
jae
in
adc
sub
es
ficom
jmp
pushf
xchg
ret
or
rcr
push
out
fadd
pushf
cli
sbb
enter
out
(bad)
mov
cmp
stos
add
not
pop
(bad)
(bad)
fild
mov
jl
sub
sub
pop
out
retf
cwde
push
add
in
adc
sbb
push
loop
lods
xchg
sbb
adc
(bad)
adc
mov
scas
shr
cmp
int3
dec
mov
pop
ins
jle
pop
pop
dec
or
cmc
bound
clc
sar
cwde
nop
push
xor
mov
cld
ds
pop
(bad)
xor
and
popf
(bad)
mov
ja
cmp
mov
push
fldenv
mov
jbe
add
jp
ror
sar
jae
mov
dec
std
ins
lods
jns
xor
pop
mov
pop
loopne
add
mov
cmp
hlt
and
fcomp
xor
jns
xlat
pop
pusha
mov
jp
inc
add
push
lock
repz
inc
loopne
jp
mov
dec
loopne
js
mov
aam
(bad)
sar
popf
loopne
or
pop
(bad)
loope
les
movs
stos
out
stos
in
jge
dec
adc
cmp
shl
dec
jb
pop
pop
popa
jbe
dec
jmp
out
dec
loop
xchg
sti
dec
sar
dec
jl
cmp
cmps
leave
(bad)
xchg
mov
xchg
pop
inc
mov
cs
stos
dec
cmp
(bad)
add
add
or
jge
cmp
jae
or
push
push
jge
adc
push
ins
int3
outs
xor
sbb
add
cmp
out
push
icebp
sub
out
int3
inc
lods
aaa
or
push
mov
ficom
pushw
shl
pushf
xlat
(bad)
xchg
and
dec
sub
cli
rcr
pop
popa
mov
fist
add
(bad)
mov
mov
lock
xchg
pop
xchg
ret
ror
into
pop
cli
fild
enter
inc
add
call
div
lahf
sti
sub
fs
ret
popa
adc
jg
inc
cld
stos
jns
jno
ror
push
stos
or
iret
inc
(bad)
jns
outs
js
pop
dec
and
sub
imul
aam
and
(bad)
push
stos
mov
ret
ja
xchg
rcl
jo
mov
xchg
mov
sar
retf
mov
call
test
mov
out
mov
ficomp
push
sahf
sbb
jecxz
add
fdiv
xor
add
push
push
addr16
dec
arpl
retf
add
icebp
mov
aad
cdq
mov
mov
push
mov
repnz
lds
xchg
movs
ret
int3
mov
clc
push
mov
scas
arpl
cli
inc
xor
int3
(bad)
pusha
cmps
sub
es
in
daa
cwde
popf
sbb
and
add
jl
xor
and
shr
sbb
pop
mov
fimul
jb
loop
adc
sub
je
or
sar
and
into
test
push
lds
or
cwde
pushf
sub
icebp
jne
push
das
enter
pushf
jl
or
push
aas
jae
cmc
sahf
out
pop
dec
ss
push
push
mov
cmps
fbld
imul
sub
popa
jle
mov
add
add
loope
shl
xchg
aas
xor
(bad)
cs
pop
stc
(bad)
js
pushf
inc
mov
into
pop
add
(bad)
jbe
stc
inc
fcom
div
xchg
mov
mov
loopne
ins
repnz
sub
shl
push
bound
aaa
ret
cld
addr16
jnp
dec
adc
(bad)
in
mov
cmp
rol
(bad)
cmps
mov
add
fcomp
cmp
enter
in
pop
enter
xchg
pop
add
push
inc
test
add
ror
xor
stos
stos
mov
jecxz
sbb
dec
mul
aad
cmp
xlat
mov
(bad)
xor
mov
push
pop
inc
pop
cld
xchg
add
jnp
in
das
xchg
repz
les
movs
cwde
aad
cwde
jl
call
fs
rol
not
loop
mov
and
pop
mov
and
inc
test
push
push
int
jmp
xchg
stos
pop
repnz
arpl
mov
shl
mov
scas
xchg
bound
cwde
rcl
rcl
mov
add
and
adc
scas
add
cwde
cs
cmp
xor
mov
stos
add
pop
lea
out
pusha
es
gs
repz
push
xor
pushf
cmp
and
push
enter
cmp
outs
dec
mov
lods
pushf
imul
xchg
inc
clc
jge
add
adc
and
outs
pop
push
out
fs
mov
lods
std
enter
cwde
inc
daa
aas
sbb
bound
xor
dec
mov
sub
loop
jecxz
sub
pop
aas
and
ins
out
cs
sbb
cmp
pop
lea
add
movs
add
or
push
or
(bad)
pop
fs
rcr
idiv
add
shl
inc
dec
push
adc
xlat
jno
sub
fcom
in
xor
inc
dec
pop
and
fild
fst
cmp
jns
pusha
adc
repnz
mov
jb
adc
jle
test
clc
add
rol
add
sub
arpl
outs
push
jo
jmp
mov
fnsave
cld
xor
pushf
inc
and
sub
jg
or
cmp
or
inc
imul
mov
ret
mov
sti
push
ror
adc
retf
mov
cli
mov
xchg
add
jns
add
push
push
add
inc
mov
sub
mov
ror
(bad)
ret
mov
gs
add
add
in
mov
int
ja
loope
inc
pop
mov
or
cli
and
repz
out
mov
jl
cwde
test
pop
inc
fptan
es
add
rcl
adc
mov
out
xlat
jns
out
sbb
pop
cmps
or
or
fdiv
add
ss
pop
in
add
pop
ret
js
xchg
inc
daa
add
sahf
in
(bad)
mov
(bad)
jge
mov
add
sub
in
test
sti
sahf
and
out
daa
in
and
sub
jnp
mov
and
or
and
(bad)
arpl
push
stc
aad
repz
pop
fwait
jae
adc
jmp
call
cmp
mov
add
fcomip
pop
fld
pop
call
lods
push
push
xchg
mov
mov
mov
inc
lahf
in
xlat
mov
bound
jb
fisttp
out
mov
scas
loope
iret
inc
adc
stc
mov
les
js
repz
push
jae
xchg
xchg
xchg
mov
icebp
push
jle
daa
push
call
cli
jnp
xchg
cmc
int3
out
arpl
mov
(bad)
fiadd
push
dec
jmp
add
test
pop
xchg
addr16
(bad)
sub
cmp
out
jecxz
sbb
and
es
lea
jbe
jmp
cmp
dec
cmp
stos
lds
scas
push
mov
adc
add
jmp
pusha
mov
adc
xchg
add
in
fs
and
mov
jp
cmps
and
(bad)
adc
adc
xor
movs
cmp
js
mov
pop
clc
pop
xor
sub
pop
or
pop
popa
and
adc
inc
fild
or
ret
pop
and
in
mov
cld
xor
sub
popf
jl
jo
adc
push
push
vmulsd
inc
repz
add
hlt
sbb
jge
push
ret
jo
fistp
fs
cld
cmp
sub
or
(bad)
sub
or
fs
movs
cmp
loopne
in
cmp
xor
pop
ret
cld
push
rcr
mov
xchg
push
bound
jmp
or
lahf
add
cli
pop
sbb
pop
scas
sbb
icebp
loopne
not
cld
ss
ja
mov
sub
inc
pop
jl
adc
pop
sub
dec
pop
mov
sti
push
cmp
lods
cmp
pop
xchg
mov
shr
mov
adc
sti
adc
call
lds
ss
xchg
jno
and
mov
cmps
mov
cwde
adc
shr
pop
call
jbe
mov
pop
add
jnp
adc
repnz
out
das
add
adc
in
add
(bad)
out
lods
ret
daa
xlat
clc
(bad)
jo
inc
ret
xor
jae
pop
push
push
ret
mov
inc
inc
dec
jno
daa
add
cli
fdiv
ret
add
and
add
sar
out
add
in
retf
push
lods
(bad)
retf
cmp
pop
fiadd
mov
rcl
stc
int
add
inc
popf
pop
and
mul
jne
cmp
ret
xchg
pop
wrmsr
addr16
outs
div
cmps
pop
xchg
out
jo
test
jl
pop
jno
and
cmps
repnz
or
iret
dec
mov
adc
fs
dec
ss
inc
int3
dec
loopne
leave
push
xor
dec
cmp
push
stos
fild
leave
cli
sar
and
ja
xchg
sar
scas
outs
cmp
loopne
mov
popf
lahf
mov
hlt
add
jo
inc
movs
retf
xor
push
(bad)
fld
repz
lds
loope
ins
xchg
sbb
lds
pusha
push
sbb
xlat
add
clc
jg
xor
hlt
dec
in
add
(bad)
aaa
out
jne
xchg
jle
test
push
test
jnp
dec
xor
mov
repz
fstp
add
dec
mov
ins
and
mov
sub
mov
xor
sbb
push
mov
xor
loopne
pop
mov
mov
mov
mov
jle
aas
and
cmp
popa
push
in
push
adc
jle
add
aad
cmp
ins
or
jb
out
cmps
mov
pop
or
xchg
lsl
ret
jno
out
std
nop
enter
mov
push
repz
add
test
out
push
js
stos
pop
mov
xor
(bad)
push
mov
mov
pusha
(bad)
mov
ja
mov
int3
pop
xor
div
and
lock
sbb
jb
iret
adc
rcl
shl
mov
in
adc
jns
sahf
adc
add
mov
ins
add
mov
std
into
gs
ror
cmp
xor
daa
xchg
gs
lock
sbb
dec
hlt
sbb
loope
pop
ret
inc
pusha
sbb
icebp
xor
rcl
in
test
nop
cmp
jns
cmp
daa
ret
adc
aaa
in
out
in
nop
dec
jb
pop
adc
push
or
pusha
and
pusha
cmp
jns
enter
out
sub
cmp
hlt
cmp
fwait
in
sar
jne
pop
xchg
inc
popf
stos
cmp
lods
inc
out
pusha
mov
data16
mov
enter
fwait
rcl
jnp
arpl
fs
test
(bad)
dec
bound
adc
repz
jge
mov
jb
call
cmp
pop
xlat
test
(bad)
shl
retf
ror
loopne
jo
or
add
outs
jae
xor
enter
outs
push
sub
jne
cmp
iret
loop
adc
cmp
ins
jl
jae
xchg
cli
aam
xchg
ds
push
add
cld
mul
out
loope
stc
push
and
push
or
cmp
icebp
inc
ret
xlat
ja
add
inc
into
daa
mov
cs
pop
test
hlt
mov
or
xchg
fcom
out
retf
pusha
mov
cld
mov
icebp
fcmovbe
push
add
add
jb
push
icebp
inc
add
ja
sub
fist
cmps
mov
sub
ds
cwde
add
jg
cmp
mov
sub
dec
add
xor
pop
add
mov
(bad)
(bad)
sub
shl
xchg
(bad)
cld
jp
cmp
sti
sub
outs
mov
in
jecxz
push
add
jg
scas
pop
sti
(bad)
js
cli
dec
shl
fsubr
sub
adc
xchg
call
mov
cmc
jae
imul
mov
outs
inc
xchg
cmp
adc
jno
mov
mov
test
aas
retf
pop
(bad)
mov
movs
pop
mov
mov
cli
loope
(bad)
int
xor
or
and
test
nop
push
cmp
sub
push
adc
rcr
aas
jb
test
jnp
jecxz
movs
push
icebp
fsubp
cmp
and
add
mov
cmp
popa
push
inc
jle
stos
xchg
iret
in
daa
adc
fisub
push
movs
xchg
ss
pop
or
push
jo
add
sbb
jae
sbb
jmp
inc
jp
jb
scas
mov
outs
mov
sub
test
jmp
jg
loop
mov
and
out
mov
sub
dec
adc
xlat
mov
push
scas
fwait
inc
pop
and
xor
push
movs
cmp
push
movs
pusha
cmc
rcl
lahf
ret
add
rcr
mov
inc
repz
or
mov
pop
inc
add
shl
and
js
neg
push
pushf
aam
(bad)
(bad)
shr
jo
pop
add
mov
sub
or
sbb
jge
mov
lods
imul
mov
fstp
ret
arpl
mov
xor
popa
cdq
popf
pop
mov
aad
outs
movs
mov
jnp
mov
mov
push
pop
push
add
pop
pop
or
dec
sub
shr
sbb
cmp
jnp
fdivr
xor
sub
scas
or
push
or
popf
add
push
mov
push
in
stc
in
jb
loop
cmp
arpl
js
or
pop
push
loop
pop
add
stc
mov
dec
push
(bad)
pop
addr16
or
mov
mov
xor
fwait
cmp
jno
add
cmps
cmp
ja
cmp
stc
cmp
add
ffreep
inc
not
dec
shl
es
ficomp
stos
add
in
dec
mov
and
out
arpl
lods
sub
push
(bad)
and
push
push
pop
and
(bad)
mov
das
add
ss
fstp
pop
mov
stos
jmp
and
add
push
jmp
sub
sar
es
fdivr
pop
cmp
jmp
fild
sub
sbb
in
cli
push
jnp
adc
fincstp
xchg
dec
ror
out
adc
clc
xlat
stos
inc
lahf
cmp
(bad)
adc
in
mov
mov
jnp
add
add
in
jnp
mov
sbb
bt
ja
js
sbb
movs
pop
mov
inc
in
loopne
jnp
inc
mov
scas
xor
gs
nop
push
lock
pop
rcr
mov
movs
pop
dec
fbld
jg
loopne
push
inc
lahf
or
fs
sbb
adc
pop
jle
cmp
push
or
cli
cs
cmp
sbb
out
movs
dec
mov
out
and
mov
push
jbe
sub
daa
adc
arpl
call
aas
(bad)
mov
(bad)
sbb
inc
add
xchg
xchg
jge
mov
(bad)
and
(bad)
cmp
aas
(bad)
shr
pop
adc
jle
fcom
xchg
dec
or
cmp
scas
push
push
pop
push
and
sbb
push
imul
aaa
std
jno
mov
dec
sbb
add
rcl
mov
call
adc
sbb
xchg
clc
push
dec
mov
rol
push
push
aad
cmps
push
icebp
pop
xor
inc
add
scas
dec
xor
out
ret
add
out
(bad)
rol
popa
push
popa
sbb
fisttp
dec
movs
xchg
inc
cmp
add
push
push
sbb
mov
or
clc
test
pushf
test
push
or
add
mov
xchg
adc
ror
inc
mov
fist
or
rcpps
xor
pop
or
mov
adc
cmps
sbb
pop
inc
mov
(bad)
cmp
jbe
jg
into
ja
jecxz
sbb
jne
ficom
add
add
int3
stc
in
adc
retf
mov
stc
les
out
mov
pop
retf
and
popa
and
ds
aaa
mov
in
imul
mov
pop
pop
(bad)
movs
addr16
sub
mov
or
loopne
push
lahf
fld
push
(bad)
mul
imul
es
mov
lods
xchg
cld
sbb
jb
sub
fs
scas
jle
pop
mov
push
cli
ins
jnp
and
call
rcl
push
xor
xor
push
test
cmp
popf
jg
add
xor
mov
mov
sub
mov
xor
imul
inc
jmp
fisttp
dec
into
bnd
or
iret
clc
cmp
(bad)
cmp
adc
pop
es
push
cmps
sub
enter
inc
jle
xor
(bad)
fdivr
movs
cmp
inc
adc
iret
fs
mov
out
dec
enter
loope
jns
mov
jge
(bad)
adc
aas
neg
mov
mov
fs
pop
or
adc
repz
jne
or
clc
movs
lock
sar
iret
jno
cmps
dec
sub
adc
ins
shl
or
sub
cmps
clc
cld
add
pushf
in
lods
lea
jnp
and
fs
xchg
pop
out
(bad)
loop
push
cmps
sti
stos
jb
xchg
in
push
aas
inc
mov
mov
push
out
test
bound
inc
adc
or
mov
in
xchg
jbe
cmps
push
adc
sahf
or
mov
pop
adc
mov
jmp
punpcklbw
mov
or
push
neg
ss
dec
inc
ds
cmp
cli
and
mov
adc
imul
(bad)
iret
xor
shr
cdq
mov
fwait
adc
xchg
ja
or
or
or
or
jl
mov
imul
cmp
test
in
cmp
jns
fiadd
stc
or
in
popa
jmp
jbe
fsubr
movs
in
add
inc
std
cmp
out
(bad)
jg
iret
test
in
(bad)
repnz
rcl
mov
outs
jecxz
jl
xchg
mov
les
lock
mov
mov
lods
xor
push
mov
cmc
push
and
or
neg
enter
in
rol
xor
rol
xlat
pop
sbb
mov
or
iret
imul
pop
xor
mov
mov
xor
sbb
sar
or
loopne
enter
fist
fstp
test
xchg
lock
cmp
popa
or
rcr
lds
mov
mov
jmp
and
and
addr16
mov
stos
cli
push
retw
sub
mov
mov
cld
push
clc
mov
push
and
dec
fs
sbb
cmc
repz
inc
ins
sub
mov
push
fscale
pop
add
sar
and
cld
cmps
add
xchg
jbe
pop
out
jns
in
fdecstp
fiadd
stos
xor
mov
mov
int3
in
ret
dec
lods
arpl
lds
pop
cwde
ss
in
jmp
inc
out
inc
fwait
or
xor
shl
clc
cli
fcomp
jge
sar
ret
out
or
rol
cmps
inc
fadd
sub
pop
add
jb
dec
es
mov
out
xchg
ja
imul
inc
mov
ret
test
idiv
cs
icebp
and
jecxz
std
lea
pop
(bad)
xchg
imul
push
mov
int
push
sbb
add
in
sbb
in
popa
xor
int3
jbe
outs
mov
es
dec
sbb
hlt
dec
pusha
sub
add
mov
pusha
push
cmp
or
icebp
dec
push
inc
sbb
imul
add
ret
sub
ret
mov
lods
xchg
out
jge
xlat
xchg
scas
and
test
and
pop
or
xchg
inc
int3
jo
lods
ja
pusha
add
or
sub
loopne
das
sar
add
lock
xchg
add
add
loopne
lods
test
bound
repz
cwde
pop
jp
xchg
and
enter
mov
cmp
ja
xor
dec
mov
jmp
(bad)
jnp
mov
adc
add
rcl
cs
retf
ins
sbb
xchg
lods
jmp
jb
dec
ins
es
sbb
and
mov
out
pusha
mov
dec
and
in
(bad)
int3
fiadd
pop
add
jge
xchg
div
inc
(bad)
add
in
lea
repnz
mov
ja
xor
rcr
movntq
out
pop
std
dec
daa
sub
pop
call
imul
popf
and
or
movs
sar
mov
mov
sub
popf
push
stc
jl
movs
or
les
jl
xor
test
mov
pop
repnz
cmp
aaa
jmp
retf
aad
and
ficomp
movs
or
outs
jl
push
dec
popa
(bad)
pusha
dec
sahf
ret
repz
pop
sbb
loope
add
push
sbb
cdq
push
xor
mov
xchg
push
in
daa
sbb
mov
sub
mov
add
sub
pusha
mov
push
mov
lock
cmp
in
pushw
inc
sub
mov
stos
cdq
fdiv
add
pop
mov
add
push
cdq
mov
mov
enter
arpl
in
cmps
(bad)
shr
clc
pop
mov
fnsave
mov
es
cmp
ror
loope
mov
repnz
call
clc
jmp
retf
jbe
add
(bad)
push
and
push
lea
mov
inc
in
jbe
call
data16
inc
je
jne
mov
xor
xchg
sahf
add
outs
aas
sbb
mov
retf
adc
std
jmp
rcr
push
or
jecxz
inc
out
add
jo
iret
dec
std
xchg
and
add
add
push
push
mov
mov
push
mov
mov
xchg
aas
sar
pop
xchg
xlat
sti
sbb
adc
mov
aam
push
lods
jge
popa
outs
and
pop
jmp
pop
cdq
xor
cdq
jnp
and
xchg
les
shr
jnp
pop
(bad)
or
ret
pop
stos
xchg
inc
in
dec
(bad)
out
push
jns
ja
or
sub
push
xor
jnp
mov
test
and
add
aad
out
in
or
mov
adc
(bad)
sub
inc
cmp
lods
loope
pop
or
neg
xchg
pushf
test
mov
lods
dec
dec
sub
adc
push
lea
mov
jmp
add
cwde
ins
xchg
xor
arpl
or
dec
test
sti
and
cli
pop
pop
repnz
fadd
loop
sbb
call
movs
mov
pop
cmp
out
stc
adc
push
xlat
arpl
(bad)
add
bound
int
jbe
push
mov
or
push
(bad)
mov
pop
jle
xor
(bad)
not
push
and
test
add
or
les
stos
rol
aad
icebp
lahf
loope
sti
dec
cwde
cld
adc
xchg
das
cli
in
in
xchg
repz
sbb
cli
callw
into
(bad)
jb
adc
scas
(bad)
in
jl
(bad)
cdq
mov
out
mov
leave
cmp
adc
std
and
pop
jne
in
and
mov
popa
push
outs
adc
dec
mov
pop
bound
out
(bad)
xchg
addr16
mov
aam
ds
adc
ror
inc
adc
inc
jmp
mov
retf
dec
pushf
sbb
sbb
aad
or
mov
rol
jns
jb
stos
ret
add
dec
jbe
enter
mov
push
idiv
sbb
in
test
inc
sbb
jmp
test
cdq
dec
cmps
jmp
mov
xchg
xor
nop
push
and
stc
jae
xchg
mov
cmp
jecxz
call
xchg
daa
ins
adc
push
pop
dec
mov
outs
add
lods
adc
adc
pop
cmp
daa
push
cs
mul
rcr
aam
out
add
outs
int
push
pop
imul
imul
mov
add
mov
or
pop
mov
jp
repz
dec
fadd
dec
fmul
sahf
xchg
repnz
dec
jmp
jge
out
dec
loope
inc
mov
sar
mov
jb
aam
aas
push
pushf
popa
inc
lods
xchg
mov
fisub
mov
cmp
xor
or
int
ds
cs
loope
jo
loopne
xlat
push
and
pop
enter
push
jnp
push
or
and
stos
stc
push
xchg
mov
aas
rcl
sub
cld
push
sbb
and
fist
cs
aad
adc
or
std
jae
inc
enter
(bad)
pop
xchg
mov
or
or
repnz
add
xchg
xchg
or
xor
and
and
add
movs
rcr
(bad)
adc
jmp
test
leave
cmp
inc
xor
popf
data16
adc
mov
cmp
mov
xor
dec
aam
mov
adc
scas
(bad)
jne
out
cmp
and
or
pop
dec
mul
add
bound
mov
cmc
mov
out
mov
cs
push
movs
jo
mov
mov
mov
jno
mov
ins
add
idiv
jmp
ss
loope
add
into
inc
add
rcl
mov
(bad)
jmp
mov
nop
inc
lds
adc
hlt
popf
jmp
jne
js
call
push
repz
pushf
fnstcw
sub
dec
mov
add
jp
and
cmp
pop
xchg
and
test
pop
leave
pop
inc
jge
xor
mov
bnd
lds
pop
shl
shl
mov
mov
retf
fisubr
sub
call
in
fld
lods
in
push
mov
mov
jb
push
xor
mov
pusha
in
(bad)
add
inc
cmps
mov
xor
xchg
into
aaa
jb
sbb
das
(bad)
aas
mul
shl
iret
xor
retf
push
aaa
(bad)
fisub
adc
cmps
or
ret
lods
or
cli
add
stos
pop
ret
mov
call
or
(bad)
iret
mov
icebp
ficom
inc
and
jnp
in
add
push
ds
int3
cmps
in
mov
pop
mov
push
repz
push
mov
sbb
rcr
into
scas
outs
push
rol
adc
leave
fwait
sbb
sti
push
retf
or
mov
push
je
inc
fbld
js
out
mov
add
mov
xor
and
pop
add
push
shr
xor
(bad)
aas
or
pop
xor
pop
clc
aam
xchg
or
dec
and
lds
jecxz
mov
rcr
cmp
pusha
test
(bad)
pop
push
mov
mov
fsubrp
push
rol
clc
mov
pop
clc
leave
bound
mov
mov
mov
ss
add
cmps
lods
dec
cld
xchg
xchg
and
adc
jle
leave
pop
pusha
cmps
repz
das
hlt
add
sahf
and
inc
and
mov
jns
mul
sar
mov
shr
adc
or
jnp
mov
push
add
mov
sub
fadd
mov
fwait
sub
xchg
inc
cmp
inc
imul
jbe
call
leave
cdq
leave
ins
push
int
ins
sub
pop
inc
test
data16
jno
sar
mov
in
nop
cld
xchg
int
ficom
outs
fiadd
shr
jae
dec
enter
xchg
arpl
mov
xchg
adc
ins
retf
push
inc
sti
xchg
mov
cdq
xchg
mov
ss
dec
xchg
repz
inc
mov
enter
pop
int3
cli
(bad)
cmp
dec
loopne
cmp
loop
popa
adc
(bad)
inc
sbb
hlt
add
call
adc
push
mov
aam
lods
or
(bad)
inc
push
retf
nop
popf
fdiv
xchg
xchg
int3
pop
out
(bad)
pop
div
jl
pusha
add
loope
scas
inc
mov
aam
add
jb
test
dec
(bad)
cmp
pop
cli
adc
fldz
clc
inc
fs
mov
out
movs
sti
push
and
cmp
sub
je
ins
stos
xor
fdiv
xor
adc
mov
and
in
repnz
shl
(bad)
pop
imul
std
mov
lods
shl
leave
inc
ds
mov
shl
dec
ret
into
adc
inc
jae
adc
js
(bad)
mov
addr16
fbld
(bad)
cmp
arpl
in
mov
clc
mov
pop
fwait
mov
jecxz
mov
xchg
bound
push
jbe
add
jp
retf
cmp
je
rcl
cmp
pop
push
ins
fld
pop
retf
mov
sbb
sti
push
xchg
sub
loope
ret
fiadd
cmp
adc
retf
scas
dec
test
add
out
pop
in
adc
push
repz
jge
cmp
repnz
neg
retf
lahf
jae
mov
aam
dec
aaa
pop
and
daa
xchg
fistp
add
stos
inc
push
out
ret
into
cwde
aad
popa
pop
(bad)
cs
scas
(bad)
scas
xchg
pop
mov
out
fsubr
xchg
in
mov
jmp
es
mov
aam
imul
xor
sbb
pop
and
sbb
mov
out
xor
ins
add
xchg
adc
xchg
movs
push
data16
hlt
push
or
iret
mov
sbb
cmc
xchg
add
push
cld
lahf
jp
in
test
nop
or
neg
cmps
jge
jo
mov
fcmovnbe
inc
mov
jno
dec
mov
(bad)
xor
mov
jmp
sti
mov
jne
and
cli
cdq
mov
sbb
sahf
fcomp
bound
pop
jle
pop
outs
adc
jge
sbb
fs
lea
out
addr16
jp
push
xor
jno
sbb
std
mov
and
fcmovne
hlt
ficomp
div
imul
push
sti
fcmovnu
inc
dec
jmp
(bad)
iret
sar
test
mov
and
xchg
lds
dec
fdivr
xor
jno
cdq
sahf
int3
xchg
push
cdq
mov
mov
xor
test
aaa
xchg
sbb
lods
mov
xchg
(bad)
int3
rol
into
cmps
mov
jae
fwait
test
ss
int3
sbb
lods
sbb
mov
cmp
fisubr
lods
dec
fst
arpl
lea
jb
pop
mov
call
push
push
lds
movs
aad
in
pop
fistp
xchg
ins
in
or
mov
jne
lods
cmp
movs
xchg
(bad)
xor
test
inc
mov
pop
sub
sub
aam
add
push
ficomp
mov
scas
into
into
ja
std
push
fimul
pop
mov
push
(bad)
mov
ds
shl
popf
das
xchg
or
stos
add
fimul
dec
hlt
sbb
jmp
out
clc
nop
xchg
push
movs
loop
sbb
and
mov
push
es
and
mov
(bad)
retf
or
sub
push
jmp
nop
fmul
icebp
xchg
(bad)
pop
adc
imul
dec
popf
repnz
movs
fwait
push
push
push
mov
rcl
sbb
xchg
mul
push
mov
cmp
cmp
push
jg
jbe
and
dec
leave
data16
out
inc
cmp
leave
fnstsw
xor
gs
mov
iret
stos
in
xchg
aaa
cmps
call
or
pop
js
inc
pop
push
sub
push
ror
(bad)
and
das
imul
push
jl
inc
jne
or
sbb
sti
fbld
fdivr
xor
ja
in
inc
and
and
pop
cld
(bad)
or
es
xchg
out
inc
je
out
out
out
enter
jl
xchg
dec
xor
pop
enter
in
and
aad
inc
je
scas
paddd
(bad)
sub
int3
pop
stc
add
repz
pop
mov
fisttp
inc
add
xchg
pop
lods
xchg
sbb
cmps
test
imul
jp
loope
lahf
xor
mov
mov
push
jle
div
movs
dec
loopne
cmp
sub
pop
xchg
(bad)
outs
in
out
std
push
jle
push
rcl
dec
aad
sub
cmps
cmc
in
xchg
xor
add
adc
mov
cs
mov
and
xor
cmp
sbb
adc
gs
stos
cmp
mov
add
jmp
lods
hlt
push
enter
clc
push
stos
adc
es
fadd
dec
addr16
push
sar
add
ss
rcr
out
bound
adc
fidivr
scas
mov
mov
outs
dec
ja
nop
pop
mov
iret
mov
jmp
cdq
and
in
or
ret
enter
test
inc
mov
mov
xchg
rcl
in
(bad)
xor
mov
shr
push
(bad)
dec
sbb
jb
sub
mov
std
fild
xor
loope
es
adc
aaa
ins
test
fwait
ds
fwait
xor
out
lock
hlt
shl
repz
rcl
xchg
outs
mov
jns
add
test
das
gs
scas
outs
adc
cmps
and
aaa
inc
cdq
and
and
jae
and
clc
aas
jo
mov
jl
add
out
adc
mov
or
dec
repnz
push
jmp
sub
xchg
xor
dec
fsubr
stc
dec
jnp
leave
sub
out
pop
mov
mov
fild
pop
inc
inc
sbb
sbb
movs
push
cmps
xchg
ins
pop
jmp
mov
loope
jmp
in
fcomp
fldenv
sub
(bad)
or
mov
mov
movs
inc
push
sbb
xchg
sbb
sub
lock
aas
inc
sub
(bad)
out
out
(bad)
out
xlat
add
jns
lock
jle
add
or
into
push
enter
or
fiadd
or
jl
mov
sub
mov
xor
or
jnp
hlt
rcr
adc
push
xchg
inc
mov
ins
inc
out
sti
vmovlps
ror
pusha
and
cmp
jmp
lea
mov
sbb
mov
fld
lock
adc
xchg
dec
enter
jle
imul
mov
or
pop
pop
test
and
in
(bad)
jg
xchg
mov
stc
mov
out
or
jmp
push
sar
pop
ds
imul
scas
int
cdq
outs
sahf
cdq
rol
dec
rcr
adc
inc
stos
cmc
mov
int3
(bad)
rdmsr
pop
repz
lods
pop
xor
pop
mov
pop
sub
sbb
xchg
mov
bound
call
push
loop
jbe
xchg
cwd
pushf
loope
and
cmp
inc
and
jns
cmp
and
test
pop
cmp
cwde
adc
data16
data16
inc
lods
sti
adc
push
fst
jae
inc
push
mov
sub
and
mov
xchg
push
stc
mov
jle
jnp
and
or
das
mov
dec
jl
out
inc
scas
xchg
fs
call
lods
dec
mov
xor
mov
nop
fsin
sar
outs
(bad)
imul
les
add
retf
dec
js
out
test
(bad)
std
jno
pop
mov
xchg
inc
test
ret
test
mov
inc
fisub
add
(bad)
mov
dec
std
test
mov
ficom
scas
xchg
sbb
mov
aam
push
mov
add
push
sub
pushf
cmc
mov
adc
inc
or
inc
fistp
ret
sub
test
loope
cmc
aad
clc
mov
cdq
out
cli
pop
mov
adc
pop
add
adc
adc
jb
repnz
dec
and
into
cmp
adc
or
repz
scas
add
retf
es
into
cmp
xor
adc
add
sub
mov
push
jns
add
test
dec
cmp
add
sub
inc
dec
inc
inc
retf
pusha
dec
and
xchg
jp
je
cdq
jmp
mov
ja
ss
movs
call
mov
mov
pop
outs
lock
out
push
cmp
xchg
popa
jp
xchg
shr
add
pusha
je
add
mov
mov
pop
push
or
sub
loope
stc
and
cmps
jl
(bad)
or
sbb
push
push
movs
pop
or
sub
pop
in
dec
jmp
gs
jnp
push
cmps
fwait
adc
xor
sbb
xor
mov
jecxz
mov
leave
imul
adc
cmp
call
outs
mov
ror
int3
jae
loope
aam
mov
fdivr
jmp
in
sub
fcomp
sub
movs
jle
mov
or
retf
or
push
inc
sub
pop
addr16
pop
cmp
and
mov
adc
pop
iret
inc
add
repz
in
adc
mov
and
xchg
mov
add
mov
fwait
out
pop
xor
movs
mov
leave
mov
pop
mov
retf
cwde
adc
and
in
sub
xchg
(bad)
stos
sub
stc
shl
into
stos
les
cwde
push
add
inc
mov
jnp
adc
jmp
adc
push
push
pop
dec
mov
dec
lods
leave
stc
test
push
fld
call
shl
jmp
pop
jno
sbb
and
xor
jmp
out
or
add
inc
or
pop
mov
and
sub
dec
ds
icebp
cdq
add
sub
retf
mov
add
ins
(bad)
jne
in
into
icebp
cmp
xor
xchg
frstor
dec
fwait
sub
shr
stos
mov
or
in
repnz
dec
pop
mov
add
pusha
rcl
push
mov
and
retf
adc
cmp
pop
jnp
inc
movs
mov
cmp
push
pop
ret
pop
out
not
in
cmp
rcr
add
nop
mov
jo
dec
dec
fisub
push
movs
fs
imul
or
es
sub
mov
xor
sub
jns
pop
xor
mov
inc
loopne
in
jmp
xlat
jne
cmp
add
pop
sub
mov
iret
cmp
xor
pop
add
pop
dec
dec
mov
rcl
mov
lods
popaw
sub
out
pop
sub
retf
mov
xor
jmp
and
clc
mov
cmovl
iret
cld
mov
dec
pushaw
adc
sbb
mov
cmp
retf
dec
push
add
add
mov
(bad)
retf
pop
(bad)
pushf
mov
int
cmc
idiv
xor
cld
xor
in
mov
in
dec
mov
pop
jp
inc
data16
add
daa
push
push
add
xchg
ins
jns
and
in
scas
and
jno
pop
xchg
iret
mov
xchg
sub
dec
arpl
push
xchg
cs
cbw
jns
jmp
scas
adc
shl
loope
xchg
in
jae
cmp
outs
les
sbb
jns
pop
stos
(bad)
and
in
xchg
out
xchg
adc
jns
add
add
es
(bad)
in
lods
dec
(bad)
in
add
fcmovnu
xor
xor
add
xchg
(bad)
call
sub
sub
lods
dec
or
adc
mov
es
sub
jmp
xchg
push
cmp
pop
jmp
(bad)
adc
loop
inc
or
sub
xor
dec
sbb
jb
cdq
xchg
dec
pop
inc
fwait
inc
jl
movs
data16
or
rcr
push
push
lods
in
adc
pusha
gs
pop
xchg
xor
sub
pop
jmp
popf
add
pop
sbb
cmp
outs
add
stos
lahf
jae
hlt
sbb
int3
pop
or
dec
sub
mov
xor
jmp
stc
cmp
jp
pop
inc
mov
retf
call
jp
std
ins
push
cdq
mov
mov
adc
mov
les
add
retf
push
repz
test
in
addr16
pop
rcl
test
cmps
out
sub
add
ret
mov
push
xor
push
mov
pop
push
dec
rcl
or
into
cmp
push
add
cld
adc
mov
dec
cwde
push
call
mov
out
outs
mov
pop
xor
in
jmp
pop
dec
dec
sbb
pop
mov
jb
(bad)
cmp
movs
in
cmp
sub
dec
mov
and
dec
jbe
xor
push
mov
sbb
jmp
pusha
fldcw
rcl
pop
popa
ficomp
push
adc
add
cmp
pushf
(bad)
outs
xor
xchg
cdq
fwait
addr16
aaa
fcmove
mov
dec
and
fcomp
leave
shr
in
into
daa
lahf
xchg
inc
inc
in
sub
xor
sbb
test
dec
sub
hlt
or
retf
adc
jle
or
cmp
adc
sub
xor
in
adc
inc
sub
or
outs
les
xchg
mov
out
fld
sub
std
in
cmp
push
iret
add
vprotb
mov
das
retf
idiv
or
mov
cli
inc
shr
str
xchg
xchg
lea
and
inc
loopne
sub
mov
inc
in
add
pusha
xlat
out
push
push
adc
rcr
mov
mov
call
pop
loopne
dec
push
jl
mov
xchg
pop
jmp
push
add
or
ja
xchg
push
sbb
movs
sbb
out
dec
jl
shr
movs
push
xor
lahf
pop
add
xor
stc
lods
fs
cmp
push
stos
orps
push
das
add
add
mov
fwait
mov
aaa
pop
adc
ror
aad
mov
inc
mov
ins
sbb
add
add
xor
popa
int3
test
movs
xor
inc
lock
enter
add
xor
imul
pushf
mul
jle
push
mov
sbb
mov
or
rcr
mov
pop
jecxz
int3
dec
push
inc
inc
stos
in
add
loope
adc
out
jl
adc
es
shl
aaa
mov
data16
stc
cmps
xchg
retf
bound
mov
movups
lss
jmp
mov
mov
jl
sbb
repz
adc
and
mov
or
xchg
jmp
mov
rcr
outs
xor
cmp
pop
aaa
xor
out
inc
cdq
adc
mov
push
in
int
push
and
retf
xchg
(bad)
dec
adc
dec
and
adc
xchg
inc
dec
cdq
(bad)
mov
jae
mov
pop
pusha
and
ret
ror
arpl
popa
push
push
mov
cmp
stos
pop
mov
shl
jb
mov
inc
out
cmc
xchg
mov
stc
push
adc
sub
or
aam
push
jo
stos
dec
add
int
(bad)
mov
je
bound
adc
mov
xchg
fld1
pop
xchg
xor
dec
inc
xor
mov
dec
lahf
mov
pop
daa
aas
iret
push
clc
mov
xchg
ret
push
mov
imul
loop
jl
dec
movs
test
mov
int
repnz
dec
loope
iret
pop
sub
(bad)
xchg
and
pushf
mov
dec
sub
sub
mov
jecxz
or
xchg
es
gs
xor
xor
out
aas
xor
retf
mov
cmps
mov
jns
mov
je
pop
ss
mov
cmp
call
lea
rol
sbb
shr
in
call
in
(bad)
movs
mov
pop
adc
jp
rcl
push
jnp
adc
add
in
sub
pop
and
sub
rcl
mov
das
sub
sbb
sahf
shl
sti
push
outs
loopne
icebp
push
call
jmp
pop
std
xlat
push
mov
pop
sub
jge
popf
hlt
hlt
lahf
lea
sti
stos
sbb
dec
jns
(bad)
in
xchg
lea
mov
int
jo
scas
ins
pop
push
fbld
push
lahf
sbb
repz
int
pop
bound
mov
fild
sbb
call
push
mov
leave
mov
test
jbe
pop
xchg
iret
xor
ins
clc
cmp
jae
scas
push
test
inc
in
dec
popa
and
cli
inc
shl
mov
jns
dec
cli
mov
rcr
mov
fsubr
pop
aaa
inc
retf
cdq
outs
push
out
add
stc
mov
inc
mov
popf
jno
ins
dec
sar
(bad)
cdq
mov
mul
sbb
push
aaa
cmc
add
sub
lods
mov
push
es
and
jo
or
jb
dec
lock
leave
adc
push
jbe
xchg
(bad)
cld
jns
ds
push
into
push
in
aad
ror
jle
out
call
adc
test
push
push
es
das
add
(bad)
or
push
and
iret
dec
jns
pop
add
loop
pop
jne
push
xor
movzx
lods
outs
sbb
sub
gs
mov
iret
jge
add
(bad)
arpl
push
push
je
pop
adc
mov
or
out
inc
inc
leave
xor
and
ret
adc
xchg
jns
jae
xlat
mov
xchg
or
outs
(bad)
jecxz
jbe
clc
inc
inc
xchg
cld
movs
popf
jno
mov
out
call
inc
mov
adc
or
inc
or
pop
(bad)
mov
mov
pop
or
xor
scas
je
push
jg
pusha
xlat
bound
(bad)
popf
ins
enter
push
jns
pop
sub
push
retf
push
pusha
aad
fucomip
fisub
cdq
add
cmp
push
xor
mov
lea
mov
retf
mov
sub
mov
pop
pop
mov
shl
jae
cwde
sbb
int3
ror
cdq
mov
cld
sub
in
sub
(bad)
fisub
aaa
faddp
pop
cld
dec
mov
and
loope
je
lods
pushf
xchg
inc
cwde
xchg
movs
hlt
(bad)
push
sbb
push
outs
arpl
cli
imul
push
cmc
nop
and
jo
push
mov
sub
test
dec
adc
lock
dec
mov
pop
xchg
xor
add
lods
mov
imul
inc
cdq
imul
or
aaa
cmps
lock
imul
je
(bad)
jl
shl
jns
sbb
or
xor
pop
push
mov
bound
outs
pop
dec
data16
add
fsubr
cmp
neg
or
cmp
xchg
adc
arpl
xor
add
sub
pop
add
imul
sti
retf
cld
sub
xlat
mov
add
stos
aad
pop
dec
xchg
cwde
xchg
dec
outs
icebp
shl
add
sbb
push
or
into
jnp
cmc
sahf
mov
jmp
pop
arpl
ret
and
or
call
xchg
iret
dec
imul
dec
int3
retfw
mov
call
jo
shr
stc
test
pop
mov
inc
setns
retf
or
inc
xor
sub
sub
pusha
test
dec
in
xor
(bad)
sbb
cmps
xor
lods
out
ficomp
inc
in
stc
sub
sbb
sub
clc
cmp
pop
push
sbb
mov
nop
dec
shr
pushf
dec
popa
cdq
popf
jb
mov
rol
fdecstp
ror
push
stc
test
jge
or
xor
sub
into
leave
out
cdq
adc
pop
mov
sbb
cld
mov
push
js
pop
mov
(bad)
cmp
pop
ds
push
mov
rcl
push
adc
and
xor
aad
mov
inc
adc
dec
add
add
test
mov
aaa
sub
push
mov
push
rcl
lods
in
xchg
enter
dec
cmps
mov
xchg
lea
in
xchg
sbb
or
adc
mov
fdivr
cmps
add
stos
and
(bad)
mov
pop
mov
dec
jnp
adc
add
or
nop
(bad)
mov
mov
int3
mov
jae
hlt
jnp
imul
pop
call
inc
mov
shr
mov
mov
mov
retf
lea
jo
xor
push
and
inc
push
jbe
scas
mov
shr
and
int3
push
push
aad
(bad)
jne
pop
sbb
lods
mov
or
xchg
mov
push
movs
or
sub
fisub
dec
push
inc
test
(bad)
push
fsub
cs
add
jbe
or
push
jbe
add
sbb
jb
leave
mov
push
ins
bnd
pop
push
ficom
call
mov
aas
fild
je
sbb
test
adc
loopne
cmp
retf
int3
ret
stos
inc
retf
cs
repnz
jno
mov
jo
in
test
inc
mov
stos
lods
pop
adc
cdq
or
pop
push
dec
inc
(bad)
jge
stos
pop
fist
mov
repz
mov
popa
push
shl
ffree
scas
outs
aam
push
push
push
jmp
fcomip
pop
push
inc
outs
xchg
cmp
popf
pop
sub
pop
or
push
std
mov
lahf
mov
(bad)
cmp
push
jge
adc
fnstenv
add
retf
sub
lock
add
fs
rcl
ins
add
repnz
out
mov
push
jo
adc
sub
inc
xchg
mov
popf
xchg
sbb
das
fisttp
lods
sub
pop
xchg
dec
loope
inc
mov
pop
push
lods
int3
dec
or
adc
fidiv
dec
test
ins
sbb
call
add
adc
imul
lods
pop
inc
scas
add
inc
dec
and
adc
retf
je
int3
repnz
sub
dec
inc
movs
xlat
retf
int3
inc
shrd
push
pop
mov
pop
cmps
mov
mov
fisttp
movs
iret
sub
adc
gs
rcr
jge
mov
dec
adc
clc
test
loopne
lahf
imul
rcl
or
hlt
pop
mov
ds
cmp
fimul
xrelease
sbb
and
push
sub
pop
jg
dec
ret
and
sub
gs
dec
and
pop
dec
lods
dec
cmc
xchg
add
sar
cmp
push
into
pop
and
cs
daa
sbb
add
scas
and
(bad)
jg
mov
or
jno
mov
jnp
push
pop
lods
stos
test
scas
inc
dec
ss
repnz
int3
adc
mov
leave
gs
or
shrd
mov
mov
xchg
ret
mov
stc
ds
cmp
cld
pop
inc
and
adc
sub
mov
pop
shl
mov
add
sbb
imul
fwait
push
ss
cmc
(bad)
mov
mov
push
cmp
xchg
ss
stos
add
test
rol
mov
inc
pop
sbb
mov
test
lahf
call
sbb
sub
js
(bad)
adc
ret
sbb
out
je
and
inc
xchg
adc
sub
fdivr
push
(bad)
mov
add
pop
movs
jle
mov
das
sbb
fdiv
sub
mov
shr
adc
fisubr
adc
js
jbe
push
xchg
mov
jmp
dec
retf
mov
jno
dec
adc
in
dec
sbb
xchg
pop
xor
sbb
push
aam
lods
(bad)
xchg
not
enter
mov
test
cmps
leave
adc
and
repnz
hlt
js
test
jle
(bad)
sub
das
push
and
adc
mov
es
adc
shl
sub
pop
add
adc
and
dec
pop
scas
mov
mov
mov
in
leave
mul
lods
lods
push
jb
ds
cmp
pop
out
pop
arpl
cmp
leave
dec
or
jbe
scas
or
imul
sub
or
sbb
sbb
jl
pusha
mov
sub
movs
sbb
leave
xchg
inc
mov
pop
ds
pop
dec
and
adc
add
add
out
fcom
xor
add
mov
aas
cwde
jmp
xchg
pop
and
call
push
shl
shr
ds
push
xchg
jae
cpuid
aam
sbb
scas
inc
fdivr
jge
fisttp
push
jbe
fild
sahf
xchg
pop
xchg
push
jns
push
pusha
or
movs
mov
fild
xchg
mov
mov
hlt
mov
mov
arpl
dec
in
sub
arpl
ss
dec
cmps
xor
test
push
ins
imul
add
adc
pop
sub
xor
stos
mov
mov
jne
test
add
adc
loope
movs
dec
sbb
sub
out
mov
cs
cmc
jb
push
shl
pop
int
sbb
push
sahf
test
fdiv
in
ror
fdivr
fisub
inc
sub
sub
dec
in
inc
retf
xlat
sbb
mov
xor
shr
xor
mov
pusha
movs
loop
fmul
aad
into
lods
ret
(bad)
mov
cmps
iret
mov
cwde
push
rcr
pop
cmc
xchg
xchg
sahf
(bad)
in
clc
loopne
push
mov
aas
cmps
mov
retf
fucomi
mov
in
push
cmp
dec
test
stos
push
loop
into
cli
sub
mov
pop
repnz
(bad)
sti
xor
dec
xor
add
push
call
sub
push
push
sbb
leave
xor
inc
add
and
nop
aad
add
jnp
sub
mov
mov
fild
sub
add
mov
and
xor
data16
jns
bound
pushf
xor
cmp
shr
fcom
sbb
stc
inc
jmp
pop
nop
stc
shl
movs
das
js
(bad)
mov
jbe
xor
or
outs
cmp
in
les
into
push
rcl
push
stos
fwait
aad
cmc
dec
arpl
mov
xchg
inc
dec
push
jbe
inc
addr16
xchg
cld
clc
jmp
movs
pop
movs
ins
fisubr
sbb
scas
movs
lea
mov
shl
loopne
ret
int
sbb
test
ins
mov
ins
dec
xlat
out
(bad)
ret
fistp
in
xor
sar
sbb
dec
pmaddwd
(bad)
gs
push
or
mov
je
xor
in
fsubr
movs
test
leave
fs
adc
pop
adc
mov
push
inc
shl
jmp
stos
sti
sbb
jge
data16
leave
fstp
mov
xchg
xor
mov
add
inc
std
jne
adc
jp
imul
xor
sub
aam
je
and
lods
das
aam
xor
xor
pop
pop
cs
imul
pop
loop
xchg
mov
mov
xor
(bad)
sub
andnps
push
push
mov
xor
stos
sbb
mov
mov
leave
inc
sbb
cmc
jne
sub
(bad)
mov
fdivr
xchg
int3
inc
in
retf
rcl
int
in
(bad)
adc
mov
arpl
push
push
out
jge
jnp
mov
dec
jl
test
test
repnz
and
jg
xor
pushf
repnz
and
fdivr
shl
enter
sub
pop
push
or
sar
cmp
xchg
mov
pusha
xchg
push
js
inc
pop
fistp
sub
sbb
dec
or
faddp
mov
mov
cmps
in
mov
movs
xchg
push
xor
pop
cmps
push
push
daa
sub
pop
scas
add
pop
pop
das
jl
pop
mov
js
loopne
jle
scas
jmp
call
cmp
in
outs
and
jo
gs
pop
fisub
leave
in
xchg
xor
fcom
jp
xchg
fsubr
lahf
xchg
jbe
cli
imul
cdq
xchg
iret
scas
outs
mov
jmp
sub
sub
int
sbb
scas
in
mov
mul
sti
iret
jb
sbb
(bad)
cmc
xlat
hlt
push
int
test
mov
mov
sar
adc
fwait
mov
cld
retf
push
out
std
xchg
das
jb
mov
ins
shl
movs
out
test
adc
shl
popf
cmp
aaa
xor
pop
inc
(bad)
mov
pusha
push
mov
pop
xor
mov
(bad)
push
xchg
xchg
pop
inc
jbe
(bad)
ja
cmp
jg
and
mov
mov
push
adc
or
mov
fdivr
(bad)
push
push
cs
sbb
xlat
clc
xlat
lahf
xchg
mov
xchg
fs
das
mov
mov
dec
out
sar
and
jbe
push
cwde
movs
icebp
mov
addr16
xor
in
mov
xchg
ret
jnp
cwde
push
(bad)
jns
push
retf
ja
dec
sti
xlat
cli
cmps
mov
je
push
inc
push
inc
cmp
cmp
push
dec
push
xchg
dec
mov
fidivr
sti
xchg
repz
std
add
pop
stos
pop
xchg
fcmove
lods
add
test
cmp
mov
fdivrp
out
inc
retf
add
loop
xor
lea
mov
repnz
jg
xor
scas
cmp
outs
add
fwait
xor
int
clc
fimul
mov
fisttp
add
cmp
add
add
dec
inc
scas
inc
pusha
or
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
jle
add
add
les
je
imul
add
cmp
add
and
add
add
add
add
inc
push
dec
inc
add
add
add
ins
outs
bound
add
add
add
add
add
push
sbb
add
add
and
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
cmp
add
imul
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
sub
push
add
add
add
add
add
add
add
add
push
add
cs
add
add
add
add
add
add
add
cmp
add
or
or
jo
push
add
add
add
pop
cs
add
pop
cs
add
add
sub
add
cs
add
or
add
add
or
add
add
cs
add
or
add
add
cs
add
cs
add
add
adc
adc
add
adc
add
add
adc
adc
add
add
adc
adc
add
add
add
add
add
adc
push
add
adc
push
add
jo
push
add
cmp
push
add
push
adc
adc
push
add
adc
or
pop
adc
adc
add
adc
add
add
adc
add
mov
push
add
add
add
add
adc
add
add
adc
adc
add
add
adc
inc
adc
dec
adc
sahf
adc
test
adc
push
add
adc
clc
adc
or
sti
adc
add
push
mov
push
add
jo
push
add
add
add
add
push
mov
push
add
push
rcl
push
add
adc
add
mov
sbb
lea
pushf
adc
add
add
add
add
add
pop
cs
add
sbb
add
add
add
sbb
xchg
sbb
cs
add
sbb
add
add
sbb
sbb
add
adc
or
pop
sbb
add
add
adc
or
ins
sbb
add
add
call
sbb
add
add
sbb
push
add
sbb
sbb
add
sbb
sbb
sbb
adc
add
add
add
sbb
adc
add
sbb
adc
add
sub
push
add
push
sbb
add
add
add
add
sbb
sbb
add
sbb
push
add
sbb
adc
jnp
push
add
jnp
push
add
jnp
push
add
jnp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
sub
xor
xor
push
add
xor
jbe
dec
add
add
add
add
add
add
add
add
add
add
add
push
js
and
and
jl
and
cs
add
sbb
add
xchg
push
test
push
lods
add
add
push
lods
add
add
pop
mov
pop
retf
add
add
add
pop
fiadd
add
jmp
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
or
add
add
or
add
add
pop
add
add
add
or
add
add
add
xor
add
xchg
or
add
add
or
add
add
add
add
or
add
add
push
add
add
add
add
or
add
add
add
push
or
or
or
mov
add
or
push
push
jo
adc
xor
or
adc
pusha
adc
adc
pop
adc
add
add
adc
add
add
inc
add
add
add
adc
jb
adc
add
pop
daa
add
add
adc
jns
pop
add
add
add
dec
add
add
add
add
movs
sub
add
add
sbb
add
add
add
sub
add
add
add
add
add
sub
add
add
sbb
add
add
add
sub
add
add
sbb
adc
add
xor
add
add
adc
push
add
add
add
add
add
adc
inc
add
add
add
add
add
or
dec
add
add
add
or
add
adc
lods
add
add
shr
add
add
or
add
sub
add
add
or
add
add
add
add
add
adc
sbb
add
push
add
add
mov
sub
add
add
sbb
add
add
add
add
mov
add
sub
add
add
test
add
sub
add
add
add
add
sub
add
add
ret
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
adc
sbb
add
add
add
push
add
add
add
sub
add
add
sbb
add
add
add
sub
add
add
or
add
add
add
push
sbb
add
add
add
add
add
add
fld
sub
or
pop
and
add
add
or
add
mov
add
or
add
sbb
add
add
push
or
jmp
or
add
add
or
test
add
add
push
or
add
adc
add
add
add
push
or
or
adc
adc
add
add
push
add
adc
and
add
add
add
push
add
add
add
and
add
add
add
add
add
add
push
add
add
and
add
add
sbb
add
and
add
cmp
cwde
add
add
add
push
push
lahf
add
add
sub
adc
jb
adc
sub
and
push
sbb
add
add
dec
sub
adc
jns
pop
add
pop
add
add
inc
add
movs
add
add
add
add
mov
add
rol
add
add
inc
add
and
inc
or
push
mov
cs
inc
add
add
inc
or
push
mov
das
add
inc
add
and
inc
or
push
mov
das
add
add
add
inc
or
add
add
and
inc
or
pop
lds
xor
sub
add
add
pop
pop
iret
add
add
add
and
inc
or
aam
xor
dec
inc
add
add
inc
or
add
add
add
cmps
pop
aam
xor
jo
add
add
inc
or
pop
fiadd
xor
mov
add
add
fadd
jecxz
xor
xchg
inc
add
add
inc
or
pop
fiadd
xor
lods
inc
add
and
inc
or
or
add
mov
add
sbb
mov
xor
add
add
or
inc
add
add
inc
or
or
inc
add
and
inc
or
mov
add
dec
add
add
inc
or
add
add
dec
add
and
inc
or
mov
aaa
add
add
add
inc
or
mov
cmp
cmp
add
and
inc
or
add
add
add
inc
or
add
add
and
inc
or
add
add
add
mov
add
inc
or
or
dec
add
add
inc
or
or
dec
add
and
inc
or
or
dec
add
add
inc
or
or
dec
add
and
inc
or
or
dec
add
add
inc
or
or
dec
add
and
inc
or
or
dec
add
add
inc
or
mov
add
add
and
inc
or
mov
add
dec
add
add
inc
or
mov
aas
add
dec
add
and
inc
or
mov
aas
add
add
add
xchg
or
dec
add
and
inc
or
add
add
add
inc
or
or
add
or
and
inc
or
or
add
mov
add
add
add
add
inc
or
or
add
mov
add
add
inc
or
cld
add
enter
and
inc
or
add
inc
add
dec
add
add
inc
or
add
dec
add
and
inc
or
add
dec
add
add
inc
or
add
dec
add
and
inc
or
or
add
sbb
add
add
inc
or
or
add
xor
add
and
inc
or
or
add
inc
dec
add
add
inc
or
add
add
and
inc
or
add
fs
add
add
inc
or
cmp
dec
add
add
add
xchg
cmp
dec
add
add
inc
or
mov
add
mov
add
dec
add
inc
or
or
dec
add
dec
add
and
inc
or
or
add
dec
add
add
inc
or
or
add
call
add
pop
or
add
hlt
dec
add
add
inc
or
or
add
dec
add
and
inc
or
dec
add
dec
add
add
inc
or
add
xor
add
add
or
dec
add
add
add
inc
or
add
add
add
test
add
add
add
inc
or
or
add
js
add
and
inc
or
or
add
test
add
add
jmp
add
inc
or
or
add
test
add
add
inc
or
or
ror
and
inc
or
or
int3
dec
add
add
inc
or
or
in
add
and
inc
or
pop
add
lock
add
add
inc
or
push
add
or
and
inc
or
add
adc
add
add
inc
or
add
add
and
inc
or
add
dec
add
add
inc
or
add
add
and
inc
or
add
add
add
leave
or
je
add
and
inc
or
or
or
add
test
dec
add
and
inc
or
push
add
push
add
add
daa
push
mov
dec
add
add
push
add
push
rol
add
add
add
adc
jo
adc
pop
add
add
or
shl
adc
nop
adc
pop
add
and
adc
mov
and
pop
add
add
add
adc
rcl
add
inc
add
add
adc
jb
adc
pop
add
add
add
sbb
add
add
js
add
add
adc
push
adc
add
push
or
add
xor
add
add
adc
js
dec
add
add
add
mov
add
add
aam
add
add
adc
add
add
add
addr16
add
add
add
add
add
add
addr16
add
add
sub
add
add
mov
add
add
sub
add
add
push
add
sub
add
add
push
add
mov
add
add
sub
add
add
push
add
sub
add
add
push
add
mov
add
add
push
add
mov
add
add
push
add
lods
add
retf
add
add
add
in
add
add
out
add
retf
add
add
add
in
add
add
out
add
retf
add
add
add
in
add
add
inc
retf
add
add
add
in
add
add
dec
push
add
add
out
add
mov
add
add
pushw
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
fadd
add
add
xor
add
add
inc
cmp
add
add
add
adc
add
push
add
add
inc
sub
sbb
cmps
adc
add
add
add
adc
sbb
int
imul
ins
add
loop
je
xor
out
adc
and
sub
jg
sbb
fld
test
xor
cmp
mov
sbb
cmp
add
mov
adc
adc
add
adc
movs
add
add
adc
mov
or
(bad)
adc
add
add
fld
aam
pop
add
add
add
fld
sub
imul
jno
fld
sub
and
fld
sub
cmp
fld
sub
inc
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
fld
sub
add
mov
fld
cmp
add
adc
add
rcl
add
add
adc
add
add
add
add
add
add
cmp
mov
leave
add
adc
push
adc
adc
fld
jns
mov
add
add
add
add
add
sub
sub
fld
sub
sub
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
ins
add
add
enter
and
pop
push
imul
sub
pop
add
add
jo
push
push
imul
pop
add
add
add
push
jno
cwde
push
mov
push
test
jl
fld
inc
push
xor
jmp
push
push
add
pop
add
push
xchg
push
imul
imul
and
ss
xchg
push
imul
popa
add
mov
add
push
jno
pop
pop
stos
push
imul
mov
lods
adc
adc
mov
cmp
mov
cmp
fld
sub
cmp
fld
sub
inc
add
add
cmp
test
in
cmp
pop
push
movs
add
fld
sub
mov
fld
sub
xchg
add
add
add
add
add
add
add
add
add
push
leave
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
sub
dec
add
add
add
pop
icebp
push
mov
add
add
add
add
pop
clc
push
mov
add
or
cmp
sbb
movs
add
push
sbb
cmp
sbb
movs
add
push
add
loope
push
movs
add
add
sbb
sbb
mov
repnz
jp
mov
push
movs
add
fld
adc
xchg
add
add
sbb
pop
cmp
out
sbb
push
cmp
or
cmp
sbb
add
add
add
pop
sub
cmp
jge
test
pop
test
pop
leave
add
xchg
sbb
sbb
stos
pop
mov
mov
add
sbb
sbb
sbb
add
add
sbb
pop
jmp
add
add
add
pop
mov
sub
fiadd
leave
add
add
call
sbb
pop
leave
add
hlt
pop
jmp
pop
jmp
add
add
jp
add
fld
sub
or
fld
cmp
sbb
sbb
add
sbb
or
add
sbb
or
add
add
add
add
sbb
adc
or
add
pop
add
add
add
or
push
sbb
or
add
add
add
dec
add
add
add
fld
cmp
add
add
add
add
add
add
add
add
add
and
fild
cld
add
add
jno
cs
add
add
adc
add
add
mov
cs
add
adc
cmps
or
add
push
aam
cs
add
sti
add
ret
add
retf
add
rol
fild
fild
cld
add
mov
add
add
add
push
add
add
add
retf
add
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
loopne
fild
cld
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
add
add
push
add
add
cld
add
retf
add
add
ret
add
or
dec
add
add
fild
cld
add
inc
add
add
sbb
cld
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
sub
and
mov
add
add
add
add
sbb
inc
add
add
call
add
pop
add
mov
add
jbe
mov
add
or
add
add
add
add
add
pop
or
add
add
add
add
add
dec
or
add
add
add
add
add
inc
or
add
add
add
add
add
xor
inc
add
add
add
pop
add
retf
add
add
pop
add
mov
add
add
add
or
add
or
add
add
add
add
add
lock
add
add
loop
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
mov
add
add
mov
add
add
mov
add
and
and
inc
add
inc
add
pusha
add
popa
add
add
add
mov
add
or
add
rol
add
loope
pop
add
fild
cld
add
push
pop
add
fild
cld
add
push
pop
add
jecxz
cld
add
pop
add
fild
cld
add
pop
add
fild
cld
add
or
add
or
add
push
fild
cld
add
push
pop
add
mov
push
fild
cld
add
push
pop
add
fild
cld
add
pop
pop
add
fild
cld
add
fild
cld
add
push
add
add
add
add
add
pop
fild
cld
add
pop
fild
cld
add
or
add
add
or
add
add
fild
cld
add
fild
cld
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
fild
cld
add
fild
cld
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
fild
cld
add
fild
cld
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
fild
cld
add
fild
cld
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
fild
cld
add
fild
cld
add
add
add
or
add
add
or
add
add
or
and
inc
or
pusha
or
or
or
ror
or
add
fild
cld
add
push
fild
cld
add
fild
cld
add
fild
cld
add
add
add
push
fild
cld
add
push
fild
cld
add
pand
cld
add
pand
cld
add
fild
cld
add
fild
cld
add
add
add
pand
cld
add
pand
cld
add
adc
add
add
adc
add
add
fild
cld
add
fild
cld
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
repz
add
cmc
add
push
sub
das
push
test
mov
push
pop
mov
pop
cmp
inc
pop
inc
pop
inc
pop
dec
pop
dec
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
pop
push
pop
push
pop
pop
pop
pop
pop
pop
pop
fs
imul
outs
pop
outs
pop
jae
jae
jae
jae
jae
jae
jae
js
js
push
pop
push
pop
retf
pop
add
ret
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
fild
je
add
push
add
add
add
in
add
add
add
add
add
add
add
add
push
add
add
push
jo
add
dec
push
mov
mov
int3
add
add
rol
add
js
rol
add
mov
(bad)
add
add
add
movs
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fild
add
adc
fild
add
and
loopne
add
sub
add
in
add
dec
pminsw
add
push
pxor
add
pmuludq
add
jae
loopne
add
jg
stc
add
add
cdq
psubw
add
cmps
paddd
add
mov
inc
add
mov
add
paddd
add
into
paddd
add
fmul
inc
add
loop
inc
add
in
lsl
add
repz
add
cli
pavgb
add
push
adc
add
add
adc
add
add
adc
add
add
adc
add
in
xor
add
jo
push
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
and
add
aas
add
add
add
and
add
add
add
add
daa
add
add
sub
add
inc
add
add
add
sub
add
dec
add
add
add
sub
add
add
add
add
add
add
xor
add
dec
add
add
add
xor
add
push
add
add
add
xor
add
add
add
add
add
add
cmp
add
push
add
add
add
cmp
add
pop
add
add
add
cmp
add
add
add
add
aas
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
add
dec
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
pop
add
add
popa
add
add
popa
add
add
add
arpl
add
add
add
add
add
add
xchg
imul
imul
imul
add
add
add
lea
jno
add
xchg
add
add
xchg
add
xchg
add
add
add
add
add
add
add
add
add
cmp
js
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cs
add
add
add
add
or
add
add
add
mov
add
add
add
add
or
pushf
adc
add
add
add
add
(bad)
push
add
add
retf
sbb
add
add
add
add
dec
sbb
add
push
add
pop
add
or
or
add
adc
push
add
add
adc
pop
add
add
add
and
dec
add
add
add
add
add
add
push
add
add
add
add
movs
add
add
push
add
sbb
add
add
cmp
outs
fs
gs
arpl
ins
imul
outs
jae
data16
push
imul
jae
arpl
dec
jns
jo
ins
imul
add
mov
call
mov
pushf
test
mov
in
mov
xchg
mov
out
test
mov
call
cdq
in
mov
pushf
mov
mov
call
lahf
in
xchg
call
test
call
test
pushf
xchg
out
xchg
out
mov
mov
in
mov
dec
jns
dec
jns
outs
ins
jo
je
jb
dec
jns
jb
push
arpl
jns
outs
jb
jae
dec
jns
bound
jb
imul
jb
popa
fs
popa
gs
bound
arpl
outs
jbe
fs
xor
dec
outs
je
jb
popa
ins
pop
ins
ins
dec
gs
jo
jb
push
gs
outs
jbe
dec
popa
ins
gs
popa
arpl
je
jb
bound
gs
ins
outs
jae
jb
add
jb
xor
in
and
mov
mov
in
(bad)
in
and
mov
xchg
mov
out
test
mov
call
cdq
in
mov
pushf
mov
mov
call
lahf
in
xchg
call
test
call
test
pushf
xchg
out
xchg
out
mov
mov
in
mov
push
gs
jne
arpl
add
mov
call
mov
pushf
test
mov
in
mov
xchg
mov
out
test
mov
call
cdq
in
mov
pushf
mov
mov
call
lahf
in
xchg
call
test
call
test
pushf
xchg
out
xchg
out
mov
mov
in
mov
dec
jns
push
gs
jne
arpl
add
push
gs
imul
push
gs
imul
jo
jb
jns
dec
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
outs
outs
ja
inc
outs
jb
jae
jo
ins
imul
inc
popa
jae
add
arpl
outs
jb
pop
pop
inc
dec
inc
inc
fs
outs
dec
imul
jne
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
dec
imul
jns
je
ins
add
popa
imul
gs
outs
arpl
pop
pop
inc
dec
inc
dec
imul
outs
add
addr16
arpl
add
inc
jb
popa
je
dec
popa
imul
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
jo
je
jb
dec
bound
arpl
gs
inc
outs
ins
jo
je
jb
ins
pop
inc
outs
ins
jo
je
jb
bound
arpl
outs
jbe
fs
addr16
inc
jo
ins
imul
add
inc
jo
dec
bound
arpl
outs
jbe
fs
push
jae
jb
addr16
push
jae
jb
ins
pop
push
jae
jb
bound
arpl
outs
jbe
fs
addr16
inc
outs
jb
jae
ins
pop
dec
jns
outs
jb
jae
bound
arpl
outs
jbe
fs
addr16
push
bound
jb
imul
dec
jns
bound
jb
imul
arpl
outs
jbe
fs
inc
jo
ins
imul
add
jb
jae
push
bound
jb
imul
je
inc
outs
jb
xor
ins
pop
inc
outs
jb
xor
jae
je
inc
outs
jb
xor
push
popa
ins
jne
add
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
add
outs
jae
popa
outs
arpl
inc
imul
pop
dec
outs
jae
popa
outs
arpl
pop
add
jae
popa
outs
arpl
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
popa
jae
je
bound
ins
pop
inc
outs
jb
inc
imul
je
add
jne
ins
jae
outs
add
je
popa
jae
inc
outs
fs
add
je
jns
add
je
imul
pop
inc
gs
outs
jae
popa
outs
arpl
ins
pop
push
push
push
je
je
arpl
ins
jne
add
je
outs
jae
popa
outs
arpl
dec
inc
outs
jne
gs
bound
xor
push
jns
je
ins
cs
ins
ins
cs
imul
gs
outs
je
addr16
push
popa
ins
jne
add
jne
arpl
jae
je
push
popa
ins
jne
add
popa
ins
add
je
inc
je
jb
bound
gs
popa
ins
jne
add
ins
add
je
inc
je
jb
bound
gs
popa
ins
jne
add
je
jb
bound
add
gs
je
inc
je
jb
bound
add
popa
ins
gs
popa
arpl
inc
jb
popa
je
dec
popa
ins
gs
popa
arpl
je
jb
bound
add
add
ins
outs
jbe
dec
popa
ins
gs
popa
arpl
je
jb
bound
gs
imul
push
jb
imul
imul
dec
jae
popa
je
jb
bound
gs
outs
bound
dec
inc
outs
jne
gs
bound
add
je
imul
ins
jne
add
imul
push
jb
imul
ins
pop
imul
dec
jae
ins
pop
popa
je
jb
bound
gs
push
jb
arpl
jae
inc
ins
gs
outs
je
gs
gs
add
outs
arpl
jae
bound
arpl
imul
imul
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
outs
je
imul
ins
jo
outs
outs
je
add
imul
inc
outs
ins
jo
outs
outs
je
inc
jne
je
outs
add
jne
je
outs
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
push
imul
jae
popa
ins
jne
add
jne
je
outs
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
inc
outs
ins
bound
outs
js
pop
inc
outs
ins
bound
outs
js
add
je
inc
outs
ins
bound
outs
js
add
je
inc
outs
ins
bound
outs
js
add
arpl
fs
imul
pop
inc
push
fs
imul
add
je
inc
push
fs
imul
add
je
inc
push
fs
imul
add
push
fs
imul
add
je
inc
push
fs
imul
add
je
inc
push
fs
imul
add
arpl
outs
js
pop
inc
push
outs
js
add
je
inc
push
outs
js
add
je
inc
push
outs
js
add
push
outs
js
add
je
inc
push
outs
js
add
je
inc
push
outs
js
add
jne
je
outs
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
pop
inc
jne
je
outs
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
pop
inc
jne
je
outs
xor
pop
inc
jne
je
outs
xor
pop
inc
jne
je
outs
xor
je
outs
outs
add
je
inc
jne
je
outs
add
je
inc
jne
je
outs
add
jne
je
outs
aaa
add
je
inc
jne
je
outs
aaa
add
je
inc
jne
je
outs
aaa
add
jne
je
outs
cmp
addr16
inc
jne
je
outs
cmp
jae
je
inc
jne
je
outs
cmp
pop
inc
jne
je
outs
cmp
addr16
inc
jne
je
outs
cmp
jae
je
inc
jne
je
outs
cmp
pop
inc
jne
je
outs
xor
add
je
inc
jne
je
outs
xor
add
je
inc
jne
je
outs
xor
add
jne
je
outs
xor
add
je
inc
jne
je
outs
xor
add
je
inc
jne
je
outs
xor
add
jne
je
outs
xor
add
je
inc
jne
je
outs
xor
add
je
inc
jne
je
outs
xor
add
jne
je
outs
xor
add
je
inc
jne
je
outs
xor
add
je
inc
jne
je
outs
xor
add
jne
je
outs
xor
addr16
inc
jne
je
outs
xor
jae
je
inc
jne
je
outs
xor
inc
popa
je
push
imul
gs
pop
inc
popa
je
push
imul
gs
add
je
inc
popa
je
push
imul
gs
add
je
inc
popa
je
push
imul
gs
add
popa
je
push
imul
gs
add
je
inc
popa
je
push
imul
gs
add
je
inc
popa
je
push
imul
gs
add
arpl
gs
outs
js
pop
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
ins
gs
arpl
inc
outs
ja
add
jne
gs
arpl
inc
outs
ja
xor
addr16
dec
jne
gs
arpl
inc
outs
ja
xor
jae
je
dec
jne
gs
arpl
inc
outs
ja
xor
pop
dec
jne
gs
arpl
inc
outs
ja
xor
addr16
dec
jne
gs
arpl
inc
outs
ja
xor
jae
je
dec
jne
gs
arpl
inc
outs
ja
xor
dec
outs
je
data16
arpl
add
outs
je
data16
arpl
xor
addr16
dec
outs
je
data16
arpl
xor
jae
je
dec
outs
je
data16
arpl
xor
dec
outs
outs
je
inc
popa
ins
outs
fs
jb
pop
dec
outs
outs
je
inc
popa
ins
outs
fs
jb
add
je
dec
outs
outs
je
inc
popa
ins
outs
fs
jb
add
je
dec
outs
outs
je
inc
popa
ins
outs
fs
jb
add
outs
addr16
jae
inc
popa
jb
pop
push
jb
addr16
jae
inc
popa
jb
add
je
push
jb
addr16
jae
inc
popa
jb
add
je
push
jb
addr16
jae
inc
popa
jb
add
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
imul
outs
add
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
pop
push
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
pop
push
popa
imul
outs
xor
addr16
push
popa
imul
outs
xor
jae
je
push
popa
imul
outs
xor
inc
jb
jne
inc
outs
js
pop
inc
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
je
inc
jb
jne
inc
outs
js
add
outs
gs
add
popa
outs
gs
xor
addr16
push
popa
outs
gs
xor
jae
je
push
popa
outs
gs
xor
pop
push
popa
outs
gs
xor
addr16
push
popa
outs
gs
xor
jae
je
push
popa
outs
gs
xor
pop
push
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
imul
outs
js
add
je
push
imul
outs
js
add
je
push
imul
outs
js
add
jns
je
inc
jbe
outs
je
jb
jae
inc
outs
jb
xor
outs
popa
add
outs
fs
jb
xor
ins
gs
popa
add
jae
ja
jb
add
je
outs
outs
xor
inc
jne
je
outs
xor
inc
outs
ins
bound
outs
js
add
arpl
fs
imul
add
arpl
fs
imul
add
arpl
outs
js
add
arpl
outs
js
add
je
outs
outs
xor
inc
jne
je
outs
xor
inc
jne
je
outs
xor
je
outs
add
je
outs
outs
aaa
add
je
outs
outs
cmp
inc
jne
je
outs
cmp
inc
jne
je
outs
xor
add
je
outs
outs
xor
add
je
outs
outs
xor
add
je
outs
outs
xor
add
je
outs
outs
xor
inc
popa
je
push
imul
gs
add
gs
imul
gs
add
arpl
gs
outs
js
add
ins
gs
arpl
inc
outs
ja
xor
dec
jne
gs
arpl
inc
outs
ja
xor
dec
outs
je
data16
arpl
xor
dec
outs
outs
je
inc
popa
ins
outs
fs
jb
add
outs
addr16
jae
inc
popa
jb
add
arpl
gs
outs
js
add
imul
outs
xor
push
popa
imul
outs
xor
push
popa
imul
outs
xor
inc
jb
jne
inc
outs
js
add
outs
jne
inc
outs
js
add
outs
jne
inc
outs
js
add
outs
jne
inc
outs
js
add
outs
jne
inc
outs
js
add
outs
jne
inc
outs
js
add
outs
jne
inc
outs
js
add
outs
gs
xor
push
popa
outs
gs
xor
push
imul
outs
js
add
arpl
gs
outs
js
add
jae
gs
cs
gs
jne
arpl
add
jae
jne
arpl
popa
outs
popa
addr16
jb
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
ins
je
jb
dec
outs
outs
add
jae
jne
arpl
jne
je
jb
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
addr16
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
gs
cs
jb
ja
outs
add
je
popa
jo
addr16
arpl
xor
outs
outs
add
je
push
push
jb
pop
inc
jb
jns
inc
jne
je
jb
add
xor
outs
outs
add
pop
inc
popa
jb
pop
inc
jb
jns
push
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jo
imul
push
gs
imul
add
popa
jne
je
outs
jae
popa
outs
arpl
popa
fs
popa
outs
fs
gs
popa
fs
popa
outs
fs
gs
outs
arpl
bound
arpl
jne
outs
push
popa
jbe
push
gs
imul
je
inc
gs
jne
je
inc
gs
jne
je
addr16
push
gs
imul
je
imul
jae
gs
cs
push
imul
imul
gs
addr16
inc
outs
jne
je
addr16
inc
popa
jo
arpl
jns
addr16
dec
je
ins
add
je
dec
jae
ins
imul
pop
dec
je
ins
add
ins
outs
jbe
push
popa
outs
add
je
inc
popa
jo
arpl
jns
push
jns
je
ins
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
outs
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
add
imul
jae
inc
outs
ins
jo
je
bound
gs
push
outs
fs
outs
add
je
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
push
jne
add
je
outs
je
arpl
imul
add
je
dec
jae
imul
jae
popa
outs
arpl
jae
je
inc
outs
popa
bound
imul
jns
gs
jae
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
push
ja
dec
outs
fs
je
push
push
ja
push
je
ins
add
je
dec
popa
imul
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
imul
imul
jne
addr16
imul
jb
bound
add
inc
push
push
inc
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
addr16
outs
je
js
gs
imul
je
ins
cs
gs
arpl
outs
add
addr16
outs
jbe
arpl
imul
jo
imul
je
outs
ins
add
je
dec
jae
imul
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
imul
push
je
imul
ins
jae
inc
gs
gs
jne
arpl
je
imul
popa
ins
imul
imul
jo
imul
imul
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
push
arpl
je
add
arpl
je
outs
outs
add
je
jb
push
arpl
jb
jb
addr16
dec
outs
outs
gs
js
gs
imul
pop
dec
gs
popa
add
gs
jb
jb
push
arpl
jb
jb
push
gs
outs
jbe
add
ins
jo
outs
outs
je
dec
jns
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
ins
push
imul
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
jne
gs
je
jb
xor
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
inc
outs
jne
gs
je
jb
dec
outs
jbe
dec
gs
add
imul
ins
add
je
imul
jo
inc
js
ins
imul
je
je
jb
bound
gs
popa
ins
jne
add
je
dec
popa
ins
gs
popa
arpl
popa
ins
add
bound
arpl
fs
outs
outs
outs
je
je
outs
outs
add
outs
arpl
add
jae
gs
cs
outs
jb
add
jae
gs
cs
imul
ins
gs
bound
push
gs
arpl
popa
jae
add
je
inc
imul
jb
bound
add
je
dec
gs
inc
je
jb
bound
add
je
dec
jae
popa
ins
gs
popa
arpl
arpl
popa
je
outs
outs
add
outs
outs
je
je
outs
outs
add
je
dec
popa
ins
add
je
dec
outs
arpl
dec
popa
ins
add
pop
inc
jno
popa
ins
imul
outs
jae
outs
outs
inc
je
jb
bound
add
outs
je
popa
outs
fs
gs
popa
fs
dec
outs
popa
add
imul
add
jp
inc
add
outs
je
imul
jne
jo
jb
dec
outs
imul
add
imul
push
jne
jo
outs
fs
popa
jns
jne
add
je
dec
outs
arpl
imul
pop
dec
popa
ins
add
je
push
imul
pop
push
popa
bound
fs
inc
jne
je
outs
inc
popa
jae
add
je
push
gs
add
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
dec
imul
jb
ins
add
je
inc
outs
jb
popa
je
imul
ins
gs
je
inc
jne
outs
push
imul
pop
push
imul
jae
je
push
popa
bound
outs
jo
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
inc
outs
outs
je
outs
ins
jae
dec
ins
popa
add
je
dec
ins
popa
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
jne
outs
push
arpl
gs
outs
fs
je
inc
ins
imul
add
fs
outs
imul
gs
popa
jns
jne
add
jb
outs
jb
dec
popa
jns
jne
add
jae
gs
cs
dec
add
je
add
je
gs
jo
popa
je
add
je
inc
js
arpl
popa
bound
popa
je
add
ins
gs
jns
je
ins
add
outs
dec
outs
fs
outs
inc
arpl
jae
add
outs
push
push
inc
imul
dec
dec
inc
add
jb
outs
addr16
push
jo
arpl
inc
imul
outs
je
xor
inc
imul
add
ins
jo
jb
dec
gs
outs
add
ins
imul
je
inc
imul
jb
arpl
jae
push
je
jb
add
outs
jae
add
gs
je
push
jb
push
arpl
jb
jb
push
jns
je
ins
cs
gs
add
jb
outs
addr16
jne
ins
fs
inc
ins
jo
jns
addr16
dec
outs
addr16
add
bound
jb
outs
add
inc
push
jb
jns
inc
jae
add
je
jb
outs
arpl
add
arpl
ins
outs
je
dec
popa
je
add
js
inc
push
jo
outs
add
je
dec
outs
addr16
add
imul
outs
gs
je
fs
je
jb
bound
add
arpl
jae
fs
push
push
gs
jns
je
jb
bound
add
data16
outs
arpl
jno
popa
ins
jae
inc
jae
gs
bound
addr16
inc
jae
gs
bound
inc
gs
bound
arpl
gs
imul
add
outs
arpl
outs
outs
imul
je
push
popa
jbe
dec
jns
gs
imul
js
je
push
popa
jbe
add
push
arpl
outs
ja
outs
outs
je
outs
ins
add
arpl
outs
jb
jns
arpl
imul
popa
ins
jne
push
jns
add
jne
outs
ja
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
push
ja
add
jne
addr16
bound
je
jb
bound
add
jne
imul
jae
inc
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
popa
jb
gs
jb
ins
gs
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
imul
jne
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
jae
gs
bound
imul
imul
je
bound
push
je
bound
gs
add
mov
call
mov
pushf
test
mov
in
mov
xchg
mov
out
test
mov
call
cdq
in
mov
pushf
mov
mov
call
lahf
in
xchg
call
test
call
test
pushf
xchg
out
xchg
out
mov
mov
in
mov
push
gs
jne
arpl
cs
jae
jne
arpl
add
mov
call
mov
pushf
test
mov
in
mov
xchg
mov
out
test
mov
call
cdq
in
mov
pushf
mov
mov
call
lahf
in
xchg
call
test
call
test
pushf
xchg
out
xchg
out
mov
mov
in
mov
inc
outs
jb
xor
jb
jae
jne
arpl
add
add
add
outs
add
add
je
jns
and
arpl
popa
add
and
outs
add
ins
add
and
bound
add
add
add
add
add
add
outs
add
add
outs
add
add
push
add
outs
add
outs
add
ins
add
pop
add
add
jne
jb
jae
imul
inc
add
jb
ins
add
jb
add
je
add
xor
outs
add
outs
add
ins
add
pop
add
add
dec
add
outs
add
jb
inc
add
arpl
add
je
imul
add
inc
add
je
je
outs
add
xor
add
inc
add
je
je
outs
add
xor
add
inc
add
ins
add
outs
add
outs
add
xor
add
inc
add
add
imul
add
add
jae
je
inc
add
js
xor
add
inc
add
add
imul
add
add
jae
je
inc
add
js
xor
add
inc
add
add
imul
add
js
xor
add
inc
add
add
imul
add
js
xor
add
inc
add
je
je
outs
add
xor
add
inc
add
je
je
outs
add
xor
add
inc
add
je
je
outs
add
xor
add
je
je
outs
add
add
cmovb
jne
je
je
outs
add
aaa
add
cmovb
jne
je
je
outs
add
cmp
add
inc
add
je
je
outs
add
cmp
add
inc
add
je
je
outs
add
xor
xor
add
inc
add
je
je
outs
add
xor
xor
add
inc
add
je
je
outs
add
xor
xor
add
inc
add
je
je
outs
add
xor
xor
add
inc
add
je
je
outs
add
xor
xor
add
inc
add
je
add
add
add
imul
add
xor
add
inc
add
je
add
add
add
imul
add
xor
add
ins
add
jb
imul
jo
inc
add
ja
outs
add
add
sbb
ins
add
jb
imul
jo
inc
add
ja
outs
add
add
pop
dec
add
je
imul
dec
add
outs
add
xor
add
outs
add
add
popa
add
add
add
jb
xor
add
push
add
outs
add
jb
add
jae
inc
add
jb
xor
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
push
add
add
outs
add
jne
je
je
outs
add
xor
add
inc
add
outs
add
jo
inc
add
js
xor
add
inc
add
outs
add
jo
inc
add
js
xor
add
inc
add
outs
add
jo
inc
add
js
xor
add
inc
add
outs
add
jo
inc
add
js
xor
add
inc
add
outs
add
jo
inc
add
js
xor
add
outs
add
jo
inc
add
js
add
adc
jb
outs
add
jo
inc
add
js
aaa
add
or
outs
add
ins
add
add
or
outs
add
ins
add
add
pop
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
push
add
arpl
je
jne
jb
add
outs
add
xor
add
inc
add
jb
ins
add
add
inc
hlt
pop
ja
dec
dec
inc
mov
lea
pop
push
inc
mov
dec
dec
jnp
repz
cmp
pop
push
ja
inc
jb
dec
xchg
mov
push
cmp
pop
inc
mov
pop
jnp
ja
cmp
mov
sub
push
or
inc
xchg
mov
or
mov
jge
jge
push
in
inc
jb
jbe
mov
pop
cmp
jnp
adc
dec
test
bound
mov
jg
push
mov
push
push
dec
dec
add
jl
jg
push
cmp
sbb
bound
adc
ins
add
jae
je
jns
outs
add
add
pop
add
outs
add
jb
jns
jo
je
popa
add
add
add
js
add
pop
ror
add
push
dec
dec
ror
mov
bound
inc
mov
inc
mov
jge
dec
inc
mov
push
in
cmp
repz
push
test
mov
mov
in
pusha
dec
sub
add
add
outs
add
jb
arpl
add
add
add
xor
xor
sub
add
outs
add
sbb
add
and
inc
add
jb
imul
add
jb
ins
add
add
(bad)
stos
outs
scas
scas
fistp
inc
mov
and
add
mov
pop
push
sbb
mov
mov
pop
jg
aad
cmp
add
add
add
sbb
push
adc
or
sbb
add
add
or
push
adc
or
add
adc
pop
push
adc
or
add
sbb
push
adc
sbb
add
adc
push
adc
adc
add
adc
pop
push
adc
sbb
add
or
or
adc
add
add
sbb
add
adc
or
adc
add
add
sub
push
adc
add
sub
push
add
adc
add
add
add
xor
add
adc
add
push
adc
add
add
sbb
and
or
add
and
add
add
sub
adc
add
add
add
push
adc
add
add
add
add
push
adc
sub
adc
sub
push
adc
sub
add
adc
sub
add
push
adc
add
adc
add
adc
add
adc
sldt
sbb
adc
xor
adc
cmp
xor
add
sub
cmp
xor
add
adc
sub
adc
sub
add
adc
sbb
adc
pop
push
adc
xor
sbb
adc
xor
sub
add
add
add
add
push
adc
push
adc
and
adc
and
add
inc
add
adc
and
adc
and
add
dec
add
adc
and
adc
and
add
dec
add
adc
and
adc
and
add
push
add
adc
and
adc
and
add
push
add
adc
and
adc
and
add
pop
add
adc
and
adc
and
add
pop
add
adc
and
adc
and
add
popa
add
adc
and
adc
and
add
add
adc
and
adc
and
add
imul
and
adc
and
add
ins
add
adc
and
adc
and
add
jno
push
adc
and
adc
and
add
jne
push
push
inc
xchg
mov
or
mov
jge
jge
push
in
inc
jb
jbe
mov
pop
cmp
jnp
adc
dec
test
bound
mov
jg
push
mov
push
push
dec
dec
add
jl
jg
push
cmp
sbb
bound
and
add
jns
add
push
push
push
add
add
inc
add
add
dec
add
add
dec
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
popa
add
add
gs
add
imul
sub
adc
sub
adc
push
adc
push
adc
adc
add
adc
add
add
test
add
jge
or
adc
adc
xor
push
add
push
sbb
add
add
jns
add
adc
add
add
xor
adc
or
sbb
add
or
and
add
and
add
adc
add
or
add
or
add
add
add
sbb
and
add
add
pop
or
or
or
adc
or
add
add
add
add
push
push
and
add
sbb
sbb
sbb
adc
add
add
add
add
push
sbb
add
dec
jns
gs
jo
popa
je
or
xor
xor
xor
xor
add
add
add
add
add
add
add
add
adc
or
adc
or
adc
sbb
adc
adc
adc
sbb
add
or
pop
add
or
add
sbb
add
adc
pop
add
sbb
add
push
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
add
or
cs
outs
jb
jae
add
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
add
add
sub
add
sub
pop
add
pop
add
adc
add
push
push
sbb
add
add
add
add
add
add
add
sub
and
adc
add
adc
push
add
adc
add
add
add
add
pop
add
add
add
and
pop
and
push
push
push
push
pop
add
sbb
jae
gs
cs
imul
inc
outs
jb
jae
inc
outs
jb
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
cs
jns
jb
push
arpl
outs
jb
jae
add
add
add
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
adc
add
add
add
add
add
adc
sub
adc
pop
adc
adc
adc
add
sub
adc
add
sub
adc
add
adc
adc
sbb
pop
add
xor
adc
add
adc
adc
adc
add
sbb
sbb
add
adc
add
add
push
add
add
or
adc
add
adc
add
cmp
pop
adc
sbb
add
add
or
add
cmp
adc
adc
push
add
add
cmp
add
xor
add
push
pop
add
add
cmp
cmp
adc
xor
sub
adc
push
or
cmp
or
adc
or
add
or
add
add
sub
sub
add
adc
add
inc
push
and
add
and
and
adc
add
adc
and
add
add
or
and
add
sub
pop
push
adc
adc
adc
add
add
inc
add
add
dec
add
add
dec
add
add
push
add
add
push
add
add
pop
add
add
pop
add
add
popa
add
add
gs
add
imul
pop
add
jno
pop
add
jne
add
push
sldt
add
push
adc
adc
add
or
add
or
add
or
push
or
add
or
add
adc
add
push
or
push
add
adc
add
sub
or
or
sbb
or
or
add
or
add
or
add
or
or
add
or
and
adc
adc
or
xor
push
push
sbb
or
or
add
add
or
ins
bound
outs
js
add
or
add
inc
jne
je
outs
xor
add
add
inc
jne
je
outs
xor
add
add
or
arpl
gs
outs
js
add
adc
add
push
imul
outs
js
add
or
add
push
popa
outs
gs
xor
add
add
push
push
popa
outs
gs
xor
add
add
or
outs
jne
inc
outs
js
add
push
add
or
outs
jne
inc
outs
js
add
push
add
or
outs
jne
inc
outs
js
add
push
add
or
outs
jne
inc
outs
js
add
push
add
or
outs
jne
inc
outs
js
add
push
add
or
outs
jne
inc
outs
js
add
push
add
or
outs
jne
inc
outs
js
add
adc
add
popa
imul
outs
xor
add
add
or
popa
imul
outs
xor
add
add
or
popa
imul
outs
xor
add
add
or
arpl
gs
outs
js
add
adc
add
jb
addr16
jae
inc
popa
jb
add
adc
add
dec
outs
outs
je
inc
popa
ins
outs
fs
jb
add
adc
add
dec
outs
je
data16
arpl
xor
add
add
push
dec
jne
gs
arpl
inc
outs
ja
xor
add
add
push
dec
jne
gs
arpl
inc
outs
ja
xor
add
add
or
arpl
gs
outs
js
add
adc
add
inc
popa
je
push
imul
gs
add
adc
add
inc
popa
je
push
imul
gs
add
or
jne
je
outs
xor
add
jne
je
outs
xor
add
or
jne
je
outs
xor
add
or
jne
je
outs
xor
add
or
jne
je
outs
xor
add
or
add
inc
jne
je
outs
cmp
add
add
inc
jne
je
outs
cmp
add
add
inc
jne
je
outs
aaa
add
or
add
inc
jne
je
outs
add
or
add
inc
jne
je
outs
xor
add
inc
jne
je
outs
xor
add
add
inc
jne
je
outs
xor
add
add
or
arpl
outs
js
add
push
add
or
arpl
outs
js
add
adc
add
inc
push
fs
imul
add
adc
add
inc
push
fs
imul
add
add
sbb
and
adc
add
adc
adc
jge
add
add
adc
adc
add
add
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
adc
push
and
add
adc
pop
add
dec
dec
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
xor
add
or
cs
gs
imul
and
add
sbb
add
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
cs
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
xor
jb
imul
imul
push
adc
jb
ins
gs
jb
inc
imul
popa
ins
gs
cs
inc
push
and
popa
ins
gs
jb
and
inc
ins
imul
outs
imul
pop
xor
xor
xor
xor
add
add
and
cmp
xor
fs
sub
sub
xor
xor
xor
cmp
add
add
sbb
jo
jb
addr16
and
arpl
jae
data16
xor
xor
add
outs
add
imul
mov
mov
in
(bad)
in
and
mov
xchg
mov
out
test
mov
call
cdq
in
mov
pushf
mov
mov
call
lahf
in
xchg
call
test
call
test
pushf
xchg
out
xchg
out
mov
mov
in
mov
add
add
or
arpl
jae
data16
add
inc
add
fiadd
add
and
add
inc
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
