in
pop
jmp
xchg
sbb
ins
ins
pop
pop
cmp
jb
sbb
mov
nop
cmp
jno
les
push
sub
(bad)
aam
jge
icebp
sbb
(bad)
aam
pop
inc
hlt
xchg
inc
push
imul
inc
mov
xchg
adc
push
push
adc
bound
adc
mov
xchg
sbb
aam
sbb
adc
dec
jmp
dec
dec
xor
aam
mov
sbb
pop
fdiv
dec
sbb
sbb
inc
nop
mov
cld
call
xchg
inc
outs
pop
pop
adc
pop
test
mov
xchg
sbb
and
pop
sbb
push
pushf
(bad)
sbb
jmp
loope
daa
les
test
call
xchg
sbb
call
aam
xchg
outs
mov
sbb
or
xchg
pop
mov
xchg
bound
test
mov
mov
jmp
fs
sbb
dec
mov
out
jmp
xchg
sub
fs
sbb
fs
sbb
jmp
inc
inc
cmp
dec
xchg
mov
aas
fcom
fst
cld
popa
sub
mov
out
popf
push
fstp
xor
out
sub
outs
jmp
fsub
dec
in
fcom
outs
jmp
sub
out
adc
push
or
dec
icebp
imul
out
loope
adc
or
xchg
sbb
(bad)
aam
jae
cmp
fs
aam
(bad)
fldcw
sbb
les
fcomp
sbb
adc
xor
adc
mov
aam
sbb
mov
or
pop
aam
call
pop
sbb
push
fstp
bound
cmc
inc
mov
xchg
sbb
pop
shl
repnz
test
popf
xor
mov
mov
jge
(bad)
aam
sbb
pop
cld
jae
mov
jno
jb
sbb
pop
cmp
(bad)
aam
call
jl
xor
adc
xor
or
jae
or
test
test
rcl
sbb
popf
loope
test
inc
fs
sbb
aam
cmp
fs
sbb
push
fld
push
sbb
icebp
sub
aam
shl
aam
fisub
nop
cld
fcmovb
push
sbb
mov
aam
dec
xor
mov
pushf
xchg
addr16
jmp
jae
or
jae
or
jae
or
sbb
loop
cmp
sbb
sbb
and
sub
adc
inc
or
xchg
pushf
xchg
addr16
xor
pushf
call
ret
sbb
sbb
sub
(bad)
in
jae
mov
xchg
popf
push
sub
out
test
push
arpl
sbb
popf
aam
ins
addr16
pop
mov
cwde
out
jne
sbb
loope
or
xlat
and
sub
pop
dec
nop
xchg
adc
and
adc
movs
pop
pop
loope
pop
pop
in
mov
push
sbb
aam
sbb
aam
ins
outs
sub
push
fistp
(bad)
fucomp
ins
in
repnz
ins
add
enter
mov
icebp
fistp
aam
nop
movs
sub
dec
arpl
(bad)
fucomp
ins
in
bnd
fs
mov
sbb
mov
nop
loope
xor
sub
pop
dec
nop
xchg
xor
dec
pop
loope
call
jno
aam
sbb
aam
ins
outs
sub
mov
bound
adc
sub
pop
int3
out
jbe
ins
add
jb
ins
in
nop
arpl
bound
out
sub
cmp
aam
adc
adc
mov
adc
inc
stos
pop
dec
nop
xchg
cmp
pop
fcomp
pop
call
loope
xchg
jmp
jl
pop
pop
icebp
jmp
loope
addr16
bound
in
bound
in
aas
ja
mov
xchg
std
nop
daa
xor
jl
pop
pop
(bad)
loope
addr16
(bad)
in
repnz
pop
pop
in
sub
dec
push
cmps
sbb
pop
in
leave
ins
arpl
out
loop
sbb
pop
sub
out
xchg
pop
pop
or
in
ins
addr16
pop
in
in
cwde
pop
call
call
loop
sbb
pop
sub
out
sahf
pop
pop
adc
adc
cdq
and
pop
xchg
in
loopne
out
popf
ins
out
(bad)
aam
inc
cmp
mov
icebp
pop
mov
dec
xchg
pop
fcom
in
sub
popf
das
addr16
out
out
popf
mov
sbb
(bad)
xchg
sbb
loope
out
loop
sbb
pop
sub
fistp
aas
das
nop
xchg
aas
or
aaa
fcom
sbb
aam
out
in
(bad)
mov
in
sub
nop
mov
sub
out
pop
shl
adc
out
pop
pushf
sbb
out
cmp
rcr
aaa
pop
cld
call
inc
adc
jg
dec
xchg
daa
sub
in
xchg
mov
nop
daa
and
pop
sahf
in
repnz
cmp
pusha
(bad)
aam
fs
retf
les
mov
rcr
loopne
std
rcl
loope
js
jbe
pop
and
fistp
sahf
pop
pop
cmc
jmp
icebp
out
pop
cmp
in
mov
mov
cmp
dec
xor
xchg
inc
outs
adc
xchg
clc
sbb
xchg
in
mov
sub
out
mov
icebp
sti
sbb
sbb
das
mov
dec
jmp
out
repz
retf
xor
jmp
inc
nop
mov
shr
pop
or
popf
shr
and
xchg
pop
push
sbb
in
xchg
loope
daa
and
jl
pop
pop
jmp
cmp
rcr
aaa
pop
cld
call
ins
or
mov
push
jne
xchg
pop
sahf
pop
fistp
mov
shr
and
nop
out
mov
xchg
pop
push
cmps
sbb
nop
pop
push
adc
pop
add
sbb
adc
bnd
and
push
xor
pop
sahf
pop
pop
loope
xchg
in
out
pop
sub
pop
xchg
pop
pop
in
adc
inc
cmp
dec
dec
xor
cmp
pop
push
fiadd
aam
out
mov
ins
adc
bound
out
daa
sub
jno
aaa
pop
sbb
sub
popf
sub
pop
sub
xor
lock
sub
shl
xchg
jmp
mov
loope
adc
ins
push
pop
ins
(bad)
aam
fisttp
aam
sbb
sub
sbb
dec
out
fdiv
or
icebp
jecxz
aam
fbld
sbb
adc
sbb
xchg
xor
inc
cmp
rcr
aaa
pop
cld
dec
xor
cmps
arpl
cmp
call
test
xchg
sbb
push
fistp
dec
jmp
pop
pop
sbb
jp
dec
adc
shl
das
jmp
pop
loope
test
in
adc
not
aam
inc
cmp
rcr
aaa
pop
cld
call
ins
adc
push
pop
dec
es
loope
call
jg
aam
sbb
pop
pop
jmp
and
icebp
xchg
aam
nop
mov
aam
sub
adc
pop
mov
fldcw
jno
adc
dec
icebp
or
sub
imul
test
adc
das
jmp
call
xchg
sbb
jb
or
sbb
pop
nop
loope
xor
sub
adc
pop
sbb
ins
addr16
pop
mov
dec
icebp
push
out
cmp
ja
aam
sub
pop
dec
nop
xchg
arpl
icebp
fist
aam
dec
xor
mov
cwde
mov
push
and
(bad)
xchg
sbb
popf
aam
ins
gs
cmp
(bad)
xchg
sbb
ret
lods
lods
pop
(bad)
in
pop
adc
(bad)
aam
pop
outs
ja
lods
and
mov
out
sbb
nop
mov
xchg
sbb
push
int3
mov
dec
jmp
push
jmp
dec
mov
repnz
out
bound
clc
popf
sub
dec
popf
mov
sbb
or
jno
adc
out
test
ds
sub
call
sbb
cmp
rcl
sbb
pushf
xor
out
cli
jmp
int
pushf
sub
dec
jmp
ror
pop
sub
jmp
in
pop
and
push
out
sbb
bound
in
fistp
pop
sub
cwde
pop
test
pop
bound
out
bound
rcl
xchg
sbb
push
pusha
pop
sbb
call
jne
lods
and
nop
pop
call
jae
cmp
ins
(bad)
aam
nop
mov
mov
pop
adc
xchg
daa
sub
pop
mov
lods
and
xchg
pop
xchg
test
jmp
mov
jmp
sbb
dec
inc
pop
pop
in
daa
int3
and
adc
pop
(bad)
jno
rcl
sbb
xchg
jmp
or
bound
in
adc
and
or
cli
jmp
leave
out
sub
out
sub
(bad)
ja
sbb
pop
and
cmc
inc
sbb
bound
in
adc
or
shl
and
out
(bad)
aam
pop
outs
in
pushf
lds
pop
shl
pop
ficomp
(bad)
aam
adc
dec
mov
sub
sub
pop
xchg
in
pop
loope
push
xor
popf
sub
sbb
shr
pop
fiadd
(bad)
rcr
aaa
pop
cld
call
cmp
jno
nop
loope
sub
ficom
nop
jmp
call
push
and
xchg
(bad)
aam
adc
sub
sbb
nop
jmp
repnz
jmp
xor
sub
or
mov
pop
push
pop
sbb
sub
ins
push
jl
bound
adc
nop
sbb
xor
aaa
push
aam
call
sbb
movs
sar
icebp
jmp
out
imul
jmp
xor
jmp
call
cmp
and
repnz
jecxz
cli
aaa
(bad)
aam
jl
aam
ret
nop
loope
sub
fisubr
ins
sbb
mov
xchg
pop
push
sbb
sbb
loope
in
jecxz
imul
pop
xchg
daa
fcomp
pushf
push
sub
out
mov
sbb
test
out
push
sub
or
sbb
push
pop
loope
call
jae
mov
sbb
bound
icebp
push
movs
sbb
jmp
loope
pusha
mov
icebp
push
adc
sbb
loope
out
loop
sbb
pop
sub
xchg
push
xchg
test
pop
fsub
ins
call
sbb
xchg
in
dec
or
jno
adc
addr16
sbb
bound
ins
loope
shl
mov
stos
pop
dec
nop
xchg
pusha
aam
daa
or
sbb
and
mov
adc
or
sti
pop
bound
je
aam
pushf
xchg
sub
out
push
fucom
pushf
sub
out
out
cmp
fst
out
adc
bound
xor
cmp
imul
(bad)
adc
sbb
popf
push
repnz
out
push
fucom
pushf
sub
fs
out
adc
pop
(bad)
aam
(bad)
jecxz
jle
(bad)
aam
pushf
sub
out
jne
mov
pop
sub
jmp
in
mov
or
out
test
adc
xchg
and
aam
nop
daa
sub
sbb
push
pushf
cmp
sbb
out
push
(bad)
pushf
sub
(bad)
ja
sbb
pop
and
xor
pop
shr
pop
ficomp
out
adc
bound
lods
mov
lock
popf
push
fst
jmp
pop
nop
fild
out
pop
pushf
aad
sub
mov
jecxz
push
add
xchg
pushf
fsubr
out
xor
mov
pop
sub
jmp
in
mov
aam
jg
imul
sbb
movs
in
sub
sbb
lods
push
(bad)
aam
sbb
mov
pop
bound
in
sub
dec
mov
fst
fbld
out
pop
shr
pop
pushf
mov
sub
nop
mov
sub
out
sub
sbb
popf
and
aad
stos
out
sub
out
push
in
pushf
sub
xor
mov
push
adc
popf
sub
fbld
dec
mov
(bad)
pusha
out
popf
aam
and
pusha
pop
sbb
pushf
fbld
sbb
xchg
aaa
nop
pushf
retf
out
pop
jae
or
sti
pop
bound
push
xchg
sub
call
sbb
mov
pop
sbb
imul
icebp
push
and
out
adc
sbb
(bad)
pushf
(bad)
sub
out
aam
sbb
aad
fadd
je
sbb
push
fst
bound
mov
movs
lahf
sub
out
cmp
in
popf
sub
out
aam
adc
sub
sbb
jae
or
pop
bound
rcl
fsub
popf
aam
ins
inc
mov
pop
sbb
imul
icebp
int3
and
out
adc
sbb
(bad)
pushf
(bad)
sub
out
aam
sbb
daa
jmp
(bad)
aam
sbb
ja
pop
bound
call
and
popf
aam
ins
inc
mov
pop
sbb
imul
icebp
add
out
loope
adc
sbb
(bad)
pushf
(bad)
sub
out
aam
sbb
aad
lea
je
sbb
push
fst
bound
out
popf
aad
sbb
sbb
ss
sbb
test
in
popf
sub
out
aam
adc
sub
sbb
jae
or
mov
xchg
sub
call
sbb
mov
pop
sbb
imul
icebp
mov
adc
sbb
leave
jae
or
in
sub
dec
mov
out
push
fst
bound
out
popf
aad
sbb
repnz
aam
call
ins
shld
lods
and
sbb
test
rcr
(bad)
adc
sbb
dec
mov
(bad)
xchg
sbb
mov
sub
sbb
pop
shr
pop
ficom
test
out
pop
and
xor
fstp
push
out
sbb
bound
mov
jmp
sub
pop
sub
jmp
in
mov
push
fs
fistp
mov
nop
rcl
(bad)
jno
out
sub
call
push
xchg
retf
sbb
daa
xchg
dec
(bad)
aam
fsubp
jl
out
ret
sbb
out
out
popf
aad
sbb
pushf
sbb
sub
out
out
popf
test
cwde
mov
pop
pushf
int
sub
dec
or
bound
mov
jmp
aam
sbb
pop
in
adc
pushf
xor
sbb
out
push
leave
out
sub
out
out
popf
test
sbb
nop
pop
sahf
pop
shr
pop
ficomp
out
sbb
icebp
popf
sub
dec
jmp
sub
pop
sub
jmp
in
mov
xlat
sbb
out
push
icebp
out
sub
out
out
popf
test
nop
daa
sub
(bad)
test
cld
sbb
nop
rcl
out
jmp
xchg
pushf
xchg
out
xor
icebp
popf
sub
dec
jmp
pop
pop
in
adc
pushf
adc
sbb
fimul
cli
nop
out
out
popf
pop
ficomp
popf
aam
lods
call
pop
bound
in
sub
dec
mov
fst
pushf
sub
lock
sbb
or
icebp
aas
paddq
nop
mov
sub
out
out
popf
test
adc
out
test
arpl
aam
call
out
popf
(bad)
sbb
popf
pop
pushf
sbb
test
loope
or
(bad)
aam
mov
pushf
sub
mov
xchg
jno
movs
mov
out
xor
clc
nop
pop
sahf
push
(bad)
xor
sbb
mov
aam
call
xchg
pushf
retf
out
mov
xchg
pushf
ret
out
pop
and
jbe
sbb
(bad)
aam
pop
sahf
push
repnz
sbb
mov
aam
xchg
out
out
popf
test
out
pop
and
xor
ins
inc
arpl
out
cli
jmp
xchg
out
sub
sbb
pop
sbb
call
cmp
jae
mov
jne
bound
nop
pushf
ds
out
pop
jg
out
out
popf
(bad)
sbb
popf
pop
pushf
popa
popf
sub
xchg
out
out
popf
test
loope
or
(bad)
aam
mov
pushf
sub
mov
xchg
jno
movs
retf
out
pop
es
mov
repnz
sbb
mov
aam
call
xchg
pushf
jmp
cli
and
xchg
pushf
out
out
xor
out
jmp
nop
pop
sahf
fstp
push
out
sbb
bound
xchg
popf
sub
sbb
or
(bad)
aam
pushf
add
out
xor
out
popf
pop
pushf
xchg
popf
sub
dec
jmp
pop
pop
in
inc
ins
sbb
cli
nop
out
out
popf
pop
ficomp
out
sbb
bound
out
push
pushf
aam
aam
call
push
popf
mov
push
inc
out
sub
xlat
mov
sub
sub
pop
jmp
dec
out
sub
sbb
imul
out
sbb
bound
pushf
jmp
(bad)
aam
jae
sub
out
out
popf
test
adc
out
test
dec
or
sbb
dec
or
(bad)
pop
in
pushf
sub
and
jmp
loope
pushf
sub
lods
ss
out
push
inc
out
sub
out
out
popf
pop
popf
sbb
sub
out
cmp
jae
aam
(bad)
sbb
out
test
adc
out
test
out
or
sbb
arpl
(bad)
imul
popf
popf
sub
dec
jmp
ins
cmp
push
dec
out
sub
out
sub
out
push
mov
pushf
sub
fwait
fs
out
push
mov
pushf
sub
push
sub
jmp
sub
push
sub
popf
push
cmc
out
sub
out
push
cmc
out
sub
fwait
mov
imul
ins
adc
jmp
sbb
jmp
xchg
pushf
mov
out
xor
out
fcomp
out
mov
out
popf
test
mov
xchg
aaa
nop
pushf
into
sub
out
pop
call
mov
out
popf
test
xchg
out
out
popf
test
xchg
out
out
popf
test
mov
xchg
aaa
nop
pushf
retf
out
pop
xchg
pushf
sub
out
pop
sub
xor
lock
(bad)
rcr
aaa
pop
cld
jae
mov
jno
jb
sbb
aam
sbb
jge
inc
aam
sbb
cmc
add
or
cmp
pop
xchg
fs
jmp
out
(bad)
jmp
stc
xchg
pop
xor
xchg
pop
in
aam
sbb
xchg
std
pop
push
aam
jno
(bad)
sbb
mov
jo
bound
sbb
popf
push
and
(bad)
xchg
sbb
pop
or
fisubr
sbb
jl
jmp
lds
xchg
pop
in
sub
out
icebp
ficomp
sbb
bound
lds
xchg
shl
jnp
cwde
(bad)
xchg
repnz
popf
sub
inc
cmp
mov
(bad)
aam
sbb
sbb
nop
cld
xor
and
loope
adc
(bad)
xchg
sbb
mov
pop
sbb
aam
sbb
pop
fisttp
cmp
bound
(bad)
aam
(bad)
jmp
in
movs
mov
mov
cmp
adc
mov
aaa
pop
shl
stos
pop
fsub
addr16
bound
call
mov
out
sbb
jmp
call
push
cmp
std
xchg
sbb
loope
adc
cmp
rcr
sbb
fmul
outs
aam
fisub
sbb
sbb
bound
pop
call
xchg
sbb
aam
pop
and
adc
ins
pop
sahf
sbb
and
(bad)
aam
push
in
test
sbb
cmp
sbb
fld
xchg
aam
lock
sbb
popf
shr
and
sub
loop
cmp
not
call
sbb
dec
pop
sbb
push
adc
std
xchg
sbb
shl
push
out
sbb
bound
sbb
sti
xchg
sbb
push
fnstcw
sbb
xchg
aas
pop
out
in
xchg
push
lock
lock
sbb
popf
shl
xchg
aam
pop
pusha
aam
out
mov
sbb
std
xchg
sbb
push
shr
(bad)
ins
adc
out
clc
jmp
jmp
add
xchg
sbb
ret
pop
bound
mov
aam
aaa
popf
sub
out
addr16
xchg
shr
push
adc
or
mov
push
adc
std
xchg
sbb
popf
and
std
xchg
sbb
push
shr
(bad)
push
adc
std
xchg
sbb
jmp
sbb
jmp
mov
mov
mov
out
and
std
xchg
sbb
push
shr
(bad)
push
adc
std
xchg
sbb
jecxz
cmp
(bad)
aam
sbb
dec
pop
sbb
sbb
mov
out
and
std
xchg
sbb
push
shr
(bad)
pop
shl
stos
pop
fcomp
(bad)
(bad)
ficomp
dec
pop
sbb
sbb
mov
popf
sub
addr16
xchg
pop
shr
stos
pop
fcomp
bound
mov
arpl
and
arpl
fsub
fld
xchg
aam
lock
aam
sbb
cmp
arpl
and
(bad)
aam
mov
arpl
adc
(bad)
aam
mov
arpl
and
(bad)
aam
out
mov
sbb
std
xchg
sbb
mov
bound
(bad)
aam
clc
jmp
cmc
nop
mov
xchg
sbb
mov
(bad)
in
lock
fld
xchg
aam
mov
xchg
xor
fcom
rol
xor
imul
sub
sbb
sbb
bound
sbb
sbb
adc
pop
bound
std
xchg
sbb
jecxz
sbb
pusha
pop
sbb
xchg
sbb
addr16
xchg
aas
cmp
addr16
xchg
push
fmul
aam
cdq
outs
int3
xchg
xchg
repnz
adc
inc
arpl
sbb
mov
xchg
sbb
addr16
xchg
xchg
push
popf
movs
aam
sbb
and
xchg
bound
mov
xchg
xor
fcom
aam
imul
daa
and
scas
movs
mov
push
jmp
and
aam
sbb
nop
sbb
cdq
fs
xchg
ins
pop
popf
rcl
mov
aam
pop
sbb
pop
pop
cmc
jmp
push
scas
daa
and
(bad)
aam
ins
imul
sbb
inc
pop
sbb
jmp
sbb
fs
bound
pop
ins
and
sbb
repnz
sbb
mov
cdq
fs
shr
fld
xchg
aam
nop
stos
aad
nop
mov
aam
std
call
std
test
aam
stc
gs
pop
out
loop
out
sbb
fstp
push
loope
adc
inc
fmul
add
and
xchg
ja
mov
pop
sbb
and
out
outs
inc
pop
sbb
fmul
adc
mov
aam
call
repnz
and
xchg
ja
mov
pop
sbb
and
out
outs
inc
pop
sbb
in
xchg
in
sbb
repnz
sbb
sub
xchg
std
sar
adc
repnz
fsubr
inc
aam
inc
cmp
dec
dec
xor
cmps
add
jb
mov
xchg
xor
out
mov
adc
add
sbb
and
dec
icebp
cmp
pop
bound
icebp
sub
pop
bound
(bad)
aam
(bad)
jmp
loope
movs
mov
dec
icebp
dec
mov
sbb
and
and
dec
icebp
jg
sbb
shl
pop
bound
icebp
outs
mov
sbb
mov
shl
cmp
xor
mov
nop
mov
sub
out
pop
sbb
xchg
mov
popf
rol
aam
pop
mov
sbb
bound
sbb
cmp
xchg
daa
jl
pop
xchg
adc
aam
sbb
mov
sbb
aas
jge
(bad)
aam
jl
aam
sbb
pusha
pop
sbb
mov
sbb
push
pop
sbb
cli
nop
daa
dec
nop
(bad)
mov
sbb
aam
fisub
or
sbb
xchg
sbb
outs
pop
sbb
xchg
stc
out
mov
pop
test
jecxz
cdq
add
ficomp
sbb
bound
mov
out
mov
sbb
xchg
jno
pop
mov
xchg
daa
xor
ja
test
push
(bad)
pop
aam
xchg
daa
dec
dec
jae
pop
pop
mov
bound
ins
std
mov
bound
mov
out
xchg
test
lahf
add
sbb
addr16
bound
jae
or
jae
or
out
xchg
jnp
aam
repnz
(bad)
sbb
popf
mov
sbb
popf
shr
and
xchg
pop
mov
std
xor
or
call
repnz
jecxz
shl
aam
inc
cmp
call
test
cmp
xchg
in
mov
sub
jmp
das
sub
jl
aam
retf
jmp
cmc
nop
daa
cmp
sbb
out
xchg
loope
out
xchg
icebp
dec
popf
mov
pop
in
xor
out
push
dec
pop
sbb
xchg
in
repnz
ins
lea
aam
jl
pop
pop
std
jmp
in
mov
imul
int
out
fstp
ins
lods
and
out
push
out
ja
xchg
mov
pop
cld
call
ins
adc
mov
pop
(bad)
in
push
aam
daa
and
aam
sbb
loopne
scas
es
and
aam
sbb
cld
push
scas
es
and
aam
sbb
enter
jecxz
and
aam
sbb
les
scas
es
and
aam
sbb
adc
(bad)
aam
pop
jb
pop
sbb
or
fbld
sub
push
aam
out
aam
sbb
ficom
daa
and
aam
nop
cwde
sahf
push
scas
jbe
and
ins
push
xchg
sbb
nop
jecxz
sbb
aam
mov
mov
repz
or
ja
sub
icebp
data16
sbb
ins
inc
ins
bound
adc
xchg
shl
and
dec
icebp
xor
dec
out
push
or
movs
and
dec
dec
mov
pop
loope
sbb
xchg
aaa
les
loope
sbb
loope
cmp
nop
daa
and
sbb
loope
mov
xchg
dec
xchg
pop
or
sbb
sub
jbe
and
sbb
push
cdq
daa
sub
lock
sub
out
shr
and
cdq
and
jmp
push
cdq
pop
rcr
call
ins
pop
jmp
call
mov
icebp
sbb
pop
mov
sbb
bound
icebp
sbb
call
nop
shl
xchg
ss
sbb
mov
call
aam
sbb
call
nop
loope
push
and
nop
call
sbb
test
cdq
pop
rcr
ins
and
loope
mov
push
scas
data16
(bad)
aam
ins
gs
ins
ss
out
aaa
les
loope
sbb
call
pop
or
nop
sbb
sub
icebp
pop
dec
loope
rcr
aam
cdq
pop
jmp
loop
pop
sbb
popf
nop
loope
cmp
cdq
pop
rcr
ins
pop
pop
loope
mov
cdq
and
jmp
call
call
out
(bad)
aam
push
pop
sub
sbb
add
ret
(bad)
sbb
jmp
(bad)
sbb
cwde
push
repz
(bad)
aam
pop
jecxz
sbb
aad
out
cmp
adc
sbb
pusha
pop
sbb
mov
out
gs
and
pop
jecxz
icebp
sbb
outs
call
(bad)
aam
or
pop
adc
(bad)
in
fild
cmp
call
xchg
sbb
aam
or
adc
and
(bad)
in
nop
call
out
(bad)
out
push
pusha
pop
sbb
sbb
sbb
ds
aam
sbb
hlt
call
or
pop
sahf
pop
or
out
sub
and
sub
mov
xchg
sbb
out
nop
push
sbb
aam
pop
call
nop
cwde
aad
sbb
nop
pop
sbb
sub
sbb
cdq
shr
loope
out
nop
aad
xor
aad
call
sbb
pop
arpl
loope
(bad)
out
push
pusha
pop
sbb
sbb
xor
aad
call
push
lock
and
(bad)
aam
dec
xor
scas
dec
jb
sti
sbb
xchg
sbb
push
sub
out
adc
fidiv
pop
cld
mov
mov
inc
sbb
dec
dec
mov
loopne
popf
adc
mov
(bad)
jmp
push
movs
push
cli
(bad)
popf
sub
(bad)
daa
mul
popf
aam
sbb
pusha
pop
sbb
movs
cli
mov
lds
scas
out
mul
popf
push
and
sbb
add
popf
aam
or
pushf
jmp
jns
and
sbb
inc
push
aam
jmp
or
out
push
push
xchg
outs
fldenv
movs
and
dec
icebp
ret
mov
sbb
inc
mov
popf
sub
pop
(bad)
fld
out
push
pop
xchg
outs
fld
mov
adc
mov
or
out
loopne
dec
sti
xchg
sbb
mov
inc
mov
sbb
bound
lea
out
ins
bound
mov
or
pushf
das
sub
out
push
jmp
inc
jmp
push
and
sbb
popf
and
push
aam
jmp
pop
or
sbb
inc
int
popf
sub
sbb
pusha
pop
sbb
imul
push
out
sbb
bound
loopne
sub
out
shr
and
xchg
mov
pop
fdiv
je
cli
por
sbb
sbb
popf
in
repnz
mov
dec
icebp
(bad)
lea
sbb
adc
sbb
pusha
movs
loope
sub
pop
jecxz
sbb
(bad)
aam
test
add
xor
inc
(bad)
aam
sbb
pusha
pop
sbb
jno
neg
aam
sbb
sub
sbb
lods
cmc
lea
out
xlat
or
out
cmp
jecxz
sub
in
adc
jnp
jno
(bad)
popf
sub
xchg
call
popf
aas
pop
sub
(bad)
fdivr
pusha
xlat
dec
in
loopne
call
mul
popf
mov
sbb
jecxz
out
(bad)
aam
push
jmp
sbb
jb
sbb
popf
aas
push
cwde
mov
push
loop
xchg
aam
outs
aam
ins
in
int3
jecxz
popf
lea
out
aam
sbb
push
xchg
(bad)
popf
sub
popf
aam
and
cmp
out
fistp
out
mov
lods
sar
sbb
mov
mov
sbb
and
nop
mov
jno
neg
and
out
adc
fdiv
pusha
adc
in
outs
lds
out
pop
mov
lea
out
adc
shl
sbb
rcr
xchg
cmp
out
imul
sbb
popf
shr
and
cdq
movs
or
inc
jno
imul
bound
mov
mov
aam
sbb
inc
test
popf
sub
nop
out
(bad)
out
pop
pushf
mov
test
popa
(bad)
nop
pushf
test
out
push
mov
mov
or
out
(bad)
nop
pushf
repnz
out
push
mov
popf
sub
out
push
(bad)
sub
out
push
mov
out
or
out
cmp
inc
(bad)
aam
pushf
mov
out
pop
push
movs
(bad)
popf
sub
push
ffree
popf
sub
out
push
(bad)
sub
out
mov
pop
cmp
aam
mov
or
out
ds
(bad)
popf
sub
rep
xchg
(bad)
aad
out
js
out
aas
and
mov
scas
mov
sbb
popf
call
outs
shr
and
push
scas
mul
mul
popf
adc
or
repz
sbb
popf
mov
dec
icebp
push
sbb
jmp
test
fldcw
jns
(bad)
aam
fs
push
popf
pop
aad
sbb
push
in
neg
jmp
ins
push
loop
adc
ins
push
and
add
sbb
popf
pop
or
sbb
ds
es
sbb
out
adc
loope
std
(bad)
popf
sub
xlat
xor
out
pop
jmp
ins
dec
pop
jmp
and
pop
nop
xchg
push
icebp
sbb
in
sbb
jmp
and
adc
loop
sbb
call
and
push
scas
div
out
adc
or
mov
ja
out
aad
scas
fs
ins
psubsw
sub
(bad)
aam
call
nop
pushf
xchg
out
mov
out
mov
xchg
pushf
xchg
cmp
out
sub
jmp
and
sub
imul
out
ins
bound
adc
movs
ja
ret
out
adc
sbb
call
sbb
pop
cld
cdq
and
(bad)
aam
pop
loop
and
(bad)
aam
sbb
rcr
(bad)
aam
adc
call
sbb
push
xlat
pop
repnz
fld
out
adc
mov
push
enter
daa
mul
popf
test
lods
mov
popa
int
popf
sub
outs
fwait
sub
call
out
bound
mul
popf
aam
mov
sbb
mov
sub
out
pop
sbb
neg
cmp
out
rcr
sbb
add
sbb
pusha
pop
sbb
push
pushf
jmp
pushf
jmp
cdq
and
(bad)
aam
pushf
dec
das
out
cmp
adc
inc
push
pop
loope
call
bound
jl
jmp
aad
daa
sub
pop
popf
aad
test
ins
fist
sbb
xchg
jo
pop
call
loope
test
movs
pop
bound
sbb
jmp
inc
movs
pop
bound
sbb
jmp
xchg
xchg
pop
call
loope
xchg
out
movs
xchg
out
mov
xchg
sbb
dec
out
nop
or
pop
rcr
adc
xchg
out
loop
out
adc
cwde
je
out
sbb
pop
in
cmp
xchg
sbb
dec
in
nop
or
ins
push
mov
(bad)
aam
pop
popf
aad
scas
and
and
(bad)
aam
fs
pop
dec
(bad)
aam
jl
pop
pop
shr
xchg
loope
aam
sbb
aam
sbb
sub
ins
push
pop
out
fld
call
adc
loope
pop
fs
pop
out
fld
sbb
rcr
cdq
daa
sub
push
aam
sbb
aam
sbb
sbb
bound
sbb
and
popa
jmp
ins
adc
cdq
pop
popf
rcr
fs
fist
fwait
xor
out
movs
xchg
in
mov
xchg
sbb
dec
in
nop
or
pop
rcr
adc
xchg
in
loop
in
adc
xchg
pop
call
out
pop
sbb
pop
mov
bound
and
aam
sbb
rcr
scas
daa
sub
cmp
dec
dec
xor
xchg
ins
push
mov
inc
cmp
sbb
test
in
adc
(bad)
aam
dec
or
icebp
repz
sbb
and
bound
pop
cdq
pop
jmp
arpl
repnz
sub
cmp
cmp
mov
icebp
imul
mov
aam
mov
xchg
xor
out
adc
push
pushf
sbb
aam
sbb
mov
(bad)
jmp
loope
popf
sub
stc
popf
sub
ins
aam
sbb
adc
sub
fiadd
sbb
dec
dec
fld
pop
data16
jns
(bad)
aam
(bad)
jmp
in
movs
mov
ins
adc
aam
imul
sbb
pop
dec
nop
xchg
or
or
xchg
in
jecxz
sbb
sbb
push
sbb
bound
sbb
aam
cdq
popf
mov
sbb
jmp
call
fcomp
ins
fs
pop
adc
xchg
mov
sbb
fptan
xor
sbb
or
bound
call
or
nop
pop
sahf
ins
and
(bad)
aam
(bad)
jmp
in
nop
movs
mov
sbb
pop
pop
adc
fs
pop
loope
xchg
jmp
out
sub
sti
xchg
sbb
mov
loope
sub
fsubrp
xchg
in
cmp
rcr
aaa
pop
cld
dec
xor
pop
shl
push
div
pusha
aam
jae
mov
jae
or
jae
or
sbb
mov
cwde
dec
sbb
fistp
push
adc
jns
and
sbb
aam
sbb
dec
dec
(bad)
aam
pop
outs
pop
fcomp
pop
aad
ins
fwait
pop
fidiv
pop
dec
in
xchg
ins
outs
xor
xor
sbb
pop
pop
in
mov
pop
sbb
xchg
dec
(bad)
aam
icebp
dec
test
sbb
push
daa
sbb
(bad)
nop
daa
sub
pop
call
sbb
adc
adc
aam
jae
mov
jae
or
jae
or
sbb
mov
fs
sbb
fist
movs
push
out
pop
shr
(bad)
aam
sbb
scas
dec
(bad)
aam
sbb
xchg
in
popf
mov
dec
icebp
jae
sbb
xor
mov
(bad)
aam
es
sbb
test
loope
adc
fldenv
mov
mov
cmp
dec
xor
xchg
ins
push
pop
in
jmp
push
jecxz
in
ins
aam
sub
fld
pop
pop
test
out
outs
mov
icebp
pop
ss
xchg
daa
sub
dec
sahf
mov
icebp
sub
aam
call
push
scas
retfw
push
ss
sbb
push
fst
and
inc
adc
mov
cdq
and
movs
shl
aaa
and
and
jno
ss
sbb
push
fst
jmp
sub
pop
xchg
and
xchg
jmp
inc
cmp
call
mov
xchg
pop
fcomp
pop
sahf
iret
add
pop
pop
pop
in
xchg
loope
daa
and
jl
pop
pop
jmp
pop
ss
sbb
lea
out
(bad)
push
scas
out
dec
jno
ss
sbb
push
fst
and
mov
icebp
fwait
xor
sbb
mov
sbb
(bad)
rcr
aaa
pop
cld
call
adc
test
(bad)
push
pop
pop
vmovhps
daa
sbb
loope
cmc
sbb
mov
sbb
mov
sbb
test
movs
pop
bound
sbb
jmp
aam
fs
ins
pop
add
pop
sti
jp
xchg
pop
push
scas
pop
pusha
pop
pop
out
repnz
rcl
ficom
aam
out
aam
sbb
loope
pop
sbb
cmp
sbb
loop
out
loop
out
pop
add
out
sbb
pop
outs
fld
out
not
scas
daa
sub
scas
es
call
fs
mov
sbb
mov
push
fs
mov
sbb
xchg
aaa
nop
pop
mov
ficom
bound
adc
or
mov
fnstenv
sbb
aad
sti
push
int
sbb
push
icebp
jmp
xor
scas
push
and
nop
daa
add
pop
xchg
paddq
xchg
daa
fcom
scas
and
xchg
dec
push
scas
dec
fs
leave
push
aad
sti
push
int
sbb
pop
adc
jmp
xchg
xor
xchg
std
inc
cmp
rcr
add
repnz
mov
mov
mov
mov
mov
adc
mov
inc
ins
aaa
repnz
mov
repnz
pop
mov
inc
mov
repnz
pop
mov
inc
mov
repnz
and
repnz
mov
repnz
mov
mov
add
pop
bound
es
mov
adc
mov
inc
ins
add
push
fmul
fldenv
mov
repnz
ins
cmc
repnz
mov
repnz
jle
jmp
in
mov
inc
mov
aam
sbb
mov
enter
repnz
dec
and
aam
xchg
jp
mov
repnz
mov
repnz
mov
inc
mov
repnz
ror
mov
repnz
fst
pop
aam
mov
mov
mov
inc
mov
jae
out
jb
sbb
xchg
sbb
xor
rcl
sbb
es
fiadd
inc
mov
jb
sbb
repnz
inc
mov
inc
mov
repnz
ins
dec
repnz
mov
bound
repnz
mov
repnz
sub
repnz
mov
repnz
nop
shl
inc
mov
repnz
mov
cmp
repnz
cmps
push
outs
popa
xor
repnz
sbb
repnz
mov
repnz
mov
mov
sub
mov
inc
ins
dec
repnz
mov
bound
repnz
mov
repnz
sub
repnz
mov
repnz
nop
shl
inc
mov
repnz
mov
cmp
repnz
cmps
das
es
mov
mov
repnz
mov
repnz
js
repnz
mov
lahf
sub
fidiv
pop
cld
call
inc
adc
xchg
adc
fisub
sub
loope
cwde
je
ror
(bad)
in
xchg
daa
sub
icebp
xchg
mov
nop
daa
xor
pop
xchg
aam
lock
sbb
or
jmp
popf
sub
mov
xchg
in
mov
sub
pop
movs
xchg
jecxz
mov
icebp
jmp
aam
nop
daa
xor
out
aam
cmps
gs
sbb
dec
loop
sub
loopne
mov
and
nop
mov
rol
and
sbb
aad
pop
ins
bound
push
aam
jecxz
test
or
aam
pop
and
aam
sbb
les
push
aam
push
scas
das
cs
jmp
out
pop
sub
in
fdiv
(bad)
aam
xchg
daa
es
icebp
aaa
fwait
sbb
ins
bound
pop
rcr
test
cwde
aad
dec
mov
push
sbb
pop
xchg
daa
es
nop
mov
hlt
push
sbb
fnstsw
mov
sub
pop
xchg
fld
fild
or
popf
sub
cmp
call
and
sub
out
test
vmovddup
pop
sub
aam
fnstenv
pop
fsubr
mov
rcr
cwde
(bad)
loopne
std
rcl
jmp
nop
daa
or
(bad)
jmp
sbb
f2xm1
sub
sbb
out
xchg
stc
dec
popf
mov
out
loope
adc
out
sbb
(bad)
fld
sbb
shl
jmp
nop
into
sub
fld
sbb
xchg
sbb
fist
push
sbb
ins
add
aam
(bad)
jmp
int
movs
mov
rcr
adc
xor
push
(bad)
aam
fnstsw
shl
aas
push
nop
mov
ror
and
sub
jmp
sbb
jmp
call
xchg
sbb
sbb
in
pop
in
or
sbb
jmp
sbb
jmp
nop
shl
xchg
ja
movs
pop
(bad)
in
call
pop
sbb
shl
shl
cdq
sbb
jmp
leave
icebp
xchg
cdq
sbb
jmp
sub
fadd
jmp
icebp
ret
das
aam
nop
daa
sbb
retf
das
aam
xchg
pop
sbb
scas
popf
pop
fist
aad
fdivr
jb
into
nop
pop
or
jge
sbb
mov
nop
shl
movs
and
dec
icebp
adc
adc
sbb
xchg
in
bnd
jmp
shr
adc
xchg
ja
movs
pop
(bad)
in
call
pop
sbb
aad
and
and
iret
mov
jmp
jmp
sbb
xlat
pop
jmp
and
sub
loope
jmp
pop
(bad)
xlat
sbb
fist
imul
or
and
imul
mov
xchg
or
bound
leave
fist
nop
(bad)
popa
jmp
push
scas
aaa
cmp
sti
jmp
xchg
sbb
bound
and
and
(bad)
jmp
rcl
arpl
add
aad
icebp
dec
jmp
sbb
imul
popf
sub
jae
mov
sbb
aam
pop
popf
mov
sbb
jmp
std
jae
pop
pop
icebp
xor
ins
stc
xor
ins
std
mov
push
sbb
mul
pop
xor
xchg
aam
dec
mov
fstp
mov
mov
cmp
dec
xor
test
sbb
shr
and
mov
(bad)
aam
add
xor
sub
jmp
icebp
inc
cs
mov
xor
out
mov
push
xor
adc
xchg
imul
out
popf
adc
aas
aaa
icebp
dec
cwde
sbb
ins
bound
pop
push
jnp
test
jecxz
adc
nop
leave
cmp
call
out
popf
push
pop
out
pop
pop
out
fsubr
movs
push
push
out
sub
icebp
xchg
lahf
sbb
jmp
out
(bad)
pop
(bad)
shl
out
out
pushf
fs
out
pop
jmp
cmc
lahf
sub
nop
movs
pop
pushf
out
sub
dec
or
bound
pushf
cdq
sub
out
cmp
push
(bad)
aam
sbb
aam
sbb
aam
sbb
aam
sbb
pop
pushf
loop
sub
dec
mov
in
lahf
sub
nop
xchg
std
jmp
adc
pop
aad
bound
jae
pop
pushf
jmp
or
add
bound
lods
xchg
sub
out
adc
sbb
lods
in
lahf
sub
icebp
cmp
ins
lods
and
dec
jno
xor
out
popf
sub
aaa
lahf
sbb
jmp
xor
jmp
xchg
pushf
cdq
sub
out
mov
xchg
pushf
popf
sub
out
mov
icebp
pop
(bad)
aam
out
mov
(bad)
and
jno
adc
out
test
(bad)
aam
icebp
inc
aam
sbb
mov
jno
adc
cdq
mov
sbb
bound
dec
jecxz
inc
dec
(bad)
aam
inc
cmp
dec
dec
xor
xchg
ins
jbe
xor
xchg
cwde
not
popf
sbb
popf
shr
and
cwde
fiadd
sbb
loope
in
out
xchg
loope
out
xchg
in
or
jno
(bad)
fistp
jae
mov
ins
adc
cmps
popf
sbb
jmp
sub
jmp
nop
call
loop
sbb
pop
sub
ins
loope
mov
ins
or
popf
sbb
popf
mov
sbb
cmp
pop
cld
dec
xor
fst
pop
sahf
pop
fsubp
pop
shl
and
test
ins
jbe
ins
or
fdiv
sub
sbb
mov
imul
pop
cld
sbb
or
jae
out
xchg
or
out
fsub
ins
push
pop
sbb
call
pop
cld
dec
xor
cmp
bound
loope
pop
pop
in
mov
sbb
or
jae
or
out
outs
sub
aam
sbb
fldcw
in
repnz
sub
mov
jae
popf
mov
icebp
or
aam
adc
sub
sti
sub
sbb
mov
aad
nop
movs
sub
add
sbb
fstp
sbb
call
rcl
jp
cmp
adc
nop
fisub
loope
movs
pop
pop
in
mov
jae
popf
mov
icebp
sub
sbb
mov
aas
and
aam
sbb
sub
xchg
sub
sbb
mov
sub
jg
aam
sub
sub
inc
sub
sbb
aad
add
imul
test
jmp
stos
pop
dec
nop
xchg
jo
fdivr
fsubp
jmp
sbb
cmp
pop
(bad)
aam
icebp
sub
loope
xchg
aas
dec
sbb
in
and
and
sub
aam
fisub
sbb
mov
js
and
icebp
sbb
add
jecxz
add
aam
fst
shr
(bad)
add
mov
sbb
pop
in
rcr
sbb
retf
jno
add
mov
aam
xchg
es
pop
bound
adc
xchg
jmp
in
or
cmovb
xchg
outs
aas
and
push
pop
pop
adc
xor
sbb
cmp
push
(bad)
aam
(bad)
loope
daa
fcom
sbb
loope
mov
or
shr
pop
cdq
pop
jmp
bound
sbb
loope
loop
pop
adc
rcl
jmp
out
cli
jmp
in
mov
aas
pop
nop
xchg
xlat
pop
adc
(bad)
aam
fsubrp
or
shr
adc
push
retf
popa
xchg
adc
icebp
inc
xchg
sbb
jmp
out
cli
jmp
in
mov
sub
adc
adc
adc
or
cli
jmp
in
mov
pop
dec
nop
xchg
or
aas
(bad)
pop
xchg
mov
jns
push
pop
jmp
xor
pop
(bad)
aam
pop
call
adc
nop
sbb
jmp
in
xchg
daa
and
fisttp
nop
dec
xchg
in
bnd
scas
sbb
imul
loope
push
and
sub
cld
add
pop
out
aam
push
ins
arpl
bound
add
sbb
loope
js
jmp
mov
mov
xchg
ss
popa
pop
dec
cmc
jmp
call
xor
xchg
sbb
rcr
push
fisttp
ins
arpl
xchg
loope
int
pop
in
mov
xchg
pop
xchg
pop
fistp
mov
mov
mov
cwde
sbb
bound
pop
(bad)
aam
dec
xor
ret
nop
shl
(bad)
jno
out
sub
call
xchg
pushf
call
adc
popf
push
fst
jmp
cwde
(bad)
sahf
sbb
imul
push
push
adc
and
sbb
popf
aam
adc
cmp
pop
(bad)
aam
(bad)
sub
or
sbb
pushf
rcr
sbb
xchg
jno
out
sub
out
imul
movs
mov
pop
mov
popf
sub
xchg
fsubrp
sbb
and
pop
(bad)
aam
pushf
sahf
sub
out
or
bound
cli
nop
out
out
popf
pop
(bad)
pop
fdiv
arpl
sbb
pop
xchg
sbb
fisub
cli
nop
out
out
popf
pop
ficom
stos
sub
out
adc
cdq
and
jmp
jae
jmp
sub
jecxz
cmp
aad
sub
clc
and
out
push
push
pop
(bad)
aam
(bad)
push
clc
and
out
sahf
sub
out
add
sbb
fst
mov
bound
sbb
sub
push
jecxz
pop
(bad)
jno
adc
out
cmp
pop
(bad)
aam
(bad)
xchg
pop
(bad)
aam
adc
sbb
addr16
sbb
(bad)
out
loopne
pop
movs
in
sub
dec
or
clc
pop
bound
sbb
dec
or
fimul
ins
adc
(bad)
aam
out
fwait
push
jecxz
pop
(bad)
jno
adc
out
cmp
pop
(bad)
aam
(bad)
cs
and
out
sahf
sub
out
mov
push
fst
mov
pop
sbb
adc
(bad)
aam
out
fwait
push
jecxz
pop
(bad)
jno
adc
out
cmp
pop
(bad)
aam
(bad)
jmp
aam
adc
cmp
adc
sbb
out
loopne
pop
movs
in
sub
dec
or
clc
pop
bound
sbb
inc
mov
xchg
pushf
sahf
sub
out
mov
dec
icebp
mov
adc
nop
mov
aam
adc
sbb
addr16
pop
sbb
sub
mov
cmps
fdiv
adc
out
cmp
pop
(bad)
aam
(bad)
jp
(bad)
aam
adc
sbb
addr16
pop
sbb
sub
fwait
es
call
sbb
xlat
sub
out
cmp
pop
(bad)
aam
(bad)
ficomp
push
aam
icebp
inc
nop
sbb
fcmovnu
sbb
bound
loopne
cs
inc
cmp
pop
(bad)
aam
jp
aam
adc
out
popf
xor
xchg
sbb
les
bound
or
ins
icebp
sbb
sub
xchg
adc
in
xor
and
sbb
test
ins
jb
pushf
in
sub
dec
or
pop
bound
call
sbb
sti
and
call
pop
sbb
jp
(bad)
aam
out
fwait
xchg
out
mov
dec
icebp
call
or
xchg
aaa
nop
pushf
cmps
sub
out
pop
icebp
ja
aam
mov
sti
and
call
sti
pop
bound
lods
in
sub
icebp
out
xchg
sbb
loope
adc
sub
sbb
bound
loopne
cs
jno
sar
and
out
sahf
sub
out
mov
fst
mov
pop
sbb
adc
(bad)
aam
out
fwait
push
jecxz
pop
(bad)
jno
adc
out
cmp
pop
(bad)
aam
(bad)
repnz
sbb
xor
sbb
sub
out
test
adc
sbb
fisttp
bound
sbb
sub
push
jecxz
pop
(bad)
jno
adc
out
cmp
pop
(bad)
aam
(bad)
scas
pop
(bad)
aam
adc
sbb
addr16
pop
sbb
sub
iret
and
sbb
and
sbb
sti
and
call
pop
sbb
jp
(bad)
aam
out
fwait
xchg
out
mov
dec
icebp
pop
xchg
sbb
loope
or
out
sbb
bound
fstp
xchg
sbb
bound
pushf
sbb
out
fcmove
ins
sbb
cli
nop
out
out
popf
pop
ficomp
popf
aam
imul
sub
pushf
fisubr
in
pop
push
loope
pushf
sub
jmp
sub
movs
fisubr
in
ins
bound
add
sbb
add
sbb
bound
cmc
cmps
call
mul
in
pop
into
call
sbb
popf
xor
xchg
sbb
xor
and
sbb
fisubr
in
jecxz
movs
out
sub
popf
popf
popa
in
out
sub
ins
jp
pushf
sbb
out
jmp
sub
push
xor
sbb
cmp
pop
(bad)
aam
fnstsw
jmp
xchg
sbb
fcmovnu
sbb
bound
loopne
cs
jno
inc
stc
and
out
sahf
sub
out
je
sbb
fst
mov
adc
(bad)
aam
out
fwait
push
jecxz
pop
(bad)
jno
adc
out
cmp
pop
(bad)
aam
(bad)
cs
(bad)
aam
adc
sbb
addr16
pop
sbb
sub
dec
and
sbb
mov
aam
sbb
sub
out
push
(bad)
lahf
sub
fwait
retf
sub
out
push
cmc
out
sub
sbb
pop
pop
add
pushf
sub
push
arpl
sbb
popf
aam
popf
and
sbb
jecxz
and
(bad)
aam
pop
jle
sbb
(bad)
aam
pushf
call
sbb
xchg
pushf
call
out
sub
ins
jbe
inc
stc
and
xchg
pushf
xchg
sub
out
cmp
pop
(bad)
aam
(bad)
xchg
in
popf
sub
call
sbb
fidivr
imul
shl
(bad)
push
sbb
popf
sub
aad
(bad)
lahf
sub
popf
test
stos
pop
aam
xchg
out
out
popf
test
mov
cmps
rcl
out
popa
in
out
sub
ins
jp
lods
jmp
out
out
popf
test
adc
sbb
fld
mov
pop
sbb
adc
(bad)
aam
out
fwait
push
jecxz
pop
(bad)
jno
adc
out
cmp
pop
(bad)
aam
(bad)
fidivr
sbb
sbb
mov
sbb
fcmovnu
sbb
bound
loopne
cs
jno
sar
and
out
sahf
sub
out
fcomp
bound
adc
ins
adc
(bad)
aam
out
fwait
push
jecxz
pop
(bad)
jno
adc
out
cmp
es
aam
(bad)
lods
jmp
xor
sbb
popf
push
in
out
sub
pushf
fisubr
in
jmp
xchg
pushf
(bad)
aam
out
sub
mov
out
out
push
fst
pushf
sub
fldcw
xchg
out
sub
adc
out
cmp
es
aam
(bad)
bnd
aam
icebp
daa
jmp
sbb
ficomp
sbb
out
loopne
cs
jno
inc
stc
and
out
sahf
sub
out
mov
sbb
fst
mov
sbb
adc
(bad)
aam
out
fwait
push
jecxz
pop
(bad)
jno
adc
out
cmp
es
aam
(bad)
loop
(bad)
aam
adc
sbb
addr16
pop
sbb
sub
add
sbb
adc
out
cmp
es
aam
(bad)
shl
pop
(bad)
fucomip
sbb
fcmovnu
sbb
bound
loopne
cs
inc
cmp
daa
(bad)
aam
jp
aam
adc
out
popf
xor
xchg
sbb
jl
sbb
fisttp
mov
bound
sbb
sub
push
jecxz
pop
(bad)
jno
adc
out
cmp
daa
(bad)
aam
(bad)
jp
(bad)
aam
adc
sbb
addr16
pop
sbb
sub
fwait
pop
aam
call
sbb
sti
and
call
sti
pop
bound
lods
in
sub
icebp
aas
jmp
mov
jno
bound
daa
(bad)
aam
adc
sbb
addr16
sbb
(bad)
out
loopne
pop
movs
in
sub
dec
or
clc
pop
bound
sbb
adc
out
cmp
daa
(bad)
aam
(bad)
shl
aam
adc
sbb
addr16
pop
sbb
sub
repz
aam
call
sbb
sbb
nop
mov
aam
lods
sahf
sub
out
sbb
sbb
fst
mov
sbb
adc
(bad)
aam
out
fwait
push
jecxz
pop
(bad)
jno
adc
out
cmp
and
aam
(bad)
add
and
out
sahf
sub
out
inc
and
bound
adc
jl
sbb
cli
nop
out
out
popf
pop
(bad)
pop
jmp
sbb
bound
loopne
cs
jno
jmp
lods
sahf
sub
out
mov
bound
adc
push
(bad)
out
sub
out
out
popf
test
adc
sbb
fisttp
mov
and
sbb
sub
push
jecxz
pop
(bad)
jno
adc
out
cmp
and
aam
(bad)
sbb
and
out
sahf
sub
out
fsub
bound
adc
pop
sbb
aam
cmps
pop
aam
mov
sti
and
call
sti
pop
bound
lods
in
sub
icebp
mov
adc
icebp
sti
call
sbb
bound
loopne
add
sbb
sub
dec
or
pop
bound
sbb
pop
aam
mov
sti
and
call
sti
pop
bound
lods
in
sub
icebp
out
call
adc
xchg
aaa
nop
pushf
fisubr
in
jmp
jno
mov
sub
out
cmp
and
push
ds
(bad)
aam
adc
or
ss
sbb
sub
pop
pop
aam
call
sbb
sti
and
call
and
bound
sbb
sub
xchg
out
mov
dec
icebp
(bad)
out
sbb
loope
or
or
popf
popa
in
pushf
sub
out
aam
call
jae
or
jae
or
sbb
and
ins
adc
pop
pushf
icebp
popf
sub
nop
mov
sub
lahf
in
sbb
or
xchg
movs
xchg
sub
out
test
lods
sahf
sub
out
popa
icebp
out
sub
iret
pop
aam
out
cmp
in
cmp
cs
aam
lods
sahf
sub
out
int3
and
bound
and
push
and
xchg
pushf
mov
in
cmp
adc
cmps
dec
stos
cwde
pop
jmp
sub
jmp
fistp
repnz
sub
loope
adc
scas
daa
sub
jmp
push
out
popf
sub
dec
out
sbb
or
jno
mov
sub
out
test
(bad)
aam
icebp
mov
out
loope
add
xchg
daa
sub
sbb
in
(bad)
pop
bound
sbb
cdq
icebp
shl
out
add
pop
bound
repnz
aam
cdq
mov
fnstsw
jmp
sub
jmp
inc
shl
cmp
dec
xor
call
pushf
loop
out
jmp
call
pop
pop
adc
in
sbb
not
stc
arpl
mov
fcom
sbb
pushf
xchg
lahf
sub
nop
call
out
pop
fisubr
mov
adc
cmps
push
aam
xchg
aaa
fcom
div
popf
xor
push
aam
nop
out
in
popf
sub
sti
jecxz
sbb
adc
out
pop
dec
adc
dec
sbb
nop
mov
sub
out
sub
loope
adc
pop
jecxz
sbb
push
imul
ret
out
mov
sbb
pushf
jne
sub
out
dec
in
popf
cmp
cs
aam
dec
push
xchg
imul
mov
dec
adc
dec
sbb
nop
mov
sub
out
adc
sbb
loop
sbb
push
(bad)
in
sub
sbb
les
out
push
mov
icebp
pop
in
sbb
mov
sbb
icebp
stos
pop
aam
jno
aad
sbb
push
lods
in
sub
int
pop
sbb
pusha
(bad)
pop
bound
std
lea
out
cmps
lock
pop
(bad)
dec
icebp
jnp
sbb
push
adc
jle
aam
cwde
lea
jnp
bound
out
sub
fimul
rcr
sbb
pushf
in
sub
dec
out
push
lods
in
sub
stos
loopne
sbb
sub
lods
repnz
out
popa
xchg
in
sub
lods
jmp
in
sub
lods
ret
out
pop
pushf
lods
lahf
sub
dec
mov
jmp
popf
push
fnstsw
jmp
test
popf
sub
fst
(bad)
(bad)
loope
sbb
lock
pop
sbb
push
in
popf
sub
jae
sbb
jecxz
or
(bad)
aam
pushf
(bad)
sub
out
pop
pushf
in
sub
dec
mov
sbb
test
pushf
out
out
jecxz
adc
jae
or
xchg
pushf
fisubr
out
xor
and
call
aam
fsubp
ins
out
popf
nop
sbb
bound
pushf
std
pushf
sub
sbb
sbb
push
icebp
out
sub
sbb
imul
pushf
mov
out
arpl
nop
loope
sub
fsubrp
push
mov
icebp
scas
cmp
out
pop
pushf
mov
out
push
mov
jae
mov
sbb
mov
out
popf
test
mov
push
out
sbb
bound
lods
mov
sub
icebp
jnp
sbb
fidivr
and
bound
(bad)
nop
out
in
popf
pop
fsubp
xlat
inc
in
popf
mov
jno
mov
sub
out
test
sbb
sbb
or
out
bound
aaa
nop
call
in
sub
dec
or
bound
aam
fisubr
ins
add
cmp
sbb
fisubr
or
out
arpl
jb
sub
and
mov
lods
sbb
mov
sbb
movs
mov
fidiv
xchg
aam
icebp
repz
sbb
rcr
sbb
pushf
in
sub
dec
xor
sub
aam
sbb
mov
pushf
in
sub
dec
mov
out
push
fst
bound
in
popf
aam
psraw
in
sub
cwde
lea
sbb
push
call
xchg
pushf
(bad)
sub
out
cmp
sub
or
into
sub
jae
popf
popa
mov
xor
sbb
xlat
jo
out
cmp
sub
xchg
pushf
(bad)
sub
out
fcom
pushf
or
out
jmp
inc
inc
cmp
nop
cld
loope
add
inc
jbe
inc
push
jo
nop
loope
sub
ficomp
loopne
sbb
push
jg
aaa
sub
sbb
loopne
sbb
push
jg
aaa
sub
ins
jb
push
sub
add
dec
out
xor
sub
add
dec
in
ins
arpl
arpl
add
scas
aaa
and
leave
ins
arpl
nop
or
xor
sbb
jmp
mov
out
test
jmp
loope
add
nop
daa
cmp
pop
jp
nop
jmp
push
aam
call
jmp
icebp
jmp
sbb
jecxz
cmp
ins
outs
fld
pop
addr16
dec
icebp
out
sbb
popf
mov
out
rcr
aad
in
les
dec
mov
push
scas
daa
sub
aaa
sub
leave
ins
arpl
nop
or
xor
sub
mov
out
test
icebp
jmp
xchg
pop
call
dec
and
jae
or
icebp
dec
push
aam
nop
movs
mov
sub
bound
loope
xor
push
aam
nop
call
fidiv
mov
(bad)
aam
pop
call
nop
xchg
(bad)
aam
iret
push
aam
dec
xor
xchg
inc
push
mov
loope
sub
ficom
xor
out
adc
pushf
fidiv
out
retf
sbb
out
push
movs
stc
popf
sub
out
stc
out
test
mov
in
sbb
adc
fldcw
mov
(bad)
aam
out
data16
sbb
sub
mov
sbb
loope
adc
mov
sbb
out
sub
pop
sub
bound
xor
xchg
bnd
push
movs
stc
popf
sub
(bad)
aam
pushf
fidiv
out
pop
pushf
fld
cmp
ss
aam
fst
loopne
loope
sub
fidiv
sub
mul
sbb
loope
adc
mov
sbb
out
sub
loopne
sbb
idiv
mov
jle
(bad)
sub
fidivr
adc
ss
aam
dec
xor
gs
iret
pop
push
test
movs
xchg
arpl
sbb
shl
sbb
jmp
call
aam
loopne
adc
jmp
sbb
xor
mov
push
jmp
jno
xor
mov
push
jmp
in
mov
and
out
pop
fbstp
xor
sbb
popf
sub
das
loopne
sbb
adc
icebp
dec
loopne
sbb
ficomp
sbb
out
loopne
cs
jbe
jmp
pushf
bound
out
cmp
sub
push
push
sub
(bad)
aam
adc
xor
xchg
out
sbb
mov
sbb
out
loopne
pop
movs
sbb
mov
pop
bound
sbb
cmp
sbb
fisttp
mov
sub
bound
sbb
sub
push
jecxz
pop
shl
xchg
sbb
test
repz
aam
call
sbb
or
clc
pop
bound
sbb
add
sbb
fst
mov
sbb
adc
(bad)
aam
out
fwait
push
jecxz
pop
shl
xchg
sbb
test
mov
aam
call
sbb
sti
and
call
sub
bound
sbb
sub
xchg
xor
aam
movs
bound
out
cmp
sub
call
xabort
bound
sbb
cmc
clc
pop
bound
sbb
cld
sub
bound
or
jmp
icebp
sbb
sbb
sti
and
call
sti
pop
bound
sbb
hlt
sub
bound
adc
fdivrp
pop
bound
sbb
fsubr
sbb
fst
mov
sbb
adc
(bad)
aam
out
fwait
push
jecxz
pop
shl
xchg
sbb
test
call
sbb
adc
out
test
retf
push
aam
call
nop
fisttp
ins
adc
(bad)
aam
out
fwait
push
jecxz
pop
std
icebp
outs
push
aam
mov
sti
and
dec
out
imul
jno
or
out
imul
icebp
(bad)
sbb
loope
or
xor
sbb
push
sbb
popf
sub
pop
out
sbb
adc
icebp
pop
out
sbb
ficomp
sbb
out
loopne
cs
jbe
jmp
pushf
bound
out
cmp
sub
call
aam
(bad)
jmp
jmp
fisttp
lahf
(bad)
pop
bound
sbb
loopne
sbb
fst
mov
sbb
adc
(bad)
aam
out
fwait
push
jecxz
pop
shl
xchg
sbb
test
pop
push
aam
call
sbb
test
jecxz
aam
call
sbb
mov
bound
sbb
sub
push
jecxz
pop
shl
xchg
sbb
test
xlat
push
aam
call
pushf
sbb
cli
(bad)
pop
bound
sbb
pop
sub
bound
or
ins
adc
(bad)
aam
out
fwait
push
jecxz
pop
shl
xchg
sbb
test
xchg
push
aam
call
sbb
test
outs
push
aam
call
sbb
sti
and
call
sti
pop
bound
sbb
test
sbb
fst
ficomp
sbb
bound
call
popf
pop
fcomip
lahf
in
sbb
cmp
sbb
out
loopne
add
sbb
sub
dec
or
(bad)
pop
bound
sbb
cmp
sbb
fisttp
mov
sub
bound
sbb
sub
push
jecxz
pop
shl
xchg
sbb
test
repz
aam
call
sbb
test
iret
push
aam
call
nop
pushf
mov
out
jmp
icebp
lahf
push
aam
mov
sti
and
call
sti
pop
bound
sbb
jo
sbb
fst
mov
sbb
sub
push
jecxz
pop
std
icebp
push
push
aam
mov
sti
and
dec
out
imul
jno
or
out
imul
icebp
daa
in
sbb
adc
jno
or
out
push
sbb
popf
sub
aaa
in
sbb
adc
jae
mov
sbb
mov
dec
icebp
mov
sbb
jmp
in
popf
sub
sbb
push
sbb
popf
sub
aaa
stc
sbb
or
xchg
movs
call
movs
bound
out
sub
dec
stc
sbb
popf
popa
in
popf
sub
fisttp
sbb
mov
and
or
cmp
cwde
cmc
repnz
sbb
or
leave
jp
jecxz
or
aam
mov
(bad)
in
cwde
lea
sbb
inc
adc
cmp
xor
push
dec
sbb
mov
call
out
pop
fdivp
sti
call
sbb
cmp
ss
aam
pop
xchg
sub
mov
xchg
xor
out
adc
mov
call
sbb
push
mov
loope
xor
out
adc
or
xchg
pushf
(bad)
sub
out
cmp
aaa
(bad)
aam
sbb
out
in
popf
test
mov
or
or
sbb
loop
ins
cld
popf
sub
push
out
sbb
bound
pushf
sahf
sub
out
pop
pushf
lods
lahf
sub
dec
mov
loope
call
out
xchg
xor
jecxz
sub
push
out
sbb
bound
pushf
sahf
sub
out
cmp
aaa
(bad)
aam
pushf
(bad)
sub
out
pop
pushf
in
sub
dec
mov
sbb
xchg
cld
popf
sub
out
and
sub
jae
or
xchg
pushf
fisubr
out
xor
aaa
(bad)
aam
fnstsw
cmp
jmp
popa
loop
sub
out
sub
(bad)
aam
pushf
xchg
out
arpl
sbb
loope
and
inc
mov
pushf
mov
out
arpl
mov
out
test
ins
cdq
sub
nop
movs
pop
pushf
mov
mov
out
lea
xor
mov
or
jae
or
jae
or
jae
out
push
in
popf
sub
bound
xor
adc
ins
push
mov
(bad)
aam
lods
retf
out
cmp
sbb
loope
call
out
mov
jno
mov
sub
out
test
ret
dec
aam
call
out
bound
sub
nop
out
loop
popf
pop
ficom
test
mov
call
sbb
adc
fst
iret
jno
popa
aam
icebp
idiv
sbb
loop
outs
loop
sub
xchg
out
loop
popf
call
out
push
out
sbb
bound
imul
jno
aad
sbb
push
mov
popf
sub
mov
sbb
test
aam
jae
mov
xchg
pushf
repnz
out
cmp
stos
popf
sub
out
aam
popf
mov
sbb
out
push
xchg
loop
sub
mov
fst
imul
(bad)
sbb
or
out
imul
out
out
push
xchg
loop
sub
adc
sbb
out
push
test
popf
sub
xlat
inc
in
popf
cmp
iret
popf
sub
sbb
(bad)
nop
out
loop
popf
pop
fsubp
xlat
inc
in
popf
cmp
xor
jno
mov
(bad)
sbb
xor
icebp
jae
sbb
loope
or
jno
or
mov
xor
bound
test
out
dec
nop
mov
popa
(bad)
in
sub
lahf
mov
out
cmps
fdiv
push
jmp
sub
out
inc
in
popf
cmp
into
popf
sub
mov
mov
xor
bound
pushf
test
aam
nop
call
lods
lahf
sub
dec
mov
xor
bound
in
popf
cmp
xor
nop
loope
xor
out
adc
lods
(bad)
sub
out
clc
xor
bound
test
(bad)
rcr
data16
nop
xchg
or
or
fsub
cwde
movs
cld
or
bound
sbb
outs
cmp
xor
xchg
dec
call
pop
mov
bound
nop
call
icebp
push
repz
xor
xor
out
outs
pop
dec
pop
arpl
sbb
mov
loope
call
jae
xor
xchg
sbb
mov
sbb
jmp
jae
xor
retf
aam
mulps
sbb
test
in
jmp
xchg
pop
sahf
test
aaa
repz
xor
data16
aam
pop
sahf
aas
adc
daa
and
fidivr
adc
aas
(bad)
aam
dec
fld
or
loope
call
adc
pop
fist
xchg
mov
pop
nop
call
push
(bad)
aam
pushf
arpl
out
xor
dec
aam
jae
sub
push
sbb
popf
sub
and
out
loope
adc
sbb
rcl
sbb
mov
fisttp
pop
dec
nop
xchg
or
sahf
lods
nop
loope
xor
jg
xchg
out
bound
jno
call
pop
pushf
test
mov
cmp
mov
sbb
out
xchg
test
aam
out
push
mov
xor
push
scas
daa
sub
out
xchg
sbb
(bad)
sbb
loope
add
mov
out
dec
dec
pop
sbb
push
out
push
add
sbb
xchg
out
aad
out
call
dec
jmp
dec
dec
xor
cmps
mov
xchg
and
nop
daa
sub
sbb
aam
sbb
shl
or
jae
or
jno
arpl
sbb
mov
or
daa
std
sbb
jmp
jae
xor
push
mov
xor
jae
xor
cmp
pop
bound
xor
nop
jmp
call
sub
aam
arpl
sbb
xor
loope
xchg
aam
jae
aam
jae
xor
loope
mov
aam
inc
dec
aam
jae
xor
loope
xchg
aam
push
dec
aam
cwde
mov
sbb
in
sub
dec
pop
sbb
mov
out
bnd
sbb
mov
out
push
jne
sbb
push
test
popf
loope
and
icebp
out
aam
jae
xor
loope
test
aam
test
jae
popf
loope
mov
inc
aam
jae
xor
loope
mov
inc
aam
inc
cmp
fimul
bound
dec
pop
loope
call
icebp
call
sbb
shl
pop
bound
in
loope
test
aam
dec
inc
aam
jae
sub
ret
xchg
sbb
pop
repz
shr
pop
bound
in
loope
mov
inc
aam
jae
sub
ja
sbb
shl
pop
bound
in
loope
xchg
aam
adc
sbb
movs
mov
mov
cmp
aas
(bad)
aam
sbb
xchg
sbb
push
pop
sbb
sub
sub
inc
pop
sbb
mov
xchg
cmp
aas
(bad)
aam
popa
ret
xchg
sbb
push
pop
sbb
sub
sub
dec
pop
sbb
mov
xchg
cmp
aas
(bad)
aam
xor
mov
sbb
sub
sub
dec
pop
sbb
mov
mov
aas
(bad)
aam
add
mov
sbb
sub
sub
jne
sbb
mov
dec
jmp
call
mov
sbb
sub
loope
adc
mov
fdiv
mov
movs
mov
dec
icebp
sti
sub
out
adc
mov
or
dec
icebp
div
sbb
jecxz
add
test
jmp
sbb
or
out
push
dec
pop
sbb
aam
xchg
daa
sub
pop
xchg
test
jmp
bound
lds
or
or
sbb
bound
aas
(bad)
aam
pop
ret
jae
sub
bound
xor
and
icebp
push
test
or
jno
bound
cmps
or
or
les
mov
sbb
rcl
pop
bound
adc
aam
jae
sub
bound
sub
ret
jno
aad
sbb
xchg
loope
daa
and
icebp
push
test
or
jno
bound
mov
push
les
mov
sbb
shl
pusha
mov
sbb
arpl
sbb
(bad)
sbb
or
jae
or
jae
mov
aas
sbb
fbstp
xor
loope
xchg
aam
fwait
inc
aam
jae
sub
bound
sub
ret
jae
mov
jae
or
jno
(bad)
aam
jno
or
or
les
mov
sbb
shr
out
loopne
pop
bound
mov
jno
(bad)
sbb
or
sbb
mov
jno
mov
cmp
cmp
aam
mov
call
fimul
aam
sub
dec
pop
sbb
aam
sub
je
sbb
les
arpl
sbb
aam
sbb
cld
jno
(bad)
aam
jno
or
or
les
mov
sbb
rcr
pop
bound
xchg
mov
mov
jno
aad
sbb
push
sbb
xor
aam
dec
or
pop
bound
sbb
ja
xchg
aam
sbb
aam
sbb
aam
jge
mov
mov
aam
jae
mov
jno
adc
sbb
aam
xchg
inc
aam
mov
jecxz
bound
aam
arpl
mov
dec
icebp
das
lock
or
sbb
aad
sbb
aam
das
inc
aam
jae
sub
bound
sub
ret
jno
aad
sbb
out
mov
aam
jae
mov
jno
adc
sbb
aam
aas
inc
aam
mov
or
out
push
dec
pop
sbb
aam
sub
je
sbb
clc
sbb
bound
sbb
or
sbb
sbb
loop
jno
adc
sbb
aam
repz
aam
mov
mov
jecxz
popf
mov
xchg
mov
mov
jae
mov
jno
arpl
sbb
aam
dec
or
ret
les
aam
sbb
ja
mov
xchg
xor
jae
sub
bound
sub
ret
jae
mov
jno
(bad)
aam
jno
aad
sbb
aam
sbb
mov
jno
mov
cmp
cmp
mov
jae
sub
bound
sub
ret
jae
mov
sbb
or
sbb
bound
pop
mov
or
or
icebp
aaa
inc
aam
mov
or
out
push
dec
pop
sbb
aam
sub
je
sbb
les
(bad)
aam
jno
aad
sbb
mov
sbb
dec
jno
or
or
les
mov
sbb
shl
bound
xchg
mov
mov
jae
mov
jno
(bad)
aam
jno
aam
dec
or
lds
mov
jae
mov
sbb
lea
popf
loope
xchg
aam
sbb
aam
add
clc
sbb
bound
or
xor
sbb
(bad)
sbb
mov
bound
mov
popf
loope
xchg
aam
sbb
aam
add
push
sbb
bound
or
xor
sbb
(bad)
sbb
mov
add
out
sbb
aam
sub
dec
pop
sbb
aam
sub
je
sbb
int3
jae
or
sbb
bound
cdq
dec
or
clc
pop
bound
sbb
sbb
neg
sbb
cld
xchg
mov
xchg
mov
mov
jae
mov
jae
or
sbb
and
jno
mov
(bad)
sbb
mov
cmp
bound
xchg
aam
sbb
aam
sbb
aam
push
or
sbb
mov
(bad)
aam
pop
or
sbb
and
jno
mov
cmp
cmp
mov
icebp
adc
sub
loope
adc
mov
sbb
call
fwait
mov
jecxz
movq
jno
mov
fdiv
pop
xchg
sub
nop
movs
mov
dec
icebp
push
and
out
adc
mov
(bad)
dec
sbb
(bad)
nop
daa
cmp
sub
dec
pop
sbb
pop
pop
jmp
inc
aam
cwde
xchg
ins
xor
bound
xchg
mov
in
daa
and
daa
sub
pop
xchg
test
or
jno
bound
mov
xor
sbb
(bad)
aam
inc
sbb
or
out
push
dec
pop
sbb
aam
jae
pop
pop
loope
xchg
jmp
jae
mov
cdq
dec
or
ret
les
aam
sbb
ja
xchg
aam
sbb
aam
sbb
aam
xor
daa
sub
pop
xchg
push
icebp
jge
mov
adc
loop
jno
adc
sbb
aam
imul
mov
or
jae
or
jae
or
jae
or
jae
or
jno
pusha
aam
jae
mov
or
sbb
adc
sbb
aad
jae
sub
outs
hlt
sbb
or
out
push
dec
pop
sbb
aam
sub
je
sbb
mov
jge
shl
xlat
sbb
and
jno
mov
cmp
cmp
mov
nop
call
lds
aam
sbb
xchg
sbb
bound
sub
call
sbb
or
sbb
aad
sbb
aam
mov
pop
inc
mov
invd
aam
sbb
call
call
sbb
mov
jae
or
jno
arpl
sbb
push
cmp
pop
bound
push
(bad)
aam
sbb
aam
sbb
aam
xor
push
mov
sbb
loop
jno
adc
sbb
aam
jg
aam
mov
jmp
sub
jmp
jae
popf
loope
xchg
aam
sbb
aam
xor
pop
mov
sbb
or
sbb
and
jno
mov
cmp
push
(bad)
aam
xor
sbb
out
or
out
push
dec
pop
sbb
aam
sub
je
sbb
les
(bad)
aam
jae
mov
jno
(bad)
aam
jno
or
or
les
mov
sbb
shl
dec
push
aam
jae
sub
bound
sub
ret
jae
mov
sbb
or
sbb
bound
pop
mov
or
or
icebp
mov
aam
mov
or
out
push
dec
pop
sbb
aam
sub
je
sbb
les
(bad)
aam
jno
aam
sbb
mov
sbb
dec
jno
or
or
les
mov
sbb
shl
bound
xchg
mov
mov
jae
mov
jno
(bad)
aam
jno
aam
dec
or
lds
mov
jae
mov
pop
sbb
lea
popf
loope
xchg
aam
sbb
aam
or
xor
sbb
call
(bad)
aam
pop
or
sbb
xor
ret
mov
cmp
add
aam
gs
xchg
sbb
movs
mov
xchg
mov
mov
jno
aam
sbb
sub
sbb
pop
jno
aam
dec
or
ret
les
aam
sbb
ja
mov
popf
loope
xchg
aam
sbb
aam
add
push
sbb
bound
sbb
loop
jno
rcl
sbb
aam
sbb
sahf
add
aam
add
bound
sub
std
xchg
sbb
sub
ret
jae
mov
or
dec
or
clc
pop
bound
sbb
sbb
xor
sbb
sar
pop
bound
adc
aam
jae
sub
bound
sub
ret
jae
mov
or
dec
or
clc
pop
bound
sbb
sbb
ja
sbb
shl
pop
bound
xchg
mov
mov
jno
aam
sbb
xchg
sbb
bound
cdq
dec
or
ret
mov
jae
mov
add
mov
xchg
sub
icebp
mov
adc
(bad)
aam
inc
stos
pop
dec
nop
xchg
add
or
ror
bound
(bad)
nop
daa
cmp
cdq
(bad)
aam
jae
mov
sbb
bound
push
mov
(bad)
aam
(bad)
sub
push
out
sbb
bound
add
bound
cwde
lea
sbb
icebp
fstp
sbb
daa
and
pop
xchg
test
sahf
test
ins
jb
and
and
jno
(bad)
aam
icebp
add
out
adc
nop
call
ficomp
in
sub
jno
mov
cvtdq2ps
popf
mov
icebp
test
out
cmps
int3
nop
pop
call
call
sbb
loope
sub
jmp
sbb
bound
ret
sub
call
fimul
cwde
cmc
data16
sbb
and
xchg
in
nop
movs
push
fild
push
aam
jno
fs
sbb
push
sbb
popf
sub
or
sbb
mov
add
bound
sbb
sub
pop
retf
sub
or
imul
dec
mov
out
mov
pop
sbb
push
sbb
popf
sub
dec
int3
sbb
jecxz
jb
(bad)
aam
fs
xlat
ins
or
and
sbb
fadd
sbb
fs
mov
pop
sbb
push
sbb
popf
sub
xchg
ret
sbb
loop
out
pop
lds
rcl
out
popf
test
(bad)
jne
sbb
jae
push
test
aam
pushf
bound
out
xor
push
(bad)
aam
out
jnp
sbb
loop
out
pop
lds
rcl
out
popf
test
mov
aam
cdq
pop
sub
ins
jae
call
sub
out
cmp
push
(bad)
aam
fs
(bad)
jbe
pop
bound
sbb
test
sbb
fs
mov
pop
sbb
push
sbb
popf
sub
pop
ret
sbb
jmp
out
(bad)
jmp
in
popf
sub
adc
lds
rcl
out
popf
test
pop
jne
sbb
jae
cmp
bound
out
xor
push
(bad)
aam
fs
fldcw
in
stos
pop
bound
sbb
ror
bound
ins
mov
pop
sbb
push
sbb
popf
sub
lahf
ret
or
jae
or
push
ret
xchg
pushf
bound
out
xor
mov
cvtdq2ps
or
pop
bound
dec
lahf
sub
jno
repz
mov
add
bound
xor
and
jmp
pushf
sub
inc
cmp
nop
cld
xor
adc
(bad)
dec
sbb
(bad)
nop
daa
sub
icebp
test
pop
sbb
sub
call
jae
xor
aam
inc
cmp
nop
cld
jecxz
xor
dec
xor
mov
nop
fucomip
and
jmp
rcl
out
out
test
and
icebp
mov
sbb
fcmovnu
sbb
bound
loopne
inc
jmp
sub
out
mov
pop
sbb
push
hlt
out
popf
sub
outs
ret
fimul
call
popf
pop
fistp
popf
(bad)
ins
or
adc
hlt
xchg
sub
dec
mov
or
bound
call
(bad)
rcl
out
out
test
shl
sbb
popf
shr
aad
pop
bound
hlt
xchg
sub
dec
mov
bound
call
add
xchg
sbb
test
(bad)
ja
sbb
out
out
out
pop
fistp
popf
shr
loopne
pop
bound
hlt
xchg
sub
dec
mov
jmp
jno
rcl
out
out
test
dec
ja
sbb
popf
fsubr
mov
pushf
hlt
xchg
sub
dec
mov
or
bound
out
test
lds
push
movs
jmp
jno
rcl
out
out
test
emms
aam
cdq
fbld
loope
popf
fisubr
jle
pop
bound
hlt
xchg
sub
dec
mov
or
jmp
jno
rcl
out
out
test
sti
jbe
sbb
popf
fsubr
cmp
pop
bound
hlt
xchg
sub
dec
mov
iret
sbb
sbb
popf
fldcw
xlat
lods
pop
bound
hlt
xchg
sub
dec
mov
bound
call
cmp
xchg
sbb
test
xchg
jbe
sbb
je
sbb
push
hlt
out
popf
sub
pusha
cmp
out
and
(bad)
aam
imul
pop
sbb
push
fisttp
jmp
icebp
out
popf
sub
out
mov
out
out
aam
popf
jno
sbb
jmp
sub
jmp
cwde
(bad)
fistp
sbb
jae
or
fistp
pop
pushf
cmc
call
movs
pusha
aam
lock
in
popf
sub
push
out
sbb
bound
sahf
sub
and
xor
(bad)
aam
movs
popf
sub
out
fistp
out
in
popf
aam
jmp
out
push
loope
popf
sub
push
cvtdq2ps
out
push
in
popf
sub
dec
sbb
loope
adc
out
aam
xor
outs
fimul
mov
rcr
loopne
std
rcl
and
sub
push
in
sbb
bound
jns
xchg
sbb
pop
jecxz
mov
xchg
sbb
cvtdq2ps
out
push
in
popf
sub
push
int3
sbb
jecxz
inc
dec
(bad)
aam
mov
xchg
sbb
cvtdq2ps
out
push
in
popf
sub
ja
sbb
loope
add
and
pushf
sahf
sub
out
cmp
or
jmp
loope
sub
jb
pop
sbb
push
in
popf
sub
add
sbb
xlat
ret
pop
pushf
in
sub
dec
mov
push
sbb
fisttp
popf
sub
pop
rcr
out
push
in
popf
sub
pushf
sahf
sub
out
mov
xchg
pushf
sahf
sub
out
cmp
push
(bad)
aam
fnsave
sbb
test
shl
sbb
mov
xchg
pushf
sahf
sub
out
cmp
test
fstp
push
out
sbb
bound
in
sub
call
sbb
cmp
loope
sub
nop
xchg
aad
nop
movs
push
movs
loope
sub
adc
aaa
sbb
out
call
pop
bound
pushf
sahf
sub
out
cmp
push
(bad)
aam
fnsave
xchg
stos
and
xchg
pushf
sahf
sub
out
cmp
or
xchg
pushf
sahf
sub
out
cmp
or
mov
repnz
pushf
mov
push
out
pop
les
out
push
sbb
pushf
sub
sbb
and
out
imul
outs
mov
out
cmps
pop
aam
out
sub
out
pop
pushf
in
sub
dec
or
ret
pop
bound
in
sub
dec
mov
bound
or
push
in
popf
sub
xchg
(bad)
sbb
jmp
int
popf
sub
xor
aam
movs
mov
out
out
test
or
(bad)
sbb
jmp
in
loope
sub
xor
lods
in
call
sbb
push
in
popf
sub
iret
(bad)
sbb
out
imul
xchg
fbld
loope
popf
pop
gs
arpl
sbb
bound
loope
sub
dec
or
out
xchg
sub
out
pusha
push
bound
xchg
or
dec
icebp
addr16
sbb
out
push
in
popf
sub
popf
popa
cmc
loope
sub
fwait
scas
sub
call
push
pushf
dec
sub
out
popa
cmc
loope
sub
xchg
jo
sbb
bound
jg
aam
inc
mov
jecxz
popf
mov
stos
push
sbb
mov
mov
or
bound
and
or
call
rcl
aam
sbb
aad
push
bound
or
nop
pushf
(bad)
cmp
out
adc
pop
xor
or
jae
mov
or
bound
sub
add
aam
out
sbb
nop
mov
xchg
sbb
xor
sbb
mov
jno
ret
xchg
sbb
xor
sbb
mov
icebp
push
ja
sbb
bound
pushf
sar
out
xor
ins
adc
mov
pop
sbb
push
test
popf
sub
push
dec
out
loope
or
push
sub
(bad)
aam
sbb
pusha
pop
sbb
cmp
(bad)
xchg
sbb
addr16
bound
(bad)
aam
cli
jmp
xor
mov
push
add
dec
nop
mov
rcr
loopne
std
rcl
loope
pop
nop
cwde
pop
mov
out
hlt
out
aad
das
mov
(bad)
fld
out
pop
push
jnp
test
jecxz
adc
nop
leave
cmp
call
and
(bad)
sub
cdq
out
hlt
out
aad
pushf
sar
out
pop
fsubr
movs
push
mov
popf
sub
icebp
xor
sbb
jmp
out
(bad)
pop
(bad)
jge
out
out
pushf
enter
push
pop
rcr
pop
ficom
test
ret
xchg
sbb
push
pop
sbb
push
xchg
popf
sub
push
rcr
or
xchg
pushf
std
cmp
out
pop
pushf
test
sub
dec
mov
pushf
xchg
sbb
out
pop
pushf
mov
mov
add
or
shr
jae
out
push
xchg
popf
sub
dec
lds
sbb
iret
xor
bound
cli
nop
out
cmc
out
pop
fidiv
cmp
push
(bad)
aam
movs
mov
jne
sbb
adc
pop
bound
cmps
jno
sbb
bound
jnp
sub
xchg
push
rol
pop
bound
sbb
jmp
aam
mov
xchg
sbb
push
pop
sbb
movs
mov
or
xchg
movs
dec
cmp
out
loope
shl
mov
jmp
nop
fimul
jg
pop
bound
fistp
inc
pop
sbb
pop
movs
sti
(bad)
sub
xchg
push
push
rcr
cmp
(bad)
aam
jg
mov
jno
ret
xchg
sbb
push
pop
sbb
aam
pop
bound
or
call
sub
xchg
push
adc
pop
bound
sbb
jmp
aam
sbb
aam
sbb
or
sbb
and
mov
aam
nop
daa
pusha
jae
or
jae
xor
push
(bad)
aam
ficomp
xchg
mov
xchg
daa
ins
dec
xchg
out
mul
popf
test
jnp
aam
xchg
out
popa
mul
popf
push
shl
and
bound
ins
mov
xlat
cmp
out
sub
cmp
sbb
sbb
mov
out
(bad)
cmp
push
(bad)
aam
pop
fisubr
push
sbb
pop
mov
lea
out
mov
bound
lods
lea
out
stos
sub
pop
aad
ins
fwait
mov
dec
dec
out
imul
ins
aam
jae
pop
pop
mov
xchg
ss
sbb
fistp
sbb
ficomp
sbb
or
shr
xchg
sbb
or
jmp
stc
mov
jmp
aad
or
bound
(bad)
aam
sbb
sbb
sbb
sbb
xchg
int
les
nop
pushf
sar
out
jmp
sub
sbb
sbb
stos
fistp
sbb
xchg
leave
fisub
or
sbb
jae
mov
bound
shl
sbb
bound
pop
frstor
sbb
movs
xchg
rcr
(bad)
aam
xchg
daa
push
sbb
or
out
push
dec
pop
sbb
aam
sbb
aam
sbb
aam
sbb
aam
shl
clc
les
aam
clc
mov
cmp
or
mov
jno
fs
sbb
aam
sbb
mov
out
loope
sbb
sbb
sbb
loop
daa
jno
push
pop
sbb
mov
dec
icebp
pop
fstp
sbb
push
mov
popf
sub
out
sbb
xchg
out
hlt
out
pop
(bad)
stos
fcomp
sbb
aad
out
js
out
adc
(bad)
aam
cwde
mov
sbb
pushf
mov
out
push
mov
popf
sub
push
pusha
pop
sbb
lods
ret
pop
bound
sbb
cdq
icebp
clc
inc
out
loope
add
mov
mov
ficomp
pusha
pop
sbb
sbb
mov
popf
pop
rcr
pop
ficom
test
or
jno
adc
icebp
ja
sbb
xor
adc
retf
out
mov
loope
and
jae
or
icebp
out
outs
aam
dec
mov
jno
aad
sbb
aad
sub
dec
pop
sbb
aas
add
ficomp
sbb
or
shr
xchg
pop
xchg
jae
mov
pop
std
xor
pop
(bad)
aam
fst
add
cmp
nop
cld
jecxz
and
dec
xor
out
idiv
sbb
jmp
les
popf
stc
aad
sbb
fistp
lock
lds
sbb
popf
imul
sbb
push
iret
and
arpl
sbb
out
jno
sbb
and
(bad)
aam
popf
loop
sbb
mov
sbb
and
(bad)
xchg
sbb
ins
push
ret
sbb
jno
mov
mov
es
popf
sub
out
sub
(bad)
jmp
fucom
popf
sub
pop
bound
lods
cmc
lahf
sub
icebp
jg
out
loope
or
popf
pop
pushf
rcr
icebp
in
sub
or
sbb
mov
aam
xchg
out
in
popf
test
sub
je
sbb
fstp
ins
or
sub
xor
or
out
push
icebp
sbb
popf
sub
mov
add
push
jmp
sub
pushf
mov
cmp
xchg
test
mov
lahf
sub
and
pop
pushf
std
lahf
sub
xor
or
out
test
out
push
shl
sub
bound
mov
adc
aam
loope
sub
fsubp
jmp
sbb
out
push
sbb
jge
and
mov
nop
call
jge
xchg
sbb
loop
imul
(bad)
xchg
sbb
mov
push
and
(bad)
xchg
sbb
ins
push
pusha
push
(bad)
aam
sub
pusha
pop
sbb
(bad)
lock
aam
nop
call
xchg
aam
pop
push
pushf
dec
gs
jae
cmp
adc
aam
push
gs
mov
pop
xchg
adc
ins
adc
pop
loope
call
sbb
xchg
or
out
push
out
outs
aam
and
mov
and
mov
and
sbb
sub
pop
bound
mov
and
mov
and
mov
and
xchg
mov
xchg
fistp
bound
ins
or
pop
pushf
loope
sub
and
mov
and
mov
and
sbb
adc
rol
or
popf
mov
sbb
or
out
bound
ins
or
push
neg
aam
call
call
pop
pushf
stc
lahf
sub
dec
mov
sbb
pushf
cmc
lahf
sub
lock
sbb
jmp
sbb
jmp
lock
fs
cwde
movs
add
sbb
out
(bad)
aam
pushf
arpl
out
xor
sub
call
sbb
loop
sbb
popf
sub
ins
inc
mov
dec
ret
and
jae
mov
icebp
call
sbb
mov
sbb
bound
lds
xchg
out
out
popf
pop
pushf
in
lahf
sub
(bad)
and
out
aam
and
pusha
pop
sbb
pushf
mov
sbb
aam
sbb
push
sbb
popf
sub
push
push
mov
adc
xchg
xchg
arpl
out
loope
out
loop
sbb
pop
sub
add
arpl
test
out
xor
mov
jmp
ins
cmp
aam
sbb
out
pop
bound
sbb
popf
loope
mov
push
rcr
sbb
sub
loope
adc
xor
in
lahf
sub
dec
or
ret
pop
bound
in
lahf
sub
dec
mov
sbb
fisttp
or
sbb
bound
sbb
loope
mov
aam
out
aam
cdq
(bad)
out
popf
aam
cmp
aam
sbb
fcmovb
pop
bound
sbb
popf
loope
mov
aam
punpckhbw
sbb
sahf
rcr
sbb
pop
sbb
popf
sub
and
loope
or
mov
inc
and
jae
mov
adc
bound
sub
not
sbb
adc
mov
push
scas
out
out
popf
pop
popf
sbb
sub
out
in
sbb
or
jae
or
rcr
sbb
xchg
fstp
sbb
aam
mov
jmp
out
sub
xchg
out
out
popf
call
loope
call
out
test
xor
pushf
xchg
sub
out
cmp
adc
call
aam
pushf
arpl
out
xor
sub
ret
xchg
sbb
jae
sbb
loop
sbb
popf
sub
ins
inc
mov
faddp
and
jae
mov
sub
ret
xchg
sbb
dec
fstp
sbb
ins
push
sbb
out
(bad)
jmp
cmc
in
sub
out
sub
out
in
popf
test
mov
and
out
test
das
imul
jno
(bad)
aam
xchg
out
out
popf
test
sub
dec
pop
sbb
push
movs
sbb
hlt
jae
or
jno
mov
cmp
adc
out
dec
dec
pop
sbb
cmp
xchg
pushf
arpl
out
xor
in
lahf
sub
dec
or
pop
bound
in
lahf
sub
dec
mov
adc
bound
or
sub
sbb
pushf
sbb
loope
xchg
aam
daa
push
sbb
popf
aam
cmp
aam
sbb
mov
sbb
retf
fcomp
sbb
aam
dec
push
sbb
pop
xlat
sbb
out
pop
sbb
popf
sub
and
loope
sbb
mov
xor
sbb
sub
std
xchg
sbb
inc
fcomp
sbb
adc
mov
push
scas
out
out
popf
pop
popf
sbb
sub
out
in
sbb
or
jae
or
rcr
sbb
push
fcomp
sbb
aam
sti
gs
lock
(bad)
sbb
loop
out
popf
sub
xchg
out
out
popf
call
loope
call
out
test
xor
pushf
xchg
sub
out
cmp
adc
call
aam
pushf
arpl
out
xor
sub
std
xchg
sbb
xor
sbb
loop
sbb
popf
sub
ins
inc
mov
or
and
jae
mov
sbb
sub
std
xchg
sbb
or
sbb
mov
pushf
out
sub
sbb
sub
out
pop
popf
sbb
sub
out
in
sbb
or
jae
or
rcr
sbb
pop
rcr
sbb
aam
xor
sbb
jb
sbb
loop
out
popf
sub
xchg
out
aad
out
push
shl
and
bound
out
popf
sub
fist
jl
loope
xor
out
push
icebp
in
sub
out
sub
out
in
popf
test
mov
and
out
test
or
sbb
xchg
xor
out
push
std
in
sub
sbb
shl
or
jno
(bad)
aam
jno
dec
pop
sbb
pop
pushf
in
pushf
sub
jae
mov
lods
in
pushf
sub
icebp
retf
rcr
sbb
jmp
sbb
adc
sti
xchg
sbb
pop
aad
ins
fwait
pop
fidiv
pop
mov
lahf
sub
dec
xor
lods
xchg
sub
out
xor
sbb
sbb
test
or
pop
bound
lods
in
pushf
sub
icebp
cmps
rcr
sbb
pop
in
in
sub
and
or
xchg
mov
test
xor
lods
in
pushf
sub
icebp
sti
rcr
sbb
aam
pushf
xchg
sub
out
mov
pop
sbb
sub
addr16
nop
call
in
pushf
sub
icebp
jae
sbb
popf
loope
mov
fs
jae
mov
sbb
mov
jno
repnz
sbb
fcmovnbe
sbb
jmp
in
out
sub
sbb
(bad)
jae
or
out
xchg
sub
out
adc
sbb
adc
rcl
cdq
pop
aad
ins
fwait
pop
fidiv
pop
mov
lahf
sub
dec
xor
lods
xchg
sub
out
aam
sbb
sbb
test
or
rcr
lods
in
pushf
sub
icebp
xchg
sbb
popf
popa
in
out
sub
addr16
aam
fisub
lods
pop
(bad)
aad
sbb
loope
call
jno
pusha
pop
sbb
lods
ret
pop
bound
sbb
cdq
icebp
lock
out
loope
add
sub
std
xchg
sbb
adc
sbb
sub
(bad)
jmp
stc
in
sub
ins
jbe
ins
or
fdiv
jmp
aam
inc
cmp
rcr
jb
dec
nop
xchg
adc
pop
fsub
mov
xchg
xor
xchg
daa
fsub
arpl
sbb
out
sbb
bound
or
pushf
(bad)
sbb
push
push
mov
out
cmp
pop
bound
sbb
adc
pop
pop
in
jmp
and
dec
pop
sbb
(bad)
sub
jne
sbb
out
sub
ret
xchg
sbb
sub
std
xchg
sbb
pop
rcr
sbb
xor
adc
aam
jnp
aam
nop
call
add
imul
sbb
sub
sbb
pop
loope
xchg
aam
adc
aam
das
data16
and
xchg
mov
lods
pop
(bad)
aam
adc
aam
add
sbb
movs
out
sub
std
xchg
sbb
and
(bad)
xchg
sbb
pop
(bad)
sub
jne
sbb
in
and
test
mov
mov
pop
loope
call
pop
bound
xchg
out
sub
std
xchg
sbb
add
std
xchg
sbb
push
enter
mov
mov
out
sub
std
xchg
sbb
add
ret
xchg
sbb
(bad)
out
sub
std
xchg
sbb
add
sti
xchg
sbb
push
push
mov
xchg
jg
xchg
ffree
ins
jo
ins
or
pop
fmul
mov
adc
sbb
pop
fiadd
(bad)
rcr
jb
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
icebp
cmps
(bad)
aam
nop
movs
push
cmp
div
jmp
pop
dec
mov
adc
xchg
in
mov
xchg
repnz
cs
imul
xchg
aas
sbb
push
adc
hlt
ins
jmp
sbb
xor
cmp
neg
lea
sbb
or
bound
cmp
bound
sbb
sbb
dec
cmp
popf
sub
out
cs
xchg
or
pop
cmp
inc
shr
mov
es
sbb
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
bound
cmp
xchg
xchg
sbb
.byte
