adc
jmp
xor
add
outs
add
jge
dec
pop
aas
mov
call
aas
or
pop
inc
clc
sbb
(bad)
push
ds
shr
cld
xor
lock
fisubr
fisubr
lods
jb
sbb
mov
(bad)
sar
cmps
dec
(bad)
xor
and
clc
aam
jae
pop
repz
scas
bound
stos
pusha
ins
sbb
scas
data16
cmp
cwde
aad
je
adc
popa
movs
lods
scas
aaa
int3
mov
pop
mov
lock
jmp
stos
bound
jae
pop
jne
fsub
pop
and
call
jno
and
mov
push
repnz
dec
xor
sub
outs
cmp
push
pop
arpl
jbe
push
aam
ja
dec
sub
mov
push
pop
stc
pusha
repz
mov
or
xchg
dec
and
outs
push
paddq
cdq
mov
xor
jmp
mov
jns
pop
mov
and
cmp
clc
or
sbb
iret
and
mov
or
or
ret
icebp
or
push
jae
dec
ror
ja
push
stc
fwait
mov
je
or
ins
xchg
inc
or
rcr
dec
push
imul
rcr
popa
stos
jo
mov
cmp
ja
cmp
sbb
inc
test
inc
mov
and
daa
shr
ins
mov
cmp
mov
popa
mov
mov
imul
hlt
xchg
mov
dec
mov
std
dec
ret
cmp
into
test
ret
inc
xor
mov
jmp
sub
repz
mov
mov
mov
test
mov
nop
call
mov
call
mov
dec
mov
pusha
adc
leave
dec
jp
cwde
mov
loopne
sbb
icebp
shl
dec
mov
ja
push
xchg
cmps
fsub
dec
popf
data16
cld
sahf
sub
dec
cwde
mov
pop
xor
inc
loop
fild
inc
sub
cdq
dec
mov
pushf
rol
fdivr
nop
cmp
sub
cwde
sub
and
xchg
mov
out
dec
aaa
jno
fwait
pop
sbb
test
out
cwde
xchg
dec
mov
stos
outs
dec
xchg
mov
mov
mov
pop
dec
sub
int3
cdq
mov
sbb
cdq
jnp
mov
mov
pop
hlt
cwde
mov
cwde
hlt
and
mov
rol
adc
iret
movs
sub
stos
loopne
xchg
jecxz
out
push
aas
iret
or
adc
add
dec
or
mov
adc
jnp
shl
mov
add
fistp
ret
sub
nop
test
mov
adc
pusha
sub
dec
adc
nop
mov
cwde
xchg
dec
mov
icebp
sbb
addr16
pop
jl
loope
aas
fstp
pop
lds
jb
outs
mov
sbb
mov
(bad)
outs
nop
sbb
mov
mov
dec
mov
shr
call
mov
mov
(bad)
outs
aam
push
jae
mov
popf
inc
aam
pop
fisub
out
jo
pop
movs
push
dec
push
and
xor
data16
mov
dec
(bad)
xchg
and
dec
out
dec
cmc
fnstenv
pop
sub
mov
jmp
mov
mov
movs
dec
bound
(bad)
dec
addr16
pop
jge
inc
mov
sar
mov
rcl
test
cs
cwde
sub
mov
mov
inc
in
test
mov
pop
jae
cld
div
dec
dec
mov
mov
dec
pop
cdq
dec
mov
jno
adc
pushf
mov
dec
leave
lock
inc
add
jmp
sub
jnp
mov
pop
dec
dec
push
mov
jmp
cmp
jge
adc
mov
adc
pop
jmp
cmp
jge
dec
pop
hlt
cwde
xor
mov
jmp
cmp
jge
cs
mov
xor
pop
push
shr
jmp
adc
adc
loope
je
jmp
adc
stos
loop
jmp
adc
adc
jmp
out
mov
rol
lahf
popa
push
jmp
dec
cmp
stos
dec
mov
pusha
jp
xor
ror
mov
mov
movs
rol
xchg
xor
sub
stos
fidiv
sti
les
je
cmps
jle
mov
xlat
push
sub
(bad)
ficom
ds
mov
inc
sub
ret
lds
dec
stos
test
mov
push
scas
ss
and
retf
cmp
test
mov
fs
mov
in
sbb
sub
xor
cwde
ror
ret
mov
nop
into
lea
adc
and
test
push
add
out
mov
push
nop
mov
pushf
inc
mov
jnp
popf
(bad)
dec
pusha
call
mov
mov
(bad)
cmc
dec
mov
add
and
nop
mov
cmp
pop
jno
aas
mov
and
mov
in
in
mov
imul
pop
inc
(bad)
rol
xor
jne
adc
ret
movs
mov
dec
cdq
and
inc
pop
aad
fstp
fst
cdq
mov
stc
inc
mov
adc
cld
sahf
and
mov
data16
jns
pop
outs
adc
push
icebp
or
adc
inc
ror
cdq
push
xchg
loopne
cs
inc
loopne
adc
stos
retf
neg
aaa
pushf
popa
dec
in
inc
pushf
mov
add
sar
in
xchg
pop
sbb
lock
leave
popf
pop
movs
pop
add
xchg
out
bound
fldenv
adc
push
cli
mov
test
cmp
mov
repz
cmp
inc
cmp
test
repnz
aaa
mov
iret
rcr
cmp
hlt
mov
mov
or
mov
xor
into
lea
jb
fisub
lea
fadd
out
(bad)
push
in
jb
ret
xchg
aam
jle
adc
dec
xchg
adc
out
mov
aam
adc
add
hlt
loop
outs
add
rcl
out
mov
pusha
sahf
ds
mov
dec
jmp
movs
mov
dec
enter
ficom
rol
push
mov
pushf
or
neg
dec
retf
pop
mov
ins
(bad)
fwait
and
jbe
call
lods
xchg
cmps
(bad)
icebp
mov
cmp
jle
sar
jl
jb
mov
shr
sbb
jge
xchg
cmp
enter
jno
ret
push
bound
inc
mov
movs
stos
jae
add
clc
sub
out
mov
xor
rol
jns
fcom
or
mov
mov
rcl
cmp
xchg
popf
jnp
cwde
adc
inc
sbb
or
push
fdiv
xchg
in
sbb
dec
clc
mov
xchg
cmps
xor
mov
push
xchg
retf
mov
es
pop
neg
mov
or
xchg
repz
rcr
outs
dec
popa
lds
mov
inc
mov
mov
mov
and
mov
xchg
mov
adc
(bad)
mov
sbb
loopne
push
stos
es
mov
mov
xchg
stos
mov
xchg
sub
add
ret
sahf
cmp
mov
repz
clc
add
movs
mov
enter
adc
into
in
pop
fcmove
pushf
test
mov
mov
or
aad
jg
push
sbb
in
sti
jns
ror
mul
add
mov
out
ja
mov
test
xchg
arpl
ficom
sub
out
mov
pushf
(bad)
jae
or
ja
cmp
dec
adc
sub
lahf
push
xor
jbe
pop
push
pop
mov
or
xor
jecxz
xor
js
adc
pop
mov
stos
mov
jecxz
ret
inc
rcl
jge
jge
jo
pop
dec
xchg
jb
shl
mov
lock
out
lock
xchg
xor
sub
mov
push
es
daa
push
push
mov
sbb
shr
retf
xchg
jns
pop
jle
jo
inc
mov
xlat
leave
shr
add
fnsave
cdq
jle
test
adc
inc
xchg
cmp
stos
mov
xor
sbb
imul
mov
out
mov
scas
std
inc
shl
pop
test
rol
xchg
call
push
shl
adc
(bad)
stos
xchg
mov
retf
shl
mov
pop
sbb
fcomp
shl
arpl
or
xchg
add
pop
sahf
mov
inc
mov
pop
add
out
dec
xchg
in
mov
inc
cdq
sub
or
adc
dec
movs
das
test
sbb
sub
adc
pop
pop
adc
xchg
stos
cmps
xchg
stos
pop
or
or
sar
xchg
lea
lods
push
sbb
scas
and
and
push
scas
arpl
lock
nop
or
(bad)
retf
imul
dec
fisttp
sub
out
popf
rol
in
and
stos
in
mov
jp
mov
addr16
stos
adc
pop
lahf
pop
loope
push
rcl
imul
iret
fwait
js
rcr
mov
or
ss
mov
jp
test
mov
cmp
sbb
sbb
pushf
dec
xchg
fidiv
push
mov
add
and
xor
stos
ret
jnp
mov
dec
test
cs
and
sahf
inc
sbb
dec
movs
retf
sub
mov
mov
xchg
addr16
push
ds
or
mov
repnz
and
(bad)
shl
or
jp
and
mov
xor
out
and
cs
movs
retf
push
sar
and
cs
lods
xchg
mov
or
pop
mov
jecxz
fcom
cs
fwait
push
sub
dec
out
stc
popa
xchg
xchg
adc
cmps
mov
pushf
pop
cmp
mov
mov
aas
scas
movs
inc
dec
mov
xor
pop
pop
ds
jmp
jno
mov
xor
sahf
pop
mov
xor
mov
jns
mov
fwait
pop
(bad)
repnz
retf
ja
mov
and
dec
call
leave
jb
neg
rol
inc
arpl
jnp
jge
cs
adc
leave
xchg
lock
xchg
inc
xor
push
or
nop
test
sbb
mov
pusha
shl
inc
test
and
jo
jecxz
ret
inc
mov
std
push
dec
mov
loope
inc
jecxz
xlat
inc
lahf
inc
movs
das
jbe
outs
cmp
adc
retf
loopne
loopne
aad
sbb
out
xor
adc
fst
dec
cli
sti
sub
cld
stos
xor
in
cmp
xchg
cli
nop
push
pop
adc
mov
out
gs
pop
jle
push
mov
xchg
jmp
xor
ins
fidivr
pop
loope
int
pop
mov
adc
sub
pop
cwde
call
loope
jmp
pop
inc
pop
retf
and
shr
sbb
push
in
imul
ins
adc
inc
jmp
sub
mov
jp
or
dec
mov
mov
fimul
or
daa
das
cwde
xor
dec
mov
inc
std
adc
jae
fldcw
sahf
out
test
test
push
mov
jo
rol
xchg
cld
js
cmp
mov
test
or
outs
add
sub
jmp
call
inc
pop
pop
push
out
aaa
pusha
loope
movs
adc
mov
jb
dec
dec
neg
pop
xchg
shl
adc
gs
fmul
or
ret
ret
mov
(bad)
mov
inc
data16
inc
loopne
cdq
popa
jbe
in
pop
js
es
adc
jmp
aaa
mov
and
inc
imul
shr
sahf
mov
sub
test
fidiv
pop
idiv
push
leave
ret
icebp
out
cmp
shr
mov
int3
pop
pusha
jmp
(bad)
scas
adc
inc
sbb
or
cwde
test
dec
dec
mov
dec
sub
dec
repnz
movs
ds
push
repnz
stc
add
movs
lods
cdq
xor
(bad)
clc
scas
nop
push
xor
jbe
add
stos
dec
lock
mov
mov
xchg
pusha
imul
jmp
stc
jb
mov
mov
mov
push
scas
sbb
daa
idiv
adc
xchg
cmp
adc
push
stc
iret
mov
add
sar
daa
xchg
rcl
fild
retf
xlat
push
call
mov
shl
ror
popf
jmp
ins
jl
jmp
jo
sub
scas
icebp
cmp
cmps
inc
jmp
cmps
aam
mov
mov
xchg
push
mov
(bad)
movs
inc
xor
mov
add
mov
mov
and
enter
xchg
adc
mov
jae
adc
jge
rcl
cmps
jb
scas
arpl
pop
or
push
aam
fldenv
xor
sbb
arpl
cmp
jl
sbb
mov
je
mov
jge
movs
icebp
pop
inc
adc
mov
inc
mov
iret
retf
xchg
mov
stos
add
mov
addr16
inc
aad
imul
jle
push
mov
xchg
push
lahf
mov
test
cmps
jmp
sub
mov
outs
cmps
or
stc
mov
mov
movs
and
jmp
push
hlt
movs
mov
xchg
shr
add
rep
loop
test
in
scas
movs
jb
sub
sar
jmp
loopne
mov
dec
push
in
rol
mov
stc
mov
pop
ffreep
jmp
mov
jecxz
sbb
mov
call
sbb
adc
jmp
mov
movs
rcr
add
pop
xchg
lods
pop
adc
leave
retf
addr16
fmul
pop
mov
sti
jle
and
repnz
in
dec
push
gs
jb
sbb
dec
mov
je
cmp
out
pop
pop
sub
sub
jge
mov
cmc
sbb
into
push
xchg
mov
adc
jle
fisub
enter
fld
fimul
(bad)
jb
jno
mov
or
fiadd
mov
cmp
sbb
mov
cmps
push
test
scas
test
cmp
out
iret
mov
add
dec
mov
bound
pop
or
mov
mov
sbb
in
jbe
mov
pop
cli
pop
lock
or
movs
test
imul
adc
mov
xchg
(bad)
scas
xchg
mov
add
or
add
add
fmul
test
test
outs
hlt
and
call
push
cmp
add
sbb
lods
fisub
sub
out
enter
jle
stc
mov
ret
addr16
shl
mov
jne
cmps
dec
mov
mov
loope
stos
cdq
push
sbb
sbb
push
mov
inc
mov
fld
ret
mov
loop
push
test
addr16
xchg
xor
xchg
aas
mov
mov
and
test
repz
mov
add
fsub
jo
cmp
mov
jns
and
xchg
aam
rcr
data16
fisttp
idiv
inc
adc
mov
mov
and
xor
sbb
ins
lock
test
int
test
dec
pop
mov
jno
lds
in
xchg
cmp
dec
pop
enter
sbb
jb
fsub
jne
icebp
mov
adc
sti
push
push
enter
pushf
xchg
adc
(bad)
jecxz
call
test
out
and
(bad)
loopne
push
cmps
sahf
pop
add
retf
sbb
or
ins
in
and
dec
mov
stos
shl
fwait
mov
and
jo
mov
sbb
jg
mov
xor
xchg
and
sbb
fsubr
aas
pop
mov
push
mov
in
cld
fmul
mov
out
pop
add
pop
fld
jo
push
fsubr
ret
cwde
jmp
push
outs
call
std
fld
test
sbb
loopne
or
adc
inc
adc
stc
js
das
push
pop
jecxz
and
push
mov
test
movs
icebp
mov
adc
aad
xchg
iret
mov
mov
(bad)
push
nop
add
jmp
mov
cld
std
mov
je
mov
das
xchg
and
xchg
loopne
mov
xchg
push
mov
mov
mov
push
mov
ret
movs
jne
or
and
clc
sbb
mov
add
and
add
aas
dec
inc
pop
cmp
xor
jmp
cmp
push
std
jbe
push
mov
push
push
in
mov
jecxz
adc
dec
push
fs
aad
inc
fisttp
xchg
leave
add
xchg
xchg
out
and
fwait
stos
sub
bound
xor
imul
xor
xor
push
inc
test
icebp
add
clc
push
test
pushf
or
fwait
jmp
in
and
adc
pop
js
sbb
sub
aam
push
and
mov
jp
add
(bad)
cmovp
imul
or
fidiv
mov
ja
jnp
and
cdq
(bad)
jno
arpl
mov
xchg
ss
push
xor
xor
push
(bad)
enter
iret
and
in
retf
js
aad
mov
sahf
ss
fld
mov
lock
mov
xor
stos
retf
test
lock
addr16
inc
int3
pop
mov
stc
push
movs
mov
(bad)
lahf
mov
stos
push
pop
adc
call
(bad)
fs
icebp
movs
hlt
ins
retf
sti
adc
(bad)
int3
cmp
and
mul
std
imul
das
in
mov
xchg
add
mov
adc
lock
mov
add
pop
hlt
imul
add
xchg
loopne
inc
loope
pop
push
repz
xchg
loope
add
cli
dec
ss
push
jne
fadd
fnstsw
jg
fimul
call
pop
jne
mov
(bad)
fimul
add
fst
pop
mov
sbb
push
jbe
pop
pushf
jb
cmc
xor
mov
stos
push
add
call
rcl
mov
jae
add
retf
push
pop
adc
into
lods
and
arpl
pop
hlt
aam
inc
sub
dec
imul
fadd
nop
xor
push
sbb
out
popf
leave
mov
pop
mov
out
sub
sub
fsub
movs
sar
aas
mov
mov
xchg
adc
mov
mov
push
dec
add
add
shl
mov
cmp
mov
mov
xchg
aad
repz
push
arpl
xor
and
pop
in
cmp
mov
add
out
sbb
nop
add
retf
cmp
leave
cmp
jmp
cmp
xchg
hlt
xchg
cmp
pop
jno
iret
sahf
push
sub
add
arpl
in
shr
cwde
or
ret
repz
ss
aam
pop
mov
xor
pusha
jb
sbb
mov
sub
lea
lea
xchg
xchg
and
xchg
loope
push
xchg
js
leave
pop
sub
sbb
adc
jg
or
jl
push
mov
loope
or
mov
push
stos
ja
cmps
in
ja
movs
cmp
test
xchg
pop
adc
jp
inc
lds
push
mov
mov
mov
add
pushf
fwait
and
stos
jnp
or
repz
mov
push
dec
sbb
jno
sub
rcl
out
loop
mov
call
popf
les
cmc
cdq
ja
pop
stc
es
mov
mov
aad
stos
xlat
mov
sbb
xor
enter
mov
mov
adc
pusha
and
cmps
lahf
enter
jmp
mov
sti
cwde
mov
inc
movs
enter
aad
pause
xchg
call
sbb
stos
cmp
sbb
mov
lods
and
es
push
arpl
repz
(bad)
or
popf
jmp
in
adc
(bad)
dec
addr16
lahf
fdivr
fs
inc
hlt
pop
adc
push
inc
shl
in
jns
cld
and
lds
nop
enter
sar
data16
and
stc
push
mov
mov
shl
inc
jns
cld
xchg
icebp
and
(bad)
jno
adc
xor
dec
adc
fild
jle
ror
daa
cdq
or
cmp
gs
mov
ins
mov
xor
and
pop
ins
dec
(bad)
fwait
mov
mov
sbb
inc
xchg
mov
leave
xchg
mov
jae
mov
mov
cmp
mov
jmp
invd
sub
stc
fsubr
xchg
fidivr
jbe
push
cmp
ja
cld
mov
popa
inc
add
push
lahf
cmp
fwait
fwait
ret
aas
stos
popa
rep
jp
dec
and
ins
lahf
cmp
xor
mov
push
out
call
out
movs
outs
mov
adc
sbb
test
mov
xchg
push
nop
dec
and
mov
ret
pop
inc
pop
xchg
cmp
rcl
call
nop
cmp
jmp
lds
mov
mov
dec
pop
or
enter
cmp
call
pop
cmp
inc
cmp
adc
or
nop
cmc
scas
cwde
retf
mov
cmps
ret
mov
out
xor
in
cli
mov
or
add
pop
nop
sahf
movs
popa
adc
and
int3
shl
out
outs
sbb
lods
jp
adc
xor
pop
call
ja
imul
icebp
fs
adc
inc
rcr
sub
and
scas
test
hlt
adc
jns
xchg
inc
jl
pop
(bad)
jle
hlt
pop
jp
dec
xor
imul
sub
mov
push
jp
es
out
push
fimul
adc
aad
cld
pop
xor
cs
sar
mov
cmps
jno
popf
mov
jo
sub
add
lahf
jg
mov
mov
ds
nop
jns
jae
mov
mov
test
mov
test
mov
inc
pop
cli
leave
jb
sub
dec
jne
shl
and
dec
cwde
jmp
jo
adc
lods
in
sub
lea
push
mov
sub
jmp
retf
pop
ins
retf
inc
inc
dec
clc
outs
rcl
mov
(bad)
push
and
mov
pop
movs
mov
cmps
dec
mov
mov
mov
pop
in
push
loope
push
sbb
cs
leave
ret
dec
and
hlt
inc
xchg
rcl
push
int3
fwait
outs
lods
cmp
js
mov
add
or
enter
xor
xor
clc
stos
mov
mov
mov
add
call
xchg
dec
dec
dec
xor
cmp
dec
imul
nop
test
sub
fadd
mov
mov
push
cmp
pop
mov
or
or
mov
jbe
mov
stos
hlt
ds
or
stos
mov
pop
sbb
sub
lock
cmp
xchg
mov
out
and
inc
and
push
dec
repz
arpl
pop
popf
inc
cmp
sub
repz
xor
(bad)
xor
repz
rcr
test
std
jge
push
sbb
cmps
fwait
dec
in
push
rol
jmp
loope
rcr
cmp
rcr
outs
hlt
push
pop
push
xor
or
outs
cmps
mov
xor
(bad)
stos
fcompp
pop
mov
adc
sbb
jmp
cmp
das
add
mov
retf
cmc
xchg
ja
aas
inc
in
sbb
mov
pushf
mov
sar
call
(bad)
movs
popa
mov
mov
pop
stc
test
sbb
sbb
out
jae
cmps
(bad)
in
jb
in
xor
or
repnz
stos
arpl
dec
call
jg
imul
fmul
cmp
inc
sub
sub
mul
xchg
mov
repnz
push
mov
mov
mov
adc
sbb
iret
fld
xor
push
xor
mov
adc
ret
xchg
add
fs
cmp
ds
push
push
push
add
cmc
mov
mov
jmp
fiadd
iret
test
and
(bad)
mov
inc
adc
inc
test
cli
js
test
data16
into
sahf
aam
outs
into
cmc
push
popf
pop
lds
test
push
ficom
out
loope
fild
and
loope
or
push
push
(bad)
mov
fwait
enter
shr
fisub
in
ret
out
jg
xor
imul
jo
pop
fisub
sub
mov
pop
test
xchg
cmp
sti
add
test
rcl
rcl
out
fisubr
xchg
mov
jle
add
mov
mov
pop
jg
push
cmp
push
mov
inc
pushf
lock
in
pusha
jns
cmp
mov
pushf
push
mov
test
js
fisubr
jl
shl
xchg
mov
xchg
(bad)
out
mov
gs
pushf
push
movs
mov
mov
cmp
mov
inc
sbb
and
scas
movs
sbb
mov
pop
ds
jb
fwait
(bad)
aad
mov
hlt
cmp
adc
push
rcl
aaa
mov
push
ret
fld
or
mov
jno
outs
retf
in
fs
pushf
mov
adc
addr16
cmp
nop
aad
sub
adc
sub
push
push
fadd
fstp
jmp
fst
dec
jecxz
push
out
pop
and
loope
pop
lds
xchg
push
jmp
movs
imul
in
and
sbb
std
js
jge
loop
(bad)
jge
rol
popf
mov
inc
ss
test
out
or
shl
leave
sbb
or
out
jl
add
and
iret
adc
daa
(bad)
pop
add
mov
ror
dec
or
mov
scas
push
dec
cmps
xor
jl
js
mov
cmp
dec
(bad)
cmps
jno
leave
int
and
add
lea
cli
pop
popf
loope
cli
mov
popf
add
jle
mov
sbb
dec
(bad)
in
sbb
lea
popf
jae
push
int3
mov
leave
(bad)
xchg
sub
jno
cmp
fistp
jo
adc
dec
lock
out
loope
push
xor
mov
and
mov
mov
cmp
mov
mov
adc
jb
jg
iret
daa
aaa
test
inc
fild
movs
call
jmp
push
lock
mov
jo
mov
and
adc
shr
(bad)
jo
and
stos
or
dec
jmp
cwde
inc
lods
cmp
mov
into
mov
mov
jae
add
out
sub
cdq
xlat
rcr
in
mov
hlt
movs
jmpw
and
shr
movs
retf
add
pop
scas
pop
add
test
dec
adc
adc
or
add
ds
mov
mov
jne
rcpps
mov
xchg
mov
movs
sub
adc
(bad)
mov
jmp
xchg
into
mov
mov
jae
mov
push
mov
retf
retfw
push
push
pop
xchg
test
or
mov
rcr
sti
push
add
cmps
outs
bound
mov
cmp
dec
test
add
ss
sbb
push
push
jmp
(bad)
cmps
ror
std
popf
mov
lahf
or
in
or
fwait
daa
loope
repz
lods
mov
mov
jo
dec
pop
out
pop
push
stos
fcom
mov
mov
sub
fsub
(bad)
dec
push
pop
cmp
push
mov
cmps
and
mov
dec
fst
addr16
ins
(bad)
test
add
pusha
xor
sub
and
jo
or
xor
icebp
mov
nop
push
imul
mov
cwde
imul
stos
mov
xchg
sbb
mov
mov
add
sbb
xor
sub
hlt
lahf
sbb
push
stos
push
dec
les
pop
jo
cmps
inc
sub
mov
gs
int3
dec
into
and
loop
add
stc
mov
ja
aad
push
mov
adc
xor
adc
pop
test
sub
mov
push
ja
xchg
mov
sahf
jmp
icebp
jo
imul
jecxz
mov
or
sahf
loope
cwde
add
and
popf
(bad)
test
leave
(bad)
mov
bound
mov
clc
and
repnz
cmc
inc
xchg
inc
cdq
cmp
mov
inc
or
cpuid
mov
shr
shl
out
aaa
test
scas
rol
mov
inc
add
call
cli
popa
xchg
add
cmp
fisubr
movs
aam
inc
jmp
stos
or
dec
inc
mov
int3
int
cmovp
dec
jl
xlat
push
lahf
mov
adc
sub
xchg
jecxz
dec
sub
dec
into
mov
out
or
push
pusha
imul
(bad)
cmp
push
rcr
mov
out
lds
ja
cmp
push
add
into
xchg
push
cli
mov
mov
mov
cwde
mov
test
jno
fld
dec
rcl
fisubr
jbe
cmp
push
cwde
hlt
ss
sar
sub
jb
inc
call
adc
ins
mov
add
ds
mov
xchg
adc
mov
pop
mov
jge
cld
ret
aaa
mov
mov
sbb
sub
mov
add
inc
fsub
cmps
outs
xchg
jo
je
mov
push
imul
mov
js
sub
sar
shl
sub
(bad)
repz
lds
xor
lock
mov
mov
dec
xchg
jo
xchg
jb
pop
pop
mov
nop
and
push
test
dec
sub
or
xlat
enter
mov
fucompp
clc
adc
lods
cwde
in
sar
fmul
pop
outs
outs
mov
dec
and
clc
call
mov
sbb
cmp
mov
imul
mov
je
jnp
inc
mov
out
or
ja
sub
out
sbb
cld
icebp
jp
mov
inc
pop
ins
outs
xchg
or
loopne
popa
sub
mov
clc
cwde
inc
mov
popf
cmps
mov
test
pop
cmp
fs
push
xchg
movs
(bad)
jno
cli
xor
aaa
add
pop
(bad)
push
cld
test
test
fst
jmp
cmc
dec
lods
rol
popa
mov
stos
fdivr
mov
sub
lock
hlt
sub
inc
sub
or
not
pop
mov
int3
stos
mov
jmp
or
mov
dec
mov
jmp
in
xchg
push
neg
mov
mov
jle
fld
push
mov
scas
pop
sar
loope
retf
aam
popa
mov
pushf
cmp
cmps
xor
out
mov
or
mov
lahf
lea
(bad)
and
repz
pop
mov
test
test
out
jge
jecxz
or
pushf
fild
xchg
test
aam
and
xor
and
cmp
sub
jae
retf
cmp
lock
and
or
in
push
out
mov
scas
ins
dec
cdq
dec
xchg
in
movs
cdq
icebp
push
mov
lahf
cmp
in
in
mov
fucomi
dec
mov
mov
std
dec
mov
sub
cmps
hlt
ds
mov
mov
sub
call
sub
pop
jnp
in
bnd
push
dec
dec
lahf
mov
inc
mov
aad
jp
xchg
mov
adc
lahf
(bad)
fs
lds
xchg
loope
push
mov
cwde
fwait
dec
mov
cmps
rcr
scas
cwde
mov
dec
sti
cwde
sbb
rol
pop
mov
fsubr
dec
(bad)
mov
fcom
mov
rcl
movs
xchg
inc
mov
push
movs
sti
out
add
fiadd
fstp
fimul
fs
mov
jmp
mov
mov
xor
mov
in
sbb
(bad)
xchg
psadbw
(bad)
mov
mov
popa
jne
mov
imul
std
cmp
rcl
sahf
cdq
pusha
push
mov
cmps
popf
cli
jp
mov
mov
lods
jbe
add
mov
sar
pop
jne
xor
lea
adc
retf
shr
(bad)
clc
dec
(bad)
and
xchg
daa
ins
je
movs
xor
pop
sub
mov
sbb
lds
repz
mov
xchg
clc
out
shl
es
adc
popf
push
xchg
xchg
fs
jo
ins
lahf
xchg
mov
retf
jo
ins
add
pop
outs
mov
inc
dec
xor
sbb
dec
cmp
dec
cmp
dec
bound
sub
push
sub
bound
pusha
out
dec
mov
mov
and
test
mov
inc
xchg
mov
pop
xor
cmp
jnp
jg
pop
popa
push
mov
pusha
mov
pop
ret
arpl
cmc
vxorps
test
push
fld
and
add
or
test
jae
push
movs
sahf
(bad)
cmp
stc
push
pop
push
cdq
jno
mov
stos
jl
mov
xor
pop
fs
setge
mov
mov
mov
out
fnstcw
pop
outs
repnz
mov
xor
test
scas
xor
push
fdiv
in
jmp
test
push
dec
pop
lods
jns
mov
mov
adc
pop
cmp
xchg
fmulp
retf
fmul
pandn
retf
in
and
mov
pop
fistp
retf
dec
adc
cmps
(bad)
out
push
add
test
cmps
inc
movs
(bad)
in
(bad)
in
rol
rol
retf
test
push
adc
dec
pop
stos
jl
or
jmp
ds
xor
jbe
jo
bound
mov
mov
test
xor
adc
data16
add
xlat
lods
test
fild
or
add
adc
ins
pop
jg
lods
mov
xchg
sub
cs
pusha
lods
ins
jg
lods
pop
jg
lods
dec
jns
jo
push
mov
xchg
mov
pop
add
pop
sub
retf
xchg
retf
lods
retf
mov
fwait
call
(bad)
test
enter
cmp
or
cmps
data16
mov
mov
lods
push
mov
add
in
push
rol
ins
push
jle
push
push
dec
test
mov
cmp
stc
sub
jnp
mov
scas
cmps
sub
xor
mov
add
add
fs
push
fs
mov
fs
mov
mov
call
ficomp
cs
sahf
ds
sahf
ret
mov
sahf
hlt
mov
mov
lahf
mov
mov
jns
call
mov
jp
push
cmp
dec
push
pop
pushf
dec
inc
pop
test
jg
cmps
dec
bound
lea
sub
pop
test
push
repnz
push
fild
jb
je
imul
test
mov
jmp
fisttp
test
inc
imul
mov
mov
cmp
pop
xor
out
adc
sub
mov
mov
jno
movs
or
inc
pushf
lods
mov
mov
adc
test
push
outs
outs
pop
pusha
xor
imul
cmp
mov
stos
add
cs
xchg
or
jge
ja
cdq
(bad)
daa
sub
test
scas
call
test
fs
inc
test
mov
jmp
repnz
cmc
add
pop
xlat
dec
cmp
mov
mov
loopne
xor
in
add
cwde
jle
std
call
mov
jnp
test
xchg
or
lods
jo
je
push
jg
stos
mov
dec
(bad)
xchg
cmp
pop
xor
xchg
add
cdq
jl
cdq
dec
div
xor
.byte
xor
