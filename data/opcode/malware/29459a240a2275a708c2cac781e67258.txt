xor
add
dec
add
add
add
add
add
add
outs
add
mov
add
ss
add
push
add
pop
add
push
add
add
sbb
add
sbb
add
add
add
add
add
or
add
add
sub
add
or
mov
add
and
add
and
add
or
add
and
sub
add
add
add
add
push
add
or
or
sub
pop
cmp
add
adc
adc
call
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
or
add
or
inc
add
add
idiv
(bad)
dec
sub
add
or
add
and
or
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
outs
or
add
fiadd
fiadd
adc
pop
adc
sub
adc
adc
adc
sub
add
push
and
(bad)
(bad)
call
idiv
(bad)
call
add
add
push
pop
adc
sub
imul
sbb
add
add
idiv
(bad)
jmp
add
add
add
xchg
add
mov
add
add
sbb
add
outs
add
add
add
adc
jnp
add
add
or
add
and
adc
sub
add
and
outs
push
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
fisubr
add
or
es
add
add
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
add
add
outs
push
add
or
sbb
sub
pop
sub
add
add
add
push
add
add
add
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
add
add
and
or
add
jae
add
or
add
or
add
add
and
or
add
jae
add
or
add
or
adc
add
and
or
add
and
adc
add
and
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
xor
add
add
add
add
sub
add
or
or
add
and
adc
es
outs
push
add
or
inc
add
add
idiv
(bad)
call
sub
add
es
pop
outs
pop
add
or
push
sub
add
and
sbb
add
and
add
xor
inc
add
add
outs
sbb
add
and
sub
sbb
add
and
xor
sbb
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
sbb
add
and
mov
add
add
mov
add
and
adc
add
ja
add
push
add
adc
add
add
push
add
idiv
(bad)
call
sub
add
es
add
add
sbb
add
and
sub
or
adc
sub
sub
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
fisub
or
pop
or
add
push
and
sbb
add
add
idiv
(bad)
call
jle
add
add
pop
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
outs
or
sub
sub
xor
add
add
add
add
add
sub
add
push
sub
adc
add
cmp
add
pop
add
adc
outs
sbb
or
add
push
add
or
inc
add
add
idiv
(bad)
call
sub
add
adc
sub
add
or
sub
add
add
xor
add
add
add
add
add
sbb
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
or
jae
add
or
sub
add
sbb
push
add
add
adc
add
jo
push
outs
and
add
and
add
add
sub
sub
xchg
rcr
add
sub
or
pop
sub
imul
add
add
(bad)
(bad)
call
sub
add
es
jae
add
or
push
and
sub
test
add
and
or
test
add
sub
mov
add
sub
adc
outs
and
add
and
in
add
pop
inc
add
add
idiv
(bad)
dec
sub
imul
sub
ret
add
add
inc
add
add
idiv
(bad)
jmp
nop
add
add
sub
add
mov
add
or
add
xchg
add
add
sub
call
xor
add
and
add
and
add
sbb
add
add
(bad)
(bad)
jmp
adc
add
adc
add
or
add
and
call
adc
adc
sub
add
or
add
sbb
add
add
idiv
(bad)
call
add
or
cwde
add
add
sub
or
add
or
or
pop
or
add
pushf
add
add
sub
call
cmp
inc
add
add
idiv
(bad)
call
add
add
or
mov
sub
adc
sub
add
and
push
and
add
push
and
sub
sub
add
adc
adc
adc
and
add
push
adc
sub
imul
push
adc
sub
pop
inc
add
add
idiv
(bad)
call
or
add
or
adc
outs
sub
add
adc
add
sub
adc
sub
imul
sbb
add
add
(bad)
(bad)
(bad)
fisub
ficomp
add
adc
or
add
mov
add
sub
call
add
mov
sub
adc
add
sub
imul
sbb
add
add
(bad)
(bad)
jmp
add
add
and
pop
add
push
jae
add
or
add
or
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
adc
sub
add
and
add
or
add
add
sub
sub
add
or
daa
add
or
inc
add
add
idiv
(bad)
call
sub
add
add
sub
es
and
add
push
and
add
add
sub
sub
add
or
add
les
add
sub
sub
imul
outs
sub
add
push
sub
xor
add
add
adc
and
add
add
sub
test
add
and
or
int3
add
add
sub
rol
add
sub
adc
outs
and
add
and
aam
add
sub
test
add
and
or
fadd
add
sub
fadd
add
sub
adc
outs
and
add
and
add
add
sub
sub
push
or
or
or
in
add
sub
or
push
sub
imul
add
add
(bad)
(bad)
call
sub
add
es
add
add
sub
sub
pop
or
or
or
in
add
add
sub
or
add
push
and
sbb
add
add
(bad)
(bad)
inc
adc
and
add
add
sub
or
mov
or
or
add
add
sub
add
add
sub
push
sub
add
adc
call
sub
das
add
or
inc
add
add
idiv
(bad)
jmp
add
add
sub
add
and
add
sub
adc
adc
pop
sub
imul
add
add
(bad)
(bad)
call
add
add
add
idiv
(bad)
jmp
or
add
sub
pop
fiadd
or
or
add
sub
adc
adc
adc
sub
imul
sbb
add
add
(bad)
(bad)
jmp
adc
add
sub
pop
fimul
fiadd
and
add
sub
adc
sub
add
add
int
add
int
add
add
add
add
add
sbb
push
add
add
adc
add
add
adc
sub
add
or
add
add
add
add
or
add
or
or
add
xor
add
and
add
and
jo
adc
add
or
add
and
sub
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
outs
xor
sub
or
sub
sbb
add
add
(bad)
(bad)
inc
adc
fisttp
or
add
outs
xor
es
add
push
and
adc
outs
add
or
inc
add
add
idiv
(bad)
(bad)
fisub
adc
sub
adc
adc
sub
sbb
add
(bad)
(bad)
call
adc
add
or
or
add
or
inc
add
add
idiv
(bad)
(bad)
jle
add
add
push
fstp
add
add
adc
add
and
add
sbb
add
and
sbb
add
sub
adc
enter
adc
adc
call
movs
add
push
and
add
sbb
add
add
(bad)
(bad)
call
add
add
or
sbb
add
sub
adc
sub
add
and
je
add
or
and
or
add
xor
add
and
add
and
outs
sbb
add
and
and
add
sub
adc
adc
or
sub
sub
sbb
add
add
(bad)
(bad)
call
add
or
add
or
and
add
sub
adc
sub
add
and
adc
add
sub
adc
sub
imul
add
add
(bad)
(bad)
(bad)
fiadd
fiadd
and
add
sub
or
or
add
add
(bad)
(bad)
call
pop
sub
add
or
adc
adc
sub
add
or
adc
sub
add
or
ficomp
and
add
add
sub
or
(bad)
and
add
sub
or
add
or
pop
inc
add
add
idiv
(bad)
inc
sub
add
push
and
pop
or
or
sub
add
sub
add
and
add
and
or
sbb
add
add
(bad)
(bad)
call
pop
or
or
xor
add
sub
add
and
add
and
sub
add
or
add
add
push
outs
sub
add
push
adc
fidivr
adc
and
add
add
sub
adc
adc
adc
sub
imul
pop
inc
add
add
idiv
(bad)
(bad)
jle
add
add
push
fimul
adc
sub
add
or
adc
sub
add
inc
xchg
add
add
add
aaa
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
dec
add
add
add
add
cmp
add
sub
sbb
add
and
inc
add
add
sub
sub
inc
add
add
idiv
(bad)
call
sub
add
add
inc
add
add
sub
outs
sbb
add
and
add
sub
xor
add
add
add
add
add
sub
add
push
sub
adc
add
cmp
add
pop
add
adc
outs
cmp
add
and
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
adc
sub
add
or
sub
add
add
xor
add
add
add
add
add
and
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
cmp
add
or
adc
sub
sub
add
adc
push
add
push
and
sub
es
sbb
add
add
(bad)
(bad)
call
sub
add
es
adc
sub
outs
add
or
inc
add
add
idiv
(bad)
inc
adc
sub
adc
sub
add
or
add
adc
add
push
pop
adc
sub
imul
add
add
(bad)
(bad)
inc
or
jo
add
add
add
adc
add
add
add
add
add
xor
add
add
adc
sub
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
or
pop
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
inc
pop
xor
sub
test
add
and
xor
sub
cmp
sub
or
add
or
cmp
sub
outs
inc
add
or
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
inc
pop
or
xor
add
and
add
and
add
pop
inc
add
add
idiv
(bad)
inc
pop
adc
xor
add
and
add
and
inc
add
add
idiv
(bad)
inc
pop
sbb
xor
add
and
add
and
inc
add
add
idiv
(bad)
inc
pop
and
xor
add
and
add
and
inc
add
add
idiv
(bad)
call
inc
sub
sub
inc
sub
and
dec
sub
sbb
dec
sub
adc
push
sub
pop
pop
push
sub
or
pop
pop
sub
jae
add
or
pop
pop
sub
xor
add
jae
add
or
add
add
xor
add
add
add
add
add
sub
add
or
add
add
add
add
add
or
or
add
add
add
add
sub
add
push
sub
xor
add
add
adc
jnp
add
add
sub
xor
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
sub
xor
add
and
add
jp
jnp
add
add
xor
xor
add
and
add
and
inc
add
add
idiv
(bad)
call
xor
xor
add
and
add
jp
jnp
add
add
inc
sub
add
and
add
and
add
and
inc
add
or
inc
add
add
idiv
(bad)
jmp
sub
add
and
jnp
add
add
xor
xor
add
and
add
and
add
and
adc
add
sub
xor
add
and
add
and
pop
pusha
sub
dec
add
or
inc
add
add
idiv
(bad)
call
pop
sub
add
and
add
jp
jnp
add
add
test
add
sub
add
and
add
and
add
sbb
add
(bad)
(bad)
inc
jnp
add
add
nop
add
add
xor
add
and
add
and
add
sbb
add
(bad)
(bad)
inc
jnp
add
add
test
add
sub
add
and
add
and
add
sub
add
and
sub
dec
add
or
inc
add
add
idiv
(bad)
inc
jnp
add
add
nop
add
add
xor
add
and
add
and
add
and
inc
add
or
inc
add
add
idiv
(bad)
jmp
nop
add
add
xor
add
and
add
jp
or
add
jo
dec
add
or
add
add
xor
add
add
add
add
add
push
push
sub
xor
add
add
add
add
add
add
pop
add
push
sub
xor
jae
add
adc
add
add
add
add
xor
xor
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
xor
xor
add
and
add
jp
jnp
add
add
xor
xor
add
and
add
and
add
and
daa
add
or
inc
add
add
idiv
(bad)
inc
sub
add
sub
add
or
or
add
add
add
pop
ins
sub
add
or
or
add
add
add
add
sub
add
push
sub
xor
add
add
adc
jnp
add
add
scas
add
add
xor
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
and
xor
add
and
add
jp
jnp
add
add
scas
add
add
xor
add
and
add
and
add
sub
add
and
sub
dec
add
or
inc
add
add
idiv
(bad)
call
je
sub
sub
jnp
add
add
scas
add
add
xor
add
and
add
and
add
sub
add
and
sub
dec
add
or
inc
add
add
idiv
(bad)
call
jl
sub
sub
and
xor
add
and
add
jp
jnp
add
add
rol
add
sub
add
and
add
and
inc
add
add
idiv
(bad)
jmp
rol
add
sub
add
and
add
jp
jnp
add
add
rol
add
sub
add
and
add
and
movs
add
add
add
(bad)
(bad)
(bad)
jle
add
or
xor
add
or
add
fadd
add
sub
add
and
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
fadd
add
sub
add
and
add
and
adc
add
jecxz
add
sub
add
and
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
jecxz
add
sub
add
and
add
and
add
or
or
sub
add
and
and
sub
sbb
inc
add
add
idiv
(bad)
(bad)
jle
add
or
sub
add
and
add
xor
add
add
add
add
add
test
add
sub
add
xor
add
add
adc
add
add
push
sbb
add
add
idiv
(bad)
call
sub
add
es
add
jo
push
sub
add
and
add
or
mov
push
add
or
add
or
add
or
push
sub
add
and
add
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
add
add
sub
add
and
add
or
push
add
add
add
add
add
add
sub
add
and
add
or
push
add
add
add
add
add
add
sub
add
and
add
or
push
add
add
add
add
add
add
sub
add
and
adc
push
add
add
add
add
push
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
or
idiv
(bad)
jmp
jle
add
add
add
push
sub
add
sub
add
xor
add
add
adc
add
add
push
sbb
add
add
idiv
(bad)
call
sub
add
es
add
jo
push
sub
add
and
add
or
mov
push
add
or
add
or
add
or
push
sub
add
and
add
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
adc
or
add
add
xchg
and
sub
add
add
(bad)
(bad)
call
sub
add
es
add
add
xchg
or
pop
pop
dec
add
cmp
add
add
add
xchg
pop
inc
pop
sub
add
add
(bad)
(bad)
(bad)
jle
add
add
xchg
and
(bad)
call
bound
push
jle
add
add
pop
pop
xchg
pusha
or
sbb
or
add
inc
jle
add
add
xchg
and
(bad)
(bad)
call
sbb
push
jle
add
add
pop
pop
xchg
pop
adc
or
jle
add
add
sbb
push
bound
push
jle
add
add
sbb
pusha
or
sbb
or
add
pop
das
adc
inc
add
add
idiv
(bad)
(bad)
jle
add
or
sub
add
and
add
push
outs
push
add
or
pop
add
or
xor
add
add
add
add
add
add
pop
add
push
sub
xor
add
add
add
add
add
out
add
add
xor
add
and
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
add
add
xor
add
and
add
jp
pop
add
or
push
and
add
add
xor
add
and
add
sub
add
and
add
add
xor
pop
add
or
add
push
and
xor
add
and
add
sub
add
and
add
add
pop
add
or
add
push
and
add
add
xor
add
and
add
sub
add
and
add
add
pop
add
or
add
push
and
add
sub
add
and
add
sub
add
and
add
add
pop
add
or
add
push
and
add
sub
add
and
add
sub
add
and
add
add
pop
add
or
add
add
add
add
out
add
add
xor
add
and
add
and
add
and
pusha
add
or
jnp
add
add
jg
add
sub
add
and
add
and
add
sbb
add
add
(bad)
(bad)
inc
jnp
add
add
jg
add
sub
add
and
add
and
inc
add
or
inc
add
add
idiv
(bad)
inc
outs
popa
add
or
adc
sub
add
and
adc
arpl
add
and
add
or
add
and
sub
add
and
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
pop
add
sbb
add
or
or
outs
add
or
jnp
add
add
mov
add
sub
add
and
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
mov
add
sub
add
and
add
and
add
sub
add
and
add
sub
dec
add
or
inc
add
add
idiv
(bad)
dec
and
add
push
outs
push
and
sub
imul
xchg
add
add
sub
push
add
or
imul
or
jnp
add
add
fwait
add
add
xor
add
and
add
and
inc
add
add
idiv
(bad)
inc
jnp
add
add
fwait
add
add
xor
add
and
add
and
add
sub
add
and
add
sub
dec
add
or
inc
add
add
idiv
(bad)
call
add
or
add
add
add
add
stos
add
jmp
add
add
or
or
add
add
add
and
add
push
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
mov
sub
mov
add
and
movs
add
add
sub
movs
add
add
xor
add
and
test
add
sub
mov
xor
add
and
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
xor
add
jb
add
xor
add
(bad)
(bad)
(bad)
jg
das
add
add
add
add
add
jae
add
or
push
jae
add
or
jae
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
cmp
add
add
outs
sbb
add
and
sub
sbb
add
and
xor
sbb
add
add
(bad)
(bad)
call
sub
add
es
push
pop
outs
sbb
add
and
sbb
add
retf
add
add
add
adc
outs
sbb
add
and
inc
add
jo
jo
add
and
das
and
inc
add
add
idiv
(bad)
call
sub
add
es
jb
add
jo
jo
add
and
das
push
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
add
add
pop
addps
push
pop
outs
jno
add
and
and
inc
add
add
idiv
(bad)
inc
pop
outs
jno
add
and
adc
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
pop
adc
add
or
add
add
sub
add
and
jae
add
and
add
je
add
adc
add
add
adc
add
add
add
ret
ret
add
add
add
sbb
add
and
add
pop
add
adc
add
add
or
xor
add
pop
popa
push
sub
push
and
pop
sub
add
or
push
sub
add
add
add
or
push
sbb
pop
add
add
sbb
add
sbb
add
sbb
add
add
inc
add
push
and
es
popa
push
sub
push
and
push
sub
adc
add
add
add
or
(bad)
add
add
xor
add
add
sbb
add
add
jle
add
add
pop
or
or
add
and
pop
or
sbb
out
sbb
add
add
idiv
(bad)
call
sub
add
add
add
or
ror
or
add
sbb
add
add
(bad)
(bad)
push
add
or
add
sub
adc
push
outs
ja
add
and
adc
or
sub
adc
add
push
push
push
outs
ja
add
and
pop
adc
adc
and
adc
or
or
sbb
add
add
idiv
(bad)
call
adc
sub
adc
pop
pop
adc
adc
adc
push
and
sbb
add
add
(bad)
(bad)
call
pop
sub
sbb
add
add
(bad)
(bad)
jmp
adc
add
and
add
and
add
push
outs
jns
add
jle
add
add
inc
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
(bad)
(bad)
(bad)
jg
pop
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
outs
jp
add
and
add
or
movd
add
add
das
add
add
jnp
add
jle
add
add
push
jl
add
adc
jge
add
and
or
add
or
or
add
or
outs
jg
add
and
add
and
or
add
or
add
and
outs
add
or
sub
add
or
adc
outs
ja
add
and
adc
adc
adc
push
outs
add
adc
jle
add
add
or
adc
outs
sub
add
adc
or
pop
push
outs
jp
add
and
inc
add
add
idiv
(bad)
inc
adc
add
add
or
pop
imul
es
adc
add
add
or
pop
imul
adc
jle
add
add
movhps
movaps
imul
xor
add
push
push
push
jl
add
jle
add
add
or
pop
cmp
add
add
inc
add
add
idiv
(bad)
(bad)
jle
add
add
inc
pop
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
add
add
add
idiv
(bad)
(bad)
jle
add
add
outs
jp
add
and
outs
jnp
add
sub
jle
add
add
xor
add
jnp
add
jle
add
add
push
jl
add
push
push
jae
add
or
adc
call
adc
adc
mov
adc
adc
adc
push
adc
outs
ja
add
and
adc
xor
sbb
add
(bad)
(bad)
(bad)
jle
add
add
adc
adc
outs
sub
add
adc
adc
das
int3
sbb
add
add
(bad)
(bad)
(bad)
jle
add
add
pop
sub
sbb
add
add
(bad)
(bad)
inc
outs
test
add
and
jp
add
and
add
or
mov
adc
adc
adc
scas
add
push
and
add
or
sub
add
add
or
pop
add
add
add
add
sub
add
or
and
add
push
sub
add
sub
adc
add
add
rol
add
sub
mov
add
and
les
add
sub
repz
add
xor
add
and
enter
sub
jg
add
sub
add
and
int3
add
add
sub
push
add
add
xor
add
and
xor
add
add
add
xor
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
into
add
add
xor
add
and
add
and
add
pop
inc
add
add
idiv
(bad)
call
sub
add
add
fild
add
sub
add
and
add
and
inc
add
add
idiv
(bad)
inc
and
add
add
xor
add
and
add
and
inc
add
add
idiv
(bad)
jmp
lods
add
add
sub
and
mov
add
sub
push
and
add
push
sub
and
sub
dec
add
push
sub
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
and
add
add
sub
sbb
add
(bad)
(bad)
call
sub
add
add
add
push
sub
and
add
add
sub
adc
inc
add
add
idiv
(bad)
inc
jae
add
push
sub
and
add
add
sub
adc
inc
add
add
idiv
(bad)
inc
jae
add
push
sub
lar
add
xor
add
and
add
add
mov
add
and
add
jp
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
adc
cmp
add
sub
add
and
add
sub
add
and
add
sub
inc
add
add
xchg
add
and
add
or
pop
and
xor
add
and
add
or
and
xor
add
and
add
or
and
xor
add
and
add
or
and
add
add
xor
add
and
add
or
and
add
add
xor
add
and
add
sub
add
and
add
pop
and
add
add
xor
add
and
mov
add
and
add
pop
and
add
add
xor
add
and
cmp
add
and
push
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
adc
sub
add
or
loopne
add
sub
sbb
inc
add
add
idiv
(bad)
jmp
push
add
add
xor
add
and
or
add
sub
add
and
add
pop
and
add
sub
add
and
sbb
adc
adc
sub
add
or
inc
add
add
idiv
(bad)
call
pop
sub
add
or
in
add
sub
sbb
inc
add
add
idiv
(bad)
jmp
push
add
add
xor
add
and
or
add
sub
add
and
add
pop
and
add
add
xor
add
and
mov
add
and
or
push
add
or
inc
add
add
idiv
(bad)
call
or
pop
add
or
call
sub
sbb
idiv
(bad)
jmp
push
add
add
xor
add
and
or
add
sub
add
and
add
pop
and
add
add
xor
add
and
mov
add
and
or
push
add
or
inc
add
add
idiv
(bad)
call
or
pop
add
or
in
add
add
sub
sbb
add
(bad)
(bad)
jmp
push
add
add
xor
add
and
or
add
sub
add
and
add
pop
and
add
add
xor
add
and
mov
add
and
add
pop
sub
add
sub
add
or
add
add
xor
add
and
add
and
fiadd
or
add
add
and
add
mov
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
add
adc
ins
add
add
add
sub
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
lock
add
sub
add
xor
add
add
add
add
add
hlt
add
add
sub
add
xor
add
add
adc
outs
add
add
xor
add
and
add
sub
add
and
add
sub
inc
add
add
jnp
add
add
xor
pop
add
and
add
or
push
and
add
sub
add
and
add
and
fiadd
pop
sub
add
sub
adc
add
add
pop
push
add
and
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
pop
add
add
add
jae
add
push
or
add
add
add
add
add
add
add
cmp
add
add
push
add
push
and
add
jnp
add
add
and
add
idiv
(bad)
call
sub
add
and
xor
add
and
add
jp
sub
xor
add
jnp
add
add
cmp
add
and
add
and
adc
sub
or
outs
dec
add
push
and
add
push
and
add
and
jnp
add
add
jnp
add
add
jnp
add
add
and
add
fisub
es
outs
inc
add
push
and
inc
add
add
idiv
(bad)
call
sub
add
es
sbb
add
add
xchg
add
or
inc
add
add
idiv
(bad)
(bad)
fimul
adc
(bad)
push
or
add
outs
push
add
or
sub
add
add
add
add
push
add
and
add
add
adc
push
add
add
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
cld
add
add
sub
mov
add
and
add
add
sub
nop
add
add
xor
add
and
add
add
sub
test
xor
add
and
or
add
sub
mov
add
sub
add
and
or
add
sub
ret
add
add
xor
add
and
adc
add
sub
jmp
add
sub
add
and
adc
add
sub
test
add
xor
add
and
sbb
add
sub
or
add
xor
add
and
sbb
add
sub
and
add
xor
add
and
and
add
sub
sub
add
xor
add
and
cmp
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
adc
and
add
sub
mov
add
and
add
and
add
sub
jmp
xor
add
and
or
sub
add
and
add
add
sub
push
sub
add
pop
or
sub
add
sub
xchg
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
add
sub
dec
add
add
xor
add
sub
fidiv
adc
and
add
add
sub
adc
adc
adc
push
and
sbb
add
add
(bad)
(bad)
jmp
cmp
add
sub
or
add
xor
add
add
adc
inc
add
add
sub
xchg
add
or
add
push
outs
xchg
add
or
add
and
xchg
add
or
xor
add
add
add
adc
push
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
push
add
sub
add
and
pop
add
sub
add
and
add
or
add
jp
sbb
add
add
add
adc
cwde
add
or
sbb
add
add
(bad)
(bad)
call
sub
add
and
add
sub
or
cli
add
add
mov
add
sub
add
and
add
and
mov
xor
add
and
add
and
das
sbb
add
(bad)
(bad)
inc
outs
jne
add
and
inc
add
add
idiv
(bad)
jmp
dec
add
add
sub
or
lahf
add
add
pop
add
push
and
add
add
sub
push
add
add
sub
sub
add
and
cdq
add
or
mov
cmp
add
sbb
add
add
idiv
(bad)
inc
and
pop
add
sub
add
and
add
and
add
dec
sbb
add
add
(bad)
(bad)
jmp
push
add
add
sub
add
add
push
and
inc
add
add
idiv
(bad)
call
add
add
add
idiv
(bad)
jmp
pop
add
add
sub
or
test
or
pop
add
push
and
pop
add
add
sub
push
and
add
sub
call
add
and
and
add
sub
push
fiadd
adc
sub
sbb
add
add
(bad)
(bad)
jmp
push
sub
or
cwde
add
add
stc
pop
add
sub
add
and
add
and
pop
and
or
add
xor
add
and
add
and
or
sbb
add
(bad)
(bad)
jmp
ins
add
add
sub
dec
add
add
or
push
data16
push
jae
add
push
jle
add
or
add
push
and
add
add
sbb
idiv
(bad)
jmp
jo
add
sub
or
adc
add
add
fiadd
and
add
sub
adc
sub
add
add
add
mov
add
xor
add
or
add
inc
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
add
add
add
and
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
and
add
add
sub
add
sub
add
sub
add
or
inc
add
add
idiv
(bad)
jmp
xor
add
sub
and
add
sub
add
adc
add
adc
add
or
add
adc
and
add
add
sub
mov
add
and
add
add
add
adc
sub
add
add
(bad)
(bad)
call
sub
add
and
add
sub
and
add
sub
add
and
add
add
jnp
add
add
xor
jnp
add
add
inc
add
add
pop
add
and
inc
add
add
sub
sub
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
adc
or
and
add
sub
push
pop
inc
add
add
idiv
(bad)
call
sub
add
and
add
sub
and
add
sub
add
or
pop
add
add
add
add
sub
add
or
add
xor
sub
add
and
add
sub
add
and
add
sub
and
add
sub
or
sub
es
and
add
sub
add
or
inc
add
add
idiv
(bad)
call
sub
add
or
pop
add
add
sub
push
add
add
xor
add
and
add
or
pop
add
add
sub
add
or
inc
add
add
idiv
(bad)
dec
and
add
sub
add
add
pushf
add
or
sub
es
add
add
(bad)
(bad)
jmp
add
add
sub
adc
add
sub
es
add
add
(bad)
(bad)
jmp
push
sub
adc
add
and
add
sub
popf
add
or
jo
add
sub
popf
add
or
xor
add
adc
or
add
adc
and
add
sub
add
and
add
and
add
sub
adc
add
add
or
pop
or
js
add
sub
add
or
inc
add
add
idiv
(bad)
dec
and
add
sub
popf
add
or
and
sub
add
or
inc
add
add
idiv
(bad)
call
pop
sub
add
and
inc
add
add
idiv
(bad)
call
pop
and
xor
add
and
add
add
sub
popf
add
or
add
and
and
sub
popf
add
or
and
add
push
outs
add
or
inc
add
add
idiv
(bad)
jmp
nop
add
add
sub
adc
sub
add
and
inc
add
add
idiv
(bad)
jmp
mov
xor
add
and
stos
add
push
and
and
xor
add
and
mov
or
xchg
add
add
sub
lods
add
add
xor
add
and
cwde
add
add
sub
or
add
add
add
or
mov
adc
outs
mov
sub
pop
adc
adc
and
add
add
xor
add
and
add
fiadd
or
add
push
add
push
and
inc
add
add
idiv
(bad)
dec
adc
sub
add
and
dec
add
and
add
push
and
add
add
xor
add
and
add
sub
add
and
add
sub
or
add
add
add
or
sub
movs
add
add
sub
adc
add
add
add
or
movs
add
or
or
push
adc
test
add
sub
std
add
add
xor
add
and
add
sub
add
and
add
sub
or
add
add
add
or
sub
mov
add
sub
adc
add
adc
pop
adc
add
push
and
or
add
add
idiv
(bad)
jmp
mov
add
sub
outs
add
add
push
and
add
sub
add
and
add
sub
or
add
add
sub
mov
sub
adc
add
rol
add
sub
mov
xor
add
and
add
or
add
or
add
or
add
or
add
adc
or
add
xchg
add
push
adc
add
or
add
or
add
and
sub
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
or
mov
xor
add
and
add
and
add
sbb
add
add
(bad)
(bad)
(bad)
jle
add
or
mov
xor
add
and
add
and
add
add
sub
outs
add
add
push
and
add
sub
add
and
inc
add
add
or
add
or
add
or
add
add
stos
add
or
jnp
add
add
xchg
add
push
and
add
add
sub
adc
add
add
push
adc
adc
adc
outs
add
add
and
inc
add
add
idiv
(bad)
jmp
int3
add
add
sub
std
add
add
xor
add
and
add
sub
add
and
inc
add
add
or
add
or
add
or
add
adc
or
add
xchg
add
push
and
add
add
sub
adc
add
add
add
movups
push
add
push
and
adc
and
add
add
sub
std
add
add
xor
add
and
add
sub
add
and
inc
add
add
or
add
or
add
or
add
adc
add
or
jnp
add
add
xchg
add
push
and
add
add
sub
adc
add
movq
add
fidiv
adc
adc
sub
xor
add
and
add
and
add
add
sub
std
add
add
xor
add
and
add
sub
add
and
inc
add
add
or
add
or
add
or
add
adc
add
or
sub
loopne
add
sub
adc
add
in
add
sub
adc
call
sub
adc
jo
push
add
or
mov
xor
add
and
add
and
or
add
sbb
inc
add
add
idiv
(bad)
jmp
in
add
add
sub
adc
pop
pop
and
add
add
sub
sbb
inc
add
add
idiv
(bad)
jmp
hlt
add
add
sub
adc
cmp
clc
add
add
sub
stos
add
or
adc
add
sub
adc
and
add
add
sub
jno
(bad)
call
add
(bad)
(bad)
call
adc
sbb
add
(bad)
(bad)
jmp
add
add
sub
pop
push
add
sub
add
and
add
or
add
or
add
or
add
or
add
add
stos
add
or
jnp
add
add
xchg
add
push
adc
add
adc
add
or
add
sub
std
add
add
xor
add
and
add
sub
add
and
inc
add
add
or
add
or
add
or
add
adc
or
add
xchg
add
push
and
add
sub
adc
adc
scas
push
add
sub
add
and
add
and
add
add
sub
adc
sub
add
inc
lods
add
add
add
adc
add
or
add
sbb
add
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
leave
add
add
add
add
add
add
add
and
add
add
add
cmp
add
or
add
inc
add
add
add
and
add
add
add
xchg
add
add
cmps
add
add
and
add
add
add
push
push
add
or
add
pop
push
add
jne
add
and
add
add
add
add
add
and
add
and
add
adc
add
pop
add
and
add
jae
add
or
pop
sub
outs
scas
add
or
add
add
or
add
mov
add
pop
add
or
push
add
mov
add
pop
push
add
or
push
push
outs
mov
add
pop
and
add
sub
mov
add
pop
and
add
add
sub
mov
add
pop
push
pop
outs
mov
add
pop
push
or
add
or
push
or
add
or
or
push
and
add
sub
mov
es
add
or
pop
add
add
add
add
sub
add
or
add
xor
add
add
add
add
jle
add
add
aam
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
jo
push
sub
add
and
add
or
sub
imul
or
adc
add
and
add
or
push
sub
add
and
add
mov
bound
add
popa
add
add
jae
add
or
add
or
add
and
adc
mov
adc
or
add
or
bound
add
push
adc
outs
mov
add
adc
sbb
add
add
(bad)
(bad)
(bad)
ficom
sub
pop
inc
add
add
idiv
(bad)
dec
outs
push
add
or
sub
add
push
sub
add
or
inc
add
add
idiv
(bad)
jmp
adc
add
and
add
and
rol
or
add
add
adc
add
add
adc
add
add
xor
add
add
add
add
add
sub
add
or
add
xor
add
add
and
arpl
add
or
or
sub
add
or
add
and
add
add
or
or
sub
add
or
add
or
or
sub
add
or
add
and
lods
add
push
and
es
sbb
and
add
add
add
or
adc
cmp
add
add
or
jle
add
add
add
add
and
sub
adc
pop
outs
mov
outs
enter
and
add
outs
leave
add
or
add
mov
es
sub
es
add
add
(bad)
(bad)
call
sub
add
es
sub
outs
retf
or
adc
pop
outs
mov
pop
jae
add
or
add
add
adc
outs
int3
add
or
outs
int
add
and
push
adc
sub
or
adc
sub
or
or
cwde
add
push
adc
add
and
adc
add
iret
add
or
add
fiadd
adc
pop
pop
adc
adc
adc
push
and
(bad)
(bad)
call
inc
add
add
idiv
(bad)
jmp
add
add
sbb
add
add
add
add
and
add
add
outs
add
inc
add
and
add
adc
push
add
add
add
adc
add
add
dec
sub
add
and
dec
sbb
jle
add
add
dec
sub
add
and
dec
sbb
pop
sub
es
popa
add
add
dec
or
pop
sub
add
add
add
pushf
add
push
or
add
add
push
outs
rol
add
add
sub
xor
add
add
adc
rol
add
and
rol
add
and
add
and
or
add
or
outs
aad
add
and
add
or
add
or
add
or
inc
add
add
idiv
(bad)
call
sub
add
ficom
sub
sbb
add
add
(bad)
(bad)
dec
outs
push
add
or
add
outs
fadd
add
and
add
sub
add
add
add
sbb
inc
pop
add
add
add
xor
add
add
add
add
adc
add
add
dec
sub
add
and
dec
sbb
push
sub
add
add
(bad)
(bad)
call
sub
add
sub
sub
or
add
add
dec
pop
push
push
sub
add
sbb
sbb
sbb
push
adc
js
or
push
add
or
pop
adc
or
add
inc
add
add
add
add
add
add
add
add
add
add
sub
add
or
or
or
push
add
or
add
and
adc
outs
fiadd
add
and
pop
or
sub
or
add
jo
fild
add
jp
sbb
adc
pop
adc
add
xor
add
idiv
(bad)
inc
pop
outs
fadd
add
sub
add
add
or
cmp
add
add
add
add
and
add
add
pushf
add
and
add
add
arpl
pushf
add
and
add
add
adc
pushf
add
and
add
add
sbb
pushf
sub
add
adc
add
add
add
adc
outs
fld
add
and
ret
add
push
and
outs
fiadd
add
and
inc
add
add
idiv
(bad)
call
sub
add
es
pop
pop
or
sub
es
or
add
and
inc
add
add
idiv
(bad)
inc
outs
mov
outs
fild
add
and
inc
add
add
idiv
(bad)
dec
push
add
add
or
add
and
or
add
add
or
pop
or
sbb
or
adc
outs
loope
add
and
pop
pop
adc
pop
pop
or
ret
add
push
and
sbb
add
add
idiv
(bad)
dec
sub
adc
add
in
add
sub
add
and
add
add
mov
add
and
add
add
add
sub
and
add
mov
add
and
add
and
lds
add
and
add
mov
add
or
add
or
jle
add
add
loop
add
and
add
and
sub
add
or
and
add
add
sbb
add
add
(bad)
(bad)
call
sub
add
es
add
add
(bad)
imul
add
sub
or
add
add
pop
and
inc
add
and
inc
add
add
idiv
(bad)
(bad)
jle
add
add
and
add
add
imul
add
sub
pop
pop
adc
add
sub
imul
sbb
add
(bad)
(bad)
jmp
add
add
xor
mov
add
add
add
add
add
add
add
add
add
add
add
push
jge
add
add
add
add
or
add
add
mov
add
and
inc
add
add
idiv
(bad)
call
sub
add
add
add
or
outs
add
add
push
add
add
add
or
inc
add
add
idiv
(bad)
inc
outs
mov
outs
out
add
and
outs
add
add
imul
add
add
or
xor
add
add
or
sub
es
add
add
jnp
add
add
scas
add
push
and
pop
inc
add
add
idiv
(bad)
call
sub
add
sub
add
adc
push
add
add
add
add
adc
jnp
add
add
jle
add
or
push
or
sub
es
add
cs
add
add
(bad)
(bad)
call
sub
add
es
add
add
(bad)
imul
add
add
add
sub
add
mov
es
add
(bad)
imul
add
add
add
adc
sub
add
or
or
adc
add
adc
add
and
add
and
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
inc
add
add
cli
add
add
add
sub
sub
sbb
lahf
add
push
adc
add
sub
sub
sbb
lahf
add
push
adc
add
sub
sub
sbb
lahf
add
push
adc
add
sub
sub
pop
sub
sub
sbb
lahf
add
push
adc
add
mov
es
add
add
add
jnp
add
add
outs
jmp
outs
jmp
adc
sub
add
or
add
push
adc
add
mov
es
add
add
add
jnp
add
add
outs
in
add
or
add
and
sub
add
or
add
push
adc
add
mov
es
jnp
add
add
add
add
add
jnp
add
add
out
add
or
add
add
add
add
out
add
or
mov
outs
lock
or
add
and
sub
add
or
add
push
adc
add
mov
es
jnp
add
add
add
add
add
jnp
add
add
repnz
or
add
add
add
add
or
add
and
sub
add
or
add
push
adc
add
mov
es
jnp
add
add
add
add
add
jnp
add
add
cmc
add
or
add
add
add
push
outs
lock
or
add
and
sub
add
or
add
push
adc
add
mov
es
jnp
add
add
add
add
add
jnp
add
add
test
or
pop
outs
test
pop
and
and
inc
add
add
idiv
(bad)
call
pop
outs
test
and
xor
add
(bad)
(bad)
call
pop
sub
adc
add
add
add
or
add
or
add
and
add
add
pop
outs
test
push
and
inc
add
add
idiv
(bad)
call
pop
outs
test
pop
xor
sbb
add
add
(bad)
(bad)
call
pop
sub
adc
add
add
add
or
add
or
mov
outs
lock
or
add
and
adc
outs
test
sbb
sub
inc
add
add
idiv
(bad)
call
pop
sub
adc
add
add
add
or
add
or
add
and
push
adc
sub
add
or
add
push
adc
add
mov
adc
add
or
pop
sub
sub
add
jo
add
call
mov
add
mov
add
and
add
jp
add
add
or
sldt
add
add
add
and
add
pop
jge
add
add
add
xor
add
add
add
add
add
and
add
or
pop
jge
add
add
xchg
sub
add
adc
add
and
add
or
add
add
add
add
add
add
pop
jge
add
add
jnp
add
add
sub
add
and
add
add
add
add
jnp
add
add
and
add
add
pushf
add
add
add
and
add
add
arpl
pushf
add
add
add
and
add
add
adc
pushf
add
add
add
and
add
add
sbb
pushf
sub
add
push
add
add
add
and
add
stc
add
or
add
add
add
sub
add
add
cli
add
or
add
push
add
add
add
push
add
sub
add
sub
add
sub
add
or
add
add
add
add
add
sub
add
add
sub
add
sub
shr
add
sub
push
add
sub
add
sub
add
or
add
add
add
add
add
push
add
sub
add
add
sub
rol
add
add
add
add
push
add
add
push
add
sub
add
add
sub
add
or
add
add
add
sub
add
add
add
push
add
or
add
sub
add
sub
add
or
add
add
add
add
add
sbb
dec
add
add
add
add
sub
jbe
add
push
sub
add
or
sub
lds
add
sub
add
push
sub
add
push
sub
sub
add
push
sub
push
sub
add
sub
add
add
add
add
sub
xor
add
add
adc
add
jo
jae
add
or
rcr
add
sub
add
or
add
or
jle
add
add
add
add
outs
add
add
cmp
add
jp
add
sbb
add
sub
add
push
cmp
jae
add
or
jae
add
or
jle
add
or
add
jo
adc
add
retf
add
push
or
add
pop
add
or
add
jb
add
jo
adc
add
retf
add
push
or
add
pop
add
or
adc
sub
add
or
pop
adc
sub
add
or
push
push
inc
push
inc
add
add
add
add
test
add
sub
jge
add
push
sub
add
or
sub
add
add
sbb
add
or
imul
add
or
add
add
outs
or
add
or
outs
or
add
sub
adc
pop
outs
or
add
jb
add
jo
or
add
outs
or
push
add
or
add
add
outs
sgdtd
or
jb
add
jo
mov
add
pop
add
or
rol
add
sub
jle
add
pop
outs
adc
add
adc
pop
adc
add
mov
mov
add
add
adc
push
int3
add
push
jae
add
or
add
or
or
add
dec
add
add
add
adc
add
outs
adc
add
or
sub
adc
or
push
add
adc
add
or
sub
adc
adc
pop
sub
add
or
add
or
push
adc
add
adc
sub
add
adc
add
add
push
cmp
push
add
add
add
add
call
adc
add
jo
outs
adc
pop
add
or
rol
add
add
add
or
sub
cs
jb
add
jo
add
jo
sub
add
or
int
add
and
sub
add
push
and
adc
cs
jb
add
jo
add
jo
sub
add
or
int
add
or
sub
jb
add
jo
outs
adc
pop
add
or
rol
add
sub
jo
outs
adc
pop
add
or
rol
add
pop
sub
add
xor
mov
add
xor
add
add
iret
add
push
or
add
add
adc
outs
push
add
or
fisttp
jg
add
add
or
add
add
adc
outs
pop
add
or
or
push
(bad)
add
fimul
adc
sub
add
or
jb
add
jo
sub
add
sub
add
push
pop
outs
or
add
push
outs
sbb
add
outs
or
add
outs
or
add
jb
add
jo
or
add
outs
or
pop
outs
or
add
jb
add
jo
or
add
outs
or
sbb
add
adc
jb
add
jo
inc
add
or
add
add
inc
add
or
push
or
add
jo
inc
add
or
pop
adc
adc
jle
add
add
outs
pop
add
or
or
or
ffree
add
add
add
sub
adc
push
jae
add
or
or
or
or
adc
ja
add
fimul
or
adc
outs
push
add
or
fimul
or
adc
outs
push
add
or
adc
sub
or
or
sbb
add
sub
add
adc
sub
add
push
adc
jle
add
add
adc
sub
add
or
add
add
adc
pop
add
or
adc
push
fimul
or
add
adc
outs
sbb
add
fimul
adc
sub
add
or
adc
adc
fisubr
adc
jo
or
or
add
or
or
or
xchg
add
sub
add
push
adc
push
fiadd
adc
sub
add
add
add
sub
add
sbb
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
cmp
add
sbb
add
or
add
add
add
add
add
dec
add
add
add
add
add
or
add
test
add
test
add
sub
add
and
add
add
add
je
add
xor
add
jb
add
jo
sub
add
sub
add
push
sub
add
jle
add
add
adc
jb
add
jo
sbb
add
sub
add
or
push
sub
push
jb
add
jo
mov
add
pop
add
or
add
or
pop
jae
add
or
outs
push
add
or
or
add
or
imul
and
add
pop
sub
add
or
sub
add
or
push
add
or
outs
and
add
outs
and
add
outs
and
add
or
add
add
xor
sub
add
xor
add
add
add
push
jb
add
jo
lea
add
add
push
push
jle
add
add
push
pop
add
add
sub
add
add
add
sub
add
xor
add
add
add
push
jb
add
jo
lea
add
add
push
push
jle
add
add
push
pop
add
add
sub
add
add
add
sub
add
xor
add
add
add
push
jb
add
jo
lea
add
add
push
push
jle
add
add
push
pop
add
add
sub
add
push
add
add
add
sub
add
mov
jno
push
xchg
les
gs
jnp
icebp
(bad)
jae
mov
shl
dec
mov
minps
pop
bound
and
add
out
out
call
jmp
jg
jb
int3
icebp
repnz
rol
jne
stos
mov
mov
push
cli
jmp
jo
retf
jecxz
xchg
mov
outs
sub
inc
or
mov
jno
xor
xor
dec
mov
call
mov
test
(bad)
call
dec
cs
sti
imul
clc
popa
and
or
push
mov
mov
test
sti
xor
test
rol
mov
aad
dec
dec
jns
mov
jno
xor
ficom
(bad)
push
jae
ja
sbb
je
mov
add
add
sbb
test
ds
cs
je
xchg
in
ret
add
cld
(bad)
fimul
push
mov
pop
jbe
jecxz
xor
xchg
shr
in
add
dec
(bad)
mov
rol
addr16
add
inc
inc
mov
xchg
inc
inc
jo
clc
hlt
sbb
xor
xchg
inc
rol
rcl
add
inc
clc
sub
cdq
jp
ficomp
mov
(bad)
daa
shr
sbb
sti
(bad)
adc
ds
pop
out
or
and
cmp
xchg
mov
sub
sub
or
push
repnz
push
push
cmp
cmps
push
outs
dec
sub
fdivr
(bad)
movs
stos
scas
bound
mov
inc
mov
out
xchg
jmp
cmp
adc
xchg
sub
gs
inc
pusha
ins
ins
out
xor
push
int
retf
loop
cs
icebp
xor
cmps
out
out
fidivr
fisttp
neg
mov
test
dec
and
loope
dec
sub
sub
inc
mov
jg
mov
cmp
pop
mov
push
dec
pop
xchg
call
adc
dec
inc
mov
xchg
push
mov
xor
movs
dec
fisttp
sbb
xchg
lods
jg
and
fdiv
mov
jae
ret
jae
jmp
cmps
sub
mov
(bad)
push
(bad)
mov
fist
pop
gs
dec
ins
inc
mov
call
push
or
(bad)
test
out
movs
xor
xchg
aad
pop
xchg
xor
jmp
push
scas
dec
and
or
call
out
or
pop
test
cmp
(bad)
in
rcr
mov
aaa
rcr
cli
push
jmp
div
outs
jge
fimul
std
cmp
loope
xchg
fist
cmps
or
sub
adc
neg
out
jmp
push
test
imul
data16
push
mov
pop
pushf
call
out
jns
and
pop
or
out
jae
mov
das
gs
test
xchg
xchg
mov
test
sbb
dec
jmp
outs
hlt
pop
dec
cs
aaa
stos
aaa
mov
inc
shl
and
cmp
cmps
pop
mov
xor
lds
idiv
adc
xchg
aaa
aas
jp
test
sbb
mov
xchg
ss
xor
pcmpgtw
test
les
sbb
pop
xor
and
push
xchg
fiadd
aam
sub
clc
push
iret
shl
retf
data16
jle
xor
fisubr
cmp
and
mov
das
idiv
retf
mov
in
daa
mov
retf
out
or
call
outs
inc
push
push
mov
add
dec
cmp
jne
jp
and
xchg
(bad)
push
cmc
fidivr
leave
or
es
call
mov
movs
fimul
mov
divps
pop
addr16
(bad)
push
sub
ficom
ret
mov
add
sbb
es
push
push
inc
hlt
cs
xchg
inc
jns
and
inc
cmc
cmp
js
sbb
mov
fwait
in
fsubr
adc
push
call
push
mov
mul
js
mov
ror
and
pop
stc
sbb
mov
push
outs
jmp
pop
jo
sub
dec
mov
std
dec
adc
in
cld
sub
xor
pop
shl
push
jno
lods
and
cli
fst
mov
aad
xchg
xchg
sbb
mov
stos
cmps
cmovb
(bad)
xchg
xchg
mov
add
cmps
jnp
lea
sub
xchg
sub
aad
jmp
lock
push
cmps
cmps
mov
shl
pop
in
daa
cmps
inc
pusha
(bad)
(bad)
jae
inc
cld
push
mov
fwait
ss
hlt
and
and
jo
push
lods
and
inc
mov
lahf
jp
jne
adc
je
out
jg
das
lods
push
xchg
jne
adc
cwde
xchg
cmp
iret
mov
jmp
adc
and
jl
push
mov
adc
div
repz
pop
retf
jp
sbb
loopne
or
shl
mov
dec
inc
push
ss
xchg
sbb
aad
rol
sub
(bad)
jmp
sub
stos
repz
ins
mov
mov
aas
fadd
mov
push
fsubr
pop
jno
rol
dec
jmp
imul
mov
adc
mov
cmp
stos
push
jmp
inc
xchg
sbb
popf
loop
mov
std
ja
ret
loop
retf
add
data16
jp
jmp
shr
adc
mov
fucomp
lock
pop
pop
pusha
mov
test
dec
hlt
push
dec
dec
cdq
sub
inc
out
jo
out
loope
pop
test
and
mov
stos
dec
lods
je
mov
ret
out
jmp
pop
mov
pop
sub
and
mov
dec
adc
ins
outs
sub
fmul
movs
jmp
(bad)
fwait
pop
ror
test
fxch
int
mov
ss
jmp
xchg
fiadd
gs
les
ins
lods
adc
in
out
sbb
fwait
sbb
ins
and
lods
clc
out
scas
xchg
mov
cmc
adc
daa
rcl
icebp
iret
imul
jl
mov
or
test
push
jb
pop
mov
out
adc
push
sbb
sbb
mov
stos
adc
in
out
dec
rep
aad
mov
shl
xor
cmp
cdq
xchg
fstp
(bad)
cdq
lods
push
inc
fstp
jns
loope
test
fs
retf
in
push
mov
ficom
xor
lahf
add
jnp
jl
movs
mov
repnz
mov
jp
(bad)
sahf
outs
iret
in
pop
add
adc
cmps
fucom
jge
stos
push
jle
mov
sbb
xchg
dec
mov
cdq
jle
ins
jb
xchg
sub
in
scas
jg
es
out
stc
inc
push
std
cmp
cwde
imul
js
retf
jbe
ror
out
call
loope
clc
push
mov
js
mov
add
mov
xor
and
je
stc
gs
retf
dec
jle
cwde
test
fs
cmp
retf
cmp
add
cwde
and
xchg
in
hlt
jmp
mov
pop
cmp
jl
cwde
and
popf
imul
xchg
adc
mov
pop
lds
and
shr
pop
adc
mov
pop
cmp
dec
jnp
fwait
xlat
es
movs
ret
cs
cmp
imul
enter
push
sub
mov
test
jb
mov
jge
stos
sbb
jbe
js
push
sub
mov
std
cmp
cmps
jno
test
pop
pop
jmp
dec
add
std
daa
sub
xor
into
adc
dec
dec
imul
sti
or
cli
mov
mov
js
or
push
jno
pop
sti
aaa
xchg
dec
push
imul
mov
and
jb
pop
out
mov
(bad)
in
or
in
retf
test
div
push
div
stc
out
and
je
add
cmp
push
je
mov
cdq
test
cli
jle
(bad)
outs
out
dec
and
cmps
pop
dec
lock
fcom
dec
test
adc
pop
pop
mov
cli
mov
retf
scas
mov
inc
ds
retf
sub
nop
xor
push
lds
jecxz
dec
xchg
pop
mov
les
add
int3
int3
inc
in
and
and
mov
lahf
cmp
mov
in
mov
mov
fmul
xor
dec
stos
js
ret
aam
in
pop
fs
inc
sub
mov
icebp
out
aas
or
js
das
jnp
div
mov
(bad)
fdivr
cld
push
mov
mov
loope
dec
dec
out
fstp
mov
xor
mov
fwait
push
xor
or
sbb
push
loop
fsub
fucomip
jge
fwait
sbb
aas
or
mov
add
cli
imul
jae
stc
dec
pop
xchg
adc
mov
pop
(bad)
xchg
sti
lea
xor
add
retf
push
ja
mov
iret
lock
and
js
fdiv
popa
adc
shl
sub
mov
les
inc
inc
addr16
out
retf
adc
and
lea
and
mov
daa
dec
mov
jbe
jae
fadd
add
adc
add
xor
mov
loopne
(bad)
xor
stos
mov
adc
in
cmp
in
pusha
mov
dec
imul
stos
pop
test
xchg
fiadd
inc
nop
(bad)
jmp
or
iret
fisubr
pop
jp
retf
mov
out
push
add
daa
adc
fdivr
lock
mov
lods
ds
xchg
bound
xor
or
dec
dec
inc
js
and
outs
imul
pop
int3
xlat
call
cwde
neg
test
xor
inc
sub
les
ds
rcr
adc
popa
xchg
inc
cs
shl
lahf
adc
add
jnp
sbb
mov
and
add
lea
enter
add
ins
push
in
sbb
fucom
pusha
push
xor
pop
fld
sbb
and
jle
add
jbe
xor
enter
(bad)
add
iret
adc
stc
repz
inc
jl
ja
dec
mov
shl
pop
dec
jg
lahf
rcl
jae
or
std
sub
mov
and
test
or
fisttp
loopne
(bad)
je
iret
aam
push
test
xchg
nop
in
or
jnp
inc
out
push
pop
lods
or
mov
sub
inc
or
push
out
test
es
pop
jecxz
call
add
xchg
out
push
(bad)
das
cmc
dec
adc
jge
jmp
adc
and
mov
or
inc
push
and
ret
fwait
into
jmp
cmc
jmp
mov
imul
push
scas
sub
cmp
in
call
stos
loope
sub
pop
sar
sub
test
bt
jnp
popf
adc
shr
jl
cmps
cwde
pop
sbb
jmp
ror
add
or
jae
daa
fs
xor
pop
cmps
mov
ds
clc
mov
ror
bound
pop
retf
jb
out
shl
inc
cmps
push
sbb
hlt
sti
cmp
jbe
(bad)
retf
fdiv
not
dec
lods
xor
mov
jbe
dec
out
(bad)
cli
loope
jp
inc
arpl
repnz
in
xor
jo
aam
(bad)
jbe
dec
jecxz
dec
inc
xor
movs
cmc
pop
inc
test
les
xchg
inc
mov
jle
out
popa
add
gs
add
loop
and
pusha
pop
aas
cmp
mov
add
and
lods
inc
push
repz
jp
and
dec
jbe
add
pop
xor
or
cs
cli
xchg
pop
mov
gs
fstp
nop
sbb
cmp
xchg
repnz
push
rcr
mov
or
or
add
or
mov
ds
xor
sub
xchg
xlat
addr16
dec
ss
out
mov
inc
inc
mov
ins
push
pmuludq
add
cmp
adc
xchg
imul
and
retf
xchg
lea
call
adc
mov
and
arpl
loope
sbb
jmp
fisttp
mov
loop
jae
stos
in
and
xchg
fistp
mov
push
adc
fwait
retf
daa
frstor
jno
arpl
shl
je
(bad)
scas
sbb
stos
sub
ror
cli
inc
nop
enter
xchg
cmp
imul
sbb
dec
mov
lahf
or
add
imul
adc
jmp
out
fs
mov
sbb
jl
add
and
or
adc
retf
pusha
out
xor
call
mov
sti
push
mov
dec
push
mov
cmp
sub
xchg
push
mov
mov
mov
jg
and
scas
sub
icebp
adc
sub
mov
int3
popf
lea
fdivr
fwait
adc
nop
jmp
sbb
dec
dec
xchg
dec
xchg
inc
sub
jg
and
mov
sbb
rcl
push
pop
scas
pop
xchg
add
fcomp
rol
pop
inc
cli
jecxz
aas
add
lahf
test
xor
mov
out
jecxz
mov
jo
loope
mov
dec
push
mov
xlat
fs
pop
test
stc
cli
cmp
sbb
sti
pushf
outs
dec
mov
xor
and
adc
inc
aaa
mov
sbb
movs
sbb
xor
add
popf
sbb
hlt
sti
addr16
outs
mov
add
pop
call
mov
aaa
jmp
jle
mov
inc
mov
sbb
or
repz
cmps
ss
sub
xlat
jg
pop
imul
ins
mov
dec
mov
push
outs
inc
xchg
out
daa
pop
cmp
sbb
dec
imul
sti
cmp
dec
mov
test
jmp
test
mov
mov
rcl
sar
lea
cmps
mov
jne
jbe
and
test
test
pushf
sar
imul
dec
ret
dec
fimul
cwde
loope
retf
enter
scas
sub
dec
sbb
sti
and
pop
jmp
push
ins
hlt
cs
pop
int
cli
jmp
xchg
cmp
sbb
cmp
and
cmc
in
cmp
lock
sub
enter
lods
ds
xchg
xor
inc
rcr
stc
shr
movs
das
push
outs
out
jno
dec
mov
and
sub
mov
sub
mov
jo
push
cmp
dec
jns
shr
mov
xchg
sar
mov
adc
cmps
add
fsub
repz
shl
sar
repz
mov
call
dec
adc
sub
jbe
repz
arpl
add
repz
mov
add
sub
inc
call
mov
hlt
xchg
addr16
adc
in
mov
xor
fsub
and
les
mov
xor
les
addr16
cld
(bad)
jle
fistp
popf
popf
cdq
popf
(bad)
xchg
or
and
loop
call
ds
bound
stos
out
and
(bad)
call
std
or
cmps
sti
hlt
sbb
test
or
mov
pop
mov
pop
mov
repz
push
(bad)
(bad)
fld
pop
movs
and
in
push
je
jmp
int3
sub
inc
sbb
xchg
jecxz
push
sti
es
inc
ret
xchg
or
retf
push
aaa
inc
mov
push
test
lock
xchg
pushf
dec
adc
call
call
add
inc
imul
loopne
and
movs
pop
arpl
call
adc
mov
hlt
lods
push
cwde
(bad)
fild
jbe
mov
adc
or
shl
mov
add
adc
mov
jbe
rcl
pop
cmp
call
sbb
das
and
lods
inc
add
add
and
out
fistp
rcr
inc
lock
addr16
mov
cmp
push
out
inc
lds
loope
add
cs
push
fcom
shl
inc
fs
jp
loopne
int
test
lds
out
and
cld
sbb
sub
(bad)
push
cmp
mov
cs
dec
rcl
imul
popf
xor
jmp
jo
lock
movs
add
stos
add
adc
mov
mov
mov
sbb
in
sbb
push
or
mov
loop
dec
js
or
or
pop
inc
xor
inc
xchg
xchg
push
jle
enter
pop
fsubr
inc
mov
mov
adc
jle
push
stos
pop
(bad)
push
pop
daa
pop
mov
imul
dec
mov
dec
or
mov
mov
test
loop
xor
pop
lods
inc
adc
arpl
mov
add
xchg
xchg
call
pusha
push
xor
in
dec
loope
ret
mov
iret
xchg
enter
jae
dec
cmp
inc
adc
shr
pop
test
dec
inc
adc
push
ss
addr16
cmp
lahf
push
mov
bound
shr
bound
mov
or
dec
cmp
sub
lds
pushf
sbb
frstor
std
xor
loope
cmp
es
cmp
adc
test
les
icebp
mov
icebp
mov
icebp
jl
lock
icebp
sub
push
or
xlat
adc
cmps
test
(bad)
repz
ret
(bad)
repz
ret
icebp
add
push
dec
mov
jle
push
shr
mov
mov
addr16
cs
popa
xchg
in
mov
daa
pop
add
add
js
fst
(bad)
dec
push
sbb
push
mov
inc
adc
sahf
repz
or
les
push
ret
les
push
ret
les
push
ret
les
push
ret
lahf
in
mov
cmp
repz
or
clc
loope
into
mov
sub
popa
pushf
sbb
add
adc
mov
jp
pop
sbb
add
xchg
mov
js
push
fdiv
enter
lods
pop
arpl
stos
call
mov
cmp
mov
repz
gs
test
push
dec
cs
inc
pop
fcomp
mov
lods
add
out
pcmpgtw
xchg
lds
jo
jo
cmp
add
mov
shl
xor
lock
adc
adc
out
pop
mov
xchg
stos
mov
and
xor
xchg
sbb
xchg
pop
fcom
mov
push
mov
imul
sub
jno
adc
xchg
adc
mov
mov
add
mov
jns
cmp
(bad)
mov
lods
inc
adc
xchg
xchg
cmp
push
outs
cmp
push
sbb
std
bound
inc
or
push
bound
sar
test
rcr
xor
push
pop
(bad)
pop
lods
sbb
add
(bad)
mov
inc
push
push
clc
mov
inc
or
es
xor
unpcklps
xor
pop
mov
mov
push
pop
gs
imul
xor
or
les
cwde
or
lock
stos
add
lahf
cs
mov
fimul
or
inc
push
mov
pop
mov
xchg
ss
jno
adc
fidivr
inc
mov
xchg
pop
int
test
mov
jmp
xor
cmp
mov
das
inc
es
xor
test
inc
inc
mov
push
sbb
(bad)
pop
pop
jmp
mov
mov
jo
enter
inc
add
mov
movs
sbb
mov
or
push
or
dec
sti
xchg
mov
jl
sub
add
xchg
mov
push
stos
cs
or
cmp
(bad)
fisubr
push
sbb
dec
inc
out
sbb
xor
jae
cdq
cmp
cdq
cmps
xor
div
xchg
sbb
nop
cmp
jp
(bad)
out
xor
xchg
and
in
jmp
out
or
inc
xor
inc
push
les
sbb
xor
dec
pushf
test
mov
jge
jp
sti
call
sub
pop
dec
cmp
pop
push
mov
stc
inc
dec
mov
fild
daa
stc
dec
mov
repnz
gs
jb
inc
stc
and
xchg
scas
cmp
cmc
push
repnz
and
in
cmp
mov
inc
repnz
pop
and
inc
mov
cmc
loopne
cwde
not
or
in
loop
dec
test
cmp
sub
add
je
fs
and
jo
inc
cli
mov
sub
repz
movs
pop
daa
sti
inc
cdq
test
push
mov
mov
ins
push
jmp
mov
sub
mov
xor
repz
dec
je
pop
push
outs
push
xor
adc
cmp
xor
inc
sbb
dec
sbb
sbb
cld
xchg
xor
mov
pop
stos
push
add
sub
xchg
shr
and
adc
xor
dec
sub
xchg
fwait
in
stos
arpl
test
dec
xchg
pop
inc
adc
mov
xchg
lea
ins
fimul
and
jno
inc
popf
jae
stc
jmp
jg
or
lods
push
in
push
sbb
mov
mov
mov
test
das
fimul
dec
mov
jo
outs
bound
pop
fwait
xor
jge
pushf
cmp
push
inc
mov
sahf
push
fadd
arpl
daa
push
add
pop
or
jecxz
add
cmp
movs
mov
dec
gs
pop
pop
and
dec
test
or
dec
aad
push
(bad)
fcom
xchg
lods
inc
gs
inc
dec
dec
(bad)
mov
(bad)
bound
push
cmp
sub
jmp
outs
and
repnz
out
rol
add
ins
mov
or
cmp
loope
push
jns
movs
mov
xchg
int
sbb
adc
push
adc
scas
fadd
push
push
and
or
pop
mov
movs
add
stc
add
jb
push
sub
push
adc
sub
inc
push
cmps
mov
lds
cmp
fs
fwait
loope
jle
xor
ss
push
sub
dec
pop
mov
and
(bad)
push
es
bswap
mov
sub
gs
xchg
ror
hlt
adc
add
push
inc
iret
loope
repz
push
data16
sysenter
or
repz
xor
dec
mov
xor
sbb
cmp
aaa
jb
ret
adc
int
ret
sbb
sbb
pop
or
into
pusha
leave
jmp
outs
shr
ins
sbb
(bad)
inc
inc
repnz
mov
push
mov
push
jp
(bad)
(bad)
or
out
ss
imul
inc
outs
adc
addr16
or
mov
cli
repz
jecxz
push
add
cld
dec
add
ror
jl
xchg
add
jg
lahf
ins
push
push
iret
cmp
loopne
push
adc
or
movs
cmp
lock
sahf
lea
pusha
out
cmps
imul
xchg
inc
aas
cwde
lods
xchg
and
dec
es
fmulp
xor
cli
dec
mov
pop
imul
and
pop
out
adc
ror
push
mov
rol
arpl
loop
aad
add
pop
(bad)
movs
(bad)
movs
xor
and
push
xchg
adc
push
xor
cmp
push
inc
and
scas
push
cwde
add
movs
and
dec
loopne
test
or
mov
cs
nop
or
inc
lea
mov
jge
and
push
sub
push
pushf
jmp
add
fcom
in
xor
xchg
js
xor
in
int3
(bad)
sbb
ja
jo
sub
mov
mov
ss
ins
rcl
iret
add
dec
cmps
push
inc
sbb
mov
cdq
xor
lahf
or
and
sbb
add
pop
inc
movs
cmp
fcmovnb
jecxz
retf
pop
add
test
rcl
(bad)
mov
xchg
dec
and
aas
lods
jnp
std
pop
push
jmp
stos
push
bound
sbb
inc
dec
lods
push
inc
rcl
sahf
imul
mov
or
fisttp
xchg
icebp
jo
add
or
test
adc
fld
sbb
int3
jp
sti
push
(bad)
into
gs
sub
fild
inc
inc
(bad)
adc
sub
push
adc
push
retf
mov
xchg
aam
adc
adc
dec
test
pop
fs
and
fisub
mov
outs
adc
sbb
xchg
add
leave
inc
daa
pusha
xchg
pop
outs
retf
add
push
xlat
ins
cmps
hlt
dec
dec
stos
push
fadd
inc
or
inc
rcl
xchg
iret
cli
adc
dec
mov
lods
icebp
add
cmp
imul
nop
shr
jne
xchg
xor
lds
jo
mov
retf
jno
in
inc
sbb
rcr
dec
aam
retf
mov
cmp
xchg
sbb
fcmovnb
dec
scas
mov
pop
pop
gs
js
inc
jo
cmp
fucom
shl
cmp
push
ss
mov
sar
sub
mov
fst
sar
sub
inc
mov
and
ror
mov
mov
pop
add
xchg
or
push
dec
inc
shr
push
nop
pop
adc
add
(bad)
stc
mov
adc
xor
and
sub
stc
cld
pop
mov
sub
pop
repz
lock
inc
push
xlat
mov
xchg
add
pop
pusha
and
mov
xchg
cmp
mov
adc
ror
sbb
sbb
inc
cld
sti
jnp
stc
xor
sub
mov
mov
mov
inc
fdecstp
cmp
clc
or
pop
mov
mov
cmp
(bad)
mov
sub
inc
pop
out
lock
xor
test
sbb
inc
jb
adc
sub
mov
xchg
(bad)
stos
lds
pusha
jmp
inc
ror
cwde
sub
inc
pop
add
jmp
in
jle
adc
(bad)
add
out
mov
fld
hlt
sbb
lods
xlat
xor
test
test
or
bound
add
sbb
inc
cli
repz
int
test
jl
dec
push
ret
jle
movs
pop
out
dec
lods
push
ret
out
(bad)
mov
inc
jo
and
inc
lea
and
pop
jle
jnp
call
push
xchg
out
add
movs
mov
mov
xor
or
add
adc
mov
fcomp
pusha
rcl
int
outs
mov
rcl
mov
pop
in
push
mov
loope
cmp
in
xchg
aas
push
test
bound
shl
xchg
add
in
add
mov
popf
pop
adc
outs
test
fldenv
call
jnp
lods
aaa
add
jl
inc
push
sti
and
pop
or
adc
jl
add
sbb
and
or
mov
(bad)
rcl
cmp
add
inc
push
retf
sti
arpl
pop
push
xchg
add
test
and
sbb
xor
and
ret
sub
mov
in
add
sbb
xchg
mov
repnz
mov
inc
pusha
adc
dec
sbb
push
test
add
mov
aad
push
xchg
sbb
sub
jns
pop
jbe
gs
jne
sub
out
sbb
mov
inc
push
adc
inc
sbb
inc
add
jl
pop
jnp
push
cmp
mov
dec
push
icebp
cmps
inc
in
mov
jb
or
test
and
enter
mov
and
pop
lods
jle
mov
lock
mov
arpl
lods
xor
mov
(bad)
(bad)
out
adc
loop
xor
mov
sbb
mov
aaa
adc
xor
inc
cdq
adc
bound
and
fsubr
popf
stos
or
inc
pusha
idiv
push
inc
dec
mov
popa
fiadd
ins
cmps
push
cmp
lea
jbe
push
push
mov
movs
addr16
sub
lock
lds
push
ds
and
into
mov
inc
add
push
cdq
leave
ffreep
(bad)
sub
imul
push
ret
js
js
sbb
sbb
adc
xor
add
and
shl
sbb
push
lds
push
dec
mov
push
push
call
cmp
(bad)
dec
and
rol
gs
inc
mov
or
jmp
fistp
add
xchg
loope
pop
xchg
push
aad
inc
jl
aas
mov
pop
je
jo
xor
xor
mov
add
xchg
xchg
outs
sub
sbb
cwde
mov
dec
mov
push
ds
dec
fisttp
sbb
dec
jns
push
out
inc
pop
or
rcl
cmc
jb
pop
xchg
sub
imul
cmp
retf
xchg
jb
mov
ins
jp
jmp
inc
jge
add
cmp
push
jo
pop
mov
(bad)
jmp
inc
mov
jns
jo
in
ins
out
xor
jge
imul
jne
shl
sub
lahf
movs
out
sub
mov
cld
cmp
pop
aas
and
dec
or
sub
(bad)
in
cmp
es
adc
dec
ins
mov
mov
fidiv
add
dec
add
mov
push
jb
repnz
mov
and
jbe
dec
mov
inc
jle
mov
out
pop
pop
ja
pop
dec
jg
dec
jg
and
sub
out
xor
dec
add
sbb
fistp
daa
and
push
cmp
adc
sbb
aaa
jne
rcl
and
sar
ror
inc
repnz
stos
cmp
pushf
fsub
cmp
call
adc
pushf
loopne
xchg
xchg
in
pop
xchg
mov
cmp
outs
cmps
mov
shl
sbb
or
mov
int
es
(bad)
clc
mov
or
jge
lods
nop
int3
adc
or
mov
push
xor
call
adc
clc
sbb
(bad)
shl
enter
dec
out
add
mov
xchg
cmp
add
sub
sbb
jbe
xchg
je
popa
push
jmp
and
sub
xchg
mov
inc
bound
dec
pop
jno
nop
hlt
adc
pop
xor
pop
dec
pushf
sub
mov
in
mov
push
(bad)
pop
les
sbb
leave
mov
add
adc
iret
jne
test
xor
cmp
jle
cmp
popf
and
jns
ret
cmps
iret
jp
sbb
jp
mov
cmp
dec
jp
fisttp
(bad)
dec
cmps
stos
xchg
shr
or
inc
jb
out
arpl
push
xor
pop
and
outs
jg
test
add
cmc
sti
(bad)
fild
mul
and
outs
les
sbb
mov
(bad)
sahf
(bad)
call
ja
add
(bad)
aas
cmp
mov
fistp
sub
movs
jp
movs
sub
movs
jns
aad
ret
mov
mov
or
int3
add
or
push
mov
sar
cmc
or
rcl
mov
jns
in
dec
xchg
jne
xchg
rcr
and
rcr
push
add
retf
(bad)
dec
not
mov
cmp
loopne
xchg
jb
mov
cmp
sbb
or
xchg
push
mov
cmp
je
adc
les
push
mov
sbb
out
mov
and
les
cmp
sbb
gs
ja
arpl
or
sbb
jmp
aad
lods
es
test
cmp
pop
or
dec
daa
stos
jae
xchg
adc
popf
xchg
das
push
mov
stos
or
fist
adc
xchg
add
inc
mov
stc
or
(bad)
das
ror
sbb
enter
test
hlt
adc
cmp
int
stos
cmp
and
inc
call
xor
mov
popf
xchg
push
lds
push
push
xor
retf
mov
retf
inc
outs
imul
ja
push
ins
(bad)
in
ror
sbb
add
cld
call
adc
inc
sbb
inc
jl
pop
loop
retf
out
push
and
push
or
sbb
sti
xor
ja
pop
gs
cwde
jmp
int3
scas
popf
mov
stc
js
das
mov
jo
aaa
scas
sub
mov
xlat
mov
pop
or
addr16
jp
sbb
pop
addr16
enter
pop
fstp
into
and
(bad)
jle
cmps
retf
xor
loop
addr16
sub
mov
(bad)
loop
add
dec
js
xor
mov
or
jb
push
mov
pop
dec
div
retf
ror
jnp
xor
mov
pop
or
mov
dec
cmp
enter
icebp
les
test
aam
scas
cdq
adc
dec
mov
push
or
std
adc
mov
int
inc
dec
fs
int3
ja
mov
imul
mov
xchg
push
popf
and
sbb
adc
sbb
int3
sbb
and
xor
int3
sub
push
jge
lea
or
pushf
push
mov
and
xchg
fst
ja
xchg
sbb
pop
mov
xchg
movs
xchg
imul
adc
xchg
sub
mov
mov
pop
inc
les
xchg
adc
mov
fdiv
daa
jl
cmc
sub
mov
jne
inc
or
cmp
call
addr16
add
mov
leave
sbb
aad
ret
or
lock
push
pop
cmps
sub
mov
sbb
sar
fs
xlat
loop
outs
or
shl
mov
inc
(bad)
jne
inc
(bad)
ja
cmc
xor
jmp
into
imul
push
call
aaa
add
cmp
cmp
mov
movs
out
mul
sahf
div
sub
mov
cwde
jnp
cmc
adc
inc
arpl
ss
aas
adc
mov
scas
int
dec
xchg
sub
rcr
js
jbe
fs
inc
test
inc
jmp
sar
sbb
sbb
ins
(bad)
ret
mov
sbb
rcl
pusha
loop
cld
loope
sbb
xchg
(bad)
das
mov
xlat
shr
sbb
xor
inc
cwde
adc
imul
add
jo
out
fs
xchg
movs
sahf
sub
scas
das
lock
ret
xchg
scas
and
mov
rcl
inc
lahf
adc
sbb
inc
cwde
or
xchg
sub
mov
ret
jg
or
add
gs
adc
sbb
mov
pushw
out
mov
fld
jae
mov
add
shl
fwait
loopne
pop
popa
pop
ja
imul
mov
jns
mov
loopne
sbb
mov
(bad)
mov
and
adc
pop
inc
add
cld
cmp
xor
adc
add
xchg
cmp
outs
push
sub
call
mov
xchg
jle
add
push
mov
ins
fxch
jne
xor
(bad)
mov
in
dec
(bad)
pop
fist
aaa
mov
sbb
out
mov
mov
ror
outs
sti
xor
xchg
in
inc
adc
bound
lds
or
push
repz
jmp
es
out
pop
in
scas
sub
test
lahf
xor
jmp
les
sub
(bad)
cmps
bound
lock
adc
jp
jno
pop
mov
mov
neg
pushf
mov
movs
cdq
sub
shl
sbb
cdq
mov
sub
movs
add
jb
mov
movs
or
lock
inc
adc
inc
jmp
stc
or
push
cld
push
sbb
jmp
lock
bnd
fbld
(bad)
sbb
sar
(bad)
mov
mov
push
outs
sbb
pop
jecxz
jbe
retf
xchg
std
addr16
or
mov
cmp
or
inc
add
inc
mov
enter
loopne
test
enter
mov
push
jmp
clc
xor
loopne
or
scas
and
pop
xchg
cmp
popw
pop
pop
inc
test
inc
dec
pop
add
push
xor
adc
add
cs
nop
je
jb
aam
sub
xor
pop
inc
mov
lahf
jecxz
cmp
xor
add
icebp
cdq
jle
xchg
repz
ja
dec
xchg
mov
or
aaa
fwait
leave
xlat
test
dec
call
fsub
xor
add
pop
mov
int3
sar
lock
mov
cld
rcl
mov
movs
cld
add
mov
sub
hlt
in
sub
jp
sub
mov
loopne
into
mov
jl
sbb
ror
push
loope
gs
push
xchg
stos
(bad)
inc
in
sbb
jle
pop
mov
xor
jo
inc
adc
adc
jns
sbb
add
fs
test
push
jp
dec
mov
cmp
out
jno
jmp
sar
mov
stos
pop
in
pop
sbb
movs
xchg
ret
inc
icebp
sbb
les
loop
cmps
dec
ret
fistp
dec
sar
sub
rcr
cmp
inc
cmp
push
add
clc
rcl
loopne
movs
in
jae
rcr
dec
test
push
popf
hlt
mov
mov
out
outs
adc
or
std
push
mov
sti
and
daa
or
loope
ret
pop
(bad)
cmp
mov
sti
mov
jl
mov
jo
jmp
and
pop
jmp
xchg
add
xchg
xchg
ja
or
push
xor
out
jmp
sub
pusha
push
push
inc
ins
in
push
rcr
sbb
mov
das
jmp
loopne
ret
mov
mov
sbb
inc
dec
dec
jmp
es
ror
les
jne
sub
or
add
movs
stos
addr16
data16
retf
push
outs
pop
push
xchg
clc
imul
inc
pop
jae
enter
mov
int
ja
test
sub
xchg
icebp
ret
push
mov
icebp
dec
add
in
xchg
sbb
arpl
es
stos
stc
pop
jns
(bad)
pop
sbb
adc
pop
test
retf
pusha
add
popf
and
inc
jb
lea
in
add
sar
xor
mov
add
or
in
nop
cmp
mov
das
mov
gs
fiadd
jae
add
sbb
and
icebp
adc
cld
push
jmp
icebp
add
inc
mov
js
enter
arpl
rol
add
mov
sbb
out
xor
lods
(bad)
adc
sub
loop
clc
shl
mov
ret
in
add
call
test
cmp
pop
out
(bad)
xlat
(bad)
sbb
mov
outs
xor
sahf
jl
movs
push
(bad)
push
lods
push
int
inc
out
dec
pop
test
xchg
xchg
jle
addr16
retf
or
loopne
mov
ret
outs
push
xor
clc
test
cli
ds
jp
sub
adc
jae
cld
mov
dec
fcmovnb
call
mov
push
push
xor
adc
ss
jecxz
jo
mov
neg
adc
inc
stc
and
sub
out
iret
sbb
sbb
inc
add
dec
xor
pop
rcl
(bad)
outs
mov
mov
jne
pop
hlt
and
pop
xchg
aas
jo
add
neg
xchg
jb
push
(bad)
(bad)
or
div
aas
mov
dec
aam
sub
sti
daa
out
cmp
adc
mov
cmp
clc
mov
popa
sahf
mov
sti
sti
inc
adc
and
fcmovne
dec
mov
add
into
mov
push
dec
repnz
fs
jp
xchg
les
bound
outs
xor
add
xor
add
out
leave
dec
xchg
inc
mov
cmp
push
add
ror
jmp
cmps
fs
cdq
in
mov
or
lods
cmps
int3
rcr
sub
or
ins
inc
sahf
clc
push
xchg
pop
outs
or
daa
mov
in
pop
and
in
call
mov
and
add
xchg
loopne
jnp
and
arpl
cdq
in
lods
xlat
add
xchg
push
stc
dec
xor
or
mov
lods
xchg
popa
mov
pop
popa
cdq
sub
pop
cmp
cwde
sub
ror
ss
cdq
nop
sbb
cmc
sub
xchg
shl
push
stos
push
fdiv
ret
mov
sub
in
sbb
ss
xlat
aaa
cwde
sbb
or
or
shr
mov
int
sbb
sbb
jecxz
adc
push
pop
fndisi(8087
mov
repnz
shr
loope
xor
mov
mov
push
shl
add
movs
test
stos
test
clc
xchg
push
inc
push
repz
outs
adc
or
out
ss
xor
icebp
sub
hlt
mov
scas
pop
retf
jg
mov
ins
ins
xchg
xor
fwait
push
out
ins
in
ficom
sub
outs
ds
cdq
cli
xor
icebp
daa
sbb
pop
(bad)
push
adc
loopne
push
sbb
push
fistp
mov
daa
ins
mov
into
dec
and
jae
sbb
cli
push
jno
jno
push
dec
xchg
gs
imul
aas
jae
ins
repz
jle
fist
mov
scas
xchg
shl
fxch
push
sbb
cmps
cmp
cli
mov
pop
fld
push
push
jne
sti
outs
aaa
int
jle
jns
dec
jge
and
retf
pop
(bad)
jae
cmp
rcr
sbb
mov
sahf
nop
mov
xchg
pop
pop
mov
dec
std
push
das
xchg
imul
jg
sti
mov
adc
int3
cmp
sbb
ss
fldcw
lahf
mov
imul
pop
jl
cld
jae
icebp
(bad)
push
jmp
push
xchg
call
shl
iret
xlat
mov
ds
hlt
mov
fisubr
jmp
data16
xor
mov
xchg
loop
push
push
in
cmp
test
scas
mov
cs
jle
jae
mov
(bad)
idiv
in
push
cmp
outs
out
mov
stos
repz
call
retf
mov
push
or
push
(bad)
dec
pop
jl
push
repz
test
jp
imul
and
aas
fwait
mov
aam
push
pop
jge
into
fwait
aad
out
jns
sbb
fcom
stc
iret
mov
aas
sbb
sar
mov
jns
lahf
repnz
jge
sbb
ss
sahf
lods
sbb
fstp
fstp
cmp
repz
retf
daa
pop
mov
cli
jmp
test
jg
jecxz
jge
push
ficomp
jbe
scas
xor
(bad)
pop
cmps
fistp
test
fnsave
cmps
gs
xchg
push
xchg
sub
call
mov
cmps
jne
mov
mov
push
jge
and
outs
dec
sub
mov
lock
jae
mov
test
cmp
xor
jle
arpl
nop
imul
div
nop
(bad)
out
out
ins
cwde
(bad)
dec
(bad)
cli
daa
das
cmp
push
out
test
mov
mov
out
dec
fidivr
mov
mov
repz
ins
jge
or
pop
out
cs
xchg
cmp
aas
out
jg
mov
loopne
stos
or
inc
jl
into
mov
push
test
dec
dec
jbe
nop
pop
cmc
sar
mov
xchg
iret
aaa
inc
jle
cmp
icebp
jl
fidiv
xchg
cmp
cmps
iret
(bad)
loopne
out
aas
xchg
retf
mov
cli
sub
inc
movs
pop
mov
daa
dec
cmps
push
ins
(bad)
mov
fneni(8087
movs
pop
jmp
xchg
movs
iret
ror
jmp
ja
scas
aad
push
loop
pop
dec
cmp
stc
(bad)
jmp
sti
ror
ss
mov
aam
stos
arpl
sub
push
bnd
mov
sbb
xlat
cmp
jb
in
dec
mov
pop
into
pop
jae
mov
sti
loop
jns
cld
xlat
jne
jl
jecxz
cmp
mov
sub
pop
(bad)
pop
repz
jnp
loopne
pop
aad
jns
push
ret
xchg
das
add
scas
xor
mov
pop
mov
test
daa
inc
pop
lods
sbb
mov
fnstcw
lahf
outs
retf
or
and
inc
mov
push
ss
mov
fstp
addr16
cmp
jp
(bad)
inc
faddp
in
dec
jb
(bad)
mov
jle
aad
mov
xor
iret
test
pop
jae
shl
in
(bad)
xor
jmp
cmp
jle
lahf
push
in
mov
scas
dec
(bad)
out
hlt
in
fnstenv
sbb
lods
pop
shr
jg
in
mov
mov
cld
push
push
xchg
(bad)
cs
imul
scas
cdq
fild
jge
in
enter
or
push
shr
test
jne
mov
ins
mov
int3
mov
adc
inc
aas
mov
mov
sbb
jle
ins
out
and
mov
sbb
call
jg
jae
(bad)
out
(bad)
idiv
mov
in
mov
mov
retf
pop
movq
push
cmc
push
scas
popa
sti
mov
sbb
imul
pop
fldenv
cmp
stc
dec
repnz
aas
fstp
imul
pop
mov
repz
cmp
xchg
mov
clc
xchg
(bad)
pop
scas
(bad)
push
in
outs
sbb
in
jmp
stc
and
fiadd
push
fist
cmp
in
inc
int
or
mov
jmp
cmp
mov
ret
aad
fdivp
(bad)
cmp
push
dec
cmps
or
sub
scas
jmp
jg
hlt
stos
mov
ds
or
push
retf
mov
aam
shl
cmc
jp
int
xchg
aam
fcmovne
stc
das
das
(bad)
xor
and
fmul
shr
stc
add
fwait
xchg
cs
stc
loop
int
mov
jl
call
or
std
jo
lahf
dec
aaa
scas
pushf
mov
mov
mov
std
hlt
lahf
cmp
ss
mov
scas
jg
xor
outs
rcl
sbb
inc
jae
loop
test
push
pop
mov
jnp
neg
mov
arpl
(bad)
fcmovbe
repnz
stos
lahf
push
dec
mov
les
imul
mov
ins
jmp
sub
outs
cdq
pop
jle
(bad)
jmp
adc
jge
in
sbb
add
leave
cdq
jp
cmp
gs
add
push
loope
add
(bad)
rcl
and
cmp
fucomp
(bad)
das
sbb
outs
stos
sti
in
bound
and
mov
imul
jne
ins
(bad)
into
aas
push
mov
sub
push
lock
stos
out
shr
retf
imul
(bad)
fst
fadd
mov
cmps
pop
imul
out
add
stc
repnz
or
mov
lahf
add
cmc
idiv
lods
cmp
popf
mov
jl
fwait
sbb
scas
call
fld
ss
rcl
xlat
mov
stc
lahf
push
scas
iret
pop
shr
neg
sbb
mov
lods
lods
sahf
and
inc
fdiv
xor
enter
jmp
pop
aaa
cli
jge
into
stos
fdivp
pop
(bad)
or
mov
std
in
jge
or
jns
int3
outs
xor
retf
int3
(bad)
loope
push
xchg
jp
pop
mov
cs
push
addr16
mov
das
dec
out
fbld
mov
push
ja
ins
cli
leave
es
mov
into
imul
in
mov
mov
sti
int
std
bndstx
sbb
sti
xchg
aas
sub
jmp
fist
test
pop
push
inc
cli
push
daa
mov
iret
sub
lods
stc
aam
inc
jnp
fwait
inc
xchg
stos
xchg
sub
(bad)
loopne
fsubr
js
or
mov
pop
arpl
dec
sub
ds
outs
repnz
xchg
or
(bad)
nop
sub
imul
mov
cld
push
push
fistp
fld
pop
(bad)
jmp
fst
jb
fdivr
test
xlat
inc
scas
je
pop
jle
pop
scas
in
push
cmp
(bad)
repnz
lea
es
mov
(bad)
aaa
jg
jecxz
nop
push
cmp
pop
jmp
loope
enter
jge
loope
retf
cmps
pop
fild
scas
jmp
fldenv
repz
(bad)
mov
lea
clc
dec
lods
pop
push
out
cld
sahf
xor
and
jbe
mov
jmp
mov
adc
cdq
out
(bad)
cmp
cmp
shl
mov
cld
out
sar
mov
mov
xor
jl
jge
mov
jae
cmps
xchg
gs
retf
aaa
call
data16
mov
outs
out
sbb
in
mov
cmp
sbb
xor
das
stos
addr16
jbe
jno
dec
imul
(bad)
cmp
inc
and
jge
mov
xchg
in
and
xlat
cdq
arpl
int3
scas
mov
pop
push
sti
cld
hlt
out
scas
das
iret
cs
gs
pop
sbb
push
sbb
std
jle
div
ja
cmp
fidiv
jl
test
in
(bad)
cmc
leave
into
cmps
mov
cwde
das
push
mov
lea
sti
push
call
pop
xlat
int3
in
sbb
xlat
clc
xchg
mov
lods
jne
ret
mov
lock
iret
cli
ja
std
in
jmp
cmp
jge
dec
fwait
(bad)
rcr
pop
jle
clc
lahf
adc
cmps
les
cmc
cld
outs
repnz
fidiv
cmps
idiv
repz
cmp
mov
cmp
(bad)
jge
and
stos
cmc
(bad)
xchg
mov
fld
addr16
out
aam
mov
stos
popf
je
(bad)
dec
hlt
or
mov
mov
int3
repz
loop
repz
dec
aad
fcom
inc
cmps
shrd
cmp
aam
mov
sar
mov
mov
in
mov
mov
lods
retf
sub
and
cmp
fidiv
jbe
sbb
jmp
jnp
pusha
je
pushf
sahf
jns
pusha
std
push
pop
imul
jge
popf
jns
cmp
ret
stos
adc
(bad)
in
aas
hlt
jmp
mov
and
sbb
sub
popf
stos
mov
sub
push
aad
cdq
cmp
aas
imul
out
mov
neg
xchg
adc
xchg
jge
jmp
dec
ds
sbb
sbb
ss
xor
lods
pop
imul
popf
cmp
mov
xchg
sti
inc
lahf
bswap
call
mov
inc
popf
outs
mov
push
xor
es
btc
sbb
ficomp
cmps
pop
ins
js
ins
scas
gs
cld
imul
test
aas
jecxz
mov
in
jge
push
push
push
xlat
idiv
sbb
and
cmp
mov
add
rol
push
sbb
mov
imul
push
arpl
pop
mov
bound
mov
fistp
add
imul
imul
iret
(bad)
fsincos
mov
into
(bad)
pushf
popa
sbb
out
(bad)
jg
sub
pusha
scas
cli
lods
repz
fsqrt
jl
out
jmp
pop
or
data16
in
(bad)
inc
shr
repnz
test
dec
fs
cmps
push
pop
aad
xor
addr16
loope
out
xchg
cs
adc
jmp
xchg
call
xor
xor
imul
in
mov
mov
aas
mov
iret
inc
mov
xor
rcl
and
fscale
in
pushf
push
fistp
sti
vmaxpd
ja
in
xlat
xor
aas
mov
jmp
xlat
repnz
pop
int
sbb
daa
pop
cmp
xor
mov
mov
stos
lahf
jl
js
mov
stos
sar
cmps
call
(bad)
aaa
cmp
mov
pop
mov
push
lahf
cwde
dec
mov
lods
jp
outs
dec
js
sti
jns
push
stos
ror
sahf
jnp
jmp
repz
push
sbb
jnp
shr
sahf
mov
xchg
out
fdiv
jno
(bad)
xor
mov
(bad)
push
jmp
loope
out
cmp
xor
mov
mov
lea
jg
xchg
jae
icebp
stos
scas
std
xchg
push
dec
leave
ins
fdivr
sub
pop
std
dec
pop
mov
xlat
and
ds
fdivrp
dec
xchg
scas
scas
cmp
call
adc
jne
mov
ds
xchg
fdivr
cmp
cmc
push
fnstcw
cmp
and
push
imul
mov
int
(bad)
adc
stos
in
sub
fucom
cdq
cmc
and
mov
leave
and
jl
jecxz
sbb
into
jmp
lea
xchg
call
push
dec
imul
cmp
not
inc
or
cmp
jmp
xor
mov
outs
mov
cmc
jno
mov
dec
retf
xchg
mov
and
cdq
aad
or
xor
dec
jge
fwait
push
jmp
pop
pop
iret
pop
fcomp
inc
dec
scas
mov
dec
stos
fnstenv
aaa
jecxz
sar
ret
out
pop
pop
test
sahf
add
push
and
xchg
dec
jp
jge
out
fiadd
or
mov
loopne
or
jge
mov
outs
imul
ins
ins
xchg
fisttp
addr16
pop
test
jecxz
pop
lahf
inc
pop
(bad)
retf
mov
xor
cmp
imul
ror
lea
xlat
outs
jnp
pop
push
outs
into
aad
mov
or
push
pop
jnp
inc
mov
out
loope
mov
dec
mov
(bad)
test
and
imul
cli
into
(bad)
jle
and
xchg
mov
dec
or
out
clc
xchg
das
mov
(bad)
std
hlt
aam
cdq
push
popf
hlt
mov
stos
cmp
shl
retf
mov
jbe
fsub
aas
ins
stos
jne
scas
(bad)
adc
sbb
pop
outs
push
repz
push
jmp
cld
in
jae
mov
jmp
(bad)
cmp
lea
ret
adc
sbb
hlt
push
jge
cli
rcl
test
adc
jns
in
imul
pop
clc
ret
ret
xor
into
jne
cli
cdq
out
jne
jae
lods
call
pop
in
push
mov
aaa
sahf
mov
shl
(bad)
(bad)
sbb
xchg
imul
jno
jne
enter
sti
test
pusha
out
adc
repnz
int
ret
adc
(bad)
repnz
cmc
xchg
lea
ja
scas
lods
pop
int
mov
mov
xlat
sbb
adc
sbb
pop
jle
sbb
mov
das
jl
jmp
mov
ins
sahf
sbb
cmp
leave
mov
aad
jae
cdq
clc
push
jnp
jmp
rcr
out
jle
call
fs
sahf
(bad)
aam
xchg
dec
outs
pop
xchg
in
aas
cmc
mov
scas
in
mov
mov
neg
daa
jg
xlat
aad
pop
push
fdiv
arpl
fisubr
jmp
mov
cmp
lods
cmp
cs
mov
mov
call
sbb
ins
aam
aad
shl
or
hlt
std
scas
out
inc
and
inc
push
jg
clc
leave
sbb
daa
(bad)
in
push
pop
push
not
pushf
cmc
iret
sub
jmp
mov
push
clc
mov
jecxz
gs
lods
pop
je
hlt
inc
mov
fyl2xp1
mov
into
or
fsubr
mov
fsubp
(bad)
outs
sti
cli
std
data16
mov
into
sub
clc
push
cmp
jns
lock
(bad)
mov
dec
enter
xor
fstp
cmp
jle
inc
(bad)
pop
mov
stos
scas
cld
clc
jmp
jmp
add
(bad)
xor
sbb
pop
jmp
enter
sub
inc
jmp
ins
pop
shr
ds
sti
outs
cli
mov
cmc
nop
fadd
sti
fwait
ret
mov
cmp
mov
and
out
mov
cmps
jecxz
cwde
sbb
pop
jle
stc
test
mov
jae
push
xchg
jo
iret
sub
loopne
aaa
mov
ficomp
dec
mov
iret
arpl
and
inc
mov
aaa
(bad)
and
repnz
jnp
pop
cdq
xor
das
fild
mov
lods
cmc
movs
xor
(bad)
(bad)
outs
push
mov
or
mov
mov
popf
xchg
cwde
jns
jmp
fsubr
fcomp
mov
in
cmp
sbb
frndint
shl
addr16
jae
sahf
sub
add
push
js
mov
mov
popf
ins
mov
retf
std
jp
inc
inc
mov
xchg
mov
popf
stos
mov
xchg
xor
cmp
ss
lea
aas
in
pop
jnp
popa
in
mov
gs
push
inc
in
pop
adc
loope
xor
in
push
mov
mov
mov
in
popf
dec
push
xchg
fcom
int
test
jbe
sti
test
mov
ror
push
out
jmp
js
call
out
push
addr16
inc
int
ds
cmc
cmps
std
xchg
xor
lock
jmp
dec
or
mov
jnp
cmp
dec
popf
jns
icebp
scas
mov
xor
movs
loopne
das
call
push
sahf
inc
retf
out
lods
imul
pop
sahf
push
xor
imul
xchg
test
jne
fisubr
shl
jle
inc
jns
aad
shl
mov
pop
loop
mov
pop
fisubr
or
mov
jb
fwait
mov
cmp
jmp
iret
cmps
sbb
mov
jg
push
ds
ror
stos
xor
mov
lods
(bad)
scas
and
dec
jmp
cli
inc
(bad)
leave
in
cs
lahf
lods
pop
xchg
mov
fs
outs
(bad)
js
out
cld
loopne
xchg
imul
imul
lahf
adc
cmps
jp
idiv
retf
jne
sti
push
popa
inc
(bad)
push
push
cmp
aad
mov
cmp
out
leave
mov
mov
retf
lock
fwait
(bad)
js
ins
xchg
dec
test
scas
cmp
jl
jmp
pop
lods
mov
xchg
mov
(bad)
gs
inc
out
cdq
jbe
mov
mov
mov
cld
lds
cli
mov
adc
jo
sti
and
(bad)
not
sti
push
xchg
aad
leave
stc
js
and
div
mov
aas
pop
es
ds
out
call
jnp
sub
rcr
and
lds
pop
sbb
and
(bad)
mov
mov
xlat
mov
lods
(bad)
ins
dec
ret
xor
iret
jle
push
in
out
stos
(bad)
sti
jo
mov
stos
jecxz
ja
sbb
(bad)
push
stc
pushf
in
pop
ins
push
mov
enter
fstp
push
ins
rcr
pop
aad
xchg
pop
push
xor
dec
ret
pop
ret
(bad)
cmp
sar
shl
pop
outs
(bad)
pop
idiv
shl
scas
aad
mov
xchg
add
mov
mov
cs
xor
push
out
pushf
std
jo
sub
ja
out
into
shrd
nop
daa
mov
cmp
pop
jne
(bad)
xlat
mov
stos
and
cmc
(bad)
loop
test
sbb
clc
repz
outs
and
(bad)
js
imul
or
mov
ins
or
mov
fmul
shl
(bad)
sahf
inc
xchg
icebp
or
push
mov
cdq
sti
test
sti
or
sbb
sahf
(bad)
mov
mov
test
mov
jmp
scas
cld
es
sti
and
pop
inc
mov
pop
imul
in
shl
jno
data16
sbb
xchg
test
and
les
cmp
les
pop
jnp
lahf
fcmovnu
dec
mov
ja
sub
cmp
(bad)
int
xlat
mov
retf
(bad)
xor
fistp
std
in
clc
scas
pop
ins
cwde
mov
cmc
iret
out
(bad)
mov
mov
jg
xchg
mov
jge
xchg
stos
fucomp
fs
mov
pushf
jae
aad
outs
ficomp
fist
inc
pop
xor
jmp
jg
mov
cmc
jmp
push
pop
mov
pop
pop
aas
stc
into
ja
fs
call
xchg
(bad)
fs
scas
stc
jne
lahf
sbb
fdiv
out
cld
xor
pop
pop
pop
dec
dec
iret
fnstcw
mov
push
in
scas
pop
sti
jmp
pop
fidiv
mov
iret
push
(bad)
pop
sti
popa
mov
mov
sub
fwait
call
mov
arpl
aaa
cs
(bad)
jmp
gs
pushf
lahf
mov
sahf
fidivr
cmp
stc
repnz
clc
mov
mov
fild
push
pop
jbe
mov
jmp
fmulp
cmp
pop
xor
scas
xchg
dec
push
imul
mov
popf
pop
imul
sub
into
push
(bad)
out
push
push
jle
aad
mov
cmc
leave
jl
push
movs
jmp
std
mov
addr16
push
aas
in
fwait
idiv
popa
push
lds
(bad)
std
or
push
ficomp
mov
pop
cli
dec
icebp
cmc
or
sbb
out
bnd
jns
out
jmp
data16
push
ins
mov
push
fldcw
pop
movs
mov
repnz
push
call
je
cmp
fidivr
jne
fisubr
shr
int
push
sbb
jmp
std
jmp
popf
retf
xlat
cmc
push
loopne
repz
dec
xor
sar
(bad)
mov
sti
mov
push
mov
cmp
sub
jge
ins
jmp
cmovns
addr16
sbb
or
mov
test
fidivr
aam
and
jg
popf
and
mov
fwait
inc
mov
out
push
ds
mul
sti
fdiv
push
out
sets
cmps
inc
mov
inc
cmps
ds
ror
xchg
or
jge
call
(bad)
mov
xchg
inc
aad
imul
xor
push
pop
fstp
mov
imul
add
das
sbb
popf
cmp
mov
mov
push
jo
mul
cli
jmp
(bad)
hlt
dec
mov
mov
mov
aad
call
jl
add
fsub
xchg
dec
xchg
jl
mov
fcomp
or
push
cdq
sub
test
add
fbld
arpl
cdq
jmp
mov
inc
int
or
xchg
mov
call
mov
mov
in
jae
jmp
add
mov
shr
in
jge
rcl
out
lahf
xor
dec
ss
hlt
rol
jmp
add
jae
mov
inc
sbb
outs
test
les
aaa
adc
xor
ret
repz
adc
es
js
lock
add
icebp
or
or
or
and
inc
arpl
mov
leave
daa
icebp
or
and
out
scas
add
pop
and
aad
imul
adc
or
add
ror
dec
scas
inc
pop
(bad)
mov
popa
or
sub
mov
stos
mov
loop
inc
add
cwde
xchg
call
or
and
mov
sbb
dec
fmul
add
inc
sub
mov
test
loope
ret
retf
gs
(bad)
adc
push
test
and
and
inc
sbb
jmp
div
hlt
and
dec
cmp
test
sub
(bad)
daa
ins
dec
fmul
scas
inc
movlps
and
loope
mov
dec
js
lock
ret
jg
adc
sbb
and
xor
mov
pop
dec
clc
or
popa
ret
ja
or
push
int3
mov
popa
or
xchg
sbb
and
mov
and
sbb
pop
cli
test
or
mov
pop
fld
adc
pop
xchg
and
out
mov
push
sub
xchg
jno
xor
mov
mov
pop
jae
xor
enter
sbb
int3
xchg
adc
lock
shr
mov
unpcklps
mov
shl
sbb
sbb
add
cs
aaa
xchg
ror
and
(bad)
test
fdivr
mov
(bad)
cli
adc
inc
lods
es
in
bound
bound
outs
xchg
and
sub
bound
rcr
bound
mov
es
push
cmp
sti
push
std
cmp
mov
inc
rol
and
xchg
pop
inc
pop
adc
push
cmc
pop
enter
xchg
pop
es
push
cli
cld
scas
pop
push
test
retf
xchg
mov
in
inc
retf
(bad)
fwait
les
xchg
in
mov
or
push
mov
dec
xchg
sbb
cwde
pop
sub
or
nop
in
xchg
out
pop
sar
dec
mov
xor
inc
fsubr
dec
daa
arpl
inc
test
cmps
aam
jl
lock
das
or
sar
mov
out
lods
xchg
pop
sti
xchg
xor
xor
lahf
(bad)
cld
and
mov
mov
xor
and
bound
mov
nop
cwde
mov
mov
mov
mov
xchg
les
sbb
sbb
mov
cwde
mov
(bad)
aam
adc
and
sbb
xchg
les
movs
dec
int3
mov
les
sub
bound
les
int3
xchg
pop
pop
mov
mov
xchg
cwde
pop
mov
mov
adc
adc
dec
lods
inc
bound
les
dec
sub
cwde
inc
bound
push
dec
dec
dec
int3
dec
sub
bound
push
dec
ins
cmp
pop
or
ss
bound
mov
and
push
daa
ss
(bad)
sub
and
pop
bound
dec
(bad)
fadd
mov
jmp
das
inc
iret
dec
dec
call
dec
int
out
xchg
aaa
and
ret
xchg
push
das
fdivr
xchg
mov
out
and
inc
clc
and
test
(bad)
dec
jne
cmp
enter
cmps
xchg
xor
pop
pop
mov
aaa
dec
xor
sub
mov
fbld
fmul
cli
ja
jg
stc
push
xchg
pop
push
pop
inc
xchg
pop
out
adc
out
sbb
stos
ins
xchg
cmp
mov
xchg
adc
adc
lds
stos
xchg
test
mov
jb
push
scas
and
inc
mov
mov
enter
fdivr
xchg
addr16
xchg
std
dec
sahf
mov
cmp
push
mov
fcmove
jo
loope
ret
pop
adc
cmp
test
cli
lea
cmp
mov
push
mov
xor
mov
pusha
push
js
clc
aaa
mov
push
xchg
stc
xchg
iret
std
test
mov
mov
sti
call
test
les
or
sbb
jecxz
push
inc
ins
sub
(bad)
clc
mov
sti
xchg
mov
cmc
xchg
jne
pop
xor
add
test
add
fcmovnb
mov
out
js
cmps
and
add
adc
mov
push
(bad)
and
loopne
push
sub
dec
sub
mov
aad
mov
inc
mov
push
(bad)
test
inc
mov
pop
mov
mov
call
xchg
cwde
dec
push
mov
cmc
inc
push
loopne
jns
data16
mov
test
xor
xchg
push
leave
pop
mov
sbb
adc
inc
popf
push
cmps
dec
int3
cmp
sub
fdiv
jns
out
sbb
mov
test
or
cmp
fadd
stc
sub
pop
inc
and
mov
inc
mov
outs
mov
in
ds
pop
jg
xchg
cwde
(bad)
cmp
mov
add
pusha
cmps
(bad)
fisub
sub
jne
jo
bound
or
mov
mov
test
inc
test
mov
pop
test
or
adc
mov
pop
aam
rcr
scas
cmp
out
jne
push
xor
cwde
xchg
out
xchg
xor
std
loope
inc
test
push
cmp
sub
xchg
test
jae
sbb
push
cmc
pop
xchg
fs
fld
lds
xchg
cdq
(bad)
push
xchg
mov
aad
xchg
fs
mov
stos
ret
sub
mov
mov
push
cmc
pop
xor
sbb
dec
sub
fistp
add
sbb
sahf
cmc
inc
shr
les
xchg
lds
add
push
adc
dec
ins
sub
push
adc
dec
ins
xchg
xlat
or
out
lds
fnsetpm(287
xor
scas
ds
jns
pop
jge
or
mov
fidiv
dec
(bad)
fistp
mov
mov
jmp
movs
fcmovnu
rcr
fmul
fmul
fisttp
mov
sub
arpl
jp
test
sub
sbb
test
cmc
xlat
sub
fsubr
jg
xor
dec
pop
fisttp
cmc
and
leave
mov
leave
test
jo
ret
ror
cmp
jne
rol
aaa
jne
rol
xor
mov
retf
test
scas
jbe
ret
mov
stc
xor
mov
fstp
fnsave
mov
ret
repnz
xor
and
scas
cmp
out
mov
jecxz
in
cmp
pop
pop
pop
mov
rcl
les
jb
pop
cmp
sub
mov
mov
pusha
dec
and
dec
xchg
(bad)
fild
and
shl
shr
xor
jnp
cdq
scas
rcr
or
mov
addr16
imul
pop
sbb
shr
push
xlat
sbb
fmul
add
cmp
push
in
inc
std
adc
stos
sub
das
mov
sub
jb
(bad)
inc
int3
push
mov
fcomp
out
or
jecxz
mov
outs
lods
dec
adc
arpl
pop
jnp
push
les
arpl
dec
outs
ins
adc
lds
xchg
cs
iret
dec
jecxz
fdiv
out
adc
js
jmp
std
scas
jb
movs
js
push
out
ins
push
movs
mov
imul
mov
mov
mov
(bad)
(bad)
enter
scas
lea
push
ret
xchg
sbb
jp
movs
(bad)
mov
mov
outs
in
sub
xchg
cmc
aad
inc
push
sub
xor
jmp
push
adc
sar
dec
push
stos
sti
dec
jge
inc
mov
aaa
pop
sti
ja
jmp
fwait
mov
sub
out
(bad)
push
aas
ret
shr
frstor
inc
pusha
lahf
hlt
les
int
mov
jo
dec
idiv
cmp
or
push
retf
push
push
sub
pop
sub
out
dec
sub
xor
sub
ins
dec
cmp
sbb
gs
repz
push
ret
sbb
in
mov
nop
xchg
in
mov
nop
sub
push
xchg
fidivr
sbb
adc
and
shl
jne
out
mov
xor
(bad)
cli
jnp
xchg
mov
(bad)
int3
cld
and
push
adc
sub
outs
xchg
jl
fdiv
test
push
mov
mov
cmps
lock
ret
inc
mov
into
test
int
dec
nop
cmc
adc
sbb
jns
hlt
adc
jnp
or
dec
lods
add
or
dec
ins
cmp
inc
xchg
mov
in
dec
out
jne
sbb
and
dec
xchg
fdiv
fimul
stc
mov
jnp
inc
idiv
mov
loopne
xchg
cmp
data16
je
shr
push
int3
jmp
pusha
pop
stc
stc
push
cli
mov
stc
paddusw
mov
not
xlat
aad
adc
xchg
push
shr
sub
or
fldcw
sub
fucom
push
ret
jnp
in
mov
cmps
mov
cs
les
mov
mov
out
push
jo
arpl
loopne
leave
test
lods
mov
loope
mov
jp
lahf
push
cdq
and
sub
sub
xchg
jl
inc
dec
or
(bad)
mov
(bad)
xor
jmp
test
cmp
fmul
repz
lods
inc
clc
adc
test
ret
mov
and
mov
ins
repnz
cmc
sbb
jge
test
mov
or
sbb
fsubr
pusha
repz
and
pop
call
rol
leave
int3
cld
push
xor
lea
jmp
cmp
cmps
pushf
ins
mov
fst
loope
pop
ja
rol
xlat
lock
setl
xchg
jo
push
cmp
xor
push
mov
adc
or
or
test
sti
push
jmp
dec
cmps
xchg
pop
xor
out
mov
sub
sub
pop
jbe
cli
cmp
fnstenv
fs
push
data16
imul
adc
dec
(bad)
inc
jbe
inc
cmp
in
es
cmp
in
push
dec
je
ds
xor
leave
mov
aas
sar
leave
jle
inc
dec
push
sub
add
mov
popa
mov
cmp
ror
inc
mov
leave
es
xor
fwait
sub
call
fnstcw
in
or
loope
xchg
sub
popf
in
adc
xor
cmp
push
fstp
jmp
inc
out
fs
jg
test
fmul
into
enter
les
ret
lock
inc
test
imul
je
cld
sti
mov
(bad)
mov
call
push
enter
(bad)
adc
xor
test
mov
xor
leave
mov
out
mov
jb
icebp
aas
aam
loopne
xchg
std
xor
sbb
pop
pop
out
jg
ds
and
stc
scas
rcl
pop
out
int
in
aam
mov
jg
or
stc
sbb
add
add
push
mov
mov
mov
daa
(bad)
cmps
stos
sub
pop
xor
neg
and
push
dec
js
repz
mov
pop
fisttp
jmpw
dec
push
(bad)
jg
sub
push
loope
(bad)
push
(bad)
fidivr
mov
push
cdq
pop
adc
outs
sbb
aas
jle
sub
cmps
cdq
(bad)
iret
loopne
imul
sub
leave
sub
dec
lahf
inc
jb
mov
leave
mov
inc
xor
mov
pop
jmp
leave
adc
(bad)
dec
adc
or
loop
fnstsw
popa
call
xchg
rol
aad
mov
sub
mov
sbb
aaa
mov
aaa
cmp
xchg
add
push
test
mov
icebp
lock
pop
nop
bound
push
fild
dec
mov
imul
or
shr
sti
aad
lds
mov
add
int
repnz
push
call
sbb
ficom
loop
(bad)
jb
pusha
stc
leave
or
sub
pop
xchg
ror
inc
pop
loop
push
clc
repnz
in
test
mov
js
add
mov
std
ficom
ret
pop
and
hlt
pop
mov
fsubr
mov
and
icebp
fild
inc
ret
add
retf
mov
sahf
in
mov
test
(bad)
adc
sti
std
movs
lock
jle
movs
aas
mov
jnp
mov
jp
mov
mov
mov
push
in
jg
cmp
xor
xor
pop
retf
in
pop
stos
cmp
fidivr
int3
jge
pop
movs
fadd
pop
stos
pushf
shl
and
imul
xchg
ret
arpl
pop
mov
jmp
ins
popa
lahf
dec
mov
(bad)
data16
lea
imul
jo
aas
adc
sbb
div
not
jg
pop
ror
sbb
dec
push
test
adc
sub
jne
test
jae
bound
or
call
inc
push
je
test
add
enter
rcr
adc
das
mov
loopne
push
xor
or
es
mov
int
dec
addr16
cwde
pop
sbb
pop
mov
push
stos
or
add
sbb
push
mov
inc
mov
lahf
jae
fisub
mov
cwde
repnz
push
dec
add
push
pop
mov
xchg
aas
sub
aas
sbb
adc
jbe
daa
nop
scas
mov
jp
sub
pop
pop
or
xor
retf
in
lock
inc
push
mov
aad
and
jo
jp
ror
push
or
out
or
add
rep
test
es
dec
push
out
push
xor
test
push
retf
js
lods
out
pushf
dec
gs
mov
sti
outs
loopne
dec
lahf
mov
(bad)
cmp
sbb
in
inc
xor
jecxz
icebp
ret
add
repnz
push
dec
add
loopne
dec
fild
pusha
lods
out
loopne
lahf
loope
xor
push
cwde
dec
cwde
mov
dec
enter
pop
mul
adc
pop
loopne
loopne
mov
neg
pushf
push
fs
addr16
div
nop
int
(bad)
call
int3
mov
push
or
sbb
es
ficomp
or
(bad)
sub
pop
les
inc
pop
cmp
dec
(bad)
jnp
cwde
and
retf
or
inc
xor
inc
jle
sub
or
mov
call
cmp
push
(bad)
jnp
jmp
scas
lock
or
add
pop
std
push
(bad)
imul
lods
(bad)
or
rcl
mov
adc
lock
hlt
mov
push
aad
ds
pop
mov
mov
popa
mov
jmp
jnp
add
xor
cmp
cmp
out
jle
pop
sbb
cmp
jmp
jmp
fnsave
mov
repnz
adc
add
push
add
pop
jg
jns
pop
das
mov
sbb
cld
and
imul
les
mov
jmp
cmp
jle
adc
mov
clc
call
jno
loope
pusha
lea
cmp
out
cs
std
adc
test
adc
ss
imul
movs
je
ret
je
push
cmps
jno
test
add
in
adc
jge
pop
retf
xchg
push
or
mov
inc
fadd
cwde
ss
dec
les
lock
loope
fdivr
cld
xor
mul
out
xchg
test
adc
and
xchg
adc
dec
mov
and
test
sbb
test
test
adc
or
loope
inc
add
popa
cmp
and
lds
and
and
push
popa
pop
ret
test
adc
adc
and
xchg
adc
inc
mov
adc
add
ret
test
adc
and
inc
cmp
pop
dec
mov
push
fs
pop
inc
pop
dec
mov
outs
ret
xchg
test
inc
dec
ins
and
xor
mov
mov
jo
loope
xor
jns
xchg
jo
popa
movs
sub
dec
es
retf
xchg
jo
popa
sbb
and
fld
test
pop
add
and
and
test
mov
shl
jo
popa
sbb
and
fld
pop
mov
sbb
aas
mov
mov
xchg
pop
xchg
jg
jg
xchg
sub
sub
sub
ds
sbb
pushf
push
pop
push
aam
mov
jbe
push
push
xchg
sub
push
cs
jle
cmp
mov
push
int
lods
push
std
mov
cmp
jmp
ins
cmc
and
pop
cmc
cs
popa
jne
cmps
xchg
and
mov
out
int
dec
test
xor
cld
cmp
jnp
jp
icebp
xchg
stos
les
pushf
or
push
add
add
call
add
pop
test
ds
xchg
int
sti
jl
inc
cmp
repnz
mov
xchg
test
dec
test
gs
or
lods
inc
fcom
cmp
add
and
cmps
mov
dec
push
inc
repnz
mov
cmp
bound
aam
and
clc
and
movs
cmp
cmp
fist
(bad)
call
fsubr
repnz
push
jmp
jg
dec
(bad)
lods
mov
aad
lahf
add
add
inc
cmp
push
sar
lahf
loop
adc
mov
xchg
cmp
das
xchg
inc
adc
hlt
mov
retf
js
inc
cmp
mov
inc
cmp
ret
adc
inc
mov
aam
pusha
xchg
jmp
jb
mov
or
(bad)
and
xchg
pusha
out
cmp
push
sub
xchg
push
out
pop
mov
mov
jo
test
jb
and
int
push
push
iret
push
cmc
push
jle
dec
gs
mov
push
push
test
xchg
ret
xor
xchg
xchg
adc
push
push
xchg
or
push
in
pop
sub
stos
rcl
in
mov
lds
mov
fwait
mov
test
push
push
or
xchg
cmp
inc
in
add
in
push
and
repz
push
ds
in
and
leave
ret
add
ret
clc
adc
jnp
jmp
popa
or
pop
lahf
inc
aaa
xchg
mov
jb
sbb
and
cmp
in
pop
and
pop
and
in
adc
cmp
popf
arpl
pop
retf
cmp
mov
(bad)
jnp
pop
xchg
dec
inc
aas
xchg
dec
and
push
sub
lock
aad
aad
stos
jle
pmullw
aad
xor
xor
div
js
lock
xlat
pushf
mov
adc
jmp
das
xlat
sbb
or
loopne
shl
dec
jp
dec
iret
push
xor
rcl
aad
es
mov
cld
ja
out
(bad)
sub
int3
jno
(bad)
pop
mov
les
das
or
jbe
pop
popa
aaa
fsubr
inc
in
test
ret
(bad)
mov
mov
ficomp
fnstsw
sub
mov
test
in
or
mov
add
imul
xchg
lea
inc
loop
mov
(bad)
test
arpl
fnstcw
xchg
dec
pop
sbb
mov
les
fwait
lds
(bad)
(bad)
and
or
inc
push
mov
sbb
dec
ins
jbe
popa
fs
shl
push
sbb
dec
aaa
pop
xchg
mov
rol
mov
lods
repnz
call
push
outs
retf
push
jno
(bad)
mov
or
cmp
cwde
xlat
mov
xchg
push
push
je
dec
cmp
push
fnstcw
mov
retf
pop
lea
mul
imul
lods
push
mov
pop
bound
pop
and
cs
mov
sbb
repz
scas
jo
outs
int3
aaa
fldlg2
(bad)
push
dec
xor
inc
jns
enter
dec
mov
rcr
pop
or
(bad)
inc
test
xchg
add
int3
adc
xchg
sbb
bound
xchg
xchg
xor
and
outs
mov
mov
in
inc
dec
xor
cmps
adc
neg
pop
pop
or
mul
outs
mov
bound
fldcw
les
xor
add
ins
mov
push
mov
and
push
mov
mov
shl
call
gs
call
fmul
into
cmp
das
push
movs
mov
mov
outs
int3
xor
ss
inc
and
in
sbb
inc
mov
in
shl
shr
inc
lds
neg
or
pop
mov
inc
sub
xchg
mov
mov
adc
call
int3
ss
shr
movs
data16
sub
xchg
ins
xor
test
mov
mov
dec
mov
push
pop
mov
int
xor
rol
adc
xor
mov
aaa
xor
ja
sbb
std
dec
jmp
mov
sti
mov
aam
pop
mov
inc
pop
in
rcl
jmp
or
inc
loop
jae
lahf
inc
or
sub
sub
pop
mov
sub
push
mov
je
rcr
sub
adc
out
in
in
cwde
lea
push
sub
fstp
ins
jno
mov
in
mul
push
(bad)
in
out
mov
inc
sbb
sub
add
les
dec
inc
or
jbe
mov
cmp
lds
and
fs
daa
call
es
push
fwait
dec
and
ins
or
ins
loopne
sahf
scas
inc
div
xchg
loop
and
out
rol
ins
xchg
xchg
mov
out
fwait
int
cwde
int
pop
mov
mov
sub
ret
mov
xchg
mov
leave
xor
xchg
pop
test
xchg
pop
dec
stc
add
mov
or
dec
into
sub
cwde
in
out
fsub
jno
push
sbb
lods
mov
in
ret
mov
ins
outs
ss
fcom
push
pop
repz
and
pop
or
cmps
pushf
xchg
les
inc
fs
xchg
push
pop
adc
inc
mov
and
les
sub
mov
add
popa
inc
mov
cwde
popw
add
(bad)
outs
(bad)
and
push
jno
mov
pusha
xor
pop
push
mov
add
sbb
pop
push
push
mov
mov
adc
call
lea
add
or
and
jbe
jo
pusha
sub
push
dec
adc
xchg
push
mov
(bad)
or
leave
out
mov
cmp
ret
sbb
xchg
arpl
(bad)
xchg
xchg
jmp
sub
mov
fwait
int3
es
dec
pop
shl
push
jo
mov
xchg
(bad)
into
xor
leave
data16
and
sbb
mov
ror
int
cli
xchg
xchg
inc
xchg
arpl
xchg
push
xchg
(bad)
in
inc
scas
mov
dec
cmps
sbb
lods
fadd
push
shl
sbb
push
pop
push
cmp
or
or
add
dec
scas
xchg
push
mov
pusha
nop
sub
jmp
gs
lds
pop
les
pop
repnz
pop
dec
dec
adc
mov
in
xchg
cs
fs
dec
sub
jne
adc
call
cmps
mov
inc
cmps
mov
fs
dec
nop
xor
cdq
jb
lea
jmp
icebp
push
loop
xchg
push
dec
mov
and
sub
mov
cmp
stc
jecxz
xor
or
mov
out
movs
pop
xchg
mov
xchg
mov
and
ror
or
mov
pop
mov
test
test
or
pop
cmp
stos
mov
(bad)
hlt
aam
sti
and
push
inc
cmp
sub
scas
xchg
sub
add
jp
add
cs
or
mov
cld
(bad)
xlat
aaa
mov
or
mov
pop
xor
or
ror
scas
xchg
mov
or
and
aam
stos
xchg
xor
sbb
push
push
sub
or
popa
rol
or
test
ficomp
sbb
pusha
jnp
gs
das
pop
jbe
lods
aad
lods
(bad)
cli
inc
adc
movs
dec
into
push
test
pop
dec
xor
pop
ss
push
jo
sub
xor
fisub
dec
push
fwait
fwait
int3
sar
pop
and
shr
es
mov
dec
mov
les
sub
(bad)
(bad)
movs
fsubp
jmp
inc
in
dec
or
jo
cmp
loop
ja
idiv
int
sbb
cmp
sahf
inc
in
cdq
lds
mov
out
shl
push
mov
(bad)
dec
jmp
xchg
outs
xor
sbb
inc
sbb
jbe
ss
lea
(bad)
mov
adc
out
fwait
cmp
xchg
sbb
adc
mov
in
pop
cmp
les
outs
pop
aam
movs
dec
or
inc
pusha
jecxz
loop
and
pop
fwait
inc
nop
ficom
dec
jb
int3
sub
push
xor
mov
add
or
mov
dec
retf
das
sar
cmp
pop
sub
ret
inc
or
mov
push
mov
loop
dec
jbe
adc
test
sbb
mov
jae
mov
or
sbb
std
movs
pop
inc
bound
cmp
sar
jb
sub
pop
dec
ja
scas
sbb
dec
les
jno
mov
and
js
iret
gs
xor
daa
test
xor
dec
popf
into
jae
dec
outs
ja
bound
jge
out
int
fisttp
lds
shr
dec
dec
push
pop
popf
and
cld
outs
mov
jge
push
or
ret
jo
mov
lds
jns
xchg
aam
add
gs
cmp
jno
dec
ret
jp
in
test
pop
int3
je
ret
mov
push
out
xchg
jbe
rcr
lods
in
jle
cs
mov
cmp
pop
sbb
jne
ficom
lds
cs
jbe
gs
icebp
retf
dec
loope
and
addr16
xchg
jne
dec
xchg
or
mov
add
adc
mov
loope
dec
and
or
inc
not
call
imul
adc
stos
inc
cmps
pop
ret
jmp
loop
sbb
sub
or
imul
jge
sub
jmp
jge
mov
pushf
adc
xor
xor
int
mov
in
jg
jmp
inc
pop
jp
ret
nop
fistp
cmp
jo
imul
and
into
cmp
mov
push
dec
push
and
jp
jno
es
retf
cdq
mov
lods
fninit
lods
mov
pop
jb
ret
mov
(bad)
into
jmp
fs
xor
pop
fistp
int
in
sub
xchg
data16
sub
mov
das
pop
sbb
mov
sub
ss
mov
xchg
test
das
fst
fs
iret
adc
jns
adc
fldenv
jp
cmp
xchg
pop
push
enter
(bad)
frstor
dec
inc
sti
cmp
adc
hlt
ins
adc
inc
cmp
sub
jecxz
cwde
pop
mov
lods
and
pop
add
retf
retf
or
inc
adc
test
xor
loopne
mov
shl
fdiv
adc
mov
movs
addr16
sub
dec
mov
mov
mov
push
sub
adc
mov
add
cmps
mov
mov
je
mov
xchg
mov
xor
or
inc
or
nop
into
popa
xchg
dec
mov
mov
mov
xchg
push
jmp
sbb
out
fcomp
lds
xor
out
inc
jp
xor
leave
bound
mov
sub
stos
daa
adc
mov
pop
mov
fmul
mov
ja
sub
adc
sbb
into
mov
dec
addr16
dec
pusha
inc
(bad)
pop
call
int
icebp
dec
aaa
jae
test
sar
enter
mov
arpl
ja
mov
jl
cmp
mov
pop
pop
in
mov
jmp
loop
aad
push
cdq
ficomp
outs
stos
leave
mov
int3
cwde
push
fs
adc
push
sub
mov
sub
mov
stos
mov
add
adc
inc
les
cmp
shl
int3
cmp
xor
ret
sub
dec
xor
and
cmp
push
mov
movs
ins
enter
sbb
cmp
push
and
scas
xchg
push
in
int3
dec
and
push
mov
jp
inc
or
cmp
pop
mov
sbb
or
es
add
adc
jecxz
xchg
je
mov
or
js
(bad)
jb
and
xchg
data16
mov
sbb
jo
outs
inc
out
xchg
lds
int3
rcr
mov
jno
mov
pop
dec
fist
fwait
jmp
pushf
push
fs
les
iret
fst
dec
addr16
retf
sub
or
std
mov
imul
push
(bad)
push
mov
outs
ret
dec
adc
movs
xchg
cmps
push
adc
dec
pop
adc
push
sub
ins
dec
sub
icebp
xor
outs
mov
popa
adc
xor
xor
rcl
sbb
sub
xor
mov
jmp
mov
xchg
push
jmp
call
out
add
repnz
cmp
add
scas
shr
dec
push
or
dec
add
sub
retf
pop
pop
xor
push
add
push
sahf
adc
add
push
push
pop
adc
adc
cmps
xchg
and
arpl
or
scas
aad
pop
shl
jb
mov
mov
dec
movs
add
push
and
adc
lds
cmp
cmps
(bad)
(bad)
retf
or
jbe
dec
mov
push
rol
movs
jmp
adc
fdiv
push
lock
adc
mov
sti
imul
les
push
and
(bad)
cmc
pop
ins
xchg
outs
cwde
pop
mov
iret
add
pushf
cs
loopne
jp
or
jp
(bad)
mov
pop
mov
jnp
out
add
sub
loope
jp
outs
pop
mov
in
cmp
mov
cld
pop
pop
mov
pop
stos
xlat
inc
enter
scas
pop
in
mov
retf
inc
xlat
sub
adc
pop
cs
test
ins
mov
cdq
lods
aam
mov
test
adc
sub
mov
cs
jmp
pop
add
ret
push
xor
push
inc
or
aam
dec
pop
aam
push
mov
jmp
mov
mov
jmp
movs
movs
rcl
adc
retf
(bad)
(bad)
mov
stos
shr
es
push
push
out
(bad)
sbb
sbb
jmp
into
lahf
inc
sub
pop
out
sahf
xor
mov
add
ins
shl
cmp
mov
out
dec
dec
xchg
or
sub
jnp
or
stos
cmp
or
mov
cmp
xchg
xor
in
pushf
cmp
test
xchg
sbb
fucompp
(bad)
pusha
ss
js
or
std
rol
add
mov
fsub
or
rcl
mov
pop
jecxz
ret
daa
sar
cdq
xchg
push
scas
xor
mov
push
cdq
mov
sub
into
adc
adc
inc
lods
ds
mov
retf
aas
popa
xor
mov
sbb
adc
mov
hlt
imul
mov
push
jp
aad
push
mov
stos
xchg
and
mov
imul
cmp
sub
scas
adc
xchg
adc
fcom
fwait
push
pushf
hlt
inc
jo
jecxz
add
sub
mov
inc
push
pop
or
push
lahf
int
ret
test
leave
dec
dec
fld1
repz
clc
rcr
inc
jno
mov
xchg
xor
lods
inc
inc
ins
pushf
daa
pop
retf
xchg
mov
sbb
pop
les
mov
inc
xor
mov
push
sub
aam
cmp
push
inc
stc
bound
arpl
fwait
xchg
addr16
rcl
cmp
test
gs
pop
stos
ret
adc
loopne
push
sub
int3
loop
jp
in
lods
into
pop
push
mov
and
loope
jmp
in
mov
rol
push
loope
scas
in
adc
dec
ret
outs
xchg
adc
xchg
sub
std
xchg
pop
jb
pop
sbb
test
(bad)
(bad)
mov
lods
movs
mov
or
sahf
cdq
mov
jnp
mov
xor
jecxz
pusha
jge
pop
clc
adc
lock
mov
retf
cdq
mov
retf
imul
sub
sub
jle
adc
mov
dec
sub
cmp
xchg
ins
lahf
or
(bad)
push
jp
jmp
pop
sub
cmp
xor
aam
test
shl
test
loopne
arpl
es
rol
mov
aad
and
loope
cdq
out
jg
mov
dec
or
xchg
fcom
cmps
mov
call
ja
mov
mov
mov
xor
or
arpl
popf
mov
adc
mov
bnd
sub
(bad)
icebp
in
mov
or
retf
mov
movs
shr
sub
arpl
pushf
in
pop
mov
mov
jno
mov
fbstp
xchg
xchg
mov
fnstenv
mov
rcl
movs
fs
sar
inc
ror
mov
stos
push
dec
fld
out
aas
or
mov
mov
adc
lea
ss
push
pop
mov
out
je
outs
mov
ss
lods
xor
sub
cmp
addr16
cmp
and
test
or
fcomp
cmp
sbb
or
ss
or
clc
mov
popa
xchg
test
push
jne
aam
std
pop
xchg
inc
xchg
clc
lock
repnz
jge
sub
sar
and
jb
cmps
jb
sub
add
sub
push
retf
push
movs
(bad)
push
xor
sbb
jno
shr
retf
gs
in
shr
push
enter
sbb
scas
je
movs
mov
xor
aam
lods
pop
movs
pop
nop
push
dec
inc
fidiv
mov
(bad)
sbb
mov
inc
dec
jns
test
inc
xor
movs
ins
and
add
movs
xchg
xchg
xchg
setnp
icebp
jle
inc
cli
and
pusha
mov
inc
mov
aam
mov
pop
bound
hlt
mov
ins
mov
lods
push
mov
inc
push
mov
fwait
scas
xchg
imul
mov
pop
xchg
mov
test
adc
neg
loop
cmps
jge
(bad)
mov
mov
pop
cmps
sbb
mov
fldcw
mov
loope
je
jl
mov
bound
test
cmps
loope
gs
mov
test
(bad)
aas
loope
fadd
add
inc
lahf
bound
call
es
sbb
retf
retf
call
push
loopne
dec
pop
icebp
jle
rol
mov
jp
dec
mov
fs
or
push
dec
pop
mov
sbb
jns
sub
push
push
dec
push
mov
cmp
ret
(bad)
mov
enter
push
ins
shr
dec
or
fbstp
repz
push
(bad)
inc
pop
mov
mov
movs
arpl
bound
sub
push
mov
aam
mov
inc
mov
push
mov
stos
shr
mov
mov
and
aad
sbb
data16
adc
sbb
and
inc
add
retf
and
push
sub
xor
or
xchg
push
push
jns
sub
push
mov
dec
test
add
dec
test
rcl
push
enter
cwde
mov
jg
mov
pop
rcr
or
ror
cmp
xchg
inc
clc
int3
inc
mov
enter
loopne
js
jge
call
bound
imul
cmp
sbb
ret
or
rcl
mov
out
scas
out
sti
fcmovnu
sbb
lds
jmp
sub
enter
aam
pop
mov
sub
mov
fcom
pop
fs
and
fidiv
or
cmp
repz
pusha
mov
(bad)
ins
cwde
pop
call
sbb
inc
stos
xor
pop
iret
mov
xor
jmp
movs
jmp
call
rcl
sub
fldcw
das
cmps
rcr
lea
(bad)
and
cli
mov
jne
(bad)
(bad)
jmp
(bad)
push
movs
clc
mov
fisttp
sti
pop
sbb
ss
or
in
bound
cmc
mov
ds
stos
addr16
mov
ficom
mov
mov
or
mov
shr
gs
iret
scas
mov
fbld
xor
out
xor
lahf
outs
dec
in
xchg
inc
(bad)
imul
xchg
leave
sub
arpl
xchg
xor
cdq
push
mov
xchg
or
sub
sub
cld
mov
cld
pop
das
jmp
lahf
cmps
lahf
mov
push
aam
xor
mov
jb
mov
sbb
rcl
dec
mov
leave
adc
jae
pushf
loop
cmc
inc
add
mov
sbb
fld
aad
aaa
fwait
data16
jo
addr16
jno
cmps
(bad)
pusha
in
mov
cmp
data16
(bad)
addr16
imul
mov
xchg
dec
clts
cld
xlat
adc
aam
mov
inc
fidiv
mov
lds
inc
mov
inc
outs
push
mov
xchg
cli
jge
and
aad
test
cmc
sub
imul
cmp
mov
jecxz
add
daa
or
ins
xor
and
xchg
aam
inc
jmp
and
popa
(bad)
mov
mov
pop
add
popf
mov
into
sbb
(bad)
pop
(bad)
cli
jg
jl
add
jne
mov
mov
mov
fwait
test
div
jbe
in
xchg
pop
inc
adc
fwait
adc
mov
in
ins
push
xor
mov
push
push
imul
mov
stos
xchg
pop
hlt
inc
movs
xchg
scas
ret
std
push
stc
mov
lds
lahf
lds
repz
xor
mov
jae
int3
cdq
jae
pushf
cmp
idiv
arpl
ds
dec
xor
and
jg
in
(bad)
dec
dec
jae
imul
mov
mov
cmp
jns
ja
sahf
loopne
pinsrw
mov
mov
cld
cli
popf
cld
shr
lds
sbb
or
and
or
jno
icebp
xacquire
int
mov
pop
nop
inc
fsub
mov
cmp
xchg
outs
ss
inc
cmp
jae
fdivr
leave
mov
ret
add
ins
js
xchg
in
xchg
fiadd
add
ss
stos
(bad)
sti
rol
pop
jae
mov
mov
pop
jbe
lea
loop
sbb
push
cwde
cmp
or
and
rcr
addr16
stc
test
mov
clc
inc
(bad)
sahf
fmul
cwde
stos
cmp
push
push
test
mov
pop
aam
sbb
arpl
out
ins
mov
adc
loope
pop
pushf
shl
ror
cli
jecxz
mov
fcomp
or
in
lahf
push
sub
cmp
pop
rcl
lods
push
inc
ds
lock
jecxz
outs
shl
or
sub
(bad)
cmp
mov
mov
lods
arpl
lahf
into
scas
push
xlat
imul
imul
loop
nop
push
arpl
mov
adc
js
xor
bound
pop
sub
mov
mov
cmp
mov
iret
dec
pushf
cmp
cmp
cmp
stos
xor
inc
jns
mov
push
sub
mov
jbe
call
popf
out
xchg
cwde
inc
cwde
sbb
xlat
pop
(bad)
repnz
and
(bad)
sub
mov
and
xchg
jle
ficom
out
and
mov
mov
cwde
sub
loop
icebp
daa
xor
cmp
fisubr
push
mov
pop
adc
rcr
mov
jle
cmp
aas
sahf
(bad)
fbstp
dec
mov
imul
retf
adc
scas
mov
mov
xchg
test
add
or
in
fmul
test
(bad)
fmul
push
test
jg
push
add
sub
mov
xchg
rcr
fisubr
pop
mov
std
pop
adc
pop
inc
push
mov
in
adc
sub
adc
popf
jecxz
stc
and
inc
test
inc
iret
and
fld
mov
shl
or
adc
pop
loopne
pop
pop
jbe
imul
arpl
mov
pop
inc
mov
pushf
ficom
lds
pop
jl
cmc
mov
scas
xor
test
pop
and
fmul
xor
mov
ins
push
out
push
retf
das
scas
shl
int3
adc
inc
jns
in
mov
bound
cwde
adc
adc
add
sub
cli
fisttp
jmp
fs
cmp
movs
xor
cmp
jp
cmp
mul
cs
pop
ror
mov
pop
call
jge
mov
push
push
mov
popa
cmc
mov
push
retf
jae
repnz
xchg
xor
pushf
sub
in
loopne
mov
mov
gs
push
add
clc
(bad)
mov
push
dec
cmp
cmps
ds
(bad)
xchg
mov
jne
and
pushf
xor
xor
mov
ins
bound
test
inc
mov
sub
xor
ins
int3
inc
repz
hlt
jl
lods
pop
mov
pop
mov
pop
popf
movs
sub
inc
mov
sbb
xor
rol
dec
add
push
pop
aas
push
movs
and
jmp
jne
lea
fimul
repz
aam
mov
xor
loop
cmp
imul
and
mov
in
push
add
pop
cli
mov
pop
out
hlt
mov
sbb
mov
or
mov
jg
test
pop
pop
adc
jns
into
popa
fiadd
jnp
sahf
ds
xchg
fadd
dec
das
ficom
mov
(bad)
pop
sub
jne
push
imul
in
in
xor
cwde
xchg
not
pop
xchg
fst
inc
jns
popa
ss
adc
in
add
data16
jl
adc
adc
scas
mov
test
sbb
ss
les
adc
mov
jbe
dec
fmul
dec
xlat
push
push
test
dec
dec
sub
cmp
mov
xchg
mov
lods
xor
out
mov
stos
adc
and
dec
or
les
imul
push
mov
mov
mov
lock
or
fdiv
cmp
mov
xor
jp
(bad)
out
stc
or
retf
es
test
add
dec
test
ja
xchg
sub
test
pop
add
mov
pop
jbe
jo
lods
fstp
xor
ds
call
xchg
sbb
jecxz
loope
push
jmp
into
sub
cmps
or
ds
lock
sbb
xor
adc
pop
mov
pop
jl
sbb
lods
repnz
(bad)
xor
popa
retf
mov
ret
push
dec
push
enter
adc
sub
sub
push
push
mov
mov
ret
lods
repnz
popa
sbb
sub
mov
pop
sar
in
xchg
sub
mov
std
lahf
loop
and
add
aam
stos
loopne
jbe
or
retf
mov
(bad)
or
adc
(bad)
aaa
jb
sbb
mov
xor
mov
ja
or
sbb
enter
and
fimul
xlat
enter
add
(bad)
jmp
sbb
adc
addr16
scas
daa
dec
gs
xor
or
call
xor
xor
pop
inc
addr16
enter
into
and
sub
sbb
inc
jns
xor
fadd
jmp
and
adc
xor
xchg
(bad)
ins
and
jge
push
cmp
call
bound
mov
adc
out
xchg
jmp
xor
and
mov
inc
jo
popa
dec
jns
dec
fs
addr16
xlat
push
mov
or
or
cli
jae
lods
jg
popf
and
out
cmps
or
add
fadd
and
stos
es
out
pusha
pop
sub
sub
(bad)
repnz
push
sub
fwait
xchg
mov
scas
xchg
adc
stos
adc
pop
ror
(bad)
cmp
test
jns
in
pusha
fcomp
loope
sub
outs
mov
nop
pop
push
daa
pop
adc
pop
push
mov
sbb
stos
and
mov
add
or
inc
js
mov
sub
(bad)
in
mov
in
pop
in
in
movs
xor
inc
ret
fsub
test
ret
xor
cmp
pop
push
and
cmp
jo
push
push
test
pop
loopne
rcl
je
js
adc
cwde
add
call
dec
and
ret
inc
jmp
icebp
mov
mov
lock
mov
or
mov
les
sahf
add
add
ins
sbb
or
fcomp
int
dec
test
rol
xor
or
out
scas
scas
movs
xchg
mov
or
mov
inc
mov
fwait
and
inc
aaa
push
inc
(bad)
pop
jmp
add
dec
movs
rcr
inc
ret
lods
lock
mov
jno
sub
push
jmp
out
mov
push
nop
sti
inc
and
sub
je
fnstsw
jge
xlat
inc
pop
scas
mov
in
xchg
push
push
pop
in
int3
jb
out
or
or
push
fcomip
mov
or
jmp
sub
dec
aam
outs
call
call
jp
jg
push
imul
loopne
ror
hlt
retf
fcmovne
sti
pop
lods
mov
stos
fcmovnbe
cmc
xchg
cmp
and
mov
or
clc
push
stos
jb
jne
sub
inc
mov
lds
rol
call
dec
pop
jno
sbb
and
lahf
(bad)
and
mov
jg
fucom
sar
pop
inc
mov
fwait
loope
add
scas
add
dec
mov
imul
inc
push
pushf
cs
adc
ds
xor
mov
imul
jo
jns
add
in
dec
retf
inc
cmp
cmp
je
or
or
int3
lods
ins
ss
loop
movs
jnp
mov
pop
mov
xor
cmps
add
rcl
xchg
call
idiv
sub
sbb
xchg
inc
dec
aam
lea
and
fisub
pop
(bad)
jp
xor
adc
push
fdiv
mov
pop
push
aaa
test
clc
adc
and
(bad)
xor
(bad)
hlt
test
fstp
xlat
push
jg
pop
cmc
dec
mov
sbb
pop
dec
or
mov
fisubr
out
cmps
fadd
pop
sbb
jae
cmp
ja
cs
mov
xor
in
fprem
pop
adc
cmps
(bad)
and
or
xchg
dec
inc
ds
push
or
xchg
jo
les
out
pop
inc
push
cmp
sbb
adc
aam
imul
sar
mov
rol
sbb
mov
xor
xchg
add
sub
outs
sub
retf
sub
rep
sbb
pop
mov
sbb
ret
repnz
ins
push
push
inc
adc
inc
(bad)
stos
mov
call
punpckhwd
loop
fldcw
push
mov
push
add
ror
repnz
mov
je
mov
shr
cmp
pop
and
mov
bnd
daa
and
mov
cmps
xor
xchg
gs
xor
icebp
shl
arpl
mov
enter
movs
pusha
pusha
sahf
in
mov
mov
(bad)
push
and
push
pop
cld
jmp
inc
ror
pop
leave
fsub
adc
mov
int3
xor
stos
inc
mov
inc
outs
inc
repz
lock
ret
test
hlt
retf
jle
(bad)
adc
add
inc
xor
jp
xor
stos
addr16
jne
movs
clc
jne
inc
inc
ret
iret
int3
push
rcr
repnz
ins
lea
clc
jae
dec
outs
inc
mov
ja
fiadd
sub
sub
pop
adc
or
mov
mov
ins
mov
mov
xchg
or
fidivr
sub
xchg
or
cmp
adc
ins
mov
xor
je
and
sub
mov
mov
stos
outs
jno
adc
xlat
hlt
je
cmp
sbb
xchg
jmp
jg
shl
nop
call
cmps
push
std
arpl
xchg
sbb
arpl
ror
mov
cmp
mov
repz
or
sar
push
mov
imul
mov
dec
inc
ja
into
pop
push
mov
sahf
das
push
push
push
sub
ins
mov
xor
inc
fld
mov
(bad)
ins
mov
das
push
mov
xchg
test
inc
dec
loop
push
mov
fisub
adc
mov
push
movs
pop
adc
mov
cmp
cmp
and
call
mov
jp
mov
push
cli
or
imul
repnz
shl
retf
cmps
fisubr
ret
pop
(bad)
outs
dec
js
push
inc
outs
mov
dec
dec
jb
jge
jnp
outs
push
xchg
push
jmp
jbe
dec
mov
adc
popa
sbb
xor
es
dec
fldenv
jecxz
jmp
lods
outs
jbe
push
mov
adc
and
sbb
push
cli
std
add
test
xchg
pop
cdq
call
and
int3
jo
(bad)
jmp
mov
mov
pop
in
dec
mov
scas
sti
mov
sti
ffreep
inc
or
fwait
xor
daa
(bad)
out
or
repz
sbb
add
stos
pop
or
leave
cmp
frstor
ds
pop
ficom
push
dec
cs
dec
cs
dec
cs
rcl
ret
sbb
adc
repz
das
fisub
test
pop
shl
inc
je
pusha
mov
(bad)
pop
sar
xor
int
js
sbb
push
jnp
inc
jp
and
and
and
cmps
iret
and
rcr
mov
js
jg
loop
(bad)
push
inc
mov
ins
(bad)
pop
xor
ja
daa
push
ror
loop
push
cmp
or
jg
icebp
fild
(bad)
mov
sub
push
jmp
(bad)
in
dec
push
push
push
dec
and
dec
in
sbb
enter
pop
dec
ret
jne
loope
pop
sub
repnz
jbe
jbe
jge
popa
or
inc
xchg
push
fsubr
enter
lods
movs
mov
sbb
and
mov
adc
scas
adc
add
mov
stc
or
mov
adc
dec
mov
les
xor
mov
mov
repnz
and
and
adc
sbb
or
push
(bad)
cmp
mov
outs
gs
test
xchg
lds
sub
outs
pop
cdq
xchg
jle
cld
push
cmp
mov
pop
mov
rcl
add
cdq
cld
mov
xor
cmp
fdiv
call
shr
mov
addr16
call
lods
xlat
and
sub
(bad)
sbb
xchg
sub
lds
outs
fs
es
leave
mov
xchg
nop
cld
add
and
adc
gs
repz
cmp
arpl
adc
xchg
les
into
shr
call
ins
in
ins
imul
jb
sti
out
cmps
and
jne
aad
mov
fbld
cmp
popf
cmp
push
cmp
fst
das
cli
dec
mov
xor
jne
in
xchg
(bad)
pusha
aas
xchg
arpl
sub
and
hlt
cld
sti
les
jnp
add
iret
ret
lods
pop
addr16
pop
enter
and
cmps
ror
dec
test
xchg
push
xor
pop
mov
lods
mov
test
cmp
dec
scas
mov
movs
ret
fcom
sub
xor
push
sub
push
inc
mov
xchg
and
jns
movs
ror
mov
(bad)
(bad)
repz
push
test
in
cmps
xor
dec
add
jl
and
inc
ds
lds
retf
pop
mov
sbb
sub
mov
jne
mov
sbb
add
jae
mov
addr16
inc
neg
push
shl
inc
icebp
inc
fadd
lock
cmp
add
inc
out
mov
and
aas
xchg
mov
mov
mov
xchg
into
inc
cmp
xchg
add
mov
ror
pushf
ins
mov
test
mov
fwait
int
fcmovbe
pusha
jecxz
loope
(bad)
jae
xchg
movs
popf
and
fcom
movzx
jp
adc
rol
mov
test
outs
and
imul
sbb
push
cmp
cwde
imul
call
push
rol
sub
retf
nop
mov
xor
loope
sti
or
stc
cmp
das
shl
cmp
movs
mov
mov
and
loope
add
push
cld
jno
test
mov
dec
lahf
dec
sub
xchg
jle
movs
hlt
sbb
lods
push
dec
cld
pushf
ins
repnz
outs
cmps
fnstcw
and
(bad)
pushf
(bad)
inc
mov
push
mov
push
mov
lock
sub
aam
jo
pop
stos
pop
mov
shl
idiv
cld
mov
test
and
pop
mov
add
out
inc
xchg
push
sahf
push
test
xchg
dec
popf
movs
in
ss
push
jae
repz
mov
add
popf
mov
aam
shl
push
jo
(bad)
(bad)
pop
xor
mov
fstp
mov
cmp
imul
mov
add
iret
push
dec
retf
add
pop
scas
fbld
in
dec
out
mov
lock
adc
loopne
js
mov
or
jb
int3
xor
jae
or
pop
lods
inc
mov
shl
mov
jecxz
xor
bound
iret
pop
mov
addr16
xchg
dec
and
mov
jae
push
arpl
(bad)
xchg
(bad)
repz
xor
outs
call
sbb
xchg
js
cwde
and
mov
loopne
push
fadd
pop
pop
fmul
pop
inc
pop
fisttp
ds
xchg
stc
jno
add
out
or
les
sbb
inc
mov
or
adc
pop
lds
jmp
addr16
push
mov
or
call
xor
fldenv
mov
popf
inc
add
lods
rol
and
addr16
aad
mov
mov
setb
cmp
movs
and
push
fisttp
add
jnp
inc
(bad)
jae
xor
hlt
xchg
(bad)
pushf
or
sbb
xchg
ins
sub
loop
scas
push
jmp
in
push
repnz
fcmovnb
jle
xchg
out
mov
push
mov
fiadd
inc
add
mov
mov
hlt
inc
js
push
cs
dec
mov
ins
(bad)
stc
push
push
(bad)
pop
xchg
and
dec
mov
dec
(bad)
fild
add
jg
fistp
mov
clc
sbb
test
outs
adc
test
cmp
mov
inc
popa
pop
jl
mov
test
jno
add
mov
sti
(bad)
aad
pop
sbb
xor
ror
ret
sbb
in
stc
pop
dec
xor
jl
xor
repz
mov
stos
push
enter
(bad)
adc
(bad)
xor
dec
xchg
nop
into
aas
dec
or
out
mov
sbb
jl
and
jmp
sbb
pop
xchg
movs
lds
rep
ret
shl
fadd
sbb
arpl
jg
sahf
iret
or
cmp
scas
inc
add
mov
jo
mov
mov
jnp
mov
pop
sub
std
cmp
xchg
and
scas
pop
retf
jb
add
cmp
pop
mov
adc
add
xchg
cmp
clc
mov
aad
popa
into
cmp
xchg
push
(bad)
and
adc
xor
mov
jno
dec
cwde
dec
mov
arpl
aad
or
pslld
(bad)
jecxz
sbb
mov
lds
pushf
push
jl
scas
sbb
pop
sbb
lock
cmp
mov
hlt
and
scas
imul
xchg
dec
push
js
xor
push
mov
jl
dec
dec
fisttp
cs
stc
pop
jo
cmp
jl
int3
ficomp
ret
sbb
loopne
and
add
icebp
xor
push
lahf
test
pop
lods
mov
ret
arpl
dec
jl
sbb
push
cmps
outs
cmp
jp
or
dec
cmp
sbb
cwde
fwait
js
push
fidiv
mov
cld
rol
ret
imul
data16
push
sbb
xchg
retf
sub
std
test
push
cmc
xchg
fld
dec
add
pop
mov
push
out
popf
push
pop
rcl
pop
mov
loop
sbb
daa
xchg
cmp
add
fs
mov
addr16
sub
pop
(bad)
je
sbb
clc
cdq
call
aas
(bad)
lods
and
pop
xchg
cmp
lea
dec
or
nop
ins
retf
mov
das
iret
sbb
jp
cld
cmp
sbb
vshufps
jge
dec
iret
das
mov
pop
dec
add
mov
(bad)
jle
in
sbb
xchg
or
sub
mov
clc
jg
out
cmp
pop
or
in
add
mov
pop
mov
mov
sbb
mov
jecxz
dec
scas
sar
jbe
aas
push
ficomp
popa
push
mov
(bad)
jae
lds
fwait
cmc
dec
mov
lahf
in
adc
xor
sti
dec
test
vrsqrtss
push
sub
cmp
lea
sub
jl
sub
push
icebp
jmp
movs
daa
mov
pop
jnp
into
or
mov
cmp
out
mov
or
jmp
jmp
bnd
fdiv
sbb
stos
int
cmp
inc
fwait
pop
in
or
cmp
fstp
ret
mov
and
pop
jmp
test
daa
cmp
jo
cwde
add
push
pop
popa
lods
aaa
cs
cmps
xor
mov
(bad)
pop
inc
sub
jne
add
pop
add
mov
(bad)
adc
jns
gs
cmp
inc
xchg
lock
enter
jmp
movs
in
pop
movs
out
call
sub
add
icebp
ss
les
fcmove
fdivr
test
popa
mov
sub
xchg
or
push
ss
fnstenv
adc
jne
mov
cwde
push
rol
stc
mov
les
sub
mov
jb
ret
xchg
and
pop
leave
sbb
pop
and
imul
push
(bad)
adc
adc
fcom
or
pop
ret
(bad)
mov
(bad)
rcl
xor
lods
popa
mov
mov
xchg
loope
inc
or
shl
outs
fcomp
adc
and
dec
ds
aas
addr16
(bad)
cwde
loop
cmp
rcr
jb
inc
mov
das
sbb
popa
jns
push
push
ds
jg
and
mov
adc
jg
in
xchg
push
lahf
lds
lea
mov
jbe
arpl
in
sub
ret
fdivr
xor
sbb
sahf
mov
xor
outs
push
jae
icebp
dec
test
or
or
cs
not
in
int
lea
mov
mov
lahf
je
js
jp
fisttp
adc
scas
inc
add
cmp
hlt
je
cmc
pop
pop
push
clc
pop
int
pop
sub
xlat
fimul
adc
mov
sbb
(bad)
cld
add
push
scas
imul
mov
sub
push
sbb
xor
jecxz
cmp
pop
add
rcr
jg
jae
pop
les
scas
inc
or
in
cmp
(bad)
stos
in
je
ja
mov
push
popa
in
ins
in
cmc
fiadd
cmp
mov
adc
fidiv
arpl
retf
stos
jl
(bad)
(bad)
fwait
or
inc
and
cmps
and
outs
push
inc
jle
pop
stos
inc
popa
mov
sbb
pop
cmps
jp
cmp
movs
mov
mov
jp
inc
cmps
stc
pop
dec
lock
outs
jae
lss
and
xor
inc
mov
in
ror
jae
popa
(bad)
fbstp
mov
push
dec
mov
cmovno
dec
mov
bound
mov
arpl
jbe
cmp
inc
xchg
dec
add
loopne
and
sahf
hlt
or
jg
add
inc
jnp
ret
inc
dec
or
aam
inc
push
mov
repnz
dec
repz
mov
icebp
push
or
lock
mov
inc
mov
sbb
dec
aam
(bad)
sbb
les
icebp
jae
mov
rcr
push
test
iret
or
imul
bound
pop
gs
jbe
mov
mov
loope
scas
shr
call
pop
les
scas
ss
cld
test
dec
pop
repnz
add
repz
test
fbld
inc
mov
loop
mov
mov
mov
bnd
xchg
pop
sub
dec
sbb
jl
rcl
pop
outs
pushf
inc
fsub
push
mov
test
sub
and
xlat
mov
pop
dec
iret
(bad)
sbb
(bad)
loope
mov
xchg
retf
push
addr16
leave
mov
arpl
cs
test
iret
fwait
rcl
scas
add
adc
cmps
jne
fcmove
jb
adc
sbb
jno
mov
lahf
scas
icebp
addr16
jg
jmp
shl
enter
dec
ss
jmp
(bad)
not
hlt
ins
fbld
imul
sub
mov
(bad)
jg
loope
cs
mov
mov
inc
inc
pandn
dec
cld
mov
or
mov
adc
lock
(bad)
ror
call
jp
push
mov
jbe
cmp
sub
adc
int
test
loop
push
jb
xlat
xchg
lahf
ffreep
es
(bad)
sbb
sbb
sahf
cli
ss
cmc
jmp
xchg
out
gs
cwde
xchg
loop
inc
jp
or
cmp
pop
mov
xchg
sar
syscall
jmp
jno
mov
mov
add
ds
xlat
jbe
and
jbe
xchg
lock
xchg
fnsave
paddb
jnp
xor
pop
and
mov
mov
jle
mov
leave
mov
adc
cld
pop
stos
in
push
jo
out
sub
dec
lock
xchg
ror
xchg
dec
push
cmp
and
aaa
shr
pop
cmp
adc
xlat
sbb
cld
pop
stos
test
mov
das
shl
xor
ds
inc
xor
push
mov
ins
sub
adc
add
mov
xchg
cmc
or
rcr
ja
or
inc
test
js
aam
adc
lock
out
aam
(bad)
mov
fisttp
aam
js
xor
imul
and
les
mov
jo
repz
(bad)
mul
mov
icebp
mul
es
(bad)
cmps
punpcklbw
dec
xor
std
je
inc
jbe
ja
jp
mov
nop
fild
and
inc
rol
adc
in
test
cmp
adc
push
and
xor
sub
mov
pop
mov
xchg
cmp
mov
jno
pop
(bad)
jnp
and
lds
mov
mov
inc
push
jg
mov
out
mov
les
je
repnz
mov
(bad)
(bad)
test
fld
adc
aas
nop
ror
std
adc
adc
fbstp
pusha
push
clc
scas
sbb
or
adc
loope
jb
(bad)
aas
mov
and
repnz
or
out
in
jl
dec
pop
cli
mov
push
adc
inc
sbb
cmp
and
jmp
ins
fnstcw
xor
jg
test
out
push
fcomp
or
mov
sbb
dec
sub
int3
popa
dec
lahf
sub
inc
mov
jbe
adc
or
in
adc
test
adc
test
and
pop
popf
inc
mov
xor
xchg
cmps
xchg
data16
mov
es
jne
jbe
cmps
ficom
sub
push
pop
adc
or
xchg
in
hlt
jp
push
cmp
dec
pop
sbb
out
out
pop
imul
in
jle
pop
lea
(bad)
repz
mov
ror
or
jmp
push
push
push
push
xor
xor
mov
retf
jge
lds
out
and
ficomp
mov
dec
inc
outs
fsub
bound
cld
push
push
jb
icebp
shr
and
and
in
movs
mul
fcomp
lds
out
lods
lahf
push
(bad)
dec
push
popa
dec
dec
gs
aaa
jge
repnz
mov
in
push
nop
(bad)
sub
lods
xchg
sub
jge
stos
pop
inc
pop
xor
jg
out
repz
xor
repnz
nop
xchg
jg
ja
call
fcom
repnz
mov
repnz
mov
dec
inc
mov
ss
push
xor
xchg
mov
inc
push
jl
push
mov
sbb
(bad)
call
mov
scas
popf
aad
hlt
punpckldq
inc
adc
nop
jg
rol
call
adc
jp
sub
mov
dec
jo
ror
icebp
cmp
(bad)
(bad)
ins
icebp
sub
scas
not
jge
gs
cld
dec
retf
dec
repnz
pop
mov
sub
xor
cdq
sub
clc
adc
cmp
out
dec
or
push
(bad)
xor
je
clc
pop
rol
or
cmp
(bad)
sbb
in
stos
ret
(bad)
cld
icebp
in
les
dec
and
push
movs
jns
fiadd
mov
lea
push
mov
iret
mov
icebp
xor
mov
leave
xchg
cmps
fwait
cld
adc
fnsave
pop
inc
cmp
and
jne
(bad)
jmp
cld
sub
adc
jmp
ret
and
scas
jmp
mov
pop
xchg
or
mov
(bad)
repnz
jb
add
inc
sbb
mov
mov
or
bound
stc
push
shl
or
inc
adc
pop
adc
dec
push
xor
sbb
jge
cmps
xchg
add
cmp
adc
pop
daa
ja
mov
ret
movs
in
push
out
test
cmp
pop
adc
cmp
out
pop
pushf
inc
mov
mov
fidiv
sub
fs
out
test
pop
add
push
xchg
adc
outs
xchg
mov
xor
and
mov
(bad)
call
mov
sahf
or
std
ret
cld
mov
xchg
mov
jecxz
cmp
dec
aad
inc
pop
(bad)
jecxz
imul
test
push
add
sbb
jns
push
xor
ins
pop
pop
(bad)
xor
ins
push
andps
xor
aaa
dec
hlt
fimul
jmp
jecxz
cmp
into
mov
cmp
loopne
cmc
xor
cld
sbb
cmp
and
or
pop
pusha
lahf
xchg
fbstp
sar
jl
ds
mov
sar
add
mov
call
adc
test
jmp
push
aaa
push
shr
mov
into
shl
push
inc
ins
retf
mov
mov
scas
xor
pop
aad
pop
jmp
int
inc
sbb
mov
jle
mov
sub
and
mov
ja
int
jl
lods
cmc
mov
sti
inc
mov
inc
mov
stc
sub
add
in
push
loope
add
inc
jg
add
pop
mov
add
mov
jmp
leave
imul
jg
out
shl
out
adc
jle
inc
jno
and
mov
jo
mov
gs
jmp
out
stc
es
jp
aas
mov
cmp
dec
hlt
sbb
call
pop
mov
mov
cmp
ja
mov
jg
icebp
mov
cs
std
sub
mov
adc
fdivr
sbb
push
pop
pusha
dec
fldenv
repnz
pop
rol
(bad)
rol
out
adc
pop
or
retf
xor
arpl
ins
leave
repz
mov
leave
sbb
push
pop
inc
pop
cmp
scas
pusha
jae
and
iret
xchg
or
pop
and
dec
and
mov
inc
jecxz
push
int
cdq
jecxz
dec
cli
push
xor
ret
xor
ss
nop
enter
sub
ins
cmps
pop
(bad)
popa
fucomp
jmp
addr16
dec
jge
imul
rol
mov
lahf
mov
call
and
rcr
adc
stos
pop
or
(bad)
out
(bad)
hlt
inc
inc
cmp
imul
lea
sbb
jae
pop
xor
popf
inc
cld
add
inc
adc
outs
outs
ins
out
fcomp
pop
shl
xor
and
out
dec
not
inc
pop
fs
rcr
movs
sbb
sbb
pop
pop
call
xlat
enter
shr
pop
and
lods
test
les
xchg
mov
sbb
(bad)
sar
cld
jne
adc
mov
pop
add
in
repnz
adc
cmps
sub
pop
sbb
clc
mov
push
retf
sbb
icebp
xor
cdq
jg
dec
ins
dec
dec
cdq
pop
push
push
push
outs
add
mov
daa
jmp
jb
clc
(bad)
jl
jp
xlat
or
cdq
dec
dec
add
in
push
iret
sub
mov
or
out
js
xchg
jo
dec
or
cmp
xchg
test
pop
popa
add
push
les
push
jle
clc
inc
in
cmc
dec
arpl
mov
fs
pop
in
std
imul
cmp
nop
xacquire
sbb
ficomp
sbb
std
pop
aam
cdq
idiv
and
test
aam
hlt
fild
in
dec
into
cdq
mov
push
and
cmc
pusha
fwait
sbb
sbb
jmp
sub
push
or
cmps
loope
outs
shl
jmp
jl
xchg
jge
mov
lock
sbb
add
sub
lods
sbb
lock
sub
gs
lock
sub
popf
sbb
dec
or
shl
push
cmp
push
xlat
mov
out
mov
lds
add
xchg
test
(bad)
and
ins
cmp
jns
inc
sbb
mov
sbb
ficom
mov
push
mov
loope
pop
hlt
and
sahf
pop
ja
pop
fstp
lea
dec
ret
fcmovnbe
mov
sbb
lea
div
loop
xchg
xchg
and
mov
pop
jnp
sub
fadd
loopne
bound
pop
or
daa
rcr
mov
mov
mov
or
sbb
jns
cmp
adc
xchg
sub
shl
mov
call
popf
jecxz
js
dec
and
adc
cmp
cmps
dec
sub
cli
xchg
or
sbb
mov
ret
fwait
push
data16
faddp
(bad)
jl
cmps
mov
mov
sbb
and
(bad)
push
push
sub
adc
movs
add
(bad)
push
push
popa
movs
movs
adc
rcr
out
icebp
xor
push
outs
cwde
ins
jmp
ret
stc
pop
shl
popf
js
(bad)
and
ins
loopne
out
push
aas
pop
mov
lahf
pop
lahf
inc
aaa
aas
adc
shr
hlt
js
je
jl
sbb
js
movs
push
xchg
popa
mov
test
daa
(bad)
xor
and
mov
icebp
stc
mov
or
jb
es
(bad)
sub
dec
adc
xchg
adc
or
and
fistp
shr
add
mov
fwait
lds
xchg
jp
in
rcl
jno
rcr
mov
sbb
js
mov
push
test
aas
fsub
pop
adc
mov
jecxz
ins
pusha
xchg
cmp
and
add
movs
pop
cmp
popf
jns
xchg
or
push
xlat
cli
jecxz
jno
or
ficom
bound
inc
mov
pop
push
loop
sbb
jle
xchg
jo
adc
pop
cmps
add
mov
in
and
sbb
inc
add
addr16
pop
dec
dec
mov
sub
add
in
cdq
fs
mov
push
push
adc
push
(bad)
and
push
bnd
xchg
mov
lods
fisubr
push
pop
xchg
xor
sbb
popa
push
jbe
push
ret
aad
and
add
xchg
cmp
movs
shl
add
clc
bound
mov
xor
push
clc
test
push
jp
popa
shl
pop
enter
cmovae
icebp
and
push
imul
pusha
jb
mov
mov
pop
loop
fisub
(bad)
addr16
rol
les
int3
dec
jnp
jecxz
mov
mov
std
call
lea
stos
mov
pop
mov
je
in
cmc
jo
cwde
rcr
pop
std
add
ja
jns
int3
push
mov
adc
push
mov
hlt
add
jns
retf
(bad)
xor
mov
inc
leave
hlt
add
fild
dec
inc
cli
jge
cdq
jle
ja
xlat
add
repnz
pop
push
outs
stos
pop
inc
sub
xchg
stos
push
and
adc
test
imul
ds
imul
push
sbb
cs
bound
mov
adc
pmulhw
adc
in
pop
jbe
clc
pop
enter
cld
mov
cmp
push
push
jmp
stos
jecxz
inc
clc
jb
sub
cmp
or
in
loope
sti
out
ja
stos
enter
fbld
nop
(bad)
fmul
imul
dec
push
clc
outs
push
repz
or
call
cmp
jmp
das
fcomip
push
push
mov
adc
lds
or
ja
or
(bad)
jp
repnz
fwait
loope
mov
mov
xor
cmps
fwait
enter
imul
xchg
jb
and
das
sbb
xchg
ret
sahf
test
lock
daa
jno
sub
add
loop
fldcw
(bad)
enter
jnp
jmp
cs
inc
and
push
pop
nop
jnp
sub
cmp
xchg
cmp
retf
aad
add
aad
aam
shr
push
mov
fbstp
fimul
lods
jb
xchg
and
inc
mov
and
inc
push
jne
jne
outs
inc
jge
pop
sti
sub
mov
stc
fist
mov
call
jbe
jbe
repnz
mov
ds
adc
lahf
mov
xor
xor
leave
dec
pusha
xor
adc
and
push
fstp
jl
fstp
push
xchg
int3
dec
xchg
jns
push
stc
aam
sub
xor
sahf
popa
arpl
dec
add
mov
stos
lods
call
push
dec
subps
mov
fcmovb
mov
mov
jl
das
into
imul
out
mov
aaa
xchg
out
imul
xor
push
cmp
(bad)
mov
add
jnp
lea
jnp
dec
adc
scas
out
jp
add
pushf
daa
sbb
sbb
adc
cmc
xor
sbb
out
out
outs
int3
adc
inc
(bad)
mov
ret
mov
rcl
cmp
sub
je
jno
jne
or
xchg
xor
and
scas
push
dec
into
jno
push
je
bound
xchg
out
fs
in
mov
push
rcl
jnp
popf
mov
aas
std
pop
fist
loopne
jge
jle
inc
or
inc
xor
cmp
push
xchg
lds
clc
pop
jbe
(bad)
idiv
in
inc
pop
(bad)
push
push
mov
mov
dec
fisttp
stos
and
stos
xor
push
clc
jl
mov
in
dec
(bad)
xchg
addr16
adc
test
lods
add
fild
pop
nop
aam
push
es
add
stos
cli
(bad)
xor
(bad)
in
push
push
cmp
and
call
xor
adc
sbb
rcr
adc
loop
test
adc
add
(bad)
stos
inc
jmp
(bad)
xchg
rcl
sar
xor
pop
sti
loope
jae
std
cld
dec
push
movs
out
jns
iret
push
jl
js
pusha
adc
fcmove
and
dec
pop
mov
sub
cmp
sbb
cmp
and
jle
adc
imul
jmp
out
in
xor
jmp
into
shr
jmp
in
cmp
stos
arpl
jns
or
dec
iret
rol
mov
cdq
jp
mov
ds
ror
pop
mov
sti
movs
aaa
in
inc
aas
mov
or
mov
cmps
fimul
outs
in
sub
xchg
sbb
icebp
call
sub
push
mov
das
in
xor
cmps
xor
jecxz
add
aas
shl
cld
movs
into
adc
sbb
leave
cmp
jae
in
frstor
out
add
in
cmps
cdq
stc
data16
outs
daa
pop
add
fneni(8087
or
xchg
push
xchg
mov
icebp
xchg
or
jge
inc
(bad)
stos
bound
clc
pop
pop
xchg
mov
mov
in
push
sbb
fild
pop
mov
sahf
repz
(bad)
retf
std
cs
ret
sub
or
sbb
in
push
popf
inc
inc
test
and
adc
push
(bad)
jne
mov
cmc
push
or
loopne
shl
jns
inc
push
mov
fild
into
sar
adc
aam
mov
pop
jl
cmp
xchg
mov
cmp
(bad)
repnz
stos
repnz
or
ja
jmp
pop
fistp
ds
int3
xchg
jae
outs
lahf
jae
mov
lahf
sub
push
xchg
cmc
outs
es
cmp
out
cmc
fisubr
mov
lods
sbb
popf
inc
cmp
out
pop
call
mov
dec
loopne
mov
mov
stc
xchg
sub
xchg
clc
lock
sar
(bad)
xor
je
iret
mov
je
lds
adc
push
adc
xor
and
sub
faddp
fdivrp
fidivr
sub
pop
ja
mov
push
out
test
out
mov
jg
mov
cmp
int3
pushf
cmp
jae
aad
rcr
push
sbb
xor
fnsave
out
stc
popf
mov
jge
and
pop
add
jbe
mov
or
mov
xchg
mov
jbe
add
std
idiv
pop
push
mov
popf
mov
mov
outs
mov
sbb
scas
arpl
aas
(bad)
mov
cmp
mov
adc
jbe
sbb
pop
sub
xchg
push
(bad)
in
stos
cwde
xchg
into
dec
jl
push
jecxz
loope
and
scas
xchg
mov
lds
je
inc
aas
push
imul
rol
pushf
test
mov
repnz
cli
into
(bad)
inc
cmps
jmp
clc
call
(bad)
repz
mov
div
test
hlt
js
mov
cdq
call
addr16
std
les
jge
gs
dec
adc
ret
fsubr
mov
pop
mov
sbb
loop
fisttp
(bad)
mov
int
jle
in
cli
jle
fwait
xchg
mov
and
out
out
pop
jmp
sub
sub
lahf
jp
and
mul
xor
adc
fisttp
movs
cmp
and
mov
and
hlt
cmc
fidiv
sub
mov
mov
sbb
cld
sub
(bad)
call
mov
das
mov
jno
test
int
stos
repnz
mov
stos
aaa
mov
fisttp
cld
and
push
mov
outs
fisttp
sub
retf
sub
push
aas
daa
int
mov
xchg
jb
sub
idiv
push
sbb
imul
dec
mov
int3
sti
shl
ds
pushf
idiv
and
scas
mov
(bad)
cmc
jnp
cmp
stos
xchg
mov
xchg
sti
push
cmps
pop
cmp
sbb
ds
adc
mov
out
aam
cmc
ds
cmp
outs
pop
stos
jp
out
and
sub
repz
mov
cli
push
int
jns
repz
push
jne
icebp
push
push
or
fistp
iret
jae
pop
jg
mov
push
(bad)
popa
mov
cmps
out
cmp
in
push
div
mov
mov
push
jbe
rcr
push
cmp
clc
pop
fbstp
retf
cld
cmps
mov
inc
inc
cmc
mov
call
sti
aas
pop
sub
repnz
in
add
call
in
test
jg
stos
lahf
push
ins
sti
(bad)
test
scas
stos
jno
icebp
push
mov
xor
add
sub
xor
mov
shl
fcomp
xor
push
mov
mov
fstp
dec
mov
dec
pop
sti
fucomp
xchg
add
dec
scas
mov
idiv
dec
dec
ds
cwde
ss
loop
pop
push
push
fistp
mov
(bad)
sbb
loope
push
repnz
xchg
cmp
fidiv
retf
icebp
mov
push
neg
push
out
das
push
daa
mov
cs
lods
xlat
loop
dec
jg
push
cmp
loope
ss
xor
mov
addr16
add
xor
fdiv
int3
lods
xor
pop
jge
xchg
jnp
ja
dec
mov
pop
cmp
fistp
outs
js
inc
popf
fisubr
lock
xchg
and
adc
sbb
addr16
std
cmc
cmp
mov
aas
lock
mov
call
jbe
sahf
cmp
(bad)
int
jmp
or
adc
(bad)
mov
mov
jle
xchg
jp
jae
sar
xor
(bad)
retf
dec
adc
pop
cmps
jl
cmp
imul
pop
fdivr
daa
cld
(bad)
mov
(bad)
daa
sahf
aaa
mov
xchg
dec
or
jnp
cli
les
fidivr
fbstp
out
cs
lahf
pop
jge
das
pop
je
icebp
stc
jae
pcmpgtw
pop
repz
mov
fwait
dec
sbb
popf
and
enter
(bad)
lods
sbb
xchg
(bad)
int
jbe
(bad)
je
mov
(bad)
mov
jno
cld
mov
mov
xor
in
shr
neg
stc
jge
xchg
mov
fild
imul
add
into
cmc
in
mov
mov
outs
xor
mov
jge
(bad)
jl
stc
loope
in
stos
push
in
sub
stos
ja
pop
(bad)
dec
or
ss
pushf
aaa
in
(bad)
xchg
rcr
sbb
jecxz
push
inc
lods
dec
pop
adc
hlt
jl
repnz
xchg
jmp
pop
jle
push
ret
jecxz
mov
in
test
out
inc
dec
jge
cmp
xchg
inc
jne
xchg
(bad)
(bad)
push
lods
sbb
jmp
pop
imul
nop
stc
jno
clc
test
mov
in
xor
jge
rcl
cmp
jae
mov
or
jae
mov
mov
mov
lock
mov
cs
aam
out
fidivr
in
mov
jge
out
cld
fdivr
pop
scas
das
mov
aam
stos
sbb
test
movs
scas
aas
ins
jmp
je
sahf
dec
jnp
mov
rcl
jbe
sti
ss
mov
cmps
pop
mov
aam
stc
popa
repnz
xchg
fnsetpm(287
jnp
ins
iret
stos
push
jecxz
mov
pop
adc
pop
sbb
daa
cli
adc
mov
pop
loopne
imul
push
mov
in
jg
fstp
aas
in
mov
(bad)
mov
pop
dec
repz
outs
xchg
xchg
pop
cmp
out
cmc
jecxz
iret
out
or
mov
mov
mov
xchg
mov
dec
jno
leave
loope
scas
dec
jl
jne
lahf
js
jecxz
div
int
sbb
in
adc
mov
mov
cld
not
sbb
clc
cmps
shr
pushf
adc
mov
mov
push
fadd
retf
jl
out
rcl
lods
mov
mov
xlat
das
repz
imul
cmps
sbb
push
and
mov
int
mov
inc
stc
rcr
out
fimul
jge
out
fadd
mov
adc
sbb
or
push
jl
xchg
mov
ja
push
sbb
mov
dec
mov
jne
lahf
pop
scas
push
mov
sbb
mov
imul
mov
int3
xlat
pop
repz
div
mov
push
data16
addr16
retf
lahf
or
enter
ss
mov
jae
cmps
pop
sysenter
fnstenv
push
xchg
pop
jae
lods
cli
inc
aas
std
ror
mov
mov
in
adc
mov
test
pop
into
jge
sub
mov
dec
lahf
inc
lahf
fsub
jb
mov
out
push
jmp
lods
addr16
ds
ror
mov
pop
push
test
pop
shl
ret
pop
(bad)
pop
movq
aad
sti
rcr
xchg
hlt
mov
push
sahf
push
into
idiv
test
sbb
lock
mov
sti
ror
sub
sub
out
stos
push
mov
rcr
imul
out
and
cmc
pop
bound
xchg
mov
outs
sub
ror
or
aam
ins
into
mov
jge
rcl
mov
ret
sar
pop
pop
clc
repz
xchg
shr
ficomp
mov
cs
lods
jbe
out
cdq
les
mov
sbb
arpl
outs
pop
jne
(bad)
jge
cli
mov
lahf
arpl
test
mov
shl
jno
retf
jmp
outs
mov
loopne
push
dec
mov
xor
aas
jecxz
push
or
dec
mov
lahf
clc
pop
(bad)
fucomi
stos
(bad)
not
popf
cwde
clc
fld
nop
push
adc
cmp
rcr
ds
repnz
(bad)
adc
xor
mov
dec
cmp
outs
stos
enter
cmp
ss
pop
and
dec
mov
mov
push
push
mov
test
xchg
jp
aaa
out
xchg
popf
jnp
push
retf
dec
pop
ins
pop
jp
push
popf
mov
jae
adc
in
mov
pop
xchg
movs
fldenv
or
iret
push
fnstcw
mov
ja
out
fild
aas
or
hlt
rcl
(bad)
bnd
movs
iret
cmp
(bad)
out
int3
mov
in
lahf
pop
das
mov
pop
imul
mov
out
movs
push
adc
imul
(bad)
lods
ins
out
push
mov
(bad)
outs
(bad)
and
mov
shl
fild
xlat
imul
sbb
mov
cld
fisttp
ins
cmp
pop
int
in
mov
mov
mov
icebp
inc
in
sbb
mov
ror
cmp
xrelease
mov
mov
movs
jb
dec
fisttp
push
std
push
jge
fs
int3
arpl
push
mov
rcl
add
pop
popf
sar
pop
std
ror
pop
xor
(bad)
cmp
call
mov
data16
cmp
push
pop
jne
dec
fcmovnbe
or
leave
in
jmp
fdivr
jmp
mov
clc
push
xlat
(bad)
pop
cs
push
inc
pop
scas
cmp
rol
call
inc
popa
xor
psubsb
mov
mov
sub
sbb
sub
jno
mov
fidivr
ficomp
mov
ins
lods
mov
aad
je
lock
mov
xchg
out
sbb
mov
(bad)
pop
in
dec
sub
xchg
iret
jg
jmp
ret
shl
lahf
daa
cmp
or
push
push
mov
mov
jl
jns
jbe
in
retf
dec
dec
pop
jmp
cld
shr
dec
sahf
stos
into
ffreep
ins
mov
pop
dec
mov
sub
int
xor
mov
bnd
xor
js
mov
stc
dec
mov
ja
(bad)
sbb
in
sub
fcomp
pushf
xchg
mov
in
retf
shr
cmps
xchg
out
inc
fwait
xchg
aam
js
xchg
pop
mov
push
movsx
retf
cmp
aas
fistp
lods
repnz
jno
jl
icebp
dec
scas
or
idiv
mov
pop
lods
mov
jb
neg
push
(bad)
out
(bad)
pop
out
push
movs
xor
rcl
fcmovne
sub
aad
repz
ja
popa
dec
cmc
in
or
call
repz
sti
fucomip
xchg
jg
stos
inc
int3
test
jecxz
test
jne
lock
jle
xor
lods
ja
sub
push
test
out
popf
scas
in
lods
mov
in
(bad)
cld
xlat
adc
imul
rcr
fxch
mov
cmp
xchg
jl
call
sub
es
hlt
jnp
hlt
repz
fimul
scas
movs
inc
sbb
mov
xchg
stc
enter
dec
sbb
mov
int
out
adc
(bad)
cwde
imul
jnp
push
ja
mov
cld
dec
stos
shr
jmp
repnz
(bad)
mov
movs
fcmove
mov
cmc
sbb
loopne
nop
inc
pop
fistp
jmp
int3
jne
push
outs
dec
div
and
xlat
arpl
(bad)
outs
sti
stos
jp
je
loopne
(bad)
xor
pop
imul
push
out
pop
pop
jmp
es
push
pop
fisubr
ss
cwde
sbb
dec
hlt
or
arpl
xchg
stos
mov
push
repnz
or
mov
inc
imul
inc
mov
xchg
pop
sbb
push
jp
pop
enter
sbb
sti
jecxz
pop
jle
(bad)
push
js
lock
data16
mov
jp
hlt
repnz
sahf
ficomp
jg
aaa
jno
mov
mov
dec
push
sub
es
xor
stc
out
div
ja
jnp
cld
xchg
dec
mov
pushf
cmp
ja
mov
cwde
cwde
clc
mov
sti
mov
popa
pop
xchg
fnsave
lahf
sbb
or
fild
mov
das
mov
fild
jno
retf
into
jp
cli
fdiv
jp
cs
out
mov
cmc
jns
push
jecxz
cld
sub
cmps
in
cmps
mov
loop
push
retf
scas
push
mov
inc
clc
repz
mov
ja
jb
fcomp
ret
mov
or
sti
fadd
jg
pop
ss
(bad)
aam
loope
mov
les
dec
or
imul
cmp
pop
lock
sub
mov
pop
xchg
mov
cmps
and
out
push
int
sub
je
iret
xchg
pop
lds
mov
std
cmp
repnz
std
fdiv
outs
dec
jmp
jb
jmp
in
mov
je
scas
call
mov
pop
pop
jl
lods
jnp
sub
pop
mov
shl
mov
mov
icebp
int3
dec
pop
push
jbe
fmul
jle
(bad)
xchg
(bad)
sahf
pop
ret
jmp
lahf
mov
out
addr16
xchg
add
aas
or
sub
push
icebp
in
cdq
and
call
and
mov
jp
mov
in
sbb
inc
mov
inc
(bad)
loop
fidivr
inc
aas
stc
out
mov
jle
nop
or
cmp
lods
and
js
mov
xchg
pop
ds
mov
test
jmp
addr16
jae
ins
mov
cli
mov
lea
mov
adc
loop
outs
scas
mov
popf
jg
push
ds
and
cmp
call
xlat
fistp
neg
fwait
mov
cmp
jb
test
fidiv
daa
dec
mov
clc
icebp
mov
std
xor
pop
addr16
fwait
dec
popf
xchg
(bad)
and
pop
jne
out
mov
jge
jl
in
jecxz
sbb
mov
and
addr16
xchg
jnp
jae
ret
mov
mov
rcr
nop
mov
(bad)
es
cwde
push
xor
imul
in
xchg
mov
outs
jb
in
enter
mov
repz
pop
dec
mov
retf
ret
std
cmp
cli
(bad)
outs
mov
sbb
addr16
mov
dec
not
mov
aam
jp
mov
xor
push
lahf
(bad)
shl
xlat
cmp
xchg
out
jne
mov
jge
out
sub
and
adc
jns
mov
call
dec
addr16
sbb
jbe
sti
mov
out
(bad)
(bad)
in
mov
fwait
stos
pop
imul
xchg
in
sbb
dec
or
out
xor
mov
clc
shl
xor
push
lods
xor
mov
sub
icebp
fwait
inc
mov
jno
dec
xchg
mov
mov
and
in
imul
fcomp
leave
stos
out
sti
inc
movs
push
shr
sbb
jne
inc
mov
inc
ss
ins
push
jg
pop
stos
or
dec
int
outs
xchg
xchg
ins
clc
push
mov
xchg
(bad)
in
fcomi
idiv
push
jbe
ja
xchg
stc
retf
mov
add
ins
scas
(bad)
fisttp
pop
or
cmp
cli
btr
push
cmp
movs
ss
pop
mov
add
mov
adc
cmc
stos
(bad)
idiv
(bad)
sbb
ret
xor
jb
sbb
xor
jmp
fidivr
jno
fldenv
dec
xor
dec
push
xlat
lock
jg
or
movs
cmp
lea
pop
cs
int
push
stc
shl
retf
sbb
pop
jmp
js
sti
mov
and
push
cmps
outs
cvtps2pi
dec
mov
ja
jle
cmp
jecxz
scas
mov
mov
mov
jmp
cmc
pushw
push
cmp
in
mov
loop
loope
xchg
lahf
bound
push
es
cmp
dec
mov
and
or
imul
std
imul
iret
jmp
sbb
sar
int3
cwde
js
fstp
pop
les
out
sbb
mov
jb
fild
fisub
ss
in
cmps
cld
mov
loop
cli
dec
repz
setl
aad
repz
jnp
(bad)
frstor
(bad)
jmp
fnstsw
aaa
(bad)
cmp
ins
pop
retf
cmc
aaa
xor
in
fstp
repz
pop
mov
sti
mov
aad
in
mov
xor
mov
mov
aas
mov
std
lock
push
mov
cld
mov
dec
ins
test
ja
call
retf
xor
pusha
dec
push
mov
mov
ror
das
adc
push
(bad)
jmp
jmp
push
push
pop
fstp
sub
xchg
jl
push
jmp
aas
jle
pop
jecxz
xor
popa
aas
fld
jecxz
lahf
jmp
cmp
push
xor
ud0
xor
aam
mov
sub
mov
scas
loopne
std
loope
cmp
and
mov
rcr
aaa
idiv
(bad)
mov
mov
mov
jnp
mov
movs
fisttp
movs
sahf
mov
ja
lods
add
dec
adc
jmp
loop
mov
fisttp
fnsave
(bad)
hlt
(bad)
movs
outs
cmp
scas
aad
popa
mov
fdiv
inc
push
fs
cld
cli
mov
ds
push
out
int3
dec
inc
sar
aas
jne
sbb
sub
fcmovne
aas
call
iret
cmp
xchg
mov
and
mov
push
jmp
pop
outs
inc
cs
cmp
repnz
jbe
jno
int3
out
cs
jne
pop
std
pop
lds
ja
jle
ret
rcr
in
jecxz
jae
movs
(bad)
pop
je
xor
jmp
imul
pop
lock
mov
xchg
cmp
retf
ins
addr16
mov
add
scas
(bad)
das
push
in
(bad)
xchg
scas
mov
lods
jmp
jnp
jb
in
lock
push
jmp
sub
dec
mov
dec
das
mov
gs
mov
rol
(bad)
(bad)
(bad)
ja
fnstcw
mov
ins
pop
ds
and
icebp
out
repz
mov
xor
jno
icebp
sub
hlt
je
dec
mov
loopne
imul
cmp
mov
(bad)
(bad)
push
pop
pop
mov
(bad)
fs
jb
retf
fstp
shl
dec
sub
and
jmp
cwde
rcr
iret
aas
rep
out
jmp
ins
(bad)
rol
sub
pop
cs
fdivr
jae
xor
inc
iret
nop
std
daa
scas
fcomp
test
repz
int3
cli
stc
jne
jmp
push
ds
push
cmc
mov
ret
push
aaa
stc
sbb
es
cmp
add
add
or
je
push
sbb
dec
imul
xor
inc
iret
xchg
fisttp
popa
movs
pusha
stc
leave
push
ja
aas
jns
push
jmp
dec
repz
jg
jmp
cli
mov
daa
dec
repz
pop
lds
cmp
std
xchg
mov
mov
pop
mov
cli
clc
cs
cmp
aam
and
test
out
sbb
(bad)
lods
jl
adc
dec
imul
test
cmc
loopne
shl
(bad)
mov
mov
sar
mov
cmp
icebp
jo
sub
jge
push
ja
in
mov
popf
in
jae
ret
xchg
sub
xor
shl
stos
jbe
(bad)
mov
out
repnz
sbb
sub
in
imul
pop
daa
es
pop
mov
out
inc
imul
fst
fistp
ror
lds
ficomp
sub
adc
pop
cmc
lahf
xchg
cwde
cdq
aaa
in
push
paddsw
movs
stc
ins
dec
dec
retf
push
pop
mov
mov
or
retf
push
bsf
mov
(bad)
popf
aad
dec
cli
int3
add
rcr
mov
push
cmp
jno
xor
test
cmc
stos
scas
outs
cdq
aam
and
aas
fist
mov
pop
sbb
xchg
dec
adc
xor
sar
and
loopne
sbb
jmp
dec
cmps
jg
(bad)
fsubr
sar
test
movs
cmp
(bad)
dec
call
or
adc
ss
test
fdivr
int
add
aas
xor
add
cmps
pop
jmp
std
xlat
add
cli
fcmovne
call
(bad)
lods
pop
ror
ds
out
jmp
sub
out
lock
call
xchg
mov
cmc
hlt
jmp
in
clc
pop
mov
iret
in
loopne
inc
xchg
or
sub
pop
sbb
bound
push
rol
or
push
int3
mov
or
in
int3
and
xchg
mov
xor
add
(bad)
call
adc
xchg
xchg
ins
mov
add
daa
data16
sub
xor
lds
pop
fmul
loop
not
push
and
push
jns
add
mov
bound
add
inc
outs
adc
jno
out
add
es
or
mov
aam
fld
jns
js
adc
test
sub
(bad)
inc
ins
mov
mov
push
xor
mov
xor
daa
push
popa
adc
sbb
xchg
and
in
mov
icebp
adc
cmp
dec
mov
lahf
and
aam
xchg
enter
xchg
mov
pusha
pop
cmps
mov
cli
inc
push
dec
(bad)
and
push
adc
lea
(bad)
ds
cmp
sub
mov
adc
mov
add
and
dec
dec
cmc
inc
mov
push
inc
sbb
cmp
jno
js
sbb
add
mov
jmp
mov
dec
inc
sbb
cmp
jno
loop
leave
movlps
mov
pinsrw
pop
sub
xchg
out
inc
ins
mov
(bad)
fcom
cmp
jno
loop
les
stos
movs
aam
fisttp
xor
pop
and
xchg
gs
les
xor
dec
mov
fs
jns
jnp
jg
adc
xor
mov
mov
cmp
push
les
and
adc
or
lods
sbb
xchg
mov
mov
mov
les
(bad)
pop
pop
cmp
mov
jbe
(bad)
push
xchg
xchg
xchg
lea
sbb
sub
ins
les
sub
aaa
and
push
hlt
and
adc
sbb
sar
retf
jb
jno
xor
enter
adc
adc
adc
call
fcom
pop
sub
test
xor
aam
or
nop
mov
int3
mov
fs
sub
jne
mov
repz
lds
inc
cmps
inc
pop
sbb
in
pop
cs
jle
and
dec
das
aam
add
cmp
pop
into
(bad)
addr16
cwde
xor
pop
adc
inc
pop
xor
shr
rcr
dec
sbb
and
and
(bad)
into
ss
xchg
xor
jmp
lea
jmp
sub
jne
enter
loop
lods
xor
pop
xor
cmc
and
dec
add
and
shr
nop
push
pop
ins
or
sbb
inc
pop
sbb
sbb
pop
cmp
mov
adc
jp
in
test
int3
jmp
jecxz
jbe
sbb
xchg
xlat
xchg
and
ret
mov
cwde
xor
shl
jne
rcr
mov
imul
es
fld
push
iret
outs
and
add
mov
aas
or
and
cdq
test
call
mov
enter
inc
add
inc
mov
cwde
mov
push
and
(bad)
into
xor
addr16
dec
inc
ss
xor
pop
fstp
aad
ss
addr16
nop
sub
dec
jns
pop
(bad)
sahf
xor
js
lods
in
add
or
xor
sbb
fcmovnb
mov
enter
or
ins
aas
iret
call
jle
pop
or
push
mov
add
or
int
out
lock
fld
loopne
adc
mov
inc
jbe
lods
nop
pop
jecxz
imul
push
fldcw
retf
mov
fs
push
fldenv
fs
js
xchg
ins
xchg
cmp
scas
js
(bad)
in
sub
iret
mov
enter
add
push
sahf
and
jmp
dec
enter
adc
lods
adc
push
sahf
jne
cmps
inc
ss
addr16
cmp
or
addr16
xchg
stc
repnz
sbb
sub
loop
pcmpgtb
jns
adc
iret
jp
stos
sub
rep
aaa
mov
sahf
cmc
inc
push
into
mov
enter
xchg
loop
sub
(bad)
and
push
cmp
xchg
icebp
sub
pop
cmp
pop
jg
sbb
daa
sahf
gs
retf
mov
cmp
inc
(bad)
sbb
iret
je
xor
pop
and
jmp
mov
mov
pop
nop
sar
out
jmp
les
mov
sar
cwde
add
dec
repnz
cmps
mov
repz
popf
and
xchg
push
xor
out
pop
add
mov
cmp
xor
push
rol
sbb
sub
loop
les
aaa
mov
adc
and
dec
push
dec
push
ja
or
adc
(bad)
jg
sub
and
inc
int3
inc
mov
(bad)
sbb
aas
sbb
fwait
jo
aam
in
int3
(bad)
xchg
mov
pop
inc
cmp
into
pop
mov
test
out
nop
sahf
iret
mov
outs
cdq
retf
add
mov
sbb
sub
and
jns
icebp
adc
pushf
nop
into
jnp
les
inc
sub
iret
les
lds
aas
xor
jmp
inc
mov
and
jle
movs
jge
and
jle
aam
pop
xchg
or
lods
jl
xchg
ficom
mov
nop
mov
test
pop
dec
sub
pop
fwait
sbb
pop
rcr
in
lods
mov
or
dec
in
mov
loop
jne
pop
sub
or
call
mov
pusha
movs
pop
xor
jmp
arpl
add
mov
pop
xchg
inc
popf
je
mov
mov
sahf
int
jb
leave
loopne
cmp
or
adc
dec
in
inc
gs
fld
jns
pop
je
jb
addr16
inc
daa
and
xor
sub
mov
fs
nop
adc
push
mov
mov
mov
sar
inc
dec
stos
push
in
push
call
rcr
dec
dec
inc
jnp
mov
mov
xchg
jb
fsub
inc
in
in
int
outs
movs
and
faddp
dec
cmp
test
cmp
mov
jbe
jle
dec
arpl
daa
cmp
scas
cmp
jmp
dec
cwde
mov
xchg
lock
or
xchg
cld
into
mov
pusha
jle
pushf
xchg
das
ja
clc
xchg
in
cmp
or
in
mov
and
pop
test
and
pusha
fisttp
sbb
pusha
or
fstp
mov
(bad)
cmp
imul
ror
xor
inc
xor
enter
bound
int
in
sub
out
add
dec
cmp
add
mov
mov
or
inc
(bad)
fcom
scas
retf
call
ins
and
mov
mov
add
jcxz
xchg
and
lea
lods
jbe
ss
icebp
jbe
mov
repz
sbb
pushf
(bad)
das
cmc
mov
repnz
or
jg
cmp
mov
mov
cwde
bswap
rcr
mov
stos
rcr
ds
cdq
mul
test
jo
push
aas
jmp
jmp
xlat
rcr
add
daa
adc
xchg
test
xchg
adc
shl
pop
sti
retf
sbb
es
cmp
cmp
pop
gs
idiv
outs
and
mov
leave
dec
pop
stos
(bad)
mul
sub
cmp
xchg
js
fstp
ss
dec
sub
xchg
mul
lea
cmp
fwait
inc
mul
xchg
jmp
sub
sub
scas
mov
mov
sbb
leave
scas
mov
dec
fild
jbe
sub
and
fnstcw
cmp
sub
cmp
pop
mov
dec
sbb
push
lods
xchg
in
out
pop
call
xor
movs
add
jo
adc
or
xchg
test
nop
adc
add
dec
cli
xchg
imul
xchg
sub
pop
ficomp
jns
ror
popf
popf
lea
xchg
jnp
mov
jge
leave
push
and
sbb
into
cmps
xchg
mov
mov
dec
sub
inc
push
into
add
test
xchg
ins
mov
mov
dec
mov
mov
or
(bad)
mov
aas
mov
popf
fsubr
jbe
adc
mov
xchg
popf
fcomp
push
ffree
in
xor
fisttp
jbe
sbb
in
ins
mov
int
(bad)
out
jo
pop
jmp
dec
das
in
in
sbb
cmp
ds
pusha
push
mov
jl
retf
xchg
dec
mov
xor
xor
fdiv
or
adc
inc
mov
mov
adc
mov
add
fdivp
das
ins
jge
push
cmp
pop
fnstenv
sahf
adc
ret
lea
xor
sahf
mov
pusha
sbb
lods
mov
jno
xchg
mov
(bad)
push
xor
push
and
jmp
pusha
sbb
push
mov
dec
into
sbb
ficomp
xchg
sbb
mov
jb
in
or
and
mov
stc
ffree
push
add
dec
adc
xchg
and
mov
dec
and
sub
shl
add
loopne
sub
add
mov
jmp
retf
pop
cmps
pop
push
or
stos
lods
loopne
push
sub
or
sub
aaa
xor
xlat
outs
cmc
jo
aaa
repnz
adc
and
in
jge
sub
dec
adc
in
pop
jo
lock
adc
mov
shl
sbb
sahf
cmp
lahf
jns
fldcw
push
or
xchg
add
pop
jo
or
les
mov
ja
xlat
inc
cmp
outs
pop
dec
rcr
das
adc
cli
movs
mov
aam
pop
clc
mov
mov
ret
in
cld
loop
into
push
clc
lods
dec
cmp
or
pop
cmp
push
adc
cdq
shl
test
mov
test
push
scas
cdq
push
jmp
push
cmps
pushf
mov
leave
cmp
jmp
hlt
data16
loope
jno
fild
cmps
jge
xor
mov
sub
loopne
sti
fcom
adc
push
ins
or
(bad)
cmp
hlt
gs
pushf
loope
push
mov
mov
mov
cmp
popa
mov
enter
test
retf
test
push
sub
mov
fdiv
sti
mov
inc
sbb
movs
mov
pause
sub
push
xchg
mov
dec
and
jb
lods
das
jb
mov
enter
or
dec
sbb
inc
jmp
mov
inc
imul
adc
aad
xchg
sbb
sub
push
data16
(bad)
addr16
and
es
repnz
and
stos
xor
mov
and
push
lea
adc
push
jns
div
aad
std
cmp
mov
iret
xchg
jnp
or
cmp
push
cmp
mov
sbb
stos
scas
inc
push
sar
sub
sub
je
dec
sub
jb
pop
retf
(bad)
rcl
bound
mov
xchg
cmp
or
iret
xchg
sub
pop
iret
mov
mov
mov
je
int3
(bad)
and
adc
mov
xor
push
(bad)
jecxz
cmp
inc
pop
(bad)
icebp
sbb
inc
test
int3
jp
sti
push
fmul
out
push
test
jnp
in
mov
out
mov
dec
mov
inc
inc
sub
inc
mov
daa
fstp
ins
shr
ins
adc
lds
xchg
sub
cdq
push
sub
mov
lods
cdq
scas
ror
outs
int
cwde
pop
jmp
mov
addr16
popa
int3
bound
loope
mov
jl
imul
int3
ins
sub
and
outs
arpl
adc
or
push
ficomp
xor
stos
mov
cwde
sbb
or
pop
xor
dec
data16
pop
mov
mov
lods
sahf
test
mov
imul
cmps
cmp
test
jae
xchg
jge
jecxz
or
mov
scas
and
jle
pop
xchg
sub
or
fcomp
push
xor
ficomp
push
cmps
xor
movs
mov
test
push
hlt
mov
push
fmul
(bad)
fwait
cwde
fmulp
or
dec
mov
(bad)
mov
add
sub
inc
sbb
aaa
mov
xor
xor
mov
dec
loopne
mov
pop
retf
jl
jg
add
cwde
ins
pop
sub
movs
xor
sbb
or
mov
mov
jmp
pop
fwait
daa
dec
data16
push
cmp
adc
jmp
std
cdq
int
mov
xchg
leave
in
jbe
pop
ror
mov
retf
pushf
ja
ret
shr
dec
xchg
cdq
mov
ss
mov
jnp
mov
sbb
or
xchg
mov
retf
sub
xor
pop
jnp
retf
push
xchg
xchg
sbb
add
fdivr
rol
mov
jl
int3
shl
es
pop
cmp
jne
xchg
js
xchg
loopne
pop
loop
dec
push
pop
arpl
ror
push
adc
pop
cmp
sbb
pusha
loope
push
int3
dec
pop
stos
das
push
int
je
cmps
loop
int3
or
mov
pop
push
sar
mov
mov
dec
pusha
(bad)
cmp
pushf
enter
mov
int3
jle
dec
push
dec
bound
pop
sub
mov
adc
outs
cmp
jge
repz
pop
push
data16
(bad)
fidivr
mov
fwait
stc
in
pusha
cmp
(bad)
iret
popa
adc
ss
cmp
icebp
jo
shl
jns
pop
pusha
pop
fwait
sub
push
jno
jmp
ret
push
xor
gs
or
fwait
sub
les
fdiv
bound
shr
adc
cmc
adc
jg
xchg
jl
outs
nop
inc
and
dec
clc
dec
and
mul
or
adc
mov
(bad)
call
gs
mov
movs
dec
cmc
out
cli
clc
lahf
(bad)
call
cmp
aas
sbb
aaa
(bad)
jmp
pushf
push
mov
cli
(bad)
(bad)
out
sub
cmp
les
popa
cmp
stos
push
movs
sub
sbb
inc
retf
dec
movs
aas
xchg
dec
push
popa
jp
sbb
div
icebp
pop
push
inc
cmps
mov
and
dec
pop
mov
pop
test
sub
aad
ja
mov
push
or
mov
pop
iret
jecxz
fwait
test
sub
imul
dec
xchg
mov
xchg
xchg
or
dec
dec
adc
add
dec
std
out
popf
mov
push
fisttp
ss
push
sub
fisttp
push
xchg
dec
xchg
sub
sti
sbb
movs
push
mov
jmp
jmp
sti
out
loop
cmp
std
out
mov
out
push
fdivr
xor
cmp
dec
mov
inc
fwait
call
(bad)
out
sahf
or
jg
out
fild
ja
ds
stos
cli
and
ds
in
out
or
sar
cmp
inc
push
push
mov
push
push
cmp
inc
(bad)
imul
sbb
repnz
inc
adc
push
push
and
push
add
mov
and
bound
(bad)
pushf
mov
loop
xchg
mov
and
rcl
dec
shr
mov
dec
and
mov
imul
dec
retf
lods
mov
(bad)
jle
and
add
add
jle
jg
icebp
adc
and
(bad)
inc
jecxz
sbb
add
mov
hlt
push
dec
and
push
sahf
and
adc
jmp
outs
and
scas
and
repnz
adc
jge
add
cmp
pop
sar
mov
ret
xchg
movs
mov
push
vpshlq
pushf
(bad)
or
inc
rcl
mov
mov
sub
pop
and
shr
test
push
sub
xchg
(bad)
jle
push
out
(bad)
popa
test
or
jmp
adc
inc
repnz
add
repz
retf
xor
add
jp
push
test
pop
movs
enter
rol
and
sahf
mov
cmp
inc
lea
cmp
dec
repnz
sub
dec
jbe
nop
in
pop
add
sahf
adc
cmp
leave
mov
loop
or
out
lods
sbb
cmp
push
push
and
jae
push
xor
rol
sub
hlt
xchg
stos
test
repz
push
sub
in
stc
pop
stos
push
outs
imul
adc
jae
lods
fwait
call
and
stos
pop
jle
mov
add
xchg
ins
(bad)
push
in
js
sbb
inc
mov
test
loop
pop
lds
xchg
out
cmp
cmp
and
(bad)
dec
test
in
jne
ror
(bad)
and
xchg
push
lock
mov
dec
jge
mov
jno
xchg
jno
aam
adc
mov
pop
dec
pop
adc
icebp
push
fcom
stos
sbb
mov
mov
js
and
pusha
enter
jecxz
lds
(bad)
lods
mov
ffreep
mov
xor
imul
xor
pop
out
mov
shr
mov
fmul
mov
scas
pop
cs
int
enter
in
adc
sahf
je
and
ror
out
xlat
scas
cs
cdq
pop
pop
mov
mov
push
mov
bound
pop
retf
jp
dec
div
(bad)
call
inc
mov
adc
xchg
push
inc
push
xchg
or
sub
in
stos
fsub
or
push
push
sbb
inc
gs
xlat
test
mov
cmc
push
mov
fidivr
out
sbb
lds
mov
enter
neg
test
sar
xchg
enter
mov
sbb
mov
add
fprem1
nop
out
jo
imul
adc
outs
push
push
int3
xor
xchg
mov
jns
push
xor
mov
or
and
inc
cmp
inc
dec
dec
lahf
cmp
std
int3
dec
xchg
mov
push
int
sub
adc
enter
xchg
ins
out
dec
pop
mov
mov
jl
sub
cdq
cwde
into
repz
jno
leave
mov
or
dec
xchg
ins
idiv
lahf
xor
imul
cli
mov
enter
fst
lahf
push
scas
(bad)
(bad)
into
jne
mov
iret
sahf
cmc
leave
jb
add
scas
imul
jae
mov
inc
scas
in
(bad)
jge
add
stc
mov
and
clc
out
mov
aad
mov
mov
xchg
or
popf
out
sbb
aam
popf
out
xchg
or
movs
fcom
push
shl
xchg
out
outs
xlat
sahf
loopne
add
xchg
loop
push
test
daa
mov
xor
int3
jo
and
xor
aaa
inc
fst
int3
push
(bad)
imul
jo
xor
xor
(bad)
aaa
adc
loopne
push
sar
jb
push
in
addr16
inc
lods
loopne
add
ror
add
xor
fmul
das
nop
adc
std
cld
push
sub
enter
repz
fild
gs
out
mov
cmp
sub
or
jo
shr
(bad)
push
sbb
xchg
fld
fmul
movd
nop
lahf
inc
stc
dec
mov
mov
pop
in
xchg
pushf
mov
xchg
outs
test
sbb
(bad)
mov
clc
xor
imul
xchg
les
sbb
jb
cmps
movs
jl
jmp
rcr
mov
int
outs
mov
les
sbb
test
retf
add
das
jb
add
cmc
pop
out
sub
in
mov
inc
mov
dec
xchg
dec
jno
mov
cwde
jmp
dec
mov
inc
dec
jg
mov
stc
jg
jmp
mov
add
movs
stos
cmps
pushf
retf
mov
lahf
sbb
fdivr
imul
not
add
iret
push
cmp
add
pop
lods
mov
mov
or
outs
cmc
inc
lock
dec
and
mov
mov
cmps
pop
mov
mov
test
mov
push
das
add
xchg
mov
jge
rcl
jnp
shl
xchg
add
push
push
jmp
xchg
push
out
out
shl
daa
push
push
es
add
mov
stos
shl
ficomp
adc
pop
inc
call
cmps
mov
sub
sbb
sbb
mov
or
mov
adc
stc
sub
invd
pop
mov
mov
and
pusha
aas
loopne
adc
cmp
cmp
daa
ficomp
lock
pop
mov
dec
aam
jae
rcr
cmps
mov
inc
sub
ror
and
inc
ja
xchg
inc
mov
cmp
mov
add
and
add
or
xor
cmp
aad
add
bound
mov
ins
mov
iret
add
pop
dec
daa
and
mov
bound
lea
int3
and
lea
test
add
int3
movs
pop
and
push
jle
in
mov
inc
sub
add
mov
add
inc
mov
mov
xor
test
add
dec
xchg
dec
sub
retf
cmps
adc
jp
dec
inc
nop
jno
adc
add
pop
mov
cli
inc
sub
dec
(bad)
xchg
and
lds
pop
adc
pop
sar
inc
add
xchg
add
mov
mov
inc
pop
sub
or
and
sbb
xchg
mov
xor
dec
loop
jecxz
push
ror
imul
dec
xchg
pop
repnz
ficom
rcr
push
mov
xchg
dec
sar
jb
mov
mov
jno
loop
(bad)
fisttp
mov
push
and
inc
cmp
leave
fst
mov
ins
mov
icebp
mov
pop
mov
xchg
add
sbb
add
les
adc
out
in
mov
mov
push
and
ret
sub
and
inc
sub
repnz
(bad)
cmp
jge
or
xchg
and
sar
jge
xchg
and
sti
xor
add
jl
cmp
iret
inc
leave
push
leave
jns
or
dec
sbb
ins
and
xchg
not
xor
ins
mov
fwait
dec
es
aaa
xchg
inc
retf
cmp
mov
in
in
in
in
leave
pop
retf
mov
mov
xchg
and
stos
test
dec
push
hlt
push
ins
push
in
push
pop
push
cmp
cmp
mov
adc
mov
mov
sub
pop
in
(bad)
retf
xchg
jb
jb
jb
repnz
xor
lods
(bad)
fisttp
outs
(bad)
(bad)
mov
cmp
aad
xchg
fwait
mov
call
push
xor
mov
sbb
data16
or
push
lock
int
inc
push
imul
fsubrp
mov
sahf
jb
outs
call
jmp
pop
arpl
jmp
int3
inc
mov
out
xchg
(bad)
xor
jecxz
aas
add
or
mov
dec
dec
adc
fmul
ds
or
mov
xor
inc
ret
xchg
data16
sbb
and
aaa
dec
fild
dec
aam
jns
fsub
std
cmp
jp
xchg
mov
out
cld
jge
jl
std
pop
and
adc
scas
or
adc
adc
xlat
or
xchg
xor
inc
xchg
shr
jo
dec
inc
and
add
dec
jg
fs
mov
or
inc
xor
jne
stos
add
loop
aam
mov
and
sbb
cmp
dec
dec
(bad)
or
in
retf
mov
add
push
push
fcom
xor
and
mov
nop
(bad)
enter
mov
ss
jne
jne
aad
ret
xor
mov
inc
loop
iret
inc
movs
and
lahf
nop
xor
data16
xchg
push
and
lahf
das
stc
out
(bad)
stc
xchg
jg
jecxz
pop
lock
nop
sbb
les
ret
retf
xchg
loopne
xchg
test
or
sub
fistp
fs
out
pushf
out
call
enter
retf
xor
dec
fld
cmps
xor
hlt
mov
cmp
mov
ds
push
add
and
test
test
pushf
aam
jne
lods
mov
pop
(bad)
lahf
repnz
fwait
repnz
dec
(bad)
sbb
aas
pop
icebp
iret
sbb
es
imul
shl
not
call
out
mov
stos
stos
stos
fnstenv
mov
jmp
mov
and
aas
retf
data16
sub
stos
fldenv
movs
nop
movs
jl
dec
lahf
lds
inc
mov
push
mov
mov
fs
mov
add
rcl
dec
xchg
xchg
fs
lods
xor
stos
mov
leave
jg
inc
and
mov
sub
ins
cmc
stc
and
nop
push
pop
int
ins
mov
cmp
arpl
and
xchg
(bad)
shl
sub
rol
mov
inc
arpl
fwait
ror
mov
inc
arpl
fisubr
dec
scas
dec
dec
pop
jmp
pop
cmp
test
fst
rcl
ins
ss
sar
xchg
mov
add
in
add
gs
test
ss
inc
addr16
outs
gs
popf
js
fidivr
aas
xor
outs
rcr
test
popa
sar
jno
lds
nop
(bad)
xor
cmp
add
push
or
and
into
imul
sbb
or
ins
rol
jg
les
mov
hlt
or
call
mov
and
outs
aam
add
int
idiv
sub
fs
or
push
xchg
(bad)
nop
xchg
cmps
aaa
xchg
dec
pop
imul
inc
inc
jno
jle
xchg
pusha
xor
adc
test
mov
xor
and
aas
shl
outs
sub
dec
mov
popf
inc
fild
adc
(bad)
test
popf
mov
aam
(bad)
push
rcl
add
ficomp
pop
loopne
test
in
dec
xor
jecxz
add
sbb
adc
push
sbb
dec
cmp
retf
mov
mov
fidiv
addr16
loop
sar
aaa
sub
dec
mov
sbb
pusha
add
inc
inc
mov
mov
fwait
lods
fsub
sbb
jno
pop
js
mov
movs
cwde
pusha
add
ss
xlat
call
inc
pop
pop
inc
daa
fild
inc
dec
cmps
push
cli
push
stos
or
sar
pushf
fldcw
pop
push
mov
outs
enter
ret
push
scas
iret
xor
jns
out
outs
sbb
mov
mov
das
sub
push
jge
xchg
(bad)
xor
dec
ret
push
cmp
xchg
jmp
pusha
jmp
stos
dec
shr
sub
sbb
or
mov
pop
push
xchg
xlat
mov
sbb
(bad)
push
jne
fwait
arpl
(bad)
fisubr
arpl
xor
ficomp
inc
ins
xchg
dec
addr16
mov
mov
rcl
xchg
stos
mov
dec
sub
inc
call
into
pop
fistp
inc
in
xchg
lods
aam
inc
sahf
xchg
fwait
popf
ins
mov
xchg
inc
push
in
(bad)
nop
cld
xor
movs
repz
inc
add
jl
jo
mov
jge
mov
(bad)
(bad)
mov
push
mov
sbb
xchg
sub
jmp
cmp
mov
sti
sbb
push
pusha
mov
jb
jmp
cld
fwait
ret
sbb
sub
and
add
in
es
rol
sbb
ins
push
push
sbb
push
jecxz
cmp
in
xchg
or
gs
xor
jmp
sbb
xor
bound
fcom
dec
mov
stos
aaa
cmp
or
xor
add
pop
mul
push
(bad)
data16
mov
in
int3
test
lds
adc
cmp
rol
mov
pop
ds
in
jae
(bad)
adc
in
xchg
sbb
mov
dec
fild
subps
imul
mov
sub
pop
or
pushf
out
mov
outs
and
pop
test
lea
cmp
mov
sahf
fadd
dec
sub
mov
push
or
or
jecxz
xchg
rol
adc
mov
in
inc
and
lock
jg
add
inc
mov
sbb
popf
lods
out
nop
jmp
mov
pop
aaa
jne
sub
loopne
fsub
xchg
xchg
shl
mov
outs
loopne
ss
cwde
fs
addr16
iret
test
pop
mov
sub
cmp
add
xchg
into
and
push
push
xchg
and
cmps
jnp
in
ret
add
and
sbb
dec
lods
into
call
sbb
mov
add
retf
mov
mov
mov
sbb
push
jmp
and
inc
xchg
btr
xchg
bound
ret
popf
shl
jne
jmp
sub
or
pop
movs
ss
add
ret
pop
sbb
jmp
dec
sbb
dec
ins
nop
adc
jg
mov
push
(bad)
sbb
fs
adc
cs
jns
push
mov
add
rcr
les
fisubr
xor
repz
xor
outs
xor
pop
scas
or
sbb
outs
ss
push
(bad)
dec
dec
sub
fnsave
shl
cld
loop
mov
dec
push
and
inc
les
call
jne
into
adc
out
and
mov
dec
loopne
adc
repz
xchg
je
sbb
rol
inc
dec
and
fadd
push
xchg
and
movs
cmp
push
inc
adc
adc
and
mov
mov
mov
mov
xchg
adc
add
out
pop
inc
in
add
mov
test
inc
add
mov
cs
inc
dec
mov
xchg
xchg
clc
inc
ins
push
loop
and
mov
mov
push
add
or
add
sub
dec
adc
and
shr
add
dec
dec
test
xor
(bad)
lock
mov
sub
mov
lea
mov
mov
imul
dec
mov
mov
push
dec
cld
pop
loop
(bad)
mov
sub
dec
adc
loope
cwde
movs
and
xchg
enter
adc
mov
mov
test
and
mov
dec
adc
stos
and
jno
adc
mov
mov
movs
and
or
mov
cmps
and
or
or
add
and
rcl
xchg
add
dec
or
adc
mov
sub
sahf
pop
inc
pop
sbb
cmp
test
imul
adc
(bad)
jp
push
inc
jnp
pop
repz
mov
xchg
js
outs
mov
es
outs
mov
sbb
enter
cli
mov
fwait
and
lods
imul
or
stos
xchg
out
and
mov
sti
jne
sub
pushf
test
test
xor
jg
dec
cmps
jg
dec
outs
retf
xor
test
outs
loop
dec
mov
imul
cmp
cmps
shr
les
scas
lea
push
jbe
std
jp
add
sbb
lea
mov
mov
xor
call
addr16
or
or
adc
ja
adc
test
xlat
jo
into
das
call
test
sub
mov
in
push
mov
dec
mov
xor
mov
or
cmp
adc
sbb
inc
push
(bad)
stos
jecxz
aad
enter
loop
mov
lds
jecxz
sub
popa
cmp
jo
add
sar
push
ins
in
loopne
ror
bound
pop
in
cmps
add
push
sbb
pop
pusha
fwait
mov
pop
sub
push
cmp
cmps
sub
cli
push
add
push
adc
cmps
mov
push
push
mov
dec
retf
cmp
pushf
xor
add
xor
lods
xchg
mov
pop
pop
sub
push
xchg
mov
cli
cwde
mov
jno
in
cwde
push
div
inc
jmp
aaa
mov
ins
jb
out
pop
mov
fisubr
sub
dec
push
leave
data16
popf
push
sbb
pop
xabort
repz
test
jo
and
push
data16
in
xor
mov
loope
inc
scas
pop
mov
adc
ins
test
lds
add
push
pushf
add
lahf
jle
retf
mov
into
pop
(bad)
push
jecxz
rcl
sbb
(bad)
cmps
and
imul
dec
mov
je
pop
pop
int3
pop
cld
ins
inc
inc
and
cmp
inc
push
inc
std
jne
xchg
(bad)
and
mov
dec
les
jo
jo
cwde
inc
call
lods
test
dec
cmp
in
fmul
cmp
leave
mov
push
or
repz
pop
xor
push
jnp
jmp
fist
add
sub
mov
sbb
and
inc
popf
sub
test
mov
mov
adc
pushf
inc
(bad)
sar
in
aad
xor
scas
dec
gs
cli
push
push
outs
loop
and
mov
(bad)
(bad)
(bad)
repnz
cmp
fwait
mov
jg
add
jle
sbb
push
imul
dec
pop
fwait
sub
push
into
jns
cmp
sbb
lods
pop
mov
popf
mov
out
jp
out
fwait
or
int
ja
xor
jecxz
xlat
sbb
aam
sub
je
inc
ficomp
pop
mov
or
xchg
cmp
rcr
mov
popa
push
mov
ficomp
jge
xchg
ins
xchg
test
fidivr
mov
jmp
out
and
jp
mov
push
sub
xchg
repnz
sbb
fucomip
loop
(bad)
in
mov
stos
shl
push
jmp
mov
jo
out
or
rol
jp
fadd
int
lods
int3
push
(bad)
jno
inc
jge
ins
ins
xor
mov
cmps
cmp
loope
iret
mov
mov
mov
jge
imul
out
loopne
mov
out
jo
lds
pop
bound
or
mov
call
add
mov
loopne
jp
inc
sub
outs
or
popf
xlat
test
aaa
push
push
repnz
xchg
mov
xlat
cmc
out
cwde
js
mov
cwde
repz
sbb
retf
jl
inc
cmp
jg
pop
sub
dec
outs
jl
mov
xchg
(bad)
out
pop
les
loopne
xor
in
sbb
jo
fbstp
mov
shr
cmp
mov
push
enter
mov
adc
shl
out
or
sbb
xchg
in
pop
cmp
push
mov
jl
hlt
movs
movs
adc
mov
fdivr
fisttp
xchg
pop
xor
inc
and
push
pop
test
xchg
push
sub
xchg
push
out
add
in
sbb
cmp
out
call
popf
push
popa
jns
rcr
dec
(bad)
jle
or
sbb
imul
out
xchg
sub
fucom
ins
push
pop
sub
dec
ss
cdq
add
push
sbb
inc
(bad)
ins
lahf
hlt
in
lea
pushf
clc
add
add
jmp
icebp
pop
popf
push
xchg
not
ss
in
hlt
fiadd
jecxz
sbb
mov
out
push
mov
xor
out
push
outs
leave
ja
dec
nop
sub
jp
push
and
push
int3
xor
mov
std
pop
xchg
and
mov
add
or
ins
(bad)
jno
mov
xchg
sub
push
sub
adc
rol
cli
stos
or
or
xchg
mov
jmp
dec
out
jl
jecxz
popa
jnp
out
popf
fist
sub
xor
mov
xor
xlat
cld
gs
scas
mov
loope
dec
jl
mov
ins
inc
add
fnstsw
nop
rcr
sbb
pop
int3
aam
pop
repz
push
xchg
xchg
lock
out
popf
fsubr
lods
jmp
fnstcw
pop
xor
pusha
pop
shl
and
cld
test
mov
jns
icebp
int3
pop
dec
movs
mov
pop
not
cmp
out
jge
stos
das
leave
sbb
or
mov
adc
xor
sub
bound
mov
or
test
test
add
adc
inc
mov
push
sub
mov
push
clc
ret
add
cmp
test
loope
sbb
mov
and
popa
xchg
nop
test
clc
add
cmps
mov
dec
mov
sub
movs
mov
jno
pop
adc
je
rcl
add
das
xor
rol
push
test
dec
gs
retf
push
inc
sbb
inc
inc
stos
xor
out
push
sub
xchg
je
add
mov
ret
and
push
dec
sbb
dec
loope
xchg
and
loopne
or
test
sub
add
cmps
pop
push
inc
add
inc
dec
jmp
cli
imul
mov
push
pop
aaa
dec
loope
cmp
and
xchg
cld
push
retf
loope
sbb
dec
mov
xor
adc
inc
or
pop
push
sub
test
jp
nop/reserved
add
pusha
mov
add
retf
movs
pusha
cmp
aam
xchg
mov
push
sar
or
adc
sar
dec
sar
mov
push
or
push
sub
stos
push
pop
jnp
es
pop
mov
or
push
icebp
cli
mov
sbb
mov
inc
je
pop
loopne
add
(bad)
mov
lods
(bad)
cwde
or
sbb
or
data16
adc
xor
add
cmp
jmp
test
push
pop
pop
cwde
pop
test
mov
aam
adc
retf
popa
mov
inc
test
add
push
pop
sbb
jp
fidiv
mov
ins
xchg
cmc
push
mov
or
mov
mov
xchg
mov
rcl
add
dec
sbb
cmp
jmp
movhps
movs
call
rcl
in
es
sub
js
in
leave
pushf
repnz
movs
xor
sbb
dec
test
mov
test
xchg
mov
mov
mov
dec
int
leave
sbb
inc
stos
in
sub
cmp
or
clc
test
rol
dec
push
mov
and
jl
add
pop
lods
cmps
ss
inc
xchg
adc
rcl
mov
push
xor
inc
test
jg
test
loop
rcr
jmp
jecxz
add
adc
in
add
add
ret
ret
jmp
mov
and
add
and
push
pop
pop
mov
leave
add
inc
fist
cmp
in
imul
sbb
adc
adc
xor
sbb
fdivr
xchg
cmp
rol
push
cmp
pop
es
nop
adc
mov
sub
jb
jl
(bad)
rol
jge
daa
addr16
hlt
push
or
cmps
mov
sbb
stos
mov
or
dec
rcr
test
test
imul
mov
mov
sbb
dec
jmp
mov
lea
push
inc
retf
rcl
mov
popf
mov
jl
cli
or
jno
sub
mov
push
pop
mov
mov
iret
sti
call
xor
adc
mov
jp
adc
into
popf
dec
clc
mov
push
push
add
(bad)
and
inc
cmp
or
sub
jnp
loopne
test
aam
retf
cld
add
mov
inc
test
jnp
dec
enter
jnp
popa
dec
mov
pushf
int3
jp
mov
mov
cmp
or
repz
and
adc
push
sbb
cmc
hlt
stos
scas
les
mov
sbb
cmp
ds
xchg
adc
inc
pop
pop
sub
push
xchg
add
retf
xor
cmp
fmul
scas
mov
aam
jg
pop
sbb
mov
ds
ret
sub
sbb
fcom
add
and
mov
test
add
mov
sbb
pop
rcl
js
in
imul
jo
pop
mov
out
ficomp
test
pop
imul
je
and
pop
loopne
and
dec
arpl
ror
out
and
push
jb
loope
cmp
fcomi
sub
and
rcr
shl
cmp
sub
test
pop
add
ss
xchg
xchg
push
addr16
sub
add
and
adc
int3
pop
sub
loop
push
adc
push
xchg
adc
mov
xor
adc
jg
loopne
push
lods
xchg
push
inc
pop
mov
adc
aad
xor
push
sbb
jns
stos
aad
inc
mov
inc
mov
mov
push
xchg
(bad)
jne
jmp
sti
pusha
or
push
in
adc
adc
xor
scas
or
pop
jo
jne
dec
sbb
push
retf
outs
cmp
add
jmp
stos
mov
sub
dec
mov
sub
mov
inc
ror
lods
jmp
add
rol
push
stos
or
fs
push
movs
dec
add
lea
mov
add
aas
cmp
mov
test
and
pop
dec
es
rcr
sti
int
call
sub
xor
sub
ret
mov
rcl
loope
dec
push
or
xchg
xchg
ficomp
push
jp
inc
test
cli
nop
jae
add
pushf
mov
cdq
or
rol
cld
add
movs
mov
cmp
mov
dec
push
mov
and
mov
mov
or
sub
adc
and
and
adc
push
add
scas
jl
adc
test
mov
call
xchg
pop
pop
mov
jmp
mov
jp
shl
movs
xchg
sub
push
retf
cmp
jo
in
rcl
add
jbe
outs
sbb
mov
xor
sbb
push
mov
dec
repnz
and
or
scas
pushf
outs
cmc
jb
iret
jmp
arpl
push
jne
sbb
in
xor
mov
sub
jnp
ja
push
dec
and
hlt
in
adc
add
out
and
pop
hlt
(bad)
or
dec
xchg
add
fcom
or
rcl
stos
repnz
call
mov
xchg
jo
les
pop
mov
mov
inc
loopne
test
push
jno
pop
mov
dec
popf
shl
ret
outs
es
xchg
pop
and
popa
pop
push
mov
movs
je
jl
mov
sahf
adc
push
or
jg
les
xchg
dec
and
mov
xchg
aas
jns
(bad)
jae
xor
push
ret
xchg
pop
adc
jecxz
stos
xchg
or
mov
sbb
les
xor
xor
sbb
add
or
jmp
pop
push
adc
jecxz
or
adc
mov
xchg
and
jge
into
leave
mov
stos
movs
add
jmp
shl
loopne
push
cmp
pop
push
loop
push
jo
push
(bad)
call
sbb
push
or
pop
cmp
jns
outs
pop
add
add
pushf
call
repz
rol
or
loop
jge
cmps
pusha
setge
bound
add
and
jmp
sub
xchg
cmp
ret
out
lds
or
mov
es
leave
sar
rol
cmp
pop
xor
je
lea
xor
loope
mov
pop
retf
lea
jno
out
je
jge
dec
ror
aas
jp
push
pop
fadd
mov
fdiv
or
push
leave
scas
add
sbb
xchg
inc
lds
xor
mov
ret
sub
sbb
lods
jo
(bad)
lods
sbb
rcl
xchg
cwde
pop
fst
lods
mov
std
shr
ja
pop
outs
popa
popa
js
out
or
dec
push
out
mov
or
add
outs
je
(bad)
stos
sub
pop
loope
pop
dec
mov
in
xor
lahf
test
pop
add
sub
push
jge
lods
add
sbb
fsubr
mov
inc
rol
cmp
gs
movs
hlt
adc
ret
jge
pop
out
xchg
pop
pop
movs
aaa
xchg
or
push
bound
cmps
or
sub
push
push
clc
push
fwait
mov
and
or
outs
nop
xor
std
mov
jmp
shr
xchg
inc
lods
or
mov
dec
and
pop
sbb
adc
fisubr
mov
call
adc
mov
lods
les
adc
arpl
ffree
push
sub
jmp
sbb
xchg
lock
and
xor
cmc
add
or
bound
sahf
sub
xchg
push
pop
sbb
(bad)
dec
sahf
jl
dec
push
xchg
out
nop
outs
dec
bound
add
pop
sbb
pop
pslld
(bad)
mov
jns
xor
repnz
sbb
cmp
xor
bnd
sbb
inc
rol
(bad)
dec
adc
cs
sbb
mov
cdq
nop
xor
mov
mov
(bad)
mov
addr16
jge
lods
or
pop
mov
xchg
fwait
mov
fisub
pminub
xor
pop
sbb
movs
ins
lock
scas
mov
jg
aam
jns
sub
sub
mov
sbb
pop
retf
fsubrp
call
ficom
ror
mov
sub
inc
push
ins
or
push
(bad)
push
mov
jecxz
lock
add
jmp
xor
and
test
mov
xor
cdq
pop
pushf
mov
outs
mov
fwait
inc
xchg
cmp
cmp
jnp
sbb
xchg
cmp
mul
in
fidiv
scas
xchg
inc
xchg
cmps
mov
mov
mov
push
ss
fisttp
lds
xor
xchg
xchg
xchg
xchg
jae
pop
js
mov
or
je
mov
lock
ins
pushf
imul
or
push
fsub
sbb
push
into
pop
call
cmc
cmp
push
ud0
or
in
and
xor
mov
cmp
out
push
dec
lea
call
std
dec
fwait
call
scas
std
scas
imul
cmp
lods
inc
(bad)
mov
aaa
retf
lock
fsubr
arpl
mov
popa
cmp
fldenv
xchg
xchg
mov
dec
and
xchg
std
dec
add
cld
push
(bad)
into
jl
ja
int3
lock
mov
mov
mov
jo
ja
lods
mov
adc
loopne
push
cmp
jne
jecxz
bound
jp
jge
xchg
pusha
repz
ret
adc
popf
inc
aad
cmp
mov
or
mov
lods
or
lods
clc
jle
cwde
cmp
shl
push
fs
dec
popa
fwait
mov
scas
xor
fistp
push
sbb
scas
and
fbld
aas
mov
bound
or
inc
mov
pushf
mov
inc
shr
pushf
xor
shl
adc
cmp
movs
inc
cli
and
adc
sub
push
mov
or
test
inc
add
pop
jns
xchg
inc
adc
ror
jg
push
scas
bound
lods
jns
cdq
jae
sbb
sti
(bad)
stc
(bad)
cmp
data16
cdq
xor
cmp
jp
adc
in
inc
cld
cmps
(bad)
mov
xor
(bad)
push
mov
pop
dec
push
dec
(bad)
js
sahf
fdiv
aas
sahf
mov
fnsave
mov
shl
outs
ficomp
mov
jle
xor
mov
cs
adc
jle
out
mov
sbb
cmp
xchg
hlt
sub
and
push
shl
test
lods
(bad)
mul
xor
dec
dec
hlt
and
pop
or
inc
dec
or
cmp
push
cld
xchg
inc
cli
in
or
sub
jle
jl
xchg
hlt
pop
jp
xchg
sahf
mov
mov
stc
push
mov
imul
fidivr
cmps
lock
ret
sub
jge
sbb
imul
mov
mov
jmp
adc
pop
fs
cmp
sbb
mov
out
jl
inc
sbb
and
imul
pusha
sub
xchg
arpl
xchg
and
inc
sahf
adc
jnp
jno
out
iret
xchg
jns
xchg
pusha
push
cmp
es
popa
push
sub
and
int3
mov
paddd
xchg
imul
pop
push
sbb
call
data16
rcl
in
clc
add
add
push
and
(bad)
nop
aas
dec
call
push
pop
and
cmps
retf
and
call
jmp
sbb
test
sub
jl
mov
cmp
pop
push
in
mov
mov
in
add
inc
mov
inc
inc
sbb
sub
xchg
gs
xchg
mov
inc
jmp
cmp
popa
sub
or
push
dec
push
test
and
ficom
and
sahf
xchg
outs
arpl
mov
cld
push
jle
fadd
addr16
add
cmps
fnsave
dec
cwde
fwait
imul
mov
sbb
sub
in
sbb
or
jno
clc
push
cmp
rcr
fwait
icebp
xor
xor
mov
dec
xchg
enter
inc
outs
mov
jno
adc
out
call
jmp
add
mov
dec
fadd
lds
in
sub
dec
call
shr
xchg
stos
movs
pop
jl
adc
je
aaa
pop
popa
aam
adc
out
jp
arpl
add
imul
and
jo
cmp
sbb
je
dec
loopne
pop
lds
mov
outs
leave
fldenv
jp
dec
cmp
push
push
or
aas
call
adc
xchg
pop
or
ins
ret
sbb
lods
add
jp
imul
xchg
pop
imul
push
jno
dec
(bad)
sub
add
cmp
jbe
pop
sub
add
lods
js
cmps
dec
pop
mov
ins
sub
pop
call
loope
pop
pusha
mov
xchg
(bad)
cmp
xchg
sbb
inc
aas
fs
stc
nop
push
jb
(bad)
mov
andnps
lahf
cmp
out
ja
xor
ins
sub
push
sbb
mov
dec
xor
xchg
lds
mov
mov
addr16
lods
push
adc
sbb
pusha
ret
pusha
das
inc
adc
rcr
xor
mov
sbb
ss
pop
cmp
(bad)
jae
es
push
pop
shr
stc
inc
and
sbb
and
xor
pop
(bad)
xchg
scas
gs
jmp
aas
push
mov
(bad)
xchg
scas
mov
lahf
fstp
xchg
scas
pushf
lahf
pop
fisttp
cld
pop
in
dec
in
pushf
in
cmp
imul
pop
jle
xor
mov
retf
mov
clc
xchg
retf
iret
ins
(bad)
dec
sbb
imul
jle
repnz
repz
imul
dec
das
jecxz
fchs
inc
(bad)
loope
sub
aas
push
mov
sbb
sbb
lock
ss
mov
cdq
in
xor
xor
(bad)
or
test
mov
add
pop
cmp
pushf
or
mov
loope
inc
clc
or
iret
cli
or
push
push
adc
hlt
xor
shl
inc
mov
cmp
sub
or
mov
stc
imul
out
and
rcr
bound
js
imul
mov
stos
jb
dec
add
pop
xchg
leave
sar
and
lahf
out
add
pop
js
sub
fidiv
jae
das
mov
push
and
test
xor
mov
adc
pusha
cmp
mov
pop
inc
add
mov
adc
jmp
push
sbb
pop
jmp
push
neg
mov
dec
sub
mov
out
pop
jne
add
aaa
in
shr
xlat
movs
int3
aas
inc
mov
xchg
dec
push
pop
cmp
jo
xchg
push
mov
cmc
mov
mov
out
xchg
loopne
mov
mov
xor
scas
stos
and
and
outs
push
js
add
dec
xor
mov
push
test
pop
sub
lds
(bad)
iret
ins
out
xchg
stc
add
pop
cmp
(bad)
out
xchg
fistp
dec
out
sti
popf
jecxz
cmc
les
sub
add
(bad)
stc
ja
shl
xchg
dec
dec
cmp
cmp
fcmovb
dec
fidiv
push
sbb
int
jmp
retf
mov
loop
loopne
iret
lods
inc
cmp
in
push
(bad)
mov
push
mov
lods
add
and
ins
cmp
jmp
inc
jno
jmp
sub
mov
pop
enter
sar
outs
xchg
adc
sub
jp
mov
in
xchg
icebp
push
test
mov
cmps
int
pop
sbb
mov
xlat
dec
cmp
cwde
shl
mov
mov
dec
lea
aas
or
sar
imul
(bad)
bound
pop
inc
jnp
add
dec
pop
pushf
leave
xchg
jg
(bad)
dec
data16
cmp
mov
jl
mov
dec
push
(bad)
movs
pop
inc
inc
mov
test
sub
pop
or
jno
sti
loopne
clc
dec
mov
jns
mov
xchg
adc
out
xchg
sar
xchg
ds
loopne
hlt
and
mov
popa
in
fst
nop
or
daa
pusha
not
rcr
inc
mov
pop
push
or
in
jmp
push
push
dec
mov
adc
movs
add
or
mov
add
push
jle
stos
div
loope
data16
jg
(bad)
mov
retf
clc
retf
push
or
iret
test
add
pop
push
jns
push
dec
repz
push
jns
retf
push
jns
mov
jno
sbb
ja
fs
stos
ret
mov
jo
and
inc
cmp
pushf
mov
js
jo
mov
adc
shl
fsubr
sub
pop
and
mov
mov
jecxz
mov
int
std
js
sbb
jbe
and
in
jns
inc
xchg
inc
jg
fnop
ja
pop
icebp
js
xchg
dec
clc
or
cmp
cmp
(bad)
cmc
jle
loopne
cmp
adc
mov
cmp
mov
hlt
sbb
nop
or
pop
xor
push
add
std
into
loope
int3
mov
xchg
popa
mov
dec
dec
fadd
pop
test
cmp
pop
pop
push
(bad)
ins
out
ret
xchg
scas
dec
mov
dec
icebp
push
xchg
xor
or
sbb
add
sbb
(bad)
shl
call
push
push
adc
fs
jo
and
mov
out
es
sbb
push
stc
pop
mov
sbb
mov
inc
stos
mov
dec
imul
cmps
ins
sbb
adc
(bad)
fsub
push
mov
xchg
leave
mov
xchg
cli
fstp
and
xchg
dec
dec
ret
test
lods
sbb
shl
xor
add
gs
cs
sbb
pop
gs
dec
and
ins
push
and
arpl
sbb
ins
xchg
mov
push
cdq
fsubr
pop
mov
mov
jl
adc
loopne
xchg
sti
nop
bound
(bad)
retf
mov
mov
dec
or
adc
xchg
add
mov
cld
test
pop
shl
js
cmp
cmp
pop
add
outs
push
sub
popa
jno
sti
xor
ds
mov
mov
repz
jne
and
push
sbb
ins
xchg
sbb
push
stc
push
test
or
loope
out
inc
stc
mov
mov
pop
xchg
cmp
xchg
mov
xchg
fdiv
cmp
out
inc
ss
stos
sbb
sub
add
cmp
mov
inc
cwde
call
(bad)
rcl
movs
popa
ds
(bad)
jge
cmp
stos
mov
cdq
jl
(bad)
lahf
in
push
outs
js
cmp
sub
cmc
lods
mov
push
punpckhwd
sbb
clc
jl
jl
in
cmp
sub
jle
in
push
jno
jns
add
mov
jno
push
adc
jmp
adc
in
pop
cmp
(bad)
das
pusha
push
or
dec
int
xchg
(bad)
and
xchg
fwait
and
or
mov
dec
cmp
movs
call
add
cmp
pushf
inc
dec
fs
push
lahf
push
call
jg
sub
lds
inc
loop
dec
(bad)
sub
mov
sub
(bad)
pop
pushf
je
les
and
jb
jle
aaa
mov
sub
bound
rol
mov
ds
mov
xchg
ret
call
les
xchg
adc
hlt
dec
dec
inc
jge
adc
mov
jb
call
mov
loop
adc
out
dec
mov
ins
xchg
sub
jbe
(bad)
nop
sub
in
jp
sbb
in
cmc
xchg
and
(bad)
aaa
pop
dec
aaa
fidiv
push
xchg
dec
scas
xchg
int3
into
fadd
test
or
stc
xchg
inc
ja
ins
xor
dec
fdivr
inc
xor
mov
mov
imul
idiv
pop
and
xchg
sbb
dec
pop
pop
fwait
mov
iret
xor
outs
push
in
movs
jp
not
pop
pop
ss
xor
push
call
int
es
in
clc
or
mov
sbb
arpl
and
jl
call
ret
push
gs
out
push
jmp
das
mov
rcr
mov
dec
xchg
dec
int
cmp
pop
inc
cld
imul
in
cmp
add
or
sub
mov
imul
aas
pusha
div
xchg
add
add
loop
cld
outs
sub
and
mov
xor
fisub
cdq
inc
outs
sbb
and
in
out
movs
pop
rcr
or
pusha
in
pop
ss
das
or
(bad)
daa
imul
into
fs
bound
fisttp
xchg
ja
movs
movs
mov
cmp
loopne
pop
jmp
dec
or
push
xor
and
mov
cmp
imul
aad
push
mov
mov
test
cmp
lods
add
retf
mov
push
mov
imul
inc
lahf
xchg
jo
cmp
sub
js
xor
ret
fnstsw
cmp
xchg
add
rol
mov
out
shl
stos
scas
sub
push
mov
xor
ins
mov
fbld
movs
sub
dec
jbe
fstp
shl
mov
pop
cmps
jns
xor
inc
ffree
pop
mov
xchg
imul
jle
pop
call
jge
(bad)
stos
std
mov
fdivr
cmps
imul
jnp
das
cmp
cmc
xchg
fld
data16
push
pop
out
mov
mov
jmp
ret
lea
jp
std
(bad)
f2xm1
mov
hlt
add
sbb
cmp
fwait
pop
mov
pop
inc
cmp
add
fwait
call
popa
mov
retf
test
outs
xor
cli
js
mov
mov
or
sub
sti
bound
addr16
jae
inc
lds
cmc
push
inc
push
mov
neg
sbb
dec
mov
cdq
fsubr
fwait
leave
inc
popa
int3
icebp
cli
ja
xor
mov
xchg
sub
pop
jl
cmp
sbb
dec
fist
mov
push
jl
pop
and
and
loopne
xchg
jge
jmp
int
inc
mov
movs
push
mov
std
call
retf
inc
pop
retf
and
sub
into
out
cli
inc
mov
jo
loop
out
xor
das
call
push
mov
fwait
mov
mov
mov
xchg
in
push
lods
add
pcmpgtb
mov
push
mov
ja
mov
ja
mov
push
call
cdq
sbb
inc
fst
mov
retf
push
shr
and
add
mul
imul
(bad)
pop
or
pop
push
dec
mov
fld
push
fnstsw
repz
rcr
test
popa
daa
cmps
ret
xchg
cmp
sub
repnz
pusha
popf
mov
fiadd
ds
mov
xchg
inc
pop
xchg
jmp
fmul
pop
fnsave
fxch
add
mov
jp
dec
sahf
test
and
pop
xchg
mov
aad
out
inc
add
or
(bad)
xchg
push
add
mov
into
sbb
and
dec
enter
dec
inc
shr
and
dec
mov
pop
(bad)
(bad)
idiv
fcmovnbe
hlt
shl
popa
jnp
loopne
test
cmp
es
add
ret
std
jb
xchg
add
sbb
cli
lea
pop
add
jle
inc
movs
data16
adc
xchg
shr
es
jle
test
mov
nop
add
push
ret
sbb
add
test
popa
push
arpl
mov
jae
(bad)
sbb
jno
cmp
ins
ror
lods
out
mov
popf
mov
push
pushf
add
xchg
enter
(bad)
int3
test
fnstcw
and
js
lea
xchg
sahf
adc
or
xchg
lahf
hlt
cmp
ret
(bad)
dec
les
hlt
int
jbe
adc
into
inc
cmp
xchg
icebp
jecxz
xchg
mov
scas
aam
or
hlt
push
mov
daa
bnd
pop
or
out
and
(bad)
pop
jl
cmp
xchg
inc
xchg
inc
pop
dec
pushf
xchg
clc
movs
mov
xchg
sbb
dec
ins
pop
xchg
pop
enter
xchg
ret
jno
or
xchg
sar
push
add
mov
pop
pmaxub
repnz
sub
pushf
xor
dec
add
cmp
sub
mov
rol
lds
or
adc
mov
push
pop
aaa
fadd
imul
pop
imul
test
sub
outs
push
push
popa
mov
lock
mov
imul
inc
les
cmp
push
pop
pop
mov
sbb
into
inc
sbb
adc
xor
ja
call
push
push
out
ret
(bad)
scas
push
jp
nop
push
jo
sub
jae
iret
push
dec
not
mov
mov
mov
rcr
test
xor
ficomp
(bad)
enter
push
pop
mov
hlt
or
jae
stc
add
das
cmp
mov
and
aaa
inc
add
(bad)
enter
mov
push
mov
xchg
movs
jp
outs
cmp
(bad)
lods
xchg
mov
ins
inc
mov
adc
iret
call
cmp
ret
sbb
mov
enter
or
or
sub
inc
push
nop
push
aas
shl
loopne
jmp
(bad)
daa
ins
hlt
mov
sbb
fdiv
add
ror
dec
jne
mov
shl
loopne
mov
jmp
mov
jb
fdiv
fadd
retf
mov
sti
jbe
in
and
nop
leave
push
fabs
push
mov
xor
idiv
sbb
pushf
xchg
stos
xchg
pop
call
push
iret
dec
xor
sbb
adc
dec
iret
jbe
into
push
in
lods
movs
push
sub
mov
daa
retf
dec
dec
daa
cmp
inc
xchg
in
pop
lahf
jne
sub
mov
scas
mul
push
xlat
mov
retf
shl
loopne
test
js
dec
inc
cld
and
cmp
push
push
push
dec
mov
into
xchg
pop
mov
add
push
inc
nop
retf
xchg
xor
icebp
adc
jo
jecxz
in
or
mov
inc
add
dec
sub
lods
shl
arpl
push
stc
ret
ins
aas
ret
push
test
dec
dec
cli
jmp
mov
mov
xchg
lahf
jmp
mov
add
imul
js
cmp
sti
adc
std
or
pop
push
adc
cmp
jae
bswap
push
movs
inc
sbb
cmp
push
shl
mov
inc
jae
cmps
sbb
nop
mov
pop
pop
adc
fisubr
push
inc
fbld
pushf
cmc
jge
stos
xor
xlat
clc
int3
inc
jl
mov
lods
pop
pop
aas
jnp
mov
push
retf
jne
jmp
popf
das
xchg
mov
imul
ds
add
inc
push
pop
addr16
jne
jle
rcl
sub
pop
cmp
icebp
(bad)
sub
call
cdq
add
test
xlat
and
dec
cmp
sub
sub
outs
aaa
dec
mov
adc
or
jecxz
cmp
push
xlat
icebp
lock
fiadd
ja
in
rcr
inc
mov
jmp
dec
push
ja
jbe
(bad)
test
cmps
pop
(bad)
mov
jle
dec
sbb
aad
shr
stos
fucomip
fcom
dec
xchg
dec
sbb
(bad)
pop
int3
sahf
in
xor
fadd
xchg
pop
add
xchg
call
push
push
and
sbb
icebp
lock
or
jge
inc
adc
cmp
xor
xor
pop
pusha
jmp
fsubr
add
add
or
mov
xor
leave
aam
addr16
retf
sahf
mov
xchg
xchg
jae
inc
sub
in
in
xor
call
mov
pop
or
lahf
and
das
lock
shl
jle
push
shr
fmulp
or
push
push
mov
mov
mov
sub
fmul
ss
mov
ins
dec
cmps
std
xchg
ins
in
int3
dec
ss
hlt
outs
fcomp
ret
xchg
lea
sub
addr16
jmp
push
or
mov
loop
ret
adc
movs
ficom
shr
popa
lea
cwde
jns
sbb
sbb
jae
fstp
idiv
in
xchg
popa
mov
data16
inc
xor
or
sub
add
(bad)
js
xchg
sbb
xchg
jmp
cmps
xchg
repnz
fst
inc
add
neg
icebp
xchg
adc
dec
ss
cmps
dec
lods
lods
xchg
pop
loopne
das
scas
inc
fcomi
cmps
jl
in
add
in
shl
je
les
cmp
es
sbb
sahf
mov
mov
xchg
xlat
mov
retf
xor
adc
and
cld
or
sti
push
cli
jbe
pop
xchg
loop
cmp
(bad)
mov
in
sub
mov
push
ret
lea
cmp
daa
add
sahf
push
loopne
aaa
add
out
inc
outs
inc
sub
and
shl
push
mov
mov
lds
shr
and
pop
movs
mov
adc
xchg
ja
in
pop
mov
repz
pop
push
xchg
jmp
mov
cmp
jbe
mov
adc
loopne
inc
cs
pop
sub
mov
adc
leave
call
xor
or
mov
call
add
add
pop
adc
sub
sbb
std
sub
cmps
popa
fcom
stc
lods
push
(bad)
sbb
cmp
dec
push
jg
sahf
popa
stos
mov
loop
add
inc
aam
pop
xchg
inc
mov
mov
mov
das
jp
mov
aas
cdq
pop
mov
(bad)
jle
dec
mov
xchg
shl
les
dec
inc
push
(bad)
lock
adc
push
pop
daa
(bad)
sbb
int
sbb
imul
dec
shl
shl
and
fadd
inc
in
mov
push
mov
push
and
adc
rcl
pop
pop
or
cmp
xchg
dec
js
retf
dec
hlt
xor
cld
add
(bad)
or
outs
mov
test
dec
shr
pop
pop
out
lods
shl
out
dec
aaa
xchg
mov
repnz
out
lock
inc
fadd
test
jo
inc
ffreep
cli
sub
pop
sbb
jb
loope
lock
jl
enter
and
mov
in
(bad)
bound
nop
nop
xor
jb
imul
retf
retf
push
ret
icebp
push
or
lock
gs
or
rcl
sub
mov
rol
js
xor
xchg
inc
loop
xchg
mov
or
cdq
add
mov
(bad)
cmp
push
ins
ret
call
in
lods
pushf
jmp
lock
loope
jle
fmul
in
mov
sbb
test
xchg
lock
xor
mov
hlt
fwait
sub
fst
jae
jnp
(bad)
(bad)
in
retf
cmp
jmp
jnp
jmp
cmp
cli
jne
pop
sbb
fs
iret
test
mov
sub
mov
iret
sbb
cmp
retf
inc
cmp
test
vrcpps
iret
pop
sar
test
dec
xor
imul
je
xor
cwde
pop
cwde
jmp
loop
das
xor
cmps
jne
fadd
xchg
xlat
jae
and
cmp
js
push
ret
loop
icebp
ss
mov
dec
jl
or
cmp
in
mov
sub
scas
in
(bad)
bound
mov
call
jns
sub
ror
ficomp
icebp
pushf
arpl
pop
jno
cld
pop
fsub
sub
mov
xchg
cmp
inc
out
lea
jecxz
jmp
mov
cmc
xchg
jecxz
push
ret
(bad)
cmp
out
js
add
inc
dec
ficom
push
add
loopne
cmp
enter
int
repnz
stos
bnd
(bad)
or
daa
aam
shl
mov
addr16
add
out
xchg
and
in
mul
xor
cs
cwde
sub
or
or
jmp
xor
mov
xor
push
inc
stos
js
(bad)
mov
pop
and
xchg
aam
sbb
dec
faddp
ret
mov
ffreep
mov
or
scas
sbb
pushf
cdq
inc
fdivrp
push
fmulp
test
mov
pop
jno
and
aas
and
jo
mov
sub
inc
(bad)
mov
jne
lock
xor
ds
adc
mov
jle
arpl
xor
add
pushf
mov
jge
cmp
dec
in
fnstsw
jae
push
shl
pop
inc
cs
loopne
push
sti
popa
inc
mov
mov
pop
jns
test
sbb
pop
lds
push
lods
ret
cmp
cld
mov
jo
retf
(bad)
xor
sbb
pop
pop
aad
imul
retf
stc
push
pop
hlt
fadd
aad
daa
sbb
dec
fimul
retf
out
xchg
popa
(bad)
shl
into
cdq
hlt
lds
pop
or
cwde
mov
fisubr
mov
cld
add
mul
mov
mov
mov
(bad)
arpl
push
xor
push
push
(bad)
pop
inc
inc
out
mov
xor
adc
mov
lahf
add
inc
xchg
xor
xor
sbb
mov
or
push
inc
icebp
inc
push
pop
fld
shr
pop
pop
(bad)
jmp
sub
outs
sbb
addr16
inc
and
add
test
scas
or
mov
push
loopne
dec
into
pusha
pslld
out
push
or
(bad)
lock
jg
clc
cmp
xor
retf
enter
cwde
popa
test
repz
xchg
dec
aad
lods
loopne
out
hlt
repnz
and
mov
daa
mov
ins
es
push
jl
pusha
retf
fdivr
dec
push
test
std
stos
jmp
jle
pop
jge
aad
popa
mov
adc
jl
in
ret
jmp
xor
dec
mov
xchg
sbb
ins
sub
fisttp
call
xor
xor
cmp
pop
mov
clc
add
jecxz
mov
xchg
cmp
push
xchg
mov
cmp
mov
daa
jmp
js
sbb
loopne
(bad)
push
sti
push
rcl
xchg
push
push
mov
sar
mov
ins
jle
push
xchg
jo
addr16
fwait
mov
mov
(bad)
mov
push
sbb
xor
dec
arpl
loop
sbb
or
(bad)
mov
pop
mov
mov
scas
inc
push
(bad)
loope
mov
adc
dec
mov
mov
(bad)
mov
or
jno
and
mov
adc
outs
mov
scas
push
mov
mov
jl
mov
test
ins
and
std
repnz
add
adc
xor
jnp
adc
or
push
sbb
push
cmp
lods
lea
fistp
adc
pop
jg
dec
inc
inc
pop
push
sub
std
xchg
sub
and
mov
cmp
into
adc
adc
inc
bnd
pop
jl
add
adc
and
and
xchg
fst
cmp
fsub
out
mov
inc
retf
jp
imul
mov
pop
arpl
sbb
scas
inc
jns
jbe
out
mov
ror
cmp
push
mov
bound
call
fmul
push
int
xchg
mov
ror
add
sub
xchg
clc
mov
ja
push
mov
test
adc
mov
nop
jmp
outs
push
lea
fmul
xor
inc
sar
cs
or
and
adc
(bad)
movs
fnstcw
in
fstp
gs
pop
pop
pop
out
pop
pop
sbb
jg
stos
mov
mov
rol
push
adc
mov
cmp
pop
sbb
cmp
sbb
sar
mov
outs
mov
int
shr
repnz
ds
sbb
push
push
or
jno
cmp
and
js
add
stc
or
popa
js
ret
or
dec
mov
adc
mov
jae
mov
xchg
bound
push
mov
aad
dec
mov
popf
fist
into
ror
popf
lock
push
mov
xchg
mov
mov
out
cmp
shl
or
pop
ret
jl
or
mov
dec
push
sub
mov
scas
jno
dec
inc
jg
ret
push
push
mov
jbe
xchg
sub
adc
je
add
inc
dec
aas
dec
pop
push
fstp
mul
cmp
cmp
fnstenv
sti
fmul
and
jecxz
dec
add
loope
jb
je
jnp
sbb
dec
retf
call
outs
xchg
je
(bad)
mov
cld
aas
xchg
lock
enter
sbb
pop
out
test
pop
adc
repz
mov
adc
fbld
aas
sar
(bad)
loope
sub
aas
xor
ret
repnz
fild
fisttp
into
das
ds
(bad)
out
ret
scas
jae
jle
lods
jp
inc
jle
arpl
aaa
xor
mov
sub
aas
push
jg
push
in
cmp
jl
jecxz
scas
ja
jle
repnz
(bad)
outs
outs
sub
mov
ret
mov
clc
pop
add
add
and
and
rcl
arpl
das
and
cld
pop
push
xor
mov
xor
nop
sahf
sub
cmp
(bad)
xor
ins
add
inc
pop
and
jno
and
fcom
icebp
inc
lahf
scas
mov
adc
mov
fist
cdq
lea
dec
cmp
jbe
cmp
and
fldenv
add
sbb
xchg
pop
mov
dec
jle
int3
cs
xor
fstp
add
and
js
cmps
es
mov
mov
into
xchg
pop
pusha
add
xor
or
fld
xchg
adc
mov
xor
es
xor
rol
dec
arpl
push
fst
adc
sub
out
clc
repnz
push
in
xchg
jo
dec
retf
(bad)
icebp
scas
loopne
add
sub
sub
test
push
cdq
cmp
mov
mov
stos
fldenv
mov
stc
jnp
dec
pop
xchg
shl
hlt
sbb
mov
sub
and
lea
ins
adc
ins
addr16
fst
hlt
jp
dec
in
dec
arpl
lahf
add
je
jmp
pusha
push
lock
pop
sub
sar
loop
jmp
jmp
jnp
xchg
aad
push
fisubr
add
xor
pop
sti
sbb
add
mov
jae
pop
es
loopne
dec
jno
(bad)
cmp
dec
cmp
push
retf
inc
jge
addr16
jno
adc
ins
and
cmp
xchg
lds
cmps
mov
add
pop
dec
fadd
or
or
push
mov
outs
gs
xor
(bad)
jle
fwait
pop
cmp
push
fcmove
fldenv
fadd
inc
or
and
cmps
adc
loope
(bad)
imul
xchg
cmp
jo
mov
ins
sbb
dec
ss
out
cmp
and
mov
cmp
sub
adc
dec
xchg
pop
xchg
in
imul
(bad)
icebp
in
div
call
push
int
imul
imul
jne
test
pop
out
jg
cmp
dec
mov
cwde
cmc
xor
adc
loope
ds
pop
or
sbb
lods
mov
test
enter
addr16
add
inc
pop
lock
aam
(bad)
jg
loopne
mov
mov
add
cmp
movs
jp
mov
cmp
pop
push
mov
add
stos
sub
dec
dec
(bad)
ss
cmp
jns
mov
mov
mov
sub
add
fstp
xor
inc
jl
jb
aam
pop
xchg
mov
mov
sbb
(bad)
(bad)
or
jmp
outs
push
std
dec
or
test
stos
cmp
push
jl
mov
lock
or
not
push
imul
or
xor
mov
add
(bad)
out
sar
addr16
push
mov
mov
inc
inc
xchg
jmp
sti
(bad)
dec
stos
add
push
cmp
movs
enter
push
imul
stc
jb
jecxz
xchg
mov
adc
loope
ss
pop
dec
cmp
leave
add
cmp
cmps
pop
out
and
sbb
inc
out
add
push
and
adc
fst
fidivr
aad
pushf
int3
retf
dec
repnz
sbb
xor
inc
and
retf
adc
out
pop
sbb
adc
int3
jmp
in
repnz
jl
lods
outs
jg
mov
pusha
in
leave
ds
push
push
scas
inc
bound
nop
lock
bound
sub
xchg
out
adc
pop
test
clc
lahf
jo
das
xchg
mov
mov
loop
mov
mov
push
pushf
in
dec
fstp
lahf
enter
xor
mov
mov
into
call
or
xor
pop
mov
adc
pop
cmp
sbb
mov
(bad)
pop
fmulp
pop
es
lds
in
adc
dec
adc
dec
ja
dec
sub
sub
cmp
jns
sub
fwait
mov
je
sbb
dec
mov
ins
xchg
sub
pop
jge
mov
and
mov
std
cmp
cwde
rcr
push
lea
movs
sbb
mov
cmp
xor
loope
and
fwait
cmp
daa
jbe
sub
or
test
mov
mov
test
adc
sti
adc
icebp
movs
loop
add
mov
cmp
fdiv
lds
test
pop
lock
or
(bad)
mov
cmp
in
repnz
sub
stc
pop
scas
mov
(bad)
js
cmp
cmp
inc
add
push
xchg
dec
shl
jmp
mov
and
jg
gs
cmp
cmp
cwde
outs
loope
or
add
or
dec
lahf
push
cld
mov
loope
mov
cmp
sbb
sub
push
pop
call
shr
push
adc
add
adc
sbb
rol
lds
cmc
sub
sub
adc
gs
mov
pop
sbb
(bad)
or
stos
fnstenv
inc
pop
xchg
inc
sti
cs
jp
cmps
fdiv
outs
or
mov
test
ret
aas
rol
jnp
dec
sbb
adc
stc
cdq
inc
aaa
fadd
cli
and
adc
pushf
(bad)
cmps
(bad)
fdiv
dec
sbb
adc
push
sar
mov
adc
fnstsw
mov
iret
sub
data16
repz
lahf
imul
cdq
mov
jp
xchg
cli
arpl
xchg
or
cmp
jnp
std
fadd
add
fwait
sti
mov
shl
(bad)
sbb
cmp
sti
cmp
jmp
dec
inc
ds
nop
jne
(bad)
cmps
lock
js
aas
(bad)
retf
div
cmp
int
aam
ins
xor
fsubrp
push
sbb
pop
jne
stc
mov
fst
rcr
mov
(bad)
clc
mov
jl
iret
hlt
xlat
xlat
push
out
cmps
jne
pop
addr16
pop
sbb
rcl
mov
ficomp
adc
inc
das
cmp
push
pop
mov
sbb
stos
xor
sbb
push
movs
push
mov
ins
inc
jecxz
in
jp
or
fs
add
lahf
mov
mov
mov
sbb
fst
rcr
or
gs
jmp
add
or
adc
sar
mov
mov
sbb
pop
out
cmps
or
(bad)
imul
les
repnz
mul
mov
push
aad
jmp
mov
scas
mov
mov
(bad)
loopne
stos
aas
test
inc
xlat
xchg
call
dec
xchg
ins
mov
add
pop
int
add
inc
mov
dec
mov
fisubr
repz
scas
jle
es
cmps
addr16
add
shr
sub
iret
int3
dec
outs
ret
cwde
std
ins
pop
jns
fistp
jecxz
ja
xor
cmps
clc
cdq
inc
inc
retf
je
aam
sbb
sbb
out
retf
outs
xchg
inc
fst
and
mov
sar
push
xor
mov
mov
add
mov
cmps
rcr
mov
popf
test
stos
js
jbe
dec
enter
stos
jo
cdq
lods
in
arpl
sub
outs
sar
jns
dec
popf
push
mov
(bad)
xchg
ins
mov
pop
ins
jp
inc
jmp
ds
enter
dec
lahf
dec
xchg
test
xchg
loopne
ficomp
movs
jp
ds
shl
lods
inc
js
das
add
outs
mov
hlt
push
aaa
imul
mov
and
lods
jmp
mov
mov
xchg
cmc
inc
stc
ds
gs
push
cdq
fidivr
je
ss
dec
adc
pextrw
or
sub
aad
lods
push
shl
and
mov
sub
addr16
push
inc
push
jp
adc
or
jae
add
inc
stc
addr16
xor
ins
ret
bound
mov
jmp
movs
pop
pop
gs
std
cmps
push
(bad)
(bad)
das
push
cmp
(bad)
xchg
out
adc
mov
test
sub
paddsw
out
xchg
or
jecxz
jge
sbb
inc
mov
mov
mov
cmps
sub
cmp
inc
mov
jl
or
movs
std
movs
cs
push
mov
or
sub
mov
mov
mov
div
shl
bswap
cmc
mov
pop
scas
xor
imul
mov
dec
sbb
sbb
xchg
mov
fs
adc
gs
call
hlt
xchg
repnz
fmul
fisub
aam
xchg
fisttp
fsub
cld
or
sub
sbb
jg
xor
mov
enter
es
iret
sbb
dec
jae
jbe
inc
mov
and
cmc
jecxz
pop
lods
adc
dec
push
dec
push
xor
or
in
dec
lock
cmps
sub
adc
push
sub
sbb
arpl
mov
dec
or
and
and
cmp
dec
mov
push
adc
or
movs
jp
cmp
jecxz
mov
pop
test
scas
and
mov
ja
jl
inc
jae
xor
ins
push
and
pop
out
ror
fsubr
add
jp
mov
mul
stc
pop
cmp
push
test
pop
clc
dec
or
dec
hlt
sbb
sbb
xchg
pop
iret
push
mov
push
cmps
vpshlq
aaa
cmp
xlat
ret
push
fwait
push
(bad)
cmp
and
dec
in
out
push
sahf
pop
inc
scas
out
les
sbb
dec
lahf
xor
add
mov
sti
cmp
mov
pop
adc
sbb
lods
lock
aas
stos
hlt
(bad)
jns
pop
repz
(bad)
(bad)
cmp
dec
mov
(bad)
repnz
xchg
rcr
adc
mov
inc
fadd
or
xchg
and
dec
test
mov
cmp
sbb
xchg
std
and
and
adc
shr
or
(bad)
iret
loope
js
mov
mov
mul
xor
sub
or
nop
lock
shl
hlt
sbb
enter
aas
mov
in
sbb
(bad)
cs
aaa
and
repz
scas
mov
sti
arpl
outs
sub
mov
push
int3
js
ins
ret
adc
and
jnp
stc
add
and
lods
nop
fsub
jl
js
repnz
das
inc
cmp
dec
arpl
jge
test
pop
and
rcr
lods
stc
repnz
ja
push
inc
mov
mov
test
push
mov
(bad)
test
jge
inc
pop
or
lods
or
call
pop
into
shr
shr
push
mov
sub
retf
mov
push
jge
and
push
jns
mov
pop
add
ret
add
inc
and
(bad)
out
test
jl
out
jp
dec
ret
sub
mov
rol
into
adc
test
les
and
popa
dec
lods
loopne
mov
aam
fdiv
or
mov
outs
push
adc
jns
fwait
dec
ja
lods
lea
(bad)
and
dec
out
psrad
cmp
xor
xchg
mov
lods
mov
gs
mov
test
std
sbb
xchg
sar
loope
cwde
jle
movs
jg
mov
sub
pop
sbb
fldenv
sbb
mov
je
bound
test
mov
push
lock
rcr
sub
std
test
lahf
inc
mov
fimul
and
mov
aam
jl
xchg
lds
push
jg
pusha
(bad)
ss
pop
imul
leave
xchg
xor
shl
xchg
loope
frstor
xchg
fstp
xor
in
loope
pop
arpl
xor
out
pop
fsub
or
(bad)
cld
scas
sbb
sbb
pusha
outs
mov
lock
pop
clc
test
mov
imul
popa
mul
mov
cmp
mov
jg
mov
mov
mov
leave
mov
out
ret
ret
inc
out
imul
mov
(bad)
mov
aaa
fild
es
jno
cmp
addr16
jns
xchg
popa
jns
mov
mov
mov
(bad)
adc
and
fadd
or
pop
pop
mov
mov
inc
scas
push
cs
dec
or
mov
inc
xor
dec
mov
xor
or
je
test
jle
(bad)
popf
ds
push
aad
aad
aad
cli
je
jnp
pushf
xor
jo
stos
rcr
fistp
xor
jnp
inc
leave
(bad)
lock
stos
mov
pop
fmul
mov
mov
inc
das
cmp
push
(bad)
lods
cli
pop
test
loope
jo
nop
arpl
call
cmp
cmp
push
mov
sbb
je
repnz
scas
cmp
ret
xchg
outs
push
cmp
cld
adc
je
mov
sar
bnd
int3
fmul
hlt
ror
imul
adc
adc
mov
clc
scas
sub
test
pop
mov
fs
and
sub
adc
and
sahf
xchg
sub
inc
and
mov
or
xchg
sbb
mov
movs
popa
or
rcr
dec
outs
push
xchg
adc
out
xchg
cmp
retf
ret
outs
bound
xor
xlat
dec
xchg
aas
xchg
push
sub
sub
cld
lods
add
add
call
cli
repz
jo
pop
dec
test
es
in
jae
call
hlt
in
movs
in
(bad)
(bad)
sbb
fs
xor
bound
fdiv
inc
mov
xchg
push
ins
jb
int3
sub
sub
mov
arpl
add
ror
int3
cmp
data16
or
neg
loope
sbb
sbb
fadd
pop
fld
arpl
push
sub
cli
shr
ja
add
pop
jl
(bad)
or
loopne
inc
pop
scas
int
retf
pop
jae
scas
xor
push
bound
lods
loopne
ds
jnp
dec
mov
sub
aas
xor
stc
xchg
cwde
jno
add
shr
mov
(bad)
xor
xchg
mov
imul
push
pop
or
loope
or
mov
enter
pop
sar
push
adc
push
fist
jl
xor
sti
shr
push
lock
push
adc
rol
push
jge
sub
outs
lods
cmp
mov
imul
xor
push
adc
mov
push
jbe
cmps
loopne
xor
cmp
cld
push
(bad)
mov
in
in
xchg
lahf
pushf
xor
js
call
fild
xchg
retf
loope
daa
ficom
mov
popf
in
setge
fisub
mov
fsubp
je
sub
cli
pop
retf
mov
jge
jg
bound
sbb
sbb
cli
xchg
ja
ror
lock
jae
mov
mov
in
lods
push
jno
retf
cdq
test
or
adc
mov
lea
mulps
out
push
call
fistp
push
inc
xchg
ficom
jno
jecxz
and
mov
xlat
sub
and
cmp
retf
mov
les
or
push
(bad)
adc
mov
xchg
cmp
arpl
(bad)
pop
cmp
xor
test
iret
call
cmc
loop
and
sbb
push
inc
cmps
jge
add
call
gs
and
dec
neg
sub
mov
jb
scas
mov
or
and
cli
or
ja
aam
iret
mov
inc
mov
push
cmp
fisub
push
push
jmp
mov
lods
adc
stos
ja
dec
sar
add
retf
push
fwait
sbb
pop
cdq
xchg
in
xchg
ret
mov
aam
inc
lea
out
dec
xchg
pop
jno
test
push
add
std
inc
xchg
repz
or
sahf
dec
push
pusha
push
xchg
push
xchg
mov
or
scas
pop
test
pushf
lahf
outs
xchg
or
xchg
out
aaa
push
cmp
(bad)
jmp
aad
mov
dec
dec
fldenv
xchg
jo
(bad)
mov
aas
cli
shl
clc
pop
jge
(bad)
loopne
test
mov
cmc
(bad)
xchg
dec
out
jecxz
leave
sub
mov
cs
jmp
or
std
jno
inc
retf
stos
in
scas
cmps
test
scas
adc
shl
iret
mov
(bad)
jg
stc
or
xor
cmps
or
ja
cmp
aad
xor
jns
outs
pop
xor
ins
fadd
outs
in
(bad)
fwait
mov
test
add
sbb
jns
add
and
jne
cmp
int3
mov
outs
aam
and
mov
pusha
dec
cwde
rol
pop
imul
mov
jmp
cmc
sbb
sub
ds
pop
repnz
pop
xor
pushf
mov
outs
clc
and
outs
push
in
sub
push
cld
inc
jns
or
mov
lahf
hlt
mov
ins
jg
mov
pop
fwait
or
inc
pop
fcomp
jb
repz
mov
popa
inc
dec
mov
repnz
clc
test
setp
ja
pop
sub
add
mov
loop
int
pop
shl
aad
loope
ret
retf
jge
dec
stc
sbb
push
inc
movaps
cmp
push
out
fwait
or
ds
add
xchg
ficom
mov
cmp
fsubp
push
shl
and
push
and
inc
mov
pop
pop
pop
sti
pop
add
sti
inc
add
xor
cmp
mov
jae
inc
mov
hlt
mov
ins
pop
sub
sub
mov
mov
fs
shl
or
dec
xchg
enter
sbb
xchg
xchg
xor
push
(bad)
neg
push
imul
add
dec
jmp
div
dec
(bad)
imul
mov
push
outs
stos
mov
iret
outs
scas
aaa
add
mov
add
jne
imul
sub
cmp
cmp
jl
icebp
inc
pop
shl
shl
test
pop
ret
test
sub
sbb
jg
cmps
outs
xor
cmovp
jne
pop
loope
push
adc
dec
je
sbb
rcr
lock
shr
pop
stc
ins
sub
mov
(bad)
out
mov
sub
es
js
adc
out
inc
movs
add
jns
and
ficom
ins
jbe
xor
mov
nop
push
mov
jne
or
test
add
nop
arpl
sbb
test
push
or
loope
push
pusha
xchg
push
enter
retf
(bad)
lahf
cwde
fstp
xchg
push
ret
stos
repz
xor
ins
inc
ror
push
retf
shl
mov
rol
sahf
push
pop
sbb
mov
sti
(bad)
aaa
inc
icebp
loopne
cmp
xchg
and
cwde
sbb
pop
push
jb
outs
mov
out
lahf
mov
sub
inc
(bad)
lahf
xor
dec
cdq
add
lds
and
push
add
mov
loope
push
mov
jb
dec
xchg
pop
lds
popf
cmp
cs
cmc
xchg
xor
movs
push
cmp
call
lds
mov
(bad)
xchg
fsubr
ja
ds
add
call
sbb
or
or
jo
test
cmp
push
jmp
(bad)
hlt
sti
mov
int
jnp
shl
dec
repz
mov
int
mov
ret
pop
mov
inc
add
push
js
jmp
hlt
jle
(bad)
out
push
fstp
ret
pop
ins
scas
jo
and
into
jecxz
popf
out
fmul
inc
xor
loopne
fdivr
iret
ins
jle
fld
repz
mov
je
xor
xchg
lahf
push
sbb
jno
fs
push
jle
inc
repnz
loop
xchg
cmps
inc
aas
mov
pop
cdq
and
hlt
and
outs
ins
cmp
sbb
dec
cs
pop
push
aas
and
dec
in
aad
movs
and
pop
in
xchg
scas
ins
sbb
int
fidivr
adc
out
sub
loope
xlat
cmc
ret
xchg
test
push
pop
pop
cld
xchg
dec
push
(bad)
jl
ss
cmp
sbb
pop
int3
or
mov
pop
test
inc
jp
pop
out
fnstcw
lods
(bad)
pusha
std
inc
gs
and
mov
jle
mov
inc
mov
ins
mov
jmp
mov
loop
ss
call
ins
test
retf
cs
rcr
test
mov
int
adc
pop
rcl
fwait
jb
jo
je
ret
sub
push
inc
out
js
pop
push
(bad)
stos
xchg
cmp
pop
data16
retf
ret
pop
xor
or
jp
push
sbb
icebp
push
call
xchg
cmp
adc
test
or
jp
jmp
adc
pop
cmp
jp
add
push
jb
pop
mov
pushf
mov
push
test
dec
mov
repnz
adc
jmp
jmp
es
sub
cmc
mov
add
or
mov
push
add
ret
add
pop
adc
into
push
mov
adc
gs
retf
or
enter
repnz
pop
pop
nop
fld
outs
sub
mov
rcl
push
xlat
jno
std
dec
mov
mov
or
add
mov
fisubr
adc
arpl
icebp
jbe
sti
adc
shr
pop
jle
cld
(bad)
sub
std
mov
xchg
mov
fbld
loope
mov
in
xchg
jno
mov
xchg
movs
sbb
sub
ds
xlat
xchg
imul
push
les
loopne
adc
repnz
enter
sbb
pop
(bad)
movlps
pushf
or
sbb
ret
push
jl
aas
dec
enter
or
dec
xor
cmc
(bad)
(bad)
call
out
push
ins
out
fs
xor
aam
cwde
xor
ror
mov
out
jg
jnp
sbb
push
stos
cmps
mov
(bad)
mov
cld
xor
pusha
xchg
arpl
outs
push
inc
or
push
mov
xchg
fwait
hlt
mov
jb
dec
jbe
outs
retf
pusha
bts
clc
xchg
imul
pop
pop
lahf
ss
jnp
pop
sti
or
xlat
jbe
test
cmp
xchg
jbe
in
pop
mov
jno
pop
mov
call
mov
test
js
hlt
movs
cld
js
(bad)
les
adc
push
mov
out
push
push
xor
mov
sahf
sbb
fwait
call
pusha
mov
cmp
mov
or
inc
xor
out
cli
mov
and
sbb
xor
(bad)
sti
scas
out
fstp
movsx
dec
push
outs
retf
inc
jge
push
lods
xor
dec
push
jbe
jb
pushf
pop
enter
std
inc
repz
mov
jno
idiv
int3
push
xor
cmp
popa
std
movs
xchg
aam
hlt
daa
mov
lea
inc
mov
adc
stc
movs
pop
aam
mov
xchg
test
adc
scas
(bad)
enter
js
cs
ret
rcr
leave
jl
call
jp
repnz
retf
test
sahf
iret
adc
ja
xchg
lahf
xchg
add
jae
cld
pop
pop
add
push
or
cwde
dec
leave
sub
sub
and
mov
mov
iret
shr
xchg
ins
mov
dec
xchg
fstp
push
retf
pop
enter
rol
xchg
shr
or
cdq
outs
jb
(bad)
fnstcw
repz
jbe
jecxz
pop
into
cmp
(bad)
(bad)
or
inc
mov
pop
lods
mov
xchg
test
nop
icebp
sti
je
repz
and
xchg
test
mov
sbb
add
aad
ror
movs
int
aas
scas
test
(bad)
ror
add
sub
stc
ds
repz
mov
jnp
push
(bad)
sti
std
inc
inc
cmc
out
xchg
add
pop
cmp
jmp
lods
cld
sbb
sbb
not
cmc
inc
fs
call
fwait
xor
jl
or
cmps
mov
adc
cld
das
mov
mov
pop
in
sahf
pop
lds
fsubr
cmp
out
mov
arpl
int
shr
mov
push
sti
sbb
in
jecxz
repnz
pop
xchg
(bad)
adc
xor
cdq
cmp
div
or
adc
cmp
sti
sbb
int3
adc
mov
ret
or
es
push
std
mov
loope
fadd
(bad)
mov
push
aaa
ins
mov
pop
adc
sub
push
adc
mov
out
(bad)
icebp
in
arpl
stc
adc
sbb
daa
inc
(bad)
ror
or
pushf
and
xor
sbb
mov
add
and
fild
and
mov
jbe
test
xchg
arpl
push
push
jo
jmp
stc
jnp
sbb
pop
inc
cmps
xor
xchg
retf
inc
(bad)
push
or
lea
sub
sbb
call
lods
mov
(bad)
fsub
test
inc
sbb
xchg
pop
fsub
ins
rol
movs
cmp
(bad)
or
inc
mov
ret
clc
cmp
sbb
(bad)
push
gs
fadd
mov
pop
shl
xor
push
scas
lahf
shr
jbe
iret
xor
jg
fsin
add
inc
call
(bad)
add
xchg
imul
xchg
mov
pushf
fwait
out
test
inc
dec
aad
mov
push
mov
popa
add
and
mov
imul
xlat
sbb
daa
cmp
iret
in
test
fwait
dec
aam
cdq
mov
adc
js
scas
mov
in
and
in
ret
daa
fmul
lock
in
xchg
xchg
and
repnz
inc
mov
sub
sub
xchg
int3
jmp
sub
inc
push
cmp
jmp
push
out
ins
outs
push
jl
mov
sbb
mov
sahf
push
sub
sub
xor
imul
and
xor
dec
mov
in
popa
int3
lods
pop
ja
scas
(bad)
scas
pop
add
jmp
clc
outs
and
and
xor
into
push
jl
pop
out
call
sub
add
fstp
mov
mov
fwait
call
loop
xchg
and
xor
sar
xor
or
xor
push
rcl
and
mov
movs
cli
jne
sub
in
imul
or
add
pop
sar
push
retf
cmps
(bad)
xchg
inc
sub
rcr
mov
xor
cmp
dec
or
pop
fidiv
mov
test
adc
cmp
rcl
repz
test
dec
ret
dec
fistp
adc
sub
jnp
ds
pop
sbb
push
pop
hlt
cmp
cmp
sbb
adc
sbb
and
mov
or
mov
mov
dec
sub
mov
fbstp
call
call
outs
movs
stc
cmp
jo
test
fbld
jmp
push
mov
xor
push
dec
xchg
jmp
push
push
or
sub
mov
push
jg
or
jmp
push
cmp
fcomip
out
mov
fild
ins
adc
jae
inc
adc
xchg
mov
lods
aaa
jmp
test
xchg
push
dec
in
pusha
movs
xor
and
push
cwde
fsubr
pop
push
cdq
mov
addr16
shl
out
jl
in
out
xchg
inc
in
icebp
adc
push
shl
loop
jmp
in
inc
push
dec
gs
dec
mov
pop
mov
jnp
mov
in
dec
xchg
xchg
push
fmul
and
dec
in
jno
mov
iret
pop
sbb
scas
push
pop
or
or
mov
mov
sub
bound
lods
dec
fwait
stos
push
aas
mov
mov
mov
pop
mov
dec
and
ret
cdq
test
xchg
test
xor
or
outs
fwait
xor
push
sahf
ins
inc
shl
out
xor
jo
mov
sbb
pushf
lahf
cmp
dec
jne
jp
pop
test
fnsave
inc
inc
retf
adc
movs
aam
push
aaa
xor
std
inc
add
and
xor
jge
sub
pop
(bad)
stos
pop
stos
or
adc
sbb
shl
jge
sub
jno
aas
mov
stc
sbb
retf
retf
xchg
sub
sbb
fwait
xor
fisttp
or
(bad)
shl
fadd
mov
(bad)
pusha
repnz
shl
mov
mov
xor
ret
jle
xchg
mov
cmp
sub
lock
adc
fcom
xchg
or
shl
fisttp
jae
adc
and
mov
nop
push
or
sbb
and
es
repnz
and
and
inc
pop
mov
cli
stos
stos
mov
or
mov
adc
mov
in
mov
ins
dec
test
inc
jg
inc
xchg
pop
cmp
sub
push
lahf
and
jmp
xchg
mov
stc
lods
stos
cwde
pop
ss
adc
and
sahf
nop
pop
(bad)
repnz
lea
(bad)
pop
add
jmp
mov
mov
mov
das
jb
aas
movs
pop
das
cmp
iret
sets
cmps
fucomip
dec
les
popa
cmp
add
inc
or
push
pop
data16
imul
xchg
xlat
(bad)
fwait
lods
xor
(bad)
jecxz
or
cmp
mov
push
dec
push
or
outs
jbe
jns
lods
shr
add
movs
mov
retf
xor
arpl
adc
mov
loope
xchg
push
sbb
jno
(bad)
stos
pop
or
xchg
jb
lea
out
xor
imul
fbld
mov
inc
and
mov
loopne
push
(bad)
lods
mov
jns
rol
aam
jb
add
aam
and
pop
enter
jl
(bad)
push
mov
adc
push
pop
lds
push
sbb
xchg
addr16
cmp
addr16
pop
scas
push
ja
aaa
xchg
dec
and
inc
or
jle
ins
mov
xor
test
shr
in
push
adc
adc
data16
imul
mov
call
nop
rol
mov
and
sbb
mov
ficom
ins
call
jge
add
stc
inc
mov
mov
push
outs
fdivr
push
popa
and
cmp
test
gs
adc
mov
xor
or
add
adc
or
test
icebp
shl
cmc
es
cmc
fsubr
fisubr
push
pop
sbb
sub
out
xchg
dec
inc
les
in
stos
not
mov
lds
std
(bad)
(bad)
bound
(bad)
bound
jg
mov
das
hlt
pop
xchg
cmp
sbb
adc
sbb
ret
jae
add
jp
inc
xor
into
fidivr
sar
in
ja
fdivr
jnp
cwde
adc
inc
jg
ds
out
mov
xchg
call
mov
and
mov
cmps
inc
sahf
or
aaa
add
pop
mov
invd
jo
or
xlat
pop
call
inc
mov
sbb
(bad)
xor
inc
arpl
add
int3
(bad)
in
ins
adc
xor
nop
mov
sbb
test
je
or
cmp
or
mov
mov
iret
mov
add
(bad)
cmp
lea
(bad)
loop
fsubr
(bad)
sub
arpl
js
arpl
pop
adc
inc
cmp
fwait
cdq
ret
loopne
xor
call
jecxz
pop
imul
mov
movs
stc
shr
mov
je
cmps
adc
lds
call
ins
mov
ftst
out
in
sub
je
adc
push
push
cmc
test
sbb
jae
sbb
add
and
xchg
and
wbinvd
(bad)
shl
cs
je
adc
and
stos
add
inc
in
sbb
rcr
inc
mov
imul
and
loope
mov
cmc
aas
xchg
pop
push
retf
jbe
dec
mov
mov
mov
jns
iret
test
adc
mov
dec
jge
fcmovb
cmp
mov
nop
es
js
ror
and
aas
daa
jne
mov
xor
mov
js
(bad)
xchg
into
and
loop
dec
fdiv
sub
test
fst
push
cmp
in
std
xor
rcl
xor
jb
rcr
jb
ins
pop
pop
mov
imul
mov
fwait
data16
jb
hlt
je
repz
loope
mov
push
and
mov
bound
cwde
ds
push
imul
popf
repnz
sub
stos
sub
sbb
sti
or
jmp
cmp
pusha
imul
cmp
push
fadd
sub
mov
test
xor
clc
dec
js
call
call
mov
pop
seta
dec
(bad)
dec
jmp
and
push
test
repnz
xchg
popf
test
cmps
sar
push
jp
push
retf
ins
xlat
sbb
in
pusha
lods
and
cwde
pop
xchg
dec
outs
(bad)
movs
cmps
xlat
jno
dec
jbe
and
dec
fsub
(bad)
xor
fdivr
xchg
hlt
hlt
scas
frstor
sti
mov
out
call
adc
mul
dec
dec
cmp
pop
lods
repz
mov
xor
pop
sub
mov
retf
cli
sub
ret
or
xor
or
jo
cmc
mov
outs
into
sar
ds
jl
jne
pop
bound
pop
fdiv
sbb
xchg
std
sar
inc
nop
push
cld
jne
adc
rcr
dec
cmp
and
ret
sbb
(bad)
cli
and
cmp
add
or
and
push
cmp
sti
xlat
ins
test
cwde
mov
jae
mov
in
sahf
leave
push
(bad)
inc
adc
sub
retf
cld
sar
jle
retf
div
mov
sbb
leave
xchg
add
adc
or
xchg
ds
add
loop
pop
jmp
add
push
sbb
cwde
fdivr
pusha
mov
lahf
outs
pop
xlat
jnp
adc
leave
inc
xor
out
inc
rcr
xchg
or
dec
mov
pop
pop
xchg
es
es
mov
enter
sbb
not
xor
test
sub
adc
sbb
loopne
jno
stc
pop
inc
or
xor
ins
dec
xor
dec
and
shr
scas
test
aad
jge
mov
cmp
dec
test
jb
sub
mov
ins
inc
push
ja
dec
stos
mov
or
es
push
stos
(bad)
push
add
imul
aam
retf
mov
mov
pop
push
inc
xchg
movs
or
jb
aaa
outs
xlat
out
cmp
sub
push
fnsave
sub
aad
or
xor
mov
xchg
jns
dec
dec
mov
xor
rcl
sbb
test
jg
lahf
cmp
inc
xor
inc
scas
push
add
xchg
fsubp
add
aad
jecxz
xlat
ret
mov
push
lea
pop
xchg
xchg
mov
ins
stos
enter
inc
lods
enter
sbb
push
scas
adc
stos
repnz
xchg
aas
dec
and
inc
mov
xchg
push
adc
mov
xor
xchg
jns
push
dec
retf
test
dec
fist
(bad)
pop
sub
in
jge
fs
ret
inc
push
and
lahf
adc
cmp
dec
push
sbb
(bad)
sahf
gs
fs
(bad)
movs
hlt
jge
jno
movs
jge
dec
push
fs
jmp
xchg
xor
jno
ret
jmp
(bad)
xlat
scas
out
jbe
inc
retf
adc
xchg
mov
cs
pop
add
rcl
add
int
jle
jmp
fild
inc
mov
push
mov
rcr
jmp
cmp
fucomi
icebp
aam
cmps
lahf
not
hlt
jne
mov
cwde
mov
dec
out
mov
enter
and
push
out
xchg
into
push
xor
cmps
or
ds
dec
xchg
adc
dec
sub
xchg
lahf
pop
mov
mov
or
adc
movs
je
push
call
pop
mov
jle
jne
mov
and
fcomp
les
push
jo
jnp
pop
test
sub
fidivr
jno
mov
fistp
cmp
push
push
shl
das
call
jge
pop
jo
stos
pop
outs
push
mov
lock
push
scas
push
lahf
and
jp
mov
push
sub
out
jle
xor
stos
pop
data16
xchg
jo
je
ret
inc
(bad)
in
hlt
mov
dec
stc
add
or
xchg
mov
imul
imul
imul
je
scas
pushf
mov
js
xchg
sub
and
sub
jbe
in
loop
ss
into
popa
cmp
xchg
retf
push
sbb
jecxz
pop
pop
cld
inc
dec
sbb
cmc
inc
int3
mov
mov
push
fild
sahf
pop
push
and
sub
rcr
adc
aaa
out
xchg
sbb
xor
dec
jne
sbb
push
repz
dec
shl
fwait
loope
mov
pop
clc
sbb
(bad)
std
ror
dec
leave
xor
cmp
aam
ins
push
out
sub
lock
test
jae
xchg
bound
jne
cmp
mov
pop
mov
shl
sbb
add
lds
fdivr
les
xlat
push
js
test
sbb
jle
mov
repnz
retf
rcr
fbld
sub
cmp
mov
jno
mov
mov
ret
adc
lds
rol
loop
(bad)
and
push
inc
movs
push
mov
xor
cmp
inc
aad
scas
sbb
pop
pop
inc
cmp
ins
mov
je
ins
sbb
icebp
xchg
iret
jl
fwait
mov
sub
test
sub
xor
inc
ret
pushf
pop
(bad)
cmp
xchg
jno
pop
loopne
or
mov
lea
xchg
mov
mov
jecxz
mov
(bad)
js
mov
inc
jmp
movs
retf
mov
jmp
into
icebp
dec
inc
popa
inc
push
fdivrp
pop
pop
jge
cwde
retf
mov
xor
pop
jecxz
imul
xor
neg
xlat
dec
dec
sub
jno
(bad)
cwde
or
jg
loop
mov
arpl
xchg
into
daa
test
jg
into
cmp
and
rcr
test
les
pop
cmp
rol
test
jo
pop
call
jmp
mov
test
adc
call
pop
cmp
call
pop
push
inc
scas
adc
scas
mov
je
into
out
leave
gs
sub
mov
ret
pop
mov
mov
pop
mov
xchg
mov
hlt
pop
cmp
fidivr
jecxz
outs
hlt
add
sbb
push
imul
sub
add
adc
(bad)
fld
mov
es
imul
mov
mov
xor
ins
movs
out
mov
push
(bad)
test
inc
out
enter
xchg
cld
pop
sbb
jg
repnz
xchg
inc
xchg
ins
popf
jg
and
push
jo
mov
shr
loopne
sbb
ja
nop
xor
outs
icebp
add
call
lds
pop
inc
jb
pop
fimul
lods
(bad)
out
or
std
shr
(bad)
dec
pop
aam
pop
mov
adc
psubd
das
xchg
scas
push
inc
pop
fimul
leave
fcomp
xchg
mov
dec
push
int
loope
jnp
call
fwait
bound
fadd
jo
sti
lahf
stc
jl
pusha
jg
mov
push
xor
or
adc
fsub
repz
dec
sti
call
add
ja
jo
adc
pop
push
in
daa
push
ss
dec
les
and
sahf
lods
cld
stos
repnz
xor
shl
or
cmp
lea
add
test
int3
cmp
bound
pop
mov
fwait
cmps
sbb
xchg
ja
mov
xor
push
and
mov
cmp
push
jae
jmp
sbb
mov
retf
pop
add
daa
mov
shl
and
cmp
pop
push
jbe
push
pusha
daa
iret
push
mov
outs
jmp
mov
xor
push
sahf
push
outs
pop
retf
or
pop
inc
pop
pop
push
pop
dec
clc
adc
push
sub
ja
mov
(bad)
loop
les
mov
mov
(bad)
cmps
push
adc
add
ficom
cmp
enter
call
pop
xlat
(bad)
jo
push
xor
or
jmp
jmp
int3
cmp
call
dec
retf
fs
fimul
loope
add
cmp
fisubr
ss
mov
mov
pop
int
cmp
scas
aad
das
stos
scas
inc
imul
jge
push
ins
mov
mov
ror
push
ss
xor
mov
and
les
sbb
cmc
add
mov
add
stos
(bad)
test
dec
xor
mov
gs
cmc
fisub
std
inc
xchg
rcl
sub
mov
lahf
push
ds
cmps
mov
pop
movs
les
ja
(bad)
push
stc
and
stc
(bad)
fbstp
pop
pop
movs
push
das
popa
sbb
pop
lahf
xlat
dec
adc
mov
push
call
push
push
add
xchg
jns
sub
xacquire
div
cmp
bound
pop
lods
(bad)
jl
dec
push
jle
jb
in
xor
sub
fwait
cmps
mov
mov
std
outs
(bad)
call
push
sub
jnp
dec
sbb
jnp
xor
(bad)
dec
lods
adc
pusha
stc
xor
lea
movs
mov
dec
cmp
jb
jge
xor
dec
mov
stos
xor
add
loop
jo
mov
mov
xchg
adc
outs
fcom
cs
sahf
inc
pop
pop
daa
push
ins
dec
or
lods
in
leave
rol
fwait
dec
pop
push
retf
and
gs
data16
fisubr
cdq
fild
je
inc
bound
test
cmp
or
and
imul
les
fsub
mov
sbb
cmp
sub
retf
mov
into
stos
jmp
and
cmp
mov
mov
xchg
jns
stc
sub
or
xor
mov
pop
mov
jnp
jae
pop
xchg
pop
mov
mov
pop
or
lea
cmps
(bad)
cmp
cmp
sub
fistp
dec
(bad)
lahf
(bad)
xchg
aas
xor
retf
cmp
cmps
xchg
add
sub
sbb
rcr
cmp
jnp
cli
stos
mov
test
pop
ror
jo
shr
stos
push
xor
ja
in
mov
bound
adc
(bad)
iret
scas
retf
in
push
lahf
loop
pop
sub
std
jmp
xchg
test
sti
sbb
xchg
xor
fild
stos
jb
add
(bad)
imul
aas
jb
or
xchg
add
xor
fiadd
cmp
bound
arpl
movs
shl
adc
(bad)
mov
icebp
mov
cwde
or
lods
stc
cwde
adc
and
mov
dec
push
imul
jae
mov
mov
es
or
js
outs
loope
add
jg
jmp
ins
inc
stc
jmp
dec
inc
and
cmp
pop
pop
in
push
jp
xchg
nop
sub
dec
sub
sbb
mov
pop
sti
and
repz
sub
les
pop
sub
jo
and
jl
fisubr
mov
cmp
add
xchg
dec
xor
mov
mov
or
or
test
xchg
cmp
stos
adc
adc
jle
push
test
mov
sub
cmp
dec
or
jnp
arpl
imul
adc
and
(bad)
mov
stc
in
jbe
push
cmps
and
movs
inc
pushf
jae
fild
inc
sub
(bad)
jmp
fsub
mov
mov
das
gs
shl
dec
shl
repnz
out
sub
pop
icebp
mov
xchg
mov
lods
int3
jmp
xor
icebp
into
mov
lods
imul
add
mov
lahf
movs
xor
loope
xchg
and
scas
sub
xchg
dec
ret
jecxz
inc
xchg
dec
ret
inc
retf
pushf
mov
ror
retf
shl
and
leave
sub
test
jle
xlat
cmp
or
hlt
in
popa
fdiv
sub
aas
mov
cld
test
imul
les
add
sub
ss
call
movs
dec
data16
add
cli
adc
std
sub
imul
jne
add
and
into
dec
sbb
(bad)
jo
or
pop
mov
pop
mov
or
jge
jae
xor
dec
or
cli
sub
out
dec
and
mov
nop
ror
push
inc
add
pop
mov
out
jmp
shl
mov
jae
(bad)
push
cmp
cmc
mov
mov
xor
add
pop
cmp
popa
dec
retfw
push
mov
push
xor
xchg
cmp
push
sub
jbe
mov
mov
sbb
movs
mov
mov
in
dec
stos
mov
cdq
jns
jmp
jo
and
add
sbb
pop
clc
mov
cmp
add
inc
mov
ss
sbb
loopne
push
mov
dec
xchg
pop
dec
nop
xchg
adc
test
rcr
stos
mov
es
hlt
(bad)
mov
jge
cmp
sar
repz
aad
and
gs
gs
cdq
fld
xor
and
stos
ret
rcr
sbb
shl
arpl
shl
pop
or
and
sbb
sbb
pop
jb
lods
xchg
mov
mov
mov
cmp
lods
sub
inc
mov
cmp
les
adc
das
sbb
dec
imul
es
mov
inc
jmp
cmp
push
(bad)
data16
dec
inc
jno
sub
jns
mov
adc
mov
jecxz
jbe
mov
call
push
cmp
xlat
aas
pop
cwde
jne
cmovb
fild
lds
sbb
sbb
and
aam
inc
div
add
int
dec
push
stc
dec
fistp
adc
xor
hlt
add
shl
(bad)
ror
cmp
movs
pop
scas
push
inc
test
push
sbb
sahf
push
sbb
and
push
aad
dec
pop
mov
jbe
mov
xchg
adc
ret
ja
inc
ffreep
jmp
frstor
mov
js
inc
rol
arpl
les
mov
adc
push
xlat
lds
je
lea
xor
cmp
out
jns
dec
(bad)
jl
mov
enter
sbb
loope
fwait
(bad)
out
adc
ins
outs
add
iret
addr16
loope
gs
dec
mov
paddd
mov
int
imul
xchg
popa
lods
in
vpcomb
mov
adc
xor
mov
and
xor
daa
sti
push
fstp
mov
scas
mov
es
es
test
inc
fldenv
xchg
mov
adc
popf
push
sub
mov
dec
mov
or
imul
sti
mov
mov
jmp
(bad)
cs
cmp
cmp
std
or
cmp
(bad)
(bad)
lea
xchg
mul
cs
mov
mov
jns
cmc
inc
arpl
push
inc
mov
mov
cmp
inc
(bad)
(bad)
and
dec
cdq
cdq
ss
lea
ror
loopne
je
outs
mov
cli
and
test
mov
sbb
mov
jae
sub
call
mov
xchg
cmp
jmp
(bad)
pop
std
dec
cmp
mov
jmp
push
jle
mov
pop
(bad)
lds
and
or
ins
xor
cmp
pop
or
mov
mov
shl
hlt
fld
into
push
test
and
sbb
das
sub
xlat
adc
sbb
std
dec
add
sbb
inc
jg
mov
mov
jecxz
xchg
dec
dec
loope
inc
cdq
fs
mov
call
inc
pop
test
mov
stos
mov
jecxz
outs
mov
cmp
dec
jecxz
mov
cmps
add
mov
dec
dec
or
shl
cmp
fdiv
shr
jmp
ds
mov
dec
daa
push
mov
lods
sbb
test
jbe
repnz
mov
(bad)
fst
cwde
inc
leave
inc
push
sub
loopne
or
loopne
jb
mov
clc
sub
xor
mov
adc
lock
mov
bound
xor
stos
rcr
(bad)
imul
clc
cmp
popa
lea
scas
arpl
clc
sub
xchg
(bad)
mov
cmp
xchg
ret
push
out
(bad)
or
mov
adc
cdq
ficomp
into
cmp
jb
fcmovne
pop
push
test
push
out
and
scas
outs
adc
mov
push
addr16
addr16
pop
xchg
retf
jle
push
aas
pop
mov
mov
neg
mov
xchg
adc
jmp
xchg
in
clc
dec
pop
cmc
sbb
xchg
xchg
add
lds
xor
xchg
dec
scas
js
inc
add
test
add
mov
(bad)
aad
shl
pop
mov
mov
bound
lahf
xor
pop
shr
(bad)
ins
jle
xchg
mov
mov
loopne
es
stc
fwait
xor
jnp
(bad)
jne
or
cmc
xchg
adc
xchg
sahf
fimul
push
pop
pop
cli
mov
call
xchg
cmp
js
(bad)
mov
xlat
xchg
sbb
sub
(bad)
cmp
dec
sbb
mov
movs
ret
test
xchg
xor
mov
outs
sar
imul
cmp
inc
neg
mov
mov
int
aam
dec
sub
out
mov
addr16
dec
ret
jno
mov
call
cli
aad
mov
mov
pushf
cmp
mov
push
lsl
jb
mov
test
es
out
cmp
jne
adc
mov
fsub
push
pop
adc
xchg
mov
lea
bound
push
in
mov
xor
sahf
test
adc
lods
and
lds
pop
inc
push
inc
push
mov
mov
mul
inc
outs
or
pop
mov
pop
inc
inc
shr
lock
scas
jns
push
mov
jl
scas
das
loopne
jge
(bad)
and
push
sub
icebp
cmps
mov
repz
fs
movs
jl
fsub
movs
in
pop
scas
ins
repnz
or
add
sub
aam
mov
lods
popa
sbb
aaa
and
and
mov
jl
sub
daa
cmp
mov
jb
push
rcr
(bad)
int3
mov
or
fsubr
imul
sub
daa
add
(bad)
adc
fmul
push
fisubr
sti
cs
xlat
and
xchg
jbe
movs
pop
fwait
mov
push
jb
and
loope
fnstcw
pop
cmp
idiv
lds
in
test
rcl
stc
dec
fsub
fiadd
lods
ficomp
inc
fisttp
fisub
into
adc
adc
in
pop
sub
loop
add
xchg
in
or
adc
add
rcr
mov
ds
mov
xor
stos
cmp
dec
push
and
(bad)
imul
push
adc
aas
pop
aad
ret
test
pop
int
xchg
inc
add
stos
and
inc
sbb
enter
cmp
dec
fmul
arpl
iret
lds
xchg
into
ret
xchg
lods
xchg
sub
ret
cs
inc
mov
jbe
cmp
pop
mov
sub
push
(bad)
or
jb
lock
jecxz
jo
ja
or
lds
add
pop
inc
(bad)
pop
repz
repz
sub
fisub
scas
fild
sub
repnz
sahf
pop
fstp
cmp
xchg
mov
stc
xchg
test
rcr
or
xchg
sbb
ins
sbb
jmp
cmps
adc
xchg
fsubr
sub
pop
popa
fs
ror
fisttp
sub
and
push
push
dec
push
rcl
mul
or
les
lds
add
fprem
xor
or
retf
shr
mov
call
(bad)
aad
movs
push
fsubr
xchg
call
inc
push
or
mov
pop
jb
dec
mov
idiv
jp
neg
jge
sub
loope
fld
add
mov
add
mov
pop
inc
inc
movs
popa
adc
lods
imul
lds
in
clc
sub
push
push
push
mov
push
mov
or
out
cmp
cdq
cdq
jnp
mov
cld
(bad)
xor
jae
pushf
cmp
int3
cdq
ja
fdecstp
and
movs
pop
jno
cld
inc
cmp
test
clc
enter
push
pop
pushf
lds
jmp
inc
push
jecxz
pop
mov
into
test
sar
sar
shr
call
not
popf
add
hlt
push
scas
sub
inc
sub
or
not
arpl
cli
test
inc
xchg
fild
idiv
fsub
cmc
js
dec
rcl
ret
mov
les
jmp
jae
jb
mov
repnz
clc
jo
dec
cwde
stc
(bad)
hlt
iret
jmp
push
lock
xor
iret
loop
mov
jb
adc
push
retf
sub
aad
test
push
add
add
lds
mov
jmp
dec
dec
ja
push
dec
pop
push
into
test
jmp
leave
aad
xchg
test
leave
xor
xchg
xor
gs
in
add
ins
leave
bound
sub
sbb
test
xchg
je
out
add
iret
je
(bad)
in
adc
push
test
inc
aaa
mov
xor
(bad)
push
mov
imul
xor
and
repnz
in
loop
push
push
js
mov
es
or
sub
push
retf
rcr
inc
sub
and
jne
ret
icebp
sti
ins
idiv
out
jns
addr16
jmp
jmp
lods
clc
stos
xor
sub
cwde
jo
add
cmps
cmc
adc
in
pop
aad
mov
push
or
vxorps
xor
and
fisubr
iret
(bad)
mov
jmp
pop
outs
dec
mov
mov
mov
pop
dec
jo
mov
es
popf
mov
int3
(bad)
xlat
ins
movs
les
xor
xor
ja
lock
jle
xchg
loopne
fnsave
fwait
xchg
mov
jb
pop
xor
fld
popf
xchg
js
int
pop
pusha
pop
push
xchg
xchg
xchg
leave
ins
jl
xchg
in
pop
or
mov
prefetch
or
xor
push
sbb
mov
lock
mov
xor
test
test
or
(bad)
push
rcl
xchg
dec
or
int3
(bad)
loop
loop
or
dec
sub
ret
cmp
fidiv
stos
(bad)
inc
outs
sub
dec
popa
shr
xchg
cdq
cwde
or
movs
inc
repnz
cmps
lock
jg
pop
je
mov
dec
js
nop
xchg
pop
(bad)
out
repz
and
ja
sar
fdivr
mov
add
fisttp
pop
fbld
fs
sbb
inc
adc
daa
ja
sbb
lods
lods
imul
enter
fdiv
sar
and
scas
push
lock
cmp
xor
cmc
dec
call
div
scas
adc
mov
cmc
mov
cwde
movs
outs
ins
push
cdq
mov
jb
dec
fldl2t
popa
(bad)
push
int
mov
imul
or
ror
jp
adc
jg
enter
test
mov
movs
xchg
outs
and
mov
sbb
cwde
leave
and
test
mov
sub
fadd
push
pop
xchg
cmp
mov
inc
mov
add
ds
stos
in
ds
movs
cld
(bad)
pop
jbe
(bad)
fild
xor
jbe
and
xchg
or
(bad)
pop
and
add
(bad)
int
inc
loope
mov
call
add
out
push
in
push
sub
ret
fild
and
sbb
mov
adc
jns
and
das
cmc
test
(bad)
and
inc
add
popf
rcl
popf
jp
push
iret
retf
jae
push
(bad)
push
in
dec
dec
cmp
push
jle
mov
adc
sbb
mov
ins
(bad)
pop
aam
imul
out
pop
cmps
cmp
and
jne
dec
movs
rol
adc
pop
(bad)
aaa
mov
or
popf
cmp
clc
and
aas
gs
xor
sbb
dec
jne
(bad)
je
mov
add
or
mov
sbb
inc
mov
sub
add
sbb
mov
dec
xchg
(bad)
sbb
jns
enter
and
ds
mov
mov
fnsave
iret
ins
ins
or
lds
mov
retf
cwde
ret
jns
inc
sbb
popf
punpcklwd
push
mov
dec
call
inc
sub
ss
pop
es
cmp
or
fadd
xor
mov
mov
jp
test
aad
leave
and
ficom
ror
sub
inc
adc
sub
fisttp
inc
les
mov
loop
pop
mov
jl
mov
outs
arpl
mov
cmc
mov
js
mov
retf
fnstenv
addr16
fldenv
push
sbb
pop
mov
mov
lock
aaa
inc
xchg
inc
sahf
std
stos
cmc
jno
add
in
dec
and
int
dec
daa
sub
push
std
ror
add
into
jmp
dec
jl
and
push
and
xor
sub
cmp
dec
mov
popa
mov
jle
jl
dec
stc
repnz
fstp
push
out
stos
or
push
aas
push
fild
mov
jge
mov
in
imul
out
(bad)
pushf
xchg
in
loopne
ins
clc
and
aaa
xchg
out
xchg
sahf
scas
out
clc
in
pop
(bad)
repnz
out
inc
sub
push
xor
xchg
mov
push
jo
add
pusha
and
add
mov
mov
(bad)
icebp
icebp
nop
sub
and
fs
mov
mov
lods
sub
or
ret
jb
xchg
pop
cmps
mov
imul
dec
neg
in
fwait
mov
sti
mov
out
loopne
movs
(bad)
inc
xor
test
or
pop
add
push
and
stc
lock
jmp
loopne
mov
dec
mov
jmp
test
fmul
dec
fs
xchg
xor
stos
cmp
xor
pusha
lods
enter
nop
xor
cmp
push
inc
add
pop
sar
sub
xchg
or
aaa
enter
mov
mov
inc
sahf
xchg
pop
fwait
outs
xchg
cmps
(bad)
pop
dec
mov
xlat
ror
push
mov
das
inc
stos
sub
push
dec
sbb
xchg
jne
enter
sti
sbb
adc
test
jae
xchg
cmp
cmp
jl
fld
test
jmp
mov
xchg
out
mov
cmp
nop
lea
cmp
daa
or
add
push
xor
push
xchg
ins
or
ins
adc
and
idiv
jp
pop
stos
adc
mov
outs
das
outs
jo
sub
cmp
jecxz
(bad)
mov
dec
cdq
sub
jne
mov
lock
shr
add
or
xchg
push
xor
and
mov
adc
dec
xchg
push
mov
retf
push
push
mov
add
mov
pushf
in
inc
cmc
sub
xchg
mov
sbb
xor
dec
(bad)
out
movs
and
add
cmp
in
cs
push
jecxz
lods
mov
sub
sbb
sar
ins
adc
scas
xor
lahf
call
sbb
add
sbb
pushf
mov
enter
mov
jnp
adc
or
aas
jecxz
idiv
out
dec
mov
sub
std
fidivr
arpl
gs
jnp
jne
aaa
and
mov
mov
or
and
test
and
data16
xchg
push
or
fbld
add
mov
cmovp
and
les
cmp
sbb
inc
mov
cs
mov
cmp
jbe
pop
out
cmps
or
sbb
jbe
in
and
inc
mov
aam
mov
xchg
cli
jb
movs
sub
scas
dec
dec
cmp
mov
jnp
stos
sbb
jp
(bad)
into
movs
push
sbb
lock
mov
inc
mov
add
push
and
ror
dec
int3
dec
xchg
hlt
aad
mov
cmp
xchg
imul
sbb
sbb
in
clc
cmp
cmp
dec
mov
stos
sahf
sti
jae
shl
sbb
das
int3
inc
clc
mov
lahf
sbb
cdq
inc
jmp
ret
mov
not
mov
jno
ja
dec
pop
jmp
cmc
jnp
or
gs
adc
jp
ret
sbb
xlat
sti
mov
daa
push
sub
mov
pop
push
mov
xlat
xor
xchg
fs
and
add
sub
rcl
call
push
push
imul
pop
iret
jl
and
nop
push
or
or
lahf
jnp
std
ret
push
xchg
cmc
and
sub
call
xlat
jbe
push
rcr
mov
cmps
push
aad
push
jmp
jle
fistp
push
xchg
sar
sub
pop
cmc
addr16
mov
inc
test
pushf
int3
les
jnp
or
adc
cmp
rcl
cmps
iret
fnstsw
or
inc
cmp
dec
dec
push
or
cmp
in
adc
cdq
or
addr16
xchg
jecxz
mov
sub
aam
mov
out
jo
mov
fst
jae
dec
fmulp
in
jle
mov
sub
test
call
lahf
push
mov
mov
je
lods
retf
xchg
mov
call
(bad)
add
add
iret
xor
adc
sub
arpl
out
mov
in
(bad)
std
cmp
scas
sub
sub
pushf
mov
outs
movs
inc
pop
add
or
das
push
mov
mov
daa
cmps
inc
sub
nop
repnz
mov
movs
adc
mov
push
add
clc
pop
or
rcr
dec
mov
(bad)
into
cmps
jo
push
iret
add
iret
add
sbb
xchg
jl
scas
mov
ss
mov
in
repnz
test
call
sbb
sub
loope
lds
jmp
and
xchg
enter
inc
mov
mov
fs
and
das
aas
imul
add
inc
stos
cmp
jle
push
and
pop
xor
out
xor
out
push
cld
imul
outs
xchg
fxch
outs
xchg
(bad)
adc
cmp
mov
sub
jg
cmc
mov
mov
movs
out
rcr
jbe
(bad)
or
cmp
(bad)
add
xchg
and
(bad)
aas
in
(bad)
sbb
mov
pop
xor
adc
arpl
out
shr
hlt
dec
mov
or
cmps
sahf
mov
jl
mov
xchg
sbb
mov
int
test
xor
(bad)
inc
jbe
mov
lahf
ins
add
leave
mov
pop
call
sbb
add
fisubr
adc
or
sub
ins
sbb
mov
dec
stc
xor
xor
sbb
push
mov
inc
inc
jne
adc
adc
push
pop
mov
out
jns
(bad)
or
mov
mov
repz
or
(bad)
and
xor
test
int
mov
rcl
scas
mov
dec
cli
cmp
xchg
lea
test
inc
test
popa
pusha
mov
test
inc
imul
push
xor
jnp
scas
sti
mov
mov
stos
mov
std
jbe
mul
(bad)
retf
add
pop
in
sbb
(bad)
dec
add
mov
dec
idiv
in
arpl
or
dec
dec
cmp
imul
adc
mov
sbb
jnp
int3
es
dec
(bad)
das
arpl
adc
mov
std
nop
cmp
add
inc
pusha
push
xor
inc
adc
pop
stos
xchg
mov
or
call
sbb
(bad)
ret
lods
movs
sbb
(bad)
ret
bound
xchg
push
xchg
sbb
mov
jmp
pop
repz
rcl
or
xor
push
test
sub
and
rcl
aad
push
xor
or
mov
icebp
in
scas
jg
lahf
gs
sahf
push
xlat
ins
dec
retf
ja
pop
and
jne
dec
cmp
in
cmps
jmp
sub
aam
(bad)
adc
jl
xchg
test
inc
imul
stos
xchg
sar
or
jge
cld
adc
jne
inc
lods
or
dec
sbb
mov
stc
jle
mov
mov
in
jmp
test
pop
pop
icebp
jns
out
mov
icebp
xchg
sub
fadd
in
mov
xor
jbe
mov
push
in
fstp
fistp
sti
in
adc
in
jo
cmc
mov
stc
or
cmp
sbb
jge
clc
mov
jp
popa
sub
icebp
pop
push
(bad)
adc
xlat
cli
(bad)
and
test
sbb
adc
inc
in
sti
mov
rol
shufps
sub
or
inc
pop
fcmovbe
aad
dec
sub
inc
jg
call
adc
test
jge
dec
adc
es
dec
inc
sub
pop
dec
cld
nop
adc
mov
push
lds
add
std
test
sub
dec
outs
rcr
daa
(bad)
fucom
lock
or
sbb
xchg
retf
sbb
call
iret
repz
std
cmp
fnsave
mov
je
ds
jge
lock
sub
popf
lods
jg
or
sbb
(bad)
mov
adc
pop
xor
cwde
jo
mov
int3
sub
fnsave
xor
mov
std
lds
retf
jp
les
mov
loopne
in
(bad)
push
int
mov
xbegin
ins
repnz
aad
(bad)
(bad)
popa
cmp
mov
pop
inc
scas
stos
std
mov
push
dec
push
mov
aam
rcr
mov
aam
jno
cmp
dec
shl
call
jp
data16
in
pop
jmp
gs
je
xchg
xchg
inc
jne
(bad)
mov
popa
mov
rol
cmp
inc
cmp
stc
in
or
dec
cdq
jecxz
shr
fldenv
sub
test
push
lds
mov
aas
lock
xchg
lods
xor
bound
jns
repz
ss
add
xchg
jecxz
ins
mov
mov
mov
pop
inc
daa
and
inc
mov
call
mov
scas
movs
xor
jmp
push
aas
sbb
sub
aam
inc
sub
jnp
ins
cli
sahf
jmp
cmp
movs
xor
xchg
and
in
fdiv
dec
jg
dec
imul
push
lea
das
test
dec
jb
sahf
fbstp
push
dec
mov
push
mov
dec
pop
loopne
cmp
sbb
fdiv
push
(bad)
test
imul
je
jno
div
push
sbb
sbb
aam
jle
cmp
je
dec
sub
mov
popa
gs
dec
out
mov
sub
add
cmps
inc
push
sahf
enter
scas
jb
outs
shr
rcl
sbb
sbb
lahf
lock
push
dec
xor
stc
ficomp
sahf
pop
cmp
jge
frstor
out
inc
and
cli
jecxz
mov
ins
(bad)
(bad)
or
add
ja
sub
or
pop
fs
test
mov
dec
add
daa
sub
fisubr
out
xor
not
add
std
mov
stos
push
test
test
jne
mov
mov
bound
push
and
repz
das
add
(bad)
jmp
ret
pop
or
add
xchg
mov
and
ins
xchg
xchg
popa
call
add
mov
mov
test
or
pop
cmp
(bad)
sbb
inc
rcl
leave
loope
add
xchg
inc
mov
lds
mov
sar
loopne
ss
pop
cmp
mov
push
int3
in
pop
pushf
push
dec
inc
pop
in
cmps
leave
jo
lods
dec
iret
outs
xchg
sbb
jae
and
xor
loopne
push
ret
pushf
movs
push
icebp
cwde
sbb
sub
out
sbb
xor
dec
mov
mov
or
xor
stos
mov
push
out
imul
nop
mov
mov
pop
aam
push
test
xor
adc
cdq
inc
aam
sub
pop
cmp
jae
push
repz
sub
(bad)
sti
gs
push
in
push
mov
cmp
mov
xchg
mov
xchg
mov
pop
cmp
lods
rcl
shl
ins
inc
xchg
fwait
leave
push
and
movs
shr
lahf
add
xchg
shl
popa
push
test
and
loope
out
jb
mov
addr16
xchg
jl
and
mov
sub
loope
std
mov
inc
jbe
pop
cmps
push
(bad)
pop
(bad)
jb
shr
adc
ds
xchg
cmp
aas
sbb
fdivr
inc
sub
popa
imul
retf
dec
push
adc
lods
cs
sbb
das
xchg
mov
int3
inc
or
es
(bad)
bound
faddp
sahf
int
outs
adc
dec
cmps
adc
adc
xor
or
(bad)
data16
int3
shl
dec
pop
adc
(bad)
icebp
xchg
je
dec
fbstp
and
cmp
pop
ja
cmp
sbb
inc
(bad)
imul
mov
and
daa
or
jo
aaa
pop
or
sub
mov
sub
pushf
movs
jl
es
das
aad
pop
pop
xor
repz
mov
ret
or
call
mov
fisttp
push
sbb
mov
xchg
sahf
mov
retf
inc
xchg
cmc
idiv
sbb
popf
dec
xchg
jbe
sub
push
jnp
sahf
cmps
mov
cdq
icebp
sub
imul
ds
inc
popf
sahf
dec
dec
xchg
retf
jmp
and
outs
popf
jne
retf
and
mov
repz
dec
mov
sbb
ds
enter
shl
ins
sbb
in
stos
jne
push
fdivrp
or
lahf
xchg
adc
sub
sub
mov
int
fwait
jno
fs
(bad)
in
std
push
fisttp
les
fs
jns
repz
std
pop
cmp
jecxz
adc
xor
dec
int3
les
add
adc
shld
fnstenv
mov
jecxz
jno
shr
xchg
(bad)
push
adc
gs
sub
jns
inc
shr
test
or
xchg
ins
sub
push
mov
les
loope
aaa
(bad)
ret
dec
sti
xchg
jecxz
repnz
jle
ret
repnz
inc
sub
xchg
popf
cmp
ja
rcr
xchg
dec
pop
mov
icebp
mov
cmps
inc
test
out
push
jne
xor
mov
imul
frstor
xor
les
add
jo
push
inc
dec
cmp
and
popa
add
pop
mov
xchg
pop
cmp
out
cmc
xchg
sub
ins
ds
mov
hlt
cmps
and
mov
or
jge
push
iret
inc
push
not
mov
push
adc
fisub
add
pop
fld
sbb
scas
data16
adc
hlt
stos
mov
cwde
ja
xlat
xchg
ja
dec
jmp
mov
stc
or
sbb
add
jl
jg
(bad)
push
xchg
add
mov
or
ror
xchg
pop
push
sbb
mov
or
gs
pop
popf
inc
xchg
mov
popa
icebp
jns
mov
mov
mov
inc
stos
jbe
mov
and
cmps
shr
sbb
and
add
fucom
and
sbb
jecxz
aas
jle
mov
dec
or
jg
mov
nop
lea
out
adc
dec
mov
fsubrp
std
out
xor
not
jno
dec
into
into
fs
outs
jno
mov
push
hlt
ins
fidiv
jge
sbb
js
fidiv
and
(bad)
(bad)
adc
push
cmp
movs
cwde
and
(bad)
dec
mov
in
push
xor
lods
xchg
sti
popf
sbb
rol
push
mov
mov
push
enter
adc
sub
pushw
xor
dec
ret
repnz
push
add
xor
shl
jae
aam
test
cld
adc
popf
stos
mov
mov
mov
in
loop
stos
or
xor
and
shl
loop
inc
(bad)
lock
mov
xchg
out
inc
repnz
aaa
pop
add
(bad)
ds
dec
sbb
es
hlt
push
(bad)
dec
xchg
jmp
(bad)
push
cdq
or
call
fidivr
loopne
inc
in
ds
mov
and
sbb
cwde
movs
add
xchg
inc
mov
jae
xor
dec
pushf
inc
cmp
pusha
dec
and
in
cmps
mov
out
ins
into
jmp
(bad)
push
data16
inc
dec
jg
xchg
add
cmp
lods
(bad)
jp
(bad)
push
dec
sub
inc
jb
in
jl
cdq
pop
call
fnsave
sti
or
inc
rcr
mov
xchg
popf
cmp
dec
sbb
jno
jmp
in
int
xor
adc
ret
loop
call
sub
loope
sub
cmp
dec
cwde
sbb
fist
xchg
in
pop
sub
add
fisubr
xchg
(bad)
and
jmp
jnp
xor
add
ins
fcom
lea
inc
jg
sahf
dec
outs
and
das
shl
xor
inc
int
lock
(bad)
retf
arpl
push
mov
lds
outs
sub
mov
cmp
mov
scas
aad
pop
stos
push
sub
fs
(bad)
push
push
ss
sbb
jmp
psrlw
sbb
pop
lds
fisttp
add
fstp
ins
daa
adc
sub
out
mov
xchg
push
daa
pop
sbb
out
out
lods
push
inc
sti
dec
fs
xor
sub
shl
dec
mov
dec
adc
xchg
and
stos
cdq
mov
ror
es
sar
adc
int
sbb
sbb
mov
inc
sbb
adc
adc
ss
aas
adc
xchg
sub
jmp
in
aas
ret
(bad)
retf
xor
inc
mov
cmps
ds
rcl
mov
dec
call
sbb
xchg
inc
sub
mov
dec
jl
adc
movs
in
xchg
cs
je
icebp
push
cmp
jo
inc
mov
sbb
lods
adc
fcmovbe
mov
fs
ins
push
xor
mov
movs
and
lea
nop
cmp
in
fnsave
mov
mov
xchg
into
or
mov
div
pop
nop
sbb
or
dec
bound
mov
add
in
mov
mov
pop
sbb
adc
dec
push
data16
add
popa
jno
xchg
sub
xor
mov
cwde
jno
(bad)
shr
pop
add
cld
not
xlat
pop
imul
call
pop
int3
aas
jg
neg
cmps
movs
dec
jbe
cli
xor
call
mov
aam
out
movs
lea
repz
mov
xor
xchg
dec
aam
stc
test
mov
(bad)
cmp
fbld
mov
lock
pusha
popf
xchg
xor
bound
pop
mov
imul
fisubr
lds
and
jge
shl
push
es
add
or
or
je
dec
popf
in
mov
xor
xchg
sbb
out
and
fisttp
sub
std
shl
shl
outs
push
cli
push
jge
in
inc
push
fnstsw
mov
push
jbe
lds
xor
mov
out
popa
sub
and
mov
sub
add
jecxz
shl
sbb
push
mov
push
fcom
cdq
in
stos
inc
and
xchg
push
add
mov
cmovge
jb
sub
ficomp
cmp
out
and
imul
xor
xor
or
jp
ror
ins
gs
jge
aad
hlt
jae
add
sbb
jmp
cmp
add
push
xchg
arpl
push
int
jmp
push
leave
je
sbb
mov
push
test
scas
sti
jl
jmp
lahf
xor
pushf
lea
lock
jno
movs
xchg
(bad)
mov
push
rcl
lods
push
test
inc
jp
les
pop
(bad)
cmp
arpl
retf
mov
add
pop
ret
add
pop
fucomi
push
dec
iret
leave
jno
mov
dec
pop
cvtdq2ps
(bad)
pop
and
(bad)
adc
fcomp
xchg
test
imul
inc
lods
push
call
inc
movs
push
aas
or
not
aad
sbb
mov
xor
pusha
imul
or
cmp
fs
mov
daa
icebp
in
mov
popa
jns
les
ret
xchg
loope
and
mov
cld
mov
sub
hlt
ins
fdivr
cld
in
mov
dec
test
(bad)
mov
jno
retf
mov
in
inc
scas
adc
fistp
icebp
outs
(bad)
mov
push
popf
dec
mov
ss
int
arpl
mov
push
popf
or
add
add
and
(bad)
icebp
fsub
fild
popa
adc
xchg
sbb
test
mov
dec
repnz
sbb
outs
faddp
lods
xchg
dec
mov
dec
stc
push
outs
ins
icebp
push
sti
mov
jmp
mov
js
jne
pop
iret
mov
lea
rcl
jmp
lods
inc
mov
daa
repz
sub
pop
push
inc
stos
pop
mov
adc
out
or
fiadd
push
xchg
dec
ins
fadd
mov
sub
add
fldenv
scas
cdq
xor
loope
jmp
mov
mov
pop
ins
dec
shr
xchg
jmp
mov
sub
out
cmp
inc
lahf
push
fcmovbe
aad
scas
nop
popf
cdq
mov
adc
test
call
div
cmps
test
sbb
test
sbb
fisttp
cmc
adc
jl
push
mov
add
add
mov
inc
xchg
(bad)
ins
inc
or
rol
fcmovnbe
sub
lods
rcr
out
adc
loop
inc
xor
fisubr
push
mov
inc
xchg
mov
shl
fs
lahf
sbb
mov
and
daa
mov
shl
cli
dec
cmp
xchg
jecxz
shr
retf
mov
mov
jmp
and
jbe
or
mov
xchg
out
mov
adc
std
dec
nop
fsub
cmp
imul
jge
retf
fisttp
pop
push
mov
inc
lods
daa
pusha
cmc
into
adc
sub
jno
pop
cmp
xor
xchg
cmp
inc
pop
mov
lea
push
xchg
stc
adc
or
shl
dec
xchg
jo
cdq
jno
or
call
ret
xchg
dec
xchg
int3
movs
pop
jb
rcl
mov
into
mov
cdq
mov
cdq
(bad)
sub
(bad)
arpl
clc
fs
xlat
mov
xor
xchg
jp
js
retf
inc
aam
dec
fucomp
dec
xor
sahf
pop
cmc
mov
xchg
or
retf
mov
ss
ds
faddp
cli
mov
cld
jp
add
sub
clc
fs
sti
inc
arpl
fcmovb
or
es
jns
mov
bound
mov
lahf
mov
xchg
enter
and
xchg
das
retf
xchg
shl
mov
mov
dec
mov
mov
xchg
sub
out
inc
jnp
dec
enter
outs
popf
and
xor
or
je
add
inc
and
mov
cdq
sbb
sub
rol
or
sub
inc
mov
push
sub
pop
clc
ret
imul
jne
cmp
lds
push
xchg
push
jle
jecxz
daa
test
jne
aad
ror
(bad)
hlt
jle
retf
ss
or
adc
ins
or
fisttp
and
cmps
fidiv
add
ds
push
loopne
cwde
mov
adc
movs
inc
repz
mul
in
inc
jl
in
adc
dec
icebp
push
loop
in
ss
addr16
movs
retf
xchg
int3
mov
ficom
in
cld
dec
js
jg
cmp
dec
or
jno
mov
mov
iret
sub
adc
test
je
sub
add
pop
mov
mov
xchg
sub
or
add
and
mov
or
out
push
xor
imul
xchg
fldcw
fst
(bad)
mov
stos
iretw
cld
not
mov
fdivp
pop
stos
pop
jl
daa
pop
dec
jnp
ror
fistp
cmp
cmp
inc
pop
hlt
add
adc
gs
movhps
or
inc
add
add
mov
retf
(bad)
sub
sahf
xor
pop
scas
(bad)
sbb
jns
inc
sbb
pop
shl
inc
mov
sub
leave
mov
inc
std
cdq
adc
sti
fldl2t
std
cmp
fmul
jmp
fidiv
sar
pop
jmp
add
mov
jcxz
jbe
retf
test
adc
dec
(bad)
das
lock
xor
xor
sbb
xchg
pop
ror
jecxz
aaa
(bad)
fild
ror
popw
dec
mov
or
fiadd
cmps
mov
pop
adc
retf
add
dec
(bad)
xchg
scas
dec
repz
push
aaa
dec
sbb
ret
mov
push
(bad)
(bad)
xor
(bad)
scas
loop
jae
mov
scas
mov
inc
xor
movs
adc
movs
ret
maxps
push
inc
sbb
sub
bnd
aad
dec
ins
push
mov
lea
sbb
and
inc
ret
movs
outs
xchg
rcr
(bad)
xchg
mov
(bad)
les
inc
sub
inc
mov
repz
loop
pop
xchg
cdq
pop
and
mov
addr16
push
pop
test
push
mov
movs
int3
push
add
mov
cmp
pusha
call
push
or
bound
cmp
mov
mov
fstp
push
aaa
stos
add
xor
loopne
test
cld
mov
adc
inc
ins
jmp
jg
loop
mov
add
clc
mov
push
mov
fsubr
retf
ins
je
pop
(bad)
mov
pop
lock
pop
sub
loop
lods
not
pop
shl
push
in
cli
jb
int3
dec
mov
in
aad
scas
cmp
repz
mov
push
add
adc
lods
ret
pop
cdq
leave
mov
xor
jmp
fsqrt
sub
out
aad
pop
sbb
fild
push
loop
in
fwait
out
jp
jae
hlt
xlat
mov
add
jle
scas
xlat
push
xor
inc
ins
ins
or
lahf
(bad)
cmp
ja
mov
or
pusha
arpl
pop
test
(bad)
stos
test
outs
lods
inc
mov
pop
aaa
sbb
out
loop
out
jbe
in
and
fist
adc
sub
push
inc
loop
test
enter
sbb
popa
and
mov
sub
pusha
daa
popa
not
jl
not
aas
cdq
or
imul
push
adc
lea
mov
inc
cmp
repnz
push
mov
cld
pop
sbb
jns
test
and
nop
or
(bad)
ret
cmp
push
sbb
and
rcr
sahf
into
call
push
cmp
rcr
pop
test
or
jmp
rcr
xchg
mov
dec
add
cmps
pop
cmc
adc
ins
sbb
hlt
lock
push
gs
(bad)
out
mov
imul
push
mov
sub
inc
mov
inc
enter
scas
jp
rcr
add
and
jb
repnz
mov
push
(bad)
pop
xor
pop
mov
and
fcom
jo
mov
inc
aam
add
cmps
ret
add
rol
and
push
jno
push
mov
xchg
movaps
cmp
icebp
pushf
adc
cwde
and
pop
or
mov
add
fimul
mov
ds
pop
mov
jl
data16
inc
inc
mov
ret
fs
stc
mov
addr16
ins
xchg
add
sub
push
cwde
ins
jne
call
fs
xchg
test
sahf
stos
retf
pushf
leave
out
test
pop
mov
cwde
shr
out
sub
jnp
jbe
xchg
loopne
movs
add
lds
pop
add
es
sbb
test
rcl
sbb
sahf
pop
jbe
jl
ret
js
sub
pop
(bad)
pop
ins
sbb
inc
and
add
lea
mov
push
inc
mul
adc
sub
int
and
add
test
dec
sbb
and
rol
xchg
cmp
je
aaa
js
sub
out
push
and
rol
jns
or
lock
xor
mov
xor
pop
lea
sub
call
popa
test
jl
xchg
daa
push
rcr
jno
inc
cli
sub
les
scas
fwait
xchg
repz
mov
mov
in
inc
or
jle
add
push
mov
stc
std
cs
(bad)
in
lahf
mov
imul
push
push
daa
(bad)
add
inc
dec
popa
(bad)
add
sbb
mov
jge
sub
inc
jb
adc
adc
xchg
out
dec
xchg
out
(bad)
mov
leave
pop
inc
xchg
adc
ins
cmp
jge
jmp
ret
cld
mov
test
bound
es
ret
xchg
loope
ds
fsubr
dec
into
push
push
fucom
adc
sahf
pop
pop
daa
outs
push
cli
outs
jge
fs
jmp
sub
cmc
fbld
mov
mov
loop
dec
lods
dec
push
dec
and
out
das
(bad)
movs
xchg
(bad)
jmp
aam
ret
lods
push
mov
cmc
fisttp
jmp
push
out
xchg
or
cmp
sub
sbb
sub
into
mov
stc
int3
jno
push
cmp
xchg
aad
lahf
ins
mov
jmp
lods
sbb
daa
mov
jge
fs
xchg
dec
dec
mov
test
fs
or
aas
(bad)
pusha
xor
stos
dec
movs
sbb
xchg
and
cmc
jbe
dec
jno
pop
push
add
(bad)
pop
into
hlt
test
sti
fs
fimul
fst
xor
cmps
bound
adc
dec
rol
js
mov
test
icebp
popa
popa
or
dec
sbb
dec
mov
shl
aas
push
ret
sbb
pop
retf
call
cmp
stos
ret
clc
jp
mov
imul
xor
add
mov
jae
inc
xchg
xchg
xor
jo
or
sti
mov
(bad)
mov
cmp
xchg
jecxz
leave
adc
pop
cmc
push
dec
or
outs
stc
cs
sub
cmp
push
mov
je
push
jge
cmp
daa
dec
call
adc
sub
sbb
frstor
pop
push
in
xor
push
call
xchg
adc
sub
jbe
retf
dec
cmp
cmp
nop
adc
aaa
pop
mov
jge
loop
aad
mov
sub
add
pop
sti
push
test
loop
dec
gs
ret
je
in
push
push
aad
inc
leave
aad
dec
fisttp
xchg
mov
cmp
pop
fmul
mov
fadd
shl
lahf
ins
xchg
adc
and
xlat
in
xor
(bad)
(bad)
aam
add
xchg
push
mov
cmp
mov
cwde
int
or
retf
loope
cmp
xchg
adc
pushf
adc
bound
adc
scas
ins
(bad)
jmp
and
pop
inc
fnstenv
das
scas
sub
pop
or
mov
movs
std
das
retf
mov
jae
jg
mov
pusha
call
jg
mov
lahf
mov
loope
xchg
ror
loop
lea
jp
mov
std
in
outs
cwde
push
lods
cmp
loope
(bad)
out
sub
xor
out
jle
inc
popa
jo
add
sub
jo
jne
lea
(bad)
iret
adc
ss
je
ret
jns
ja
xor
mov
push
out
adc
sbb
out
mov
(bad)
xor
call
pop
push
iret
repz
xchg
test
shl
and
fndisi(8087
je
xlat
sub
push
cld
test
shr
mov
jno
dec
fwait
jmp
inc
repz
cmps
xchg
xchg
jnp
repz
mov
inc
mov
jl
push
repnz
fs
inc
lock
pusha
scas
ret
jb
mov
in
jle
stos
add
es
xor
jo
xlat
in
inc
mov
mov
scas
sub
pop
(bad)
jle
sti
in
xchg
mov
sti
in
(bad)
jmp
sbb
mov
out
sbb
push
cdq
mov
pop
inc
into
dec
(bad)
(bad)
mov
std
in
ret
push
cs
sub
jnp
js
(bad)
fcomp
fldpi
mov
iret
pop
cmp
fimul
add
cli
(bad)
mov
mov
scas
fnsave
or
sub
cmc
pop
jmp
setle
mov
ja
mov
movs
push
push
mov
jge
push
mov
fwait
das
js
mov
daa
ins
enter
mul
dec
pop
(bad)
cmps
(bad)
iret
mov
jl
fldcw
(bad)
fdivrp
lds
(bad)
mov
sub
loop
scas
dec
mov
repz
js
cld
arpl
jge
loope
repz
dec
jbe
ja
in
call
clc
jmp
mov
push
in
jl
fisttp
fnstenv
mov
loop
arpl
aas
pop
xor
out
imul
out
lock
div
mov
jp
es
push
dec
pop
mul
mov
pop
cmp
in
mov
dec
xor
ss
daa
std
cs
pop
stc
xchg
call
mov
call
mov
loope
rol
into
mov
cmp
jmp
lea
jmp
pop
lods
sub
mov
sti
stos
adc
mov
mov
mov
jp
in
pop
std
inc
icebp
data16
daa
xlat
(bad)
idiv
aad
jno
cli
xchg
aas
mov
ficomp
fist
push
mov
aad
dec
sahf
sahf
push
cmp
cmps
ins
test
lock
sub
jne
icebp
lahf
jge
xor
cs
fsincos
je
repnz
mov
shr
xchg
loope
adc
fcom
sahf
imul
mul
mov
jbe
sub
xchg
jb
in
cs
clc
fidivr
iret
in
arpl
lea
(bad)
pop
outs
jle
jecxz
mov
push
fiadd
xchg
sub
jmp
(bad)
pop
out
cmp
jle
xor
loope
cmps
iret
lahf
std
mov
in
or
ds
in
add
jg
rcl
mov
inc
dec
mov
pop
pop
fst
ins
(bad)
push
or
pop
dec
(bad)
and
inc
out
or
dec
cmp
xchg
iret
or
cmp
lods
mov
out
sti
test
mov
mov
aam
lock
pop
push
jecxz
fsubr
or
xchg
pop
jne
in
aam
fisubr
fnstsw
mov
(bad)
cld
aam
fistp
dec
(bad)
(bad)
jns
lods
pop
pop
push
push
outs
mov
xchg
jl
into
xor
aas
push
out
dec
call
mov
iret
out
call
out
(bad)
int
out
xchg
retf
lahf
ins
imul
icebp
int3
push
push
jle
icebp
int3
mov
icebp
das
pop
aas
cli
retf
repz
pop
pop
(bad)
fdivp
mov
jl
sbb
in
iret
mov
iret
sub
xchg
aad
mov
inc
data16
std
cmp
xchg
orps
jle
mov
test
mov
jle
pop
xlat
pop
mov
jg
push
sti
icebp
dec
fwait
cmp
sti
xlat
xchg
adc
cli
fadd
dec
sub
and
cs
lods
(bad)
sti
jg
jg
push
mov
fdiv
fstp
jg
int3
call
dec
lahf
xchg
push
data16
xor
jle
scas
jne
std
jno
fcomp
(bad)
push
mov
mov
ja
retf
movs
xlat
je
bnd
sbb
in
mov
enter
stos
xor
sbb
jg
push
jmp
out
scas
(bad)
loop
imul
fwait
cli
shl
jle
lods
cmp
push
pusha
in
scas
mov
idiv
mov
out
dec
stos
mov
sahf
call
repz
pop
(bad)
xlat
das
popf
fnsave
cmc
and
(bad)
push
(bad)
fdivrp
cmovg
icebp
mov
jns
mov
fisub
xor
int3
imul
idiv
loope
cmps
ins
sub
cld
aaa
(bad)
jno
aaa
call
lea
call
in
dec
neg
jno
scas
mov
lahf
(bad)
mul
movs
iret
jle
test
out
fdiv
lahf
lods
scas
out
je
stc
dec
xchg
ret
test
retf
pop
das
lods
js
or
jno
pop
imul
xchg
stos
cmp
mov
out
jmp
in
(bad)
js
fsubrp
xchg
aas
daa
mov
out
add
loop
(bad)
div
mov
fbstp
sub
stc
int
mov
adc
lahf
mov
sub
fnstcw
dec
mov
(bad)
pop
push
jbe
jns
ret
lahf
sahf
ds
dec
(bad)
loope
cmp
jmp
test
mov
xor
gs
sbb
ins
xchg
and
push
inc
xchg
xchg
xor
sub
push
inc
imul
hlt
mov
sahf
out
cmps
xlat
retf
mov
jecxz
mov
cmp
js
jge
push
scas
rcl
mov
ds
sbb
jle
sub
(bad)
mov
push
cdq
sti
push
leave
out
inc
icebp
fist
ins
cdq
lods
cmp
ret
imul
jae
push
jecxz
push
push
xor
rep
rol
mov
iret
mov
rcr
test
arpl
mov
shr
leave
cld
es
iret
repnz
out
cli
movs
xchg
test
inc
out
fnsave
add
pop
ret
psrld
adc
dec
push
repz
xor
aas
fbld
int3
fs
inc
push
idiv
mov
mov
cld
xor
int
(bad)
ja
inc
call
dec
shl
mov
loop
fwait
xchg
or
add
and
sub
mov
jns
or
xchg
and
sbb
(bad)
fdiv
cmp
jle
cmp
and
rcl
sahf
push
sti
mov
in
adc
leave
mov
adc
aam
and
cmp
cmp
leave
mov
sbb
push
cmps
bnd
sub
cdq
sub
sub
inc
jo
aad
cmp
ds
addr16
outs
popa
test
and
dec
iret
pop
scas
ds
fs
cmp
in
icebp
cmps
jg
movups
ds
(bad)
aad
xchg
mov
and
or
dec
push
mov
movs
inc
xlat
jno
test
push
push
out
pop
loop
mov
inc
movs
fbld
xchg
iret
rcl
xor
cdq
test
jmp
mov
cmps
sbb
jmp
nop
mov
jg
not
aas
in
xchg
mov
shl
pushf
loope
popf
shl
out
mov
pop
out
xor
xor
jbe
add
aaa
stc
xor
imul
mov
jle
das
fisubr
fidivr
ret
sti
inc
mov
jne
dec
mov
js
push
xchg
jns
test
outs
retf
and
sub
fwait
lods
xchg
in
scas
xchg
mov
stos
mov
addr16
jmp
retf
jae
mov
mov
jl
xchg
test
fiadd
ret
mov
mov
xor
pop
jb
addr16
ss
stos
ret
sub
repz
cld
mov
ins
add
xor
jne
arpl
cld
cmps
push
push
inc
fstp
(bad)
rcr
aas
std
push
xor
adc
xchg
in
sbb
loop
inc
mov
fstp
call
fstp
imul
test
stos
sbb
in
mov
outs
call
xchg
push
mov
push
pushf
mov
sbb
push
push
xchg
(bad)
call
movs
fs
sub
push
adc
rcl
cli
cmp
sub
mov
mov
movs
clc
adc
and
test
cmc
pop
(bad)
popf
cmp
loopne
mov
shr
fldenv
adc
dec
sbb
pusha
push
pop
mov
movs
sti
icebp
xchg
scas
retf
repz
jns
xor
push
inc
fnsetpm(287
mov
and
js
js
adc
scas
sub
gs
push
push
jg
comiss
sub
pop
sub
movhps
mov
repnz
aad
xchg
pop
xor
xor
out
rcr
shl
dec
into
add
fisubr
ret
push
pop
movs
add
sbb
dec
adc
inc
jo
sub
iret
enter
jmp
push
jge
mov
and
pop
fxch
adc
xor
dec
pop
sti
inc
mov
cdq
fld
cmp
xor
loope
fadd
iret
pop
sbb
out
call
jae
loopne
popf
cmp
imul
loop
push
shl
mov
cmc
outs
stos
or
sub
sti
cmc
scas
cdq
pop
mov
jns
ins
add
pop
xlat
cli
push
mov
cmc
stos
cmp
mov
cmovp
jge
jmp
stos
add
div
pop
sar
std
gs
push
scas
sbb
lahf
jbe
popa
sbb
mov
and
fdivp
popa
idiv
jb
cld
pop
sbb
dec
cld
push
cmp
mov
jp
int3
cmc
into
push
mov
mov
inc
test
jge
popa
stos
aad
(bad)
dec
jl
sub
stos
cmp
cmp
retf
adc
(bad)
mov
retf
fxch
cmp
repnz
fiadd
add
mov
ret
cmp
dec
ss
repnz
ins
jbe
pop
mov
inc
pop
sub
dec
scas
jb
cs
or
popa
sar
jl
jmp
loopne
jmp
pop
pop
outs
fbstp
dec
pushf
push
retf
leave
neg
loopne
dec
test
imul
lods
icebp
push
cmps
ins
xor
movs
imul
aam
mov
icebp
rcl
repz
ror
or
cld
or
out
inc
lods
adc
mov
xor
xchg
fisubr
cdq
dec
repnz
and
xor
jb
adc
cli
cmc
cld
and
cli
scas
ret
js
leave
and
pop
leave
jecxz
or
lods
sahf
(bad)
dec
push
push
mov
or
cs
cmps
push
stc
out
shl
dec
mov
pop
sub
pushf
sbb
cmp
jmp
call
push
and
push
mov
(bad)
mov
cli
shl
(bad)
push
movs
(bad)
ss
out
jp
push
mov
jecxz
push
loopne
xchg
dec
daa
jge
repz
mov
fwait
jge
pop
and
push
pop
xchg
xor
into
test
dec
mov
pusha
xor
(bad)
pop
pop
cli
sub
aaa
mov
sbb
in
mov
retf
div
daa
mov
pop
mov
test
xchg
cdq
stos
(bad)
test
pop
xchg
mov
push
dec
push
leave
cmps
pop
jmp
stos
adc
mov
mov
jmp
mov
shl
mov
pop
mov
pop
mov
jle
movs
out
cwde
shr
or
push
not
jl
and
dec
jbe
jg
ins
cmps
sub
inc
repz
and
retf
inc
cdq
mov
fisttp
into
mov
mov
xor
neg
dec
push
xor
xchg
inc
and
cmp
imul
xchg
xchg
fmul
sbb
cmps
enter
(bad)
imul
xor
mov
push
or
sar
clc
mov
sbb
cmc
mov
sbb
and
mov
sbb
jecxz
pop
ds
stos
jl
cmp
jne
data16
cmp
sbb
retf
add
hlt
(bad)
add
clc
mov
imul
aam
jle
cmp
cli
ds
in
and
daa
pop
mov
lods
jo
mov
xchg
repz
cmc
js
in
sub
out
loopne
fdiv
mov
movs
dec
out
test
xor
mov
(bad)
int
adc
cmc
loop
push
ja
int3
dec
mov
jno
popf
dec
lods
and
retf
mov
aam
je
push
call
jge
mov
(bad)
js
fcomp
stc
clc
sahf
stc
inc
dec
mov
lahf
loopne
aam
adc
xchg
outs
shl
(bad)
loope
repnz
sub
sub
stos
outs
pop
mov
pop
xchg
cmp
in
es
mov
pusha
jle
ins
xchg
add
in
inc
int
fidiv
mov
cmp
loope
push
test
or
xor
inc
mov
in
push
fwait
xor
xchg
cli
push
push
adc
push
fisttp
adc
jmp
sbb
mov
mov
jecxz
mov
push
shr
and
bound
sub
sbb
inc
jmp
mov
cdq
mov
push
xchg
mov
ss
cmps
cmc
loopne
lahf
repnz
aas
fimul
lods
imul
xchg
imul
mov
int3
imul
pop
and
mov
jle
int3
xor
call
lds
push
test
lods
sbb
rcr
jl
mov
fimul
in
sbb
dec
xchg
ja
jp
pusha
iret
mov
ds
(bad)
(bad)
cmp
vaddss
mov
jl
ja
or
jl
sti
jge
mov
mov
push
adc
push
jle
shr
paddusw
in
je
sti
addr16
mov
jno
sub
stos
(bad)
arpl
pop
cli
lods
daa
push
lods
ss
imul
push
addr16
or
pusha
lock
adc
sbb
pop
cmp
test
cdq
(bad)
jecxz
xchg
push
push
push
xchg
jmp
mov
mov
aam
out
arpl
jne
fimul
pop
and
lods
push
xor
push
cmp
cli
ficom
xor
pop
jns
pop
ret
xor
mov
adc
into
cli
cmp
mov
mov
loop
mov
aad
inc
mov
(bad)
jbe
ss
scas
mov
adc
(bad)
push
cdq
sbb
icebp
pop
test
push
xchg
cs
mov
push
pop
mov
adc
jno
addr16
sti
mov
sub
jmp
into
xor
push
mov
sub
dec
push
mov
xor
cwde
pushf
sub
xchg
ficomp
jecxz
hlt
mov
or
xor
inc
pop
sub
sub
lods
out
rcl
enter
cmp
sbb
jo
mov
pop
ret
scas
scas
or
dec
sbb
mov
jns
xor
xchg
les
mov
push
xchg
mov
repnz
xchg
nop
pop
fnstcw
outs
cmp
repz
sub
and
pusha
cli
dec
inc
cmp
sub
and
cmp
scas
mov
or
mov
mov
or
dec
cs
mov
inc
addr16
das
or
dec
jl
cdq
and
jbe
int3
cmc
or
jbe
xchg
dec
ret
pop
pop
mov
stc
inc
call
jbe
push
sti
popf
jae
pop
outs
mov
out
call
cld
fsubr
(bad)
sub
daa
daa
fcmovnu
pushf
imul
je
xchg
jb
and
jbe
into
cmp
inc
sub
and
repz
mov
lods
jmp
mov
ror
push
xchg
and
stos
sbb
fisttp
and
pop
sbb
in
mov
outs
mov
cwde
fucomp
add
shl
xlat
bound
dec
in
mov
in
jne
xor
sub
jecxz
mov
mov
pusha
jp
pushf
das
loope
push
fst
arpl
pop
dec
push
lock
fild
cli
(bad)
pop
retf
ins
loopne
and
cmp
and
xchg
push
fcom
push
jge
inc
imul
test
ins
xor
not
add
xchg
or
sub
aas
mov
mov
inc
cmp
pop
clc
jns
lods
iret
and
pusha
loop
int3
jnp
(bad)
popa
lds
pop
(bad)
ror
inc
cmps
pushf
rcl
jge
push
adc
adc
mov
adc
retf
(bad)
rcl
add
loop
dec
inc
xor
test
cmps
jb
mov
adc
ret
lahf
mov
jecxz
xchg
loope
int
xchg
outs
push
(bad)
ins
(bad)
mov
mov
mov
mov
test
adc
sub
mov
mov
in
pop
jg
sbb
seta
fild
jmp
out
mov
imul
inc
inc
and
stc
cld
jmp
mov
cmp
or
pop
int
jne
pop
jg
(bad)
xor
in
lods
sbb
jne
mov
retf
push
sbb
fsub
fs
mov
das
(bad)
pop
fstp
mov
shl
fldcw
push
push
cli
sbb
or
xor
sbb
xchg
das
push
sbb
mov
cmps
(bad)
jp
mov
cwde
inc
xchg
(bad)
iret
sub
lods
jg
push
xchg
fmul
call
ds
adc
bound
cs
repz
int
imul
jnp
xchg
test
pop
imul
into
xchg
sbb
sahf
dec
mov
pop
sub
cdq
cmp
hlt
mov
hlt
in
mov
mov
mov
cmp
xchg
mov
aas
xor
cld
dec
push
mov
fisttp
mov
outs
scas
out
mov
jl
mov
in
popf
cmps
les
out
jne
push
jnp
lahf
cld
xchg
popf
je
outs
inc
jne
push
or
out
cmp
mov
mov
idiv
cmp
in
das
out
cmps
cwde
cmp
out
das
fs
inc
aad
xchg
dec
sahf
movs
mov
mov
pop
sbb
mov
mov
ins
ins
pop
mov
jb
cmp
cmp
inc
addr16
in
rcl
cmp
scas
cmps
mov
and
jno
aaa
push
and
leave
cmps
out
cmp
shr
ret
xlat
arpl
sbb
mov
lea
jecxz
scas
cmp
xlat
fldcw
into
pop
jl
iret
call
mov
aas
aad
sub
(bad)
icebp
clc
dec
push
popa
(bad)
adc
div
popa
imul
loop
sub
(bad)
rol
xchg
adc
aas
mov
test
ins
push
pop
je
cwde
(bad)
out
jnp
into
fdivr
mov
imul
mov
xor
test
(bad)
xchg
les
cmp
sbb
stos
das
aas
xchg
fmul
out
dec
pop
xor
push
jae
popa
inc
in
mul
test
mov
mov
(bad)
test
jecxz
xor
jp
sti
xor
sub
jmp
loope
dec
mov
adc
pop
jp
scas
test
jo
inc
push
mov
sub
test
xchg
neg
mov
call
jbe
gs
movs
mov
mov
mov
sahf
sahf
gs
in
push
xlat
icebp
pop
mov
(bad)
js
mov
dec
xchg
or
js
jp
mov
pop
dec
loopne
inc
lds
dec
cli
pop
(bad)
ss
js
xor
mov
inc
leave
sbb
pop
cmps
lahf
pop
ficom
repz
push
adc
jns
mov
(bad)
xchg
or
mov
push
shl
push
fmulp
add
push
inc
repnz
fisub
add
push
ds
loop
pop
xchg
mov
xchg
xor
mov
retf
out
dec
pusha
push
outs
mov
push
cdq
retf
sub
aaa
xlat
lahf
mov
cmp
cwde
or
aas
cmps
push
psubw
mov
pop
out
xchg
ret
(bad)
cmp
add
cmps
jmp
stc
jns
bound
pop
cmps
mov
cmps
mov
movs
mov
ret
xchg
or
mov
fwait
int
(bad)
sbb
clc
sahf
sbb
adc
xchg
mov
mov
sahf
movs
xchg
addr16
xchg
jno
xchg
loop
mov
fcmovu
not
sub
mov
inc
mov
and
xchg
mov
loope
daa
imul
sbb
dec
cmp
cli
test
hlt
repnz
jecxz
push
jns
ret
pop
cmp
cld
cmp
out
mov
jns
fnstenv
xor
jmp
in
in
fsub
(bad)
mov
pop
push
lahf
jo
jmp
es
loope
ror
das
mov
fcomi
ret
shr
imul
in
aaa
jae
pop
sar
(bad)
test
rcl
fidiv
int
mov
adc
cmp
xor
(bad)
mov
xor
xchg
fsubr
push
lahf
mov
into
xchg
(bad)
sub
xor
rcl
(bad)
repz
xor
call
inc
call
ret
shl
pop
jnp
cmps
jg
and
ror
sbb
xor
mov
iret
aad
pop
test
retf
shl
mov
jg
mov
into
test
pop
xchg
imul
push
test
lahf
fistp
iret
and
xchg
jmp
aam
pop
pop
jge
jns
mov
aaa
xor
and
mov
ror
inc
ret
(bad)
ss
lea
sbb
mov
(bad)
lea
pop
fistp
dec
gs
mov
das
mov
js
imul
mov
repnz
inc
aaa
adc
icebp
sub
adc
add
xlat
shl
cdq
mov
push
lds
sbb
ret
mov
rol
pop
js
fbstp
xor
add
ficomp
sahf
scas
pop
mov
xlat
jb
std
enter
dec
mov
enter
test
stos
je
mov
pop
les
idiv
adc
xchg
and
jbe
dec
mov
mov
cs
enter
repz
je
and
ins
mov
xor
sbb
pop
xchg
aas
sbb
jae
stos
cld
mov
mov
outs
hlt
pop
ret
loop
shl
scas
pop
dec
dec
sub
jge
cli
inc
(bad)
mov
stos
test
mov
les
fidiv
mov
fcomi
or
mov
pop
add
mov
mov
mov
es
(bad)
xor
jne
inc
std
imul
pop
int3
ins
mov
mov
mov
xrelease
pushf
sar
adc
pop
dec
out
imul
push
sub
repz
mov
popf
es
movs
xor
and
jnp
sub
mov
mov
mov
stc
repnz
aam
cmps
mov
mov
add
call
fucomip
cli
loopne
popa
inc
popf
lahf
cdq
sub
sahf
fs
int3
cmc
mov
pop
and
mov
dec
mov
pop
addr16
test
stc
scas
lock
sbb
xor
jae
xor
dec
pop
nop
sbb
jnp
dec
clc
dec
cmp
arpl
clc
inc
sub
fimul
out
or
mov
cmc
mov
daa
push
mov
dec
lahf
mov
cmps
cmp
stc
mov
ret
sub
scas
(bad)
sahf
mov
dec
xchg
into
scas
cwde
jmp
pop
mov
out
push
push
push
sub
mov
dec
xlat
mov
(bad)
or
(bad)
addr16
or
or
push
mov
mov
fldcw
sub
stos
jmp
scas
ret
sbb
sti
lea
fs
xchg
jo
mov
push
inc
movs
in
adc
add
xchg
cli
mov
int
pop
add
gs
pushf
test
lahf
sbb
mov
push
and
mov
adc
mov
mov
scas
(bad)
mov
shl
mov
xor
(bad)
ins
jbe
pop
sahf
sbb
mov
and
pushf
xor
jge
outs
in
jl
je
imul
(bad)
sub
rcr
test
mov
je
push
cs
ds
jg
pop
push
mov
lahf
loop
mov
leave
mov
cli
gs
cmp
popa
mov
jb
jbe
mov
lahf
dec
arpl
sbb
daa
inc
adc
scas
jbe
or
mov
call
loope
adc
mov
int
test
cli
push
std
jmp
mov
ins
mov
sar
imul
cwde
stos
mov
jbe
sar
lods
icebp
ss
repz
pop
inc
xchg
xor
in
jg
clc
fiadd
mov
jns
int3
test
arpl
push
aad
cs
sbb
xchg
fwait
jecxz
mov
(bad)
in
js
adc
xchg
ds
cmp
fistp
sti
enter
inc
dec
xchg
push
fs
or
cmp
sbb
out
repz
in
(bad)
call
inc
ja
mov
inc
jmp
inc
xchg
xchg
mov
mov
repnz
or
sbb
(bad)
daa
mov
imul
rcr
mov
jae
repnz
jg
icebp
cld
mov
leave
mov
pop
sbb
dec
xor
adc
xor
jmp
(bad)
mov
jno
fwait
fs
cmp
mov
sbb
push
jg
stc
sahf
jbe
loope
pop
mov
retf
mov
outs
bound
push
mov
iret
pushf
cmp
out
iret
jb
and
stos
(bad)
loope
iret
push
out
cmp
inc
sbb
aam
push
or
adc
mov
jno
mov
cli
mov
xlat
mov
test
xor
mov
cmps
pop
cmp
mov
aas
mov
ins
jl
jp
jl
or
mov
in
pushf
js
iret
arpl
mov
dec
daa
pop
dec
mov
ret
jge
es
out
scas
call
scas
sub
mov
sbb
add
div
mov
test
cmc
xor
test
call
retf
mov
pop
and
ret
jmp
xor
mov
mov
cmp
cmps
not
xor
repz
xchg
inc
aad
add
jmp
push
sahf
jmp
adc
test
pusha
fcom
xlat
jmp
out
push
lds
dec
push
hlt
mov
xor
mov
pop
popf
(bad)
xchg
(bad)
aam
mov
add
jl
dec
clc
out
loope
test
into
hlt
or
or
or
clc
icebp
(bad)
ins
push
inc
test
les
sbb
lds
cmc
aaa
push
inc
aaa
sub
shl
mov
dec
sahf
pop
stc
jne
mov
rep
retf
aam
(bad)
(bad)
repnz
xor
push
imul
push
xchg
pop
ins
ret
and
(bad)
retf
sbb
mov
mov
mov
lods
scas
cmc
push
repz
in
or
cli
(bad)
ror
adc
xor
mov
(bad)
push
xor
mov
ds
fadd
stos
cmp
xor
lock
push
inc
inc
call
adc
ss
sti
lea
sbb
std
dec
test
int
jnp
mov
int
lock
xchg
mov
mov
outs
mov
(bad)
dec
cs
mov
mov
dec
daa
mov
clc
xor
cmp
aad
mov
mov
mov
push
xchg
jno
nop
add
jns
inc
mov
and
sbb
leave
xor
mov
stc
ins
sti
lock
dec
mov
(bad)
aad
sbb
xor
and
cdq
sub
jbe
add
aad
aam
in
fwait
jle
loop
fisubr
adc
scas
repnz
or
cmp
mov
mov
jnp
sbb
in
dec
test
out
jae
adc
lods
adc
push
jmp
dec
sbb
test
int
xchg
in
int3
movs
daa
mov
pop
aad
pusha
adc
push
push
scas
(bad)
xor
retf
pop
imul
mov
cmp
sti
stc
xor
aam
xlat
stos
out
mov
adc
mov
mov
inc
ins
mov
sahf
sub
sub
cmps
or
jmp
dec
push
fst
out
dec
and
mov
std
xor
adc
(bad)
call
inc
fiadd
mov
xchg
gs
in
aas
cmps
mov
inc
sahf
cmp
es
int3
lods
cmp
into
xchg
in
nop
mov
mov
repz
dec
shl
jmp
push
pop
call
ins
dec
xor
push
cli
push
adc
call
jae
mov
imul
cmp
clc
sub
sbb
es
rcr
adc
pop
(bad)
es
push
pop
addr16
and
and
leave
repz
imul
mov
sbb
xchg
dec
sub
sub
adc
imul
pop
pop
jb
push
(bad)
addr16
cdq
ins
xchg
arpl
sbb
mov
cli
inc
xor
aad
call
xchg
push
dec
mov
(bad)
(bad)
jbe
daa
call
xor
mov
mov
fwait
push
aam
and
movs
out
ins
es
jp
jle
aad
ins
imul
jmp
test
test
out
jne
jmp
xor
sub
mov
popf
ds
inc
mov
cwde
movs
pop
push
imul
mov
call
sahf
dec
sbb
pop
shl
popa
sti
push
imul
cmpxchg
es
scas
pop
push
pop
out
or
and
mov
xchg
dec
loop
sub
pop
into
pop
push
pop
fmul
mov
sub
scas
push
aaa
sub
call
fiadd
sahf
test
ds
inc
fwait
push
(bad)
jmp
(bad)
sbb
or
int3
jno
mov
push
pop
push
sbb
aad
test
fidiv
movs
sub
jb
dec
mov
icebp
push
test
sbb
popf
dec
jns
push
fmul
sub
jl
loope
adc
push
pop
addr16
inc
repnz
or
enter
cli
hlt
xchg
mov
mov
or
xchg
push
inc
rol
add
jl
stos
out
(bad)
cdq
jmp
xor
nop
xchg
lds
mov
mov
retf
mov
xchg
ja
stc
pop
inc
or
jmp
lahf
adc
push
pop
test
lds
loope
and
dec
enter
gs
imul
test
jno
add
in
push
mov
aas
cdq
adc
dec
pop
pop
out
dec
popf
in
mov
(bad)
stc
mov
mov
pop
cs
dec
jb
cmc
fdiv
xchg
retf
cmc
cld
movs
test
stos
xchg
sahf
test
rcr
sub
ja
mov
ins
pop
jne
push
xor
outs
pop
mov
(bad)
in
pop
jmp
sub
xchg
cmps
add
movs
cmps
jnp
(bad)
jle
leave
mov
xchg
dec
xchg
arpl
retf
les
sti
stos
in
inc
bound
pop
mov
ret
cdq
and
inc
or
inc
mov
inc
outs
push
jge
fnstenv
ret
dec
das
(bad)
or
je
int
out
popf
fwait
lock
in
in
inc
mov
in
jge
scas
jle
cmp
jo
xchg
sub
push
ins
or
shl
retf
jmp
out
stos
mul
arpl
call
ja
push
pop
(bad)
into
pop
mov
fild
push
in
shr
mov
or
jecxz
stc
mov
xor
repnz
adc
push
data16
ss
int3
pop
sub
enter
cmp
ja
add
fwait
scas
ror
das
and
inc
pop
hlt
xchg
or
cdq
xchg
mov
arpl
in
cmps
ins
mov
in
into
mov
scas
fnsave
stos
sub
jl
inc
int3
data16
sbb
inc
jle
pop
jnp
in
addr16
mov
sbb
push
repnz
add
mov
push
(bad)
cld
or
jl
das
movs
cmp
test
sub
jmp
jl
test
mov
xchg
leave
cmp
sub
gs
jmp
add
pushf
ss
jge
adc
jl
push
and
stos
cdq
push
addr16
add
mov
jle
inc
clc
add
xchg
or
sbb
xchg
outs
pop
jge
lods
scas
xor
pop
daa
cmps
sub
sbb
lods
xor
xor
inc
std
cmc
mov
push
les
lea
mov
sbb
pop
pop
loopne
mov
xor
cmp
dec
(bad)
mov
rol
sub
push
sub
movs
(bad)
mov
imul
xchg
aad
call
push
push
sbb
test
push
dec
mov
loopne
xchg
pop
movs
daa
clc
adc
mov
mov
fwait
xor
jmp
shl
aas
in
fwait
test
mov
js
inc
sub
(bad)
pop
repz
cmp
jnp
ret
dec
cmp
xchg
shl
xcrypt-ctr
cmps
pop
mov
mov
mov
inc
into
ja
pop
mov
and
mov
rcl
les
ret
sub
test
lock
mov
push
jo
mov
lahf
jg
mov
mov
push
push
cli
into
cmp
dec
fld
lods
daa
(bad)
jmp
mov
xchg
mov
(bad)
push
movs
sbb
jmp
fs
jl
jmp
xchg
inc
dec
call
add
adc
pop
xchg
data16
aas
cmc
sbb
jecxz
fwait
or
das
cmp
mov
xchg
out
jge
out
sub
jns
fimul
inc
repz
imul
sbb
xor
mov
xor
idiv
mov
aaa
inc
push
into
mov
mov
push
dec
mov
push
(bad)
dec
(bad)
(bad)
mov
pavgb
xor
and
movs
pop
xchg
push
std
push
sti
outs
(bad)
fstenv
mov
sub
sar
xchg
out
ins
outs
gs
in
movs
bts
dec
xor
mov
ds
imul
xor
test
ret
lods
aaa
adc
js
pop
jb
dec
mov
into
push
mov
push
cs
clc
sub
sti
add
dec
push
xor
fstp
jge
fild
stc
shl
push
out
iret
cmps
cmps
or
(bad)
stc
js
pushf
mov
movs
in
xchg
out
outs
sbb
jg
lahf
jbe
jnp
sub
jno
xor
dec
ss
jb
(bad)
hlt
aad
aas
cmc
jns
xchg
es
ins
adc
inc
push
pop
push
cs
sbb
ja
retf
mov
and
adc
jp
cdq
aad
retf
inc
pop
inc
jne
loop
std
sbb
mov
pop
imul
int
mov
ins
inc
jae
xchg
das
pusha
xchg
hlt
xchg
mov
aam
cmp
xchg
lds
jge
pusha
dec
add
sub
push
shl
cld
in
cmps
pop
out
sbb
hlt
jae
inc
scas
repnz
enter
(bad)
call
lahf
pop
push
cmp
mov
xor
add
pop
cmps
pop
inc
ds
fisub
push
mov
dec
sub
lahf
jns
and
xor
push
aad
cdq
sub
push
sbb
push
pop
or
mov
jp
xor
xlat
pushf
or
lea
rol
mov
dec
out
retf
pop
jo
jbe
out
cwde
ja
cmp
pop
cmps
stos
mov
sub
imul
ins
iret
inc
inc
loope
jbe
ret
outs
(bad)
jmp
into
std
mov
repnz
std
cmp
sub
hlt
pop
push
add
leave
mov
ins
je
xchg
jg
scas
movs
push
sar
les
(bad)
jmp
jecxz
(bad)
mov
pop
inc
ffreep
(bad)
das
popf
and
pop
into
ins
out
iret
push
pushf
dec
test
les
sbb
ins
shl
test
aas
aad
jg
cmp
sub
inc
mov
shl
jb
ret
mov
push
addr16
fisttp
jb
sahf
sub
adc
mov
pop
call
sbb
lods
push
sti
dec
and
popa
out
jmp
cmc
lods
or
ficomp
fwait
aas
xchg
test
xor
gs
aas
stos
xor
sar
leave
mov
jae
imul
mov
add
cmps
outs
(bad)
mov
push
(bad)
jmp
pop
dec
jle
and
mov
sub
shr
ins
popa
mov
mov
icebp
fdivrp
jb
aaa
jae
mov
cmp
dec
(bad)
aad
test
dec
lods
jne
push
(bad)
jecxz
jmp
jno
sub
or
test
(bad)
sbb
mov
jl
ins
push
push
and
gs
cdq
mov
imul
pop
add
and
ins
mov
icebp
hlt
frstor
mov
(bad)
sub
outs
jns
in
mov
mov
mov
dec
fist
adc
shl
push
sahf
loop
pop
lods
repnz
mov
lock
int
mov
sbb
iret
fs
sar
xchg
cmps
inc
fisttp
adc
pusha
mov
outs
cld
nop
sub
xor
shl
push
dec
into
inc
add
mov
repz
push
sub
shl
int3
push
pop
sbb
test
push
fs
mov
shl
xor
fmul
sub
out
xchg
aas
ins
shr
cs
jl
ins
aam
sub
icebp
xor
pop
psrad
pop
repz
mov
call
ror
adc
idiv
pushf
or
arpl
add
imul
cmp
sar
lods
mov
adc
aad
jno
push
dec
xchg
cli
mov
in
xor
mov
icebp
call
out
das
repnz
dec
dec
sbb
daa
dec
neg
sub
mov
je
stos
outs
mov
fs
test
lods
mov
mov
movsx
stos
cmp
xor
mov
fwait
jp
or
xor
test
mov
fbld
fnstenv
outs
std
aas
lods
mov
bound
dec
ficom
popf
sub
mov
emms
mov
push
out
bound
popf
pop
xor
outs
out
sbb
gs
mov
mov
loop
out
sbb
xchg
pop
(bad)
in
adc
mov
cmp
sti
ret
(bad)
cdq
and
enter
inc
cmps
aam
lds
mov
shr
out
scas
adc
add
pop
sub
mov
xchg
jbe
mov
cmps
leave
loope
scas
mov
mov
jne
cld
test
adc
inc
ss
(bad)
jge
je
push
das
fiadd
push
pop
pushf
mov
inc
(bad)
sti
call
shr
aam
inc
aad
xor
jl
out
lock
call
repnz
cdq
rcr
sub
mov
or
popa
in
cmp
lods
out
add
enter
pop
cli
cmp
adc
inc
mov
push
cmc
mov
in
or
mov
or
shl
out
and
movs
in
dec
inc
movs
and
pop
cli
into
jmp
pop
jle
(bad)
fnstcw
or
jno
test
repnz
(bad)
sub
xlat
cli
mov
cmp
(bad)
jp
sahf
ss
(bad)
adc
jle
sbb
cmp
jmp
jle
push
push
ins
cmps
push
push
into
or
jae
sub
jmp
gs
jb
push
push
mov
retf
daa
cld
int
jbe
mov
stos
mov
cmp
mov
lock
sbb
adc
loop
repz
dec
call
aam
pop
icebp
mov
xor
retf
movs
pop
mov
repz
repnz
xchg
cmps
pop
xor
cmc
mov
clc
sub
cmp
inc
movs
pop
push
push
jg
mov
loop
out
das
aas
inc
pop
fsubr
cmc
enter
sahf
cmps
lahf
inc
push
data16
pop
ds
(bad)
adc
mov
mov
add
clc
std
and
ficom
test
fnstsw
ror
daa
cmp
cli
mov
push
mov
js
sbb
lahf
(bad)
gs
stos
hlt
rcr
push
shr
xor
int
in
xor
and
add
arpl
sub
jnp
mov
xchg
dec
push
mov
fidiv
dec
push
mov
mov
lock
enter
cdq
dec
or
xor
fisttp
sbb
fist
pop
outs
pop
or
xchg
lahf
(bad)
inc
adc
fisubr
inc
in
sub
mov
mov
out
xchg
jecxz
sbb
test
stos
test
dec
jb
push
or
fbstp
mov
stos
mov
jae
push
cmp
sbb
lds
stos
xor
jno
cli
push
and
mov
sub
repnz
std
fnstsw
enter
xor
cmp
jo
daa
lds
mov
xchg
and
mov
dec
faddp
sbb
stos
lods
xchg
mov
(bad)
fimul
loope
cmp
dec
jmp
mov
hlt
pop
fstp
mov
or
jo
repz
jmp
jge
sahf
cmps
lods
fwait
out
xrelease
or
dec
mov
xchg
les
mov
repnz
in
ds
xchg
and
jecxz
test
(bad)
sar
clc
mov
fbstp
sti
dec
shr
fucom
jb
repnz
cmps
pop
xchg
pop
inc
fcmovnu
jbe
test
aas
iret
jmp
repz
or
shl
push
mov
jns
push
xchg
out
sub
jp
inc
aam
sahf
jecxz
sbb
in
xchg
cwde
into
enter
push
mov
pop
add
popf
imul
in
jns
out
jl
cmp
or
sub
shl
ret
int
push
ins
vpcomb
mov
sub
repnz
scas
inc
lds
adc
and
fsub
inc
cmps
xchg
cmp
(bad)
mov
fnstenv
fcomp
jo
pop
sub
sub
jle
mov
cmps
test
jno
xor
or
cmps
dec
xor
dec
cmps
sbb
ds
dec
scas
loope
aaa
xchg
pop
arpl
sbb
and
sbb
imul
(bad)
hlt
call
mov
jecxz
es
pop
adc
int3
imul
call
sti
rcl
jne
xchg
dec
mov
mov
xchg
dec
mov
xchg
push
dec
inc
rcl
in
sub
jo
cmp
xchg
pop
pusha
clc
jmp
popa
mov
cwde
mov
xchg
rcr
movs
jne
cmp
xor
fwait
xor
in
pop
or
cmp
mov
sub
xchg
jp
call
sbb
sub
sbb
in
cwde
lods
push
xor
jg
out
gs
je
mov
pop
cmp
add
or
into
mov
xchg
and
adc
inc
or
mov
loopne
cld
sbb
push
cld
xchg
in
scas
dec
sbb
sbb
cs
icebp
jno
sub
jle
out
ins
mov
les
addr16
dec
fld
xlat
mov
(bad)
enter
mov
sbb
test
test
hlt
dec
cmp
daa
pop
cld
mov
aad
cmp
inc
out
push
sub
jmp
mov
repnz
movs
ins
ret
fstp
xlat
mov
mov
mov
test
pop
aad
sub
mov
mov
lahf
jle
test
popf
inc
xor
icebp
nop
jmp
or
lock
out
cdq
repnz
ja
and
mov
push
cmc
(bad)
push
mov
push
jmp
gs
cs
jmp
sbb
jmp
idiv
ins
addr16
dec
shr
cs
stos
xor
dec
test
add
cmp
daa
mov
cmp
inc
mov
push
add
xchg
fcom
jge
pop
iret
xor
inc
ret
xchg
cmp
out
cld
mov
das
into
sbb
sti
je
out
popf
out
mov
mov
(bad)
cld
test
mov
ins
mov
bound
sar
popw
mov
dec
and
ins
xchg
inc
mov
movs
jle
out
xor
imul
pop
inc
pop
or
xchg
fild
sbb
ds
pop
sbb
aad
clc
xor
fimul
mov
ret
mov
push
stos
jbe
add
dec
jmp
cld
(bad)
daa
push
mov
test
cmc
push
lahf
jle
xchg
pop
fucomi
fist
rol
mov
mov
inc
ss
or
push
dec
adc
cmp
data16
add
dec
mov
xor
call
repnz
sbb
aad
fsub
rcr
fdivr
mov
xchg
cmp
ss
mov
xlat
adc
bound
sti
(bad)
mov
mov
outs
sub
cli
mov
std
repnz
inc
xchg
push
out
mov
hlt
mov
pop
mov
mov
stos
shl
and
loope
cmp
call
push
pop
push
xchg
int
pop
cmp
xchg
sti
scas
in
push
lods
rcr
mov
adc
dec
cmp
test
aaa
pop
dec
and
shr
test
in
nop
(bad)
scas
jns
fistp
jnp
stos
sub
push
aad
movs
(bad)
cmc
jo
pop
mov
sub
clc
lahf
inc
cld
in
fdiv
ficom
cmp
jb
enter
and
in
not
mov
jno
in
pop
mov
or
mov
mov
hlt
xchg
in
(bad)
test
into
sub
lds
push
hlt
pop
int3
dec
lea
not
mov
sbb
int3
stc
mov
xlat
jmp
hlt
pop
xchg
xchg
dec
adc
mov
das
movs
xor
js
pop
cld
sub
stc
xor
and
inc
arpl
repz
push
adc
aas
stc
add
xchg
addr16
add
int
(bad)
into
es
xchg
pop
pop
pop
daa
ins
xchg
dec
popf
inc
pusha
iret
mov
clc
movs
fwait
xchg
xchg
lods
fisttp
and
xor
call
cli
jne
inc
(bad)
test
leave
retf
daa
inc
hlt
push
ds
outs
loopne
lahf
mov
mov
repz
(bad)
fldcw
arpl
cmps
ret
imul
jecxz
loope
cdq
stos
mov
sub
cmp
in
ficom
data16
pushf
xchg
xabort
cmp
stos
adc
xchg
xchg
getsec
push
ja
pop
sbb
(bad)
ss
movs
pop
sbb
repz
or
outs
push
(bad)
adc
cmp
scas
imul
das
test
add
test
xchg
cli
dec
cmps
xchg
cmp
or
jecxz
fs
mov
lahf
hlt
jns
shl
xlat
mov
lahf
jo
cmp
fcmovne
dec
out
push
or
or
mov
fldcw
cmps
sbb
adc
int
out
xlat
mov
cmp
mov
cmps
fdivr
loope
inc
js
ret
or
sub
or
ins
aad
push
lea
clc
jae
stos
clc
int3
push
mov
xchg
add
jge
popf
retf
mov
shr
push
mov
out
push
lock
out
pushaw
jmp
sbb
or
push
fist
out
neg
sbb
push
int
dec
(bad)
out
in
push
in
xor
ror
xor
jae
jge
pop
cmp
idiv
enter
jge
adc
and
pop
dec
sbb
add
and
adc
loop
jl
inc
scas
jne
scas
fidivr
dec
fadd
push
(bad)
push
push
inc
(bad)
push
inc
pop
xchg
jno
daa
push
or
ret
or
mov
test
dec
adc
or
repnz
aad
jl
and
add
jmp
and
in
mov
aas
push
ss
ins
repz
pop
ss
mov
fdivr
sar
xor
dec
icebp
mov
push
loopne
shl
add
inc
xor
adc
jmp
mov
add
retf
add
cmp
add
loopne
cwde
sbb
inc
mov
lock
jae
pop
add
daa
mov
mov
dec
push
int3
add
mov
pushf
pop
fadd
in
xor
in
dec
sub
stc
add
push
mov
or
ds
adc
outs
add
add
daa
add
add
add
xchg
xchg
add
adc
push
xor
inc
into
cwde
add
adc
cwde
add
sbb
sbb
jo
inc
test
jno
popa
sub
xor
mov
je
mov
add
add
add
ins
add
pop
sbb
fwait
mov
jle
shl
arpl
add
add
sbb
add
or
or
jg
pop
pop
and
sbb
lock
mov
adc
pusha
xor
xor
pusha
adc
pusha
sbb
pushf
pop
add
test
xchg
adc
bound
pop
sbb
xor
cmp
xchg
lods
inc
fmul
and
or
xchg
add
add
add
pop
ins
add
add
or
(bad)
xchg
add
sbb
rcl
lea
cwde
cwde
sbb
inc
mov
test
ins
(bad)
push
or
fwait
dec
adc
inc
inc
inc
or
and
xchg
ins
and
dec
push
nop
imul
jae
aas
shr
sar
adc
rol
push
ror
sbb
adc
(bad)
jns
mov
inc
cwde
adc
and
inc
repnz
fiadd
sbb
or
mov
bt
xchg
push
jp
movs
adc
mov
add
sub
sbb
and
xchg
sub
nop
push
adc
pop
mov
rol
push
inc
(bad)
adc
cmp
adc
xor
fisttp
sbb
aas
bound
and
pop
add
nop
cmp
fs
dec
add
mov
xchg
or
xor
(bad)
loopne
push
push
es
ins
push
dec
int
mov
inc
jb
lahf
ins
mov
aam
pop
adc
stc
jmp
sub
aam
lds
adc
sbb
sub
and
les
and
mov
lods
add
push
adc
xor
mov
or
cwde
xor
pusha
add
inc
sub
out
bound
mov
jo
in
sbb
mov
pusha
dec
shr
push
rcl
aam
xchg
(bad)
mov
out
pop
out
or
ret
fdiv
mov
push
sbb
cmp
push
push
inc
hlt
xor
xchg
cmp
push
add
adc
and
sub
and
psubsb
mov
pushf
mov
(bad)
loope
ror
add
add
cmp
inc
cdq
and
movs
add
or
nop
adc
sbb
rcr
push
mov
or
mov
enter
mov
enter
mov
and
mov
imul
mov
test
sbb
inc
xor
sbb
xchg
add
add
imul
jmp
mov
xor
mov
pop
inc
into
test
movs
add
sbb
add
xchg
test
pop
js
fcomp
mov
add
cmp
fcom
in
ins
adc
push
(bad)
enter
and
jno
add
cmp
push
cli
lock
in
fdiv
popa
lahf
aas
clc
and
and
xor
into
adc
pop
mov
les
mov
aas
inc
xchg
sub
sbb
into
popa
pop
mov
les
fdivr
jbe
mov
loop
add
xor
add
xchg
xchg
popa
jnp
rol
inc
lods
or
add
sbb
jmp
or
(bad)
call
sbb
les
push
adc
aas
sbb
adc
aaa
adc
mov
or
xor
pusha
aas
loope
and
das
enter
pop
mov
and
mov
dec
adc
jle
cwde
or
mov
and
mov
es
es
xchg
push
push
sbb
mov
(bad)
push
jne
lea
push
gs
stos
and
xor
dec
sbb
push
in
push
mov
pop
sar
(bad)
sbb
(bad)
dec
(bad)
arpl
xchg
iret
or
mov
mov
repz
xor
pusha
into
rol
out
xor
pusha
push
cmp
pop
out
mov
sar
in
cmp
jno
add
sub
add
or
sub
sub
addr16
rcl
jbe
pop
xor
ret
loope
push
mov
pusha
adc
retf
ret
mov
cmp
adc
jno
add
ror
add
(bad)
fstp
or
or
rcr
cwde
or
fidiv
shrd
sub
fsub
pushf
and
and
add
dec
push
ss
push
and
dec
add
xchg
dec
add
lea
popf
(bad)
fld
into
out
add
pop
push
mov
pusha
jb
fcmovnb
pop
es
cmp
ins
sbb
shl
pop
jnp
or
mov
pusha
clc
shl
inc
add
add
cmp
mov
cwde
and
test
xchg
add
adc
push
add
jbe
addr16
cmp
add
into
fdiv
pop
in
sub
sahf
add
mov
sub
fmul
adc
and
popa
pushf
adc
push
addr16
cmp
push
xor
add
ror
cmp
add
cmps
mov
dec
pushf
xchg
add
(bad)
pop
add
cmp
rcr
pusha
(bad)
cmp
int3
adc
sub
int3
jo
mov
push
in
dec
xchg
adc
in
or
sub
sub
xor
jo
or
add
sub
push
add
pop
add
add
inc
add
add
add
add
fcmovne
pushf
or
je
iret
add
jo
or
lock
das
pop
sbb
and
xchg
add
xlat
add
addr16
punpcklbw
add
ret
popa
dec
xor
(bad)
retf
mov
inc
popa
push
inc
pop
rcl
pop
sbb
inc
pop
jb
adc
pop
pop
xchg
sti
shl
mov
mov
test
cld
lahf
xchg
popa
sti
xchg
call
dec
push
and
mov
and
adc
sbb
out
add
xor
les
jge
inc
in
rol
mov
mov
add
push
out
mov
inc
or
call
add
stos
mov
leave
test
or
mov
int
sbb
fiadd
mov
ficomp
lds
ror
sub
push
pusha
push
out
cmp
outs
jno
outs
add
or
mov
pop
pop
lods
pop
sar
mov
sbb
mov
sbb
adc
pop
mov
lock
call
add
sub
add
shr
add
xlat
add
add
outs
add
inc
imul
cmp
ja
mov
arpl
call
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
cmp
mov
mov
je
iret
(bad)
mov
pusha
cmp
ret
xchg
pop
and
std
dec
sar
push
dec
ret
out
add
jae
repnz
cli
jmp
or
jo
lock
cs
(bad)
xor
sbb
mov
mov
aaa
push
sub
push
sub
push
sub
push
stos
inc
jge
add
push
fdivr
add
mov
pop
cmp
jg
xchg
xor
bound
push
(bad)
jbe
jb
nop
pop
pop
in
pop
jecxz
(bad)
lods
iret
out
retf
fcomp
mov
push
xchg
(bad)
mov
xor
out
add
push
sbb
(bad)
mov
sahf
(bad)
out
fcomp
mov
fsubr
jo
sub
sbb
sbb
(bad)
jg
pop
(bad)
out
not
out
out
arpl
sti
outs
rcr
cmp
dec
rcl
dec
mov
stos
fnsave
dec
das
fsubr
push
bound
mov
and
out
sahf
bound
in
cmp
inc
mov
call
mov
fbld
(bad)
mov
mov
jnp
int
cmp
cmp
into
mov
in
mov
lahf
std
aas
sub
inc
ret
out
clc
cmovle
imul
leave
and
xor
out
add
mov
pop
mov
push
out
test
add
mov
jne
pop
push
pop
add
pop
add
add
add
lock
enter
aaa
or
enter
aaa
or
enter
aaa
or
enter
test
jg
aad
aam
add
jl
pop
or
adc
sbb
shl
mov
mov
jg
inc
in
mov
push
sbb
mov
push
cmp
clc
or
jo
lock
and
sbb
pushf
adc
add
add
setle
aad
adc
mov
jbe
cmp
fsin
jns
push
into
stos
mov
dec
(bad)
or
or
or
or
fsubrp
retf
jb
cmp
push
mov
sub
push
mov
xor
in
out
jge
or
xor
cs
mov
in
(bad)
cld
out
pop
mov
dec
call
lods
(bad)
ficomp
jecxz
pop
lahf
fst
ret
pushf
or
test
fisubr
mov
adc
hlt
test
ret
inc
(bad)
mov
pop
neg
cdq
ja
mov
inc
push
inc
add
nop
aas
and
xor
mov
cmp
mov
sub
jae
repz
sub
add
les
mov
cmovnp
bound
add
push
int3
test
int3
add
add
add
shl
rol
mov
jmp
sar
cli
sub
sub
sub
mov
shl
dec
test
cmc
pop
and
and
inc
mov
pop
mov
pusha
loope
dec
les
cmp
or
adc
in
adc
(bad)
(bad)
mov
xor
sub
test
adc
add
mul
(bad)
mov
mov
xor
cdq
adc
and
push
xchg
cdq
mov
inc
adc
dec
and
popf
imul
nop
mov
popa
(bad)
inc
xchg
fisub
sub
push
in
and
enter
mov
mov
adc
jae
xlat
push
and
or
loope
or
push
push
into
mov
arpl
sbb
cmp
and
adc
xchg
sar
dec
jo
in
test
pushf
mov
addr16
out
je
jmp
rcl
mov
enter
adc
add
mov
cmc
xchg
iret
inc
jl
aaa
out
out
fucomp
and
fistp
cmps
mov
xchg
push
mov
jge
ret
jl
into
mov
outs
movs
mov
aaa
dec
les
jbe
adc
mov
fsubr
test
inc
ins
or
in
mov
in
lds
xchg
adc
scas
and
out
(bad)
and
dec
cmp
dec
jo
sub
xchg
push
int
mov
inc
pop
cmp
and
call
adc
mul
mov
add
inc
ds
cmc
pusha
add
or
push
enter
jmp
test
(bad)
mov
les
mov
dec
mov
inc
jbe
or
sbb
rcr
and
aaa
pushf
inc
and
or
sbb
loop
adc
xor
sub
dec
jecxz
adc
ret
in
pop
xor
and
inc
(bad)
and
xor
sbb
xchg
fdiv
dec
inc
jp
pusha
or
adc
test
dec
out
mov
inc
dec
inc
outs
iret
cmp
sub
or
in
sbb
leave
and
jmp
sahf
(bad)
(bad)
enter
lahf
xchg
sub
xchg
push
movs
and
fild
pop
xchg
cmp
out
fist
mov
sub
aad
inc
dec
pusha
aas
(bad)
add
inc
dec
retf
sbb
pusha
nop
enter
enter
jbe
pushf
nop
daa
out
or
sahf
addr16
cmps
std
pushf
loop
cmc
add
sahf
addr16
lock
fistp
ret
movs
retf
shr
fistp
retf
ret
sar
ret
sbb
push
inc
mov
jae
(bad)
cmp
mov
mov
dec
btc
cmps
setne
sbb
jmp
lods
pmaddwd
out
frstor
movs
mov
adc
mov
adc
or
push
mov
mov
push
iret
mov
mov
retf
nop
mov
jne
stos
pop
xchg
adc
lahf
inc
pop
inc
adc
bound
in
xlat
cmp
fdiv
mov
scas
or
pop
mov
cmp
sub
inc
mov
xor
inc
std
mov
jae
ret
add
xchg
add
mov
add
jbe
jb
mov
add
sbb
inc
jae
ret
fidiv
pop
dec
inc
jg
mov
int3
sbb
lahf
pop
fs
and
xchg
or
jns
or
idiv
inc
jns
repnz
loopne
sbb
and
cmp
in
and
dec
nop
popa
lahf
mov
pusha
xchg
int3
jns
adc
xor
push
cmp
and
mov
push
dec
sahf
inc
adc
mov
out
rcl
cmps
mov
ret
pop
mov
jl
fild
push
mov
pop
jmp
push
and
sar
test
lods
or
fist
aas
mov
test
jg
cmc
jg
adc
out
cld
arpl
test
jg
add
adc
mov
push
adc
enter
inc
ss
imul
inc
movs
cmp
mov
icebp
sahf
loope
xor
int
stos
jbe
pushf
sbb
pop
es
ins
aas
or
adc
arpl
test
adc
retf
dec
mul
call
xchg
xor
inc
enter
imul
sbb
dec
gs
addr16
adc
(bad)
mov
popa
cs
fnstenv
push
and
stc
pusha
pushf
dec
and
add
ds
push
enter
cmp
out
sar
fdivr
or
pop
or
pusha
add
imul
call
les
scas
cmp
mov
sub
retf
sbb
mov
lds
xchg
mov
or
sti
xchg
es
mov
mov
test
fnstcw
pop
in
fild
test
cli
xor
cmp
fsubr
test
xchg
pusha
mov
imul
sbb
test
xlat
adc
push
jo
sbb
mov
inc
dec
fnstsw
punpckldq
or
inc
cmp
jnp
cwde
test
stos
neg
rol
mov
shr
outs
sti
in
call
mov
and
sub
pusha
xlat
jno
shrd
scas
pop
dec
clc
sub
jmp
out
call
sbb
ja
fwait
in
pop
and
or
je
xchg
bound
or
fist
jle
data16
jmp
jl
jnp
imul
adc
leave
mov
lods
(bad)
mov
fistp
xchg
ins
cmp
sub
dec
mov
ret
mov
inc
ud0
outs
sbb
in
mov
and
push
pop
into
mov
adc
int
push
ret
sub
pop
pop
adc
mov
imul
test
psadbw
sub
ja
mov
mov
mov
mov
mov
jg
aaa
mov
lods
(bad)
call
lahf
stc
ins
mov
cli
lahf
jbe
int3
in
aas
in
mov
jae
mov
test
jbe
pusha
fistp
pusha
push
mov
pusha
out
imul
rcr
mov
sti
xchg
lahf
shr
add
jg
(bad)
cmps
ja
int3
iret
jg
pop
ret
cld
dec
pop
fyl2xp1
dec
mov
shl
(bad)
mov
cld
outs
cmp
js
jbe
ds
les
ret
ficomp
outs
mov
mov
mov
jle
imul
jnp
ror
xor
mov
sahf
clc
(bad)
mov
lahf
jmp
and
sbb
punpckldq
lahf
std
inc
mov
mov
pop
xor
mov
jo
xor
cmps
dec
adc
xor
inc
add
in
pop
cmp
sbb
jmp
lods
or
popa
call
mov
or
sub
jp
(bad)
cwde
loopne
xlat
sbb
loopne
xlat
fst
cmps
push
mov
inc
dec
les
push
adc
or
mov
inc
out
out
dec
and
das
adc
jl
arpl
scas
and
test
sbb
pushf
mov
jp
mov
(bad)
lock
in
(bad)
xor
loopne
iret
mov
sbb
scas
fnstsw
xchg
(bad)
ret
cdq
aaa
bound
loope
pushf
add
ret
cdq
cmp
add
xor
pop
sahf
(bad)
inc
les
outs
mov
enter
call
jl
and
pop
loop
xchg
cmp
and
jb
popa
cmp
addr16
les
adc
into
ja
es
xor
mov
inc
pusha
out
jge
(bad)
xchg
test
ret
aas
xor
sti
mov
neg
xor
mov
outs
out
addr16
pushf
test
in
xchg
loopne
pushf
inc
and
mov
jo
cmc
fstp
lods
and
push
out
in
jns
and
lds
xorps
mov
mov
mov
add
adc
push
ja
icebp
push
push
push
jecxz
test
xchg
jge
fs
push
push
inc
mov
add
and
ins
xchg
xchg
dec
ss
ss
xor
nop
mov
mov
shl
mov
push
push
lods
rol
push
adc
jns
lds
clc
cmp
push
into
mov
mov
ds
out
cmp
fdiv
cmp
or
mov
call
xchg
mov
xor
xchg
ins
pop
sub
mov
test
inc
cmc
call
mov
mov
js
adc
cmps
movs
push
mov
xor
cmp
sar
cmp
or
movs
adc
mov
sub
sub
dec
daa
scas
jmp
sub
xchg
je
sbb
leave
xor
gs
mov
out
cmp
ss
stos
and
push
stos
mov
movs
jb
xor
imul
das
ss
(bad)
nop
ret
shr
call
push
sbb
fisttp
mov
sbb
(bad)
xor
and
dec
in
fld
movs
movs
inc
sub
xchg
xchg
jbe
pusha
test
dec
fbld
xchg
xor
aam
jmp
dec
mov
repnz
gs
push
mov
call
arpl
and
outs
and
xchg
sbb
xchg
mov
pop
leave
mov
inc
fst
das
les
popf
repnz
(bad)
std
and
and
sbb
xchg
add
mov
int3
daa
ret
push
sbb
pop
dec
or
xor
mov
xchg
aas
push
stos
xchg
and
jp
pop
dec
cmp
adc
mov
imul
mov
xchg
or
mov
call
(bad)
hlt
sub
xchg
cmp
mov
call
jle
mov
adc
dec
cmps
fmul
ins
adc
cmp
lds
nop
hlt
sub
std
pop
mov
fiadd
cld
pop
push
pop
mov
int3
std
pop
jb
stos
sub
mov
xchg
mov
outs
adc
leave
das
enter
and
sub
inc
cmp
enter
ret
repnz
xchg
test
and
movs
push
or
adc
push
xchg
push
xchg
xchg
sbb
jae
mov
ret
shl
imul
dec
ss
adc
call
lods
in
mov
cmps
das
in
enter
ds
mov
popa
push
(bad)
mov
popfw
cmp
and
es
sahf
aaa
hlt
cld
outs
add
mov
ja
pop
pop
fld
jnp
(bad)
cld
xor
mov
nop
sbb
stc
std
xchg
daa
ficom
pop
bound
hlt
ja
outs
xchg
push
sub
int
(bad)
call
rcr
out
sub
jo
dec
shr
jge
in
js
lock
lods
movs
fs
cli
mov
xchg
adc
and
xchg
xchg
cmc
gs
mov
je
xor
adc
in
and
mov
sbb
cmp
sbb
les
in
movs
in
push
push
sbb
in
(bad)
enter
outs
stos
xchg
pusha
fisttp
and
imul
jmp
aam
fdiv
xchg
add
leave
add
daa
push
shl
mov
popf
movs
out
cmp
out
or
jp
ja
ret
cmc
xor
adc
(bad)
adc
sub
mov
mov
fnstsw
cwde
call
xor
adc
dec
jmp
dec
jbe
xor
cld
aaa
shl
das
inc
jmp
xor
(bad)
push
movs
repz
std
pop
rol
mov
call
movs
sub
ins
js
je
push
imul
or
inc
pop
cdq
jns
jmp
daa
dec
ds
pop
xchg
mov
sbb
fisub
xor
out
push
mov
jno
cmp
mov
mov
sti
dec
sahf
dec
jo
pop
ins
jle
xchg
push
dec
jmp
fidiv
pop
enter
sahf
mov
mov
xor
cmp
push
movs
sub
in
cmp
cld
call
shr
xchg
push
fbld
cmp
jmp
sar
cmp
mov
cli
pop
cmp
or
cmp
or
mov
in
cmp
push
push
inc
xchg
ret
loopne
fs
sub
cld
xchg
pushf
cmp
xchg
(bad)
lds
pop
and
idiv
neg
mov
mov
icebp
mov
push
or
scas
fisttp
dec
cmp
mov
cld
sbb
mov
repnz
xchg
arpl
xor
push
xchg
mov
dec
pop
xchg
cmp
jg
xor
jle
xchg
pop
pop
or
add
sar
in
sub
shr
fwait
cmp
mov
fst
inc
mov
xor
sti
mov
xchg
jmp
es
imul
mov
push
sbb
das
mov
inc
cmp
out
pop
scas
adc
lods
xor
push
and
lahf
imul
cld
dec
loop
and
test
inc
pop
mov
mov
cmp
ins
not
jecxz
xor
cs
push
mov
jp
sbb
mov
dec
adc
and
sbb
push
repz
jae
mov
push
(bad)
fcom
mov
sub
test
outs
aaa
or
push
lahf
push
aam
mov
dec
inc
xchg
pop
aam
ss
(bad)
push
mov
(bad)
sbb
aam
sbb
sub
ret
lods
les
mov
in
aaa
pop
inc
shr
sub
(bad)
rol
xor
or
test
das
mov
idiv
int3
xchg
ror
ret
cs
addr16
cmc
inc
jbe
xchg
inc
fstp
and
cmp
call
xchg
pusha
push
sub
retf
sub
out
xchg
push
iret
daa
out
je
inc
mov
cmp
jmp
fimul
push
mov
test
test
pushf
out
xor
mov
mov
xchg
div
(bad)
mov
mov
dec
hlt
xor
sub
fidiv
(bad)
sbb
(bad)
sub
rcr
xor
stc
sbb
enter
je
inc
pop
addr16
sub
mov
xor
xchg
jne
das
stos
xlat
test
ret
push
dec
mov
push
cdq
adc
test
sbb
aam
outs
xchg
xor
sar
jmp
repnz
mov
(bad)
or
inc
aam
mov
shl
pop
sbb
sahf
xchg
jmp
jns
hlt
pop
test
mov
fwait
call
outs
mov
mov
sub
adc
rcr
mov
dec
sub
aas
int3
xchg
dec
mov
shl
int3
adc
gs
sbb
call
xor
mov
adc
mov
pop
mov
dec
shr
mov
shl
pushf
aam
cdq
pop
hlt
add
neg
call
loope
and
lds
jns
xor
inc
cmps
mov
adc
out
jecxz
cwde
dec
jge
or
inc
movs
push
out
(bad)
and
stos
rcl
and
test
fs
dec
fwait
jne
addr16
addr16
jmp
test
iret
mov
jecxz
xor
into
int
into
inc
repz
sar
movs
push
cs
int
sar
mov
ins
cmps
retf
dec
and
into
pop
fs
jb
fcom
mov
push
mov
sti
push
or
push
pop
ins
push
or
and
sar
imul
and
mov
add
popf
sub
int3
dec
out
mov
jnp
mov
(bad)
push
jmp
inc
inc
xchg
mov
xor
mov
lods
sub
and
xchg
imul
in
(bad)
or
lods
je
xor
mov
dec
test
xchg
movs
xchg
lds
inc
imul
lods
ins
shl
jae
rcl
mov
mov
outs
mov
arpl
jge
and
dec
arpl
popf
ss
mov
outs
mov
sar
mov
movs
mov
mov
push
xchg
cmps
pop
and
in
jmp
push
mov
neg
and
jmp
test
and
xchg
mov
pop
scas
push
jmp
sub
jp
sub
mov
cmps
xchg
sti
sub
jne
xchg
push
cmp
pushf
out
push
jmp
loopne
dec
in
arpl
mov
xchg
xor
cmp
sbb
(bad)
cmp
and
out
sar
sbb
pop
mov
dec
adc
sub
not
adc
aas
jge
daa
cmps
hlt
or
sub
cmp
or
fidivr
lods
fistp
js
jle
inc
pop
cmps
xchg
dec
fs
movs
xchg
aam
fs
xor
loope
xchg
les
xchg
outs
sub
xchg
jp
push
je
ins
sub
jmp
inc
pop
(bad)
sar
imul
xor
push
sub
and
inc
mov
fdiv
dec
(bad)
popf
cmps
pop
push
shl
outs
rcr
imul
sbb
rcl
mov
mov
pop
mov
imul
neg
xor
inc
mov
stc
aaa
mov
inc
xchg
pop
das
fwait
jmp
nop
es
adc
(bad)
retf
fwait
jmp
pop
call
pop
test
xchg
shl
push
jp
mov
out
pop
cmp
mov
pop
lods
pop
imul
push
in
xor
ds
lods
mov
jmp
mov
dec
(bad)
rcl
lds
enter
cmp
push
out
(bad)
ins
mov
mov
fisubr
(bad)
pop
addr16
aaa
mov
dec
cmps
dec
xor
pop
out
mov
dec
rcl
rol
gs
jg
inc
retf
or
inc
pusha
push
and
imul
or
cmp
push
loop
daa
cmp
push
repz
inc
xor
call
dec
mov
push
inc
sub
fdivr
push
pop
into
mov
inc
ins
jg
jnp
lea
ret
pusha
mov
push
das
aaa
jbe
jae
ss
hlt
fld
shr
call
out
in
xchg
fdiv
push
sub
out
movs
fwait
data16
sbb
test
sbb
ror
into
or
dec
aaa
test
or
cmps
sub
and
iret
dec
pop
mov
inc
inc
sub
xchg
xchg
sub
adc
inc
jp
into
mov
inc
mov
cmp
push
test
pop
movs
int
(bad)
mov
cmp
dec
jmp
les
ins
push
ret
mov
sub
mov
fsubr
hlt
js
jno
jnp
cli
stos
lea
fisub
fisub
fisub
outs
ror
push
test
jmp
js
out
shr
call
call
hlt
adc
jge
aas
push
ret
xor
adc
fdivr
aas
push
xchg
push
inc
xlat
imul
cmps
fbld
in
jmp
in
jmp
repnz
pop
push
mov
mov
push
fild
mov
mov
adc
xchg
out
lods
adc
lahf
mov
dec
rcl
(bad)
je
pop
shl
dec
imul
dec
push
push
mov
addr16
jmp
dec
cmp
test
idiv
popf
fwait
adc
xchg
fidiv
out
xlat
retf
ins
rcl
ins
sti
mov
xor
xor
add
rcr
sub
xchg
movs
xchg
inc
mov
jmp
lds
aad
xchg
mov
lods
push
mov
xor
mov
push
bound
aad
stc
call
mov
pop
movs
add
aam
arpl
lds
(bad)
sub
mov
mov
mov
pop
xor
mov
xor
test
nop
(bad)
das
xor
shr
pop
mov
sub
and
or
jmp
vpsubusw
mov
cmc
cmp
stos
mov
jp
in
cmp
ins
loop
fidiv
daa
shl
fsubr
dec
push
mov
jo
mov
mov
fwait
jmp
mov
fnop
inc
cmp
into
pop
ins
pop
dec
cmp
adc
stc
mov
movs
stc
imul
cli
dec
mov
pop
mov
(bad)
cli
pop
sub
mov
imul
fld
(bad)
sub
push
dec
sti
je
mov
lods
in
sub
push
xchg
mov
lods
jnp
push
(bad)
xor
push
call
mov
les
fldenv
iret
ss
jmp
out
sar
inc
das
sub
aad
into
ss
shl
sub
retf
ret
movs
sbb
pop
retf
mov
sub
sbb
out
push
xchg
cmc
xlat
mov
fwait
or
cmps
ins
push
dec
cdq
cmp
mov
xchg
jb
jp
ss
sbb
imul
mov
xchg
or
fdiv
xor
daa
mov
xchg
cmps
call
push
not
test
jge
call
sub
bound
dec
cmp
xchg
call
dec
xchg
push
jmp
mov
pop
imul
fldenv
imul
dec
fisub
movs
add
pop
addr16
xchg
push
jmp
push
test
cmps
shl
popf
mov
popf
loop
mov
dec
cmps
pop
in
xor
mov
cmps
mov
(bad)
cmp
mov
mov
pop
sub
neg
imul
in
aaa
dec
and
fdivr
dec
sbb
push
mov
xor
cmps
dec
jnp
push
scas
shl
fst
dec
pop
test
cmps
rcr
mov
stc
cmp
jne
sar
aam
shl
ins
ror
popf
dec
fstp
std
shl
fcmove
movs
lods
cmp
out
cmp
int
sahf
shr
sub
push
imul
cmp
dec
pop
sub
mov
mov
dec
(bad)
je
imul
shr
pop
stos
add
add
xchg
(bad)
es
jne
dec
pop
sub
jne
pushf
jbe
xchg
test
retf
xchg
stc
dec
xchg
repz
dec
mov
jge
mov
lods
stc
xor
sar
dec
ins
(bad)
call
inc
not
mov
std
mov
jg
push
fst
neg
into
sub
int
mov
gs
rcr
sbb
pop
cmc
xor
arpl
mov
(bad)
inc
rol
shl
je
mov
mov
lds
ret
lahf
out
dec
push
xor
mov
iret
loope
jg
mov
dec
push
pop
mov
(bad)
push
jmp
int3
inc
div
mov
repnz
bnd
sub
cmp
add
outs
dec
(bad)
into
xchg
in
cmp
fsub
movs
mov
out
frstor
repnz
aam
das
out
scas
je
sahf
ds
movs
aad
mov
jmp
jle
jg
sar
lahf
cmp
ins
loop
(bad)
adc
(bad)
xchg
mov
mov
jne
out
adc
iret
outs
pop
aad
fild
out
hlt
fcomp
mov
adc
in
mov
ds
rcr
mov
jmp
test
mov
xchg
out
(bad)
repnz
arpl
(bad)
in
cmp
hlt
or
xchg
arpl
push
push
xchg
mov
sahf
int
out
push
iret
fst
lahf
sti
cdq
repz
outs
sub
sub
aad
fist
xchg
aad
mov
sahf
out
cmp
pop
jmp
repz
pop
mov
sbb
jg
xrelease
mov
push
xlat
out
cli
lahf
jns
push
jb
adc
std
sbb
jmp
cld
sub
jno
cmp
mov
stc
arpl
fistp
dec
jmp
jnp
pop
retf
xchg
into
xor
(bad)
out
cmp
sti
sbb
adc
jae
sub
into
mov
into
jl
mov
mov
push
aas
jl
jne
ds
repz
jmp
add
ret
jo
or
xchg
loopne
(bad)
xchg
ret
xchg
xchg
daa
loop
and
daa
jecxz
xor
outs
xor
push
loopne
cmp
and
aad
retf
gs
(bad)
add
sub
and
pop
and
mul
xchg
dec
dec
jle
sar
out
loop
xor
(bad)
xor
call
cdq
fidivr
mov
cmp
jae
push
out
cmps
stos
mov
mov
loopne
scas
xchg
push
mul
mov
mul
xor
(bad)
fcomp
hlt
fiadd
out
adc
sub
add
xor
repnz
fild
push
jae
cli
pop
std
leave
mov
(bad)
(bad)
retf
nop
cs
in
sub
into
ds
bswap
lock
leave
sub
scas
retf
stc
mov
loope
call
mov
mov
or
int
mov
inc
scas
xchg
cmps
pop
jl
les
mov
retf
ins
scas
sub
loope
mov
jae
data16
enter
xor
into
ja
(bad)
fldl2e
jae
sti
rcr
out
ror
xchg
push
mov
imul
pop
shl
dec
daa
retf
enter
popa
sbb
rcl
jp
jl
std
sbb
mov
add
mov
pop
pop
mov
(bad)
mov
xlat
inc
jmp
jl
mov
ds
jg
xchg
mov
cs
in
mov
sub
not
push
mov
dec
fild
loop
cmp
jb
mov
and
into
sahf
mov
or
in
cmps
test
mov
mov
cmp
mov
repnz
in
sub
outs
jno
popa
fwait
jg
jnp
jmp
outs
cli
xor
fbld
cmp
and
iret
out
xchg
iret
sub
ror
mov
xchg
(bad)
adc
rcr
cmp
loopne
mov
(bad)
fsub
rcr
retf
adc
lahf
stc
sti
js
ret
xchg
inc
sahf
inc
pusha
push
or
adc
sahf
pop
(bad)
xor
inc
pop
outs
xor
dec
xchg
movups
xor
retf
fst
xor
jnp
xchg
push
idiv
inc
cdq
mov
outs
enter
lea
(bad)
int
stos
jns
cmp
shr
add
fisubr
or
xchg
jl
cmps
mov
ficomp
pop
test
into
or
movs
ficomp
fsubr
pop
inc
xchg
pop
push
dec
retf
call
shr
mov
ja
sub
or
xor
(bad)
fs
mov
daa
arpl
gs
mov
fild
bound
sub
cmp
cs
dec
lds
fsub
rol
sub
leave
gs
lods
xor
lods
sbb
xchg
fsub
push
cmp
shl
mov
(bad)
das
push
dec
and
adc
pop
fwait
cmps
sub
retf
add
retf
push
int3
(bad)
mov
ret
aaa
xchg
xchg
inc
pop
popf
call
(bad)
outs
mov
es
push
out
js
sbb
push
xchg
pop
sub
xor
lods
mov
ficomp
dec
xor
sbb
(bad)
mov
arpl
cmps
pop
inc
mov
test
stc
xor
pop
fwait
or
xor
outs
jmp
xchg
je
data16
out
add
mov
add
inc
js
rcr
loop
dec
jnp
xchg
push
and
nop
jns
ja
cld
fwait
cmps
mov
dec
jmp
aam
stos
sar
sti
arpl
xor
imul
xchg
fs
movs
pop
push
fs
lea
xor
and
mov
add
mov
call
or
pop
inc
fsincos
add
mov
jmp
outs
and
push
dec
xchg
repz
xchg
aad
or
pop
into
push
daa
(bad)
cmp
inc
clc
retf
mov
jb
xchg
mul
pop
mov
jl
rcl
cdq
leave
adc
xchg
pop
aas
repz
outs
cdq
in
cs
mov
add
aaa
fsub
arpl
sub
ror
jne
or
(bad)
repz
lods
stos
sbb
fs
cmp
aaa
out
add
mov
mov
cmp
adc
pop
adc
add
pusha
cmp
out
mov
or
cld
cdq
out
adc
icebp
test
std
fld
mov
mov
retf
test
push
neg
dec
push
outs
inc
sub
xchg
jle
fwait
mov
pop
aam
movs
lahf
in
dec
not
mov
inc
cmp
loop
jecxz
jp
pop
lahf
popa
xchg
dec
cwde
fisttp
cli
inc
rcr
ffree
inc
fld
or
out
xchg
add
jns
ins
dec
xchg
add
and
push
mov
mov
jl
dec
in
lods
mov
mov
das
xor
mov
push
jb
popa
cmp
xor
fnsave
hlt
inc
xor
cmp
fs
push
jp
pushf
in
fild
or
ins
sub
outs
mov
cmp
fstp
pusha
mov
and
sub
adc
and
cmc
and
loopne
pop
(bad)
jo
iret
adc
fimul
sbb
mov
mov
repz
aas
popf
int
fist
repnz
mov
sub
cmp
jb
retf
inc
mov
daa
adc
jle
ds
aam
popa
jg
rol
(bad)
mov
dec
test
mov
push
push
and
shl
retf
mov
cmp
scas
or
push
mov
(bad)
test
pop
into
inc
in
fisub
test
stc
jl
cli
cmp
ins
ret
lahf
mov
mov
(bad)
add
push
stc
test
icebp
pushf
sqrtps
out
sbb
bound
xor
repz
popa
dec
xchg
mov
cld
(bad)
mov
mov
cmp
cli
xor
dec
mov
in
cmp
rol
jmp
and
dec
jo
retf
pop
retf
xchg
fmul
ror
xchg
lods
mov
cmp
jb
(bad)
gs
jns
in
mov
in
retf
mov
jmp
popf
call
ffree
in
mov
retf
imul
cwd
mov
sub
jbe
iret
jmp
cmp
daa
push
out
xchg
fwait
push
out
xchg
jg
repnz
jge
xlat
aas
sub
push
xchg
out
retf
mul
repnz
mov
sub
sub
sbb
jns
dec
xchg
stc
xor
fwait
lahf
inc
jmp
int
xor
int3
jg
fld
cld
add
mov
cwde
fild
inc
retf
jnp
xchg
(bad)
sbb
push
call
sub
sub
fwait
cdq
mov
repz
cdq
cdq
cmc
mov
cdq
cmc
dec
icebp
jno
xor
jmp
sub
je
test
cmp
xor
jae
push
ss
in
dec
addr16
dec
push
xchg
push
out
outs
inc
fld
ret
imul
sub
sub
xchg
stc
xchg
lahf
pop
fs
bound
fisubr
sub
test
outs
out
xchg
lea
xchg
xor
mov
or
neg
xchg
sub
ret
std
xchg
fstp
(bad)
iret
or
iret
sub
daa
pop
or
cwde
and
scas
add
pop
or
push
push
loope
std
mov
mov
pop
fimul
push
out
imul
dec
arpl
sbb
mov
mov
shl
cmp
ret
pusha
arpl
cs
sti
ror
sbb
sbb
retf
ja
mov
xor
or
fbld
cli
pop
xchg
aam
cs
cmp
add
inc
(bad)
cwde
pop
xchg
push
fistp
mov
dec
sbb
add
fild
adc
jg
jcxz
std
js
add
lock
adc
cmp
popf
dec
pushf
dec
cmp
je
pop
fldcw
cdq
stos
(bad)
jne
imul
outs
mov
mov
int
mov
inc
imul
jo
ret
jge
sub
sahf
push
sahf
add
cmp
adc
jg
mov
(bad)
jmp
repz
and
xchg
lahf
xor
jecxz
sbb
out
dec
fisub
or
jp
mov
mov
ja
outs
mov
mov
fdiv
out
pop
call
jg
jg
jmp
add
test
pop
out
jecxz
out
icebp
(bad)
fnstsw
jmp
(bad)
(bad)
scas
clc
fcomip
jg
(bad)
fisubr
add
pusha
mov
inc
adc
add
push
out
or
fcomp
push
cmp
cmp
adc
retf
push
sub
push
stos
xchg
cwde
jb
mov
mov
movs
cld
pop
fldcw
pop
jns
stc
mov
into
je
cli
xor
pop
mov
add
ret
xor
fadd
pop
jmp
dec
cmp
cmc
pop
not
out
sbb
scas
repnz
repnz
jge
jge
xor
sbb
retf
dec
add
lds
mov
pop
push
(bad)
xchg
and
pop
(bad)
adc
mov
pushf
movs
sbb
in
cmp
or
and
es
sbb
(bad)
mov
pop
xor
lds
or
inc
mov
lock
xchg
shl
repz
movs
jge
push
cmps
stc
sub
test
std
cmp
dec
dec
push
sub
mov
dec
dec
dec
add
stc
call
ror
clc
mov
cmps
pop
jle
jecxz
pop
push
loop
in
inc
mov
ins
adc
jno
fld
shl
or
test
data16
xlat
mov
(bad)
mov
(bad)
mov
push
popf
rol
dec
xchg
fst
loope
das
or
xor
loopne
aad
adc
xor
loopne
cwde
stos
sbb
aaa
mov
inc
fisub
retf
lds
mov
inc
imul
and
pusha
pop
fcomp
adc
leave
out
je
and
xchg
icebp
add
test
xchg
fstp
test
adc
into
(bad)
(bad)
pop
in
fwait
mov
stos
scas
or
retf
adc
es
rcl
adc
rcr
cwde
mov
push
loope
mov
pop
cmp
sbb
out
push
daa
xchg
dec
inc
adc
cmp
mov
popa
adc
sub
or
aam
daa
inc
sbb
loop
pop
movs
xor
add
call
aad
mov
inc
arpl
push
stc
inc
js
sub
arpl
lods
jae
push
icebp
loope
call
lea
mov
mov
sbb
pushf
xor
dec
push
(bad)
sub
xor
pop
mov
push
pop
pop
test
pop
and
ret
leave
enter
add
and
ss
push
mov
mov
inc
xor
push
mov
xor
mov
adc
pop
scas
stos
mov
push
inc
int
inc
sbb
or
sbb
rcr
dec
ss
push
jno
rcl
mov
dec
cmps
pop
cwde
xlat
lahf
fcomp
xor
and
leave
stos
push
icebp
mov
rol
push
scas
mov
aam
sbb
je
jb
movs
dec
push
sbb
in
stc
dec
xchg
and
js
cmp
dec
stos
addr16
xor
test
icebp
mov
cli
inc
movs
mov
sbb
mov
sbb
xor
mov
lock
leave
dec
jno
(bad)
(bad)
push
dec
stos
push
jmp
sbb
cmps
mov
ret
repnz
sub
xor
sahf
in
icebp
sub
xchg
pop
sbb
sub
or
imul
xlat
push
sbb
xchg
inc
and
mov
lods
cs
sbb
push
and
push
mov
mov
push
adc
xor
jmp
xor
xor
test
icebp
leave
ror
aam
mov
dec
adc
mov
adc
xor
jno
aam
xchg
xchg
add
fsubr
push
fs
push
lods
in
test
add
(bad)
dec
inc
arpl
call
cmp
lods
push
adc
push
lods
dec
push
xchg
ret
jno
icebp
jl
push
jbe
scas
dec
mov
test
mov
arpl
push
cmps
and
mov
mov
push
(bad)
xchg
xor
sbb
adc
ret
mov
scas
lds
xlat
adc
sar
dec
adc
pop
or
movs
xor
or
stos
mov
lahf
test
mov
jne
jle
add
xchg
push
mov
dec
dec
mov
pop
fild
cs
push
jl
sar
pusha
push
es
mov
push
pop
scas
lea
dec
dec
lea
xor
(bad)
inc
xchg
mov
adc
ins
stos
test
push
loopne
mov
cmp
cs
data16
adc
adc
jl
mov
frstor
inc
bound
mov
mov
mov
outs
sbb
push
push
jne
sub
dec
pop
push
lods
int3
ja
mov
psubsb
fcomp
inc
push
icebp
inc
mov
in
xchg
nop
sub
xchg
stos
push
(bad)
adc
or
scas
ret
cdq
loop
push
out
push
leave
call
iret
aaa
dec
push
fwait
loope
inc
packuswb
outs
test
stos
dec
or
lds
xchg
xlat
loopne
(bad)
cmps
sub
jg
mov
scas
or
retf
lods
ss
leave
(bad)
jle
cmp
mov
dec
stos
mov
jno
imul
int3
push
push
or
xchg
mov
mov
jb
mov
push
pop
shl
and
push
lahf
mov
ret
dec
nop
add
or
stos
fstp
dec
add
cmp
lock
push
and
daa
retf
in
ret
lods
cmp
clc
loop
add
(bad)
xchg
aad
popf
push
xlat
push
test
jo
movs
test
pop
enter
(bad)
mov
mov
or
sbb
jne
loope
dec
or
les
push
sub
sbb
sbb
lahf
aad
mov
ins
pop
ret
cs
jecxz
add
xchg
push
imul
mov
hlt
(bad)
jo
(bad)
push
(bad)
mov
sahf
adc
xor
pop
adc
sbb
fdivr
push
jne
scas
(bad)
int
(bad)
rcr
fwait
push
test
inc
ja
sub
loop
pop
xchg
(bad)
mov
cs
xchg
call
mov
cs
add
mov
fistp
mov
js
call
push
cmps
stos
push
sub
dec
adc
pop
pop
(bad)
push
ret
push
sub
dec
retf
mov
xor
mov
inc
rol
pushf
cs
mov
dec
ja
rol
aam
cs
cmp
les
add
add
hlt
je
sub
adc
loop
push
ds
aas
ds
inc
das
pop
js
pusha
(bad)
ds
out
add
add
and
sub
pusha
push
ds
loopne
jle
pusha
ret
loopne
or
mov
dec
cmp
add
cmp
mov
ja
dec
pop
enter
nop
fld
jle
fs
jmp
mov
and
pop
sbb
mov
mov
sbb
imul
adc
test
mov
sub
mov
add
adc
sub
dec
adc
js
push
add
out
add
adc
and
xor
out
mov
adc
cs
inc
enter
and
and
rol
push
add
and
dec
xor
add
add
add
shl
dec
add
pop
add
rcr
cmps
add
mov
rol
or
fs
inc
add
pop
xor
add
sub
inc
add
scas
inc
and
add
mov
inc
xchg
lss
nop
movs
inc
xor
inc
add
sub
or
add
push
mov
jp
shr
add
dec
add
mov
rol
in
ds
shr
rcl
cmovo
adc
lods
pusha
cmps
popa
mov
movs
stos
and
fwait
jp
jmp
push
scas
ss
scas
jmp
lahf
jnp
out
xor
out
out
(bad)
(bad)
enter
idiv
xchg
arpl
xchg
loop
and
mov
dec
into
es
dec
xchg
xlat
jb
(bad)
les
dec
cmp
push
leave
popa
or
adc
add
fcom
add
fdivr
or
and
sub
dec
add
inc
sar
sub
mov
or
out
iret
mov
hlt
dec
sbb
mov
ds
sahf
jae
repz
stc
pop
xchg
push
mov
in
fcom
inc
adc
push
fst
inc
pop
frstor
aad
imul
push
aad
repnz
in
dec
xor
ins
push
and
adc
dec
xor
ja
pusha
retf
pushf
and
dec
arpl
enter
dec
jns
xchg
ja
pop
dec
pop
dec
jns
retf
jbe
in
stos
xchg
xchg
push
aas
sub
push
push
loop
(bad)
or
loope
push
popf
jbe
aaa
ins
lea
leave
call
or
call
lahf
mov
fwait
movs
xchg
(bad)
arpl
jmp
leave
inc
adc
fwait
cmp
push
stos
xor
xchg
mov
idiv
cs
into
mov
out
adc
rcr
mov
fdiv
cmc
out
xor
push
sub
pushf
dec
test
lods
mov
shr
int
aad
and
inc
cmps
gs
sbb
push
cmps
push
in
push
pop
cmp
jmp
sbb
add
stos
jne
add
jno
dec
lods
push
mov
or
push
pop
xor
xchg
in
rcl
(bad)
jle
mov
pop
push
or
push
imul
pop
(bad)
and
cmp
add
ficom
mov
inc
dec
dec
ror
adc
mov
lods
dec
xor
xchg
mov
icebp
ss
mov
inc
je
jnp
mov
mov
xchg
add
cmp
cwde
cmps
loopne
and
inc
or
pop
in
jge
jne
sahf
xor
and
popf
mov
fstp
adc
jecxz
dec
push
dec
in
push
adc
xor
gs
cmp
repnz
out
fild
xor
adc
iret
retf
sti
retfw
les
js
adc
push
leave
cli
stc
push
loop
div
movs
loopne
push
ficomp
std
xchg
pop
mov
scas
mov
cld
hlt
int3
xlat
cmp
sub
adc
mov
inc
sbb
jb
mov
xchg
jmp
or
mov
jo
jmp
dec
jecxz
lea
loop
daa
das
sar
fbstp
inc
jbe
outs
push
sahf
mov
push
icebp
push
in
or
ret
int3
mov
xchg
dec
push
mov
or
int
test
jecxz
and
call
mov
xchg
push
js
sar
hlt
pop
jmp
call
stos
das
mov
mov
hlt
bound
ror
xchg
jp
xchg
or
sbb
cmps
dec
xor
in
add
outs
or
ja
dec
das
outs
retf
sbb
pop
ror
xor
mov
jmp
retf
cmc
inc
mov
sub
xor
sub
lahf
pop
cmp
push
fldenv
and
aas
pop
or
fcom
xor
outs
xchg
jmp
or
les
xor
idiv
mov
and
or
xor
or
and
shr
mov
(bad)
adc
sar
fmul
sbb
sbb
add
ss
sub
aaa
xor
bound
or
inc
inc
retf
ins
loope
je
(bad)
push
sub
fs
adc
jmp
sbb
fistp
loop
mov
outs
jo
sub
popa
stc
mov
jecxz
push
dec
cmp
jne
jmp
mov
cmp
inc
lock
jno
inc
or
cld
data16
icebp
icebp
ins
retf
mov
(bad)
sbb
aaa
mov
fcom
xor
ret
lds
hlt
mov
clc
outs
in
push
into
sub
mov
jno
adc
jbe
jnp
push
inc
movs
sub
jo
jle
xchg
int
sbb
pop
jmp
xor
mov
mov
inc
inc
out
pop
xor
mov
rcr
enter
fwait
enter
mov
lock
dec
fst
jo
lea
lahf
mov
(bad)
arpl
mov
and
and
dec
dec
test
test
xor
xor
mov
cmc
push
pop
(bad)
cmp
scas
imul
jmp
movs
jb
xchg
cwde
dec
inc
call
aad
or
lock
mov
ficom
xlat
mov
stos
dec
mov
(bad)
dec
sbb
mov
int
ror
test
ja
push
(bad)
push
(bad)
fisubr
pop
dec
xchg
inc
fwait
pop
mov
clc
data16
xor
mov
mov
mov
push
into
stos
fnsave
test
dec
fbstp
adc
pop
es
sahf
stos
pop
xor
cmp
add
sbb
mov
popf
or
shl
sbb
mov
fmul
xor
fsub
sbb
push
cmp
rcl
(bad)
jmp
or
call
pop
dec
jns
mov
sahf
jmp
jns
pusha
or
fidiv
sub
or
fcom
mov
sbb
dec
pop
and
iret
movs
lds
aaa
push
mov
leave
retf
jb
and
les
pop
and
fldcw
jnp
je
addr16
push
xlat
stos
or
jne
out
sbb
cmps
into
inc
jns
sbb
cli
and
cmp
punpckhdq
ins
test
out
das
dec
aas
pop
jle
jmp
into
in
call
cmc
sbb
and
inc
mov
cmp
xor
pop
es
(bad)
mov
mov
das
cmp
nop
in
loopne
jmp
mov
mov
outs
jnp
xchg
xor
aaa
xor
mov
xchg
ror
push
mov
and
shl
scas
inc
mov
nop
(bad)
aaa
pushf
push
pop
cmp
inc
and
lds
rol
fs
aad
shl
sub
lea
lods
push
mov
scas
cmps
std
sbb
push
add
add
mov
imul
js
mov
or
dec
push
xchg
jl
push
inc
mov
(bad)
pop
cmp
into
icebp
sbb
rcr
and
xchg
loope
ret
mov
cmp
mov
ins
fs
xor
xchg
sub
sub
in
shl
inc
adc
adc
mov
rcr
sti
shl
mov
idiv
rcl
sub
mov
dec
pushf
xor
inc
xor
adc
cmp
mov
or
retf
cmp
int
lods
fdiv
inc
shr
adc
retf
push
or
and
jns
sbb
shl
mov
xchg
mov
pop
mov
fsubr
dec
xor
jmp
push
ins
jle
out
adc
mov
push
inc
pop
mov
stc
pop
dec
xor
daa
inc
push
sbb
jecxz
(bad)
pop
bswap
or
mov
movs
dec
inc
sub
jne
retf
iret
in
sub
jg
push
mov
sub
fbld
sar
mov
pop
and
xchg
inc
inc
push
dec
sbb
scas
les
clc
repnz
movs
add
xor
out
mov
lock
xchg
fistp
xor
outs
xchg
shl
push
jg
fwait
call
and
fisttp
dec
das
cmp
or
call
int
je
(bad)
cmp
into
repz
inc
lock
fdiv
es
ja
xchg
rol
adc
add
dec
sbb
xchg
leave
test
push
ds
or
xchg
xchg
aad
enter
sub
out
mov
mov
cmc
mov
sahf
cmps
add
outs
adc
jnp
test
inc
cmps
jge
cmp
pop
stos
sbb
cmp
xor
out
sub
std
fwait
out
fs
(bad)
fst
imul
(bad)
lods
fstp
inc
scas
xor
sub
pop
rol
jle
mov
loopne
shl
cmps
int3
inc
jo
enter
pushf
psubb
inc
loop
jns
arpl
lahf
jecxz
jle
in
or
sub
pop
std
movmskps
or
jae
jg
sub
dec
dec
test
dec
xor
ror
push
adc
aam
jmp
pop
adc
inc
sbb
ret
dec
xchg
movs
mov
ret
mov
mov
xchg
xor
sar
ds
or
pop
loopne
aas
adc
movs
cmps
cmp
push
into
xchg
jae
fmul
scas
dec
jmp
mov
int
ins
clc
pop
dec
es
es
sahf
test
jns
mov
fsubr
scas
and
cmps
cdq
loopne
adc
mov
or
push
adc
leave
xor
lea
pop
push
jbe
or
int
dec
mov
pop
sbb
loop
pop
and
inc
sar
xor
cmp
icebp
mov
outs
and
xchg
xchg
sub
cmps
and
jmp
sbb
sub
dec
xor
inc
ror
mul
xchg
or
and
jg
adc
pop
or
mov
inc
cwde
hlt
cdq
sub
and
retf
and
inc
xor
cmp
movs
das
fistp
cmps
cmp
xor
and
sbb
dec
xchg
mov
cld
std
mov
lahf
pop
int3
dec
xor
cdq
dec
xor
xor
ss
iret
ja
or
inc
sub
add
enter
ins
mov
jae
js
adc
sahf
inc
mul
outs
sahf
jmp
fs
(bad)
mov
cs
scas
sbb
push
test
xchg
or
out
ins
ret
add
and
mov
leave
mov
dec
rol
shl
mov
mov
cmp
or
and
jnp
(bad)
imul
xchg
mov
gs
xchg
push
aaa
je
jp
xchg
in
xor
cmp
mov
xchg
aas
repnz
jg
in
es
arpl
pop
xor
sbb
sub
jnp
mov
mov
xor
sub
jnp
xchg
dec
xchg
mov
jae
aam
inc
ds
jo
or
dec
mov
and
xor
jo
pop
jg
gs
and
sbb
mov
jb
sub
xchg
sub
adc
jne
lock
pop
rcl
loop
and
mov
xor
jo
pop
lock
push
leave
into
lock
ja
loope
adc
cmp
push
push
test
pop
(bad)
je
das
xchg
pop
and
or
arpl
jge
dec
imul
add
fadd
pop
outs
inc
sub
inc
(bad)
fs
mov
sbb
pop
mov
out
pop
scas
(bad)
adc
push
jmp
jmp
sti
inc
mov
dec
out
sbb
dec
sar
in
mov
xchg
or
aaa
sub
pop
lods
imul
push
out
repz
daa
sbb
adc
jbe
cmp
dec
or
mov
in
imul
xchg
jb
ins
xor
retf
pop
push
ficomp
dec
sub
mov
adc
and
sub
jmp
test
jne
pop
aam
add
and
mul
out
xlat
push
fsubr
test
ja
pop
lods
pop
lods
imul
jne
sbb
addr16
test
pop
jge
neg
fmulp
ins
imul
ja
push
mov
dec
test
lahf
jb
cld
(bad)
xchg
retf
sbb
movs
adc
aam
sub
mov
aad
mov
jne
xchg
mov
mov
push
cmp
lea
dec
sub
pop
xchg
jle
cdq
pop
pop
inc
cmp
ror
jbe
add
lgs
retf
mov
xor
xlat
retf
ror
ss
mov
fs
jl
arpl
sub
sbb
jecxz
dec
clc
lock
mov
pop
dec
into
cmp
mov
popf
jle
push
icebp
sub
movs
call
dec
xor
arpl
mov
xor
ret
inc
pop
addr16
jne
jge
cld
enter
loope
jecxz
sub
xchg
dec
mov
adc
dec
aam
push
push
(bad)
in
nop
push
dec
pop
call
aaa
mov
lahf
arpl
(bad)
sbb
inc
fist
lds
sbb
test
cmp
mov
aam
aam
into
iret
mov
mov
stos
pusha
cld
mov
cmp
push
jns
add
fs
xchg
sbb
add
add
into
push
shl
mov
fidiv
imul
addr16
or
enter
loope
xchg
mov
jecxz
add
fwait
xor
adc
or
loopne
cld
mov
jg
cmp
in
mov
add
ret
jae
aaa
sahf
or
addr16
mov
or
leave
ja
lods
ror
cmp
test
or
cmp
pop
loopne
mov
sub
out
or
popa
or
adc
sub
push
bnd
iret
sti
or
inc
cmp
push
or
lahf
push
cld
psadbw
mov
jg
out
push
push
icebp
cmp
loop
adc
lea
popa
punpckhbw
(bad)
sub
xlat
popa
imul
mov
or
ficom
mov
or
arpl
jmp
cmp
enter
push
inc
xchg
pushf
inc
repnz
in
mov
pusha
stos
or
pop
push
fmul
add
or
ror
pop
fild
sti
ficomp
mov
and
xchg
lods
mov
and
aaa
add
jp
stc
dec
stc
shl
scas
sub
jb
js
push
adc
mov
mov
std
out
popfw
dec
sbb
sub
call
sbb
mov
inc
jb
mov
scas
sar
fidiv
mov
adc
push
scas
mov
xor
les
mov
cdq
pop
xor
xchg
out
ins
(bad)
xchg
inc
loop
mov
mov
dec
mov
(bad)
xor
inc
test
mov
(bad)
inc
bound
mov
adc
dec
or
loop
pop
dec
retf
inc
dec
or
fdiv
data16
sti
push
pushf
xor
out
repnz
mov
sub
jo
adc
push
ds
mov
stc
dec
add
fmul
dec
add
dec
iret
(bad)
lds
es
xor
aaa
lods
mov
cdq
or
loop
call
jg
ret
jnp
call
or
fist
addr16
outs
sar
pop
pop
loopne
shl
sub
jne
sub
xchg
fadd
in
(bad)
ficomp
add
call
add
rcr
repnz
xchg
iret
xchg
dec
mov
mov
xor
enter
xchg
sbb
and
adc
pushf
inc
mov
mov
ins
push
test
mov
in
(bad)
cmp
jne
dec
adc
js
pop
add
jge
add
mov
nop
fisub
cld
sbb
jns
ins
aam
cs
mov
inc
sub
mov
inc
inc
inc
push
into
mov
jl
pushf
adc
stc
pop
sbb
lods
xor
retf
pushf
out
mov
mov
std
mov
push
sbb
cmp
push
pop
mov
mov
push
inc
sbb
retf
test
pop
rcl
and
icebp
xchg
inc
mov
inc
jo
sahf
xchg
scas
fdiv
std
cmp
and
or
push
inc
push
xchg
jae
cmp
jg
cmp
cmps
pop
sbb
xor
jmp
push
or
cmp
or
loop
lahf
and
inc
dec
pop
in
jmp
inc
xor
mov
test
arpl
lock
fucomip
sbb
mov
xchg
sbb
repnz
jno
add
or
push
pop
dec
dec
mov
aas
movs
pop
loopne
adc
test
test
xchg
cmp
mov
mov
inc
cmps
jae
xor
xchg
jl
jp
push
jae
add
and
xor
fimul
into
add
sub
push
cmp
pop
sub
jle
cmp
mov
sub
and
sbb
adc
sub
outs
adc
ins
retf
push
sub
mov
push
pop
push
or
push
pmaddwd
or
sbb
sahf
inc
fist
daa
push
pop
add
cli
out
fsub
stos
cs
or
xor
sahf
inc
stc
adc
movs
push
ret
push
std
bswap
mov
data16
lods
repz
cmp
xor
test
pusha
arpl
xchg
(bad)
test
rcr
sbb
ja
repz
mov
xor
test
mov
mov
test
clc
ins
outs
push
add
push
mov
mov
cs
dec
xchg
jp
mov
push
xor
mov
xchg
push
xchg
mov
lds
cmc
cdq
jne
mov
adc
pop
xor
dec
aam
fs
clc
(bad)
sbb
inc
mov
fisttp
inc
pop
popf
lds
cdq
pop
in
nop
scas
stc
lds
(bad)
pop
push
xchg
and
sti
mov
(bad)
sub
enter
sti
psllq
lock
cmp
push
ins
ror
(bad)
pop
lock
repnz
pop
cmc
ror
cmp
nop
push
push
cmps
push
pop
xor
jge
jmp
pop
fnstcw
jae
ss
out
pop
cmp
arpl
dec
jmp
ror
sbb
(bad)
rcr
outs
imul
pop
mov
mov
fucomp
pop
pop
loop
sbb
sbb
sub
and
xor
sti
adc
jecxz
test
lea
repz
lock
fst
cwde
sub
shr
pusha
or
xchg
sbb
ins
and
mov
xor
ret
push
sahf
(bad)
sub
dec
pop
or
xchg
(bad)
xchg
jmp
sbb
mov
mov
xchg
ds
and
or
jnp
xchg
cld
dec
inc
or
jo
mov
xchg
mov
fisttp
mov
(bad)
stos
sbb
fs
daa
sub
fnstsw
aaa
mov
push
cwde
fwait
(bad)
push
adc
mov
lahf
xchg
jno
and
and
idiv
jecxz
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
and
add
add
push
je
imul
add
add
dec
add
add
push
push
add
add
add
inc
push
dec
inc
add
add
or
ins
outs
bound
add
add
add
push
cmp
add
add
add
add
add
add
add
mov
add
pop
add
add
add
add
add
xor
add
and
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
jge
push
add
add
add
add
add
add
add
add
add
xchg
add
add
movs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
push
add
sub
push
add
sub
push
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
sbb
inc
add
push
add
bound
xchg
xchg
add
iret
add
add
imul
add
add
push
imul
add
push
xchg
add
add
push
dec
push
push
add
dec
push
push
add
imul
add
xchg
add
add
add
add
push
xchg
add
add
push
xchg
add
add
pop
sub
push
add
pop
sub
pop
dec
add
add
add
xchg
add
add
add
pop
in
push
add
imul
add
sub
push
add
xchg
add
add
add
add
or
or
add
or
or
add
xor
push
add
test
add
or
or
add
add
add
add
add
or
sub
push
add
xchg
add
add
add
add
or
or
add
add
ror
push
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
lock
sti
or
add
add
push
sbb
push
add
push
cmps
add
add
push
sbb
push
add
xchg
add
add
mov
add
push
cmps
add
add
nop
push
add
cmps
add
add
jge
push
add
add
add
montmul
cmps
add
add
adc
adc
adc
push
add
adc
push
add
adc
push
add
add
add
add
adc
adc
adc
add
add
adc
push
add
xchg
add
add
add
add
adc
adc
push
add
adc
push
add
add
add
out
adc
or
add
adc
cs
jbe
cmps
add
add
add
add
adc
fist
clc
adc
adc
cmps
add
add
push
in
push
add
cmps
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
add
mov
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
add
add
imul
add
add
add
adc
test
adc
sbb
add
add
add
adc
pop
add
add
add
add
adc
and
add
adc
or
imul
add
add
add
imul
add
add
add
add
add
add
add
sub
add
add
ja
imul
add
add
add
add
add
pop
imul
add
add
add
add
add
pop
imul
add
add
add
pop
imul
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
adc
xchg
or
add
add
add
add
cmp
push
add
add
add
add
pop
add
add
add
add
pop
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
mov
add
adc
cmps
or
add
add
add
add
add
pop
add
adc
mov
add
pop
add
adc
mov
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
imul
add
mov
add
add
movlps
add
add
add
add
adc
add
add
add
add
add
mov
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
imul
add
add
add
add
adc
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
imul
add
add
add
add
add
add
add
add
imul
add
add
add
add
imul
add
add
add
add
imul
add
ret
add
add
add
imul
add
les
add
adc
pop
adc
add
add
add
add
adc
add
add
add
add
push
mov
xor
push
add
xchg
add
les
xchg
add
mov
add
add
add
add
add
add
add
add
push
mov
xor
push
add
adc
push
add
adc
push
add
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
xor
push
add
add
xor
je
or
and
je
mov
xor
je
or
adc
je
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
xor
push
add
sub
add
sub
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
mov
add
je
mov
adc
je
loopne
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
push
adc
ret
push
adc
je
mov
adc
je
in
add
add
push
add
ret
push
add
les
mov
add
add
add
add
add
add
add
add
add
add
or
pop
push
sub
mov
xchg
pop
push
xor
mov
xchg
pop
push
xor
mov
cmp
je
in
add
add
add
add
add
add
add
or
add
or
add
or
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
or
add
add
add
add
test
sub
adc
je
mov
adc
je
or
add
add
add
add
or
adc
je
outs
or
add
mov
push
sub
in
add
std
adc
add
add
adc
add
test
adc
add
add
or
mov
xor
ja
xchg
xor
mov
xchg
or
add
add
add
adc
popa
add
add
add
add
add
xchg
mov
add
xchg
je
add
add
and
add
add
add
add
add
add
xchg
sbb
or
add
nop
and
add
add
add
add
xchg
add
add
add
xchg
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
xchg
mov
add
add
add
add
add
add
add
add
add
mov
add
and
add
add
add
add
add
add
mov
add
and
add
add
add
add
add
add
add
add
xchg
sbb
or
add
enter
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
sub
xchg
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
xchg
mov
add
add
add
xchg
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
or
add
sub
add
add
xchg
mov
add
add
add
mov
add
add
add
(bad)
or
add
dec
xor
add
add
add
add
add
add
mov
add
add
add
(bad)
or
add
hlt
xor
add
add
add
add
xor
add
add
add
add
add
add
add
(bad)
or
add
xor
add
add
xchg
sbb
or
add
mov
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
add
add
add
aaa
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
xchg
sbb
or
add
jo
add
add
xchg
mov
add
xchg
add
add
add
add
add
xchg
mov
add
mov
add
add
add
(bad)
or
add
sar
add
add
add
add
cmp
add
add
add
add
or
add
push
cmp
or
add
fs
xchg
sub
test
add
add
add
xchg
ss
add
add
xchg
sbb
or
add
in
add
add
xchg
mov
add
cmp
xchg
add
add
cmp
add
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
adc
add
add
add
xor
add
add
xchg
sbb
or
add
movs
inc
add
add
xchg
adc
jg
add
mov
add
add
int3
inc
add
add
xchg
xor
out
add
add
inc
add
add
xchg
cmp
xchg
add
add
add
add
add
inc
add
add
or
push
add
add
add
or
pop
add
inc
add
add
xchg
mov
add
inc
add
add
xchg
add
add
add
add
xchg
mov
add
xchg
add
add
add
add
xchg
add
add
add
dec
add
add
xchg
add
add
add
add
xchg
add
add
add
add
xchg
mov
add
add
add
add
add
xchg
je
xor
pop
add
add
add
add
xchg
sbb
or
pop
add
xchg
mov
add
add
add
add
pop
add
add
add
add
push
pop
add
add
add
add
push
pop
add
add
add
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
xchg
add
push
pop
add
add
add
add
dec
add
add
xchg
add
add
dec
add
add
xchg
add
add
add
xchg
add
push
pop
add
dec
add
add
xchg
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
or
push
push
add
add
add
add
add
or
push
adc
add
add
add
add
add
add
add
add
add
add
add
mov
or
push
push
add
add
add
add
add
or
push
and
add
add
add
add
add
add
add
add
add
add
add
mov
or
pop
sub
add
add
add
mov
or
pop
sub
add
add
add
xchg
mov
add
add
add
add
add
add
add
add
mov
or
pop
xor
add
add
add
mov
or
pop
xor
add
add
add
xchg
mov
add
add
add
add
add
add
add
add
mov
or
cmp
add
add
add
mov
or
pop
cmp
add
add
add
xchg
mov
add
add
add
add
add
add
add
add
mov
or
inc
add
add
add
add
add
or
pop
inc
add
add
add
add
add
add
add
add
mov
or
add
add
add
add
add
or
add
add
add
add
add
or
pop
dec
add
dec
add
add
xchg
mov
add
dec
add
add
xchg
add
pop
push
add
add
add
add
push
add
add
add
xchg
add
add
push
add
add
pop
push
add
push
add
add
xchg
mov
add
push
add
add
xchg
add
pop
push
add
add
add
add
pusha
push
add
add
xchg
add
or
inc
pop
add
add
xchg
add
or
loopne
add
add
xchg
mov
add
pop
add
add
xchg
sbb
or
push
add
add
add
xchg
mov
add
pop
add
add
xchg
add
or
pop
add
add
xchg
add
or
pop
add
add
xchg
add
or
pop
add
add
xchg
add
or
pop
add
add
xchg
add
or
pusha
add
add
xchg
add
or
pusha
add
add
xchg
sbb
or
push
add
popa
add
add
xchg
mov
add
add
add
add
bound
add
add
add
data16
add
add
push
add
add
or
data16
add
add
push
add
add
add
add
push
add
add
add
or
add
add
xchg
add
add
add
add
xchg
add
or
add
add
xchg
add
add
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
add
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
add
add
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
or
push
xchg
add
add
add
add
push
xchg
add
xchg
push
xchg
add
adc
add
push
xchg
mov
add
add
add
imul
add
add
push
add
add
or
add
add
add
xor
add
add
add
push
add
or
add
ins
add
add
xchg
add
or
add
add
xchg
add
loopne
pop
add
add
add
add
jl
add
add
xchg
add
loopne
pusha
add
xchg
mov
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
jbe
add
add
jge
add
add
mov
add
add
cdq
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
fisttp
add
add
and
add
add
jbe
add
add
jge
add
add
mov
add
add
cdq
or
add
add
or
add
les
add
add
add
add
add
add
or
add
les
add
add
add
add
or
add
add
add
add
cs
add
add
or
add
add
add
add
jbe
add
add
jge
add
add
adc
add
add
add
add
and
add
add
jbe
add
add
jge
add
add
ds
and
add
or
add
add
or
add
add
add
add
and
add
add
jbe
add
add
jge
add
add
push
or
add
add
add
add
push
or
add
add
add
add
adc
add
jbe
add
add
pop
or
add
add
add
add
jbe
add
add
jge
add
add
outs
or
add
add
add
add
outs
or
add
add
add
add
adc
add
jbe
add
add
and
add
add
jbe
add
add
jge
add
add
jl
add
add
jb
add
add
jl
add
add
jb
add
add
adc
add
jbe
add
add
and
add
add
add
adc
or
add
adc
or
add
adc
or
add
add
add
cmp
add
add
adc
add
add
add
add
add
add
popa
adc
add
add
add
add
jle
add
add
fist
add
add
adc
add
add
adc
dec
adc
dec
adc
dec
adc
xor
or
mov
add
add
add
add
add
add
and
or
inc
add
add
add
dec
add
add
add
or
inc
add
or
push
add
adc
arpl
jp
adc
outs
add
dec
add
mov
add
add
add
add
add
add
add
inc
add
add
add
add
fld
and
sbb
jecxz
and
js
aam
add
add
and
pushf
add
add
ret
add
int3
add
sbb
fiadd
jg
cdq
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
jns
jno
jns
xor
cdq
add
add
lea
leave
add
add
adc
add
add
add
add
add
add
hlt
add
add
stc
add
add
add
jg
add
and
sbb
push
add
add
add
inc
add
les
and
and
mov
add
add
add
add
pop
add
add
add
add
add
out
add
mov
add
add
add
je
pusha
add
add
add
add
add
add
sbb
pusha
add
add
pop
push
in
add
les
repnz
mov
add
add
add
test
sbb
jno
mov
and
jns
enter
jns
rol
xor
jns
fadd
inc
add
loope
dec
add
add
add
sbb
add
xor
mov
add
xchg
add
jg
pop
add
add
push
add
add
add
mov
pop
add
add
outs
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
or
jno
dec
or
add
add
add
lods
add
add
mov
add
jo
mov
jno
sub
add
icebp
add
test
mov
or
add
add
add
add
or
or
add
add
or
add
add
add
or
add
add
add
push
add
pop
add
je
aam
push
add
add
mov
add
ret
add
add
add
sub
je
push
and
je
jno
add
sub
les
add
add
push
add
jp
push
add
jg
add
xor
mov
add
add
or
xor
aam
cmp
inc
or
or
add
add
je
pusha
add
jg
pop
add
and
rol
add
add
je
adc
imul
imul
imul
imul
add
jecxz
aam
push
add
or
je
and
jns
je
sub
mov
je
cld
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
je
push
or
add
add
add
add
add
or
jg
pop
add
add
or
fisttp
dec
push
fimul
mov
pop
push
loopne
leave
add
add
add
add
push
add
sbb
js
aam
or
inc
add
add
add
push
add
loope
mov
add
push
adc
loope
add
sbb
mov
rol
and
add
cmp
sbb
arpl
pusha
or
add
or
add
ins
add
jp
and
mov
add
add
enter
icebp
add
lgs
add
adc
add
adc
adc
or
add
jg
sbb
pop
adc
sbb
outs
adc
or
jge
add
rol
cdq
adc
add
mov
or
or
mov
add
add
add
adc
pop
add
adc
rol
adc
add
adc
pop
add
adc
add
add
adc
icebp
add
adc
rol
adc
leave
add
adc
sbb
xor
jo
icebp
add
adc
rol
adc
rol
dec
adc
adc
adc
adc
mov
adc
mov
add
add
mov
add
mov
add
adc
xchg
add
add
add
add
add
aam
je
mov
add
add
adc
add
test
int3
add
cdq
add
add
adc
test
or
add
mov
aam
mov
add
add
jg
pop
add
adc
add
add
adc
or
add
add
adc
je
test
or
push
adc
leave
add
jl
js
jl
jg
pop
add
add
add
mov
or
add
add
add
add
add
repnz
or
add
adc
add
movs
or
adc
mov
add
push
adc
gs
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
xchg
add
add
add
add
add
xchg
add
add
add
add
add
pop
add
add
sbb
or
je
xchg
add
add
call
add
add
mov
lahf
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
add
add
pop
or
ins
add
pop
or
jo
int
or
je
rol
or
js
xlat
pop
sub
jae
or
or
or
add
fisttp
add
jecxz
add
fisttp
add
fisttp
add
add
add
add
add
or
add
call
add
add
or
add
add
add
push
add
call
add
add
push
imul
add
push
imul
add
imul
add
imul
add
add
add
add
pop
jae
pop
add
pop
jae
push
add
lock
stc
add
add
add
push
or
mov
push
loopne
imul
add
or
call
add
imul
add
imul
add
add
sbb
popa
add
pop
push
add
lods
add
add
add
add
add
add
add
add
add
mov
fadd
in
or
ins
add
in
add
add
add
add
add
add
aad
je
xchg
push
mov
pop
inc
or
mov
xor
dec
or
or
or
or
or
or
or
or
add
add
add
add
add
or
add
push
add
add
inc
add
add
or
add
add
add
add
cmp
add
add
cmp
add
add
add
add
add
pop
add
add
or
add
dec
add
add
add
add
add
or
add
dec
add
add
add
add
dec
add
add
add
jno
test
ror
or
or
add
add
add
add
add
add
add
add
mov
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
mov
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
test
add
add
add
daa
add
add
add
add
add
pop
add
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
sub
sub
sbb
pusha
add
sbb
add
imul
gs
gs
add
jae
popa
ins
ins
gs
ins
jae
outs
jb
imul
arpl
xor
sub
sub
sub
gs
xor
popa
xor
ss
sub
sub
sub
sub
cmp
bound
xor
gs
xor
aaa
sub
sub
sub
xor
cmp
xor
add
jae
gs
add
outs
imul
ins
add
jb
gs
xor
cs
ins
add
gs
xor
fs
ins
add
jae
popa
ins
ins
gs
add
ins
jp
das
das
xor
bound
xor
cmp
cmp
xor
bound
cmp
arpl
bound
cmp
das
xor
das
jp
popa
jae
jp
das
das
cmp
gs
aaa
data16
aaa
aaa
cmp
gs
aaa
xor
cmp
cmp
xor
das
jp
popa
jae
jp
das
das
xor
cmp
xor
xor
bound
xor
fs
arpl
arpl
cmp
fs
xor
xor
xor
das
jp
cmp
outs
fs
gs
arpl
outs
jb
or
add
dec
bound
arpl
add
je
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
jns
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
arpl
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jo
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
jae
gs
bound
jae
inc
gs
jns
gs
inc
jno
popa
ins
jae
dec
jae
jae
imul
inc
jb
ins
add
je
jbe
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
inc
fs
jne
gs
je
jb
inc
gs
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
dec
outs
jbe
dec
gs
add
imul
ins
add
jo
jae
add
add
jae
ins
bound
outs
outs
inc
je
jb
bound
add
je
imul
je
add
or
inc
outs
jne
add
ins
jne
pop
pop
add
add
add
add
push
add
jae
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
fs
inc
jae
gs
bound
gs
ins
jbe
add
je
js
arpl
imul
ins
bound
dec
outs
popa
add
jb
popa
ins
add
jae
gs
cs
dec
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
addr16
dec
popa
ins
add
jb
outs
add
popa
jb
jae
imul
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
inc
jne
ins
dec
popa
ins
add
fs
data16
bound
jb
outs
add
popa
jb
inc
gs
popa
outs
imul
jae
jne
arpl
popa
ins
gs
or
add
je
or
or
add
ins
ins
popa
bound
xor
inc
gs
popa
ins
jne
dec
jb
gs
jne
je
addr16
dec
popa
jae
popa
ins
jne
add
jae
je
bound
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
imul
ins
add
push
jb
jns
push
jo
imul
outs
arpl
imul
push
inc
imul
jns
popa
ins
add
ins
bound
add
ins
add
imul
ins
gs
outs
fs
ins
gs
arpl
jae
add
imul
add
je
dec
je
ins
add
je
gs
jo
popa
je
add
arpl
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
ins
add
jb
outs
addr16
outs
ins
jo
jb
jae
outs
add
outs
jne
gs
je
jb
dec
outs
outs
imul
je
ins
cs
push
imul
gs
inc
ins
jo
jns
addr16
dec
gs
add
outs
ins
ins
arpl
outs
add
outs
jne
gs
bound
addr16
dec
je
ins
add
je
dec
outs
addr16
add
fs
imul
add
arpl
je
outs
outs
add
ins
gs
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
(bad)
add
add
or
arpl
outs
popa
jb
pusha
xor
dec
gs
popa
ins
jne
push
popa
imul
je
dec
gs
inc
outs
outs
je
imul
addr16
push
popa
ins
jne
add
dec
jne
ins
dec
jb
ins
jo
jns
inc
jb
jne
outs
je
jne
ins
inc
js
gs
imul
je
imul
outs
ja
jb
sbb
add
je
push
add
add
pop
add
lldt
lldt
or
inc
outs
jbe
jb
outs
ins
outs
je
inc
js
popa
outs
fs
outs
jbe
jb
outs
ins
outs
je
popa
jb
popa
bound
add
gs
add
or
push
imul
imul
je
push
imul
arpl
dec
popa
arpl
outs
add
imul
jns
pop
pop
add
or
add
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
outs
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
je
imul
inc
outs
outs
jbe
jb
gs
push
outs
dec
outs
je
xor
push
outs
dec
outs
je
xor
push
outs
push
imul
outs
inc
outs
jne
ins
add
data16
inc
ins
outs
arpl
outs
jo
add
jb
jns
or
add
je
push
outs
imul
outs
je
jb
add
or
push
jb
arpl
jae
je
jb
dec
outs
outs
add
jae
gs
cs
imul
imul
arpl
jae
push
dec
outs
je
xor
inc
outs
jb
popa
je
push
gs
popa
arpl
jae
je
inc
jb
jne
outs
je
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
push
jae
push
push
js
arpl
add
je
push
imul
jns
add
outs
arpl
jae
imul
jns
add
popa
jb
add
imul
je
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
inc
arpl
outs
inc
outs
jne
je
jbe
ins
jne
add
je
inc
arpl
outs
inc
outs
jne
je
addr16
inc
arpl
outs
jae
jae
je
inc
arpl
outs
jae
inc
arpl
outs
inc
outs
jne
je
or
je
outs
outs
jae
add
add
push
add
ins
outs
jb
push
je
gs
ins
add
je
inc
push
dec
outs
je
xor
push
popa
jb
add
ins
bound
push
je
ins
gs
push
jns
je
ins
cs
ins
outs
bound
imul
add
je
jns
gs
push
gs
jb
add
jae
push
jb
je
arpl
outs
inc
js
gs
imul
je
ins
cs
arpl
imul
jb
jo
outs
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
ins
popa
je
push
je
gs
ins
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
fs
jns
add
popa
add
ins
ins
gs
imul
imul
pop
dec
push
add
je
dec
gs
jae
je
inc
popa
jo
arpl
jns
jae
je
push
outs
jae
je
outs
outs
add
gs
je
inc
arpl
jo
outs
jb
addr16
dec
outs
jo
je
ins
outs
arpl
imul
pop
dec
jne
jo
je
ins
outs
arpl
imul
pop
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
ins
outs
arpl
push
jb
outs
jae
outs
jb
inc
imul
arpl
inc
outs
ins
jo
gs
imul
add
jb
popa
jns
adc
add
je
dec
popa
outs
fs
je
jb
add
je
dec
popa
outs
fs
je
jb
add
je
inc
jb
jae
jae
je
inc
jb
jae
addr16
inc
arpl
outs
push
jns
add
je
inc
arpl
outs
push
jns
add
je
sbb
fs
je
jb
add
addr16
inc
arpl
outs
push
jns
add
addr16
outs
je
js
gs
imul
dec
outs
je
xor
nop
adc
add
or
push
or
pop
push
add
je
popa
jae
inc
jb
outs
jb
inc
ins
outs
jae
dec
popa
outs
fs
add
outs
push
jb
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
add
fs
imul
inc
gs
jb
arpl
fs
jae
add
ins
jo
jb
add
jb
outs
addr16
jne
ins
fs
inc
gs
ins
popa
jae
dec
popa
ins
add
je
inc
popa
jo
arpl
jns
push
outs
push
je
imul
jne
addr16
addr16
dec
jae
je
popa
arpl
add
je
je
add
jb
add
or
sbb
add
ins
je
arpl
je
gs
gs
je
add
push
arpl
gs
outs
add
jbe
imul
jb
arpl
jae
popa
outs
fs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
inc
ins
popa
jae
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
dec
outs
addr16
add
je
jb
dec
outs
addr16
add
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
popa
ins
ins
bound
imul
outs
fs
outs
jbe
imul
gs
ins
je
adc
add
jne
push
outs
jb
add
or
add
add
jne
jo
je
je
imul
push
gs
add
inc
bound
addr16
jb
jae
outs
je
push
push
add
add
jb
ins
add
push
add
outs
jne
inc
jne
arpl
add
add
je
jb
gs
gs
outs
outs
outs
arpl
push
je
je
add
add
add
add
add
add
add
add
add
or
sbb
add
pop
add
je
inc
outs
ins
ins
popa
outs
fs
imul
pop
dec
ja
gs
addr16
dec
gs
popa
add
pop
add
pop
add
gs
add
gs
sbb
add
je
dec
outs
arpl
push
imul
pop
inc
jbe
outs
je
popa
ins
add
je
inc
jbe
outs
je
popa
je
add
je
dec
outs
jae
popa
ins
ins
dec
add
je
push
jne
ins
imul
add
je
push
jne
dec
add
je
inc
gs
arpl
add
je
push
jb
fs
je
add
je
dec
outs
fs
gs
add
je
inc
popa
je
xor
jae
je
inc
popa
je
xor
jae
je
inc
popa
je
xor
adc
add
or
adc
add
fs
gs
popa
outs
fs
add
outs
popa
jb
push
gs
fs
push
gs
fs
outs
je
xor
inc
gs
outs
fs
gs
dec
outs
fs
add
je
dec
outs
fs
gs
popa
outs
fs
add
je
outs
fs
popa
jae
add
gs
fs
outs
outs
add
gs
je
add
popa
ins
imul
add
jae
gs
cs
gs
arpl
outs
cs
ins
imul
fs
outs
fs
inc
jns
popa
ins
imul
outs
add
jae
ins
jbe
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
dec
gs
outs
fs
popa
outs
fs
add
outs
je
ins
gs
gs
outs
fs
popa
outs
fs
add
je
gs
outs
fs
jb
ins
dec
popa
outs
fs
add
je
imul
imul
ins
popa
addr16
inc
gs
gs
outs
fs
outs
fs
dec
gs
bound
dec
outs
outs
add
je
inc
arpl
imul
add
je
outs
fs
outs
outs
add
je
push
gs
jb
push
jns
add
inc
gs
popa
ins
jne
add
je
jns
popa
ins
imul
outs
add
gs
je
inc
gs
gs
je
add
je
popa
ins
jne
add
je
outs
fs
outs
popa
je
jb
dec
gs
jo
jb
dec
outs
arpl
push
popa
jb
popa
bound
outs
outs
add
outs
jne
gs
je
jb
xor
inc
gs
outs
arpl
push
popa
jb
imul
jb
addr16
dec
outs
arpl
push
popa
jb
popa
bound
add
imul
inc
outs
jne
gs
bound
xor
addr16
dec
outs
arpl
push
jns
add
je
dec
jae
imul
fs
jb
jne
outs
je
inc
gs
imul
add
je
outs
arpl
push
imul
add
arpl
je
outs
outs
dec
popa
outs
fs
imul
jae
dec
jo
imul
je
outs
imul
outs
jb
dec
outs
je
jne
jo
jb
gs
js
gs
imul
inc
js
gs
imul
jb
ins
gs
jb
outs
outs
add
je
popa
jb
ins
gs
jb
add
je
dec
jae
je
je
arpl
addr16
dec
jae
popa
ins
jne
push
jns
add
imul
push
gs
jns
add
je
push
popa
jb
ins
gs
jb
jns
add
push
add
inc
outs
fs
je
popa
ins
jne
add
je
dec
outs
fs
add
je
outs
gs
arpl
addr16
outs
je
add
gs
outs
fs
jns
add
inc
outs
fs
dec
outs
jo
addr16
dec
jo
jb
outs
fs
jns
add
jae
ins
jbe
push
je
imul
pop
push
imul
outs
ins
jbe
push
imul
add
jae
ins
jbe
dec
gs
outs
add
je
dec
gs
outs
fs
popa
outs
fs
add
je
push
jns
gs
popa
outs
fs
add
jae
ins
jbe
inc
imul
je
inc
imul
fs
add
outs
je
ins
gs
imul
fs
add
jae
ins
jbe
push
jns
add
jae
ins
jbe
dec
gs
bound
add
je
dec
gs
bound
push
jns
add
ins
bound
push
jns
gs
add
outs
jo
inc
jno
popa
ins
imul
push
add
outs
arpl
add
add
add
add
pop
push
add
add
syscall
add
push
add
add
adc
adc
adc
add
outs
jae
jb
arpl
dec
outs
outs
add
add
add
pop
add
sbb
add
je
add
push
add
add
sbb
add
add
push
add
add
outs
jo
dec
outs
gs
popa
ins
imul
add
or
add
dec
imul
imul
add
pop
cs
outs
push
arpl
add
outs
imul
add
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
imul
add
imul
inc
jae
pop
add
imul
dec
imul
je
popa
ins
imul
fs
add
ins
pop
push
gs
ins
jbe
jb
push
inc
inc
dec
push
push
push
pop
pop
dec
inc
pop
pop
push
inc
push
dec
add
inc
dec
push
push
push
pop
pop
dec
inc
pop
pop
dec
inc
dec
inc
add
jae
jne
arpl
popa
ins
gs
js
push
gs
push
jns
je
ins
cs
gs
cs
gs
popa
jb
js
jb
jae
imul
imul
bound
push
push
jae
ins
bound
popa
ins
add
jae
jae
gs
bound
jne
add
imul
jb
gs
popa
ins
gs
dec
popa
je
push
fs
jae
gs
bound
jae
push
jae
push
jb
arpl
push
gs
jo
imul
je
inc
jae
gs
bound
inc
gs
popa
ins
add
jae
ins
bound
popa
ins
add
jb
outs
je
jae
jb
inc
jb
jne
add
je
push
jne
arpl
jae
addr16
inc
jb
jne
jae
inc
jb
jne
inc
outs
ins
ins
arpl
outs
add
jo
jne
add
outs
push
jne
dec
gs
push
outs
push
dec
outs
je
xor
inc
gs
imul
dec
push
inc
add
outs
je
jo
je
add
ins
add
jae
ins
bound
gs
ins
jbe
jb
jae
outs
fs
popa
jb
jae
inc
gs
jns
add
dec
outs
popa
fs
jae
gs
bound
jb
jae
jne
arpl
popa
ins
add
ins
gs
outs
outs
add
ins
gs
jns
je
ins
dec
outs
outs
add
je
inc
js
jae
jae
push
jb
je
inc
ins
ins
inc
jns
gs
dec
outs
popa
fs
jb
ins
add
fs
outs
ins
popa
outs
popa
addr16
jae
gs
bound
addr16
add
jae
ins
bound
ins
popa
add
xor
popa
je
add
outs
ja
jb
outs
jbe
jb
popa
outs
je
dec
popa
jae
inc
ins
outs
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
jae
add
je
push
jb
arpl
push
jb
arpl
outs
outs
jb
popa
je
outs
outs
add
jne
add
jae
popa
add
popa
arpl
popa
jb
imul
outs
add
arpl
jb
outs
jb
inc
jb
outs
jb
inc
jae
gs
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
imul
imul
jne
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
jo
jb
jae
dec
ins
fs
jae
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
popa
jb
inc
je
jb
bound
add
add
add
and
push
add
add
inc
add
bound
inc
add
jns
dec
add
cmp
and
push
add
add
inc
add
bound
inc
add
jns
dec
add
cmp
pop
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
add
xor
add
inc
add
bound
inc
add
jns
dec
add
cmp
add
add
pop
pop
add
outs
add
jb
jns
jo
je
add
add
pop
add
outs
add
ins
add
arpl
and
ins
add
je
push
add
add
add
jae
and
outs
add
je
and
jae
jne
jo
jo
outs
add
je
and
data16
jne
ins
add
add
ins
add
jne
jae
add
das
jne
outs
add
js
jo
add
je
add
add
jo
add
popa
add
add
add
add
add
adc
add
cmp
das
add
add
add
add
add
imul
pop
add
add
add
add
add
xor
xor
jge
sub
das
add
add
add
jae
imul
add
xor
sub
add
add
add
add
add
add
add
data16
add
jae
add
popa
add
add
add
add
add
add
add
add
sub
data16
add
jb
add
add
data16
add
jb
imul
add
add
pop
add
or
add
arpl
add
or
jne
imul
inc
add
jo
ins
add
arpl
popa
add
add
add
jae
jae
add
bound
ins
add
and
imul
daa
add
xor
cmp
dec
add
daa
add
and
imul
outs
add
imul
add
and
add
outs
add
add
outs
add
cmp
and
daa
add
xor
jge
daa
add
or
add
cmp
add
js
cmp
add
add
sbb
outs
add
outs
add
add
add
add
xor
jge
daa
add
and
outs
add
add
outs
add
outs
add
add
add
add
xor
jge
daa
add
sub
add
imul
and
je
outs
add
add
add
add
add
add
xor
jge
daa
add
or
ins
add
add
add
jae
imul
add
jp
add
jne
add
jo
add
jnp
xor
jge
cmp
and
jnp
xor
jge
add
add
jns
imul
and
je
outs
add
add
add
add
add
jae
and
jne
outs
add
popa
add
popa
add
add
add
outs
add
je
popa
add
ins
add
and
popa
add
jae
add
bound
ins
add
and
daa
add
xor
jge
daa
add
add
add
jnp
xor
cmp
dec
add
add
add
daa
dec
add
inc
add
and
sub
inc
add
ins
add
das
add
xor
jge
sub
and
jnp
xor
jge
add
push
add
push
add
and
sub
inc
add
ins
add
das
add
xor
jge
sub
and
jnp
xor
jge
add
inc
add
push
add
push
add
add
add
jae
ins
add
das
add
xor
jge
sub
and
jnp
xor
jge
add
add
dec
mov
add
add
mov
pop
push
sbb
mov
add
add
push
adc
sbb
pop
or
or
adc
sbb
adc
or
adc
add
add
push
add
adc
add
sbb
adc
or
adc
adc
adc
or
add
sbb
adc
sbb
and
adc
add
adc
sbb
add
add
and
add
sub
add
push
add
or
push
adc
add
add
add
add
add
add
add
add
add
push
adc
add
push
add
sbb
xor
adc
push
or
add
adc
adc
sbb
push
add
add
push
add
push
push
add
adc
sbb
adc
sbb
cmp
or
add
add
or
adc
pop
add
adc
sbb
add
adc
pop
pop
add
pop
and
adc
add
add
push
adc
pop
push
push
sbb
or
adc
push
adc
sbb
add
add
add
sbb
add
push
push
add
push
add
add
push
or
add
push
adc
popa
pop
and
add
and
add
add
push
add
add
add
push
or
add
sbb
adc
or
push
sbb
add
add
push
or
add
add
push
adc
add
add
push
and
push
adc
push
push
push
adc
push
adc
sbb
adc
add
push
adc
adc
jno
and
push
or
add
sbb
push
push
add
add
jns
and
adc
and
sbb
and
sbb
add
add
or
add
adc
pop
add
add
adc
add
add
add
pop
push
adc
adc
push
push
adc
adc
push
adc
adc
push
sbb
adc
push
or
adc
push
add
add
add
add
and
add
add
add
add
adc
push
sbb
sbb
sbb
adc
adc
push
push
or
adc
push
push
or
add
adc
push
push
mov
add
ins
adc
adc
adc
push
add
add
push
push
pop
add
push
push
push
pop
adc
push
push
push
and
adc
adc
push
add
add
push
or
and
add
adc
add
add
push
push
add
add
add
add
push
pop
pop
add
inc
push
push
push
add
adc
add
sub
add
adc
adc
push
sbb
push
sbb
add
sbb
add
cmp
add
add
sbb
add
or
add
or
add
or
add
or
add
or
push
add
or
add
or
add
add
adc
add
add
add
add
add
push
add
add
or
pop
pop
adc
push
push
push
adc
adc
int
adc
add
sbb
and
adc
adc
adc
pop
adc
push
push
or
add
adc
adc
pop
adc
push
push
add
push
add
add
add
and
add
sbb
add
adc
add
sbb
adc
add
pop
add
add
add
or
add
pop
or
add
adc
pop
add
add
or
add
add
add
add
sub
adc
pop
or
add
add
add
add
push
adc
sbb
push
adc
or
push
push
or
or
and
or
add
add
or
add
or
adc
sbb
add
adc
sbb
pop
add
add
pop
add
sbb
sub
pop
adc
adc
xor
add
adc
sbb
add
or
add
or
and
add
or
add
or
stc
or
add
or
add
or
and
add
cmp
add
or
add
push
push
add
push
add
add
or
add
push
push
add
add
push
add
add
or
add
add
add
add
adc
or
or
adc
push
push
push
push
adc
adc
adc
adc
adc
push
add
push
push
sbb
push
adc
add
push
add
or
adc
push
push
push
add
push
push
push
push
push
adc
add
add
add
add
ins
or
add
push
push
adc
pop
add
or
push
sbb
push
push
pop
add
push
sbb
sbb
or
adc
add
adc
ins
add
adc
push
adc
adc
or
adc
adc
push
add
add
push
push
adc
adc
push
or
add
pop
adc
adc
pop
push
adc
pop
push
adc
pop
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
or
add
add
add
or
add
or
add
sbb
add
sbb
or
add
add
add
add
push
push
add
adc
push
push
add
adc
pop
add
adc
add
adc
add
adc
add
adc
pop
pop
sbb
sbb
push
add
or
push
add
sbb
add
or
adc
add
sbb
sbb
pop
or
adc
or
nop
add
add
add
push
sbb
and
je
adc
adc
pop
adc
je
adc
adc
add
adc
adc
or
or
or
adc
adc
pop
adc
or
adc
adc
add
adc
adc
adc
adc
sbb
and
or
sub
add
sub
sbb
and
add
sub
sbb
or
add
sub
sub
sub
sbb
or
add
sub
sub
or
or
sub
or
add
add
adc
push
push
add
add
or
add
ins
add
add
adc
adc
adc
(bad)
inc
hlt
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
in
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
push
pop
push
add
adc
adc
push
push
push
push
adc
xor
add
adc
adc
add
adc
add
adc
add
xor
adc
add
adc
or
sub
or
push
or
add
or
add
add
add
or
add
add
adc
add
add
adc
push
push
push
push
or
adc
or
add
adc
push
sbb
sbb
adc
or
push
and
add
add
adc
push
and
sbb
and
adc
adc
adc
adc
sbb
cmp
pop
adc
imul
adc
adc
add
and
or
add
add
add
or
push
adc
or
add
add
adc
add
jns
and
adc
add
add
or
or
add
or
push
and
add
add
adc
adc
adc
add
or
adc
adc
adc
adc
sbb
adc
or
adc
add
or
add
xor
or
sbb
adc
adc
add
adc
adc
adc
add
or
sbb
sbb
push
and
sbb
add
sbb
gs
lods
add
adc
and
push
pop
add
sub
add
add
popa
or
add
adc
cmp
sub
adc
or
sub
push
adc
adc
push
or
or
add
and
adc
cmp
or
add
adc
and
adc
or
and
adc
or
cmp
or
and
adc
or
and
adc
add
or
push
add
adc
add
add
adc
add
add
sub
add
adc
sbb
add
sbb
sbb
adc
push
or
sbb
add
adc
add
push
add
adc
add
sbb
add
adc
sbb
add
sbb
adc
add
push
push
push
push
add
add
sbb
add
adc
sbb
add
and
add
sbb
add
sbb
add
sbb
push
adc
or
or
or
adc
adc
or
adc
or
adc
adc
or
pop
and
add
adc
adc
add
fisttp
adc
adc
or
adc
adc
or
add
adc
push
and
adc
add
and
and
adc
dec
add
adc
adc
adc
pop
and
adc
and
sbb
add
add
sbb
add
adc
adc
pop
add
adc
xor
adc
adc
adc
or
add
sbb
cmp
adc
adc
add
lea
adc
adc
rcl
adc
and
adc
add
push
or
add
push
adc
add
add
push
push
add
add
sbb
adc
push
adc
add
adc
sbb
add
add
adc
add
add
sbb
adc
jo
jb
addr16
and
xor
xor
add
add
add
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
push
gs
gs
jae
add
add
add
ds
add
xor
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
