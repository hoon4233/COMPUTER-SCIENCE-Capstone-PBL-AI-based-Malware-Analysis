mov
(bad)
call
in
sub
cmp
ja
xor
mov
add
(bad)
(bad)
(bad)
jmp
or
add
add
pop
inc
test
jno
mov
sub
cmp
jl
or
(bad)
call
pusha
and
test
jae
rcl
leave
ret
nop
add
in
nop
xor
pop
sti
inc
cmp
jno
mov
adc
sar
push
call
mov
adc
sub
cmp
push
ins
jg
jb
or
add
add
(bad)
std
push
add
pop
push
out
int
pop
xchg
jge
sbb
mov
fstp
(bad)
add
xor
arpl
mov
or
jno
push
jmp
rcl
push
mov
outs
sub
daa
sti
retf
test
and
jne
punpckhbw
add
dec
pop
dec
xchg
retf
out
push
outs
inc
add
(bad)
ret
inc
pop
enter
mov
sbb
in
idiv
and
call
pop
fwait
jo
and
push
push
cmp
fild
xor
dec
data16
mov
ja
push
fprem1
inc
jp
test
jg
and
shl
maxps
xor
add
fucomip
aaa
ins
cmp
fidiv
sbb
and
(bad)
fild
ret
ret
outs
cmp
js
cmp
test
sbb
dec
outs
dec
jbe
sub
xor
mov
test
in
imul
shl
nop
pusha
shl
inc
or
sbb
idiv
pop
arpl
test
je
add
sbb
fdivr
not
jne
stc
test
jno
adc
mov
mov
loop
pop
xor
ror
cmp
xor
ror
fidiv
mov
xor
inc
lock
ret
pop
fild
fistp
cmp
js
push
lock
mov
jmp
fadd
test
jno
and
sub
mov
sahf
rol
sbb
xor
out
sub
cmp
fsubr
jbe
sub
dec
jnp
not
test
and
sub
sbb
sbb
jge
and
ror
sbb
das
mov
push
dec
jle
jo
pop
sbb
imul
dec
(bad)
test
lock
fdivp
scas
jg
and
xor
add
add
xchg
pop
retf
push
mov
(bad)
or
ret
jnp
outs
sub
or
(bad)
(bad)
outs
mov
arpl
push
sbb
stos
push
mov
push
add
sbb
pop
or
and
cld
xor
xchg
adc
out
js
pusha
cmp
sub
xor
in
ds
cmps
mov
jmp
cmp
xor
test
jb
push
outs
scas
jge
add
mov
bound
xor
gs
push
ror
mov
cmp
cmp
jnp
je
mov
cmp
fsub
scas
push
push
int3
add
arpl
push
and
pop
jns
sub
les
mov
push
loope
push
(bad)
fdivr
in
out
sar
xchg
mov
pop
xor
cmp
jge
add
push
dec
inc
adc
mov
cmp
ja
mov
loop
xor
fbstp
adc
adc
pop
dec
mov
js
arpl
sub
or
adc
add
test
fs
xor
jl
add
(bad)
sbb
lods
(bad)
out
arpl
daa
iret
aad
sbb
cmp
jnp
cmp
jns
sub
movs
mov
das
movs
(bad)
cli
repnz
out
sbb
and
out
and
outs
int
outs
jp
cld
out
out
lock
xor
ins
test
leave
jno
or
loope
dec
ss
dec
cwde
cmp
js
push
mov
jne
std
iret
xchg
or
or
sbb
not
lahf
imul
adc
xor
ins
mov
push
push
push
mov
cld
push
dec
or
std
ffree
cmp
adc
pusha
test
xchg
or
test
out
dec
add
add
push
lahf
je
popf
xchg
jp
les
out
mov
adc
lahf
ror
xchg
mov
sti
inc
push
sbb
inc
int3
or
mov
mov
push
push
mov
cmps
or
test
jb
push
cmp
mov
pop
inc
ds
ret
nop
pop
xlat
adc
jle
adc
xor
dec
call
in
cs
add
jne
outs
jb
int
lods
or
sub
adc
mov
jge
mov
pusha
adc
xor
xchg
jg
aaa
or
jnp
dec
or
and
int
adc
nop
(bad)
neg
aaa
sbb
push
mov
push
add
test
jae
daa
lahf
(bad)
not
cmp
dec
loopne
lock
mov
mov
mov
pop
xchg
sti
hlt
push
or
fcomp
add
outs
and
jl
or
ret
or
aaa
js
mov
fld
xor
adc
mov
mov
sti
sub
sub
gs
adc
jbe
sub
adc
cmp
push
out
hlt
xor
adc
push
aam
in
xchg
pop
jp
pop
lea
or
cmp
call
aas
jo
adc
push
cmp
jne
sub
push
mov
push
scas
test
shl
ins
dec
jbe
push
or
cmp
jb
std
jb
xchg
in
lahf
xchg
pop
dec
or
enter
sbb
ja
mov
mov
jmp
mov
sbb
mov
js
scas
or
shr
pop
and
adc
cmp
mov
(bad)
pop
std
jmp
je
cdq
fild
ret
out
repz
jle
sar
shl
mov
add
jmp
(bad)
ficomp
and
cmp
into
mov
aas
cmp
jbe
shl
sbb
stos
enter
xor
cmp
js
jecxz
fadd
push
sub
and
leave
stc
adc
jo
mov
in
or
add
scas
sbb
jp
jnp
sub
sar
push
sti
ds
adc
icebp
sbb
cmp
or
repnz
mov
xor
mov
dec
xchg
outs
adc
cld
adc
pop
test
lock
and
or
in
sbb
pop
retf
loopne
xor
xchg
call
and
or
frstor
add
loopne
mov
or
test
jbe
adc
test
sbb
gs
shr
and
sub
into
(bad)
pop
movs
cli
sub
adc
gs
rol
dec
sar
lods
lahf
xchg
es
mov
dec
dec
cwde
add
and
aaa
sub
sub
jbe
movs
add
outs
push
cmp
sahf
jle
xor
jne
sbb
or
or
mov
or
jp
pop
aaa
lock
ins
cld
icebp
sbb
test
rcl
cmp
jnp
inc
sbb
loope
cmp
and
cmp
jp
(bad)
pop
clc
(bad)
cmp
pop
pusha
mov
sti
in
or
add
cmp
jg
(bad)
lock
or
and
add
(bad)
je
test
sbb
jo
test
lock
mov
sbb
xor
and
and
shl
retf
fcos
fdiv
shl
add
jecxz
stos
fnsave
clc
and
add
xor
pusha
and
dec
push
dec
cmp
mov
inc
add
sbb
js
ret
add
retf
jmp
fistp
fdivr
or
fnstsw
rcl
jmp
cmp
jle
aam
sbb
imul
ret
inc
adc
shr
fild
fisttp
popa
push
out
xor
jmp
pop
jmp
sbb
ret
(bad)
mov
or
rep
call
pop
hlt
nop
push
mov
dec
mov
push
popa
lds
sbb
loop
outs
pusha
pop
rcr
inc
mov
inc
inc
les
jo
arpl
icebp
test
(bad)
jl
cmp
mov
hlt
adc
add
in
je
push
aaa
bound
cld
mov
sbb
enter
inc
imul
jbe
and
sub
adc
push
push
push
jle
ror
scas
(bad)
mov
inc
jmp
jnp
or
sti
mov
add
fisubr
pushf
rol
xchg
jle
jb
jp
mov
jp
out
adc
aad
popf
xchg
mov
sar
add
xchg
leave
sbb
enter
xchg
aad
cmp
push
and
(bad)
pop
(bad)
inc
mov
hlt
jge
js
adc
xchg
inc
adc
push
pop
aaa
ja
add
lahf
inc
cmp
jbe
push
lock
add
aaa
bound
xchg
pop
or
adc
mov
jb
or
cli
ror
(bad)
mov
xchg
dec
test
stos
push
pop
call
push
fidiv
adc
pop
cs
ret
out
test
outs
mov
or
(bad)
jne
or
lock
loopne
dec
cmp
dec
nop
ds
adc
shr
clc
fadd
mov
aam
adc
les
mov
jecxz
and
xor
and
sbb
nop
cmp
mov
sub
push
pushf
and
fist
sub
add
std
cmp
ins
mov
mov
add
fadd
inc
int
fs
ret
or
test
loopne
rol
jge
call
lods
test
iret
pop
enter
or
push
add
jg
cmp
test
icebp
add
ins
pop
dec
mov
adc
mov
cld
push
adc
mov
das
pushf
ds
jbe
ja
sub
mov
popf
jl
add
sbb
adc
les
scas
and
(bad)
pop
loope
es
(bad)
fldenv
call
push
dec
xchg
mov
inc
sbb
mov
sbb
and
call
add
mov
movs
cmp
adc
sbb
or
shl
in
add
pusha
and
cwde
push
mov
ins
test
test
loope
jo
call
mov
add
fs
lea
paddusb
push
pushf
xchg
in
test
mov
cmp
js
sub
push
lahf
cmc
iret
adc
push
movs
sub
cmp
jle
ds
movs
sub
and
sbb
leave
add
and
adc
xchg
and
fcmovnu
cmp
jae
std
in
dec
std
push
push
push
(bad)
xlat
in
inc
test
jno
jnp
(bad)
enter
inc
jns
xlat
pop
std
arpl
inc
outs
mov
cmp
jge
dec
dec
sbb
movs
adc
or
arpl
mov
shl
add
call
test
jl
add
push
(bad)
(bad)
push
loope
sar
and
pop
push
push
add
push
cmp
pushf
es
jbe
inc
iret
pop
mov
(bad)
cmp
loope
movs
pop
fsubr
nop
ffreep
loopne
add
or
rcr
mov
or
(bad)
push
push
push
jnp
add
xor
cmp
jo
push
shl
ja
jb
xchg
sahf
pop
inc
pop
(bad)
and
cmps
add
enter
push
pop
and
add
push
push
push
dec
rol
std
jb
or
les
fdivr
sbb
ret
lods
inc
test
shl
outs
aas
and
retf
add
or
jo
int
add
mov
cmp
js
jo
mov
ror
daa
pusha
fistp
aam
psubusw
in
and
xor
test
test
jl
(bad)
les
xchg
jne
out
mov
push
inc
push
adc
sbb
gs
sub
ret
xor
adc
xor
adc
lahf
cmp
aad
ins
cmp
(bad)
aam
(bad)
loopne
les
cmp
addr16
lods
push
adc
ja
call
(bad)
sahf
inc
hlt
push
cmp
cmp
je
test
jp
int
cmp
jo
sbb
stos
lock
fnstcw
or
push
mov
sar
jo
mov
lods
not
inc
adc
cmp
shl
inc
sbb
dec
aam
jno
or
cmp
iret
or
jle
rol
test
lods
sahf
aam
rol
xchg
hlt
in
int3
scas
or
leave
jo
jecxz
pop
ret
push
cmovl
cmp
aad
add
fiadd
lock
loope
jg
push
xor
leave
add
and
loop
mov
dec
pop
cmp
and
cmp
jg
test
jge
jge
test
daa
jmp
mov
loopne
sub
inc
loopne
jno
mov
iret
mov
jnp
shr
or
aam
movs
mov
xor
and
fs
pusha
jl
fs
jae
loopne
xor
test
retf
add
pop
pop
es
add
out
xchg
xor
add
lock
out
mov
in
add
xor
adc
bound
daa
xchg
popf
sub
jns
pop
gs
push
add
and
xchg
mov
pop
or
retf
push
xchg
fisttp
pop
xchg
add
shl
outs
mov
iret
add
add
push
pop
mov
mov
xor
pop
sub
push
sub
add
into
pop
enter
add
sahf
movs
add
push
xor
in
cmps
jns
add
scas
add
sbb
jno
xor
push
mov
xchg
dec
sbb
inc
xchg
daa
pop
ficomp
jmp
or
mov
push
aad
sbb
movs
or
add
xchg
add
mov
imul
nop
(bad)
and
aad
mov
int3
arpl
into
and
imul
sbb
pop
fwait
retf
aaa
pusha
jno
pop
jne
fidiv
inc
jo
gs
jp
fs
or
not
lods
and
lods
jo
xor
xchg
outs
inc
shl
js
in
xor
lahf
fild
jne
mov
out
iret
adc
mov
or
add
enter
(bad)
push
push
fstp
out
push
xchg
icebp
sub
adc
fisttp
push
xchg
cmp
into
push
add
adc
or
add
pop
add
jecxz
jnp
neg
mov
in
add
add
lods
stos
inc
cmp
in
out
add
and
loope
imul
mov
adc
add
fdivrp
push
arpl
mov
test
jg
popa
rol
popa
arpl
fadd
mov
(bad)
sbb
(bad)
loope
ins
pop
mov
mov
fld
sbb
loope
xchg
in
jnp
stos
sub
and
cmps
test
push
loop
js
sbb
fst
call
arpl
pop
mov
in
popf
leave
call
or
push
inc
xchg
test
add
inc
nop
cld
mov
cdq
lea
sahf
test
stc
push
jg
ud1
inc
mov
retf
add
fldenv
xlat
into
jnp
aaa
sbb
jb
fist
add
sti
or
sub
dec
sbb
cwde
jb
retf
xlat
xor
push
aaa
loopne
jecxz
sbb
cmp
sbb
cmp
or
add
(bad)
scas
out
rol
mov
push
aam
das
adc
cmp
push
inc
jae
data16
fsub
inc
popf
fcom
inc
pop
add
adc
js
(bad)
fldenv
push
cmp
imul
push
in
jge
iret
movs
pusha
add
test
and
inc
inc
imul
ss
or
mov
das
out
fadd
jo
cmp
ss
mov
adc
jno
js
sub
xor
add
xchg
inc
push
bswap
cwde
and
add
fnsave
lea
leave
ret
aas
or
add
mov
xchg
jge
fisttp
cmp
xor
fwait
jbe
adc
xchg
fild
mov
loop
push
adc
push
ds
test
fs
icebp
xchg
ret
nop
push
sbb
push
enter
push
sbb
and
jo
add
or
loop
and
and
jbe
inc
jnp
and
retf
add
out
lea
std
xor
or
shl
pushf
push
sbb
les
pop
sti
ds
jg
mov
jp
movs
sti
mov
inc
leave
sub
(bad)
popa
xor
ret
mov
out
out
jge
cmp
dec
xor
or
inc
sbb
sbb
pusha
enter
or
add
jne
inc
cmp
cwde
lods
aas
or
pop
mov
jg
mov
and
push
cdq
jnp
pop
sub
and
cmp
push
jl
mov
aaa
mov
(bad)
cmc
inc
jmp
mov
xor
sbb
xor
mov
mov
push
push
sub
add
pop
or
es
repnz
add
xchg
xor
(bad)
(bad)
jmp
and
add
cmp
cli
fsubr
not
or
popf
add
jae
xor
aam
mov
mov
fs
inc
cli
push
sub
jo
inc
ja
ret
nop
or
test
enter
inc
cmp
sbb
and
ret
xor
or
pop
mov
inc
jb
or
js
in
xchg
dec
adc
mov
stos
add
mov
and
stos
cmpps
ins
push
mov
call
cs
sbb
les
inc
sbb
mov
into
pop
jns
pop
inc
shl
fnstcw
add
arpl
mov
in
jae
mov
jbe
xor
and
add
in
rcr
add
jp
gs
inc
inc
inc
cwde
add
inc
cli
xchg
add
inc
pop
pop
mov
cmp
mov
popf
test
cmp
add
xor
js
sbb
std
jle
push
xchg
fild
add
push
loop
test
xor
fs
out
cmp
adc
ja
pop
mov
dec
aad
test
xchg
inc
push
dec
dec
pop
adc
pushf
les
rcl
push
sbb
or
popa
icebp
jbe
add
push
std
add
js
retf
cwde
jae
adc
xchg
int
jmp
sahf
es
lods
push
lds
ins
xchg
add
xchg
jge
xchg
mov
fisubr
add
std
addr16
push
cmp
pushf
or
jp
or
dec
ja
add
leave
dec
enter
loop
inc
inc
sbb
xor
xchg
jno
mov
mov
sub
or
xor
xchg
fild
add
mov
jl
jl
call
fild
retf
fld
shl
mov
into
dec
movs
pop
mov
xor
js
adc
jae
adc
leave
push
repnz
and
mov
jne
sahf
shl
jo
shl
mov
in
cmp
pusha
inc
jae
dec
add
mov
es
cmp
mov
mov
adc
cmps
xchg
or
std
cmp
adc
sbb
inc
pop
rcr
pushf
not
ss
fisttp
shl
out
in
push
xchg
add
and
or
xchg
mov
pusha
or
xchg
inc
js
and
add
sbb
shl
ins
add
push
adc
movs
mov
jp
gs
rol
mov
ins
addr16
push
aaa
sub
push
inc
jmp
int
(bad)
leave
mov
pushf
xchg
mov
sub
sar
mov
add
pop
ins
inc
xor
jo
and
sub
mov
mov
xchg
pop
mov
outs
and
lock
ret
test
mov
fsubp
or
mov
mov
xchg
mov
cmp
mov
add
sub
push
stc
jae
adc
push
xchg
(bad)
or
mov
inc
push
ss
and
inc
fwait
retf
dec
mov
sbb
test
dec
jmp
inc
xor
ins
or
popa
push
pop
imul
cwde
push
mov
add
adc
mov
mov
mov
cmp
or
jns
inc
xor
test
add
stc
dec
adc
sub
hlt
icebp
mov
sub
test
inc
push
inc
jge
mov
xchg
fmul
imul
retf
xchg
cmps
sbb
(bad)
ror
xchg
aad
inc
pusha
nop
hlt
test
inc
test
add
cmp
mov
xor
sbb
dec
enter
push
sub
in
cmp
adc
jns
call
mov
pop
push
dec
pushf
ins
mov
dec
jno
sbb
add
cmp
sbb
or
fs
push
aam
loopne
fs
mov
add
jmp
jne
mov
aad
outs
fiadd
or
repnz
lods
cmps
xchg
push
xor
add
jae
pop
(bad)
pop
sbb
mov
mov
jnp
mov
adc
jnp
or
push
in
pop
shl
xchg
aad
(bad)
dec
push
out
mov
fldcw
push
imul
xacquire
les
jns
inc
loopne
(bad)
mov
push
sub
(bad)
lock
pop
xchg
inc
adc
dec
fdivr
mov
int3
call
dec
xchg
or
ror
or
leave
add
dec
pop
fadd
sub
dec
pusha
mov
cmp
or
mov
xchg
test
nop
outs
mov
fstp
cmp
lea
js
or
sbb
gs
pop
rcl
mov
in
dec
mov
xchg
push
and
hlt
lock
lods
mov
je
xor
sti
es
xchg
out
xor
je
ss
ror
or
push
sar
pop
inc
inc
pop
sub
adc
sbb
jl
cmp
mov
dec
push
cmps
cmp
xor
mov
mov
int3
push
in
dec
xchg
pushf
ror
sbb
hlt
movs
pop
inc
call
inc
dec
neg
pusha
or
and
sub
and
or
cdq
pop
cmp
cmps
aam
fs
cmp
dec
repz
mov
or
cmc
pop
pop
icebp
fs
sub
pop
adc
gs
shr
and
push
out
jmp
rol
fadd
fwait
(bad)
adc
test
adc
dec
dec
dec
sti
dec
sub
add
test
xor
pop
inc
push
adc
mov
into
icebp
nop
out
cmp
sub
es
mov
scas
sbb
(bad)
and
and
mov
outs
inc
sub
cs
in
pop
sub
leave
xchg
adc
lock
jo
adc
imul
sar
push
dec
gs
out
test
and
sbb
dec
test
dec
mov
xor
data16
stos
sub
sub
sbb
neg
bound
xchg
rol
jmp
xchg
rcl
adc
cdq
int3
sub
mov
imul
mov
pop
mov
sub
fs
jmp
mov
(bad)
test
add
ss
in
fxch
test
enter
and
leave
popf
call
movs
daa
scas
aas
mov
cwde
xor
mov
movs
aas
mov
mov
icebp
inc
push
push
sbb
push
xor
pop
leave
fld
xchg
shl
int
js
inc
cmp
pop
(bad)
je
mov
fiadd
pusha
sub
pop
sbb
pop
add
pop
fild
push
idiv
into
shl
mov
and
les
mov
cmp
sbb
or
ins
pop
pusha
aad
inc
addr16
ins
xor
ret
lahf
pop
push
adc
popa
int
cmp
and
cmp
pushf
(bad)
mov
nop
sahf
aam
jecxz
popf
stos
jo
fimul
pop
arpl
and
dec
ficom
or
pop
ja
or
les
add
cwde
adc
adc
fs
inc
lods
jmp
xchg
xor
in
dec
leave
adc
rol
jl
rol
frstor
xchg
pop
xchg
dec
enter
gs
(bad)
pop
dec
nop
ret
mov
das
mov
sub
and
shl
sub
and
inc
mov
scas
sub
out
pop
jle
jmp
repz
stos
pop
xchg
dec
add
enter
ret
data16
test
nop
ins
cld
andnps
invd
je
pop
mov
fnstcw
push
xor
sahf
test
xor
dec
push
test
and
inc
icebp
fadd
cmp
addr16
and
shl
jmp
imul
sbb
jg
(bad)
mov
pop
mov
jno
nop
add
xor
nop
out
sub
or
xchg
movs
cli
test
inc
xor
lods
scas
fdivr
ds
mov
xor
rcr
rol
mov
or
adc
movaps
call
inc
mov
in
or
mov
ins
jb
xor
xor
xchg
loopne
inc
sub
leave
fld
mov
pop
add
popa
lds
add
cmp
mov
add
sbb
xor
in
adc
cmps
(bad)
imul
and
mov
ds
std
int
xor
imul
dec
aaa
rcl
in
xchg
or
addr16
data16
push
fiadd
push
sub
xchg
xchg
call
sub
jne
adc
iret
mov
test
push
(bad)
nop
pusha
and
jmp
movs
js
lds
jne
and
out
dec
call
rol
cmovb
lds
mov
xor
shl
add
into
iret
sub
sub
stc
jp
mov
mov
push
fistp
mov
dec
(bad)
dec
mov
and
push
or
jmp
sbb
xor
lea
ins
pop
adc
pop
hlt
pop
rcl
sbb
imul
sbb
xchg
rcr
mov
test
pushf
ror
xor
fwait
jne
ror
add
add
sub
sbb
ins
or
mov
leave
sbb
addr16
jo
scas
aaa
inc
mov
sbb
out
rcl
adc
movs
or
add
outs
imul
add
add
dec
aas
mov
sub
(bad)
out
inc
sbb
pop
shl
xlat
shl
out
es
(bad)
cmp
outs
and
test
div
and
or
mov
jbe
inc
jne
nop
fstp
jg
lods
(bad)
add
shl
iret
jmp
push
mov
popf
xor
in
push
cmp
mov
add
scas
lods
movs
imul
lock
gs
dec
push
daa
cld
cmps
sub
(bad)
xor
fwait
sub
(bad)
leave
test
push
adc
mov
icebp
lods
cmps
mov
movntps
jnp
shl
xchg
sti
sbb
inc
ins
cmp
push
or
arpl
mov
jp
sti
dec
xchg
adc
inc
sbb
xchg
xor
xor
pop
pop
rol
cmc
mov
addr16
nop
sub
int3
mov
lea
leave
out
cmp
in
jbe
shl
add
xchg
inc
lods
xor
clc
loop
(bad)
lahf
xlat
jno
push
xchg
push
test
adc
inc
imul
test
push
inc
pop
dec
jb
into
mov
dec
mul
jae
gs
loope
das
and
dec
aaa
inc
nop
inc
js
pop
pop
fst
pop
xor
emms
ret
enter
adc
popa
add
add
aam
dec
push
pop
sbb
js
lods
std
into
shl
fstp
sbb
mul
adc
mov
das
mov
sub
push
xor
push
add
aaa
jb
loop
js
imul
mov
add
mov
imul
and
push
mov
fadd
ret
push
addr16
mov
and
paddusb
ins
test
inc
neg
jmp
sbb
push
push
call
mov
clc
or
into
iret
inc
mov
jo
test
je
out
mov
jecxz
addr16
in
cmps
adc
mov
out
test
(bad)
dec
shr
mov
jno
add
or
jno
and
jmp
pushf
iret
fs
addr16
sbb
or
cmp
test
dec
inc
outs
push
inc
push
dec
inc
xor
sbb
pop
mov
aaa
pop
xor
inc
dec
sub
jmp
sbb
and
sub
movs
xchg
inc
and
in
push
repnz
out
cli
pop
dec
mov
jge
cmp
pop
nop
jmp
add
je
test
mov
test
es
pop
add
(bad)
mov
pusha
jl
addr16
xchg
add
push
adc
test
movs
(bad)
fadd
enter
push
test
push
xchg
mov
inc
lahf
mov
ret
push
call
aas
add
or
sahf
retf
mov
movs
fwait
ja
repnz
movs
xchg
data16
ret
sub
dec
jp
lods
add
pushf
push
mov
aaa
sbb
pop
cmp
fild
imul
or
daa
les
fbstp
xor
fbstp
sti
dec
mov
mov
ret
sbb
por
aad
mov
cdq
xchg
int
or
test
mov
or
cmp
sbb
rol
pop
loopne
loopne
into
rcr
and
adc
cmp
cmp
push
push
mov
xchg
adc
jne
push
or
pop
or
stos
inc
inc
fs
lds
dec
mov
ja
sar
into
enter
push
inc
sar
and
pusha
jmp
in
sti
retf
rcr
rol
cdq
or
or
not
into
push
push
cmps
and
push
repnz
mov
das
(bad)
imul
jmp
and
jno
or
call
ins
ret
popa
pop
test
sahf
addr16
pop
ss
scas
add
pushw
adc
sahf
push
xlat
dec
jmp
or
xchg
xor
shr
pushf
jo
pop
dec
jp
mov
cmp
outs
mov
inc
jo
mov
cmc
call
dec
jb
pop
cmp
rcr
sub
add
in
pop
int
sti
xlat
loope
mov
dec
pop
adc
push
sub
pop
mov
push
add
aad
or
push
mov
jno
je
cmp
in
xchg
les
mov
sar
or
aad
adc
or
cmp
movs
adc
push
pop
or
jp
nop
inc
pop
jb
mov
imul
loop
and
jge
test
stos
out
jmp
adc
add
sbb
xor
cmc
popf
neg
fiadd
loope
sbb
(bad)
mov
inc
and
lock
mov
adc
pop
mov
xor
nop
in
jb
sahf
ss
jo
rol
cmp
mov
sbb
mov
jnp
pop
pop
daa
scas
mov
dec
dec
cld
mov
cmps
xchg
push
inc
push
add
dec
mov
dec
(bad)
jp
dec
or
scas
pop
sbb
test
push
and
pop
and
dec
cmp
jbe
mov
sbb
inc
xor
inc
sub
ins
push
lock
jno
xchg
in
and
dec
loope
call
adc
sub
and
add
or
adc
or
ret
adc
jbe
push
lea
retf
xchg
mov
in
div
add
adc
cs
in
jl
or
stos
sti
retf
out
mov
loopne
test
hlt
pop
jb
call
stc
aam
movs
add
cmp
inc
xor
and
or
and
inc
jb
jne
dec
dec
enter
int
jmp
lock
imul
sbb
imul
mov
inc
jmp
sahf
stc
aad
inc
xor
rcr
es
add
rcl
dec
mov
in
xchg
dec
in
or
and
xor
je
xchg
fsubr
daa
xchg
and
nop
shr
push
add
int
ret
ins
push
and
or
mov
sbb
add
xor
jmp
es
movs
adc
push
add
dec
enter
inc
jmp
inc
or
hlt
and
mov
add
test
push
test
dec
(bad)
mov
movs
push
mov
or
jns
adc
pop
xor
add
push
repnz
mov
and
in
stos
xchg
push
push
pop
push
lods
pop
push
shl
in
and
and
rol
test
jno
lock
dec
push
push
xor
jne
pop
dec
mov
jg
mov
mov
sbb
das
xor
shl
jo
test
(bad)
addr16
daa
xor
add
adc
icebp
mov
jp
mov
ja
call
dec
adc
and
arpl
xchg
sbb
imul
enter
movs
xchg
pusha
sbb
adc
out
jmp
ins
or
in
mov
dec
push
add
xchg
imul
xchg
call
and
pop
pushf
pusha
retf
adc
test
ret
rcr
or
add
mov
and
cmp
shl
xchg
outs
mul
inc
fldenv
xlat
repnz
stos
addr16
psraw
sti
fcom
jecxz
sbb
jg
outs
push
pop
adc
retf
mov
adc
or
jno
(bad)
les
leave
push
mov
arpl
lahf
mov
cmp
test
xchg
pop
push
fistp
sub
adc
add
or
mov
push
ret
xchg
and
or
aam
add
ror
adc
movs
mov
and
or
scas
mov
sub
sub
xchg
mov
xchg
jmp
(bad)
(bad)
xchg
(bad)
data16
cmp
fptan
test
iret
dec
(bad)
mov
cmp
das
imul
sbb
push
(bad)
or
jns
jmp
cmp
xchg
pushf
shl
xchg
leave
int
test
in
or
jge
enter
pop
outs
fs
(bad)
das
push
and
jmp
or
xor
fistp
sbb
aaa
xchg
mov
jmp
sti
mov
push
call
cmp
adc
pusha
cmc
add
daa
scas
dec
loopne
push
outs
mov
add
and
movs
out
inc
mov
push
pushf
mov
stos
fcom
hlt
sub
stos
scas
sar
fsubr
xchg
cmps
jb
ror
add
mov
xchg
mov
(bad)
cld
and
push
mov
test
add
pusha
stos
outs
add
in
xor
dec
add
xchg
call
das
addr16
das
mov
pop
fisttp
and
pop
jge
iret
or
sbb
push
daa
dec
ret
aaa
push
scas
cli
and
dec
inc
xchg
(bad)
lods
push
mov
fwait
sub
das
mov
cmp
or
jl
inc
sbb
sub
mov
lea
ss
or
sbb
push
push
xor
addr16
jmp
xchg
outs
popf
pop
icebp
les
aas
cmp
(bad)
and
mov
icebp
cdq
push
mov
inc
adc
jle
sbb
sbb
mov
add
lds
xchg
jae
jbe
ror
sub
dec
jo
cld
mov
aam
call
cmp
out
or
outs
div
xchg
mov
aad
or
cwde
and
inc
loopne
lahf
push
xchg
or
or
pop
aam
jo
pop
lods
ret
adc
aad
dec
clc
cmp
shl
mov
sub
das
mov
in
add
rcl
adc
cld
sub
xchg
pop
rol
mov
dec
ins
cmp
addr16
into
dec
int3
or
or
and
rcl
or
mov
mov
xor
push
push
jne
sti
data16
imul
lds
sbb
or
je
add
xchg
and
mov
jp
mov
sbb
jmp
push
fst
add
(bad)
test
iret
dec
adc
pusha
icebp
xchg
and
cmps
inc
lahf
fs
cmp
lods
sub
(bad)
cmp
xchg
sbb
add
mov
fmul
mov
and
or
jmp
or
jmp
ror
add
mov
dec
push
aas
pop
jbe
js
adc
jle
aaa
and
int
mov
dec
jl
out
jae
ret
mov
xor
push
stc
loope
ja
test
jb
inc
xor
test
stc
sub
inc
add
adc
mov
movs
sbb
(bad)
sbb
dec
push
xchg
mul
pop
(bad)
push
sar
outs
pop
test
inc
shl
and
bound
icebp
mov
dec
pop
mov
mov
out
je
mov
jo
jb
adc
aam
sar
dec
in
adc
stmxcsr
js
arpl
mov
in
adc
add
aad
popf
fsub
push
sbb
cwde
fs
sub
sbb
fld
div
adc
push
xchg
mov
or
add
jne
sahf
and
popa
xor
mov
ficom
ins
add
pop
pop
lds
addr16
or
dec
daa
push
jbe
adc
jb
test
inc
mov
ss
push
mov
and
add
das
mov
in
jne
fiadd
loopne
frstor
push
and
aam
les
xor
dec
sub
pop
stos
mov
mov
loop
jmp
xchg
fiadd
and
and
nop
cli
(bad)
push
aaa
rcr
mov
adc
ds
pop
(bad)
dec
dec
sbb
mov
int
cli
xor
push
add
cwde
or
add
and
and
shr
pop
outs
add
ret
pop
icebp
fdecstp
call
arpl
loopne
in
cmp
push
pop
mov
enter
rep
add
test
arpl
and
aam
aam
xor
or
mov
gs
xchg
push
ja
dec
push
inc
leave
ret
adc
jnp
es
inc
add
xchg
cmc
pop
jmp
xlat
and
jno
call
jbe
cmp
xchg
fnstcw
into
lock
aam
das
cmp
add
and
xchg
outs
jae
inc
cmp
scas
aam
dec
daa
lea
push
mov
mov
xor
pop
pop
sbb
inc
stc
mov
and
or
or
add
mov
pop
data16
in
enter
or
ficomp
sbb
cmps
enter
sbb
ror
clc
repz
and
jnp
pop
loopne
add
mov
and
jl
repz
stos
leave
pusha
sbb
adc
mov
gs
call
sub
mov
pushf
std
xor
loopne
pop
dec
xchg
mov
mov
outs
gs
addr16
sbb
hlt
add
mov
dec
sub
sti
ds
mov
aaa
ds
jne
cmp
loopne
push
xchg
lea
cdq
add
or
cmc
in
loopne
rcl
dec
xchg
push
sub
js
retf
xchg
pop
enter
scas
aaa
mov
jnp
cli
sti
jno
outs
call
cmp
shr
push
xchg
push
xchg
xlat
movs
in
repnz
test
or
inc
add
daa
xchg
int
jae
out
and
jmp
cmp
mov
mov
cs
and
and
or
jmp
(bad)
ret
hlt
dec
or
into
mov
and
sbb
sbb
jno
in
leave
and
mov
retf
jp
out
xlat
lods
xlat
add
call
fcom
adc
push
mov
ss
sbb
push
pop
and
push
and
inc
cmp
ss
mov
shr
(bad)
and
addr16
popf
out
shl
enter
mov
rep
fdivr
xor
loope
aaa
inc
jl
cmp
mov
xchg
fmul
and
stos
xchg
fdivr
ins
ret
mov
sbb
dec
in
out
fs
inc
lea
lods
push
sahf
jno
inc
inc
inc
dec
and
stc
add
cmp
inc
call
xchg
aam
fisttp
inc
fild
in
test
cs
lock
add
mov
sub
xchg
jns
push
pop
jno
cdq
stos
ja
fild
inc
xor
leave
xlat
jmp
jl
es
mov
js
or
nop
dec
inc
in
jno
cmp
cmp
(bad)
scas
mov
(bad)
pusha
inc
hlt
add
fs
scas
gs
ss
add
repnz
movs
cwde
sub
sub
dec
cdq
(bad)
jecxz
mov
xlat
jmp
sub
cmps
aad
or
push
in
mov
xor
push
fs
push
or
xchg
sbb
aaa
pop
and
dec
push
mov
inc
sbb
dec
or
pop
inc
pop
or
xor
push
jg
inc
dec
pop
rol
sub
cmp
inc
xor
test
ret
inc
jb
xchg
adc
fwait
jne
pop
adc
or
je
pop
xor
adc
push
or
or
pop
inc
pop
push
pop
dec
or
sub
sbb
mov
or
pop
add
fnstsw
fisttp
add
add
jl
dec
add
sbb
add
or
aam
test
and
adc
sbb
ja
mov
jns
xchg
lods
push
or
ror
push
cmps
mov
imul
loope
test
icebp
js
inc
push
xchg
repz
scas
pop
les
push
pushf
nop
movs
icebp
pop
and
sahf
jmp
dec
ret
add
cmc
mov
call
int
xchg
icebp
cmp
or
push
xor
mov
xchg
imul
test
sub
add
mov
ins
or
jp
mov
fsub
pusha
ret
mov
pushf
aaa
push
daa
in
sbb
stc
sub
out
imul
pop
xchg
inc
jo
fdivr
retf
je
ror
fld
or
mov
rcr
pop
adc
test
dec
imul
or
(bad)
jae
mov
or
in
cli
inc
adc
ret
nop
mov
or
cmps
cdq
test
xor
add
xchg
retf
ror
jle
and
and
loope
hlt
in
push
(bad)
or
xchg
aam
(bad)
fsub
push
pop
(bad)
push
lods
aas
mov
xchg
aam
sbb
lea
or
pop
jp
pmulhuw
aam
pusha
add
shl
retf
mov
xlat
jmp
mov
mov
mov
inc
pop
test
pop
push
nop
xchg
pop
out
ss
dec
int
fimul
shl
xchg
xor
stos
push
pop
cmps
ficomp
mov
or
lods
iret
cmp
jo
mov
sar
xor
push
mov
add
and
ds
fld
dec
push
ret
nop
xchg
mov
(bad)
push
jge
pop
sbb
push
sub
pushf
rcr
outs
inc
adc
hlt
jno
adc
rol
adc
gs
sub
cmp
adc
pop
mov
add
or
cmp
call
xor
dec
mov
scas
rcr
cmc
push
mov
test
int
dec
scas
in
mov
mov
add
out
and
popa
in
nop
out
dec
ss
lods
imul
adc
sub
sub
sbb
ficomp
xor
addr16
movs
cs
sub
ret
dec
and
imul
push
unpckhps
sbb
(bad)
sub
jo
fidiv
je
pop
pop
sub
inc
dec
enter
aas
adc
mov
xchg
sub
mov
jns
enter
ret
stc
xor
inc
int
dec
mov
pop
dec
push
es
shl
test
ds
je
sub
daa
dec
les
push
jne
pop
sar
adc
inc
pop
add
push
sub
fcmovbe
jmp
mov
pop
cmc
cs
lock
mov
cmp
mov
or
or
and
and
in
(bad)
outs
push
imul
and
arpl
ficom
lahf
dec
jae
int3
cli
jbe
leave
repnz
pushf
(bad)
sti
xchg
mov
pop
mov
add
push
nop
sbb
sbb
cld
sbb
dec
sub
pop
mov
pop
mov
sub
outs
iret
test
mov
data16
and
leave
loopne
out
test
pop
or
call
dec
cmp
push
rol
jmp
cld
sub
mov
pop
add
test
xchg
es
xchg
mov
push
jmp
or
add
sub
dec
cvttps2pi
push
add
jmp
shr
loope
mov
xor
ret
rcr
push
mov
mov
xchg
loopne
xchg
stos
sub
mov
xchg
retf
dec
mov
inc
(bad)
or
js
add
enter
cmp
sbb
repnz
icebp
push
add
adc
sahf
push
jns
popa
push
xchg
test
stos
inc
add
push
or
mov
and
cs
add
xor
popf
nop
retf
jno
aaa
cli
sub
and
adc
mov
cli
sub
les
adc
push
in
mov
pop
div
adc
inc
mov
test
shr
jae
xor
mov
sub
in
mov
mul
addr16
xchg
icebp
shl
call
adc
scas
pushf
xchg
into
frstor
or
icebp
aam
(bad)
pushf
in
mov
test
daa
jne
inc
in
push
jnp
pusha
mov
mov
leave
sub
mov
sbb
adc
mov
pop
dec
(bad)
cmc
jmp
and
push
shl
ds
test
cmp
adc
add
inc
je
mov
mov
je
dec
dec
sub
retf
std
sbb
in
inc
mov
mov
stos
in
pop
inc
out
mov
imul
jne
outs
ret
add
hlt
xor
ds
or
in
(bad)
xchg
inc
or
or
mov
mov
adc
aas
aam
and
mov
add
adc
jo
xor
push
or
gs
jp
cmp
test
mov
dec
addr16
xor
dec
sub
jle
or
and
pop
inc
sbb
es
mov
jle
lock
cmp
push
jge
ds
xor
inc
sbb
mov
ficomp
mov
test
call
jmp
jne
test
or
inc
inc
cmp
dec
push
cmps
mov
ja
dec
push
sub
dec
sbb
jmp
and
xchg
std
dec
add
mul
je
lods
lods
ins
adc
jb
fsub
lock
fwait
inc
dec
sub
xchg
xor
adc
pop
icebp
leave
lods
loopne
jmp
test
xor
and
fsub
iret
xchg
inc
out
push
cmp
sbb
popa
cmp
aad
scas
loop
xlat
cmc
mov
call
loope
nop
call
or
push
mov
jmp
mov
icebp
push
sub
imul
lahf
std
mov
or
addr16
xchg
or
sub
hlt
sbb
and
jb
retf
cdq
and
mov
sbb
cmp
xor
jns
xor
fcom
dec
das
dec
jbe
sub
gs
enter
xor
sub
faddp
inc
stos
sbb
pop
mov
sbb
jl
lahf
mov
stos
aaa
xchg
add
or
bound
scas
push
ja
ror
jns
call
pushf
cld
pusha
xchg
adc
leave
and
retf
adc
das
in
inc
sub
jl
imul
adc
mov
lods
out
movs
in
mov
ins
je
or
sub
sbb
rcl
xchg
mov
sub
icebp
div
and
loopne
sbb
(bad)
into
and
les
add
outs
mov
dec
aas
or
pop
data16
add
call
sub
xchg
push
or
mov
add
cmps
cdq
(bad)
cmp
gs
ror
or
and
xor
sbb
jbe
cmp
ss
or
rol
sbb
and
or
(bad)
sbb
or
or
and
in
mov
cmp
clc
icebp
loopne
push
dec
cmp
cmc
sbb
mov
in
sbb
add
into
loop
fwait
push
pusha
mov
jecxz
in
(bad)
lahf
fs
sahf
mov
es
or
daa
cmp
rcl
(bad)
aaa
imul
test
push
jae
xchg
pop
int3
and
nop
push
mov
sub
push
repnz
xor
push
xchg
add
js
cli
int3
xchg
cwde
pushf
push
(bad)
adc
retf
outs
(bad)
push
xchg
pop
jge
jb
aas
mov
cmp
adc
dec
push
mov
xchg
js
xchg
sub
iret
sub
jle
xchg
pop
inc
push
add
jl
pop
inc
add
cmps
fsub
ss
xor
cwde
pop
dec
push
scas
out
mov
sbb
icebp
retf
dec
das
adc
and
cmp
mov
add
aad
xor
pop
repnz
adc
cmp
or
adc
mov
outs
mul
rcl
(bad)
test
push
xor
and
or
movs
pop
jge
nop
add
pop
push
test
adc
add
addr16
sub
(bad)
aas
inc
cmps
icebp
inc
mov
cmc
sbb
(bad)
ss
xchg
xor
repnz
adc
xor
jns
adc
sub
mov
and
cmp
cld
xchg
das
sbb
inc
loopne
cmovae
pop
xor
stos
sbb
popa
dec
pop
xchg
in
js
jl
icebp
bound
inc
push
les
shl
mov
and
int
sub
adc
aas
clc
shl
adc
or
push
ficom
or
pop
cmp
add
push
and
sbb
nop
cmovb
and
pop
add
push
push
pusha
add
mov
inc
inc
enter
aas
and
sbb
dec
jo
sbb
sar
adc
inc
sub
jg
(bad)
rcl
cmc
inc
lock
and
push
fcomp
les
ret
call
mov
sub
xchg
call
or
sar
mov
inc
out
xchg
rcr
xchg
cmp
xchg
sbb
sub
loop
mov
push
fsub
add
push
data16
mov
lods
in
mov
outs
lahf
pop
ret
std
movs
and
sbb
and
or
adc
sub
dec
push
push
daa
ins
movs
pop
ret
mov
mov
xor
ins
dec
pop
mov
aad
jns
inc
pushf
mov
clc
adc
das
push
or
mov
inc
sbb
inc
xor
test
add
sbb
add
or
nop
xchg
ds
jp
xchg
mov
test
push
ror
add
xchg
push
cmps
and
mov
and
adc
aad
and
aad
sub
push
test
sbb
sysenter
push
add
dec
leave
push
jb
or
push
or
retf
and
xor
arpl
fsincos
ror
pop
mov
push
xchg
mov
loope
mov
stos
shr
cld
fcomp
(bad)
and
pop
jmp
xchg
sub
push
imul
dec
xchg
push
in
pop
xor
(bad)
dec
scas
add
cmps
jns
enter
icebp
pop
xor
ins
fld
push
and
hlt
push
xor
sub
cmps
ins
and
and
mov
and
pop
mov
xor
jmp
pop
icebp
push
arpl
xor
xchg
les
loopne
js
loop
out
les
popa
repnz
or
inc
mov
xchg
aad
test
dec
cmp
push
(bad)
sahf
xchg
xchg
es
xchg
and
pop
jle
fld
arpl
fidiv
ret
into
mov
mov
aaa
jmp
adc
jp
cwde
in
bnd
ins
sbb
out
sub
jo
mov
int
mov
int
sub
shl
(bad)
ja
push
jb
pop
pop
lods
repnz
push
mov
call
outs
xor
ss
jecxz
push
xchg
mov
into
add
mov
push
leave
add
inc
pop
mov
mov
add
pop
push
shl
aas
cmc
push
mov
pushf
fnstcw
das
leave
or
enter
ins
(bad)
nop
fmul
mov
mov
leave
jmp
add
call
xchg
jbe
stos
and
cmp
and
dec
add
in
xor
aad
cmp
mov
addr16
mov
gs
and
mov
hlt
xor
sub
fild
cmps
push
push
jns
pop
aas
mov
pusha
pop
sbb
pop
dec
(bad)
pop
in
cvtdq2ps
and
jmp
mov
rdpmc
jge
or
popa
call
and
test
push
and
cmp
and
int3
leave
mov
push
and
and
arpl
pop
cmp
lods
aas
pushf
aad
ret
jo
mov
fst
cmp
lock
mov
fcmovne
(bad)
ins
or
sbb
jo
jnp
gs
(bad)
mov
stc
sub
pop
pop
test
push
ret
jns
outs
sub
jbe
loope
lods
xchg
cmps
adc
das
pop
mov
mov
push
clc
nop
jmp
fstp
adc
clc
inc
(bad)
sti
stos
fisttp
nop
popf
repz
imul
aam
loope
pop
imul
daa
mov
mov
sbb
fild
inc
jbe
int3
pushf
(bad)
call
out
push
dec
out
out
push
(bad)
(bad)
(bad)
out
add
jb
push
mov
aaa
push
add
cmp
lds
imul
ins
stos
mov
jo
mov
sbb
imul
push
outs
iret
lahf
cmp
mov
xor
addr16
sbb
add
or
sti
adc
hlt
iret
dec
xor
iret
js
cmp
(bad)
out
fbstp
ins
fdivr
jbe
jmp
jns
inc
mov
push
add
pop
not
loope
lods
scas
stos
movs
push
or
(bad)
mov
test
add
addr16
and
dec
push
push
mov
fild
arpl
test
push
(bad)
addr16
push
cmp
out
dec
imul
repnz
or
outs
or
xor
jle
or
adc
xor
mov
aaa
push
mov
mov
add
outs
adc
cwde
(bad)
out
xor
push
mov
ret
ss
sti
mov
mov
push
test
mov
(bad)
fistp
dec
int
adc
out
js
stos
pop
cs
test
inc
pop
dec
stos
cld
scas
imul
cwde
and
dec
inc
sbb
ror
div
out
cld
pop
outs
xchg
inc
mov
movs
movs
into
(bad)
popf
sti
call
cwde
call
or
out
adc
xchg
add
mov
fucomp
mov
fdiv
mov
push
inc
imul
popa
mov
fadd
xchg
out
pop
push
fnsave
cmp
int3
push
push
push
in
fwait
in
ins
mov
jmp
ret
fild
sub
fdivr
retf
xor
js
xchg
push
out
or
lds
fisttp
addr16
mov
xchg
ss
dec
adc
and
xchg
aas
or
sbb
fnstsw
push
repz
shl
jno
pop
jnp
or
pop
lock
pop
rcl
push
stc
pop
or
fst
sub
arpl
mov
(bad)
mov
push
or
xchg
pop
mov
jle
inc
add
push
xor
jbe
mov
push
xor
push
adc
ss
xchg
mov
push
push
ins
stc
mov
inc
je
push
mov
mov
push
pshufw
lods
inc
movzx
or
and
repz
aas
push
xor
jae
aaa
arpl
inc
fmul
lds
ja
sub
mov
push
out
outs
fwait
dec
or
add
jge
jge
sub
sub
ja
mov
push
xlat
sub
out
cmp
mov
xor
fs
mov
push
retf
sub
adc
clts
push
xor
iret
xlat
sub
xor
jne
cmp
sub
xchg
test
sbb
pop
cmp
dec
adc
and
push
xchg
fsub
sbb
cli
jns
and
ret
mov
jecxz
sub
jge
xor
xor
adc
cmps
cmp
inc
test
outs
aas
fisttp
test
mov
jl
imul
int
(bad)
add
sbb
or
sub
mov
arpl
or
cmp
mov
shl
dec
fild
adc
ss
cdq
add
sbb
test
mov
data16
mov
mov
loopne
pop
sbb
pop
ins
add
inc
arpl
pop
pusha
gs
arpl
cld
std
mov
pop
test
mov
push
mov
fistp
cmc
xor
sti
ret
idiv
imul
imul
shl
jne
adc
dec
ja
jae
daa
jge
stos
adc
cwde
call
imul
sub
push
fisttp
cli
ret
neg
imul
sub
int
jecxz
fidivr
shl
xchg
adc
dec
in
mov
fwait
and
out
sub
imul
xor
je
ret
sbb
(bad)
and
fimul
mov
and
mov
movs
mov
push
(bad)
adc
pop
push
les
ja
das
jbe
or
adc
pop
stc
(bad)
hlt
ss
cwde
xchg
call
in
psrld
push
pop
adc
movs
mov
sbb
fnstsw
push
cmp
push
scas
test
or
pusha
jo
adc
scas
push
mov
push
xor
scas
aaa
std
arpl
mov
lods
mov
stos
jb
ins
sbb
mov
retf
movs
inc
pop
fild
aad
pusha
in
push
pop
mov
cwde
out
mov
dec
mov
mov
sbb
fwait
dec
jno
out
ja
pop
add
fdivr
sbb
sub
pop
or
xchg
clc
push
cmp
mov
sub
adc
sbb
retf
dec
call
push
push
outs
retf
addr16
mov
and
leave
and
movs
sar
int
sub
xchg
ror
add
push
mov
std
(bad)
sar
push
scas
loop
mov
xlat
loopne
sti
push
int3
sbb
dec
sub
inc
jmp
adc
pop
adc
in
push
sub
lea
add
movs
stc
push
fistp
lahf
shr
mov
mov
iret
pop
popf
in
cli
test
in
clc
jl
fld
or
xchg
or
jge
movs
mov
dec
ins
or
mov
fdivr
ins
push
sbb
xor
arpl
mov
add
arpl
push
ds
xchg
xchg
mov
mov
fdiv
adc
push
jge
add
aaa
push
ins
cmp
popf
stc
out
or
fisttp
pop
jbe
push
push
loop
test
retf
outs
xor
mov
pop
les
lahf
add
sub
push
mov
or
and
fimul
arpl
sar
fxch
les
cmp
ja
imul
add
adc
xor
pushf
stos
enter
cmp
and
inc
mov
(bad)
stc
xchg
and
push
ins
dec
outs
pop
daa
(bad)
stos
xchg
repz
and
xor
(bad)
pop
mov
xchg
ret
stc
std
loop
mov
sub
jg
cmp
or
div
push
fcmovb
mov
cmps
mov
mov
ins
xlat
aad
call
xchg
cs
nop
xchg
or
xor
in
jb
jnp
or
icebp
cmp
push
mov
mov
xchg
repnz
push
neg
imul
(bad)
mov
xchg
sbb
cwde
arpl
cwde
xchg
rcr
cld
neg
or
sbb
jle
fsubr
mov
fst
xchg
adc
mov
mov
push
ffree
(bad)
out
ja
jle
out
fnsave
and
das
cmp
inc
mov
rcr
outs
xchg
cwde
scas
or
push
arpl
mov
pop
pop
jge
(bad)
mov
push
fsubr
jno
sbb
jle
fcomp
outs
xor
clc
dec
xchg
mov
nop
fsubr
out
sbb
push
ins
div
jae
clc
scas
and
push
jle
stc
inc
push
cmp
out
xor
jle
stc
sub
hlt
push
hlt
stos
retf
clc
retf
jno
scas
outs
or
mov
dec
or
mov
bnd
rol
call
sub
mov
mov
push
or
mov
ja
retf
pop
data16
aam
pop
jmp
imul
cdq
ret
mov
push
pusha
and
sub
repnz
fwait
push
in
dec
out
dec
mov
gs
jo
or
and
arpl
pop
loopne
popf
inc
test
fstp
aaa
je
outs
jecxz
adc
mov
sahf
mov
mov
push
jg
inc
(bad)
and
add
and
sbb
jne
mov
lds
dec
mov
rcl
pop
out
(bad)
outs
xor
xchg
xchg
enter
mov
or
or
nop
add
int
popa
fwait
aaa
ss
sahf
mov
mov
and
add
fstp
ja
pop
out
js
jae
aaa
sar
sbb
cs
xchg
scas
outs
ins
cmp
mov
or
mov
repnz
aam
stos
sbb
mov
add
call
mov
repnz
push
xchg
push
loope
ret
icebp
jno
and
cmp
out
pop
pusha
outs
stos
push
(bad)
jg
mov
pop
dec
ja
and
loopne
adc
cmp
fld
and
mov
aam
sub
sbb
pop
or
cmp
push
rol
(bad)
(bad)
and
test
adc
data16
(bad)
les
fstp
pop
adc
idiv
es
mov
mov
jb
fild
add
call
outs
das
fstp
(bad)
js
mov
mov
cdq
or
out
or
in
jae
mov
int
(bad)
cmp
pusha
lods
and
xchg
sbb
push
xchg
lahf
(bad)
imul
xor
push
and
sub
sar
or
push
cwde
(bad)
stos
xchg
adc
rcr
loopne
or
out
cmps
gs
(bad)
mov
mov
hlt
mov
popa
xlat
(bad)
aad
fistp
fst
mov
popf
push
(bad)
(bad)
test
test
in
scas
push
cmp
cmc
mov
jo
adc
data16
lods
repnz
pusha
das
iret
xchg
jnp
xchg
sub
ins
xor
mov
mov
cs
out
sbb
rol
cwde
mov
xor
push
xor
fnsave
addr16
outs
adc
imul
popa
and
adc
adc
sbb
test
sbb
fstp
jae
push
ss
push
mov
adc
test
mov
pop
jae
jb
not
imul
mov
cmp
adc
pop
mov
ins
or
(bad)
push
call
nop
pusha
jae
pop
cs
adc
out
add
arpl
fldcw
adc
xor
jo
ror
lock
adc
sbb
mov
pop
and
push
add
pop
dec
jae
dec
or
scas
cwde
lahf
adc
push
cmp
into
jo
dec
or
sub
sbb
add
call
push
leave
push
mov
and
pop
mov
pop
jmp
aaa
mov
pop
jae
mov
test
or
test
adc
repnz
xor
mov
fldcw
cmp
xor
sub
stc
add
jge
mov
jno
cdq
or
push
pop
addr16
pop
test
adc
sub
ins
aas
sub
lea
dec
pop
ins
je
push
das
and
sti
jnp
push
nop
pop
test
xchg
int
jmp
xchg
clc
pop
jbe
addps
xchg
cmp
lock
mov
addr16
mov
jbe
and
push
call
pusha
pushf
mov
pop
cli
mov
scas
ins
add
(bad)
dec
retf
fistp
push
jmp
mov
pop
dec
add
add
xchg
cmp
jle
movs
xor
cld
adc
fucomi
(bad)
cwde
or
(bad)
mov
mov
out
repnz
sub
or
fisttp
inc
in
inc
sub
(bad)
neg
jbe
arpl
cmp
mov
dec
stc
jno
pop
fisttp
and
adc
mov
leave
push
push
mov
pusha
pusha
and
push
repnz
add
fwait
xor
gs
iret
jo
mul
xor
xchg
fst
mov
sub
sbb
sub
(bad)
fistp
add
aas
inc
lock
ror
jne
jnp
sti
daa
dec
mov
mov
jne
sbb
hlt
sub
or
cmp
lds
or
cmc
jae
mov
sbb
mov
stc
and
retf
js
shl
fiadd
ja
xor
adc
xchg
push
sbb
pop
mov
(bad)
cmp
nop
or
stos
rol
aaa
or
lea
and
mov
or
pusha
leave
aam
mov
sbb
sbb
mov
push
dec
pop
data16
cwde
jns
sbb
dec
inc
xchg
mul
clc
popf
adc
fwait
pushf
movups
(bad)
imul
jno
xchg
in
sub
jle
out
dec
jge
shr
arpl
hlt
jg
stc
jge
and
jle
aam
ret
dec
adc
mov
mov
push
sub
outs
mov
dec
movs
out
and
xchg
ud1
(bad)
adc
sub
xchg
rcl
mov
outs
inc
ret
dec
lods
icebp
mov
pop
push
jbe
pop
out
mov
sbb
xchg
push
and
adc
dec
add
sub
stos
or
and
push
mov
cli
add
xchg
sbb
leave
inc
mov
shl
or
mov
fstp
mov
jne
ret
popf
xchg
ret
ss
iret
lahf
sub
push
push
push
setno
xchg
xlat
rcl
pop
mov
stos
xor
cdq
mov
ds
jmp
sar
push
ret
addr16
mov
dec
sub
les
scas
js
mov
mov
movs
fs
fiadd
test
cmp
cmp
xor
cmp
cmp
mov
pushf
mov
xor
retf
xchg
adc
fisubr
jae
mov
mov
test
jbe
sub
push
cmp
cmp
cmp
or
xchg
ins
sub
xor
push
push
jbe
mov
pop
xor
push
inc
fadd
or
or
adc
pop
add
mov
mul
fwait
pop
dec
mov
dec
jmp
in
(bad)
ret
pop
pushf
ret
xchg
xchg
into
jo
mov
fwait
cmp
xchg
push
cmp
pop
sar
(bad)
mov
(bad)
in
imul
cmp
xchg
pop
mov
fadd
inc
push
cmp
dec
call
retf
xchg
jae
lods
rcr
adc
lods
mov
(bad)
ins
pop
push
xchg
out
and
cmp
cmp
(bad)
xlat
add
sbb
ins
hlt
jl
xor
inc
cmp
stc
push
fnstsw
xchg
cmp
mov
or
push
popf
xchg
lock
int
and
push
lods
pop
or
mov
ret
stc
lods
adc
jecxz
pushf
jo
mov
push
jbe
mov
ret
pop
clc
pop
mov
mov
and
test
(bad)
(bad)
sbb
adc
retf
push
mov
shl
mov
nop
jne
pop
inc
add
daa
ss
ret
push
dec
pop
add
add
mov
jmp
pop
mov
inc
aas
loopne
in
adc
sub
add
cmp
jge
xchg
jl
cwde
pop
push
out
imul
cwde
adc
pop
ins
(bad)
jle
or
in
(bad)
outs
ins
fucomi
test
push
(bad)
xchg
lea
mov
(bad)
out
dec
test
dec
adc
mov
into
mov
push
add
xor
mov
cmp
jbe
xchg
ins
mov
fdivr
jno
and
(bad)
or
nop
and
ss
sub
mov
icebp
stc
(bad)
jg
sbb
aas
jnp
mov
push
test
add
sub
pushf
mov
adc
je
sub
cwde
call
cwde
js
adc
out
outs
push
rcl
and
in
fiadd
pavgw
mov
inc
xlat
frstor
test
or
mov
xor
push
mov
and
ins
inc
cmp
push
mov
sub
dec
call
imul
add
rep
push
push
push
adc
mov
jo
and
cmc
aam
ffree
mov
mov
fwait
xchg
ins
xchg
outs
pop
and
fwait
inc
fnstsw
or
fdivr
aaa
aam
pop
and
mov
or
scas
(bad)
clc
mov
pop
pusha
mul
shr
cmp
aaa
jp
or
jp
xor
scas
mul
call
fiadd
dec
push
add
xchg
adc
push
pop
ss
mov
and
retf
mov
arpl
leave
add
fwait
inc
push
leave
push
or
pop
jp
push
aam
push
pop
int
sub
sub
inc
arpl
push
std
dec
push
ret
adc
ffreep
ret
dec
xchg
arpl
fld
rcl
push
mov
test
inc
outs
xor
dec
or
sub
xor
fst
aam
mov
jge
je
xor
cmp
test
fcmovnbe
test
inc
push
sbb
pop
push
pop
jge
sbb
rcl
lods
mov
adc
pop
dec
sub
stc
sub
fwait
aad
push
and
dec
dec
or
das
sbb
mov
add
adc
sub
sub
mov
push
inc
jbe
call
imul
jg
push
push
cmps
outs
rcr
cmp
arpl
test
pusha
sbb
cmp
repz
inc
data16
xlat
test
or
pusha
or
mov
push
pop
pusha
add
xlat
test
jp
or
in
mov
and
mov
or
or
iret
out
cdq
add
dec
lea
ds
sub
mov
cmps
mov
test
enter
outs
mov
mov
cmp
inc
and
fwait
cmc
adc
ins
xchg
cmp
sbb
mov
xchg
sub
sub
lods
mov
inc
adc
cmp
inc
test
test
lds
fdivr
add
in
xchg
out
push
dec
push
and
sbb
adc
xor
mov
shl
mov
ds
ja
(bad)
cmps
pop
cli
(bad)
jecxz
inc
(bad)
adc
jg
fldenv
jmp
push
pop
cmp
hlt
xlat
adc
rol
test
(bad)
or
leave
mov
pushf
jmp
jle
sub
fisub
xor
iret
and
mov
jle
inc
pop
subps
add
dec
arpl
cs
mov
adc
jae
mov
mov
push
fidivr
jo
xchg
jae
mov
push
out
xor
in
ins
push
adc
test
sbb
out
mov
jmp
sbb
cmc
test
push
test
scas
ja
push
cmps
inc
fisttp
xchg
cld
ss
loopne
sar
lahf
dec
adc
mov
xchg
inc
mov
xor
add
call
repnz
xor
mov
test
out
xor
push
mov
mov
(bad)
push
jle
mov
push
lods
test
pop
mov
push
pop
push
jae
mov
inc
xlat
mov
add
gs
sbb
cmp
fild
aam
add
pop
sbb
inc
sbb
mov
daa
out
daa
push
aas
ret
movs
shr
outs
cdq
push
fnstcw
mov
push
sub
imul
jle
add
jno
sbb
fcom
mov
push
push
inc
xor
fdiv
mov
dec
inc
xor
vphaddbd
add
push
mov
mov
scas
and
das
add
out
and
or
js
jmp
push
mov
push
pop
sar
xchg
fisttp
sub
pusha
test
and
add
mov
cli
and
push
imul
xchg
ret
jge
jl
outs
xchg
lahf
call
adc
xchg
ret
mov
mov
and
std
jmp
push
jo
cmp
repz
pop
ret
sar
push
mov
inc
out
xchg
inc
(bad)
cli
out
mov
jo
pop
add
mov
mov
fisttp
push
cmp
jg
mov
mov
fsub
stos
shl
addr16
fdiv
inc
pop
and
aam
jo
movs
(bad)
sub
pop
push
repz
pop
xor
je
jne
ds
out
xchg
xchg
dec
cmp
clc
dec
clc
in
and
mov
or
add
jnp
outs
cmps
inc
xor
xchg
ss
icebp
mov
gs
dec
add
loop
ins
fcmovnb
in
jb
pop
sub
addr16
lahf
mov
and
out
(bad)
or
adc
dec
xchg
das
fucomi
pop
ins
sub
test
hlt
mov
xor
test
adc
js
pop
aam
dec
xchg
sbb
adc
out
add
imul
scas
mov
and
add
pusha
dec
inc
mov
clc
(bad)
stos
inc
stos
or
movs
and
pop
cmp
inc
test
mov
bound
cwde
cmp
xchg
cs
jbe
or
dec
sbb
add
xor
cmp
push
ret
xor
cwde
fstp
or
rcl
mov
out
add
bound
scas
dec
paddusb
(bad)
aas
mov
xor
sbb
stos
pop
stos
sub
pusha
mov
add
daa
jg
loopne
call
mov
pop
lahf
xchg
jb
das
pop
jns
mov
sbb
int3
ficom
pshufw
(bad)
fidiv
mov
enter
push
pop
pop
add
sbb
add
dec
pop
jns
mov
fadd
movs
mov
jp
xchg
mov
je
jnp
mov
mov
sub
icebp
outs
mov
in
mov
adc
outs
push
call
and
add
in
mov
sub
sub
fnsave
stc
jbe
mov
shl
push
or
call
iret
mov
inc
xchg
mov
sbb
or
pop
fs
pop
or
adc
cmp
mov
add
(bad)
jecxz
sbb
pop
cmp
popfw
push
inc
js
in
mov
or
add
in
push
mov
mov
xchg
call
shr
mov
xchg
(bad)
xor
das
shl
and
repnz
cld
mov
mov
mov
xchg
outs
xor
inc
mov
aam
and
jae
fdivr
daa
(bad)
lea
push
dec
gs
cwde
ffree
and
mov
inc
mov
pop
mov
mov
or
fild
sbb
retf
mov
call
push
push
mov
out
aaa
xor
mov
call
xor
sub
and
retf
fimul
mov
add
cli
inc
movs
adc
(bad)
fist
fiadd
inc
adc
inc
test
addr16
shr
cld
inc
daa
das
adc
gs
mov
stos
inc
inc
stos
and
(bad)
fbstp
and
test
addr16
push
dec
es
mov
jb
cld
add
int
xchg
mov
mov
adc
mov
and
test
(bad)
jbe
gs
cwde
add
inc
ins
pop
jno
shl
push
push
add
lods
cwde
or
lea
sbb
sahf
sar
fiadd
movs
sbb
and
mov
sbb
shl
scas
hlt
add
scas
inc
add
icebp
push
hlt
hlt
fdivr
(bad)
push
and
mov
add
ja
jns
push
in
mov
adc
test
mov
pop
jo
aam
push
ficom
jns
jo
fist
jbe
(bad)
mov
adc
test
cmp
jg
add
cdq
ret
cmps
cmp
(bad)
and
cmps
fild
sbb
or
arpl
(bad)
push
cmp
xchg
cmp
jg
arpl
jns
fisttp
and
bound
jmp
and
pop
xchg
add
mov
call
cmp
add
mov
mov
xor
or
push
repnz
sbb
scas
outs
adc
push
ins
call
push
into
add
enter
popf
and
sub
fmul
cmp
test
not
mov
add
mov
stos
inc
imul
xchg
jp
(bad)
imul
pop
pop
retf
aaa
inc
out
cmp
stos
neg
idiv
mov
sub
adc
cs
mov
inc
outs
add
ficomp
xor
jge
inc
add
pushf
push
vsqrtsd
xchg
push
jne
(bad)
cwde
outs
mov
or
sub
xchg
dec
jb
xlat
or
icebp
pop
adc
fsub
xor
and
dec
mov
je
and
ret
xchg
xor
std
pop
add
sub
push
and
aam
out
jo
cli
pop
dec
mov
or
(bad)
dec
pusha
mov
or
jmp
fld
inc
inc
loopne
fistp
hlt
dec
test
mov
dec
(bad)
adc
gs
jb
daa
pop
and
or
pop
and
xchg
mov
fdivr
cli
dec
sti
outs
lock
add
mov
push
icebp
(bad)
icebp
shl
aaa
aas
rcr
ins
jns
and
mov
ret
push
mov
xor
sub
test
and
sub
sbb
add
popa
outs
(bad)
push
xchg
sub
shl
pop
in
push
cmp
out
sub
scas
test
retf
out
pop
pusha
sbb
xor
(bad)
xor
or
loopne
jbe
xchg
xor
or
dec
mov
outs
or
(bad)
cmp
aaa
and
pop
push
jno
inc
mov
mov
repz
sbb
sub
fbld
lods
cmp
out
cmp
adc
jecxz
test
mov
and
addr16
movs
test
mov
xchg
lods
pushf
pop
add
push
cdq
dec
lea
or
push
jecxz
mov
jmp
fwait
adc
stc
out
push
jns
fs
xchg
and
push
cmp
jl
cmp
xchg
int3
pop
leave
adc
inc
movs
dec
mov
hlt
test
lahf
mov
stos
adc
mov
int3
xchg
addr16
xor
push
sbb
and
ret
repnz
xchg
neg
and
xor
and
jb
cmp
movs
test
adc
push
jnp
inc
fisub
xor
cmp
add
ins
fdiv
repnz
movs
xor
jb
cmc
pop
jo
scas
and
adc
and
push
mov
mov
std
pusha
push
aas
out
sub
test
shl
or
sbb
or
fdecstp
div
xchg
fidiv
and
adc
sub
mov
imul
jnp
enter
pop
add
adc
push
adc
(bad)
xor
xchg
mov
push
scas
(bad)
mov
mov
adc
cmp
inc
adc
lahf
inc
ds
test
aaa
sbb
push
pop
fwait
cmp
cmps
mov
lods
out
shl
jmp
stos
je
ficom
jno
mov
enter
out
out
mov
pop
lods
add
pop
retf
loopne
shl
frstor
call
push
ret
sub
ret
je
pushw
std
pushf
jbe
lods
dec
mov
cdq
enter
ret
rcr
fsubr
mov
mov
pop
pop
cdq
int3
pop
aam
not
or
gs
cmp
push
imul
(bad)
fsub
push
sbb
jno
retf
repz
repnz
leave
and
sbb
mov
cmp
xchg
leave
mov
dec
iret
and
sub
jo
retf
mov
cmp
xor
sbb
and
sub
sbb
adc
mov
(bad)
dec
ins
push
lahf
daa
xlat
nop
adc
mov
jno
arpl
fnsave
fstp
push
dec
pop
test
mov
xchg
(bad)
loope
dec
out
aaa
movs
lock
sbb
lods
mov
mov
jae
mov
in
pop
xor
push
push
cmp
movs
lds
add
fldcw
add
repz
mov
ss
mov
add
(bad)
pop
sub
test
pop
lock
inc
push
in
(bad)
iret
cwde
dec
scas
call
dec
mov
lds
ja
xchg
xchg
add
je
push
dec
xchg
dec
add
div
mov
rcl
push
test
mov
dec
sahf
(bad)
adc
pop
ret
fidivr
mov
(bad)
in
mov
and
dec
jge
ja
outs
sbb
mov
and
inc
outs
fstp
mov
sub
cmps
mov
sub
sbb
arpl
xchg
xchg
outs
sbb
fnstsw
dec
call
mov
lds
mov
imul
or
jae
sbb
xchg
rol
dec
sahf
pop
xor
and
enter
inc
fisttp
xlat
push
push
add
mov
mov
cld
xchg
dec
add
inc
scas
mov
push
dec
shl
fwait
cmp
cmp
test
pop
add
push
retf
mov
xlat
je
and
jbe
cmp
and
mov
and
sub
(bad)
mov
test
or
mov
mov
adc
push
sub
test
jne
cmp
ins
xchg
ds
out
imul
fistp
fisttp
dec
and
and
mov
daa
and
gs
ret
xchg
mov
xor
shl
pop
imul
imul
int
fwait
lods
sub
shl
push
push
dec
shl
adc
scas
cmp
and
mov
ret
fwait
repz
and
or
or
mov
sahf
out
xchg
inc
in
push
pop
push
sbb
mov
cmp
or
lahf
sub
cdq
nop
in
adc
fnstenv
fcmovbe
pop
imul
sti
or
mov
test
fsubr
adc
jg
ror
jae
push
sbb
adc
mov
sbb
js
retf
inc
outs
jnp
xchg
lds
les
fdivr
addr16
(bad)
jl
jo
jae
sub
stc
xchg
mov
stos
cmp
rcr
sub
dec
mov
sbb
push
jp
loop
push
addr16
mov
mov
fnsave
and
in
or
loop
inc
push
stc
sbb
pop
cmp
push
out
inc
push
or
das
cmp
dec
push
test
xchg
adc
arpl
mov
jnp
mov
adc
outs
xchg
enter
repz
push
(bad)
cwde
adc
clc
test
mov
fdivr
push
add
and
dec
dec
popf
dec
fs
push
sbb
les
ss
cmp
xor
jl
gs
ds
repnz
out
arpl
push
inc
push
jns
inc
inc
pop
in
xchg
push
cdq
les
repnz
js
ds
push
aad
inc
mov
add
cmp
cmp
and
retf
jge
rcl
add
fsub
mov
sub
cmp
jbe
mov
stc
jp
mov
imul
xchg
mov
das
cmp
or
fst
mov
call
dec
mov
jl
fist
fs
fisttp
mov
hlt
add
or
lods
pop
test
out
xchg
scas
js
lahf
mov
or
add
pop
mov
mov
jp
sub
lea
xchg
mov
adc
pop
adc
sti
mov
and
test
sub
sub
and
test
daa
and
pop
sbb
adc
out
(bad)
cmps
dec
or
pushf
mov
add
outs
xor
jbe
ja
in
jbe
imul
sbb
adc
out
sbb
mov
fld
cs
xor
ds
adc
(bad)
inc
pusha
push
pop
inc
fist
push
fmul
out
out
cld
test
xor
jge
(bad)
sbb
add
mov
gs
int3
lods
sbb
aas
into
push
fsub
scas
add
inc
or
test
popa
pop
mov
adc
repz
pop
stos
or
and
je
imul
jecxz
sub
or
jne
adc
out
cdq
sub
mov
add
fist
push
xor
(bad)
mov
cmps
xor
shl
arpl
test
push
stos
mov
add
add
sub
addr16
sbb
and
sbb
outs
retf
add
mov
fild
xchg
push
push
mov
jnp
shl
xor
mov
out
not
mov
sti
arpl
sub
test
push
cmp
push
cmps
cdq
jne
sub
fcmovnbe
add
jns
pop
adc
push
je
gs
mov
xchg
shr
cli
out
cmp
push
std
cmp
dec
test
push
js
add
xchg
pop
sub
out
dec
das
cmp
mov
fisubr
mov
iret
and
ret
fcomp
and
ss
imul
and
cmp
xor
das
cmp
inc
cmp
xor
es
(bad)
jae
ins
in
mov
push
push
sbb
jl
fisttp
add
fisub
lea
push
cld
icebp
outs
addr16
sbb
mov
jmp
inc
mov
les
imul
test
xchg
mov
cmp
out
adc
mov
stos
or
fucomi
cmp
cmp
add
imul
fnstsw
push
xchg
push
sti
ret
test
lea
das
xchg
int3
test
push
arpl
add
cwde
cmp
arpl
in
pop
stc
arpl
ja
pop
push
adc
out
idiv
iret
std
push
adc
push
or
addr16
cld
mov
push
xchg
pop
push
scas
rcr
jmp
clc
inc
mov
inc
es
inc
retf
stos
mov
mov
fst
icebp
cmps
sbb
aaa
mov
inc
xor
pop
dec
retf
or
fnstsw
pop
dec
pop
and
rcl
xchg
mov
jge
mov
std
cld
out
mov
push
shl
pop
js
jle
out
in
inc
sbb
fmul
ins
sbb
aam
add
add
push
inc
mov
sub
stc
dec
fistp
push
adc
mov
repnz
sub
add
gs
sub
pop
ja
mov
or
xchg
or
push
out
ficomp
pop
fcomp
jbe
xchg
mov
mov
mov
adc
mov
push
mov
pop
ins
mov
or
sub
(bad)
(bad)
add
mov
mov
imul
sub
addr16
jl
fisubr
and
cmp
nop
pop
ins
dec
stos
mov
out
mov
call
jg
sbb
mov
call
mov
aam
cld
pop
xlat
sbb
mov
and
and
test
rcl
cmp
jle
sbb
sbb
mov
sbb
xchg
sbb
out
sub
hlt
xor
sub
cvtps2pi
data16
data16
inc
cmc
sub
mov
sub
in
(bad)
jo
cmp
jo
cmp
cmp
cmp
rcr
sub
sub
imul
jns
fcomp
test
das
push
inc
mov
push
scas
xchg
mov
xor
pop
lods
gs
add
loop
stos
xchg
popa
not
arpl
fwait
loopne
fsub
popf
(bad)
add
arpl
addr16
cmp
fcomp
jge
arpl
addr16
jle
jne
(bad)
adc
(bad)
ret
mov
or
into
sub
or
jge
adc
xchg
out
sbb
inc
inc
fisttp
push
adc
xor
sbb
sbb
test
cli
push
loope
dec
adc
pop
addr16
pop
xor
iret
out
pop
stos
jge
mov
pop
jmp
mov
and
inc
pop
jecxz
out
jbe
adc
icebp
ja
out
(bad)
jl
jnp
cmp
pop
jmp
mov
frstor
xchg
lods
jbe
stc
inc
inc
fs
pusha
and
imul
push
xchg
mov
outs
aaa
fild
fbld
cmps
adc
or
call
outs
adc
pop
fimul
jne
fcmovnu
mov
mov
xor
imul
mov
dec
pop
jae
push
or
mov
scas
add
sub
les
cmp
out
lods
xor
and
in
mov
pop
sub
mov
and
mov
jg
sub
and
dec
add
mov
xchg
pushf
jno
mov
mov
out
fsub
xor
xor
jge
mov
xlat
mov
push
or
inc
mov
xor
sbb
or
hlt
cmp
fstp
mov
(bad)
inc
hlt
test
or
push
in
add
and
imul
arpl
adc
(bad)
mov
call
or
mov
icebp
push
pop
stos
mov
push
fadd
fcmovbe
and
mov
pop
mov
scas
cmp
test
imul
sub
inc
imul
fadd
cmp
or
(bad)
mov
pop
add
push
mov
loop
dec
adc
in
push
sti
fwait
xor
or
and
jmp
cmp
push
scas
pop
xchg
push
pop
daa
call
push
adc
mov
push
pushf
or
fwait
mov
ret
add
push
icebp
clc
jnp
stos
addr16
(bad)
scas
jo
jnp
adc
and
addr16
repz
in
gs
push
cli
sub
js
fiadd
icebp
(bad)
out
aaa
xor
mov
addr16
cmps
aaa
js
add
jae
rol
sbb
test
inc
ret
or
push
sub
aaa
add
push
int3
sub
movs
xchg
jle
shr
fmul
inc
adc
cmp
cdq
jns
xchg
in
cmps
and
or
and
sbb
xor
lods
(bad)
cmp
pop
cmp
das
rol
sbb
push
and
mov
js
xchg
and
add
xchg
inc
lea
adc
es
inc
mov
or
imul
xor
or
dec
mul
xor
mov
mov
in
jp
mov
mul
lds
mov
mov
cwde
pop
jb
lds
and
mov
repz
push
sbb
cwde
popf
mov
push
xchg
xchg
fwait
xchg
add
sbb
xchg
leave
push
sbb
cmps
mov
or
mov
add
add
pop
dec
mov
(bad)
int3
inc
lea
pop
pop
scas
inc
mov
xor
(bad)
xor
mov
test
pop
inc
pop
xor
mov
adc
cmp
cmp
leave
push
pushf
imul
js
sbb
adc
ins
jo
or
cmp
inc
jne
(bad)
arpl
mov
pop
ds
fld
and
and
lahf
ror
adc
sar
inc
neg
(bad)
jne
cmp
shr
js
pop
test
push
adc
not
cli
mov
push
loopne
loop
outs
mov
pop
fisubr
mov
sub
fdivr
inc
arpl
in
outs
add
mov
add
or
mov
stos
or
mov
pop
sahf
fadd
icebp
add
mov
ja
dec
pop
cmp
sub
inc
rcl
sbb
jne
xchg
push
mov
adc
cmps
mov
mov
add
dec
gs
sub
fnstsw
enter
pop
mov
push
or
out
lods
jbe
xor
dec
cmp
cmp
and
inc
cdq
sbb
mov
cmp
add
out
jno
imul
xchg
and
xchg
hlt
sub
out
xor
(bad)
jnp
rep
xor
inc
and
repz
and
cmp
repnz
in
push
mov
jb
push
out
jae
sahf
and
movups
add
and
sub
arpl
mov
mov
int3
push
and
mov
(bad)
fdivr
cmps
mov
or
gs
test
ss
fwait
test
test
mov
ins
mov
push
mov
aaa
sub
sbb
loope
cmp
xor
mov
lock
mov
mov
shr
gs
mov
out
es
movs
inc
jle
push
cmp
sar
adc
out
cmp
repnz
ds
jae
xchg
push
sub
mov
sub
in
and
inc
pop
jmp
out
or
fnstsw
pop
adc
cmp
ja
mov
fist
(bad)
outs
in
mov
mov
cs
jle
ds
test
int
pop
jne
sub
ficomp
ret
das
dec
push
add
mov
sub
jp
(bad)
cmp
test
gs
lahf
or
adc
push
stos
push
mov
inc
pusha
iret
add
adc
div
mov
push
add
add
sbb
dec
das
test
push
jp
cmp
shr
or
sbb
repnz
jmp
out
and
xor
xchg
sar
xchg
xchg
add
mov
xchg
xchg
out
mov
push
cwde
add
cmp
mov
add
stc
sub
mov
mov
push
ret
jecxz
and
call
push
dec
test
cmps
or
xor
mov
push
js
int
sub
jp
and
or
sbb
fdivp
leave
je
scas
mov
sti
shl
lds
push
push
push
ins
dec
sbb
push
mov
sbb
pushf
fs
jae
sti
rcr
out
(bad)
in
mov
xlat
mov
or
rol
fmul
lods
fcmovb
in
inc
mov
push
in
mov
push
xchg
push
mov
inc
and
jmp
push
ror
imul
popa
sahf
out
lahf
pop
xchg
push
inc
test
mov
mov
add
in
scas
pusha
sub
xchg
inc
and
sub
and
call
popf
add
repnz
dec
push
sub
sub
fistp
aad
xor
jmp
cli
fisttp
jle
xor
add
arpl
sbb
or
xor
dec
out
adc
mov
pop
jae
push
push
ds
sbb
cld
sbb
jl
mov
in
jbe
inc
sbb
cwde
popf
fsave
push
mov
outs
lds
sbb
add
cmps
sbb
fst
fcom
sbb
out
mov
ret
dec
neg
add
fadd
sub
js
mov
dec
inc
push
mov
mov
jge
adc
(bad)
lahf
loope
nop
xor
push
sbb
add
mov
push
scas
cmp
xchg
fnop
pop
das
mov
pop
push
ds
sub
cmc
and
(bad)
mov
sbb
sbb
cwde
(bad)
hlt
arpl
cmp
(bad)
sahf
inc
test
int3
jl
daa
call
icebp
sub
or
retf
in
ret
mov
xor
(bad)
cmp
pop
cmp
pop
jmp
mov
in
sbb
mov
lock
push
arpl
mov
out
push
fmul
push
mov
xor
xchg
sub
es
pusha
jp
push
cmp
and
or
mov
aam
gs
mov
push
xor
sbb
push
cmc
pop
and
xor
inc
mov
push
ror
xor
stos
add
sbb
js
mov
xchg
adc
and
lahf
and
and
arpl
jnp
mov
and
ret
push
mov
adc
mov
xor
lea
out
add
iret
fadd
inc
outs
push
nop
adc
add
push
adc
fistp
xor
mov
cld
sub
mov
call
out
dec
adc
inc
test
or
fld
add
pop
jmp
xchg
adc
out
data16
imul
mov
jne
jne
jns
aas
adc
push
scas
jle
xchg
jns
ret
cmp
mov
mov
mov
rep
xchg
mov
xchg
mov
movs
jbe
test
sbb
add
ffreep
cdq
push
call
adc
sub
mov
pop
push
pop
xchg
mov
xchg
pop
std
ja
es
nop
addr16
and
xchg
test
xor
pop
inc
icebp
jl
(bad)
in
and
fucomp
out
adc
dec
inc
or
shl
cmp
pop
and
mov
arpl
out
scas
pop
adc
xchg
jno
mov
mov
leave
loop
mov
mov
push
add
sbb
loop
jmp
and
xchg
ret
dec
ja
and
pop
and
add
mov
and
xor
sub
lea
mov
in
es
lea
sbb
mov
adc
psrlw
xor
(bad)
hlt
sub
scas
gs
jne
mov
push
call
nop
or
mov
mov
inc
outs
push
xchg
and
into
pop
cwde
push
xchg
push
sti
jns
out
out
mov
and
(bad)
ins
adc
fs
movs
push
sub
and
enter
push
lods
lock
pop
in
inc
push
xor
or
sahf
in
pop
pusha
aam
not
test
repnz
fild
push
stc
inc
push
das
sbb
and
push
pop
cmps
push
aad
enter
in
xor
jne
dec
and
add
push
fldenv
push
(bad)
jns
cmp
enter
push
jnp
push
sub
push
adc
pop
mov
sar
or
iret
stos
add
xchg
addr16
sub
jns
inc
fbld
or
xchg
addr16
sahf
dec
dec
add
jge
push
jnp
enter
mov
ror
pop
pusha
pop
sbb
adc
add
das
dec
adc
adc
ins
enter
cwde
inc
fs
inc
mov
xor
xchg
xchg
inc
xchg
mov
and
enter
repz
in
fcmovne
push
pop
lea
nop
movs
cmp
pusha
jb
mov
xchg
stos
jo
push
(bad)
in
loopne
xchg
adc
retf
pop
mov
dec
mov
pop
xor
add
jmp
or
cld
mov
inc
pop
aam
jo
mov
xor
iret
dec
fcmovnu
or
or
(bad)
jo
adc
xchg
outs
pop
sub
mov
adc
fstp
mov
sti
sub
jb
mov
jbe
adc
xor
xor
jo
or
lods
jns
iret
sbb
dec
xlat
jmp
ins
add
in
jo
mov
and
cwde
std
test
fnstenv
jne
push
out
pop
sbb
xor
out
aas
mov
outs
aas
adc
pop
adc
xor
inc
xor
jmp
pop
push
mov
push
mov
lods
pusha
mov
mov
fwait
push
aas
out
jge
pop
add
inc
sub
out
(bad)
nop
xchg
ret
lock
inc
pop
or
aad
nop
pop
pop
out
mov
enter
stos
push
call
and
adc
xchg
jmp
add
add
push
call
not
push
and
inc
ja
inc
push
int
xchg
jg
into
or
xchg
test
push
push
pushf
call
movs
pushf
jp
mov
popa
adc
push
rcl
dec
arpl
ins
enter
arpl
mov
sti
fwait
pop
addr16
iret
arpl
add
sub
mov
popa
scas
(bad)
cwde
pop
jbe
imul
adc
mov
stc
or
pop
add
in
(bad)
and
xor
mov
out
movsx
sar
das
adc
cwde
dec
mov
out
(bad)
neg
cmps
dec
loop
xchg
es
or
call
xchg
sbb
sbb
push
adc
ja
dec
dec
addr16
test
adc
cwde
sub
dec
mov
sub
mov
mov
sub
ins
push
add
or
push
inc
xchg
repz
and
pop
push
push
mov
push
xchg
inc
mov
sbb
(bad)
sub
pop
imul
add
xchg
mov
jae
out
push
mov
xchg
bnd
pop
mov
pop
fwait
push
mov
mov
fwait
push
xor
pushf
fnstenv
pop
mov
mov
xor
mov
loopne
inc
push
in
rcr
(bad)
aas
jo
fist
push
daa
adc
fnsave
pop
mov
xor
inc
sbb
mov
retf
(bad)
mov
dec
cmp
and
pop
loopne
sub
(bad)
jns
icebp
adc
push
dec
lds
outs
out
(bad)
adc
out
cs
pop
rcr
(bad)
push
cwde
fwait
les
cwde
cmp
aas
fwait
dec
xlat
test
or
push
enter
xchg
add
and
inc
nop
add
shl
lods
aad
ins
dec
pop
imul
push
out
inc
(bad)
lods
push
fs
rcr
neg
or
or
adc
cli
mov
gs
dec
and
pop
sbb
push
add
add
out
rcl
add
mov
repnz
leave
pop
imul
add
(bad)
adc
lock
cmp
das
sub
cmps
dec
push
cmps
(bad)
inc
cld
pop
mov
fdivr
(bad)
(bad)
test
cmp
pushf
sub
test
pop
jmp
inc
cmp
xchg
mov
sub
shl
ret
cs
sub
mov
dec
stos
test
out
mov
cmp
call
rcr
test
mov
and
cwde
mov
scas
mov
and
push
push
sub
mov
mov
pop
aam
popf
inc
out
inc
mov
pop
sub
retf
hlt
adc
aad
mov
into
and
mov
jnp
scas
fistp
icebp
scas
mov
scas
out
rol
adc
xor
adc
or
dec
mov
inc
add
nop
imul
sub
mov
outs
mov
out
mov
push
sbb
pop
jmp
jmp
and
and
push
push
fsubr
or
and
jo
or
retf
xchg
aaa
fmul
rol
adc
cmp
cmp
mov
(bad)
mov
fild
mov
mov
inc
mov
fld
push
push
push
jmp
mov
mov
and
neg
cli
call
test
cmp
jmp
aam
out
or
xchg
adc
cmp
jecxz
add
cdq
(bad)
inc
jmp
inc
xchg
xor
(bad)
jge
adc
jnp
mov
push
or
cs
and
bound
mov
addr16
push
cwde
xchg
fsubr
gs
cwde
inc
jle
(bad)
xchg
or
mov
or
popf
mov
in
(bad)
pop
outs
retf
and
pop
xchg
sbb
mov
outs
xchg
(bad)
out
mov
es
nop
push
cmp
jno
push
jl
mov
dec
rcl
jb
not
add
leave
lock
mov
popa
imul
jbe
adc
sar
adc
xor
pop
inc
(bad)
mov
mov
push
fistp
mov
sub
cdq
adc
adc
pop
inc
fwait
aad
adc
rcr
and
inc
(bad)
pusha
ror
xchg
and
inc
rol
jge
call
fwait
stos
sbb
cmp
or
loop
cmps
fiadd
ffreep
out
jns
push
fldenv
ret
pop
cmps
cs
cli
xor
mov
call
xchg
jo
mov
jae
je
dec
cdq
adc
gs
xor
(bad)
or
jo
data16
mov
sub
clc
bound
inc
mov
add
cwde
mov
pop
xchg
fadd
pop
fs
pop
dec
xlat
std
pop
sbb
xchg
jb
ins
or
cmps
fidiv
jle
jb
jb
lods
fnstsw
(bad)
mov
fsub
data16
pop
test
add
loopne
mov
inc
push
or
dec
arpl
call
sbb
or
repnz
fs
in
xor
mov
fwait
mov
add
les
clc
test
rol
fadd
(bad)
cmp
loopne
inc
lahf
les
inc
cli
retf
(bad)
jl
ja
mov
popf
dec
imul
ja
stos
fimul
out
or
inc
cld
mov
adc
xor
dec
add
stc
les
mov
or
mov
pop
add
mov
mov
retf
test
out
or
push
adc
mov
cmps
fst
cli
sub
and
dec
mov
and
ins
mov
cmp
jge
or
inc
add
dec
shl
or
push
xor
shl
xchg
inc
or
fs
inc
mov
call
imul
call
mov
cmps
imul
imul
dec
shl
xor
imul
xor
sar
ret
outs
sub
pop
ss
pop
sub
outs
pop
push
call
mov
(bad)
rcr
test
adc
cli
jmp
(bad)
mov
push
pop
mov
mov
pop
sbb
pop
pop
and
add
inc
test
add
add
outs
lods
popf
outs
call
add
aad
cvtdq2ps
mov
mov
dec
(bad)
(bad)
jge
inc
xchg
(bad)
(bad)
adc
add
add
xor
mov
test
inc
xor
pop
jns
aad
(bad)
ja
mov
ret
pop
pusha
(bad)
clc
pop
(bad)
pop
mov
jmp
(bad)
pop
(bad)
pop
pop
and
pop
ret
pop
jg
adc
mov
mov
mov
outs
lods
std
mov
(bad)
and
xor
sbb
pop
(bad)
(bad)
mov
pop
nop
pop
pop
fisttp
scas
aad
pop
sbb
pusha
movs
rcr
out
pusha
add
inc
or
xor
inc
jmp
lods
fstp
mov
inc
pusha
mov
aad
jnp
jbe
jae
pusha
in
sbb
mov
aas
pop
pop
dec
fstp
pop
aad
inc
ja
cmps
das
adc
xchg
(bad)
pop
in
fnstsw
mov
lods
fisttp
pop
das
pop
cmp
in
mov
pop
(bad)
jmp
minps
lods
js
mov
pop
or
and
retf
xchg
jmp
sar
push
rcr
mov
sahf
sub
dec
cmps
xlat
or
mov
xchg
pop
push
inc
sbb
fwait
mov
mov
(bad)
aad
imul
inc
out
repnz
sahf
ret
popa
popa
popa
ret
dec
ucomiss
jbe
das
daa
dec
push
xchg
sbb
bsf
outs
or
cmp
cmp
or
mov
ficomp
pop
imul
mov
(bad)
in
cmps
add
lods
daa
sbb
retf
inc
inc
mov
test
push
xchg
cmps
pop
xbegin
inc
fcmovnu
std
add
mov
leave
sub
dec
xlat
pop
imul
pop
rcr
loop
pop
jbe
pop
sbb
neg
aas
fcom
jo
jmp
jbe
imul
dec
pop
sbb
cmp
mov
sbb
popf
add
fdiv
cs
lea
fstp
movs
(bad)
push
jmp
pushf
in
add
rcl
push
cli
push
push
out
sbb
inc
data16
add
imul
gs
enter
pop
xchg
aas
fnsave
xchg
jge
pop
push
jg
(bad)
(bad)
mov
lea
add
(bad)
mov
push
aad
push
pop
pop
lds
and
inc
hlt
out
push
push
adc
xor
and
and
sbb
pop
icebp
ja
div
cwde
xor
cmps
sub
push
es
daa
or
iret
pop
pop
mov
or
and
adc
or
mov
or
or
lods
lock
add
cmp
push
pop
fst
mov
scas
jge
inc
div
jmp
jg
mov
inc
sub
pop
repnz
repnz
(bad)
lahf
mov
xor
fldenv
mov
cmp
imul
(bad)
(bad)
lock
js
dec
xchg
in
dec
jno
sbb
xor
xchg
imul
jbe
jns
fist
mov
call
xor
cmp
(bad)
(bad)
push
mov
xchg
adc
sub
mov
or
cdq
push
cmp
xchg
mov
adc
repz
nop
push
jnp
pop
add
xor
cmp
(bad)
jmp
push
in
test
pop
dec
(bad)
push
call
add
inc
jg
clc
push
dec
pushf
(bad)
cmps
leave
adc
mov
inc
ret
loopne
push
or
dec
sbb
pusha
pop
sbb
mov
lods
fld
adc
ror
jns
add
jns
fs
push
pop
push
push
nop
add
push
and
nop
add
nop
push
dec
jo
(bad)
popa
and
pop
add
push
push
ret
fst
add
enter
add
add
fnstenv
repz
retf
mov
in
fild
and
dec
ss
add
cmp
dec
arpl
(bad)
(bad)
(bad)
jmp
pop
inc
sub
push
scas
inc
call
es
shl
and
(bad)
(bad)
(bad)
jmp
cmp
rol
push
pop
enter
jmp
retf
mov
daa
adc
xlat
dec
jae
(bad)
(bad)
(bad)
(bad)
fistp
cld
rcr
jl
jb
test
dec
inc
rcl
ds
inc
xor
(bad)
jmp
xor
fwait
std
pop
xchg
adc
mov
pusha
test
lock
xchg
and
xchg
stos
adc
add
or
pop
jg
push
call
pusha
cmc
sar
clc
add
pop
or
add
fnstenv
(bad)
rol
add
out
add
push
xor
outs
xlat
or
inc
pop
add
sbb
(bad)
adc
cld
sub
adc
mov
mov
pop
fst
aad
out
scas
sbb
repnz
ins
mov
and
mov
addr16
push
push
dec
jnp
jne
inc
inc
aaa
das
inc
aas
cmp
in
mov
fnstenv
sub
or
pop
adc
xor
fisttp
fsubr
pop
mov
fld
inc
jnp
mov
daa
and
add
cmp
fmul
adc
pop
es
scas
or
pushf
jae
lods
mov
ror
inc
jnp
add
sub
lds
lods
out
jbe
or
fcmovbe
push
iret
inc
sub
dec
inc
pop
out
pop
nop
mov
retf
xchg
inc
adc
or
and
mov
daa
outs
or
inc
mov
mul
pop
xchg
inc
(bad)
loop
test
mov
aas
cmps
cmp
sbb
dec
daa
jnp
mov
nop
bound
mov
inc
jb
pop
sbb
pop
fdiv
or
dec
xchg
sbb
and
cmc
inc
out
fptan
sbb
div
pop
icebp
aam
ror
pop
fstp
inc
push
in
ret
and
jo
shr
jne
fistp
cmps
in
sbb
jne
sbb
iret
enter
add
pop
add
fstp
cmp
sbb
inc
int
mov
loope
sbb
or
and
add
ins
add
and
adc
fisub
or
and
jno
adc
or
cmp
rcl
clc
fstp
pusha
add
mov
loopne
push
push
adc
dec
ds
fild
outs
out
pop
leave
pop
sub
pusha
repz
push
mov
inc
sub
jo
icebp
data16
jmp
sar
mov
mov
jo
adc
ret
lods
jo
rol
cdq
pop
mov
jb
add
sbb
(bad)
mov
aas
or
dec
push
add
lds
(bad)
cs
imul
fneni(8087
f2xm1
mov
adc
repnz
std
add
xbegin
cmp
(bad)
sbb
fbld
in
xchg
mov
mov
ins
mov
addr16
cmps
pop
out
pop
lock
push
call
push
fdiv
mov
add
popa
push
out
mov
ins
jg
sub
sub
mov
das
jns
or
(bad)
dec
push
or
int
push
clc
adc
add
or
jg
sub
(bad)
push
stc
sbb
inc
arpl
pop
jne
into
neg
push
jbe
sbb
mov
shr
mov
mov
loopne
int3
push
mov
xor
mov
xchg
dec
lea
add
lods
sbb
or
cmps
fistp
sti
dec
mov
inc
call
movs
ja
retf
fwait
cmp
and
gs
inc
add
and
cmp
pop
std
das
mov
jl
(bad)
loope
xchg
dec
in
fst
rcr
pop
cwde
dec
xchg
push
or
pushf
or
div
xchg
xchg
xchg
cmp
or
fcom
sbb
jne
push
in
aas
and
cwde
cmps
popf
iret
dec
mov
sub
lods
xchg
outs
in
jb
pushf
(bad)
and
sbb
(bad)
sbb
dec
test
bound
push
out
push
inc
sbb
xchg
ja
mov
add
in
imul
not
and
jmp
mov
jns
mov
fcmovne
push
cmc
adc
mov
mov
dec
shl
xor
or
cmps
pop
push
jbe
inc
(bad)
shr
cmps
push
xchg
mov
shl
popf
add
adc
call
inc
push
dec
rcr
stc
mov
jnp
jecxz
jg
mov
or
stc
repz
add
add
or
cmp
fild
pop
sub
mov
pop
das
adc
mov
lods
push
jmp
add
cmps
imul
outs
adc
pop
mov
sbb
sbb
ss
pop
push
cmp
cdq
push
push
adc
or
or
sub
inc
push
sbb
psubusw
push
sbb
pushf
pop
(bad)
pop
push
sbb
pop
ss
pop
pusha
inc
call
mov
sbb
jnp
das
cmp
ins
nop
rcr
stos
(bad)
mov
fs
cmps
jnp
rcr
push
and
lahf
fcomp
adc
inc
sbb
or
out
cmc
cmps
add
or
inc
and
xchg
ret
inc
inc
movs
mov
in
stos
xor
add
add
inc
jmp
jns
mov
mov
das
dec
sub
mov
ja
aas
aas
stc
loopne
mov
das
add
movs
mov
test
fld
jl
cld
fistp
movs
inc
movs
add
xor
shr
dec
test
dec
ror
jg
lahf
fdivr
test
cmp
outs
mov
or
add
std
pand
out
or
sahf
xor
mov
push
sti
aas
das
outs
sbb
lock
jmp
jmp
mov
pop
idiv
aam
pop
imul
ins
call
fwait
dec
shl
sub
shr
inc
shl
or
inc
xor
aaa
dec
sub
shl
push
dec
fdiv
adc
stos
ins
sar
xor
rcl
out
mov
xor
pop
(bad)
pop
add
push
cmp
sbb
addr16
fwait
leave
pop
push
(bad)
inc
(bad)
aas
jl
xchg
test
add
sub
mov
mov
pop
mov
int3
cmp
add
(bad)
iret
shl
push
int3
test
pop
pop
daa
rol
js
push
or
add
xor
(bad)
adc
test
mov
push
pop
outs
mov
mov
mov
(bad)
in
xlat
movs
fwait
(bad)
(bad)
(bad)
jmp
test
inc
cmp
mov
pop
lods
mov
inc
clc
xor
test
int
jecxz
sbb
sti
(bad)
push
dec
or
push
inc
mov
bnd
dec
mov
dec
cs
retf
in
pop
add
dec
pop
pop
in
mov
cmp
pop
adc
retf
sub
jecxz
or
retf
in
mov
sar
outs
mov
mov
fnsave
mov
xchg
retf
in
shl
cmp
ss
mov
mov
mov
retf
in
dec
ds
stos
jmp
jb
pop
call
cmc
pop
cs
retf
outs
bound
sti
inc
dec
xchg
dec
push
jp
(bad)
jbe
or
sar
sbb
stos
mov
pop
xlat
retf
pop
aaa
loope
dec
mov
pop
cs
jne
adc
xchg
test
mov
jae
xchg
retf
fild
out
mov
call
fisubr
xchg
retf
in
popa
pushf
retf
leave
(bad)
lock
pop
pop
int3
fidivr
mov
rol
arpl
nop
mov
push
and
push
mov
lods
(bad)
ror
sbb
call
ins
(bad)
cmps
mov
mov
imul
jae
xor
mov
test
xchg
pop
inc
sbb
ds
dec
call
cwde
xchg
push
not
push
scas
sub
lds
mov
jmp
mov
(bad)
(bad)
call
jne
mov
mov
psubw
add
loop
push
cwde
clc
cmp
xchg
or
stc
outs
icebp
outs
push
inc
xchg
mov
dec
daa
test
(bad)
inc
std
into
cmp
std
adc
cmp
cmp
jo
mov
(bad)
(bad)
(bad)
jmp
mov
push
out
in
inc
test
and
xchg
xchg
paddd
adc
cmp
xchg
(bad)
std
(bad)
jg
(bad)
cld
add
pop
sub
pop
lods
imul
sub
cmp
fld
enter
out
mov
pop
fwait
dec
arpl
mov
cmp
outs
cmp
(bad)
or
(bad)
(bad)
(bad)
in
mov
or
adc
mov
mov
pop
xlat
aam
mov
xchg
push
fcmovnu
(bad)
(bad)
dec
loop
scas
loop
popa
clc
mov
fsub
jg
stos
add
pop
fcmovnb
adc
outs
retf
add
daa
add
jmp
icebp
cmp
inc
cdq
mov
dec
push
jae
fild
mov
sub
jo
call
pop
fstp
test
inc
ret
(bad)
(bad)
(bad)
mov
mov
ss
or
mov
or
mov
or
fbstp
xchg
mov
ds
icebp
xchg
adc
les
fcomip
or
ins
cld
imul
jl
add
bnd
das
mov
retf
mov
adc
data16
jmp
std
retf
jl
ds
sti
retf
fcmovnu
jne
pop
mov
sti
pop
cwde
jne
div
mov
jo
mov
push
ret
add
sbb
add
dec
or
jle
xor
(bad)
addr16
enter
cmp
fwait
pop
je
ror
cmp
gs
or
push
das
(bad)
(bad)
jg
(bad)
pop
inc
inc
add
enter
mov
cwde
xchg
push
retf
dec
(bad)
repnz
pop
maxps
sti
adc
gs
sub
cs
(bad)
inc
shl
lahf
dec
push
jl
aaa
leave
add
sub
or
mov
(bad)
scas
cmp
xor
xchg
mov
data16
jmp
out
push
or
daa
push
scas
pop
dec
dec
add
enter
adc
in
(bad)
push
cmp
cmp
adc
ds
sub
inc
xor
(bad)
(bad)
call
les
cs
pop
shl
dec
iret
sub
stc
rcr
and
ficomp
jbe
sbb
ret
(bad)
retf
scas
jmp
adc
or
mov
imul
pop
(bad)
stc
ret
xchg
test
push
or
lea
ja
aaa
jno
inc
scas
test
gs
xchg
inc
mov
inc
sbb
mov
cli
outs
jg
add
xor
ds
mov
sub
fdivr
neg
xchg
push
ret
cmp
stc
fcmovu
push
pop
and
sub
push
or
aaa
(bad)
fisttp
pop
stc
jge
movs
adc
movs
mov
call
ret
sub
sbb
fisttp
sub
and
mov
cmp
imul
jne
lds
loope
sbb
mov
je
adc
fcmovnb
outs
in
not
and
outs
ds
xor
das
aaa
(bad)
out
xlat
pop
jnp
test
push
fdivr
inc
adc
jl
not
das
xlat
inc
scas
outs
mov
idiv
call
adc
sti
xor
call
stos
sbb
lahf
inc
imul
repnz
sub
xor
cwde
inc
sbb
call
adc
out
aaa
(bad)
fcom
fxch
push
mov
(bad)
fisub
adc
or
cs
pop
mov
test
cdq
pop
dec
lds
loope
jecxz
(bad)
mov
jo
aaa
fwait
jns
stos
cmp
jbe
fidiv
push
push
push
iret
ja
xlat
jae
enter
push
dec
mov
dec
fcom
cdq
repz
aam
push
sti
das
std
pop
lahf
jne
mov
psubw
jns
outs
inc
stc
(bad)
aas
aam
in
add
jns
xchg
clc
sub
ins
pusha
xlat
xchg
add
in
mov
aam
mov
std
inc
cmps
loop
mov
mov
sub
inc
pop
add
adc
or
mov
pop
addr16
xor
shl
inc
arpl
aad
(bad)
cmc
or
adc
iret
test
pop
add
pop
fnstsw
dec
mov
retw
fdiv
test
ss
(bad)
mov
ins
test
int3
repz
iret
(bad)
or
repz
push
fistp
pop
lahf
mov
add
adc
push
adc
call
jle
loopne
cdq
mov
pop
clc
or
push
add
mov
jae
fiadd
sbb
mov
xchg
push
leave
pop
call
iret
sbb
jns
xor
fst
sti
(bad)
outs
std
aaa
mov
pop
inc
pop
inc
jo
hlt
(bad)
std
cld
mov
pop
pop
pop
shl
loop
xchg
and
rcr
outs
outs
push
ss
mov
jg
call
mov
fld
ss
(bad)
ins
xor
fst
aas
or
adc
push
adc
(bad)
xchg
dec
push
enter
ja
xchg
sub
imul
sbb
es
jg
jmp
popa
push
jo
add
(bad)
jmp
adc
mov
xchg
sub
mov
loop
xchg
jmp
mov
mov
ja
add
jmp
inc
mov
mov
mov
mov
repz
je
std
popa
and
gs
or
or
inc
xchg
mov
pop
mov
(bad)
jg
mov
cmps
adc
ror
nop
jg
addr16
rcr
inc
jp
daa
pop
(bad)
push
add
jno
outs
mov
in
push
jno
mov
add
sub
adc
pcmpeqw
ret
mov
pop
lahf
mov
and
inc
clc
je
pop
pop
and
jnp
stc
jbe
outs
div
ror
call
xor
mov
push
jmp
cmp
jns
outs
out
inc
movs
inc
(bad)
fcomip
push
xchg
shl
movs
sbb
hlt
mov
mov
imul
xchg
adc
pop
cld
fld
sub
mov
xlat
(bad)
test
fistp
jnp
pop
(bad)
mov
or
and
push
or
lea
shl
or
retf
cmps
push
fs
jo
adc
in
sbb
sbb
lahf
icebp
repnz
gs
mov
jg
xlat
inc
push
xchg
fs
(bad)
outs
ret
pop
addr16
adc
sbb
pop
jb
imul
mov
das
data16
arpl
repnz
sub
sub
dec
mov
xor
aas
sub
ja
stos
push
cmp
loop
mov
(bad)
cmp
inc
pushf
(bad)
je
jb
call
movs
fucomi
pop
mov
jecxz
add
fldcw
xchg
data16
rol
mov
out
dec
cwde
movs
mov
sbb
lea
lods
jo
xchg
pop
jae
div
stos
in
cmp
retf
daa
inc
mov
sbb
push
les
fbld
sbb
or
(bad)
xchg
scas
outs
fistp
ins
push
mov
fcmovnu
hlt
add
(bad)
ja
jle
mov
in
jle
retf
mov
lock
inc
frstor
and
aaa
inc
and
retf
sbb
inc
push
sbb
nop
push
outs
xor
mov
mov
scas
fist
mov
ret
mov
pop
aas
xor
pop
scas
sub
xchg
gs
imul
rcl
add
popf
gs
jbe
cs
fwait
xor
jns
mov
fwait
push
and
push
das
repnz
out
addr16
test
je
adc
mov
outs
frstor
pop
adc
std
fistp
and
iret
call
or
or
cmp
arpl
or
lock
aas
pop
jae
(bad)
arpl
enter
ja
test
mov
in
jmp
pop
je
shl
mov
pop
mov
mov
div
sub
push
fbld
imul
outs
cmovs
arpl
adc
mov
mov
pop
popa
jno
aaa
in
aam
ret
mov
jl
pop
(bad)
(bad)
std
cmovg
pop
js
(bad)
mov
test
inc
ja
mov
cli
retf
rcr
shl
je
das
out
pop
cli
repnz
cmp
fs
xchg
mov
add
out
clc
cdq
and
push
retf
ins
cmp
and
shr
lea
fiadd
adc
xor
inc
mov
cmp
xor
ins
aad
ror
ja
sub
inc
push
stos
(bad)
psubusw
add
add
(bad)
cs
lea
lahf
mov
adc
fcomp
add
xor
push
pop
jle
idiv
sub
fprem
(bad)
loopne
mov
inc
(bad)
hlt
mov
mov
sbb
cmps
loop
repz
and
arpl
movs
pop
sbb
loop
push
cs
push
data16
xor
stos
fcomp
inc
je
jg
pop
push
das
icebp
sub
fwait
push
loope
pop
(bad)
out
jle
call
jb
fistp
pop
in
xor
adc
pop
jae
push
pop
xlat
cs
mov
not
jae
(bad)
ins
sar
xor
hlt
pop
out
lsl
mov
mov
add
aaa
into
push
xor
jne
jnp
mov
inc
add
adc
test
cmp
into
ds
mov
jne
clc
addr16
jmp
mov
fs
cmp
pop
les
jg
cmp
xchg
aaa
pop
xor
dec
aaa
ins
cmps
pop
push
es
sbb
std
clts
pop
pop
push
sbb
or
jb
adc
(bad)
pop
test
sbb
push
mov
pop
aas
arpl
lea
ds
cmps
dec
fnsave
(bad)
pusha
jne
ror
pop
cmp
dec
movsx
fcom
int3
mov
add
or
mov
cld
adc
ss
pop
ror
pop
inc
fild
imul
test
sub
shl
call
stos
popa
inc
div
inc
(bad)
(bad)
fidivr
test
add
and
lea
mov
jle
outs
jge
push
mov
test
les
in
nop
jnp
and
adc
mov
or
jg
les
push
adc
sahf
les
push
or
das
jae
mov
pop
(bad)
push
rcr
mov
pop
jnp
scas
add
mov
cmps
jnp
sbb
fcom
jmp
in
lock
(bad)
(bad)
mov
movs
or
xchg
mov
xor
sub
fwait
ins
mov
xchg
mov
popa
sub
fwait
dec
xlat
loope
daa
test
mov
daa
imul
cld
mov
(bad)
mov
jns
sbb
push
mov
or
mov
je
sub
push
fild
cmp
mov
jmp
xchg
fist
fild
inc
adc
xor
test
mov
mov
push
ja
bnd
mov
fs
push
dec
ds
callw
repz
mov
stc
scas
xchg
add
stos
lds
mov
lea
jge
or
inc
jns
mov
mov
jbe
sub
fnstenv
mov
cmp
movs
or
jo
xchg
retf
cmp
jns
cs
mov
lahf
not
inc
pop
std
cli
(bad)
movs
mov
aam
daa
xor
sbb
pop
xor
xor
clc
pop
ror
pop
ret
inc
mov
js
push
add
and
sub
iret
(bad)
jle
ja
outs
lds
scas
add
sti
scas
xlat
fidivr
in
fst
rcl
or
add
dec
jnp
lods
data16
(bad)
xor
mov
icebp
inc
fstp
mov
aas
cmp
(bad)
push
ficomp
push
fwait
mov
jne
stc
mov
scas
outs
sbb
loop
sbb
aaa
sub
add
pop
test
nop
gs
aas
sbb
inc
ret
dec
push
jae
sub
push
sbb
xchg
rcl
(bad)
xchg
ds
cs
inc
pushf
mov
ret
mov
sbb
adc
sti
fldl2e
push
push
pop
ficom
inc
test
imul
shr
xchg
outs
stc
out
(bad)
aaa
jmp
out
(bad)
mov
iret
popf
cmc
push
cld
and
(bad)
xchg
mov
lea
cmps
mov
gs
mov
sbb
(bad)
xlat
dec
mov
imul
pushf
mov
mov
mov
mov
mov
icebp
push
sub
sub
add
cmp
lahf
aam
jno
and
dec
dec
pop
test
jns
aaa
stos
sbb
(bad)
scas
pop
cli
mov
mov
repz
xchg
dec
jno
enter
inc
std
(bad)
xlat
xor
dec
lea
aad
sub
xchg
fcomp
out
(bad)
xor
div
std
shr
xchg
sub
xlat
mov
mov
loopne
add
pop
sub
mov
shl
xchg
mov
jmp
fld
lahf
pop
inc
sub
jne
stos
mov
inc
adc
dec
ret
rol
sbb
fisttp
pop
xor
ret
xor
xchg
or
out
lea
xor
stos
sahf
mov
push
ret
popa
clc
call
clc
inc
sbb
daa
push
cmp
ret
mov
sub
shl
adc
sbb
mov
jne
adc
sbb
xchg
jecxz
shr
sbb
dec
pop
mov
enter
pop
sub
aas
inc
mov
fiadd
(bad)
fild
arpl
dec
mov
mov
cmp
addr16
inc
sbb
aaa
pop
das
mov
or
rcl
or
fcmovnb
pop
ja
call
inc
jp
repz
bound
xchg
dec
xor
xlat
sti
imul
ja
popa
outs
aam
mov
(bad)
xchg
cmp
je
mov
dec
mov
inc
aaa
mov
xor
sbb
ror
cmp
inc
lock
outs
pusha
jmp
fistp
mov
iret
add
fcom
fst
push
mov
cmp
outs
xchg
push
loop
(bad)
lahf
shl
scas
mov
ds
js
or
xchg
das
js
mov
lea
push
push
adc
lock
(bad)
aam
jnp
jb
sbb
jbe
aam
mov
retf
xor
mov
je
cmp
sub
jo
addr16
jne
mov
cdq
cmp
lods
dec
pop
mov
cwde
aaa
outs
sqrtps
outs
xchg
stos
mov
fwait
xchg
in
add
push
or
adc
mov
push
jnp
push
test
cli
shl
daa
(bad)
pop
and
hlt
mov
mov
or
xor
xor
movs
mov
fisttp
(bad)
dec
pop
sub
jmp
or
scas
popa
ret
cmc
aas
jg
and
mov
nop
je
xor
hlt
test
mov
pop
xor
mov
jns
cmps
mov
shl
push
in
cdq
ret
push
or
or
retf
not
jge
scas
shl
and
jmp
jmp
pop
inc
mov
fsub
or
or
in
mov
cmp
(bad)
call
sub
adc
pop
ret
and
arpl
add
outs
mov
clc
jbe
xchg
cmps
push
daa
pop
pop
push
frstor
fild
mov
lock
aaa
xchg
and
(bad)
xchg
add
xlat
jo
sub
sub
mov
xchg
jno
push
gs
das
icebp
jne
into
mov
rcr
push
das
fwait
pop
push
xchg
popf
(bad)
dec
mul
lods
ficomp
mov
ins
pop
adc
mov
jae
(bad)
aam
inc
pop
cmp
dec
(bad)
fwait
jns
adc
mov
fwait
push
push
push
xchg
in
cmp
dec
dec
inc
aas
inc
or
out
shl
mov
jg
shr
mov
mov
mov
jns
inc
inc
sub
neg
stos
mov
mov
pop
out
ins
arpl
sti
cmp
sar
xchg
int
sbb
loopne
xchg
jg
aas
div
sbb
out
cmp
mov
gs
sub
jmp
mov
jne
xlat
ud2
jl
mov
mov
mov
inc
push
outs
lahf
rcr
jbe
iret
cwde
fldpi
ss
call
adc
retf
add
pop
pop
mov
push
or
(bad)
add
fs
retf
or
mov
outs
movs
mov
ja
loop
sar
shl
icebp
retf
jb
cs
std
enter
ficomp
adc
jo
or
xlat
xor
inc
pop
jno
jl
push
shl
jo
mov
aad
wbinvd
mov
in
jmp
outs
jns
loope
call
sbb
jb
shr
mov
cmc
retf
not
sti
(bad)
in
sti
fadd
arpl
cmovb
dec
psubsb
test
test
mov
pusha
hlt
or
not
and
(bad)
jmp
add
fild
lahf
pop
or
jno
je
lock
je
retf
push
xchg
out
adc
inc
inc
cmps
xor
add
pop
loop
out
fild
fwait
stc
pop
inc
xor
push
mov
inc
xchg
sub
(bad)
aad
pcmpgtd
aaa
push
push
sbb
ret
sub
mov
test
cmps
loope
dec
in
sub
pusha
sub
cmp
scas
fiadd
mov
rol
jg
xlat
add
jb
mov
aas
cmp
shr
ffree
jns
mov
jne
(bad)
mov
aas
jae
stc
jne
and
jne
call
shl
stos
sbb
add
sbb
(bad)
rol
mov
jae
cmp
(bad)
fisub
jne
add
je
cmp
les
sub
mov
ret
mov
push
call
inc
push
xlat
mov
jmp
pop
dec
inc
pusha
ror
(bad)
sar
xchg
pop
or
cld
mov
in
lock
int3
les
mov
xlat
sbb
test
shl
cmp
mov
fcomi
push
out
sub
ins
add
addr16
push
fstp
jg
xchg
pop
push
cmc
aam
arpl
pop
fist
(bad)
sti
(bad)
mov
test
xchg
pop
xlat
add
mov
dec
lods
(bad)
movs
push
dec
clc
enter
or
add
add
adc
sub
add
sbb
(bad)
push
cmp
in
cs
dec
jecxz
or
test
lock
push
pusha
lods
dec
(bad)
mov
int
cmps
cmp
fst
ret
pop
out
test
jne
leave
mov
mov
out
cmp
stc
stos
sbb
lock
jae
xor
and
push
clc
cmps
pop
sub
pop
outs
jb
jl
mov
(bad)
xor
js
(bad)
das
pop
sbb
fimul
inc
(bad)
pop
adc
pop
stos
jo
imul
cmc
stos
jg
cmp
cmp
pop
mov
test
mov
jb
lahf
cmps
or
xor
or
fist
mov
test
fild
jg
fstp
aas
fistp
scas
ja
mov
outs
dec
mov
mov
das
adc
fcomip
test
psubw
dec
les
mov
sub
test
retf
lahf
pop
mov
sbb
jge
gs
jo
sub
out
lahf
push
outs
aas
sbb
mov
inc
jnp
mov
out
(bad)
shr
lock
pop
(bad)
push
idiv
xor
cdq
dec
imul
add
js
xor
jle
jns
retf
mov
cld
ins
xchg
out
jbe
xchg
inc
outs
sti
dec
push
imul
rcr
fnstenv
ja
movs
(bad)
sbb
sbb
outs
into
jmp
sbb
ds
mov
lea
retf
rol
out
mov
shl
add
addr16
fistp
fucomi
inc
outs
pop
imul
xchg
das
lock
mov
scas
test
lock
das
or
sub
fcomip
out
adc
pop
sbb
in
dec
mov
sub
jecxz
mov
test
mov
mov
add
xor
pop
xchg
inc
mul
mov
aaa
loopne
sub
and
pop
mov
push
xor
add
xchg
call
hlt
fld
fwait
pop
mov
outs
push
jl
mov
repnz
out
push
mov
xor
fld
(bad)
sbb
cld
lods
add
jmp
jg
xchg
add
sub
clc
add
mov
out
add
ffreep
mov
scas
aaa
mov
mov
dec
xchg
mov
mov
fist
sbb
sbb
xor
push
pushf
retf
mov
daa
out
mov
stos
jno
mov
jmp
push
(bad)
pusha
sbb
add
(bad)
fild
xchg
cmc
popa
push
sbb
xchg
pop
sbb
aaa
aas
sub
xchg
es
(bad)
popa
cmp
lds
push
daa
ret
pop
fist
fadd
dec
sbb
imul
scas
(bad)
jns
clc
ret
iret
jns
adc
scas
add
imul
dec
in
push
mov
cmps
dec
sbb
repz
iret
outs
mov
(bad)
clc
in
jl
jno
addr16
or
fwait
pop
icebp
fwait
push
add
shl
jmp
fadd
pushf
outs
push
adc
ss
cmps
push
out
jne
pusha
sub
cli
pop
iret
sti
lea
sbb
imul
xchg
sbb
mov
sti
std
mov
sub
sti
mov
repnz
mov
inc
gs
ins
je
pop
cmp
mov
jl
test
pop
cs
mul
mov
jg
push
pop
dec
inc
and
mov
lahf
push
(bad)
xor
aaa
(bad)
pop
into
adc
xor
push
cmc
mov
sub
ds
scas
fs
xchg
js
jbe
mov
or
lahf
std
aaa
sbb
pop
pop
movs
repz
push
inc
call
ss
cmp
in
push
outs
mov
dec
fnstenv
out
xlat
push
fcomip
fcomi
and
fstp
push
jecxz
int3
inc
sbb
shr
adc
xchg
stc
pop
imul
ret
xchg
inc
shl
stc
dec
jg
aaa
ins
cld
shl
push
xor
cmp
(bad)
inc
mov
xlat
jl
bound
mov
mov
jle
add
rol
jmp
lea
sub
lods
mov
mov
cs
test
mov
inc
dec
fcom
jg
xlat
dec
xor
int3
in
daa
das
nop
cdq
mov
mov
clc
mov
stos
fidiv
or
mov
repz
mov
sbb
imul
dec
xchg
push
jno
add
popa
or
loope
jb
dec
fistp
cmp
cmp
mov
out
neg
ret
mov
dec
ins
add
xor
stos
lock
pop
cmp
sbb
dec
push
pop
mov
dec
fwait
dec
and
out
mov
mov
test
scas
stos
repz
cli
add
xchg
aam
sub
call
lahf
mov
ret
push
jb
rcl
retf
mov
sbb
mov
sbb
sub
ror
sbb
clc
out
cs
jne
dec
pop
adc
add
jns
je
jmp
jne
mov
daa
jl
push
(bad)
das
adc
mov
mov
pusha
(bad)
fucomip
out
(bad)
das
jne
sbb
push
ror
jp
repnz
add
lds
push
aaa
cmp
test
push
std
jmp
jecxz
test
jne
push
imul
mov
mov
shl
sar
icebp
fisubr
jle
ror
sub
(bad)
dec
xchg
adc
dec
dec
stc
call
movs
add
mov
ret
pop
sub
lock
cmp
into
retf
mov
push
pop
cmc
push
aaa
sbb
mov
popf
repz
adc
add
arpl
addr16
loope
sbb
or
adc
adc
pop
mov
call
mov
ret
mov
in
inc
popf
push
aaa
inc
addr16
lahf
and
push
stos
mov
mov
mov
stos
mov
sub
inc
aaa
or
mov
mov
pop
stos
ds
movups
es
inc
call
je
test
or
mov
dec
sbb
cmp
stos
(bad)
push
je
repz
pop
aam
stos
jmp
adc
idiv
call
daa
sbb
xchg
add
call
adc
push
sbb
push
out
sbb
jmp
retf
and
pop
jg
lods
cld
cmps
xor
mov
pop
outs
les
jo
ret
sbb
jnp
push
sub
(bad)
dec
sub
push
inc
sbb
je
retf
imul
retf
mov
inc
pop
ss
retf
cmp
fadd
test
and
(bad)
push
retf
mov
xchg
xor
or
sub
push
aaa
popa
and
mov
xor
mov
jmp
pop
mov
pop
(bad)
mov
sti
cmps
iret
scas
cmp
mov
jl
jne
les
dec
mov
sbb
es
sti
lods
mov
and
inc
xlat
pop
rol
mov
fist
mov
data16
sbb
pop
cli
push
test
fld
add
jecxz
pop
rcl
std
jmp
pop
in
sub
mov
add
call
retf
adc
(bad)
addr16
fs
dec
cmp
cmps
ret
pusha
mov
mov
jne
je
mov
das
mov
pop
ins
add
pop
dec
(bad)
jg
cmps
jmp
jp
repz
mov
ret
mov
pop
mov
clc
xchg
adc
ja
mov
xchg
cmp
in
jo
das
fdiv
mov
xchg
jnp
adc
lods
adc
call
inc
dec
loopne
dec
pusha
aaa
test
das
jg
out
aaa
fwait
cmp
test
sahf
rcl
pop
xchg
repz
and
data16
cli
call
ret
add
aam
loope
mov
repnz
xchg
xlat
hlt
int3
lds
lods
xchg
outs
fcmovnbe
push
mov
call
adc
call
or
inc
out
mov
cmp
(bad)
(bad)
xchg
add
xchg
add
or
sbb
and
clc
test
mov
jnp
xchg
mov
adc
dec
sub
fisttp
cmp
jp
aam
cli
push
stos
adc
mov
sbb
adc
mov
outs
jb
popa
mov
push
std
jae
mov
pop
jg
fimul
mov
push
fsubr
vmwrite
pop
popw
xor
sar
neg
mov
loopne
xlat
popf
out
push
mov
push
jno
cmps
inc
les
das
pushf
sti
ja
pop
jne
fwait
and
and
jne
dec
std
fnsave
das
jo
mov
sub
or
push
mov
fdiv
xchg
lock
inc
mov
outs
sub
add
retf
test
add
pop
xchg
push
pop
mov
add
mov
jecxz
clc
jae
lds
mov
arpl
push
pop
fmul
and
aaa
in
loopne
xchg
call
mov
adc
je
push
(bad)
fild
retf
imul
mov
(bad)
sub
ror
popa
fcmovne
aaa
sbb
cmp
sti
fsubr
inc
fcmovnb
pop
fdivr
in
iret
push
jle
shr
jl
pop
ror
repz
fwait
ss
cmp
andps
jo
sbb
add
loop
ins
mov
arpl
sar
iret
call
pop
(bad)
in
fmul
je
sbb
and
mov
and
xor
fs
sub
or
leave
push
in
fs
mov
pop
add
mov
mov
mov
repnz
jecxz
sahf
mov
add
loop
lahf
jl
ja
pop
daa
sub
aas
addr16
sti
loope
loope
scas
hlt
sbb
imul
stos
daa
imul
cli
mov
les
stos
sti
orps
push
inc
gs
(bad)
jmp
daa
xchg
dec
cmc
dec
cld
jmp
mov
mov
push
call
cs
out
cmp
(bad)
pop
fild
in
lahf
mov
addr16
or
shr
sub
iret
(bad)
shl
xlat
pop
xchg
inc
push
addr16
in
clc
sub
stos
sbb
add
cmp
pop
imul
sub
push
clc
add
call
retf
(bad)
lods
push
(bad)
mov
adc
xchg
stc
adc
pop
fs
dec
enter
jg
dec
adc
push
jecxz
sbb
push
mov
inc
dec
add
add
frstor
mov
cs
sub
mov
ins
frstor
jecxz
(bad)
shl
mov
in
cmps
pop
and
mov
pop
push
fsub
mov
inc
push
jg
mov
xor
dec
sbb
ror
adc
call
iret
mov
inc
jg
(bad)
in
push
fistp
ret
pop
hlt
loope
cli
(bad)
outs
daa
pop
sbb
jg
pop
mov
sub
cmp
arpl
sbb
xchg
shr
mov
dec
rcl
(bad)
jecxz
pop
imul
push
jns
sti
test
shl
xchg
dec
fcomi
add
js
or
xchg
pop
pop
fstp
pop
push
xchg
cmp
inc
nop
add
(bad)
bnd
cmp
cmp
int3
mov
imul
mov
adc
mov
repnz
rcr
or
retf
or
in
jecxz
shl
shl
mov
lahf
adc
scas
ret
inc
inc
ret
and
repnz
lods
fdecstp
cmp
fwait
or
xor
jne
jo
inc
loope
lods
daa
push
mov
mov
cwde
in
cld
scas
pop
or
mov
fcmovnbe
rcr
mov
fcmovnbe
ficomp
jmp
repnz
dec
xchg
push
xchg
xlat
inc
loop
mov
out
jo
jns
mov
mov
(bad)
or
aas
pop
outs
inc
dec
xchg
inc
dec
mov
fwait
aaa
fs
lds
lock
jne
das
daa
mov
lock
test
clc
shr
sti
push
push
sbb
ja
mov
in
mov
shr
dec
jo
ret
cmovns
sub
stos
les
xchg
mov
gs
test
adc
mov
inc
xchg
mov
fchs
pop
jno
gs
pop
or
xor
dec
aas
jae
push
loop
out
and
push
mov
mov
xchg
mov
or
mov
ja
adc
pop
xor
fwait
stos
aas
lds
jle
retf
jmp
(bad)
(bad)
test
add
cmp
(bad)
pop
or
inc
mov
pop
loopne
lea
ins
not
pop
jae
push
dec
rol
pinsrw
adc
or
cmp
cmps
push
ins
sbb
mov
lods
jae
xchg
sub
in
mov
xchg
gs
fild
clc
pop
lock
push
xor
xor
arpl
stos
or
pop
jmp
les
sbb
add
inc
fnsave
stos
call
cmp
call
jge
mov
push
lds
push
cld
pop
loopne
ret
push
(bad)
jb
xor
inc
stos
(bad)
xor
pop
add
mov
loope
aaa
fwait
pop
js
and
sar
movs
addr16
mov
sbb
(bad)
scas
mov
mov
cmp
popf
pop
(bad)
mov
addr16
lods
push
test
pop
je
mov
jnp
and
ins
pusha
add
jo
pusha
adc
xor
mov
pop
inc
(bad)
or
sub
pop
pop
inc
addr16
ds
pop
inc
in
scas
cmp
sub
inc
int
or
mov
xor
pusha
aad
fwait
jg
sbb
arpl
or
jge
dec
nop
je
xchg
jnp
mov
in
push
jmp
push
push
cmps
xchg
fidivr
loope
xchg
dec
xor
ret
(bad)
cmps
outs
aam
arpl
scas
fwait
loope
rol
fldcw
mov
addr16
xlat
xchg
mov
xor
rol
mov
xor
mov
inc
push
xchg
cdq
loope
(bad)
dec
int3
push
cmp
fwait
xor
fistp
fnstenv
pop
aaa
jne
repnz
fld
std
mov
cmps
dec
mov
inc
adc
pop
sub
(bad)
ds
and
xchg
inc
jg
iret
cmc
pop
ret
adc
ret
icebp
or
cmps
ret
retf
lahf
or
add
fadd
idiv
movs
cli
mov
pop
xor
adc
(bad)
cmp
jmp
jg
mov
aaa
mov
mov
dec
add
inc
aad
jg
push
repz
mov
mov
call
inc
adc
xor
pop
or
aas
inc
or
repz
daa
add
dec
int3
xchg
lea
pop
lea
stc
stos
mov
xchg
add
outs
mov
xlat
xor
loop
cmp
enter
xor
push
xor
and
push
aad
or
mov
imul
pop
push
sbb
pop
add
js
push
ja
push
cwde
cwde
xlat
mov
mov
invd
ret
pop
and
(bad)
add
sbb
xor
adc
push
(bad)
pop
push
icebp
(bad)
enter
push
mov
push
(bad)
mov
das
fs
test
sbb
ds
movs
pushf
push
scas
xor
iret
outs
lds
sbb
cwde
jg
(bad)
cmp
(bad)
outs
sar
pop
inc
xor
cmp
(bad)
(bad)
jp
adc
fisttp
adc
sti
jecxz
mov
adc
xor
ficom
lods
mov
cmc
sbb
pop
cmp
jne
loop
outs
add
sub
sbb
loope
sti
pop
movs
jg
jl
ja
js
(bad)
or
dec
dec
fsub
mov
mov
cld
mov
cmp
inc
mov
push
jg
push
bound
sub
loope
xor
ins
or
cmps
aam
(bad)
push
fcmovu
(bad)
mov
mov
test
push
(bad)
adc
adc
mov
pop
fcom
xor
lds
ins
jo
or
jae
rep
mov
dec
fs
pop
daa
lods
call
out
mov
cmc
and
mov
int3
jmp
push
cdq
lahf
fisttp
scas
fwait
push
sahf
inc
sbb
ss
mov
jg
cs
and
ins
jmp
in
std
sbb
inc
iret
fisttp
out
adc
pushf
aaa
ins
mov
daa
dec
das
repnz
sbb
not
inc
mov
mov
add
add
pop
xchg
dec
and
mov
mov
movs
mov
imul
bound
std
or
loopne
xchg
push
stos
ds
xor
out
cmps
add
stos
aas
jae
shr
test
xor
outs
js
mov
add
pop
lods
jns
dec
push
or
cmp
add
jne
mov
outs
and
lahf
add
mov
pusha
les
imul
cmp
outs
les
jmp
fwait
dec
imul
jae
in
ret
inc
pop
sbb
sar
cmp
fadd
retf
and
or
dec
fnsave
cmps
fucomp
cmp
or
outs
pop
mov
sbb
mov
adc
pop
mov
xchg
sbb
mov
pop
inc
std
shl
ins
repnz
inc
dec
repz
xor
in
(bad)
loope
loopne
aaa
push
stos
add
pop
or
sub
daa
mov
mov
jbe
clc
int
adc
cmp
mov
xchg
mov
mov
jl
add
mov
loopne
inc
xchg
imul
push
pop
loop
mov
dec
into
sti
ret
fcomip
adc
push
imul
mov
mov
adc
loope
jae
sbb
daa
or
scas
clc
sbb
test
mov
test
or
jmp
lods
jo
cmc
dec
hlt
mov
cmp
(bad)
lods
inc
arpl
mov
xchg
xor
xchg
sub
jns
nop
das
fiadd
sub
stos
(bad)
mov
clc
add
dec
fcom
mov
inc
mov
jns
fbstp
mov
push
call
inc
hlt
mov
dec
xchg
sub
arpl
lahf
jae
sar
mov
clc
xor
iret
sbb
add
adc
dec
das
adc
mov
mov
fcom
sub
or
add
pushf
lods
mov
sbb
or
pop
pop
sti
mov
lahf
sbb
ja
jmp
sbb
or
sbb
inc
xchg
sar
popa
shl
dec
lea
ret
ins
inc
jnp
ror
inc
out
js
cs
xchg
add
jae
loop
and
addr16
in
js
mov
loopne
es
mov
out
loopne
or
in
sub
push
mov
xor
aad
adc
mov
xor
ins
popa
js
push
mov
call
cld
outs
mov
xlat
fcmovnbe
jae
cmp
xor
mov
(bad)
mov
adc
arpl
inc
cmp
and
xchg
mov
test
jmp
inc
shl
sti
push
outs
loopne
jo
dec
in
pop
mov
sbb
retf
adc
jge
mov
sti
lahf
mov
hlt
clc
sbb
scas
mov
cs
adc
sbb
push
(bad)
fucomip
mov
ret
adc
adc
xchg
and
(bad)
sub
sub
jbe
std
nop
sbb
(bad)
bound
jl
clc
mov
inc
jg
ror
mov
aaa
sbb
imul
add
ss
jb
inc
shr
lods
pop
(bad)
shl
scas
out
inc
std
out
or
shr
fild
mov
ficomp
test
out
mov
shl
mov
xlat
xlat
adc
fsubr
pop
fcomi
scas
dec
cmp
cmps
fdiv
sbb
xchg
lods
sbb
in
inc
les
jge
push
ins
aaa
stos
add
xchg
adc
push
mov
lahf
and
or
in
lahf
ins
inc
fwait
gs
or
aam
and
arpl
cdq
cwde
dec
das
and
retf
jp
imul
xor
xchg
mov
mov
mov
shr
add
icebp
pop
cmp
sub
pushf
mov
cmp
mulps
push
retf
and
pop
call
(bad)
jecxz
jb
aas
add
ds
inc
int3
mov
mov
pop
cmps
iret
hlt
out
cmps
cwde
jp
jle
adc
mov
pop
xor
xlat
xor
ror
mov
sub
adc
cli
je
lock
imul
or
daa
mov
mov
fbld
mov
add
jbe
retf
fisttp
mov
dec
inc
mov
add
xor
outs
adc
sbb
pop
xor
fstp
pop
imul
shr
push
les
std
mov
(bad)
xchg
mov
adc
pop
mov
or
dec
ss
dec
lods
call
xchg
gs
repnz
push
lods
and
aaa
(bad)
stc
pop
loopne
jns
clc
mov
test
mov
adc
outs
adc
mov
pop
fisubr
inc
xchg
inc
inc
mov
mov
sub
pop
adc
gs
retf
pop
xchg
iret
(bad)
jmp
fs
das
push
or
and
fist
stos
push
lods
sbb
mov
cmp
addr16
cld
push
jecxz
mov
or
arpl
inc
mov
addr16
in
mov
sbb
dec
add
leave
or
dec
pop
or
fwait
push
sbb
adc
mov
cmps
mov
repz
cmc
fwait
xchg
add
adc
push
adc
cli
mov
out
push
add
xchg
fild
mov
push
mov
pop
shl
je
push
pop
and
sub
fisttp
in
sti
lods
iret
jl
xchg
inc
sub
sub
mov
and
or
xchg
clc
inc
inc
mov
mov
cmpps
ret
stos
pop
push
ins
lea
jo
push
pop
sbb
test
push
ficom
xchg
inc
gs
and
xchg
outs
push
pop
jne
call
call
mov
xlat
or
add
inc
dec
ins
hlt
add
call
jns
sub
iret
sbb
cmps
loopne
or
lahf
jbe
pop
sbb
mov
dec
xlat
test
aam
mov
sub
jg
retf
aas
clc
pop
fs
stos
icebp
xchg
or
pop
cmp
push
retf
stos
sub
push
jp
xchg
pop
stos
fwait
(bad)
jns
enter
adc
icebp
div
xchg
fisubr
mov
jmp
push
lods
jns
hlt
jne
(bad)
(bad)
fistp
les
sub
not
shl
inc
loopne
sti
loop
fild
maxps
or
rcr
lods
sub
mov
xchg
aad
gs
add
loop
mov
(bad)
sub
jg
add
cmp
and
add
mov
mov
aas
fmul
inc
jns
xlat
push
hlt
mov
mov
xor
and
movs
(bad)
adc
inc
movs
mov
fistp
dec
push
out
shl
les
out
loop
adc
mov
in
or
adc
stos
xor
jmp
inc
or
mov
cmc
or
xchg
loope
push
test
push
ja
cmp
ror
les
push
mov
dec
or
test
icebp
iret
ret
push
jp
loop
or
imul
xchg
pop
fild
mov
cli
or
xlat
(bad)
stos
fbstp
fwait
push
loop
aam
pop
pop
js
ja
scas
sbb
bound
mov
std
push
and
jmp
inc
dec
rcl
push
jg
outs
jne
inc
jmp
imul
sbb
mov
xlat
call
ror
or
inc
sbb
mov
test
inc
clc
fild
jmp
enter
push
test
out
inc
push
fwait
fs
push
rcr
dec
and
jae
arpl
das
mov
aaa
std
push
pop
call
(bad)
mov
mov
enter
repnz
ins
push
in
loope
mov
fldenv
fisttp
adc
adc
hlt
mov
imul
clc
sahf
ins
push
fild
loope
xor
mov
addr16
mov
stos
ret
adc
mov
pop
cmp
mov
cmp
fldz
ja
sbb
into
xchg
pop
icebp
cmps
sbb
pop
mov
fcom
mov
imul
adc
mov
fnstcw
xor
aaa
mov
mov
xchg
out
loopne
mov
sub
mov
add
lahf
push
sahf
test
(bad)
xchg
add
cli
sar
add
repnz
cmp
push
jnp
(bad)
div
aam
(bad)
call
retf
inc
test
mov
mov
in
jae
mov
imul
psubb
ret
mov
inc
pop
ffreep
ror
fwait
push
inc
fs
aaa
sub
(bad)
(bad)
dec
int3
xlat
rcr
inc
loop
sbb
push
pop
aam
test
lahf
sbb
(bad)
loop
ficomp
aad
cmps
mov
inc
das
imul
pop
sub
aas
and
dec
in
mov
or
scas
add
imul
sbb
mov
push
adc
pandn
xchg
jecxz
mov
xchg
lods
jnp
or
out
lods
add
bound
pop
loopne
jecxz
pop
ret
inc
mov
(bad)
xor
repz
jns
outs
aam
or
jg
xchg
shr
jne
rcr
cmp
mov
addr16
push
mov
adc
mov
enter
pop
cmps
(bad)
ret
hlt
gs
xchg
sti
aaa
push
push
fwait
ins
inc
packssdw
mov
dec
add
dec
sbb
aaa
mov
jbe
fisttp
fucomip
adc
xlat
fistp
or
or
mov
ltr
inc
jae
xor
cmc
mov
out
xchg
aad
inc
outs
bound
mov
stos
ja
jp
popf
xor
adc
inc
mov
movs
ficom
ins
dec
sub
nop
push
mov
(bad)
fild
sub
sub
pop
out
xchg
add
sub
sbb
stos
xchg
div
jo
jnp
cmps
or
arpl
int3
repz
sti
xlat
sbb
cmps
xor
inc
pop
pop
(bad)
or
adc
nop
jmp
mov
ja
test
test
les
lods
jmp
mov
xor
retf
xchg
ja
fwait
sub
mov
sub
push
add
les
push
(bad)
jo
xchg
jmp
push
inc
xchg
bndldx
sub
xlat
push
mov
jne
inc
addr16
pop
add
popa
mov
pop
call
leave
fnstenv
mov
push
inc
inc
inc
arpl
rcr
std
mov
(bad)
call
mov
push
mov
shl
mov
gs
inc
test
or
fiadd
dec
adc
pop
xchg
or
xchg
push
pop
retf
sub
mov
xlat
aam
stos
test
sbb
inc
arpl
pop
mov
fld1
(bad)
adc
jmp
psrad
(bad)
push
mov
rcr
xchg
inc
jmp
mov
je
adc
mov
sbb
neg
inc
dec
(bad)
std
repz
ins
ja
xchg
push
inc
jmp
stos
cmp
aaa
cmp
or
jns
(bad)
aas
inc
dec
aad
icebp
add
add
or
xrelease
mov
sub
fcmovbe
aaa
xchg
lds
jne
adc
js
push
push
movs
call
mov
mov
movs
cmp
ins
mov
jnp
jg
jmp
add
mov
sbb
mov
xchg
or
or
pop
jb
stos
das
add
fisubr
aam
in
pop
mov
xor
xchg
push
in
scas
movs
pop
jmp
pop
push
js
mov
sar
jl
inc
inc
sub
push
sub
cld
lahf
jg
mov
(bad)
in
jnp
call
xchg
sub
fstp
and
xor
repz
pmulhuw
inc
pop
fisubr
sbb
test
or
pop
neg
pop
jp
jg
sub
dec
frstor
js
int3
add
push
pop
sbb
outs
cmp
es
push
(bad)
add
inc
scas
imul
sbb
retf
out
aam
cmp
clc
rol
es
push
call
das
test
cmp
out
dec
cli
push
pop
jmp
adc
push
daa
add
mov
outs
lahf
mov
cmp
mov
arpl
pop
sub
lods
xchg
gs
es
sub
and
add
add
js
xchg
jle
rol
imul
sub
rcl
jne
jecxz
or
nop/reserved
scas
repz
jbe
mov
mov
pop
outs
inc
xchg
aad
sub
push
out
and
push
daa
sbb
aam
mov
daa
add
sub
sbb
xchg
sbb
pop
fisttp
sub
mov
hlt
push
movs
loopne
lahf
jge
aaa
adc
xor
mov
or
std
(bad)
mov
mov
scas
add
sbb
xlat
cli
fild
fwait
mov
add
cmc
retf
add
retf
add
lods
mov
(bad)
stc
adc
ror
jnp
mov
inc
aam
daa
push
(bad)
lea
outs
test
pop
xor
out
clc
repnz
adc
addr16
cmp
test
jge
sti
les
pop
test
xor
mov
pandn
xor
jo
jle
pop
stc
idiv
cwde
loope
mov
je
xchg
pop
jecxz
fcom
ret
xor
daa
dec
cwde
and
pop
and
or
push
sbb
cmp
out
jns
mov
pop
std
push
ins
or
jle
fwait
arpl
loope
pop
pop
push
xor
dec
mov
test
inc
xchg
sub
arpl
fistp
imul
add
push
adc
loope
dec
jo
pop
or
ror
pop
mov
jno
jg
aad
pop
mov
pop
js
shl
dec
pop
test
test
scas
test
jb
sti
jo
add
jle
push
sbb
inc
mov
fnstsw
not
jmp
push
xchg
xlat
retf
or
ror
fild
out
test
fisub
sbb
mov
mov
cmp
addr16
push
push
aaa
pop
dec
and
mov
fwait
sub
das
xchg
push
xchg
mov
inc
or
enter
gs
adc
mov
pop
sar
ror
mov
movs
pop
mov
lods
inc
rcl
inc
repz
or
and
sub
xchg
clc
xchg
jle
(bad)
jae
js
out
fwait
pushf
std
sub
fnstsw
jp
mov
or
mov
loop
jp
das
mov
les
push
test
sub
loopne
inc
mov
(bad)
add
push
push
jl
mov
clc
or
jge
mov
push
shr
lock
fisub
fadd
pop
cmp
fwait
add
in
inc
(bad)
jae
jbe
add
inc
stos
sub
inc
fstp
and
dec
sub
mov
pop
mov
ret
ins
push
imul
mov
jbe
adc
std
cmp
jae
jnp
rcl
sbb
xchg
xchg
jae
push
bound
(bad)
fcom
mov
push
std
outs
out
or
mov
jne
fdiv
inc
mov
push
arpl
cmp
mov
ss
add
(bad)
out
push
jmp
rcl
mov
mov
jno
push
pop
jmp
pop
mov
cmp
jg
fild
pop
ss
jno
fld
scas
mov
fwait
fwait
mov
daa
sbb
jo
pop
(bad)
fs
or
and
xchg
dec
xor
sbb
out
or
nop
sbb
adc
push
xchg
ds
or
lahf
daa
mov
mov
aaa
fistp
pop
clc
pop
aad
sti
outs
jnp
mov
leave
xchg
ins
test
dec
mov
mov
add
xor
aaa
pop
shl
pop
xlat
cmp
lahf
xchg
cmp
fwait
xor
fcomi
repz
fbld
repz
test
dec
pusha
pop
call
inc
(bad)
bound
in
push
add
push
icebp
lahf
pop
add
(bad)
lods
call
pushf
cmps
clc
repz
xchg
mov
clc
fnsave
mov
call
outs
adc
int3
or
mov
cli
or
jae
mov
add
aas
mov
cli
mov
sbb
add
and
sbb
push
mov
push
mov
retf
pop
mov
arpl
mul
cdq
mov
push
rcr
fcmovnb
das
xor
adc
ja
add
bound
lds
adc
stos
pop
loop
(bad)
scas
jo
jb
push
aaa
(bad)
sti
repz
ins
mov
xsavec
jbe
or
mov
push
out
push
ror
inc
leave
mov
outs
dec
test
jg
arpl
test
and
sahf
loope
jp
test
shl
mov
and
cvtps2pi
sar
mov
xchg
mov
iret
fcomip
adc
adc
rol
out
mov
xor
daa
lods
daa
mov
jle
jle
ret
call
retf
pop
push
add
cmp
push
fstp
sub
dec
(bad)
or
scas
push
push
les
mov
xchg
cmp
or
add
movs
outs
jmp
(bad)
iret
imul
pop
mov
frstor
pushf
fwait
test
add
mov
sub
xchg
ds
hlt
cmps
outs
push
aas
fwait
or
arpl
mov
enter
adc
lods
push
jge
outs
push
jg
fist
sbb
popa
pop
mov
sub
mov
add
inc
sub
into
push
ja
aas
(bad)
and
or
mov
adc
sti
push
jae
mov
jns
or
in
mul
cmp
outs
movs
test
or
out
hlt
int
mov
adc
mov
retf
(bad)
sbb
sbb
out
out
fmul
stos
in
jmp
lods
pop
pop
xchg
sbb
xchg
sub
sub
jecxz
retf
inc
jno
sbb
push
sbb
(bad)
jns
retf
or
pop
mov
jg
sub
jne
aam
sar
fild
push
aas
fcmovu
xchg
aad
cmp
addr16
ja
adc
daa
outs
push
xchg
clc
(bad)
call
(bad)
stos
inc
sti
mov
(bad)
dec
jle
add
dec
es
fist
loopne
push
xor
mov
jbe
mov
dec
or
(bad)
pop
ret
inc
jns
jnp
mov
pop
add
cmc
stos
jle
cmps
xlat
das
test
sbb
outs
mov
or
jmp
pop
add
jl
faddp
inc
pop
push
pop
arpl
push
stos
pop
shl
out
pop
sub
fwait
loop
hlt
xchg
or
lea
nop
addr16
dec
icebp
mov
push
inc
pop
add
add
and
loop
mov
aas
clc
ror
push
cmp
loope
cld
push
cmp
adc
mov
push
ss
jmp
retf
mov
pop
xchg
push
pop
(bad)
lahf
lds
(bad)
lea
mov
mov
aaa
add
call
inc
xchg
ja
cmp
lods
lea
pop
mov
cmp
mov
or
inc
std
out
pop
add
aaa
retf
fs
movs
mov
cmp
pop
stos
mov
push
and
stos
aas
in
aaa
loop
call
inc
into
jno
mov
or
pop
iret
test
and
fwait
je
mov
cmp
inc
add
call
jp
mov
and
add
push
pop
aam
pop
sbb
jecxz
les
call
or
(bad)
rcr
adc
inc
pop
sbb
jb
push
pop
iret
scas
cdq
or
mov
stos
push
add
jns
ins
mov
mov
fimul
call
pop
jmp
sub
div
pop
push
clc
outs
test
imul
iret
ja
mov
retf
test
fwait
dec
adc
push
xor
(bad)
and
fnstsw
cmc
jecxz
adc
fprem
hlt
iret
movs
addr16
xlat
xor
outs
les
bnd
cwde
cmp
(bad)
fld
mov
sbb
loop
sbb
jle
out
leave
jmp
mov
mov
aaa
adc
outs
inc
in
xor
add
imul
retf
jbe
fild
(bad)
jmp
push
dec
xor
add
ja
push
jns
loope
ficomp
popw
mov
aam
gs
and
inc
or
sub
mov
mov
xor
out
xchg
shl
addr16
sbb
addr16
dec
loop
pusha
ficomp
and
sti
nop
sbb
mov
dec
lock
pop
dec
lds
inc
cmp
leave
ss
cmp
jne
cli
adc
or
ins
cld
stc
xchg
enter
scas
arpl
jg
clc
in
add
inc
dec
inc
ja
rol
ret
mov
or
jmp
inc
mov
mov
dec
inc
outs
jl
xchg
(bad)
mov
inc
add
or
mov
pop
pop
mov
call
mov
add
mov
(bad)
fucomip
sbb
out
jecxz
adc
or
jae
dec
sub
push
xchg
and
rol
jg
mov
inc
aaa
mov
and
in
xor
(bad)
cmp
jnp
ret
loopne
add
mov
pop
mov
or
stos
lahf
xor
inc
test
call
jae
rcl
push
mov
rcl
push
inc
movs
pop
pop
xor
xchg
loopne
sbb
icebp
or
inc
sbb
add
inc
cmp
lahf
and
xor
test
dec
jns
jo
sbb
in
(bad)
bound
inc
mov
(bad)
test
(bad)
in
or
jle
shl
mov
mov
arpl
pusha
fdivr
xchg
sub
mov
jbe
fist
pusha
imul
push
sti
in
inc
fimul
stos
jmp
or
mov
push
jae
push
add
ret
repz
fstp
cmc
xor
add
push
jo
sbb
aad
aas
push
jmp
out
xchg
xor
mov
icebp
(bad)
repnz
imul
stos
push
fdiv
lods
cli
add
not
sti
lock
jno
jmp
sub
inc
cdq
mov
xchg
mov
dec
lods
push
movs
jmp
cmp
add
retf
mov
out
daa
jle
mov
cdq
inc
or
xlat
neg
and
push
rep
dec
jo
xchg
out
cmp
fild
mov
das
add
push
jmp
scas
sub
mov
add
ja
dec
jne
(bad)
retf
imul
pop
jmp
pop
out
xor
mov
inc
(bad)
sub
push
lahf
add
push
inc
mov
js
jg
mov
mov
shr
imul
mov
mov
push
jnp
jp
clc
jne
mov
and
pop
inc
call
dec
xlat
lods
aaa
cmps
pop
jnp
xchg
jecxz
sbb
scas
xlat
mov
(bad)
test
cmc
cmp
pop
call
outs
dec
fnsave
pop
jnp
and
xor
nop
add
sub
fcmovnbe
cmc
sub
jnp
xchg
neg
dec
pop
aaa
fwait
loope
adc
cmp
daa
inc
add
adc
add
out
les
inc
push
sbb
ja
mov
add
jg
jne
repz
out
stos
rcr
or
jl
ss
arpl
xchg
push
lds
add
inc
imul
loope
ret
fbstp
add
fwait
fwait
jns
sti
adc
adc
stos
cmp
retf
addr16
outs
adc
xchg
pop
pop
cmc
enter
adc
pop
pop
push
sub
sub
adc
pop
lahf
rcl
pop
mov
bound
js
(bad)
ins
outs
aad
mov
push
dec
(bad)
cmova
cdq
xlat
jb
pop
ret
pop
sub
or
add
das
push
(bad)
loop
xlat
loop
mov
mov
dec
push
stc
add
movs
pop
loope
push
sbb
add
jecxz
(bad)
ffreep
std
jae
add
ins
cmp
(bad)
loopne
sub
and
lds
retf
xchg
cld
sub
(bad)
or
adc
clc
outs
in
out
outs
sbb
inc
ret
sbb
xor
and
les
aad
xchg
mov
sbb
mov
outs
cmp
push
xchg
push
add
adc
arpl
push
aaa
(bad)
sbb
jge
push
out
cmps
jae
pushf
cli
dec
mov
mov
test
sti
in
or
emms
outs
mov
loopne
leave
push
das
jge
sbb
mov
or
sub
mov
mov
cmps
and
movs
xor
pop
out
(bad)
inc
das
sar
jnp
lea
out
adc
adc
mov
push
enter
mov
sbb
pushf
fild
jp
test
jmp
adc
inc
sbb
adc
mov
fimul
(bad)
aam
and
mov
icebp
mov
push
and
fs
ret
inc
fild
(bad)
cmp
movs
pop
int
jg
jmp
addr16
pop
adc
fbld
aaa
mov
or
mov
aam
sbb
retf
pop
sub
push
(bad)
cmp
jo
(bad)
shr
lahf
mov
sbb
(bad)
cmps
add
(bad)
aaa
lods
neg
or
mov
xchg
je
gs
loope
mov
dec
jo
fwait
dec
adc
loope
ret
mov
call
inc
icebp
xchg
push
out
jo
push
lea
dec
and
adc
sub
jp
sbb
jge
xor
mul
call
stc
sbb
outs
pop
aaa
fwait
sbb
jg
test
sub
adc
mov
fwait
mov
sub
loope
jb
mov
or
fisubr
retf
outs
popf
std
xlat
leave
mov
cmp
adc
sub
mov
retf
cs
sar
xchg
push
xor
inc
push
mov
push
pop
mov
inc
sbb
or
jb
ror
jecxz
ficomp
ret
mov
xor
pop
lock
add
popa
jae
dec
arpl
add
and
pop
cmp
mov
jnp
add
ins
mov
addr16
push
xchg
scas
mov
arpl
addr16
mov
rcl
jmp
arpl
outs
mov
pop
mov
fyl2xp1
push
jp
push
inc
loope
or
add
imul
dec
stos
test
mov
das
bound
sbb
dec
mov
mov
shr
pop
sti
mov
cmps
push
or
inc
push
dec
pop
sub
pusha
mov
fwait
outs
xchg
in
outs
jmp
mov
iret
add
adc
in
outs
aas
push
jns
mov
mov
xchg
imul
sbb
lahf
repz
add
idiv
lock
in
push
fisttp
push
ret
xchg
inc
repz
test
jmp
sbb
inc
lock
inc
and
jecxz
repz
adc
xchg
shl
ins
aas
and
add
inc
mov
lods
push
push
mov
loop
test
sub
dec
jnp
and
idiv
add
imul
jne
xchg
xor
inc
sub
arpl
dec
dec
and
fld
neg
mov
out
fcom
add
sbb
out
nop
pop
mov
hlt
mov
sti
jne
add
xchg
fidiv
push
(bad)
loop
mov
sahf
imul
mov
(bad)
fcomp
mov
inc
fsub
sbb
pop
(bad)
movs
call
movs
add
add
mov
shr
outs
stc
pusha
xlat
ja
push
sbb
mov
mov
rcl
stos
adc
outs
cmps
mov
test
cmp
jo
mov
int
ret
lds
push
push
les
aaa
outs
mov
fcmovnu
sbb
ja
retf
inc
gs
nop/reserved
mov
inc
adc
inc
sub
jmp
mov
jmp
sub
lea
pusha
sub
icebp
or
popa
out
in
sti
jg
ins
xor
sbb
jbe
(bad)
out
pslld
lea
dec
mov
fbstp
popa
pop
xor
ins
xchg
jg
outs
and
xchg
aaa
push
sub
mov
xchg
(bad)
jmp
mov
xchg
sub
sbb
inc
outs
mov
loopne
(bad)
(bad)
call
(bad)
shr
je
addr16
pop
pop
loop
mov
(bad)
mov
and
outs
(bad)
addr16
enter
xor
pop
addr16
les
ins
addr16
sub
mov
xor
jbe
gs
call
push
pop
inc
xchg
(bad)
mov
and
inc
jns
das
scas
cmps
fisub
mov
push
cmc
std
ret
out
(bad)
cmps
rcr
ret
movs
cmp
sub
aad
jecxz
out
std
mov
retf
mov
les
(bad)
sbb
outs
xor
icebp
mov
sbb
jecxz
fs
ret
std
adc
xchg
adc
(bad)
ins
mov
push
out
aaa
mov
icebp
out
mov
and
xchg
dec
retfw
ret
dec
xchg
iret
dec
xchg
push
aas
push
cmp
push
cld
xchg
adc
adc
in
pop
sbb
mov
clc
adc
xchg
popa
outs
mov
ficom
fcomp
dec
ret
mov
outs
hlt
dec
jg
push
outs
aas
jp
mov
pop
xor
(bad)
ja
gs
and
jno
std
iret
outs
in
pop
xchg
pop
push
fcmovne
dec
in
das
push
xchg
dec
(bad)
out
mov
cld
(bad)
icebp
xor
cmp
pop
pop
ds
ret
xchg
inc
jp
xchg
clc
mov
imul
and
and
fistp
pusha
pop
mov
sub
out
aam
(bad)
mov
jmp
ins
jle
addr16
out
out
iret
aam
jbe
push
pop
das
shr
xchg
mov
push
leave
mov
leave
xchg
jno
jne
sti
mov
and
and
add
(bad)
ret
jmp
fisttp
mov
leave
lahf
inc
dec
lods
(bad)
loop
xchg
inc
je
adc
repz
jl
test
lea
xchg
fistp
fsubp
xchg
cmp
mov
push
mov
pop
nop
mov
pop
addr16
mov
jecxz
(bad)
(bad)
lea
mov
mov
aas
retf
and
ss
jl
jo
jmp
gs
mov
das
fld
fwait
push
test
loop
jno
es
push
jmp
icebp
jg
xchg
je
das
mov
add
shl
lahf
in
(bad)
aaa
imul
mov
jp
sub
mov
xchg
cmp
(bad)
(bad)
mov
sti
adc
mov
dec
pop
or
out
test
sub
inc
xor
adc
dec
sbb
loope
std
fbstp
xor
pushf
xchg
jbe
mov
jge
adc
pop
les
std
jg
mov
mov
mov
and
mov
ss
nop
rol
adc
inc
icebp
and
je
xchg
out
push
call
cmp
or
jae
fmul
scas
jmp
cmp
stos
jp
xor
in
outs
(bad)
(bad)
sti
push
outs
movs
and
add
cmp
retf
and
(bad)
retf
dec
fucom
mov
jb
inc
xor
inc
jo
jmp
pop
stos
fs
xchg
push
adc
jl
lds
pop
push
out
mov
(bad)
jge
mov
add
adc
jecxz
in
xor
scas
jg
xlat
loopne
pop
pop
call
jb
aad
sar
xlat
jecxz
(bad)
pop
or
jo
loopne
lahf
inc
jb
pop
cli
cmp
mov
jne
outs
pop
xchg
int
xor
adc
retf
mov
xor
or
cmps
loop
mov
mov
jae
lods
push
lods
les
cmp
xchg
(bad)
adc
xlat
in
daa
mov
or
push
sbb
dec
ins
pop
jmp
cld
pop
lods
scas
daa
sbb
cmp
test
xlat
mov
jnp
(bad)
jg
inc
adc
call
lods
or
int3
dec
mov
and
les
and
add
jg
retf
in
outs
push
cmps
push
sbb
clc
add
inc
dec
(bad)
xchg
jae
mov
or
ret
ins
cs
fucomi
movs
add
ret
mov
sub
(bad)
mov
inc
dec
movs
ror
repnz
xchg
cmp
or
xchg
jae
stos
cli
(bad)
fcmovnu
cmp
movs
repnz
cld
dec
in
inc
rcr
sti
xchg
fwait
fs
mov
mov
outs
imul
scas
hlt
pop
cld
pop
imul
fldlg2
xor
mov
mov
std
outs
lock
imul
sub
call
fistp
das
mov
pop
mov
fwait
pop
call
cmp
sti
(bad)
fs
test
call
jo
(bad)
xchg
xchg
fld
mov
sub
fs
jg
jg
out
gs
std
mov
mov
mov
sahf
add
pop
mov
sbb
inc
pop
pop
adc
mov
(bad)
dec
enter
sub
in
adc
xchg
rcr
aaa
sahf
call
aas
jl
call
ret
call
icebp
ins
mov
xchg
mov
jg
repnz
jmp
mov
in
xchg
add
cli
pop
or
call
sub
(bad)
(bad)
inc
ret
add
jne
xor
xchg
sub
pop
jmp
cld
ud0
retf
neg
cmps
push
lods
stc
loopne
dec
inc
adc
je
in
jb
enter
mov
sbb
aam
push
push
loop
call
out
mov
fistp
xor
stos
repnz
icebp
mov
adc
arpl
cmp
push
hlt
mov
enter
shr
hlt
popf
fs
inc
hlt
call
jne
mov
std
outs
jl
xor
jno
cmps
sub
call
sbb
in
pop
dec
mov
in
mov
out
dec
push
xchg
js
push
and
or
imul
dec
pop
mov
fldenv
xlat
loop
mov
jae
jbe
out
push
pop
sbb
scas
mov
cmps
(bad)
out
push
jp
mov
lahf
xchg
(bad)
retf
lds
out
lods
adc
pop
retf
bound
jo
repnz
push
xchg
repz
ret
pop
xor
daa
data16
ins
arpl
(bad)
(bad)
jg
mov
dec
dec
adc
inc
les
mov
push
sub
pop
mov
adc
jmp
dec
retf
mov
xchg
cmps
xchg
mov
cli
pop
ins
dec
dec
sub
add
std
fld
ss
jns
pop
xchg
mov
cmp
xchg
mov
pop
ds
mov
mov
popa
cwde
arpl
repnz
jg
push
call
mov
neg
retf
mov
das
shl
mov
(bad)
hlt
jbe
call
fst
and
adc
movhps
push
cs
push
in
(bad)
mov
cs
or
inc
mov
int3
(bad)
sbb
clc
aaa
jle
jb
dec
adc
inc
push
cwde
fwait
scas
outs
add
(bad)
call
mov
std
jl
adc
push
or
sar
pop
mov
sbb
outs
cmc
mov
js
cmp
mov
arpl
sbb
scas
iret
neg
mov
imul
inc
xor
lea
push
mov
repnz
ins
push
sbb
xchg
inc
test
cmp
sub
cmc
add
repz
arpl
jmp
jnp
(bad)
mov
jl
xchg
adc
aam
mov
inc
sub
mov
popa
and
adc
clc
inc
jg
mov
outs
sbb
dec
lahf
mov
jae
mov
and
pop
sti
fwait
outs
sti
and
sar
cmp
pop
neg
pop
fsub
cld
push
std
out
stc
mov
or
(bad)
push
je
ja
xlat
mov
cld
or
inc
inc
mov
pop
dec
fs
jg
ja
in
dec
cmp
clc
ret
aaa
sbb
jmp
enter
jo
xchg
xor
aam
outs
clc
pop
clc
adc
lahf
mov
push
sbb
dec
retf
inc
or
fdivrp
or
pop
mov
mul
mov
gs
xor
mov
add
sub
retf
hlt
outs
repz
cs
stos
mov
mov
mov
dec
inc
push
movs
js
push
inc
jo
mov
in
mov
mov
sub
(bad)
(bad)
jg
mov
xor
cld
cmc
push
stos
cmp
out
xchg
sbb
pop
jmp
xor
cmp
ror
mov
jne
jns
add
imul
mov
ds
fbstp
mov
xor
test
jne
xor
lea
stc
mov
retf
mov
mov
ficomp
div
push
repz
or
fnstcw
out
imul
cmp
rcr
fs
lds
jg
loope
dec
(bad)
retf
jecxz
outs
adc
cmp
loopne
scas
nop
pop
aad
inc
jmp
pusha
stc
jo
jmp
adc
jo
add
dec
jb
jns
nop
xor
or
ins
call
mov
mov
and
pop
mov
lods
inc
into
cmp
or
jmp
push
add
fimul
or
cwde
and
fdivr
inc
shr
pop
loop
cmp
cmps
mov
fucomi
or
loopne
loopne
or
lds
inc
shl
jg
mov
or
sahf
push
mov
pop
in
fstp
xchg
shl
loop
adc
mov
mov
loop
fild
std
loope
pusha
in
retf
ins
and
lods
sub
(bad)
add
mov
into
dec
sbb
movs
push
adc
cmp
dec
mov
fild
sbb
xor
add
mov
(bad)
inc
xchg
test
inc
jmp
sub
or
pop
je
hlt
iret
cmp
xchg
repz
jns
shr
(bad)
pop
mov
out
mov
test
xchg
lock
aad
sti
repnz
rcl
xor
fisub
or
mov
cwde
inc
pop
popf
dec
push
inc
aaa
stos
je
push
jo
outs
adc
inc
or
out
lahf
push
out
inc
rcr
js
outs
adc
add
fistp
stc
or
je
nop
scas
or
push
lock
mov
or
adc
shr
mov
adc
jne
stos
jnp
out
paddd
iret
pop
push
retf
ss
addr16
sahf
pop
leave
add
xchg
(bad)
cli
mov
jl
mov
fst
xchg
les
dec
adc
cdq
mov
lahf
xor
repz
out
sub
jecxz
mov
arpl
lods
div
call
and
cmps
sbb
mov
out
push
cmp
xchg
sbb
mov
or
pop
xlat
loope
mov
leave
inc
jae
xchg
pop
loope
sub
mov
aaa
jbe
inc
in
xor
loope
push
imul
data16
stos
into
retf
std
pop
or
xor
movs
shr
daa
outs
cmc
pslld
arpl
pop
fst
dec
cld
jge
not
xor
push
mov
push
cmp
out
movs
hlt
sbb
mov
push
pop
push
lods
mov
inc
call
pushf
inc
adc
inc
dec
cld
dec
push
movs
jg
(bad)
cmp
mov
xchg
mov
(bad)
push
fiadd
cli
mov
mov
jmp
je
cmc
call
cld
cmp
mov
mov
mov
lods
sub
jg
inc
das
push
int
fdivp
xchg
add
mov
or
cmp
xchg
aas
fs
lods
or
outs
data16
gs
push
inc
cs
ja
(bad)
inc
out
mov
or
mov
mov
or
scas
add
int
xchg
scas
push
push
cmp
dec
push
aas
push
and
pop
(bad)
fidivr
test
(bad)
call
imul
loope
inc
add
push
xchg
adc
lods
test
sub
lock
dec
jne
pop
sub
outs
neg
movs
(bad)
lods
(bad)
mov
lods
pop
outs
dec
mov
xchg
and
or
(bad)
out
and
add
xor
fldenv
sub
cmc
aaa
clc
pop
xor
jecxz
inc
loop
pop
dec
pop
mov
scas
cmp
and
movs
lods
mov
aad
cmp
mov
pslld
dec
push
push
cmps
mov
mov
pop
lods
jmp
test
lds
sbb
sub
jmp
test
jle
fwait
gs
(bad)
jne
add
movs
in
jbe
sub
dec
aad
pop
lea
call
inc
fldenv
fcom
(bad)
jmp
cdq
mov
cmc
in
mov
loope
cld
inc
in
stc
lods
aaa
fs
mov
cli
popf
into
je
nop
lds
(bad)
or
sub
out
mov
stos
push
mov
enter
jae
xchg
test
xchg
cmp
lahf
jge
das
icebp
push
aad
mov
sbb
imul
xor
jmp
pop
mov
(bad)
(bad)
pop
daa
add
outs
mov
jmp
add
pop
stc
in
idiv
call
mov
fld
ins
stc
xchg
mov
ret
test
and
xor
jbe
arpl
pop
loopne
leave
push
cmp
or
popf
add
push
push
repz
sar
aaa
(bad)
das
cmc
and
repnz
sar
or
mov
(bad)
daa
das
sub
daa
jne
add
inc
(bad)
jg
mov
mov
push
cmp
mov
or
xchg
js
dec
mov
mov
adc
data16
pop
jp
lods
(bad)
jo
mov
jmp
icebp
addr16
cwde
sub
icebp
ffreep
(bad)
jo
sbb
scas
adc
and
inc
mov
(bad)
es
xlat
dec
inc
pop
cmp
mov
push
(bad)
mov
es
inc
adc
iret
movs
fld
outs
mov
mov
mov
xchg
xor
jmp
dec
xor
in
pop
pop
xchg
jb
jecxz
outs
call
and
fsub
call
pop
addr16
sub
das
mov
mov
fld
dec
or
dec
std
movs
push
fisttp
cmp
leave
push
dec
xchg
cmp
hlt
jns
call
push
dec
outs
pop
push
fistp
jle
call
std
(bad)
mov
scas
add
hlt
sub
or
add
in
scas
dec
mov
push
push
fld
mov
dec
mov
mov
and
xor
repz
add
fcmovnu
push
frstor
xlat
ins
sub
in
xchg
popa
imul
pop
fdivr
retf
and
(bad)
(bad)
mov
ret
inc
ss
ds
fsubr
(bad)
fdivrp
push
push
sub
sub
mov
cwde
imul
repnz
mov
(bad)
nop
sbb
dec
mov
inc
dec
idiv
mov
ins
popf
cmp
or
jb
or
popf
pop
push
inc
(bad)
adc
jmp
xchg
inc
sub
mov
ins
mov
outs
adc
inc
std
pop
mov
lods
jae
loop
lock
sahf
jle
push
adc
(bad)
mov
and
and
pop
ffreep
sub
aas
push
(bad)
(bad)
jmp
pop
stos
add
inc
cwde
frstor
sbb
dec
mov
popf
mov
pop
or
cld
push
icebp
sbb
hlt
dec
xor
mov
sub
jmp
push
shr
jp
and
sub
inc
xchg
xchg
push
inc
xlat
fwait
ss
ret
inc
mov
pop
add
jg
adc
xchg
cmp
sti
outs
sub
jle
loopne
fisttp
fs
loope
sbb
(bad)
mov
(bad)
fild
mov
addr16
jo
retf
test
pop
sbb
xchg
push
cmp
ins
pop
jge
adc
aad
(bad)
call
push
loope
ficomp
xchg
mov
inc
clc
retf
outs
jge
and
or
mov
or
mov
push
inc
jmp
xchg
ja
das
pop
call
rcl
adc
loopne
cmp
(bad)
xchg
fidivr
test
lahf
leave
push
xchg
jecxz
sti
outs
icebp
dec
outs
das
adc
sub
and
pop
xchg
dec
call
sahf
cdq
fwait
adc
dec
repz
dec
xchg
sti
call
out
test
sub
outs
jg
pop
jge
jae
gs
(bad)
out
adc
out
mov
mov
xchg
ss
jo
xchg
shl
and
mov
retf
mov
aaa
clc
inc
movs
out
mov
push
(bad)
sbb
push
mov
das
cld
jg
repnz
imul
inc
sar
sub
in
xchg
shl
adc
aam
outs
test
adc
jo
pop
dec
xchg
lods
jmp
sbb
mov
xor
jg
pop
jnp
or
das
stos
pop
xchg
fild
(bad)
mov
fwait
shl
cs
dec
out
inc
inc
add
mov
repz
pop
loopne
addr16
loopne
adc
xor
jmp
jns
test
std
call
mov
imul
pop
jmp
xchg
push
pop
je
mov
ins
mov
(bad)
jg
inc
icebp
fadd
push
sbb
enter
pop
xchg
clc
mov
xchg
rol
mov
(bad)
sar
jg
(bad)
stc
mov
mov
mov
adc
xlat
and
inc
sti
dec
icebp
jno
push
popf
movs
pop
mov
bound
rol
(bad)
jg
fild
imul
sbb
cmp
movs
in
pop
pop
(bad)
pop
clc
(bad)
(bad)
call
ret
push
add
mov
pop
inc
xchg
test
lods
ins
das
inc
lea
test
dec
fstp
sub
jp
sub
jbe
mov
cmps
push
in
push
retf
shl
(bad)
jg
std
inc
inc
mov
jne
mov
retw
mov
mov
fwait
adc
stos
xchg
movs
mov
or
and
les
xchg
js
xchg
jg
fimul
adc
xchg
dec
fadd
(bad)
fcmovne
push
call
test
aam
mov
icebp
cmps
pop
adc
sbb
mov
cmc
int3
test
push
call
xchg
inc
cmp
inc
jg
sub
pop
(bad)
mov
inc
push
dec
add
mov
mov
adc
ja
call
(bad)
fsub
mov
dec
mov
mov
ds
imul
pop
sbb
sahf
mov
jecxz
gs
outs
pop
or
mov
jmp
dec
inc
dec
jbe
sti
pusha
dec
push
dec
fucomip
mov
mov
inc
jnp
out
dec
mov
mov
mov
pop
cli
or
test
jno
and
mov
xchg
pop
clc
(bad)
(bad)
cmp
sbb
fstp
retf
inc
inc
out
and
in
(bad)
cwde
hlt
add
push
aad
xor
add
popf
push
push
push
xchg
icebp
out
dec
inc
popf
and
inc
mov
jle
inc
sbb
scas
shr
jmp
xchg
ret
pop
xor
aad
mov
xor
neg
cli
push
mov
int
push
dec
pop
cmps
repz
hlt
stc
arpl
pop
sub
jle
xchg
ja
xchg
xchg
pop
sub
jne
cmp
je
(bad)
mov
lods
push
mov
retf
sbb
ss
dec
push
fild
lea
adc
mov
movs
push
setno
stos
push
cld
pop
call
xchg
mov
imul
stc
adc
test
repnz
outs
ror
push
sub
test
cmps
(bad)
and
mov
fisubr
jg
push
or
cld
in
loop
or
and
sub
sbb
es
adc
dec
or
daa
call
call
dec
fistp
fwait
push
push
lahf
sub
push
or
out
xor
mov
inc
cld
call
push
jae
out
adc
mov
(bad)
(bad)
call
int
(bad)
shl
repnz
dec
ins
inc
fwait
retf
jmp
inc
dec
test
bound
movs
pop
out
les
mov
outs
fdiv
mov
mov
icebp
call
mov
addr16
xor
or
push
push
ss
cmps
ffreep
sbb
push
fcomi
mov
push
mov
call
jg
call
dec
aaa
push
sar
sbb
xchg
mov
sbb
ror
or
lods
les
(bad)
adc
push
cmp
sub
pop
jae
or
mov
cs
xor
clc
sar
jmp
iret
lods
in
lahf
or
adc
cmp
xchg
repnz
push
lods
or
sbb
fsubr
pop
mov
and
lods
je
jg
push
dec
les
mov
movs
call
pusha
dec
push
adc
sbb
das
fsubr
das
ror
sub
push
sti
(bad)
mov
sahf
ins
mov
xlat
je
sbb
dec
(bad)
repnz
in
or
push
or
js
mov
mov
retf
jnp
mov
sbb
cmp
adc
retf
xlat
add
mov
ins
sbb
add
(bad)
jmp
(bad)
test
inc
mov
sti
ja
(bad)
das
mov
shl
xor
cmp
adc
and
dec
push
jo
jmp
les
push
movs
jae
jbe
(bad)
mov
outs
bnd
push
ror
pop
mov
jecxz
test
in
add
out
push
jnp
mov
jmp
inc
inc
inc
cmp
cmps
xor
(bad)
dec
mov
push
enter
push
xchg
repnz
sub
rcr
mov
test
loop
loope
movs
mov
ja
xlat
test
outs
add
sti
push
leave
mov
aaa
sub
not
cmp
cmp
jmp
std
jmp
out
cmps
iret
push
daa
enter
(bad)
outs
es
sub
in
loop
movs
stos
idiv
sbb
mov
sub
or
retf
mov
jmp
cld
jno
mov
mov
loopne
mov
push
jg
in
pop
arpl
pop
jnp
jmp
add
mov
dec
fdiv
lea
and
sti
inc
cmp
je
(bad)
aas
push
fsubr
jb
cmp
cmps
pop
aaa
ret
(bad)
push
cwde
sbb
stos
clc
sbb
(bad)
iret
jae
jne
mov
sti
loopne
loopne
inc
pop
mov
mov
pop
retf
cmp
ins
xor
push
mov
ret
jmp
gs
das
fwait
push
pop
adc
in
pop
push
mov
add
es
or
pop
loopne
pop
int
mov
pushf
add
push
sub
dec
clc
adc
mov
loope
lods
cmp
push
ret
loopne
jnp
(bad)
(bad)
in
daa
aaa
add
or
leave
xchg
push
inc
mov
inc
sub
mov
stc
xor
push
mov
dec
mov
stc
pop
div
(bad)
mov
push
(bad)
div
xor
jae
hlt
(bad)
(bad)
push
ss
(bad)
mov
(bad)
cwde
mov
sbb
fs
pop
ds
sub
call
mov
dec
mov
ror
push
or
pop
stos
cmp
frstor
and
pop
dec
push
push
dec
int3
(bad)
xlat
call
loop
jne
sti
or
mov
or
pop
sti
inc
pop
mov
cmp
sub
sbb
jmp
ss
mov
cmps
adc
jg
adc
cmp
arpl
cmp
mov
sbb
jecxz
add
imul
xchg
inc
xchg
push
imul
xchg
cmp
mov
and
inc
ret
cli
fstp
jg
call
rol
lea
das
mov
dec
fcmovnbe
jae
js
iret
mov
lahf
sub
mov
pop
test
das
adc
mov
mov
push
jb
je
stos
or
jnp
cli
call
arpl
and
push
sub
sbb
fldcw
iret
mov
cmps
mov
iret
pop
xor
aaa
mov
fisttp
popa
ins
dec
jmp
sar
out
inc
xchg
jne
adc
cmps
inc
inc
fisubr
mov
pop
inc
jl
leave
mov
cmp
adc
cmps
adc
call
pop
mov
adc
cwde
out
add
test
lock
icebp
sti
repz
inc
adc
add
fisttp
cmp
or
(bad)
in
in
les
(bad)
int
jg
(bad)
call
neg
out
movs
mov
fs
inc
retf
sub
scas
cli
call
push
pop
pop
fs
add
(bad)
xlat
jbe
mov
sbb
popa
ror
imul
or
fdivr
push
mov
xchg
or
xchg
mov
jmp
add
inc
push
retf
call
mov
xchg
or
repnz
push
cmp
jg
mov
mov
das
cmc
int
jno
xchg
outs
xor
retf
push
adc
dec
inc
mov
or
sbb
mov
sbb
loop
das
cmp
and
xor
mov
dec
add
mov
pop
pop
xchg
aaa
ret
mov
(bad)
sub
(bad)
fbld
pop
xchg
ds
xchg
pop
jmp
adc
and
rcr
pusha
ret
mov
xchg
iret
xor
rol
scas
dec
jmp
xor
ins
adc
jnp
sub
out
mov
test
clc
mov
retf
jl
data16
xor
xchg
push
call
xchg
pop
ja
mov
and
jo
and
and
dec
xor
mov
outs
sub
out
pop
adc
and
or
dec
mov
add
aas
inc
js
mov
xor
push
mov
lea
fwait
rol
inc
call
lock
and
in
fwait
data16
daa
fist
rol
(bad)
sub
or
mov
sbb
popf
sbb
dec
pop
mov
arpl
ret
sbb
ret
test
call
fwait
retf
call
or
daa
add
inc
xor
inc
pop
push
cs
mov
icebp
test
dec
das
add
push
fcmovu
pushf
test
lea
push
and
inc
cld
push
sti
je
mov
data16
sub
aam
loopne
cmp
loope
mov
hlt
sar
inc
retf
jnp
cmp
call
fst
(bad)
sbb
jle
sti
pop
scas
scas
pusha
sti
xchg
outs
sti
lds
out
jbe
adc
cmps
add
push
test
add
and
xchg
mov
ins
sbb
adc
out
rcr
adc
sub
fs
adc
add
xor
std
xchg
mov
add
xchg
sbb
arpl
(bad)
iret
adc
js
das
cmc
push
(bad)
mov
mov
dec
idiv
pop
fisub
add
pusha
inc
inc
rcr
mov
push
(bad)
sbb
jae
and
adc
iret
mov
xchg
pop
xchg
dec
dec
je
jle
loope
loop
(bad)
ins
pop
sub
sbb
dec
jne
adc
stc
push
int3
aas
jo
jmp
mov
pop
add
fild
call
pop
enter
repz
iret
adc
movs
aam
sti
shl
mov
aaa
div
xchg
retf
pop
pusha
jp
mov
out
xlat
xchg
call
(bad)
not
mov
in
mov
jmp
clc
jmp
mov
addr16
lods
xchg
lods
pop
add
jg
adc
lock
jg
dec
repnz
dec
in
mov
mov
sbb
iret
add
inc
lock
mov
movs
loopne
sahf
dec
aaa
test
rcr
pop
fwait
rol
xchg
out
ficomp
and
add
out
jmp
jg
jl
loopne
and
aaa
or
mov
adc
mov
shl
inc
add
jmp
add
xchg
in
jl
(bad)
std
test
shl
repnz
and
arpl
cmc
mov
or
adc
(bad)
lock
scas
outs
loop
mov
ins
out
sbb
inc
div
xchg
loop
not
pop
cld
add
mov
mov
adc
cs
mov
mov
cli
mov
pop
push
es
mov
push
mov
inc
cs
push
xchg
test
repnz
jg
inc
xchg
jge
xchg
jle
jge
mov
fldenv
add
or
mov
push
xchg
or
(bad)
jmp
push
sbb
div
(bad)
cld
iret
or
dec
not
xchg
push
ds
hlt
(bad)
dec
sbb
or
add
mov
inc
adc
aaa
pop
stos
or
mul
aad
add
cli
sub
add
ds
mov
mov
inc
xor
lods
movs
cmp
test
add
(bad)
jg
rcr
clc
out
sub
cmp
mov
push
cmp
repnz
lea
(bad)
lahf
nop
xchg
or
add
pop
rcl
pop
push
(bad)
push
xor
das
sbb
jo
dec
push
cmps
mov
push
mov
out
pop
inc
ss
dec
sbb
outs
icebp
aas
add
mov
adc
mov
retf
call
sub
inc
and
loopne
xchg
xchg
inc
mov
bound
pop
clc
mov
pop
jp
xlat
xor
dec
pop
xchg
lods
mov
aas
and
jb
sub
arpl
sub
int3
inc
inc
test
add
sbb
mov
stc
out
in
imul
mov
les
rcl
je
lea
fild
enter
and
sar
push
sub
call
add
scas
mov
movs
(bad)
pop
ret
add
or
sub
jg
rcr
mov
ret
sub
retf
mov
mov
leave
mov
mov
adc
test
pop
mov
cmp
lods
in
mov
(bad)
sti
cmp
jg
xchg
and
lods
inc
and
neg
cld
jb
push
xchg
test
cmp
stc
jb
mov
sbb
xor
(bad)
sbb
aaa
jl
pop
fwait
xchg
pushf
in
(bad)
mov
aaa
jae
xchg
ror
les
les
inc
dec
xor
xor
cld
mov
call
mov
jb
lods
loope
xlat
pop
mov
fidiv
adc
shr
push
outs
jno
aas
addr16
dec
mov
popa
push
test
mov
mov
rol
(bad)
int
xlat
sbb
call
jg
fmul
and
dec
bound
sub
inc
sahf
pushf
call
rcr
cmc
je
sbb
adc
imul
loope
stos
mov
jmp
and
repnz
std
jmp
jecxz
sahf
mov
ret
daa
mov
aas
fsub
movs
lods
and
outs
or
inc
mov
sbb
daa
ins
push
dec
(bad)
call
clc
call
(bad)
jne
scas
push
or
(bad)
push
retf
mov
dec
xlat
imul
xchg
pop
mov
xchg
aas
cld
cmp
cld
test
es
mov
daa
movs
sbb
mov
adc
fsub
enter
cmps
push
outs
pop
cli
(bad)
pop
pop
test
xchg
dec
cmp
xchg
gs
retf
(bad)
(bad)
inc
fisub
daa
and
fistp
lods
retf
jb
sub
out
mov
fwait
sub
ins
mov
int3
lods
mov
mov
cld
dec
cmp
inc
push
jno
inc
nop
dec
popa
jb
push
(bad)
ret
ret
outs
and
push
and
mov
and
imul
xor
test
mul
sub
std
outs
icebp
jg
pop
push
pop
xlat
je
ficom
inc
pop
int
mov
lods
mov
ror
cmp
jmp
dec
mov
cmp
movs
sub
imul
loopne
jg
arpl
and
pop
push
je
cwde
rol
lods
aam
push
in
cmps
adc
std
mov
pop
shl
jmp
cmc
(bad)
dec
nop
sub
inc
push
sub
jae
je
mov
ret
inc
inc
sub
inc
mov
cmp
(bad)
push
and
cli
shl
loope
jecxz
mov
out
mul
inc
add
and
pop
es
adc
(bad)
mov
imul
or
jae
je
scas
mov
and
jne
adc
mov
xchg
mov
sub
push
adc
mov
in
mov
inc
inc
mov
cmp
addr16
push
not
add
xchg
mov
addr16
jg
movs
push
mov
ret
or
mov
pop
xlat
xchg
stos
dec
pop
outs
sbb
cmp
xchg
js
lods
and
pop
repnz
call
sbb
inc
pop
inc
in
repz
adc
repz
in
(bad)
(bad)
call
mov
scas
repnz
mov
mov
(bad)
jmp
dec
push
cmp
imul
adc
inc
dec
shr
cld
imul
movs
sbb
mov
(bad)
stc
mov
aaa
push
std
(bad)
jmp
pop
dec
test
arpl
clc
(bad)
arpl
das
cmc
adc
dec
adc
adc
cmp
xchg
hlt
and
(bad)
dec
in
bnd
sbb
fstp
jl
in
(bad)
(bad)
sub
and
add
(bad)
(bad)
cmp
mov
add
and
jp
pop
push
cmp
(bad)
in
sub
mov
ret
push
iret
adc
lds
ret
arpl
sub
add
and
cli
call
or
inc
mov
cdq
mov
rol
arpl
(bad)
(bad)
push
or
test
mov
xor
imul
dec
xchg
and
mov
mov
fwait
test
shr
popf
xlat
pop
jmp
gs
inc
ret
ins
cmps
loop
or
xchg
or
sbb
arpl
mov
adc
mov
push
mov
jns
mov
or
fistp
cmc
(bad)
pop
stc
popf
adc
loope
inc
xchg
xchg
jmp
out
(bad)
dec
ficom
jno
loope
pop
jecxz
nop
movntps
or
jns
sahf
push
adc
ins
adc
mov
sub
fs
jno
jmp
or
outs
fs
mov
mov
push
add
gs
je
sbb
mov
jb
mov
jmp
pop
loope
inc
retf
cmc
pop
cld
outs
cld
jmp
adc
(bad)
mov
movs
pop
test
call
inc
pop
outs
sub
rcl
js
rcr
out
inc
(bad)
stos
clc
pop
jns
call
sub
daa
pop
lock
pushf
jmp
add
in
jbe
stc
loopne
(bad)
dec
lods
inc
in
das
and
add
sbb
lock
jmp
out
outs
enter
sahf
(bad)
mov
mov
idiv
mov
mov
push
mov
push
cmp
pop
push
sub
cmps
movs
push
fsub
out
pop
inc
retf
adc
inc
inc
lock
add
jo
cs
cmp
pop
jbe
xchg
aam
push
sbb
ds
add
leave
push
pop
and
pop
out
mov
std
retf
dec
jnp
mov
mov
add
xor
xchg
inc
call
jmp
test
mov
lds
ins
fs
daa
jbe
mov
stos
adc
sbb
std
das
push
jg
or
ja
add
bswap
sbb
in
repz
dec
and
or
into
xor
aam
push
or
ret
add
pop
clc
cmp
mov
mov
aas
loopne
jl
enter
and
add
adc
rcl
pop
popf
arpl
(bad)
or
(bad)
call
and
bound
cwde
xor
and
dec
jne
mov
jo
mov
hlt
mov
fdiv
add
imul
shr
xchg
jmp
pop
bound
aam
mov
fmul
popa
pusha
add
mov
inc
jne
add
push
sub
lock
pop
xor
mov
mov
mov
push
cmps
sbb
pop
pop
repnz
stos
bound
(bad)
sub
mov
or
jle
mov
push
jbe
sbb
aam
call
pop
out
out
sub
les
add
inc
(bad)
xchg
mov
pop
das
xor
pop
xchg
push
add
loop
das
sub
movs
out
es
inc
jg
mov
sbb
pop
cmp
xchg
mov
inc
mov
jle
inc
iret
les
fisttp
das
ja
push
mov
fwait
in
jp
mov
jecxz
push
jmp
add
out
adc
data16
loopne
mov
inc
ins
imul
inc
mov
movs
(bad)
dec
push
(bad)
add
(bad)
pop
mov
scas
push
mov
retf
jge
pop
cli
outs
call
push
cmp
hlt
lds
adc
xchg
mov
iret
mov
lods
ins
mov
into
mov
lods
adc
sub
lock
les
mov
pop
iret
inc
ins
inc
add
retf
loope
and
ret
xor
push
pop
pop
mov
dec
ins
jbe
cs
dec
std
out
nop
std
arpl
test
outs
daa
imul
jg
cdq
mov
ret
jo
add
pop
dec
(bad)
push
arpl
fistp
pop
pusha
jg
xor
aaa
mov
aaa
dec
mov
loope
and
add
sub
cld
lods
(bad)
shl
mov
xor
test
xchg
add
inc
(bad)
sub
mov
movsx
(bad)
cld
push
fwait
daa
sbb
daa
inc
into
xchg
adc
call
in
pushf
popf
push
fwait
lock
inc
not
nop
popa
les
cwde
ret
xchg
call
(bad)
inc
test
lds
adc
call
popf
lock
xchg
lea
adc
std
xchg
mov
and
inc
iret
xchg
das
dec
cwde
push
mov
jmp
movs
mov
fld
dec
in
mov
call
pop
lahf
add
loope
jmp
mov
mov
inc
sub
inc
dec
aam
(bad)
sbb
fistp
ficom
lods
sub
add
inc
mov
or
popf
dec
mov
fcmovnu
dec
push
fisubr
mov
imul
jecxz
cld
nop
adc
loop
cs
sbb
cmps
xor
loopne
(bad)
(bad)
(bad)
cmp
pop
add
call
ds
out
and
int3
arpl
cmp
xchg
cmc
call
xor
mov
pusha
adc
add
jnp
loopne
mov
jo
jns
mov
jg
xchg
neg
out
addr16
dec
cmp
mov
xchg
fcmovnbe
xchg
clc
scas
xchg
inc
push
pop
sub
sbb
jecxz
jecxz
mov
test
icebp
sub
dec
cli
or
lods
aam
mov
ret
or
ror
nop
jae
call
icebp
mov
std
daa
and
rcr
int
(bad)
out
scas
iret
mov
fist
inc
mov
retf
xor
mov
pop
xchg
daa
jl
fwait
or
das
pop
push
cld
(bad)
jmp
mov
cwde
pop
inc
or
add
pop
and
mov
repnz
inc
jge
outs
nop
xchg
add
and
xlat
sub
ja
sahf
mov
and
push
mov
test
ja
fcom
or
push
add
pop
loop
jecxz
pop
sub
xchg
stos
sbb
idiv
aam
fst
fimul
sar
sub
bswap
or
inc
pop
cli
ds
pushf
xor
fbld
inc
mov
push
jcxz
xor
stos
pushf
sub
adc
test
mov
fdiv
mov
xchg
mov
dec
cmp
call
scas
loop
ss
xlat
inc
icebp
in
stos
push
bound
mov
inc
or
xor
out
cmp
dec
and
adc
sar
xchg
scas
das
aas
clc
(bad)
fmul
inc
mov
fwait
icebp
sar
mov
jl
addr16
(bad)
add
shl
stc
mov
in
ss
sti
je
pop
sti
cmp
(bad)
push
test
xchg
out
lds
ret
add
dec
jge
ds
mov
cmp
aaa
push
in
cs
add
or
mov
or
dec
pop
(bad)
inc
iret
outs
je
outs
xchg
jmp
mov
aam
stc
jmp
into
pop
sbb
outs
outs
jp
xor
cmp
out
add
jg
es
out
rcl
jno
or
xor
and
test
scas
mov
inc
and
push
enter
sbb
xchg
and
cwde
cmp
adc
fnstcw
(bad)
(bad)
add
and
lock
enter
repnz
inc
fwait
dec
neg
mov
cwde
push
adc
inc
mov
cmp
push
add
cmp
adc
repz
or
cmps
jbe
sbb
test
arpl
dec
fild
fisttp
mov
and
mov
mov
icebp
pop
add
xor
repnz
mov
popa
mov
push
stos
sti
sbb
inc
jns
xor
loopne
add
inc
jo
ja
xchg
push
fwait
dec
aaa
fisttp
fsub
xor
xchg
stos
(bad)
out
jmp
movs
popa
dec
sbb
xchg
popf
inc
inc
or
stc
call
(bad)
(bad)
(bad)
mov
stc
dec
sti
inc
es
fcom
mov
mov
lock
push
das
xchg
cli
lea
pop
adc
stos
lods
imul
stos
ret
jmp
les
imul
das
cli
inc
es
jb
mov
aas
adc
shl
xor
fild
ffree
push
pop
cli
jbe
(bad)
jg
xchg
mov
ffreep
dec
out
fst
jb
call
cmp
or
mov
test
fmul
push
jnp
sar
scas
mov
add
cmc
cld
aad
aaa
call
jl
jg
dec
mov
cmps
mov
ficom
shr
inc
out
dec
int3
movs
lods
loope
cmps
push
popa
fldenv
sti
add
push
imul
xchg
lock
loope
nop
outs
sbb
call
push
inc
inc
or
or
sbb
ins
pop
inc
push
in
inc
sub
div
mov
aas
pushf
cmps
repnz
enter
sbb
sbb
fisttp
inc
std
mov
sbb
outs
xchg
test
sbb
jmp
ret
popf
or
lock
lea
adc
xlat
loope
out
(bad)
dec
dec
mov
call
sub
paddsb
(bad)
imul
pop
and
in
pop
cmp
mov
jno
mov
xchg
movs
dec
in
push
dec
pop
mov
push
mov
mov
imul
xchg
retf
ret
jo
(bad)
stc
lods
std
mov
lea
adc
push
aaa
das
ja
mov
push
aaa
movs
out
dec
jne
push
lods
mov
data16
mov
mov
mov
not
or
sbb
ins
inc
repnz
pop
(bad)
and
es
aaa
push
pop
arpl
and
dec
xlat
jns
xchg
adc
mov
mov
mov
scas
dec
mov
sbb
add
fldenv
arpl
mov
(bad)
(bad)
call
adc
popa
stos
cmp
mov
scas
mov
pop
enter
jp
mov
mov
adc
jae
stos
call
mov
adc
push
fidivr
sbb
or
mov
jno
inc
xchg
push
xchg
gs
int
(bad)
inc
leave
pop
sbb
jmp
push
bound
adc
test
stos
xchg
adc
frstor
ret
mov
clc
or
call
outs
imul
fdivp
sbb
mov
aas
inc
adc
and
ret
outs
icebp
(bad)
push
push
aas
xchg
jb
ror
push
xchg
mov
mov
popa
jmp
inc
lods
jns
inc
add
dec
push
cld
push
das
jp
push
or
inc
lods
das
je
mov
jge
jmp
push
or
jg
(bad)
(bad)
or
loope
mov
jg
cmp
call
fisttp
jg
data16
popf
movs
dec
mov
mov
icebp
pop
test
add
dec
or
inc
jg
(bad)
call
adc
call
adc
cmp
jo
mov
out
pop
enter
clc
call
push
outs
rcr
add
daa
std
mov
outs
xor
ffreep
lods
adc
aam
(bad)
xchg
add
out
cmp
cmps
(bad)
mov
movs
pop
inc
sub
jle
js
mov
pop
pop
out
outs
int
les
or
jmp
into
inc
jp
jbe
mov
xor
fsub
jg
sbb
xor
xchg
inc
adc
mov
fist
mov
test
hlt
addr16
out
xor
sbb
cmps
(bad)
push
(bad)
jg
cmp
jle
arpl
int3
add
call
(bad)
retf
push
daa
push
mov
push
cli
push
addr16
clc
(bad)
cmp
xchg
jl
hlt
xchg
jo
retf
push
daa
cmp
adc
sub
lock
xor
sub
out
jle
mov
fld
js
inc
loopne
sbb
add
xchg
dec
mov
and
mov
xchg
test
or
xchg
frstpm(287
(bad)
(bad)
cmp
xor
call
sbb
call
and
mov
push
js
sti
pop
movs
ins
or
std
(bad)
(bad)
stc
push
rol
lahf
(bad)
and
int
mov
out
ins
call
clc
rep
lock
mov
aad
into
call
add
inc
xchg
adc
or
in
popa
mov
hlt
in
or
outs
cld
push
push
cwde
mov
xchg
lods
ins
ins
push
push
lahf
pop
(bad)
std
jb
jl
(bad)
jge
or
fidiv
inc
pop
das
sbb
jle
mov
xchg
clc
rol
js
mov
cmp
ret
sub
ins
mov
or
sti
xor
arpl
adc
inc
fmul
or
out
xlat
inc
pop
jecxz
shl
(bad)
and
iret
sahf
jmp
push
dec
fmul
pop
es
sub
push
or
xor
das
mov
sub
xchg
loope
push
ja
out
hlt
das
push
add
lds
xor
sbb
dec
xchg
daa
mov
(bad)
mov
mov
cli
xchg
imul
dec
inc
cli
das
fidivr
in
mov
repnz
pop
sub
sti
mov
mov
std
(bad)
jmp
pop
lahf
jecxz
(bad)
adc
int
pop
and
cdq
pop
loope
dec
add
(bad)
les
jecxz
xor
sahf
cdq
inc
jae
rcl
inc
mov
mov
cwde
mov
fbld
pop
pop
jnp
sub
mov
xor
push
jl
dec
pop
pop
mov
or
dec
push
sbb
or
sub
xor
sub
in
push
push
(bad)
call
iret
cmp
sub
inc
push
movs
xor
lds
icebp
cld
in
push
(bad)
call
inc
pop
out
cmp
inc
std
mov
and
inc
pop
jmp
mov
test
lods
inc
jnp
jb
dec
fcmovnbe
sbb
retf
sar
jg
aam
add
and
jmp
inc
mov
dec
hlt
sti
mov
add
add
lahf
fwait
ror
add
adc
out
add
jecxz
mov
xchg
xlat
mov
mov
sar
or
mov
cs
cmp
movs
mov
mov
bound
sbb
dec
push
mov
pusha
cld
in
fild
push
add
div
(bad)
cmp
push
fild
mov
arpl
call
cmp
adc
xchg
mov
cmp
(bad)
aaa
add
(bad)
mov
mov
sub
test
out
mov
(bad)
sti
test
pop
lods
sbb
std
(bad)
lods
add
sahf
fxch
aam
test
or
and
repz
adc
cmp
cmp
call
ss
rol
mov
popa
mov
jns
mov
mov
add
sub
arpl
add
aas
stc
pop
std
cmps
or
add
scas
hlt
sbb
bound
fldenv
mov
inc
mov
mov
inc
mov
mov
push
jns
pop
pop
pop
mov
mov
and
push
mov
call
push
das
mov
mov
mov
sbb
and
fisubr
movs
imul
mov
popa
mov
dec
xchg
jb
jo
ret
jmp
xchg
arpl
out
inc
aam
jo
sub
adc
lahf
cmc
mov
jl
adc
mov
ss
(bad)
sbb
or
test
mov
add
(bad)
pop
add
jle
pop
jg
faddp
mov
push
cmps
retf
inc
aaa
test
sub
nop
dec
ins
mov
sbb
stc
push
(bad)
call
pop
loop
sub
or
repz
ja
movs
mov
jecxz
xor
jle
aam
jg
sbb
jmp
pop
bnd
push
push
cmp
xlat
fisttp
inc
fcmovnb
lods
adc
sub
bound
jmp
iret
jmp
jge
outs
push
lds
mov
adc
ror
nop
inc
scas
cld
stos
dec
inc
mov
js
pop
xor
outs
cmc
or
and
mov
out
fnstcw
in
dec
inc
(bad)
xlat
lods
call
mov
lahf
mov
shl
not
test
fistp
or
aas
or
jo
hlt
jb
pop
jecxz
(bad)
data16
push
es
jl
xor
movs
inc
jg
jmp
mov
pop
and
or
inc
xlat
dec
mov
mov
pop
sub
push
or
push
ficom
not
cld
lahf
mov
jecxz
mov
stos
jp
mov
cmps
mov
mov
mov
mov
mov
sar
or
dec
or
sub
std
outs
hlt
(bad)
jmp
pop
ds
inc
mov
scas
fild
fwait
jbe
sub
add
cld
mov
jecxz
mov
mov
movs
dec
rcr
mov
pop
and
ror
jae
in
test
push
ja
xchg
movs
test
mov
pop
push
pop
pop
add
mov
shl
dec
(bad)
aas
push
lahf
inc
retf
retf
xchg
aaa
lds
into
sahf
and
(bad)
jge
out
and
mov
arpl
mov
mov
(bad)
adc
jg
jecxz
xchg
inc
aas
sbb
je
mov
xchg
mov
in
out
jle
sti
fidiv
adc
fcomp
sbb
cmp
test
iret
mov
stos
repnz
sti
inc
stos
test
lock
push
jg
das
inc
arpl
mov
fidiv
cmp
push
add
rcl
loope
dec
(bad)
setle
jp
sahf
or
jp
int
retf
fs
sbb
cmc
mov
jns
jg
test
mov
inc
xchg
mov
test
imul
inc
sub
lods
(bad)
mov
and
and
in
xchg
lods
ss
xchg
xlat
sar
fbld
mov
leave
aaa
inc
in
popa
jae
sbb
mov
xchg
out
cmp
pushf
fld
jg
lea
fcmovnbe
fnstenv
rol
mov
aaa
jg
or
adc
jmp
fs
jo
je
mov
dec
cld
sbb
shl
or
out
xchg
mov
sar
aam
fstp
sbb
mov
add
addr16
lahf
mov
fucomi
(bad)
fucomip
jbe
test
arpl
jns
cmp
mov
(bad)
jmp
dec
popa
outs
xlat
pop
xor
push
dec
scas
pop
pop
mov
shl
pop
arpl
add
sbb
sbb
dec
(bad)
movs
fcomi
sbb
call
mov
enter
es
mov
jg
popa
xor
lods
cs
jnp
jle
mov
mov
xchg
dec
dec
sbb
jmp
and
arpl
clc
push
push
arpl
mov
aad
mov
and
fild
adc
jmp
cmp
push
jmp
retf
cmc
mov
cmp
xor
idiv
int
mov
add
loope
adc
(bad)
enter
das
adc
enter
push
xor
push
jnp
les
cld
outs
or
je
mov
sti
pop
add
jecxz
add
mov
mov
xchg
outs
xor
dec
mov
pminsw
aaa
pop
add
into
and
dec
push
mov
lods
bound
(bad)
repnz
dec
fild
outs
cmps
sub
aas
je
es
cmc
xchg
(bad)
(bad)
out
mov
mov
inc
jecxz
ficom
xor
outs
icebp
add
sub
and
or
push
mov
outs
push
mov
fadd
nop
adc
dec
sbb
icebp
jg
aaa
push
mov
mov
les
loop
or
add
xor
push
sbb
test
inc
sbb
mov
dec
jbe
out
cmp
pop
adc
test
(bad)
rol
rcl
fsubr
shr
sbb
mov
nop
add
sti
xchg
sar
fild
sbb
xchg
push
stc
push
lods
mov
loopne
jbe
lock
mov
in
or
lods
push
xlat
push
adc
sub
loopne
into
call
gs
(bad)
rcr
mov
fdivr
cmps
sar
mov
out
div
add
lea
cld
test
bound
cmp
cmp
mov
pop
cmps
ret
cmp
out
(bad)
sbb
je
or
test
push
pop
repz
enter
xchg
and
test
inc
or
fcmove
iret
fidivr
jnp
or
add
std
adc
in
xchg
lock
outs
xchg
push
cmc
inc
les
in
xchg
dec
sar
pop
push
iret
cmc
addr16
xor
push
mov
addr16
pop
add
xchg
arpl
push
pushf
inc
inc
clc
in
jae
(bad)
(bad)
sbb
pop
mov
loope
sbb
(bad)
dec
loope
or
adc
lods
xchg
fisubr
mov
fild
sbb
dec
cmp
fdiv
outs
sbb
ret
call
inc
adc
and
mov
mov
adc
push
popa
arpl
aaa
aaa
jnp
fisub
add
jg
ds
xchg
stc
sub
test
jbe
ins
xchg
clc
dec
les
xlat
pop
ja
gs
adc
out
pusha
scas
add
cdq
push
mov
cmp
pop
xor
jg
out
pop
mov
adc
retf
or
leave
jg
mov
jns
js
in
repz
lock
test
pop
iret
icebp
jne
sbb
jmp
cld
fmul
mov
or
lods
jmp
and
stc
cld
sbb
jecxz
adc
stc
cmp
cmp
sub
ins
loop
mov
aaa
push
dec
(bad)
fstp
lods
mov
test
js
push
adc
sub
shl
scas
int3
fcom
push
mov
movs
sahf
mov
xchg
adc
sub
(bad)
jge
pop
outs
imul
push
psubd
data16
sub
add
sbb
test
imul
pop
(bad)
stos
and
in
scas
fstp
(bad)
xchg
fnstcw
pop
inc
sub
xlat
xchg
aad
sbb
mov
dec
mov
push
push
rcl
cld
rcl
fistp
test
repz
dec
hlt
fdivr
cmp
adc
out
fisub
das
cmp
test
xchg
lods
mov
xchg
out
imul
xchg
out
cs
movs
or
ds
ins
stc
cs
xor
es
retf
es
and
les
xor
cmps
inc
mov
leave
xor
fiadd
retf
bndldx
test
and
fiadd
ins
int3
sub
ret
cmp
pop
ins
cld
in
retf
add
test
jl
sbb
fild
fstp
jl
or
ror
cmp
jb
xchg
pop
xchg
inc
jg
and
mov
test
push
(bad)
mov
in
ror
sub
sbb
jne
retf
pop
or
cmp
jle
out
and
daa
into
jns
inc
and
clc
inc
sbb
jno
cli
and
sbb
xor
(bad)
sahf
ds
call
sar
inc
dec
nop
jns
out
or
cs
lahf
movs
xchg
loopne
shl
fild
pop
loopne
mov
mov
ds
imul
(bad)
push
outs
xchg
frstor
das
cli
aaa
clc
jg
in
pop
inc
add
fiadd
sub
jmp
fwait
xor
shufps
adc
in
ds
mul
lea
shl
(bad)
aas
fs
push
dec
fbld
ficomp
cmp
push
test
inc
(bad)
ins
jne
ds
mov
sbb
adc
mov
or
ret
fistp
xchg
fcom
mov
rcr
fild
test
daa
outs
hlt
push
std
pop
mov
mov
xchg
call
sbb
(bad)
pop
stos
or
push
add
shl
imul
sbb
sbb
call
mov
js
aad
jmp
dec
arpl
in
pop
pop
fist
push
or
sahf
out
push
loope
sub
mov
add
pusha
mov
pop
(bad)
mov
sub
outs
mov
stos
sbb
pop
std
lea
sub
leave
jp
jge
outs
jo
arpl
mov
pop
fiadd
mov
mov
xlat
xor
mov
jge
mov
sbb
repnz
mov
jp
call
call
cli
inc
cmp
pop
xor
pop
pop
lods
pop
push
lds
sub
adc
rcr
in
dec
push
outs
(bad)
mov
cmp
mov
push
cld
jecxz
shl
sbb
mov
(bad)
movs
outs
std
test
jle
movsx
jecxz
mov
pop
sub
dec
out
inc
adc
(bad)
fisttp
dec
xchg
out
call
ds
xlat
mov
xchg
sub
mov
or
jbe
enter
neg
or
loop
jecxz
mov
inc
fwait
dec
add
shl
and
call
inc
add
lds
push
mov
(bad)
out
xor
stc
pop
mov
pop
scas
movs
in
leave
sbb
(bad)
loope
outs
ficom
fisttp
xor
push
data16
stos
repnz
jmp
out
add
retf
cmps
iret
daa
je
das
fs
xor
(bad)
mov
mov
xor
retf
scas
ret
stos
dec
loopne
rol
and
pmulhuw
add
or
aam
dec
inc
addr16
jp
jp
shr
mov
xor
sub
mov
push
jl
mov
fist
sub
mov
jnp
xchg
aaa
js
sub
(bad)
pop
sub
cli
adc
fbld
cmps
inc
xor
mov
pop
loope
xchg
jmp
adc
dec
pop
das
add
leave
or
cmps
push
movs
mov
jmp
mov
cmp
cmp
cmps
data16
mov
adc
mov
stc
add
jae
adc
adc
xchg
jmp
jae
sub
jbe
jle
fild
adc
ret
in
cmp
cmps
stos
adc
fs
mov
add
mov
stc
mov
jp
xor
push
ja
sub
out
loope
daa
cmps
movs
add
dec
xor
adc
call
clc
fstp
or
push
data16
cmp
xor
add
fwait
and
arpl
cmc
push
movs
xor
mov
or
fild
and
mov
dec
add
mov
dec
cld
add
mov
loop
aaa
sbb
cmp
shl
lea
cmps
iret
(bad)
cmps
std
loop
scas
dec
lock
gs
mov
adc
movs
fsubr
or
push
fldenv
pop
and
fs
jecxz
shr
and
ins
dec
adc
mov
dec
(bad)
ror
aas
cmp
push
jb
cmps
mov
(bad)
inc
xor
jno
xor
mov
xor
adc
les
cmps
movs
ss
(bad)
jns
in
jmp
mov
scas
and
mov
mov
mov
dec
clc
(bad)
mov
cmc
and
call
jmp
stos
sbb
xlat
add
test
mov
xchg
outs
(bad)
mov
enter
pop
lock
dec
adc
dec
je
mov
(bad)
fisttp
leave
test
or
push
stos
or
fcom
xchg
jmp
test
pop
(bad)
loopne
mov
pop
aad
les
call
inc
mov
pop
clc
(bad)
cmp
lea
pop
dec
mov
loopne
lock
aaa
add
(bad)
fdiv
jp
xor
arpl
lods
sub
push
aas
mov
paddusb
dec
shr
fwait
ins
lea
mov
pop
shl
cmps
scas
dec
rol
adc
add
dec
pop
sar
daa
imul
arpl
pavgw
pop
fsub
or
mov
outs
popf
(bad)
xchg
std
call
call
xchg
and
ins
call
repnz
push
scas
outs
xchg
stc
adc
clc
pop
mov
or
call
mov
rcr
cmp
push
sbb
fucomip
add
mov
add
jbe
movs
(bad)
call
aaa
out
pop
ins
ficomp
int3
push
cmp
cmp
jne
push
jp
lds
xchg
pop
add
fucomi
sbb
jecxz
ja
push
movs
xor
pop
mov
aaa
std
std
idiv
imul
adc
icebp
jl
mov
fisttp
jne
je
adc
(bad)
(bad)
jmp
dec
test
pop
cs
neg
sub
pop
leave
sbb
push
fwait
push
jmp
mov
mov
int
pop
or
or
inc
sub
hlt
xchg
sub
pop
repz
push
pop
push
xchg
imul
rcl
lods
push
add
ror
mov
cli
lods
outs
arpl
mov
jge
cmp
movs
out
call
das
or
bound
rep
push
pop
leave
add
cmp
jecxz
(bad)
sar
es
mov
pop
jp
mov
out
push
mov
clc
leave
xchg
iret
adc
call
sar
push
mov
push
fs
repz
dec
sub
sub
cmp
adc
mov
pop
inc
mov
test
mov
call
loope
fistp
xor
push
dec
les
not
dec
push
in
mov
push
gs
icebp
add
add
pop
mov
add
mov
lea
sub
(bad)
push
dec
lds
and
inc
fisttp
mov
jmp
add
aas
lods
add
fldl2e
sub
icebp
pop
jg
or
adc
lea
sahf
and
aas
test
xor
lock
call
lahf
or
push
les
mov
std
mov
push
dec
and
inc
out
dec
cs
and
and
mov
cmp
adc
lea
mov
mov
xor
mov
clc
adc
pop
jp
cmp
add
cwde
jne
(bad)
jg
mov
ror
cmp
test
adc
add
(bad)
fstp
cmp
dec
sbb
or
jb
or
jmp
pop
(bad)
xchg
call
mov
mov
and
sbb
push
icebp
jae
cmp
sub
adc
xchg
daa
inc
lock
js
jnp
mov
adc
cmp
add
in
push
jecxz
cmp
les
mov
inc
jo
sbb
ss
enter
(bad)
sar
mov
hlt
in
icebp
aaa
mov
sbb
stc
idiv
jno
add
(bad)
fnstenv
mov
jns
mov
es
xor
sbb
iret
pop
fisttp
mov
jo
xlat
pop
js
sub
test
imul
cli
xchg
pop
(bad)
pop
out
mov
jle
mov
or
mov
mov
xchg
cmp
shl
arpl
mov
add
std
fisttp
scas
jmp
inc
loopne
adc
daa
add
adc
jne
out
jnp
sbb
inc
mov
fiadd
(bad)
fisttp
repz
cmp
repnz
adc
outs
and
outs
fdivr
out
adc
test
xor
aam
jg
stos
fcmovnu
mov
or
mov
mov
xchg
out
imul
mov
scas
xchg
pop
dec
rcl
scas
xchg
int
test
in
add
cdq
push
and
pop
or
jg
mov
and
cs
adc
imul
sbb
push
pop
hlt
(bad)
jg
out
pop
movs
(bad)
arpl
cmp
sub
inc
mov
cmp
pop
add
xchg
inc
daa
fldenv
mov
and
mov
aam
jb
jae
push
in
or
daa
xchg
mov
addr16
and
adc
ds
call
pop
mov
arpl
pop
std
ficomp
fdivp
mov
xchg
mov
mov
pop
and
test
and
mov
aaa
inc
cld
fcomp
cmp
push
shr
lea
xor
push
bound
mov
dec
hlt
jge
fild
(bad)
xchg
xor
ss
dec
mov
imul
dec
inc
adc
aas
mov
repz
movs
pop
jp
sti
nop
lods
ins
in
mov
mov
and
mov
sbb
call
fdivr
cwde
hlt
ds
mov
mov
push
aaa
xchg
call
sub
fdiv
(bad)
fistp
dec
aam
mov
pop
shr
(bad)
cmp
fldenv
sub
lock
loope
scas
dec
movs
inc
mov
mov
out
pop
std
xchg
lods
cwde
add
mov
in
(bad)
imul
and
call
retf
sbb
mov
sbb
sub
sar
pop
in
mov
jg
std
test
add
xor
or
call
jmp
retf
mov
xchg
movs
das
sbb
xchg
push
jecxz
mov
inc
add
add
call
arpl
xor
cmp
sar
movs
inc
inc
add
fcomp
jecxz
push
xchg
jecxz
mov
jecxz
clc
push
out
(bad)
enter
mov
(bad)
jg
(bad)
addr16
xchg
movs
call
mov
aaa
sahf
lods
pop
sti
pushf
or
adc
inc
movs
data16
inc
xadd
rcl
mov
test
out
(bad)
pop
dec
jle
(bad)
call
push
pop
ss
bound
jnp
sub
mov
scas
fcos
or
pop
pop
inc
loope
gs
sub
(bad)
(bad)
mov
outs
mov
stos
(bad)
sbb
sti
inc
push
fnstenv
cmc
push
mov
xor
or
mov
ja
mov
cmp
push
sub
dec
push
ins
sbb
xchg
and
xchg
jl
in
pause
pop
mov
cmp
(bad)
movs
ficomp
nop
addr16
dec
sahf
loop
push
lock
push
inc
sbb
mov
lods
xlat
sbb
mov
(bad)
mov
sar
jg
inc
shl
jecxz
movs
test
cmp
(bad)
call
mov
fdivr
retf
jmp
popa
mov
rep
push
mov
pop
sbb
jne
js
mov
sbb
lods
add
dec
jne
inc
sbb
jge
or
dec
mov
aaa
cwde
jbe
lea
je
push
mov
xchg
dec
push
imul
and
les
or
aaa
outs
icebp
dec
pop
repz
pop
icebp
add
sbb
sub
call
into
xchg
jnp
push
fistp
cli
in
fld
xor
inc
popf
push
(bad)
fisubr
and
mov
(bad)
push
mov
mov
fwait
push
repnz
cld
mul
bound
add
(bad)
jmp
jb
imul
add
add
xchg
mov
sub
in
inc
imul
xchg
push
and
into
push
js
sub
push
mov
(bad)
mov
pop
mov
fidiv
mov
cli
dec
inc
jbe
(bad)
(bad)
jmp
and
adc
imul
pop
aas
mov
cmps
push
or
loopne
idiv
pop
xchg
push
out
in
imul
pop
clc
pop
retf
rol
arpl
sub
pop
je
adc
outs
sub
cs
pop
(bad)
cmp
and
mov
pop
std
das
push
lock
mov
xchg
inc
rcr
ds
mov
lods
adc
inc
xchg
mov
int3
out
scas
mov
(bad)
jg
cmc
sub
push
mov
scas
mov
sbb
das
lahf
outs
(bad)
(bad)
mov
xchg
dec
mov
pusha
adc
dec
jns
int3
jne
and
jle
pop
cld
(bad)
push
inc
rcl
jns
cmp
out
inc
pop
(bad)
jbe
inc
fild
inc
call
and
leave
xor
push
xchg
lock
push
pop
inc
jne
xlat
(bad)
(bad)
inc
mov
mov
xor
(bad)
int
mov
(bad)
mov
(bad)
aad
pop
jg
scas
adc
xchg
daa
sbb
dec
push
inc
enter
outs
inc
dec
mov
int3
push
xchg
das
loop
pop
movs
enter
(bad)
(bad)
call
adc
imul
retf
mov
pusha
int
out
ins
mov
fsubrp
(bad)
push
movs
dec
pop
ins
sub
and
push
jl
push
das
test
xor
cmps
jnp
mov
pop
and
xor
inc
jge
or
scas
mov
sbb
cld
daa
cwde
push
test
pop
setle
adc
mov
call
inc
push
add
push
and
jg
pop
push
int3
popf
pop
pop
out
push
dec
jg
call
mov
push
jnp
mov
popf
lods
pusha
push
jmp
adc
(bad)
call
stos
pop
dec
push
ret
jne
mov
(bad)
fidiv
into
pushf
scas
jbe
stos
inc
and
adc
movs
jb
lahf
or
dec
adc
(bad)
std
test
repz
aas
jmp
jge
or
fistp
push
pop
cli
(bad)
ret
mov
in
pop
(bad)
sti
in
mov
fcomp
inc
pop
cld
cmp
or
shr
cmp
jnp
test
in
(bad)
(bad)
in
xor
cmp
or
jb
call
add
nop
sub
and
mov
push
jecxz
call
test
xor
adc
mov
inc
mov
out
loop
pop
jg
outs
out
cmp
outs
std
fild
in
dec
inc
jecxz
in
rcl
adc
mov
icebp
dec
and
ret
es
push
inc
rol
inc
mov
jp
xor
retf
mov
push
push
add
push
or
or
jge
add
sub
inc
(bad)
dec
clc
sbb
and
jg
jg
jg
jg
jg
jg
jg
jg
pop
cld
jmp
jg
inc
into
inc
cli
inc
clc
inc
inc
cmp
mov
cwde
xor
sub
push
xor
push
(bad)
push
(bad)
xor
fnsave
xor
xor
xlat
xor
push
sbb
repnz
xchg
in
jbe
scas
in
(bad)
in
mov
xor
add
test
test
aad
pop
test
test
test
test
test
test
test
(bad)
jmp
test
sbb
das
sbb
pop
sbb
dec
pop
push
lods
(bad)
(bad)
call
pop
lock
les
push
(bad)
cli
inc
(bad)
out
(bad)
(bad)
pop
push
call
(bad)
iret
test
and
fdiv
fsubr
fdivr
add
call
fsubr
aam
aam
aam
aam
aam
ds
aam
(bad)
call
inc
or
int3
icebp
test
retf
icebp
xlat
icebp
sbb
sbb
rcr
adc
shl
aaa
dec
ret
dec
shl
pop
xor
or
mov
outs
mov
or
or
xor
cmp
out
sbb
sbb
(bad)
(bad)
jg
jg
jg
cmc
jg
jg
jg
jg
jg
inc
mov
inc
push
inc
adc
pop
call
inc
and
inc
and
(bad)
ja
test
mov
jge
adc
xor
sbb
imul
xor
jae
sub
dec
in
mov
in
lods
in
fs
jo
xor
test
test
test
test
add
sbb
in
sbb
sbb
retf
(bad)
(bad)
dec
sbb
pop
sbb
jae
push
sbb
ds
jge
(bad)
call
inc
pop
sbb
rcr
pop
(bad)
pop
jne
cmp
pop
movs
pop
sbb
fcomip
(bad)
call
pop
pop
pop
or
iret
mov
xor
(bad)
iret
cld
iret
xor
jnp
pop
loop
fcomp
fsubr
(bad)
(bad)
fadd
fcom
fmul
fdivr
fcomp
fsub
aam
clc
sbb
mov
aam
push
push
aam
aam
aam
pop
inc
push
(bad)
push
pop
push
data16
lods
icebp
call
icebp
adc
repz
rcr
rcl
rcr
sar
xchg
mov
or
(bad)
pop
mov
sbb
push
sbb
and
fwait
sbb
sbb
push
xor
jg
jg
jg
jg
jg
jg
pop
fimul
mov
inc
ret
inc
mov
lds
xor
sbb
fbstp
pop
xor
push
in
mov
cmp
xor
in
dec
in
fdivr
movs
(bad)
jne
paddsw
jno
in
shr
mov
cmp
out
cmp
pop
mov
pop
pop
gs
je
mov
stos
fadd
into
aam
(bad)
fucomip
adc
mov
aam
aam
aam
aam
aam
aam
imul
clc
(bad)
jmp
push
or
inc
icebp
cmp
or
rcl
shl
shl
ror
shl
rol
aad
not
fild
or
or
or
jg
or
or
sbb
sbb
and
mov
sbb
sar
xchg
jg
ja
sbb
jne
clc
jg
cmp
gs
(bad)
push
cmp
inc
push
inc
inc
push
inc
ret
inc
add
inc
test
clc
(bad)
inc
inc
push
inc
fwait
inc
cmp
fdiv
mov
xor
sub
dec
dec
inc
xor
in
(bad)
test
test
test
test
(bad)
call
dec
sbb
mov
xor
pop
stos
iret
push
iret
jmp
sub
fs
jg
dec
and
cmp
fadd
fsubr
out
fcomp
fsubr
fsubr
(bad)
fmul
inc
fcom
(bad)
sub
cs
fcom
outs
adc
fsub
int
or
aam
jmp
add
push
call
or
call
jg
inc
cwde
inc
in
inc
fld
add
xor
outs
in
(bad)
jge
cmp
mov
mov
test
sbb
sbb
jmp
sbb
pop
pop
push
iret
outs
iret
sbb
aaa
iret
std
iret
out
xchg
fcom
std
inc
(bad)
call
fdivr
retf
aam
aam
push
push
cld
sbb
icebp
add
jle
jnp
ds
retf
rcl
sbb
or
out
or
sahf
or
ins
or
out
fucomi
or
add
jmp
sbb
inc
in
aaa
test
sbb
sbb
cmps
cmps
xchg
sbb
sbb
sub
(bad)
fisttp
jmp
sbb
aaa
add
pop
neg
pop
sbb
test
jecxz
pop
fs
call
ja
clc
pushf
jmp
(bad)
jns
mov
push
cmp
sbb
jmp
ins
cmp
(bad)
iret
mov
fdiv
fsubr
push
push
mov
push
(bad)
icebp
push
push
sahf
retf
fbld
sbb
xor
or
cmp
mov
repz
aam
aam
push
(bad)
(bad)
mov
mov
inc
movs
inc
test
jne
cmp
inc
dec
inc
int3
fstp
push
and
add
fcomip
xor
fidiv
dec
in
push
in
jns
jecxz
fwait
in
test
in
add
inc
gs
or
or
das
cmc
mov
mov
inc
or
and
(bad)
fbstp
dec
jbe
stos
or
or
and
or
int3
(bad)
(bad)
mov
inc
outs
sub
in
(bad)
sbb
in
out
inc
dec
inc
in
jmp
js
inc
fwait
(bad)
cmp
push
iret
mov
cmc
dec
repz
pop
iret
movs
iret
push
iret
add
or
iret
pop
iret
dec
div
ja
ja
push
inc
iret
push
iret
cmps
iret
adc
iret
clc
iret
ret
(bad)
(bad)
fbstp
lahf
arpl
iret
stos
iret
mov
jecxz
sub
imul
iret
and
mov
clc
jmp
iret
sahf
iret
dec
iret
or
fcmove
int3
iret
pop
adc
mov
jmp
jmp
inc
iret
push
iret
push
iret
fwait
mov
mov
aad
stos
and
pop
jp
add
fistp
inc
pop
hlt
(bad)
dec
fild
adc
movs
adc
jmp
cmc
jmp
cmp
xchg
mov
add
or
pop
(bad)
(bad)
mov
inc
xor
aaa
push
jle
push
dec
jno
popa
sbb
jmp
xor
and
data16
xchg
into
std
mov
in
mov
pop
pop
imul
nop
push
or
sub
push
mov
mov
jg
and
adc
in
sub
push
test
(bad)
(bad)
(bad)
mov
test
je
pop
sub
data16
ja
xor
in
pop
test
push
sub
out
mov
push
mov
lock
ss
cmp
sub
(bad)
push
add
in
popf
dec
cli
dec
mov
jns
imul
dec
cs
(bad)
add
mov
push
xor
sub
pop
push
jns
push
dec
dec
test
or
(bad)
(bad)
jg
jle
dec
push
adc
adc
(bad)
push
pop
ja
sub
ja
mov
pop
repz
stos
dec
inc
jp
or
fdivrp
fld
inc
jge
xchg
adc
jg
sub
jg
ds
nop
pop
sbb
nop
xchg
outs
call
push
clc
mov
jecxz
and
fwait
mov
push
cmp
cmp
pop
ss
adc
pop
mov
loopne
adc
imul
xchg
pop
ds
(bad)
(bad)
in
add
fiadd
mov
add
xor
mov
sbb
imul
addr16
xchg
xor
push
or
jmp
sub
add
push
mov
jecxz
or
pop
or
sti
push
shl
mov
pop
fwait
dec
loop
sar
push
int
in
pusha
mov
jg
fucomi
(bad)
mov
jge
or
cli
inc
bound
jmp
add
(bad)
(bad)
mov
dec
jb
fs
ja
sub
jns
arpl
pop
push
jb
bound
jns
test
(bad)
ja
inc
ja
push
inc
xchg
add
ins
das
aas
imul
pop
jp
inc
test
jbe
xlat
add
daa
sbb
fisttp
cmps
mov
jp
mov
into
sbb
dec
sbb
dec
es
sub
add
jns
loopne
or
add
call
sub
push
icebp
(bad)
(bad)
clc
cs
(bad)
mov
mov
movs
and
push
pand
fist
push
mov
push
pop
pextrw
js
fst
mov
add
xor
push
add
cmc
pop
sbb
jmp
pop
mov
cmp
and
mov
popa
shl
xor
ficom
(bad)
jg
jge
mov
movs
nop
push
add
outs
adc
scas
nop
popa
pop
(bad)
arpl
(bad)
(bad)
jge
nop
pop
sub
dec
push
or
add
inc
sub
ja
mov
pop
inc
mov
xor
addr16
push
sbb
outs
call
cmp
sbb
jmp
popf
stc
cmc
scas
iret
inc
movs
sti
out
jge
or
mov
das
sbb
push
jg
adc
lods
jns
jg
inc
adc
neg
or
idiv
inc
imul
adc
push
popf
stc
mov
jle
and
clc
or
mov
fisubr
sub
mov
iret
pop
test
in
mov
inc
or
pop
mov
imul
add
dec
not
popf
ds
nop
jl
arpl
xchg
pop
lock
push
jg
(bad)
repnz
xlat
das
aad
xchg
mov
and
shl
jns
outs
cld
(bad)
jns
xor
call
loop
test
and
aas
inc
loope
jg
sub
scas
imul
fnstsw
adc
lds
xchg
mov
(bad)
into
and
retf
fsubrp
jb
xchg
clc
outs
lea
(bad)
fwait
out
lock
jmp
fwait
and
es
das
push
gs
add
add
sbb
hlt
aaa
imul
pushf
inc
loope
fwait
jnp
jp
jp
daa
pop
mov
xor
in
pop
dec
add
jmp
into
jmp
(bad)
xchg
xor
neg
lock
sub
push
pop
sub
jg
in
(bad)
cmp
fst
lock
repnz
lea
(bad)
mov
pusha
cmp
or
jecxz
das
mov
mov
dec
aaa
pop
sti
pusha
fld
push
ds
push
(bad)
(bad)
pop
js
nop
pop
fcmovne
js
push
sbb
adc
push
popf
jl
push
mov
inc
mov
dec
sbb
dec
cld
xor
mov
inc
stos
or
in
popa
hlt
sbb
(bad)
int
cld
arpl
inc
les
into
fcomip
bound
cs
cmc
fistp
sub
imul
stos
pushw
lahf
(bad)
pop
iret
push
push
(bad)
jg
mov
adc
imul
jg
lds
sub
dec
cli
or
dec
js
pop
mov
je
hlt
xor
inc
inc
jns
jae
ja
(bad)
pop
je
daa
outs
mov
xchg
sub
(bad)
nop
data16
xchg
jnp
adc
std
sub
addr16
jg
out
fistp
inc
adc
xor
adc
icebp
(bad)
(bad)
imul
loop
int3
pop
cld
xchg
ds
(bad)
ja
mov
daa
inc
cs
adc
(bad)
movs
or
jae
imul
adc
jnp
inc
dec
lock
test
test
and
(bad)
nop
push
add
ret
push
or
out
or
inc
fdivr
int
ins
outs
jae
dec
popa
outs
fs
gs
popa
je
inc
jbe
outs
je
or
push
inc
imul
aas
fstp
push
jb
arpl
jae
push
push
lods
fs
adc
imul
mul
fld
outs
outs
push
dec
inc
imul
jbe
cmovl
jb
jb
inc
sub
jae
inc
jl
mov
aaa
mov
or
ins
div
add
je
xorps
dec
dec
gs
push
sbb
push
gs
jne
arpl
push
data16
xlat
ja
inc
outs
jb
int
fldenv
and
gs
jbe
xchg
push
dec
cmps
mov
je
outs
addr16
push
sbb
adc
inc
hlt
inc
inc
push
pop
inc
jae
sub
outs
jb
aaa
adc
daa
pop
dec
adc
fcomp
out
adc
xchg
jge
push
cmp
gs
div
jne
push
fisubr
popa
dec
pop
imul
sub
pop
test
or
outs
jne
imul
lahf
sub
fs
cmp
inc
inc
dec
out
call
jnp
retw
in
mov
sub
jns
pop
mov
gs
pop
push
jnp
jae
mov
mov
mov
ins
mov
adc
bound
or
ins
(bad)
popa
xchg
adc
mul
int
fisub
movs
or
or
lahf
xor
jb
inc
dec
popa
jo
mov
jne
dec
xor
mov
inc
or
mov
jl
or
or
dec
dec
aaa
frstor
sbb
pop
inc
jns
outs
push
imul
popa
popf
push
jne
jns
add
cmps
mov
mov
sub
push
popa
jns
ins
xchg
dec
mov
jo
push
gs
lea
ss
fs
or
mov
fisttp
adc
imul
push
or
(bad)
jae
push
das
sub
outs
data16
mov
cs
and
push
push
sbb
xchg
int3
stos
xor
pop
imul
or
push
mov
dec
mov
or
ins
retf
push
je
push
je
fwait
sub
push
adc
gs
inc
cmp
ins
je
ins
jo
push
or
or
imul
outs
or
or
mov
push
inc
add
add
mov
nop
and
sidtd
add
or
out
add
adc
nop
inc
inc
push
cmp
add
add
add
push
and
ror
adc
push
repnz
sub
loopne
push
cs
das
fmul
cli
pop
xchg
pop
nop
jmp
and
pusha
cs
mov
mov
or
add
inc
lods
cs
loop
scas
mov
pop
es
ror
or
fwait
jnp
repz
ins
or
cmp
inc
nop
adc
add
add
add
add
inc
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
xor
add
lock
adc
add
xor
add
jo
add
add
add
add
add
add
or
add
add
mov
add
mov
add
fadd
add
add
add
sub
add
push
add
add
add
js
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
ret
push
add
add
add
add
add
or
add
add
add
leave
add
call
add
add
add
add
add
or
add
add
add
add
sub
add
add
add
add
add
or
add
add
add
int
add
add
add
add
add
add
or
add
add
in
add
test
add
add
add
add
add
or
add
add
nop
in
add
add
add
add
add
add
or
add
jmp
add
add
add
add
add
or
add
lsl
test
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
and
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
or
add
add
dec
and
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
adc
adc
adc
adc
mov
mov
mov
adc
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
sub
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
adc
adc
ja
ja
ja
ja
ja
(bad)
(bad)
(bad)
(bad)
inc
adc
adc
mov
mov
out
out
adc
adc
adc
adc
ja
ja
ja
ja
ja
(bad)
(bad)
(bad)
(bad)
inc
adc
adc
ja
ja
ja
ja
ja
(bad)
(bad)
(bad)
(bad)
inc
add
mov
ja
(bad)
(bad)
(bad)
(bad)
inc
data16
mov
jle
jle
addr16
ja
ja
ja
ja
ja
pusha
ja
ja
(bad)
(bad)
(bad)
(bad)
inc
jle
jle
jle
jle
jle
pop
ja
ja
(bad)
(bad)
(bad)
inc
out
out
out
out
out
pop
ja
ja
(bad)
(bad)
(bad)
inc
jle
jle
jle
jle
jle
pusha
mov
jle
sub
out
out
out
out
out
out
ja
ja
(bad)
(bad)
(bad)
inc
jle
jle
jle
jle
jle
jbe
ja
ja
(bad)
(bad)
inc
out
out
out
out
out
jbe
ja
ja
(bad)
(bad)
inc
jle
jle
jle
jle
jle
ja
mov
jle
adc
out
out
out
out
out
out
pusha
ja
ja
(bad)
(bad)
inc
jle
jle
jle
jle
jle
jle
pop
ja
jg
(bad)
inc
out
out
out
out
out
out
pop
ja
jg
(bad)
inc
jle
jle
jle
jle
jle
jle
pusha
mov
adc
outs
out
out
out
out
out
out
out
ja
jg
(bad)
inc
jle
jle
jle
jle
jle
xchg
jle
pop
ja
(bad)
(bad)
inc
out
out
out
out
out
out
jbe
ja
(bad)
(bad)
inc
jle
jle
jle
jle
jle
jle
ja
mov
adc
adc
out
out
out
out
out
out
pusha
ja
(bad)
(bad)
inc
out
jle
jle
jle
jle
jle
jle
jbe
ja
(bad)
inc
out
out
out
out
out
out
out
pop
ja
(bad)
inc
outs
jle
jle
jle
jle
jle
jle
ja
mov
adc
adc
fs
jno
out
out
out
out
ja
(bad)
inc
push
out
jle
data16
jle
pop
ja
inc
push
out
loopne
add
add
add
out
out
pop
ja
inc
adc
jle
jle
jle
jle
jle
jle
pusha
mov
adc
adc
out
data16
out
ja
inc
adc
out
jle
add
add
add
add
jle
pop
ja
adc
adc
adc
out
out
out
out
out
out
out
pop
ja
adc
adc
adc
outs
jle
jle
jle
jle
jle
jle
ja
ja
stos
adc
adc
adc
outs
out
out
out
stos
out
out
out
pusha
ja
adc
adc
adc
push
out
jle
jle
jle
jle
jle
jle
jbe
jg
adc
adc
adc
push
out
out
out
out
out
out
out
pop
jg
adc
adc
adc
adc
jle
jle
jle
jle
jle
jle
pusha
js
adc
adc
out
out
out
data16
out
out
data16
out
jo
adc
adc
adc
adc
jmp
mul
outs
mul
outs
mov
adc
adc
adc
adc
adc
mov
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
lock
add
add
(bad)
clc
add
add
add
(bad)
clc
add
add
add
(bad)
cld
add
add
add
(bad)
cld
add
add
add
(bad)
inc
add
pop
add
(bad)
call
test
pop
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
inc
add
sbb
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
rol
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
adc
adc
adc
mov
mov
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
adc
adc
adc
ja
(bad)
(bad)
inc
adc
ja
(bad)
(bad)
inc
add
add
add
jle
push
data16
ja
(bad)
(bad)
inc
ja
ja
ja
ja
(bad)
(bad)
inc
out
out
out
mov
outs
jle
jle
jle
jle
jbe
ja
(bad)
inc
out
out
out
pop
ja
(bad)
inc
jle
jle
jle
pusha
mov
outs
out
out
out
out
pusha
ja
(bad)
inc
jle
jle
jle
jbe
ja
inc
out
out
out
jbe
mov
out
adc
out
jle
jle
jle
jle
pusha
ja
inc
out
out
out
out
ja
inc
jle
jle
jle
jle
or
push
out
out
out
out
out
pop
ja
adc
push
out
jle
jle
jle
jle
pusha
ja
adc
adc
add
add
add
out
mov
adc
adc
jle
jle
jle
jle
pop
jg
adc
adc
out
add
add
pop
out
pop
jg
adc
adc
out
jle
jle
jle
jle
pusha
ja
adc
adc
(bad)
out
out
out
out
pusha
ja
adc
adc
outs
jle
jle
jle
jle
mov
adc
push
out
out
out
out
jbe
adc
adc
push
out
outs
out
outs
out
addr16
add
adc
adc
outs
data16
imul
test
adc
or
adc
adc
adc
adc
adc
adc
adc
adc
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
push
add
jmp
add
jmp
add
inc
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jmp
xchg
dec
(bad)
(bad)
(bad)
inc
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
adc
adc
add
add
adc
sbb
ja
jo
adc
dec
add
add
ja
jo
data16
push
jle
jle
pop
jle
outs
out
out
pusha
jg
push
out
jle
jle
jle
push
out
out
out
jo
outs
jle
jle
pop
jo
outs
out
out
pusha
jo
push
loopne
add
jo
push
out
out
jbe
adc
outs
jle
jle
pusha
adc
outs
xchg
adc
data16
add
clc
add
clc
add
rol
add
out
add
mov
add
jle
add
rol
ja
add
and
out
lock
out
add
ja
add
sub
add
sub
add
xor
add
pusha
add
add
add
add
je
lea
imul
stos
fwait
mov
inc
stos
mov
add
scas
mov
stos
fs
add
scas
mov
into
mov
add
ja
add
jbe
add
mov
test
add
in
add
jbe
pop
pop
pop
add
mov
add
mov
add
mov
sbb
imul
add
xchg
jle
retf
lods
lahf
add
mov
test
add
xchg
fs
xchg
std
mov
gs
xchg
pop
add
jge
add
cmps
js
leave
mov
jnp
pop
add
imul
add
xchg
gs
call
out
sbb
add
(bad)
push
add
xchg
push
add
xchg
pop
add
xchg
pop
add
add
call
out
xor
out
inc
add
pushf
pop
add
lods
jno
fbld
jg
pop
pop
pop
add
fwait
push
add
lahf
pop
and
mov
gs
movs
gs
mov
add
test
add
jmp
add
cmps
push
add
mov
pop
add
scas
data16
shl
sar
ret
idiv
jno
ret
add
fisubr
jmp
add
xchg
dec
add
mov
add
popf
push
add
mov
pusha
add
mov
gs
shl
(bad)
jnp
dec
add
xchg
(bad)
call
jmp
mov
add
mov
add
mov
add
mov
inc
gs
mov
mov
call
cdq
add
call
cli
add
mov
add
mov
aas
add
mov
pop
add
shl
scas
push
add
les
inc
push
repnz
jo
dec
jae
dec
jbe
dec
jnp
dec
jg
call
mov
(bad)
fsub
add
lahf
dec
add
test
dec
add
rol
(bad)
(bad)
xchg
add
fcom
add
loope
add
jecxz
add
out
add
add
jmp
(bad)
std
stc
add
and
loope
inc
add
stos
dec
add
mov
ins
add
in
lds
(bad)
in
enter
dec
add
mov
pop
add
into
jns
icebp
aam
add
out
lds
(bad)
sti
icebp
add
data16
retf
push
int3
add
hlt
fild
rcr
add
in
add
scas
cmp
leave
test
xor
add
sar
aad
cmp
mov
mov
dec
add
rol
retf
add
mov
add
ret
push
add
fistp
add
scas
and
add
mov
add
retf
add
add
mov
add
mov
sbb
add
js
ret
add
(bad)
push
add
xlat
test
mov
retf
(bad)
shr
mov
add
in
mov
add
out
ret
xlat
jnp
int3
jmp
add
neg
add
sti
lock
in
mov
cdq
loop
add
pop
add
repnz
add
clc
jecxz
jb
imul
fnstsw
mov
mov
cdq
in
add
add
add
shl
add
(bad)
fadd
and
jecxz
xor
fld
add
iret
add
mov
add
fiadd
jle
stos
add
int3
add
out
pop
xchg
add
mov
add
(bad)
inc
xchg
xchg
xchg
add
mov
add
jp
jae
jae
ins
ins
ins
add
add
pop
add
push
add
cli
cli
cli
stc
stc
daa
add
cli
cli
push
cli
cli
cli
cli
stc
clc
div
adc
and
pop
sub
sti
cli
stc
clc
test
add
or
adc
sub
and
and
pop
sub
cld
cli
stc
clc
test
and
adc
cmc
jae
dec
xor
and
and
pop
sub
cld
sti
stc
clc
add
adc
loop
loope
fsub
daa
aas
sub
and
and
pop
sub
sti
add
add
adc
(bad)
loop
fcmovbe
test
aam
pop
xor
and
and
push
pop
sbb
add
mov
add
add
adc
xchg
mov
jecxz
loop
fcom
test
test
pop
sub
add
adc
(bad)
xchg
xchg
xchg
mov
nop
aad
aam
(bad)
loop
aad
shl
add
adc
loope
loop
(bad)
mov
arpl
scas
cdq
fs
xchg
fwait
rcr
aad
loop
xchg
pop
sti
add
adc
(bad)
scas
rol
scas
mov
popa
popa
pop
gs
nop
mov
sti
push
add
and
adc
cmc
jae
xchg
xchg
dec
push
dec
aas
cmp
mov
jp
pop
pop
pop
pop
das
push
dec
cmp
pop
pop
std
cld
sti
add
add
add
and
adc
fsubp
(bad)
xchg
pop
push
inc
aas
aas
stos
movs
ins
cmp
cmp
movs
mov
xor
push
push
push
push
inc
push
dec
sub
add
add
add
and
adc
fstp
fsub
jecxz
shr
cmp
cmp
aaa
aaa
aaa
ss
jbe
sub
inc
inc
push
push
push
push
push
sti
add
and
push
stos
mov
xchg
ss
sub
es
add
adc
cmc
jae
xchg
pop
push
dec
push
push
push
inc
stos
xchg
stos
scas
mov
ins
pop
xor
sub
sub
push
push
test
add
add
and
adc
jecxz
jecxz
int
mov
push
push
stos
xchg
inc
inc
inc
inc
inc
mov
xor
sub
sub
push
data16
and
adc
cmc
jae
(bad)
jge
lods
mov
test
inc
inc
inc
inc
inc
inc
inc
xor
xor
xor
push
push
stc
add
and
adc
cmc
jae
addr16
popa
pusha
pusha
pop
pop
jp
mov
mov
inc
inc
cmp
cmp
xor
push
test
add
add
add
adc
loope
fadd
pop
pop
lods
cwde
pop
pop
pop
pop
mov
mov
cmp
dec
push
data16
add
adc
fsub
loopne
(bad)
mov
xchg
lods
cwde
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
das
dec
dec
cmp
cmp
stc
add
add
adc
arpl
popf
popf
lods
lods
(bad)
mov
pop
pop
pop
dec
dec
das
dec
dec
dec
dec
dec
push
push
test
add
add
add
and
adc
cmc
jae
push
jl
jns
ja
js
popf
ins
push
lods
lods
mov
test
dec
dec
push
data16
add
and
adc
jecxz
int3
scas
mov
lahf
outs
jns
ja
popf
js
ins
ins
imul
push
cwde
das
push
inc
inc
inc
push
push
push
and
adc
cmc
mov
(bad)
ret
mov
ins
ins
ins
imul
push
bound
push
push
push
test
add
add
add
add
adc
add
mov
mov
lods
xchg
xchg
xor
bound
push
dec
add
adc
fdiv
in
cmp
sahf
jnp
jns
ja
test
outs
outs
bound
imul
and
adc
loope
ror
leave
retf
movs
movs
les
jns
jne
jne
jne
outs
outs
outs
push
push
test
and
adc
test
mov
mov
rol
mov
sahf
sahf
jne
jne
outs
outs
arpl
add
adc
lea
mov
lahf
lahf
mov
mov
ret
mov
push
imul
add
adc
int3
scas
enter
mov
add
jl
push
xor
popa
push
push
test
add
adc
jge
mov
enter
retf
int3
retf
cmps
cmps
add
xor
arpl
cli
add
adc
push
jno
(bad)
xchg
test
shl
int3
leave
(bad)
les
add
add
adc
push
(bad)
nop
nop
(bad)
(bad)
xchg
test
mov
add
add
and
adc
(bad)
rcl
rcl
ror
retf
retf
mov
into
mov
lea
add
and
adc
jno
xchg
xchg
xchg
stos
mov
into
ror
into
ror
int
rol
cmps
cmps
cmp
add
add
adc
nop
fwait
fwait
fwait
xchg
xchg
xchg
xchg
xchg
nop
nop
retf
mov
test
mov
rol
push
push
clc
and
adc
test
fwait
fwait
pushf
fwait
xchg
fwait
fwait
fwait
fwait
retf
mov
(bad)
mov
ds
dec
add
adc
sbb
out
fwait
pushf
pushf
sbb
fwait
fwait
retf
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ds
dec
add
adc
sbb
call
call
push
call
hlt
out
xchg
xchg
xchg
adc
push
stc
add
adc
sbb
sbb
pop
pushf
pushf
pushf
bnd
jmp
or
clc
add
adc
push
adc
jmp
pmulhw
sbb
adc
jmp
jmp
test
add
lock
sbb
in
adc
push
add
adc
adc
jmp
pop
in
add
add
out
out
add
in
out
cmp
in
repz
repz
or
lock
add
mov
add
add
add
add
add
add
and
in
dec
add
in
out
add
repz
out
add
in
jmp
jmp
add
add
out
add
add
out
add
add
out
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
aas
(bad)
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
loopne
add
jg
add
loopne
add
jg
add
loopne
add
aas
inc
add
add
add
inc
add
add
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
jg
add
add
add
jg
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
loop
inc
add
add
add
add
clc
xor
add
add
cld
xor
add
inc
cmp
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
dec
add
sub
add
and
add
inc
add
add
add
add
lea
mov
call
test
add
xchg
popf
add
popf
mov
add
xchg
cdq
add
xchg
xchg
add
test
add
jl
add
cmp
xchg
xchg
add
xchg
xchg
add
mov
add
call
les
jge
ror
add
mov
call
lds
ror
add
xchg
imul
fld
push
add
mov
dec
add
mov
push
add
data16
test
enter
les
mov
mov
aaa
add
xchg
push
add
nop
pusha
add
mov
cdq
add
leave
test
add
call
mov
add
ja
add
fwait
pop
add
movs
gs
cmps
ins
add
mov
jo
sub
ins
add
sahf
outs
add
bound
(bad)
(bad)
std
add
lea
add
xchg
add
cmps
pop
add
xchg
push
add
lods
imul
clc
xlat
mov
stos
popf
pop
repz
add
lahf
push
add
cmps
pop
add
mov
ins
add
mov
jne
shl
add
fwait
xor
out
push
add
mov
sti
mov
pop
add
pushf
push
add
mov
add
mov
imul
lds
fisubr
outs
add
fild
xchg
mov
jmp
add
mov
pop
add
shl
retf
pusha
add
jo
retf
add
mov
push
add
movs
dec
add
call
fild
add
(bad)
jno
in
test
ret
add
mov
push
add
lods
push
add
rcr
retf
cld
retf
jns
cmc
enter
ror
add
aam
add
mov
add
fwait
inc
add
test
push
add
pop
add
(bad)
imul
fsubr
dec
add
pushf
inc
add
mov
xor
add
rol
add
fbld
add
out
add
fwait
cmp
mov
cmp
retf
movs
inc
add
mov
dec
add
ret
cmc
sar
hlt
aad
add
fnstenv
leave
mov
inc
add
mov
add
mov
dec
add
(bad)
arpl
ret
add
mov
xor
jecxz
push
add
enter
mov
ins
add
les
in
rol
add
icebp
retf
add
mov
add
mov
push
add
loope
add
jecxz
add
mov
bound
loop
push
in
jl
cmps
xchg
sub
aad
inc
add
enter
iret
jae
in
ficomp
add
stos
das
add
lds
in
test
out
xchg
add
retf
in
mov
icebp
in
iret
add
ret
push
add
into
jno
fcom
jp
xlat
aam
add
fist
add
call
test
into
ficom
add
out
add
cmc
icebp
add
jecxz
add
in
add
out
xlat
add
repz
add
clc
in
stos
call
les
lods
in
add
neg
add
in
stos
add
jge
mov
in
test
add
lock
popf
xchg
add
test
out
pop
mov
lds
cmp
mov
add
shr
push
xchg
stos
add
mov
gs
stos
add
jl
movs
scas
mov
(bad)
xchg
cmps
add
mov
dec
jg
add
jns
add
add
add
add
(bad)
cld
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
and
ss
(bad)
sti
cld
add
add
add
add
add
add
add
aad
add
add
sbb
xor
xor
and
and
and
and
push
cld
add
add
add
add
add
add
add
add
adc
loop
loopne
rcr
and
sub
es
add
add
add
add
add
add
sbb
fsubp
out
call
xor
xor
sub
cld
add
add
add
add
add
add
adc
fndisi(8087
loope
xchg
jg
rcl
(bad)
fsub
loop
ror
push
adc
add
add
add
add
add
sbb
(bad)
in
(bad)
stos
test
xchg
xchg
mov
daa
add
add
sbb
add
add
add
or
fadd
(bad)
jae
outs
test
mov
pop
sub
inc
inc
push
add
add
add
pop
adc
out
call
outs
push
inc
inc
push
ja
jbe
inc
cmp
push
push
popa
daa
add
add
add
or
jmp
mov
inc
inc
inc
push
sub
sub
std
add
add
add
adc
rcr
into
push
jo
and
sub
cld
add
add
add
or
jecxz
iret
cdq
xchg
lahf
xchg
cmps
mov
dec
dec
dec
pop
imul
xor
add
add
add
sbb
fucompp
inc
dec
pop
jno
jp
movs
xchg
movs
xchg
xchg
mov
das
cmp
add
add
add
pop
adc
jmp
mov
outs
outs
xchg
xchg
aaa
cmp
xor
pusha
cld
add
add
add
sbb
jae
lea
mov
gs
cmp
cmp
add
add
add
or
call
jnp
mov
mov
inc
inc
push
arpl
add
add
add
sbb
fcmovu
lods
test
shl
ins
fs
inc
dec
pop
pop
cld
add
add
add
add
or
(bad)
pop
jge
jl
je
mov
mov
sahf
inc
dec
pop
dec
push
add
add
add
add
pop
adc
shl
mov
data16
js
push
dec
pop
push
push
add
add
add
add
sbb
pushf
nop
(bad)
lods
lods
enter
mov
cmps
cmps
mov
data16
cld
add
add
add
add
pop
or
ret
pushf
jg
jg
lods
jge
xchg
pop
push
add
add
add
add
add
pop
dec
jle
(bad)
leave
enter
stos
movs
movs
movs
call
add
add
add
add
or
xchg
xchg
xchg
mov
mov
pop
push
cld
add
add
add
add
add
adc
int3
mov
retf
scas
scas
fwait
fwait
jl
dec
bound
add
add
add
add
add
adc
mov
retf
mov
mov
dec
arpl
add
add
add
add
add
adc
popf
mov
int
xchg
xchg
xchg
xchg
xchg
xchg
pop
add
add
add
add
add
sbb
xchg
cli
in
mov
add
xchg
dec
lds
add
add
add
add
add
sbb
push
pop
repz
stc
icebp
lds
and
div
cld
add
add
add
add
add
aas
adc
pslld
or
add
or
repz
add
add
add
add
add
aas
out
out
repnz
out
cmc
clc
imul
repz
in
icebp
add
add
add
add
add
add
add
sub
in
add
in
test
out
dec
add
out
adc
hlt
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
(bad)
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xadd
add
rol
pop
rol
pop
rol
xadd
add
rol
xadd
add
rol
pop
rol
pop
rol
aas
rol
aas
rol
aas
rol
jg
add
jg
add
jg
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
push
adc
(bad)
(bad)
(bad)
(bad)
(bad)
js
add
sub
add
adc
add
and
add
add
or
mov
add
xchg
mov
add
cdq
mov
fwait
(bad)
mov
xchg
jge
add
mov
add
pop
add
jbe
add
lea
cmps
jp
add
lods
mov
ret
jl
add
mov
fcomp
jb
(bad)
test
ror
ins
add
mov
add
mov
ins
add
retf
mov
add
mov
add
movs
ins
add
int
add
popf
dec
add
mov
(bad)
lea
jmp
add
cdq
outs
add
int3
stos
lods
int
mov
lds
fs
mov
jno
shr
push
add
shl
(bad)
mov
add
mov
add
mov
add
aad
add
shr
int3
shl
xchg
mov
add
fwait
dec
add
xchg
dec
add
mov
popa
add
ret
mov
int3
les
add
movs
dec
add
mov
inc
add
stos
aas
add
mov
dec
add
scas
dec
add
popf
inc
add
popf
dec
add
mov
add
mov
add
mov
inc
add
mov
push
add
rcr
stos
push
add
mov
popf
add
mov
add
cmps
inc
add
add
inc
add
mov
push
add
les
out
leave
imul
int3
jae
cwde
mov
in
inc
add
mov
pop
add
(bad)
fs
int3
je
fstp
add
rol
add
mov
test
neg
pop
repnz
add
rcl
les
in
push
out
jnp
in
fcom
add
xchg
mov
add
into
jno
loope
xchg
loopne
jo
in
jle
in
fcom
add
fist
add
into
jp
loop
test
out
lahf
add
loop
add
aam
add
fistp
add
jecxz
add
fbld
add
jmp
(bad)
jmp
add
jmp
add
in
rol
test
add
not
add
cli
rol
sar
fiadd
iret
(bad)
fiadd
mov
mov
add
rol
mov
mov
add
add
fadd
add
inc
add
add
add
stos
add
add
push
add
push
or
add
add
add
add
add
sbb
or
or
add
add
add
cmp
xchg
mov
or
add
add
add
xchg
nop
inc
dec
push
imul
sub
and
and
adc
add
xchg
jp
pop
dec
aas
inc
xor
add
add
xchg
pop
dec
pop
pop
inc
inc
inc
pop
adc
add
add
push
push
ins
pop
dec
push
dec
sbb
add
inc
xchg
ins
fs
push
dec
and
and
add
add
jle
bound
pop
pop
push
xor
add
outs
jne
jnp
popa
data16
add
add
add
jg
jge
jl
jns
sub
add
add
add
jo
ja
xor
and
add
add
and
aaa
arpl
add
add
add
cdq
pushf
cdq
add
add
add
add
add
add
add
add
add
add
add
add
aas
fucomp
sbb
cmp
add
add
push
add
popa
add
add
pop
(bad)
or
mov
loopne
inc
or
sub
(bad)
inc
add
pop
add
sub
add
xor
add
pusha
add
add
add
add
dec
add
dec
or
dec
pop
dec
dec
dec
inc
dec
dec
dec
dec
dec
pop
dec
dec
dec
dec
dec
inc
dec
dec
dec
inc
dec
dec
dec
aaa
dec
dec
dec
sub
dec
dec
and
dec
sbb
dec
adc
dec
push
dec
dec
dec
or
dec
push
dec
dec
dec
add
dec
dec
add
dec
add
dec
add
dec
add
add
add
dec
add
dec
cmovge
cmp
dec
js
dec
dec
cwde
dec
dec
dec
xchg
dec
dec
dec
xchg
dec
dec
dec
nop
dec
dec
dec
test
dec
jb
dec
dec
pusha
dec
dec
dec
push
dec
dec
dec
inc
dec
dec
dec
cmp
dec
cs
dec
dec
and
dec
sbb
dec
adc
dec
cmovge
or
dec
pop
dec
dec
dec
add
dec
dec
add
dec
add
dec
add
dec
add
add
add
dec
add
inc
sub
addr16
arpl
dec
mov
dec
dec
dec
(bad)
dec
dec
dec
enter
int3
dec
dec
dec
leave
dec
dec
dec
mov
dec
dec
dec
stos
dec
dec
dec
popf
dec
dec
dec
mov
dec
jns
dec
dec
fimul
dec
push
dec
dec
dec
dec
dec
dec
dec
inc
dec
dec
dec
xor
dec
and
dec
dec
dec
adc
dec
dec
adc
dec
or
dec
dec
pop
dec
dec
dec
add
dec
dec
add
dec
add
dec
add
dec
add
add
out
mov
mov
cmps
cmps
(bad)
jmp
std
out
push
cld
ret
neg
pop
dec
repnz
push
dec
in
dec
dec
dec
call
dec
dec
dec
fimul
dec
aam
dec
dec
enter
mov
dec
dec
dec
cmps
dec
dec
dec
xchg
dec
dec
dec
or
dec
pop
dec
dec
dec
dec
dec
dec
dec
inc
dec
dec
dec
xor
dec
dec
and
dec
dec
dec
adc
dec
dec
adc
dec
or
dec
dec
push
dec
dec
dec
add
add
push
add
add
ret
xchg
jle
mov
cmps
cmps
push
jl
imul
mov
test
(bad)
jmp
push
(bad)
test
push
std
pushf
imul
pop
dec
not
icebp
dec
dec
dec
in
dec
dec
dec
jmp
dec
dec
dec
fimul
dec
int
dec
dec
mov
dec
dec
dec
cmps
dec
dec
dec
cwde
dec
dec
dec
or
imul
pop
dec
dec
dec
dec
dec
dec
dec
inc
dec
dec
dec
xor
dec
sbb
dec
dec
or
dec
add
add
add
xchg
jle
mov
cmps
cmps
push
cld
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
(bad)
sti
idiv
jmp
(bad)
(bad)
call
mov
cld
mov
(bad)
cld
call
cld
mov
cli
mov
std
mov
out
xchg
sar
(bad)
test
dec
cld
js
dec
clc
push
dec
dec
repz
dec
dec
out
dec
dec
dec
jmp
dec
fisttp
dec
into
dec
dec
dec
ror
mov
dec
dec
test
dec
dec
dec
jp
dec
dec
dec
dec
dec
dec
push
dec
dec
dec
pop
dec
dec
dec
add
add
add
xchg
jle
mov
cmps
cmps
jmp
call
pop
jmp
call
pop
mov
(bad)
(bad)
sti
repnz
(bad)
sti
icebp
(bad)
(bad)
cli
out
(bad)
(bad)
in
(bad)
(bad)
fstp
(bad)
fistp
pop
(bad)
dec
push
(bad)
std
mov
xrelease
fdiv
(bad)
lods
arpl
js
dec
stc
push
dec
dec
repz
dec
dec
out
dec
dec
dec
jmp
dec
(bad)
dec
mov
dec
dec
dec
xor
dec
dec
or
dec
dec
add
add
add
add
add
xchg
jle
mov
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
cli
out
dec
lock
call
fnstsw
pop
aam
call
push
(bad)
jg
jns
cdq
loop
dec
out
mov
call
in
mov
push
fdivrp
jmp
(bad)
(bad)
dec
cmps
(bad)
stc
mov
pop
(bad)
dec
push
(bad)
std
mov
test
dec
std
bound
hlt
dec
dec
dec
aad
dec
dec
xchg
dec
dec
dec
aas
dec
dec
dec
adc
dec
add
add
add
xchg
jle
mov
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
(bad)
std
stc
(bad)
(bad)
cld
idiv
(bad)
cld
cmc
(bad)
(bad)
sti
repnz
(bad)
sti
icebp
(bad)
fyl2x
retf
(bad)
mov
loop
jmp
pusha
dec
call
push
call
out
dec
jmp
(bad)
push
(bad)
push
fdivr
push
(bad)
(bad)
(bad)
call
lods
(bad)
cli
stos
jl
stc
xchg
popa
(bad)
cld
mov
rcr
dec
dec
dec
fmul
dec
popf
dec
dec
dec
dec
dec
dec
dec
sbb
dec
or
dec
push
dec
dec
dec
add
dec
add
dec
add
dec
add
add
add
xchg
jle
mov
cmps
cmps
call
repnz
jmp
mul
(bad)
(bad)
std
stc
(bad)
(bad)
cld
idiv
(bad)
cld
cmc
(bad)
(bad)
sti
repnz
(bad)
in
sar
inc
cmp
into
nop
(bad)
(bad)
fsub
jmp
jmp
movs
in
(bad)
jg
jb
gs
pop
call
push
push
call
call
mov
(bad)
push
retf
jmp
dec
dec
jecxz
dec
dec
scas
dec
dec
dec
push
dec
dec
ds
dec
dec
sub
dec
pop
dec
dec
dec
pop
dec
dec
dec
adc
dec
or
dec
dec
dec
push
dec
dec
dec
add
add
add
xchg
jle
mov
cmps
cmps
(bad)
mov
in
push
jno
pop
aam
jmp
arpl
jg
jnp
cdq
jecxz
jmp
ror
(bad)
(bad)
mov
jo
(bad)
mov
dec
(bad)
jmp
(bad)
call
(bad)
(bad)
(bad)
fisub
(bad)
jmp
mov
fild
dec
jmp
pop
push
and
dec
dec
dec
out
dec
dec
dec
ror
dec
test
dec
dec
xchg
dec
jb
dec
dec
popa
dec
dec
dec
push
dec
dec
dec
inc
dec
dec
dec
cmp
dec
sub
dec
dec
sbb
dec
or
dec
add
add
add
xchg
jle
mov
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
(bad)
std
stc
(bad)
(bad)
cld
idiv
fpatan
sar
mov
mov
cmp
jmp
cdq
jmp
stos
dec
push
mov
imul
mov
imul
(bad)
mov
cmp
ror
(bad)
jmp
mov
(bad)
out
(bad)
cmp
dec
dec
clc
dec
dec
dec
out
dec
dec
dec
fimul
dec
iret
dec
dec
dec
les
dec
mov
dec
dec
dec
pushf
dec
dec
dec
mov
dec
jb
dec
dec
dec
dec
dec
dec
pop
dec
mov
dec
dec
dec
add
add
add
xchg
jle
mov
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
(bad)
std
stc
(bad)
(bad)
cld
idiv
(bad)
cld
cmc
(bad)
(bad)
in
sar
inc
jae
icebp
mov
(bad)
fstp
pop
inc
xchg
push
jmp
mov
call
mov
lahf
(bad)
sahf
aas
call
test
push
(bad)
(bad)
mov
gs
(bad)
mov
fs
(bad)
mov
sub
shl
arpl
xchg
jp
cli
jo
push
cmc
dec
dec
dec
lock
dec
dec
in
dec
dec
dec
out
dec
dec
fimul
dec
ror
dec
mov
dec
dec
jg
dec
dec
aaa
dec
dec
dec
or
ret
xchg
jle
mov
cmps
cmps
call
pop
push
jno
cdq
in
push
lock
cld
cmc
(bad)
(bad)
fisubr
jmp
test
(bad)
fcomp
pop
(bad)
ficomp
or
call
xchg
pop
call
xchg
pop
call
xchg
pop
inc
mov
mov
cmps
xchg
call
(bad)
xor
(bad)
mov
stos
dec
jmp
jge
(bad)
inc
js
inc
js
inc
js
inc
js
inc
js
fisubr
std
test
arpl
jno
push
repnz
dec
dec
aam
dec
dec
xchg
dec
dec
dec
aas
dec
dec
dec
cmovge
add
add
add
add
add
xchg
jle
mov
cmps
cmps
mov
in
in
int3
icebp
enter
mov
jmp
arpl
mov
inc
mov
push
cmp
leave
call
mov
cmp
lds
pop
(bad)
fcom
pop
call
xchg
pop
call
xchg
pop
call
xchg
push
call
xchg
push
call
(bad)
push
dec
mov
mov
mov
aas
jmp
mov
rcl
outs
(bad)
call
mov
(bad)
inc
js
inc
js
inc
js
cmc
mov
dec
ror
dec
xchg
dec
aaa
dec
dec
dec
or
ret
xchg
jle
mov
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
(bad)
std
stc
(bad)
(bad)
cld
idiv
push
in
inc
jae
clc
mov
dec
dec
popf
dec
(bad)
mov
xchg
sub
xchg
mov
jmp
aaa
(bad)
mov
xchg
inc
call
xchg
pop
call
xchg
push
call
xchg
push
call
xchg
push
call
xchg
push
call
(bad)
push
call
mov
mov
sbb
enter
enter
(bad)
mov
lds
gs
test
int
imul
cmc
mov
dec
mov
dec
dec
dec
daa
dec
dec
dec
or
dec
add
add
add
xchg
jle
mov
cmps
cmps
dec
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
(bad)
std
stc
(bad)
(bad)
cld
idiv
jmp
mov
push
mov
jmp
test
jmp
cmps
pop
jmp
cmps
pop
jmp
movs
pop
(bad)
mov
pushf
dec
call
sahf
push
dec
call
scas
xchg
xor
sahf
mov
call
xor
lods
lea
ror
(bad)
mov
nop
gs
lea
enter
enter
enter
xchg
mov
jb
imul
js
rcr
cmps
dec
dec
dec
push
dec
dec
dec
sbb
dec
add
add
add
xchg
jle
mov
cmps
cmps
dec
dec
jmp
push
outs
inc
(bad)
(bad)
loopne
push
(bad)
fisubr
pop
(bad)
jmp
test
pop
(bad)
mov
lahf
dec
jmp
mov
pop
jmp
mov
pop
(bad)
ficomp
push
(bad)
fcomp
inc
inc
xchg
inc
jmp
mov
jmp
xchg
gs
xchg
gs
xchg
gs
(bad)
gs
mov
enter
jmp
dec
dec
dec
mov
dec
cmp
dec
push
dec
dec
dec
add
add
add
xchg
jle
mov
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
(bad)
std
stc
jmp
neg
(bad)
out
mov
dec
inc
cmps
cmp
mov
daa
jmp
sahf
daa
push
fwait
es
mov
mov
push
jmp
movs
pop
jmp
mov
pop
jmp
lahf
push
(bad)
fistp
push
(bad)
fstp
push
(bad)
ficomp
sbb
rcl
inc
gs
xchg
gs
xchg
gs
xchg
gs
cld
mov
jne
dec
dec
dec
mov
dec
dec
dec
daa
dec
dec
dec
or
dec
add
add
add
xchg
jle
mov
cmps
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
(bad)
std
stc
(bad)
(bad)
jmp
je
cli
mov
popa
push
mov
(bad)
out
mov
(bad)
out
scas
pop
jmp
lods
push
push
lahf
das
inc
mov
jmp
cdq
and
(bad)
mov
fwait
cmp
(bad)
fistp
push
(bad)
fstp
sbb
xlat
call
aad
gs
xchg
gs
xchg
gs
fbld
js
rol
dec
dec
dec
cmps
dec
dec
dec
push
dec
dec
dec
sbb
dec
add
add
add
xchg
jle
mov
cmps
cmps
dec
cwde
(bad)
mov
lock
(bad)
call
movs
(bad)
inc
je
stc
mov
popa
push
mov
push
mov
push
mov
push
mov
inc
cmps
cmp
fldcw
pop
(bad)
jmp
pop
(bad)
jmp
(bad)
fisub
inc
inc
popf
cmp
mov
xchg
and
lahf
xchg
and
mov
jbe
(bad)
ficomp
gs
call
xlat
call
inc
js
lea
loopne
dec
dec
mov
dec
cmp
dec
push
dec
dec
dec
add
add
add
xchg
jle
mov
cmps
cmps
dec
repnz
.byte
